cmc
jp
sbb
cmp
mov
popa
je
pop
or
je
clc
aad
lahf
and
lret
or
fwait
mov
out
es
cmp
loopne
pop
mul
in
cmpsl
movsb
mov
pushf
and
out
in
mov
dec
or
or
add
mov
pusha
xchg
ja
mov
ret
jns
inc
push
subl
push
push
pop
inc
aaa
push
sub
aas
mov
or
xchg
lods
sbb
lds
adc
push
add
sbb
les
pop
adc
push
aas
mov
popa
inc
les
mov
je
or
pop
xor
cld
stos
pop
fnstcw
lods
push
add
out
imul
cwtl
cmp
dec
rcll
rorl
push
inc
or
pop
hlt
dec
xchg
lcall
cmp
popf
out
addr16
arpl
lods
jmp
lods
mov
pop
out
ljmp
add
adc
mov
mov
jle
xchg
lods
shr
ss
or
andb
lret
scas
cs
dec
inc
mov
push
int3
dec
bound
cld
lcall
fcomps
dec
xchg
in
incl
dec
loop
add
jmp
adc
xor
adc
mov
mov
cli
pop
shl
xchg
xchg
push
sti
int3
sbb
sti
sbb
dec
cmc
push
into
push
jb
popf
mov
lock
dec
xchg
mov
in
ja
push
cmp
inc
pop
sahf
push
ret
int
jecxz
push
mov
cmpb
aaa
cmp
xchg
adcl
ret
xchg
enter
jmp
insb
pop
mov
lea
inc
movb
lcall
shrw
push
shl
filds
jl
scas
pusha
nop
adc
int
addr16
dec
imul
pop
gs
sti
sahf
or
imul
fidivl
add
inc
dec
pop
cld
mov
ret
jo
sbb
adc
lods
or
mov
aam
iret
std
hlt
mov
mov
faddl
or
lock
ret
sub
int3
mov
add
xchg
xor
sahf
mov
push
xlat
push
mov
ret
lock
lds
jl
and
mov
pusha
lea
call
pushf
movw
call
bt
pushf
stc
sub
pushf
call
mov
push
cmp
jmp
mov
xchg
add
es
mov
adc
jo
sbb
mov
cs
imul
out
adc
dec
std
push
mov
and
pop
mov
outsl
pop
add
xchg
pop
xchg
inc
add
jo
loope
mov
push
negb
fadds
add
lods
ljmp
int3
add
rolb
jno
pop
sahf
sub
push
mov
push
mov
inc
test
push
insb
mov
in
adc
pop
inc
das
pusha
lea
jne
push
stos
push
lea
jmp
jmp
call
lea
jae
js
pusha
pushl
mov
lea
jne
pusha
stos
movb
pushl
lea
jmp
aad
std
or
sbb
mov
cmpsb
shl
je
push
in
dec
lret
mov
movsl
pop
ficoml
in
test
fstpt
xor
stc
push
jae
insb
aas
stc
rcl
add
repnz
cmpsl
enter
popa
mov
pop
mov
xor
push
ret
fsts
sub
movb
stc
jmp
and
jmp
rolb
repz
int
xor
inc
xchg
lret
jns
cs
or
mov
jl
push
and
xor
std
lahf
stc
jo
ds
push
sti
pop
dec
jge
cli
dec
dec
xchg
inc
sub
faddl
jne
lcall
addl
out
adc
rorb
sub
inc
fisubrl
xor
mov
jnp
cmp
int3
dec
dec
lahf
negb
lcall
pop
xor
fiadds
pop
dec
test
imul
ret
std
inc
sub
orl
test
arpl
jg
xor
cld
xchg
push
sub
jns
inc
xchg
xchg
xor
jg
pop
add
out
ja
inc
cli
es
stos
cmc
sahf
push
sbbl
or
dec
jecxz
add
mov
aam
mov
pop
and
mov
cmp
aaa
fistpl
jge
and
stos
rcrl
cltd
pop
or
jp
aad
mov
inc
in
lea
lret
xchg
in
jmp
and
xchg
sbb
enter
adc
mov
repnz
ljmp
inc
inc
mov
jns
popf
adc
out
js
bound
or
xchg
enter
out
jnp
shl
mov
xchg
push
les
shlb
and
inc
and
and
cmp
add
mov
lock
adc
add
dec
out
stos
lahf
mov
daa
les
add
lock
add
lea
call
lea
jb
push
pushf
pushl
ret
call
sbb
dec
and
pop
fbstp
shlb
les
cmp
fsub
pop
adc
out
insb
and
scas
pop
ljmp
or
iret
ds
mov
mov
sahf
xor
cmp
cmp
std
clc
push
ds
sahf
or
push
dec
ljmp
jne
jbe
mov
mov
sub
out
subb
pop
scas
fldcw
outsl
loopne
pushf
cwtl
insb
fdivr
inc
rcr
adc
jmp
ja
mov
jmp
sub
mov
es
fsubr
cmpsl
ljmp
enter
pushl
addr16
sub
cmp
and
mov
jp
stos
sub
out
pop
sahf
scas
in
mov
push
cmpsb
stc
sub
out
mov
xchg
call
lock
iret
inc
stos
in
xchg
shrl
pop
push
cmp
outsb
inc
jge
or
mov
or
mov
or
insb
test
fdivs
repnz
push
pop
cmp
pop
pop
ret
dec
clc
into
xchg
push
fidivrs
xlat
fcoml
pop
dec
mov
sub
imulb
enter
push
fcompl
dec
lret
aad
mov
sub
call
test
into
push
jno
adcl
das
add
pusha
fistpl
test
into
xchg
test
mov
test
cmp
jp
sarl
sbb
pop
insb
aam
mov
fcomps
push
ficoml
test
loop
test
adc
sub
dec
mov
sub
push
test
adc
xor
add
add
sbb
test
or
mov
mov
pop
mov
int
imul
sub
sti
leave
jp
aaa
mov
lcall
mov
lret
in
pop
imul
cld
imul
in
mov
push
and
fisubl
out
loop
insl
lret
mov
cmp
jg
cld
movsl
fisubl
scas
movsb
mov
pop
sub
test
ljmp
lret
fs
sub
cmp
fisubrl
movsb
and
jmp
and
push
fucompp
and
mov
popa
pop
test
lods
cmp
fisubrl
subb
es
enter
clc
pop
stos
popa
and
mov
dec
daa
mov
sub
rcrl
inc
dec
sub
out
pop
fmulp
es
test
add
push
dec
ds
cld
insb
inc
sub
outsb
idivb
es
and
inc
jl
jo
push
daa
mov
cld
test
adc
clc
push
mov
mov
lock
das
sub
out
out
pop
pop
in
insl
imul
fsubs
dec
mov
imul
mov
lret
sbb
sbb
sub
jmp
mov
pop
or
cld
ds
fdivrp
push
out
call
out
xor
mov
ret
enter
push
or
and
inc
call
sub
sub
dec
pushf
sub
mulb
repz
and
test
stc
shll
fisubl
cmp
scas
decl
out
outsb
imulb
cmp
add
and
rol
add
pop
push
shll
sti
test
fimull
lret
int
mov
add
mov
mov
or
cs
test
sub
adcl
test
out
sti
sub
into
scas
ljmp
scas
cs
lret
and
loopne
iret
shrb
pop
stos
call
call
fsubs
std
jmp
dec
int3
dec
and
jmp
mov
movsb
pop
frstor
test
rcrl
add
insb
ljmp
dec
lds
fcomp
loope
loope
xchg
outsl
popf
sub
ror
cwtl
push
jb
cli
sbb
loopne
add
dec
in
ja
fadds
cmpsl
lret
sub
and
pop
pop
pop
out
pop
fs
fnstcw
mov
mov
mov
jb
xchg
ja
mov
out
and
lods
iret
punpckhdq
pusha
inc
aam
jmp
jb
add
lcall
jge
mov
sbb
pop
into
push
or
jmp
enter
sub
and
imul
xor
mov
jnp
cmp
dec
push
add
bound
ljmp
call
in
mov
jns
push
arpl
sub
pop
and
es
and
mov
inc
ret
std
dec
daa
mov
int3
mov
push
push
dec
outsl
in
daa
adc
push
cmp
aam
dec
in
cwtl
pushf
sahf
mov
and
mov
addr16
and
aam
sti
enter
dec
insl
sub
and
sbb
sub
mov
sub
outsb
adc
aad
insl
cmpsl
int3
pop
sub
cmp
xchg
push
xchg
stos
mov
pop
push
pop
and
lret
gs
sub
mov
xor
mov
enter
iret
push
nop
outsb
sti
lret
sub
insb
std
xor
dec
push
and
rorb
gs
and
out
enter
jecxz
mov
outsb
and
pop
int
and
sbb
pop
loope
push
jmp
ljmp
cli
mov
inc
call
sub
pop
pop
insb
out
sub
sub
out
stos
push
and
add
into
mov
shlb
dec
test
ljmp
in
push
mov
or
and
insb
mov
dec
testb
and
decb
pop
stos
and
clc
fistpl
adc
dec
out
adc
test
addr16
cwtl
and
mov
add
cli
into
fisubs
popf
mov
fsubrl
pushf
aaa
mov
mov
mov
mov
sbb
or
ljmp
imul
iret
mov
insb
out
insl
jmp
sahf
mov
sbbl
lahf
out
jmp
cs
ret
sub
movsl
push
cs
shrb
fdivrl
outsl
jmp
stos
das
jb
out
cld
mov
push
or
mov
and
sahf
xchg
pushw
loop
mov
fisubrl
mov
scas
test
int3
or
stos
sbb
and
stos
pop
push
out
mov
mov
sbb
and
fcoms
mov
clc
cltd
sub
or
or
and
popa
jge
mov
dec
mov
in
and
jmp
bound
inc
fsts
lods
cs
jno
pop
push
clc
cmp
lret
iret
jg
out
rcrb
sub
push
lcall
mov
pushf
es
outsl
jo
test
decl
aaa
fucomp
insb
popf
push
movsl
sub
pushf
outsb
xor
enter
dec
in
push
aaa
cmp
sbb
mov
pop
ret
ds
sbb
xor
nop
loop
movsb
stos
out
adc
mov
pushf
mov
scas
pop
mov
mov
mov
cmpsb
mov
test
dec
clc
stos
in
jmp
jno
mov
jbe
mov
out
pop
int
cmpsl
mov
or
scas
test
daa
out
cmp
cltd
int3
sbb
jge
xchg
sbb
in
xlat
rorb
inc
fsubrs
out
jmp
lahf
sbb
sub
sbb
and
mov
pop
push
imul
loop
gs
fucom
shlb
mov
in
mov
lods
arpl
xor
mov
scas
lcall
adc
cmpsb
add
add
mov
pop
fwait
and
scas
repnz
sub
mov
mov
daa
mov
jnp
jmp
sbb
dec
jmp
push
dec
and
test
imul
adc
push
gs
out
pop
dec
fwait
movsb
or
sub
xor
mov
int3
jl
fst
jmp
outsb
jns
cli
and
int
push
push
dec
gs
jg
pop
push
or
sub
stos
jmp
movsb
outsb
push
nop
and
pop
enter
dec
and
cmpsb
sub
push
clc
cmpsl
mov
scas
pop
lahf
arpl
int3
repnz
popa
loope
pusha
inc
mov
outsl
in
out
mov
and
das
stos
test
sub
pop
xor
lret
shll
out
rcl
mov
in
pop
push
ljmp
loope
std
in
mov
jo
sbb
int
insl
and
loope
out
or
sbb
push
iret
loopne
out
jo
ljmp
imul
and
and
mov
lcall
inc
xchg
nop
gs
imul
jmp
std
frstor
int3
and
lods
adc
and
sbb
fs
jmp
int
movsb
lock
call
stos
cmp
fstl
xchg
pusha
outsb
shrl
pusha
cld
dec
enter
shr
sub
jecxz
inc
arpl
adc
push
cltd
decl
int
aad
test
jle
cmp
popf
lret
shlb
test
adc
pop
inc
mov
test
sub
stos
je
and
jbe
or
jno
cltd
stc
adc
out
push
imul
call
aaa
pop
aas
mov
inc
adc
mov
scas
gs
imul
xchg
dec
std
mov
and
iret
ds
bound
addb
cld
jmp
push
inc
scas
pop
pop
in
jns
sub
lret
mov
shrl
arpl
incb
out
dec
push
loope
push
cli
pop
push
sbb
mov
scas
mov
and
cmp
movsb
inc
divl
test
test
lods
inc
adc
jo
test
mov
jo
int3
scas
jae
mov
ljmp
jno
or
pushf
scas
xchg
cmp
mov
js
push
icebp
sbb
insb
push
mov
pop
xchg
shl
repnz
fcmovne
push
xor
jbe
sbb
inc
or
pop
in
hlt
movb
jecxz
push
cmpsl
inc
jle
push
out
mov
pop
call
and
fcomps
sub
sub
lahf
mov
addr16
xchg
lea
cmp
fldcw
int
cmpsb
movsb
mov
or
in
movsb
scas
nop
jo
push
sbb
fwait
add
and
scas
dec
imul
and
cld
mov
mov
fs
in
sub
shrl
pop
lock
clc
ficompl
das
mov
fucomp
pop
in
xchg
mov
push
out
cmp
fisubrl
arpl
cs
cmpsl
lods
cs
cmp
bound
rorl
stos
std
cmp
and
rcl
stc
sub
xchg
fs
adc
adcl
imul
push
pop
and
arpl
fs
mov
leave
movsb
ljmp
test
lret
stos
mov
leave
dec
ljmp
mov
rcr
int
push
std
leave
ret
mov
pop
in
test
or
fs
lret
add
jmp
int3
pop
lods
out
pop
push
into
stc
bswap
pop
loope
ret
fninit
shll
mov
mov
stos
lret
insb
or
xchg
repnz
lret
mov
loopne
in
loope
movsb
roll
lret
les
dec
clc
pop
cltd
lods
daa
cmp
jmp
dec
sbb
imul
inc
push
jp
sarl
sub
push
stos
mov
jl
dec
lds
dec
out
xchg
adc
stos
jl
lret
cs
call
int3
lret
shll
sub
fisttpl
iret
stc
in
lods
pushl
cli
dec
push
pop
jle
inc
pop
aad
ljmp
pushf
rorb
jl
fsubr
int
sahf
mov
cld
mov
test
ss
pop
push
dec
int3
outsb
pavgw
aad
rol
iret
out
jecxz
call
pop
arpl
fisubrs
fdivrp
push
popa
in
push
sti
lods
inc
out
ljmp
stc
mov
dec
inc
sub
lods
mov
cs
or
xor
cmc
repnz
adc
int
mov
into
inc
or
mov
and
xchg
int3
icebp
ret
fnstsw
jmp
leave
fucomi
sahf
scas
in
mov
cs
fadds
jecxz
je
mov
cwtl
enter
das
or
fldcw
in
sub
fcoms
and
lahf
push
fldenv
sub
mov
test
test
stos
cmp
stos
sub
fldenv
call
cld
sub
dec
sub
fisubrl
enter
jmp
mov
fcoms
aam
aam
popa
sbb
cmp
or
fimull
stos
adc
dec
ss
and
lods
call
repz
lret
rcrl
orb
ds
dec
ljmp
sbb
mov
sub
fnsave
test
jmp
std
fldt
mov
in
ljmp
int3
shrb
repz
or
rolb
cmp
adc
inc
sub
lret
sub
insb
out
sub
out
sbb
enter
das
fisttpll
add
xor
sub
xchg
sahf
push
lret
cld
sub
mov
mov
push
outsb
sbb
mov
lods
cmp
add
sbb
shlb
dec
xor
cmp
inc
sub
enter
leave
pop
push
call
outsl
ja
or
or
xchg
dec
arpl
mov
jle
sbb
adc
enter
fbld
rorb
push
int3
mov
enter
test
fnstsw
sbb
test
adc
or
icebp
mov
outsl
sub
xor
fdivrs
aas
jmp
push
stos
pop
ljmp
ds
fsubs
xor
mov
enter
fstps
test
fmul
sub
pushf
sbb
mov
cs
jns
mov
jbe
mov
movsb
or
mov
addr16
xchg
aaa
repz
mov
aas
fadd
cmp
pusha
mov
aas
pop
fdivs
call
aaa
mov
fmul
cmp
pop
jl
js
and
shl
test
push
sub
clc
pop
in
sub
sub
fdivp
sub
and
insl
or
mov
arpl
les
aam
iret
mov
mov
mull
fcomps
mov
pop
fmul
sub
or
mov
fisubl
movsb
adc
and
xor
test
sub
adc
lea
add
and
call
sub
rcrl
xchg
je
mov
or
movsb
les
xchg
mov
pusha
mov
pop
das
test
fmuls
mov
call
test
stos
test
outsb
ds
sub
pusha
gs
stos
mov
stos
sub
fdivs
pop
lock
arpl
ror
ret
in
and
and
mov
lret
mov
dec
pop
dec
leave
stos
ljmp
flds
inc
in
test
ljmp
or
jmp
push
or
call
xchg
in
mov
shr
lods
sub
in
lret
sub
mov
lret
test
leave
add
pusha
lods
scas
shrl
stos
push
lret
lret
call
in
in
and
dec
leave
push
ljmp
or
sub
mov
pop
ljmp
pop
mov
mov
add
pop
popa
mov
lods
dec
push
iret
leave
inc
stos
fsubrs
xchg
sub
add
and
add
push
out
xchg
enter
lods
or
dec
lret
lods
dec
push
dec
leave
scas
ljmp
arpl
and
push
out
call
ljmp
in
dec
push
aam
fld
movsb
pop
add
jecxz
in
sub
in
pop
ret
outsl
pop
sub
leave
dec
ljmp
inc
in
bound
aam
push
out
in
les
in
inc
movmskps
ret
ficomps
ljmp
inc
in
loope
push
iret
leave
sub
xchg
lret
jmp
xchg
inc
or
push
bswap
cs
mov
test
push
test
shl
flds
add
outsl
test
or
int3
in
jmp
push
dec
mov
inc
lret
mov
movsb
pop
mov
jmp
mov
leave
call
out
movsl
ljmp
ret
adcb
out
ljmp
imul
cmpsb
push
in
cmpsl
shl
lret
shrl
push
leave
mov
dec
lods
or
sub
jmp
stos
or
flds
lds
in
and
push
cs
or
shrl
leave
push
call
out
in
shll
lret
and
push
out
leave
mov
and
pop
and
ljmp
ljmp
leave
sub
in
cmpsb
movsl
push
in
push
sub
pop
imul
lretw
in
movsb
inc
push
mov
loop
dec
pop
pop
ljmp
stc
in
mov
loop
enter
pop
out
inc
pop
repnz
inc
rcll
in
shl
push
xchg
leave
orl
pop
push
mov
push
pop
leave
enter
and
rolb
outsb
pop
insl
fldpi
xor
mov
sub
rcrl
lret
inc
mov
ljmp
pop
loopne
mov
lds
leave
lret
call
mov
lods
in
out
push
scas
leave
sub
lods
and
and
inc
in
out
jo
fs
imul
in
lods
out
push
cs
shr
lods
mov
in
inc
inc
push
cmpsb
leave
out
call
push
stos
lret
dec
dec
push
outsl
leave
shr
lods
add
movsb
lret
es
push
pop
dec
in
stos
in
push
or
mov
fstl
pushf
addr16
lahf
out
jmp
mov
movb
cmpsb
xor
pop
cs
mov
cmp
inc
mov
les
imul
scas
or
and
aaa
mov
clc
lods
or
leave
push
pop
rorb
test
cld
or
stc
lret
fidivrl
orb
lret
fldcw
push
dec
inc
mov
sahf
fnstenv
sbb
lret
jp
pop
movsb
push
mov
in
sbb
push
mov
or
lea
xchg
repz
es
or
inc
stos
insb
mov
scas
dec
leave
mov
ljmp
cmpsl
and
and
ror
cmp
sbb
movsl
cwtl
fsubrs
fwait
adc
xor
pop
jge
cmp
dec
cmpsb
and
out
cmp
jb
lods
jo
lods
pop
out
and
hlt
xor
psubsw
sub
and
or
pop
sti
daa
jne
or
sbb
add
mov
sub
cmpsb
leave
stos
fs
lock
push
cld
jnp
outsl
push
aaa
dec
popl
mov
fsubrs
loop
sub
pop
out
clc
sub
or
shll
inc
cmpsb
popf
sub
jl
sti
out
jnp
shr
inc
xchg
cwtl
std
push
or
ljmp
sub
push
sahf
cmp
scas
mov
imul
ljmp
fnstenv
fsubl
test
inc
mov
cmpsb
jmp
sub
lock
mov
ds
inc
bound
lds
fstpl
push
into
push
sbb
repz
lods
lret
jbe
lret
mov
enter
mov
or
rcr
sbb
sub
call
in
cmpsb
lret
icebp
jp
lahf
inc
cmp
test
enter
lret
leave
mov
mov
fildll
lock
sub
add
sahf
jbe
stos
shlb
jb
not
packssdw
lret
stos
pusha
cmp
test
into
fsubrs
inc
out
mov
fsubs
enter
jno
inc
xchg
cli
push
dec
sub
push
call
or
int3
lods
mov
stc
ss
mov
push
sbb
pop
sbb
mov
std
lret
mov
add
pushf
lcall
mov
mov
xchg
shrl
orb
xor
pop
push
push
popf
jle
in
fsqrt
pusha
push
iret
fcmove
cs
subl
stos
test
mov
sbb
inc
stc
loop
leave
mov
mov
sub
das
mov
push
sarl
pop
pop
sahf
leave
ljmp
pop
fdecstp
mov
inc
es
xlat
cmp
ficoml
ljmp
pop
jge
mov
popl
fildl
mov
rorb
and
sub
xor
push
xor
inc
sub
sub
outsl
les
sub
and
stos
mov
or
outsl
stos
xor
pop
dec
or
cmp
or
cmp
xor
fadd
int3
or
lds
cli
or
enter
sub
pop
cwtl
repz
shl
sahf
ja
outsl
jl
jp
sub
subl
out
lock
mov
or
cmp
push
and
cld
andb
out
outsl
sub
pop
fidivrl
cli
lret
and
mov
fsts
mov
mov
adc
cli
dec
out
outsl
insb
xor
or
sub
mov
popf
cmp
fidivrl
ljmp
cli
ja
outsl
mov
mov
push
adc
shrl
shr
mov
repnz
icebp
mov
sub
cmp
into
out
outsl
sahf
xor
mov
pop
push
fidivrs
imul
sub
lock
xchg
leave
sub
pop
sbb
imul
sub
push
ja
cmp
sub
sbb
cmp
sar
shrb
sbb
push
cmp
andl
ljmp
or
cs
iret
dec
or
decb
or
mov
scas
loopne
dec
pop
push
data16
call
lahf
lods
jbe
jmp
jmp
int3
lahf
mov
ds
mov
pop
in
ds
lods
into
push
xor
jmp
std
cs
imul
aaa
xor
cmpsl
das
lret
sub
pop
push
pop
pusha
or
jns
pop
dec
inc
leave
push
add
or
out
xchg
sub
pop
nop
pop
in
in
outsb
aad
js
pop
jae
pop
ljmp
fisttpl
sbb
ss
rorb
inc
iret
mov
mov
fcmove
scas
add
xchg
mov
sub
dec
movsl
pop
or
mov
sub
dec
push
jmp
mov
fwait
test
cmpsb
cmp
lea
dec
gs
shlb
insb
xor
test
cli
rcrl
jno
push
lahf
int3
out
lds
or
and
inc
ljmp
in
jl
or
ljmp
in
dec
call
sub
sub
std
cmpsb
push
lahf
into
ret
jns
sub
scas
out
aad
and
or
out
sbb
sbb
iret
mov
jno
dec
test
sbb
cmp
dec
cmpsl
outsb
cmp
pop
stos
or
scas
insl
pop
imul
or
adc
or
lea
cmp
lcall
and
lock
out
imul
int
cmp
das
dec
sub
rorb
pop
outsl
and
lahf
jne
scas
test
sub
fnstenv
cmp
mov
lock
cmpsl
sti
lods
push
leave
or
mov
lds
outsl
mulps
sub
mov
or
lea
sub
cmp
loop
pop
jmp
out
dec
in
stc
jno
fsubl
fs
xchg
lret
sbb
mov
cmpsb
fnstsw
in
xor
cmpsl
pop
push
mov
inc
imul
and
or
mov
dec
pop
cmpsb
xchg
lahf
cwtl
loop
mov
lea
jl
addr16
loopne
std
icebp
in
pop
testl
lock
rcl
subb
pop
add
js
enter
push
add
add
sbb
shrb
cmpsb
sub
xchg
xchg
inc
ficompl
pop
xor
sub
push
sbb
adc
pop
fcomp
out
mov
addb
jmp
xchg
push
stos
dec
js
fmuls
mov
adc
mov
movsb
push
push
dec
sahf
ror
popf
sub
int
push
pop
fdivr
fstl
fadds
sar
jbe
jo
sub
adc
jo
movsl
dec
data16
leave
mov
test
xor
sbb
dec
mov
or
xor
scas
lret
fidivl
insl
test
pop
aas
dec
xchg
shl
lock
and
repz
enter
mov
mov
pusha
cmp
push
int
push
sub
sbb
pop
out
mov
push
mov
shlb
int
jo
add
pop
out
push
addb
fldl
lock
push
dec
mov
or
rorb
or
int3
lret
ficoml
cld
aad
stc
icebp
and
xlat
cmp
in
adc
sub
sbb
stos
lcall
pop
test
sahf
mov
negb
lods
nop
in
and
dec
add
mov
call
inc
cs
pop
dec
sub
fwait
out
into
cmp
pop
push
hlt
pop
mov
aam
dec
sub
adc
dec
and
push
leave
mov
ljmp
ljmp
or
dec
sub
addl
sub
pop
mov
sub
jbe
repnz
add
mov
and
xchg
dec
cltd
add
clc
cmp
sbb
lret
dec
sub
cmpsl
icebp
and
fmulp
loopne
lcall
fdivr
rolb
sbb
sub
dec
sbb
lahf
push
cltd
out
cmpsb
sub
ret
cli
push
sahf
out
and
push
sub
mov
int
aam
enter
int
mov
sub
jmp
xcrypt-cbc
cmpsl
xchg
push
pop
dec
fcomps
or
cmpsb
push
mov
call
cld
cwtl
fidivl
mov
lods
imul
cltd
ficoml
adc
sbb
sub
jmp
or
shrb
fisttpll
leave
mov
lcall
or
mov
sub
push
shlb
mov
mov
pop
push
sbb
push
mov
fbstp
xor
mov
in
mov
or
cmp
bound
insl
call
sub
or
cmpsb
mov
addr16
sub
sbb
test
lahf
mov
pop
test
push
in
push
adc
mov
pop
sarl
or
jbe
sub
loopne
icebp
daa
lret
sub
push
mov
sarb
movsb
add
cmc
fs
repz
lahf
inc
xlat
dec
push
fdivs
lret
fsubrl
out
loopne
lock
sti
lahf
lods
sbb
lret
movsb
cltd
sub
cmp
xchg
ret
pop
out
nop
cmc
or
dec
das
adc
cmpsl
jecxz
push
sub
pop
jb
lsl
jge
and
stos
mov
cld
loope
repz
sub
mov
inc
jbe
dec
sti
inc
pop
decb
jb
mov
xor
pop
or
in
test
roll
mov
sub
mov
stos
mov
cmp
xchg
ds
fstpl
jnp
mov
loop
std
mov
mov
push
jb
aad
jp
icebp
lods
or
mov
jnp
mov
imul
dec
cmp
jns
addr16
add
mov
imul
jbe
push
xchg
clc
push
int
ds
cltd
adc
outsl
stos
xor
xor
mov
test
test
jo
inc
stos
mov
sbb
lods
cltd
fisubl
stos
xchg
jmp
sbb
pop
adc
adc
mov
push
es
mov
push
jp
emms
rolb
mov
sub
pop
adc
push
rcl
test
sub
ljmp
push
push
insl
mov
lcall
pop
jne
test
sub
fdivrs
push
dec
int3
push
pusha
mov
or
scas
call
jnp
ljmp
andl
push
mov
inc
jge
arpl
cmp
mov
fnop
fwait
and
jl
mov
shll
sti
and
mov
es
adc
dec
mov
call
jns
movsl
mov
lods
pop
aas
fldcw
inc
shl
in
or
xchg
sbb
sub
aaa
or
call
dec
paddusb
or
mov
xor
pop
es
daa
or
decl
je
out
hlt
adc
and
sub
add
and
les
mov
fnstenv
and
push
test
xchg
test
mov
pop
test
outsl
sub
sahf
add
dec
xchg
dec
lods
jnp
xchg
ds
fwait
test
das
rclb
dec
fwait
add
hlt
xchg
sub
data16
xchg
cmp
adc
mov
push
add
jmp
lock
sub
mov
xchg
cmp
ds
jp
fcmovb
pop
jo
outsb
jl
jge
mov
lods
imul
out
cli
mov
sub
sub
xchg
leave
js
lods
out
cmp
or
jbe
mov
test
aas
mov
addr16
movsb
lahf
aaa
insl
clc
pop
leave
test
add
out
jecxz
pop
cwtl
lret
lods
xchg
mov
mov
mov
or
dec
mov
pusha
stos
sub
sub
jecxz
jo
sbb
ficoml
jns
jbe
cmp
aad
stc
lods
lahf
stc
jns
fnstcw
lret
das
test
jne
lds
jg
cwtl
cmpsb
jecxz
call
lret
add
mov
sub
sar
xchg
movsb
sbb
data16
sub
jecxz
push
in
mov
and
test
push
cmp
call
movsb
stos
adc
cmpsl
or
cmpsb
cmc
jge
leave
dec
cmp
push
xorb
int3
inc
mov
jp
sbb
lods
xchg
lock
sub
dec
insb
nop
bound
add
das
xorb
dec
mov
insb
int
and
movsl
inc
pop
jnp
ror
sub
cmpsb
test
xchg
push
add
shll
pop
ret
in
mov
pop
jmp
call
dec
lahf
cli
ljmp
fiaddl
lret
mov
sub
inc
std
and
cld
mov
push
and
enter
add
xlat
not
jnp
enter
sub
imul
sbb
test
cmp
std
cwtl
cmc
lock
ss
mov
inc
sub
fucompp
out
fwait
dec
test
scas
xor
push
in
ficoms
lahf
mov
sub
mov
movsb
stos
arpl
mov
sbb
lea
aam
roll
ja
pop
push
leave
dec
fadds
fsubrs
or
sub
loopne
pop
mov
aad
push
lret
dec
mov
fldcw
jo
xor
cltd
cltd
ja
xchg
in
sbb
aam
cwtl
imul
and
test
mov
lock
scas
enter
das
shlb
test
cmovl
adc
sub
shr
push
std
int3
je
add
sbb
add
ret
or
xor
jns
test
mov
dec
jg
push
pop
pop
push
leave
fsub
mov
push
mov
cmp
sbb
jle
pop
data16
jmp
push
mov
xor
xlat
test
lock
push
hlt
cmp
mov
jmp
cmpsl
int
push
outsb
fwait
dec
push
movsb
into
cmp
dec
xor
cltd
sub
stc
lret
jbe
push
lock
in
call
sub
call
mov
pop
enter
push
jmp
int
push
lods
out
test
outsl
sub
js
cwtl
das
mov
jbe
jmp
sbb
push
dec
push
pushf
and
add
sar
sbb
and
mov
push
cmpsl
lods
aas
push
es
cltd
movsl
hlt
cld
jp
sub
pop
in
or
jo
lahf
fincstp
call
aam
xchg
lret
ja
int3
add
fcmovne
stos
inc
dec
cmpsb
adc
or
out
mov
pop
ss
push
and
movsl
jp
or
fidivrs
dec
loope
or
gs
outsl
imul
pop
stos
jle
mov
iret
into
ja
lahf
jmp
pop
fchs
pop
mov
fcmovnbe
jns
jmp
inc
and
fsubrs
jmp
or
pop
cmp
ja
mov
adc
pop
and
and
inc
in
push
sub
cmp
cltd
push
es
ljmp
jmp
or
pop
in
stos
jbe
push
xchg
fistpll
adc
test
jno
and
or
lods
fmulp
mov
dec
sbb
cmpb
lock
cmp
jle
repz
and
xchg
cltd
ja
dec
lahf
cmc
add
in
pushf
pop
adc
push
mov
fucom
adc
repnz
mov
aad
test
fnstcw
int3
addb
pmaxub
addr16
fwait
mov
cltd
jmp
sbb
into
pop
fildl
fidivl
jbe
test
or
xchg
inc
pop
dec
lahf
fnstenv
jp
pop
rorl
stc
mov
sub
sub
or
add
jmp
sbb
stos
out
popf
lock
push
lret
lods
ret
int
jg
pop
sti
cmp
ficompl
test
loop
test
sub
sbb
xchg
fisttpl
daa
std
jo
ljmp
addr16
xchg
cwtl
mov
or
ucomiss
enter
dec
sub
clc
pop
sbb
push
pop
sbb
sub
mov
sahf
mov
cld
enter
movsb
fst
mov
push
pop
mov
ret
cmp
enter
daa
mov
andl
fdivrs
std
mov
and
fwait
arpl
jge
or
addl
cli
movsb
in
arpl
jnp
mov
mov
dec
mov
jge
out
out
adc
mov
lods
std
aam
data16
jp
les
adc
push
mov
cmp
gs
pop
ret
mov
hlt
mov
int
dec
test
jbe
cmpsb
test
std
insb
lods
leave
js
ja
cmp
push
stos
cs
sub
dec
and
sub
movsw
sbb
add
test
push
inc
mov
pop
add
int3
pop
lret
sub
mov
pop
jmp
lret
outsl
adc
pushf
data16
insl
popf
call
mov
mov
inc
sbb
mov
dec
pop
sub
mov
and
or
inc
outsb
pop
dec
mov
cld
mull
dec
imul
fistpll
cs
mov
adc
or
fdivl
sbb
das
sub
push
pop
mov
sbb
movq
sbb
sbb
enter
pop
jmp
jbe
sbb
mov
aam
inc
pop
and
mov
sub
xchg
in
pop
dec
out
scas
pop
push
shrb
sbb
mov
jp
iret
mov
into
icebp
shl
sub
out
mov
rorb
rorb
xchg
test
int3
sbb
shrl
imul
sbb
jae
sub
loopne
pop
mov
or
mov
fcmove
xchg
rcrl
lret
rcrb
fsubr
roll
pop
xor
push
movsl
leave
adc
pop
nop
mov
fxch
negb
lock
js
pop
mov
fs
dec
pop
add
leave
lock
enter
inc
addb
test
loopne
rcll
fldt
dec
mov
xor
clc
test
fsubrl
imul
in
leave
clc
pop
out
mov
dec
jbe
faddl
sbbl
or
movsl
sub
cmpsl
push
cmp
lcall
jg
sub
sub
xor
jns
add
stos
jp
aad
fdivr
xchg
stos
fisttpll
or
cmp
movsl
les
inc
xchg
js
dec
sub
fildll
dec
mov
inc
into
nopl
repnz
mov
and
filds
movsl
lods
loope
testl
frstor
pop
xor
fdivrl
mov
pop
shr
cltd
test
rorb
push
sub
mov
test
inc
push
cld
jge
push
loopne
roll
ljmp
jp
int3
mov
ljmp
loope
jne
out
lods
lock
fisubl
test
mov
or
scas
jne
adc
cmpsb
out
lret
sti
jmp
cld
cmp
loopne
mov
stos
cwtl
jecxz
frstor
xlat
imul
jp
ljmp
sub
pusha
xor
and
popf
push
and
sub
aaa
iret
sub
test
mov
xor
xchg
mov
sub
push
dec
inc
add
add
stos
repnz
lret
mov
mov
fsubs
sub
xor
mov
adc
sub
sbb
xchg
dec
out
push
push
xchg
aas
fsts
mov
int
mov
call
dec
jmp
mov
scas
jnp
pop
cmpsb
and
xor
add
cmp
aam
mov
push
jbe
xchg
rol
filds
push
adc
out
ljmp
fs
adc
ja
push
cmc
mov
adc
sti
popf
mov
sub
outsl
lcall
mov
outsl
sbb
call
and
movb
push
inc
jmp
clc
push
or
out
call
inc
pop
xchg
lcall
jbe
pop
pop
fadds
mov
pop
lods
mov
xchg
push
jmp
push
out
stc
xchg
loopne
call
cmpsl
inc
mov
adc
fnsave
push
lret
or
stc
nop
jne
out
xor
cmp
pop
repnz
mov
sbbl
mov
inc
arpl
frndint
fs
ljmp
push
scas
adc
dec
sub
pop
lret
loop
cmpsb
pop
lcall
popf
leave
xchg
xchg
pop
outsb
mov
lock
mov
xchg
pop
pop
jmp
in
popa
adc
jl
sbb
lcall
cmpsb
cmp
stc
pop
mov
insl
fadd
test
std
cmp
mov
call
jnp
sub
dec
mov
out
xor
mov
shl
cmpsl
out
mov
outsb
cmp
dec
push
jge
cli
mov
mov
cwtl
test
subb
pop
or
shr
out
mov
lahf
pop
jo
sub
je
cli
lock
sti
lds
imul
gs
lret
mov
pop
lea
adc
adcl
call
and
jns
sbb
int3
sub
shlb
jnp
fwait
call
imul
mov
sti
jbe
sub
test
int3
mov
cmp
pop
mov
stos
aam
add
jo
jmp
ja
mov
adc
or
scas
test
push
mov
jbe
cmpsb
movsb
jl
push
lods
lahf
xchg
push
mov
bound
out
sbb
dec
dec
push
outsl
aam
push
xor
mov
sub
int
cltd
pop
adc
out
imul
pop
lods
jnp
mov
xlat
mov
sbb
fcoms
jge
aam
das
and
pop
dec
mov
lock
jmp
fnsave
enter
adc
int3
adc
gs
leave
xchg
in
int
or
jmp
adc
or
lea
out
sub
movsb
mov
xor
mov
lcall
xchg
jo
sub
outsl
int
mov
pushf
shl
jl
mov
outsb
loope
mov
pushf
lock
mov
out
psubsb
push
push
out
jbe
mov
fimuls
clc
pop
adc
and
shl
sub
cmp
call
push
pop
aam
enter
ljmp
push
and
and
jp
into
inc
movsb
orl
iret
fdivrs
add
xchg
mov
test
mov
aas
andb
dec
sub
aad
stos
sub
test
pushf
mov
icebp
faddl
cmp
add
jmp
jmp
ja
jnp
out
pop
ljmp
push
mov
mov
sub
inc
nop
lds
sub
jge
in
je
mov
int
jno
shl
mov
inc
repnz
cmp
cmp
fdivl
xchg
movsb
test
sbb
push
xchg
faddl
mov
sti
les
inc
sbb
xor
aas
cmpsl
xchg
or
hlt
out
inc
jmp
mov
jb
inc
lea
or
lahf
dec
mov
mov
pop
lahf
ret
sub
hlt
cltd
sub
xchg
push
pop
ja
sti
negb
repnz
jbe
sti
xlat
outsb
mov
lea
test
push
mov
jmp
out
aaa
in
adc
mov
notb
xor
adc
mov
push
or
dec
sub
and
jnp
ret
mov
sub
jbe
xchg
sbbl
jns
imul
enter
mov
inc
outsl
xchg
into
inc
mov
sar
push
sub
loop
in
sub
in
addr16
and
mov
pop
pop
outsb
fucom
ficompl
mov
cld
jmp
sub
dec
adc
cmpsb
arpl
adc
push
stc
sub
mov
mov
xchg
nop
pop
in
int
stc
in
ret
cmp
sub
test
mov
test
push
fidivrs
scas
stos
popf
rorl
leave
shll
jne,pn
jmp
xlat
imul
stos
nop
adc
or
and
jmp
cmpsb
push
in
mov
out
sub
test
fstps
sarl
dec
sub
lods
push
bound
dec
fldl
imul
mov
leave
das
or
insl
fsubrs
icebp
subl
sub
jnp
imul
add
cmpsb
mov
xor
xchg
iret
and
out
sbb
push
mov
test
mov
cmp
mov
out
fldenv
xrelease
add
loopne
das
adc
and
lcall
mov
enter
dec
stc
clc
xlat
push
int3
mov
lahf
add
cli
mov
pushf
scas
pushf
call
enter
sub
or
test
add
lahf
jns
sub
mov
push
pop
and
out
dec
xchg
out
gs
pop
jmp
mov
pop
lcall
push
loop
sarb
test
iret
inc
les
mov
or
push
leave
cltd
insb
pushf
mov
sbb
push
mov
out
sub
cld
sti
pop
and
lods
xlat
loopne
je
ficompl
mov
imull
imul
sahf
dec
mov
or
sti
bound
mov
lret
pop
stos
flds
icebp
repz
sub
jnp
fidivrl
xor
mov
daa
lock
cli
out
mov
dec
test
add
push
sbb
call
xor
into
push
mov
push
mov
jbe
inc
inc
out
add
addl
jmp
or
mov
pop
pop
push
push
cmp
jae
lahf
sbb
js
test
or
mov
or
inc
int3
or
dec
xchg
cmpsb
xchg
loop
jecxz
adc
jmp
fsubr
dec
xchg
movsb
movsb
std
fs
xchg
lret
lret
mov
sub
fstl
insl
lcall
gs
sub
pop
lods
cmc
ds
int3
imul
push
icebp
lcall
lods
mov
test
outsl
stc
ljmp
scas
lcall
push
imul
dec
pop
sub
pusha
inc
and
push
imul
in
fs
int3
mov
in
daa
rcl
push
loop
push
call
fucomip
push
test
and
sub
sbb
insb
dec
add
inc
and
sub
jb
lea
push
mov
inc
mov
cmpsb
inc
xor
pop
push
jle
ljmp
repnz
leave
test
leave
dec
int3
sldt
call
fimull
sub
fidivrs
jbe
lea
inc
clc
or
cmp
aam
and
inc
and
pop
test
or
std
mov
dec
push
pop
in
imul
xchg
vmovlpd
movsl
mov
hlt
pop
in
int
lods
cmpsl
jbe
in
aam
jmp
loopne
or
lea
pop
push
jl
fisubl
lods
mov
leave
out
stos
push
pop
adc
dec
inc
pop
cmp
mov
neg
lea
sub
pusha
testb
push
xor
inc
sbb
outsl
cmpsl
add
nop
insb
scas
and
pop
lods
pop
sub
push
jnp
cs
lret
push
xchg
xor
jl
rorb
aad
mov
xchg
inc
iret
sub
fwait
mov
mov
fsubr
and
dec
sub
mov
push
or
push
insb
pop
or
ss
into
mov
fldenv
loope
lods
xchg
xchg
cld
mov
in
xchg
adc
pop
das
xchg
shll
mov
andb
and
dec
call
add
cwtl
cltd
mov
push
gs
mov
jl
jge
movsb
ss
lcall
das
pop
pop
cmpsl
jg
xor
sub
rolb
setp
loopne
inc
adc
ret
and
sbb
cmp
and
pop
outsb
loopne
js
sbb
fnsave
orb
adc
pop
and
std
mov
es
mov
outsb
sub
and
les
hlt
outsl
sbb
out
sbb
adc
push
xchg
adc
mov
lahf
cmpsb
mov
rcll
inc
movsb
and
jg
out
loop
lods
mov
mov
lcall
sub
ja
or
ds
add
sub
lds
dec
testl
je
sbb
pop
enter
cmp
int
shrb
xchg
cmpsl
push
jp
mov
jnp
outsl
ljmp
das
xchg
pop
addr16
jnp
push
imul
into
outsl
cmpsw
mov
mov
jnp
mov
lds
rclb
int
push
sub
sarb
fs
daa
hlt
jo
push
xchg
or
subb
jg
aas
and
aam
push
sbb
clc
jnp
out
ficoml
xor
callw
les
adc
scas
outsl
rolb
inc
jge
hlt
and
push
in
out
mov
mov
test
dec
dec
mov
xchg
sub
jnp
aas
outsb
sub
mov
ljmp
js
ljmp
enter
jae
nop
shrb
pop
cmpsl
insb
imul
mov
cmpsl
sahf
xor
out
and
jl
jno
adc
mov
stos
mov
fnstsw
fcmovnb
or
scas
or
adcb
xchg
jnp
lahf
pop
sub
lea
sub
dec
nop
jne
push
scas
lock
test
sub
stos
mov
and
cmp
inc
sub
cmp
dec
cltd
sbb
stc
aaa
cmp
add
xor
or
lock
push
stos
leave
or
test
sti
pop
stc
jns
int
out
dec
pop
imul
pusha
mov
enter
cli
jecxz
mov
mov
dec
es
push
scas
adc
or
or
punpcklwd
mov
jecxz
mov
pop
movsl
es
fdivrs
bound
ret
outsl
or
jecxz
jmp
jnp
cmp
or
scas
icebp
sbb
mov
pop
sbb
push
movsl
cmpsb
or
orb
lods
adc
inc
test
dec
out
fyl2x
mov
pop
lea
int3
movsb
mov
lret
out
pop
sbb
sub
mov
inc
rolb
ljmp
imulb
push
inc
push
int
imul
sub
mov
adc
in
jns
mov
push
or
mov
xchg
icebp
xor
popa
scas
std
cli
shrl
call
fs
push
ljmp
insb
test
sbb
mov
cmp
mov
cli
mov
cs
mov
adc
pop
in
and
pop
addr16
sarl
lcall
lods
sub
shrb
jg,pn
mov
sub
mov
dec
out
push
test
lret
cmpsb
mov
sar
out
sbb
mov
call
shlb
pop
in
push
pop
pop
mov
cmpsb
jle
mov
les
add
mov
aaa
fwait
sub
ss
xchg
movsb
lret
loope
ret
jmp
cmp
mov
jb
in
adc
addr16
cmp
cs
lods
sub
popa
stc
das
lock
ss
inc
sbb
paddusw
out
out
test
int3
loopne
ret
sbb
jge
push
push
xchg
xchg
std
adc
mov
nop
mov
lods
cmpsb
int
mov
jo
sub
sub
mov
fsubrs
mov
push
or
mov
push
sub
mov
movsb
xchg
xchg
cmp
or
mov
add
jle
push
xlat
jg
lds
in
inc
or
xor
xchg
pop
cmp
dec
mov
mov
xchg
scas
mov
lret
es
mov
cmpsl
pop
in
cmpsl
icebp
popa
pop
cmp
inc
imul
xor
in
out
add
mov
mov
mov
pop
mov
imul
imul
dec
scas
push
scas
jo
mov
mov
xchg
cmp
mov
fisubrl
outsl
dec
bound
data16
lahf
pop
inc
adc
shll
adc
mov
outsb
ret
jmp
dec
mov
push
aam
mov
cwtl
sub
sub
ljmp
cwtl
jb
inc
dec
adc
pusha
push
pop
dec
hlt
add
add
mov
lcall
test
push
mov
lock
push
in
cwtl
out
mov
xor
xor
insl
fwait
inc
adc
clc
movsb
mov
into
lods
lea
outsl
scas
cld
xchg
xor
jl
nop
lock
mov
mov
fcomps
push
pusha
in
or
jl
test
or
fildll
test
pusha
cwtl
fimull
xorl
pusha
shlb
add
lock
pop
push
mov
and
or
test
and
sub
jmp
sub
subb
ror
scas
ret
lods
ljmp
jl
xchg
sbb
jmp
pop
js
mov
montmul
cmpsb
ret
sbb
call
aam
std
test
cli
mov
addr16
and
jnp
pop
add
push
jmp
leave
sub
inc
subb
mov
sahf
cltd
dec
outsl
lods
pop
mov
out
pop
cmp
pop
fstpl
mov
mov
mov
into
fsubs
sti
int
mov
mov
mov
aam
mov
subl
test
jbe
rcrl
jecxz
ret
scas
dec
or
mov
sub
jne
cmp
addr16
lahf
fwait
call
movsb
mov
pop
into
lret
sub
cmpsl
int
adc
lret
sarb
push
push
mov
pop
and
leave
cmpsb
push
adc
outsl
out
fwait
loopne
xchg
bnd
stos
lret
adc
in
int3
outsl
jb
imulb
mov
stos
add
mov
xchg
sbb
jbe
lock
cmpsb
fdivp
enter
inc
sbb
int
add
cmpsb
test
movsb
in
test
xor
test
or
jge
stos
or
out
sub
ret
adc
test
lret
test
or
enter
fsubs
sub
sub
mov
or
insl
and
in
imul
hlt
lods
inc
int3
lret
ljmp
ror
push
cmp
fidivs
pop
add
stos
adc
mov
shll
sahf
pop
in
xor
sub
push
icebp
test
jg
jbe
push
xchg
sahf
jne
faddl
mov
add
arpl
cmp
sar
mov
sub
int
inc
js,pt
scas
cmpsb
mov
jnp
sar
sub
cmp
fmull
scas
fcompl
pop
xchg
mov
out
or
scas
mov
into
test
and
int3
pusha
dec
push
cli
cmpsb
dec
pop
lahf
leave
addr16
cmpsl
addb
outsl
iret
or
or
and
adc
jae
xchg
ds
pusha
push
and
dec
xchg
cld
pop
sub
in
rorl
scas
lret
xor
dec
shl
cltd
push
pop
pop
cmpsb
imul
xor
std
in
cmc
stc
inc
daa
out
xchg
and
dec
mov
movsl
cmp
pop
and
inc
roll
jne
inc
rcrb
adc
das
dec
xchg
pop
les
aaa
lret
in
push
cmp
push
push
insb
or
jno
sbbb
jnp
add
sub
insl
inc
mov
lahf
mov
pop
sub
pop
sub
push
lea
xor
cmp
test
dec
pusha
lock
pop
xchg
fcompl
xchg
es
hlt
xor
add
movsb
out
or
dec
lret
push
imul
push
mov
imul
hlt
sub
pop
movsl
mov
lahf
sbb
cs
xlat
push
jmp
lods
xchg
sbb
out
leave
mov
or
sbb
pusha
or
aaa
ficoms
aad
cwtl
lock
ds
out
and
fcompl
pusha
pop
cmpsb
vxorpd
sbb
mov
test
lock
inc
int
in
out
xchg
xor
dec
aas
pop
cvtpi2ps
pop
out
out
imul
jge
std
cmpsb
jle
cld
pop
mov
out
insb
and
cltd
mov
xchg
mov
mov
mov
or
jbe
stc
pop
add
imul
dec
pop
imul
inc
test
dec
cwtl
sub
pop
jbe
jecxz
call
lock
jle
sti
pop
add
mov
or
sbb
adc
mov
push
shrd
cmp
inc
mov
add
or
mov
imul
loopne
pop
cwtl
cmp
push
mov
pop
inc
jnp
ret
xlat
leave
jbe
je
pop
lods
scas
ss
pop
in
dec
out
cmp
pop
or
fidivs
lret
call
push
or
ja
xchg
fsubs
ds
rcr
or
push
enter
sub
pop
dec
adc
into
sbb
xchg
push
xchg
es
lcall
and
sub
sub
lahf
or
lds
mov
test
xchg
lahf
roll
sub
or
loope
shlb
push
sbb
sub
imul
int3
mov
pop
pop
pop
cmp
sbb
cmc
dec
sbb
ljmpw
sarb
fs
inc
inc
in
cwtl
cmp
outsl
mov
int
adc
in
push
out
lods
cmpsb
stc
icebp
movsl
cld
jbe
lea
and
je
jbe
mov
or
js
shll
pop
or
jl
lahf
fdivl
or
jnp
js
sbb
popa
fcom
pop
lock
pop
fcoml
out
lret
push
out
in
push
or
loopne
xor
stos
mov
mov
jl
adc
sub
lds
dec
sub
mov
and
jae
push
mov
xor
adc
inc
mov
dec
jmp
dec
push
or
adc
jge
icebp
xor
aam
cmp
js
enter
adc
int
fidivrs
push
out
lock
or
push
push
mov
std
adc
ret
lcall
iret
jbe
dec
mov
cli
test
repz
das
jmp
aad
es
push
or
xchg
arpl
pop
sub
das
subb
loopne
mov
lods
push
pop
inc
shlb
icebp
dec
sbb
xchg
clc
loope
inc
test
mov
scas
cwtl
stos
data16
dec
imul
loopne
and
sub
push
lods
stos
in
test
loopne
in
movsb
mov
mov
scas
popa
scas
ficomps
xchg
lods
dec
lret
stos
lret
sub
pop
jae
sub
rcll
cmp
scas
pop
push
push
aam
jnp
sub
int
cmp
sbb
xor
lret
or
lods
test
jo
cmp
inc
mov
adc
pop
test
loope
sti
in
mov
and
movb
pop
out
pop
sbb
pop
push
or
ss
ljmp
stos
aam
in
and
sbb
js
ljmp
cmpsb
push
outsb
enter
sub
push
stos
sub
test
movsl
out
int3
lods
mov
pop
cltd
sub
or
cld
stos
sub
in
sub
pusha
or
cmp
test
out
test
cltd
dec
imul
sub
mov
sub
insl
mov
mov
cld
and
insl
and
sub
push
xchg
pop
ret
cs
call
add
pop
or
in
out
dec
pusha
push
lret
stc
jb
clc
adc
xchg
inc
lods
and
out
das
lret
mov
mov
push
and
push
cmp
pop
cmp
test
aas
cs
loope
mov
leave
and
mov
or
lock
ljmp
test
xor
sub
mov
imul
pop
or
fcomps
sub
repz
xchg
mov
inc
aad
push
test
mov
sub
mov
sub
ljmp
sub
xchg
cmpsl
and
stos
push
mov
mov
movsb
mov
sub
imul
jbe
hlt
dec
adc
or
test
push
mov
dec
cs
mov
sub
into
jnp
pop
sub
andps
rorl
stos
lcall
test
adc
fiadds
in
mov
push
pop
or
push
out
mov
in
push
repnz
stos
cmp
or
jmp
lock
clc
insb
test
sub
orl
jns
push
mov
pop
imull
and
out
fnsave
je
sub
imul
dec
mov
push
jg
and
pop
and
sub
lret
lret
cld
jmp
imul
stc
cmp
pop
jl
mov
sub
call
pusha
xlat
imull
subb
push
jl
leave
and
test
jnp
shr
aaa
and
inc
and
inc
mov
movsb
adc
insl
adc
pop
or
lock
push
mov
mov
loopne
or
xchg
sbb
fwait
cmpsb
mov
and
sub
aam
movsb
cmpsb
bound
mov
cmp
mov
dec
mov
cmpsb
enter
out
dec
pop
sub
mov
in
out
sahf
mov
faddl
pop
lret
sub
add
xor
pop
in
popa
test
xchg
mov
pop
out
lods
mov
ret
adc
shll
das
lahf
imul
cltd
xor
add
les
outsb
add
fsubrl
xor
xchg
push
mov
movsb
mov
mov
xchg
dec
movsb
dec
mov
adc
fimuls
sub
mov
or
pop
xchg
mov
xchg
cmpsl
sub
mov
jmp
out
pop
outsl
push
jl
lea
or
pop
xchg
and
push
pop
add
sbb
pop
push
fdivs
nop
lock
outsb
and
dec
sub
push
jle
cltd
cwtl
or
aaa
dec
mov
sub
pushf
lcall
pushf
inc
stos
sub
bound
divb
xor
leave
ja
xchg
pop
aam
enter
addb
and
dec
es
push
dec
push
leave
imul
pop
push
rcrl
mov
adc
push
xor
insl
fmull
aam
xchg
pop
sbb
mov
popa
jbe
sahf
les
sub
aaa
inc
jmp
clc
fstl
addr16
mov
rclb
addb
inc
or
test
lods
rcrl
pop
sub
sub
cmpsb
test
sbb
jmp
inc
clc
es
and
js
mov
jl
fstp
mov
sub
nopl
dec
and
out
sbb
jae
aam
loopne
jo
test
stos
sub
sbb
push
cwtl
or
aaa
adc
out
out
jbe
xor
sub
stos
cmp
pop
and
jo
paddsb
fstl
xor
mov
xor
insb
inc
lcall
push
xor
das
push
loope
cmp
sbb
cwtl
jbe
push
iret
lods
jae
ds
adc
sub
clc
cmpsl
std
and
xlat
push
hlt
mov
sub
stos
fisubl
cmp
xlat
lahf
mov
mov
sub
movsl
aaa
jge
jmp
das
imul
push
loopne
jecxz
testl
ds
xchg
dec
stos
repnz
pop
jbe
mov
js
jl
scas
add
shrb
lds
and
hlt
inc
stos
or
sti
in
and
enter
sub
fstpl
scas
cs
cmpsb
ret
jo
stos
dec
push
inc
xchg
mov
xor
stos
xor
hlt
std
popf
inc
and
sbb
fcomps
adc
in
adc
cli
pop
test
jmp
stos
lods
mov
or
outsb
out
cmpb
fdivrl
lret
and
push
das
adc
pushf
stc
fsub
adc
lret
adc
sahf
sub
sub
pusha
dec
test
mov
cs
lods
lods
sub
stos
cmpsl
cmp
fisubrl
mov
das
pop
lods
pop
test
sub
or
in
and
lods
and
cld
and
sub
fldt
push
sub
lret
sub
fs
sub
xchg
and
cltd
sbb
cltd
cmpsb
sahf
and
add
push
or
loopne
shlb
dec
js
popa
mov
mov
in
in
inc
mov
pusha
fldenv
sub
fbstp
xor
or
loopne,pn
or
pop
call
pop
mov
adc
dec
inc
shrb
test
pusha
mov
in
inc
stc
mov
cmpsl
jnp
and
sub
sub
jmp
movsw
rclb
cmp
cltd
pop
mov
shl
dec
cs
lcall
pop
out
jl
mov
dec
call
leave
mov
lea
ds
sbb
mov
shl
add
jge
ret
pop
cmc
jecxz
std
and
stos
inc
cltd
test
lcall
pop
sub
sub
dec
outsl
or
push
in
push
test
dec
xchg
push
loope
pop
cld
hlt
popf
push
loopne
dec
out
sbb
lret
mov
jle
pop
aas
inc
jmp
arpl
cwtl
das
push
mov
pop
pop
dec
jo
sbb
test
cs
inc
js
aam
cmpb
subb
push
xor
adc
sub
jmp
mov
adc
jp
out
lock
lret
mov
test
xchg
mov
jns
add
mov
lock
rolb
movsb
xor
xchg
jbe
sub
pop
hlt
sub
xor
in
lahf
lea
add
ljmp
stos
jmp
fcoml
in
pop
lahf
addr16
xchg
call
lods
fwait
stc
cmp
mov
movsl
and
cmpsl
mov
sub
and
xchg
enter
subl
movsb
nop
lahf
cmp
mov
or
xchg
adc
out
ljmp
in
sbbb
cmp
mov
scas
sub
inc
mov
shrl
outsb
icebp
pop
in
pop
fisttpll
jmp
in
addr16
mov
mov
ss
jbe
cmpsl
or
sbb
fiaddl
out
movsl
jo
and
mov
movsl
push
xor
ficomps
insb
out
rol
jns
ja
push
std
adc
rcrb
and
or
mov
test
shrl
inc
hlt
scas
lods
ja
mov
insb
push
sub
out
pop
push
fwait
ret
cmp
scas
sub
jnp
repnz
scas
adc
fldenv
inc
rcll
fcoms
mov
push
and
movsb
mov
pusha
aas
out
jl
sbb
shll
in
and
sbb
mov
pop
andb
mov
add
xchg
in
jmp
add
pop
es
arpl
sub
mov
jl
adc
es
pop
test
jmp
mov
sbb
cmpsl
int
cmpsl
outsl
jp
adc
imul
cs
xlat
cmp
inc
and
push
cmp
testl
xchg
push
push
and
add
popf
clc
mov
pushf
or
in
sbb
sbb
cmp
fiadds
push
mov
call
cld
mov
inc
imul
adcl
int3
pop
fisubrl
movsl
mov
int
int3
out
cli
pop
and
adc
call
fisttpll
jge
cmp
fwait
pop
movsb
leave
dec
cwtl
sbb
test
fnstsw
flds
leave
xchg
push
cmp
in
cld
and
or
in
sub
xor
dec
ljmp
mov
xchg
lods
sbb
add
fistpl
xchg
dec
jmp
insb
lret
sub
sub
in
pop
mov
and
xchg
mov
sbb
adc
inc
mov
sbb
popf
into
in
out
xchg
and
pop
push
dec
aaa
cwtl
dec
cmp
lahf
js
sub
adc
in
fsubrl
jo
fdiv
sub
cmp
js
aam
ds
into
jbe
mov
mov
daa
and
mov
push
sub
cld
jo
outsl
push
sbb
cwtl
lock
popf
shll
lret
movsl
push
stc
adc
imul
into
outsl
xor
adc
mov
sahf
sbb
adc
addr16
dec
mov
lods
imul
cmpsl
cltd
mov
lods
push
mov
sub
insb
cmp
cwtl
data16
call
mov
fnstsw
add
jnp
inc
pop
push
lods
add
int3
pop
push
or
int3
inc
add
push
adc
mov
xor
jp
sub
mov
verw
test
cmp
int3
sti
lds
out
fsts
push
movsb
mov
xchg
nop
pop
push
call
cwtd
and
lods
addb
xor
sub
fcoms
shrl
xchg
pop
andl
jg
adc
adc
fiaddl
cmp
insb
shr
cmp
repnz
leave
jnp
push
je
rolb
pop
aam
push
jbe
inc
movsb
aam
outsb
cmp
dec
pusha
push
jno
push
pop
leave
enter
out
xor
jecxz
or
add
push
daa
jns
jmp
loope
pushf
sbb
jo
incb
outsb
movsb
mov
lods
fsts
pop
mov
cli
xor
fnstenv
lret
mov
enter
and
mov
loope
sbb
divl
mov
or
fistl
aaa
mov
cmc
int3
gs
jo
mov
mov
mov
cmp
lods
fbstp
cmpsl
scas
sahf
xsha1
cmpsb
or
cmp
and
insb
out
pop
and
jnp
ror
lods
jl
fstps
jns
xor
in
or
inc
leave
sbb
int3
sub
shrb
test
addr16
out
test
jbe
dec
xchg
mov
sub
pop
xchg
cmp
xor
push
push
fistl
cmp
lret
mov
lcall
jmp
daa
pop
cli
xchg
mov
cmp
adc
fistl
push
lahf
and
mov
into
mov
mov
mov
out
fldenv
bswap
adc
sub
fsubrl
xlat
jmp
outsl
push
sub
and
pop
repz
cmpsb
mov
dec
mov
pop
or
test
xchg
gs
jecxz
in
cld
cmpb
adc
sub
int
adc
xchg
xchg
or
fldt
rcr
inc
insl
aas
pop
addr16
jbe
in
int
lret
push
out
testb
adc
sbb
pop
dec
push
and
loopne
clc
cli
in
push
lods
movl
cmpsl
outsl
int
or
sub
pop
mov
lods
cmp
adc
adc
shll
inc
push
lea
push
mov
movsb
sub
xchg
push
cmc
xchg
jle
cmc
test
mov
jb
cmp
in
out
push
pusha
mov
sbb
jns
mov
stc
pushf
dec
mov
clc
les
movsl
outsl
dec
or
or
sti
mov
adc
aas
mov
jnp
jmp
jns
mov
lahf
pop
jbe
lock
pop
push
jno
test
mov
out
xor
pop
test
bnd
test
cmc
ficoml
push
cmc
jnp
loope
jnp
pop
aas
cmp
es
dec
cmp
lock
xchg
mov
cmpsb
lret
cmp
jnp
roll
daa
jbe
sub
sar
movsb
mov
xchg
hlt
ret
sub
jmp
xor
test
push
dec
jmp
sub
les
jae
lock
popa
adc
mov
pop
sub
or
stc
aad
xchg
sub
jg
bound
lock
pop
ret
in
rcrl
lret
out
jbe
sub
cmpsb
aad
add
sbb
cs
jle
inc
inc
out
or
and
pop
and
mov
mov
sti
cmc
or
jp
add
pop
xor
jnp
dec
push
mov
and
mov
sti
and
ret
cltd
in
xchg
xor
mov
mov
push
dec
cmpsb
inc
cs
xchg
cmc
jno
shrb
jmp
je
inc
inc
sub
mov
icebp
cmc
push
push
lods
inc
stos
pushl
sbb
scas
das
add
lock
int3
loope
mov
or
push
adc
das
mov
pop
movsl
cld
aad
out
sub
cmp
mov
add
hlt
sub
in
rorb
insl
clc
ja
or
push
xchg
cwtl
ja
in
shr
jbe
out
test
jnp
xor
je
lret
push
or
xor
sbb
inc
inc
jl
pop
movsl
jns
inc
mov
and
xor
mov
popf
and
lret
les
push
cs
outsl
ljmp
cmp
push
lock
popa
xchg
jg
dec
mov
hlt
cs
fs
out
outsb
sub
outsb
pusha
shl
cwtl
pavgb
sbb
inc
xchg
and
lahf
mov
or
jmp
fidivl
aam
xlat
inc
sti
cmp
mov
aam
jbe
and
out
pop
sti
xchg
lods
addr16
test
jo
lret
inc
add
js
jmp
in
dec
pop
aad
cwtl
mov
nop
stos
add
dec
sbb
xchg
cmpsb
ret
inc
mov
jbe
in
fwait
imul
pop
mov
pushf
aas
cmp
mov
out
or
mov
cmp
jnp
idivb
sbb
call
pop
push
dec
jnp
push
les
add
add
clc
out
or
adc
jns
jbe
out
addr16
stc
push
sub
or
mov
scas
or
sbb
insb
and
addr16
dec
mov
in
jo
das
mov
aam
cltd
std
scas
imul
dec
enter
aam
pop
loop
in
sub
lret
inc
push
int
jecxz
jle
sbb
adc
daa
push
out
mov
mov
pushf
push
fwait
add
add
mov
cwtl
mov
sbb
enter
push
sub
js
scas
adc
dec
or
add
sbb
pop
test
dec
ss
js
cwtl
xor
push
ret
push
adc
mov
loop
and
sub
dec
scas
cltd
lds
and
out
xor
or
loope
rcr
lods
into
ret
in
js
jmp
roll
inc
imulb
mov
cmp
divl
xor
scas
lret
addb
clc
movsb
in
dec
push
out
pushf
shl
jmp
in
and
out
mov
mov
nop
dec
mov
adc
fadds
pusha
ret
mov
je
in
and
sbb
fs
stc
mov
pop
inc
pop
add
ljmp
xor
push
mov
fwait
imul
stos
pop
jo
aam
inc
arpl
ljmp
shlb
decb
rorb
insb
push
js
pop
push
enter
pop
aam
push
dec
pop
repz
pop
enter
call
and
push
imul
ret
jp
mov
sub
insb
xor
xchg
lret
test
mov
insb
ja
push
inc
test
loop
leave
add
ret
js
sub
pop
lcall
mov
test
cmp
dec
cmp
cmpsb
cmp
push
fcmovu
test
adc
testb
sub
push
enter
cmpsb
lret
out
push
pop
imul
dec
pop
aaa
rclb
call
push
add
pushf
nop
pop
cmp
sub
push
xor
mov
jb
outsb
mov
loopne
jp
fdiv
mov
mov
shlb
imul
mov
loope
cmpsl
out
and
mov
dec
hlt
push
out
add
sbb
adc
cs
aas
ds
dec
pop
mov
jmp
or
adc
jmp
cmpsb
jns
xchg
fmuls
sub
jbe
mov
or
addr16
add
jae
clc
mov
pop
inc
add
xlat
enter
sbb
pop
jo
out
rcl
mov
faddl
stc
cli
push
dec
lahf
ds
xchg
test
imul
fisubrl
mov
pop
add
out
mov
lea
movsb
in
or
xchg
rcrb
adc
lcall
jp
mov
and
cmpsl
pop
sub
cmp
push
cli
fisubrl
xor
dec
adc
int3
mov
rcll
mov
clc
mov
inc
mov
adc
pop
cld
mov
movsb
and
cwtl
lods
cltd
bound
jle
lds
sub
xchg
js
jne
sub
sbb
adc
sbb
sub
jb
loope
loop
or
jmp
push
in
stos
cltd
in
int3
pusha
mov
jnp
mov
in
mov
in
sub
xchg
in
and
and
mov
lods
push
cld
sub
insl
sub
sub
and
sbb
mov
nop
cltd
and
movsb
cld
mov
lret
pushf
lret
dec
mov
mov
les
in
aad
cmc
mov
push
in
out
mov
clc
and
cmp
lret
jmp
cmp
shrl
enter
out
pop
out
pop
jmp
lock
cld
adc
mov
ret
into
shr
mov
lret
mov
loop
sub
adc
sbb
jg
fisubrl
js
int3
stos
push
cltd
mov
clc
mov
sarb
insb
cld
and
sub
jge
insb
pop
into
ret
andl
rorl
ffreep
out
add
sub
ljmp
mov
cmp
cmpsb
cltd
pop
dec
cmp
or
scas
shll
loopne
jo
pop
test
sbb
lahf
ss
mov
filds
jmp
jg
inc
insb
cltd
popf
mov
shrl
dec
int
es
cmp
les
pop
aam
clc
aas
mov
dec
aaa
cwtl
jbe
cltd
inc
mov
dec
sub
adc
test
movsb
lcall
ja
inc
sti
push
mov
cmpsl
push
adc
sub
outsl
mov
push
cvtpi2ps
sbb
sub
mov
addr16
mov
push
sbb
and
loop
mov
repnz
std
xchg
xchg
dec
ret
js
and
mov
sub
push
mov
or
add
pop
aam
ss
jb
lock
cmp
lds
imul
loop
outsl
je
inc
ds
addr16
mov
dec
loope
movsl
pop
loopne
jmp
rolb
cmp
adc
push
arpl
mov
or
push
add
dec
fisttps
sarb
add
fnstcw
in
jmp
xor
and
sub
add
loope
cli
imul
pop
in
loop
pushf
cmp
cmc
shrb
scas
bound
int3
imul
jbe
out
lcall
lahf
mov
push
jmp
push
pop
pop
add
sub
xchg
lahf
push
daa
clc
sub
mov
pushf
sbb
lea
loop
call
repnz
adc
ret
in
clc
and
daa
or
les
xchg
and
fcoml
imul
mov
or
hlt
call
outsl
mov
cmp
hlt
insl
data16
pop
int3
push
fsubrl
outsl
push
hlt
bt
jg
dec
mov
mov
push
jge
mov
or
cld
sbb
cmp
push
insl
pop
test
shrd
dec
cmp
aad
pop
lods
gs
jle
fdivl
push
lret
std
out
nop
push
cld
out
lods
fisubrs
lret
lds
imul
add
sub
or
jecxz
mov
loope
call
test
pop
inc
mov
sub
and
lock
xor
mov
cmpsb
and
xor
and
fbstp
jo
insl
pop
subl
gs
mov
sub
lock
popa
push
sub
jmp
pop
jo
mov
sub
dec
sahf
jge
repz
lods
movsb
andl
dec
es
js
mov
and
cmp
mov
mov
movsb
inc
test
cwtl
dec
jbe
lock
xchg
dec
test
lods
leave
shr
enter
or
bound
out
pop
clc
jmp
and
pop
dec
js
stos
das
jbe
mov
rcl
and
fsubrs
sub
dec
mov
arpl
aad
inc
stos
cmp
loopne
aam
enter
cltd
adc
jns
mov
hlt
push
push
test
outsb
adc
lods
and
test
add
inc
cmp
movsl
sbb
imul
push
loop
cmpsl
sti
ss
cmc
or
inc
lret
dec
std
ret
test
shr
xlat
gs
in
aaa
int3
ss
fcompl
sub
mov
jne
out
popa
cmpsl
push
repz
push
js
leave
mov
lea
loop
pusha
pop
add
stos
outsb
adc
aad
ret
push
or
in
sub
xor
dec
adc
inc
in
out
mov
lods
pushf
jle
std
and
dec
jp
and
add
add
lock
cmpsl
cli
jmp
jbe
pushf
adc
jae
aaa
cwtl
dec
stc
push
pop
push
sbb
ljmp
push
out
push
lret
enter
sti
lea
aaa
sub
cmpsb
popf
popa
xchg
push
mov
adc
mov
lcall
popf
mov
enter
stos
ss
stos
jecxz
lret
jp
adc
dec
out
mov
xlat
pop
xlat
cmpsb
jne
or
push
mov
outsb
jbe
add
cmp
ja
clc
outsl
mov
ljmp
sub
mov
sub
xor
cmpsb
int
mov
enter
ffreep
jle
cmpsl
shrl
stos
jmp
sbb
mov
sub
in
cs
lods
sbb
push
test
and
in
mov
fisubrl
popa
sub
scas
xor
jge
jecxz
in
test
dec
sub
fcmovnb
movsl
rorb
movsb
sub
repz
sub
mov
enter
in
ret
sbb
loop
fxch
aaa
cli
idiv
cmpsb
ljmp
dec
push
add
movsb
das
lods
lcall
xor
push
inc
adc
sub
mov
outsl
loop
loopne
jo
xor
dec
rcr
mov
icebp
dec
aad
mov
scas
mov
cmpsb
mov
icebp
scas
cmp
das
push
and
mov
bound
ja
orb
adc
mov
pop
stos
xchg
imul
xchg
mov
lret
sub
dec
pop
push
inc
pop
xor
mov
insl
stos
mov
ja
and
sub
mov
jns
int
pop
mov
jecxz
sub
xchg
nop
or
or
cs
pop
das
or
sub
ret
stc
jmp
test
jmp
sahf
test
mull
xor
test
rcr
ljmp
into
cmpsb
xchg
gs
cmp
mov
leave
mov
es
std
jns
sbb
movsl
xchg
or
inc
aam
sub
mov
fiaddl
testl
sub
in
mov
dec
pop
cld
mov
out
push
jmp
push
mov
adc
mov
fcmovne
out
ds
and
push
pop
add
dec
mov
sbb
std
popa
fsubr
mov
lods
dec
push
mov
popf
test
sub
sub
dec
ret
dec
push
push
sti
lret
adc
dec
cmp
mov
mov
sub
push
loope
jl
pop
in
and
dec
lock
mov
pop
fnsave
or
and
jge
or
loope
movsb
shrb
in
push
scas
out
xchg
aad
jmp
xor
movsb
scas
sbb
xchg
cs
mov
fisubl
pop
movsl
xchg
or
or
push
hlt
lock
imul
add
pop
mov
mov
dec
insl
repz
pop
mov
xor
sub
jl
sbb
mov
lods
sub
or
cmp
mov
sub
lahf
or
jo
pop
pop
xchg
sub
pop
fcompl
mov
imul
out
xor
xor
xor
divl
xchg
in
sbb
add
pop
ja
fiaddl
into
dec
call
aam
ds
adc
scas
lock
ret
mov
in
movsl
sub
stos
sub
pop
lahf
sub
add
cmp
sub
mov
mov
dec
mov
cmc
jbe
and
add
sub
inc
xor
shrb
inc
cmp
int3
xor
sub
int
add
cmpsb
imul
inc
movsb
sub
xchg
sub
shlb
fs
pop
in
aaa
jo
insl
inc
pushf
adc
imul
sub
out
sub
jo
out
cmp
add
in
into
sbb
or
addr16
imul
mov
int3
mov
call
xchg
jmp
xorb
decb
fdiv
jmp
sub
das
push
mov
clc
js
das
ret
in
leave
gs
aaa
jmp
sub
les
push
pop
std
into
xor
pop
add
mov
insb
jmp
dec
add
test
push
cmp
jns
lcall
cmp
es
outsl
es
test
pop
rcll
or
cmp
xchg
scas
rcrb
push
jae
and
pop
ret
adc
push
add
out
iret
cld
bound
fldenv
int3
movsl
icebp
addr16
shll
cpuid
enter
loop
fsub
xor
scas
xor
lock
fdivrs
out
or
dec
aam
sub
adc
mov
push
sbb
subl
insb
inc
mov
push
fxch
sub
mov
pop
sbb
fwait
jae
xlat
jmp
out
cmp
bound
xchg
fs
fwait
dec
jl
imul
lcall
adc
in
movsl
mov
sub
jmp
sti
push
pop
adc
jo
scas
mov
pop
cmp
sub
mov
cld
sahf
xchg
data16
cmc
ja
cli
mov
xchg
pop
push
das
mov
cmp
bts
rclb
push
xor
cmpsl
push
inc
clc
enter
lods
imull
mov
jo
adc
sbb
mov
pop
shll
add
dec
frstor
jno
and
sahf
adc
sub
flds
or
stos
add
fucomip
test
xchg
add
popf
test
jmp
mov
arpl
pop
enter
push
fsubrl
sahf
pop
fs
shr
dec
leave
push
add
loope
push
pop
leave
sbb
cli
inc
pop
sub
fidivrl
stc
out
imul
mov
test
cmpsl
test
jge
cmpsl
sub
sbb
lods
js
mov
cld
leave
lcall
and
out
fisubrl
adc
sub
scas
cld
ljmp
inc
xlat
addb
fldt
xor
lock
pop
sub
xchg
push
aam
cld
add
lcall
jmp
inc
cmp
fsubs
push
int
jmp
sahf
cmp
movsl
jl
ret
xor
in
or
adc
fdivrl
inc
es
mov
inc
sub
sbb
mov
loope
mov
mov
pusha
or
frstor
sti
cwtl
mov
orl
test
pop
inc
xchg
push
mov
xor
jnp
enter
shrl
or
loopne
rcr
jae
adc
call
push
sbb
adc
dec
pop
call
push
push
xchg
jecxz
or
lds
add
adc
push
or
pop
mov
sub
sbb
sub
stos
out
jmp
mov
movsb
in
push
dec
dec
xchg
xchg
xlat
test
add
inc
push
xchg
ret
push
addr16
sub
mov
std
mov
out
and
push
pop
add
push
mov
stos
push
arpl
add
mov
lea
jecxz
xchg
addr16
rorb
lods
push
sbb
jns
push
or
lea
mov
mov
subl
into
or
icebp
cmp
hlt
jb
xlat
mov
jbe
iret
test
dec
imul
mov
sub
andl
les
sbb
pop
cmp
ret
ret
ret
icebp
xchg
insl
jecxz
add
sbb
mov
push
lock
pop
fistps
loope
in
insb
stos
xor
cld
lock
call
sbb
jns
jns
dec
dec
cwtl
cwtl
xchg
aas
fadds
pop
sub
pop
inc
xchg
mov
orb
cltd
loope
mov
pop
xchg
sarl
jmp
cmpsb
and
jns
add
pop
lock
and
rclb
xorl
fimuls
push
jbe
ds
scas
movsb
in
ss
and
push
pop
add
sbb
jae
mov
or
lret
or
lea
jge
jbe
adc
pop
sbb
jmp
mov
push
adc
bnd
es
outsl
add
paddsw
mov
les
mov
xchg
scas
imul
mov
and
xor
addr16
xor
stos
lret
iret
jp
and
lods
cltd
imul
sub
nop
pushf
jmp
mov
icebp
pop
jmp
js
outsl
jne
push
popf
mov
mov
push
lcall
in
loope
in
dec
lea
lcall
mov
popf
or
pop
and
sub
clc
ljmp
test
dec
add
sub
mov
testl
mov
stos
addr16
pop
mov
push
or
insb
cmp
jb
and
loop
push
lock
aam
mov
shr
pop
orps
dec
fildl
scas
jbe
sub
push
push
or
pop
sbb
pop
sbb
lcall
stos
xchg
dec
insl
sarb
push
call
mov
dec
lods
push
xchg
popa
shlb
push
lock
loopne
ja
loopne
push
jg
in
aam
out
cwtl
mov
cmovle
mov
in
mov
jl
pusha
call
cmp
insl
cmp
pop
mov
or
pop
add
int3
inc
ljmp
or
and
and
push
push
xchg
xchg
dec
mov
xor
aad
repnz
shr
jbe
pop
xchg
push
xchg
jae
in
mov
mov
insl
addb
lcall
dec
movaps
ja,pt
inc
and
inc
test
xor
mov
test
cmc
sub
or
xchg
rcrb
fisttps
fistpll
lcall
loopne
bound
fisttpl
aas
mov
out
dec
out
insl
mov
mov
push
cs
mov
jbe
js
dec
popf
push
enter
pop
fcmovne
pop
adc
out
mov
ja
outsl
mov
sub
ljmp
fs
mov
rclb
fdivrp
lahf
mov
orb
arpl
xor
enter
pop
test
mov
mov
xor
rcrb
stos
test
sub
loopne
sub
inc
cmp
std
cmpsb
leave
dec
leave
out
in
leave
xlat
hlt
jp
out
xchg
leave
sub
pop
iret
cltd
loop
cmp
clc
scas
xor
mov
sub
jecxz
fwait
xor
scas
sub
fs
ss
cmpsl
jno
jecxz
dec
mov
pop
cmpsb
lods
nop
sar
jmp
jge
jbe
fbld
lcall
ss
cmpsl
test
lahf
push
fsubrl
mov
in
mov
imul
insb
mov
jecxz
dec
dec
cs
sub
pop
popa
aas
sub
stc
xchg
jge
movsb
inc
dec
or
ljmp
mov
loop
cmpsb
add
out
jo
shrl
imul
pinsrw
xchg
mov
mov
hlt
jge,pn
mov
out
push
jle
lods
mov
pop
les
test
add
pop
fwait
das
add
lea
pop
sbb
ficompl
push
or
mov
rcrl
cmpps
scas
mov
lret
scas
gs
dec
out
stos
push
mov
dec
cld
ror
and
push
out
in
aam
pop
sub
subb
das
push
add
sahf
es
mov
ljmp
mov
mov
cmpsl
adc
aas
jmp
inc
push
into
in
addb
xor
mov
imul
xchg
shrl
cmp
push
adc
sub
cs
mov
or
jmp
cmc
or
das
pop
sti
push
xchg
xorb
movsl
xor
jnp
inc
outsl
inc
orb
ljmp
mov
enter
call
mov
mov
ret
imul
jecxz,pn
movsl
mov
frstor
adc
lods
pop
out
jno
dec
xchg
loope
ss
cmp
mov
mov
dec
xor
sub
mov
enter
mov
clc
and
enter
lret
dec
adc
les
mov
hlt
dec
mov
stos
or
int3
insl
mov
jp
cmpsl
test
out
push
pop
dec
repz
paddb
sub
add
mov
das
and
sub
cmp
xor
fimull
xchg
xchg
aam
fsubrl
inc
clc
xor
push
jge
push
pop
cs
scas
mov
push
mov
mov
out
shll
xchg
and
leave
xchg
mov
insl
aad
push
dec
aas
in
and
shr
cld
mov
mov
aad
add
mov
jl
insl
jo
jmp
jmp
into
shlb
sub
xchg
pop
aam
iret
into
dec
cltd
lock
pusha
out
sub
mov
stc
sub
mov
idiv
int3
nop
push
cli
test
ret
adc
rcll
sti
xchg
and
outsb
popa
mov
jae
push
das
jp
loope
in
out
in
xor
inc
adc
movsl
mov
mov
cld
sub
jg
outsb
clc
es
xor
sub
das
adc
jmp
loop
dec
ljmp
jecxz
packuswb
mov
das
fcomi
push
test
jp
mov
imul
xor
or
inc
int3
pop
stos
inc
aad
sub
aas
lock
int3
push
jmp
sub
pop
mov
mov
jb
mov
lret
pop
xor
iret
data16
iret
repnz
out
xchg
cs
cmp
lahf
mov
pop
rcl
cmp
gs
fwait
jbe
cmpsb
dec
mov
repnz
pusha
pop
push
scas
in
add
sub
sub
push
pop
push
test
pushf
pop
mov
jmp
fucomp
insl
sub
inc
add
pushl
mov
push
dec
sbb
push
dec
insb
sub
ror
push
jns
push
dec
imul
jmp
mov
sub
data16
jnp
dec
in
pop
imul
xor
test
pop
lds
mov
fstps
and
lahf
filds
es
push
xchg
adc
dec
loopne
lock
out
jle
and
sbb
or
pop
push
pop
repz
cmp
cmpsb
sbb
ljmp
imul
lock
enter
lea
ljmp
decb
push
bound
push
jbe
jne
icebp
sub
loope
popf
mov
cmp
je
dec
and
cmp
sbb
push
cmp
lods
mov
outsb
in
flds
sti
push
outsl
sbb
in
jns
cs
mov
lcall
negl
stos
mov
scas
out
inc
cmp
insl
std
sub
xor
loop
enter
mov
push
sub
jp
shrb
add
jg
or
mov
scas
inc
mov
push
test
and
dec
cmp
imul
mov
call
mov
push
jnp
outsl
cld
jno
out
mov
loop
cmp
addr16
in
dec
enter
jl
leave
push
xchg
push
sbb
rorb
test
aad
mov
dec
imull
or
cmpsb
divl
and
jns
sbbl
idivl
arpl
add
cmpsb
mov
enter
jb
nop
outsb
movsb
pop
mov
pop
mov
cli
rcr
cmpsb
insl
scas
stc
stos
pop
shl
sub
mov
and
pop
out
dec
shll
loop
aam
ret
sbb
mov
sbb
cmc
loope
and
pop
sub
or
aaa
push
lods
inc
sar
lcall
fsubrl
scas
jns
rorl
test
xor
jbe
xor
hlt
inc
adc
lcall
ja
call
imul
stc
pushw
pop
jnp
mov
test
loop
mov
sbb
fnstcw
test
pop
cmp
fldcw
sbb
fcmovnu
jmp
push
adc
test
or
sti
push
adc
jnp
loope
pop
jp
out
pop
sti
jne
add
inc
adc
in
ljmp
out
jge
pop
mov
rcrl
movsb
out
dec
imul
ret
cmpsl
ljmp
fwait
out
sub
out
push
pushf
call
popa
mov
and
cmp
imul
push
sub
push
xor
sbb
jnp
or
inc
push
mov
cli
clc
push
loopne
pop
rclb
test
jmp
stos
adc
lret
and
loop
push
or
cmc
inc
sahf
adc
or
lds
adc
stc
aad
lods
sub
sbb
or
out
adc
and
leave
add
mov
leave
xor
pop
stos
or
adc
push
or
icebp
jecxz
push
pop
es
jmp
leave
cli
sub
aas
cmp
inc
int3
cltd
pop
fisubl
and
shlb
sub
mov
loope
add
mov
lahf
xor
sub
push
dec
mov
mov
arpl
fsubrs
ss
lods
push
into
push
pushf
out
jmp
ss
hlt
lret
push
mov
mov
enter
xchg
push
mov
movsl
jmp
dec
decl
push
adc
ret
imul
ds
test
mov
and
xor
lcall
adc
popa
into
mov
xor
sub
aam
and
mov
and
push
and
incl
adc
out
sub
lret
out
sbb
fsubrs
dec
mov
mov
push
lahf
fwait
push
xor
cmp
fmul
out
sbb
and
push
and
sub
mov
je
sub
shll
fcompl
push
mov
test
mov
aas
test
pop
out
std
push
fildl
int3
mov
divl
sti
das
xor
ja
test
inc
push
xor
mov
sub
xorb
sub
mov
adc
dec
sub
or
pushf
rorb
out
movsb
xchg
in
imul
test
imull
jne
push
or
jp
adc
aad
ret
je
pop
mov
mov
sub
and
int3
rcl
adc
add
shlb
les
sti
push
pop
stos
lock
pushf
add
adc
scas
fadds
jns
and
push
cld
push
jmp
lahf
cmpsb
cmp
push
mov
mov
clc
sbb
in
adc
inc
lock
movsb
nop
fistpl
out
pop
or
mov
lds
lcall
xor
jb
inc
adcl
xchg
outsl
sub
jbe
cltd
jge
loop
es
or
xor
movsl
mov
xchg
cmp
rcrb
fchs
inc
dec
cs
daa
push
psubd
jmp
stos
aam
shr
sub
cmpsl
fsubrl
ret
in
cmpsl
lock
push
test
sbb
pop
movl
aaa
sub
lock
data16
iret
movsl
cmp
pop
or
ficompl
add
das
push
inc
int
aam
sarl
add
std
inc
hlt
test
test
test
das
mov
jl
sbb
push
fmul
mov
jo
fldl2t
inc
inc
jl
sub
lods
add
cwtl
jo
outsl
pop
mov
lock
mov
and
mov
in
or
pop
imul
pushf
movsl
sti
xchg
stc
cmpsb
mov
pop
sub
push
cli
imul
scas
pop
mov
sahf
test
ljmp
push
jnp
outsl
mov
rcll
jbe
cmpb
jl
cmpsl
addl
cmp
imul
call
jo
cld
cmc
popf
mov
lcall
clc
jmp
in
test
pop
pushf
dec
jnp
int3
insb
outsl
test
dec
mov
xchg
push
and
jl
jmp
lods
xor
into
fwait
rolb
cld
div
push
add
fimuls
push
sar
fstps
mov
stos
mov
push
mov
mov
das
jp
xchg
movsb
sub
imul
test
ret
fisttpll
out
mov
jo
pop
comiss
xchg
dec
lods
leave
bound
enter
mov
sahf
jne
fs
add
scas
cwtl
das
jbe
xchg
gs
or
mov
xor
int3
cltd
mov
dec
jl
out
push
sub
int
hlt
outsl
dec
hlt
in
mov
rorb
mov
and
rol
out
mov
cmpsb
xor
adc
int
xor
cmc
iret
mov
cltd
dec
fimull
test
rol
mov
xchg
ss
in
mov
cmpsb
das
ds
icebp
sub
pushf
cs
jno
jns
push
sub
lret
mov
sub
aaa
jg
sbb
lcall
lahf
dec
jbe
ja
mov
sub
cmpsb
movsb
jo
loope
dec
imul
into
pushf
lds
call
loope
pop
movsl
mull
sub
jmp
movsb
shrb
mov
pusha
add
fldcw
xchg
lahf
inc
mov
out
fdivl
jmp
adc
test
jo
mov
sub
pop
dec
arpl
jbe
or
mov
test
jl
xchg
push
call
jb
xchg
add
sub
pop
mov
clts
mov
cmpsb
xchg
ret
scas
ret
push
or
outsl
out
jbe
xchg
cld
enter
lahf
into
sbb
push
mov
dec
inc
insl
pop
mov
mov
push
or
cmpsb
or
negb
pop
loop
ljmp
int3
movsl
push
add
xor
push
sahf
dec
pusha
pushf
pop
pop
pop
scas
fimuls
jno
cmp
test
jnp
pusha
lret
push
testb
out
push
mov
test
xor
out
iret
dec
xchg
test
add
sub
stos
cmp
std
mov
adc
sub
cmp
es
loopne
push
clc
std
testl
aas
shlb
scas
push
mov
inc
mov
das
movntq
mov
call
sub
xchg
cmpsb
adc
les
lahf
mov
dec
loopne
and
xlat
xchg
and
loope
xor
mov
add
xchg
sub
nop
mov
fimuls
in
push
fdivr
xchg
sbb
mov
mov
mov
push
adc
enter
mov
loope
loopne
sbb
test
xchg
sbb
sti
mov
push
fmuls
push
sahf
jg
mov
inc
in
jg
dec
rcll
dec
rcr
xchg
outsb
test
cmp
lcall
jle
xor
adc
call
pop
mov
cmpsl
mov
or
sbb
mov
pop
add
or
or
lods
stos
fnsave
test
pop
mov
sub
sub
lods
pop
mov
sub
jg
icebp
or
cmp
jne
pop
in
or
iret
fstps
dec
fisubrl
cmc
adc
ret
icebp
push
sbb
xor
jo
and
testb
or
orl
sub
mov
pop
sbb
fildll
iret
cmc
cmp
outsl
in
inc
das
jae
push
xchg
cmp
lcall
das
jl
inc
lcall
mov
sbb
fidivl
daa
adcl
stc
push
inc
adcb
dec
xor
jle
mov
fldt
add
xor
popf
stos
xor
or
push
shld
dec
jl
jmp
imul
fcompl
jbe
sub
movsl
or
and
cmpsb
in
push
sbb
es
fld
push
cmp
xchg
inc
cmp
ds
das
mov
sbb
jecxz
lea
cmpsb
sub
mov
sub
fwait
in
and
jmp
mov
fimuls
lret
andb
sub
add
and
idivb
push
sub
cmp
ljmp
in
std
or
es
mov
or
cmpsl
int3
jmp
sub
mov
pop
addr16
sub
push
sub
orl
lahf
adc
rcll
das
pop
nop
mov
pop
test
dec
lret
push
sub
outsb
aam
lods
ljmp
mov
insb
lods
cltd
cmpsl
test
aaa
jg
jns
mov
cmpsb
shlb
fwait
lret
cmpsb
mov
pusha
lock
xor
sbb
mov
aad
lahf
testl
std
cmp
adc
int3
imul
sbb
test
pop
add
call
dec
push
lods
imul
hlt
loop
sub
dec
pushf
bound
test
sarl
iret
dec
and
mov
fstl
in
sub
jbe
pop
mov
stc
inc
je
xlat
fsubrl
rol
jnp
sub
push
sub
push
push
fstl
or
push
gs
sub
pop
jae
dec
out
or
lea
mov
adc
jb
ljmp
mov
ficomps
test
out
inc
pop
xor
cli
sub
pop
push
and
lret
inc
adc
and
xor
sub
xor
lea
inc
popf
ja
lcall
pop
sub
mov
popa
in
adc
adc
fbld
cli
pop
pop
jo
call
leave
pushf
ljmp
lds
mov
aaa
lea
or
outsl
nop
xchg
mov
push
test
sub
cmp
mov
cli
imul
jnp
sub
jmp
addr16
mov
add
mov
xlat
push
adc
je
addr16
jmp
sbb
cmpsb
incl
dec
out
pusha
cmpxchg
mov
sub
cltd
push
mov
out
sbb
je
mov
loopne
mov
loop
lods
adc
test
dec
es
jbe
jl
int
imul
loopne
sub
daa
mov
mov
cld
fidivs
mov
jae
jb
adc
inc
int3
lahf
sbb
jecxz
sub
mov
imul
imul
stos
addb
dec
push
inc
inc
push
fldcw
inc
mov
or
pop
shl
add
icebp
std
lret
rol
cmpsb
hlt
dec
andb
or
in
add
aam
dec
aas
xchg
jns
arpl
sarl
lods
inc
inc
fsubs
in
loopne
paddb
into
or
push
rorl
imul
out
mov
dec
inc
mov
pop
fcom
push
enter
pop
fmull
cmpsb
jmp
outsb
dec
inc
insb
push
xlat
in
mov
shrb
lds
jnp
scas
icebp
jl
adc
cmpsb
pop
mov
clc
push
sub
lock
movsb
mov
out
je
out
rcrl
push
inc
out
or
rorl
xchg
mov
and
enter
scas
xchg
dec
loope
and
add
jmp
pushf
pop
and
loop
push
push
pop
inc
das
xor
fadds
mov
xor
out
ret
mov
outsb
and
jnp
fcomp
dec
or
or
mov
lock
fs
out
pop
lods
rcrl
in
inc
rclb
test
dec
xor
dec
jne,pn
cwtl
movsb
jbe
lock
xchg
in
push
adcb
popa
mov
outsl
mov
imul
pop
lods
lods
add
mov
pop
insl
xor
push
imul
sub
call
pop
stos
imul
ljmp
pop
xchg
pusha
mov
mov
leave
aad
sub
popf
push
adc
lret
jge
addr16
dec
xchg
stos
cmp
push
hlt
lcall
fcmovu
leave
sub
stc
das
lock
into
pop
xchg
shl
jmp
shld
sbb
xchg
aam
dec
and
movsl
xchg
xor
mov
xor
sbb
push
push
fs
dec
and
lea
mov
cld
rcr
sarb
and
sbb
loopne
jge
xchg
mov
jle
shrl
mov
sub
add
dec
push
mov
jae,pt
push
insl
xchg
push
outsb
cwtl
cmp
test
mov
pop
popf
dec
outsl
xchg
adc
out
aad
out
test
inc
push
in
add
cmpb
shl
lock
out
insb
pop
jl
pop
addr16
xchg
dec
dec
lret
jns
out
cltd
mov
sub
test
call
leave
stos
test
repnz
and
adc
ss
sub
je
push
push
jae
push
or
mov
daa
mov
dec
pop
and
xor
in
adc
out
popa
int
adc
mov
or
and
mov
jo
movaps
leave
adc
in
ljmp
outsb
push
imul
jmp
sub
shl
fs
jmp
and
nop
lea
pop
sbb
add
jge
lea
aam
mov
jb
cmpsb
inc
pop
fisubrs
test
inc
lret
cltd
push
addb
mov
pop
fcoml
enter
sub
and
jbe
leave
xor
int
int
dec
mov
ljmp
sub
insb
outsb
dec
stos
shrl
lea
fsubl
cltd
adc
cmpsl
lcall
mov
sbb
pop
es
shrb
pushf
lahf
adc
mov
pop
notb
rcr
pop
out
mov
xchg
jno
insb
icebp
lret
cs
push
push
mov
lret
das
call
sub
aas
lret
xchg
sub
out
mov
out
popa
xchg
aas
sbbl
call
test
sub
pop
adcl
ljmp
int
mov
insl
inc
clc
aad
inc
cli
push
jbe
mov
cmc
inc
ljmp
xchg
out
jnp
mov
movsl
or
mov
pop
call
lahf
call
movsl
xlat
sub
addr16
xlat
stos
push
addr16
aaa
scas
loop
jl
arpl
fs
mov
cwtl
loopne
mov
loop
inc
test
pop
cld
adc
jb
mov
inc
inc
out
push
test
out
pop
jbe
stos
test
testl
scas
mov
xlat
xor
sub
jmp
xor
sub
mov
mov
add
xchg
cmpsb
loope
ja
test
test
dec
mov
dec
lea
in
cmp
fsts
xchg
adcb
cmpsl
inc
add
sub
dec
divl
push
ljmp
xchg
mov
mov
push
push
mov
add
push
jmp
enter
into
cwtl
push
mov
push
aaa
int3
cmp
fnsave
xlat
lods
rcrb
js
fnstcw
scas
cmp
adc
jae
sti
pop
andl
movsl
shrl
dec
shlb
and
decb
sbb
and
lock
cmp
mov
call
cmp
jp
je
jo
loopne
ret
int3
dec
test
insb
fcmovnb
je
jb
pushf
fbstp
inc
mov
xchg
aam
pop
scas
mov
adc
fwait
sub
icebp
into
sarl
gs
imul
lock
loope
cli
mov
mov
out
mov
loope
fidivrl
mov
mov
pushf
inc
xchg
adc
mov
cvtps2pi
cmpsl
inc
adc
arpl
xor
push
fmul
out
pop
xchg
sahf
das
pop
adc
pop
dec
inc
mov
mov
and
jmp
dec
lcall
outsl
mov
lock
adc
cmp
aam
cwtl
fistpll
shl
xchg
xchg
adc
repnz
aam
pop
xchg
in
inc
shll
push
es
ret
mov
repnz
insb
loopne
or
dec
jge
ss
add
inc
es
out
mov
mov
popf
cld
rorb
lret
jns
in
sbb
lock
push
sub
outsl
aam
inc
or
test
or
shr
pop
cmp
jl
fs
popf
adc
mov
movsb
pop
insb
and
jne
mov
jp
subl
cmp
dec
push
dec
test
push
pop
fs
arpl
mov
bswap
mov
lret
in
mov
leave
nop
push
orl
jmp
push
ret
and
mov
jge
flds
mov
adc
mov
push
orb
pop
xor
fldt
loopne
inc
push
es
imul
mov
fcomps
cmpsl
test
clc
ja
pop
hlt
call
adc
inc
mov
rol
es
out
lcall
gs
lret
fstps
movsl
inc
push
pop
dec
mov
data16
or
leave
repz
fistpll
movsb
jmp
mov
pop
mov
push
or
movsl
mov
sub
mov
repnz
or
addr16
inc
aam
mov
mov
lds
add
rorb
jae
sbb
leave
out
rolb
shl
movsb
ret
in
sbb
fwait
ja
imul
decl
cmp
jb
mov
lcall
std
push
cmp
and
clc
dec
push
cmp
inc
das
les
mov
test
or
les
dec
es
out
mov
cmp
test
hlt
fstps
loope
pop
ds
test
movl
jb
sub
sti
bound
data16
hlt
cmp
icebp
idiv
sub
add
mov
les
jbe
pop
push
daa
cmp
pop
test
add
lret
adc
fsubl
fmuls
sbb
in
lods
adc
nop
test
mov
bound
test
lcall
dec
mov
xor
stc
mov
dec
in
bound
push
fldcw
adc
repz
cmpsb
push
mov
sub
lea
ja
cli
cmpsb
cmpb
inc
add
cmpsb
call
fnstenv
pop
mov
pop
dec
movsl
push
fimull
pop
cmp
mov
mov
or
pushf
mov
sbb
out
push
test
sti
lds
xor
aaa
popa
nop
mov
lock
sbb
cs
pop
add
sub
clc
xor
les
int3
lea
pusha
loope
mov
adc
add
and
loope
out
inc
jmp
out
lcall
out
and
xor
mov
adc
dec
xchg
pop
xchg
movsl
or
fidivrs
jnp
icebp
fbstp
imul
push
mov
pop
xchg
mov
icebp
sbbl
rol
jae
and
daa
xor
sub
lods
sub
lcall
jns
push
enter
out
dec
pop
stos
in
fnstenv
inc
or
mov
pop
cli
dec
insl
ret
cmp
sub
fsubs
shl
jmp
cltd
shlb
lea
les
fucomip
push
xchg
add
lock
push
or
mov
mov
xchg
jo
sti
pushf
mov
pushf
mov
mov
jne
mov
hlt
jmp
push
adc
icebp
dec
enter
subb
push
call
sub
jns
jp
xor
subl
xchg
lea
or
mov
inc
push
int
out
out
test
pmaxsw
int3
cmpsl
sub
ljmp
call
mov
xchg
shrl
dec
jmp
xchg
cmp
dec
fimull
sub
cmpsb
xchg
mov
sbb
xor
cwtl
adc
jecxz
push
out
fsubr
dec
std
push
mov
add
dec
aam
pop
into
adc
leave
pop
cmpsl
sbb
push
dec
cmp
pop
push
sbb
jge
or
scas
ljmp
xchg
jmp
add
and
aad
mov
sub
jmp
adcb
les
mov
out
out
adc
daa
cmpsb
pop
mov
rol
icebp
dec
xchg
call
add
adc
cltd
inc
rclb
clc
test
nop
sub
pop
pop
lods
outsb
aas
mov
dec
mov
inc
and
imul
insb
shlb
xchg
dec
subb
arpl
mov
insl
andb
insb
movsl
xor
nop
repnz
add
lds
mov
fisttps
jns
fdiv
hlt
shrb
lea
lret
in
pusha
cmp
test
jo
sbb
fsubrl
mov
jl
fs
stos
adc
mov
je
in
mov
loopne
jmp
out
and
jmp
roll
insb
push
test
ljmp
test
lds
ljmp
and
sub
adc
dec
aaa
lock
mov
sub
aaa
fs
addr16
out
outsl
jmp
push
jg
pop
cwtl
pop
and
pushf
sub
cwtl
lock
jnp
ljmp
and
adc
mov
insl
popf
rcrb
inc
jnp
les
jo
ja
cwtl
lea
sub
addr16
stos
enter
cmpsb
iret
mov
nop
outsb
fs
lock
in
xlat
pop
lds
shr
fidivl
sub
jns
lret
or
insb
sub
push
mov
orb
jge
out
jmp
jo
das
pop
imul
push
sbb
fcmovu
mov
int
shr
sub
dec
lea
adc
xor
ljmp
or
out
xlat
mov
mulb
jo
dec
lea
xor
popf
sbb
sub
cs
cmpsb
scas
sahf
mov
mov
sbb
mov
dec
rorl
test
in
sub
mov
insb
rcrb
std
xchg
loop
xchg
push
inc
push
mov
sbb
sub
outsb
cwtl
lds
jmp
jns
sub
or
dec
sbb
cli
cmp
lahf
mov
pop
stos
repnz
mov
mov
or
shlb
and
popa
mov
aam
jp
sub
aad
cmpsl
sub
cmpsb
or
add
scas
fnstenv
aas
mov
movsl
pop
inc
pushf
scas
push
std
cmp
and
out
jo
or
ret
aad
xchg
pop
sbb
scas
das
ret
inc
push
mov
mov
fcoms
dec
push
and
inc
jge
cmp
cwtl
popf
out
lcall
cli
test
sbb
nop
jmp
test
rcl
das
fwait
jnp
iret
adc
int
and
mov
fidivs
sbb
jbe
mov
pop
inc
loope
sub
mov
jmp
lock
push
mov
shlb
or
lret
pop
cmp
xor
bound
loope
mov
pusha
sub
adc
aam
mov
sarl
leave
or
sub
ds
clc
lahf
xchg
sub
test
jno
sahf
cwtl
jnp
popa
jge
enter
hlt
dec
pop
fstpt
jmp
addr16
cmpsl
js
push
sub
adc
gs
push
mov
jne
mov
fmulp
cltd
lds
sti
das
and
add
sub
sbb
push
and
cmpsb
pusha
dec
test
jmp
sub
push
leave
cli
clc
das
inc
lock
lods
jmp
popa
fnsave
pushf
and
cltd
frstor
mov
cli
cmpsb
inc
xchg
mov
punpcklbw
sbb
push
sbbb
aad
loopne
pop
nop
jg
xchg
and
imul
lods
cmpl
lods
in
loopne
out
pop
dec
and
mov
pushf
push
test
sub
mov
cltd
mov
dec
cmpsb
std
or
hlt
mov
das
fcoms
push
decb
dec
jle
inc
enter
or
jmp
add
daa
test
lods
shl
sub
repnz
je
or
sub
insb
outsb
jge
pop
js
mov
movsb
xchg
mov
xchg
mov
sub
jnp
jmp
insl
mov
jbe
inc
test
jmp
push
mov
or
mov
inc
and
loopne
push
shrl
das
push
sub
sbb
sbb
enter
mov
push
cmp
dec
or
pop
cmp
pand
push
aad
icebp
sub
movsb
jnp
lods
pop
fsubs
fsubrl
ja
lahf
fidivs
xor
jge
cmp
movsl
fs
lret
int
cmc
insl
shr
outsb
aad
loope
sub
push
jbe
imul
daa
mov
jo
cld
pop
push
push
es
jbe
push
rcl
popa
add
in
mov
test
adc
mov
xchg
jb
mov
pop
mov
inc
or
in
cmp
dec
mov
jecxz
mov
testb
shrl
cmp
decb
mov
push
lret
fmull
inc
fldt
ret
pushf
inc
xor
jbe
mov
arpl
aaa
fcomps
test
bound
sub
mov
js
fucomp
dec
movsb
xchg
stos
sub
inc
lods
enter
and
jl
fs
insb
ficomps
push
in
or
ret
push
enter
mov
mov
adc
lret
or
sbbb
mov
insb
pop
lret
push
add
cmpsl
movl
inc
in
dec
fadds
icebp
imul
out
aas
inc
popf
sbb
jo
pop
int
ljmp
std
cmpsb
mov
in
insl
jbe
cwtl
sbb
push
jg
lea
stc
xor
movsl
cmpsb
loop
and
les
rcrb
out
dec
jle
scas
push
inc
ljmp
test
sub
leave
sub
add
hlt
ror
and
imul
repnz
stc
dec
cmpsb
lea
push
fbstp
mov
repnz
inc
popf
adc
jns
sub
push
sub
sub
pop
aam
add
mov
js
jmp
stc
jbe
mov
inc
lods
cmp
push
rolb
xchg
pop
pop
stos
and
cwtl
lock
ret
call
inc
fwait
mul
and
jbe,pt
fs
push
xchg
cmc
lock
rcrl
inc
fs
cmpsb
out
cltd
inc
sub
inc
add
repnz
cltd
into
dec
cmpsb
aad
mov
jg
fmuls
cmpsb
cmp
pop
in
repnz
test
pop
out
and
into
mov
jg
sub
outsl
repnz
and
fcompl
cmpsb
sub
out
add
mul
pop
pop
jecxz
nop
sbb
imul
or
test
in
or
mov
jmp
fwait
mov
cmp
mov
enter
leave
in
clc
iret
fwait
or
lods
sbb
fcompl
cmpsb
sbb
in
ficomps
jbe
test
test
jae
addr16
dec
leave
cmpsb
ds
dec
repnz
les
dec
lods
and
stc
add
inc
jp
add
inc
or
xchg
jg
and
jmp
jb
leave
xor
sub
dec
out
pushf
adc
xchg
adc
shrl
jle
mov
jmp
shrb
push
mov
fdivrs
jbe
dec
push
jae
xor
pop
mov
sbb
repz
mov
or
scas
lea
rcrb
cmpsb
push
or
lea
inc
xchg
mov
dec
push
pmuludq
pop
pop
cmc
out
and
scas
cmpsl
jne
dec
xchg
mov
jmp
mov
lods
xchg
addr16
outsl
mull
mov
mov
sbb
lcall
jmp
push
aam
and
clc
jp
mov
push
or
or
pop
aas
jo
xchg
sub
out
push
cmp
mov
int
insb
mov
and
mov
nop
in
insl
push
fwait
popa
dec
movsb
sub
enter
das
aaa
test
or
arpl
fstpt
divb
ljmp
dec
test
fldcw
adcl
scas
sbb
dec
jge
dec
pop
pop
fs
lea
icebp
push
aam
pop
cmp
xchg
pusha
test
loop
lcall
dec
push
push
test
lea
popf
cltd
and
pop
mov
fistpl
cmp
test
outsb
push
cmp
stos
pop
adc
cwtl
je
dec
lahf
ja
outsb
dec
out
jnp
iret
or
mov
cmp
cmp
push
xchg
orb
cmp
jnp
decl
jp
aad
fsubrs
call
test
push
fmull
insb
arpl
lock
mov
dec
and
mov
adc
clc
lds
xlat
clc
dec
push
movsb
mov
mov
cmp
inc
mov
push
call
mov
cmp
out
cmc
int3
scas
mov
push
mov
hlt
pop
clc
shrl
xchg
out
icebp
adc
adc
mov
imulb
test
ja
jne
pop
pop
dec
out
sbb
add
push
or
clc
cld
sub
mov
jns
enter
mov
fsub
aam
js
mov
cmpsb
lcall
fdivs
pop
and
and
sub
sub
or
fwait
dec
jbe
je
das
mov
sbbb
and
sub
in
cmp
addr16
cwtl
dec
cmp
jb
or
es
sub
inc
shl
cld
ljmp
cmpsb
test
and
push
pushf
cmpsb
mov
lods
lcall
xchg
lret
lds
in
jbe
pop
sub
push
inc
adc
ljmp
stc
dec
pop
inc
dec
hlt
shl
loop
mov
xchg
out
call
jmp
add
xchg
int
sbb
lcall
std
test
sub
fldenv
mov
out
insl
push
push
out
inc
sbb
pop
jae
push
or
lods
shl
pop
hlt
mov
fdivl
jg
ret
shlb
loop
rclb
ret
or
pop
or
jl
jnp
je
out
ret
lods
mov
pushf
leave
and
adc
lods
or
add
movsl
xchg
sub
ja
cmp
mov
repnz
and
or
add
xchg
jl
es
pop
loope
addb
rep
stos
repnz
adc
inc
in
mov
hlt
stos
mov
pusha
dec
out
and
lret
addr16
pop
cwtl
dec
leave
push
inc
xchg
test
mov
aas
incl
sub
push
sub
cmpsb
sahf
test
mov
scas
cmpsb
mov
xor
mov
and
xchg
add
mov
sub
mov
mov
popa
shl
movsb
lcall
dec
push
sarl
cmp
mov
cmp
lret
stos
pop
shr
push
adc
mov
and
add
js
mov
mov
cld
jno
sbb
lock
pop
mov
pop
bound
int3
jb
pop
jmp
lret
fwait
jo
das
fsubrl
mov
sbb
sub
mov
sbb
ret
in
cld
mov
fwait
sbb
xor
or
out
xchg
test
int3
sub
sub
fs
sti
pop
pop
push
sub
std
sub
scas
fldt
xor
popf
mov
sbb
pusha
jne
in
xchg
jp
sahf
ljmp
ror
sahf
mov
add
fbstp
insl
fmuls
mov
andb
cmc
sub
and
outsl
imul
inc
push
pop
shrb
mov
test
leave
lret
stos
in
fimull
jnp
movsl
mov
or
mov
fcoms
repnz
cld
push
sub
xor
cltd
ja
cli
lea
sub
in
cmpsb
stc
dec
subb
pop
push
and
shrl
pop
and
jo
fcom
das
faddl
cmc
stc
cmpb
inc
call
shrl
jmp
mov
jne
and
pop
fmuls
cmpsb
mov
sub
or
stos
loopne
jae
cwtl
cmpsl
imul
xor
mov
loop
popl
ss
xchg
mov
movsl
pop
aam
int3
push
xlat
das
cld
push
out
jmp
xchg
loop
sub
in
in
repnz
push
nop
sub
cmc
es
aam
dec
ljmp
mov
pushf
and
gs
xor
insb
jp
jo
outsl
dec
or
lcall
clc
and
loopne
stos
adc
lcall
leave
insl
sub
stos
sti
stos
nop
pop
pop
rcrl
jp
cmp
mov
int3
imul
lret
sbb
icebp
mov
inc
sub
sti
jg
push
mov
push
push
jo
pusha
add
loop
adc
fidivs
cmp
and
mov
loopne
lea
cmpsb
lods
xchg
adc
cmp
sub
in
pop
xchg
mov
pop
popf
js
addr16
out
test
jl
ja
add
js
pop
add
out
xchg
in
into
imul
sarb
cwtl
popa
int3
mov
jae
mov
mov
pop
pop
nop
or
add
mov
int
push
add
ror
mov
dec
lcall
loop
fstps
shll
cmpsb
lret
mov
fcmove
fldt
lods
fcomps
dec
mov
daa
mov
in
xor
push
lea
pop
cmpsl
mov
call
stc
mov
shrb
cmpsb
int
ds
jbe
leave
cltd
in
add
push
ljmp
cmpsb
mov
adc
xchg
add
addr16
out
out
int3
sub
hlt
leave
mov
lds
push
sub
or
outsl
subl
cmc
or
inc
clc
cld
mov
in
call
sbb
push
or
movsb
jbe
dec
or
jns
movsl
add
cs
adcb
loop
test
push
test
cmp
pop
fsubr
and
dec
adcb
mov
out
dec
adc
out
jo
mov
test
pop
pop
or
clc
and
xor
in
daa
test
iret
xor
popa
dec
das
push
sub
cmpsb
call
mov
lahf
rcrl
lock
scas
sub
xorl
mov
pop
adc
loope
in
call
jl
ds
cmpsl
popf
adc
sub
outsl
icebp
ret
sbb
aaa
mov
gs
and
les
mov
dec
in
mov
roll
dec
call
test
outsl
pop
ljmp
dec
int3
cld
cs
fisubrl
jns
xchg
push
movsb
sarl
imul
cmp
pop
mov
sbb
test
loopne
ds
xchg
enter
mov
mov
loopne
lret
sbb
pop
mov
movsl
out
push
sbb
lock
pop
dec
sbb
mov
adc
stos
adc
jmp
jg
push
push
psubsw
arpl
mov
lock
stc
aaa
push
dec
movsb
js
fs
push
mov
lods
cs
mov
lods
cltd
cmpsb
aam
das
mov
mov
mov
mov
jecxz
push
leave
and
jp
fdivrs
jnp
xchg
imul
stos
cli
std
loopne
cmpsb
or
jle
scas
cmpsl
faddl
adc
dec
enter
jg
dec
pop
lods
lods
sbbb
rcr
test
mov
cwtl
jmp
mov
stc
cmp
and
dec
mov
adc
cltd
scas
fdivrl
popa
xor
push
pop
pop
pop
cmp
cli
imul
or
test
mov
sub
sarb
jnp
mov
imul
mov
jge
bound
mov
push
cmp
imul
stc
sarb
sbb
sub
outsb
push
jl
mov
dec
xchg
pop
test
add
cltd
xor
lret
mov
mov
sbb
lods
shll
inc
sbb
push
arpl
cmpsl
inc
shrb
xlat
and
lahf
dec
fsubs
jbe
mov
cwtl
push
rorl
stc
lret
jbe
ret
adc
jmp
in
dec
and
pushf
icebp
js
inc
push
inc
or
ret
add
leave
popf
lret
jbe
stos
jg
stos
sub
sub
push
adc
add
pop
cmc
es
or
mov
sub
xlat
and
sub
cmp
sbb
andb
cmpsl
sub
mov
xchg
insb
pop
outsb
fdivl
jb
pop
pop
lahf
sbbl
cs
mov
sub
test
jecxz
in
or
add
shlb
repz
arpl
mov
std
add
cmpsb
cmpb
out
sbb
xlat
dec
jecxz
mov
mov
mov
movsb
dec
push
push
sbb
data16
enter
push
test
mov
pushf
pop
repnz
adc
and
leave
ljmp
jnp
test
jne
das
xchg
popa
xchg
lahf
jns
fwait
mov
adc
sub
push
rcl
lret
mov
cmpsl
dec
jbe
pop
push
je
out
icebp
xchg
aas
xchg
xor
or
and
jmp
arpl
mov
out
dec
lahf
mov
movsb
pop
dec
aam
cmp
sub
jne
enter
das
mov
test
stos
mov
xchg
jae
push
xor
stc
scas
dec
push
jle
insl
imul
inc
jecxz
aad
lret
mov
cld
das
das
jbe
movsb
mov
dec
rorb
or
mov
fistps
sbb
clc
jb
inc
cwtl
leave
cmp
out
push
ret
xchg
popa
and
movsl
jge
fisubl
in
cmp
dec
lods
aam
sub
js
les
pushf
jle
dec
stos
xchg
fcoms
cmp
stc
sub
fistl
lods
lea
mov
outsb
es
int3
mov
outsl
iret
rol
push
popf
push
outsb
icebp
imul
mov
bnd
scas
inc
mov
ds
scas
int3
and
lcall
sbb
add
into
mov
nop
lcall
add
inc
rclb
mov
and
push
inc
and
and
das
mov
push
test
push
faddl
in
sahf
jbe
and
test
test
jo
jne
test
adc
and
jnp
and
dec
push
ret
and
data16
int3
cmp
mov
mov
mov
cmp
mov
test
sub
mov
cwtl
ljmp
aad
test
adc
test
dec
dec
jbe
xor
cmp
or
xchg
mov
mov
add
sbb
enter
push
sub
movsl
sti
idiv
push
add
inc
iret
sti
jle
cmp
cmp
mov
pop
inc
cltd
xor
xor
mov
test
adc
push
push
fwait
ljmp
pop
int
dec
lods
mov
cmpsl
or
jbe
roll
faddl
ds
pop
leave
lret
jbe
sub
lahf
adc
out
fxch
inc
jle
and
mov
stos
mov
cmovle
mov
pop
xchg
mov
rep
cs
test
sub
mov
sti
sti
das
xor
add
cmc
sbb
pop
lret
lret
push
movsb
pop
clc
mov
or
xlat
lods
insb
icebp
sub
in
std
cmp
fidivl
pop
movsb
fcmovb
push
psubusw
push
pop
lcall
sub
mov
out
sub
fldenv
bound
pop
and
scas
mov
repz
fdivl
and
pop
dec
sbb
imul
push
pop
jge
add
jecxz
xchg
insb
popf
xlat
jbe
pop
sbb
add
pop
icebp
subb
loopne
adc
clc
push
notl
int
ss
hlt
pop
push
mov
test
pop
popf
enter
mov
pop
xchg
stos
test
add
movsb
xor
jge
rorl
sbb
test
sub
jno
fwait
mov
push
scas
and
cmp
ret
sub
fadds
or
outsl
sub
subb
add
fwait
sub
stos
inc
stos
mov
xor
push
cmp
je
mov
mov
mov
insl
fldl
call
lea
imul
push
mov
loopne
das
cli
xchg
aas
sub
mov
dec
dec
std
out
mov
sbb
jmp
sub
adc
mov
int3
xor
pop
pop
inc
lds
jp
fnstenv
imul
mov
imul
out
push
lods
dec
sub
or
adc
lock
sbb
mov
xor
adc
and
ja
sub
sub
stc
pop
mov
lock
pop
and
in
cmp
cmp
pop
das
push
ret
push
pop
pusha
push
xchg
mov
jne
cld
fistps
lods
inc
rclb
sbb
and
addl
jno
lods
loop
sub
inc
pushf
scas
movsb
sbb
fldt
sbb
add
enter
and
and
lea
mov
or
stos
cmp
or
xchg
fldcw
stos
cmpsl
sbb
shl
dec
loopne
sub
insb
ljmp
jp
xchg
jns
out
into
cmp
lahf
out
jne
sub
push
movsb
sub
fildll
adcb
mov
dec
icebp
pushf
scas
push
xchg
jae
pop
add
mov
inc
cwtl
or
aam
sbb
mov
jp
je
cmp
or
das
sbb
lds
mov
sub
sbb
sbb
cld
es
adc
xchg
repnz
in
orl
test
jbe
adc
jb
test
ficoms
cltd
fcoms
add
aaa
leave
lahf
mov
test
movsb
mov
mov
push
jmp
js
pop
xor
dec
mov
push
subl
leave
pop
mov
sbb
mov
inc
out
mov
loope
xor
xchg
pop
lcall
push
cmp
and
inc
cmp
pop
pop
decb
pop
stc
imul
adc
jno
insb
cs
sub
inc
sub
shlb
les
clc
jle
pop
mov
lods
jmp
sub
sbb
mov
fxtract
hlt
inc
das
scas
loopne
jl
pop
scas
mov
cmc
jle
pushf
cwtl
stos
jns
loopne
daa
jb
or
inc
in
push
xor
clc
lods
mov
adc
or
add
outsb
sub
push
pop
dec
sub
and
out
mov
adc
xchg
pop
pop
push
cld
jecxz
fmul
add
dec
clc
call
lea
and
arpl
xlat
dec
ss
and
sub
jge
lcall
dec
or
in
aam
lods
cmp
insl
sub
sub
jbe
xchg
stos
cmpsb
cwtl
and
xor
ds
cmp
std
and
sti
ja
cld
sysexit
int
mov
dec
mov
sub
pop
call
fdivs
rorl
or
jb
jg
mov
or
inc
sub
cmpsb
lcall
out
aam
jl
inc
sbb
jmp
mov
ljmp
inc
cltd
adc
mov
shrb
sub
outsl
scas
xor
inc
ja
xchg
inc
ficoms
jnp
push
setg
xchg
aad
jecxz
mov
cmpsb
sahf
nop
aaa
mov
sub
dec
jnp
leave
addr16
loopne
sub
pop
jbe
mov
mov
mov
dec
adc
ror
mov
or
test
adc
sub
adc
cli
cs
sub
sub
jecxz
add
mov
pop
out
adc
shrb
and
mov
jge
push
sub
outsb
test
int3
xchg
push
dec
pop
shrl
ret
mov
push
mov
dec
fidivs
test
das
pop
mov
cmpsb
cmp
sub
adc
dec
push
add
out
push
std
or
std
inc
and
xor
bound
xchg
ja
sub
push
push
iret
pushfw
adc
fstl
in
xchg
sub
jb
ja
aaa
out
xchg
adc
lcall
jl
pusha
out
or
call
les
aam
imulb
lock
sub
mov
mov
in
dec
jbe
mov
jl
ret
addl
or
movb
jne
sub
lods
ljmp
jnp
dec
inc
sub
inc
cli
das
in
and
lea
movsl
sar
pop
xor
inc
aas
fstps
cli
jle
pop
xor
ret
aam
mov
lcall
lcall
mov
scas
aam
fcoml
and
lock
jp
movsb
scas
jge
jmp
dec
jns
cmpsb
test
pop
test
cwtl
mov
popf
test
es
fstp
int3
outsl
int3
push
mov
xor
inc
loopne
fidivl
notl
sub
loopne
addr16
scas
or
xchg
dec
inc
pop
les
loop
jbe
jnp
push
lahf
jp
push
das
mov
sub
inc
mov
cmp
lcall
leave
jnp
xchg
push
sub
lods
mov
pop
cwtl
bound
push
icebp
mov
js
push
xchg
jecxz
mov
dec
mov
xlat
je
mov
inc
mov
and
inc
mov
notb
out
sbb
lea
jne
cmp
xchg
cmp
dec
hlt
or
sub
movzbl
sbb
push
sub
int3
mov
dec
in
ds
stos
call
sub
aaa
and
loopne
cmpsb
inc
jo
scas
out
inc
pop
int
js
push
mov
dec
jmp
leave
scas
and
inc
mov
and
out
mov
and
fidivs
int3
lea
push
mov
insb
test
or
outsb
int
lcall
sub
outsb
mov
sarb
sub
ljmp
xor
outsb
in
dec
xor
jmp
xchg
faddl
xchg
mov
adc
lea
jp
addr16
and
mov
loopne
test
pop
subb
lahf
ret
fsubr
leave
cwtl
lret
stos
ljmp
mov
into
imul
shl
sub
jbe
pop
sub
imul
and
imul
or
xchg
int
xor
add
push
jbe
inc
repnz
push
mov
mov
pop
or
movsb
mov
xchg
fidivl
xor
and
xchg
add
ret
add
pushl
mov
test
xchg
and
cmp
test
in
shr
fmulp
shrl
lret
sub
mov
pop
in
add
test
sbbl
mov
lret
outsl
xor
arpl
mov
test
cs
loopne
nop
fmuls
pop
mov
pop
push
push
pop
dec
pop
call
dec
lret
fsubr
pop
or
pop
mov
jmp
fstpt
pop
sbb
mov
stc
dec
lret
ljmp
sub
enter
push
cltd
popf
js
lds
sub
fs
ret
pop
inc
mov
leave
mov
lret
inc
out
pop
sti
pop
dec
mov
mov
jecxz
pop
test
pop
in
test
lods
sub
dec
iret
push
ljmp
jae
fs
pop
adc
loope
add
scas
xchg
pop
stos
push
ljmp
lret
dec
fsubrs
lret
xlat
mov
pop
jae
out
pop
pop
in
stos
and
das
lods
xchg
mov
pop
repz
sbb
lret
xlat
mov
int
cmpsb
sbb
shlb
xchg
and
das
loopne
xchg
and
sbb
adc
aam
inc
lods
sbb
cmpsb
aas
jb
testl
loope
ds
and
fldcw
push
loop
out
test
mov
pop
imul
sub
push
sub
xor
pop
jp
sub
pusha
stos
popl
inc
sub
xor
clc
and
inc
pop
pop
cmp
mov
adc
push
sub
frstor
shrl
pop
sbb
sub
jecxz
jo
ja
sbb
cltd
cld
imul
jnp
and
push
cmpsl
loop
mov
movsb
adc
cmpsb
or
push
jle
sub
frstor
aas
sub
inc
fs
jle
popa
add
inc
sub
hlt
test
mov
ret
pop
dec
lret
outsb
daa
sti
popa
std
lods
push
mov
std
aam
add
sub
and
fmuls
jp
xchg
jns
sub
or
mov
push
jle
or
and
sub
sahf
dec
scas
out
add
lock
arpl
das
cmp
push
test
cmp
dec
push
shrl
das
and
cmpsl
lret
jl
and
in
fsincos
push
mov
and
lcall
cmpsb
xchg
insl
ds
mov
inc
cltd
in
push
adc
mov
cmc
and
xchg
sub
push
test
popf
fisubs
push
push
movsl
insl
xor
test
movsb
mov
jnp
ja
xor
cmpsb
xor
enter
jecxz
repnz
jge
les
loopne
mov
push
add
cs
and
pop
mov
push
bnd
enter
lret
cltd
pop
jnp
xchg
push
sbb
cmpsb
mov
cmp
cmpsl
pop
pop
and
out
push
cld
mov
pusha
pop
hlt
test
test
test
jge
push
adc
adc
pop
outsb
stos
sbb
negl
call
imul
mov
sub
arpl
sbb
xchg
icebp
sub
stc
adcb
add
stc
jbe
jae
ret
jnp
jmp
jg
jle
or
push
in
in
push
pop
loop
insb
xor
in
mov
sub
test
sub
mov
les
push
pop
sahf
lret
hlt
mov
sub
in
dec
mov
push
insl
frstor
fstp
jge
pushf
sahf
sub
dec
repz
out
xchg
lret
fcmovnu
jge
ljmp
lret
and
dec
insb
lret
pop
sub
mov
inc
adc
dec
sbbl
push
xor
xchg
aam
aad
aad
mov
pop
inc
inc
cmp
in
lret
mov
jns
or
imul
hlt
cmp
iret
aas
pop
sub
sub
es
push
cmp
jmp
add
dec
mov
sub
addr16
jle
lods
xor
dec
std
movsl
insb
xlat
inc
outsb
sub
cvtpi2ps
cmp
testb
xor
outsl
and
cmp
mov
push
mov
cmpsb
out
ds
mov
data16
dec
pop
sub
mov
insb
pop
stc
lahf
xchg
loop
mov
jbe
mov
leave
push
inc
das
sub
cmpsb
or
call
jp
pushf
jle
sub
jae
push
jp
push
sub
in
jbe
dec
in
pop
cmp
leave
adc
movsb
pop
xor
out
aaa
out
dec
out
sti
push
dec
xchg
sub
push
fwait
mov
cld
sub
addr16
push
mov
dec
pusha
mov
clc
call
pop
mov
lahf
or
adc
lret
or
sub
lods
aas
lock
xchg
pop
clc
int
adc
inc
add
jl
ss
out
in
int3
and
enter
loop
repnz
dec
aas
adc
pop
outsb
push
xor
cli
loop
jmp
hlt
stos
jbe
loop
ror
xor
lds
inc
cmp
lea
cmpsb
gs
pop
push
test
ret
lea
inc
or
aam
pop
jecxz
mov
inc
mov
aaa
xchg
cmp
mov
jmp
jae
outsl
leave
rorb
xchg
les
inc
shr
gs
sbb
loop
jg
movsb
cmpsb
cld
xor
mov
imul
or
sbb
push
mull
jbe
dec
test
cmp
in
xor
pop
cmpsb
jno
clc
loopne
pop
ja
mov
inc
sub
cmp
push
jo
inc
add
push
inc
adc
lret
pusha
pusha
imul
test
cmp
icebp
addr16
pop
sub
cmp
or
shll
pop
out
mov
cld
or
pop
xchg
jb
push
imul
cmp
mov
fs
push
arpl
gs
fcomp
scas
mov
xlat
pop
mov
and
cmpsb
negb
inc
popf
push
movzwl
ljmp
in
adc
lahf
stos
scas
test
pop
arpl
mov
mov
pop
mov
test
addl
pop
rcrb
repz
pop
andb
popf
fs
in
mov
dec
aad
inc
rclb
js
hlt
out
and
les
pop
sub
aam
pop
mov
pop
cmp
call
mov
jb
repz
push
mov
aam
loop
pusha
jmp
mov
add
push
mov
xchg
mov
xor
or
stos
add
sub
cmpsb
pop
out
xchg
insl
loop
lcall
jge
or
shrb
pop
jmp
arpl
adc
rsm
push
jle
cmp
imul
mov
mov
cmc
ljmp
mov
scas
stos
push
sti
fldcw
mov
fdiv
xorb
in
xor
push
jae
ficoms
push
cwtl
sbbl
inc
loop
or
pushf
stos
push
dec
mov
inc
or
adc
mov
push
test
cmpsl
pop
pop
es
cltd
aas
fisubrs
xor
adc
cs
cmpsb
in
add
in
fcompl
pop
repz
ljmp
lret
push
xor
adc
add
call
push
cmp
loop
jmp
addr16
fistps
cmp
ret
in
popa
std
mov
fadds
movsb
out
mov
nop
mov
fadds
pushf
dec
adc
divl
std
roll
movsb
jo
cmp
sub
pop
push
pinsrw
loopne
jle
imul
movsl
shlb
gs
or
mov
sahf
test
call
std
rcrb
fistl
out
sub
lahf
mov
push
mov
pop
push
adc
xchg
jno
cld
lcall
mov
ja
pop
cld
sbb
pop
jmp
sbb
add
pop
fmull
xchg
cmpsb
push
stos
and
fdivs
test
sub
mov
movsl
mov
pop
pushf
rorl
out
sbb
mov
mov
jle
fstps
jmp
loope
or
nop
cmp
push
ljmp
pop
mov
pop
sbb
xor
test
ret
sub
jnp
jbe
lds
lods
fnstenv
xchg
pop
push
int
filds
out
or
ja
sbb
shlb
test
pop
lahf
out
mov
fldt
test
adc
and
into
mov
mov
loop
push
sub
mov
in
filds
into
testb
mov
outsb
xchg
fildl
mov
movhlps
pop
sub
jle
xor
fisubrl
pop
in
or
xchg
cmc
mov
cmp
xor
jp
out
lods
sti
xor
mov
mov
and
fcomps
or
mov
add
mov
clc
xor
pop
mov
jb
adc
mov
test
or
sub
dec
push
dec
cmpsl
test
cs
mov
test
pop
jae
add
movsl
lret
cs
or
pop
jbe
je
pop
pop
cmpb
xor
cmpsb
test
ljmp
mov
xchg
mov
pop
out
fldz
clc
pop
test
in
in
rcll
inc
ja
js
push
mov
frstor
mov
push
mov
sar
pop
mov
lock
sub
arpl
cmp
mov
insl
popa
rcrl
or
sub
sub
pop
data16
ljmp
rcrb
add
scas
and
fistpl
dec
jmp
fldcw
nop
inc
and
cs
push
fldt
imull
lret
fimull
ljmp
addr16
mov
or
pop
add
adc
xchg
push
add
xlat
cmc
or
imul
and
aam
or
pop
insl
mov
subl
push
pop
dec
hlt
fmull
jle
mov
bound
fdivr
pop
cltd
sub
or
je
repnz
fisubrs
fldpi
adc
push
rorb
test
vpor
add
leave
dec
pop
mov
or
sub
arpl
jmp
repz
popf
sub
xor
fcoml
test
aaa
lock
mov
and
push
mov
clc
stc
test
es
lods
scas
sub
nop
fldcw
mov
lods
in
cmp
push
les
sub
add
xchg
lods
cmp
mov
movsl
scas
mov
pop
rcrl
push
cmc
cltd
cmpsl
mov
or
push
in
pop
icebp
pusha
test
movsl
in
lret
push
xchg
sub
pop
out
out
out
fs
fiadds
in
movsb
icebp
xchg
and
add
sti
js
sub
sub
push
adc
inc
insb
sbb
stos
test
xchg
icebp
movsb
push
movsb
pop
sti
rcrl
mov
movsb
pop
and
idivl
sub
push
mov
insl
cmpsb
pop
jne
out
repnz
pop
mov
pushf
int3
outsb
scas
mov
fsubr
outsb
jae
pop
fwait
push
push
aaa
mov
hlt
push
push
lret
out
lahf
dec
test
and
push
cbtw
fs
out
leave
pushf
test
mov
sub
out
sub
dec
out
jmp
pop
pop
push
lock
dec
mov
push
stc
push
mov
inc
pusha
mov
adc
cmp
mov
je
sar
and
lcall
mov
das
inc
jbe
jo
mov
cmp
cmpsb
push
adc
mov
lds
cmpsl
add
sahf
outsl
xchg
fldcw
dec
pop
fs
add
loopne
inc
stos
stos
cmp
fcmovnb
fs
push
cmpb
adc
scas
or
or
jo
add
dec
pushf
es
clc
pop
aam
xchg
test
ljmp
cltd
data16
sub
pop
jne
jmp
ja
fsub
jp
or
stos
sarb
fcomps
sar
mov
stos
jo
test
mov
aam
fadds
test
push
cmp
mov
push
and
repnz
xchg
cld
mov
in
inc
fcomps
mov
xlat
das
cmp
and
fsubp
pop
imul
push
mov
adc
cmp
push
test
pop
mov
std
insb
inc
gs
bound
fidivrl
pop
adc
subl
push
movsb
sub
and
arpl
sub
jb
sub
or
insl
stos
dec
mov
push
push
pop
xor
pop
fstpt
and
inc
in
sar
test
int
and
jo
or
shrl
pop
xchg
jecxz
bound
pop
test
and
push
and
xchg
fldcw
icebp
jno
sti
mov
cs
andl
int
insl
jmp
fldpi
pop
or
and
pushf
sub
and
test
ficoml
data16
and
or
xchg
cmpsl
in
cmpsb
mov
lock
xlat
loop
and
std
cli
testb
fsub
jl
add
and
inc
movsb
pop
out
xor
insb
fsubl
pop
test
bound
popa
ljmp
aaa
imul
in
jmp
pop
mov
jns
mov
lret
xchg
pop
int3
aad
jge
stos
and
sub
lods
cmp
mov
pusha
xchg
aad
scas
inc
lods
jle
sub
sub
pop
adc
popa
test
dec
jge
stos
pop
pop
out
mov
fistpl
scas
das
out
xor
incb
add
lea
push
mov
cmp
pop
mov
rcr
js
lods
push
rclb
stos
fstps
das
ret
mov
shrl
test
lret
pop
cmpsb
fdivrp
lret
fbld
dec
dec
scas
leave
sub
push
jmp
adc
and
lock
sub
xor
xor
sub
push
cld
mov
adc
adc
dec
jbe
imul
sub
aam
shrl
lods
jmp
or
ret
mov
fisttpl
xchg
jmp
cmp
in
rorb
jb
arpl
test
dec
inc
pop
pop
or
dec
push
add
frstor
push
add
mov
test
adc
cmp
push
adc
and
cmp
adc
enter
push
test
mov
xor
and
inc
leave
std
mov
sbb
insl
repnz
push
sar
adc
cmpsb
xor
das
aas
fbld
stc
out
mov
out
sbb
sbb
lcall
iret
out
jns
mov
pop
inc
sub
or
inc
add
es
lea
sti
or
mov
aaa
dec
popa
clc
repz
dec
push
jge
iret
pop
sti
call
fdivs
les
xor
fcompl
and
imul
or
jb
sbb
push
dec
xchg
xor
ret
js
cli
aad
mov
inc
mov
push
ljmp
pop
cs
jns
jo
stos
jnp
pop
cmc
or
frstor
outsb
int
xor
je
jl
adcl
pop
add
lea
outsb
mov
cli
hlt
or
cmp
push
loopw
stc
jo
lea
push
ficoml
loop
pop
jns
test
test
fisttpl
lahf
fmul
mov
dec
push
jp
mov
jbe
pusha
pop
or
shrb
lahf
cwtl
jb
ficoml
das
out
out
inc
cli
add
and
nop
icebp
or
jmp
pop
sub
jmp
test
movsb
je
aas
mov
pop
int3
sub
stos
es
jne
sbb
iret
lcall
movsl
xchg
or
jne
les
adc
fs
pop
sti
popa
out
pop
push
pop
add
rorb
and
sti
inc
lret
pop
adc
les
ljmp
hlt
pop
mov
out
lds
stos
out
push
sub
mov
mov
test
cmp
lods
sbb
push
push
stos
movsb
pop
pushl
and
sub
test
pop
aaa
pop
mov
fcoml
mov
test
sbb
adc
in
pop
or
stos
movsb
ss
lods
pusha
fiaddl
aam
data16
into
and
xchg
xor
cmp
pop
pop
fmull
cltd
mov
cs
sti
dec
std
das
pop
sub
dec
mov
rcr
mov
insl
push
orl
fnstcw
push
test
and
xor
in
sub
test
cmp
ljmp
ds
sub
push
out
movsl
pop
mov
pop
xor
pop
clc
pop
mov
pop
xlat
jns
and
mov
and
pop
aam
mov
mov
scas
loope
sahf
or
insb
mov
mov
loope
lea
push
push
mov
lods
jmp
or
lods
stc
int
pop
popa
sub
pop
rcr
cld
aad
mov
test
movsb
mov
push
out
push
pop
test
sub
push
fistl
xor
jecxz
pop
aad
out
or
dec
adc
lret
xchg
pop
push
es
and
mov
sbb
subl
aam
clc
mov
movsl
js
lahf
or
subb
lds
and
in
sub
mov
out
push
andb
push
test
mov
jns
xor
call
pop
and
sti
add
pusha
test
sbb
cmpsb
clc
fiaddl
inc
lds
sub
mov
xor
adc
sbb
push
stos
mov
mov
mov
mov
mov
lea
cs
lods
jnp
sub
push
stos
push
and
dec
jmp
movsb
aad
mov
addr16
imul
sub
ljmp
pusha
xchg
mov
aad
fldl2t
test
inc
xchg
dec
jp
or
adc
add
and
xchg
push
cwtd
test
jmp
jp
dec
test
sahf
inc
pop
jns
jle
pop
scas
pop
dec
imul
push
fimull
je
imul
sbb
push
mov
sbb
clc
push
ret
mov
push
sarb
movsl
std
add
hlt
test
sub
pop
dec
int3
cld
daa
pop
sub
call
dec
fsubr
outsb
dec
es
clc
push
int
add
scas
xlat
icebp
fimull
rcrl
inc
leave
sub
mov
ljmp
push
ficompl
fcomps
jbe
roll
mov
push
push
cmp
jge
fistps
roll
arpl
push
jle
icebp
dec
inc
and
flds
sahf
shl
mov
movsb
aad
xchg
clc
scas
push
push
outsl
sti
and
cmp
mov
addr16
lods
push
movsb
xchg
lods
aaa
push
ds
push
fsub
call
jae
int3
add
xchg
rolb
inc
lcall
les
in
aas
jae
mov
xchg
and
inc
ret
mov
push
shlb
mov
pop
add
lods
lahf
sbb
mov
add
icebp
cmp
and
mov
popf
inc
out
pop
pop
or
fldt
dec
push
jmp
shr
por
cwtl
fcom
push
jbe
in
lock
or
cs
fidivrl
aas
push
cwtl
add
sub
xchg
fstl
jne
dec
push
dec
lret
ljmp
cmpsb
xchg
dec
sub
mov
or
or
in
mov
inc
loope
or
jo
mov
cmp
adc
push
push
dec
addr16
nop
sbb
lock
in
pop
imul
aad
imul
in
in
cmc
sti
push
dec
mov
xor
ljmp
jmp
sub
sub
cltd
scas
loopne
sub
push
lock
inc
pop
sbb
pushf
loope
cmpsl
xor
cltd
or
sbb
sbb
gs
addr16
popa
loop
mov
cmpsb
or
sub
adc
add
inc
stos
mov
fdivrs
jmp
cmp
js
add
pop
in
mov
fcomps
lds
loop
roll
aam
jmp
addb
sysret
test
fsubrl
jns
rclb
jbe
lea
xlat
inc
shl
insb
mov
cmp
dec
adc
mov
xchg
rorb
xor
inc
xchg
test
repz
xchg
pop
idivl
adc
cltd
shll
lods
pop
fs
mov
mov
pusha
mov
xor
fistpl
jbe
pop
lock
xor
frndint
insl
sbb
test
cltd
jae
pop
mov
enter
scas
pop
push
aaa
mov
pop
fstl
dec
stos
aad
pushf
hlt
inc
jo
hlt
jbe
rclb
aas
sub
in
repz
add
outsl
xor
lret
xlat
add
mov
push
mov
mov
pop
ficompl
pop
push
pop
or
cmp
or
insl
test
rol
stos
pop
das
sub
mov
mov
pop
rcr
repnz
fs
out
lahf
sub
xlat
cmc
mov
fldt
in
push
sub
rorb
enter
xor
leave
dec
in
fstpt
fs
dec
pop
add
jne
imulb
jns
test
icebp
push
psubd
or
es
pop
sub
popf
in
and
movsb
cld
scas
sub
xor
fsts
pop
add
pop
inc
loop
jge
sarl
repnz
lods
add
push
sti
in
pop
sub
sbbb
scas
adc
pop
mov
fisttpl
pop
jns
xchg
push
mov
sub
out
mov
out
mov
sub
xor
arpl
fildl
inc
flds
xor
movsb
cmp
movsb
sti
loope
add
pop
mov
fisubrl
pop
pushf
inc
jnp
movsb
lods
fxch
movsb
pop
outsb
mov
movsb
dec
push
fldlg2
pop
or
push
movsb
adc
ljmp
xlat
movsb
into
lods
movsb
imul
loop
fstpl
jge
pop
scas
movsb
cmp
fadd
int
sub
adc
push
pusha
rcrb
mov
movsb
repnz
pop
fucomp
sub
or
scas
sbb
cmp
push
mov
push
movsl
and
inc
fs
mov
dec
cmp
jno
sub
std
inc
or
push
mov
sbb
scas
sbb
push
scas
rorl
movsb
rcll
fdivrs
adc
fwait
outsl
sub
mov
cmp
test
lds
js
sub
and
cld
dec
mov
pusha
shrl
filds
arpl
out
outsl
cmp
scas
mov
jmp
out
or
in
push
mov
sub
das
push
dec
dec
test
push
push
cwtl
mov
push
arpl
xchg
fnstcw
and
mov
int
mov
and
sub
and
scas
add
lods
cmpsl
sub
pop
jecxz
mov
lcall
inc
lods
les
pop
das
cmp
jmp
fs
jne
aaa
sbb
dec
cli
dec
mov
test
pusha
xor
push
and
aaa
xor
int3
xchg
pop
sub
and
push
sub
adc
xchg
add
stos
fnstsw
mov
scas
cs
addb
repnz
push
mov
xchg
in
cpuid
jbe
jge
movsb
mov
cld
in
jo
inc
xor
out
or
into
and
das
shr
and
xor
fnstsw
and
inc
outsl
cmpsl
jecxz
mov
les
call
movsb
pop
ret
mov
das
jecxz
shl
lcall
fadds
pop
mov
imul
scas
insb
fidivs
mov
ret
adc
test
outsl
lods
sub
sub
fs
movsl
pop
and
cs
in
aad
into
and
pop
test
pop
dec
loop,pt
std
scas
test
pop
pop
and
scas
jmp
sub
sub
lods
sub
dec
push
out
pop
pop
loope
loope
test
jno
and
std
call
out
adc
iret
xchg
mov
in
enter
sbb
shrl
jb
in
sahf
out
test
mov
mov
fisttpl
nop
test
dec
mov
pop
jno
pop
nop
das
lahf
ds
mov
sub
nop
sbb
lahf
or
sbb
jnp
cmp
out
adc
imul
fdivr
out
or
inc
pop
aaa
movsl
push
push
or
lcall
movsb
int
rol
out
fwait
adc
jo
loop
push
mov
inc
xorl
cmp
xchg
push
add
jns
ror
loope
ret
ror
dec
and
inc
in
jbe
aaa
push
pop
dec
out
and
fldcw
mov
lahf
jp
imul
adc
daa
scas
out
cmp
inc
mov
jmp
sub
in
jecxz
push
mul
or
lds
aam
inc
xchg
jecxz
cltd
gs
movsl
sub
and
push
pop
sub
pop
cmpsb
cmp
mov
into
in
repnz
test
fdivrs
movsb
mov
xchg
inc
outsb
out
test
popa
lret
dec
adc
mov
lret
lret
or
fisubrl
repnz
mov
insb
aad
jns
jns
dec
cli
jo
ja
lret
cmp
mov
mov
or
js
fisubrl
cmp
sahf
cld
xchg
mov
adc
fcmovne
push
out
fldcw
xchg
xchg
dec
es
or
data16
xchg
sub
dec
fldenv
sbb
fcomps
cld
adc
fwait
mov
pop
pop
cmp
jle
bound
mov
push
jl
mov
push
add
inc
fsubl
out
sub
leave
pop
cmp
cmc
mov
or
lock
icebp
aam
cli
add
push
cmp
and
outsl
or
pop
cmp
inc
rclb
outsl
mov
lret
adc
sub
mov
inc
popa
xchg
test
imul
jne
or
push
scas
jp
in
das
fisubl
mov
jbe
lea
jnp
bound
xlat
jns
xor
stc
xor
daa
sub
cli
jo
mov
mov
in
or
jo
pop
fsubrl
mov
lds
jnp
push
in
faddl
fcomp
mov
and
mov
test
jno
add
sub
cmp
mov
out
and
lret
fs
andnps
dec
push
and
cld
or
jle
cli
rcrl
into
sub
lock
cli
sarl
cmp
out
cmc
pop
arpl
adc
test
cmpsl
fwait
jg
inc
push
pop
sbb
inc
jl,pn
mov
jp
push
popa
jge
ficoms
lods
sub
mov
shrl
int3
out
sub
fsubrl
les
pop
call
dec
jns
shll
mov
sbb
call
mov
sub
ljmp
imul
rol
lahf
hlt
mov
inc
addr16
push
test
push
enter
cs
or
push
sbb
push
test
dec
sbb
pop
sti
and
insb
in
pop
sub
iret
dec
mov
call
movsb
gs
testl
pop
lahf
and
lret
inc
adc
fdivl
sti
push
dec
fadds
fs
das
push
cmpsb
push
or
fisubrs
call
or
clc
shlb
cmp
mov
fdivrl
jns
sub
scas
shlb
sarb
stc
pop
pop
ror
jmp
stos
inc
mov
aaa
adc
mov
jnp
dec
aaa
mov
js
cmpsb
mov
pop
dec
orb
sub
sub
wbinvd
das
shl
pushl
repnz
jle
aam
adc
jbe
inc
cwtl
and
xchg
dec
adc
addps
lahf
cmp
stos
dec
iret
lods
dec
js
movsl
adc
stc
push
paddusb
in
or
mov
push
sub
lret
or
add
sbb
xor
and
adc
fsubrl
mov
lods
and
push
shlb
cmpsl
sub
sub
jmp
das
pop
lods
loopne
scas
mov
orl
pop
leave
inc
fwait
and
pop
add
mov
mov
leave
aaa
lods
sub
jbe
iret
push
adc
imul
jbe
dec
mov
aas
out
xchg
dec
jb
mov
aaa
pop
aaa
fs
mov
push
and
ljmp
or
jbe
cmpsb
dec
cmp
lahf
hlt
sub
mulb
out
stc
bound
iret
jae
jmp
pop
fmuls
or
push
hlt
cmpsl
xor
dec
aam
pop
sub
pop
jge
das
jo
clc
sarb
jl
shrl
mov
xchg
adcl
and
neg
jo
pushl
test
xlat
push
cmp
jnp
dec
push
or
push
call
lds
jl
pop
insl
lahf
fs
int
mov
cwtl
aad
jmp
jg
mov
sbb
and
jg
sub
mov
rcll
cltd
xor
mov
stos
ljmp
nop
jbe
adc
jp
xchg
fmuls
lahf
cltd
ss
dec
out
mov
add
cmpsl
in
sub
mov
lret
cmp
out
divl
enter
push
lret
movsb
push
je
jmp
or
jg
mov
dec
xchg
icebp
sbb
fdiv
int3
push
stos
dec
mov
push
dec
sti
push
in
stc
test
mov
lret
stos
cs
loopne
jbe
cmpsl
insb
fs
jo
outsb
pop
push
jle
jmp
push
mov
push
dec
cmp
sbb
stc
lret
mov
cmp
test
mov
lret
add
das
xchg
insl
lds
les
leave
sub
stos
xor
pushl
mov
js
mov
out
xor
dec
or
orb
push
mov
lea
adc
aaa
shl
inc
sahf
xlat
orb
call
and
mov
sub
fisubrl
sub
in
cmpsl
or
insb
cld
mov
in
lods
fldt
stos
sub
sbb
cmp
dec
shl
fisubl
shll
mov
mull
cltd
cmpsb
or
mov
cwtl
imul
stos
es
mov
scas
sbb
stos
mov
es
test
cld
movsb
sub
fldt
scas
stos
scas
les
sbbb
movsb
int3
jmp
dec
sub
mov
add
mov
and
out
mov
jb
test
cmpsb
in
aaa
test
ds
dec
lcall
sbb
aas
fldt
call
mov
mov
es
inc
sub
or
fiaddl
out
imul
inc
ljmp
imul
push
cmp
adc
pop
inc
push
testl
mov
cmp
mov
fisubrl
lahf
jge
xchg
xlat
or
mov
out
lret
loopne
cmpsb
push
lcall
jo
mov
xchg
adc
adc
fildll
push
xor
sbb
lea
mov
mov
fwait
nop
inc
ret
pusha
dec
lret
jo
pop
fistps
dec
dec
push
pop
pop
pop
xchg
in
cmpsl
movsl
inc
aaa
test
loopne
inc
adc
es
jmp
xchg
out
mov
cmpsb
dec
and
lret
adc
data16
mov
mov
push
fnsave
mov
or
xchg
movswl
push
mov
xchg
cmpsb
cmp
and
rcrb
mov
loopne
in
stos
add
or
rcrb
xchg
and
stos
mov
pushf
or
cmp
xor
cmp
bound
js
pop
mov
pushf
ret
lret
cwtl
mov
test
jmp
cmpsb
cmpsl
xchg
fiadds
mov
fidivs
sub
leave
mov
sbb
dec
cmpsl
jle
nop
push
fdiv
subb
js
test
in
dec
sub
in
fisubs
or
lcall
cmp
mov
cmp
dec
mov
aad
fdivs
stos
jbe
sahf
xor
jl
xchg
push
cli
rorl
add
jg
pop
push
jmp
push
addr16
mov
hlt
lds
outsl
data16
mov
cmp
fdivs
inc
add
ja
leave
into
clc
push
or
dec
jo
andb
ror
lods
pop
pop
sub
sbb
fisubl
cli
lea
pop
in
js
lret
jmp
push
call
dec
sbb
mov
push
pop
cmpsb
cltd
jb
mov
inc
icebp
imul
mov
je
push
test
fdivl
pop
jle
sub
jg
sub
gs
fwait
loopne
cmpsb
mov
pusha
sbb
mov
add
icebp
daa
jo
pop
jnp
cmp
xchg
xchg
ljmp
ljmp
gs
ja
lcall
fprem1
insb
pushf
nop
cmpsb
mov
stos
clc
push
loope
mov
out
int
ret
xor
xor
pop
test
push
loop
sbb
dec
mov
cmp
ret
sbb
ja
jg
sbb
mov
popa
xchg
outsl
push
js
test
les
cmc
cld
mov
cmpsl
sbb
pop
ljmp
mov
sub
cmpsl
cli
dec
mov
in
jp
cmp
imul
mov
xchg
in
adc
sub
push
je
test
imul
enter
push
in
add
or
adc
int3
jmp
sbb
imul
mov
jne
std
mov
xor
cld
sub
xor
dec
xlat
xchg
jo
fisubrl
ss
pop
push
pop
flds
push
xor
sbb
jno
jnp
lret
jl
inc
rolb
clc
rorl
add
dec
sub
in
sub
mov
sub
jb
imul
in
or
in
insb
mov
sub
pop
push
add
movaps
mov
sbbl
mov
pop
lods
das
aaa
dec
sub
xor
jl
push
push
pop
jo
mov
or
pusha
out
nop
pop
push
jl
bound
lds
add
jl
jbe
adc
pop
jl
cmpsb
push
xor
xchg
lods
rolb
out
jge
push
loope
dec
sub
dec
cmpsb
adc
sbb
and
cs
aas
pop
lods
sub
bound
cmp
sahf
pop
push
or
mov
xor
or
jmp
inc
lret
in
or
sbb
mov
sub
push
insb
test
dec
sub
daa
das
or
sub
shl
clc
in
loopne
push
sbb
lahf
xchg
sarb
dec
cmp
in
xchg
sub
test
mov
pushf
jmp
cmp
and
scas
pop
jle
das
clc
cmpsb
inc
cltd
clc
popa
testb
sub
lahf
dec
push
sub
iret
outsl
inc
dec
ja
add
rcrb
sbb
xchg
stc
fwait
push
lcall
ret
and
push
push
xchg
and
sub
or
movsl
ja
sub
out
jecxz
cmp
imul
je
xor
out
jp
lock
rclb
adc
int3
leave
pop
or
push
bound
sbb
data16
in
scas
aaa
mov
fstpt
xor
sti
jne
pop
fcmovu
test
add
fnstenv
fimuls
pop
or
loope
leave
fcomps
pop
bound
fs
mov
dec
xor
and
test
jmp
lret
mov
lds
xchg
call
inc
call
inc
cltd
xchg
push
add
das
jnp
stos
lret
hlt
leave
ljmp
xor
sub
xlat
inc
jp
mov
lret
insl
in
and
pop
push
push
popa
ret
test
call
adc
jne
sti
out
pushf
mov
adc
or
mov
cmp
xlat
sub
out
into
imul
sti
jae
push
pop
in
cmp
mov
jbe
das
mov
dec
xchg
sub
sub
movsl
cmpsl
dec
stos
jbe
mov
idivl
adc
push
arpl
push
pop
dec
add
push
sbb
mov
sbb
mov
iret
jle
test
push
subb
xlat
jo
bound
cmp
cs
mov
fnop
cli
cmpsl
jnp
out
mov
fsubrl
add
cltd
movsl
aaa
subl
sbb
lock
shll
jmp
dec
inc
mov
dec
adc
xchg
push
lahf
out
aas
sub
inc
outsl
inc
shlb
clc
in
cs
or
sbbl
and
ss
add
and
sbb
lcall
shll
pop
test
sti
mov
adc
loop
pop
popf
pop
fildll
sbb
mov
or
pop
scas
loop
stc
popf
or
push
push
sbb
pusha
jp
mov
sub
in
loopne
sub
in
and
lahf
mov
mov
mov
rcr
jo
cmpb
or
ret
scas
pop
adc
lods
dec
jg
cmp
sub
in
adc
mov
mov
sbb
test
pusha
push
mov
inc
mov
fmul
pop
out
push
rol
push
dec
inc
inc
lods
sbb
ss
outsl
and
xchg
cli
jmp
dec
stos
int3
sub
rorb
inc
into
pop
mov
dec
addr16
xor
ret
mov
fldz
stc
add
mov
sub
sti
stos
out
mov
cmp
jbe
adc
lds
movl
or
mov
faddl
cmp
mov
mov
xorb
fnstcw
enter
into
adc
push
into
call
lea
adc
pushf
insb
out
test
sbb
sub
inc
jge
mov
insb
mov
pop
je
outsl
pop
nop
cmp
push
out
aam
mov
lods
lcall
cmp
cmp
adc
dec
jns
fdivrs
flds
decb
jp
addr16
jnp
rdpmc
push
je
sti
jl
imul
push
test
out
pop
and
out
mov
mov
mov
or
sub
orb
and
shl
pop
adc
into
nop
mov
stc
xchg
inc
es
xor
dec
insl
int3
imul
int3
js
rcl
xchg
add
int
or
pop
mov
shlb
popf
dec
insl
lods
lea
sbb
stos
in
fmull
icebp
cld
andl
lret
pop
ret
push
pop
mov
mov
cmp
cmp
inc
sbb
mov
mov
mov
xchg
lods
lods
data16
dec
orl
fs
sub
cltd
cmpsb
sub
mov
stc
and
into
loope
movsb
insb
dec
dec
push
push
hlt
jle
popf
fsubs
in
fldl
scas
bound
cltd
sti
or
pop
sub
popl
mov
xor
xchg
mov
cmpsb
call
fiaddl
cmc
cmc
push
lea
fnstsw
outsl
push
and
ljmp
filds
into
leave
stos
call
inc
mov
mov
xor
mov
pop
fidivl
js
add
frstor
push
rcrb
jo
loop
jmp
inc
in
aas
push
gs
aaa
lods
pop
xchg
test
mov
cmp
cmp
test
mov
mov
mov
ja
sbb
sub
jl
xor
push
es
ljmp
sub
push
shrb
gs
enter
es
adc
sub
pop
and
mov
jnp
adc
mov
add
sbb
insb
jg
fs
andl
lret
pop
roll
shrl
lahf
into
js
imul
aad
xchg
dec
pop
out
ficomps
cmp
in
in
jl
add
dec
dec
lahf
js
lock
sub
out
aam
int3
or
int
mov
outsb
and
movsb
mov
mov
sub
fldenv
and
lcall
loop
lret
pusha
loopne
jo
sub
mov
lds
push
out
jnp
hlt
leave
mov
mov
mov
pusha
test
pop
pop
pop
hlt
test
sub
push
dec
bound
jb
or
lock
stos
jmp
jnp
mov
push
in
push
sub
fs
ja
jecxz
cmpsb
xchg
adc
pop
sub
sbb
pop
das
xchg
enter
push
aaa
cld
cltd
es
adc
and
test
inc
push
or
stc
insl
int3
les
shrb
push
mov
jae
adc
adc
adc
cwtl
jb
and
cmp
sbb
sbb
out
lret
push
in
cmp
int3
inc
fisubs
js
movb
inc
roll
xchg
push
in
fnop
gs
push
sub
jnp
inc
sti
sbb
cmpl
lods
jmp
dec
jnp
jb
test
fdivl
pop
cmpsl
subl
es
insb
fildl
movsl
pop
mov
add
push
js
mov
cmp
sub
addr16
mov
in
cmpsb
roll
jmp
mov
push
and
call
inc
lea
jnp
out
mov
xor
xor
mov
arpl
mov
cltd
icebp
push
repnz
sub
and
incb
cs
leave
jl
cmpsl
pop
or
mov
cmp
les
pusha
sub
dec
lock
ret
test
ror
movsb
mov
inc
xor
add
imul
jns
sub
stc
inc
add
push
out
pop
lret
loop
inc
in
sub
lret
jl
popf
xor
out
jmp
roll
pop
push
jge
or
push
lret
test
cltd
sub
aas
dec
sbb
mov
gs
flds
repnz
and
leave
dec
loopne
sbb
xcrypt-ecb
cmpsl
or
mov
data16
fstl
mov
mov
clc
add
mov
jge
bound
jl
lcall
cmp
pop
popf
push
sbb
fld
or
mov
test
les
jecxz
push
test
mov
jno
lret
mov
es
dec
repnz
push
test
push
push
nop
or
dec
cmpsb
cmpl
xor
jp
and
bound
and
popf
xchg
mov
jg
jbe
sub
call
jge
xchg
add
jg
inc
adc
sar
ds
mov
out
mov
inc
jmp
outsl
push
jbe
push
fcomps
sub
das
outsl
pop
pop
enter
mov
ds
ret
mov
js
xchg
jp
das
jo
add
stos
mov
or
rcrb
cld
push
and
jnp
sbb
cltd
leave
dec
mov
lock
add
sub
cltd
idivl
cmpsl
mov
jns
in
mov
stc
pop
enter
das
mov
mov
jl
idivl
loop
xchg
aaa
lcall
cmpsb
cmp
pop
dec
mov
mov
cltd
sub
and
inc
mov
and
mov
mov
out
push
mov
mov
dec
mov
dec
aas
ret
sub
movsl
lahf
sub
sub
fmulp
xor
mov
mov
notb
xor
addl
sub
pop
test
push
lea
sbb
push
sbbb
rcll
dec
mov
pop
orb
sub
and
rolb
cmpsl
and
imul
mov
or
lret
push
int3
dec
mov
cmp
test
les
imul
std
cmp
mov
lcall
sbb
jns
enter
jp
movsb
or
movsl
std
mov
in
jbe
ret
inc
sbb
inc
jmp
and
jp
mov
push
xchg
cmp
cmpsb
outsl
and
cmpsl
sbb
xor
insb
mov
xor
dec
ja
dec
ljmp
les
movsb
out
mov
jge
and
or
pop
iret
shrb
and
std
xchg
sub
cmp
adcl
mov
inc
dec
out
enter
out
or
pop
imul
das
fsubs
and
clc
dec
inc
or
jge
nop
or
aaa
jbe
jmp
xchg
or
cmc
add
dec
add
lret
movsl
jge
inc
test
lcall
and
lret
aas
in
mov
leave
and
and
mov
add
cmp
test
mov
aaa
sbb
lret
sub
dec
leave
jo
xchg
xor
stc
or
and
jecxz
push
adc
mov
sub
mov
ljmp
lods
or
mov
pop
sub
cmp
mov
neg
iret
mov
inc
fisttpl
add
aad
popf
inc
ja
and
out
sub
mov
add
pusha
sbb
dec
or
xchg
cmp
xchg
xor
out
and
adc
cli
jb
adc
aam
lds
dec
dec
or
cmp
cmp
cmp
dec
std
scas
imul
lods
jo
jmp
sbb
and
or
push
fwait
insb
subb
push
int
ret
test
pop
test
push
sub
stos
add
push
sbb
mov
adc
shlb
xchg
or
push
fmul
sub
outsl
ja
hlt
push
loope
adc
pop
push
cmp
xchg
xchg
dec
std
sbb
or
ja
pop
cwtl
sbb
cmp
arpl
sub
mov
jnp
xor
nop
in
mov
pop
mov
int3
dec
fxch
aaa
sarl
mov
mov
sub
sbb
add
sti
inc
insl
lods
inc
and
sbb
xchg
lods
mov
repz
mov
push
arpl
sub
and
jns
adc
mov
jmp
adc
cmp
and
test
gs
inc
mov
mov
hlt
and
dec
mov
and
push
and
imulb
or
ja
xor
sbb
mov
fidivrl
pop
cmp
sbb
movsb
addr16
push
aas
fcoms
mov
jbe
inc
jne
inc
bound
popa
loop
lea
add
into
adcb
int3
ja
ja
enter
xor
cmpsb
jle
mov
push
sub
pop
push
jne
and
mov
daa
add
push
clc
and
mov
adc
mov
mov
fsubs
cli
sub
ss
cmp
fimull
fadds
enter
test
dec
mov
dec
xchg
mov
cmc
push
fwait
leave
cltd
inc
in
inc
ret
fs
movsb
dec
inc
sub
pop
pop
cmpsb
fnsave
stos
sbb
addb
test
jb
inc
test
ds
test
shlb
nop
add
addr16
sarb
shlb
fnstcw
xchg
inc
in
out
mov
lock
sbb
or
test
inc
lret
stos
pop
add
and
mov
jbe
test
mov
push
shrb
out
jns
scas
lcall
mov
sub
das
lock
add
daa
pop
cmpsl
sbb
enter
or
cs
push
dec
jbe
out
pop
call
fdivrl
arpl
lods
or
cmpsb
out
and
adc
loop
lahf
dec
fsubs
cmpsb
lcall
adc
and
or
sti
and
leave
jno
ja
sahf
dec
xchg
das
dec
aad
sbb
lea
jecxz
and
or
sub
movsl
sub
jnp
outsl
pop
ss
inc
cmp
notb
scas
movsb
mov
pushf
leave
leave
cs
and
pop
xchg
cmpsl
stos
ljmp
fwait
sbb
int3
aad
sub
call
cmp
shr
mov
push
loopne
incl
js
adc
insl
test
popf
fists
adc
dec
repnz
fistpl
jns
jmp
shrb
push
pop
pop
sub
leave
test
lret
push
cmpsb
xor
or
pop
dec
sbb
in
cmc
sarb
push
sbb
dec
loopne
push
lret
mov
popf
jle,pn
sti
push
cmpsb
dec
cld
jp
mov
inc
sub
cmp
outsb
fxch
std
repz
flds
ret
fmuls
cmp
in
cmp
fadds
pop
jl
fstp
dec
or
cltd
dec
dec
xchg
xchg
test
test
jbe
push
inc
adc
mov
xchg
insl
mov
mov
push
cld
mov
push
adc
enter
into
fs
cmpsb
mov
jo
lds
jmp
jo
loop
sahf
ret
pop
jg
imul
cmp
jb
movsb
cmp
imul
mov
dec
xchg
xchg
or
xchg
xchg
movb
jnp
or
push
das
push
enter
push
test
rcr
sub
pop
add
mov
int3
mov
dec
push
cs
sub
out
push
dec
rcrb
je
cli
fs
das
sbb
add
clc
cmc
js
nop
xchg
shlb
mov
mov
dec
jo
cmp
sub
dec
mov
xor
lcall
mov
jnp
iret
divb
int
fsubrl
mov
leave
repz
add
add
ljmp
leave
inc
clc
push
jns
fiaddl
sub
fldt
add
pop
aas
es
cld
scas
mov
cltd
out
movsb
stc
int
xor
pop
sbb
dec
push
jecxz
sbb
test
shr
test
shr
test
ret
cmp
out
xor
jle
cmc
das
sti
lds
jmp
leave
out
movsb
jbe
imull
fprem
push
sub
sub
xlat
adc
sbb
nop
icebp
mov
scas
sub
push
mov
icebp
dec
inc
icebp
rorb
sbb
lahf
xchg
or
xor
movsb
cmc
addr16
test
sti
mov
jmp
xchg
mov
clc
pop
stos
push
stos
fisubrs
insb
stos
pop
stos
sti
out
pop
cmp
iret
sbb
cs
push
jg
or
xchg
and
repz
enter
pop
test
fldl
loopne
arpl
dec
cmp
repz
insb
cmpl
adc
enter
mov
or
call
jecxz
movsl
xchg
pop
roll
std
imul
pop
push
mov
mov
sub
ljmp
or
cmpsb
mov
push
hlt
inc
mov
lods
movsl
pop
cmpsb
jne
in
sha256rnds2
test
insb
push
mov
shrl
lock
push
imul
loopne
aas
jae
repz
xor
fidivl
fmuls
jmp
push
cmp
jnp
xor
mov
lret
out
mov
pop
outsl
xchg
add
mov
xchg
pop
call
ret
aam
int3
adc
pop
mov
lret
sub
dec
out
push
fsubs
icebp
movsb
lcall
and
cli
dec
aam
mov
lods
in
cmp
hlt
leave
or
mov
mov
sbb
mov
test
std
ds
int3
lcall
int3
pop
dec
xor
int
xor
mov
jnp
ficomps
xchg
mov
sub
aam
out
sarb
lret
cmp
mov
adc
scas
mov
cmpsl
js
cmpsl
in
imul
sub
push
pop
jmp
and
jp
out
movsb
dec
bound
aas
int3
addr16
aas
in
dec
adc
xor
pop
sub
lds
fisubrs
cmpsl
call
stos
jo
mov
es
int
mov
pop
sub
js
test
ja
pop
mov
push
jnp,pn
test
dec
shrb
enter
loop
mov
call
sarl
pop
lock
movsb
dec
sub
lcall
imul
cltd
mov
stos
jmp
sub
js
stos
or
int3
fcmovne
shrl
call
js
ds
out
or
loop
push
mov
or
je
lcall
nop
pop
jmp
je,pn
and
cmpsl
movsb
mov
push
cmc
stos
xchg
int3
cmp
call
lret
lds
dec
andl
mov
push
cwtl
push
push
hlt
imul
add
pop
jp
cwtl
call
pop
aam
enter
outsb
cmp
xchg
orb
movsb
lods
ss
add
in
pop
js
clc
pop
sbb
xor
adc
aad
arpl
jecxz
std
pop
xchg
cwtl
cwtl
sti
lds
pop
popf
imul
adc
les
cmp
mov
in
clc
dec
and
or
jbe
xchg
xor
and
call
push
xchg
pop
mov
push
push
mov
loop
inc
in
mov
mov
cmp
test
das
stos
cwtl
insb
mov
in
leave
or
jae
xchg
das
cmp
outsb
mov
repnz
lret
xor
push
call
cmp
push
sbb
mov
jns
ror
adc
fistps
jg
jbe
int3
lock
adc
test
mov
sbb
fxch
jl
sbb
jno
ret
pop
jae
ss
sbb
jmp
cmp
jg
cwtl
cld
jmp
mov
cmp
pop
sbb
push
mov
mov
sub
and
jg
arpl
es
test
clc
mov
push
ja
mov
jns
and
inc
stos
in
dec
lds
cli
mov
push
dec
ret
push
jbe
ljmp
push
scas
lds
cmp
arpl
push
cmpsb
mov
jne
outsb
push
jmp
jmp
xchg
stos
mov
sub
movsl
dec
pop
lcall
adc
out
bound
nop
jae
jno
aad
xchg
inc
mov
loopne
andl
add
push
stc
andl
lret
xchg
and
sti
dec
push
push
mov
jbe
inc
mov
add
lcall
leave
loop
shl
mov
cmp
jmp
sbb
push
cmpsb
dec
mov
out
sub
test
sbb
cmp
das
lock
outsl
mov
push
iret
loop
cmpsb
sbb
cmp
dec
dec
pop
mov
or
adc
fcmovnb
lock
mov
fistps
sub
cmpsb
movsl
xor
leave
mov
adc
and
test
cmp
test
in
lods
enter
jp
in
sbb
or
test
pop
inc
mov
test
jmp
lods
enter
jnp
movsb
lock
sub
fwait
fs
sbb
jnp
cmp
cwtl
sbb
sub
fdivrl
imul
rolb
and
das
ljmp
hlt
cmp
mov
dec
fucom
aam
lods
addr16
pop
xor
loop
rclb
pcmpgtd
ret
xor
les
lcall
push
out
cmp
lret
pop
insl
pop
lcall
out
add
xor
rdpmc
mov
call
stos
jle
sub
mov
add
cmp
pop
cwtl
mov
ret
scas
cmp
push
or
and
cmc
leave
loopne
movl
sbb
inc
jne
dec
dec
add
insb
pop
add
jl
outsl
leave
nop
int3
push
rorb
xor
and
out
push
push
fsubp
idivl
xor
outsl
insb
test
xor
je
add
mov
test
clc
cwtl
sbb
mov
jns
fwait
in
ljmp
mov
lcall
popa
sub
xchg
mov
mov
jl
test
sbbb
lfs
mov
fidivrl
lcall
jl
pop
fisubrs
sbb
in
xchg
ret
push
cmp
push
xchg
adc
mov
pushf
mov
stc
cmpsb
jns
xor
xchg
lea
dec
dec
outsb
jmp
stos
push
pop
mov
inc
add
pop
xor
in
mov
adc
dec
or
xchg
arpl
mov
push
sub
js
rcr
leave
adc
ljmp
and
ljmp
push
imul
out
cmp
pop
lret
test
aad
test
inc
lcall
or
cmc
popa
cwtl
mov
fldenv
addr16
xchg
fnstsw
mov
mov
mov
in
fildll
int3
dec
enter
mov
aaa
adc
xchg
stos
push
leave
cmp
icebp
mov
pop
stc
outsb
mov
je
sbb
add
std
add
mov
mov
les
adc
add
inc
fsubl
shrb
out
dec
and
addr16
popf
sub
test
mov
loopne
mov
jo
test
cmp
inc
int
jbe
cmp
jbe
push
xor
lds
stos
push
add
repnz
loope
cmp
pop
ljmp
and
dec
push
push
test
cmpsb
pop
jo
mov
and
sub
loopne
inc
shrb
imul
inc
mov
add
push
sub
imul
loop
notl
push
int
add
sub
push
mov
mov
movsl
fisubrs
xchg
insb
outsb
or
js
es
dec
push
pushf
movsb
out
std
repnz
sbb
pop
mov
pop
hlt
imul
pop
in
xchg
psubd
cli
imul
jl
xor
adc
push
and
or
dec
and
jbe
lods
xchg
sub
inc
push
loopne
pushf
xchg
pop
movsl
jmp
sub
inc
enter
jns
cmp
sub
cli
call
push
dec
lds
sub
push
mov
mov
gs
push
in
pop
mov
out
fldenv
push
std
and
sub
fsubs
mov
pop
add
imul
inc
cmp
fisttpll
xor
xchg
xchg
add
addr16
fldt
mov
sbb
loop
and
enter
std
dec
pushf
lock
fisttps
mov
aas
lds
out
pop
xchg
leave
mov
and
xchg
out
and
js
add
aad
push
popa
sub
lahf
add
sahf
stos
jl
or
mov
or
dec
and
sar
fwait
out
sub
push
ret
and
insb
insb
jbe
ret
jbe
stc
sub
inc
jg
xchg
les
fldenv
adc
movsb
mov
sbb
insb
mov
jno
inc
mov
sbb
repnz
sub
test
lahf
roll
jmp
xor
add
xchg
inc
push
mov
mov
fadds
stos
push
mov
loopne
and
sbb
lret
sub
pop
jg
inc
pop
ds
jecxz
lret
fsub
push
jl
movsl
in
mov
add
pop
outsb
lret
cld
imul
iret
popf
add
sbb
leave
pop
jo
pop
jl
jle
fwait
xchg
mov
sbb
in
sti
cli
lahf
cmp
js
scas
leave
cmp
mov
mov
jbe
jecxz
sub
push
mov
sub
push
aas
cmp
in
push
cmpsl
push
sbb
pop
inc
mov
mov
xchg
push
and
cmpsl
jbe
sub
mov
movsl
push
mov
adc
fdivrl
clc
aad
rorb
enter
dec
xorl
stos
lahf
out
mov
shrd
pop
sub
cmp
push
jmp
mov
loopne
ss
das
mov
xlat
sbb
inc
sub
out
xchg
xchg
mov
cwtl
clc
and
aaa
jp
lcall
std
data16
dec
inc
mov
test
out
insb
leave
shlb
jnp
sbb
pop
outsl
pop
push
pop
mov
icebp
push
repnz
leave
jb
stos
lahf
cwtl
cs
ds
mov
fsubrp
stos
xchg
sub
ss
push
jbe
cmovl
dec
int3
or
call
or
in
mov
pop
cmp
dec
dec
fnstsw
xchg
sbb
in
mov
jmp
out
call
cmpsl
pop
mov
ret
lret
mov
cmp
insb
arpl
inc
pop
ljmp
mov
sub
pop
rcrb
cmpsb
stos
stc
lcall
test
fldenv
or
leave
pusha
pop
pop
or
mov
lret
movsb
mov
out
int
sbb
std
push
pop
push
loope
cltd
aas
xor
int3
mov
icebp
sbb
lds
push
mov
cmpsb
mov
xor
sbb
push
bound
es
in
mov
aas
leave
ret
pop
cmp
xchg
add
pop
pusha
jmp
clc
fcoml
dec
loop
sub
pop
adc
mov
push
push
cmp
out
adc
inc
jmp
lret
lahf
mov
and
xchg
sbb
mov
push
jnp
sbb
repnz
repz
aas
dec
fwait
cmp
lret
sarl
rcrl
dec
dec
mov
clc
lahf
jg
insl
in
fwait
xor
scas
out
outsb
cmp
fmuls
out
insb
fsubl
out
push
mov
mov
and
sbb
cmp
pop
adc
fcoms
out
repnz
pop
das
and
jmp
xchg
adc
clc
fptan
xor
add
ret
lret
pop
fcomip
sbb
ret
xchg
insl
fdivp
cmpsl
cwtl
daa
add
clc
push
jmp
movb
dec
push
cld
movsl
mov
js
sub
jmp
ret
sub
mov
jnp
shrb
nopl
popf
lret
shr
mov
push
jmp
leave
lahf
jne
adc
inc
jl
sub
mov
cmp
or
lcall
mov
aam
and
pop
inc
ret
and
sbb
fisubl
cmp
push
cs
mov
sbb
in
cld
mov
pop
pusha
sahf
mov
xchg
jle
mov
mov
sbb
push
sarb
xchg
insl
cmp
sub
cmpsb
mov
push
test
dec
sbb
mov
faddl
leave
inc
sub
sti
jbe
xchg
shl
out
shl
add
mov
xchg
mov
mov
negb
ret
cmpsl
lea
movsl
pop
sub
out
outsl
pop
pop
cmpsl
xor
test
out
xchg
nop
outsb
sbb
mov
cmpsb
mov
call
or
mov
fsubr
bound
cmc
cmp
mov
and
outsb
in
jb
outsl
shlb
jp
les
pop
jmp
inc
ja
xor
stos
lcall
pop
push
and
and
loopne
stc
mov
sbb
shlb
jo
sub
pushf
add
dec
or
loope
je
pop
pop
arpl
test
shl
fsubl
clc
movsb
imulb
in
jg
fucomi
stos
and
stc
lahf
inc
dec
inc
sbb
fdiv
hlt
push
jmp
jne
int
mov
sarb
imul
dec
andb
push
inc
mov
xor
jecxz
push
int3
imul
enter
sbb
mov
fistpll
mov
xor
call
cmc
or
jge
bound
out
mov
lcall
out
call
inc
mov
les
mov
int3
push
cld
sub
add
out
push
aas
mov
lret
pop
shrb
and
scas
cwtl
adc
xchg
std
inc
cmp
out
ljmp
aaa
sub
enter
int
adc
cmc
jns
and
jbe
mov
xchg
mov
lahf
fnstsw
lea
dec
mov
jecxz
or
dec
lds
cli
lcall
shr
scas
iret
addb
insb
scas
scas
in
xchg
int
jo
insb
or
fsub
or
iret
ss
in
mov
jge
cmp
dec
std
jbe
cmp
fsubr
inc
cmpsl
clc
adc
jl
aad
and
and
jl
mov
test
sub
pushf
mov
daa
das
std
push
pop
out
lret
and
mov
lahf
jne
sub
and
dec
setl
adc
cmc
andl
sub
mov
and
pop
fldl2t
mov
into
mov
adc
and
mov
add
ret
out
pusha
lret
and
aad
add
xchg
test
push
cltd
xor
test
test
in
add
ret
or
call
in
cmpsl
fildll
xchg
stc
int
mov
xor
xor
jns
push
in
sub
out
shrb
nop
lea
fnstsw
cmp
pop
lds
pop
push
popa
popf
add
popf
fcoms
dec
inc
jmp
and
push
pslld
fdiv
mov
jge
cmc
cmpsl
js
mov
ror
sbb
cs
xchg
daa
aad
jo
js
push
push
loop
in
call
jmp
sub
incb
jo
jb
mov
sbb
mov
jecxz
lods
jge
cmpsl
dec
sub
ss
mov
loop
pusha
mov
out
test
imul
cmpsl
int
movsb
ljmp
mov
js
jge
rol
cltd
mov
roll
sbb
rol
roll
loop
sub
mov
or
cmp
xabort
jo
imul
jmp
fcmovbe
jmp
scas
pop
sar
rol
in
neg
adc
cli
push
mov
cmp
pop
imul
xor
gs
int
fldt
in
loope
sub
cmp
mov
push
inc
sbbb
ret
mov
mov
aad
call
sub
mov
jnp
pop
outsb
cmpsl
nop
sbb
out
and
out
xchg
scas
call
int3
cli
mov
fs
sub
outsb
cmpsb
fwait
out
dec
xor
pop
out
mov
mov
adc
jo
pop
fldt
dec
jns
cmc
jae
imul
addr16
cmc
fisubs
psubb
pop
inc
lcall
jle
sbb
in
or
push
push
xor
mov
imul
pop
push
mov
cmc
mov
out
sub
out
inc
xor
loop
mov
lret
pop
add
mov
and
lock
movsb
aaa
pushf
lcall
popa
addr16
hlt
mov
inc
xchg
jmp
pop
dec
mov
mov
stos
mov
addr16
int
jl
push
scas
dec
cmp
jl
test
lcall
and
adc
mov
ljmp
cld
arpl
iret
aam
sarb
push
inc
out
sbb
fsts
test
jge
popf
push
mov
out
popw
rcll
xchg
push
and
xchg
mov
sbb
and
stc
mov
in
stc
mov
lods
jmp
ds
adc
fnstenv
bound
adc
scas
cli
xlat
mov
stos
leave
lock
stc
mov
xchg
dec
es
in
cmp
ljmp
cmpsb
and
imul
lcall
jge
push
mov
pop
xchg
lret
lahf
mov
popf
jae
and
fcoml
push
and
popa
sbb
pop
adc
into
out
jo
imul
les
jo
xor
sbb
adc
mov
inc
mov
in
mov
lods
push
ljmp
xchg
cmp
cmpsb
mov
and
lods
rcrl
lock
mov
xchg
jbe
jecxz
xor
inc
repz
adc
adc
fnsave
jbe
xchg
pop
sub
adc
mov
popf
mov
and
lcall
mov
in
mov
mov
sub
push
pop
push
cld
ret
hlt
cmp
out
mov
push
xlat
push
mov
js
out
jae
cwtl
outsl
mov
mov
hlt
adc
inc
pusha
fwait
mov
stos
add
cmp
xchg
mov
movsl
scas
sbb
daa
ret
jge
js
push
popf
shll
mov
cld
dec
sbb
lret
mov
and
sub
lcall
ljmp
fmuls
and
push
mov
sbb
lret
cvtps2pd
push
outsb
lds
dec
pop
and
aas
icebp
and
aaa
into
rcll
sahf
enter
addr16
push
push
insl
es
sbb
out
jmp
mov
rcrl
sbb
stc
jle
dec
push
rclb
and
push
lea
fldcw
js
push
in
xor
xor
inc
test
sub
cmp
aam
xor
jmp
mov
fs
mov
mov
inc
test
add
insl
jne
pusha
mov
inc
sahf
jle
jmp
inc
imul
lods
lods
std
cmp
out
lcall
es
cld
pop
pop
mov
push
dec
mov
idivl
xchg
dec
dec
mov
push
mov
test
in
lcall
adc
push
scas
lods
push
popf
ljmp
inc
imull
loopne
mov
push
jb,pn
jo
xchg
sub
xor
sbb
jmp
test
mov
popf
push
insb
int3
cmpsb
push
sub
jge
loope
lret
popa
or
bound
pop
std
sub
xor
sbb
es
call
es
mov
cmp
push
cmp
push
out
es
fstps
inc
stos
mov
out
sub
es
sbb
pop
and
test
test
iret
clc
and
inc
stc
pop
cld
cltd
inc
push
pop
mov
jg
add
jg
call
mov
dec
xorb
cwtl
adc
pop
mov
lock
xchg
sbb
push
jge
mov
std
cmc
cmp
inc
ftst
movsb
jno
pop
jmp
dec
sbb
lods
mov
push
mov
push
dec
jle
fidivl
fstpt
shll
pusha
out
dec
push
out
pop
pushf
mov
dec
dec
mov
int3
js
push
loopne
cmpsl
adc
aas
gs
subl
dec
sbb
add
mov
loope
test
xor
aam
sub
inc
cmpsb
fcmovnbe
loopne
mov
pop
in
fiaddl
sub
jbe
sub
push
fcompl
dec
enter
sbb
jnp
mov
xchg
jecxz
jbe
stos
stc
adc
and
lock
out
into
dec
dec
sarb
fmuls
icebp
leave
mov
pop
sti
leave
clc
jns
into
pushf
sub
sub
into
out
int
dec
push
add
mov
push
data16
jno
add
push
int
pop
sub
scas
fadd
fldenv
xor
push
clc
lock
fwait
dec
jnp
mov
flds
rorl
cmc
xchg
or
pop
xchg
es
xchg
movsb
inc
out
js
mov
or
push
jne
fisttpl
popf
mov
jge
jo
adc
lods
mov
imul
clc
or
sbb
negb
mov
sub
call
aad
mov
mov
cmp
add
sbb
mov
aam
imul
pop
test
inc
mov
cmp
cmpsb
xor
loop
mov
push
outsb
push
outsb
enter
xchg
jp
jmp
in
cmc
outsb
dec
lcall
js
int3
call
outsl
lods
jae
mov
cmp
sub
adc
xor
data16
hlt
push
sub
or
repnz
mov
mov
lahf
lock
inc
pop
outsl
sub
fldcw
cmp
mov
sub
movsb
mov
sub
sbb
pop
and
adc
cmovb
test
clc
mov
rcll
mov
leave
sahf
add
movsb
push
push
jmp
pusha
icebp
popf
sarb
mov
fnsetpm(287
imul
out
push
loopne
rcrb
ret
les
cmp
mov
push
insb
ljmp
enter
and
ljmp
jae
mov
push
push
or
xor
mov
mov
divb
push
jbe
ret
lret
push
pusha
imul
leave
out
stos
out
mov
sub
xlat
aas
nop
test
push
adc
subb
mov
imul
sub
scas
rorb
pop
xchg
pop
pop
adc
mov
mov
jbe
out
xor
cs
fnstenv
cli
sar
lahf
scas
inc
and
imul
lods
lock
cld
cmpb
sub
push
movsb
xor
mov
out
fisttps
cmp
sub
fisubrl
jb
inc
mov
test
pop
xchg
or
lea
mov
jecxz
scas
xchg
mov
popa
lea
mov
cmp
and
into
enter
loopne
cltd
fldenv
cvttps2pi
dec
push
stos
push
ljmp
xchg
xchg
push
pop
rorl
mov
repnz
bound
rclb
and
cmp
imul
out
or
call
mov
push
enter
roll
ds
imul
sub
sub
scas
push
mov
in
adc
int3
dec
push
push
lcall
lock
lock
mov
jbe
ret
repz
icebp
lret
pusha
mov
stc
arpl
cmp
adc
pop
xlat
sub
pop
sbb
in
mov
insb
push
psubb
xlat
adc
push
pusha
cmp
je
dec
cmpsl
mov
mov
fidivs
imul
xchg
mov
out
lds
mov
sti
nop
add
pop
into
add
frstor
stc
xor
xchg
insl
fchs
or
add
repz
push
or
test
mov
inc
int3
inc
mov
sbb
cmp
cli
mov
mov
out
ret
sub
stos
jbe
adc
jmp
rolb
int3
in
aaa
pop
ja
jbe
sub
lock
imul
sahf
iret
jge
insl
mov
stc
inc
push
leave
cmp
mov
pusha
inc
mov
mov
xor
mov
fstp
jno
ficoms
sub
imul
pop
sbb
jle
dec
pop
adc
xor
mov
push
call
flds
mov
in
jmp
add
clc
les
jl
xor
ficompl
call
mov
mov
adc
daa
cmp
and
cld
jnp
cmp
arpl
enter
sub
inc
xchg
clc
inc
aad
lahf
jne
add
test
adc
add
ret
sub
test
lods
cmp
pop
cmp
jnp
lahf
arpl
inc
int3
fidivrl
negl
mov
test
sub
sbb
call
sub
dec
xchg
pop
lahf
pop
push
sahf
and
imul
divl
pusha
pop
mov
jle
imul
mov
jp
push
adc
es
jbe
mov
dec
int3
mov
in
call
int
mov
loope
push
shlb
xchg
sub
loope
pmuludq
push
stos
sub
pop
lahf
cmpsl
add
lds
mov
mov
xchg
mov
and
repnz
ficoms
fiadds
jbe
push
push
or
adc
rcrb
push
rcrb
or
jg
add
stos
jbe
push
mov
dec
and
das
fs
sub
mov
xor
lock
cmpsl
sub
fimull
lcall
dec
sbb
mov
jge
xor
js
shrl
sbb
call
xchg
je
and
movsb
or
mov
out
outsl
pop
xchg
insl
cmp
pop
mov
cmp
movsl
dec
push
mov
or
jl
mov
in
mov
sub
lods
or
int3
out
mov
sub
and
daa
push
cmp
loop
lods
lahf
cwtl
mov
sub
jp
addl
adc
jb
negl
jmp
fsts
negb
mov
stos
fiaddl
add
sub
data16
sub
sub
ds
add
or
pop
mov
loopne
xlat
and
push
das
mov
lahf
lcall
jp
stos
repnz
fcomi
pop
mov
pop
push
movaps
jno
or
cmp
xor
test
aas
pop
stos
mov
lds
jmp
lods
jbe
arpl
sti
rcr
add
pop
jb
imull
call
pop
pop
mov
xor
stos
pop
test
in
push
xchg
movsb
pop
cmp
sbb
mov
icebp
stos
cmp
fstps
cli
jp
lcall
cwtl
jge
pop
stos
data16
pop
xlat
jecxz
aas
ret
xchg
stos
or
or
mov
mov
dec
mov
popa
dec
and
sub
test
cmc
fdivrl
rcrb
push
xchg
push
shlb
pop
push
cltd
xor
fs
mov
aas
mov
into
rcl
ljmp
in
outsb
in
xlat
xchg
incl
out
mov
stos
fldcw
jge
stos
bound
and
fldenv
loop
xor
test
add
inc
test
cmp
push
test
dec
mov
push
test
movb
inc
and
test
jnp
fimull
ljmp
pop
push
lods
xlat
xor
xchg
test
cld
pop
sti
movsb
shlb
xchg
lret
aaa
sahf
daa
mov
aas
out
ljmp
push
pop
sahf
pop
and
pop
fs
lods
notl
fstl
into
adc
mov
enter
cmp
jno
orb
xlat
ficompl
lods
and
in
std
ficoml
xchg
fisubs
push
rcr
xlat
mov
sar
inc
pop
aas
out
test
mov
pop
mov
fistl
pop
cmc
pop
enter
jg
test
mov
flds
sub
scas
into
mov
mov
sub
sbb
pop
ret
sub
shl
mov
push
pop
adc
push
fs
sahf
push
dec
fs
pop
movsb
pop
jmp
inc
pop
mov
leave
nop
pop
and
mov
lcall
sub
add
lock
pop
insl
push
pop
ret
push
loope
pop
xor
xchg
gs
sub
xchg
aas
pushf
and
lret
outsb
xchg
mov
sub
mov
test
fmuls
test
in
sub
sbb
mov
fstps
sub
pusha
pop
or
inc
mov
and
sub
fistpl
xchg
pop
mov
ljmp
lods
enter
in
nop
and
js
clc
mov
icebp
mov
cltd
pop
sub
mov
push
movl
cli
ja
cwtl
shr
mov
lods
cmpsb
das
mov
and
clc
and
pop
out
adc
mov
sub
lock
dec
and
dec
lods
mov
loopne
movsl
fldt
mov
cmp
sub
add
in
and
fisubrl
into
sub
sbb
cs
mov
jge
sbb
dec
clc
mov
insb
cltd
cmpsb
or
ror
dec
cmpsl
fcomi
inc
sub
xor
ja
scas
fsubrs
adc
add
adc
addr16
mov
out
adc
dec
orb
cltd
sbb
lea
mov
out
jmp
mov
adc
adc
mov
or
mov
mov
inc
arpl
mov
shlb
enter
mov
inc
push
mov
push
jecxz
pop
dec
pop
jmp
pop
fldcw
sarb
mov
mov
insb
sub
jb
mov
mov
jle
mov
fdivr
push
pop
jnp
jmp
xchg
sub
dec
push
pop
lods
sub
and
les
cmp
lds
aaa
jne
adcb
cmp
mov
fs
add
push
push
loopne
mov
xchg
out
ret
repnz
in
aaa
dec
fwait
lcall
jno
or
mov
pop
push
or
mov
stc
stos
inc
push
sub
add
ljmp
sbb
popa
xchg
sbb
lret
inc
gs
cmpsl
mov
jge
js
addr16
jl
dec
movsb
sbb
loopne
cmpsl
cs
ret
jnp
or
sbb
mov
or
jo
sub
adc
sub
fcmovu
sbb
xchg
roll
sbb
int
and
rolb
jmp
shll
xchg
mov
std
cs
es
test
jp
fmul
lods
mov
sub
pop
cld
sarl
jne
lret
mov
test
xchg
xchg
mov
xor
outsl
icebp
sub
sub
sbb
sub
int3
pop
push
lds
pusha
xor
mov
pop
cmpsb
ss
inc
mov
mov
sub
cmpsb
stc
scas
and
shl
push
insb
mov
mov
sub
test
dec
dec
jmp
outsl
lcall
in
jmp
and
sub
lods
jecxz
sbb
xor
fildll
mov
movsl
test
jne
mov
mov
lods
stc
das
in
push
lahf
cmpsb
xor
mov
mov
push
xor
pop
xor
pop
mov
lahf
fsubrl
imul
dec
mov
mov
jmp
cmp
and
jl
push
sbb
jg
icebp
ljmp
lods
insl
popf
icebp
push
adc
mov
loop
pop
adc
daa
jle
ljmp
enter
dec
leave
clc
aam
cmp
mov
adc
sbbb
imul
and
mov
seta
xor
fimull
loopne
jge
mov
mov
and
insb
jl
ret
mov
and
cmp
stos
fsubr
aas
lahf
aam
mov
icebp
in
dec
cld
subb
ja
or
cmp
scas
sahf
outsb
inc
mov
xor
jmp
ret
js
test
jge
imul
aaa
mov
and
pop
fsts
cmc
orl
cmp
pop
in
jmp
pop
out
lcall
xor
gs
sub
imul
popf
inc
fisubrs
enter
shl
imul
aad
push
mov
xor
enter
andb
or
out
call
jl
sub
mov
imul
movsl
jae
lret
outsb
adc
lods
mov
shlb
or
xchg
mov
movl
leave
addr16
hlt
loope
or
cmpsl
and
jmp
sbb
mov
dec
xorl
add
adc
inc
cmp
sub
jmp
in
jnp
dec
ret
sub
dec
jbe
scas
jmp
add
sbb
fs
cmpsl
pop
addr16
push
cmpsl
sub
xchg
sbb
mov
aaa
imul
mov
pop
roll
int3
ljmp
dec
sub
xchg
jbe
xor
lods
imul
xor
and
leave
stos
push
mov
dec
xchg
std
in
or
les
fcomps
sub
imul
xchg
sbb
and
jne
test
outsl
jmp
cmpsl
fcmovnb
jae
sarl
or
popf
cmp
aad
insb
pop
nop
pop
adc
jnp
int
cmpsl
rclb
jecxz
divl
xor
mov
lock
lahf
dec
scas
or
inc
mov
adc
jmp
pop
pop
xor
gs
cmp
gs
leave
pop
call
jbe
fstps
add
xor
jmp
sub
lcall
sti
in
enter
je
dec
jbe
jbe
and
into
call
push
xor
cmp
push
ss
out
aam
or
dec
sub
cmpl
and
mov
ljmp
and
inc
std
xchg
and
adc
pop
pop
xor
mov
jns
inc
push
mov
leave
xchg
mov
xor
imul
lahf
and
xlat
and
lret
jo
shr
subb
das
rcl
stos
enter
push
loopne
enter
gs
push
int3
pop
push
sub
xchg
negb
xchg
test
jbe
dec
aad
dec
xchg
dec
fildl
stc
add
sub
jmp
fcomps
leave
add
les
or
lret
jle
shl
pushf
imul
push
sbb
or
add
or
cmp
addr16
pop
sub
xorl
pop
in
je
xor
sub
lds
or
push
or
inc
xchg
xchg
jnp
jecxz
add
cmc
sub
call
pusha
push
mov
shl
xor
pop
cmp
imul
adc
push
push
pop
lahf
dec
out
push
fildll
inc
test
sbb
push
cmpsl
xor
movsb
sbb
jnp
mov
outsb
jmp
xor
pop
int3
cmp
push
int
fs
ljmp
jp
repnz
imul
push
dec
and
pop
sbb
fdivrs
outsl
iret
dec
or
fsubr
adc
js
mov
inc
out
stos
push
out
stos
imul
jp
mov
subl
and
loopne
in
in
ret
shlb
jnp
popf
movsl
mov
gs
xchg
and
pop
dec
cltd
stos
leave
scas
in
dec
xor
popf
movb
data16
iret
dec
jge
lret
xor
xchg
rcll
jmp
in
shrl
jbe
into
cmpsb
cmpsl
jl
cmpb
lock
sub
in
xchg
and
stc
std
cmpsb
incl
out
sub
jge
pop
cmp
stos
jo
push
sbb
cmp
icebp
or
es
lret
sub
ret
cmpsl
ret
inc
inc
or
xchg
outsl
adc
xor
push
lock
xorl
or
jnp
outsl
ret
xchg
xor
andl
adc
add
int3
mov
out
aaa
enter
scas
ffree
roll
les
mov
inc
ljmp
cmc
add
add
pop
scas
imul
sub
aas
or
xchg
test
mov
leave
sub
jl
pop
ss
pusha
call
test
outsl
das
sub
and
inc
scas
mov
out
movsb
lods
arpl
gs
and
inc
push
jno
sbb
cli
fwait
pusha
push
in
lret
loope
mov
iret
add
test
mov
inc
inc
pushf
lds
sbb
lcall
mov
sti
push
popf
pop
jg
into
loop
mov
mov
cmp
sti
lcall
js
test
gs
sub
and
and
rcrb
in
jns
lret
sbb
dec
sbb
scas
xchg
fmul
inc
lods
push
push
jmp
in
repz
sbb
jae
pop
insb
out
fldcw
mov
enter
in
sti
fs
and
push
pop
rorl
or
mov
sbb
mov
fmul
imul
inc
pop
inc
sub
sub
scas
and
mov
mov
enter
or
jmp
pop
xchg
nop
mov
pop
nop
adc
lcall
stos
imul
test
dec
imul
mov
jnp
pushf
daa
mov
std
das
mov
notb
add
in
inc
pop
leave
test
lea
cmpsb
sbb
inc
mov
out
fs
fisubrl
dec
and
jp
test
adc
push
cmp
add
shl
flds
imul
jmp
popa
dec
test
push
mov
mov
sti
cwtl
jp
addr16
into
push
mov
ret
push
jmp
movsl
xor
jmp
sub
fs
ljmp
icebp
fbstp
js
sti
pop
xchg
imul
shll
hlt
stc
push
xor
jle
pusha
xlat
sti
pop
lcall
inc
and
pop
rcrl
sub
pop
inc
jmp
and
sub
cmpsb
jecxz
gs
into
push
sbb
lods
movsb
jmp
sahf
rcll
and
aas
fdivr
js
stos
mov
or
mov
imul
cmp
leave
out
ljmp
adc
in
sub
aam
das
aas
add
push
sbb
loopne
and
cltd
in
es
and
jbe
mov
dec
push
adc
imul
push
push
lods
test
sub
xor
imul
test
loope
and
pop
jl
inc
push
jle
adc
adc
push
push
out
into
mov
lret
lea
ficomps
pop
push
lret
orl
lret
movsb
stc
mov
xor
ret
jge
aaa
out
in
rclb
pop
pushf
and
adc
movsl
mov
and
mov
out
sbb
test
pusha
loopne
sub
roll
mov
stc
mov
mov
mov
in
das
shll
leave
in
test
movsl
dec
dec
jl
loopne
sub
jo
mov
mov
movsb
or
or
pop
pusha
jge
lret
xchg
mov
mov
pop
movsl
daa
mov
adc
mov
lret
jb
adc
inc
mov
jmp
jbe
cmp
imul
rclb
inc
fdivrl
movsl
sahf
push
dec
loope
push
sbb
inc
jo
dec
jecxz
ja
pop
sub
pop
or
das
repnz
out
xchg
mov
in
scas
in
arpl
xor
hlt
jecxz
dec
adc
enter
insl
cmpsb
shll
cmp
sbb
cmp
ja
adcb
adc
outsb
add
out
movsl
dec
mov
cmp
or
jbe
sbb
jmp
push
shrl
cltd
stos
dec
pop
out
loopne
enter
je
adc
out
sar
mov
sbb
call
mov
mov
dec
sub
dec
or
push
pop
jle
jmp
nop
cmc
mov
or
in
in
int3
pusha
lds
xor
inc
cmp
addr16
xchg
jbe
repnz
cmp
dec
mov
and
das
out
es
sub
cwtl
push
clc
loopne
xchg
push
out
aas
lods
out
mov
sbb
sub
or
cmp
aam
clc
adc
test
cmpsb
int3
adcl
imul
ds
sub
out
and
xchg
push
push
sub
ljmp
mov
mov
dec
insl
sub
cs
push
lret
ret
fwait
es
xor
xor
sbb
ficoms
xchg
or
mull
js
or
sbb
in
jmp
sub
cltd
sti
insl
push
negl
scas
pop
out
nop
mov
rcl
in
test
or
movsb
aas
hlt
sbb
movsb
es
ret
add
insl
ja
loop
or
das
shrb
xchg
and
negl
je
mov
push
loope
push
adc
cmpsb
cmp
jge
stc
call
or
jnp
lret
rcrb
sub
ja
in
xor
push
xor
and
in
sub
xchg
mov
notw
sub
mov
in
adcb
les
repz
pop
repz
jae
xor
mov
adc
int3
icebp
jecxz
into
inc
pushf
xchg
je
mov
movsb
sub
pushf
mov
or
adc
sarl
mov
sbb
stos
xor
jmp
mov
mov
pop
call
and
xchg
dec
push
stos
subps
add
mov
pop
push
xchg
pop
int
adc
mov
cmpl
mov
cmc
adc
imul
jns
xor
sbb
mov
in
scas
js
add
and
cmc
sbb
or
fsubrs
lock
out
cltd
das
cmp
out
adc
lahf
dec
lock
mov
push
dec
xchg
pushf
pop
call
jo
into
xor
or
lahf
mov
leave
test
aaa
js
mov
arpl
mov
lea
dec
mov
push
jl
xor
cltd
int
rcr
or
dec
mov
fnsave
xchg
scas
nop
aam
dec
cmpsb
mov
ret
js
jb
gs
cltd
mov
lahf
scas
jne
scas
mov
pushf
cmpsl
mov
mov
ret
addr16
jecxz
shlb
clc
sub
arpl
and
add
jp
stos
outsb
sub
inc
cmp
jmp
imul
pop
dec
dec
and
int
lahf
es
mov
push
pop
dec
inc
iret
rorb
pop
inc
daa
xchg
pop
jo
adc
or
aam
aaa
int
mov
push
iret
data16
into
add
loopne
icebp
sub
push
fildll
push
or
sbb
fs
push
sub
mov
jp
sarb
adc
adc
ficoml
mov
popf
push
mov
dec
stc
cltd
js
test
xchg
push
call
xor
push
shll
push
rcll
out
stos
dec
insl
add
pop
add
mov
mov
xor
sub
cmp
les
cmovns
sub
xor
jbe
test
sbb
inc
cmc
jbe
shl
inc
mov
cmpsl
iret
cmpsl
mov
out
push
rcll
cwtl
sub
jecxz
push
add
stos
push
jge
idiv
loopne
test
pop
xchg
nop
or
mov
inc
pop
rclb
cs
ja
mov
test
movsb
leave
jb
xchg
shrl
jns
hlt
sbb
cmp
loopne
push
push
sbb
or
sub
push
mov
mov
mov
outsb
pop
jecxz
repz
sub
mov
push
sbb
insl
mov
frstor
nop
test
lahf
adc
adcb
jbe
into
arpl
xlat
add
and
pop
das
or
dec
jbe
fisttpll
fdivrs
in
clc
inc
test
ja
push
in
enter
jb
ja
lahf
rclb
sub
push
loop
lods
enter
lcall
pop
loope
je
adc
lock
sbb
sbb
fcoml
std
movsb
xlat
mov
inc
fnstcw
lods
ret
je
cmp
cmp
push
adc
pusha
jae
cmp
shlb
pop
xor
cmp
mov
adc
sbb
sbbb
sub
outsl
lahf
fnstenv
loopne
xlat
mov
inc
loop
dec
call
das
push
pop
pop
enter
mov
mov
jmp
cltd
mov
imul
cmp
jns
ficompl
mov
lock
data16
sti
pop
mov
out
xchg
aam
xchg
fwait
cmp
or
lahf
mov
jns
fs
lods
pop
mov
leave
xchg
rcrl
sbb
stos
aas
sub
out
sahf
mov
cmp
cmc
test
sub
nop
jns
ficoml
sbb
sub
mov
dec
xchg
xor
out
out
fwait
inc
dec
imul
lea
dec
jbe
mov
ljmp
mov
cwtl
sub
mov
sbb
jae
xchg
push
imul
fs
jb
scas
or
add
adc
insl
xchg
xchg
lea
into
cmc
in
dec
mov
inc
out
push
cltd
movsb
leave
stos
pusha
jbe
sub
inc
mov
lahf
fnstenv
filds
movsl
pop
adcl
js
andb
filds
mov
dec
loopne
mov
mov
std
push
pop
and
pushf
bound
repnz
push
jge
add
dec
and
xchg
dec
jg
add
adc
lret
jbe
sub
add
loop
jle
inc
mov
fs
enter
pushf
rcll
cmp
in
pop
adc
lock
mov
fsts
push
cmp
xchg
add
fsub
and
rcr
pushf
mov
loopw
test
aaa
jg
orb
fiadds
push
inc
in
outsl
fdivs
lock
lods
xor
jae
mov
lret
mov
xchg
cmp
fmul
outsl
push
jg
imul
sub
add
fidivl
pop
fistl
sbb
jnp
sub
leave
out
imull
loop
lds
dec
jns
jns
movsl
shlb
lret
aam
mov
cmp
mov
aas
sbb
fnstcw
mov
dec
movsb
pop
fistl
in
rorb
xchg
sub
jne
mov
pop
cmp
push
xchg
jge
or
pushf
es
js
jmp
movsl
mov
cwtl
lea
popf
pop
dec
xor
aas
dec
sub
and
shrl
sbb
pop
psrlq
out
std
in
cld
les
fsubrs
stos
je
cmpsb
icebp
mov
je
add
and
or
into
push
nop
xlat
dec
addl
jnp
pop
loop
push
and
add
jns
or
sub
adc
shll
add
sarl
jb
push
test
outsl
inc
push
test
mov
iret
shlb
xchg
loopne
test
sub
cltd
mov
push
mov
cmp
sar
dec
inc
movsl
or
or
dec
sub
mov
adc
jmp
or
sbb
mov
in
mov
leave
jnp
or
sbb
xor
cmp
mov
hlt
clc
adc
jne
pop
lea
mov
xlat
inc
inc
cmc
lret
lods
jmp
xor
jns
fsubrs
insb
stos
xor
loopne
sbb
iret
jp
fcomps
jb
jmp
clc
push
popf
jne
rolb
out
dec
adc
out
aam
in
mov
jle
out
jne
loope
je
dec
ljmp
jbe
mov
mov
iret
cmpsl
dec
in
jp
out
xchg
fistps
jle
lcall
lret
lret
xchg
dec
sub
mov
sti
lret
insb
js
test
das
sub
movsl
push
push
repnz
ljmp
mov
in
hlt
xchg
and
cmp
jne
pop
mov
push
repz
push
sarl
add
lcall
sub
out
xlat
adc
adc
test
iret
icebp
mov
cmp
jo
and
cmpsb
out
pop
mov
aaa
enter
clc
cwtl
sbb
jb
sub
loopne
adc
jge
aaa
push
push
into
lahf
mov
enter
addr16
adc
data16
loope
scas
popf
imul
sbb
enter
xchg
leave
mov
sub
inc
imul
mov
ficompl
or
imul
popf
movsl
push
sub
xchg
xchg
call
in
lock
push
or
mov
cmp
add
test
adc
test
mov
push
push
push
in
std
mov
sub
imul
movsb
hlt
pushf
outsl
iret
mov
push
jmp
add
xchg
icebp
pop
shlb
cmp
test
test
sbb
sub
out
adc
repnz
sbb
lret
imul
xchg
adc
es
imul
mov
xor
cmp
or
frstpm(287
stos
mov
dec
js
lret
jb
jp
cmp
stos
outsl
cltd
mov
mov
jmp
mov
pop
and
pop
call
stos
ret
mul
sbb
inc
sti
mov
in
sub
or
dec
stos
sti
lret
lock
sub
ja
push
xlat
and
xlat
cmp
mov
clc
or
insl
or
add
sub
add
dec
sbb
push
mov
fwait
rcr
push
aaa
mov
inc
push
mov
mov
cmp
sar
andl
push
outsb
or
setb
xchg
ljmp
call
shr
lret
loopne
xchg
shll
add
shl
lods
aad
adc
inc
and
pusha
pop
cli
subb
cmp
jp
dec
aaa
or
add
arpl
push
cmpl
xchg
outsl
jne
sub
sub
pop
repnz
ljmp
sub
in
add
sub
clc
movsb
xchg
movsl
and
leave
push
or
ljmp
jge
pop
and
mov
xchg
lret
ljmp
push
inc
outsb
dec
data16
sahf
dec
fsubrs
push
js
lea
adc
inc
and
mov
outsl
lcall
fimuls
jnp
inc
jmp
shrb
gs
push
andb
cmpsb
lcall
jmp
ljmp
enter
or
or
mov
in
push
jge
add
mov
gs
cmp
pop
outsb
pop
inc
cmpsl
test
pop
mov
xchg
mov
jmp
lods
pop
sub
bound
imul
icebp
es
mov
mov
ficoms
pop
fwait
mov
pop
movsb
leave
stos
xor
inc
repz
fs
std
fbld
xchg
mov
and
push
sti
es
enter
lock
push
dec
xor
ror
fiaddl
and
mov
stos
mov
gs
and
iret
inc
xchg
lcall
sbbb
push
or
movsb
mov
cmp
mov
cs
ljmp
sbb
mov
aam
call
dec
and
jno
scas
cmp
mov
outsl
sub
stos
int
ja
insl
jmp
fisubl
and
sbb
dec
adc
jbe
mov
int3
dec
pop
pop
pop
push
in
mov
pushf
inc
pop
push
in
dec
adc
test
cltd
lods
jb
mov
ret
je
scas
imul
in
jae
xchg
leave
or
aaa
in
or
shll
loopne
rclb
jp
adc
mov
mov
jnp
stc
int3
mov
lcall
sbb
and
sub
and
dec
stos
in
pusha
xor
lock
push
mov
sbb
or
add
stc
sbb
addr16
push
sahf
in
gs
loope
inc
movsl
push
sub
les
and
jbe
adc
or
fisttps
inc
clc
push
repz
push
clc
jo
lock
cmp
je
sub
outsb
cmp
xor
push
jns
sbb
fwait
cmpb
cltd
das
lret
call
repnz
mov
or
fiaddl
lret
aaa
pop
dec
and
push
in
mov
pop
js
out
cmp
in
loop
shrb
mov
ljmp
stos
int3
fstps
movsb
push
sarl
sub
in
jnp
insb
shr
push
js
mov
mov
mov
icebp
sbb
sub
or
mov
fwait
mov
jno
test
xchg
mov
nop
jp
adc
out
push
je
ss
xchg
std
mov
shlb
pop
pusha
sahf
add
mov
aaa
adc
push
sbb
jae
ljmp
mov
inc
je
subl
pushf
mov
push
inc
stc
lods
in
jbe
cli
dec
dec
or
leave
ficomps
mov
loop
ja
clc
or
std
mov
aaa
sti
nop
dec
aaa
inc
ja
sarb
and
sub
mov
enter
mov
adc
cmp
sub
and
mov
outsl
je
test
pop
jmp
mov
leave
fwait
subl
jle
pop
ret
out
data16
clc
fldcw
and
mov
fsub
movsb
push
and
lahf
leave
std
mov
lods
sub
cmpsb
dec
push
xor
jmp
sub
lret
inc
adc
cmp
xchg
and
loopne
pushf
push
jecxz
shlb
in
jle
loope
gs
mov
js
pusha
sub
jo
stc
aam
icebp
pop
cmpsl
lcall
pop
sbb
push
sub
xor
push
mov
in
aas
lahf
jns
jg
fisttps
scas
roll
inc
fyl2xp1
aaa
aam
and
outsl
in
sub
out
push
and
inc
ljmp
subl
loopne
test
sahf
xor
mov
out
push
jl
mov
xor
xor
jmp
push
leave
mov
imul
push
mov
out
lods
mov
mov
dec
std
or
sti
lods
inc
shl
xor
dec
loopne
add
lahf
cltd
mov
shr
shrb
mov
adcl
lret
lea
imul
insb
sub
xlat
js
sbb
adc
icebp
jmp
xchg
sub
add
sub
jmp
cwtl
push
and
pop
mov
pushf
push
mov
pop
inc
add
sub
out
movsl
lret
sti
and
in
mov
inc
lea
imul
enter
and
mov
sub
xchg
ja
popa
cmp
inc
push
inc
dec
popa
push
into
lret
cmp
test
inc
sbb
stc
xchg
or
lea
push
adc
enter
mov
mov
sub
movsb
and
mov
pop
and
stos
mov
std
call
push
repnz
dec
stc
mov
test
aad
ss
xchg
mov
sub
movsl
mov
inc
jnp
jmp
aad
fldenv
daa
rol
das
add
es
aad
pop
mov
jae
push
loope
sub
mov
sbb
pop
sub
adc
mov
inc
iret
jne
not
out
add
or
cmpsb
fildll
xchg
fdivl
repz
sbb
fisubrs
xchg
sub
jmp
mov
jmp
mov
leave
cwtl
xchg
maskmovq
idivl
stc
jbe
cmp
jmp
inc
push
rcrb
clc
pop
mov
cmpsb
aam
lds
mov
fs
adc
cmp
pusha
inc
jl
inc
jp
sub
cmp
sub
js
frstor
pusha
insl
mov
rorl
lret
dec
lds
push
jmp
call
ljmp
mov
add
mov
jns
ret
call
lcall
std
in
dec
std
and
push
dec
std
pop
adc
xchg
aad
test
cli
ljmp
cmpsl
dec
lea
mov
push
jecxz
push
adc
push
inc
jmp
leave
rcll
cwtl
mov
cmpsb
push
fcompl
lret
andnps
ljmp
cmp
int
inc
sub
jmp
mov
imul
xor
std
addl
popa
mov
lret
adc
test
repz
in
lea
enter
inc
jle
jl
pop
nop
js
mov
sbb
mov
or
enter
nop
cmpsl
jp
ucomiss
inc
adc
mov
push
lahf
push
fbld
imul
adc
adc
fsts
pop
dec
loopne
cmpsb
out
pop
stos
leave
xor
push
cld
push
ret
addr16
mov
sub
repz
mov
fdivrl
rcrl
lret
xor
insl
mov
add
clc
xor
pop
lret
ljmp
adc
das
in
mov
push
jae
in
pop
fwait
jmp
frstor
add
test
rorl
dec
sub
jnp
lcall
loopne
jnp
jb
loop
in
cmp
call
mov
sub
or
mov
ret
in
push
rcrb
jge
sub
fisubl
lret
hlt
cld
stos
call
push
and
out
inc
inc
fld
mov
mov
out
mov
imul
bound
mov
out
rcrl
int
fbld
fldt
lret
xchg
iret
movsb
ds
fldenv
mov
movsb
repz
fldt
movsb
mov
fimull
pushf
jmp
out
enter
pop
mov
push
movsb
out
in
lret
xchg
jmp
pop
jecxz
xchg
out
mov
push
lea
stos
and
shrl
xchg
dec
movsb
fninit
xchg
insl
movsb
pop
test
out
xchg
jg
into
arpl
sbb
enter
popf
adc
data16
sub
push
dec
movsb
data16
mov
push
dec
movsb
repnz
shll
movsb
pop
mov
std
popa
out
fcmovb
arpl
push
sub
sti
repz
movsb
in
popa
clc
out
dec
test
aad
imul
dec
mull
xchg
mov
adc
addb
movsb
pop
add
inc
sub
and
test
fiaddl
sti
sub
lret
pop
or
lods
ljmp
ret
cmp
fistl
scas
pop
repz
sbb
test
cwtl
push
pop
stos
lret
hlt
mov
fimuls
out
add
aas
cmc
stos
aam
mov
add
roll
fists
sbb
push
sub
mov
push
push
cmpsb
cli
cmp
loop
ljmp
sti
xlat
xchg
mov
data16
aaa
gs
adc
mov
fisubrs
pop
shll
and
rcr
xchg
jmp
inc
add
sub
fsubl
push
add
fnstsw
rcrl
push
pop
fisubs
push
movsb
pop
data16
loopne
stos
in
repz
mov
dec
shrb
aaa
dec
das
sub
add
xchg
pop
ja
pop
fs
in
cmp
ret
xchg
mov
mov
into
sub
pusha
fmul
and
dec
loopne
or
push
js
shll
int3
mov
sub
rorl
fldt
push
pop
or
sub
inc
fcmovne
sub
cmpsb
clc
mov
scas
mov
jecxz
fcomp
lret
mov
jne
jno
imul
fimull
repnz
stc
fdivrp
pop
inc
pop
adc
fstpt
mov
fisubrl
pop
mov
lret
into
ja
dec
inc
mov
pop
mov
pop
pusha
pop
in
shl
mov
pop
daa
enter
mov
js
jns
fsubs
sbb
cmp
fxch
daa
stc
jmp
pop
dec
mov
imul
xchg
out
dec
xchg
sarb
pop
sbb
jnp
ja
popf
add
push
mov
mov
sub
je
out
mov
or
cmpsb
jge
xchg
dec
mov
inc
je
and
jg
xchg
mov
cmp
and
stc
jmp
cmpsb
hlt
int
cmp
or
and
add
stos
adc
lcall
scas
in
mov
repnz
pusha
pop
pop
inc
sti
out
cmpsb
xor
mov
jge
push
nop
adc
add
adc
jge
in
pop
xor
jmp
mov
das
pop
scas
add
mov
mov
cmp
scas
sbb
xchg
testl
or
xrstor
pop
mov
out
xchg
push
sub
enter
cmpsb
lahf
inc
sarb
fninit
dec
les
pop
outsl
test
int
pop
inc
inc
xchg
lock
clc
aas
xlat
aas
scas
fwait
ljmp
fstps
pop
inc
loop
inc
push
icebp
pop
cmpsb
inc
push
or
jp
sarb
dec
data16
sub
stc
mov
xchg
pop
sub
stos
lret
mov
pusha
pop
mov
jo
and
hlt
frstor
jle
in
cld
adc
sub
jg
pop
xchg
fstpl
sti
and
lret
jmp
xchg
xor
aad
pop
out
call
push
pop
stc
call
orl
mov
push
lds
in
sar
loopne
mov
call
lds
push
mov
push
outsl
jp
clc
aaa
inc
xor
nop
mov
lcall
push
mov
pop
adc
popa
push
add
xor
adc
or
shlb
cwtl
sub
ja
sub
ret
es
dec
mov
addl
cmpsb
or
adc
outsb
xor
mov
push
adc
jae
mov
mov
aam
pop
and
js
jge
rcr
mov
cli
cmc
push
push
sahf
cmp
sub
stos
sub
or
xchg
pop
mov
sub
fistl
cmp
lret
insl
js
test
or
push
mov
hlt
push
fbld
es
sarl
loope
sub
movsb
xor
call
mov
in
xor
inc
or
ret
jmp
sub
xchg
or
daa
xor
ljmp
scas
arpl
mov
mov
enter
add
fimull
idivl
and
sub
enter
stos
jl
jbe
movsl
mov
nop
mov
jbe
enter
ljmp
sub
insb
adc
push
sbb
jg
or
in
shrb
sub
loop
mov
lods
push
push
sbb
xchg
repnz
out
sbb
insb
cmc
mov
mov
mov
loopne
ret
sub
pop
sbb
or
jmp
fisubrl
mov
icebp
movsb
cmp
jl
int3
pop
push
hlt
sub
inc
out
sub
pop
loop
mov
push
dec
out
or
pop
insb
sub
adc
stc
movsb
push
call
adc
loopne
lret
sub
jecxz
lcall
adc
push
or
out
cmp
popa
adc
adc
inc
out
sub
pop
cs
add
inc
mov
dec
dec
sbb
jnp
sbb
xchg
js
sbb
fbld
or
jae
addr16
mov
roll
loope
push
lock
in
xlat
jg
mov
xchg
mul
lcall
sub
add
jge
mov
push
cmpsb
push
pop
adc
dec
pop
mov
pushf
out
je
dec
inc
iret
sbb
mov
lahf
mov
mov
mov
lcall
mov
mov
dec
mov
ljmp
inc
dec
xchg
out
test
lea
cwtl
movsb
sub
push
jbe
in
fnstcw
push
adc
rclb
fldcw
push
sub
pop
cmp
or
sub
mov
push
lea
xor
ret
das
orb
and
pushf
jns
sub
lahf
leave
jae
out
dec
mov
loop
push
out
jmp
mov
sub
fs
std
mov
xlat
jl
or
dec
sub
adc
add
jmp
xor
sti
test
lret
mov
mov
in
add
mov
pop
inc
mov
mov
das
aas
push
mov
cli
mov
sub
js
pop
sbb
mov
inc
dec
arpl
imul
testl
roll
sub
mov
or
out
shll
push
clc
xchg
dec
push
and
jp
out
add
scas
out
sbb
or
xor
xor
cmp
int3
xor
sbb
enter
lods
jae
fstps
add
jne
leave
jp
scas
and
push
mov
int
rorl
mov
fs
rcll
jbe
xor
sub
add
in
pop
jns
movhlps
push
jbe
jmp
test
mov
rclb
fisttps
jnp
cwtl
inc
pushf
add
int
adc
fidivrl
sub
dec
je
adc
cli
or
hlt
add
or
push
imul
jge
add
rcrb
imul
jle
movsb
test
mov
add
fimull
push
sub
fisubrl
mov
outsl
int3
cmpsl
ds
rclb
dec
lods
out
pop
jp
loop
insl
cltd
mov
lahf
sub
in
lcall
out
pop
sbb
cwtl
mov
jbe
sahf
inc
and
test
out
cs
sarb
adc
int
lahf
rcll
jbe
push
xchg
stc
lods
dec
mov
add
dec
imul
pop
or
iret
xor
inc
rcr
pop
cmp
setl
test
popf
sbb
in
es
in
stc
mov
xchg
fnstcw
xor
orb
mov
outsl
leave
imul
ficompl
pop
mov
and
test
cltd
mov
add
dec
mov
cld
clc
mov
jns
js
mov
jo
shll
add
xchg
push
mov
js
jbe
notb
in
lock
xor
std
cmpsb
setno
cwtl
push
test
jl
shrb
sub
pop
cmp
aaa
mov
mov
fimuls
lcall
xchg
clc
das
test
test
mov
outsb
mov
adc
fdivrl
jno
sbbl
in
ljmp
fisttpl
or
add
sub
dec
das
pop
out
cli
jnp
popf
and
loopne
or
push
push
dec
jbe
orb
push
adcb
fwait
popl
xchg
or
test
lods
lahf
adc
mov
adc
fdivrl
shrb
stos
and
enter
pop
fs
cli
push
nop
mov
and
sub
lret
pushf
js
sub
xor
pop
shlb
in
xchg
lds
in
xlat
test
call
jp
cmp
jg
fsubs
test
fldt
mov
xchg
mulb
or
jns
pop
mov
test
jmp
and
or
pop
and
add
mov
jae
or
mov
pop
push
push
sub
cmpsl
xchg
inc
mov
pop
cwtl
adc
jmp
aam
pushf
test
mov
inc
test
roll
sub
ljmp
xchg
adc
adc
push
aad
sub
push
jg
hlt
in
adc
out
je
and
pop
cmc
loope
lea
stc
pop
lret
mov
push
data16
jl
jl
jno
cmpsl
xlat
cmp
lods
sbb
jno
jne
push
xor
mov
inc
jg
icebp
or
mov
xchg
and
and
int3
mov
pusha
sub
outsb
loopne
jb
cwtl
lret
lock
sbb
cmp
ljmp
test
jnp
lret
dec
cmp
loope
loope
mov
inc
imul
ds
cwtl
jbe
lods
sub
pop
ljmp
call
fwait
add
das
jecxz
aas
jg
pop
aam
inc
cmp
int
dec
jecxz
aaa
icebp
lahf
xchg
mov
push
push
mov
test
outsl
scas
je
mov
popa
out
inc
rorb
jp
out
cmpsb
sub
mov
push
loop
lret
mov
fldcw
xor
cmpsl
addr16
fisubrl
add
cmpsb
nop
popf
sub
cmp
adc
push
dec
fsts
sbb
add
pop
daa
mov
mov
mov
icebp
cmpsb
leave
lock
jge
addr16
push
pop
lods
mov
inc
dec
fisubrs
scas
idiv
aam
pop
mov
jnp
fidivrl
inc
push
addl
stc
leave
mov
int3
out
pop
sub
ret
inc
stos
jno
push
jle
dec
push
push
sarb
loop
sub
xchg
insb
out
add
aam
enter
dec
popa
or
push
leave
jne
imul
js
or
push
mov
incl
lock
enter
lret
stos
dec
pop
clc
movsb
popa
push
in
xchg
adc
enter
fdivrs
aad
lea
cmpsl
mov
imul
pop
xor
and
fmul
lea
or
test
inc
outsl
mov
push
insw
shl
sub
jbe
popf
pop
fcmovnb
in
mov
call
fsubrl
rcr
xchg
fidivrl
out
fnstsw
incl
jmp
xor
mov
pop
push
or
dec
stos
jbe
mulb
loop
subl
fucompp
scas
push
jge
sub
dec
pop
pop
hlt
lods
adc
aad
inc
pop
mov
mov
rorl
jmp
ljmp
movsb
test
push
js
or
xor
and
cmpsb
dec
mov
movsb
out
jl
lcall
fs
lahf
or
push
jbe
stc
add
call
fistl
push
lds
and
loopne
sub
jbe
jbe
mov
mov
cs
arpl
imul
fstpl
das
fisubrl
imul
imul
pop
andl
sbb
data16
rolb
mov
rcll
fs
mov
cmpsl
fnsave
pop
popa
sub
lahf
pop
add
in
mov
ret
mov
fbstp
hlt
dec
cmpsb
push
mov
sub
adc
in
js
inc
xor
and
sub
into
inc
leave
push
mov
jb
clc
xchg
insb
adc
lcall
sub
or
in
jp
lea
stos
aam
lahf
ds
dec
pop
insb
sbb
add
out
dec
test
imul
push
je
sbb
push
sbb
cmp
jmp
ljmp
scas
xlat
jle
sub
push
xchg
lret
or
push
pop
ljmp
pop
pop
push
fdiv
fs
hlt
fildll
outsb
js
fimull
ljmp
imul
movb
int3
loope
bound
xchg
inc
ja
dec
and
sub
xchg
mov
ret
test
into
mov
jb
pop
cmp
mov
mov
imul
je
and
out
lret
popa
mov
int3
xor
popa
and
roll
js
jo
and
jle
inc
push
js
add
cmp
es
in
pop
pop
lcall
mov
mov
int3
sbb
leave
gs
xchg
mov
sub
mov
lret
mov
jnp
outsb
xor
dec
mov
jno
mov
sbb
aad
pop
out
pop
scas
es
test
jmp
push
out
jmp
test
cmpsl
into
cmp
fcomp
movsb
jecxz
push
in
test
sub
cmp
jnp
jl
and
cmp
pop
and
jmp
ret
fldenv
lock
repnz
mov
sbb
push
insb
les
js
pop
icebp
xchg
out
mov
cli
jge
xchg
push
negl
in
push
lahf
pop
jg
xor
lock
imul
sti
sti
enter
or
fsubs
test
push
clc
jno
mov
cmpsb
fwait
or
or
mov
sahf
xchg
into
insl
ficoml
ljmp
or
xchg
lret
fs
cwtl
push
leave
fs
shlb
dec
lea
push
dec
push
pusha
insl
inc
mov
mov
lock
xor
push
aaa
mov
rcrl
ljmp
jle
bnd
lock
xchg
inc
lds
or
leave
cmpsb
push
into
sbb
int3
xchg
jo
mov
jp
sub
xor
cmp
clc
xor
les
testl
pop
add
test
or
shrl
or
add
or
lods
test
fxch
stc
jbe
push
ret
adc
out
out
sub
jnp
sub
or
sar
sub
dec
repz
lcall
cmp
pop
add
adc
adc
andl
movsl
dec
lret
inc
xchg
inc
push
fdivs
lahf
cmpsb
ds
jns
mov
enter
enter
andb
pop
jmp
add
stc
sarb
mov
stc
lea
data16
cmpsb
pop
js
pop
lods
lock
cmpsb
clc
mov
cmp
adc
sti
clc
and
test
lcall
cmpsl
dec
aad
lahf
dec
dec
arpl
fnsave
xor
js
les
in
fiadds
jne
jmp
push
mov
or
cmp
dec
and
iret
xor
lods
ljmp
test
or
inc
pusha
int
test
aad
hlt
sbb
aaa
and
xchg
pop
cli
dec
sbb
arpl
add
mov
fwait
mov
cmp
ret
dec
jge
mov
mov
mov
stos
test
sbb
faddl
out
push
mov
xchg
cmpb
pop
es
add
cmp
gs
gs
push
pop
xchg
es
or
scas
rorb
in
rorb
sub
ficomps
and
dec
movsb
xlat
int3
push
call
jno
int3
pop
pop
stos
lock
aaa
jge
xchg
mov
stos
insb
sub
out
xor
mov
or
leave
stos
pop
pop
lea
push
push
pop
fcmovnu
lock
clc
xor
sub
call
adc
mov
lret
cs
pop
sub
nop
mov
push
daa
cmpsl
lods
dec
pop
and
jge
in
sub
enter
cmpsb
mov
or
fstpl
inc
adc
jmp
icebp
mov
xchg
xchg
inc
ds
ds
push
sub
sbb
fcomp
xor
je
and
push
push
ss
mov
cmp
push
das
jbe
sub
dec
imul
mov
or
out
mov
mov
js
lcall
cmpsl
out
pop
xor
mov
outsl
cmp
stos
pop
sti
xchg
sub
lret
in
sub
sub
rolb
out
push
lods
jle
aad
inc
movsb
pop
test
sub
push
sbb
rorl
fldcw
adc
stos
pop
fcmovu
pop
pop
dec
mov
adc
push
lods
mov
pop
pop
fnstcw
clc
push
lret
frstpm(287
fldcw
lret
sahf
or
ret
in
movsb
cltd
push
adc
xor
sti
out
fcmovu
lret
adc
push
jmp
mov
sti
cmp
pop
lret
adc
pusha
fld
sbb
push
out
or
push
sub
pop
js
outsb
sub
fcomi
pop
push
inc
mov
out
xchg
pop
xor
push
sub
adc
mov
pop
rcll
adc
xchg
fcompl
stc
pop
cltd
arpl
roll
cltd
pusha
push
sub
sbb
sub
aam
inc
test
sub
jge
inc
dec
sub
jle
and
mov
fisubrs
aaa
out
pop
xchg
out
ds
push
pop
fs
mov
js
dec
inc
push
and
mov
out
ret
stos
sub
cmp
stc
jbe
xchg
sub
leave
stc
fs
push
fsts
inc
fstp
and
out
add
xchg
ss
cmp
and
push
sub
inc
test
scas
or
sbb
ljmp
mov
sub
push
jnp
mov
push
sub
jp
push
fs
jbe
mov
fnclex
mov
shl
rcrl
lret
int3
pop
cli
pusha
sub
push
mov
sbbb
xchg
insb
pusha
push
les
mov
adc
xchg
pop
mov
pop
mov
sbbb
pusha
xchg
popf
sbb
or
scas
pop
dec
aas
pop
add
sub
sub
imul
mov
test
sub
test
sub
fldt
mov
cmpsb
cltd
xor
adc
test
sub
les
xchg
mov
push
cmp
lea
pop
push
sbb
stc
stos
add
mov
push
leave
or
orl
pop
sbb
cmp
mov
jnp
sub
xor
ret
xor
in
adc
add
xchg
dec
insl
xor
sbb
cmpsb
or
jae
out
loopne
xchg
inc
inc
mov
inc
repnz
jg
add
cmpsb
inc
loope
sahf
scas
imul
cmpsb
cmp
stos
shl
call
xchg
mov
mov
pop
out
push
gs
xor
add
scas
lock
clc
out
mov
cltd
jbe
jo
out
arpl
push
enter
sbb
sub
loop
ss
cmp
push
sbb
mov
or
jg
mov
aad
push
test
addr16
lock
lahf
cmpsl
sbb
inc
adc
jge
lock
push
sbb
stos
jmp
xchg
jl
shrl
mov
mov
fstl
sub
shll
mov
cmpsl
lahf
out
or
dec
mov
jle
sub
and
sbb
mov
rolb
inc
aas
mov
mov
add
jo
scas
popa
sbb
or
addr16
aaa
mov
fdiv
add
ret
out
adc
push
lock
out
mov
jge
or
jno
or
add
adc
shrb
cwtl
dec
enter
mov
cmp
div
cmp
add
cmp
std
cmp
xchg
mov
fsubrs
push
mov
mov
ret
jo
mov
and
pusha
jecxz
and
jecxz
jae
movsl
cli
jl
icebp
clc
es
imul
xor
pop
mov
and
dec
in
add
push
fisttps
std
mov
int3
push
sti
push
mov
dec
cmp
test
andb
jl
xor
leave
stos
ja
rorl
in
ljmp
jmp
cltd
jns
out
shrl
mov
rorb
sub
inc
lods
sbb
push
hlt
std
jmp
fnstcw
dec
push
mov
sub
lahf
lcall
lretw
scas
cmp
ja
movsb
pop
hlt
add
jbe
jae
adc
xchg
inc
imul
push
xchg
or
lods
call
jl
mov
cmp
jg
jecxz
mov
add
ljmp
or
rcr
stos
test
fmuls
lods
jnp
dec
adc
jge
xchg
cmpsl
sbb
iret
js
sbb
fdivr
mov
out
sub
jns
lods
mov
and
rcrl
sbb
mov
pusha
sub
faddl
lds
fstpl
shr
insl
flds
mov
xlat
mov
popf
mov
sbb
sbb
mov
xchg
ja
inc
cltd
jp
cmpsb
sbb
test
push
lcall
sub
mov
or
inc
mov
cmpsb
call
or
xor
or
mov
cmpsl
add
or
pop
cmp
sbb
hlt
outsl
es
push
pop
mov
mov
cmp
movsb
lods
repnz
enter
pop
es
pop
data16
nop
cmp
sub
test
int
inc
rcrb
sbbb
add
dec
pop
xor
bound
add
leave
imul
test
loope
sub
push
cmp
add
sub
mov
imul
xor
sarl
adcb
cmp
cmpsb
cmp
pusha
xchg
outsb
ret
js
out
call
mov
or
cmpsb
daa
and
pop
or
std
or
test
jp
inc
je
pop
jnp
icebp
leave
push
testl
shrl
jo
jbe
dec
leave
xorl
outsb
sbb
xchg
loop
sub
inc
test
out
test
add
fsubp
mov
cmpsl
notl
mov
stc
adc
xchg
cmpsl
pop
xor
aaa
in
aas
lock
mov
jns
jns
push
cli
fcomps
jmp
inc
or
mov
pop
in
sti
and
notb
rolb
pusha
inc
aaa
xrelease
or
cmpsb
push
fdivr
fsub
xchg
adc
push
popf
sub
push
pop
mov
pop
add
fisubrl
mov
jecxz
cmp
add
xor
icebp
pusha
adc
inc
mov
push
scas
ss
jo
nop
cmpsb
dec
addr16
pop
loope
mov
fidivs
cmpsb
inc
imul
loopne
inc
pop
lock
cmpsb
repnz
mov
popa
pop
jg
scas
add
sub
loopne
xor
push
pop
insb
cmp
lods
fdivrs
jbe
push
in
sbb
mov
lahf
jbe
out
or
sub
cmpsl
pop
mov
std
rcrb
outsl
rcrb
mov
stos
aas
sbb
fsubr
xor
cltd
stc
repz
xor
add
and
lcall
dec
stos
cli
sub
ret
mov
mov
xchg
xchg
lret
adc
adc
cltd
ss
jns
dec
mov
sub
xchg
lock
push
cmp
fcoms
jg
outsb
out
or
add
mov
imul
subb
cmpsb
out
mov
pop
jbe
shrl
in
add
mov
or
pop
sub
lods
inc
clc
loop
inc
push
gs
cmp
dec
or
mov
cltd
or
lret
fcoms
enter
sub
out
dec
add
out
sbb
stc
insl
sbb
lcall
mov
in
das
pop
movsb
mov
dec
mov
cmp
push
loop
or
mov
xchg
imul
add
sub
push
push
mov
dec
negl
enter
aam
cmpsb
cs
aad
mov
test
std
or
push
ljmp
push
clc
push
jnp
jns
add
icebp
scas
sbb
dec
adc
movb
aad
xchg
sbb
pop
sub
push
push
loop
cmp
mov
jbe
out
xchg
jbe
and
jle
sub
insb
popf
lahf
sub
cmpb
mov
mov
or
stos
arpl
xchg
ds
mov
lret
roll
lcall
xor
adc
or
mov
sub
js
lock
cmp
sbb
icebp
push
jae
or
bound
call
sbb
dec
xchg
sub
lods
lds
rcr
andb
dec
sbb
add
lds
divl
pop
out
sbb
cmpsb
dec
aas
stos
scas
or
test
fstl
xchg
cmp
or
lea
mov
jnp
scas
orl
cld
in
cmp
loopne
push
decb
or
stc
inc
lods
lea
icebp
jo
pop
push
sub
inc
or
mov
hlt
adc
mov
jge
jecxz
jmp
mov
rolb
in
test
jg
dec
dec
pop
in
sbb
jbe
das
or
xchg
int3
mov
icebp
sbb
call
inc
lahf
and
pop
add
rorb
fnstcw
lods
push
pushf
fdivl
lret
jmp
adc
int
shl
mov
les
ljmp
loope
fistpl
mov
in
cltd
addr16
cmp
scas
call
fldcw
test
shrl
aam
fldenv
xlat
xchg
lods
loope
xor
rcr
and
add
lret
mov
into
imul
cmp
pop
xchg
or
sbb
add
js
out
stos
push
ljmp
cwtl
jmp
lds
out
pushf
jle
lea
addr16
in
cmpsl
cmp
fsubrl
sbb
cli
cld
adc
and
pop
mov
xor
pop
mov
mov
clc
adc
sub
pop
sarl
and
pop
cmp
into
mov
sub
call
add
out
pop
sub
loop
xchg
mov
test
push
push
aas
dec
pop
mov
sbb
adc
jnp
sub
mov
ret
aas
sbb
sub
leave
and
mov
mov
mov
ud1
mov
jns
push
ret
arpl
lcall
mov
and
jnp
shll
xor
in
faddl
lock
imul
and
cltd
shll
ss
cltd
sub
sbb
ret
stos
arpl
out
cmp
lret
pop
pushf
ss
bound
xchg
fsubrs
leave
das
push
xor
faddl
in
sub
or
dec
xchg
xor
outsb
cmpsb
add
fidivrs
xchg
stc
aaa
shr
js
sahf
jo
repz
lcall
insb
push
push
adc
out
jmp
loopne
push
movsb
andb
and
dec
lret
pop
pop
and
dec
sub
cmp
adc
js
mov
jecxz
sarl
imul
lahf
push
sub
leave
adc
addr16
xchg
dec
inc
push
int
loop
ror
inc
fcmovu
mov
stos
out
das
add
leave
das
jbe
adc
cmp
lret
push
xor
je
sbb
add
int
mov
dec
jmpw
xchg
mov
outsl
insl
push
lcall
popf
xor
faddl
adc
push
push
pushw
jp
sahf
sbb
ja
out
add
lea
pop
add
lcall
test
lds
push
pop
test
pop
popf
inc
mov
push
add
stc
xor
xchg
fdivrs
and
or
lock
call
test
out
jmp
data16
int3
std
cmpsb
aas
xor
dec
pop
xor
dec
and
rorb
push
hlt
jp
xchg
lds
inc
daa
jmp
out
dec
into
push
stos
lock
es
sub
in
lods
js
shrl
push
sti
jnp
loop
es
add
add
inc
pop
call
je
out
sub
lock
enter
inc
movsb
mov
jp
cmpsb
adc
mov
sahf
push
pop
icebp
addb
jnp
js
hlt
fstpt
dec
insl
in
mov
repnz
imul
adc
das
test
enter
jnp,pn
and
ljmp
push
loope
in
in
out
jmp
lods
arpl
es
test
das
lea
pop
jg
or
inc
fmull
fcoml
fistpl
int3
mov
fldcw
pop
cld
scas
xor
jmp
aas
sub
rcrl
lcall
mov
ret
or
stos
int
insl
pop
int3
jo
gs
int3
cmp
pop
jl
inc
xchg
sbb
jns
push
stos
ret
push
push
aas
sbb
xchg
push
ss
repnz
imul
icebp
stos
out
aaa
out
fdivrl
and
mov
jne
pop
push
pop
adc
mov
out
lds
inc
fs
test
popf
je
sub
test
imul
jo
jns
es
mov
sbb
into
sub
xor
dec
mov
clc
add
test
call
mov
dec
add
fcomps
xor
sbb
roll
mov
jae
popf
mov
icebp
sbb
sahf
loop
jecxz
mov
es
xor
jno
stc
cld
xor
dec
jl
loopne
sub
subl
lods
std
mov
inc
rclb
enter
lock
or
lahf
sahf
xor
test
repnz
outsb
mov
movsb
imul
sti
dec
push
out
mov
or
lods
and
stos
fstpt
push
mov
outsl
cwtl
inc
pusha
sbb
rol
leave
lds
push
fsubs
push
mov
fsubr
xchg
pop
mov
out
rclb
mov
jbe
sub
loopne
adc
jno
and
out
mov
ds
cmp
enter
inc
or
mov
imul
jne
dec
xor
adc
test
xchg
fdivl
lret
cmp
or
xorl
lock
cmp
cmc
shl
imul
out
test
and
sbb
pushf
je
insl
adc
std
push
in
ret
loopne
or
iret
dec
add
lock
push
verw
cmp
nop
add
xchg
addl
movsb
or
mov
mov
jbe
fyl2xp1
mov
sbb
cmp
inc
std
data16
pop
lahf
mov
push
mov
xlat
adc
inc
dec
lahf
push
lret
shll
rcll
adc
pop
lahf
int3
stos
push
bound
and
cmp
cmpl
aas
and
add
push
mov
sahf
and
iret
pop
jp
mov
ficoms
lcall
insl
jo
dec
mov
push
cs
push
push
pop
lds
pop
enter
data16
negl
fwait
idivb
lods
dec
aaa
cli
pop
and
jbe
ret
ret
sti
pushf
mov
lods
xor
xchg
pop
icebp
or
add
cmp
xchg
push
ret
into
test
pop
add
nop
in
outsl
push
push
pop
arpl
sub
add
push
call
and
mov
cmp
push
dec
and
pop
sub
bound
cmp
pusha
fwait
dec
std
cmp
or
out
push
ss
cli
lods
rol
adc
in
xchg
push
out
ja
imul
sub
mov
call
movsl
pop
lahf
mov
sub
addr16
mov
js
in
xor
mov
inc
mov
push
xor
add
push
fnsave
out
mov
test
mov
pop
push
jecxz
cmpsb
int3
sbb
mov
pusha
pop
add
leave
out
fyl2x
loop
inc
sub
out
lods
shlb
ficompl
shr
insb
push
sub
nop
jbe
pop
std
neg
cvttps2pi
jmp
sarl
outsl
inc
std
fiaddl
cmp
aad
dec
jbe
nop
ror
sub
mov
rcrl
cwtl
push
push
or
movsb
dec
push
jg
and
fwait
roll
push
fs
inc
pop
cltd
loopne
and
mov
cmp
jo
xchg
xchg
cwtl
call
and
mov
fmuls
and
push
mov
cmpsb
mov
add
fists
sub
adc
out
pop
nop
jnp
jb
or
shl
mov
mov
jg
push
inc
test
lret
or
mov
dec
sbb
aam
scas
fistpl
bound
jl
lea
leave
xlat
lahf
jns
xlat
sub
test
hlt
lcall
cltd
adc
daa
aam
mov
adc
xor
jmp
in
leave
cs
xchg
lea
ret
fcom
cmpsb
pop
xchg
hlt
sub
mov
sbb
mov
mov
loop
pop
push
fsubr
pop
pop
clc
enter
dec
jbe
dec
jle
and
int
iret
adc
add
call
dec
sub
push
and
adc
dec
cmp
mov
in
scas
inc
xchg
cmp
dec
push
xchg
movsb
jmp
or
aaa
stc
jb
js
push
andb
push
das
adc
and
imul
sbb
sub
pop
adc
rcll
subl
adc
fiaddl
aas
jmp
mov
cli
xchg
xchg
add
mov
addl
mov
addps
push
enter
js
dec
cmp
cwtl
dec
je
lea
das
mov
clc
arpl
or
sub
fmuls
mov
xlat
mov
inc
movsb
and
or
pop
shl
popf
sub
and
jg
sub
repz
dec
adc
lcall
test
cmpsb
mov
cmp
dec
and
imul
les
mov
pop
out
sub
cmp
mov
leave
sub
loope
xchg
push
cwtl
inc
arpl
cmc
dec
in
sub
adcl
and
loop
test
mov
sub
cltd
repnz
insb
add
call
mov
insl
in
aaa
subb
push
jge
insl
sub
xchg
lds
add
mov
sub
insb
mov
pushf
lea
sub
fnstsw
dec
lret
push
cli
jbe
movsb
xor
inc
cltd
xor
mov
pusha
xor
push
inc
inc
and
ss
in
inc
addr16
popf
dec
out
cld
cmp
sbb
push
fidivrs
cmp
mov
ret
cmp
push
enter
andl
jmp
popf
pop
enter
test
cmp
sbb
aad
cmp
ljmp
lret
sub
and
lea
mov
cmpsb
mov
loopne
xor
adc
push
push
pop
dec
fsts
aaa
ficompl
imul
jmp
pop
rcrb
fmuls
lock
das
pop
jl
cmp
enter
call
cmp
xlat
lods
push
stc
push
sub
mov
jge
cli
loop
fcmove
movl
jge
imull
stc
jo
cmp
push
pop
addr16
test
xchg
loope
push
push
push
xchg
cmc
xchg
add
mov
cli
lcall
sub
xchg
sbb
mov
mov
mov
xchg
outsl
repnz
addr16
int
ret
sbb
cmpsb
test
cmp
mov
xchg
push
int3
pop
psllq
shrb
js
push
add
pusha
cmpsb
decl
fistl
mov
sub
jbe
fsubl
or
jo
jnp
enter
xadd
insl
shrl
fst
mov
fisttps
insb
add
leave
jmp
sti
push
dec
dec
cmp
aam
ja
sub
addr16
xlat
cmpsl
loope
insl
push
shrb
leave
cmp
push
fistpll
leave
jno
fdivrp
dec
popa
lahf
movsb
cmpsb
aas
stos
push
les
arpl
orl
jbe
fdivrl
stos
jnp
out
dec
pop
cmp
or
pop
lcall
mov
rcrl
inc
dec
movsb
test
adcl
or
mov
adc
inc
xchg
outsl
repnz
sub
cmp
adc
sub
icebp
fs
mov
lock
dec
lcall
jge
movl
jo
push
mov
fildl
iret
lds
push
sarl
test
aad
jo
stos
jo
idivl
aam
add
or
insb
ret
xor
jns
mov
in
ljmp
mov
jno
sub
mov
mov
dec
data16
inc
mov
sbb
pushf
adc
pop
mov
dec
or
pop
ljmp
cli
jmp
mov
daa
cmp
loope
push
lea
xchg
ja
add
adc
add
lea
or
nop
mov
pusha
inc
mov
outsl
test
mov
aam
daa
sahf
lock
cmpsb
fdivp
rorb
popf
pop
inc
jle
pop
dec
adc
call
cmpb
lods
daa
aas
adc
and
lahf
dec
dec
push
popf
loope
cltd
fcmovne
stc
out
cmp
enter
mov
jl
pop
inc
imul
cmp
cmp
jge
adc
adc
xchg
lcall
dec
sbb
xor
jb
xor
pushf
fcoms
stos
cld
sbb
mov
imul
data16
sub
adc
fisubrs
push
cmp
popa
stos
inc
sub
cmpsb
ljmp
cwtl
out
jbe
cli
mov
fsubrs
jne
outsb
pop
inc
cs
xchg
push
movsb
fdivrs
mov
jmp
ja
mov
shlb
pop
mov
cs
sarl
je
mov
lahf
jle
fsts
cmp
and
dec
iret
jns
jmp
jbe
inc
adc
dec
les
cmp
jge
scas
or
mov
insl
and
push
dec
mov
sbb
out
leave
inc
mov
mov
adc
int3
cmpsb
aas
inc
mov
out
sbb
inc
out
addr16
xchg
mov
add
inc
pusha
leave
mov
mov
outsl
mov
push
pushl
call
sbb
or
outsl
xchg
inc
lahf
cwtl
in
pop
or
push
shll
push
test
jnp
pmaxsw
cmp
or
test
sub
das
mov
repnz
push
popf
and
leave
adc
out
cld
js
jge
or
test
sbb
dec
movsb
pop
mov
pop
stos
mov
pmaddwd
lods
xchg
pop
aaa
insb
sub
sub
outsl
cmpsl
loopne
pop
pop
push
push
pusha
ficoml
mov
loop
dec
subb
and
inc
movsb
pop
out
push
sub
pop
test
pop
sub
loope
add
pop
mov
push
fstps
ds
jp
ss
fsubl
pop
cmp
rolb
xchg
cmpsl
inc
fisubrl
cmp
sub
test
sub
mov
dec
adc
sub
sub
push
sub
fnsaves
call
fisubs
test
sub
sub
shll
pop
cmc
sub
ds
mov
stc
test
mov
mov
fisttpl
push
test
lcall
xchg
mov
and
xor
push
in
inc
and
sub
dec
cmp
or
jbe
js
jecxz
jo
or
sub
mov
in
cmpsb
mov
scas
loopne
dec
sbb
in
and
fbld
movsl
test
and
cmp
mov
dec
test
push
lret
mov
inc
pop
pop
sarb
clc
shlb
jp
push
pop
int3
inc
dec
stos
fidivrs
and
jge
in
lods
into
jbe
dec
jo
mov
pop
shll
sbb
pop
cmpsb
movsb
dec
or
pop
sub
pusha
sub
pop
lret
fildl
xchg
pop
pop
adcl
xor
push
mov
and
test
or
lock
fcompl
call
repnz
pop
test
decb
notl
adc
and
lret
pop
xor
lods
xor
and
push
lret
call
test
push
pop
push
sbb
mov
inc
or
stos
lret
fisubrl
pop
sub
push
movsl
and
pusha
fxtract
out
sub
pop
mov
adc
xchg
push
cmpsb
hlt
adc
add
cmp
cmpsb
push
push
iret
or
xor
rclb
push
ja
pop
test
cmpsl
movsl
pop
std
stos
int3
inc
cmc
xchg
bound
ja
call
fcmove
movsb
pop
lea
pop
xchg
stc
pop
mov
mov
ret
sub
rcl
mulb
adc
lcall
push
pop
push
pop
sbb
mull
and
scas
sub
sub
jge
push
push
fcompl
lods
rolb
and
mov
jnp
sub
je
jl
arpl
sub
jp
test
stc
pop
pop
pop
pop
push
outsl
sub
jmp
mov
fwait
mov
fbld
fs
pop
cmpsb
pop
dec
cmpsb
mov
mov
les
mov
adc
scas
das
or
leave
js
mov
sub
mov
test
stos
mov
scas
pop
sub
stos
fisttpl
lods
fs
imul
ljmp
xlat
and
enter
and
mov
pop
fldt
pop
movsl
mov
push
mov
out
aam
loope
ljmp
pop
imul
outsb
sub
mov
test
jle
mov
insb
sbb
jg
test
fbld
test
xchg
test
addr16
imul
jmp
mov
pop
mov
in
in
lds
out
pop
fistl
mov
rcrl
lret
jge
sti
pop
add
pop
gs
enter
dec
test
loope
and
in
loopne
push
push
rcr
push
fistpl
fsubr
mov
ficoml
xchg
xchg
pop
in
out
push
sbb
lods
pop
ss
pop
or
push
fstps
fisttpl
mov
xchg
push
pop
cmpsb
rcrl
lret
jns
pushf
stos
xor
stc
ljmp
or
dec
pop
fsubrp
frstor
fs
fcmovbe
push
loopne
pusha
pop
dec
cmp
xor
cmpsl
push
test
lcall
aaa
testb
jl
mov
push
mov
or
mov
sub
and
in
js
push
push
dec
cmp
mov
xchg
pop
pusha
jb
daa
clc
xor
int3
fucomip
mov
xor
dec
or
inc
push
add
faddl
imul
sbb
mov
clc
cwtl
subb
adc
mov
insb
cmpsb
or
push
xchg
add
mov
test
fldt
jmp
dec
outsb
sbb
mov
mov
test
arpl
xchg
pop
aam
repz
add
cltd
push
mov
imul
shlb
and
and
test
cmpsb
inc
and
add
mov
negb
inc
stc
or
pop
xor
out
int3
add
jg
stos
aad
dec
out
pusha
mov
out
lea
inc
scas
aas
push
sub
outsl
and
dec
fimull
mov
stos
xlat
cli
out
xor
sub
mov
pop
cmp
aad
xor
dec
pop
sub
dec
fldenv
fnstsw
cld
sub
fisubl
fwait
test
movsb
into
lods
mov
fisubrl
mov
test
insl
cmpsl
int3
jmp
sub
fldt
mov
mov
int3
xor
mov
or
test
je
sbb
gs
pop
sahf
and
movsl
add
imul
out
xchg
stos
dec
inc
sub
out
es
push
aam
aad
mov
jmp
scas
pop
add
es
and
and
out
mov
and
fsts
repz
sub
mov
scas
aaa
dec
pusha
notb
nop
or
pop
lods
xlat
jle
jbe
mov
add
xchg
stc
jbe
or
arpl
movsl
popa
sub
fstpt
test
push
ljmp
leave
pop
popf
pop
adc
aas
stc
mov
test
add
jl
adc
es
stc
xorl
pop
jp
test
test
jp
mov
dec
fsub
xor
mov
mov
movsl
push
or
int3
ficoml
push
mov
cmpsb
imull
stc
decl
add
mov
lock
add
fbstp
fimull
scas
stos
test
adc
fldenv
stos
add
cmp
sub
enter
test
dec
test
inc
add
jnp
imul
leave
aad
call
mov
lock
add
pop
mov
out
xor
lahf
aam
scas
cmpsl
imul
pop
inc
test
pop
jns
inc
jecxz
stc
clc
scas
sub
mov
lcall
outsb
shrl
xchg
sub
in
les
mov
and
and
push
fdivrl
test
test
mov
and
fnstenv
pop
xor
or
stc
hlt
push
outsb
jge
xchg
pop
push
or
aam
jns
cli
data16
stc
fcmovu
pop
repz
sbb
inc
sub
test
pop
cld
nop
cli
outsb
ljmp
fsubr
pop
mov
jnp
sbb
mov
imul
inc
fiaddl
mov
pop
in
or
ja
in
push
ret
in
pop
inc
dec
stos
ja
push
outsl
cmp
sub
stos
lock
or
ss
jbe
add
push
adcb
in
rcrb
lahf
mov
aaa
nop
faddl
cmpsb
or
mov
cmp
sub
inc
aaa
dec
xor
std
mov
mov
loopne
fnop
dec
dec
inc
xchg
out
mov
mov
in
sbb
jle
js
push
jle
std
fldl
sbb
jmp
std
pop
or
sub
test
sub
jne
push
pop
rcrb
call
aam
int
push
les
xchg
pusha
push
mov
scas
test
jmp
lea
ja
movsb
addr16
fcomps
cs
ljmp
out
inc
mov
sbb
dec
cli
xchg
or
mov
lds
mov
fisttpll
cmp
or
ja
push
insl
enter
shlb
mov
mov
sti
sub
aam
xchg
pop
int3
jns
popa
mov
pop
aad
dec
fidivl
dec
ret
int3
mov
js
dec
stos
ss
push
test
adc
or
xor
or
sub
aas
mov
fucomip
pop
sub
sub
mov
pop
lods
mov
ja
leave
mov
mov
mov
stos
jo
pop
push
mov
lret
mov
jge
inc
sbb
test
push
aaa
pop
dec
xor
lcall
fcmove
aaa
imul
cmp
sbb
jl
gs
push
es
fldl
jo,pt
cmp
mov
gs
push
mov
or
sbb
push
push
cmp
xor
mov
iret
push
ret
mov
add
in
jle
imul
ljmp
subb
in
outsb
mov
cmp
cmp
dec
sti
xchg
mov
mov
insb
xchg
sub
scas
jl
sbb
enter
rcrb
out
add
test
fidivs
loop
das
adcl
ja
int
adc
dec
ja
xchg
lahf
loopne
mov
cli
scas
xchg
sub
xchg
in
es
sar
push
sub
int
mov
fiaddl
call
enter
js
out
sub
cmp
pushf
jns
enter
call
cmpsb
enter
test
into
jmp
enter
lock
add
in
jbe
xor
xchg
jl
push
mov
mov
cmpsb
or
ljmp
sub
push
ljmp
enter
sbb
cmpsb
add
shrb
cwtl
mov
add
mov
int3
test
cmp
imul
sub
in
cmp
int
add
out
scas
sti
and
mov
fldenv
jo
jmp
sub
out
enter
or
pop
arpl
adc
rclb
adc
es
test
lods
lds
sbb
adc
mov
fs
mov
aaa
fwait
jmp
cltd
pop
enter
sub
mov
mov
mov
push
scas
ds
shrl
pop
imul
inc
int3
inc
out
sub
repz
or
cwtl
inc
and
cmpsl
inc
sahf
mov
mov
ret
jbe
cmc
and
or
cmp
push
ss
into
xchg
add
mov
lods
or
lods
push
popa
lods
pop
xchg
ja
pop
cltd
and
out
pop
call
dec
jo
mov
push
cmpsb
lcall
js
mov
mov
js
sbb
or
arpl
loopne
imul
ss
push
pop
pop
pop
push
push
jo
adc
mov
sbb
dec
push
test
push
and
int
out
in
push
mov
push
mov
loop
or
lods
std
sub
stos
cmpsb
sbb
push
es
xor
sub
pop
icebp
push
jo
cmc
mov
sub
dec
dec
jg
adcb
add
mov
sti
std
fisubs
nop
ds
mov
xchg
imul
cmp
mov
sub
xchg
fsubs
mov
adc
ds
mov
ja
shrl
enter
push
hlt
pop
filds
push
mov
cmp
fldl
cmp
or
idivb
imul
test
mov
jbe
push
inc
popa
sub
aad
out
mov
notb
popa
dec
jge
xchg
cltd
jl
xchg
push
mov
push
mov
movsb
dec
lcall
mov
into
stos
rorb
fisubrs
cmp
out
lret
leave
test
inc
pop
jmp
stos
shlb
enter
mov
or
scas
adc
or
sub
push
stc
int
addl
out
pusha
std
bound
cmc
nop
adc
pop
cmpsb
adc
pop
inc
add
rcr
jmp
icebp
sub
cli
pushf
mov
inc
pop
or
cmp
stos
pop
ljmp
call
mov
sub
push
sbb
mov
fsubrl
cmp
xchg
in
xor
xor
in
in
iret
stos
gs
into
aas
insb
push
jl
data16
inc
fwait
in
repnz
stc
xchg
fdivp
jecxz
push
mov
sbb
sub
cmc
out
xchg
lret
fisttpl
sub
xchg
cli
xchg
lret
outsl
cli
pop
pushf
sbb
in
cs
addr16
test
cwtl
int3
cmp
loop
fmuls
enter
inc
jl
push
xchg
ljmp
jmp
in
xchg
in
pop
sti
jne
inc
icebp
out
loope
imul
push
frstor
and
std
stc
jno
loopne
addr16
mov
fstps
cmp
sub
iret
dec
jge
sub
xchg
mov
xchg
sub
pop
movsl
sbb
or
dec
es
outsb
setg
push
lods
xchg
repnz
stos
lcall
enter
xchg
les
jmp
test
int
es
lahf
arpl
call
pushf
int3
pop
sub
jnp
hlt
cmp
cld
cmp
cmp
cld
sub
xor
and
cs
lods
and
stos
and
stos
and
sub
cmpsl
sbb
movsb
xchg
dec
sbb
repnz
dec
sbb
cs
fdiv
andb
and
push
cmp
pop
pop
int
leave
mov
rclb
stc
dec
cs
and
sub
int3
sti
and
push
xchg
push
cmp
sub
dec
cwtl
fwait
or
call
inc
mov
cmp
outsl
enter
and
stos
pop
cwtl
loopne
lahf
or
add
and
inc
shll
add
sti
movsb
movsb
sub
jp
dec
xor
xchg
sub
inc
enter
add
mov
lcall
movsb
enter
sbb
mov
xor
dec
adc
insb
ret
leave
push
sub
aad
hlt
mov
mov
es
or
pop
xor
iret
test
push
cmp
in
pop
mov
sub
xor
into
mov
cmp
inc
adc
push
dec
sub
or
dec
mov
or
mov
cmc
cmpsl
hlt
aad
push
fstpl
leave
mov
mov
imul
loop
std
mov
lret
or
fcmovnbe
cli
sbb
cmp
xor
ret
push
fldenv
call
add
mov
in
cli
and
add
cmpsl
lock
ja
jb
sbb
pushf
test
out
out
mov
pop
jb
cmp
sbb
roll
xchg
sbb
push
sub
push
cmpsb
cmp
movl
pop
cmp
jl
div
clc
aam
scas
out
pop
stos
sub
inc
cmp
js
or
mov
es
sbb
cmp
jnp
mov
lcall
mov
dec
andl
out
pop
out
pop
imul
mov
jno
les
std
cmp
jae
call
pop
dec
rclb
sub
mov
in
xchg
dec
mov
test
lahf
lods
clc
ljmp
call
mov
decb
push
or
jae
ss
push
pop
push
leave
aaa
call
incl
or
cmp
lock
mov
inc
outsb
pop
popa
out
dec
inc
mov
in
adcb
jmp
xchg
push
or
jl
out
int3
mov
mov
dec
cmpb
imul
out
or
addr16
scas
push
and
fdivr
xchg
test
push
jb
pop
adcl
or
loopne
jnp
mov
out
cmp
mov
imul
xor
outsl
push
mov
call
sub
stc
lea
push
scas
xor
adc
ret
int3
adc
xchg
and
cwtl
notb
enter
addb
andb
das
mov
sbb
sbb
scas
daa
movsl
sub
enter
adc
into
lret
test
sahf
in
aas
stos
jbe
push
dec
negl
lret
adc
movsl
sub
into
jo
inc
xor
ljmp
std
sti
ret
cmp
addr16
data16
sub
pop
cmp
mov
vmulpd
inc
push
xor
jmp
pop
dec
out
mov
sbb
rol
in
mov
je
shr
adcl
jbe
test
pop
mov
lcall
outsl
les
mov
movsl
cmp
or
out
or
fucomip
loopne
loopne
rolb
jp
gs
dec
clc
inc
add
lods
jo
insl
push
test
and
mov
sbbl
nop
pop
sub
scas
das
fcompl
jl
dec
lret
loopne
popf
data16
jmp
sub
sub
push
mov
fstps
mov
pop
sub
in
sbb
cmpsb
xchg
and
sub
push
cmc
mov
fucomi
sub
mov
mov
sub
dec
pop
jecxz
sub
fimuls
test
ret
rcrb
pop
arpl
jns
push
sarl
add
es
loope
shrb
or
mov
sub
adc
add
movsb
ja
add
repnz
scas
pop
addr16
push
adc
sub
pop
test
cmc
or
test
out
cmp
add
push
pop
insb
push
push
stc
in
pop
neg
dec
bound
mov
fisttps
loop
mov
out
nop
pop
movsl
fdivl
fisubrs
jbe
fs
sbb
sub
das
pop
sub
outsb
movsb
pop
mov
fldt
mov
ficompl
mov
sub
fxch
rcrl
or
sub
cli
jbe
mov
clc
xlat
lret
adc
adc
cs
mov
xor
push
lret
adc
jb
pop
xchg
or
sub
fsts
pop
mov
mov
out
ds
pop
ljmp
xor
fsubl
sub
and
push
vmulsd
xchg
fucomp
and
sub
dec
fildl
std
arpl
idivl
ret
cmp
sub
fs
pop
sbb
mov
mov
add
cli
icebp
cmpsb
sub
cltd
fisubrs
andb
aad
xchg
shr
in
sbb
sub
arpl
in
popf
push
push
bound
nop
fnstenv
xor
push
and
or
fstp
push
mov
into
push
pop
repnz
cmp
xor
sub
pusha
aas
sub
int3
fisubrs
fldt
test
out
mov
cltd
pop
pop
jo
lods
sbb
fwait
lret
jl
pop
insb
adc
sub
mov
test
add
adc
pop
inc
and
stos
cmp
rcrb
cmp
push
fsubrl
mov
sub
stos
rcr
xchg
int3
push
push
cmp
xchg
movsl
add
lods
pop
int
sub
add
and
aas
andb
push
loopne
stc
dec
pusha
xchg
lret
sbb
inc
cwtl
and
js
mov
jo
jge
sbb
add
mov
pop
lock
mov
xchg
jmp
jmp
cs
jne
loope
cmpsl
cs
lret
mov
push
sub
test
js
out
mov
out
push
cmp
cltd
lahf
cmp
out
testb
mov
inc
dec
xlat
stos
ja
cmpsb
out
jle
mov
xor
and
addr16
ret
dec
addr16
test
dec
push
stos
out
insl
ficoml
cmp
imul
pop
imul
sbb
pop
jg
dec
test
sub
push
mov
lods
ss
xchg
ja
mov
add
cmp
mov
outsb
int3
mov
mov
sbb
lods
test
mov
push
incb
orl
jle
imul
mov
pop
dec
cli
mov
test
cmp
movq
cbtw
cmpsl
sti
adc
push
in
mov
aad
push
les
mov
scas
enter
clc
outsb
adc
arpl
lcall
test
inc
sub
sbb
lea
add
fiadds
jge
mov
push
push
xchg
lea
xchg
dec
mov
and
lods
dec
rorb
jmp
inc
inc
int
dec
shlb
testl
and
iret
in
inc
xchg
fs
in
dec
push
ss
andl
leave
scas
mov
aas
mov
mov
subb
scas
out
sbb
lea
loop
loopne
jecxz
pop
jle
out
cld
fstp
fld
leave
sub
js
movsb
pop
and
lahf
out
pop
xchg
pushf
fadd
lods
add
addr16
test
out
lock
jo
cmp
movsl
std
fcmovb
cmpsb
in
dec
cmpsb
sbb
jmp
lock
mov
lahf
xchg
in
mov
cmpb
cs
inc
push
mov
mov
jo
jp
add
sbb
arpl
inc
jp
dec
fs
out
cmpsl
sub
fcompl
mov
sub
mov
mov
jnp
pop
xor
dec
dec
mov
js
sarb
xor
pop
mov
push
icebp
inc
mov
jg
aam
mov
mov
sub
clc
xor
jmp
in
bound
fsubrl
pop
mov
leave
sub
int
inc
jp
jge
lea
xor
aad
call
test
sub
scas
push
mov
sbb
fdivr
cli
arpl
jmp
in
cmp
and
movsb
sbb
mov
mov
mov
cmp
out
idivb
xchg
xchg
and
sahf
daa
out
jl
in
cmpsl
outsl
dec
mov
and
sub
pop
dec
es
sub
push
fwait
insl
pop
push
arpl
ds
montmul
cmpsb
inc
mov
inc
sub
ss
dec
pop
push
jne
cwtl
jbe
inc
mov
out
fisttpl
dec
sub
xchg
mov
lret
jg
test
lea
cmpsl
mov
or
xorb
mov
imul
dec
out
pop
inc
adc
cmp
sub
add
jg
lcall
fcom
xchg
daa
jge
cmc
aam
mov
ljmp
popf
fisttps
arpl
cmp
or
fwait
mov
call
loop
stos
test
and
and
lds
arpl
in
insb
or
adc
std
in
lret
mov
xor
std
test
dec
adc
std
fisttpll
sub
hlt
fs
pop
push
or
fucomp
dec
ss
addr16
and
mov
hlt
cmp
jl
das
sbb
test
mov
lret
adc
int
rcll
jns
adc
adc
cwtl
push
mov
jbe
pop
sbb
mov
ds
ret
adc
mov
fwait
icebp
jne
and
movhps
mov
das
cmp
fisubl
lea
jns
lods
scas
mov
pop
int
jecxz
mov
int3
stc
lock
fwait
mov
gs
sahf
xor
push
sar
std
scas
push
push
pop
pop
mov
pop
xchg
iret
cmp
inc
lret
sub
cmp
mov
or
stc
outsl
mov
imul
mov
and
mov
pop
xor
cmpsl
cld
xorl
aam
sub
mov
ficomps
loopne
adc
leave
lret
test
les
push
movsb
dec
stos
cli
jge
lret
jmp
cltd
xchg
cs
lahf
rcrb
bound
jns
or
or
mov
lahf
mov
jo
pop
pop
xchg
push
and
cmp
fmul
pop
cmpsb
popa
aad
sbbb
mov
xchg
das
push
pushf
in
or
sub
aam
cmovge
aam
mov
pop
stos
xor
dec
inc
jp
adc
push
lea
imul
nop
sbb
jne
jne
pop
or
or
imul
stos
push
popf
addr16
in
cmpsb
cmc
leave
lock
cmpsl
sar
inc
enter
jmp
pop
jnp
stos
xchg
js
iret
outsl
push
dec
mov
aad
sub
lds
pop
je
out
clc
lahf
lea
sub
inc
lret
fs
mov
leave
mov
lock
sbbb
pop
inc
pop
mov
mov
jp
jmp
pushf
das
inc
pop
or
in
sub
mov
mov
dec
nop
cmp
rorl
mov
in
or
cmc
mov
adc
addr16
int3
sub
sbb
or
fnstsw
pusha
stos
ljmp
jg
or
and
in
int3
inc
cmpsb
cwtl
jb
out
sub
jo
in
int
loopne
lock
out
mov
fsub
lahf
add
call
adc
icebp
pop
mov
xchg
dec
arpl
cwtl
jo
sub
fs
pop
fsubr
xchg
sti
lret
repz
sub
sarl
cld
mov
fldcw
sub
stos
scas
ljmp
sub
dec
shl
ljmp
xchg
pop
aam
scas
mov
lret
pop
hlt
scas
test
mov
or
mov
adc
in
test
push
bound
and
jae
and
sbb
push
lods
dec
mov
lds
cmp
or
arpl
stc
cmp
add
jnp
push
fmuls
cmp
cmpsl
in
daa
push
or
cmpsb
cmp
pop
repnz
push
pusha
mov
test
mov
dec
outsl
push
sub
jmp
dec
and
sub
dec
ljmp
sub
and
pop
js
mov
cltd
cmp
xchg
inc
insb
jo
jmp
push
mov
jns
push
mov
jle
stos
mov
mov
call
add
mov
xor
int3
push
inc
sbb
sub
xchg
scas
pusha
out
dec
cltd
lock
cmpsb
or
sbb
inc
enter
mov
lahf
test
movb
dec
xor
call
mov
dec
cli
out
data16
outsl
pop
inc
mov
add
ljmp
enter
add
jl
pop
mov
lret
ljmp
dec
push
inc
ljmp
int3
popa
lods
jle
mov
mov
test
cmp
lcall
jo
pop
pop
in
fwait
bnd
int
test
out
dec
push
inc
shll
lods
shl
mov
loop
bnd
mov
mov
push
mov
js
in
scas
sub
arpl
insb
bound
mov
xchg
add
sbbb
ficompl
mov
cmp
leave
rolb
adc
in
out
xchg
lcall
mov
mov
or
stc
lds
in
pop
mov
subb
pop
sbb
sub
jmp
sbb
stos
repz
lcall
cmp
adc
inc
in
call
cmp
mov
into
repnz
loop
and
test
lods
out
and
lahf
cmp
ret
nop
cmp
mov
sub
pop
ljmp
ja
enter
es
xchg
and
mov
ja
xor
stos
pop
xchg
dec
test
aad
and
xchg
mov
test
mov
fistpll
jl
leave
test
pop
jo
test
mov
lcall
incl
lret
fisubrl
into
lahf
mov
sub
mov
pop
cli
pushf
int
xor
jo
ret
xchg
pop
mov
xor
xchg
icebp
fbstp
call
xchg
outsl
mov
out
nop
sbb
popf
push
aam
sbb
repz
bound
pop
push
xor
add
jb
mov
shrb
ljmp
and
divl
mov
call
lret
inc
insb
mov
sub
jge
lods
clc
sti
push
lock
loopne
fs
jno
adc
push
psllq
jg
scas
fwait
addr16
cld
jp
call
popf
rcrl
jo
ror
test
add
filds
sti
scas
es
mov
jecxz
cli
push
js
imul
dec
and
dec
xchg
jo
imul
adc
jmp
pop
mov
lock
sub
push
cmp
adc
imul
xor
les
js
push
sub
xlat
inc
ljmp
int3
mov
jbe
xchg
fiadds
jnp
repnz
xchg
inc
data16
in
fwait
dec
addr16
add
cmp
or
fsincos
and
cmp
or
je
dec
jecxz
push
repz
pop
dec
sbb
inc
lret
push
ret
fdiv
je
push
clc
xchg
inc
lahf
cmpsb
movsb
test
jge
bound
shll
pop
adc
adc
lock
jmp
sbb
dec
xchg
pop
pop
out
inc
insl
pop
ror
jmp
test
lret
in
pop
call
insl
dec
cmp
cmp
lods
and
sbb
mov
stc
das
cwtl
rcrl
test
xchg
xor
jecxz
sbb
fsubl
cli
lcall
int
test
mov
das
lahf
cmpb
push
sbb
dec
sbb
mov
loopne
and
inc
movsb
rcr
lds
ljmp
aaa
xchg
and
jle
sub
inc
and
out
mov
pop
or
pop
and
fmull
das
cmpsb
loope
shlb
insb
pushf
inc
mov
mov
push
inc
dec
push
movsb
adc
aam
mov
cli
mov
mov
bound
jbe
lcall
sub
idivb
jge
aaa
pop
loope
in
pop
jmp
sub
loop
sub
imul
enter
call
sub
repz
sub
mov
jo
mov
call
mov
sub
jge
push
in
dec
flds
jmp
das
test
cmp
pop
inc
pop
sbb
shrl
js
sub
xchg
and
leave
lock
gs
xchg
jg
shrb
adc
pop
movsb
xchg
jno
test
jne
jmp
dec
pop
cmp
mov
cmp
cmpsb
jmp
jae
push
and
xor
lahf
fnstcw
ss
push
mov
xlat
icebp
les
pushf
je
dec
fdivs
pop
sbb
lret
adc
jp
ret
outsb
mov
popa
jns
in
imul
jl
xchg
repz
insl
stos
faddl
mov
mov
lcall
sub
test
aaa
repz
sub
lods
aam
and
mov
outsl
enter
mov
sub
in
sbb
jmp
or
cld
and
pop
mov
mov
aaa
insb
mov
mov
cld
push
dec
test
call
mov
stc
sbb
test
sbb
jbe
jnp
in
mov
cli
mov
enter
fs
imull
in
xchg
out
xchg
ljmp
xchg
out
pop
mov
cs
xchg
inc
sub
out
xor
adcl
mov
imul
scas
cmp
fwait
dec
cmp
inc
xchg
inc
movsb
inc
lock
sub
push
scas
cmp
popa
test
mov
jmp
inc
inc
fsubs
cmp
xor
scas
lods
shrl
cld
call
sti
and
adc
mov
ljmp
jg
enter
pop
aas
sbbb
pusha
ficompl
mov
mov
pop
out
arpl
je
mov
out
imul
orb
pusha
or
and
push
lahf
lcall
fsubrs
push
mov
xor
mov
xor
adc
and
bound
int3
shll
out
jl
shl
and
fldcw
push
shll
and
push
es
in
bound
fidivrs
adcl
pop
push
mov
nop
mov
int3
dec
or
out
mov
pop
pop
sub
int
cli
add
xor
cmp
cmpsb
push
xchg
xchg
jbe
jno
leave
les
cmp
fnstenv
sbb
jne
cpuid
scas
out
adc
pop
shlb
mov
cmpsl
test
cmpsl
mov
mov
mov
adc
sub
dec
cmpsb
iret
mov
xor
sub
jmp
test
dec
inc
out
add
push
es
sbb
xchg
or
jb
imul
lods
cld
out
nop
scas
in
ror
dec
mulb
popl
jae
pop
fxch
out
shrb
mov
or
js
pop
lods
in
add
js
mov
xchg
adc
jbe
cwtl
nop
sub
and
dec
xlat
pop
or
inc
or
mov
push
test
inc
fsubp
in
dec
scas
movsb
shr
xor
mov
aaa
mov
movsl
jno
stos
cmpsb
popa
sub
dec
mov
cmp
lock
pop
inc
mov
and
or
shr
pop
aad
ja
pop
stos
pop
mov
fwait
ljmp
fninit
in
icebp
mov
sub
outsb
or
leave
ljmp
out
push
popf
enter
outsl
call
mov
sub
cmp
sub
push
mov
pop
push
jmp
scas
rorb
test
jbe
adc
add
sbb
in
pop
pop
repnz
mov
push
icebp
or
push
jg
pop
cld
ds
inc
shr
mov
cmp
enter
aaa
pop
sbb
clc
sbb
nop
in
loop
js
mov
aad
pop
int
pop
stos
cld
sub
jmp
cli
cli
dec
jge
int
jae
lds
popf
test
in
add
out
or
cltd
xchg
scas
stc
jo
imul
xor
xlat
cmp
es
xor
push
push
cmpsl
sbb
mov
int3
mov
loopne
fdivs
push
cltd
push
in
add
mov
push
mov
arpl
mov
loopne
jmp
std
loopne
mov
jo
inc
inc
test
sub
xlat
add
scas
push
iret
scas
leave
inc
push
jle
jmp
and
notb
leave
jo
jmp
cltd
outsl
xchg
iret
sub
push
cmp
pop
pop
imul
scas
cmp
es
xchg
out
mov
adc
or
fisubrl
jmp
pop
scas
stc
loope
repnz
sti
xchg
jns
dec
adc
and
pushf
sub
and
cld
fnstcw
test
loope
rcl
inc
leave
xor
pushf
pop
fwait
lds
sahf
out
call
leave
test
mov
sub
daa
sub
imul
add
xor
test
dec
insb
lahf
outsl
sbbb
sbb
push
leave
shrb
int
es
ja
out
mov
popa
add
xchg
out
std
sar
cmpsl
xchg
mov
mov
in
ss
ljmp
stos
jnp
cmp
sub
push
fcmove
cmp
sub
push
int
out
push
aam
and
jmp
dec
cwtl
jbe
scas
lret
popf
fsubs
inc
jae
sti
xor
addr16
push
inc
notb
cmp
lea
mov
movsb
and
out
sub
fnsave
test
nop
out
pop
sub
ret
les
test
cli
sbb
jl
cmc
pop
addr16
ljmp
pmaxub
sahf
inc
les
pop
push
jecxz
enter
push
dec
call
jb
fsubrl
fs
loopne
pop
sub
cmc
ficomps
jg
stos
pop
scas
push
dec
enter
loop
sub
pop
dec
popa
in
pop
scas
int
xor
nop
push
ja
fdivrl
fdivr
and
push
pop
sub
cmp
mov
pushaw
test
inc
cs
cmpsl
pop
icebp
ficompl
rcll
cmp
xchg
mov
mov
push
mov
sti
or
test
lahf
sbb
cmp
jb
loopne
sar
jbe
xchg
in
pop
mov
es
xor
movsl
cmc
fisttpl
ffreep
mov
sbb
sbb
lahf
dec
js
mov
aaa
sub
sub
inc
dec
push
loopne
sub
dec
in
sbbb
lret
pop
pop
xchg
fiadds
mov
and
lahf
push
cmp
shll
out
xor
lock
aas
lea
int
jbe
adc
shrb
sbb
pusha
dec
cmpsb
xor
lods
sub
pop
mov
mov
dec
loope
mov
mov
in
hlt
fwait
jno
and
or
std
mov
lods
push
sub
add
outsb
pop
fwait
add
inc
mov
sti
push
sahf
dec
popa
pop
aam
push
sbb
leave
push
test
mov
or
pop
lock
cmp
jns
inc
xchg
and
shlb
jl
mov
js
mov
shl
mov
adc
outsl
leave
jae
adc
jo
mov
movsb
push
scas
cmpsb
pop
jl
stos
mov
xor
sbb
cmp
scas
movsl
cld
inc
mov
mov
scas
jmp
cwtl
jbe
inc
rclb
mov
sbb
xor
scas
loopne
mov
pop
jo
out
leave
aas
insb
xor
jmp
aas
ljmp
fsubrs
jbe
cmpsl
mov
out
cltd
jo
pop
fwait
jnp
inc
int
inc
lods
jmp
fsubr
lcall
dec
jle
out
fcmovnbe
cmpsb
xchg
scas
insl
mov
or
mov
pop
addr16
mov
ds
inc
mov
cli
push
mov
cmp
sub
jnp
out
dec
add
mov
lds
call
shrb
in
shl
call
lods
inc
loope
stos
test
mov
fidivl
and
push
stc
dec
cmp
jmp
in
adc
jp
in
push
pusha
test
inc
pop
rorl
bound
lods
and
shl
push
jae
or
lea
mov
repnz
and
repnz
jl
test
stc
inc
mov
sbb
addr16
mov
xor
clc
xchg
les
sub
xchg
outsl
sbb
push
std
mov
scas
xor
scas
and
xor
sub
sbb
in
leave
imul
fcomps
adc
inc
and
pop
pop
cwtl
jo
imul
pop
fsubrs
cs
aad
jl
shl
hlt
dec
repz
popf
shll
pop
pusha
xor
adc
push
clc
push
aad
jecxz
mov
add
lock
jle
mov
aas
add
scas
or
movsl
and
jbe
add
imul
arpl
inc
xchg
data16
dec
and
out
in
mov
test
shrb
push
mov
push
test
pop
cmp
pop
outsl
pop
mov
inc
sbb
loope
push
lret
out
sbb
in
sub
std
push
mov
loopne
mov
aas
fmuls
adc
aaa
int
inc
je
sub
les
mov
ficoml
aas
jmp
push
test
sub
dec
dec
sub
push
adc
push
jo
lcall
dec
lcall
or
rclb
jl
and
rclb
xor
inc
out
mov
mov
fcomps
clc
lods
repnz
movsl
cvtpi2ps
aam
push
mov
dec
out
cmp
adc
cmpsb
fwait
test
jl
shll
sub
jmp
stos
xchg
cs
mov
fsubrl
lods
ss
lret
lock
imul
sub
in
pop
lea
sub
jnp
mov
push
pushf
mov
sbb
loopne
lcall
aaa
cli
leave
call
jbe
andb
jno
jge
sub
jb
inc
aas
add
xor
lock
rcrb
lea
out
sbb
mov
loop
int3
pop
ljmp
cmp
in
sub
insl
cmpsl
pop
test
lods
jecxz
xor
scas
sub
lcall
mov
xor
adc
imull
ja
int3
ret
ljmp
stos
leave
push
loopne
mov
mov
rorb
jmp
scas
sub
dec
lds
sbb
ja
sbb
fwait
add
scas
ret
or
sub
movsb
pushf
fnstcw
into
lahf
addr16
inc
scas
sbb
test
push
sti
into
jo
adc
cmpsb
and
sbb
inc
enter
mov
cli
mov
mov
shl
mov
test
lods
push
jecxz
pop
das
outsl
jmp
xor
mov
js
pop
xchg
in
loope
or
ja
fcmovb
pop
ljmp
inc
nop
mov
mov
mov
stc
jp
dec
rolb
aam
lock
enter
popf
adc
lcall
mov
push
push
scas
insb
test
shlb
pusha
ss
insb
insb
fmull
pop
aas
xchg
insb
cmp
call
jnp
aaa
loop
jge
inc
faddl
xchg
add
stc
shll
inc
icebp
jb
mov
or
out
jle
dec
pop
jbe
jb
cmp
mov
stc
mov
add
sbb
aad
enter
aam
mov
rcl
jl
sbb
xchg
test
dec
jb
cmp
outsb
jnp
ret
std
orl
sub
cmp
lahf
and
loopne
and
fsts
cmp
mov
outsl
inc
xchg
jge
loop
jbe
mov
loop
ret
and
pop
out
pop
jge
sub
lds
jmp
pop
aaa
in
push
jnp
mov
loopne
into
add
popf
cmp
push
mov
pop
dec
xor
add
rcrl
loopne
inc
or
dec
sbbl
fistpll
addr16
mov
rorb
cmp
sbb
movsl
cwtl
push
mov
enter
add
push
add
cmp
std
repz
and
sbb
jl
fmul
sbb
jae
out
test
cmp
xor
cmpsl
in
mov
or
jo
loop
arpl
jp
sbb
and
mov
stos
mov
mov
xchg
mov
mov
out
cmpsb
lcall
push
ret
cltd
mov
push
xor
and
jl
mov
bound
ret
dec
jbe
xor
dec
insl
pop
mov
lea
add
fwait
pop
dec
out
test
adc
lock
fmul
lcall
pop
sub
pop
std
stc
cwtl
mov
sub
fsubrs
sub
jl
ja
pop
cmpsb
shl
mov
push
sub
mov
aad
loope
nop
sub
in
jb
out
pop
fadds
fiaddl
xchg
jle
pushf
dec
sub
mov
pop
jecxz
sbb
xor
mov
std
loop
mov
pop
add
push
cmpsl
cli
int
outsl
dec
das
push
add
lahf
dec
pop
and
out
leave
out
mov
sarl
mov
cmp
mov
ficomps
scas
fisttpll
pusha
adc
or
push
flds
dec
loopne
push
imul
sbbb
rcll
adcl
stc
rclb
ret
and
dec
cmp
sbb
jmp
mov
push
cmpsb
adc
mov
aaa
adc
ljmp
adc
add
add
in
mov
aaa
push
ds
dec
jmp
pop
call
jnp
add
or
dec
stos
out
sub
xor
stc
stos
xlat
pop
lods
outsl
dec
stos
lea
cmpsb
imul
sbb
jmp
es
loopne
psubsw
in
sbb
loope
mov
test
out
mov
pusha
mov
inc
insb
outsl
xchg
cmp
dec
adcl
dec
pop
call
push
invd
lods
push
pop
or
leave
icebp
xor
sbbb
mov
or
and
addr16
movsb
and
lret
stos
inc
scas
mov
pop
sti
xchg
pusha
sbb
aam
clc
mov
in
mov
test
sub
cmp
sub
test
pop
add
and
mov
mov
jbe
xchg
xor
sbb
pop
loopne
mov
cmp
adc
in
scas
or
scas
pop
push
cmp
mov
scas
adc
insb
aam
sub
push
adc
bnd
adc
icebp
jmp
movsl
lds
add
clc
inc
sarl
stos
mov
iret
jl
push
sbb
clc
dec
call
insb
clc
test
cmpsb
mov
in
fucomi
hlt
inc
mov
push
je
or
xchg
push
lea
mov
in
int
jo
sub
rcrb
dec
mov
repnz
push
xchg
mov
jo
lahf
inc
dec
mov
or
jg
in
xor
jmp
fidivs
sub
out
pop
xor
punpckhwd
test
add
sub
and
xchg
sub
cmp
call
pop
mov
outsl
and
movaps
mov
and
push
and
fmul
cmovp
mov
or
push
jo
cs
lahf
jnp
lods
std
jbe
ds
insl
mov
push
and
mov
in
pop
out
push
lcall
ffree
gs
inc
scas
xor
pop
add
pop
inc
data16
xchg
xor
mov
add
call
push
outsl
or
stc
scas
sub
movsl
jecxz
mov
test
mov
sti
lods
cmp
or
cmp
pop
rcl
mov
push
stos
fsubrs
orl
pop
adc
insb
cld
adc
pushf
pop
sbb
movsl
pop
jle
pop
out
stos
cmp
pop
jg
push
jle
icebp
or
cmp
fldcw
dec
add
adc
imul
mov
or
cmpsl
mov
xchg
shlb
mov
mov
fwait
jnp
pop
mov
int3
push
xchg
mov
lods
imul
mov
insl
and
sbbl
mov
push
into
in
test
or
imul
enter
pop
stos
inc
jmp
repz
cmp
sbb
stos
adc
js
and
sahf
sub
mov
out
push
aaa
stc
es
jb
out
lea
cwtl
lahf
loope
in
rorb
clc
lea
or
add
sbbl
test
and
popa
data16
mov
out
notl
or
lock
cmc
cmp
pop
and
jge
or
cmp
outsl
jl
sbb
add
jle
pop
pusha
cwtl
mov
clc
pop
imul
xchg
loopne
ja
push
fcmovnu
mov
push
mov
inc
aaa
test
mov
mov
fcomp
iret
jbe
cmpsl
adc
or
pop
cmp
cmp
pop
jmp
in
int3
aaa
mov
fnstenv
cmp
mov
sbb
push
fld1
movsb
sub
xor
mov
int
mov
pop
push
outsb
mov
cmp
push
pop
jbe
xchg
pop
jne
clc
loope
aam
fsubrs
dec
lods
lahf
mov
cmp
or
repz
jmp
dec
or
sub
or
jp
cltd
and
leave
dec
xor
sbb
xchg
add
xor
or
repz
daa
push
pop
fimull
lcall
pop
das
test
icebp
add
stos
sub
inc
or
and
arpl
inc
push
push
das
out
lcall
mov
outsl
jecxz
out
inc
jbe
ss
cld
lret
loop
jl
mov
out
inc
jbe
cmp
stos
sub
jmp
jbe
cli
call
loop
or
adc
xchg
jnp
xlat
iret
mov
dec
lcall
inc
cmp
lret
jecxz
cmp
jo
xchg
fs
popa
cmpsb
fcoms
fwait
lahf
push
inc
call
push
mov
in
mov
cmpsb
fld
cmpsl
mov
int
or
xchg
mov
fcmove
lret
ja
test
lcall
arpl
xor
pop
mov
push
sbb
or
sub
lea
pop
lcall
add
aaa
adc
mov
cmp
xchg
stos
shlb
lods
int3
dec
push
lock
mov
jge
sub
rcrb
push
or
or
xchg
test
test
mov
pop
test
sti
vminpd
xchg
push
cmp
rorb
and
pop
stos
scas
mov
xchg
mov
ds
mov
insl
dec
imul
bound
out
mov
stc
outsl
dec
mov
or
lock
mov
scas
sbb
push
mov
loopne
rol
adc
imul
notb
fnstcw
inc
mov
or
std
mov
pop
ljmp
je
pop
push
lahf
jecxz
xor
pop
movlps
popf
enter
js
out
les
in
push
lock
outsb
clc
test
out
fsubl
xor
push
loopne
inc
stc
cbtw
insl
in
lcall
imul
fnstenv
icebp
sbb
jle
adc
mov
dec
repnz
jmp
out
rorb
shlb
jns
xor
dec
adc
out
sar
xchg
cld
out
dec
cwtl
sti
lahf
dec
inc
lea
mov
or
cmp
or
lret
adc
mov
mov
dec
xchg
and
ljmp
sti
jge
je
or
std
and
add
shlb
mov
shrb
push
leave
mov
dec
inc
lahf
js
cltd
out
sbb
cmpsb
cmp
fsub
and
add
lods
sbb
push
data16
cmp
psllq
sbb
roll
aad
or
int
push
mov
jnp
pop
out
adc
stc
mov
popf
ja
iret
push
cld
jge
and
pop
int
cmp
mov
cmpsl
out
mov
outsl
lods
or
mov
insl
push
mov
lods
mov
or
out
lods
fsubr
push
or
scas
mov
xchg
mov
jecxz
imul
and
bswap
jnp
lods
xor
dec
addr16
mov
mov
inc
jmp
mov
loopne
add
dec
xor
inc
andb
enter
negb
jb
adc
fdivr
lahf
sub
sub
loopne
gs
les
dec
sarb
loope
dec
pop
sub
xchg
in
fsubs
sahf
pop
push
call
addr16
xorl
in
fchs
sbb
mov
and
lods
popf
ss
les
inc
mov
cmpl
pusha
xchg
push
mov
cmp
cmpsb
lret
push
nop
push
ljmp
test
arpl
lcall
add
mov
mov
inc
xor
sarb
movsb
cwtl
dec
inc
imul
ljmp
arpl
ret
jae
pop
push
xchg
and
cmpsl
jb
cmpsl
sti
mov
cmpsb
test
jp
pop
or
jae
adc
popa
cmp
dec
lret
jl
mov
mov
sub
shl
pop
outsl
jge
dec
sub
rorb
cmpsb
cmp
imul
and
clc
pusha
popf
and
test
sbb
dec
cmp
lea
sbb
inc
or
jl
test
negb
loop
ss
cli
cmpsl
jnp
mov
bound
xchg
mov
or
xchg
cmp
xlat
sbb
xchg
stos
xor
adc
nop
sub
mov
addl
test
vmovsd
xchg
dec
loopne
jnp
cwtl
loopne
xchg
lahf
push
xchg
inc
mov
adc
mov
pop
lcall
jns
cmp
mov
ffree
xor
xor
push
push
push
std
mov
out
leave
frstor
xor
push
js
enter
sahf
mov
push
pop
or
push
pop
mov
ret
test
out
cmp
andb
jg
and
pop
int
aam
jle
pop
aad
cmp
out
push
in
lahf
sub
jne
loopne
mov
aas
leave
lahf
mov
rorb
dec
mov
add
icebp
or
flds
je
push
lret
test
and
sub
loop
push
into
movsb
clc
fistps
cmp
in
in
xorl
jae
movsl
add
xor
mov
mov
cmpsb
jmp
js
inc
sub
arpl
std
add
push
xor
xchg
enter
iret
and
pushf
enter
gs
jl
xlat
cmpsb
addr16
cmc
xchg
es
ja
outsl
mov
or
push
jg
mov
cmp
ds
ja
pop
inc
pop
jnp
divb
pop
in
mov
xchg
insb
jo
dec
add
lods
push
outsl
cli
hsubpd
xchg
aaa
mov
xchg
lock
mov
mov
sub
add
int
jle
sub
enter
sub
add
mov
pop
cmp
mov
aam
or
mov
jbe
push
xchg
mov
aam
add
push
mov
in
push
dec
mov
nop
sub
sbb
or
and
lods
scas
mov
jbe
fmul
mov
into
faddl
iret
mov
int3
jmp
and
test
pop
or
out
cwtl
aas
dec
rcr
fmull
lret
mov
inc
jge
lcall
mov
jl
push
fdivrs
push
stos
jno
jbe
int
test
dec
lahf
gs
cld
dec
jno
aas
das
addr16
sub
lahf
clc
push
push
mov
js
mov
mov
mov
lock
call
adc
aad
insl
std
bound
ror
aas
in
in
dec
mov
fildl
xchg
inc
push
out
mov
lods
pop
movl
lea
std
loope
adc
lcall
fsubr
push
push
out
bound
sti
fsubrs
xchg
fdivrl
and
push
int3
in
or
and
cmpsb
push
mov
dec
cmp
cwtl
imul
addr16
pusha
mov
cmp
in
addr16
sub
lahf
mov
pop
movsb
xor
loopne
or
fldenv
mov
testb
js
lret
test
arpl
lods
movsl
sbb
out
cmpsb
ss
cmc
mov
int
sbb
inc
mov
xor
push
test
into
pop
fcomps
push
xchg
lods
adc
mov
jge
inc
sub
addr16
jb
mov
xor
jmp
fcmovnu
cltd
ror
out
jp
cmp
sub
add
mov
or
mov
pop
push
mov
or
mov
inc
in
idiv
fucompp
movsb
sub
mov
sahf
in
movsl
clc
fs
in
bound
movsb
leave
aad
inc
mov
orb
movsl
inc
or
push
cmp
sub
aad
sahf
mov
shrb
test
and
adc
fldt
loopne
lock
scas
and
xor
stos
out
mov
icebp
ret
xorb
inc
lods
scas
and
sbb
pop
int
es
pusha
mov
lret
test
cmp
xchg
cmp
or
fwait
sarb
xor
scas
pop
push
aam
sbb
fisttps
sub
shrb
sub
scas
cmp
xlat
add
cmpsb
loopne
xor
je
lahf
sub
pop
int
leave
sub
nop
mov
test
scas
xchg
nop
pop
jo
es
sti
add
pusha
sbb
push
pusha
adc
mov
lahf
xchg
add
xor
arpl
mov
lahf
gs
cmp
int
loopne
cmp
pop
push
dec
out
fbld
leave
rorl
in
xchg
addr16
addr16
sub
cmpsb
dec
and
out
stc
xchg
roll
xchg
jge
xlat
or
adc
stos
push
dec
pop
std
lds
adc
push
stos
pop
cmpsb
dec
das
pop
fistpll
push
fcmovu
cmpsl
push
mov
faddp
arpl
int3
loopne
ror
xor
fwait
jl
orb
cld
pop
xchg
imul
cmpsl
shrb
pop
out
jmp
test
push
xor
test
or
mov
add
cmpsb
mov
lea
cmp
xchg
adc
mov
icebp
jmp
sarl
out
cmp
pop
mov
mov
test
mov
divb
lcall
and
aaa
add
and
sub
negb
movsl
or
jnp
cmp
in
iret
inc
dec
cwtl
imul
sub
sbb
or
jnp
les
mov
fnsave
xor
movsl
fstpl
push
outsl
adc
mov
inc
popf
xor
push
add
add
aas
mov
push
sbb
lret
cwtl
sbb
test
aam
lret
fst
fistpl
addb
adc
loopne
cli
sub
rcrl
cli
lret
mov
jecxz
adc
adc
and
or
movsl
xor
cmpxchg
jecxz
adc
push
jp
mov
adc
mov
dec
inc
xchg
xchg
jp
add
mov
shrb
mov
push
pusha
lret
lea
inc
adc
jo
dec
mov
mov
cmp
lcall
std
insb
insb
in
mov
dec
xor
push
stos
rcrl
loope
xchg
out
nop
mov
pop
call
rorl
loope
and
mov
cmpsl
out
pop
movsl
cmpl
dec
inc
mov
movsl
adc
imull
sbb
or
xchg
mov
mov
enter
mov
jecxz
fcom
adc
fldenv
inc
inc
fisubrs
adc
or
and
fcmovu
shll
shrl
sub
stos
sub
push
pop
inc
mov
jmp
sub
int3
push
mov
icebp
cmp
mov
mov
cmp
leave
clc
pop
icebp
call
lods
or
mov
jmp
adc
cmpsb
call
pop
enter
je
jge
andb
cmpsb
sub
movsl
mov
outsl
enter
jo
lods
mov
sub
outsl
roll
inc
outsb
cmp
push
dec
sbb
xor
insb
dec
cmp
divl
data16
cld
jmp
or
addr16
lods
movq
sub
lods
hlt
mov
std
cmpsb
rcrl
adc
jmp
mov
mov
xlat
push
push
mov
shlb
imul
jecxz
xorb
jb
sahf
and
mov
icebp
loope
mov
inc
js
xchg
jge
ret
pop
stos
mov
jno
jnp
jmp
sub
insl
dec
inc
fisubrs
xchg
lret
add
add
and
cmp
pop
jnp
jns
cmpsl
mov
mov
aad
mov
das
sahf
mov
mov
imul
pop
cmp
repnz
cmc
fldt
push
jo
mov
jmp
inc
dec
es
mov
jmp
arpl
xchg
xor
out
test
adc
enter
fwait
rclb
adc
out
jl
hlt
into
cli
inc
inc
das
push
jg
sub
cmp
xor
loopne
fnstsw
cmp
ja
aas
adc
dec
xchg
mov
addr16
mov
adc
pop
nop
mov
pop
loope
push
lods
jp
lcall
scas
inc
enter
les
sub
xchg
ljmp
jbe
push
inc
jge
loope
jle
sub
mov
das
lock
nop
push
sub
addl
jecxz
repnz
mov
xor
ja
xor
call
movsb
or
adc
pop
xchg
pop
cwtl
jmp
cmp
mov
ljmp
movsb
movsl
outsb
cli
mov
mov
mov
adc
xchg
mov
add
int
ljmp
lods
aad
cli
mov
lods
cmp
clc
hlt
lods
stos
movsb
add
push
mov
mov
loopne
int
adc
test
sub
lods
pop
lea
mov
lcall
sub
int3
icebp
push
or
sbb
rolb
or
imul
das
pop
sbb
leave
push
pop
bswap
insl
sub
icebp
int
popa
push
stos
lock
pusha
rcll
jge
daa
mov
jg
call
mull
sbb
sahf
cmpsb
jno
pop
mov
mov
jbe
push
mov
addr16
in
jmp
mov
test
xchg
and
pusha
mul
rcrb
and
jmp
sub
cmp
fsubl
test
sbb
stc
mov
cmp
and
cmpsl
lea
dec
sbb
xchg
stc
jl
test
mov
jno
je
in
call
in
dec
adc
jl
faddl
jl
jmp
push
push
test
mov
es
xchg
jns
decl
repnz
scas
scas
fucomip
add
out
jbe
dec
pop
enter
pop
mov
adc
leave
shll
enter
scas
mov
mov
ljmp
lcall
sub
sub
mov
stos
mov
xlat
das
test
je
lcall
jg
stos
push
cmp
bound
pop
fs
pop
mov
push
call
iret
jmp
sbb
lret
cmpsl
fisubl
cwtl
dec
stos
add
rolb
stc
push
lcall
jb
pop
kmovd
lods
xchg
in
mov
fwait
out
stos
loopne
ss
out
sbb
addr16
enter
xchg
out
dec
push
cmc
adc
mov
popf
push
ss
inc
cltd
dec
lea
xor
je
out
iret
stc
pop
inc
ret
imul
adc
fs
jle
neg
push
loopne
arpl
aam
mov
pushf
mov
roll
add
sub
push
loopne
pop
repnz
ret
xor
leave
loop
lret
fcompl
adc
mov
mov
in
push
or
jnp
push
push
jl
dec
test
inc
push
popa
and
xchg
call
iret
sbb
sbb
lahf
shll
dec
loop
sub
cmpb
mov
jmp
mov
cmp
jnp
adc
push
cmp
mov
int3
stos
add
sti
push
cmp
rcrb
pop
mov
cmp
rorb
test
pop
dec
xor
adc
popf
popf
cmp
test
cltd
bound
insl
lock
mov
pop
push
mov
lret
push
push
dec
ljmp
push
pop
jge
push
mov
mov
xchg
inc
pop
push
sahf
mov
xor
dec
add
cld
mov
inc
push
mov
push
das
ljmp
dec
sub
jl
mov
call
sbb
cmp
pop
iret
inc
or
xchg
mov
addr16
sbb
sbb
shld
pop
jnp
aas
fistpl
aam
sbb
sbb
sbb
push
pop
mov
clc
or
aaa
mov
jo
imul
test
sub
and
jmp
jne
loopne
push
insb
and
jbe
and
jp
dec
imul
aad
push
lea
mov
xchg
mov
fcomps
xchg
and
rolb
iret
test
cltd
ret
insl
mov
enter
test
inc
nop
lds
and
adc
push
div
call
push
inc
push
mov
dec
sub
test
inc
arpl
negl
enter
fwait
or
mov
xchg
jns
fiadds
lret
addr16
lods
sarl
movsb
mov
je
cmp
test
mov
mov
adc
into
and
xor
sub
out
pop
cmp
movsb
outsl
mov
sbb
mov
aaa
mov
push
je
jp
mov
cwtl
enter
or
mov
mov
push
adc
jae
outsb
lods
pop
dec
lret
test
sub
cmpsb
gs
push
mov
and
loope
xor
pop
dec
lods
mov
dec
xor
mov
lahf
dec
adc
and
lods
mov
mov
pop
lods
or
sub
aam
test
jmp
mov
push
ljmp
or
xchg
test
push
icebp
mov
call
ret
and
add
pop
xchg
push
jnp
rcll
fdiv
jp
clc
mov
push
pusha
rcr
push
dec
enter
mov
clc
ret
rclb
push
outsl
mov
aad
adc
dec
inc
lret
jb
into
loopne
sbb
lods
in
clc
hlt
push
movsb
or
sti
arpl
sub
lods
inc
cltd
int3
mov
add
leave
out
cmpsl
adc
leave
jnp
cmpsb
lahf
movsb
push
and
push
mov
sub
inc
lock
enter
aad
rorl
iret
mov
jae
call
inc
dec
push
lahf
push
in
pop
loope
mov
or
pop
mov
fdivs
dec
sbb
dec
sub
fs
test
xchg
xchg
mov
add
xchg
imul
sub
insb
jbe
adc
lcall
fs
sahf
mov
mov
xchg
in
stos
dec
sub
imul
popa
add
xor
insb
sub
scas
cmpsb
push
dec
leave
jbe
sbb
in
popf
mov
ljmp
rol
pop
out
push
fisttpll
pop
mov
cmp
xchg
popf
cwtl
jae
cmpsb
adc
jo
mov
sti
cmp
add
addr16
mov
and
and
mov
jae
push
and
pusha
hlt
sbb
rcll
repz
mov
dec
pop
ss
pop
pop
or
jl
pop
adc
shrl
call
mov
test
dec
out
insb
mov
jns
cmp
mov
sbb
addr16
iret
fsubrl
imul
pop
inc
mov
cwtl
cld
sub
ret
aad
dec
test
push
int3
scas
sbb
adc
lret
jg
ret
and
dec
mov
mov
movsb
pop
fs
sub
int
mov
lock
push
dec
mov
leave
clc
xchg
and
lock
jns
cli
ja
adc
lcall
mov
cmpsl
out
arpl
mov
xor
inc
pop
mov
cmp
jo
sbb
mov
and
in
mov
das
sub
and
and
insl
and
cmp
xchg
mov
add
push
lret
rcrb
xchg
push
sbbl
add
xchg
fs
or
lods
mov
mov
and
cs
pop
sub
pop
sub
mov
pop
mov
mov
dec
outsl
mov
xor
push
popf
inc
mov
sbb
cmp
or
push
fidivrl
outsl
outsb
xchg
enter
mov
aas
shlb
popf
pop
ret
push
fldenv
inc
jge
xchg
mov
stos
sub
fldcw
inc
push
add
push
mov
xchg
push
lods
mov
in
jmp
mov
stos
stc
pop
aaa
push
mov
popa
sub
lds
jne
ds
sbb
add
test
cmp
dec
je
sub
cmpsb
cmpsl
mov
ljmp
adc
push
inc
sub
push
xor
adc
or
mov
xchg
cmpb
xchg
inc
xchg
stc
pop
js
out
js
outsl
jle
sub
xchg
sbb
or
scas
iret
loop
subb
jmp
dec
ret
push
inc
data16
cmp
shl
push
xor
mov
lods
and
ja
aam
add
jg
xchg
inc
push
sub
adc
add
jmp
call
pop
lods
and
fnstsw
loopne
xor
cmpsb
jno
adc
test
cld
in
and
push
mov
ret
sbb
mov
add
cmpl
sub
push
into
loope
scas
pop
xor
push
dec
in
push
pop
outsl
push
in
dec
jmp
cld
mov
enter
test
add
in
mov
jbe
push
lods
and
pop
mov
add
push
out
mov
push
push
pop
ja
cmpsb
popf
push
shr
cli
xchg
push
call
mov
mov
mov
or
dec
pop
in
inc
sbb
das
dec
xchg
pop
mov
out
push
mov
popf
xor
jb
arpl
scas
jne
out
lret
xchg
lods
jne
in
pop
ljmp
ds
lret
out
push
lret
pop
ljmp
aas
ljmp
enter
cmp
in
das
iret
sub
pop
sub
fcmovne
push
lods
fwait
or
push
mov
fcoms
inc
mov
pop
lret
add
adc
rcll
sub
into
or
cmp
int3
xor
mov
fistpl
pop
fmuls
push
push
cmpb
js
sub
aas
push
jmp
cltd
push
in
test
dec
inc
mov
mov
loop
mov
or
sub
mov
adc
push
pop
jo
push
js
xchg
pop
mov
sub
cmp
ficompl
push
roll
lods
jnp
cltd
add
fisubrl
aad
nop
pminsw
xchg
sbb
or
std
sub
repnz
lcall
rorb
inc
rcrb
xchg
xor
adc
push
cmp
dec
push
divb
mov
outsl
cmovle
adc
imul
mov
cmc
sahf
pop
stos
test
cmp
add
rorl
pop
jae
lods
out
jnp
sbb
lods
xchg
sbb
adc
imul
mov
mov
mov
or
sub
push
or
xor
add
loope
jo
dec
mov
inc
push
push
scas
lds
call
jl
imul
dec
push
cld
scas
dec
mov
push
and
cmp
jle
mov
rcr
or
mov
fwait
bound
sub
loope
int
loop
xchg
sub
out
negl
pop
scas
mov
pop
shlb
leave
into
sti
xchg
jl
jl
cmp
sbb
out
scas
xor
int3
xchg
pop
cmp
pusha
cmc
push
sub
lds
aas
add
call
or
inc
sbb
popw
test
sahf
loopne
mov
out
adcl
nop
in
or
sbb
mov
push
shlb
mov
mov
inc
adc
mov
push
cmp
and
insb
lret
sub
imul
mov
add
jle
add
stos
sub
lcall
adc
mov
jo
add
and
stc
das
push
mov
inc
mov
sub
and
sbbb
mov
inc
loope
inc
negb
in
mov
call
jge
dec
sahf
sub
iret
xor
stos
je
dec
jbe
mov
jecxz
gs
jae
pop
rcl
adc
stos
xor
fbstp
cmpsb
jns
xchg
inc
cli
pop
sbb
cwtl
push
jo
xor
popf
mov
xchg
mov
movsl
xorps
mov
mov
push
in
adc
jge
and
gs
movsl
push
xchg
jge
mov
mov
mov
or
jnp
and
sbb
mov
jecxz
scas
push
and
jecxz
sar
daa
pusha
pop
jns
insb
call
sbb
and
cld
lret
call
popa
and
dec
lds
add
or
dec
push
popf
out
lods
or
lds
jmp
cmpsl
sub
mov
push
pop
test
lret
popf
fmull
movl
mov
and
cli
cld
mov
dec
ss
popa
or
testl
cmp
jp
clc
push
das
outsl
out
in
popa
mov
addr16
aas
lret
mov
imulb
out
stc
xchg
aam
and
loop
aaa
mov
sub
in
shll
cmp
jae
cmpsb
sub
push
aas
insb
aaa
data16
inc
mov
stc
cmp
sub
lahf
clc
dec
push
adc
rcrb
or
xchg
mov
sbb
out
mov
stc
aas
stos
aaa
jb
arpl
dec
sub
test
int3
enter
pop
bound
or
mov
mov
mov
loopne
dec
in
pop
movsb
test
jno
outsl
call
jmp
dec
lret
addr16
stos
inc
scas
call
adc
sub
mov
sub
lods
ljmp
mov
lea
stos
sub
cmpsb
pop
into
popf
addr16
dec
sub
test
aad
mov
dec
xchg
pop
lods
mov
addb
mov
ror
sub
lcall
lcall
jmp
jecxz
test
cmpsb
dec
push
sub
aas
inc
pop
fbld
mov
sub
lea
dec
loopw
mov
lea
sub
jne
pop
loop
xchg
sbb
fstpl
clc
sar
pop
dec
sub
sub
mov
mov
sahf
xchg
inc
aas
mov
mov
sub
pusha
jp
loopne
fidivrs
mov
data16
fldl
and
jmp
aaa
sti
push
jnp
push
outsb
xor
enter
adc
roll
loope
jmp
js
mov
enter
pop
cmp
in
imul
pop
test
adcb
mov
fdivl
lret
stos
gs
xor
cmc
cmp
fistps
out
xchg
mov
mov
ja
fdivs
or
and
add
adc
inc
dec
jnp
fisubl
add
mov
jmp
notb
xchg
add
lcall
sub
fdivrs
xor
inc
cmp
icebp
lret
rorl
enter
enter
inc
pop
jp
pop
push
shlb
inc
mov
fucomp
push
mov
jns
push
jmp
imul
stc
ret
xchg
sbb
pusha
jnp
xor
lret
out
clc
das
sub
lahf
out
mov
popa
adc
adc
and
lret
push
mov
mov
jae
filds
jo
jg
and
addr16
pop
push
push
dec
in
mov
in
test
mov
or
es
cld
push
nop
out
test
leave
mov
xor
cmp
addb
lahf
call
mov
mov
outsb
popf
jl
lock
pop
jbe
test
popa
ret
repnz
and
mov
push
arpl
push
dec
lods
jnp
dec
mov
push
out
mov
mov
sub
loop
push
data16
or
jbe
pop
cli
gs
xor
lahf
or
mov
stos
in
jmp
popf
and
pop
lods
mov
xchg
sbb
xorb
dec
sbb
xchg
cwtl
xchg
mov
repnz
inc
in
sbbb
adc
test
push
loop
pushf
add
test
jge
xchg
out
out
and
push
mov
out
test
out
ljmp
subl
jge
lods
mov
sub
punpcklbw
cwtl
and
xchg
mov
lahf
xchg
push
ss
lods
in
push
inc
dec
dec
shlb
out
lea
mov
push
rcr
inc
out
inc
pop
pop
jecxz
imul
mov
jae
dec
pushf
pushf
cltd
icebp
ds
sub
cld
xchg
jns
popf
jmp
sbb
leave
das
ja
out
lcall
sarl
pop
cli
adc
lret
mov
cmp
or
pushf
scas
add
mov
fiaddl
unpckhps
fistpll
loop
sarb
xor
es
cmpsl
inc
push
inc
xchg
int3
jbe
mov
test
sub
aam
dec
sub
lods
or
pushf
mov
dec
mov
xchg
inc
xchg
mov
jbe
in
insl
jbe
in
push
pop
int
in
mov
neg
jbe
daa
js
mov
push
faddl
mov
jo
aad
add
pop
xchg
cltd
movsb
imul
jmp
rclb
jnp
leave
lahf
jb
adc
jno
fnstsw
lahf
push
mov
mov
cmpsb
std
xchg
dec
test
mov
xchg
popa
add
sbb
pop
fsub
nop
adc
cltd
or
nop
lret
ljmp
pop
into
xchg
sub
and
xor
or
fisubs
in
push
sbb
fistps
ja
xchg
jmp
mov
daa
stos
sar
loopne
inc
bound
cs
push
jmp
stc
xor
sbb
pslld
sub
mov
pop
mov
sahf
mov
adc
lock
adc
dec
xor
cltd
test
add
lret
lods
nop
dec
fsubr
cltd
mov
pop
hlt
sub
clc
mov
cltd
dec
jnp
xchg
aas
call
out
adc
adc
cmp
inc
decl
test
rcrb
fldcw
inc
push
stos
cmp
loopne
cmpsl
cld
cmp
test
inc
cli
push
rcr
orl
cmp
iret
movsb
imul
fsubrl
cmp
fldcw
stc
lock
lea
ret
testl
jmp
js
loope
dec
call
mov
test
aad
jmp
push
les
fstl
aad
mov
bound
jl
jo
pop
cmpsl
es
out
xchg
lds
mov
cmpsl
enter
js
loope
dec
dec
mov
in
pop
into
cmpsl
jle
pop
call
loope
int3
lods
nop
jbe
xor
out
or
dec
or
sub
lock
enter
les
aaa
sub
mov
bound
in
lahf
mov
lahf
ss
fisttpll
in
les
mov
adc
push
fstpt
or
pop
or
xchg
pop
jecxz
addr16
and
test
inc
ss
lods
cmp
push
sub
ss
cmpsb
cmp
jbe
cli
addb
jbe
adc
adc
scas
cwtl
sub
es
in
push
std
pop
stc
clc
push
mov
shrb
push
mov
add
test
mov
lock
mov
iret
scas
push
cmp
popl
mov
insb
xchg
je
cmp
pavgb
lea
popf
scas
ret
push
jl
push
xchg
and
sbb
rorb
adcl
out
or
dec
mov
test
ret
pushf
js
enter
aam
and
sub
cmpsb
mov
pop
dec
add
cli
enter
mov
je
xchg
mov
cmp
sub
xor
js
cld
fmuls
in
jmp
pop
fsubrl
stos
into
cmp
arpl
nop
pop
lods
jno
push
mov
and
test
sbb
cwtl
sub
and
xchg
adc
hlt
andb
inc
mov
pop
adc
in
jecxz
cli
ss
pop
jo
in
or
clc
push
je
out
push
add
mov
jp
sbb
andb
sbb
in
add
sub
lock
xor
push
mov
dec
fidivs
seto
pusha
cwtl
mov
sub
dec
cmp
or
jle
pop
add
dec
mov
rcrb
out
xchg
sub
int3
sahf
inc
xchg
leave
pop
leave
fisubl
out
pop
inc
jne
aam
popf
cmpsb
rolb
leave
jp
in
sbb
iret
xor
les
cltd
das
stc
adc
jp
cmpsb
and
sub
mov
leave
pop
cwtl
dec
sbb
jmp
mov
aas
lods
xchg
adcb
loopne
les
cli
xor
add
notl
ror
xchg
enter
mov
test
cld
test
mov
mov
cld
mov
adc
mov
pusha
push
rolb
insl
loopne
fwait
push
jg
loopne
push
jmp
test
cmp
sub
mov
lahf
ror
insl
test
pop
jg
lahf
push
or
mov
jnp
pop
mov
cmpsb
adc
push
push
xlat
fwait
mov
sbb
adc
test
int
cltd
sbb
mov
fmull
cmpsb
mov
test
cmp
sub
xor
ret
mov
mov
in
inc
test
in
add
xchg
mov
push
leave
sbb
sub
out
adc
mov
mov
test
jecxz
js
jecxz
stos
sbb
mov
mov
mov
inc
fbstp
leave
or
insb
mov
imul
lea
dec
cmpsb
jl
sub
mov
cmp
aad
sbb
sub
mov
sahf
jl
inc
mov
dec
clc
aam
sub
inc
neg
xchg
int3
fdivrl
lock
insb
add
sub
leave
sub
jno
mov
cwtl
jg
sbb
test
cld
fdivrs
mov
xchg
loopne
jo
icebp
insb
inc
xchg
xchg
xchg
scas
stos
jno
fmuls
jne
cmp
xor
xchg
insl
loop
mov
outsl
pop
lcall
jnp
je
data16
jg
sub
imul
mov
lahf
cld
inc
repnz
mov
and
xor
xchg
pushf
imul
push
leave
and
in
fstpl
xchg
shrl
jnp
cmpsl
jl
fldcw
pusha
fsubl
stos
jno
push
pop
pop
and
jbe
fcomps
cmc
mov
jbe
arpl
lret
mov
xchg
sub
push
sub
pop
mov
xchg
adc
dec
cmc
ret
lcall
lcall
sbb
xor
sub
mov
call
jns
cmp
push
test
push
scas
mov
pusha
jno
fsubrs
movsb
loopne
mov
add
insb
mov
adc
or
jne
das
lret
sbb
fsubrs
ss
in
int
xchg
roll
sub
cwtl
jbe
xor
sub
push
shrl
push
ja
scas
xor
setle
pop
sub
out
lcall
outsb
or
test
sbb
shrl
mov
cwtl
dec
test
or
icebp
cmpsb
lods
xor
mov
rcrb
sub
inc
enter
lea
xlat
in
sub
or
adc
sub
lret
lods
and
jp
sub
fmul
and
or
lods
es
lock
xor
test
mov
out
adc
sub
pop
fstps
sub
lret
out
or
insl
out
loopne
aas
push
out
adc
lret
xchg
test
mov
pop
mov
cld
in
call
cltd
inc
in
insl
push
jg
cmp
lcall
dec
jmp
lds
add
les
pop
es
xchg
clc
pop
sbb
jg
jnp
leave
cmpsl
pop
in
test
fdivrl
insb
fdivs
xor
int
push
pop
push
ret
cmp
adc
mov
xchg
sti
jne
mov
ja
in
data16
jae
roll
or
ljmp
std
and
stos
pop
jge
and
sarb
call
cs
sbb
and
aaa
in
mov
insl
mov
sti
lds
or
jg
xchg
sub
nop
movsb
xor
fisubl
shr
arpl
lahf
dec
lods
dec
sbb
jmp
mov
dec
push
pusha
jnp
rcl
cmp
ja
adc
in
aas
stc
clc
hlt
and
loop
sub
or
push
ja
sub
sbb
push
out
pshufw
clc
mov
stos
out
push
leave
call
push
sub
popa
inc
std
out
jl
sub
rorl
pop
popa
fimuls
push
stos
pop
push
mov
dec
pop
and
sub
push
cmp
mov
shl
jl
add
push
adc
subb
lock
inc
scas
loope
cmpsl
shll
jnp
mov
push
stc
adc
cmp
add
js
jl
out
test
adc
nop
pop
add
rolb
call
lds
les
scas
sub
xchg
cltd
sub
mov
movsl
inc
push
lcall
push
lcall
adc
and
in
push
adc
xor
cmpsb
pushf
fnstcw
dec
cmp
and
mov
cwtl
sbb
jno
pop
movl
jl
adc
xor
pop
jmp
and
jo
mov
dec
mov
cmpsb
xlat
scas
test
and
outsb
push
popa
gs
sbb
je
or
mov
dec
push
pop
sahf
daa
stos
xchg
or
xor
xchg
js
es
mov
jg
pop
mov
ss
fcompl
leave
lcall
out
fsubl
pop
in
inc
and
shrl
xor
sbb
pop
add
stc
fcoms
fcomip
int3
out
sbb
lret
stos
push
and
push
adc
mov
cli
bound
dec
mov
out
shll
pop
cs
lcall
lcall
push
inc
sub
cmp
push
popf
cltd
mov
pop
ds
dec
jmp
xlat
gs
push
add
xchg
nop
adc
cmp
test
xchg
adc
xor
popf
repz
pop
mov
mov
mov
jg
dec
inc
int
add
mov
sbb
into
fmuls
dec
pusha
sub
pop
fsubs
jge
movsl
std
sbb
jno
lret
pop
push
inc
jo
mov
mov
push
les
in
or
movsl
leave
lods
push
xchg
lret
jnp
arpl
pop
fldcw
mov
lods
mov
cltd
jb
mov
cmp
jp
shrb
or
dec
gs
ljmp
repnz
sbb
xorl
jne
lock
xor
shrb
test
xchg
xor
jp
xchg
in
push
pop
cmp
pushf
cmpb
loop
lea
mov
mov
mov
pop
and
adc
mov
or
sub
popl
sub
cs
mov
push
pop
movsl
xchg
std
aaa
jmp
mov
push
mov
mov
ret
imul
and
pop
sahf
insl
or
out
pop
inc
fcmovne
out
push
mov
imul
dec
mov
xchg
in
xorb
dec
xchg
inc
push
xor
push
mov
enter
mov
add
push
xlat
outsb
aam
aas
adc
jmp
or
scas
mov
pop
hlt
sbb
out
sbb
enter
punpckhdq
sub
clc
lods
cli
movsb
sti
das
push
cmpsb
ffree
cwtl
push
jl
inc
sbb
xchg
add
jl
cwtl
dec
test
push
scas
enter
sbb
cmpsb
pop
out
insl
aaa
in
std
roll
mov
dec
repz
sbb
fildl
stos
cwtl
and
dec
incb
mov
adc
mov
out
fisttpll
test
out
js
xor
cmp
leave
mov
rcl
add
int3
pop
out
dec
xchg
pop
sub
fcomip
test
out
pop
jbe
cmp
bound
and
jl
sti
mov
sub
xor
imul
jp
js
lods
lds
mov
push
test
dec
xchg
into
out
int3
test
addr16
dec
scas
aas
fmull
int3
sbb
imul
and
js
lahf
or
xchg
mov
inc
xor
adc
mov
pusha
and
pop
fildl
adc
jp
or
fiadds
lret
pop
aad
and
mov
sub
jmp
ljmp
sbb
test
mov
fcomps
mov
mov
sti
in
jmp
push
mov
xor
mov
cmp
mov
or
into
push
dec
andb
lret
add
popf
stc
int
sub
or
fldcw
dec
mov
mov
mov
sbb
mov
pop
cmp
movsl
mov
icebp
ljmp
sti
push
inc
xchg
push
xchg
push
push
test
data16
add
lods
std
push
sub
and
pop
add
fnstcw
pop
dec
pushf
jbe
lea
mov
xabort
mov
jmp
add
js
push
scas
mov
dec
stos
pop
punpckhbw
and
jne
lcall
xchg
fbstp
adc
xchg
fstl
ljmp
ja
mov
push
pop
dec
bound
push
aas
pop
dec
int
scas
inc
jnp
leave
aaa
dec
shl
loop
pop
mov
rcr
cmp
cmp
pop
push
push
jp
jbe
sbb
aam
and
or
adc
mov
lahf
fnstcw
jbe
mov
cmp
sbb
adc
xchg
ret
lods
out
bound
or
push
les
sub
cld
push
leave
mov
insb
mov
lret
xchg
or
jbe
dec
ljmp
or
ret
test
pop
and
outsl
leave
sbb
pop
jb,pn
hlt
mov
jg
and
jge
nop
sub
out
or
mov
jg
repnz
ljmp
dec
or
mov
dec
leave
adc
arpl
or
jnp
jne
jl
adc
sub
icebp
cmp
out
into
movsw
sub
std
aaa
jb
dec
pop
push
add
dec
add
adc
cmpsl
fsubs
adc
mov
xchg
insl
imul
jnp
pop
jge
push
int
fxch
xchg
fdivr
sti
fimull
das
mov
pushf
sbb
dec
insb
mov
adc
out
mov
jnp
xor
popa
popf
mov
mov
repz
inc
inc
pop
lahf
inc
lock
mov
sbb
sub
mov
cmpsl
enter
fucomip
movsb
mov
ljmp
lods
mov
sub
lods
in
dec
leave
xor
add
add
out
leave
push
in
xchg
sub
nop
in
fldenv
dec
movsl
mov
es
dec
sbb
jmp
lcall
mulb
test
cwtl
sub
pop
xchg
dec
icebp
scas
mov
push
or
fxch
sub
lcall
das
mov
dec
and
mov
sub
cmp
lds
jp
das
imul
cmc
pop
mov
fisubs
ss
pop
enter
inc
jno
push
xor
outsb
sub
out
push
lods
js
stos
cmpsb
sbb
enter
or
hlt
cltd
loope
or
icebp
rclb
fs
sub
mov
lods
cmp
lahf
popf
pop
rorb
or
mov
fmuls
aad
les
loopne
movsb
call
cmpsb
push
jecxz
add
outsb
pop
jmp
addr16
js
mov
insb
dec
xchg
ret
in
sub
jbe
lds
add
jg
leave
and
std
adc
jae
lcall
and
arpl
sbb
or
jle
lea
sbb
sbb
lret
imul
popf
call
test
inc
ret
imul
cltd
mov
daa
mov
xor
sub
clc
sti
clc
pop
rdpmc
rep
jmp
jne
fbstp
std
add
hlt
or
les
fstps
or
xorps
jns
ss
das
stos
leave
cwtd
addr16
pop
cs
and
mov
and
call
mov
mov
sub
arpl
jl
cmp
dec
andb
lock
cld
mov
add
call
nop
pop
test
in
ret
inc
mov
popa
lea
jmp
mov
pop
sub
out
xorb
in
jge
fidivrl
jmp
xor
mov
sbb
rol
out
test
cmpsl
popf
cmc
xchg
dec
or
sbb
inc
sub
or
and
mov
or
mov
clc
dec
dec
out
hlt
fsubl
mov
sbb
cmp
aad
push
mov
dec
jnp
lds
call
push
dec
fsub
inc
into
lahf
push
hlt
push
sub
out
mov
dec
sbb
fnsave
sub
push
mov
mov
ror
leave
pop
push
call
dec
test
out
lret
test
inc
adc
xlat
imul
sub
gs
and
loop
or
adc
cmpsl
andl
pushl
or
xchg
outsl
pop
pop
stos
xor
sbb
pop
out
mov
or
dec
ret
lcall
outsb
loope
cwtl
xor
and
lods
push
fldt
aam
inc
int3
push
xchg
movsb
lea
sub
jae
xchg
lods
cmpsb
mov
aaa
add
cmpsb
imul
cmp
insb
popa
lcall
insl
jecxz
sub
out
dec
xchg
jo
inc
or
mov
push
scas
sub
xlat
mov
sbb
add
jnp
pmaddwd
cmp
call
or
adc
inc
movsb
mov
mov
cltd
shlb
es
xor
and
sub
popf
push
mov
test
scas
pop
mov
lcall
fsubrs
jmp
out
jmp
sbbl
sbb
xchg
pop
and
push
jl
ror
jbe
scas
pushf
call
cld
jnp
push
out
mov
addl
in
lods
jle
mov
aaa
push
push
fisttpll
lods
cmpsb
lcall
out
inc
sub
fdivs
test
dec
sbb
sar
sahf
mov
mov
jbe
rcrl
data16
adc
hlt
sub
int
fnsave
mov
movsb
cmp
in
jne
stos
xchg
jb
mov
xchg
fs
push
pop
loopne
push
fisttpl
jbe
jmp
ret
pushf
rcrb
stos
add
jno
push
jnp
fmull
xor
outsb
sti
jne
sbb
sbb
dec
adc
shufps
ljmp
lock
addr16
f2xm1
fldcw
push
popa
inc
adc
aas
cmpsl
and
roll
dec
sub
out
out
dec
jne
ret
xchg
js
inc
adc
jmp
nop
jbe
adc
fidivl
sub
xor
sbb
pop
sub
push
inc
jns
in
stc
out
push
or
fwait
les
out
imul
stos
and
out
gs
mov
dec
xor
fwait
xor
je
sbb
sbb
fucomip
inc
xchg
sbb
sbb
mov
daa
out
ljmp
push
sbb
inc
gs
sub
lea
pop
in
mov
push
jl
mov
ljmp
or
sbb
and
push
fldcw
movsl
xchg
lock
mov
lret
fmul
sub
inc
popf
push
xchg
test
xchg
stos
fsts
sub
ret
and
jmp
aas
cmpsl
sub
stc
or
sbb
jnp
inc
repz
ljmp
ss
shlb
jge
sti
pushf
and
xchg
push
mov
shr
imul
popf
pop
out
cmpsb
push
push
sbb
int3
sahf
cmp
scas
scas
aam
or
jb
mov
pop
inc
stc
fcmove
cmp
shlb
cmp
cmp
fldt
fcmovu
fmuls
or
andl
adc
repnz
dec
clc
push
pop
jbe
es
or
mov
push
sub
in
push
lcall
aas
jnp
xor
test
outsb
mov
jno
mov
ret
jbe
je
inc
movsb
popf
addr16
popa
clc
xor
mov
mov
shlb
push
add
inc
rcrl
test
decl
dec
loopne
inc
out
lea
xchg
dec
adc
mov
add
inc
adc
sub
jl
jb
insb
lahf
cwtl
nop
or
inc
sbb
push
mov
jge
repz
in
leave
push
pop
fs
xchg
lcall
bound
jp
hlt
lahf
lods
ja
jnp
jmp
jl
mov
mov
sub
cmpsb
or
jno
xchg
pushf
insl
jnp
popa
call
ret
sbb
scas
cs
push
adc
std
movsb
in
bound
pop
movsl
sbb
imul
inc
pop
jmp
sub
insl
xor
mov
fstpt
mov
jns
sbb
sub
pop
pop
dec
xchg
fsubp
test
les
xor
cmp
sahf
mov
movsb
mov
sub
mov
addr16
cmp
ret
call
sti
out
sbb
stos
jb
jle
aam
js
sbb
addr16
sbb
or
out
xchg
jmp
rclb
sbb
fdivl
mov
loopne
cmpb
inc
mull
and
iret
dec
and
dec
adc
icebp
movsb
ret
bound
mov
mov
or
test
fldcw
sbb
popf
arpl
insl
cmc
enter
test
shr
push
sub
jge
inc
std
mov
cli
cltd
arpl
fstpl
fsubrl
sub
push
cwtl
arpl
in
shll
mov
int3
call
sbbb
addr16
nop
adc
push
sub
mov
repz
aas
inc
push
jmp
pop
sub
out
add
test
mov
nop
xor
and
int3
shl
xchg
cmpsl
push
xor
rorb
cltd
enter
ret
push
adc
loop
push
ror
pop
fidivl
mov
push
addb
test
sub
xchg
and
fld
cmpsl
enter
enter
stos
stc
arpl
leave
sbb
test
push
out
sbb
es
push
xor
jno
adc
ljmp
lret
adc
or
ljmp
scas
mov
cmp
outsb
push
lods
call
sub
mov
and
mov
mov
pavgb
repz
rorl
push
lret
out
mov
imul
dec
push
and
jbe
movsb
negl
jno
cmp
sub
fcomps
ljmp
cmpsb
sub
or
orl
pop
sbb
adc
cli
push
cmp
mov
jbe
imul
adc
mov
lods
xchg
xor
lods
dec
jp
pop
test
or
xlat
pop
mov
jg
adc
pop
fnstcw
push
outsl
xor
dec
sbb
stos
cmp
fsts
stos
lret
cmp
in
pushf
pop
or
scas
adc
loop
sarl
scas
dec
call
js
popaw
and
cld
insb
lea
mov
movsl
jb
js
test
fstpt
mov
test
or
or
jp
sub
sub
mov
push
out
pop
add
add
cmp
xchg
stos
cwtl
push
jbe
ja
movsl
cmp
add
sbb
ret
movsb
loop
inc
push
sbb
inc
ret
mov
leave
cld
cwtl
or
in
test
test
je
inc
sbb
nop
stc
repz
dec
out
lock
ret
clc
jp
mov
mov
rorl
sub
cmp
dec
hlt
inc
push
or
das
add
cmc
outsl
push
in
inc
fildl
ret
je
pop
xchg
mov
mov
out
insl
push
in
loope
adc
xor
pop
cwtl
mov
adc
mov
imul
mov
mov
pop
es
push
fbld
jmp
leave
sets
idivb
ffreep
push
jo
aaa
test
jmp
sbb
imul
clc
sbb
test
ljmp
cmpsb
jecxz
clc
sahf
mov
jge
fldt
push
ja
xchg
sahf
mov
std
adc
gs
cld
and
cli
lret
in
sub
movsb
sub
lcall
pushf
frstor
cmp
cmpsl
in
pusha
mov
adcl
jmp
cmpsb
pop
xchg
clc
mov
addr16
mov
mov
pusha
pop
rolb
mov
sub
out
js
subb
pop
cmp
pushf
sub
mov
out
scas
jl
push
mov
ud1
popa
nop
leave
xchg
shrl
sbb
pop
in
cli
mov
fisttps
mov
subb
lahf
subl
or
dec
xor
push
mov
jmp
cmp
mov
xor
push
sbb
xchg
cwtl
jae
push
out
ljmp
jo
xchg
lret
sbb
or
or
mov
cmc
mov
sbb
fistpll
push
sarb
call
fwait
movsb
ja
test
fisttpl
stos
or
or
mov
inc
shlb
mov
dec
std
les
adc
lods
in
xchg
sub
lds
add
adc
stc
adc
mov
lods
or
cs
call
sub
outsb
xchg
imull
loop
arpl
inc
sti
cs
sub
add
test
cmp
xor
sarb
xor
cmpb
push
dec
das
aas
pop
mov
pop
lcall
cmp
jle
adc
inc
cmp
movsl
jge
out
rolb
insl
mov
sub
cmpsb
xchg
mov
andb
and
mov
test
mov
pop
lcall
xchg
pop
dec
into
mov
or
mov
dec
aas
pop
push
jae
fwait
lock
fwait
cld
cltd
jae
loopne
out
cmp
mov
fists
es
sbb
mov
cmp
pop
das
mov
mov
jbe
das
outsb
inc
stos
daa
and
adc
xor
sub
inc
mov
stc
sti
aaa
inc
popa
js
mov
clc
sub
icebp
mov
ljmp
mov
rcrb
sub
fldenv
fchs
stc
jo
xchg
fidivl
lahf
aaa
sahf
test
les
jae
push
jo
add
das
xchg
push
mov
imul
and
sub
jbe
in
jmp
mov
lock
jo
sbb
inc
cmp
jnp
rclb
aaa
cs
dec
nop
xor
jo
push
ror
sub
or
xor
out
mov
mov
sub
jg
mov
xchg
rcrb
sbb
mov
sub
push
cmpsl
dec
or
pop
hlt
lods
jnp
jnp
shlb
or
imul
mov
inc
lea
lods
inc
leave
push
rorl
movsb
jnp
jmp
cmp
aaa
pop
gs
mov
cli
rorl
lods
mov
cmp
loopne
imul
in
lea
add
shr
lret
imul
aaa
pusha
jmp
and
inc
sub
cmpsb
fldcw
jbe
loop
into
je
push
xor
push
in
addr16
sub
cmp
rcr
adc
mov
sub
mov
mov
xor
scas
in
and
and
mov
pop
mov
es
mov
xchg
adc
sub
test
cmpsb
stos
mov
pop
sub
stos
push
pusha
jle
mov
insb
mov
xchg
out
mov
out
call
popa
and
lock
mov
test
pop
loope
nop
addr16
pop
and
mov
mov
arpl
inc
lcall
mov
mov
xor
xchg
clc
pop
dec
test
or
jmp
dec
mulb
imul
mov
mov
jecxz
ljmp
jns
lret
sub
sub
scas
mov
sbb
push
add
jmp
cmp
mov
sub
mov
pop
fldenv
ljmp
or
fiaddl
mov
mov
xor
sbb
sub
inc
sbb
aad
sub
shrb
inc
mov
in
les
cs
shl
test
ss
pop
or
icebp
xchg
stos
inc
mov
int
faddl
jbe
adc
sbb
cld
or
xor
pusha
and
mov
cs
lahf
cmp
fmuls
pushf
and
mov
mov
data16
mov
pushf
dec
loopne
test
mov
scas
cmpsl
mov
insb
xchg
sbb
ljmp
jmp
out
jge
in
leave
cmp
repnz
lcall
or
test
mov
rol
int3
loop
imul
cmp
sub
and
int
sbbl
test
fxam
adc
imul
push
inc
int3
adc
dec
cmp
sub
imul
sub
bound
pop
xor
imul
inc
ljmp
inc
sbb
loope
std
cmpsb
jnp
and
sub
fdivs
push
mov
jo
test
lcall
dec
test
jns
rcll
lods
out
dec
push
mov
out
mov
test
xchg
cs
and
dec
push
lret
call
ror
push
pop
fsubrs
and
fstpt
nop
xor
or
cmpsb
or
mov
push
loop
les
aaa
xchg
lret
jl
enter
mov
jl
mov
scas
sub
inc
outsl
scas
xor
imul
xchg
cli
sub
sub
das
imul
sub
stc
lcall
adc
cmpsb
pushf
jge
xchg
lret
rcrl
push
lods
rcrl
test
cmpsb
lcall
mov
enter
push
movsl
pop
jge
adc
divb
pushf
mov
in
mov
sub
push
aaa
jecxz
out
mov
xchg
jbe
mov
cmp
xchg
das
insb
jnp,pn
lahf
insl
lret
dec
sub
and
hlt
outsb
pop
mov
loopne
mov
cmp
mov
xchg
mov
les
mov
cltd
xlat
mov
mov
mov
xchg
int
inc
pop
shl
xchg
fdivs
cmp
xor
push
jae
cmp
into
outsb
sbb
mov
or
mov
into
movsb
pushf
gs
nop
pop
jno
lret
xor
xor
out
cmpsb
inc
aaa
push
pop
jns
jl
push
jmp
mov
fisubrl
ljmp
push
sarb
into
sbb
call
pop
sub
inc
inc
push
bound
or
pop
mov
xor
test
inc
idiv
popf
pop
mov
int3
test
cmp
js
mov
jno
fcoms
in
push
add
mov
jo
and
mov
jmp
mov
test
lret
pand
ljmp
pop
lods
or
pusha
int3
int3
std
sub
pop
sub
xor
mov
sub
adc
or
scas
fdivrs
push
lea
popa
pop
pushf
lea
pop
lock
int3
leave
or
mov
mov
fisttpl
and
std
testb
lahf
cmpsl
fbld
popa
je
sub
test
or
addb
push
xchg
dec
cmc
jl
xor
sbb
in
test
call
lcall
mov
lcall
cmp
xchg
scas
lods
pusha
mov
push
jmp
out
sbb
cmc
push
test
sub
pop
lahf
pop
in
inc
pushf
popa
push
sbb
leave
add
fnsave
lods
js
std
in
idiv
scas
cmp
pop
test
stc
sub
std
jl
dec
in
subl
sub
inc
test
adc
lods
icebp
xchg
mov
adc
xchg
jno
shll
push
sub
xor
jmp
cmpsl
je
in
int3
pop
inc
mov
fimull
xor
sahf
xchg
xor
stos
sub
adc
aam
push
cmp
ja
sub
dec
out
mov
loopew
movsl
stc
mov
imul
and
std
cmpsb
sbb
cmp
out
inc
add
dec
add
clc
daa
repnz
sub
cltd
xorl
jbe
ja
test
sbb
imul
dec
test
xchg
cltd
fadd
ficompl
adc
mov
mov
inc
sub
fs
rorb
cmp
cmp
jp
sub
jge
popf
mov
xchg
dec
inc
or
mov
shll
push
mov
push
xchg
mov
dec
lock
inc
fwait
sbb
clc
dec
aaa
mov
shlb
cmpsb
mov
jle
bound
movsl
test
fmul
sti
lahf
addr16
pop
inc
mov
mov
xchg
orl
popf
jge
test
xor
dec
jb
push
mov
inc
cmp
scas
inc
jbe
pop
xchg
fmull
lcall
cmp
ljmp
mov
arpl
addr16
lea
fcmovnbe
jae
mov
and
call
pop
lods
loop
iret
mov
data16
cmpsl
fnstsw
fimuls
popf
dec
push
dec
pop
push
insb
in
fcoml
dec
call
inc
jle
mov
sub
inc
xchg
sub
fisttpll
xchg
mov
inc
mov
lods
and
out
xchg
out
inc
gs
test
cs
aaa
and
add
sub
lcall
mov
test
push
sub
sub
test
adc
shrl
push
mov
clc
shrl
sub
and
inc
in
lret
popa
or
testb
mov
mov
mov
fcomps
push
xchg
loop
sub
xchg
fsub
mov
sub
xchg
not
cmp
std
enter
fmuls
pop
fldcw
enter
das
mov
scas
cmc
add
jp
into
dec
fcmovnbe
dec
cmpsb
rcll
pop
adc
cld
mov
xchg
mov
mov
jp
sub
mov
arpl
sbb
pop
mov
dec
out
sub
mov
arpl
into
popf
loopne
js
nop
stc
sbb
rolb
nop
sti
mov
les
mov
movsb
push
lret
lret
outsb
jb
movsl
and
pop
aaa
ds
repnz
je
jae
inc
fstpt
sti
push
jbe
fadd
cmpsb
xor
mov
xchg
mov
call
imul
jg
ds
push
mov
lds
dec
insl
es
or
fildl
lret
sahf
imul
pop
jb
int
or
sub
sti
and
pop
loope
je
jb
xchg
pop
push
out
push
lock
cmpsb
jne
dec
popf
xchg
and
iret
xchg
sbb
pop
pop
sbb
dec
repnz
test
jmp
sbb
nop
mov
out
cs
push
pop
pop
ja
lcall
cmp
addr16
adc
sbb
imul
inc
pop
mov
xchg
cmp
nop/reserved
ljmp
fnsave
adc
cmpsb
sbb
cmpsb
mov
idivb
mov
fs
or
push
aad
add
add
lock
gs
int3
test
in
das
mov
add
cmp
testl
jbe
insb
sub
dec
dec
je
lret
push
push
inc
out
xchg
fcompp
jecxz
jge
xchg
fsubs
push
jno
lahf
dec
test
sub
push
pop
and
in
out
add
adc
push
imull
sbb
adc
notb
sub
jno
inc
mov
mov
cmpsl
mov
lahf
xor
orl
shlb
mov
and
jo
sbb
jle
jecxz
push
enter
push
popa
push
jmp
xchg
xchg
add
fwait
push
mov
cltd
cmp
dec
adc
cmp
aad
dec
jl
xor
jle
rorb
jp
out
cld
lcall
add
pop
decb
jbe
test
jge
adc
inc
jbe
xor
scas
fwait
xor
mov
mov
cs
jle
xchg
mov
push
clc
dec
int3
movsb
cltd
int3
cmpsl
dec
xchg
cmc
lods
jp
loop
xchg
xor
mov
call
sub
sbb
dec
jns
fidivl
popf
sbb
insb
lods
test
nop
ja
or
shlb
test
movsl
in
sub
lcall
mov
jbe
outsb
xor
and
add
sbb
lcall
xor
imul
mov
push
jle
ljmp
aaa
jbe
add
mov
lcall
mov
mov
popf
add
popa
es
iret
cmpsb
xchg
mov
cltd
pop
in
icebp
std
lret
aas
fs
outsb
jle
sahf
and
hlt
jl
js
loopne
push
scas
jmp
nop
lods
stos
adc
or
jne
out
sub
mov
daa
cmp
js
imul
adc
sarl
inc
mov
shlb
adc
orl
jge
push
pop
jg
loop
fmuls
push
jge
mov
xchg
xor
mov
aas
dec
repz
fdivrl
lock
shrl
vmwrite
sub
mov
cld
mov
sub
pop
jo
or
testl
jne
fsubrl
mov
jecxz
mov
jnp
inc
pop
or
movsl
inc
outsl
dec
rcll
out
sub
mov
xchg
and
lods
cltd
psubsb
mov
cmp
mov
icebp
xor
frstor
jb
les
addr16
xchg
bnd
aaa
fs
push
inc
dec
testl
lods
ret
adc
cmpsb
iret
xlat
xchg
out
push
dec
or
scas
lock
das
mov
gs
cmp
and
fmuls
loopne
mov
in
mov
mov
or
bound
enter
adc
sbb
mov
int
lcall
mov
scas
xchg
dec
pop
mov
jge
xchg
mov
movsb
ror
or
mov
lds
mov
out
push
cmc
fwait
lahf
cltd
xchg
cmpsl
push
popf
xchg
in
int
mov
or
mov
les
mov
push
shl
mov
repz
test
add
scas
and
test
jo
scas
pop
mov
call
sub
cmp
pop
pop
mov
sarb
xor
mov
adc
ljmp
pop
clc
or
sub
mov
pop
jp
cmpb
in
cmpsl
mov
fwait
ja
xchg
adc
fstpl
test
pushf
dec
lret
pop
mov
jmp
xor
movsl
ljmp
cli
jge
je
jbe
push
jbe
outsl
sbb
sub
sub
add
js
push
sub
out
add
mov
xchg
lcall
scas
cli
fwait
shrb
xchg
sbb
jp
mov
jno
jns
ds
jmp
sbb
cld
cmp
daa
into
dec
sub
sbb
lcall
stos
mov
cmc
imul
dec
scas
adc
push
push
subl
adc
out
or
adc
pushl
in
lahf
adc
loopne
xchg
mov
andl
data16
sbb
sbb
out
mov
enter
jle
sbb
je
leave
loopne
pop
dec
daa
add
mov
pop
mov
push
ss
jge
jle
mov
xchg
jle
adc
mov
ds
mov
scas
es
adc
cmpsb
cmp
in
inc
dec
fdiv
mov
jge
cmpsb
fldcw
adc
test
enter
int
das
inc
push
xorb
xchg
out
or
mov
stc
mov
insb
sub
sbb
jmp
or
adcl
adcb
xchg
leave
ljmp
dec
insl
mov
dec
jb
and
adc
enter
add
sub
stc
dec
and
test
pop
mov
arpl
nop
adc
sub
out
mov
ret
ror
mov
adc
push
sub
orb
stos
xchg
and
inc
ljmp
and
stos
lret
dec
fcompl
imul
test
add
sub
inc
xchg
scas
addr16
mov
mov
lock
or
xchg
adc
lods
mov
rcrb
out
out
and
arpl
pop
test
mov
shl
dec
iret
mov
jmp
or
sub
xchg
lods
jl
sub
lcall
pop
xchg
dec
push
aas
pop
lds
loopne
insb
or
xor
addb
loop
pop
cwtl
and
out
sbb
in
pop
shll
rcrb
mov
test
cmp
push
popf
loopne
mov
mov
sub
mov
dec
dec
mov
dec
loope
add
in
pop
fildll
ljmp
jg
ror
adc
sbb
cmp
roll
jmp
mov
dec
mov
jmp
sub
into
inc
test
mov
push
dec
into
test
std
clc
loopne
xor
dec
xlat
and
add
cltd
ljmp
push
push
js
jmp
pop
stos
mov
ja
test
out
ljmp
insl
inc
push
add
adc
out
xor
dec
xchg
sti
lahf
xchg
and
or
mov
inc
or
dec
mul
push
adc
adc
outsl
fnsave
sub
scas
mov
mov
pop
imul
out
push
sbb
and
out
fsubrl
xchg
cs
lretw
clc
test
cmp
xchg
pop
pop
mov
add
sbb
jl
push
out
lods
adc
fsubrs
mov
and
mov
lods
test
imul
orb
out
cmp
xchg
popf
loopne
sub
shl
fsts
call
stos
xchg
push
in
cmc
jg
cmpsl
cmp
cmpsl
and
mov
mov
shl
pop
outsb
rclb
dec
pushf
adcb
stc
jp
ja
and
in
push
lahf
or
jnp
pop
jne
pop
cmp
sbb
add
cmp
and
or
pop
and
lret
xor
cmpsl
std
xor
cld
pop
orb
das
fcompl
push
dec
stos
leave
outsb
jp
sub
pop
pop
dec
xchg
push
add
pop
stc
mov
pop
pop
insl
mov
movsl
push
lret
gs
repnz
and
mov
lods
clc
hlt
test
loope
and
sbb
add
ss
outsl
adc
jnp
cmpsb
movsl
les
aas
clc
jb
sbb
sbb
push
add
les
fisubs
clc
movsb
int3
cli
fdivrs
cltd
or
scas
dec
fsubs
in
sub
push
push
jl
pop
loopne
xchg
xor
bswap
fbstp
test
mov
and
pop
js
add
das
leave
sbb
insl
push
push
xor
dec
insl
frstor
out
clc
repz
mov
pop
rclb
loopne
jmp
jmp
inc
arpl
or
es
addb
inc
enter
daa
jle
mov
xchg
jb
call
pushf
rorb
daa
dec
sub
sbb
jne
xor
xor
scas
insb
pop
test
dec
inc
mov
es
and
rolb
mov
pop
fmull
lods
hlt
cmp
push
stos
xchg
push
pop
ret
adc
add
mov
stos
ja,pt
cmpsl
mov
pop
lock
sub
sub
imul
mov
lret
pop
pop
jmp
push
dec
cmpsl
out
sub
jo
loope
pop
push
pop
jl
adc
subb
cmpsb
pusha
stos
gs
test
mov
stos
outsb
sub
mov
jo
push
pop
push
sub
stos
sbb
pop
dec
fs
dec
pop
out
fcompl
push
pop
stos
sub
jl
inc
pop
enter
cs
popf
cmp
movsl
or
out
sub
outsb
pop
xlat
pop
lret
in
mov
rcrl
sub
fisttpll
sub
push
filds
cli
sub
pop
fisttpl
test
xchg
movsb
push
push
mov
rcll
xchg
pop
push
cmpsl
lret
sub
jo
pop
lods
mov
mov
jne
popf
int3
jg,pt
out
int
fistpl
imul
xor
push
mov
clc
fsubr
sub
int
test
push
mov
addr16
mov
sub
push
test
push
rolb
sub
ds
pop
push
fstpt
pop
adc
push
inc
movsb
pop
out
cmc
lahf
push
push
fldcw
ret
push
test
movsl
cmp
test
push
lcall
add
scas
addr16
push
pusha
push
rcrl
lret
test
and
xor
sub
xchg
sbb
or
push
shrb
rol
mov
mov
push
aam
fists
stc
pop
sub
pop
std
mov
popa
cmpsb
push
xchg
pop
add
dec
mov
xchg
cs
in
dec
fbstp
in
jmp
int3
int
test
cmp
or
mov
mov
xor
xor
pop
pushf
jns
call
pop
lods
je
lcall
mov
jecxz
pusha
pop
cs
and
push
mov
stos
subb
shr
mov
mov
icebp
pop
psubw
lret
fidivrl
in
mov
mov
sub
jmp
push
adc
mov
stos
in
pop
xchg
or
hlt
pushf
mov
test
imul
test
and
fidivrs
sub
pop
jmp
pop
dec
pop
movsl
dec
clc
arpl
push
fistpl
clc
mov
adc
pop
in
out
in
jae
aam
mov
subl
test
sub
subl
cli
sti
pop
scas
lret
push
dec
pop
xchg
mov
and
cmp
outsl
mov
std
inc
dec
and
stos
xchg
decl
add
sub
shrb
test
cmc
nop
adc
nop
in
adc
nop
jle
cmp
stc
jns
mov
mov
mov
xchg
ljmp
aam
cmp
orb
sub
sub
sbb
aam
dec
pop
daa
cmp
popf
push
stc
dec
leave
jecxz
mov
push
out
or
cmpsl
into
aam
fnsave
outsl
pop
sbb
rcll
dec
cwtl
sbb
les
popw
out
xor
ss
and
and
lahf
sbb
into
pop
adc
scas
and
mov
push
jno
inc
sub
push
xchg
xrelease
or
outsl
cmp
cwtl
ja
dec
push
loop
inc
mov
push
or
push
test
xor
dec
shr
adc
pushf
push
rcrb
aaa
pop
stos
test
push
add
insl
shrl
sub
out
lahf
sbb
adc
mov
inc
stc
lods
imul
cmpsb
icebp
push
xchg
sub
pop
shl
ret
adc
cmp
cmpsb
aas
xor
xchg
sub
cltd
lock
mov
mov
mov
add
cmpsb
inc
cmp
nop
sbb
xor
jge
cmpsb
jae
add
xor
adc
popa
jbe
ss
cmp
adc
mov
jbe
jo
mov
loopne
add
cmp
cmc
in
subb
gs
xchg
psubsb
mov
sbb
mov
xchg
iret
mov
pop
ljmp
push
or
mov
roll
les
push
adc
imul
sub
in
sub
jb
xor
pop
xchg
nop
gs
adc
cld
arpl
sbb
lahf
cmpsb
jp
push
stc
cmp
cmpsl
add
pushf
sub
sub
int3
or
jnp
jne
cmp
inc
pop
lcall
and
fcomps
cltd
or
xchg
outsl
cmc
or
lods
jbe
sahf
popa
pushf
mov
outsl
jge
inc
lahf
sbb
push
movsb
add
mov
or
in
fs
sbb
cmp
and
adc
mov
stos
cmpsb
xchg
jno
mov
les
out
call
ret
cmp
inc
int3
jl
ljmp
cmp
mov
xor
inc
idiv
mov
mov
push
lahf
in
jne
adc
loop
jl
movsw
mov
scas
jge
sbb
test
sub
dec
leave
into
or
outsb
enter
pop
es
jo
ja
pop
xchg
push
cmp
add
call
xor
pop
sub
lods
dec
pop
mov
shrl
paddsw
mov
je
jns
mov
push
lcall
mov
es
and
cs
pop
adc
add
std
mov
test
or
sbb
sbb
xchg
not
ljmp
test
cmpsl
add
jmp
push
cmp
loopne
pop
add
test
add
pop
push
movsb
or
cmp
pushf
mov
lret
aam
sub
cmpsb
push
icebp
lods
pop
push
mul
lds
fnstsw
dec
negb
cmpsl
ja
outsb
jmp
rol
rorl
aad
pop
out
cmpsl
inc
lds
sbb
stc
pop
rol
jnp
jmp
into
or
and
lods
pusha
aam
inc
cld
je
mov
xor
push
arpl
js
loop
out
push
jb
dec
inc
mov
incb
out
jbe
jo
cmpsl
jnp
mov
add
pushf
in
dec
jb
cmp
push
jl
sahf
sub
dec
adcb
call
ffree
loop
ret
pusha
add
xchg
adc
mov
push
push
shrl
sub
enter
addr16
jmp
adc
movsb
sbb
orb
inc
and
aam
dec
fwait
mov
and
or
loop
stos
lea
pop
push
movsb
xor
loopne
in
aas
sbb
cmp
popf
fwait
dec
and
xor
pop
testb
adc
push
xchg
repz
js
sbb
xchg
fcmovb
sbb
test
sbb
stc
stos
jbe
out
pop
loopne
dec
xor
rorb
ljmp
ret
inc
cli
mov
push
mov
mov
sub
loopne
sbb
xor
clc
sub
mov
mov
jecxz
jne
mov
bound
cmp
out
add
cmpsb
aad
jp
lret
adc
jl
div
dec
sbb
adc
pop
ret
pop
loopne
jb
jbe
push
sbb
xor
test
call
fucomi
loop
jae
sub
jnp
push
idivb
sub
inc
out
loopne
in
jo
push
pop
sahf
fidivl
fwait
enter
dec
ljmp
sbb
pop
mov
mov
lods
lods
jae
mov
xor
imul
loopne
out
cld
ljmp
lahf
dec
push
stc
inc
fdivrs
mov
inc
flds
jbe
ret
movsb
leave
loopne
pushf
cmp
lds
cmp
xchg
cmp
push
sahf
cmp
xor
dec
dec
push
js
loope
pop
and
aam
lods
sbb
stos
gs
xor
stc
call
adc
popa
icebp
cmp
mov
cmp
and
lcall
cmp
jmp
stos
in
dec
xchg
cmp
sarb
pop
ja
sub
mov
sbb
hlt
or
mov
stos
dec
in
dec
jmp
lea
dec
daa
les
mov
sub
fcmove
jbe
adc
jmp
subl
js
dec
out
iret
popf
pop
and
xlat
mov
popf
and
cmp
ss
xor
cmp
add
cmp
xor
pop
mov
sbbl
dec
adc
jmp
lahf
cmpsl
lret
cmpsb
sbb
pop
int3
cmpsl
pop
ret
lahf
aad
test
cmp
push
mov
and
jae
cli
insb
decb
inc
fsub
sub
push
jp
sbb
jne
in
pushf
sbb
mov
sbb
adc
dec
sbb
jnp
pushf
mov
rcrb
sarl
and
stc
nop
mov
cltd
adc
dec
popf
sbb
cwtl
outsl
cltd
lods
std
nop
jbe
or
jecxz
cltd
sahf
es
bnd
sbb
testl
jmp
xchg
dec
jnp
push
js
mov
nop
cmp
stc
xchg
sub
lds
ljmp
ja
fidivrl
mov
mov
fcom
movsb
das
push
add
pop
mov
pop
push
and
shll
mov
mov
sub
icebp
stc
cwtl
inc
adc
pushf
test
lods
cmp
cmp
cmp
sahf
test
movsl
shr
dec
andb
cmp
pop
jo
pop
gs
in
mov
jp
mov
fsub
pop
mov
cmp
xchg
or
in
sub
cmpsl
xor
clc
pop
dec
lret
test
dec
xor
dec
jp
mov
xchg
aam
out
or
xlat
das
push
imul
icebp
or
ljmp
pop
xor
jne
lahf
scas
jge
xchg
dec
sbb
fistps
mov
pop
pop
lahf
dec
mov
mov
add
test
push
sbb
inc
repnz
pop
aaa
ret
aad
or
cltd
test
xchg
xor
enter
icebp
cmpsb
push
sbb
cltd
sub
push
cmc
mov
dec
and
addl
cmc
sbb
gs
xchg
shlb
loop
mov
jbe
lahf
popl
test
fucomi
push
outsb
mov
out
push
push
in
inc
movsl
pop
sub
out
pop
xchg
pop
pop
adc
arpl
cmc
jmp
cltd
lea
mov
shrl
ljmp
mov
pop
fdivr
sbb
popf
pop
dec
dec
push
cs
fiadds
call
sbb
inc
mov
stc
dec
jbe
sti
sub
pusha
scas
mov
leave
stos
js
aaa
dec
xor
inc
aas
adc
push
xchg
inc
lret
pop
and
leave
sti
push
inc
test
sarl
fldcw
movsb
incl
test
hlt
rorb
lahf
in
subl
sahf
pop
add
clc
sub
sub
leave
sbb
dec
cmp
jmp
add
aas
loopne
mov
or
cmp
mov
lahf
sar
xlat
scas
iret
lods
jle
test
and
add
fsubr
cmpsb
or
adc
mov
test
jle
outsl
lret
loope
xchg
mov
push
mov
sub
mov
popa
inc
mov
jne
jmp
cmp
jo
in
xchg
sahf
call
sub
nop
pop
adc
rclb
mov
jae
cmp
test
push
lret
icebp
pop
xor
mov
fwait
xor
repnz
icebp
add
sbb
xorb
xchg
ret
jle
idivb
bound
or
addr16
out
inc
sub
inc
mov
cmp
ljmp
dec
leave
cmp
outsl
jge
popf
mov
fcoml
jp
clc
fdivrp
data16
movsb
out
jge
std
divb
cmpsl
mov
lea
insb
fimull
das
pop
popa
loopne
cli
testb
hlt
fsincos
pop
mov
loope
scas
xchg
imul
mov
xor
xchg
nop
loopne
in
es
jb
mov
outsb
xchg
insl
pop
push
push
xchg
ljmp
add
mov
sub
and
mov
loopne
pop
or
minps
mov
dec
mov
data16
outsb
repnz
pop
sub
adc
sti
popf
ljmp
sahf
cwtl
cmpsb
stos
mov
mov
jnp
bound
mov
mov
xor
pop
pop
mov
or
movsl
inc
and
test
pop
add
or
out
cmp
sub
push
dec
adc
out
inc
inc
cmc
outsl
xor
mov
mov
sbb
dec
mov
lods
inc
je
std
xchg
fs
jp
das
or
enter
ret
orb
outsl
mov
sub
push
iret
loope
xchg
ret
mov
or
cmpl
in
cmpl
fsts
push
push
sahf
xlat
xor
or
out
aad
adc
jnp
stc
call
test
xchg
mov
into
mov
iret
cmp
mov
aaa
pop
mov
nop
stc
sub
xor
or
call
aaa
push
sub
pop
pop
loopne
sub
mov
lcall
adc
popf
and
test
sti
xchg
pop
sbb
insb
lock
aas
pop
mov
cs
jl
inc
int3
cmpsl
jmp
sbb
mov
insb
push
mov
cmp
inc
outsl
adc
leave
mov
and
fs
sarb
adc
cmc
outsl
sbb
sub
sub
leave
das
lahf
clc
lock
and
std
dec
inc
mov
ret
sbb
rorb
jl
clc
mov
mov
das
stos
fcom
enter
inc
xor
and
sub
inc
lcall
add
jl
and
data16
test
outsl
insl
shrb
leave
cmpsb
in
sub
push
mov
sub
gs
insb
aam
sub
xchg
pop
iret
adc
inc
sahf
lea
pop
lret
mov
cmp
xor
xchg
cmp
paddsb
fsubrs
cmpsb
loope
in
push
imul
jbe
shll
mov
movsb
pop
jnp
dec
stos
leave
jb
dec
push
cmp
xor
inc
popa
cmpsl
fnstenv
xchg
add
imull
xor
outsl
pop
add
push
add
xchg
incb
xchg
or
jbe
mov
nop
fdivl
jp
mov
jl
cli
dec
mov
cmp
mov
sbb
add
jg
cltd
pop
out
or
ja
mov
lods
int
cmp
sbb
mov
lea
pop
ret
mulb
test
push
fldcw
mov
push
call
nop
mov
or
push
nop
rorl
mov
leave
cmp
arpl
incl
or
shrl
push
in
sbb
and
movsb
rclb
xor
aam
jle
sbb
fsts
mov
jg
scas
pop
fnsave
inc
add
sbb
xor
sahf
sub
xchg
push
shll
dec
ja
scas
jnp
dec
pusha
fstp
lods
int3
or
or
fistl
les
out
pop
pop
in
xor
stc
test
out
call
out
pop
jge
std
js
mov
std
insl
pop
faddl
adc
mov
test
mov
movsl
and
dec
fstps
notb
rorb
or
testl
push
and
jmp
mov
stc
sbb
dec
sbb
test
sbb
pusha
push
pop
jo
mov
inc
adc
mov
fsubr
sbb
xlat
lods
or
mov
push
sub
ja
mov
push
inc
insb
and
stc
mov
out
cmp
and
sub
mov
dec
jecxz
test
je
push
out
mov
iret
sub
pop
jge
push
lods
sbb
mov
shl
call
add
add
stos
pop
pop
mov
enter
scas
push
inc
add
lds
fisubl
cmp
mov
pop
insb
icebp
loope
int3
xchg
in
or
inc
xchg
popf
xlat
jbe
mov
scas
pop
nop
cmpsl
out
aad
cmpsb
push
mov
dec
jmp
jle
ljmp
jmpw
jmp
inc
test
cmp
rcll
dec
inc
mov
mov
fwait
and
or
sub
dec
clc
mov
cvttps2pi
call
inc
stc
xchg
lret
sub
xchg
sub
lea
enter
dec
into
pop
xor
mov
fildll
test
lods
sbb
pop
loop
lcall
adc
cltd
cs
fdiv
es
xor
sub
cmp
imul
xor
fdivr
sub
adc
loop
mov
sub
cmpsl
lods
mov
xchg
xor
mov
int3
dec
xor
jo
sti
push
movsl
sub
pop
test
enter
lock
aad
xor
out
add
jbe
xor
fimull
outsb
jle
xor
dec
cmp
js
xchg
mov
or
and
sbb
xor
mov
adc
push
cmc
jle
stos
xchg
xchg
xor
add
rorl
scas
aaa
push
idivb
bound
xchg
sub
cmpsb
sbb
jecxz
loope
imul
mov
call
repnz
sub
js
cmpsb
mov
int3
rorb
xor
mov
and
scas
cwtl
xor
pushf
ret
pop
inc
push
test
js
in
dec
jb
in
adc
data16
rcl
in
mov
inc
cmc
cltd
add
inc
addr16
adc
out
ss
adc
push
dec
mulb
sahf
mov
sti
and
xchg
push
pop
sub
lret
call
loopne
mov
aaa
dec
daa
mov
and
test
mov
push
aaa
loope
imul
cltd
les
jmp
sub
jne
or
jmp
int
stos
mov
test
xchg
cwtl
fwait
hlt
xor
or
fildll
scas
add
into
inc
or
cli
sahf
inc
in
cmp
mov
fimull
popa
xor
cmp
pushf
sub
mulb
int3
shrl
ficomps
or
decl
sti
lcall
mov
or
mov
cwtl
call
insl
filds
movsb
or
lea
aad
dec
lods
scas
xchg
cmp
aas
lods
adc
testb
inc
cs
das
sub
cmp
inc
sub
sub
pushf
mov
mov
push
leave
std
out
out
pusha
insb
or
or
or
test
leave
into
outsl
shlb
jno,pn
lods
negb
in
dec
cmpsl
push
sub
add
pop
pop
shrl
dec
lahf
adc
pop
popf
fldl
push
pop
pop
jbe
imul
icebp
inc
int
cmp
sub
cmp
lret
in
inc
sub
cmp
ror
in
shrb
loopne
mov
mov
dec
sbb
sub
pop
fsub
xor
lret
enter
fiadds
sub
add
and
rcr
fldenv
je,pt
dec
js
sbb
jmp
pusha
or
jl
or
inc
and
orb
push
add
dec
fsubr
jbe
push
lahf
dec
int3
xchg
jo
add
and
iret
push
inc
xchg
xchg
adc
or
int3
js
fdiv
cmpsl
call
jnp
iret
cmp
jbe
test
mov
hlt
insb
nop
popw
mov
xor
out
mov
loope
scas
stos
jl
or
ret
jnp
cmp
lods
cwtl
inc
mov
jae
jo
dec
cmpsl
jae
daa
aam
ficoms
mov
jne
in
jo
pop
imul
mov
jnp
aas
jo
and
and
mov
mov
lret
ret
dec
fidivrs
ror
mov
jbe
inc
cmp
jmp
movsb
mov
sahf
popf
arpl
ret
add
loop
lods
xor
pop
cs
sti
repnz
inc
push
addr16
jmp
mov
pop
dec
dec
xor
cmp
jb
orl
jo
jbe
in
xchg
in
pop
push
rorb
and
imul
inc
loopne
and
jne
jge
dec
out
mov
mov
lret
into
or
or
ret
out
ror
loope
cmpsb
call
dec
mov
jle
stos
test
jns
nop
jae
gs
shlb
adc
inc
pop
or
add
dec
push
nop
in
sbb
lahf
push
fstps
movl
js
pop
insb
in
dec
cmpsb
pop
xor
jmp
loopne
adc
out
dec
jge
aad
js
sub
das
in
gs
inc
cwtl
and
andb
push
jno
adc
push
adc
imul
jmp
add
bound
sbb
dec
xor
ja
jp
mov
mov
mulb
adc
hlt
jno
xchg
loopne
ret
dec
dec
xchg
jecxz
add
dec
cmpsl
and
lods
adc
and
mov
pop
lahf
cli
lret
sbb
int3
sub
cmpb
jnp
frstor
inc
push
pop
lret
or
mov
stc
out
sbb
add
push
pop
mov
test
in
cli
mov
pop
ss
add
sub
das
lret
repz
insb
sub
out
hlt
jbe
rol
lret
cmp
ret
xor
idivb
fisttps
xchg
jl
jmp
mov
push
lods
xchg
dec
push
outsl
push
je
jg
testb
in
xbegin
movsl
xlat
sub
xlat
bound
sbb
add
fucomip
xor
jns,pn
cmpsl
and
sbb
leave
or
cmp
sub
push
add
jnp
mov
sub
mov
stos
mov
push
bndstx
outsl
lcall
test
lcall
lahf
jbe
sub
addr16
pop
mov
js
xor
mov
cmp
in
sbb
stos
std
sub
faddl
mov
lods
adc
push
jbe
aam
ljmp
lds
pop
and
shlb
mov
call
jbe
dec
xor
out
outsb
jg
cmpsb
lods
push
jae
or
sbb
test
lahf
xchg
jae
adc
leave
orl
cmpsb
scas
cmpb
pop
mov
and
jbe
fnstsw
loop
lods
rorb
cmp
stc
popa
xor
les
popf
fmulp
or
popa
jns
pushf
cmpsb
push
test
sbb
sub
jo
mov
sub
push
jns
adc
xor
sbb
sub
je
pop
fcoml
push
xchg
lret
push
xchg
fs
mov
push
cmpsb
inc
jg
xor
test
add
dec
or
lret
jmp
mov
push
push
lea
movsb
lahf
cmc
callw
out
and
sub
pop
xchg
repz
lock
and
pop
mov
into
cmc
xor
sahf
cmp
scas
mov
jmp
and
shlb
loopne
js
inc
push
lods
loop
or
in
adc
sbb
jnp
test
enter
push
add
cmpsb
xchg
xor
sbb
stos
jnp
lods
ret
lahf
test
int3
xor
xor
cmp
aas
pop
mov
lahf
dec
push
mov
bound
mov
jbe
xchg
mov
out
jg
popa
dec
lods
mov
movsl
decb
xor
addr16
cli
lods
cmpsl
push
mov
addl
adc
lock
jp
xor
sub
xor
subb
push
lods
call
imul
mov
es
notb
add
sbb
and
lock
sub
cmp
fcomps
call
adc
push
or
mov
test
jle
pop
popf
outsb
aaa
xor
cmp
in
pop
or
ds
xchg
incl
fdivr
dec
add
pop
mov
jne
jnp
sbb
clc
popf
call
imul
or
fnstsw
sub
les
test
jb
fs
es
loop
pushf
testl
jl
gs
push
loope
and
pop
cmp
popa
addr16
imul
and
sub
mov
and
cmpsb
or
xor
sub
lahf
loopne
push
ss
popf
sub
clc
mov
js
dec
rclb
test
inc
jmp
adc
imul
mov
mov
and
pop
ds
sub
addr16
testb
jge
jecxz
mov
dec
xor
test
mov
fcoms
pusha
inc
mov
sub
dec
cmp
pop
jmp
mov
dec
push
cmp
les
cmp
test
mov
cmc
add
inc
mov
push
lcall
pop
mov
gs
fs
sub
push
and
mov
add
adc
nop
fcoml
pop
cmpsl
add
in
mov
lret
pop
push
sbb
cmpsl
iret
dec
cmpsb
insb
les
or
addr16
int3
test
mov
outsl
enter
in
inc
mov
sbb
cmp
imul
in
int3
std
test
inc
enter
mov
mov
out
sbbl
push
push
mov
std
testb
jmp
lods
leave
add
push
stos
dec
mov
or
mov
mov
jecxz
sub
enter
add
mulb
mov
and
pop
scas
ja
push
sub
movsl
cmp
add
cli
clc
cmc
or
shl
add
movsl
push
or
xor
push
jge
insl
xchg
sahf
xor
sub
fwait
clc
mov
push
iret
pushf
ficoml
cmpsl
rclb
in
dec
pop
pop
std
ljmp
test
subl
jae
mov
push
loope
jge
lret
xchg
xor
loop
stc
cmp
jp
push
or
test
pop
sub
pop
push
repz
add
test
add
and
xor
jl
jno
shl
or
or
out
fstpl
fsts
addr16
inc
pushf
jle
scas
jp
stc
lds
sub
cmp
loope
icebp
push
push
sub
imul
cmpsb
and
push
xchg
loope
dec
loop
jb
inc
loop
push
aas
enter
rol
push
mov
clc
pop
dec
inc
rcl
and
push
lods
sub
and
cmp
test
addl
loope
insb
and
jo
fstpl
les
or
dec
jbe
sub
sbb
addr16
cmpsl
jbe
jle
mov
js
aas
test
mov
gs
outsb
andb
dec
mov
inc
mov
inc
out
xor
mov
push
dec
inc
int
imul
in
lods
push
sbb
adc
test
xor
mov
mov
in
ljmp
dec
shll
in
adc
test
mov
ret
jmp
js
sahf
cmp
in
dec
repz
js
fwait
fwait
lods
fidivl
inc
push
or
pop
push
es
rcrl
push
xor
cmpsb
cmp
data16
filds
cmpsl
pop
mov
sbb
dec
or
insb
cmp
mov
fisttpll
mov
addr16
leave
or
sub
mov
xlat
mov
int3
and
dec
inc
push
je
pushf
lods
test
fstpt
or
mov
add
dec
mov
mov
push
les
dec
outsb
dec
stc
jo
jl
cmpsl
push
stos
popf
lods
inc
push
in
mov
mov
push
mov
loopne
std
fcoms
orb
and
cmp
mov
stos
jnp
xchg
push
dec
data16
lcall
iret
out
les
xchg
pop
mov
pop
jl
inc
xchg
xor
iret
lock
gs
fs
fdivl
repz
lret
gs
loope
add
repz
popf
cmc
adc
xchg
inc
loope
cmpsl
jmp
gs
bndldx
or
mov
pop
dec
or
xor
or
lcall
movsb
inc
out
je
sbb
lods
mov
test
enter
push
or
repz
repz
test
cmc
enter
pushf
pushf
stos
and
int3
xorl
adc
fisubrs
xchg
pop
subl
jbe
mov
push
clc
adc
inc
or
add
xlat
or
adc
cmp
mov
shlb
call
push
dec
cmpsb
loope
rcr
add
popf
sbb
loop
adc
imul
push
xor
fstpl
pop
loop
sub
mov
in
cmp
xchg
xor
mov
in
ja
gs
xchg
rcr
clc
sub
movsb
mov
sub
repz
arpl
pop
push
shl
fdivrs
stc
lods
mov
jae
sub
jne
lea
call
cmp
shrb
jp
in
pop
test
xchg
stos
fstl
sub
push
xor
insb
sub
cmp
and
lods
mov
sbb
imul
mov
cmp
mov
lods
sub
enter
jmp
pop
mov
rolb
roll
push
mov
fsubrs
inc
inc
orl
xchg
push
jbe
push
xchg
push
jmp
outsb
cmp
in
ljmp
out
xor
sub
cmp
cmp
mov
nop
stc
mov
call
xchg
sub
cmpsb
lret
sbb
mov
adc
or
outsb
into
jo
shrb
sarl
sub
cmp
aaa
or
adc
xchg
in
int3
call
arpl
loopne
inc
shll
cld
xchg
dec
mov
cld
adc
cmc
shrl
sub
and
pushf
out
sub
mov
jl
mov
push
inc
dec
lcall
mov
sub
les
adc
dec
lods
jecxz
lock
cmpsl
enter
jl
and
add
dec
pop
dec
jo
add
scas
xchg
out
cwtl
mov
in
enter
mov
pushf
adc
in
int3
leave
adc
dec
mov
insl
jnp
lret
out
lret
loopne
xor
mov
fcomps
mov
dec
pop
adc
lret
fcoml
insb
das
js
push
xchg
iret
data16
in
mov
lock
or
outsl
inc
xchg
shll
ret
lea
pop
out
fwait
pop
xor
lret
cmp
unpckhps
and
lahf
jecxz
cmpsl
or
lds
arpl
mov
lcall
cmpsb
leave
das
jb
mov
int3
hlt
rolb
sub
stos
in
into
mov
iret
sbb
pop
pop
or
mull
push
jns
les
sub
negl
out
mov
into
loopne
lods
mov
fsubrl
adc
or
arpl
ret
inc
push
movsb
lret
aaa
push
jecxz
mov
mov
imul
aaa
push
pop
push
lock
cmp
mov
rcrl
pusha
lods
push
inc
mov
add
sbb
push
push
pop
ss
push
jmp
xor
mov
subl
jge
rcrb
ss
insl
dec
pop
inc
fdivr
sbb
lea
or
enter
stc
inc
ret
dec
mov
clc
aam
enter
add
push
cwtl
dec
cli
xor
dec
mov
lret
lods
gs
lods
or
mov
nop
and
movsb
pop
pop
jmp
mov
nop
and
sbb
push
movsb
cmp
push
fcmovu
out
ljmp
mov
daa
push
stc
lock
mov
sbb
call
xlat
addr16
xor
dec
cmpsl
movl
std
cli
popa
dec
shl
xor
inc
shrl
cmp
mov
in
cmpsl
cmp
inc
mov
imul
mov
pusha
jg
out
cmpsl
and
int3
in
in
jnp
jle
push
lahf
cmpsb
movsl
stos
sub
inc
test
imul
sarb
sti
fs
inc
ret
adc
xor
xorb
sti
cmpsl
dec
in
sbb
test
cmpsb
inc
mov
outsl
or
lret
mov
mov
in
insb
fs
pop
jbe
lret
dec
stc
cmp
push
fisttps
into
lret
cmp
cmp
xchg
mov
xlat
ds
add
mov
data16
pop
pop
dec
imul
lea
sub
jnp
std
xor
jg
dec
pushf
jmp
fnstcw
add
push
loope
add
fucomi
push
aaa
sti
sahf
into
fcmovu
in
sbb
sahf
sbb
sub
or
leave
sub
addb
mov
add
xchg
or
cmpsb
push
or
cld
lcall
aaa
jbe
jl
test
iret
ret
pop
repnz
shrl
in
imul
call
jl
in
mov
xor
mov
enter
fsts
mov
cmc
fisttps
rcll
gs
inc
and
enter
fcoms
js
mov
pop
sbb
lds
push
cmp
adc
shll
arpl
aam
int
icebp
jle
sub
aam
cmpsb
xor
enter
cltd
iret
adc
imul
jecxz
sbb
fistpll
push
inc
ficoms
xor
dec
rcrb
and
repnz
sbb
mov
movsb
sub
into
push
jmp
mov
push
sbb
mov
sti
int3
pop
popa
pop
mov
mov
int3
dec
lret
pop
cmpsb
adc
loope
lods
inc
sbb
je
and
sbb
push
pushf
or
cmp
icebp
popfw
push
in
pop
jmp
ljmp
std
push
enter
inc
test
in
jno
pop
fprem
jmp
movntps
jo
sub
and
popf
sti
lods
cmp
cmp
xchg
mov
xchg
sub
fldl
or
xlat
sbb
incb
imulb
leave
cmpsl
xchg
mov
pushf
pop
push
sbb
jae
push
outsl
or
jmp
push
adc
jae
addl
and
lods
xchg
nop
dec
add
outsl
mov
shll
mov
outsl
pusha
mov
pop
pop
sbb
int3
xchg
arpl
hlt
int3
and
mov
ret
jb
orb
les
xor
insl
in
fcoml
pop
insb
ficompl
xor
jo
xchg
cmp
xchg
lret
test
jae
fadd
loop
cmpsb
or
imul
mov
or
out
mov
and
lea
js
cwtl
aas
fisubrl
mov
dec
aam
stc
lock
mov
mov
jo
dec
andb
sbb
mov
mov
xor
daa
sarb
fidivrs
jnp
arpl
lock
dec
int
mov
jo
dec
iret
cmp
stos
int
sbb
enter
xchg
fbstp
outsl
sbb
jle
jge
repnz
out
inc
pop
pop
mov
imul
cmp
lds
inc
add
and
leave
mov
pop
add
sbb
leave
xchg
push
addr16
out
dec
inc
push
mov
mov
loop
dec
inc
std
sbb
call
mov
into
outsb
mov
test
xor
cwtl
fiaddl
dec
xchg
fwait
push
mov
lret
lds
addr16
sbb
jle
aam
arpl
out
dec
data16
stc
jp
sbb
dec
lock
cmp
adc
dec
push
jecxz
jmp
inc
cmpsb
inc
mov
outsb
mov
ret
mov
mov
mov
jns
loope
out
sbb
shll
and
loopne
push
cmp
shrl
mov
test
dec
push
cmp
pop
mov
int3
pop
fwait
sub
cmp
mov
lods
sbb
inc
jnp
mov
sti
xchg
in
pop
ret
inc
jecxz
imul
les
jmp
cld
sbb
outsl
jge
xchg
xchg
or
xchg
out
lahf
popa
add
cwtl
cmpsb
add
fidivl
outsl
sbb
add
std
adc
data16
sub
mov
lahf
popf
and
mov
cmp
lahf
mov
aad
std
cmpsb
sub
xor
lods
pushf
nop
out
es
or
mov
out
mov
and
popa
adc
xor
push
pop
sbb
imul
lahf
rorb
daa
add
mov
lods
or
jb
xor
rcl
and
lret
or
out
or
xor
out
movsl
jl
std
int3
outsl
pushf
mov
sarb
mov
pop
cmp
sbb
mov
imul
adc
and
call
outsb
popf
cld
in
stos
rsm
lahf
jb
shrl
lret
mov
insl
or
xchg
jecxz
int
out
shrl
pop
jbe
inc
dec
xor
insb
xchg
loope
into
pusha
subl
stos
or
ja
and
or
cmc
xor
push
cmp
dec
aaa
jle
test
or
outsl
sub
cmc
je
int
imul
imul
xchg
insl
jb
repz
lods
sbb
fwait
loopne
bt
subl
fsubrl
jno
push
movsl
sub
and
aad
jmp
inc
sub
xor
bswap
and
jecxz
in
adc
stos
mov
dec
stc
jmp
in
sarl
sbb
in
je
in
inc
imul
out
jp
push
pop
ja
outsb
cmpsb
jle
mov
subb
dec
jnp
icebp
xor
and
faddl
push
mov
out
cmp
mov
aaa
sbb
cltd
xor
lods
add
scas
jecxz
jp
inc
cmp
enter
fdivrs
mov
jne
pop
add
jbe
jg
pop
lock
test
mov
inc
mov
mov
mov
or
push
lods
ljmp
cmp
gs
pop
pop
mov
mov
pop
mov
cli
je
outsl
lcall
fs
pop
xor
hlt
pop
and
lret
cmp
ret
cltd
sti
leave
cli
hlt
xor
cmp
repnz
aad
cmpsl
clc
push
jae
rcl
push
mov
push
clc
aam
or
out
mov
aam
adc
pop
xchg
aaa
jb
popf
rcrb
cwtl
sarl
arpl
xorl
mov
xchg
les
xlat
out
dec
repz
cmp
arpl
insl
mov
sub
popf
inc
inc
inc
je
leave
jb
inc
cmp
pop
ret
dec
stc
pop
ds
push
test
rclb
pop
inc
push
imul
xchg
jno
xor
lcall
jnp
ja
cmpsb
fmuls
lods
push
dec
ret
fldcw
imul
push
outsl
jb
inc
stc
aad
push
mov
and
jg
sbb
lfs
mov
mov
push
jge
insl
inc
out
mov
lds
ficoml
std
add
fdivs
loope
std
sbbb
jno
outsl
imul
es
imul
add
push
jl
lea
or
lcall
addr16
fimull
out
jge
icebp
mov
jg
adcb
sub
ret
mov
jo
mov
push
in
notl
movsl
adc
fistpl
outsl
sbb
std
add
lods
inc
mov
pop
repnz
fmuls
jne
int3
jo
dec
xchg
rolb
xor
movsb
filds
scas
je
aad
das
out
mov
std
mov
sub
sbb
insb
dec
rcr
push
sub
enter
out
insb
add
dec
push
xchg
jle
xchg
movsl
pop
jno
xchg
cmp
sbb
sbb
inc
xor
adc
test
or
enter
ss
addl
addr16
les
fildll
dec
insl
push
insb
mov
enter
in
rol
jmp
dec
and
pop
add
inc
and
aam
or
pop
pop
xor
push
and
mov
loopne
cld
pop
dec
scas
cmp
aam
aas
jnp
cmpsl
fs
mov
lock
lcall
push
or
or
outsl
lret
and
mov
out
xchg
mov
xor
push
add
ds
mov
repnz
push
and
fldenv
ficomps
ret
push
pop
mov
ret
aad
cld
mov
xchg
sbb
addr16
test
popf
dec
pop
sbb
out
ja
scas
shrb
jmp
call
xorb
int
mov
mov
cwtl
out
mov
test
or
dec
or
int3
mov
rcrl
test
loopne
push
mov
dec
cs
mov
loopne
mov
das
pop
mov
jbe
sahf
mov
fwait
scas
inc
cld
int3
pop
test
test
leave
cmpsl
adc
push
testl
stos
sub
mov
mov
dec
pusha
stc
jnp
mov
pop
pushf
in
aas
push
inc
sbb
loopne
hlt
loopne
aaa
fiaddl
sbb
sti
scas
xor
and
mov
or
dec
push
stos
clc
cwtl
mov
pop
ficompl
in
jmp
xchg
xlat
ret
sbb
push
rorl
cmpsl
imul
sbb
sub
mov
leave
jnp
mov
not
loope
inc
ret
shrb
dec
movsl
sbb
pop
jge
lcall
int3
xchg
stos
test
rolb
mov
js
xchg
jle
sub
cwtl
inc
mov
xchg
into
xor
sbb
inc
in
addr16
ja
movsl
rol
rorb
jecxz
sub
js
aaa
in
in
jl
lahf
cmpsl
hlt
pushf
xchg
dec
and
push
leave
sub
mov
shll
sbb
in
jmp
mov
andb
in
divb
sub
inc
lea
jmp
mov
mov
cltd
insl
mov
hlt
push
pop
cmp
imul
lret
push
and
fistpl
out
fstl
jp
cld
int3
cltd
sub
enter
adc
jae
push
jo
repz
sbb
mov
xor
inc
mov
fsubp
mov
nop
movsb
pop
aaa
sub
xchg
in
mov
jmp
test
divb
adc
fcmovne
lahf
es
inc
int
aad
out
movmskps
jp
sub
pop
test
fisttps
mov
mov
inc
lock
jae
enter
fnstsw
lahf
adcb
in
mov
fsub
lahf
dec
xchg
and
jmp
out
je
enter
out
imull
test
test
pop
push
arpl
fcmovnb
mov
jge
arpl
sti
out
mov
test
or
and
test
insb
fwait
dec
pusha
mov
pop
mov
xor
arpl
mov
xchg
jge
lcall
data16
adc
xchg
imul
leave
aaa
rorb
fsubs
dec
xor
jnp
in
loopne
scas
arpl
inc
sub
adcl
push
mov
rolb
loopne
cwtl
out
mov
sbb
mov
fidivrl
rcl
jnp
dec
fistpl
fildll
aam
nop
call
fldcw
pop
aam
xchg
stos
jp
ficompl
jmp
jbe
data16
dec
or
xor
stos
int
sbb
fs
ljmp
or
mov
sbb
jne
test
das
pop
cmpsb
test
ja
out
fldt
packsswb
push
fwait
jl
movsl
sub
scas
outsl
and
lcall
out
mov
jnp
pop
sbb
add
push
xchg
and
sub
loope
loopne
cmpsb
mov
sahf
outsl
imul
stc
push
sub
push
clc
mov
addr16
push
inc
push
dec
bound
jecxz
mov
jmp
sub
jp
sub
mov
xchg
leave
lcall
mov
adc
inc
and
ja
mov
andb
in
cmpsl
gs
mov
cmc
sub
in
inc
or
sbbb
in
xchg
lcall
push
nop
cltd
pop
xchg
mov
repnz
imul
insl
push
cwtl
cmpsb
mov
jbe
hlt
pushf
mov
cmc
popa
sub
push
jo
mov
lret
cmpsb
into
lea
add
sub
sub
sub
jns
sbb
sub
les
stos
enter
mov
jo
out
adc
scas
pop
leave
mov
jne
cmp
pusha
xchg
xor
or
xchg
aas
stos
in
jo
shrb
stc
test
adc
push
gs
stc
scas
sti
mov
ret
enter
push
sub
jg
push
dec
stc
leave
scas
cmp
push
mov
cli
ret
xchg
daa
sub
adc
gs
xchg
loope
test
and
xchg
in
dec
adc
cs
dec
sbb
in
fisttpll
js
sahf
movb
outsb
sahf
sub
sbb
test
imul
xchg
mov
loopne
shl
xchg
les
js
scas
adc
das
xchg
cli
movsl
stos
sub
adc
enter
jno
push
call
hlt
cmc
mov
pop
push
in
fnsave
lock
repz
imul
xor
lea
sbb
enter
mov
lock
out
xchg
aam
cmpsb
xor
incl
clc
pop
out
cmpsb
or
leave
mov
jmp
roll
mov
lret
fucomp
push
mov
mov
sub
inc
lahf
jmpw
jmp
jp
movsl
pusha
push
outsl
mov
sahf
icebp
into
lret
in
cmpsl
cmpsl
jo
test
stos
pop
push
popa
mov
stos
dec
sti
dec
pop
dec
mov
dec
adc
lea
sbb
or
sub
scas
fcomps
sbb
cmpsb
mov
xchg
cld
pop
lods
xchg
cmp
mov
clc
lahf
pop
sub
mov
inc
sbb
imul
loopne
in
jecxz
out
fdivrs
jb
xchg
out
lcall
xchg
add
inc
dec
out
push
and
sbb
aad
mov
cwtl
cmpsb
xor
jno
sar
fwait
stc
gs
es
arpl
mov
mov
or
mov
cmpsl
add
mov
rol
ja
aaa
loop
inc
mov
mov
cmpsl
jmp
loop
sarb
jns
ss
lret
in
dec
sub
cmp
fcmovu
dec
pusha
jo
roll
push
cmp
loope
jb
pop
dec
pop
dec
xchg
scas
fisubrs
ss
dec
adc
fstps
or
outsb
insb
call
jns
dec
sub
enter
into
in
inc
jl
xor
stos
mov
pop
push
test
out
cmpsb
stos
push
in
cwtl
adc
js
cwtl
cltd
add
ret
test
pop
pop
lock
hlt
std
movsl
ljmp
sub
cli
addr16
inc
pop
mov
movsl
lock
and
or
mov
pop
cmp
popa
lods
es
imull
xchg
xorb
je
jno
pop
test
lods
int
jno
or
xorb
and
leave
shll
outsl
mov
mov
push
jge
ja
mov
add
jecxz
stc
mov
es
sbb
xchg
push
mov
jp
ficoms
adc
sub
leave
push
aaa
mov
pop
jle
pop
lcall
dec
inc
mov
fidivs
jg
cmpsl
rorl
pop
test
push
xchg
sti
and
sub
or
data16
imul
mov
mov
out
insl
xchg
xchg
sbb
mov
pop
scas
jge
pop
inc
arpl
sysenter
xchg
mov
les
and
push
push
adc
js
pop
mov
xchg
int3
push
mov
pop
stos
icebp
mov
iret
sbb
jb
jmp
jo
adc
dec
js
aam
mov
jae
imul
loope
or
test
add
leave
insb
sub
dec
lock
push
jecxz
cmpsb
repnz
pop
outsl
jb
cltd
lock
push
test
mov
mov
mov
sbb
les
out
xchg
xchg
ja
imul
pop
insl
mov
in
sub
test
cmc
addr16
aam
and
test
sbb
mov
out
sbb
stos
xlat
xchg
jecxz
xorb
pushf
and
mov
mov
lret
inc
clc
ss
adc
xor
push
out
ds
jmp
out
cli
sub
lock
cmp
xchg
loopne
aas
pop
xlat
adc
cld
pop
mov
sbb
loopne
cmc
lret
outsl
leave
mov
add
sub
fisubl
mov
and
out
lods
fdiv
fiadds
mov
mov
jecxz
xchg
stos
push
subl
inc
add
rorl
test
jmp
jmp
sahf
call
flds
stos
xchg
out
push
lods
sbb
in
inc
cmp
push
hlt
sti
add
cmpsl
mov
in
or
xor
sub
adc
jne
cmp
inc
lea
lods
or
das
mov
add
mov
push
in
pop
fidivl
test
adc
cmp
cmpsb
mov
dec
scas
mov
or
pop
lret
fwait
imul
sub
out
push
lea
xchg
dec
test
loopne
mov
cld
mov
subb
pop
fucom
iret
pop
cmpsb
push
stos
and
enter
xchg
or
and
xchg
insl
lods
mov
pop
scas
sbb
pop
aam
mov
cmpsl
stos
lds
rcr
add
aaa
dec
jbe
add
cmpsb
push
ljmp
mov
clc
stc
test
jb
and
jmp
cmp
sub
mov
and
or
push
adc
mov
aad
cmpsl
loopne
stos
mov
mov
sub
and
and
sub
in
fldt
sub
cld
stos
sub
sub
scas
sub
jbe
mov
sub
dec
in
and
lret
fs
mov
cltd
test
cmpsb
mov
addr16
cli
stos
ucomiss
mov
push
dec
push
jmp
adc
addr16
and
dec
scas
nop
mov
pushf
stc
imul
pop
dec
inc
pop
inc
mov
or
adc
in
aaa
jae
sub
jb
out
pop
je
xor
inc
mov
add
fldt
negb
mov
pop
negl
stos
out
mov
and
enter
das
pop
loopne
mov
and
fisubrs
lea
jae
lea
push
dec
push
mov
xchg
jb
fdivrs
xchg
cmpsb
cs
inc
or
xlat
xlat
nop
push
ret
pusha
imul
scas
fisttpl
fdivrs
stc
mov
cmp
in
sub
rcrl
jmp
nop
out
ja
lods
in
cmp
cmpsb
cmp
stc
pushf
ja
push
out
stos
sub
je
pop
push
push
cltd
ja
stc
jmp
mov
cmp
ja
mov
cwtl
lcall
xor
push
or
sub
sub
outsb
insl
push
inc
and
popl
cmp
add
inc
sub
and
dec
mov
iret
mov
ss
and
jno
mov
fs
jle
pop
jo
sub
push
mov
notb
pop
test
push
lds
jg
fsubl
js
lods
loop
pop
mov
sub
lahf
dec
cwtl
into
mov
lcall
cmp
mov
les
sarb
jmp
jp
sbb
mov
jmp
jb
dec
cld
mov
clc
dec
ljmp
adc
aaa
shlb
shll
lahf
jp
pop
fbstp
mov
jnp
mov
pop
mov
inc
sbb
add
mov
or
outsl
sti
aam
fcoms
or
aas
mov
fsubrl
je
or
in
and
int3
into
sarl
addr16
in
leave
aam
sbb
mov
jl
push
cmp
jnp
push
cmp
push
leave
lock
cmp
dec
xor
prefetcht2
js
sbb
inc
xor
inc
xchg
les
and
cmp
sub
push
push
push
pushl
jnp
dec
jno
fcom
push
enter
sub
jo
test
sub
jo
sub
enter
pop
pop
xor
js
xor
leave
nop
jge
ja
cmp
insl
jae
cmp
inc
iret
mov
test
pop
aam
pop
daa
sub
out
dec
xchg
xlat
sub
and
xor
jbe
movsl
mov
push
xchg
comiss
test
xchg
inc
icebp
push
shlb
push
pop
cld
icebp
mov
test
dec
filds
je
out
and
ja
out
stos
loope
cmp
push
dec
popa
insl
call
ja
push
call
orl
mov
jl,pn
loope
ja
sub
add
lds
aas
jmp
test
xor
jecxz
jb
sbb
adc
scas
mov
jge
xchg
pop
andb
cmp
mov
movsb
and
xchg
int3
dec
sub
jp
pop
sbb
test
bound
dec
and
sub
push
adc
cmp
test
pusha
insb
fwait
jmp
mov
aaa
js
in
dec
dec
xor
dec
push
adc
lock
out
test
cltd
adc
dec
pop
jle
lahf
in
aam
cs
das
xor
cmpsl
add
inc
repnz
xor
lret
cmpl
adc
fnstcw
repz
dec
or
sub
mov
fdivrs
adc
pop
hlt
ja
pop
popf
dec
lea
inc
cmp
mov
jg
dec
sub
jns
push
loopne
pusha
pop
sti
push
cmp
out
jecxz
jmp
xor
scas
pop
ljmp
pop
push
push
or
jl
aam
sti
fidivrl
push
sti
rclb
jle
sbb
rclb
push
popf
jp
adc
push
sarl
gs
inc
mov
out
push
aaa
mov
dec
sbb
mov
jmp
fcmove
sbb
jmp
roll
js
aaa
enter
dec
mov
call
shlb
adc
sbb
out
nop
sbb
push
out
push
lds
push
jp
mov
xor
xor
dec
push
repnz
into
sub
xor
sbb
pop
jl
xchg
mov
cmpps
dec
fisttpll
or
pop
push
fs
adc
lock
pop
dec
out
mov
xor
in
mov
push
sub
push
ficoml
lods
decb
pushf
int3
mov
sub
mov
jl
out
mov
jp
dec
jns
mov
js
jp
cmp
dec
fdivrs
push
jae
stos
inc
push
roll
es
sbb
jp
shrl
sub
sub
orl
push
aas
into
ret
ret
ret
mov
das
push
push
pop
movsb
loopne
scas
fs
out
es
jge
cwtl
aad
mov
js
aad
or
in
nop
int
ds
fstps
mov
sub
inc
cmp
mov
jmp
fstl
stos
and
add
mov
mov
popf
cmp
in
mov
ret
dec
dec
mov
cmp
fwait
and
jbe
cmp
push
push
sbb
test
in
or
or
push
adc
fldcw
jbe
or
cld
push
stc
cli
lods
dec
mov
in
imul
mov
mov
mov
std
popf
cmpsl
push
mov
loop
add
cmp
jge
movsb
lds
xchg
lods
inc
cmp
xor
sarl
or
cmp
sub
sub
lock
xor
cmp
iret
jmp
ljmp
call
clc
xchg
push
mov
movsb
clc
mov
call
sbb
adc
xor
mov
sub
sub
mov
cmpsb
xlat
rorl
or
inc
mov
mov
aaa
pop
test
ret
xor
inc
int
lcall
movsb
pop
test
lea
mov
mov
push
sahf
pop
call
sbb
mov
lea
pop
xor
or
mov
jbe
pop
jnp
out
inc
push
movsl
mov
cwtl
sbb
and
fcoms
push
gs
xor
je
fistpll
cmp
mov
imul
imul
cmc
ja
cmp
mov
in
out
cwtl
pop
inc
mov
push
adc
jns
ret
mov
xor
in
mov
sub
jbe
xchg
addl
fidivrs
mov
push
sub
test
pusha
fisttpll
fisttpl
jg
fwait
roll
dec
in
jo
or
xor
imul
push
sbb
sub
test
out
mov
mov
jmp
and
jb
fnstsw
test
into
xchg
or
cwtl
sbb
and
inc
aam
test
pop
fdivrl
xorb
lea
mov
mov
rorl
movsl
lahf
imul
roll
sub
call
addb
mov
sbb
icebp
mov
jmp
aaa
imul
movsl
std
cmpsb
leave
push
xor
cld
dec
mov
dec
sub
mov
adc
icebp
scas
mov
xchg
sbb
cmp
and
jae
xchg
xor
lds
dec
movl
pop
pop
mov
inc
adc
ja
jl
ss
rol
sub
jmp
sub
pop
jp
aam
lcall
stos
leave
xlat
mov
and
sbb
js
in
int3
mov
lcall
out
pop
movsb
mov
or
pop
out
dec
in
aam
cltd
sbb
mov
lods
jns
mov
iret
jbe
pop
xor
hlt
lret
ljmp
pop
sub
lahf
icebp
push
xor
jo
loopne
push
jae
lds
and
loopne
mov
mov
shrl
movsb
insb
push
std
imul
test
cmpsl
les
jmp
xor
sub
test
jg
lcall
loope
jle
add
test
pop
pop
jnp
out
and
fistpll
and
sbb
gs
in
and
mov
sub
mov
sub
mov
clc
inc
cmpsb
jbe
jnp
out
mov
mov
cld
mov
pop
mov
ret
or
xchg
je
pop
imul
push
iret
lea
pop
call
jbe
and
jb
pop
test
repz
cmpsb
jae
xchg
out
jo
mov
loopne
sbb
push
add
clc
movsb
jp
xlat
sbb
leave
cmpsb
pop
xor
rorl
mov
fldl
mov
fsubl
fsubs
aad
xor
jl
lods
and
aad
jl
sub
popa
enter
pop
mov
andb
xor
lods
inc
je
int
lcall
xchg
ljmp
cmp
mov
test
lea
or
pop
xchg
lcall
sub
pop
add
mov
xlat
jle
andb
mov
or
lea
fs
cmpsl
sub
fdivs
scas
adc
xor
pop
rolb
mov
sti
test
pop
stos
push
out
in
sbb
fadds
mov
xchg
cmp
add
lods
ja
jbe
rep
outsl
out
add
mov
cmp
imul
and
or
xchg
cmp
sbb
mov
and
sbb
dec
es
in
mov
pop
rol
sub
rcll
in
jp
sahf
xchg
add
je
inc
adc
in
ret
xchg
pop
sti
push
fsubl
aas
inc
pop
pushf
mov
inc
orl
leave
cmc
pop
adc
repz
ret
push
pop
fmul
adc
filds
ret
ret
cmp
cmp
jmp
xchg
jp
pop
das
scas
sarb
stc
dec
addr16
and
mov
mov
hlt
or
inc
mov
lcall
cmc
shll
cmp
stos
outsb
lret
sets
dec
push
lea
leave
or
sahf
cmp
es
scas
outsl
mov
out
or
imul
cmc
xlat
jo
stc
mov
fcom
in
pop
pop
lret
repnz
and
mov
aam
cmpsb
rsm
sbb
das
xchg
sbb
mov
push
xor
in
inc
js
mov
and
out
insl
and
dec
xchg
cmp
imul
jg
cmp
rolb
or
fwait
call
sub
fstpt
fdivr
push
cld
mov
lock
popa
inc
xchg
insb
out
ficompl
pop
and
fisttps
sbb
scas
int
lock
lret
imul
inc
aam
adc
or
inc
fucom
insb
enter
in
stos
ss
test
pushf
pop
push
sub
sub
stos
jae
push
loope
lcall
fsubs
inc
rcll
adc
inc
mov
jl
add
cmp
insb
dec
std
mov
xchg
pop
stc
lahf
into
mov
xchg
lcall
lahf
js
mov
scas
stos
mov
jbe
cmp
leave
xchg
sub
aam
xchg
mov
pop
stos
pop
mov
cs
mov
cmp
test
ss
pop
xchg
adc
ret
xor
movsl
lods
fistpll
xchg
add
sbb
sub
and
or
adc
out
inc
sti
cmp
divl
loopne
jo
in
popf
mov
sti
jno
xchg
loope
jg
xchg
mov
mov
and
xchg
pop
fwait
es
loope
nop
mov
push
ljmp
stc
stos
cmc
fucom
add
or
add
scas
andl
mov
add
cmpsl
pop
dec
rorb
adc
and
cmp
pop
sti
in
sub
fwait
enter
shlb
xchg
nop
movsl
jecxz
jo
xor
cld
mov
imul
or
cmpsl
popf
add
dec
cld
dec
push
sti
push
add
arpl
and
imul
cmpsb
sbb
xchg
adc
scas
iret
jo
shrl
xlat
in
sub
js
xor
scas
push
out
sbb
sbb
repz
lods
stc
int3
rolb
bound
jl
and
mov
mov
movsl
mov
fcom
ja
mov
iret
mov
out
mov
int
xor
cmpsl
jbe
lret
adc
mov
xchg
dec
jp
xchg
push
movsb
add
jge
sti
pmullw
cmp
sbb
push
push
adc
imul
dec
cld
test
mov
sbb
addr16
lret
push
jge
test
leave
call
cmp
movsl
popa
ret
out
mov
jecxz
nop
xchg
jo
xchg
jo
ljmp
cld
flds
lock
imul
into
lods
sub
call
or
stc
cmp
cmp
aas
int
jl
inc
je
test
fstl
pop
cltd
dec
push
leave
test
movsl
dec
sub
mov
call
lahf
pop
cwtl
lret
lret
cmpsb
js
jb
mov
pop
fcmovne
loop
aad
push
movsb
xlat
test
jbe
je
mov
sub
pop
movsl
loope
jle
out
loope
xchg
out
push
jb
mov
int
gs
mov
pop
je
dec
inc
sub
out
sub
or
lods
bound
jae
mov
inc
mov
std
sbb
and
fsubl
jno
jnp
int3
out
push
mov
push
cmc
mov
pop
ja
pop
sub
lret
repnz
inc
adc
ds
in
mov
mov
xchg
test
push
stos
push
mov
mov
shlb
jo
mov
add
sub
dec
flds
push
adc
jp
lret
cmp
imul
sub
ret
mov
push
push
in
lret
aad
jp
fistpl
mov
sbb
js
data16
dec
lret
lcall
js
jnp
ljmp
lea
js
adc
mov
aad
pop
and
lahf
and
mov
fwait
mov
push
xchg
insb
jle
mov
fiadds
jne
mov
adc
test
mov
js
aas
bound
or
stc
dec
sti
mov
lcall
jmp
jnp
adc
jns
lods
inc
dec
push
and
jae
pushf
jmp
mov
call
hlt
jbe
adc
pushf
out
repnz
lret
stos
xor
lcall
jg
mov
xor
mov
pop
push
out
into
stc
fildll
and
lret
scas
pop
xchg
dec
cmc
dec
inc
mov
xchg
dec
incl
sbb
mov
mov
jecxz
cmpsb
addr16
xor
dec
std
cmp
fsubl
pop
leave
test
cmp
das
mov
mov
and
mov
push
sub
or
xchg
inc
pop
jmp
sbb
mov
je
scas
leave
mov
rcrl
push
mov
or
cmpsl
cmp
dec
es
outsb
decl
lahf
mov
inc
cmp
in
out
aas
dec
inc
loopne
jne
lcall
test
xchg
mov
rcrb
fwait
ljmp
cld
pop
sub
pop
fsub
cwtl
in
repz
push
xchg
outsb
or
std
mov
pop
rclb
fists
sbb
pop
mov
and
testl
loope
mov
inc
ret
mov
mov
adc
cmpb
frstpm(287
cmp
cmpsb
dec
ret
adc
imul
cmpsb
es
pushf
add
inc
ret
cmp
pop
in
fsub
or
dec
out
or
sbb
push
test
mov
dec
cmp
and
imul
rol
sbb
loope
inc
cmc
add
jns
pop
cmpsb
adc
cmp
test
cmp
mov
lods
pop
dec
xor
gs
cmp
pop
pop
jp
fimull
std
ret
push
or
gs
out
dec
cmp
movsb
sub
lock
lahf
test
jp
mov
cld
jo
cmp
int3
cmp
adc
es
add
repnz
repnz
cltd
mov
mov
mov
imul
mov
xor
push
mov
mov
cmpsl
pop
ds
sub
test
sub
ret
sbb
cmp
addl
lret
lods
fldt
icebp
dec
fsubrl
sbb
mov
adc
cs
jp
mov
fcom
jle
cli
outsl
and
sub
jo
fisubrl
fs
lods
and
inc
push
pop
out
xor
int3
or
adc
sbb
cs
testl
out
sbb
xchg
leave
pop
xchg
sub
jge
xchg
rclb
add
ss
lret
in
jp
adc
lcall
and
dec
clc
jno
mov
rolb
ror
fwait
and
jnp
jl
xlat
lock
in
sarb
pop
fcmovbe
cmp
jmp
mov
iret
mov
int
js
sbbl
iret
dec
test
mov
xchg
ds
add
add
dec
jae
or
loop
mov
loopne
jb
stc
test
rclb
mov
mov
sbb
mov
mov
ficoml
fmull
jo
ljmp
movsb
fbld
mov
cli
stos
test
xor
testb
frstor
mov
fnstsw
xor
xchg
lods
or
enter
cmp
jp
sub
fnstcw
jo
aas
in
outsb
lret
shlb
pop
mov
negb
mov
shl
mov
xchg
adc
in
jb
dec
adc
xchg
popl
lock
loope
lret
lea
pop
xor
mov
push
in
insb
ljmp
test
fnstenv
sub
movsl
cmpsb
mov
inc
daa
stc
mov
aam
push
scas
out
test
ljmp
loopne
fwait
daa
lock
cmpsb
jp
aad
mov
fdivrl
or
fsubs
jl
cmpsb
push
gs
pop
add
dec
arpl
jo
shlb
movsl
sbb
arpl
lds
add
inc
insl
dec
sbb
test
mov
xlat
and
lcall
dec
bound
pusha
jl
sub
cmpsb
popf
adc
xor
sbb
int3
int3
aad
mov
ja
lea
int3
cwtl
mov
shl
adc
mov
jmp
dec
das
ljmp
fmuls
rol
sub
rorl
or
testl
testl
mov
mov
outsl
outsb
lcall
enter
lret
and
sub
cmpsb
mov
scas
xchg
jl
out
pop
mov
xlat
mov
jg
ss
dec
lcall
popf
xchg
cltd
push
aaa
iret
cmpsl
aas
mov
in
lea
lret
sub
ds
sub
push
ljmp
aas
push
movsb
cmc
push
mov
lods
es
repnz
mov
test
fdivrl
push
dec
xchg
jns
cmp
mov
call
out
out
pusha
ficoml
leave
cmp
imul
test
xor
scas
sub
rclb
scas
scas
sbb
mov
stos
mov
xorl
sbb
lcall
or
rcll
clc
outsl
sub
jnp
stc
xorb
es
mov
cmp
dec
fs
cmp
push
pop
mov
cmp
bound
stc
or
push
pop
test
call
out
mov
cmp
push
jl
gs
and
xchg
into
sub
jecxz
jge
or
sub
xchg
dec
enter
call
es
adc
leave
shrb
out
dec
fcoms
sub
inc
sub
call
clc
test
and
mov
mov
loopne
sub
cli
cmpsl
or
sub
stc
movsl
dec
int3
adc
cmp
fistpll
cli
fldenv
fisubrl
xchg
jnp
and
cmpsb
sbb
je
fistpl
jl
stos
sbb
jmp
inc
out
or
pop
dec
lahf
je
push
sbb
sti
push
inc
mov
or
imul
push
inc
addr16
add
sbb
pop
leave
cmp
push
cmp
push
push
jnp
sub
pop
cmp
xor
out
lahf
mov
or
add
lahf
mov
rolb
scas
inc
nop
std
dec
shlb
or
shrl
and
cmp
outsb
sub
jbe
mov
popf
lahf
loop
int
inc
insb
push
insb
sub
lods
insb
and
shll
aam
jmp
and
push
int3
pop
mov
ss
jp
scas
lret
fdivl
or
jge
in
loopne
adc
repnz
addl
jmp
lret
stos
outsl
into
adc
push
mov
adc
cmp
gs
int3
lret
enter
xor
pop
andl
cmp
sub
cmpsl
adc
mov
movsl
pop
cmp
pushf
jmp
lret
sub
or
mov
xchg
popf
mov
push
mov
mov
cmp
stos
pop
movsl
xor
ret
dec
pop
jb
lret
sbb
pop
push
lods
mov
out
xchg
xchg
rorb
push
dec
in
loop
rcl
out
sub
sbb
in
push
adc
mov
mov
in
cmp
sub
test
fs
inc
pusha
adc
loop
add
jp
imul
leave
lock
cmp
test
negb
cmp
lock
mov
lods
inc
adc
xchg
fucomip
push
out
iret
add
push
rcrb
ja
push
pop
or
and
mov
out
out
test
pop
stos
fmuls
outsb
int
sbb
data16
cld
lods
sub
jecxz
push
cmpsl
dec
cmp
xor
mov
push
cs
fwait
mov
outsl
dec
mov
ficoms
pop
cmpb
jp
mov
sub
cmpsl
cmpsb
lods
nop
pop
cwtl
fsts
test
int3
xchg
stc
inc
inc
push
add
js
sahf
pop
daa
jmp
pop
adc
rcr
lahf
push
xchg
cmp
scas
fwait
rcl
push
repz
xor
subl
mov
lock
mov
rcrb
push
sub
adc
mov
pop
rcrl
pop
or
enter
mov
dec
ja
pop
pop
jg
cltd
pop
mov
mov
pop
jo
adc
mov
test
cld
clc
sub
cmp
inc
js
gs
mov
rol
call
dec
mov
sub
ljmp
jmp
leave
inc
jns
call
sub
xor
xor
popa
arpl
lods
out
jmp
dec
sub
xchg
pop
imul
loop
pop
pop
stos
sbb
mov
loop
push
sbb
dec
std
out
mov
add
xor
ds
lahf
cmp
dec
mov
jo
inc
dec
jb
test
rclb
push
movsl
pushf
jns
addr16
stos
out
push
or
cmpsl
inc
fs
in
shrl
or
js
mov
xchg
inc
inc
sbb
mov
sbb
cmp
fisttps
outsl
in
fcomp
sbb
dec
imul
bound
fs
aad
aaa
clc
btr
roll
and
pop
pop
cmp
aas
pop
push
fcomps
or
loop
scas
mov
cmp
cld
in
push
inc
lret
jmp
xchg
pop
int3
and
mov
inc
into
shrl
shrb
push
dec
pop
pop
jmp
push
popa
sub
roll
mov
mov
test
pop
adc
insb
lret
mov
shll
push
pop
pop
enter
mov
lds
movsl
push
inc
ret
clc
dec
push
bound
push
mov
imul
adc
jbe
pop
sub
dec
sahf
mov
lcall
jbe
ret
xor
sbb
adc
mov
es
into
mov
lret
les
fisubrs
pusha
scas
mov
cltd
shll
sti
jne
or
fldt
push
andl
in
shl
push
sahf
js
clc
loopne
addr16
xor
sub
ljmp
bound
cmpsb
das
ja
dec
add
mov
dec
cmp
jg
or
lods
push
imul
cmp
add
lods
or
lcall
push
into
or
add
or
and
data16
jecxz
out
mov
inc
push
test
lret
xlat
lahf
xchg
int
int
fidivrl
insl
and
cmpsl
inc
movsl
sub
adc
jae
cmpsb
in
push
sub
pusha
aam
fdivrs
pop
mov
fs
mov
js
jmp
pushf
and
lret
mov
ja
fwait
jnp
cmp
mov
xchg
push
int
cmp
aad
sbb
sub
or
ja
mov
clc
imul
lret
mov
popa
lods
jmp
rorb
fs
movsl
sarl
fdivrs
rcr
leave
fwait
inc
and
mov
loope
ja
mov
mov
add
lret
popf
inc
dec
loop
aam
and
xchg
test
sub
dec
popa
push
inc
pushf
out
pushf
adc
cmpsl
fidivrl
movsb
mov
addr16
insb
repnz
cmp
out
xor
mov
jo
dec
das
addr16
adc
fadd
ss
and
leave
pop
lods
ja
movsl
push
cmc
add
mov
mov
pop
scas
icebp
mov
int
dec
call
movsl
loope
mulps
leave
clc
and
aaa
push
loope
out
pop
sub
inc
cmp
adc
dec
xor
outsl
mov
in
lret
and
in
std
pop
aas
xor
pop
sarb
aad
out
jmp
push
and
in
cmp
popf
pop
lods
out
icebp
dec
cwtl
repz
andb
sar
mov
xor
lret
leave
movsl
fidivrl
mov
rcrb
cmc
xor
inc
in
xor
int3
outsl
in
hlt
int
add
mov
xchg
std
out
nopl
test
mov
arpl
xlat
inc
test
insb
dec
cmp
ja
repz
cmp
cmpsl
push
loop
inc
fldt
and
adc
cmpl
mov
imul
scas
int3
pop
stos
pushl
and
fsubl
das
xor
test
mov
hlt
ret
xchg
addr16
cld
push
xchg
shlb
lods
dec
pop
cltd
sub
jmp
in
or
xchg
xchg
stc
add
cmp
sbb
mov
sbb
scas
jl
rorl
mov
jbe
inc
mov
in
xchg
cltd
push
test
sarl
ret
xchg
add
mov
les
mov
push
push
outsl
sbb
jmp
push
sub
adc
rcr
scas
adc
sub
movsb
inc
shr
jns
nop
mov
push
test
dec
sbb
aas
into
fs
nop
data16
pop
push
dec
mov
mov
lret
aam
dec
imul
mov
mov
inc
imul
mov
xchg
pop
mov
repz
jg
dec
cltd
xchg
sbb
insb
pop
adc
aas
and
mov
inc
lods
scas
mov
push
dec
jg
xchg
jo
scas
in
lcall
xchg
testl
sub
test
and
test
mov
mov
ficompl
sti
jne
test
inc
test
fdivs
negb
mov
iret
pop
fmulp
xor
bound
test
jb
icebp
pop
sbb
jl
ja
movsl
sbb
test
push
or
outsb
push
pop
push
mov
stc
push
fistl
pop
and
xor
xor
enter
or
ja
mov
push
clc
pop
lahf
jmp
imull
inc
pop
sub
pop
pusha
adc
sub
lea
lret
mov
rclb
leave
lret
iret
sub
cli
gs
sub
fnstenv
in
dec
test
fs
sub
mov
cs
push
fucomi
icebp
jmp
pop
pop
dec
push
lods
les
xor
gs
ljmp
mov
repz
loop
fildl
pop
mov
stos
inc
flds
test
testb
repz
stos
sbb
pop
outsl
fildl
mov
lret
mov
pop
iret
fnstcw
in
jns
fcomp
lret
fldcw
mov
pop
loopne
das
insb
push
fstl
pop
dec
pop
test
pusha
mov
and
out
pop
nop
je
mov
pop
rol
or
inc
pushf
stos
sbb
enter
lcall
pop
push
cwtl
addr16
add
sub
lret
mov
pop
mov
cltd
js
test
das
in
jae
fs
pop
ret
movsb
pop
inc
mov
lret
popa
fsubrs
inc
xlat
fdivr
rolb
data16
push
pop
dec
pop
cmp
jbe
out
mov
lret
lods
sub
fstl
cltd
insb
mov
int3
test
incl
hlt
pop
adc
flds
pusha
clc
cmpsl
ljmp
stos
push
lods
dec
mov
pop
std
in
test
add
insb
lods
call
in
cmpsl
and
fcmovnbe
pop
in
add
call
push
test
sbb
dec
lret
xlat
mov
std
jb
mov
loop
pop
sub
fs
and
push
popa
pop
icebp
ficompl
in
je
mov
fsts
xchg
sahf
mov
cwtl
into
out
and
pop
shll
push
and
mov
cld
in
aas
movsl
sahf
jp
add
arpl
test
dec
in
ds
insb
test
icebp
pop
out
rcrl
out
and
sub
sti
mov
test
pop
fnstcw
sub
and
sub
mov
pop
jp
sub
test
inc
dec
fstpt
xor
clc
and
pop
pop
rcrl
mov
loop
push
fldcw
xchg
inc
xlat
mov
pop
lret
pop
rcrb
xchg
sub
les
andb
push
sti
leave
sbb
mov
push
lret
call
cmpsb
loopne
pop
stos
mov
adc
sub
test
fsts
sub
and
pop
data16
or
sti
cs
xchg
fcmovu
lret
add
repz
push
cmpsb
jns
pop
hlt
adc
sub
fnstenv
jo
test
jecxz
sub
mov
sub
popf
pushl
inc
push
cmp
gs
fcmovnbe
icebp
sub
sub
das
cmp
jbe
arpl
negl
inc
mov
icebp
adc
call
jp
xchg
call
movsb
aam
into
sbb
push
in
int3
mov
in
lret
gs
pop
fs
out
out
mov
mov
mov
dec
sub
jecxz
inc
paddq
int3
jl
add
mov
cmpsb
or
adc
jmp
movsb
pop
lods
shll
mov
dec
pop
mov
push
insl
sub
lods
sub
mov
js
jge
add
orb
push
sbb
cmp
call
xchg
push
pop
inc
pop
mov
jnp
outsl
or
incb
test
mov
mov
pop
repnz
inc
mov
les
jbe
sti
pop
and
fidivrs
fxch
jae
outsl
adc
cmpsb
lods
dec
addr16
negl
addr16
push
les
test
push
jecxz
mov
adc
movsl
sbb
inc
outsb
ret
icebp
add
imul
push
inc
lahf
mov
hlt
mov
push
in
xchg
fildl
push
testb
fadds
xor
xor
dec
adc
lea
pushf
push
lret
mov
or
push
add
mov
mov
cmpsb
push
fadds
jbe
cmp
cmc
mov
sbb
inc
insb
loop
mov
in
shlb
or
push
sbb
mov
pop
fldl
stc
or
out
test
or
insb
add
adc
mov
add
pop
dec
data16
loopne
xchg
push
idiv
xchg
in
pop
mov
in
sub
pop
loop
dec
stc
xchg
popf
andb
jmp
shrb
enter
in
test
mov
mov
stos
movsb
stc
int3
repnz
mov
fldenv
mov
out
sbb
in
jae
fsts
pop
or
sbb
jo
loopne
popf
ja
push
movsl
test
mov
sub
xchg
loope
mov
out
and
clc
int
jmp
mul
shll
pop
cmpb
mov
lahf
sarl
push
mov
xor
dec
cmpsb
and
inc
jb
xchg
push
stc
adc
adc
lahf
incb
out
inc
out
outsl
out
jne
fisubrs
dec
shl
push
mov
sti
adc
pop
cmpsb
enter
iret
mov
popf
gs
cli
clc
dec
test
je
mov
fistps
lock
outsl
fstps
push
dec
cmpsb
ss
mov
mov
sub
imul
pop
mov
rorb
lcall
call
rol
cld
xor
ja
adc
call
xchg
aam
out
push
cmpb
ret
add
sarl
add
sub
lahf
cmpsb
mov
sub
mov
cltd
xchg
aam
pop
and
call
fwait
clc
mov
jb
mov
mov
jae
mov
ret
jae
clc
sbb
inc
stc
test
inc
pop
mov
mov
imul
xor
jl
insb
in
ret
test
lods
push
pusha
or
sahf
cmpsb
shlb
test
stos
lods
sub
mov
repz
insl
jl
xchg
sub
movsb
and
insb
sub
mov
outsb
mov
push
pavgw
sbb
fsubr
insb
shll
loop
lods
int
imul
sub
cmc
sbb
ja
mov
cmpb
movsl
mov
add
jne
mov
les
jnp
in
lods
ficomps
jbe
pop
cli
and
sub
dec
loope
lret
nop
vpunpcklwd
mov
adc
pop
fcoml
push
push
prefetch
lods
or
adc
mov
dec
xchg
iret
test
lods
leave
or
jb
outsl
jnp
lock
cmpsb
or
mov
sub
mov
js
inc
xchg
test
push
or
cmp
lock
pop
mov
mov
push
mov
mov
imul
inc
jge
mov
arpl
inc
jbe
cmpsl
jge
jle
test
cmp
js
mov
outsb
aaa
int3
pop
call
mov
sub
xchg
loop
push
js
fmuls
dec
clc
lock
jecxz
mov
xlat
push
adc
imul
int
psubsb
mov
nop
mov
ret
out
mov
bound
dec
jb
dec
mov
sub
test
add
cmp
inc
mov
mov
movsb
daa
cltd
xor
lods
pop
int3
popa
cwtl
mov
int
push
leave
addb
stc
mov
push
jbe
push
cmpl
sub
lock
jecxz
add
push
or
ljmp
fwait
lcall
aam
sub
fidivrl
inc
lahf
sub
fs
adc
mov
and
push
lods
mov
lds
lea
mov
cmpsb
mov
addr16
shlb
stos
mov
cmc
or
adc
or
decl
push
mov
shr
jo
and
cmp
push
mov
cwtl
rorb
fmuls
rolb
pop
ds
scas
in
fimuls
shrb
ret
ficoml
ret
lds
pop
push
leave
pop
cmp
mov
fisttpl
sub
or
cs
js
and
inc
pop
int3
in
out
mov
jecxz
popf
in
fldenv
lock
fs
ljmp
movsb
in
mov
les
out
ficoms
mov
stos
cld
xlat
mov
fwait
push
out
push
pop
dec
ret
push
cmp
gs
xchg
pop
add
in
lods
mov
jecxz
dec
lods
sbb
repnz
push
mov
fstps
sub
jmp
out
cmpsl
sbb
out
or
cmp
cpuid
push
test
xchg
fsubrl
mov
push
cs
cmpsb
insl
test
pop
lahf
bound
out
fdivs
test
push
jmp
pop
mov
sub
push
xor
dec
jb
and
dec
lea
push
mov
icebp
inc
ret
js
jno
add
push
enter
call
push
cwtl
mov
inc
or
push
imul
into
test
xor
cld
js
jg
js
std
jo
mov
ret
sbb
cmpsb
mov
mov
mov
into
push
mov
data16
or
jnp
jo
imul
mov
cli
rcrl
rcl
cmp
xchg
jbe
popf
out
mov
mov
rcrb
cmpsb
outsl
ja
or
inc
addl
and
test
aas
test
dec
jae
fsts
aad
inc
out
jl
xor
sub
sbb
aad
dec
inc
daa
sub
sub
scas
mov
sbb
inc
fstl
int3
lret
push
outsb
dec
mov
pop
fsub
enter
inc
notb
cmp
addr16
mov
inc
pop
or
dec
clc
push
lock
enter
aas
ret
lcall
jae
lcall
sbb
repz
loopne
jns
adc
jmp
push
inc
cmp
cmp
push
jmp
scas
cltd
sarl
aas
mov
cld
loopne
mov
ja
fnstsw
lcall
aas
xchg
stc
leave
add
jmp
test
subb
mov
aam
cmpsl
sti
in
cmp
js
leave
lcall
mov
movsl
adc
sahf
stc
inc
lcall
repnz
xor
or
fwait
sbb
lods
ds
xchg
out
aad
dec
xchg
add
xor
pop
aad
jl
mov
in
test
dec
das
adc
sub
fisttpl
mov
movsb
push
and
or
lahf
cwtl
jnp
aas
lods
outsl
push
int
fwait
add
add
add
das
dec
mov
jecxz
mov
xor
xchg
pop
fldl
pop
mov
jns
mov
push
pop
into
fwait
movsb
add
jmp
sub
sub
iret
xchg
in
testl
call
mov
daa
mov
scas
sub
mov
mov
rol
outsb
fidivrs
lcall
pop
mov
sub
scas
sbb
cmpsb
ja
loope
sahf
dec
pop
mov
xchg
hlt
mov
push
imul
dec
jg
sbb
sub
and
lods
lahf
into
lcall
dec
stc
stos
sarb
mov
or
inc
adc
or
sbb
mov
aad
and
jg
dec
inc
inc
sti
frstpm(287
into
lods
add
jnp
imulb
mov
lock
js
outsl
pop
and
into
jbe
add
and
or
in
adc
stos
std
subl
js
cmpsl
mov
sbb
xor
pop
stos
push
push
lret
mov
push
sub
stos
hlt
jl
mov
pushf
and
or
inc
je
mov
cltd
je
pop
mov
cs
mov
fidivrs
jns
ror
mov
pushf
mov
mov
lea
cmp
int
mov
popa
dec
mov
push
jns
imul
xor
dec
pushf
push
cmc
push
and
sub
mov
xor
lds
fisubrs
jo
inc
inc
je
pop
in
cmp
sbb
xchg
and
movsb
test
int
movsl
pushf
jmp
jns
and
lahf
stos
pop
sub
in
leave
testl
sub
stc
jg
or
jns
test
and
inc
mov
test
add
pop
in
pop
clc
dec
push
fstl
mov
lahf
push
mov
stos
mov
xchg
xor
movsb
push
in
cmc
push
adc
in
pop
sub
xchg
call
pop
push
dec
dec
fbstp
sub
test
cmpsb
cmp
test
clc
and
jle
mov
mov
mov
cmpsb
test
dec
mov
sti
xchg
ja
pop
lods
outsb
pop
xchg
shll
adc
cwtl
pusha
mov
cmp
cmp
je
out
jge
jb
aas
or
jmp
mov
lret
jecxz
mov
sbb
lds
sub
test
sti
cmpb
jmp
inc
pop
fisubl
mov
les
jge
push
cmpsl
dec
and
dec
or
sbb
push
inc
outsb
lock
pop
push
test
and
andb
cmp
lea
push
dec
out
lea
lods
sbb
mov
cmp
and
outsl
lret
adc
lret
out
shlb
jae
adc
ds
adc
sub
adc
fsubs
sar
add
fcmovnu
pop
loopne
popf
movsl
push
add
xchg
push
mov
divl
repnz
movsb
fcom
and
icebp
in
fwait
dec
sahf
xlat
dec
jle
add
cmp
or
js
scas
xchg
montmul
cmpsb
shll
xchg
pusha
cltd
jecxz
stos
push
das
lods
test
call
cli
push
lret
cmp
ss
je
dec
scas
shlb
inc
and
push
dec
rorb
sbb
ffree
addr16
sbb
xchg
xchg
rorl
sbbb
xor
push
pop
pop
push
mov
fistps
loope
push
dec
xchg
clc
sub
cmp
xchg
dec
xorl
std
xchg
fsubrp
lock
lods
and
cltd
mov
mov
in
fnstenv
into
xor
adc
mov
and
sbb
or
jmp
inc
sbb
add
dec
outsb
cmp
rcll
lret
or
inc
pop
lods
or
jle
mov
dec
xchg
pop
xchg
pop
outsl
xor
xchg
std
push
adc
in
leave
xor
dec
icebp
xor
push
sbb
andb
out
push
pop
dec
lcall
in
pop
mov
addr16
pop
mov
push
pop
xchg
mov
insl
inc
adcl
mov
mov
mov
scas
and
mov
lcall
mov
jecxz
movsb
movsb
jl
mov
or
fldt
out
mov
scas
fwait
je
xor
jns
test
sbb
cmpsl
jl
jb
repz
lret
sbb
jmp
test
lret
ljmp
pop
add
pop
je
dec
or
add
fxch
sub
push
adc
ljmp
sub
stc
popa
jb
push
inc
addr16
idivb
push
or
jnp
push
cmpsb
push
cmpsl
imul
dec
test
stc
fs
jo
lock
fmuls
movsb
out
cmp
cmpsb
add
stos
dec
in
aam
sub
loopne
inc
fisttpl
xchg
or
jbe
or
cmp
in
mov
dec
dec
jecxz
shrb
sbb
jmp
out
lock
das
sahf
sbb
out
mov
push
rcll
add
push
in
xor
outsl
icebp
inc
sarb
cmpsb
jp
out
dec
mov
in
inc
xchg
dec
cmp
enter
mov
and
sub
mov
cmp
sbb
into
rcrl
push
xchg
jmp
sbb
dec
lock
mov
fimuls
cmp
sbb
mov
jecxz
xchg
test
pop
xchg
rorl
pop
ret
mov
xchg
cmp
mov
adc
adc
lret
inc
test
xchg
out
cmp
pop
xlat
jne
xor
out
data16
addr16
aaa
fwait
xor
lahf
imul
dec
add
xor
adc
call
inc
mov
mov
sub
mov
sub
in
xor
inc
jns
shrb
xchg
jbe
xor
pop
push
sbb
sbb
faddp
mov
add
xor
or
lahf
pop
dec
test
orl
cmp
or
jae
stc
push
loopne
jbe
in
scas
mov
out
mov
sbb
test
roll
lahf
jmp
add
int3
js
fnstenv
sbb
stos
and
mov
or
aam
mov
inc
mov
rorl
jmp
jne
mov
test
lahf
xchg
ja
std
scas
pop
mov
imul
dec
imul
fidivrs
adc
test
les
cmp
sbb
notl
dec
in
sbb
addr16
sbbb
gs
clc
out
iret
outsb
cmp
insb
sbb
push
sbb
mov
stos
xchg
lret
cmpsb
xor
sub
ja
or
popf
arpl
in
adc
leave
aam
ja
out
stos
lret
clc
mov
lcall
cs
clc
xchg
loopne
mov
mov
mov
dec
mov
movsb
adc
dec
fiadds
stc
daa
mov
pop
lcall
cmc
sub
movsl
inc
dec
mov
mov
mov
mov
outsb
in
and
aas
stos
push
subb
iret
mov
sub
sub
xchg
dec
idivb
pop
push
cld
std
cmp
mov
stc
xor
or
test
mov
cmp
shll
sub
sahf
sbb
xor
repz
cmp
jbe
fwait
sahf
pop
mov
add
std
cmpsb
hlt
jge
scas
pop
into
jne
push
add
gs
jmp
movsb
jo
in
test
mov
mov
pop
jge
outsl
mov
mov
push
leave
xchg
cmpsb
lcall
imul
mov
loopne
inc
cmpsb
fs
mov
lret
ja
jmp
flds
ds
cmpsl
sbb
jns
js
ret
test
mov
aam
sub
fistps
cmpsb
aam
movsb
sub
inc
jns
js
test
leave
cmpsb
add
jl
dec
imul
dec
pop
mov
adc
cmpsl
cmpsb
xchg
addl
dec
or
mov
and
out
mov
mov
cmpsl
lret
fiaddl
jae
lock
xor
movsl
insb
cltd
outsl
jl
ja
pop
imul
mov
sbb
fsubs
pop
push
nop
loop
addr16
lock
or
sub
cmpsb
xchg
aad
sub
stos
ljmp
cld
sub
aas
out
xor
dec
cwtl
sbb
mov
xor
test
xchg
and
mov
mov
push
stc
and
push
push
ljmp
stos
cwtl
lods
dec
pop
testb
lock
pushf
cmpsl
sub
pop
je
jno
xor
es
push
cmp
out
pusha
and
jge
inc
push
inc
nop
add
sub
movsb
add
loope
cmpsb
mov
outsl
sti
int3
pusha
out
cltd
loopne
mov
pop
xor
arpl
enter
mov
scas
iret
enter
ret
js
jno
xchg
push
in
or
and
push
adc
jae
shrb
shll
mov
cmpsb
push
aam
and
dec
fs
movlps
into
outsb
xor
mov
andl
jp
sarb
call
and
loop
stc
mov
mov
sub
sub
cmp
push
dec
mov
push
inc
lds
pop
ficoml
dec
dec
xor
jp
jbe
sbb
ja
push
fmull
in
xor
dec
fwait
sub
sarl
push
inc
sub
test
addr16
xor
aaa
enter
and
mov
mov
popa
data16
pop
xchg
loopne
cwtl
clc
call
mov
mov
and
inc
stc
mov
pop
push
xchg
lods
cmp
adc
or
cmp
push
mov
ret
jbe
jnp
out
xchg
ds
xor
ret
mov
jmp
icebp
inc
push
and
push
jae
or
push
inc
jl
into
dec
ja
in
or
or
je
push
mov
mov
dec
xchg
cld
or
mov
in
dec
ljmp
mov
in
sub
scas
cwtl
test
pushf
addb
or
hlt
ljmp
mov
cs
lret
stos
sub
adc
outsb
xor
outsl
sub
mulb
nop
push
addr16
insb
into
push
jecxz
or
add
xchg
pop
call
fucomip
scas
sub
scas
or
sub
fwait
out
cmpsl
lods
adc
pop
adc
cmp
call
push
push
lcall
sbb
ror
je
xor
lahf
scas
out
stc
andl
dec
jnp
pushf
lret
popf
jp
push
lods
jl
fsubs
mov
cmpsb
pop
fisubrs
in
mov
call
mov
decl
js
mov
mov
pusha
jmp
lea
sub
xor
mov
movsb
jbe
icebp
les
sub
daa
movsb
or
jnp
mov
lods
xchg
mov
or
jmp
out
xchg
std
pusha
repnz
inc
jmp
ss
sub
out
nop
xor
inc
push
push
fdivl
movsl
insl
xchg
xchg
and
cwtl
imul
movsb
enter
sbb
pop
pushf
push
lcall
mov
lret
in
stos
inc
and
into
mov
pushf
fisubrl
addr16
imul
sub
ret
push
jns
lea
loopne
jnp
clc
fwait
hlt
outsl
dec
aam
test
mov
sub
sub
incb
aaa
sub
or
ret
mov
sub
gs
in
dec
cmpsb
outsl
jmp
int
mov
insb
aad
int
popf
dec
movsl
xchg
std
pushf
imul
inc
cmp
cmp
mov
xchg
scas
xchg
dec
push
outsl
mov
cmpsb
and
lcall
mov
jbe
push
jp
pop
rorb
lods
scas
lcall
aam
aaa
dec
stc
aas
testb
jmp
cmp
aad
je
push
and
into
fisubrl
xchg
jle
sub
xchg
pop
sub
and
push
repnz
xchg
cmpsb
dec
into
mov
out
mov
lock
jne
pop
fs
pop
rcr
cmp
std
js
aad
in
ret
cmc
mov
cmp
inc
imul
xchg
fxam
call
fldcw
sbb
mov
cli
loopne
loopne
in
mov
mov
dec
dec
push
xchg
and
ret
insl
jl
lret
sub
ljmp
das
adcb
pop
into
cltd
jo
cmp
test
outsb
push
lret
cmpb
mov
xchg
pop
sub
dec
ss
mov
pop
aas
ret
xchg
mov
push
stos
mov
push
adcb
cmp
dec
cmpsl
jmp
leave
mov
sub
push
adc
or
pop
arpl
or
push
mov
mov
lds
sub
pop
mov
jbe
pop
int3
cmpsb
add
push
push
inc
test
es
pop
adc
adc
sub
retw
subb
push
jo
call
or
sub
mov
pop
fnstcw
in
mov
add
out
jbe
sub
sarl
push
mov
andb
ljmp
pminsw
pop
lods
sub
sbb
enter
adc
sub
fdiv
and
jnp
ljmp
aaa
jecxz
data16
addr16
mov
stc
das
cld
std
cmovle
jns
dec
das
scas
call
leave
ljmp
cmp
rcll
call
sub
cmpsl
leave
imul
dec
in
inc
pop
subl
pop
cli
dec
jnp
insl
loopne
loope
inc
out
nop
mov
sbb
jo
pushf
mov
mov
fwait
negl
dec
std
call
nop
add
cmp
pop
mov
mov
mov
ds
push
xlat
aas
testl
sbb
mov
inc
imul
jmp
in
bound
inc
movsb
and
mov
fsub
fidivl
sub
pop
orb
xchg
jo
ror
mov
cli
add
js
loop
push
pushf
sub
push
cltd
xor
dec
lds
aaa
lret
sbb
pop
out
mov
jb
dec
dec
xor
cmc
adc
mov
jmp
js
lds
xchg
cmpsl
jo
gs
ds
cmpb
lods
call
inc
push
mov
notb
or
push
clc
mov
hlt
inc
xchg
or
fsts
ljmp
mov
bound
mov
inc
lods
pop
push
out
loopne
cmp
inc
leave
ret
aam
mov
xor
or
fwait
mov
repz
pop
sbb
stos
out
inc
mov
scas
insl
fnstcw
jmp
std
loop
bsf
call
addb
loopne
cmpsl
out
push
pop
jp
add
aaa
dec
pop
test
ds
xor
movsl
mov
jnp
out
rclb
insb
xor
ret
cmp
lret
pop
pop
jne
sub
fadd
pop
int
mov
daa
ds
clc
inc
test
in
sub
lret
sub
pop
push
imul
mov
cmp
or
stos
je
popf
cltd
cmp
call
repnz
xchg
mov
filds
push
pop
fcom
mov
movq
mov
insl
popf
ret
pop
daa
std
cmpsb
jbe
rorb
cmp
adc
cltd
cmp
pop
out
pavgb
icebp
das
les
in
mov
push
fsubrs
out
fsubrl
loopne
jo
cmp
cld
outsl
pop
cli
add
xor
sub
jmp
cmpsl
outsb
cltd
push
lods
das
ret
pushf
jge
fs
std
lcall
popf
pop
pop
mov
pop
loopne
add
stos
pop
subb
out
push
pusha
jmp
int3
push
jge
inc
movl
sbb
mov
in
enter
mov
inc
lds
js
es
pop
push
outsb
in
jo
mov
jb
andb
adc
in
cwtl
aaa
pushf
stc
pop
inc
sbb
sahf
or
call
ret
clc
pop
pusha
test
mov
jmp
test
pop
cmc
add
outsl
mov
push
jns
mov
xchg
lods
push
jmp
pop
lret
xchg
mov
mov
mov
xor
cmpsl
inc
inc
adc
fcompl
sub
fcoml
mov
nop
mov
jmp
test
fsubl
subl
int3
out
jp
lret
out
pop
es
pop
push
jmp
jle
mov
fsubs
int3
mov
inc
inc
shrb
imul
mov
pop
push
mov
dec
adc
stos
mov
fdivs
mov
incb
pop
test
hlt
leave
push
add
ss
out
adc
mov
xchg
xchg
scas
jl
repnz
popf
add
sub
data16
stos
jle
lds
jmp
or
stos
jbe
rolb
lea
nop
sub
cmpsl
in
sub
pop
dec
dec
ftst
mov
int3
fsubl
sub
inc
in
popf
cmp
add
mov
pop
add
bswap
and
test
push
sbb
aam
popf
jge
sarb
nop
sbb
pop
outsl
stc
aas
xchg
dec
and
lds
popf
push
loop
cmpsl
test
out
aaa
stos
dec
inc
rcrl
sub
aam
push
frstor
adc
enter
loopne
cld
call
lret
out
push
pop
shr
mov
jmp
inc
cmp
les
push
cwtl
xchg
push
or
xor
iret
stc
adc
cmp
sbb
lea
cmp
inc
lods
sub
mov
dec
ljmp
pushf
in
cwtl
or
cmc
test
out
pop
and
and
in
push
fidivl
inc
ficompl
notl
sti
bound
in
xchg
jl
pop
ljmp
mov
popf
shr
jecxz
sub
cmp
in
jb
cmp
push
cmpsb
enter
sub
mov
insl
jl
or
mov
push
lea
cmp
xor
mov
out
out
aas
shlb
and
lcall
mov
addr16
shr
sbb
cli
loope
clc
xor
push
int3
cmp
jbe
xchg
lods
jle
and
out
lret
sbb
fisubl
ljmpw
jns
data16
inc
inc
mov
std
loopne
movsb
adc
frstor
ds
std
orl
in
out
sbb
pop
ljmp
push
sub
push
arpl
jmp
sub
mov
mov
cmpsl
cmc
shlb
int3
cwtl
dec
bound
mov
les
stos
scas
movsb
shl
enter
adc
scas
cmc
mov
scas
jb
movsl
cli
outsl
js
loopne
jle
js
push
inc
popf
test
jg
int3
pop
push
cmpsl
jns
sub
sub
xchg
cmpsb
push
inc
mov
iret
jbe
or
cmp
ljmp
cmpsl
push
lods
and
sub
fldenv
mov
clc
lret
sarb
pushf
cwtl
loopne
lds
lcall
lcall
data16
out
or
ret
out
pop
mov
dec
adc
cltd
jbe
cmpsl
mov
lods
dec
mov
jo
fistpll
sbb
out
jmp
test
aam
shr
fdivs
xchg
or
push
leave
sbb
jp
and
xor
dec
aaa
add
shlb
stos
hlt
cmp
pavgw
cmp
fs
lock
sbb
test
xor
jle
leave
leave
adc
sbb
jno
daa
lahf
lret
dec
test
add
cld
les
repnz
mov
pop
cmpb
leave
or
gs
ret
outsb
roll
es
xor
lods
hlt
mov
outsb
mov
jp
test
je
and
push
dec
andb
xchg
stc
pop
icebp
aas
loopne
cmpsb
icebp
and
sub
out
push
or
fisttpl
les
or
dec
enter
test
xchg
cltd
inc
aam
pop
in
insl
or
mov
das
scas
mov
xor
push
sbb
in
xchg
leave
mov
stos
inc
jo
or
adc
fxch
ret
arpl
fucompp
fldcw
pop
mov
dec
loopne
out
clc
mov
movsl
xor
scas
pop
movsl
cmp
mov
mov
mov
and
lds
jo
lahf
sub
sti
push
jmp
outsl
std
jmp
mov
in
pusha
lock
cld
stc
lret
lret
or
mov
lahf
sub
inc
call
mov
mov
sbb
xor
js
mov
or
mov
iret
sub
xor
jbe
dec
mov
xchg
mov
push
leave
insb
insb
cwtl
aam
dec
mov
rclb
lret
mov
sub
mov
fldcw
jl
xchg
imul
push
mov
push
negl
cmp
mov
mov
inc
cli
mov
add
add
adc
aaa
test
xchg
and
jb
and
pop
dec
push
out
sahf
repnz
in
lret
and
dec
mov
dec
sub
pushf
outsb
jns
fwait
dec
add
push
xor
in
push
dec
jnp
lock
clc
pop
test
cwtl
movsb
mov
ds
jbe
add
xchg
dec
cmp
pop
ficoml
in
push
pop
dec
jbe
jmp
and
dec
ss
daa
out
iret
xchg
sub
mov
lods
jp
rorl
mov
fldt
inc
je
sbb
and
stos
shrb
insb
cmpb
adc
mov
stc
pop
sub
divb
aad
pushf
add
push
aad
into
mov
arpl
enterw
push
dec
hlt
out
xchg
hlt
push
addr16
stc
leave
sti
lret
mov
cltd
fldcw
pop
int3
pop
jo
jbe
xchg
jmp
xchg
cli
push
jnp
pop
ljmp
outsl
lods
jp
jecxz
pop
sbb
cli
adc
push
pop
movsl
scas
and
jmp
stc
cmp
fidivrl
stos
jge
cs
icebp
sbb
lods
and
out
popa
popf
imul
push
test
jle
jns
push
cmp
cmpsb
xlat
ret
push
jnp
pop
xchg
rolb
jmp
cltd
sub
fdivrp
dec
and
jmp
in
mov
and
mov
sub
lock
enter
stc
fsub
or
xor
scas
clc
lea
push
sbb
mov
pusha
mov
push
cli
outsb
and
out
lds
pop
mov
sbb
mov
divl
mov
mov
ss
mov
jo
lock
stos
ja
inc
div
icebp
leave
or
sbbl
data16
in
sub
sti
or
add
out
ljmp
inc
dec
xchg
scas
data16
and
add
mov
push
addr16
mov
popa
hlt
and
lds
js
sbb
icebp
inc
ljmp
cmp
add
pop
mov
movsb
ss
dec
js
arpl
dec
mov
sarl
add
add
jg
add
test
in
lock
add
pusha
test
aaa
sub
sub
aas
les
popa
cmp
fimuls
dec
pop
ud1
clc
repz
jns
jns
inc
sub
mov
mov
loope
inc
add
cli
xor
or
jmp
adc
or
loopne
enter
clc
popa
mov
das
jmp
cli
mov
xor
in
xchg
jge
out
add
das
push
lods
scas
loope
sub
mov
fnstsw
lock
mov
cwtl
lock
mov
popf
test
movsb
dec
test
inc
adc
aam
push
pop
xchg
gs
mov
dec
push
jmp
xchg
sbb
add
mov
mov
sub
aad
out
stc
clc
adc
loope
inc
dec
jns
lock
lret
loopne
push
mov
xor
sbb
xchg
popa
std
pop
lock
xchg
jmp
dec
dec
iret
xchg
and
xchg
les
mov
xor
push
pop
jge
lods
mov
and
dec
iret
insb
pushf
inc
lock
mov
sub
test
cmpsl
lahf
mov
movsl
int3
dec
pop
pop
test
jp
sub
cmpsb
imul
jmp
add
push
sub
mov
in
cmpsl
push
dec
lahf
data16
mov
xchg
adc
jg
out
das
lock
mov
addr16
jns
and
add
add
inc
cmp
fstpl
test
call
lcall
and
add
dec
or
lds
adc
cmpsb
pop
xor
movsl
call
push
imul
pop
ljmp
mov
rcl
addr16
test
and
mov
xor
jmp
int3
movsb
std
pop
hlt
imul
pop
push
jb
arpl
mov
jle
mov
or
imul
and
data16
lahf
and
inc
aaa
imul
push
xlat
xchg
and
sbb
sbb
mov
test
ds
scas
in
push
jmp
inc
mov
push
mov
pop
fmull
insl
or
adc
mov
xchg
in
mov
mov
sub
sub
inc
mov
pushl
jns
in
push
sbb
cwtl
mov
sub
dec
cmp
movsl
ret
push
push
push
mov
out
xor
or
hlt
loopne
sub
xor
lods
push
mov
dec
cmp
or
or
jecxz
add
sub
sub
mov
imul
jg
les
mov
push
cmp
inc
mov
jnp
jcxz
in
pop
imul
mov
movb
leave
mov
jbe
add
mov
jg
addr16
mov
addr16
dec
lcall
xor
loopnew
jp,pt
add
pop
out
mov
mov
or
sbb
adc
gs
mov
fxtract
addr16
in
push
push
test
adc
xchg
int3
out
fimuls
sub
jb
clc
push
dec
lret
test
out
xchg
xchg
idivb
sub
out
es
repnz
cmpsb
notl
adc
xor
fstl
test
cmp
test
adc
cmpsb
sbb
pop
sub
jns
int3
sub
or
cld
mov
mov
scas
out
jns
fwait
shll
lods
or
mov
sahf
mov
pop
lret
dec
loopne
out
ss
out
push
mov
adc
ficomps
push
sbb
dec
mov
mov
xchg
fsubr
out
leave
dec
push
pop
scas
xor
iret
test
mov
out
ja
pop
inc
movsb
or
dec
jns
push
or
push
pop
sub
jo
lret
sub
imul
cmp
push
out
lock
call
stc
pop
pop
ds
mov
push
pop
insb
and
test
popl
jne
dec
lods
push
mov
bound
sub
xchg
das
in
pop
lods
pop
js
fs
out
mov
inc
mov
psubusb
mov
aad
push
xor
sub
jb
arpl
cmpsb
dec
out
sub
or
data16
inc
mov
sub
xorb
scas
sub
dec
and
xchg
sub
fisubrl
mov
jns
out
and
nop
jne
and
leave
cmp
xchg
sub
out
pop
xchg
cmp
inc
negb
out
add
in
std
sub
jnp
jnp
and
js
dec
movsl
jne
mov
aaa
hlt
arpl
mov
sbb
cli
aam
jp
movsb
lods
cmc
aas
adc
push
clc
addl
dec
loopne
lahf
jne
jle
dec
dec
or
aas
inc
lock
jbe
adc
lods
mov
test
es
sbb
fistpll
outsl
les
imul
mov
cmp
mov
jbe
mov
stc
fnsave
int3
pop
pushf
and
fstpt
xor
jnp
adc
xchg
sti
adc
dec
nop
ret
frstor
add
dec
sbb
insb
outsl
loop
out
in
mov
ljmp
gs
int3
jg
les
xchg
sbbb
mov
jo
arpl
dec
push
ja
xor
push
cmp
sub
lahf
fs
and
aaa
aas
jmp
jb
xchg
sub
imul
cmpsb
mov
out
jle
adc
xor
add
mov
rorl
nop
xchg
push
dec
shlb
and
loop
push
sub
ja
mov
jl
test
jmp
aas
leave
fwait
in
dec
popa
stc
shll
and
mov
xchg
inc
xor
jo
sarb
xchg
out
ja
test
push
jo
jns
inc
mov
cmpsb
jecxz
ret
add
in
fisttpl
stos
add
lock
mov
cmpsl
enter
jnp
rorb
shrb
mov
stos
jbe
mov
xor
mov
inc
push
call
cmc
popl
sahf
cmp
ds
add
imul
js
testl
inc
div
adc
outsl
pop
cmp
cmp
cmpb
imul
cpuid
mov
cmc
sub
cmp
insb
out
jge
add
leave
hlt
pusha
aad
fsts
sbb
xor
jmp
ror
jne
call
scas
sub
push
push
mov
sub
and
mov
cmpsl
js
iret
dec
sbb
insb
pop
imul
ret
test
xor
xchg
loop
sbb
lret
in
cmp
outsl
cmpsb
cmpb
mov
mov
clc
aas
inc
rorb
jae
jmp
movsl
adc
mov
cmp
ljmp
popa
sub
adc
icebp
addr16
add
xchg
pop
push
xchg
inc
in
lods
adc
cmpb
loopne
jle
jo
in
orl
vpacksswb
inc
push
mov
pop
fnstcw
inc
xor
gs
jae
pop
mov
mov
mov
add
in
paddsb
mov
or
test
in
std
call
xchg
inc
jno
imul
ja
mov
js
js
mov
push
xchg
movsb
outsb
in
orb
push
in
mov
push
mov
icebp
lds
inc
movsb
scas
pop
pop
popa
inc
push
push
loopne
and
cmp
jp
dec
xor
enter
cmpsb
adc
int
mov
out
sbb
sub
mov
mov
or
or
and
sahf
mov
int
out
test
jle
sti
mov
scas
push
std
stc
mov
ja
paddusw
leave
cmp
arpl
jecxz
test
js
sbb
lahf
lds
or
adc
mov
cmc
fcomps
jmp
lret
inc
or
stos
out
lahf
and
dec
inc
mov
inc
push
cli
mov
es
adcb
mov
leave
inc
jo
fimuls
ret
adc
inc
add
xlat
sbb
or
cmp
mov
enter
mov
cs
loopne
es
test
mov
shll
outsl
fcmovb
decb
int3
cmpsl
jl
movb
imul
sub
pop
jo
jg
loop
in
movsl
lods
or
fwait
call
add
cmp
xor
out
dec
mov
dec
pop
adc
inc
cmp
pop
dec
xchg
jb
inc
jg
dec
test
in
xorb
sub
fsubs
mov
imul
scas
int3
test
cli
insl
or
fsubr
test
enter
aaa
mov
mov
jmp
scas
imul
addr16
push
inc
add
scas
movsl
cmp
cmpsb
scas
lock
aam
or
cmpsb
inc
dec
push
mov
xchg
adc
mov
lods
in
inc
xchg
sub
dec
lock
jmp
inc
cltd
inc
cmp
push
add
aam
mov
inc
out
dec
jb
pop
inc
movsb
pop
scas
add
stos
add
xchg
out
push
jnp
addb
or
insb
jb
sbb
aas
test
paddsb
or
cmp
nop
jne
negl
fsubs
dec
pop
ror
rorl
push
push
sbb
jae
lcall
cld
cmpsl
inc
lods
jbe
loop
fistps
cltd
pop
pop
lahf
pop
or
inc
sahf
test
push
ds
outsb
sahf
sub
cwtl
lret
scas
mov
fildll
popa
test
add
loop
jbe
popf
imul
nop
mov
xlat
add
push
pushf
sub
lods
or
inc
js
stc
inc
scas
cmp
or
sub
push
loop
add
pop
aas
std
mov
jl
pop
stos
jbe
push
fs
mov
jmp
enter
mov
mov
decb
pop
rcrb
mov
add
rolb
adc
xor
lret
frstor
xchg
xor
sbbb
scas
loop
push
mov
btcl
aas
nop
pop
inc
pop
sbb
xchg
ljmp
scas
or
and
cmp
inc
push
sbb
ds
in
jl
adc
test
and
and
fwait
sub
add
addr16
add
sbb
sbb
test
scas
sub
lahf
jns
or
scas
cs
dec
or
xor
jo
inc
adc
arpl
and
sbb
sahf
mov
push
imul
and
mov
enter
dec
mov
xchg
push
dec
and
jmp
loopne
add
adc
int3
jns
dec
or
dec
call
loop
lret
in
cmovbe
nop
sub
shl
addr16
push
enter
sub
sbb
dec
pusha
push
cmpsb
mov
xchg
push
xor
or
addb
pop
std
cmpsb
leave
fcomi
jbe
jle
inc
scas
lahf
sub
sub
in
loope
mov
lcall
cwtl
mov
cmpsb
cmp
dec
pushf
sub
lret
push
loop
pop
in
aaa
and
sub
fs
mov
dec
ret
sub
clc
and
add
dec
sub
lcall
ficompl
inc
add
stos
lds
or
jg
int3
mov
xchg
addb
push
push
mov
pop
adc
adc
dec
xchg
pop
adc
jne
addr16
roll
popa
inc
adc
repz
ljmp
out
int
sbb
push
dec
fldt
push
stc
push
jne
and
jns
adc
sub
int3
ss
shll
std
into
aaa
pop
fldt
stc
test
or
stos
pop
test
ljmp
mov
lahf
in
sub
jnp
iret
sub
mov
shlb
sub
mov
push
mov
shlb
and
fdivs
int3
imul
ror
jl
jo
jecxz
cld
sub
shrl
xor
pop
aas
ds
jbe
jbe
mov
dec
jbe
sub
dec
cs
jge
sbb
sar
imul
arpl
cmp
lcall
sub
xchg
aaa
jecxz
out
or
nop
xor
es
cld
les
test
enter
and
jmp
pop
in
or
jns
sbb
pop
call
xchg
mov
push
mov
inc
sub
inc
lock
psrad
mov
sub
cmpb
aas
lods
jno
out
push
sub
cmp
je
or
and
mov
call
jno
bound
adc
add
stos
xor
jge
in
shlb
stos
paddq
mov
mov
sbb
mov
ja
dec
lock
fmuls
dec
outsl
loope
fnstenv
es
call
loope
jecxz
ret
xor
jmp
pop
inc
mov
dec
mov
add
subb
cltd
icebp
lahf
mov
leave
pop
popf
outsl
stos
aas
adc
loop
mov
dec
fsubl
push
jl
pop
xchg
scas
popa
xchg
xor
adc
fwait
lahf
mov
jmp
aas
stc
mov
fs
sub
pop
jge
push
imul
mov
es
enter
jbe
popa
shll
jl
dec
push
jg
mov
sahf
rcrb
jo
gs
ret
pop
popa
dec
out
mov
movl
adc
push
and
outsl
getsec
xchg
mov
cmpsb
mov
sub
cli
dec
jmp
addr16
fnstenv
negb
xchg
fstps
inc
cld
push
or
enter
xchg
mov
dec
out
sbb
scas
adc
add
push
jge
sbb
or
out
push
lcall
jbe
pushf
movb
xor
mov
gs
lods
mov
ja
aaa
xchg
mov
int3
xor
rorb
cmpsb
insl
stc
mov
xchg
cwtl
leave
add
fwait
cmp
fidivrl
xor
push
add
dec
aad
xchg
pop
sub
xchg
jns
aam
and
push
add
mov
mov
mov
cmpsl
insl
xchg
pop
in
sub
xchg
jb
js
push
das
adc
jbe
dec
sub
cmpsl
mov
mov
and
test
repz
arpl
and
xor
pop
aas
fs
push
roll
push
imul
xor
adc
flds
cwtl
dec
fdivp
mov
testl
sahf
js
or
nop
or
fidivrl
dec
xor
lcall
test
addr16
jmp
pop
push
pusha
jnp
ret
xor
push
mov
loope
test
scas
mov
sbb
xor
mov
xchg
cmp
adc
fildll
mov
test
pop
lea
push
dec
sub
or
cmp
xor
sub
xor
int
dec
ljmp
movsl
idivb
cmp
scas
dec
dec
add
pop
xchg
xchg
pop
cmpsl
sub
cld
pop
cmp
in
dec
adc
aaa
adc
fdiv
enter
lahf
iret
jo
pop
cmp
add
cmpsl
inc
mov
flds
add
mov
lret
popf
leave
insb
pop
aas
mov
pop
aas
pop
lea
mov
fcoms
adc
pop
jp
lahf
add
cmp
or
rcrb
imul
mov
jl
push
xor
fmull
aaa
stos
lret
es
mov
enter
fadds
sbb
in
cwtl
push
aas
lods
cmp
xchg
lret
mov
test
into
sub
imul
sub
or
fisttpl
sub
cmp
jbe
pushf
fstpt
ret
push
cmp
mov
push
int3
call
push
xchg
pop
call
jge
or
add
sbb
gs
inc
stos
fdivr
xorl
dec
sbb
pushf
ljmpw
pop
mov
mov
loopne
or
fldcw
add
xor
lahf
mov
mov
into
loop
lret
ret
cmp
repz
xchg
push
mov
test
pop
inc
sub
push
int
outsb
aaa
or
cmp
cli
jle
sbb
dec
movsb
fnstenv
nop
fistl
pop
cwtl
outsb
clc
fcmovnu
cld
pop
xlat
dec
clc
enter
dec
repz
dec
push
pop
repz
inc
add
sub
je
mov
lods
aad
mov
pop
aas
js
loopne
push
cmpb
out
fnstsw
das
dec
out
loopne
or
pop
fxch
xlat
pop
add
lcall
xchg
jge
ds
lcall
repnz
and
adc
test
popf
mov
sub
mov
adc
push
mov
roll
dec
mov
sbbl
mov
sub
ds
insl
sub
ja
adc
dec
bound
push
mov
mov
adc
into
outsb
jne
fnsave
cwtl
add
rorl
xor
out
sub
out
scas
fcmovnb
pop
xor
loope
and
xchg
out
sub
push
xor
mov
arpl
gs
jnp
loope
jg
insl
gs
mov
mov
into
cmp
lcall
aam
mov
jmp
xor
inc
imul
mov
scas
push
test
push
in
jno
rcll
lret
fbstp
sbb
fwait
jnp
out
pushf
mov
push
mov
pop
pop
push
imul
cltd
call
mov
add
popa
mov
iret
aad
xchg
pushf
push
test
test
xor
outsl
dec
add
adc
jecxz
push
xchg
popa
fsts
mov
inc
mov
pop
adc
add
les
push
leave
sbb
push
call
xchg
and
sub
pop
push
popf
test
movsb
ljmp
cmpsb
xor
fnsave
out
push
mov
mov
and
sub
push
add
xor
push
cs
out
into
or
jp
outsb
sbb
rclb
std
sbb
rcrl
sbbb
inc
stos
fucomi
xlat
and
shufps
ret
fldcw
test
push
std
icebp
in
cwtl
loopne
and
jp
outsb
lods
mov
mov
add
push
mov
mov
push
sub
outsl
add
hlt
ds
push
adc
pop
pop
adc
jge
sub
out
xchg
ja
and
sbb
inc
cmp
mov
inc
adc
pop
ljmp
add
pushf
jge
std
fstps
or
jl
jbe
jns
add
sub
cmpsb
or
fadds
loopne
mov
sub
sub
ja
gs
imul
mov
repnz
mov
or
push
cli
rcrb
and
fbld
mov
mov
mov
jo
les
fimuls
icebp
mov
fincstp
enter
jb
lods
dec
push
jmp
rorb
dec
push
jbe
sahf
pop
cld
cmc
xor
sub
scas
stos
xor
in
adc
mov
fisubrl
mov
pop
les
jmp
test
dec
mov
insl
mov
pop
test
cmpsb
pop
movsb
call
nopl
aas
cwtl
pop
push
xchg
xchg
xlat
in
sub
cmp
add
loop
dec
and
arpl
pushf
lea
loop
arpl
imul
xchg
mov
in
ss
sahf
imul
cmp
xchg
mov
addr16
test
push
movsb
mov
out
andl
in
mov
push
cmpsb
rclb
insl
nop
add
addl
lret
sbb
filds
cmpsb
xor
mov
push
inc
scas
add
dec
inc
or
mov
jl
es
inc
jne
test
cmp
divl
ror
loopne
sub
mov
add
cmp
lds
mov
sbb
cmp
push
and
shrb
popl
xchg
jp
aam
xor
mov
pop
inc
push
add
in
jecxz
pop
adc
mov
pop
inc
pop
test
mov
xchg
sahf
mov
mov
hlt
mov
or
in
xor
mov
inc
sub
into
fidivs
movsl
shrl
stos
pop
mov
mov
test
sbb
cmp
dec
rorb
call
mov
xchg
cmc
sbb
mov
pusha
mov
cld
xchg
push
and
mov
jp
mov
scas
mov
xor
jl
pop
sti
jnp
xchg
ja
xchg
lcall
bound
adc
cmp
jecxz
cmpsl
ret
call
popf
and
adc
push
mov
add
jg
adc
xor
int
les
xchg
pop
xchg
xchg
mov
sbb
std
lcall
leave
sub
push
and
aad
in
and
mov
dec
fdivrl
push
mov
stos
and
mov
add
out
das
pop
in
imul
jg
dec
aaa
jp
movsl
outsl
sbb
stc
std
push
int3
insb
push
outsl
mov
ficoml
pop
jmp
movsl
je
adc
push
cmp
shlb
sbb
mov
pop
mov
push
jbe
cmp
jp
adc
adc
push
enter
pop
ja
sbb
stos
scas
aas
mov
xor
aaa
mov
jnp
push
inc
push
or
mov
shlb
dec
test
and
scas
cwtl
subl
sbbl
leave
add
fdivl
sub
xchg
inc
std
inc
out
dec
pop
or
cmp
lret
sub
in
jmp
lret
int3
push
adc
fmuls
adc
out
rcr
dec
mov
movsb
dec
cmp
test
jno
fcmove
test
pop
cmc
cmp
in
add
sbb
movsb
dec
pusha
cmc
sbb
lcall
mov
inc
cmp
mov
ja
cmp
test
dec
pop
dec
repnz
les
and
js
stos
ficoms
push
sub
adc
cmp
in
mov
popf
into
shll
fbld
mov
xchg
dec
and
incl
jno
aad
lahf
pop
stos
adcl
leave
loope
je
aam
push
popf
jge
scas
xor
push
xor
scas
xchg
cltd
addl
test
sbb
pushf
sub
aaa
out
jns
data16
pop
loopne
jnp
in
aas
push
dec
pop
bound
insb
popa
aaa
mov
iret
fwait
lods
pop
leave
das
lahf
cltd
cmpsl
inc
dec
pop
mov
xor
ficoms
mov
addr16
std
inc
mov
xchg
mov
jg
add
in
jp
mov
ja
lods
loope
jl
jmp
imul
aad
lahf
dec
cmp
test
test
movsl
cmpps
imul
mov
mov
enter
in
test
fists
or
ret
jne
mov
out
sub
loope
dec
jb
dec
jmp
test
lds
mov
xlat
in
aas
ret
sbb
sahf
jecxz
movsb
cmpsb
jno
aas
mov
xor
ror
or
pop
add
lods
xor
pushf
test
inc
sarl
ljmp
or
fprem
mov
sbb
fs
cs
and
and
ret
aam
pusha
push
pop
dec
ja
js
cltd
or
push
cli
movsl
xchg
std
push
mov
test
int
adc
push
xchg
mov
pop
sbb
xchg
test
xchg
or
dec
push
sbb
mov
imul
and
stc
push
dec
enter
cmpsb
out
loope
mov
push
aam
jno
fcoms
rcl
xchg
inc
mov
shl
dec
shl
mov
cld
cmp
bound
popf
dec
mov
fnsave
or
mov
ja
lds
mov
cmpsb
cmp
scas
insb
adc
leave
jbe
aaa
fcmovnb
cmpsb
lea
call
or
je
inc
pop
fisttps
ret
or
dec
pop
lds
and
and
push
add
fwait
xchg
pop
dec
in
cmp
daa
mov
xchg
xchg
cmc
dec
inc
inc
scas
push
dec
lds
loope
mov
cmc
rclb
xchg
pop
mov
aas
push
test
pop
lahf
sbb
das
sub
cwtl
cmpsb
jmp
movsb
inc
iret
fsubrl
inc
push
mov
and
xor
sbb
sub
ljmp
mov
or
and
movsb
out
pop
push
pop
nop
fsts
enter
in
mov
ss
dec
mov
sbbb
sub
push
lds
add
sbb
lret
mov
je
mov
pop
data16
jg
push
pop
jb
adc
xor
xlat
cs
paddusb
mov
outsl
shlb
data16
mov
mov
fistl
out
push
dec
outsl
mov
fimuls
jp
and
mov
jne
add
enter
lea
jbe
sarl
dec
inc
sub
or
sub
bnd
inc
mov
cmc
ret
insl
addr16
or
and
int
push
or
sub
xchg
mov
leave
jmp
cli
add
push
push
test
jg
ja
imul
popa
cmpsl
cltd
lcall
ror
and
adc
jp
dec
lret
dec
aad
movsb
mov
lret
pop
ljmp
orb
in
out
cmpsl
call
stos
mov
out
mov
push
repnz
in
jecxz
xlat
xor
sbb
jp
add
movsb
jb
push
xchg
jg
xor
mov
pop
imul
loop
aas
mov
pop
mov
clc
lahf
in
sub
fs
sarl
lahf
shll
jnp
imulb
inc
fld
incb
ljmp
fs
leave
jne
inc
fdivrs
xor
add
cmc
js
gs
test
repnz
es
leave
loopne
sub
out
jae
popf
out
mov
mov
test
pushf
add
mov
cmp
cmpsl
call
pop
mov
ja
ljmp
fld
ljmp
sub
cli
lds
ljmp
xchg
push
ret
loopne
aaa
sbb
dec
rorl
mov
xchg
mov
sub
push
push
dec
push
nop
dec
bound
mov
int3
mov
cld
mov
int
sbb
hlt
scas
dec
enter
or
or
sbb
lcall
out
stos
pshufw
int3
call
in
data16
mov
xchg
adc
mov
pop
pshufw
aad
test
aas
mov
movsb
movsb
test
aas
mov
and
mov
and
out
stos
aas
in
sub
xchg
loope
lret
xchg
mov
dec
mov
adc
leave
sub
lea
pop
pop
xor
pop
or
lock
mov
imul
js
inc
ret
test
dec
out
int3
jle
mov
inc
ret
sub
cld
orb
dec
shrb
mov
imul
in
rol
pop
mov
sub
mull
mov
xor
sbbb
mov
pop
lock
fdivr
sbb
sub
pop
xor
cmp
adc
and
pop
andb
arpl
in
outsb
pop
mov
js
inc
pop
rolb
les
addr16
jbe
imul
std
popf
push
push
stos
jmp
pushf
les
inc
insb
ljmp
in
call
insb
test
loope
or
fiaddl
fcoms
ljmp
lea
outsl
leave
pop
call
mov
push
enter
jnp
scas
mov
sub
stos
jae
aaa
jp
insl
inc
leave
xlat
in
cmp
cmc
mov
or
in
mov
in
js
cmp
test
rcrb
mov
lock
insl
mov
filds
in
sub
jmp
cmc
fsts
sub
push
movsb
call
ds
scas
in
and
push
jmp
aaa
int3
out
mov
sbb
test
fsub
out
cmp
or
lock
sarb
lret
pop
jg
pop
cmp
loop
mov
sti
sub
cmpsb
cmc
mov
loopne
cmc
stos
add
push
subb
scas
int
xchg
adc
mov
dec
pop
mov
scas
dec
fsts
ja
or
pop
mov
push
push
mov
jmp
arpl
aam
scas
movsb
sbb
jmp
dec
push
lods
out
lret
pop
js
fisubrs
inc
loop
cmp
les
int3
cmp
inc
or
imul
mov
loopne
lahf
jp
popf
and
xchg
fsubrl
mov
xchg
ds
mov
jmp
jbe
dec
lahf
out
xchg
mov
xchg
xor
dec
fs
mov
push
inc
mov
pop
xor
les
jb
mov
pop
dec
enter
inc
aam
jbe
pop
out
lock
dec
rolb
or
xor
xor
ret
inc
ja
pop
jnp
cli
mov
popa
jl,pt
addb
push
pop
in
ljmp
popaw
push
aad
jnp
adc
mov
neg
and
dec
and
mov
ret
xor
stos
adc
mov
inc
cmpsl
push
push
jns
mov
testb
fsubl
adc
rorl
shlb
or
mov
stos
cmp
cmp
add
rorl
imul
cwtl
or
or
aaa
mov
pop
lods
loop
or
xor
imulb
mov
sti
movsl
mov
pop
sbb
adc
cwtl
push
hlt
das
leave
sub
les
icebp
xor
mov
cli
or
nop
je
shl
andb
fstps
in
sti
sub
and
jb
cmpsb
daa
shll
push
push
pop
popf
push
fmul
int
pop
adc
jno
push
sti
test
dec
lods
stc
jbe
fwait
je
xchg
mov
push
jmp
cs
leave
inc
xchg
shll
or
fidivl
rcrl
sub
push
in
nop
arpl
push
sbb
push
lcall
mov
sbb
mov
addr16
sti
push
cmp
push
jbe
mov
into
dec
xor
dec
or
lret
loope
out
push
lods
push
leave
xor
cmp
movsb
sbb
lret
outsb
hlt
test
dec
cmp
out
add
addb
dec
pop
sbb
pop
cmp
in
jbe
aaa
ret
pop
aad
pop
xor
roll
int
mov
roll
stc
jo
mov
stos
fnsave
pop
cmp
xor
out
outsl
cli
lds
sarl
sbb
psllw
clc
sub
das
adc
rorl
mov
or
sbb
mov
push
mov
mov
mov
sub
inc
fsubrs
aas
aam
mov
dec
mull
cmpsb
fisubl
jl
stos
xlat
and
sbb
test
mov
pop
lods
outsl
sub
jp
pushf
adc
sbb
insl
mov
mov
jecxz
fstl
or
push
pop
arpl
xlat
mov
aas
push
xchg
outsl
pop
cmp
repnz
jb
add
mov
dec
loop
pop
or
sub
adc
out
insb
out
dec
jp
cwtl
cltd
out
dec
jae
mov
fisttpl
cli
cwtl
mov
push
cmp
mov
cmp
in
icebp
int3
or
pop
sub
in
add
lret
and
push
mov
fcmovb
test
lcall
jp
mov
mov
cmp
dec
mov
sti
mov
jecxz
pop
cmpl
jle
mov
xor
cmp
mov
push
xchg
jnp
movl
add
clc
xor
lahf
lcall
mov
ja
cmpsl
adc
mov
stc
jbe
add
cmp
pop
je
sarl
mov
cli
cmp
xor
fstl
and
xchg
in
pop
ret
xlat
or
in
jno
in
std
cmp
call
imul
cmp
lock
xchg
sub
test
mov
xchg
inc
in
imull
gs
sub
pop
lret
jo
sbb
xor
aad
and
pop
adc
stc
xchg
imul
in
call
mov
ja
bound
and
sub
ds
std
les
in
and
mov
sub
sub
jae
dec
lods
jae
call
cwtl
cmp
insb
dec
sub
or
sbb
pop
cwtl
cmp
dec
lods
sub
push
addr16
inc
mov
shll
cmpsl
xor
cmp
pop
stos
cltd
jo
test
or
popa
fildl
fmull
lods
loope
mov
imul
jle
inc
and
push
es
pop
loope
mov
cs
and
dec
insl
ja
mov
jbe
pop
test
sub
jae
shl
sub
xlat
inc
mov
out
orb
push
or
sti
fsubrl
add
fldcw
mov
dec
pop
adc
or
scas
xchg
enter
mov
loop
je
ret
lds
subl
sub
pop
jl
rcrb
out
mov
hlt
cmp
push
and
jp
pop
lods
pusha
pop
mov
and
jle
or
jb
push
enter
cmp
xor
xchg
mov
or
xor
mov
and
popf
sar
out
repz
cmpsl
mov
lds
test
fnsave
dec
movaps
lods
or
loopne
inc
bound
stc
lods
mov
rcr
sbb
clc
mov
or
fstpt
inc
fcoms
es
xchg
imul
mov
jg
pop
jp
test
bound
xchg
bound
aas
mov
ljmp
jmp
lock
push
stos
lret
dec
icebp
nop
mov
and
ret
mov
call
jnp
repz
in
adc
and
jg
fdivrl
dec
xor
out
and
sbb
out
sub
inc
mov
dec
cmp
clc
add
pop
cwtl
aaa
aam
sub
ja
imul
into
push
mov
sbb
dec
mov
in
movd
cmpl
in
pop
or
int3
loope
adcl
pushf
mov
aas
iret
xchg
cwtl
std
test
enter
arpl
in
aaa
sbb
mov
jmp
mov
pop
inc
in
adc
adc
sbb
or
push
cwtl
push
mov
cmpsb
out
scas
mov
push
popf
cmc
jmp
push
cltd
jbe
cwtl
lock
sub
js
cld
insb
push
mov
push
stc
sahf
popw
shl
frstor
clc
test
mov
rol
jo
mov
icebp
loop
jp
test
rorb
cmpsb
sub
and
mov
int3
lock
fldl
push
or
lods
push
pusha
jbe
and
ljmp
sbb
add
lret
or
xchg
insl
lea
stos
les
inc
push
add
mov
or
cmp
inc
sbb
scas
pop
cltd
hlt
stos
ljmp
and
fcoms
pop
int3
jmp
sub
pop
and
pop
mov
jbe
rorl
pop
push
lahf
sarb
loope
fsub
mov
mov
bound
pop
icebp
pop
call
leave
push
lret
mov
dec
shll
cld
aad
xor
sub
psubd
test
repz
lcall
sbb
cmp
sbb
mov
popa
imul
mov
insb
lods
fnstcw
stc
lahf
fiaddl
call
mov
pushf
sub
hlt
js
outsb
sbb
inc
cmp
imul
nop
iret
fisttpl
cmp
into
inc
imul
call
dec
in
mov
loopne,pn
jne
mov
inc
jecxz
in
dec
lret
xchg
lock
out
sub
loope
mov
and
stos
mov
pop
pusha
dec
sub
push
mov
mov
mov
enter
cmp
sahf
pop
or
mov
pop
dec
mov
jne
popa
mov
jecxz
jmp
mov
sahf
test
outsb
movsl
lret
or
inc
out
aam
add
outsl
jp
loopne
dec
pop
aam
dec
std
sbb
sbb
dec
add
shlb
pop
cmpsb
fisubrl
push
scas
mov
or
cmp
cmc
jl
pusha
inc
js
or
add
ljmp
mov
sarl
and
jl
aad
out
push
test
imul
ret
stos
adc
jl
pop
adc
sbb
xor
loope
mov
mov
jg
clc
or
adc
lods
dec
ja
xchg
nop
aad
lret
orl
sub
jl
or
mov
inc
cmp
add
mov
mov
lcall
push
xchg
pop
sub
enter
push
jb
dec
pop
movsb
sub
and
pop
or
mov
pusha
jns
mov
es
add
and
lcall
ljmp
adc
jg
clc
nop
es
lret
sahf
or
out
jbe
loopne
in
arpl
gs
mov
out
es
push
out
movsl
fstl
std
rcll
bound
pop
pop
call
out
push
inc
sbb
mov
dec
in
in
shll
jl
jmp
xchg
mov
inc
out
outsl
lods
xchg
daa
or
dec
dec
aam
fs
shrb
jbe
lea
push
xchg
inc
int
stos
jmp
mov
movsb
mov
aam
call
jl
adc
dec
movsl
jo
imul
cmpsb
sub
jmp
jns
and
sub
in
mov
or
sbb
cmp
mov
filds
cmpsl
mov
clc
movsb
data16
dec
mov
popf
sbb
push
sbb
sub
jg
fists
mov
push
and
mov
pop
aam
in
stos
xor
mov
ret
fstp
rorb
pop
cmp
into
std
leave
loop
int3
lret
out
add
out
clc
cmpsb
pop
mov
dec
cmp
xlat
jge
aaa
fdiv
jo
jbe
cmp
ss
mov
leave
clc
dec
shrb
lahf
ret
andl
inc
out
aaa
outsb
push
inc
enter
test
lea
icebp
iret
sub
stos
cld
int3
xor
sub
xor
jae
mov
clc
push
lods
dec
jmp
jge
pop
add
push
out
sub
xor
sub
mov
jmp
mov
and
jl
jmp
stc
testb
stc
dec
ret
dec
mov
add
inc
test
and
ss
int
cmp
aaa
fcoml
add
lret
and
cmp
add
pop
scas
adc
fbld
mov
in
add
out
ds
jle
mov
dec
jno
adc
xor
xchg
cs
push
sbb
add
aad
imul
jmp
inc
push
leave
out
stos
mov
mov
mov
loopne
push
xchg
push
lds
sub
and
movsb
jmp
adc
cmp
cwtl
test
sbb
jns
pop
movsb
jbe
jp
leave
pop
ljmp
mov
scas
pop
sub
pop
and
cltd
inc
cmp
pop
sub
sub
std
pop
pop
adc
out
or
out
xor
lock
pavgb
push
movsl
push
inc
fdivl
dec
pop
lds
xor
pop
and
ja
cmp
into
out
pushf
mov
shrb
lds
cmp
scas
and
sub
shlb
std
loopne
mov
arpl
mov
push
shr
mov
mov
repz
lds
push
adc
inc
push
adc
call
push
adc
jle
jp
pop
cmp
aam
sahf
mov
stos
das
sub
mov
leave
jnp
test
dec
pop
mov
loop
and
movsb
push
cmpsl
or
sahf
or
sbb
sub
loope
int3
mov
fcompl
cmpsl
outsl
lock
bswap
pop
das
push
push
das
jo
outsb
and
inc
xchg
icebp
sahf
lcall
sbb
mov
ja
and
xlat
cmp
sbb
aaa
inc
mov
pop
jno
imul
lds
mov
jno
sub
test
push
lea
lods
lds
pop
or
push
and
cmp
sub
adc
fmuls
inc
cli
clc
pop
jle
das
out
cli
pop
inc
lods
mov
shl
push
dec
sub
scas
loop
push
push
adc
sbb
xor
inc
imul
xchg
xor
int3
push
fdivs
push
in
test
shlb
ljmp
fisubrs
in
cmp
out
mov
mov
and
addr16
cltd
leave
pop
fldcw
cmpsl
in
shll
test
mov
add
lahf
test
pop
hlt
jnp
adc
mov
call
mov
cmp
jmp
sub
push
jle
lcall
les
sub
sub
xchg
add
or
test
cld
fildl
loopne
movsb
sub
jns
jp
aam
xor
out
and
cwtl
js
dec
push
insl
pop
repz
or
add
push
pop
jl
negb
dec
mov
ja
jmp
xlat
jbe
or
push
lods
call
out
lret
adc
or
out
imul
leave
dec
ret
fdivr
lret
test
lock
or
ja
sbb
stos
sarl
jo
or
mov
movsb
pop
push
sbb
mov
in
or
data16
adc
pushf
fwait
aaa
fstl
sbb
mov
mov
call
inc
shrl
dec
movsl
sub
jge
xor
lods
test
jmp
pop
adc
sub
pop
rorl
test
cmp
lock
add
out
push
xor
push
xor
mov
sbbl
stos
push
das
adc
scas
xor
mov
adc
mov
mov
cmc
pushf
jae
dec
test
ljmp
sbb
lahf
clc
inc
movsb
popf
sub
aaa
sub
mov
mov
lea
lock
mov
mov
out
mov
mov
cmp
push
enter
popf
pop
jge
outsl
mov
out
mov
mov
mov
out
sbb
jae
pop
mov
fcomps
xor
scas
mov
add
scas
cmp
xor
popl
into
push
jnp
push
add
pop
je
inc
arpl
pop
in
movsb
lea
jb
stc
call
add
xchg
mov
loope
divb
roll
mov
sub
fs
mov
scas
or
xor
aad
int3
dec
xor
mov
aam
addr16
mov
enter
mov
push
cmp
xor
pop
dec
jge
sub
jbe
push
add
push
push
fs
jge
and
sub
int
lahf
gs
adc
mov
mov
test
mov
push
lahf
jle
fsub
cmpsl
ss
sahf
addr16
aas
jmp
fisttps
lea
xchg
fisubs
adc
fnstsw
jecxz
push
fcoms
sbb
cmc
js
mov
ret
xchg
es
sub
scas
cmpsb
clc
and
aaa
cmp
jl
sbb
sahf
and
mov
pop
cmc
jo
lahf
movsb
and
mov
mov
push
xor
push
int
int3
ret
mov
adc
lods
sub
data16
push
push
push
sbb
out
xchg
mov
imul
and
ret
das
lcall
add
pushf
sub
pop
push
sti
mov
out
jno
in
cmp
add
adc
idiv
out
fcoms
jb
adc
jae
sub
or
pop
xchg
scas
xor
int3
ss
xlat
push
jle
in
sbb
and
pop
flds
loopw
mov
xlat
out
out
jge
je
or
out
pop
xchg
jmp
lock
lret
and
mov
lahf
jle
pop
lods
movsb
jl
jb
jp
xor
sti
or
mov
jo
jbe
pop
mov
ljmp
xchg
mov
ljmp
xchg
cwtl
gs
add
jnp
les
inc
add
loop
and
push
das
stos
fsubs
cmp
jns
movsb
jmp
sarb
dec
fucomp
cmp
and
shll
cmpsb
cwtl
ljmp
in
cmp
loop
sbb
fadds
adc
sub
sti
push
int3
or
jae
xor
mov
ret
push
cmpsl
pop
adc
data16
sbb
mov
shrl
std
adc
daa
push
arpl
clc
dec
mov
and
push
xlat
popf
icebp
int
push
test
aas
push
sub
fldcw
cmpsb
fcmovu
inc
in
mov
mov
cmp
insb
push
dec
lods
inc
push
cmp
dec
pop
dec
in
cmp
test
mov
push
sub
cmpl
sub
mov
lds
je
push
jb
mov
mov
xor
call
sbb
jnp
pushf
sub
xchg
jns
inc
mov
call
add
add
insl
int
fwait
push
add
ret
pop
fstps
nop
popa
xchg
dec
ret
pushf
call
lcall
addb
jnp
testb
sbb
test
clc
sub
fstp
es
test
pop
add
adcl
inc
lret
das
lea
enter
lods
inc
push
cmp
cmp
cmpsl
or
sbb
mov
pop
stc
shlb
ret
lods
mov
xor
adc
cmpsl
jmp
rcr
add
gs
sub
adc
pop
cmp
in
cmpsl
push
stc
push
aam
mov
ficompl
cmp
outsb
and
fs
mov
xchg
jne
ljmp
lret
mov
pop
xchg
rorb
in
cmpsl
lahf
sbb
jl
add
mov
aam
out
gs
addr16
adc
xchg
sub
aaa
jmp
adc
loopne
std
mov
fstps
cltd
xchg
testb
popa
sbb
lock
adc
fucomp
cmpsb
xchg
and
jmp
mov
push
xchg
pop
shrl
inc
xlat
mov
xor
jnp
lods
adc
clc
dec
push
fdivl
int
stc
les
or
sub
out
stc
repz
scas
lcall
adcl
or
and
icebp
xlat
lods
sti
fnstenv
xchg
xchg
into
lods
mov
dec
mov
or
add
mov
inc
jmp
cwtl
sarl
test
das
mov
xchg
jmp
sbb
add
adc
dec
iret
sbb
insb
mov
inc
clc
cli
repnz
ficomps
mov
rcrb
and
pop
andb
movups
pop
std
je
sbb
sub
pop
or
mov
jmp
loopne
inc
rcrl
pushf
loop
lods
std
lahf
mov
fisttps
ljmp
lret
sbb
mov
jmp
sub
dec
aad
lea
and
jb
lahf
stos
sub
adc
out
and
adc
js
sti
xchg
roll
sub
sbb
push
mov
into
lock
in
mov
bound
pop
fcomps
negb
mov
fstps
mov
or
enter
in
mov
cmp
int
lcall
pop
mov
fs
stc
push
or
subb
ja
out
movsl
sub
cld
pop
adc
jg
pusha
cmovge
mov
xchg
test
std
dec
jmp
idivl
addr16
xchg
mov
pop
je
scas
add
and
dec
stc
or
cltd
sub
jnp
stc
nop
les
imul
or
fdivrs
cld
scas
out
adc
inc
inc
pop
cs
loopne
push
loope
inc
mov
out
xor
pop
sbb
negl
dec
push
mov
lds
push
and
mov
cmovbe
ds
sub
nop
scas
fwait
inc
jns
jg
das
push
js
mov
jno
xor
sbb
adc
sub
fistpl
fcomps
dec
lret
dec
shlb
fldt
sub
push
pop
leave
jle
pushf
fsubrl
mov
sbb
sarl
push
rol
stc
mov
mov
and
cmpsb
mov
mov
sub
jmp
mov
xchg
rcl
shr
stos
loopne
pop
pushf
and
pusha
mov
pop
call
jg
xor
and
fildl
iret
out
test
aaa
push
mov
test
insl
xchg
or
jmp
mov
int3
jb
sarl
xchg
icebp
add
outsl
mov
cltd
lea
dec
lahf
cltd
xor
fisttpl
cwtl
arpl
jne
push
out
push
inc
dec
jbe
xchg
dec
sbb
aaa
push
in
hlt
or
mov
stos
adc
jnp
push
xlat
inc
aas
pop
sub
je
fcmovnu
movsb
into
xchg
fmull
mov
pop
dec
fldenv
fsts
add
inc
fmul
cmpsb
cli
push
dec
test
sbb
mov
cmpsb
pop
es
ds
sub
ficoms
lret
dec
mov
arpl
mov
cmovbe
fldenv
fistpl
fdivs
push
mov
movd
dec
pusha
xchg
fnstsw
or
mov
adc
es
in
lods
and
int3
sbb
mov
inc
ret
jbe
or
sbb
dec
add
push
hlt
movsb
insl
out
in
inc
js
or
or
mov
sub
lret
cwtl
jb
outsl
sarl
jne
nop
mov
fisubrl
in
test
call
ret
sub
test
insb
shrl
jmp
push
inc
mov
xor
aaa
pop
or
dec
push
fnstsw
push
call
xchg
lea
push
pop
icebp
nop
pop
jae
add
sarl
ljmp
or
sub
rorb
adc
repz
les
pop
mov
aam
cwtl
js
sub
push
stos
sub
jae
stos
inc
cli
cmp
lret
pushf
fucomip
repz
mov
xchg
xchg
test
int3
es
stc
push
jmp
jo
lahf
jns
mov
in
imul
ret
ljmp
xchg
adc
movsl
mov
xor
mov
sbb
clc
insb
xor
imul
xor
les
sub
outsl
popl
xchg
pop
inc
cwtl
xchg
popf
test
adc
cmp
les
nop
push
sbb
push
push
cmpb
pop
fldl
mov
inc
adc
adc
fsub
lea
xchg
xor
cmpsl
loop
repnz
jg
test
xchg
in
push
movsb
into
add
in
dec
test
int
mov
lahf
mov
push
lret
out
std
mov
xor
mov
jmp
xor
lret
fnsave
push
dec
test
pusha
adc
aaa
scas
inc
dec
xor
push
data16
push
jbe
adc
int3
in
popf
sahf
cmp
cmp
lret
xchg
icebp
dec
xchg
dec
outsl
adc
dec
cmpsl
cmp
femms
ljmp
out
pop
jmp
lods
xor
shll
roll
lahf
dec
mov
pop
adc
pop
push
sbb
fimull
mov
lock
stos
outsl
jb
mov
stc
shl
push
fistps
push
fistl
push
cwtl
test
leave
cmp
shll
out
das
jmp
loopne
out
push
push
enter
cwtl
test
movsl
repnz
jae
pop
ret
mov
or
in
fwait
cmp
lret
jns
lods
sahf
fldenv
fldl
mov
lds
mov
cmp
or
jge
insb
jns
je
dec
fimull
test
jmp
sti
and
pop
aad
mov
push
adc
test
stos
xor
adc
scas
mov
xchg
loop
fsts
movsb
xchg
sbbl
sub
jmp
dec
inc
sub
or
sub
push
and
dec
pushf
ljmp
sub
outsl
and
mov
sub
sub
in
int
push
arpl
pop
lret
lcall
xchg
es
ret
movsb
sar
into
enter
xor
mov
mov
pop
andb
ret
cltd
lret
imul
and
movsl
shlb
notl
xchg
popa
push
xor
es
push
ljmp
stos
and
call
sub
jae
mov
aad
loopne
hlt
pop
insb
push
orl
dec
in
insl
lods
outsl
fucomp
xchg
outsb
fcomps
inc
repnz
push
jmp
loopne
das
pusha
pop
cmpsl
jb
outsl
cli
or
fs
shr
loopne
shr
les
negb
add
mov
push
cld
ds
out
rcrl
mov
aam
sti
sahf
out
jb
pop
cmpsb
fwait
jmp
pushf
cmp
icebp
xchg
cmpsb
mov
fldenv
adc
punpckhdq
pop
pop
sub
and
xor
lds
xor
jo
mov
mov
addr16
test
mov
scas
cmp
mov
inc
lods
sahf
sub
sub
sti
decb
fs
sahf
cmpsb
mov
in
ret
or
or
push
mov
jnp
and
dec
inc
or
cmp
xchg
frstor
rorb
mov
adc
test
and
fidivrl
test
clc
repz
pop
sbb
mov
add
mov
aam
pop
jp
inc
jb
or
xor
mov
mov
shll
sub
xchg
lahf
jg
lret
sbb
lret
push
ret
leave
jnp
lret
adc
scas
dec
fs
repz
and
cmpsb
cmp
int
aam
popa
sbb
jne
jns
sub
mov
push
test
mov
scas
out
sub
repnz
test
mov
out
lret
movsl
fldcw
dec
jp
lcall
mov
xchg
test
orl
inc
add
cmp
inc
rorb
sub
cwtl
bound
ss
xchg
into
mov
lcall
jl
inc
inc
ficompl
scas
dec
inc
pop
cmpsb
inc
push
addr16
fmull
mov
lcall
popf
lods
out
and
fld
jae
or
hlt
cld
add
and
or
jl
jp
clc
mov
das
push
clc
pop
sub
push
add
lea
cli
loop
push
leave
sti
jo
call
gs
icebp
xor
shll
or
je
fsubrl
mov
fwait
inc
mov
hlt
repz
fsubrs
xor
fldenv
jnp
sub
sub
cmp
push
enter
pop
mov
push
loope
or
pop
and
aam
lret
jl
xchg
cmp
in
in
mov
call
stos
loop
cwtl
dec
cltd
and
pop
and
imul
pop
fmull
mov
jo
jne
cmp
mov
sub
xor
or
aam
loopne
fs
jbe
out
es
and
out
loop
out
xor
dec
xor
rorl
mov
sti
push
pusha
enter
shlb
rolb
loope
push
test
cli
insl
lcall
add
push
adc
es
add
sbb
xchg
movsb
mov
sbb
popf
dec
sbb
xchg
pushf
in
out
dec
xor
adc
cmp
cwtl
or
jno
cmpsb
jl
xchg
hlt
cmp
xchg
xor
fisttpll
and
dec
xchg
push
std
andl
call
out
adc
xlat
xor
iret
dec
jl
lock
pmulhuw
js
or
sbb
gs
cli
rorb
cmp
cli
ds
and
lods
cli
push
enter
aas
jge
xor
ret
mov
das
adc
idivl
pop
sub
inc
loop
dec
test
ljmp
in
gs
ljmp
int3
pop
sbb
push
call
popf
and
out
mov
lcall
mov
scas
mov
cld
loopne
jmp
lods
divb
inc
cmpsb
jns
or
jnp
inc
mov
cmp
movsl
sbb
aas
nop
sub
mov
dec
call
in
xchg
lea
mov
xchg
push
in
cltd
xchg
test
lods
jl
mov
xor
outsb
mov
repnz
out
sbb
ljmp
pop
loope
cmp
adc
pusha
fisubl
hlt
mov
pop
xchg
sbb
stc
push
sbb
xor
and
aam
aas
clc
pushl
and
call
mov
jmp
test
fcoms
inc
call
jl
cld
cmp
and
pop
sbb
out
mov
popa
sub
jmp
test
imul
pop
inc
jge
jns
sub
insb
mov
sbb
test
and
jg
int3
int
mov
or
jbe
sahf
add
lret
mov
xor
sub
jg
or
dec
nop
iret
fistpl
sub
mov
inc
sbb
clc
int3
inc
aaa
rcl
mov
xor
jecxz
mov
sub
in
mov
push
jne
std
mov
pop
decl
clc
aam
push
fs
add
ret
sub
movsl
jnp
and
int
fcoml
movsl
addr16
cmpsb
outsb
push
mov
pop
notb
in
and
stos
leave
icebp
daa
stc
lock
lods
push
pop
iret
imul
jg
mov
pop
lock
std
cmpsb
shll
inc
out
nop
push
in
out
addr16
sub
jl
punpckhwd
ss
or
mov
cmpsb
es
arpl
push
pop
mov
push
lret
push
les
fs
test
lds
mov
sahf
dec
data16
inc
pop
and
ss
mov
clc
jl
mov
cmp
leave
pop
sti
xchg
mov
and
icebp
mov
lods
mov
pop
mov
mov
mov
jbe
lea
sub
imul
dec
mov
cmpsb
rcl
loopne
jbe
daa
cwtl
xchg
lahf
push
mov
pusha
movsl
cmpsb
pop
repnz
out
add
enter
aam
adc
into
imul
push
mov
lods
mov
jmp
pextrw
cmp
and
xor
nop
inc
je
xor
add
sbb
shll
cmp
enter
cmpsb
lcall
fldl2t
lea
and
jns
cwtl
pushf
movsl
dec
int
add
dec
aad
or
stos
fcmove
add
mov
jge
arpl
push
test
inc
shlb
dec
push
lea
stos
loop
jp
jnp
aas
or
shll
inc
jmp
adc
inc
lock
jbe
jbe
loop
xor
and
call
or
mov
sbb
push
dec
sub
stos
mov
daa
lcall
ljmp
inc
aaa
xor
fiaddl
push
pop
pop
push
outsb
fcompl
ret
repnz
ja
inc
xor
pop
mov
jo
push
hlt
fstpl
lock
jmp
stos
sbb
clc
jmp
movsb
jo
out
dec
xchg
int
pop
sub
and
sub
scas
loop
daa
cld
insb
std
pop
in
insl
jg
cmpsb
int3
fildll
sbb
cld
hlt
dec
pop
sti
mov
notb
test
int3
mov
stos
pop
insl
pop
push
cs
out
std
sahf
jb
cltd
mov
lret
sub
shr
xchg
cwtl
mov
mov
addr16
xlat
into
sub
jnp
loope
movsb
lods
adc
xchg
sub
movsb
test
rcr
adc
cmp
xor
stc
mov
push
ds
fisttps
jl
pop
xlat
aaa
sbb
or
cmpsl
int3
pop
scas
cltd
subb
cmpsb
mov
sti
lahf
mov
cltd
scas
in
cmpsl
cltd
nop
and
loopne
xchg
adc
in
add
push
push
mov
or
daa
mov
stos
lods
or
shrb
lea
jb
popa
out
jo
ret
fisubl
lcall
addr16
insl
adc
ljmp
mov
lcall
xorb
mov
aaa
xor
lcall
dec
lret
push
pusha
jg
out
push
sub
pop
pop
out
hlt
loop
int3
je
dec
pop
inc
xor
in
flds
xchg
pop
int3
int
fs
ss
stos
mov
outsl
dec
sub
and
lahf
dec
rclb
cli
push
mov
adc
pop
adc
js
inc
push
rcl
mov
das
inc
or
fiadds
dec
mov
mov
sub
fs
lods
js
inc
adc
cmp
jne
mov
std
mov
cmp
push
push
cmp
or
xor
ds
xchg
xchg
add
sub
mov
adc
loop
arpl
movsb
xchg
aas
cmpsb
add
push
and
outsb
movsb
sahf
in
lret
cltd
cmp
popf
jmp
adc
cmp
xchg
cmp
cmp
rorb
xor
cli
movzbl
inc
test
mov
xchg
jbe
outsl
add
mov
inc
mov
mov
push
or
ljmp
mov
aaa
cmp
jg
clc
cmp
emms
es
stos
das
out
mov
adc
push
fnsave
xor
mov
or
dec
aaa
scas
repz
lret
xchg
fwait
sarl
push
in
ret
dec
fwait
mov
jecxz
pop
adc
movsl
std
and
cli
sarl
inc
fisubrs
dec
es
sub
and
pushf
mov
in
adc
push
jl
das
xchg
out
int3
in
mov
jb
mov
sub
push
pop
rcr
xchg
xlat
subb
and
lods
cmp
fnstcw
jge
pop
push
ja
shrl
enter
or
adc
jmp
add
js
aaa
sar
mov
dec
mov
repnz
in
jmp
mov
pop
mov
cmpsb
adc
cmp
mov
pop
jmp
pop
dec
je
xor
xor
fistpl
stos
in
pushf
outsl
mov
mov
pop
stc
sub
mov
popf
sub
pop
inc
mov
fcmovnbe
jb
sbb
dec
xchg
pop
add
shll
daa
js
mov
mov
xor
lods
out
fistpll
mov
dec
loopne
sbb
sbb
mov
pop
sbbl
fisttpl
sub
lods
lods
jmp
jnp
jnp
in
jns
rcrb
int
daa
dec
jo
lock
int
pushl
fildll
sub
jl
cmp
or
leave
jnp
mov
jecxz
pop
sar
aas
shll
push
lret
jae
fcmove
out
sub
jecxz
jae
pop
dec
test
sub
push
test
mov
leave
push
cmp
pop
bound
sub
stos
sbb
jns
notb
cld
js
std
jbe
push
dec
fmuls
lahf
adc
scas
sbb
cmp
inc
ljmp
lods
mov
stc
test
roll
cmp
xor
lods
icebp
xor
cmc
cmpsl
test
mov
or
mov
pop
jecxz
or
arpl
or
int
in
lock
jecxz
jmp
int3
lock
cmpsb
arpl
and
insl
mov
int
pushf
jp
mov
pop
outsl
movsb
movsl
push
pusha
mov
shlb
pop
stos
loope
mov
ljmp
cmp
push
rcr
cltd
scas
mov
addr16
xor
jl
sti
nop
outsb
cwtl
lcall
lods
loope
or
scas
jns
in
in
adc
cs
js
dec
or
test
mov
jmp
sub
movsl
sbb
cmpsl
and
sub
je
push
xor
dec
adc
xor
fs
push
mov
sbb
es
add
and
shrb
scas
push
mov
imul
xlat
xor
sub
lods
icebp
mov
sbb
sub
push
xchg
cmpsl
repnz
push
test
push
ret
popf
xor
das
jmp
add
xchg
loopne
jmp
push
out
cs
in
pop
nop
sub
dec
fcoms
cltd
inc
sti
jne
or
call
popf
loopne
mov
and
pop
scas
push
cld
adc
in
cld
sbb
dec
ror
fnsave
cmc
dec
dec
fdivrl
lcall
repz
pop
shrl
std
clc
lock
lcall
rorb
inc
test
cmp
cmpsb
or
sbb
stos
or
call
fs
ljmp
dec
inc
pop
cmp
in
xlat
xchg
clc
lcall
cs
out
mov
int
or
xchg
and
mov
push
mov
mov
push
sub
fstpl
imul
add
mov
fwait
out
cmpsl
sarl
fbld
push
cmpsb
add
cmp
sahf
lock
lahf
or
xchg
rcrb
xor
mov
shlb
dec
dec
lods
cmp
xchg
cmpsb
testl
insb
add
jp
sub
sub
add
je
and
mov
mov
mov
mov
or
inc
jnp
neg
sub
dec
mov
jge
jmp
mov
test
and
dec
mov
mov
adcb
cmp
pop
sti
pushl
mov
movsl
or
gs
pop
and
repz
or
rcll
jmp
lret
add
fnstenv
mov
lock
or
xchg
add
jo
insb
or
lret
insl
inc
xor
mul
sti
out
push
inc
mov
aaa
xlat
mov
pop
cld
in
lea
lcall
xlat
push
mov
sub
and
jge
out
mov
pop
adc
enter
pushf
in
sbb
xor
cmpsb
and
addr16
xchg
inc
cmp
stc
clc
sub
push
sub
call
jo
das
add
jne
dec
push
push
mov
mov
fldcw
sub
mov
mov
faddp
mov
fmul
add
pop
cmp
xor
xor
jne
sub
iret
pop
bound
xchg
sub
adc
aaa
mov
jg
push
rorb
push
mov
addl
mov
pop
pusha
loop
xchg
out
out
mov
add
in
dec
inc
jle
push
pushf
push
orb
mov
lahf
dec
fisubrl
sahf
sub
adc
cmpsb
repz
jae
xor
pop
shrl
sub
xchg
jmp
mov
adc
mov
jnp
fidivs
xchg
js
jbe
cmpsb
into
cld
add
cld
push
dec
add
aaa
sbb
cmpsl
in
adc
pop
das
cmp
cmp
inc
push
rcrl
add
shlb
sub
sub
mov
cmp
mov
sahf
lahf
inc
lret
and
divb
sub
mov
sar
stos
pushf
fisubrs
or
mov
test
pop
js
pop
cmc
fstl
f2xm1
aas
cmpsl
jbe
mov
sti
jg
inc
mov
pop
inc
mov
loopne
and
loope
call
stos
push
notl
sub
pop
int3
sub
pop
in
jae
out
mov
xlat
into
jno
mov
adc
fcoms
mov
xchg
stc
jbe
add
ret
mov
aam
push
push
push
sbbl
in
or
pop
cmp
insb
call
jb
cmp
mov
or
sbb
cmp
into
fidivrs
movaps
adc
and
les
testb
jecxz
ficompl
push
xchg
xchg
sub
mov
pop
xchg
mov
inc
test
call
push
adc
push
mov
shr
inc
push
stc
bound
adc
jmp
or
arpl
loopne
or
bound
cmp
fiadds
jo
or
bnd
shr
and
adc
adc
sbb
mov
mov
gs
push
xchg
or
mov
push
sar
push
add
pop
fdivr
aas
sub
mov
cmpsb
inc
filds
xchg
adc
shr
movsb
lahf
sahf
push
lock
arpl
ret
xchg
xor
inc
jb
imul
jae
addr16
mov
jno
pop
lcall
mov
push
rcll
adc
bound
nop
andb
sti
push
adc
sbb
sub
lret
punpckhwd
out
sub
sbb
dec
xorb
jmp
ret
pop
ret
mov
in
push
in
lds
lret
sub
test
and
push
aaa
mov
sub
jo
call
or
aaa
test
loope
and
cmp
jae
add
pop
push
jae
sub
push
push
sub
sub
loop
lock
cmp
loopne
scas
in
leave
dec
addr16
bound
jb
scas
jecxz
sbb
shlb
pop
sub
xchg
iret
clc
dec
jo
adc
pusha
aam
mov
push
or
sub
or
add
aas
dec
pop
test
test
clc
sbb
stos
addr16
mov
fsubr
jae
jle
outsl
cld
inc
or
adc
or
mov
hlt
pop
popf
es
pop
enter
icebp
and
call
test
mov
aad
xor
push
outsl
loop
loopne
inc
adc
xchg
xchg
jns
out
data16
mov
int3
push
insl
shrb
fsubrl
lahf
test
lods
inc
pop
cmp
enter
or
movsl
pop
push
scas
loopne
in
aam
mov
stos
mov
inc
loop
mov
push
push
add
leave
std
scas
inc
push
faddp
sub
or
fsubrl
lahf
jne
cmpsb
fisubs
mov
lahf
or
push
loopne
in
lret
mov
xor
dec
in
aaa
mov
adc
fwait
and
sbb
sub
dec
xlat
dec
mov
dec
mov
mov
lea
cmp
test
lock
and
movsl
lret
add
push
out
in
push
push
push
fsubs
lcall
gs
inc
js
test
or
sbb
ja
rcrl
sarl
xor
pop
orb
cltd
pop
insl
in
clc
add
mov
fstps
mov
test
pop
lahf
push
out
sub
cwtl
and
and
inc
inc
jmp
push
cld
inc
mov
ljmp
mov
out
cwtl
sub
pop
fcomp
mov
cmp
mov
std
mov
cmp
insb
pop
or
stc
inc
add
lret
nop
arpl
add
pop
pusha
mov
adc
cmpsl
adc
pop
push
jmp
push
pop
sti
in
enter
insb
pop
cmpsb
inc
cltd
sub
sbb
cmp
pop
test
std
dec
in
pop
jmp
adc
adc
pop
lock
add
bound
out
in
bound
lahf
dec
cmc
dec
adc
lods
push
filds
sub
aaa
mov
ret
loopne
xor
dec
fldcw
xchg
push
pop
mov
jae
xor
arpl
fs
add
mov
inc
pop
std
aaa
xchg
pop
jmp
cmpsl
xchg
mov
mov
repnz
negb
dec
test
std
ret
cli
push
cmp
outsb
xor
addr16
xchg
dec
pop
or
imul
repnz
fptan
ja
jl
in
loope
loopne
out
push
ret
mov
push
push
mov
aas
leave
cmpsb
jne
mov
jnp
add
or
sub
and
add
fisubs
jno
mov
sbb
addr16
cmpsb
gs
mov
fidivl
jae
sub
or
in
int3
add
into
fs
jnp
push
xchg
pop
and
out
fidivrs
add
call
xchg
sbb
gs
mov
sbb
fmull
rol
cld
jecxz
cmpsb
fs
sar
add
or
jmp
dec
xchg
pop
scas
icebp
out
lods
lcall
dec
out
lcall
lahf
enter
test
push
sub
xlat
cs
lret
jle
push
dec
push
lret
add
sbb
int3
jns
pop
stos
cmpsl
mov
imul
xchg
cs
or
inc
and
jnp
rclb
jnp
and
cmp
hlt
push
mov
push
addr16
mov
jmp
sub
aaa
test
pop
gs
loope
and
rcll
into
mov
cli
xor
add
in
data16
into
jle
cwtl
and
sub
pop
jl
push
sbb
mov
push
stos
sbb
pop
jg
mov
clc
mov
pop
jmp
xlat
xor
dec
mov
popa
jecxz
mov
addr16
and
mov
add
push
cmpsl
fdiv
lret
scas
cmp
and
push
out
pop
std
out
mov
and
enter
add
cmpsb
push
sbb
cmc
pop
cmc
lcall
leave
xchg
sub
mov
ret
mov
sub
ds
sub
lret
lea
cwtl
leave
jns
dec
cmpsb
push
ret
out
scas
aam
pop
out
lar
imul
push
ds
or
outsb
mov
and
dec
pop
adcb
fidivs
sbb
lcall
mov
ja
mov
cmp
ss
jp
dec
mov
mov
das
stc
js
adc
call
shlb
push
dec
or
orl
rcrb
adc
xchg
pop
popf
testl
test
fisttpl
mov
pop
push
outsb
inc
dec
push
ret
std
mov
sub
pop
test
jl
push
scas
test
aad
xor
xchg
incl
bound
mov
mov
mov
xor
add
mov
sarl
mov
sti
sbb
popa
ss
mov
js
push
cmpsb
push
xlat
push
cs
push
lret
jp
sbb
out
jl
cmpsl
and
insl
push
test
shrb
or
iret
mov
push
and
inc
subl
push
adc
bnd
or
xor
cwtl
movsb
test
inc
xor
lret
mov
cmp
push
mov
dec
in
sub
dec
sarl
sbb
in
test
ja
and
push
in
add
or
fsubrl
cmp
sub
jecxz
push
mov
call
push
mov
stos
push
jecxz
sar
jne
leave
and
xor
xchg
sub
sbb
inc
cltd
lcall
lret
lea
inc
iret
rol
or
movsl
icebp
mov
int3
loope
sub
fsubrl
inc
scas
xchg
int3
push
icebp
fwait
js
loop
xchg
into
jnp
jmp
sub
inc
out
and
mov
data16
inc
lods
loope
test
lret
aad
adc
add
mov
arpl
cwtl
lds
mov
push
lods
and
or
call
icebp
push
les
adc
fisubs
adc
insb
cmp
sub
mov
pop
mov
fcomps
sub
lods
popf
imul
dec
es
jo
cli
insb
xor
pop
fdivrl
inc
inc
sahf
popa
push
stc
leave
test
ficoml
aam
ds
mov
popa
sub
addr16
in
fcmovbe
int3
lods
pop
out
lcall
xor
dec
int
inc
jno
in
lea
daa
scas
cmpsb
mov
ja
stc
sbb
cli
mov
mov
lret
loopne
movsl
xor
in
pop
jne
or
cmp
js
jo
mov
inc
pop
sbb
push
dec
sub
test
dec
push
mov
mov
mov
xor
lahf
scas
sbb
dec
test
push
and
pop
add
pop
insl
mov
cmpsb
shlb
insl
mov
out
add
cli
push
mov
fnstsw
sbb
cmc
xor
out
xchg
dec
loopne
stos
andl
jecxz
cmp
movsl
mov
out
clc
repnz
push
add
faddl
xchg
out
or
sub
popf
pop
xor
sti
std
push
xchg
or
lds
sub
jg
sbb
aas
jecxz
fwait
push
mov
fcmovnu
cmp
sbb
or
fcmovnu
ja
dec
fabs
push
pop
jo
ljmp
pusha
inc
rorl
push
mov
ja
push
loop
test
push
mull
xor
push
pop
mov
fsub
jmp
inc
xor
cltd
adc
cmpsb
fldenv
test
and
lock
lods
popa
call
mov
pusha
jmp
add
xchg
fwait
nop
mov
pusha
add
pop
mov
mov
inc
xchg
mov
ljmp
adc
mov
sub
in
sbb
aam
hlt
pop
adc
stos
and
int3
and
test
lods
mov
movsl
cld
push
decl
outsl
outsl
xor
sub
ret
lea
push
mov
xchg
mov
mov
mov
and
xor
dec
pusha
jbe
mov
or
jbe
ss
leave
xor
and
pop
int
dec
in
mov
pop
pop
mov
leave
inc
pop
leave
add
shll
push
sbbb
in
add
outsl
shrb
add
xchg
cmp
sbb
xchg
cmpsb
fimull
out
or
out
out
sub
or
add
xchg
std
xchg
push
and
addr16
pop
sbb
in
xchg
imulb
loopne
es
push
lcall
insl
sbb
rclb
xor
nop
and
xor
and
inc
mov
sub
bound
inc
call
subl
push
inc
stos
adc
pop
nop
cltd
stos
fstl
or
sub
hlt
loopne
pop
pop
test
sbb
lds
cmp
stos
loope
pop
cmp
lcall
movsb
pop
filds
lock
xchg
jns
jo
lock
mov
mov
or
mov
mov
out
lea
rorl
push
mov
insl
and
mov
add
mov
jae
es
xor
loopne
mov
sbb
cmpsb
stc
sub
repnz
test
push
cs
push
lock
enter
jnp
ljmp
fldcw
jbe
jno
fldcw
std
jno
stos
in
xchg
push
xor
inc
adc
mov
aaa
and
insl
sub
aaa
pop
pusha
sub
rclb
xorb
jo
sbb
lcall
adc
pusha
mov
loopne
jne
out
movsb
cli
jmp
mov
pop
cmp
fmull
loop
lock
repz
dec
shll
in
std
mov
push
jle
mov
jb
sbb
xchg
pushf
push
leave
xchg
or
addb
dec
sbb
stos
add
flds
adc
sbb
push
jp
sbb
sbb
adc
fidivrl
mov
shll
jg
xchg
mov
xlat
inc
xchg
cltd
std
mov
in
pop
lret
cmp
lahf
dec
cmp
ret
and
and
cltd
or
xor
inc
fcmovbe
lods
sahf
and
jno
ljmp
sub
push
xchg
insl
in
dec
jmp
aas
into
jo
sub
dec
push
loope
and
out
cmp
in
push
fwait
loope
aaa
movb
popf
inc
imulb
push
mov
test
loope
and
mov
in
jp
lea
sub
mov
lods
mov
inc
xchg
xor
fldenv
inc
cli
cli
fstl
enter
pop
adc
es
sbb
mov
xor
sub
std
lods
xor
adc
mov
lahf
push
xchg
fldt
push
inc
imul
jns
sub
repz
jmp
cmp
jecxz
into
cs
enter
adc
lret
cmp
fwait
push
sub
adc
arpl
punpckhdq
push
cmp
cmp
jmp
sub
jecxz
in
sbb
mov
sub
jp
sbbl
cmpsb
add
testl
rcll
pushf
cmp
mov
ja
push
test
dec
mov
pop
pop
aad
fbld
adc
pushf
in
xchg
adc
jb
ffree
push
push
es
jg
jnp
fisubrl
xchg
or
rol
fisubrl
popa
loopne
or
lods
out
or
sub
divl
mov
pop
mov
and
inc
push
gs
sbb
jb
cltd
xchg
fnstenv
lahf
or
push
rcll
sbb
cmp
lds
jge
std
push
fcomps
or
jecxz
cld
out
call
scas
jbe
push
mov
xchg
mov
xchg
pop
jnp
cmp
dec
cmp
ljmp
push
sbb
stos
outsl
pop
mov
insb
mov
pushf
test
pavgw
jmp
dec
arpl
pop
mov
mov
pop
hlt
popf
mov
pop
scas
sbb
mov
imul
pop
jp
mov
sbb
fldt
shll
iret
xor
call
cmpsb
movsl
ret
ss
cmp
pop
test
xchg
in
out
lods
shlb
push
out
xchg
jo
addr16
je
mov
sub
adc
sub
ficompl
cmpsb
push
xchg
loopne
hlt
nop
mov
inc
mov
ljmp
cmpb
adc
es
fucomi
rorl
movsb
sbb
pop
shlb
ror
out
ds
repz
jns
fidivs
outsb
pop
inc
sub
nop
inc
nop
leave
xchg
xchg
aaa
pop
jno
loopne
mov
xorps
push
xorl
lods
fidivrs
fdivrl
aam
sbb
dec
pop
das
sub
clc
jg
fwait
js
in
enter
aas
ficompl
sub
js
or
xorps
adc
pop
inc
sub
or
lahf
mov
push
mov
nop
loop
fisttpl
mov
movsb
loope
std
pop
std
out
jecxz
mov
push
imul
leave
lret
out
pop
sahf
cs
std
iret
and
in
adc
jge
icebp
in
out
pop
mov
cmp
lret
js
enter
dec
ret
fstps
inc
push
js
jbe
adc
scas
imul
hlt
aaa
fadd
test
mov
cmp
shll
test
sbb
cmp
add
lcall
push
and
sti
cmp
scas
pushf
mov
int3
fwait
dec
push
into
mov
in
cmpsb
dec
pop
xlat
movsb
lea
jl
in
leave
fsub
add
mov
arpl
jl
addr16
push
jg
push
in
out
test
push
or
push
enter
stc
loope
sub
data16
inc
sbb
xor
in
stos
es
loopne
rcrl
enter
inc
inc
xor
scas
inc
dec
outsl
cld
ja
out
imul
or
cwtl
scas
fs
cmpsb
stos
pop
in
mov
jae
jecxz
int3
rolb
push
imul
jecxz
add
push
pop
xor
sub
imul
sub
and
loopne
pop
pusha
lods
lods
lods
xchg
add
subl
push
sbb
pop
aad
pop
stos
jp
lcall
add
dec
jg
sub
stos
into
xor
lock
pop
and
movsb
mov
imull
popf
lcall
data16
push
adc
lea
and
fucomi
in
lods
dec
sbb
mov
xchg
mov
push
lret
pop
jle
xchg
stos
cmpsl
jbe
xchg
subb
aam
in
sti
das
ret
inc
popf
cs
pop
shll
add
dec
add
fcoml
dec
mov
jne
test
adcl
movsl
xor
xor
shr
das
mov
shl
xchg
ja
fpatan
cltd
jbe
sahf
in
xlat
cmp
sub
xchg
addr16
sbb
or
and
push
dec
stos
sbb
shrl
push
push
andb
stc
out
in
or
cmpsl
lods
xor
jl
in
pusha
or
mov
test
loopne
xchg
insl
pop
adc
lods
and
xchg
mov
mov
sbb
mov
test
loop
test
jnp
iret
adc
daa
out
pop
sarb
clc
and
movsb
sub
pop
sub
and
xor
ss
lahf
cmp
mov
mov
aad
flds
orb
mov
repz
popa
jge
sbb
andl
sbb
in
push
jecxz
xor
sub
mov
pop
mov
adc
pop
adc
sbb
mov
inc
cmpsl
fcoms
jns
lock
adc
pusha
push
sub
les
xor
dec
mov
jae
test
dec
fbld
push
rcrb
add
mov
rclb
inc
aas
fwait
dec
test
aad
mov
pop
push
outsb
scas
sub
mov
mov
xchg
push
pop
dec
push
cmp
cli
stc
inc
pop
sub
divl
push
mov
sub
jbe
bound
imul
add
sub
xor
jmp
jge
pop
call
rcrb
adcb
bound
xchg
push
sub
cli
push
sub
lcall
cmc
lea
lods
lods
loope
clc
into
lods
sub
or
push
fsubr
ja
callw
push
mov
or
scas
aad
add
loopne
dec
enter
loopne
gs
or
cmpl
popa
arpl
movsb
fcomps
mov
mov
mov
fs
pop
mov
adc
jge
jmp
subl
icebp
int
inc
clc
xchg
std
js
insl
or
mov
out
int
jo
cmp
scas
mov
loopne
movsb
mov
test
mov
pop
cld
pop
fdivr
fs
into
fnsave
push
lock
xchg
test
popf
dec
cltd
or
push
sahf
mov
stos
inc
cmp
or
mov
sub
ss
mov
pop
ss
inc
inc
adc
push
stos
mov
dec
or
cmp
jno
add
sub
jp
hlt
inc
test
test
pushf
out
jae
inc
xchg
pop
xor
cmpsb
arpl
dec
testl
mov
sbb
es
dec
mov
sub
test
adc
out
xchg
pop
lock
mov
xor
lcall
out
enter
stc
mov
or
shll
mov
fisubrl
lock
icebp
fcoms
jns
or
out
movsb
jnp
scas
shrb
iret
ds
fnstsw
bound
insl
popl
mov
lahf
or
or
pop
mov
sub
xor
stos
loope
inc
pop
jle
or
push
scas
arpl
pop
cmp
inc
pop
mov
dec
inc
and
testb
xchg
mov
cmpl
out
dec
xor
cmp
pop
imul
xchg
cmpsb
dec
loope
jae
and
negl
sub
cwtl
jecxz
cmpsl
dec
or
repz
cmpsl
repnz
rcll
push
and
dec
subl
pusha
jb
outsl
outsb
jge
inc
jb
loop
xor
adc
push
insb
push
fwait
lds
pop
cmp
add
outsl
in
jg
mov
das
mov
push
add
cmp
shlb
pop
int3
xor
xor
rcrb
je
fsubl
push
and
icebp
sub
pop
sub
mov
lds
sub
in
and
aaa
test
mov
dec
mov
jmp
outsl
xchg
mov
push
xchg
mov
mov
xor
jo
and
lock
sbb
sub
lods
lahf
pop
jo
test
or
test
mov
push
xchg
pop
jbe
xchg
xor
sub
fcmove
lcall
pop
sub
or
dec
jbe
mov
shlb
jnp
mov
fmulp
fmull
movsl
push
pop
call
or
insl
fwait
nop
cmp
dec
pushf
data16
xor
icebp
mov
adc
in
mov
in
add
dec
out
jmp
das
rolb
or
sti
sub
loop
sub
test
sub
cli
jnp
lahf
mov
dec
cld
mov
test
jmp
dec
mov
rcll
rcrb
f2xm1
pusha
scas
sub
sub
pop
push
lret
cmp
fwait
pushf
cmp
cmp
sbb
sub
sub
out
mov
dec
int3
jo
sbb
out
sbb
xor
aam
jbe
lock
adc
hlt
dec
js
hlt
inc
or
pop
jne
pop
push
push
ja
push
xorb
and
cli
jp
popl
popf
sbb
cmp
js
adc
sub
adc
mov
call
add
ljmp
cld
sub
cmp
outsl
mov
sbb
push
mov
icebp
jecxz
inc
maskmovq
notl
popf
rorl
cli
pop
ljmp
ja
pusha
ja
nop
test
sbb
mov
mov
push
popa
test
out
lret
in
lcall
push
movaps
xchg
adc
popf
mov
push
pop
add
xor
insb
notl
push
test
lock
sub
push
fnstenv
movsl
mov
sbb
add
lcall
xchg
sbb
xor
pop
inc
in
sub
dec
jbe
lcall
jno
jl
dec
jmp
pop
in
inc
mov
jle
in
jl
ja
shll
add
adc
dec
icebp
adc
push
push
call
and
xchg
mov
mov
dec
mov
push
add
push
rorl
push
jmp
cmp
mov
jb
sub
sub
sub
inc
cltd
iret
cld
sahf
jl
mov
out
repnz
xchg
xor
js
and
ret
je
sbb
in
and
sub
scas
sbb
push
pop
push
mov
int3
sbb
imull
push
mov
xlat
vpmaxub
out
jne
mov
pop
cmp
inc
cmp
push
sahf
rcl
clc
sbb
xchg
shld
stos
sub
dec
pop
add
test
pop
sub
jnp
aas
out
ljmp
test
lcall
insb
insb
ret
adc
xor
imul
cmp
enter
add
mov
dec
mov
push
call
in
lods
push
xchg
out
lea
lret
inc
in
sti
es
adc
jl
int
lret
add
cmp
dec
jbe
push
enter
dec
mov
neg
inc
adc
mov
adc
jp
sbb
das
mov
inc
mov
lds
push
and
push
scas
in
inc
inc
mov
pop
mov
out
jnp
dec
out
fnstsw
loop
test
cmpb
jp
in
mov
in
dec
sub
mov
nop
je
out
pop
frstor
shl
dec
dec
pop
mov
stos
sub
scas
mov
arpl
jl
fldl
mov
sahf
jmp
cmc
pop
rcrl
pop
xchg
rorb
stos
inc
jo
cs
imul
in
imul
push
int3
test
jae
or
or
mov
adc
es
es
dec
nop
shll
mov
push
jns
dec
popf
jl
data16
jno
sahf
sub
lods
dec
lds
fisttpll
int
addr16
xchg
stc
enter
sbb
cli
dec
adc
sahf
bound
add
sub
ja
in
jmp
sub
adc
insl
xlat
sbb
addr16
psubw
jbe
push
out
mov
mov
cmpsl
outsl
push
xchg
in
push
and
fcmovne
cs
jmp
cltd
ss
lret
es
sub
or
in
dec
int
mov
loop
push
std
das
loop
add
push
ret
stc
icebp
addr16
fists
sub
cmpsb
xchg
jne
sbb
dec
pusha
xor
push
inc
mov
stc
data16
adc
ljmp
jo
jae
fs
mov
ret
icebp
jle
jmp
pushf
out
jmp
sub
divb
jl
xor
add
jne
shlb
push
jae
rcrb
or
insb
sbb
aad
add
push
sub
cs
cmpsb
iret
cmp
xchg
xor
jmp
cld
popf
call
test
sbb
lods
dec
mov
pop
mov
cmp
ss
loopne
mov
out
add
mov
xchg
iret
cmp
shrb
xor
mov
cs
or
lds
sbb
jnp
xlat
adc
rcrl
out
lods
push
pop
pop
xchg
mov
mov
xchg
cmp
fisubl
stos
push
ja
ljmp
addr16
scas
mov
fsts
jbe
sti
out
call
jmp
je
cltd
and
lret
pop
leave
mov
ficompl
sub
mov
and
leave
xchg
mov
sub
fdivrl
mov
xchg
stos
pop
lcall
in
or
ja
out
out
push
negl
jp
inc
xchg
mov
sub
xchg
addr16
aas
loop
sbb
mov
int3
mov
xor
popf
and
sbb
xor
dec
cmp
divl
bound
out
push
xchg
mov
clc
jecxz
push
adc
test
out
into
or
addr16
fidivl
xlat
add
scas
ja
es
xchg
inc
call
test
es
push
imul
arpl
xor
mov
pop
jnp
addr16
into
dec
mov
pop
xchg
xor
mov
cmp
imul
jmp
jp
mov
inc
cs
pop
vzeroupper
pop
js
ss
dec
mov
push
mov
inc
and
loopne
push
or
cld
sub
cli
mov
cmp
mov
lret
test
fcmovbe
dec
adc
and
pop
mov
pop
loope
arpl
fwait
hlt
jo
mov
pushf
test
pop
jns
fstl
sahf
mov
push
dec
pop
dec
aam
mov
gs
xor
jle
jo
in
push
pextrw
xchg
push
add
repz
lods
int
push
fwait
cmp
xor
cmpsl
inc
ret
jnp
les
push
dec
sti
std
shrl
jmp
mov
or
mov
mov
jae
pop
ret
push
mov
es
jae
ja
movsl
pusha
inc
add
sbb
lcall
xchg
nop
xor
mov
fistps
mov
mov
repz
adc
mov
lock
call
outsl
popf
mov
or
jmp
mov
mov
mov
jb
cmp
out
ds
mov
ret
or
icebp
push
fmul
mov
mov
test
push
fsts
filds
mov
icebp
jnp
jae
and
cmp
fyl2x
cmpsl
ss
push
lods
mov
pushf
icebp
test
sbb
pop
adc
cmp
add
push
in
sbb
ds
pop
sbb
mov
fstpt
mov
int3
sbb
push
mov
inc
lods
sbb
in
mov
mov
fldenv
or
xchg
mov
push
xchg
dec
xlat
sub
or
push
mov
fisttpll
lcall
mov
mov
sahf
cmp
mov
pop
add
cmc
push
sarl
cmpb
xchg
outsl
cld
es
sub
rcl
push
je
cmp
jne
leave
add
jl
fisubl
fisttps
movsl
xor
mov
sub
test
rolb
inc
xchg
ficompl
pop
dec
dec
fimull
out
push
cmp
and
cmpl
sbb
lods
mov
movsb
out
pop
pop
lds
jns
sub
lahf
test
mov
dec
mov
std
movsb
lret
dec
inc
fadds
jmp
stos
js
movsb
pop
in
int
mov
dec
pop
mov
ja
xchg
cmp
or
jg
fldenv
fnstenv
test
int
xor
stos
mov
sub
ds
or
add
in
cmpsl
push
in
push
cmp
aaa
in
mov
popa
pop
add
bound
scas
lcall
jb
jmp
cmp
dec
enter
jge
xchg
push
cs
sbb
sbb
cmp
jo
push
rcrb
enter
lock
lahf
call
jmp
in
sbb
lret
mov
xchg
stos
stc
lock
fs
out
push
xchg
loopne
xor
mov
cmc
inc
rclb
mov
in
xor
push
outsl
leave
lds
ret
leave
ret
out
add
mov
out
fmull
inc
into
testl
dec
and
jbe
sub
mull
mov
jnp
adc
mov
dec
fsubp
and
push
out
pushf
loopne
cmp
sub
jnp
xchg
cmp
xchg
enter
and
xor
pop
scas
sub
adc
dec
lods
icebp
scas
or
sub
inc
and
dec
jp
xchg
or
mov
pop
cld
test
adc
sbb
push
pusha
loope
jnp
out
lret
mov
loop
or
aam
dec
fisubrl
push
cmpsl
pop
mov
aam
pushf
or
xlat
lahf
sbb
push
mov
inc
out
leave
cs
pop
mov
jns
out
sub
lahf
dec
mov
sbb
scas
jle
in
mov
lcall
jmp
int3
adc
pusha
mov
and
sbb
push
or
sbb
ret
or
out
sbb
ljmp
sbb
add
iret
mov
and
fidivrl
dec
mov
mov
sub
hlt
push
mov
or
stos
dec
fwait
clc
test
stos
call
mov
ss
bnd
out
mov
sbb
enter
repnz
jmp
outsl
int3
mov
pop
mov
jns
mov
stc
mov
xor
cmp
mov
scas
cmpsl
pop
fstps
pop
sahf
leave
push
cmp
out
cmc
rcl
add
sti
sbb
inc
ret
xor
dec
mov
sub
sub
out
jne
es
pop
lods
sbb
add
jmp
cwtl
jo
jge
jbe
outsl
insl
mov
mov
unpckhps
je
xor
xchg
jbe
jmp
adc
fldt
sbb
test
xchg
shlb
sub
xor
jnp
sub
fadd
dec
loopne
cmp
int3
fstpl
sub
push
jle
cmp
sub
pusha
or
ja
lret
fwait
stc
adc
nop
leave
sub
sub
inc
mov
in
pushf
sub
loope
jmp
dec
inc
mov
rorb
call
in
insl
inc
push
enter
aas
or
cmp
test
mov
add
pop
and
in
sub
adc
push
in
push
xor
ret
and
xchg
lods
out
sbbb
mov
push
jno
jbe
aad
mov
push
dec
pop
mov
sub
mov
rcll
adc
mov
test
xchg
xchg
aas
ret
push
test
ret
cmpsb
out
cmp
ret
mov
ret
movsb
out
in
in
and
push
test
shrb
mov
or
xchg
into
mov
popf
inc
lods
mov
in
dec
mov
sarl
mov
cmpsl
aaa
outsb
pop
pop
adc
sub
mov
cmpsl
mov
and
mov
insl
and
test
or
das
stos
pop
and
mov
sbbb
scas
addr16
rcr
inc
and
gs
jne
das
scas
dec
and
fldenv
insl
sub
pop
adc
adc
jae
sbb
cltd
cmp
cmpsl
out
scas
icebp
popf
pop
pushf
sbb
rorb
pop
sub
scas
sub
insb
std
sub
icebp
test
sarl
imul
cld
xor
leave
lock
sbb
into
adcl
cmpsl
test
dec
mov
mov
shrl
scas
pusha
pusha
gs
int3
jno
and
mov
jmp
push
push
std
mov
xchg
and
jne
fucomp
ljmp
fmuls
sbbb
aas
dec
lea
ljmp
lret
xchg
and
pop
add
mov
inc
movsb
inc
jae
aas
rorl
mov
scas
movsb
sahf
or
cmp
stos
loopne
in
xor
js
pop
sbb
fisubrl
inc
stos
pop
jp
stos
jb
lods
lcall
cmpb
out
fisttpl
scas
stc
cmp
xor
aad
pop
sbb
mov
scas
stos
pop
scas
fs
jmp
sub
cltd
int
mulb
imul
jmp
dec
lds
sub
int3
lods
push
cmp
loop
loopne
mov
push
in
add
mov
xchg
mov
paddusw
cmpsb
push
sub
outsl
lds
movsl
movsl
jg
mov
fsubr
lds
js
sbb
lods
cmp
stos
mov
inc
inc
lock
dec
icebp
pop
int
sub
in
jbe
les
inc
in
scas
into
or
test
outsl
inc
dec
stos
push
js
cmp
loop
ret
inc
cmp
jbe
mov
dec
add
cmp
and
aas
mov
push
das
incb
bound
jbe
push
unpckhps
out
sub
mov
bnd
lcall
lock
clc
sbb
add
lret
dec
or
sbb
lea
movsl
out
dec
rcll
lock
sub
push
mov
adc
sub
and
push
fisubl
leave
ljmp
outsb
jns
shl
js
inc
stos
imul
cmp
sbb
inc
pop
cmpsb
lahf
dec
sbb
push
in
sahf
mov
stc
and
jbe
cld
pop
out
insl
jp
sub
dec
push
jl
out
cltd
mulb
and
xor
iret
or
or
bound
aaa
in
test
fsub
pop
cmpsl
jmp
sbb
pop
std
stos
mov
sbb
fsubrs
rcrl
and
push
popa
xchg
xorb
jne
icebp
xchg
ja
stc
bnd
imull
push
das
jp
jle
inc
cwtl
cmpsb
cmpb
loop
mov
popf
sub
xchg
xchg
sbb
push
cmc
stos
cmpsl
or
lcall
or
adc
cmpsl
int3
sahf
subl
pusha
mov
jo
das
jo
cmc
and
or
dec
in
mov
mov
dec
jne
cmp
stc
xor
imul
cld
stc
sbb
cmp
push
loop
psubw
mov
or
mov
cld
outsl
loopne
stc
outsl
adc
leave
push
leave
dec
shlb
jp
jl
cmpsb
ret
repnz
cmpsb
jns
das
out
ror
cmpsb
imul
inc
add
push
or
sub
les
xor
mov
scas
push
leave
enter
je
xchg
mov
testb
jne
fisttpl
mov
movsb
and
cmp
pop
enter
loopne
pushf
sub
pop
test
pop
adc
cmc
into
sbb
sar
xchg
sub
out
cmp
inc
sub
mov
sub
aad
mov
sbb
add
shlb
out
dec
pop
mov
ret
mov
loop
sub
push
inc
or
xchg
loopne
jo
fsubs
sbb
repz
addr16
or
test
gs
mul
in
mov
cli
jae
jnp
push
insb
loopne
mov
and
mov
js
pop
fwait
lcall
out
ret
ja
aad
inc
sbb
outsl
sub
pop
mov
cltd
mov
fstps
cmpsb
jae
pop
imul
jae
inc
iret
subb
cmp
cld
xchg
test
cmp
pop
inc
stos
mov
test
mov
push
add
pop
pop
mov
xchg
jg
rorb
cmpsb
mov
fcmove
mov
mov
add
and
sahf
cld
ja
outsl
lcall
fadds
outsl
stc
jmp
xor
sbb
outsb
cwtl
xor
push
ljmp
ja
hlt
stc
and
stc
xchg
push
aad
jb
je
jnp
mov
sbb
lahf
and
mov
mov
test
jo
xlat
ljmp
pop
jo
test
mov
and
fiaddl
xchg
dec
test
push
lea
mov
sbb
pop
cli
add
cld
push
mov
insb
cmp
mov
sub
add
or
lock
call
subb
cmpsb
ficompl
out
fucomip
push
push
or
or
mov
outsl
dec
lcall
push
ja
bound
add
fld
fs
push
loop
pop
int3
xor
mov
addr16
test
push
fsubrs
test
or
test
xor
scas
iret
loop
adc
dec
push
xor
jae
scas
loop
adc
add
repz
sub
int
xor
ljmp
cmp
adc
pop
out
add
call
mov
fistps
mov
sbb
rorb
and
sub
sarl
aad
std
and
loop
int
out
frstor
inc
aad
and
hlt
pop
sbb
movsl
call
std
mov
gs
push
cmp
test
lea
pop
cmp
jbe
cmp
out
jecxz
push
dec
pop
lea
aas
adc
popf
ss
lods
js
jl
lea
jecxz
cmp
and
cmc
std
fisubs
pop
lret
lahf
sahf
es
and
mov
mov
xor
out
sbb
sbb
xchg
movsb
fdivrp
adcl
push
test
add
push
fsubrs
add
sbb
sbb
popf
cmp
pop
hlt
fiadds
add
in
xor
loopne
jmp
dec
mov
adc
mov
push
test
inc
add
lods
nop
or
lds
cltd
outsl
mov
stc
sub
jbe
jns
ret
pop
add
lock
out
xchg
sub
lds
mov
dec
mov
insb
stc
stc
sbb
pop
fwait
jae
orb
pop
movaps
cmpsl
mov
das
test
adc
push
inc
cli
mov
test
sahf
hlt
rclb
psubw
or
js
test
inc
adc
int
dec
int3
xchg
jge
mov
into
mov
push
push
les
ret
mov
sbb
arpl
and
jbe
cwtl
dec
and
sub
pop
and
sbb
cmpsb
ljmp
push
es
mov
popa
loopne
pop
ret
ficomps
jp
js
shl
pop
xchg
popf
call
push
mov
xchg
cmc
and
bound
fidivrs
mov
sub
mov
addr16
sub
das
repnz
std
scas
shll
cwtl
sbb
pop
gs
pop
mov
add
lcall
clc
push
js
mov
sub
lea
mov
sbb
ret
mov
cmpsb
xchg
and
or
pop
fadd
call
jne
push
sar
lcall
jmp
leave
cmp
shll
insb
sub
adc
adc
fnsave
scas
or
lcall
sti
lcall
jbe
dec
aaa
push
push
jg
es
test
in
clc
movsl
es
fbstp
in
add
pop
testb
lods
lods
sub
push
adc
orb
cs
sub
ret
and
ja
sti
arpl
mov
mov
jno
mov
mov
popa
shlb
outsl
in
and
adc
mov
lret
jae
les
out
pusha
sbb
idivl
and
pop
sahf
test
push
stc
lahf
ret
sbb
xor
fsubrl
xchg
sti
xchg
scas
jle
fldln2
jmp
filds
cs
addr16
push
jp
cld
mov
sbb
fnstcw
jp
xor
stc
mov
xchg
or
in
shlb
clc
push
popa
in
in
test
cmp
das
mov
lea
cltd
stos
push
sbb
cmp
inc
in
adc
imul
popf
movsb
in
loopne
ret
and
arpl
aad
faddp
cmp
pop
mov
dec
jbe
mov
add
inc
adc
roll
movsb
mov
xor
xchg
call
mov
pop
inc
lods
leave
jbe
rcr
push
xchg
push
icebp
mov
jnp
ds
sbb
sbb
sub
fidivrs
cltd
stos
cmp
enter
xor
rolb
jecxz
movsl
pop
add
or
or
std
mov
inc
in
cmp
push
int3
or
pop
es
call
ret
negl
cli
nop
pop
cwtl
or
icebp
lods
mov
lcall
cmpsb
hlt
cmp
in
movsb
and
aaa
loopne
or
test
jp
sbb
push
cld
and
int3
jl
inc
cmc
sbb
adc
push
cmpsl
iret
push
jecxz
xorb
iret
loope
mov
jne
mov
out
fdivs
jl
lock
inc
enter
jmp
pmulhuw
pop
aaa
test
mov
das
jmp
stos
imul
fisubl
add
and
addr16
popa
sbb
add
push
lods
sub
push
loopne
outsb
add
push
push
imul
in
jnp
adc
fnsave
cmpsb
fnsave
sahf
or
xlat
inc
ljmp
loope
sub
sub
loop
mov
jmp
mov
add
fsubl
pop
mov
sbb
dec
fs
dec
andl
dec
rcrb
aam
xor
sub
mov
addb
cmpsb
mov
add
mov
movsb
cmpsb
out
fstps
addr16
add
test
lea
jb
and
test
cmp
jbe
pop
lahf
out
dec
jbe
test
mov
and
decb
jle
dec
ror
pop
dec
das
les
js
test
push
rol
xor
mov
out
push
xor
out
xchg
rcrb
mov
out
test
push
xchg
sbb
and
arpl
lahf
bound
shr
dec
bound
lock
insb
cwtl
mov
mov
pop
fs
decb
push
hlt
insb
mov
pop
inc
fcoml
mov
inc
aas
xor
adc
fidivs
push
lock
cmp
outsl
cmc
xor
orb
xchg
repnz
push
out
cmp
mov
xor
xchg
push
fisubrl
jge
sbb
mov
cmpsl
call
inc
dec
lret
ds
lods
cltd
out
xor
jmp
push
inc
std
icebp
add
cltd
xchg
mov
adc
xchg
fwait
jnp
push
push
mov
xlat
cmp
sbbb
in
rcrb
rcrb
sbbb
jle
xchg
mov
xchg
mov
pop
mov
jb
popf
and
inc
dec
dec
stos
cmpsb
in
dec
sub
scas
jo
and
xchg
repz
sti
mov
flds
xor
fwait
and
dec
dec
es
push
cltd
icebp
out
xor
cltd
mov
fs
mov
inc
sub
sub
jnp
push
test
addr16
jne
orl
stos
dec
cmp
or
or
cmp
adc
cmp
aas
lret
loope
addr16
adc
sbb
popf
push
adc
scas
pop
sbb
out
mov
lods
inc
xor
cmc
fiaddl
sub
jbe,pt
xlat
or
push
scas
in
ror
mov
lahf
int3
jne
push
mov
aam
dec
push
add
mov
push
adc
loopne
loop
cmc
les
push
test
imul
jecxz
repnz
and
ljmp
push
jg
inc
lret
out
pop
or
outsl
ret
insb
enter
gs
push
sbb
cs
aas
xchg
int3
pop
loop
sub
paddb
xchg
xor
repz
outsl
push
push
popf
or
pop
mov
mov
pop
push
outsl
cmp
mov
faddl
pop
push
scas
pop
cs
fistpll
iret
jmp
push
add
adc
add
dec
out
cmp
jp
int
sti
test
and
and
dec
pop
scas
add
dec
pop
movsl
inc
dec
int3
pop
xchg
shl
jno
and
pop
das
pop
leave
jp
xchg
push
insl
and
addr16
mov
xor
gs
xchg
aam
inc
les
test
pop
dec
add
adc
sub
cmpl
mov
lds
movsb
movsl
addl
lahf
arpl
stos
sub
nop
mov
mov
mov
cmpsb
inc
shlb
push
lock
loopne
add
lcall
sub
sub
lods
iret
ret
test
data16
xor
movaps
je
mov
push
sbb
subb
jl
out
mov
dec
sub
sub
or
test
loopne
sbb
push
cmc
mov
add
testb
adc
xor
mov
fsubrs
jmp
mov
pop
pop
or
sti
lahf
popa
icebp
add
xchg
in
mov
outsl
js
xchg
mov
ficompl
push
cmp
cs
out
lcall
xchg
cmc
mov
or
adc
outsl
mov
jae
repnz
iret
push
fwait
lock
ss
sub
das
inc
out
cmc
jmp
adc
pop
scas
sbb
sbb
imul
xor
mov
cmp
or
inc
loop
rclb
or
mov
dec
mov
cmpsb
loopnew
sbb
pushf
jne
iret
cltd
pop
sbb
jp
jo
lea
popw
pop
jle
cmp
mov
imul
ror
addr16
fisubrl
cltd
dec
jo
and
mov
insb
or
xchg
shll
fstpt
mov
in
jns
fldenv
out
jns
cltd
sub
mov
out
loope
stos
hlt
addl
ja
xor
mov
inc
add
pushf
inc
cmp
popa
fnstsw
cli
loop
mov
lret
nop
insb
lret
cld
data16
dec
jnp
sbb
mov
js
test
arpl
cwtl
jnp
and
adc
jo
cli
mov
add
push
jae
cmpsb
xchg
cltd
and
push
pop
push
lahf
nop
pushf
add
popa
rcrb
arpl
in
cwtl
sbb
sub
mov
fstps
xlat
in
loope
stos
outsl
arpl
lret
repnz
in
xchg
xchg
repnz
into
inc
test
push
divb
sbb
les
fdivr
gs
out
pop
xorb
aaa
data16
add
cld
loopne
test
lock
cs
xchg
jnp
mov
cmp
lahf
movsl
sub
xchg
cmpsb
push
cli
in
fistps
shll
push
nop
lds
ljmp
aas
sub
push
jge
aam
pop
int
ret
mov
cmc
repz
pop
cmp
sub
bound
cmpl
push
sbb
std
int3
sub
test
sbb
inc
lea
das
push
lods
es
cld
push
in
divl
out
xorb
pop
pop
jmp
cmp
mov
inc
jno
or
adc
mov
jbe
test
dec
cmpsl
jnp
dec
pop
and
sub
push
dec
mov
xchg
shlb
mov
scas
in
fisttpl
xor
add
pop
sti
cmpsb
pop
clc
add
mov
jno
dec
out
test
xchg
adc
pop
dec
push
mov
call
sub
scas
popa
in
call
adc
aad
ret
cld
sub
jnp
lods
les
add
fimull
pop
inc
mov
sub
rclb
cmp
push
repnz
pop
mov
shrb
lods
and
repnz
cmp
ret
dec
and
mov
mov
cli
push
imul
push
rorb
stc
bound
fcmovu
push
xor
pop
lret
adc
int3
xchg
sbb
jle
inc
jns
stos
jl
bound
xchg
rclb
sbb
movsb
add
cwtl
popa
je
dec
cmp
pop
or
mov
iret
fcmovbe
jnp
adc
lods
out
iret
mov
test
test
sub
xor
inc
mov
loop
adc
xchg
test
pop
lock
ljmp
pushl
or
pop
add
pop
sub
movsb
push
bound
push
push
jnp
test
xchg
sub
in
out
push
and
xor
popa
add
cwtl
cmpsb
mov
loopne
sbb
add
lods
push
mov
sub
pop
push
push
arpl
add
rcrl
loop
fmuls
mov
test
repz
mov
fsub
adc
das
mov
call
cld
dec
nop
mov
inc
dec
adc
push
jge
mov
movsl
pop
adc
sub
stos
mov
jno
push
sbb
out
jnp
out
inc
mov
xor
in
dec
ficoml
ret
stos
pop
mov
push
sub
inc
stos
mov
mov
stos
add
loope
push
ds
mov
mov
sub
data16
das
cmpsb
mov
jmp
sbb
movsb
scas
and
popl
jbe
or
gs
pop
inc
shrb
push
int3
sub
adc
mov
out
lret
test
or
repz
fld
aaa
xchg
sub
add
fsubrs
mov
stc
f2xm1
cmpsl
outsb
lea
mov
mov
cmp
push
cmp
inc
in
rclb
ja
int
fisubrl
js
cli
je
shll
loope
int3
test
lret
inc
cmp
jp
and
mov
jle
sub
inc
out
push
dec
cmp
jno
test
jb
stos
mov
nop
lods
inc
dec
dec
les
popf
or
fldcw
inc
pop
cmpsb
add
cmp
jmp
mov
out
xor
inc
fists
dec
ret
cmpsb
cmp
sbb
jecxz
test
vorps
mov
mov
movsb
jp
sub
lock
dec
lcall
adc
push
mov
out
pushf
in
push
add
push
lcall
mov
sarb
push
jecxz
repnz
jge
cmpsl
dec
iret
mov
sbb
insb
xor
out
popa
and
lods
add
push
mov
mov
mov
in
jb
mov
jge
repnz
ljmp
fs
jl
push
outsl
add
popa
test
inc
cmp
mov
stos
stos
cmp
adc
leave
js
push
push
mov
shlb
and
loope
push
adc
fs
je
aas
aad
and
push
ss
dec
mov
sbb
es
or
test
push
and
gs
dec
lock
test
mov
sub
ds
pop
jno
outsl
jmp
push
test
pop
push
sbb
adc
sub
insb
rorl
imul
stc
pop
xchg
fidivl
xchg
jmp
call
addr16
js
dec
int3
aam
out
movsb
sbb
filds
sbb
pop
lahf
push
enter
leave
pushf
scas
push
push
dec
out
adc
cmpsl
lods
es
fwait
and
neg
dec
movsb
fldcw
out
cmpsb
popa
sub
or
inc
mov
stc
movsb
scas
pop
jns
imul
in
mov
push
popf
cli
into
and
out
das
xor
adc
es
dec
test
outsb
mov
leave
aad
call
mov
push
andb
arpl
es
iret
jo
adc
and
push
or
bound
xchg
xlat
jmp
sub
lahf
sti
shlb
push
push
sbb
out
ror
jl
into
mov
adc
sub
dec
xchg
jae
gs
mov
push
jb
jmp
push
push
mov
sbbb
mov
and
fs
push
pop
adc
pop
scas
mov
popf
mov
sbb
cmp
cmp
or
xlat
dec
cmc
jge
imul
pop
fs
shlb
mov
cmp
cwtl
loopne
gs
inc
mov
test
fstpl
add
adc
adc
dec
fidivrs
inc
adcb
shl
ficoml
push
jle
in
std
bound
add
mov
mov
cmpsl
lahf
mov
movsb
adc
add
mov
stos
xchg
dec
out
out
leave
jmp
stos
mov
mov
scas
leave
sub
sub
and
and
aaa
mov
js
pop
push
cmp
xor
mov
test
in
mov
xor
mov
inc
aas
jmp
fnstenv
jbe
rcr
jb
outsl
pop
mov
in
inc
out
pop
xor
mov
roll
dec
adc
sbb
jecxz
cmp
mov
mov
mov
or
push
inc
ljmp
insb
dec
adc
movsl
fs
stos
movsb
movsb
jg
les
cltd
test
popl
in
fistl
xchg
idivb
stc
inc
loopne
outsl
cmp
or
testb
movb
and
sbb
and
cvtps2pd
dec
es
mov
push
and
inc
mov
jp
ret
dec
in
ljmp
sub
cmp
push
in
cmp
shll
aad
xchg
xor
pop
jmp
jp
or
adc
adc
scas
or
mov
sbbl
inc
gs
or
rcr
test
lahf
xor
jo
movsb
jo
js
iret
les
add
dec
addps
cmpsb
sti
pop
ret
add
mov
sub
push
and
jae
data16
in
mov
inc
outsb
outsl
pop
cwtl
fsubrs
sub
int3
pop
add
test
pushf
sub
sub
es
out
and
push
fisttps
je
aad
iret
pop
test
sub
pop
mov
mov
dec
test
in
sub
pushf
mov
sarb
pop
icebp
lcall
sub
push
cmpsb
sahf
outsb
lea
nop
push
push
in
sub
scas
mov
and
icebp
scas
jbe
adc
mov
fs
mov
pop
lahf
push
sbb
jbe
pop
out
sbbl
lods
cmp
es
lock
mull
jns
jbe
test
push
sbb
xor
jl
leave
jno
insl
hlt
nop
rorb
fstps
pop
ror
std
insl
xor
js
sbb
call
ljmp
jl
enter
test
repnz
cwtl
sahf
dec
shrb
dec
adc
jnp
sub
mov
push
out
jp
aaa
orl
push
js
mov
jns
cltd
xor
inc
mov
outsl
jbe
jg
ljmp
loopne
clc
sbb
aam
divl
in
imul
cmc
xchg
sub
jns
insb
dec
xor
out
jge
imul
sub
or
mov
adc
mov
mov
out
outsb
adc
or
dec
add
fwait
xor
mov
mov
cltd
pusha
dec
nop
pop
or
jo
sub
jnp
rcrb
adcb
mov
fimuls
loopne
gs
in
repz
mov
cltd
jecxz
mov
inc
stos
cmp
or
or
push
add
popl
or
or
push
xor
dec
sub
call
addr16
iret
push
lds
outsl
leave
add
push
je
mov
mulps
xor
cmp
mov
and
outsl
or
add
mov
jle
enter
mov
in
and
push
test
and
sbb
icebp
jmp
mov
fwait
and
in
jb
dec
or
push
fisttpl
jns
inc
lret
adc
sub
mov
push
sbb
in
or
addr16
les
bound
mov
test
leave
jo
or
sub
inc
fstp
js
popa
sbb
test
rclb
jnp
in
loop
mov
mov
mov
pusha
pop
xchg
lds
mov
mov
test
sbb
sbb
scas
sub
lcall
fsubl
in
sbb
stc
js
jns
fcompl
sub
pop
js
sub
sub
ret
xor
and
dec
outsl
push
fstpt
mov
jo
fsubr
enter
rcl
lods
pushf
in
call
faddl
push
sahf
inc
inc
lds
fimull
js
call
dec
imul
jnp
stos
pop
or
sbb
push
aaa
sbb
xor
mov
repnz
sub
jo
in
pop
adc
je
mov
insl
xor
dec
mov
js
ficompl
out
jl
or
mov
dec
lret
test
dec
sbb
fisubl
js
aad
xor
jmp
sbb
imul
fsubl
add
lock
dec
das
fucomip
push
lock
sbb
stos
cmp
int3
out
scas
imul
lea
imul
mov
cltd
shll
dec
or
sub
movsl
mov
adc
ja
xchg
hlt
mov
sub
movsb
nop
shll
aas
out
sub
sub
ret
or
daa
fistpl
lahf
std
pusha
iret
out
dec
dec
insl
lock
jp
mov
sub
cmp
fidivl
or
call
mov
push
mov
mov
cwtl
shrb
dec
cmpsb
iret
fmull
fldl
sbb
fisubrl
loop
xchg
loop
js
push
add
cmpsb
xchg
ret
lods
mov
xchg
arpl
pop
sub
mov
stos
arpl
inc
add
lret
lods
cmpsl
inc
jbe
js
mov
mov
es
movsb
and
nop
out
pusha
lea
call
cmpsl
dec
loop
aad
add
push
pushf
sub
loopne
push
clc
cli
in
cli
fucomi
pop
jo
jl
inc
or
aam
jno
loopne
adc
xchg
insl
iret
xchg
mov
push
addr16
inc
push
xor
lahf
leave
inc
and
out
js
or
inc
pop
cmc
cmp
mov
bound
jecxz
aam
push
pop
roll
mov
lock
cmp
mov
loop
pop
push
push
rorl
xor
js
enter
sub
mov
pop
mov
push
test
add
test
push
test
lea
sub
out
sub
mov
lcall
mov
mov
shlb
mov
fcoms
push
fidivl
xor
xor
sarb
xor
cmp
jnp
adc
lods
sub
cwtl
dec
jge
call
aas
push
fs
and
sub
lock
mov
and
push
sti
out
cmp
mov
lcall
pusha
stos
lods
fmull
or
mov
stc
xor
xchg
test
or
adc
sub
sub
js
mov
cltd
call
mov
push
mov
pushf
test
cmp
popf
pop
lods
jnp
sbb
mov
jmp
sub
fistps
dec
cwtl
sub
adc
insl
inc
in
arpl
adc
test
push
cmp
int3
fstps
cltd
cmpsb
mov
jmp
cld
stos
sti
aaa
inc
addb
ljmp
enter
add
jns
cli
test
cltd
insl
popf
jg
ds
leave
push
inc
jmp
sti
fisttpl
pop
xchg
ljmp
jno
sub
sub
mov
jl
cmpsl
stos
sbb
daa
daa
jo
jnp
push
popf
mov
adc
jp
cmp
sbb
adc
and
jmp
push
mov
and
les
dec
pop
call
movsb
sub
pop
cmpl
insl
jecxz
pop
push
pop
ret
cmp
leave
out
sub
outsl
clc
enter
cmpsl
les
js
dec
fs
mov
adc
cmpsl
push
push
nop
dec
mov
mov
cltd
lret
cmp
test
push
push
jmp
dec
outsl
mov
in
mov
in
mov
push
insl
dec
fsubrl
jp
mov
repz
jo
std
lcall
pop
lea
lcall
dec
sbb
and
cltd
lods
mov
jmp
loope
pop
stc
lock
jmp
das
loop
adc
lods
mov
fstpl
add
sahf
popf
pop
mov
ror
pop
jmp
das
sub
pop
or
rorl
cmpsb
push
and
scas
adc
or
mov
lock
xchg
out
sub
lock
imul
push
dec
pop
push
shll
xchg
or
adc
int
dec
adc
loope
jmp
lods
adc
mov
adc
xchg
in
add
out
cmp
sbb
rorb
and
push
jg
sbb
cli
imul
cmp
cld
and
and
adc
nop
in
jmp
es
clc
sbb
sub
cltd
out
mov
repz
sub
movsl
test
pushf
or
insl
dec
jmp
cmpsb
or
enter
adc
push
push
jle
lret
xchg
decl
ljmp
daa
lock
cmp
imul
lds
out
lods
mov
or
push
leave
dec
push
sbb
xchg
mov
mov
or
and
sbb
mov
mov
lods
movsl
test
mov
mov
lock
adc
sub
jmp
adc
xchg
add
stc
push
adc
mov
jmp
cmpl
gs
lock
fisttps
mov
ror
cwtl
insl
fcoml
jmp
loop
inc
leave
lahf
or
cltd
sbb
out
lock
inc
xchg
lods
mov
jo
xchg
xor
sbb
jae
cmc
mov
fiaddl
sbb
stos
dec
inc
imul
leave
push
ja
dec
xor
push
fistps
mov
insb
aas
add
xchg
cltd
mov
cmc
cltd
mov
dec
int
bound
daa
push
les
fsubp
test
mov
lods
sbb
sbb
inc
popa
push
hlt
ficomps
lock
sub
cmpsb
sbb
dec
cmp
add
std
pop
daa
sub
cmpsb
mov
in
fwait
sub
sub
call
ret
hlt
dec
repz
std
dec
js
jp
sti
mov
xor
cmpsl
mov
fcompl
sbb
inc
sub
data16
outsb
sub
stos
sub
xor
mov
mov
adc
scas
mov
cltd
pop
mov
in
pop
ret
mov
sbb
pop
popw
dec
shl
cmp
pop
movsb
and
call
pop
mov
mov
lcall
mov
ja
fdiv
jmp
test
sbb
cmpsb
xor
sbb
or
aad
leave
jmp
lret
sub
sub
cmp
pop
negl
sarb
lret
sbb
stos
jne
js
into
sbb
and
lock
xor
and
or
stos
mov
fldl2e
push
xchg
xlat
dec
lods
mov
es
adc
dec
xlat
cltd
xor
ja
xor
mov
ds
push
xchg
in
clc
push
sub
in
inc
fistps
jge
mul
sub
pop
mov
sub
jmp
out
jle
cltd
ret
dec
mov
dec
mov
jnp
push
lahf
faddl
add
xchg
cmpsb
leave
mull
dec
push
ds
fiaddl
pop
pop
mov
mov
xor
mov
pop
mov
loop
orb
ja
dec
dec
cmp
cld
sbb
push
mov
lock
jne
or
jmp
out
inc
jae
xor
mov
mov
mov
jg
push
sbb
sub
sbb
imul
call
jecxz
out
test
cmpsb
pushf
pop
rsqrtps
into
and
ja
in
adc
addr16
dec
mov
or
mov
dec
stc
adc
jge
in
hlt
repnz
out
movsb
jbe
add
or
hlt
push
call
mov
dec
push
or
xlat
stos
stos
mov
mov
adc
mov
and
pop
scas
imul
xchg
add
sub
movsbl
out
int
test
sub
mov
sarb
xchg
mov
aaa
jb
and
pop
jns
add
cmpsl
jnp
out
or
mov
cmp
xchg
jp
pop
push
push
jmp
test
cmp
test
pop
mov
cld
xlat
cwtl
sbb
adc
dec
push
adc
adc
es
nop
aam
psadbw
andb
das
cmp
cmp
xchg
std
stos
push
push
xchg
call
icebp
mov
idivb
test
pusha
into
lahf
rorb
insb
aas
fnstcw
push
popf
lret
fnstcw
dec
mov
ds
mov
stc
add
movsb
push
pop
xor
les
shrb
add
xchg
sbb
push
fldl
sub
lock
orb
xchg
add
xchg
push
aas
int3
lea
mov
fidivs
jmp
xchg
ficompl
imul
ret
cmp
es
add
mov
subb
mov
mov
and
clc
dec
and
push
sub
cld
lret
hlt
idivl
cmp
add
xlat
enter
in
jmp
ljmp
outsl
cmp
neg
imul
test
or
xchg
cmp
into
mov
and
ret
ss
adc
mov
nop
push
orb
inc
jmp
aas
lcall
dec
mov
xlat
mov
adc
rcr
mov
push
cli
inc
js
subb
out
js
mov
sub
pop
ret
scas
sar
aas
jne
lcall
in
mov
in
cmp
pop
pop
scas
lods
fidivl
jmp
movsb
mov
cmp
xor
das
js
stc
scas
ficoml
mov
and
inc
mov
jl
sub
fsts
dec
imul
pop
pushf
aam
xchg
add
mov
subl
mov
test
mov
lret
clc
mov
jmp
test
rcrb
es
cld
nop
xlat
enter
cmpsb
pop
push
int3
insb
mov
jle
mov
lret
loope
lock
shll
outsl
std
lcall
stos
adcl
fmulp
fmuls
lods
jo
pop
int3
adc
and
push
or
fistps
outsl
jmp
imul
jp
ret
cld
cmpsl
popf
pop
in
lahf
in
pop
and
addr16
test
sbb
pop
pop
fnsave
in
jg
je
mov
mov
or
sbb
pop
jle
in
sahf
insl
rorl
cmc
lock
adcb
pop
and
pusha
mov
test
add
pop
cmp
shrb
shr
shll
mov
jp
cltd
outsb
push
insb
xchg
loopne
mov
pop
rcl
aaa
jb
fisubs
aas
and
push
jmp
into
jbe
sub
ljmp
cli
push
inc
fdivrl
test
popa
push
data16
repnz
call
dec
cld
jmp
stos
lcall
fnstcw
mov
idivb
xor
sbb
out
lret
outsl
xchg
fwait
jg
lods
out
out
mov
nop
mov
xor
dec
call
inc
cmpsl
sub
or
sbb
out
leave
dec
out
insb
fdivrl
pop
test
in
add
pusha
in
mov
push
cmpsb
mov
enter
dec
pop
mov
loope
aaa
pop
repz
movsb
add
xor
jmp
push
inc
mov
lret
lds
into
mov
dec
sbb
xorl
fldl2e
enter
xchg
out
push
inc
outsl
lcall
dec
ret
in
xlat
push
insl
loopne
das
or
das
mov
leave
into
fcoms
cld
sub
cmp
mov
pop
push
pop
or
in
xor
and
test
mov
add
and
popf
mov
cwtl
cltd
lock
and
stos
addr16
test
cmpsb
clc
out
fnstcw
daa
enter
cmp
enter
dec
sub
push
js
add
fadd
cmpsb
in
xor
xor
in
notb
out
xchg
in
pop
or
sarl
mov
loope
pop
pop
sub
lods
ret
mov
lcall
mov
popf
out
sub
cltd
rorl
cmp
rorl
insl
lea
jle
out
pop
add
in
dec
push
pop
jns
insb
mov
std
sbb
repz
xchg
sbb
xlat
mov
shrl
pop
push
hlt
dec
into
cmp
out
movsb
and
iret
or
fwait
xor
dec
scas
imul
pusha
std
test
sbb
stc
outsl
xchg
mov
cli
fwait
push
sub
repnz
and
push
mov
mov
push
mov
jmp
fldt
push
push
or
lahf
test
std
jo
in
dec
add
or
cmp
adc
ss
jge
rclb
sbb
jnp
inc
mov
adc
mov
ja
shrb
out
xchg
insb
mov
jle
test
xchg
out
popa
fmull
jecxz
push
mov
pop
leave
sub
pop
pop
sbb
mov
les
cli
aaa
fcomp
test
push
stos
xchg
sub
jo
mov
fcmovne
ds
xchg
mov
lahf
add
push
loope
lret
mov
adc
adc
xor
mov
cmp
xchg
sahf
lods
aaa
jmp
or
jnp
push
andb
hlt
icebp
sahf
sarl
pop
sbb
sbb
mov
test
cmp
fidivrs
mov
loope
and
mov
cmpsb
insb
loop
mov
adc
loop
lahf
cmp
je
nop
fisubrl
in
fwait
jmp
movsl
std
or
int3
sub
mov
mov
jae
mov
leave
test
mov
cltd
adc
les
jo
in
or
aas
sub
imul
mov
and
xchg
call
std
int
jmp
xlat
jge
idivl
adc
fisubrs
lea
std
test
or
test
lods
outsb
sub
out
dec
std
inc
in
inc
test
push
mov
push
mov
in
mov
jge
enter
or
iret
stos
cmp
cmp
rcrb
add
inc
and
mov
cli
xor
and
fmul
or
fsubrs
icebp
sub
or
mov
mov
movsb
popa
jmp
sarl
sub
add
push
xor
cmp
mov
sbb
xor
adcb
insb
jmp
add
mov
sbb
outsb
paddw
lret
cs
loop
push
mov
addr16
adc
cmpsl
or
out
test
mov
std
addr16
jle
jnp
jl
mov
add
aas
or
sbb
iret
scas
test
insl
mov
movsl
xor
or
adc
xor
vpmadcsswd
mulb
fistpl
js
pushf
pop
or
or
ljmp
loopne
out
sbb
push
nop
pop
dec
sub
insb
and
insl
sub
lea
sub
fldcw
fistpl
stc
mov
popa
mov
sbb
mov
sbb
and
lea
test
push
lcall
pop
stos
out
js
insl
xlat
adc
adc
push
mov
imul
and
cwtl
inc
pop
add
lcall
push
dec
add
inc
iret
popf
cltd
lods
push
out
cwtl
cltd
adc
or
cmp
lods
push
fsubl
cld
adc
gs
jae
mov
dec
cmp
out
mov
lds
imul
xor
outsb
cmc
push
in
aam
mov
sbb
lods
mov
mov
clc
pop
gs
inc
insl
dec
sbb
jns
cli
test
stc
xchg
pushf
out
test
rorl
mov
movsb
test
or
jo
sbb
adc
shlb
or
inc
loope
cwtl
jecxz
sub
or
mov
sbb
or
out
jns
fdivl
dec
bound
add
popf
loop
popf
ja
int3
imul
cwtl
stc
lcall
mov
sbb
lret
int
dec
subl
add
sahf
fadds
fwait
lods
mov
and
sbb
pop
push
inc
out
fidivrs
punpckhbw
shlb
jmp
sti
gs
int3
test
lret
roll
lret
stos
push
jbe
ljmp
pop
sbb
ret
or
mov
in
sub
jmp
les
in
push
mov
in
fxch
jge
lock
xchg
lret
shl
adc
pop
mov
jbe
dec
sub
and
outsb
loop
mov
ljmp
push
jl
out
xor
jmp
les
jl
insb
push
sbb
call
mov
jp
mov
mov
xor
mov
sbb
pop
xchg
loopne
pop
cwtl
leave
jbe
sbb
outsl
mov
movsb
in
push
push
insl
push
adc
call
aas
mov
ret
nop
pushf
cmp
dec
cwtl
mov
sub
pop
fwait
pop
scas
jle
int3
push
int3
mov
test
lcall
cltd
mov
dec
test
ret
and
sbb
js
test
ficomps
mov
arpl
cwtl
outsl
mov
push
iret
mov
pop
dec
fstpt
mov
push
jle
and
cmp
stos
fsubr
dec
fdivs
scas
xchg
xchg
loop
mov
popl
loop
cmc
add
stos
mov
insl
fidivrl
aam
cmp
lods
test
fcompl
cmp
repnz
dec
clc
shll
jmp
cmp
fdiv
sub
sbb
les
jb
cli
stos
cld
dec
test
lret
fidivrs
lret
lods
ret
into
dec
mov
cld
loop
mov
inc
push
out
leave
mov
push
pop
mov
ds
int
fdivl
loopne
cli
push
cli
mov
fdivrs
lock
adc
or
cmpsl
and
cmp
sarb
ss
fwait
outsb
cld
das
imul
xlat
cmp
inc
js
mov
je
jmp
mov
dec
sub
popf
and
ljmp
ja
sbb
inc
enter
xlat
sub
add
subl
rclb
xchg
fdivrs
push
out
cmp
ds
jmp
das
xchg
and
aad
xor
loopne
leave
dec
scas
das
int3
je
or
addb
inc
mov
rorb
test
sub
pop
jnp
lcall
test
leave
mov
push
xchg
daa
mov
test
dec
mov
jmp
iret
shl
or
jl
sbb
stos
outsl
xor
add
lret
push
push
das
xor
mov
xchg
inc
xchg
cmpsb
test
lahf
js
add
fimull
and
test
aam
cwtl
lock
xchg
call
ja
and
test
mov
clc
mov
test
xor
push
xor
out
mov
inc
lret
sub
fcompl
sub
in
lds
out
sub
call
mov
sarl
mov
test
push
loope
xor
mov
scas
xchg
fsubrs
das
push
lret
stos
loopne
leave
jmp
test
push
push
mov
xchg
cmp
int3
dec
sbb
pop
js
test
or
mov
mov
inc
stos
into
lahf
movsb
and
js
das
stos
lret
lea
sub
sti
push
stos
xchg
imulb
push
jo
cmp
fcoml
xchg
test
or
in
push
dec
sbb
addr16
xchg
xor
inc
sub
mov
imul
dec
dec
xor
je
lea
mov
sub
je
mov
stos
mov
and
adc
pop
pusha
cli
mov
fmul
push
popf
push
sbb
loopne
cmpsb
fsubl
repnz
and
clc
pop
fwait
out
mov
fwait
xchg
mov
pop
push
mov
mov
adc
imul
in
aaa
aam
mov
loopne
roll
cwtl
pop
xchg
cmp
sub
pop
pop
mov
in
and
and
push
enter
in
and
jns
movsl
aaa
call
dec
stos
sub
ror
xchg
sub
addr16
xor
icebp
rcrb
inc
inc
adc
fxch
icebp
dec
push
sbb
xchg
repnz
jmp
adc
xchg
sub
cmp
data16
stos
nop
dec
stc
hlt
stc
mov
mov
sbb
add
push
pop
dec
add
dec
hlt
imul
sbb
jge
loope
outsl
shl
jle
hlt
and
lahf
push
test
inc
inc
js
hlt
ljmp
lahf
cmpsl
imul
and
imul
and
nop
push
lahf
or
movsb
subl
aad
push
pop
dec
mov
jb
lret
xchg
mov
into
lret
inc
mov
fldenv
sub
shlb
mov
ficoml
and
sub
fs
sbb
loopne
jae
int3
js
mov
pop
insl
scas
and
dec
push
in
sub
cli
push
mull
add
insl
push
mov
adc
inc
and
cmp
pop
cmp
mov
sub
into
xor
fnsave
mov
test
lods
das
call
or
ljmp
mov
and
popf
daa
dec
push
cli
add
scas
dec
das
insl
pop
sbb
cmpb
enter
pop
sub
repnz
repnz
jo
cltd
sbb
push
jecxz
movsb
lds
cmp
ja
pop
test
pop
es
test
lret
and
daa
hlt
outsl
cmp
call
arpl
fwait
scas
fdivl
loopne
mov
sub
pop
out
iret
sub
pop
leave
shr
clc
xchg
add
push
out
adc
push
pop
popa
call
xchg
aam
lock
push
nop
mov
out
mov
sbb
push
mov
and
dec
out
pop
sub
mov
es
jp
push
idivb
inc
mov
test
adc
dec
cmp
andb
inc
jnp
pop
fildll
movsl
mov
outsb
pop
ja
ss
aaa
clc
push
mov
aad
stos
adc
mov
pop
js
cmpb
and
mov
out
data16
call
ljmp
add
int
jmp
rol
push
sub
enter
adc
leave
xchg
daa
xchg
test
out
stc
push
stos
fsubrs
data16
call
insb
lock
or
lahf
xchg
or
nop
ret
sub
insb
lcall
sbbb
test
xor
cmp
dec
jp
ss
test
cmp
leave
push
cmp
jno
sub
cmp
sahf
leave
call
insl
inc
cld
leave
inc
mov
lods
xchg
shlb
bswap
adc
mov
push
fcomps
push
addr16
jmp
ljmp
push
cmp
xsha256
cmpsb
adc
push
mov
cmpsl
fstpt
jnp
iret
adc
sar
rolb
add
cli
jb
dec
dec
movsb
lret
loopne
mov
and
push
jmp
mov
pop
inc
out
pop
pop
or
xor
dec
es
lcall
add
dec
xor
das
hlt
ljmp
inc
push
popf
mov
mov
les
les
add
cmp
mov
mov
sub
add
ret
xchg
mov
or
sbb
movsb
mov
aam
and
in
enter
loopne
and
das
call
cli
enter
stos
aam
shr
jmp
pop
hlt
sub
inc
imul
mov
lock
lock
dec
mov
addr16
cld
sarw
in
mov
ret
lods
arpl
xchg
mov
and
mov
loop
fcompl
push
pop
fmul
fmull
or
and
add
mov
jae
int
xchg
cli
and
inc
lahf
sbb
xor
jnp
pop
ret
xorb
jae
cmc
cmc
and
aaa
mov
jo
cli
addb
inc
movsl
mov
stos
add
cmpsb
push
fdivr
mov
loope
sub
cmp
sbb
int3
pop
add
sub
out
pusha
xchg
mov
js
add
fisubrl
stos
cld
flds
cltd
push
shrb
movsb
pusha
or
ret
test
out
jg
mov
test
scas
bound
test
fisubrl
lods
scas
movsl
nop
and
mov
imul
stos
sub
sub
stos
push
test
jo
lock
pop
dec
cwtl
cmpsb
in
ja
dec
scas
aam
push
pusha
jp
pop
out
jns
int
pop
lods
sub
sahf
mov
movsb
loope
lcall
sub
das
ret
mov
xor
or
inc
pop
or
dec
cmp
popf
rcr
cmc
cltd
lock
and
pop
and
ja
adc
stos
in
cli
push
lea
sub
or
adc
std
mov
add
dec
xor
jl
fsubr
sub
inc
lcall
add
push
xor
aad
sti
cmp
test
and
sub
xor
test
mov
sbb
scas
cli
hlt
push
nop
in
rorl
test
ja
cmp
movsl
cltd
mov
push
adc
and
cmpsb
movsb
retw
or
lcall
mov
jle
jmp
leave
call
cmpl
sub
stos
jmp
cltd
test
inc
push
cltd
sub
ja
ljmp
push
sub
mov
shrl
mov
rcrb
sbb
jmp
sub
sarb
cltd
lods
xchg
sbb
mov
aaa
es
sti
push
pop
xchg
fsubrl
jo
int
add
aas
xor
inc
int3
cmp
leave
inc
mov
jnp
sub
push
shrb
dec
xchg
add
jecxz
inc
mov
push
inc
xchg
xor
mov
or
adc
dec
and
mov
mov
lret
jb
dec
shl
dec
aas
pop
cmc
cli
mov
mov
inc
or
pop
inc
adc
cmp
and
sub
push
mov
cmpsb
mov
or
and
cmc
push
fwait
mov
in
mov
mov
jo
test
cmp
loope
mov
mov
mov
mov
in
imul
jmp
fs
aad
cmpsb
sub
lods
hlt
arpl
fiaddl
push
xlat
mov
inc
dec
adc
xor
cli
jbe
fwait
cmp
mov
jb
pop
fwait
jl
nop
xchg
js
sub
addr16
lret
stos
jmp
dec
cli
stos
in
mov
shll
fidivs
mov
enter
test
shr
clc
lret
cmpsb
jae
and
ret
mov
adc
dec
test
imul
sbb
xchg
jb
mov
mov
mov
or
pop
dec
cmc
movsb
out
loope
pushf
xchg
and
or
mov
cld
push
xor
xlat
je
adc
sti
mov
mov
push
cmp
test
cmp
sub
shll
and
fildll
rol
jmp
pop
psubsb
sbb
js
insb
sub
dec
lods
scas
sub
push
ljmp
cmp
gs
test
or
jl
pop
aas
faddl
jecxz
mov
shr
xchg
imull
das
and
stos
loope
stos
push
leave
ja
fcomp
jnp
outsl
mov
xchg
mov
insb
cs
test
dec
dec
push
jecxz
inc
jbe
pmaxsw
sub
dec
jl
mov
push
lcall
and
std
int
lea
pop
ljmp
imul
or
add
or
fcomps
jnp
or
out
jmp
test
sub
out
test
mov
cmp
jmp
ss
rcrb
and
jg
dec
repnz
xchg
cmp
jno
cmp
test
xor
pop
inc
or
js
cmpsl
push
out
pop
in
jmp
mov
call
lahf
aam
subb
test
int3
jl
cmpsl
xchg
ror
xlat
imul
aas
dec
xchg
mov
pop
insb
addr16
fs
jo
movsb
sub
xchg
aam
pop
and
inc
clc
sub
inc
in
lahf
or
cmpsl
jnp
leave
sub
push
and
mov
jnp
loopne
sti
xchg
pop
jo
popa
leave
mov
fcoms
or
out
and
mov
or
jle
push
jecxz
and
sbb
adc
loop
fsubrs
aam
pop
push
or
loope
and
ds
dec
out
jbe
xchg
adc
jno
andl
pop
xchg
fwait
push
and
push
jae
loopne
pop
xchg
push
sbb
gs
sub
mov
sub
push
jge
mov
dec
popf
int
xorb
mov
imul
addr16
jmp
sub
sub
js
test
aam
jns
or
or
ljmp
mov
movsl
std
stc
inc
dec
cmpsb
in
fdivl
nop
insb
loope
fildll
inc
dec
ss
xchg
fwait
cmp
std
push
aad
movsl
xor
dec
cwtl
pop
leave
and
movsb
movsl
rcrl
shrb
imul
pop
mov
test
ds
xchg
mov
mov
jnp
or
js
test
int3
xchg
mov
dec
mov
frstor
int3
test
or
mov
in
cmc
xchg
fistl
push
cs
mov
ljmp
mov
dec
and
jp
loop
mov
lret
int3
sub
xchg
inc
adc
xor
stc
pop
xor
mov
xor
lahf
imul
and
loop
rcr
fwait
sbb
aad
fsubr
cmp
xor
std
mov
lret
insb
dec
gs
pop
mov
sbb
dec
push
std
dec
ds
xor
lods
sahf
mov
sub
mov
or
mov
test
lods
fisttpl
dec
clc
lods
jo
lret
loopne
xchg
nop
lret
adc
out
sub
nop
insb
cmp
loop
sbb
push
iret
aas
adc
ror
mov
fsubrl
jns
jnp
xchg
lods
in
xor
cs
xor
out
lods
ud1
loop
cmpsb
or
dec
mov
scas
inc
mov
jmp
pop
sbb
in
pop
imul
adc
add
mov
add
sub
adc
cmpsb
ljmp
shl
mov
mov
xor
mov
subl
leave
das
lret
sub
inc
sub
dec
sahf
sub
mov
add
je
xlat
push
sbb
rcrb
or
and
pop
sarb
fs
les
sbb
loop
popa
sub
sub
jmp
lahf
cs
pop
or
adc
push
in
stos
jo
push
cmp
cmp
mov
inc
scas
lcall
push
dec
add
fs
dec
sbb
mov
mov
dec
or
movsb
pushf
pop
jae
aad
fimull
insb
sub
outsb
push
mov
fisubs
xchg
pop
jmp
cmp
addb
hlt
sub
mov
nop
sbb
rcl
cs
and
or
jmp
cmc
int
sub
lock
loop,pt
es
push
and
cmpsl
cmp
push
ljmp
push
xor
mov
inc
cld
and
enter
pop
pop
call
add
pop
pop
sub
decb
call
pop
shrb
mov
fadd
in
andl
data16
xor
push
or
mov
mov
mov
enter
or
and
mov
test
out
test
pop
test
mov
jmp
fucomp
cmp
lods
pusha
aad
loop
sub
mov
push
cwtl
popf
adc
clc
or
dec
imul
lock
in
sti
enter
lahf
leave
popf
fisubrs
ljmp
cmp
jnp
out
cli
mov
leave
jg
sarl
scas
xchg
inc
pop
mov
cwtl
inc
rorl
mov
in
cmova
stc
call
inc
sarl
scas
dec
push
in
pop
rorl
pop
pop
mov
call
cmpsb
sub
push
ljmp
lahf
and
mov
ror
mov
stos
fcmovbe
or
aaa
cmp
negl
in
lea
cli
sub
cmp
adc
sub
rolb
add
sub
inc
fnsetpm(287
leave
cmpsb
adc
int
cmp
pop
fwait
movsb
lahf
lret
pop
lds
jecxz
mov
aas
xchg
jns
adcb
lea
testl
out
call
shll
jns
ljmp
jmp
fwait
sti
loopne
test
add
scas
xchg
pop
push
inc
test
int
in
lcall
pop
adc
lret
mov
stos
nop
mov
xor
inc
mov
jp
sub
dec
or
push
lds
imul
scas
sub
repz
es
inc
xchg
test
insb
aam
or
cmp
std
int3
sub
nop
pause
cmp
sbb
mov
mov
push
test
xor
mov
jo
pop
mov
mov
les
xchg
push
pop
ret
fs
mov
adc
pop
scas
pop
and
jp
aad
adc
les
push
xor
mov
mov
adc
pushaw
sub
cmpsl
xor
gs
adc
cli
inc
scas
cmp
stos
out
hlt
jo
fucomi
movsb
mov
dec
cmp
pop
lcall
int3
shlb
lods
inc
stc
sub
lret
mov
sbb
sbb
cmpsb
xor
dec
pushf
out
std
mov
mov
sub
push
pusha
insb
cmpsb
sbb
insl
cli
mov
bound
fsubrl
or
dec
sbb
test
mov
or
xchg
orl
out
mov
cmpsb
jne
pop
idivl
test
sbb
in
out
lea
xchg
adc
clc
sub
push
inc
loop
pop
std
test
xlat
xor
or
mov
lret
jmp
or
jbe
jbe
jle
lahf
mov
mov
mov
mov
in
aas
jnp
repnz
inc
mov
sub
xor
push
jns
clc
scas
push
lret
cltd
outsb
mov
push
pop
ljmp
test
pop
sti
or
xchg
enter
fstpl
push
js
lock
sub
inc
push
hlt
and
or
cli
pop
mov
xchg
jo
imul
pop
jae
gs
push
push
call
inc
mov
decb
sub
push
jl
sti
out
lds
mov
dec
sub
and
inc
xor
lahf
cmpsb
add
lods
enter
cwtl
add
clc
data16
test
or
icebp
out
cmp
out
xchg
out
shll
in
rorb
rcr
mov
bnd
jno
push
aam
ljmp
or
adc
cs
push
gs
fcoms
int3
inc
jmp
mov
rorb
push
imul
jmp
mov
sti
mov
mov
and
fsts
punpckhdq
in
or
inc
and
les
push
mov
and
ror
sti
icebp
sub
cwtl
mov
lock
enter
std
fiadds
sbbb
mov
aad
cltd
das
lcall
push
xchg
bound
lcall
cmp
ja
xchg
lcall
mov
scas
jae
clc
cltd
outsl
in
cmp
pop
aaa
mov
inc
adc
fcmovnbe
sub
ja
sbb
jl
mov
xchg
psrlq
jnp
pop
sbb
movsb
inc
or
or
mov
xor
out
enter
jmp
fstpl
pushf
pop
cli
fldenv
jp
push
scas
imul
in
jbe
mov
pop
sub
popw
jge
call
jl
cmp
pusha
pop
sub
mov
mov
out
xchg
mov
inc
inc
cltd
jns
adc
jge
rcrl
aam
dec
test
shrb
cmp
flds
push
lcall
mov
mov
es
aad
jo
dec
pop
mov
cmpsb
pop
dec
adc
out
imul
fstps
xchg
push
stc
mov
pop
or
fstps
lock
dec
xor
lret
out
outsb
fisttps
add
mov
ret
add
cmp
arpl
push
jmp
inc
push
xchg
mov
inc
mov
adc
adc
mov
mulb
sub
jmp
dec
sub
dec
shrb
mov
sub
in
push
xor
imul
cmp
or
xor
push
sub
in
jge
cmpsb
and
nop
push
pop
and
xchg
pushw
cwtl
das
out
mov
sar
sub
add
aaa
push
pop
lds
in
fsubrs
cmp
pop
jns
add
adc
rclb
jp
mov
dec
movsb
icebp
mov
std
jl
xor
bound
mov
pop
mov
dec
add
rorl
xchg
mov
cltd
aam
and
xchg
xchg
push
dec
sahf
push
pop
cltd
cltd
fnstenv
lea
pop
lea
pusha
movsb
imul
and
gs
enter
mov
xchg
mov
mov
adc
inc
enter
mov
lahf
js
mov
popa
mov
xchg
add
fmul
xchg
sub
js
test
loop
mov
mov
pop
and
jmp
jbe
in
outsb
std
xchg
mov
sub
imul
and
out
xor
rcrb
lods
decl
add
ljmp
cmp
dec
xor
cwtl
in
ljmp
mov
push
cld
mov
fdivrl
cltd
push
test
cmp
cmc
fs
ljmp
in
mov
xor
inc
xchg
leave
nop
cmp
push
jo
push
nop
lds
test
sub
ja
add
lock
mov
cmp
in
lods
push
dec
enter
cltd
lcall
aas
pop
sbb
fucomi
mov
sub
sub
aam
mov
out
mov
imul
adc
lds
call
xchg
popf
xchg
enter
cmc
sub
shrb
rcrb
dec
lock
push
mov
pop
sbb
push
mov
sub
xchg
bnd
stos
xchg
dec
lret
lods
mov
ljmp
jecxz
mov
pop
cltd
pop
lahf
jbe
mov
sti
and
dec
leave
cwtl
hlt
cld
lods
aam
notl
and
jae
sbb
inc
xchg
repz
in
lret
rcrl
pop
les
xor
test
rol
mov
ret
adc
ret
or
fbld
repnz
mov
mov
mov
sub
in
fcomps
scas
mov
hlt
fstl
lods
je
cmpsb
fst
mov
cmp
and
outsl
movsl
adc
sub
add
idiv
add
or
push
ror
jge
incl
or
cmp
ljmp
out
imul
inc
mov
sub
cli
movsb
mov
test
pop
adc
outsb
push
movsl
fs
test
hlt
xchg
enter
repnz
in
sbb
int3
inc
outsl
movsb
push
insb
clc
xchg
pop
nop
or
push
jl
std
sub
cli
nop
add
fldcw
push
push
int3
outsl
mov
dec
ljmp
icebp
mov
sub
cli
mov
cmpsb
jp
mov
fidivrl
fstps
cmpsb
inc
sti
inc
call
xlat
push
add
xor
xchg
outsl
cmp
cmpsb
fimull
adc
jp
xchg
sub
dec
in
push
ljmp
push
cmp
cmp
pushf
jae
ljmp
xchg
xor
aad
xchg
push
fsubrl
sub
push
xchg
pop
push
or
mov
ficoml
mov
mov
movsb
jl
pop
popa
cs
outsl
push
imul
xor
je
sub
add
push
xlat
movsl
scas
outsb
dec
mov
adc
int3
dec
xchg
mov
xchg
jg
cs
and
repnz
lret
mov
or
sub
add
inc
lods
repnz
add
in
repnz
jmp
fisubl
dec
pop
fcmove
outsl
ja
sarl
js
mov
lret
shrb
adc
fdivp
clc
adc
jge
cwtl
imul
mov
rcrl
mov
xlat
jo
jae
pop
xor
cmp
pusha
mov
cmpsb
std
cmpsb
or
andb
cmp
pop
mov
or
lret
push
jg
lods
mov
jae
stc
xor
fmulp
pop
push
and
dec
and
mov
shrl
xor
cld
jmp
pop
dec
inc
mov
push
jp
mov
push
fprem
push
jo
cmpsb
dec
push
call
nop
inc
pop
xchg
js
mul
mov
add
test
pop
imull
and
mov
hlt
inc
rolb
imul
sbb
jo
outsb
inc
inc
subb
sub
lock
pop
hlt
stos
test
bound
push
jns
sbb
fidivrl
scas
pop
lcall
lret
inc
mov
mov
scas
leave
lock
jg
fxch
mov
dec
pop
les
scas
pop
sbb
dec
or
mov
sbb
cmpsl
lods
ficompl
jl
movsl
jnp
cmc
push
and
inc
mov
fucomi
dec
cmpsl
js
das
sbb
movsl
inc
in
in
outsl
insb
scas
mov
xchg
leave
dec
cmpsb
je
movsl
jbe
jp
cmp
pop
mov
and
xchg
ss
adc
into
add
xor
sbb
xchg
sub
cmp
movsb
fdivrs
pop
ljmp
sti
inc
jnp
mulps
sub
cmp
fwait
lods
ficoml
movsl
fildll
xchg
lea
jb
push
dec
jecxz
sub
cmp
mov
das
aam
sub
cmpsl
push
hlt
scas
ljmp
rolb
cmpb
sub
int3
sub
dec
aam
out
nop
pop
xchg
sub
aam
dec
cwtl
jp
rcrl
push
xchg
lahf
fcos
jl
ljmp
clc
and
sub
xlat
enter
outsl
push
int
push
lret
lret
sti
jo
in
rorl
jnp
dec
loop
gs
loopne
pusha
cmp
jo
je
push
je
jp
mov
pop
add
sarl
enter
sbb
jne
fmull
fisubrl
jo
adc
shl
rcrb
int
dec
out
or
mov
pop
pop
int3
mov
lret
dec
sub
mov
fwait
loopne
loope
push
fldl2e
jmp
das
repnz
add
aas
dec
jle
int
mov
arpl
mov
mov
adc
mov
in
mov
jns
in
pop
and
flds
aad
fmul
pop
push
or
nop
fisubrs
pop
fcompl
lcall
push
jno
popf
mov
push
push
cmp
ja
cmp
out
shr
lock
xlat
fwait
lds
jmp
sub
mov
jbe
sbb
in
out
or
sti
xchg
lret
and
or
cmp
jne
pop
sti
inc
cmc
mov
popf
push
movsl
xchg
popf
inc
movsb
mov
sarb
push
or
jbe
outsl
cld
cwtl
arpl
pop
lahf
mov
pop
lea
sub
xor
lret
nop
sub
je
add
ret
xor
int3
std
push
inc
sub
lret
lods
out
xor
mov
aad
xorl
or
outsb
in
cmpsl
jnp
sub
scas
or
fs
push
mov
outsl
jno
popa
mov
add
push
mov
lock
aad
xor
mov
mov
xchg
mov
mov
xor
cmp
mov
dec
lahf
mov
cmpsl
sbb
jns
lods
leave
test
cmpsl
pop
xchg
outsl
data16
dec
rcrl
mulb
rcll
shlb
cmpsl
insw
aaa
aaa
dec
push
movsl
xlat
ret
shlb
lahf
out
mov
mov
popf
lret
jo
push
loope
in
in
out
cltd
mov
inc
lret
inc
lahf
jecxz
int3
jno
cmp
sahf
stos
imul
popa
mov
sub
push
dec
pop
fsubl
jg
push
push
fistpl
test
cmc
or
mov
fisttpl
test
imul
outsl
repz
pop
jb
hlt
mov
scas
jmp
fsts
mov
ficompl
and
ret
inc
push
arpl
and
mov
lods
jnp
mov
jmp
les
jmp
test
bswap
and
mov
cwtl
into
jp
jb
out
aas
imul
inc
mov
cld
sub
mov
lahf
cwtl
jo
scas
pop
add
stos
or
jo
or
sub
xor
in
repnz
shl
xchg
in
aaa
and
inc
jp
addl
or
sub
xor
js
cwtl
sbb
es
xchg
dec
enter
sub
je
ljmp
sub
cmp
inc
xlat
leave
ljmp
es
sub
push
shl
test
cli
push
sbb
fnstcw
scas
fwait
test
daa
lcall
das
xchg
inc
stc
mov
js
cmp
dec
pop
and
lea
hlt
lcall
stc
xchg
jp
xlat
sbb
cmp
or
shlb
cmp
jb
call
ss
cmp
flds
jae
push
lea
cmpsl
sub
mov
enter
ja
add
fcmovu
adc
mov
nop
and
das
out
arpl
fmuls
jne
pop
add
sub
inc
cmc
pop
cmp
mov
or
and
xor
mov
outsb
ror
ljmp
dec
in
or
push
inc
sbb
arpl
call
and
bound
mov
mov
jnp
mov
loopne
mov
xchg
mov
and
aaa
sbb
sbb
sahf
add
stc
les
das
scas
dec
sub
pushf
inc
push
mov
cmp
inc
ret
rorb
test
sbb
outsb
test
rolb
mov
fldt
and
les
into
or
and
cmpsb
lahf
push
xor
leave
std
sub
into
mov
lcallw
jg
fidivl
inc
call
sub
sub
ljmp
movsb
push
cmp
lcall
int
adc
sub
cmpl
arpl
and
nop
in
jo
lods
cltd
push
pop
aaa
sbb
stos
cmp
aad
int3
lret
cwtl
addr16
out
or
jp
leave
loope
cmp
xchg
jnp
fnstcw
mov
mov
icebp
cmp
imul
mov
stc
jle
in
mov
jmp
pop
dec
sbbb
int3
bound
mov
int3
jle
jns
or
ret
cmp
fs
xor
loop
mov
es
mov
subb
test
xor
adc
seta
int
xchg
cmp
lock
cmpsl
out
int
fdivl
cmc
scas
sub
shl
lret
es
out
imul
pop
enter
lods
repz
mov
pop
cmp
mov
inc
sahf
xchg
aam
sub
test
mov
mov
or
je
cmp
out
mov
xabort
and
mov
lods
sbb
pop
inc
je
mov
outsl
jo
xchg
push
in
jbe
or
mov
outsb
mov
in
aas
and
push
pop
push
ret
add
and
push
cwtl
in
frstor
dec
loope
imul
cmp
out
leave
ss
mov
xchg
jb
leave
dec
xor
and
iret
mov
sti
lods
dec
xor
inc
mov
xor
inc
ret
or
daa
sub
inc
sbb
add
testb
cmp
or
inc
addr16
jle
imul
icebp
mov
ljmp
flds
dec
lcall
sahf
insb
mov
adcl
and
hlt
push
popf
or
or
and
mov
sti
xchg
jnp
out
and
lret
cmp
lcall
loope
cmp
divl
cmp
mov
std
ljmp
lock
inc
inc
cmp
and
mov
repz
and
outsb
clc
dec
les
out
jecxz
mov
pushf
imul
stc
enter
sub
int3
or
mov
pop
pop
sub
lahf
leave
repz
push
cli
enter
mov
jnp
sub
ljmp
pop
fmuls
cltd
mov
aas
test
shrl
test
test
es
addr16
dec
cmpsb
cmp
mov
outsb
xor
dec
pop
sub
jnp
mov
mov
idiv
lret
imul
xor
ss
inc
daa
push
lahf
sbb
aam
enter
cmpsb
insl
das
subb
out
out
data16
dec
orb
out
sub
sub
lock
lods
ret
jbe
sub
jno
pushf
leave
sub
mov
mov
cmpsl
ljmp
andl
mov
popa
lods
leave
test
lods
mov
pop
sarl
inc
enter
clc
bound
sub
lock
subb
mov
nop
push
sarl
orb
sbb
xor
jle
ljmp
add
loope
mov
jbe
pushf
jnp
inc
test
push
mov
outsl
rclb
mov
popa
xor
jbe
pop
or
xor
fwait
mov
xchg
pop
cmp
stc
cmpsb
popf
movsb
outsb
xchg
int
sub
imul
pop
cmp
dec
aaa
stc
mov
cmp
out
add
in
jnp
mov
jmp
mov
mov
mov
aas
pop
push
xlat
mov
mov
jmp
stc
cmpl
sbb
dec
push
cvtpi2ps
lahf
dec
int3
xor
gs
in
xor
test
jnp
jmp
test
das
mov
pop
ja
push
pop
sbbb
movsb
xor
out
in
hlt
sub
loop
adc
pop
xchg
pushf
and
pushf
dec
mov
cmpsb
push
xchg
push
iret
cmpsl
xchg
in
cmp
lret
and
lret
push
out
loop
sub
test
xor
cmp
dec
xor
fistps
mov
idivl
mov
sti
das
pop
dec
xchg
int3
ja
mov
push
cld
nop
mov
cli
cltd
mov
fs
das
mov
adc
cmp
or
add
sbb
mov
hlt
push
fmull
mov
mov
adc
dec
cwtl
mov
pop
das
jb
int
enter
gs
mov
or
data16
mov
out
vmread
leave
adc
xorb
mov
insb
pop
pop
and
add
lds
fstl
test
repnz
jecxz
pop
mov
dec
lods
adc
and
mov
pop
cmpsb
cmp
and
test
sub
sarb
ja
or
mov
stos
mov
enter
addr16
push
xchg
pushf
icebp
cmp
inc
hlt
insb
fnstcw
mov
jmp
fs
orl
cmp
outsl
cmc
and
lods
push
sub
jl
inc
adc
dec
push
mov
hlt
jge
sbb
in
es
mov
into
jl
mov
mov
cmpsl
sub
cmpsb
cmpsl
rol
imul
repz
daa
in
std
cmpsb
jb
sub
mov
push
jl
out
pop
nop
fnop
push
dec
and
cmp
rclb
adc
fxam
xlat
repz
pop
in
xchg
jmp
sub
es
push
out
sub
or
mov
mov
dec
adc
cmpsl
and
or
sub
out
lcall
or
push
inc
mov
stc
and
or
dec
pop
ret
sbb
popf
cltd
test
dec
push
mov
cltd
jmp
cmp
sbb
mov
and
imul
daa
mov
sti
cmc
xor
sti
aas
mov
fimull
xchg
cmp
out
mov
pop
jo
mov
lds
jnp
movsb
xchg
fstl
sub
pushf
adcb
aaa
xorb
test
hlt
jo
popa
into
jle
push
add
mov
ljmp
xchg
es
int
test
dec
or
inc
jb
xchg
push
fstpl
cmp
in
sti
in
adc
fidivl
ds
fidivl
sbb
and
mov
ljmp
sub
xchg
sub
enter
mov
stos
loopne
std
push
lret
lcall
ret
pop
leave
lock
and
aaa
adcb
pushf
rorl
xor
sub
in
xchg
leave
xchg
xor
push
jmp
int
in
outsl
jmp
in
push
fistpl
sahf
xor
push
lea
add
xchg
into
subb
sbb
xchg
inc
lea
add
sub
addl
fsqrt
enter
adc
push
fld1
jmp
adcl
mov
mov
mov
in
push
sub
sub
stc
jmp
mov
and
test
inc
aaa
xlat
cmp
jmp
inc
addr16
les
mov
inc
xor
out
frstor
mov
int3
fcmovne
dec
add
pop
or
ds
hlt
mov
jbe
pusha
or
nop
mov
leave
xchg
mov
insb
test
sub
push
aad
and
rcll
test
ret
enter
sbb
adc
fistpl
push
fsubs
out
sbb
rorl
lods
jecxz
pop
pop
clc
sub
int3
xchg
mov
enter
lret
cmp
push
aad
clc
mov
cmpsl
fists
lds
ljmp
adc
lret
xor
shll
ret
lock
inc
pop
pop
sti
ja
ret
bound
ja
cwtl
mov
rcll
iret
aam
inc
enter
or
cwtl
clc
aam
iret
pop
ja
push
sub
mov
lds
das
cld
jbe
cmpsl
xchg
push
repz
cmp
pop
mov
rolb
add
adc
pop
daa
xchg
call
adc
ret
push
addr16
rcrb
sbb
push
iret
js
bound
lea
fstps
pop
out
mov
jl
loope
add
pop
pop
dec
test
cmp
ret
out
fsubr
and
pop
std
rclb
sub
cmpsb
addr16
ds
cmpl
leave
bound
jecxz
dec
mov
jecxz
jo
adc
movsb
fsubs
les
dec
lret
or
add
dec
cmpsb
aam
aad
cmp
jns
mov
lds
cmp
in
dec
mov
inc
pop
add
sbb
out
mov
andl
sub
pusha
mov
jbe
and
add
das
mov
cmp
ror
fimuls
jo
jg
mov
cmpsb
call
pop
fsubrs
jne
pop
push
cmp
outsl
jl
push
mov
addr16
leave
push
std
testb
sbb
test
jnp
cmpsl
out
jle
cmp
hlt
xchg
pop
sub
push
imul
pop
call
sub
das
mov
repnz
leave
aas
xor
xchg
je
ljmp
data16
push
outsl
aas
and
cmp
in
fldt
lods
repz
insb
js
mov
push
sbb
xorl
push
mov
and
xchg
call
int3
ret
cltd
pop
push
sbb
dec
out
dec
sbb
cmp
jo
movsl
pop
test
xchg
or
out
test
mov
enter
mov
jae
xor
adc
mov
jno
or
mov
inc
das
lcall
fmul
lods
and
aas
mov
pop
icebp
int3
movb
jb
sub
scas
jecxz
or
mov
push
and
jge
mov
cmpsl
mov
sub
or
int
adcb
sub
outsl
fs
lods
push
mov
testl
lret
jo
stos
subb
or
call
pop
push
mov
or
lret
stos
fsubrp
das
out
lods
sbb
lock
stos
fmuls
adc
dec
fwait
rclb
nop
mov
adc
or
jecxz
pop
scas
adc
adc
mov
push
mov
das
pusha
mov
mov
fnstsw
test
xchg
adc
stc
cmc
les
ret
insb
sahf
dec
push
push
ljmp
cmp
ljmp
sbb
mov
inc
in
or
sbbl
dec
sbb
xor
lods
test
mov
push
into
lds
movsb
test
lea
push
cli
and
mov
inc
les
cmpsl
hlt
loop
pop
sub
or
scas
sti
jmp
imul
xor
out
sbb
cld
pop
xor
stos
jl
aaa
or
jns
push
mov
and
fbld
push
test
out
scas
insl
nop
fnstcw
loope
sbb
mov
repnz
adc
aas
mov
in
adcl
fdivl
jmp
ja
fimuls
pop
jns
dec
cmpsl
loope
mov
ja
lret
xchg
push
jge
inc
clc
popa
sub
sbbl
lds
jmp
pushf
sbb
scas
cmp
mov
inc
mov
adcb
repz
aaa
insb
push
popf
sbb
orb
and
sub
mov
les
in
sub
jbe
jo
lret
imul
mov
fwait
sub
push
call
das
sbb
mov
mov
cmp
lahf
pop
sub
cmovns
mov
pop
dec
flds
leave
cltd
scas
lcall
test
sub
mov
jecxz
pop
cmp
xlat
pop
movlps
mov
and
cs
mov
int3
ror
mov
movsl
push
mov
push
mov
test
ja
out
mov
sbb
shrb
addr16
ss
jge
and
cmp
xchg
jnp
pop
in
push
mov
call
sbb
ret
stc
test
and
shll
pop
repnz
sti
mov
dec
fcomi
out
sti
cli
aaa
fists
mov
shll
sub
in
daa
dec
addb
xor
lcall
lret
pop
addb
lcall
adc
loope
or
or
sub
pusha
xlat
xchg
jb
xchg
in
mov
dec
fmull
cwtl
lock
or
push
nop
push
sbb
sar
jmp
cmc
mov
imul
leave
fisttps
mov
xchg
pushf
pop
sub
aad
sahf
pop
mov
mov
hlt
rolb
adc
dec
or
test
pop
jnp
rorl
dec
roll
add
lods
mov
mov
call
jnp
loope
pop
out
dec
cwtl
adc
pop
sbb
jns
jnp
fdivrl
push
or
xchg
push
ror
mov
push
cmp
mov
dec
outsb
push
pushf
xor
sub
sub
cwtl
hlt
sub
push
sbb
jmp
jnp
xlat
leave
dec
fs
xchg
insl
pop
adc
lret
fnstenv
subl
stos
shr
sbb
sarb
out
stc
sub
insl
cld
out
sub
dec
push
clc
lcall
xchg
cmp
pop
jo
insl
xor
int3
jmp
add
outsb
movsl
sbb
dec
scas
push
shr
sbb
lock
push
cli
xchg
fsubrl
add
lods
jp
loopne
nop
mov
push
mov
add
cmp
ret
loopne
dec
shll
int
imul
mov
pop
out
les
jp
jo
inc
ss
sbb
cmp
jg
popw
dec
mov
call
dec
sub
les
jp
mov
cmpsl
out
test
sub
je
movsl
dec
outsl
cmp
mov
and
jmp
nop
lahf
test
xor
xchg
adc
std
push
mov
sti
jne
jnp
pop
xor
lods
xchg
xor
jp
cmpsb
data16
push
data16
lock
push
clc
hlt
cmp
in
out
ljmp
shrb
inc
push
data16
xor
std
out
mov
mov
cmp
sub
lret
sbb
inc
fnstcw
jo
jecxz
cmp
cmp
jmp
insl
cmp
inc
clc
xchg
movsl
or
fimuls
movsl
sti
aas
js
stc
mov
and
pop
lret
shlb
adc
in
jl
rep
mov
sti
jo
push
mov
jo
in
cmc
fcomps
sbb
leave
xlat
inc
js
insl
adc
rclb
jp
jnp
sub
test
negb
cld
push
mov
fucom
pushf
mov
jns
push
popa
xchg
push
andw
sub
jmp
sub
lods
nop
pop
scas
sbb
inc
and
inc
add
pop
in
sbb
scas
icebp
pop
lods
stc
rorb
test
inc
xchg
fwait
and
pop
mov
pop
std
mov
xor
ret
adc
sbb
xor
xchg
lds
test
pop
sbb
shrl
btr
enter
inc
jle
jl
js
pop
sub
aad
pop
aaa
xor
adc
pop
outsl
add
cmc
iret
mov
loop
pop
pushf
or
mov
mov
cmp
xchg
inc
cld
mov
getsec
js
sub
and
pop
sbb
fdivrp
sub
jmp
push
sbb
clc
ja
jne
rcrb
pushf
fdivrs
dec
addr16
adcb
sub
push
insb
sub
sbb
jae
std
imul
data16
cltd
cwtl
stos
jbe
add
push
dec
push
pop
cli
mov
fsts
cmp
mov
add
push
sahf
pop
sub
or
inc
pop
leave
test
jne
mov
cwtl
mov
lret
jno
addr16
bound
les
cmpsl
cmpsl
jle
xchg
loope
fistpll
jecxz
and
and
insl
add
stos
mov
jnp
addr16
ljmp
and
jno
cwtl
ret
sub
fwait
mov
loopne
int
rdtsc
leave
out
cs
mov
jl
in
sub
es
sti
call
pop
adc
das
mov
in
sbbb
xchg
rorl
pop
out
out
loopne
cli
mov
dec
jns
call
int3
mov
push
test
ljmp
pop
push
sbb
fnstsw
sbb
mov
repnz
xchg
cmp
out
clc
push
nop
loopne
fs
fwait
add
pop
push
add
loope
adc
sahf
sub
adc
ficompl
mov
cmc
ss
pop
or
ret
test
test
sbb
or
cmp
pop
es
adc
aas
mov
add
sahf
shll
push
cmp
outsb
jl
cltd
out
sub
stos
jnp
mov
add
adc
mov
lock
push
sbb
std
inc
sub
nop
adc
mov
loopne
dec
icebp
add
inc
mov
cmp
cmpsb
and
jl
pop
xchg
iret
stc
mov
pop
jp
mov
cmpsl
pop
mov
imul
les
jle
and
fcoml
mov
ret
xlat
sub
subl
in
mov
lods
xchg
out
cmp
pop
jnp
stos
lahf
mov
gs
xchg
sti
test
movsb
cli
dec
in
lret
adc
push
mov
inc
push
mov
rcll
out
sti
in
add
jnp
cmpsl
in
push
movsl
dec
gs
movsb
adc
pop
and
rorb
aad
pop
push
clc
cmpsb
push
and
lods
sbb
cmpsl
lds
test
push
sub
cld
scas
push
or
and
fmuls
jae
or
out
ret
lea
cld
or
lcall
pop
push
cli
in
or
and
xchg
ja
cmc
into
adc
outsb
mov
or
rclb
gs
adc
lret
inc
sbb
adc
fidivs
lods
xor
fcomps
sti
adc
cld
pop
dec
mov
test
mov
add
daa
push
out
aaa
out
sbb
jge
js
aas
sbb
jo
inc
or
sarb
dec
stc
sub
repz
lods
dec
push
and
jbe
sub
xor
add
add
sar
push
sti
push
xor
xchg
mov
icebp
call
cwtl
push
test
mov
test
fldcw
fldt
push
subb
jmp
lods
fstl
inc
jl
sbb
dec
cmp
add
js
pop
mov
and
cmpsl
test
dec
mov
sbb
mov
arpl
jbe
mov
add
jp
and
sub
push
popf
out
fmuls
dec
inc
aam
pop
jp
pop
jp
repz
sbb
pop
insl
lcall
ficomps
js
movsl
inc
cmp
les
lahf
dec
sbb
call
insl
ret
ja
rcrb
sbb
in
or
lcallw
jbe
movsb
push
pop
xor
cmp
stos
cs
xor
lock
lcall
rcr
inc
insb
jno
jge
lods
rcr
xor
dec
adc
fnstcw
xchg
sbb
xor
cmp
ja
aam
cmpsb
adc
push
ja
xor
push
sub
adc
push
movsl
push
and
daa
hlt
loopne
xchg
notb
adc
stc
ljmp
in
aam
std
xor
ficoms
inc
insb
xchg
dec
js
adc
loope
les
das
lock
sub
sbb
xchg
std
call
loop
jns
sbb
and
push
leave
push
and
cmp
mov
mov
pushf
in
fiaddl
scas
shrb
push
iret
mov
add
jb
mov
in
xlat
sbb
cmc
dec
insb
sub
sub
mov
iret
nop
mov
scas
xchg
outsl
lods
ljmp
adc
arpl
lret
clc
ds
insl
and
lret
daa
lods
sub
lds
push
daa
cmp
mov
lret
jnp
mov
pop
lock
pop
push
push
enter
xchg
lods
or
test
loopne
pop
jbe
and
jle
push
rorl
pop
fwait
icebp
lock
sbb
in
xchg
mov
in
inc
data16
pop
mov
f2xm1
scas
out
or
and
fs
das
cmpsb
iret
add
jl
sub
ds
mov
pop
push
dec
sbb
push
out
xorb
push
inc
insb
dec
sbb
mov
insl
cs
lret
adc
imul
ja
fnstsw
lcall
bound
push
stos
sub
and
mov
sub
stos
subb
in
pop
shlb
test
push
xchg
lret
sahf
insl
pop
push
in
mov
xor
sub
ljmp
out
std
xchg
sbb
sbb
jl
and
jmp
lret
outsl
jmp
sbb
adc
jge
imul
cmp
pop
or
push
lods
inc
add
outsb
scas
cmp
push
cs
lret
mov
mov
pop
and
jg
dec
sbb
jmp
push
ficompl
mov
sub
and
or
out
fnstenv
sbb
push
icebp
test
insl
rorb
xor
xchg
test
mov
sub
outsb
scas
leave
repz
mov
jo
push
mov
adc
mov
imul
jns
fsts
popf
outsl
mov
mov
pop
lret
sbb
push
sbb
shll
sahf
leave
into
aas
xor
push
sbb
adc
jecxz
mov
pop
cmp
das
mov
jge
int3
lret
sub
sub
lahf
std
sub
and
mov
xchg
push
mov
mov
pop
jo
mov
fldt
sbb
aam
and
push
fsts
mov
or
sub
pop
imul
mov
int
mov
add
bound
mov
xor
roll
rcrb
mov
mov
imul
fidivl
push
mov
add
jns
cmpsl
loope
call
dec
imul
loopne
out
mov
sub
out
jp
adc
pop
push
lahf
inc
sbb
inc
test
pop
loop
lret
pop
cs
mov
jns
rcll
ds
jecxz
xchg
js
push
jnp
rcll
jne
fcompl
sti
push
jl
inc
scas
call
pusha
jmp
cmp
xor
cmpsl
pop
or
sbb
mov
loop
and
jbe
dec
lods
insb
sti
xor
push
pusha
jno
mov
loopne
xor
in
lds
rorb
cmp
cmpsl
ljmp
sbb
or
jmp
insb
sub
cld
pop
sub
xor
sarl
addr16
leave
push
stos
ret
pop
js
divb
dec
lret
idivl
xchg
ret
pop
and
addr16
fxam
cld
mov
test
icebp
pop
xchg
cs
push
or
mov
fnstenv
mov
and
fisttpll
sub
cmpsb
adc
or
imul
xchg
lds
jbe
std
data16
dec
addr16
mov
jmp
xchg
clc
pop
push
jp
fidivrl
mov
mov
dec
mov
pop
insb
lcall
mov
dec
mov
or
test
fwait
cmp
xchg
enter
sub
jmp
cmp
stos
mov
jmp
pushf
dec
sete
push
jmp
call
mov
push
leave
pop
adc
outsl
cmp
adc
inc
lret
or
stos
lods
lcall
jb
out
fimull
inc
scas
rcrb
jmp
pushf
add
jmp
notl
cs
jae
sub
mov
xchg
ret
out
push
xor
rcr
cmpsl
sub
mov
fwait
add
mov
dec
xor
push
inc
sbb
loope
jecxz
rorl
jns
and
xchg
sub
cmp
cmp
or
jle
push
jp
test
icebp
fcomps
dec
inc
mov
lock
ficomps
sub
inc
stos
mov
mov
aad
jmp
cmp
mov
es
xchg
jmp
mov
outsl
pop
jl
inc
test
inc
sar
in
aad
jae
es
test
les
out
ds
cmp
aas
lahf
and
mov
out
jge
add
sbb
sub
es
arpl
clc
jo
lahf
out
pop
lock
subb
and
sbb
lahf
jp
mov
sti
stos
out
cltd
mov
in
push
jo
add
sub
sub
clc
jmp
test
or
dec
pop
jge
out
int
sti
in
bound
lahf
adc
or
jbe
jle
clc
xchg
mov
pusha
adc
jbe
test
leave
mov
scas
ljmp
mov
ss
imul
dec
mov
push
push
push
js
das
sbb
adcb
pop
dec
push
dec
pop
cmpb
xor
stc
iret
pop
ret
push
jg
add
mov
push
adc
pop
pop
pop
int3
jo
pmuludq
insl
enter
inc
ja
out
push
arpl
jno
mov
stos
stos
jle
lcall
add
pusha
cmpsl
mov
call
stc
es
push
scas
insl
jb
xor
jmp
out
sub
stc
arpl
push
xor
aad
adc
nop
aas
ret
cwtl
jge
aam
mov
pop
add
xchg
mov
xchg
int
cmp
test
jle
lods
cmp
nop
idivl
jns
stos
bound
xchg
ljmp
fsts
or
fnstcw
jns
mov
inc
inc
mov
pop
xor
cwtl
popa
es
or
aas
mov
aas
fdivs
xchg
dec
gs
paddq
sub
outsl
sub
fstpt
mov
mov
sti
sub
mov
leave
leave
insb
call
sub
cltd
push
lock
scas
sahf
and
sub
cmp
push
xor
jl
mov
jmp
mov
cli
push
and
jg,pn
dec
lds
call
out
mov
jmpw
mov
xor
jg
mov
divb
mov
pop
xor
sub
jge
imul
rcrl
inc
cli
adc
shrb
pop
sub
test
insl
and
clc
jmp
imul
dec
insb
dec
fistpl
imul
shrl
xor
pavgb
insb
xor
jns
xlat
imul
cmpsl
mov
lret
cmpsl
mov
add
lea
les
dec
dec
xchg
les
sub
mov
sub
jmp
cmpsb
mov
xchg
out
lahf
cmp
repz
sub
shrb
mov
ljmp
or
and
loop
fsubl
jns
jnp
negl
stos
mov
pop
lock
pop
pop
sub
xor
push
loopne
pop
mov
aaa
ror
xchg
jg
xor
and
int
jbe
std
lret
in
mov
stc
mull
mov
push
cld
sbb
and
jp
bound
cmp
imul
into
pop
arpl
lods
ljmp
mov
jp
xchg
in
ret
jb
movl
movsb
out
sub
lahf
aaa
pop
sub
popa
cmp
inc
in
adcb
lods
dec
shrb
imul
pop
into
sbb
fdivl
leave
pop
cmp
outsl
rorb
enter
das
xchg
jns
dec
cmp
dec
lret
fwait
rcrb
imul
xchg
pop
rorb
test
shr
and
lret
and
dec
jb
jns
jecxz
pushf
and
jbe
icebp
lods
leave
sbbb
into
inc
or
jnp
mov
pop
dec
mov
aaa
push
sub
xor
shlb
outsl
es
rcll
or
movsl
ficomps
lret
jo
sub
xchg
repnz
push
inc
dec
nop
fistl
or
adc
hlt
dec
jp
stos
in
dec
call
cltd
loopne
pop
cmovb
out
lret
arpl
inc
scas
mov
gs
mov
sub
addr16
aas
dec
xor
and
sbb
inc
cmovno
mov
das
mov
pop
mov
clc
pusha
fdivr
adc
out
orl
arpl
out
jae
int
mov
or
test
stos
jo
sub
jnp
mov
scas
out
adc
gs
jmp
sub
sub
mov
punpckhbw
dec
iret
lret
push
imul
push
scas
push
push
cltd
mov
mov
scas
mov
adc
enter
pop
lret
loop
mov
aas
xchg
inc
push
mov
push
mov
int3
addr16
enter
mov
mov
test
mov
push
test
inc
mov
push
lea
popaw
xor
sub
imul
loope
inc
cwtl
lock
cmc
xlat
loopne
cmp
out
and
add
inc
test
mov
pop
pop
dec
jmp
mov
aaa
orl
test
and
js
fisttpll
arpl
pop
add
imul
je
dec
adc
out
out
popa
cmpb
jp
and
movsl
mov
pusha
push
jmp
jp
dec
nop
adc
pop
imul
out
push
xchg
or
repz
push
jne
std
in
add
cmpsl
dec
std
aaa
imul
inc
fiaddl
out
loop
repnz
ret
sahf
mov
and
sarl
mov
mov
cli
clc
divl
jo
test
add
repz
cltd
das
sbb
dec
movsb
loopne
ljmp
repnz
stos
jmp
inc
dec
nop
xlat
fiadds
or
std
clc
hlt
call
mov
mov
leave
addr16
sbb
mov
dec
pop
mov
out
mov
repnz
mov
sbb
ret
dec
mov
ret
cmp
int
xchg
scas
negl
pop
push
pop
in
push
out
cmp
pop
push
mov
mov
js
stos
mov
dec
jbe
lcall
dec
xor
imul
nop
lds
or
ss
jne
or
ret
and
das
pop
sbb
jnp
push
outsb
cmp
cmp
mov
sub
fsubrp
lahf
fsts
cmp
sti
std
stos
dec
cmp
test
fnstsw
sbb
jno
dec
out
sub
std
cmc
push
ficomps
cmpsl
cmp
and
pop
call
lcall
jns
cmp
insl
inc
cmpsb
cmp
leave
aaa
jmp
jl
mov
loope
push
js
xor
sbb
or
clc
adc
ftst
sub
sahf
adc
mov
gs
fs
fidivs
push
out
scas
mov
rolb
shrb
fsubp
or
cs
adc
orb
test
sbb
lret
fsincos
out
mov
insl
mov
inc
mov
dec
ss
sub
fdivr
lock
jnp
sub
popa
inc
pop
jbe
mov
ret
add
mov
sar
aam
sahf
and
lahf
jl
and
adc
movsl
cmpsl
mov
js
lahf
mov
addps
ret
lock
xor
xor
stos
nop
mov
pop
mov
fisubrl
jmp
clc
xor
das
push
sti
jp
sub
push
cwtl
test
mov
call
jge
mov
dec
xor
notb
push
and
nop
out
ret
mov
jnp
sub
jo
or
pusha
sub
mov
imul
stos
jecxz
nop
xchg
cmp
mov
stc
in
bound
jbe
mov
jae
lahf
dec
jge
mov
cmp
in
leave
bound
je
mov
jp
sbb
cmp
sbb
in
adc
addr16
fcomps
mov
push
and
out
decl
lods
lcall
adc
icebp
and
leave
push
xlat
insl
mov
or
mov
dec
mov
mov
sbb
arpl
rorl
dec
push
cmp
pop
test
insb
leave
and
or
popf
push
in
cmc
repnz
orb
fisubrl
jg
roll
and
cmp
fwait
sub
dec
or
fstps
mov
es
add
cltd
addr16
pusha
sub
inc
sarl
data16
xchg
test
fcomps
cmpsl
shll
mov
sub
faddp
call
pop
dec
xchg
dec
aaa
xor
out
mov
into
fcomp
jo
rcrl
sbb
add
mov
jbe
out
push
cmpsb
sub
push
pop
sbb
and
loope
xchg
mov
testb
and
mov
addr16
and
js
out
mov
lahf
rcl
popf
xor
sub
mov
ret
dec
ror
jbe
fnstsw
lods
fldcw
gs
sub
call
dec
or
sbb
ljmp
pop
in
lods
fdivp
lods
adc
sub
or
sbb
adc
int3
in
fstps
rclb
sbb
cld
and
adc
std
fcom
das
sahf
cltd
mov
call
imul
dec
jnp
cs
inc
cli
std
mov
lods
mov
popa
push
lret
pop
adc
pop
insl
sbb
push
sub
rorl
sbb
add
pop
gs
dec
jnp
jge
mov
jmp
sbb
add
pop
jne
add
insb
bts
jne
xchg
lret
jnp
in
or
loope
loopne
fisttpl
xchg
sbb
mov
mov
cmp
fcmovu
loopne
sarl
cmp
fmull
or
and
sub
aaa
xor
pop
out
add
xor
xchg
cld
movntps
inc
sbb
push
pop
pop
cwtl
loop
cmp
stos
test
ret
mov
fldcw
mov
inc
imul
in
out
add
mov
dec
lods
inc
push
jb
sub
jge
fcmovu
in
mov
mov
pushf
lret
push
and
out
push
or
lcall
cwtl
stos
xor
pop
loop
ret
ljmp
adc
xor
fldt
xchg
sbb
mull
and
scas
jmp
mov
ror
lods
out
pop
test
insl
adc
into
outsl
pop
push
pop
out
xchg
fstps
xor
adc
mov
mov
sub
lret
jbe
lods
dec
sub
pop
jbe
or
xchg
jne
push
mov
inc
push
mov
in
xor
or
sti
xchg
cli
jmp
ret
adc
dec
lcall
ja
je
or
fstps
and
adc
sbb
cmp
adc
mov
push
dec
push
or
jge
push
lcall
mov
in
js
adc
pop
daa
fidivs
enter
bound
xor
adc
lret
dec
leave
fadds
shll
pop
xchg
stos
sets
in
cmp
inc
test
hlt
in
fsts
inc
sub
stos
pop
jmp
jmp
xchg
mov
int3
rcrb
in
xor
push
scas
data16
cmpl
popf
dec
and
test
push
lahf
xchg
fmul
nop
iret
mov
fs
call
lds
stos
add
scas
push
sbb
aaa
sub
or
mov
loope
jbe
repnz
push
sti
inc
movsb
scas
sbbb
pusha
inc
les
push
rcl
and
inc
mov
lret
mov
rcr
push
pushf
adc
loope
leave
fisubs
or
jle
sti
fsubrs
ja
add
cli
addr16
scas
orb
push
adc
mov
sub
fstps
into
add
shl
into
daa
leave
cltd
xor
loopne
movsl
into
mov
test
inc
fdivrs
pop
mov
imul
fs
mov
pop
fldenv
pop
sub
lods
pushf
or
bswap
add
inc
mov
cmc
pop
lahf
iret
hlt
loopne
mov
adc
xor
test
clc
movsl
gs
xchg
in
xchg
push
jg
cmp
cmp
das
push
push
xchg
lock
or
lea
push
inc
imul
popw
mov
dec
pop
cltd
adc
imul
add
xlat
cmc
cmp
adc
mov
outsl
pusha
push
lock
negb
jne
imul
cld
das
xchg
movsb
jp
aas
jmp
sub
cmp
cmp
flds
cmp
sub
pop
push
lcall
repnz
inc
sub
push
sti
and
sub
mov
push
cli
leave
movsb
lret
pop
jmp
xor
sbb
jo
subl
mov
ret
cmp
push
stc
mov
addr16
jb
and
stos
sarb
jmp
cli
cli
in
loopne
or
jle
lret
and
cmp
pop
cmp
adc
insb
add
leave
je
cs
loop
and
shll
es
sub
mov
dec
pop
mov
and
jnp
xor
jecxz
scas
cmp
and
inc
clc
mov
push
in
xchg
jo
cli
out
ret
dec
cli
pop
out
xchg
rcr
cltd
call
push
notl
leave
cltd
loopne
jecxz
ljmp
lret
das
jbe
rclb
addr16
inc
add
jbe
dec
add
jp
dec
push
adc
insl
jg
fsubl
stos
add
mov
dec
push
dec
push
jmp
imul
xchg
scas
ret
dec
icebp
xchg
lods
in
outsb
ficoms
dec
xchg
mov
xchg
cmpsb
push
loopne
lds
call
sub
push
push
cs
and
mov
out
repnz
sbb
js
rcr
mov
dec
dec
lret
mov
pop
rcr
enter
dec
movsl
push
in
or
int3
cmpsb
cs
xchg
loope
cmp
jne
inc
mov
leave
cwtl
xor
lods
insb
outsb
lcall
std
push
mov
sub
test
or
mov
mov
xchg
adc
and
xchg
icebp
test
jp
push
adc
xchg
loop
shll
pop
jo
insl
cld
mov
push
dec
jp
mov
movl
pop
xchg
js
aam
bound
js
rol
frstor
leave
popf
xchg
pop
cmpsl
outsl
dec
cs
or
in
push
hlt
int
jmp
out
adc
lock
insl
adc
mov
cmc
dec
add
loopne
lret
mov
jbe
mov
inc
mov
ret
sub
sub
aam
mov
bound
inc
sbb
add
cmp
lahf
clc
ja
frstor
push
inc
icebp
negl
sbb
pop
fwait
rcrb
stos
pop
fsubl
mov
xchg
push
inc
cmc
stos
sti
cmp
adc
cltd
test
push
loopne
adc
dec
and
sti
fstsw
bound
shrl
loop
je
mov
addr16
push
test
loop
mov
js
cmc
sbb
ds
cs
js
call
sbb
jo
arpl
pushf
push
mov
shll
mov
sbb
and
push
in
cmp
scas
je
enter
test
loopne
pop
jo
or
lcall
jo
cltd
push
popf
mov
leave
test
out
sbb
cmp
cmp
jmp
mov
andb
xor
sub
outsb
inc
xor
aad
cmc
arpl
js
in
or
fstps
pop
sbb
jp
insb
outsl
xor
jbe
arpl
addr16
adc
pop
pop
xchg
push
adc
adc
scas
enter
shl
in
or
xorl
xchg
mov
mov
cltd
dec
sub
lods
bnd
es
push
cmc
push
stos
adc
jne
xchg
sbb
pusha
mov
inc
cmp
enter
mov
shll
and
push
les
das
adc
lods
sti
and
cmp
dec
pop
leave
jbe
cmpsb
test
in
dec
and
or
push
jae
out
loopne
in
and
imul
jmp
les
movsb
out
mov
add
daa
in
insl
mov
pop
roll
pop
sti
addr16
mov
loopne,pn
subb
sbb
and
arpl
in
jo
mov
cmpsb
into
jmp
pop
sbb
mov
pop
dec
pushf
sub
insl
fsubrs
in
scas
or
jnp
clc
xor
mov
add
dec
aas
mov
out
jns
lock
push
mov
push
lret
int3
xor
pushf
addr16
test
loopne
cmp
inc
gs
shr
sub
add
jnp
pop
clc
neg
cmp
cmp
cmpsl
xor
aad
das
lret
lock
cltd
dec
lods
loopne
and
vmwrite
and
js
movsb
or
scas
push
movsl
sub
cwtl
rcr
outsl
and
sub
repz
dec
cmp
stos
and
push
mov
push
mov
xchg
loope
mov
stos
mov
fmull
imul
loope
dec
lds
enter
inc
pop
sbb
mov
std
imul
cmc
or
jp
fistpll
popa
stos
jmp
push
and
adc
push
push
test
xchg
addr16
pusha
jg
fmull
pushf
dec
mov
or
xchg
xor
stos
lahf
jmp
mov
sti
movsb
push
insb
loopne
add
mov
scas
sahf
insl
mov
fimuls
ficoms
iret
ret
dec
mov
xchg
lcall
pusha
jl
and
dec
jl
insb
xchg
loopne
jle
scas
fbld
call
jp
and
in
mov
mov
dec
in
dec
sbb
out
stc
ret
lock
pop
adc
aam
pop
iret
jp
pushf
fld
cmpsl
mov
jno
mov
dec
popf
js
jp
mov
lahf
js
test
mov
out
fidivrl
pop
outsb
outsl
lods
aad
test
cmp
ud0
test
jmp
ljmp
lods
icebp
into
je
lahf
fldenv
cli
xor
xor
repnz
sbb
and
sub
mov
dec
fucomp
test
jmp
adcl
and
fcmovnbe
outsb
int
jmp
iret
dec
inc
fsubrl
or
xor
or
pusha
out
out
mov
lea
es
sbb
push
in
dec
ja
pop
test
mov
aad
jo
or
es
jns
scas
push
push
ja
mov
fisubrl
les
or
jo
les
lds
cmp
ljmp
rolb
xchg
in
push
sub
rcrb
pop
cmp
pop
shrl
jo
inc
add
push
dec
mov
lea
adc
test
loop
mov
jae
loop
push
lahf
mov
dec
mov
imul
sti
jmp
aas
mov
cmp
sahf
mov
mov
cltd
int
lods
mov
shrl
mov
shrl
enter
mov
push
mov
dec
push
test
push
mov
or
in
mov
jo
adc
stc
dec
sub
mov
mov
loopne
inc
addr16
jle
cmpsl
sub
sbb
mull
jno
jno
cmp
pop
hlt
hlt
negb
stc
sbb
sbb
cmp
call
pop
enter
insb
sbb
inc
test
jp
lock
lret
popa
sub
lock
sub
push
fsubs
jno,pn
das
push
xchg
mov
rcll
leave
xor
arpl
push
es
push
aad
test
adc
lock
into
push
cmp
aam
cmpsb
mov
xor
pusha
out
js
jp
jl
stos
push
mov
fldcw
jmp
dec
sub
add
sub
xor
aad
cwtl
mov
test
adc
push
jmp
and
push
sub
je
cmpsl
cmp
aam
fsubrl
fcoml
int3
insb
or
mov
push
mov
mov
mov
dec
cmp
data16
add
adc
add
push
in
cmp
mov
int3
insb
pop
jbe
out
mov
push
out
cmp
mov
and
pop
scas
sub
lods
mov
clc
js
pop
pushf
pop
ja
cld
or
sahf
push
loop
and
int
out
stc
pop
lcall
pushf
test
or
push
mov
jb
mov
sub
and
negb
rclb
sub
sub
aas
push
loopne
xor
and
in
lahf
mov
insb
inc
cmp
outsl
in
sub
pop
fsubrp
enter
mov
fldenv
dec
mov
pop
mov
inc
sbb
sub
adc
out
icebp
fmul
cmpsb
negl
movsb
push
and
cmp
mov
addr16
push
call
mov
or
dec
push
in
stc
mov
mov
ljmp
or
and
bound
jmp
cwtl
jp
adc
ja
push
sbb
pop
cwtl
fldl
lcall
movsb
sbb
out
out
test
inc
in
lds
mov
pop
sub
lret
ja
mov
ss
leave
pop
test
jbe
insl
push
jl
push
pop
add
out
into
stc
xchg
std
push
fcomps
add
inc
rcrb
mov
jp
mov
ljmp
adc
test
jne
push
mov
mov
push
push
fldt
imul
push
dec
inc
sti
sub
insl
movsb
ret
xor
jge
pop
or
test
into
push
dec
push
shl
loope
imul
mov
outsl
sub
cmpsl
jp
aas
leave
mov
xchg
lods
je
and
loope
or
xchg
fdivrl
lods
or
jle
loopne
movb
inc
and
dec
lods
mov
dec
sub
insl
pusha
inc
sub
loopne
rolb
or
leave
call
sbb
mov
cmp
loop
pop
lret
or
sti
pushf
mov
shlb
push
mov
loope
sub
lods
cmp
stos
fadd
sbb
mov
leave
lods
call
sbb
cmc
rcrl
pop
icebp
inc
mov
sub
addr16
or
jp
test
xchg
sti
std
sub
into
insb
in
xchg
fdivrs
cmpsb
ja
pop
sbb
dec
shll
xor
pop
cli
push
sub
dec
frstor
cwtl
mov
sub
pop
push
pop
bnd
pop
and
loopne
add
in
add
aaa
mov
lods
lods
int3
xlat
sahf
mov
nop
aam
movsb
pop
adc
xchg
ret
mov
cmp
out
mov
and
jmp
sbb
jmp
in
jne
out
mov
shll
rcl
or
sub
enter
mov
ljmp
sub
loopne
rolb
jecxz
mov
add
and
cltd
divl
jb
popa
je
fbld
sti
push
or
and
aaa
mov
stos
lret
stc
cmpsb
rol
push
sti
in
mov
push
ja
ja
loopne
xchg
stos
sub
or
arpl
xchg
loopne
loopne
loopne
xlat
sbb
cmp
push
or
lcall
pop
enter
leave
repz
add
xchg
jl
les
out
sbb
out
out
lods
enter
push
dec
sub
or
imul
add
push
cltd
addr16
outsb
in
adc
loop
jge
pop
notb
dec
mov
push
xchg
fchs
jl
or
add
leave
hlt
cli
mov
adc
mov
push
cmp
cmp
inc
out
cltd
jmp
test
in
popf
jl
push
or
mov
cmp
mov
xchg
xchg
xchg
and
cli
inc
pop
int
inc
add
mov
mov
push
cmp
aad
push
sbb
inc
push
mov
sub
or
fs
sub
test
lods
xchg
xchg
aam
sub
fsts
mov
cmp
gs
dec
push
out
lahf
mov
pop
cmp
xchg
addb
scas
mov
xchg
xchg
push
adc
and
mov
jle
fldcw
aas
jns
inc
dec
js
pop
test
mov
cmc
add
push
scas
mov
call
enter
add
dec
lret
pushw
testl
and
cmc
rcrl
mov
lods
in
push
mov
test
jecxz
in
movsb
sti
dec
in
movsl
or
data16
stos
icebp
fs
repz
cwtl
sub
cld
xorb
push
lds
adc
test
sub
call
int3
xor
adc
sub
mov
in
in
xor
popa
scas
es
sub
dec
aas
and
inc
pusha
sbb
in
std
enter
cmpsb
add
scas
iret
mov
jp
ja
pop
push
dec
aaa
test
cmc
xlat
xor
cld
in
xchg
rcll
cltd
mov
orl
sbb
pop
cmp
icebp
mov
popl
pop
xchg
sbb
lcall
add
pop
gs
jl
fs
aaa
in
lods
cmpsl
xlat
outsl
or
sbb
cld
clc
fldcw
mov
or
push
sub
mov
dec
and
push
mov
mov
inc
into
pop
fnstsw
pop
inc
cld
lahf
mov
adc
or
mov
push
loop
hlt
scas
dec
mov
lods
clc
fsts
inc
lods
add
sbb
jg
cmp
ja
pop
ds
mov
div
test
leave
inc
jnp
cmc
lods
inc
nop
mov
out
int3
xchg
push
mov
sbb
pop
cs
das
movsl
mov
jbe
int
flds
push
mov
addr16
clc
int
nop
ret
and
pop
cwtl
inc
out
clc
mov
jmp
inc
sbb
cmp
sbb
dec
sbb
sub
leave
cmovo
fnstenv
mov
sub
fsts
fmul
lea
aad
cmp
fildl
and
fstpl
ud0
stos
sub
sub
sbb
and
sub
mov
sub
cli
ror
xchg
pusha
out
sbb
sahf
xor
pop
jns
add
add
scas
sbb
nop
mov
mov
into
lcall
stc
add
push
sbbb
mov
lds
sbb
or
push
in
rcl
xchg
fmull
lock
pop
lahf
add
iret
mov
mov
fdivl
shll
aam
enter
push
cmp
dec
xchg
sbb
cmp
mov
jl
mov
test
add
cmp
cmpsl
and
mov
dec
cmp
fcoml
mov
repz
out
addr16
test
rolb
js
cld
adc
int
mov
insb
popf
call
inc
ficoml
sub
mov
inc
and
fsubs
push
and
inc
sub
add
js
jp
cmp
mov
add
ss
mov
pop
enter
mov
lahf
pop
xor
iret
sbb
cmp
dec
in
stos
cltd
push
mov
stc
mov
out
imul
push
adc
insb
out
jo
xor
cmp
and
inc
data16
dec
cwtl
pop
pushf
out
cmp
addr16
push
and
mov
movsl
fdiv
nop
cmp
jmp
fs
in
and
lds
cmp
xchg
fldcw
cmpsb
clc
faddp
add
outsl
cli
in
test
pop
push
and
rolb
jecxz
ljmp
jbe
adc
pop
mov
dec
out
inc
push
dec
test
pop
cs
insl
out
leave
mov
push
push
out
pushf
pop
rorl
jle
cwtl
hlt
dec
pop
sbb
or
in
int3
pop
clc
push
pop
dec
pop
lcall
mov
stos
test
leave
cli
or
addr16
rcr
cld
mov
stos
mov
push
push
add
int
ja
rorb
pop
movsb
js
out
sbb
ljmp
sub
mov
mov
cmp
cs
push
sbbb
stos
jp
jbe
dec
mov
sub
aam
in
mov
pop
sub
loope
shlb
subl
movsl
adc
mov
call
js
jp
mov
mov
inc
jo
into
ret
dec
lahf
adc
mov
ds
jbe
sbb
adc
sub
in
pushf
sbb
cmp
push
and
jp
push
jmp
sub
jo
aas
sub
cmp
lods
xor
pushl
jnp
hlt
xor
jbe
inc
arpl
dec
clc
cmp
movsb
lret
adc
lahf
lahf
sub
je
fimuls
jmp
sarb
or
jae
add
stc
jp
jbe
div
imul
dec
pop
mov
mov
icebp
leave
stc
lods
adc
outsl
pusha
jle
rorb
fdivr
cmp
arpl
sub
in
movsb
jo
clc
test
jbe
sbb
test
lret
scas
pop
loopne
jo
mov
jno
sahf
mov
mov
or
mov
cltd
fsub
mov
inc
es
lock
inc
cltd
push
shr
cmp
jg
cmpsb
jbe
js
lcall
aam
dec
aaa
inc
in
loope
pop
lret
iret
xchg
lcall
push
lea
sahf
xor
cmp
std
xor
sahf
inc
pop
jmp
lea
das
push
push
rcrl
out
lret
ljmp
stc
movsb
sub
loope
sub
leave
cmp
std
in
ficompl
ror
inc
xchg
mov
fsubrl
xor
lret
sub
mov
aaa
lock
call
dec
dec
les
hlt
mov
jbe
push
in
lcall
out
lret
jo
push
scas
inc
punpcklbw
ljmp
sub
inc
adc
orb
xchg
adc
adc
imul
pop
sbb
movsl
pop
out
sbb
sub
pusha
cmp
ret
sub
push
sbb
xchg
dec
or
rcrl
add
hlt
adc
in
insb
cltd
fisubl
aas
repnz
push
sub
sti
and
lcall
cmp
mov
popa
bound
scas
jnp
in
sbb
dec
ret
arpl
test
repnz
adc
mov
cmpsb
jl
dec
call
mov
mov
sti
mov
sbb
lahf
push
nop
pop
sbb
mov
insl
mov
jmp
fstpl
sar
les
je
movsb
sub
lret
xchg
sahf
fstpl
lcall
jne
fcomps
sub
lea
call
stos
and
mov
and
and
jmp
cwtl
nop
mov
push
adc
pop
test
jnp
addr16
mov
and
test
addr16
loope
or
cmp
push
and
push
frstor
and
lock
jle
rorl
dec
je
lods
int
les
mov
or
in
xor
mov
fs
fwait
clc
je
mov
pusha
add
mov
cmpsb
lcall
rolb
sub
das
fadds
lahf
lods
xchg
sub
test
in
pop
jnp
jns
jmp
dec
push
sbb
mov
frstor
and
or
mov
jbe
xchg
inc
add
pop
pop
sub
imul
cwtl
icebp
xchg
out
js
jo
push
sbb
das
mov
cmp
sub
xchg
mov
jbe
sub
inc
sbb
leave
xor
push
repnz
mov
sub
mov
adc
dec
pop
rcl
rorl
lods
jmp
mov
inc
sub
movsl
dec
or
cld
enter
repz
xchg
mov
lret
add
stos
xchg
jecxz
cmp
adcb
adc
clc
jns
lods
movsb
cmp
aad
dec
push
imul
sbb
sub
ret
stc
sub
imul
les
push
mov
addl
jo
and
das
or
sbb
add
sub
cltd
fsubrs
pop
inc
popf
inc
adc
mov
test
mov
rcrb
or
adc
add
loopne
adc
into
pop
sti
cwtl
scas
sub
dec
rcrb
cwtl
in
pop
xor
jmp
or
cmp
sbb
add
push
ljmp
cli
pop
xchg
pop
fmuls
fiadds
cmpsb
sub
sbb
ficomps
jle
xchg
cmpsb
dec
lods
mov
in
stc
movsl
sub
or
xor
lahf
sub
mov
sub
inc
fcom
cmp
cmp
ret
in
test
jbe
sbb
in
jmp
das
push
and
or
stos
sbb
fucomi
cli
jnp
mov
push
pushf
stc
mov
dec
pop
mov
in
inc
inc
in
cli
data16
push
dec
stc
pop
mov
fistpl
std
or
lods
leave
das
sub
mov
and
mov
test
imul
mov
out
sub
cmp
enter
lods
sbb
shlb
shlb
xor
add
jp
and
loopne
movsl
add
lret
pop
test
pop
mov
movsl
jge
fstpt
je
clc
movsb
out
fmuls
leave
and
xlat
xchg
and
xor
inc
cmp
adc
pop
out
adc
fscale
mov
pop
aas
je
enter
ja
sbb
cli
roll
jge
fsubrs
sahf
adc
dec
sbb
shrl
or
mov
pop
sub
scas
je
dec
dec
adc
leave
fistpll
repz
mov
jb
inc
aas
arpl
das
mov
fcomps
push
or
rorb
dec
xor
jnp
jmp
mov
push
aad
and
in
dec
jo
jmp
xchg
pop
xor
call
sbb
fdivrl
jmp
jo
jl
fcos
pop
mov
pop
lock
loopne
mov
int
xchg
jo
pop
testb
push
cmp
xor
in
imul
pop
fcmovne
pop
popa
xchg
or
mov
flds
ret
out
mov
jmp
icebp
cmp
jb
int3
sub
andl
test
inc
mov
test
adc
push
mov
int
inc
mov
add
int3
call
dec
ja
fstp
repnz
adc
jecxz
xchg
inc
ficomps
es
cli
movsb
xor
dec
nop
jge
lcall
arpl
add
xor
adc
xchg
loop
xchg
jo
pop
mov
sti
stos
adc
ret
push
dec
mov
jne
xchg
mov
jle
cmp
cmp
hlt
mov
sbb
insb
or
iret
push
test
inc
loop
clc
mov
jo
std
repz
out
pop
cmp
add
pop
fcompl
ret
lcall
rol
hlt
stos
push
xchg
ret
dec
dec
and
mov
lods
or
stc
shlb
sub
call
xor
or
push
movsl
outsl
out
jae
jmp
lahf
in
rcrb
mov
lret
outsl
mov
test
xorb
shlb
lea
jg
push
mov
insb
out
das
xor
pushf
sub
dec
dec
pop
sub
cmp
jns
xchg
loope
push
jge
mov
xchg
mov
ss
mov
dec
leave
sbbb
jle
call
dec
call
and
push
mov
test
dec
sub
call
dec
inc
rcrl
stos
mov
pop
dec
mov
cmp
cmp
jo
mov
ficomps
inc
imul
int3
jmp
jecxz
jge
pop
xchg
mov
inc
hlt
mov
jbe
or
cld
shll
xchg
test
arpl
dec
add
and
cli
sub
aaa
or
test
dec
lret
and
mov
add
and
pop
lret
in
jmp
out
aam
pop
xor
adc
fcomps
hlt
mov
pop
add
pusha
aam
sub
jg
in
in
pop
fidivrl
outsl
std
push
ljmp
test
lret
sar
stc
es
lods
lods
mov
lock
push
or
push
cmp
idiv
pusha
and
pusha
inc
xchg
or
loopne
test
push
push
mov
packssdw
dec
sub
pop
jb
mov
aam
imul
dec
sub
imul
push
pop
add
jecxz
push
sub
imul
mov
mov
pop
daa
pop
cmp
mov
jmp
inc
push
out
fstpt
lock
jp
popa
jmp
cltd
and
test
stc
cwtl
call
pop
jmp
mov
mov
lret
dec
insl
pop
jmp
inc
ror
xor
das
stos
outsl
and
xor
inc
push
push
fsubr
cmp
int3
outsb
pop
add
lock
mov
dec
fstps
movsb
xor
cmp
sti
lea
lds
sbb
pusha
sub
andb
pop
loopne
jb
daa
pop
or
hlt
cmpsl
fimull
bound
mulps
push
sbb
call
mov
lret
inc
pop
lea
push
movsb
js
mov
in
jo
push
xchg
lods
pop
and
gs
mov
cwtl
cmpsb
cwtl
xchg
in
pushf
sub
in
cmp
sub
cmp
pushf
cmpsb
inc
hlt
sahf
shll
in
jbe
or
test
jnp
daa
lcall
pop
push
lret
xor
cltd
cld
xchg
xor
cwtl
mov
lock
stos
pop
data16
arpl
sub
lods
out
fldcw
les
jp
aaa
into
lcall
popf
xor
clc
hlt
out
movsl
lods
aad
jp
nop
mov
xchg
sarb
out
es
ret
cli
or
fcoms
imul
mov
push
dec
js
fs
push
add
sub
push
clc
movsl
mov
mov
in
hlt
adc
test
fdivr
push
test
xchg
adc
xor
sub
mov
push
sub
nop
movsl
push
pop
ret
mov
out
adc
out
pop
lods
js,pn
or
lcall
pop
xor
or
dec
fucom
adc
cli
inc
in
mov
jbe
fsubs
iret
xchg
std
mov
in
jmp
das
mov
and
push
sbb
stos
pop
test
mov
aad
loop
pop
outsl
stos
lcall
lock
lods
repnz
repnz
lods
xor
cmp
xchg
xor
lock
inc
jl
das
mov
ljmp
filds
cmpsb
xchg
in
push
pop
mov
icebp
mov
dec
pop
lods
sbb
dec
sar
pushf
lock
push
stc
mov
xchg
ljmp
sbb
rcrl
sbb
push
xchg
lret
or
fmuls
pop
push
aaa
xor
mov
add
sti
xchg
add
pop
inc
iret
dec
cwtl
lret
test
sub
js
cmpsl
jle
mov
and
mov
daa
ret
xchg
jmp
mov
les
lret
sbb
in
psadbw
jmp
flds
shrl
lods
nop
add
gs
enter
push
stos
jmp
xchg
jns
adcl
mov
push
in
dec
cmp
and
push
jl
out
mov
cmpsb
mov
inc
das
test
jbe
lock
sub
jns
out
mov
adc
cmpsb
test
xor
mov
mov
pushf
push
and
inc
sub
aad
jp
push
test
mov
pop
xchg
push
jo
or
mov
mov
or
leave
rorb
cmp
test
stos
pop
mov
js
and
out
or
ret
lock
stc
jbe
sub
sub
fisttpl
dec
add
nop
call
loope
les
and
or
mov
cmp
push
jbe
xor
lret
out
xor
and
ficompl
sar
ret
cmp
cld
pop
pop
jbe
fidivl
stos
popl
sub
out
and
aam
cmpsb
rcr
sub
or
adc
test
cltd
jg
in
lcall
sub
sbb
stos
dec
imul
out
dec
bound
js
hlt
pop
aam
sbb
out
mov
add
cmpb
mov
addr16
gs
sub
pop
cvtpi2ps
cmp
pop
js
movsl
adc
shll
nop
pop
loop
or
mov
inc
js
push
jae
push
mov
or
push
imul
fcmove
fcompl
inc
xlat
and
test
ljmp
mov
xchg
adcb
shll
cli
enter
push
call
sbb
push
sub
mov
js
clc
lahf
jae
fucomi
jmp
fwait
lea
mov
daa
enter
cmp
push
insb
call
pop
pop
push
dec
cmp
fldt
mov
push
mov
add
push
push
and
sub
push
test
in
mov
cltd
das
push
pop
das
cmpsb
shlb
sbb
jo
or
inc
mov
xchg
sti
mov
stos
dec
mov
mov
sub
push
scas
out
adc
arpl
rorl
ret
loop
adc
mov
sbb
jne
call
popl
pop
xor
call
xchg
data16
hlt
mov
push
xchg
xchg
push
std
or
push
aad
and
jae
push
mov
leave
stos
mov
push
out
js
lods
call
in
jb
sbb
lods
pop
es
pop
jg
mov
push
and
ljmp
popf
mov
xchg
pop
xor
mov
pusha
out
cmp
sarb
fcom
xor
add
pop
cmc
pop
pop
adc
fimull
mov
or
mov
xor
js
insb
jmp
in
pop
outsb
sub
in
stos
pushf
pop
sub
sbb
lock
sahf
es
adc
enter
fstl
stc
dec
outsb
cmc
sbb
pop
pop
xchg
ja
mov
sbbb
dec
push
testb
cmp
notl
sbb
out
lret
adc
outsb
jmp
enter
leave
cmp
ficompl
stos
mov
push
fildll
data16
adc
rcll
sbb
adc
push
lods
jmp
jnp
or
lahf
fnstcw
push
dec
lds
out
insb
dec
adc
cs
sub
ret
sbb
fnstsw
dec
xor
mov
pop
mov
pop
jp
rcrb
int3
push
or
mov
popf
frstor
cmpsb
jmp
dec
dec
fs
xchg
pop
mov
leave
inc
mov
cmp
lret
dec
pop
sub
test
xlat
das
jbe
leave
das
lock
dec
ret
sub
mov
lods
stos
and
push
xchg
mov
cld
push
inc
insl
add
xchg
jb
out
sub
popf
fwait
pusha
adc
dec
or
cmp
sub
or
mov
jnp
movsb
pop
nop
jp
lahf
in
scas
cli
sarb
xchg
cs
std
mov
dec
cmp
mov
push
mov
dec
test
cmc
cld
mov
adc
sub
imul
or
shl
mov
gs
movsb
test
sub
mov
jl
pop
cmp
hlt
push
jp
mov
push
or
sub
cmp
ret
xchg
push
popf
fs
dec
push
loopne
lds
inc
sbb
mov
mov
andb
and
mov
mov
pop
in
adc
cmp
ja
push
outsb
outsl
lds
push
aam
fadds
cmp
loopne
dec
clc
js
xchg
cmp
push
lcall
pop
movsl
sbb
fmuls
mov
mov
add
cltd
mov
call
dec
push
xchg
mov
jmp
xor
mov
and
adc
clc
add
mov
or
or
or
sbb
int3
pop
jle
push
jmp
sbb
repnz
into
test
repz
push
cmpsb
add
cmp
pop
maxps
cmp
cvttps2pi
call
mov
aaa
fsts
sbb
jnp
mov
imul
mov
inc
pop
in
decb
mov
push
and
cmp
sub
sub
xchg
lock
jg
xorb
and
push
rcl
sub
notl
adc
and
add
mov
cmp
xor
cmc
mov
rcrl
adc
sti
push
lret
fiaddl
jl
mov
adc
out
mov
lahf
xlat
cmp
fpatan
into
push
dec
scas
jae
jmp
rorb
mov
scas
popa
xchg
mov
mov
in
and
inc
cmpsl
insb
imul
inc
in
into
gs
cli
scas
cmp
aam
test
psubb
popf
add
jecxz
out
pop
jl
cmp
push
js
or
leave
mov
push
fmul
mov
pusha
dec
xor
xor
lock
mov
xor
xchg
push
adc
push
mov
in
pop
into
sub
das
mov
mov
lahf
rorb
jle
lods
mov
dec
and
push
mov
cli
andb
mov
mov
in
pop
xor
xchg
mov
dec
outsl
out
std
adc
ljmp
sbb
xchg
push
fmuls
sub
ljmp
inc
xor
or
pop
lods
fnstsw
gs
mov
shrl
sahf
pop
pop
cmpsb
mov
in
sub
cs
xor
sbb
mov
lods
imulb
lock
insb
or
stos
inc
cmp
ret
add
dec
jnp
cmpsl
add
imul
iret
inc
call
insl
mov
insb
rclb
sti
lds
dec
jmp
pop
mov
xlat
push
adc
cld
leave
or
std
ret
in
push
xor
inc
pusha
enter
ret
mov
lcall
ret
xor
imul
in
dec
js
andb
inc
mov
shll
xchg
popa
cltd
push
pop
fdivrs
jp
push
and
jg
add
stos
xor
rcrl
movsl
push
mov
fdivrp
and
and
mov
jl
sub
loopne
lods
pop
or
mov
out
cmp
jmp
f2xm1
mov
les
xor
fcomps
add
bound
push
rolb
icebp
dec
data16
leave
sbb
sub
mov
ljmp
bound
or
jp
std
mov
fsubrs
loope
in
lcall
andb
xchg
repnz
rorb
out
jns
in
daa
cmp
stos
jmp
pusha
out
fisttpll
mov
and
sbb
mov
mov
insl
subb
stos
std
gs
dec
push
xor
scas
call
imul
lret
test
jp
aam
mov
std
cmpsb
and
sub
shll
mov
xlat
lahf
cli
std
or
fdivs
mov
jmp
jmp
test
jle
adc
sub
rcrl
movsl
sub
push
or
pop
xor
mov
cli
sub
lahf
int3
mov
fwait
jl
nop
jb
mov
mov
dec
mov
cmp
popf
inc
adc
loopne
std
ja
xchg
insb
sbb
lcall
std
pop
ja
out
lret
mov
cmc
das
fistpl
fucomp
jmp
rorl
inc
movsl
push
into
push
mov
mov
xor
clc
aam
dec
push
mov
in
xchg
ljmp
es
sbb
aad
jp
pop
cmp
push
adc
clc
aad
pusha
pusha
pop
test
cmpsl
ljmp
inc
pop
ficoml
sub
add
dec
jo
mov
jb
inc
enter
cmp
out
rcrb
ret
loop
lahf
xchg
aad
jmp
lea
dec
cmp
add
xchg
xchg
sbb
les
dec
lods
xchg
lea
jo
das
sbb
ljmp
sar
fisubl
lea
movsb
xor
mov
js
out
fcomps
aam
shlb
out
sub
or
cmpsl
sub
inc
loope
enter
pop
fsubrs
inc
pop
mov
cmc
inc
lret
jbe
xchg
inc
mov
mov
add
cmp
hlt
ds
or
cmp
xor
xchg
repnz
or
test
lods
les
outsl
shrb
sub
or
stos
jg
enter
imul
or
shl
sub
mov
pushf
call
pop
clc
out
jmp
jle
sub
cmp
pushf
xchg
mov
lret
pop
call
pop
cli
shrl
idiv
addl
and
test
mov
xor
fimull
push
out
mov
cwtl
enter
insl
push
loopne
push
xor
sub
stos
and
fistpll
out
push
mov
shrb
int3
sub
inc
lea
shrb
nop
ret
cmpsl
sub
les
mov
repnz
sbb
lret
dec
test
out
loop
dec
loopw
in
jp
test
out
cld
mov
xor
fwait
out
xlat
js
fs
aam
ja
movsl
jp
std
and
movsb
movsb
xchg
out
pop
xorb
and
js
xchg
mov
aam
dec
mov
jg
xchg
js
jae
add
push
push
andl
cld
mov
call
jge
pop
stc
jae
adc
sbb
mov
aas
xchg
adc
arpl
and
jo
clc
pop
or
aaa
negl
mov
rclb
addl
pop
lahf
mov
popf
push
jp
nop
dec
fisttpll
add
cmp
and
or
mov
jns
movsl
pop
aam
jp
push
cmp
sbb
clc
jbe
mov
cmc
mov
mov
ljmp
and
pusha
add
lret
sbb
xor
mov
jo
jnp
les
inc
jl
inc
aam
lahf
mov
scas
mov
mov
jnp
mov
out
cltd
pushf
sbb
lahf
negl
dec
sub
enter
out
movsb
out
mov
rcrl
jnp
xchg
mov
xchg
mov
xchg
dec
ja
lahf
sbb
cwtl
fnsave
adc
lods
and
je
leave
inc
dec
mov
push
jb
pop
xchg
cmpsb
add
mov
push
ljmp
frstor
cmp
loopne
xchg
add
inc
in
call
test
cli
pop
fsts
jl
or
aad
inc
test
pop
xor
sub
sbb
push
push
loop
cld
cmp
pusha
pop
mov
lret
out
xchg
lea
xor
sbb
movsb
frstor
pop
arpl
in
cmp
fsubrl
jp
std
mov
mov
mov
shl
fiadds
stos
mov
or
imul
jne
popw
jle
cmp
aaa
out
testb
jbe
in
mov
push
cmp
push
jge,pn
inc
cmp
repz
and
daa
in
sbb
aaa
sbb
mov
or
cld
and
cmp
mov
sbb
data16
fists
das
and
test
push
xchg
lods
dec
mov
aaa
daa
sbb
pop
lods
notl
sub
sub
add
cltd
jo
pop
subb
jno
push
arpl
sbb
push
cmp
outsb
sub
inc
adcb
dec
cs
jp
push
sti
outsl
cli
pop
pop
mov
add
stc
jbe
lock
jg
jmp
xchg
mov
fdivr
sbb
xor
ljmp
out
test
mov
xor
lret
bound
lock
pop
repz
mov
cmpsl
je
jo
scas
pop
dec
out
mov
cld
xchg
ljmp
outsl
sub
loop
js
cmpsb
cwtl
mov
sub
or
push
scas
sbb
icebp
sti
xor
mov
push
into
popa
btcl
adc
iret
call
cmp
pop
into
addr16
xor
push
cwtl
lock
shl
outsl
mov
mov
movsb
adc
push
fucom
inc
inc
into
sbb
jo
mov
mov
sbb
lret
jg
nop
ss
rclb
sbb
fnsave
insl
aaa
ss
dec
mov
popa
fdivrl
sub
and
and
push
and
movsl
mov
xor
into
movsl
enter
mov
jmp
lds
fdiv
popf
sub
adc
cmp
jnp
out
imul
in
mov
add
ljmp
jge
mov
inc
in
pop
je
sub
pop
cs
xlat
outsl
sahf
aad
flds
mov
push
and
cli
rcr
sub
jg
mov
dec
in
pop
fistl
push
and
inc
xlat
jp
jl
rolb
mov
nop
push
xlat
pop
ret
out
or
pop
ss
in
mov
inc
push
push
out
push
stc
test
pop
lcall
cld
les
nop
mov
mov
fldt
push
lods
pusha
sbb
stc
jbe
les
dec
hlt
sbb
notl
das
dec
inc
lods
test
je
lahf
loope
test
pop
mov
stc
sbb
adc
adc
pop
mov
movsb
jmp
xor
je
cmp
sbb
jl
ljmp
jecxz
ret
inc
lret
mov
inc
out
adc
push
or
and
je
aas
cmp
ljmp
aas
mov
and
cmpsb
clc
fs
ud2
mov
fcomps
fprem1
cwtl
lret
or
sbb
cmpsb
ljmp
mov
push
push
outsb
cli
push
or
push
fcomps
adc
cmp
cs
in
data16
push
in
inc
sub
xor
cmpsb
je
cmpsb
jns
xchg
sbbl
inc
push
sub
call
lock
insl
push
cltd
arpl
xor
pop
enter
add
cmpsb
sar
push
jb
ficomps
or
sbb
xchg
mov
cmp
push
pop
movsb
mov
fisttpl
xor
cmp
dec
push
add
subb
pusha
mov
js
dec
add
sahf
jo
int3
cmpsb
sub
and
dec
out
pop
int
dec
and
mov
pop
gs
cmp
addr16
sub
and
mov
cmp
mov
aas
enter
lahf
stc
cwtl
jo
lret
rcrb
push
cmp
jecxz
add
fnsave
popf
fadd
jae
sbb
fsubs
out
jmp
adc
sbb
sub
ss
scas
stc
test
std
insb
sub
xchg
leave
inc
and
push
rorb
mov
lea
mov
pop
or
push
scas
pop
jns
clc
mov
into
adc
fldcw
push
mov
mov
call
scas
sahf
int
ret
mov
jle
aad
xchg
jnp
dec
xorb
int
cmp
aam
cwtl
pushf
mov
xchg
ss
xchg
pop
xor
negl
pop
dec
outsb
cld
divsd
insb
mov
jmp
xor
aam
jmp
nopl
push
cld
scas
and
loope
stc
outsl
divb
xor
iret
lods
jns
std
jb
frstor
mov
cmp
push
adc
pusha
xlat
dec
loop
xor
xchg
pop
out
and
loopne
mov
sbb
sub
into
cld
fldenv
sbb
dec
ljmp
rolb
or
dec
sbb
mov
pop
mov
xor
sti
push
mov
mov
icebp
xchg
dec
in
cwtl
dec
addr16
push
int3
cli
pop
sub
mov
mov
dec
pop
push
push
fldenv
cs
loopne
inc
ss
xchg
pop
inc
fldenv
mov
push
imul
fs
cli
push
sarl
cmp
cmc
pop
divl
lods
ljmp
movsb
in
push
shrd
push
mov
lahf
xchg
mov
dec
leave
mov
pop
ljmp
int3
outsb
scas
pop
leave
adc
jo
inc
adc
cwtl
loopne
cmpsl
ret
insl
mov
xchg
shlb
cmpsb
xor
lods
loopne
inc
int
in
js
lock
mov
movsl
or
lahf
lcall
jg
scas
in
inc
jo
pop
loope
xchg
lret
push
cwtl
call
push
lods
add
ja
fisubrl
mov
fucomip
and
mov
negb
testl
leave
lea
sub
jp
int
push
addr16
sbb
lds
scas
xor
cmc
push
sbb
andl
rorb
addr16
jp
cs
shl
push
inc
out
mov
loop
inc
leave
cli
pop
inc
sbb
das
inc
repnz
push
mov
call
stos
mov
push
mov
xor
cmp
cli
sub
es
mov
iret
inc
and
mov
leave
in
pop
in
out
out
shll
out
cs
bound
shlb
inc
or
pop
inc
in
imul
push
leave
xchg
insb
into
icebp
push
mov
ficomps
push
ret
fmul
push
lea
mov
xchg
pop
sbb
sub
jg
xor
and
mov
std
push
aas
or
stos
or
pop
nop
jle
adc
adc
push
sbb
cmp
test
cmpsb
mulb
and
xchg
aam
es
sti
dec
nop
sti
push
popf
mov
mov
mov
jmp
in
sbb
inc
cwtl
cmp
adc
or
jl
lret
out
fwait
pop
negb
add
xchg
enter
xor
shl
je
push
jge
dec
or
or
int
sbb
lods
and
icebp
aad
dec
lret
negb
adc
out
ljmp
inc
push
lock
std
push
inc
in
loope
add
cmp
mov
cli
sbb
lock
mov
enter
rcl
add
call
pop
iret
cmc
inc
ret
cs
ret
in
iret
mov
add
mov
cltd
xchg
push
dec
rcll
int3
xor
lret
pop
push
test
mov
xchg
aam
call
adc
dec
stos
repnz
ret
mov
pushf
hlt
sbb
mov
mov
mov
dec
hlt
xor
ficompl
pop
sub
into
and
push
jle
fwait
ret
shlb
add
cmc
popf
insb
movsb
pop
xor
sub
pop
xchg
inc
sbb
mov
xor
pushf
rcr
jnp
out
or
in
cmp
xchg
jae
pop
aas
xchg
or
jg
enter
mov
xchg
ficoms
push
call
scas
cmp
lods
mov
insb
mov
sbb
sbb
mov
mov
cmp
mov
jmp
lret
pop
and
leave
int
rcrb
das
lretw
cli
inc
and
outsl
fwait
pop
hlt
out
push
or
pop
les
jns
outsb
jmp
push
push
and
fstps
std
sti
add
dec
dec
cld
and
lock
scas
dec
outsl
xchg
loop
std
push
xchg
jo
iret
and
lcall
cmp
ja
nop
pop
int3
ja
or
leave
jns
jg
pop
mov
sub
mov
stos
mov
rcrb
or
ljmp
cli
push
push
mov
xlat
mov
shl
ds
nop
out
enter
mov
mov
and
nop
xchg
test
xchg
jecxz
dec
int
pusha
pusha
dec
das
outsb
xchg
rcrl
shrb
movsb
xchg
lcall
loope
jg
add
pop
stc
adc
int3
sub
pop
sub
lods
sti
dec
lret
mov
mov
lahf
push
push
stc
out
stc
push
jns
xor
adc
stos
movsb
dec
lock
mov
mov
jg
aas
test
xor
movsl
imul
sub
jne
je
lock
sbb
stc
popf
sbb
out
add
push
fucom
imul
ds
inc
mov
inc
pushf
lcall
add
inc
sub
add
jne
mov
scas
xchg
mov
xor
sbb
enter
mov
push
mov
sub
dec
repnz
into
push
outsb
fldcw
fldl
inc
cs
in
and
sbb
mov
adc
test
sub
test
mov
lret
lcall
in
dec
call
js
repnz
mov
js
pop
stos
mov
cmp
mov
in
xchg
fnstcw
adc
call
lds
clc
jl
jno
aaa
test
cmp
lret
cmp
add
pop
cmp
mov
cmp
mov
and
xchg
call
jl
sub
mov
vpcmpeqd
xchg
xor
ljmp
repnz
dec
mov
or
cltd
sub
in
dec
sbb
xchg
mov
push
fprem1
adc
sub
data16
stc
test
test
dec
out
insb
pop
sub
push
mov
lahf
out
sti
sub
enter
or
mov
les
xor
inc
add
adc
loopne
pop
cmp
jmp
add
pop
cmpb
stc
sub
cmpsl
data16
push
iret
sub
push
in
ds
xor
dec
and
add
lock
sahf
aas
dec
push
mov
imul
jp
les
sahf
pop
call
lds
es
pop
inc
cmp
and
fcmovb
inc
fcom
in
mov
cmp
stos
push
jmp
cltd
dec
push
jp
sub
movsb
lret
popf
scas
or
pushf
hlt
jbe
int3
les
push
fdivrl
adc
or
pop
push
dec
fisubl
cld
cmp
dec
cmp
cli
sub
aam
sub
sbb
rorb
or
icebp
repnz
lret
fsubrs
cmpsb
in
loopne
xchg
lcall
mov
pop
pop
lret
leave
fnsave
sbb
iret
dec
aaa
or
sbb
push
mov
test
lock
push
or
hlt
in
negl
fstpl
adc
jbe
sub
add
or
nop
sub
test
adc
sub
fdivl
enter
rcrl
pop
pusha
jp
mov
jl
movsl
inc
or
leave
push
push
movaps
fwait
icebp
ljmp
rcrb
jl
std
mov
pop
scas
fsubrs
mov
aam
shlb
hlt
jo
mov
mov
mov
sarl
aam
sub
and
adc
and
jnp
scas
pop
or
test
jmp
clc
loop
out
cli
pcmpeqb
insb
adc
stc
jbe
adc
inc
pop
lds
pop
sub
pusha
push
popa
aad
cmp
aam
jl
bound
sub
roll
inc
lcall
mov
mov
es
mov
enter
aam
mov
push
mov
repz
sub
cwtl
call
out
mov
outsb
jnp
and
ss
dec
std
ficomps
mov
ja
mov
sbb
shrl
jl
and
scas
cli
pop
cmp
cmp
cmp
pop
push
xchg
iret
popa
push
les
sbb
cld
cli
dec
dec
sub
cmp
test
shll
push
cmpsb
in
lods
std
mov
iret
add
xor
into
leave
popl
jmp
jo
out
ja
push
xor
out
mov
sub
lret
or
out
adc
sbb
bound
imul
stos
push
mov
lods
out
jns
mov
jno,pn
xor
sub
cmp
jecxz
add
fnstenv
les
or
lret
out
adc
daa
adc
test
les
movsb
into
sahf
mov
mov
cmpsb
addb
cmp
in
xchg
xor
add
xchg
adc
xchg
or
and
in
inc
mov
pop
lcall
mov
mov
sbb
dec
lds
xor
movsb
out
jns
test
out
imul
add
jl
ja
or
ja
mov
enter
stc
clc
or
lods
xor
fnstenv
xchg
xor
cmp
cmpsb
cmc
dec
pop
test
sbb
jns
jo
loop
and
sub
mov
das
sbb
cwtl
in
leave
jnp
ljmp
cld
outsl
imul
aad
adcl
cmp
jl
jbe
lock
mov
pop
mov
aaa
mov
nop
add
int3
push
inc
sbb
stc
leave
mov
pop
dec
lods
jp
clc
stos
sbb
enter
movsb
pop
sbb
jnp
fiadds
daa
js
loop
or
bound
or
lcall
std
scas
pop
jp
pop
mov
and
daa
inc
les
xor
incb
clc
push
movsl
inc
jp
pop
jl
outsb
jnp
sbb
jns
jp
push
and
aam
les
pop
ljmp
and
scas
push
jmp
and
cmpsb
lret
repnz
adc
ljmp
fnstenv
xchg
or
in
repz
adc
packuswb
sub
insl
sti
push
cmpb
mov
pop
jo
jnp
or
lock
cmc
movsl
inc
push
adc
push
arpl
ficomps
les
out
mov
imul
mov
cmpsb
xor
aas
dec
xchg
add
cmp
lock
inc
xor
mov
cmpsl
aad
jp
adc
sbb
call
add
test
rcr
nop
cltd
stos
mov
jo
mov
les
dec
push
fldcw
cli
pop
add
adc
or
push
dec
ss
lock
dec
mov
test
jmp
xchg
add
jns
inc
mov
mov
lods
data16
or
cmp
sarl
sarl
fldl2e
loop
rcrl
js
push
push
fldenv
and
aad
xor
xchg
xor
mov
int
jecxz
lret
lods
jp
push
pop
inc
fnstcw
inc
fmull
imul
lret
sbb
loopne
push
shrl
outsl
lcall
mov
into
pop
dec
cltd
push
loop
sub
mov
add
lds
lods
mov
pop
sub
pushf
jge
push
sbb
or
and
or
mov
sarb
or
mov
sub
xchg
lret
lahf
jb
pop
jp
cli
aam
adc
stos
fcompl
pop
xor
icebp
subb
inc
jno
adc
faddl
int3
mov
in
ja
out
enter
gs
push
ret
les
pushf
loopne
lods
jge
sahf
mov
loop
imul
popa
xchg
jp
pusha
xor
cmpsl
pop
jl
xchg
lcall
dec
bound
sti
cmpsb
lcall
lcall
inc
in
cmp
push
lods
dec
xchg
jp
int
test
cmp
cmp
jl
nop
sbb
ja
in
mov
test
mov
imul
cli
xchg
xor
pop
out
jecxz
aam
push
mov
sbb
cmp
clc
ret
jo
mov
rorb
jne
xchg
inc
movsb
inc
sbb
stc
push
xchg
cld
in
stos
or
xchg
jmp
pop
les
shrl
sbb
orb
cld
movsb
es
pop
nop
int3
out
lret
adc
mov
jnp
lahf
or
out
mov
fmuls
fisubrl
sub
xchg
aam
test
and
mov
mov
and
or
fcompl
or
adc
es
or
mov
xor
add
fs
insb
or
and
rorl
cmpsb
sbb
lods
jmp
std
mov
cmc
cmp
mov
cmp
xor
pop
aaa
jp
outsl
sub
addb
cmp
mov
gs
test
loop
movsl
mov
jmp
pop
cli
sahf
sysexit
xor
fistpl
push
jmp
push
add
mov
movsl
fisttpll
mov
mov
fisubrl
mov
dec
rorl
jno
jmp
and
call
push
vcvtss2sd
cmp
dec
sub
add
sub
pop
scas
mov
jmp
imul
jb
aam
js
pop
les
pop
test
xchg
adc
adc
sbb
outsb
mov
pop
pop
mov
outsl
sub
dec
push
cmp
test
pop
leave
mov
mov
cmc
mov
cmpsl
aas
xchg
pop
loop
pop
cmp
test
rclb
or
roll
cmp
aam
adc
or
int
lods
pop
xchg
es
stos
fucomp
jbe
jo
sub
dec
pop
cmc
pushf
jae
pop
sub
cli
mov
out
fxch
leave
xchg
lods
and
fidivrs
fs
lods
pop
popf
mov
stc
inc
mov
out
jl
xor
sbb
or
push
jno
mov
lods
pop
test
pop
push
sti
pop
pop
sub
scas
bound
lret
loope
sub
stos
cltd
mov
cmp
mov
dec
in
arpl
std
std
inc
aad
adc
call
lods
loopne
loope
and
das
ljmp
and
out
add
int3
jo
call
sbb
ret
filds
mov
or
gs
sbb
subb
inc
jo
pop
push
mov
stc
push
adc
lds
bound
ret
repz
stos
mov
dec
aas
in
adc
push
xchg
inc
bound
sbb
dec
sbb
fsubrl
mov
int3
mov
out
mov
imul
iret
fwait
mov
add
adc
dec
jbe
out
fdivrs
test
pop
pop
popf
clc
push
scas
std
fs
cli
add
jnp
fmuls
subb
fdivrl
sub
push
shrb
push
leave
push
sub
cs
dec
dec
lods
hlt
nop
in
aam
nop
sub
ret
mov
fmull
mov
sti
inc
jecxz
or
cmpsb
loope
mov
mov
adc
test
jp
xchg
inc
daa
mov
sar
stos
into
loopne
xor
outsb
or
dec
and
in
jmp
and
leave
xchg
mov
fldl
popf
pop
aam
mov
dec
push
sbb
cmp
xor
stos
arpl
es
addr16
mul
push
pop
sbb
sbb
adcb
stc
add
push
dec
notb
out
sbb
std
jnp
mov
aad
les
xchg
ds
sub
push
sarb
cmp
dec
adc
dec
and
xchg
mov
inc
cmp
add
jnp
pop
adc
test
jbe
pop
fyl2xp1
mov
sub
xchg
shr
loope
jle
and
rcrb
dec
call
xchg
nop
jo
add
std
jbe
push
sub
push
fs
cmpsl
mov
out
sub
jo
out
movsb
das
fs
xlat
jne
cmc
pop
into
cld
addr16
push
jge
scas
pop
cmpsl
inc
jecxz
sub
sub
flds
cmp
mov
pop
fdivl
jg
push
aaa
jmp
mov
cmp
je
sbb
mov
jge
xor
xor
jp
es
les
sub
out
jecxz
call
xchg
mov
aaa
inc
jecxz
cmp
push
lods
jmp
push
cltd
in
les
popf
aas
pop
out
clc
jmp
in
xchg
fdivrs
jl
clc
aam
lds
cmpsb
aam
add
add
pop
popl
push
sbb
dec
popa
mov
dec
mov
sub
pop
and
mov
push
leave
push
sub
or
sbb
jmp
and
jp
lock
jo
add
xor
out
push
enter
mov
leave
lea
in
clc
xchg
push
popa
lea
adc
sub
into
mov
xor
jmp
arpl
movsb
clc
and
jne
int
pop
push
imul
mov
es
mov
cmpsl
xor
lock
ljmp
dec
clc
pop
arpl
mov
cmpsl
lret
jl
addr16
ficompl
jecxz
ljmp
clc
xlat
push
in
data16
shr
sar
xchg
or
loop
jp
push
mov
out
add
pop
push
icebp
jmp
pop
add
sar
inc
and
shrl
xchg
out
in
xchg
mov
cmp
scas
ljmp
inc
jle,pt
inc
test
jg
lahf
es
mov
ljmp
lret
sub
test
mov
out
mov
jbe
loop
bound
push
test
shlb
dec
ja
leave
nop
sbb
push
sbb
jno
dec
sub
jne
stc
add
sub
jl
and
in
add
pop
out
aam
xchg
cmp
pop
scas
das
in
lods
push
push
push
mov
inc
clc
jl
push
pop
pop
fcompl
push
xor
add
mov
jmp
pop
mov
xlat
mov
hlt
push
push
inc
outsl
jp
lahf
loopne
push
inc
mov
mov
out
sub
jno
mov
sbb
or
xchg
mov
xchg
inc
xor
push
das
sbb
mov
cmp
pop
jmp
out
sub
inc
add
jnp
xchg
or
and
inc
mov
adc
push
adc
shlb
imul
push
fsubs
pop
jbe
testb
pusha
adc
fwait
push
cmpb
in
cmp
aaa
xor
inc
push
pop
pop
xchg
dec
xchg
xor
pop
stos
push
add
add
xor
fdivrl
mov
lea
ror
mov
in
inc
mov
sbb
push
lahf
in
mov
movsl
sbbb
and
mov
push
sti
push
xchg
lret
cwtl
jl
mov
jg
sub
push
jns
cmp
test
fmul
cmp
jmp
gs
js
and
enter
dec
jbe
add
mov
movsb
push
push
dec
mov
mov
arpl
push
icebp
out
mov
test
nop
pushl
lahf
sbb
in
aam
push
fucomp
push
jns
test
pop
push
sub
sbb
push
insl
hlt
lock
push
mov
test
std
pop
xacquire
xchg
adc
jbe
or
xchg
stc
in
cmp
imul
adc
pop
out
lcall
lcall
dec
cmpsb
out
mov
cmp
test
mov
sti
int
push
shll
xor
cs
das
pop
fisubs
sub
test
lcall
nop
in
shlb
movsb
xchg
dec
test
cmp
repz
sbb
pushf
lret
loope
and
out
addr16
mov
out
ss
pop
mov
or
leave
xor
ja
movsb
pop
xchg
mov
repz
stos
push
outsb
sbb
les
push
lds
mov
imul
xorb
push
pop
cwtl
mov
push
cli
adc
dec
add
pop
clc
mov
ucomiss
inc
inc
pop
cwtl
addl
pop
mov
popa
int3
int3
imul
cmpsl
shll
in
outsb
loopne
or
jmp
jecxz
sub
cmp
adc
sarl
mov
rcr
pop
sub
fdivl
lret
filds
and
adc
aad
mov
cmpsl
pusha
stos
adc
mov
negl
sti
psubw
adc
push
mov
fwait
push
sbb
jns
leave
jp
lcall
and
mov
arpl
in
repnz
in
push
pop
clc
xor
or
or
xchg
out
fwait
cmpsb
lcall
lods
and
insl
fprem
jo
pand
xor
sbb
pop
sub
and
data16
dec
lds
jno
hlt
fldenv
jbe
cmpsb
add
inc
divps
mov
mov
int
mov
in
out
popa
ret
cmpsb
jl
sub
xor
cld
and
xor
cmpsb
scas
fdivrl
or
adc
jae
lods
std
mov
cmpsb
or
and
sbb
lods
fmul
push
lret
icebp
mov
pop
xor
xchg
mov
fstpt
sahf
mov
clc
adc
out
pop
push
lahf
notl
mov
jge
inc
and
dec
mov
pusha
or
mov
je
jmp
icebp
sti
jnp
jnp
adc
dec
lock
and
and
loope
pop
movsb
mov
je
fs
enter
mov
lods
stc
addr16
jg
sbb
testb
pop
xor
mov
sub
jnp
pushf
jg
mov
jp
xorb
jmp
out
testb
and
ja
enter
in
cltd
xchg
out
sub
xor
adc
inc
repz
jp
jge
out
aas
mov
jnp
retw
popf
rcrb
data16
cmpb
xor
cmp
add
pop
pop
clc
sub
mov
stc
out
xor
push
cmpsl
mov
inc
pop
xor
pop
xchg
pop
out
mov
iret
push
fwait
cmpsb
jnp
push
sub
mov
cmp
jmp
push
or
xchg
adc
bnd
pushf
sbb
and
leave
movsb
or
jmp
cmp
or
stos
mov
ljmp
call
shrb
sub
stc
pop
movsl
pop
into
jl
andl
lcall
jb
and
ljmp
sub
movsb
shrb
and
popa
jo
xchg
adc
cs
adc
push
cwtl
pop
sub
outsl
test
hlt
dec
imul
pop
add
sub
ficomps
jbe
cwtl
jns
cltd
insb
fcoml
lock
sub
and
cld
push
jbe
sub
in
inc
push
inc
in
sahf
lods
rorl
and
mov
sub
or
daa
int
idiv
xchg
jns
mov
cli
sbb
add
xchg
inc
mov
ljmp
pop
sub
pushf
test
and
popf
inc
pop
jle
aaa
mov
sbb
subb
cmp
into
pop
shll
push
out
and
ret
or
into
dec
stos
push
lahf
dec
push
lods
mov
push
inc
in
lea
lds
cmp
xor
cmp
jge
push
jle
insl
xchg
scas
enter
test
popa
inc
pop
cwtl
adc
mov
fistl
jecxz
dec
popa
xor
pop
in
mov
or
loopne
pushf
test
xor
mov
leave
sub
in
pop
pop
sub
imul
sarb
inc
iret
lret
lahf
leave
or
mov
jbe
inc
cmpsb
push
push
dec
rorb
pushf
decl
sbb
push
outsb
cmp
push
push
cmpsl
mov
sub
bound
or
test
mov
lcall
sub
mov
and
sti
jmp
fstps
outsb
cs
fdivl
mov
test
mov
jno
jmp
cmp
sub
scas
mov
pop
pop
outsl
push
icebp
jp
xor
aad
invd
mov
dec
jecxz
clc
pop
push
dec
aaa
mov
mov
mov
cmc
mov
pusha
fnstsw
inc
into
dec
xchg
shl
inc
pop
testl
js
adc
mov
adc
xchg
pop
add
into
ljmp
xor
loop
call
and
add
push
in
or
sbb
inc
call
xor
sbb
jb
mov
push
insl
cmpl
push
scas
fnstenv
or
mov
int3
mov
xchg
paddq
lahf
push
icebp
xor
out
dec
movsb
xorl
pop
dec
cmp
sbb
or
xor
sub
push
push
or
nop
pop
fs
repz
outsb
mov
sub
test
cs
cmp
outsl
ror
sbb
mov
pop
cmpsl
out
inc
imul
mov
pop
clc
test
adcl
loopne
push
cltd
stos
test
stc
dec
ss
dec
inc
mov
test
add
arpl
in
mov
push
js
and
jno
loopne
aad
pop
js
das
xor
arpl
mov
nop
push
dec
xchg
or
adc
jp
punpckhbw
adc
lods
lret
out
out
cs
sub
sbb
sub
sti
scas
xchg
lock
jl
clc
inc
das
xchg
outsl
out
sub
mov
pop
nop
jne
xlat
adc
lods
sbb
push
cmc
dec
cli
ret
fadd
std
pop
sub
ret
subl
mov
iret
cltd
mov
in
call
fnstsw
ds
mov
ljmp
pop
mov
push
cwtl
mov
inc
sbb
pusha
sub
andb
inc
call
lahf
shll
aas
or
jle
cltd
sbb
jb
adc
dec
popw
sub
dec
out
push
shrl
dec
jbe
bound
mov
stc
clc
mull
mov
fs
outsl
push
inc
jp
dec
jl
sti
fyl2xp1
nop
dec
cmp
or
dec
push
enter
or
pop
lock
mov
scas
negl
mov
pop
lock
sbb
push
call
mov
fnstenv
test
fstl
loop
xchg
int3
leave
push
or
and
das
call
cmpsl
pop
push
mov
gs
cmpsl
lds
mov
cmpsb
icebp
mov
aam
xchg
dec
es
inc
inc
loopne
push
and
sub
adc
xchg
push
sbb
cmp
addl
stos
jmp
cmp
or
scas
insl
int3
sbb
test
lret
std
notb
push
sub
and
scas
fwait
sarl
add
cvtpi2ps
imul
push
push
inc
add
dec
xor
sbb
fs
cmp
jmp
rdtsc
cld
sbb
iret
cmp
ds
insl
hlt
insl
fs
sbb
sub
jl
mov
loopne
hlt
call
imul
dec
pop
int
dec
mov
insb
mov
cmp
movsl
sub
add
jo
sbb
xor
adc
in
popa
in
mov
sub
xchg
sub
cmp
cmp
jg
pusha
or
call
inc
or
push
pop
shll
push
rorl
mov
pop
adc
add
iret
mov
test
cmp
orl
dec
pop
es
pop
and
mov
enter
montmul
cmpsb
cmpb
fcmovu
call
pop
xchg
dec
mov
scas
lods
mov
repnz
jl
cmpsl
pop
jns
clc
aam
push
pusha
sbb
jge
subb
movsb
adc
push
jbe
and
ja
sub
pop
lods
jle
adc
cwtl
mov
adc
mov
pop
loopne
std
push
or
sub
test
outsl
imul
std
xor
cld
or
lcall
ret
and
std
cmpsb
ss
push
pop
jp
sbb
jae
add
push
insb
imul
xor
mov
and
push
cmp
fsubs
sub
pop
enter
icebp
mov
push
outsl
xchg
inc
jns
fcmovb
mov
aaa
xchg
sub
xor
lahf
movsl
pop
xchg
test
cmp
daa
push
xor
in
mov
adc
ss
fcomps
mov
push
rorb
mov
loop
sbb
call
jae
imul
ret
cwtl
lods
clc
cmc
lea
add
and
fisttpl
nop
dec
es
sub
xchg
enter
jo
in
fwait
push
dec
push
lcall
iret
icebp
movsb
pop
or
into
pushf
lock
gs
fnstcw
lahf
test
aaa
bsf
adc
adc
test
inc
xchg
loope
cmp
and
fidivs
sbb
xor
insl
rcl
sub
sahf
loope
rcr
pop
jae
push
rolb
ltr
stos
popf
test
clc
xor
lods
mov
cli
movsb
outsl
lret
dec
push
xchg
int3
lahf
js
and
sub
xchg
and
lcall
inc
sbb
add
fnstcw
test
add
mov
testl
xchg
insb
jl
mov
sbb
mull
out
sub
pop
jmp
sub
in
push
jge
pop
dec
mov
mov
push
cmpsb
ds
or
sbb
mov
inc
xor
sbb
xchg
dec
pushf
xchg
xchg
or
jo
dec
adc
sbb
add
movsb
jp
scas
dec
js
jns,pn
mov
imul
sbb
scas
xor
add
jb
sub
push
add
std
movsl
subl
mov
sub
enter
mov
mov
inc
and
mov
das
or
js
fisttpl
or
cmpb
cmp
ror
sub
stos
xchg
xchg
test
aas
inc
sbb
imul
and
or
xchg
enter
add
subb
adc
add
rorb
jle
push
or
movsb
int
sarl
movb
dec
out
mov
cmp
sbb
add
sbb
data16
mov
je
movsb
sub
mov
ret
or
push
test
jo
ret
repnz
stc
pop
pop
cmpsb
pop
sbb
lock
xchg
mov
dec
pop
pop
jle
rclb
inc
pop
aas
pop
and
mov
mov
mov
xchg
fsubrl
sbb
mov
mov
pushf
adc
push
aam
sbb
lock
psubw
loop
pop
cmpsb
mov
idivb
aam
cs
mov
stos
loop
std
ljmp
test
mov
lcall
mov
ds
aam
sub
into
int
movsb
sub
stos
cld
cli
add
clc
js
inc
in
inc
mov
pop
xchg
stos
fwait
dec
sbbl
sub
pop
or
test
cmp
xchg
jmp
sbb
shll
cmpsb
sub
mov
or
inc
jg
mov
jo
outsb
mov
lcall
jge
bound
jne
add
sti
jne
mov
jbe
mov
loope
je
add
fxch
cltd
cmp
lods
daa
add
fsub
add
mov
jg
mov
push
push
jns
add
jge
cmpsb
xor
fdivrp
cmpsl
idivl
add
ret
scas
mov
ja
mov
fwait
pop
std
pop
jge
xchg
add
repz
jbe
push
lea
xchg
cmpsb
out
fwait
mov
fistpl
xchg
adc
mov
inc
pop
movsb
pop
decb
dec
mov
lahf
pop
lcall
cld
cmpsb
cmp
nop
push
mov
pop
cmp
call
fisttps
and
sbb
dec
leave
mov
push
xor
jge
lret
sub
inc
sar
popa
sarl
push
mov
in
pushf
sub
xor
sub
mov
jo
aas
test
mov
pop
dec
lcall
sub
cmp
es
push
push
push
mov
ja
mov
cmp
lret
jmp
pusha
sub
rcrl
cltd
scas
add
es
sub
test
mov
mov
ret
dec
push
out
enter
aad
or
int3
inc
fdivl
dec
jae
sbb
xchg
in
lds
movsb
pop
loopne
lcall
lods
xor
pop
mov
stos
es
std
adc
loope
test
loopne
enter
es
jmp
pop
mov
aam
jo
and
xchg
cmpsl
pop
pop
insb
pop
cmp
mov
cmp
bound
je
daa
icebp
test
xor
out
xchg
cwtl
cmp
mov
ret
mov
mov
hlt
xorb
jnp
outsb
outsl
cmc
les
cld
push
cmp
push
daa
adc
jne
repz
add
sti
imul
pop
ljmp
rcll
cwtl
fwait
aam
pop
push
aad
xor
dec
ja
or
out
push
ljmp
xchg
imul
in
lock
jecxz
ds
dec
test
xchg
sub
push
ret
cmpsl
test
fdivl
iret
test
xchg
sub
push
push
stos
jg
in
adc
fadd
adc
std
cmpsb
add
push
xor
cmpsb
mov
gs
repz
cmpsb
jbe
and
mov
jo
cmpsl
and
xchg
inc
mov
cwtl
pop
fmull
inc
mov
or
add
cs
lahf
andb
add
mov
sub
es
push
jecxz
out
jmp
mov
jl
push
mov
cld
xchg
sbb
mov
xchg
leave
push
sub
sub
fnstsw
ja
shlb
xchg
cmp
add
in
icebp
cld
lock
push
dec
call
xchg
ret
jmp
push
sub
pop
pop
xchg
dec
add
fcmovu
pop
rorl
push
and
addr16
sti
scas
xor
scas
mov
adc
xchg
scas
jo
lock
int3
sbb
jbe
lahf
cmpsb
bound
ret
in
jns
call
loop
negb
sub
sbb
push
lret
sbb
dec
push
and
lret
cmpb
lcall
dec
jbe
pusha
notl
jns
inc
insl
shlb
out
pop
push
inc
push
clc
dec
push
push
xchg
and
insl
sub
or
inc
cmp
in
xor
xor
dec
mov
subl
mov
pop
pop
push
dec
es
leave
cmpsb
test
call
pop
cmpsb
sbb
sub
in
stc
imul
jbe
scas
or
data16
ret
pop
sbb
lcall
lgs
mov
inc
mov
mov
dec
mov
adcl
and
mov
sub
cmp
lcall
adc
mov
mov
out
stos
add
mov
outsb
push
dec
pop
adc
mov
fs
xchg
rorb
fildll
mov
movb
sub
loopne
mov
jle
in
xchg
cs
ret
cld
add
xor
enter
sub
sub
push
mov
adcb
out
dec
add
jg
adc
add
addr16
lret
xor
jl
mov
push
lret
mov
sub
dec
sbb
lret
dec
es
pop
mov
out
sub
mov
je
shl
and
ljmp
lret
mov
push
inc
cmpsl
leave
mov
or
fstps
mov
sub
imul
pushf
mov
mov
cwtl
call
movsb
pop
es
repz
in
ficomps
test
addr16
adc
ljmp
push
push
cwtl
pop
fdivs
cmc
mov
ds
scas
xor
mov
mov
fiadds
pop
jae
stos
outsb
mov
pop
pop
dec
out
or
mov
aaa
popa
mov
incb
or
cmp
iret
std
mov
push
pop
jmp
imul
jno
pop
cmpsl
daa
xor
hlt
cli
xchg
pop
nop
je
shrl
and
stos
mov
in
sub
and
fdivl
ret
mov
sahf
ja
outsl
mov
rol
rorl
icebp
aam
cmp
mov
movsb
push
idivb
enter
add
mov
mov
sub
adc
mov
ss
jo
cld
xor
in
pushf
or
adc
test
ja
fdivrs
jns
loopne
sti
fsubrs
or
and
sub
imul
rcr
daa
cli
mov
jl
or
add
mov
inc
subl
cmpsb
sub
inc
subl
data16
push
push
xchg
mov
jne
cmpsb
stc
mov
rdmsr
out
int3
inc
dec
stc
adc
icebp
daa
xchg
test
int
sub
or
lcall
xor
mov
sub
xchg
mov
rorb
fcoms
add
test
stos
fmul
fsubrs
rcr
in
push
outsb
cltd
int3
in
sub
mov
scas
add
push
and
dec
outsb
insb
pop
into
sub
int
or
sbb
pusha
pop
inc
scas
test
cmp
stc
pop
add
push
sub
mov
iret
cmp
or
cmp
aad
mov
jo
pop
test
and
fldt
arpl
jmp
and
sub
sub
push
call
jl
xchg
sti
test
pop
movsl
loope
imul
pop
lcall
in
sbb
and
lret
in
pop
or
lods
lods
fcom
js
cltd
in
cmp
sub
insb
lods
sub
xor
jl
popf
lods
cmp
in
jecxz
sub
ljmp
mov
pop
sbb
test
cmpsl
mov
sti
jb
fimull
pop
int
lret
sbb
dec
sub
cmpsl
addr16
test
clc
pop
xlat
cwtl
push
fstpt
pop
pop
fstps
insb
and
pop
and
inc
hlt
sub
jge
test
insb
cmpsb
mov
pop
pop
pop
in
adcl
inc
lods
or
shrb
push
and
imul
lahf
sub
xchg
int3
push
sbb
cwtl
ds
fildl
dec
repz
sub
ficomps
mov
dec
or
into
mov
int3
negb
nop
es
decb
pop
dec
lret
fsubr
ffreep
test
lods
pop
sub
shrl
mov
fnop
scas
fldcw
jmp
into
shll
sub
jmp
mov
lret
stos
shrb
sub
sarb
loope
mov
pop
loopne
imul
sub
mov
mov
fsubs
dec
mov
sbb
fldcw
rcrb
fwait
mov
stc
mov
test
fcmovu
mov
iret
inc
fcmovnu
cmp
rcrl
lret
test
cmpsl
jecxz
mov
es
inc
loopne
test
stos
popf
out
or
mov
cmpsl
shl
fstpt
fbstp
sub
stos
mov
pop
stos
call
xchg
out
or
cmpsb
lahf
mov
jo
xchg
mov
mov
cmp
ljmp
lret
sub
popa
int3
cmp
jg
popf
loope
mov
loopne
call
sub
lret
lea
add
mov
fisttpl
les
aas
hlt
cmp
fistl
movsb
das
pusha
cmc
pop
jne
push
sti
and
inc
add
sahf
dec
lods
mov
xchg
test
cld
je
lret
mov
mov
inc
out
das
lret
call
cld
in
xchg
xchg
cwtl
enter
sub
cld
out
outsb
mov
iret
ficomps
sahf
mov
int
mov
or
cmpsl
mov
mov
cltd
and
ret
sub
cmp
or
adc
cmp
push
sbb
xchg
push
sub
or
lret
cmc
cmpsb
pop
das
lods
mov
jns
and
push
fistpl
lret
pushf
dec
push
das
pop
daa
sub
mov
sbb
xrelease
call
and
addr16
test
hlt
dec
sbb
sbb
sub
fcmovb
adc
xchg
subl
and
int
cmpsb
sbb
jp
fld
pop
sarb
sbb
jb
sub
mov
sub
bnd
das
mov
lcall
cli
and
leave
sub
jp
sub
clc
jecxz
dec
sub
sbb
xor
jo
lock
fwait
and
test
subl
dec
mov
out
jns
jo
movsb
fimull
jnp
mov
sub
mov
call
or
ljmp
mov
fsubs
ljmp
sub
and
mov
and
jmp
pop
mov
das
repz
lahf
sub
stos
jecxz
jge
pop
fxam
in
fcmovnu
push
unpcklps
xor
lret
in
mov
sub
sbb
outsb
jg
fstps
push
call
pop
stos
das
pop
mov
mov
pop
in
popa
xchg
mov
out
ret
pop
mov
iret
test
mov
jecxz
mov
test
in
insl
push
add
stos
scas
or
movsb
pop
cli
rcrl
jmp
insb
lahf
test
movsb
pop
xchg
shll
jecxz
mov
pop
repnz
in
and
push
gs
sarl
scas
mov
scas
insl
and
sub
leave
outsl
shrl
js
push
dec
pop
fcom
pop
std
lods
pushf
insb
in
lret
dec
or
fistl
and
mov
mov
fstpl
dec
outsb
mov
mov
pop
sti
ds
out
in
das
cwtl
arpl
pop
jg
sbb
jno
and
loopne
fdivrs
js
pop
add
jns
mov
push
fs
lahf
push
mov
pop
push
sahf
sub
out
push
out
sbb
sub
cmp
negb
cmp
ret
mov
sbb
fmull
test
sbb
les
out
ds
jge
add
add
dec
imul
sub
outsb
out
outsl
dec
lahf
sbb
test
outsb
pop
mov
imul
or
adc
fwait
sub
lahf
iret
mov
pop
mov
scas
sbb
ljmp
stos
loope
sub
pop
scas
inc
cmp
ret
mov
stos
sub
pop
jnp
data16
pushl
cmpsb
inc
push
stos
pop
jecxz
dec
sbb
shr
dec
pop
lods
enter
outsl
push
xchg
scas
cld
and
sub
lret
jle
xchg
test
add
repnz
in
iret
push
mov
sarb
jo
aas
andl
push
pop
sub
popf
lret
lea
or
imul
shrl
fisttpll
mov
fwait
jnp
lcall
or
push
xchg
add
jp
sbb
shl
xlat
shr
xchg
test
insb
lea
cld
mov
fisubrl
dec
subb
enter
xchg
push
sbb
jle
inc
mov
dec
pop
insb
fsubp
sti
fdiv
clc
popl
fdivl
lahf
inc
mov
rcrl
and
pop
or
fidivrl
jle
iret
stc
mov
push
jp
out
dec
and
in
add
imul
sbb
imull
test
push
loop
sti
or
mov
pop
aas
inc
lret
and
push
decl
add
ret
push
xchg
sahf
outsb
sub
test
inc
leave
cs
sbb
fisubl
cld
jmp
add
jle
push
outsb
inc
adc
xor
cmp
lea
jb
mov
jmp
in
mov
mov
imul
mov
sub
sub
scas
shlb
into
addr16
sbb
cmpb
loopne
cltd
popf
call
lret
pushf
outsb
clc
test
cld
sub
stos
leave
in
aad
lods
lods
mov
and
sbb
xchg
jmp
aas
mov
sub
ficomps
fisttpl
call
addr16
inc
out
pop
mov
mov
lcall
cwtl
scas
ret
sub
std
mov
sub
imul
test
or
pop
test
jecxz
sbb
fdivrl
jnp
inc
pop
push
ja
adc
fstps
in
add
push
xor
jo
push
lods
xor
fmul
adc
add
leave
pusha
ljmp
clc
int
js
xor
add
adc
fucomp
adc
or
sub
or
xor
cli
insl
mov
fnstenv
inc
sarb
cmp
fwait
dec
adc
sub
mov
scas
mov
sbb
popf
jo
data16
inc
or
jge
stc
sub
jmp
fidivl
loopne
into
ja
in
sub
fidivl
dec
lret
inc
sbb
test
test
lods
push
rorb
std
call
mov
cli
sbb
pop
stc
sub
call
popa
int3
lret
lahf
mov
and
push
out
mov
add
sub
pop
mov
or
in
lret
ficoml
adc
adc
push
rcl
jle
test
push
lods
cmp
push
cmpsl
sbb
add
dec
ja
pop
push
clc
xchg
pop
fimuls
pop
xlat
cmpsb
cs
dec
call
stc
nop
out
lea
dec
and
or
push
cmp
test
hlt
jge
testl
lahf
or
xor
adc
pop
push
mov
cmc
mov
lea
lock
cmpsl
inc
pop
cli
fimuls
inc
rclb
nop
sub
jge
push
dec
testl
jno
cvttps2pi
test
cld
cmc
and
push
mov
cmp
lock
mov
and
or
add
inc
push
imul
push
sub
push
les
lods
dec
es
pop
cmpsl
lea
arpl
xor
add
jg
jno
add
push
jmp
add
mov
push
inc
dec
cld
mov
dec
push
or
inc
inc
mov
cmpsl
loopne
and
mov
cmpl
and
int
push
stc
movsl
and
ret
sbb
jb
or
ss
jmp
jnp
or
inc
nop
xchg
jmp
sbb
xchg
ret
fdivl
cmp
sbb
mov
jbe
xchg
mov
push
lea
repnz
dec
jbe
xchg
loop
jle
loop
in
sbb
jae
shlb
jo
jbe
pop
les
int3
cmp
mov
nop
jne
loop
in
rol
enter
loopne
push
pop
sbb
aas
fists
pop
sahf
xor
mov
cmpl
push
movsl
jbe
sti
pop
test
lock
add
fmuls
adc
or
popf
mov
xchg
jl
inc
push
add
xor
add
ds
xlat
fdivrp
add
std
mov
cmpsl
out
mov
or
mov
test
push
push
xor
enter
and
das
scas
lcall
divb
imul
mov
hlt
inc
shlb
loopne,pt
mov
ja
cmpsb
mov
or
jle
pop
shlb
aaa
mov
stos
mov
push
xchg
or
int
push
out
in
clc
mov
cmp
sahf
adc
clc
out
shrl
dec
sub
inc
testb
out
sub
aas
push
mov
adc
popf
or
and
mov
or
jae
loope
jl
ret
call
and
loopne
pushf
shlb
dec
nop
pop
or
sbb
pop
push
dec
inc
popf
outsl
ljmp
hlt
sbb
sarb
lds
in
nop
outsl
lods
into
mov
xlat
mov
pop
loope
lahf
push
cmp
aam
psrad
jbe
lret
jmp
test
push
adc
movsb
cmp
push
scas
call
pop
stos
sub
fldcw
cmpsb
xchg
jo
stos
ret
mov
xor
cmp
sbb
mov
das
aad
cmpsb
test
fldcw
std
out
std
push
add
or
mov
pop
jbe
xor
in
lds
icebp
jns
and
jmp
mov
push
ret
sub
jmp
cmpsb
repnz
insl
out
shlb
xchg
dec
fxch
push
mov
sar
sub
mov
leave
scas
or
sub
pop
rcrb
mov
out
pop
xchg
jae
outsl
je
test
test
adc
lds
in
sti
lea
fsubr
sahf
fisttps
out
mov
in
and
and
xlat
sub
mov
pusha
pop
aas
int
insb
mov
sbbl
lcall
jae
aaa
aam
out
out
ljmp
daa
adc
setp
aaa
jmp
cmpsb
adcl
mov
xchg
scas
fisubs
movsl
out
cld
inc
dec
fs
sahf
sti
cmp
push
into
lds
jmp
adc
fcomps
inc
dec
out
add
ja
push
into
fwait
out
or
jnp
cmpsb
leave
loopne
jae
dec
sbb
cmpsl
jmp
dec
in
aaa
jecxz
stc
sub
pushf
inc
mov
sahf
ljmp
lods
sbb
mov
push
pop
jns
lahf
or
popa
test
cltd
loopne
loopne
mov
pop
adc
bound
xchg
out
cmp
in
add
push
xchg
sbb
hlt
cld
popa
aas
jne
lea
ja
pop
mov
mov
insb
lret
push
xchg
imul
or
inc
push
in
push
or
jbe
movsb
mov
mov
imul
movsb
lea
jbe
inc
xchg
fstps
dec
leave
test
pop
xor
iret
cmp
clc
test
xchg
or
sbb
jg
les
lahf
lods
fs
insb
out
stos
jbe
and
fs
sub
jp
inc
and
aad
outsb
les
imul
inc
add
fcom
mov
cmpsb
mov
and
cmp
lds
popf
stos
dec
sarl
add
xchg
add
das
lret
cld
ljmp
js
loope
xor
push
scas
inc
icebp
notl
es
les
sub
or
scas
push
push
ja
call
inc
push
jnp
aad
js
push
dec
sahf
jmp
pop
cmpsb
mov
outsl
jl
push
mov
adc
add
jecxz
xchg
call
aad
push
jge
je
cli
add
mov
aas
and
or
std
pop
dec
ja
sarl
ljmp
xorb
lret
ljmp
stos
pop
fcomps
mov
or
out
sbb
addr16
out
push
test
jbe
inc
inc
imulb
cld
jle
sahf
jo
cmpsl
adc
sub
sbb
xchg
mov
pop
cmp
push
mov
test
mov
adc
sahf
imul
cmpsb
cwtl
pop
sbb
test
jnp
lcall
pop
dec
pop
dec
push
dec
icebp
inc
xor
int3
enter
inc
loopne
pop
or
orl
xor
lret
mov
adc
cmpsl
scas
hlt
sahf
leave
sub
gs
mov
out
mov
pop
popf
jo
add
mov
inc
test
lret
out
rcrb
pop
test
mov
jmp
in
mov
ss
or
or
testb
jle
fnstenv
mov
sbb
sub
mov
push
cmp
mov
sbb
movsb
cmp
xor
sti
cmp
mov
test
mov
ss
sub
jbe
sub
cmpsl
and
inc
clc
cmp
add
or
sub
int3
adc
in
insl
mov
std
sub
cld
mov
push
pop
out
fdivl
dec
out
cmpsl
pop
out
jl
jbe
adc
lahf
dec
call
sbb
push
cli
ds
pop
dec
lret
inc
cwtl
stos
add
lods
jmp
pop
stos
mov
repnz
test
jnp
pushf
in
fs
mov
loop
mov
insb
jmp
cmpb
aaa
and
jmp
cmp
pusha
pop
test
adc
data16
dec
add
test
xlat
rorb
inc
push
pop
aad
cmpl
ja
lcall
sbb
in
leave
push
jp
js
test
pop
xchg
cmp
lret
int
mov
lods
jno
shl
ljmp
in
repnz
mov
ljmp
ud1
leave
xor
or
adc
js
xchg
inc
popl
sahf
les
cs
inc
pop
pop
repz
stc
or
dec
popf
pop
cmp
sub
inc
sbb
outsl
imul
add
push
cmp
pushf
push
or
xlat
cmpsb
adc
int
sub
lock
das
test
cmpsb
leave
mov
jge
xor
jl
xor
out
pop
xchg
jmp
jmp
dec
push
or
lea
fisubrl
sahf
xchg
ss
popf
rcll
test
pop
cmpsb
mov
scas
adc
out
jmp
cmp
int3
adc
or
cwtl
es
cmc
mov
lea
xchg
mov
loopne
jo
ljmp
adcb
add
push
xor
fisttpl
sbb
mov
icebp
or
ljmp
test
enter
imul
pushf
cmp
sbb
scas
out
push
aad
enter
je
jge
jl
pop
jmp
dec
mov
imul
sbb
fldcw
sub
icebp
adc
ret
xorb
cmpsl
or
adc
sub
jnp
aam
jb
sti
sub
ror
mov
loop
mov
and
inc
fs
dec
sub
test
cmc
cmp
xchg
dec
arpl
lret
in
jl
dec
mov
pop
stos
and
xchg
and
shll
push
lods
xchg
loop
mov
lods
clc
int3
mov
lods
outsl
fidivl
in
aas
sub
test
xchg
shrl
dec
int3
dec
out
jmp
lods
repz
loope
mov
addr16
sub
adc
jge
into
out
loop
push
fcmovb
lods
jmp
pop
xchg
cmpsl
movsb
fdivr
or
insl
mov
insl
fldcw
cld
mov
std
lahf
into
pop
dec
lods
push
or
mov
xor
int3
adc
ljmp
sub
iret
stc
or
mov
scas
mov
sbb
loope
inc
xchg
adc
js
and
inc
test
fimull
push
cmp
lret
xchg
pop
int
lods
insb
jecxz
repz
jg
ljmp
mov
sbb
mov
mov
imul
jmp
test
sub
movsl
imul
jns
or
xor
in
adcb
wbinvd
sarb
xchg
jo
xchg
xchg
inc
sub
jnp
pop
sbb
pop
test
xchg
jns
mov
mov
add
in
pushf
adc
mov
test
cmc
push
jb
lods
popf
enter
pusha
sub
loope
jmp
mov
scas
cs
mov
jmp
or
enter
mov
ds
adc
pop
or
std
nop
int3
add
dec
cli
std
popa
das
lret
pop
ror
xchg
xchg
cld
pop
repnz
popa
lret
shrb
mov
adc
into
pop
mov
es
ja
test
cmp
mov
jle
dec
jb
out
pushf
loope
dec
bound
push
in
iret
sbb
dec
das
sub
sti
push
fldcw
aam
pop
jae
sub
jbe
ret
jmp
adc
shll
movsb
pop
mov
into
mov
sbb
add
rol
mov
dec
dec
cld
aas
and
bound
outsl
fiaddl
lret
in
aas
sub
and
inc
cli
iret
push
add
fildl
add
adc
mov
dec
imul
mov
pushf
in
js
rolb
adc
push
sub
mov
mov
mov
dec
mov
les
clc
adc
pop
xlat
cmp
fmull
pmulhuw
jmp
push
pmuludq
icebp
inc
out
push
pop
xlat
xchg
mov
push
lret
aas
lds
mov
cwtl
scas
inc
mov
pop
popf
loope
adc
js
out
add
add
dec
pop
cmc
pop
ljmp
and
jb
cwtl
cld
mov
dec
shrl
ss
mov
cmpsb
loop
insb
sub
mov
jne
movsl
cld
adc
mov
xor
fldl
pop
out
pop
pusha
cmpb
cmp
add
inc
jb
mov
repnz
adc
loopne
jne
mov
or
out
mov
cmpsb
dec
mov
shrb
test
rolb
pop
adc
and
insl
cmpsb
and
and
dec
int3
clc
movsb
scas
andb
cmp
cmc
jb
cld
stos
fisubrs
sbb
test
dec
sub
ss
pushf
jb
push
push
mov
adc
in
mov
adc
jnp
pop
loopne
test
out
insb
adc
loopne
sti
stos
and
loope
pop
mov
pop
in
pop
leave
mov
sub
fidivrl
movsl
push
adc
stos
pop
pop
stos
sbb
sbb
mov
push
aad
dec
push
xor
aam
xor
mov
in
xchg
adc
movsb
jbe
cmpsb
out
loopne
pop
inc
xbegin
js
out
enter
out
dec
push
push
cs
es
push
loop
jmp
lret
lock
mov
pop
lret
xchg
xchg
fwait
push
jo
xor
xor
or
sub
push
sbb
jp
iret
ljmp
mov
das
push
hlt
cs
push
xchg
enter
fistpll
add
pop
pop
add
mov
js
push
sub
jo
sbb
out
xchg
mov
push
sbb
insl
mov
lahf
dec
jo
jo
cs
pop
and
lods
jo
test
int
sub
jae
loop
push
and
cmpsb
and
aad
jecxz
mov
repz
lea
jne
int3
mov
cmp
pop
dec
pusha
movsb
sub
mov
decl
movsb
pop
out
pop
dec
test
cmp
and
push
push
jne
icebp
subl
and
rcll
ror
add
add
pop
pushf
scas
adc
movsb
test
sti
xchg
and
jnp
mov
pop
inc
or
mov
clc
dec
test
dec
rol
pop
push
js
push
and
imul
and
fs
rorl
ja
lock
sbb
mov
fnstenv
add
push
cltd
sbb
mov
shr
in
mov
ljmp
adc
adc
aam
sub
jae
test
scas
sti
dec
mov
stos
std
jl
sub
add
mov
punpckhbw
inc
dec
cld
jmp
data16
loopne
ljmp
dec
add
and
push
sbb
ljmp
enter
fdivrl
push
pop
cmp
mov
sbb
or
popa
ds
icebp
cmp
nop
push
xchg
push
xchg
loopne
fwait
cs
push
stc
lds
add
mov
call
insb
pop
mov
mov
cld
lahf
cli
dec
movsb
mov
popa
dec
clc
xchg
pop
jo
imull
mov
lods
icebp
inc
aas
aaa
repnz
out
fstpl
das
adcb
jg
jp
mov
mov
popf
mov
add
out
in
jo
pop
sub
orl
jmp
lods
inc
pop
push
ljmp
shlb
int
push
push
int3
mov
inc
pushf
jecxz
xchg
mov
jle
and
inc
movsb
sub
test
push
shlb
imul
popf
les
mov
mov
cmp
in
mov
ds
mov
sbb
mov
cmpsl
jo
jae
mul
xor
movl
jl
repnz
xor
imul
faddl
out
enter
ficoms
lods
popf
cmp
movsl
addr16
dec
dec
daa
out
test
out
nop
jne
jnp
int
cmp
cltd
leave
dec
fidivs
sbb
dec
mov
dec
add
loop
sbb
push
popf
cmpsl
fsts
mov
inc
sub
xchg
push
adc
ss
jb
data16
pop
arpl
fndisi(8087
fisubrs
mov
sub
and
ljmp
jno
sarl
sub
cmp
lds
lds
popf
and
pushf
and
inc
out
sub
mov
jmp
rorb
xchg
push
mov
mov
fs
dec
stos
xor
pop
scas
pop
jmpw
push
rcrb
pop
add
adc
mov
jmp
push
inc
cmpsb
sub
xor
mov
sub
sub
inc
sub
les
mov
jmpw
and
mov
jmp
and
add
and
ret
sbb
and
iret
mov
inc
rolb
in
std
xor
mov
loopne
scas
mov
and
mov
dec
stos
and
sbb
and
and
or
rclb
add
or
mov
out
and
and
xor
loop
jecxz
push
dec
cli
scas
in
pop
in
add
nop
sub
les
mov
push
jl
js
movsb
cmpsl
nop
lds
mov
fdivrs
sbb
lods
push
sti
aaa
movsb
mov
int3
adc
out
cmp
add
push
sub
fcoml
and
std
push
rcr
outsl
mov
fcmovnu
scas
or
pop
cmpsb
icebp
lahf
inc
pop
fildll
and
dec
adc
mov
icebp
out
jp
add
and
gs
out
cmp
cmp
test
repnz
add
pop
sbb
sbb
mov
ret
insb
bswap
mov
pushf
outsl
dec
inc
shlb
pushf
ja
nop
fldl
lcall
mov
pop
sbb
int3
repnz
dec
push
cmp
cmpsb
cli
adc
fsubr
jp
adc
jne
mov
adc
inc
aam
cmpsb
push
jecxz
mov
mov
add
mov
push
jg
scas
push
gs
mov
sub
pop
rsm
int3
addr16
lods
imul
or
mov
int
sub
addl
xor
fnstsw
pop
xor
mov
cmpsb
mov
cwtl
xor
call
je
leave
add
pop
outsb
cmp
movsb
ss
aaa
or
cmc
push
inc
lock
xchg
adc
int
stos
lret
js
out
stos
jbe
in
orb
add
xchg
sub
ljmp
push
xchg
jae
scas
xor
outsl
mov
int
aaa
stc
pop
in
popa
cmp
sbb
stos
jno
ss
mov
mov
es
sbb
cmp
fsubl
call
inc
jl
mov
push
sub
sbb
movsb
subps
cmpsl
in
iret
cmp
fistps
test
lahf
lea
xor
sub
adc
cmp
out
not
add
xchg
xchg
pop
out
lret
inc
dec
stos
movsl
ret
insl
lahf
std
mov
fstps
lahf
sahf
sarb
int3
push
cmp
xchg
lock
clc
cmpsl
mov
stc
push
push
inc
xchg
fisubrs
cmpsb
sarl
ret
push
nop
and
dec
xor
pop
pop
jbe
xchg
lods
repnz
push
pop
xor
sub
test
fmul
pop
jmp
pop
sub
xchg
mov
std
mov
cmpsb
adc
cmp
mov
orb
movsb
out
dec
xchg
rcll
xlat
cmpsl
and
lea
lods
das
mov
and
or
gs
test
xchg
lahf
and
xor
aad
jnp
movl
add
sub
xor
out
sbb
xor
sub
mov
jno
jo
and
rcll
fisttpll
jecxz
jns
push
test
mov
sub
cwtl
fs
mov
dec
mov
jno
xlat
push
sbb
or
lods
bound
push
shll
sbb
repnz
sub
sahf
popa
out
mov
sbb
add
mov
adc
push
or
in
and
movsl
into
push
popf
stos
popa
push
mov
dec
es
scas
jp
not
mov
pop
xchg
mov
test
jmp
xlat
sub
xor
mov
or
sub
hlt
or
cli
jl
and
pop
sbb
cmp
or
cmp
aad
fisttpl
outsb
psubd
sarl
mov
int
adc
lahf
std
frstor
movsl
aam
sub
fldl
cmp
push
into
out
jo
andb
inc
ja
adc
movb
outsb
or
int
jge
sbb
lods
mov
in
fstps
fsubl
adc
ljmp
adc
iret
out
push
pop
call
push
adc
aad
pop
pop
inc
push
insb
mov
mov
jae
lods
in
mov
push
lret
leave
inc
cli
out
ror
mov
and
xchg
nop
aad
nop
or
pop
mov
test
xor
pop
and
nop
bound
leave
dec
ret
cld
call
jp
fsts
imul
leave
push
nop
fisubl
lret
lock
das
mov
sub
pop
inc
jo
repz
addr16
sub
sti
jne
jnp
dec
mov
sbb
jo
fisttpll
out
das
repz
mov
push
in
in
jmp
sbb
cmp
xor
sub
sbb
mov
out
adc
out
in
xchg
mov
sbb
push
jbe
in
icebp
dec
add
sub
shrl
adc
adc
fwait
pop
mov
cmp
mov
imul
je
idivl
xchg
addl
fcomps
pop
fyl2xp1
jecxz
cmp
cmp
mov
mov
aas
leave
mov
cmp
fnstsw
pop
lahf
out
fdivr
lds
bound
imul
loope
lock
pusha
shlb
mov
and
cmp
mov
rcrb
in
adc
dec
test
mov
inc
mov
rcl
sub
arpl
out
mov
arpl
and
hlt
fnsave
adc
mov
xlat
xchg
or
icebp
insl
lock
out
ja
pop
hlt
xor
aaa
dec
mov
leave
cmpsb
mov
sub
cmp
nop
rol
pop
enter
dec
cmp
lods
xor
lock
cmp
push
xchg
leave
movsl
mov
jmp
dec
sub
mov
mov
inc
insb
mov
and
and
pop
movsl
in
test
lcall
decb
enter
fld1
or
sub
and
push
fsub
push
jle
inc
mov
and
add
add
test
imul
repnz
mov
repnz
push
mov
pop
fstp
or
jecxz
add
mov
xchg
call
movsl
aam
aad
mov
jbe
popf
sbb
lret
cmpsb
mov
dec
pop
sub
out
scas
lret
shrl
lahf
dec
pop
rcl
insb
mov
std
lcall
pop
out
adc
aaa
inc
add
aad
jo
inc
cmpsl
pushf
jne
ss
pushf
js
test
mov
mov
push
push
fadds
pop
inc
fidivrs
sub
iret
fsubl
gs
dec
mov
sti
or
mov
bound
sub
mov
sti
aas
bound
add
mov
jp
mov
lods
pusha
cltd
mov
das
push
sub
pushf
inc
mov
pop
adc
data16
gs
cmp
sbbl
test
div
int3
cmpsl
sub
jle
jp
addr16
adc
cwtl
lret
push
in
jl
es
daa
jo
divl
mov
sub
aas
dec
sbb
mov
lods
cmp
jge,pn
xor
sub
insb
psubb
add
mov
fisubl
sub
stc
stos
pop
jp
jmp
lret
dec
lods
aas
adc
push
rcl
or
mov
push
pop
sbb
fiaddl
mov
dec
repz
popa
cld
cmp
addr16
cmc
xlat
scas
int3
push
sub
sub
mov
shll
push
mov
push
sub
or
push
imulb
lea
das
or
pop
hlt
mov
inc
aam
insb
in
shll
dec
movsb
push
adc
jmp
call
sub
or
push
xlat
xchg
dec
rcr
xchg
aaa
push
dec
add
add
xchg
push
add
inc
xor
loop
mov
jle
push
ljmp
dec
faddl
test
lods
cmpsb
test
aaa
inc
dec
pcmpeqd
and
push
sets
mov
es
mov
loope
add
pop
fsubrl
and
sbb
loop
sub
lock
out
cmpsb
testb
imul
loop
int3
mov
xor
ja
mov
push
scas
jmp
xor
lret
mov
and
addr16
jl
inc
je
sahf
pushf
sub
sub
or
dec
and
pop
dec
jmp
pop
jmp
mov
sub
fcomps
mov
xchg
and
push
fadds
jmp
ss
aad
mov
lcall
es
lods
sub
sbb
imull
pop
mov
gs
xlat
dec
push
loop
jmp
imul
dec
jo
cmpsb
test
push
lods
pusha
stos
add
adc
loop
ja
and
or
test
mov
pop
in
lods
stos
lret
mov
push
ds
leave
loop
lret
mov
xchg
sbbb
or
push
mov
call
cmpsb
aaa
or
std
cmc
es
jmp
cmpsb
mov
jg
ljmp
insb
or
faddl
pop
inc
repnz
push
mov
das
pop
and
jae
test
test
push
mov
push
push
mov
mov
lahf
sbb
fadd
ljmp
out
stos
cmpsb
mov
fimull
sub
add
movsl
inc
jns
stos
mov
sub
mov
addr16
data16
add
psubusb
or
mov
lahf
jbe
inc
mov
xor
out
lret
out
dec
xor
sub
addr16
movl
sub
mull
jbe
push
pop
stc
xchg
push
adc
fistl
pop
arpl
jl
les
pop
icebp
xchg
outsl
xor
popa
pop
inc
pop
or
or
call
lret
pop
jmp
loope
add
mov
fnstenv
mov
movsb
pop
push
pop
lods
fcomps
cltd
mov
mov
aad
jl
jp
dec
mov
sbb
mov
mov
cltd
and
push
jle
adc
dec
std
jb
out
jmp
pop
stos
sbb
iret
jl
mov
pop
mov
pop
cmpsb
test
cmpl
mov
jge
int
push
cmpsb
repz
repz
mov
stc
dec
sub
repz
inc
dec
cmpsl
rep
jns
cmpsb
cmp
outsl
les
push
test
scas
or
aaa
mov
loope
push
outsb
ficompl
sbb
and
lcall
jnp
mov
mov
mov
cmp
int
mov
shrb
loop
push
jnp
pop
add
mov
lret
in
ja
cmpsb
sub
movsl
imul
fisubrs
jp
popf
add
push
sti
std
fstps
cmpsb
stos
je
out
out
gs
dec
jae
push
xchg
sub
cmp
shll
cmpsl
cmp
mov
call
xchg
mov
outsl
cmp
outsb
stos
pop
mov
aad
jg
lock
push
pop
cmp
subl
hlt
fstpl
gs
insl
push
out
dec
lods
cmp
dec
jge
jne
ret
fisubl
mov
imul
push
jle
jnp
and
dec
jmp
mov
jl
sub
or
dec
sbb
sub
pop
dec
dec
movsb
cmp
das
and
or
lds
test
repnz
push
out
mov
xor
sti
js
dec
push
add
in
pop
jbe
test
fcompl
enter
jg
mov
flds
cld
ret
xor
inc
imul
aad
jb
jmp
ret
aad
icebp
push
inc
cs
jbe
xchg
jg
cld
and
leave
dec
mov
fbstp
in
jp
mov
push
test
sub
outsb
in
xchg
jl
clc
or
idivb
call
cmp
cld
xchg
mov
or
dec
mulb
inc
das
repnz
dec
dec
push
sbb
cli
les
jmp
mov
les
mov
data16
sti
dec
and
out
sbb
xor
cmpsb
pcmpgtd
sub
lods
sub
dec
add
and
shl
aas
dec
pop
push
mov
ret
lods
push
mov
out
add
add
flds
xor
test
adc
inc
scas
pop
and
in
es
mull
aas
imul
fnstcw
lds
and
imul
inc
and
dec
xchg
adc
popa
dec
mov
jnp
testl
mov
adc
xor
mov
loopne
sbb
jmp
insb
mov
fnstsw
sub
jo
mov
jecxz
retw
inc
jge
jl
and
mov
cwtl
int3
jnp
adc
mov
cs
mov
mov
popf
xchg
push
sub
imul
mov
cmpsb
out
cs
jmp
scas
std
or
cltd
jnp
sbb
ror
mov
jae
mov
push
lea
ja
out
dec
xchg
out
xor
add
fdivs
mov
cmp
das
jnp
test
and
lods
repz
xor
pop
rcr
subb
inc
cmp
out
dec
adc
popa
mov
adc
notw
es
mov
or
pushf
jo
or
scas
leave
lds
and
lock
inc
orl
sarl
loope
push
jmp
jecxz
pop
sub
test
mov
les
and
jmp
fwait
fsubl
fxch
mov
add
repz
cmp
int3
in
cmpsb
rorl
cli
cmpsb
lods
jle
sarb
or
aam
nop
or
sbb
andl
jg
push
loopne
dec
mov
or
cmpl
jl
pop
jg
mov
jmp
and
sti
mov
pop
pop
addr16
cmp
div
in
mov
imul
aaa
loop
fabs
pop
scas
idivl
jg
cmp
pop
xor
lock
rcl
and
xor
mov
call
push
outsb
lret
fdivp
insb
call
push
int
pop
mov
icebp
ret
push
cmpsb
mov
pop
cmp
lock
sbb
push
fsubr
sub
fsubrs
add
lcall
bound
enter
fidivrs
mov
cwtl
mov
dec
lods
jb
addr16
data16
jl
and
adc
in
imul
cld
addl
add
pop
ret
and
sub
dec
push
pusha
out
int
push
in
bound
subl
leave
pop
cmc
mov
fidivrl
jg
int
mov
ficompl
and
lahf
mov
mov
ret
and
add
out
int3
sub
test
adc
add
dec
es
pop
dec
jl
imulb
leave
lock
sahf
xor
jecxz
imul
jb
clc
nop
cmpsb
jg
push
sub
repz
sub
call
fistl
and
inc
inc
js
cmp
jbe
and
dec
clc
lods
outsl
pop
and
call
cmc
cmp
sbb
dec
cltd
hlt
push
aam
int3
lock
ljmp
js
lock
enter
or
imul
lcall
outsb
icebp
ljmp
jl
pop
push
std
cmp
test
leave
enter
add
add
mov
lret
mov
in
fmuls
mov
pop
lods
cmp
lahf
je
xchg
dec
call
inc
lahf
sbb
addl
nop
std
xchg
imul
mov
pop
push
cmpsl
imul
imul
addr16
mov
lods
jae
movsb
repnz
mov
leave
mov
nop
push
adc
cmp
jbe,pn
push
push
mov
dec
mov
lods
cmp
pop
ljmp
cmc
xor
mov
ret
hlt
fidivrs
dec
loopne
add
lods
in
imul
rcl
push
mov
mov
lret
scas
jmp
pop
lahf
ja
dec
pop
add
mov
and
jbe
push
lcall
test
jp
xchg
mov
mov
cmc
mov
test
fldt
cmpsb
je
ja
sub
into
adc
and
das
stos
push
insl
clc
mov
lret
xchg
xchg
push
lahf
jg
pusha
stos
cli
jge
mov
sub
hlt
sub
out
sahf
jp
mov
mov
cmp
test
pop
mov
mov
subl
sub
pushf
fisttpl
fmull
add
data16
imul
enter
addl
imul
add
loop
add
lock
arpl
cmp
sbb
inc
call
and
out
jmp
mov
call
cmpsb
mov
stos
out
nop
and
push
cmpl
out
das
ljmp
lds
into
mov
loop
push
nop
add
insb
and
mov
pop
imul
mov
xchg
movsb
int3
dec
decl
std
push
dec
xor
add
or
xlat
mov
cs
mov
sub
testl
mov
fsubrl
mov
push
lods
push
sub
dec
mov
cmp
cmpsb
out
lahf
fmul
xchg
test
ljmp
cld
push
dec
ja
jl
test
pop
xchg
add
loop
push
stos
sbb
cwtl
scas
sub
cmpsb
mov
hlt
enter
repnz
add
mov
add
fisubrl
dec
out
imul
pop
in
dec
lret
jo
jnp
dec
sub
cmpsb
orl
push
fcompl
sub
adc
push
ds
jmp
inc
xor
clc
mov
sub
das
xor
xchg
hlt
cmpsb
mov
hlt
xchg
and
jmp
das
mov
cmpsl
scas
cmp
stc
mov
lods
cmpsb
or
int
test
ja
xchg
cmpsb
xlat
dec
stos
out
push
jnp
push
mov
daa
nop
xor
mov
sbb
mov
std
pop
sub
aaa
sub
dec
cmp
cmpl
pushf
mov
leave
pop
data16
cmp
jbe
pop
and
mov
call
adc
inc
call
scas
fs
aaa
mov
lahf
movsb
pusha
cmpsb
js
sbbl
jmp
out
pop
std
push
jbe
movsb
jo
adc
loop
outsl
dec
cmp
lahf
mov
pop
sbb
outsb
imul
xchg
xchg
dec
mov
xchg
xchg
cwtl
adc
mov
and
mov
lret
cld
in
in
pop
stos
bnd
jno
sub
ds
addr16
push
dec
mov
or
mov
fiaddl
imul
aam
leave
adc
pushf
rolb
iret
popa
ss
or
pusha
cmpl
push
cmpsb
push
in
cmp
xor
mov
jl
adc
pushf
mov
mov
fmull
loope
lcall
lock
decb
or
cmp
mov
aam
call
dec
push
add
loope
pop
mov
mov
xchg
rorb
mov
aaa
adc
cmc
rcrb
xchg
bound
in
out
fidivl
loope
or
jbe
push
jecxz
hlt
scas
jnp
xchg
add
xor
cld
or
cmpsb
cmp
fbstp
or
adc
pop
popf
jecxz
dec
mov
push
emms
adc
or
mov
dec
movsl
add
xchg
xor
out
sti
fbstp
pop
xor
leave
push
xor
mov
cmp
inc
and
mov
repz
pop
cltd
stc
ljmp
sbb
mov
test
loopne
rcll
in
icebp
mov
lret
mov
ret
jnp
hlt
jge
xor
xchg
pop
les
ret
fdivl
jbe
xchg
pop
popa
sub
mov
pop
loop
pop
add
fsubrs
je
pop
xchg
inc
test
jge
mov
mov
pop
cmp
inc
sub
outsl
pop
push
mov
pop
outsl
std
jp
ficompl
nop
jmp
fistl
inc
lock
cli
sub
or
mov
call
movsb
mov
sub
or
push
sbb
mov
xchg
jnp
fstl
and
outsb
sbb
loopne
faddl
pushf
sbb
xchg
lcall
cltd
imul
mov
in
in
jmp
fidivrl
inc
stos
fwait
or
insb
lcall
leave
popf
repz
sub
fyl2x
pop
xchg
jmp
bound
dec
jo
mov
ret
xchg
cwtl
les
fstpt
sub
jmp
lcall
push
mov
and
lock
mov
or
fldt
dec
lret
lea
push
arpl
lock
fildll
push
sbb
call
aad
mov
cld
fs
fidivs
pushf
sti
dec
js
cmp
jnp
mov
mov
clc
mov
fisubl
lock
insl
mov
int
ret
lock
stos
mov
push
syscall
pusha
push
and
cwtl
clc
xchg
fs
sbb
sar
and
aam
out
xabort
cmc
sahf
mov
pop
aam
cwtl
js
ret
es
in
jae
loopne
in
stc
or
cmp
test
inc
std
fisttpl
pop
fimuls
mov
pop
mov
movsb
jmp
repnz
dec
fdivs
out
dec
jmp
mov
mov
xchg
iret
and
and
push
sbb
add
sub
scas
stos
dec
xchg
dec
jp
dec
mov
imul
cmpsl
mov
inc
out
out
push
add
int3
test
out
nop
and
iret
pop
in
push
inc
js
imul
ljmp
into
push
nop
shrl
stos
test
mov
test
mov
fisttps
sbb
push
mov
add
add
xor
fdivl
mov
fists
push
sar
inc
fistpl
fisttps
cmp
scas
and
push
pop
mov
mov
enter
jb
mov
movsb
fldcw
push
mov
sti
ljmp
scas
call
call
xchg
pop
sub
jne
fcomp
jmp
test
ret
dec
cld
es
out
or
cmpsb
out
outsl
or
scas
cmp
cmpsb
loopne
ja
cmp
dec
in
sbb
daa
bsf
mov
rolb
mov
inc
sbb
dec
lahf
ss
or
es
scas
movsb
mov
loopne
jb
arpl
test
or
xchg
inc
push
adc
pop
lcall
adc
pop
mov
outsb
ret
ficoml
xor
lcall
cmpsl
enter
mov
popa
cmpsb
out
out
imul
mov
sub
dec
inc
sub
push
inc
test
rorb
ficoml
adc
xor
pop
test
adc
cmp
mov
ss
inc
mov
or
xchg
fcmovnu
dec
test
cli
ja
mov
addr16
inc
into
or
scas
and
into
loope
xchg
ror
dec
push
pop
sub
into
cli
jl
mov
lods
mov
dec
jecxz
mov
sub
cmp
test
inc
mov
mov
scas
pop
lods
cmp
jo
inc
mov
mov
and
ljmp
insl
sub
sub
ficomps
push
jg
arpl
push
lods
dec
dec
rcll
jo
call
fisttpl
pop
sbb
divl
out
mov
cltd
cmpsl
imul
ja
mov
imul
push
sub
test
sub
jg
movsl
and
and
jbe
arpl
xor
and
lock
scas
out
clc
or
outsb
push
xor
or
push
sbb
xor
lock
push
and
xor
fistl
jle
insb
push
inc
into
cmp
xor
pop
adc
mov
enter
lahf
aad
sbb
ret
loopne
outsb
aas
mov
adcl
lahf
dec
cmc
mov
inc
xchg
cltd
test
mov
sbb
lea
cmp
lahf
sbb
out
mov
ss
out
sbbb
fistl
movsb
outsb
inc
jl
fstl
jmp
leave
adc
jae
ja
test
dec
push
and
stos
icebp
jns
mov
sbb
lock
stc
test
insb
cwtl
push
xchg
and
cld
scas
out
lods
sbb
stc
call
lds
bnd
dec
outsb
sbb
int
xchg
xchg
xchg
mov
popa
inc
jo
lahf
in
push
push
pushf
jo
or
sub
xor
imul
cmpsb
mov
adc
cmp
cltd
out
fcompl
flds
jecxz
out
fsub
push
stos
sbb
dec
inc
lcall
shll
pop
fstpt
call
nop
adc
scas
dec
out
test
inc
jle
outsb
and
lahf
sar
cmpsl
enter
inc
stc
gs
pop
cmp
pop
ljmp
sub
sbb
lret
imul
and
out
cmp
sbb
cli
cmpsl
loop
pop
push
pop
cmp
je
and
lret
dec
mov
out
mov
xchg
jle
inc
call
ds
mov
push
inc
dec
fstl
jns
loope
cmp
jns
xchg
inc
dec
cld
cmp
xlat
outsl
jae,pn
inc
loopne
out
int3
mov
add
xchg
jbe
in
cld
sub
nop
adc
data16
stc
out
mov
or
jle
insl
xor
push
test
inc
mov
inc
mov
xor
pop
add
pop
je
aaa
les
inc
outsl
insl
loopne
or
sahf
or
push
leave
lahf
xchg
ljmp
push
sahf
dec
mov
fcomps
sub
inc
out
cmc
fs
mov
jae
imul
sbb
imul
jmp
shl
lock
out
dec
xlat
out
cmpsb
sub
dec
int
add
scas
mov
in
rorl
xlat
cmp
xchg
pop
sub
ds
sahf
das
dec
int
rep
rol
jmp
sbb
paddb
xor
cmpsb
popf
movsb
into
ja
lahf
lret
lret
jno
lret
fcomps
insb
cmp
fwait
rcr
add
fsubl
outsl
or
sub
cs
loopne
add
aas
xlat
xor
push
in
jnp
test
push
in
stc
inc
jbe
lock
jmp
loop
or
adc
add
lods
addr16
jne
sub
sub
jb
and
sub
push
ret
mov
sub
cwtl
inc
fs
ljmp
std
cmpsb
xor
inc
stos
mov
or
mov
scas
out
insb
or
sbb
cmpsl
ja
sahf
out
das
and
add
push
push
add
push
movsb
mov
jnp
test
out
out
aad
inc
jmp
dec
cmpsb
cmp
push
stc
jbe
or
out
mov
mov
aaa
out
lods
dec
pop
or
mov
std
and
lods
jecxz
add
pusha
adc
or
test
jmp
and
lock
and
jo
xchg
repz
pushf
cmc
push
adc
int3
lret
jnp
pop
idiv
sbb
jge
cwtl
pop
xchg
cmp
dec
xor
sub
xor
or
testb
mov
mov
out
insb
or
nop
and
insb
int3
or
adc
outsb
scas
mov
fcmovbe
or
mov
mov
mov
lcall
or
xor
std
mov
dec
push
add
ja
cmc
ja
arpl
stos
xor
stos
sub
cltd
xchg
cmpsb
into
lahf
sub
mov
push
in
fcomi
add
pop
sub
gs
dec
sub
jl
push
pop
sbb
lea
dec
ds
aam
dec
fstpl
adc
cmc
std
lret
jge
mov
dec
insb
jl
mov
pop
test
lahf
jno
jp
cmp
sub
mov
ret
fidivrl
shrd
jbe
shl
adc
mov
dec
cmp
je
and
jo
push
and
fdiv
xchg
push
outsl
dec
xchg
repz
rcrl
xor
lods
xchg
pop
mov
imul
ret
pop
mov
or
pop
fbld
sbb
add
and
lcall
cmp
cli
fldl
cmc
pop
scas
add
enter
popf
sti
fucompp
pop
out
rcrb
aad
sbb
and
sub
lods
pop
sub
arpl
in
leave
jl
stos
or
pop
cltd
jmp
dec
in
in
push
inc
xlat
push
pop
jno,pt
loopne
jle
rclb
dec
jmp
mov
push
add
xor
pop
sbb
cs
jae
repnz
js
dec
dec
add
loop
testl
pushf
js
or
mov
jecxz
mov
jmp
fidivl
int3
sub
mov
cmp
in
movsb
inc
movsl
inc
jne
imul
movsl
jnp
cmp
push
sub
push
dec
push
add
cwtl
lahf
mov
arpl
jmp
cmp
cmp
jp
in
icebp
shl
stc
jle
jnp
xchg
xor
fwait
scas
movsl
cmp
in
sub
in
xchg
push
push
mov
dec
jo
scas
jge
clc
inc
dec
cwtl
lea
movsb
pop
push
sub
mov
push
repnz
insb
ret
jl
out
loope
add
call
adc
sbb
add
cmpsl
test
leave
lret
inc
cs
jnp
jmp
or
mov
ja
inc
mov
pop
int
fldt
aaa
fcomps
push
movsl
lahf
or
clc
xchg
out
loopne
and
or
je
dec
ja
das
out
dec
lods
cmp
push
js
push
add
stos
xchg
pop
les
mov
cwtl
mov
sub
arpl
jae
dec
jmp
pop
jo
rcr
hlt
push
push
or
std
adc
data16
xor
cmp
fucomip
mov
cli
push
xchg
mov
jo
push
xchg
mov
pop
daa
in
mov
fisubl
stos
lds
ret
push
nop
pop
inc
jmp
shl
inc
dec
fcoml
out
nop
and
xchg
add
sub
sti
cs
out
push
add
test
nop
shrl
lods
lods
jmp
insb
loop
push
int3
sub
out
pushf
or
fstpl
pop
mov
inc
add
pop
sbb
shrl
cli
jae
sbb
test
lcall
sub
stos
or
cli
sbb
sbb
test
mov
dec
adc
xor
addr16
mov
or
outsl
stos
xor
pop
jo
movsb
xchg
test
stos
arpl
push
pusha
fsubl
push
sbb
dec
mov
pop
push
add
mov
jbe
stos
mov
jbe
push
lea
in
inc
js
dec
cmovle
nop
test
and
or
es
jnp
mov
pusha
jns
jmp
cs
loope
mov
jo
aaa
stos
cmp
cmp
push
addr16
jl
mov
out
pop
add
xchg
cli
test
xchg
mov
in
scas
push
jecxz
into
mov
add
mov
sub
cmpsl
xchg
cmpsl
cmpsl
bound
jnp
jb
mov
in
aaa
mov
scas
jl
inc
push
test
pop
sub
das
mov
cmp
add
mov
sub
adc
jns
xor
shl
lahf
imul
xor
jmp
cmpsl
pop
adc
cmpsb
lret
sub
pop
ljmp
movsb
cmpsb
pushf
adc
mov
xchg
sub
lahf
js
jae
sbb
and
xor
fmuls
mov
repz
movsl
cmp
shlb
xchg
jmp
pusha
lahf
push
pop
jbe
cmpsl
add
cmc
insl
lea
cs
pop
push
mov
sbb
dec
push
adc
adc
adc
jp
dec
dec
clc
popa
int3
pop
js
cmpsb
out
in
jecxz
cli
subb
sbb
mov
mov
jl
loopne
js
fdivrp
xchg
pushf
fnstenv
repz
imul
adc
mov
std
lea
pop
lret
loopne
pop
xchg
sub
mov
fldt
push
mov
push
lahf
out
mov
mov
shrb
leave
sarb
ja
dec
and
pop
mov
out
cmpsl
aam
xor
push
pop
stos
int
inc
sub
data16
in
mov
pop
adc
insl
bound
movsb
lods
mov
in
sti
or
sbb
dec
enter
loope
xor
out
jmp
out
mov
sbbb
shlb
inc
or
arpl
inc
mov
cmc
fucompp
and
dec
aam
dec
out
add
nop
dec
shrl
jge
insl
jbe
inc
sarl
hlt
imul
mulb
int3
pop
addl
ja
and
hlt
mov
dec
aam
xlat
movsb
jmp
stos
in
cmc
jo
fisubrl
dec
dec
sbb
push
jo
push
xchg
ret
sarl
addr16
in
cmp
ss
rorb
out
ja
mov
xchg
jp
js
jnp
push
or
mov
mov
mov
cld
pop
dec
test
xor
pop
leave
cmp
inc
outsl
cmc
je
xlat
in
push
mov
cmpsl
test
insl
dec
popl
out
subb
or
imul
inc
repnz
mov
xor
push
pop
sub
push
mov
repz
test
test
sahf
test
jge
les
aas
xchg
insl
jbe
adc
stos
mov
jp
repz
fs
fildl
in
push
iret
in
cmc
sub
dec
mov
xor
ret
fdivp
test
lret
mov
or
dec
das
int3
cmp
sbb
push
adc
movsb
cmovge
pop
cmp
cmc
jp
sub
call
push
dec
leave
xchg
addr16
sub
or
jmp
pushf
xchg
mov
xchg
jecxz
mov
cmpsb
mov
shll
and
jl
sub
jns
sbb
lcall
inc
add
push
pop
jnp
outsl
insl
ljmp
or
mov
mov
addb
dec
mov
and
push
add
lcall
or
lds
mov
fisubrs
dec
cmpsb
cmp
lods
shrl
test
and
mov
xchg
aam
pop
movsb
fsubr
pop
nop
pop
lcall
mov
jnp
outsl
mov
test
test
adc
mov
mov
lock
jecxz
push
or
lea
jo
scas
lret
lods
in
ljmp
ljmp
enter
mov
in
mov
jmp
lcall
pop
push
cltd
js
rorl
xor
in
sub
dec
out
in
xchg
lock
push
fdivrs
adc
lcall
clc
hlt
ds
je
nop
loop
add
cmp
out
sbb
mov
sub
xchg
arpl
gs
or
cli
enter
imul
mov
mov
ret
mov
dec
pop
out
insb
cmp
stc
and
cltd
dec
dec
insb
cmp
dec
cs
addr16
jne
xchg
leave
aad
jl
mov
test
movsl
pop
inc
js
ret
xor
pop
cmp
mov
fnstenv
lods
pop
js
ss
dec
movsb
or
sbb
je
cld
pop
rclb
aam
pop
shl
cmp
js
dec
dec
ds
into
ds
sbb
xor
mov
insb
mov
out
lcall
loope
sbb
in
jae
sub
enter
test
fimull
cmp
jbe
pop
rcl
mov
add
sub
stos
clc
add
xchg
cld
in
adc
push
xchg
dec
nop
in
jne
dec
dec
pop
aad
mov
pop
nop
rcl
xor
lods
push
pop
jge
cli
jmp
sub
pop
popf
sbb
pop
push
add
cmp
dec
xor
lods
pushf
lods
mov
nop
pop
cmp
fnsave
sbb
cmc
int3
cmp
cmpsb
and
pop
cmc
bound
cli
test
jecxz
cli
pop
mov
or
loop
std
popa
sbb
dec
push
mov
jl
xchg
jbe
pop
pushw
push
jns
pop
adc
mov
cwtl
into
call
lret
scas
jns
push
sub
cs
test
test
enter
imul
mov
cli
pop
stos
sub
lds
lcall
sbb
in
out
pop
pop
jmp
jp
lds
mov
mov
imul
lods
cmp
test
jg
outsw
adc
push
shrl
popf
cltd
and
cmp
rsm
dec
push
decb
cmpsb
jmp
and
xor
wbinvd
lahf
pusha
xor
out
outsb
cmpsl
and
xor
jb
mov
or
ficoml
cmp
test
aas
js
fucomi
pop
out
ret
aad
imul
addr16
movsb
lods
nop
xchg
sbb
stc
mov
fsts
sahf
stc
andb
les
or
xor
jl
scas
or
mov
sub
or
mov
push
and
jns
add
call
aas
leave
dec
ljmp
add
nop
cwtl
test
test
jmp
xchg
cmp
popl
insl
ds
pop
add
pop
sysexit
adc
push
inc
jp
mov
jmp
outsb
std
out
sub
jg
mov
jnp
jmp
lret
sub
ja
ds
jo
stc
addr16
push
call
jp
cmpsl
xchg
out
or
push
ret
push
icebp
sbb
stc
out
inc
lret
pop
fldl
in
shll
stc
in
stos
test
std
dec
inc
mov
cmp
rorb
jmp
adc
dec
xchg
sbb
cmp
iret
jge
test
or
or
pushf
cld
sti
dec
push
pop
dec
scas
daa
orb
dec
lcall
adc
dec
cli
xchg
add
pop
ret
xor
jp
dec
and
ret
push
dec
fisubrs
insl
dec
call
sbb
std
popa
mov
jl
xchg
loope
std
scas
sbb
mov
cli
in
cltd
iret
sub
movl
or
or
ja
test
dec
pop
das
or
cli
xchg
xchg
jecxz
cmp
pushf
mov
push
jnp
dec
xlat
mov
dec
test
push
sub
mov
ja
jne
leave
sub
add
cmp
roll
popf
icebp
mov
insl
cmpsb
testl
adc
fbstp
mov
cmpsb
out
dec
les
ja
shlb
test
xchg
pop
push
lahf
pop
adc
leave
insb
adc
push
lret
int3
pushf
loopne
sub
mov
push
dec
adc
pusha
es
cmp
pop
add
push
push
inc
xor
push
dec
sbb
cmp
mov
stos
xor
ret
dec
fdivrl
pop
andb
fstpl
dec
ficompl
jecxz
mov
jnp
insb
jecxz
mov
jmp
jecxz
insl
dec
jb
shl
cmc
cmp
dec
jecxz
jno
sahf
add
and
cmp
mov
jmp
sbb
fxch
ret
mov
jnp
outsb
movsb
add
cs
mov
pop
adc
mov
shr
out
mov
mov
pop
cmp
pusha
lcall
loope
inc
mov
test
cmc
push
and
test
clc
out
dec
dec
lods
ss
sub
push
lock
inc
mov
out
mov
subl
jl
dec
sbb
mov
pop
aad
cmp
dec
mov
cmpsl
jb
dec
inc
leave
jno
mov
jne
and
fbld
cli
aam
cmp
jo
test
andb
inc
out
jmp
outsl
fdivrl
add
lock
add
lods
add
pop
sarb
adc
outsb
shl
add
aas
sub
cmc
push
xchg
ficompl
es
and
in
add
or
sub
adc
xchg
pusha
out
outsb
adc
aad
out
xchg
in
pop
jmp
jae
rolb
outsl
cltd
jge
sti
adc
xchg
jge
xlat
inc
sti
mov
or
stos
and
mov
xor
std
lea
and
jmp
inc
stos
scas
mov
add
push
outsl
pop
adc
call
or
dec
loop
sub
imul
mov
aad
int3
sti
xor
nop
sbb
int3
xor
repnz
stos
addl
sub
dec
and
int3
dec
xor
push
test
dec
movb
jmp
fisttpll
inc
jmp
test
ret
mov
std
negl
mov
mov
fnstenv
ret
mov
mov
jo
dec
dec
cli
cmp
push
pop
xor
cwtl
popf
adc
push
cmp
sbb
push
fstpt
pop
clc
dec
loope
insb
and
imul
frstor
xor
sbbl
icebp
stos
adcb
dec
add
add
mov
pop
add
fwait
mov
jge
loope
mov
push
mov
xchg
sub
lock
imul
sbb
lcall
leave
aaa
xor
or
xor
loope
jmp
add
stc
pop
lock
out
lcall
lahf
and
out
pop
shl
lods
or
dec
or
and
mov
mov
add
dec
movl
or
pop
fnstsw
push
popa
scas
xchg
mov
push
or
xor
loopne
cli
icebp
bound
rol
mov
jecxz
add
aam
mov
mov
inc
cmc
mov
add
aam
sub
testl
inc
jp
xchg
jbe
add
fisubl
cmpl
in
ret
inc
addl
repz
in
pusha
sbb
notb
enter
roll
cli
pop
xchg
mov
dec
mov
inc
popa
pop
inc
aaa
repz
aas
mov
mov
lahf
mov
cmp
cmpsl
mov
and
loope
push
add
mov
pop
fsubl
sub
inc
cmp
mov
push
add
pusha
xorl
mov
adc
and
or
fldcw
aas
mov
and
fucomp
rcrl
cmp
sbb
sbb
call
or
arpl
xchg
lret
dec
jb
dec
xchg
cmpsb
push
aam
dec
addr16
clc
xchg
icebp
fstpl
jge
mov
push
lret
mov
dec
cmpsl
cmpsb
ljmp
bound
or
pop
inc
mov
insl
out
mov
mov
sub
lcall
mov
xor
shll
pop
mov
push
in
rcll
add
daa
cmpsl
clc
mov
sub
imul
pop
imul
push
add
cmpsb
ss
imul
inc
cld
loopne
lods
mov
pop
lds
sbb
lcall
std
imul
shlb
add
in
mov
inc
daa
sbb
mov
test
pop
xchg
jge
or
add
leave
add
mov
xchg
mov
jge
sub
dec
cwtl
dec
mov
sub
jnp
popf
add
lods
mov
stos
cld
test
mov
sbb
fisubl
cli
clc
mov
pop
out
pop
mov
mov
xlat
or
mov
test
inc
adc
jge
fstl
xchg
jp
mov
shr
sub
fildl
std
or
and
push
jl
outsl
dec
stos
cld
int3
sub
in
mov
or
sbb
mov
popa
sarb
aaa
out
fists
das
pusha
test
mov
sahf
leave
inc
movl
scas
pop
fmuls
cld
add
push
loopne
dec
inc
dec
rclb
lods
xchg
stos
push
pop
sbb
cs
cmpl
ret
shl
add
lds
test
xchg
xlat
loope
sbb
xor
std
aam
xchg
ds
out
push
cmp
loope
repz
pop
sbb
adc
push
js
stc
sarb
fsubrl
jae
mov
imul
mov
pop
pop
mov
jle
push
movsl
cltd
dec
shrb
leave
push
popf
push
loopne
pusha
jmp
push
jo
mov
std
out
cli
cmpsb
xor
les
enter
mov
cltd
jo
ret
add
in
in
push
sbb
jmp
lret
cmp
sahf
cmp
out
das
pop
and
aas
cmpsb
mov
or
xchg
push
pushf
movsb
push
out
lea
pop
and
in
cmp
out
sti
or
aad
pushl
das
pop
or
xor
fidivrl
test
decb
cmpsb
pop
jle
movsb
out
add
ss
mov
lods
lahf
sbb
pop
sub
pop
sub
jge
leave
xchg
data16
nop
scas
leave
ljmp
pushf
lods
jbe
xor
cmpsb
pop
cmp
fldt
add
pop
inc
xchg
jl
arpl
stos
daa
and
loope
inc
or
cmp
xor
adcb
add
stc
ret
sbb
fldcw
add
xchg
pushf
inc
jbe
lret
mov
jmp
mov
adc
inc
jbe
dec
in
dec
sbb
push
mov
push
ret
ja
into
das
arpl
mov
push
mov
adc
inc
mov
xor
fisttpll
sbb
mov
test
xchg
emms
rcll
ja
js
mov
dec
repz
inc
std
out
fwait
mov
mov
xchg
mov
mov
int3
lret
in
push
std
xlat
cmp
cmp
mov
call
in
jbe
dec
sti
insb
push
sti
mov
sub
lods
mov
mov
mov
jmp
jno
pop
fdivrp
jo
paddsw
mov
mov
cmp
mov
jmp
sub
out
stos
cmpsl
mov
jnp
mov
jbe
aad
shrl
cmpsb
or
shlb
push
sub
lret
lods
or
ficompl
std
clc
fmul
sti
mov
lahf
scas
jo
lea
in
js
cmp
xor
ficoms
and
sub
jnp
xchg
sub
cmpsl
xorl
aam
push
pop
popf
and
mov
aam
dec
call
ret
lds
enter
iret
into
scas
lahf
nop
mov
ret
leave
fidivrs
pop
shrd
adc
clc
hlt
sub
loope
movsl
pushf
cmp
fdivrs
lret
push
mov
cltd
jl
in
sbb
mov
stos
ljmp
xchg
mov
test
mov
out
pusha
or
addl
add
ljmp
add
xchg
mov
addr16
inc
mov
clc
aam
test
out
sbb
jge
or
cmpsb
sbb
psrlw
or
xchg
imul
call
es
cmpsl
pop
leave
or
or
das
int
add
pop
lcall
lea
pop
fdivrp
xchg
push
or
and
cld
shlb
lret
mov
xorl
movsl
sub
clc
add
mov
jb
adc
sub
mov
mov
les
add
stos
sub
or
and
mov
push
leave
inc
add
lret
nop
and
push
nop
out
push
ljmp
sbb
push
in
cmp
pop
pop
fsts
pop
pop
js
sbb
pushf
aam
pop
cs
rclb
mov
lods
pop
pop
cmc
stos
jno
inc
add
sbb
enter
in
test
ficomps
sub
cwtl
in
das
pop
rorb
je
add
jne
adc
jo
adc
pop
jo
inc
jo
aaa
vphaddubd
adc
inc
push
inc
mov
mov
das
push
sbb
sbb
pop
aas
into
popa
jmp
xorl
enter
rolb
dec
int
or
inc
cs
loopne
inc
xchg
sub
cmp
mov
fldpi
ja
xlat
jnp
ljmp
push
xor
adc
cmpsl
jnp
lods
clc
lahf
mov
test
adc
ljmp
lock
mov
sbb
lods
stc
shr
js
mov
les
imul
int
add
in
jno
sub
pop
call
mov
sub
jne
push
movsl
aam
or
adc
and
sub
jge
mov
sub
roll
imull
stos
out
mov
dec
push
jnp
mov
push
flds
jmp
rol
dec
lret
mov
sbb
xchg
sbb
inc
faddl
mov
pop
adc
pop
pop
lods
inc
enter
push
hlt
int3
test
jo
ja
jo
std
push
jmp
stc
cmp
mov
xchg
out
push
cld
fs
pop
xchg
incl
testl
mov
cmpsb
jns
lea
stc
loopne
nop
scas
std
xor
adc
and
aam
mov
imul
sbb
data16
insb
fs
fwait
cmpsb
lods
lock
lods
aaa
popa
je
xchg
movsl
jle
sbb
or
inc
pop
jle
in
out
jo
clc
lds
xchg
movsb
ret
pusha
jbe
fwait
hlt
stos
push
or
push
pop
cwtl
xlat
mov
and
fcmovne
add
lods
cli
push
mov
sbb
xchg
jmp
push
test
mov
test
addr16
push
inc
mov
insl
cwtl
pop
adc
mov
repz
add
push
stc
outsb
cmpsb
push
in
jae
push
shll
leave
loop
dec
mov
jbe
xor
test
inc
int3
ss
test
xor
push
lret
sub
int3
mov
push
sub
shl
sub
int
jle
cmp
jmp
mov
aaa
cltd
movsb
cmp
lock
pop
sahf
popa
sub
int
movsl
xor
aam
std
cmpsb
lret
fwait
cld
mov
xor
xor
cmpsl
imul
lods
mov
jecxz
pop
adc
into
pop
movsl
dec
pop
or
outsb
sub
and
bswap
xor
mov
inc
test
divb
iret
imul
sub
stos
enter
lahf
mov
xor
mov
arpl
adc
dec
sbb
das
xchg
dec
ret
adc
cmp
ret
jbe
xlat
cmpsl
test
xchg
lods
cmp
dec
shl
adc
push
mov
fistpll
sti
jp
jg
mov
push
xchg
lods
mov
dec
ljmp
jnp
test
lcall
dec
sarl
inc
sbb
addr16
je
lea
jnp
lahf
mov
sahf
add
pop
shrd
xor
pop
push
int
js
fmuls
mov
mov
add
add
cmpsb
cmc
and
or
ret
mov
fsubl
fs
adc
lcall
mov
pop
test
lahf
cmp
pop
andb
mov
dec
mov
fucompp
mov
movsb
inc
push
iret
or
call
jmp
test
push
test
es
test
jbe
push
popa
dec
sti
outsl
lds
xchg
outsl
cmpsb
dec
jo
pop
add
mov
cmpsb
test
and
mov
dec
push
xor
xlat
test
mov
add
movsb
pop
mov
out
mov
push
int3
fcompl
jns
stos
test
xor
cmp
and
popa
xchg
mov
add
in
jbe
aaa
adc
popf
add
xchg
or
mov
lret
sbb
loope
inc
add
lret
jae
pop
dec
xchg
sbb
cmpsb
push
dec
arpl
lods
mov
test
push
fxch
enter
xchg
sti
lock
in
xor
mov
mov
dec
out
add
mov
jecxz
into
fmul
adc
movsl
sbb
push
ja
ss
mov
add
sahf
push
into
mov
dec
movsb
lret
and
push
sub
lret
sub
in
pushf
int3
out
in
lods
ss
outsb
int3
pop
cli
iret
push
imul
pop
scas
push
fidivrl
out
dec
into
scas
fstpt
retw
push
shrl
test
cs
ret
iret
fldt
out
into
sub
in
sbb
mov
push
mov
fnstsw
shl
xchg
outsl
int3
lods
cltd
sub
loop
cld
out
cltd
mov
or
sub
js
push
test
scas
test
push
insb
int
aaa
int
imul
outsb
pusha
jecxz
pushf
pop
lret
mov
pop
pop
adc
aam
sub
into
aaa
int
and
pushf
push
loope
jae
outsl
sti
cmp
mov
pop
leave
jmp
cwtl
iret
out
mov
mov
mov
jecxz
pusha
sbb
mov
lods
sub
test
mov
aad
mov
pop
insb
into
cmpsl
nop
nop
imul
enter
inc
mov
xchg
and
cmpsl
lods
pusha
sub
adc
lods
inc
cli
insl
sub
dec
mov
movsb
movsl
test
out
into
and
jp
mov
mov
fimull
mov
das
movsb
fistpl
sub
ja
cmp
cmpsb
inc
les
mov
sub
fdivrs
inc
cli
sub
cli
iret
sub
cli
jmp
mov
and
xor
into
arpl
in
outsb
xchg
nop
jns
outsb
in
mov
shr
cltd
pop
lcall
jmp
fists
subl
sbb
fwait
dec
push
lods
xchg
sbb
xor
sarl
or
sub
shll
into
addr16
in
mov
iret
cmpsb
fldt
mov
xor
jl
fwait
scas
fmuls
cwtl
mov
gs
test
fsub
movsl
stos
enter
cmp
cld
and
cmpsl
mov
into
stos
movsb
imul
imul
mov
mov
mov
sub
dec
pop
adc
lret
aam
lds
push
fdivrs
push
pop
sarl
pop
shl
ret
sub
pop
push
inc
and
mov
faddp
jo
jnp
ror
inc
jmp
cwtl
mov
xor
jbe
inc
addr16
sbb
aas
cld
out
ficompl
push
lods
and
out
dec
jbe
insb
cld
movzwl
int3
fcomps
cmp
sbb
push
loopne
aam
sbb
stos
js
or
pusha
sub
mov
mov
push
inc
jae
push
mov
adc
dec
push
scas
shlb
neg
outsl
dec
in
push
cmpsl
pop
cli
out
and
out
ficoml
in
adc
test
push
ret
fldl
in
push
xor
cld
mov
mov
sarb
mov
data16
sub
or
int
aaa
fsubrl
push
fisubrl
pop
int
dec
ljmp
cmpsb
imul
into
out
cld
pop
ljmp
sbb
int
es
push
xor
pop
ficoml
dec
jns
push
jecxz
jmp
iret
push
push
fxch
js
push
push
psubusw
js
out
push
fxch
js
cs
lods
pop
cltd
iret
nop
dec
push
fcmovne
lret
sub
sub
in
xchg
clc
dec
mov
sub
cmp
adc
ss
scas
mov
pop
mov
icebp
sub
xchg
daa
jne
aas
jg
test
lahf
sbb
lods
std
outsb
sti
add
fs
nop
test
arpl
mov
mov
cmpsb
in
test
mov
arpl
cmp
iret
inc
jecxz
movsb
dec
lods
out
leave
sub
test
aam
adc
and
mov
push
inc
loope
lods
pop
insb
into
mov
pop
pop
fstps
rcll
jo
stc
out
pushf
and
xor
loopne
jle
cmpsb
jle
pop
mov
loop
clc
or
sub
mov
mov
mov
fisubrl
dec
lret
aas
ja
test
pop
sbb
pusha
int3
das
adc
fwait
cmp
insb
cwtl
nop
push
movsl
into
or
test
pushf
inc
adc
push
clc
ljmp
stos
dec
pusha
mov
jp
sub
jmp
popf
add
fimull
in
mov
sub
arpl
mov
cltd
jecxz
cs
mov
push
mov
jmp
lret
fmul
inc
dec
iret
mov
fistl
mov
lcall
nop
xor
in
into
in
mov
mov
push
xor
mov
test
mov
imul
js
int3
cli
flds
movsb
iret
in
push
mov
jmp
es
push
cli
xor
lret
jmp
int3
mov
test
sbb
addr16
bound
out
pop
outsb
mov
mov
insb
insb
cmpsb
cli
pop
push
push
sbb
int3
cli
cli
and
sub
insl
mov
jnp
hlt
sub
push
stos
xor
add
cmp
push
sub
fwait
adc
xchg
xchg
neg
call
jecxz
mov
fiaddl
lea
jge
inc
lret
add
fwait
xor
mov
xchg
sub
stos
icebp
addr16
push
cmpb
sbb
jg
insb
xor
fcomps
or
divl
push
sbb
jne
std
and
push
jnp
mov
cmp
fdivrs
test
test
aaa
rorl
pop
lods
in
into
mov
mov
sub
jmp
outsl
scas
loop
out
and
out
lods
loop
imul
sar
pop
ret
xlat
in
ja
stos
adc
lahf
push
jp
ja
hlt
inc
imul
cmpsb
sbb
hlt
scas
out
insl
pusha
lods
lret
jbe
jg
jns
in
loop
shrl
push
cmp
mov
aas
or
xchg
cmp
mov
sub
inc
sbb
lods
fdivs
insl
lahf
scas
not
mov
int3
jl
adc
fldenv
out
fsubrl
arpl
pop
enter
mov
jmp
call
loopne
stos
cmp
call
sub
jmp
push
mov
aas
addl
scas
dec
mov
cmpl
stos
aaa
push
aas
stos
arpl
rcl
sub
or
dec
stos
loopne
mov
aam
lahf
stos
mov
cltd
add
sub
push
call
ds
scas
les
lahf
negl
inc
scas
mov
jns
mov
cmp
ds
inc
fildll
imul
lahf
sbb
adc
insb
mov
outsl
mov
cmc
adc
cmp
mov
mov
mov
ret
mov
and
scas
push
lret
or
cli
jbe
std
jge
cmp
in
jge
or
lods
or
and
sub
and
loope
add
jl
sbb
push
cmpsb
push
call
jb
in
std
pop
inc
push
enter
aas
mov
addr16
subl
cmp
mov
xchg
jns
std
pusha
add
jmp
imul
add
fs
sub
pop
adc
jl
lock
jl
push
sbb
jmp
std
and
lea
insl
movsb
call
int3
mov
paddb
push
gs
movsb
loop
fucomip
out
jns
xchg
rcll
dec
or
pop
ret
cmpsb
cmp
loope
xchg
inc
out
fstl
inc
enter
js
or
in
enter
cmpsb
jo
sarl
pop
fldt
jns
add
rorb
outsb
dec
sub
out
test
divb
dec
adc
fsubrl
dec
xchg
xor
dec
shlb
inc
popf
inc
test
stos
jo
sbb
push
in
sub
pop
jns
out
fsubs
xor
jae
xchg
ret
adc
push
outsb
pop
loop
sbb
sahf
js
leave
xchg
xchg
test
mov
mov
pushf
push
pop
mov
loopne
sbb
popf
inc
dec
push
xorb
ret
cmpsl
ficompl
inc
imul
in
leave
lods
pop
pop
sti
push
mov
stos
ficomps
mov
jle
cs
pop
lcall
pop
mov
sahf
subl
out
push
les
lods
dec
sub
fsub
fisubl
cmpsb
ror
lret
insb
dec
js
xchg
stc
stos
mov
loope
xlat
inc
test
lcall
lock
fwait
lahf
fsubrp
cli
int3
jge
adc
cmpsb
mov
pop
std
dec
sub
arpl
sbb
in
jbe
and
or
jae
rolb
jmp
mov
xor
outsl
cmp
sbb
pusha
xor
sub
lahf
ljmp
dec
dec
sub
adc
or
push
and
out
sbb
movsl
js
stos
loope
loope
add
and
jbe
push
fnsave
lods
cli
inc
loopne
in
sub
pop
xchg
int3
std
xor
sub
aam
cmp
xchg
dec
mov
shlb
cwtl
mov
dec
cmp
and
cmp
lahf
jno
sub
stos
cmpsb
in
dec
push
add
int3
jle
dec
nop
cmpsb
pop
jb
mov
idivb
sbb
jne
adc
cmp
mov
or
ds
insl
ds
scas
ds
mov
ret
out
loop
in
adc
mov
sub
int
push
lods
into
fdivrs
dec
fiadds
dec
fstpt
xor
jecxz
ret
adc
in
cli
push
cmpsb
push
jge
xor
sarl
push
ret
test
dec
cld
lods
adc
aas
lea
inc
jge
incb
cli
dec
ljmp
ret
das
jmp
xchg
in
cmp
mov
fists
sub
pop
xor
xchg
dec
out
scas
lret
push
rep
mov
insl
mov
mov
pop
fimuls
in
inc
jl
ljmp
dec
adc
lea
mov
push
out
dec
lods
lret
stos
test
data16
fldenv
in
sub
and
xchg
dec
insl
int
sub
dec
fidivrl
test
jbe
xor
in
shr
pop
jmp
xchg
clc
adc
sarl
sub
mov
loopne
pop
fwait
adc
jg
dec
clc
sarl
or
inc
adc
mov
or
and
scas
cld
out
jnp
cmc
pop
lret
xchg
dec
fstpl
push
clc
lock
cld
popf
pushf
xchg
lcall
ret
loop
ljmp
mov
add
stc
pop
pop
xchg
gs
es
add
insl
push
fildl
leave
or
sub
test
cmpsb
sbb
leave
in
loopne
sub
aam
out
jns
loopne
and
test
fldl2e
lcall
sahf
adc
in
sahf
mov
popa
dec
cmpsb
popf
out
pop
xchg
mov
lds
insl
adc
aad
dec
movsb
insl
push
test
sbb
scas
cli
push
loopne
insl
sub
cmpsb
stos
fxch
xlat
lods
cmp
fcomps
adc
inc
push
sahf
or
cmpsb
loop
adc
sbb
lds
xor
xor
cmc
pop
jb
test
shl
fldenv
hlt
mov
cmp
sbb
fxch
jmp
inc
iret
jmp
add
xor
jl
xlat
cmpsb
or
fs
aaa
loope
mov
mov
aaa
fiaddl
outsl
dec
lods
mov
cmpsb
hlt
mov
mov
pop
fimull
lret
outsb
or
adcb
call
hlt
scas
adc
out
sub
and
sbb
jp
mov
loopne
sbb
fnstsw
jb
outsl
fs
sbb
add
stos
test
xchg
out
pop
stos
pop
popl
int3
insl
in
fsubrs
cmc
inc
outsb
int
jno
addr16
icebp
or
in
movsl
push
sbb
sub
dec
jbe
or
sbb
aas
stc
ljmp
jl
mov
cmp
cmpsb
popf
scas
aad
les
fsubrl
fldl2t
js
out
or
dec
cli
inc
into
mov
imul
lret
mov
xor
lret
stc
and
or
push
jmp
mov
xchg
sbb
push
dec
loope
in
fwait
lret
loopne
add
xor
add
dec
xchg
fabs
push
scas
cmp
push
jmp
test
pop
and
add
lock
ds
outsb
jecxz
fadds
sub
movsb
cmpsl
pop
mov
iret
aaa
mov
fdivrs
sbb
mov
mov
push
jge
and
push
fbstp
test
inc
and
jl
leave
mov
leave
push
cmp
xor
or
cli
mul
mov
fs
leave
or
movsl
cld
outsb
mov
dec
gs
jns
scas
shlb
hlt
inc
scas
xor
ljmp
gs
mov
cld
sub
out
arpl
mov
imul
stos
and
lea
rcrb
fsubl
mov
in
lods
xchg
sbb
stos
and
dec
idivb
push
add
and
stc
addr16
test
xchg
in
pusha
sub
add
adc
sub
push
imul
mov
aad
lods
jb
jl
lcall
lret
push
cmp
lods
mov
mov
dec
mov
popf
movsb
mov
lret
sbb
ret
dec
imul
int3
lds
fcmovb
sub
sub
lds
fimull
rorl
jb
cmp
or
cmpsl
out
mov
fistpl
jmp
ljmp
out
or
push
mov
push
mov
roll
cmp
pop
pop
mov
aaa
test
movsb
sub
cmc
add
mov
pop
cmp
jmp
pop
hlt
mov
int
push
jo
sub
lock
cmpsb
movsb
lods
pop
pushf
inc
jle
or
imulb
adc
fstps
sub
jp
int
inc
sub
cmpsb
ret
xor
andl
insb
sbb
ljmp
inc
aas
out
mov
jbe
push
fdivrs
les
arpl
mov
or
lock
sub
hlt
imul
pop
cli
mov
notb
sub
push
enter
cmp
cmp
pop
push
in
sub
jmp
mov
jno
lret
fadds
xor
cld
push
xor
lcall
ljmp
outsb
or
imul
jmp
adc
sbb
psubsb
jne
in
sbb
xchg
ficomps
inc
fcoms
xchg
cmp
inc
cwtl
test
mov
pop
scas
push
jbe
push
and
adc
and
js
cmp
dec
xlat
or
lret
clc
out
xor
dec
shlb
pushf
pushf
int3
outsb
pop
fistpl
setp
dec
fwait
push
xor
das
addr16
mov
xchg
mov
int
cmp
add
pop
cld
icebp
sbbl
std
dec
fxch
fwait
cmpb
shrl
cld
fdivrs
add
sarb
fbstp
into
in
sub
ljmp
mov
ljmp
cmp
mov
mov
popf
xor
aas
test
sbb
clc
mov
jge
push
or
scas
mov
out
stc
dec
neg
sbb
sub
je
cmp
sub
xchg
cmpsb
push
arpl
ret
and
push
ret
pop
adc
inc
sbb
pop
and
outsb
xchg
lods
pop
scas
mov
js
mov
add
call
sbbb
dec
test
mov
jge
push
out
in
cmpsb
and
loopne
sub
jmp
sub
movsb
cmp
or
scas
mov
cmp
or
xlat
fldcw
xchg
xchg
gs
sti
jne
sahf
mov
repnz
in
lds
lcall
cld
lcall
sbb
mov
sbb
lods
cld
loopne
sarl
popa
hlt
ss
sub
inc
cmp
shl
call
cmp
xor
cmp
test
mov
icebp
inc
mov
or
sub
adc
push
cmpsb
stos
out
sub
mov
int
outsb
stos
mov
mov
mov
test
ret
es
pop
shll
pop
dec
mov
idivl
std
push
sbb
test
pop
mov
xchg
neg
mov
cmpsl
sub
sub
stos
cmp
xor
mulb
iret
and
cli
and
cmp
jecxz
ret
ret
push
xchg
cwtd
add
sub
mov
out
cmpsb
push
mov
out
lret
movsb
cli
js
ljmp
cmp
in
movsb
mov
or
xchg
or
xor
arpl
into
mov
cmp
push
test
xor
xchg
add
lret
push
es
dec
push
sub
xor
dec
cmp
addb
jmp
pop
lret
sub
dec
es
mov
mov
mov
mov
sbb
popf
out
test
pop
cltd
fstpt
push
adc
xchg
imul
sub
xchg
pushf
es
sti
pop
xchg
sub
mov
fs
and
nop
sub
movsb
lods
in
stos
movsl
mov
mov
stos
jecxz
int3
mov
int
out
fldt
mov
int3
in
mov
pop
push
cmpsb
mov
int3
sub
mov
imul
add
insl
lret
xchg
nop
sub
pop
out
stos
in
mov
in
and
mov
cltd
arpl
nop
stc
pop
je
pop
pop
inc
xorb
dec
mov
test
fwait
lahf
icebp
cs
xor
push
jl
dec
sbb
sub
push
out
add
aad
jbe
rcl
lods
jno
jns
or
mov
pop
dec
jo
pop
push
stc
mov
dec
mov
sub
add
lods
dec
fucomp
sbb
mov
testb
jecxz
loop
mov
cmpsl
sub
movsb
data16
lret
mov
sub
and
inc
ficoml
fiaddl
sub
out
shll
mov
cmpsb
cli
shll
fucom
pop
into
inc
dec
pop
in
imul
sbb
ljmp
test
shrb
jmp
mov
sahf
repz
str
out
lret
adc
push
arpl
pop
pop
jmp
xchg
ljmp
int
test
arpl
pop
leave
cmp
and
add
and
adc
xchg
dec
ret
test
pop
cmp
xchg
mov
and
cmp
jecxz
std
leave
and
pop
scas
dec
pop
sahf
leave
cmp
dec
int3
mov
int
cmp
popf
jmp
test
sarb
js
loop
flds
cmpsl
pop
aaa
addr16
scas
jecxz
mov
in
sub
xlat
push
sbb
movsb
cmpsb
mov
test
cld
fsubs
in
cld
lret
in
cli
imul
ljmp
in
int3
rep
fcompl
nop
pop
sub
lock
dec
adc
fistpl
inc
ror
fs
nop
push
and
cmp
aas
mov
lret
pop
cli
loop
cld
outsl
cltd
out
and
cvtps2pi
cmp
int
cmc
mov
push
cmp
inc
insl
lods
call
fimull
loopne
pop
fldt
fldl
mov
cmove
into
in
or
out
mov
xchg
lcall
and
pop
fsubr
jecxz
stos
cld
outsl
add
fisubl
movb
js
xor
test
loopnew,pn
ja
popa
rolb
mov
or
test
sbb
lahf
out
mov
jnp
rorb
popf
ja
jle
push
test
out
movsb
fwait
out
and
mov
push
in
mov
pop
lods
ret
iret
lea
in
cli
sub
jbe
inc
enter
mov
das
out
stos
sahf
adc
pop
sbb
jp
test
stos
sahf
sbb
outsb
jp
fnstsw
jno
pop
call
and
cmp
jecxz
ljmp
scas
lock
mov
cli
in
add
push
pop
fnsave
out
das
xor
ret
test
push
pop
dec
stos
out
jbe
xchg
or
xor
roll
in
test
or
cli
jmp
imul
push
bswap
adc
or
mulb
imul
xor
insl
in
into
xchg
jb
add
fwait
lods
ja
stos
lea
ret
out
xlat
adc
js
jnp
lahf
notl
loopne
xchg
xchg
or
btr
std
fs
jbe
xchg
loopne
xor
pushf
mov
mov
sub
cmpsb
mov
and
shll
movsb
fcmove
and
nop
and
jb
es
or
aam
js
sbb
ljmp
mov
pushf
or
cmp
fsubr
out
int3
or
mov
push
or
push
insb
out
out
call
jle
test
in
push
jle
mov
mov
cmp
or
xlat
jbe
rolb
ja
sbb
loope
repz
imulb
inc
stos
rol
icebp
lea
push
dec
fidivrl
lods
in
lock
fmul
in
pusha
jge
int3
pop
iret
test
dec
cld
jmp
call
pop
cmp
push
out
xchg
fsts
mov
lret
jnp
hlt
cmp
sub
aam
add
in
addr16
sti
insb
arpl
cld
call
push
fdivs
mov
xchg
lcall
test
sbb
mov
lret
ss
mov
pop
push
movsl
cs
cwtl
shll
and
and
lock
mov
aaa
in
jbe
sti
xchg
xor
push
in
pop
in
adc
fs
push
es
mov
xchg
test
inc
cmp
xchg
jecxz
in
sbb
int
ljmp
pop
in
sbb
cltd
ljmp
xchg
mov
inc
js
movsb
xor
es
in
pop
int3
rorl
jl
lcall
mov
loopne
or
int3
lods
and
lea
scas
ror
out
add
push
inc
outsb
mov
bound
xor
push
int3
lret
sub
fsts
xor
inc
cmp
cmp
mov
sub
xor
push
dec
addr16
xlat
sahf
cs
mov
pop
mov
arpl
insb
pop
pushf
imul
in
mov
inc
ret
pop
fidivrl
pushf
in
cmp
in
stos
cmpsb
push
pushf
out
test
inc
sbb
pop
dec
jmp
out
fldcw
add
fldenv
jmp
out
test
push
inc
and
jp
shll
push
sbb
mov
push
jge
jb
test
add
and
cs
fsubl
mov
adc
or
std
xorl
cs
sub
mov
mov
cmpsb
cmc
ss
movsb
xor
ret
call
faddp
clc
sti
pop
xchg
add
push
mov
pop
lods
aad
rorl
mov
mov
mov
test
xor
fucomp
int
push
sbb
cmc
shrb
ds
fidivrl
xchg
inc
test
xchg
loope
lea
shll
out
in
mov
into
out
dec
and
incb
or
sbb
aam
mov
dec
pop
int3
mov
fmull
or
cmpsl
fldenv
fldcw
ss
xlat
jle
dec
imul
jl
xor
jo
stc
push
cli
std
dec
mov
pop
inc
je
xchg
mov
push
push
dec
sbb
std
jnp
std
or
lds
pop
pop
adc
xchg
sub
sbb
dec
ret
pop
push
push
push
das
mov
and
cwtl
lods
test
or
xlat
inc
inc
int3
or
loopne
aaa
stc
xchg
addr16
mov
push
into
scas
lea
outsl
cltd
jecxz
mov
dec
xchg
jmp
jno
sbb
cli
nop
cltd
out
mov
and
movsl
jmp
cli
loopne
push
out
xlat
out
jns
fadds
cmp
out
push
cld
cmpsl
jl
push
scas
or
mov
repnz
mov
mov
pop
jnp
aas
leave
mov
jnp
shlb
stos
and
jp
in
out
dec
push
mov
lahf
out
cltd
push
dec
cld
or
mov
mov
ret
int3
jnp
pop
shr
add
shlb
sub
jbe
push
pop
loop
pop
jbe
idiv
aaa
fcmovne
push
pop
out
mov
int3
pop
sbb
std
daa
push
jge
je
enter
rclb
insl
lods
int3
pop
enter
sbb
ficompl
ret
test
decl
jle
jno
push
pop
fmuls
cli
lods
mov
hlt
cwtl
jbe
mov
movsb
cmp
out
sub
clc
mov
faddl
cmp
bound
std
scas
loop
loopne
cld
add
cwtl
mov
jmp
pop
jmp
imul
xor
lods
pop
daa
test
xor
mov
insl
test
inc
mov
es
push
pop
mov
mov
rorb
fsts
push
jbe
cli
test
fstpl
in
mov
mov
xchg
rcrb
clc
mov
jnp
cmp
repz
mov
and
out
jae
and
xor
ret
xchg
jl
inc
addl
pop
push
and
mov
outsl
aam
sub
jno
dec
jmp
mov
orl
std
out
loope
inc
cmp
in
sub
cmp
mov
xchg
mov
fmull
xchg
les
imul
lret
adc
xchg
loopne
add
aas
in
scas
fucom
mov
jecxz
or
lret
outsl
mov
mov
sub
adc
push
fistpl
pop
sub
dec
jmp
std
pop
test
lret
in
aaa
jmp
std
nop
inc
in
or
scas
cmpsb
shlb
fdivrl
rorl
adc
sub
call
sub
and
jp
jb
mov
mov
mov
aas
xchg
nop
push
repnz
sahf
or
or
dec
aam
lods
orl
add
or
pop
lock
shl
mov
hlt
push
repz
pop
adc
ss
add
dec
or
and
sbb
daa
sti
lock
sbb
outsl
sub
repnz
mov
or
cwtd
cmpsb
mov
int3
pop
test
dec
repz
inc
ret
pop
xchg
mov
pushf
lret
shrb
mov
mov
addr16
pop
fcmovnbe
jnp
insl
shl
lods
iret
lea
test
clc
pop
sbb
in
movsb
jl
testb
pop
mov
lods
jno
xor
lahf
or
cwtl
shrl
fcoms
lds
cmc
scas
out
adc
jmp
mov
mov
mov
fnstenv
xchg
or
pushf
sub
shlb
xor
std
jmp
fstpl
dec
jae
mov
dec
jmp
mov
test
cmpsb
js
lcall
loop
or
vmovss
adc
iret
xlat
sub
and
loopne
int3
jecxz
mov
in
sub
pusha
jmp
push
int
jmp
sbb
cmp
push
jle
xchg
and
cmp
mov
jnp
ret
jo
mov
mov
pop
sbb
jbe
push
out
aam
dec
mov
push
ds
cmp
push
imul
or
push
pop
and
jle
and
cmc
inc
dec
mov
shrl
mov
jnp
les
cltd
jae
int3
stc
call
jbe
ds
inc
inc
mov
cmc
fisttpl
cmp
bound
bswap
mov
pop
inc
dec
mov
out
add
ret
sti
scas
aad
mov
adc
and
xchg
push
push
sbb
lods
cmp
xor
or
psubsb
adcl
in
pusha
add
dec
repz
cmpsb
sbb
mov
sub
add
cli
cmpsb
cltd
fnstenv
and
roll
std
enter
gs
cmpsl
inc
repnz
aad
cli
sbb
adc
out
popl
daa
sbb
jns
std
mov
dec
sbbl
mov
andl
sbb
jle
fdivs
addr16
push
out
pop
sub
inc
cmp
push
in
and
xor
popa
test
gs
cmpsb
mov
push
fnstenv
sbb
mov
jne
stos
push
cmp
leave
cmpsl
bswap
int
cwtl
xor
lret
fimull
or
push
sub
jmp
dec
push
loopne
leave
dec
mov
inc
test
jbe
cmc
mov
jge
xchg
jbe
test
fisubs
enter
jb
arpl
adc
push
int3
mov
enter
mov
sub
push
mov
arpl
test
je
dec
ja
fsubrl
push
cld
call
jmp
rol
mov
inc
inc
ljmp
and
jp
nop
dec
fisubl
arpl
movsb
sub
fwait
testb
lods
sahf
sub
dec
mov
fidivrl
scas
in
sbb
je
out
add
pop
cld
pop
mov
shrl
cltd
inc
gs
and
movb
ficomps
lock
cwtl
cmpsb
rol
mov
jmp
mov
and
ja
out
cmp
push
test
out
into
push
outsl
test
out
mov
cmp
mov
insb
xor
xor
sub
pop
add
sbb
push
jmp
mov
push
pop
jmp
in
sub
fs
movsb
sub
fidivl
pop
xchg
push
xchg
lea
jl
testl
adc
fisttpll
fildl
adc
xor
sub
cli
hlt
push
xchg
lret
xchg
gs
mov
gs
dec
xor
dec
mov
movsb
gs
mov
pop
outsb
pop
nop
fsts
out
andb
or
movsb
es
or
outsl
inc
push
and
shlb
pop
lea
pop
inc
adc
pop
mov
mov
inc
push
mov
add
inc
int
push
lret
out
lods
cltd
lret
into
xchg
sbb
cmp
into
pop
cmpsb
pop
cmpsb
sbb
xor
ja
pop
out
enter
inc
negl
adc
mov
mov
and
test
jne
jbe
push
aad
in
fdivrs
mov
mov
jl
adc
loop
stos
cmpl
pop
and
ds
dec
mov
dec
hlt
cmp
or
xchg
scas
xlat
arpl
sbb
insb
in
arpl
sub
cmpsb
aas
inc
subl
nop
in
pusha
es
pushf
xchg
pusha
inc
fistpll
sbb
push
in
mov
dec
enter
stos
aaa
int3
cli
arpl
push
pushf
test
cmp
dec
out
push
push
xchg
inc
inc
pop
jne
xchg
mov
or
adc
pushf
jns
cmp
nop
les
js
mov
sahf
pushf
mov
mov
adc
iret
sarl
xlat
inc
xor
lcall
lock
xchg
je,pt
int3
or
loopne
mov
imul
ljmp
mov
pushf
or
insb
int3
or
lods
bound
dec
cmp
lret
enter
call
sbb
call
stos
idivl
and
neg
es
test
jbe
pusha
icebp
ss
ljmp
lds
pop
add
adc
inc
cmp
adc
or
jno
pop
es
xchg
jge
enter
in
stos
test
cltd
xchg
js
cmpsb
js
adc
rol
movsl
test
test
jbe
stos
lcall
pushf
std
call
mov
sbb
loopne
lds
add
cmp
popa
sub
imul
fwait
stos
sub
ljmp
inc
pop
adcb
xlat
jle
mov
lea
pop
lahf
jns
fildl
test
loop
stos
lahf
or
cmp
pop
hlt
fnstsw
int3
rcrl
cli
in
gs
hlt
cmp
sub
das
hlt
cmp
cli
out
insl
pop
cmp
cmp
push
lret
lahf
data16
call
loopne
push
js
jmp
js
out
jo
add
fadd
add
mov
imul
test
jmp
cmp
fidivs
mov
pop
pushf
cmc
testl
pop
cmp
leave
inc
pop
cwtl
cs
dec
pop
test
xchg
ret
mov
mov
addr16
out
push
aas
cmp
cli
ja
lods
inc
test
insl
int3
sbb
leave
mov
mov
or
jae
cmp
pushf
dec
mov
mov
dec
loopne
out
stos
test
iret
lret
lcall
jmp
jbe
std
lcall
or
hlt
xlat
ja
dec
dec
and
mov
mov
lahf
fwait
add
cmpsb
jns
xchg
pusha
dec
jnp
add
outsl
or
cmp
outsb
cli
push
mov
fstl
or
mov
repnz
cli
mulb
mov
and
movsb
in
add
and
std
pop
sbbl
or
mov
nop
sub
dec
mov
and
stos
add
mov
jo
mov
jecxz
out
and
lcall
test
pop
ljmp
gs
leave
ret
inc
jle
inc
mov
sbb
or
loopne
and
fcmovu
in
es
in
fcompp
lcall
out
xchg
mov
cmp
enter
out
out
mov
pop
out
jmp
out
pop
jl
mov
mov
outsb
sub
ret
imul
out
xchg
pop
mov
lea
mov
mov
add
sub
fcmovbe
loop
repz
mov
leave
test
and
pop
cli
add
loopne
popa
mov
pusha
inc
js
in
lret
loope
pop
sub
arpl
adc
js
outsb
inc
out
pop
dec
movl
push
cmc
popa
mov
std
cmpsb
ss
jl
loope
xor
call
mov
cmp
push
int
std
add
data16
out
fbld
or
ret
and
cmpsb
mov
in
into
iret
dec
pop
into
icebp
imul
out
sub
sbb
imul
in
aaa
outsl
stos
aaa
push
pop
out
xor
dec
inc
aaa
ljmp
jp
leave
bound
pop
es
cltd
mov
popf
inc
popf
fcmovnb
mov
mov
mov
stos
jb
mov
addr16
dec
in
repz
mov
and
arpl
mov
pop
sub
shll
jb
bound
inc
aas
push
push
push
sbb
pop
dec
fs
jge
movsl
fcompl
clc
dec
ret
mov
mov
movsb
data16
push
push
dec
js
clc
inc
jb
push
mov
insl
fnstcw
and
data16
mov
and
clc
lds
pusha
or
mov
jmp
addr16
fldenv
xchg
dec
or
jl
lret
mov
xchg
or
test
inc
pop
sub
push
or
sub
sti
mov
enter
push
inc
in
out
cli
cld
mov
aad
push
lcall
out
es
in
in
sbb
xchg
insb
xlat
jp
in
jg
adc
dec
movsb
es
xor
ret
arpl
movsl
or
mov
and
jae
xlat
cltd
sub
fbstp
cli
cwtl
imul
cs
sub
fdivrs
icebp
leave
push
push
leave
cmp
dec
fcoms
sarb
push
push
or
adc
cmpsb
pop
xor
sti
scas
mov
in
ja
lcall
fdivrl
mov
push
push
pop
inc
insb
nop
inc
outsb
and
xchg
pop
cmp
mov
pop
mov
test
mov
lcall
mov
int
incb
aas
or
out
jmp
lods
mov
fwait
clc
das
xchg
out
cmc
mov
pushf
test
out
orb
fisttpl
push
adc
jns
testl
cmp
cmove
jmp
jp
test
pop
mov
jbe
xchg
dec
lods
test
mov
sub
xadd
ljmp
mov
ret
test
aaa
das
push
lcall
cmc
js
sbb
or
sti
xchg
add
icebp
js
sti
aaa
es
and
cli
cmpsb
imul
out
cmp
mov
aas
jg
xor
add
icebp
jo
data16
leave
lahf
xlat
jp
dec
cmp
out
jbe
lods
test
add
cmpsl
pop
into
jmpw
adc
add
cmpsb
dec
enter
popa
insl
mov
ret
in
js
dec
ret
out
std
call
jbe
jbe
sub
mov
mov
push
sbb
lea
out
xchg
adc
std
repnz
jmp
cmp
out
insb
push
jmp
mov
sti
pop
mov
fnstcw
and
cmp
and
jo,pn
std
out
push
sub
and
scas
dec
sarb
ffree
movsb
mov
lret
lods
sub
in
ret
ljmp
sub
pop
lods
adc
scas
mov
or
imul
mov
xchg
xor
xchg
jecxz
mov
sub
sbb
xchg
pop
ds
in
push
ss
push
insl
lret
jge
cli
and
cli
movsl
sarl
add
lods
cmp
imul
rolb
mov
push
call
jle
orl
in
stc
mov
inc
lcall
pop
icebp
and
lea
lret
push
cmpb
cmp
sub
loopne
pop
ja
sub
outsb
cmpsb
add
dec
pop
mov
into
je
shrb
push
cmpsl
sbb
test
arpl
sub
add
int3
data16
and
test
pop
loop
pop
add
mov
insl
xchg
xchg
cltd
pop
dec
fsubrs
cwtl
pop
push
cmp
cli
xorl
data16
add
cltd
incb
fldenv
lcall
lods
pusha
push
sbb
cmp
shr
stc
movsb
jae
dec
jp
sbb
in
cltd
inc
rorb
dec
iret
lock
imul
mov
imul
into
mov
bnd
sti
pushf
iretw
les
mov
xor
jmp
ficomps
cli
jo
insb
lcall
jbe
cli
jp
shrl
cltd
test
cmp
clc
push
xchg
and
pop
dec
rclb
or
sub
sub
xlat
cld
into
std
pop
jae
aam
xchg
xchg
pop
pop
nop
pop
movsb
jmp
jo
xor
fidivl
pop
xchg
out
cld
mov
cmp
pop
mov
cmp
fsubrs
mov
stc
pop
nop
test
jmp
mov
mov
push
jne
lcall
jl
mov
aaa
jb
pop
jo
insl
push
aam
lahf
fimull
pop
fprem
sub
push
fdivrp
jb
mov
mov
lods
lret
out
fimull
or
xchg
sti
push
inc
and
loope
fisttpll
adc
stos
push
in
repz
sub
out
cmp
ret
mov
pop
cmp
cmp
lret
mov
mov
in
ror
test
nop
cli
pop
scas
mov
sub
sbb
push
lahf
adc
enter
ret
std
fdivrl
pop
dec
lret
rclb
dec
push
popf
fnstcw
enterw
sbb
or
movsl
pop
lret
dec
out
aas
lret
stc
out
in
adc
loopne
mov
push
or
sbb
adc
sbb
cltd
out
insb
lea
rcrl
sbb
imul
lods
jmp
and
in
lret
sub
mov
stos
loopne
js
dec
mov
fisubl
test
sub
push
lcall
andb
movsl
dec
mov
cmp
scas
leave
cmp
lods
jmp
test
sarb
insb
dec
imul
lcall
repz
outsl
stc
rorl
out
mov
in
mov
mov
sbb
filds
test
mov
push
lods
je
jl
ret
dec
ja
xor
dec
shrl
ljmp
dec
fldcw
nop
xchg
les
addb
scas
inc
sbb
cs
add
arpl
cli
outsb
ja
out
fbld
mov
rcr
mov
icebp
mov
nop
ret
pop
fcoms
ja
jl
or
out
or
adc
mov
jl
or
adc
fistps
or
pop
imul
cli
and
stc
dec
adc
adc
fisubs
flds
inc
lret
lods
js
mov
cmp
sets
jbe
scas
das
cmp
or
jmp
push
scas
inc
adc
enter
pop
sub
and
lahf
nop
movsb
into
jl
cltd
out
stos
or
ss
mov
data16
push
nop
nop
gs
pop
out
and
iret
mov
mov
ja
ja
pop
popa
pop
js
or
pop
or
dec
pop
adc
outsl
imul
stos
pusha
push
call
in
xchg
clc
cmp
jp
outsb
or
jl
fadd
xchg
test
jbe
cld
push
push
leave
fs
mov
aaa
cld
out
add
pusha
lock
jl
enter
xor
add
cmp
cmp
ret
adc
cs
mov
sbb
cmc
adc
fldcw
xor
xor
test
movsb
scas
stc
mov
jb
insl
stos
out
movsb
jae
cwtl
and
pop
insl
pop
in
mov
imul
xor
loop
sbb
jmp
xchg
or
xlat
les
aam
aam
pop
mov
and
xchg
mov
add
imul
in
sbb
jne
outsl
shlb
cli
mov
sbb
push
adc
add
push
iret
adc
out
stos
iret
imul
push
push
mov
push
push
mov
ljmp
xchg
std
out
hlt
outsl
stos
sbb
jne
scas
fwait
cs
inc
call
push
adc
dec
mov
stos
jns
jecxz
cli
stos
inc
pop
cld
push
aam
js
push
add
adc
mov
mov
imul
lcall
jecxz
add
pop
arpl
jecxz
pop
dec
sbb
sbb
mov
insl
push
dec
cmp
sub
stc
in
in
test
pop
movb
jmp
in
inc
sbb
int
in
cltd
push
cmp
pop
ucomiss
aad
jmp
jecxz
ljmp
addr16
inc
push
mov
lods
or
addr16
jne
xlat
test
mov
and
ja
subl
xlat
outsl
cmp
ds
jbe
lods
mov
push
jno
jecxz
pop
nop
fldenv
jmp
leave
movsl
push
pop
and
push
int
push
lret
lret
pop
push
into
icebp
push
dec
ror
jns
outsb
pop
fsubl
push
or
int
lea
fistpll
mov
pop
sub
test
ficoms
mov
sub
lea
cli
test
insl
add
mov
test
inc
push
in
cmp
lret
inc
leave
rorb
fisttpll
push
insl
mov
pop
sbbb
xchg
std
stos
sbb
hlt
pop
or
adc
cwtl
dec
cmpsl
icebp
push
inc
movsb
cmpsl
test
cwtl
and
loop
xlat
arpl
sbb
jno
mov
in
call
js
ss
inc
into
sub
lahf
shl
cmp
divb
retw
jecxz
adc
sub
xchg
or
push
gs
inc
jp
fucom
addl
popf
stos
and
cmp
gs
mov
clc
adc
mov
dec
movsb
pop
aad
jns
xor
jns
dec
adc
push
pop
sub
sbb
pushf
sbb
call
add
dec
sub
pusha
fnsave
aas
cmp
jnp
dec
or
mov
inc
xchg
rorl
aad
in
add
pop
flds
pop
les
enter
fcoms
loopne
mov
mov
pop
adc
enter
mov
sahf
enter
xchg
inc
mov
clc
movsb
pop
pop
jne
cltd
dec
push
movb
push
jnp
clc
clc
push
std
jnp
enter
dec
pusha
pop
fwait
sbbl
ja
cmp
popf
push
jge
mov
in
dec
sbb
xor
jb
xor
pop
pop
inc
std
lret
pop
test
repz
stos
fstpt
rorl
adc
push
sub
rcll
stc
mov
shr
xor
in
addr16
loopne
mov
inc
es
ljmp
add
mov
cmpb
jge
jecxz
jno
addr16
dec
mov
xchg
jmp
and
cltd
jbe
mov
and
ret
dec
jmp
jg
lret
cmc
insl
ret
nop
shrl
imul
mov
leave
pusha
mov
sti
icebp
adc
or
push
pop
cmp
aaa
push
sbb
sub
mov
out
dec
xor
jno
imul
lock
aas
xchg
mov
add
popf
popl
test
out
pop
pop
lock
scas
icebp
pop
shrb
test
pop
cmpsb
sbb
out
xorb
push
sub
in
je
inc
push
xor
mov
popf
andl
mov
adc
xchg
pop
jne
ret
xchg
test
loopne
in
pop
and
push
outsl
enter
pushf
push
sti
or
subl
loopne
mov
int3
cwtl
adc
adc
in
out
inc
addr16
xchg
mov
and
jl
adc
addr16
cmp
push
in
adcb
sbb
or
loopne
addr16
lret
add
int3
dec
dec
arpl
jl
jno
fisubl
test
stos
lret
cli
cmp
lods
sti
cli
cs
cli
mov
popa
leave
xchg
xchg
add
mov
dec
lahf
lret
pop
fimull
fs
sbb
ret
add
filds
mov
das
sti
xchg
lret
insb
insl
lods
pop
sub
lret
clc
cmp
int
addr16
xor
push
jbe
rorl
nop
pop
add
out
movsl
lds
loope
scas
loope
mov
loopne
data16
in
test
in
movsb
data16
loopne
fsubrs
mov
xor
fistl
inc
mov
push
adc
shrb
fisubrl
shl
pcmpeqd
inc
dec
sub
add
in
loopne
jp
push
in
imul
xchg
int3
movsl
lahf
mov
xor
in
sub
mov
imul
in
mov
mov
out
and
in
pop
loopne
sbb
xor
pop
cmc
cmp
sbb
vcvttsd2si
push
pop
mov
out
or
inc
jmp
xchg
adc
movsb
in
and
push
cmpsb
add
rcrb
insl
int
sahf
cld
and
adc
xor
clc
mov
loop
popa
pop
loope
out
mov
pop
push
pop
sbb
andl
ror
gs
shll
shrl
jl
jne
jbe
pop
cmp
out
je
aam
sub
mov
push
in
pop
pushf
in
mov
push
cmp
xor
enter
xor
cmpsb
mov
inc
sbb
call
in
lods
lcall
jl
fldcw
data16
in
push
jnp
lret
mov
fisubl
dec
sbb
fmuls
lret
inc
in
mov
mov
mov
psubusb
adc
cmp
push
sub
cmp
stos
movsb
or
dec
jnp
mov
in
jecxz
gs
lods
addl
mov
rcll
in
sbb
xchg
stos
adcb
push
sarb
lds
in
mov
pop
lcall
nop
mov
pop
mov
mov
jmp
pop
xchg
xlat
call
jbe
mov
push
push
fstpl
std
popf
rclb
lea
in
mov
rcl
sub
jo
jo
mov
mov
stc
xchg
in
or
popf
push
int
repz
or
test
out
imul
sbb
or
int3
stos
cmc
adc
daa
xchg
popf
push
jle
jp
call
dec
mov
push
xor
xchg
iret
sbb
cmpsl
fisttpll
jmp
and
pop
testb
cmpsl
fstl
mov
cmp
lahf
insl
mov
dec
call
js
fsubl
pmaxub
out
mov
mov
ret
pop
lcall
push
iret
xchg
push
mov
test
imul
pop
mov
ror
xor
rcll
dec
pusha
adc
in
std
inc
xor
mov
mov
lcall
stos
outsl
cltd
add
lock
add
fsubl
jmp
adc
lret
inc
sbb
aas
pop
push
mov
dec
and
mov
loopne
outsl
nop
jge
or
sub
ja
adc
rorl
dec
ret
or
out
xor
jle
jbe
add
scas
mov
repnz
in
mov
mov
leave
popf
into
int
ja
xchg
dec
pop
insl
lods
sbb
xlat
aam
jbe
scas
mov
ljmp
std
sub
fisubrs
cmpb
mov
adc
xchg
jb
sti
jne
leave
push
cmp
rol
dec
dec
cmp
and
dec
pop
dec
mov
ret
test
lcall
std
pushf
push
dec
xor
lcall
iret
jecxz
popf
mov
add
mov
imul
push
std
fistps
imull
addl
wbinvd
shll
out
mov
pop
or
in
rolb
pop
mov
loop
fxch
lock
rcll
xchg
add
int
inc
rclb
jno
sbb
test
sbb
push
add
cmpsb
flds
mov
mov
push
lret
mov
cltd
sub
dec
out
mov
cmp
mov
sti
das
mov
imul
mov
sub
xor
jl
xchg
xor
push
repnz
xorl
int3
jo
popf
fcomps
addr16
fildll
jns
test
sub
inc
pop
dec
dec
loope
ljmp
sbb
cmc
xor
cli
movsb
lahf
dec
xlat
lret
int
addr16
cmpsb
push
adc
or
int3
ja
xor
and
cmpsb
cmp
mov
xor
js
mov
in
push
add
push
jbe
mov
pop
inc
nop
movsl
sti
sbb
pop
sub
mov
test
loopne
icebp
add
adc
inc
sbb
jecxz
mov
pop
addr16
xchg
lret
pop
sub
jmp
mov
mov
stos
test
shll
mov
sbb
test
sub
jmp
cmpsb
addr16
bound
pop
sub
arpl
pminub
lret
dec
mov
lret
sbb
add
leave
mov
int3
sarb
dec
jp
lahf
mov
xor
sub
lds
push
cmpsb
mov
push
push
mov
jmp
mov
out
sbb
es
mov
sub
sti
mov
fwait
mov
cmpsl
fs
fiadds
lret
jbe
fs
test
cmpsb
mov
fstps
test
or
sub
xor
and
stc
sahf
mov
mov
and
mov
cmpsb
mov
jno
imul
por
lahf
cmp
sub
insb
sbb
clc
or
cmpsb
dec
cwtl
sub
mov
adc
push
fisubrl
lahf
dec
pop
xchg
negl
fnstsw
sub
int3
xchg
scas
mov
cmpsl
jp
or
cmp
jns
out
mov
das
imul
mov
in
mov
pop
mov
push
xlat
cmp
sahf
js
or
pop
jmp
mov
jecxz
sbb
dec
std
or
repz
sbb
or
add
into
test
add
and
push
test
push
imul
call
stos
inc
jnp
ss
insl
pop
sbb
or
insb
cmpsb
sub
icebp
push
lahf
mov
and
sti
fcomi
sub
addr16
sub
inc
addr16
lds
ss
mov
inc
push
pop
mov
icebp
rcrl
int
push
cwtl
xchg
aaa
pop
add
into
ljmp
dec
call
daa
jnp
mov
push
cwtl
lret
out
mov
jge
dec
inc
lret
add
fisttps
popf
out
dec
mov
jg
jmp
jbe
ss
stc
sub
fisubs
stos
jns
leave
pop
sub
jno,pn
xchg
out
scas
or
mov
inc
loop
ds
sbb
sbb
jl
mov
add
rol
dec
xchg
out
lods
int
push
mov
cmp
mov
jmp
jns
mov
std
out
pop
fs
and
fldt
push
test
cwtl
stc
jbe
pusha
push
jo
mov
jbe
lea
je
into
enter
inc
mov
sub
xorb
and
and
out
and
fsubrl
lahf
mov
jns
test
imul
mov
jnp
idivl
xchg
cwtl
std
std
std
xchg
cmpsl
jo
inc
rcr
jle
mov
mov
mov
loop
dec
xor
mov
push
cmp
xlat
inc
sub
mov
inc
add
push
jo
dec
lret
cs
xchg
sub
xchg
pop
addr16
cmp
std
add
push
mov
sub
ret
xchg
movsb
out
cmp
rol
pop
push
sahf
adc
or
scas
movsb
ljmp
aam
inc
dec
out
shrb
movsb
icebp
leave
scas
leave
call
idivl
xchg
xlat
mov
or
lods
lods
or
mov
jl
rcll
nop
lret
jne
add
dec
repz
jae
xchg
cwtl
mov
popa
ret
sbb
pop
std
jl
ds
sub
aas
xchg
mov
mov
lock
xlat
cmpsb
stc
lahf
cmp
inc
fistps
dec
lds
mov
adc
push
mov
repnz
divl
pop
pop
aas
dec
sti
sbb
js
js
push
sbb
push
cmc
out
outsl
lods
inc
or
mov
cmp
mov
jbe
dec
push
sbb
std
xor
mov
cmp
aad
push
mov
outsl
jle
into
push
xlat
sti
icebp
imul
lret
push
out
cmp
jbe
repnz
stc
mov
lret
lds
mov
aas
sahf
mov
lcall
aaa
outsl
in
or
push
and
mov
pop
fldcw
and
lcall
sub
ficompl
cmp
xor
test
test
int
in
cmpsb
jl
add
mov
jg
out
jae
mov
cld
xchg
and
pop
jbe
stos
lods
cltd
jbe
in
test
pushf
pop
sbb
inc
stos
add
cmpsl
icebp
jecxz
mov
test
jle
gs
testl
mov
lcall
mov
mov
sub
movsl
shlb
enter
mov
mov
fs
sub
adc
aad
stos
out
dec
lret
dec
dec
cmp
pop
pop
push
fs
out
into
sbb
fs
shlb
inc
movsb
jmp
jns
jno
mov
ds
in
jecxz
jo
xchg
mov
out
inc
fimuls
out
in
push
jg
cmpsl
fdivl
in
jg
outsb
cld
sbb
adc
fwait
lock
push
daa
inc
jo
movl
out
test
cltd
outsl
adc
inc
test
outsl
mull
int3
jnp
iret
cmpsb
scas
jl
stc
and
xor
lods
push
jo
loopne
xchg
shrl
popa
sub
adc
mov
mov
mov
mov
mulb
cmpsb
xchg
cmp
test
test
mov
movsb
loopne
loope
dec
rol
pusha
xor
outsl
pusha
fsubl
push
mov
sbb
loopne
add
mov
jno
mov
mov
push
lahf
inc
sub
fnstcw
jp
ljmp
lcall
jns
arpl
cmp
and
jle
nop
movsb
flds
adc
xchg
xchg
add
outsl
xor
push
je
test
popa
sub
sub
or
mov
sub
movsb
fcmove
lahf
push
clc
pop
sub
and
mov
sbb
adc
fsubr
das
mov
jo
mov
push
dec
pop
das
mov
mov
jo
jnp
sub
mov
inc
or
dec
je
outsl
daa
push
mov
js
fcoms
or
inc
cltd
jae
scas
sub
xchg
imul
or
dec
jbe
cmp
cmpsb
push
shrl
adc
mov
cs
sbb
stc
mov
in
pusha
das
pop
out
push
push
imul
mov
imul
and
push
jbe
adc
push
sbb
sub
xchg
and
xor
lods
repnz
sub
mov
jl
jl
xor
pop
mov
int
adc
sub
add
pop
xchg
fdivs
mov
sti
cmp
data16
inc
icebp
out
jo
into
inc
pcmpgtd
es
push
jb
fcmovnb
loopne
rol
inc
push
lret
jp
pop
push
pop
jecxz
mov
jnp
popa
mov
call
movsl
and
lock
and
out
push
bswap
jnp
push
sub
lods
test
inc
push
cld
mov
fsubrs
mov
cmp
addr16
mov
je
jnp
sub
lahf
out
pop
lods
sarl
test
xchg
pop
cmp
pop
sub
add
dec
mov
xchg
jmp
fstl
lcall
sbb
pop
stc
fldenv
add
jo
push
repz
xchg
cmp
stc
mov
fildll
imul
popa
cltd
arpl
pop
lds
fucomip
xchg
loope
dec
mov
repz
inc
stos
fstl
shrl
call
add
shrb
adc
sbb
scas
sar
inc
xchg
setns
insb
add
add
or
leave
mov
addl
xchg
std
clc
jo
dec
icebp
mov
pop
mov
insl
out
out
ljmp
sub
sub
dec
or
push
out
mov
xchg
push
mov
adc
or
and
and
sahf
test
xlat
pop
xor
mov
jns
dec
js
xor
loopne
ljmp
inc
outsl
stos
lcall
xlat
imul
das
pop
dec
or
xchg
cmp
addr16
cmp
leave
mov
bound
inc
out
lods
les
and
jo
cwtl
mov
jp
sbb
sub
ds
add
push
fmuls
jp
aaa
fnsave
xchg
rorb
loope
outsb
sahf
sub
cld
sbb
test
xchg
pop
in
jmp
inc
dec
lods
sub
push
mov
scas
fsts
push
in
xchg
popf
lret
rclb
test
jo
or
mov
ja
lahf
mov
test
pop
mull
add
in
test
cltd
push
mov
cwtl
test
or
mov
xor
sub
pop
js
scas
repz
jnp
or
cmp
xor
enter
sti
lahf
sbb
stos
mov
push
imul
lock
mov
sub
and
xchg
mov
push
call
inc
dec
xor
repnz
xor
imul
mov
js
and
fs
jae
fsts
jp
pop
fstps
cmpsl
shlb
ret
out
call
xchg
test
xchg
out
xor
push
pop
mov
aaa
xchg
mov
pop
test
insl
xor
sub
pop
inc
xchg
dec
pop
pop
gs
jb
fldcw
and
int3
sub
dec
dec
pop
insl
cmp
lahf
xlat
sarl
inc
sbb
and
dec
jb
xchg
aam
mov
pop
imul
outsb
sub
sub
popf
ss
leave
cmp
addr16
jae
mov
sbb
inc
or
loopne
stos
test
popl
mov
push
stos
orl
ljmp
call
test
mov
mov
sarl
movlps
outsb
pusha
cmp
popf
xchg
call
and
jbe
aas
loope
cli
iret
mov
sbb
and
and
add
xlat
add
sub
in
int
mov
fbld
sbb
mov
dec
cmpsl
push
cmp
nop
rcll
aad
mov
cmp
add
addr16
loopne
adc
je
jae
adc
push
push
or
adc
pop
das
sub
in
loop
cmpsb
lcall
ret
cmp
nop
les
shll
fcmovu
stos
lods
mov
nop
leave
push
sbb
gs
lea
popa
add
arpl
testl
leave
outsl
out
ss
andb
sub
mov
add
sub
stos
data16
jg
inc
bound
pusha
bound
xor
or
adc
cmpsb
sbb
mov
dec
lret
inc
adc
popf
adc
gs
mov
mov
dec
sbb
bound
repz
lahf
xchg
pusha
and
pusha
jl
pop
push
push
pop
sub
std
outsb
fiadds
lahf
pop
add
outsl
inc
pop
cmp
mul
movsb
out
and
cmpsb
mov
mov
sbb
sub
mov
and
stc
imul
fnstenv
jp
fucom
lahf
test
pop
pop
cmpsl
mov
je
out
imul
adc
outsb
mov
test
rolb
ret
shl
lret
clc
loopne
pop
ret
mov
dec
psubsb
cwtl
leave
mov
stos
mov
cmp
xchg
adc
scas
mov
scas
cld
mov
push
add
loope
ss
jge
adc
pusha
or
jbe
push
lea
xor
and
jecxz
mov
pop
pop
enter
shlb
adc
mov
inc
addr16
sbb
adc
pusha
mov
mov
repnz
sbb
int3
push
xchg
sbb
arpl
loopne
stos
cmp
pusha
dec
sbb
int3
mov
shl
leave
fcmovne
les
nop
push
xor
or
imul
sub
mov
aas
mov
hlt
add
cltd
hlt
movsb
jecxz
pop
adc
in
out
orb
xor
push
je
xor
fldcw
mov
test
jo
fisubrs
sub
out
pop
filds
sub
bts
fbld
test
pop
fld
in
sbb
xor
pushf
dec
mov
outsl
pop
psubusw
pusha
inc
mov
movsb
mov
pop
iret
jle
adc
mov
ds
add
inc
or
mov
mov
xchg
push
incl
and
jbe
cmp
fcmovb
pop
fisubrl
movsb
cmpsb
xchg
dec
jmp
ror
mov
mov
jns
gs
es
lcall
push
outsl
pushf
les
mov
xchg
jmp
popf
cmpsl
mov
push
mov
push
sbb
outsl
mov
push
fsubp
in
adc
leave
mov
mov
lahf
mov
imul
daa
xchg
loope
inc
mov
adc
int3
mov
mov
std
sub
lret
sub
inc
jne
pop
stos
mov
popf
fistpll
jnp
sub
pop
sbb
dec
and
test
mov
lahf
clc
push
mov
mov
dec
jo
dec
insl
cmp
push
pop
jecxz
mov
or
adc
pushf
sub
adc
and
jbe
pusha
popf
cs
int
sub
clc
lock
xor
sub
push
fstl
push
in
sti
add
push
mov
fnstcw
xchg
test
int3
fcmovu
adc
mov
sub
nop
or
xor
mov
insb
jns
loopne
cmp
test
pop
out
cmp
in
aaa
xchg
in
sbb
jmp
outsb
push
pop
fistps
mov
jae
mov
fucomp
dec
repz
std
push
imul
imul
insb
pop
aas
xchg
in
jbe
insl
cmp
pop
mov
lret
mov
lcall
test
pusha
movsb
lods
mov
loopne
ljmp
fbld
fimull
or
mov
frstor
lcall
cmp
mov
xchg
test
mov
icebp
jnp
cltd
fstpt
cmp
push
lcall
or
add
je
ret
sbb
inc
and
das
imul
stos
pop
jl
cmpsl
mov
xor
outsb
out
cld
xchg
or
push
mov
jmp
pop
dec
sbb
call
push
lea
stos
loope
sub
inc
loopne
mov
lods
jbe
dec
scas
arpl
movsb
fld
cld
out
push
pop
mov
push
mov
sbb
imul
icebp
int3
jge
jge
or
out
lcall
cmp
fidivrl
pop
orl
leave
imul
dec
in
mov
cmpsl
cmp
jmp
pushf
ret
cmc
cmp
push
sub
cli
flds
imul
dec
xor
sub
in
orb
in
shll
mov
imul
sbb
adc
rcrb
add
xor
out
cli
iret
pop
cmpsl
mov
cmpsb
lahf
jmp
pop
cli
test
mov
popl
sub
iret
add
mov
out
punpckhdq
repz
push
arpl
push
sub
dec
dec
pop
mov
out
stos
out
xor
and
cmp
pop
cmp
mov
test
mov
dec
mov
mov
ret
push
cs
repz
stc
outsl
jg
out
cltd
shl
cltd
jo
xchg
mov
push
mov
fsts
stos
and
lods
dec
xchg
mov
pop
sbb
pxor
loopne
dec
mov
push
ret
movsb
js
mov
pop
pop
pop
sbb
pushf
and
sbb
pop
in
jp
dec
out
loope
pop
outsb
pslld
out
ljmp
insl
add
sbb
pop
inc
shll
and
pushf
dec
mov
mov
add
dec
sti
push
cltd
mov
push
xchg
mov
fstps
mov
cmp
adc
sbb
js
sub
nop
popf
pop
adc
and
add
lcall
dec
loopne
mov
jecxz
fld
aaa
loopne
mov
loop
and
cmp
mov
mov
cmpsb
cwtl
fdivrl
mov
mov
sub
mov
jmp
lahf
dec
outsl
imul
lds
pushf
je
fdiv
jg
mov
xor
cmp
mov
push
mov
lret
popf
popa
xchg
dec
jmp
std
mov
cmp
jmp
fildll
arpl
test
movsb
jp
mov
sub
push
and
sub
pop
stos
inc
lret
pop
shlb
and
addr16
dec
add
push
xchg
xor
adc
iret
cwtl
lea
sbb
inc
xor
pop
cmp
xchg
cld
xor
ss
cmpsl
and
cmpl
and
les
pop
leave
mov
dec
push
rol
mov
ja
cwtl
testb
pop
lahf
pop
mov
lea
repz
sbb
cld
lcall
cmp
inc
inc
mov
mov
out
dec
cmp
jae
lret
call
fimuls
fldcw
rolb
mov
jmp
sub
mov
in
cli
and
stos
into
enter
insl
bnd
enter
insb
mov
outsb
pusha
cmp
jne
cmp
and
nop
mov
inc
xor
add
shrl
loope
mov
lret
loop
mov
stos
outsl
inc
outsb
xchg
data16
or
mov
xchg
out
pop
sbb
div
loopne
scas
repnz
push
test
or
ret
mov
out
push
hlt
adc
sbbl
push
aam
int
out
xor
aas
xchg
mov
je
or
ret
jns
sub
push
test
jmp
test
out
sbb
ret
push
pushf
jmp
iret
test
outsl
cmp
jg
stos
jno
mov
adc
mov
scas
data16
push
mov
or
std
xor
andb
mov
cmp
sbb
scas
loope
out
xlat
xchg
aas
mov
lds
ds
lds
inc
pushf
mov
cmp
cmpsl
or
mov
rclb
or
loopne
and
cli
sbb
ret
hlt
cmpsb
rcr
mov
test
movsb
testb
inc
push
test
add
pop
lret
xchg
pop
test
cmovns
push
pop
les
fnstenv
nop
ret
fcompl
sbbl
cli
pop
std
lret
ja
xor
cmp
movsb
pop
call
push
lahf
lods
ja
lods
pop
icebp
pushf
push
or
sbb
xchg
pushf
scas
pop
push
mov
adc
outsl
add
pop
and
xor
dec
out
imul
mov
fimuls
mov
scas
in
rcrl
loop
add
es
mov
loopne
clc
pop
fbstp
jge
in
mov
jmp
push
or
rorb
or
adc
mov
arpl
sub
in
scas
mov
xchg
fincstp
in
ret
ljmp
or
and
or
push
sub
or
fs
data16
add
adc
test
std
dec
frstor
int3
lods
scas
cmpsl
dec
lds
cmp
push
adc
fstp
jne
sbb
int3
mov
stos
sbb
and
in
lea
lea
xchg
lret
jge
les
xchg
js
cs
mov
mov
enter
flds
movsb
pop
push
insl
int3
andl
xor
sysret
mov
mov
cmp
pop
sbb
jmp
lret
sub
nop
pop
cmpsb
push
clc
mov
lods
jbe
movsl
or
lock
loopne
clc
dec
or
jnp
mov
fcmovbe
jp
or
movsb
dec
jb
aam
sti
sub
sub
xchg
stos
inc
add
sbb
arpl
jle
xchg
mov
inc
mov
popa
and
fucomi
cmp
push
cltd
add
cmp
cmp
cmpsl
or
cmp
out
mov
nop
sbb
adc
or
push
pushf
js
test
leave
into
jge
inc
in
insb
js
push
push
xor
mov
ss
dec
lcall
cmp
push
adcb
fsts
jle
xor
push
scas
jae
fcomps
arpl
dec
test
data16
jg
in
imul
fimuls
mov
icebp
icebp
lahf
inc
cmp
jmp
in
push
je
inc
jecxz
mov
sub
xor
mov
adc
leave
inc
test
fsqrt
js
xchg
outsl
icebp
je
inc
dec
nop
sti
int
arpl
pusha
mov
cmpsb
cltd
fldenv
mov
imul
in
jle
out
popa
pop
push
sbb
inc
out
rcrb
xor
mov
xor
and
cwtl
inc
scas
stos
sbb
in
outsb
fistl
jle
fnstcw
sub
sub
adc
lods
push
out
ds
and
mov
adc
pushf
enter
sub
in
sub
jns
mov
outsb
sub
cmpsb
lcall
inc
lret
adc
scas
mov
pop
mov
data16
notb
cmp
xor
sahf
leave
mov
mov
mov
cmp
mov
into
leave
or
ret
hlt
jbe
xchg
mov
fldl
lcall
addr16
jae
pop
callw
out
out
cmpsb
dec
lods
jae
ja
data16
cwtl
in
sbb
jb
xchg
pushf
inc
sub
jne
mov
test
shll
mov
popl
adc
mov
xchg
popl
cmp
outsb
out
jmp
cmpsl
sti
pop
ja
dec
mov
cld
insb
dec
pop
pop
pop
fistl
xor
push
and
cmp
inc
xchg
sbb
ja
mov
jecxz
ret
inc
pop
push
sbb
sub
jle
jecxz
jnp
pop
ja
sub
add
pop
mov
shl
ret
sub
mov
sub
push
jns
jmp
int3
in
mov
sub
xor
popf
out
jnp
in
add
ss
mov
dec
pop
xor
in
xchg
lret
outsl
adc
fwait
sbb
mov
jl
mov
jp
in
and
jno
lret
popf
lea
fscale
dec
ret
inc
cmp
xlat
out
outsb
lret
pop
mov
int
or
fs
dec
sbb
jecxz
sbb
shrl
xorl
insl
cmp
insl
pushf
or
jns
mov
scas
jge
bound
stos
sti
es
mov
mov
lret
lea
xor
or
sti
mov
add
out
and
std
jne
test
push
movsb
cltd
mov
loop
add
dec
in
xor
jecxz
mov
cld
out
fucomp
faddl
adc
adc
push
sti
rcl
in
out
cld
stc
std
jb
int
cmpsl
mov
jmp
push
jp
jns
add
dec
xchg
out
sub
icebp
jmp
in
push
dec
or
inc
imul
adc
scas
movsb
or
xchg
fldt
sbb
out
cmc
out
inc
movsb
cmc
push
xchg
adc
cmc
shll
inc
and
and
insl
jg
scas
ss
inc
lds
enter
ffree
or
jp
adc
pop
push
movsb
sbb
jnp
mov
cmpsl
movl
jg
sbb
jle
inc
and
inc
or
inc
es
out
pop
push
inc
sar
mov
pop
cmc
movl
mov
imul
ljmp
push
sub
shll
push
xchg
scas
int3
fsubp
fldt
shlb
insb
outsb
ss
sar
and
les
inc
movsb
mov
mov
sbb
inc
jmp
aad
rclb
jmp
or
inc
fcoml
rcr
cmc
cmpsb
sbb
jle
jl
ret
jns
pop
test
scas
and
scas
push
cmp
mov
int
jge
into
movsb
test
in
dec
xchg
sub
fldlg2
cmpsl
pop
adc
jl
imul
xchg
sub
ja
jge
stc
stc
ja
imul
repz
dec
mov
mov
fsubp
sbb
outsl
lods
or
mov
xchg
in
inc
stos
out
lahf
lcall
cmpsl
jp
cmpsl
jle
mov
sbb
loopne
out
pop
xchg
insl
scas
cltd
ja
cld
mov
icebp
addr16
insb
ljmp
dec
pop
pop
push
jp
xchg
mov
jp
xchg
ds
add
frstor
mov
in
xlat
fcmovb
cli
out
and
pusha
rol
loop
into
jmp
scas
mov
xor
pop
mov
bound
rcrb
test
adc
mov
popf
push
testl
int3
cmp
mov
dec
ss
and
ficompl
and
push
vpsubw
and
das
or
lea
jmp
int
cli
mov
push
lahf
mov
mov
test
pop
std
sub
lret
jp
mov
shrl
mov
and
xchg
pushf
in
inc
add
pop
push
sub
pusha
lock
mov
cmp
add
in
loope
pop
pushf
push
fwait
pop
mov
mov
sti
xchg
add
or
decl
or
xchg
lret
dec
cmpl
stc
lret
lea
jb
lock
push
push
aaa
out
push
push
jl
pop
outsb
pop
and
jl
jbe
sbbl
ret
xor
sar
push
push
rclb
add
loopne
out
movsb
push
xchg
lret
stc
cmpsl
sub
pop
fwait
mov
cmp
or
subb
lods
stc
cli
mov
xchg
add
leave
cmp
jbe
mov
fcoms
xchg
imul
cmp
ljmp
mov
lcall
adc
xor
xchg
dec
dec
mov
xchg
ss
stos
decb
cmpsb
jae
sub
push
jbe
push
dec
sub
dec
pop
pop
cld
or
and
pop
jmp
push
sub
mov
adc
inc
pop
addr16
inc
jg
inc
fstps
in
pop
lahf
push
sub
pop
adc
xlat
das
sub
mov
jne
fildl
pop
and
jae
and
insb
stos
arpl
dec
adc
dec
adc
movsl
loop
cmp
dec
pop
mov
bound
das
xchg
inc
scas
sarl
addr16
adc
dec
mov
in
push
into
mov
cmpsb
sbb
push
dec
out
lods
add
dec
icebp
mov
mov
bound
or
jl
into
jmp
std
mov
lahf
jo
out
clc
nop
push
out
test
stos
mov
clc
sub
mov
call
xchg
test
jl
shrl
mov
int3
les
push
sbb
sub
rcrb
jnp
xor
push
clc
enter
inc
lea
jp
jge
frstor
shlb
inc
iret
movsb
into
aas
ret
test
cld
iret
fsubr
imul
lods
lcall
fists
ljmp
mov
add
push
and
test
out
pushf
cltd
dec
sub
es
cltd
sbb
push
int
lds
mov
cmp
or
xor
mov
in
mov
jg
add
ds
jecxz
mov
mov
mov
cmc
or
sub
cmpsl
nop
test
ja
sar
push
stos
jle
xor
lds
rolb
jmp
cs
sbb
dec
pusha
and
imul
xchg
push
jp
test
fcoms
fcompl
dec
xchg
jg
mov
cmpsb
xchg
push
out
mov
xchg
xor
mov
out
jge
fistpl
lret
adc
cmp
mov
out
aad
sahf
call
adc
pushf
cmp
jb
push
xor
iret
scas
dec
adc
out
js
mov
xor
rcrl
add
fst
jbe
dec
insb
xor
je
lret
aas
fs
cmp
subl
cmpsl
mov
cmpsl
rolb
mov
adc
pop
in
lea
or
addl
sub
std
leave
stos
cmpsb
jl
sbb
push
xchg
and
adc
jmp
xchg
mov
inc
ficompl
lds
out
xchg
fisubl
sbb
sub
faddl
adc
dec
mov
xor
cs
pop
mov
mov
les
pop
sub
cmp
push
mov
push
das
mov
push
test
sarb
jb
xor
jle
inc
sub
rcll
jl
mov
ljmp
std
inc
jbe
inc
leave
mov
sub
cmpsb
hlt
lret
pop
pop
sub
loope
lret
cmpsl
xor
int3
in
nop
and
xchg
insl
cmp
push
mov
jnp
inc
jbe
xchg
pop
xor
rcrl
mov
data16
ja
and
out
dec
lods
lcall
stos
bound
fdivrl
mov
xor
in
imul
fnstsw
test
ja
jbe
jle
xchg
mov
add
dec
cwtl
js
jo
mov
ds
mov
mov
addb
lea
mov
cmpsl
mov
fwait
movsb
push
mov
outsl
fldcw
loope
test
cmpsb
lahf
adc
jns
dec
sub
hlt
xor
or
insl
push
mov
jno
fidivrl
sub
mov
dec
fstps
test
mov
mov
sub
mov
dec
jmp
pusha
out
stos
mov
aaa
cmp
mov
icebp
jge
inc
js
adc
aam
dec
adc
insb
sbb
jbe
mov
jmp
imul
stos
loope
ret
dec
out
and
lea
jmp
pop
sub
jp
mov
popl
mov
mov
add
jmp
inc
fnstcw
ss
out
adc
pop
xlat
mov
loope
iret
movsb
mulb
pop
push
in
cmc
cmp
sbb
jae
dec
mov
xor
popf
mov
decb
inc
jne
sti
hlt
insl
cld
xor
sub
in
dec
rorb
xor
dec
cwtl
orb
or
rolb
imul
lret
outsb
mov
pop
cmp
cmc
enter
in
mov
icebp
jp
cli
stos
imul
push
fidivl
imul
adc
call
push
inc
cmc
mov
scas
outsl
push
sbb
add
add
in
jp
cltd
les
xchg
clc
fldcw
clc
xor
das
sbb
insl
cmpl
sbb
jno
test
xchg
aaa
sbb
dec
inc
jp
aas
test
cmpsb
pop
addr16
pop
mov
rcll
mov
arpl
loope
int3
test
jmp
adc
lea
inc
jmp
lods
lahf
mov
mov
xor
out
sub
enter
scas
mov
cmpsl
test
sub
movsb
jecxz
ljmp
mov
inc
mov
mov
fdivr
arpl
pop
addr16
mov
movsb
sub
fcom
or
in
out
sub
push
mov
cld
fisubl
movsb
les
mov
fucomip
sbb
lret
cmp
cmp
out
pop
cli
push
mov
sub
stos
cmp
cmp
scas
cli
test
ljmp
and
ljmp
sub
cmc
push
stos
adc
mov
sub
cltd
imul
sub
shl
in
jp
mov
lods
lods
fmull
cmp
jns
outsl
lods
cli
fcompl
scas
jnp
jmp
fidivl
ret
ret
shl
cli
jne
jmp
jbe
pusha
xchg
mov
je
leave
push
inc
ror
enter
push
frstor
pop
jns
loop
fs
scas
test
ljmp
in
std
inc
push
fisubl
pop
hlt
out
xor
outsl
stos
out
mov
adc
mov
jl
ljmp
les
sub
ret
mov
das
movsb
push
pushf
fstps
stos
pop
in
enter
inc
test
sub
cltd
inc
mov
into
fsubrs
loopne
stos
lret
mov
inc
push
out
pop
xchg
dec
popa
scas
add
inc
pop
frstor
js
icebp
jl
sbb
xchg
jmp
loope
jae
inc
lahf
cmc
shlb
loop
scas
sub
outsl
movsb
sub
in
mov
data16
repz
loopne
imul
jnp
push
repnz
shlb
pop
or
mov
adc
xchg
push
push
movsb
adcb
push
sbb
pop
mov
int3
inc
xchg
aaa
rol
lock
xor
pop
xor
sbb
dec
xchg
push
andb
mov
ror
jecxz
xlat
and
test
push
cmp
fsubp
ljmp
imul
shl
push
insl
jge
sbb
loopne
mov
mov
sub
sbb
inc
addl
jmp
cwtl
xchg
mov
js
push
in
pop
pop
loop
fwait
scas
sub
repz
or
adc
pop
mov
and
cmpsl
fcom
jp
test
std
andl
loopne
jmp
jo
js
fwait
out
pop
ret
pop
pop
cs
test
loopne
int
xchg
jl
pop
cltd
mov
add
lret
cmpsb
aas
sbbl
pop
mov
daa
pop
sahf
std
sbb
outsl
mov
pop
fwait
sti
add
cmp
pop
push
int3
int3
pushf
jmp
cs
xchg
inc
sub
sti
push
ja
jp
mov
fs
mov
pop
fxch
push
jne
int
and
xchg
or
lods
xlat
mov
push
lahf
fildll
lods
pop
arpl
iret
jnp
pop
cmp
orl
lds
cli
cmp
insl
jecxz
out
je
call
dec
mov
imul
pop
stos
pmaddwd
mov
mov
cwtl
sbb
lret
loopne
cmp
pop
cmp
pusha
xor
jns
push
test
and
and
mov
and
pop
jno
mov
fmull
loopne
lahf
sub
ljmp
lret
adc
sub
mov
insb
ljmp
aas
hlt
xlat
lods
pop
shrl
nop
mov
repnz
xchg
scas
loop
aad
and
fimull
jbe
lret
pop
rorb
in
cmp
paddsb
mov
dec
sub
mov
jo
mov
mov
orb
lea
shll
mov
mov
cwtl
leave
lahf
mov
popa
pop
pop
sahf
in
dec
aas
inc
push
mov
jns
lods
lods
cmp
scas
aad
stos
pop
shll
jbe
pop
shl
cmpsl
test
test
fyl2xp1
mov
cmp
mov
ljmp
repnz
adc
mov
jmp
adc
pop
int3
jmp
mov
xchg
sbb
inc
cmc
pop
jb
xchg
inc
add
cmp
repz
stc
cmovge
pushf
mov
jecxz
or
out
insb
sub
popa
out
cltd
xchg
xor
xchg
icebp
mov
cmpsl
arpl
rcrl
xor
mov
es
or
dec
inc
lcall
and
lret
xlat
cld
cmpsl
xchg
mov
lahf
mov
imul
mov
jnp
lcall
repnz
adc
sub
js
jbe
lret
push
xchg
data16
or
sbbl
fsubrs
push
jne
in
cld
scas
pop
movsl
sbb
fisubl
pop
adc
ret
lods
popf
dec
cmpsb
iret
and
push
stc
mov
pop
movsl
mov
lcall
cltd
adc
push
mov
and
jmp
ret
call
push
test
movsl
adc
notb
sub
data16
js
stos
or
out
or
lahf
in
outsb
lea
dec
enter
idivl
mov
cmpsb
cmp
dec
pop
nop
lods
cmp
sub
and
dec
and
cmp
sub
sarl
adc
pop
sub
and
mov
lahf
js
pop
movsl
ljmp
sub
pop
js
shrb
aaa
push
in
mov
pop
and
inc
jecxz
pop
sub
out
push
and
push
aad
cmp
addr16
pop
or
iret
imul
jl
fs
and
ljmp
sbb
sub
and
cmc
ss
shl
inc
xor
lea
inc
lock
iret
and
imul
mov
test
mov
fcoml
pop
sub
lret
adc
inc
jns
or
mov
cli
sub
mov
cltd
mov
mov
outsb
loop
sbb
dec
movsl
mov
dec
push
push
mov
aaa
movsb
stc
test
cmp
ret
push
sub
mov
lods
mov
or
xchg
test
lret
adc
push
lds
xchg
dec
dec
test
pushf
push
aaa
popf
jnp
fdiv
inc
mov
in
movsl
repz
fs
cmp
lds
dec
test
std
out
es
ss
sub
lock
dec
sub
je
and
push
aam
scas
das
sub
mov
add
in
add
lret
insl
jmp
jo
pusha
dec
push
fcomps
lea
mov
mov
clc
enter
mov
xor
mov
popa
loope
es
xorb
xor
mov
in
lahf
fld
jns
pop
xlat
xchg
adc
cs
ja
push
outsl
dec
adc
xchg
clc
cmp
imul
outsl
lods
sub
jns
push
sub
sub
pop
sub
fldenv
jnp
stos
stos
sti
ja
and
insl
push
and
clc
sub
push
pushf
lcall
cmc
push
cmp
mov
xchg
sub
pop
push
lods
fs
leave
dec
scas
push
pop
insb
mov
mov
or
ret
mov
lock
call
insb
sti
lock
clc
adc
push
ljmp
jae
in
pop
lods
fdivrs
add
shrb
bound
cli
nop
fidivl
fwait
mov
adc
mov
mov
aaa
loop
or
cwtl
addr16
shl
sbb
mov
push
xchg
movsb
movsb
ljmp
test
lcall
sbb
lret
call
mov
pop
mov
and
lret
xor
hlt
mov
ljmp
mov
adc
xchg
sbb
push
cmp
cmpsb
jo
es
jo
sub
mov
lods
pop
cmp
in
cmp
fimull
out
mov
push
stos
pop
xor
lcall
push
nop
sub
sti
inc
push
rdpmc
pop
shr
dec
clc
cmp
or
rcll
jne
mov
test
jge
adc
int
dec
cmp
fmul
push
xlat
fstpl
movsl
int
mov
and
call
dec
inc
enter
jbe
xchg
neg
xchg
std
nop
jne
mov
lock
loop
xor
roll
pop
leave
jae
cltd
in
fmuls
push
mov
call
cmp
pop
out
pop
or
inc
mov
sub
ret
cmpsb
cmp
mov
sub
pop
es
jmp
xchg
or
pop
test
int
jb
scas
outsb
adc
push
sahf
test
bound
pusha
test
fiaddl
scas
cmp
rclb
addr16
pop
cmp
aaa
es
sub
mov
mov
sub
shlb
sub
sti
sub
sub
pop
jl
sub
lret
cmpsb
and
imul
mov
rcll
cmp
jmp
or
fildll
or
mov
sub
push
int
or
cmp
xchg
xchg
sub
pop
gs
and
and
push
pop
js
adc
fnsave
fldl2e
mov
add
getsec
leave
sub
loop
jp
cmp
cmp
fnstcw
mov
shrb
cmp
inc
lcall
pop
or
je,pn
pop
cmp
add
fcompl
inc
rorl
jge
mov
xchg
in
enter
ljmp
xor
pop
fildll
cli
cmp
fucompp
rcrl
dec
or
cwtl
sub
cltd
addr16
pop
pop
adc
pop
jp
xchg
adc
ret
sub
out
pop
hlt
shll
movsb
ss
mov
jns
cmp
cld
mov
sbb
push
cld
dec
xchg
int
xor
outsl
mov
arpl
push
out
dec
mov
pusha
push
popa
push
stos
shrl
cmp
mov
and
lret
mov
push
and
jmp
in
rorl
push
and
fnstsw
push
jmp
cmc
push
and
sti
adcb
and
mov
sarl
pop
gs
mov
pushf
dec
jbe
aas
mov
pop
and
xor
testb
sbbl
hlt
or
push
dec
aaa
iret
and
addr16
fsubr
sub
cmp
mov
pop
inc
jbe
pop
push
pop
pop
pop
sbb
add
adc
mov
in
add
cmp
jb
imul
sbb
add
sub
mov
call
or
or
adc
outsl
mov
and
mov
ja
jns
jl
mov
lret
icebp
std
sbb
mov
mov
mov
sbb
add
test
outsb
popf
enter
or
cs
sbb
div
int3
jns
outsb
mov
mov
push
or
addr16
jae
scas
in
test
pusha
aam
push
int3
lret
dec
test
fcmovu
push
inc
mov
flds
xor
ret
jmp
ret
dec
int3
inc
movsb
ret
mov
loop
push
nop
shl
xor
lods
bound
js
popl
jmp
add
sub
neg
and
stos
loopne
fisubl
sub
imul
into
inc
sub
std
leave
jmp
dec
mov
imul
dec
jp
jmp
lods
test
dec
out
push
add
shr
int
dec
jo
or
out
xor
aad
dec
mov
in
ret
in
mov
movsb
lods
xor
stc
push
lock
push
addr16
in
adc
and
push
lcall
cmp
ja
adc
shrb
in
add
jmp
xchg
call
fcomps
and
cmpsb
or
lock
add
jo
bound
mov
mov
les
daa
clc
and
jne
jns
aad
lock
inc
lahf
fldenv
adc
mov
jo
inc
int
pop
xchg
ds
add
push
dec
sub
cmp
ficompl
es
fsin
or
add
jp
divb
sub
das
ds
stos
scas
jnp
mov
and
jp
jmp
iret
in
ret
fwait
addl
fldt
lods
movsb
hlt
in
dec
les
cmpsb
nop
ds
sbb
aad
pushl
stc
push
sbb
je
cmpsb
pop
lods
movsb
and
push
sub
sub
mov
loope
psubusb
incb
xlat
subl
inc
arpl
pop
cmpsl
mov
add
call
pop
mov
mov
or
sub
mov
or
or
and
cs
sub
movsl
fimull
test
xchg
cwtl
pop
xchg
jmp
push
mov
outsl
test
jbe
in
gs
shll
and
mov
sti
push
mov
lods
sbb
mov
cs
push
sub
xor
sub
and
je
inc
fsub
mov
adc
xor
insb
mov
insl
mov
outsb
push
rorb
pop
inc
hlt
jae
stos
xlat
dec
or
cmp
rol
push
cli
aam
or
enter
sub
fldl
mov
sbb
add
popa
adc
and
adc
push
rorb
push
popf
insb
push
or
or
push
dec
lret
pop
test
pop
jl
sahf
pop
ss
shll
inc
and
stos
sub
add
push
and
xor
or
out
addr16
mov
psubusw
stc
cmp
das
or
sbb
iret
xchg
cmp
addr16
mov
xor
call
pop
pop
insl
out
sub
dec
mov
fsubrl
sub
xchg
fdivrs
lahf
fs
push
cmp
fwait
jnp
rcr
pop
add
pushf
popa
dec
stos
aas
cmp
aaa
pop
dec
pop
rclb
mov
test
lds
test
ret
sbb
pop
dec
sub
stc
pushf
aaa
fsubs
ds
ret
imul
dec
sbb
pop
jp
mov
inc
dec
or
pop
call
xchg
cmpsl
leave
push
subl
test
stos
int
mov
das
lods
pop
and
ja
out
loope
pop
ret
int3
lea
mov
out
sbb
cmpsb
shll
out
and
lret
jecxz
jmp
and
test
mov
push
mov
fsubp
xor
mov
movsb
cmpsl
nop
adc
stos
jl
out
jns
pop
push
arpl
and
movsl
sarb
cltd
loopne
jmp
cmp
popa
out
out
into
les
inc
xchg
nop
out
sub
lods
mov
jecxz
fsubs
jno
outsb
xchg
clc
cmp
mov
mov
inc
mov
pop
mov
xchg
mov
jb
push
cmp
push
push
fisubrl
xor
inc
mov
cmp
clc
adc
test
mov
lods
pop
daa
push
mov
in
cltd
jbe
mov
leave
jmp
or
je
jge
in
xor
pop
aam
outsl
xchg
fistps
je
out
nop
cmp
add
push
sub
rcl
lahf
push
outsl
lods
out
adc
int
ret
in
loopne
movsl
xor
jo
push
inc
leave
pop
lods
imul
fs
push
xor
lods
push
sbb
dec
int3
cltd
out
sbb
pop
fcoml
adc
mov
pop
popf
jmp
mov
or
ljmp
dec
pop
icebp
dec
out
cwtl
outsl
xchg
mov
repz
sarl
pusha
adc
sub
push
cmpsb
mov
mov
stc
popa
enter
mov
add
int3
jnp
fimuls
mov
test
call
mov
es
test
lea
cli
leavew
cmpsl
pop
lcall
popw
ljmp
pop
test
rcll
pop
outsb
aaa
imul
fnstsw
out
push
pop
in
pop
lret
lret
gs
pusha
in
out
pop
ljmp
jle
xor
sub
nop
pop
sub
mov
adc
mov
mull
pop
mov
lcall
mov
lea
rolb
fimull
out
dec
jb
xor
arpl
stc
cwtl
aaa
jl
sub
mov
fsubs
pop
pop
adc
pop
push
iret
or
push
test
cmpsb
push
imul
js
scas
ret
sbb
daa
push
aad
movsb
clc
lods
inc
inc
cmp
inc
dec
mov
pop
xlat
inc
pushf
inc
cmp
mov
pop
jmp
ret
dec
sbb
inc
std
or
jns
mov
lret
arpl
push
ret
lods
mov
dec
ja
mov
adc
in
pop
inc
ljmp
hlt
sbb
inc
push
sbb
sbb
in
test
xchg
jp
nop
jbe
xchg
icebp
dec
lods
cs
shrb
out
xchg
add
mov
adc
mov
imul
jae
push
jo
mov
ja
or
xchg
ss
aas
jne
cwtl
pop
cwtl
scas
in
ja
fbld
fstl
addr16
lahf
sub
fldenv
fcomps
jmp
jbe
jl
push
inc
pop
bound
in
dec
or
jbe
ret
loopne
inc
pop
pop
add
xor
or
push
aas
push
pop
sub
xchg
sub
mov
add
xchg
fcomps
lahf
inc
push
and
lock
mov
adc
je
dec
dec
cwtl
pop
jl
xchg
or
push
xor
mov
in
xchg
mov
call
jp
notl
test
js
mov
test
jmp
mov
adc
mov
lcall
lock
divl
cld
popf
pop
mov
in
loope
pop
test
sub
cmpb
icebp
xlat
pop
xchg
decb
jl
mov
cmp
cmpsb
or
out
mov
fildl
cmp
jo
test
pop
sbb
inc
sbb
pop
adc
mov
bound
leave
out
push
mov
jl
push
outsl
in
adc
jae
in
call
dec
inc
jl
std
mov
mov
sbb
jmp
pop
test
movsl
dec
lahf
pop
pop
add
sub
pop
inc
xchg
mov
movsl
nop
and
mov
mov
mov
dec
stos
cld
xor
iret
xchg
rcrl
sub
je
pushf
jbe
divb
inc
dec
loope
add
adc
mov
adc
mov
aas
xor
scas
scas
jp
out
adc
mov
adc
or
xor
sbb
xchg
dec
outsl
les
scas
pop
pop
in
jp
pop
jle
sbb
mov
sbb
movsb
aad
xchg
rol
test
cltd
push
int3
in
cmp
mov
xor
faddl
pop
xchg
sub
cli
pop
imul
popf
pop
int3
jmp
lods
scas
add
xchg
mov
stos
dec
sub
nop
cmp
mov
or
dec
mov
pop
dec
cld
sti
push
js
cmp
aam
push
sbb
cmpsl
add
fimuls
add
sub
cli
ficomps
aas
ficoml
push
addr16
ss
mov
and
popa
adc
sub
xor
or
mov
out
scas
cltd
cmp
pop
or
out
aam
sub
pusha
or
notl
jle
mov
stos
cmpsb
and
mov
xor
in
and
ljmp
pop
mov
testb
lret
push
or
sub
sub
sbb
push
mov
scas
and
aam
into
and
sbb
std
cltd
mov
jmp
sti
mov
idivl
test
aaa
aaa
test
pop
mov
xor
mov
leave
mov
out
cld
xchg
int3
testl
push
cmp
push
sub
jle
movsb
out
jno
nop
repz
lock
test
jmp
sbb
mov
mov
jl
add
out
mov
mov
xchg
movsb
mov
std
lahf
push
xchg
ret
fcomps
nop
push
pop
xor
sbb
stos
stos
ss
or
or
fsubrl
loopne
aam
sahf
cltd
fs
or
push
lahf
js
sarb
call
ret
jns
add
sbb
xlat
mov
jno
mov
rclb
sbb
inc
inc
xchg
pop
mov
inc
adc
test
loope
sbb
iret
adc
mov
dec
mov
mov
mov
ret
pop
shll
push
jnp
sarb
out
dec
es
add
test
out
sbb
mov
mov
cmc
jl
cmp
push
dec
inc
fildl
mov
ds
sub
nop
fldcw
sub
sbb
xchg
mov
out
sub
cmpsb
adc
stc
mov
pop
insl
pop
pushf
sub
xor
in
cmpsb
stos
ljmp
negb
js
std
jg
icebp
jmp
pop
test
mov
or
push
stos
sbb
fsubrs
fucom
and
jbe
bound
sbb
jp
js
fisttpll
dec
je
fisttps
pushw
cwtl
mov
addr16
lods
mov
iret
inc
call
lock
cs
cs
lds
cmp
clc
jl
fiadds
mov
xchg
dec
mov
or
imul
push
push
push
or
and
subl
sbb
cmp
cmpb
or
daa
jb
jmp
push
leave
sub
rorl
mov
mul
cmp
sub
sub
push
call
xlat
mull
push
out
call
ss
mov
lret
popf
int
sub
lock
jno
stos
arpl
sahf
and
fnstsw
scas
jmp
nop
inc
icebp
pushf
xlat
ljmp
hlt
dec
loope
ljmp
push
out
leave
sub
and
sub
adc
mov
lds
mov
inc
sbb
jb
adc
jp
or
das
fdivs
mov
sub
ljmp
mov
js
jg
mov
cld
xor
lock
sub
stos
test
out
cmp
jmp
sarb
cmp
decb
jmp
or
out
stos
call
sbb
sbb
or
fistps
into
jmp
cmpsb
xchg
rcrl
xchg
insl
inc
scas
xor
jnp
mov
sti
lds
sbb
in
fwait
lret
cld
and
xchg
inc
pop
jne
popa
clc
mov
shr
dec
sbb
sar
jbe
lcall
add
mov
out
mov
sbb
test
clc
push
sub
jge
lcall
sbb
in
lea
movsl
xorb
dec
xchg
push
add
insb
push
jge
insl
mov
mov
ret
inc
push
or
mov
mov
in
jnp
cmovl
xchg
aas
dec
lods
loopne
and
add
lock
pop
mov
mov
inc
mov
je
fcoml
test
pop
push
stos
sub
sub
sub
cmp
mov
xchg
mov
daa
adc
stos
aam
push
mov
pushf
inc
frstor
mov
test
lahf
push
scas
mov
pmaddwd
pop
fdivr
outsl
or
test
add
pop
xor
and
popf
popa
test
jecxz
dec
aaa
sbb
stc
push
inc
lret
sbb
mov
mov
cmp
cmp
push
cwtl
fmul
add
jo
add
mov
sub
aaa
movsl
enter
xchg
mov
data16
dec
stos
pushf
stc
outsl
sub
test
data16
movsb
frstor
cmp
mov
ljmp
xchg
or
push
jg
add
scas
and
inc
and
shl
insb
jns
fisubrl
rclb
xchg
push
xor
fsubr
mov
jmp
jnp
cli
loop
fisubrl
arpl
dec
and
pop
in
and
test
movsl
jbe
xor
stc
jl
fsts
call
cwtl
loopne
push
mov
pushf
cld
call
mov
xorl
sub
dec
dec
insl
je
movsl
push
mov
gs
mov
inc
inc
pop
push
shll
dec
lahf
or
add
nop
mov
push
cmp
push
adc
loopne
xor
arpl
dec
jmp
lcall
sub
iret
stc
mov
mov
jge
jecxz
nop
or
sbb
jb
mov
fwait
in
into
out
or
push
test
in
fisttpl
scas
rcl
out
movsb
inc
dec
push
cltd
shr
jns
jecxz
and
pop
cli
dec
or
test
jecxz
push
cld
sar
rorb
sbb
and
jnp
sub
nop
add
and
jb
imul
cmp
jle
lods
xor
sahf
loop
lret
mov
sbb
lcall
mov
or
push
iret
sub
gs
sub
scas
popa
lcall
fsubrl
mov
cmpsl
rclb
lcall
movsb
fstpl
call
mov
xchg
imul
popa
hlt
movsl
sbb
out
out
dec
stos
pop
inc
popf
out
cmp
mov
or
mov
push
sub
fidivl
loope
jg
loopne
mov
dec
cmpsl
roll
and
pusha
cmpsl
xorb
dec
cmpsl
jmp
mov
or
cmpsb
jecxz
mov
pop
shl
push
mov
rcrb
stos
inc
dec
jmp
cmp
adc
mov
movsb
lods
mov
sbb
cwtl
orl
mov
push
inc
das
jmp
clc
into
dec
lcall
mov
outsl
cli
jne
addr16
lods
or
pop
xchg
mov
dec
pop
mov
cmp
sbb
jno
dec
fs
and
mov
addr16
sbb
hlt
cmpsb
lret
lods
jp
mov
or
lahf
jno
fldcw
call
icebp
adc
adc
imul
sub
movd
lds
scas
fdivs
mov
in
roll
sarl
xor
add
shrb
or
mov
or
cmc
add
inc
mov
jnp
outsl
mov
adc
xchg
inc
int3
inc
test
dec
jno
data16
stc
cld
inc
lcall
push
dec
cld
pop
fsubrl
adc
mov
mov
pusha
dec
int3
jnp
iret
or
adc
cmp
xchg
jbe
dec
push
test
outsb
pop
sub
outsl
sub
sub
fbstp
repnz
mov
jbe
in
aad
cs
jae
sbb
movsb
enter
push
jmp
cli
inc
out
int3
xchg
dec
lahf
sbb
or
add
stos
push
test
movb
fcoms
dec
cli
fildl
test
pop
repz
stos
stc
add
adc
loopne
popa
movsb
cmc
stc
insl
cmp
add
out
sbb
lahf
lret
adc
dec
push
addr16
mov
push
jb
mov
popa
lods
push
mov
int3
aas
jg
sub
mov
mov
and
dec
and
jnp,pt
outsl
or
scas
mov
xchg
dec
mov
or
mov
loop
adc
jge
jecxz
mov
fdivs
jnp
dec
add
fidivs
movsb
pop
scas
jnp
loopne
and
fimuls
jbe
mov
jmp
cs
dec
pop
arpl
jmp
xor
repz
fimull
mov
mov
pushf
addr16
jp
jp
addb
xor
push
push
testb
arpl
dec
add
movsb
xchg
dec
add
push
and
jbe
shr
inc
pop
or
dec
cmpb
int3
js
or
mov
rolb
test
jbe
push
cmpsl
sarb
js
les
and
add
lret
lahf
ljmp
fnstsw
jbe
xchg
xchg
cmp
int3
push
or
dec
enter
jbe
sub
push
fcmovne
jbe
rolb
shl
mov
adc
mov
mov
pop
sbb
pop
addr16
out
jnp
scas
sti
jo
scas
nop
xchg
and
jmp
inc
xorl
pop
mov
lods
mov
jnp
lds
xchg
movsl
cmp
xchg
pop
and
sbb
scas
push
mov
push
dec
shrl
lahf
repz
jge
mov
mov
jmp
jl
loope
push
lock
pop
test
sbb
cmp
xlat
pop
xchg
ljmp
inc
and
jl
cmpsb
push
cli
jne
out
jns
dec
sub
lods
ja
inc
mov
lahf
dec
jo
mov
je
xor
dec
int
out
xchg
lods
sar
inc
cltd
adc
and
sub
lock
and
push
mov
dec
sub
ret
test
nop
iret
pop
sbb
in
out
sub
jns
rorb
cs
sbb
xor
dec
sti
jne
sbbb
adc
leave
mov
xchg
mov
dec
jnp
or
and
cld
addr16
pop
int
cwtl
add
push
test
gs
xchg
mov
fwait
cmp
sub
mov
jl
movsb
and
cs
out
and
into
push
xor
adc
lock
add
xchg
test
js
mov
sahf
sub
and
mov
and
adc
and
mov
sub
xchg
nop
or
inc
movsb
mov
int
add
out
stos
sub
pushf
js
leave
aaa
adc
repnz
jmp
cmp
ss
and
push
rcl
xchg
pop
cld
xchg
stos
daa
jo
in
jmp
push
and
dec
aaa
std
xchg
push
rcrl
iret
jb
aaa
enter
pop
cltd
aas
pop
or
add
test
lods
lock
lock
mov
fidivrs
loop
out
pop
ds
lea
sub
outsl
dec
jno
and
ret
push
mov
loopne
sbb
dec
adc
fsubrl
pop
mov
ljmp
xor
xchg
aad
or
in
jl
xor
add
push
xor
in
dec
sub
xor
jle
icebp
popa
push
nop
int3
in
pop
in
daa
sbb
lahf
in
pop
lds
int
lds
pop
lcall
mov
cmp
je
std
mov
cmp
dec
icebp
mov
xor
inc
xchg
mov
fildll
rep
jo
push
sbb
and
popa
loop
arpl
inc
pushf
adcl
fmuls
int3
lds
loope
outsl
shll
pop
fstps
int3
stos
lret
fwait
and
ret
dec
sbbb
scas
jp
ret
pop
ret
add
repnz
sti
pop
mov
nop
sub
out
cwtl
push
push
sub
rolb
cltd
pop
pop
call
sub
in
jg
pusha
out
fcmove
test
add
adc
int3
nop
push
jae
mov
clc
mov
stos
push
je
fldl
mov
in
xor
cmp
jnp
push
shl
or
incl
int
movsb
int
mov
fwait
add
jne
xor
cmpsl
pop
or
mov
add
jmp
and
add
jb
in
movsb
out
int
shrl
push
andb
push
ja
rol
lods
xor
jbe
or
aaa
or
or
popf
addr16
arpl
movsb
mov
xor
inc
or
pop
jae
loope
push
imul
add
addr16
inc
and
mov
mov
push
mov
mov
and
and
cmovns
or
jbe
ret
mov
call
mov
outsl
xchg
sti
inc
inc
stc
mov
inc
cmp
in
pop
aaa
mov
fdivr
cmpsl
lock
rorl
out
leave
sbb
cmp
jg
xlat
or
or
test
jg
fdivl
inc
and
mov
lods
add
fdivr
jmp
pop
in
scas
sub
cmp
aam
out
pop
lcall
popa
movsb
adc
jb
push
aad
test
inc
and
jge
leave
inc
push
pop
sub
push
xor
outsb
rcrb
lret
dec
roll
push
cmpsb
rclb
daa
jecxz
out
stos
and
add
cmc
inc
and
stos
mov
xchg
pop
lret
pusha
das
or
jbe
push
pop
enter
mov
xchg
stc
mov
mov
cmc
lods
shll
mov
test
icebp
mov
mov
test
imul
stc
sbb
gs
in
mov
mov
mov
jge
sub
insb
aam
cli
jmp
cmp
repz
add
mov
xchg
push
jb
loop
std
lret
gs
nop
pop
test
or
mov
push
sahf
lods
add
pop
jo
imul
popf
lret
sub
adc
ficompl
pop
fldcw
xchg
cwtl
out
push
out
leave
in
std
jbe
or
ljmp
xor
cmp
out
jb
rcll
pop
out
test
adc
push
pop
jp
pop
jae
mov
out
push
push
pusha
or
mov
out
lea
adc
out
in
std
out
pop
xor
mov
movsl
mov
and
hlt
ret
pushf
jbe
negb
dec
jmp
cmp
pop
push
int3
or
aas
inc
mov
mov
addr16
loope
jmp
jmp
inc
adc
pop
mov
adc
mov
gs
mov
xor
or
and
in
clc
movsl
and
test
lret
insl
rorl
mov
fs
shll
clc
js
orl
inc
sbb
pop
imul
pop
inc
enter
lahf
dec
pop
enter
sub
sbb
dec
cltd
mov
fistps
pop
cmp
rcrl
iret
jbe
mov
cmpsl
in
ret
jbe
rcll
leave
push
test
or
pop
cmpsb
fistpll
add
test
fmulp
sti
lods
dec
inc
les
push
int
test
jbe
xchg
or
mov
imul
mov
lret
lods
in
or
cmp
fdivrs
adc
xor
insl
in
lock
dec
clc
inc
or
inc
mov
pusha
dec
add
push
mov
cmpsb
or
mov
out
pop
pop
in
pop
stos
jge
xor
sti
cli
dec
jecxz
bound
jo
dec
ljmp
mov
ret
in
clc
and
es
adc
cmp
xchg
jb
clc
jge
int3
jg
rcll
xchg
sub
push
mov
sarb
fstps
jg
cmpsl
lcall
cld
push
jmp
and
cmp
sub
cmp
dec
fxtract
push
dec
sti
adc
or
jmp
add
loopne
fimull
jmp
jb
and
mov
lods
leave
ret
mov
repnz
cmpsl
pop
dec
arpl
lods
jmp
popa
je
lret
mov
in
dec
xchg
imul
jae
lret
jecxz
mov
call
dec
sub
mov
aad
and
dec
pop
in
cmp
rol
pop
pusha
jmp
add
iret
push
in
out
mov
pop
fwait
sbb
pop
push
push
mov
or
sbb
push
shrd
lods
mov
sbb
pop
insl
and
lret
dec
cmp
pop
aas
pop
cmp
sbb
cmpsl
push
sub
cmp
mov
movsl
sbb
out
push
das
sub
in
jmp
mov
in
clc
cmc
aaa
push
sbb
jns
xchg
xor
add
or
jp
jb
kmovw
int3
int
pop
rorl
add
mov
mov
repnz
icebp
mov
adc
out
push
and
xchg
lea
mov
dec
leave
xor
loopne
push
push
push
imul
loop
sub
sbb
loope
sub
std
frstor
push
inc
dec
sahf
test
out
cmp
push
popa
jnp
adc
add
fbld
lods
aas
mov
mov
scas
sub
sahf
mov
int
mov
jo
scas
adc
cmp
roll
shrb
jbe
mov
cmp
xchg
or
pop
dec
pop
movsb
mov
xorl
std
adc
jge
fwait
loope
or
mov
adc
repnz
lock
icebp
cmpsl
aaa
push
cmpsl
jmp
sar
sub
cmp
test
mov
inc
cmp
or
push
outsl
pop
imul
push
or
xchg
or
leave
es
mov
stc
and
cmp
mov
add
stc
and
ss
jmp
loop
xor
sbb
pop
cltd
out
cmp
imul
pop
sbb
out
ljmp
pop
test
shrl
inc
xchg
inc
bnd
nop
add
xchg
sub
adc
sbb
xor
cs
mov
bound
outsb
test
imul
mov
es
xor
scas
push
lret
add
or
dec
movsb
negb
cmpsb
cmp
in
mov
or
push
inc
js
stc
hlt
cmp
sbb
push
shl
inc
daa
insl
pop
imul
push
frstor
outsb
jg
aas
cmpsb
adcb
adc
xchg
mov
pop
and
lods
sub
sub
push
psubb
sti
jne
mov
jne
sbb
jp
sub
mov
cld
loopne
outsl
add
call
mov
pop
popf
out
dec
mov
mov
rclb
push
sbb
push
or
test
xchg
ret
dec
out
in
adc
adc
mov
mov
pop
mov
mov
add
pop
lock
jp
xor
loopne
out
or
js
cmpsb
push
adc
in
nop
ret
nop
call
outsl
and
add
cmp
pop
clc
pop
adc
jge
and
test
jns
scas
mov
daa
out
addr16
jo
lret
and
loopne
and
subl
ret
sbb
lcall
mov
mov
outsb
lock
cltd
and
imul
outsl
jb
vpunpckhbw
test
jmp
test
jecxz
inc
inc
xchg
test
ret
test
or
dec
ljmp
or
jbe
xchg
jno
mov
outsl
adc
jmp
mov
mov
ret
std
dec
movsb
pop
lock
aam
aad
je
aaa
mov
pop
movsl
sbb
cs
xor
push
int3
xchg
xor
ds
mov
dec
pop
inc
into
mov
sub
jo
call
inc
jb
loope
sub
lock
into
mov
mov
arpl
xchg
sahf
pop
sub
mov
ret
sub
iret
out
jecxz
push
mov
sub
inc
sub
subl
stos
adc
cmp
cmp
pop
lock
xchg
mov
shlb
mov
xchg
xchg
dec
dec
sub
and
int3
mov
sbb
aas
jo
cmp
int3
idivb
cmc
xlat
loop
cmpsl
adc
adc
xchg
ss
inc
test
sarl
shlb
adc
xor
push
inc
fstps
and
stos
mov
inc
mov
jno
jmp
and
mov
pop
mov
loop
scas
shlb
js
test
fsub
stc
sub
sub
jae
mov
push
cmp
mov
shrb
cmpsl
mov
cmp
out
xchg
adc
lahf
xorl
mov
daa
or
lods
mov
ror
jl
outsl
fxch
pop
pop
repz
sbb
mov
dec
sbb
les
mov
inc
mov
fwait
rcr
cli
insb
pop
mov
nop
mov
and
iret
imul
dec
and
sub
jne
mov
fs
call
mov
add
sub
mov
das
push
in
call
pop
or
icebp
jbe
pop
icebp
inc
mov
leave
pop
xchg
inc
jp
cli
lea
xchg
mov
push
dec
js
ljmp
leave
hlt
jge
or
roll
mov
lea
scas
lods
dec
clc
in
in
leave
mov
pop
stos
das
mov
imul
jmp
lret
icebp
sbb
cmp
lret
mov
mov
cmpsb
inc
shl
xchg
pop
imul
cli
sub
ljmp
cmp
mov
inc
test
xlat
adc
cli
out
xor
mov
mov
sbb
clc
mov
ret
outsb
mov
das
cmp
xlat
mov
pushf
xchg
and
sub
imul
fmuls
add
imul
out
or
sub
data16
dec
ss
in
pop
mov
jo
in
es
xchg
xchg
sbb
mov
mov
mov
js
inc
xor
notl
iret
push
adc
lcall
ja
movsb
pop
mov
enter
jp
fnstsw
repnz
adc
popa
xchg
test
int3
sti
sbb
insb
out
and
movsb
out
or
lods
add
xor
mov
sbb
sbb
jbe
pop
mov
cmp
aam
sbb
lahf
pop
xor
iret
call
cvttps2pi
lock
sub
push
sti
lahf
pop
leave
std
jnp
std
cmpsb
popf
push
out
xchg
mov
movsb
inc
movsl
mov
mov
or
mov
adc
push
js
loope
xor
lods
cmpsl
lock
int
stos
mov
mov
jl
add
lock
jmp
cmp
or
popa
pusha
out
out
out
insl
or
leave
push
hlt
sub
lcall
mov
xor
out
inc
pop
aaa
mov
stc
leave
mov
lcall
cmp
pop
popf
lea
gs
cwtl
pop
clc
movsl
out
mov
xor
dec
add
negl
xchg
jp
pop
out
cli
xchg
mov
or
adc
jae
xchg
movsl
inc
xchg
jbe
inc
jnp
out
cmp
adc
cmp
add
jle
pusha
mov
fwait
pop
nop
push
outsl
adc
cmpsl
and
call
inc
push
fcoms
scas
pop
jecxz
jns
out
popa
ja
sub
out
xchg
test
iret
aas
fldt
mov
movsb
pop
fs
lcall
cmp
pop
test
sbb
aas
div
jl
mov
aam
dec
or
push
xor
push
pop
push
xchg
sub
cmp
mulps
dec
mov
stc
out
sbb
ficompl
pop
test
xchg
xor
lds
gs
mov
in
movsb
fnstsw
push
push
popa
mov
mov
cmpsb
mov
ja
lcall
mov
pop
ljmp
push
xchg
sub
fsts
mov
test
pop
lahf
les
rcr
sbb
lcall
imul
jne
mov
sbb
fsubrl
or
ror
adc
pop
outsl
aas
xlat
mov
inc
iret
sbb
test
inc
xor
dec
pop
add
fadd
cmp
mov
inc
push
dec
sub
mov
stos
push
push
addr16
xchg
gs
sub
cmp
cmp
inc
lods
xchg
pop
ss
add
adc
jl
cs
xlat
fidivrl
test
pop
sub
in
mov
adc
in
std
shl
lds
jmp
sub
movsl
sub
mov
push
push
jmp
sbb
repz
mov
mov
test
movsb
pop
gs
rolb
pop
in
and
outsl
pop
cmp
sbb
push
int
ret
arpl
xchg
outsl
mov
insl
mov
popf
in
push
or
mov
mov
or
ljmp
xchg
int3
cmp
xor
and
sbb
or
pushf
sbb
lods
addr16
dec
lods
mov
add
fbld
pop
jp
sahf
sbb
loop
and
push
pop
das
pusha
inc
outsl
sbb
xlat
dec
lret
mov
clc
adc
push
pop
add
mov
lods
sub
jecxz
sbb
aam
xchg
std
in
push
mov
mov
push
pop
imul
stos
int3
int
add
or
and
jmp
in
jb
scas
mov
push
cmpsb
add
sbb
xchg
in
cltd
mov
fsubp
lahf
pop
adc
cld
dec
mov
es
sbb
mov
inc
lea
jbe
add
leave
mulb
imul
inc
or
pushf
out
inc
out
in
adc
lods
mov
pop
nop
popa
lods
into
mov
xor
sti
orb
lcall
aaa
mov
sub
jg
push
lret
pusha
mov
sub
xchg
sub
mov
js
cmpsb
cli
insl
fdivrl
scas
adc
sbb
mov
imull
fwait
xchg
incb
sti
notl
add
enter
jmp
xchg
ja
jmp
outsl
ja
or
xorb
xchg
xor
jmp
jle
mov
out
cmp
loopne
pusha
fcom
movsl
or
pop
jmp
hlt
fs
fldenv
jmp
out
mov
dec
repz
sbb
pop
outsl
xor
or
std
jp
pusha
clc
pop
cli
hlt
js
push
pushf
imul
sbb
mov
jmp
mov
mov
aas
inc
ret
ret
scas
dec
fidivs
dec
pop
movsl
mov
push
lods
inc
sub
cmpsb
popf
dec
mov
jmp
dec
rcr
dec
loopne
cmpsl
pop
dec
call
sti
addr16
sub
xor
out
adc
pop
leave
jecxz
out
repnz
adc
in
iret
dec
mov
push
call
jl
adc
popf
cmp
out
les
mov
arpl
test
addr16
loope
test
dec
cmp
xor
add
add
mov
int3
rcr
stos
dec
pop
push
sbb
fldcw
imul
or
addr16
inc
mov
lret
test
arpl
lcall
or
pop
xorb
ljmp
cmp
sbb
dec
xor
push
in
in
insb
scas
sbb
addl
pop
fsubr
ljmp
int3
stos
and
push
sbb
aam
push
jb
lods
mov
out
cmp
out
mov
outsl
test
xor
cli
pop
es
fwait
arpl
imul
dec
jl
pop
xor
dec
push
or
aad
pop
loop
stos
lahf
fisttpl
into
data16
push
stc
jnp
sbb
test
cmpsb
stos
jbe
or
sti
or
in
pop
or
cmpsb
jmp
jecxz
or
xor
dec
jnp
sbb
lock
or
call
dec
adcb
cmc
push
mov
sbb
leave
jnp
cwtl
sub
jmp
repz
push
inc
fadds
sbb
or
lods
shrl
jo
xor
fisubrs
fucom
lahf
inc
mov
mov
lea
sahf
push
dec
enter
sbb
dec
loope
xchg
dec
ss
fbld
pop
das
and
lcall
jecxz
push
cwtl
imul
pop
or
or
in
cmpsb
mov
sub
mov
sub
test
out
icebp
mov
pop
into
push
jmp
cmp
push
inc
ljmp
jp
mov
daa
xor
int
insb
aam
mov
inc
cmp
pop
pop
fdivs
push
sub
addr16
in
push
pop
leave
inc
int
in
fidivrl
les
dec
in
lea
mov
mov
and
call
enter
pop
mov
js
popf
daa
pop
int
cmpsb
inc
lods
test
aad
emms
out
insl
imul
mov
lds
sbb
fildll
or
clc
mov
cmpsl
xor
sahf
push
dec
adc
mov
enter
mov
fsts
cld
sub
insb
test
rcl
pushf
or
test
int3
std
in
stos
scas
clc
sub
jmp
push
leave
jge
sub
imul
dec
ljmp
enter
sub
mov
das
jbe
shrl
adc
insb
dec
dec
fstp
xchg
xchg
lods
and
cmp
bound
call
pop
sub
outsb
lods
rol
and
inc
dec
shl
or
sub
push
leave
aad
leave
xlat
mov
jnp
fucom
mov
shll
cmpsl
lret
pop
movsl
mov
cli
mov
mov
test
mov
lret
std
mov
cmpsl
stc
lcall
enter
dec
loopne
nop
es
pop
test
nop
adc
stc
pusha
sbb
call
pop
mov
dec
stc
cmpsb
fmull
cmp
fwait
adc
mov
mov
add
loop
imul
sub
and
out
fnstenv
fisubrs
fimuls
jns
sahf
test
out
xor
push
jmp
out
or
cmpsb
mov
fcomp
jbe
mov
jecxz
aam
mull
leave
sub
pop
push
sahf
lods
leave
sub
rol
les
jnp
cwtl
mov
pop
or
cmp
mov
jge
mov
loop
jnp
cwtl
cs
stos
sub
mov
std
or
loopne
dec
jmp
mov
insb
xchg
sub
fbstp
push
dec
mov
add
test
push
mov
jle
fstl
and
clc
or
in
and
push
fldl
dec
shll
push
imul
adc
fsts
sub
mov
mov
cmc
pop
fsts
push
cmpl
repz
dec
in
nop
lcall
addl
fadd
dec
xor
ret
cmp
enter
lock
mov
ljmp
repz
iret
cmp
pop
sub
ljmp
clc
ret
fwait
aad
fisubrl
pop
lret
fidivs
jl
cmpb
push
stos
push
jmp
pop
cmpsl
push
mov
inc
push
test
pop
iret
push
lahf
mov
add
mov
sar
mov
leave
and
test
mov
sbb
nop
iret
and
mov
popa
sub
addr16
jecxz
mov
sub
xor
or
nop
lds
cltd
aas
imull
dec
cmp
in
aam
sub
mov
xchg
in
inc
sar
cmpsl
aam
enter
xorb
daa
in
shlb
push
jmp
jbe
inc
out
cmp
loop
fbld
test
call
push
add
sti
adc
push
fsubrl
in
inc
out
outsl
or
sub
rcrb
xchg
test
push
lahf
test
xor
nop
scas
and
pusha
scas
mov
test
sbb
fs
dec
es
repz
dec
imul
jl
call
movsl
lods
adc
leave
sti
jbe
cld
xchg
mov
jl
pop
bound
nop
mov
cltd
pop
xor
orl
subl
nop
and
mov
mov
je
pusha
leave
mov
jecxz
inc
push
dec
icebp
xchg
xchg
into
pop
movsb
sbb
fistpll
insl
cmpsl
out
lods
mov
les
sahf
and
fdivrs
aas
lret
gs
cmp
lds
jb
and
fwait
jbe
add
pop
add
data16
xchg
dec
cmp
inc
int3
jp
inc
subb
xchg
push
pop
push
in
stc
mov
test
leave
mov
dec
fsubr
or
pop
aas
sbb
push
out
jno
jbe
fmuls
btcl
les
movsb
int3
add
out
push
jns
mov
test
fldl
or
bound
fstp
repnz
jae
ds
jbe
lahf
insb
xor
xchg
jne
and
jl
cmpsb
xor
jnp
hlt
pop
rorb
insb
cmp
lock
iret
mov
xchg
ss
test
movsl
sub
out
or
xlat
and
adc
xor
mov
sub
jo
shrb
mov
movsb
lahf
clc
hlt
cmp
je
jno
mov
or
cmp
rclb
jp
lcall
test
scas
adc
and
dec
dec
inc
lret
and
in
gs
mov
jnp
pushf
inc
jmp
call
xor
imul
jmp
int3
gs
or
push
and
sti
push
adc
outsb
cmp
lds
cwtl
in
test
xor
push
or
mov
les
in
xor
add
inc
ret
cmp
mov
jg
je
xchg
jle
jno
xor
jb
cmp
aaa
or
mov
js
out
sbb
xor
sbb
insb
aaa
sbb
dec
out
or
xor
xchg
mov
xor
test
data16
jbe
pop
aam
out
xchg
mov
popf
mov
ljmp
xchg
cmpsb
mov
cmp
std
fbstp
mov
hlt
push
stc
aas
xchg
scas
jbe
scas
pushf
and
mov
or
scas
in
xor
xor
sub
repz
cmpsl
sub
sub
int3
ja
push
lcall
imul
sahf
jmp
jge
adc
jo
sbb
loopne
adc
xchg
inc
push
mov
jmp
pop
loop
or
lock
insb
into
insb
lahf
add
mov
or
std
jge
jp
dec
js
pusha
in
in
mov
jmp
jge
ljmp
imul
clc
sarb
or
cmp
cltd
jne
lahf
jnp
xchg
lcall
cmpsb
pop
pop
xchg
movsb
push
sub
lods
cmpsl
sbb
int3
lods
lret
sbb
shrl
sarb
fldenv
aas
sub
fptan
mov
daa
sbb
and
push
pop
mov
dec
fldcw
and
fcoml
ds
dec
popf
arpl
repz
sbb
mov
jmp
fdivrs
ret
pushf
mov
stos
lahf
stc
je
and
fdivrl
sub
out
out
mov
popa
in
enter
imul
or
fsubrl
mov
aaa
mov
mov
icebp
mov
sub
add
mov
adc
popf
popf
or
mov
shll
lds
lret
lea
cmpsl
sub
jmp
inc
fildl
pop
fldenv
xchg
or
jo
jbe
ljmp
and
scas
fprem1
repz
jne
or
fsubl
or
insb
outsl
sbb
stos
arpl
mov
aam
gs
cmp
scas
xchg
push
sub
mov
sbb
insl
adc
sub
enter
push
cld
enter
roll
dec
in
outsb
ficoms
sti
dec
jmp
ss
cwtl
xchg
out
ja
xor
dec
out
push
pop
inc
add
aam
fistl
cmpsb
cmpsb
mov
sahf
ljmp
inc
jns
fs
jmp
pop
mov
ror
jbe
std
cwtl
pop
cld
mov
call
shr
cltd
pusha
dec
mov
ja
pop
pop
mov
push
scas
sti
jecxz
popf
leave
add
xor
imul
cs
or
cmp
dec
lods
lods
dec
add
mov
push
test
popa
mov
sbb
loopne
mov
je
aaa
jns
jmp
lahf
inc
shlb
outsl
dec
cmpsl
shlb
jbe
cmp
clc
mov
push
cli
test
sub
push
int3
dec
rclb
clc
lods
xor
mov
sarl
jmp
ret
pushl
lahf
aam
hlt
push
pop
clc
lea
lret
enter
ror
push
cmp
inc
js
mov
leave
js
cli
pop
mov
pop
inc
orl
jmp
pop
dec
bound
addr16
cmp
loopne
or
xchg
pop
sub
pop
mov
xchg
push
xor
js
sbb
or
or
pushf
jg
pushf
pop
imul
mov
xchg
mov
or
pop
adc
xchg
out
jbe
dec
mov
jnp
movsl
sub
jo
testb
lahf
out
dec
sub
mov
out
ds
dec
insb
add
cltd
int3
lret
and
pop
lret
lods
rorb
dec
xor
or
int
xchg
imul
imul
sub
stos
mov
imul
mov
push
pop
jbe
and
call
mulb
es
mov
mov
dec
test
gs
mov
pop
mov
test
sarl
mov
xor
lods
sub
jmp
jae
cmpsb
mov
dec
mov
inc
sub
test
seto
jae
imul
aad
js
pop
in
mov
cmp
pop
repnz
fstl
lods
cmc
pop
or
pop
imul
push
into
loop
lret
repz
sti
jp
pop
inc
leave
std
bound
and
jp
mov
or
mov
push
movsb
loope
cmp
es
push
add
aas
or
xchg
and
lret
mov
in
xchg
xor
fwait
xchg
inc
adc
pop
pop
push
push
lock
out
pop
sti
out
sti
pop
add
fldcw
adc
or
jb
add
sub
dec
fnstenv
mov
dec
in
ljmp
stos
inc
loopne
jmp
mov
les
outsb
mov
outsl
je
pusha
loop
mov
lds
sub
ret
fadd
inc
in
or
lcall
fldcw
rorl
ret
pop
sub
xor
imul
cli
jmp
push
ds
pop
scas
rorb
lahf
fxch
xor
pop
dec
mov
mov
jl
mov
jmp
jbe
loopne
fdivr
inc
rcrl
pop
into
popf
xchg
gs
or
adc
dec
push
xchg
movsbl
dec
or
out
push
test
mov
arpl
gs
fldt
icebp
mov
out
pop
lcall
lcall
mov
call
js
cmp
mov
int
sub
bound
dec
lcall
cmp
and
or
in
cmpsb
fnsave
fs
cmpsb
cmp
or
in
xor
lcall
addr16
out
inc
mov
mov
dec
push
int
and
jbe
or
enter
jns
add
push
mov
ret
pop
and
fucomp
adc
mov
cmp
and
in
xorl
cmpsb
add
dec
cmp
sbb
jnp
int3
es
and
jmp
or
inc
xchg
pop
jl
test
dec
sub
jnp
movsb
insl
repz
mov
pop
and
and
clc
lcall
mov
mov
pop
mov
pop
dec
fwait
mov
ja
and
pop
dec
out
lods
addr16
mov
inc
dec
fstl
dec
mov
icebp
shl
cmpsb
pushf
push
pop
inc
gs
popa
xor
outsb
scas
sbb
icebp
sbb
xchg
in
xchg
popa
inc
ret
aaa
sub
shll
leave
xchg
aam
cmpsb
push
add
scas
mov
dec
std
jb
lahf
sbbb
xchg
iret
xchg
insl
or
outsb
cmp
cmp
inc
mov
movsb
xor
stc
jo
out
add
andl
enter
adc
or
xor
or
int3
xchg
loopne
fsubrs
dec
addr16
sti
shll
add
sub
fdivr
es
stos
ljmp
add
mov
push
cli
adc
and
dec
sub
ljmp
cltd
pop
adc
sbbl
and
mov
xor
sbbb
cmp
or
cmp
sub
pop
mov
dec
sahf
out
lods
adc
or
jbe
pop
sub
outsl
adc
clc
loop
je
cmpsb
push
test
or
jbe
iret
lahf
push
mov
bound
sub
popf
and
loope
or
inc
sub
mov
lret
adc
outsb
push
adc
insl
xor
pop
int3
iret
dec
dec
xchg
js
dec
adc
pop
dec
push
lea
shll
mov
add
lods
rcrb
add
xor
arpl
cmp
roll
test
cmpsb
inc
jecxz
mov
orl
dec
push
mov
inc
inc
mov
mov
ja
mul
dec
mov
cmp
sbb
cmp
cmpl
dec
pop
push
pop
out
or
and
cld
enter
out
or
int3
test
mov
mov
or
in
and
pop
or
mov
and
add
hlt
sbb
fistpll
add
inc
dec
sub
or
jnp
mov
or
jge
or
push
gs
les
inc
pop
pop
jl
lds
dec
sbb
subl
dec
in
fadds
movsl
sti
push
push
enterw
sbb
pop
sub
dec
cmp
mov
xchg
jmp
fcmovbe
imul
cld
idivb
or
in
and
mov
pop
pop
xor
das
sbb
iret
outsb
cmp
dec
dec
sub
sbb
xor
popf
and
fsubs
pop
lods
test
push
hlt
lcall
dec
enter
lea
push
mov
mov
lahf
icebp
xorb
mov
jmp
inc
pushf
test
aad
push
scas
into
mov
ljmp
pop
pop
fucomip
fldt
dec
cwtl
push
insb
ljmp
mov
and
mov
xchg
pop
movsl
out
jne
inc
pushf
pop
enter
rolb
cmpsb
jecxz
push
xchg
out
mov
xor
xor
test
cld
jnp
dec
movsb
out
cmp
dec
jp
aas
pushf
clc
fwait
inc
inc
ljmp
in
loope
add
push
loopne
aas
ss
fstps
adc
imul
leave
ljmp
jmp
aam
aam
mov
in
popa
xchg
std
pop
pop
popa
stc
fyl2xp1
mov
mov
xlat
mov
and
sub
push
jbe
ljmp
dec
xlat
push
cmp
scas
data16
mov
addr16
inc
ds
push
stc
pop
mov
ljmp
push
cli
mov
push
lahf
dec
cmp
gs
or
cmp
andl
pop
adc
cwtl
test
cmc
inc
gs
std
lods
mov
test
mov
lret
or
mov
mov
test
in
or
leave
pop
jmp
loope
sub
inc
in
in
inc
loopne
cmp
mov
cmp
rep
push
lea
jae
mov
aaa
mov
jp
ja
call
sub
in
jmp
inc
add
lret
imul
mov
cmpsb
loope
stc
inc
cmpsb
push
dec
stos
push
ja
sbb
dec
or
add
push
aam
pop
mov
aam
fisubl
and
mov
ss
pop
push
cwtl
pop
pop
push
cmp
push
cmp
pop
lret
pop
xor
or
mov
or
inc
mov
sbb
jmp
stc
mov
sub
imul
hlt
int
mov
or
mov
sbb
mov
jbe
insb
cld
in
cli
sbb
add
push
sub
jbe
movsl
lods
movsb
mov
les
fnsave
mov
mov
cs
xchg
movsl
push
sub
sub
cmpsb
pop
inc
or
mov
dec
in
inc
cmpsb
jl
ret
push
iretw
int3
xor
adc
incb
scas
dec
in
cmpsb
pop
push
stc
mov
rclb
in
sbb
dec
mov
jns
pop
mov
test
sti
jecxz
cmpsb
mov
adc
cmpsl
pusha
jl
imul
ret
scas
es
mov
fbstp
stos
or
enter
shr
in
call
pop
mov
fldcw
mov
pop
test
push
xchg
cltd
jbe
sar
cmpsb
sbb
xchg
out
push
or
mov
rcr
scas
fidivs
fbstp
dec
inc
dec
lcall
xchg
jbe
pop
jns
xchg
push
add
sbb
hlt
shl
int
repz
stc
pmaxub
jnp
loopne
mov
adc
inc
lods
dec
sbb
pop
cmp
fs
loopne
jle
inc
faddl
pop
idivl
ljmp
cmpsb
or
frstor
idiv
stos
sarb
hlt
outsl
push
into
out
cltd
loope
in
leave
mov
test
xlat
stos
and
mov
aas
aad
cmp
enter
mov
ljmp
lock
int
scas
jle
dec
dec
or
add
and
std
mov
add
int
frstor
imul
pop
xor
pop
pop
mov
cs
add
push
jbe
inc
jno
inc
lds
xlat
sbb
ret
movsb
loop
push
outsl
aas
cwtl
pushf
push
cmpsl
sub
lret
xchg
inc
insl
lods
sahf
negb
mov
inc
ja
lds
adc
iret
scas
mov
fsqrt
je
iret
sbb
sub
cmp
stos
jge
cmpsb
lahf
mov
in
sub
sub
es
jmp
jns
or
adc
aam
push
or
push
add
stos
xor
adc
xchg
rcrl
out
int3
cmp
ljmp
dec
mov
dec
or
loopne
out
lret
outsb
jecxz
shrl
sub
add
pop
dec
std
es
jl
push
xor
jecxz
imul
jecxz
imul
scas
in
das
rorl
mov
in
fwait
jo
push
shlb
mov
jle
data16
jecxz
outsl
cwtl
mov
loop
test
xchg
jl
add
jb
jle
mov
leave
xchg
or
cld
mov
sub
leave
stos
int
pop
sahf
je
imul
popf
cwtl
test
or
cld
scas
xchg
scas
loop
and
dec
and
enter
lret
dec
test
pop
out
out
fmuls
pop
scas
fs
insb
std
xor
out
cmp
cld
rcrb
inc
cmp
mov
and
ss
pop
sub
leave
sarb
shl
lahf
adc
xchg
cmp
lret
dec
sub
xchg
insl
cs
aad
jo
push
in
push
jl
call
lock
test
push
cmpl
movl
dec
jl
imull
mov
sti
xor
int3
inc
pop
sub
inc
fisubl
out
mov
cli
mov
xchg
push
movsl
rorb
movmskps
inc
mov
movsb
dec
jne
sub
pop
inc
pop
pop
jnp
or
mov
in
push
rorb
adc
loopne
sub
jl
inc
aaa
sbb
mov
cmpsl
xchg
loop
xchg
dec
xor
scas
imul
sub
push
lahf
lea
ds
jmp
addr16
stc
test
jge
out
scas
xor
pusha
xchg
sub
xor
je
out
movb
popf
shr
pop
jmp
xchg
lret
push
fcomp
out
ret
leave
jbe
push
dec
jg
xchg
dec
fsubr
pusha
xchg
in
xchg
call
pop
adc
pop
mov
int3
repz
push
in
mov
dec
pushf
pop
sub
sub
mov
xor
out
lahf
insl
dec
in
aad
subl
inc
lods
dec
mov
inc
inc
adc
scas
popf
iret
iret
jno
stc
jno
cltd
sbb
test
or
add
or
cmpsb
lock
pop
xchg
in
or
adc
cmpsb
aaa
inc
repz
add
push
xchg
sbb
lods
mov
fisttpl
cltd
std
fstl
pop
cmp
ja
sub
mov
inc
dec
outsl
inc
sub
mov
test
and
fwait
push
cli
ja
rcrb
dec
push
out
mov
dec
cwtl
inc
lea
shlb
shll
into
sti
roll
aad
dec
out
xchg
mov
push
adc
pop
xchg
call
stc
gs
or
cld
sub
jnp
cmpsb
sbb
cmp
arpl
xchg
call
sbb
les
and
sbb
cmpsb
insl
dec
movsb
lock
sub
mov
popa
mov
mov
pop
jnp
repnz
mov
nop
push
cld
vpshlw
mov
loop
sbb
xlat
dec
cmp
xchg
pop
push
in
fldenv
jge
addr16
lcall
pop
push
cmpb
mov
call
mov
cmpsl
mov
out
leave
rclb
jne
jle
scas
sti
rolb
ret
pop
bound
test
and
cmp
dec
movsl
int3
jge
dec
jecxz
add
xor
xchg
cmp
pop
push
negl
push
int3
xor
sbb
and
jnp
xchg
inc
cmpsl
adc
popf
mov
sbb
cmpb
cwtl
pop
stos
mov
pop
nop
inc
pop
push
ljmp
sub
lock
xchg
or
push
nop
pop
and
loopne
sub
mov
mov
xchg
push
dec
push
adc
push
clc
les
stos
lock
lcall
out
xor
sub
cwtl
jnp
hlt
cmp
push
loop
mov
testl
movb
lods
rorl
enter
add
mov
pop
test
mov
sub
inc
aas
dec
sti
popf
xchg
cltd
out
std
mov
lsl
jnp
in
orl
add
adc
mov
sbb
push
pop
mov
lcall
fnstenv
jl
push
lods
lods
mov
inc
mov
test
in
adc
ret
xchg
out
mov
out
push
mov
push
call
pushf
add
rcrl
sbbb
fisttpll
sahf
xor
adc
es
jle
mov
mov
mov
enter
cs
imul
push
outsb
pop
add
push
sub
es
sub
aas
out
icebp
or
insl
mov
sub
es
lret
aam
test
jns
pop
leave
cwtl
sahf
jnp
outsl
mov
loope
leave
or
testl
arpl
push
int
lret
cmp
ja
cli
shll
test
fadd
outsl
pop
insb
sahf
or
aad
js
dec
inc
xor
scas
sbb
lcall
loope
sar
out
ja
out
ret
xlat
ljmp
xchg
clc
ret
or
movsb
call
mov
cmp
test
stos
leave
jp
pop
aas
cmpsb
and
and
sbb
xchg
mov
stos
sub
cmp
call
ljmp
dec
out
cmpsb
jbe
pusha
out
sbb
mov
loope
fs
xchg
cmp
negl
andl
std
jbe
fcomps
or
outsb
mov
and
sbb
mov
or
int3
adc
push
icebp
cmp
stos
or
pop
mov
dec
cmc
lock
jns
inc
ss
mov
leave
jae
in
jp
bound
dec
icebp
frstor
or
jl
scas
pop
add
inc
jge
in
mov
cmpsb
fsubr
cmpsl
push
cmp
cmc
pop
adc
push
out
xchg
std
aas
idivb
cs
je
dec
jg
mov
add
inc
xchg
in
lods
xchg
jle
std
lahf
mov
push
jbe
test
lea
and
mov
push
sub
loop
cld
jae
mov
cmp
test
mov
pop
cs
imulb
dec
ret
pop
dec
fldl
fidivrs
aad
jl
pop
insb
mov
cs
sub
mov
xor
addr16
hlt
repz
jmp
push
pop
pop
inc
xor
xor
sbb
out
push
adc
adc
js
mov
jmp
mov
jo
fiadds
sbb
hlt
sub
pushf
lcall
jg
add
scas
cli
add
mov
test
aam
jmp
imul
sub
fiadds
clc
inc
dec
mov
jl
sbb
fnstcw
sub
shll
fisubrs
cmpsl
outsl
fcoml
mov
push
mov
clc
and
push
inc
outsl
or
out
sahf
rcrl
inc
mov
pop
out
pop
xlat
adc
add
jbe
inc
testl
repz
mov
imul
inc
imul
cmovs
add
cmpsl
mov
xor
inc
lds
adc
iret
stos
cli
inc
pop
mov
sahf
cmp
lret
loop
popa
fsts
mov
les
adc
or
mov
mov
callw
stos
adc
outsl
mov
lea
mov
inc
sbb
mov
lret
jmp
lods
and
cld
mov
arpl
test
imul
call
cli
or
cltd
int3
xchg
jecxz
ret
sub
fldenv
rclb
dec
shll
and
pop
lret
pop
xchg
outsb
test
and
xor
dec
sti
jmp
insl
pop
mov
mov
pop
cs
loope
insb
rcrl
and
fldenv
xchg
cmpsl
push
dec
mov
xchg
gs
test
je
push
push
or
mov
cmpsl
in
mov
sbb
or
aad
xor
aam
dec
out
pop
aas
mov
mov
mov
push
in
dec
shll
addb
andl
std
adc
jne
sub
scas
and
or
dec
xor
and
aad
cmpsb
call
test
adc
loope
das
arpl
lahf
insl
cmp
je
push
dec
lock
test
cmp
mov
sub
xchg
xor
and
jg
pop
add
push
dec
mov
popa
mov
fsubrl
sub
out
shll
sbb
icebp
dec
das
hlt
push
cmp
aam
sbb
push
pop
leave
into
mov
mov
fwait
and
pop
dec
or
test
scas
xor
pushf
movsb
cltd
push
arpl
jmp
cmp
mov
cld
jl
pushf
pop
aam
repnz
cli
inc
xchg
pushf
stos
inc
setge
jne
adc
insl
sbb
xchg
jp
dec
pop
sbb
fcomps
xchg
enter
cmpl
stc
movsb
jae
cmp
mov
sbb
ret
or
push
push
ss
loop
lcall
test
add
cwtl
dec
lahf
stc
xchg
sub
ss
clc
mov
pushf
and
int3
cmc
add
pusha
sbb
sub
lock
mov
mov
aad
outsb
loop
mov
cmp
and
and
psubq
out
mov
icebp
test
clc
loop
fwait
mov
hlt
pop
sbb
out
insb
mov
test
out
int3
add
xlat
mov
mov
mov
shrb
cwtl
jmp
sub
std
ljmp
out
test
xlat
rcrb
loop
pop
mov
xor
pop
leave
stos
out
mov
and
jae
data16
cmpsb
in
pushw
int3
loopne
and
sti
push
jb
addr16
rcll
bound
sahf
insb
mov
int3
test
dec
and
std
cmp
jno
vpunpcklqdq
adc
push
add
call
jmp
pop
loope
rcrl
sub
sub
clc
rcrl
sub
lcall
sbbl
insb
dec
stos
mov
pop
mov
push
lea
lods
in
adc
mov
fmull
mov
mov
addr16
jle
inc
mov
add
ss
jp
leave
fadd
sbb
lcall
call
push
scas
aas
enter
jmp
xchg
push
ljmp
mov
pop
outsb
lea
jle
and
jbe
dec
in
jecxz
dec
out
out
int3
clc
mov
adc
test
cmpl
stos
inc
adc
lds
pusha
cmp
jnp
ret
js
xor
sub
push
stos
dec
push
cmpsb
cmpsb
sbb
es
xchg
cmp
leave
cmpsb
arpl
add
adc
xchg
mov
or
dec
adc
or
sub
pop
fnstcw
ljmp
mov
mov
push
add
test
xor
in
lahf
dec
sub
out
adc
xchg
jns
dec
stc
out
cmp
sahf
pop
out
mov
mov
pop
mov
push
roll
mov
mov
dec
mov
icebp
add
and
popa
inc
test
jl
xchg
jg
jbe
leave
add
insl
lock
lahf
addr16
pop
sub
into
imul
ds
mov
sbb
inc
jmp
js
jo
add
iret
sbb
cmpsb
mov
cwtl
mov
add
cmp
movsb
xor
stos
out
arpl
or
movsl
add
clc
xchg
sbb
stos
inc
shlb
enter
sub
xlat
adc
cmpb
fildl
enter
sub
mov
std
push
xor
enter
not
js
sti
lds
call
cltd
ror
push
and
push
pop
sub
cmp
or
hlt
inc
or
addr16
scas
lahf
in
js
dec
push
pusha
aad
out
push
call
adc
xor
pop
andb
lods
enter
jns
cmp
pop
data16
addr16
enter
mov
sub
push
jl
les
aaa
pusha
adc
mov
lahf
rolb
xchg
fists
cwtl
out
popf
inc
fisubl
mov
mov
ret
pop
fcoml
jl
mov
addr16
lcall
out
mov
cmpl
mov
lods
cwtl
jo
aam
sub
sub
jmp
lahf
and
shrb
mov
bound
ret
lret
or
sub
xchg
out
dec
xor
mov
pop
push
sub
subl
cmc
cmpsb
clc
jmp
clc
sub
pop
dec
jbe
dec
mov
pop
lods
test
call
and
jne
jmp
ljmp
ljmp
movsl
mov
inc
cmpsb
cmc
cmp
mov
mov
fwait
cld
addr16
hlt
sbb
ljmp
js
in
sbb
dec
xchg
jo
enter
lods
ljmp
mov
sub
push
jle
jb
sub
insl
mov
or
incb
fadd
jmp
lods
inc
lock
dec
clc
movsl
imul
iret
sbbl
push
rcl
in
sbbb
mov
shr
mov
push
push
add
mov
sub
mov
jb
dec
movb
enter
fsubrl
push
mov
gs
mov
mov
leave
sub
lds
push
cmc
clc
jnp
jns
movsb
sbbl
dec
and
pop
les
pop
inc
push
jnp
repnz
shlb
lret
shrl
hlt
push
in
iret
sarb
mov
imul
sbb
xchg
movsl
xchg
popa
jecxz
test
scas
or
repz
mov
cmp
mov
sub
sub
push
ljmp
xchg
xor
or
mov
outsb
mov
shrl
out
cmp
test
das
fwait
sub
mov
aas
aas
mov
scas
mov
clc
ss
lcall
les
xchg
out
or
aaa
jns
push
daa
jmp
jo
repz
mov
repz
outsl
std
fsubrs
mov
fadds
fldenv
in
ror
jbe
out
xor
movsl
and
jae
gs
jmp
push
jl
cld
call
jge
iret
and
sbb
sbb
sub
shll
sub
push
mov
dec
in
lcall
mov
cmpsl
xor
pushf
lea
pusha
test
mov
out
sti
scas
imul
dec
xor
sbb
fwait
test
add
push
xchg
and
push
jns
sbb
mov
add
neg
xchg
fisttpl
dec
aaa
mov
sbb
jno
outsl
data16
xor
push
xchg
sub
stos
jl
data16
sub
dec
mov
jns
repnz
int
or
dec
les
cmpsl
mov
and
cmpsb
stc
jl
dec
call
mov
and
fcomps
loop
test
inc
push
jmp
inc
mov
lock
mov
or
ja
sbb
xlat
out
pop
or
pop
and
jne
loopne
mov
je
sub
mov
jno
fldlg2
add
sub
int
pop
cld
adc
sbb
push
push
ja
cwtl
int
das
ror
mov
mov
ljmp
inc
aas
dec
dec
mov
push
aam
push
fmul
pop
stos
leave
or
jmp
mov
fsubrs
push
sub
hlt
into
xor
jb
jmp
mov
cwtl
cmpsb
lret
es
into
xchg
jno
fimull
fcompl
cmpsb
imul
xchg
movsb
stc
aaa
and
pop
xor
je
pusha
insl
rorb
in
mov
inc
rcll
push
dec
pop
push
js
cmpsl
clc
pushf
sbb
xlat
inc
push
dec
inc
cmp
push
add
sbb
lret
pusha
mov
movsl
ljmp
dec
cmp
rcrb
add
cmp
jb
scas
loop
pop
xchg
jl
popa
push
push
movsb
imul
daa
pop
dec
clc
jo
adc
ljmp
xchg
clc
insb
push
push
or
mov
add
pushf
cmp
or
sub
push
adc
push
jne
ja
test
inc
sbb
je
repz
scas
ret
mov
fcom
mul
xor
lock
dec
scas
in
sbbl
fildll
imul
push
addr16
lods
or
cld
in
sub
lods
mov
fdivl
das
clc
leave
ficompl
lods
lahf
sub
rcll
xchg
xchg
jmp
loop
add
hlt
pop
inc
int
repnz
out
jl
pop
adc
pop
xor
mov
mov
or
lcall
andl
movaps
push
loope,pt
inc
fpatan
adc
loopne
mov
inc
jl
mov
ja
adc
in
mov
dec
ja
sbb
leave
pop
test
data16
sub
sub
enter
jbe
call
sub
dec
sbbb
shrl
test
sbb
lock
sub
pushf
and
add
outsl
mov
sub
jae
es
push
or
inc
adc
clc
hlt
or
dec
sbb
es
dec
popf
push
mov
pop
int3
sbb
fwait
or
lods
add
jbe
js
push
shr
pop
fdivl
push
lods
out
int
dec
call
cmp
dec
sub
js
sub
outsl
es
cmpsb
pop
int
out
push
std
jnp
dec
out
lods
hlt
add
xor
int
inc
sub
out
push
xchg
aaa
xor
lahf
pop
scas
add
cmp
ret
imul
int3
sub
cmp
jmp
add
mov
jp
dec
sahf
addr16
sub
icebp
mov
mov
rorb
shlb
fstps
das
test
mov
std
jmp
loope
mov
ficoml
mov
lea
and
std
jl
pop
jge
addr16
inc
das
jle
mov
ret
mov
cmp
pop
sahf
test
lahf
jbe
jp
cmp
aaa
mulb
xchg
sub
jmp
call
or
lahf
rorl
xor
jge
or
jge
lea
outsb
out
dec
and
pop
pop
mov
es
int
and
and
out
add
sar
jnp
lret
inc
aaa
inc
pop
pusha
test
lahf
popf
test
movsb
scas
ds
dec
inc
mov
sub
stos
rorb
jbe
gs
fiaddl
stos
mov
stc
cld
repz
ljmp
xchg
adc
dec
mov
xchg
push
scas
pusha
cmpsb
ret
aaa
push
ljmp
xor
jmp
adc
push
test
pop
xor
lret
jl
jecxz
outsb
pop
scas
cmp
iret
pop
xchg
inc
bound
imul
out
jo
aaa
test
cmpsl
lcall
rol
adc
iret
cmp
test
sbb
cmpsl
jmp
aam
xchg
fdivs
rolb
push
nop
outsl
popf
pop
decl
adc
adcl
pop
and
xor
cmp
fiaddl
push
aaa
sbb
test
sbb
cmpsb
push
lcall
repz
jnp
mov
add
icebp
aam
mov
call
fldenv
ljmp
loop
in
dec
xor
dec
fisttpl
push
ficoml
dec
cmp
in
cmp
pop
imul
fdivr
lea
mov
pop
pop
sub
jns
call
ljmp
imul
push
insb
stos
push
pop
mov
and
leave
mov
sub
pop
dec
rcrb
and
mov
sub
scas
pop
ljmp
ljmp
cmp
stos
cmpsl
xor
jp
jnp
ljmp
inc
cmp
mov
mov
add
out
and
inc
stos
js
aad
inc
inc
mov
imul
mov
jp
shrl
pop
repz
sub
lea
sub
lcall
es
sahf
std
sub
sti
xor
sbb
fldcw
jbe
xchg
cmpsl
hlt
sti
iret
shlb
popf
jmp
sahf
pop
loope
in
cmp
lahf
int3
cmpsb
jne
pushf
mov
inc
pushf
add
and
cld
adc
mov
in
mov
das
pop
leave
dec
outsl
pop
cmpsb
popf
das
sub
cmp
bswap
pop
sarb
in
fldt
cmp
pop
xchg
fistps
adc
je
jge
int
xchg
lods
ror
int
mov
mov
icebp
jg
sbb
sub
mov
xchg
rcr
inc
les
and
mov
sub
shr
jle
cmp
out
scas
fimull
in
lods
sub
lcall
out
test
movsl
lahf
jnp
cmp
xrelease
push
jno
push
mov
in
inc
add
mov
das
lahf
jnp
push
xchg
mov
pop
mov
xor
fimull
fldl
lcall
lahf
cmp
call
cmp
mov
jecxz
sbb
push
out
push
inc
mull
loopne
out
sbb
jecxz
adc
out
mov
loopne
add
call
decl
xchg
sbb
or
popf
pop
mov
inc
ret
pop
imul
loope
jnp
dec
in
pushf
jae
inc
insb
test
dec
leave
xchg
cmp
jo
fistpll
insb
fstpl
push
mov
std
sub
dec
jmp
inc
imul
mov
enter
int
jbe
cmp
loopne
repnz
pop
inc
push
sbb
adc
fstps
subl
aam
sub
sbb
dec
push
mov
cmpsb
loop
xchg
mov
pop
fmull
pop
xchg
push
or
dec
cmpsl
rorb
stc
xchg
leave
rorb
mov
mov
and
arpl
inc
out
jnp
lret
test
inc
test
js
jo
xchg
pusha
xor
mov
stos
icebp
push
dec
mov
xchg
lcall
hlt
inc
pop
xchg
nop
xchg
int
std
and
and
add
fnsave
int
pop
outsl
cmp
sbb
add
xor
push
xchg
rol
fisttps
mov
mov
xor
ror
test
cmp
pop
add
ret
sub
mov
call
jge
adc
jbe
ret
leave
orl
dec
fwait
lahf
enter
mov
dec
mov
mov
pop
enter
clc
into
jnp
ret
or
cmp
xor
or
in
cmp
jnp
unpcklps
adc
int
in
pop
stc
mov
mov
adc
mov
dec
xchg
or
scas
pop
mov
jns
xchg
or
cmp
ret
mov
pop
jmp
in
lods
lea
or
dec
push
pusha
push
push
in
mov
mov
dec
movsl
fs
and
mov
sub
gs
pusha
mov
and
sub
xchg
and
stos
and
movsb
rorb
loope
test
leave
shrb
cltd
push
or
ficomps
push
lods
lock
lea
ds
push
call
push
cmp
or
gs
xchg
add
fdivrs
enter
mov
insb
ljmp
scas
and
jne
dec
jbe
icebp
ss
adc
push
sbb
or
xor
push
cmc
mov
sbb
sbb
mov
add
test
aas
mov
movaps
xchg
sti
mov
les
mov
cwtl
sbb
sahf
pop
insl
int3
fisubrl
mov
sbb
cld
out
mov
cltd
xchg
int3
sbb
pop
push
cwtl
scas
sarb
jnp
mov
mov
test
lea
repnz
sbb
fldt
xor
into
fldt
pop
jle
test
cmp
cli
dec
mov
cmp
cmp
and
jle
ss
dec
rclb
sbb
jne
lods
das
mov
fst
mov
or
cltd
in
sub
push
sub
out
rcrb
fcmovne
xor
pop
adcb
or
xor
imul
pop
ja
repnz
cs
mov
cmpps
clc
scas
add
negl
es
das
dec
inc
mov
stos
cmpsl
cmpsb
mov
pop
add
in
sub
fldcw
cmp
pusha
cli
jo
add
pop
push
mov
jl
mov
call
jecxz
mov
pop
rorb
adcb
mul
lret
mov
pop
cmp
gs
call
dec
ja
and
out
pop
sub
pop
pusha
pop
sub
xchg
adc
out
pop
push
sbb
clc
data16
lds
pop
mov
jge
dec
pop
leave
jge
cmpsb
js
popf
test
imul
dec
inc
movsb
or
test
mov
xchg
cwtl
fmuls
es
and
or
jl
sbbl
aad
stc
and
rcl
cmp
out
cwtl
push
popa
lds
pop
dec
jmp
out
aaa
xchg
pop
rorl
mov
and
ljmp
int
arpl
sub
add
push
gs
sub
push
pop
es
jle
cld
out
insb
or
cli
mov
ljmp
mov
sub
daa
out
stos
inc
and
mov
sbb
das
push
shrb
movsb
inc
xchg
jle
push
jo
nop
test
cwtl
adc
sarb
fbld
cmpsl
pop
movaps
out
mov
pop
push
js
sub
sub
mov
out
pop
xchg
out
pop
dec
mov
sti
clc
push
das
or
call
mov
lret
fnstsw
pop
in
arpl
mov
xor
jo
in
inc
cmpb
ljmp
and
mov
xor
stc
call
mov
cld
lods
mov
aam
cmovnp
repz
cmc
loope
imul
mov
repnz
testb
ja
push
stos
sub
fdivr
dec
lahf
and
lods
jmp
xor
scas
ret
push
dec
push
mov
leave
movsb
xchg
insb
jp
mov
lods
rclb
ljmp
mov
je
mov
call
push
in
mov
imul
movsb
push
hlt
std
mov
icebp
es
incl
dec
mov
push
popf
and
aaa
add
cmpsl
lcall
mov
push
enter
lahf
jg
mov
jl
addr16
add
jns
sub
test
jmp
mov
or
movsl
aam
popf
mov
pop
xor
dec
aaa
enter
xorb
lock
imul
xor
jno
mov
xor
cmp
lock
dec
mov
les
mov
enter
incl
imul
mov
jmp
sub
xchg
pop
push
dec
dec
push
sub
scas
jmp
lret
pop
push
out
fistpl
mov
sub
dec
cwtl
cmpsb
dec
scas
out
jge
push
lahf
pop
aas
pop
mov
js
js
xchg
cli
stos
xor
cmp
enter
leave
lahf
jns
pop
es
aaa
shlb
push
sbb
lret
push
and
stos
cld
sbbb
push
fs
sub
gs
and
pop
jmp
jmp
lahf
and
sub
test
adc
jmp
pop
sub
hlt
cmpps
xor
mov
cli
loope
cmp
aaa
imul
dec
fwait
cmpsl
gs
mov
scas
test
out
scas
mov
inc
mov
aas
mov
lahf
mov
xchg
jne
xchg
ljmp
subb
or
sub
adc
jbe
xchg
fisubl
adc
sub
test
fimuls
push
xor
push
push
fisubrs
push
inc
popf
addr16
mov
inc
cwtl
cmpsb
jne
insl
mov
out
imul
hlt
out
popf
mov
std
push
jmp
enter
mov
pop
es
scas
jne
sub
imul
xchg
push
sub
subb
mov
std
ret
fldcw
ret
shlb
aas
test
scas
imul
jbe
dec
xorl
lea
mov
sar
imul
adc
data16
int
frstor
mov
sub
mov
inc
inc
jmp
jbe
mov
inc
psrlq
movsb
jmp
out
movsl
data16
pop
jnp
gs
inc
out
movsl
mov
test
in
sbb
cmp
dec
and
out
hlt
cmpsb
or
in
das
leave
repnz
push
fisttpl
lret
repnz
cltd
shl
cmp
in
sbb
gs
push
sub
cmp
pushf
in
pop
xchg
sti
aam
cmp
and
dec
jl
or
push
sahf
dec
cli
std
mov
or
inc
pusha
mull
pop
gs
xchg
outsl
loop
aad
xchg
mov
fsubl
mov
sbb
dec
pop
into
out
test
push
test
ds
in
mov
clc
test
fs
or
xor
xchg
clc
add
adc
or
movsb
rcrb
xor
outsl
aaa
fiadds
sub
dec
fcoms
jg
dec
das
dec
cmpsb
jecxz
mov
shlb
gs
scas
clc
push
cmp
pop
sub
sahf
std
or
insb
sbb
lods
out
icebp
int
inc
pop
jnp
pop
popa
rcll
mov
mov
stc
pushf
lea
mov
iret
andb
movsb
lret
add
xchg
aaa
cli
imul
mov
mov
fcmovnbe
lods
rcll
ljmp
jmp
call
in
or
dec
int3
or
addr16
movsl
hlt
cmp
cwtl
jmp
dec
sub
fidivrs
sub
in
inc
mov
pushf
dec
out
iret
pop
and
xchg
sti
lcall
out
sbb
push
jg
push
cld
cs
rcl
jbe
dec
pusha
push
sti
lods
xchg
or
push
fimuls
adc
test
mov
lds
add
decl
pop
imul
mov
sub
out
sub
cmc
call
cltd
mov
das
fs
fdivrs
out
call
sub
dec
mov
hlt
jnp
repnz
xor
pop
sbb
or
pusha
loop
pop
fstps
push
add
xchg
ljmp
jo
adc
adcb
inc
repz
sti
bound
pushf
mov
pop
sbb
and
dec
shr
mov
mov
je
jle
sbb
adc
jp
xor
adc
jp
leave
lahf
xor
notb
cmpsl
rorb
loopne
adc
lret
and
ljmp
aad
and
aad
dec
imul
out
fs
or
idiv
jge
jecxz
shlb
std
clc
scas
movsl
push
or
push
cmpsl
cmp
or
or
pushf
jmp
test
test
or
in
imul
movsb
cmc
push
mov
inc
out
cmc
or
out
sbb
test
aas
repnz
xchg
in
lds
adc
jmp
and
sub
mov
mov
lea
shl
mov
stc
or
mov
decb
addr16
xor
in
bound
mov
in
push
or
pop
repnz
inc
mul
jmp
pop
lea
movsb
pop
stos
int3
scas
mov
stc
push
add
mov
inc
cs
lock
pop
popf
divl
push
cmpsl
fcmovnu
xchg
add
lea
frstor
or
xchg
iret
sub
mov
in
mov
adc
mov
push
mov
mov
arpl
lock
sbb
xchg
lret
out
jecxz
nop
aad
leave
jge
pop
add
out
mov
cmc
icebp
cmpsl
pop
adc
cmp
inc
ficoml
pop
aas
enter
xchg
mov
jge
adc
or
std
je
jmp
lcall
ljmp
test
jbe
pop
mov
scas
stos
aam
dec
sub
lcall
sbb
mov
call
out
lret
nop/reserved
or
xchg
fnsave
icebp
outsl
pop
subl
mov
pusha
fldln2
stos
mov
push
in
ds
fdivr
mov
fisttps
lcall
mov
jbe
sub
fcoms
fsubr
leave
sub
cmp
and
inc
lds
pop
pop
lret
stc
adc
bound
pop
sbb
addr16
mov
mov
xor
or
addr16
cs
xor
es
jl
insb
cmp
les
cli
cmc
js
das
je
fdiv
push
cmp
lahf
mov
mov
inc
aas
repz
or
jle
push
pop
xor
js
xlat
cmp
faddp
cld
stc
jmp
scas
into
xor
jg
jp
dec
mov
cmp
or
jp
out
add
std
ja
add
dec
test
and
rcll
jmp
or
hlt
sbb
inc
adc
or
bound
mov
cmp
test
lcall
sbb
vpminub
lods
stos
fdivr
xchg
or
dec
and
test
sub
sub
inc
sti
les
xor
shll
xchg
jae
fisubl
sub
ljmp
add
fdivr
cmpxchg
aam
dec
stos
sub
fistpl
js
movsb
push
or
inc
out
cli
push
push
leave
xchg
setle
in
arpl
sub
jbe
and
lret
lss
fistpll
fbstp
mov
xlat
test
or
or
sti
cmpsb
in
adc
cmpsl
sub
xor
pop
xor
in
xchg
sub
sub
inc
lret
cmp
mov
inc
les
fsubl
pop
outsl
jb
ljmp
lcall
in
pop
and
or
mov
cld
gs
mov
js
fstpt
out
das
lret
data16
leave
out
sub
push
sti
addr16
sahf
int3
ss
int3
dec
rorl
stc
cmp
or
aas
lds
fistpl
pop
jo
adc
cmp
push
repz
popf
stos
xlat
jl
cmp
inc
sub
popf
pusha
xor
imul
lahf
outsb
xchg
in
sbb
xor
jbe
xchg
mov
mov
aam
lahf
jns
sahf
in
xchg
dec
out
or
sti
cli
ja
addr16
jae
cmpsb
or
stc
or
scas
mov
and
pop
mov
sub
dec
fistpl
add
imul
call
adc
mov
jne
dec
dec
xor
and
daa
inc
jp
lcall
repz
fistpl
in
adc
fcompl
xlat
sarb
clc
or
push
sub
les
shrl
cwtl
test
mov
sahf
jmp
jmp
pop
fs
call
jmp
loopne
xor
aas
mov
inc
cmp
dec
addr16
jo
out
lods
jbe
movsl
in
out
lret
and
mov
push
loopne
adc
mov
cld
lods
arpl
shrb
and
mov
xchg
aad
rcrl
push
or
inc
lock
pop
stos
aaa
test
cs
leave
vpmadcsswd
fcomip
or
pop
cmp
stos
shlb
pop
pop
clc
fidivl
out
enter
cmp
xchg
out
int3
jo
aam
jnp
mov
jb
or
rcr
sbb
and
xor
lahf
dec
inc
jo
sub
stos
or
pop
in
iret
movsb
inc
mov
inc
pop
jbe
adc
jmp
call
ficoml
push
stos
mov
xor
les
loopne
mov
pop
mov
xchg
sahf
clc
mov
mov
insb
push
stc
push
mov
mov
loope
jbe
dec
mull
in
push
call
sub
cmp
ljmp
mov
jno
cwtl
sub
push
jmp
leave
addr16
iret
cmp
cli
and
adc
lahf
cmp
and
and
sti
mov
iret
jge
xchg
out
sbb
cli
subb
pop
pop
xchg
and
shll
xchg
push
int
iret
cltd
imul
popf
dec
sub
call
cmp
pop
fisttpll
popf
and
xlat
xchg
insb
rorl
mov
dec
mul
jl
fs
cmpsl
mov
add
push
cmpsl
or
fadds
lock
mov
lods
push
dec
inc
subb
leave
aam
adc
mov
ja
push
push
scas
mov
sub
xchg
test
leave
add
movsb
leave
out
lret
scas
fdivrs
jp
push
scas
cmp
mov
mov
std
sub
xor
es
punpckhdq
sbb
cmpsl
push
je
dec
aas
push
scas
cmp
cmp
aaa
jns
fs
pop
jg
movsb
jb
pushf
sbb
sub
pop
pinsrw
ljmp
jb
hlt
enter
push
cwtl
push
dec
jmp
sbb
addr16
push
push
cs
hlt
dec
icebp
fsts
xchg
push
inc
loopne
insb
mov
ret
and
scas
iret
imul
lret
inc
sub
xchg
cmp
mov
mov
push
arpl
xchg
fstpl
jnp
sbb
jge
and
cld
lods
mov
sub
adc
aam
add
dec
add
inc
frndint
and
dec
call
ja
adc
lods
xor
push
andl
dec
mov
outsb
mov
sub
mov
cmp
push
push
sbb
dec
sub
sbb
mov
jge
adc
je
mov
jl
jbe
xchg
cmpsl
dec
lods
xchg
data16
cmc
mov
in
adc
pop
cmp
fcomps
scas
mov
add
jnp
int3
xor
mov
pop
pusha
sub
sub
insl
imul
ja
das
push
int
mov
shlb
out
addl
cwtl
push
fsubrl
and
shlb
stc
cmp
stos
sub
hlt
loope
or
pushf
test
gs
jge
sub
mov
or
inc
repz
jne
jnp
push
rorb
lahf
leave
int
outsl
lret
adc
js
jge
jns
enter
cmp
xchg
outsl
mov
pushfw
pop
dec
ficompl
pop
ret
es
cmc
movsl
sbb
pop
insl
add
lods
lahf
in
daa
adc
je
int3
dec
pop
mov
add
inc
es
pop
in
ret
sub
push
add
dec
in
and
mov
jbe
setns
clc
aam
dec
jge
testb
lret
sti
mov
adc
fldenv
and
lods
nop
or
mov
xchg
jne
pop
jae
popf
xchg
enter
inc
mov
push
cmp
cmpsb
int3
cwtl
jl
and
lret
lock
enter
dec
clc
pop
jo
add
pop
leave
dec
out
jp
roll
and
jmp
mov
ret
sub
orb
inc
mov
sub
push
pop
pop
jne
lret
dec
sub
call
inc
sti
jle
lretw
nop
pop
cmpsb
mov
mov
push
xlat
pop
shrb
fsub
adc
pop
adcb
cwtl
or
mov
jg
sub
cmp
push
fisubrl
inc
fdivl
lea
pop
or
cld
jge
rcrl
test
jle
aaa
lret
fsub
clc
hlt
pop
addr16
push
pop
pop
movsb
pop
dec
or
mov
jecxz
jge
lods
scas
mov
inc
mov
out
rolb
pop
sub
mov
push
jns
jecxz
xorb
int
cmp
pop
lret
add
movsl
push
push
sub
mov
sub
pmaxsw
scas
loope
cli
hlt
pop
cmpsb
fcmovne
lods
jecxz
lcall
lock
xor
adc
push
pop
jmp
inc
mov
sbb
repz
push
lret
push
fisubl
ffreep
mov
sbb
jg
stc
movsl
out
cld
loope
cwtl
adc
stos
and
ljmp
add
add
fstpl
sub
jl
cmpsb
dec
add
xchg
fbstp
sbb
xor
lahf
cmpsb
roll
ficoml
imul
out
lcall
sbb
sbb
lods
mov
sbb
lahf
dec
cmpsl
ljmp
adc
add
ldmxcsr
jbe
bound
aad
insl
das
sahf
pop
cwtl
sub
in
xor
sub
pop
pop
test
idivl
jle
mov
or
lods
cwtl
ret
push
sub
xor
sub
sub
mov
inc
add
outsb
fcmovnu
mov
pop
dec
sub
and
mov
and
mulb
sahf
sbb
out
lcall
fidivl
clc
mov
or
xor
jns
sahf
sub
in
ss
call
movsb
mov
jne
cld
cwtl
xchg
ss
pop
fcmovu
pushf
or
xchg
dec
push
cltd
subb
mov
or
push
cmp
jnp
mov
das
test
fadd
inc
or
xchg
enter
mov
in
out
pop
mov
enter
xlat
mov
loopne
test
insl
stc
sub
mov
jge
xchg
idivb
mov
mov
pop
mov
mov
sub
add
pop
leave
nop
adc
fiadds
mov
push
std
mov
in
inc
cmpsb
sub
test
ds
ljmp
leave
add
add
push
scas
mov
cmp
mov
mov
lahf
jge
jmp
fsubrs
inc
inc
xchg
fcoml
mov
scas
sbb
fimuls
fmul
out
fistps
add
leave
cmp
arpl
fsubrl
mov
dec
xor
push
and
lock
jbe
dec
ljmp
lea
aaa
mov
and
jmp
rclb
ds
lcall
nop
aaa
inc
sbb
lock
sub
mov
insb
add
rcll
jno
pop
pop
lret
pmullw
out
xor
push
sar
out
subb
sub
sub
pop
or
rol
pop
in
mov
je
into
adc
pop
or
sub
inc
pushf
xchg
xchg
stos
mov
cmp
sub
int
push
add
ja
out
lods
out
addr16
sahf
or
jnp
lahf
mov
out
cmpsb
jle
scas
mov
call
lods
mov
ljmp
or
insb
insb
mov
int3
and
mov
fmul
cmp
pop
ss
mov
add
into
out
mov
in
adc
fs
jb
loopne
sarb
xchg
leave
push
std
mov
cmp
pop
xchg
jl
hlt
sarb
jne
add
sbb
pop
sti
inc
outsb
popa
push
jl
popf
flds
call
sahf
leave
jmp
and
push
push
or
push
enter
jle
in
mov
pop
or
dec
xor
shll
dec
dec
rcll
mov
mov
aaa
scas
cmp
test
jno
mov
ja
jae
mov
fstl
lret
insb
repz
pop
and
cwtl
lock
push
call
and
outsl
mov
dec
movsb
out
incl
cmp
fisttps
inc
or
mov
movsb
add
stc
jae
std
sub
sub
imul
mov
pushf
and
jecxz
pop
int
pop
push
add
lods
fidivrl
push
movsb
pop
cmpsb
push
loope
lock
ds
mov
inc
lods
hlt
cmp
mov
push
mov
data16
jnp
mov
outsl
jle
inc
sub
mov
sti
pop
mov
in
outsl
sub
das
push
jl
ljmp
or
dec
andb
les
mov
hlt
test
or
xor
pop
inc
and
xchg
or
roll
gs
imul
stos
lahf
insb
sti
rcll
pusha
outsl
pop
cmpsb
jo
dec
mov
cmp
mov
mov
cltd
movsb
pop
sub
lahf
xchg
lcall
push
jl
mov
pusha
out
shrb
sub
push
mov
test
mov
test
push
loop
loope
out
pop
into
add
mov
std
and
movsl
dec
cmp
mov
stc
rclb
jmp
aam
cmp
sub
jae
xor
fiaddl
sbb
enter
add
mov
xor
ja
sahf
nop
dec
lock
rclb
test
adc
xor
sbb
dec
scas
mov
fcomps
in
sbb
or
mov
pushf
push
pushf
push
jp
enter
pushf
sbb
mov
out
pop
or
shl
or
test
cmp
cli
jl
lea
push
sub
xlat
mov
rolb
loopne
inc
nop
xchg
test
imul
cwtl
sub
add
sahf
adc
jecxz
jnp
es
jo
out
jns
stc
fsubrs
repz
dec
in
ret
inc
or
shrl
stc
mov
cmpsl
mov
ds
lret
ljmp
popf
cld
xchg
clc
mov
and
ja
ror
mov
pushf
sub
xchg
shlb
adc
mov
lret
mov
fsubs
mov
pop
mov
pop
insb
aas
lea
mov
jg
pop
test
mov
pop
mov
lret
sub
or
mov
mov
fldcw
pop
ja
rcr
jnp
sub
rcrb
ficoml
addb
out
cmpsl
out
dec
dec
aas
or
test
mov
dec
cmc
xchg
sub
pop
push
std
loop
cmp
cmp
lcall
leave
in
push
mov
mov
inc
jmp
xor
adc
out
lret
mov
xchg
mov
jp
ljmp
lret
jbe
scas
mov
xchg
xchg
xchg
dec
cmpsb
adc
int3
mov
push
inc
lods
or
ror
pop
jb
adc
fisubrl
push
stos
dec
int3
push
dec
out
lock
dec
loopne
pop
pushf
xchg
out
cmp
imul
sarb
xchg
lret
or
pop
pminsw
rcl
arpl
in
cmc
xor
lret
mov
cmp
cmp
pop
xor
hlt
pop
sbb
leave
adc
testb
aam
xchg
inc
outsl
jns
int
jp
cltd
adc
jge
loopne
js
jle
jns
xchg
or
das
and
jmp
sbb
imul
int
sbb
cld
mov
enter
sub
jnp
fidivrs
dec
sub
sbb
test
cmp
or
mov
add
mov
pop
leave
jbe
fs
cmp
shrb
test
xchg
xchg
cmp
cmpsb
dec
sti
push
add
pop
sub
hlt
fwait
xor
lahf
loop
mov
leave
out
fimuls
push
and
fcomp
jmp
jp
das
or
dec
test
ret
data16
xor
insl
cmp
rcr
scas
cmp
sahf
sub
mov
into
dec
mov
jae
pushf
pop
sub
xor
pop
movsb
dec
shr
inc
lods
xor
sub
loop
push
and
cmc
movsl
pop
icebp
gs
or
out
test
mov
lret
dec
enter
ret
mov
sub
faddl
in
and
mov
mov
mov
add
push
sbb
hlt
mov
lret
shll
xor
xchg
out
sub
jnp
dec
outsl
and
mov
mov
fidivrs
enter
std
scas
fcoms
addr16
sbb
cld
pusha
pop
and
or
gs
jo
jge
lret
or
iret
xor
scas
xor
je
mov
test
mov
push
mov
jo
inc
mov
cli
fcompl
cmp
fmuls
shrb
push
add
or
and
leave
int3
loop
add
mov
or
stc
int3
addr16
leave
cmp
loope
add
test
ret
std
dec
pop
push
mov
sbb
mov
jg
cmp
pushf
jle
add
nop
sbb
nop
fidivl
mov
or
sti
xlat
scas
mov
mov
xchg
mov
data16
lods
jnp
mov
sub
or
mov
insl
and
push
or
and
gs
push
and
dec
sub
scas
sarl
test
xor
lahf
leave
push
adc
clc
mov
sbb
lahf
pop
inc
je
movl
int
xor
pusha
push
outsl
inc
adc
sbb
je
jbe
mov
pop
lock
stc
imul
inc
mov
loop
loopne
or
jo
lods
out
cmp
pop
sub
pop
jge
sbb
add
mov
sbb
push
dec
mov
dec
jle
aaa
mov
stos
int3
insb
mov
mov
jmp
dec
out
sub
sub
sub
mov
scas
or
adc
test
ret
cmpsb
imul
or
les
decb
mov
out
sub
mov
push
xor
push
mov
movsl
dec
imul
pop
push
xchg
sub
shrb
cmp
xchg
cmc
lcall
dec
dec
outsl
ljmp
loopne
lds
inc
cmp
insl
adc
cmp
es
jnp
push
test
mov
pop
vpsrlq
int3
mov
cmpsb
in
in
jmp
lahf
mov
cld
xchg
aas
pop
outsl
mov
ljmp
pop
sub
fisubl
inc
xchg
stos
cld
and
mov
sbb
cli
aam
mov
mov
mov
movsb
inc
cmp
ss
xlat
and
insl
enter
dec
xor
jns
adc
add
scas
arpl
mov
int3
lea
cmp
sub
sub
lahf
mov
cmp
fnsave
dec
lea
push
ja
sub
sarl
or
cld
sub
pop
subb
leave
out
cmp
jb
lcall
mov
loopne
shlb
mov
xchg
insl
jae
rcrb
cmpsl
sub
mov
push
cmp
int
repz
loopne
loopne
sub
outsb
pop
clc
cmp
jns
lea
fwait
popf
xchg
jno
loop
movsb
icebp
sarb
in
push
pop
push
loop
mov
dec
shrb
enter
ret
imul
inc
ja,pn
ret
mov
xchg
jns
or
mov
rcrl
adc
push
ljmp
test
xchg
ljmp
pop
scas
loop
lahf
xchg
sub
test
inc
fstpt
insl
fnstcw
mov
sub
nopl
pop
loop
and
dec
mov
inc
jp
aad
xlat
or
cwtl
push
loopne
psubd
fsubrl
fimull
outsl
xchg
das
ljmp
mov
cmpsb
iret
loopne
xor
push
xchg
fstpt
fwait
lods
inc
pop
mov
das
into
dec
lahf
mov
sahf
cmpsl
ret
mov
insb
jg
xor
sub
out
xor
dec
jns
lds
fwait
cmp
and
xor
push
les
fdivr
sbb
jge
lea
int
ret
jge
mov
enter
mov
lret
mov
and
hlt
in
dec
cmp
arpl
test
arpl
das
movsl
mov
aaa
inc
pop
push
fwait
lock
jle
push
sbb
push
mov
sub
push
sbb
aad
fs
ja
pop
xchg
push
popf
test
mov
nop
jg
jge
or
inc
jo
repz
pushf
adcb
int
cli
mov
insl
stos
das
sti
lds
or
pop
mov
movsb
int3
lock
faddl
data16
js
mov
enter
fdivl
ja
addb
outsl
mov
pshufw
lock
push
shlb
mov
cmp
cs
xor
fmuls
fimuls
push
cmp
push
cmp
sbb
jmp
push
repnz
or
push
mov
adc
loope
lcall
addr16
sti
pop
scas
lcall
fs
nop
out
repnz
mov
mov
push
enter
push
sub
sub
dec
jp
cmc
and
nop
iret
pushw
sbb
in
and
mov
hlt
lret
cmpsl
out
ror
repz
mov
rcl
in
lcall
subb
das
stc
cs
xchg
sub
stos
xchg
xor
popf
rolb
jp
pushf
dec
add
dec
add
mov
jnp
adc
cld
mov
loope
popa
std
stos
mov
enter
sub
xchg
stos
xor
lcall
rcrb
pushf
dec
push
out
dec
pop
mov
sub
lods
out
int
pop
mov
test
sub
pop
scas
and
mov
push
outsl
ret
ljmp
xchg
mov
int3
xor
dec
int3
lea
or
std
rol
mov
into
jge
sub
sub
fiadds
loope
test
mov
add
out
in
in
daa
sub
adc
es
lret
mov
scas
aam
movsl
aaa
jmp
mov
mov
cltd
out
or
call
subl
aas
push
push
mov
sahf
or
iret
je
ret
push
ror
mov
int3
xor
xor
lods
adc
cmpb
stos
inc
shll
push
jbe
lods
lcall
ljmp
lret
faddl
jbe
cltd
dec
fnstenv
out
xchg
ljmp
out
cwtl
ljmp
lods
popf
sub
loopne
pop
sbb
mov
rclb
push
dec
gs
push
jge
dec
ljmp
mov
push
scas
lea
rcr
inc
xlat
ret
push
test
push
jns
stos
lahf
sub
rcrl
scas
dec
loop
stc
sbb
movsb
iret
sti
rorb
stos
gs
sub
mov
call
mov
lods
ja
add
in
popf
mov
je
lods
cmp
push
pop
jg
outsl
pop
dec
fstpt
xchg
testl
addr16
sub
dec
xor
pop
pushf
mov
fistpll
push
scas
jbe
dec
insb
mov
inc
into
mov
sarl
scas
shl
push
iret
aas
lret
adc
scas
inc
jecxz
cmc
lcall
fs
jl
jl
rcrb
sbb
aaa
mov
enter
imul
mov
jmp
cmpsb
loop
aaa
pop
mov
sbb
mov
or
pop
sub
lock
or
mov
pop
pop
ds
aaa
lea
add
out
adc
mov
add
inc
sbb
ret
ret
scas
in
mov
in
test
imull
cwtl
addr16
cld
sub
xchg
icebp
jne
inc
sbb
lcall
pushf
adc
pop
xchg
shll
fwait
imul
stos
dec
mov
mov
lds
js
or
int3
add
cmp
in
sbbb
adc
stc
xchg
mov
cmpsb
add
push
loopne
imul
sti
test
xchg
dec
ret
divl
imul
xor
inc
out
xchg
roll
jbe
shll
cmpsb
sub
mov
sub
js
jge
mov
jmp
movlps
fxch
push
lods
mov
cmpsl
cmp
in
push
stc
nop
push
mov
sub
aam
loopne
mov
arpl
js
fs
movsl
cmp
push
movsl
mov
and
cli
lcall
movsb
push
lock
sub
jae
fdiv
jmp
inc
adc
cmp
inc
and
out
jnp
jecxz
inc
jbe
mov
test
jae
add
hlt
add
out
dec
pop
lret
getsec
in
fdivrl
movsl
gs
pop
dec
and
and
dec
insw
mov
movsl
pop
jge
fdivrl
sub
out
cmpsl
lods
test
adc
imul
loop
mov
sub
jbe
lret
mov
in
out
dec
xor
sub
add
js
call
popa
dec
adc
scas
mov
stc
subb
lods
loopne
cmp
test
imull
push
pop
jb
or
movsb
mov
movsl
mov
and
lock
xchg
lock
jmp
jecxz
jae
call
sbb
cmp
in
pop
push
stos
sub
push
jb
jb
dec
mov
sbb
imul
enter
movsb
fcmovnu
cli
js
js
mov
das
xchg
mov
bound
stos
cmp
nop/reserved
add
mov
cmpsb
sub
rclb
sbb
sbb
pop
jp
push
call
fmull
test
push
neg
aam
dec
lahf
xchg
dec
mov
enter
push
shlb
scas
lock
loopne
and
mov
scas
push
and
or
addb
mov
add
dec
test
rcrb
xlat
and
add
jmp
ljmp
and
mov
inc
adc
movsl
mov
in
and
sbb
mov
arpl
call
lock
xor
dec
stc
xchg
lods
repz
movsb
jmp
pop
cltd
pop
and
jo
jl
movsb
bound
mov
leave
sub
inc
add
cli
adc
jge
mov
inc
adc
xor
mov
adc
pop
rcl
mov
test
lahf
inc
leave
fdivr
dec
jns
mov
rcr
jbe
lods
jnp
jge
inc
imul
xor
loope
push
fsubrp
jo
cmp
leave
cmpsb
or
jp
mov
jp
cld
pop
push
out
leave
gs
bound
pop
adc
inc
push
mov
addb
cmp
sub
andb
or
sbb
mov
cwtl
push
xchg
es
dec
xorb
ss
cmp
mov
push
xor
cmpsl
or
enter
pop
pop
mov
xchg
push
mov
andb
cmpb
scas
rorb
cmpsl
xchg
adcl
or
enter
push
xchg
shll
mov
xor
fsubrs
jnp
je
sbb
add
push
iret
test
mov
movsl
xor
add
adc
and
mov
jle
cltd
ja
rcll
push
push
dec
fucomip
imul
les
cmp
cwtl
xor
sub
cltd
mov
and
sarl
lcall
mov
out
test
jbe
test
ljmp
inc
rolb
repz
cmp
dec
js,pt
cmc
or
lea
cmpsl
movsl
inc
jp
jnp
dec
and
push
cltd
sub
test
dec
mov
inc
sbb
in
xor
fldlg2
xor
cmpsl
or
or
and
lock
roll
icebp
jns
cmp
or
push
pop
mov
lock
cwtl
mov
mov
and
xor
insl
js
test
lcall
movb
inc
enter
js
out
in
es
lods
scas
mov
sar
cmp
and
daa
cmp
inc
lock
fmuls
xchg
es
cmp
push
js
dec
adc
cmp
push
inc
std
jecxz
outsb
in
clc
jecxz
xchg
lock
mov
pop
sub
fxch
sub
sti
bswap
mov
push
mov
inc
jge
sub
repnz
dec
mov
jmp
les
dec
mov
and
shrb
repnz
ljmp
mov
or
dec
push
jns
xchg
dec
jmp
scas
enter
bound
repz
test
mov
les
xor
rcll
jecxz
mov
icebp
dec
or
cld
fidivrs
test
outsl
mov
rcr
lods
loope
jmp
icebp
inc
int
filds
mov
cmpsl
mov
lods
pop
fldcw
sub
loopnew
push
or
dec
shlb
out
fadd
scas
sbb
sub
push
push
aaa
mov
test
pusha
into
mov
push
cmp
push
pop
test
mov
jns
sarl
fisubl
test
xchg
enter
mov
and
movsl
xchg
jbe
je
or
lods
xchg
roll
int
sub
jmp
xor
nop
scas
and
xor
lahf
loopne
lock
mov
dec
bound
test
ja
lock
scas
rolb
fwait
push
cmp
negl
pop
mov
mov
mov
cwtl
sub
fistps
shlb
lret
mov
addr16
addr16
shl
push
std
sar
mov
scas
mov
pop
inc
imul
add
mov
aam
hlt
in
pushf
stc
and
cld
test
push
outsl
and
stc
clc
adc
sub
int
cmpsb
je
pop
fsubrs
dec
mov
lcall
call
lret
int
pop
fadd
lret
sbb
fsts
pushf
push
pop
int
jbe
push
add
cwtl
mov
sbb
fwait
lods
fildll
inc
test
js
stos
dec
je
sub
push
sub
icebp
lods
faddl
or
out
test
imul
cs
xchg
pusha
pop
loopne
push
lds
cltd
mov
js
dec
push
repz
or
out
jb
outsl
loope
js
add
cmpsb
ljmp
negb
jg
mov
push
pusha
dec
out
xchg
clc
cmpsb
inc
std
mov
rclb
and
mov
roll
sub
inc
mov
cmp
mov
pop
sub
ljmp
xor
lods
test
pop
fisttpl
call
and
or
cltd
mov
mov
dec
cli
sub
call
add
xorl
fildll
cmp
mul
pop
mov
dec
sti
push
lret
andl
test
cmc
cltd
cmpsb
and
sbb
pop
pop
jp
ljmp
push
pop
cmp
scas
imul
out
mov
jle
mov
mov
cmp
lea
mov
pusha
pop
add
call
daa
fsubrs
jmp
enter
push
in
mov
std
sarb
lcall
lds
ret
jmp
xor
lock
pop
in
sbb
hlt
nop
jmp
out
mov
pop
insl
xchg
push
ss
push
mov
sub
out
cmp
cmp
xchg
insl
mov
xchg
cmpsl
into
ret
scas
sub
jmp
adc
lea
in
jmp
into
dec
lahf
and
in
mov
xchg
sbbb
sbb
sub
pop
nop
mov
stc
dec
jb
xchg
jo
dec
popf
js
out
lcall
inc
and
sbb
stc
lcall
int3
test
mov
sub
cmp
push
loopne
loop
dec
fldenv
gs
inc
call
mov
ror
pushf
jecxz
push
jge
pop
fisubs
inc
sbb
mov
mov
in
loopne
outsb
cmpsl
in
mov
jmp
int
mov
mov
jnp
sub
leave
jecxz
test
inc
sbb
gs
push
stc
fs
mov
and
xor
inc
loopne
loopne
aas
mov
inc
jmp
flds
pop
jmp
fists
int3
mov
sbb
inc
pop
popa
cmp
out
push
arpl
cmpsl
inc
stc
mov
xchg
xorb
ror
movsl
std
adc
rcl
jecxz
aam
mov
mov
into
lret
ljmp
sub
shlb
out
or
shr
mov
loopne
cmpsl
lret
movsb
test
sub
shl
into
jl
and
and
ret
test
jl
mov
loope
sub
lock
rorb
stos
lcall
jns
loopne
sub
sub
adc
adc
in
stos
push
mov
imulb
fwait
cltd
xchg
jmp
pop
icebp
stos
fildll
imul
push
data16
pop
lods
popf
test
mov
test
pop
mov
mov
add
sub
test
xchg
mov
sbb
cmpsb
jns
insb
inc
add
mov
insl
divl
jecxz
push
ja
pop
xor
xchg
stc
js
push
loope
pop
sub
js
mov
rcrl
cmp
sbb
cmp
out
loope
ljmp
out
jp
mov
sbb
push
dec
incl
in
sub
in
sub
sub
and
add
call
xchg
lods
xchg
mov
imulb
sub
lret
movb
or
iret
ljmp
mov
scas
mov
test
cmp
nop
mov
jl
test
mov
mov
call
and
sub
dec
jmp
or
clc
mov
sub
jge
push
dec
addr16
jo
pop
and
fidivl
das
jo
mov
int
stc
mov
aad
stos
scas
jb
adc
stos
xor
pushf
sbb
sbb
stos
cltd
jl
ret
jb
fldl2e
scas
clc
cmp
lret
jp
jle
jbe
mov
stos
lret
arpl
jo
adc
pusha
xor
fmuls
jle
and
or
and
cmpsl
outsw
lods
out
ret
rorl
test
or
and
mov
test
fstps
push
push
pop
popa
pop
lock
inc
fldz
jmp
sub
int3
push
push
addl
sbb
enter
loopne
mov
push
into
sub
mov
int3
bound
pop
mov
fisttpl
xchg
xor
pop
or
fists
mov
jg
out
xchg
mov
jmp
test
pop
sbb
sbb
mov
mov
and
int
aam
sti
jnp
into
mov
lret
sub
cmp
lret
push
fisttpll
jge
in
push
pop
inc
cmp
and
jns
lret
xlat
call
sti
aad
testb
test
das
mov
sahf
mov
ret
push
sub
or
adc
in
lea
jl
mov
lcall
pop
add
hlt
add
in
sbb
cmp
iret
or
mov
jmp
test
addr16
xchg
loope
in
xchg
mov
mov
out
nop
call
out
inc
cmc
imul
cltd
stos
fwait
mov
add
scas
movsb
test
test
jl
xlat
mov
out
mov
js
call
ja
push
sub
insl
sub
pushf
dec
in
clc
pop
xchg
cmc
cli
sbb
stos
bound
mov
out
enter
push
enter
xchg
leave
es
mov
pop
pop
test
insl
push
xchg
data16
cmpsl
test
push
call
test
icebp
bound
and
lods
popf
cmpsl
clc
ret
imul
xor
jmp
and
jmp
enter
cmpsl
mov
cmpsb
add
aad
es
scas
or
in
xlat
lock
mov
roll
pop
mov
pop
call
inc
popf
pop
push
cwtl
push
add
mov
fsubrs
iret
cwtl
adc
and
out
icebp
frstor
xchg
repz
call
jo
leave
shufps
cmpsl
mov
je
ljmp
jnp
arpl
mov
loopne
icebp
in
lret
cmpsl
insl
and
lock
and
in
in
scas
jmp
int
out
dec
fsubrs
bound
outsl
inc
adc
pushf
loopne
test
pushf
scas
call
fstps
jo
in
jno
cmc
int3
or
imul
ljmp
stos
movsl
jp
xchg
jmp
adc
sub
arpl
lods
lcall
xchg
in
sbb
or
lds
adc
dec
jmp
inc
adc
movsl
or
push
stos
add
pop
mov
xchg
lea
pop
jge
std
sbb
sahf
data16
and
lahf
loope
adc
cmpsb
cmp
mov
or
out
movsl
cmp
ja
push
push
or
pop
fdivrl
dec
mov
mov
aad
and
mov
lods
push
lahf
xchg
xor
sub
call
sub
cmc
jb
frstor
mov
xchg
mov
pop
fsub
sub
insl
add
mov
cmp
out
and
shrb
xchg
fs
cmpsl
pop
leave
fnstcw
xchg
movsb
jmp
stc
jp
and
addr16
flds
pop
jle
sbbl
inc
lods
or
pop
mov
cld
xrstor
ljmp
mov
cltd
ret
int
loopne
adc
push
sub
push
mov
sbb
int
rol
das
lcall
cmp
test
xchg
pop
mov
into
stc
aas
xor
lods
add
adc
add
dec
adc
das
dec
push
addr16
jl
push
in
cmp
mov
out
frstor
mov
out
movsb
or
jbe
das
add
inc
gs
repz
jno
sub
mov
lret
cwtl
das
and
lea
int3
sub
mov
pop
adc
leave
stos
in
mov
ror
andl
fsubrl
or
jle
fs
icebp
shl
jo
data16
nop
popf
outsl
sbb
mov
pop
mov
cmpsl
shlb
and
pop
out
jp
mov
sbbb
faddl
pop
mov
push
es
jle
test
lods
in
xchg
out
lret
repz
mov
sti
push
adc
adcb
fnstsw
mov
inc
stc
in
pop
mov
aad
stc
mov
out
mov
cmovs
inc
jmp
jle
outsl
xchg
sub
enter
sbb
cmpb
pusha
ss
xchg
cltd
leave
enter
cmp
push
and
lahf
xlat
sub
ss
nop
out
pcmpgtd
pop
mov
or
inc
cmp
cmp
fstps
cmpsl
push
leave
lcall
mov
jnp
jmp
dec
pop
mov
mov
ret
sub
loop
lds
daa
shl
sbb
subl
movsl
imul
scas
ljmp
in
or
stos
dec
xor
sub
push
loopne
sub
stc
push
cmp
cmp
adc
jp
faddl
lods
pop
ljmp
lret
dec
cmp
jae
lret
into
mov
leave
hlt
push
movsb
inc
push
xor
mov
into
jbe
test
lock
and
ret
jb
ljmp
mov
push
pop
dec
and
mov
pop
leave
mov
sbb
repz
jmp
popa
pop
cmp
ret
sbb
int3
fs
push
dec
ret
mov
add
out
into
adc
sbb
rcrl
cmpsb
inc
leave
cmp
mov
xchg
pop
mov
mov
sub
jmp
mov
and
add
es
pop
lcall
lea
rcrl
ret
mov
sub
cwtl
pusha
add
mov
mov
cmc
scas
punpcklwd
sti
loopne
mov
loop
pushf
loope
fldt
mov
inc
popa
popa
repnz
pop
rolb
test
xor
in
or
js
jecxz
out
lea
mov
cltd
jo
mov
jge
xchg
outsl
jae
mov
ret
ljmp
jecxz
push
and
outsb
cmp
dec
xor
data16
jp
aaa
sbb
loop
aas
mov
test
mov
lret
into
stc
or
fsubr
subl
popa
mov
mov
jle
jae
out
or
cmp
mov
adc
and
stos
out
lods
fsts
inc
mov
cltd
lcall
jbe
imul
mov
cmpsb
adc
fdivs
cmp
lcall
bswap
pushl
lea
scas
and
dec
aas
xor
mov
je
std
in
and
xor
sub
push
imul
rorl
jp
sub
lock
and
adc
fsubrl
scas
add
sub
dec
lds
lcall
pop
ret
mov
nop
std
jbe
outsb
adc
mov
daa
cmp
in
mov
mov
insb
adc
incb
pop
xor
out
cmpsb
jmp
pop
dec
inc
rorb
leave
movsl
xor
psubusb
xchg
jnp
in
out
sbb
jle
lahf
nop
sti
imul
inc
adc
sbb
mov
pop
push
mov
icebp
pushf
fmuls
fmul
pop
enter
mov
inc
dec
lcall
lea
jl
push
xor
loope
pmulhuw
adc
xchg
sbb
clc
inc
dec
mov
hlt
out
sbb
lret
cmp
and
adc
dec
rorw
or
sbb
jno
mov
pushf
mov
mov
stos
push
push
movsl
mov
mov
push
icebp
out
aaa
ret
fwait
test
push
mov
sahf
lahf
fisubl
mov
fisubl
js
out
jo
xchg
pop
dec
in
jl
and
xchg
out
xchg
mov
cmpsb
mov
popf
aad
add
bsr
lret
cmp
mov
adc
call
subb
sub
cmpsl
leave
jge
stc
std
mov
js
jmp
in
data16
aam
bound
nop
loop
lret
push
cmc
sbb
in
mov
leave
dec
out
adc
je
lret
and
mov
jle
push
les
loopne
movsl
cltd
mov
aad
jp
imul
and
xchg
sub
sbb
js
fsubrs
jo
lcall
mov
in
and
push
addr16
jl
and
dec
and
push
sbb
jnp
rcr
push
hlt
int
movsb
out
test
pop
ljmp
mov
mov
clc
mov
mov
test
adc
std
xchg
idivl
int3
out
pop
insb
push
dec
pop
scas
or
sti
lods
jne
sub
test
and
test
push
sbbl
dec
pop
addl
or
lret
inc
int3
xchg
lock
mov
push
cmp
test
xor
mov
sbb
shrl
mov
push
out
jae
xchg
les
jnp
push
xor
inc
fdivl
cmp
mov
mov
xorb
sbb
mov
or
and
push
cltd
pusha
stos
cmp
sub
ljmp
lret
cmp
stc
xor
scas
xor
push
rcrl
sbb
mov
adc
push
lods
adc
sub
iret
stos
jbe
push
mov
inc
dec
add
leave
pop
pop
lods
mov
or
adc
rorb
arpl
mov
aaa
cmp
fnstenv
mov
mov
popf
mov
shll
cli
jnp
ret
leave
jo
mov
sub
jnp
enter
adc
inc
in
test
mov
js
lock
mov
dec
push
mov
lock
stc
jo
insb
push
push
shrl
inc
mov
lods
into
fists
shll
rcrl
enter
lret
mov
pop
pop
cmc
push
call
jge
pop
xchg
inc
pusha
sbb
dec
aam
push
std
add
loopne
leave
leave
out
repnz
cmp
testl
push
popf
pop
je
aas
inc
lds
push
jmp
loope
jae
popa
sahf
add
cmp
pavgb
push
lcall
add
pusha
xchg
xor
mov
rcrl
xchg
jae
add
push
dec
cmp
daa
xor
push
jnp
cmovg
shll
cmpsb
insl
jmp
dec
and
cmpsl
cmpl
ret
inc
loop
pop
inc
and
mov
mov
rolb
jp
imul
data16
insb
xchg
mov
xchg
cltd
out
std
fdivrs
in
cmp
mov
xchg
add
cmp
rcrl
aad
call
jmp
idivl
enter
addb
pop
cmc
mov
cli
pop
movsl
stos
cltd
jl
mov
sub
mov
cmp
mov
sub
movsb
mov
es
out
mov
std
mov
mov
push
data16
andb
inc
xchg
dec
jge
cltd
es
lods
adc
xor
and
jp
ret
jbe
mov
mov
cmp
push
inc
int
out
sti
jp
iret
mov
fisttpl
enter
pop
add
sub
jnp
andb
cmp
loopne
out
or
pushf
and
sti
out
ljmp
sbb
loop
les
out
enter
mov
xchg
sub
fisttpl
stc
imul
xchg
dec
mov
xor
mov
rcrb
sub
fbld
cmpsb
lret
or
aas
pop
ljmp
cmp
test
decb
dec
cmp
arpl
scas
in
push
subb
xor
sub
and
xchg
sarl
movsb
lods
lret
mov
cmp
das
jp
jecxz
adcb
and
mov
inc
pushf
addr16
test
sub
setae
negb
push
mov
ljmp
orb
fcmovnu
sbb
inc
sbb
mov
sub
mov
stc
loop
test
dec
cli
or
sbbl
dec
sti
in
pop
fstps
or
push
push
sahf
pop
sub
int3
movsb
sti
dec
mov
dec
int3
lea
inc
sbb
bound
pushf
sub
cmp
test
into
jp
and
frstpm(287
jmp
add
inc
adc
fisttpll
stc
cli
lods
call
out
sub
pushf
pop
call
dec
xor
das
fstpt
ljmp
cmp
sub
adc
cmpsl
adc
xchg
jl
mov
adc
mov
insb
sarb
fstpl
insb
ss
cmc
popa
mov
pop
mov
imul
cmpsb
in
sub
pop
or
inc
leave
mov
mov
xor
dec
andl
mov
and
sbb
xor
xor
add
repz
loope
les
shlb
popa
shr
mov
sub
jmp
je
lret
lds
in
adc
bound
dec
nop
in
mul
jo
stos
hlt
xchg
sub
jl
hlt
push
dec
test
or
insb
sub
jbe
mov
sub
dec
pop
dec
pop
and
arpl
and
sbbl
jmp
sbb
int3
out
mov
sbb
jns
add
je
inc
stos
in
lock
pop
xchg
mov
jo
mov
or
leave
lods
xor
mov
push
sub
loope
sub
out
fidivrs
dec
mov
jo
cmpps
and
mov
out
fidivrl
pop
mov
mov
xchg
es
inc
dec
mov
xor
lcall
aam
imul
lret
fisttpll
mov
pop
cmp
mov
adc
dec
xchg
stos
push
shl
cmp
pop
les
pop
fimull
mov
mov
lds
pop
mov
mov
test
pop
iret
xor
push
jmp
pushf
xor
cmp
mov
and
pop
push
outsl
pop
push
dec
rcr
dec
fsubrs
dec
inc
lea
or
js
lods
imul
mov
lcall
pop
cmp
nop
push
loop
mov
shll
ror
cs
iret
push
mov
sbb
fldcw
daa
cli
lock
mov
fsubs
ljmp
lods
call
imul
sbb
mov
pminsw
stc
mov
js
out
addr16
pusha
movsl
sub
stc
cmp
or
sub
xchg
lcall
stos
fwait
and
jo
in
mov
mov
rcl
mov
out
sti
es
or
pop
dec
mov
hlt
jg
ficomps
aas
jmp
inc
push
push
fistps
push
out
or
xchg
icebp
jp
stc
cld
push
dec
mov
out
pop
rcr
cmp
stc
pop
mov
or
mov
push
push
loope
jns
lret
mov
sahf
xlat
cmp
mov
pop
sbb
pop
cltd
outsl
aam
fisttpl
mov
sub
dec
aad
mov
cmpsb
cli
xchg
push
jp
jmp
pop
rcr
mov
out
xor
popa
lock
test
sbb
push
lea
pop
cmp
sub
jl
roll
sub
add
cmpb
cmpsb
iret
ret
push
sub
lret
jp
jmp
andb
or
test
mov
mov
push
pop
ljmp
sub
inc
in
add
je
es
inc
lock
and
add
scas
outsb
mov
test
mov
outsb
add
hlt
or
int3
cmc
pop
cmp
ds
clc
enter
sub
fcoms
shll
cmpsb
mov
lcall
inc
pop
jle
leave
mov
sbb
cmpb
test
jne
in
inc
in
inc
xchg
lods
jb
sbb
pop
lea
in
dec
mov
lret
jo
addr16
sbb
lea
rcrb
mov
jbe
jp
movsb
addr16
in
xlat
xchg
lret
fcomp
enter
sarl
sub
mov
pop
in
movsb
xor
cmp
jl
popf
scas
mov
push
das
cs
test
jbe
mov
fldcw
mov
jp
test
popa
cmp
addr16
mov
mov
jo
gs
leave
xor
add
loope
out
push
jecxz
into
jbe
popf
add
out
push
sub
sbb
sbb
or
shlb
test
js
pop
jle
dec
push
sub
sbb
sub
leave
loopne
push
mov
dec
inc
xor
divb
adc
cmp
aad
dec
mov
out
int
mov
mov
js
leave
out
jnp
insb
xor
add
sbbb
jae
lock
or
jmp
mov
sti
jnp
fsubrl
daa
dec
jmp
out
jecxz
mov
test
fbld
and
push
int
mov
lcall
sub
lcall
test
or
mov
push
enter
lret
pop
out
xlat
sti
cmc
adc
mov
lods
jae
xorb
sbb
lret
fstps
sub
jle
rorl
cmpsl
das
in
lret
sub
xor
xchg
add
rolb
inc
in
and
jo
in
loope
dec
pop
loope
mov
loope
jb
mov
std
mov
out
dec
inc
nop
dec
sub
clc
mov
xor
fcomip
cli
mov
sahf
sbb
push
iret
mov
mov
jge
sub
xchg
outsb
dec
inc
jl
cmp
pop
es
cs
push
lds
push
xchg
lcall
add
jl
push
or
or
je
jge
cmp
mov
stc
andl
adc
and
les
or
mov
test
pop
jg
out
add
popf
mov
dec
ss
pusha
dec
push
mov
inc
pop
sub
add
test
fldenv
dec
lea
iret
xchg
fidivl
xchg
in
xor
push
mov
out
push
dec
into
in
lret
sub
adc
dec
and
mov
mov
adc
leave
pusha
xchg
or
subb
mov
call
aaa
pop
lcall
jbe
bound
lcall
shlb
icebp
outsl
sbb
push
push
mov
icebp
pop
stos
fidivl
popf
es
pop
mov
xchg
mov
jmp
sbb
cmpsb
xor
std
testl
xchg
pop
push
xchg
pushf
dec
int
in
lcall
nop
pop
popl
stos
or
inc
fstp
pop
int3
lock
pop
pop
mov
cmp
stc
sub
mov
mov
sub
dec
cmpsb
inc
jmp
aaa
call
xor
pop
or
imul
std
dec
push
mov
jmp
leave
inc
xchg
jbe
lret
mov
into
cmpsb
inc
mov
sbb
xchg
repnz
xor
test
loop
cwtl
mov
xchg
aam
clc
mov
test
jg
flds
mov
ret
mov
aaa
pop
notl
push
or
negb
cli
test
lea
repz
sbb
mov
sbb
aad
in
ljmp
push
xchg
lock
sahf
cmp
in
lret
or
push
loope
adc
add
sbb
int
sbb
xchg
mov
js
addl
in
push
xchg
sub
jbe
adc
push
loope
mov
add
lahf
dec
out
push
and
mov
cmp
pusha
inc
add
or
incb
cltd
fnstenv
shlb
cmpsb
popa
jo
or
adc
lcall
movsb
xchg
loop
aam
jmp
add
sarb
iret
sub
rep
movsb
cltd
sub
cmp
ljmp
jle
mov
lcall
insl
lock
cwtl
jns
inc
sub
cmp
sub
mov
in
mov
lret
aam
add
inc
jno
fidivs
sbb
mov
scas
data16
fisubrl
lock
call
xlat
xchg
pop
adc
adc
push
push
cltd
inc
lahf
loopne
sahf
lahf
jae
jg
mov
fdivrs
inc
stc
sti
lds
adc
das
fdivs
movsb
xchg
push
push
adc
fnstsw
repnz
fldcw
adc
dec
mov
jmp
aam
inc
xor
push
xchg
add
xor
mov
outsb
or
es
sub
call
cmp
sahf
leave
add
adcl
in
cmpsb
mov
pop
inc
sti
out
cmpsb
xor
xor
cmp
dec
std
scas
sub
pushf
movsl
out
scas
jne
ljmp
sub
sub
xor
inc
dec
fistpl
push
pop
inc
ljmp
fs
addr16
add
mov
lret
adc
stos
shll
fnstenv
popf
pop
jecxz
mov
jo
fisttpl
sbbb
ja
push
clc
sub
jle
pop
into
add
or
jmp
cmp
aaa
adc
pop
inc
or
neg
fldenv
arpl
rcrl
arpl
fldcw
jb
int
pop
mov
and
int
or
sbb
ja
push
pusha
mov
inc
or
shl
jmp
xor
sti
push
lock
pop
es
cli
test
mov
test
mov
mov
andl
cld
inc
push
pop
js
in
mov
inc
shrl
js
rorl
sub
jb
cmpsb
out
jl
jae
cmp
jp
int
cs
repz
clc
repz
movsb
hlt
scas
insb
mov
pop
lock
cmp
movsl
xlat
jp
jmp
and
xor
xchg
enter
addr16
in
push
test
cmp
fwait
out
jg
or
inc
and
push
mov
aad
cmp
sub
fistpll
push
in
out
sbb
jg
leave
addb
aam
jmp
dec
push
mov
cmp
cli
mov
stos
xchg
movsb
popa
cmpsl
inc
out
pop
repz
shrl
inc
mov
and
sbb
or
insb
dec
sub
filds
mov
enter
pushf
pusha
xor
inc
sub
sbb
or
mov
aad
or
call
add
ljmp
mov
test
mov
icebp
or
in
pop
enter
xor
add
sahf
je
fstps
push
xchg
mov
or
nop
push
pop
jbe
xor
mov
inc
loopne
mov
push
es
test
mov
xor
jb
adc
out
sbb
out
in
mov
dec
cwtl
loopne
or
jns
cmp
inc
jl
ljmp
nop
shr
and
push
cli
movsl
mov
jle
inc
mov
ret
loop
inc
stos
lahf
outsb
push
orl
push
pop
out
cld
test
sahf
mov
mov
add
pop
aad
insl
out
dec
sti
xor
jo
jae
xor
and
lahf
aad
fwait
add
imul
mov
push
nop
lahf
adc
inc
dec
sub
std
fists
cmpsb
inc
lret
mov
and
sbb
movsl
mov
fisubrl
je
push
shlb
iret
dec
push
dec
mov
scas
fisubrs
push
push
sub
adc
xlat
jbe
mov
pop
and
ret
out
iret
mov
into
sub
xchg
lock
mov
jp
int
cmp
fidivs
movsl
dec
mov
lret
sbb
mov
dec
mov
call
ljmp
jge
sbb
sub
cwtl
movl
inc
inc
xchg
ds
sub
imul
clc
add
inc
call
sbb
test
cmpsb
enter
jbe
stc
adc
inc
les
loopne
push
and
mov
pop
add
mov
or
out
push
ljmp
pop
jmp
or
lods
shr
jae
inc
int
repz
je
lds
out
mov
sbb
mov
pop
fs
mov
mov
loop
cmpsb
jmp
sbb
mov
dec
cmpl
test
jb
int
movsl
xor
jecxz,pn
cld
push
cli
dec
sbb
aas
mov
inc
cld
push
mov
mulb
push
push
cli
stc
cmpsb
jo
inc
push
inc
jnp
icebp
mov
fisubl
sbb
out
jae
cmc
outsb
iret
loope
insb
test
push
gs
or
stc
shll
enter
fcmovb
call
rcrb
lea
or
push
cmp
into
lahf
sbbb
nop
leave
add
insb
xor
ficompl
out
mov
push
imul
inc
push
dec
aaa
push
scas
outsl
cltd
dec
mov
push
inc
adc
fisubl
xchg
test
je
sub
aas
sub
je
sbb
pop
inc
adc
pusha
inc
out
jg
clc
inc
mov
ds
push
sbb
cwtl
lcall
stos
xchg
fnstcw
sub
dec
lds
jno
outsl
push
leave
cmc
or
lcall
push
jmp
ret
lods
stos
xor
pusha
mov
jae
js
adcl
jecxz
or
stos
adc
mov
jp
leave
jbe
sub
mov
mov
inc
cmp
lods
xchg
jmp
pop
or
dec
leave
int3
jb
mov
adc
pop
cmp
lea
sub
test
inc
aaa
add
jge
stos
or
cmp
inc
mov
test
jnp
fs
jl
imul
lds
orb
jns
aad
jnp
int3
shrb
mov
lods
mov
fmuls
sbb
jb
cwtl
cmpsb
or
scas
jecxz
out
cmpsb
xchg
sub
cmpsl
lock
jge
adc
rcr
cld
and
out
and
mov
mov
insl
sub
ret
enter
mov
lods
ljmp
and
sbb
loop
sub
nop
jmp
inc
push
jo
aas
rcll
dec
dec
sub
pop
mov
push
imul
mov
cmp
push
push
cmp
ss
push
cmp
dec
cld
fxch
or
daa
cmp
enter
cmp
sbb
mov
or
mov
jo
sub
cmp
sub
jnp
sub
jmp
jmp
dec
sbb
subb
pop
lods
adc
adc
pop
pop
ljmp
pop
cmpsl
sub
pop
aad
ficomps
sub
adc
insb
or
push
in
ljmp
jns,pt
inc
xor
addb
xchg
push
pop
mov
inc
mov
cmp
push
stc
cmp
mov
lock
ja
sub
and
mov
out
sub
add
cs
stos
fdivrs
mov
xchg
call
icebp
jle
enter
jge
andb
sub
ds
sub
sub
mov
inc
jo
out
push
lods
and
les
jb
lret
mov
mov
inc
mov
lret
leave
mov
fcomps
push
or
xchg
or
push
loope
sub
adc
stc
cld
mov
or
lahf
sbb
mov
mov
dec
sti
ficoms
lods
or
xor
dec
in
sub
clc
push
into
and
ljmp
mov
mov
cli
loop
xchg
std
icebp
push
sbbl
fwait
lock
test
call
mov
call
lahf
or
cwtl
jecxz
sti
scas
rolb
les
lods
adc
jmp
into
sti
push
jmp
mov
push
cmp
lahf
dec
in
test
cmove
lods
jecxz
sub
xlat
jno
jns
sub
jns
mov
outsl
jmp
pushf
lahf
jge
lret
mov
adc
jbe
push
das
push
and
and
jbe
lret
out
sbbb
xor
jmp
lret
jmp
pop
fldcw
roll
out
lret
scas
sub
cwtl
lock
mov
dec
aam
mov
or
and
add
lahf
sbb
sarb
push
lahf
jbe
pop
lea
fidivrl
aam
xchg
sub
jge
or
and
mov
mov
lahf
js
sub
inc
pop
mov
jo
test
call
addl
fiaddl
fmuls
push
call
sub
xchg
mov
mov
aaa
cld
inc
loop
cltd
jbe
dec
lret
push
int3
sub
jmp
cld
jb
dec
aas
sub
leave
jbe
inc
pusha
lret
stos
xchg
adc
loopne
les
inc
les
inc
xor
test
or
push
xchg
cmp
xor
pop
jae
jge
pop
fs
dec
xor
pop
xor
sahf
mov
das
inc
sub
push
jecxz
mov
jo
imul
imul
jp
fsubl
ret
push
clc
ljmp
out
dec
jle
jns
cld
imul
xchg
mov
cmp
fidivrs
cmpb
dec
jmp
mulps
jmp
add
and
out
adc
jo
sub
fildll
in
lahf
pop
jae
lods
mov
imul
lods
rclb
ret
clc
sub
dec
add
movsl
mov
pop
jg
clc
cmp
xor
outsl
enter
int3
push
pushf
or
adc
fnsave
push
xor
cmc
jae
pop
cmp
out
cli
loopne
cmpsl
loopne
imul
nop
in
sub
popa
push
mov
std
scas
iret
pop
mov
into
adc
loopne
inc
ljmp
xor
cmp
lahf
mov
sbb
push
jecxz
mov
or
out
stos
mov
sub
xor
popf
imul
pop
cmpsb
icebp
mov
sbb
mov
sti
add
mov
inc
lock
mov
cmp
or
std
sti
sub
fwait
sub
fstps
adc
out
lret
sub
and
push
movhps
fimull
pop
stos
mov
in
pop
jmp
pop
js
mov
pop
lcall
sub
jbe
push
sbb
jnp
insl
test
push
dec
enter
in
or
inc
mov
ljmp
push
xor
pushf
xchg
scas
stos
out
inc
and
or
ds
sub
and
pop
ds
pop
insb
jmp
or
stc
mov
lret
or
ret
mov
stos
push
and
sbb
cld
adc
jmp
stc
cmpsb
pop
lret
push
mov
ljmp
loop
shr
dec
inc
push
lahf
loopne
dec
sub
jmp
sub
jo
cmp
push
mov
jno
jo
test
aad
clc
movb
mov
xchg
ret
push
jno
xchg
pop
fiadds
stos
inc
divl
mov
or
push
enter
jbe
and
sbb
sub
sub
psubb
xor
inc
dec
cs
test
daa
clc
xor
inc
pop
fidivrl
cmp
insb
pop
fdivrs
xor
cmp
dec
jle
out
cwtl
and
cmc
int
cmp
cwtl
sub
jae
jmp
out
ljmp
arpl
mov
loope
inc
adc
jae
dec
imul
add
inc
int
or
or
and
mov
inc
rorb
cmp
es
int3
add
data16
aaa
push
pop
scas
js
cmpsb
lds
sub
ja
jnp
lahf
lret
push
jns
cltd
push
stos
leave
or
xchg
cmpsl
out
push
lret
stc
inc
lds
jmp
addr16
faddl
push
mov
and
sahf
scas
add
xchg
popa
fwait
push
out
push
add
cltd
out
mov
icebp
je
jae
nop
aas
test
and
push
lea
and
push
xchg
stos
cmpsb
pop
lcall
hlt
push
inc
lock
cli
iret
jae
ljmp
leave
mov
ds
negb
lahf
ret
aaa
dec
aas
loopne
ja
mov
mov
push
int
dec
dec
inc
mov
fsubl
ljmp
lods
cld
out
adc
je
fldcw
jns
testl
mov
cmpsl
xchg
hlt
mov
imulb
cmp
pushf
repz
jl
pop
jp
mov
enter
xchg
add
lahf
out
push
push
cwtl
pop
dec
jmp
in
iret
sub
pop
outsb
shll
jmp
enter
ja
enter
stos
test
jecxz
and
and
lock
push
jmp
xor
dec
test
mov
aas
fldenv
mov
in
push
push
mov
push
enter
mov
cltd
into
out
jo
mov
and
jnp
iret
or
das
jl
mov
out
arpl
int
gs
aas
data16
test
sti
push
sub
sbb
cmpsl
sub
aad
pop
pop
jne
inc
mov
push
enter
push
dec
xchg
add
int
mov
scas
les
lds
push
nop
mov
mov
popa
fsubr
and
mov
inc
ljmp
mov
outsb
leave
push
mov
jnp
sub
sub
imul
sub
mov
mov
ljmp
mov
in
test
dec
push
cli
xchg
nop
adc
cli
inc
test
jp
jns
lret
sbb
lea
fisttpll
and
loop
lock
stos
mov
cmp
cmp
mov
cmp
mov
leave
arpl
enter
push
push
das
jns
sbb
testl
ljmp
aad
dec
or
pop
arpl
stos
loopne
dec
shrb
sub
cmp
jnp
cmp
push
push
testb
inc
scas
jns
add
lods
stos
addr16
mov
cmp
push
or
lahf
inc
or
out
cmp
stos
loope
pop
sahf
in
jbe
push
sub
out
jo
imul
out
shlb
inc
lods
popf
faddp
das
pop
out
cvtdq2ps
stc
inc
out
fdivrs
dec
out
ss
mov
push
dec
fdivrs
add
je
lcall
push
mov
lcall
test
push
iret
in
jb
xchg
les
jbe
pop
je
push
mov
inc
mov
rcrl
and
dec
lea
cmc
inc
rcr
or
cltd
loopne
xchg
lcall
xchg
aad
sbb
fwait
inc
xchg
sub
cltd
xor
xchg
add
push
rcrl
std
pop
adc
mov
fcomps
ret
sarb
dec
repz
sbb
lcall
rorb
or
test
addr16
inc
hlt
decb
gs
je
movsl
pop
adc
ret
popf
push
push
cli
inc
jo
test
pop
pop
fs
mov
sbb
leave
js
mov
imul
scas
fwait
popa
mov
mov
jns
sbb
repz
jmp
outsl
or
repnz
out
sbb
lahf
sub
jmp
xchg
push
scas
ja
mov
lret
or
adc
stos
in
mov
mov
icebp
push
add
dec
into
cmp
sbb
bound
loop
add
lret
imulb
pop
sub
pushf
loopne
imul
mov
cmpsb
sub
in
xchg
lds
sarb
out
mov
sbb
and
dec
and
and
loopne
jnp
iret
lods
lahf
pop
or
mov
cmpl
out
das
jnp
mov
pop
xchg
stc
arpl
sbb
or
test
mov
test
and
fsts
push
enter
xor
test
dec
leave
js
sub
test
and
shrb
mov
je
fs
loope
stos
cltd
cmp
mov
and
xor
loopne
or
add
xchg
out
lea
cs
inc
fstl
mov
ja
dec
into
insl
out
ss
lds
or
enter
daa
or
mov
loopne
push
mov
or
div
ret
xor
add
xor
cltd
jmp
dec
inc
push
sahf
loop
js
repnz
test
mov
xlat
push
popa
inc
lds
icebp
jae
loopne
enter
cmp
outsb
popf
sbb
dec
das
in
fsub
pop
loopne
popa
leave
fisubrl
enter
cwtl
sub
cmpb
test
lret
inc
pop
lcall
lahf
xchg
arpl
xchg
jnp
and
jns
ja
jge
imul
rorb
cmp
lret
sbb
movsb
dec
mov
cmpsb
int
call
addr16
ret
nop
xchg
pop
pusha
mov
lahf
insb
popf
inc
lret
insl
sbb
lods
sbb
xchg
in
out
cli
mov
dec
pop
js
mov
sub
shll
mov
insb
dec
mov
xor
cmpsb
sbb
mov
and
add
sub
dec
mov
cmp
fstl
aam
adc
das
mov
out
xor
cmpsb
lret
pop
adc
out
lret
push
icebp
leave
aas
aam
fnstsw
jmp
mov
sbb
lods
adc
add
in
dec
xor
mov
mov
dec
push
push
leave
insl
inc
cmp
cmp
mov
ret
fdivs
mov
ret
in
push
mov
bound
shl
cmpsl
stos
and
sub
repnz
sub
std
adc
jbe
or
into
loop
lods
cmp
imul
jnp
ljmp
flds
orb
shl
outsl
adc
nop
adc
push
movsl
xor
adc
xor
out
cld
mov
pop
loopne
ss
xlat
loop
dec
fs
xchg
fisubrl
iret
lret
adcb
push
push
dec
dec
les
pusha
cld
mov
loopne
lret
ljmp
dec
mov
pop
test
mov
dec
pushf
jnp
sub
jl
or
xchg
ror
xchg
cmpsb
mov
lret
xchg
aam
call
leave
sahf
out
sub
lods
int3
lock
jge
pop
movsl
mov
fucom
cmpsl
mov
push
or
pop
adc
xchg
decb
lret
loopne
pop
loope
std
mov
inc
cs
mov
mov
lcall
sahf
mov
fildll
jns
pushf
sub
cld
test
fsubrs
es
stc
lahf
daa
jmp
jp
out
pop
lcall
mov
push
mov
stos
adc
enter
push
out
pop
adc
leave
mov
adc
scas
fadds
xor
pop
push
fmul
sub
or
sbb
int3
add
lret
mov
xchg
adc
jae
xchg
jle
fistpl
pop
or
and
mov
test
cltd
in
or
jge
add
jmp
mov
icebp
lea
mov
pushf
js
leave
imul
stc
pop
adc
mov
stos
fmulp
pop
pop
cmp
or
out
inc
xchg
mov
jl,pn
stos
imul
sub
std
cmp
ja
fdivp
hlt
insl
enter
inc
stos
push
rorb
ljmp
lahf
dec
xor
mov
mov
jmp
xchg
fidivrs
adc
insl
jmp
bound
shrb
loope
je
leave
lods
cld
or
jne
mov
dec
mov
push
mov
push
enter
lret
lods
or
fwait
pop
sahf
das
adc
lds
xlat
js
push
lods
loope
dec
sub
movb
aaa
movsl
cmpsb
sub
daa
inc
stc
add
sub
jp
jb
leave
rsm
out
sub
or
cmpsb
mov
mov
shll
push
stos
dec
xchg
pop
loop
sub
xchg
aam
fnstenv
repnz
les
lods
pop
pop
and
shr
test
cli
lret
inc
sarl
shll
inc
lods
mov
aam
clc
inc
fcmove
push
mov
dec
xchg
adc
lods
add
jl
cwtl
mov
or
call
mov
push
inc
rorb
fs
enter
enter
mov
mov
sub
cmpsb
fidivs
das
movaps
jo
sti
cwtl
pop
les
push
popf
jns
sbb
int3
xchg
pop
mov
in
xchg
cmp
push
in
cs
imul
push
push
sub
mov
pop
out
cmpsb
ljmp
imul
add
jge
in
sub
cmpsl
cmp
pop
movsl
in
sub
enter
lods
mov
xor
cltd
fidivrl
fmull
sub
sub
push
cld
addr16
fwait
mov
pop
lret
test
or
mov
shrb
lods
and
adc
arpl
jo
pop
leave
loop
lods
pusha
pop
cmp
pop
and
scas
sub
lea
cmp
dec
inc
sahf
cltd
add
je
mov
adc
inc
mov
xor
cmpsb
sbb
das
or
or
je
push
cmpsl
lods
or
mov
and
jne
jnp
imul
adc
pop
push
add
rorl
movb
mov
std
cs
sbb
pusha
push
mov
xor
pop
mov
out
jo
fcoml
jnp
cltd
insb
lret
insb
pop
pop
jnp
sti
push
test
int3
or
sbb
cwtl
push
ljmp
movsl
mov
mov
mov
out
mov
loope
sub
sub
cmp
xchg
lea
pop
movsl
xchg
insb
pop
inc
and
out
js
testb
add
iret
std
test
ljmp
cmc
fsts
pop
arpl
nop
and
jo
sub
lret
adc
mov
test
pusha
adc
mov
in
push
jo
pop
xor
nop
pusha
call
gs
sbb
das
cli
cmp
xlat
adc
jmp
mov
mov
out
aaa
mov
add
out
or
jbe
add
jo
sbb
inc
pop
mov
les
inc
pop
cmp
std
lock
movsb
jns
mov
push
or
aas
xor
bound
pop
cwtl
push
adc
xchg
pop
inc
sbb
ja
sbb
adc
push
mov
and
dec
xchg
ja
push
mov
call
nop
out
cwtl
push
in
clc
fsubs
inc
fnstsw
mov
mov
sub
cmpsb
enter
sub
sbb
lret
inc
xchg
movsl
fists
scas
jno
arpl
test
shl
push
xchg
scas
cltd
aad
cmp
mov
add
jmp
stos
ficompl
jnp
daa
test
data16
out
sub
dec
sahf
loope
clc
pop
xchg
lock
data16
jecxz
lock
sbb
xor
leave
test
leave
jo
cmp
pop
call
push
xor
lods
inc
cmpsb
sbb
imul
mov
lcall
test
lahf
xor
sbb
pop
mov
sbb
add
pop
out
xor
pop
dec
testl
jmp
mov
sbb
outsl
and
mov
adc
mov
jno
movsl
test
pmulhw
inc
jl
push
cmpsl
sbb
cmpsb
xchg
not
repnz
cmp
mov
pop
xchg
out
sub
ret
and
jl
xchg
out
jmp
sub
or
fs
sbb
and
mov
pop
outsl
inc
out
push
inc
hlt
inc
pop
or
xchg
out
and
fwait
push
aam
sahf
adc
mov
mov
mov
inc
jbe
xchg
and
cwtl
add
repz
mov
repz
push
pop
xchg
jae
and
fs
repz
and
mov
and
mov
or
jne
cmpsl
lods
fdivrs
cmp
in
add
sub
data16
fldl
inc
mov
dec
sahf
push
pop
mov
add
adc
aas
imul
fdivrl
addl
fcomip
or
call
jl
stc
ret
pop
insb
sahf
fistpll
lcall
sub
xchg
pop
push
sub
lock
mov
leave
jno
sbb
pop
bound
mov
test
and
clc
push
dec
cmp
in
pop
sbb
fsts
sbb
pop
icebp
fwait
xchg
sub
nop
es
or
mov
rol
jo
sbb
mov
dec
xchg
std
fwait
xchg
aam
mov
std
lods
push
jl
lea
adc
xor
push
enter
pop
or
cmpb
cmp
aaa
cli
cmp
pop
lahf
adc
sbb
test
mov
xchg
aam
mov
lods
xor
push
sub
dec
inc
push
sub
xchg
xor
push
lea
data16
mov
and
inc
push
std
mov
push
lea
push
jmp
mov
dec
jbe
jg
ficomps
dec
data16
subl
lret
jb
xor
push
mov
cmp
adc
jmp
adc
stos
clc
and
sub
sub
and
fmul
adc
inc
je
scas
rcl
and
out
sub
sub
dec
jmp
sub
and
mov
mov
fmul
cwtl
shlb
in
jg
dec
leave
scas
cmp
ja
add
movsb
push
mov
and
adc
cmpl
into
cli
cmpb
jns
pop
adc
mov
mov
lods
xchg
adc
jae
pop
leave
xchg
mov
dec
lahf
repz
push
orps
lahf
mov
jp
or
fisttpl
adc
repz
lods
xchg
leave
inc
push
repz
mov
divl
pop
pop
jb
imul
add
sbb
mov
jp
pop
xchg
std
mov
int
jmp
xchg
dec
out
int3
cmp
aas
pop
les
dec
add
stc
fcomps
orb
das
fs
lock
dec
ret
xlat
add
dec
call
push
sahf
testl
adc
mov
inc
jge
cmpl
pop
mov
or
stos
scas
sub
dec
inc
jp
mov
sbb
cmp
push
rclb
pop
jmp
stos
dec
sbb
adc
jo
sbb
scas
pop
jbe
jmp
sub
xchg
lods
add
lods
xor
mov
sbb
imul
mov
pop
shll
nop
das
adc
pop
mov
xchg
cmpsb
jmp
xor
gs
cmp
in
mov
xor
scas
xor
jns
dec
shll
in
je
mov
mov
dec
stos
xor
push
shl
jno
lret
mull
pop
xchg
mov
xchg
sahf
pop
xor
je
dec
mov
inc
mov
pushf
jecxz
or
adc
cmpsl
les
or
dec
fstpl
mov
sbb
fwait
outsl
push
or
orb
jnp
cmovl
cmp
inc
fldenv
dec
enter
movsl
lods
xchg
in
or
mov
sub
sub
pop
enter
cld
test
in
push
icebp
gs
jp
movsb
push
int3
and
aam
ljmp
push
int3
jmp
in
sub
fs
lret
fadd
shrb
pop
sub
sbb
sahf
mov
mov
pop
arpl
das
xorl
stos
xchg
sub
shl
dec
xlat
pop
mov
enter
mov
adc
adc
fildll
ljmp
xchg
arpl
sub
push
jmp
int
mov
ds
inc
mov
lock
sub
stos
adc
stos
jbe
enter
push
nop
adc
jge,pt
cmp
aam
xchg
mov
jmp
in
loop
add
icebp
mov
movq
xor
enter
and
std
add
loope
dec
das
bound
sub
lcall
in
shll
repz
xchg
jbe
mov
out
or
pusha
es
pop
shl
add
jno
push
sahf
and
dec
lea
roll
sub
adc
arpl
dec
lea
mul
arpl
mov
add
xchg
fmuls
pop
sbb
mov
or
jb
or
push
test
shlb
pop
call
data16
stos
out
jbe
dec
mov
jge
in
outsl
or
mov
push
movsb
cwtl
cmp
mov
push
out
ljmp
cmp
mov
lahf
or
inc
pop
xchg
pcmpeqd
nop
xlat
mov
loopne
xchg
outsl
loop
in
mov
lods
ljmp
sub
shrb
or
jbe
xor
xor
roll
pop
mov
pop
mov
in
enter
xchg
mov
testb
jg
sub
adc
int
jo
aam
lea
dec
sub
mov
jbe
cmp
push
sbb
adcb
sub
test
leave
dec
pop
aas
sbb
pushf
das
fsubl
mov
sbb
and
sbb
scas
das
outsb
cli
cmp
push
mov
scas
mov
mov
addr16
dec
pop
lea
jecxz
push
dec
sub
xlat
addr16
test
and
mov
pop
mov
add
push
scas
or
loop
movsb
fnsave
inc
ja
cmp
fnstsw
inc
push
jo
fldenv
xchg
cmp
push
dec
dec
sub
sub
lcall
pop
js
mov
out
lcall
mov
jle
mov
outsl
mov
sbb
and
sti
lds
inc
mov
das
cmp
or
or
fidivs
pop
scas
js
dec
sub
data16
or
mov
lods
dec
mov
iret
xchg
push
inc
dec
inc
sub
jne
jne
or
mov
inc
cvtpi2ps
imul
ret
arpl
push
dec
enter
leave
clc
inc
sti
mov
and
stos
jnp
movsl
outsl
cmc
mov
jne
mov
loope
cmpsb
xor
pop
xor
test
pop
dec
imul
loop
imul
inc
out
or
nop
sub
fisubrs
fmuls
int
push
fmuls
ja
out
lods
adc
sub
sbb
stos
pop
sub
aam
addr16
push
arpl
adc
xor
stos
dec
adc
cmp
push
dec
push
out
loopne
lret
adc
xlat
inc
adc
sub
lcall
mov
mov
lock
sub
cmp
fisttpl
or
jl
sub
pop
pop
test
xchg
sub
pop
scas
scas
lods
cmp
call
jbe
pop
aas
cmp
or
into
insl
dec
push
insl
icebp
data16
and
jl
push
stc
cld
fsubs
and
mov
es
cmp
push
or
hlt
xchg
jb
les
push
inc
pop
lahf
pop
or
call
mov
xor
sub
lret
test
pop
push
push
lahf
icebp
repnz
cmpsb
imul
loope
fisubrs
fcompl
das
out
jle
mov
cmpb
stc
lds
lea
ds
dec
sahf
mov
sub
pop
ljmp
ljmp
push
inc
or
inc
pushf
dec
cmp
in
pusha
push
insb
pop
ds
mov
sub
out
mov
sahf
xor
sub
leave
mov
lock
lock
dec
sahf
sub
pop
loope
sub
push
pop
loope
mov
divl
xchg
mov
inc
dec
and
test
xchg
out
jb
mov
sub
mov
cmpsl
aas
sahf
xchg
leave
std
fidivrs
aaa
push
xor
mov
pop
ja
cmp
lds
gs
cmpsl
mov
loope
mov
daa
stc
push
push
jo
dec
inc
push
mov
aad
rcrb
shufps
sti
mov
xor
es
sub
sbb
dec
popf
in
cmp
sub
dec
and
lods
xchg
jmp
mov
shrw
subl
push
sub
out
mov
or
lods
scas
scas
dec
call
pusha
out
sbb
scas
mov
push
test
xor
xor
stos
sub
and
cmp
out
sub
mov
sub
push
cmp
push
xchg
out
pop
cmp
out
lcall
xor
cmpsl
out
add
out
xchg
push
sbb
dec
pop
pusha
lcall
dec
repz
jg
ljmp
push
xor
andl
cwtl
aad
fldcw
cld
repnz
cmp
ret
sub
popa
sub
sti
mov
push
pop
out
jle
xor
mov
push
pop
outsl
int
push
adc
jmp
scas
adc
dec
or
sahf
mov
adc
movsb
sub
xchg
lret
sub
into
dec
or
in
dec
and
int
mov
cltd
jecxz
cmp
jp
out
xchg
sbb
sub
or
addr16
mov
mov
lods
sbb
ss
inc
sub
or
call
and
int
dec
xchg
fstl
nop
xchg
jl
popa
int
cmc
push
pop
aaa
cmc
mov
insb
aas
std
and
popl
fsubrl
leave
pop
out
or
adc
pushf
jle
cltd
js
lea
popf
lret
bnd
mov
rorl
lret
jbe
sub
in
jbe
mov
push
add
jbe
fstps
jmp
or
fidivl
sub
xchg
aad
outsl
clc
adc
pop
scas
jae
lahf
mov
sbb
fbstp
sbb
push
or
sar
in
outsl
pushf
sub
sub
ret
xor
in
mov
lret
push
ljmp
push
sbbl
cltd
les
popa
outsl
lds
sbb
jbe
fisubl
xor
dec
js
and
jbe
aad
popf
xor
fs
sahf
sbbl
jmp
push
sub
pop
xchg
xor
dec
outsb
dec
fst
es
int
lock
or
imul
jae
xlat
inc
in
imul
rolb
imul
add
lahf
mov
mov
jmp
inc
mov
rcrl
dec
adc
pop
jmp
loop
ljmp
std
add
std
lahf
jno
sbb
pushf
test
lock
jo
lahf
pop
aam
lret
cmp
aas
insb
push
sub
jns
sbb
sub
lret
test
jae
into
mov
sbb
jge
sbb
mov
fsubrs
xchg
bound
lea
sbbb
jle
int
movsb
inc
pop
push
mov
out
out
sbb
es
enter
rorl
inc
ffree
movsl
jg
les
call
jle
cmc
outsb
dec
pop
push
lret
push
mov
jbe
jae
cmp
adc
lcall
imul
sub
lods
mov
adc
sub
or
ss
outsl
movsl
jmp
inc
lahf
jg
sar
push
inc
in
jno
jmp
in
mov
cmpsb
cmp
mov
mov
or
insb
jl
es
imul
mov
imul
jns
push
mov
repnz
mov
mov
pop
lahf
dec
xor
ja
pop
daa
jbe
dec
cmp
cmp
xor
jo
test
fsubrl
mov
dec
sub
push
mov
loopne
jnp
mov
jnp
sub
jl
insb
xor
or
lods
icebp
leave
and
icebp
rcll
add
ret
mov
sub
imul
jnp
aaa
push
les
lcall
pop
push
pop
std
lods
sub
xchg
pop
dec
or
mov
test
xor
xorb
sbb
cmc
dec
nop
sub
andb
mov
fimull
pop
mov
jnp
and
xlat
push
xor
test
arpl
lea
rolb
jle
into
jnp
movsl
sbb
call
sub
adc
test
mov
addl
or
sbb
pop
das
fmul
jp
pop
cmpb
stc
ja
fisubrs
hlt
scas
call
arpl
je
push
shll
test
loope
cs
add
in
mov
lret
mov
mov
movsl
cmp
cld
fsubr
pop
adc
addb
sbb
fs
cmc
icebp
adc
xchg
xchg
iret
pushf
mov
sub
sbb
pop
mov
jnp
pop
adc
jae
test
cld
or
addr16
sar
mov
mov
or
pop
sub
sbb
shll
cmpsl
enter
cmp
pop
idiv
mov
and
jb
pop
scas
in
dec
cwtl
add
inc
mov
fwait
stos
fimuls
ss
lahf
int
btc
call
movsl
aam
pop
call
cmpsl
add
sub
jle
inc
sbb
clc
aam
stos
ret
cmp
and
xor
xchg
xchg
mov
mov
test
fldenv
int3
and
lcall
mov
loopne
cwtl
jns
daa
cmpsb
lret
dec
sbb
lock
push
and
cmpsb
movsl
rcrl
jle
dec
cmp
stos
shrb
xlat
mov
pop
lcall
mov
mov
imul
pop
movsb
push
gs
iret
or
lods
dec
sbb
sbb
stos
test
pop
lcall
cltd
mov
fcompl
pop
add
nop
sub
dec
std
xor
and
mov
test
stc
inc
sbb
jmp
dec
jo
dec
stc
ss
cmp
mov
push
mov
jge
or
es
lahf
call
and
cmpsb
sbb
pop
mov
pop
fwait
imul
jnp
rorb
lods
lods
mov
movsb
shrb
lods
popf
sub
in
fimull
aad
cmp
lret
inc
stos
ljmp
fstps
jbe
ljmp
shlb
push
into
xchg
push
out
mov
cmp
ds
sbb
push
ror
shlb
push
repz
xchg
sti
js
jp
cmp
stc
inc
jge
lcall
and
pusha
inc
sahf
aam
lret
xchg
aaa
dec
xor
inc
scas
pop
fstpl
cmp
pop
aaa
mov
movsb
jae
push
in
sub
repz
test
mov
stc
out
popf
aas
sarb
pop
pop
add
fmuls
mov
fcmovnu
rolb
enter
cltd
pop
mov
inc
jp
push
dec
mov
sarb
adc
icebp
inc
jge
call
mov
sbbb
out
jg
mov
pop
cmp
outsl
pusha
int3
je
push
cs
loop
sti
jbe
or
ds
lcall
and
mov
pop
inc
lret
push
mov
ss
ret
push
push
int
jne
arpl
pop
sub
push
gs
push
sbb
cmpsl
in
fisubrl
test
pop
lods
scas
mov
andl
sbb
clc
dec
mov
adc
mov
pushf
insb
sub
test
int3
xchg
xchg
mov
jbe
pop
leave
stos
les
out
imul
dec
jb
arpl
lods
sbb
pop
jmp
and
push
sub
mov
sbb
dec
inc
lret
lcall
arpl
and
jecxz
pop
stc
mov
mov
mov
push
or
jecxz
idivl
fimull
sbb
adc
jmp
aaa
je
sbb
jo
or
aam
cmp
mov
adcb
add
lcall
imul
sub
jo
out
or
and
jge
cmp
std
sti
aam
addr16
hlt
xchg
push
sub
mov
shrl
and
jecxz
cmp
or
je
pop
or
xor
sub
ljmp
cmpsl
popa
cmpl
xchg
mov
sahf
stc
xchg
ret
sbb
jl
stos
mov
xchg
in
push
pusha
sbb
fisubrs
jnp
push
dec
ret
mov
test
xchg
jmp
push
fdivs
add
rolb
in
cmp
das
test
lock
mov
js
mov
push
mov
repnz
rol
stos
jo
pop
lret
mov
lcall
jl
fwait
and
das
pop
pop
sub
cmpsb
add
pop
cmp
ss
stc
sahf
cmpsl
cmp
cmp
or
xchg
test
imul
adc
daa
movsb
add
adc
push
arpl
jbe
add
sbb
push
and
scas
out
mov
lret
sbb
inc
push
push
sbb
ror
mov
mov
mov
leave
push
mov
clc
movsb
loope
xchg
and
imul
outsl
test
mov
call
mov
xlat
jnp
sub
fldcw
sub
push
cmp
dec
js
ja
popf
fsubs
shrl
jnp
or
adc
aam
dec
daa
pop
scas
sub
in
add
pop
or
andps
inc
xchg
fcoml
jmp
icebp
pop
inc
mov
xor
push
sbb
jnp
aam
pop
pop
in
pop
fdiv
sub
push
loopne
cmpsl
addr16
push
cwtl
mov
or
scas
int3
push
lcall
fldenv
enter
mov
xchg
push
xor
lods
cmp
mov
ja
cmp
js
sysexit
es
jnp
in
sub
dec
pop
xor
sbb
sub
mov
sub
jp
adc
call
sbb
jle
sub
fidivrl
cltd
stc
jbe
aaa
sahf
es
add
out
pop
out
sbb
mov
sbb
sar
movsb
sbb
test
sahf
jp
xchg
je
movl
lea
adc
stos
and
daa
xchg
cld
imul
ds
sbb
out
cmp
and
lods
shlb
pop
adc
cmp
xorb
add
sub
mov
mov
sbbb
xor
rcrb
push
js
gs
es
mov
ficompl
pushf
sbb
in
jl
out
popf
dec
and
mov
aad
sarl
cld
cltd
clc
push
fildl
test
mov
nop
and
popf
or
dec
mov
pop
addr16
test
push
push
cmp
mov
lcall
lods
es
inc
pushf
mov
stos
nop
shlb
int3
gs
fldenv
enter
int
or
adc
out
cmp
lgs
aam
add
sbb
fcomps
dec
enter
xor
mov
mov
and
into
movsl
or
inc
ljmp
jnp
out
xchg
sbb
sbb
pop
int
scas
lods
sahf
jmp
std
shlb
cwtl
dec
scas
lcall
nop
pop
test
pop
jge
dec
push
push
cltd
or
jnp
fdivrp
jo
stos
add
aaa
cmc
cli
outsl
pop
inc
fld
pop
pop
ficoml
out
and
fidivrs
pushf
test
lahf
xor
je
dec
adc
inc
push
mov
lock
les
sub
scas
aam
jmp
inc
scas
and
aam
sub
dec
arpl
push
dec
xor
nop
cmp
xchg
cvtpi2ps
push
push
push
or
inc
ljmp
call
sbb
aad
sub
cmpsb
pop
jo
movsl
mov
lcall
stc
and
pusha
and
mov
xchg
fld
bnd
sub
ret
push
mov
or
js
fcoms
out
js
mov
popf
jns
or
or
sub
jnp
mov
xchg
mov
lret
cmpsl
adc
pop
xchg
jl
sbb
push
dec
fildll
cmp
xchg
test
sbb
call
les
cmp
jl
ja
or
cmp
jbe
fsubl
test
push
push
sub
out
stc
mov
divb
data16
push
jns
push
add
fnstsw
outsl
xchg
lcall
pop
mov
and
sub
insb
jnp
sub
and
sub
cwtl
fsub
jbe
int
mov
addr16
hlt
xor
pop
and
fwait
push
or
push
adc
pop
pop
jo
lahf
jnp
out
bound
mov
leave
mov
psllw
mov
mov
ret
shrd
jnp
into
aas
sub
outsl
cwtl
cwtl
test
andl
iret
dec
sub
into
clc
mov
pop
jae
in
mov
bound
push
sub
cmp
pop
sub
push
imul
test
es
call
stos
sbb
out
lock
mov
push
lahf
stos
cmp
rcll
sbb
inc
cltd
call
aam
lods
mov
dec
adc
loopne
call
xor
icebp
sbb
movsb
inc
lea
and
movsb
sub
dec
sub
xor
cmpsb
mov
divl
int
mov
add
xlat
sub
lods
pop
mov
pop
jae
clc
test
sub
rolb
push
jmp
dec
push
fsubrl
mov
loope
add
inc
out
outsl
stos
mov
in
dec
sub
push
xchg
xchg
lret
mov
je
addr16
jge
dec
adc
mov
xchg
mov
les
test
xor
daa
scas
jmp
mov
mov
cs
div
mov
pop
lahf
mov
setns
in
mov
pminsw
movsb
sbb
sti
dec
loopne
inc
pop
sub
mov
adc
push
add
adc
xchg
into
test
leave
jbe
jmp
test
out
lods
push
sarb
pop
sub
or
adc
xor
insb
and
ja
movsl
and
arpl
jecxz
jnp
inc
inc
xor
inc
cltd
cmpsb
push
xchg
mov
ret
stos
leave
jbe
fwait
mov
loopne
sub
jae
mov
and
cmpsb
stos
dec
xor
jo
test
je
mov
fldenv
jae
inc
fwait
popf
jl
add
cs
xchg
lahf
fmull
loop
pop
loop
pop
mov
dec
mov
iret
ret
out
and
jl
sbb
xor
and
fisubs
mov
in
mov
leave
pop
loopne
repnz
mov
stc
nop
cmp
leave
adc
cltd
xchg
in
notl
add
loop
mov
test
les
inc
jmp
call
push
fldenv
mov
pop
adcb
sbb
add
xor
jecxz
aaa
dec
or
add
and
sub
aad
stos
adc
leave
sbb
pop
pop
cld
imul
fsub
rol
mov
inc
pop
inc
sbb
push
pop
add
sub
pop
mov
pop
jl
int3
sti
mov
mov
push
and
pop
or
xor
sbb
test
les
adc
popa
shl
imul
adc
mov
mov
rcrb
jg
mov
or
cmc
dec
lahf
test
fldcw
call
and
addr16
jo
pop
fcoml
xchg
mov
lret
jo
or
or
lock
cmc
dec
sarl
ds
and
pop
pusha
fimull
ficoml
in
clc
aaa
pop
std
aas
mov
jmp
cmpsb
shll
stos
add
sahf
out
ret
iret
sub
jle
gs
lods
pop
fdivrl
push
adc
std
aas
int
add
ljmp
cli
pushf
test
mov
inc
insb
jge
sub
mov
inc
or
mov
jp
sub
adc
sub
push
jbe
js
xlat
clc
lcall
cs
movsb
jle
and
cmp
push
lcall
adcb
out
shll
cmp
xchg
adc
imulb
xchg
push
push
cmp
es
mov
gs
or
push
es
sub
aaa
iret
movsb
dec
test
rcrl
insb
rorb
aam
daa
out
cmpsb
jmp
xor
cmpb
or
pop
call
sbb
pusha
and
fcmovu
vaddsubps
xchg
fs
mov
cmp
sub
xorl
xchg
into
jge
pop
int
mov
in
stc
mov
jp
inc
jbe
movsb
mov
xor
cmc
xchg
aaa
mov
lea
mov
mov
out
jbe
jmp
adc
cmp
movswl
adcl
movsl
mov
or
adc
lods
das
xchg
jnp
aam
push
leave
nop
lds
pusha
jnp
adc
mov
dec
scas
in
les
pop
enter
enter
mov
adc
and
test
sub
shll
cmpsb
mov
push
in
push
jae
test
or
test
lock
rorb
cmp
ja
cltd
sbb
in
faddl
leave
inc
push
out
pop
arpl
inc
mov
and
jb,pt
sub
sbb
sub
arpl
stos
out
mov
ds
pop
mov
ret
pop
in
lods
mov
xor
mov
push
loop
loopne
pop
icebp
sbb
push
test
pop
inc
or
fimull
push
jbe
push
jecxz
lahf
cmp
mov
jae
cmp
adcl
stos
cmpsb
out
outsl
mov
sbb
push
lds
test
rorl
mov
and
loopne
imul
and
jl
test
lea
push
rcrb
stos
sub
push
out
fsub
shrb
inc
imul
clc
dec
sahf
sbb
inc
idivl
test
cwtl
imul
rcrb
xchg
stos
sbb
movsl
ljmp
pusha
stc
out
pop
dec
jns
lea
cmpsl
jo
and
ret
shrl
jge
sub
lds
inc
movsb
mov
add
xchg
push
fisttps
dec
inc
insl
adc
lods
mov
adc
out
inc
fs
cmp
cmpsb
stos
addr16
pop
xchg
sbb
test
test
xor
xor
fnsave
mov
cmp
mov
dec
fstl
pop
jbe
shrl
jp
sub
daa
adc
or
sub
add
xor
imul
or
or
sub
stos
ss
adc
in
movsb
mov
inc
pop
mov
jge
mov
fs
not
xor
in
out
lods
mov
inc
iret
jnp
mov
call
sub
xchg
mov
aam
lahf
leave
dec
mov
mov
adc
sti
or
fs
movsl
fildl
push
push
ljmp
lret
iret
test
pop
cmp
and
cld
or
fnsave
in
push
addr16
push
cmp
sub
pop
scas
or
inc
sub
in
xchg
bnd
cmp
lock
les
int
shl
popa
jbe
leave
aaa
add
mov
repz
xor
jmp
gs
stos
cmpsb
jmp
fstpt
rcr
aas
shrl
daa
dec
aas
loopne
decl
fwait
xor
in
cmpsb
lods
mov
or
pushf
jo
je
clc
stc
lock
call
lods
sub
sub
test
ljmp
cmp
lock
sbb
mov
jg
and
aad
lcall
inc
movsb
adc
xchg
incl
jl
sub
mov
sub
mov
lahf
mov
sar
sti
cmp
loope
cmpsl
lods
jecxz
and
enter
aad
sub
js
in
scas
pop
in
xor
std
adc
stc
in
divl
xchg
aaa
clc
mov
stc
sub
jae
mov
out
adcb
movsl
push
cmpsl
imul
jl
sub
les
jle
stc
push
lret
sub
xchg
es
dec
add
stos
int3
xchg
cmp
pop
jne
cmp
jge
jo
or
movsb
outsb
hlt
lcall
dec
ss
mov
mov
and
mov
push
add
cmpsl
inc
pop
sbb
jl
ret
aaa
pop
jnp
ljmp
ret
fcompl
adc
outsl
bswap
je
push
scas
xor
icebp
mov
lds
jge
popf
mov
mov
test
ss
mov
push
lea
sub
sarl
iret
or
add
and
fnsave
lret
push
add
inc
cmp
nop
jo
inc
lret
mov
flds
jnp
or
test
imul
lcall
mov
pop
fdivrp
mov
sahf
jbe
inc
mov
aaa
cmp
test
cli
test
and
fisubrs
scas
push
and
icebp
and
and
ret
adc
out
ljmp
and
mov
test
loop
gs
stc
stos
mov
pop
clc
add
mov
mov
shr
out
dec
mulb
inc
xchg
dec
adc
inc
jg
mov
mov
movsl
mov
std
fcoml
xchg
std
lret
adc
cmc
push
stos
lcall
xchg
dec
adc
dec
aad
out
mov
sub
lcall
ja
jbe
jne
es
aad
imul
pop
jg
mov
stos
fstp
mov
jle
fistpll
push
fwait
dec
xchg
sarl
dec
cmp
fbld
sub
clc
xor
cs
pop
cmp
sbb
call
shll
in
arpl
fldl
cmp
fwait
push
inc
sbb
jbe
push
aas
les
das
mov
ret
cli
mov
sub
movsb
out
cmpsb
sbb
mov
repnz
xchg
jg
sbb
fnstsw
adc
nop
scas
sti
divb
jmp
sub
push
loopne
sbb
popf
mov
adc
mov
cld
push
push
jo
pop
loope
lods
push
rclb
sbb
cmp
jae
movsb
mov
scas
sub
mov
imulb
outsl
xchg
leave
sbb
inc
pop
jge
dec
stos
cmp
and
jp
lods
jge
mov
aas
pop
in
dec
pop
imulb
mov
jo
js
aaa
outsl
lcall
dec
cmpsl
ja
pop
stc
clc
test
mov
lock
xchg
or
cmp
jne
pusha
lods
lahf
mov
leave
jo
jmp
mov
ds
sbb
adc
cmpsl
mov
add
xchg
jb
push
or
pop
shr
lahf
pop
aaa
inc
popa
xor
stc
or
lret
jp
arpl
stc
mov
enter
adc
mov
mov
stc
sub
movsb
add
mov
jl
add
inc
lods
loope
jle
roll
cmpsl
cld
out
stc
shr
scas
jbe
lcall
push
mov
int3
xor
mov
scas
mov
shrl
or
fs
out
dec
sub
sub
xor
ljmp
jnp
sbb
in
lods
icebp
nop
scas
pop
sub
dec
pop
sub
imul
cmp
jnp
lahf
jmp
mov
and
jnp
jl
nop
pop
out
outsl
adc
in
ds
test
lahf
les
lods
push
std
lahf
popf
adc
rorl
cmp
mov
hlt
mov
hlt
in
lds
mov
jp
aam
pop
dec
cmpsb
add
jno
jae
mov
jmp
cmp
aaa
sbb
mov
mov
pop
sub
stc
sub
jbe
inc
out
call
mov
lods
cmp
xchg
xlat
lods
and
cmovns
pop
push
sub
or
sbb
lahf
inc
jmp
sub
jp
adc
ljmp
fdiv
out
ljmp
fistl
mov
push
jle
pop
sbb
aad
shl
jmp
push
frstor
movsb
repz
xchg
jbe
rcrb
fsubrl
sarb
ror
mov
push
aam
test
scas
das
mov
xor
in
inc
call
imul
aaa
in
js
fnstsw
int
sub
dec
jp
jne
mov
mov
popf
cli
mov
rolb
test
jmp
jnp
test
sub
or
cld
jbe
inc
mov
mulb
in
pop
pop
clc
stos
inc
and
lods
mov
xchg
ss
call
bound
xor
lret
lcall
pop
std
pop
stc
sbb
fisubrl
cmc
jnp
mov
or
xchg
mov
push
dec
push
push
lcall
pop
je
sub
and
and
sbb
push
adc
incl
jecxz
sub
lahf
fldpi
pop
int3
inc
and
jae
ss
jmp
adc
ljmp
jp
mov
popf
mov
sub
shll
cmc
clc
cmp
sub
dec
lcall
ficoml
pop
xchg
cwtl
or
push
ja
dec
dec
adc
mov
shll
jg
insb
fsubrs
xchg
mov
cmpsb
int
arpl
aad
pushf
jnp
fmull
pop
lret
jmp
stos
pop
mov
pop
pop
adc
push
shrb
inc
pop
dec
mov
cmp
sub
cmp
mov
leave
xchg
sub
fisubs
pop
pop
jl
mov
xor
mov
lods
int3
xlat
test
xor
mov
pop
and
testb
dec
xor
inc
jmp
mov
xchg
adc
jmp
fsts
imul
test
sbb
mov
sbb
mov
popf
aam
jp
lcall
or
pop
cwtl
aas
fsts
cmpsb
stc
insb
cmp
lods
add
add
mov
aam
sub
ret
das
out
pop
jnp
or
aas
sbb
outsl
dec
and
mov
mov
or
mov
mov
test
pop
inc
inc
movsl
xchg
clc
data16
or
imul
mov
leave
outsl
ret
stos
jns
jb
fimuls
xlat
dec
add
add
mov
data16
addr16
ljmp
aam
outsl
mov
mov
aaa
ljmp
push
int
popa
lods
sub
xchg
lahf
xchg
lock
aaa
mov
cwtl
sbb
imul
add
jmp
mov
call
movsl
icebp
and
stos
push
out
pop
adc
es
and
pushf
or
sbb
sub
js
popf
mov
push
scas
push
adc
aas
and
push
aam
cmp
pop
jns
out
leave
mov
push
lahf
adc
sbb
aas
ljmp
push
xchg
in
adc
jge
push
add
aaa
cmc
movsl
adc
pop
loope
sub
call
dec
lahf
hlt
xabort
inc
jno
push
out
pop
repz
stos
notb
cmpsl
jmp
mov
outsb
mov
outsl
mov
stos
cmpsl
lcall
in
pop
call
pop
push
sub
scas
cwtl
andl
pop
lock
or
adc
test
jbe
push
movsb
or
out
out
ret
std
xchg
shrl
jno
fwait
pop
inc
fwait
cmpsb
movsb
jo
loopne
out
nop
into
mov
bound
hlt
push
mov
xor
adc
xchg
jbe
dec
fnstcw
popa
es
adc
ret
pop
ljmp
inc
pop
or
mov
dec
stos
int
push
cmpsl
int3
and
dec
enter
das
add
aas
lcall
hlt
mov
cmp
test
inc
dec
and
and
or
call
xchg
test
pop
add
pop
or
sub
outsl
iret
sbb
mov
mov
inc
ds
stc
sbb
fldcw
mov
por
lahf
lret
xor
sub
loope
inc
cmp
mov
lcall
fwait
and
inc
adc
lcall
push
mov
add
pxor
lods
loop
or
or
movsl
xorl
mov
dec
in
inc
mov
shll
sub
movsb
and
and
sahf
fidivl
ficomps
inc
sub
xchg
dec
repnz
scas
stos
leave
adc
mov
into
sahf
sub
jnp
popa
aas
ret
bound
ret
pop
xchg
sbb
add
in
mov
outsb
out
mov
jnp
out
je
lahf
insl
sarl
movb
fs
das
leave
push
sub
les
sti
adc
jl
ror
add
out
lahf
mov
xor
mov
lock
cmp
int3
mov
mov
mov
add
inc
add
dec
mov
and
fildl
adc
dec
call
imul
push
nop
int
leave
dec
sub
cmp
ds
jo
das
inc
jp
jge
int3
pusha
sub
jnp
les
inc
dec
cmp
mov
call
fidivrl
adc
imul
mov
loop
jns
fnstcw
fsts
pusha
pop
jp
cmpl
cld
jp
push
dec
pop
lods
mov
pusha
ret
out
adc
sub
mov
aad
mov
jl
mov
test
pop
mov
adc
xchg
ljmp
rolb
lods
int3
dec
xor
and
mov
jg
lahf
dec
iret
xchg
fucomp
dec
insb
inc
rclb
pop
mov
xor
jno
fucom
xor
xor
sub
xchg
mov
xor
les
mov
pop
adc
fidivs
pop
inc
sti
inc
repnz
inc
enter
out
shlb
je
cmp
fsubrl
pop
mov
out
push
or
ljmp
in
sbb
mov
loop
pop
xchg
out
aaa
jp
sub
or
into
stos
xorl
rorl
or
sbb
lahf
mov
mov
ja
or
pop
sbb
in
jne
adc
adc
leave
mov
xor
js
jb
sarb
mov
mov
in
repz
push
dec
imul
ret
lret
lret
loopne
sub
add
and
shrb
jge
int3
jg
and
or
in
mov
sub
mov
push
mov
out
sub
jbe
and
dec
cwtl
icebp
mov
imul
jle
setae
mov
mov
pop
jge
pop
mov
sbb
dec
pop
pop
in
cwtl
cmp
mov
rcll
xlat
inc
lret
adc
rorb
or
mov
mov
and
or
out
ljmp
test
int
push
ret
test
push
bound
insl
add
lock
adc
pop
push
inc
inc
cmp
in
pop
adc
fmul
cmpsb
lahf
roll
pop
mov
pop
ljmp
out
adc
xchg
sahf
jmp
insb
xchg
lods
adc
sub
aad
mov
shrl
lahf
add
xchg
push
aas
lock
ret
testl
aaa
adcb
adc
dec
shlb
and
ja
jg
cmp
jp
mov
cmpsl
in
push
ror
mov
mov
pop
out
ret
inc
fidivrl
add
cmp
rorl
cmpsl
insb
in
insl
jnp
setnp
aaa
lret
cmp
jge
xor
dec
jnp
movsl
fiadds
jnp
push
pop
js
sub
lret
and
pop
repz
clc
sub
or
out
pop
xor
aam
mov
push
add
add
cmp
or
lahf
ffree
mov
lock
std
and
jnp
fcomps
sti
arpl
in
sub
dec
pop
pop
popa
sarb
jo
rcrl
into
pop
ljmp
jbe
arpl
jne
jb
into
pop
aaa
call
cmp
mull
mov
lret
lcall
shl
jnp
pop
cs
cltd
mul
sub
test
or
in
mov
ret
xchg
pop
inc
jb
add
push
jp
in
popf
shlb
dec
gs
add
lods
stos
mov
pop
push
pop
inc
loope
mov
dec
enter
sti
or
jle
add
das
andl
cmp
mov
addr16
jnp
sub
pop
cld
rcrb
jbe
in
cld
movsl
inc
fs
aad
cmp
lods
movsb
and
lds
mov
and
pop
insb
mov
dec
sar
cwtl
push
call
sbb
jne
mov
sahf
jecxz
negl
sub
pushf
ficoms
mov
sub
sti
cmpsl
mov
pop
sbb
lret
ret
hlt
arpl
jp
dec
mov
jo
movsl
std
xchg
cwtl
bound
sbb
cmp
dec
and
pushf
ljmp
in
xchg
cmp
sbb
xchg
lods
dec
pop
push
lcall
cmp
inc
push
push
imul
pop
pop
pop
xor
sub
fmuls
xor
rclb
stc
inc
loopne
movl
pop
mov
cmpsl
std
test
mov
and
pop
sbb
mov
inc
or
jl
fcom
loopne
loop,pn
rcrb
insl
ljmp
imull
pop
leave
lsl
jmp
ss
lret
rclb
push
icebp
fiaddl
and
ret
push
cwtl
std
ret
call
lret
pop
insb
sub
into
cld
lock
sub
test
scas
lds
std
mov
shrb
cmpsl
xchg
jecxz
in
mov
lds
cmpsl
push
push
jmp
aas
les
mov
jle
data16
ret
out
xor
inc
test
sbb
mov
or
inc
adc
sub
hlt
pop
adc
in
js
xchg
mov
pop
inc
jnp
mov
lock
mov
jge
cmp
test
jge
pop
jp
mov
in
or
scas
dec
dec
out
iret
data16
push
mov
jo
mov
sub
sub
jp
lahf
push
std
push
insl
out
mov
mov
add
out
es
sbb
mov
and
cld
cmpsl
rclb
jmp
inc
ud2
xor
aam
fistpll
jle
clc
in
jnp
scas
cmp
dec
das
je
pop
push
out
scas
out
lods
cld
lods
sbb
mov
mov
fucomi
push
mov
out
test
pop
dec
inc
and
cmpsb
in
and
nop
inc
icebp
mov
pushf
jmp
cwtl
pusha
lea
ss
dec
bound
xchg
cwtl
rcrl
ret
data16
xor
or
mov
lcall
mov
jo
pop
negl
testb
dec
sahf
je
cmp
push
xor
ljmp
out
jbe
cmpsb
sti
dec
pop
stos
jmp
inc
mov
pop
or
fs
pushf
sub
subb
pop
push
js
cli
aam
push
les
shrb
xchg
cwtl
hlt
xor
in
push
add
cmp
das
test
mov
es
test
test
dec
dec
push
pop
jae
mov
dec
adc
xchg
dec
sbb
cmpsb
cli
fisubrl
jb
movsb
xchg
xchg
lods
pop
or
scas
push
andb
lock
repz
ja
jg
loope
icebp
adc
mov
push
jl
cmpsl
dec
add
dec
shll
dec
dec
fisttpl
push
out
lea
jnp
dec
les
in
inc
mov
cmp
adc
pop
std
adc
loop
or
mul
shll
int3
mov
jbe
test
jo
adc
in
lret
test
popf
pop
add
lcall
jo
sub
cltd
cmp
jns
sub
cmpsb
lcall
add
jp
leave
jns
mov
or
js
and
add
push
inc
pop
lods
mov
mov
aad
jo
and
jmp
cs
lods
outsl
test
jl
and
mov
es
jmp
add
icebp
es
and
mov
push
sub
mov
lock
ja
outsl
push
mov
leave
outsb
dec
jnp
jge
sbb
cmc
sub
rcrb
xchg
add
push
stc
jg
xchg
push
cmp
out
mov
int3
mov
jne
push
add
fldt
lret
leave
sbb
pop
cmpsl
mov
shlb
or
and
jo
loop
testb
out
cmc
push
jbe
cmpsl
js
out
out
sub
add
mov
mov
push
add
inc
lds
ja
stos
mov
add
push
cmpsb
mov
data16
js
outsb
cs
push
cmp
pop
inc
jmp
outsb
nop
jle
xor
xchg
xlat
push
push
cmpsb
imul
lret
mov
out
push
mov
test
pop
adc
xchg
lods
mov
pop
push
jmp
lcall
dec
pop
jae
out
add
push
pop
loopne
mov
add
mov
xchg
mov
fcomps
jl
aas
lcall
mov
cmp
je
test
xchg
lods
xchg
movsl
adc
sub
mov
scas
jb
movsl
out
fucomi
lock
stos
xchg
dec
rorb
jp
mov
mov
xchg
data16
inc
aam
call
pushf
push
xor
jmp
cmp
lock
ds
or
test
mov
jbe
and
mov
cwtl
sub
add
mov
sbb
fwait
dec
sarb
js
hlt
pop
movsb
or
shl
pop
and
subl
into
xlat
add
insl
test
xchg
push
and
sub
popa
stc
cmpb
lock
lcall
js
js
call
mull
sbb
cmpsl
mov
or
lea
push
mov
je
pop
test
push
lret
ss
scas
xor
jnp
fmuls
push
xlat
mov
out
cmp
fldenv
in
cmpb
jne
jp
or
std
xchg
cmc
cwtl
ljmp
push
dec
add
inc
jno
std
mov
clc
stc
push
std
stos
enter
popf
cmpsb
fistps
push
ret
mov
cld
dec
popa
loope
call
cld
sbb
scas
and
and
xorl
dec
pop
gs
ds
jae
dec
mov
mov
xor
sub
lods
in
iret
ret
mov
popa
xlat
sbb
scas
gs
leave
cmp
in
fnstcw
sbb
lahf
lds
pop
mov
jbe
cli
inc
das
xlat
or
jp
adc
call
dec
mov
jle
clc
inc
sub
dec
test
jp
aad
xchg
es
adc
stc
add
lods
cmp
inc
mov
and
mov
jg
pop
out
jmp
and
scas
mov
jae
inc
cmp
dec
jp
fwait
pop
out
push
mov
xor
fisttpll
mov
push
cld
jg
and
jne
lret
dec
pop
sub
sbb
mov
test
call
cmpsl
inc
or
aaa
cmp
or
arpl
rolb
ds
pop
pop
sbb
lds
mulb
or
popf
cmpsb
clc
enter
shlb
mov
cmc
nop
mov
int3
lret
sbb
jecxz
clc
hlt
and
test
cmp
sbb
xchg
subl
sub
lea
and
test
out
or
fs
xlat
jnp
push
sub
les
dec
push
mov
out
outsb
lret
in
js
leave
rorb
popf
adc
jnp
inc
mov
mov
sbbb
mov
inc
or
adc
sub
andl
cmc
stos
pop
or
sbb
fcoml
mov
fs
hlt
inc
shlb
or
lret
add
mov
xchg
aas
sub
mov
mov
sbb
out
shll
sub
sbb
mov
pop
leave
pop
mov
mov
pop
adc
adc
dec
or
ss
mov
lcall
stos
out
xor
bswap
sti
mov
sub
mov
xchg
mov
mov
lock
fisttpl
xchg
dec
mov
dec
outsb
lret
nop
mov
mov
xchg
push
pop
in
xchg
dec
jnp
push
or
or
push
sbb
lods
stc
dec
push
sub
lods
mov
or
jmp
mov
inc
cmc
jnp
inc
xor
sub
cmp
mov
xlat
sub
test
push
mov
or
mov
push
cmp
add
scas
xor
shlb
fcmove
out
mov
sub
jle
mov
cmp
mov
arpl
xchg
pushf
fucom
push
lea
inc
xchg
jns
rolb
inc
in
cltd
lret
hlt
dec
out
gs
dec
loopne
dec
leave
cmp
jl
adc
jp
stos
fsubs
loopne
jnp
clc
out
lretw
test
or
inc
out
and
ss
out
aaa
int3
clc
or
movsl
xor
and
cmp
call
insl
std
loope
dec
lahf
jns
push
cltd
mov
shrb
dec
shl
imul
icebp
mov
mov
pop
pop
test
push
ja
mov
push
dec
out
out
jmp
or
ds
mov
stos
dec
xor
cmp
or
pop
cmp
dec
pop
cs
ja
mov
cmp
jnp
cld
cs
push
decl
adc
dec
shrl
dec
fadd
mov
jl
cmp
mov
and
cmc
push
jb
clc
or
ss
mov
pop
add
int3
nop
ja
mov
mov
push
movsl
jmp
inc
push
in
mov
cmp
mov
jnp
sahf
xchg
pop
or
cmpsb
mov
lods
dec
pop
lods
test
xor
dec
lods
cwtl
daa
or
sub
icebp
dec
xchg
sub
mov
shrl
dec
xchg
enter
lock
mov
mov
sarb
cld
jg
dec
mov
jmp
pop
je
pop
cs
adc
push
jae
xchg
cmpsb
and
movsb
rcll
js
daa
mov
mov
push
icebp
xor
notb
jmp
inc
cmp
cmp
test
push
mov
or
jp
jnp
mov
mov
cmp
cmpsb
movsl
mov
dec
pusha
mov
frstor
xchg
aad
and
cmpsl
mov
test
insl
fidivs
pop
mov
arpl
jae
adc
sub
loope
push
call
inc
push
pop
push
pop
dec
test
test
and
insl
int3
mov
mov
shll
push
xchg
jp
out
int
mov
mov
into
popa
movsl
aaa
test
aam
add
stc
ss
lds
dec
jg
xchg
xor
nop
out
shlb
xor
mov
dec
popa
int
pop
pop
jns
mov
cmp
out
xchg
mov
push
cmpsl
cmpb
rorb
setge
push
test
xor
adc
push
and
and
xlat
dec
ret
rol
repz
ror
push
sub
pop
lcall
fs
js
decb
imul
jmp
fdivs
push
jp
stos
test
jbe
cmpsl
jmp
mov
and
int
popf
push
ja
lahf
fisubrs
icebp
lds
out
inc
add
pushf
and
roll
and
push
push
sub
aam
movsl
dec
out
jp
or
icebp
fcoms
and
loope
movsb
gs
out
out
data16
mov
into
pop
jl
mov
jecxz
and
fidivrl
xor
inc
push
mov
jmp
jle
mov
push
pop
lds
insb
movsl
je
xchg
dec
dec
cmpsb
fists
in
xlat
or
mov
sub
xchg
mov
fisttpll
pop
in
rclb
sahf
pusha
fisubrs
arpl
inc
sbb
push
fcmovu
mov
xchg
fmull
pushf
dec
inc
fistps
xchg
andl
pop
mov
xor
dec
xchg
xlat
xor
mov
popf
pop
and
inc
mov
neg
mov
stos
adc
cmp
leave
sub
pop
sub
out
mov
xchg
outsb
sub
insb
xchg
subl
xor
clc
arpl
add
mov
mov
fldenv
pop
mov
pop
cli
pop
rol
jnp
sub
and
lods
stc
stos
xor
mov
cmpsb
and
insb
xor
cmp
fnsave
mov
add
push
imul
sub
pushf
jae
out
lock
push
sub
xor
out
and
pushf
stos
xor
pop
dec
add
icebp
sar
loope
dec
dec
out
inc
jbe
popf
cmp
inc
les
sbb
out
loopne
jb
int
fidivrs
fcmovnu
lock
dec
inc
aas
mov
imul
je
lods
cmp
leave
fucomp
push
lahf
mov
jge
inc
inc
jge
call
pop
js
jno
and
pushf
xchg
loope
or
cwtl
pop
cwtl
enter
js
addr16
stc
movsb
jb
insb
cmpsl
or
push
dec
inc
subb
and
or
jo
xchg
test
je
ret
movsl
lret
mov
icebp
enter
dec
leave
adc
and
pop
aam
fsts
rorb
rcrl
fxtract
dec
cmpsl
ljmp
xchg
and
outsb
or
std
xchg
fadd
jle
call
cmp
mov
enter
test
push
data16
call
pop
push
out
shrd
inc
and
test
jo,pt
jp
dec
pop
add
loopne
cmc
push
fs
pop
movsl
jbe
shl
xor
lret
sti
in
push
imul
jbe
lods
hlt
out
mov
jecxz
lahf
push
ljmp
ds
and
clc
xlat
arpl
xchg
ret
lods
push
insb
jo
popf
adcl
stos
mov
jbe
int
dec
std
sub
lret
and
mov
pushf
stc
cmpsb
sub
fstpt
daa
pusha
adc
pop
das
push
pop
xchg
outsb
jne
out
jbe
sub
add
xchg
adc
jbe
call
pop
xchg
jl
mov
add
xchg
testl
addr16
stos
in
pop
jo
loopne
jbe
imul
fs
dec
pop
mov
repz
jbe
sub
dec
sub
out
fpatan
test
in
mov
call
pop
vmread
inc
ret
cmp
mov
aam
test
les
inc
jbe
cmpsb
shlb
jnp
inc
cwtl
nop
mov
aas
dec
lahf
repnz
mov
inc
cmpsl
pop
je
cwtl
or
adc
ss
int3
call
sub
aas
roll
xor
das
ljmp
stos
repnz
jo
enter
fiaddl
push
sbb
es
test
xchg
mov
shll
fcmovnu
rcrl
cs
jl
xchg
scas
dec
lods
cmp
out
lods
in
push
xor
ljmp
loopne
mov
jbe
loopne
call
test
stos
fldcw
mov
mov
jo
jge
inc
popf
in
test
mov
stos
sbb
in
jl
imul
xor
jmp
xchg
and
stos
sub
sbb
and
jecxz
push
mov
rorl
mov
adc
and
inc
jbe
push
cmp
push
sub
adc
scas
adc
jl
fs
mov
xchg
orl
pop
dec
loope
adc
push
mov
andb
pop
mov
cmp
mov
dec
pcmpgtw
adc
repnz
jle
inc
and
mov
xor
mov
pushf
in
sub
xor
inc
push
xchg
int3
adc
push
jnp
mov
shlb
jecxz
or
in
popa
adc
jmp
movsl
mov
dec
sub
mov
xchg
stos
leave
stc
push
sbb
movsb
mov
gs
push
pop
add
mov
push
dec
imull
aad
lcall
pop
lods
dec
in
ror
fimuls
xor
push
test
xor
cld
sub
jnp
sub
sub
and
sub
sbb
push
sahf
pop
pusha
push
mov
fstps
pop
mov
ret
mov
mov
or
cmp
fstps
or
inc
mov
jmp
test
jnp
pop
test
data16
push
inc
sub
shlb
ret
cmp
arpl
dec
sub
cmp
rcl
out
pop
xchg
dec
cmp
jmp
jg
pop
sti
stos
loope
lcall
and
pushf
roll
popf
xchg
jge
loope
mov
rcrl
lcall
pop
int
icebp
dec
cmp
out
cmp
call
sbb
pop
jmp
dec
and
dec
mov
outsl
or
xor
call
cltd
repz
jmp
lcall
xorb
js
push
jmp
aas
add
adc
sarb
jns
mov
jbe
fisubs
pop
pop
cmp
xchg
mov
jno
les
and
adc
push
test
sar
aaa
aas
jge
cmc
out
or
incl
es
push
call
jns
das
adc
mov
or
dec
cmpsl
push
subb
jbe
mov
jbe
flds
rcll
inc
dec
test
int
mov
xor
pop
dec
mov
jnp
jle
out
aaa
mov
mov
test
jge
cld
ficoml
call
test
mov
arpl
jmp
jno
mov
es
push
xchg
out
stos
lea
pop
cld
scas
sub
in
sbb
inc
fisubrl
lcall
push
jmp
fnstcw
xchg
imul
stos
dec
and
stc
push
adc
jg
sbb
test
nop
inc
xorb
inc
jb
mov
stos
mov
xchg
subb
fdivrl
pop
sbb
adc
dec
cltd
out
ret
adc
ret
je
enter
ror
pop
ljmp
clc
inc
cmp
out
scas
lock
dec
cmp
add
dec
jle
xor
sub
lahf
rcll
jecxz
loope
aaa
xchg
or
or
add
wbinvd
and
test
es
inc
outsb
cltd
and
jg
sbb
ficoms
and
sub
in
bound
movsl
adc
sarl
js
lret
sbb
pop
jns
popf
rorl
push
movsb
mov
xor
adc
mov
jnp
and
mov
psubb
add
pop
leave
pop
lret
lret
loopne
data16
sub
loop
cld
cmpsb
cld
test
pop
jns
aaa
dec
inc
cmp
pop
xchg
cmpsl
xchg
push
mov
stc
sub
xor
dec
and
popa
lea
mov
push
movsl
ret
xchg
sbb
loopne
out
lcall
clc
cmpsb
enter
aas
or
xor
jp
fldenv
dec
fiaddl
and
add
repz
sti
gs
pop
mov
loopne
push
data16
les
adc
cwtl
test
push
mov
shlb
and
repz
mov
cmc
int3
nop
xchg
imul
dec
jg
jae
test
xor
pusha
inc
push
mov
clc
and
imul
or
fwait
pop
in
js
adc
js
test
movb
pop
mov
cpuid
outsl
inc
repz
mov
fcompl
ffree
mov
or
mov
and
cmp
mov
sub
test
cmp
cmp
push
dec
ret
mov
jl
sub
sub
push
pop
scas
mov
popf
or
es
push
jnp
outsl
enter
arpl
or
jecxz
mov
int3
push
sti
mov
lea
mov
jo
push
divl
mov
mov
scas
into
cltd
jns
pop
test
push
inc
xchg
scas
pop
jge
into
cmc
jbe
fstps
ffree
adc
mov
fisttpl
mov
xor
out
call
paddsb
loopne
sub
mov
pushf
push
lea
lret
fisubrs
test
test
aaa
adc
mov
adc
fdivl
bound
add
mov
loop
leave
cld
mov
in
test
jg
pop
jns
adc
pop
fdivrl
cltd
xchg
outsl
cmp
cltd
adc
fidivrl
push
mov
xlat
into
xor
cmpsl
sub
stc
icebp
mov
cmpsb
jge
mov
aam
movsl
add
aaa
aad
sub
adc
mov
add
sub
cld
dec
lods
push
and
pop
pushf
subl
xchg
ficompl
mov
xor
push
fcmovbe
int
xor
fstps
outsl
clc
sbb
add
lret
rcrb
xchg
jbe
leave
add
push
push
push
jp
pop
out
mov
mov
ret
xor
roll
cmpsl
push
lret
int
imul
xchg
mov
mov
repz
das
stos
cmp
stc
pop
in
mov
sub
add
push
mov
xor
cmp
imul
sub
cmp
or
push
sub
shrl
xchg
mov
or
outsl
sbb
into
rcr
nop
ja
mov
mov
dec
cld
leave
mov
inc
dec
add
pop
xchg
cltd
adc
dec
pop
lahf
lods
aam
dec
test
inc
test
inc
rclb
sub
jl
adc
cli
lret
sbb
pop
xor
test
clc
pop
sub
lods
mov
dec
or
jmp
call
lea
adc
pop
fnstcw
test
fcom
jnp
jp
push
push
cmp
mov
pop
jge
push
sbb
pop
mov
icebp
cld
lret
sbb
into
rolb
insl
add
lock
jne
call
lods
mov
fs
movsl
sbb
pop
test
mov
add
xchg
jo
stc
lea
fs
push
sbb
cmp
ds
sbb
mov
in
or
adc
outsl
sahf
mov
loope
std
psubsw
pop
mov
push
jg
add
mov
insb
insl
cmpsb
orl
lret
cmp
stc
das
ficoml
jbe
lods
push
fninit
test
jecxz
xor
enter
push
test
sub
call
fbstp
mov
xchg
sbb
mov
inc
outsl
insb
out
jae
pop
fcoml
jnp
bound
int3
mov
outsl
or
ja
mov
jbe
lea
push
cmp
dec
int
test
mov
and
lock
push
pop
or
in
xchg
lock
xchg
adc
add
mov
sbbb
mov
call
pop
scas
dec
repz
adc
or
and
jmp
push
popf
imul
lea
jae
sarl
andb
in
mov
scas
mov
es
inc
or
sbb
sbb
popf
pop
inc
xchg
scas
pusha
stc
aaa
and
outsl
dec
int3
in
mov
push
in
xchg
ljmp
add
mov
cmpsl
fadd
gs
addr16
pop
ret
adc
fisttpll
and
mov
mov
test
in
xchg
sub
push
mov
movb
and
jmp
sub
mov
cld
mov
and
int
loop
add
enter
and
mov
notb
cmp
call
or
std
mov
loope
adc
inc
push
lret
stos
pop
sbb
adc
xor
pop
add
xor
adc
push
leave
out
xchg
loopne
lock
push
lahf
lcall
or
pop
push
fucomip
dec
jno
les
out
loop
sub
loope
jmp
ficompl
call
cmpsl
cmp
std
mov
pop
lret
or
bound
out
mov
push
sub
dec
cmp
sbb
imul
xchg
dec
arpl
addb
xor
loopne
xor
xlat
mov
cmp
pop
jbe
xor
aas
mov
scas
imul
xor
out
imul
sub
ljmp
arpl
push
stc
mov
mov
dec
inc
add
lcall
xchg
add
cmp
lock
mov
inc
pop
jle
fisubs
dec
cmpsl
repnz
adc
dec
add
test
push
cmpsb
sbb
pop
and
xor
mov
in
imul
push
xchg
out
loopne
sub
push
loopne
in
push
clc
jo
sti
lcall
adc
sub
jl
mov
cmp
mov
fstpl
clc
pop
ret
dec
dec
jmp
mov
jg
cld
aas
lret
out
test
leave
dec
cmp
in
stos
add
cmpsb
pushl
push
sub
lret
repnz
cmp
insl
jl
mov
dec
mov
sahf
into
sub
shlb
mov
out
das
inc
add
inc
adc
jle
inc
add
cmp
out
stc
mov
cmpsl
xchg
lcall
imul
lahf
sbb
pop
clc
test
sarl
mov
out
and
pop
nop
dec
push
test
lret
ds
sub
xchg
push
or
pop
mov
fnsave
jnp
or
stos
sar
cli
ljmp
mov
rcrb
sarb
call
sub
mov
adc
lods
jbe
int
mov
jge
or
popf
cli
pop
jp
faddl
pop
and
pop
jge
push
out
out
movsb
imul
xchg
and
push
dec
out
movsb
cltd
cwtl
int3
call
idivb
jbe
mov
jo
pop
jmp
arpl
faddl
or
js
xor
ficoms
dec
add
out
fucomi
int
pop
pop
std
dec
mov
xchg
rcll
adcl
rcll
push
lahf
mov
mov
jbe
sarl
jl
and
or
and
inc
out
xchg
and
stos
jl
xchg
ror
pop
mov
sub
sub
test
push
insl
push
ret
arpl
out
lcall
xor
sbb
shl
call
and
dec
es
ret
push
cmpsb
xchg
movlps
and
leave
in
es
adc
cmp
aam
addr16
iret
out
mov
fistpl
popa
mov
jmp
mov
mov
pop
add
xor
adc
ja
lock
sub
orb
stos
dec
push
jmp
cmp
cltd
and
sub
mov
imul
insb
inc
int3
sarl
xchg
mov
shrl
ret
or
dec
ss
or
lret
inc
fstl
mov
dec
pop
mov
push
sub
mov
fcoms
addr16
mov
push
add
addr16
sbb
lret
ljmp
in
dec
pop
or
aam
mov
and
fs
and
shr
xchg
inc
adc
and
clc
std
mov
add
iret
jg
pop
cmpl
loop
stc
stc
enter
shrb
push
push
mov
cmpsb
xor
call
scas
cmp
fcomi
shlb
pop
out
inc
inc
lret
jle
sub
or
mov
adc
add
lods
xchg
dec
lahf
in
stc
leave
scas
in
pop
jl
div
pop
in
out
mov
test
mov
pushf
test
out
scas
int
fnstenv
push
fdivr
out
lods
dec
pop
shrb
std
fisubs
fnstenv
popf
test
sub
js
jo
sub
scas
cwtl
stos
stos
cmp
adc
jo
icebp
stc
dec
insb
hlt
cs
fcoms
fldt
mov
in
inc
push
xor
mov
cmp
out
into
lcall
inc
push
mov
cmp
lods
sub
or
sub
fs
out
jp
pop
push
mov
das
pop
out
pop
lcall
jbe
jl
stos
out
js
mov
mov
out
mov
xchg
or
fadd
dec
push
sub
sub
and
ja
lods
out
xchg
mov
sbb
mov
lods
pop
push
sbb
imul
testb
jo
js
addr16
xor
in
xlat
mov
mov
dec
push
shlb
pop
leave
cmpsl
icebp
or
jl
cmp
int
mov
sbbb
popf
sub
or
mov
push
cs
xchg
imul
out
cld
cltd
out
shlb
popf
push
xchg
inc
mov
mov
inc
stos
sbb
xor
out
jp
dec
xor
xchg
lock
leave
jne
jl
lcall
push
sbb
add
dec
and
in
rcrb
dec
mov
push
in
test
cmpsb
cmpl
push
gs
or
getsec
pop
mov
leave
iret
cwtl
add
enter
dec
jp
loopne
pop
jnp
pusha
lahf
mov
jb
mov
fs
shrb
cmp
lods
push
push
lds
or
pop
and
stos
pop
idivb
push
outsl
ficoml
sub
mov
mov
jle
inc
fisttps
outsb
push
cmp
lret
or
mov
dec
mov
std
test
ret
stos
push
jecxz
xor
sub
cli
dec
mov
insl
inc
addps
pop
adc
out
iret
aam
cmpsb
xor
jle
mov
push
pop
inc
push
pop
rolb
leave
lods
insb
or
fmull
sub
sub
cmp
push
pushf
xor
cmc
out
iret
out
test
pop
lods
popl
mov
test
pop
dec
leave
aas
outsb
or
insl
rclb
aad
jecxz
pop
xchg
mov
adc
jmp
sub
call
scas
push
shr
sahf
pop
sub
cmp
cltd
pop
bound
dec
scas
leave
jbe
divl
push
lahf
dec
dec
mov
dec
add
sub
add
push
test
aad
jb
sub
mov
xchg
jo
test
add
pop
mov
cs
aas
and
lea
mov
inc
jnp
or
out
test
adc
dec
les
insb
divb
mov
mov
call
pop
outsl
ljmp
dec
dec
out
adc
lds
data16
outsb
adc
jmp
cli
into
addr16
pop
mov
cmp
and
adc
add
pop
pop
inc
enter
loopne
pop
add
out
xchg
imul
mov
addr16
dec
fstps
aaa
and
dec
xor
jbe
sub
xor
mov
xchg
test
jp
addb
xor
pop
daa
cmp
sub
leave
jp
or
les
aaa
adc
outsl
test
xor
sub
mov
inc
rorb
inc
stos
push
test
jne
and
xlat
pushf
mov
gs
int
or
fsubrp
cmp
sub
dec
mov
jns
lcall
mov
sub
aaa
adc
jo
mov
sbb
cmp
dec
stc
std
mov
pop
clc
lret
movsb
push
js
or
sbb
mov
mov
aas
sub
test
inc
pop
ljmp
lcall
jecxz
inc
adcl
jno
es
cmp
sub
es
outsl
xchg
ret
push
mov
pushw
sub
jmp
jl
jl
cmpl
push
fwait
test
mov
clc
nop
xor
jnp
aad
xchg
fistl
jnp
test
popf
sub
pop
dec
fs
stos
pop
je
in
into
sti
lods
mov
mov
ret
dec
or
jmp
cmp
sub
cmpsb
movsl
xchg
xchg
pop
orps
ds
call
out
sub
enter
xchg
push
cmp
fisttpll
out
xor
mov
out
jp
cmpsb
fwait
test
cmpl
and
aas
shll
subl
inc
mov
lret
cmp
sti
sahf
inc
fimull
fmuls
mov
inc
sub
pop
sbb
pop
out
ret
pop
push
andb
push
or
lret
bound
jge
lods
sbb
mov
fbld
cmp
into
cwtl
or
jmp
sub
and
leave
mov
jecxz
xchg
cmpsl
adc
ftst
pop
dec
call
sbb
xor
mov
pop
mov
inc
out
cmpsl
xor
aas
adc
fidivl
inc
aam
jmp
js
std
adc
lods
cmc
scas
jo
leave
adc
adc
mov
adc
mov
dec
movsb
fidivrl
addr16
std
sub
scas
inc
cld
xchg
loopne
nop
push
mov
into
stos
cmpsb
inc
movsl
lea
scas
inc
in
jae
lods
fldcw
lcall
dec
mov
inc
fstps
dec
jecxz
outsb
push
fdivr
lahf
push
push
pop
jmp
push
test
mov
mov
cmp
adc
ss
sbb
sbb
adc
inc
mov
mov
jnp
enter
pop
stc
jmp
push
push
shr
fists
insb
aam
mov
into
mov
jbe
outsl
shl
or
add
jle
adcl
dec
push
aaa
lds
adc
cmp
pop
dec
cwtl
mov
je
fldcw
inc
ret
push
in
inc
shlb
push
mov
outsl
adc
pushf
or
cltd
pop
stc
xchg
push
ret
sub
aas
clc
adc
cli
or
inc
jp
ret
std
inc
icebp
mov
push
cs
iret
sub
add
int
pushf
inc
mov
jl
lret
fsts
in
pusha
or
cmpsl
adc
inc
test
arpl
and
xor
adc
bound
movsb
clc
sbb
mov
int3
inc
jp
xor
jb
loopne
es
pop
inc
leave
in
movsb
leave
movsl
inc
or
mov
cmp
adc
shrb
xchg
push
jl
mov
cwtl
sub
add
clc
das
xor
xchg
fmul
mov
outsl
test
or
xor
mov
mov
mov
stos
lahf
fcomps
sub
jb
xor
cmp
loope
mov
or
stos
in
lods
and
dec
sub
out
cmp
xchg
xchg
lcall
les
mov
inc
in
test
pop
movsl
leave
jbe
bnd
mov
xor
dec
sbb
cmp
cmp
jbe
addr16
lea
data16
mov
or
dec
lods
sbbb
pop
push
sahf
sub
xchg
ret
push
enter
mov
aaa
out
in
pop
dec
fldenv
or
and
or
cmp
fidivrl
js
test
popf
jmp
rorl
jo
divl
lret
adc
xchg
ss
das
jb
insl
aam
and
sub
outsl
mov
mov
insl
adc
mov
jae
movsl
inc
add
stos
pop
add
hlt
push
adc
adc
jecxz
out
inc
jnp
sti
cmc
sub
sub
addr16
fcompl
faddl
cmp
push
rolb
sbb
inc
into
ret
lahf
into
push
test
xor
xchg
out
cmp
jns
xchg
dec
xor
jbe
mov
popf
add
adc
ljmp
fisubs
test
test
fldenv
jnp
mov
test
inc
mov
jp
popa
lds
js
and
cmpsb
movsl
xchg
xchg
lea
movsb
cmpsb
xor
dec
lret
scas
add
in
sbb
mov
aad
or
cli
mov
sub
in
imul
movsb
sub
sub
pmaxub
rcrb
and
or
xchg
enter
cmp
jno
and
mov
pop
aam
mov
push
jbe
ror
xchg
stos
rclb
jmp
sub
adc
bound
rolb
lahf
mov
test
xchg
repnz
or
outsl
sub
movsb
pop
fs
sbb
pushf
dec
mov
sbb
and
stos
jbe
and
lahf
sub
cmpsb
mov
out
idiv
lahf
leave
mov
mov
pop
sar
push
cwtl
rdtsc
dec
mov
in
mov
lahf
cmp
inc
mov
mov
fsubs
cmp
mov
pop
dec
xlat
pop
scas
mov
es
mov
jnp
cltd
icebp
jbe
pusha
jle
into
xchg
mov
hlt
fdivl
sub
cmpsb
mov
in
ret
xchg
push
jmp
mov
pushf
mov
mov
jl
out
sti
xchg
push
rcl
leave
push
dec
adc
xchg
imul
stos
xchg
lahf
enter
sub
mov
dec
pop
nop
int
bound
jmp
sbb
jnp
mov
aas
sub
lods
data16
nop
cmp
cltd
int3
pop
insl
xchg
pop
mov
xchg
sub
sub
or
imul
inc
ljmp
lods
adc
sub
and
mov
cmp
sub
std
push
lahf
cmp
pusha
dec
inc
fisubrl
test
push
pop
pop
or
mov
xchg
ss
fwait
sub
jns
pop
in
test
sbb
in
stc
push
jmp
or
stos
push
test
sahf
pop
movsl
in
sub
lret
push
lock
mov
mov
jmp
scas
dec
ljmp
imul
movsl
clc
or
insb
stc
cmp
std
and
dec
ljmp
lea
into
mov
dec
xchg
mov
dec
fidivrl
stc
sbb
iret
inc
pop
lods
lods
mov
push
test
sbb
aad
clc
outsl
hlt
inc
sbb
mov
les
scas
shrl
jp
lea
ja
jno
cmp
rorl
test
insl
subb
dec
sub
push
add
push
movsb
fidivl
pop
sbbb
push
pop
jne
and
sbb
mov
jb
outsb
fiadds
push
and
push
jo
cmp
jg
adc
ret
jnp
xchg
sub
in
mov
orb
jmp
call
fcmovnu
push
cmp
pop
push
outsb
ret
lds
xor
lods
insb
jb
mov
sub
cmp
mov
add
insl
aam
cwtl
dec
test
daa
insb
pop
adc
loope
xchg
lahf
dec
sbb
push
iret
pop
sar
cmpsl
jns
dec
rorb
into
mov
repz
out
test
pop
in
sbb
fisttpl
pop
or
testb
adc
xor
cmpsl
jecxz
movsb
cmp
dec
imul
mov
xor
stc
lahf
fidivrl
or
jmp
dec
imul
mov
mov
js
insl
sbb
rcr
xchg
xchg
lea
std
add
lret
xor
popf
pop
cmpsl
shlb
ud1
push
xor
inc
fld
add
cmp
insl
int3
je
in
cmc
cltd
out
addr16
iret
adc
sub
addb
rcll
int3
lock
movsb
lods
sub
adc
iret
sbb
lret
mov
inc
orb
movsb
fildll
shlb
rolb
pop
clc
cwtl
out
iret
cmc
jnp
in
push
cwtl
outsl
pop
rcrb
addr16
ljmp
mov
es
xor
cmp
push
rolb
xor
jo
inc
lcall
inc
cmp
lock
lods
push
pop
clc
cmp
and
call
inc
fsubl
scas
mov
mov
call
retw
sub
stos
and
mov
arpl
cmp
imul
sbb
out
sub
mov
xchg
dec
movsb
pop
movsl
lock
fcoml
dec
xchg
leave
pop
mov
cmp
jne
scas
cli
xor
xchg
mov
aad
fisttps
jmp
or
push
test
mov
jle
jns
and
fstl
or
outsb
dec
pop
or
fmuls
out
enter
sub
sub
and
movsb
jns
jp
add
je
add
sub
leave
popf
fucomp
and
or
cmpsl
push
or
jns
add
sarb
sar
cli
add
add
movsl
les
xchg
push
scas
jno
fcomps
jmp
andl
push
cmpsb
cld
imul
out
jle,pt
add
xchg
dec
sbb
dec
jmp
iret
test
push
pop
fstpl
jmp
aam
nop
mov
in
push
aas
popf
out
je
pop
inc
pop
bound
pop
pop
popa
dec
fsubr
mov
cmc
mov
or
push
and
leave
out
mov
jmp
fcmovnu
daa
lock
sub
mov
xor
sbbb
ljmp
mov
imul
pop
push
fsts
aad
cmpsl
adc
and
jnp
leave
jns
nop
mov
or
notb
adc
mov
lea
ljmp
cmp
imul
gs
out
pop
rcrl
insb
add
xor
cmp
pop
pop
shlb
pop
and
xlat
push
jg
add
enter
push
and
leave
cmpsl
pop
dec
call
aam
xchg
push
call
push
push
inc
adc
pushf
jecxz,pt
lahf
mov
in
adc
push
cs
lds
push
sbb
jl
mov
jp
lret
inc
rdpmc
fldl2e
mov
cltd
jne
xor
mov
adc
fcomp
loope
enter
in
jnp
xor
or
xchg
mov
push
divb
inc
iret
cwtl
cld
test
cmp
out
jae
xchg
ret
mov
in
adc
enter
inc
mov
dec
push
pusha
add
into
out
arpl
loope
xor
iret
pop
sbb
and
std
lods
push
cmpsl
xchg
cmp
jg
nop
int3
jbe
les
mov
sub
imul
mov
dec
jecxz
loope
inc
repz
sbbb
add
sbb
pusha
inc
mov
enter
sbb
cmpsb
jns
sub
lahf
or
mov
xor
out
or
adc
push
sbb
adc
stos
aam
pop
mov
pop
push
nop
in
fnstenv
adc
sub
and
ja
repz
js
sub
notl
inc
das
or
lcall
addr16
imul
jbe
notl
stos
mov
sahf
orl
inc
mov
repz
movsl
mov
sub
int3
fstpt
out
pop
je
scas
into
lods
jo
pop
xchg
xor
out
push
fimuls
push
movsb
push
out
push
lret
insb
dec
cmp
and
and
cld
mov
or
clc
or
push
test
adc
in
pusha
clc
nop
push
cmpsl
pop
lret
das
push
out
xlat
mov
inc
outsl
xor
call
mov
aaa
in
xchg
jge
pop
ljmp
jmp
js
hlt
jno
lods
sbbb
inc
int
mov
mov
fadds
jo
out
mov
cmp
mov
mov
mov
push
mov
sub
fildl
das
sti
dec
lcall
cld
lahf
repnz
sbb
mov
movsl
pushw
repnz
inc
pop
and
stos
cld
cs
sbb
test
pop
movsb
cmp
fwait
ds
imul
pop
xor
aas
arpl
call
jae
add
adc
lea
stc
dec
add
jle
inc
cmp
cld
stos
cmp
hlt
repz
arpl
and
jp
pusha
outsb
test
pushf
and
mov
jns
jge
bound
data16
aaa
outsl
fsubrs
in
push
jo
popa
call
jp
cli
les
mov
popa
mov
jp
sub
sub
mov
mov
cmp
arpl
jmp
jns
sub
jp
mov
push
lods
pop
dec
push
scas
fstl
fcmove
mov
pop
mov
loop
movsl
lret
push
test
data16
gs
push
ss
jb
imul
aam
push
fadds
cmp
loopne
xor
in
icebp
dec
mov
and
loopne
or
dec
adc
jmp
mov
mov
jmp
shlb
push
sub
xor
push
mov
les
or
xchg
and
rorl
rorb
inc
enter
dec
pop
shrd
mov
into
xor
fsubl
arpl
leave
mov
fs
mov
jmp
push
fs
les
mov
cmp
fmulp
sbb
inc
and
sub
adc
cmp
pop
jmp
fildll
pop
mov
mov
pop
ljmp
sti
lds
lahf
jmp
mov
out
outsb
add
dec
test
loop
in
push
arpl
movsl
push
mov
lret
les
inc
mov
dec
popf
ja
movsl
jne
inc
push
cmp
push
stos
pop
frstor
mov
inc
cmpsb
jo
sub
sbb
clc
ljmp
mov
ret
fucomip
cwtl
mov
lret
cmpsl
outsl
fucomi
int3
xor
sbb
jae
cwtl
pop
or
cwtl
test
push
lods
cmp
cmp
out
push
fmul
pop
inc
mov
sbb
lahf
mov
mov
mov
mov
cs
insl
fs
xor
inc
mov
shl
mov
cs
lcall
cs
aam
outsl
or
scas
jmp
clc
xor
push
xchg
inc
sub
lods
lcall
sub
outsl
mov
xor
cld
int3
jnp
pop
mov
jle
in
dec
hlt
add
loopne
cmp
leave
jo
fcoms
out
mov
int3
mov
jp
and
aaa
cwtl
lret
pop
jnp
call
push
adc
pop
and
bound
arpl
clc
lods
insl
out
mov
movsb
pop
test
sbb
xchg
xchg
cmp
mov
pushf
xor
adc
leave
xchg
scas
int
push
cmp
mov
test
iret
fadds
xor
pop
dec
aas
pop
push
mov
enter
cmovl
push
addr16
sti
and
out
mov
mov
jecxz
iret
adc
call
loopne
lcall
sub
ret
mov
rorl
js
insb
sar
cmpsb
lcall
sub
lret
test
xor
sbb
and
xlat
aad
inc
imul
cli
movsb
fldl
int3
mov
out
cmp
dec
dec
pop
mov
in
ljmp
loope
pop
daa
insb
adc
lods
mov
test
mov
stos
in
cmpsb
insb
lock
sahf
gs
movsl
and
test
sub
cmc
pop
fcoms
les
in
pop
and
jle
sbb
and
mov
jbe
das
cmp
mov
or
test
cmp
and
in
shrl
add
push
aad
cmp
add
pop
ret
mov
iret
pop
lods
mov
movsl
rcr
call
inc
std
or
popf
cmp
adcl
lds
push
ljmp
imul
fucomp
je
pop
leave
xor
or
in
mov
ja
loop
call
into
inc
push
adc
lcall
ret
pop
mul
aam
jns
out
js
dec
in
jno
jmp
insl
arpl
xlat
ss
js
jns
and
stos
push
push
sub
int3
pop
bound
xor
mov
xchg
sub
mov
cmc
ljmp
push
adc
stos
jbe
xchg
nop
inc
ja
cmp
std
loop
xor
or
jp
arpl
lahf
lret
adc
mov
dec
inc
or
and
cmpsl
push
fdivrl
inc
pop
das
loopne,pn
loope
pop
lcall
push
cmpsb
inc
xchg
test
out
aas
lcall
je
call
jbe
mov
sub
cmp
sub
mov
sbb
fildll
mov
repnz
cmc
lea
or
push
mov
dec
lret
pop
mov
lds
add
enter
lods
sarl
loope
lds
dec
in
sub
cmpsl
cwtl
adc
push
std
xor
sbb
or
ja
sbb
ds
rorl
push
sub
movsl
mov
dec
test
mov
jmp
mov
sbb
and
inc
mov
sbbl
imul
test
pop
ja
mov
pop
ljmp
mov
arpl
imul
lret
stos
outsb
das
loopne
push
sub
insb
sub
sub
lods
lock
add
sub
aas
lea
fdivr
das
fidivl
sub
test
jbe
pop
cmp
mov
enter
fdivrl
inc
out
mov
xchg
out
popf
jnp
fnsave
movsl
add
insb
mov
pushf
es
mov
test
dec
stc
lcall
push
popf
loope
jnp
dec
push
xchg
leave
out
or
push
shr
jg
inc
stc
pop
cmp
cmp
das
aaa
mov
cld
lret
cmp
out
aaa
cmp
jle
imulb
dec
mov
cwtl
cmp
pop
mov
jge
dec
mov
sub
xchg
cmpsb
pop
cmp
xor
inc
popl
jge
adc
scas
inc
call
movsb
jae
test
sbb
jge
insb
in
js
xchg
loop
or
in
stc
cs
shrd
push
stc
jo
out
and
cli
hlt
sub
ret
xchg
mov
ljmp
dec
dec
add
shrb
push
sub
mov
mull
sub
pop
dec
pop
movl
cmp
enter
mov
dec
das
mov
xor
sarb
mov
inc
push
push
test
sub
aas
lock
imul
shlb
pop
dec
dec
stc
jno
pop
xchg
jmp
rcrb
pop
insl
js
sub
movsl
fwait
adc
test
ljmp
sbb
jg
stos
insl
jmp
xchg
mov
sti
sub
mov
aaa
fistl
inc
ds
cwtl
sub
sahf
sub
xchg
mov
lods
lock
pop
aaa
jnp
and
or
sub
cmpsl
popf
int3
je
lods
lds
imul
lret
stos
fldt
pop
push
ljmp
jne
xchg
lea
popf
aaa
push
cmpl
or
pop
lods
test
pushf
jle
jns
xchg
mov
mov
out
sti
push
lcall
addb
mov
sub
aam
push
sub
cs
mov
std
lahf
pop
cmp
dec
fisubrl
out
jns
adc
in
fstl
or
cmpl
xchg
icebp
sbb
leave
ljmp
fdivs
insb
push
icebp
xchg
lds
pop
es
or
xchg
xchg
or
dec
and
es
loopne
cmpsl
int3
cwtl
push
pusha
jo
cld
pop
push
mov
dec
cwtl
stc
lea
xchg
imul
out
mov
or
rcrl
adc
scas
aam
jmp
or
or
mov
arpl
xchg
mov
scas
hlt
adc
scas
inc
and
sub
dec
in
xor
test
xor
test
sub
mov
push
out
jae
mov
xor
jnp
shlb
cmpsb
cmp
or
inc
mov
cmpb
cmp
mov
fldcw
xchg
push
int
into
add
mov
xor
in
data16
xor
inc
ret
in
jg
push
call
dec
movsb
jno
jnp
roll
and
imul
fdivrl
ret
adc
stos
out
xor
repnz
mov
loopne
inc
mov
mov
sbb
cltd
sbb
mov
xchg
jo
fstpt
fcmovbe
sub
adc
sbb
mov
jecxz
jl
mov
mov
push
jb
jg
dec
jmp
inc
std
jbe
dec
jb
push
xor
mov
nop
jne
adc
add
into
jnp
sub
sub
push
scas
pop
jae
dec
sub
mov
clc
pop
cmpsb
dec
jne
into
repnz
in
sub
inc
sbbl
lea
add
loopne
std
inc
adc
int3
add
sub
aad
aam
pavgb
jb
stos
enter
imul
lock
out
xlat
and
or
aaa
jl
das
outsb
push
dec
cmp
addr16
lods
pop
pop
lahf
mov
clc
dec
pop
ljmp
jae
loope
jbe
imul
orb
add
sahf
and
repnz
movsb
jecxz
movsb
ja
lods
ret
mov
add
pop
stc
add
jge
jae
mov
in
jbe
push
std
sbb
cmp
xor
mov
fwait
sbb
loopne
mov
jp
fisttpll
fildl
push
jo
lds
fildl
xchg
in
push
mov
sub
test
and
pop
cld
scas
inc
popf
push
mov
out
pop
fisubrl
out
pop
jmp
sub
enter
sub
jo
pop
in
imul
and
cmp
pop
js
fwait
jae
int3
and
ljmp
popa
aaa
sahf
int3
ss
mov
sahf
sbb
les
sub
ds
sbbb
jbe
cmp
fimuls
into
lahf
data16
cmpsl
inc
ficompl
leave
push
adc
add
in
push
or
dec
mulb
insl
cmp
jne
jge
push
enter
in
add
pushf
insb
dec
pop
repz
enter
pop
push
ljmp
jns
lock
sti
sub
sub
jo
movsb
and
call
or
mov
xlat
mov
add
sbb
out
or
sub
sub
dec
je
int
ss
cmp
and
pop
mov
insb
jmp
js
out
cwtl
mov
in
jns
aaa
loope
sub
sbb
cwtl
sub
or
pop
stos
sbbl
push
out
fisubrs
sbb
aad
or
pop
fadd
fstps
sbb
adc
negb
dec
roll
psubd
mov
mov
sarb
pop
sub
cmpsl
jbe
adcl
std
inc
xchg
push
mov
jge
movsl
rolb
mov
mov
ret
aaa
inc
imul
mov
in
imul
xchg
int3
jbe
out
dec
xor
or
clc
subl
push
stos
jp
or
aad
lahf
inc
push
dec
inc
mov
cwtl
xchg
jge
shlb
sbbl
sbb
test
push
sub
aaa
insl
push
mov
pop
sub
les
dec
test
sub
popf
lret
sahf
mov
jo
stos
out
cmp
in
iret
mov
sahf
es
jbe
cmp
neg
pop
and
pop
int
out
or
lret
leave
ljmp
mov
mov
cs
cmpsb
cmp
frstor
out
adc
inc
pop
xchg
ret
dec
pop
fucomip
out
sbb
lret
cmpsb
jg
pop
rorb
jp
push
rorb
aaa
dec
mov
aas
jmp
std
out
or
in
push
sbb
pop
mov
scas
ljmp
insl
inc
and
jle
js
lods
or
pop
pop
xor
sub
fcmovb
test
shrb
sub
push
in
fstpl
add
sbb
lods
mov
jnp
aam
pushf
adc
or
or
mov
push
movsb
adc
inc
je
jge
mov
repnz
fdecstp
scas
fldcw
sub
arpl
pminsw
sbb
lahf
mov
or
inc
jmp
jae
sarb
lahf
sub
aad
mov
out
lcall
jbe
dec
icebp
jle
add
lcall
fsubs
add
or
mov
sub
or
jns
into
xchg
out
adc
dec
cmpb
mov
add
call
xchg
aad
add
lcall
or
mov
fucomp
cmpsb
lcall
imul
hlt
cmpsb
sub
pop
add
enter
fwait
push
fstpl
xlat
xchg
shrl
mov
out
inc
and
adc
cmp
add
sub
jp
cmp
push
ds
ret
mov
jo
dec
mov
in
imul
mov
clc
movsl
jg
ljmp
sub
jbe
dec
clc
xchg
sub
cmp
pop
add
and
cli
add
sub
add
inc
adc
mov
call
icebp
lret
jp
rcrl
inc
popf
cwtl
lret
repnz
jns
test
sub
jmp
mov
mov
or
cmp
popf
mov
or
inc
lahf
sub
cmp
fmull
xchg
inc
std
inc
enter
dec
aas
dec
and
std
pop
pop
fisttpll
lods
rcl
jge
movsb
cmp
fdivl
and
and
test
not
ja
xchg
js
ja
cmp
mov
adc
lods
outsl
aam
mov
pand
add
or
mov
pop
stos
test
pop
cmovno
dec
je
pop
data16
or
xchg
shlb
lock
sub
add
in
xchg
adc
sub
movsl
subl
add
test
dec
lret
mov
das
shrb
sti
cmc
aam
aas
clc
push
clc
sub
outsl
adc
mov
cmpsl
fsubs
adc
mov
je
jp
push
jecxz
fldenv
orb
lea
jg
mov
icebp
call
clc
sbb
push
pop
adc
test
aaa
or
movsl
lods
repnz
rcr
mov
push
sbb
gs
jo,pt
pushf
cmc
xchg
jmp
cmp
xchg
aaa
xor
sbb
test
cmp
pushf
cmp
sbb
push
movsl
and
sbb
aaa
add
mov
push
jl
hlt
xchg
rcll
jnp
dec
pop
mov
test
sub
xor
mov
adc
jo
andb
loopne
lahf
sbb
adc
cmpsb
lret
jbe
and
add
push
mov
das
sbb
test
add
push
and
fidivrs
adc
pop
inc
js
imul
aam
mov
hlt
aas
repnz
pop
xor
jg
adc
pusha
or
je
insl
jp
cmc
test
stos
or
lahf
sub
jbe
nop
sub
inc
popa
lcall
imul
jmp
push
add
dec
push
lret
adc
movsb
insb
adc
int
ret
insl
pop
js
lahf
cmp
loop
pop
lahf
in
adc
push
or
or
aas
inc
jae
sub
call
push
sub
loope
je
aas
imul
ret
push
out
nop
scas
adc
scas
int3
xchg
cmp
jmp
xchg
jne
bound
test
cmp
mov
lcall
pushf
mov
ret
pop
insb
xchg
lahf
les
xchg
sbb
sbb
aas
fsubrp
jp
jnp
aaa
jo
jmp
push
sahf
lahf
out
aaa
cmp
int
mov
add
cmp
sub
addl
mov
dec
arpl
arpl
mov
mov
clc
cmc
dec
cmpsb
push
das
xchg
int
ds
fidivs
cmpsl
ja
mov
test
test
mov
jecxz
adc
lcall
xchg
mov
pop
fdivr
cld
dec
xchg
lea
and
ja
pop
adc
add
jbe
aas
jmp
test
stos
loop
das
int3
adc
je
into
xchg
mov
push
or
in
stos
je
imul
shrb
cmp
into
pop
je
xlat
fisubl
das
mov
xor
in
jl
xor
popf
stc
punpckhwd
pop
push
mov
ret
ljmp
mov
cmp
fs
sarb
dec
xchg
inc
lea
mov
xchg
aad
lods
aam
jnp
jge
pop
aad
cmp
dec
push
sbb
add
je
fwait
scas
mov
dec
xchg
arpl
lds
ret
sub
dec
mov
int
xor
insb
push
cli
xchg
js
cmp
or
jnp
iret
dec
nop
mov
mov
xchg
xor
nop
std
mov
or
sub
sub
or
xorb
cmp
ret
xchg
icebp
dec
pushf
mov
cmp
jg
jmp
pop
enter
loopne
aaa
in
ss
mov
pop
in
insb
repz
fwait
test
jge
leave
movsb
add
mov
dec
out
clc
imul
aas
cld
jnp
sub
or
push
mov
and
push
imul
imull
or
jnp
pop
hlt
jmp
imul
jno
ja
lahf
inc
mov
fs
inc
in
int3
and
js
sub
jp
or
subl
call
dec
xor
sub
dec
jnp
mov
dec
jle
mov
and
in
xor
pop
je
mov
inc
push
fs
and
aaa
jnp
aas
pop
or
sub
cmpsb
popa
mov
dec
stos
push
mov
inc
sub
inc
or
cmpsl
and
out
or
sbb
fwait
mov
lock
adc
mov
cmc
into
dec
jbe
mov
inc
push
push
subl
mov
adc
aas
stc
idivb
cmpsb
xchg
jne
out
pop
cmp
je
cmp
fsub
mov
or
cmc
pop
jmp
hlt
mov
cmp
jl
in
adc
sub
sbb
cwtl
int
mov
inc
cld
stos
or
and
test
push
frstor
in
sbb
es
in
inc
push
fnstenv
loope
scas
jns
out
cmp
leave
jbe
ss
dec
add
jg
sub
mov
sub
add
rolb
cs
cmp
nop
ret
rcrl
aas
xchg
dec
lcall
cmp
jno
xor
rcr
cmpsl
mov
in
lods
mov
mov
dec
inc
mov
fcompl
push
lock
push
pop
push
stos
ljmp
sub
andl
mull
mov
cmp
ss
jno
outsb
std
xchg
dec
xchg
movsb
sub
inc
add
xchg
dec
pusha
rolb
aad
or
sbb
adc
jo
inc
sbb
adc
cmpsl
scas
into
cmp
lret
jo
out
jb
push
dec
aaa
push
dec
inc
leave
sub
ljmp
clc
shlb
mov
fisubl
arpl
loope
jl
and
push
push
jnp
popa
inc
mov
or
xchg
data16
and
xchg
cld
andb
xchg
cld
nop
lret
clc
fcmovne
mov
cli
add
leave
jg
pop
call
or
cmp
mov
pop
icebp
jo
mov
ljmp
or
adc
inc
imulb
testl
nop
mov
mov
out
and
jbe
sub
cmp
xor
and
and
aam
push
ror
sahf
pop
rcl
gs
es
cltd
and
scas
sbb
adc
push
jmp
orl
jle
rcl
dec
lea
jmp
das
dec
push
or
or
lock
fsubr
mov
push
or
pop
stos
sbb
dec
mov
outsb
aaa
xchg
fstl
jbe
and
insb
sbb
ret
call
test
out
hlt
or
aam
cmp
scas
xchg
mov
add
xor
iret
jecxz
xor
dec
jl
adc
mov
movsl
out
out
mov
cwtl
scas
xor
fidivrs
sti
movsb
in
sub
cmp
jbe
cmpsb
jnp
mov
pop
int3
mov
shlb
and
lahf
js
outsb
out
dec
add
mov
lahf
sbb
test
pop
fisubrl
mov
cli
shrb
sub
cmpsl
out
pusha
loopne
sub
fnstenv
fcompl
scas
ljmp
inc
mov
or
into
mov
pop
mov
pop
jno
fsubr
mov
or
lahf
in
xchg
mov
jbe
outsl
dec
mov
pop
icebp
and
inc
hlt
sub
mov
or
icebp
iret
inc
push
mov
mov
testb
push
xchg
xor
scas
xchg
idiv
push
fcoml
sub
and
jo
ljmp
pop
dec
dec
loop
mov
inc
and
dec
jp
xchg
add
add
adc
in
test
sti
test
pop
int
push
jecxz
inc
jl
xchg
push
mov
cmpsl
sub
sbb
inc
and
andb
sub
xchg
xchg
jo
mull
or
fsubp
sbb
cmp
ret
je
leave
cmp
aas
icebp
sub
add
lea
loopne
scas
xor
stos
lret
xor
xchg
int
or
push
adc
es
cmpsl
int3
lahf
sub
pop
mov
or
sub
ret
ds
mov
ror
stos
pop
mov
fsts
out
daa
mov
sbb
stos
sbb
xchg
fs
hlt
and
nop
notl
sarl
fstps
dec
jmp
cltd
movsb
mov
xchg
addr16
out
movsb
int3
es
inc
xor
outsl
mov
mov
lea
sti
xchg
mov
and
std
adc
jge
inc
cmp
xchg
jl
pushf
pop
aaa
mov
repnz
cli
jle
or
movsb
cmpsl
xchg
cmc
movsb
push
cmp
xchg
rcll
jbe
orb
xor
xor
push
inc
jo
xor
pop
loopne
scas
loopne
mov
xchg
pop
shr
or
jmp
hlt
push
lock
test
imul
scas
mov
dec
cmpsb
mov
out
pushf
mov
fdivs
sbb
insb
push
mov
push
xchg
and
push
sub
and
push
loope
xor
push
cmp
fldl
test
push
cmp
and
stc
stos
ljmp
mov
int
lock
or
pushf
fsubrp
fwait
ret
jno
call
test
sbb
push
inc
ja
sbb
imul
mov
pop
loop
and
xchg
mov
push
sarb
cmpsb
aad
mov
lock
arpl
push
jb
sub
mov
pop
das
xchg
or
frstor
xor
sti
xchg
call
and
xor
aaa
lea
sub
pop
cmp
pop
arpl
cmp
or
fldcw
stos
push
cmp
sub
cltd
jo
xor
es
cld
jae
cmp
sub
orb
out
out
clc
jmp
sub
test
jo
repnz
leave
xchg
push
repz
mov
lock
push
pusha
or
mov
aad
mov
insb
clc
sub
lahf
mov
int
sub
mov
inc
push
jns
lret
loop
sub
test
imul
ffreep
sub
sub
inc
xchg
jge
push
movsl
imul
popa
pop
cli
inc
test
push
jb
inc
sub
ja
adcb
outsb
rcrl
cmpsb
add
ret
xlat
push
xchg
and
outsb
es
jg
sub
loope
les
jl
push
lcall
pushf
adc
leave
jmp
lret
sbb
xchg
pop
push
clts
pop
outsl
mov
lods
call
pop
xor
jb
inc
cmpsb
outsb
push
jle
cld
sub
sub
popa
push
fstpl
add
sub
out
insl
dec
sarl
or
ds
sbb
mov
stos
cmpsb
fucomi
lahf
fsts
push
loopne
cmp
xchg
pushf
mov
bound
adcl
mov
inc
jo
test
movsb
or
mov
fidivrs
sti
push
mov
loope
jo
sub
and
arpl
jo
mov
cmpl
shlb
mov
insl
clc
and
inc
cmp
out
fstps
into
cmpb
cmp
out
fldl
insw
aam
dec
inc
std
mov
cmpsl
stos
je
and
or
into
sub
out
imul
fstp
es
sbb
lods
sbb
inc
pop
shr
stos
call
pop
xlat
fnsave
mov
int3
orb
sbb
cli
jno
hlt
sbb
add
flds
leave
addr16
mov
xchg
stos
cmp
fsts
fs
shr
in
jns
fidivrl
lcall
cmp
push
push
push
push
sti
out
shrl
scas
mov
cmp
ret
sub
ror
xor
pushf
push
mov
into
pop
mov
push
in
xchg
cld
subb
jns
mov
rclb
leave
dec
and
leave
push
push
push
call
lea
stos
xor
add
xor
mov
dec
lahf
jmp
fucomp
push
ret
test
imul
jmp
in
xchg
dec
orl
push
idivl
pop
fcmovnbe
jmp
adc
cvttps2pi
mov
js
mov
mov
lods
inc
sbb
arpl
xchg
test
ficoms
flds
sbb
fcomps
xchg
dec
movsb
inc
fnstenv
mov
js
lret
int3
or
mov
in
jbe
hlt
iret
sub
enter
jns
push
data16
clc
clc
inc
dec
fnstenv
xchg
pop
jo
pop
sub
repnz
lret
in
cmp
int3
fistpl
pop
ret
sub
pop
repnz
fisubrl
loop
dec
xchg
in
mov
mov
cmp
and
andl
mov
inc
clc
insb
push
pop
pop
mov
xor
xor
stos
stc
jbe
mov
add
jbe
sbb
mov
outsl
mov
cmp
push
pop
in
outsl
ljmp
and
xor
jo
xorb
sarl
popf
ret
mov
add
cltd
mov
icebp
pop
popa
dec
in
es
jge
testl
iret
mov
or
es
push
aas
fwait
loop
mov
jmp
leave
test
sub
xchg
test
mov
dec
xor
in
inc
and
dec
sahf
mov
stos
dec
insl
mov
lret
xchg
adc
jo
or
push
jnp
cmpsb
scas
push
imul
subb
jo
iret
std
sbb
iret
inc
js
lahf
jp
aas
and
enter
dec
test
mov
jb
or
inc
adc
dec
mov
dec
pop
fwait
pop
out
rclb
arpl
xor
inc
jmp
add
sbbb
xchg
sbbb
fs
loop
mov
pusha
insl
in
int
movsl
xchg
rcrb
jmp
dec
fistpl
stos
movsl
or
or
push
pop
dec
ret
out
fcoml
cld
mov
pop
movsl
lea
pop
imul
dec
int3
mov
jp
shl
sub
inc
jnp
cmp
imul
or
ljmp
push
push
or
fdiv
adc
fmuls
mov
xor
jp
stos
clc
ror
aam
xchg
mov
or
xor
inc
jo
mov
cmp
inc
mov
mov
pop
andb
mov
cmp
mov
sub
cmc
test
out
ret
mov
cli
cltd
mov
xor
nop
jecxz
cmp
stos
es
outsb
sbb
inc
call
push
cmp
and
pop
adc
lods
enter
lds
add
pop
out
or
scas
inc
sti
sbb
or
dec
mov
cli
push
cli
jns
scas
sar
pop
out
cmp
and
jmp
call
mov
es
aas
push
push
adc
mov
cmpsl
cmp
scas
sub
imul
popf
jns
out
in
inc
ret
mov
movb
das
movsb
inc
jb
push
cltd
mov
ja
clc
xor
aad
pop
sub
movsb
stos
or
jne
mul
int3
xchg
mov
lock
out
push
sbb
aas
jle
adc
sub
and
lds
aam
fmuls
into
sub
call
mov
outsl
push
mov
roll
inc
out
int3
pop
pop
adc
lcall
adc
xor
push
xchg
push
loope
in
or
sbb
je
std
les
notb
call
cmpsb
lahf
dec
pusha
jo
mov
fstl
ds
and
push
jb
imul
aam
out
call
fcomps
sub
loopne
jae
inc
mov
loopne
sub
pop
popf
jbe
out
scas
mov
cli
ljmp
shr
jl
cmpl
fucom
popf
jp
js
aaa
insl
mov
cmp
mov
inc
cmc
fdivrl
out
sub
xchg
cltd
roll
jbe
repz
mov
mov
inc
adc
push
adc
cmc
sub
fldenv
lock
mov
movsb
ds
jbe
push
fisubrl
sub
mov
mov
sub
mov
inc
ja
inc
mov
stc
cmp
loopne
add
add
repnz
mov
roll
aam
xchg
cmp
aam
cwtl
mov
dec
inc
out
lods
or
pusha
mov
sub
push
or
pop
ljmp
inc
or
fldl
dec
sub
test
sti
faddp
mov
repnz
sub
inc
ret
mov
lds
fldl
daa
mov
fistl
ljmp
test
ljmp
xchg
loop
or
adc
jle
mov
mov
lds
lahf
cmpsl
dec
push
sbb
cmp
mul
roll
test
in
mov
aam
and
xchg
pop
cmp
pop
enter
movl
icebp
dec
sub
cmp
mov
rolb
fcompl
lret
and
int3
sub
andb
mov
aam
cmpsl
pop
mov
pushf
mov
test
xor
out
or
in
and
pop
mov
out
nop
das
adc
mov
enter
cmc
ljmp
add
adc
out
ljmp
scas
or
and
cmp
sub
fidivl
into
repz
mov
insl
cli
mov
push
mov
into
test
pop
clc
push
mov
sbb
xchg
cmp
loopne
jnp
mov
movsl
in
js
out
outsl
das
mov
xchg
add
fsubrl
inc
mov
add
in
test
cmpsb
call
je
test
xchg
pop
lea
xchg
jl
notl
ds
xchg
sub
cltd
loope
mov
movsb
lahf
movsb
scas
in
pop
pop
jnp
out
jbe
jmp
test
mov
inc
std
mov
add
cmp
pop
pop
pushf
mov
inc
aas
mov
mov
test
movsb
cmp
sub
fcomps
pop
lock
das
in
aas
idivl
stos
jnp
shlb
or
jnp
cmc
outsl
notl
imul
rolb
sub
fmuls
inc
aas
jns
push
loope
add
nopl
fcompl
mov
lods
icebp
stos
push
mov
loop
stos
int3
bound
cmpsb
xchg
inc
pop
aas
adc
jae
cmp
scas
push
xchg
stos
push
clc
jmp
mov
mov
cwtl
idivb
stos
sub
jno
adc
test
push
stc
mov
test
ljmp
movl
test
insl
in
jae
sti
cld
cmpsl
pop
add
sub
fisubrs
lcall
mov
adc
fstps
lret
rcl
cmpsb
iret
push
pop
in
scas
cmp
addr16
xchg
inc
adc
push
push
aam
push
jnp
push
sub
ret
in
xor
sub
mov
dec
and
push
mov
jle
jns
scas
aaa
sbb
in
rorb
inc
hlt
push
add
xchg
inc
call
mov
lcall
std
enter
push
pop
leave
xchg
mov
mov
add
sub
test
mov
in
sub
test
xor
lea
mov
out
enter
or
cmp
sbb
pop
jg
gs
nop
rsm
mov
roll
pop
pop
mov
mov
pop
mov
inc
or
cmpb
aad
push
sub
jge
pop
dec
ljmp
je
inc
mov
rcrb
push
lcall
mov
add
scas
mov
test
cmpsl
add
lea
into
lea
jp
pop
pop
sub
fnstenv
jmp
dec
inc
fsubr
mov
clc
mov
test
adc
xchg
leave
jle
movsb
dec
imul
stos
inc
cmp
push
push
mov
ret
jl
into
test
mov
lods
jecxz
movsb
aaa
jnp
add
rcr
push
inc
mov
jmp
ss
and
packssdw
mov
xlat
mov
in
movsl
xor
bound
mov
shr
bound
pop
scas
cwtl
or
jge
stos
iret
cmp
inc
inc
inc
cmp
xor
int
or
loopne
out
add
sbb
xlat
push
aas
ret
fcoml
sbb
mov
or
xor
or
xlat
sub
jne
andl
fdivrl
lds
sub
jne
ljmp
dec
pusha
addr16
dec
js
out
cltd
aaa
js
sbb
push
aas
movb
xor
push
out
push
dec
outsb
mov
lods
pusha
pop
mov
sbb
outsl
jge
and
into
jmp
lock
inc
jne
inc
rclb
jmp
aam
faddl
insb
mov
adc
sbb
pminsw
lods
or
adc
mov
adc
ljmp
jnp
aad
or
mov
or
std
popf
ljmp
cwtl
movsb
inc
pop
idivl
jne
add
stos
dec
jmp
lods
push
push
cmpsl
iret
mov
jl
jo
jl
inc
shr
arpl
lods
inc
lcall
repz
outsb
jnp
dec
xchg
lods
or
add
inc
sub
rcrl
and
loopne
push
sub
test
inc
and
and
ljmpw
orl
or
mov
ja
jmp
xor
pop
xchg
add
lea
dec
fadds
pop
aad
lahf
jbe
mov
push
fcmovbe
add
lods
mov
cld
sar
lock
sarl
pop
fcoml
and
les
pushf
xor
add
test
frstor
lock
sub
sub
jmp
push
aas
repz
addr16
jns
pop
dec
fdivrs
push
cwtl
cwtl
pop
outsl
cmp
adc
push
loopne
mov
xchg
push
loope
imul
fdivs
xchg
lock
mov
loopne
lret
pop
iret
gs
inc
mov
data16
fstp
out
or
xchg
dec
xchg
adc
jae
les
add
sti
fimull
or
mov
rcl
mov
loop
cmp
mov
mov
ret
jmp
out
adc
dec
push
iret
sbb
xchg
pop
dec
fucom
in
test
push
ret
or
pop
test
ss
pop
cwtl
sub
int3
scas
call
dec
cmp
mov
jo
sub
out
xor
sub
test
mov
cmpsl
jbe
sub
sbb
mov
cli
push
enter
or
sbb
cmp
mov
sbb
pop
mov
lcall
ficompl
jl
mov
sub
cs
dec
dec
lods
mov
enter
mov
mov
mov
mov
jno
xchg
push
or
filds
dec
dec
mov
add
add
pop
push
test
adc
sti
xchg
mov
cli
in
stos
out
push
cmpl
jle
push
imul
mov
arpl
sub
stc
leave
pop
sub
pop
icebp
movsl
jo
mov
or
insl
mov
ss
std
dec
fstpt
aas
jmp
cs
lea
outsb
sarl
mov
dec
pop
call
arpl
es
sub
mov
leave
push
cld
pop
cmp
mov
mov
je
jp
cmp
pop
sub
sbb
fldt
cltd
mov
hlt
pop
call
leave
and
js
lret
mov
mov
mov
sbb
or
cmp
movsl
cli
cwtl
lock
mov
repz
jbe
jp
fdivs
mov
or
mov
cli
mov
test
aaa
fwait
add
mov
mov
jp
mov
enter
cmp
or
addr16
iret
popf
ljmp
or
lcall
cmpsb
in
sti
mov
fldpi
clc
or
aas
insl
stc
inc
push
outsl
jl
ret
call
adc
ss
outsb
roll
dec
jnp
cmovnp
in
cmp
mov
daa
inc
sub
xor
and
inc
jne
lahf
lcall
cmp
out
sub
aas
cld
jnp
outsl
test
lods
outsb
int3
adc
xor
shll
notb
or
pop
push
pause
sbb
popa
rcll
sbb
add
cmp
testl
dec
jle
cs
clc
sub
cltd
das
scas
dec
pop
call
ret
pop
dec
cwtl
pop
sbb
fldl
jae
cltd
std
inc
lock
std
pop
rcl
pushf
out
shll
push
loope
repnz
push
test
repnz
faddp
add
js
jl
and
dec
adc
call
mov
pushf
jo
cmp
sbb
ss
push
dec
mov
sub
subb
out
cmp
xor
dec
ljmp
outsl
lahf
in
mov
das
out
enter
xor
ss
push
enter
mov
cmp
xor
sub
mov
dec
icebp
pop
xchg
mov
pop
mov
adc
inc
pop
sub
out
pop
cmpsl
xchg
jl
adc
sbb
inc
in
jae
xchg
xlat
jp
mov
lcall
rcrl
jmp
mov
test
ljmp
enter
dec
enter
fcmovnbe
xchg
test
test
add
add
in
loopne
ffree
adc
orb
xchg
cmp
sbb
cs
adcl
lret
test
int3
punpckhdq
ljmp
xchg
and
cmp
xor
or
mov
out
lock
mov
dec
add
nop
dec
fisubs
dec
inc
adc
aad
add
adc
fwait
in
mov
pop
push
xchg
xchg
jmp
mov
aaa
shrb
mov
mov
adc
or
jmp
jp
pop
pop
leave
mov
inc
pop
jecxz
push
jmp
pop
jmp
push
sbb
dec
push
inc
push
lret
test
mov
cmp
subb
lods
sub
mov
test
call
and
lds
cmp
dec
mov
rcl
jmp
mov
shll
pop
jg
or
or
jns
push
std
fbld
push
mov
subb
pushf
test
mov
stc
stos
xchg
jmp
mov
mov
add
xchg
push
mov
lods
gs
sub
or
popf
arpl
enter
mov
les
loope
in
aad
add
fdivr
cmpsl
pop
call
mov
arpl
insl
xor
popf
xor
cmp
inc
dec
pop
bnd
aaa
cmp
std
xor
sub
or
pop
pop
out
push
mov
out
fwait
inc
cmp
sahf
or
out
add
aad
cmp
js
cmpsl
pop
hlt
jp
addb
xchg
in
insl
mov
sbb
push
test
std
inc
jo
cmp
mov
fdivrp
or
and
mov
jl
lret
out
dec
push
les
push
insb
lahf
sbb
pop
sbb
adc
mov
lea
and
scas
mov
jmp
xchg
int3
push
jp
pop
push
test
shlb
fsubrs
clc
call
inc
rorb
lock
cwtl
leave
fld1
jae
cmpsl
inc
cmpsb
loop
inc
pop
jae
inc
push
pop
lret
ja
ds
push
aaa
or
arpl
icebp
gs
icebp
popf
cmp
test
aas
cmp
inc
pop
jno
out
mov
enter
dec
lods
mov
or
cmp
cmp
inc
fcomps
sarb
int
les
push
inc
jne
fs
pop
mov
das
xchg
lahf
lcall
xchg
mov
loope
jl
mov
jmp
enter
ret
das
scas
dec
test
and
fs
push
cld
dec
inc
arpl
fcmove
push
fsubr
cli
int3
pop
add
ret
mov
push
mov
push
lcall
cmp
inc
clc
cs
mov
repnz
xor
sti
add
pop
inc
out
pop
jmp
mov
xchg
push
jp
sbb
lahf
imul
jp
adc
push
divb
enter
test
clc
jae
mov
or
test
ficoml
idivb
mov
add
scas
dec
sub
mov
jle
cli
addr16
fsts
mov
mov
push
add
gs
and
arpl
sub
add
sbb
pop
stos
cmpl
or
xor
aas
sub
mov
fsubrl
mov
arpl
cld
mov
aaa
lea
test
push
in
fdivl
jne
das
js
sub
cmp
and
push
pop
aam
cwtl
inc
lret
inc
daa
loope
xor
in
je
ja
mov
int
jbe
int
and
aad
or
idiv
test
stos
fmull
in
pop
leave
scas
jmp
imul
pushf
shrl
cltd
cmpsb
fstpl
sbb
xor
ljmp
and
mov
ret
lea
mov
lret
pop
iret
scas
push
cmpsb
mov
js
lods
or
pop
aaa
sub
cmpl
xor
inc
pusha
ja
cmc
or
aas
loope
sarb
cmpl
das
ljmp
bswap
rolb
cmpsl
jle
leave
or
push
mov
ljmp
dec
or
aam
mov
inc
in
ljmp
hlt
cmpsl
mov
leave
test
push
pop
gs
inc
fs
sbb
in
insb
cmpsb
lcall
jl
push
xchg
inc
pop
loopne
cs
mov
rcrl
pop
xor
dec
stos
cmp
or
int
out
loope
andb
push
in
addb
push
mov
pop
dec
std
xchg
add
icebp
dec
enter
out
lret
dec
rorl
cmpsl
jmp
jle
xchg
aas
jecxz
cs
jl
cmc
nop
jne
rclb
lea
push
xor
ljmp
in
sbb
or
lahf
cmp
insl
arpl
imull
jmp
push
xchg
mov
stos
fsts
sub
inc
mov
pop
test
in
fwait
mov
hlt
mov
leave
sub
inc
lds
test
xlat
sbb
fldl
popf
xchg
add
lock
out
push
push
sbb
sti
lds
sub
aam
sub
cmp
js
jo
and
sti
jmp
lret
dec
pop
lock
and
sbb
lcall
clc
and
dec
adc
mov
sub
scas
test
clc
or
push
sbb
adc
call
lods
or
out
ud2
ljmp
fcmove
jnp
inc
ret
popf
aas
jmp
jmp
loop
outsl
inc
repnz
push
arpl
adc
xchg
daa
sub
add
fwait
repnz
aas
addr16
sbbl
imul
or
test
mov
add
insl
out
dec
int3
xchg
sti
and
mov
mov
les
pop
ljmp
mov
or
test
xchg
mov
pop
pop
es
insl
jg
fwait
lcall
cltd
sti
mov
dec
push
outsb
adc
xchg
rcrb
push
mov
lret
and
call
cmp
leave
lods
jmp
loop
shrb
fisubl
sarl
cwtl
imul
sbb
pop
ds
pop
imul
push
push
addr16
cmp
nop
mov
add
popf
outsb
scas
cld
in
out
push
cmp
out
daa
movsl
jnp
out
or
cltd
pop
or
in
mov
dec
mov
into
xchg
in
or
fldl
cmp
push
clc
aaa
pop
mov
addr16
mov
push
ss
jmp
sahf
inc
jbe
js
pop
aad
pop
lea
pop
sbb
faddl
jle
push
aas
push
dec
in
js
and
mov
jnp
mov
cmp
inc
sahf
dec
in
sub
cwtl
in
sbb
clc
sbbl
jns
fimull
and
rorb
imulb
ljmp
mov
pop
mov
pop
shr
shrb
mov
pop
sbb
or
out
pop
sbb
out
push
mov
int3
lods
loopne
scas
repnz
sub
test
jo
sub
lahf
adc
clc
jnp
cmp
mov
sub
adc
cmpsb
and
cmp
push
inc
lock
stos
mov
push
sbb
in
add
loop
lcall
clc
out
iret
mov
bound
fmuls
int
jo
push
imul
mov
mov
roll
lock
pop
scas
pop
int3
dec
cmp
push
mov
lds
inc
jnp
push
insl
mov
jl
push
imul
inc
cwtl
scas
int
das
rcll
mov
cwtl
fcoms
ss
test
mov
in
xchg
jb
call
js
cmpl
out
stos
add
repnz
lret
xchg
or
sub
xchg
mov
push
fmuls
or
popa
arpl
in
test
test
adc
scas
jl
mov
xor
test
jo
jmp
mov
out
dec
and
repnz
ds
ret
loopne
in
fbstp
stos
xor
ret
addb
push
mov
ficompl
mov
into
lahf
add
ret
mov
cltd
dec
jmp
shlb
jnp
roll
stc
movl
sarb
pop
fcomps
sub
push
jle
mov
idivl
mov
shrl
and
lea
xchg
xchg
loope
dec
lcall
dec
nop
xchg
or
and
push
jae
call
mov
inc
or
sub
enter
inc
movsb
mov
int3
fdiv
or
xlat
push
lods
lret
mov
dec
dec
mov
sub
jmp
sbb
sub
sbb
aaa
pop
xchg
mov
or
jae
out
jnp
clc
sarb
mov
mov
popa
lret
insb
mov
pop
xchg
addr16
sbb
pop
xor
jl
rorl
ja
dec
fsubr
pop
push
rclb
sbbb
add
jp
and
mov
popf
dec
pop
fld
mov
lret
cmp
xchg
push
shl
imul
cld
fnstcw
jmp
cwtl
xchg
inc
xlat
mov
sub
movsl
leave
jnp
ret
shrl
sub
dec
adc
dec
les
xor
icebp
xchg
xchg
sub
test
out
mov
sar
push
pop
aam
out
pop
call
sub
cltd
jbe
movsb
cmp
mov
dec
fidivrl
jbe
mov
lret
js
lret
sti
sub
out
outsb
int
jmp
mov
adc
push
push
mov
pop
movsb
out
jg
sub
scas
pop
mov
stos
and
addr16
push
mov
into
inc
lea
scas
out
fwait
stos
add
jecxz
bnd
test
mov
lret
and
lods
sub
or
sub
and
xchg
push
mov
dec
jmp
and
outsl
mov
xor
mov
test
leave
or
test
imul
or
pop
pop
out
fwait
dec
jnp
jo
mov
lea
test
cmpsb
insl
clc
mov
mov
sub
scas
mov
test
sub
movsl
push
inc
rcrl
aas
mov
ljmp
fucomp
dec
push
push
xor
and
mov
ss
adc
adc
jmp
xchg
fadds
fmuls
lock
jmp
or
jae
test
test
popa
fnsave
cmp
and
mov
lcall
sub
pushf
aaa
lods
ror
inc
cmp
mov
sbb
dec
aaa
sub
fbstp
mov
outsl
or
dec
nop
rcrb
mov
aaa
data16
rorl
or
mov
and
test
rcrl
xchg
mov
and
or
movaps
mov
xor
pop
out
xchg
lahf
jbe
dec
clc
negb
or
sub
and
xor
sub
insb
xor
mov
inc
ds
cmc
dec
mov
xchg
adc
out
push
adc
sub
jmp
push
cmp
pop
jge
inc
ss
or
xchg
inc
sub
outsl
xchg
xor
xchg
mov
cmp
lock
jbe
mov
rcr
stos
lret
pop
xchg
xchg
push
aas
out
cmpsl
aad
adc
ljmp
or
xchg
mov
inc
mov
push
ds
cwtl
inc
or
mov
sub
and
pop
data16
add
imul
push
fsubl
imul
out
jmp
mov
ljmp
pop
stos
jle
loope
mov
push
jecxz
mov
out
mov
popf
mov
xor
push
sbb
push
fnsave
jle
ss
pop
bound
xlat
cwtl
inc
pop
adc
push
fistpl
push
jo
aaa
fists
mov
mov
ffreep
or
pop
push
xchg
sub
cmpsb
cmp
pop
push
fsubrl
cli
sbb
sbb
cmpsb
int
sub
int3
fxch
stos
test
mov
icebp
jmp
cli
and
cmp
cli
fsubrs
out
int
push
fmull
mov
in
fistl
sbb
jnp
cld
imul
fcoms
das
adc
cmp
or
add
adc
push
hlt
xchg
cmpsb
mov
cmpsl
je
repz
in
shll
xchg
mov
cmpsl
clc
call
jnp
and
std
adc
lahf
xchg
fwait
xor
mov
fdivrl
divb
out
sahf
or
pop
imul
sub
cmp
mov
fcomp
leave
pop
inc
pop
fidivrs
xchg
cmpb
pop
jbe
popf
stos
nop
into
shrb
fwait
sub
jle
jnp
jb
and
je
mov
xchg
xor
sbb
xor
pop
jo
jp
hlt
mov
push
dec
jge
pop
cmc
stos
cmp
mull
arpl
cmp
mov
dec
mov
repz
mov
cmp
dec
adc
sub
push
push
mov
pop
cmp
dec
repz
mov
mov
in
push
cli
dec
test
mov
int
cmp
and
mov
dec
xor
push
sti
dec
clc
dec
dec
sbb
jl
adc
jmp
lods
enter
lods
cmp
mov
mov
pop
inc
xchg
pop
imul
mov
jnp
aas
or
mov
pop
jmp
adc
or
jae
or
push
aam
pextrw
xor
incl
dec
sbb
mov
adc
loopne
adc
test
pop
fldenv
fsubr
xor
inc
add
shll
clc
xorps
fstl
jbe
sbb
fs
ljmp
test
lcall
fists
cmp
cld
lcall
test
cwtl
in
or
aaa
roll
xchg
in
loopne
mov
sbb
jmp
or
dec
lds
out
in
cwtl
std
popf
mov
dec
mov
iret
enter
scas
pop
pop
je
leave
pusha
mov
push
mov
push
mov
test
lods
js
mov
sub
lods
clc
imul
inc
test
and
push
sbb
ja
test
into
adc
sbb
mov
out
jb
fimull
hlt
shll
neg
cmp
lods
push
jns
add
cld
cmp
fwait
dec
ja
dec
or
pusha
lods
dec
cli
int3
iret
xor
inc
cld
mov
sub
push
or
mov
lea
fdivl
mov
xor
and
movsl
mov
mov
sarb
sbb
xchg
inc
leave
movsb
sub
rcl
jp
push
sub
xchg
int
leave
clc
jmp
lcall
xchg
fsubs
add
jecxz
in
stos
outsb
or
adc
fisttpll
sbb
mov
test
push
or
inc
mov
lods
sub
adc
mov
jle,pt
call
inc
sub
stc
lock
pop
rclb
stc
lods
sbb
push
cmc
mov
addr16
stos
lret
cli
sub
into
sub
into
inc
enter
out
dec
int3
cmp
push
mov
or
leave
sbb
cmpsb
xor
and
lock
mov
add
pop
xor
sub
lea
sub
cld
jno
imul
adc
pop
lea
ror
addr16
leave
iret
loop
mov
outsb
lcall
xor
jnp
addr16
mov
mov
lea
daa
jbe
lock
jmp
sbb
push
test
mov
sti
pop
lods
xorl
leave
in
test
mov
xchg
js
cli
xor
hlt
push
outsl
jg
fisttps
push
fwait
jne
dec
add
sbb
and
jle
movsb
fmul
or
push
sub
ret
fstpt
mov
mov
dec
jnp
sbb
push
cli
inc
push
sahf
in
push
or
movsb
jmp
or
push
sub
push
mov
dec
movlps
cmp
mov
adc
cmc
shlb
inc
pop
sbb
pop
mov
dec
daa
das
sahf
dec
and
pushf
pop
jecxz
push
mov
addr16
push
mov
add
inc
lret
pop
enter
fs
cmp
imull
clc
mov
repz
or
mov
inc
arpl
pop
fcoml
xchg
jnp
out
xor
add
mov
dec
addr16
jp
sub
jno
sub
stos
movl
mov
repnz
cmpsb
mov
movsl
mov
shll
mov
leave
iret
push
clc
cmpl
mov
mov
mov
pop
jbe
inc
mov
jne
clc
clc
test
sub
xchg
and
fimull
sub
dec
sbb
mov
pop
imul
das
sbb
in
pop
pusha
das
add
and
lcall
sub
cmpsb
sub
push
jp
sub
aaa
jl
jge
movhps
sbb
loope
aaa
sbb
orl
or
xchg
dec
clc
jnp
insl
gs
subb
sub
in
shlb
jmp
push
fdivrs
mov
mul
loopne
movsl
addr16
ja
aas
inc
rcrb
ss
mov
cmp
xchg
sarl
push
jle
mov
mov
insl
ljmp
cmpsb
inc
xor
xor
lret
imul
mov
fucom
adc
int
or
cmpsl
jns
xor
mov
jle
cld
jge
xor
rcr
sub
stos
out
pop
cmp
jmp
aas
xchg
mov
add
out
lods
mov
jp
in
stos
sbb
ror
push
jbe
mov
or
mov
fadds
or
sti
push
push
fucomp
mov
or
mov
test
clc
dec
mov
pop
fstpt
or
push
int
mov
inc
fmull
cltd
shrb
sub
pop
dec
push
lret
fs
jmp
stos
push
or
jo
or
or
xor
data16
pop
lret
std
in
mov
out
sbb
mov
icebp
bound
scas
neg
fmull
enter
and
mov
mov
or
sbb
imul
sbb
in
add
je
aas
fcoms
pop
iret
stc
mov
out
test
cmp
cmp
fisubrl
mov
mov
cmpsb
xor
dec
ret
mov
cmp
dec
ret
ds
movsb
push
cwtl
push
push
out
mov
xlat
imul
and
test
pop
push
sbbl
fdivl
pop
nop
add
pop
fsubs
stos
popa
or
les
leave
fcomps
in
iret
sub
test
and
adc
or
push
cmp
int3
arpl
or
sub
aam
and
pop
jnp
and
inc
into
sub
sbbb
push
ds
jnp
pop
mov
out
iret
outsb
out
js
lods
add
lea
outsb
jg
aam
loopne,pn
subl
push
mov
aad
in
ja
mov
inc
cmpsb
push
add
iret
jnp
and
fistl
xlat
int3
dec
mov
mov
jp
int
es
cltd
sub
or
scas
gs
fldt
int3
lock
mov
add
ljmp
xor
pop
pop
mov
adc
cwtl
jb
frstor
test
cmp
xchg
inc
dec
aaa
lahf
in
pop
jg
mov
and
mov
inc
pop
insl
xchg
push
ljmp
cmpsl
or
and
dec
imul
xchg
or
out
fs
test
outsl
lock
mov
jnp
lret
mov
lahf
cmp
mov
stc
sub
leave
xchg
sub
dec
es
outsl
pop
shr
shrb
sarl
aam
iret
fadds
mov
push
fnstsw
cmp
lods
and
push
xchg
and
lods
lahf
lcall
dec
aaa
imul
aas
imul
add
xor
loopne
cmp
push
sbb
mov
lock
mov
pop
adc
lret
jo
sub
jnp
aas
stc
fildll
mov
pop
mov
in
ss
jbe
stc
std
adc
das
sub
pop
jb
les
mov
loope
xacquire
pop
movsb
jne
xor
das
out
sbb
push
sbb
inc
jge
push
jle
mov
pop
jmp
int
inc
jnp
fldl
outsl
shll
jp
hlt
jg
dec
jno
fmul
cli
sub
adc
push
cmpsb
imul
mov
cs
push
cmpsb
test
mov
push
leave
nop
stc
rcr
out
sub
push
lock
test
fildl
jns
mov
int3
xchg
mov
scas
and
cmp
lcall
xor
mov
mov
inc
arpl
sub
rclb
dec
int
fs
in
int
or
inc
mov
test
pop
xchg
insb
mov
mov
xor
mov
je
loopne
mov
out
in
mov
dec
cmp
adc
pop
ret
sub
repnz
xchg
lret
or
call
iret
dec
imul
xor
inc
mulb
inc
xlat
adc
lret
sbb
dec
jbe
cmp
sahf
icebp
push
inc
adc
sub
mov
data16
lret
popl
sub
fidivrl
cmpb
lret
mov
lret
test
or
nop
mov
out
cld
fnstenv
cmp
push
inc
mov
or
scas
xchg
pop
test
leave
popa
inc
lea
dec
mov
test
jl
bswap
jge
movsl
pop
cltd
lea
lcall
mov
lahf
leave
popa
push
mov
cmp
mov
ds
jae
pop
add
push
cmpxchg
bound
jge
push
push
inc
fldl
insl
jmp
xorb
inc
dec
lods
test
mov
je
sti
mov
idivb
xchg
fldenv
loopne
jmp
cmp
test
or
nop
js
jle
jno
in
lret
dec
je
call
add
fldcw
test
pop
popa
push
mov
add
lods
jmp
scas
inc
fs
into
jl
arpl
mov
jne
mov
and
aad
cmp
push
lcall
adc
call
and
adcl
add
cs
shlb
adc
mov
mov
test
push
xchg
lea
jnp
pop
mov
popa
pop
adc
jmp
in
pop
fsubrs
xor
xchg
sbb
adc
jecxz
out
xchg
lods
lcall
decl
rcll
movsb
out
dec
ljmp
cmp
cmpsb
aaa
push
mov
pop
ljmp
and
int3
loop
std
fwait
mov
dec
sbbl
xchg
cmovbe
sbb
pop
and
cmp
or
adc
jle
sub
push
push
movsl
mov
sub
call
cs
mov
cmpsb
cmp
into
sarl
push
push
and
lds
shl
cmp
fstpl
sub
xor
test
hlt
aas
dec
or
jl
pop
mov
jnp
or
mov
fimull
adc
push
push
loop
mov
pop
mov
mov
test
out
or
movsl
adc
sbb
lcall
mov
pop
cmp
fidivl
mov
lods
xor
and
fsts
mov
cli
test
cwtl
pop
cmpsl
in
inc
fnsave
outsl
andl
xor
xor
repnz
test
and
mov
lods
jbe
mov
mov
xor
pop
test
lods
sub
push
lret
scas
adc
adc
mov
les
es
lahf
inc
xor
lcall
adc
sub
test
jmp
das
pop
or
loopne
test
out
xchg
shrb
out
jg
dec
jnp
push
cmp
cmpsb
out
stc
int3
lods
push
scas
shrb
mov
dec
pop
jmp
aaa
or
or
cmp
or
or
inc
ljmp
mov
les
rcl
out
in
or
ror
cmpsl
xor
push
hlt
pop
and
xlat
xchg
fidivrs
int
dec
pop
sbb
and
movsl
jp
lods
push
ret
scas
loopne
data16
in
jge
das
push
or
pop
ja
jp
ss
out
jbe
jbe
andb
xchg
and
sti
lea
into
inc
cmpsl
mov
shl
jne
shlb
dec
mov
cmp
ret
or
mov
lret
xor
sub
lods
test
sti
hlt
lea
jb
ret
stos
outsl
mov
arpl
test
dec
pop
inc
xchg
fwait
or
push
lcall
mov
inc
jge
cmc
movb
cmpsb
out
cmp
or
dec
lods
mov
mov
dec
sub
outsl
int
sub
or
ret
or
clc
aam
mov
pop
sbb
mov
orb
arpl
push
icebp
pusha
shrl
flds
adc
mov
push
lahf
xor
adc
mov
shll
mov
and
leave
cmp
adc
push
xchg
rorl
mov
fimuls
imul
xlat
lahf
sahf
sub
dec
inc
test
fildll
addr16
std
mov
outsb
push
and
fldl
or
clc
mov
jbe
int3
jns
in
int3
jp
lods
cwtl
cwtl
jbe
mov
pop
test
cmc
pop
popf
dec
jp
fstpl
mov
push
pop
dec
push
mov
out
mov
mov
stos
test
jecxz
lahf
xor
mov
mov
adc
push
or
and
lahf
mov
jbe
repz
test
sub
clc
dec
lds
fimuls
in
lods
in
out
mov
xchg
inc
popf
idivl
ret
adc
insl
or
and
mov
mov
pop
xor
leave
adc
leave
dec
ljmp
cmpsl
pop
mov
pop
push
pop
dec
jg
mov
dec
scas
push
sbb
out
subl
sti
and
insl
mov
inc
jnp
test
mov
lret
cwtl
loope
sub
xchg
and
pusha
es
lcall
sub
cmp
pop
cmp
xchg
pop
jnp
pushf
fwait
sti
lds
clc
je
outsb
sidtl
dec
lock
call
sbb
or
mov
insb
push
push
dec
mov
outsb
sbb
and
fbstp
or
test
inc
outsb
xchg
mov
push
push
icebp
mov
or
js
test
je
cmpsl
pop
scas
cs
ret
add
sub
out
pop
push
mov
cld
or
push
and
call
rclb
sub
fmuls
call
subl
or
lcall
icebp
cld
push
fdivr
lahf
shl
push
and
arpl
push
sahf
lret
pop
dec
mov
call
push
fnstsw
add
or
add
jae
shl
insl
jne
scas
dec
subb
mov
or
hlt
jl
sub
leave
cmp
add
mov
and
sbb
xchg
push
pushf
mov
pop
sub
pop
bound
icebp
xorb
mov
mov
pop
jge
jl
inc
movsb
movsb
push
push
push
lahf
std
fs
sub
mov
movsl
sub
inc
ds
imul
add
imull
mov
dec
mov
add
sub
mov
xchg
std
jb
aad
clc
ds
jp
mov
or
jmp
addr16
aas
push
cmpb
sahf
cmp
fadds
lods
push
aad
push
mov
lea
inc
cmp
idiv
das
ja
lahf
sub
insl
ror
mov
lcall
sbb
call
pop
lahf
mov
aam
cmp
sbb
imul
andb
pop
cwtl
adc
bound
add
pop
mov
jno
mov
jnp
or
int
testl
pop
xchg
pop
cmpsl
clc
test
jns
jnp
test
in
stos
mov
cmpsl
adc
pop
mov
sub
movsl
xchg
mov
add
push
sbb
push
xor
xchg
test
scas
inc
mov
sti
adc
cmpsl
sub
mov
mov
adc
push
sbb
popf
mov
popf
dec
cmp
xor
add
push
mov
fisubrs
jl
xor
add
jo
popf
pop
sub
push
shll
loope
test
sbb
pop
inc
addr16
jbe
pop
push
nop
imul
lea
or
push
xor
adc
jmp
lods
push
aas
ja
add
aas
in
test
push
enter
push
faddl
leave
stos
inc
movsb
push
jo
xor
adcl
mov
es
shlb
insl
sbb
call
jb
sub
push
mov
sbb
cmp
inc
stc
or
mov
rorl
mov
cmp
imul
stos
int3
cltd
sbb
pop
mov
jl
dec
push
icebp
mov
lea
fs
bound
xchg
mov
rolb
mov
or
cmpsl
shll
fmuls
cmp
ret
push
iret
rcll
arpl
dec
xor
push
pop
jbe
mov
cmpsl
sub
pop
mov
sub
fldln2
fldcw
sub
sbb
jbe
mov
lea
mov
dec
add
movsl
ja
jmp
dec
out
cmp
pusha
mov
xchg
xor
frstor
or
mov
pop
mov
test
jnp
xchg
mov
mov
xchg
lods
fucomi
push
dec
inc
cmp
sbb
fildl
mov
xchg
test
push
push
gs
lret
cltd
loop
cmp
mov
loope
shrb
aaa
in
mov
into
sub
cmp
cs
ljmp
jp
sub
pop
adc
dec
cmpsb
sbb
lahf
sbb
mov
ja
pop
lahf
popf
lret
mulb
faddl
cmp
bound
push
aaa
push
mov
jge
lret
mov
push
lock
cs
mov
pop
lock
aad
inc
aam
cmp
dec
pop
sbb
add
es
js
mov
mov
fdivrp
fsub
int
push
fnstsw
and
sbb
inc
dec
leave
mov
xchg
jmp
sub
push
mov
ret
shl
lret
mov
mov
push
lods
xchg
fiaddl
mov
movsb
shrb
adc
mov
insb
mov
mov
js
pop
or
popa
rorb
addr16
cmc
lret
add
js
cmp
xor
mov
sub
cli
and
icebp
pop
fsubrs
shrl
bound
loop
in
movsl
sti
jne
cmp
cli
loope
or
lods
div
push
cmp
int
and
mov
push
push
rorb
testb
lret
sub
push
pusha
inc
mov
add
aas
sbb
repz
inc
adcl
inc
jmp
mov
in
pop
into
popa
sub
jle
sub
add
cmpsb
nop
jbe
incl
int3
iret
movsl
mov
int
sti
test
cmpsb
sub
mov
sub
inc
or
push
adc
adc
push
adc
xor
dec
sub
sti
lods
mov
imul
mov
cmpsb
xor
stos
insl
or
jno
das
cmc
jecxz
push
inc
mov
mov
ss
mov
aam
xchg
sbb
inc
jb
sub
in
rcrb
out
or
outsl
adc
popf
jmp
inc
std
iret
and
rcrb
cmpsb
gs
cwtl
test
popa
inc
pop
add
and
popf
cmpsl
insl
mov
jbe
push
outsl
test
sbb
lcall
inc
push
push
pop
and
shrl
rolb
sub
xchg
jl
iret
aaa
xchg
clc
cltd
gs
decb
ret
movsl
push
shrl
xchg
adc
ds
pop
fcmovne
in
xorb
leave
adc
push
in
in
rcrb
fsubrs
adc
bound
daa
jb
ss
mov
jbe
adc
cmpsb
dec
les
jno
lods
out
aad
inc
ficoml
daa
iret
mov
adc
xor
or
pop
pop
int
fnsave
cmpl
cmpsb
pop
pop
mov
or
dec
jg
cmp
pop
jl
sub
sub
mov
sti
pop
out
jnp
cmp
dec
or
dec
push
mov
andb
ds
mov
std
std
cmpsb
pop
idivl
jae
lret
push
rcl
xchg
sbb
mov
mov
mov
sahf
rolb
icebp
imul
lock
cmpb
sbb
cli
out
cltd
dec
sub
das
das
sahf
mov
cmp
sbb
clc
mov
in
push
cmp
jo
jp
xor
lea
sbb
push
imul
add
xchg
pop
mov
scas
sbb
mov
leave
mov
scas
push
dec
test
adc
mov
and
cmp
mov
test
jnp
cmp
lcall
cmp
testb
xchg
shlb
lahf
int3
adc
lock
sbb
lea
iret
pushf
xor
pop
outsl
cmp
loope
lcall
push
jne
mov
out
frstor
pop
cmp
ds
jbe
and
ret
push
rclb
test
pusha
lcall
sbb
pop
movsl
sbb
in
jns
call
fisubs
cmp
mov
adc
js
push
test
out
out
dec
jp
xor
cmp
and
or
push
arpl
and
iret
scas
mov
aam
jmp
in
fnstsw
sub
cmpsb
xor
push
push
dec
fiaddl
cmp
mov
xor
sub
loop
das
inc
and
subb
mov
insl
sub
lcall
ret
nop
sub
ss
test
in
xchg
scas
jo
adc
mov
and
ss
mov
aaa
push
add
and
mov
enter
or
sar
rorb
mulb
fs
sbb
sub
xorb
data16
xor
jno
mov
pusha
dec
inc
xchg
xchg
fisttpll
in
dec
sti
jecxz
xor
sub
rclb
pop
xor
and
inc
ret
rorl
or
adc
std
jne
icebp
int3
xchg
mov
pop
mov
mov
les
or
xchg
fnstsw
out
imul
sub
cmpsl
sbb
call
cltd
or
dec
sub
mov
push
inc
std
aas
cmpsb
fisubrl
les
test
orb
les
inc
aas
sbb
dec
and
call
inc
adc
cs
and
cmpsb
mov
leave
inc
xor
scas
xchg
aaa
inc
test
dec
movsl
push
dec
sahf
sub
or
push
in
sub
inc
jo
or
xchg
js
out
sti
xor
jmp
insb
pusha
pop
call
es
adc
pop
into
es
fisubl
in
push
testl
mov
addr16
cmpsb
inc
mov
popa
mov
loope
pop
and
mov
orb
rcrl
xchg
aam
xchg
dec
ret
push
and
aaa
repnz
popa
push
scas
dec
jl
aad
cmp
adcl
sub
or
hlt
jle
popl
cmp
push
fmuls
btc
inc
pop
jp
xchg
pop
sub
mov
frstor
or
mov
jmp
cmp
xor
xchg
test
loop
scas
push
mov
adc
and
gs
ret
cwtl
hlt
clc
inc
cmpsl
fucomp
movsl
je
jl
inc
mov
dec
popf
pop
push
shll
cmp
ret
sub
in
ss
add
rorb
out
mov
cmp
fisttps
jnp
fidivrl
push
push
and
pop
movsb
aad
pop
add
push
cmc
imul
lret
loopne
xor
cmpsl
mov
xchg
std
mov
in
push
test
das
or
gs
sbb
rorb
imul
out
mov
dec
dec
and
scas
jne
psubd
xor
jle
inc
dec
out
xchg
cvttps2pi
test
mov
sub
push
mov
test
pop
mov
jmp
leave
sti
outsl
add
mov
or
push
outsl
loopne
lea
data16
test
cwtl
lret
or
push
mov
sub
inc
mov
sub
mov
out
mov
ljmp
call
xchg
divb
es
jnp
cwtl
cmpsb
outsl
xchg
jp
mov
enter
ret
push
adc
sub
clc
xlat
lock
ljmp
mov
sbb
or
stos
mov
not
cmp
adc
movsb
xor
in
fisttpl
dec
fsubrp
imul
cld
aam
xor
mov
cli
lcall
mov
fs
jp
sub
or
in
push
xchg
dec
ja
mov
add
inc
jae
mov
inc
and
hlt
sub
jmp
fisubrs
arpl
hlt
int3
mov
xchg
pop
pushf
jg
xchg
push
sbb
jmp
pop
gs
jecxz
movsb
xchg
jbe
in
ret
cmpsl
aaa
push
inc
imul
mov
lcall
icebp
jge
mov
lds
ret
push
sbb
and
enter
push
mov
cltd
jbe
or
imul
or
fwait
jg
or
dec
out
imul
int3
enter
cmp
jnp
push
into
es
fs
scas
and
cs
in
test
out
scas
inc
fldl
sub
pop
aaa
aad
mov
rcrl
xchg
lcall
adc
pop
lret
movsl
dec
xchg
mov
mov
push
in
sbbb
and
stc
call
cmp
push
fisttps
out
sbb
rcl
icebp
gs
lret
dec
xchg
lret
in
add
rclb
or
cmc
fstps
movsb
jmp
cltd
adc
mov
mov
ljmp
in
insl
leave
pop
insb
pop
fldenv
adc
cmp
das
push
clc
aam
cmpsb
dec
out
sar
lock
sbb
jb
push
imul
xor
inc
fwait
loope
mov
mov
rcrl
js
mov
scas
jg
cmpsb
js
popf
popf
ja
mov
add
out
repz
in
int
icebp
outsb
xchg
daa
das
sbb
dec
sbb
inc
cltd
mov
stos
leave
roll
push
cs
xchg
stc
sbb
mov
sub
jae
push
cmp
inc
sub
addb
nop
and
shlb
push
push
xchg
cmp
push
lahf
mov
cmp
or
outsb
add
mov
daa
addr16
and
dec
cmpsl
das
es
pop
test
fcmovnb
add
iret
cmova
mov
jo
xor
addr16
std
das
loop
fnstcw
sbb
xchg
rol
ffree
dec
sub
in
xlat
pop
scas
push
mov
jae
js
inc
dec
mov
clc
pop
jnp
adc
sahf
adc
aad
fisttps
addr16
cmp
stos
pop
push
jno
mov
iret
aas
adc
test
pop
pop
into
pop
xchg
ja
stc
adc
and
arpl
xchg
dec
sbbb
inc
in
sbb
nop
push
mov
sarb
add
jp
pop
push
jmp
cmp
sbb
inc
pop
sahf
lcall
es
and
insl
xor
mov
inc
int3
sbb
lds
cmp
ret
add
mov
sub
gs
pop
es
fistps
nop
sti
and
out
sbb
inc
popa
das
out
push
cmpsl
xchg
gs
clc
add
mov
or
xorl
out
mov
mov
clc
sahf
and
test
orl
mov
popf
rcll
inc
sbb
or
push
mov
jb
fs
and
leave
add
push
push
xchg
or
xchg
or
adc
or
jge
mov
hlt
jp
xor
ret
loop
adc
jecxz
xor
mov
add
loop
jae
cltd
jo
insl
xor
xchg
test
lock
cmp
or
push
inc
stos
sahf
mov
inc
std
jae
popf
dec
ret
cmp
shl
int
ret
inc
sbb
repz
fidivs
sub
in
cmp
pushf
jecxz
lret
in
xchg
ss
sbb
stos
cmp
shlb
cld
lods
pop
pop
adc
jae
jl
jnp
loope
adc
out
sbbl
mov
adc
inc
jmp
sahf
add
sub
lret
call
sti
xchg
push
insl
lcall
fs
add
test
rorl
stos
jle
pushf
test
fst
mov
sbb
cmpsl
mov
enter
data16
aas
mov
imul
adc
lcall
sarl
mov
das
adc
clc
xchg
call
adc
int
xor
cmpsl
inc
mov
cmp
xchg
mov
data16
push
pop
cmp
mov
jl
xor
cmpsl
loop
inc
cld
adc
repz
lods
or
pop
mov
mov
jnp
in
push
fidivrl
stos
mov
pusha
rcrb
mov
xchg
test
pop
pop
pop
push
test
popl
inc
pop
mov
cmp
in
subl
int
add
lret
mov
push
popf
dec
pop
cmp
std
mov
or
cmpsl
pop
fldenv
or
cmp
mov
mov
out
aaa
test
cmp
sbb
dec
cmp
sbb
mov
ljmp
lds
leave
xchg
movsb
repz
cmpsb
and
lahf
lret
enter
cmpsb
ss
inc
fchs
rclb
dec
sub
jge
lds
add
cmpsb
jmp
jae
inc
xchg
loope
mov
cmp
sbb
mov
push
cmp
push
xor
daa
enter
imul
mov
rolb
outsl
push
lahf
pop
fnstcw
fistpl
in
aas
xchg
stc
pop
jmp
pop
dec
mov
mov
fisubrl
dec
loope
pop
mov
test
lcall
cltd
mov
push
jbe
mov
mov
add
xchg
fs
icebp
add
call
push
cwtl
xchg
filds
dec
stc
sub
ror
dec
icebp
cmpsb
lahf
and
shlb
xchg
movsb
push
es
lock
stos
stos
jae
sbb
sbb
daa
lea
aad
int
popl
ffree
jno
mov
xor
scas
sbb
cmpsl
imul
lods
xchg
ret
xchg
out
and
sarl
cmpsl
push
jl
popa
add
adc
or
rorb
jmp
jmp
aad
jbe
xor
cmp
nop
scas
into
out
jp
filds
dec
jl
cmpsb
cld
aas
cwtl
jnp
and
in
js
popaw
or
lret
lahf
lods
aaa
stos
js,pn
xor
pushf
xchg
dec
jmp
inc
xor
xor
mov
add
push
sahf
mov
outsb
push
push
icebp
clc
sub
xor
or
pusha
push
fdivl
sti
push
or
xchg
rclb
popf
and
cmc
push
or
xor
out
pop
mov
push
movsb
jle
clc
pop
pop
pop
cmp
xchg
sbb
lods
adcb
out
pop
mov
sbb
fwait
loope
enter
sub
outsl
je
movsl
hlt
clc
je
fnstsw
jle
dec
push
addr16
stc
inc
jae
inc
imul
mov
imul
lods
xchg
aaa
bound
pop
loope
call
sub
mov
stc
lcall
out
call
sbb
rcrb
sub
push
cmc
leave
or
mov
push
roll
mov
fsubl
aam
out
das
inc
xchg
xchg
repz
push
aas
jnp
mov
xor
icebp
pop
mov
mov
lahf
fstpl
mov
push
imul
inc
stc
xchg
cmpsb
fcompl
hlt
lea
inc
push
pop
imul
aam
sti
jne
xor
pop
jle
and
push
inc
jmp
ljmp
jmp
leave
dec
add
adc
dec
scas
push
in
cmpsl
ret
sahf
pop
test
pop
outsl
inc
lret
fwait
rcr
pop
movsl
sbb
jp
sub
adc
js
in
stos
cmp
and
jnp
and
and
movsl
push
ret
jl
cmp
or
jae
addr16
je
pop
stos
cmpsb
lcall
xchg
jo
test
push
mov
xchg
xchg
das
lock
pop
jmp
nop
mov
xor
jbe
adc
rclb
and
cltd
sub
sub
push
inc
xchg
stc
lret
xlat
sbb
push
xor
pushf
mov
mov
subl
push
imul
sub
rolb
fidivrl
xchg
or
xchg
cs
test
insl
jp
mov
scas
mov
sarb
sub
jp
lahf
loopne
movsb
inc
fs
clc
dec
stc
repnz
add
mov
andl
sub
and
xlat
pop
cli
pop
lods
add
mov
in
mov
inc
mov
stos
test
out
mov
mov
cmp
popf
mov
test
hlt
inc
push
mov
js
out
jle
inc
pop
add
push
shlb
push
mov
sar
cmp
and
pop
xchg
mov
ret
jns
xchg
ret
xchg
fdiv
test
sub
in
movsw
jge
lahf
lods
mov
sbb
icebp
sar
lret
lahf
push
xchg
lcall
jl
imul
fs
js
cli
xor
push
popa
dec
fstps
cmpsb
push
jbe
jno
inc
inc
sbb
das
fdivl
pop
and
dec
int3
mov
push
dec
clc
lret
sbb
add
fsubr
jge
mov
mov
stos
jae
ret
mov
lods
jle
out
das
and
dec
sub
mov
mov
and
adc
loop
pop
fisttpl
push
or
mov
xor
xor
or
les
adc
mov
cmp
cmpsl
add
add
int
sub
ret
stos
sbb
nop
push
jmp
leave
in
es
xchg
pop
jnp
arpl
lcall
pop
xor
inc
fnsave
mov
out
mov
stos
aas
jb
enter
lret
mov
mov
repnz
cmp
lahf
ss
lods
mov
xchg
iret
or
imul
adc
mov
pop
outsl
data16
or
push
lret
addr16
sbb
daa
xor
ja
ja
mov
cmp
pop
cmp
std
sub
call
fsubl
jl
pop
mov
les
pop
inc
daa
xor
xor
call
push
jp
icebp
fimull
je
adc
xchg
inc
xchg
inc
cmp
repz
jo
dec
cmpb
nop
mov
jns
xchg
sbb
das
sbb
lcall
leave
in
aam
dec
icebp
lods
push
sub
fnstcw
dec
repz
insl
and
rcrb
cmpsb
or
xor
mov
mov
xlat
in
stc
js
hlt
nop
aaa
mov
rcr
sub
push
xchg
loope
sbb
popw
sbb
jecxz
jne
fsts
pop
outsl
insl
inc
stos
cmp
into
mov
push
mov
roll
inc
inc
into
popf
adc
in
add
jb
scas
mov
sub
out
scas
lret
pop
adc
loop
mov
fisubl
jmp
aam
xor
push
jg
pop
imul
rcr
cmp
cmpsb
jbe
lds
aam
cmc
sarl
xor
lahf
cmp
jmp
movsb
sub
fidivrs
stos
fcomps
int3
pop
jbe
imulb
loopne
setp
lcall
mov
decl
lret
cltd
test
xorb
nop
in
movsb
sub
insb
push
in
clc
shll
out
out
or
daa
in
aad
test
inc
push
jmp
adc
xlat
jg
xlat
sub
movsb
lret
push
imul
fists
xchg
int3
inc
inc
pop
mov
mov
lahf
pop
sbb
iret
stos
imul
pop
insl
pop
push
mov
movsb
lahf
inc
and
fucom
add
movsl
leave
mov
lods
lds
xchg
jp
std
addr16
mov
pop
mov
jp
xor
data16
dec
jl
cltd
lahf
push
pop
add
out
stc
mov
sub
outsb
lods
jp
mov
mov
lea
and
clc
cmpsb
mov
or
fcompl
sbb
arpl
stc
or
or
push
or
push
push
xor
sbb
pop
fildl
cmp
sbb
cmp
ljmp
mov
movsb
enter
je
sbb
lods
jnp
punpckhdq
fucomp
imul
dec
jnp
mov
cmp
fsubrs
push
dec
adc
call
sub
push
lea
popf
mov
sub
std
mov
in
iret
out
popf
popf
lret
cli
dec
sub
push
xor
or
scas
and
dec
jno
dec
out
jl
jbe
mov
jb
or
xor
adc
dec
adc
aaa
pop
dec
in
dec
call
call
fdivs
aad
mov
out
cmp
ljmp
pushf
mov
dec
mov
ffree
lds
push
and
and
test
sub
sub
rclb
fcom
jae
aas
psubusw
js
cs
xchg
movsb
ljmp
leave
jmp
sbb
scas
xchg
out
gs
loopne
imul
sti
push
test
jecxz
mov
repz
push
in
inc
in
insl
xor
xchg
fucomi
imul
or
stos
icebp
dec
bnd
cmpsl
adc
jg
and
repz
test
and
lds
arpl
cmp
gs
loopne
sub
mov
arpl
outsb
fsubp
loop
sahf
cmc
or
xor
cmpsl
push
orb
pop
cmc
mov
icebp
mov
cmp
insl
sbbl
in
add
add
mov
in
dec
mov
imul
xchg
ret
shl
push
es
test
clc
arpl
test
sub
xor
mov
adc
pop
lahf
jmp
outsb
pop
dec
mov
push
sbb
mov
rolb
fisubs
aad
rol
add
out
in
loop,pt
dec
out
jp
aas
sub
nop
lds
loope
cmp
push
lret
out
data16
jl
pop
and
pushf
fsubr
out
les
dec
inc
dec
adc
xor
push
or
sbb
movsl
mov
xchg
or
sarb
ljmp
dec
loop
stos
sub
out
adc
mov
cmp
dec
pop
iret
leave
push
imul
mov
cs
dec
outsl
xchg
std
cmpsb
imul
leave
daa
out
data16
add
sahf
ret
jae
pushf
jp
fldt
adc
fnstcw
pop
or
push
jbe
movsl
je
scas
dec
cltd
sub
sbb
cmp
and
pushf
push
scas
icebp
sub
jo
dec
cmp
push
movsl
dec
pop
jg
leave
movsb
pusha
cmc
in
xchg
popa
std
lods
mov
jo
aaa
push
mov
xor
push
sbb
sbb
mov
es
call
mov
int
sbb
push
cli
sub
jmp
sub
mov
sub
int3
dec
out
jns
cwtl
out
shlb
jno
outsb
pop
lcall
cmp
fisubl
aaa
mov
adc
outsb
push
lret
push
adc
sbbl
inc
inc
std
push
sbb
pop
mov
in
rcll
mov
loop
and
mov
fsubrl
or
ds
stc
sub
lock
cmp
push
sbbl
dec
scas
outsl
add
dec
jmp
dec
sub
int3
jle
addr16
in
pushf
jecxz
push
in
sbb
push
cmpsb
mov
dec
mov
dec
addr16
inc
into
mov
sub
subb
dec
and
xchg
test
movsb
out
insb
sarl
div
jecxz
je
jl
cwtl
push
out
dec
push
inc
lret
mov
leave
jae
insl
xor
fsts
nop
dec
mov
sbbb
cmc
ficoms
inc
sub
ret
fdivl
scas
jno
mov
sbb
int3
pop
jge
jmp
mov
test
leave
jo,pn
jmp
push
push
adc
and
pop
mov
xchg
in
mov
dec
dec
cld
inc
lahf
fmulp
jmp
arpl
and
aas
inc
iret
mov
jnp
jo
sarl
jo
mov
mov
daa
add
pop
int
xchg
lcall
repnz
mov
and
or
mov
pop
lods
scas
cmp
cmp
sbb
mov
or
push
mov
out
pop
or
push
lods
jbe
mov
ret
loop
das
xchg
es
dec
push
pop
and
pop
lret
test
jno
sub
sub
inc
arpl
mov
mov
jmp
int3
mov
mov
cs
dec
loopne
mov
mov
push
push
in
ret
stos
mov
ds
out
cltd
sbb
fcomps
dec
jmp
and
lds
fsts
xor
cmp
cmp
aam
data16
leave
test
aad
push
xchg
aam
sbb
push
stos
insb
jae
popa
int
in
jp
lcall
jae
or
adc
mov
leave
out
push
push
scas
inc
test
fmulp
dec
ljmp
xchg
ja
dec
dec
pop
mov
int3
subb
mov
out
sbb
call
pop
mov
mov
and
adc
sar
adc
sub
ret
imul
into
cwtl
ja
pop
aad
sub
or
pusha
icebp
and
and
rcr
out
lods
push
mov
or
xor
es
fcoml
xchg
sbb
xchg
adc
mov
mov
repz
jmp
notl
jno
or
mov
stos
out
jbe
jne
mov
out
lods
add
xlat
in
call
push
fiadds
jo
in
pop
fsubrl
loope
xchg
aas
out
xor
subl
sub
inc
test
out
mov
mov
int
mov
loopne
mov
cmp
cltd
adc
arpl
lcall
aam
xchg
sbb
out
dec
mov
sbb
adc
imul
lahf
jecxz
aaa
and
cltd
addb
lret
or
mov
aam
mov
stos
nop
mov
cwtl
inc
or
xchg
mov
into
fidivl
pop
shrb
mov
pushf
pop
sub
jmp
xor
push
fiadds
xor
nop
jl
jge
jnp
adc
cli
jp
roll
call
cli
stc
and
iret
cmp
jo
stc
inc
sbb
out
cmc
out
out
sub
cli
push
sub
pop
xor
aam
or
cmpsl
xchg
in
ss
cmpl
fnstcw
and
in
inc
lret
std
in
cmpsl
sub
mov
mov
xchg
push
cli
loopne
pop
inc
sub
mov
fsubrl
mov
orb
jmp
jae
cltd
xor
pusha
nop
push
or
mov
out
push
cmp
fucompp
fnsave
dec
mov
cli
adc
xor
movsl
bound
std
sahf
jmp
mov
xchg
popa
call
js
or
adc
and
xchg
adc
test
test
pop
push
or
push
mov
lcall
jbe
rcrl
jnp
insl
sahf
jo
adc
or
call
loopne
in
lock
xchg
je
clc
or
mov
repnz
cmp
out
add
xor
test
mov
std
sti
push
out
mov
mov
call
test
sbb
cs
mov
lahf
test
and
mov
stos
cmpsl
out
dec
test
xor
std
arpl
sbb
ljmp
fidivs
lods
cltd
enter
rclb
cmp
bound
add
sub
pop
daa
sarb
loopne
mov
jg
mov
xchg
xchg
lds
xchg
sbb
mov
out
pushf
lret
mov
jp
int
cld
lahf
popf
jmp
adc
es
test
jp
adc
sub
aad
cmp
enter
cltd
in
sbb
mov
xor
jle
lret
fwait
jmp
stos
jnp
das
push
test
adc
out
clc
mov
jbe
inc
scas
push
lea
xchg
and
fstps
fwait
sub
jecxz
icebp
pushf
jmp
aaa
idivb
imul
jmp
insb
xor
inc
mov
jecxz
dec
jmp
ja
cmp
sbb
pop
mov
fistl
cli
sti
and
add
xlat
pushf
mov
out
int3
cmpsb
or
stc
outsb
add
enter
outsl
addr16
pop
shr
push
push
push
pushf
pushf
cwtl
mov
cmovp
test
mov
fdivrl
cmp
mov
lahf
dec
daa
scas
lods
call
out
inc
cmp
mov
leave
notb
and
fisubrl
adc
dec
cmpsb
jecxz
push
xchg
cmc
filds
push
dec
push
dec
ja
pop
jbe
xchg
xor
dec
cmp
sahf
jne
cmpsb
jb
cmp
mov
ret
mov
mov
ss
jle
mov
loopne
in
les
call
or
mov
jbe
jp
lret
pop
add
ss
addr16
je
movsb
scas
jne
pop
stc
sbb
jnp
enter
pop
fsts
test
jmp
dec
lea
pop
ljmp
gs
in
mov
shll
mov
jmp
leave
lock
filds
stc
cmpsb
jae
mov
ret
faddl
inc
cli
insb
push
xor
sbb
aaa
cmp
lahf
jmp
mov
xchg
lea
adc
lahf
mov
out
loopne
dec
lods
push
aaa
or
jl
aad
lods
push
jae
push
call
insb
push
jns
jp
mov
lcall
cmpsb
roll
sub
imul
inc
in
movsl
inc
fimuls
sub
mov
mov
sub
sub
fld
ljmp
xchg
add
cld
jnp
jmp
sbb
rcll
xor
sub
das
sub
cwtl
std
cmpsb
loope
nop
lock
addr16
sti
sub
je
outsb
xor
or
push
inc
insb
sbb
jbe
std
rcrl
dec
sti
mov
out
stos
insb
clc
mov
push
pop
imul
pop
and
or
jbe
movsl
mov
sbb
mov
out
add
pop
sbb
jae
mov
jmp
add
jo
mov
and
es
mov
stc
sbb
xor
cmpsl
inc
pop
pop
or
cmp
loope
xor
mov
jns
adc
adc
mov
mov
enter
lcall
prefetch
or
std
xor
and
or
mov
jne
addr16
and
jmp
sbb
pusha
into
es
xchg
dec
adc
mov
ja
mov
subb
punpcklbw
aaa
cmpsb
dec
mov
sub
sub
test
pop
pop
nop
adc
ss
sub
xlat
adc
sbb
les
daa
sbb
jo
cmc
les
enter
scas
cld
cwtl
or
addl
xchg
mov
mov
sub
mov
xor
jb
mov
adcb
dec
push
stos
popa
fbstp
cmpsl
and
push
cmp
stos
out
push
cmp
rcl
aaa
lds
inc
aas
push
inc
xchg
shlb
xchg
cmp
pop
aad
cmp
loopne
mov
mov
jge
lcall
cmp
and
in
push
push
dec
sub
add
xchg
lcall
cmpsb
repnz
enter
out
lret
das
es
scas
xchg
push
mov
fucom
lods
stos
aaa
jne
push
ret
push
sub
cmp
je
or
cmp
out
xchg
icebp
sub
and
xor
fmull
and
outsl
mov
fs
pop
mov
ror
inc
add
mov
cmpsb
push
stc
jnp
push
jg
xchg
sub
nopl
ljmp
test
or
pop
push
leave
iret
inc
ret
sub
add
lock
repz
jge
shll
int3
xchg
mov
pop
cmpsl
pop
dec
rol
adc
xchg
hlt
cmp
loop
jbe
inc
adc
jne
ret
outsl
int
in
ds
loopne
cld
cmpsl
fldenv
mov
scas
sub
cmpsl
hlt
lcall
ja
mov
loope
push
inc
cwtl
jge
notb
repnz
loop
scas
pop
mov
enter
xor
push
push
cmpps
pop
in
scas
repz
shrb
or
xor
test
and
cmp
jb
or
sbb
fldcw
out
loopne
ret
shll
out
and
sbb
jbe
invd
lods
fidivs
xor
test
aas
std
adc
jmp
leave
out
mov
mov
sub
shrl
push
out
pop
lahf
in
test
out
icebp
hlt
pop
subl
in
mov
sbb
push
loope
lcall
lcall
clc
ss
jp
mov
lods
pop
inc
xchg
shlb
or
es
xor
cmp
ret
mov
sbb
mov
insl
lcall
mov
fs
cwtl
adc
pop
and
subb
jge
jmp
xlat
in
pop
add
pusha
sub
scas
loopne
adc
xchg
cwtl
pop
dec
sbb
push
in
sub
stos
xchg
addr16
or
xor
popf
jmp
inc
packssdw
dec
pop
out
xchg
in
mov
dec
xor
psllw
inc
leave
adc
into
push
pusha
addr16
mov
pop
mov
xchg
das
jbe
push
jo
push
fstpt
test
fsubr
ss
and
mov
or
jnp
xchg
je
enter
scas
je
scas
dec
sub
mov
jbe
lock
sub
test
push
dec
rorb
imul
fisttpl
scas
xor
out
add
add
sahf
out
push
mov
pop
loop
int3
jl
ja
xchg
and
sub
fidivrl
mov
sub
sub
imul
ret
insb
push
in
cmp
out
leave
jo
in
les
or
mov
mov
out
push
bnd
lret
movsb
std
test
mov
out
jl
mov
mov
js
dec
jae
andb
cmpb
mov
lcall
fwait
leave
repz
int
sub
clc
inc
inc
mov
pop
vmovaps
xchg
pop
xchg
mov
pushl
mov
sub
js
cmpsb
xor
in
mov
adc
scas
adc
out
int
cli
sub
or
fwait
mov
mov
or
nop
pop
mov
ss
lock
test
lcall
or
cmpsb
stc
jne
xchg
dec
das
mov
push
out
shr
pop
inc
shr
sub
dec
repz
jbe
dec
test
xchg
int3
pop
or
orb
adc
pop
addr16
imul
sahf
call
jl
rorb
lret
subl
in
or
ficoml
aaa
mov
lds
mov
imul
sbb
in
pop
jo
daa
mov
mov
jmp
mov
and
inc
es
jo
cmp
inc
ror
jle
push
out
js
js
or
push
adc
int3
enter
sub
int3
mov
cwtl
add
jnp
dec
imul
subb
adc
sbb
pop
lock
leave
xchg
jo
push
jl
add
jp
rcrb
pop
inc
testb
sbb
or
dec
inc
push
addr16
mov
les
mov
cmpsl
mov
adc
pop
out
xor
push
mov
jmp
int3
dec
cltd
js
mov
or
jmp
cwtl
fsubrl
mov
sub
inc
call
mov
add
aaa
pop
ret
xor
inc
js
add
out
add
out
in
mov
add
arpl
and
ficomps
rorl
jp
jo
fdivrl
jge
clc
mov
adc
mov
loop
stc
xor
icebp
xchg
lock
inc
clc
xchg
into
and
into
pop
ds
nop
and
negb
std
shrl
addr16
scas
idivb
add
sarb
add
or
iret
sahf
sub
adc
popa
stos
lock
jnp
call
call
inc
jmp
mov
pop
int3
jle
mov
aad
pushf
nop
lahf
mov
fdiv
imul
shll
push
int3
lea
lahf
cmp
xchg
cmp
sub
sbb
loopne
mov
push
jo
mov
fnsave
in
clc
dec
dec
cwtl
lock
movsb
add
pop
sahf
push
lods
fisubrs
pop
mov
sarb
es
iret
hlt
out
and
and
mov
jnp
stos
pop
insl
in
arpl
ljmp
leave
adc
loop
jo
ja
dec
hlt
iret
jge
push
rorl
xor
fisubrs
add
sbb
scas
insb
pop
sbb
mov
mov
shlb
test
ficoml
xlat
imul
mov
inc
sub
cltd
fdivr
mov
pushf
pop
push
sub
push
dec
nop
adc
js
mov
jle
lods
mov
sbbb
and
and
nop
dec
pop
les
or
lcall
jnp
dec
cmp
jle
sbb
lds
adcl
add
dec
call
or
in
pop
leave
or
mov
stos
imul
and
test
add
sar
and
sub
es
jl
into
jle
sub
je
cld
stos
dec
or
pop
push
jmp
push
call
cmp
cs
mov
cmp
or
push
cltd
or
sbb
xor
push
es
fstps
imul
mov
jp
test
enter
pop
push
int
leave
pop
dec
outsl
mov
mov
jbe
aas
cmpsl
push
cmpsl
loop,pt
jnp
test
jmp
jbe
mov
jmp
pop
pop
inc
cmc
sbb
inc
out
lret
cwtl
jns
lret
sahf
fmuls
and
enter
jno
test
shlb
dec
sbb
mov
movsb
clc
dec
arpl
push
dec
or
lods
cmc
pop
pusha
gs
setae
ds
stc
dec
cmp
sub
icebp
add
mov
inc
leave
movsl
repnz
push
jo
dec
adc
lcall
rclb
out
push
outsl
bound
cmp
cmpsl
repz
aad
jnp
pop
clc
int3
or
push
sbb
dec
fmull
xor
jmp
lods
mov
mov
xor
or
sub
dec
dec
dec
jns
popf
push
mov
fcomps
in
add
pushl
pop
mov
sbb
xor
xor
gs
mov
movsb
out
pop
sbb
test
lods
add
loopne
xchg
pop
fcmovb
pop
push
pop
xchg
push
mov
scas
jnp
xchg
cmp
addb
and
and
loop
mov
insl
or
pusha
or
jge
stos
cmpsb
cmc
push
or
push
in
enter
test
sub
push
in
rclb
mov
lea
ljmp
cmp
mov
sub
jnp
pop
fcmovne
lahf
lods
mov
in
repz
dec
pop
bts
xor
mov
ret
mov
and
daa
sub
outsl
sbb
pop
insl
jnp
xor
call
mov
jnp
lcall
inc
adc
scas
dec
popa
cmpsb
roll
add
clc
jbe
test
xchg
mov
in
sbb
dec
ja
push
pop
out
test
adc
mov
movsb
leave
mov
and
and
out
test
push
dec
call
sub
add
andb
dec
mov
cmc
jle
add
mov
jo
stos
arpl
stos
cmpsl
dec
int3
jae
call
test
mov
lret
jp
arpl
in
ja
in
mov
push
enter
int3
dec
in
jle
les
in
stc
pop
mov
call
mov
nop
in
xor
pop
loopne
je
stos
fidivrl
mov
jge
push
adc
or
jg
inc
stc
pop
pop
out
out
cltd
push
inc
sub
out
dec
cmp
inc
frstor
sub
sbb
push
dec
sbb
test
lahf
xchg
push
inc
mov
sti
lds
movsb
shl
stos
pushf
stos
das
mov
push
sub
add
sbb
bound
xor
mov
stc
into
sub
lmsw
and
inc
loope
jle
sahf
sbb
adc
sub
jmp
inc
lea
mov
jne
dec
lea
xchg
push
fisubrs
data16
push
outsl
jns
mov
fs
je
sub
xchg
cmp
xchg
cmp
lahf
sbb
xchg
inc
mov
adc
jbe
jbe
cmp
dec
mov
notl
in
stc
loopne
data16
xchg
sti
imul
addr16
lret
mov
es
xchg
fmull
jns
sbb
sti
enter
xchg
or
clc
fstpl
movsb
xchg
cmp
adc
cmp
pusha
fisubl
adc
push
xor
int3
leave
rorb
ret
lea
mov
fimull
adc
mov
out
jae
push
cmpsb
ficoms
pop
mov
aam
cmp
sub
lahf
dec
fmull
pop
int3
cmp
test
jbe
les
shrb
dec
out
lret
sub
in
movsb
fwait
push
dec
cli
lahf
pop
rcrl
add
lcall
test
ret
insb
shlb
or
mov
push
lret
jbe
mov
dec
enter
push
inc
cmp
cltd
mov
jbe
jecxz
daa
insb
push
ljmp
lock
iret
cmp
out
dec
lods
mov
push
jb
xor
sub
cld
xor
idivl
pop
inc
jmp
dec
mov
add
jbe
push
add
lock
adc
sub
scas
push
frstor
pop
xchg
pop
xor
movsl
test
insl
jae
nop
adc
ret
cmpsb
lcall
aad
and
mov
pop
mov
ret
sub
ljmp
aad
outsb
mov
icebp
mov
or
lret
lahf
imull
sub
ret
lahf
xor
imul
xchg
call
jecxz
or
pop
sub
imulb
imul
fs
cmpsb
mov
dec
cmpsl
rclb
mul
stc
movsl
xlat
insl
jle
mov
sbb
lds
fisubs
icebp
or
inc
xlat
loop
ja
dec
sbb
cmp
mov
mov
into
xchg
jo
jmp
adc
mov
xchg
in
fwait
insb
push
adc
lods
ljmp
jnp
pop
dec
call
ficoml
inc
pop
sub
pop
std
or
jge
and
adc
push
stc
push
xor
mov
sti
xchg
xchg
mov
sbb
flds
sub
jg
cmp
mov
pop
mov
mov
std
sub
adc
mov
mov
add
aaa
popa
fdivs
dec
pop
dec
pop
mov
cwtl
sub
addr16
mov
jno
inc
and
lret
xor
rclb
mov
outsl
es
pop
pop
and
and
in
out
test
lret
cli
lock
sub
sbb
inc
mov
lods
jl
mov
push
mov
add
dec
js
jbe
cmp
dec
mov
mov
fildll
shrl
lods
and
int3
cmp
pop
test
les
push
fdivrs
jmp
xlat
loop
pop
lods
scas
jns
call
pusha
in
mov
lock
nop
inc
and
negl
add
dec
rcr
mov
push
pop
push
sub
imul
stos
sahf
insl
ss
jecxz
pop
pusha
mov
mov
sbb
pop
pop
jae
cmp
dec
mov
jnp
loope
jae
pop
cmp
sub
cmp
inc
sbb
cmpsb
out
add
lds
and
fsubrs
enter
popf
rorl
dec
add
dec
test
xchg
dec
fdivl
scas
clc
aaa
jecxz
sub
and
iret
mov
enter
and
call
sti
pop
xlat
adc
inc
and
or
bound
cmpsb
push
xchg
mov
aad
popf
or
fsubrl
es
and
cmp
mov
sbb
xlat
fdivrs
sub
mov
fmull
rcr
dec
sbb
int
imul
xor
jnp
aaa
mov
pop
out
sbb
pushf
mov
in
rcll
cmp
add
mov
and
xchg
loopne
and
movsb
sbbl
add
jl
inc
mov
ljmp
loop
xor
out
in
jecxz
xchg
das
notl
cmc
psubusb
in
rclb
cld
lods
pushf
pop
jno
sti
sub
xchg
les
imul
gs
sahf
push
xchg
in
test
xchg
cwtl
jbe
pop
add
mov
mov
mov
push
mov
addr16
lret
xorb
jne
pop
outsl
sub
inc
inc
push
lods
aam
push
lock
shll
sub
int
mov
in
stos
and
inc
sub
stc
fisubs
xor
dec
jnp
lahf
mov
fsubl
in
lock
movsb
test
pop
sbb
xchg
mov
gs
test
rcrb
jmp
test
mov
cmpsb
sbb
fldl
in
in
jnp
dec
push
ljmp
pusha
test
inc
aad
lret
and
psubb
ret
cmp
cltd
jmp
std
cmc
pop
jae
cmp
jbe
cmp
lret
push
add
dec
dec
sub
cmp
movd
arpl
adc
cmp
out
jb
loop
mov
jae
cltd
xchg
jae
out
adc
jle
cmc
nop
sbb
out
inc
in
and
dec
sbb
cwtl
ljmp
nop
pop
mov
imul
mov
jae
or
fwait
repz
adc
mov
add
xor
add
iret
scas
pop
pop
cli
and
pop
and
or
push
push
dec
pop
mov
lret
push
sub
sbb
dec
lahf
cwtl
mov
out
pop
std
test
ror
mov
sbb
test
sub
es
aad
inc
loope
cld
cmp
mov
mov
imul
sub
lret
push
sbb
pop
pop
aas
les
lods
sub
cltd
xchg
movsl
inc
jbe
push
insb
lcall
or
std
clc
jp
std
dec
sub
dec
leave
push
fidivl
movsb
stos
cmpsl
mov
out
adc
leave
test
test
jnp
and
lds
pop
leave
mov
xchg
enter
aas
lret
push
mov
rol
or
stos
lods
in
cs
mov
vunpckhpd
gs
mov
pop
fstps
das
mov
push
add
xchg
arpl
cmp
lea
jg
ret
out
jl
adc
fildl
mov
cmp
outsl
jge
shr
in
and
in
xor
mov
sbb
rol
cld
lret
dec
cwtl
push
xor
test
lcall
fiaddl
adc
jo
icebp
dec
mov
leave
adc
add
jae
fldt
les
es
mov
pop
ljmp
adc
pop
jmp
aaa
inc
xchg
dec
jae
jbe
xchg
repnz
idivb
mov
jge
fisubrl
cltd
pop
or
enter
lret
push
pop
cwtl
clc
lock
cmp
mov
dec
in
cmpsb
add
insl
and
mov
dec
sahf
sub
mov
loope
add
mov
and
sarl
or
icebp
jb
in
lret
rcrb
mov
pop
stos
fisubl
sbb
add
adc
mov
nop
mov
sbb
jb
xchg
jb
mov
mov
out
inc
ret
or
mov
jmp
sub
pop
lcall
je
push
sub
mov
out
fsubrl
int
stos
iret
add
dec
sub
jbe
in
mov
xor
xchg
cmpsl
loop
ss
mov
dec
imul
popa
test
mov
mov
leave
jl
inc
mov
div
fisttpl
mov
pusha
nop
mov
sbb
outsb
pop
push
pop
pop
std
mov
mov
push
leave
or
adc
push
pushf
mov
xchg
stc
scas
es
xor
cmp
cmp
test
jp
lret
int3
cs
and
pop
pop
mov
test
test
or
in
imul
jmp
or
jnp
out
ds
jp
cwtl
frstor
imul
test
xchg
data16
ja
sub
xchg
outsb
mov
jbe
pop
je
push
cs
pop
mov
lods
add
icebp
sbb
inc
into
pusha
in
in
pop
mov
sub
imul
and
mov
pop
pop
push
pop
mov
xchg
addr16
aaa
mov
push
scas
icebp
mov
cmp
sub
aas
sbb
dec
or
push
sub
movsb
mov
leave
sub
jp
scas
xchg
movsl
jmp
mov
cmp
adc
mov
dec
jmp
stos
dec
mov
out
push
icebp
jae
es
mov
mov
pop
dec
dec
test
sub
jmp
fmull
cmpsl
rol
and
pop
cs
in
ss
rcr
sub
and
dec
lock
lret
aaa
outsl
test
sub
addr16
push
ds
test
pop
int3
ret
movsl
repnz
jge
cli
ret
cmpl
adc
dec
test
or
push
fwait
inc
xchg
testl
mov
lret
push
sbb
xor
je
cmpsl
cwtl
jae
lcall
lahf
adc
jl
mov
sub
mov
stc
or
pop
pop
fstpl
mov
ficompl
out
movsb
imul
call
cltd
sub
add
enter
pop
movsb
xor
imul
cmp
les
lahf
or
mov
mov
sub
sub
mov
push
out
test
movsb
or
stos
and
inc
cs
pop
or
stos
pop
cltd
fsubs
mov
xor
rcll
and
sub
scas
jmp
push
mov
lds
and
push
push
push
sub
jl
int
sub
or
popf
std
mov
push
js
fsubr
lret
sub
and
jp
in
or
lea
mov
arpl
lods
jecxz
in
and
and
or
enter
lods
mov
sti
sub
dec
in
stos
imul
inc
ljmp
inc
in
popa
add
leave
mov
or
jmp
dec
lret
call
push
movsl
leave
movsb
ljmp
add
shr
sub
lods
lret
shrl
lret
fld
push
enter
lods
test
inc
lret
add
scas
leave
scas
ljmp
lret
cmpsl
sub
in
bound
in
push
or
ljmp
inc
mov
lret
in
test
push
loop
xchg
mov
mov
add
pop
popa
insb
test
lods
rorl
iret
pushf
inc
fcomp
xchg
push
sub
ljmp
out
xchg
sub
ljmp
dec
in
scas
adcb
mov
shll
mov
jmp
in
ljmp
loopne
fld
pop
add
jecxz
in
sub
in
in
push
popf
outsl
rcrl
lret
dec
sub
ljmp
fldenv
lret
in
push
ret
leave
ret
lods
inc
rorl
lret
dec
ficomps
cmpsb
gs
inc
leave
sub
lods
loope
ror
in
sub
lret
jmp
in
xchg
lods
inc
roll
paddsb
lea
leave
mov
mov
es
test
in
flds
lods
outsl
push
test
ljmp
dec
pop
movsl
mov
inc
ljmp
pop
mov
jmp
mov
and
out
movsl
fs
inc
leave
ljmp
out
in
out
int
int3
leave
sub
imul
leave
jecxz
ret
shrl
lret
mov
or
sub
jmp
stos
rorl
lret
xchg
in
mov
and
and
ret
shrl
lret
or
stos
ljmp
call
out
push
leave
and
loop
and
loopne
out
in
mov
pop
jmp
sub
push
stos
leave
ljmp
cmpsb
shll
addr16
inc
pop
sub
leave
push
pop
inc
lods
movsb
roll
mov
mov
dec
pop
pop
push
cmp
sub
jmp
lret
movsb
loop
fcom
push
mov
pop
inc
pop
repnz
inc
ljmp
icebp
in
xchg
adcl
dec
out
xchg
pop
push
push
mov
test
pop
enter
ret
cmp
mov
outsb
movsb
pop
insl
mov
lret
call
pop
movsl
push
movsb
leave
inc
ljmp
mov
pop
in
loopne
push
leave
add
lds
je
test
lods
leave
ljmp
add
and
push
inc
leave
out
out
and
in
or
insb
leave
lods
ljmp
sub
leave
inc
ljmp
call
push
push
dec
leave
dec
ljmp
sub
movsb
push
gs
es
pop
dec
leave
stos
ljmp
pop
fcomps
out
rcr
outsb
in
sahf
sti
cld
iret
cltd
sbb
ds
jns
in
mov
add
xchg
mov
mov
mov
mov
rcr
mov
cs
popa
es
out
sub
ds
outsb
dec
insl
int3
pop
pmaxub
enter
fistl
xchg
in
scas
or
faddl
stos
decb
xor
insb
test
imul
iret
test
lock
out
repnz
dec
jnp
jle
out
mov
pop
push
fs
enter
rclb
xchg
into
das
add
and
pop
push
cs
shl
add
pushf
scas
dec
xor
mov
or
ds
inc
lock
dec
lcall
pop
cwtl
or
test
xchg
pusha
pop
in
scas
push
lods
int
movsb
lret
call
test
jno
popf
sub
orl
aam
mov
iret
push
mov
lcall
leave
repnz
loopne
insb
iret
and
mov
xor
dec
cmpb
dec
dec
sahf
sub
int3
or
push
ds
mov
pop
test
ficomps
lret
dec
or
sub
out
ds
jl
int3
and
jns
fadds
xchg
mov
mov
add
out
dec
cs
push
hlt
scas
loopne
fmulp
in
out
ja
sbb
push
mov
stos
in
cmpsb
or
rorl
lahf
add
out
fisubs
pushf
iret
add
idivb
int
ret
or
dec
inc
std
xchg
loope
sub
push
enter
mov
push
lods
fidivs
adc
lods
mov
shr
cld
std
pop
dec
out
sti
adc
les
incl
int
fstl
jmp
sbb
pop
loopne
imul
ret
pop
lock
mov
jns
cmp
in
pop
inc
jno
fisttps
jbe
mov
xchg
es
xchg
mov
xor
lds
ljmp
in
xor
stc
popa
stc
cmc
sbb
sub
ljmp
inc
lods
or
cmp
adcb
or
ret
dec
nop
dec
mov
or
lret
in
jecxz
sub
sbb
int
out
in
pop
cs
stos
ljmp
stc
xchg
repnz
mov
adc
fmull
outsb
pop
stos
jmp
or
in
loopne
push
repnz
jmp
dec
mov
dec
pop
popa
jmp
sub
mov
pop
dec
dec
or
aam
or
ret
pushl
jg
mov
lea
mov
mov
ljmp
mov
ljmp
fisubrs
test
cld
je
std
jmp
gs
rolb
inc
or
minps
gs
mov
cmp
dec
xor
and
dec
std
jne
lret
dec
je
lock
test
push
lods
dec
lods
in
mov
pushf
push
mov
push
insl
inc
adc
jae
loop
mov
mov
xor
test
out
shl
aaa
or
push
add
dec
xor
pop
pop
hlt
inc
cli
popa
insb
scas
in
das
je
mov
sub
cmc
sub
jg
dec
fdivrp
or
test
loop
pushf
aas
fdivrs
mov
push
push
fistps
enter
cmp
ljmp
gs
rolb
or
shll
cmp
lods
cmpsl
jo
sub
gs
push
xchg
push
fdivrp
lcall
sahf
sbb
jecxz
mov
subl
test
mov
or
jne
sbb
fs
mov
xchg
fcompl
andb
fcoms
xchg
pop
sahf
ficompl
scas
iret
lods
mov
lahf
stos
adc
scas
pop
jl
mov
scas
xlat
push
lods
push
test
jb
mov
adc
leave
loopne
int
rep
aas
loope
mov
pop
xor
imul
or
mov
cld
shrl
scas
lock
inc
imul
bound
test
stc
sub
popa
in
xchg
popf
stos
ljmp
lcall
jle
test
jmp
pop
sbb
or
fldenv
sbb
loopne
lock
cmpsl
loopne
mov
pop
pop
int3
jns
and
call
sti
bound
adc
int
mov
push
sub
pusha
insb
mov
insb
jmp
out
outsb
leave
fstl
leave
add
dec
in
or
xor
inc
movsb
mov
enter
jmp
out
mov
dec
or
aam
enter
push
loop
lods
cltd
outsb
stos
rcrl
pop
out
ljmp
aaa
mov
movsb
add
cmp
pop
mov
pop
jge
dec
sbb
imul
popf
add
loopne
loop
cs
jae
sarb
sahf
in
adc
ret
push
push
sbb
cmpb
jecxz
arpl
ret
mov
push
and
fisubl
jmp
call
push
insl
cmp
insb
out
das
xlat
mov
cs
out
pop
pop
mov
stc
or
ror
inc
jp
fsubs
xchg
inc
push
lods
fisubrs
pop
pop
push
les
insl
lahf
inc
int
lods
add
cs
inc
push
test
aam
ja
adc
ret
sub
in
or
add
and
orl
icebp
lcall
js
push
fdivrs
imul
dec
push
lods
js
dec
mov
inc
in
cs
sub
shr
outsb
mov
loop
mov
sbb
mov
out
cmp
and
in
mov
jecxz
call
out
mov
fisttps
sbb
jo
inc
orl
pop
loope
inc
jecxz
sub
shl
dec
push
and
lock
fcmove
lahf
out
lret
cli
daa
xlat
cld
and
fdivr
or
cmp
xor
sub
shl
lea
push
mov
lcall
lret
or
sbbl
lea
movb
pop
clc
pop
loopne
and
pop
lock
aas
pop
orb
adc
jp
sahf
mov
into
jbe
lcall
push
rol
cmp
es
int
insb
loop
sub
into
arpl
loope
push
fldcw
roll
ljmp
shr
mov
stc
push
cmpsb
out
leave
or
and
daa
aam
out
sub
or
push
jp
jmp
pop
popf
int3
lods
mov
adc
fnsave
lea
dec
aaa
pop
or
mov
sbb
std
xor
push
fiadds
loop
scas
stos
dec
loope
pusha
pop
push
mov
push
mov
jbe
cmp
jmp
ret
mov
dec
fidivrl
sti
in
sub
jne
push
sub
loop
or
pop
es
jmp
enter
lret
sbb
sub
daa
dec
stos
mov
push
xchg
add
loope
dec
and
inc
mov
lods
jle
ljmp
lahf
jl
ljmp
or
pop
and
filds
int
jmp
jl
fdiv
sub
lcall
ror
sbb
xchg
cmp
popa
ret
ljmp
enter
les
leave
inc
adc
pop
ror
stos
sti
mov
lds
ljmp
adc
lea
fisubrl
pop
cmp
imul
dec
jge
les
pop
lret
push
mov
jb
lods
dec
or
mov
pop
out
adc
aam
push
icebp
stc
negb
loope
cmpsl
cmp
std
pop
dec
and
ljmp
ljmp
int
inc
cmc
into
ljmp
and
sub
cli
xor
sbb
test
popf
les
shr
stos
js
mov
lods
adcb
pop
aas
stos
inc
and
dec
push
push
fs
push
lock
ret
shll
cs
fwait
mov
ja
sbb
and
ljmp
mov
sbbl
or
adc
mov
inc
test
cmp
and
pushf
aam
out
add
loope
lcall
or
out
pop
mov
es
js
mov
push
int
jae
sbb
mov
mov
scas
lahf
cmp
out
ret
int3
gs
js
scas
loope
jge
mov
out
lret
decb
pop
out
loope
add
pushf
in
pop
sub
push
lea
cmp
ss
lcall
popa
push
imul
pushf
cs
frstor
pop
icebp
fsubr
push
loopne
mov
fcom
gs
fsubr
push
jle
pop
mov
repz
nop
inc
out
jmp
lds
add
push
dec
add
push
jns
add
dec
int
loopne
add
testl
jl
fyl2xp1
fisubrl
cmpsl
or
ficompl
out
stc
or
stc
cmp
movsb
lret
sub
loope
push
out
cli
pop
into
xor
sub
mov
add
inc
loope
lea
jl
out
or
ret
call
push
mull
insb
stc
and
outsb
cltd
sub
sub
mov
in
sti
scas
add
ror
incb
dec
insl
mov
je
cld
leave
lss
inc
loope
or
fidivrs
rcl
ds
leave
xchg
sub
icebp
push
dec
out
sahf
std
call
sbb
cmpsb
les
aas
movsb
iret
insl
shrb
cltd
fptan
popa
fdivrl
push
jmp
xchg
pushf
add
jns
lret
mov
mov
or
inc
aad
or
jmp
outsl
cmpsl
or
push
dec
les
lods
mov
jbe
gs
inc
pop
pop
dec
repnz
dec
cwtl
loopne
xor
mov
and
insl
sti
lret
fcoml
lock
cltd
cmp
lret
sub
gs
push
adc
mov
inc
fisttpll
dec
mov
fidivs
jae
pop
add
mov
repnz
es
mov
insb
sub
outsb
in
sbb
jecxz
sub
push
int3
adc
in
mov
add
or
mov
cmp
cltd
inc
sub
push
scas
dec
stc
jl
xchg
and
pop
cmpl
sub
sbb
lret
push
inc
pop
xlat
lods
jns
ljmp
push
jno
loope
dec
xchg
mov
jmp
in
lahf
in
arpl
ljmp
push
mov
xchg
aam
dec
movsb
xlat
fsubrl
scas
push
scas
or
aas
lret
in
dec
and
subb
adc
out
sahf
js
cs
call
cmp
leave
fimuls
insb
ret
lods
mov
out
push
sbb
out
push
cmc
mov
in
iret
incb
insb
ljmp
sbb
scas
jmp
imul
mov
cs
pop
jmp
repz
leave
cmpsb
outsb
pusha
or
mov
push
pop
add
add
pop
mov
idivl
inc
imul
adc
xchg
push
gs
mov
ljmp
cmp
arpl
pop
fcomp
jmp
dec
sub
rcrb
aam
nop
enter
lret
clc
pop
out
bound
test
and
mov
in
outsb
fldenv
mov
fldt
sub
and
movsl
pusha
test
and
fsub
dec
dec
imul
sub
call
scas
out
icebp
test
test
add
mov
adc
stos
cmp
cmpsl
pusha
push
mov
and
sti
int3
dec
ret
movsl
ljmp
scas
sub
push
scas
jge
xchg
mov
cs
scas
or
fs
fucomi
inc
fildll
inc
cmpsb
pop
jns
lods
fmull
xchg
and
dec
push
stos
sbb
inc
cmpsb
xor
imul
jp
stos
pop
test
movsb
movsl
add
add
insl
pusha
push
mov
movsb
push
mov
out
mov
sar
out
push
cmpsl
cmpsl
mov
lret
test
sbb
loop
ret
stos
cmp
les
loop
mov
test
call
fisubrl
lods
in
inc
fsubrl
sub
jns
mov
mov
iret
sub
popa
fldt
fsubl
mov
scas
adc
out
in
and
mov
stc
and
push
stos
mov
stos
ret
stos
mov
scas
cli
or
loope
stos
in
cmp
sti
stos
fneni(8087
fcomip
sub
cmpsl
mov
fsubrl
outsl
mov
daa
mov
std
sub
mov
mov
and
mov
xlat
negb
inc
or
stos
data16
sub
fucomi
sub
cwtl
stos
ret
and
leave
test
shr
stos
in
scas
lods
jecxz
pushf
out
pusha
dec
or
stos
in
lods
loope
xor
jns
loopne
dec
sub
jecxz
das
scas
jl
pusha
or
mov
movsb
mov
xor
inc
or
mov
je
inc
or
and
xchg
test
cwtl
stos
stos
movsb
push
push
loope
imul
xchg
sub
mov
fcomi
test
iret
xchg
stos
shll
dec
fcmovnbe
aam
mul
imul
jns
cmp
cmpsl
leave
pusha
or
sub
mov
sub
test
enter
and
imul
test
test
shrl
test
into
jae
jmp
out
iret
and
stos
test
aad
sub
test
and
test
and
sub
pusha
cli
and
movsb
cs
sub
fldenv
sahf
test
test
and
test
and
sub
movsb
mov
test
scas
iret
mov
fprem
fldcw
movsl
mov
cmpsl
stos
sub
mov
mov
fildll
inc
test
cli
mov
push
test
imul
clc
cmpsl
lret
loop
cmpsl
dec
adc
pop
lods
or
lret
stos
jmp
xchg
stos
sub
icebp
and
mov
movsb
pop
mov
test
cmpsl
subb
out
enter
jns
cltd
sbb
into
imul
mov
push
sub
push
or
scas
leave
xchg
ljmp
jecxz
sub
mov
xor
in
inc
cmp
int3
mov
clc
sbb
int
pushf
in
pusha
bound
rcrb
pop
cmpsb
call
fidivrs
jmp
sub
movsl
cmp
out
xchg
fiadds
mov
sahf
dec
dec
xor
jge
pusha
cwtl
mov
mov
test
mov
das
addr16
enter
sub
mov
ficoms
lods
sub
outsb
dec
test
jmp
leave
sub
ret
stos
pushl
sbb
hlt
inc
add
ds
test
pop
ja
stos
stos
xchg
sub
ror
pusha
shrl
mov
int3
push
ljmp
mov
movsb
jl
cmp
hlt
mov
push
leave
test
adc
out
callw
mov
mov
outsl
fsubrs
enter
adc
inc
out
repnz
loop
pop
fmuls
loope
inc
int3
fadds
insb
das
loop
jp
sbb
cmp
jge
or
xor
test
in
test
sub
imul
xlat
dec
fadds
repnz
pusha
xor
es
clc
adc
cltd
stos
sub
test
adc
mov
mov
fsubs
clc
pop
popf
and
sub
fimuls
adc
ss
aaa
jno
nop
outsl
stos
sbb
lahf
adc
inc
lcall
popf
dec
push
fsubrs
subb
call
adc
test
add
cmp
and
shrl
mov
icebp
out
fsub
rclb
sub
insb
sub
rclb
addr16
fimull
das
mov
iret
inc
adc
shrl
sub
imul
xchg
scas
cmpsb
mov
dec
and
dec
pusha
fstpl
add
cmp
insl
call
push
mov
pxor
mov
jbe
or
js
fsubrp
jmp
jne
insb
adc
mov
pop
ret
sub
fsubrs
jecxz
sub
stc
insb
inc
mov
fcmovu
shrb
mov
sub
aaa
push
fs
push
fwait
loopne
fucomp
mov
sub
cs
cs
sahf
push
sbb
popa
mov
pop
iret
lcall
fsubrs
pop
jle
xchg
int3
sbb
out
sbb
pop
add
cs
xchg
jno
iret
pop
mov
sbb
lahf
sar
sub
popf
pop
pop
inc
into
cmp
pop
into
int
out
jae
mov
stos
adc
mov
cmp
sahf
pop
in
dec
into
mov
test
test
cs
pusha
outsb
lods
pushf
jmp
aad
and
out
push
lahf
sbb
sahf
xchg
stos
jmp
dec
rcrb
repz
scas
mov
test
pop
cltd
scas
std
sub
sbb
shrl
or
mov
setno
lds
imul
pop
mov
xchg
scas
bound
movsb
into
push
scas
rcrl
cmpsb
mov
mov
and
lret
loope
loope
insb
mov
sahf
scas
bound
mov
leave
std
out
inc
jne
outsl
cmpsb
addb
sbb
pop
rolb
loopne
cs
popf
ds
mov
cs
roll
fdivrp
and
jl
pop
sahf
lods
xchg
mov
aam
leave
add
pop
and
adc
and
stos
stos
cmpsb
in
scas
jmp
into
mov
loopne
xchg
or
loop
inc
loop
add
outsb
sti
lea
lahf
insl
dec
cmp
push
pop
mov
into
mov
data16
fsubs
sub
call
fldt
out
test
jmp
and
dec
mov
incl
push
xchg
push
dec
jp
cwtl
mov
cmc
sub
int
pop
pop
insb
mov
ror
sub
mov
add
out
test
sub
push
leave
inc
sub
inc
sub
and
clc
imul
cwtl
movsb
mov
mov
cmpsl
int
xchg
in
cmp
hlt
push
dec
adc
data16
cmpsb
outsb
adc
in
fimull
int3
and
imul
mov
movsb
fildll
imul
and
out
in
adc
pop
push
out
fsubs
sub
sub
fdivrs
test
jmp
cmpsl
cld
cli
jo
cltd
lods
inc
sub
clc
lahf
jecxz
mov
test
pusha
ljmp
jmp
mov
cld
jge
mov
lea
sar
add
imul
iret
jge
jle
cmpsb
add
pop
fdivr
ret
sbb
scas
int3
pop
push
pop
dec
mov
pop
push
lods
orl
jmp
add
push
dec
popa
pop
imul
mov
or
inc
sub
sub
lcall
sahf
rol
test
fsubr
push
movsb
fldt
or
shrl
pop
scas
leave
mov
arpl
clc
or
movsb
fldt
or
bound
sub
sbb
and
fadd
iret
or
cld
mov
mov
scas
ret
in
out
push
mov
dec
mov
pop
inc
dec
test
fisttps
leave
mov
and
push
inc
jbe
pop
imul
and
mov
mov
rorl
sub
loop
lahf
ret
test
cli
and
popa
movsl
mov
push
insb
daa
addl
jo
pop
inc
cld
orb
iret
mov
adc
fmull
add
scas
aas
jno,pn
and
cmp
cmpsl
pop
insl
sbb
paddsb
sbb
xor
fidivrs
mov
scas
outsb
pop
lret
jb
xorb
in
sub
mov
imul
scas
inc
je
insb
dec
push
iret
and
sbb
push
das
cmp
scas
sub
cmp
mov
test
xchg
mov
test
mov
js
subl
movsl
cmp
pop
and
sub
mov
ljmp
mov
and
pop
cmpsl
out
shr
and
call
pop
stos
loop
mov
stos
jge
test
sub
sub
inc
and
test
pushf
das
into
mov
lods
mov
sub
dec
arpl
push
push
mov
sub
sub
mov
test
and
shll
sti
das
ljmp
fsub
bound
jecxz
roll
roll
sub
nop
mov
lret
lds
and
or
ljmp
mov
call
shrd
pop
scas
sub
push
movsl
jmp
lds
insb
mov
or
lret
fildll
test
int
mov
out
iret
pop
lods
movsb
test
dec
movsl
aad
push
loope
push
test
popa
fistps
pop
xor
cmp
inc
jne
push
int
imul
cwtl
test
add
mov
lcall
mov
adc
add
insl
push
test
sub
sub
mov
nop
xchg
fmulp
push
xchg
xchg
mov
and
and
stos
outsb
lods
sbb
add
pop
loop
call
insb
std
pop
in
notb
mov
mov
inc
cmp
std
adc
mov
ficoms
out
ds
cs
leave
loope
sub
out
das
test
iret
add
sub
or
outsb
std
out
stos
out
loope
or
xor
jg
push
stos
mov
fxch
and
ja
pop
mov
dec
pop
insl
ds
cmp
cmpsb
inc
out
cmpsl
lahf
inc
sbb
lods
fcomi
push
mov
into
mov
pop
loop
insl
cmp
repnz
pop
test
stos
int
loop
push
pushf
insb
sub
push
outsb
bound
cld
or
je
ds
stc
xor
pop
lea
push
ss
mov
out
fdivl
ljmp
or
ds
xchg
in
add
sub
stos
fcompl
pop
lods
sbb
jae
aaa
std
test
xchg
jae
stos
int
mov
sub
mov
inc
call
mov
push
loopne
frstor
dec
pop
sub
mov
push
push
push
test
test
outsl
scas
rolb
sbb
push
cmpsb
cltd
push
pop
or
mov
pop
sbb
ljmp
pop
jnp
pop
lss
int3
sub
mov
sub
xlat
lods
imul
stos
ds
in
adc
outsb
or
in
jae
and
addb
dec
jge
movsb
movsb
cmp
mov
jmp
int
out
insb
inc
jmp
pop
pushf
mov
mov
test
or
push
repnz
xchg
addb
lret
bound
sub
adc
jno
cmpsl
xor
or
cltd
add
repnz
add
lret
add
scas
cli
sub
mov
ljmp
shlb
or
clc
nop
xor
jae
pop
pop
cmpsl
outsb
pop
loope
sti
adc
cld
clc
sub
jns
imull
out
or
pushf
rcr
popa
stos
add
mov
pop
jmp
jle
and
shrb
insb
pop
scas
sti
cmpsl
insl
jle
push
push
int3
loopne
push
jle
mov
cwtl
mov
imul
mov
push
iret
lret
mov
jb
xor
mov
inc
jge
imul
sub
popf
int3
leave
aad
xchg
push
icebp
stos
int3
cld
dec
es
or
fsubs
insb
cmp
test
push
cld
repnz
fistpl
ja
jns
clc
arpl
std
sub
sbb
andl
sti
ja
add
idiv
scas
sub
jne
lcall
fs
lods
int
in
cmpsl
jo
cld
bound
and
ljmp
push
imul
test
mov
or
mov
shrb
leave
test
cmpsl
mov
and
repnz
std
ljmp
jl
ljmp
dec
pop
add
in
pop
bound
scas
arpl
jl
xor
nop
stos
sub
sub
test
je
and
push
or
es
xlat
cmp
and
gs
lods
mov
mov
mov
pop
stc
stos
int3
fcoml
lods
fldcw
mov
inc
sub
movsb
cmc
and
sub
scas
add
mov
mov
cld
scas
movb
sub
sbb
fisttpl
push
cmpsl
repnz
scas
scas
iret
jmp
cmp
stos
cld
sub
fs
jmp
pushf
lods
dec
das
shrl
shrl
push
enter
jp
mov
test
fxch
mov
scas
push
test
in
cmp
lods
and
mov
push
jne
scas
xchg
sub
mov
addr16
xor
sbb
data16
mov
mov
mov
or
test
repz
cmp
sahf
movsb
cs
sub
call
pop
xor
test
enter
mov
xor
out
sub
in
clc
sub
xchg
dec
call
or
xor
jmp
push
int3
loope
sub
movsb
leave
sub
inc
xor
sub
enter
bound
imul
in
and
sub
push
fxch
in
ljmp
out
lret
arpl
fsubp
lret
in
insl
jns
ljmp
insb
int
fstps
gs
dec
ljmp
aaa
in
mov
in
xabort
test
dec
into
test
outsl
sub
mov
mov
jmp
jmp
imul
jmp
call
fwait
insb
sub
add
int
inc
std
test
mov
outsl
outsb
insb
test
cs
iret
pop
mov
xchg
das
jecxz
shrb
lock
loopne
lods
rcll
leave
add
shrb
loop
cs
loope
sub
push
in
scas
cmp
push
and
lods
push
incl
cmp
jmp
into
sub
or
cmp
dec
leave
scas
ljmp
stc
fxch
jge
pop
or
push
lea
lcall
movb
es
stos
sub
idivb
fisubrl
rcr
enter
clc
sub
fcomps
fxch
enter
cwtl
call
sub
iret
test
sub
sub
jmp
pusha
scas
fld1
jo
sub
imul
ljmp
sub
sbb
test
movsb
lods
lret
sub
leave
fldl2e
and
in
and
push
cmpsb
leave
pop
repz
adc
lret
test
lods
push
shrl
xor
stc
push
lds
ljmp
sbb
movsl
or
leave
cmp
inc
pop
mov
stos
fldlg2
leave
sub
stc
leave
scas
ljmp
or
in
movsb
fistpl
leave
movsb
ljmp
push
inc
fldcw
dec
enter
lods
aad
sub
cmc
in
lods
cmp
fsubrs
push
sub
mov
ror
lret
stc
and
jmp
adc
pop
mov
test
lods
rcl
lods
lret
sub
imul
lret
cmp
ljmp
shrl
lret
stos
jg
sub
scas
daa
cmp
daa
push
scas
push
fldt
mov
fldcw
and
ljmp
shrl
cmp
leave
jp
lods
cmp
mov
iret
sub
mov
ljmp
sub
dec
push
test
sub
mov
sub
ljmp
mov
sbb
movsl
ljmp
test
lret
sub
push
stos
leave
int
sub
std
shrl
popf
ljmp
mov
and
lods
dec
popa
sub
insl
leave
sub
sbb
lret
cmp
and
fisubrs
in
cmpsb
push
scas
mov
shrl
jle
lods
leave
outsb
ljmp
push
in
and
push
mov
lods
iret
shll
out
mov
leave
sub
lods
stos
sarl
scas
push
pop
mov
mov
outsl
leave
movsb
ljmp
cmpsl
sub
call
sarl
fld
test
lods
ljmp
mov
fldlg2
xchg
mov
dec
lods
sub
push
stc
das
test
jmp
lods
dec
shrl
lret
lods
outsb
push
sub
lea
lret
and
movsl
insb
mov
leave
inc
ljmp
sub
push
add
lods
sub
test
sub
fdivs
pop
mov
and
and
push
cltd
hlt
loopne
fisubl
cmpsl
pminub
movsb
stos
paddb
lods
scas
mov
scas
cmp
mov
mov
cmpsb
paddb
cmpsl
addr16
mov
stos
stos
mov
lods
cmp
lods
push
scas
cmp
mov
mov
movsl
mov
cmpsb
cmp
cmpsl
cmpsl
test
mov
test
stos
cmp
scas
cmp
scas
addr16
mov
mov
movsl
cmp
test
cmp
stos
cmp
lods
lods
mov
scas
cmp
scas
push
mov
cld
mov
cld
movsl
cmp
cmpsb
cmpsl
mov
test
cmp
test
stos
cmp
lods
push
lods
cmp
mov
mov
cmpxchg
movsl
cmp
cmpsb
push
cmpsl
cmp
test
or
test
stos
paddb
scas
mov
mov
mov
pop
cmp
cmpsl
cmp
test
stos
lods
mov
lods
cmp
scas
push
scas
cmp
mov
inc
cmp
movsl
cmpsb
mov
cmpsl
cmp
test
cmpsl
test
fisubrl
lods
paddb
mov
mov
out
fisubl
cmpsl
pminub
movsb
stos
paddb
lods
scas
mov
scas
cmp
mov
mov
cmpsb
paddb
cmpsl
addr16
cmp
test
stos
mov
lods
cmp
lods
push
scas
cmp
mov
mov
movsl
mov
cmpsb
cmp
cmpsl
cmpsl
test
mov
test
cmpsl
add
ja
sub
movups
movsb
inc
adc
test
bound
lods
adc
test
add
test
xor
leave
mov
test
mov
lods
jno
and
adc
test
popa
movsb
mov
test
mov
fldcw
fmul
mov
sub
imul
loop
fmuls
test
hlt
nop
pusha
stc
dec
cmpsb
and
add
stos
sub
fadds
sub
and
shlb
test
outsl
lods
and
cmp
add
mov
cmpsl
jo
call
das
mov
scas
sub
sahf
aas
sub
and
xor
bound
dec
mov
cwtl
loopne
or
push
call
das
lret
sbb
jmp
sub
sub
fcomps
dec
sub
sub
pop
leave
sub
out
jmp
pop
mov
pop
ljmp
and
pop
iret
sub
mov
sub
sub
sub
adc
mov
das
stos
std
or
test
sbb
and
sub
enter
dec
sub
out
and
mov
test
sub
into
in
in
cwtl
subb
sub
mov
sub
sub
push
sub
loope
outsl
sub
outsb
mov
and
fimull
das
mov
scas
pusha
inc
shrb
sub
cmp
sub
enter
shll
xor
and
mull
fsubrl
test
jp
nop
sub
data16
xchg
pop
daa
mul
repnz
sub
dec
push
sub
int
int
in
es
mov
sub
inc
sub
cmp
sub
es
les
pop
insb
and
lods
xor
or
into
in
repz
sub
jae
scas
cwtl
imul
sub
push
lods
movsb
imulb
and
jmp
es
pusha
mov
push
in
addr16
cmp
test
test
cld
loopne
leave
dec
cmpsl
lods
lods
dec
in
ret
test
push
fsub
lods
ljmp
sub
sub
in
sti
enter
sub
in
in
dec
inc
lods
and
jl
sub
std
pop
sub
insl
sbb
lret
mov
mov
sub
outsl
jle
and
call
icebp
and
pusha
dec
inc
sub
cmp
pop
and
imul
aam
sub
mov
imul
and
mov
test
sub
lods
mov
sub
lods
mov
gs
pop
and
inc
mov
mov
arpl
test
add
inc
sub
arpl
enter
lret
in
xchg
and
sbb
sub
add
fisubrl
pop
jecxz
lret
in
sub
out
sub
lods
imul
and
mov
hlt
sub
sub
sub
pop
out
adc
cmp
scas
scas
stc
shr
cmp
inc
js
scas
addr16
test
adc
pusha
add
test
xor
loopne
xor
repz
das
xor
outsl
xor
xorb
out
mov
mov
jo
outsb
lea
lods
into
inc
sub
ja
aam
push
or
int3
sahf
dec
sbb
xor
cmp
cltd
int
sbb
fcomps
fimuls
stos
into
cmp
pop
and
out
and
out
jmp
fnstenv
in
ljmp
mov
push
push
cwtl
repz
fwait
xor
push
rorb
fdivrp
mov
lret
pop
push
cltd
pop
xchg
roll
cltd
dec
in
push
jmp
in
stos
jae
into
sbb
sub
pop
js
pop
mov
negl
fldcw
cld
inc
aam
mov
pop
rcr
xor
stos
fsubrp
cltd
sub
jecxz
sbb
mov
insl
add
lret
push
int3
ret
ret
pushf
scas
cltd
sahf
and
int
jmp
cs
mov
sbb
in
mov
insl
test
ret
ret
incb
sbb
jge
addb
cmp
lahf
push
inc
lods
mov
jno
pop
ljmp
ret
rolb
adc
or
xchg
or
jl
cmpsb
lds
lcall
mov
xchg
inc
in
in
rorb
pop
jp
popa
psrlw
jecxz
out
pop
js
enter
sub
cltd
in
push
mov
mov
rol
lea
shll
leave
dec
pop
jecxz
ret
stos
mov
stc
outsb
fwait
dec
pop
pop
jg
add
out
ljmp
incb
imul
fsubrl
push
inc
out
jp
cmpsl
mov
lods
xchg
cld
sbb
push
adc
inc
mov
mov
or
call
in
or
lahf
fildl
mov
outsl
fisttps
lret
inc
stos
push
in
loope
loope
sbb
and
movntps
mov
subl
sti
insl
push
dec
popa
push
pop
inc
imul
es
mov
roll
mov
and
mov
add
mov
stc
mov
out
dec
lea
insb
or
sub
inc
psrlw
sbbb
outsb
inc
outsb
jecxz
push
es
cmp
or
push
loope
sub
insl
or
int
pusha
pushf
inc
leave
call
mov
loop
in
inc
push
pop
cmpsl
outsb
sbb
out
je
inc
xchg
push
bound
cmp
decl
sarb
jmp
dec
andb
mov
cmp
arpl
loop
add
pop
ds
bound
neg
rorb
test
lods
test
and
push
jns
pusha
fcomps
sbb
filds
jmp
pop
sub
outsb
adc
enter
adc
test
sarl
enter
dec
aaa
clc
mov
inc
mov
xchg
js
mov
mov
shll
fadds
call
xchg
inc
add
mov
pushf
and
aaa
jge
xor
mov
cmp
push
cli
add
rolb
stc
lret
into
fdivrs
into
jmp
mov
gs
adc
clc
outsb
repnz
cwtl
leave
ret
sub
data16
rcrb
push
pop
leave
imul
jmp
shlb
cld
jae
xchg
insl
xor
out
adc
sub
inc
fldcw
pop
test
out
pop
pop
cmp
sub
and
pop
stos
insb
cs
push
rcll
fwait
inc
aam
mov
mov
inc
adc
mov
ror
iret
mov
or
clc
push
scas
lea
outsb
or
and
loope
mov
jb
xorl
mov
movsb
pop
pop
fldenv
fiaddl
fucomi
and
sbb
in
ds
xchg
or
enter
xor
xchg
inc
scas
out
xchg
fwait
shr
int
scas
xor
dec
scas
add
mov
call
sub
fwait
and
ja
fdivs
pop
mov
std
and
lret
lock
inc
xor
mov
sub
mov
ss
push
fsubs
nop
mov
inc
dec
ja
cld
clc
shl
sub
cmpsb
leave
sahf
fdivr
pop
orl
pop
iret
in
into
aaa
push
or
outsb
mov
mov
sbb
out
jmp
mov
push
enter
xchg
outsb
lret
bound
and
popf
cmp
push
in
or
sub
inc
out
das
scas
ljmp
addr16
test
sbb
push
jge
xor
push
in
ret
push
stos
push
jae,pn
mov
dec
dec
push
out
mov
loope
xchg
js
push
push
cltd
dec
or
sub
lret
and
and
pusha
ja
sub
shll
mov
fxch
or
fimull
and
in
iret
push
insl
int
cmpsb
lret
jecxz
sbb
out
mov
inc
mov
je
out
enter
inc
pusha
clc
push
jp
pop
out
or
inc
adc
jl
lods
dec
sbb
pop
mov
in
push
or
adc
sub
push
push
imul
sub
int3
xchg
clc
and
add
pushf
xchg
cltd
sub
es
inc
int3
fcoms
test
mov
movsb
insb
shrl
insl
dec
std
mov
or
dec
and
xchg
jo
push
jp
and
adc
das
cmp
add
ja
aaa
mov
mov
jl
sub
or
mov
scas
and
jmp
push
sub
fmuls
mov
cmc
sub
call
stos
std
call
pusha
sub
pop
sbb
dec
imul
xchg
inc
fidivs
lods
out
mov
in
mov
adc
jbe
cs
dec
cmp
scas
or
outsb
js
adc
int
and
sub
out
sbb
ds
lea
test
mov
out
in
lods
js
push
into
mov
mov
ljmp
mov
popa
sub
scas
mov
std
push
movl
jmp
imul
mov
sub
nop
sub
flds
dec
sub
and
out
sub
fsubrs
cmc
idivb
out
nop
sub
imul
sbb
fmul
fsubs
push
fsubs
das
inc
fsub
cmpsb
in
sub
jb
push
aad
roll
adc
fldcw
push
stos
test
mov
xor
jno
pushf
ds
and
test
es
test
sub
mov
adc
out
pop
pop
sub
adc
xchg
adcl
call
mov
fisubs
and
fcom
sub
stos
rcl
xor
clc
in
loopne
adc
test
stos
or
mov
and
xchg
mov
and
fnstenv
push
add
loop
mov
mov
mov
sub
jg
das
icebp
int3
adc
inc
icebp
and
das
int
sub
js
movsb
cmp
loope
ss
std
cs
jmp
loopne
inc
insl
dec
sbb
pusha
cmpl
lea
sub
and
inc
lret
shrb
xor
aas
cltd
adc
xor
stc
xor
sub
flds
cmp
sbbb
and
loop
das
addr16
enter
fnstenv
shlb
lods
scas
xchg
jns
or
sub
xor
push
and
das
sbb
sbb
stos
jb
sti
push
das
hlt
jno
sub
repnz
insb
outsl
xlat
lods
sub
js
cli
andl
imul
add
call
mov
or
imul
jge
ja
dec
std
loopne
punpckhbw
fstps
std
fwait
cmc
stos
pop
int
insb
cltd
jl
pop
or
js
les
mov
nop
fcomps
pushf
test
pop
mov
dec
pop
sub
stos
jbe
inc
dec
mov
cmp
movsb
jne
mov
mov
or
xchg
int
sub
and
xchg
sbb
push
lea
mov
pop
inc
pusha
xor
fists
sub
test
loope
cmp
and
or
push
cmp
out
cs
sub
jl
idivl
add
sub
enter
test
sub
sub
das
sub
sub
in
cs
std
dec
loopne
cmp
mov
fdivs
cmp
push
adc
sub
and
fcoms
in
clc
push
mov
test
pushf
cwtl
aad
leave
in
mov
adc
sub
mov
outsl
lods
imul
clc
call
in
fmuls
lret
sub
mov
adc
fadd
in
ret
in
rclb
insb
adc
push
cmp
inc
dec
lcall
nop
lret
ljmp
aas
das
sahf
lret
sub
mov
outsb
nop
push
pop
ja
call
pop
aas
dec
addr16
pop
dec
jecxz
scas
pop
sub
insl
fnstcw
movsb
aas
shr
push
clc
pop
mov
lods
cmp
aas
jnp
fcmove
mov
add
xchg
lods
cs
call
and
pop
mov
imul
call
imul
sub
cmp
enter
daa
in
aas
push
cmp
sbb
pop
imul
xchg
addr16
mov
and
es
enter
test
test
gs
int3
stos
imul
call
in
mov
imul
cwtl
sbb
push
or
mov
mov
out
enter
ret
stos
shrl
frstor
sti
mov
subb
shrb
jmp
loopne
loope
xchg
stc
cmp
mov
sub
stos
and
push
pop
inc
lods
insl
mov
sub
clc
lods
call
cmp
mov
lret
in
mov
das
mov
inc
leave
movsl
dec
sub
cs
call
cmpsl
fsub
call
and
loop
movsb
call
mov
mov
sub
fcmovu
int
sub
sub
cli
test
out
fcmovb
test
mov
xor
inc
sub
jmp
enter
test
stos
dec
es
lret
inc
mov
in
insb
cmc
enter
aam
mov
mov
pop
and
test
loopne
or
dec
test
pushf
scas
xlat
or
test
sbb
mov
adc
jno
dec
mov
icebp
sub
loopne
in
dec
adc
sbbb
jnp
mov
mov
insl
cmp
push
sub
xchg
sub
pop
add
enter
sbb
in
jecxz
mov
push
sub
xchg
mov
mov
cmp
xlat
mov
bound
imul
outsl
sti
lea
dec
sub
add
lock
mov
sub
test
lds
test
mov
shlb
push
inc
mov
pop
inc
shrb
popa
imul
ljmp
jle
shrb
push
jno
out
mov
push
popf
sub
out
cmp
lods
scas
fmull
jae
dec
pop
lret
in
or
daa
mov
pushf
fnstenv
out
dec
es
in
sub
and
test
loop
loopne
cld
scas
adc
mov
inc
jo
das
mov
dec
pop
cmpsb
iret
sbb
sbbb
shrb
leave
adc
sub
add
mov
lret
out
sub
loopne
dec
xchg
rolb
rolb
ret
and
mov
aad
xorl
subb
sub
mov
pushf
sub
or
dec
cltd
push
stos
mov
loopne
fld
test
jno
pop
out
sbb
pop
dec
push
loop
jecxz
mov
sbb
idivb
and
or
test
cmpsb
lods
insb
dec
xchg
pusha
loop
mov
int
loopne
leave
xchg
or
insl
or
shlb
lock
in
mov
sbb
pushf
mov
pushf
out
sbbb
test
and
sarb
or
mov
mov
dec
jne
jae
shr
mov
jno
stos
dec
mov
inc
shl
or
dec
enter
call
mov
mov
pop
inc
test
adc
sub
popf
jnp
inc
jle
cmc
in
mov
into
sub
std
add
lods
in
popa
inc
push
adc
cmp
js
inc
test
jmp
add
adc
pop
dec
mov
xor
mov
push
push
stc
icebp
adcb
sub
test
cs
outsb
mov
addb
lods
push
push
inc
andb
sub
mov
inc
add
fstpt
mov
inc
or
push
loop
jl
movl
mov
in
shlb
out
pusha
dec
test
stos
dec
je
jns
insb
addr16
sub
jle
xor
lock
call
sub
mov
cmpsl
out
int
test
xor
cs
andl
mov
xor
ljmp
xor
mov
sbb
sub
sub
in
xor
or
cs
mov
or
mov
and
mov
in
stos
ffree
cltd
test
testl
sbb
lods
ret
lea
out
leave
test
ret
loope
jno
rorb
dec
arpl
jmp
sub
test
dec
imull
mov
pop
stos
sbb
cmp
mov
adc
in
sub
mov
add
cmp
sarb
in
fs
push
push
call
cmp
aaa
test
jmp
jecxz
mov
cmp
mov
test
push
or
push
ret
pop
in
or
push
pop
or
mov
dec
loope
dec
call
call
sub
in
cwtl
add
mov
pop
sahf
sti
sub
enter
out
mov
sbb
stc
dec
out
loope,pn
enterw
hlt
stos
repz
sub
sub
fldcw
test
clc
mov
iret
aaa
jne
mov
in
mov
sbb
jmp
jmp
push
jecxz
mov
jmp
fwait
int
dec
mov
cmpb
mov
enter
das
and
adcb
clc
ficoml
imul
js
fwait
sub
lret
cld
adcb
cwtl
sbb
push
clc
mov
push
pop
movsb
jno
stc
adc
lds
ja
loopne
int3
cwtl
ret
test
push
dec
int3
and
into
addr16
and
sub
cltd
push
out
push
loop
and
cmp
ljmp
cmovae
dec
popa
and
outsl
add
ljmp
mov
dec
mov
sbb
xor
fidivl
in
enter
lcall
lods
mov
sub
enter
in
cwtl
mov
int3
cmpl
das
sbb
andl
in
in
cmp
jge
push
sub
in
xchg
lds
push
dec
mov
int3
movsb
cwtl
push
sarl
ret
lret
inc
lret
enter
cmp
push
lods
movsl
inc
pop
popa
fs
stos
and
push
test
inc
scas
test
and
call
mov
add
out
dec
mov
test
mov
or
cld
mov
mov
dec
dec
js
dec
add
movsb
pop
jecxz
fs
insb
mov
rclb
mov
leave
call
xlat
ret
test
jg
ja
lea
shlb
xorl
mov
push
dec
jns
xchg
mov
sub
flds
lahf
or
leave
arpl
popa
sti
cmpsb
out
rorl
popa
loopne
pop
rol
and
mov
insb
test
push
push
test
lret
mov
stos
stos
sub
cwtl
mov
mov
mov
mov
insl
xchg
in
push
inc
inc
jecxz
loope
sbb
scas
stos
out
test
push
mov
dec
mov
lock
aaa
ss
mov
mov
add
shr
aas
push
imul
and
lret
popf
call
shrb
loop
push
fnstcw
or
leave
pop
vmovaps
out
es
or
sbb
stos
dec
pop
out
call
push
mov
lods
cmpsl
add
fcmovb
jno
xor
and
dec
xchg
pop
sbb
cmp
ret
insl
rorl
sub
and
adc
pop
dec
lcall
test
test
iret
or
mov
dec
shlb
or
out
xlat
les
loopne
and
ret
xchg
lcall
mov
xchg
lods
cmc
ljmp
sub
push
popa
jno
pop
cmp
leave
scas
mov
cmpsb
call
inc
and
orb
test
aam
jl
push
js
xchg
mov
test
shr
call
lock
arpl
rorl
testb
jmp
pop
mov
dec
test
push
test
ret
jns
sub
add
aad
cmp
lods
scas
mov
inc
xor
lock
push
mov
loop
lods
mov
mov
outsl
outsl
xlat
mov
inc
popf
inc
int3
or
cmpsl
nop
ds
leave
insl
out
ret
dec
lret
and
popa
rclb
dec
scas
mov
stc
das
mov
test
loopne
aam
or
xchg
call
js
and
fstpt
bound
outsl
stc
push
mov
fs
outsb
sub
in
les
jae
out
push
sub
lret
xchg
sbb
in
xchg
ds
sahf
cmp
mov
inc
mov
sbb
popf
in
mov
mov
insb
mov
rep
fsubrl
push
cmp
fnstcw
orl
add
test
stos
xchg
push
gs
xchg
fildll
sub
pop
cs
aad
out
mov
bound
fistps
enter
fbld
aaa
xlat
lret
shr
jmp
test
dec
push
test
out
out
iret
clc
loope
cmp
fsubrl
in
iret
jecxz
mov
dec
xchg
test
jmp
es
test
mov
add
inc
ja
int
or
lret
cs
xchg
mov
fstl
popa
sub
fists
inc
pop
cltd
dec
sub
mov
xor
das
sbb
lods
aam
mov
into
or
scas
lahf
ret
ret
adc
lods
adc
int3
or
inc
push
enter
dec
sub
xchg
in
jmp
mov
jge
mov
rorb
loop
sbb
les
xchg
loop
sbb
xchg
arpl
jmp
sub
movsb
xchg
xor
js
out
psrld
jp
push
lret
ljmp
push
adc
jmp
and
push
and
and
cs
dec
xchg
shrl
or
push
test
lret
sarl
leave
sbbb
lahf
and
les
es
out
test
mov
dec
jecxz
pop
out
sub
cltd
fnstenv
js
add
lds
push
and
pop
lods
sub
push
ret
mov
mov
cmpsb
add
cwtl
pop
in
sahf
stos
mov
or
cmpsb
sbbl
ljmp
test
or
sub
dec
mov
test
inc
loopne
js
adc
push
inc
or
pusha
sahf
mov
inc
cmc
sub
push
rol
enter
or
dec
pop
inc
mov
jnp
xor
hlt
cmp
in
dec
dec
push
mov
adc
sarb
lret
pop
or
inc
cmp
into
jne
insb
dec
or
sub
ja
adc
hlt
push
push
int3
add
stos
jp
imul
lret
push
inc
rcrl
imul
lea
mov
or
sub
out
pop
dec
inc
movb
or
pop
mov
push
pop
cmpl
push
popa
pop
fmull
out
xchg
mov
jmp
dec
fidivl
sub
sub
dec
add
adc
sub
sahf
rorb
movsl
dec
mov
jl
mov
push
insb
outsl
or
cmp
shrb
scas
mov
jp
in
mov
bound
dec
fs
enter
sub
pop
ljmp
dec
outsl
push
cmp
lea
out
faddl
push
icebp
leave
cltd
out
xor
int3
call
pop
bound
lea
loope
mov
es
lea
push
out
loop
pop
call
out
test
pop
mov
and
dec
dec
xchg
cmp
cmp
and
or
loopne
inc
shrb
popa
pop
mov
or
or
lcall
pop
cmp
or
push
add
and
adc
xchg
dec
cmpsb
add
push
mov
cmp
push
test
add
scas
cli
mov
mov
xor
mov
ds
negl
out
inc
in
int
cs
inc
orb
lret
retw
push
fnstcw
xchg
cwtl
xor
adc
jnp
mov
mull
das
ljmp
mov
mov
dec
mov
pop
inc
mov
call
es
xchg
rol
mov
fdivp
jns
jmp
pushf
xor
lds
dec
mov
inc
dec
test
dec
or
cmpsb
jbe
fs
fisttpll
and
pop
leave
jecxz
roll
out
lods
test
testl
aas
cmp
xchg
rol
pop
inc
jnp
mov
loope
mov
push
shll
test
sbb
lds
mov
test
mov
in
or
in
inc
out
lea
inc
mov
cmp
pop
out
or
test
mov
out
ret
sub
push
sub
jmp
mov
loop
rolb
lods
roll
mov
loop
add
pop
icebp
movsl
lods
xchg
mov
xchg
ja
mov
leave
popa
mov
aad
mov
out
pusha
ja
out
mov
and
aaa
jmp
cmpsb
pop
cmc
jnp
mov
nop
jmp
pop
dec
cmp
sbb
icebp
call
orl
jmp
and
bound
cmpsl
dec
ret
adc
push
imul
stos
ror
cmpsl
mov
rol
sarl
ret
jmp
out
pop
in
cmp
sub
sub
es
add
add
sahf
jmp
sub
sub
mov
or
movsl
or
lahf
inc
xchg
dec
movsl
mov
insb
inc
dec
int3
les
or
repnz
mov
int3
lods
mov
dec
add
push
data16
sub
ljmp
cmp
sub
cmpsl
sub
ljmp
cltd
lods
test
cmp
pop
outsl
jl
lods
add
xchg
les
add
in
inc
insb
sub
mov
push
adc
pop
add
popf
int
jnp
fucomp
clc
adc
mov
sub
mov
cmp
sub
loope
push
sub
mov
push
or
popl
and
jns
int
adc
mov
fldt
push
call
jmp
pop
lods
pop
pop
mov
adc
mov
add
enter
sbb
repnz
sub
lret
shll
rorl
mov
lds
rcrl
mov
cmpsl
add
ds
in
pop
dec
sub
jmp
cmp
leave
loope
jmp
push
jmp
inc
clc
sti
sub
sbb
enter
into
mov
sub
mov
mov
imul
sahf
sbb
cld
xor
ljmp
mov
mov
sub
int
loop
xlat
cmp
subl
loopne
stos
test
dec
pop
enter
or
dec
add
shl
aas
pop
or
rcl
add
mov
or
sub
mov
in
pop
int
xchg
dec
xchg
andps
das
sbb
xor
test
movsb
pop
test
dec
inc
cli
lret
mov
out
subb
test
enter
aad
mov
das
and
ja
and
push
stos
cmpsb
adc
subb
icebp
dec
sbb
mov
and
mov
cli
into
rcrl
dec
ds
mov
loope
xchg
dec
das
dec
jle
xchg
xor
pushf
arpl
dec
or
ret
lret
or
movsb
pop
leave
cld
in
sub
push
pop
mov
lods
leave
dec
push
sub
sub
mov
in
push
lea
popa
pushf
pop
int
pop
ds
push
sbb
call
arpl
sbbl
jae
inc
fs
aaa
dec
xchg
mov
mov
stos
ja
xchg
mov
sub
test
pop
popa
enter
xor
mov
and
pop
add
mull
adcl
or
scas
push
outsl
push
xchg
mov
fs
mov
fidivrl
and
ja
sahf
incl
inc
push
in
mov
mov
mov
cltd
movsl
cmp
or
sbb
mov
push
scas
pop
aaa
or
xlat
aas
push
lods
or
jge
add
cmp
xchg
push
add
add
fdivrl
adc
xchg
adc
stos
sub
les
fdivr
add
xchg
scas
xor
push
fldcw
add
pushf
fidivs
leave
mov
jge
inc
mov
or
mov
cmpsl
mov
iret
call
dec
stos
addb
inc
cltd
dec
iret
mov
mov
insl
lds
xchg
cmpsl
cmp
or
push
imull
out
add
cwtl
dec
pop
jmp
mov
add
push
stos
cmp
out
test
lahf
es
ret
fadd
cs
in
in
lret
popf
lods
ljmp
fdivrs
pop
iret
jno
fildll
in
cwtl
fsubr
pop
stos
lea
sahf
inc
fs
stos
icebp
mov
lahf
outsb
mov
out
sbb
mov
mov
insl
das
xchg
jmp
sub
jmp
call
cmp
sub
mov
movsl
in
fcomps
push
movsb
push
pop
push
and
pop
out
lods
shlb
pop
sub
lret
cmpsb
insb
test
jecxz
jmp
lods
mov
sub
and
ja
mov
pop
test
mov
lret
in
js
mov
push
out
lods
sbb
lret
call
imul
and
call
sub
fabs
push
cmpsl
fldcw
enter
stc
call
sub
sub
and
mov
leave
in
stos
test
pop
lret
movsb
push
dec
and
fldcw
sub
loopne
cmpsb
mov
sub
or
scas
in
sub
cmp
mov
leave
and
jmp
call
sub
stos
cli
lret
es
sub
mov
das
leave
out
lods
mov
in
sub
sub
lret
call
mov
leave
cmpsl
lret
call
test
mov
ljmp
cwtl
outsl
enter
push
sub
sub
movsl
jnp
and
das
sub
js
jb
sbb
in
mov
sub
push
call
adc
and
movsb
sub
jmp
xor
cwtl
mov
jbe
and
scas
xchg
mov
stos
int
vmovdqa
ret
mov
sbb
imul
sub
movsb
dec
fsubrs
jmp
out
inc
adc
out
push
jae
cmp
fimull
adc
jmp
jle
test
movsb
cmp
pop
mov
call
sub
out
ret
shrl
sub
mov
pop
call
cwtl
lods
imul
out
fsts
pop
scas
jmp
or
inc
sub
movsb
int
movsb
push
test
add
out
inc
shlb
mov
lods
sub
leave
cmp
mov
loop
pop
and
test
fsubrs
mov
imul
movsl
movsb
sub
and
clc
fwait
sbb
mov
out
push
imul
mov
loop
orl
test
inc
outsb
test
push
dec
aam
xor
loope
mov
inc
loopne
jg
jp
sub
mov
aam
out
out
sub
mov
dec
iret
fisttpll
insl
ljmp
aam
out
pop
or
sbb
adc
push
mov
mov
push
cmp
das
or
in
out
call
bound
stos
enter
dec
jecxz
lea
das
add
test
pop
imul
sahf
out
xchg
cmpsb
dec
and
aad
imul
loop
push
leave
call
and
insb
out
mov
lods
popf
imul
sub
movsb
pop
push
dec
aam
adc
loopne
lret
sub
push
cmp
fstpl
loop
and
mull
out
mov
mov
adc
add
test
ljmp
sub
int
out
mov
das
sub
loop
subl
shlb
push
outsb
jae
sub
lcall
icebp
sub
mov
sub
stos
movsb
dec
nop
push
push
sub
in
add
push
in
xor
inc
test
add
insl
loope
test
and
pop
scas
jmp
xchg
movsb
sahf
pop
ljmp
movsb
jns
out
lods
and
cmpsl
sub
adc
mov
in
int
movsb
cmpsl
cs
test
xlat
sub
insb
sub
out
inc
scas
mov
mov
das
fsts
lods
cmpsb
jb
imul
inc
and
sahf
stos
sti
lcall
out
pop
insb
sbb
add
mov
or
test
mov
in
and
scas
pop
gs
xchg
or
call
or
pop
cmpsb
mov
jo
ljmp
cmpsb
nop
xor
icebp
call
arpl
or
jecxz
imul
push
insb
push
lods
sbb
arpl
mov
insb
and
movsb
bound
dec
gs
push
mov
push
out
shl
out
lcall
xchg
insb
pop
cli
sub
xlat
lods
insb
sbb
inc
das
movsb
int
out
sub
pop
scas
dec
movsb
in
cmp
sub
lods
lods
movsl
inc
int3
movsb
and
xchg
popa
in
dec
cmp
out
cs
movsb
ret
mov
out
loop
sub
cli
and
jmp
movsb
scas
mov
dec
and
nop
sub
xchg
insb
cmp
cs
movsb
rep
mov
das
call
and
aam
iret
out
insl
xor
cmp
out
push
jle
push
xchg
das
test
test
push
test
sub
and
jae
test
mov
test
push
and
adc
cmpsb
aam
test
pushf
loopne
and
cmpsl
or
sbb
loopne
mulb
fs
shll
ret
mov
ljmp
sbb
stos
call
lods
and
and
and
sub
push
adc
aam
sahf
sub
cmp
mov
xchg
movsb
xlat
scas
insl
and
mov
push
sub
lods
inc
sub
outsl
sub
stos
lret
test
xchg
out
mov
lret
mov
call
out
iret
sub
js
fimull
iret
sahf
movsl
push
movsb
insb
out
and
in
scas
cmp
aas
lods
lods
iret
je
out
sub
and
sub
arpl
lret
mov
loop
lods
or
lods
mov
out
subb
out
mov
sub
arpl
mov
sub
or
insb
mov
fstpt
sub
pop
das
cmpsl
cwtl
jae
jmp
mov
nop
mov
stos
scas
mov
cwtl
insb
nop
sub
loop
push
outsl
gs
mov
or
lods
and
lret
or
ret
and
push
push
lret
test
cmpsl
lods
push
int3
bound
cmpsl
lods
push
sub
pop
mov
jmp
jp
push
imul
jo
add
ret
shll
movsb
pusha
out
lods
stos
inc
mov
shr
pusha
scas
in
test
stos
sbb
jecxz
out
in
sub
jo
pusha
jl
xor
push
or
js
outsb
jmp
arpl
in
arpl
fmull
push
arpl
and
loop
xlat
cmpsb
sbb
xor
mov
test
mov
addr16
arpl
stos
test
ljmp
out
insl
sub
loope
movsb
int3
loop
sub
cmpsb
xchg
imul
movsb
ljmp
lods
pop
es
fs
mov
cli
movsb
loope
out
pop
les
iret
insb
repz
shlb
push
out
lods
imul
mov
stos
pushf
stc
in
xorl
scas
mov
push
fwait
lock
popf
imul
xchg
lret
out
out
lret
or
lods
mov
out
sahf
outsl
leave
mov
push
dec
rep
shlb
out
and
and
adc
aas
out
ljmp
movsw
sub
call
push
push
dec
repz
shlb
out
es
ljmp
and
jl
outsl
inc
add
test
mov
roll
insb
and
add
sub
push
roll
shlb
cs
out
jo
xchg
das
xchg
mov
test
testb
aam
mov
and
repz
movsl
mov
stc
mov
and
out
out
lret
or
insb
repz
cmp
ljmp
push
sub
mov
scas
pop
sub
sub
jg
int
in
out
iret
pusha
ljmp
scas
neg
shl
adc
test
sub
int
out
sub
pop
mov
cmp
and
lods
push
inc
int3
movsb
and
insb
std
std
pop
push
movsb
outsl
mov
ja
lret
and
mov
and
pop
pop
and
mov
fsts
push
insl
out
sub
mov
add
sahf
and
pop
out
mov
and
movsb
cli
out
shrl
fisubrl
xchg
movsb
es
test
std
and
mov
sahf
and
stos
lods
pop
movsb
mov
test
jp
lret
pop
loope
or
dec
call
pop
and
nop
lods
test
std
in
lret
rol
and
and
dec
out
dec
and
cwtl
xor
cltd
movsb
movsb
gs
scas
idivl
cmpsb
push
js
mov
fiaddl
insl
push
push
jae
and
jne
test
lock
test
sub
sbb
out
pavgw
mov
out
cmpsb
lods
jle
mov
ljmp
nop
and
lret
push
out
insb
rcr
mov
pop
jg
push
pushf
sub
cmpsb
popa
mov
std
sub
fisubl
pushf
mov
push
scas
mov
lds
stos
enter
movsb
pop
xchg
pusha
cmp
andb
mov
scas
in
cmp
movsb
and
and
lods
cmp
jmp
jl
lods
pop
mov
jo
enter
out
out
insb
sub
sub
outsb
lcall
ret
mov
mov
es
cwtl
outsb
ds
jl
arpl
insl
mov
pop
movsb
and
cmp
jmp
push
enter
stos
movsl
shl
push
mov
enter
mull
mov
stos
out
fs
rol
das
push
cmovp
mov
loopne
cmp
mov
in
movsb
inc
insl
call
pop
out
add
cmpsb
sbb
js
push
movsl
pop
push
imul
in
test
push
mov
pop
lods
pop
movsb
outsl
pop
es
cs
out
mov
or
push
sub
jle
pop
pushf
loop
test
bound
stos
mov
stos
outsb
jmp
fldcw
dec
inc
popa
out
push
push
lret
pop
jg
push
stos
insl
movsb
jecxz
sub
push
arpl
fisubl
out
push
ds
out
mov
dec
into
pusha
out
sub
push
jmp
orl
shl
sub
stos
sub
test
pusha
mov
lret
aam
jl
push
cmpsb
ucomiss
lret
xchg
imul
movsb
sub
adc
cmp
ljmp
lods
sti
cmp
sub
movsb
insb
cmpsb
ret
or
js
test
mov
mov
loopne
insl
dec
in
mov
push
shrl
and
movsb
and
out
add
mov
jmp
mov
outsl
xchg
fs
sub
pop
in
mov
lock
push
rcrl
pop
int
fsubs
rol
jmp
or
xor
flds
mov
and
ret
jge
cli
out
shl
movsb
pop
jecxz
fldcw
add
cli
xchg
pop
nop
aad
dec
push
stos
iret
mov
and
iret
les
cli
lods
enter
sub
test
xor
ficoml
cmp
int
inc
fisubrs
and
out
and
movsl
lods
into
inc
addr16
scas
ss
xchg
add
cli
gs
fsubs
sahf
ja
outsl
jl
fldcw
mov
shll
test
in
outsl
outsb
push
sub
ret
and
lods
lods
xchg
cmpsl
jmp
repz
ljmp
loop
mov
lret
or
movsb
and
xchg
test
adc
in
js
idivb
cli
mov
push
das
movsb
xchg
imul
inc
test
sub
enter
outsl
out
inc
call
subb
mov
test
gs
subl
and
out
std
lret
subl
cmp
sub
out
loope
lret
subl
insl
leave
shrl
mov
into
mov
lds
data16
push
inc
cmp
sub
lret
jb
jecxz
and
sub
fwait
push
or
test
fidivrl
lret
leave
lret
and
cli
fdivl
xchg
shrl
lods
ret
cmpsl
push
repz
cs
push
jecxz
lret
sub
dec
in
xorl
popa
scas
sub
mov
mov
fisubs
cmpsb
stc
mov
sub
sbb
adc
mov
cmp
mov
push
xchg
sub
aad
jo
cmpsb
jle
mov
out
and
int3
lods
jns
stos
xchg
cld
test
lods
in
cmpsl
sub
cmpsb
leave
pushf
or
test
cs
sbb
and
lods
out
std
push
sub
test
lods
sahf
dec
outsb
test
xchg
jl
ret
gs
ror
lea
movsb
loop
movsb
cli
or
test
js
and
push
cmpsl
fisubrs
lret
pop
and
mov
push
mov
int
test
std
xor
lret
in
test
lea
or
test
fisubrs
aas
ljmp
dec
mov
pop
test
sahf
lret
mov
or
imul
scas
mov
sub
mov
mov
cmpsl
fisubrl
adc
sarl
sub
test
ror
movsl
pop
or
repz
cs
in
test
or
repnz
icebp
cmp
call
fsubrs
call
loope
fs
outsl
addr16
fisubrs
lret
scas
into
subl
xor
dec
pop
in
mov
cmp
lods
out
subl
pop
in
or
test
lret
xlat
pop
mov
in
cmp
test
mov
enter
sub
and
pop
sub
lcall
popf
pop
xchg
push
test
fdivs
push
pop
fcomp
jl
mov
movsb
subl
and
push
inc
scas
dec
das
int
sub
lea
loopne
push
das
push
sbb
sub
scas
movsl
adc
mov
sub
fldcw
test
jmp
test
adc
test
mov
stos
test
cmp
repnz
jmp
stc
scas
or
sub
sub
les
sub
mov
lret
cli
scas
in
cld
ljmp
das
fldcw
lcall
mov
into
and
sub
call
sub
mov
stos
das
in
ljmp
and
pop
push
push
push
lret
cwtl
push
jmp
push
in
test
shrl
dec
push
js
and
sbb
cld
or
pop
sub
fldl2e
sahf
leave
push
stc
mov
jmp
mov
pop
xchg
dec
push
jns
push
subl
sub
cmp
sub
cld
fiaddl
pop
cli
jl
pop
ljmp
mov
mov
pop
movsb
dec
pop
jp
fisubrl
sbb
mov
cmp
sub
lret
sub
jl
movsb
dec
test
movsl
out
out
outsb
sahf
lret
mov
mov
loope
ret
mov
sub
in
sub
scas
mov
pop
and
das
imul
mov
pop
mov
pop
sub
mov
int3
push
cmp
loop
rcl
frstor
mov
pop
insb
jno
insl
push
loop
lret
jp
out
in
jecxz
push
fcoml
test
xchg
outsl
mov
loopne
out
push
pop
out
fisubl
jecxz
pop
push
and
xlat
int3
jmp
sbb
push
pop
jecxz
and
xchg
pop
scas
bound
out
loopne
push
shr
shr
adc
sub
push
in
or
push
in
pop
jecxz
sub
arpl
mov
insl
lcall
inc
push
loope
adc
push
data16
sti
shrb
das
sti
shlb
and
jmp
das
lods
shr
sub
movsl
shlb
pop
and
pop
in
inc
fisubl
inc
frstor
mov
das
pop
shrb
sbb
sub
out
outsb
push
pop
and
mov
sub
loope
jnp
ficompl
sbb
pop
addr16
fldt
pop
scas
stc
test
pop
jmp
cmp
push
sbb
cld
ds
aam
insb
pop
fisttpl
cs
int3
in
fsubrp
inc
pop
pop
and
jmp
or
dec
dec
stos
inc
clc
pop
iret
out
out
test
rcrl
mov
out
outsl
and
xor
mov
stos
shrb
int3
ds
out
sahf
fs
out
scas
pop
lret
sarl
pop
cmp
pop
mov
stos
lcall
add
or
pop
stc
stos
push
xor
iret
lret
loope
pop
mov
stos
or
fists
inc
and
in
std
sbb
mov
and
fcoms
mov
iret
pop
sahf
and
push
repnz
loope
sub
sub
insb
pushf
in
and
or
call
jne
ds
and
dec
stos
enter
gs
jmp
fwait
popa
pop
out
shlb
jl
jmp
imul
ljmp
push
pushf
iret
shr
faddp
sub
stc
in
fmulp
add
lods
loop
mov
xor
xor
pop
cmp
push
or
out
rcrb
fidivrl
jmp
jmp
sahf
outsb
cld
ret
sub
cltd
adc
pop
fisubrs
cs
jmp
cmpsl
lds
test
mov
cltd
stos
mov
imul
mov
insb
imul
icebp
stc
cmp
and
icebp
call
stc
stos
andl
cmp
stc
mov
stos
mov
sub
inc
cmp
cmpsb
out
push
leave
ja
sub
test
mov
cmc
add
mov
sub
pop
inc
das
push
ret
jmp
stos
hlt
mov
jns
inc
pusha
testl
sub
lods
mov
sbb
or
imul
insb
stos
mov
sub
cmp
or
jmp
test
loope
cmp
cli
mov
test
sub
mov
add
dec
mov
loope
leave
mov
std
cmp
jp
stos
nop
cltd
loope
ja
push
dec
int3
mov
pop
ljmp
cmp
loope
sahf
insl
dec
inc
popa
sti
jge
cmpsl
mov
leave
mov
pop
sub
and
adc
bound
xor
test
xchg
jmp
icebp
xchg
ljmp
sti
pop
ljmp
arpl
sub
ljmp
int
stos
xor
pop
cmpsl
sub
add
stos
aad
and
es
ja
jno
xchg
xchg
daa
ds
out
mov
cmp
sub
data16
mov
pop
outsl
cltd
jmp
test
and
ljmp
mov
and
les
js
mov
sub
lcall
push
mov
cs
jmp
fwait
int
movsb
sbb
cs
stos
loopne
cmp
pop
and
xor
sub
mov
in
pop
shr
jno
jns
pop
pushf
insb
mov
pop
or
out
dec
loop
adc
sub
stos
pop
or
pop
stos
sub
mov
enter
nop
stc
and
sub
cmp
jge
call
stos
jle
inc
ljmp
lods
mov
int
stos
fmul
and
mov
pop
and
sbb
popf
pop
lcall
jns
out
nop
cmp
jnp
and
into
lods
mov
pop
mov
loopne
or
cmp
adc
lret
xchg
imul
inc
stos
and
push
push
xchg
icebp
push
inc
jecxz
and
dec
dec
stos
mov
stos
sbb
mov
aad
dec
cmpsb
fldenv
sbb
test
stos
jmp
jmp
call
inc
pusha
in
scas
mov
sub
mov
or
cmp
cmp
lods
mov
adc
and
bound
sbb
scas
jp
ss
fldt
dec
lods
xchg
mov
push
in
sub
pusha
call
lods
sahf
fisubrs
icebp
jmp
fisubrl
adc
jp
imul
jmp
push
aam
out
sbb
cltd
sub
call
into
xchg
jecxz
in
aam
stos
push
jns
dec
cli
fbld
or
gs
std
push
out
or
mov
loope
and
fsubp
adc
jecxz
cmpsl
fmul
cld
insb
mov
or
les
xchg
cmpsb
mov
pop
push
outsl
sti
push
int
and
in
stos
mov
or
out
les
loopne
lods
lods
mov
push
stos
in
cltd
nop
outsl
push
rorl
in
cmpsb
inc
in
sub
std
inc
mov
sti
sub
sub
sbb
pop
jmp
in
movsl
mov
adc
mov
inc
push
sub
sub
iret
xor
out
sub
jmp
sahf
push
sub
cwtl
stos
shll
aaa
negb
push
sbb
loop
stos
fs
mov
push
dec
jno
dec
sub
ffree
xchg
dec
repnz
sub
xchg
int
sub
sub
sub
cmpl
leave
mov
jmp
popf
sbb
push
and
arpl
pop
lcall
and
adc
xchg
test
push
arpl
lahf
mov
sti
dec
notb
and
outsb
nop
jmp
mov
clc
mov
sub
mov
jmp
or
xchg
popf
mov
ljmp
dec
negb
pop
fld
dec
pop
cs
mov
push
mov
sahf
out
out
into
fs
sub
out
lods
sub
cwtl
push
scas
pop
adc
lods
pop
sub
stos
fwait
pop
out
or
lods
ja
cli
popa
sub
push
cltd
movsb
les
mov
in
call
outsb
pop
gs
mov
and
int3
xchg
into
fdivr
iret
in
stos
call
and
jl
fnstcw
mov
outsb
ljmp
clc
fdivs
push
ljmp
in
insb
sub
cli
push
pop
gs
scas
and
clc
and
xor
dec
xchg
xchg
cli
jmp
scas
leave
fdivrl
lahf
insb
jecxz
and
pusha
leave
xchg
loop
or
and
sbb
imul
dec
jp
jmp
sbb
xor
stos
out
rorb
mov
mov
jmp
stos
xchg
inc
test
test
add
sub
ds
in
pinsrw
push
jl
sub
stc
pop
int3
dec
mov
jmp
pop
add
das
jo
xchg
fimuls
cwtl
dec
sub
loopne
jmp
outsl
mov
cmpsb
test
ja
subb
lods
mov
test
call
pushf
fucomp
out
test
in
aaa
fcomps
push
fdivrs
jge
sub
fidivrs
into
mov
add
data16
call
adc
sbb
enter
cmp
fwait
adc
or
icebp
lods
insb
shrl
and
fildll
outsl
pop
and
mov
cld
lahf
insl
fucomi
dec
lahf
addr16
mov
lahf
repnz
sub
jg
stos
sti
in
arpl
out
les
into
shr
jmp
xchg
ficompl
lods
dec
daa
adc
cmc
and
sar
fisubrl
leave
iret
ret
sub
fsubrl
sbbl
jl
lds
mov
jecxz
lds
repz
mov
outsb
push
ljmp
je
ljmp
pushf
xchg
enter
mov
jp
dec
sbb
nop
lahf
imul
cmpsb
ror
and
imul
scas
xchg
ret
cmp
loop
push
mov
mov
jl
loopne
and
dec
loopne
gs
das
lods
cmpsb
call
jmp
scas
xor
inc
jmp
sub
xchg
push
inc
pop
and
lret
aad
loope
mov
insl
mov
lods
scas
jmp
jb
cltd
test
scas
sub
push
nop
sbb
js
mov
das
xchg
clc
int3
js
in
pop
clc
pop
cmpsl
pop
enter
push
jmp
test
cltd
cmp
pushf
pushf
lcall
mov
arpl
sti
insb
sub
outsl
add
stos
pop
jecxz
sub
pop
push
lds
and
sub
mov
cld
inc
leave
pop
sub
out
xor
dec
dec
or
sbb
mov
push
and
push
fisubs
cmp
pop
mov
insl
lock
aas
imul
sbb
dec
sarl
xor
pop
subb
push
movsl
add
pop
sbb
push
sub
leave
sahf
mov
iret
push
lea
sub
fsub
aaa
xchg
in
js
lea
das
inc
and
xor
sub
ljmp
xchg
and
push
dec
dec
push
fsubl
loope
dec
pop
push
stos
jle
out
subb
or
stos
cmpsb
data16
sub
or
sub
and
pop
pop
sub
jecxz
shrb
lcall
repz
bound
popa
shrl
cmpsb
test
int
cmpsb
pop
fmul
pop
push
push
mov
jl
fstpl
in
jge
or
sub
add
jle
int3
sub
fs
mov
scas
cs
push
fmuls
cs
mov
and
scas
int
mov
test
outsb
inc
sbb
mov
loopne
pushf
sub
pop
pusha
inc
js
fsubrl
and
iret
imul
out
out
sub
in
loop
loope
ljmp
mov
nop
sub
xor
xchg
adcl
add
pushf
mov
out
in
popf
ljmp
pop
imul
pop
lods
cmp
sub
loope
insb
or
sub
sub
adcb
xor
or
fldl
fisubrl
test
stc
enter
fsubrl
in
notb
in
js
push
dec
dec
push
loope
int
cmpsb
sub
outsb
out
jge
sbb
xor
out
mov
mov
shl
mov
vhaddps
mov
sub
pusha
and
sub
in
int3
ficoms
adc
mov
int3
push
fs
lods
sub
pushf
push
sbb
outsb
mov
sbbl
fldcw
cmp
sbb
insb
int3
sahf
insb
cmc
in
repnz
scas
fs
push
and
je
outsb
pop
pop
mov
ljmp
lock
js
xchg
sbb
popf
sahf
cmp
out
stos
mov
stc
movl
xchg
jl
xor
sub
lret
cmpsl
jmp
inc
mov
mov
fisubrs
rcrb
movsb
sub
sub
mov
adc
xchg
lret
ficompl
dec
lret
push
jnp
gs
das
mov
subb
repz
call
outsl
into
dec
repnz
mov
scas
lock
sbb
pop
fistpl
jns
jmp
dec
or
cltd
pop
inc
push
pusha
pop
mov
pop
push
sbb
cs
sbb
mov
shrb
loope
pop
ret
push
add
ret
sbb
scas
inc
mov
push
mov
pushf
imul
testb
test
jg
imul
and
xor
mov
loope
and
arpl
or
ljmp
repnz
jmp
push
cwtl
loope
jbe
and
clc
shrl
mov
and
cmp
rclb
dec
loope
dec
nopl
insl
mov
aaa
or
test
and
xchg
mov
push
and
mov
mov
cmp
stos
push
daa
sub
stc
scas
xchg
and
stc
in
or
cmp
scas
pop
mov
push
clc
ss
outsl
test
pusha
insb
stos
movsb
test
out
jecxz
scas
loop
js
fisubl
in
and
jae
pop
int
mov
and
shll
sub
cltd
and
xchg
cs
leave
dec
pop
lods
insb
and
lds
int
mov
stos
lods
fsubrl
hlt
mov
jno
adc
sbb
clc
and
sub
sub
pushf
mov
and
test
push
scas
or
stos
in
sbb
out
mov
cmpsb
out
aas
mov
mov
sub
test
pop
sbb
and
nop
loope
out
aad
stos
sub
in
shrb
lds
inc
mov
mov
xchg
cld
sub
push
stos
dec
lods
out
jmp
push
clc
xor
cld
scas
dec
rcrl
cmc
xor
int3
movsb
mov
imul
scas
ljmp
and
loop
ljmp
das
jmp
leave
shlb
pusha
rcl
or
js
test
in
rorb
in
scas
pop
in
das
int
xor
push
into
sub
mov
and
or
in
ret
mov
push
fnstsw
or
scas
jmp
and
sbb
call
test
test
or
jmp
or
xor
jle
mov
or
arpl
stc
fsubrl
scas
and
cmc
mov
jle
int
sub
in
out
cmpsb
call
sti
pop
mov
pop
loopne
imul
or
jmp
xchg
mov
iret
pop
fs
push
mov
in
sub
shrl
mov
jmp
scas
sbb
lods
stos
ja
and
loop
sub
mov
add
pop
int3
loope
in
outsb
pop
jns
in
scas
push
lock
divb
and
pop
in
movsb
dec
movsl
jae
scas
pop
movsb
movsb
out
shr
mov
in
ficompl
xor
and
fsubrl
dec
push
mov
sub
into
or
scas
sti
insb
in
test
cmpsb
mov
test
mov
adc
jbe
or
jle
imul
mov
sub
iret
movsl
mov
pop
test
stos
lods
f2xm1
imul
cmp
add
sub
rorl
xchg
xchg
inc
out
fmuls
sub
std
pop
stos
stos
data16
sub
test
stos
int
jecxz
adc
test
loopne
test
pop
int3
mov
out
xchg
loopne
pop
pushf
xlat
xchg
outsb
pop
lods
pop
outsb
sub
out
call
and
insl
and
andl
test
sub
in
addr16
in
rclb
jmp
stc
and
mov
xchg
jmp
sub
pop
fldt
insb
or
enter
ss
jmp
dec
push
push
clc
cmc
into
cmpsl
sbb
test
or
das
sub
and
mov
add
cs
scas
adc
pop
lods
mov
adc
movsl
jae
mov
insl
lods
shrb
fsubrl
in
lret
test
push
lods
fldcw
arpl
popa
sub
bound
push
jmp
push
sub
das
sub
and
iret
adc
dec
and
jmp
or
jmp
out
es
bnd
loop
daa
nop
lods
sbb
loopne
push
mov
xchg
and
mov
clc
mov
aas
pushf
stos
sub
popa
push
pusha
cmp
push
test
fnstsw
fsubr
jecxz
in
sub
call
clc
pop
mov
sub
dec
cmp
lods
cmp
mov
push
stos
out
cli
sub
pop
dec
int3
mov
fs
mov
insb
jo
sbb
sub
dec
andb
data16
into
cmp
inc
mov
es
dec
enter
and
scas
or
loop
gs
das
lods
mov
insl
mov
push
data16
lods
pop
stos
stos
adcb
mov
fwait
inc
dec
outsb
fs
and
lods
mov
or
test
insb
test
movsl
test
sub
mov
insl
pop
repnz
lods
call
mov
jecxz
mov
in
aas
inc
mov
fsubr
ds
sub
push
push
insb
ljmp
sub
pop
scas
dec
mov
lret
add
sub
into
lods
iret
out
cwtl
test
int
adc
cld
scas
stos
es
sbb
push
inc
dec
pop
lret
arpl
inc
ljmp
pop
iret
aam
test
fldcw
dec
lret
int3
inc
test
jmp
sub
enter
or
stos
out
iret
test
es
cmp
insb
iret
aaa
sub
and
das
test
lret
int
mov
jmp
push
jne
pop
aam
test
dec
mov
mov
ljmp
dec
jne
and
sub
or
mov
sbb
popf
inc
mov
sbb
or
dec
loop
sub
leave
mov
ljmp
fucomi
out
lret
loop
inc
sub
lret
imul
or
rcl
mov
fists
ret
pop
repnz
xor
jmp
imul
loope
jo
int
dec
imul
mov
frstor
stos
pusha
nop
jno
sub
dec
loop
sub
xchg
cmp
xorl
jl
sub
lret
pop
sahf
movsl
inc
mov
inc
cld
scas
dec
and
nop
lods
dec
mov
lret
outsb
pop
in
and
popa
leave
in
and
lea
and
nop
les
imull
sub
nop
sbb
sub
cmp
sub
test
pop
test
ret
outsl
std
xor
or
gs
int3
add
addr16
leave
jle
xchg
xor
and
jl
jge
sub
push
cmp
iret
cld
ret
popa
cmp
icebp
mov
sarl
sub
cwtl
stc
pop
ret
or
sub
cmp
int3
inc
dec
pop
push
test
int3
shrb
dec
movsb
in
int3
out
out
insb
sbb
inc
leave
jmp
sub
call
gs
lock
dec
ficompl
mov
inc
insb
add
scas
test
loopne
mov
stos
and
andb
and
xor
pop
cwtl
jmp
add
scas
in
frstor
outsl
outsl
nop
inc
negb
leave
insb
and
imul
push
sahf
call
cli
jmp
xor
mov
mov
shll
imul
arpl
xor
push
outsb
push
sub
insl
ljmp
out
mov
sub
sub
pop
lock
dec
pop
imulb
mov
pop
mov
scas
nop
sbb
mov
push
lods
test
sub
out
dec
int
es
in
arpl
mov
xor
andb
ficompl
and
and
sahf
scas
push
test
and
cmpsl
sub
lods
stos
jecxz
add
cmpsl
mov
fs
shrl
and
jo
scas
out
shll
outsb
jae
mov
and
das
add
iret
or
jg
fldt
in
sar
leave
pop
push
cs
insb
fldt
mov
test
add
cltd
sub
jmp
gs
ljmp
mov
leave
xchg
sbb
ljmp
sub
xchg
mov
shll
stos
test
sub
cs
push
cwtl
mov
push
sbb
test
icebp
popf
mov
mov
fimull
js
or
aaa
push
jmp
dec
xchg
push
cmpsb
in
ljmp
xor
movsb
cli
pop
leave
sub
jl
sub
enter
loope
sub
mov
js
test
jmp
dec
fcmovnb
mov
ljmp
jle
mov
fmulp
imul
punpckldq
test
in
xor
shrb
xchg
push
movsb
test
dec
test
insb
mov
movsb
in
mov
scas
sub
lcall
jmp
lret
stc
int
pop
push
xor
mov
lret
andb
icebp
in
inc
and
push
int
mov
push
push
or
push
in
jmp
fadds
and
nop
cs
sub
lret
lods
xor
mov
dec
jp
aaa
stc
jmp
fists
ficoml
mov
inc
push
mov
stos
pop
decl
sub
data16
out
leave
fidivrl
pop
jge
push
mov
repz
lods
pop
push
lea
jnp
in
and
push
inc
lods
loopne
push
jecxz
fstpl
loop
outsb
aaa
mov
scas
sub
add
add
mov
push
enter
test
pushf
in
mov
xor
int
sub
movsb
ret
sbb
xchg
xor
ljmp
xchg
adc
ljmp
scas
sub
stos
loope
loopne
out
cmpsb
repnz
and
sub
movsb
fistl
or
pop
movsl
ffreep
mov
dec
pop
in
mov
push
push
or
imul
lcall
cmpsb
in
test
mov
mov
push
sub
scas
repz
push
int3
sbb
fwait
sub
cwtl
sub
addr16
dec
lods
in
or
jmp
pop
sbb
stos
jl
es
out
mov
test
fwait
iret
sub
push
mov
bound
jmp
iret
std
adc
inc
ljmp
stc
pminsw
inc
fscale
test
jecxz
nop
sub
stc
sub
shrb
sbb
ljmp
imul
fldl
imul
fmull
mov
test
sub
mov
loopne
insb
adc
and
imul
mov
iret
imul
movsb
pop
sub
ret
scas
loop
das
sub
pop
xor
stos
dec
mov
push
lods
jmp
mov
xor
dec
sub
stos
push
push
xor
pop
insb
sahf
fimuls
push
cmpsb
or
or
scas
add
mov
in
pushf
test
ret
cld
scas
pop
outsb
out
in
in
cmp
movsb
loope
add
icebp
inc
out
xchg
or
cs
arpl
sub
and
cmp
lods
mov
push
inc
jp
scas
and
lods
cltd
fildll
into
or
call
popa
bound
cmc
pop
repnz
into
push
scas
les
dec
loopne
or
cmpb
cld
scas
jmp
aad
sub
in
fisubl
or
dec
popa
sub
sub
cli
inc
dec
dec
enter
shrb
fwait
sub
inc
inc
inc
adc
jmp
outsb
mov
sbb
sub
mov
pop
mov
adc
jmp
stos
into
loope
es
leave
mov
stos
scas
cli
shrb
mov
xchg
and
insl
imul
cmp
mov
mov
sub
fisubl
aaa
mov
or
and
out
shr
pop
lret
inc
in
or
out
cmp
stos
pop
jmp
out
stos
sub
stos
inc
adc
lcall
or
leave
fs
xlat
or
ds
mov
outsl
sub
mov
dec
dec
sub
and
or
punpckhwd
enter
icebp
and
mov
es
imul
lahf
sbb
test
and
stos
pusha
jp
lret
cmp
sub
frstor
mov
fldt
out
or
and
clc
imul
leave
jo
mov
loop
cmpsl
jg
cmpsl
push
mov
jp
leave
ret
jmp
fndisi(8087
js
lahf
inc
xchg
xor
xchg
into
mov
das
mov
js
jmp
or
and
fisubrl
imul
icebp
mov
in
jecxz
xorl
loope
clc
lret
inc
roll
stc
and
xchg
pusha
insl
andl
call
mov
stos
stos
sub
cs
jb
int3
xchg
pop
out
lret
frstor
jmp
and
shl
sub
out
out
ds
fisubl
jmp
movsb
mov
cs
lea
sbb
jmp
push
cwtl
callw
fs
std
inc
into
or
pop
dec
push
into
arpl
dec
movsb
jmp
bound
mov
mov
jp
in
das
sbb
imul
sub
cs
and
loopne
scas
loopne
pop
sbb
lods
jmp
lds
pop
dec
test
loop
dec
int3
jmp
pop
or
imul
xchg
pop
mov
ljmp
popa
dec
into
pop
lahf
and
mov
mov
pushf
push
lcall
fldcw
fisubrl
icebp
and
sub
bound
xchg
pop
cs
out
imul
push
jle
in
in
push
cmpsl
imul
popf
mov
fdivrp
out
adc
and
sub
pushf
dec
dec
mov
and
and
adc
sub
int3
add
jb
loope
sub
and
adc
cltd
cs
jns
sub
arpl
int3
lods
lret
out
mov
and
lds
jp
in
jb
ljmp
scas
inc
sahf
out
mov
test
fs
das
and
dec
loopne
sarb
lock
sub
shlb
outsl
sub
dec
cs
fsubrs
jmp
push
sub
fs
out
cmp
fbld
pusha
out
mov
insl
out
outsb
pop
outsl
sub
jmp
adc
add
in
das
test
inc
dec
test
int
stos
movsb
fwait
test
stos
jmp
or
test
mov
rol
mov
lods
imul
dec
imul
scas
cmp
test
add
loope
shrb
xchg
in
out
inc
mov
jecxz
xor
add
sub
rcrl
jmp
jmp
arpl
mov
lret
fldl2e
fistps
mov
es
lods
dec
ret
jmp
push
mov
ss
pop
js
sub
jecxz
lds
arpl
or
sbbb
lcall
popa
stos
lods
mov
lret
xchg
mov
inc
sub
imul
inc
sub
imul
es
jb
adc
imul
xchg
lds
cs
and
mov
in
test
shrb
lea
push
mov
cmp
in
sub
mov
pop
rcrl
dec
cmpsb
jge
movsb
pusha
jge
subb
push
ljmp
cltd
movsb
aaa
push
out
sub
push
inc
test
leave
cmp
cmpsl
outsl
add
stos
pop
subl
jmp
fucom
movlps
jbe
fmull
mov
and
and
rclb
push
push
fwait
loop
xor
and
mov
jmp
mov
insl
int3
dec
sub
mov
hlt
sahf
out
pop
sub
push
sub
jo
leave
jge
cmp
pop
in
cmp
scas
pusha
sub
out
xlat
cmp
sub
int
out
shl
loopne
sti
ret
loop
cmp
mov
jecxz
adc
imul
xor
incl
scas
shl
js
mov
loope
aas
movsb
shl
pop
test
cltd
ret
sub
sub
mov
jmp
notl
das
scas
sub
cs
cmp
int3
add
mov
nop
sub
bound
push
dec
in
out
sbb
fsubrs
je
shl
lods
scas
push
in
sti
and
xchg
insb
sub
mov
enter
decl
out
out
test
test
push
out
cmp
or
mov
mov
ret
stos
mov
pusha
in
ret
fcompl
fwait
push
movsl
mov
dec
sbb
push
sahf
lods
cmp
mov
stos
into
jecxz
lret
pop
or
dec
sub
call
dec
lret
add
or
out
scas
sub
jmp
and
xor
imul
call
sub
jp
iret
mov
in
mov
call
shrb
and
dec
sub
imul
ss
es
shrb
cs
lret
movsl
jmp
imul
shrl
js
stos
jmp
push
lods
lods
sub
jmp
js
mov
out
mov
jle
sub
pop
xchg
pop
in
fcmovnu
out
out
mov
pop
test
hlt
push
ljmp
or
ja
and
push
sub
shll
stos
push
cmp
jnp
int3
add
push
cmpsb
jmp
stos
cmpsb
mov
pop
in
sub
das
outsl
dec
push
xlat
cs
jbe
jmp
shll
push
lock
movb
mov
lods
dec
pop
sbb
pushf
jmp
dec
push
movsl
pop
or
mov
push
mull
sub
push
popf
xor
test
add
lods
out
jnp
push
std
cmc
mov
cmp
and
push
push
pop
jp
fildll
stos
and
popl
and
scas
popa
mov
dec
dec
mov
arpl
aad
stos
std
jmp
adc
mov
lods
in
and
dec
lcall
cmpsb
jmp
or
scas
dec
cltd
xchg
addb
test
jns
adc
and
pop
pop
mov
sub
leave
inc
stos
in
inc
cs
pop
fwait
test
das
xlat
pop
sub
pop
push
dec
outsb
inc
bound
test
sub
mov
jecxz
das
imul
negl
aas
pop
adc
test
dec
stos
test
dec
fnstcw
bswap
jmp
leave
jae
jmp
adc
stos
sub
scas
mov
decl
push
into
imul
push
add
in
ljmp
shrb
call
es
incl
shr
and
outsb
iret
imul
sbb
jns
and
movsl
cmp
call
xor
fldl
in
dec
mov
dec
scas
jg
sub
or
ss
ret
aaa
lret
and
push
movsb
loopne
aaa
adc
inc
sub
cs
lahf
push
outsb
fimuls
lret
mov
mov
test
loopne
sub
scas
pop
xchg
jbe
sub
inc
fisubrl
mulb
stos
mov
sahf
mov
sub
mov
loop
sbb
pushf
subb
icebp
sbb
stos
pop
insb
imul
out
xchg
lret
dec
pop
fsubrs
dec
fcompp
pop
mov
jmp
inc
xchg
cld
pop
aad
lods
test
sub
lret
ret
pop
shrb
pop
js
in
xor
jecxz
push
cmpsl
add
inc
fstpt
mov
test
xor
sub
mov
cmp
sbb
cmp
dec
sub
cltd
shrb
xor
mov
imul
dec
int3
insl
ljmp
jmp
jmp
in
sub
push
imul
cwtl
clc
into
fimuls
nop
insb
inc
outsl
or
popa
das
into
adc
movsb
and
pop
cs
out
js
rcr
int
out
pusha
int3
fdivr
jmp
sub
dec
out
mov
mov
dec
fwait
pop
mov
ljmp
mov
pushf
mov
in
insb
es
jo
stos
lcall
dec
fsubrs
stos
stos
test
or
sub
cwtl
sbbl
nop
pop
sbb
mov
popf
push
xchg
in
rcrb
mov
stos
dec
popa
pop
in
push
lock
mov
jmp
cwtl
jmp
jo
jle
mov
insl
jecxz
pop
and
scas
popf
mov
das
fcmovnb
scas
jae
pop
or
jmp
xor
mov
and
sbb
daa
jp
loope
loop
mov
out
jcxz
push
in
loop
and
inc
repz
push
mov
das
xlat
pop
cmp
imull
in
shl
cld
fisubrl
adc
sub
imul
out
stc
fucomp
sub
sub
call
sahf
cmpsl
pop
and
popa
dec
sub
and
lds
int3
fmull
subl
cmp
push
push
pop
sub
movsl
test
int3
mov
ljmp
xor
ret
sub
and
and
add
shrb
loope
xchg
ljmp
int3
and
adc
scas
cmp
fsubr
pop
cmp
outsb
dec
xchg
ss
and
in
fisubl
call
pop
lcall
jbe
or
je
pop
pop
cmp
std
sub
pop
push
mov
cmp
in
insb
or
lahf
and
scas
popa
imul
sub
addr16
fisttpll
pop
imul
cmp
or
mov
mov
imul
mov
fcmovu
mov
cwtl
cld
into
sbb
lsl
push
adc
mov
divl
aad
into
lahf
pop
push
xchg
in
lret
sahf
xor
in
pop
or
insl
mov
nop
mov
pop
in
adc
iret
add
fmull
test
xor
out
repz
jno
icebp
jns
add
call
lods
and
insb
sti
int3
xor
add
scas
xchg
scas
out
mov
or
nop
lods
bound
lcall
les
popa
stc
jmp
dec
mov
sahf
push
ficompl
or
sub
mov
jnp
jmp
mov
stos
ret
jp
andb
scas
inc
mov
dec
popa
jl
and
iret
and
xchg
iret
push
push
adc
int3
or
pop
or
lahf
std
ds
and
and
xchg
out
fisttpll
sti
push
push
sti
dec
xlat
mov
cs
hlt
popf
push
imull
fmul
xchg
divl
leave
sub
or
ljmp
pop
ret
imul
loop
lcall
mov
pushf
in
cmp
roll
stos
imul
jmp
inc
iret
scas
leave
xchg
test
lods
jmp
mov
pusha
pop
mov
inc
stc
dec
adc
out
xchg
pop
loop
cmc
fmul
loopne
mov
fucomp
pop
imul
cltd
imul
lret
test
mov
out
xor
out
nop
dec
push
shll
pop
in
jl
xchg
jle
arpl
mov
bound
xor
mov
dec
call
or
dec
subl
xchg
test
dec
icebp
or
cmpsb
xor
mov
adc
movd
jns
sahf
test
cs
cs
aas
push
dec
lret
test
dec
loop
fistps
jecxz
loopne
pop
addl
sbb
and
loop
rcrb
addr16
std
or
loope
sub
subb
push
int3
pop
mov
loopne
ret
or
xchg
pop
pusha
pop
loope,pn
int
cmpsl
fabs
into
sub
cs
pop
out
or
fs
sarb
outsb
int3
xchg
and
and
dec
pop
out
or
and
ds
cmp
mov
mov
adc
add
lahf
sbb
fisubrs
aas
mov
push
jle
fs
lcall
inc
cmp
push
in
repnz
sub
in
push
rol
push
push
scas
jb
inc
cli
pop
jb
inc
addb
mov
pop
inc
xchg
scas
aaa
fs
std
mov
push
hlt
push
fimuls
push
std
sub
pushl
icebp
arpl
out
or
loope
dec
push
sbb
scas
pop
subl
jmp
mov
lods
xlat
jmp
push
pop
pop
repnz
mov
pop
mov
ljmp
pop
sub
jecxz
sub
dec
in
cmc
decl
sbbl
loope
cmp
pop
jae
loop
out
int
inc
out
or
loopne
adcb
sbb
and
scas
in
adc
xor
imul
testl
loop
mov
nop
sarb
cld
push
ret
cmp
into
iret
jmp
inc
mov
es
in
and
push
out
cli
xlat
pop
mov
push
jns
inc
scas
pop
pusha
leave
lret
and
shll
out
cmpsl
aaa
push
or
sti
lods
mov
ljmp
jmp
dec
and
jge
xor
or
in
inc
pop
dec
cmp
fnstcw
shl
jmp
jmp
mov
fistpl
ljmp
inc
mov
call
pop
int
arpl
popf
lret
ljmp
in
jge
jl
and
in
iret
imul
lods
xchg
leave
xchg
sub
data16
iret
xchg
insb
mov
lcall
scas
cmp
fwait
ret
mov
loop
jae
xchg
mov
adc
or
pop
inc
imul
xchg
mov
negb
js
cld
fmul
in
ljmp
repz
mov
push
int
mov
iret
lcall
lcall
pushf
push
imulb
lds
adc
in
push
jecxz
xchg
mov
lret
lahf
fdiv
pop
or
bound
into
pop
xor
jmp
dec
pop
out
gs
int
and
int3
cltd
insl
xlat
decb
jb
adc
mov
pop
insl
les
push
add
xor
shld
call
popa
mov
les
sub
je
ret
cs
jle
adc
jmp
push
adc
mov
mov
out
or
jmp
pushf
dec
add
imul
enter
mov
dec
add
popf
add
jne
mov
fisubl
cltd
lcall
ljmp
lcall
rcl
jle
stos
mov
and
sbb
loop
sbb
add
adc
mov
xchg
in
inc
fs
and
leave
mov
dec
stos
pop
sub
or
jb
leave
push
sub
les
lcall
or
cmp
mov
aam
xchg
aad
pop
jns
inc
lahf
push
in
iret
lods
mov
out
jnp
pushf
cli
jmp
mov
lds
mov
sahf
add
sbb
push
aam
mov
cmpsl
sahf
loope,pn
cmp
push
test
adc
stos
cli
fimuls
cmpsb
or
dec
cli
les
adc
outsl
sbb
stc
in
xchg
jb
shrl
push
leave
rorb
or
sub
add
stos
pop
xor
sub
or
jecxz
jl
fdivrs
xchg
push
lods
or
into
ja
shr
jae
lcall
dec
push
push
sbb
push
mov
or
stc
shlb
mov
and
inc
push
cwtl
ret
sbb
mov
dec
insl
mov
push
jo
lahf
outsl
aad
pop
sbb
addr16
mov
push
mov
fidivrl
or
movsb
mov
nop
jmp
sbb
jle
outsl
dec
in
mov
leave
xlat
dec
lods
loope
jle
sub
push
mov
jno
inc
cmpl
cs
in
aaa
or
pop
jecxz
adc
mov
xchg
and
mov
bound
lcall
fidivrl
call
into
pop
push
cmp
ss
test
sbb
or
pop
lret
insb
cmp
and
loop
idivb
sub
cli
fcmovnu
shrb
stos
push
push
sbb
into
repnz
cwtl
pop
cltd
ljmp
sbb
sbb
mov
pop
test
inc
call
mov
fdivrl
mov
sbb
movsb
pushf
leave
out
jmp
push
in
mov
incl
sbb
ljmp
jl
int
jle
mov
jmp
sbb
dec
repnz
insb
fs
out
xchg
mov
in
es
movsbl
sub
inc
push
bound
sub
fnsetpm(287
dec
inc
or
shrb
stos
inc
ds
jge
mov
adc
movsl
inc
rcll
xchg
mov
lahf
pop
cmp
or
cld
scas
mov
lahf
xchg
ret
cli
shrl
inc
lret
iret
scas
movsb
rcrl
into
jmp
mov
repnz
jp
std
sub
dec
cltd
push
repnz
mov
dec
insb
lcall
adc
xchg
jnp
outsl
push
pop
add
stc
pop
pop
pop
mov
add
inc
es
dec
jmp
dec
sbb
xor
push
inc
pop
cs
xchg
mov
out
js
stos
dec
push
mov
ljmp
daa
mov
dec
lretw
xchg
xchg
pop
loop
pop
mov
cmp
push
pop
imul
inc
bound
mov
adc
ja
mov
xchg
or
dec
les
jl
inc
jecxz
stos
data16
ret
cmpb
mov
mov
pop
or
push
stos
mov
mov
adc
sub
vphaddbq
push
std
add
sti
mov
popa
pusha
jge
movsl
jg
jb
outsb
mov
mov
lods
mov
faddl
xchg
xor
rcrb
fsubrl
iret
lcall
inc
lods
pushf
les
mov
outsb
test
pop
lret
cmp
insl
imul
movsb
and
cli
das
pop
loopne
je
push
loope
sub
cwtl
scas
out
cmc
in
jae
test
push
push
push
sbb
push
sub
dec
scas
imulb
sahf
test
fs
pop
jae
cs
xchg
pop
cmp
aad
orb
lds
incb
xor
mov
and
mov
out
scas
mov
in
out
fisttpll
loopne
mov
test
outsb
insb
push
adc
test
dec
lds
inc
dec
in
cmpl
mov
cmc
andl
xchg
sbbl
lahf
cltd
or
imul
and
bound
out
adc
push
push
outsb
pop
mov
std
scas
cmp
jmp
or
cmc
sarb
mov
pop
aad
addr16
data16
xchg
jecxz
mov
dec
outsb
cmp
xchg
dec
jbe
and
scas
movsl
sbb
ss
out
sub
jle
in
rclb
in
fldcw
xchg
adc
cmp
mov
mov
ljmp
cs
cmp
ja
xor
inc
shll
mov
sub
rcll
insl
push
rorb
fcmovb
pop
jno
scas
sub
push
xchg
fisttpll
sbb
add
adc
cmp
pop
popa
sbb
loop
or
out
test
xchg
stos
push
arpl
pop
cmp
es
jg
xchg
inc
dec
sbb
mov
sahf
shr
mov
fnstsw
popf
push
mov
and
ret
hlt
xlat
movsl
sub
loop
mov
pusha
loope
lds
add
sbb
pop
std
jle
push
push
lahf
lret
ja
or
sbb
or
mov
dec
xchg
mov
int
insb
int
mov
cld
cs
mov
mov
sbb
jns
mov
cmpb
inc
test
mov
and
int
pop
sbb
mov
int
cmc
jnp
cmp
mov
fidivs
dec
cltd
jp
xchg
insb
and
lahf
adc
or
push
sbbl
cmp
and
cltd
out
sbb
adc
in
sbb
cmp
ret
mov
pop
daa
pop
loope
jne
mov
pushf
jnp
xor
cmc
repz
adc
rcll
sub
arpl
add
mov
cwtl
fmull
sub
out
adc
test
sub
shrl
jmp
rcr
or
loope
or
sub
pop
push
icebp
loope
stos
push
cmp
pop
mov
cli
or
cltd
lcall
or
int
arpl
cmp
mov
mov
mov
dec
jnp
xchg
mov
xchg
into
push
mov
cmc
sub
loope
cmp
mov
popf
push
inc
sub
lds
sub
push
movsb
sar
andl
lcall
push
sti
mov
push
rol
dec
inc
dec
add
leave
aaa
pop
inc
dec
fldt
loopne
js
adc
sti
pop
fchs
xor
int3
jmp
sbb
jns
sub
mov
jmp
cmpsl
pusha
mov
int
xor
insl
icebp
xor
add
mov
out
sub
adc
and
xchg
sub
scas
push
test
jg
push
inc
jbe
pop
cmp
icebp
std
je
rcll
jmp
pushf
leave
test
cs
cld
push
cmp
jge
cmp
inc
enter
aaa
insb
int3
push
and
repnz
adcb
push
pop
aad
cmp
insl
xchg
pushf
xchg
leave
ficoms
inc
jecxz
aam
int
pop
xchg
cmp
scas
pop
xor
in
int
sub
adc
shll
das
mov
aad
cmp
flds
addb
or
jge
cmp
cmp
cmp
sub
pop
inc
mov
xchg
and
xchg
and
xchg
xlat
xchg
xchg
and
xchg
rorl
mov
cs
stos
ret
in
imul
push
scas
aaa
rcrl
push
cmp
mov
push
cmp
push
out
add
pop
lock
inc
inc
push
jge
and
ljmp
dec
sbb
gs
repnz
std
lahf
xor
js
dec
mov
mov
mov
lds
leave
and
pop
notb
lea
jmp
pop
xor
push
decb
dec
push
or
push
lods
add
sbb
pop
stc
cmp
lea
pop
jecxz
cmp
and
sti
sbb
or
imul
pop
sbb
push
dec
aam
lods
inc
jl
sbb
out
popa
lods
ss
cld
ljmp
and
push
ret
push
jns
inc
out
dec
in
add
pushf
lods
mull
in
adc
insl
mov
data16
xchg
in
mov
mov
lahf
ffreep
fs
into
aas
rcrl
in
push
mov
dec
xor
stc
mov
mov
out
xchg
or
mov
sarb
lods
or
scas
pop
pushf
ss
sbb
into
cmpsl
mov
call
mov
mov
and
cmp
cmpsb
orl
jp
push
lcall
jl
iret
or
mov
xchg
jle
or
lret
and
sub
mov
pop
push
sbb
mov
clc
mov
jmp
lcall
mov
push
add
int3
cltd
pop
stos
or
pop
sbb
test
faddp
jl,pn
mov
inc
loopne
push
push
sub
je
mov
mov
int
jne
cmp
mov
or
out
inc
jno,pn
add
push
int
int
pop
push
in
mov
push
push
scas
cmp
adc
hlt
xchg
or
imul
cs
sbb
mov
test
shl
mov
mov
sub
in
arpl
icebp
jl,pt
and
iret
dec
sarb
jecxz
loope
subb
pop
mov
aam
popf
int
lret
lcall
mov
ficoms
sub
dec
push
dec
jmp
jp
stc
dec
xor
icebp
push
xchg
adcl
clc
je
pop
jbe
ljmp
fnclex
add
mov
push
outsl
fidivrs
push
popa
jge
jmp
ret
add
loope
fstl
xchg
ja
sbb
mull
in
adc
push
inc
fistpl
push
jl
lods
lcall
mov
mov
mov
int
cs
cmp
out
in
je
cmp
add
add
rorl
dec
or
outsl
xchg
dec
sti
pop
push
or
pop
jecxz
imul
mov
and
ret
loope
sub
add
jecxz
pop
imul
jge
loope
xor
xchg
inc
push
jg
leave
mov
adc
std
pop
and
outsb
xchg
push
rorb
icebp
lods
cld
out
pop
xchg
jle
adc
inc
push
sub
roll
pusha
je
sti
xor
mov
bound
xor
sub
ret
daa
xchg
out
pop
bound
loopne
in
int
ficoml
push
fists
je
push
and
adc
jle
push
imul
mov
xor
je
pop
cmp
mov
repz
sbb
bound
sbb
inc
ljmp
sub
lds
pop
push
mov
push
fs
jnp
xor
jno
pop
xor
loop
sub
sub
push
decl
enter
push
cmp
stos
aas
ret
out
cmp
fnstenv
cld
fsts
test
test
jp
movsb
mov
jb
jmp
or
lcall
mov
adc
xchg
imull
cmpsl
sub
mov
jb
clc
push
cs
jp
pop
inc
add
xor
dec
jne
insb
or
push
test
addr16
mov
mov
mov
lock
movsb
mov
popa
mov
cltd
jo
movsl
lock
cmp
pusha
jo
xchg
push
mov
jnp
jmp
scas
jno
push
and
lods
lea
add
bound
stos
lcall
rorb
out
push
out
mov
jl
call
cli
xlat
insl
or
mov
leave
push
adc
inc
inc
or
dec
pop
xor
sti
xchg
xor
fcompl
cmp
sahf
dec
adc
loop
stos
push
push
stos
mov
xchg
jg
mov
rcrb
ljmp
or
scas
int
loope
mov
fwait
push
pop
pop
push
adc
pop
cmp
out
ja
imul
iret
adc
call
sbbb
xor
sub
sbb
js
fisttps
push
sub
out
xlat
pop
mov
cmp
daa
adc
fmull
ret
pop
mov
jmp
sub
jp
roll
out
stc
stos
outsb
movsl
cmp
mov
lcall
stos
add
stc
inc
pop
repz
add
nop
mov
int3
insb
xchg
leave
ljmp
into
subl
test
or
scas
dec
pop
addr16
cs
push
push
push
or
lret
push
str
xor
xor
pop
sub
pop
xchg
sar
mov
ret
out
stos
jge
in
dec
outsl
xor
xor
mov
arpl
xor
inc
ret
xor
jno
mov
xor
jbe
dec
pop
and
push
stos
cmp
mov
insb
shlb
outsb
clc
mov
inc
je
jge
iret
in
outsl
push
loope
leave
dec
insl
loop
cld
pop
push
loop
jmp
out
out
pop
lea
flds
arpl
loop
test
push
push
mov
sbb
in
jge
add
mov
cmp
mov
stc
add
andl
jmp
pop
and
jg
xchg
pop
shll
sbb
sbb
testb
in
fsubs
jmp
adc
push
loopne
mov
mov
pop
sbb
mov
xchg
lret
mov
push
popf
xchg
push
movsl
pop
cmp
loop
add
cmpsl
or
sti
dec
loop
mov
and
xor
fucomip
rol
pop
scas
shl
pop
mov
add
sar
inc
out
insl
stc
push
push
das
jg
jle
adc
mov
xor
xchg
icebp
iret
mov
cmc
xchg
in
jl
enter
xor
out
shlb
movsl
mov
or
jbe
roll
and
cmp
mov
out
mov
sarb
push
sbb
cli
test
jl
int
test
repnz
loope
cmp
out
sahf
repnz
inc
inc
mov
lahf
cmp
icebp
pop
out
jne
cmc
in
xchg
insb
cs
jae
or
jp
imul
adc
lret
sub
push
adcl
loope,pt
insl
lds
cld
adc
out
andps
int
adc
cmpsl
or
movsl
mov
pop
inc
push
push
pusha
xchg
sub
iret
leave
dec
pop
daa
dec
cmp
or
cmp
push
xchg
xchg
leave
or
sti
aaa
idivl
pop
add
cmp
outsb
push
out
or
test
stos
dec
mov
sbb
setg
cli
or
lahf
push
insb
dec
or
pushf
call
mov
xchg
outsl
xchg
mov
loop
pop
out
mov
stos
dec
xchg
lret
xor
pop
cmp
or
jo
cwtl
imulb
repz
in
push
push
jmp
mov
lcall
or
cmp
lahf
dec
sbb
cwtl
mov
mov
push
jo
rcrb
icebp
ljmp
outsl
test
xchg
loope
dec
inc
fsubrl
mov
add
dec
stos
je
out
imul
loopne
xor
adc
movsb
icebp
add
mov
push
sti
adc
inc
cwtl
push
sti
jg
insl
gs
pop
mov
jmp
pop
lahf
pop
add
mov
aad
or
or
mov
xchg
sub
hlt
cmc
inc
roll
push
je
jae
stc
push
pop
jge
sahf
inc
jns
sub
cmp
inc
bound
int
pop
sub
jp
xchg
sbb
movsl
add
inc
cltd
scas
add
pushf
in
mov
outsl
movsb
jl
xor
into
pusha
pop
mov
in
jge
xor
out
clc
jecxz
addr16
jo
mov
mov
dec
incl
loop
std
std
xchg
xchg
push
lahf
dec
insl
dec
outsl
and
sub
push
int3
cltd
popa
cmp
push
sbb
mov
add
popf
outsl
pop
pop
lcall
sbb
into
sub
mov
push
lret
push
lret
sub
ljmp
int
fstl
mov
aas
xchg
bound
mov
loop
sub
xchg
inc
jecxz
jbe
in
or
xor
xchg
bound
scas
add
mov
icebp
adc
enter
ljmp
xchg
test
andl
aas
pop
fisttpll
mov
jecxz
xchg
xor
mov
dec
dec
lea
data16
dec
movsl
mov
fdivl
push
xchg
xchg
mov
push
mov
mov
jl
adc
leave
jns
sbb
mov
int
xor
sub
push
sbb
cmp
sub
jbe
outsb
push
xchg
int
pop
and
push
push
jle
leave
push
in
dec
add
loop
insb
negb
idivb
inc
sbb
jae
cs
insb
lds
sbb
stos
icebp
push
cmp
out
dec
push
cmp
xlat
pop
test
ret
lcall
pop
lret
xorl
push
cmp
rorb
jo
or
sub
loop
fistpl
lds
cmc
pushf
mov
sbb
jl
or
mov
psrad
lds
les
call
cmp
movsb
jl
sbb
push
pop
aaa
pop
push
data16
or
ljmp
mov
or
mov
dec
adc
push
lret
jecxz
push
adc
int
inc
sahf
push
and
push
sub
sbb
outsb
pop
sub
idivl
cmp
roll
ret
add
out
or
bound
or
or
or
out
xchg
lret
gs
out
andnps
pushl
sub
in
cmc
arpl
xchg
sbb
adc
in
xchg
fiaddl
xor
push
sti
jg
jmp
and
addb
cmp
xchg
je
mov
jmp
push
gs
lcall
push
aad
lods
movsb
jg
inc
pop
add
loopne
add
jmp
xor
lcall
mov
push
inc
out
mov
lcall
jp
stos
or
lds
jb
and
fimuls
cmpsl
xchg
cltd
xchg
ja
jle
mov
loope
fdivrp
int3
push
cmp
mov
mov
movsb
jecxz
insw
loop
imul
jl
lcall
loopw
inc
lahf
imul
mov
xchg
mov
stos
mov
arpl
in
push
adcl
icebp
sbb
test
or
or
daa
insb
and
push
data16
dec
std
es
add
out
dec
lret
loope
dec
sbb
xlat
jge
or
jecxz
jne
xor
sub
adc
imul
imul
xchg
mov
ljmp
inc
mov
pop
or
icebp
jp
mov
or
xor
es
adc
lods
inc
addr16
std
adc
xchg
lock
enter
cmp
dec
je
and
push
test
sub
cmp
scas
popf
or
pop
mov
jae
mov
jge
adc
adc
ret
addr16
lds
and
jp
test
or
in
out
xchg
ret
in
popf
mov
cli
sbb
cs
pop
sub
xor
adc
cmp
iret
cmc
loop
pusha
push
das
ret
cmp
mov
sbb
stos
leave
cmp
ud0
sbb
xor
cmp
push
pop
cmp
pop
mov
and
mov
xchg
loopne
jmp
out
mov
pop
ficomps
xchg
inc
pop
arpl
jge
xchg
or
arpl
or
or
push
cmpsb
dec
pop
pushf
outsl
dec
test
out
or
mov
stos
in
cld
pop
lahf
mov
outsb
pop
dec
test
mov
sub
push
or
mov
pop
or
insb
jl
jmp
cmp
xchg
insb
xchg
imul
stos
dec
jge
cld
ror
fwait
js
xor
inc
jnp
icebp
insb
je
in
jl
inc
pop
and
into
ss
jo
push
push
inc
iret
push
jle
push
mov
aad
adc
stos
ds
mov
fstl
pushf
in
push
in
lds
push
inc
sub
nop
je
or
dec
mov
lcall
inc
pop
dec
stc
push
lods
dec
ljmp
push
daa
inc
outsl
cld
jl
in
xor
xchg
ret
test
shll
inc
imul
lret
adc
popa
cltd
mov
jle
rcrb
dec
xor
or
out
mov
sbb
jo,pt
mov
notl
push
xor
jne
push
pop
or
lods
xorl
sub
imul
and
lea
in
inc
fstl
pop
jg
or
sub
sbb
inc
xchg
popf
pushf
sub
jge
popa
andl
cmp
mov
negb
jecxz
test
push
and
movsb
pop
jecxz
pop
jle
test
xor
insb
out
mov
push
cmc
mov
popa
mov
pop
clc
int
jmp
shll
sbb
sub
jb
cmc
inc
inc
inc
or
sarl
or
pushl
stos
wrmsr
push
or
out
jnp
mov
ficomps
sbb
push
int
xchg
mov
or
cmp
or
pop
ljmp
call
pop
sbb
cmp
add
jne
sahf
fisttpll
add
or
push
sbb
int
sysret
add
stc
or
in
lds
and
xchg
cmp
jge
xchg
bound
out
in
inc
jge
test
lcall
jl
xchg
out
add
dec
adc
jge
aaa
xor
dec
xchg
pop
pop
jbe
mov
out
lcall
cmp
jge
cmp
sbb
shll
ret
sub
inc
pop
or
ss
pop
loopne
insb
mov
adc
ret
xor
aaa
add
vldmxcsr
xor
xchg
cltd
push
shrl
sub
mov
mov
xor
sbb
mov
inc
lret
aas
test
jae
out
outsb
pusha
insl
lcall
mov
fwait
mov
icebp
inc
add
jl
jp
sub
int
sahf
jbe
pop
mov
xor
cmp
std
jmp
add
cmpsl
pop
xchg
jae
cmpl
mov
test
and
pop
pop
bound
pop
lea
xchg
mov
fnstcw
xchg
ffree
lods
outsl
fistpll
sbb
mov
in
sub
push
mov
adc
sbb
mov
pop
and
and
movsw
mov
je
in
and
shll
push
mov
stos
xor
es
in
or
jg
in
rcrl
sbb
daa
adc
insl
push
aad
inc
sub
dec
jnp
fimull
lret
xchg
repz
cmp
and
xchg
xor
xchg
iret
mov
add
outsb
int3
push
sti
popf
cltd
cmpsb
mov
mov
push
pop
cmp
jmp
ret
dec
mov
das
xor
js
mov
mov
fdivs
aas
movsb
jp
js
sub
iret
test
repz
clc
mov
test
fstps
pop
scas
test
mov
iret
lods
stos
test
lods
test
sub
cs
sub
fndisi(8087
and
sbb
mov
mov
mov
sub
add
das
mov
sti
call
test
subb
add
imulb
inc
sub
stos
insb
sub
shrl
lods
outsb
cs
add
out
and
scas
lods
movsb
cs
lods
enter
stos
lods
pop
sbb
movsb
fsubs
push
pusha
mov
pop
inc
movsl
sub
nop
iret
cmpsb
push
scas
and
js
test
mov
cs
out
or
jmp
sub
stos
jnp
or
lods
enter
sub
fldenv
dec
inc
sub
cs
stos
movsl
imul
fldenv
cmp
sub
cli
cmpsl
and
movsl
iret
and
subb
push
cs
cli
xchg
shrl
scas
push
test
std
stos
sub
jecxz
mov
lods
push
stos
sub
push
dec
and
dec
daa
test
mov
das
lods
add
fldenv
test
stos
data16
sub
and
subb
pop
fsubrs
loopne
jmp
sub
pop
lods
sub
pop
call
in
mov
lods
push
sub
std
cltd
scas
pop
scas
stos
loope
test
lret
sub
pop
and
aam
test
mov
inc
mov
xchg
movsb
fldt
add
and
sub
push
in
fistps
in
stos
test
cwtl
lods
das
out
test
and
jmp
xchg
test
test
sub
lods
in
jns
and
and
mov
movsb
lret
sub
pop
movsl
insb
lods
sub
loopne
cmpsl
sub
push
fildll
pusha
int3
xchg
and
movsb
rcll
pop
adc
add
cmpsb
iret
movsb
scas
push
sub
xchg
scas
insb
sub
ficompl
sub
iret
xchg
push
sub
insb
scas
and
cli
sub
movsb
movsb
mov
and
imul
mov
and
test
fsub
sub
stos
stos
lods
mov
imul
sub
test
cwtl
enter
stos
cld
and
and
mov
fldenv
lods
xchg
movsb
lret
sub
movsl
insb
lods
out
add
cmpsl
push
test
in
fildll
test
daa
cld
test
sub
dec
test
sub
pop
loope
test
iret
scas
push
sub
imul
fisubrl
stos
xor
add
in
clc
das
sub
pop
mov
mov
stc
sub
jmp
sbb
ret
jmp
push
shr
lods
repnz
push
sub
xchg
pop
out
jecxz
jmp
js
push
jne
loope
dec
pop
and
js
ljmp
sbb
xchg
cmp
fldcw
in
popf
call
pop
mov
in
ljmp
sbb
lods
in
push
dec
in
call
and
lods
call
adc
shl
enter
cli
cmp
outsb
cmp
pop
imul
jmp
push
ljmp
pop
lods
outsb
loopne
and
sub
mov
outsl
mov
cwtl
jmp
mov
push
imul
insb
ljmp
push
int3
pusha
leave
and
dec
and
lods
lret
outsl
inc
frstor
jecxz
xchg
jecxz
in
mov
and
jmp
fmul
jno
in
cmp
lods
pushf
jno
scas
fwait
in
fmulp
scas
popa
lcall
loope
mov
sub
cwtl
test
or
xor
frstor
push
in
push
outsl
rcrl
int
lret
and
in
lods
loopne
fs
addr16
sub
sub
outsb
icebp
mov
shlb
sub
lock
loope
mov
fcoms
xor
out
push
jmp
clc
sub
imul
outsb
out
in
int
mov
int
std
push
sub
dec
std
stos
mov
xor
mov
in
adc
popf
cld
sub
push
inc
ljmp
cwtl
adc
in
mov
orb
mov
lods
movsb
mov
and
pop
pop
test
dec
leave
in
cld
dec
cli
pop
ds
jge
movsb
jge
dec
push
inc
ljmp
orb
mov
sbb
lods
or
pop
sbb
push
cmp
cmp
lret
scas
movsb
sub
ljmp
sub
sar
lret
mov
ds
call
mov
lods
dec
sarl
push
cmp
sub
pop
scas
lods
pusha
shll
lret
movsb
and
lret
jge
pop
stos
ljmp
popa
outsl
jecxz
imul
subb
es
jp
fcoms
and
pop
and
movsb
pop
lods
shrl
sbb
mov
cmpsl
push
scas
setl
mov
loop
add
sub
mov
mov
scas
mov
sub
int
stos
movsb
pop
repnz
mov
dec
outsb
in
fwait
test
scas
call
fcmovne
imul
sub
out
or
lods
in
mov
mov
pop
pop
jmp
jecxz
movsb
jg
cmpsl
jg
shrl
sub
outsl
or
in
mov
scas
addr16
insl
jl
pop
movd
leave
loopne
lds
add
xor
stos
cmc
sub
push
mov
test
scas
shlb
mov
pushf
lock
or
and
lods
loopne
test
loop
movsl
repnz
pop
fldt
stos
out
nop
lret
call
loope
insb
stos
ret
sbbb
stos
mov
stos
pop
mov
mov
stos
in
sahf
mov
mov
push
aam
leave
mov
dec
stos
push
lods
mov
insl
pop
in
out
pusha
push
and
mov
mov
es
and
in
shll
movsb
pusha
out
xor
gs
fisubrl
lret
insb
stos
push
adc
loop
lret
and
bound
sub
leave
sub
cwtl
xchg
in
cwtl
jge
shlb
and
in
mov
out
movsb
mov
sbbb
int
stos
mov
jge
fucomp
jmp
call
cs
int
stos
inc
ficompl
leave
insl
or
psubd
cld
das
movsb
aas
out
mov
lods
mov
adc
inc
out
push
and
fiaddl
pop
ret
or
fisubl
mov
push
orb
mov
push
pop
into
and
inc
test
or
rcrb
jns
ret
and
cld
ret
out
repnz
repnz
sub
jo
in
out
test
ftst
sub
pop
shl
stos
and
stos
cli
leave
out
fstps
fldz
stc
outsb
leave
jo
lods
es
leave
push
out
mov
stc
movsb
cltd
jne
sbb
cltd
out
mov
inc
or
fisubrl
lret
mov
ljmp
movsb
mov
and
mov
dec
jns
outsb
out
jo
lods
in
out
push
out
push
es
jmp
or
sub
dec
jns
sbb
jo
lods
scas
pop
sbb
adc
cmp
push
and
fidivrl
jae
movsb
fiaddl
movsb
mov
fisubl
fisubrl
in
lret
fimull
stos
imul
mov
add
and
test
stos
jge
fidivrl
ret
jne
lret
stc
pop
jmp
sarl
dec
push
jns
imul
cmp
sub
fcmove
push
loopne
jo
pop
in
and
stos
pop
sub
shll
lret
fs
scas
sub
cltd
push
insl
sti
cs
and
test
shl
lret
push
insb
shrl
gs
fldcw
mov
mov
movsb
rcrl
or
mov
sub
cmpsl
jae
in
lods
pushf
cs
pop
jecxz
sbb
lret
sub
and
mov
sub
push
stos
mov
jns
xchg
jmp
test
push
sbbl
subl
mov
sub
dec
and
push
cld
and
mov
inc
addr16
sub
mov
ljmp
ror
jecxz
push
subl
sbb
pop
fcmovne
fs
inc
sub
pop
and
in
lret
lods
cmpsl
adc
push
loope
in
ret
jg
in
outsl
fisubl
jnp
fs
jmp
out
loopne
sbb
ja
in
in
loopnew
jno
icebp
ror
mov
mov
mov
fsubr
nop
ds
shrb
int
enter
ljmp
mov
jmp
push
scas
clc
sbb
das
enter
out
scas
in
call
in
cwtl
sti
adc
fisttpll
lret
scas
pop
and
cwtl
insl
imul
es
jge
inc
scas
es
mov
mov
and
imul
jmp
scas
mov
es
mov
das
mov
shrl
dec
push
fsubr
lret
in
jp
scas
xchg
pop
imul
es
imul
scas
dec
mov
add
pop
lods
cli
push
push
out
imul
imul
pusha
push
adc
imul
imul
cld
or
sar
push
popf
cwtl
loop
iret
scas
or
imul
fidivrl
out
lods
lret
sub
leave
lods
subl
movsl
xchg
pop
outsl
scas
movsb
sub
push
enter
and
ret
sub
push
and
fsubr
bt
jp
scas
and
ret
out
pop
fnstcw
inc
and
and
scas
scas
and
movsb
loop
sub
pop
jmp
scas
jmp
scas
stc
adc
call
cltd
imul
mov
stos
test
ret
out
pop
cltd
jge
aad
ret
cld
scas
fisubrl
out
iret
lods
mov
test
imul
dec
pop
mov
in
mov
sub
loopne
xchg
imul
mov
mov
jmp
scas
mov
scas
lea
cmpsl
push
lods
xchg
sbb
and
shrl
mov
add
sahf
sbb
imul
call
inc
mov
or
ret
sub
fiaddl
inc
addr16
test
fstp
js
and
addr16
loop
cli
sub
pusha
xor
shll
sub
scas
int3
cli
movsb
mov
sbb
lods
shll
lcall
shr
sub
lcall
mov
test
mov
imul
jecxz
ljmp
xchg
shll
mov
and
sub
sub
jecxz
stos
insl
imul
xchg
mov
jecxz
sub
in
popa
in
pop
sti
adc
jmp
sub
out
dec
sti
and
lods
sub
jp
and
movsb
loop
jp
js
push
sub
sbb
pop
mov
loop
imul
sbb
and
xchg
push
adc
xchg
in
scas
cmp
shrd
and
ret
movsl
pop
or
aad
ret
stos
xchg
gs
fcmovu
sarl
fldcw
sub
add
and
stos
push
loope
lret
jecxz
out
scas
sti
lret
das
ljmp
and
adc
xlat
jmp
fisubl
fwait
movsb
shlb
cli
lret
int
test
insl
imul
scas
jmp
imul
test
lret
mov
and
dec
jmp
scas
mov
mov
imul
out
addr16
stos
pop
lock
fucom
imul
jno
nop
mov
pop
pop
sub
call
push
pop
dec
frstor
call
iret
mov
add
movsb
enter
or
mov
mov
inc
andb
mov
mov
jmp
in
cmpsb
enter
test
fisubl
push
sub
and
cli
dec
fldcw
movsb
out
out
fildll
dec
loopne
jns
lods
or
movsl
push
imul
cli
in
shll
mov
lea
push
push
and
mov
loope
in
adc
and
dec
into
fs
lretw
out
and
clc
sub
mov
in
xchg
push
and
fs
pop
das
push
arpl
cmpsl
out
jmp
test
shll
cmpsb
sub
pop
in
sub
addr16
mov
insl
call
outsl
mov
mov
mov
lods
sub
movsl
hlt
jmp
xchg
push
mov
imul
inc
fldl2t
sub
insl
mov
fucomp
push
xor
jge
mov
mov
mov
sbb
shrb
in
sbb
iret
mov
imul
ror
cmpsb
or
mov
sub
ret
pop
push
jecxz
dec
ret
fsubrp
sub
dec
lods
jo
lds
in
inc
pop
cmpsb
sub
cmp
lret
outsl
movsb
repz
out
mov
jecxz
loop
jecxz
pop
imul
js
imul
lcall
push
imul
loop
test
sub
xor
call
jmp
or
stos
shrb
and
fs
rcrl
in
and
xor
and
cmpsb
inc
and
xchg
in
in
lods
dec
mov
stos
and
dec
rcl
cli
arpl
aad
movsl
push
cmpsl
imul
lret
jmp
pop
and
ret
lds
and
sub
gs
xchg
fldenv
cmc
xchg
frstor
jmp
in
movsb
stos
push
es
movsl
movsb
cmpsb
cmpsb
ljmp
sbb
jmp
fs
sbb
pusha
in
addr16
and
jae
mov
pop
xchg
lret
bnd
mov
pop
mov
lret
jmp
lods
pop
in
loopne
push
and
cmpsl
pop
dec
and
ljmp
sub
cmp
push
add
xchg
movsl
and
insl
leave
arpl
mov
dec
sub
out
outsb
pop
es
out
enter
insb
mov
mov
mov
cmpsl
cmp
mov
mov
outsb
cltd
imul
lods
out
and
jmp
outsb
xor
popf
cmc
add
and
lods
jl
in
sbb
jnp
das
iret
sub
mov
movsb
mov
sub
mov
pop
mov
data16
fists
xlat
movsl
jmp
sub
in
push
and
lods
rcll
es
fldenv
frstor
imul
outsb
pop
fs
sub
jae
pop
cmpsb
sub
icebp
sub
movsb
push
out
sub
ljmp
movsl
in
xchg
sbb
sbb
mov
push
sub
in
xor
imul
in
mov
loop
mov
push
and
fbld
xchg
in
pop
jo
jp
mov
and
sub
in
fcomps
mov
or
cli
jmp
sub
lds
fwait
xlat
bound
popa
popa
add
jge
ljmp
mov
scas
jle
pop
push
and
mov
imul
test
mov
imul
lds
loop
sub
and
lea
push
and
in
dec
xor
scas
imul
sbb
mov
aam
push
or
aam
es
bound
imul
and
mov
outsl
test
fcmove
test
imul
xor
sub
popa
xor
hlt
movsb
lods
dec
test
imul
iret
sbbb
outsb
jle
mov
imul
scas
dec
xor
sub
sub
push
nop
and
adc
pop
cltd
push
mov
mov
cs
jmp
arpl
mov
out
pop
mov
adc
pop
inc
and
mov
adc
imul
and
loopne
call
adc
bound
ficompl
and
add
ret
loopne
insl
pushf
cwtl
add
jecxz
mov
and
out
in
lret
sub
call
shll
jecxz
movsl
fildll
test
cli
das
shl
movsb
and
out
mov
sbb
mov
out
lret
pushf
pextrw
jne
fldenv
test
mov
in
lret
arpl
cs
ljmp
jge
mov
mov
outsl
shl
out
inc
or
lret
fs
subl
push
adc
mov
and
gs
mov
cmp
andb
lret
sub
leave
sub
rcll
jp
fs
and
loope
out
ret
and
imul
lods
movsb
jg
sub
bound
fildll
push
aaa
dec
es
lret
in
in
mov
dec
movl
sbb
test
outsb
mov
movsb
push
mov
jmp
cli
adc
popf
dec
and
imul
inc
loope
imul
cmp
pop
loop
jbe
mov
and
and
mov
xchg
pop
loop
imul
dec
sub
out
and
into
mov
imul
test
data16
data16
and
pop
js
orb
pop
adc
movsl
arpl
push
jae
imul
lea
das
sbb
inc
and
iret
enter
sbb
inc
mov
xor
or
push
inc
aad
push
ss
je
push
lea
mov
push
in
mov
leave
lret
es
imul
xchg
repnz
insl
scas
imul
test
imul
sub
imul
lahf
and
es
subl
xchg
loop
imul
and
xchg
loop
push
outsl
imul
scas
sbb
ljmp
movsb
imul
call
fld
negl
add
xor
loopne
dec
inc
imul
imul
in
dec
and
push
out
and
push
imul
add
xchg
leave
cmpsl
subl
scas
fisubl
mov
movsb
scas
lds
sub
fldcw
sbb
in
les
shrb
dec
cwtl
mul
out
scas
sub
inc
lods
outsl
inc
pop
jmp
in
jl
ret
dec
scas
cmp
xchg
subl
lret
imul
sbb
cli
push
cmp
fidivl
nop
and
ljmp
and
stos
in
jp
sub
fldz
cmp
pop
ljmp
imul
insl
int
push
mov
out
inc
lods
scas
push
inc
js
sub
jl
mov
stos
mov
arpl
stos
xchg
pop
pusha
inc
movsb
in
jp
ret
add
stos
fnsetpm(287
and
in
pop
mov
add
movsb
ftst
dec
or
ret
push
xchg
xchg
sub
xchg
repnz
jecxz
mov
sbb
arpl
or
test
sbb
pop
movsl
jecxz
sub
jmp
shrb
jecxz
cmp
test
enter
nop
and
fisttpll
lret
sub
push
scas
lret
js
out
fldt
test
shrb
call
out
out
mov
call
fs
cwtl
fbld
cs
and
call
push
scas
out
imul
mov
gs
add
dec
fld
insl
out
call
lods
cli
test
clc
pop
js,pn
scas
dec
mov
sub
stos
test
cli
push
fldcw
and
in
addr16
mov
lcall
lods
xor
loope
ret
xchg
add
pop
push
call
out
lods
loope
imul
stos
lcall
stos
shr
lret
pop
and
scas
ljmp
sub
mov
es
adc
ret
mov
fisttpll
movsb
addr16
insl
test
fcoms
mov
dec
sub
scas
jg
pop
mov
inc
mov
mov
mov
jmp
jb
push
fwait
dec
sub
sub
fcoms
enter
jmp
cld
outsb
dec
andl
movsb
test
and
ljmp
cld
stos
fimull
int3
js
push
js
push
adc
mov
sarb
fsubr
sub
fsubrs
pop
call
stos
lret
or
leave
in
pushf
in
stos
shll
mov
mov
insl
push
xchg
stos
mov
pop
jmp
add
mov
mov
popa
jg
je
test
in
fists
mov
imul
and
push
jp
imul
sub
mov
dec
imul
loopne
enter
movsb
in
mov
add
imul
push
call
movsb
xchg
or
mov
cmpsb
jmp
ret
shrl
std
movsb
mov
pop
imul
outsb
xchg
add
int
push
pop
mov
and
inc
push
mov
mov
in
in
outsl
test
sub
jb
push
or
imul
lods
ljmpw
inc
mov
xchg
lods
pop
jne
or
sbb
es
insl
lods
mov
push
and
xchg
xchg
lods
frstor
je
push
gs
lods
scas
imul
xchg
xchg
lods
fstl
adc
mov
scas
imul
lods
pop
add
add
mov
scas
imul
mov
cli
outsl
lret
in
popa
and
push
imul
add
push
and
and
push
cmp
mov
pop
addr16
or
shll
mov
pop
addr16
or
shll
xlat
mov
xor
addr16
lods
shrb
dec
xlat
lods
mov
add
jmp
mov
imul
outsl
xchg
mov
scas
scas
sub
xchg
shl
out
jmp
gs
mov
dec
imul
push
scas
ficompl
roll
xchg
int
es
push
scas
jp
imul
sbb
mov
or
mov
stos
int
andl
cld
imul
test
cmpsb
xchg
imul
push
test
adc
imul
stos
xchg
xor
in
shl
mov
and
sub
enter
or
in
jp
imul
and
cmpsb
and
ret
in
adc
inc
and
dec
dec
es
call
push
movsb
adc
and
and
push
call
dec
sbb
stos
ljmp
and
call
cmc
es
mov
insl
mov
fldenv
sub
adc
in
sub
xchg
mov
outsl
mov
je
stos
push
mov
and
jmp
cmp
lods
mov
les
mov
insl
shr
sub
in
stos
in
call
pop
and
ja
stos
jg
fld1
stos
xchg
jmp
movsb
jmp
and
addr16
jmp
mov
xor
and
imul
test
sub
mov
mov
mov
sub
push
fwait
mov
inc
mov
inc
stos
imull
jbe
sub
push
sub
in
js
add
stos
jmp
imul
into
mov
out
mov
push
arpl
mov
in
scas
inc
push
sub
imul
and
and
lahf
insl
xchg
sbb
shrb
push
sub
cmc
mov
ljmp
add
out
add
mov
and
andl
outsl
aaa
mov
push
inc
fwait
inc
add
cmp
mov
and
stos
mov
inc
in
scas
stos
std
out
stc
gs
inc
loope
data16
cmp
jecxz
mov
adc
shrb
xchg
es
xor
out
adc
jmp
es
imul
or
push
push
jp
pusha
imul
stos
jnp
push
imul
out
into
mov
sub
fwait
lahf
add
cmp
sub
mov
and
fisubl
fwait
iret
enter
pop
mov
lahf
int3
and
cmp
test
pop
mov
mov
in
scas
mov
std
insb
push
mov
sbb
or
rcl
fwait
stos
lods
xlat
repz
or
and
push
mov
and
ret
out
or
and
jae
out
cmp
jecxz
mov
out
xchg
add
inc
scas
mov
push
in
js
negl
jmp
and
daa
ljmp
test
and
fwait
xor
xor
arpl
cmp
cmpsb
addr16
sub
cld
mov
insl
adc
jmp
call
loopne
pop
push
and
stc
add
jl
sub
out
out
xor
lds
sub
ret
pop
lds
cwtl
ljmp
arpl
mov
dec
mov
dec
cmpsb
lods
pop
dec
mul
lds
aaa
movsb
loope
in
test
daa
filds
movsb
jmp
stos
or
test
adc
mov
jecxz
scas
mov
shrl
popa
in
cmpsl
fwait
xor
fldenv
imul
dec
push
mov
inc
stos
mov
jp
mov
ret
jmp
inc
sbb
adc
addr16
out
dec
jbe
out
sub
imul
xchg
ss
imul
pop
or
mov
aad
pop
sub
cmpsl
std
sbb
and
mov
insl
cli
pop
fwait
rcrl
cmp
push
outsl
inc
sbb
outsl
gs
clc
mov
das
call
bound
lods
sbb
mov
and
jmp
es
daa
dec
cwtl
jmp
outsb
out
enter
cmpsl
jecxz
jb
sub
pop
out
lret
mov
mov
ja
es
inc
addr16
test
enter
adc
or
adc
push
push
out
push
push
outsb
push
sub
das
push
addr16
insl
prefetch
or
fucomip
jle
es
cwtl
fldcw
outsl
in
mov
orl
movsl
in
lods
jecxz
jno
xchg
test
xor
pop
test
push
pop
leave
sub
cld
pop
dec
lcall
shll
test
dec
sub
cmpsl
push
sbb
ljmp
push
or
dec
stos
mov
outsl
and
cld
fadd
sub
in
sub
sub
and
imul
cmp
leave
cld
in
inc
sub
adc
jl
jle
xchg
in
sbb
push
cltd
loope
insl
stos
subl
push
jmp
out
stos
subl
push
jmp
outsb
stos
ret
jb
sahf
out
iret
aaa
mov
mov
ljmp
addl
jg
fisubrl
xchg
test
pop
mov
call
push
cmp
push
in
mov
negl
frstor
scas
jmp
jp
adc
shrb
cs
daa
popf
mov
adc
jmp
jp
daa
xchg
ljmp
xchg
mov
out
add
and
push
jp
out
daa
inc
lret
imul
imul
xchg
in
popf
jns
ffree
dec
jecxz
test
es
imul
testl
out
or
push
sub
imul
jp
fs
bound
imul
scas
in
jp
jg
cld
imul
jle
mov
fisttpll
pop
and
and
out
in
sub
and
add
daa
fcmovnu
jmp
stos
cmp
daa
and
push
aas
xchg
jmp
inc
daa
movsb
fcmove
mov
stos
mov
lds
roll
lods
adc
fldl
jecxz
stos
mov
lds
shr
add
daa
stc
mov
jge
push
outsl
daa
mov
movsb
scas
lds
cmp
stos
push
outsl
daa
mov
je
and
popf
pop
lcall
test
imul
lods
cmp
push
jns
xchg
cmc
pop
lods
mov
stos
pop
mov
insb
push
jmp
in
push
imul
push
pop
sbb
imul
scas
or
sub
mov
mov
and
scas
pop
xchg
scas
push
jmp
out
lods
inc
xor
call
cmpsl
jp
out
call
dec
in
jmp
cmpsl
jnp
adcb
jecxz
imul
dec
xlat
in
mov
imul
sub
add
and
push
xchg
xlat
fucomip
in
dec
mov
xchg
cmc
and
push
out
scas
imul
out
and
push
jmp
fsts
into
mov
push
xor
xchg
dec
imul
movd
cmp
and
fisubl
dec
out
fs
scas
push
pop
mov
repz
out
imul
dec
or
xor
or
out
data16
pop
movsl
fbstp
xchg
mov
jecxz
imul
xchg
out
fbld
out
outsl
push
xchg
jne
js
push
out
inc
cmp
out
and
and
adc
outsb
lods
stos
movsb
push
push
and
imul
lods
xor
mov
je
push
add
pop
out
jnp
outsl
mov
xlat
mov
cmp
jmp
push
mov
dec
jmp
push
jmp
imul
mov
push
inc
sbb
mov
stos
pop
cmpsb
sbb
jmp
mov
xchg
sub
test
test
pop
mov
jbe
cmpsl
xchg
in
scas
push
popf
dec
imul
addr16
push
mov
push
push
call
cmpsl
inc
call
add
pop
gs
test
sbb
and
arpl
shrl
mov
sub
adc
sub
gs
sub
jmp
popa
sbb
imulb
and
jge
cli
and
rcll
jge
cli
rorl
and
sahf
rcll
sub
imul
sbb
outsl
mov
ljmp
xor
imul
or
add
mov
outsl
push
packssdw
dec
loopnew
sbb
outsl
xchg
push
out
xchg
cs
jg
scas
jg
out
or
mov
xchg
or
adc
out
mov
loopne
jp
es
push
jp
loopne
in
out
jecxz
push
dec
push
outsb
js
mov
sbb
rorl
sub
or
or
in
out
pusha
mov
mov
int
in
inc
sub
in
fldt
xchg
sub
lretw
inc
fldt
stos
pop
lret
sbb
out
lret
sti
fldt
inc
out
adc
stos
cld
jmp
inc
out
fldt
stos
xor
dec
inc
out
fs
popa
xchg
stos
and
mov
push
sub
out
in
sbb
pop
movsl
push
out
jmp
in
lods
outsl
adc
out
dec
cmpsb
pusha
pop
pop
cli
loop
dec
ljmp
in
test
stos
jnp
out
dec
test
loop
sbb
shrl
mov
pop
and
out
addr16
pop
gs
lret
in
or
mov
ficomps
in
lcall
outsl
jmp
cs
imul
stos
dec
insb
ja
scas
cmp
loop
notl
inc
insl
jecxz
mov
clc
adc
push
scas
mov
popa
pop
adc
adc
jge
stos
push
jmp
bound
mov
das
xchg
ds
loope
imul
popa
fs
call
fcoml
out
jmp
cmp
dec
mov
popa
mov
imul
sub
enter
popa
xchg
cmpsb
gs
pop
sahf
cld
frstor
imul
sub
mov
jecxz
imul
mov
rcrb
cmp
out
movsb
test
in
push
pushf
pop
call
call
mov
and
imul
push
insb
adc
in
push
jg
outsb
movsb
in
pop
mov
frstor
pop
scas
enter
out
and
jecxz
sbb
imul
les
fsubrl
jmp
mov
icebp
cmpsb
popa
jecxz
imul
xor
in
lods
lods
fwait
xchg
lods
stos
out
mov
xor
out
xor
inc
mov
jecxz
bound
das
add
dec
pop
iret
out
sub
xchg
fbld
into
dec
jecxz
das
jmp
outsl
mov
popa
shrb
sbb
popa
rcl
jp
jecxz
jmp
sub
cmp
push
popa
push
jnp
bound
or
add
stc
jl
jecxz,pn
jmp
sub
imul
bound
mov
outsb
sbb
stos
or
and
lods
imul
outsb
adc
loopne
es
mov
fistps
inc
mov
push
imul
je
pop
addr16
push
movsb
jmp
pop
mov
inc
es
imul
mov
stos
inc
pop
imul
je
lret
jecxz
push
xchg
cmp
dec
in
push
fs
jp
imul
in
in
cwtl
sbb
imul
leave
pop
in
sbb
loop
sub
cs
dec
imul
adc
sbb
pushf
in
mov
shlb
lea
push
or
int3
cmp
cltd
fucomp
cld
imul
dec
mov
cld
sub
std
pop
loopne
mov
mov
fldt
adc
lods
test
xchg
ss
iret
sub
sub
xchg
nop
fisubrs
jmp
fisubl
sti
imul
mov
scas
mov
mov
pop
js,pn
mov
out
fwait
mov
repnz
in
mov
stos
lret
and
cltd
push
cwtl
scas
mov
mov
scas
dec
sub
test
pushf
mov
jmp
fmul
pop
mov
repnz
in
jnp
test
cld
imul
mov
sbb
push
imul
jp
sub
add
jmp
inc
stos
mov
xor
xlat
jmp
in
cmc
lcall
movsl
xchg
mov
call
dec
mov
scas
cmp
iret
gs
test
pop
sub
les
mov
or
int
dec
xor
and
arpl
and
adc
cwtl
popa
and
and
call
jns
pusha
movsb
in
clc
adc
mov
movsl
inc
add
lret
imul
shrl
scas
pop
jecxz
es
push
pop
scas
pop
xchg
and
xor
lret
sub
mov
out
inc
stos
and
push
popf
cmp
inc
scas
or
inc
pop
lods
inc
cwtl
jmp
mov
insb
dec
call
mov
fildll
imul
xchg
andl
xchg
pop
fwait
inc
inc
in
fwait
push
dec
jne
fisubrl
dec
fwait
pop
sahf
cs
dec
jle
dec
xor
xchg
jge
inc
inc
out
jge
scas
sub
out
call
dec
je
mov
movsl
and
and
cmp
jns
add
out
adc
or
or
out
jmp
fdivrs
cmp
jmp
in
xor
push
xor
movsb
mov
loop
mov
or
or
mov
in
push
orb
movsb
sub
pop
leave
mov
lods
cli
leave
mov
stc
ret
insb
pop
stc
dec
jne
push
or
loope
xorb
xchg
mov
jge
fucom
pop
imul
lods
lods
insl
arpl
imul
lret
dec
inc
das
loop
pop
sub
mov
in
ljmp
test
rcl
pop
mov
cwtl
or
into
mov
loopne
cld
imul
mov
fimull
loopne
mov
stc
mov
out
mov
popa
mov
test
and
nop
jbe
mov
push
jecxz
mov
fwait
out
fwait
jns
sahf
imul
mov
lods
xchg
in
or
int3
fwait
mov
xor
jne
sbb
scas
gs
ljmp
pop
mov
mov
mov
mov
imul
pop
inc
fucom
imul
mov
ss
cld
imul
inc
jmp
push
outsl
test
imul
adc
xor
or
outsb
imul
jo
sti
jne
inc
cmp
lods
adc
mov
lcall
jo
sti
push
mov
mov
xchg
stos
data16
cmpsl
imul
js
sti
jne
inc
cmp
push
ljmp
lea
movsb
es
out
mov
inc
scas
adc
in
lcall
stos
pop
pop
out
add
and
push
lcall
jl
addr16
stos
mull
xchg
adc
shrb
push
scas
xchg
xor
sub
repz
ret
lods
fisubrl
jl
mov
imul
ljmp
iret
jge
pop
iret
scas
and
mov
imul
inc
pop
dec
jecxz
int3
incl
scas
test
push
mov
frstor
jge
pop
out
scas
jo
jmp
mov
imul
xor
sub
ret
lahf
nop
stos
jl
imul
aaa
push
sub
imul
xchg
cmpsl
jecxz
xor
mov
push
and
fnstsw
mov
adc
stos
sbb
aas
or
scas
xchg
scas
jl
mov
xchg
mov
sub
movsb
pop
adc
push
stos
dec
xor
add
es
mov
mov
mov
jecxz
imul
xor
sarl
outsl
lret
xchg
mov
or
scas
mov
mov
mull
fldcw
push
out
jmp
es
jp
sbb
inc
frstor
jecxz
xlat
jg
mov
sub
inc
dec
cmpsb
imul
sub
fisubrl
scas
shrb
stos
divps
imull
lret
jmp
imul
pop
dec
sbb
or
loop
imul
mov
ret
pusha
push
scas
and
jb
sub
imul
scas
dec
sbb
bound
ret
out
imul
scas
and
inc
ret
sub
imul
or
call
fdivs
cmp
jbe
loope
mov
mov
pop
add
out
in
call
sti
into
in
pop
pusha
imul
cmp
call
sbb
stos
test
add
loop
test
lret
je
movsl
mov
arpl
gs
sub
scas
shll
movsb
push
pop
mov
pmaxsw
mov
inc
into
out
ljmp
pop
in
mov
into
popa
mov
cmp
inc
mov
roll
cmp
fucomi
xchg
stos
mov
aaa
stos
mov
mov
outsb
mov
fwait
xor
sub
fwait
cmpsl
sarb
cmpsl
ret
rcrb
xor
stos
out
shlb
push
mov
lods
mov
inc
test
lea
mov
rcll
inc
sub
and
xchg
stos
stc
mov
add
movsb
movsb
loope
stos
ret
movsb
dec
pop
xchg
mov
jl
ficoml
push
inc
loope
popa
stos
ret
inc
popf
jmp
movsb
pop
and
arpl
movsl
pop
es
inc
ret
movsb
mov
sub
addr16
xor
nop
out
cmc
sub
pop
outsl
js
mov
mov
outsb
shll
mov
insb
cmp
and
leave
cmpsb
or
inc
jo
imul
ja
dec
stos
pop
pusha
dec
xor
adc
sub
fstl
dec
jo
inc
scas
and
pop
loope
mov
dec
mov
xor
stos
ret
and
in
shrl
test
roll
in
and
inc
pop
cmpsl
loop
mov
in
icebp
or
cmp
lret
push
lret
test
push
jmp
frstors
mov
paddsb
mov
addr16
cmp
scas
mov
push
int
cs
test
push
mov
jmp
loope
xor
scas
imul
loop
xor
out
dec
and
mov
scas
pop
mov
out
or
sub
scas
in
in
push
xchg
xchg
pusha
movsb
jmp
stos
xor
int3
call
mov
add
das
cmc
movsb
jns
and
dec
repz
pusha
popa
frstor
es
movsl
imul
lds
gs
imul
gs
fpatan
adc
ret
scas
xor
pusha
xchg
or
cli
scas
pop
popf
sbb
frstor
imul
jg
or
pop
leave
jb
insb
sub
sbb
imul
lcall
scas
imul
inc
punpcklbw
xor
and
mov
xor
int3
call
outsl
xchg
insl
loop
xor
xchg
and
or
sub
mov
pop
pusha
push
cmp
push
gs
pusha
movsb
shlb
or
pop
xor
pusha
shrb
dec
imul
ret
iret
enter
enter
pusha
mov
jae
stos
jbe
and
and
gs
pop
out
repnz
mov
xchg
out
gs
sub
pop
jmp
imul
jecxz
int
loop
loop
mov
push
loop
xchg
gs
repz
cltd
std
out
test
pop
fisubl
sbb
fucomip
dec
data16
mov
es
imul
or
movsb
adcb
xchg
es
sub
jbe
das
loop
movsb
jecxz
imul
add
push
mov
jmp
jecxz
mull
or
and
jg
out
inc
frstor
daa
and
and
es
mov
adc
daa
mov
pusha
and
mov
es
or
shlb
pusha
in
shrb
shrl
inc
xchg
adc
imul
das
shrb
cmpsl
cmp
dec
xor
mov
lds
pusha
jle
jmp
xor
pusha
xchg
sahf
jmp
xor
pusha
xchg
out
sub
jb
jo
inc
stos
mov
push
out
fisubl
push
jle
mov
stos
bound
xchg
pop
xchg
pop
cmp
imul
movsl
lcall
out
adc
dec
dec
inc
ds
imul
in
je
out
out
sbb
dec
pop
dec
add
and
push
dec
inc
in
movsb
in
pop
xor
jo
and
sub
xchg
xchg
in
push
pop
test
stos
adc
push
and
loop
and
in
push
cmp
and
jl
in
pop
rorl
je
jo
insl
in
int3
dec
test
out
imul
je
insl
in
aad
ds
insb
sub
lods
ret
inc
fucom
jecxz
ret
dec
fisubrs
dec
or
jb
outsb
fnstcw
cli
and
cmp
adc
out
shll
repz
shrl
dec
pop
sub
insl
sbb
and
fsubr
je
sbb
mov
cmpsl
call
mov
addb
or
and
fsubr
das
call
xchg
ret
movsb
xchg
pop
cmp
test
repnz
xchg
aad
fisubrl
addl
enter
sub
fwait
dec
mov
scas
out
fs
cli
sub
in
sub
cld
nop
mov
imul
in
mov
push
pushf
sub
loop
rol
movsb
sub
js
sub
imul
scas
mov
out
push
in
sub
out
movsb
mov
adc
scas
aad
js
cmp
lret
cmp
inc
and
ret
pop
mov
sub
imul
int3
dec
movsb
in
out
jl
jae
mov
in
jl
lods
push
scas
aad
js
cmp
lret
movsb
arpl
gs
nop
and
insb
imul
in
pop
cmp
adc
cmp
adc
js
lods
xchg
or
adc
fisubrl
insl
fsubr
leave
int
and
sub
fmull
fstpl
jecxz
lea
sub
in
in
int
out
les
call
ret
std
mov
je
scas
imul
mov
mov
in
in
fmul
std
mov
loope
scas
popf
mov
fimull
push
stos
pop
out
lea
mov
ret
mov
pop
popf
imul
out
pop
lret
movsl
or
out
jmp
subl
scas
shrl
in
mov
xchg
stos
dec
pop
imul
in
jbe
imul
js
pop
std
in
std
xchg
jp
movsl
ret
stc
popf
imul
sub
xor
loope
call
iret
cmp
mov
fcmovu
das
stos
test
repnz
gs
lcall
dec
call
push
popa
xchg
sub
ret
movsl
out
and
repnz
jecxz
pop
call
xchg
lret
stos
sub
adc
frstor
in
xchg
arpl
and
or
jnp
mov
movsb
xor
loope
mov
and
call
cmpsl
loope
loopne
pop
stos
sub
clc
adc
mov
insl
lret
dec
in
sti
pop
outsl
push
and
out
insb
sub
daa
mov
pop
sub
in
scas
loop
and
lods
ljmp
fldcw
mov
dec
arpl
movsb
subw
gs
loope
mov
mov
push
mov
rcll
dec
lods
scas
jmp
shl
ret
imul
loope
scas
jmp
sbb
sub
insl
lahf
xchg
out
mov
jae
jle
scas
or
arpl
and
lret
adc
nop
and
mov
add
xor
or
cmp
fbld
mov
mov
js
stos
xchg
dec
test
sbb
sub
insl
shr
lods
jg
sub
out
int3
sbb
loopne
dec
inc
out
cmp
pop
sub
sub
sub
fstps
push
imul
aam
pop
and
lods
in
lea
dec
xor
xchg
jbe
stos
cmp
bound
mov
test
stos
in
adc
mov
in
xor
mov
lods
stc
test
movsl
leave
sub
and
fdivr
pop
in
inc
stos
xor
and
mov
adc
dec
jne
mov
addr16
scas
xchg
xorl
xchg
pop
or
xchg
mov
imul
sbb
bound
mov
pusha
lcall
mov
sub
pusha
jo
test
insl
mov
lds
in
loopne
fwait
or
movsb
fwait
ljmp
push
xor
and
insl
bound
mov
inc
mov
imul
xchg
pushf
cmc
inc
or
stos
cmp
lods
inc
cmp
xlat
jb
lods
repnz
cltd
pop
imul
addr16
adc
js
in
popf
fnstenv
scas
and
mov
adc
xlat
test
fs
xchg
sub
adc
lods
imul
mov
adc
je
jo
mov
mov
imul
bound
adc
push
bound
cmp
mov
mov
and
mov
arpl
sbb
call
jecxz
jnp
cld
imul
and
dec
mov
outsl
imul
adc
imul
lods
mov
push
xchg
lds
movsb
jge
bound
cmp
xlat
mov
fwait
mov
cmpsb
in
pop
in
movsb
das
dec
adc
outsl
xchg
pop
bound
xchg
sub
xchg
lret
scas
loope
xchg
fildll
scas
in
inc
scas
insl
push
xlat
jns
in
into
test
jmp
test
stos
shlb
push
lods
dec
inc
loope
in
lret
lods
adc
out
cld
imul
enter
js
js
in
out
or
movsl
xlat
lods
fbld
adc
or
jmp
cmp
mov
xchg
mov
enter
fsubrl
or
outsl
es
int3
insb
and
push
dec
outsl
jl
jmp
loop
sahf
fs
mov
jg
cld
imul
jp
mov
out
push
or
jmp
or
jmp
out
inc
stos
xor
jmp
loope
sbb
fucomp
jge
arpl
scas
int3
sub
cmpsb
jmp
inc
jo
addl
cmp
in
inc
in
jbe
in
test
sahf
sub
int
fldpi
imul
scas
gs
sub
push
sbb
jne
and
pop
in
call
pop
inc
and
subl
lret
scas
jecxz
es
push
scas
lods
loop
and
inc
lret
sub
lods
xchg
outsl
out
int3
inc
movl
push
and
sub
in
outsl
jne
and
sub
sub
imul
and
gs
gs
adc
pop
adc
jle
and
add
loopne
pop
scas
sub
sti
out
test
push
mov
pop
pop
stos
cmpsb
out
in
in
pop
gs
sub
inc
insl
mulb
cmp
xchg
cld
imul
sub
data16
jmp
and
jge
inc
cmp
lods
xor
popf
leave
ret
in
cs
xchg
sbb
cwtl
inc
sub
insl
cmc
stos
aaa
jo
loop
imul
in
push
neg
jmp
testb
dec
add
and
ret
imul
out
cmpsl
push
dec
jnp
cld
imul
leave
cmpb
mov
lcall
xlat
cmpsb
or
cmp
sub
scas
pop
cmc
stos
pop
cmp
xchg
inc
add
mov
popa
xor
mov
xlat
dec
ret
enter
mov
fstpl
xchg
or
xchg
mov
shrl
in
add
cmc
test
dec
out
movsb
mov
out
in
mull
call
mov
pop
and
call
test
cli
in
les
mov
stos
aas
mov
mov
push
inc
xchg
shll
cmpsb
lahf
mov
sbb
or
jb
mov
bound
pop
test
stos
pminub
mov
test
fldlg2
call
adc
sbb
or
mov
mov
mov
cmc
add
cmp
dec
mov
adc
xchg
jmp
mulb
and
mov
pop
imul
sahf
test
cmp
sahf
test
insl
popa
sbb
xchg
popa
inc
fbld
lods
adc
stos
or
popa
mov
cwtl
jle
test
aad
pushf
lods
push
stos
pop
sub
mulb
es
mov
lds
ss
imul
and
imul
or
xchg
add
out
jmp
test
call
add
int
call
dec
mulb
outsl
or
push
inc
jnp
lret
in
push
mov
ljmp
in
and
inc
and
stos
stos
pop
in
in
outsb
xchg
xchg
ljmp
jecxz
jg
pop
fbstp
fbstp
mov
jecxz
imul
iret
jp
movsb
imul
loope
mov
adc
stos
sub
cmp
loope
mov
imul
mov
imul
sub
leave
sub
xor
xchg
gs
jmp
cmp
in
cmp
sub
negb
imul
aaa
outsb
lcallw
mov
das
inc
std
sub
das
rorl
sub
or
and
mov
andb
rcrl
insl
cmp
add
arpl
ret
fs
jge
popa
test
sbb
cmp
add
xor
in
inc
out
xor
das
fwait
and
call
test
dec
xor
icebp
push
imul
aaa
lret
outsl
es
cs
jmp
cmp
mov
popa
inc
pushf
inc
gs
sbb
cmpsl
xchg
sub
addr16
or
push
dec
iret
popa
cli
sub
imul
imul
aad
push
jg
mov
cmp
jae
sub
test
sbb
loopne
lods
mov
gs
ficompl
jmp
jl
xor
loopne
stos
jno
andl
mov
xchg
xchg
jmp
sub
or
cld
imul
insb
arpl
xor
xor
jnp
cld
imul
sarb
and
xor
pop
cmc
sub
in
js
sarb
imul
push
das
out
movsb
imul
inc
sbb
sub
lret
lcall
call
movsl
sbb
xor
test
ja
push
push
cs
in
push
loopne
push
bound
sbb
push
or
loop
fsubr
cwtl
shrl
and
clc
mov
inc
stos
jne
dec
mov
mov
or
stos
sub
add
mov
addr16
test
cwtl
into
stos
stos
test
push
xlat
pop
leave
push
sub
jmp
pop
sub
in
cmpsb
sub
pusha
cmp
xlat
cs
and
in
filds
stos
jge
sub
pusha
loop
arpl
cmc
fs
sub
data16
add
imul
cli
imul
js
loopne
test
imul
xchg
popa
mov
lea
inc
push
sub
or
xlat
gs
fstps
jp
imul
andl
imul
in
or
incb
scas
out
outsl
sbb
jnp
cld
imul
cmp
lea
and
sub
mov
jecxz
imul
insl
insl
mov
imul
xor
and
int3
pop
popa
push
cmp
in
arpl
inc
frstor
push
fnstcw
pop
fs
cmp
cwtl
cmpsb
out
inc
lret
call
scas
sub
dec
jg
cld
imul
jecxz
sub
enter
mov
adc
and
lret
jmp
mov
pop
gs
mov
adc
jnp
in
cltd
pop
mov
fs
pop
inc
sub
in
or
xlat
gs
jl
data16
mov
test
mov
lea
mov
and
mov
out
out
cli
imul
dec
pop
dec
bound
mov
inc
jo
loop
imul
xor
bound
cmp
or
imul
mov
fbld
call
out
xor
pop
cmp
xchg
xor
bound
imul
push
dec
arpl
lahf
mov
mov
or
arpl
or
adc
jecxz
jnp
jl
es
mulb
xor
ljmp
and
mov
xor
insb
fsubr
and
mov
mov
imul
outsl
fistps
xchg
pop
in
ret
sbb
xchg
stos
and
sahf
sub
or
mov
xor
xor
inc
dec
popa
dec
pop
mov
and
loopne
iret
xlat
jmp
scas
imul
inc
cmp
fisttpll
sub
mov
add
imul
dec
push
out
mov
adc
arpl
pop
popa
mov
std
xchg
or
cmpsb
cmpsl
movsl
int
call
jmp
aas
arpl
gs
cli
mov
iret
scas
stos
cs
jne
push
popf
inc
outsl
mov
scas
test
push
out
jecxz
movsb
int
push
cmpsb
fildll
cld
pop
call
sbb
pop
popa
call
ss
jns
dec
push
cmp
aas
fwait
out
mov
cmp
les
fwait
fwait
ficompl
cmp
cli
lret
fwait
cs
fwait
nop
gs
fwait
incl
mov
les
outsb
jmp
rcr
mov
sub
sub
mov
sahf
mov
mov
pop
cmp
xor
int3
dec
movsb
stos
out
dec
movsb
js
push
js
push
push
cld
arpl
nop
and
movsb
sbb
orb
popf
pusha
andl
in
fistl
shlb
pop
push
push
std
mov
les
fldcw
xchg
xor
jmp
mov
and
cwtl
movsl
js
in
adc
add
ror
mov
cmc
adc
gs
xlat
loopne
add
pop
lcall
imul
shrb
in
mov
inc
fucomp
mov
mov
jg
cld
imul
sbb
aaa
or
and
push
dec
jp
xor
cmp
sub
cmp
sub
lret
or
pusha
cmp
xchg
stos
xor
and
push
dec
leave
lods
cmpsl
mov
and
push
cmp
scas
imul
adc
sub
ljmp
mov
scas
imul
sub
movsb
dec
mov
cmpsb
mov
fisttpll
lds
imul
adc
sub
insb
loope
call
imul
fcmovu
scas
cmp
es
lods
in
scas
sub
jge
mov
pop
jmp
outsb
inc
and
push
cmpsl
in
xchg
inc
and
aad
mov
add
pop
in
cld
das
mov
das
in
push
in
inc
cmp
in
aad
jle
and
mov
cmp
data16
idivl
scas
test
loope
lds
outsl
pop
arpl
fs
in
addr16
out
jmp
push
arpl
xlat
loopne
pushf
js
pushf
xchg
pop
cs
mov
sub
dec
stos
subl
pop
fmuls
imul
iret
lods
sbb
cwtd
outsb
and
pmaxsw
pop
jmp
xor
stos
mov
out
nop
jb
sub
iret
adc
dec
in
movsl
pop
fwait
ud2
insl
lret
mov
loopne
in
mov
int
stos
jo
pop
arpl
loop
in
pop
out
mov
jo
dec
pushf
loope
cmp
in
in
insl
dec
add
dec
cmpsl
lea
cmp
inc
out
pop
lcall
in
int
and
jmp
push
jl
and
pop
mov
imul
pusha
add
sub
test
insb
mov
jmp
stos
pop
pop
sub
sbb
imul
test
jle
dec
fsubr
mov
test
and
and
mov
das
jl
sbb
shrb
push
loop
xchg
gs
xchg
fucomp
imul
jp
sub
push
out
imul
or
mov
cmp
inc
and
xor
or
outsl
imul
inc
xchg
pop
sub
push
test
mov
mov
xchg
in
push
and
imul
in
cmp
xchg
fnstsw
push
lods
test
call
sub
add
and
inc
fucomp
outsb
imul
jle
in
xor
and
imul
cmc
mov
int3
int
xchg
xor
and
lods
aas
repz
push
adc
std
fucomp
cmp
sbb
nop
mov
add
cmovp
mov
mov
xchg
push
imul
xchg
cmpsb
sub
push
dec
in
dec
data16
cmpsl
out
push
inc
ljmp
jmp
pmaxsw
shlb
dec
xchg
imul
dec
lcall
xchg
imul
xor
xor
jmp
jb
cmpsl
data16
nop
jno
fstl
jmp
lcall
imul
call
frstor
in
mov
call
callw
cs
mov
and
aaa
inc
call
scas
imul
test
inc
pop
pusha
enter
pop
mov
imul
sub
imul
imul
and
fs
out
push
jne
pop
sub
sbb
stos
lea
in
jo
or
cmp
in
or
push
imul
mov
xchg
ja
sub
xor
and
push
pop
add
xlat
mov
aaa
mov
inc
aas
mov
mov
sub
cli
test
cltd
jb
bound
dec
adc
arpl
lds
jo
nop
fs
call
cmp
js
cmp
lods
outsl
pushf
lods
call
and
das
add
xor
aad
jle
daa
gs
mov
sbb
jge
push
pop
push
test
aas
jle
sub
xchg
test
pop
out
sub
adcb
insb
out
fcmovu
mov
out
in
push
cmp
out
insb
in
aad
inc
xchg
pop
in
cmp
lods
adc
sahf
adc
insb
pop
fcomp
mov
mov
push
dec
dec
cmpsb
mov
and
push
call
mov
cmpsb
xchg
xor
repnz
adc
jecxz
adcb
cmpsb
dec
xchg
pop
sbb
adc
jae
mov
cmp
sub
mov
and
ljmp
and
movsb
jo
inc
and
lret
cmp
sub
and
xchg
scas
or
or
xchg
cmp
cmp
xchg
and
sbb
pop
dec
cmp
or
push
cs
and
lret
mov
push
lret
insb
out
es
data16
imul
adc
andb
test
popa
test
loope
aas
clc
pop
mov
and
and
cmp
mov
sub
scas
sub
ja,pn
sub
insb
fdivr
push
mov
stc
in
int3
mov
inc
lret
mov
sub
lret
jmp
or
stos
stos
test
lret
xchg
das
test
loop
ss
push
enter
mov
clc
inc
add
mov
das
inc
jno
loopne
cmp
inc
sub
ljmpw
mov
mov
inc
movsb
sub
scas
scas
in
push
jp
cmpsb
or
inc
dec
sub
dec
sbb
std
mov
pop
fisubrs
push
in
decl
and
mov
mov
insl
movsb
push
rcrb
pushf
sub
shr
imul
pop
pop
fidivrl
sub
fiadds
sub
push
call
pop
push
push
outsb
add
cld
dec
scas
arpl
sbb
or
test
jge
popa
insb
popf
iret
in
jns
popa
shlb
lret
and
xchg
pushf
aam
rcll
outsb
sbb
out
add
in
std
fisubrl
jl
lods
mov
or
ja
mov
or
out
or
inc
xchg
mov
and
out
xor
or
stos
inc
and
aam
loope
int
jecxz
and
sbb
imul
lods
out
test
push
xor
push
mov
ret
std
popa
and
push
inc
dec
repz
cld
jnp
lcall
push
lea
das
rcrb
lds
pop
ds
outsl
das
in
ret
es
dec
dec
push
rcll
xchg
nop
ror
jle
lret
sub
leave
lods
into
loop
insb
and
mov
lahf
mov
xchg
dec
ljmp
pop
fwait
in
pop
stc
sub
bound
test
stos
sbb
sub
pushf
out
loopne
aam
int
pop
pop
mov
stos
in
in
jo
sub
xlat
xchg
pusha
cmp
mov
dec
shll
and
pop
and
scas
test
ljmp
xchg
in
in
imul
adc
dec
mov
imul
and
sbb
mov
pop
mov
jle
ret
and
xchg
stos
iret
cwtl
bound
push
lods
scas
mov
pushl
fimull
loopne
fadds
push
movsl
mov
mov
sub
pop
push
push
hlt
gs
lods
cltd
call
pop
out
fbld
lods
ljmp
lods
sahf
xchg
scas
jno
fisubrs
pop
xor
push
sti
aam
js
insb
jle,pn
call
sahf
stos
cmp
rolb
jl
adc
in
mov
and
decl
int3
out
cmc
jnp
fstp
dec
in
ds
lea
pop
xchg
sub
sub
sbb
lcall
pushf
loopne
sub
push
enter
sub
inc
mov
addr16
and
push
sbb
insb
push
and
shld
movsl
negl
sub
push
push
lret
push
sbb
insb
sub
nop
and
cmpsb
fs
cs
mov
sti
pop
cmp
cld
in
stos
mov
clc
push
insb
lods
in
sub
mov
sahf
push
mov
lds
cmpsl
jo
int3
stos
jo
xlat
in
jmp
js
in
insl
int
and
out
sub
inc
lods
mov
in
pop
int
into
insb
subl
out
imul
jmp
sub
cmpsb
ret
decb
stos
in
jno
mov
scas
into
addb
mov
loope
xlat
cmp
and
mov
push
dec
arpl
xchg
popf
sbb
daa
mov
in
jne
lret
lods
push
imul
call
loopne
pop
inc
incl
movsl
sub
std
sub
popf
or
jmp
ret
jae
dec
pop
sub
push
ljmp
push
ret
dec
or
dec
dec
inc
inc
stos
in
jge
loopne
and
inc
shrb
jl
int3
sub
mov
dec
fcomp
lods
inc
jmp
in
jl
xor
popa
mov
dec
stos
test
ret
and
loope
and
mov
sub
cmp
popa
shrl
mov
mov
add
int3
gs
dec
ljmp
lahf
in
test
sub
int
push
test
into
mov
lods
jp
in
push
outsb
adc
add
inc
mov
lea
outsb
mov
mov
dec
repnz
scas
jge
in
outsl
outsb
xor
rorl
in
pop
mov
lahf
insl
ds
push
dec
sahf
loop
mov
jne
insb
ljmp
or
out
mov
out
iret
xchg
fcmovne
js
lods
subb
sub
in
jno
out
rol
push
in
mov
int3
push
pop
mov
or
decl
inc
enter
iret
fisubl
lret
nop
outsl
jl
mov
push
outsb
repnz
pushf
mov
mov
out
orb
movsl
in
push
pusha
add
clc
leave
jle
movsl
in
or
test
in
or
and
mov
xlat
in
sbb
or
cli
inc
in
mov
sbb
cld
pushf
cs
outsl
sahf
sti
pop
hlt
xor
test
out
jmp
ljmp
stc
pop
lods
scas
dec
mov
cltd
fsubr
cs
dec
push
in
cmp
inc
pop
orb
int3
and
sub
lcall
fcmovu
popa
jne
xchg
and
fwait
out
inc
in
test
push
jl
test
out
mov
mov
mov
cli
stos
fsts
or
stos
out
and
and
out
out
lret
pop
mov
inc
pop
lods
push
in
scas
or
dec
int3
cmp
xchg
lcall
cli
sbb
jecxz
lret
push
pop
popf
xor
push
pusha
pop
test
roll
lahf
push
ret
fcomp
xchg
mov
dec
aam
jmp
out
in
subl
popf
loope
or
sbb
push
sub
sub
rcr
movsb
ret
scas
rorl
jge
lret
lds
loop
add
pop
push
and
lret
sbbl
sahf
stos
test
loope
out
jne
sahf
or
xor
cmp
lds
imul
xlat
movsl
outsb
daa
shll
subl
or
pop
add
pop
mov
pop
push
sbb
scas
int
std
in
dec
xor
inc
out
sub
out
out
inc
in
mov
addr16
cmpsl
mov
sbb
xchg
inc
dec
cld
add
mov
mov
call
js
dec
lcall
push
imul
inc
pop
push
dec
sbb
xor
fisubl
insl
mov
int3
gs
jp
insl
pop
ds
jl
add
in
nop
subb
mov
das
loop
push
insl
pop
adc
sub
sahf
lods
cmpsb
popa
stc
adc
daa
or
dec
stc
mov
pop
nop
push
stos
push
loopne
rol
lods
pop
add
dec
call
mov
insl
sbb
fistl
popf
dec
les
fsubrs
cmpb
cltd
outsl
push
cmpb
cltd
outsl
push
cmpb
enter
push
cmp
out
pop
push
and
lods
lds
scas
in
insl
insl
out
dec
adc
xchg
test
sub
push
mov
adc
sub
pop
in
call
fnstsw
incb
jl
inc
outsb
loop
mov
fldt
out
enter
aad
outsb
lcall
cld
push
pop
push
mul
and
cmp
inc
in
push
shll
stos
jbe
and
pop
pop
out
add
icebp
pop
imul
ret
dec
imul
push
shrb
mov
xchg
pushf
out
iret
sub
andb
call
push
enter
mov
stos
ds
into
xchg
dec
bound
xor
sbb
xchg
pop
and
jp
fisttps
jns
sahf
jl
loop
mov
popa
cld
cmc
popa
push
stos
in
aam
jnp
sub
das
ret
daa
fistpll
mov
fdivrl
pop
cmp
sub
imul
das
pop
or
mov
add
push
cmpsl
pop
push
lret
cmp
lods
mov
cmpsl
stos
adc
das
fisubrl
mov
movsb
or
loop
imull
sbb
data16
sub
xchg
add
pop
movsb
and
out
xor
andl
mov
mov
sub
jle
outsl
shrb
stos
push
dec
imul
and
lods
pop
mov
add
test
pop
sahf
jmp
popl
jg
lret
movsb
in
xor
ret
mov
lods
fsubrs
mov
imul
cmpsl
shrl
push
jge
sbb
and
loopne
xor
sbb
mov
scas
jmp
shlb
and
subl
scas
push
adc
mov
inc
jge
mov
arpl
sub
enter
dec
or
mov
and
inc
pop
es
andl
mov
mov
test
nop
mov
rep
repnz
lcall
pop
andb
imul
sbb
loop
mov
mov
sub
loop
and
cmpsl
ret
xchg
sub
mov
scas
fsub
and
subl
fdivrs
into
cmpsl
jle
test
inc
mov
cwtl
cs
mov
and
popa
fs
stos
pop
inc
jno
mov
xorb
movsl
xchg
arpl
push
sub
xchg
pop
lea
jmp
push
sub
inc
adc
ja
imul
sbb
clc
int
lock
ror
pusha
ret
out
push
xlat
out
pop
cwtl
fwait
popa
xchg
lret
cltd
sub
jmp
sbb
or
dec
ljmp
pop
out
add
je
frstor
jne
clc
xchg
dec
sbb
leave
and
in
sarb
fxch
cs
cwtl
bound
lret
stc
mov
out
cmp
or
mov
jp
inc
pop
sub
or
and
aad
icebp
push
mov
jmp
inc
and
imul
out
and
jb
and
adc
lcall
popf
cmc
pusha
insl
push
scas
out
mov
fs
jecxz
cmp
out
sbb
mov
jmp
ljmp
cmp
dec
ljmp
inc
sbb
ja
bndldx
inc
and
adc
roll
sub
inc
push
in
int
leave
sub
movsb
fadd
mov
jmp
pop
fmul
and
test
and
movsb
in
ror
jecxz
inc
out
insb
dec
ret
and
cmp
inc
or
cld
or
cltd
fsubs
sti
insb
test
inc
jl
pop
dec
jle
xor
pop
or
sbb
lock
fadd
out
dec
dec
scas
subb
adc
xor
repnz
stos
mov
mov
dec
inc
mov
not
jp
push
scas
lods
or
pop
test
imul
push
lods
mov
sbb
scas
mov
inc
dec
in
pop
incb
test
or
fs
cs
mov
cmc
std
dec
push
mov
and
fimull
outsl
pusha
popf
xchg
into
ret
jmp
rclb
test
xchg
popa
lods
fnstcw
cmp
ret
and
push
pushf
daa
push
scas
or
mov
test
push
loopne
outsb
popa
cld
and
dec
push
orb
sub
push
sbb
mov
subb
lret
fcmove
loop
aad
pop
or
sub
or
mov
dec
jmp
jp
push
lods
lea
add
test
int
or
dec
cmp
loop
stos
and
movsb
jmp
mov
push
out
adc
jmp
loope
outsb
jmp
cmpb
jmp
cmp
or
jl
jecxz
lods
rcrl
cmp
xor
sub
repz
xchg
push
movsl
inc
cmc
cs
cmp
cmp
iret
jmp
push
data16
jecxz
fsubs
and
mov
outsl
test
movsb
stos
insl
nop
jecxz
dec
out
jp
add
test
pcmpeqw
dec
push
inc
insb
xchg
adc
imull
push
popa
in
lods
cld
popf
xchg
pop
dec
das
outsl
popa
in
xor
sub
fimull
pop
call
push
das
bound
jl
insl
or
bound
mov
sahf
popa
pop
jmp
imul
push
iret
sub
cmp
jl
inc
imul
xchg
dec
movsb
push
sub
cmp
and
call
bound
sub
scas
daa
mov
enter
add
jmp
xchg
out
xor
imul
inc
lcall
push
push
stos
push
mov
sbb
ret
and
ds
outsb
jp
in
out
ljmp
mov
jno
mov
sub
pushf
sub
cwtl
or
test
push
jmp
jecxz
dec
outsl
sub
cmp
inc
sub
fstpt
fstpt
insb
cmc
outsb
stos
push
mov
xor
xchg
stos
std
sub
call
dec
call
mov
jg
push
jecxz
popa
and
and
nop
in
xchg
leave
sub
xchg
mov
dec
add
mov
sub
jmp
mov
pop
cmp
jecxz
push
xchg
insb
cs
lods
cs
fildl
popf
push
cmp
push
lods
dec
push
insb
aam
sbb
dec
pusha
mov
or
inc
imul
jmp
int3
push
into
jnp
ret
and
mov
push
cs
mov
stos
ds
test
add
test
lcall
xchg
xchg
push
std
sub
add
sbb
jle
in
dec
push
loope
mov
xor
mov
add
cmp
scas
mov
ret
and
jmp
push
or
stc
add
push
pop
sub
insb
aaa
ret
stos
mov
ret
mov
inc
andl
scas
sub
cmp
stos
shll
pushf
addl
sarl
jnp
or
pop
dec
dec
lods
mov
scas
pop
dec
jns
jecxz
fidivs
pushf
jmp
mov
lds
outsb
sub
loop
cmp
jb
cmpsl
aad
aaa
cli
aaa
scas
sub
frstor
stc
test
js
xchg
sub
sbb
sub
mov
mov
enter
cltd
sub
pop
fdivrs
cli
adc
fdivrs
call
fcomps
xchg
jnp
mov
dec
jb
sub
xor
lahf
mov
cwtl
mov
sub
out
jb
xchg
pop
sub
das
adc
ja
sti
sub
out
sub
mov
and
xchg
sub
and
daa
add
mov
gs
imul
and
sub
lret
sub
clc
call
stc
mov
popa
sub
fsubl
in
andl
add
sub
nop
dec
ret
sub
cmp
push
inc
sbb
push
or
cmp
les
fisttpll
jae
xchg
fwait
out
xchg
push
push
xchg
insb
jecxz
ror
mov
push
cmpsl
ficoms
add
or
dec
iret
sub
mov
cs
push
sub
sbb
icebp
jmp
stc
and
push
dec
pop
leave
dec
pop
fs
mov
and
mov
mov
out
push
rcr
sub
pushf
test
ljmp
and
jmp
loope
cltd
jg
or
xchg
lret
jecxz
push
ficompl
sub
leave
and
inc
int3
fadd
sbb
add
je
pop
scas
in
pop
imul
pop
ds
iret
add
sub
dec
repz
stc
lahf
xchg
call
mov
adc
fisubrl
mov
and
mov
cltd
push
into
mull
add
scas
jb
dec
movsb
add
rorl
xchg
jmp
popf
push
rclb
mov
ret
insl
push
push
les
pop
outsl
iret
sbb
in
xorb
mov
or
push
mov
dec
imul
lds
into
insl
in
xchg
test
xchg
or
and
lcall
mov
repnz
ret
stos
lahf
std
into
lret
stos
push
xchg
stos
mov
cltd
sti
or
in
pop
inc
push
in
lea
xchg
gs
into
icebp
mov
jmp
and
or
mov
fisttpll
push
push
inc
jle
dec
adc
sbb
jmp
adc
movsl
add
lea
inc
pop
insl
and
ljmp
addl
dec
mov
dec
sub
stc
fadd
sub
call
enter
stos
in
rorl
mov
inc
stos
mov
mov
shll
or
sbb
bound
inc
dec
imul
iret
mov
add
mov
cmp
je
mov
mov
loop
jmp
xchg
inc
jge
push
lea
add
pop
iret
mov
pop
sbb
lcall
jmp
or
jle
add
sub
iret
mov
or
add
jb
push
push
insl
inc
pop
roll
ret
cmovp
xchg
mov
out
jmp
sbb
dec
jmp
pop
movsb
test
lods
mov
mov
inc
dec
mov
pop
outsb
ljmp
subl
mov
test
cmpsb
movsb
jmp
ret
out
pushf
push
cltd
push
in
fistps
dec
in
push
iret
jae
sub
pop
ljmp
push
stos
mov
test
outsl
mov
pushf
leave
push
es
inc
sbb
lods
in
mov
imul
shll
fs
sub
dec
inc
mov
loop
loop
dec
push
add
mov
orl
out
push
sub
sbbl
inc
fidivrs
into
xchg
repz
xor
mov
jb
roll
out
dec
icebp
sub
out
and
push
scas
pop
cs
inc
xchg
loop
stos
cmpsb
gs
jmp
mov
push
mov
push
push
into
mov
or
cmpsl
or
stos
or
out
int3
loopne
push
inc
cltd
adc
sti
scas
xor
int3
fsubl
pop
inc
push
gs
cmp
or
out
mov
sub
out
add
out
in
nop
out
xchg
dec
mov
or
je
test
loop
dec
in
dec
mov
pop
inc
out
int
add
mov
int3
push
sbbb
lds
inc
es
test
scas
jl
gs
push
xchg
add
mov
ret
cltd
and
int
xchg
ret
jecxz
push
movsl
lret
lret
aad
jl
loop
ficomps
pop
stos
mov
shll
in
test
mov
inc
pop
pop
outsl
inc
out
push
mov
bound
pop
mov
cld
xchg
and
mov
nop
and
and
out
test
mov
in
inc
out
pop
and
xor
pop
lret
movsl
pop
push
xchg
int
mov
in
les
popa
adcb
cmpsb
out
and
jmp
push
or
repz
jo
inc
dec
cmpb
pop
and
mov
fs
mov
ds
dec
or
push
lods
or
sbb
mov
lods
add
dec
jae
add
pop
lods
iret
add
shll
dec
dec
mov
cmpsb
cld
punpcklbw
jb
sahf
push
addr16
roll
mov
out
cltd
sub
sub
shlb
cli
mov
loope
outsl
loopne
xchg
mov
mov
rorl
lcall
in
insb
or
pop
or
arpl
fisttpll
stos
movsb
scas
inc
jg
icebp
fsubrp
ret
repnz
sub
jns
cld
roll
cs
or
push
mov
ret
in
out
add
fldcw
loop
or
std
push
pop
in
int3
andl
imul
inc
ret
fs
call
push
dec
push
lret
mov
push
sub
pop
mov
movsb
iret
inc
and
cmp
popa
xchg
int
mov
imul
out
mov
out
xchg
int3
shll
xchg
push
and
jge
je
loop
das
scas
dec
and
push
dec
sbb
int
pop
and
ljmp
mov
in
push
and
out
xchg
inc
sub
pop
outsb
lds
imul
push
sub
pop
sub
outsl
mov
out
ljmp
stc
faddl
adc
sbb
shrl
je
int3
rolb
enter
mov
lods
pop
and
mov
pop
or
or
adcl
push
push
sahf
ds
push
vmovapd
loope
pop
sub
arpl
mov
inc
std
or
into
jnp
imul
xchg
cmp
aad
xchg
addr16
lret
scas
xlat
cmpsb
sbb
outsb
and
fistps
mov
push
push
lret
mov
ja
outsl
push
into
sbbl
sbb
dec
push
in
push
mov
loope
push
cmp
xchg
xchg
or
loopne
popa
dec
pushl
mov
dec
shll
cmpsl
ffree
insb
repnz
popl
lods
or
aaa
stc
pop
mov
loop
pushf
insl
fs
rorl
in
jb,pn
inc
xor
dec
pop
sub
sub
arpl
addr16
pop
shufps
pop
lds
mov
mov
ret
inc
incl
and
imul
stos
rorl
movsb
das
int
scas
xor
dec
or
popf
adc
mov
dec
shll
mov
push
stos
push
and
xchg
dec
dec
jge
iret
iret
add
cltd
movsb
gs
jl
mov
loope
push
lret
enter
pop
pushf
iret
add
ret
in
dec
fdivrs
inc
out
pusha
movsb
pop
xchg
mov
fimull
jle
out
ret
insl
mov
imul
or
shll
imul
xchg
je
and
mov
xchg
xchg
les
loope
push
scas
dec
std
ror
shll
jp
mov
pop
inc
inc
int
shlb
in
or
movsl
and
push
sub
dec
fiaddl
sbb
push
pop
test
arpl
fsubrs
mov
sub
jmp
dec
test
sub
bound
pop
ds
out
push
popa
mov
dec
stos
popa
mov
cltd
daa
cmp
out
cmp
inc
jl
or
mov
inc
add
loop
sub
rcrb
mov
cmp
cmpsb
jge
inc
lods
inc
jmp
dec
adc
mov
push
fisttps
sbb
dec
jp
in
push
dec
xor
pop
pushf
in
ljmp
inc
setp
loopne
int3
pop
mov
mov
or
in
dec
add
xchg
jns
in
out
inc
push
pop
inc
in
fiadds
test
out
stos
sub
data16
int
jmp
jecxz
add
jb
mov
ret
ljmp
sub
in
sbb
xor
ljmp
inc
in
je
scas
xchg
data16
inc
or
movb
jmp
adc
and
dec
bound
xchg
popa
sub
orl
in
xchg
or
lret
cmpsb
xchg
movb
mov
test
inc
sbb
dec
jnp
dec
xor
sbb
inc
lcall
push
jmp
xchg
test
xor
mov
xlat
dec
inc
lret
or
dec
push
pop
adc
mov
iret
sub
in
xlat
fnstsw
setb
mov
add
sbbb
add
xor
into
jae
jb
inc
or
icebp
es
cld
rol
mov
cs
in
push
repz
push
sahf
xchg
es
push
lds
dec
jne
or
sub
dec
out
or
mov
gs
pop
int3
mov
decl
jmp
addr16
outsb
jl
xchg
sarb
adc
adc
popa
or
xor
or
out
mov
dec
scas
icebp
pop
in
dec
push
inc
inc
xchg
popa
pop
mov
in
pop
out
lret
ljmp
mov
or
sub
out
add
dec
lds
scas
cmpsl
outsl
roll
gs
outsb
mov
inc
out
sub
cmc
addr16
or
mov
popa
lods
cmp
push
stos
mov
dec
xor
std
into
cmp
addl
fwait
or
lea
and
mov
mov
cmp
loop
sub
push
test
out
or
jmp
dec
out
jg
or
mov
sub
mov
dec
and
xor
or
mov
lcall
out
xchg
or
lahf
xchg
das
int
data16
push
mov
std
ret
loope
incl
test
cmp
dec
ror
dec
inc
xchg
jecxz
je
pop
cmc
test
movb
adc
out
or
sub
jo
cmp
mov
mov
pop
jmp
mov
shrl
loop
inc
sbb
cmp
cmp
int3
fisttps
pop
inc
xchg
jne
jl
ret
test
arpl
sbb
outsb
push
test
push
sbb
cmp
push
jp
cmpsb
scas
xchg
mov
or
pop
or
jecxz
es
sbb
lods
or
add
jge
or
add
mov
lcall
push
xor
lds
jg
stos
inc
and
fwait
dec
jp
push
xchg
arpl
jl
pop
subl
xor
and
out
pop
das
aaa
leave
mov
mov
fsts
push
push
ret
and
mov
dec
gs
sbb
inc
rorl
in
xchg
sub
movl
mov
js
dec
or
out
enter
push
into
loopne
jg
sub
std
in
je
sub
std
mov
xor
sar
in
cli
dec
cmc
inc
movsb
xchg
cmpsb
out
lods
loope
popa
mov
jmp
fmul
jecxz
xchg
or
addb
pop
popf
or
mov
sbb
inc
or
dec
cmpsl
mov
dec
and
mov
mov
aam
pop
dec
shll
pushf
xchg
imul
pop
stc
and
stos
sahf
test
out
sub
xor
scas
shl
xchg
adc
or
cmc
mov
adc
and
mov
cs
push
sbb
xor
in
cmp
insb
adc
lret
mov
mov
cmp
or
mov
dec
lds
push
dec
dec
mov
mov
lds
ret
inc
or
lcall
ret
cmpsb
out
imul
les
out
push
cmp
inc
xchg
bound
mov
repz
add
push
jne
je
lret
sbb
mov
out
call
xor
push
xchg
mov
pusha
sbb
ljmp
adc
out
in
sbb
jnp
and
bound
out
jo
lea
pop
jle
mov
pop
call
cmpl
ja
iret
dec
jno
or
loopne
movsb
mov
push
cld
stos
in
stc
insb
testb
insl
movsl
adc
sbb
adc
sbbl
adc
push
adc
lret
enter
cmpsb
ret
loope
mov
xchg
xorb
ljmp
push
ljmp
lcall
dec
fisubs
inc
scas
shlb
or
xorb
insl
iret
addr16
wrmsr
mov
or
es
sub
add
xchg
scas
jl
or
xor
xchg
and
es
jecxz
lds
loop
dec
in
into
lahf
mov
orb
fldl
inc
sbb
aad
insb
stos
adc
mov
ja
jnp
push
loopne
into
xchg
bound
das
ret
outsb
std
inc
cli
rcrb
loop
cs
xchg
frstor
ret
cmp
test
lds
dec
bound
ficoml
out
out
pop
das
push
sbb
arpl
cmp
in
push
decb
out
and
and
pop
mov
dec
lret
ja
jb
in
or
call
cmp
dec
jg
xchg
iret
sub
push
mov
mov
inc
in
loopne
pop
int3
loope
iret
mov
xor
jmp
popa
mov
iret
mov
dec
xor
or
shll
shlb
and
out
sbb
pop
xchg
cmp
out
popa
mov
pop
scas
insb
arpl
xchg
out
adcb
or
or
into
ret
xchg
data16
test
cmp
mov
push
in
jge
cmp
inc
popf
xor
iret
popf
xchg
scas
jge
push
into
addl
dec
loop
in
inc
jl
lds
mov
popa
cmp
pop
add
push
repnz
out
jecxz
pusha
mov
and
xor
out
addl
pushf
cmpsl
scas
out
sub
lahf
sbb
xchg
fwait
cmpl
push
addl
addl
fisttpll
loop
inc
rcrl
cmp
rorl
mov
dec
ret
dec
lds
test
mov
or
and
mov
out
push
es
stos
cmp
pop
cmp
iret
std
mov
xor
in
pushf
popa
mov
adcl
repnz
adc
fildll
incl
jb
int3
lahf
mov
into
add
pop
add
xor
lcall
out
push
imul
roll
push
add
or
sub
adc
cmp
sbb
push
mov
inc
jp
lahf
imul
mov
lahf
mul
ljmp
xchg
in
xor
scas
das
lds
subl
cmp
inc
outsb
xor
insl
popf
mov
dec
orb
je
fs
dec
sub
test
cmp
push
pop
mov
es
jp
cmp
ret
push
out
dec
mov
xor
cmpsb
aas
mov
cwtl
mov
mov
dec
add
rcrb
leave
jmp
add
add
enter
outsb
test
mov
jg
ljmpw
imul
fisttpl
jle
fidivs
jmp
push
mov
outsb
jle
inc
xchg
adc
lcall
icebp
bound
cmp
add
mov
es
jl,pt
stc
pop
or
out
xorb
adc
cmp
test
arpl
push
jle
in
std
fucom
out
and
shr
fistpll
pop
mov
inc
mov
pop
pop
test
out
jl
enter
cmp
dec
lahf
xchg
mov
mov
push
inc
inc
int3
dec
lcall
or
mov
cmovs
xchg
mov
insb
inc
xor
std
fs
imul
xlat
test
stos
or
mov
adc
fwait
or
in
cmp
dec
xchg
aaa
push
inc
adc
and
adc
mov
in
sahf
cmp
ret
iret
xlat
scas
inc
daa
xor
imul
inc
or
testl
cmp
jbe
sub
cmp
addr16
js
insb
dec
mov
pop
adc
jbe
es
mov
rcll
mov
pop
xor
mov
dec
adc
int
push
push
or
inc
popf
push
dec
mov
jmp
push
add
lcall
out
xchg
ja
xchg
jnp
xchg
ss
and
jo
cmp
cmp
xor
loop
pusha
sub
mov
xchg
adc
xor
mov
lea
filds
pop
cmp
mov
or
jnp
out
cmpsl
sti
or
repnz
xchg
iret
cmp
sbb
int
ret
test
mov
sbb
pop
mov
mov
dec
mov
insb
cmp
xor
mov
lods
inc
push
stos
lahf
shrl
inc
add
int
out
jae
lds
ret
pop
imul
jp
out
lds
aad
std
out
add
pushf
scas
cmp
mov
in
or
out
lock
insl
cmp
int3
filds
inc
cli
jge
or
inc
out
popf
xor
or
or
jae
or
lds
mov
xor
enter
ret
pop
xchg
inc
movsl
mov
outsb
sbb
jecxz
or
repnz
or
jmp
add
mov
xchg
inc
bound
cltd
rcrl
std
or
jo
adc
xchg
pop
pop
scas
push
or
jl
xchg
leave
sahf
and
cmpsl
xor
out
into
out
push
test
lret
add
jp,pt
ja
or
sbb
mov
cmpsl
push
rorl
xor
pop
xchg
cltd
and
fldl
test
adc
xchg
in
pop
iret
popf
scas
das
popf
int
sbb
cmp
add
cmp
or
inc
arpl
cmp
into
mov
lret
inc
xlat
sub
pop
imul
add
push
imul
push
in
lea
mov
mov
popf
push
inc
add
mull
aaa
xor
dec
enter
ret
in
iret
pop
arpl
mov
xchg
cmp
jbe
mov
inc
push
cmp
inc
mov
jmp
or
jmp
xchg
in
int
mov
mov
aas
mov
dec
lahf
fucomp
iret
jb
lea
iret
adc
daa
push
cmp
out
dec
mov
mov
and
repz
inc
jnp
pushf
loop
xchg
add
outsb
lds
adc
mov
dec
xchg
jge
out
cmp
inc
les
jecxz
inc
ds
and
push
or
inc
dec
sub
insl
sub
and
int3
xlat
mov
cmpsb
fcomp
lods
or
mov
popf
pop
popa
pop
or
inc
pop
ds
out
sbb
aas
xor
mov
mov
into
addr16
in
mov
addr16
inc
mov
popf
sub
iret
mov
xor
scas
lcall
jns
dec
add
bound
cld
nop
push
mov
jle
ret
sahf
imul
adc
dec
out
xor
rdpmc
xchg
outsb
cmp
icebp
xor
add
outsb
movb
leave
std
rcr
loopne
sbb
leave
mov
inc
lahf
mov
test
addl
pop
test
dec
or
sbb
mov
or
add
pop
lahf
sbb
subl
call
sub
xor
lsl
pop
int
or
ds
jb
pusha
int
ret
dec
mov
xchg
xchg
scas
fistps
add
xor
jl
or
cmp
push
pop
mov
pop
in
jne
xchg
test
or
ret
cs
mov
dec
inc
out
adc
xchg
push
sub
jmp
add
or
pop
gs
push
push
adc
or
pop
mov
pop
mov
dec
repz
push
imul
stc
xor
sub
push
or
push
das
icebp
jae
iret
call
stos
or
push
and
iret
lcall
adc
pop
jne
push
imul
or
cmpsb
inc
mov
dec
xor
jecxz
push
push
out
dec
cmp
jo
pushf
rorl
orb
popa
push
push
aaa
xchg
add
dec
ja
add
dec
push
jmp
pop
mov
lea
dec
popf
xchg
es
outsb
int
cmp
mov
stos
pushf
push
dec
daa
and
inc
jge
gs
mov
or
repz
sub
push
aas
lcall
in
pop
adc
dec
into
inc
nop
xor
lods
or
or
pop
in
xchg
mov
insb
pop
out
imul
or
and
inc
cmpsb
dec
mov
fldt
xor
inc
mov
add
jo
xlat
mov
aas
adc
daa
dec
lea
std
jp
or
dec
lea
sub
rcr
jae
add
inc
int3
dec
adc
inc
je
push
stos
test
mov
lea
pop
stc
and
xor
pop
sub
mov
pop
lahf
xchg
push
mov
xchg
movsl
out
xlat
dec
mov
add
add
jo
jle
jg
int
fucomip
insl
cmp
pop
and
cmp
mov
lods
lds
stos
cmc
adc
adc
pop
aaa
outsb
rclb
faddl
stos
stos
mov
sub
lahf
dec
test
xchg
bound
cmp
mov
mov
stos
std
xor
jg
sarl
jo
aas
arpl
lret
arpl
pop
mov
imul
leave
and
scas
leave
out
mov
cmpsb
or
pop
js
ret
or
xor
mov
or
scas
xor
in
sbb
lret
jl
inc
arpl
cmc
add
out
mov
out
or
inc
mov
std
daa
jb
sub
lret
jecxz
and
cmp
inc
xchg
or
or
dec
jne
cld
jmp
jae
in
incl
lret
into
cltd
insb
cmp
in
mov
inc
adc
lds
imul
mov
loop
inc
inc
lods
dec
sbb
addr16
pop
aas
frstor
rolb
cmc
cmp
jbe
dec
mov
pushf
add
mov
add
sub
lcall
pop
or
push
add
jmp
xchg
push
lea
cmp
lret
lea
popf
andl
lea
mov
xorl
adc
dec
sbb
in
stc
pop
ja
jecxz
mov
add
add
or
mov
dec
mov
adc
in
jg
lods
push
xchg
inc
xor
sub
dec
aas
leave
pop
cs
cmpxchg8b
pop
sub
mov
cmc
stos
lods
scas
shrl
add
andl
mov
or
icebp
outsb
pop
out
in
jl
adcb
adc
jae
or
int3
or
ss
mov
icebp
adc
cmp
push
mov
mov
push
push
test
icebp
sub
dec
aad
mov
pop
outsb
dec
add
xor
jp
les
out
dec
imul
jmp
xor
jecxz
ret
lea
rolb
pop
int3
cmpsb
push
push
inc
punpcklwd
jl
mov
adc
jge
and
shll
out
jnp
gs
lods
mov
pop
jge
mov
insl
dec
aas
push
in
jmp
and
add
jp
or
cmp
dec
inc
imul
lds
mov
pop
ret
pop
or
data16
pop
dec
sub
add
cmp
and
add
popl
or
and
fdivl
out
les
adc
je
cs
cs
xor
icebp
xor
cmpl
int3
inc
fbld
jmp
out
adc
adc
add
inc
xchg
jo
pop
call
out
pop
or
and
icebp
sub
je
aad
and
out
in
int3
mov
out
les
jnp
jmp
orb
lahf
xlat
insb
pushf
fists
add
ja
ror
push
dec
mov
aaa
cmp
fcompl
cmova
repnz
adc
lret
popf
in
jae
inc
push
lret
push
push
cs
inc
andl
jb
dec
loopne
insl
enter
adc
pusha
jbe
movsb
aas
ss
inc
push
inc
mov
mov
push
ret
xchg
xchg
or
inc
xor
jae
xchg
lea
mov
scas
inc
push
pop
aas
pushf
cs
sbb
sbb
ret
insl
lds
leave
arpl
push
sahf
test
dec
test
pushf
push
dec
lahf
cmovno
mov
mov
jg
xchg
push
pop
add
jp
mov
addb
lds
cmp
in
adc
out
paddusw
ds
jmp
cltd
lods
cmp
sbb
xor
arpl
pop
dec
jp
and
addb
stc
aaa
pop
push
cmp
jecxz
pop
mov
ljmp
in
and
or
int
cmc
pushf
pop
lret
mov
xlat
or
lret
int
push
ret
jae
scas
test
or
in
mov
mov
mov
ret
mov
pop
gs
mov
icebp
push
cs
mov
clc
jbe
gs
add
adc
in
xor
xchg
cwtl
push
mov
stos
outsb
and
insb
movsl
xor
adc
mov
inc
pop
insl
push
pop
dec
dec
or
leave
dec
mov
int3
lds
dec
out
or
jl
or
dec
cmpsl
push
cmc
adc
dec
xchg
xor
mov
ja
or
je
pop
into
jo
mov
lahf
dec
test
adc
mul
arpl
add
xlat
int
pop
popf
mov
jl
jecxz
mov
and
in
or
add
cli
cmpsl
xchg
xor
push
dec
int
sub
repnz
add
mov
lods
loope
inc
and
and
int
cmp
push
out
mov
inc
jp
jge
adcl
imul
and
add
insb
mov
mov
mov
fbld
mov
dec
lea
lods
adc
mov
aad
mov
sub
add
jecxz
cmp
jl
or
mov
pop
stos
out
into
loope
jnp
or
push
inc
mov
adc
mov
test
out
lahf
iret
pop
sbb
jbe
ja
or
cmp
int
pushf
gs
das
lds
jbe
xor
or
cmpsb
cmp
cmpl
dec
dec
mov
aad
lods
inc
jecxz
out
mov
cmp
jbe
cld
icebp
cs
out
mov
dec
pop
cmp
lret
test
in
roll
in
pop
and
les
loop
jle
bound
inc
push
out
xchg
out
int3
pop
repnz
xchg
ja
dec
xchg
ja
in
inc
add
js
mov
pop
sahf
out
inc
pop
or
mov
movsl
lahf
fwait
arpl
mov
cmpsb
test
push
imul
push
cs
xchg
dec
pop
in
dec
xchg
pop
movsl
vpmulhuw
add
lds
add
mov
or
jb
and
sub
pop
or
pushf
mov
mov
sub
xchg
daa
iret
mov
lahf
cmp
mov
adcb
lods
push
xchg
aad
pop
mov
lahf
fwait
dec
adc
cmp
pop
cld
mov
pop
dec
jp
dec
add
dec
addr16
jb
fidivl
xchg
or
in
fwait
int
lret
mov
gs
add
daa
jl
pop
loope
sbb
iret
xchg
testb
cmp
mov
insb
adc
fwait
in
xchg
mov
push
dec
test
insl
xor
mov
xchg
test
out
xchg
cltd
cmpb
adc
add
sbb
mov
xor
mov
cld
and
pop
ljmp
pop
sbb
mov
xchg
outsl
dec
fildll
pop
imul
jge
cmp
jbe
add
and
popw
push
dec
push
mov
std
add
shll
outsl
push
dec
inc
jmp
push
pop
sahf
leave
push
ds
dec
mulb
push
fwait
out
cmp
dec
xchg
lds
add
ret
xchg
inc
cmpxchg
mov
pop
sub
jmp
int3
lcall
xchg
mov
xor
out
addb
popf
mov
jl
dec
aaa
icebp
pop
inc
lods
mov
ret
mov
inc
in
loopne
push
pushf
sub
lret
xchg
bswap
xchg
loop
pop
mov
xchg
insb
push
or
inc
xor
dec
inc
stos
jbe
jns
jge
pop
arpl
sub
lods
or
int
test
es
push
out
aad
xchg
fistps
cmpsb
mov
xorb
subb
subl
lea
push
vcmpeq_osps
test
jle
outsb
inc
cltd
insl
dec
cmp
leave
cwtl
jbe
or
or
mov
mov
addr16
mov
test
fs
shlb
cmp
xchg
push
lds
or
mov
pop
cmp
fidivrs
adc
push
mov
push
insb
sbb
inc
jle
mov
mov
icebp
lretw
shll
enter
and
decl
xchg
add
into
push
inc
inc
xchg
ja
daa
out
and
repnz
setae
popa
iret
mov
mov
pop
scas
scas
xor
add
mov
push
es
in
add
sbb
out
rcrb
and
ret
sub
or
scas
test
jb
cmpsl
jmp
into
dec
adc
ret
jle
or
mov
xchg
lret
xor
adcb
lret
enter
mov
jl
je
add
cli
sahf
inc
in
fcom
cltd
dec
addr16
je
pop
xchg
mov
jge
out
dec
or
mov
mov
mov
je
jo
pop
xchg
inc
dec
imul
xcrypt-ecb
cmpsl
dec
adc
fadds
pop
dec
lds
mov
lea
out
push
out
mov
mov
adc
repnz
pop
jne
xchg
jge
ljmp
mov
insl
dec
cmpsb
mov
inc
fs
jae
mov
mov
jecxz
xchg
push
and
sbb
push
lods
dec
pop
cmpsb
cmp
loop
dec
dec
ja
dec
js
shll
xchg
jp
mov
and
push
mov
jb
movsl
int
mov
cmp
out
sahf
sahf
iret
addr16
mov
dec
fiaddl
ja
aad
lret
ljmp
xchg
aaa
movb
inc
cmp
je
mov
cmp
xchg
xchg
roll
mov
and
popf
or
jo
jo
in
popa
and
pop
aaa
testb
sbb
daa
xor
inc
push
dec
lcall
out
adc
repnz
push
cmovge
lret
cmp
mov
xor
jle
lods
cmp
insb
ret
fstpl
push
pop
or
stos
push
cli
lahf
push
push
orb
fildll
out
jmp
outsl
dec
iret
mov
mov
dec
inc
inc
sub
xchg
xchg
sbb
xchg
dec
push
xor
jns
push
push
mov
fisubrl
ja
jbe
mov
xchg
xlat
mov
sbb
add
jp
jmp
add
push
test
inc
or
outsl
out
or
jne
frstor
mov
xchg
mov
pop
adc
mov
inc
xchg
ja
xchg
cmpsb
mov
out
inc
inc
xor
sbb
push
fisttpll
out
add
inc
jle
movsb
sub
test
and
cmp
outsl
mov
aas
pop
mov
pop
out
pop
push
lcall
dec
mov
jo
sahf
mov
sbb
fwait
xorl
cmc
xchg
int
add
xchg
fincstp
xchg
jmp
jb
mull
dec
ret
in
pop
mov
ljmp
test
lcall
lds
test
cmc
aam
imul
cmp
iret
add
out
cs
push
ds
xor
mov
pop
int3
xchg
push
sbb
cli
das
cmp
jns
or
xchg
xor
jbe
ret
jle
insl
lea
mov
and
shrl
add
mov
or
daa
push
enter
loop
inc
push
arpl
into
out
dec
sbb
jl
push
add
shr
stos
jb
lods
or
jnp
in
nop
inc
xor
loop
pop
mov
inc
push
mov
mov
jmp
jecxz
js
push
push
jmp
out
testb
mov
or
inc
enter
test
je
cltd
loop
incl
sub
xor
add
in
push
lret
mov
pop
xchg
loopne
xchg
inc
scas
and
xchg
pop
ja
inc
adc
aas
sub
out
inc
dec
inc
xchg
ja
and
jbe
mov
jbe
mov
or
pop
xor
mov
sub
inc
xlat
scas
pop
xor
in
inc
popf
cmp
push
mulb
ret
pop
mov
and
cmc
push
dec
jl
das
jl
scas
or
cmpsb
mov
into
inc
outsb
inc
stos
xchg
xlat
lods
lds
aas
pop
loop
inc
in
mov
jb
shl
test
jmp
push
and
inc
enter
movsb
xchg
movntq
inc
push
cmpsl
jbe
out
push
mov
adc
fiaddl
push
sti
dec
dec
pop
dec
mov
sbb
push
bound
rep
roll
iret
sub
popa
call
in
mov
pop
mov
adcl
xchg
push
mov
xor
aaa
mov
xchg
xchg
cmpsl
in
psubd
ljmp
xchg
mov
mov
lds
shrb
or
push
lds
dec
xchg
jae
and
ljmp
xor
adc
pop
cmp
cmp
xor
push
dec
insl
shll
repz
push
jp
jmp
mov
sub
sbb
lds
or
xchg
addr16
push
data16
fwait
add
push
dec
testl
fs
mov
out
sub
pop
xchg
jle
dec
mov
lea
mov
ss
or
add
mov
ss
icebp
cmp
loopw
jp
cmp
jae
push
cmp
dec
xchg
mov
les
arpl
or
xlat
cmp
cmpsb
iret
adc
out
int
stos
adc
sbb
incl
adc
sbb
inc
inc
mov
adc
push
mov
xchg
jl
cmp
fistps
pop
cmp
loop
mov
icebp
inc
jp
arpl
mov
or
cmpsl
aas
push
call
jbe
insb
cmp
arpl
sub
cmp
adc
pop
push
orl
pop
cmp
jne
adc
push
scas
addr16
mov
aaa
jne
mov
iret
fisttpll
fidivs
int
inc
sbb
mov
xchg
ror
cpuid
and
mov
in
xchg
repnz
push
pushf
pop
push
push
dec
aas
sahf
ret
cltd
sub
test
mov
push
enter
fs
imul
testl
loop
or
cmp
jo,pt
sbb
test
sti
ja
mov
jb
dec
loop
add
adcb
sub
stos
loop
push
arpl
pop
sub
pop
daa
push
out
cmpsb
fimull
xchg
lea
dec
cltd
add
inc
sub
add
dec
adc
incb
lret
out
out
in
outsb
inc
imul
sub
add
je
xchg
cli
out
push
mov
dec
xchg
add
addr16
imul
inc
add
in
shrb
insl
fs
insb
sahf
fiadds
movsb
cmc
jbe
loope
mov
cmp
or
lret
ljmp
mov
inc
cmp
fcmovu
fisttps
jp
movsb
jp
or
add
mov
lret
mov
add
out
push
cmpsl
mov
js
aaa
sbb
dec
std
add
mov
or
in
sub
int
mov
adc
push
stc
mov
pushf
mov
sub
flds
inc
push
insl
xor
mov
shrb
stc
add
jae
cltd
aaa
add
mov
ret
dec
jne
iret
fwait
lea
rclb
icebp
dec
call
arpl
out
fldl2t
jecxz
jmp
xor
lret
ret
sub
or
mov
enter
fisttps
dec
cmp
lea
push
mov
mov
adc
shrl
inc
imul
dec
std
pop
out
outsl
aaa
push
stc
mov
pop
in
js
inc
push
sbb
sub
nop
dec
cli
movsb
jmp
sbb
shrl
scas
jmp
pop
es
pop
dec
dec
fisttpll
dec
push
jne
mov
mov
push
xor
icebp
dec
lds
movsb
fcomp
push
jmp
and
mov
xchg
das
out
jno
mov
and
cmpsl
sub
pop
dec
leave
mov
inc
loopne
rcll
cmp
xor
cwtl
pop
dec
xchg
mov
out
addl
aaa
jo
lcall
leave
popf
or
sti
push
lcall
mov
mov
mov
fidivrs
sbb
mov
scas
jg
aas
outsl
lock
jo
xor
icebp
cmpxchg
jno
xor
repnz
jb
xor
repz
jae
xor
hlt
lfs
je
xor
cmc
lgs
jne
xor
and
jmp
fwait
mov
push
or
mov
aas
hlt
lods
stos
inc
and
pop
mov
add
addr16
jnp
imul
repnz
and
sbb
out
cmpsb
stos
push
aaa
hlt
sub
in
imulb
in
negl
notl
notl
adc
xchg
pop
or
out
cmpsb
cmp
es
out
cmpsl
andl
and
addr16
and
addr16
push
div
in
mov
mov
rorb
lret
movsb
pop
sti
iret
add
sbb
cld
fwait
jge
mov
lea
push
pop
pop
dec
sbb
jnp
imul
or
cmp
cmp
cmp
fnstsw
popf
cmp
sbb
cmp
push
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ljmp
add
icebp
jl
mov
shll
inc
mov
movsl
mov
mov
je
flds
fildl
ret
jmp
or
add
hlt
mov
dec
and
pcmpgtd
es
out
pop
mov
jge
scas
sbb
or
sbb
fmull
jle
cmpsb
test
mov
dec
outsl
out
imul
outsl
comiss
push
xcrypt-ofb
cmpsl
in
cmp
mov
and
jnp
mov
imul
mov
lret
sbb
out
scas
adcl
inc
pop
sub
dec
jno
bound
sbb
sub
cmp
sub
mov
pop
lret
outsl
cmpsb
push
dec
pop
sti
fmull
jnp
imul
and
pop
dec
les
imul
or
cmp
mov
leave
aaa
mov
gs
bound
mov
cmp
ds
call
insb
sub
add
jnp
imul
inc
lock
sbb
cs
repz
hlt
mov
or
mov
shl
roll
pinsrw
lgs
add
lret
cmp
fdivrs
test
cmp
mov
cmp
jmp
aam
sub
test
sub
mov
jmp
jnp
int3
mov
mov
mov
mov
mov
mov
mov
mov
inc
xchg
mov
mov
mov
mov
mov
mov
mov
xchg
xor
jecxz
inc
sbb
add
popa
sti
mov
add
jmp
loop
mov
bt
arpl
and
in
movsb
pcmpgtb
and
in
movsl
pcmpgtw
and
movntq
cmpsl
packuswb
test
push
outsl
test
pminsw
stos
ja
enter
sub
lods
insb
addr16
in
lods
insl
addr16
cmpsl
outsb
addr16
scas
outsl
addr16
loopnew
mov
addr16
pop
sub
loop
mov
jcxz
mov
addr16
movsb
addr16
movsl
lods
gs
mull
fwait
call
repz
jmp
imull
imul
imull
imull
imul
imull
lods
imull
sub
imull
cs
imull
mul
mull
mul
mull
mul
mull
mul
mull
es
or
adc
add
cmp
icebp
shl
inc
repz
repz
aam
test
adc
inc
testl
and
or
mov
push
es
or
jnp
or
add
cmp
xor
push
enter
push
lea
push
mov
push
mov
push
aad
xor
or
imul
out
push
lods
jmp
lea
addr16
loopnew
in
lods
mov
loope
mov
loop
mov
cmp
cmp
cmp
cmp
in
movsl
cmp
and
cmp
es
cmp
dec
test
push
or
into
xor
push
adc
addr16
addr16
loopne
das
out
mov
xchg
outsl
test
test
addr16
cwtl
cmp
or
in
xor
cmp
xor
xor
xor
test
call
shrl
sbb
dec
lods
sub
cmp
cmp
fcomp
sub
add
xor
cmp
lods
addr16
in
addr16
ret
sub
sete
add
lret
cmp
ret
add
in
adc
out
xor
xor
hlt
clc
sti
push
repz
imull
imull
iret
idivl
pop
dec
push
mov
push
lds
xor
pop
inc
rorb
xchg
inc
jnp
or
mov
movsl
hlt
dec
pop
jo
mov
out
cmpsb
loop
ret
imul
aad
sub
repnz
push
or
out
ret
push
jmp
fsubrs
jp
int3
repnz
cmc
mov
gs
mov
mov
mov
mov
pop
sti
sub
or
push
or
dec
sub
ret
jle
addr16
lcall
dec
scas
cmpsb
mov
adc
loope
jno
ret
addr16
addr16
xchg
maskmovq
imull
fwait
aad
movsl
sbb
xor
js
fnstcw
mov
xchg
mov
test
aad
push
stos
push
sub
xor
xor
in
cmp
insl
xor
xor
xor
xor
xor
xor
push
scas
faddl
das
push
loopne
mov
push
loope
mov
push
loop
mov
push
jecxz
mov
push
in
movsb
push
fs
and
in
movsl
push
gs
and
addr16
popa
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
insb
cmc
mov
insl
imull
mov
mov
mov
mov
xchg
insl
mov
inc
imul
sbb
add
adc
sbb
inc
mov
mov
sbb
mov
es
inc
not
mull
lods
in
in
je
lds
push
movzbl
push
seta
imul
rorl
enter
out
ja
pop
mov
ljmp
icebp
pop
or
dec
add
xor
clc
test
dec
icebp
pop
ret
mov
or
ror
call
push
sub
jmp
push
ljmp
push
jmp
fisubrs
in
push
lods
push
insb
push
sub
in
push
lods
push
insl
push
sub
ljmp
outsl
addr16
loopnew
inc
punpcklbw
and
mov
and
xor
push
add
cmc
sub
and
movsb
push
fs
and
in
movsl
jmp
and
sbb
lret
cmp
sti
call
dec
or
xor
pop
add
mov
sub
imul
insb
imull
in
lods
pop
imul
sub
add
jmp
sarl
push
hlt
lahf
cmc
shl
notl
notl
imul
loopne
mov
dec
inc
push
cld
jnp
imul
pop
popa
xor
and
jnp
out
cmpsb
lods
imul
or
shrl
dec
insb
fstl
push
push
pop
push
imul
cmp
loope
add
test
xchg
pop
cwtl
or
outsb
or
ss
jl
lock
push
sub
out
cmpsb
mov
out
subl
xor
icebp
mov
mov
mov
pop
in
pop
popf
dec
push
jnp
ljmp
add
xchg
xchg
pop
movsl
dec
cmp
lcall
and
test
cwtl
jmp
icebp
add
or
scas
or
lock
sub
cmovbe
xlat
xcrypt-ofb
cmpsl
imul
push
or
or
xor
mov
std
lret
les
mov
pop
punpcklwd
and
loop
mov
pavgw
mov
syscall
mov
jnp
icebp
pop
repnz
cmp
xchg
out
lods
mov
sbb
pop
mov
arpl
xchg
mov
mov
out
cmpsb
addr16
jmp
fwait
dec
mov
push
repnz
imul
lcall
or
jnp
or
lock
imul
stos
repnz
hlt
cs
xor
bound
insl
dec
add
in
inc
or
out
imul
push
test
stos
mov
xchg
sub
movntps
in
shrd
paddsw
lods
dec
insl
cmp
xchg
cmp
in
sub
stos
and
cmp
clc
lret
sbb
cmp
dec
sarl
push
pop
iret
inc
out
idiv
mov
mov
pop
push
or
push
and
ss
pop
sti
mov
sbb
and
loopne
shll
loope
jmp
fisttps
outsl
adc
orl
lds
xor
adc
lock
or
add
cmp
xor
inc
aam
fildll
mov
jl
add
shll
out
cmpsb
cli
pop
es
rol
lods
out
imul
mov
xor
int3
and
cmpsb
fisubs
es
out
cmpsl
mov
andb
inc
leave
xchg
mov
sbb
lcall
sub
je
fsubrl
mov
testl
pop
inc
js
cltd
push
xor
push
mov
mov
mov
xchg
add
sbb
out
mov
mov
pop
and
push
jo,pn
sub
fcmovne
inc
out
aaa
imul
cmp
dec
cmp
fbstp
hlt
and
dec
ret
fs
mov
mov
mov
mov
mov
mov
out
cmc
dec
rcrl
enter
je
mov
mov
xchg
mov
add
divl
ja
adc
hlt
or
mov
js
fimull
mov
ljmp
xlat
std
push
cmp
loopne
and
orl
xor
xor
stos
push
add
or
pushf
mov
scas
dec
pop
loopne,pn
mov
sarl
mov
mov
mov
mov
xchg
div
aaa
sbb
out
or
jnp
jl
add
or
add
sbb
or
ror
ljmp
lods
inc
mov
sub
loop
fmuls
inc
sub
sti
insb
cli
sub
loop
mov
insb
cmc
pusha
pmulhuw
movsb
or
aam
gs
and
push
push
es
out
or
mov
mov
mov
mov
hlt
stos
mov
popa
imul
ret
or
call
xor
test
inc
mov
out
push
hlt
inc
push
and
les
data16
hlt
cwtl
dec
js
leave
pusha
repz
cpuid
punpckldq
cmp
mov
mov
xor
xor
xor
xor
xor
xor
je
fadd
cmpsb
push
push
es
out
cmpsl
ja
jnp
push
test
arpl
add
and
outsb
pop
imul
je
dec
inc
dec
cmp
xor
jmp
pusha
popa
lret
xor
icebp
loop
stos
bound
jecxz
add
mov
rorb
cmp
push
and
data16
es
push
push
lds
pop
xor
add
fmul
iret
pop
out
jns
dec
jl
cmp
out
push
mov
inc
cmp
jl
loop
ret
and
xor
xor
xor
je
mov
mov
jecxz
mov
jno
or
lret
ljmp
jg
sarl
mov
mov
lods
inc
dec
jmp
jl
cmp
sub
ret
xor
push
in
fmull
push
sub
in
push
lods
push
sub
push
outsb
push
cs
scas
outsl
sub
loopne
mov
xor
xor
xor
xor
xor
xor
xor
xor
in
movsl
and
mov
push
cmpsb
mov
mov
out
and
call
inc
sub
test
lea
stos
or
lods
subb
cmp
in
je
mov
mov
out
and
out
mov
push
cs
out
cmc
push
outsl
das
push
iret
mov
loope
mov
dec
loop
gs
fisubrs
push
and
push
fs
and
pusha
movsl
addr16
addr16
orl
pop
call
sub
jmp
imul
test
jo
es
dec
int
cwtl
push
out
dec
jnp
push
mov
and
mov
mov
xchg
mov
mov
push
mov
mov
jmp
mov
out
and
mov
enter
inc
lods
push
insb
and
paddsw
lods
cvtps2pi
out
fxrstor
cmp
scas
push
outsl
std
and
mov
push
pop
sbb
or
or
jo
fldenv
fsubrs
jmp
dec
jecxz
mov
cmp
rorl
push
sbb
out
subl
push
orl
in
add
adcl
adc
bound
push
movsb
push
fs
cmp
cmp
cmpsb
and
jecxz
cmp
dec
call
add
or
xor
xor
shr
imul
lods
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
arpl
popa
cltd
mov
out
test
out
cltd
jns
fimull
pop
cmp
insb
or
push
enter
shll
imul
xchg
nop
lret
movsl
data16
mov
push
imul
dec
push
test
mov
push
out
imul
loopne
mov
and
loope
outsb
cmp
and
loop
mov
mov
push
and
or
lods
inc
or
mov
enter
inc
sbb
sub
jmp
ljmp
xor
mov
mov
mov
out
cmpsb
mov
lods
cmp
sub
outsb
xor
xor
xor
xor
xor
xor
icebp
loop
lea
and
arpl
movsb
mov
xchg
and
out
cmpsb
addr16
addr16
test
clc
fldcw
call
data16
inc
testb
imull
imul
imull
insb
jmp
lods
lock
movntps
in
shrd
test
imull
cmp
subl
movsl
sbb
es
and
add
xor
xor
fucomi
adc
jmp
sub
stos
addr16
js
call
cmp
mov
push
sub
lods
push
insl
dec
cmp
out
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
loope
dec
punpcklwd
lock
jecxz
scas
cmp
xor
xor
in
movsl
xor
and
xor
es
in
imul
or
or
push
enter
push
jge
jo
mov
and
mov
aad
cs
invd
call
add
pop
insl
mov
je
mov
arpl
inc
push
stos
xor
in
les
out
cmpsb
jno
dec
pop
add
movsb
adc
mov
mov
outsb
out
testb
nop
sbb
aam
fisubrl
mov
adcb
dec
or
adcl
out
call
lods
inc
xor
xor
ds
arpl
and
out
lds
add
add
push
dec
push
and
add
popa
test
jne
jge
cmpsl
je
mov
aad
scas
addr16
cmp
xchg
mov
xor
pop
sbb
or
sbb
fildll
cmpb
lods
jecxz
icebp
movnti
popl
inc
xchg
arpl
orb
pop
ud1
es
and
loopne
addb
push
push
aad
dec
cmp
mov
pushf
pop
cmpsb
sub
push
or
das
lcall
push
sti
dec
or
cli
sbb
repz
jne
ljmp
scas
mov
inc
lock
cs
pmuludq
cmc
or
hlt
push
or
jns
or
push
mov
mov
mov
out
and
addr16
push
out
sub
pop
in
push
cmpb
pop
fistpll
push
mov
xchg
xcrypt-ecb
cmpsl
push
cmp
int3
pop
lret
or
lea
pop
add
dec
pop
cmpsb
or
fwait
ret
lods
cld
jge
les
push
push
icebp
or
test
inc
out
in
add
or
dec
push
lret
xor
xlat
sub
out
adc
int3
cli
push
dec
fbstp
jmp
cmp
addr16
adc
dec
cmc
jnp
or
fwait
pop
jle
mov
push
loopne
cmc
add
testl
push
adcb
jecxz
shrb
cmp
xor
hlt
mov
push
rcll
imul
outsl
pop
lock
mov
out
dec
and
pushf
cmpsb
insb
data16
es
out
jecxz
cmp
xor
jo
rol
and
dec
mov
lds
mov
jb
lds
hlt
sti
jnp
icebp
cld
repnz
ret
cmp
out
mov
mov
imul
and
cmp
je
faddl
cs
mov
cmp
fiadds
cmpb
inc
movsl
ret
psadbw
inc
or
mov
dec
stos
ljmp
sub
pop
lret
cltd
out
enter
or
add
mov
dec
out
or
nop
out
shrb
outsl
dec
leave
adc
jb
ret
je
mov
mov
add
xchg
mov
mov
mov
mov
push
mov
mov
sub
out
pushf
push
cmpsb
inc
cmpl
and
and
jge
mov
mov
mov
mov
out
and
fsubs
leave
pop
bound
and
mov
movaps
push
aaa
cltd
jnp
movsl
dec
insl
lcall
test
popf
sub
fisttpl
dec
sbb
add
rol
les
lret
pop
pop
sti
jp
push
pop
outsl
and
jl
loop
pop
icebp
ret
mov
xchg
push
in
xchg
push
xor
dec
pop
or
sub
imul
mov
pop
cmp
mov
imul
mov
sub
sub
je
aad
adc
addr16
push
mov
hlt
iret
fcmovb
jp
dec
int
ds
pop
push
rclb
push
icebp
out
lret
xchg
addr16
addr16
pop
mov
mov
into
icebp
push
xlat
test
ret
popa
ret
lea
movsl
and
sti
jl
les
addr16
mov
in
xor
jecxz
jnp
les
out
aad
in
cmp
les
orb
pop
icebp
xor
xchg
stos
cmp
es
and
jge
pop
scas
rcl
das
mulb
out
aam
inc
mov
mov
pop
sti
pop
dec
pop
jnp
ljmp
xorl
push
test
xchg
cmp
es
xor
je
sub
cmp
fwait
jg
jo
scas
stos
test
lret
mov
out
xchg
aam
mov
stos
icebp
or
add
lcall
xchg
gs
cli
arpl
in
add
inc
lret
mov
sbb
or
shl
sbb
pusha
cmp
mov
shlb
pop
or
hlt
and
das
loopne
fs
aam
test
adc
cmp
rcrl
aad
pop
test
movsb
jo
add
imul
jmp
loopne
fwait
insl
mov
add
imul
cli
sub
lcall
push
xstore-rng
cmpsl
add
push
jecxz
push
mov
fucomp
jecxz
mov
sbbl
cmp
dec
cmp
sub
jl
ret
pop
jnp
imul
pop
mov
mov
jbe
call
jmp
nop
lods
and
in
and
or
and
add
sbb
icebp
inc
hlt
xchg
push
and
lods
into
mov
icebp
leave
inc
hlt
test
fwait
mov
dec
fisubl
es
insl
test
pop
ret
lods
aad
stos
inc
sbb
or
ljmp
sub
gs
imul
std
ret
outsl
jecxz
in
mov
ss
cmp
jle
dec
jp
je
mov
lahf
jle
orl
addr16
js
cs
fwait
xchg
jnp
cmpl
outsb
jno
mov
mov
lea
mov
mov
ljmp
lret
push
aas
sub
cmp
shlb
dec
les
xor
push
cmovne
mov
in
or
lcall
sbb
mov
rorb
jnp
out
xor
out
and
jnp
mov
adc
rol
ja
add
data16
add
or
es
pop
pop
imul
scas
mul
in
sub
stos
mov
hlt
dec
mov
sbb
xchg
dec
sbb
in
mov
mov
sub
shlb
dec
sub
push
push
push
cmpsl
or
iret
jle
adc
lret
push
cmp
jl
cmpsl
out
mov
xlat
cmp
in
dec
fnstsw
or
mov
mov
ret
mov
lock
repnz
or
data16
cmp
mov
sahf
outsl
or
out
sub
or
mov
jno
repnz
movlhps
bound
hlt
mov
cmp
and
addl
adc
cmc
and
andl
mov
sub
mov
in
push
or
or
int3
xor
rolb
addl
jg
in
std
shll
xor
dec
es
cmpsb
addl
push
stc
dec
bound
ljmp
lret
jl
lock
stc
sub
in
rolb
pop
dec
enter
lcall
in
in
jae
daa
jl
inc
leave
stc
cmpsl
imul
ret
test
pop
into
jo
jmp
lods
cmpsb
imul
sbb
sub
call
in
push
loop
push
xchg
scas
dec
lcall
and
fsubl
push
dec
and
int3
cs
jl
and
mov
cld
mov
repnz
insb
aas
cmp
push
aad
push
jge
and
fs
arpl
mov
mov
or
cmp
xor
add
mov
cmpsl
jbe
xlat
adc
or
mov
mov
xchg
loopne
mov
sarb
loop
jmp
out
out
xchg
mov
ret
fmull
push
jmp
xchg
mov
shll
pop
add
outsb
jge
addr16
dec
push
xor
add
outsl
add
in
rcrl
xor
in
mov
out
pusha
ret
outsb
pop
add
std
pusha
pop
cmp
dec
or
ret
add
adc
jle
dec
jle
dec
dec
pusha
lds
jbe
loopne
pusha
iret
mov
popf
leave
movsb
hlt
bound
sub
test
and
scas
repnz
in
andl
adc
loopne
jne
pop
daa
push
scas
cmp
scas
data16
and
xchg
out
cmp
scas
movsb
jl
and
popa
andl
arpl
jnp
cmp
mov
mov
out
arpl
cmp
cmp
rcl
outsb
xor
dec
js
inc
and
or
cmp
dec
inc
or
aas
mov
add
xchg
bound
pop
sub
fadd
adc
rol
sub
leave
push
sbb
es
push
adc
mov
out
push
aam
sub
pop
xchg
pop
addr16
mov
enter
outsl
imul
mov
les
scas
cs
out
fwait
aam
add
lods
rorl
sbb
pop
loop
jbe
dec
pop
pop
decl
lcall
or
pop
in
stc
sub
shll
dec
sbb
lods
and
movsb
lds
or
or
xchg
hlt
xchg
vcvtss2si
mov
mov
mov
pusha
pop
shlb
push
imul
adc
test
push
push
addl
adcl
inc
and
mov
pop
jne
inc
addr16
mov
xchg
jmp
insb
inc
pop
loope
scas
adc
mov
mov
push
in
nop
les
cmp
push
xor
mov
loopne
push
or
adc
or
imul
mov
fsubrl
icebp
dec
lock
hlt
notl
mov
pop
stc
xchg
and
divl
loopne
lock
mov
sbb
cmp
sbb
mov
dec
ffreep
inc
inc
mov
pop
out
and
sbb
icebp
jo
inc
mov
push
mov
mov
sarl
jmp
fsubrs
test
cs
insb
mov
call
push
jnp
pop
dec
dec
lret
call
cmp
and
inc
es
mov
xchg
cmp
out
shl
scas
leave
cwtl
cmovbe
cmp
sub
out
add
push
pusha
sub
iret
xchg
or
xlat
sub
mov
nop
repz
add
mov
ja,pn
mov
dec
mov
out
or
ja
jmp
mov
les
push
les
adc
mov
adc
cld
shlb
hlt
sub
call
cmpsb
adc
sbb
sti
pop
sub
mov
mov
xchg
xchg
xlat
dec
dec
mov
dec
dec
jge
jle
push
xlat
lods
aaa
adc
xchg
jg
test
add
out
and
jnp
sbb
aam
cs
and
mov
xor
test
and
mov
cpuid
push
inc
imul
mov
xchg
mov
cmp
jle
test
fcomps
add
xor
mov
push
int
outsl
into
sbb
pop
ljmp
xor
xor
xchg
addr16
mov
mov
movsl
cmp
lcall
sahf
fisubl
imul
xchg
nop
and
fisubs
stos
cs
mov
cmp
pop
out
inc
mov
insl
icebp
adc
add
test
dec
aas
jmp
push
mov
mov
lods
outsl
lcall
cmpsl
or
imul
sub
pop
sub
jge
les
lcall
cmp
les
inc
stc
dec
addr16
ljmp
inc
rorl
lfs
ljmp
and
push
pop
cmp
sub
sub
lcall
dec
cmc
inc
adc
xor
dec
hlt
imul
ret
lahf
lods
dec
or
fs
and
xchg
fsubl
leave
orl
dec
lods
call
shrb
shr
popl
dec
les
adc
lea
or
inc
je
ffreep
sbb
mov
es
ret
subb
sbb
xchg
call
or
jl
in
mov
addr16
sysret
push
outsl
push
xor
mov
mov
xchg
adc
xchg
call
cmp
push
or
fcoms
xor
outsb
xor
out
and
divps
push
pandn
aam
nop
push
inc
out
add
addr16
add
xlat
xor
nop
mov
cmp
mov
inc
lahf
mov
xchg
ljmp
out
stos
jl
lea
aam
jg
ljmp
jns
test
mov
mov
cmp
cmp
push
enter
sbb
pop
lods
inc
push
mov
cmpsb
cmp
scas
and
push
les
jmp
sbb
loopne
mov
add
mov
shlb
loopne
int3
and
leave
and
inc
and
jl
pop
test
fsubp
cs
mov
pop
out
cmpsl
and
sbb
dec
mov
dec
fs
push
ljmp
cmp
in
pop
fcmovne
jl
iret
lret
xchg
inc
xor
jo
add
movsl
cmpsb
imul
aad
or
pop
lods
or
movsb
push
ret
ret
cmp
scas
iret
jp
iret
sbb
out
imul
aam
adcl
ret
call
inc
adc
pusha
dec
mov
xchg
enter
or
iret
fsubr
add
lret
add
out
xor
or
testb
fcomp
push
or
jle
js
shlb
mov
cmp
inc
jo
xchg
sub
out
lods
cwtl
enter
js
jl
loope
ds
arpl
xor
je
cmpsl
fwait
std
aas
js
shrl
jge
rolb
and
dec
sbb
out
sub
lea
outsl
mov
out
out
xchg
adcl
inc
int3
or
js
movsb
test
adc
or
es
or
pop
cmp
cmp
mov
loope
call
enter
sub
lret
sti
lcall
les
loopne
adc
sbb
cmp
shrb
and
and
push
ret
mov
sub
xchg
mov
mov
push
imul
ret
outsl
out
mov
lds
lahf
aad
lcall
lods
test
lcall
loopne
dec
mov
loopne
inc
rorb
test
rorl
pop
mov
mov
cmp
test
and
dec
lret
rorl
sub
and
into
inc
repnz
push
test
les
mov
or
iret
mov
xchg
push
fs
loope
cmp
jbe
sub
xchg
mov
test
ret
out
cmp
adc
add
js
xor
and
adc
pushf
cld
and
and
cmpsl
mov
test
testb
sbb
test
sbb
leave
and
out
addr16
mov
test
pop
dec
mov
pusha
fidivrs
pop
inc
icebp
sub
mov
in
adc
push
cs
mov
leave
ret
cmpsb
mov
sbb
mov
enter
stc
sahf
sti
or
jne
imul
movsb
cli
sti
lcall
dec
mov
jmp
fwait
popf
sbb
lods
or
js
popa
scas
push
or
movsb
in
xor
in
out
jnp
cld
bound
pop
mov
data16
hlt
inc
and
arpl
scas
cmp
hlt
xor
rorl
rorl
shrb
add
andl
inc
push
scas
out
or
aam
jl
int
pop
scas
stos
cmp
rcr
xor
jecxz
hlt
mov
rorl
repnz
cwtl
test
ret
and
clc
imul
insl
mov
or
shrl
cmp
and
icebp
fcmovnbe
inc
scas
insl
xchg
popa
stc
lret
jg
mov
mov
jmp
dec
add
xor
dec
fwait
imul
mov
dec
xchg
es
cmp
mov
mov
out
call
add
stos
pop
pop
nop
sub
leave
clc
fwait
cltd
and
dec
data16
es
out
xchg
mov
inc
enter
out
and
jl
and
insl
mov
cmp
pop
sti
dec
mov
stos
push
in
rcrb
in
xor
mov
push
jno
pop
dec
or
insl
in
stos
clc
lret
mov
pop
bound
repz
sub
into
loope
mov
enter
mov
in
inc
into
fsubl
hlt
and
jl
rorb
call
or
cld
mov
lret
sub
lcall
int3
cmp
lea
addr16
and
or
and
lret
shrb
sub
outsl
fidivrl
mov
dec
adc
add
call
pop
xchg
mov
scas
mov
inc
imul
pop
sahf
lcall
bswap
shl
dec
add
mov
repz
les
pop
dec
mov
and
dec
dec
aaa
or
sbb
or
lock
repnz
ret
pop
outsl
lods
push
stc
mov
dec
lahf
les
lods
cmpsl
and
js,pn
sub
fisubs
iret
xor
nop
lcall
sbb
dec
out
xchg
adc
loop
jp
shl
popa
jb
je
lds
push
jp
pusha
dec
je
push
push
xor
jae
mov
arpl
cmp
sbb
mov
shlb
lret
pop
and
dec
leave
outsb
ror
cmpsl
inc
xchg
iret
in
dec
or
pop
xchg
lds
cmp
cmpl
lret
gs
mov
fisttpl
in
rclb
sub
add
rorb
dec
jnp
cmpsl
imul
dec
xchg
sub
out
dec
or
jo
aam
xchg
push
xchg
and
push
inc
sub
cmpsb
stos
js
fstpt
lock
xchg
das
and
jmp
ret
dec
pop
inc
int
mov
lea
sub
fadds
imul
bound
cs
and
cmpl
mov
js
and
ret
pop
cmp
mov
mov
stos
jnp
lcall
add
mov
sbbb
stc
clc
lock
jle
mov
sbb
add
and
pushl
shrb
or
sahf
sub
repz
mov
lds
imul
mov
movsl
hlt
das
sti
xor
cmp
sub
addl
mov
push
sti
inc
dec
mov
jns
shrl
andb
jecxz
cmp
fcmove
xor
rcrl
out
and
out
in
push
jnp
cmp
nop
ret
iret
add
sub
mov
subb
mov
loope
inc
sarb
sti
adc
js
mov
addr16
jae
pop
pop
push
outsl
xchg
add
call
sub
jp
movsb
cmp
lcall
dec
push
add
cwtl
sub
stc
sub
test
pop
or
and
jle
add
scas
pop
jne
cmp
and
pop
mull
jge
scas
ds
jg
and
into
mov
or
push
pop
or
out
rol
in
stos
leave
shll
xchg
cwtl
or
cmpsb
dec
popa
jmp
in
mov
or
cld
inc
fwait
lret
pop
rorl
dec
sbbl
inc
out
or
mov
mov
nop
mov
clc
in
mov
or
push
stos
ret
pusha
rcrl
es
stc
jge
dec
lcall
mov
aam
push
dec
les
test
aas
popa
pop
sbb
add
cwtl
leave
sub
xorb
sbb
cmp
sbb
sbb
lock
sub
jecxz
cli
mov
fcomi
aam
push
xchg
jnp
lret
ja
dec
movsl
outsl
out
mov
or
cmpsb
out
movsl
fwait
mov
or
mov
stos
dec
rcr
dec
xchg
xchg
scas
ja
mov
sbb
add
rorl
jmp
pop
xchg
les
into
xchg
jbe
movsb
sub
mov
push
adcb
jp
mov
sbb
add
fs
xlat
cmp
sahf
mov
outsb
out
out
and
js
lods
inc
mov
add
or
jb
or
shll
les
rol
sbb
lahf
jg
or
lret
xor
cmp
mov
data16
mov
shrl
imul
call
or
xchg
xor
test
mov
jnp
into
out
fnstsw
xor
push
xchg
scas
mov
paddq
mov
and
imul
dec
fucomip
push
ds
popl
or
stos
sbb
push
stos
xchg
adc
pop
ljmp
and
xchg
add
stos
popf
adc
jle
and
fstl
pop
push
sbb
les
iret
mov
cmp
pop
je
movsb
seto
xchg
push
test
out
add
addr16
adc
lcall
xchg
lock
adc
cmpsl
addr16
sbb
xchg
out
pop
dec
and
mov
push
xchg
jnp
in
leave
push
ret
sub
aad
push
jle
jmp
cmp
aas
push
ror
dec
mov
xchg
inc
dec
cmovne
es
jl
jnp
push
mov
or
mov
ret
hlt
sbb
sbb
leave
pop
mov
mov
stos
cwtl
fwait
dec
inc
inc
clc
lods
sbb
icebp
int3
repnz
ret
pop
insl
jecxz
dec
hlt
test
ret
ret
aas
call
nopl
inc
jl
cmpsl
dec
into
and
cmp
sub
sub
dec
sub
imul
ret
inc
mov
cwtl
test
repnz
ror
dec
or
sbb
lahf
mov
test
add
int3
jp
sbb
pushf
mov
mov
adc
and
cmp
jg
lods
ss
inc
shl
les
cmp
and
push
or
stos
and
lret
lret
sti
fnstcw
xlat
jmp
out
scas
xchg
adc
movsl
or
leave
or
mov
stos
inc
rorb
rol
sub
push
xchg
mov
aas
loopne
in
test
cmc
call
dec
lcall
or
int
cmp
cmp
mov
mov
arpl
and
mov
movsb
es
adc
leave
pop
fistl
addr16
sti
jno
pushf
stos
insl
ljmp
je
std
dec
movsl
aad
popa
nop
adc
mov
aad
fiadds
hlt
sub
pop
ret
push
push
cwtl
jmp
xchg
cmpsb
pop
data16
popa
sub
stc
add
call
sub
cmpsb
cltd
sbb
scas
enter
fdiv
cmp
jmp
shr
push
fwait
pop
or
add
orb
mov
add
out
and
pop
rcrl
inc
push
cmp
inc
repnz
dec
xor
in
mov
into
mov
or
addb
das
cmp
cmp
push
leave
push
movsb
cmpsl
lods
mov
sub
jbe
add
inc
lret
mov
imul
fwait
or
sbb
repz
dec
enter
and
jecxz
sbb
fdivrs
lods
scas
xchg
pop
mov
dec
xchg
sbb
push
and
enter
loopne
addr16
test
add
dec
call
mov
and
data16
shrl
out
hlt
dec
ljmp
jmp
mov
in
loope
cmpsb
mov
nop
sub
push
xchg
or
aam
jnp
cmp
inc
movsl
inc
jge
and
dec
ret
mov
xor
mov
repnz
imul
dec
and
mov
sarb
lcall
psrlq
add
mov
outsl
iret
jae
hlt
cmpb
pop
insb
xchg
cmp
in
push
xchg
out
cmp
ret
xor
sbb
and
int3
sub
fildll
sbb
or
cld
icebp
sti
inc
shrl
int3
sbb
stc
lods
shrb
lods
lcall
and
outsl
mov
adc
sbb
rolb
fimuls
cmp
pop
sub
sub
in
cmp
pushf
jmp
ret
sti
cld
jmp
ljmp
stos
imul
xchg
mov
les
dec
int
or
insb
sarl
hlt
add
inc
rolb
push
sub
xchg
jne
bound
sbb
fsubl
jmp
out
popa
cmpsl
stc
jo
and
cmpb
jl
jmp
jno
dec
leave
dec
cmpsb
or
sbb
or
lods
jo
mov
add
lock
repnz
ret
out
pusha
pop
das
imul
jge
and
call
enter
cmp
js
sub
cmp
cmp
pop
push
sub
or
pop
inc
mov
or
cmpsb
push
dec
repz
addr16
out
xor
fstpt
and
nop
dec
clc
and
shl
mov
movsb
and
lea
out
in
xchg
ror
dec
lret
mov
sarb
sub
addr16
cmp
cmp
and
or
lock
jge
xor
jle
fmull
add
and
mov
xchg
js
aam
dec
stos
enter
inc
mov
mov
or
dec
adc
add
xor
dec
mov
sbb
or
dec
push
cmpsl
iret
jmp
mov
dec
sar
sbb
sarl
movsb
das
sub
or
fsubl
sbb
test
push
and
xchg
call
out
sbb
or
enter
loope
lcall
ret
jnp
cmp
dec
rorb
dec
pop
addb
and
fwait
cmp
ficompl
pop
sub
mov
icebp
dec
hlt
or
mov
mov
test
xor
dec
and
add
aam
cmp
push
and
pop
sub
cmpsb
xchg
orl
mov
cmp
pop
xor
repz
push
loope
cs
stc
and
repnz
push
loopne
das
cmc
out
ret
fxam
fs
xor
sub
es
insb
sbb
dec
lods
mov
rorl
adcb
dec
loopne
inc
stos
insb
or
mov
sub
out
fsubl
mov
pop
leave
and
lret
or
mov
and
int
mov
sub
stos
mov
call
xchg
dec
mov
inc
cmp
daa
dec
xor
fisubrs
xchg
cld
lret
rorl
cwtl
add
roll
sub
mov
dec
jb
inc
leave
push
cmpsl
mov
cmpsb
or
and
or
and
cmpsb
sbb
sub
mov
jo
in
xchg
hlt
shlb
mov
push
and
mov
and
das
pop
cmp
push
push
cmp
jl
es
test
orb
jo
scas
lcall
ds
test
xor
inc
add
shlb
dec
xor
xchg
hlt
scas
mov
aas
cmp
es
or
mov
pop
pop
dec
add
je
cmpsl
aaa
fldt
inc
iret
out
add
cmp
nop
or
mov
enter
and
stc
loopne
inc
lcall
dec
push
mov
add
xor
pop
jo
lods
dec
push
outsl
les
push
fmull
movsl
mov
sub
push
les
jmp
stos
test
add
repz
inc
popa
rorl
es
out
pop
cmp
es
mov
mov
mov
add
ja
cltd
sti
por
dec
shrl
cmp
dec
cmp
add
js
lret
dec
push
shr
insb
popa
mov
rclb
enter
and
push
xchg
rcll
imul
insl
push
fmull
mov
pop
mov
inc
pop
or
dec
icebp
adc
mov
adc
or
cmpsb
cmpsb
push
push
mov
loop
inc
cmpb
ss
ds
dec
xchg
fisubrs
mov
or
js
mov
ud1
mulb
pop
mov
or
inc
mov
insl
mov
jle
add
push
push
shrl
fs
es
ret
icebp
or
scas
cmp
cmp
ss
hlt
call
pop
dec
or
stos
and
cwtl
mov
loope
sub
add
nop
jl
pop
dec
les
xchg
mov
scas
shl
jmp
jmp
sbb
fwait
stc
and
dec
ffree
dec
sub
mov
out
or
popa
fldenv
mov
fstps
lock
les
int
cs
cmp
imul
fmull
pop
push
dec
arpl
mov
lahf
or
mov
mov
jne
or
test
out
xchg
aam
orb
clc
cmp
sbb
data16
in
popf
lcall
or
cmp
mov
mov
mov
inc
adcl
mov
xchg
mov
sbb
cs
jmp
xchg
push
mov
add
cmpsl
dec
lods
movsb
andb
outsb
sbb
sbb
stos
mov
mov
inc
push
sarl
push
cmp
and
scas
repnz
mov
or
loope
popa
inc
or
mov
ret
out
stos
nop
add
stc
aam
sub
lods
aam
test
imul
sbb
sub
cli
push
lds
arpl
cmp
shl
js
xchg
aam
pop
scas
das
mov
std
lock
push
scas
dec
lgs
out
les
and
loop
adc
test
inc
push
add
imul
sbb
xchg
cli
lret
gs
pop
sahf
mov
stos
inc
push
fistpll
xchg
push
adc
fsubrs
pop
cs
mov
xlat
or
xor
rorb
or
fisubs
repnz
ret
xchg
xchg
enter
sub
mov
imul
movsl
in
mov
sbb
dec
dec
ljmp
in
in
add
fldenv
lods
or
mov
idivb
fwait
dec
enter
mov
out
cmpsb
test
js
imul
stos
jns
ljmp
mov
push
add
adc
aas
cmc
in
ret
xchg
es
cwtl
pop
jnp
cmp
out
dec
into
outsl
mov
aas
and
pop
add
paddsb
pop
call
xchg
mov
cmc
xchg
ret
scas
cmp
add
cmp
xor
shll
call
leave
or
imul
pop
mov
loop
loope
in
push
in
inc
dec
push
lods
or
mov
es
sarl
mov
outsl
mov
addr16
orl
test
fimuls
or
js
mov
inc
or
fwait
es
xor
mov
push
or
pop
je
xchg
call
mov
lcall
pop
xchg
out
dec
shrb
mov
mov
nop
mov
and
xchg
xor
in
stc
sbb
cmp
sarb
or
mov
insl
loop
sub
add
and
fistl
or
xchg
and
dec
arpl
vorps
jmp
test
fmul
lahf
mov
cmp
sub
je
les
jb
mov
lds
mov
insb
sub
sarl
shrl
pop
scas
shrl
jl
lock
adc
or
add
ret
cmp
add
popf
shrl
or
je
cmpsl
xchg
mov
hlt
add
mov
inc
shr
jecxz
insb
lods
movsb
dec
adc
leave
cs
add
sbb
sti
dec
and
cmp
cmp
insl
inc
and
outsl
roll
out
cmp
add
inc
mov
jae
in
mov
imul
pop
jnp
dec
dec
sbb
cmpsl
imul
bswap
cmp
js
dec
outsl
push
sub
push
and
enter
lcall
les
ret
cwtl
dec
lret
pushf
addr16
or
js
xchg
lods
iret
out
leave
leave
mov
ror
xchg
add
mov
inc
dec
stc
hlt
enter
movsl
add
cmc
hlt
scas
xchg
dec
or
mov
or
das
call
pop
dec
add
pusha
ljmp
sbb
in
rorl
dec
out
pop
inc
out
je
ljmp
inc
call
stos
stc
rsm
sbb
lcall
popa
les
and
xchg
out
popa
push
or
fsts
lcall
adc
test
xchg
shl
call
cmc
push
divb
mov
lds
mov
push
cli
aad
push
mov
and
je
fiadds
cmc
dec
cmp
addr16
cmpsl
movsl
cmp
and
addl
cmc
ret
cwtl
in
rolb
enter
pop
cmpsb
int3
add
xchg
addr16
rclb
mov
hlt
pop
sti
cmpsl
mov
mov
ret
les
or
adcl
out
inc
add
mov
lds
xchg
and
in
cmovo
in
cmp
cltd
or
pop
loop
jbe
pop
loope
loope
adc
push
push
sbb
das
cwtl
jle
pop
mov
dec
pop
sub
fimuls
xor
lret
or
mov
inc
xchg
fsubrl
loop
mov
fmul
int3
push
lea
lcall
push
mov
imul
mov
js
cwtl
pop
imul
out
cmpsb
arpl
dec
dec
das
lret
repz
jecxz
mov
js
and
fstpl
add
or
mov
pop
fldenv
ljmp
out
xchg
sbb
inc
aaa
mov
cmp
mov
add
les
xlat
jbe
mov
out
and
mov
cmp
cmpsb
sub
iret
sbb
faddl
faddp
mov
pop
jecxz
xlat
cmc
push
push
sub
or
cmp
cmp
js
movsl
shrb
sti
das
mov
jmp
push
fmull
cmp
sub
fwait
shl
inc
xchg
mov
lods
andl
lea
enter
loope
leave
mov
roll
test
xor
enter
stos
js
fwait
lods
inc
outsl
sbb
adc
or
or
push
or
or
aam
xor
aam
fwait
push
or
in
jne
dec
lea
sub
in
jl
shl
es
sbb
push
movsb
mov
inc
imul
xchg
mov
dec
adc
imul
sub
out
add
out
sbb
cld
sub
mov
or
test
cmp
call
sbb
out
ljmp
mov
imul
cmp
sbb
out
mov
mov
sbb
fwait
mov
and
popa
jnp
lcall
push
mov
dec
int
mov
and
shrb
dec
outsl
in
xchg
or
test
mov
and
mov
roll
xchg
jl
out
insb
add
cmp
push
push
dec
shrb
xchg
adc
dec
jecxz
dec
iret
push
jge
shlb
icebp
movsl
adc
inc
push
lods
cmpsl
sub
dec
cmp
les
stc
adc
lret
outsl
in
or
inc
aam
add
das
sub
dec
dec
mov
call
dec
repnz
sub
and
or
mov
stos
in
fsubl
dec
shll
movsw
dec
or
sbb
loopne
sub
jnp
mov
xlat
subb
and
jge
js
pop
fmulp
fistpll
lock
in
jb
insl
jl
pusha
int
sub
cs
xorps
and
inc
out
imul
or
adc
jae
jmp
sub
ss
inc
jae
mov
inc
js
imul
enter
int3
jnp
cmp
and
jge
insb
ljmp
popa
cmp
lret
sbb
ljmp
ljmp
js
rcr
add
mov
cmp
pushf
add
out
push
xor
inc
fisubs
and
lock
pop
hlt
aas
xchg
push
setae
mov
and
or
pop
mov
push
cmp
push
imul
stos
addr16
cmp
xor
ret
lods
sub
xchg
fsubl
out
and
loopnew
dec
or
push
popa
xor
cmpsb
dec
cmp
push
movsl
dec
pop
in
and
hlt
enter
in
push
push
mov
imul
test
filds
xor
adc
mov
xchg
movb
out
popf
mov
pop
imul
or
jp
or
and
xchg
or
and
or
gs
mov
movsl
or
test
jb
mov
aaa
ds
dec
mov
cmpsl
push
cmp
cmp
add
mov
loopne
adc
dec
inc
dec
lds
jecxz
jg
jl
leave
adc
add
adc
sbb
movq
cmp
cmp
lds
jb
mov
jecxz
dec
push
xor
movsb
in
push
out
inc
adc
add
or
test
dec
inc
pusha
push
jnp
enter
xor
movsb
push
shll
popl
call
ss
ficompl
lea
mov
push
arpl
ror
push
in
push
jp
sub
mov
mov
or
push
push
add
inc
push
jp
psubw
gs
push
push
mov
sbb
test
ss
inc
pop
push
jp
rol
popf
call
sub
xor
push
andb
and
jbe
mov
and
cmpsb
sti
or
and
xchg
xchg
test
fldcw
aam
xchg
fbld
ret
jecxz
jns
inc
fwait
adc
lock
ret
roll
pop
sub
arpl
aad
or
lcall
add
or
push
in
push
mov
or
sbb
and
leavew
enter
cli
mov
inc
jmp
stos
xor
pop
pop
jge
shr
outsl
loope
xchg
cwtl
dec
imul
iret
lret
or
and
call
jbe
loopne
cld
nop
add
or
or
add
in
fnstcw
shrl
loope
das
es
call
dec
add
scas
xchg
xchg
ret
lcall
lcall
dec
inc
and
xchg
mov
fsubrl
aad
push
je
lds
insb
push
shl
mov
mov
add
pop
aad
mov
or
dec
mov
arpl
sub
mov
not
or
stos
mov
or
invd
xchg
imul
push
mov
mov
or
inc
jo
loop
sub
movsl
inc
push
ja
push
mov
jl
mov
lock
jp
cmpsb
insb
sbbl
sbb
ljmp
mov
push
in
out
in
fdivrs
mov
adc
enter
or
icebp
and
out
push
lret
inc
outsb
mov
mov
outsb
cmp
test
ret
aad
cmp
inc
out
pusha
push
mov
dec
nop
mov
inc
xchg
nop
dec
cld
lds
push
inc
cltd
cmp
xor
mov
stos
mov
into
xchg
pop
sub
in
scas
popa
lcall
fsubrp
xchg
outsl
xor
shr
out
push
hlt
and
pop
add
jo
cs
out
lcall
sub
rep
inc
or
lock
xlat
mov
jmp
cmp
mov
call
leave
push
or
ret
fsubrl
ds
cmp
xlat
add
push
mov
or
jl
pop
add
mov
and
mov
stos
sub
out
jl
xchg
mov
sbb
sbb
lods
pop
fstpt
int
rorl
es
xchg
loopne
mov
movsl
push
jecxz
imul
mov
mov
and
addr16
adc
pop
loopne
fisubrs
cmc
jo
movsl
bound
sub
test
negb
stos
add
dec
jno
je
cmp
inc
jo
movsl
sub
popa
jnp
js
mov
in
test
mov
scas
stc
pop
es
add
add
data16
cmp
sbb
gs
jmp
jo
jne
nop
mov
test
push
or
pop
jns
ret
in
rol
call
push
out
or
in
or
sub
cmp
push
xchg
int
loopne
sahf
add
bound
sub
imul
pop
and
mov
inc
test
mov
lods
fstpt
and
mov
mov
xor
xlat
jl
outsl
push
mov
lret
stos
mov
jmp
adc
aam
lret
or
loopew
mov
fmull
pop
test
and
or
shrb
ret
cltd
inc
or
push
jg
dec
xchg
es
dec
dec
jb
into
xchg
push
lahf
out
dec
ficompl
cmp
lret
loop
xchg
arpl
fwait
inc
stos
and
cmpsb
xor
jl
lds
add
mov
aam
jno
or
ljmp
lds
push
stc
aad
mov
mov
mov
test
push
adc
mov
cmp
icebp
or
sahf
ret
mov
or
imul
xor
fidivrs
push
jl
and
lfs
hlt
mov
movsl
jecxz
sub
movsl
in
xchg
out
pop
aas
push
and
push
ds
push
lock
repnz
and
sbb
in
movsb
sub
sbb
test
lret
fldl
test
bound
js
sti
push
mov
pop
mov
gs
mov
rcll
fsubp
ss
pushf
ret
dec
or
nop
jmp
pop
data16
jnp
mov
xlat
and
orb
movsb
fistpll
fs
mov
out
scas
ret
inc
enter
stos
subl
xchg
je
or
pop
bound
cmc
dec
cmp
lds
lods
lcall
cmpsb
push
movsb
gs
sbb
movsb
xor
dec
outsb
cmovnp
jnp
mov
cmp
push
and
jl
les
pop
or
dec
out
add
cwtl
mov
add
outsb
cmpsl
push
sbb
cmp
inc
movups
les
insb
jnp
push
sub
xchg
mov
and
cmpsb
mov
mov
sub
mov
inc
out
add
cmpsl
sbb
nop
insl
inc
and
sti
mov
push
mov
in
xor
xorl
mov
xor
out
mov
je
js
cmc
scas
mov
out
mov
jge
dec
divps
hlt
pusha
or
test
jmp
mov
push
fwait
push
inc
dec
aad
dec
or
sbb
movsl
dec
cmp
and
dec
xchg
add
mov
call
in
and
or
icebp
mov
add
insb
out
cmpsb
push
push
inc
pop
pop
xchg
stos
or
pop
or
jmp
int
mov
inc
jo
pop
ret
xchg
cs
jne
push
nop
ret
inc
pop
mov
and
addr16
and
aaa
and
xchg
hlt
mov
loopne
enter
aam
dec
adc
insb
sbb
leave
mov
call
cmp
mov
or
dec
sub
scas
adc
aaa
lahf
popa
inc
cmp
mov
jmp
lcall
lret
dec
jge
mov
dec
or
lcall
dec
mov
mov
or
push
lcall
rorb
pop
dec
push
js
lret
stos
mov
outsl
inc
dec
inc
inc
or
or
sbb
in
push
into
mov
in
aas
cmpsl
insb
dec
xchg
shl
push
lret
jbe
pop
push
imul
ljmp
pop
mov
fmull
adc
lcall
jmp
mov
dec
xor
mov
aam
xchg
aad
ljmp
push
mov
xor
movsl
lcall
fsubl
out
loope
xchg
loopne
and
dec
xor
in
mov
jo
jb
hlt
in
movsl
stos
mov
mov
mov
jbe
les
dec
insl
lcall
or
out
cmp
jl
fmull
ss
and
sbb
test
mov
mov
ljmp
inc
lret
cmpsl
enter
xorb
leave
sub
xor
insl
or
dec
icebp
and
xor
or
push
sbb
pop
stos
mov
fisubs
lds
sbb
leave
push
and
sub
sbb
dec
icebp
out
ljmp
cmp
jno
push
and
bound
dec
mov
dec
jae
mov
xchg
call
std
data16
mov
lret
sub
or
add
cmp
and
jge
ficoms
addr16
ret
sub
mov
lea
add
in
icebp
jmp
dec
cmpsb
es
xor
dec
mov
js
dec
arpl
stc
sar
out
or
loopne
cmpsl
dec
sbb
insb
mov
add
cmp
or
mov
or
shll
in
arpl
sub
xchg
adc
add
addr16
sub
mov
push
or
jl
lods
jo
and
jnp
sti
cmp
das
jmp
lods
jnp
lcall
or
in
loope
leave
call
add
cmp
jl
movsl
mov
mov
pop
sbb
into
out
mov
xlat
lcall
icebp
std
loop
icebp
jmp
pusha
or
and
lock
cwtl
stos
cmc
pop
lret
pop
mov
push
arpl
lods
mov
addr16
pop
in
xchg
roll
mov
push
dec
fs
and
or
pop
dec
dec
sbb
mov
test
inc
test
iret
cltd
lods
or
dec
rolb
outsl
fs
xchg
int3
adc
sahf
ljmp
push
out
add
push
xchg
in
dec
jl
pop
outsb
adc
cmp
es
ljmp
and
int3
jbe
daa
push
push
cmp
in
ret
lcall
cmp
aas
js
scas
push
mov
mov
data16
lods
popa
fchs
mov
xor
pop
arpl
cmpsl
addr16
lcall
jmp
lds
push
shrb
ljmp
js
jecxz
insl
cmp
xchg
and
out
dec
ljmp
jecxz
adc
mov
sub
mov
in
adc
bound
inc
imul
fmull
push
jle
loop
and
sbb
cltd
cmpsb
pop
sbb
bound
fcmovne
fisubrs
add
dec
je
int3
imul
and
jmp
or
pop
outsb
mov
xor
loop
push
adc
cwtl
inc
sbb
lcall
movsl
sbb
and
lods
es
int
mov
xor
push
mov
les
hlt
fsubrp
imul
leave
jl,pt
add
loopne
popa
imul
cmpsl
mov
or
ror
cmpsl
inc
dec
sbb
sub
data16
dec
cmc
and
mov
pusha
sub
and
jge
in
mov
dec
mov
dec
jg
mov
ja
mov
push
out
or
les
lock
aas
xchg
mov
and
dec
mov
xchg
pop
loop
aam
push
xlat
or
lock
inc
ret
push
push
and
mov
push
dec
cs
dec
jo
out
push
xor
mov
stos
push
out
pop
ja
add
xor
je
sub
cmp
and
xchg
inc
pop
lock
pusha
js,pt
xor
cmp
or
push
pop
cmp
jecxz
push
cs
dec
les
push
jmp
pushf
out
xchg
xor
roll
imul
add
and
nop
out
rolb
or
scas
jp
sub
std
or
repnz
nop
mov
jbe
sub
xchg
xchg
in
xadd
jno
ret
shrb
dec
push
leave
stc
bound
or
push
sahf
fsubrl
icebp
push
push
outsb
data16
mov
stos
jo
sub
out
int
sub
mov
es
ret
test
bnd
ja
lea
ret
dec
mov
dec
cmpsl
jo
sti
sbb
scas
dec
xchg
shlb
dec
or
js
in
aam
push
je
mov
dec
insb
sbb
mov
dec
mov
mov
rolb
fsubrp
mov
shll
imul
and
lock
cmp
or
jl
push
movsl
fs
dec
xor
and
movsl
insl
jl
and
addr16
out
cmp
sbb
mov
cmp
dec
mov
cmp
push
shlb
or
xor
dec
jl
les
mov
mov
addr16
mov
les
test
xor
ljmp
xor
sub
lret
push
ret
lret
lods
adc
add
data16
push
lds
cmc
int
ret
cmpsl
push
stos
aam
aam
fldcw
out
push
xor
mov
xchg
push
addr16
cmc
dec
xor
in
push
sbb
inc
call
cmpsb
test
mov
pop
inc
pusha
gs
jb
cwtl
ja
in
add
stos
jl
inc
pop
test
dec
cs
in
push
sub
call
rol
loop
push
ljmp
sarb
and
test
xchg
ror
scas
pop
sub
mov
outsb
decb
inc
and
sub
iret
ret
dec
jge
les
lcall
inc
imul
fisubrs
mov
or
mov
cmp
ret
inc
cmp
out
push
or
into
mov
pop
lods
mov
or
inc
and
bound
scas
mov
or
stos
or
bndmov
rolb
sti
mov
lcall
enter
dec
xchg
out
pusha
dec
jg
shlb
xchg
inc
cmp
arpl
popf
call
sahf
jecxz
mov
push
cmp
pop
sub
lods
add
addl
mov
call
or
xchg
daa
or
jl
cs
xor
call
sub
jp
imul
mov
mov
ret
inc
ja
fsts
cmp
cmp
lcall
ret
inc
stc
xchg
les
lret
cmp
sub
lahf
int3
shl
lret
push
cs
xchg
push
es
cs
cs
add
or
add
pop
pop
in
jge
movb
cmpsl
pop
xchg
dec
and
pop
xchg
aam
imul
jl
and
pop
mov
or
cmp
push
sbb
mov
jb
inc
mov
data16
sub
push
outsl
or
lods
inc
or
and
addr16
mov
ljmp
cmp
mov
or
xor
lods
xchg
adc
mov
push
add
dec
cmp
push
xor
push
out
lret
leave
and
xor
lods
cltd
cmpl
mov
lret
mov
dec
jns
ret
rcrb
loop
inc
in
inc
shl
cmpsl
sub
and
pusha
adc
xor
xchg
out
or
cmpsb
stc
insb
dec
or
sub
dec
imul
inc
lcall
add
sub
cmp
mov
and
cmp
in
push
arpl
mov
scas
into
and
fnstsw
cmpsb
cmp
dec
mov
aas
xchg
andb
fsubrp
test
mov
mov
insb
pop
ss
fcmovne
ja
lret
in
mov
add
loopne
shll
test
addr16
pushaw
dec
pop
inc
add
and
scas
jl
and
stc
cmc
and
inc
loope
subb
jge
or
jmp
cmp
sub
sbb
cmpsl
sub
dec
or
push
sub
mov
cwtl
mov
add
mov
loopne
and
ret
jmp
loopne
and
nop
imul
aaa
lods
xchg
mov
jmp
push
lcall
or
in
test
ret
push
lods
cmpsl
cmp
rolb
movsl
or
in
nop
and
imul
and
mov
and
sub
cwtl
and
add
lret
gs
dec
sbbl
outsl
mov
pop
inc
pop
lret
sbb
iret
mov
inc
mull
mov
jle
mov
ss
insl
xchg
inc
and
mov
scas
push
xchg
test
es
mov
lods
dec
mov
sub
push
pop
lret
andl
aad
mov
addr16
mov
nop
inc
inc
or
add
and
out
mov
sub
test
inc
cmp
push
dec
rorb
dec
mov
and
faddl
shll
jl
and
scas
and
xor
and
inc
jnp
mov
cmp
js
dec
out
call
sub
inc
sbb
mov
jb
sub
out
jbe
sub
cmp
dec
dec
aam
loopne
test
loopne
jo
out
aam
aam
pop
push
or
push
pop
cmpsl
push
and
stos
pop
into
cmp
fistps
jle
addb
and
sbb
cmp
js
mov
mov
ljmp
mov
and
mov
jmp
cmp
and
mov
das
loop
sub
test
sbb
and
leave
mov
jbe
ficomps
add
cmp
and
push
cmp
dec
adc
es
test
ret
movsb
dec
lods
cmp
js
in
xchg
movsl
dec
adc
xchg
int
dec
push
sub
sub
jge
lds
rorl
lahf
cmpsl
add
call
dec
jecxz
mov
enter
cmpsb
test
outsl
loopne
push
cmpsb
or
jb
inc
cmp
sbb
mov
les
scas
arpl
rclb
mov
cmpsb
in
cmp
lods
xor
call
js
test
rolb
iret
mov
or
fmull
stos
movsl
scas
ret
or
es
rcll
push
and
xlat
sub
sbb
mov
es
ficompl
andnps
push
mov
add
in
push
lds
push
cs
or
cmp
jae
imul
sbbb
out
or
loop
push
aam
xor
mov
movsl
fs
movsl
pop
dec
mov
fimuls
ljmp
inc
js
mov
sub
movsl
or
and
aam
pop
cwtl
stos
mov
loopne
inc
mov
or
add
pop
shll
cs
icebp
std
ret
ret
dec
xchg
or
js
pop
mov
push
mov
mov
js
call
les
mov
stc
sub
dec
shr
push
add
aam
cmpl
cmp
or
sbb
pop
pop
aam
push
aad
push
in
hlt
out
icebp
dec
repnz
rep
les
test
rorb
xor
lcall
std
adc
out
add
mov
lods
adc
lds
mov
mov
jbe
outsl
mov
js
andb
and
iret
sysexit
mov
inc
sub
pop
in
iret
stos
enter
mov
scas
aam
ret
mov
jne
loop
sbb
pop
movsb
cmpsl
shlb
add
add
push
stos
cmpsb
js,pt
jns
test
fwait
cmpsl
push
imul
fsubr
xorps
addr16
call
push
lods
enter
mov
xor
out
dec
pushf
outsl
and
adc
lar
jae
test
iret
xchg
jg
lea
sbb
leave
or
pop
shrl
ljmp
imul
mov
dec
push
popf
out
sbb
jmp
mov
and
movsw
data16
shrb
dec
outsl
cmp
lea
int
es
push
sbb
and
mov
ret
jmp
mov
push
adc
cmp
and
mov
push
ret
cmc
daa
stc
fsubs
sbb
call
cmp
testb
xchg
bound
leave
add
inc
les
dec
inc
in
imul
adc
add
and
and
out
or
or
xchg
shll
test
or
stc
mov
out
jnp
outsb
scas
lods
mov
pop
cmp
adc
dec
ja
js
or
repz
aam
out
dec
lcall
call
stos
sbb
or
mov
sub
xor
aaa
sbb
jmp
lcall
cmpsb
or
sub
cld
adc
test
or
std
xchg
gs
js
arpl
and
inc
dec
mov
jge
les
shlb
inc
lret
cmp
dec
adc
scas
jae
gs
mov
xor
daa
sbbl
rolb
ret
mov
pop
xchg
pop
sub
mov
add
mov
arpl
and
out
insb
out
sub
pop
inc
push
jmp
and
lret
fwait
and
mov
rorb
clc
test
ret
lods
dec
push
inc
dec
mov
imul
stc
jl
rorb
dec
mov
data16
mov
bound
in
out
jl
les
push
sub
mov
xor
inc
mov
enter
or
push
or
mov
leave
arpl
xchg
ret
push
aas
shr
sahf
or
fwait
or
add
lea
xor
je
mov
ljmp
int
call
or
retw
xor
imul
stc
ljmp
pop
push
lds
pop
sub
dec
mov
je
mov
arpl
pop
jnp
popa
jp
xchg
in
icebp
sub
jmp
imul
vmread
test
sbb
stc
in
sub
arpl
cmp
cmp
lea
arpl
not
or
and
add
cmc
int
stos
push
push
and
das
pop
xor
mov
jl
shlb
inc
pop
enter
lcall
loop
cltd
cmp
inc
stos
pop
dec
ljmp
mov
fwait
and
sub
enter
cli
shll
loope
arpl
ljmp
mov
add
movsl
iret
xchg
cmpsl
sub
lcall
insl
stos
mov
or
xor
mov
push
pop
lret
xor
les
or
pop
out
outsl
sub
xchg
xchg
loopne
xchg
dec
pop
ret
cmp
out
sub
cmp
insb
dec
jle
lods
adc
lods
pusha
fstpl
jnp
add
jecxz
ret
sbb
sub
mov
mov
mov
jl
jo
aam
pushf
ljmp
leave
test
inc
clc
in
lret
mov
mov
dec
outsb
jmp
and
in
xor
in
mov
scas
and
push
enter
cmpsb
testl
dec
lahf
shrb
leave
leave
arpl
mov
test
ret
movsb
push
mov
outsl
out
stc
xchg
loopne
dec
inc
xlat
xor
out
leave
jmp
or
les
or
or
pop
and
dec
js
sbb
mov
call
imul
insb
cld
out
inc
mov
or
add
je
fildll
popa
in
loope
sbb
imul
sub
add
out
push
subl
rcrb
pop
ret
add
ljmp
dec
mov
mov
inc
inc
cmp
or
add
pop
mov
orb
jb
call
test
xlat
adc
dec
mov
or
loopne
cmp
rorl
mov
xchg
lds
dec
sub
outsl
and
movsl
push
jnp
cmp
out
icebp
shl
add
fisubs
cmp
les
stos
scas
and
les
ljmp
pushf
ret
les
add
mov
cli
subl
into
ucomiss
cmp
or
outsb
les
aad
test
es
and
adc
and
jp
mov
roll
jg
mov
loopne,pn
bound
pop
mov
cmp
lcall
mov
faddl
push
insb
clc
lcall
mov
push
push
xchg
int3
mov
add
shrb
les
mov
nop
add
cmc
inc
out
and
cmp
aam
sub
dec
lcall
enter
xchg
jl
and
loop
pop
inc
std
dec
js
ret
or
rorb
js
cwtl
pop
mov
nop
in
mov
sbb
cmpsb
leave
mov
push
and
and
xchg
fimuls
cmp
in
sbb
and
mov
and
xchg
aam
dec
cmp
pop
fwait
cmp
add
pop
andl
loop
fistpl
mov
sti
in
adc
out
inc
sbb
icebp
push
les
out
cmp
hlt
in
ret
lcall
imul
dec
out
and
jp
jge
out
fs
imul
push
sub
jnp
imul
mov
mov
ret
movsl
sbb
loop
shrb
arpl
test
aas
arpl
cmp
mov
cmpsl
movsb
lcall
sub
lods
int3
lcall
mov
decb
inc
mov
xchg
shl
xchg
and
lcall
les
jmp
fsubp
pop
scas
out
dec
aam
and
out
into
insl
sub
cli
ret
add
mov
outsb
cmp
mov
lock
aam
add
ljmp
cmp
jo
aaa
jp
mov
mov
adc
push
xchg
int3
leave
es
pop
push
dec
subb
sub
jle
push
dec
fmull
scas
out
push
jmp
cmp
loopne
cmpsb
jae
dec
js
or
fwait
ja
cmpsb
and
loope
sub
fildl
and
es
xchg
and
dec
pop
xchg
mov
fwait
pusha
int3
daa
cmp
pop
es
mov
add
mov
es
ljmp
jle
imul
xchg
cmpsl
dec
inc
pop
jmp
out
xor
addr16
faddl
repz
adc
test
jle
bound
iret
sbb
stc
dec
imul
stc
jmp
sbb
mov
mov
adc
scas
or
jge
cmp
cmpsb
cmp
and
enter
or
stos
xchg
jo
add
loope
popa
cmpsl
cmp
mov
jnp
out
andl
js
imul
popl
xorb
push
or
cmp
out
pusha
loope
sbb
sub
cmpsb
js
fistpl
inc
add
movsl
pop
out
xor
call
sarb
jmp
out
or
stc
gs
or
add
fbld
loop
sub
leave
out
add
add
outsl
push
int3
mov
loop,pn
or
cmp
add
sub
dec
or
pop
sbb
mov
loope
add
scas
iret
dec
movb
push
cld
scas
loope
mov
pop
adc
mov
sbb
push
or
mov
sub
push
out
or
dec
dec
dec
and
mov
mov
xchg
lcall
and
jns
nop
mov
jne
fimuls
cli
test
add
out
jmp
int
loopne
loope
mov
push
popa
pop
mov
addr16
and
sub
dec
pop
aas
mov
mov
push
icebp
dec
or
xchg
jo
lods
pop
out
ds
rcll
int
popf
aam
xchg
and
imul
push
ret
fnstenv
js
out
ljmp
mov
push
mov
and
jnp
cmp
call
into
imul
fsubl
add
rorl
jecxz
dec
dec
xor
imul
jnp
lcall
psadbw
test
cmp
xadd
pop
addr16
int
sub
out
mov
cmpsb
in
lret
jnp
sti
jge
les
lds
mov
nop
or
lds
inc
or
enter
dec
or
push
movsl
xor
rorl
ljmp
push
mov
int
dec
dec
mov
shlb
pushf
cmpsb
out
push
ljmp
cs
or
js
mov
gs
dec
scas
cs
out
add
insl
dec
test
lods
lea
pop
call
sbb
frstor
fldpi
orl
out
cmpsl
bound
fwait
adcb
push
ret
lea
loopne
pop
mov
add
sub
add
mov
loop
add
imul
ret
mov
addr16
stos
ljmp
jg
inc
and
fs
dec
jmp
cmp
out
arpl
cmp
mov
ja
mov
arpl
or
push
mov
inc
roll
lods
in
mov
pop
and
lods
out
dec
pop
rorb
stos
leave
mov
mov
lea
or
adc
fsubp
js
les
or
xlat
pushf
insl
xchg
fldl2t
ret
mov
sbb
scas
gs
ror
lods
inc
dec
inc
les
data16
or
mov
sbb
enter
dec
repnz
or
in
inc
es
es
cwtl
ret
out
stc
sub
jmp
ja
lea
sarb
jnp
and
icebp
es
out
or
xor
mov
cmp
cmpsb
fs
and
dec
xchg
shll
outsb
fisubrs
mov
mov
mov
enter
lret
dec
adc
in
cmp
mov
dec
call
in
addr16
dec
cmp
lods
in
mov
cmpsb
sub
push
inc
loop
mov
and
xchg
pop
or
push
pusha
pop
pop
add
jecxz
cmp
loope
add
rorl
push
jno
pop
insl
mov
push
mov
orb
or
mov
stc
imul
dec
push
pop
sarl
xor
in
out
mov
sbb
xchg
cs
sub
sub
ret
dec
xlat
cmp
push
fmuls
test
xor
cmp
das
imul
pop
xchg
sub
lret
in
sahf
cmpsb
adcl
jle
mov
mov
subl
andl
xchg
ret
dec
dec
les
push
out
mov
lret
icebp
out
push
addl
les
daa
mov
push
push
clc
in
mov
pop
jl
hlt
dec
dec
fisttps
int
and
iret
cmp
imul
cmp
jno
inc
into
mov
es
addr16
mov
cmpsb
inc
mov
outsl
and
leave
mov
xor
mov
xor
sub
loope
call
pop
pusha
int3
dec
dec
pop
add
ljmp
fnstsw
or
les
and
sbb
mov
jmp
mov
call
inc
cs
sbb
rolb
sub
or
lcall
add
cmpsb
mull
xchg
and
out
cs
dec
mov
and
sti
mov
mov
loopne
jb
or
fsubs
mov
add
pop
comiss
imul
leave
jg
insb
cmc
insl
mov
sub
sbb
sub
imul
out
or
fsubs
call
test
jle
sub
jl
shlb
mov
sbb
sarl
dec
mov
and
cmp
stos
cltd
insw
mov
es
add
in
shld
popw
mov
cmpl
out
test
data16
ljmp
das
lods
test
or
xor
dec
adc
add
jp
and
mov
sub
roll
movsl
fdivs
js
ja
sub
addl
and
or
nop
pusha
mov
jmp
mul
mov
or
inc
fisubs
cs
or
dec
call
or
daa
jo
in
inc
fcoms
cmp
hlt
in
cwtl
cmp
and
dec
xor
xchg
pmaxsw
aam
xchg
add
mov
and
shll
dec
mov
jl
int
add
fcmovnu
in
jp
or
lcall
dec
push
adc
dec
test
pop
fs
and
out
adc
test
pop
jp
jmp
pop
jae
lcall
aas
lock
repnz
ret
and
movsb
mov
out
xchg
add
cmp
dec
and
xor
xor
je
aam
aad
add
out
imul
sub
lcall
stos
les
jle
jmp
xchg
call
sub
les
jmp
jmp
mov
push
loop
inc
dec
movsl
and
out
in
mov
lds
out
subl
or
out
push
es
sub
test
xchg
insb
jb
das
outsb
lea
loop
push
sub
adc
andl
lods
pop
test
mov
push
push
test
imul
sahf
loope
js
jecxz
and
lds
jl
push
and
out
push
outsb
pop
fildl
cmp
fs
test
ljmp
lcall
movsb
into
data16
stos
sub
outsl
push
sub
cmp
shrl
call
iret
cmpsl
dec
mov
movsl
xorl
xorb
pop
sub
cmpsl
shll
and
and
out
and
or
cmpsl
dec
test
inc
sbb
insl
stos
mov
xchg
lods
inc
lret
dec
xchg
mov
mov
popa
and
dec
cmpsb
push
lret
ret
iret
mov
daa
in
insb
push
les
shrb
or
outsl
cmp
loope
add
in
add
in
gs
or
xchg
cwtl
or
js
push
out
in
mov
in
cmp
cmpsb
out
aaa
nop
fs
xlat
jecxz
in
pusha
loopew
popa
xor
dec
bound
mov
roll
mov
inc
push
adc
push
outsb
or
xchg
mov
mov
mov
or
mov
in
jge
ret
dec
jge
lea
rorl
insb
inc
ljmp
in
inc
mov
cmpsb
imul
mov
mov
imul
jmp
jp
lea
js
sub
cmpb
loop
out
jbe
add
lock
sub
scas
mov
and
sub
jecxz
shr
inc
xchg
push
mov
add
sti
popa
inc
leave
sbb
add
cmp
or
mov
sub
scas
pop
insb
mov
int3
sub
sub
dec
inc
outsb
or
xchg
ret
js
test
and
int
in
or
or
insb
lods
ret
cs
lds
call
arpl
sub
scas
push
sub
push
popa
andl
out
push
test
pop
bound
lret
mov
inc
call
daa
iret
pop
arpl
loop
out
push
ljmpw
in
cmpsb
ljmp
pmaxsw
out
roll
lods
jmp
in
lret
out
out
push
loopne
nop
jg
add
fmuls
sub
push
insl
push
pushl
outsb
or
into
jl
cmp
inc
xlat
lods
dec
popa
js
scas
or
shrb
mov
subb
enter
sbb
fisttpl
lret
test
dec
ja
add
movsbl
jp
fsubr
adc
mov
pop
sub
cmp
lcall
or
enter
jl
ds
add
sub
enter
mov
fists
daa
mov
orps
stc
scas
mov
cmpsb
jmp
sub
arpl
clc
sub
stos
pusha
es
imul
sub
jl
scas
out
lock
fstpt
mov
popf
daa
dec
stc
mov
out
or
sub
mov
or
mov
and
mov
js
stc
or
push
pop
and
or
pop
jmp
push
add
add
fidivs
xor
es
mov
int
sub
fucomi
sub
lret
or
jp
cmp
insb
pop
fdivr
int3
mov
in
pop
xor
cld
mov
in
mov
fildl
out
sbb
or
scas
lret
xchg
std
fmuls
or
lret
sti
cs
pop
adc
insl
ljmp
clc
rclb
lods
scas
push
enter
cmc
or
mov
sbb
and
mov
js
fstps
mov
lahf
notb
es
pop
jge
jmp
push
and
cs
dec
push
adc
xchg
mov
jbe
lods
sub
fmuls
je
cltd
pop
test
or
into
fldenv
cmp
loope
lret
das
fs
inc
daa
inc
jecxz
dec
push
push
jnp
daa
adc
outsb
orb
daa
mov
mov
cmc
call
out
pop
add
in
clc
mov
or
ror
fcomp
sub
lret
repz
jge
in
daa
out
scas
add
maskmovq
divl
pop
ss
notb
insb
jne
fisubs
mov
sub
js
cs
lea
add
daa
xor
mov
xchg
stos
inc
xchg
push
inc
push
lds
sbb
pop
xor
repz
loopne
shll
mov
and
out
fisubs
icebp
aad
cmp
pop
adc
sbb
mov
arpl
jle
and
dec
mull
push
insl
ds
icebp
cmp
fsub
pop
cld
jmp
push
rorl
pop
stos
arpl
fisttpll
aad
movsb
js
fnstcw
pop
loopne
in
daa
push
ljmp
mov
fsubrp
scas
or
cs
enter
jg
arpl
push
cmp
imul
sbb
jp
or
mov
movsb
insb
mov
adc
dec
enter
and
mov
jns
dec
cmpsb
add
sbb
jo
sbb
mov
jbe
add
pop
daa
mov
adc
xor
rorl
xlat
xchg
add
fiaddl
aaa
mulb
or
xor
stc
sbb
adc
and
push
daa
xorl
int3
daa
popf
test
jo
push
imul
insb
mov
jns
xor
cmpsb
and
mov
sbb
jmp
mov
fisubrs
cmpsl
sub
sub
push
inc
sarb
jl
stos
xchg
shrb
daa
bound
adc
insb
jae
int3
dec
dec
sahf
jg
pop
loopne
mov
and
sbb
das
pop
dec
mov
sti
das
notl
ja
aas
or
jne
daa
or
sbb
sub
cmp
jge
cmp
lret
leave
cltd
push
call
daa
or
jo
jp
mov
daa
insb
push
xor
sub
xchg
jl
dec
scas
mov
out
sbb
out
mov
repnz
sub
cwtl
pop
mov
insl
jbe
or
dec
loope
cmpb
dec
movsb
movsl
frstor
ljmp
xchg
sarb
push
sbb
in
cmpsb
ljmp
pushf
cmc
or
es
bound
mov
out
sub
mov
lcall
clc
cmp
js
imul
add
mov
sub
xchg
ljmp
arpl
push
xor
add
outsl
dec
sub
jne
scas
jo
shll
es
mov
jg
or
call
stc
dec
xchg
or
cwtl
mov
dec
push
es
daa
push
cli
xchg
pop
sbb
xchg
std
adc
test
sub
lret
lds
bound
daa
mov
imul
data16
cmpsb
daa
inc
ljmp
daa
ja
jns
pop
fmull
sbb
cli
enter
imul
mov
js
xor
cwtl
mov
pop
mov
ds
mov
push
rcrl
iret
notrack
imul
mov
cltd
adc
mov
rcrb
push
fcmovnu
sub
repz
jmp
enter
scas
xor
pop
push
pop
outsb
jno
in
divl
popa
test
cmc
imul
mov
xchg
popf
sbb
adc
xchg
daa
or
stos
xor
inc
ret
lcall
repnz
adc
sub
outsl
fstl
daa
lret
jle
int3
out
pop
push
bound
push
in
inc
jbe
andb
xor
loopne
repz
jle
dec
into
cli
test
imul
and
inc
clc
scas
mov
dec
push
push
clc
mov
cmpsb
push
stos
pop
daa
mov
mul
cmp
jae
outsb
popf
fisubs
outsl
daa
shrb
push
jecxz
out
jnp
sub
mov
ljmp
jp
shr
mov
cmp
int
mov
ss
loope
test
xor
das
mov
in
es
pop
mov
dec
push
out
and
test
fisubl
mov
jae
leave
daa
mov
ja
mov
shlb
mov
or
inc
xchg
add
daa
xchg
pop
and
test
imul
repnz
or
mov
stc
ret
xor
xchg
push
mov
roll
jnp
inc
daa
mov
cs
pop
iret
add
fisttpll
jmp
aaa
je
push
sbb
ffreep
mov
in
xchg
cmpsb
js
adc
mov
cmp
movsl
mov
xor
add
js
or
daa
dec
xchg
es
and
stos
fs
dec
push
mov
pop
pop
ljmp
add
daa
adc
xor
cs
jae
daa
leave
cmp
pop
and
cld
cmp
sub
inc
daa
pop
movsb
jp
lcall
inc
and
repnz
imul
cltd
test
lret
mov
daa
xchg
mov
adc
dec
int
call
das
dec
pop
mov
sub
xchg
das
enter
and
out
adc
sahf
pop
mov
in
andl
stos
leave
leave
aaa
and
mov
mov
mov
and
and
cmp
lds
leave
mov
jne
in
call
movsb
dec
sti
stos
push
sbb
sbb
into
mov
ret
xchg
in
cmp
mov
popf
subb
leave
dec
fdivs
lds
out
mov
shll
sub
push
cmp
das
add
movsl
sub
add
or
test
cmp
call
std
ja
inc
fnstenv
mov
push
fisubrl
or
mov
out
push
inc
lret
mov
jl
pop
cltd
mov
cli
sub
into
mov
popa
dec
dec
out
sahf
xor
enter
fdivl
pop
je
add
sub
std
movsl
and
daa
xchg
aaa
dec
jns
idivl
jg
push
mov
pusha
xchg
pop
xor
xchg
mov
mov
shlb
data16
daa
out
mov
mov
cmp
pop
stos
xlat
and
jecxz
dec
mov
push
in
fldt
push
stos
ja
das
je
popa
jns
mov
clc
push
dec
mov
xchg
xchg
cmpsb
xor
push
adc
or
adc
sbbb
adc
fmulp
shlb
pop
in
dec
cmp
icebp
push
pushf
daa
mov
jae
adc
cmp
cmp
dec
inc
mov
and
or
fsts
dec
out
daa
ds
mov
adc
daa
arpl
or
daa
pop
xor
loopne
push
daa
adc
test
daa
fsubl
xchg
mov
mov
jns
sbb
sti
or
clc
dec
daa
cmp
sbb
or
cld
ss
mov
xchg
bound
into
fcomp
es
push
fcoms
or
xlat
mov
or
out
in
das
lcall
stos
shrl
ljmp
in
leave
addb
js
cmpsb
or
pop
insl
push
jns
adc
push
daa
jae
pop
pop
mov
inc
or
in
jmp
jp
fildl
enter
dec
mov
cmp
pop
fnstsw
mov
aaa
hlt
mov
adc
adc
pushf
lods
daa
inc
fdivrl
adc
lods
mov
push
xchg
mov
daa
push
cmp
pop
pop
pop
push
daa
mov
addr16
stos
inc
daa
out
lret
push
cmp
xor
test
and
jne
test
out
daa
cmc
in
push
mov
cmp
push
loope
inc
jne
and
in
xor
lcall
daa
in
loope
imul
xchg
pop
out
daa
pop
cmp
lret
pop
daa
dec
cmp
adc
mov
imul
in
ja
in
int3
fcomp
xchg
sbb
xchg
daa
inc
fpatan
out
xchg
ret
shlb
add
outsb
push
adc
rorl
je
mov
mov
stc
sbb
call
gs
daa
cld
addr16
cmpsb
push
ljmp
daa
fistl
daa
pop
dec
inc
sub
orb
fnstenv
jns
in
dec
lcall
mov
dec
fidivrs
fsubr
inc
sbb
add
outsl
fwait
xor
shlb
stos
push
pop
sub
push
cmp
fisubrl
push
mov
mov
dec
mov
pop
mov
jp
js
cmp
outsl
mov
aad
sbb
cmp
mov
sub
daa
or
pop
pop
xlat
daa
pop
fs
mov
or
leave
sub
cmc
and
sub
lret
daa
and
in
cmpsb
shrl
jae
idivl
pop
xchg
clc
jno
sbb
pusha
mov
decl
inc
pop
ret
rolb
int
jo
les
cs
cmp
xchg
fwait
daa
rorl
fsubrs
add
int3
cmc
mov
xor
fistps
or
lds
jno,pt
pop
aam
jge
cwtl
sub
addr16
lea
inc
xor
test
popf
inc
je
movsb
cmp
mov
push
fmull
scas
sub
addr16
lods
pop
cs
cld
xor
dec
sub
imul
mov
pop
xchg
jne
daa
mov
jmp
xchg
ja
pop
andb
daa
add
fidivs
mov
pushf
xchg
repnz
leave
lods
imul
xchg
mov
js
add
daa
jle
test
sub
jecxz
cmp
and
call
pop
les
call
add
jnp
pop
shr
loop
sub
dec
jb
cmp
cld
sti
js
cmp
mov
in
cmc
fs
jp
push
lods
cmp
dec
jle,pn
mov
lahf
icebp
out
call
push
cmp
or
jmp
sti
xor
fwait
cli
pop
stc
in
daa
addr16
gs
inc
mov
add
daa
dec
movsb
inc
xchg
mov
cmp
ja
jne
push
push
and
jg
daa
jbe
mov
je
mov
sub
mov
sub
int3
jecxz
jns
and
daa
lret
call
mov
out
daa
repnz
sub
pop
subl
jne
popf
daa
das
and
in
subl
mov
testb
sbb
sub
daa
xchg
cmpsl
inc
ss
fisubl
dec
pusha
cmp
push
mov
daa
fbstp
out
daa
pop
mov
in
daa
je
push
outsb
cmp
sbb
imul
pushf
out
push
sub
adc
and
sbb
mov
lea
sahf
sti
rolb
mov
jb
cmp
fadds
sub
sbb
jg
push
daa
mov
into
or
int3
push
icebp
outsl
ret
add
and
sub
sbb
mov
add
pop
jbe
movsb
adc
fcmovnb
call
xchg
shr
jp
insb
jnp
adc
das
and
test
pop
shll
push
mov
sub
cmp
pop
imul
xchg
adc
add
stos
jnp
lea
cwtl
or
sub
cmp
fldt
dec
and
das
lret
xchg
cmp
cltd
push
jae
cs
push
jae
loope
pop
ror
das
sub
mov
into
and
lret
sub
and
pop
xchg
fiadds
cwtl
push
dec
and
add
xchg
adc
inc
leave
inc
ds
cmp
and
push
xchg
daa
jb
push
pop
sarb
xchg
daa
xchg
std
mov
cmpsb
or
movsb
mul
add
insb
in
in
lds
inc
pop
xor
out
les
inc
loop
jp
daa
divb
daa
mov
movsl
stc
xchg
scas
arpl
shrb
cmc
xchg
ret
test
pop
popf
out
sti
sbb
adc
hlt
das
mov
sar
ret
sub
clc
std
pop
cmpsb
adc
mov
sbb
daa
mov
jp
daa
popa
sbb
mov
fsts
mov
shll
mov
cld
mov
into
sbb
pop
and
movntps
test
icebp
data16
push
jnp
jne
repz
jge
daa
xorl
xchg
push
xchg
outsb
imul
adc
fnsave
lahf
cmpsb
into
daa
cltd
cmp
xchg
test
ror
insb
repnz
mov
or
mov
addr16
inc
loop
or
pop
sub
sbb
jmp
fstpt
popa
inc
jae
mov
js
jmp
dec
sahf
arpl
in
mov
sub
jno
push
mov
mov
out
adc
out
pop
add
int
stos
sbb
mov
daa
aad
fmuls
mov
jmp
pop
mov
loopne
test
cmp
dec
jo
lock
scas
daa
les
or
pop
xchg
inc
mov
mov
lcall
adcl
adc
lret
cmp
or
jnp
shlb
dec
mov
push
imul
mov
mov
js
stos
sbbl
hlt
push
daa
mov
inc
push
daa
out
icebp
lods
pop
mov
daa
jb
arpl
sbb
addr16
pop
mov
jl
xchg
insb
push
gs
cmp
in
mov
pop
xchg
fldcw
jb,pn
insb
mov
gs
push
push
or
and
inc
fwait
lds
loop
es
sbb
cltd
int
push
scas
in
daa
push
mov
sub
jae
lret
arpl
mov
cmp
xchg
out
mov
pop
or
scas
std
fdivs
adc
daa
in
pop
xchg
dec
jl
ret
xor
test
lcall
js
mov
and
imul
inc
adc
cld
dec
ljmp
sti
xor
stos
es
sub
sub
inc
pandn
push
and
jnp
adc
jae
xor
es
inc
add
push
enter
and
mov
outsl
sub
inc
imul
xor
sub
test
imul
add
dec
je
add
xor
and
fs
call
pusha
adc
push
pushf
pushf
call
jmp
add
inc
scas
cmpsb
cld
arpl
mov
add
mov
push
sub
push
jno
mov
fcoms
lret
jmp
fisubrs
and
leave
add
xlat
ffreep
pop
xchg
xor
shll
xchg
mov
sub
xchg
push
add
fcmovnbe
bound
jecxz
int
xchg
push
mov
data16
dec
push
jge
bnd
pop
loop
inc
xchg
out
mov
frstor
mov
inc
pop
pop
xchg
or
mov
in
loop
push
mov
xor
sbb
int3
stos
adc
push
cmp
and
adc
jae
cld
mov
push
adc
pop
aam
mov
xlat
loop
and
addr16
in
ljmp
loopne
pop
and
mov
repz
push
pushf
movl
pusha
pushl
mov
movl
pushf
pushf
push
lea
jmp
pusha
pushf
call
pushf
lea
push
jmp
pusha
inc
mov
pusha
jmp
push
not
pushl
clc
test
test
neg
call
call
movb
pushf
mov
pushf
pushl
ret
push
out
add
jl
adc
into
mov
shl
sbb
mov
repz
orb
mov
rorb
mov
int3
add
adc
sarb
outsb
push
sbb
lods
dec
sub
sub
push
add
push
sbb
mov
stos
pop
out
pop
adc
adc
dec
mov
andl
and
movl
call
push
pusha
mov
mov
lea
je
pushf
push
mov
pusha
call
dec
add
jbe
enter
dec
shl
cmp
lcall
das
fisubs
add
dec
shll
loop
pop
pop
jo
pushf
lahf
sub
stos
hlt
jb
pop
jo
fsubl
insb
lea
mov
jmp
loope
or
inc
movd
mov
add
jle
mov
out
lods
push
adc
jae
aam
adc
sbb
mov
mov
inc
fisubs
fmuls
pop
and
stc
mov
call
push
dec
lahf
shl
es
pop
es
add
add
add
fwait
in
add
shld
mov
add
cmc
call
test
bt
cmp
push
lea
ja
pusha
call
imul
cmc
add
pushf
pushf
pusha
lea
jmp
movl
pushl
pushl
popl
push
pushl
ret
outsb
pushf
sbb
das
stos
cmpsl
jnp
out
and
nop
imul
ret
ds
adc
sbb
push
fs
inc
lods
ja
jbe
in
mov
dec
adc
lea
gs
arpl
out
push
insl
jl
loopne
nop
add
outsb
xchg
pop
decl
lea
call
pusha
pusha
lea
jae
cmc
xor
pushf
pusha
lea
call
push
push
lea
jae
jmp
pop
pushf
pusha
movl
push
push
call
adc
cld
xchg
jl
xchg
push
inc
dec
iret
cs
in
cli
jnp
jle,pt
xor
outsl
jmp
add
hlt
and
jmp
out
aam
aas
dec
push
adc
adc
jp
aas
jecxz
inc
xchg
cmp
add
das
ret
mov
dec
cld
data16
dec
and
adc
mov
in
aad
mov
ds
xchg
sub
cwtl
repnz
into
aas
inc
aam
cli
lcall
xor
push
mov
mov
or
jl
inc
fiadds
lcall
push
int
stos
adc
popf
xor
dec
test
popa
mov
daa
xchg
testb
out
jns
mov
xor
pop
out
cmpl
frstor
xchg
lock
mov
shlb
xor
push
jge
sub
movsb
sbb
pop
mov
mov
js
lods
iret
shlb
mov
push
repz
pop
sub
lea
jae
jbe
clc
push
add
pushf
mov
pushf
mov
push
lea
jmp
lea
adc
movzbl
setg
push
shrd
sub
mov
das
sbb
shl
bswap
sub
shld
push
lea
sar
push
rol
cmp
rcr
push
shld
rcr
push
aam
pushf
btr
mov
cmp
pushf
stc
test
call
pusha
jmp
call
call
out
pushf
mov
pop
loopne
popa
into
notl
shl
xchg
fidivrs
mov
xchg
sarb
inc
dec
jmp
jb
xchg
xchg
sbb
jbe
pop
enter
pushf
dec
divl
cltd
not
or
out
jnp
adc
xlat
stc
aaa
clc
sub
shrl
mov
xor
inc
sub
es
mov
push
test
mov
and
push
in
push
test
movsl
lret
inc
mov
leave
xchg
pop
sub
inc
lea
jb
push
mov
pushl
ret
lea
ja
rcl
rol
jmp
call
jno
insb
adc
fwait
es
test
adc
jmp
lods
in
int
push
mov
lahf
ljmp
and
jb
lcall
pop
ja
mov
fs
mov
pop
add
push
inc
lods
dec
push
test
dec
pusha
ficoml
mov
mov
aaa
sub
loopne
mov
roll
mov
rcrb
push
loope
pop
mov
cmpl
lea
xchg
pop
sub
jmp
add
leave
pushf
call
movl
movb
pusha
mov
push
lea
jmp
lea
call
pushf
lea
jne
pusha
pushf
pop
mov
push
push
lea
jmp
pushf
call
stos
pusha
setl
mov
pusha
pushf
mov
call
bt
push
sub
pushf
cmp
call
jmp
movl
mov
push
lea
jmp
pusha
movl
pushf
push
push
mov
movl
mov
pushf
pushf
mov
lea
jmp
pusha
movl
call
movl
pusha
pushf
mov
lea
jmp
movl
lea
ja
call
not
pushl
bt
pushf
bt
rol
pushl
inc
movw
bt
test
mov
movb
stc
cmc
cmp
add
bt
cmp
test
push
lea
jne
push
call
jge
inc
cwtl
mov
mov
cmp
pop
mov
cmovs
adcb
push
jno
dec
rorb
jb
dec
fcmovnu
push
push
jp
xor
jl
inc
pop
pavgw
mov
mov
leave
sti
flds
fistl
sbb
add
nop
or
out
movsb
push
jnp
add
pop
mov
jp
xor
cmp
pop
jns
dec
outsb
int
xor
pop
sub
pusha
mov
pushf
movl
movl
push
jmp
decl
out
ja
inc
jns
cmp
pusha
xor
xor
mov
and
lods
sub
movsl
int3
vsubss
ds
fnstsw
push
enter
pop
push
sub
inc
lods
sbb
test
lret
or
sub
pop
ds
lea
bts
bsf
mov
pusha
shr
bt
cmc
bt
cmp
jmp
pushl
popl
push
pushl
pushl
ret
lea
call
pushf
adc
jmp
stc
neg
test
push
jmp
stos
movw
pushf
lea
jmp
pushf
movl
call
or
pusha
lea
je
lea
mov
lea
movzbw
movzwl
bswap
mov
pusha
lea
mov
not
bswap
bswap
mov
movb
pusha
pushf
lea
call
push
push
pushf
lea
jne
call
push
lock
std
std
andb
push
mov
ret
jp
push
cs
ret
dec
sbb
mov
pop
xchg
ss
je
pushf
lods
jge
pop
in
dec
dec
inc
js
aam
push
movb
cs
test
nop
mov
out
in
add
inc
cmpsb
popa
xchg
in
xchg
push
xchg
jp
pop
dec
pusha
add
and
jmp
sbb
inc
jmp
btr
cmp
adc
mov
clc
pushf
and
pusha
stc
add
movb
pusha
push
lea
jmp
nop
sbb
xor
leave
sub
shlb
xor
jl
sbbb
stos
int
jge
bound
fs
mov
mov
jecxz
and
pop
mov
fsubrl
leave
or
and
inc
and
lods
xor
int
jno
rolb
roll
jmp
mov
in
sub
xchg
pop
cs
xor
pusha
lea
je
bts
dec
sub
rol
mov
jmp
addb
or
fstl
leave
aam
test
jge
mov
xchg
loope
xor
negb
pusha
fstpt
sub
pushf
mov
xor
push
mov
lret
int3
sub
stc
outsb
xchg
mov
sarb
aas
das
dec
fisubrs
insl
add
push
xchg
in
add
into
jecxz
xchg
pop
mov
jae
dec
call
mov
push
pop
pop
pushf
mov
pusha
pushl
ret
lea
je
push
cmp
push
lea
je
clc
jmp
cmp
push
lea
jae
mov
pusha
mov
not
shr
mov
test
mov
jmp
setno
mov
mov
pushf
pusha
lea
jmp
pop
out
dec
icebp
aad
dec
mov
gs
xchg
repz
adc
sbb
repz
or
fnclex
jp
cs
lods
and
lods
cmpsb
ja
loop
in
cmp
les
repz
inc
aaa
mov
sub
push
mov
andl
pushl
sub
addr16
in
dec
je
scas
fmuls
cltd
ja
push
notb
xchg
outsb
in
xchg
inc
xchg
popf
mov
jle
mov
add
icebp
cld
ret
add
and
ds
ret
mov
add
js
push
jo
dec
mov
movsl
data16
loopne
sahf
push
lretw
xor
push
ret
cmpl
xor
cwtl
or
insl
pop
jmp
fnstcw
cmp
cmpsl
mov
sbb
xor
call
pusha
lods
fiadds
imul
stos
xlat
cmpl
shll
dec
data16
aam
xlat
stc
fsubrl
mov
ds
loopne
ds
test
dec
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
jl
or
adc
cltd
pushf
in
and
sbb
lahf
or
sahf
xchg
inc
sub
mov
ret
testb
lods
mov
adc
sbb
stos
dec
lahf
add
lcall
sub
fisubrs
jb
jp
jg
popf
xchg
and
fisttpl
shrb
imul
hlt
jmp
jge
call
adc
stos
in
pop
insb
mov
sub
lcall
dec
fldl
nop
mov
fs
rolb
das
push
xchg
pop
xor
add
add
push
mov
jl
fbld
xor
pop
mov
daa
pop
inc
scas
popa
mov
jge
jb
out
xor
xchg
mov
and
cmc
pop
fstps
jle
shlb
subb
xchg
inc
jle
repz
repz
dec
mov
ror
arpl
jle
xlat
fldcw
shrb
xchg
cmpsl
push
je
sbb
cmp
repz
push
push
outsb
popf
mov
scas
xor
inc
push
aam
adc
lock
mov
pop
add
stc
dec
lods
mov
jmp
cmpsb
adcl
or
mov
pop
scas
pop
mov
cmp
pop
insw
movsb
xor
es
or
push
xchg
inc
pusha
ror
push
mov
sub
dec
mov
or
movsb
call
vdivpd
lods
lret
sbb
xchg
pop
xor
cmp
bt
or
pusha
call
stc
cmp
pushf
push
jmp
add
neg
pushf
xor
mov
pusha
jmp
jmp
imul
jl
mov
enter
and
jg
and
dec
jb
mov
insl
pop
add
stc
icebp
outsl
xlat
faddp
imul
inc
fdivr
mov
es
movsl
leave
or
pop
inc
pop
jle
sub
and
repnz
fnstcw
push
decb
and
ss
fnsave
dec
bnd
adc
or
add
data16
xor
lock
mov
jp
mov
ja
pop
addr16
int
push
xchg
mov
xchg
pop
xor
xchg
stc
push
icebp
test
outsb
paddd
sub
jle
ljmp
les
and
test
cmp
mov
incb
jl
add
push
addr16
inc
outsl
dec
std
dec
sahf
xor
or
les
in
adc
cmpsl
shlb
pop
push
adc
arpl
hlt
dec
add
or
test
out
ds
pusha
mov
dec
insb
jb
adcl
dec
mov
xchg
sbb
mov
xchg
pop
into
ja
pop
pusha
rorl
imul
insb
repnz
gs
insb
subl
xchg
mov
leave
rclb
xor
lock
xor
mov
iret
in
push
xchg
pop
xor
mov
mov
test
femms
orl
cmp
sbb
fwait
into
sub
dec
mov
jns
pop
mov
jl
xor
faddl
call
inc
je
test
data16
testb
enter
adc
push
xor
xchg
pop
xor
push
add
mov
mov
pusha
inc
add
sar
and
mov
mov
bt
bswap
ror
add
xor
call
cmp
movb
cmpb
push
lea
jne
bt
ror
sub
xor
test
ror
mov
and
xor
add
inc
bt
sub
mov
pusha
cmp
cmc
test
push
lea
je
je
cmc
call
idivb
xor
mov
and
mov
mov
repz
jno
pusha
or
lods
mov
popf
fistpll
mov
sub
popa
subb
cmpsb
jmp
mov
pushf
push
pusha
pushl
ret
or
jo
ljmp
lahf
or
jecxz
arpl
rcll
xchg
jae
mov
int3
or
inc
shr
test
adc
aas
push
imul
push
test
cs
das
jmp
jmp
mov
js
mov
mov
inc
movsl
or
into
lds
ficoml
xor
sub
iret
xchg
xchg
icebp
aaa
jbe
xor
xorb
lods
or
pushf
in
mov
sbb
dec
movsb
ret
aaa
shll
je
sub
movsb
pop
mov
test
xor
cmp
pop
addb
pop
repz
mov
push
xor
or
jb
pop
ljmp
shlb
imul
cmp
popl
test
mov
pushfw
sbb
lods
pop
mov
daa
pop
or
push
adc
xchg
dec
mov
mov
jae
sbb
push
xchg
mov
lock
jecxz
es
mov
jo
dec
push
inc
adcb
push
leave
and
sub
cmp
out
xchg
sub
cmpsl
sbb
fistl
adc
movb
movb
pushl
ret
cmp
jmp
mov
into
stos
cmpsl
imul
scas
std
bound
fmul
fiadds
mov
fistl
sbb
jo
push
lds
push
leave
push
scas
jge
out
dec
add
xchg
and
dec
notb
mov
xchg
test
xor
xchg
pop
add
lea
call
xchg
mov
and
push
fs
push
lahf
cmpsb
or
into
popa
loopne
push
lret
outsl
sbb
sub
xor
movsb
and
mov
xor
mov
lret
xor
pop
mov
inc
xchg
imul
push
iret
inc
adc
xor
pop
push
ja
mov
adc
cld
sbbb
rorl
mov
lahf
push
pop
shlb
sub
je
cmp
jne
xor
and
aad
mov
cmc
aas
movsl
test
das
insl
aas
mov
cmp
aas
nop
jmp
jmp
xchg
lahf
fldcw
xor
xchg
inc
aam
mov
sbb
push
outsb
or
sarl
int
in
sbbb
lock
jbe
dec
mov
outsl
jecxz
into
pop
sbb
jmp
xchg
mov
inc
xchg
push
leave
test
shll
arpl
cmp
pop
and
pop
push
nop
xor
dec
inc
cld
inc
xor
and
push
out
adc
lahf
dec
loopne
mov
or
sbb
in
mov
addr16
push
dec
inc
mov
gs
jmp
and
inc
stc
sbb
and
adc
and
test
mov
lahf
xor
in
orb
mov
jmp
repnz
adc
addr16
shll
ja
lret
imul
inc
push
mov
and
xchg
xor
dec
es
mov
pop
xchg
pop
mov
daa
in
jmp
ret
cmp
xchg
pop
cmp
and
adc
mov
jp
ficoml
mov
add
mov
adc
pop
xorl
lcall
sub
add
popf
push
ja
test
sub
pusha
iret
cld
jnp
sbb
xchg
pop
cmp
test
inc
and
test
fcomps
hlt
out
add
lea
jae
pusha
lea
jmp
imul
jmp
pushf
pusha
movl
pusha
call
mov
flds
jge
mov
fiadds
mov
adc
test
jg
cmp
mov
mov
and
dec
mov
jo
out
inc
out
jns
pop
push
add
and
sbb
sbb
subl
mov
push
xor
ja
jo
pop
xor
movsb
shr
bound
mov
fisttps
pop
cmp
xor
jp
cmc
mov
or
movl
pushf
lea
je
bts
add
shl
bts
sub
and
bswap
bsf
shr
bt
jmp
lret
fcomp
adc
jb
mov
push
mov
fs
mov
inc
addl
sbb
cli
loop
mov
sahf
out
mov
sti
clc
sbb
add
outsl
mov
pop
push
add
loop
fcomps
inc
sub
adc
repz
inc
xchg
pop
pop
xchg
add
mov
xchg
lods
mov
int3
xchg
inc
mov
inc
scas
xor
mov
stc
push
outsb
iret
hlt
jne
adc
xchg
pop
cmp
ss
cld
adcl
test
jle
cmpsb
cld
test
test
dec
test
ljmp
mov
lcall
idiv
arpl
and
xchg
pop
cmp
dec
jmp
pusha
call
test
push
jp
xor
pop
add
sahf
xlat
fsubrp
jbe
and
int
pop
push
add
dec
lahf
add
jae
mov
aas
mov
push
idiv
add
test
xor
inc
loop
jns
mov
icebp
jo
adc
stc
lret
adc
jno
or
and
add
mov
loopne
xchg
add
lea
call
cmc
cmp
jmp
popa
fadds
jmp
push
pop
outsl
xlat
aam
movsl
push
dec
and
mov
push
in
test
mov
sub
jne
inc
mov
stos
mov
sub
stos
test
jae
bound
or
dec
or
or
adcb
stos
dec
mov
les
and
movb
hlt
scas
inc
cmp
push
pop
jge
andb
mov
je
push
and
mov
mov
dec
fsubs
mov
xchg
es
inc
push
inc
lcall
sub
xchg
xchg
mov
add
push
movsl
or
movsb
ficoms
cmp
xlat
cmp
repz
push
jnp
push
adc
mov
pop
sub
mov
loope
add
jns
in
jne
cmp
cmc
lea
pop
sbb
mov
sub
cmp
fstpl
pop
xor
push
ds
adc
cli
shrl
pop
stos
push
out
mov
and
adc
mov
mov
fsubs
push
loop
fildl
jecxz
fcompl
in
iret
push
movsl
cmp
loope
add
data16
pusha
movsb
imul
daa
lahf
xchg
cmp
daa
cmp
fmuls
lods
pop
outsl
push
push
fdivs
in
lret
daa
int3
fisubl
cmp
scas
decl
out
outsb
test
dec
cmp
stos
dec
jmp
push
scas
fsubrp
pop
std
es
dec
aaa
enter
cmc
fistpl
pusha
stos
in
test
fldcw
loopne
nop
mov
pop
cs
jmp
sub
stos
push
and
pop
movsl
push
xchg
lods
popa
push
sbb
xchg
shrb
xor
mov
aam
and
pop
aas
test
sub
shll
arpl
cmp
lods
jl
fimull
sub
dec
cmp
sbb
or
cmp
sub
fcmovnbe
cmpsl
xchg
repz
push
xor
lock
mov
sbb
mov
stos
or
or
cmp
dec
pop
adc
cld
int3
jns
sub
test
jmp
lret
gs
mov
push
leave
int3
jns
cwtl
stos
sub
lret
pop
cwtl
jmp
dec
push
cwtl
aam
jmp
mov
lcall
sbb
pop
fmuls
in
or
lods
hlt
movsb
push
sahf
out
movsb
outsb
jmp
and
shrb
cltd
dec
fadds
sub
aaa
fsubs
sub
jmp
pop
sub
ljmp
ret
xlat
into
fldt
cmp
in
subl
push
out
push
pop
scas
pop
ret
and
mov
insb
fs
sub
mov
jecxz
sub
inc
fldenv
pop
mov
fsubr
in
pop
out
lods
scas
shr
test
fldenv
pop
movsl
pop
add
fistpl
fldcw
fsubrs
mov
test
sub
mov
movsb
pop
jmp
sub
push
scas
leave
out
ljmp
jecxz
movsw
mov
lods
ljmp
lods
lret
call
scas
movsb
pop
mov
das
push
insl
movsl
sub
in
js
jmp
xor
scas
or
popa
mov
pop
sub
pushf
sub
sub
lods
pop
mov
sub
call
sbb
push
in
dec
xor
inc
dec
jmp
in
imul
lods
imul
scas
fildll
imul
sbb
sub
sub
scas
stos
pop
imul
test
cmc
sarl
into
mov
daa
lods
iret
push
pusha
inc
aam
cs
sbb
in
stos
fistl
add
pop
into
add
mov
out
call
jnp
outsb
ret
sub
adc
push
cmpsl
mov
sti
stos
dec
loopne
sub
mulb
das
mov
scas
mov
cmp
lods
lods
dec
lret
in
and
lods
fbld
loop
push
fldt
pusha
insb
fisubrl
in
fldenv
test
mov
and
in
fldenv
stos
and
pop
push
push
fldcw
pop
sub
push
popa
leave
bound
and
sub
cltd
shlb
pop
cwtd
aad
enter
dec
clc
call
in
pop
jmp
mov
in
and
shrb
stos
jp
out
bound
adc
insl
pop
sub
shl
sub
imul
fldenv
call
stc
insl
lret
shrl
das
fldz
mov
push
inc
sub
pop
fs
out
sbb
pop
out
pop
pusha
ljmp
out
or
pop
in
leave
insl
ljmp
fldcw
lret
and
aaa
ret
push
pop
jecxz
out
stos
fsubrl
mov
push
loop
jmp
pop
mov
int3
ficompl
dec
pop
sub
stos
pop
in
pop
frstor
sub
push
loop
pop
out
push
pop
and
leave
cmpsb
lret
call
in
and
fsubrl
jnp
imul
sub
cmp
arpl
iret
outsb
and
xor
out
sub
in
sub
cld
fldt
es
lret
in
and
push
insl
lcall
dec
push
push
imul
ljmp
push
lret
mov
stos
jno
stos
lret
fldt
in
mov
enter
stc
cmp
push
inc
and
movsb
dec
aad
test
add
dec
scas
push
frstor
stos
popa
iret
js
cli
sub
jmp
cli
and
push
sbb
enter
pop
cmp
cmpsl
inc
std
test
fisubrl
call
scas
stos
fldenv
fcomps
imul
imul
test
jecxz
mov
call
out
iret
or
cli
insl
lcall
arpl
pop
cmp
arpl
subb
fidivrl
sub
stos
out
in
sub
mov
sub
xlat
and
enter
cld
jmp
stos
ljmp
pop
loop
jae
cltd
add
stos
fldt
call
sub
call
imul
in
lods
cwtl
cmpb
fcmove
stos
into
ljmp
scas
stos
add
outsl
jno
mov
sub
sub
jns
lret
std
mov
pop
cs
nop
and
fidivl
ljmp
sarl
lret
mov
icebp
ljmp
imul
mov
sub
push
sti
leave
mov
jl
in
pusha
in
fnop
lret
and
or
test
into
out
jp
stos
gs
addr16
gs
cltd
push
push
aad
cmpsl
sub
das
int
sub
call
outsl
nop
ss
add
fs
ss
xchg
out
jno
push
or
cltd
imul
aaa
out
cmp
in
push
sbb
int3
jp
ljmp
out
pop
jecxz
cmp
int
sub
mov
out
data16
sub
es
loopne
cld
in
scas
xchg
sub
pusha
mov
dec
dec
insl
mov
xchg
mov
or
jp
and
imul
xor
popa
cmp
gs
mov
and
add
or
jnp
cmpsb
jmp
and
movsb
out
gs
xchg
imul
cmp
insl
fisubrl
ljmp
test
or
nop
jmp
sub
fcoml
in
push
nop
test
cld
pop
and
sub
int3
int3
movsb
mov
and
loope,pn
int3
and
fisubl
in
pop
inc
inc
scas
out
adc
and
cmp
pop
ljmp
sbb
mov
push
rsm
test
hlt
cs
in
enter
and
loopne
mov
push
in
mov
pop
fucomip
in
sub
fldt
test
lods
push
loope
stos
and
imul
test
fwait
insl
in
outsl
std
out
imul
rcr
xor
lahf
outsb
sahf
fldt
rolb
int3
dec
js
in
and
jge
rorb
out
imul
or
cmp
mov
mov
popf
mov
lods
mov
fisubs
out
cmp
cs
aam
aam
cmp
out
or
js
cs
fildll
iret
lods
decl
dec
mov
mov
out
imul
or
inc
cmp
aam
sbb
call
sahf
pop
iret
push
subb
sub
lcall
and
cmp
out
pop
in
adc
and
js
cwtl
out
enter
pop
outsl
lods
mov
and
aas
jl
and
lock
clc
enter
out
mov
mov
loope
das
sub
stos
aad
or
pusha
out
cld
cs
fiadds
pop
nop
test
out
mov
inc
hlt
test
ficomps
push
pushf
scas
std
sbb
pop
pop
in
shr
ret
mov
lods
repnz
scas
iret
push
sub
cmc
jae
jo
xor
sub
jecxz
ljmp
fldcw
cmp
pop
mov
enter
push
sbb
mov
fdivrp
mov
out
stos
loope
and
leave
cld
outsb
ds
dec
lods
fisubrs
inc
xchg
in
add
cmp
fisubrs
sub
xchg
inc
or
mov
sub
ret
cli
push
in
sbb
loopne
add
iret
das
jmp
mov
sub
ds
xchg
shrl
or
loop
sti
pop
push
and
fildll
mov
jg
add
or
lret
mov
pusha
dec
in
pop
cmp
push
xchg
stos
rorb
stos
leave
pushf
push
insl
sahf
aam
sbbl
pop
subb
pushf
mov
scas
mov
sahf
cmp
dec
enter
pushf
imul
mov
pop
jecxz
std
mov
or
popa
pop
lahf
cltd
push
dec
insb
movsl
adc
pop
xchg
call
pop
leave
imul
mov
decb
std
mov
inc
imul
int3
mov
insb
pop
loope
adc
fsubs
cli
sbb
inc
and
ljmp
jge
sub
fcomps
adc
mov
xor
mov
cs
leave
sub
insl
add
int3
and
ficomps
enter
push
and
lret
aad
jecxz
ret
sbb
inc
mov
jl
in
jae
jp
shrl
mov
loop
pop
dec
jns
jae
mov
je
prefetch
adc
mov
stos
fsubrl
enter
jge
push
daa
or
xchg
add
or
sub
insl
ret
fdivrs
xor
enter
pop
test
xor
cmpsl
cld
dec
pop
insl
mov
stos
sub
ud0
xchg
pop
out
sub
outsb
add
aad
insl
sub
dec
stos
js
cmp
fnstsw
je
loopne
jmp
loope
fisubl
mov
imul
addr16
mov
cltd
mov
dec
mov
xor
imul
jnp
or
cmp
std
imul
push
or
sahf
jg
push
imul
pop
sub
adc
fidivl
and
movb
push
sahf
outsb
fcmovnb
rcrb
imul
cs
push
jmp
jmp
test
pop
sti
sbb
mov
jnp
push
sarl
lret
out
imul
sub
fwait
sub
xor
iret
sub
out
pop
iret
mov
enter
shll
or
fisubl
shrb
and
dec
dec
imul
pop
sti
and
lahf
ljmp
fsub
cmpsl
mov
iret
stos
movsb
pop
imul
lret
insb
sub
in
leave
lods
ljmp
scas
in
outsb
cs
out
stc
scas
lock
sub
mov
outsl
arpl
call
outsb
imul
test
dec
jb
mov
dec
xchg
je
cs
fisttpl
mov
sub
jmp
push
in
mov
ror
lods
jmp
sahf
adc
lcall
leave
or
sub
xchg
push
cli
loopne
add
in
dec
mov
add
sbb
aaa
push
into
stos
mov
std
xor
nop
into
mov
add
push
xchg
mov
test
sbb
lea
inc
loope
mov
mov
loopne
mov
cmp
adc
insb
or
xchg
fstl
aad
in
test
jno
cmpsb
mov
scas
mov
and
int
pop
enter
fadds
lods
andb
sub
out
and
test
push
fnsave
imul
dec
dec
mov
int
scas
cmpsb
outsb
fidivrl
fisubrs
outsb
mov
cs
out
out
cwtl
cs
imul
in
cmp
in
or
sub
inc
pop
jle
std
stos
aad
sbb
push
add
sbb
out
or
scas
dec
popa
stos
test
pop
xlat
xor
push
push
push
add
out
fisubs
pop
jmp
mov
in
pusha
mov
push
flds
sub
mov
in
push
cmp
into
mov
push
leave
dec
and
xchg
fwait
mov
lods
sub
daa
add
mov
lahf
js
pop
cwtl
lea
call
inc
leave
inc
leave
and
orl
pop
mov
lods
in
shrl
and
jmp
jmp
push
jge
pop
cmpsl
insl
sbb
inc
insb
dec
call
push
or
push
sub
cvttps2pi
out
jle
mov
mov
scas
xor
mov
jle
dec
scas
lret
call
shrl
aas
cmp
lahf
arpl
ss
std
xchg
dec
push
loop
sub
and
mov
call
out
je
xchg
sub
out
jmp
inc
and
mov
loop
xchg
loope
loope
cmp
cmp
inc
mov
and
adc
fstpt
loopne
enter
cli
sti
xchg
jmp
cmc
sahf
mov
test
pusha
ror
or
sub
mov
ja,pn
dec
inc
sbb
push
push
stos
bound
xor
lahf
mov
dec
dec
nop
pop
and
push
test
mov
xchg
pop
insl
mov
insb
jmp
push
std
scas
lods
dec
inc
in
lods
sub
daa
xchg
das
fldcw
inc
pop
test
push
iret
cs
push
mov
dec
in
inc
and
in
in
loopne
or
mov
sub
loop
shlb
mov
or
inc
and
int3
aad
cmpsl
lods
inc
inc
lods
jecxz
loop
sbb
loopne
mov
insb
jle
mov
iret
test
add
xor
adc
or
gs
shll
or
jmp
in
rorb
leave
insl
insb
xchg
loopne
push
push
fwait
jmp
movsb
lods
push
mov
lret
and
enter
dec
pop
leavew
xor
and
sub
xchg
frstor
or
pop
iret
and
das
lods
sub
xchg
dec
jle
gs
lock
test
mov
pop
cmp
iret
cs
cs
in
cmp
xchg
mov
push
cmp
fwait
mov
fstps
cmpsl
ljmp
add
pop
outsb
fs
or
pop
sub
shrb
jmp
add
add
loopne
ret
ret
xadd
push
into
lods
and
or
jnp
sub
fwait
stos
pop
bound
imul
loope
pop
loopne
push
and
cs
or
out
test
fsubrl
and
ss
in
outsb
loop
lods
sub
flds
aam
outsl
movsb
loop
insb
adc
out
shlb
sub
mov
dec
inc
cmp
loop
in
das
ja
and
jno
ljmp
adc
ret
sub
test
add
mov
loopne
pop
sub
hlt
cmp
fldt
xor
mov
dec
cmp
fsubrs
jo
and
adc
push
mov
call
mov
ret
test
loopne
insl
jmp
dec
fstps
mov
pusha
lret
enter
sbb
lcall
clc
cmpsb
cs
andps
sub
push
in
test
xchg
inc
in
popa
popa
sarl
fs
scas
pop
and
into
lret
lods
sub
xor
push
int
mov
in
jg
test
bound
insl
or
push
scas
loop
and
sbb
cs
out
dec
lcall
rcrb
and
inc
sub
daa
stos
mov
mov
pop
mov
cmp
mov
xor
sahf
sbb
sub
push
or
leave
in
add
mov
sub
ljmp
lea
aaa
xchg
loopne
dec
adc
push
out
adc
jnp
test
xchg
je
cwtl
jge
cwtl
sbb
cmc
or
cli
or
test
leave
negl
jns
das
aad
sub
arpl
mov
pop
sub
mov
mov
inc
add
adc
inc
fisttpll
call
stos
mov
push
int3
dec
lods
in
fsubrs
jge
bound
lock
insb
shl
mov
imul
and
xor
movsl
sbb
jmp
jmp
pop
pop
ljmp
mov
sub
pop
pop
in
adc
idivb
mov
ljmp
scas
inc
and
push
popa
sub
ljmp
idivl
sub
ljmp
sub
in
sar
push
mov
stos
test
andl
and
add
mov
push
movsb
mov
mov
test
jo
mov
stos
jns
pop
stos
test
aam
sub
xchg
sub
fs
test
call
fsubrl
popa
and
insb
in
frstor
mov
in
in
in
and
or
and
pop
mov
popa
idivl
out
popf
and
popf
cmpsb
and
test
div
outsl
pop
inc
pop
out
push
xlat
fs
movsb
dec
pop
and
shrb
cltd
mov
imul
cmpsb
push
fbld
sub
scas
lret
jne
rcrl
movsl
push
and
daa
and
push
push
pusha
and
jecxz
pop
scas
push
in
fwait
sub
pop
jmp
stos
leave
ret
lds
incb
ljmp
enter
lret
cli
out
test
jb
test
test
outsl
push
pop
sub
mov
lret
sub
jmp
fsubrl
gs
jmp
sub
sub
sub
mulb
or
lods
iret
add
sti
stos
or
xor
push
in
sub
mov
jno
add
mov
mov
push
add
mov
pop
in
inc
and
push
gs
push
fisubs
sti
sub
inc
pop
stos
inc
leave
xchg
sti
add
shrb
lea
and
sahf
push
test
and
mov
mov
sub
xlat
xlat
stc
movsl
out
jb
xchg
dec
arpl
mov
insb
jns
lods
sub
mov
scas
push
fldt
jmp
and
stos
repnz
stos
test
repz
gs
aad
loopne
and
sub
int
and
cltd
cmpsl
mov
imul
scas
lds
in
and
push
mov
dec
sub
movsb
and
rorb
stos
sub
in
gs
pop
add
test
push
in
out
mov
ret
pop
xchg
xlat
repnz
cwtl
xor
loopne
imul
sbb
mov
cmp
sbb
mov
stc
pop
add
loopne
es
jo
pop
das
or
add
fdivs
sbb
push
std
daa
in
shlb
rolb
inc
in
call
jne
das
ret
jp
pop
sub
ds
outsl
cltd
fnstenv
leave
push
or
dec
push
enter
dec
ret
das
mov
ljmp
js,pn
pop
repnz
dec
fstps
xchg
call
cwtl
sub
ss
int3
call
jmp
inc
cwtl
wbinvd
jo
mov
das
sbb
fstps
std
decl
sbb
xchg
leave
mov
das
jo
mov
and
stc
nop
jg
nop
fsts
add
leave
js
imul
rcl
repnz
aas
movsl
mov
cs
sbb
jg
dec
lock
sub
dec
xchg
test
add
enter
loopne
fsts
and
cmp
stos
mov
cwtl
push
jle
mov
imul
mov
adc
or
sub
cwtl
pushf
stc
or
xor
cmpsl
cs
cmp
cmp
or
rclb
jo
nop
out
call
insl
scas
test
scas
out
and
mov
push
inc
movsl
push
mulb
pop
sub
addb
jno
loop
mov
pushf
add
cmpsb
mov
icebp
pop
lock
call
mov
cltd
add
jnp
and
jo
xchg
sbb
loopne
pop
ds
inc
adc
popa
loop
pusha
sbb
sub
adc
leave
clc
or
mov
enter
mov
loop
nop
jo
cmpsl
icebp
test
push
repnz
sar
mov
loopne
ficoms
outsl
mov
jno
mov
enter
and
das
pop
xor
lahf
fscale
or
in
and
flds
mov
adc
stc
mov
cmpsb
push
sub
shrb
pop
aam
adc
ficoml
mov
cltd
pushf
call
in
jp
and
lcall
gs
pushf
icebp
call
out
loope
adc
pop
jp
xor
dec
inc
test
lret
call
fdiv
cmp
pop
sti
dec
ret
pop
fmull
int3
pop
add
lahf
fwait
cmp
xor
fimull
push
or
fistps
mov
or
sbb
dec
pop
rcrb
rcl
push
xchg
or
xor
mov
or
push
call
cs
sarb
movsb
das
shlb
call
cmp
imul
ja
dec
push
mov
and
xchg
test
sbbb
movb
cltd
icebp
fwait
in
dec
or
xchg
cli
aam
sbb
pushf
call
cmp
add
aam
fnstenv
push
adc
and
mov
sbb
and
xor
sbb
jmp
leave
js
mov
and
push
leave
mov
mov
fsubrs
mov
jo
pop
dec
data16
mov
stc
push
inc
ficoml
insb
sub
repnz
fsubl
lods
pop
fdivrl
xchg
aad
jp
imul
mov
dec
mov
xchg
xchg
mov
xchg
mov
cli
pop
pop
cltd
cmp
leave
add
fnstenvs
or
cwtl
pop
push
push
mov
subb
jo
pop
mov
leave
xorb
in
xor
mov
fisubrl
ror
mov
xlat
imul
jo
pop
jmp
mov
cmp
push
or
insl
clc
dec
and
or
pop
call
dec
and
pop
fisttpll
stos
mov
inc
jo
and
mov
and
and
push
fst
sub
mov
sbb
adc
pop
mov
enter
cmp
jo
dec
or
orl
gs
jno
mov
mov
arpl
add
outsl
bound
pop
adc
cmpsl
jb
addr16
add
nop
shll
aas
xor
xchg
cmp
rcl
dec
jg
pop
addr16
xchg
mov
fsubrs
or
bound
sub
call
lds
mov
pop
in
stos
mov
pop
inc
leave
pop
or
mov
xchg
inc
pop
cmpsl
sbb
or
call
lahf
mov
psubd
pop
call
popa
daa
mov
jno
lret
pop
mov
call
clc
lahf
mov
pop
jnp
pop
cwtl
into
dec
jo
pop
or
cmpsl
sbb
je
test
xchg
sub
push
cs
test
jmp
mov
ret
gs
pop
gs
cli
jnp
addr16
xchg
pop
shll
add
fucom
push
mov
leave
dec
pop
les
lahf
mov
pop
imul
loopne
movsl
add
push
mov
test
mov
pop
pop
in
and
repnz
jge
dec
and
out
mov
lods
jae
mov
jnp
insl
mov
jg
cmp
icebp
mov
and
and
stc
and
jp
jg
fisubl
xor
insl
or
daa
mov
pop
add
and
cld
loope
xor
aas
mov
sti
out
jo
xor
sub
or
sbb
fld1
lret
bound
jp
adc
pop
sub
dec
mov
inc
aaa
sbb
pop
loop
xchg
adc
insl
stos
push
sbb
push
add
int
xor
xor
lods
nop
mov
mov
pop
cltd
or
lcall
cwtl
push
frstor
push
push
cwtl
nop
xchg
xchg
cs
push
inc
mov
lds
jmp
jp
cmp
pop
das
add
push
add
sub
out
icebp
dec
test
push
xor
sbb
add
add
jo
rclb
or
mov
mov
insl
leave
loopew
mov
jnp
adc
mov
push
dec
xlat
jne
jmp
pop
lods
fisttpl
and
jl
push
ljmp
inc
mov
filds
adc
cmp
icebp
and
dec
insl
add
push
jo
jns
ret
loopne
popf
fiaddl
add
icebp
imul
fistl
pop
mov
push
mov
xlat
push
push
clc
sbb
cld
lcall
hlt
dec
push
pop
dec
lds
mov
loope
stc
jo
jne
les
mov
stos
jbe
adc
movsl
call
shrb
inc
sub
test
jmp
mov
insl
or
sub
mov
xor
lret
push
mov
daa
shlb
rorl
jl
inc
test
nop
icebp
call
push
addr16
int
push
xchg
cmpsb
jle
ljmp
sbb
jge
and
mov
int
pop
jnp
jnp
cltd
cltd
sbb
or
add
gs
inc
dec
fs
out
xchg
mov
mov
mov
int3
mov
cmp
lret
dec
push
cli
icebp
js
mov
js
lea
mov
xchg
mov
or
inc
jmp
bound
adc
pushf
sub
icebp
loopne
arpl
mov
iret
push
test
adc
add
sub
ja
stc
lea
rcrb
aaa
insl
lcall
push
dec
adc
mov
adc
movsb
jp
loop
test
loop
jg
bnd
pop
cmpsl
cmp
lret
dec
cwtl
rorb
xchg
sbb
ja
scas
xchg
or
lea
sub
mov
sbb
and
mov
aas
fsub
pop
andb
jnp
push
jmp
mov
push
pop
push
jbe
lds
xor
mov
in
push
mov
shlb
jg
movsb
das
in
pop
test
loopne
jnp
mov
popf
mov
rorl
cltd
call
and
xchg
arpl
lods
leave
je
xor
test
xor
pop
mov
fisttps
test
ja
dec
mull
movsl
jb
cmp
test
jo
ret
rcrl
cmp
clc
sbb
add
std
daa
adc
mov
push
or
leave
jno
jecxz
mov
jns
out
hlt
push
cmc
out
lea
aas
data16
add
aam
pop
pop
xlat
test
push
or
push
hlt
mov
dec
fstpl
and
adc
repnz
call
lret
cld
mov
pop
jge
sub
mov
cwtl
cmp
stos
mov
fmull
adcl
jo
nopl
cmp
xorb
jmp
and
sbb
sbb
mov
pop
loope
in
mov
nop
add
repnz
insl
jnp
push
mov
jecxz
das
test
add
add
rcrb
add
test
imul
add
inc
nop
adc
push
fcompl
in
jl
cli
nop
mov
sbb
pop
rorb
std
push
jl
or
dec
daa
fwait
and
xor
cmp
xor
add
push
lea
mov
or
mov
fstpl
inc
cwtl
mov
adcb
or
dec
sbb
mov
and
stc
shll
test
fisubl
jecxz
in
and
jp
cmc
lods
adc
pushf
outsb
cmpl
arpl
jl
out
mov
dec
test
rclb
bound
push
pop
pop
jp
mov
pop
stc
add
xlat
subb
lcall
mov
call
adc
inc
ds
test
sub
pop
dec
loopne
push
popa
inc
xor
addr16
aas
mov
ds
pusha
imul
sub
dec
sbb
cwtl
xchg
stc
bnd
or
push
mov
mov
sahf
cmp
call
xor
das
push
and
jo
mov
lods
mov
sub
or
push
or
mov
aas
adc
push
mov
push
inc
in
jo
or
aas
xor
icebp
stc
cmp
mov
push
sub
dec
push
sbb
jo
mov
xor
repnz
cli
das
pop
shrb
cmp
lds
sarl
in
nop
aas
call
mov
push
fidivl
mov
or
mov
mov
and
jp
shl
hlt
outsl
hlt
xor
mov
xor
das
or
sub
pop
aam
jns
mov
fadds
imul
and
in
mov
enter
and
inc
test
sub
aas
xor
mov
int
sub
mov
cmp
fdivrs
stos
loopne
clc
addr16
and
call
stos
pop
testb
es
mov
fbld
ljmp
fcomp
and
push
mov
hlt
push
pop
mov
bound
cltd
int
fcmovne
and
jno
jmp
cltd
into
loop,pn
lock
cmp
sbb
call
pop
mov
loope
movsb
fisubl
and
sarb
xchg
push
lret
and
clc
and
or
pop
aas
pop
fadd
push
xor
or
leave
sub
xchg
xor
lret
jae
in
cmpsl
mov
test
sub
addr16
daa
inc
sub
out
jmp
out
fisttpll
loop
mov
pop
bound
mov
aas
pop
movb
jae
inc
cmpsl
xorl
outsl
test
mov
imul
jmp
add
in
ds
sub
inc
roll
cmp
cmpb
sbb
mov
fidivrs
or
fbstp
lret
xor
fistpl
pop
fisttps
sarl
mov
sub
addr16
and
dec
and
cli
test
shlb
das
cmp
cmp
movsb
aam
mov
inc
cmp
sub
das
imul
sub
popa
cmp
inc
xlat
sub
cmpsl
push
cmp
inc
sub
mov
bound
push
sub
stos
clc
sub
roll
sub
sub
les
cmp
xor
add
sub
xor
cmp
cmp
sbb
call
jg
push
aas
lret
testl
fisubrl
addr16
sub
cmp
gs
or
xor
inc
nop
js
inc
cs
fidivrl
call
cmpl
test
and
arpl
cmp
je
pop
mov
cmpb
jnp
ret
sbb
das
sbb
adc
cmp
leave
add
lock
push
int
or
sahf
inc
sbb
add
jl,pn
push
and
cmp
and
aas
xor
xlat
and
notl
nopl
sub
call
adc
insb
mov
stos
mov
mov
test
out
cwtl
mulb
mov
test
or
repnz
movsl
pop
aad
push
imul
xchg
imul
fistpll
add
sbb
cmp
stos
stos
fnstenv
push
add
imul
js
stos
cmp
dec
div
mov
sub
popa
das
clc
sub
mov
scas
push
jecxz
dec
addr16
mov
jl
arpl
outsb
shrb
jns
in
rclb
sub
dec
loope
mov
adc
push
lret
enter
xchg
pop
mov
repz
mov
lods
add
lret
push
movsl
mov
cmc
pop
test
pop
lds
inc
jns
push
stos
sub
inc
movsl
gs
mov
stos
fwait
add
fisttps
lock
test
mulb
stos
mov
stos
lods
mov
pop
ds
cltd
out
cmc
fldt
fucomip
scas
jne
and
jnp
fsts
push
xchg
fldenv
in
arpl
mov
popa
test
sub
out
stos
fistpll
fistps
test
shrl
adc
or
pop
and
mov
mov
fldt
fdiv
pop
pop
movsl
jmp
cmp
call
cmp
pop
pop
jmp
shr
lret
push
in
aad
fstl
leave
ret
mov
ja
dec
push
jmp
test
cmp
cmp
jp
mov
push
out
insb
jmp
subb
enter
sahf
outsl
pop
stos
jmp
stc
test
jb
dec
mov
call
jns
xchg
imul
call
stos
int
jmp
mov
es
stos
mov
out
push
stos
sub
call
subb
adc
mov
loop
movsl
xchg
xchg
ljmp
popf
bound
inc
push
in
loop
leave
xchg
pop
and
sub
in
add
xor
insl
loop
mov
pop
jmp
mov
xor
mulb
mov
ffreep
cs
ffreep
sahf
xchg
adc
jmp
xlat
and
and
pop
shrl
stc
in
outsb
dec
out
sub
cmc
pop
lds
insl
mov
test
loopne
fisttps
call
dec
cwtl
push
mov
dec
mov
lods
dec
lea
or
cmc
das
out
sahf
mov
sub
or
cmp
mov
mov
leave
int3
dec
jge
lds
les
jmp
fisubrl
dec
cmp
jmp
pushf
cmp
adc
push
cmp
xchg
sbb
cmp
pop
shrd
fldcw
add
mov
mov
pushf
mov
movsl
pop
or
lret
inc
dec
pop
sub
leave
fsubrl
sbb
jmp
fwait
mov
dec
sbb
stc
sbb
mov
popf
jl
nop
arpl
lret
sarl
add
mov
pusha
push
insl
sbb
scas
pop
cmpsl
rcrl
fdivr
lret
lcall
jge
push
cmp
stos
fimull
dec
je
scas
inc
lods
dec
das
jns
dec
sub
adc
stc
jmp
lret
mov
std
jle
pop
clc
mov
cmp
stos
xor
shl
xorb
cmp
pop
and
imul
mull
fstpt
lods
cmp
xor
cmpsl
or
mov
xchg
lock
jnp
cld
and
mov
adc
and
pop
add
jo
cmp
mov
xlat
out
or
sbb
pop
mov
popa
mov
inc
sub
test
iret
imul
loope
icebp
in
insl
push
or
in
pusha
or
sub
repz
pusha
leave
cmc
in
sbb
jmp
test
jmp
pop
inc
insl
inc
jmp
push
cli
add
jno
fsubrl
fld
push
aad
push
lcall
roll
mov
inc
xchg
loopne
dec
hlt
ss
or
insl
cmpsb
fadds
in
ds
iret
xor
inc
insl
mov
movsb
out
mov
or
insl
scas
push
insl
push
mov
fldcw
add
test
insb
outsb
pop
add
aaa
subb
mov
cmp
and
fyl2xp1
insb
lods
jmp
out
outsb
daa
insl
scas
out
lods
and
mov
pop
or
loope
in
inc
sub
sahf
fxch
out
leave
push
loopne
insl
loope
add
std
cltd
outsb
jp
in
test
sub
fadds
mov
movsb
or
push
and
call
icebp
outsl
loope
outsb
movsb
test
outsb
push
cmp
in
call
ss
mov
xchg
and
imul
pop
pop
out
loope
test
stos
pop
rep
push
in
call
jmp
std
fisubrs
scas
and
in
cmpb
sub
leave
loope
outsb
push
stc
or
mov
jmp
pop
sbb
and
popa
imul
inc
or
cmp
sub
call
push
add
js
in
call
inc
jmp
push
pop
lret
clc
enter
pop
and
dec
jns
pop
fildll
xchg
sahf
jbe
into
js
jge
rorb
inc
sbbl
jle
mov
push
xchg
add
andb
call
jnp
rdpmc
sub
in
ja
sub
xor
mov
push
aas
fdivs
push
pop
jno
repnz
mov
pop
aaa
imul
push
cmc
ss
lcall
jne
std
mov
fisttps
fucomip
mov
xchg
mov
lods
out
fistpll
fcomp
outsb
cmp
lret
sub
jbe
xchg
cmp
sub
pop
xchg
dec
jecxz
loopne
enter
js
jecxz
cmpsl
pop
lret
xor
fwait
mov
pop
in
and
jecxz
loope
mov
imul
xor
and
clc
repnz
add
jmp
mov
loop
int
mov
mov
pop
or
and
enter
jne
and
and
mov
das
pop
fisubs
in
insl
cmp
inc
add
ljmp
xchg
add
loope
or
xchg
out
sub
fldt
fcomps
sub
call
jecxz
and
push
lea
lret
xor
inc
or
jae
imul
cmp
adc
imul
mov
inc
popf
push
in
mov
and
and
or
jne
and
push
mov
in
cld
call
int
xor
insl
fsubs
lcall
shlb
test
loope
call
adc
and
push
fmul
mov
fistpll
push
test
clc
inc
mov
es
fistps
aad
cmpsl
out
xchg
lods
js
aam
lret
mov
lods
lods
pop
mulb
xchg
mov
loopne
add
icebp
mov
out
xchg
xor
std
idiv
and
mov
sub
arpl
mov
push
lea
and
icebp
dec
es
push
mov
xchg
or
push
in
scas
pop
cmpsb
out
lahf
inc
and
lods
mov
movb
arpl
sub
push
clc
cmpsl
xchg
fldt
pusha
or
mov
aad
sbb
mov
cmp
pusha
inc
mov
push
jmp
call
jnp
jle
les
in
in
mov
leave
xlat
shrb
es
adc
dec
out
sub
xchg
fbld
fcmovu
adc
insl
stos
mov
stos
leave
mov
je,pn
fwait
pop
test
or
xchg
lds
les
in
stc
repz
imul
inc
add
loopne
fsubrs
jl
pop
call
lret
mov
pop
sub
pop
fsub
pop
imul
loope
sub
push
mov
enter
imul
mov
enter
loope
enter
test
dec
in
mov
jo
daa
adc
clc
adc
movsb
sbb
push
test
in
shll
and
std
shrl
xor
jo
iret
scas
vaddsubpd
xchg
clc
sbb
cmp
sub
and
popa
cmp
sub
push
out
popa
enter
insl
push
imul
fs
sti
in
sbb
xlat
mov
leave
xchg
sub
jne
inc
pop
sub
push
movsl
jle,pt
loopne
clc
lds
ss
xchg
in
loop
and
shrb
mov
in
xor
ljmp
push
scas
popa
stos
dec
scas
arpl
sbb
adc
das
mov
mov
lods
adc
add
and
sbb
jno
imul
and
push
out
inc
and
adc
jne
subl
lea
inc
add
mov
stos
aaa
mov
test
jl
xchg
scas
in
popf
sub
scas
mov
xchg
outsb
and
lds
shrb
ffreep
das
and
aam
mov
pop
adc
inc
or
or
adc
in
loope
mov
ljmp
adc
lods
int
je
stos
aaa
sub
lods
inc
loope
mov
outsb
cmp
sbb
sub
loope
insb
sub
gs
and
push
push
push
clc
jle
insb
call
enter
dec
push
pop
daa
rorl
fs
fs
cmpsl
push
stc
in
sub
mov
cmp
fiadds
mov
sbb
lock
test
adc
in
andl
dec
push
mov
push
sub
push
insl
sbb
add
pusha
data16
shr
mov
add
movsl
aad
xchg
ljmp
aad
inc
sub
into
popf
and
xor
lds
cmc
cli
stos
dec
sbb
push
loopne
mov
cmpsb
addr16
clc
out
lods
stos
mov
pop
xor
imul
mov
cmpsb
mov
loope
fdivrs
call
push
fsubl
fsubrs
es
inc
fs
int
jmp
pop
mov
insb
dec
ljmp
and
call
stos
loope
rol
cmc
jno
iret
js
dec
mov
sbb
fsin
stos
pop
repnz
mov
and
push
sub
fisubrl
loope
push
in
insl
mov
pusha
dec
insl
sbb
loop
subb
cli
outsl
mov
insl
movsb
mov
mov
adc
addr16
or
pop
jl
mov
and
dec
add
outsl
pushf
enter
outsb
dec
jb
jle
pop
lds
sub
call
inc
push
hlt
scas
sub
js
lahf
movsl
and
aad
sbb
sub
dec
mov
xor
cwtl
sub
and
aad
jmp
cmpsl
dec
sub
subb
adc
in
push
mov
pop
or
in
jne
mov
jg
and
movsl
xor
scas
mov
aam
push
push
flds
stos
es
arpl
out
mov
or
xchg
es
aam
xchg
cmp
fadds
call
xor
outsl
out
ljmp
in
push
fidivrs
stc
and
popa
arpl
xchg
xchg
cs
ror
add
test
das
sbb
imul
int
and
mov
cwtl
fildll
out
loop
pinsrw
cli
in
stos
push
jb
and
inc
mov
mov
clc
sbb
xchg
int3
loop
xchg
and
cwtl
test
loope
es
and
cmpsl
and
pop
out
pop
adc
stos
test
sar
jns
cmpsb
roll
lods
loop
cmc
or
loop
inc
lock
addl
aad
rcr
idivl
dec
popa
and
lods
aad
push
aaa
test
xchg
aam
jno
in
dec
fistps
arpl
arpl
xchg
loop
mov
clc
adc
hlt
jecxz
scas
sub
data16
jle
cmp
add
in
jecxz
lods
mov
js
adc
push
jecxz
lods
arpl
arpl
lcall
in
pop
cltd
fsub
fcmovne
mov
xchg
inc
das
dec
aaa
and
in
popa
leave
xchg
nop
sub
call
loop
aad
mov
gs
pop
inc
push
loopw
insb
xchg
in
lret
push
push
addr16
fcoms
lods
lods
leave
inc
sub
lods
cs
nop
jo
dec
das
shll
imul
test
clc
and
movsb
out
xchg
xor
mov
push
xchg
mov
icebp
mov
and
mov
fisubl
jns
scas
lods
sub
mov
rcrl
addr16
icebp
fs
out
mov
jns
inc
enter
dec
in
aam
jae
mov
in
call
bound
fs
sbb
pop
scas
enter
loope
pop
jg
inc
hlt
imul
pusha
xor
cmp
cmpsl
inc
stos
jbe
icebp
xchg
mov
pop
hlt
pushf
je
or
xchg
in
and
push
ds
stc
arpl
test
pusha
shr
loop
rol
daa
push
insl
bound
pop
sub
and
loop
push
fmuls
out
add
leave
and
sub
stos
xchg
out
dec
fcomp
loop
subl
popa
loope
and
aaa
and
jne
sub
insl
sbb
andb
outsl
push
push
movsl
faddl
ljmp
fdivrs
or
and
call
aad
push
pop
sahf
jmp
pop
and
jle
fsubl
call
cmpsb
ficomps
pop
in
pop
sub
cld
push
in
and
sub
and
pop
sub
out
mov
cmp
pop
pop
popa
and
mov
cwtl
dec
lods
mov
js
mov
out
enter
and
mov
ret
imul
pop
push
insb
lods
mov
imul
mov
push
lret
mov
es
sbb
ljmp
and
arpl
mov
push
movsl
enter
adc
and
dec
pop
xchg
test
inc
into
jmp
daa
and
mov
mov
cmp
popa
lock
sub
icebp
adc
sbb
nop
sub
mov
mov
scas
outsl
in
xchg
call
ficomps
lods
sub
iret
push
jmp
fnstsw
scas
imul
loop
xor
stos
pop
pop
imul
test
loop
lret
and
test
cmpb
es
mov
adc
test
sti
sbb
mov
inc
cmpsl
movsb
mov
push
shll
in
mov
aad
scas
outsl
cmp
call
in
loopne
lret
pop
outsb
sub
test
lret
stc
movsl
out
jl
xchg
jmp
test
addr16
in
clc
fistpll
xor
or
xchg
pushf
call
scas
mov
and
in
mov
mov
call
push
enter
push
lods
or
adc
mov
ror
cmp
or
rcr
cli
enter
dec
or
enter
mov
lret
xchg
dec
add
in
bound
cmpsl
inc
adc
aad
imul
mov
enter
and
sbb
in
out
inc
xchg
loopne
pop
icebp
and
cs
inc
sub
push
call
and
jle
out
or
shl
push
out
insl
xor
test
sbb
xchg
ret
movsl
dec
pop
sbb
call
mov
inc
movsb
insb
fsub
icebp
sub
lods
mov
int
xor
stc
jmp
in
mov
cs
jb
js
outsl
inc
in
xchg
into
test
mov
pop
idiv
sub
mov
ljmpw
push
cmpsl
imul
in
push
loop
inc
lods
arpl
loope
popa
int3
out
call
jmp
mov
sub
jecxz
or
add
xchg
and
outsb
movsb
pop
cmp
mov
and
daa
int
mov
movsl
ljmp
test
loop
sub
sub
push
movsb
jl
cs
scas
mov
int3
loopne
in
scas
cmp
clc
andb
and
test
mov
movsl
sbb
fldenv
fwait
movsl
sbb
or
push
jbe
bound
movsb
pop
fisubs
pop
lret
gs
enter
into
loop
and
in
cmc
test
jecxz
call
dec
cltd
in
and
lods
cwtl
test
loopne
insl
movsl
mov
data16
sti
push
mov
test
lods
sbb
call
or
jecxz
sbb
das
mov
dec
mov
out
lods
xchg
stos
mov
nop
or
leave
xchg
flds
cmp
movsb
scas
xchg
lods
pusha
aad
push
mov
add
out
in
and
adc
sub
mov
push
sbb
jmp
stos
lds
stos
pop
and
call
pop
in
fs
test
popa
adc
dec
movsb
mov
lahf
es
mov
jl
outsl
fstps
mov
jns
bound
shrl
pop
test
and
roll
jecxz
xor
out
pop
out
rol
and
push
xchg
outsl
repnz
loop
imul
cs
in
cmp
adc
fcom
ljmp
inc
stos
test
jmp
out
fistps
push
fs
call
ret
and
lret
clc
lcall
shrl
sti
ljmpw
mov
icebp
imul
call
and
test
lods
mov
pop
stos
cmpsl
lcall
and
call
in
adc
out
sub
loopne
imul
pop
lcall
mov
mov
adc
movsb
imul
sub
arpl
stc
and
pop
test
dec
shr
enter
pusha
mov
gs
mov
or
sub
sub
loope
es
pop
popa
imul
add
inc
enter
jecxz
mov
adc
insb
fnstenv
vpunpcklwd
shrl
std
fs
ffreep
and
add
adc
loop
push
scas
inc
fsubrp
in
add
cmp
pusha
call
sub
mov
xchg
enter
fadds
int
cmpsl
fcom
pusha
lds
lods
jb
in
pop
cmp
test
or
jno
sti
adc
stos
data16
inc
loopne
and
lcall
dec
in
shll
sub
xchg
idivb
dec
mov
stos
arpl
lods
lock
push
push
pop
sub
outsl
shrl
adc
dec
sub
fcoms
mov
scas
cmp
sub
pusha
imul
stos
mov
and
mov
inc
mov
addr16
push
fsubrl
movsl
xchg
out
scas
ret
test
test
ljmp
movsl
pop
data16
xchg
and
cmpsb
jecxz
jne
out
cltd
and
jbe
mov
xor
imul
mov
repnz
outsl
in
test
inc
push
flds
lcall
jmp
scas
or
gs
dec
push
jne
mov
push
into
stos
or
cmpsl
xchg
push
sub
and
adc
popa
ja
lea
stos
rol
fadds
fistps
xor
aad
lcall
or
in
sub
and
sub
insl
out
xor
aad
mov
mov
and
inc
jecxz
jmp
cmpsl
xor
jbe
scas
js
cmp
cmpsl
enter
xor
fildll
cs
loope
sbb
xchg
dec
and
imul
out
shr
sub
call
shrl
fsubl
ljmp
add
loopne
scas
mov
mov
fcomps
mov
push
jecxz
stos
xchg
out
in
cwtl
lods
movsl
dec
and
jne
clc
lods
loopne
gs
fistpll
fistps
fxch
dec
outsl
push
stos
outsl
or
mov
test
mov
test
pusha
cli
out
ret
push
in
and
test
clc
and
movsb
les
and
loopne
mov
mov
ds
inc
push
dec
addr16
in
es
fstpt
int3
and
xor
sub
sub
cmp
inc
fldl
mov
cmp
adc
mov
out
jo
xchg
hlt
mov
cmp
es
push
xchg
xchg
add
push
cmpsl
pusha
mov
pop
mov
es
ss
ja
or
shlb
and
divl
mov
pop
mov
cmp
or
outsb
imul
test
mov
cli
ss
mov
sub
out
dec
mov
dec
pop
mov
loop
inc
out
in
jmp
xchg
out
dec
aam
xor
inc
xor
mov
sti
sbb
loop
cmp
stos
adc
and
sbb
in
test
fs
lods
mov
and
arpl
loop
sbb
inc
xor
pop
cs
loopne
mov
lcall
scas
in
movsb
leave
loope
test
movsl
mov
or
scas
test
das
and
xor
jecxz
imul
stos
cmp
fcoms
popa
dec
pop
out
and
into
scas
movsl
mov
inc
pop
and
lods
in
popa
xchg
fsubrs
inc
stos
jle
in
stos
mov
mov
lods
stos
shl
clc
xchg
daa
cmp
xor
pop
and
arpl
fadd
testl
jl
out
dec
mov
dec
jecxz
movsb
sbb
mov
icebp
add
leave
cmp
sub
in
cmpsb
pushf
dec
adc
loope
cmpsb
xchg
fsubs
das
in
insl
or
push
xchg
push
pusha
xlat
insl
cmp
cmpsl
aad
xchg
or
jl
insl
pop
iret
in
movsl
pop
aad
sbb
sub
push
and
fistpl
shr
cmpsb
dec
and
cs
jno
repnz
fsubl
fldenv
push
cs
pop
xchg
sub
mov
lods
xchg
test
scas
js,pt
xor
dec
mov
in
inc
jae
loope
ljmp
nop
test
jbe
lods
add
dec
cmp
nop
imul
lods
arpl
ljmp
mov
xchg
enter
out
stos
sbb
lods
sub
jg
das
je
sub
call
insb
jmp
in
pop
mov
pop
out
and
lret
mov
and
fisttps
jno
sub
bound
inc
cmpsb
dec
and
xor
pop
loop
sub
leave
aad
movsb
or
sub
mov
outsl
in
jmp
data16
cld
cmpsl
in
stos
incl
cmpsl
loope
fistps
and
ljmp
pop
fistps
fs
xchg
int
bound
mov
adc
imul
sbb
and
loopne
call
pushf
cs
mov
add
fsubl
bound
popa
int3
das
and
lods
mov
mov
scas
and
lret
popf
sub
and
imul
aad
xchg
jne
sub
gs
clc
ds
aad
leave
das
pop
test
in
test
test
clc
sbb
mov
outsl
adc
jmp
shr
sub
das
fisubs
sub
xchg
pop
mov
and
leave
movsb
and
jge
movsb
fbld
arpl
sbb
stos
mov
out
aam
es
stos
ljmp
sahf
pop
js
addr16
jmp
out
xchg
pop
into
test
imul
movsb
cwtl
sub
es
mov
push
and
sbb
and
and
iret
sbb
call
cld
jns
and
in
dec
mov
lret
clc
test
xor
scas
push
and
in
sub
fwait
arpl
stos
xchg
imul
sub
sub
dec
out
insb
inc
cltd
push
sub
scas
and
and
adc
movsb
jmp
push
push
aaa
es
shrl
inc
mov
test
cmp
mov
pop
outsl
push
mov
out
or
cvtps2pd
out
gs
mov
cmp
and
in
inc
mov
pushf
xor
aam
enter
xor
pop
mov
cwtl
push
sbb
mov
cmp
stos
test
imul
rcr
bound
pushf
dec
xchg
cmpsl
cwtl
mov
jp
pop
sub
mov
stc
dec
pop
and
push
mov
pop
arpl
je
sub
clc
in
insb
pop
in
xchg
jb
cs
lods
fsubl
ds
out
into
sahf
jmp
mov
xchg
fistpll
bound
push
add
cmpl
subl
xchg
daa
subb
push
or
dec
pop
loopne
fsubrl
insl
lret
ljmp
insl
js
fdivrs
fldt
cmpsl
out
stos
fistps
mov
aam
nop
add
mov
xor
pop
enter
mov
shll
cmp
loopne,pt
and
call
repnz
push
cmp
andb
sti
test
out
jmp
loop
in
outsl
cmp
sub
jae
mov
cmp
test
repnz
sbb
xlat
inc
mov
cmc
daa
mov
cwtl
frstor
stos
mov
jmp
sar
push
pusha
mov
in
push
pusha
icebp
pop
sbb
cmp
fnstcw
cmpsb
dec
lods
das
pop
mov
or
das
mov
xchg
fsubrl
jnp
mov
mov
and
cmpsb
add
sbb
hlt
sub
mov
imul
fsubl
in
clc
fcomip
pushf
fisubrs
jnp
ljmp
frstor
pop
cmpsl
pop
arpl
and
addr16
mov
test
ficoms
push
subl
test
pop
and
mov
adc
loope
pop
das
or
mov
jne
jns
or
and
and
adc
pop
shrb
int
addb
shlb
test
das
inc
call
shrl
mov
fs
jns
gs
lcall
xchg
inc
mov
mov
inc
mov
dec
mov
pop
stos
popa
mov
insb
fmulp
ret
xchg
fnstcw
faddl
sub
clc
das
std
and
lea
shrl
test
sub
push
sub
push
movsb
stc
test
mov
cmpsl
dec
lock
add
jl
data16
gs
shll
out
ret
and
test
sub
sub
outsb
xchg
push
gs
xchg
jo
stc
test
ljmp
and
push
adc
push
in
es
lods
shrl
adc
loop
or
shlb
fldl2e
and
mov
sub
andl
and
call
movsb
adc
jmp
sbb
pop
jmp
in
insb
inc
test
scas
push
ljmp
fs
arpl
and
shrl
xor
xor
and
fsub
mov
lret
out
pop
sub
cmpl
jmp
pusha
bound
clc
pop
jmp
jl
xchg
ljmp
pop
sub
sub
or
add
xor
into
fsubr
lds
aad
leave
imul
jns
pop
push
fucomi
mov
shlb
rcrb
into
and
out
dec
and
sub
imul
sub
fs
iret
jecxz
cmc
dec
push
pusha
ret
imul
add
test
out
out
sub
shrl
or
test
inc
jg
mov
jp
scas
in
and
fistps
or
jecxz
cmp
or
lea
inc
add
xchg
out
adc
popa
ret
push
mov
and
mov
jmp
out
loope
loop
mov
data16
repnz
out
loopne
cmpsl
cmpsl
insb
arpl
mov
icebp
out
test
movsl
jle
pop
stos
cmp
lods
lds
sub
dec
inc
gs
sbb
out
out
sbb
pushf
in
out
daa
mov
sub
sahf
imulb
dec
repnz
addr16
movsl
add
mov
jmp
push
cmp
das
insl
leave
inc
ljmp
push
dec
test
lretw
pop
sub
rcrb
test
mov
leave
call
cmp
cld
loopne
push
mov
jae
add
in
push
push
pop
or
call
mov
enter
xor
xor
test
arpl
shll
push
cltd
arpl
sub
sub
out
mov
lds
adc
shlb
movsb
call
outsl
xchg
pop
insb
xor
daa
subl
imul
mov
mov
cltd
sti
in
fcmovu
out
arpl
leave
int
in
xchg
loopne
lds
gs
in
scas
in
clc
rcrb
insb
movsl
pop
and
loope
shr
adc
lea
jmp
jns
test
into
cs
and
add
imul
jecxz
sbb
sbb
call
jecxz
fs
shrb
vsubss
xchg
jle
insb
cmp
mov
and
movsl
mov
sub
jle
lods
test
pop
aam
shr
data16
adc
popa
and
and
test
xchg
sub
loope
pop
jne
mov
ljmp
out
das
cmc
dec
and
lods
sub
das
adc
stos
andb
pop
shll
ret
cli
cmpsl
push
arpl
fadds
stos
shl
pop
cmpsb
movsl
je
in
pushf
clc
cltd
inc
jb
scas
fucomp
pop
and
or
insb
add
push
repz
insb
or
mov
push
push
jp
in
lods
and
shrb
sub
fcmovnu
popf
shr
and
cs
in
or
mov
mov
push
ret
data16
arpl
push
fwait
pop
loop
test
mov
divb
scas
loopne
push
sub
shrl
ljmp
int
call
pop
stos
call
jmp
out
jnp
mov
rorb
fs
push
bound
xchg
cltd
mov
stos
das
sub
and
jl
sub
jmp
testb
sub
rcrl
in
rclb
bound
push
test
rcrl
and
enter
in
test
mov
and
aad
test
and
and
cmc
sahf
pop
cmp
movsb
les
and
data16
xor
das
pushf
movsb
popa
stos
sahf
frstor
ret
call
jl
int
data16
insb
and
stos
in
push
mov
dec
pop
fmuls
lods
mov
loopne
sbb
in
cmp
rcrb
hlt
xchg
add
mov
out
push
lret
push
adc
cmp
mov
mov
xchg
dec
cmp
mov
call
and
leave
adc
aam
mov
int3
xlat
mov
enter
pop
mov
cwtl
scas
call
ljmp
sbb
les
pop
or
call
cs
lods
add
clc
mov
mov
xchg
ret
in
loop
jle
out
pop
or
fldcw
aaa
sbb
adc
cmpsl
int3
mov
sahf
dec
shrl
dec
sbb
or
mov
ret
sti
jmp
jl
push
mov
pop
ljmp
sbb
clc
mov
in
test
out
mov
pop
test
jbe
hlt
aaa
dec
xor
and
push
fwait
push
cmpb
ret
cwtl
mov
mov
jns
push
ljmp
jns
iret
dec
lret
push
mov
pop
pop
add
mov
jnp
out
int3
test
fsubr
fsubrs
out
incl
dec
cs
std
repz
sub
out
cmpsb
pop
mov
fwait
sub
or
stos
or
shrl
sub
push
mov
loop
popf
movsb
mov
or
mov
aaa
pop
in
pop
or
mov
sub
lods
sub
outsb
pop
sbb
insl
push
pop
cld
in
cmp
push
mov
lret
xorb
sub
call
fnstcw
dec
cmpsb
cltd
jg
push
xor
test
push
ja
sbb
fcomps
fidivs
adc
xchg
sub
mov
test
lds
cwtl
push
fcoml
dec
fldcw
stos
fmul
loop
mov
mov
adc
in
cmp
test
fcmovnbe
sub
pop
sbb
jmp
rcrl
sub
cmp
push
imul
leave
fldt
fdivrp
lret
ror
mov
rcl
ror
daa
cli
ljmp
daa
iret
rcl
mov
es
xlat
lcall
lock
icebp
in
out
pushf
daa
repnz
mov
sahf
repz
cmc
lahf
mulb
testl
out
xchg
xchg
xchg
xchg
daa
xchg
xchg
lea
daa
addl
daa
mov
mov
mov
mov
adc
pop
loope
addb
lock
fcmovu
leave
call
stc
cwtl
lret
rcr
shr
daa
aam
aad
sti
ljmp
iret
sub
int
ror
mov
ret
mov
out
sahf
int
lock
mov
aaa
inc
cwtl
add
sub
xchg
imul
pop
fisubs
push
jmp
mov
pop
cmpsb
inc
ljmp
fwait
and
sbb
xchg
daa
jl
xchg
xor
push
pop
mov
popa
and
popl
inc
mov
add
cmp
int
sti
hlt
out
add
daa
cmp
clc
pop
mov
dec
out
or
cmp
cmp
xchg
lcall
daa
xchg
push
push
test
popa
mov
adc
xchg
xchg
loop
daa
jle
mov
mov
sbb
adc
and
push
mov
jb
stos
add
ja
lahf
daa
pop
or
enter
leave
xor
aas
xor
test
push
insl
adc
cmp
fwait
out
in
mov
call
cmpsb
scas
mov
jl
dec
and
xchg
lods
imul
aas
inc
push
inc
mov
jmp
in
movsl
popf
daa
jg
sbb
subb
dec
test
mov
clc
mov
or
pop
cmpsl
jnp
into
das
or
stos
xchg
je
inc
xor
push
jno
mov
data16
repz
cmp
and
xor
sub
repnz
and
mov
insb
pop
pop
jb
das
add
sbb
mov
test
movsb
in
sub
sub
daa
xor
pop
or
es
mov
sub
in
sbb
lahf
fldl
test
out
pop
lea
aas
aad
mov
sti
xor
xor
jnp
frstor
pushf
adc
daa
xor
mov
divl
and
cmpsb
daa
ds
arpl
daa
and
mov
sahf
test
in
hlt
xchg
cmp
ja
ret
add
das
sbb
in
mov
mov
sbb
pop
push
xlat
in
jae
add
add
pop
jmp
push
nop
jae
shlb
shrb
dec
fisubrl
ficoms
dec
shll
push
mov
or
pop
leave
ljmp
daa
clc
add
jl
daa
lcall
mov
fwait
adc
fistps
scas
in
mov
cmc
repz
mov
or
sbb
xchg
mov
arpl
push
mov
daa
imul
mov
and
jle
sub
xor
inc
dec
and
daa
decb
dec
or
inc
insl
fdivrs
xlat
in
adc
lcall
adc
daa
push
aam
shll
push
mov
mov
xchg
test
int
inc
mov
ror
clc
push
imul
jne
or
mov
or
cmp
jno
daa
sbb
adc
inc
popa
push
test
xchg
xchg
mov
xchg
jo
test
add
adc
add
adc
pop
es
xchg
jp
mov
lahf
daa
out
lds
cmpl
mov
lcall
hlt
testl
cltd
sub
add
xor
jle
daa
popa
ret
test
xor
iret
imul
add
test
push
ret
pop
xor
psubb
nop
mov
test
shll
daa
push
jno
sub
add
lea
xor
shr
cmpsl
pop
daa
push
xchg
or
and
das
ja
inc
sahf
jno
ss
mov
and
mov
sub
mov
mov
scas
sub
mov
add
pop
daa
stc
add
jno
xchg
or
pushf
pop
mov
push
add
jle
xchg
bound
rolb
imul
gs
fs
movsb
xor
in
mov
sti
pusha
cli
or
add
mov
xor
mov
inc
addr16
fbstp
das
xchg
jge
mulb
in
test
mov
rcr
inc
ret
pop
inc
and
gs
es
xor
roll
mov
inc
xor
inc
addr16
xchg
fsubs
and
jg
mov
popw
cwtl
push
fldl
and
or
cmc
lods
pop
inc
daa
aad
test
and
in
lea
pop
mov
inc
or
xor
mov
and
in
mov
mov
cmp
xor
mull
jg
jp
stos
mov
mulb
mov
mov
cwtl
ljmp
mov
inc
xchg
daa
mulb
pop
das
hlt
inc
lahf
daa
lea
aam
inc
int3
fadds
in
cs
cmp
or
xchg
mov
fisubl
mov
push
jbe
mov
jge
pop
push
jle,pn
mov
sub
or
hlt
pop
jle
fs
out
daa
push
iret
test
cli
mov
mov
sahf
sbb
xor
cmp
outsl
add
jbe
lcall
fdivs
or
gs
insl
mov
xchg
dec
dec
sbb
mov
mov
insb
cmp
jle
dec
cmp
adc
inc
adc
add
and
xor
gs
or
adc
daa
pop
sbb
mov
cmp
decb
xchg
mov
insb
daa
repz
xchg
fwait
mov
mov
daa
xor
mov
in
andl
jns
shrl
add
xchg
jnp
xor
pop
cmp
outsb
dec
iret
daa
push
incb
mulb
fcmovbe
shlb
pop
sub
enter
pop
xchg
jle
bound
cmp
sbb
xlat
or
das
popa
out
clc
inc
hlt
daa
jbe
cld
inc
jne
lahf
push
cmp
fistl
cmp
mov
movsb
ret
push
mov
sbbl
dec
fs
inc
jb
xlat
or
fwait
sub
sub
clc
daa
fsubs
xor
incb
jl
and
mov
test
cmp
in
dec
inc
adc
movsl
push
mov
icebp
adc
mov
out
or
pop
push
daa
mov
mov
jg
sub
daa
test
shlb
scas
jle
daa
test
pop
mov
dec
daa
sub
push
ret
add
sub
mov
xchg
push
sub
mov
fnsave
daa
in
cmp
cmpb
fsub
repnz
mov
insl
lahf
daa
fistpll
pop
pop
mov
xchg
fsub
loop
add
mov
daa
stos
addr16
inc
pusha
test
les
and
js
xchg
out
mov
clc
hlt
bound
cmpsl
adc
fs
inc
xchg
xchg
pop
ret
sbb
xlat
pushl
jp
lock
iret
out
push
pop
bound
mov
aas
xor
xchg
imul
nop
cmp
cmp
mov
mov
pop
xchg
mov
or
dec
xor
mov
in
mov
inc
arpl
push
stc
or
ss
sbb
push
test
cmp
shll
das
int
add
aas
orl
bound
mov
daa
aas
xchg
push
in
cmp
push
daa
jle
xchg
cmpsl
sbb
ljmp
cli
mov
and
addr16
daa
sub
push
push
aas
clc
lds
inc
lret
shll
decb
fadds
jne
sbb
and
xchg
gs
jle
xlat
add
sbb
xor
popa
aaa
push
nop
push
cmp
cld
hlt
sti
or
das
stos
int3
pop
lcall
cli
in
das
imul
xchg
enter
stos
mov
or
sub
sbb
sub
clc
cld
idivl
stos
jmp
sbb
push
dec
fstpl
lods
out
jo
xchg
outsb
cmp
fwait
outsb
sbb
mov
push
inc
pop
lret
int
dec
stos
leave
in
lret
sbb
in
cmpsl
push
jl
je
cs
mov
insl
and
test
jecxz
cmpsb
enter
lret
imul
sub
clc
mov
fcomps
rcrl
fdivr
insl
cmp
sarb
dec
ret
mov
pop
jmp
clc
pop
mov
fmuls
lahf
outsb
xor
ds
out
pop
es
int
sub
stos
adc
inc
sbb
mov
mov
popa
sub
int3
inc
push
add
scas
sub
pop
or
sahf
jae
imul
scas
dec
cwtl
imul
pop
in
xchg
insl
add
cs
mov
repz
pop
mov
inc
sahf
les
sub
fwait
cmp
jmp
lahf
add
dec
icebp
iret
xor
inc
out
add
pop
cs
lret
sbb
test
dec
enter
sub
or
mov
pushf
lods
pop
imul
leave
enter
sahf
mov
mov
outsb
out
adc
or
jae
and
out
sbb
inc
sbb
mov
aaa
rcrb
pop
mov
stc
cwtl
iret
dec
fcompl
mov
jp
mov
pushf
inc
dec
sub
call
inc
cmp
lea
js
mov
sbb
mov
or
push
shrb
lods
cmp
or
pop
pop
repnz
out
pop
outsl
mov
movsl
loopew
outsl
test
scas
cmp
lret
lods
stos
shrl
dec
test
iret
add
xchg
mov
movsb
push
pushf
inc
adc
scas
test
dec
das
movsb
push
test
gs
out
fcmove
std
aad
ret
enter
pop
inc
add
or
scas
pop
out
inc
pop
decl
cs
popf
or
push
stos
cld
xchg
add
or
daa
aaa
test
cs
dec
cmp
xchg
xchg
xchg
push
fidivrl
cs
push
sub
shrb
mov
fdivrs
jmp
bndstx
push
xchg
out
lock
mov
cs
sahf
pop
scas
sbb
or
mov
sub
mov
imul
outsb
sti
fisubrs
sub
jecxz
sub
clc
mov
push
jle
lret
lods
sbb
xor
pop
inc
xchg
das
and
es
iret
fimuls
ds
jle
lock
mov
in
mov
scas
sbb
mov
or
lods
mov
enter
iret
xchg
adc
push
in
scas
xchg
sub
pop
lods
rorb
ss
cld
sub
push
cmc
dec
sub
in
sahf
inc
pop
pop
leave
pushf
sub
fisubrs
ja
scas
lahf
repnz
and
sahf
iret
fwait
xchg
insl
into
faddl
mov
xchg
divl
pop
ja
jbe
mov
sti
ficoms
mov
sahf
addr16
ficompl
in
sub
cmp
lods
std
lcall
pop
sub
cmp
imul
wbinvd
outsb
lods
in
loop
jmp
cld
bound
fcmovne
int3
sbb
pop
mov
jmp
out
js
xchg
js
cmp
adc
scas
cs
sarl
ja
sti
or
adcb
adc
cmp
repnz
cmpsb
jmp
xor
or
jmp
ljmp
pop
scas
enter
insb
mov
cli
jmp
int
ret
lahf
mov
jge
out
sbb
and
dec
jmp
or
adc
outsl
ret
ss
ds
jnp
sbb
pop
scas
out
in
pop
or
xchg
sbb
in
loopne
xor
jp
stos
jmp
fdiv
jns
mov
dec
sbb
out
out
pop
sbb
in
pop
sbb
mov
out
lret
mov
inc
insl
mov
outsb
leave
or
adc
shrb
adc
sbbb
rcll
lods
nop
cmpsl
ds
lahf
aad
out
pop
xchg
or
push
dec
incb
jmp
sti
jb
inc
mov
and
xor
es
jge
cmpsl
or
stos
inc
sahf
xchg
inc
shll
push
pushw
out
mov
mov
xchg
mov
cs
ret
and
push
pop
jmp
mov
fcoms
pop
dec
push
sbb
adc
push
js
mov
sub
ret
enter
cld
call
cwtl
out
scas
mov
test
mov
mov
notb
clc
enter
pop
dec
jno
iret
imul
inc
imul
aad
leave
ret
mov
sub
or
jg
jge
aaa
and
add
call
push
stos
fldenv
or
neg
frstor
fisubs
sarb
sti
mov
daa
es
daa
std
rol
inc
fwait
daa
in
mov
mov
hlt
mov
and
pop
loopne
pushf
daa
mov
jecxz
cmc
popf
stos
dec
leave
div
push
out
call
inc
jmp
xor
push
daa
stos
lods
lods
scas
scas
mov
movsb
movsl
cmpsb
cmpsl
pop
pop
daa
pop
pop
pop
pop
push
push
push
push
daa
push
push
push
push
dec
dec
dec
dec
daa
dec
dec
inc
inc
inc
inc
inc
inc
lcall
push
cmp
adc
int3
adc
sbb
cwtl
ffree
stos
mov
fcom
lret
rcl
es
int3
cltd
daa
int
iret
xlat
sti
ljmp
std
lcall
inc
fwait
in
lock
icebp
test
jb
mov
arpl
hlt
stos
pop
cmc
ret
adc
repz
jae
imul
jno
daa
ja
inc
jae
popf
movsl
jb
mov
sbb
and
pushf
jecxz
sub
mov
and
mov
fdivr
push
cmp
xchg
paddusb
loopne
mov
jno
cmp
inc
add
scas
inc
or
loopne
dec
cld
push
ds
les
outsb
daa
adc
pop
and
daa
leave
fadd
sub
sti
aad
out
movsl
aaa
daa
shlb
scas
cmpsb
imull
not
and
pop
xor
daa
or
push
lret
daa
and
mov
out
add
hlt
mov
or
aad
clc
mov
divb
daa
add
sbb
cs
movsb
mov
test
or
cmp
inc
dec
push
mov
fistpl
mov
jno
cmp
cmpsl
xchg
hlt
test
inc
lods
iret
mov
ret
aam
ds
lcall
sbb
iret
mov
in
cmp
lahf
das
je
outsl
jb
and
sbb
rorb
mov
lcall
sbb
das
sbb
outsl
repnz
loopne
adc
sub
pop
or
or
pop
repnz
or
mov
sub
leave
call
or
es
pop
jno
lds
inc
cmpsl
andl
or
mulb
and
push
sti
leave
shlb
insb
test
out
clc
xchg
jl
aas
pop
add
daa
xorb
daa
or
pop
pop
xchg
mov
aas
daa
sahf
ja
jl
mov
cwtl
icebp
xor
lret
ret
stos
imull
mov
sbb
and
mov
movsb
xor
mov
pop
add
lock
aad
xchg
mov
and
xchg
push
pop
lods
mov
and
inc
test
pusha
dec
mov
pop
pop
cli
cld
dec
mov
xor
sub
mov
icebp
add
addr16
push
leave
jg
aad
dec
xorl
testb
inc
filds
pusha
daa
incb
fistl
adc
mov
das
call
push
xor
mov
pop
imul
idivl
jb
jne
inc
stc
dec
in
andl
int
leave
insl
je
bound
fidivrl
cld
int3
in
and
xor
or
icebp
daa
mov
fldenv
mull
daa
ja
or
jne
mov
inc
push
and
sahf
daa
adc
sbbl
push
mov
xor
fwait
dec
stos
out
daa
cmp
or
scas
mov
inc
mov
daa
jle
out
sbb
pop
xchg
andl
push
call
push
jne
mov
pusha
and
or
repz
inc
aam
sub
daa
in
jae
mov
push
inc
xor
jne
adc
daa
jbe
idiv
mov
fisubrl
clc
dec
mov
or
or
cmp
xchg
sub
arpl
pop
xchg
xor
mov
ss
jns
lods
and
push
test
push
inc
mov
push
sti
subl
daa
xor
imul
out
in
push
xchg
in
adc
daa
mov
fdivrs
dec
int
mov
adc
arpl
mov
repz
or
daa
sub
rcrb
inc
sub
or
pop
and
je
cmp
push
call
jmp
push
cmp
or
add
mov
mov
out
jg
data16
fiadds
push
sti
cmp
mov
call
movsl
jbe
mov
xchg
daa
dec
mov
stos
xor
add
mov
jne
jp
cmc
bound
and
ljmp
daa
dec
mov
int
cmpsl
jecxz
daa
inc
popa
repnz
or
xor
cmpsb
daa
adc
repz
push
pop
sub
or
cmpsb
jne
inc
lea
cltd
enter
arpl
fadds
push
jno
fidivs
out
daa
fwait
push
add
out
cmp
daa
dec
jo
and
sub
adc
sub
jae
jbe
jnp
mov
push
xchg
pop
or
inc
mov
or
dec
clc
jae
jl
cmp
gs
clc
jmp
sbb
fbstp
xor
ds
add
ljmp
jo
mov
daa
xchg
dec
pop
aas
adc
fldenv
or
fisttpll
xchg
cmp
xchg
fsubs
daa
mov
xchg
je
add
mov
fdivs
movl
cmp
call
fisttps
daa
cwtl
jmp
in
inc
movsb
xchg
loop
sub
rcr
inc
daa
stc
sub
loope
fldenv
mov
daa
cmp
jno
aas
daa
out
cmpsb
push
addb
lcall
sub
cmp
xor
in
ljmp
and
pop
cmpsl
iret
inc
daa
in
pop
xorb
jb
pop
repnz
or
test
das
dec
add
or
leave
pop
out
push
clc
cmp
mov
dec
cmp
ss
mov
or
aad
sti
push
cltd
push
lret
daa
fldl
xlat
pop
daa
cli
shr
aas
jmp
mov
iret
cmp
xchg
cmp
enter
jb
sub
pop
daa
sub
imul
xchg
daa
dec
mov
push
shll
orb
cmp
das
inc
inc
movsb
pushf
xor
daa
cmp
js
mov
mov
fldcw
jl
cmp
daa
pop
jb
in
xlat
mov
dec
fcomp
dec
xor
sub
adc
bound
sub
sub
or
mov
cmp
mov
xor
out
jne
sbb
cmc
pushw
inc
lock
jo
add
lods
sbb
out
scas
lcall
popf
lea
dec
and
sub
or
je
and
fcmovnb
std
sub
out
sbb
inc
hlt
daa
imul
shlb
cmp
fst
mov
mov
pop
cltd
xor
ds
push
jmp
pop
mov
test
and
dec
call
lret
das
lret
sbb
pop
out
leave
push
int3
and
dec
daa
shll
adc
and
xor
gs
pop
jno
jnp
daa
rcr
movsl
pop
repnz
stos
mov
daa
insl
lock
xor
adc
sub
sbb
mov
out
adc
dec
stos
cmp
bound
cmpsb
mov
imul
pop
sti
es
clc
xorl
in
push
cmpsb
xchg
stos
daa
mov
mulb
clc
aas
cmp
and
les
out
sti
and
and
mov
add
sbb
lret
mov
fsubrs
mov
mov
or
mov
push
dec
cmp
sbb
xchg
imul
push
and
incb
jnp
cmp
test
shrb
lcall
test
lods
in
fdivrs
and
cmpsl
or
add
mov
pop
pop
push
or
test
in
rclb
insb
sub
int
cmp
mov
ret
and
mov
push
mov
cmp
data16
cmpsl
mov
mov
stc
mov
mov
cld
and
mov
pop
add
add
daa
adc
cmp
addr16
cltd
sub
daa
xchg
sub
clc
or
mov
jge
daa
cmp
pop
inc
fcmovnbe
or
sub
pop
loope
negb
call
daa
lahf
insb
lods
stos
imul
mov
xchg
pop
movsb
mov
aas
mov
inc
out
out
and
xchg
jmp
int3
arpl
lds
mov
cmpsb
pop
mov
pop
daa
popa
xor
mov
lret
fistl
sub
mov
cmp
xor
mov
test
sar
mov
daa
sahf
pop
lods
or
mov
pop
fwait
xor
aas
add
pop
or
xchg
add
xchg
ds
aas
ret
jg
mov
add
enter
call
andl
sub
pop
push
daa
hlt
push
mull
fistpl
daa
push
jnp
xor
jecxz
xchg
daa
aam
xchg
mov
mov
add
loop
in
das
xchg
gs
sarb
jmp
out
addr16
mov
ret
xor
daa
addb
inc
cmc
mov
and
pushf
add
daa
jge
ds
mov
fadd
and
leave
data16
shlb
fisttps
dec
push
dec
jne
clc
jge
jno
mov
push
daa
sahf
stc
and
lods
hlt
loopne
dec
mov
stos
dec
add
adc
outsl
jne
dec
or
mov
sub
add
movsl
daa
push
testb
ror
add
lods
leave
pop
jb
pop
je
daa
lret
push
or
sub
daa
jae
jle
lahf
dec
sbb
clc
out
mov
fbld
clc
mov
sub
mov
lahf
cmp
lds
shll
push
aam
xchg
mov
inc
cmp
rol
movb
inc
cmpl
imul
mov
rcrl
push
cmp
mov
adc
or
mov
sbb
daa
fistpl
leave
pop
mov
mov
aas
pop
cltd
in
jecxz
ret
pop
add
nop
adc
daa
ds
xchg
lds
pushf
shlb
pop
mov
sahf
sub
inc
and
push
hlt
daa
pop
mov
or
daa
fimull
outsl
in
stc
popf
pop
cmp
neg
cmp
imul
rcll
test
daa
addr16
insb
idivl
sub
fwait
adc
xchg
ljmp
shrb
sbb
loopne
test
das
cmp
ja
mov
mov
fdivs
shll
out
iret
idivb
xchg
popa
pop
mov
stc
and
enter
icebp
fisubrs
test
pop
pop
clc
idivl
push
dec
mov
and
sbb
cld
jo
mov
xchg
sub
dec
shlb
sti
data16
repnz
les
in
and
daa
notb
xchg
cmp
jnp
stos
mov
add
pop
and
xchg
daa
or
arpl
push
lahf
push
lods
sub
in
mov
imul
mov
loope
mov
mov
aas
pop
inc
daa
dec
jecxz
cmp
out
mul
mov
gs
daa
or
jl
daa
adc
pop
test
imul
ds
fwait
sbb
sahf
call
and
aas
in
andb
daa
cmp
xor
cld
addr16
xor
inc
cmp
xor
fdivl
or
test
cmp
mov
int3
mov
jmp
cli
daa
sbb
addr16
daa
repz
ds
or
push
xor
sbb
inc
add
or
mov
cli
cmp
jl
daa
mov
sbb
and
sbb
mov
xchg
xchg
daa
mov
pop
lea
adc
aas
clc
fs
or
jle
or
gs
xor
cld
lahf
dec
daa
in
xor
frstor
out
push
daa
and
and
mov
pop
sub
ja
out
pop
jbe
cmp
adc
mov
mov
lods
xlat
jl
sub
mov
mov
inc
nop
pop
dec
scas
shlb
les
mov
inc
cmc
adc
rorl
nop
xchg
jbe
daa
sarb
test
jl
push
cmp
cli
shll
push
test
sub
daa
pop
cmp
mov
inc
mov
push
ljmp
gs
daa
dec
jle
cmpsl
cltd
scas
lahf
cld
daa
fsts
out
xlat
mov
mov
into
sub
hlt
sub
idivl
sbb
mov
into
icebp
sub
push
jmp
xor
pop
js
shll
js
sbb
push
jge
mov
cwtl
cwtl
xchg
lds
sub
daa
in
sbb
scas
fsubrs
mov
stc
pop
icebp
sub
push
std
dec
daa
mov
mov
pop
sub
ret
ljmp
call
push
sbb
loop
xchg
rclb
iret
fbld
adc
pop
inc
ja
orl
add
aas
push
xchg
imul
inc
scas
iret
sbb
inc
push
daa
out
es
fcmovne
mov
add
sbb
sahf
pop
mov
mov
mov
push
and
jne
mov
inc
fsubrs
jbe
inc
cmp
daa
xor
and
jo
and
fdivrs
xor
stos
lds
sub
daa
sub
fsubs
pop
mov
sahf
dec
cmpsl
mov
push
jbe
outsl
mov
xchg
orl
daa
int3
int
jmp
daa
xchg
es
out
lret
cmp
and
jge
or
or
mov
add
pop
cmpsb
mov
mov
sbb
fmul
daa
bound
in
dec
inc
nop
fstpl
add
or
xchg
repz
clc
lret
stos
push
cmpsb
das
mov
jne
cmc
push
push
pop
cmc
and
mov
iret
or
test
cmpsl
adc
ret
sbb
notl
add
jnp
pop
dec
xor
sbb
push
xor
xor
jnp
jmp
mov
inc
fs
or
mov
sub
sarl
incl
or
data16
sbb
popa
stos
sub
xor
xchg
sbb
pushf
sarl
test
sbb
mov
insl
push
push
shlb
cmc
ja
push
lds
call
push
daa
ljmp
stos
ds
daa
cmp
jne
in
cmp
lock
testl
cmpsb
rcrl
xchg
and
add
or
jno,pt
xor
jle
test
mov
pop
cli
push
push
hlt
xchg
or
push
aas
xchg
loope
in
sahf
sbb
pop
enter
testb
sub
xchg
or
lret
sbb
enter
in
sub
xor
fcoms
lcall
ret
xchg
dec
and
mov
or
add
dec
push
lods
mulb
xor
lcall
push
dec
mov
mov
arpl
cmc
cmp
jae
out
pop
pop
xchg
out
push
fcoms
push
cs
imul
je
xchg
repz
push
and
movsb
out
nop
shrb
in
xchg
adc
dec
das
pop
push
cmp
aas
mov
add
mov
mov
loop
es
daa
inc
adc
lea
daa
jbe
mov
ds
out
les
not
mov
push
mov
xor
icebp
stc
sbb
mov
mov
int
daa
mov
jno
push
and
dec
pop
fistps
arpl
push
mov
sub
xchg
mov
push
or
daa
loope
inc
bound
in
fildl
cmpsl
fwait
lods
jle
daa
jmp
outsb
lods
and
sbb
int
push
mov
mov
cmp
mov
or
mov
mov
or
cmp
sub
mov
in
ret
inc
imul
es
mov
cs
out
mov
dec
adcb
cmp
and
jo
hlt
cs
fisubl
inc
jle
std
or
rclb
in
movsb
sub
orb
jmp
inc
sub
ss
stos
sarl
xor
into
ja
orl
mov
jne
xor
xchg
mov
fstps
rolb
enter
xchg
cmp
call
cmp
lock
push
in
mov
inc
xchg
cmp
leave
fistps
and
jb
xor
dec
and
data16
movsl
loop
pop
and
fldenv
jle
xchg
cmp
fdivrl
and
ljmp
pop
das
jge
out
xor
inc
push
stc
ljmp
pop
cmc
cmpsl
mov
jecxz
aad
mov
pop
mov
dec
ffree
mov
scas
sub
dec
stos
filds
movsl
sbb
daa
push
mov
hlt
pop
cmpsl
repnz
sbb
cltd
lds
add
in
xchg
loopne
xlat
cmp
mov
and
outsb
xor
mov
stc
mov
arpl
or
movl
pop
push
push
jo
test
add
out
dec
clc
push
cmp
adcl
ljmp
fimuls
mov
je
fdivs
or
pop
sbb
adc
sub
mov
nop
mov
enter
clc
cld
idivl
subl
dec
xchg
xor
mov
xchg
add
call
sub
sub
cmp
or
push
and
xor
and
in
daa
iret
outsl
mov
xchg
inc
sbb
orl
leave
ljmp
jnp
enter
pop
daa
pusha
push
xor
xor
cmpsb
dec
mov
and
mov
adc
shll
sbb
daa
xchg
imul
das
pop
sahf
inc
into
filds
pushf
bound
push
imul
or
and
fcoms
mov
push
or
mov
or
inc
daa
insb
int3
add
ss
pop
cmp
jbe
das
mov
je
jae
mov
ljmp
inc
push
mov
push
mov
inc
pop
daa
push
movsl
fcompl
adc
bound
pushf
push
call
imul
jmp
mov
mov
out
sahf
insl
xor
aad
dec
adc
aaa
push
mov
clc
clc
std
mov
js
leave
jl
mov
ljmp
cmp
or
idivb
pusha
xchg
cmpsb
mov
inc
push
insb
mov
in
sub
fcomps
jo
call
jb
scas
test
mov
and
sub
pop
shlb
clc
test
sarl
cmp
lcall
test
adc
cmp
lret
xchg
pop
sub
sub
adc
push
ljmp
test
imul
sub
fdivs
aaa
pop
movnti
aas
call
fisubl
xor
fldenv
sahf
lods
cmp
push
cmp
aam
jecxz
cmp
aas
cmc
fcoms
cmpsb
popa
xchg
in
fldl
pop
fld1
clc
das
push
sbbb
pop
sbb
pop
pop
fcmovu
sbb
mov
pop
mov
loope
inc
idivl
pop
clc
cli
mov
out
repnz
aam
imul
mov
call
sbb
pop
mov
mov
leave
not
nop
cmp
or
sub
mov
js
lret
fildl
fdivrs
mov
loopne
clc
dec
push
or
sbb
fmuls
and
ret
jae
mov
and
dec
cltd
ja
pop
leave
stc
cmp
lret
js
mov
pop
fs
cmp
or
fucomi
cmp
sti
mov
out
sub
sbb
or
movsb
sub
jmp
and
mov
fcmovnu
icebp
clc
and
iret
ds
stos
call
enter
fcomp
cs
leave
lret
pusha
adc
test
int3
sbb
icebp
pop
imul
fmuls
test
xchg
pop
stos
pushf
movsl
jp
data16
pop
repnz
pop
dec
dec
scas
cmp
shr
push
cltd
jno
out
xor
lock
cmpsb
pop
scas
push
fwait
xchg
pop
and
fwait
pop
dec
inc
cld
mov
stc
xchg
and
cltd
mov
jo
add
mov
mov
or
in
std
and
mov
push
pop
fs
pop
jge
test
test
leave
inc
out
fcmovu
popa
imul
enter
xchg
mov
lret
scas
mov
scas
mov
in
dec
lds
scas
push
sbb
push
js
inc
cmp
scas
inc
std
jecxz
mov
iret
mov
inc
sbb
out
and
inc
movsl
jecxz
addr16
mov
mov
push
lret
cmp
and
jno
inc
cmc
rorl
iret
and
stc
dec
das
xchg
divb
mov
xchg
adc
xchg
and
call
mov
and
push
call
xchg
pushw
xor
shll
cmp
sbb
mov
cmp
ss
and
push
sbb
scas
cwtl
and
push
mov
fisttpll
leave
call
mov
pop
sbb
aam
ss
dec
or
mov
jnp
out
xor
push
jmp
jno
inc
jmp
pop
sbb
dec
rcrb
test
fsts
clc
call
je
mov
jmp
loop
mov
mov
push
lret
ja
dec
leave
fiaddl
sbb
add
cmpl
mov
mov
adc
cwtl
int3
or
ds
dec
es
cltd
mov
enter
sbb
and
test
loope
ljmp
aad
push
pushl
mov
or
loop
shr
fmuls
adc
and
lods
mov
jmp
out
test
call
insl
aaa
shrl
sti
jle
out
test
push
pop
jmp
push
jno
sbb
stos
sub
lods
pushf
test
mov
cmp
call
test
sbb
hlt
jne
std
sub
jb
pop
sub
pop
sbb
outsb
push
push
dec
insl
out
lcall
out
push
cwtl
and
sbb
sub
and
loopne
xchg
nop
js
or
inc
dec
or
test
sar
out
in
ret
fwait
mov
shrl
aam
js
mov
cmp
aas
mov
in
jns
stos
imul
popa
push
fs
clc
icebp
or
push
inc
ret
insb
mov
scas
push
sub
int
test
outsb
pop
loop
icebp
sub
lret
sub
pop
scas
fisubl
push
fildll
mov
lods
fdiv
lcall
repz
clc
jb
xchg
insl
lea
jns
stos
sub
sub
mov
outsb
scas
push
jmp
ror
sbb
push
stos
push
and
pop
sub
pop
stos
insl
fisttpl
test
cs
outsb
sub
in
dec
push
ja
test
call
lret
popf
jno
jbe
xchg
adc
aaa
and
mov
rcrb
jp
imul
orl
sahf
pop
push
cltd
out
mov
data16
std
lret
or
mov
imul
loopne
sub
mov
nop
mov
and
aas
out
out
movsb
cmp
cmp
outsb
shlb
sub
dec
lret
and
jne
jmp
dec
mov
mov
pusha
sbb
imul
push
lret
cs
outsb
pop
pop
popa
push
insb
imul
imul
ficompl
cmp
movsb
lods
pop
int3
push
jae
ljmp
setp
popl
nop
in
and
dec
test
pop
pop
cld
jno
mov
mov
mov
push
dec
or
aas
sbb
cmp
jg
cld
ret
test
sbb
inc
loopne
add
and
sub
cwtl
mov
jmp
and
outsb
pop
int3
lret
jns
dec
in
outsl
in
outsl
cmp
mov
adc
lods
jo
test
out
insl
lods
test
imul
xor
sbb
sub
test
stos
pop
pop
or
sub
mov
ret
cltd
cmpsb
iret
out
sahf
or
mov
scas
pop
enter
iret
in
sub
lods
shr
lret
insb
out
popa
movsb
and
ljmp
jae
jmp
je
arpl
mov
test
jns
lret
scas
or
test
inc
loop
stc
loope
cmp
mov
push
call
jne
leave
fcmove
dec
mov
dec
jmp
sub
outsl
fsts
test
int
out
loopne
mov
out
cmpb
lcall
sahf
scas
mov
ret
jns
adc
lods
sub
out
mov
cli
mov
leave
ljmp
or
and
aam
out
jbe
adc
cwtl
shl
ja
jb
push
cld
pop
loopne
push
or
ret
ljmp
and
mov
cmpsb
lods
in
loopne
cmpsb
dec
dec
sub
and
in
adc
mov
mov
ret
out
stos
orb
repz
and
jmp
es
imul
out
sbb
in
lcall
inc
push
pop
add
in
jmp
sub
sub
mov
inc
bound
scas
lods
pop
push
aaa
jb
inc
dec
out
shrb
sub
xlat
pop
aas
sub
mov
in
lods
inc
andb
fs
fwait
or
pusha
cmp
pop
and
jno
jmp
stos
mov
lcall
cli
push
fnstcw
lret
mov
sbb
test
cli
sub
stc
cli
fs
scas
sbb
cmpsl
adc
add
inc
sub
clc
les
jb
push
sar
adc
fsts
cltd
add
in
out
lock
cmp
movsb
inc
sub
jbe
mov
lret
sti
jge
pop
adc
sbb
test
pushf
push
test
mov
push
mov
mov
mov
fildll
daa
pop
stos
mov
push
or
mov
add
push
jne
subb
dec
rolb
rorl
outsb
lret
test
add
push
stos
pop
js
insb
push
lods
leave
jmp
sub
leave
sub
ljmp
dec
push
scas
pop
js
mov
call
pop
add
stc
jmp
jns
pop
in
mov
mov
adc
fs
pop
das
ljmp
sub
fmuls
sub
rorb
js
xchg
pop
cli
stos
or
xor
fs
jmp
dec
fmuls
rcl
add
insl
loopne
sub
sub
jmp
jl
or
cmp
into
sbb
das
jmp
movsb
or
es
aad
inc
inc
dec
or
or
cmp
jecxz
mov
sub
fsubrs
pop
jp
jle
ds
test
xchg
dec
std
fisubrl
sub
stos
test
into
movsb
cmp
dec
and
or
loop
dec
fcmove
or
pop
push
into
lods
orl
mov
xchg
xor
and
out
dec
add
pop
ljmp
fs
pop
imul
outsl
push
out
jmp
push
push
and
fs
outsb
mov
jo
out
add
mov
stc
and
fucomip
stc
mov
pop
andb
ljmp
imul
or
pop
sarb
test
mov
sub
lret
or
negb
adc
xchg
call
das
xlat
mov
mov
fwait
or
cmpsb
cmp
ds
pop
lods
popa
enter
sub
cmp
js
ljmp
dec
stos
fdivr
cltd
jns
mov
pop
pop
out
or
adc
pop
pop
fdivrs
mov
int
jnp
cmp
in
mov
js
in
shlb
and
cmpsb
pop
sbb
push
addr16
or
sbb
ljmp
sub
in
ds
sbb
jg
js
xchg
push
fnsetpm(287
sub
xchg
sbb
fidivrl
out
mov
out
jnp
leave
push
mov
mov
int3
test
fxch
adc
in
mov
cmpsb
mov
outsl
outsl
or
mov
pop
out
movsl
dec
lods
into
es
jg
fldz
jl
lods
cwtl
hlt
popa
and
mov
mov
push
call
cmp
jge
ljmp
imul
adc
stos
jecxz
out
jl
int
inc
jle
or
mov
inc
sub
lods
loopne
insl
cwtl
sar
cwtl
rol
and
push
lods
mov
inc
dec
imul
jbe
out
stos
in
or
sub
dec
aam
lret
mov
aam
sbb
lret
dec
mov
scas
mov
shll
push
push
stos
out
and
add
ljmp
lahf
push
sbb
mov
shll
hlt
data16
popa
inc
sub
fucomp
mov
cmp
or
cmpl
insl
bound
sbb
xchg
and
jge
jns
pop
or
push
inc
push
stos
int3
les
cmp
repnz
out
pop
imul
in
and
mov
sub
or
mov
mov
arpl
dec
cs
sub
out
mov
out
leave
sub
push
stos
loope
fldl
jmp
in
pushf
sub
loope
mov
sbb
mov
jmp
push
pop
stos
aas
mov
mov
or
mov
repz
cmp
dec
ljmp
xchg
int3
dec
sub
xlat
test
cmp
adc
lret
sarl
sbb
in
int
fisubrs
pop
aaa
push
mov
sub
int
stc
js
test
outsb
adc
pop
pop
leave
movsl
xlat
cs
loop
call
fmull
outsb
ret
into
inc
push
addr16
cmp
int
dec
fcmovu
xor
enter
jp
sub
and
jmp
jbe
pop
add
push
pusha
mov
and
icebp
add
fimuls
sar
in
sub
test
push
or
mov
and
sub
sub
push
aad
insb
adc
push
cmp
movsb
sub
or
sub
test
imul
push
jb
pop
imul
movsb
lea
out
dec
pop
mov
in
jmp
loop
pop
enter
pushf
mov
mov
movsl
arpl
call
ljmp
xchg
sub
and
js
in
dec
push
jmp
push
dec
jp
test
inc
ljmp
ljmp
jo
mov
daa
pop
mov
sbb
mov
out
lret
mov
popf
dec
loopne
cli
cli
pop
mov
or
sbbl
pushf
jne
mov
popf
add
sub
sbb
add
inc
inc
jp
mov
cmc
roll
test
inc
in
or
dec
pop
push
fwait
outsb
sbb
cli
and
mov
pop
mov
jo
push
stos
cmpsb
scas
or
leave
movsb
pop
cmp
mov
leave
insl
pop
rcrl
sahf
push
lods
dec
dec
in
or
or
mov
aad
cmp
clc
adc
js
cmp
and
and
adc
repz
jmp
and
cltd
out
into
clc
mov
xchg
adc
aam
lret
ja
std
sbb
sub
ljmp
mov
and
xor
sub
add
push
mov
stos
push
dec
scas
mov
and
int3
dec
push
dec
loop
mov
lret
mov
fcmovu
sub
in
push
mov
enter
in
and
inc
pop
insb
mov
lods
scas
push
cmpsb
cwtl
insb
cmp
add
loope
jmp
movsb
test
shll
enter
or
push
sub
or
pushf
dec
mov
rclb
sbb
cli
fcompp
xchg
iret
jmp
fldt
nop
cli
insb
fldlg2
loope
cltd
dec
add
dec
pop
add
pop
test
pop
mov
lods
dec
inc
push
ljmp
imul
adc
lds
movsb
push
into
ljmp
rcr
dec
mov
rcr
pushf
mov
dec
inc
call
outsb
sahf
sti
cltd
and
mov
mov
fwait
nop
sahf
mov
fimull
mov
mov
dec
movsb
pop
cld
dec
mov
movsb
mov
lea
cltd
out
pop
cmp
outsb
mov
insb
clc
xchg
xchg
fisubrl
or
call
sub
test
shrb
mov
lret
sub
and
sti
ret
jns
adc
xorb
rorb
sub
mov
pusha
sub
push
stos
test
xchg
scas
cwtl
leave
inc
cmp
call
mov
gs
or
in
ja
xorl
repz
mov
dec
lods
sub
xor
mov
mov
mov
lea
pop
popa
arpl
dec
je
jmp
call
outsb
sub
xchg
or
sub
icebp
mov
sbb
sub
lcall
stos
xchg
popa
sub
lods
imul
in
es
xchg
inc
repz
lret
call
mov
stc
into
sub
or
mov
mov
pop
xchg
js
mov
mov
stos
cmc
mov
mov
adc
push
sub
scas
sbb
dec
sahf
ljmp
add
inc
dec
adc
sti
fwait
imul
shlb
clc
xorl
add
test
imul
push
jecxz
pop
fildll
pop
push
pop
hlt
cs
pusha
ja
out
rclb
sahf
adc
fstpt
push
int
loop
xchg
jp
dec
jmp
jmp
dec
loopne
mov
lods
add
ja
cmp
or
jmp
dec
in
push
cmpsb
popa
sub
into
jne
in
dec
mov
neg
and
and
cmpb
test
mov
insb
mov
jge
xor
repz
and
movntq
out
imul
inc
jmp
add
stc
or
clc
dec
stos
icebp
mov
fwait
cmpsb
stc
lahf
and
pop
mov
pop
xchg
push
fsubrl
dec
mov
dec
pop
imul
enter
add
cmp
xchg
fisubrl
stos
or
pop
clc
jns
sbb
sub
fimull
push
mov
mov
jl
out
cmc
push
jmp
mov
add
pop
loope,pt
ljmp
test
in
mov
dec
lret
sbb
fcmovnb
subb
lahf
int3
sub
sbb
mov
jne
int3
cwtl
nop
jns
sti
inc
into
movsb
iret
imul
xchg
xor
and
arpl
mov
in
mov
jne
shrl
jg
sbb
mov
mov
pop
iret
stos
cs
in
stos
stos
push
cmpsb
pop
mov
push
out
leave
in
ljmp
jle
push
inc
mov
xchg
jecxz
out
hlt
sub
fiadds
mov
cmpsl
sub
mov
lods
cmpsl
sub
popa
add
xor
adc
outsb
lea
dec
imul
push
mov
xor
and
ljmp
sub
or
dec
cld
ljmp
stos
xlat
test
adc
imul
mov
sub
mov
or
mov
dec
fwait
sub
push
in
test
in
sub
mov
out
ret
mov
inc
sub
lods
in
sub
pop
loopne
mov
and
mov
mov
pop
outsb
test
testb
sbbl
cltd
lods
adc
nop
dec
paddw
jle
or
xchg
dec
xor
and
xchg
add
lods
enter
mov
test
loope
bound
sbb
sub
loop
mov
dec
fs
fldcw
cmp
loop
dec
test
out
das
fnstenv
gs
lea
sub
sub
mov
mov
mov
into
cs
stos
or
push
lcall
call
sti
or
out
or
popf
cwtl
jp
sti
jne
xchg
xor
jp
mov
stos
hlt
pop
adc
clc
pop
stos
dec
test
scas
jbe
rolb
and
pop
pop
pop
daa
inc
jp
adc
addr16
push
pop
xor
inc
clc
addr16
cmp
xchg
stos
push
lret
push
movsb
jge
insb
ret
adc
sub
or
loopne
test
int3
in
jp
jns
cli
leave
out
push
nop
iret
xlat
xor
out
jg
and
cld
outsl
xor
in
fs
popf
test
and
scas
sub
dec
leave
stos
jbe
xchg
mov
mov
sbb
hlt
jns
xor
int
and
fdivrs
mov
push
int3
and
cmp
fcoml
push
rcll
scas
or
cmp
mov
and
icebp
dec
push
imul
push
imul
mov
cmp
xchg
mov
cld
aas
bound
add
dec
mov
mov
mov
mov
jno
ss
mov
mov
pop
or
mov
nop
or
lds
add
push
into
pop
inc
sarb
movsb
in
scas
dec
fidivs
in
out
sbb
dec
and
mov
adc
sbb
sub
mov
mov
cmp
or
mov
pop
sub
sub
outsl
and
scas
or
push
mov
mov
iret
ret
sbb
imul
jne
pop
xchg
js
stos
cmp
jno
in
cmp
loopne
pushf
loop
dec
cs
sub
js
or
out
lods
outsl
cli
sub
nop
dec
xchg
mov
push
sbb
cmp
jge
js
test
js
push
cli
js
add
jge
js
imul
popf
test
push
addr16
push
rol
lcall
cmp
stos
dec
fwait
incl
loop
rorl
adcl
sub
out
adc
out
jecxz
js
stos
cld
imul
jb
std
in
xor
out
test
shlb
pop
jge
stos
or
dec
lock
enter
push
dec
stos
cmc
jmp
xchg
jmp
loope
movsl
imul
call
jle
out
inc
jg
xchg
push
xor
stos
mov
in
mov
mov
mov
imul
dec
subb
ljmp
mov
rcrl
scas
gs
in
push
pop
sub
push
and
pop
in
lods
fldt
push
mov
sub
push
or
pop
fadds
ljmp
dec
dec
js
cmp
cli
mov
shrl
lret
out
dec
je
fstps
mov
les
test
leave
sbb
loopne
push
imul
in
imul
dec
cmp
mov
movsl
movsb
sub
xchg
dec
xchg
and
imul
ss
and
inc
jge
or
in
jns
int
sub
or
or
mul
mov
lods
int
pushf
testb
imul
mov
stc
jbe
xlat
stos
sub
jns
xchg
sub
int3
or
jmp
or
sub
jns
outsb
out
mov
out
sbb
lret
mov
cli
or
in
fists
sub
push
mov
inc
sub
pusha
jecxz
jae
cltd
movsl
rcrb
lret
inc
or
jp
mov
inc
mov
rcrl
test
js
cmpsb
movsl
fldt
add
xlat
shrb
out
or
sti
mov
sbb
int
imul
js
cmp
push
jo
dec
mov
jne
lahf
mov
int3
xchg
push
int
or
jo
jns
push
les
cwtl
jne
cld
mov
cmp
ret
test
dec
inc
nop
cwtl
or
fldcw
sbb
arpl
leave
sbb
icebp
jnp
push
cmp
mov
mov
int
lcall
push
ds
movsb
jo
imul
or
xor
fwait
jl
fsubrl
gs
ret
fwait
in
or
fisubl
les
jnp
in
mov
and
xchg
mov
scas
lods
lds
ja
shll
loop
es
lods
mov
cmp
in
lods
leave
stos
shrb
test
lret
insb
cmpsl
andl
leave
movsb
and
aas
mov
push
mov
orl
and
sub
lods
and
rcr
call
sbb
out
lods
lds
dec
push
add
orl
shr
pop
push
adcb
mov
leave
mov
call
ror
jl
std
cmp
cmp
add
jnp
jg
adc
mov
call
lods
lea
jge
in
jmp
mov
push
ret
mov
fisubl
pop
fmuls
xlat
mov
ret
fcomps
arpl
mov
mov
inc
ljmp
xchg
push
fnstsw
outsb
jne,pn
push
sbb
in
xchg
pop
and
divl
call
xchg
jnp
mov
scas
sahf
in
and
js
xchg
dec
in
into
popf
popa
sub
jle
or
scas
vmread
mul
cmp
out
outsl
jns
xlat
js
sbb
push
cmp
cli
in
shrl
ret
sub
fidivrl
insb
ror
ret
lods
sub
xor
sub
adc
scas
call
not
mov
lods
stos
sarb
call
jp
ljmp
loope
leave
scas
ljmp
inc
jne
inc
push
insl
iret
mov
inc
add
and
bound
mov
cmp
mov
cmpsl
sub
in
in
fisubl
cmp
add
lret
lret
cmp
sub
stc
outsb
jl
mull
leave
and
xor
jnp
mov
mov
pop
cld
scas
loop
fwait
inc
cs
xor
or
xchg
cld
cltd
imul
mov
fldenv
cld
stos
push
xchg
jge
cli
pusha
in
pop
inc
imul
mov
popf
fldln2
in
fldenv
insb
stos
out
xor
fiaddl
fcmovu
in
mov
mov
cmp
or
lret
lret
nop
ljmp
jecxz
pop
jno
loopne
or
aam
icebp
push
adc
lret
and
or
xchg
shrb
out
or
ror
mov
mov
mov
mov
add
or
jmp
stc
or
pop
rcrb
in
cmp
test
push
mov
pop
outsb
mov
pusha
ds
imul
jo
jmp
insb
adc
jl
fidivl
std
repz
ret
lods
sub
adc
out
adc
mov
dec
pusha
hlt
popa
sub
mov
loop
cld
mov
ret
in
cmp
inc
enter
mov
ret
jnp
xchg
stos
in
jmp
pop
jmp
lret
stc
call
lods
dec
sub
sbb
stc
decl
and
xchg
lret
sbb
fyl2x
dec
mov
cli
sub
int
and
sub
stos
in
mov
scas
cli
sbb
dec
jmp
lods
sbbl
or
push
pushf
inc
sub
insb
fsts
in
pop
pop
jge
mov
out
dec
les
nop
cmp
mov
std
int3
push
sahf
popf
hlt
in
cmpsl
mov
sahf
int
loope
or
inc
ret
lea
in
int
fwait
or
or
in
xchg
fwait
aad
fwait
scas
cmpsb
fwait
pop
orb
xchg
mov
dec
xor
mov
mov
mov
in
or
xchg
shll
mov
mov
mov
mov
lods
dec
pop
mov
pusha
cmp
dec
imul
push
cltd
or
cli
inc
sub
xchg
cmc
stos
div
int
dec
mov
int3
mov
and
ja
add
mov
mov
lods
imul
sbb
mov
out
stos
ljmp
push
out
dec
mov
adc
inc
push
pop
inc
outsb
dec
add
mov
bound
add
push
mov
or
fwait
xor
rol
test
lds
fbld
xchg
test
sti
sub
adc
push
insl
inc
into
sub
dec
mov
inc
and
push
in
in
dec
push
scas
push
dec
sub
xchg
sub
mov
adc
pusha
jmp
sub
ljmp
jmp
xor
test
dec
subl
mov
in
lods
stos
push
test
movsl
leave
mov
shrl
fsubs
das
push
aam
jmp
test
cmp
mov
pop
mov
jp
cmp
sub
push
jo
mov
pop
std
leave
ljmp
or
pop
lret
out
jmp
pop
mov
mov
pop
out
cmp
push
push
pop
mov
lods
adc
xchg
pop
lret
fnstcw
pushf
mov
std
pop
or
push
lds
dec
cmp
mov
sbb
das
inc
adc
inc
nop
cld
mov
mov
xor
push
sub
sbb
aaa
out
dec
xor
pushf
hlt
cmp
push
or
mov
fdiv
lds
pusha
inc
sbb
les
and
hlt
test
jb
test
arpl
pop
test
orb
dec
xor
lock
enter
mov
xor
out
test
sub
fcoml
jns
aaa
xchg
pusha
movl
pushl
lea
jmp
mov
add
call
stc
mov
test
clc
pushf
clc
cmp
pushf
jmp
mov
ret
ret
das
jp
or
jb
adc
sbb
mov
aas
imul
and
jae
in
iret
clc
hlt
jmp
sbb
add
lock
imul
cmp
pop
push
popa
movsb
pop
movsl
push
jl
loop
hlt
ljmp
or
inc
or
sbb
in
sti
mov
jnp
add
aas
and
push
lods
or
pop
mov
or
xchg
push
and
fnstcw
jmp
popa
incl
shr
adc
add
pusha
movl
pushf
push
pushf
pushl
lea
jmp
test
repnz
jmp
lea
je
bswap
mov
call
mov
bswap
sar
jmp
sbbb
mov
adc
push
sub
cmp
and
subl
repnz
dec
in
nop
mov
cmp
pop
repz
enter
and
shll
sar
add
andl
push
lret
xchg
pop
mov
pop
popa
lcall
fidivs
dec
cwtl
jl
push
xchg
xorl
shl
imul
fcoml
xchg
and
xor
and
and
mov
scas
sbb
stc
pop
aad
push
gs
lds
cld
cmpsl
sub
lahf
add
sub
cmp
jecxz
inc
mov
lods
out
pop
negb
xor
add
aaa
xor
jae
pop
and
jl
jp
cmp
adc
push
xor
mov
nop
pop
sti
dec
mov
call
xlat
dec
outsb
xchg
pop
mov
rorb
pusha
jmp
mov
leave
jmp
out
in
push
jl
add
bnd
push
test
push
fcom
xchg
mov
inc
and
int3
js
aad
lods
cld
nop
or
xchg
lods
into
lock
fisubrl
popf
cmp
jmp
mull
stos
inc
aas
xor
push
ss
test
push
xchg
and
pop
testl
scas
movsl
sub
bound
and
mov
rcl
pop
mov
in
rol
in
mov
aaa
jp
cmpsl
pop
test
xchg
cld
push
pop
mov
push
mov
push
pushl
popl
push
pushf
pushl
ret
jmp
add
pushl
add
add
add
add
add
add
add
imul
fsubrl
add
add
add
add
imul
mov
bound
cwtl
test
xor
inc
aas
mov
sbb
and
jl
push
sub
rep
ret
pop
popa
ret
insl
cmp
dec
mov
cmp
lret
and
jbe
and
or
cmp
mov
push
inc
es
stc
test
js
lods
daa
in
dec
xchg
sub
data16
cld
push
sbb
das
lods
rorl
inc
shl
movsb
jp
dec
lods
scas
fwait
mov
dec
popf
gs
fmul
sar
je
or
pop
je
data16
ljmp
in
lock
dec
and
loopne
stos
push
shll
inc
add
std
das
popf
loopne
sub
insl
cmpb
or
imul
int
sbb
cmp
xchg
mov
mov
xor
icebp
popf
push
pop
cmp
or
xchg
dec
pop
ret
lret
jno
aaa
nop
movsb
pop
stc
insb
push
stos
sbbb
jae
mov
and
lock
shl
dec
push
or
in
mov
stos
pop
cmp
rol
subb
cmp
mov
aas
or
imull
jg
mov
insb
push
xorl
rcl
xchg
or
lret
enter
sub
es
add
stos
mov
call
mov
mov
movsl
or
ret
pushf
jb
in
mov
pushf
mov
xchg
pop
jl
mov
scas
lret
mov
or
inc
je
xor
jb
dec
insl
mov
bound
insl
xor
adc
and
fistpll
inc
inc
jno
in
inc
adcl
pop
cmpsb
mov
sbbb
lock
inc
pusha
int
out
repnz
ljmp
push
adc
add
sub
sub
aas
icebp
push
inc
out
add
leave
lea
jo
mov
push
mov
xchg
hlt
hlt
mov
in
dec
idivb
sbb
les
aaa
jecxz
xchg
mov
fwait
xchg
pop
and
popf
jns
in
out
jbe
aad
xchg
insb
mov
jge
fwait
jmp
pop
mov
sub
repnz
insl
cmp
in
and
mov
shrl
das
fcoml
andb
push
ss
mov
dec
add
pop
mov
pop
fildl
adc
sbb
xchg
and
jne
nop
lahf
add
jb
mov
icebp
lock
sbb
jle
paddb
sbb
push
in
scas
mov
imulb
lods
sub
call
add
pop
call
popf
js
mov
lock
xchg
je
mov
pop
xchg
inc
mov
mov
scas
shrb
add
cmc
mov
jp
sbb
popf
adc
adc
movsl
dec
dec
mov
es
lret
add
jo
jno
lahf
lea
pop
jae
cmp
mov
leave
loopne
inc
arpl
mov
fildll
cwtl
sub
jg
mov
mov
cli
ret
xor
xchg
inc
fstpl
out
popf
or
call
cltd
aas
mov
jns
je
sti
dec
xchg
dec
xchg
pop
push
mov
push
jbe
std
sti
addr16
dec
push
xor
mov
fstps
mov
pop
inc
inc
or
popa
mov
testb
test
fsubl
push
and
xor
leave
leave
mov
fsts
loopne
in
repnz
test
jo
push
shrl
insb
out
jne
cmc
xor
and
pushf
bound
push
in
mov
insl
cs
pusha
sub
mov
cmpsb
or
jg
nop
fisubrl
dec
fwait
sub
roll
cmpsl
fcmovu
jp
and
popf
mov
clc
rolb
pop
sub
dec
sbb
cmp
hlt
jmp
sbb
cltd
cmc
imul
sub
mov
inc
xor
jg
pop
out
sbb
jle
arpl
out
movsb
mov
mov
cmp
or
adc
imul
cmp
xchg
xor
jo
imul
movsl
shlb
fwait
mov
pop
sub
into
or
pop
into
inc
in
mov
inc
mov
out
mov
sub
xchg
or
mov
add
cmpsb
pop
aas
mul
or
es
sub
adcb
inc
jno
test
mov
or
sub
mov
in
push
cmp
shrb
inc
jbe
inc
rclb
daa
push
jge
in
push
into
pop
ss
insl
hlt
xchg
sub
cmp
mov
inc
rclb
loop
sub
icebp
aaa
loop
push
rclb
sti
outsb
int
sarb
in
fbstp
cmpsl
pop
push
aad
mov
sbb
xor
orb
xchg
jae
in
mul
xchg
out
outsb
mov
cmp
push
ds
ja
pop
sbb
inc
scas
iret
push
into
push
xchg
lea
dec
fnstenv
dec
xor
xorb
sub
cmp
test
insl
pushf
jnp
push
rcrl
mov
gs
or
mov
addl
subl
data16
arpl
shlb
sub
and
jo
mov
daa
and
jno
jno
insb
push
adc
mov
ret
fmull
xor
stc
and
test
test
jmp
lock
fadd
push
sub
pop
mov
imul
adc
dec
xchg
jecxz
sub
adc
add
cmp
jmp
xchg
lods
adc
jnp
ds
or
shlb
add
insl
test
add
mov
popa
mov
or
fs
pop
push
adc
scas
imul
sahf
lods
xchg
movsl
mov
jae
test
or
add
cmpsl
fnstcw
xor
jo
arpl
mov
or
cmc
jbe
jae,pn
gs
call
xchg
adc
cmp
inc
push
sub
cmp
out
xchg
jne
sbb
push
cmp
and
inc
aam
repz
sti
mov
lock
push
jl
dec
div
mov
mov
add
mov
add
and
sbb
mov
nop
and
sarb
jecxz
scas
pop
daa
imul
out
mov
movsb
stos
hlt
push
pop
mov
mov
inc
sub
add
das
inc
outsl
pop
mov
pop
into
dec
mov
test
jg
rcrl
dec
adc
mov
sbb
movl
inc
fwait
repz
xchg
cmp
lahf
adc
hlt
test
push
mov
arpl
sti
cmpsl
nop
fwait
test
sbb
scas
ja
jp
imul
pop
into
clc
aas
loopne
mov
xor
mov
mov
mov
sub
sub
daa
lods
xor
aaa
sbb
adc
out
mov
call
in
into
stos
test
push
dec
mov
xorb
sub
cmp
inc
add
fistl
insb
push
fistpll
movsb
je
ficomps
fwait
int3
mov
xor
sbb
call
mov
popf
in
jecxz
lea
sub
data16
push
shll
inc
jae
adc
shlb
inc
scas
je
or
fadd
pop
mov
xchg
popf
setb
xor
popf
pushf
std
adc
clc
mov
jmp
arpl
add
jno
hlt
aad
xchg
mov
int3
inc
pop
lock
or
jmp
adc
add
in
mov
fucomip
xor
xchg
sbb
dec
subl
popf
setge
je
fdivrs
setg
int3
in
dec
stos
mov
lock
mov
xor
in
or
lods
scas
popa
pushf
jo
rorb
ret
mov
rcl
int3
lock
pop
sub
enter
sbb
jmp
aas
scas
ds
bound
push
push
and
lahf
xor
inc
or
scas
rcr
int
rcr
fbld
fwait
jo
push
das
pushf
cmpb
and
mov
jns
scas
daa
sbb
adc
mov
outsl
mov
aad
pop
xor
stc
aas
enter
add
dec
cld
jl
gs
test
or
mov
daa
aaa
dec
fdivl
test
popa
int3
cmp
add
or
mov
int
or
js
sbb
xor
inc
inc
popf
push
sarb
out
cmpsb
mov
in
pop
movsl
aaa
mov
mov
add
add
arpl
pop
lods
subl
je
cmp
lock
stos
jp
jo
push
out
cmp
sbb
adc
dec
dec
xor
insb
sub
lahf
lds
rorb
and
mov
frstor
sub
xlat
sub
cmpsl
mov
aas
mov
rcll
or
mov
pusha
push
jp
in
push
xchg
shrl
rolb
push
add
jo
outsl
adc
push
cmpsl
sbb
lcall
mov
jl
iret
int
sbb
lret
adc
xchg
or
popl
sub
out
mov
jo
das
add
jo
out
inc
lret
mov
push
rorb
cwtl
int
xchg
out
cltd
sub
scas
adc
clc
cmpl
or
mov
jns
xchg
sub
mov
xchg
ret
cld
fcomps
nopl
sub
add
sub
out
out
into
cltd
xchg
mov
fdivrs
pop
pop
adc
mov
sbb
rclb
insb
or
ret
rorb
pop
lahf
ret
add
add
mov
dec
inc
jnp
insb
push
shrb
jp
aam
xchg
push
sbb
push
fstl
lahf
pop
push
push
shrb
stc
xchg
or
inc
loope
push
mov
sbb
push
xor
lock
dec
popf
pop
dec
cs
and
mov
shrb
sahf
scas
xor
adc
fisubs
shll
dec
sub
sbb
cmp
mov
cmc
scas
xor
dec
mov
cmp
xchg
dec
pop
adc
jecxz
xor
jg
mov
stc
sub
dec
test
sbb
imul
lds
push
mov
stc
je
je
or
dec
fmul
mov
pop
and
fiadds
leave
cmp
rcrl
jg
push
dec
mov
loope
popa
movsl
add
in
push
imul
add
int3
mov
lods
xor
cmp
and
inc
ficompl
push
std
lods
out
pop
adc
pop
sub
cmpsl
pop
mov
in
inc
sbb
shlb
aad
icebp
pop
imul
adc
jecxz
cmpsb
insl
cmp
adc
scas
adc
add
insb
mov
fistl
mov
test
push
test
xor
outsb
add
scas
inc
inc
xor
dec
rorl
push
fnsave
pusha
inc
mov
cmp
jnp
sub
jg
pop
popa
mov
push
xor
pop
rcrl
call
stos
pop
mov
jle
std
add
mov
fsubrl
and
xchg
pop
cltd
pop
fwait
push
add
add
pushf
lea
ja
push
push
push
lea
jmp
mov
mov
pushl
popl
pushf
movzbw
mov
pop
movl
mov
push
jmp
or
push
call
adc
bound
sbb
xor
jno
or
dec
jg
dec
rcl
jl
cmp
cmc
out
add
insb
stc
fisubrs
adc
add
mov
jecxz
and
jg
movl
push
pushf
lea
jmp
test
jmp
cmp
pushl
popl
pushf
pusha
cmp
jmp
lods
or
xor
clc
not
bt
not
rol
rol
sbb
sbb
not
and
rcl
push
rol
neg
push
jmp
cmp
jg
adc
scas
dec
stc
or
jmp
pop
je
adc
addr16
sub
push
scas
add
push
sbb
test
out
data16
xchg
cmc
add
into
test
testb
test
jno
push
inc
mov
enter
fnstenv
add
aaa
sub
lea
test
push
ja
sub
lret
shlb
xchg
insl
pop
jg
jp
daa
cmc
adc
leave
mov
sbb
out
pop
loopne
aam
mov
daa
push
in
or
inc
dec
hlt
scas
fcomps
push
loop
insb
popa
jns
fs
out
xchg
loope
mov
mov
push
fadds
cwtl
pushf
mov
push
pop
sbbl
and
adc
cmp
lahf
popf
das
add
push
gs
jecxz
sbb
xchg
pop
fwait
inc
push
cmp
sub
lock
stos
jp
lds
mov
bound
add
data16
in
ds
addr16
or
push
in
or
out
push
lock
and
push
inc
pop
cmp
mov
jns
pop
push
mov
inc
jbe
ds
in
jp
mov
dec
jno
out
lret
sbb
xchg
nop
outsl
jbe
aas
ror
cmpsb
cmp
rcl
mov
xor
mov
lret
call
insb
jg
ret
mov
scas
mov
cmp
popa
scas
jge
push
mov
enter
mov
push
cltd
mov
add
test
jo
and
stos
dec
gs
mov
pop
lcall
jge
add
mov
xor
mov
add
mov
add
add
bt
call
pushf
pusha
jmp
push
mov
daa
mov
dec
sti
sub
lock
test
testb
push
lret
scas
aas
loop
sub
imul
jo
sub
inc
push
jb
inc
push
in
bnd
jbe
aam
inc
push
les
fldt
xor
je
repz
cmpsb
cs
cltd
cmc
or
ja
or
notl
cmp
subb
mov
out
sbb
cmp
push
push
sbb
jno
inc
ja
xor
les
negl
orb
mov
push
negl
das
add
push
dec
addb
or
or
mov
mov
idiv
jmp
mov
bound
or
stos
lods
lds
sbb
mov
and
mov
push
push
or
dec
mov
xor
lea
xchg
adc
adc
mov
out
pop
mov
pop
push
jg
pop
popf
adc
lea
movw
movb
pusha
call
xchg
cwtl
packsswb
out
xor
leave
xor
aas
pusha
ret
int3
fsts
add
inc
mov
dec
into
cmpsl
or
shr
or
mov
imul
pop
lds
std
pop
add
or
xchg
repz
jl
dec
mov
or
adc
jne
popf
je
in
lahf
sbb
cmpsl
stos
ret
clc
lods
xchg
pop
popf
mov
movl
jmp
pushf
lea
call
call
int3
dec
lock
dec
into
inc
dec
lock
leave
mov
lock
lock
dec
lock
dec
inc
lret
leave
dec
lock
dec
lock
push
dec
into
lock
leave
lock
int3
dec
lock
inc
leave
push
dec
dec
dec
lock
dec
lock
push
movl
shlb
or
out
add
popf
outsb
mov
jmp
jno
sub
xor
js
and
pop
mov
int3
lea
mov
inc
jb
or
insl
push
sti
idivl
outsl
fldenv
pop
sub
fwait
mov
xchg
add
pop
lods
jl
mov
or
jbe
adc
mov
mov
inc
outsl
pop
xchg
mov
int
fists
cmp
ret
aam
xchg
pop
pushf
out
mov
add
add
add
pop
int
add
add
add
sbb
add
xchg
sbb
add
mov
add
pop
add
add
add
adcl
sbb
add
pushf
lea
jne
pusha
stos
pusha
mov
pushf
pushf
lea
jmp
pushl
mov
pusha
pushf
pushf
lea
jmp
lea
jae
stc
clc
xor
call
call
cmc
or
pusha
pusha
call
shl
push
bt
bts
neg
not
mov
movsbl
cmp
sub
push
lea
push
cmp
mov
lea
adc
push
xchg
push
lea
sbb
mov
btr
shl
or
sub
push
bt
neg
mov
bt
jmp
popa
mov
sub
xlat
adcl
add
push
mov
es
in
inc
xor
inc
add
push
into
mov
push
mov
out
or
jp
lock
sbb
add
inc
and
decl
xchg
dec
and
add
and
not
push
mov
movl
mov
pusha
pusha
mov
mov
pushf
pushf
movw
mov
pushl
ret
xlat
sbb
ret
aam
adc
inc
push
outsb
test
into
iret
je
jmp
sbb
mov
iret
inc
pushl
inc
out
dec
stos
mov
mov
out
fsubr
inc
stc
sbb
loope
lcall
cmp
shrl
sahf
loopne
lahf
setle
movb
mov
pushl
call
lds
in
pop
mov
add
xchg
std
data16
and
jle
or
and
adc
cmp
lock
dec
cmp
out
mov
shr
sbb
jb
pop
cwtl
jae
adc
ds
repz
cmp
sbb
cwtl
imul
dec
jle
mov
xchg
fcoms
lret
mov
into
aaa
sub
hlt
pop
jg
movsl
fsubrs
je
or
xchg
pop
popa
push
std
sub
jmp
call
movw
mov
jmp
jmp
cmp
jl
push
mov
sbb
ror
sub
sbb
data16
cmp
inc
popa
fcmovbe
aaa
in
xor
xor
sti
repnz
mov
mov
push
int
stc
dec
mov
out
pop
mov
push
ljmp
mov
dec
lcall
dec
popw
jb
fcomi
pop
into
flds
xchg
std
push
subl
pop
sbb
push
cmc
xchg
int
imul
xchg
pop
popa
lcall
lock
add
and
pusha
mov
daa
push
cs
mov
xchg
jp
xor
and
push
or
repz
div
xor
test
mov
notb
mov
jl
loopne
mov
sub
or
aaa
call
xchg
cmp
in
cmpsb
mov
adc
imul
in
jo
pop
pop
adc
int
xchg
dec
andb
pop
nop
jecxz
pop
xchg
repnz
stc
push
dec
pop
inc
mov
js
push
inc
dec
nop
mov
push
cmp
push
inc
scas
ja
add
scas
inc
or
inc
shl
stos
les
ret
cwtl
pushf
movsl
pop
outsb
aas
dec
int3
sub
test
mov
jl
sbb
xchg
sub
inc
jo
cmpsl
xchg
pop
pusha
mov
and
aad
lea
jne
pusha
stos
pushl
push
mov
pushf
lea
jmp
shll
ljmp
pop
jnp
scas
cmp
mov
addb
xor
pop
xchg
add
inc
movl
pop
cmp
xor
imul
and
pop
adc
jns
ljmp
into
je
fists
mov
jle
ds
and
sbb
xlat
xor
std
div
jnp
or
push
test
movsb
and
dec
push
scas
mov
pop
arpl
loope
add
jecxz
add
xchg
movsbl
not
mov
lea
lea
call
mov
sbb
mov
dec
inc
adc
sub
xchg
sarl
lcall
es
cwtl
test
scas
bound
lods
pop
dec
cmp
in
idivb
in
inc
mov
int3
sbb
les
mov
sbb
push
aam
mov
outsl
mov
and
imul
mov
mov
cmc
pop
out
lods
lahf
aad
mov
out
stc
mov
cmp
jb
movsb
add
fsts
dec
pushf
mov
or
lea
jp
jne
clc
jmp
inc
lea
pushf
inc
inc
sub
rcl
shl
xchg
daa
shl
jmp
mov
push
pushl
ret
or
ret
or
push
mov
es
aas
inc
pop
ficompl
mov
adc
popf
es
fs
pushf
in
adc
mov
mov
in
jb
jo
mov
outsb
jno
xchg
ljmp
xorl
out
in
repnz
mov
les
cwtl
add
xchg
mov
inc
push
sbb
scas
dec
pop
adcl
testl
insl
fdiv
std
sbb
adcb
mov
sub
mov
cmpl
jmp
test
mov
push
jp
adc
mov
xor
scas
mov
aam
xor
scas
pop
inc
pushf
shrb
sbb
push
ret
push
in
add
mov
push
inc
rorl
cmp
inc
pop
adc
leave
push
xor
and
inc
mov
lahf
aad
scas
push
mov
jno
cmpsb
xor
pop
mov
jl
mov
ljmp
bound
insb
idivl
addb
mov
or
xchg
inc
jp
movsb
and
or
ds
push
ror
pop
mov
aad
ljmp
xchg
and
lods
mov
loop
cmpsb
jg
aas
mov
dec
insl
jne
sti
jb
repnz
jl
mov
int
and
jge
repz
cltd
or
adc
aam
jecxz
pop
fs
daa
jg
testl
push
arpl
sbbb
inc
aam
cmp
jge
push
cwtl
hlt
jo
fisttpll
stos
hlt
or
outsb
pop
pop
dec
stos
xor
aas
arpl
nop
roll
lea
push
dec
cmp
jo
pop
inc
xor
sbb
or
sbb
cmpsb
mov
ret
loop
jne
mov
fwait
jnp
std
jecxz
testl
jns
shrl
fnstsw
xchg
clc
int3
push
and
push
jnp
imul
xchg
test
mov
lcall
cltd
inc
insb
loope
fildll
movsl
and
test
sub
lcall
dec
xlat
lea
mov
stc
add
xchg
pop
fs
lock
mov
lea
je
test
pusha
add
mov
lea
jmp
cwtl
stos
hlt
ds
std
xor
cmpsb
push
cli
and
jecxz
cmpsb
and
mov
xlat
mov
cmp
push
push
lcall
stos
cmpsl
lock
arpl
mov
push
mov
sbb
xchg
inc
push
mov
inc
fs
aad
mov
mov
fdivrs
mov
adc
xchg
stos
out
cli
or
mov
fwait
adc
into
cmp
imul
xchg
pop
addr16
lahf
movb
pusha
pushf
lea
call
pushf
lea
jae
pusha
clc
xor
movb
lea
call
jmp
shl
mov
setle
setle
mov
lods
movb
xor
pushf
rol
call
cmp
lea
pushf
lea
bswap
mov
pushf
pushf
mov
pushf
lea
ja
pushf
movb
lea
jb
test
pusha
pushl
cmpb
pushf
lea
jne
clc
lea
bsr
shl
mov
pusha
add
bt
bt
pushl
movzwl
lea
xor
shld
mov
clc
bt
add
jmp
push
stc
repnz
mov
lea
jne
not
movb
lahf
push
push
pusha
lea
jmp
mov
mov
pushf
push
mov
jmp
mov
jl
test
push
dec
shr
incl
shrb
adcb
or
xchg
stos
movl
xchg
push
std
xchg
sub
ret
sarb
cwtl
lret
jno
aam
cs
sub
and
hlt
cmp
jl
incb
mov
shr
sti
loope
push
add
testl
inc
cmp
sub
mov
inc
mov
shll
stos
ds
adc
sahf
push
insl
loope
add
jo
mov
sbb
and
call
jmp
push
jmp
mov
call
aad
and
cs
cwtl
loope
pop
addr16
pop
push
mov
adc
mov
push
sub
add
repz
dec
sbb
inc
sub
movsl
les
test
adc
push
pop
cmc
cltd
fmuls
adc
mov
insb
out
jbe
js
test
sub
pop
imul
call
test
sbb
mov
and
sahf
ret
inc
stos
pop
mov
cmc
fnop
mov
pop
lds
pop
adc
jecxz
jg
adcb
pop
inc
sti
add
adc
fisttpl
pop
mov
cmpsl
mov
xor
idivb
or
inc
or
pusha
out
fsubrp
or
test
dec
lods
js
cs
mov
pop
sti
xchg
pop
pop
aas
out
jecxz
mov
lods
mov
cmp
mov
dec
ja
or
aas
push
pop
addl
xchg
pop
push
ja
mov
adcl
dec
enter
lret
sahf
and
mov
push
mov
push
arpl
adc
call
push
fs
insb
and
lret
or
mov
add
push
mov
in
xchg
xchg
dec
scas
stos
sub
stos
sub
popa
and
pop
cli
lods
flds
mov
sarl
adc
fcmovu
cmp
sub
push
mov
lods
jmp
mov
loopne
jmp
inc
jno
add
pop
push
lods
xchg
pop
imul
std
inc
jbe
xor
push
imul
pushf
icebp
push
lods
les
mov
pop
jg
lods
scas
hlt
out
pop
jne
jne
sbb
lds
pushf
in
jbe
push
daa
fiaddl
push
cltd
pop
or
mov
pop
in
repz
mov
cwtl
fsubs
jl
adc
dec
aas
xchg
push
cwtl
popf
or
popf
xchg
pop
imul
arpl
sti
push
outsl
fiadds
fmuls
jp
shl
push
dec
cmp
or
cmpsb
pop
pcmpeqw
mov
out
fwait
loopne
clc
dec
test
out
xchg
push
cmp
push
jbe
sub
and
mov
sti
sbb
ret
imul
mov
sub
adcl
mov
sub
int3
cmp
cmp
push
jbe
jge
gs
shrb
lret
insl
mov
inc
adc
mov
int3
cmp
clc
cwtl
jl
mov
mov
xor
xchg
dec
outsb
and
or
icebp
and
sahf
mov
sbb
sbb
and
mov
add
decb
lds
das
sets
push
mov
mov
pusha
mov
bswap
pop
mov
call
dec
pusha
pushf
lea
jne
stc
not
add
mov
jns
cmp
pushf
call
pushl
not
stos
setno
call
sahf
push
outsb
nop
dec
push
cmpsl
dec
xchg
or
call
gs
sbb
xor
xchg
jge
shrl
mov
aad
fwait
movsl
mov
add
jo
leave
stc
fisubrl
loope
bnd
stc
pop
shrl
sbb
mov
mov
into
or
mov
pop
pop
dec
jmp
jo
aaa
jle
cld
pop
aas
xchg
pop
insl
push
scas
add
xor
mov
lea
pusha
mov
setno
jmp
popf
ret
mov
aaa
cmpsb
stos
xlat
ret
nop
ds
mov
test
es
push
test
sbb
into
dec
out
std
or
and
std
loopne
divb
mov
das
inc
cmpsb
xchg
push
in
in
pop
mov
imul
xchg
or
or
cld
clc
sbb
pop
adc
shll
dec
xor
jbe
std
xchg
pop
insl
out
mov
pusha
lea
jne
pushf
pusha
stos
pushf
pushf
pushf
lea
jmp
push
lea
call
push
pushl
jmp
movl
pusha
push
pushl
popl
push
mov
pushl
pushl
ret
push
cmp
pushf
lea
jbe
ror
adc
mov
sub
sub
shr
bt
mov
bts
adc
rcl
mov
jmp
insb
push
and
imul
mov
into
dec
int3
adcl
in
lret
ljmp
sub
sahf
mov
movsb
push
adc
gs
or
dec
adc
test
loop
xor
dec
dec
test
sub
into
push
lea
xor
cmp
pop
or
pop
lods
mov
insb
loopne
sahf
dec
jl
cmpsl
xor
stos
pop
test
in
mov
push
mov
adc
sti
jmp
aam
sub
xchg
fdivrs
lret
inc
and
das
dec
outsb
xrelease
data16
jmp
xchg
push
stos
inc
xor
in
je
adcl
ret
ljmp
cmpsl
lea
xchg
pop
push
dec
cmc
mov
jmp
fisubs
and
rol
fdivrp
push
icebp
sbb
dec
mov
pop
or
xchg
jmp
ret
in
test
xchg
pop
outsl
sub
sub
lock
out
cmpsb
mov
xor
loop
pop
jecxz
jl
loope
repz
xor
cmpsl
or
inc
push
daa
scas
lds
es
iret
out
or
jae
pop
shll
push
or
cs
sbb
xor
pushf
inc
jle
inc
mov
add
data16
es
mov
inc
jecxz
jb
test
negb
lcall
fisttpll
cmpsb
inc
dec
lods
fs
pop
outsl
test
scas
cmp
repz
jl
xchg
cmp
mov
push
fsubs
mov
insb
jle
push
cltd
add
mov
mov
adc
outsb
jo
push
add
scas
lea
shrl
repz
sarl
or
pop
popa
out
cld
add
jmp
movsb
inc
imul
stc
cmp
loope
jnp
cli
cltd
add
jnp
scas
lretw
lock
jno
sbb
lea
xchg
pop
outsb
das
fsubrl
setl
movzbl
mov
test
not
cmc
push
test
adc
pusha
sar
mov
clc
sub
mov
lea
pusha
jmp
jp
mov
add
jle
loope
aas
shl
test
push
inc
mov
push
sub
or
nop
scas
xor
in
mov
jecxz
imul
mov
push
mov
daa
jge
mov
adc
cld
sub
mov
jg
rcll
inc
cmc
mov
cld
push
mov
jbe
xchg
testb
pop
outsl
jle
adc
mov
pop
scas
imul
and
adc
jg
xchg
pop
jno
iret
jmp
xchg
xor
mov
cmpsl
stos
leave
loopne
sbb
pop
movq
push
xlat
mov
or
jl
mov
shlb
and
cmpsb
mov
cltd
jmp
push
jl
loopne
push
jbe
stos
lcall
scas
mov
xchg
and
xor
cltd
mov
or
mov
inc
cltd
mov
mov
je
nop
or
sbb
mov
cs
call
aaa
das
mov
jns
rcrl
sub
sahf
popf
or
lods
xchg
pop
jno
dec
xchg
pushf
pushl
mov
bt
pushf
dec
jmp
pusha
movb
adc
movb
mov
lea
call
call
sbb
add
mov
sub
pop
mov
aad
push
sti
and
sbb
mov
pop
or
cmp
aad
fstpt
pushf
xor
mov
push
adc
pop
jo
call
add
cs
lea
jae
jmp
movb
stc
cmp
call
lea
ja
mov
shl
ror
sub
push
sub
add
sub
mov
or
dec
inc
mov
bt
jmp
pushf
adc
mov
jmp
fisttps
or
jmp
icebp
cli
jno
imull
add
aas
ret
loope
sub
or
out
xchg
js
sbb
mov
int
xchg
movsb
add
push
mov
fwait
cmp
dec
jno
lret
inc
cli
xchg
into
xor
inc
cltd
mov
or
jmp
das
cmpsb
mov
xchg
pop
jo
mov
add
push
movl
push
movb
pushf
lea
jmp
lds
add
push
lds
sahf
inc
mov
int3
cmpsb
popa
push
aam
or
mov
mov
cmc
clc
mov
scas
movsl
stos
xlat
push
jae
rcll
sub
push
mov
adc
fdivrl
mov
jae
jge
jge
jmp
dec
dec
push
add
cmp
fs
je
not
lea
lea
jmp
xchg
jp
xor
shll
loop
mov
cmp
jo
fidivrl
add
sub
loop
or
sbbb
xor
sbb
lret
jb
xor
inc
sub
mov
sarb
sbb
mov
mov
mov
sub
gs
gs
xor
cs
insb
add
mov
and
fisttpll
sub
iret
or
pushf
or
sbb
leave
cwtl
adc
addr16
xchg
jp
pop
rcrb
scas
lret
call
lret
xchg
push
or
add
clc
daa
xor
lret
setbe
jb
pushl
mov
pushf
push
lea
jmp
lcall
mov
lea
adc
aas
dec
mov
xchg
mov
rcrb
shlb
jp
lcall
cmp
movsl
and
or
sarb
sub
in
and
lods
rolb
sub
roll
in
or
jbe
mov
pop
xchg
stc
or
imul
sti
mov
or
add
inc
pop
andl
ret
jns
cli
pop
out
jb
push
mov
mov
sub
rclb
fadds
add
popa
insb
inc
insb
insb
outsl
arpl
mov
mov
cmpsb
push
mov
repz
movsb
or
shrl
jbe
mov
cmc
imul
repnz
or
int3
scas
inc
jno
packssdw
pop
ja
inc
jae
or
sbb
lods
cmp
xor
fisttps
dec
sti
incl
mov
sub
push
cmp
mov
jge
cmp
push
dec
or
rcl
repz
lahf
test
lret
jl
lcall
inc
orl
mov
and
insl
xchg
xchg
pop
jne
add
sldt
test
bt
cmp
stc
add
sub
push
test
add
movb
pushf
pushf
jmp
fcompl
xor
xor
cmpsl
push
pop
stos
sbb
ds
push
les
outsb
lock
addb
push
pushf
int3
je
shrb
cmp
or
cmp
jl
mov
fnstcw
insb
jb
inc
icebp
pushf
add
fnstsw
inc
dec
lahf
int
popa
xchg
mov
sub
sbbb
cwtl
push
xor
shrb
add
dec
fldcw
cltd
pusha
imul
aaa
ss
xchg
mov
lods
mov
sub
add
ljmp
pop
or
xor
fidivrs
pop
je
push
fs
lea
je
call
je
mov
cwtl
push
jl
test
mov
inc
lret
aad
add
pop
pop
cltd
and
sub
xchg
adc
fwait
test
dec
and
in
pop
ret
mov
cmp
fadds
push
push
or
adc
cmp
mov
mov
rcrl
pop
aaa
dec
mov
jp
ds
pusha
lea
cmp
hlt
xchg
pushl
pushf
pop
lea
movl
call
call
lea
jne
rcr
movzbw
test
mov
rcr
sub
shl
stc
clc
mov
jmp
cmp
add
sub
cmc
clc
pushf
pushf
or
call
lea
ja
pusha
pusha
pushf
jmp
lea
jg
push
movb
pushl
popl
pusha
pushf
pusha
pushl
ret
lea
jae
push
mov
not
inc
jmp
pushf
movb
pusha
lea
call
jmp
sub
clc
pushf
cmp
pushf
or
pusha
lea
je
pusha
mov
pusha
mov
jmp
jmp
pushf
test
jmp
push
lea
call
pushf
jmp
call
xchg
roll
out
jl
lock
push
xchg
call
out
pop
rolb
daa
jle
test
daa
clc
pop
mov
jg
jl
xchg
push
cmp
out
hlt
jno
rcrb
cmpsl
and
mov
jge
or
jo
push
and
mov
pop
mov
mov
inc
scas
cmp
popf
xchg
push
aam
cmc
pop
fucom
xlat
cmp
lret
jp
mull
das
inc
aas
mov
js
mov
jg
mov
mov
rorl
enter
fwait
xchg
sahf
sti
pop
addr16
xchg
pop
jbe
sti
cltd
enter
adcl
pop
cmp
fadds
mov
scas
scas
imul
shrl
mov
xchg
into
aad
lahf
enter
sbb
push
and
iret
sub
bound
fildll
mov
mov
aam
in
mov
inc
cltd
push
mov
pop
jbe
pusha
hlt
pusha
push
movl
push
movb
pushf
movb
movl
mov
pushl
push
lea
jmp
out
insl
test
rol
hlt
inc
mov
sub
inc
in
adc
cwtl
negl
mov
xlat
lods
dec
add
push
and
push
pop
dec
mov
mov
out
or
sub
pop
cmpl
shll
insb
inc
scas
mov
push
sarb
push
shrl
imul
jb
insb
add
fsubs
cli
mov
aas
sub
sub
loopne
dec
and
push
push
push
adc
adc
add
lcall
int3
mov
dec
loop
movswl
jg
das
sti
xchg
xor
in
push
xorb
mov
push
fwait
jecxz
fwait
popf
mov
xor
or
add
lcall
push
aaa
or
adc
add
add
mov
mov
movb
mov
mov
mov
adc
or
jg
loop
push
movsb
mov
pop
and
mov
mov
push
push
inc
inc
mov
ret
lds
cli
cmpsl
les
subb
pop
dec
and
aad
pop
or
adc
dec
adc
int
iret
mov
out
call
call
int3
mov
inc
inc
lods
enter
sub
cmp
cmp
pop
js
push
cwtl
add
jle
mov
mov
dec
cmpsb
inc
dec
xlat
call
int
xchg
loopne
pop
shlb
adc
adc
push
in
mov
cmp
out
repz
dec
cmc
sub
rorl
test
fidivs
dec
mov
fidivl
inc
fwait
hlt
sbb
or
sti
shl
movsbw
bsf
mov
bt
bt
cmp
call
jmp
movl
pushl
lea
jmp
lea
je
cmp
btr
add
cmc
mov
call
mov
call
fldt
repz
bnd
mov
ljmp
push
ds
inc
gs
sub
sbb
pop
cmp
push
sahf
cmpsl
into
jnp
insl
cwtl
adc
movsl
add
push
jle
mov
icebp
dec
mov
jb
mov
pop
pop
mov
sahf
and
pop
mov
mov
jmp
add
push
dec
cmpsl
mov
int3
aad
or
jmp
xor
test
jl
sbb
pushf
sub
inc
add
pushf
sub
in
in
xor
int3
dec
xor
mov
inc
mov
push
ret
pop
sbb
pop
mull
leave
add
xchg
mov
jecxz
mov
stos
dec
or
fistpl
jl
xchg
cld
int
mov
pop
ja
xor
mov
sub
mov
push
inc
and
test
mov
aas
lock
cmpsl
das
addr16
dec
mov
cmpsb
test
fiadds
and
cmp
fisubrs
pop
jno
leave
lret
sbb
cmpsb
adc
cli
or
mov
jnp
imul
mov
jg
lds
push
mov
shl
and
mov
sub
pop
das
outsl
jmp
ja
fdivrl
sub
jge
add
cmovns
popa
subl
xchg
pop
jge
xlat
not
iret
mov
jmp
push
lock
std
std
mov
inc
ret
jo
insb
add
sarb
mov
pop
iret
ss
cltd
jg
dec
jge
leave
in
push
insb
aam
push
movl
mov
popa
dec
xchg
roll
jle
add
mov
inc
ss
in
xchg
push
cmpsb
lods
fs
sbb
xchg
enter
inc
and
adc
inc
pusha
stos
pushf
pushf
pushf
lea
jmp
stc
mov
xor
mov
lret
mov
outsb
mov
mov
int3
loopne
mov
cli
mov
into
test
inc
fistpl
or
sbb
jae
mov
sarl
mov
inc
hlt
pop
test
mov
or
leave
pop
lea
in
pop
mov
inc
cwtl
iret
inc
or
dec
repnz
shl
sbb
fwait
xlat
ds
out
jl
inc
movsl
push
rorl
ficoms
fnsave
cmp
inc
aas
in
cmc
fsts
push
jo
jns
pop
inc
subl
jl
out
and
xchg
pop
jl
aas
and
cmpsb
mov
je
xchg
or
jb
rcr
lds
pusha
sbb
aas
test
les
push
pop
mov
cmpsb
xor
push
push
insb
mov
and
scas
dec
test
shll
test
mov
or
adc
pushf
outsb
shrl
xor
push
xchg
pushf
scas
rclb
xchg
pop
jl
lret
xchg
jmp
movl
mov
pushf
pushl
lea
jmp
int3
popf
pushf
mov
movl
call
lea
movsbw
mov
mov
push
lea
call
pusha
pushf
pushf
lea
jne
movzbw
mov
pusha
movb
pushf
pusha
lea
jmp
mulb
cmp
iret
sbb
cmpsl
or
xchg
aad
fbstp
mov
ret
jno
aam
inc
test
out
inc
and
mov
repnz
inc
fs
aam
popa
adc
xor
outsb
pop
cmp
popa
repnz
pop
mov
mov
mov
bound
and
sahf
loope
sub
add
push
leave
sbb
lds
sub
fisubl
xor
adc
addl
push
mov
mov
mov
push
lea
sub
inc
imul
sbb
push
pop
push
dec
shl
jns
and
mov
mov
sar
add
sbb
pusha
add
mov
push
lahf
and
adc
fisubl
inc
loope
loope
inc
lret
rclb
xchg
push
movsb
mov
loopne
push
aaa
xchg
or
inc
cld
mov
jns
sbb
nop
mov
xor
fwait
js
cld
ja
sub
sub
js
ljmp
mov
xchg
pop
jle
repz
insl
jl
je
jg
pop
mov
mov
and
jecxz
inc
shll
pop
jmp
mov
jmp
push
sbb
popf
loopne
adc
mov
sbb
movsl
lcall
mov
imul
nop
inc
cmp
push
test
hlt
pop
cli
ja
hlt
pop
sub
cmp
xor
outsl
cld
mov
jnp
sub
into
test
es
push
jno
add
xorb
jg
roll
cmc
push
dec
jle
pop
mov
mov
xchg
pop
jle
int3
out
popa
or
je
xor
inc
jge
std
jne
orl
add
dec
jg
rcrl
lar
pop
xchg
es
pop
add
cmpsl
cmpsb
sub
dec
decb
xor
lidtl
sarl
in
sub
pop
addl
ficoml
sub
pushl
add
pushl
lea
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
xchg
leave
xlat
inc
shlb
sahf
std
jbe
es
test
aaa
sahf
shrb
inc
adc
mov
sbb
jns
mov
fildl
and
sbb
std
mov
mov
or
int3
arpl
jnp
andl
ljmp
jg
add
jae
pop
inc
in
aad
push
data16
jl
arpl
add
dec
fwait
mov
repz
bnd
jecxz
jle
pop
push
sbb
addr16
or
aas
inc
mov
data16
inc
mov
jmp
add
ds
mov
inc
lods
fisttpl
int3
lea
sbb
jmp
dec
sbb
push
push
mov
leave
mov
push
mov
dec
jnp
sub
lock
cwtl
sarl
roll
mov
das
out
in
aam
jbe
add
xchg
ja
or
mov
adc
pop
mov
xchg
xor
mov
lds
mov
gs
mov
stos
mov
xor
stos
shll
xlat
scas
aas
and
push
adc
fisubrs
and
mov
pusha
mov
mov
inc
sub
ret
jmp
xor
popaw
push
jle
repz
lahf
aas
jb
ficoms
adc
mul
mov
jle
mov
jmp
mov
pop
insl
pop
icebp
adcl
dec
call
mov
pushf
pop
adc
push
insb
repz
ret
shr
pop
movsb
mov
leave
dec
daa
jmp
nop
stos
push
xor
in
mov
daa
mov
adc
sub
jmp
mov
push
mov
mov
or
cmc
lahf
bound
fistpl
fucomi
testl
cmp
into
or
xchg
pop
inc
outsl
xor
mov
add
movsbl
mov
movzbw
lea
jp
pop
bswap
lea
pop
not
pusha
mov
pushl
call
adc
pop
lret
mov
sbb
shll
fcomi
jnp
dec
dec
pop
out
pop
fst
fnsave
inc
xor
xchg
sbbl
mov
dec
mov
mov
mov
jns
sti
sbb
dec
mov
push
dec
xchg
idiv
xor
pop
inc
jb
fldenv
mov
cmp
bt
movb
pushw
popfw
call
or
jl
mov
popa
es
int3
cmp
movsb
or
pop
test
pop
daa
idiv
push
call
mov
sbbl
ljmp
mov
push
lds
xor
negl
xlat
xor
mov
ds
pusha
push
cmpl
test
jmp
fmull
mov
add
xor
ret
roll
inc
gs
addl
leave
sbb
push
push
clc
cmp
cmp
orb
push
ret
inc
dec
lret
cmp
dec
lret
mov
out
hlt
and
mov
jnp
ret
imul
cmc
outsb
int
xor
hlt
arpl
clc
mov
push
mov
ret
adc
add
les
movsb
add
popa
pop
mov
insb
cs
jmp
aas
push
mov
cmp
add
dec
lock
sub
outsl
roll
and
leave
mov
add
imul
add
push
mov
dec
mov
pusha
mov
stos
xchg
pop
inc
cmp
xor
int3
and
lods
dec
mov
pusha
arpl
or
xlat
sarb
inc
aam
or
imul
test
jne
mov
xchg
call
pop
xchg
shll
pop
les
popa
repnz
cmp
imull
jb
emms
pop
dec
mov
insl
jae
lahf
sahf
xchg
stc
cld
mov
mov
jb
ret
js
enter
or
sub
xor
xchg
repz
mov
lock
fisttpl
sbb
cmpsl
adc
xchg
pop
inc
mov
sbb
lcall
add
jo
xlat
add
scas
int
jg
and
xchg
decb
mov
push
or
xor
add
andl
lahf
adc
jle
cmp
popf
cli
push
icebp
xchg
pop
inc
bound
adc
xchg
data16
loope
sub
xchg
imull
lahf
jno
es
adc
out
mov
push
lahf
sub
es
xchg
daa
enter
jnp
cli
xchg
rorl
sbb
adc
aas
mov
inc
fisubs
lea
aas
mov
mov
cmp
pop
xchg
pop
inc
xor
sub
cmp
cmp
pushf
call
jae
pushf
pusha
pushl
mov
push
lea
jmp
lea
call
push
lea
jae
mov
setae
not
mov
jns
inc
call
lea
jbe
dec
jmp
jl
cmp
jl
cmpsb
cmc
mov
cmpsb
stc
sbb
adc
cs
aaa
shll
cli
mov
mov
pusha
pop
and
aam
test
add
jp
mov
dec
push
int3
adc
mov
dec
movb
fwait
jle
arpl
lret
adc
pop
rcrl
fisttps
mov
addr16
imul
les
adc
repnz
iret
dec
mov
popw
adc
mov
cs
and
daa
dec
push
je
rcll
scas
mov
gs
pop
sbb
outsb
sbb
or
xor
outsl
dec
mov
into
xor
sbb
in
stc
inc
push
ret
out
sub
shlb
iret
imul
aaa
sbb
pop
push
dec
or
xor
popf
mov
pop
inc
stos
out
fdivl
ret
jl
add
cmp
mov
jg
sti
cli
pop
arpl
or
cmpsb
pop
cld
cld
sbbl
or
lods
ret
sti
shlb
cltd
call
push
inc
call
mov
add
pop
call
imul
addr16
sub
sti
out
jno
sub
test
bound
scas
es
scas
add
jmp
xor
sub
jle
and
mov
xor
stc
data16
xchg
pop
inc
clc
sahf
ja
popa
jbe
jle
add
test
mov
add
xchg
mov
push
jno
inc
dec
pop
iret
cmp
dec
jecxz
inc
lods
int3
je
pop
lea
mov
mov
push
push
aam
or
push
mov
fstps
mov
andb
pop
dec
enter
mov
or
adc
push
insb
loop
xor
pusha
and
push
rol
mov
ljmp
xor
notl
xor
imul
inc
pop
in
pop
adc
mov
enter
repz
sbb
pusha
xchg
xchg
jnp
lds
ds
popa
mov
push
lock
inc
das
jo
in
mov
pop
pop
xchg
aam
add
jnp
adc
daa
mov
add
nop
out
xor
scas
and
fiaddl
pusha
call
andl
mov
sbb
cbtw
sub
push
dec
std
xchg
outsl
jl
cmp
xchg
pop
dec
das
jae
out
dec
call
sbb
ds
repnz
lds
adc
inc
dec
std
xchg
loop
jns
movsb
ret
inc
imul
shrb
inc
lock
sub
ret
or
mov
pop
cmp
sarb
addr16
jge
std
xor
or
das
mov
cmc
sbb
movl
jmp
mov
pop
pop
subb
fmuls
mov
sbb
jne
movsb
nop
add
out
inc
mov
and
stc
rcll
push
dec
icebp
mov
xor
inc
int
aaa
out
or
jo
add
xlat
xor
fsts
cmp
mov
imul
rol
je
xchg
pop
dec
pop
in
mov
sub
out
adc
lock
outsl
ljmp
inc
imull
xchg
mov
andb
jae
pop
xor
push
cli
addr16
jecxz
xchg
push
test
add
push
mov
imul
stos
pop
in
or
adc
cld
mov
pop
stos
push
sub
jne
and
sub
imul
push
pop
aad
into
jl
xor
or
xchg
mov
mov
and
loop
dec
faddl
push
xchg
fwait
push
dec
push
adcl
lds
addl
adc
dec
pop
push
lods
ret
faddl
cmp
push
cmc
subb
or
inc
rol
push
jno
leave
loopne
or
xor
sub
mov
mov
out
gs
out
sti
push
mov
sub
dec
mov
cltd
and
mov
pushf
mov
setg
clc
mov
jmp
push
pushf
movw
rep
bswap
mov
pushf
pushf
pushf
pushf
lea
jmp
xlat
pop
dec
and
inc
scas
cmp
push
mov
sarb
pop
lds
fldcw
jmp
inc
lea
mov
xor
aad
hlt
repnz
and
outsl
and
xchg
roll
push
cmpb
mov
data16
sbb
cwtl
dec
sub
jecxz
mov
push
dec
jmp
or
xchg
mov
into
aam
and
push
sub
test
lret
imul
iret
arpl
mov
push
movw
pusha
pushf
lea
jmp
jae
bt
sub
jne
push
pushf
mov
lea
call
push
lea
jae
stc
sub
push
call
aam
or
sbb
xor
pop
lcall
movsb
sbb
cmp
test
jno
andb
and
push
fimull
jno
les
aad
and
sub
push
adc
inc
out
mov
mov
mov
in
sub
pop
popf
add
fsubrp
push
ja
cmp
divb
xchg
daa
mov
fcmovbe
pusha
xchg
loope
adc
ret
dec
enter
idivl
outsl
mov
and
jb
pop
nop
dec
loopne
test
std
repnz
xor
xchg
mov
jl
cs
dec
movsl
int3
jecxz
inc
sarb
test
mov
fnstenv
inc
dec
lds
push
dec
mov
dec
dec
push
ja
lea
jne
pusha
pushf
jmp
cmp
mov
aaa
mov
mov
ss
int
repz
add
mov
mov
push
stc
mov
mov
insl
mov
cltd
pop
gs
push
imul
arpl
aam
sbb
mov
fdivrs
inc
inc
stos
or
push
mov
cs
xchg
pop
dec
pop
test
ficoml
inc
mov
adc
outsb
movsl
mov
mov
sub
stos
sub
xchg
adc
jae
das
jmp
sbb
test
jns
xchg
pop
cmp
mov
fxtract
imul
je
xchg
pop
dec
or
sub
int3
dec
lock
into
dec
leave
push
lret
inc
lock
dec
inc
lret
leave
dec
lock
dec
lock
push
dec
into
lock
leave
lock
int3
dec
lock
inc
leave
push
dec
dec
dec
lock
dec
lock
push
movl
dec
mov
ret
mov
inc
arpl
fnstsw
xchg
lcall
test
cmpl
mov
mov
xor
test
test
pop
jo
push
scas
ret
add
dec
adc
push
das
xlat
add
xchg
sbb
jecxz
or
lds
xchg
dec
cld
stos
mov
mov
xchg
test
pushl
push
mov
sbb
rorb
ss
pop
dec
cmpsl
fs
jmp
seta
mov
call
pusha
movl
pushf
pushf
lea
jmp
push
push
push
mov
mov
lea
jmp
cmp
jl
cmp
cmpsl
ret
mov
mov
pushf
daa
adc
xchg
mov
mov
xchg
inc
and
dec
mov
sarb
jl
and
lret
filds
push
dec
sub
pusha
sub
in
loope
shll
aaa
fisttpll
lea
cmp
fists
inc
pushf
lds
mov
adc
or
add
pop
mov
out
or
fstpl
inc
dec
mov
cli
movsl
push
dec
cwtl
mov
and
leave
bound
jle
cld
and
xchg
pop
dec
jns
aam
lret
pushl
clc
into
out
xchg
fstps
idivb
iret
inc
inc
dec
jnp
and
jge
in
add
lcall
fsts
cmp
or
in
xchg
inc
mov
sbb
adc
inc
jns
into
aam
cmp
jb
xorl
xchg
add
das
pusha
mov
int
in
leave
push
sbb
jae
sbb
popa
xor
scas
fldl
dec
jg
mov
test
jno
dec
pop
test
lock
push
pop
mov
xchg
in
mov
loopne
sbb
and
ret
rorb
mov
inc
mov
xchg
in
inc
lds
dec
pop
xchg
add
clc
mov
mov
mov
ret
jns
pop
dec
ljmp
adcl
mov
lods
adc
out
dec
les
ljmp
inc
mov
pop
shll
in
or
rcr
xchg
inc
pop
or
mov
adc
addr16
mov
push
sbb
fs
pop
push
pop
ret
inc
and
and
daa
ja
push
lret
lods
cli
cmp
xchg
pop
push
ds
call
inc
not
mov
jmp
rclb
jl
and
outsl
jb
int3
push
test
pop
loope
pusha
aam
mov
inc
and
and
mov
out
sti
pop
mov
jg
xor
dec
in
jl
cltd
push
xorl
popa
repnz
xchg
fdivrl
cmpsl
fstl
xor
xor
inc
pop
rcll
mov
std
mov
inc
pop
test
or
dec
leave
movl
call
call
pushf
add
pushf
pushf
movb
pushf
lea
jne
push
jmp
lea
je
bt
cmp
push
movb
call
clc
mov
rol
pushf
setno
rol
mov
pushf
push
mov
bt
push
pusha
ror
stc
jmp
lea
call
jmp
mov
or
imul
cltd
ret
dec
push
aam
movsl
rcl
aas
inc
ret
lods
aad
out
dec
cmc
inc
out
cmpsl
imul
push
clc
movsb
push
and
push
iret
sub
xor
loopne
stos
xchg
call
sub
or
and
ss
mov
pop
scas
jg
stc
popa
aad
inc
nop
imul
mov
and
xor
sbb
aam
dec
mov
mov
jge
loop
scas
or
pop
lods
and
jo
push
push
push
rolb
pop
push
jp
loope
je
jl
add
in
leave
ss
push
fs
or
jbe
fsubr
sbb
xchg
out
add
jbe
and
inc
jne
mov
int3
outsb
sub
adc
sahf
push
jbe
inc
mov
js
jno
sub
rorb
sbb
xor
and
pushf
cltd
sub
aad
adc
jae
lods
cmp
ss
es
shll
fildll
call
cmp
mov
sbb
mov
cltd
leave
sub
jns
xchg
mov
testl
stos
cli
adc
fs
jno
cwtl
mov
and
mov
jle
sub
ret
xchg
pop
push
cld
mov
lea
ja
pushf
not
movsbw
mov
bswap
setl
pushf
mov
mov
setge
lea
je
xchg
pop
jmp
inc
jb
movsb
les
cmp
jae
in
mov
inc
mov
push
mov
call
leave
xor
scas
nop
fidivrs
and
movsl
mov
fdivrl
ret
sahf
addr16
mov
xchg
lret
test
insb
push
cmpsb
mov
sahf
jne
lods
test
xchg
adc
mov
sub
lods
adc
mov
mov
cmp
cmpsl
mov
jmp
pop
icebp
lcall
out
pop
jp
mov
lahf
cs
aas
push
mov
mov
pop
push
add
xchg
push
pop
outsl
scas
fisttps
clc
xor
sub
fnstsw
lahf
add
js
pop
aam
or
lahf
iret
inc
inc
and
int3
push
xchg
je
mov
cmp
inc
pop
jg
and
pop
nop
shrb
repnz
sahf
loop
std
adc
imul
imul
sub
fsubrp
imul
stc
test
jg
mov
and
push
inc
mov
aaa
mov
pop
push
pop
stos
std
lea
jb
push
bt
test
cmp
jmp
pusha
jmp
add
inc
gs
outsl
fs
gs
imul
add
xor
add
adc
mov
into
loope
or
roll
clc
jns
popa
push
mov
aaa
ror
mov
adc
or
fcoms
popa
pop
into
xor
mov
fiadds
jp
clc
popa
insb
mov
aaa
pop
mov
cmpsb
mov
lods
call
pusha
lea
je
cmp
bt
push
add
pushf
pusha
pushf
lea
jmp
mov
stos
movntps
mov
jge
xor
fnstcw
push
xchg
xor
fsubl
inc
adc
jbe
mov
xor
mov
lods
cmp
mov
or
ja
loop
lods
dec
dec
test
jo
rcrl
flds
int
lretw
pop
mov
inc
mov
jg
test
cli
fiadds
pop
sbb
dec
add
pushf
cmc
dec
jae
scas
and
mov
push
xchg
pop
push
sbb
sbb
mov
fsubl
iret
loop
lea
jg
cmp
dec
or
adc
mov
pop
outsb
scas
pop
sub
test
or
movsl
nop
lret
ljmp
cli
jg
loopne
ss
scas
sub
cwtl
flds
sub
and
mov
mov
imul
shrb
cmc
stos
add
cmp
fs
dec
add
mov
pop
sti
cltd
nop
xchg
sub
subb
stos
push
mov
mov
push
frstor
jecxz
pop
pop
sbb
or
cld
xor
jp
jge
mov
pusha
jge
aaa
mov
and
jo
inc
ja
dec
add
xchg
sarl
mov
aam
jl
mov
jp
push
mov
inc
repz
je
push
pop
scas
sbb
je
xchg
sbb
xlat
jmp
jbe
int
les
iret
lret
mov
in
pop
imull
push
cmp
mov
dec
dec
cld
scas
movsl
and
jge
cmp
psubusw
mov
fcompl
out
xchg
ret
xchg
mov
call
xor
stos
cs
adc
mul
dec
add
popw
jmp
cmp
jge
xor
jl
push
inc
icebp
out
cmp
pusha
and
jp
leave
pop
je
dec
adc
pcmpeqw
andb
add
dec
sbb
push
les
inc
lock
xor
loop
insb
fcmovnbe
std
push
mov
jno
clc
add
pop
scas
and
mov
adc
invd
arpl
xchg
pop
push
cmp
sub
movl
pushl
lea
jmp
lea
jne
call
lea
jae
push
push
mov
dec
pushl
mov
inc
push
mov
jmp
pusha
movl
pusha
jmp
xchg
setge
mov
movl
cwtl
lahf
lea
call
inc
cmc
clc
pop
cli
and
dec
jnp
in
jp
out
pop
jo
fs
sub
imul
sub
cmp
js
push
xor
jle
xlat
sbb
jecxz
sub
ss
cli
add
in
pop
pop
jbe
in
aaa
dec
pop
mov
sub
jp
xor
mov
push
popa
ljmp
inc
mov
add
ss
pop
mov
data16
loopne
adc
testl
ds
pop
test
xor
rclb
js
xor
xchg
int
xchg
xchg
sbb
fxam
push
ja
xchg
pop
pop
push
xchg
imul
add
fs
call
lcall
cmpsb
add
push
push
mov
arpl
aaa
pop
jle
dec
xlat
bound
sbb
out
xor
rorb
mov
ds
and
sti
lret
push
mov
or
mov
xor
pop
xchg
pop
pop
lret
jmp
pop
mov
jne
pop
rcrl
adc
in
inc
cltd
lret
push
idiv
es
xchg
push
ret
or
fnstenv
lods
sti
jmp
pusha
enter
movsl
sbb
jg
adc
outsb
mov
out
repz
mov
stos
inc
out
lcall
xor
pop
xor
inc
test
aam
lcall
push
and
jmp
add
cmpsb
mov
les
pop
mov
loope
or
xor
jge
cmp
int
cmp
dec
mov
cmp
push
and
enter
dec
cmp
sub
ja
sahf
popf
jne
mov
and
sarb
cmp
in
test
pop
int
out
pop
repnz
mov
cwtl
insl
lgs
popf
mov
or
dec
or
inc
pop
es
jmp
jecxz
repnz
dec
push
cmp
jmp
cmp
mov
daa
es
stos
or
sahf
sbb
je
push
imul
mov
subw
add
add
pop
int
add
add
add
sbb
add
xchg
sbb
add
mov
add
pop
add
add
add
sbbl
add
jmp
jmp
bts
mov
stc
call
sbb
cltd
or
inc
lcall
mov
pop
arpl
cmp
into
and
or
jo
push
aas
rorl
and
popf
repz
jo
nop
jnp
sti
xchg
stos
das
ficompl
fadds
xor
xchg
pop
pop
cmpsl
fs
pushf
mov
dec
movl
stc
ror
push
cmc
not
pushf
pushl
rol
clc
movw
call
mov
icebp
inc
jmp
push
sbb
addb
jl
add
fildll
mov
cmpsb
or
or
fstpl
xchg
fwait
call
xor
add
ficoml
push
ret
push
insb
fdiv
pop
cld
or
shl
outsb
js
and
xor
and
mov
fldcw
or
sti
fmull
aas
cld
cmpsb
gs
pop
outsl
das
shll
movb
sar
fstpt
jnp
std
pop
imul
push
fiadds
pop
icebp
jb
push
fistps
sbb
sbb
cwtl
cmp
xchg
dec
mov
pushf
cmp
fwait
push
jae
jecxz
xchg
push
dec
jno
jne
icebp
mov
mov
ljmp
movsl
es
dec
push
ljmp
xchg
subb
cld
cli
lret
sub
sbbl
xor
loop
scas
ds
scas
lret
aaa
fsts
jl
sbb
mov
enter
add
push
cmp
rclb
popf
shrb
ret
std
bswap
lea
jne
movsbw
mov
pusha
lea
jmp
xchg
and
mov
repz
in
movsb
pop
shr
lcall
mov
inc
les
loope
add
add
mov
xor
fildl
arpl
push
mov
and
daa
or
dec
rolb
clc
mov
stc
movsl
jg
mov
jbe
xchg
daa
shll
test
or
clc
daa
lcall
mov
popa
scas
jno
imul
jo
add
dec
jno
jb
xchg
cmpsl
dec
int3
pop
xchg
sbb
mov
fwait
dec
clc
mov
jp
jb
lock
test
mov
inc
jae
push
push
ja
xchg
cs
push
push
pop
jo
xor
xchg
mov
lret
aad
inc
or
push
push
lock
and
inc
sti
fwait
cmpl
mov
mov
fsubp
push
pop
movsb
jnp
sbb
push
cmc
mov
push
repz
xchg
jg
xchg
cmp
cmp
cmp
xchg
xchg
inc
test
add
jns
xchg
sbb
and
xchg
cmp
jns
sbb
xchg
mov
out
xchg
ret
inc
imull
jl
movsb
adc
movsb
xor
xor
leave
repnz
jno
adc
rorb
addr16
int
les
test
dec
into
cld
adc
push
sarb
fiadds
es
lea
data16
cltd
pop
or
das
or
rorb
cmp
fucomp
jae
dec
cmc
std
es
pop
xor
es
mov
pcmpeqw
flds
xlat
pop
jae
imul
cmp
cmp
adc
mov
cld
test
lock
xchg
push
and
test
push
popa
mov
leave
add
xchg
clc
add
shr
push
mov
pop
jnp
into
jl
outsb
jecxz
sbb
mov
inc
sub
leave
lret
xor
mov
mov
push
iret
adc
int
aam
push
popl
and
jecxz
xchg
sarl
fucomp
mov
cmpsl
jl
orl
mov
loopne
mov
pop
imul
fsubs
cltd
sbb
add
sub
jmp
xor
xor
mov
fmul
xlat
dec
insb
inc
popa
add
jae
mov
or
stos
loope
jecxz
mov
std
adc
in
add
iret
imul
cwtl
mov
call
adc
xor
mov
cmp
movl
das
js
mov
test
scas
or
dec
inc
sub
add
xchg
jge
fninit
loope
pop
addl
inc
stos
dec
sbb
jno
add
shl
fdivrl
sub
addr16
add
inc
push
lods
lret
out
insl
and
mov
rclb
sbb
xchg
mov
pushf
sbb
cwtl
aad
lret
jg
cmpb
xchg
push
lods
out
pop
scas
sbb
mov
add
icebp
add
ret
loopne
jnp
add
ret
ret
push
jnp
push
push
ds
pop
loop
shll
imul
pop
inc
pop
jmp
ret
nop
rep
adc
adc
std
xchg
adc
es
iret
or
or
loopne
push
xor
out
das
fwait
push
push
les
add
in
scas
hlt
loope
xchg
popf
or
push
jmp
decb
out
xchg
xchg
xchg
xor
test
xchg
in
cs
faddp
mov
jg
repz
dec
lock
dec
mov
or
mov
outsb
or
addb
sbb
pop
das
fstl
int
jnp
loope
push
jbe
ljmp
pop
test
mov
mov
lea
je
cmc
test
or
call
pusha
call
call
lea
jne
pusha
jmp
jbe
dec
jae
and
xchg
mov
or
jecxz
icebp
push
pop
lock
addr16
jmp
mov
lds
into
aad
int3
dec
jl
or
xor
int
push
fisttps
jge
mov
jg
sub
sub
and
dec
fyl2xp1
jl
dec
pop
repz
hlt
outsl
push
enter
cli
pop
cmpsl
les
roll
enter
mov
repnz
and
mov
mov
pop
popf
dec
xor
popa
repz
add
fisubs
sbb
out
sbb
jae
cmp
inc
scas
push
or
mov
repz
lret
adc
ds
push
push
addr16
cmc
inc
lea
jae
push
stc
push
cmp
pusha
lea
jae
call
pop
xchg
jmp
jl
push
jno
aam
push
stos
data16
js
in
in
insl
out
aam
fisttps
nop
adc
pop
mov
cmp
pop
leave
mov
push
ret
inc
shlb
cmpsb
jb
shrl
inc
mov
mov
jnp
xchg
push
fidivrl
out
cwtl
mov
and
xchg
pop
into
inc
divb
mov
sub
sub
jl
xor
cmpsb
xlat
in
xchg
xchg
pop
and
ret
or
mov
or
mov
ljmp
je
movsb
mov
out
add
jmp
leave
clc
stos
or
cmpsb
add
scas
mov
dec
lods
fdiv
dec
cwtl
pusha
out
fsubr
push
clc
add
mov
bound
jne
or
imul
or
push
mov
lods
mov
pop
and
imul
add
loope
das
test
shlb
in
add
adc
int
cs
or
adc
xor
push
sub
push
fcmovnu
call
xchg
mov
lods
cmpsb
rcll
mov
push
mov
pop
ret
and
test
addr16
jbe
pusha
push
movl
push
pusha
push
pushf
lea
jmp
or
add
add
add
add
sbb
aam
sbb
add
push
pop
add
jge
add
add
add
add
add
xchg
sbb
scas
out
and
call
int3
xchg
or
mov
xor
out
ret
in
xor
adc
xlat
jns
mov
jnp
pop
std
xchg
cmp
push
xchg
in
mov
sbb
daa
movups
stc
mov
adc
cmp
cmc
movsl
push
add
rcr
push
jns
leave
test
add
test
daa
adc
mov
in
fsubr
adc
adcl
or
fistl
fldt
cmp
xchg
sub
cmp
mov
lea
daa
fisttpl
mulb
sbb
mull
xor
mov
popf
cld
movsl
push
test
mov
mov
gs
sub
xchg
shr
jle
fidivrl
outsl
xchg
sahf
leave
hlt
ds
test
imul
lret
mov
sub
push
push
inc
std
mov
adc
cmp
aas
mov
sbb
test
mov
pushf
mov
bt
mov
cmc
movsbl
mov
pusha
cmc
test
sub
call
cmc
clc
cmp
pusha
add
push
jmp
jmp
add
or
insb
cmpsb
push
add
adc
dec
push
ret
iret
testb
xorb
mov
and
xor
in
repz
in
xchg
push
mov
dec
mov
jp
out
movsl
sbb
inc
xchg
pop
and
icebp
push
insl
add
xchg
test
es
sub
loopne
adc
aam
into
push
or
lds
mov
mov
cld
add
or
cld
daa
dec
jb
lret
iret
push
setl
sbb
xor
mov
mov
xchg
mov
pop
in
fstpt
nop
pop
xchg
mov
inc
pop
bound
fidivl
dec
popa
mov
and
lock
movb
adc
lea
push
pushl
ret
pushf
lea
jne
sbb
shl
shr
jmp
popf
rdtsc
nop
pusha
mov
mov
pushl
movl
call
jmp
add
dec
outsl
arpl
inc
jb
gs
lret
incl
jg
push
jb
incb
cs
sahf
scas
fdivrp
outsb
add
cs
mov
aas
aaa
roll
daa
lahf
rclb
adcb
add
xor
jns
mov
fwait
cmp
inc
jno
push
outsb
pushf
jmp
sub
in
int3
cmp
out
xlat
or
push
jnp
leave
hlt
or
daa
inc
fildl
ret
add
jmp
out
clc
ss
imul
cltd
mov
sti
fdivp
imul
cmp
pop
popf
sbb
aad
sub
cmp
js
sbb
ja
iret
repz
mov
loopne
hlt
xorb
mulb
cmc
mov
mov
mov
in
mov
mov
jmp
push
jge
test
sub
test
popa
and
sub
push
test
or
popf
adc
pusha
leave
mov
ljmp
dec
push
fsts
int3
out
sbb
insl
test
movsl
xor
mov
xor
imul
outsl
popf
pop
or
xor
jb
cmp
inc
sti
xchg
or
cs
loope
mov
repnz
add
xor
xor
push
or
inc
insb
jecxz
jno
stc
dec
out
pop
es
xor
mov
rol
mov
ja
lret
sbb
dec
inc
pop
popl
jns
mov
sub
lds
stc
mov
adc
rcr
int
jno
test
pop
cmp
aaa
sbb
xor
stos
inc
mov
gs
into
sub
int
repnz
sub
mov
decl
jnp
out
sbb
or
mov
jg
jge
rcrb
arpl
in
lcall
jg
ja
mov
pop
xchg
out
imul
push
aad
xchg
pop
es
dec
and
pushf
mov
pushl
pusha
movl
jmp
pushf
jmp
xchg
bswap
mov
bswap
call
mov
call
pop
pusha
pushl
ret
out
cwtl
data16
dec
pop
mov
jg
mov
mov
pop
stc
jmp
ret
xor
and
jle
ret
push
push
cmc
inc
dec
mov
cld
lods
sbb
inc
sbb
lea
mov
mov
jbe
xor
adc
push
rcr
pop
inc
stos
pop
xchg
adc
mov
cmp
cwtl
mov
fimuls
xchg
mov
sub
clc
les
stc
mov
jge
fisttpl
repnz
mov
test
push
cmp
sahf
cmp
movw
lea
jb
push
jmp
das
sbb
test
push
das
imul
and
inc
dec
xchg
add
pop
aam
flds
xchg
out
push
dec
ficoml
arpl
daa
mov
cltd
and
bound
out
out
pop
lret
cmp
fiadds
dec
add
mov
ficompl
sub
mov
jmp
sub
cs
scas
ss
daa
add
push
aam
xchg
outsb
add
or
mov
ds
stos
lahf
cmpb
or
rcl
movsb
inc
frstor
repnz
es
in
mov
cwtl
hlt
pop
pop
add
xchg
xor
and
xchg
jmp
outsl
into
or
dec
loop
push
cmovno
pop
or
in
mov
adc
xchg
pop
sub
adcl
or
cmp
arpl
ret
pop
or
iret
addr16
pop
mull
dec
push
rcrb
dec
es
fistps
shrb
in
xchg
icebp
ss
lret
mov
loope
xchg
xor
inc
xchg
sub
js
pop
or
fs
sub
pop
sub
sbb
pushf
jmp
pushf
movl
call
push
movl
push
jmp
lea
jb
pushf
movb
push
pushl
ret
jmp
xchg
addr16
cmp
or
cmpsb
push
cmpsb
lds
fidivrs
cmp
ret
cmpsl
xchg
arpl
and
sbb
in
xlat
cmp
repnz
rcrb
pop
addb
or
js
sbb
loope
pop
daa
int
mov
or
js
icebp
pop
push
movsb
xadd
repz
mov
pop
mov
mov
push
and
pop
sub
lods
jmp
adc
ljmp
pop
ja
or
pop
push
sub
xchg
add
inc
lahf
fnstsw
pop
pop
fninit
into
sub
adc
addr16
adc
icebp
or
sub
jae
push
mov
xor
ss
jmp
jae
mov
sub
xchg
pop
sub
dec
lcall
pop
or
pop
jno
or
push
mov
inc
movsl
sbb
addl
pop
jo
or
aas
arpl
jo
or
ret
popa
inc
sbb
adc
xchg
pop
movsl
repnz
popa
in
pop
out
sbbb
arpl
pop
pop
mov
cmp
fiadds
addr16
pusha
xor
loope
pop
xchg
jno
in
lods
jb
or
ja
aad
arpl
pop
pop
mov
cmp
cmp
or
rclb
push
mov
insb
or
pop
loope
pusha
movsb
and
jno
or
pop
mov
sub
inc
filds
jg
lahf
sbb
or
mov
in
dec
arpl
push
pop
jle
shrl
inc
pop
jno
or
push
xorl
xor
insb
or
pop
pop
push
shll
insb
or
out
out
inc
arpl
scas
push
mov
add
or
mov
ss
lret
pop
arpl
pop
pop
lahf
mov
inc
jg
insb
or
xor
aaa
fldenv
jno
or
pop
fstpt
jno
or
aas
push
xchg
fstps
insb
or
mov
adc
je
ljmp
pop
jl
stos
jno
or
pop
jns
pop
inc
sub
or
pop
rcrl
insb
or
pop
pop
cmp
ds
sbbl
cmc
pop
jno
or
pop
or
jmp
bound
insb
or
lds
jb
out
push
arpl
mov
adc
arpl
stos
pop
jg
lods
clc
jbe
jns
or
sbb
sub
or
push
and
scas
stos
inc
arpl
cmpsl
pop
xchg
arpl
push
pop
add
pop
cmp
or
push
pop
cmp
push
out
mov
and
lods
test
dec
gs
popa
addr16
outsl
js
add
outsl
ljmp
cmp
pop
xchg
adc
test
and
scas
ss
aam
pop
aaa
fwait
lds
ljmp
xchg
cmpsb
adc
test
mov
mov
xchg
hlt
outsl
clc
or
add
test
mov
scas
mov
dec
neg
mov
and
jg
insl
xlat
mov
add
push
xchg
mov
add
cmpsb
jmp
sarb
mov
and
js
fsubs
push
test
push
sahf
sub
addr16
or
jae
mov
out
cmpsl
mov
add
xchg
pushf
call
scas
sub
pop
and
mov
mov
test
sub
test
shrb
or
int3
scas
cltd
bound
xchg
test
data16
xchg
add
hlt
popa
sub
ss
dec
mov
stos
inc
sub
xchg
lock
enter
lret
je
shl
xor
push
popa
in
dec
int
or
cli
push
cwtl
clc
outsb
out
mov
aaa
shl
call
push
pop
push
shlb
test
sbb
stos
cmp
scas
cmp
sub
stos
xor
or
loope
outsb
imul
lods
pop
insl
loopne
cld
dec
push
lea
insb
mov
mov
imul
imul
vpextrw
lds
sub
sub
fnstsw
sub
add
mov
pusha
in
sub
push
fisttpl
dec
push
insb
jno
mov
fisubrs
mov
int3
sub
call
dec
adc
in
mov
jmp
in
je
lods
hlt
cli
sub
and
xchg
out
sbb
cmpsl
fcmovb
das
lret
cs
jmp
jmp
ror
sub
int
cmpsb
aad
sahf
sub
sbb
add
sub
in
imul
mov
ret
and
sub
mov
enter
aad
sbb
jae
fisubrs
test
sub
jmp
insb
and
inc
adc
inc
lret
dec
pop
out
lret
xchg
lock
lods
lea
popa
dec
mov
push
leave
mov
mov
push
loopne
jmp
aam
mov
mov
lahf
stos
mov
dec
repz
cltd
in
pop
test
pusha
lods
popf
sub
fadd
add
fimuls
js
dec
sti
mov
pop
es
call
xlat
jo
and
in
inc
ljmp
jg
lock
ret
mov
insb
push
add
test
xchg
stos
lods
sub
pop
aaa
lret
push
sub
cltd
mov
das
std
xor
das
data16
sub
aam
sub
inc
ljmp
mov
inc
jge
xor
sub
das
cmp
mov
loopne
test
cmpsb
pop
sub
cmp
mov
insb
sti
and
das
scas
dec
and
add
loop
push
ljmp
jae
pop
outsl
mov
mov
loopne
dec
lea
sub
cmp
push
or
pop
mov
cmp
mov
outsl
insb
dec
loop
push
xchg
or
sub
and
nop
inc
jmp
pop
cmpb
in
ja
in
stos
and
push
and
sbb
mov
je
ds
dec
daa
jle
scas
mov
cwtl
sub
sbb
in
pop
and
iret
cltd
cmpsl
sub
lods
aaa
push
xchg
add
or
push
sub
mov
xor
xchg
xchg
ret
ret
test
insl
nop
xchg
aad
or
scas
out
repnz
out
in
jmp
loopne
and
lahf
movsl
push
in
mov
test
jle
inc
xchg
into
mov
das
out
jae
ss
popf
sahf
das
fsubr
mov
add
scas
dec
repnz
push
adc
fucomp
call
insl
repnz
cmpb
mov
in
push
sbb
pop
lock
dec
ja
pop
jmp
adc
loopne
or
adc
fisubrs
lds
xchg
scas
popf
les
aad
xchg
mov
mov
jge
xor
cmpsl
subl
pop
xlat
or
push
inc
outsb
xor
js
bnd
push
mov
lods
or
adc
lret
and
mov
xchg
push
and
xlat
ficompl
cmpsl
fdivrs
les
mov
sub
je
and
push
loop
lret
out
rep
gs
push
test
insb
adcl
loope
cmpsl
scas
mov
out
dec
lods
popa
mov
xor
dec
sub
lods
mov
fstps
inc
and
insb
mov
sub
sub
hlt
mov
in
mov
dec
std
or
out
test
dec
sbb
push
mov
bound
test
mov
push
push
out
std
sub
jnp
loope
jns
mov
dec
cmpsl
inc
daa
push
mov
insl
add
push
add
loop
and
icebp
je
mov
int
stc
bound
in
adc
cmp
push
adc
and
sbb
add
sbb
cmpsb
repz
mov
dec
int3
push
sub
xlat
leave
test
daa
lahf
mov
das
pop
int3
or
movsl
cmpsb
adcb
mov
cmc
lret
pop
xchg
loop
js
push
ficomps
add
ljmp
leave
push
mov
pushf
inc
sub
dec
dec
push
ret
pop
xchg
mov
cmpsb
aam
xchg
dec
scas
mov
pop
push
in
sub
rclb
sub
je
or
mov
sbb
scas
jle
pushl
pop
adc
bound
and
into
int
inc
xor
push
imul
scas
sbb
jae
push
popf
leave
popa
in
sbb
nop
sub
out
cltd
daa
pop
lds
cmpsl
mov
lds
ficomps
cmp
in
rcll
pop
sub
subl
rcll
ret
call
fisubs
imul
jne
dec
mov
ljmp
xlat
fcoms
cld
andl
inc
sub
inc
nop
bound
scas
sbb
imul
aam
or
push
pop
aam
add
call
and
mov
enter
popa
mov
cs
jmp
out
lods
push
lds
push
mov
dec
sub
test
mov
enter
cmc
cmp
sbb
loope
and
cmpsb
pop
cld
test
sbb
in
mov
movsb
das
ljmp
xchg
loop
repnz
pop
pop
stos
mov
roll
lds
mov
or
adcl
sbb
insl
ficompl
pop
and
or
jo
insb
rcr
lcall
jp
mov
jl
sub
std
scas
mov
jnp
repnz
and
rorl
fldt
push
lea
sub
jae
shrl
jbe
daa
push
aaa
xchg
or
xchg
or
push
mov
lret
sbb
inc
jmp
adc
inc
outsl
test
testb
in
insl
xchg
or
int
mov
pop
ljmp
add
enter
loopne
nop
and
add
sahf
push
push
lods
aam
mov
push
das
pop
repz
sbb
rcrb
push
hlt
sub
je
or
inc
lahf
ror
jmp
pop
jb
sub
jns
lcall
test
sub
adc
inc
jb
popa
das
xchg
jno
aam
xor
push
sub
mov
mov
icebp
mov
cmpsb
inc
test
and
push
out
pop
loopne
mov
pop
sub
mov
rcrl
inc
lods
push
add
lods
mov
mov
lcall
rcrb
test
in
push
addr16
adcl
ds
subl
add
sbb
test
imul
xor
mov
mov
inc
in
pusha
rorb
lahf
test
mov
les
pop
dec
pop
ds
xadd
dec
scas
xchg
loopne
dec
je
je
pop
je
xchg
cwtl
pop
and
pop
loopne
mov
int
ficompl
or
stc
and
jmp
in
lods
mov
sbb
aaa
daa
inc
cmp
fwait
jo
packuswb
loope
dec
andl
mov
test
fdivr
stos
mov
pop
out
mov
rorb
in
sbb
popf
mov
shrl
add
js
adc
add
lret
pusha
sub
push
shrl
sub
jge
lock
lods
enter
hlt
sbb
cld
mov
es
aaa
cmpsb
xor
mov
cmp
pusha
mov
push
pop
or
mov
test
fs
stos
pop
xor
push
pop
pop
sub
xor
push
loope
mov
and
mov
cmp
es
mov
jmp
push
cmp
imul
push
adc
sub
hlt
scas
loopne
sti
inc
or
out
mov
cs
mov
mov
sbb
push
mov
mov
outsl
mov
enter
dec
push
rol
sub
scas
xchg
stc
or
lcall
in
fsubr
in
filds
pushf
repnz
arpl
jmp
jmp
jo
subb
gs
lcall
stos
cmp
mov
shl
lcall
stc
mov
int
call
pop
push
fdivl
repnz
pop
cld
or
es
stc
jb
int
sbb
cmc
and
outsl
sbb
sub
jmp
inc
enter
aam
push
cs
or
sub
enter
lods
jge
mov
mov
cmp
mov
adc
jl
repnz
imull
cmc
push
push
push
sub
xor
mov
sub
lahf
bound
leave
popf
mov
arpl
iret
xor
xchg
insb
mov
fdivl
ficomps
enter
xchg
loope
sub
les
lods
pop
dec
subl
out
mov
loope
mov
push
frstor
cltd
pop
into
leave
int
push
dec
popf
sub
in
cmp
rorb
loop
fistpll
mov
add
lds
mov
or
in
adc
iret
fdivrs
pushf
dec
fiadds
ret
fstps
sub
fmul
scas
xchg
mov
ds
mov
scas
cmpsl
and
jne
subb
sbb
scas
inc
jo
jg
ljmp
cmp
clc
scas
mov
fstpt
rcrl
and
lds
iret
and
pop
das
cmc
test
rclb
and
adc
pusha
add
adc
lds
movsl
rorl
sbb
pop
and
lds
imul
mov
fcoms
stos
xor
lds
arpl
imul
sbbl
sahf
push
js
push
xor
pop
inc
lods
or
cwtl
xchg
add
pop
ljmp
fdiv
stos
push
cmpsb
movl
loopne
enter
test
in
push
mov
mov
notl
ljmp
inc
mov
cwtl
cmp
fidivl
mov
pop
mov
xchg
jmp
fcmovne
jmp
push
test
fiadds
xchg
pop
sti
vpcmpgtb
test
sub
push
add
mov
mov
mov
mov
sub
pop
cmp
push
add
push
sbb
push
or
adc
push
push
ja
cmpb
lcall
sub
imul
fmuls
lret
or
scas
mov
insb
inc
push
fmull
jo
or
popa
and
sub
push
cmp
lcall
lock
stc
imul
mov
in
jbe
xchg
mov
mov
and
or
aam
or
ficomps
stos
scas
sarl
add
lahf
lods
lock
sub
aad
jmp
in
and
and
dec
movsb
rcr
cmpsb
lret
in
loopne
lea
stos
les
jmp
adc
test
sub
pop
sub
sbb
fchs
adc
mov
test
jno
sub
mov
add
sub
or
in
jl
cwtl
cmp
sub
lods
sub
into
mov
imul
add
sub
leave
lods
imul
iret
lods
call
and
sub
scas
pop
pop
and
jecxz
dec
ljmp
es
mov
out
test
imul
shrb
lock
ja
xchg
mov
push
cmp
push
mov
adc
sub
out
arpl
pusha
loopne
imul
shrl
xlat
xor
jmp
mov
and
sub
loopne
enter
outsl
sub
sbb
loopne,pn
ret
call
cltd
xor
int3
test
and
and
pop
xor
out
cmpsl
jmp
movsb
sub
and
sbb
jb
mov
fwait
push
mov
fiaddl
loopne
fisubl
jp
test
sub
das
jp
loopne
sub
loop
ljmp
cmpsb
icebp
jmp
shlb
test
sub
lcall
int3
sub
das
lds
sub
and
lea
pop
sub
in
sub
loopne
sub
inc
mov
ljmp
lret
call
addr16
and
stos
pop
out
sub
stos
pop
push
mov
pop
stos
pop
ljmp
bound
stos
sub
xchg
lods
movsb
inc
test
sub
loopne
loopne
lods
data16
inc
sub
cs
movsl
outsl
lods
and
call
call
jno
jecxz
push
sub
cmpsl
shrl
jp
sub
and
ret
movsl
shrl
xchg
es
adc
sub
and
jecxz
pop
and
mov
mov
adc
into
xchg
sub
inc
sbb
push
ljmp
mov
fdivrs
out
sub
out
and
mov
pop
pop
in
stc
xchg
pop
fcom
pop
inc
ret
clc
ds
cmp
add
add
and
mov
cmpsl
sbb
ja
sub
push
fisubl
lock
cmp
call
add
stos
cmpsb
leave
in
outsl
add
mov
lock
push
cs
push
stc
push
scas
cli
mov
mov
nop
mov
or
popa
adc
mov
notb
push
dec
push
xor
cld
mov
add
arpl
int3
push
cwtl
xchg
cmpsb
xor
mov
out
shll
inc
xchg
nop
push
dec
xor
xchg
jecxz
xchg
imulb
pop
push
icebp
push
pop
sbb
dec
mov
pop
jmp
test
nop
sbb
and
subl
loopw
cmp
fmuls
pop
and
dec
jns
outsl
or
popa
imul
les
rcrl
mov
shll
inc
mov
and
sub
sbb
sub
add
inc
xor
and
or
dec
out
pop
fabs
cmp
arpl
inc
repnz
xchg
loopne
icebp
xlat
adc
lret
lret
in
in
ror
xor
je
jne
inc
push
mov
mov
or
ror
cltd
leave
mov
sub
pop
add
popf
jmp
mov
cmpsb
mov
gs
cmpsl
js
jno
and
inc
sbb
call
lock
jmp
rclb
push
stos
xchg
and
push
push
sub
scas
popf
pushf
sbb
lcall
sub
ficompl
sub
add
ret
das
pop
push
repz
adcb
scas
or
cmpsl
jmp
dec
ljmp
rclb
mov
dec
fimuls
insb
mull
into
push
xchg
sbb
gs
sub
mov
xchg
mov
mov
xchg
jmp
stos
cmp
insb
call
popa
jnp
cld
rolb
or
xchg
sub
insb
into
sarl
mov
in
add
loop
dec
jecxz
push
dec
popaw
inc
insb
in
add
xor
cwtl
xchg
mov
fnstenv
push
fucomi
rcll
xchg
fcomp
cmpsl
push
jnp
dec
es
addl
adc
in
lret
aam
pop
pop
scas
jmp
fisttpll
fsubrl
ror
divl
jns
dec
xchg
sub
ss
or
sub
repnz
data16
les
cmpsl
enter
mov
and
cmp
inc
or
mull
jo
clc
sub
push
add
xchg
bound
pop
xacquire
and
sub
dec
cld
stos
div
mov
stos
add
or
and
int
lahf
push
int
mov
or
fisubrs
mov
ljmp
cmp
inc
push
aam
lods
fmul
dec
imul
out
ret
sub
nop
cmpl
daa
imulb
lahf
push
sbb
adc
jno
mov
sub
cmpsl
adc
cmp
cs
test
sti
pop
call
cmp
add
xchg
jmp
sub
pushf
add
pusha
scas
cwtl
pop
sbb
sub
sbb
sbb
inc
mov
push
and
jmp
add
movsb
mov
jmp
int
push
mov
int3
sbb
sub
stc
xchg
stos
add
adc
fcomp
push
jmp
inc
scas
adc
das
fcoml
xchg
rol
repnz
cltd
and
cwtl
mov
adc
xor
pop
push
cwtl
aam
pop
and
mov
push
jge
mov
xchg
aam
loopne
mov
aaa
call
scas
out
xchg
daa
and
cmpsl
pop
movsb
loopne
lret
in
enter
sahf
xchg
cli
notb
xchg
out
add
pop
out
cmp
push
xor
sub
adc
int3
into
stos
push
jb
jmp
sub
fcoms
sbb
mov
data16
xor
inc
fnsave
movsb
popa
xor
push
arpl
pop
xchg
mov
add
aam
sub
push
inc
or
push
xchg
iret
sub
jge
and
aas
bound
cli
sbbl
test
jl
sbb
into
mov
add
mov
xchg
mov
adc
adc
nop
cmpsl
push
out
and
stc
aas
pop
cltd
dec
jne
mov
shll
push
jbe
fsubr
add
adc
pop
ficoml
or
sbb
pop
sbb
cmpsb
or
push
jb
dec
call
adc
xchg
sub
inc
int3
and
jnp
pushf
dec
les
test
jbe
lret
std
out
sub
push
scas
xor
test
adc
mov
cs
push
cld
jmp
sub
push
sub
pop
mov
das
xor
outsb
das
imul
pop
cmpsb
cmp
lret
push
push
xchg
lcall
pop
xor
push
das
pop
add
faddl
int3
add
mov
and
inc
ljmp
xchg
mov
inc
ret
xor
stos
xchg
jno
push
push
lret
mov
push
push
inc
xlat
movsl
and
mov
roll
mov
je
lock
cwtl
sub
lcall
adc
xchg
test
lds
mov
xchg
daa
out
push
jge
in
jge
shlb
pop
aaa
mulb
movsb
das
lds
ficoml
pop
adc
jmp
aaa
movsb
test
and
and
ljmp
sbbb
je
dec
loopne
fnstsw
push
adc
cmpsb
pop
lds
pusha
mov
mov
jbe
clc
mov
mov
popa
adc
add
lcall
dec
cmpsl
out
mov
push
pop
push
xchg
push
nop
pop
xchg
bound
andl
aad
ds
gs
sub
imul
ss
cmp
push
aaa
loopne
ljmp
mov
fistps
int
pop
push
insb
sub
mov
mov
fidivrl
sub
je
mov
addr16
adc
mov
cmpsb
mov
test
and
scas
mov
sub
lods
inc
imul
push
sti
stos
movsl
js
and
cmpsb
mov
popa
sbb
stos
leave
out
push
jo
ljmp
pop
cs
add
outsl
add
sub
cltd
cmpsb
xor
ljmp
inc
es
inc
push
out
sbb
xchg
stc
repnz
push
sahf
fdivrs
cmpsb
stos
or
push
lret
scas
arpl
cmpl
out
mov
pop
pop
xchg
dec
mov
shr
in
add
mov
pop
out
inc
cmp
dec
cli
pop
aas
push
sbb
enter
push
nop
fs
out
sbb
dec
dec
jecxz
push
push
fstpt
push
fsub
and
push
dec
fs
lods
lret
mov
and
scas
mov
pop
jg
push
jns
stos
sub
fistpl
push
cmc
mov
les
test
pop
xchg
sub
dec
test
fsts
inc
pop
clc
xchg
inc
lods
fstl
pop
dec
es
push
test
xlat
lock
insb
sarb
je
sbb
pop
cmpsl
cmpsb
es
xchg
fs
pop
push
ljmp
test
xchg
push
pop
inc
das
mov
rcll
cmp
ret
or
mov
and
dec
mov
xchg
out
into
mov
or
ficomps
mov
js
add
cmpsb
pop
pop
mov
or
je
mov
sub
test
in
and
int3
ljmp
and
push
mov
stc
cmpsb
dec
in
cltd
sbb
xchg
push
iret
pop
cltd
push
adc
nop
rcll
mov
push
loopne
pop
xchg
cmpsl
sbb
enter
cmc
and
into
in
dec
stc
mov
push
fwait
rcll
outsl
mov
xor
sub
pop
pop
popa
test
sti
mov
add
out
call
pop
mov
sub
aam
bound
stos
lds
aad
das
rol
jg
inc
push
push
push
out
cmpsb
adc
pushf
xchg
or
xchg
test
xchg
and
sbb
pop
cmpsl
icebp
or
pop
cmpsb
cs
mov
push
nop
and
push
or
sub
or
scas
nop
or
cltd
fsub
lock
xchg
fs
dec
test
or
outsl
enter
ret
lds
aaa
pop
cmpl
mov
fsubp
cmpsl
popa
dec
in
inc
push
sbb
inc
sbb
aad
shll
mov
pop
je
mov
adc
jnp
fmull
aad
cmp
inc
scas
adc
cltd
aad
sub
cwtl
hlt
insl
jno
popf
push
pop
or
das
lods
dec
mov
cmpsb
subb
mov
cmpsl
pop
pop
aam
add
and
imul
ljmp
into
add
fiadds
in
int3
aaa
cmpb
inc
insl
cmp
xor
and
call
dec
pop
stos
sub
xchg
push
xchg
fwait
sbb
cmp
stos
mov
imul
xchg
movsb
int3
and
pop
mov
scas
cmc
aaa
aas
inc
push
inc
cmpsb
cwtl
aam
or
inc
add
xchg
or
ljmp
xlat
mov
stos
xchg
cmp
rcl
and
inc
insl
push
add
push
cmc
stos
out
imull
loopne
pop
daa
rclb
add
stos
stc
adc
cmp
xchg
fisubl
enter
dec
nop
mov
inc
xor
pop
xor
stos
mov
mov
sub
and
pop
inc
out
dec
dec
sub
out
xchg
scas
dec
daa
xchg
lock
ret
xchg
outsl
movsl
movsb
mov
inc
cld
cltd
xchg
mov
push
cmp
xchg
or
leave
pop
subb
xor
cltd
test
xlat
and
out
aas
lods
or
and
push
cmp
xor
dec
enter
shlb
lahf
mov
xor
outsl
dec
ljmp
xchg
push
or
pusha
lahf
loope
insb
sbb
test
cmpsb
cli
jle
cwtl
pushf
repz
add
test
pop
into
or
js
int3
rcr
and
test
or
cld
push
in
loopne
xor
repz
and
jle
lcall
dec
add
mov
push
fsubrs
rcl
add
icebp
sbb
mov
push
cmpsl
dec
movsl
scas
dec
xchg
aam
ljmp
lcall
inc
jnp
jbe
fstl
shr
push
scas
dec
out
adc
sub
push
or
sahf
adc
rcl
mov
dec
outsb
pop
jb
out
cmp
sbb
lea
daa
mov
xchg
mov
lcall
push
jnp
into
jo
add
cwtl
test
xchg
mov
adc
pushf
lods
data16
push
xchg
adc
mov
sub
dec
and
stos
dec
or
repnz
xchg
loop
xor
mov
outsl
leave
mov
xor
imul
sub
lret
pop
leave
push
das
aad
dec
jno
push
nop
mov
pop
les
or
call
out
inc
sarb
sbb
mov
ljmp
sahf
inc
dec
cmpsl
push
mov
jle
push
cmp
push
sub
les
das
adc
jmp
lods
std
xor
push
mov
test
call
repz
ffree
ret
ljmp
and
adc
push
in
sub
or
std
sbb
rcrl
pop
arpl
fisttpl
and
test
and
dec
into
lock
aam
popa
push
adc
or
inc
inc
clc
xor
inc
cmp
into
clc
nop
xlat
add
push
pushf
adc
movsb
xchg
push
mov
mov
das
scas
cwtl
mov
insb
sub
hlt
mov
push
and
mov
cld
shll
xchg
sub
popf
jle
sahf
add
dec
mov
loop
test
fbld
movsl
mov
push
sub
aam
mov
js
xchg
cmpsb
sub
hlt
movl
repz
pop
xchg
dec
or
pop
leave
mov
andb
inc
das
les
rorb
fsubrs
sub
lock
pop
les
aaa
sub
jmp
cmpsb
ret
pop
xchg
lods
fidivrs
push
es
shll
cmp
sbb
icebp
or
sbb
sub
nop
mov
sub
mov
stc
test
lret
cmp
push
pop
lods
push
dec
sbb
push
fimuls
movsb
jg
adcb
mov
negb
sub
rcrl
mov
mov
cmpsb
push
shlb
stc
dec
subb
jmp
push
pop
decb
iret
sbb
push
test
push
lock
sub
xchg
icebp
popf
pop
push
pop
add
jb
push
sbb
push
call
cmp
lcall
pop
jl
mov
mov
lods
cmp
das
xor
sub
cmp
fcmovu
les
jmp
mov
lds
out
cmp
sub
or
pop
push
adc
jmp
inc
sub
inc
lock
pop
inc
mov
sbbl
loopne
cmpsb
sti
dec
cmp
shrl
add
cld
test
push
lods
mov
jmp
and
and
sbb
lods
ljmp
xchg
mov
or
pop
leave
je
loop
pop
dec
mov
jae
lds
fwait
cmc
push
lock
and
aam
shlb
leave
addr16
popa
mov
push
lcall
mov
inc
insl
xchg
aaa
cmp
or
aad
push
cmp
cmp
ret
lcall
shrl
js
push
xchg
cmpsl
jne
cmp
fcom
pop
pop
cs
cmp
inc
cmpsb
inc
cmp
push
cmp
test
add
or
jns
add
push
adc
sbb
xchg
adc
in
sub
dec
out
std
bound
scas
in
movsb
jg
int3
int3
inc
ds
jnp
lret
mov
dec
push
in
mov
in
jmp
popf
mov
shrb
push
test
pop
scas
pop
xor
icebp
push
jp
insb
fs
mov
xchg
adc
sub
in
mov
call
test
mov
add
faddl
sub
pushf
cmc
inc
lahf
mov
dec
cmpsl
ret
or
adc
push
inc
into
xchg
je
iret
sbb
ret
cmpsb
notl
in
mov
inc
pop
sbb
in
outsl
jmp
ljmp
and
xchg
andb
lods
push
or
jp
xor
dec
sub
push
popa
sub
and
jnp
daa
adc
movsl
push
cmpsb
sub
inc
mov
dec
ret
pop
pop
dec
inc
inc
xor
inc
pusha
hlt
inc
push
ja
popf
xchg
cltd
push
popa
test
scas
fs
mov
cmpsb
cmp
rcll
ljmp
jo
inc
enter
lret
sub
out
scas
insb
sub
loope
pusha
xor
out
or
pop
push
les
enter
inc
outsl
cs
aas
mov
xor
arpl
mov
push
fistpl
cmp
jnp
fcoms
int
cmp
add
push
mov
daa
stos
push
ds
in
sub
xchg
sub
cld
subl
cmpsb
out
cwtl
ljmp
enter
jo
out
rorb
das
ja
mov
in
outsl
xchg
cmpsb
or
sub
into
push
stc
mov
popl
pop
test
lcall
mov
mov
cmpsl
sbbl
lds
mov
pusha
cmpsl
mov
scas
das
jo
sarl
xor
andb
lcall
rorb
sarb
sbb
outsb
out
dec
sub
push
stos
fs
lock
bound
push
dec
std
push
js
cmp
and
js
inc
insl
mov
sub
mov
mov
lcall
ljmp
imull
loopne
adc
pop
daa
in
insl
scas
push
inc
pop
std
arpl
mov
in
push
out
jmp
test
mov
das
sbb
sarl
je
das
loope
xchg
mov
or
aaa
pop
nop
arpl
ret
dec
lret
popa
popa
test
pop
push
das
jg
sbb
dec
mov
cmpsb
pop
int3
lret
push
test
imul
iret
movsl
and
in
and
mov
jae
dec
stc
xchg
out
test
mov
fisubs
push
clc
push
or
mov
out
dec
pop
xchg
roll
rcl
in
sbb
lods
das
out
jo
fstpl
push
push
and
xchg
imul
mov
incl
ret
push
fisubrs
das
aam
pusha
dec
arpl
xchg
dec
test
pop
cmp
mov
dec
dec
stc
int3
or
and
sub
bound
add
cs
push
and
fcmovnu
lahf
test
push
out
mov
into
jmp
mov
xchg
inc
lods
add
scas
mov
inc
mov
mov
imul
loopne
rorl
push
sbb
gs
rorl
popa
push
push
scas
mov
inc
mov
gs
jno
ds
shrb
clc
mov
js
test
outsl
or
and
loopne
mov
push
data16
in
sub
add
push
dec
and
das
push
mov
incl
inc
cltd
mov
mov
pop
cmp
cmpsl
and
das
stos
add
imul
push
mov
xor
repnz
dec
xchg
popa
pop
popa
aas
mov
xchg
aad
lret
aaa
and
add
cwtl
mov
jmp
adc
mov
sarl
mov
mov
fsubrs
aas
mov
lods
mov
jo
in
jl
mov
ja
add
sbb
xchg
int
test
pop
mov
xchg
repz
mov
xchg
xor
sub
pop
arpl
fisubl
jb
adcb
adc
inc
lods
loope
es
out
outsl
pop
mov
sub
jmp
jg
sub
mov
inc
xor
sub
paddw
or
icebp
aam
sub
dec
xchg
mov
push
sub
cltd
das
out
hlt
mov
dec
cwtl
scas
push
and
das
scas
ja
cs
ret
cmpsb
jbe
adcl
pop
fcoml
and
xor
adcl
js
fdivp
dec
test
xor
cmpsb
jns
ja
enter
mov
jl
mov
xchg
subl
sbb
popa
push
push
lds
faddl
sub
add
push
push
jl
xchg
shrb
cld
cs
fsubs
mov
aam
pop
xchg
mov
sub
je
cltd
loope
into
call
push
xchg
mov
mov
cmp
mov
or
xchg
dec
mov
popf
cli
cmp
es
push
sbb
jl
movsl
sub
xchg
adc
jbe
mov
push
enter
jns
xor
call
mov
xchg
and
and
stc
add
sti
cmpsl
pop
popa
and
data16
cs
ja
in
popa
loope
xchg
scas
sub
test
jmp
icebp
xchg
xor
jmp
ficoml
outsb
sub
es
lods
push
fwait
out
inc
mov
xchg
test
cmc
add
rorb
lea
adc
sub
push
jmp
scas
pop
fs
adc
jne
out
into
mov
xchg
loopne
sbb
jl
ds
sub
repz
out
dec
loopne
inc
sti
das
xchg
inc
hlt
pop
push
sub
adc
cmpsb
push
test
adc
mov
jp
adc
stos
sti
cwtl
imul
and
sub
add
insl
or
sub
jnp
mov
scas
orl
mov
or
popf
insb
dec
fsubrs
int
stc
jmp
shll
repz
push
jge
mov
and
pop
xchg
adc
mov
jge
xchg
xor
xchg
call
lds
dec
inc
stos
movl
inc
or
pushf
or
lods
loopne
xchg
fidivrs
sbb
mov
lret
in
mov
insl
jmp
or
jg
in
scas
js
sbb
shl
mov
cmp
es
scas
cmp
int3
push
xchg
push
in
clc
cmp
les
inc
cwtl
aaa
pop
mov
jno
enter
dec
jb
popa
test
mov
iret
mov
xor
xchg
or
xchg
repz
pop
out
loopne
cld
ss
mov
sub
ret
pop
mov
stos
cs
push
dec
imul
stos
and
mov
cmovo
in
and
mulb
stos
rolb
add
push
mov
adc
hlt
daa
xchg
bound
push
fs
jo
mov
mov
aaa
push
and
pop
xchg
test
and
mov
jae
mov
jbe
or
pop
mov
xchg
mov
xchg
scas
in
imul
lods
in
in
adc
or
cmp
sbb
mov
cmc
mov
mov
xor
cmp
out
sub
rol
lods
cmpsl
pop
popa
sahf
pop
repnz
insl
neg
andb
xchg
sbb
sub
sub
xchg
es
mov
mov
daa
add
mov
stc
sub
cmp
push
in
dec
arpl
mov
jmp
push
sub
pusha
out
lock
fldt
ljmp
ret
lock
cli
shlb
lods
test
push
aaa
stos
xchg
out
xlat
pop
fs
icebp
cmp
in
imul
jae
fbstp
hlt
add
cmp
arpl
sub
sub
lea
inc
mov
cmp
jo
adc
xor
scas
es
sbb
sub
sbb
insb
lods
sbb
les
test
sub
shrb
sub
mul
xchg
inc
dec
cmp
cmpsb
push
ret
jl
cli
outsb
stos
out
pop
jns
pop
push
mov
cmp
bound
cmc
test
ficomps
ljmp
js
push
jns
in
pop
sub
mov
int
cmpsb
notb
inc
adc
xchg
mov
andb
sbb
xor
mov
xchg
in
mov
push
mov
notl
jne
sub
pushf
add
cmpsl
push
lods
pushf
mov
int
and
inc
push
test
sub
js
push
or
repz
xchg
cltd
jmp
ficomps
test
jo
fnstenv
out
push
outsl
in
lods
imul
loop
out
jmp
fists
mov
int
lods
adc
loopne
pop
xchg
sub
aam
push
xchg
imul
cli
and
ja
xchg
stos
bound
stos
movsl
xchg
clc
popa
pop
and
cld
dec
and
adc
jns
and
fs
push
jge
in
out
jg
mov
stos
ds
xor
aas
test
xchg
or
mov
jne
push
xlat
mov
xor
xor
pop
push
das
inc
or
lds
dec
dec
mov
pop
enter
gs
pushf
or
popf
in
fs
ja
pop
lret
dec
and
daa
outsl
sub
pop
int3
sbb
jp
iret
in
sub
and
fbld
xor
push
jbe
fdivr
xor
repnz
jns
mov
cld
enter
sub
popf
test
sub
dec
xor
cmp
test
dec
mov
push
fldcw
xchg
or
test
ja
int3
push
or
jl
in
clc
sub
test
sub
push
dec
stos
lods
sub
push
jge
sub
hlt
loop
and
lds
test
pop
shrl
push
fdivrl
shrb
outsb
int3
jg
shrl
arpl
loop
test
call
stos
stc
sub
push
in
ror
adc
mov
shrl
lods
cltd
sbb
call
and
popa
ret
aas
arpl
mov
and
sbb
pusha
and
mov
je
sub
fcmovb
pop
jecxz
lret
loop
ret
lcall
fwait
mov
pop
lods
lods
stos
push
xor
call
mov
push
sub
and
test
imul
dec
test
insl
lods
ljmp
dec
adc
test
mov
fwait
lret
stos
mov
pop
scas
pop
in
mov
loope
inc
scas
stc
sub
repnz
jmp
mov
loopne
loopne
pop
xchg
sub
sub
or
sub
stos
push
movsb
popa
jp
sub
loopne
and
pusha
loop
sub
loope
loopne
stc
push
stos
cwtl
sub
mov
sub
jecxz
and
loop
mov
sub
sub
pop
pusha
call
in
sub
imul
and
stos
xchg
daa
out
leave
lods
cltd
out
loope
loope
mov
sub
and
das
aad
loopew
pop
sub
je
mov
fs
stos
call
shl
cs
sub
into
scas
insb
arpl
stos
out
popa
ljmp
movsl
cwtl
test
daa
jmp
leave
scas
cltd
mov
stos
icebp
sub
loopne
leave
push
sbb
iret
shl
test
mov
js
jp
add
mov
arpl
sbb
sub
inc
mov
xchg
test
adc
movlps
dec
or
inc
mov
test
and
cli
inc
daa
mov
mov
dec
push
mov
test
cmp
cmp
int3
mov
push
jge
xchg
lret
fldt
ljmp
push
ret
push
fcom
je
hlt
aas
dec
xor
jo
leave
in
inc
sub
xchg
mov
xor
fs
outsb
outsl
rol
movsl
and
clc
cmp
add
pop
int
rcll
aas
or
loopne
sub
mov
and
cmpsb
int3
add
mov
xor
and
call
xor
and
das
push
mov
mov
leave
or
mov
and
lods
jno
fsubrs
push
jmp
stos
popa
xor
data16
dec
xor
dec
test
xchg
mov
dec
cmpsl
cmpsb
jl
cmp
cmc
jns
cs
add
and
lcall
push
lcall
lea
enter
loope
pop
fs
icebp
inc
data16
lahf
mov
cmpsb
inc
inc
insb
je
int
mov
or
dec
dec
test
and
scas
push
add
and
stc
and
lret
and
push
sub
imul
add
out
fstp
popa
dec
das
fs
ja
push
jbe
mov
xor
popa
jno
pop
push
mov
jbe
xchg
inc
mov
mov
in
dec
aad
mov
movsb
lahf
cmp
stc
std
push
imul
js
aaa
scas
test
xor
and
and
cmp
pop
or
test
testl
lds
jbe
push
arpl
push
push
popa
aam
jae
jle
cld
add
cmpb
movsl
fcmovbe
jmp
or
push
cmpsl
fcmovnbe
xor
hlt
dec
cmp
ficompl
pop
cmpsl
mov
nop
rcrb
js
cmpsb
movsl
sbb
sub
orb
add
repnz
mov
xlat
fidivrs
rolb
std
dec
mov
push
and
mov
adc
call
js
cmpsl
or
loopne
pop
cmpsb
arpl
rcrl
scas
add
rorb
sub
popa
pop
int
mov
xchg
inc
fnstsw
js
out
mov
int
outsl
mov
jle
jo
cmp
xchg
rcrl
or
mov
push
insl
add
adc
jg
js
add
xchg
pop
dec
or
or
inc
jae
or
out
lods
fildll
in
and
mov
jmp
pop
pop
cmpsl
push
xor
shl
in
cmpsb
xchg
cmp
adc
xchg
stos
inc
in
push
jno
aas
lret
stos
push
scas
or
out
out
lret
icebp
lahf
sbb
or
sbb
xchg
xchg
popa
ffreep
lock
cmp
lds
inc
into
aam
jno
cmc
pop
sub
and
sahf
push
push
outsl
testl
xor
and
std
inc
fninit
push
test
mov
js
lods
rclb
xchg
rcr
jl
and
cmpsb
push
sub
jecxz
dec
push
mov
add
push
cmp
test
cmpsl
inc
push
scas
stc
cwtl
pop
cltd
cmp
mov
and
mov
sbb
les
xchg
test
mov
mov
or
inc
and
mov
insb
aas
js
adc
sub
sub
out
cmpsb
stos
adc
arpl
js
cmp
mov
pop
lret
ret
mov
mov
cmpsl
and
mov
scas
push
outsb
jle
gs
add
das
lcall
test
push
into
aam
push
sub
test
fs
sbb
test
fucomip
mov
bound
jne
sub
shrl
arpl
sbb
inc
test
adc
cld
mov
test
fsts
test
sub
in
jmp
scas
push
stos
pusha
sbb
test
sub
inc
int
sub
out
inc
sahf
movsl
shlb
fbld
sti
test
inc
bound
pop
test
out
add
call
lret
test
mov
loopne
inc
and
test
adc
test
and
stos
xor
test
aaa
pop
data16
and
mov
push
arpl
int
sub
insb
pop
fs
in
outsb
mov
ret
stos
sub
ret
loopne
sub
out
jno
int3
and
movsb
mov
adc
imul
pop
and
in
and
and
ljmp
out
das
out
jecxz
sub
dec
fs
push
icebp
cmpsb
dec
std
jge
sbb
mov
pop
lahf
mov
loopne
ret
popa
enter
insb
outsl
xchg
sub
and
subb
shlb
movsb
test
pop
arpl
fldenv
xor
xchg
sub
sub
imul
shll
sub
mov
insl
sub
stos
push
add
sti
sub
gs
lods
and
out
in
loope
loop
and
loopne
aad
mov
pop
bound
insl
mov
icebp
movsb
stos
outsb
loopne
movsb
stc
scas
lea
fs
loope
outsl
inc
lods
stc
lods
sbb
lods
loope
sbb
loopne
popf
push
insl
fisubrl
pop
and
cmpsb
fisubl
xchg
push
scas
add
mov
jbe
in
fimuls
mov
test
cmp
mov
leave
push
sub
xchg
dec
inc
movsb
pop
push
pop
mov
fistpl
lock
mov
xor
aas
fimull
into
sub
xchg
pop
or
andl
cmp
push
sbb
clc
imul
les
stc
push
inc
shll
inc
loop
inc
mov
fsubr
fwait
xchg
sub
ljmp
push
push
cmp
test
dec
cmpsb
and
adcb
out
or
stos
dec
leave
mov
sub
addr16
insb
xor
jg
jle
insl
pop
sbb
sub
mov
mov
popa
and
jecxz
test
mov
dec
inc
js
rolb
push
pop
jg
xchg
repnz
and
aam
dec
imul
adc
int
push
and
scas
test
fiaddl
rorb
inc
mov
jmp
mov
pop
arpl
das
pop
movsb
push
cmpsl
cmpsb
pop
sub
in
inc
push
lock
hlt
cmp
mov
loopne
movsb
popw
jge
and
xor
inc
out
cmpsb
lret
mov
stos
mov
jo
lcall
imul
pusha
push
add
fsubrl
or
sub
add
lret
test
push
andb
loopne
adc
scas
mov
sub
xchg
fs
imul
scas
loope
push
pop
cmp
and
bswap
mov
sbb
xchg
jecxz
push
mov
jno
arpl
je
out
adc
shrb
add
loop
addr16
lcall
data16
pop
cmc
stos
mov
int3
mov
mov
movsb
jecxz
stos
cmpsb
lret
loopne
inc
xchg
out
insb
cmp
push
int
bound
test
mov
add
scas
inc
cmp
pop
xchg
es
sbb
sub
jmp
int3
mov
test
and
rorb
mov
jnp
jg
inc
popa
jl
mov
and
mov
insl
adc
fadd
fstpt
push
fs
test
test
inc
mov
and
push
mov
aad
adc
aas
das
and
inc
push
test
mov
fs
cmp
clc
cmc
cmpsb
lahf
clc
jge
in
jg
push
daa
scas
xor
popa
sub
push
ja
imul
mov
js
xor
xlat
sbb
clc
les
mov
in
push
icebp
jb
leave
jo
pop
sub
js
cmpsb
in
jne
fldcw
mov
outsb
cmpsb
dec
in
movl
cmp
fdivs
or
lea
sub
das
popa
inc
sbb
sub
pop
push
jnp
mov
js
cmp
int
xchg
lods
call
adc
mov
push
sub
in
xor
adc
jmp
sbb
js
cmp
imul
lahf
dec
xor
fidivl
loopne
mov
jmp
shl
outsb
jbe
stos
mov
and
fmuls
and
xor
lahf
and
inc
add
scas
mov
pop
adc
aas
shrl
mov
pop
push
jp
test
mov
loopne
add
outsb
imul
aas
mov
jb
inc
fisubl
mov
ljmp
push
jle
sub
out
fidivrs
out
lret
adc
xor
adcb
test
cwtl
scas
mov
in
xchg
add
jle
in
lret
in
cmpsb
sbb
push
lret
dec
enter
jne
and
insl
mov
mov
pushf
mov
sub
sub
dec
mov
cli
add
jecxz
fwait
sub
push
push
or
mov
addr16
test
adc
push
lods
test
test
pop
sub
ljmp
imul
data16
clc
push
aam
cmp
xchg
lds
mov
loopne
or
inc
sbb
dec
movsl
aam
pop
fcomp
mov
stc
jle
fwait
cmc
inc
mov
xchg
sbb
mov
movd
jl
jmp
jb
js
leave
mov
lret
std
sbb
rolb
push
and
mov
imul
pop
push
inc
add
cmpsb
pop
sbb
ret
inc
subl
mov
xor
aam
cmc
mov
nop
push
gs
insb
mov
notl
pop
adc
das
mov
jecxz
imul
inc
fadd
sahf
jg
cwtl
stos
rolb
push
rol
das
aad
fmuls
fcomps
popf
std
pop
popa
lds
mov
icebp
inc
cmc
enter
mov
jae
mov
data16
adc
mov
inc
sub
xchg
dec
sti
adc
inc
ljmp
scas
insl
sbb
jmp
cmp
push
icebp
test
add
fwait
jnp
or
outsb
lret
sahf
pop
sbb
cltd
push
test
scas
loopne
test
dec
in
xchg
in
adc
adc
leave
push
into
gs
std
loopne
fiaddl
aad
js
xor
gs
pop
sub
test
imul
in
lea
repnz
jae
ljmp
and
inc
mov
xchg
sub
dec
xor
jle
pop
lock
lds
cs
leave
cmpsb
xor
fists
cmp
andb
aad
rol
sbb
jmp
add
lcall
sbb
movsb
jae
int
sub
mov
and
dec
mov
repnz
aas
mov
jle
ljmp
stos
ljmp
repz
aas
push
cld
push
xlat
ds
sub
adc
ficoml
lcall
arpl
jecxz
ljmp
loope
rolb
jae
xchg
inc
lods
insb
cld
inc
push
cmp
shr
les
mov
sub
push
in
mov
in
out
cs
imul
out
ror
xchg
loope
push
pop
cli
jecxz
and
push
mov
mov
in
mov
scas
push
repz
cmc
xchg
out
in
xchg
jmp
cmp
leave
xchg
pop
jmp
ret
int
stos
cmp
ja
push
fldt
mov
test
adc
mov
cmpsb
xchg
add
daa
leave
rcrl
pop
int3
cmp
in
push
mov
or
int3
push
pop
push
push
mov
lcall
mov
lcall
in
xchg
imul
mov
lds
sub
psllw
and
jl
xchg
jg
rcrb
and
dec
pop
pushw
mov
and
inc
ja
loop
jl
lret
sbb
jge
nop
jmp
scas
mov
and
stos
hlt
and
mov
ss
jl
xchg
mov
sarb
xchg
popa
mov
das
scas
or
xchg
cmp
outsl
lcall
push
jge
loop
stos
pop
test
jmp
cld
jg
pop
and
das
and
jecxz
mov
ljmp
xchg
lds
mov
es
add
psubw
mov
mov
lcall
mov
pop
loop
repnz
sbb
out
add
repz
mov
push
shll
loopne
ret
es
cmc
jl
push
incb
and
insl
ss
rcll
xor
add
dec
iret
ss
jae
int3
test
cmpsb
outsl
xor
mov
sub
cld
mov
push
mov
fstps
test
jl
push
cmp
pop
imul
scas
mov
icebp
mov
xchg
dec
xor
mov
int
negb
aas
or
sbb
xchg
shl
jnp
fmul
pusha
movsl
push
pop
cs
cld
data16
or
mov
int
pop
test
xchg
les
ret
fwait
push
pop
and
popa
out
test
test
ret
sub
mov
pop
es
out
cmp
xchg
and
jmp
loop
movsb
movsb
iret
in
push
xchg
mov
sbb
mov
adc
push
or
jp
mov
leave
aam
roll
xor
jae
dec
in
das
lock
or
neg
mov
popf
cmp
scas
std
xchg
mov
data16
lret
adc
mov
jg
cmp
loopne
and
cmp
mov
mov
cmpsb
mov
imul
push
sbb
shll
ret
sbb
sub
clc
push
fucomp
push
sub
cmp
fidivrl
gs
and
mov
test
or
loope
hlt
fstl
dec
pop
mov
pop
sub
cltd
in
sub
jne
push
jecxz
cmpsl
jg
loopne
mov
add
lret
fisubl
repnz
rcll
ja
jae
scas
lret
loope
xchg
iret
sub
mov
mov
scas
ljmp
push
cmpb
xor
lods
enter
call
lea
xor
push
cli
out
push
cli
cmpsl
adc
call
mov
push
fsubr
nop
inc
xlat
cmp
lcall
icebp
fucomip
pushf
inc
xor
ljmp
sbb
into
push
dec
movsl
mov
lods
or
iret
cmpsl
loope
das
scas
fdivl
je
mov
les
hlt
cmpsb
lods
loope
xchg
xchg
xchg
testl
outsb
inc
sub
test
push
jnp
xchg
out
andl
out
xchg
dec
jo
stos
les
xchg
push
jno
call
clc
cwtl
sub
lods
push
fstpl
dec
int
bound
and
dec
nop
stos
xchg
test
js
mov
or
fimuls
xchg
fiadds
repnz
and
or
xor
dec
loope
inc
lcall
adc
or
shlb
mov
xchg
dec
sub
sub
ret
cmp
mulb
dec
js
repz
lret
lcall
loop
in
test
je
lds
xchg
movsl
outsb
mov
enter
cmpsl
dec
fadd
cmp
sub
fildl
arpl
xor
mov
enter
or
pop
mov
nop
lds
cmc
fadds
push
fsts
js
jmp
push
daa
aam
pop
push
scas
insb
test
jl
popw
into
push
or
and
jmp
mov
ss
push
and
int
dec
mov
aam
push
fcomps
sub
iret
sets
inc
add
add
or
out
push
mov
or
sub
jbe
or
repnz
dec
adc
xchg
lock
hlt
xchg
adcl
jo
rclb
es
pop
leave
cmpsl
pop
cmp
aam
or
lds
aaa
jnp
lds
shlb
cmpsb
stos
mov
hlt
or
xor
fadds
push
aad
mov
addr16
push
mov
sub
sbb
ljmp
into
popf
aas
pop
and
mov
adc
and
xchg
adc
sete
out
jbe
mov
or
xchg
mov
cwtl
sub
mov
xchg
enter
mov
sub
dec
enter
mov
push
loopne
pop
pusha
adc
lret
movsb
fstl
outsb
cmp
xlat
mov
dec
aas
mov
mov
rcrl
mov
mov
sub
cmpsb
in
push
mov
inc
das
sarb
push
pop
lcall
sub
test
enter
in
jl
push
mov
pop
mov
lds
lret
pop
dec
mov
jge
add
stos
test
mov
icebp
push
or
xchg
lcall
loopne
shr
fsubrl
push
out
mov
lods
lds
jl
inc
inc
fcoms
xchg
lret
sub
jge
aaa
add
call
sbb
inc
xchg
leave
push
gs
sub
cmpsb
stos
jl
in
and
movsb
adc
arpl
add
ret
bound
lgs
in
scas
popa
leave
cmp
fnclex
fisubl
lods
add
add
test
or
in
cmp
mov
int
mov
cmc
and
out
xor
jns
mov
ljmp
shlb
das
test
pusha
lcall
cmp
les
adc
xchg
push
jae
pop
mov
xor
insl
push
test
test
loopne
jecxz
jb
leave
mov
cmpsl
rclb
pop
sub
mov
movb
xchg
push
mov
xchg
push
mov
cmpsb
lods
stos
push
cmpsl
push
mov
jg
lahf
scas
mov
cmp
sbb
scas
andl
and
clc
inc
bound
fcom
jb
fwait
adc
test
mov
sub
sub
out
mov
push
test
add
fadds
push
test
jns
pop
adc
imul
sbb
fldcw
jo
test
aam
test
loope
outsb
push
test
pop
mov
fcompl
push
mov
cmp
jp
test
jg
push
mov
test
cmpsb
insb
and
jmp
and
jecxz
enter
cmp
xchg
in
stos
cmpsb
lea
int
sub
in
sti
sub
mov
es
test
push
lea
dec
call
and
sub
in
frstor
sub
cmp
jecxz
in
sub
fprem
mov
add
fidivs
pop
jmp
pushf
sub
push
test
out
sub
inc
sub
sub
aad
pushf
sub
mov
shlb
es
sub
loop
dec
pop
cld
mov
gs
jecxz
and
lods
scas
ds
ja
imul
test
stos
sub
mov
sub
stos
enter
and
loop
ljmp
and
sub
loopne,pn
ret
lods
in
lea
fsubrl
cwtl
outsl
push
out
jmp
daa
ljmp
pusha
loope
loopne
movsl
dec
push
cs
pop
das
loop
jecxz
mov
icebp
jmp
insb
jp
dec
popa
fisubl
stc
int
cmpsl
sub
fsubrl
mov
fucomp
lods
das
mov
mov
leave
and
pop
loope
loopne
test
sub
fsub
pop
in
repnz
out
mov
subb
xor
jp
movsb
stos
sub
sub
and
sub
outsl
loope
inc
movsl
sti
loope
stos
mov
imul
xor
jmp
mov
and
pop
in
pop
lcall
push
int
aam
icebp
dec
fsub
add
mov
xlat
sub
aam
in
das
fcomps
mov
pop
out
pop
hlt
sub
cwtl
in
or
push
ss
imul
out
js
das
aaa
dec
and
popf
push
fwait
lahf
adc
dec
pop
pop
jne
pop
jae
push
push
add
das
ja
int
pop
movb
repz
mov
mov
adcl
das
push
int
and
mov
js
sti
inc
fdivs
dec
data16
adc
or
push
or
sub
mov
les
test
shrl
add
push
daa
adc
fwait
xchg
and
cmpsb
inc
and
sub
sbb
cmpsb
data16
xchg
nop
gs
adc
lahf
fiaddl
test
and
xor
lds
mov
push
ret
sub
inc
cmp
mov
rol
sub
frstor
stc
jle
outsb
add
cmpsb
push
fisttpl
cmc
push
pop
xchg
and
adc
scas
cs
mov
push
leave
xchg
or
loop
js
push
aam
iret
clc
cmpsl
xchg
ds
jb
mov
das
push
push
mov
stos
and
inc
repnz
add
cltd
cmp
andl
cmp
dec
fs
jl
repnz
cmp
jne
xchg
data16
mov
push
pushf
xchg
call
aam
adc
in
dec
mov
jne
imul
push
popf
in
xchg
cs
sbb
movsl
dec
out
sub
stc
imul
test
inc
push
or
stos
xchg
mov
dec
xchg
scas
sbb
mov
movsb
pop
xchg
or
loope
js
adc
pop
fucomp
ljmp
repz
sbb
adc
cmp
stc
in
inc
rcrb
mov
mov
jno
into
test
push
cwtl
das
inc
lea
enter
sub
ret
inc
ja
leave
mov
mov
pop
mov
xor
jae
lcall
cmpsl
cmp
cmpsl
adc
in
ret
dec
pop
popf
xor
ljmp
nop
movsb
sbb
in
sbb
xchg
leave
pop
movsl
push
adc
rclb
pop
inc
adc
push
pop
sbb
mov
jbe
push
sbb
pop
sub
pop
lahf
in
pop
scas
or
push
out
and
sub
mov
loope
dec
mov
jo
mov
adc
mov
pop
lret
daa
rclb
pusha
outsl
in
lcall
and
stc
cmpsb
shll
cld
repnz
push
mov
clc
shlb
sbb
addr16
push
stos
movsb
mov
lea
call
mov
pop
xchg
push
aaa
loop
repz
loopne
int
pop
push
stc
imul
mov
and
fsub
push
push
sub
cli
stos
pop
movsb
aad
sbb
cmp
mov
xchg
pusha
loopne
cmp
push
pop
pop
cmp
lret
cmp
fwait
sbb
push
pusha
xor
imul
mov
popf
mov
pop
jmp
aad
repz
and
enter
aad
out
daa
ret
jno
icebp
call
xchg
outsb
lds
mov
inc
fcmove
popa
cmpsl
rcrb
push
fmull
or
das
dec
inc
mov
test
inc
cmp
jmp
jl
push
mov
mov
cs
dec
stos
and
movsl
popa
mov
inc
sub
sbb
test
mov
inc
loope
jb
mov
pop
push
push
jecxz
sub
scas
and
xchg
xchg
ljmp
mov
jle
je
xor
jo
add
xchg
pop
and
aam
mov
inc
xlat
shrb
jne
push
push
push
and
pop
jl
push
jns
lea
mov
lret
repz
out
lcall
loope
cmp
xchg
cltd
pop
cmp
pushw
adc
cmp
retw
test
push
xor
xor
sti
out
cmc
stos
sub
sub
out
cmpsb
mov
pop
pop
shll
push
cmpsb
jns
push
sub
jmp
mov
mov
or
pusha
xor
mov
aas
leave
fwait
push
pop
or
mov
cmpsb
jne
xor
sub
sub
jmp
test
lahf
lcall
jl
in
mov
and
in
pushf
test
inc
sub
xchg
jmp
and
cmpsb
loope
rcr
adc
int
lods
movsb
sbb
in
imul
dec
out
and
hlt
popa
mov
sahf
and
mov
or
sub
pop
mov
add
out
flds
lahf
loopne
add
adc
loopne
fnsave
adc
xor
pop
lods
ljmp
loopne
sbb
popa
cmp
sub
movsb
xchg
pop
movsb
bound
adc
mov
das
jp
ret
imul
adc
ljmp
add
mov
popa
popf
int
mov
arpl
fstpt
xor
add
stos
mov
or
dec
jbe
sub
jb
je
and
cmpsb
pop
loop
add
push
mov
and
nop
inc
loope
pop
inc
subl
push
das
scas
mov
fistps
mov
mov
scas
inc
sub
xor
sbb
int3
aad
pop
adc
lods
int3
sub
push
mov
sub
movsb
in
clc
jge
xchg
inc
cmpsb
test
jge
dec
in
in
mov
xchg
adc
mov
jle
push
outsb
pop
pop
int3
jbe
xchg
inc
or
lcall
xor
je
jb
push
push
test
fisubrl
cmp
push
in
push
dec
xorb
xor
cmpsb
ds
loopne
inc
mov
inc
movsb
std
addb
int
sub
push
jmp
sub
push
fsubs
pushf
lret
push
leave
pop
push
add
mov
lcall
shrb
movsb
sbb
push
stos
and
scas
inc
mov
cmpsb
nop
mov
addr16
cmpsl
stos
ret
sub
je
pusha
push
xchg
sub
mov
inc
aad
xchg
cmpb
sarb
and
cmpsb
cmpsl
rolb
push
dec
test
or
xor
add
dec
pusha
aas
call
add
push
das
mov
les
mov
das
xchg
lds
and
enter
push
mov
cmpb
dec
mov
andl
push
pop
mov
rep
imul
jns
xchg
cld
sbb
pop
pop
das
mov
adc
insl
pop
mov
arpl
mov
mov
inc
dec
lock
fsubs
shlb
xchg
out
pop
cmc
dec
push
mov
fsubrl
imul
dec
xchg
or
les
adc
leave
shlb
inc
sub
lcall
adc
lods
or
loopne
inc
cmpsb
push
stos
mov
mov
mov
and
lods
movsb
jp
add
loopne
subb
mov
aam
test
sub
scas
loopne
test
rcrl
movsb
jmp
jecxz
ljmp
fnstcw
pusha
aaa
and
cmpsl
pop
enter
rorl
cmp
cmpsl
jne
scas
je
scas
lods
add
xchg
inc
mov
lods
xchg
popa
pop
sub
stos
adc
lods
imul
lds
or
xor
scas
mov
aad
push
addr16
and
iret
sub
test
mov
or
std
sub
ss
rclb
aam
repnz
cmpsb
adc
lret
mov
push
mov
aaa
movsb
aad
ljmp
ror
cmpsl
clc
stc
pop
les
push
scas
mov
and
clc
fisubl
addr16
mov
ja
lret
xchg
dec
cs
add
cmpsb
jge
push
lcall
es
jge
aas
xchg
push
stos
xchg
sbb
clc
scas
aas
aaa
cld
sahf
xlat
test
enter
lahf
sub
fwait
adc
jecxz
xor
scas
int3
inc
sub
in
pop
out
mov
dec
xchg
iret
or
sub
cmpsb
aas
dec
fsubs
dec
in
mov
mov
call
pop
inc
iret
pop
es
mov
in
or
adc
mov
cld
sahf
clc
mov
rcll
test
sub
fistl
push
push
xor
cli
lahf
push
cmc
sbb
mov
outsl
sub
aam
push
test
aad
xor
pop
stos
sbb
test
enter
lcall
push
ret
lds
sub
mov
cmpl
inc
testb
test
add
pop
imulb
push
xchg
cs
sub
in
mov
cmpsl
xchg
int3
pop
cmc
lds
mov
jp
sbb
xor
xchg
repnz
in
push
in
jmp
xchg
xchg
scas
movsl
pop
cmpsb
mov
stc
stos
stos
xchg
dec
out
pop
or
fdivrp
adc
sbb
jne
or
pop
jecxz
pop
ja
mov
cwtl
les
stc
cmpsb
mov
push
pop
mov
cli
xchg
aas
addr16
sbb
cld
int
sbb
rcrb
cmp
stos
and
push
mov
mov
lret
popl
into
mov
shrb
inc
mov
xchg
test
lahf
mov
scas
cld
dec
mov
or
dec
xor
pusha
sti
mov
stc
xchg
scas
jb
mov
mov
enter
lods
ljmp
ja
and
cmpsb
jno
out
enter
mov
outsb
mov
push
cli
push
repnz
or
aam
pop
sub
das
push
lret
and
xchg
or
out
inc
mov
dec
inc
mov
lcall
pop
push
je
std
test
push
aaa
mov
and
mov
out
cmpsb
push
ljmp
pop
test
mov
outsl
xchg
enter
fisttpl
int
inc
ljmp
push
insl
into
mov
gs
stos
shr
xor
rorb
dec
ss
loopne
push
jl
and
push
mov
es
push
or
inc
shrl
adc
pop
out
dec
add
push
cs
mov
pop
in
sub
or
xlat
mov
jmp
cmp
push
int3
nop
push
push
and
xchg
push
sub
push
jge
push
cmc
enter
cmp
test
incb
and
or
and
loop
fldcw
ds
cwtl
aad
lret
cmpsl
dec
rcr
push
test
aad
enter
js
lock
stos
outsb
mov
repz
enter
xchg
xchg
pusha
stos
lahf
xchg
push
xchg
mov
sub
pop
and
cmp
push
mov
push
dec
lea
cmpsb
or
push
mov
sbb
mov
cs
mov
outsl
rcrl
sub
pop
cmp
in
out
fs
push
insb
lods
scas
scas
fwait
jns
addr16
stc
push
push
loop
sbb
xchg
test
out
sarl
loop
push
cmp
cmp
push
cmp
int3
xchg
push
movsb
xchg
adc
push
lock
cmpsb
lea
test
pop
cmpsl
inc
outsl
xor
push
les
mov
cmpsb
lea
xor
sbb
ds
sub
cmpsb
mov
movsb
loop
sbb
fistl
inc
push
das
dec
scas
xchg
cld
call
mov
jg
loop
leave
out
jae
es
mov
mov
inc
rcll
mov
xchg
std
ret
lret
aaa
rcll
or
xor
cmp
mov
pop
popa
xchg
push
add
xor
es
movsb
mov
push
leave
push
rolb
shlb
shrb
push
cmp
pop
repz
enter
dec
inc
xor
das
sub
and
jmp
push
or
das
xchg
and
clc
sub
shrl
cld
jns
xchg
jb
fistps
mov
aaa
or
mov
mov
sbb
stos
cmp
lea
cmp
rcr
cmpsb
insl
add
pop
jmp
scas
add
insb
pop
rcll
daa
sub
mov
icebp
cs
icebp
cmpsl
sub
mov
or
inc
shll
aaa
filds
and
imul
dec
inc
and
add
push
loope
cmc
in
xor
inc
sub
cli
push
inc
jle
aad
lea
jae
lods
jle
jo
ja
and
ret
lds
ja
call
inc
mov
push
jge
bound
sub
push
dec
mov
inc
mov
or
mov
inc
imul
lcall
movsb
pop
popf
shlb
sub
ret
pop
fcomps
das
aam
sub
js
xchg
cmc
push
rclb
ds
sub
adc
in
xchg
cmpsl
aad
sub
mov
push
mov
pusha
in
sub
lcall
insb
popf
xor
sbb
scas
incl
sbb
leave
cmpsl
pop
push
jl
and
mov
loopne
js
cmpsb
js
xor
add
pop
push
nop
insb
add
push
iret
call
inc
in
jnp
sysret
fs
scas
cmp
inc
push
push
sub
fsubs
and
fimull
cmpsb
sbb
test
aam
cmpb
inc
xor
test
mov
xchg
xchg
add
adc
add
or
aas
in
insb
scas
insl
pop
jb
xchg
cmpsb
sub
sub
scas
pop
and
lahf
cld
mov
dec
insb
sub
insl
rcr
ret
mov
inc
into
sub
sbb
pusha
mov
sub
xor
enter
cmp
fimuls
fstl
add
jmp
int
or
enter
lods
shrl
mov
cmp
popa
shrb
jecxz
out
popf
cwtl
mov
xchg
lea
push
push
fnstenv
sub
jecxz
sub
stos
xor
push
stc
mov
repz
xchg
cmc
std
xor
shll
add
sub
xor
pop
mov
fisubrs
jnp
popa
insb
xchg
int3
insb
test
mov
add
sbb
mov
cmp
add
jmp
sbb
fs
push
cmp
mov
sbb
stos
jmp
stc
jae
rorb
xchg
test
call
and
pop
mov
cmpl
lret
imul
or
jo
and
push
rcl
xchg
or
ret
xchg
ljmp
xchg
or
push
adc
fisubs
outsb
aam
les
push
add
popf
ret
lods
cs
pop
xchg
outsl
popa
ret
or
into
fsave
inc
lods
std
xchg
in
pop
mov
into
mov
cli
add
mov
push
aad
and
pop
xchg
fs
std
les
add
das
es
mov
pop
jno
das
cmp
pop
xlat
cmp
fildl
stos
or
rorl
call
loop
rolb
addr16
cmpsl
mov
es
cwtl
aas
sub
cmc
mov
and
or
inc
sub
aam
mov
push
je
mov
push
outsl
cld
daa
scas
xor
inc
push
insl
popf
add
jmp
shrl
imul
mov
out
push
test
sbb
mov
mov
mov
pop
mov
xchg
mov
xchg
adc
mov
imul
add
xchg
mov
push
cmp
dec
call
inc
jl
test
push
testb
clc
imul
push
es
xor
loope
ret
pusha
pushf
inc
push
and
push
add
xor
sub
mov
scas
mul
fistpll
pusha
int
sub
stos
aad
add
bound
insl
and
sub
push
mov
std
cmc
jmp
into
push
inc
imul
std
fs
jae
pop
loopne
jle
test
cmp
jge
pop
stos
fcmovu
rcr
xchg
fistpl
sbb
call
stc
push
xchg
enter
lret
mov
cwtl
sub
aad
stos
out
lock
push
mov
cwtl
and
je
or
pusha
push
fildl
sub
test
push
push
push
push
inc
inc
icebp
cmp
push
cmp
jl
repz
and
inc
sub
imul
scas
jae
add
js
pusha
ljmp
dec
js
push
sub
sbb
xchg
ja
cmp
cmpsb
fcmovb
je
fistpl
int3
loopne
pop
pop
mov
call
mov
ds
jne
sub
shrb
push
add
push
pop
pop
adc
dec
mov
adc
xor
out
adc
adc
inc
xabort
xchg
push
out
inc
test
or
stos
jge
shrb
adc
cli
push
sub
pop
test
sbb
push
ret
mov
pop
fidivrs
fistpll
add
mov
notb
and
xchg
dec
test
enter
or
mov
mov
daa
loope
cmp
fstpl
rorl
shrd
push
sub
fadd
fiadds
int3
sub
jecxz
pop
xchg
pop
pusha
arpl
jb
scas
int
push
sti
dec
stos
popa
ss
mov
insl
dec
lods
in
sub
push
mov
aam
sub
xor
mov
popa
fwait
inc
iret
lods
out
rolb
push
push
and
sbb
stos
cmpsb
sub
jo
xor
scas
and
xor
adc
mov
push
sbb
imul
jns
in
fcmovne
test
and
sbbl
das
call
dec
or
add
aaa
lods
jb
xchg
push
or
mov
frstor
dec
pop
lods
mov
in
mov
xchg
lahf
pop
fwait
stos
inc
mull
imul
pop
cmp
adc
leave
pop
jmp
inc
add
aad
cmp
dec
fldt
call
imul
inc
call
dec
leave
and
movsb
fsubrl
pusha
jecxz
add
inc
js
ret
pusha
jmp
mov
jbe
shll
into
sub
dec
adc
sbb
out
inc
push
popf
xchg
mov
mov
mov
sub
lea
sbb
loop
xor
sbb
std
xchg
xchg
fsubr
daa
and
jl
mov
adc
adc
jne
fistl
fxch
stos
popa
movsl
lcall
imull
jno
test
fcoms
movsl
outsb
mov
add
jle
inc
jp
xchg
cwtl
jmp
popf
sbb
inc
rcrb
push
lret
pop
cmp
test
popf
mov
sub
cld
or
dec
enter
fists
mov
mov
jge
push
insb
mov
ja
fisubrs
mov
lock
push
test
sbb
mov
mov
cmpsb
mull
enter
movsl
inc
ds
sti
mov
repz
or
inc
sti
lods
ljmp
pop
pop
mov
lea
jecxz
pop
int
lock
enter
hlt
in
cltd
mov
add
lret
loope
jnp
push
xor
sbb
ret
jmp
mov
jne
and
cmp
mov
dec
dec
mov
call
cltd
fmuls
push
and
shll
pusha
das
push
dec
lcall
loope
fnstsw
jp
jae
pop
fimull
jae
mov
cmpsl
sub
dec
mov
push
pushl
or
inc
add
or
clc
ja
adc
dec
jg
outsb
dec
jo
call
test
mov
xchg
lea
stos
out
sbb
cmp
push
dec
sub
loope
in
mov
pop
add
mov
fsubrl
jge
mov
mov
mov
push
mov
popf
std
add
xor
pop
inc
mov
mov
mov
push
push
lret
addr16
add
or
aam
and
arpl
mov
bound
push
cmp
pop
das
push
test
movsl
mov
ljmp
mov
jbe
in
dec
int
add
ljmp
cmpsb
inc
lods
cmp
clc
cwtl
push
into
jae
sub
aas
movsl
xchg
mov
iret
test
in
sub
mov
mov
aam
fldcw
fistl
sbb
or
and
pop
and
or
fldcw
in
aaa
xchg
jo,pn
mov
pop
push
cmpsl
out
jns
dec
xchg
and
es
out
cmpsb
fidivl
inc
dec
aaa
cli
js
imul
jecxz
call
fisubrl
or
adcb
orb
inc
jge
sub
cwtl
out
mov
inc
push
xchg
adc
add
inc
inc
xchg
shrl
mov
out
and
inc
out
outsb
into
dec
cmpsb
nop
test
or
jb
and
inc
mov
int
lds
mov
inc
test
subb
xor
mov
cmc
das
xchg
call
push
aaa
sar
push
aad
push
daa
test
push
cmpsb
nop
inc
cmpsl
std
lcall
mov
rol
xor
push
int
repnz
test
nop
sub
sub
loopne
jl
gs
decl
dec
push
pop
jge
cmp
in
add
cmpsl
xchg
fs
or
iret
or
out
adc
test
jle
lret
stc
fisubrs
loope
lcall
xor
aad
jae
add
xlat
inc
sub
sub
xchg
in
mov
out
pop
mov
sbb
rorl
xchg
dec
mov
push
inc
outsb
mov
adc
pop
out
mov
add
mov
dec
cli
cmpsb
jge
jo
sbb
shlb
jo
bound
shl
js
addr16
xlat
jo
mov
test
out
jp
in
imul
mov
push
push
shrb
cmpsb
sub
sbb
sbb
adc
hlt
adc
or
xlat
mov
dec
jne
mov
add
jg
lea
rorb
or
sub
mov
incb
cmp
decl
das
fs
dec
cltd
pop
addr16
pushf
pop
dec
jl
xor
fistpll
and
xchg
dec
xchg
cmp
in
pop
or
jns
insl
int
btc
mov
in
sub
aam
inc
inc
and
lods
pop
jo
int3
mov
push
cmp
pop
sbbl
push
mov
test
popa
xchg
std
mul
ds
jae
fadds
in
xor
aam
repz
xchg
or
push
mov
push
xor
rcrb
sub
lods
lcall
push
xor
and
adc
add
jp
out
dec
outsb
adc
dec
xor
out
mov
adc
sub
pop
leave
mov
push
imul
jl
xor
mov
adc
data16
xchg
rolb
push
aad
push
adc
xor
sbb
mov
mov
jbe
sub
mov
sub
ret
test
in
adcl
and
xchg
jae
lock
mov
mov
aad
push
push
loope,pt
imulb
inc
aam
clc
test
lds
and
jmp
pop
and
inc
cltd
das
mov
or
shrb
int
sbb
and
movzwl
ja
mov
xchg
push
out
dec
sub
aad
pop
sub
in
adc
cmp
dec
pop
sbbl
stos
mov
and
jns
scas
dec
cs
shll
lds
mov
mov
shlb
insl
arpl
fnsave
xlat
cmpsl
pop
mov
call
aam
pop
mov
inc
push
jge
mov
stc
sbb
out
sbb
cwtl
ja
mov
mov
dec
xchg
dec
pop
ss
fwait
jns
sub
pop
add
or
pop
push
jge
mov
outsl
pop
jge
push
push
faddl
jge
mov
sub
cmp
add
data16
cmpsl
mov
out
jne
loope
sahf
test
bound
cli
leave
and
push
jo
xchg
mov
jne
xor
lcall
sarb
xchg
sub
xchg
cmpsb
push
inc
test
xor
cmp
icebp
out
push
test
push
cmp
xor
ja
mov
lret
popa
xlat
pminub
test
fxch
sub
mov
mov
lahf
test
push
dec
xchg
add
push
push
xchg
jnp,pt
das
scas
jp
call
test
into
test
jp
mov
or
add
lods
dec
add
jo
test
adc
add
sub
jge
push
scas
fnstenv
ljmp
das
notb
pop
mov
cmp
fmul
loopne
push
hlt
xchg
cmpsl
or
or
ljmp
popf
or
nop
xchg
dec
fstp
cmp
sbb
in
xchg
in
pop
push
mov
xchg
stos
shrl
fists
sub
jae
sub
lods
xor
in
cwtl
loope
sub
js
push
adc
mov
mov
out
sub
mov
push
iret
or
or
shrb
cmp
pop
xor
add
and
xchg
and
sbb
sub
les
push
stos
cmc
filds
jae
sarb
movsl
in
jecxz
xchg
cmpsb
xchg
test
adc
push
sarb
popf
inc
fadds
mov
insb
ds
stos
scas
enter
push
out
ds
xor
jge
lods
cpuid
mov
out
push
leave
add
shrl
jle
imul
jne
dec
pusha
push
inc
jne
or
mov
xchg
xor
insl
xchg
scas
push
ret
inc
fstps
dec
adc
or
lcall
cmp
call
daa
push
xchg
pop
aaa
out
lahf
pusha
cltd
adc
pop
flds
mov
dec
fstl
fsubl
mov
push
jns
jnp
cltd
xchg
dec
incb
sub
cmp
test
mov
in
jne
and
lds
push
dec
mov
inc
addr16
jno
adc
sarl
aad
js
hlt
aad
leave
test
popa
aam
add
jle
jbe
dec
push
inc
lcall
xor
mov
sbb
popf
dec
push
in
aad
inc
mov
mov
mov
clc
aaa
into
sub
or
enter
mov
ficoml
outsl
aad
ret
mov
int
imul
inc
aaa
pop
jae
pop
xchg
loop
icebp
xchg
es
push
xchg
cli
mov
cmpsl
or
scas
or
mov
add
ljmp
arpl
push
mov
into
aam
aad
fimuls
lds
shr
clc
adc
xchg
ss
mov
inc
aam
sub
aaa
xor
mov
sbb
mov
test
jmp
xchg
ljmp
and
arpl
xlat
dec
cmp
and
out
inc
loope
addr16
cmp
test
mov
aad
add
cmp
filds
lea
in
sbb
mov
fcomps
push
inc
xchg
lods
push
jb
inc
xlat
or
dec
lds
int
cmpsb
ucomiss
movsl
sub
daa
mov
dec
das
xchg
dec
and
test
cmc
bound
cmove
sbb
pop
test
push
or
das
hlt
loopne
cmpsl
xchg
dec
push
mov
cmp
outsb
sub
jle
popa
mov
shll
clc
cwtl
mull
lds
sub
add
sub
sub
pop
loopne
stos
push
cmpsl
aam
movsl
xchg
jle
rorb
addr16
nop
add
xchg
jb
push
in
lods
arpl
shll
cli
and
stc
mov
orb
cmp
int
xchg
jbe
pop
xor
enter
mov
push
ret
test
loope
cmc
and
loopne
int
leave
test
repz
das
fsubs
pop
push
js
xchg
inc
jno
xchg
push
sub
lods
test
enter
int3
lahf
lret
cmp
adc
xorl
hlt
push
inc
jecxz
nop
cltd
sbb
ljmp
popf
jmp
mov
outsl
inc
ljmp
adc
cmpsb
ja
sub
mov
xchg
jb
or
outsb
stos
push
pop
cwtl
scas
lret
notb
fistpl
or
mov
popa
addr16
sub
or
dec
lods
pushf
add
ja
movl
push
pop
insl
sub
sub
je
dec
jl
es
std
rcl
pop
xchg
sub
out
sub
pop
addr16
pop
adc
push
cmp
push
clc
adc
and
inc
dec
inc
or
dec
shlb
jmp
cmpsb
push
sbbl
xchg
xor
jp
gs
nop
fwait
mov
jae
cmp
sub
cwtl
bnd
cmpsl
ss
fsubrl
push
and
mov
imul
clc
mov
sub
cli
outsl
sub
or
lods
ret
loopne
adc
mov
rcrb
in
scas
insl
add
das
popa
push
or
pop
and
fadd
addb
inc
addr16
mov
and
jns
mov
shlb
mov
loop
mov
jg
cmp
insl
stc
in
test
sub
mov
sub
adc
insb
fldenv
jl
repz
cmp
push
pop
mov
ret
dec
xchg
sub
pop
inc
mov
lret
mulb
fmuls
loop
sbb
in
inc
out
mov
cltd
sbb
jge
test
cs
sbb
xlat
mov
or
or
ret
dec
aad
stos
cmp
push
nop
imul
fstpl
pushw
sahf
stc
mov
pop
cwtl
aam
push
sub
adc
push
pop
fmulp
pop
fdivr
das
pop
repnz
aam
xchg
clc
cmp
or
pop
mov
jp
ficompl
sub
bound
mov
insb
pop
mov
and
inc
sub
inc
fldcw
into
notl
sub
sbb
inc
js
xor
ret
xchg
fbld
inc
lods
or
or
jg
loope
pushf
inc
bound
leave
lds
inc
les
sbb
add
leave
adc
sti
mov
lods
xor
dec
push
std
inc
xor
sti
leave
shlb
mov
cmp
add
mov
lods
call
cwtl
push
dec
xlat
mov
and
in
aaa
inc
mov
sub
sbb
xor
sub
mov
les
and
cmpsb
icebp
cmp
ljmp
aam
xor
out
sbb
mov
notl
xchg
mov
push
mov
and
xchg
clc
aam
push
cmpsb
mov
mov
imul
fistps
add
dec
inc
cmpsb
push
nop
xchg
pop
lret
cmp
inc
cmpsb
inc
mov
pop
xor
or
cmpsl
les
mov
test
shrl
sub
jns
aas
shrl
outsl
movsb
and
sub
int
in
leave
sub
dec
mov
stos
daa
in
scas
mulb
and
shl
and
ss
xchg
movb
es
lds
lods
inc
scas
mov
or
adc
add
sbb
xchg
dec
push
stos
js
in
pushf
dec
aam
lock
loopne
jmp
push
xchg
les
push
jo
xchg
shr
inc
test
js
dec
pop
mov
pop
sbb
das
inc
jmp
ss
call
pop
mov
cmp
lret
outsl
into
sub
push
xchg
shrl
psubusb
cmpsb
mov
sarl
adc
mov
fistl
lock
dec
and
shll
in
js
test
sub
and
test
jge
dec
out
ljmp
lods
jno
push
hlt
int3
push
pop
out
sub
jb
dec
add
pushf
pop
sbb
fildl
int
and
and
jl
shrb
test
push
jge
popf
pop
push
mov
xchg
scas
and
jo
mov
dec
in
and
mov
push
mov
movsb
shlb
adc
xchg
xchg
jns
add
loopne
arpl
cmpsl
mov
loopne
out
and
sbb
and
std
push
xchg
pop
jnp
andl
hlt
inc
xchg
or
stos
cmc
fwait
mov
and
outsl
ja
add
fs
stos
push
add
into
and
inc
frstor
cmc
cmp
add
hlt
in
jne
cwtl
ss
scas
sarb
mov
stos
jno
clc
imul
push
fbld
dec
mov
fmull
int
divl
pop
mov
pop
push
popf
xchg
lds
dec
sub
mov
stos
les
mov
inc
loopnew
sub
shr
lret
pop
sbb
pop
and
sub
push
cmc
adcb
mov
xchg
mov
xor
dec
cmp
outsb
inc
cmp
rorb
std
push
cmp
in
inc
mov
sub
push
into
leave
push
jb
dec
aaa
jmp
sarb
jle
cmp
sbb
push
push
sub
in
adc
inc
xchg
fcomip
bound
push
insl
xchg
cmpsb
ljmp
mov
xchg
arpl
frstor
pop
cmp
imul
int
lods
pop
stc
dec
cltd
push
imul
pop
scas
imul
cmpsb
xor
mov
mov
xchg
out
pusha
xor
pop
adc
fisttps
inc
mov
popa
dec
and
jl
sub
lds
aam
ret
dec
xor
mov
jge
sbb
scas
and
jo
jo
hlt
stc
mov
pusha
test
test
das
out
mov
scas
fsubrs
rolb
daa
lret
mov
sub
shr
xchg
cmpsb
cmp
push
xorl
pop
popa
ja
hlt
xor
subl
dec
xlat
xchg
mov
stos
nop
cwtl
frstor
xor
lcall
stos
dec
sub
imul
add
stos
sub
iret
imul
inc
sub
nop
test
pop
stos
xchg
xlat
in
sbb
mov
insb
adc
dec
test
into
pop
inc
fidivrl
xchg
mov
inc
sub
in
xchg
data16
mov
and
jo
ret
mov
dec
cmpsb
cmp
mov
rcll
test
rorb
or
fcoml
mov
fs
mov
notl
mov
mull
sub
add
and
mov
mov
push
mov
mull
dec
in
pop
in
sbb
pop
and
and
ret
call
xor
call
fst
push
int3
inc
xchg
popf
rolb
dec
inc
xchg
mov
pushf
add
adc
pop
loopne
xor
scas
mov
imul
int
ret
jg
mov
mov
ljmp
testl
mov
mov
mov
sbb
shlb
lds
jae
popa
push
mov
dec
push
int
inc
lret
add
out
sbb
xchg
psadbw
xchg
test
add
jae
jo
cs
dec
popa
push
xchg
inc
inc
out
adc
mov
jno
xchg
cmc
xchg
jmp
popf
push
hlt
push
sti
inc
cs
push
mov
jns
aas
popa
insb
ret
or
push
call
cmpsl
das
pop
sub
lds
xchg
inc
xchg
mov
jns
ret
nop
fs
aaa
movsb
push
bound
xlat
loop
nop
cmp
scas
jne
mov
cmpsb
fldenv
sarl
xchg
in
pushf
sbb
insb
imul
mov
stc
scas
cmpsl
jno
in
mov
aam
or
jle
pop
pusha
ja
xchg
xlat
cmpsb
loop
fwait
ret
testb
jmp
outsb
or
dec
dec
dec
sub
das
je
mov
rorb
lret
aaa
mov
cmp
call
mov
jmp
ror
stos
shrb
dec
test
aas
lods
mov
jns
push
mov
push
in
jae
mov
adc
repz
pop
fnstsw
dec
adc
push
imul
push
int
adc
call
imul
add
cltd
cmp
push
cwtl
sub
adc
xor
mov
loope
adc
cmp
xchg
cmp
xchg
mov
cmpsb
and
xchg
out
mov
and
mov
fcmovb
push
mov
or
pusha
jae
sub
cmpsb
pop
and
sti
int
js
data16
imul
push
cmp
and
cmpsb
mov
push
enter
mov
jl
pop
sti
fcomi
lret
rorl
mov
pop
jb
iret
aas
andl
insl
shrl
adc
and
enter
into
aad
and
mov
cwtl
add
das
xchg
xchg
leave
mov
xchg
je
pushf
aas
mov
inc
rolb
popa
jae
js
fisubrs
pop
cmp
cmpsl
push
cmp
sbb
or
jmp
stos
or
enter
xlat
sub
jo
lock
stos
enter
inc
cmc
xchg
mov
out
sub
lret
jl
imul
popa
sub
in
mov
adc
cmp
test
test
mov
sbb
sub
or
out
lds
stos
sbb
lahf
lret
mov
pop
xchg
frstor
test
push
std
shll
pop
cmpsb
or
sub
sbb
popa
popf
mov
push
inc
imul
inc
mov
loopne
cs
repnz
mov
in
aad
cwtl
pop
aam
xchg
mov
leave
out
add
imul
sarl
stos
jecxz
cld
mov
mov
push
leave
hlt
push
sarb
mov
mov
jns
rclb
addr16
popf
frstor
lds
ret
stos
imul
movsl
std
mov
scas
stc
call
mov
dec
aaa
or
xchg
lret
adc
test
xchg
movsl
inc
sbb
push
xchg
sub
mov
push
sti
push
cmp
ja
leave
sub
insb
or
xchg
sti
pop
sub
xchg
loopne
in
sub
jp
out
in
stos
popa
or
arpl
outsl
ljmp
mov
dec
push
mov
add
mov
bound
sub
lds
enter
inc
adc
pop
clc
fistl
push
imul
lods
xchg
jns
call
mov
inc
xchg
cmpsl
cmp
into
push
mov
in
xchg
int3
sub
push
pop
shll
mov
adc
push
adc
stos
push
inc
in
lock
xchg
inc
sub
enter
pop
jge,pn
mov
add
or
movsb
push
sub
push
imul
ds
divl
shrb
out
bound
fst
out
pushf
cmp
mov
outsl
dec
popw
je
test
cmpsb
add
sub
imul
movsb
pop
inc
pop
cmp
aas
mov
fmuls
push
xchg
sub
outsb
rclb
sub
adc
xchg
xor
or
das
cmc
mov
push
mov
adc
notl
mov
fs
imul
repz
sub
aam
rorb
xchg
sub
jne
push
inc
icebp
iret
xlat
dec
unpckhps
mov
lods
mov
inc
sbb
rcl
adc
push
cwtl
xor
icebp
inc
sbb
mov
xchg
pop
out
test
fs
adc
add
out
cmpsb
xchg
scas
iret
inc
mov
popa
call
xorb
pop
push
loope
push
adc
scas
shrb
pop
test
xor
aam
cmpsb
shll
sub
ljmp
xchg
mov
stos
icebp
mov
pop
push
xor
popa
gs
jmp
fstpl
les
aam
cwtl
xor
jg
aam
test
add
stos
mov
mov
cs
jae
and
xchg
popa
int
dec
sarb
aam
popa
xchg
ficoml
mov
inc
jne
fmull
sbb
pop
push
pop
fnstsw
ljmp
lea
pop
jmp
mov
jae
ret
out
mov
in
lea
jb
inc
sub
data16
pop
ds
xchg
pop
into
xchg
loope
call
inc
pusha
jno
dec
icebp
mov
xchg
push
push
xor
lds
cld
xor
fidivl
imul
sbb
push
aaa
and
rcl
cld
test
push
popf
ds
adc
clc
mov
gs
mov
fidivl
mov
imul
and
or
cmp
test
cmpsb
sbb
fsubp
andb
pushf
das
enter
mov
xchg
sbb
js
sbb
jge
and
cmpsl
xchg
insb
cmpsb
adc
xor
outsl
add
cwtl
push
pop
pop
cli
andb
das
jns
adc
andl
mov
andl
jecxz
mov
dec
jne
cmp
call
dec
es
hlt
ret
adc
popf
fidivrs
mov
mov
ret
std
cli
pop
mov
push
mov
test
in
pop
ret
lea
adc
fcompl
icebp
ret
ret
inc
and
nop
xchg
xor
jl
jge
mov
push
pop
fcoml
aas
leave
flds
lds
dec
movsl
mov
gs
outsb
lods
in
cmc
push
imul
and
xor
lods
dec
stos
scas
pop
repz
and
call
int3
sub
cmp
jge
aam
aad
daa
xor
pop
movsb
cmpsb
inc
push
mov
sbb
pushf
inc
and
mov
mov
out
sbb
cmpsb
repnz
test
mov
pop
push
sub
push
mov
xchg
js
mov
inc
or
outsb
popf
loope
test
mov
jno
or
jecxz
pop
or
sbb
cli
lea
or
jne
xchg
cwtl
scas
movb
adc
fdivs
aad
push
icebp
sbb
mov
dec
push
lret
and
mov
stc
movsb
inc
gs
cmp
xchg
enter
js
mov
push
insb
sub
mov
fidivrs
add
cltd
xchg
xor
mov
adcb
jge
int
in
mov
incl
andb
xchg
std
xor
cmpsb
mov
jle
in
decb
mov
cmp
out
pop
inc
push
push
dec
mov
pushf
call
or
jmp
push
les
lds
ljmp
rorb
pop
mov
nop
push
psrad
fadds
inc
pop
dec
sub
push
daa
js
stos
and
lea
push
stc
add
adcb
xor
sbb
jecxz
in
sub
and
lods
push
mov
lea
cmp
lods
das
lock
adc
adc
xchg
lcall
outsl
fldenv
sub
test
movsb
cmp
and
dec
xor
mov
mov
xor
cmp
push
add
inc
add
pop
fstl
and
lods
inc
lahf
pop
mov
mov
outsb
pop
inc
iret
push
mov
stc
and
imul
lds
xor
aaa
mov
sbb
jbe
pop
xchg
adc
dec
repz
push
clc
test
int3
sbb
int3
pushf
mov
test
and
cmpsl
lds
mov
test
rep
and
inc
aas
xor
xchg
jbe
mov
push
cltd
fsub
enter
fbstp
and
mov
pop
jecxz
push
push
xchg
and
shrb
mulb
cmp
das
lea
push
stos
into
jge
daa
and
inc
js
xchg
pop
push
cmp
lahf
lea
cmpsb
sub
pop
cmp
xchg
xlat
inc
jae
test
dec
mov
mov
mov
cmpsb
inc
roll
sbb
outsl
test
mov
mov
cmp
daa
scas
xlat
and
mul
mov
add
push
xlat
mov
xor
je
mov
mov
loop
or
mov
ljmp
in
ret
pop
and
divb
mov
mov
iret
push
push
scas
cli
and
or
das
fxch
or
sub
inc
popa
mov
loope
mov
mov
scas
movsb
stos
paddsb
int
mov
je
das
scas
fsts
jne
cmp
xchg
add
jbe
stos
xchg
pop
or
cmp
lret
pop
test
popf
outsb
outsl
cwtl
inc
pop
xlat
in
xor
mov
stos
orb
imul
and
lods
add
enter
jmp
adc
in
sub
imul
pop
inc
hlt
addl
out
sub
pop
mov
jne
inc
and
sub
scas
fsub
les
push
push
test
out
inc
lods
adc
xchg
stos
outsb
adc
and
jge
lea
cli
loopne
push
int3
cmpsl
push
cmp
out
inc
lret
sbb
les
inc
or
aad
xchg
mov
fucomi
nop
fs
cmp
jae
cmpsl
ret
repz
andl
cmp
stos
push
push
int
ja
mov
pop
sub
xor
leave
mov
xchg
imul
xchg
push
icebp
in
das
push
nop
jmp
mov
loope
xchg
sbb
outsb
cmp
repnz
scas
or
pop
enter
mov
mov
icebp
decl
jp
mov
or
in
fsubs
out
sbb
pop
xchg
xor
das
in
mov
test
mov
out
or
out
adc
sub
sbb
sub
jle
idivl
in
dec
das
clc
pop
das
and
jno
mov
imulb
pop
adc
sub
pusha
dec
sub
sub
fnsave
xchg
jecxz
jno
jmp
loop
test
sets
mov
sub
int
and
jmp
shrl
int
cltd
test
jns
and
scas
and
sub
jne
pop
cmpsl
push
sub
mov
adc
sub
mov
rcr
test
movsb
lods
sub
sub
aad
lods
sub
insl
scas
sub
lods
and
push
int
loope
sub
call
sub
fsubr
and
jmp
test
dec
shll
sub
out
in
sub
cmpsb
push
leave
test
fwait
out
jmp
sub
leave
sahf
cs
sub
addr16
dec
cmp
or
sub
out
in
sub
call
pop
sub
out
pop
xor
sub
out
sub
stos
ljmp
sub
cli
cmpsb
sub
lods
sub
pop
and
nop
out
sbb
pop
and
pop
xor
lret
sub
push
pushf
fisubrs
fsubr
jbe
push
push
cwtl
scas
leave
mov
cmp
push
lods
mov
and
and
stos
push
cmp
jl
mov
and
stos
call
and
sub
out
leave
arpl
mov
test
sub
out
sub
jmp
into
test
rol
outsl
enter
insb
gs
sub
arpl
pusha
jo
test
imul
test
pop
sub
and
lea
lods
jmp
test
outsl
frstor
pop
stos
in
in
mov
cmpsl
loop
icebp
daa
scas
movsl
jmp
jmp
push
jecxz
mov
ljmp
sub
cmpsb
xor
xlat
sbb
stc
jb
pop
mov
mov
sar
cmpsb
mov
ret
xchg
adc
pop
test
and
movsb
fldln2
sub
mov
jg
mov
and
xchg
jmp
mov
inc
dec
popa
stc
cmpsb
fucomp
movsb
cmc
test
mov
pushl
pushf
ret
scas
call
mov
mov
add
sahf
sbb
add
or
cmpsb
dec
xchg
ja
test
das
test
call
cli
popa
repnz
pop
pop
leave
add
sar
mov
xor
xchg
sbb
push
loope
cmp
fidivrl
inc
mov
shlb
dec
or
sub
lahf
and
cmp
xchg
mov
leave
mov
lcall
pop
xorl
dec
enter
pop
test
adc
or
test
aaa
out
stc
or
nop
xor
inc
scas
das
test
xchg
cwtl
mov
and
aam
mov
sbb
dec
jo
test
enter
inc
push
sbb
int3
jge
xchg
inc
outsb
xchg
cmp
cmp
lahf
fisubrs
sub
call
gs
fisubl
adc
insb
ret
in
mov
scas
mov
ret
pop
sbb
mul
repnz
mov
ret
fists
jecxz
fwait
push
mov
sub
fs
cmpsl
lds
aad
inc
pushf
mov
mov
das
push
inc
push
test
fmull
stc
dec
mov
hlt
mov
addr16
cmp
inc
mov
xchg
in
mov
leave
call
add
sub
xchg
es
out
or
or
add
sub
pop
dec
aad
outsb
in
and
aam
mov
daa
shlb
mov
adc
inc
dec
ss
or
mov
movsb
loopne
pop
call
or
adc
and
mov
xlat
push
sub
push
sbb
stc
fildl
lock
out
loopnew
xchg
add
xor
scas
push
add
popf
cmp
cmp
iret
cmp
cmpsb
pop
ds
pop
rcrb
dec
lds
mov
xchg
filds
sub
mov
mov
stos
pop
mov
daa
scas
jae
pushf
mov
mov
out
push
jbe
pop
sbb
inc
shll
jb
dec
pop
sbbl
call
nop
daa
addl
jge
test
sub
pop
xlat
insl
sbb
xor
push
xor
gs
test
stc
inc
lret
test
stc
cmp
rcll
pop
nop
cmpsb
das
pop
push
popf
dec
jnp
ret
mov
loopne
into
sbb
out
lds
add
adc
push
xor
jae
fdivrl
sub
mov
mov
stc
adc
adc
rcl
movsl
mov
sarl
leave
loop
inc
mov
mov
stos
and
das
insl
or
adc
push
sub
adc
cmp
es
dec
add
out
int
rcr
jmp
pop
sub
adc
push
cmp
jno
scas
pusha
inc
jmp
jb
shll
jge
lods
xchg
mov
jne
push
inc
jecxz
cld
scas
adc
pop
sub
adc
leave
lea
aad
sub
sub
je
xchg
fprem
cmpsb
pop
in
movsb
adc
ljmp
jno
je
stos
in
or
dec
shr
push
mov
jecxz
push
insl
stc
push
fidivrl
push
inc
and
mov
stos
cmpsb
rclb
rorl
fldt
stos
insb
sar
mov
push
lcall
sub
push
lcall
andb
pop
xchg
int3
repnz
mov
lods
mov
in
insl
rcr
addr16
sub
test
cmpsb
fistl
fnsave
daa
scas
inc
cmp
leave
aad
aam
push
jg
test
inc
or
js
cmc
pop
loopne
push
das
insb
inc
mov
lds
scas
and
pop
stos
cmp
call
xchg
lret
push
add
out
add
pop
or
in
adc
nop
sub
push
sub
cld
leave
cmp
jge
in
push
push
push
and
pop
out
lret
mov
xchg
jb
and
mov
cmpsl
cli
negb
pop
in
cmpsb
leave
xchg
sbb
dec
stc
cwtl
mov
pop
int
rorl
xchg
cmpsb
adcb
aaa
jbe
jecxz
cmp
popf
xchg
test
mov
out
xor
mov
stos
pushl
jmp
mov
test
adc
xchg
imul
cmpsl
cmpsb
add
pushf
lds
mov
stos
cmp
cmpsb
push
fidivl
sub
mov
test
pop
ror
sahf
sub
sub
dec
push
mov
inc
cmp
imul
mov
mov
sub
mov
ret
sub
push
jnp
out
cmpsb
xor
dec
test
or
mov
jge
xchg
mov
push
sbb
mov
aaa
int
popf
in
sbb
sbb
fs
pushf
and
push
popf
mov
ja
icebp
in
pop
fcmovbe
xchg
sub
dec
adc
scas
ret
or
xchg
push
mov
push
xchg
call
mov
roll
xor
loop
sub
push
sub
or
loop
scas
jg
fmuls
cmpsb
aad
mov
adc
sarl
inc
ret
shrb
mov
or
cmp
mov
xchg
iret
inc
sub
fidivrl
mov
addr16
loopne
movsl
stos
in
mov
inc
mov
or
lea
lea
pop
dec
jge
pop
xchg
lods
cmp
test
aad
push
repz
and
fcoms
push
inc
faddl
call
les
cmp
stos
lea
leave
hlt
xchg
cmp
je
push
cmpsb
lret
loope
xchg
movsb
dec
scas
std
cli
lcall
jne
pop
dec
movq
test
mov
popa
stos
xlat
jp
imul
dec
pusha
cmp
or
mov
inc
xor
scas
popf
jmp
cmc
sbb
adcb
int3
xchg
out
call
add
aaa
mov
xchg
jne
mov
mov
sbb
mov
adc
push
inc
gs
pop
test
test
int
lcall
add
cwtl
ja
jo
in
movsb
add
popa
jg
pop
stos
mov
sub
movsb
sbb
sbb
mov
nop
push
scas
push
pusha
lcall
jp
outsl
fcmovb
xor
fsts
jmp
js
fcmovnbe
jns
sub
scas
subb
dec
xchg
enter
pop
lods
xor
sti
xor
jp
and
xor
cmp
das
in
test
ds
leave
sub
movsl
mov
andps
pushf
sub
leave
lock
call
xor
in
jp
stos
inc
in
push
scas
out
or
push
xor
xchg
mov
js
push
push
sub
mov
cltd
inc
jbe
fs
scas
std
inc
lods
dec
fadds
pop
push
or
aaa
pop
mov
sahf
in
movsb
test
adcb
mov
pop
push
jmp
dec
and
js
fiadds
sub
sub
sbb
cmp
popf
test
jg
data16
scas
jecxz
es
pop
sub
inc
pushf
dec
sbbb
imul
dec
ret
sbb
jnp
or
push
mov
push
aas
enter
popf
fucomip
sbb
and
sub
add
jo
aam
sub
fistpl
scas
scas
fists
aas
jge
pop
inc
add
sub
push
and
dec
inc
shlb
xchg
pusha
test
popa
test
into
stos
sub
adc
test
cltd
das
jle
das
sub
loop
fildl
mov
dec
repnz
mov
test
xor
push
and
ficompl
int
pop
cmpsl
imull
arpl
aad
lock
int
call
arpl
push
dec
call
popa
scas
sub
int
test
and
jmp
movsl
add
inc
in
sub
test
push
pop
sub
aad
fs
fdivrs
fmuls
ficomps
repnz
sub
jmp
sub
test
fs
fs
loopne
ljmp
and
cmpsb
outsb
loope
lea
sub
and
adc
cs
das
fwait
sub
pop
pop
mov
pop
imul
ljmp
xor
int3
sub
and
cmpsl
pop
mov
lods
out
bound
sub
addr16
jecxz
ljmp
popf
test
and
leave
sub
lcall
outsl
dec
fisttps
outsl
pop
dec
sub
mov
lods
bound
pop
loop
and
frstor
pop
and
sub
cs
bound
leave
inc
test
inc
fisubrl
pusha
gs
call
insb
imul
cs
test
lret
das
sbb
lods
outsb
xor
stc
mov
sub
movsb
les
jmp
pop
stos
push
leave
test
jmp
stos
pop
mov
lea
fsubl
adc
mov
sub
loopne
mov
bound
push
jnp
pop
ljmp
push
sbb
fcoms
and
dec
fisttps
iret
cmpsb
inc
iret
ds
sbb
pop
notb
lods
mov
ss
xorl
mov
adc
dec
lock
scas
fsub
movsb
push
loopne
aas
fadds
cmpsb
xchg
add
xchg
jno
push
movsb
sbb
sbb
add
and
js
cmpsb
xor
pusha
cmc
mov
pop
je
mov
xchg
inc
cmp
mov
ret
pop
pop
leave
dec
and
push
mov
ret
sarb
sub
movsb
loopne
and
bound
and
lcall
mov
pop
aas
and
mov
mull
hlt
mov
jl
jg
stos
and
mov
fcmove
nop
pop
cld
stos
je
mov
xchg
data16
popf
shll
mov
in
mov
repz
cmp
fdiv
sbb
je
nop
inc
jae
jl
repnz
outsl
jmp
dec
and
inc
cmpsb
pop
out
mov
out
lret
xor
test
cmp
sub
movsb
sub
adc
pop
lods
movsl
mov
call
div
enter
adc
or
push
fldt
shlb
pop
xor
leave
pushl
popf
cmpsb
pop
movsl
mov
roll
outsb
ja
loopne
mov
pop
dec
insb
or
pop
pop
adc
test
in
iret
xor
out
adc
loopne
jecxz
mov
lret
cmpsb
cmp
mov
xor
xchg
dec
aaa
add
mov
sbb
sub
mov
int
and
adc
mov
xchg
das
xchg
shl
push
data16
dec
cmpsb
sub
sub
cmp
in
mov
pop
outsl
stos
addr16
pop
xor
test
stos
cmp
pop
enter
stos
into
mov
sub
xchg
sub
shrl
into
loop
ljmp
sub
lcall
pop
cmp
sub
jo
jbe
xchg
sub
cwtl
insl
mov
stos
sub
aaa
mov
sub
fsubrs
int3
pop
sub
insb
inc
test
test
xchg
scas
fsubrs
dec
fcoms
pop
and
sub
push
mov
test
and
and
mov
pop
and
and
and
cmpsl
scas
sub
imul
shrl
jmp
sub
mov
roll
stos
jmp
ljmp
sub
jmp
sub
loope
mov
int3
das
int
int3
das
and
jmp
lods
fsubr
dec
and
scas
push
xchg
pop
in
cli
sub
test
das
repnz
mov
shrb
in
sti
fs
ret
out
popf
bound
loop
shrb
repnz
daa
int
es
stos
outsb
loopne
loopne
loop
push
stos
aam
call
sub
test
push
insb
pop
gs
fsubrs
ret
ljmp
out
imul
inc
jmp
scas
pop
sub
in
cmpsb
cmp
movsb
ljmp
das
sub
nop
arpl
mov
stc
xchg
dec
in
test
insl
sbb
mov
call
pusha
loop
out
sub
icebp
and
mov
loope
in
divb
rol
int3
sub
lea
and
ljmp
out
shll
out
push
out
out
out
and
sub
pop
jns
sbb
sub
jmp
sub
outsb
fsubrl
addr16
and
scas
repnz
jmp
stc
jmp
and
and
mov
popf
in
cltd
ljmp
jmp
ljmp
push
in
stc
frstor
pop
fs
push
push
and
sub
mov
mov
jp
in
add
dec
inc
ret
cmpsb
jns
popf
pop
xorb
lods
jg
lds
xor
cmp
data16
jle
cmp
je
scas
testl
cmp
in
ds
pop
jb
dec
loop
push
cmp
stc
shl
test
cmpsl
cmp
clc
push
xchg
in
inc
mov
pop
mov
push
sub
or
mov
loopne
mov
xor
and
push
or
mov
jae
xlat
push
xchg
dec
mov
mov
mov
in
dec
arpl
je
enter
loop
cmpsl
data16
adc
xor
mov
scas
xor
dec
fisubs
cmp
std
into
add
push
lds
xchg
and
or
xlat
xor
aam
xchg
daa
add
push
fcomi
mov
aad
aas
loope
xor
jmp
stos
std
xchg
add
push
mov
dec
dec
sarl
push
loop
xor
jb
clc
stos
cmp
aaa
stos
cmpsb
xor
inc
int
sub
push
cwtl
mov
fwait
imul
push
sub
or
mov
xchg
or
cmp
clc
movsl
add
bound
or
sbb
mov
pop
inc
sub
ficompl
xchg
sub
mov
data16
out
sub
je
aas
add
push
pop
push
push
cmp
and
in
sbbb
mov
imul
mov
mov
ret
mov
inc
loopne
ds
cmpsl
stc
or
pop
mov
cwtl
push
adc
jno
or
pop
push
mov
cli
push
aas
pop
push
popf
or
lods
add
push
add
decb
xor
je
les
cmp
or
test
test
xchg
inc
and
xchg
outsl
outsl
xchg
mov
push
xchg
enter
cmp
loopne
jb
lock
dec
sbb
mov
mov
filds
shll
push
mov
negl
xor
mov
cmpsb
mov
in
xor
push
adcb
enter
mov
imul
xchg
xchg
test
popf
imul
stos
cwtl
out
push
dec
int3
xor
inc
pop
add
insb
xchg
xchg
in
loopne
test
pop
lds
jp
repz
daa
jb
adc
das
mov
enter
aam
dec
cmp
adc
inc
sub
outsl
test
popa
mov
push
push
sub
xor
cltd
inc
mov
aam
cwtl
mov
je
inc
leave
ljmp
pop
pop
adc
mov
add
sub
push
xchg
mov
add
push
or
imul
dec
fisttps
jge
testl
imul
push
push
movsl
xor
lcall
loopne
mov
cmp
das
push
mov
addr16
das
cmpsb
and
jmp
inc
xorl
andb
pop
jg
fnstenv
push
arpl
xchg
add
into
leave
mov
adc
add
js
pop
xchg
sbb
inc
adc
mov
mov
mov
push
mov
pop
sarb
fcmovnbe
ja
and
pop
push
cmpsl
pop
hlt
jo
mov
mov
sub
repz
sub
adc
jo
push
lock
sbb
repnz
das
pop
sub
leave
mov
and
sub
in
adc
mov
jl
gs
scas
shl
xlat
sbb
fists
lods
push
pop
arpl
lahf
loopne
pop
xor
inc
dec
nop
inc
repz
scas
filds
lock
int
xor
loop
sbb
or
test
inc
adc
adc
mov
dec
push
push
jg
inc
push
and
adc
outsb
dec
nop
push
adc
test
lret
xchg
inc
pop
pushf
stc
and
bound
mov
jmp
cli
idivl
addl
pop
ljmp
xchg
repz
cltd
cltd
adc
leave
lods
iret
mov
pop
push
call
sub
cld
mov
vprotb
fs
int3
add
sub
sbb
push
adc
scas
sahf
std
aas
mov
and
movsb
jmp
xor
repz
fstpt
stos
cmc
out
lret
push
cmp
xlat
std
or
jmp
test
dec
inc
push
subl
je
mov
fisttpl
leave
or
addl
sbb
std
xor
or
cmp
jns
xor
lret
jmp
jnp
and
ljmp
rcll
out
test
lods
jno
mov
test
mov
mov
jp
in
adc
jmp
dec
mov
pushf
test
int
jo,pn
push
test
sbb
in
push
fidivl
mov
mov
aad
xchg
sub
loopne
add
adc
repz
xchg
iret
mov
cwtl
stos
jp
sub
fidivrl
or
mov
mov
mov
cmp
mov
out
nop
sbb
add
or
dec
call
jl
rcrl
xchg
jns
sbb
fstpl
in
sub
push
add
hlt
shl
dec
dec
fisttpl
pusha
js
dec
mov
sbb
jl
das
das
cmpsb
int
mov
sub
lods
adc
popa
and
lds
add
and
xchg
jno
and
xchg
stc
xchg
push
in
rcrl
cmpsb
sbb
std
out
popa
lret
test
mov
push
xor
in
mov
pop
mov
ret
jg
jmp
pop
ss
inc
aad
rcll
mov
pop
add
xchg
mov
sbb
jmp
leave
imul
ds
shlb
test
xchg
les
ffreep
mov
and
enter
adc
data16
push
pop
loop
scas
ret
imul
sarb
sbb
or
jl
test
lods
cmpsl
dec
and
push
jmp
push
lock
push
ret
je
js
push
das
sub
out
or
shr
pop
pop
xchg
cmpsb
pop
push
mov
ja
aad
sbb
lods
mov
sbb
fnstenv
out
jmp
add
aam
andb
clc
rolb
or
es
pop
mov
mov
sub
and
lds
mov
rcll
incl
dec
jle
shrl
das
cmpsb
loope
mov
dec
hlt
dec
sub
fstl
xor
adcb
es
xchg
xchg
aaa
cmp
push
xchg
test
add
lret
mov
enter
stc
push
cmpsl
push
lret
jb
in
push
in
mov
dec
lods
mov
lods
pop
adc
lahf
nop
cmpsb
dec
sub
mov
test
and
shrl
jbe
out
mov
clc
mov
ja
xchg
lods
or
sahf
jne
mov
jp
xchg
jae
shrl
cmpsb
hlt
sahf
test
xor
call
jmp
cli
mov
sahf
lea
pop
add
out
lgdtl
data16
inc
sbb
stc
mov
cmc
xchg
cmpsb
jecxz
push
outsl
mov
repnz
mov
xchg
jle
lret
mov
mov
sbb
cmpsb
setb
rolb
or
xor
popf
mul
jg
adc
test
xchg
jmp
add
pop
add
ljmp
inc
shl
push
out
add
jle
insl
push
add
add
fs
xor
sub
aam
mov
sub
xor
scas
push
jne
mov
mov
jb
out
aad
loopne
cmpsb
push
mulb
mov
add
test
push
xlat
dec
xor
mov
jmp
arpl
scas
movsl
dec
mov
sub
sti
negl
popf
sti
lods
stos
out
loopne
and
scas
les
and
jp
ljmp
fdivs
xor
lods
in
and
inc
lods
sahf
mov
sbb
fadds
mov
lods
mov
inc
cmp
inc
mov
mov
inc
out
mov
push
jbe
jb
es
pop
das
pop
shlb
xor
pop
mov
mov
cmp
cmp
das
shrb
pop
cli
cld
or
push
xchg
lahf
paddq
sbb
les
xchg
jle
daa
mov
loop
cmpsb
leave
popa
les
aad
push
lods
loopne
mov
lock
scas
fsubrs
dec
mov
sbb
js
scas
jb
add
or
sub
inc
mov
lretw
push
and
push
daa
scas
push
inc
sbb
pop
test
mov
jmp
mov
mov
sbb
pop
ss
jmp
sar
scas
stos
xor
lock
insl
dec
repz
popf
shll
std
in
popa
scas
ja
inc
pop
adc
mov
fwait
mov
aam
dec
sbb
mov
popa
push
les
addr16
inc
cmpsl
xchg
es
mov
dec
mov
dec
jb
mov
scas
fdivrp
pushf
xacquire
mov
sub
imul
insb
adc
xchg
push
push
xor
mov
cmpsl
jmp
cwtl
and
and
call
mov
dec
in
push
stos
stc
inc
fisubrl
js
stc
ds
or
and
mov
dec
jmp
fisubrs
or
not
jl
lret
repnz
push
pop
in
inc
enter
nop
lods
jmp
call
and
pop
ljmp
mov
jle
xor
insl
lock
xchg
push
dec
or
cmpsb
pop
imul
cmp
pop
mov
cmp
push
sub
adc
nop
ficoms
test
sahf
sti
pop
sub
pop
dec
xchg
lock
mov
arpl
xor
aad
cmp
sbb
sarb
hlt
push
mov
dec
pushf
in
aad
lea
sbb
sub
cmp
enter
cmp
or
xchg
stos
aam
jmp
pop
fstpl
mov
stc
jge
inc
test
or
cltd
push
ss
ret
or
cmp
and
sub
pop
jge
aam
lcall
sub
add
pop
xchg
xchg
cmpsb
adc
adc
xor
cwtl
push
mov
in
aaa
addr16
xor
pop
jno
mov
cltd
push
shlb
lcall
jl
mov
ljmp
dec
stos
jl
popf
imul
shl
lea
jb
pop
mov
jl
fcom
test
aaa
and
mov
xchg
in
aad
jp
repz
popa
mov
adc
xor
stos
call
lcall
xchg
dec
sbb
fcmovnu
pop
lret
xchg
add
popa
pop
in
jl
mov
cwtl
cmpsb
mov
sub
push
xchg
popa
xchg
ret
mov
sub
mov
push
mov
xor
addb
mov
cld
cmp
xchg
shrb
pusha
jo
sub
leave
cmpsb
aad
in
or
push
and
pop
mov
icebp
js
lock
int
cltd
js
outsb
sub
test
xor
sbb
enter
aad
stos
in
das
push
shl
push
aad
mov
cmp
lds
out
jmp
and
and
adc
mov
or
inc
sub
bound
js
movsl
xchg
call
lcall
test
xor
rcrb
push
insl
xchg
dec
mov
pop
lock
dec
push
jp
push
dec
mov
stos
cmpsb
fsubrp
pop
xchg
loop
outsl
cmc
or
repnz
push
and
pop
sbb
popa
xchg
out
adc
fsubl
insb
pop
bound
xchg
jo
or
mov
sub
pop
pop
jnp
std
call
or
push
mov
push
cmc
outsb
mov
cmpsb
andl
dec
scas
or
mov
sbb
or
fwait
adc
sub
dec
mov
out
sbb
insl
pop
pop
lock
adc
fildl
nop
int
js
push
call
ljmp
cmp
mov
call
add
popa
jnp
test
mov
adc
adc
dec
add
xchg
pop
xor
sbb
sub
jnp
jp
dec
sub
inc
lods
fs
push
leave
test
adc
push
pop
pop
je
sqrtps
fadds
push
adcl
bound
push
adc
jae
data16
xchg
insb
gs
sbb
and
xchg
jmp
lret
inc
dec
in
in
push
pop
lods
dec
fs
xchg
or
out
sbb
add
mov
repnz
andb
fsts
lcall
int
push
fs
mov
outsl
mov
je
insb
lods
rclb
popf
rcll
aad
ret
mov
push
xor
shrb
and
sub
fcomps
bound
pushf
mov
sti
dec
sub
sbb
push
sbb
daa
stos
adc
cmpsl
push
dec
enter
mov
or
mov
jo
xorb
sub
fwait
mov
inc
out
into
faddl
mov
lods
mov
cmp
push
lods
ljmp
xchg
adc
or
xor
pop
ljmp
in
mov
xlat
sbb
popa
dec
lret
xor
inc
out
dec
fdivrs
ds
cmp
sub
pop
cmpsb
sbb
sbb
fsubl
js
iret
data16
out
fcmovbe
pop
push
in
add
mov
dec
mov
jbe
mov
mov
loop
fidivs
mov
cmp
loope
push
subb
xchg
jnp
jo
cmp
cmpsb
and
push
push
sbb
or
mov
push
fs
xchg
or
mov
sub
push
fsubrp
scas
ret
adcl
insb
repz
adc
in
add
jg
mov
mov
fistl
loopne
movsb
sub
das
or
cld
in
mov
pushf
jno
push
mov
fsubrs
into
pop
pop
sbb
arpl
shrb
popa
fisttpll
jmp
in
add
cmp
jnp
mov
adc
jecxz
mov
fcomps
or
jmp
int
hlt
jne
je
aam
pop
andb
mov
mov
ja
pop
xlat
out
outsl
push
lods
add
out
xor
cwtl
jge
repnz
sub
jae
loope
pop
mov
cli
aam
lcall
pop
mov
fsubs
add
sti
jge
mov
icebp
call
sbb
and
jns
pop
pop
test
xchg
add
push
mov
push
mov
dec
dec
pop
fistl
jnp
jo
imul
or
mov
movl
or
push
and
ja
notl
addr16
call
push
into
lea
mov
adc
outsl
and
popa
popa
sub
adc
dec
mov
jmp
add
loopne
fs
pop
test
pop
test
sbb
cmpsb
push
les
ficoms
iret
cmpsl
or
shl
lods
mov
mov
xor
pusha
inc
negl
jg
jo
jne
mov
fs
sub
lcall
xor
iret
adc
scas
xchg
out
xchg
and
mov
stos
jo
hlt
push
aad
scas
xor
scas
sub
push
insb
out
incb
fistl
xor
add
test
push
iret
lds
call
loop
mov
loope
je
push
mov
faddl
mov
lret
dec
cmpsb
pop
loopne
shrb
inc
xchg
aas
xchg
mov
orb
sub
ret
dec
pop
and
xchg
dec
sub
cmp
vpmacsdqh
ss
pop
jns
repnz
in
ljmp
das
lcall
test
xchg
stos
jmp
andb
add
movb
pop
xlat
addr16
out
inc
movsl
push
xchg
cwtl
fildll
insb
fnstenv
repz
sbb
jl
mov
mov
and
insb
cmp
or
mov
xchg
sub
mov
fbld
xchg
into
jg
movsl
popf
cld
adc
add
jbe
movsl
lcall
sub
lock
dec
test
lea
mov
mov
stos
pop
and
xchg
sahf
out
mov
in
mov
sbb
lret
movsb
adcb
and
and
inc
bound
xor
pop
aad
sub
push
jb
mov
adc
jmp
test
jecxz
push
in
xchg
sub
bound
cmc
mov
test
addr16
popa
cmp
cmpsl
lahf
mov
mov
aas
cmpsl
fsubrs
mov
jge
popa
shrb
daa
loopne
lea
adc
and
leave
push
cmp
or
and
stos
enter
pop
aam
ret
pop
xor
xchg
or
push
lock
adcb
inc
pop
cwtl
sarb
lret
mov
inc
mov
and
mov
inc
popa
iret
pop
call
push
stos
push
mov
pop
imul
in
arpl
sub
ds
fisubl
scas
lret
jbe
cmp
push
fistl
xchg
mov
outsb
loopne
insb
loop
lcall
ljmp
ret
and
rolb
push
repz
cwtl
outsl
xchg
iret
xor
mov
xchg
aam
sub
scas
test
in
jmp
or
jne
shr
cmp
sbb
pushf
add
dec
mov
jmp
cmpsb
sbb
inc
outsl
test
in
les
out
sbb
pop
sbb
in
adc
es
loop
xchg
enter
adc
xchg
outsb
test
xchg
jle
mov
and
sub
add
popf
and
mov
mov
je
shll
cmpsl
in
mov
ret
mov
or
push
jne
stc
and
mov
or
hlt
insb
xchg
sub
mov
mov
pop
fldcw
stos
jge
sub
push
adc
out
stc
fcoml
xlat
push
jb
pop
pop
inc
push
fadds
mov
sub
cmp
dec
mov
hlt
adc
and
int3
sub
scas
xchg
cmp
inc
jl
push
int
xchg
pop
jbe
pop
push
andb
lahf
xor
dec
loopne
out
push
and
xlat
imulb
adc
hlt
es
xor
mov
pop
jnp
shl
mov
mov
push
js
aam
pop
dec
out
pop
adc
rcll
into
push
pop
and
hlt
push
mov
popa
das
xchg
or
and
sbb
add
pop
popf
and
mov
cltd
sbb
out
popa
adc
bound
shll
push
loopne
adc
call
push
aam
js
and
adc
fs
ja
add
push
mov
mov
lret
rclb
jae
add
scas
jge
push
dec
mov
adc
loop
repnz
xchg
sbb
jg
cmp
xchg
ds
shll
mov
lret
mov
sbb
xchg
ss
dec
arpl
adc
shrb
scas
into
insb
sub
test
leave
cmp
xor
or
jle
cmpsw
rcl
mov
lods
lcall
imul
mov
dec
test
cmp
loop
adc
lret
jge
ret
jmp
clc
pop
sub
insl
push
fwait
and
pop
adc
stc
cmpsb
mov
pusha
popf
cmp
mov
pop
cmp
lds
fcoms
jmp
jbe
test
cmpsb
xor
push
inc
in
pushf
lds
rolb
push
cmp
mov
mov
pushf
lret
enter
mov
fisttpll
aad
add
std
push
pop
scas
mov
cmp
push
into
add
jo
add
sub
cwtl
xchg
scas
nop
clc
out
push
push
pop
mov
mov
dec
sub
sub
mov
lods
shll
loopne
sahf
mov
arpl
push
or
jnp
push
push
stos
lds
mov
mov
sub
add
fistpl
insb
nop
cwtl
inc
and
cmpsb
in
xchg
mov
mov
repnz
arpl
in
out
cmpsb
lret
push
xorb
in
es
arpl
scas
rcrl
push
mov
mov
cmp
aad
xor
out
inc
xchg
pushf
pop
add
pushf
test
cmpsb
roll
xor
cmp
push
push
out
aas
xchg
es
fcmovnbe
push
cmc
mov
xchg
push
fdivl
lods
xchg
daa
das
loope
cmp
ltr
push
mov
in
cmp
sub
mov
cltd
inc
xchg
mov
add
fscale
ret
mov
jo
sti
and
loope
pop
scas
and
sbb
cwtl
xchg
push
sub
aaa
mov
lea
cwtl
test
out
xchg
dec
mov
arpl
roll
cltd
push
neg
xor
sbb
int3
push
push
andl
mov
mov
or
sub
sbb
sub
dec
enter
je
and
cmpsb
jmp
in
cmpb
adc
loopne
jmp
mov
leave
pop
inc
pushf
test
ljmp
sarb
in
push
int
test
jge
movsb
ja
cmpsb
push
cmp
ret
sti
enter
aam
stc
scas
in
pop
pop
ljmp
push
adc
pop
int3
xchg
test
add
mov
xchg
jl
stos
add
inc
xor
inc
cmpsb
adc
jmp
lahf
inc
shlb
xchg
mov
scas
les
call
pop
dec
pop
pop
out
cld
dec
add
dec
dec
jmp
js
adc
xchg
pop
pop
ss
add
pop
ss
loop
sbb
test
fidivrl
arpl
add
test
xchg
gs
mov
cs
rcrb
pop
scas
pusha
cmp
adc
icebp
vpcomb
cmp
aam
pop
loope
addr16
js
xchg
loopne
leave
aam
arpl
cmp
push
aam
inc
sub
push
push
lock
jge
sub
cmpsb
fistpll
test
enter
sub
cmc
pop
in
xchg
fcoml
ja
stos
sub
movsl
cmp
stc
dec
jmp
je
dec
xlat
sub
or
sarb
dec
cs
int
jbe
xchg
mov
dec
ljmp
in
pop
xchg
xor
pop
lret
or
int3
push
xchg
push
mov
mov
test
stc
int
leave
rclb
shl
lds
data16
jb
das
jge
mov
das
adc
out
in
cmpsb
inc
jle
xor
add
popa
loopne
jbe
push
pop
lahf
das
jge
inc
sbb
xor
dec
and
xchg
mov
scas
add
fsubrs
aad
lret
pop
cmp
dec
add
sbb
dec
cmc
cmpsl
and
hlt
xchg
dec
shll
mov
adc
and
xor
fstp
pop
cmpsb
rclb
fistps
jae
mov
ja
imul
push
scas
pop
xchg
aad
jns
push
xchg
pop
cs
stos
mov
lret
enter
push
shrl
adc
and
add
ds
pop
stos
test
xchg
xchg
lret
jne
pop
in
test
jecxz
call
jb
cmpsl
test
test
xchg
xchg
and
aam
cltd
and
xor
in
cwtl
lahf
mov
ret
cmp
xchg
divb
cmpsl
shlb
and
leave
cwtl
aaa
cld
loop
lds
ja
push
cmc
inc
jp
or
mov
push
nop
jne
push
lock
mov
sub
push
out
lds
pop
call
pusha
sub
pop
in
lahf
pop
pusha
push
sbb
mov
or
test
addr16
jmp
pop
jo
sbb
xorl
aaa
out
mov
stc
cltd
push
cwtl
cmc
xchg
ljmp
jns
cmpsb
mov
sbb
fcompl
mov
sahf
test
aad
movsb
sub
jge
ffree
in
jmp
sub
or
int
cmp
stc
scas
adc
adc
jg
sbb
les
outsl
jecxz
jne
enter
insb
mov
jl
pusha
xchg
xchg
xchg
outsb
xor
push
sub
mov
add
sub
ret
dec
arpl
pushw
xchg
and
mov
pop
sbb
imul
pop
add
nop
jecxz
cmpsb
sbb
and
rcl
xchg
or
or
enter
inc
adc
push
fcomps
dec
jl
fwait
and
inc
lret
dec
or
popa
mov
dec
mov
and
lcall
fldl
scas
ficomps
or
or
or
pop
in
call
ret
xor
out
andb
and
add
lds
xchg
sub
aaa
bound
cmpl
lods
sbb
scas
inc
mov
cmp
movsb
jmp
adc
cmpsb
into
xchg
adc
loop
iret
jl
adc
or
push
add
xchg
out
push
loope
mov
stos
popf
dec
inc
cmp
es
sub
and
lcall
call
cmpsb
sbb
lods
into
xor
movsb
cmpsb
out
cli
pop
or
inc
cli
fwait
add
xor
mov
fnsave
or
enter
fimull
cmp
dec
nop
repnz
sub
idiv
or
xchg
stos
xchg
or
and
dec
inc
cs
add
stos
pcmpeqd
mov
loopne
outsb
xor
jb
mov
sbb
sahf
or
cmpsb
mov
int
leave
fsubs
popf
scas
pop
inc
imul
test
lea
pop
movsl
or
jbe
int3
dec
xchg
sti
jb
notb
aas
or
mov
xlat
jbe
mov
inc
sub
jb
scas
jl
sbb
call
pusha
mov
add
mov
lods
sub
xchg
ficoms
int
lea
int
and
sbb
dec
jnp
loopne
pop
and
mov
pop
js
xlat
std
pop
mov
fcoms
orl
xor
popa
xchg
push
jge
cmp
xor
push
fildll
into
loopne
push
sti
xchg
lods
mov
les
stos
add
hlt
sub
lods
jns
inc
adc
xor
adc
push
and
lahf
pop
rorl
pushf
mov
mov
shlb
push
fsubs
pop
ffree
int3
dec
sub
fisubrl
das
ja
loopne
mov
cmpsb
jo
outsb
scas
or
cmp
dec
das
xchg
enter
test
ss
cmp
cmc
xchg
dec
in
in
loopne
push
xchg
call
jmp
ss
push
mov
xchg
sub
sub
loopne
outsl
repnz
mov
hlt
call
jnp
inc
xor
mov
xchg
dec
popf
imull
mov
and
add
shr
imul
pop
xchg
out
and
divb
ret
or
stos
lea
mov
push
mov
mov
jecxz
sbb
inc
push
mov
or
mov
in
int
rcrl
insl
fsubrl
jmp
popf
sub
int
jmp
fildl
xchg
sbb
xchg
cmp
shll
fdivrs
fdivl
loop
sar
push
sbb
cmc
add
jne
cmp
and
es
cwtl
or
fsubrl
sbb
ljmp
cmpsl
push
or
or
mov
in
push
cmpsb
dec
xor
pop
cwtl
mov
adc
fcmovne
sbb
dec
aaa
mov
cmp
xchg
fistpl
cmc
fidivrl
mov
fistpl
push
test
mov
orl
lret
fsubrs
add
xchg
mov
cmpsb
and
call
test
pop
fisubrl
jg
leave
filds
xchg
repz
and
adc
popa
fisubrl
fwait
cwtl
add
cmp
sbb
out
call
xor
sub
das
push
shrl
or
dec
inc
push
cli
inc
addb
jecxz
cmp
insb
mov
int
xchg
add
mov
idivb
stc
cmp
movsb
arpl
cmpsb
push
shlb
adc
jb
and
ljmp
pop
mov
push
jmp
inc
cmp
test
cmc
and
jae
mov
dec
int
fimuls
stos
cmpsb
stc
fwait
aad
imul
imul
popf
push
push
jmp
ja
test
mulb
sub
das
push
imul
xchg
in
dec
icebp
dec
xchg
push
pop
cmpsb
cld
dec
jo
out
je
ss
test
dec
test
pop
out
out
daa
cmp
sbb
dec
mov
inc
adc
loope
adc
jle
push
cmp
scas
jb
lds
xor
lods
inc
jbe
ret
sub
insb
sub
jmp
in
loopne
pop
enter
int3
jg
push
or
mov
and
inc
fstl
loopne
add
inc
cmpsl
sub
cwtl
stos
inc
jb
movsb
ds
in
cmpsb
jecxz
repz
outsb
in
pop
shlb
xor
or
jo
cs
dec
arpl
and
lcall
fldt
fcmovnu
xchg
pushf
shlb
pop
out
sub
mov
pop
xlat
mov
bound
mov
in
call
insb
mov
fldcw
icebp
or
divb
dec
push
test
xchg
das
dec
jns
fnclex
push
mov
fcoms
lods
test
dec
mov
stos
loopne
sub
add
sub
fwait
jmp
and
sub
ror
inc
repnz
test
loopne
das
imul
test
mov
sub
mov
jle
test
test
lds
push
push
int
outsb
sub
jmp
movsb
in
sub
ljmp
dec
imul
mov
scas
xlat
bound
das
out
outsl
out
sub
dec
jecxz
ljmp
mov
sbb
test
mov
sub
and
ljmp
test
loope
mov
outsl
in
mov
lods
in
test
mov
mov
in
flds
loopne
mov
test
les
sub
imul
loopne
ret
lods
inc
ljmp
int3
lcall
mov
sub
and
sub
in
imul
pop
push
scas
loope
shrl
imul
lcall
mov
cltd
jno
jb
frstor
pop
out
test
loope
add
jmp
popa
in
loop
aad
in
leave
stos
mov
scas
loopne
xchg
and
mov
imul
gs
in
fucom
pop
loop
ljmp
imul
dec
cs
adc
mov
scas
and
or
dec
repz
arpl
jecxz
add
mov
sub
fwait
sub
pop
sub
pop
loopne
insb
fiadds
xchg
fnstenv
xchg
sub
out
push
mov
mov
and
mov
push
lcall
push
faddl
push
mov
out
enter
cmp
jmp
and
andb
jns
push
sbb
stos
push
out
or
jp
shlb
or
and
inc
lret
mov
stc
sub
cltd
push
mov
push
xchg
push
cmpsl
cwtl
xchg
cmp
or
pop
or
imul
stos
cmp
inc
xchg
add
nop
test
push
mov
xlat
icebp
cwtl
sub
fs
jns
movsb
sbb
inc
and
jns
test
xchg
pop
xchg
cld
jge
cmp
adc
shrb
push
push
sbb
or
push
ds
push
sub
adc
adc
add
mov
adc
stos
adc
bound
lods
sarb
or
push
cmpsl
pop
or
int
fcmovnu
cmp
or
inc
push
ficomps
in
sub
inc
stc
cmpsb
mov
sbb
movsl
imul
mov
mov
mov
and
daa
xchg
mov
neg
cmpsb
ficoml
nop
pop
cmpsb
mov
push
mov
push
jbe
mov
enter
push
mov
or
cmpsb
sub
cmp
adc
dec
lock
sbb
nop
fsubrl
push
fmuls
cmpsb
fldt
dec
gs
shrb
aas
dec
push
js
mov
jl
cltd
call
lahf
xor
pop
mov
imul
mov
cmpl
push
pushf
cmp
mov
stc
sub
rcpps
adc
fdivrp
ds
pop
xchg
lock
adc
adc
push
jle
inc
popf
scas
xor
cmp
sbb
outsb
das
scas
loopne
inc
xchg
inc
popa
sti
ss
pop
jbe
pop
mov
in
sbb
inc
push
popf
fildl
jmp
xchg
mov
mov
aam
mov
loopne
test
fs
xor
cmpsb
test
in
sbb
gs
dec
out
loope
cmp
out
out
mov
out
sbb
je
insl
imul
scas
sbb
loope
mov
mov
shrb
pop
push
mov
dec
sbb
dec
sahf
sub
outsb
push
jae
in
cmpsb
sahf
jp
push
push
ds
xlat
sub
inc
fcoml
adc
jnp
xchg
shl
mov
xor
ja
repnz
call
bound
loop
adc
lds
dec
mov
cmp
loopne
mov
pop
mov
sbb
sub
sbb
js
jmp
popa
std
fsubrs
pop
add
push
lret
or
daa
scas
xor
xchg
aam
sub
sub
mov
lcall
or
cli
jg
push
loop
sub
jmp
cmpsb
add
sub
jge
cmpsl
test
in
and
iret
or
adc
fcmovu
sbb
or
clc
into
mov
cmpsb
sbb
mov
nop
pop
sub
jmp
add
loop
push
xchg
sbb
xor
sbb
sbb
imul
scas
stos
in
or
aad
stc
mov
mov
and
xor
lcall
outsl
call
int3
ja
ret
aam
jns
cmp
jge
mov
loopne
stc
mov
stc
or
cmc
aad
cli
and
sbb
pusha
arpl
push
or
xchg
push
mov
or
das
insb
lret
bswap
ljmp
push
and
add
insb
enter
pop
mov
mov
arpl
inc
sahf
bound
lret
mov
test
enter
cmp
movsl
pop
scas
lds
std
inc
add
ret
popa
mov
insl
jo
jno
leave
call
mov
push
aam
cmpsb
repnz
push
jge
jae
xchg
and
lcall
aad
xor
rcr
lret
fwait
loop
das
addr16
xchg
je
mov
mov
fstpl
data16
jl
add
lret
xchg
daa
repnz
xlat
mov
filds
push
adc
fst
imul
inc
jno
test
xchg
fsubrs
dec
mov
popf
cmpsb
out
fadd
pop
daa
lods
incb
and
stc
call
js
popa
push
or
pop
into
sbb
lds
inc
inc
push
pop
xchg
fstl
rolb
pusha
mov
pop
test
imul
pop
test
fstl
inc
lds
inc
jmp
cmpsl
push
in
rolb
xchg
push
xchg
daa
xor
cwtl
xchg
xchg
in
push
jmp
insb
and
push
dec
dec
pop
mov
mov
mov
sub
iret
popa
test
scas
dec
stc
stos
push
mov
or
sub
mov
lcall
or
mov
mov
test
icebp
ljmp
ret
sub
add
sub
sub
xchg
dec
cmp
xor
sub
mov
es
dec
xchg
adc
andl
insl
sub
repnz
cmp
repz
out
push
dec
mov
jl
repnz
rolb
push
push
or
jmp
push
lahf
outsb
in
stos
xchg
bnd
inc
pop
fmuls
cmp
or
pop
push
and
aas
cmpsb
jl
cmpsb
mov
cmp
push
imul
lds
scas
push
push
les
cmpsl
int3
pusha
in
push
push
faddl
addr16
xchg
test
cmc
sub
into
dec
shrl
pop
cmpsb
dec
out
shrb
push
out
pop
inc
jl
jmp
mov
cmpsb
push
xchg
xchg
incl
rcrl
lock
cmp
popf
lods
nop
xchg
jp
sbb
loopne
mov
ret
out
cmp
adc
push
pop
push
lods
mov
and
test
nop
fcoml
fimuls
add
add
out
test
inc
sbb
fistl
pop
mov
in
sub
xor
insb
jp
push
jae
mov
lods
jo
sti
sbb
ss
sub
repz
lods
xchg
cwtl
scas
jne
inc
or
cli
fwait
nop
les
xchg
and
loop
clc
mov
cmpsb
jne
daa
dec
cmp
sub
xor
mov
aas
lods
outsb
imull
das
push
lahf
sbb
scas
cwtl
lock
cmp
adc
cmp
inc
dec
cmpsl
enter
sub
sbb
les
int3
aam
out
jae
jnp
test
sub
andb
pop
aas
daa
call
jo
xor
mov
pop
mov
xchg
and
pusha
cs
push
adc
and
xor
scas
add
clc
or
and
movsl
cmc
test
inc
mov
push
mov
into
idiv
outsl
pop
mov
xchg
dec
pop
imul
pop
and
shlb
fidivrs
fmull
sub
or
pop
call
mov
cwtl
push
mov
xlat
testb
fldl
mov
sbb
jl
cmp
push
mov
aad
adc
adc
mov
call
aam
enter
xchg
add
jmp
lret
je
xchg
sub
movl
pop
mov
mov
lock
jg
mov
ret
test
ds
jo
sub
jae
scas
insl
cmp
icebp
mov
daa
aam
mov
inc
sub
xchg
es
das
mov
adc
test
sbb
pop
insb
or
xlat
xchg
imul
or
idivb
loope
xchg
lods
int
in
sbb
adcl
cmp
fisubl
jo
fisubrl
mov
sbb
jmp
mov
pushf
mov
imulb
inc
dec
sub
push
lcall
stos
xchg
or
in
rclb
or
xor
movsb
aas
aam
adc
mov
popa
add
and
cmp
popf
test
dec
pop
ljmp
cmpsl
cmp
test
stc
fidivl
ds
sbb
fcomps
sub
mov
xchg
lea
mov
in
jp
jge
sub
adc
cmc
int
xchg
mov
repz
nop
jl
xor
repnz
jmp
jo
and
mov
and
mov
cltd
mov
sbb
in
sbb
push
iret
mov
pop
cmp
stc
add
sbb
mov
das
jecxz
cmp
inc
movsb
pop
add
sahf
dec
xchg
ficomps
sub
and
leave
pushf
in
and
js
and
nop
push
scas
add
push
cmpsb
insb
pop
cmp
push
out
sub
xchg
imul
mov
mov
dec
pop
sub
jne
inc
ret
push
cmp
xchg
je
jae
fidivrs
sbb
sbb
xor
scas
imul
sarb
push
movsl
arpl
dec
sahf
or
jmp
incb
rclb
jne
mov
fisttpll
into
push
ja
inc
jne
and
ja
mov
scas
js
aas
mov
mov
and
mov
jae
repz
pop
cli
push
cmp
jl
jmp
insb
jge
pop
inc
lods
adc
dec
cmp
inc
inc
out
push
push
xchg
cltd
or
push
or
push
mov
inc
mov
repz
insl
add
arpl
loop
sub
mov
ret
jo
lock
xchg
xchg
adc
sub
adc
pop
pop
inc
rcrb
pop
jno
pusha
out
push
cmp
rcrl
popa
repz
or
cs
push
fisubrl
das
jge
mov
js
test
out
test
push
pop
mov
outsb
clc
scas
scas
out
fwait
popa
cltd
fsubrl
fstpl
dec
pop
fwait
dec
data16
addr16
fsubs
aad
repz
js
lahf
lret
arpl
test
jg
iret
or
aam
imul
aam
or
scas
into
loopne
cwtl
leave
ljmp
shrb
xchg
xor
cs
scas
jp,pt
lret
cmp
leave
sti
push
mov
push
xor
push
xchg
jno
pop
adc
sti
or
aaa
int3
cmpsb
mov
mov
pop
stos
mov
mov
xchg
cmp
adc
jle
adc
dec
dec
mov
inc
fsubrs
sub
push
push
rcr
ss
imul
mov
and
inc
dec
or
iret
xlat
mov
test
lock
aad
xchg
mov
add
sub
insb
testl
cmpsb
or
ss
loop
sub
shrb
inc
inc
sbb
sub
mov
mov
mov
mov
push
jmp
jbe
jge
pop
cmp
push
pop
mov
push
sub
inc
rcll
xor
sahf
pushf
shlb
mov
adc
mov
cwtl
mov
das
mov
cmp
cmp
cmpsb
cmp
fstps
sub
mov
cmpsb
push
mov
je
inc
sub
lea
lcall
inc
pop
lock
jb
int3
jae
mov
or
ret
push
mov
sub
xchg
hlt
fwait
sub
je
mov
and
aas
push
int3
jl
sub
jmp
dec
and
insl
sbb
gs
xor
fwait
dec
or
or
movsb
push
lahf
sub
in
enter
push
jmp
lods
gs
mov
aam
xchg
push
mov
ds
sub
xlat
or
cmpsl
popf
paddw
mov
xchg
aas
lret
cmp
push
leave
mov
fucomi
xchg
mov
mov
out
out
jl
dec
repnz
loop
dec
cmp
in
cmp
out
xor
adc
mov
pop
js
movsl
xchg
cmpsl
scas
lret
pop
jns
jg
push
xchg
pop
sub
cmpsb
test
and
inc
inc
cmpsl
arpl
cmp
mov
sub
std
insb
lret
lret
or
sbb
xorl
dec
imul
adc
push
xlat
sub
int
in
mov
sub
subl
popl
sbb
push
test
iret
push
inc
jo
push
mov
xor
data16
jne
loopne
fdiv
push
dec
aam
mov
sub
shr
dec
es
cltd
ss
add
or
rcl
inc
pop
xchg
out
test
cmpsb
js
loopne
push
mov
add
and
push
arpl
xchg
adc
fs
xchg
or
out
push
test
mov
xor
ret
mov
cmp
pop
pushf
leave
icebp
das
arpl
ljmp
xchg
fisubrl
sbb
push
insl
mov
jmp
inc
xchg
jae
bound
xlat
je
sbb
es
int
inc
mov
into
out
call
mov
xor
dec
into
xchg
pmaxub
daa
mov
lahf
jo
and
push
cmpsl
rolb
test
out
dec
mov
push
shll
mov
aas
push
inc
js
sub
or
or
test
sub
ljmp
adc
daa
fistpl
or
and
sbb
test
fmuls
stc
ficoml
popf
insl
mov
and
cs
hlt
in
cmpsb
push
inc
mov
lcall
out
and
rol
pop
adc
xor
mov
jp
fildll
mov
negb
cltd
mov
dec
jecxz
scas
push
xchg
or
ficomps
dec
das
xchg
scas
fs
and
rclb
call
inc
inc
sbb
repz
xor
add
jae
xchg
dec
enter
jl
stos
dec
and
adc
mov
xchg
xlat
mov
scas
pop
in
cltd
xchg
push
jp
mov
dec
dec
sbb
push
adc
dec
jnp
inc
and
scas
int
and
repz
pop
sub
daa
cmp
movsl
sub
hlt
test
inc
les
and
lds
xchg
or
dec
aaa
adc
enter
xchg
pop
outsl
jne
mov
cmc
ror
push
jbe
daa
shlb
ljmp
dec
insl
lcall
into
icebp
mov
shll
inc
in
cmpsl
cmc
pop
adc
das
bound
shr
inc
std
push
pop
inc
push
enter
fcompl
pop
adc
data16
push
das
xor
cltd
out
and
cwtl
mov
or
loop
dec
mov
data16
imul
popf
scas
and
xchg
jl
jae
out
aad
stos
lds
insb
sar
pop
add
push
rclb
call
scas
fcmovnbe
sub
mov
inc
mov
stc
aas
out
aad
mov
aad
push
leave
scas
xchg
lahf
sbb
repz
xchg
pop
or
movsl
inc
sub
sbb
out
repnz
lock
mov
xor
mov
fisubrs
adcl
jmp
sub
or
into
push
push
push
xor
pop
pop
sub
push
jno
cmpl
fcom
add
scas
int3
nop
mov
push
cs
xchg
mov
mov
inc
mov
pop
cmp
mov
sbb
test
sahf
mov
pop
cwtl
and
cmpsb
and
dec
fldt
jl
sub
aas
imul
adc
push
sub
sub
sub
and
mov
jmp
sub
int3
lods
das
imul
cmpsl
sub
sub
pushf
loop
shrb
shlb
and
cmpsb
sub
das
sub
sarb
scas
lret
mov
in
jns
mov
sub
outsl
lcall
shrb
jecxz
loop
loop,pn
and
sti
lods
jp
lods
das
pop
aad
scas
sub
pusha
dec
sti
pushf
and
imul
test
out
sbb
sub
sub
add
and
jmp
leave
out
and
fisubl
sub
loop
loopne
jmp
mov
sbb
mov
les
and
bound
and
pusha
shrb
cwtl
sub
out
scas
test
inc
sub
fwait
and
fwait
push
test
sub
jns
and
stos
xchg
push
loop
das
call
outsb
int3
fsubrl
ljmp
sub
mov
pusha
int3
in
sub
lods
out
inc
sub
jmp
push
stos
call
and
stos
mov
movsb
sub
mov
es
jmp
sub
loop
call
sub
in
pusha
loopne
loopne
shrb
int3
jecxz
mov
dec
imul
mov
shrl
shrl
pop
stos
sub
shrl
lods
out
stos
jmp
loope
and
lods
stos
and
mov
lods
sub
inc
sub
ret
mov
xchg
mov
das
stos
jmp
sub
sub
shrb
loop
stos
inc
movsl
lods
bound
lods
outsb
mov
adc
cwtl
lods
ljmp
scas
pop
loope
stos
pop
in
insb
jmp
sub
push
loopne
and
adc
mov
icebp
and
fisubl
fisubl
mov
push
lret
lods
xchg
add
mov
sbb
outsl
rcrb
out
inc
push
cmp
sbb
stos
jmp
push
jnp
inc
aam
or
add
push
outsb
mov
cmp
jae
shrb
xchg
add
popa
nop
movsl
jnp
xchg
push
lds
push
dec
hlt
jmp
ret
jo
cmpsb
add
data16
outsl
cmpsb
jl
scas
test
push
hlt
mov
adc
adc
fmul
xchg
xchg
ret
mov
loopne
scas
stc
pop
mov
popa
jns
dec
lret
stos
inc
adc
insl
outsl
fwait
cmpsb
cmp
out
dec
lcall
sub
fcompl
push
daa
in
cmpsl
pop
movsb
sub
fdivrs
jle
int3
push
fstl
sub
in
arpl
mov
fistpl
push
cmpsb
mov
cmpl
std
out
xlat
loope
insb
into
ret
fsubs
cmp
jl
nop
lret
xchg
ja
in
in
xor
cwtl
xchg
push
test
cmpsb
xchg
mov
stos
cmp
dec
in
push
mov
std
rorb
sti
cmp
add
js
push
dec
pop
out
mov
test
aam
ljmp
fildl
stos
push
push
cmp
ljmp
sub
les
inc
pop
mov
cmpsl
cltd
push
add
mov
cmc
call
hlt
mov
ret
cmp
stos
iret
and
jmp
inc
cmpb
inc
inc
inc
dec
xchg
push
pop
lea
dec
out
sub
inc
aas
mov
cmp
jo
mov
mov
cld
mov
out
cmp
imul
or
shll
sub
jb
dec
mov
addb
cmp
lods
scas
dec
pop
cmp
mov
fwait
gs
nop
clc
mov
cwtl
cmp
or
lahf
mov
adc
insb
in
push
negb
shll
push
std
in
lret
inc
stc
lds
gs
clc
sub
fsubrs
push
push
imul
fcompl
sbb
pop
mov
test
and
mov
rclb
insl
push
mov
sbb
xor
add
icebp
stos
and
mov
ljmp
sbb
movsb
je
add
mov
sub
xchg
sbb
mov
leave
dec
std
movsl
xor
add
push
jp
in
mov
push
jae
daa
popa
loop
or
xchg
imul
ljmp
call
sub
stc
dec
and
cld
js
cmpb
inc
leave
sbb
inc
out
and
push
mov
enter
mov
or
inc
pop
test
jmp
xchg
inc
mov
sub
mov
cmp
mov
mov
mov
or
out
pop
mov
cli
and
addr16
sub
cmpsl
shll
xchg
inc
mov
out
fs
add
adc
pusha
int
mov
clc
insb
scas
xchg
cmpsb
roll
pop
xchg
ss
fldt
je
pop
test
adc
xlat
pop
test
cmp
inc
sub
stos
out
mov
clc
or
faddl
cwtl
sbb
dec
cmpl
loopne
lcall
xor
pusha
push
xchg
repz
push
mov
xchg
rcrb
jle
lea
int
sub
ret
bound
add
adc
sbb
ljmp
lods
mov
fmull
push
cmpsl
push
addr16
and
and
cmc
aas
inc
cmp
jle
repnz
nop
int3
or
aad
mov
pusha
cmovge
or
mov
adc
in
mov
data16
pop
pusha
push
cmpsb
or
or
adc
add
xchg
cwtl
jno
pop
ja
sub
lea
ljmp
jecxz
adc
pop
je
cmpsb
xchg
jle
out
mov
lcall
lock
jp
out
cld
add
push
into
sub
pop
mov
lret
rclb
scas
sub
pop
in
lret
inc
mov
or
cmpsb
out
mov
in
sub
frstor
xor
or
jge
or
sbb
mov
push
iret
js
aaa
es
loopne
clc
pop
cmp
pop
sub
xchg
mov
insb
jb
dec
cmp
insl
push
dec
sub
cmp
add
and
mov
enter
movsl
push
rorl
mul
adc
enter
idivb
arpl
pop
pop
xchg
in
stos
inc
sub
add
xrelease
js
xchg
sbb
lock
mov
addr16
mov
sbb
push
dec
cmpsb
jno
pop
lods
xchg
mov
lods
daa
xchg
lcall
test
jbe
je
shr
sub
push
scas
outsl
mov
out
jg
xchg
pop
cmpsb
out
rol
xchg
pushf
jnp
aad
mov
ljmp
stos
cmp
call
bound
sti
fwait
xchg
mov
sub
rol
dec
test
jmp
cmovl
cmp
xor
adc
ja
jecxz
rcrb
mov
mov
movsb
mov
adc
bound
mov
add
ja
adc
jo
sbb
dec
inc
xlat
test
hlt
into
xor
mov
adc
or
insb
xlat
xchg
ljmp
add
mov
insb
push
sbb
insl
jp
sti
loope
lret
push
shrl
fs
popa
pop
out
fcoms
pusha
das
inc
mov
in
cmp
ljmp
sbb
xchg
or
add
adc
sub
out
mov
jg
xlat
or
sub
sub
loope
fisubrs
fdiv
inc
xchg
daa
adc
fs
push
jo
jnp
mov
sub
rcll
and
xor
mov
fistpll
mov
add
repz
aam
loop
push
sub
push
jl
xchg
packsswb
pop
popa
inc
fwait
and
inc
aad
adc
mov
pop
repnz
mov
sub
push
sti
out
push
or
cmpsl
in
pop
int
loop
lods
xchg
cmp
mov
push
pop
testb
es
mov
xchg
xchg
push
popf
cmc
push
and
sub
mov
dec
sbb
mov
inc
mov
mov
popf
sbb
stos
add
sub
cmc
sbb
outsb
insb
fnstcw
leave
push
fiaddl
sbb
lret
frstor
adc
cwtl
dec
jp
xchg
xlat
push
mov
sbb
mov
push
mov
repnz
xchg
cmp
cmp
adc
jbe
shlb
mov
mov
push
pusha
inc
jae
pop
test
xor
jge
in
in
adc
daa
scas
cmp
sbbb
mov
sub
push
dec
test
ds
or
ret
jae
lcall
testb
outsb
rcll
dec
inc
cmp
mov
and
repz
inc
pop
fsubr
int
dec
push
orl
cmp
sub
stos
jbe
loope
lret
insb
dec
push
sbb
sbb
stc
loopne
stos
add
jl
xabort
data16
cmp
inc
insl
adc
jmp
ljmp
and
mov
mov
dec
daa
les
jmp
pop
jne
mov
sbb
repnz
dec
add
scas
scas
jle
repz
sarl
xchg
arpl
arpl
loopne
test
mov
pop
ret
add
ss
dec
push
imul
mov
jo
out
or
xchg
dec
jo
push
mov
cmp
sbb
loope
shl
in
sub
push
add
js
or
xchg
shll
scas
call
push
adc
insb
in
push
enter
mov
dec
cmp
hlt
es
mov
clc
jbe
fisubrl
push
push
nop
xchg
jb
pop
jp
or
dec
rclb
mov
push
ljmp
fcom
movsl
dec
and
out
das
cmpsl
and
pop
inc
test
adc
stc
mov
jecxz
popf
mov
adc
sub
fwait
pop
les
xchg
pusha
mov
outsl
inc
xchg
add
dec
or
stos
mov
sub
cmp
test
push
ljmp
ja
cmpsb
push
push
ss
and
push
pop
ret
and
sub
call
ja
mov
push
shll
mov
das
inc
sbb
xchg
testl
push
insl
mov
pop
cwtl
scas
xchg
sbb
push
std
sbb
cmpsl
xor
or
pusha
fwait
lret
xor
pop
pop
add
lahf
insb
sti
and
jecxz
or
dec
sub
mov
adc
in
fdivl
outsl
jge
inc
sub
mov
adc
das
andb
dec
clc
inc
adc
or
fcoms
out
sbb
and
jle
out
sub
bound
inc
dec
push
outsb
call
pop
dec
pop
add
cmpsb
push
outsl
dec
cwtl
scas
mov
imul
xchg
or
xor
mov
sbb
lock
sbb
or
fldenv
jl
inc
jns
adc
sub
frstor
in
xchg
xchg
icebp
inc
addr16
mov
out
jb
test
scas
dec
int3
and
sub
jle
mov
fs
adc
mov
aam
push
lret
popa
imul
xchg
inc
insb
pop
xchg
push
pop
and
fs
xchg
and
ficoms
lret
das
jb
aam
popa
or
scas
push
into
xorb
inc
xchg
add
shlb
xlat
cwtl
scas
lcall
stos
inc
sub
sub
mov
mov
ljmp
pusha
xchg
shll
and
dec
in
enter
sub
pop
xchg
scas
mov
movsb
mov
in
xchg
lock
and
xor
mov
enter
mov
dec
mov
push
cmp
mov
sub
aam
add
outsl
je
add
push
mov
roll
jmp
cmc
mov
js
lret
add
pop
xchg
repnz
sub
cmp
pop
scas
pushf
cltd
sbb
out
inc
jmp
std
push
pop
and
scas
lret
mov
std
inc
lea
mov
test
dec
xchg
lahf
mov
add
jbe
mulb
and
and
sbb
stos
mov
enter
adc
mov
dec
leave
in
lret
mov
sbb
xlat
sarb
movl
push
data16
iret
fdivr
inc
mov
xchg
das
movl
and
xchg
loop
mov
stc
or
shrl
adc
arpl
pop
sbb
cmp
dec
js
pop
into
mov
mov
xor
out
popf
mov
in
adc
int3
sti
inc
xchg
add
daa
test
mov
cmp
and
movl
push
aad
mov
ljmp
cmpsl
mov
popf
test
aaa
and
push
stc
je
in
inc
test
pop
arpl
jb
mov
cwtl
js
pop
cmp
sbb
jg
jae
shrb
push
mov
sub
int3
in
jae
sbb
cmp
xor
pop
add
sbb
push
mov
dec
sbb
jmp
xlat
mov
mov
mov
inc
leave
in
outsl
mov
bswap
fdivl
dec
pop
push
das
lods
cmp
inc
sbbl
push
insl
rorb
push
popf
adc
adc
les
ret
jmp
aad
cmpsb
xor
dec
cmp
and
dec
fdivl
call
jge
imulb
mov
push
xchg
pop
add
repnz
lds
loopne
ret
xor
stos
push
cld
je
stos
movsl
jle
dec
les
imul
cmp
mov
pop
pop
and
divl
mov
ds
ror
fs
lods
jecxz
sub
push
dec
cmp
fcoms
insl
pop
mov
adcb
jbe
and
add
bound
or
ret
fcompl
push
mov
add
mov
shl
jle
dec
test
and
fwait
sahf
popa
fcoms
shrl
cwtl
dec
std
lods
jo
mov
add
lock
pop
mov
inc
je
in
data16
cld
adc
outsl
adc
fdivr
sub
mov
xchg
cwtl
das
push
jecxz
cmpsb
cmpsl
mov
js
sub
imul
scas
rclb
shrl
sahf
js
mov
out
repnz
cmp
lods
les
sbbb
fldenv
into
pop
daa
xchg
scas
jg
push
pop
adc
push
pop
imul
dec
fwait
sbb
dec
xchg
jo
mov
adc
in
push
pusha
jns,pt
inc
push
inc
add
aam
or
jne
xor
das
jmp
das
gs
xchg
push
xchg
or
lods
leave
xor
pop
xchg
pusha
dec
ret
stc
push
jbe
or
out
push
shll
jl
mov
in
test
dec
xchg
jb
mov
rcll
pop
mov
and
jmp
nop
bound
out
pop
adc
lahf
and
scas
lods
shlb
dec
in
cli
add
aaa
adc
fsubr
cmpsl
scas
out
fdivrp
das
loopne
inc
fisttpl
outsb
mov
call
pop
cltd
mov
cmp
fbstp
rclb
pop
out
aam
pop
mov
aaa
into
push
sub
mulw
add
shll
inc
pusha
cmp
lret
sti
mov
mov
inc
pop
mov
cld
bound
stc
call
xchg
dec
cmp
test
xlat
out
or
mov
movsb
shlb
mov
movsb
int
dec
mov
adc
dec
jp
insl
aam
adc
ja
jmp
push
mov
mov
mov
cmpsl
or
in
shrb
imul
push
mov
aas
shl
test
xor
scas
pop
jle
push
xlat
mov
shll
out
xchg
mov
and
movb
and
xchg
cmc
inc
lds
cld
mov
sub
mov
ds
fwait
lods
xchg
dec
mov
add
push
insl
das
jns
inc
enter
and
sbb
cwtl
dec
sbb
popa
or
add
xchg
sub
push
sarb
xchg
lcall
sbb
jl
in
push
cmp
cmpsb
jmp
and
data16
pop
inc
int
mov
aam
sbb
mov
jbe
bnd
insl
xor
push
jbe
or
cmp
xor
das
test
mov
rclb
sbb
adc
push
ficoms
outsl
xchg
hlt
nop
clc
cmp
cmpsb
int
stc
or
test
xchg
push
pop
pop
or
arpl
push
and
sub
push
je
or
pop
mov
xor
and
xor
out
in
scas
jge
arpl
sub
das
sub
sbb
subb
aaa
or
pop
loop
nop
out
outsl
and
cmp
adc
scas
rol
out
mov
cmp
out
xchg
je
in
jl
push
fcom
enter
mov
jp
orl
push
lret
pusha
stos
mov
mov
gs
xchg
inc
cmp
dec
cmc
movsb
cltd
xor
push
cwtl
xchg
test
das
icebp
pop
je
push
movsl
jp
and
sub
cmp
push
xor
fnstenv
ja
sarb
addr16
sub
push
dec
icebp
xchg
sbb
push
mov
xlat
fsubrs
call
ss
mov
mov
push
scas
leave
jmp
cmp
out
push
ret
test
pop
mov
mov
imul
in
or
push
aad
jo
rep
in
nop
cmp
and
mov
sti
dec
push
lea
mov
cld
mov
mov
cmc
ss
or
leave
add
pop
cmpb
xchg
pop
and
cmp
jp
jle
jl
mov
pop
outsl
sub
mov
loop
push
fdivs
and
movsl
fwait
hlt
or
dec
mov
dec
cmp
rolb
cmp
pop
xor
nop
je
or
enter
daa
jae
and
clc
das
mov
push
shlb
adc
stos
loope
xlat
leave
push
std
xor
push
outsl
sbb
jb
xlat
jge
dec
and
mov
in
adc
jmp
xchg
out
mov
sub
xor
frndint
push
in
xorb
and
das
push
pop
mov
pop
outsl
shlb
insl
mov
addl
sub
call
frstor
pushl
add
xchg
dec
repz
adc
mov
mov
mov
imul
enter
dec
int
shlb
push
je
lea
sbbl
fcmovne
mov
nop
incl
push
test
and
addr16
or
cmc
sbb
int
push
loopne
in
lods
subb
cmp
inc
scas
lock
jge
adc
pop
jge
dec
mul
aam
jns
in
xor
jae
push
cmc
add
jl
and
pop
stos
xor
cmpsb
pop
cwtl
repz
pop
lock
das
lods
cmp
push
fwait
jp
daa
aas
pop
and
orb
jmp
lea
jge
and
xchg
sub
mov
data16
adc
nop
cmpsl
inc
or
mov
jae
cld
stc
sub
mov
repnz
push
mov
lret
sbb
mov
lods
push
aam
ja
push
cltd
les
xchg
lcall
push
aam
inc
jecxz
push
or
inc
xchg
insl
notl
or
mov
cmpsl
pusha
sbb
sub
stos
hlt
loopne
xor
push
outsl
push
rcrl
pop
outsl
push
mov
push
or
test
icebp
in
dec
add
pop
cmpsl
pop
in
in
xchg
and
js
add
test
jle
das
addb
ss
adc
fsubs
notl
jle,pn
dec
sub
fisubl
xchg
test
push
cmpsl
fsubs
int
int3
fisubl
cmpsl
dec
add
xor
jge
fnstcw
sub
or
loope
sbb
mov
push
inc
sub
jmp
adc
xor
lahf
jns
in
dec
dec
push
mov
pop
aas
add
inc
xchg
add
test
hlt
insb
inc
sub
xor
sbb
cmp
aam
aas
outsb
rorb
insb
mov
int
mov
int
aad
jmp
mov
aam
lret
movsl
lret
in
test
subb
xchg
add
xchg
jge
mov
clc
scas
cmp
mov
mov
or
data16
insl
lret
int
out
mov
cwtl
sub
popa
push
push
fwait
incb
mov
jmp
cli
and
negl
xchg
cmpsb
jo
aaa
mov
mov
repnz
adc
test
test
xchg
into
or
stos
adc
stos
and
loopne
fldl
push
insl
pop
mov
sbb
pusha
xadd
dec
test
add
cltd
cmp
jecxz
add
dec
push
mov
mov
das
push
cmp
inc
adc
movl
fisubrs
js
push
pop
push
popf
push
jbe
add
dec
movsl
adc
push
fisttpll
aad
mov
fidivrs
cmpsb
cmpsb
pop
mov
ljmp
sub
leave
lds
mov
mul
push
mov
lahf
cs
in
pop
stc
sbb
stos
mov
out
cmp
lea
and
rcrb
sbb
into
insl
or
push
lea
outsl
mov
mov
xorl
xchg
les
hlt
cmp
aam
scas
pop
lods
inc
bound
cmpsw
repz
or
lock
outsb
in
aad
bound
push
into
and
dec
sbb
lods
cmp
cmpsb
fcmovnu
nop
jb
and
jb
out
pop
or
cwtl
mov
int
sub
fimull
pop
fstpt
sub
xchg
roll
mov
mov
out
mov
jno
ss
or
xchg
in
repz
xchg
xchg
xchg
mov
sbb
inc
ret
push
sbb
leave
jmp
push
sbb
mov
cmpsb
dec
xor
fcmovne
cmp
push
sub
rolb
add
sahf
sub
and
jns
ds
js
rorb
cmp
aam
inc
sub
iret
jmp
lea
dec
test
stos
fcom
push
shld
add
into
jbe
in
sbb
jo
in
inc
push
insb
cltd
push
rcrl
mov
in
cmp
addr16
fwait
in
mov
in
call
hlt
daa
fsubs
pop
sbb
mov
mov
std
jnp
push
mov
or
nop
or
lcall
push
sub
outsl
lds
cltd
gs
push
cs
scas
pop
repz
jnp
xorl
test
out
popa
cwtl
scas
adc
lret
mov
sarl
mov
mov
adc
mov
xchg
movsb
mov
add
scas
sbb
adc
lcall
xor
jbe
mov
push
popa
dec
cmp
loopne
cmpsl
push
fnstcw
xchg
subl
test
cwtl
cmpsb
and
in
push
ss
add
cmp
sbbb
cmp
test
mov
lea
cmpsb
inc
sbb
dec
cmp
jo
mov
std
xor
mov
pop
movsl
ret
jnp
fcmovnb
mov
aaa
mulb
stos
add
push
sbb
push
cmp
rep
lret
sarb
jmp
ds
int
popf
push
cs
enter
cmp
cwtl
popa
sub
test
jg
cmp
popf
das
sub
out
add
jns
popa
popf
xchg
ja
jno
mov
rolb
pop
dec
and
push
jmp
xlat
jmp
pop
fdivrl
cmpsb
cmpsl
cmc
fiaddl
insl
loopne
sub
mov
xlat
and
add
inc
iret
jge
std
xchg
cld
add
push
popa
in
test
adc
lret
into
cld
pop
or
inc
aaa
arpl
dec
scas
mov
mov
bound
cld
fwait
cmpsb
fnsave
imul
jne
mov
inc
mov
jp
dec
cmpsl
faddl
arpl
insb
ret
jp
inc
js
fs
jl
out
sahf
inc
pop
lock
sub
mov
loope
mov
aaa
dec
int3
add
xchg
insb
mov
popf
cmpsb
xchg
dec
into
out
in
jl
pop
push
ror
inc
xchg
inc
shlb
jbe
fs
sbb
xor
scas
push
out
jge
aad
ret
enter
inc
xchg
lea
popf
addr16
push
ljmp
fsubrs
clc
push
aam
lds
sbb
pop
es
loope
mov
leave
cmp
test
add
addl
mov
call
pop
pushl
lods
sub
jno
scas
sahf
mov
inc
in
nop
rcr
jo
and
lds
aam
xchg
push
popf
pop
gs
idiv
cmc
call
lods
testl
test
cld
cld
fisubs
cmp
lret
icebp
and
mov
je
movsb
dec
in
cmpsb
adc
movsb
add
cwtl
xchg
lock
ret
test
lcall
mov
mov
out
inc
sub
inc
repnz
inc
pop
push
ret
movsl
outsl
xor
outsb
iret
adc
or
movsl
lods
mov
cmp
xchg
cwtl
das
push
push
repnz
loope
ror
rcrb
lea
sub
mov
sub
push
push
pop
add
inc
pop
mov
sub
adc
cmp
and
outsb
ret
mov
scas
lret
mov
xchg
add
movb
jbe
mov
addr16
xor
popa
push
insl
into
or
hlt
pop
je
loopne
mov
pop
dec
cwtl
arpl
insb
adc
pop
pop
movsb
fistpl
repz
pop
inc
or
nop
ljmp
call
sarl
lods
in
enter
jp
dec
fimuls
imull
pop
es
inc
pushf
subl
mov
lds
aad
inc
pop
insl
or
enter
dec
test
dec
stos
sbb
fsub
and
push
and
mov
jbe
xor
icebp
cmp
rcrb
jl
sub
lret
mov
int
or
aam
stos
je
push
sbb
test
jae
stos
mov
movsb
pop
aam
das
aad
shrl
cmpsb
call
dec
lahf
cmpsb
dec
out
fisubrl
aas
and
scas
nop
inc
fs
inc
rclb
idiv
add
sub
fsubrs
cmpsb
popf
inc
mov
add
insb
fldcw
add
pop
mov
pop
and
pop
sbb
scas
divl
mov
addr16
xchg
push
mov
stos
cmpsb
xchg
mov
addr16
pusha
and
ret
jmp
int3
push
mov
shr
icebp
add
xor
nop
or
dec
and
std
jge
les
xor
leave
xlat
mov
cmp
iret
repz
mov
stos
jbe
inc
jae
dec
xlat
jbe
pop
mov
mov
ret
in
mov
rcll
les
lret
js
cmp
fsts
dec
xchg
rcrl
xor
movsl
call
sub
inc
std
or
fadds
push
pop
test
or
les
dec
jmp
cmp
das
aam
clc
rolb
and
jl
lret
daa
lods
xor
adc
movsl
mov
mov
xchg
rol
aaa
cmpsl
hlt
xchg
xor
mov
in
and
icebp
add
es
xor
pop
das
inc
test
icebp
mov
adc
push
inc
aam
out
aas
sbb
push
ljmp
and
inc
in
adc
cltd
lods
or
mov
fdivs
xchg
mov
movsb
mov
cmp
lret
loop
nop
mov
xchg
cmpsb
sub
pop
in
das
gs
and
fistl
scas
pop
mov
sbb
mov
xchg
imul
inc
fcmovne
mov
cwtl
jb
out
cmpsb
out
cmc
jo
les
cmp
fists
pop
pop
loop
cmc
inc
xor
out
cmpsb
inc
pusha
xchg
sub
mov
repnz
sbb
and
ss
jle
scas
test
cmp
int3
add
push
arpl
imul
in
popa
pop
jp
push
bound
scas
scas
aas
leave
mov
and
out
punpckhbw
imul
stc
sbb
loope
cmpsl
jge
fisubrl
popf
int
xchg
in
flds
in
xchg
adc
cmpsl
xchg
imul
cli
das
enter
xchg
jae
leave
loopne
xchg
jb
lcall
sub
dec
lods
ret
sub
pop
and
test
enter
popf
pop
jg
orl
or
std
mov
mov
dec
or
orl
lock
pop
mov
ja
cmc
jecxz
leave
in
xchg
add
or
cmpl
sbb
stos
es
imul
xor
and
add
fsubrs
out
xor
inc
mov
lcall
xchg
test
jbe
out
push
inc
adc
sub
fucomp
rcrb
or
insb
and
iret
pop
js
pop
xor
leave
ret
mov
pop
aaa
repz
int
fisubs
cwtl
cmpsb
nop
fninit
test
aad
pop
enter
vhaddps
faddl
fucompp
loopne
sub
and
call
stos
mulb
xor
push
adc
scas
dec
adc
fsubrp
push
pop
sub
sub
mov
rolb
pop
push
lret
movsl
sub
push
mov
inc
xlat
pusha
out
sub
mov
jmp
push
pop
fsubs
sahf
nop
test
ret
inc
lret
and
mov
in
decb
enter
or
outsl
fistpll
push
jg
lcall
faddl
pop
or
aad
call
in
cmpsb
jge
add
jmp
inc
test
inc
or
cmp
mov
cltd
icebp
test
enter
popf
fsts
shll
cmp
sub
cmpsb
sbb
mov
dec
adc
fbld
ljmp
xchg
outsl
in
sbb
pop
lds
and
and
das
mov
adc
cld
xchg
int
lret
push
lcall
inc
xchg
pop
psrld
movsb
outsl
mov
xchg
inc
scas
xor
inc
mov
sub
stos
inc
lds
sbb
add
js
add
add
dec
mov
mov
cli
dec
call
leave
xchg
xadd
enter
stos
and
dec
cmp
hlt
mov
mov
mov
push
push
sub
test
std
rorb
fucomp
jb
icebp
mov
cmpsb
pop
shl
mov
dec
lahf
add
mov
lcall
inc
adc
cmc
es
popf
dec
adc
and
sbb
lods
push
decl
dec
push
int
ja
dec
mov
loop
in
mov
mov
xchg
clc
push
sbb
les
jg
shrb
jnp
mov
jl
movsb
sub
loope
fisubs
cmp
dec
imul
loop
jno
call
push
jmp
dec
and
sbb
mov
jo
data16
loope
fwait
int
out
adc
xchg
jp
pop
int
stc
cmp
pop
xlat
mov
fdivl
adc
leave
mov
aas
scas
mov
jnp
js
es
mov
cmp
mov
jecxz
push
aaa
cmp
cmp
scas
cmpsb
jg
push
stos
shlb
hlt
xor
arpl
inc
popf
inc
nop
xchg
push
jmp
loopne
cmp
jo
lcall
jb
cmpsb
mov
xchg
and
jl
xor
rol
cmpsl
das
add
mov
mov
fmuls
imul
xor
add
jo
xor
lods
shlb
pop
stos
jmp
and
inc
movsb
add
cmp
arpl
jo
fistpll
aad
jmp
pop
iret
push
cmp
and
push
pusha
cmp
gs
shr
sbb
push
ljmp
mov
in
jno
stos
in
sbb
xor
xor
mov
jnp
sbb
scas
mov
fidivl
fmul
dec
lods
xor
jae
push
inc
filds
addr16
sarl
sbb
leave
mov
in
lret
enter
ret
iret
xchg
iret
test
dec
cli
mov
int
ret
das
sub
insb
lcall
add
mov
outsl
sub
lret
fisubl
enter
pop
push
mov
lea
jp
pop
mov
sub
test
or
mov
xor
mov
jge
cld
sub
jbe
mov
fisttpll
mov
pop
push
or
xlat
movb
xor
leave
push
sub
test
xchg
or
fsubs
push
mov
outsb
out
sbb
push
jo
push
in
push
mov
or
stos
pop
mov
cwtl
ret
insl
pop
daa
adc
xchg
inc
push
dec
add
xchg
xchg
adc
jae
xchg
sbb
jnp
cmp
or
stos
or
inc
lea
dec
ljmp
cmp
mov
das
xor
and
test
xor
dec
push
push
sub
adc
fnstenv
es
inc
stos
ret
push
cmpsb
testl
jne
push
adc
inc
or
arpl
push
test
mov
aam
cmp
inc
cmpsb
js
sub
rcrb
mov
push
xlat
out
shlb
lret
or
mov
cmp
adc
stc
cmpsl
xchg
mov
and
test
mov
cmpsb
adc
cmp
mov
inc
cmp
xchg
xchg
xchg
adc
mov
in
sarb
pop
and
sarl
adc
adc
lds
filds
dec
mov
imul
insb
lods
cmpsb
popf
sbb
or
sub
push
cmpsb
cmpl
andl
cmc
std
or
inc
insb
movsl
loopne
cmpsb
jo
dec
in
xchg
xor
shlb
out
cmp
adc
mov
negl
mov
sub
push
les
fildl
aaa
pop
pushf
xchg
jg
push
jb
iret
mov
andl
jl
sbb
jmp
data16
mov
fldcw
scas
ret
jge
pop
sbb
adc
adc
sub
int3
cld
mov
push
scas
xor
lock
mov
pop
cmpsb
jmp
push
cmpsl
mov
bound
int3
or
test
in
cmp
jb
test
outsl
mov
test
or
cmp
cwtl
cmc
dec
push
or
je
outsl
aas
and
adc
mov
fnstcw
push
pushf
lcall
sarl
cmp
xchg
or
jg
mov
lock
popf
rcll
push
xchg
xor
jne
insb
sub
or
pop
mov
add
cmp
fsubrs
inc
pop
push
ljmp
xchg
jmp
sbb
in
push
xor
mov
mov
faddl
fcompl
jp
testl
dec
into
les
inc
pop
in
mov
cmpsb
sub
mov
subb
jmp
imul
inc
data16
adc
pop
push
adc
das
out
rep
gs
dec
fcmovnb
jle
call
stc
xchg
push
cmpsb
sbb
inc
jl
int3
mov
mov
sub
jge
leave
jbe
or
mov
shll
mov
and
roll
bound
add
pop
test
mov
xor
shl
push
mov
pop
dec
insl
test
and
int3
aaa
in
das
cmpsb
enter
adc
call
repz
sub
pop
or
xchg
jmp
mov
lock
sbb
gs
out
and
notl
mov
sub
imul
ljmp
in
sub
sbb
mov
xor
add
jo
movl
call
out
int
fcmovne
in
fmull
push
in
aad
bnd
mov
mov
jmp
out
xchg
push
scas
lret
ret
xchg
push
stos
pop
sbb
cmpsb
inc
sub
aam
mov
inc
in
push
or
sbb
adc
lock
sub
pop
scas
scas
in
pop
add
repnz
mov
sub
cmp
movsb
xchg
sbb
loopne
addr16
add
pushf
dec
xchg
xchg
scas
das
xchg
outsb
lods
inc
pop
lock
mov
leave
cmpsl
sbb
bound
push
jmp
pop
jle
out
mov
in
cmp
out
js
cmpsb
or
push
adc
ds
inc
stc
addr16
pop
fdivl
test
outsl
sub
fbld
ljmp
dec
frstor
dec
cmp
ja
lds
cmp
xchg
mov
in
call
leave
mov
fisttps
sbb
inc
leave
imul
movsb
sub
or
repz
imul
xor
or
cmp
xchg
jecxz
insb
std
out
jge
cwtl
call
xor
dec
js
cmpsb
leave
loop
ficompl
push
sbb
das
mov
xchg
out
jmp
mov
jno
roll
stc
gs
jp
stos
fwait
lods
sbb
test
aaa
inc
int
lahf
pop
xchg
negl
aam
enter
pop
jns
xchg
jmp
aad
dec
mov
test
lds
aas
sbb
add
dec
ret
dec
es
xchg
pushf
sub
inc
mov
vpslld
fcoms
push
pop
movsb
rcl
and
cmc
and
cmp
push
or
sub
pop
fdivs
add
test
xchg
lods
xchg
dec
xchg
xor
push
das
xchg
dec
xchg
shl
fcompl
fcoml
pop
testl
shlb
nop
fs
cmpsl
in
cwtl
scas
shlb
inc
or
or
repz
mov
jmp
jl
mov
arpl
ret
in
scas
cli
leave
inc
xor
imul
cmpsb
dec
jo
fidivrl
sub
cmpsb
inc
mov
lods
loop
test
jp
pop
sub
xchg
sub
sbb
leave
push
or
sbb
movsl
mov
pop
xchg
push
mov
aas
int3
pop
daa
xorl
shlb
sub
out
add
ljmp
popa
addr16
mov
loope
in
call
stos
sbbl
jl
sti
inc
mov
mov
jnp
push
mov
pop
ret
mov
pusha
mov
repz
or
xchg
inc
fwait
xor
aam
lods
jle
stc
mov
inc
in
imul
mov
fildl
cmc
add
jl
push
adc
add
pop
sarl
out
cwtl
sarb
out
mov
leave
test
cmpsb
cs
lock
jmp
out
es
inc
movsl
jae
pop
xchg
out
xor
jbe
jle
aas
sbb
les
push
fcoml
xchg
lods
inc
cmpsb
adc
xor
insl
mov
fcmovne
jp
inc
push
xor
sahf
jo
mov
push
and
fistl
xlat
inc
call
out
cmpsb
jmp
sub
ror
scas
lea
in
leave
cmp
sbb
mov
lcall
push
jl
outsl
add
mov
lahf
scas
int3
mov
mov
leavew
idivl
ficoml
cmpsl
scas
xchg
loopne
cmp
mov
ret
dec
std
jns
mov
cmp
leave
inc
sbb
inc
negl
and
jl
mov
js
push
lret
dec
aas
fidivl
and
adc
insl
dec
mov
mov
jg
aas
lret
xchg
inc
jbe
mov
outsl
gs
mov
mov
and
pop
mov
leave
imul
scas
xor
add
gs
sub
jl
adc
pop
push
out
inc
test
bound
js
mov
mov
leave
xor
mov
aaa
lea
sbb
pop
insb
xor
or
mov
out
into
sbb
scas
scas
pop
dec
push
mov
push
push
and
and
xchg
xor
or
mov
shrb
add
jmp
insl
icebp
rol
jl
xor
push
lret
dec
mov
push
pushf
ficoms
push
sbb
jae
cmp
loop
cmp
cmp
nop
push
cmovae
xchg
pop
fcomip
pop
punpcklwd
movsl
stos
dec
pop
arpl
loopew
add
dec
mov
jg
stos
xor
xchg
sub
int
adc
ret
jbe
inc
xchg
stos
iret
in
jge
call
push
loop
data16
cmc
inc
adc
jmp
and
push
mov
aaa
fs
push
jle
sti
js
fsubs
das
inc
lods
scas
pop
xor
xchg
push
sbb
rolb
mov
jle
adc
and
inc
push
stc
aam
cmp
sub
movsl
in
in
stos
jbe
movsl
test
inc
imul
fiaddl
jg
lea
sbb
sbbl
mov
lcall
jl
fisubrl
lods
imul
imul
pop
ret
lcall
xchg
inc
cmc
adc
in
mov
push
mov
pop
sub
lcall
mov
pop
nop
into
mov
sub
mov
aam
push
dec
imul
loope
inc
dec
insb
cmp
loopne
push
mov
test
cmc
je
js
das
addr16
loope
cmpsb
subl
ret
scas
shlb
daa
aam
dec
sub
sbb
add
aaa
popa
and
dec
rcl
push
cmc
gs
mov
aaa
insb
mov
push
and
insb
aad
mov
idiv
pop
mov
push
dec
mov
shlb
data16
pop
in
dec
pop
or
lcall
sti
adc
mov
fisttps
dec
adc
mov
mov
das
mov
sub
das
add
xchg
idivb
scas
insb
mov
mov
data16
mov
in
ss
sub
xor
cmp
or
sub
popf
in
sub
mov
mov
outsb
rcll
or
jb
rorl
testl
sbb
mov
out
leave
hlt
xchg
pop
cmc
jge
xlat
ss
jo
aaa
leave
xchg
sbb
fadds
shrb
sub
xor
and
adc
icebp
fldcw
pop
push
ljmp
stc
call
inc
sti
pop
push
popf
popa
aas
mov
jl
lds
jne
enter
jne
dec
daa
jmp
push
js
cmpsb
mov
sub
scas
adc
in
ret
in
int
and
imul
aam
pop
cmpsb
out
cmp
popa
aam
clc
test
xlat
and
popa
andl
out
adc
lcall
test
test
lds
xor
add
jg
cmp
pop
add
pop
jne
sub
ret
pop
cmp
mov
adc
push
inc
arpl
inc
sahf
adc
inc
movsl
in
or
sbb
lea
xor
repz
xchg
jnp
and
pop
test
stos
cli
cmpb
in
mov
pushw
icebp
add
pop
call
fs
jp
daa
scas
mov
aad
mov
cmpsb
loop
fidivrs
jmp
pop
inc
loope
repz
stos
adc
and
pop
adc
mov
ss
scas
pop
push
cmp
ds
push
push
pusha
dec
lds
and
lods
popf
test
adc
sub
or
inc
stos
sbb
pop
out
push
mov
or
inc
popa
inc
and
bound
xor
popf
jns
push
xchg
push
mov
loop
ds
cmp
xchg
in
or
scas
bound
leave
in
sub
aam
and
xchg
ss
inc
leave
hlt
test
xchg
fiaddl
jbe
jbe
and
sbb
test
gs
movsl
and
xchg
das
pop
add
push
dec
iret
push
pop
sub
jge
push
aas
xlat
inc
or
pop
enter
push
out
xor
out
in
pop
cmpsl
mov
sub
fs
sbb
push
sub
xor
adcb
test
sub
push
stos
sub
hlt
fnstenv
add
movsl
lret
data16
aas
data16
push
jmp
movsb
cmp
jnp
pop
mov
js
stc
xor
aam
int
sub
adc
mov
adc
sti
inc
adc
jb
es
pop
movsb
and
mov
jle
les
arpl
push
test
inc
xchg
push
xchg
lods
jne
rolb
or
movsb
add
mov
in
cltd
pop
out
mov
and
mov
nop
std
or
lods
mov
or
jne
and
dec
scas
pop
test
lcall
fidivrs
and
sbb
loope
pop
out
jbe
int
pushf
xchg
mov
hlt
pop
test
rorb
shlb
lcall
out
ret
push
ja
inc
imul
lret
push
mov
out
cmpsb
adc
dec
scas
mov
adc
fs
adc
push
mov
adc
stc
out
lcall
pop
les
adc
clc
lret
cwtl
daa
inc
jbe
push
mov
jge
push
insb
jae
adc
xchg
sbb
daa
xor
imul
mov
aam
jmp
int
mov
adc
push
out
xor
inc
sbb
mov
adc
popf
xor
in
lcall
pushl
mov
sbb
and
xchg
lods
xchg
jnp
ret
xor
fsubrs
imul
int
lahf
dec
push
shrb
mov
lea
sbb
inc
dec
xchg
xchg
rcr
adc
lahf
das
jl
out
mov
cmp
mov
and
push
js
xchg
test
xchg
das
mov
pop
aad
aad
jbe
aam
mov
test
shl
inc
pop
jns
push
mov
ljmp
fistpl
or
sub
cmp
es
push
and
add
inc
out
mov
inc
jbe
or
sub
ret
jg
inc
inc
ficomps
dec
sarl
xchg
fmul
xor
ljmp
fildl
lret
cmp
cmp
push
or
pop
lret
pop
int
or
imul
mov
test
cmpsl
push
xor
lcall
cmc
cmpsb
subb
call
fcoml
cwtl
push
xor
ljmp
shlb
dec
outsb
dec
das
loopne
xchg
std
cmpsb
sub
ljmp
pxor
jle
arpl
sbb
lahf
inc
and
sbb
repz
mov
sbb
mov
fmull
or
push
hlt
fsubl
xchg
cmp
lret
cmp
push
mov
scas
mov
in
jl
in
jmp
inc
int
stos
push
das
insb
scas
xchg
cmp
ret
mov
add
arpl
mov
xor
push
cmpsl
shr
shll
mov
out
cmp
pop
and
or
xchg
cltd
dec
icebp
loop
sub
jmp
popf
dec
daa
push
mov
inc
imul
lock
mov
shll
adc
xchg
pop
test
shlb
cmp
dec
dec
jg
imul
popa
jno
scas
push
lret
sbb
aam
test
test
push
fld
js
sub
push
scas
out
adc
mov
sub
ljmp
and
inc
movsb
adc
xchg
mov
fidivrs
nop
mov
jmp
pop
sub
xchg
addr16
xor
pusha
sub
mov
lods
movsb
movsb
notb
hlt
test
lods
mov
cmpsb
cmp
lret
loop
mov
sub
cmpsb
inc
jge
jbe
inc
fwait
mov
in
cld
repz
leave
repnz
sub
push
jo
enter
inc
outsb
aas
scas
test
cmpsb
in
inc
xchg
xor
lret
lock
popf
pop
outsb
mov
sbb
stc
jg
add
inc
cmp
es
xchg
sbbl
sub
pop
push
cli
xchg
inc
mov
cmpsb
push
gs
inc
repnz
mov
dec
insl
loopne
in
jl
push
dec
cmpsl
cmpsb
popa
mov
daa
mov
enter
pop
clc
mov
mov
dec
stos
out
or
lret
nop
mov
adc
inc
adc
pusha
pop
add
sub
adc
shll
cmp
mov
loope
sub
rorb
loop
scas
jo
xor
pop
andl
lds
ret
out
pop
loop
dec
ds
xor
mov
fiadds
and
xchg
mov
imul
push
lret
out
call
leave
outsb
mov
mov
xor
fdivr
out
nop
arpl
scas
ja
outsl
jge
sub
mov
push
popf
xchg
das
mov
adc
mov
or
push
loope
mov
lcall
adc
sbb
dec
mov
xchg
stos
and
lret
popa
shlb
arpl
jl
stos
mov
dec
stos
push
loope
daa
shlb
lret
mov
and
and
roll
lcall
cli
push
ljmp
stos
push
and
xor
js
sbb
sbb
push
cmp
cmpsb
jbe
lds
data16
popf
int
sub
mov
insb
fsubrl
xchg
inc
mov
mov
in
mov
repz
dec
push
ret
xchg
clc
pop
push
inc
in
push
cmp
jb
lds
pop
push
inc
or
enter
sbb
adc
add
push
pop
inc
pop
in
adcl
sub
dec
aas
inc
addr16
jmp
jp
pop
out
popf
cmp
stc
repnz
or
pusha
mov
shr
ret
insb
cwtl
loopne
inc
ljmp
xchg
mov
cltd
push
sub
and
mov
dec
push
aad
out
mov
das
pop
pusha
lcall
pop
pop
push
rcr
sub
jo
push
sbbl
fwait
enter
mov
fsubrs
dec
xchg
cmpsb
or
sbb
pop
rolb
add
sbb
jo
mov
cmpsb
pop
xor
scas
or
or
shl
cmpsl
sub
daa
lds
cmp
jb
pop
mov
jge
arpl
xrelease
inc
sub
aam
pop
pop
inc
xchg
test
jns
das
xchg
scas
and
inc
stos
adc
mov
add
xchg
testl
mov
mov
inc
jmp
sub
jne
mov
gs
cmpsb
and
cs
push
dec
rcl
cmp
or
lahf
jle
dec
xchg
sbb
in
mov
add
cmpsl
pop
test
pop
les
xchg
icebp
lret
daa
cmpsb
add
xchg
addr16
jbe
add
sub
popa
lods
popf
pop
inc
pop
xchg
cwtl
add
imul
imul
test
outsb
and
pop
push
fbstp
das
stos
mov
hlt
mov
sti
mov
pop
cld
in
imul
lret
sbb
das
xlat
mov
cwtl
adc
les
out
hlt
das
movsl
lds
faddl
xchg
cmpsl
call
movsb
or
push
add
xor
sti
xchg
test
fs
es
jle
xlat
mov
xchg
data16
add
movsb
and
mov
mov
lds
lock
inc
jbe
xchg
daa
inc
scas
cmp
dec
lahf
mov
sarb
xor
mov
xchg
mov
xchg
mov
adc
xor
push
xor
daa
add
mov
or
jne
and
pop
jmp
dec
adc
adc
js
jg
repz
lahf
mov
test
cmp
xchg
adc
daa
mov
push
dec
lods
sub
fcompl
cmpsb
lcall
xor
push
dec
test
adc
mov
cmp
fisubl
mov
fcomp
mov
sbb
xor
add
and
add
push
test
cmp
lds
xor
nop
inc
sub
lret
dec
repz
dec
xchg
mov
mov
xchg
sahf
add
xabort
or
in
stos
xchg
std
mov
lcall
movsb
xchg
das
addr16
inc
mov
sbb
cmpsb
jae
pop
push
loop
cmpsl
lret
or
int3
stos
or
icebp
lret
xor
arpl
add
rcll
mov
mov
js
aam
clc
int
sub
inc
sub
xchg
outsl
add
in
test
push
loopne
xchg
jns
xchg
mov
jne
sti
xchg
dec
insl
sub
nop
test
and
pop
adc
fimuls
pop
lods
shrl
sbb
cmpsb
sub
scas
daa
push
inc
mov
adc
and
adc
inc
cld
inc
and
popa
cmp
lcall
and
shlb
lods
mov
sub
push
sub
add
in
jae
cwtl
jge
xchg
loope
sbb
and
shlb
xchg
stos
adc
cmpsb
fs
sbb
or
pusha
repnz
imul
mov
int3
cmp
sahf
xchg
insb
sub
xchg
cld
cmp
push
leave
stos
aad
fucom
cmp
jecxz
pop
sub
sbb
cmp
and
inc
ret
sub
pop
and
pop
scas
js
xlat
rorl
insb
fsubrl
popf
cmp
push
adc
xchg
jp
shlb
rcrb
popf
test
sbb
lea
das
fldt
int
cmpsb
mov
sbb
mov
sub
negb
cmpsb
mov
push
test
in
cmpsb
mov
jl
sbb
mov
int3
push
push
xchg
lods
fidivrs
xchg
push
cmpsb
mov
inc
lahf
sarl
in
repz
call
cltd
out
inc
dec
movsb
nop
cltd
push
xchg
add
mov
xchg
mov
pop
mov
mov
fidivrl
mov
repz
sbb
fcomip
mov
cmc
stc
cmp
in
cmp
hlt
imul
lods
add
lods
mov
xor
rcrl
sarb
out
call
pop
ss
ror
cmp
dec
cmp
mov
gs
xchg
addb
adc
repnz
sub
cmc
lea
sarl
mull
test
xchg
inc
mov
sub
in
sub
in
or
xchg
outsb
push
in
imul
data16
xor
push
jmp
test
fcomps
jo
push
aaa
fsubrl
test
enter
leave
insb
movsl
sub
xor
lods
mov
push
pop
inc
mov
mov
mov
addr16
cmc
jne
ret
or
adc
sub
sub
lods
xor
addr16
cwtl
adc
adc
jg
daa
out
push
cmpsb
scas
sbbl
rclb
jle
push
cmp
in
hlt
push
or
and
sub
push
xchg
ret
push
jecxz
cmpsb
mov
enter
and
aam
xlat
xchg
ror
sub
mov
xchg
mov
stos
adc
loopne
nop
adc
out
cwtl
mov
mov
mov
out
add
or
mov
cmpl
daa
sbb
dec
inc
jo
xchg
iret
stos
cwtl
andb
mov
test
es
test
push
cmp
cmpsb
iret
mov
adc
and
push
movsb
mov
mov
adc
imul
jbe
test
sbb
imul
div
js
sbb
testb
jb
and
dec
icebp
adc
ljmp
cwtl
in
mov
ljmp
push
xor
loop
adc
pop
fsubrs
movsl
mov
mov
and
add
repnz
jmp
in
dec
hlt
jl
push
lds
call
leave
insb
inc
push
dec
dec
xor
idivb
cmpsb
sub
mov
cltd
jo
imul
push
or
dec
push
scas
pop
add
loope
pop
mov
popf
xchg
pop
and
scas
jecxz
sub
test
xchg
cmp
aaa
fisubs
jl
pusha
lea
cmpsb
and
lahf
adc
loopne
pop
push
and
clc
movsl
dec
dec
loop
dec
mov
xchg
pop
lea
add
icebp
inc
sub
iret
clc
fstpl
jmp
lock
aaa
insl
jl
pop
or
sub
and
mov
leave
mov
lods
sub
bndstx
push
mov
push
xchg
jecxz
xchg
flds
stos
cmc
mov
rcll
jbe
sub
test
add
dec
mov
jge
add
outsb
cmpsl
scas
ljmp
inc
leave
popa
sub
scas
mov
mov
test
mov
in
loope
push
cli
cmp
pop
into
notb
adc
and
scas
outsl
xchg
filds
loop
js
cmpsb
xlat
xor
stos
sbb
and
movsb
stos
inc
dec
cmpsl
call
sub
xchg
rcll
push
jae
stc
stos
mov
daa
dec
xor
shlb
iret
xchg
arpl
int3
mull
mov
movsb
lcall
out
scas
pop
int
sub
mov
dec
push
aad
xchg
mulb
pop
js
movb
xchg
out
aam
cmpsb
pushl
loope
das
cmp
mov
sbb
mov
lea
aaa
lahf
fldl
cmpsb
imul
jge
std
std
xlat
cmp
ss
lret
loopne
out
loopne
aam
dec
jg
pusha
or
fs
test
repz
and
lcall
js
jae
pop
mov
data16
stos
and
enter
leave
push
lahf
mov
pop
cli
cmpsb
imul
lea
sub
je
call
mul
push
les
cmc
lds
enter
dec
shlb
int3
je
dec
push
mov
loop
cmpsb
mov
lcall
mov
repz
mov
loopne
xor
les
clc
push
sti
cmpsb
jle
mov
jb
sbb
adc
rolb
dec
fidivrs
cmp
test
xor
popa
fistl
scas
sar
loopne
xchg
in
add
adc
lds
inc
inc
and
add
das
mov
idivb
add
fisubs
lds
adc
lahf
or
xchg
sahf
imul
daa
add
inc
xchg
and
popa
call
xchg
push
push
sbb
jg
sub
movsb
adc
push
xchg
sar
js
faddl
ror
cli
xchg
jp
aam
adc
sbb
ljmp
and
xor
js
iret
mov
cmp
sub
test
dec
add
jl
push
sub
push
or
xor
les
sbb
cli
mov
xor
push
jb
jae
jmp
xor
cmp
mov
faddp
xor
aam
cwtl
mov
lea
in
int3
clc
ljmp
xchg
dec
pause
call
cmpsb
into
out
rorl
jo
dec
call
jnp
pop
cltd
cmpsl
negl
dec
sub
loopne
lcall
outsb
dec
mov
dec
mov
add
jnp
jne
enter
inc
aad
and
movsb
xor
loope
push
aaa
push
mov
loopne
int
xchg
add
fdivr
stos
jbe
stos
adc
xchg
andl
cwtl
pop
pushf
in
in
cmp
push
in
or
cwtl
std
mov
push
mov
mov
pop
or
mov
test
nop
mov
sub
sti
jmp
popf
xor
jbe
stos
dec
mov
jecxz
dec
adc
xor
std
outsl
mov
pop
in
xchg
mov
sub
cmpsb
nop
popf
pop
call
mov
fwait
dec
mov
pusha
mov
cmc
push
xor
sub
jo
inc
mov
ds
stos
push
and
sbb
fnstsw
pop
stos
dec
or
mov
test
xchg
or
jge
icebp
ds
cmp
dec
lds
adc
movsl
es
jmp
popa
scas
adcl
shrb
sbb
lods
dec
jo
adc
xchg
call
out
xchg
out
dec
jnp
pop
lahf
icebp
stc
subl
dec
add
jbe
cwtl
pop
pop
push
adc
movsb
lret
pop
cmp
mov
sub
pushw
mov
sbb
mov
mov
sub
jo
jmp
sti
mov
pop
pusha
out
jo
pop
idivl
mov
and
mov
fwait
push
aaa
ja
fiadds
mov
push
mov
ret
mov
cmpsb
inc
push
or
jns
aam
daa
cmp
dec
andl
push
arpl
fisttpll
push
clc
les
rol
stc
mov
push
nop
movsl
repz
mov
or
inc
call
inc
push
pop
add
mov
movsb
xor
and
int
ret
int3
sbb
enter
fsubs
popf
mov
jns
dec
mov
pop
repnz
or
iret
jp
cmp
in
jnp
mov
cmpsl
sub
cmp
jbe
lret
cmp
ret
xchg
repz
cs
sub
add
pop
mov
out
cmp
call
sti
cmp
and
and
push
mov
mov
adcl
xor
addr16
xlat
nop
cmp
xchg
pop
sub
mov
mov
and
sti
dec
push
dec
pusha
adc
cmc
cmp
lock
sbb
enter
cwtl
jle
hlt
sub
insl
jl
fsub
xchg
popf
cmpsb
adc
xor
rcrb
pop
mov
or
sub
cmpsb
push
adc
mov
call
pop
mov
cs
cmp
inc
pop
add
mov
test
xchg
pop
in
lock
test
icebp
sahf
cwtl
test
cmpsb
fldenv
jecxz
rol
rorl
pop
bound
ficompl
pop
sub
sub
xchg
push
out
enter
inc
lret
xlat
fmull
jbe
jbe
call
out
leave
and
add
xor
or
pushf
dec
push
aad
jo
inc
inc
cs
mov
fstpl
cli
mov
sub
pop
jns
sub
jae
outsl
dec
in
dec
jae
xchg
dec
xchg
shr
jo
fwait
sbbl
shl
das
mov
cmp
sub
add
cmp
or
test
push
cmp
push
out
add
or
shll
fidivs
lods
pop
sbb
lock
mov
orl
stos
mov
sbb
inc
cltd
push
fisubrs
in
xlat
lea
xchg
cmp
rcr
pop
rcl
mov
cmp
cmpsb
lods
insl
data16
dec
stc
mov
ret
xor
cmpsb
mov
mov
popa
aaa
adc
cmc
rol
cmp
in
leave
shr
in
rolb
scas
jns
mov
fs
sub
int
aad
mov
jge
ret
dec
xor
adc
insl
sub
mov
jbe
nop
cmpl
cwtl
popf
fsubrl
sbb
test
fcompl
jge
ret
sbb
js
adc
es
daa
scas
and
popf
or
sbb
add
adc
cmp
lea
jmp
sbb
push
xchg
sub
pop
or
and
movsl
fsubrp
sub
cmp
sub
imul
clc
loopne
shr
cs
push
mov
fstps
lods
pop
test
test
insb
dec
xor
cmpsb
push
rclb
sbb
insb
inc
adc
lds
sbb
lret
inc
adc
pop
mov
loop
mov
and
push
pop
int
fs
sbbl
cmp
push
push
repnz
sbb
or
test
xchg
push
movsb
jmp
jp
dec
out
shll
xchg
movsl
cmpsb
mov
pop
into
adc
inc
outsb
xchg
enter
mov
js
es
sbb
and
shrl
nop
sub
and
lock
xchg
pusha
cmp
and
test
inc
cmpsb
mov
adc
rcl
jmp
call
xchg
fistps
add
xor
dec
pop
gs
push
xor
push
in
lcall
ret
dec
popf
mov
lahf
xchg
push
xchg
sub
mov
sub
fistl
sahf
mov
js
arpl
push
into
sti
jb
fistpl
movsl
xchg
fisubrl
pop
sub
into
sub
lahf
and
xchg
loope
fsubl
outsl
in
clc
xor
frstor
mov
std
mov
mov
fiaddl
add
test
and
das
js
sub
xor
scas
sub
icebp
test
sub
sub
cmp
xor
popf
jnp
mov
ljmp
xchg
loop
fcmovnb
or
lods
popf
and
and
bound
cmpsl
divb
aam
cli
fsubs
lret
das
mov
scas
jecxz
movsb
test
call
pop
aas
loop
shlb
das
cld
test
mov
cwtl
adc
test
and
jmp
cmpsb
sbb
jmp
sub
sub
loop
in
or
jno
int3
push
fiaddl
lcall
loop
fs
cltd
lods
cmpsb
add
shrl
jmp
push
movsl
fsubl
lods
ret
cmpsl
sbbb
out
test
sbb
scas
ljmp
in
call
pusha
popa
sub
mov
pop
cs
pop
or
adc
cltd
ljmp
and
popa
sbb
outsb
jmp
ljmp
and
int3
test
pop
push
and
out
lods
in
jg
insb
mov
es
int3
and
fistl
and
sub
and
and
cmpsb
inc
pop
lret
and
sub
and
shrb
test
ljmp
cld
out
and
popa
into
push
outsb
push
aam
arpl
es
mov
in
sub
int3
insb
mov
in
pop
cmc
xchg
push
sub
jb
scas
fwait
sub
and
imul
and
movsb
sub
and
pusha
aad
sub
mov
loop
sub
inc
dec
xchg
out
pushf
sub
out
imul
jns
mov
jp
shrl
mov
in
pop
stos
in
and
cmpsb
fwait
sub
and
popf
jmp
or
xchg
push
das
data16
inc
mov
shlb
push
cmpl
push
jmp
cmp
test
cmp
cmp
cmpsb
pop
mov
xchg
leave
sbb
and
mov
dec
sar
ds
xchg
push
loope
sub
push
xchg
xchg
xlat
popf
sbb
js
fmuls
sbb
lahf
sarb
pop
rcll
xchg
xor
mov
lret
cmpsl
sbb
sub
jp
pop
and
hlt
sub
out
insb
pop
add
sbb
adc
lds
push
stos
xchg
mov
xchg
cs
insl
dec
sbb
out
or
cmp
repnz
pop
into
pop
sub
aaa
test
insb
lcall
cmpsb
mov
push
les
or
or
push
dec
xor
shll
push
xchg
daa
out
repnz
pop
mov
paddb
lds
ret
in
ret
mov
sti
andb
sub
add
pushf
or
mov
test
cltd
cmpsb
adcl
cmp
scas
daa
sub
rdpmc
add
adc
cs
clc
std
scas
push
sbb
call
cmpsb
cmpsb
mov
aaa
out
dec
rcr
or
push
scas
cmp
sub
popa
xor
scas
push
inc
add
cli
insl
mov
cmc
jb
sbb
rol
add
sub
scas
adc
pop
push
cmp
enter
pop
xor
shrb
push
jo
cmpsb
pop
loope
shrb
inc
add
call
movsb
addr16
loop
sbb
cmp
loop
inc
xchg
fsubs
bound
dec
pop
lcall
xchg
pop
gs
inc
movsb
in
mov
add
sbb
sbbb
mov
movsl
xor
add
push
fcoms
jno
and
sub
add
out
inc
hlt
out
sub
bound
das
inc
or
jg
and
mov
ljmp
imul
mov
dec
ss
push
movsl
sbb
mov
outsl
xchg
sbb
lock
xchg
das
inc
push
mov
outsl
jge
scas
mov
shll
push
cmp
imul
jae
mov
xorl
out
lods
addr16
adc
mov
stos
cmc
adc
adc
or
push
popa
aas
idivl
sbb
add
mov
adcb
jo
gs
clc
xchg
scas
insb
pushf
xchg
in
or
outsb
rcrl
test
or
pushf
gs
xchg
xchg
or
fcomp
mov
jne
mov
in
test
pop
jbe
xchg
bound
loopne
aam
insl
push
movsl
xchg
scas
ja
adc
icebp
and
lods
or
sub
or
push
jg
pop
xor
adc
scas
enter
lcall
sbb
pop
xchg
shlb
movsl
lods
jge
loopne
inc
ret
add
scas
or
stc
in
popa
or
dec
repz
popf
in
mov
gs
xlat
fs
movsb
lahf
test
in
adc
cmp
sub
sub
leave
loopne
pop
out
cmp
mov
mov
ja
rcl
fs
add
push
cld
movsb
cmp
inc
sub
jns
inc
xor
int
in
inc
sub
sbbl
add
mov
cld
stos
dec
test
mov
and
lds
jg
sbb
add
dec
aaa
dec
shlb
scas
mov
cmp
sub
dec
jae
stc
xlat
mov
lods
pop
and
cmpsl
test
mov
xchg
or
lahf
mov
xchg
and
pop
and
cmpsb
fistl
mov
lea
pop
cmp
sub
adc
mov
icebp
scas
cs
xchg
cli
sub
mov
mov
cmp
call
dec
aam
popa
mov
pop
lcall
ret
div
call
mov
cmp
out
ret
inc
pop
gs
call
ss
shll
in
cmpsb
mov
push
scas
add
xlat
daa
fcmovb
mov
mov
std
cmc
push
mov
jb
add
jge
ja
lret
lock
cmpsb
adcb
xchg
cmp
das
sub
xchg
int3
push
pop
xor
or
xchg
test
sub
cmp
sub
sub
ja
fsubs
push
mov
cmp
in
subb
das
out
mov
repz
push
lock
add
dec
jmp
sbb
call
fs
cmpsb
or
vsubpd
movups
je
stos
mov
sub
lret
cwtl
lcall
arpl
or
movsl
cwtl
stos
push
and
add
jg
enter
push
push
cmp
and
or
push
xchg
mov
aad
sti
mov
jae
insl
test
cmpsb
mov
es
dec
fmul
out
xchg
mov
les
shrl
pop
ret
cmp
test
sti
enter
fisubrs
pop
cmpsb
fdivrl
jb
sub
lcall
gs
loop
mov
xchg
popf
repz
push
stos
add
sub
js
cmpsl
iret
sbb
shrb
stos
add
out
mov
es
fwait
js
loopne
mov
dec
test
push
jnp
ja
insl
aam
ror
in
scas
cmp
xchg
pushf
push
jp
js
test
insl
jo
xor
sarl
in
xor
hlt
shll
sahf
test
push
int3
out
adc
aad
int3
int
fstpl
sar
nop
mov
sub
dec
int
sti
mov
in
xlat
mov
cmp
ljmp
adc
int3
push
lret
mov
in
js
ret
mov
lret
pop
movsb
jge
xor
cmp
cmpsb
dec
mov
inc
xchg
cmpsb
push
loopne
call
jne
sub
into
in
aam
fiadds
test
mov
hlt
call
mov
ss
std
sub
adc
inc
fimull
adc
inc
mov
xchg
das
xchg
cmpsb
mov
mov
jl
or
cs
cmc
xchg
js
popa
aas
rcrl
xor
mov
in
jne
les
cmc
loop
popf
push
pop
sub
xor
adc
inc
lahf
xor
mov
cmp
rcrb
pop
xchg
mov
into
jmp
popf
out
shl
push
lgs
stc
xchg
adc
cwtl
xor
mov
js
push
lods
in
popa
popf
mov
push
inc
sbb
sub
pop
movsl
push
mov
mov
push
xchg
test
fstpl
inc
aad
push
mov
lock
xor
adc
fistl
adc
rclb
adc
or
cld
enter
xchg
jo
dec
sub
mov
push
jbe
push
sub
fstl
popa
jle
mov
dec
movsb
xchg
mov
lods
and
cmpsb
ret
cmp
shlb
scas
aas
in
sbb
ficompl
dec
xchg
or
pop
lods
mov
outsl
pop
sub
mov
into
jmp
jmp
mov
xor
insl
fsts
sbb
push
scas
cmp
xor
push
pop
ficoms
std
ja
xlat
sbb
sbb
push
and
fstps
jge
xorb
rolb
pop
cmp
js
shr
ficomps
cmp
inc
adc
or
aam
shll
push
xchg
in
arpl
pop
movsb
and
mov
mov
add
shll
jle
cmp
lcall
inc
test
jne
and
sarb
push
mov
add
loope
jp
sbb
add
aaa
push
cs
decb
orl
or
fldt
mov
inc
and
push
xchg
or
jle
das
aam
scas
dec
lret
add
scas
les
add
dec
imul
mov
pop
aam
push
das
call
gs
mov
mov
adc
xlat
dec
sar
adc
dec
xchg
inc
jo
dec
push
lahf
jo
and
lcall
pusha
ljmp
xchg
adc
mov
push
adc
clc
cmpsl
xchg
and
lock
cmpsb
mov
enter
fsubs
mov
test
adc
popf
mov
movsl
call
or
sub
xchg
dec
mov
clc
sbb
inc
cmpsl
cmpsb
lcall
rcrl
fmull
fsubrs
test
add
aam
out
dec
imul
fnsave
popa
cmp
shrl
fimuls
das
xchg
push
std
scas
sbb
adc
mov
pop
gs
sbb
dec
clc
pop
cmpsb
push
sub
leave
popa
mov
movntps
lods
push
cmp
data16
mov
xor
mov
inc
mov
mov
sub
scas
inc
in
or
mov
sbb
out
mov
divl
aad
into
inc
pop
fisubl
cmpsb
push
inc
pop
mov
dec
inc
sbb
push
adc
les
fimuls
mov
sbb
jp
push
cwtl
test
jge
xor
imul
xor
or
leave
lcall
jp
sarl
orl
push
out
dec
jl
mov
enter
rcr
and
out
enter
lcall
daa
jo
sub
or
mov
aad
popf
sub
jbe
cmpsb
adc
jae
test
rclb
sub
ja
andb
je
scas
jnp
dec
insl
dec
into
add
add
pop
mov
test
sub
mov
add
pop
mov
xchg
fcoms
dec
push
xor
mov
into
xchg
push
sub
std
cmpsl
movsb
test
cmp
loopne
insl
stc
stos
ljmp
loope
fwait
or
and
inc
or
mov
in
adc
pop
hlt
fnstenv
jl
lods
outsl
pop
inc
mov
mov
mov
in
sbb
xchg
ja
and
scas
out
nopl
jae
shr
mov
jne
sub
mov
mov
cmpsb
stos
xor
gs
pop
in
push
mov
push
adc
outsl
ss
sbb
loope
inc
mov
inc
pusha
add
mov
gs
mov
inc
dec
sub
in
iret
les
push
adc
xchg
cmp
cmpsl
dec
jo
popa
bound
pop
sub
jl
negl
hlt
pop
insb
int
pop
out
inc
adc
pop
lret
xabort
inc
mov
out
cmp
and
data16
or
mov
cmpsb
lods
or
push
movsb
lds
xor
mov
loopne
cmp
fsts
imul
push
mov
lods
shlb
int3
andb
stc
mov
stos
jo
jae
cmp
xor
xchg
mov
xchg
mov
int3
pop
test
jae
stc
sbb
mov
stos
movsl
pop
adc
cmpsb
icebp
shr
fcomi
mov
dec
pop
cmp
pop
test
inc
sub
ljmp
fidivl
xchg
sub
outsb
test
gs
loop
push
sbb
movsb
mov
xchg
sahf
test
cmp
mov
mov
scas
xchg
mov
and
shll
insl
mov
pushf
nop
pop
inc
repz
leave
fisttpll
pop
pop
dec
and
psllw
sub
xor
mov
lret
and
roll
inc
inc
xor
loope
stos
xchg
sahf
pop
mov
popw
adc
adc
out
iret
cmp
fidivrl
scas
jo
cli
and
iret
cmc
jecxz
test
inc
andb
aam
push
sub
or
lret
call
and
mov
mov
in
mov
mov
xabort
cmpsl
pop
js
sbb
movsl
push
cmpsb
std
cmpsl
mov
dec
xchg
and
in
push
js
and
cwtl
sti
add
in
jecxz
popa
enter
js
inc
fstpt
cli
mov
cmpsb
cmp
fwait
push
dec
mov
push
inc
push
fdivrs
dec
adc
cli
xor
bound
cwtl
scas
push
lods
and
xor
sub
out
jge
jmp
bound
xchg
movsl
sub
cli
lock
aad
xchg
jp
pop
int
out
das
in
xor
lds
stc
sub
jmp
scas
lds
stos
xor
aas
jbe
in
xchg
xor
sbb
repnz
push
dec
sub
dec
lods
orl
jle
out
lcall
nop
push
stc
cmpsb
sti
sub
mov
ret
outsb
stc
sub
ljmp
sbb
rcl
jo
nop
leave
das
pop
xorl
push
xorl
pop
sarb
mov
inc
pop
les
aaa
pop
mov
bound
lea
mov
js
push
popf
pop
sub
andl
inc
xchg
xor
or
pop
mov
sbb
std
in
rcrl
repz
iret
add
mov
cmp
mov
pusha
sbb
sub
pop
loop
mov
icebp
das
ret
mov
xchg
dec
push
pop
enter
repz
push
xchg
mov
sti
push
data16
das
mov
pop
insl
sub
sbb
cmp
mov
out
xchg
sub
stos
adc
mov
lret
mov
fs
jge
xchg
out
stos
adc
inc
imul
push
inc
ss
inc
test
and
addr16
xchg
dec
nop
adc
mov
loopne
add
scas
lret
or
in
out
dec
subl
vpsubw
mov
push
mov
popa
jno
inc
xorl
sti
std
or
test
sbb
ja
jb
fsubl
pushf
xor
sarl
jecxz
pop
xchg
iret
mov
loopne
popa
adc
lret
stos
fnstcw
test
aaa
push
pop
mov
imul
shll
js
sbb
je
push
mov
test
push
xchg
subl
fs
sbb
out
sbb
jmp
add
jecxz
loop
ffree
icebp
scas
popf
or
fdivrs
sub
push
sub
push
mov
cmp
jnp
jb
shr
clc
pop
and
push
movsb
call
push
mov
xchg
cld
xchg
imul
dec
shlb
jmp
shll
xchg
cld
pop
push
roll
dec
jmp
mov
cmpsb
aas
pop
push
andl
shrl
gs
nop
ret
fstpl
sbbb
in
push
dec
cs
add
jb
xor
icebp
int
pop
or
push
popf
movsb
mov
cmp
pop
sbb
push
sub
jecxz
sbb
push
xchg
xor
stc
call
pop
sub
mov
dec
lock
insl
int
mov
rclb
aam
xchg
xor
xchg
fnstcw
inc
xchg
repnz
xchg
mov
bound
mov
cmp
daa
jmp
push
pop
mov
xor
movsb
mov
add
bound
movsl
bound
jge
arpl
leave
push
jb
ret
sub
inc
cmp
insb
xchg
mov
xchg
in
pop
pop
xor
dec
into
add
stc
lods
adc
jbe
cmp
outsb
inc
and
inc
daa
iret
scas
jl
jp
outsb
or
xor
push
scas
or
outsl
pop
fidivs
and
xchg
jmp
js
inc
push
mov
mov
pop
lods
test
out
sbb
xor
arpl
int3
add
ss
pop
adc
pop
movsb
cmpsb
insl
scas
ss
cmp
leave
mov
lods
test
int3
push
push
inc
mov
jns
imul
lret
movb
dec
icebp
popa
arpl
in
xchg
pop
sahf
popf
mov
cmp
call
push
pop
dec
jns
xchg
sub
inc
out
add
jp
hlt
sub
lods
pop
arpl
shrl
in
xchg
sbb
lods
jge
push
loopne
arpl
xchg
insl
movsb
cmp
dec
jbe
rcrb
jbe
sbb
jb
lock
cmc
pop
fprem
jne
and
enter
outsl
mov
xchg
pop
mov
cwtl
mov
adc
test
clc
rclb
ljmp
add
or
lds
inc
xor
xor
jns
sbb
clc
in
xchg
mov
data16
sub
pop
pop
xchg
sub
lds
data16
or
arpl
mov
push
gs
aam
cmc
sbb
clc
push
test
ret
dec
out
xchg
scas
loope
je
push
scas
adcb
imul
test
cmp
sub
leave
cmpsb
xchg
in
mov
aas
std
cmp
and
pop
je
and
pop
mov
in
cmc
push
add
push
lds
pop
popa
ds
in
scas
cmp
mov
xor
add
jle
pop
sub
enter
inc
pop
hlt
in
pop
shrb
push
cmpsl
push
sub
out
mov
inc
dec
icebp
dec
adc
ss
stos
hlt
and
leave
test
cmpsb
sti
pop
and
push
mov
mov
test
or
mov
sub
push
pop
jns
xchg
push
adc
rcrl
and
adc
xchg
outsb
dec
fdiv
cmpsb
scas
add
mov
aad
icebp
iret
daa
das
test
out
xor
sbb
sub
gs
push
cmp
scas
adc
mov
xchg
adc
mov
push
xchg
cmc
mov
pop
and
jo
mov
xor
lds
or
mov
popa
push
push
adc
pop
ret
test
mov
jmp
in
das
loopne
pop
xchg
popa
push
xchg
xlat
pop
icebp
into
fcmovb
push
xchg
cwtl
cwtl
mov
lds
sub
fidivs
repnz
shrb
ret
hlt
adc
mov
mov
lods
in
pop
cld
adc
lds
scas
mov
lcall
and
scas
pop
cwtl
sub
or
popa
xor
xor
inc
push
add
cmpsl
push
xchg
jge
mov
mov
and
in
xchg
out
xchg
mov
jle
rcrl
repnz
push
repnz
push
jge
jmp
dec
aas
leave
enter
mov
or
xchg
xor
mov
in
jmp
sub
int
test
leave
insl
aaa
test
ja
in
into
pop
or
inc
scas
in
pop
aas
rclb
inc
iret
mov
outsl
arpl
push
int
lods
sub
inc
pop
add
scas
mov
jb
cmpl
mov
lea
sbb
inc
fcmovnu
xchg
in
dec
lret
pop
sub
in
scas
sub
data16
sub
add
mov
aaa
sub
lcall
es
lods
mov
leave
jnp
sbb
fcoml
jae
jecxz
cwtl
cmpsl
lahf
in
jmp
in
mov
aam
or
in
outsb
lock
pop
jg
in
rcr
mov
loopne
sub
add
jbe
movsl
mov
mov
icebp
dec
jns
arpl
inc
or
addr16
push
das
pop
ds
rolw
adc
stc
xchg
or
add
push
sub
pop
lds
push
cmpsb
movb
xlat
adc
mov
push
add
jae
addr16
push
push
lea
mov
lcall
orps
sub
xchg
xchg
and
pop
sbb
adc
xchg
ss
xchg
movsl
ljmp
adc
int3
mov
insb
xchg
enter
and
cmpsb
call
mov
inc
add
ljmp
pop
push
inc
enter
and
xchg
out
cmpsb
fdiv
je
jp
or
and
ljmp
cli
popf
dec
cmpsb
loopne
lahf
pop
sbb
adc
xchg
pop
xchg
mov
and
fwait
mov
xchg
xchg
mov
sub
addr16
or
addl
push
mov
push
imul
aad
inc
or
das
cmp
std
add
sbb
setns
les
pushf
sahf
ror
xlat
fimull
daa
lcall
sarl
lcall
push
pop
arpl
cmp
scas
pop
jae
insl
je
fsubrs
push
and
aam
push
subl
sub
les
int
or
xorl
imul
adc
jae
pop
inc
jbe
lods
push
dec
push
popf
lds
mov
cmpsb
les
scas
and
call
pop
popa
cmp
pop
in
call
notl
call
ja
jecxz
js
add
mov
into
or
xchg
lret
cld
jmp
xor
xor
aam
lahf
adc
mov
test
xchg
les
in
fcoms
and
pop
or
push
fidivrl
les
and
popa
xchg
sub
cmpsb
dec
jl
pop
or
out
or
fdiv
sahf
push
pop
cld
and
ljmp
sub
adc
jmp
out
mov
leave
xorps
sub
sub
adc
rolb
mov
negl
loop
test
sub
incb
shrb
out
push
pusha
sub
mov
pop
pop
xbegin
aam
xchg
movsl
cmpsb
fistpl
mov
xchg
test
movsb
out
push
sbb
xchg
cmp
jl
mov
jne
pop
in
outsl
out
jo
mov
adc
push
outsb
test
sub
dec
lcall
add
loopne
cmpsb
cmovo
std
adc
subb
fndisi(8087
negl
mov
push
pop
aas
ret
outsb
test
push
sti
js
std
inc
or
int3
jecxz,pt
popa
lret
jbe
jmp
popa
jae
pop
lock
push
icebp
imul
or
mov
insb
fs
ds
sub
mov
rcrl
insb
cmp
bswap
cwtl
inc
mov
jecxz
repnz
mov
imul
movsb
scas
loopne
aad
push
testl
push
jge
xchg
popa
xor
aam
cli
inc
or
mov
mov
pusha
daa
scas
jae
ds
sub
jl
int3
push
xlat
push
lahf
push
jmp
push
jbe
cmp
in
and
xor
loop
sub
stc
mov
push
lahf
int3
adc
in
ss
cld
pop
lahf
pushf
lcall
in
shrb
scas
loope
sub
dec
sub
lock
outsl
xor
std
in
subb
arpl
add
int
es
dec
movsl
sarl
xor
pop
push
or
int
cmpsb
iret
ss
int3
adc
cwtl
adc
cs
mov
lods
xchg
clc
mov
aam
xchg
leave
mov
aas
inc
mov
push
sbb
aam
aaa
into
dec
fnstcw
or
xchg
xor
mov
add
or
pop
js
in
scas
aas
adc
fisubs
shr
arpl
push
les
bound
popf
mov
cmp
int
adc
std
fs
hlt
mov
pop
insb
sub
cmpb
mov
rcrb
fiaddl
cmp
xlat
leave
pop
inc
repnz
jge
lret
mov
push
hlt
iret
out
movsb
lods
lcall
std
mov
imull
lock
sbb
pop
dec
and
mov
scas
or
pop
call
cmp
jge
mov
stos
sub
xchg
mov
xor
xor
and
loopne
addr16
dec
and
cmpsb
mov
pop
negb
shlb
popf
scas
push
fmulp
xchg
sysexit
pusha
repnz
movb
cs
insb
hlt
pop
stc
ss
fwait
mov
jecxz
scas
hlt
out
mov
adc
push
or
push
daa
mov
jne
xlat
inc
mov
stos
push
xchg
pop
mov
mov
filds
inc
in
adcb
pop
imul
push
cmpsb
mov
jo
adc
insl
loope
movzbl
int3
inc
aad
adc
lds
fcoms
jae
std
lret
std
outsb
cmpsl
stc
imulb
pop
jbe
lret
dec
push
fwait
jge
jae,pn
and
jbe
push
lods
inc
xchg
rolb
mov
dec
cltd
sbb
enter
cmpsb
ss
addr16
xor
pop
mov
inc
or
xchg
xchg
out
pop
jp
std
andl
push
dec
xchg
pop
int
movsb
shll
fimull
xchg
stos
or
lcall
fisttpll
push
fldenv
lods
inc
leave
mov
fs
lret
stos
in
sbb
leave
mov
test
cld
or
divl
adc
pop
sbb
arpl
loope
push
xor
sub
mov
adc
push
adcl
fisttps
pusha
jnp
in
lods
mov
lods
sub
ljmp
mov
fldcw
mov
push
push
mov
push
dec
xor
push
fstl
xchg
inc
dec
jb
xchg
movsl
or
insb
xchg
les
rolb
test
lahf
jge
shr
push
stos
into
push
mov
repnz
inc
stc
mov
out
xor
jnp
xchg
jp
inc
addr16
jae
notb
mov
inc
in
sbb
and
or
xchg
rcll
mov
and
shlb
xchg
dec
xchg
jnp
or
lahf
roll
cltd
dec
jge
xlat
add
xor
mov
mov
addr16
daa
jae
mov
roll
pop
mov
adc
in
pop
xchg
mov
jl
jecxz
mov
and
cmpsb
cwtl
sahf
mov
push
mov
repnz
scas
push
sahf
cmp
movsl
test
hlt
xchg
mov
and
out
push
jae
aas
mov
ret
push
pop
dec
lock
sahf
dec
xchg
sbb
xor
and
lret
sub
xlat
loopne
cmpsb
mov
arpl
sub
push
push
fisubrs
fistl
mov
fs
in
sbb
call
call
pop
and
adc
popf
pop
fdivr
or
cmp
insl
fsubrs
in
push
jnp
lcall
mov
loop
push
xchg
fsubl
fisttps
insl
jae
les
xchg
jne
mov
js
pop
in
and
cmpsl
imul
das
cmp
aam
popa
call
stos
adc
sti
dec
cmp
sub
rol
sub
gs
cmpsw
fwait
push
in
scas
xchg
fnstcw
jmp
pop
xchg
cmp
test
push
push
cmc
cs
mov
push
cmp
xor
cmp
adc
mov
fldl
or
cmpsl
mov
push
mov
cwtl
push
sbb
aam
mov
jg
jmp
nop
xlat
lods
cwtl
xchg
ficomps
aaa
inc
and
push
sbb
rcll
sub
cmp
fimuls
fbld
iret
sub
mov
pop
shll
out
xor
xchg
mov
in
int
ljmp
clc
or
mov
mov
mov
xor
imul
call
inc
nop
jl
std
mov
loopne
pop
cmc
loopne
das
pop
adc
jnp
out
pusha
mov
fisttpll
ret
and
xor
les
stc
lods
cmc
mov
into
lret
xchg
mov
pop
and
stos
inc
mov
mov
mov
orb
inc
enter
je
add
jne
and
dec
cmpsl
inc
mov
pop
push
mov
ss
inc
push
sub
imull
outsb
int3
das
inc
push
mov
push
out
cmpl
xchg
mov
cwtl
out
cmpsb
sub
cmpsl
filds
xor
shr
inc
loop
inc
into
in
sbb
adc
fildll
mov
mov
stos
out
stos
or
negb
push
lea
in
inc
and
inc
sbb
mov
push
out
andb
adc
fdivs
test
scas
pop
das
push
dec
ss
out
aaa
xchg
and
int
add
and
sub
mov
xchg
push
movsl
lret
data16
cwtl
jp
push
dec
ret
jecxz
mov
push
loopne
je
test
inc
out
pop
mov
mov
pop
fnstcw
leave
sbb
cmpsb
add
mov
lahf
pop
aam
insb
cli
sbb
xchg
test
adc
stc
ret
jl
jae
or
mov
or
or
and
popa
xor
push
mov
loop
add
or
sbb
jmp
adc
push
das
or
sub
add
jle
cmp
pop
ja
fdivs
sub
pop
xchg
das
scas
rcll
sub
mov
test
scas
sub
imul
jnp
mov
adc
aad
cwtl
sub
mov
pop
xchg
loopne
push
fdivs
cmpsb
mov
sub
das
into
xor
xchg
lea
inc
int3
mov
test
xchg
push
leave
loop
inc
lods
enter
repz
xchg
sbb
xor
js
adc
aam
cmpsb
cmp
jo
ret
sub
rorl
mov
xchg
icebp
add
inc
in
stc
test
jl
sub
loopne
stc
into
sub
dec
mov
and
aad
xchg
cmc
sbb
mov
mov
jno
popa
lahf
cmpsb
sbb
xchg
xchg
icebp
xchg
aaa
test
push
scas
push
cmp
hlt
rolb
pop
and
lret
sub
call
add
lock
test
jl
test
mulb
scas
sbb
test
and
sbb
adc
and
bound
nop
cs
push
jb
shll
aas
in
pop
cmpsb
out
lret
fs
push
mov
pop
mov
les
and
push
sub
mov
jmp
xchg
adc
pop
popf
adc
xchg
sub
leave
icebp
pop
pop
scas
adc
jl
push
and
cmp
add
and
mov
into
arpl
or
add
or
dec
jo
jbe
mov
xor
sub
jo
xchg
shrb
mov
cmp
push
inc
sbb
add
inc
push
nop
cmpsl
cmc
and
jae
sbb
rolb
xchg
xchg
out
push
lahf
dec
lret
rcll
imul
je
fcomps
mov
ljmp
push
dec
out
sub
jmp
out
call
push
stc
pop
xchg
push
mov
mov
dec
aad
xchg
out
xchg
cmc
sub
into
cli
pop
inc
stos
addr16
das
pop
popf
push
call
pop
mov
fidivrs
outsl
movsb
lcall
fucomp
ss
test
xchg
sub
mov
das
sub
rolb
add
in
cmp
or
add
cmp
pop
jae
cli
or
mov
stc
sub
cmp
jbe
test
hlt
aaa
fwait
jp
stos
xchg
jg
icebp
cmp
fdivrl
daa
das
in
stos
cmpsb
imul
xor
daa
fld1
pop
andb
xor
mov
scas
jns
and
jecxz
out
jnp
lods
mov
scas
xor
inc
mov
jo
pop
cmc
mov
loopne
repnz
or
rolb
sub
add
xchg
xchg
out
jnp
pop
mov
pop
stos
cmpsl
imul
xchg
xchg
ja
es
testb
mov
popa
pop
xchg
adc
or
jno
xor
jnp
cmp
push
jbe
inc
pop
xchg
add
cmp
aas
add
sub
sub
mov
mov
fisubl
aad
pop
sbb
in
icebp
xchg
xor
jo
out
pop
push
push
jmp
or
sub
in
push
push
adc
enter
hlt
cmc
inc
mov
addr16
mov
adc
push
pop
and
cwtl
aaa
pop
mov
lods
lahf
mov
jecxz
leave
mov
leave
mov
jbe
xchg
andl
xor
data16
addr16
xor
and
fcoml
aam
pop
jb
push
bound
aad
sbb
sbb
push
sbb
push
mov
out
ljmp
fucomp
mov
cmpsl
mull
insb
call
out
cmpsb
stos
mov
push
icebp
push
test
ss
xchg
lahf
mov
popa
sub
fs
lea
cmp
shl
and
sub
mov
inc
pusha
mov
push
or
push
or
pop
add
das
or
in
cwtl
add
out
test
mull
insb
and
popf
pop
pop
dec
ds
scas
adc
addr16
sbb
leave
stos
jge
test
dec
mov
jno
xor
mov
test
sub
jne
addr16
sbbl
jns
mov
clc
push
dec
mov
push
int3
sub
ret
fisubl
sub
lahf
xchg
sub
ds
dec
xchg
ret
mov
pop
mov
popl
pop
inc
cli
fimull
int3
jae
push
rorb
mov
push
stc
js
mov
lcall
jno
popa
mov
mov
sub
outsb
adc
add
icebp
and
sbb
inc
enter
pop
imul
jns
pop
out
xor
adc
out
iret
sbb
add
inc
or
add
mov
xchg
nop
mov
int
ja
push
daa
mov
mov
cmp
mov
stc
mov
sarl
xor
jne
dec
cmp
mov
mov
push
clc
mov
jecxz
mov
addr16
pop
xor
andb
cmp
into
xor
jmp
sbb
jae
dec
mov
cmp
in
mov
add
jl
cmc
jecxz
lods
fdivs
lahf
mov
and
movsl
pop
mov
inc
aaa
xlat
out
fsub
cmp
sub
cmp
arpl
sub
leave
dec
mov
das
inc
xchg
push
int
insb
and
pop
mov
sbb
movsl
fs
and
int3
xchg
daa
roll
jmp
out
push
test
subb
rcrl
ds
outsb
lret
repnz
and
and
adc
mov
out
add
out
add
xor
inc
dec
stos
xchg
jb
daa
add
fnsave
jb
cmp
mov
test
call
movsb
in
jns
test
push
sarl
dec
jae
sbb
pop
notl
mov
fsubrs
in
xor
jnp
roll
ret
ljmp
fidivs
dec
sub
shlb
ds
test
pop
fs
pop
fldcw
jb
clc
movsb
add
dec
scas
lcall
mov
mov
test
mov
mov
adc
cmpb
push
ret
mov
fnsave
lcall
or
fsubs
ja
mov
std
subb
lods
jns
sbb
pop
addr16
sbb
push
jmp
mov
pop
push
sbb
pop
sti
fs
imul
xor
insb
mov
jecxz
je,pn
hlt
test
mov
pop
mov
sarb
dec
push
daa
jp
sub
lret
stos
push
das
jb
mov
leave
subb
fildll
mov
daa
js
lea
daa
push
scas
out
xchg
pop
sub
mov
mov
adc
popf
xchg
and
push
nop
leave
mov
fwait
lock
adc
xchg
roll
pop
mov
fwait
lcall
lcall
lret
pop
insl
xchg
ljmp
shlb
xor
sub
repnz
sbb
jge
dec
pop
sti
das
lcall
mov
hlt
push
mov
nop
clc
xor
pop
psubb
daa
lcall
jns
rolb
and
daa
mov
dec
mov
ja
mov
ljmp
cld
fsubrs
outsb
lods
jp
jo
mov
cmp
pop
jbe,pt
push
subb
mov
push
pusha
stc
push
call
adc
sbb
testl
fisubrl
cmp
in
jmp
cmp
lock
push
clc
cmp
adc
ja
pop
outsb
or
aad
sbb
xlat
xor
lahf
pop
mov
xchg
gs
add
fmuls
or
push
push
inc
mov
popf
xor
cwtl
rorl
add
ja
and
pop
push
movsb
and
pusha
in
inc
outsl
enter
scas
dec
jns
push
nop
mov
add
and
xchg
mov
fsubrs
or
arpl
xlat
out
mov
pop
movsl
sbb
in
aad
pop
leave
out
or
inc
cmpsb
and
ds
mov
and
and
xchg
jnp
lcall
ret
mov
mov
mov
dec
and
sub
jnp
xor
mov
cmp
jge
test
and
sahf
push
jecxz
out
mov
cmpb
outsb
mov
popa
dec
adc
scas
sbb
hlt
movsb
pop
ds
lods
sub
sub
or
sub
cmp
jge
push
fcmovbe
shrb
cmp
jns
or
cs
add
pop
mov
sbb
mov
sbb
mov
out
es
in
ret
pop
clc
iret
add
fcomps
lds
scas
test
sub
xor
jb
clc
pop
ss
adc
ljmp
stos
jge
dec
dec
dec
and
mov
or
sub
enter
or
mov
adc
mov
out
lods
in
loopne
movsl
jecxz
cwtl
fsubl
cmp
sub
stc
leave
push
sub
pop
clc
insb
push
xchg
mov
jmp
decl
lahf
and
mov
adc
xchg
mov
xchg
push
orb
xchg
arpl
or
lcall
sub
insb
jae
jns
adc
movsb
cltd
rep
cmp
dec
ds
fstpt
aad
xchg
adc
jns
pop
add
aaa
mov
xchg
in
sub
jno
cli
inc
loop
lods
data16
or
mov
mov
das
sub
hlt
mov
mov
push
sbb
jb
in
fs
stc
pushf
enter
nop
or
das
rcll
andl
mov
mov
stc
icebp
das
test
mov
jae
clc
xchg
and
cmp
xchg
mov
movsl
sub
insb
push
sti
jno
inc
xorb
daa
in
xchg
ret
test
sub
mov
jg
jns
jl
mov
sbb
or
mov
mov
pop
mov
cmp
cltd
fdivrs
add
fnstcw
in
lods
jmp
sbb
inc
jnp
rol
add
jae
and
fimuls
addr16
and
and
movsb
or
test
movsl
sarb
fsubr
pusha
cld
pop
shlb
aaa
ds
loope
call
jge
sbb
fadd
in
xor
les
into
aam
adc
push
stc
push
int3
jb
sarb
mov
in
add
call
mov
repz
movsl
mov
cltd
test
jge
iret
mov
insb
repz
popa
and
xor
sbb
lock
mov
cmpsl
xchg
xchg
imul
sub
roll
lret
mov
mov
adc
fcomps
and
addr16
sub
inc
fucomip
test
pop
test
stc
adc
ljmp
in
and
cwtl
movd
jno
stc
addr16
mov
push
or
fadds
cmpsl
in
aad
inc
in
fsubs
dec
jmp
xchg
mov
pop
ja
aas
xchg
cmp
daa
push
adc
fadds
into
jns
pop
push
ret
pop
es
inc
iret
in
mov
xor
test
fbld
cmc
pop
stc
addr16
orb
lret
xor
jno
lret
ljmp
cmpsl
scas
ret
shr
fists
inc
inc
js
mov
and
test
mov
mov
jl
sub
fdivrl
jns
lret
pop
stc
and
dec
pop
jns
push
addb
pop
mov
or
ljmp
mov
fsubrs
dec
fdivr
addr16
mov
arpl
dec
inc
mov
pop
enter
mov
mov
pop
lock
hlt
test
stc
mov
cmpsb
xchg
dec
test
rclb
lahf
and
fldz
imul
pusha
sahf
xchg
and
cwtl
lret
fptan
ret
pop
in
sbbb
arpl
inc
xchg
fisubs
mov
or
js
cmp
xchg
aaa
mov
pop
and
sub
fdivs
mov
mov
imul
leave
inc
cwtl
jle
fidivl
adc
leave
popa
hlt
sbb
stos
mov
mov
out
leave
mov
push
adcl
scas
inc
xchg
dec
and
stos
in
dec
cwtl
jne
adc
cli
cmp
sub
add
or
enter
pop
or
loope
sub
mov
testl
ss
jbe
push
cmpsl
mov
leave
scas
sbb
aaa
pop
xchg
popa
loopne
aam
cmpl
repz
jne
addr16
test
pop
add
or
cli
inc
shlb
fs
jne
loope
pop
int3
mov
movsl
xchg
ljmp
jg
cmpsl
nop
shll
jge
leave
pop
pop
xchg
pop
adc
pop
push
pop
mov
and
jmp
outsb
sub
fdivl
lods
int
fldl
arpl
das
xchg
cmc
imul
and
push
xlat
fistpl
scas
pop
stos
add
xchg
movsb
lcall
mov
leave
sub
dec
das
inc
ja
movsb
jns
xchg
jns
movsb
addr16
cmp
ss
inc
adc
or
push
jae
aas
cmp
cs
mov
movsl
mov
or
in
ja
call
jnp
aaa
jae
xor
stos
cmp
mov
lock
pop
mov
test
scas
cmpl
push
jno
adc
push
sbb
pop
xchg
nopl
cmp
cmpsl
mov
into
ss
jnp
mull
mov
arpl
xchg
add
pop
dec
lea
sub
and
jge
and
lods
outsl
xchg
lds
sbb
ja
pop
test
jns
imull
in
lret
fisttps
sub
fcompl
ja
push
dec
cmc
cmp
fdivrs
xchg
repz
jmp
mov
scas
bound
dec
or
out
int
xor
push
cmp
arpl
push
mov
sub
aas
jne
pop
sbb
xor
ud2
and
stos
add
arpl
pop
imul
jle
popa
jnp
inc
and
cmp
mov
xor
cmp
data16
jno
mov
inc
and
addr16
jmp
aaa
les
out
imul
xchg
or
pop
and
lcall
aas
fsubr
push
lcall
dec
dec
mov
cmpsl
or
pop
stc
dec
lret
outsb
mov
and
xor
pop
lods
clc
addr16
sub
fiadds
rolb
and
ljmp
lods
lock
sbb
mov
pop
inc
test
xor
jae
push
gs
test
push
mov
int
aas
jge
mov
cmp
cmp
lea
jns
adc
or
and
jmp
stc
test
adc
sub
sub
fucomi
adc
xchg
ss
pop
push
lock
jns
lret
les
aam
add
add
daa
nop
ja
sbb
movsb
sti
dec
out
inc
push
stc
push
enter
or
jno
mov
daa
lcall
jnp
mov
rorl
jbe
xor
loopne
fisubrs
adc
lret
xchg
sub
bound
stc
mov
daa
inc
xchg
push
mov
bnd
scas
mov
dec
mov
mov
mov
mov
or
mov
daa
les
mov
lods
in
cmpsl
jnp
inc
pop
push
and
pop
push
mov
pop
aaa
jp
pop
sub
iret
fadds
sbb
arpl
das
push
es
popf
xorl
pusha
mov
fwait
cmpsb
cmpl
xchg
cmpsb
jno
xchg
movsb
cmp
loope
mov
sub
cmp
sub
enter
fisttpll
mov
loope
and
scas
fistpll
aaa
call
jns
pop
xchg
rclb
lods
mov
jl
mov
inc
adc
mov
clc
push
pop
popf
imul
jae
lcall
mov
push
pop
lcall
sbb
outsb
fnstenv
mov
pop
and
and
test
xchg
popf
repnz
addr16
es
das
and
inc
mov
aas
push
imul
aaa
inc
push
pop
pop
lods
sub
dec
in
outsb
das
stc
pop
lods
xor
stos
mov
xchg
or
rcll
sub
jno,pt
pop
iret
mov
cwtl
pop
es
and
adc
leave
pop
pop
and
push
in
jnp
test
mov
aaa
test
aam
sub
imull
lahf
push
jnp
cmpsl
imul
outsb
pusha
aam
xor
fwait
cmp
add
ret
mov
adc
jae
ljmp
and
nop
or
mov
xchg
out
cs
mov
stc
and
in
sbb
fdivs
inc
cli
mov
das
pop
sub
ja
push
jp
mov
pop
clc
push
cmpsl
sub
daa
rcll
popa
cmp
mov
sbb
xchg
clc
addr16
adc
fcomps
ja
push
add
lcall
dec
fadds
loop
cmp
xor
lcall
dec
rcll
jp
call
stc
mov
dec
jne
aaa
out
mov
clc
cmpsl
xchg
aad
faddl
leave
sub
push
divb
pop
dec
ficompl
fst
dec
and
mov
adc
and
inc
mov
jmp
sub
ja
sub
adc
pop
icebp
aaa
sub
mov
fld
xchg
sarb
loope
cmp
xchg
mov
jno
cmpsl
add
or
mov
lea
sub
call
cmpl
fcmovu
sbb
in
and
add
leave
cli
xchg
xchg
testl
inc
mov
pop
sete
pop
stos
cltd
jno
jne
mov
cwtl
inc
lods
ja
mov
mov
push
pop
les
movl
ds
daa
inc
xchg
addr16
push
sbb
mov
push
pop
lock
jnp
out
psubb
jno
inc
or
fcomps
sub
adc
int
jbe
jae
lcall
mov
inc
cmp
movsl
jecxz
je
sti
shld
mov
sarb
xchg
xchg
cs
in
out
lea
ret
je
pop
lods
and
pusha
shrl
cmpsl
movsl
test
and
inc
shll
mov
pop
adc
jecxz
enter
xor
daa
cmpsl
movb
xchg
hlt
stc
aaa
xor
test
jge
iret
orb
dec
add
outsb
or
fmuls
adc
ror
or
shll
cmp
inc
sub
jne
ja
bound
das
mov
fisttpl
das
sbb
in
mov
and
cmpsl
dec
dec
push
or
sar
pop
out
std
daa
leave
mov
lods
repz
push
cmpsl
aaa
inc
in
and
inc
inc
cltd
mov
sub
push
mov
jns
and
and
jno
les
repnz
ja
sbb
test
xchg
add
sub
pusha
push
ljmp
xchg
mov
enter
shll
movsl
stc
loop
lcall
imul
test
mov
add
mov
sub
lock
cmc
xor
pop
js
cmp
push
dec
pop
xor
push
das
leave
addr16
stc
inc
aaa
mov
add
sub
enter
into
lret
xchg
clc
jae
pop
stc
pop
scas
mov
repz
aam
sahf
test
rcl
roll
inc
cmc
cwtl
clc
or
jl
aaa
xchg
xchg
movsb
addr16
sbb
enter
lcall
pop
and
mov
scas
ja
in
popa
lock
jbe
lods
fadds
push
jne
stc
sti
push
sbb
or
jae
push
movb
bound
sbbb
cmp
sbb
test
cmp
loopew
shrb
mov
dec
or
and
push
stc
data16
jg
xor
jg
jno
stc
call
jae
push
sub
pushf
lods
sub
loop
mov
inc
mov
adc
push
add
daa
pop
imul
xor
mov
daa
addr16
mov
adc
inc
jns
icebp
test
or
adc
stos
xchg
inc
lahf
mov
clc
cli
adc
in
dec
and
loop
pop
add
enter
shl
mov
sbb
lock
mov
mov
dec
pop
enter
jmp
sub
add
adc
pusha
fwait
das
mov
out
cwtl
negb
fucomi
jecxz
dec
xor
cmpsl
cmp
pop
xchg
pop
aam
mov
sub
push
fldcw
or
cltd
cmpsl
fldt
ljmp
pop
lcall
xchg
or
jp
test
sub
sub
dec
enter
pushf
fsubrl
and
pop
lods
mov
outsl
jmp
daa
lret
or
xchg
sub
push
scas
lahf
andb
xchg
cmpsl
sahf
sub
in
adc
mov
and
sarb
shrb
fwait
insb
and
mov
test
add
sbb
popa
mov
lea
popf
sub
ljmp
mov
cli
push
mov
ja
pop
daa
lcall
fwait
shrl
daa
ljmp
lods
xchg
lods
out
enter
fisubrl
icebp
fs
mov
inc
pushf
jecxz
lcall
movsb
and
and
xor
dec
dec
xchg
sub
lds
insl
scas
daa
cli
cmpsb
or
loop
jecxz
sbb
and
ljmp
nop
cltd
popa
pop
xchg
scas
daa
sub
dec
mov
orb
cltd
fnsave
push
cmp
sub
push
lcall
mov
scas
and
push
das
fucomp
ret
ljmp
out
js
mov
pop
faddl
loopne
cmpsb
pop
mov
jno
xor
cmp
aam
fsub
cmp
adc
push
cmp
iret
cs
sbb
or
pop
lret
lcall
setno
adc
inc
mov
pop
fcomi
daa
fwait
mov
test
dec
cmp
jge
dec
and
das
imul
xchg
mov
in
cmp
mov
roll
scas
in
and
cmpsl
inc
push
mov
daa
push
add
pusha
fcmovnbe
daa
cs
adcl
lock
inc
sbb
ret
jp
and
lods
dec
pop
stc
daa
sbb
ret
mov
and
enter
nop
pop
and
xchg
shl
and
mov
std
pop
xor
mov
adc
daa
mov
shl
daa
cmpsb
or
and
ds
add
mov
scas
sub
das
adc
fsubs
rol
fsubl
mov
dec
pop
mov
push
add
aam
daa
repnz
cmp
pop
stos
and
loope
je
adc
fimull
in
pushf
pop
addr16
daa
xchg
shlb
sbb
sub
sub
cmpsb
add
pop
sbb
lret
in
out
jo
cmpsl
inc
pop
cld
fsubrs
movsb
mov
pusha
jmp
insb
push
es
enter
inc
test
and
jbe
adc
outsl
daa
loop
mov
jmp
or
mov
test
test
mov
jecxz
std
mov
pop
inc
fadd
mov
xor
sub
cmp
or
daa
sbb
cmp
mov
jmp
lret
cmp
imul
loopne
mov
add
imul
dec
dec
daa
push
lock
xchg
jp
ljmp
push
int3
lea
mov
mov
daa
jne
outsl
dec
push
and
pushf
xchg
ret
xchg
cmp
stos
addl
icebp
daa
loopne
jecxz
orl
into
pop
add
fildl
pop
lahf
xor
daa
cmp
call
sub
jno
xor
aam
into
arpl
adc
lret
das
aaa
cwtl
daa
sbb
ret
mov
decl
daa
push
sub
xlat
and
out
mov
lds
pop
dec
pop
adc
daa
dec
push
outsb
adc
daa
imull
inc
pop
push
icebp
sti
leave
daa
ja
add
sbb
xchg
enter
dec
xchg
mov
rol
xor
daa
adc
je
sub
ret
mov
add
out
mov
sub
daa
jmp
repz
imul
dec
rorb
shr
popa
lods
adc
daa
push
dec
pop
int3
cmp
add
int
xchg
push
adc
push
andb
add
das
fcomps
mov
daa
adc
es
inc
mov
lods
xor
stos
insl
out
cli
out
daa
movsl
push
data16
fisttps
lock
daa
adcb
sti
arpl
fsubs
negl
test
daa
cmpsl
add
dec
add
daa
or
sbb
xchg
dec
dec
push
push
fidivrl
scas
mov
in
dec
cwtl
pushf
push
pop
arpl
sahf
lock
mov
pop
sbb
or
and
pop
or
add
xor
mulb
sbb
aam
lret
daa
xchg
loopne
movsb
in
sbb
daa
es
xchg
cmp
aad
fs
cmc
and
dec
and
stos
in
sbb
pop
and
jb
call
cmp
outsl
movsl
rclb
testl
icebp
out
sbb
inc
loop
jmp
cmp
lret
pop
push
add
call
and
cmc
pop
push
js
jnp
das
outsb
push
mov
xor
xchg
in
ljmp
add
jae
pop
lods
fcoms
call
cmpsl
testb
or
std
int3
hlt
pop
rorb
mov
pop
cltd
shlb
mov
mov
mov
mov
xchg
and
dec
sub
aaa
and
es
scas
sti
mov
cmc
int
mov
sub
daa
dec
add
mov
add
shrl
idivl
stc
pop
pushf
cmp
push
aad
fxch
daa
adc
ds
clc
daa
mov
mov
sub
stc
mov
xor
inc
imul
dec
and
xchg
rolb
das
xchg
scas
sarl
stos
push
ds
mov
push
adc
fdivrl
test
sbb
jp
enter
rorl
dec
mov
inc
lahf
jo
pop
rcr
jmp
mov
leave
and
mov
leave
sub
les
sbb
sub
inc
lret
js
adc
daa
cmc
mov
push
cmp
and
and
xchg
cmpsb
sub
pop
dec
dec
xor
pop
loope
mov
adc
adc
or
dec
negl
sub
out
insl
jl
inc
mov
lcall
mov
addr16
mov
int
cmpsb
or
icebp
mov
add
inc
sarl
adc
cwtl
es
scas
bound
lea
jg
lods
push
sub
les
dec
aaa
out
inc
dec
and
sub
in
leave
sub
sub
test
in
sub
sbb
insb
aad
fwait
sbb
loopne
inc
xor
movsb
push
insb
sub
je
in
pop
in
jmp
push
push
xchg
int
mov
les
and
test
imul
cmp
or
call
shll
mov
and
addr16
scas
pop
aas
push
add
dec
in
leave
mov
mov
scas
js
push
ret
popf
popf
iret
mov
xchg
sub
adc
aaa
scas
fbld
fwait
repz
jno
inc
shrl
adc
sbb
cmpsb
xchg
daa
push
mov
jbe
enter
and
aam
divb
mov
xor
inc
pushl
cmpsl
daa
push
cmp
jne
daa
and
sbb
stos
inc
cld
idivl
ja
xchg
daa
sub
jle
add
add
xor
xchg
inc
or
push
jmp
jno
mov
xor
fs
jecxz
pushf
sahf
or
stc
mov
gs
ljmp
test
cmpsl
pop
dec
daa
insl
ficoms
daa
jb
movsl
inc
ss
repnz
xor
push
call
sub
popa
repz
daa
push
ds
stos
into
test
daa
mov
adc
in
stos
cmp
fidivl
and
test
cmp
cli
pop
sub
add
push
stos
sub
iret
xor
inc
fadd
jae
js
les
mov
add
jo
repz
lcall
ja
js
mov
mov
popa
xchg
and
mov
cwtl
cli
xchg
ljmp
sbb
pop
xchg
mov
cmpb
ds
jle
sbb
xchg
fldl
lock
jno
adcb
mov
push
mov
mov
adc
pop
jecxz
ds
sbb
adc
iret
inc
sbb
mov
mov
cmp
pop
fnsave
shll
xchg
jmp
repz
in
aad
or
out
andl
push
gs
lret
stos
fwait
in
fimuls
repnz
pop
sub
cli
xor
mov
outsl
ret
push
sub
popa
sbbb
xlat
cmpl
daa
jne
lds
dec
cmpsb
dec
shrl
fsubrs
aam
or
cld
lods
shrl
and
sub
movsl
adc
adc
or
rclb
pop
aam
mov
mov
or
scas
lret
add
xchg
push
clc
mov
scas
sarb
xchg
or
pusha
jle
sbb
jle
jae
vmwrite
and
les
movsb
jmp
pop
and
push
push
cmpsb
stos
dec
mov
push
mov
dec
pop
push
popf
mov
das
rolb
mov
mov
xchg
cs
fwait
push
fistpll
inc
or
nop
and
xlat
ret
jnp
push
das
xchg
xchg
cmp
mov
jne
sub
pop
fisubrl
stos
aad
push
leave
dec
cmpsb
sub
sub
ljmp
imul
cmp
dec
and
ja
addl
mov
cwtl
scas
and
aad
cmp
daa
push
pop
jae
pop
and
scas
cmp
lahf
mov
jae
mov
lds
jg
shlb
scas
xchg
clc
into
data16
call
pushf
movsb
inc
lods
xlat
pop
cmp
jae
cli
lret
lods
adc
test
pushf
or
cmpsb
pop
pop
mov
pop
out
daa
scas
jmp
pop
nop
adc
jge
in
sub
mov
stos
cmc
pop
sarb
lret
mov
xchg
hlt
ret
mov
test
mov
shrl
adc
mov
xchg
sbb
push
mov
mov
loope
sub
imul
repz
push
shll
loope
rorl
xor
ret
pop
mov
sub
stos
push
mov
out
and
adc
sub
pop
mov
or
out
jae
cmpsb
jo
inc
int3
push
adc
scas
lds
or
inc
adc
push
and
lcall
sub
imul
insb
insb
stc
push
xor
pop
or
and
inc
xor
fildll
lods
push
add
jecxz
jp
mov
cmpsb
int
hlt
pushf
xchg
fsubrp
pop
out
cltd
rcl
sbb
push
enter
and
fldenv
scas
xchg
sbb
mov
push
movsl
pop
insl
stc
imul
out
cmpsb
mov
mov
ds
adc
and
sub
push
lcall
mov
xchg
stos
mov
lods
adc
adcl
pop
mov
arpl
xor
scas
sbb
inc
xor
insb
cltd
jmp
push
sub
aam
fsubl
cmpsl
ds
sub
daa
mov
push
adc
cli
jno
pop
push
lahf
fimull
arpl
shrb
jne
mov
fisubs
or
xchg
or
int3
fdivs
mov
inc
lret
xchg
arpl
jmp
dec
pop
push
add
cmpsb
data16
adc
xor
sbbl
sbb
cmp
xor
test
mull
stc
adc
subb
insl
pop
das
das
jae
jnp
sahf
and
sub
das
dec
scas
lods
push
xchg
lcall
daa
jecxz
loope
sub
pop
dec
outsb
cmc
ss
jg
pop
cmp
cwtl
pushf
sbb
pop
inc
add
fisubl
inc
fimuls
in
daa
pop
imul
nop
addr16
jo
int3
dec
pop
rcrb
cltd
cmpb
out
aad
lcall
daa
mov
xor
cmpsb
int
jae
jns
ds
sub
or
in
insl
outsb
ret
lods
addr16
push
push
int3
add
push
jl
loopne
pop
xchg
daa
pop
ds
shll
mov
dec
dec
lret
daa
mov
push
mov
daa
xchg
mov
ret
xor
push
out
out
das
add
jno
leave
cld
icebp
pop
nop
push
stc
inc
imul
je,pt
and
in
aad
imul
add
das
jne
pop
test
daa
add
add
dec
adc
xor
js
fmull
jmp
lahf
mov
loope
loopne
inc
cmp
or
cld
lahf
inc
push
jle
mov
sub
inc
cmp
jmp
daa
pop
mov
movsb
fldl
jo
add
and
cmp
hlt
sub
ret
scas
inc
ds
jno
idivb
daa
imul
das
jns
fwait
or
sbb
cmp
sub
int
and
fsubs
loope
mov
clc
sbb
jbe
sub
cli
popf
sub
cmpsl
daa
add
sbb
daa
and
inc
or
pop
mov
neg
xchg
jp
and
daa
mov
dec
lret
mov
movsb
rcll
insb
add
int
xlat
and
lret
js
inc
outsb
out
sub
adcb
daa
jns
jne
dec
xchg
pop
sbb
jb
test
fdivrl
push
call
mov
ret
add
inc
mov
leave
mov
fstps
aad
dec
ret
mull
xor
xchg
xchg
sub
fldenv
popf
out
stos
adc
and
dec
mov
jnp
daa
add
mov
fdivs
iret
fisubl
pop
jecxz
aas
or
daa
jb
cmc
xchg
xor
inc
xchg
cmp
pop
dec
data16
jno
js
mov
ds
xchg
push
dec
into
test
daa
dec
or
sbb
mov
jnp
das
xchg
push
cmp
iret
data16
add
fsubrl
dec
shlb
mov
in
daa
lock
jb
and
cltd
mov
ret
and
dec
push
push
and
xor
mov
fnstsw
daa
mov
add
scas
enter
daa
xchg
push
pop
xor
outsl
mov
and
js
jle
cmp
and
movsb
mov
sub
pop
scas
cmp
dec
cmp
sarb
testb
sahf
xchg
pusha
ret
and
mov
and
sub
clc
mov
dec
or
ds
sub
pop
jnp
int
add
pop
das
popf
xor
lret
frstor
pop
jo
shll
imul
sbb
adc
mov
sbbl
sahf
adc
xlat
pop
and
fmuls
add
movsb
inc
inc
orb
pop
fdivr
xorb
adc
add
jmp
mov
inc
out
daa
addr16
xor
adc
jl
clc
ret
mov
pop
mov
insl
dec
inc
xor
das
fdivrs
sub
ret
mov
push
outsb
fdivs
out
lds
mov
sub
xor
mov
dec
sarb
cs
pop
xlat
cli
daa
test
mov
daa
nop
xor
bound
mov
les
ss
push
daa
int3
test
call
xchg
subl
outsb
movsb
les
addr16
ja
pop
mov
mov
rol
mov
pop
mov
xor
mov
movsb
push
daa
scas
xchg
and
inc
shll
out
ret
mov
fcoms
sarb
jo
rorb
bound
xlat
fidivs
dec
push
das
xor
cmp
xor
mov
outsb
das
inc
or
sbb
cmp
jno
pop
fisubrs
daa
inc
in
in
mov
dec
out
pop
push
jg
daa
lock
pusha
push
popf
fdiv
mov
cmp
mov
push
sub
out
daa
out
jne
popf
jnp
pop
sbb
cmp
call
test
loope
inc
fisubs
cmp
aad
fsubs
or
in
sarb
mov
daa
inc
pop
fwait
and
repnz
dec
adc
scas
lods
dec
clc
daa
xchg
and
push
jge
pop
or
shr
cld
repz
sahf
addr16
es
lret
daa
fs
xor
mov
test
and
xchg
ljmp
push
inc
adc
inc
mov
sub
ja
daa
rcll
and
daa
lea
pop
sub
push
sub
xchg
xchg
loope
daa
ret
add
daa
inc
lods
mov
rorb
fwait
sti
jl
mov
inc
ds
sub
mov
lret
pop
pushf
clc
das
les
mov
xchg
daa
xchg
lods
xchg
std
cmp
pop
stos
daa
repz
push
and
daa
jbe
ds
cmp
push
jge
stos
mov
xlat
movsl
test
dec
aam
mov
pusha
mov
add
iret
clc
ljmp
test
and
nop
sbb
stos
sbb
in
pop
imul
sarl
fdivs
xor
pop
out
xchg
adc
orl
mov
pop
adc
lcall
xor
movsb
jle
daa
movsb
or
cs
gs
daa
adc
mov
jecxz
cmp
add
mov
add
sti
mov
test
pop
movsl
push
cltd
daa
sbb
fistps
jp
adc
push
or
push
sar
push
xchg
mov
xchg
cli
push
and
xchg
loope
subl
mov
daa
sub
mov
into
daa
sbb
mov
pop
xor
in
jecxz
movsl
cs
cli
out
mov
loopne
stc
int
mov
adc
imul
push
jmp
test
mov
scas
fwait
je
daa
aad
and
dec
clc
xor
lret
and
decb
int
je
and
fists
inc
daa
push
cli
sbb
xchg
and
daa
sbb
push
push
mov
mov
xor
fsubs
mov
jo
jg
test
ja
rolb
scas
cmpsl
punpckhwd
jle
pushf
push
sbb
jae
les
xlat
adc
mov
arpl
dec
xchg
daa
incl
mov
cmpsl
daa
xchg
ja
insl
jmp
enter
or
cmp
sub
sub
je
sbbl
adc
push
mov
cmp
out
lcall
loop
int
pop
add
inc
fisubs
pop
add
jl
xor
daa
pop
fildl
mov
mov
imul
iret
shlb
divb
sbb
and
mov
push
lret
adc
in
sbb
rorl
daa
fiaddl
adc
daa
mov
cmpsl
pop
mov
cmp
add
jns
lcall
repnz
das
xchg
adc
mov
iret
stos
jns
and
jne
pop
sbb
and
adc
adc
test
sub
shr
jg
xlat
jns
fs
pop
mov
sub
sub
mov
outsl
and
daa
loopne
push
xchg
pop
pop
mov
daa
mov
push
jp
push
fidivl
fimuls
daa
pop
sbb
sub
adc
xchg
cmpsl
enter
jbe
fiaddl
clc
sub
cmpsb
out
das
xchg
and
mov
mov
jmp
ficompl
cmp
and
or
inc
enter
sub
in
push
popa
sub
mov
xchg
fildl
xor
stos
into
mov
lods
daa
test
push
test
mulb
cmp
xchg
in
std
add
and
inc
shll
xor
cwtl
mov
push
cmpl
or
jge
lret
push
addr16
daa
out
cli
lahf
cmp
cmp
add
push
std
gs
jb
mov
lahf
movb
sbbb
hlt
adc
sbb
pop
jl
outsl
jmp
and
in
push
dec
xchg
dec
xor
sub
mov
test
fldenv
xchg
sbb
popf
push
mov
jno
cmpsl
daa
push
int3
cld
lods
pop
imul
sub
sbb
in
leave
dec
shll
ds
adc
and
pop
add
dec
addps
xlat
test
je
fisubrl
aas
pusha
rclb
and
or
int3
mov
loop
test
push
ja
stc
pop
aas
ret
sub
jl
ret
bnd
les
xchg
push
fs
mov
sbb
dec
dec
cwtl
movsb
xchg
or
sub
mov
fwait
xchg
adc
arpl
imul
dec
sub
mov
pop
js
xlat
ret
pop
cmc
jmp
jne
iret
mov
scas
cwtl
bound
popa
adcl
cmpsb
jb
in
mov
das
insb
cwtl
xlat
jmp
lea
cmp
push
repz
clc
lea
mov
int3
shlb
and
scas
lahf
dec
xor
mov
push
lea
ja
mov
dec
sarb
pop
mov
repz
testb
sbb
sub
pop
dec
mov
sbb
leave
loopne
inc
xchg
sub
mov
test
lods
sbb
shlb
adc
jnp
dec
loop
xchg
das
jge
loope
jae
or
jnp
push
psllw
push
out
mov
imul
xor
nopl
ljmp
mov
adc
xchg
and
out
in
shll
sti
xor
loope
std
ja
imul
sub
dec
push
lods
fisubs
sbb
orb
arpl
cltd
aas
jae
cmp
daa
inc
push
push
nop
das
andb
adc
ss
mov
and
cli
daa
inc
cmpl
cmp
mov
mov
icebp
out
mov
test
daa
and
xchg
push
and
daa
push
dec
mov
fstpt
xchg
and
iret
lock
dec
sub
out
and
mov
cmpsb
mov
pop
inc
movsl
mov
mov
js
leave
push
nop
movsl
lcall
rorb
pop
xor
das
and
pop
mov
pop
repz
aam
push
dec
arpl
lds
cs
imul
sub
adc
cmp
mov
inc
daa
out
mov
dec
cwtl
daa
sarb
jo
dec
pop
das
daa
outsl
mov
jle
in
sub
xchg
insb
cmpsl
xor
testb
mov
test
xchg
xor
cmp
sub
sti
roll
clc
daa
rep
add
push
call
out
xchg
push
lock
js
adc
xchg
pop
or
or
test
or
pop
repnz
pop
sub
mov
cltd
test
imul
lods
lock
aad
leave
jecxz
idivl
sub
mov
into
ja
ret
push
fwait
in
daa
and
push
mov
xchg
rorb
sub
daa
inc
push
jg
push
push
outsl
icebp
test
cmpsb
mov
shll
add
ljmp
xor
outsb
stos
outsl
ja
insl
imul
fcoms
adc
enter
in
and
mov
adc
dec
in
into
adcl
shrl
mov
pop
xlat
xchg
sub
aas
ja
and
add
cmp
call
cs
movsb
sbb
and
sub
mov
pop
and
jp
daa
or
cmp
daa
outsb
and
pop
jmp
mov
out
inc
imul
mov
dec
adc
xchg
xor
fiadds
and
insb
aaa
insl
daa
aas
fs
sbb
stos
mov
sti
stc
pop
test
xchg
adc
mov
mov
negb
xchg
mov
jnp
aam
and
popl
outsl
jae
das
inc
xchg
cmpsl
dec
stos
mov
dec
pop
daa
push
in
call
daa
xor
cmpsb
mov
xchg
and
fnstcw
mov
mov
daa
dec
sub
dec
fidivrl
daa
hlt
mov
push
scas
jbe
stos
cmpsw
das
sti
pop
jb
bswap
fisubs
jae
mov
mov
jnp
daa
push
sbb
or
rorl
sbb
mov
mov
daa
mov
pop
adc
lods
push
xor
daa
inc
popa
jl
scas
subl
shrl
or
int
dec
test
inc
daa
shl
scas
dec
cmp
ficomps
and
insb
dec
loopne
push
daa
push
aas
mov
xchg
daa
pop
int
mov
pusha
orl
mov
xchg
call
mov
push
cmp
filds
cltd
adc
pop
imul
mov
daa
xchg
pop
lock
cmp
jns
imul
cmp
daa
fcmove
jbe
lret
mov
psrlq
push
jg
daa
adc
mov
cmp
xor
inc
hlt
fadds
in
xorb
adcb
jl
nop
xchg
shr
fsubrs
cmp
mov
insb
jbe
dec
push
int3
xor
push
scas
test
das
nop
cmp
push
pop
push
sub
sub
ret
bound
and
aas
sub
jnp
push
or
not
cmp
imul
bound
mov
push
jns
cs
daa
adc
xchg
or
sarl
ja
test
xchg
sub
jo
in
scas
xor
mov
xor
pushl
xchg
test
adc
inc
sbb
inc
cmp
cmp
cltd
cltd
xor
repnz
sbb
mov
gs
pop
mov
dec
lahf
pop
push
jne
mov
int3
lea
ret
fistpl
incl
cmpsb
mov
movsb
push
push
jnp
data16
dec
jo
adc
push
push
fidivl
dec
cmp
bound
mov
jo
fcmovne
and
mov
repz
xchg
push
lcall
lds
jmp
cwtl
adc
jns
push
jle
mov
arpl
daa
and
push
add
cmp
out
inc
scas
mov
pop
movsl
sbb
adc
les
push
arpl
jmp
in
lods
sub
test
push
ljmp
flds
dec
cmp
mov
push
ljmp
fisubrs
xchg
mov
mov
add
repnz
insl
jbe
pusha
clc
mov
int
jecxz
rorb
pop
js
jns
sub
mov
pop
add
and
push
fnsave
mov
push
xchg
shlb
cmp
out
cmp
inc
leave
cmpsb
inc
push
inc
and
fdivrs
scas
popf
inc
sub
mov
mov
adc
sbb
pop
inc
jmp
and
das
jae
scas
cmpsl
testb
adc
pop
cld
push
cmp
ja
xchg
fstpl
fstpl
popa
int3
push
es
pop
mov
outsb
movsb
pusha
mov
cmpsb
push
cmpsl
sub
push
add
icebp
mov
xor
rcll
push
lret
pop
dec
cwtl
int
rcrb
sbb
sub
pusha
shrb
outsl
inc
bound
push
mov
imul
enter
js
mov
sbb
sbb
add
sbb
adc
rol
outsb
dec
dec
sub
jp
pusha
shr
insb
rolb
ficompl
nop
sub
fsubrl
adc
data16
fstps
test
pop
test
shlb
mov
in
and
jo
hlt
jnp
xchg
daa
mov
and
push
aam
jmp
test
push
call
add
dec
cmp
mov
pushl
adc
aam
pop
ljmp
in
daa
out
movsl
jmp
scas
mov
ret
rorb
ljmp
pusha
mov
pop
test
push
xchg
pop
or
jb
lods
jmp
cli
sub
add
enter
jg
shll
data16
push
imul
xor
or
int
cmpsb
cld
shr
sub
ret
mov
dec
jl
nop
cwtl
mov
sbb
cmc
fdivl
movsl
stos
xor
dec
ja
and
lea
loop
call
pop
sub
ds
test
sbb
sub
push
jns
xor
call
loop
sbb
pushf
test
out
xor
jl
lcall
xchg
imulb
sub
pusha
scas
clc
fs
adcb
ja
enter
jmp
imul
cmp
mov
xchg
sbb
clc
scas
je
pop
cld
imul
mov
lcall
ret
daa
loop
int3
and
daa
test
xor
cmp
lret
popf
das
jns
out
mov
scas
or
addr16
loope
daa
add
sub
rolw
daa
xchg
add
lcall
ja
cmp
int3
cmp
fildl
lret
cmpsl
insl
dec
pop
mov
sahf
dec
scas
fistpll
cli
inc
popf
loopne
int
daa
add
xor
pop
ja
adc
lods
add
sbb
daa
sbb
nop
mov
add
mov
pop
icebp
mov
jnp
aas
daa
push
mov
pop
je
sahf
push
daa
xor
xchg
dec
mov
and
test
lds
outsb
fisubrs
daa
xor
pop
dec
movsl
es
mov
dec
and
push
cs
sub
ret
and
into
movsb
pop
mov
xchg
lea
cmp
orl
imul
ljmp
fstl
or
sub
cmp
stos
adc
xor
das
outsl
push
jp
sbb
daa
push
xchg
loope
daa
cmpsb
in
les
or
xchg
daa
mov
mov
push
pushf
mov
pop
cmp
daa
mov
negb
adc
insb
and
pop
mov
cmpsl
shrl
sbb
stc
mov
mov
mov
jge
daa
xor
lock
push
fsub
call
xor
icebp
adc
or
mov
cmpsl
loop
inc
sub
sbb
dec
es
or
sbb
nop
sub
js
loope
mov
lods
jb
lock
es
cli
movsl
aad
daa
fs
and
push
roll
jecxz
jae
daa
bound
cmp
push
pop
or
out
mov
and
pop
pop
daa
pusha
pop
jp
jg
jge
cmpsl
jns
flds
mov
idiv
test
xor
out
jecxz
cwtl
jle
push
push
pop
push
and
cmpsl
or
cmp
daa
add
fdiv
mov
cli
jae
popa
daa
sbb
shll
jg
popl
ljmp
mov
inc
in
daa
addr16
mov
mov
mov
mov
xor
inc
cltd
xchg
fnstenv
mov
test
push
sti
fmuls
push
fists
fimuls
das
dec
xchg
test
daa
lahf
cmpsb
in
fwait
xor
jns
shr
mov
push
cmpsl
ret
sbb
daa
mov
mov
test
or
lea
xchg
mov
out
daa
scas
jb
lods
xchg
jno
mov
or
pop
add
push
pop
int
mov
mov
add
xchg
mov
mov
daa
jno
js
xchg
cmp
push
fmull
daa
lahf
insl
call
cmpsb
add
inc
fiaddl
dec
adc
push
mov
sarl
daa
pop
jg
mov
sbb
repnz
frstor
test
in
cmp
push
bound
mov
dec
fsubl
jmp
push
outsl
fdivrs
ljmp
mov
arpl
leave
cmp
xor
or
in
push
pushf
aaa
xor
iret
fwait
inc
adc
mov
lahf
cmp
enter
inc
pop
push
movsb
xor
xchg
cmp
out
inc
lcall
xchg
sub
pop
cld
mull
call
push
std
or
jnp
nop
cli
inc
imul
mov
jne
daa
push
xchg
out
sbb
xchg
sahf
xchg
daa
out
lods
imul
cbtw
daa
mov
push
movl
in
jno
dec
cs
mov
mov
decl
inc
iret
aad
fsubr
jae
int3
cmp
push
mov
push
test
lret
sbbl
repnz
into
gs
mov
push
fs
test
xlat
daa
pop
mov
cs
daa
push
inc
stc
and
imul
outsl
add
sub
push
sbb
in
pop
dec
fcompl
fistl
and
or
add
stos
ficompl
mov
inc
ds
lock
push
inc
daa
sbb
loopne
out
push
pop
daa
loop
push
inc
mov
push
sbb
cmpsl
fisubrl
mov
ljmp
out
xor
xor
das
pop
push
lret
rcr
pop
stos
sbb
sub
push
js
outsb
mov
push
cmp
jecxz
rcrl
mov
mov
push
scas
fcomi
movsl
fcoms
aas
pop
in
lods
jp
scas
pop
jno
pop
jl
mov
daa
es
fisttps
movsl
cmp
sbb
lahf
cld
jbe
leave
dec
in
daa
jmp
stos
jns
mov
mov
clc
mov
es
jnp
int
push
cmpsb
push
imul
mov
mov
push
mov
mov
jp
mov
jb
mov
sbb
sahf
xor
sub
mov
cmp
sbb
iret
das
daa
xor
push
adcb
fs
push
mov
add
mov
clc
daa
in
test
xor
les
add
and
data16
repz
daa
dec
enter
sub
daa
divl
jnp
loope
pop
cmpsl
daa
adc
sbbl
addr16
insb
daa
inc
jb
dec
sbb
push
adc
daa
imul
daa
cmp
pop
sbb
jg
daa
loopne
filds
cmp
mov
lahf
shrb
sbb
pop
inc
daa
mov
daa
push
pushw
shlb
bound
pushf
xchg
pop
aam
mov
lret
arpl
xor
cmp
cli
sub
pop
or
loop
lfs
mov
aad
daa
sub
in
popl
imul
cs
daa
add
out
clc
aaa
pop
pop
xlat
outsl
pop
and
inc
fsubrs
in
sub
jno
mov
repnz
decl
daa
cmp
fsts
pop
imul
adc
rcll
leave
jo
js
adc
fsubl
jmp
aad
push
pop
sbb
mov
mov
js
cmp
dec
mov
or
jg
adc
xor
jne
daa
idivl
iret
inc
dec
xchg
call
icebp
xor
insl
popa
push
daa
mov
dec
int
add
outsl
loope
pop
aas
add
insl
mov
call
sbb
sbb
jg
outsb
pushf
mul
sub
dec
daa
mov
loope
mov
outsb
add
jns
loopne
mov
in
mov
int
imul
pop
es
inc
in
call
jp
mov
lods
and
ljmp
ss
pop
mov
je
leave
pop
clc
ja
push
clc
mov
cltd
and
fdivrl
inc
idivl
jae
decb
mov
jg
adc
pop
cmpsb
or
and
fisubrs
das
or
scas
lods
cltd
sub
xor
adc
into
jbe
popa
fsubr
movsl
add
mov
sub
comiss
push
dec
add
lcall
cld
je
jbe
movsb
pop
mov
iret
mov
ficompl
es
inc
sub
jnp
pop
and
cli
clc
and
daa
push
shl
xor
aas
cmp
jns
decl
push
idiv
fisubl
pop
loope
sahf
cmpsb
icebp
mov
sbbb
add
adc
test
imull
repz
clc
mov
es
fists
jnp
popa
add
enter
cmc
orb
mov
add
negb
push
daa
cmpsb
dec
aam
pop
sbb
daa
inc
sub
loop
jle
sub
jne
daa
add
cmc
icebp
fs
mov
mov
jae
js
aam
mov
xor
or
xchg
and
lahf
jecxz
lret
mov
mov
push
xor
jno
int3
daa
jp
pop
jmp
daa
add
push
mov
ljmp
leave
xor
or
cs
hlt
or
jg
dec
cmp
cmpsb
das
xor
push
shlb
cmpss
xor
mov
xchg
jno
inc
and
ljmp
aad
incb
adc
dec
mov
nop
cmc
insl
lock
daa
loope
pop
jle
pop
jg
cmp
xor
out
jp
jae
cmpsl
or
sub
gs
daa
sbb
orb
scas
daa
ja
mov
pop
adc
push
or
xor
pop
and
ret
enter
out
vzeroall
lcall
and
into
shlb
sbbb
push
add
cld
add
jns
gs
out
fdivs
xchg
push
sbb
loop
xlat
mov
imul
xchg
cmc
or
lods
sbb
cltd
cmpsl
sub
sbb
adc
xorb
sub
xchg
das
daa
or
imul
cwtl
and
push
jae
stos
clc
and
sbb
daa
lods
nop
sti
or
int
ss
dec
rolb
mov
sbb
mov
imul
gs
cmp
and
sbb
scas
mov
daa
cs
in
mov
mov
ljmp
pop
mov
ds
daa
or
icebp
cwtl
imul
mov
enter
dec
adc
loop
iret
cltd
sbbb
cli
daa
cmpsb
shll
into
pop
fadds
mov
and
outsb
daa
pop
fiaddl
xorl
aam
pop
adc
sbb
lods
aad
fcmovnb
cmpsb
dec
movsb
push
out
daa
sahf
clc
sbb
adc
out
addl
adc
mov
or
xchg
stos
hlt
pusha
cwtl
clc
xchg
mov
dec
test
push
je
xchg
push
mov
jg
pushf
sub
adc
enter
aam
stc
sub
sbb
cmc
sub
inc
or
push
inc
daa
hlt
imul
mov
jge
cmpsl
ret
sar
pop
inc
daa
xor
int3
cmpsb
fldenv
mov
popa
mov
daa
in
push
ja
pop
sti
mov
pop
pusha
daa
mov
mov
test
push
scas
js
add
cmp
fs
rolb
out
or
hlt
push
sub
fimull
and
fstps
mov
jo
pop
push
enter
mov
ds
mov
cltd
sti
push
pop
mov
pusha
movsb
repnz
das
lock
test
daa
dec
sub
pop
mov
rclb
test
push
dec
das
test
add
push
clc
cs
mov
lods
cli
jmp
mov
sub
cmpsl
xor
pop
outsb
daa
call
push
jb
inc
daa
addr16
and
mov
push
push
gs
into
jmp
adc
or
das
out
push
test
imull
inc
inc
xlat
mov
sbb
dec
or
jmp
mov
cmc
pushf
arpl
mov
jo
add
dec
daa
mov
enter
mov
rclb
dec
in
sub
daa
push
popf
and
daa
lods
fsubl
push
int
jb
lret
cmp
inc
pop
dec
aaa
sbb
lods
add
ds
add
addr16
dec
jmp
fstps
mov
inc
dec
scas
dec
daa
xchg
sub
or
cmp
jg
mov
adc
or
xlat
aaa
push
push
sbb
daa
add
cmp
scas
bndstx
add
ret
dec
ficoml
lods
adc
mov
lea
insb
mov
clc
and
daa
jb
sti
xor
stos
data16
push
sub
popa
and
ret
aas
daa
imulb
fstps
dec
mov
lods
and
xor
cmpsb
sbb
dec
sbb
inc
test
loope
repz
and
jecxz
fiadds
mov
xchg
inc
daa
pop
lcall
lea
daa
rorb
add
insl
jle
daa
inc
xor
and
cmpb
mov
inc
mov
ljmp
xchg
lods
and
sbb
inc
and
inc
daa
sbb
adc
daa
shrl
cmp
daa
fbstp
jmp
cli
lods
out
xor
and
outsb
sub
movsl
mov
fcoms
sbb
push
or
imul
jecxz
aad
pop
inc
adc
cmp
push
mov
hlt
cmp
push
fldl
loopne
pop
fadds
jo
push
cmp
xor
in
mov
mov
jmp
inc
hlt
fnstenv
out
ljmp
push
addr16
push
out
jg
sub
add
mov
pop
xchg
cmp
out
or
push
inc
mov
call
sub
adc
dec
jo
jnp
gs
rcl
dec
mov
and
insb
stos
or
xchg
jae
int
and
call
mov
repnz
movsl
and
adc
push
shl
adc
adc
icebp
sub
bnd
roll
mov
icebp
andl
jb
out
scas
insl
pop
enter
add
sub
sub
push
xchg
push
inc
cld
mov
cmc
aaa
jmp
leave
pushf
data16
add
lret
stos
test
fadds
mov
pop
xchg
jle
pop
cmp
and
call
out
lods
std
or
roll
jmp
pop
inc
cmc
mov
iret
adc
imulb
pushf
fnstcw
xchg
popf
pop
fsubs
sbb
mov
and
cmpsb
jmp
inc
mov
into
movsb
sub
enter
test
aas
cltd
lret
cld
movsl
js
sub
xchg
lock
dec
jnp
std
arpl
test
inc
enter
lock
ret
mov
mov
vorpd
lock
push
and
scas
fisubrl
arpl
das
cmp
pop
dec
lods
js
push
sbb
pop
shld
popf
fadd
cmp
adc
add
mov
inc
call
popa
movsl
cmpsb
push
mov
mov
scas
add
cmpsb
cmp
mov
sbb
xor
sbb
call
and
mov
add
cmc
pop
popa
xlat
cld
das
scas
je
mov
or
imull
call
fucomp
or
and
dec
cmpsb
cmp
movsb
mov
fcoml
lock
cmp
xchg
jmp
das
scas
jno
add
out
push
mov
lret
out
scas
lods
stos
fs
stos
inc
cmp
cmpsl
or
stos
cmp
stc
sub
cmc
xchg
push
ret
dec
inc
mov
sub
xlat
outsb
testl
cmpsl
call
faddl
mov
add
jno
inc
out
dec
pop
movsb
shrb
stos
test
sti
inc
cmp
and
dec
cltd
pop
pop
movsb
xchg
mov
stos
jl
sub
mov
or
jns
push
ret
dec
cmpsb
mov
in
push
adc
dec
jne
fcomps
jbe
sub
push
daa
stos
scas
fsubrs
aad
push
pop
ljmp
add
xchg
imul
jge
cwtl
mov
scas
enter
mov
in
mov
fidivrs
inc
mov
sub
push
sub
cmp
lahf
adc
adc
test
and
lds
sub
into
lcall
aam
in
scas
mov
and
mov
repz
in
inc
sub
mov
mov
adc
movb
adc
sub
cmpsl
mov
sub
cmp
pusha
pop
mov
or
cmp
xchg
mov
jecxz
and
adc
or
cmp
or
daa
popa
xor
push
leave
mov
cmpsb
clc
mov
mov
pop
cs
xchg
fsubs
ljmp
jnp
and
mov
mov
mov
fsubrs
push
inc
clc
or
mov
cmc
data16
cmp
in
lahf
lock
lret
es
or
sub
jbe
test
inc
mov
jecxz
push
lds
adc
imul
cmp
jne
push
xchg
fisubl
mov
gs
adc
mov
push
push
aam
push
cmp
clc
or
ljmp
mov
fdivp
mov
lods
dec
ret
and
hlt
data16
sub
mov
daa
ds
jecxz
icebp
and
mov
inc
cmp
shrb
call
daa
mov
hlt
xor
sub
jg
fisubs
ljmp
gs
scas
rolb
mov
mov
sbb
fimull
mov
or
inc
and
das
pusha
mov
jo
shr
jecxz
jae
fbld
mov
test
sbb
in
mov
mov
outsl
adc
pop
xchg
stos
or
cmpsl
ljmp
cwtl
jbe
sbb
gs
rorl
in
xlat
daa
add
mov
mov
ljmp
pusha
je
leave
sbb
outsb
jmp
xor
lods
les
and
std
xchg
hlt
xor
ljmp
mov
fmuls
cmp
pop
aas
push
sub
or
sub
sbb
daa
cltd
lods
mov
mov
dec
lods
rcl
daa
jo
or
out
test
imul
xchg
out
daa
nop
andb
adc
lods
imul
cmp
mov
jecxz
in
imul
mov
out
fbld
mov
mov
sbb
pop
out
push
sub
cmp
mov
hlt
bswap
xchg
sub
pop
sbb
xlat
shlb
add
clc
xchg
mov
jcxz
daa
push
mov
sahf
sub
iret
and
dec
movsl
push
int3
inc
mov
in
cs
sbb
push
dec
sbb
cmpsl
pop
sub
outsl
sbb
scas
push
xchg
fldcw
xor
int
gs
lods
xor
adc
or
aaa
out
dec
xor
leave
subb
push
aad
stos
add
les
aaa
push
push
gs
les
xlat
hlt
je
pop
sbb
fistl
push
test
cwtl
sub
ds
push
std
push
imul
in
popf
jmp
cmc
daa
lret
and
lahf
adc
fcmovbe
add
imul
call
sbb
mov
mov
jg
daa
push
es
inc
adc
pushf
fcomps
or
das
lock
cs
fwait
enter
scas
cli
add
in
add
dec
xchg
lods
daa
pop
cmp
das
pop
iret
enter
dec
push
shlb
fnsave
int
sub
ret
and
rcll
sub
ror
add
daa
mov
icebp
lds
fistpl
add
mov
andb
jecxz
dec
xor
out
mov
int
cmp
and
add
sub
je
clc
jl
pop
and
xchg
sti
cmp
add
adc
mov
loopne
lea
mov
push
clc
nop
mov
lret
sub
call
std
inc
ret
mov
imul
daa
mov
mov
lods
add
clc
ss
pop
sbb
sbb
pusha
lret
iret
sbb
mov
cmpsl
daa
add
cld
movsb
daa
mov
fstpl
pop
std
mov
push
sub
stc
add
imul
out
shrl
daa
pop
dec
sbb
mov
push
sbb
mov
sub
sbb
xchg
sti
inc
scas
mov
xchg
out
stos
das
test
daa
xchg
ficoms
enter
js
push
daa
mov
dec
cwtl
adc
and
sarl
shll
mov
in
scas
divl
aam
xchg
cmp
cmc
outsl
movsb
dec
jecxz
push
popf
je
xchg
sub
stos
aad
ljmp
jecxz
aaa
or
mov
cmpsl
fdiv
inc
or
pop
jmp
xor
mov
push
fsubrl
add
movsl
push
cmp
popf
inc
add
jg
cmp
xchg
adc
mov
sub
sub
pop
ljmp
dec
rcrb
daa
cmc
in
icebp
adc
pop
pushw
sbb
cmp
pusha
leave
dec
jge
clc
sub
mov
mov
leave
mov
daa
lods
popa
pop
fstpl
sub
mov
lahf
pushf
mov
fcmovu
xor
daa
cld
imul
xor
sub
xor
movsb
daa
pop
movsl
cmpsb
loopne
and
hlt
daa
dec
lahf
mov
inc
call
movsl
mov
push
add
sahf
xchg
in
inc
push
cmp
mov
push
iret
ret
js
ljmp
push
sbb
fbld
lret
out
test
mov
loope
test
leave
daa
stos
in
fmulp
cmp
shlb
test
push
pop
xchg
dec
fsubr
push
fldl
add
xchg
scas
out
lret
cmp
hlt
jecxz
mov
cltd
mov
subb
mov
std
daa
jb
push
fsubl
rolb
daa
add
jne
cmpsb
daa
push
idivl
nop
pop
mov
popf
jb
insb
sarb
lret
jae
pop
std
mov
sahf
shlb
jno
cmpsb
cld
daa
push
pop
jge
mov
pusha
stos
jo
pushf
sub
add
dec
mov
test
dec
adc
daa
divl
push
or
cmp
push
pop
test
sub
imul
mov
cmp
lahf
mov
pushf
neg
pop
add
inc
jbe
daa
mov
sti
enter
scas
dec
or
daa
adc
scas
xchg
daa
push
loope
cmp
and
rcr
rorb
sbb
imulb
pop
push
ds
mov
mov
stc
mov
call
mov
movsl
lock
sub
ljmp
stc
xchg
xor
pop
jge
aas
adc
les
mov
in
jnp
xor
mov
dec
idivl
das
push
fistpl
inc
les
popf
xor
dec
daa
fsubl
sub
fcomp
fbstp
aaa
movsb
sub
cwtl
adc
test
movsl
cwtl
cmp
jne
mov
shrb
popa
add
fmul
push
xchg
or
jle
rcrb
ret
mov
shlb
leave
int3
and
sbb
mov
mov
xchg
and
decl
enter
and
daa
lods
test
mov
jno
xor
mov
leave
sub
pushf
clc
fsts
dec
mov
imul
sub
enter
scas
lret
ret
jne,pn
out
xchg
insb
shr
daa
or
xchg
sub
daa
int
add
dec
push
addb
push
sbb
fdivs
xor
jbe
mov
lds
mov
mov
pop
daa
outsb
push
sbb
pop
int
adc
add
leave
movsl
stos
dec
fcmovnbe
test
test
xor
sub
inc
or
imul
daa
in
sub
daa
fsubl
xchg
aaa
mov
and
fistpll
out
daa
adc
xor
cmpsl
clc
jbe
call
fstp
cld
cmp
call
mov
fidivrs
clc
and
or
jo
shrb
daa
js
in
clc
mov
cmpsl
push
sub
cmp
mov
fstl
jg
xor
daa
mov
dec
insl
xchg
push
jp
sub
fidivrl
call
jb
or
or
cmp
enter
adc
out
mov
pushf
xchg
fcoms
add
inc
daa
iret
mov
enter
mov
adc
ret
lcall
and
sub
repnz
adc
push
aad
jecxz
ret
daa
pop
testb
outsl
sub
xchg
sub
enter
adc
shrb
pop
mov
xchg
and
add
leave
dec
cmp
jmp
out
jb
or
push
pop
jle
adc
xchg
or
fsubl
sub
lahf
pop
daa
push
negb
aam
mov
cmc
xchg
mov
sub
daa
mov
add
outsb
rcr
test
cmc
mov
dec
and
daa
mov
push
pusha
les
enter
mov
test
mov
mov
and
cld
mov
xchg
sub
xchg
mov
call
mov
mov
lods
cmp
lods
xchg
call
sub
daa
pop
mov
xchg
ss
xchg
adc
loop
sahf
add
fcompl
pop
iret
daa
add
dec
sbb
mov
pop
adc
fnstsw
pop
jnp
insb
outsb
js
push
out
lods
and
lret
test
nop
jmp
imul
push
mov
push
or
push
test
jne
lds
mov
inc
jecxz
xor
lods
test
in
ret
ljmp
mov
scas
fsubrl
leave
mov
in
clc
leave
lock
ja
cmp
frstor
lods
movsl
cli
out
sarb
fsts
mov
call
enter
sub
shlb
mov
and
mov
test
dec
inc
lock
cmp
daa
js
fdivr
mov
lods
add
outsb
mov
mov
cmpsl
cmp
add
lock
enter
jge
rcrl
shlb
das
leave
dec
jns
fmuls
lret
cmp
je
pop
inc
jbe
sub
xchg
hlt
inc
decl
js
jmp
mov
ljmp
jbe
lahf
jl
daa
mov
xor
iret
into
leave
and
adc
dec
cli
push
leave
fcoms
cld
imull
movsb
outsb
daa
cmp
outsl
sub
leave
daa
mov
sbb
fisttps
stc
xchg
dec
out
pop
sub
pop
sbb
jne
mov
mov
cmp
js
sub
xor
daa
mov
fdivrs
fsubl
dec
fnstsw
movb
and
in
dec
clc
rcrb
mov
mov
lods
js
and
adc
daa
rolb
add
mov
fdivl
push
insl
sub
outsb
ds
ljmp
cld
mov
movsl
add
enter
popa
sbb
test
inc
daa
mov
xor
push
pop
dec
in
daa
pop
jne
test
and
imul
pop
pop
inc
stos
dec
call
clc
outsl
movsb
xchg
nop
dec
fadds
cmpsb
sub
cmp
sub
sbb
and
xor
mov
out
pop
mov
mov
call
adc
stos
push
or
int
iret
fbld
cmp
stos
test
mov
lock
movsb
mov
mov
jmp
mov
test
or
pop
sub
stos
ret
out
xchg
push
stc
mov
mov
movsl
jnp
mov
cs
pop
shrl
sub
lret
sbb
out
shrl
xchg
out
jmp
mov
das
mov
sahf
subb
in
out
daa
fwait
mov
jns
xchg
dec
adc
jnp
add
cmp
and
mov
mov
jge
arpl
test
scas
and
movsb
fldt
fadds
and
sub
lret
dec
push
sbb
mov
out
les
mov
and
mov
imulb
push
mov
sub
movsb
lds
mov
rorb
and
jmp
stos
pop
pop
fmul
xor
les
jmp
lcall
sti
pop
dec
push
mov
mov
jp
sub
jmp
xor
xor
aaa
mov
imul
push
dec
and
sub
das
xchg
sub
sti
cmp
jmp
dec
mov
mov
or
push
push
sub
sbb
ja
imul
movsb
sarb
iret
adc
adc
pop
lret
mov
enter
stos
sahf
cs
outsb
adc
repz
arpl
mov
shrb
outsb
dec
clc
sub
add
cmpsb
icebp
ja
jmp
pop
stos
dec
mov
test
cs
loope
push
and
mov
imul
mov
pop
mov
fildl
push
mov
jmp
sub
fwait
inc
mov
pop
sub
sub
or
pusha
and
out
jb
clc
mov
iret
pop
out
xor
mov
ficompl
cmp
and
sub
repnz
and
fcomi
xchg
push
jns
jmp
rorl
sbb
jecxz
adc
clc
pop
lret
pop
or
or
mov
lock
push
cmp
and
or
sub
int3
repz
pop
rcrb
fwait
cs
ret
aad
movsl
orl
pusha
push
mov
mov
add
xor
fcmovne
clc
and
stos
dec
ja
cmp
inc
cs
adc
pop
popf
and
adc
clc
seta
inc
push
adc
push
neg
push
xadd
stc
dec
shld
push
cmp
sub
sub
mov
mov
or
mov
push
add
jp
rcl
mov
not
push
sbb
xor
lea
not
xchg
lods
sar
jmp
adc
fiaddl
pushf
or
dec
mov
mov
and
sbb
bswap
cs
ljmp
mov
mov
and
mulb
andb
sub
cmp
and
test
xor
jle
mov
fldl
popf
jmp
not
pop
not
movzbw
push
mov
pop
movsbw
bswap
mov
mov
mov
pushf
movb
pushl
ret
inc
lea
pusha
mov
lea
call
jmp
clc
dec
int
jecxz
mov
cltd
adc
pop
outsb
popf
out
vsqrtps
enter
sub
mov
xchg
js
xor
fcomi
xor
cltd
lret
adc
push
pop
out
in
push
dec
add
push
sub
addr16
ret
aam
mov
xchg
pop
mov
inc
std
cmc
rol
mov
cmp
add
call
pushf
pushl
pusha
xchg
pushf
pushf
jmp
dec
sahf
sbb
jl
lock
loope
fldl
call
sub
pop
daa
imull
insb
bnd
das
add
mov
cltd
repz
mov
leave
cmpsb
pop
aad
push
sbb
xchg
fdivs
scas
jnp
sub
cmp
ja
shlb
icebp
dec
loopne
in
adc
je
test
pop
fsubr
iret
cmp
xchg
cmp
aas
cmpsb
or
mov
bnd
cmpsb
aas
mov
ret
fsubrs
jg
ss
loopne
cmp
js
aas
in
dec
dec
ret
test
and
add
pop
cmp
mov
mov
mov
add
xor
stos
pushf
lea
jmp
popf
cpuid
nop
jmp
jne
gs
xor
fs
insb
add
cwtl
mov
sbb
adc
dec
xchg
stc
insb
ficompl
or
inc
cli
insl
negb
cmp
dec
add
jno
xchg
push
add
cmp
inc
fcomip
sahf
xor
insb
mov
movsb
sbb
bound
int
in
fcomi
cld
xor
sub
xchg
call
fisubs
call
and
mov
movsl
cwtl
inc
dec
sub
sub
xor
push
jnp
sub
mov
cs
mov
and
pop
cld
fistps
scas
fisubs
das
ds
clc
or
push
in
sar
adc
pop
cwtl
es
daa
mov
int
pop
mov
sub
mov
xchg
xchg
cli
push
mov
in
sar
call
pop
cwtl
mov
or
pop
loope
sti
pop
leave
clc
test
es
xor
mov
data16
fsubrl
outsl
inc
push
jecxz
push
jl
cs
daa
mov
and
jp
cltd
inc
pop
sbb
pop
sbb
xchg
pop
mov
mov
pushf
movl
pushl
pushf
lea
jmp
rcll
jl
imul
sti
pushf
pop
push
in
dec
cmp
jb
xchg
out
cmp
adcl
lret
roll
inc
push
fmul
clc
cmp
ds
sbb
push
stos
add
sub
inc
incb
or
and
cmpsl
push
enter
pop
mov
jns
int3
shll
je
mov
jae
addr16
scas
outsl
imul
dec
fwait
cmpsb
stos
sbb
outsb
mov
les
ret
ljmp
inc
insb
cmc
imul
cmp
clc
sub
sbb
jne
xor
jo
test
test
frstor
dec
cltd
cmp
call
mov
lret
cmp
je
loope
filds
das
leave
jnp
mov
fcoms
ljmp
xor
jo
cmc
add
aaa
outsl
stos
mov
inc
lret
and
jle
int3
inc
mov
add
test
and
das
inc
incl
add
imul
jae
jmp
not
pushl
cmc
call
shr
jmp
jnp
jbe
jl
sub
aas
jb
paddd
pop
mov
cltd
movsl
xor
xchg
and
mov
pop
test
je
sti
test
xlat
sbb
aaa
movsb
testl
lds
outsb
add
es
mov
insb
out
jnp
mov
mov
xchg
pop
mov
mov
jl
lret
sub
mov
jo
xchg
sbb
out
xchg
push
jae
xor
adc
sub
and
xchg
imul
test
jmp
cltd
mov
add
inc
push
ret
adc
rcr
bound
out
mov
push
pushf
push
movl
pushl
movb
call
enter
ret
cmp
lods
in
arpl
ds
scas
adc
imul
sbb
pop
xchg
pop
pop
daa
xchg
fwait
les
or
shr
mov
ljmp
repz
rol
xor
fs
xchg
pop
mov
imul
jae
arpl
and
push
mov
iret
mov
sbb
incb
mov
cmc
loop
jp
aaa
jmp
and
movsb
jo
jl
hlt
and
fwait
imul
je
sub
jecxz
push
idiv
popf
push
dec
jb
out
out
cmpsl
xchg
fdivrs
fidivrl
je
subl
push
sbb
sbb
dec
and
xor
dec
outsl
mov
jne
out
cmpsl
lret
in
push
pop
and
jo
test
js
and
cmp
dec
fsubl
cwtl
out
sbb
popa
and
mov
xchg
and
out
and
inc
popa
shll
dec
ss
sbb
jmp
fistl
mov
in
insb
xor
or
and
xchg
test
xchg
sub
gs
mov
adc
bound
into
cmp
push
hlt
dec
xor
pop
mov
ljmp
movsb
sbb
repnz
pop
mov
bt
xor
lea
pushf
jmp
pusha
lea
ja
push
movl
pusha
movw
push
lea
jmp
movw
call
lea
je
call
nop
jae
xor
ss
insl
pop
ret
mov
cmp
mov
fldl
inc
lahf
or
cmp
inc
or
cmp
lods
xorb
aam
mov
mov
cld
repz
and
lret
loopne
cmpsb
sub
pop
movl
xor
ss
mov
lret
in
out
mov
cmp
arpl
mov
lcall
mov
insb
xchg
in
repnz
jno
das
scas
gs
cmp
or
mov
js
cmp
ror
sub
sub
movsl
adc
mov
rcrl
push
xchg
pop
mov
lods
pop
xchg
adcl
or
jp
testl
xchg
aaa
mov
sbb
stos
adc
push
jae
pop
xor
pop
push
add
pop
xchg
mov
lahf
rclb
sahf
pop
inc
test
fiaddl
sub
loop
sub
daa
out
jb
dec
adc
mov
lcall
rclb
push
fs
mov
outsb
or
push
adc
lods
sub
leave
push
pop
jb
ljmp
fsts
into
das
adc
jl
mov
push
mov
scas
repz
mov
outsl
pop
cltd
mov
cwtl
mov
pop
sbbl
cs
pop
mov
lock
hlt
sahf
or
in
mov
add
fadds
mov
test
mov
cmpsb
lea
jb
or
stos
sbb
popf
push
mov
mov
insb
or
mov
fucom
xchg
add
jnp
popa
add
insb
inc
mov
push
into
lods
lods
xchg
fwait
mov
cmp
mov
iret
mov
mov
mov
xor
dec
inc
aad
mov
insb
inc
loopne
cld
fiadds
in
fdiv
fiadds
adc
mov
xor
mov
iret
rcl
pop
sub
push
out
bound
ror
popf
pusha
dec
loopne
pop
cmp
cmpb
jb
xor
cli
sub
dec
fists
and
jge
das
mov
movsb
mov
pop
lds
mov
adc
sahf
addr16
fcompl
sub
lahf
sub
pop
arpl
call
cmc
incl
add
add
lods
clc
push
push
rcl
inc
shld
mov
mov
bswap
setle
sub
call
movl
push
pushf
mov
pushf
lea
jmp
popa
dec
sub
jb
and
xchg
sahf
lahf
scas
out
lods
es
es
fcmovnb
shll
adc
loopne
xor
fiadds
sub
and
mov
jbe
push
and
fisttpl
add
push
pushf
inc
movw
jmp
popf
cmpsb
stos
mov
jne
cmp
mov
cs
fsubp
push
or
push
loop
orl
cmp
mov
sub
inc
outsb
pushf
lds
addr16
jae
out
pop
stc
cmc
xor
es
mov
sahf
xchg
mov
fcmovb
cmp
int
rorb
xor
cli
mov
push
in
add
loop
aaa
push
hlt
adc
sbb
cwtl
jb
out
xor
push
mov
xchg
mov
lea
dec
pop
jecxz
loope
push
pop
push
out
fwait
push
jae
mov
push
icebp
popf
push
jne
in
or
sub
pop
or
inc
cli
fiadds
mov
mov
add
push
jno
cld
inc
cmp
arpl
cmp
or
and
int
xor
int
outsl
lret
push
mov
mov
das
push
mov
fistl
xor
ljmp
out
mov
xchg
jp
aam
std
pop
aam
shrl
inc
mov
fidivrl
add
out
dec
inc
jg
shr
imul
and
push
pop
jecxz
push
ds
popa
movl
adc
iret
outsl
xchg
pop
mov
fs
ret
jmp
aad
mov
jo
mov
or
adcl
pop
addr16
es
pop
out
cli
test
jae,pn
xor
xchg
jp
divl
movb
and
push
xlat
add
into
push
repz
nop
sarb
rcr
insl
jnp
sub
aad
out
pop
mov
xchg
pop
mov
mull
insb
adc
ficoml
jmp
mov
cmpsl
adc
jl
or
movsbl
mov
pushf
pushl
mov
pusha
jmp
pushf
call
clc
daa
xchg
sub
mov
push
loopne
sbb
push
pop
push
mov
jo
in
push
test
outsl
fdivr
push
mov
sbb
pop
mov
inc
sub
dec
outsb
xchg
adcw
jecxz
mov
mov
pop
mov
fnstsw
xchg
popf
add
or
adc
push
je
pop
xorl
nop
lcall
mov
cmpsb
pop
cmp
cmp
lcall
out
adc
fiadds
jne
repz
dec
outsb
push
test
add
andl
jb
fists
xchg
pop
mov
shlb
popw
or
mov
push
cmc
movb
xor
pusha
bt
mov
movw
rol
stc
clc
stc
not
pushf
call
or
xchg
movsb
fldl
enter
and
in
dec
jno
popf
loopne
mov
inc
add
sbb
pop
add
xchg
call
cmpsb
xchg
add
ret
cmp
pop
mov
sub
push
lea
call
jmp
xor
sub
mov
jae
mov
cmpsl
xlat
js
stos
das
mov
pop
stc
lahf
es
das
adc
out
xchg
jnp
mov
rcl
xor
std
out
mov
adc
mov
adc
cmpsb
or
jnp
sbb
xchg
sahf
xor
mov
imul
loopne
pop
jmp
sahf
cltd
lret
orl
inc
add
out
push
xchg
cwtl
sbb
fimuls
pop
pop
cmp
into
mov
sbb
and
and
fisttps
add
push
pop
std
push
daa
mov
fsubr
dec
mov
movsb
push
test
inc
ja
fdivs
and
inc
fidivl
jecxz
xor
mov
sbb
lods
cmpsb
push
in
push
xchg
sub
xor
pop
push
xor
jo
sbb
or
data16
clc
cmp
pop
orl
sbb
clc
lods
jmp
mov
xchg
aad
clc
xor
dec
fwait
jo,pn
sbb
jno
repz
movsb
sbb
inc
mov
popa
jl
imul
inc
pop
mov
fsubrs
clc
xor
aas
stc
arpl
jo
sbb
es
push
mov
and
scas
rol
pushf
pushf
call
push
pushf
mov
movl
pusha
call
pusha
lea
jge
adc
pushf
pusha
lea
jo
pusha
lea
call
pushf
mov
jmp
and
inc
dec
jbe
test
data16
sbb
sarl
insl
pop
repnz
enter
cmpsl
mov
or
cltd
in
shl
arpl
arpl
and
cmpsl
test
nop
and
fsubrl
inc
pop
sti
popa
jl
jno
shrb
push
jae
in
dec
xor
loope
into
xchg
push
mov
insb
pushf
dec
sub
jnp
cmp
pushf
cwtl
roll
outsl
push
xchg
xlat
add
jne
cld
xchg
int3
sbb
int3
inc
cmpsl
add
sub
pop
jle
mov
bound
loope
sub
and
repz
shll
or
dec
stos
shll
fmuls
clc
arpl
popa
xor
push
in
xor
ss
ds
in
dec
outsl
xchg
pop
andb
xor
call
movl
pusha
lea
jmp
pusha
pushl
lea
call
jmp
movzwl
lea
push
call
pusha
pushf
lea
ja
jmp
pusha
jmp
pusha
jmp
sbb
or
shrb
mov
js
nop
mov
adc
shrl
test
xchg
js
out
inc
fldenv
mov
and
jae
ss
lret
fsubr
arpl
pop
bnd
mov
jge
testl
xchg
lds
lea
test
push
call
clc
sub
bswap
xchg
mov
add
neg
mov
or
mov
shr
shl
shr
bsf
shl
stc
jmp
push
inc
pushf
pushf
mov
mov
lea
jmp
pusha
mov
movl
pushl
pushf
movl
pushf
push
pushf
lea
jmp
neg
rcr
shl
or
mov
cmc
push
and
pushf
add
pusha
lea
jmp
xchg
pusha
pusha
movl
push
pushl
movl
movl
lea
jmp
jb
push
xchg
xor
xor
mov
sub
mov
cs
add
add
imul
adc
xor
in
xor
js
sahf
mov
mov
dec
pushf
cmp
add
sahf
imul
adc
lds
xchg
stc
das
scas
rcrb
mov
jbe
loope
xchg
mov
sub
scas
loopne
mov
pop
testb
mov
ss
jle
cmp
push
mov
sbb
mov
jbe
adc
sub
sbb
sbb
ljmp
pop
negb
pop
pop
xlat
mov
in
xchg
pop
test
and
adc
push
add
adc
dec
fs
add
add
add
add
je
pusha
pushf
pushf
push
lea
jmp
mov
test
aam
cmp
fistpll
cmp
xchg
les
xchg
and
add
and
enter
push
inc
sbb
mov
into
dec
xchg
mov
jae
icebp
icebp
negb
push
inc
insb
lods
out
fcos
negl
ret
in
repnz
add
ds
test
mov
and
andb
lock
out
push
insb
jnp
addb
sub
cmp
inc
jbe
hlt
sti
stos
xchg
pop
test
dec
push
lret
push
dec
dec
leave
lock
mov
inc
jmp
pusha
mov
jnp
mov
scas
adc
mov
pop
adcb
cmp
xchg
jp
and
xor
les
mov
ret
out
lcall
mov
div
and
int3
in
dec
shl
pop
test
adc
fs
jne
pushf
jmp
pop
into
dec
mov
pop
mov
and
xor
mov
add
xchg
adc
push
fcomps
xor
xor
aam
inc
out
mov
movsl
xor
ret
mov
mov
sbb
push
mov
out
dec
insb
int
roll
mov
aad
push
or
enter
jl
pop
adc
fs
out
in
pusha
imul
pop
insb
icebp
lea
shrb
adc
es
push
jg
xor
dec
pop
scas
mov
ljmp
xchg
ficoml
lret
inc
jno
or
in
pop
jae
rolb
cmpsl
mov
or
inc
pop
xor
js
pop
lahf
jge
lcall
adc
cwtl
mov
jnp
daa
cmp
xchg
pop
xchg
pop
movb
pushf
jmp
movl
pushf
pushf
movw
lea
jmp
test
movsbw
sub
push
mov
pushf
push
mov
movzbl
push
mov
jmp
jmp
call
call
pushf
pusha
pusha
mov
call
mov
bswap
pop
push
movb
pusha
pushl
ret
jmp
test
test
cmp
push
mov
call
neg
mov
xor
pushf
pusha
rol
shl
xor
stc
not
rcr
neg
push
pushf
lea
jo
mov
stos
mov
pushf
pusha
mov
lea
call
lods
lock
imul
and
jg
mov
inc
cmp
jb
push
push
lds
mov
fwait
or
and
dec
jb
add
stos
sbb
std
insl
xor
push
lods
je
adc
jae
xchg
mov
or
inc
add
jmp
push
push
enter
pop
pop
frstor
fldt
faddl
mov
pop
lret
inc
adc
incl
jb
in
mov
inc
inc
aad
repnz
addr16
xor
lret
mov
lahf
out
mull
and
jmp
pop
shll
pusha
mov
jg
in
cmp
shl
dec
insb
addb
mov
out
dec
out
xor
mov
dec
mov
xor
rorb
stc
dec
scas
orl
xlat
dec
or
dec
mov
jp
fucomp
and
pop
les
cmp
loopne
jp
push
ficomps
cs
dec
imull
outsb
sbbl
pop
arpl
enter
and
je
push
push
lea
jmp
lea
call
call
setnp
bt
ror
rol
mov
xor
not
sub
jmp
pushf
movb
inc
pushf
push
pusha
mov
jmp
not
mov
lea
pushf
lea
call
pusha
adc
lea
jne
jae
pusha
jmp
jg
jno
add
std
pop
es
cli
pop
xor
loopne
and
divb
clc
popa
push
clc
mov
adc
fsubrl
aam
or
or
dec
mov
sub
pop
dec
mov
aaa
xchg
enter
xchg
inc
in
push
bound
popl
xchg
stos
in
out
icebp
insb
mov
push
cmc
stc
lods
jnp
mov
pop
inc
jge
xor
rorb
dec
add
xorb
xor
mov
mov
jl
testl
sbb
cld
adc
xchg
lock
add
mov
test
call
leave
pusha
pushf
lea
jmp
lea
jae
pusha
push
stos
pushf
pushf
lea
jmp
clc
jae
clc
bt
add
pushf
jmp
push
jmp
pop
jnp
sub
xchg
mov
cltd
inc
and
scas
jae
and
rcr
ljmp
in
xchg
cmpsl
or
jp
nop
ror
mov
xchg
xchg
pop
mov
sahf
loopne
movl
pushf
pusha
call
rol
adc
btc
add
shl
btc
xor
btr
mov
push
test
jmp
cmp
stc
cmp
pusha
push
lea
jb
cmp
clc
cmp
push
cmp
pushl
pusha
push
jmp
cld
in
inc
xor
mov
inc
pop
stos
mov
fistl
mov
imul
inc
mov
cmp
push
cmp
enter
xchg
pop
mov
lret
sub
imul
call
std
jl
fwait
xor
popa
adcb
sahf
jno
negl
out
pop
xchg
sbb
fs
mov
fs
pushw
push
fcomps
cmp
xor
mov
clc
movsl
outsl
sbb
pop
movsb
inc
and
popa
test
mov
mov
cmp
loope
pop
icebp
into
cwtl
mov
movsl
ds
push
mov
cmp
adcb
inc
std
push
pop
push
mov
imul
or
adc
stc
fcompl
xlat
out
scas
sub
xor
and
out
or
xor
add
xchg
test
aad
add
adc
movsl
cmp
popa
jns
ja
mov
sub
jns
pop
fwait
mov
and
fildl
adc
iret
dec
shll
adc
incl
testb
loope
fidivrs
into
decl
orb
int3
pop
aas
es
icebp
pop
xor
inc
mov
dec
loop
dec
sbb
daa
imul
aad
sub
mov
mov
cmp
clc
adc
pop
mov
add
nop
and
sbb
dec
cmpsb
lret
inc
dec
sub
lfs
mov
pushf
sbb
inc
adc
mov
mov
out
cld
inc
inc
mov
dec
ja
in
je
jge
ljmp
jmp
fisttpl
js
ficoml
inc
shrb
loop
lock
in
mov
sar
outsl
lret
stos
mov
push
faddl
ficompl
js
mov
or
xchg
mov
mov
pop
lea
cmpb
xchg
scas
jae
push
cmp
jno
add
outsl
lret
inc
loop
fildl
ficompl
sbb
dec
pop
cmp
stos
mov
xor
mov
lahf
fisttpll
leave
jmp
sub
mov
mov
jg
mov
adcl
je
cmp
dec
sahf
pop
xor
mov
rorb
add
enter
and
xor
repnz
xchg
mov
mov
pop
lea
pusha
std
inc
inc
and
sub
dec
pop
pushl
lea
jmp
lea
movb
pushf
jmp
call
mov
jmp
call
mov
jmp
cld
pushf
pop
sbb
fsts
mov
xor
js
fiadds
inc
out
inc
mov
push
insl
imul
jae
pop
push
cmpsl
inc
push
adc
fimuls
dec
or
push
mov
jno
loope
jno
frstor
inc
push
fists
jno
ss
scas
dec
inc
adc
es
dec
leave
xor
movsl
push
inc
pusha
loope
arpl
push
cmp
mov
arpl
cmp
sub
push
adc
dec
scas
rcll
cmpsl
pusha
lods
cmp
xor
stc
jmp
add
jmp
push
jmp
cmc
bt
cmc
mov
pusha
test
jmp
test
cmc
cmpsl
ret
or
in
scas
in
testl
ret
pop
iret
pop
push
into
sub
into
lcall
scas
xchg
js
out
fcoml
sbb
cmp
cmp
daa
decl
outsb
xlat
clc
std
jo
mov
push
adc
and
lds
call
or
xor
insl
rcrb
dec
mov
xchg
and
outsb
jg
sbb
push
xor
push
cltd
inc
jl
jecxz
jno
xor
sub
mov
inc
aam
and
fsubs
das
jae
or
adc
mov
xor
imul
cmc
adc
call
call
test
cmp
aam
aas
mov
pushf
shl
pusha
pushf
mov
pushl
lea
je
pusha
mov
movb
jmp
lea
call
pushf
mov
pushl
push
lea
jmp
sbb
mov
flds
push
mov
sbb
cmp
les
mov
xchg
jp
pop
outsb
out
xchg
sub
shll
push
popa
fcomi
mov
movl
leave
imul
movsl
int3
sub
fdivrl
cmp
outsl
xchg
pop
mov
pop
movb
lea
je
movzbl
lea
pushf
movzwl
pop
lea
pusha
pop
lea
pusha
lea
mov
pushf
movb
jmp
push
dec
stc
jmp
jmp
sbb
dec
adcl
out
popa
pop
jg
in
mov
mov
pop
aam
ss
fs
adc
mov
mov
cmc
xorb
leave
jnp
pop
mov
mov
pusha
pushf
jmp
jae
pusha
push
stc
sub
push
pushf
jmp
xor
dec
jle
fsubl
jns
rcl
mov
mov
inc
cmpsb
mov
dec
jns
dec
inc
mov
mov
dec
hlt
cwtl
jbe
fs
test
sbb
ljmp
or
push
icebp
stc
fs
mov
fidivl
enter
repz
ret
jle
push
mov
or
imul
jl
cmp
scas
int
mov
arpl
mov
mov
cmp
push
xchg
pop
into
mov
inc
xlat
or
mov
arpl
dec
cmpsl
mov
dec
dec
les
pop
xchg
stc
push
test
fs
je
stc
bt
push
add
movw
jmp
movl
pushf
pushf
pushl
lea
jmp
cltd
or
jl
ja
int
fwait
scas
lock
sbb
bound
xchg
inc
shr
popa
xor
fcmovne
jb
adc
ror
mov
lock
lock
jae
cli
ja
pop
xor
test
repnz
mov
inc
pop
aam
inc
enter
adc
mov
or
jge
mov
hlt
es
scas
or
pop
cmp
mov
aad
add
or
push
rcrl
frstor
jne
repnz
ret
lock
mov
mov
shlb
jne
sub
imul
out
rcr
mov
xchg
movl
lock
push
cmpsb
div
test
lock
jle
nop
icebp
fs
out
iret
mov
mov
cmp
jle
test
in
int3
das
fistl
pop
mov
sti
test
test
cwtl
inc
divl
xor
xchg
stc
loope
pop
sbb
dec
and
jmp
popl
inc
lods
faddl
insl
jno
sub
mov
stc
adc
dec
sub
nop
xchg
das
jbe
or
mov
cmp
jecxz
xchg
in
test
pop
mov
xor
imul
adcl
int
mov
sbb
dec
sub
sbb
mov
rorl
icebp
out
jmp
xlat
es
push
inc
enter
push
mov
mov
xchg
jmp
sub
sarl
addr16
mov
dec
inc
jecxz
inc
lea
and
xchg
in
add
xchg
mov
das
std
insl
arpl
in
sarl
addr16
and
xchg
call
sub
cmpsb
pop
pop
or
test
lret
jne
repz
fprem1
mov
in
adc
push
outsl
sbb
add
jae
adcb
xchg
pop
xchg
stos
lock
add
fs
imul
add
andb
shlb
rolb
arpl
jo
xchg
mov
cs
es
xor
jns
jl
mov
add
push
mov
jae
and
mov
push
pop
mov
xor
insb
in
sbb
and
xor
insl
setbe
add
push
inc
push
data16
cmp
cmp
jmp
mov
aam
js
jl
ret
and
dec
cltd
and
and
test
dec
mov
mov
inc
xchg
ret
popa
pop
pop
popa
lock
xchg
nop
cmpsl
aas
push
lahf
push
das
shrb
xor
int3
mul
or
es
mov
aas
inc
dec
bound
int3
pop
xor
cld
aad
cli
fstpt
or
xor
pushf
add
dec
push
lods
int
push
int3
ret
jo,pn
and
or
cs
adcb
add
xor
push
xor
sbb
shr
sahf
dec
je
push
fucomi
or
mov
pop
xor
xchg
pop
xchg
xchg
btc
inc
btr
add
bswap
adc
shr
jmp
mov
call
add
mov
cmp
adcb
inc
push
fisttpl
pop
lcall
popa
mov
add
xchg
pop
inc
inc
sahf
out
cmc
icebp
int
push
popa
xor
out
adc
fsub
dec
pop
sub
xchg
popf
push
stc
inc
push
sub
sbb
in
loopne
pop
clc
sub
mulps
inc
fdivs
cld
shll
fidivrl
dec
aaa
leave
sbb
shr
inc
inc
stos
scas
pop
and
xlat
test
jmp
movl
clc
stc
not
mov
rol
pushl
inc
shl
xor
inc
bswap
cmp
add
neg
sub
bt
sub
mov
setne
rcr
mov
bsr
sub
btr
mov
shr
setp
adc
mov
cmp
add
bts
ror
ror
mov
movsbw
rol
cmc
movzbw
sub
not
call
neg
and
mov
test
sub
test
test
add
call
mov
pushf
pushl
lea
jmp
mov
pushf
pushl
repz
popl
bt
clc
cmp
mov
jmp
pushf
pushf
mov
mov
pusha
mov
pushf
xchg
pop
setno
jmp
clc
cmp
stc
mov
movb
mov
xchg
jmp
pushf
popl
movb
call
mov
pushl
pushf
popl
push
pushl
popl
movb
push
movl
lea
jmp
sub
clc
cmp
pusha
clc
shr
pushf
pushf
mov
jmp
call
clc
xor
pushf
clc
bt
bswap
pushf
cmp
neg
pushl
movw
push
push
lea
jmp
xchg
pushl
movl
pusha
mov
pushf
pushl
ret
pushf
popl
movw
lea
jbe
push
pushl
popl
pusha
mov
lea
jmp
pushf
call
lea
aaa
bsf
aaa
mov
btc
mov
pusha
pushf
bt
stc
add
call
push
not
pushf
cwtl
mov
not
mov
pop
movzbw
movzbw
movsbw
mov
pusha
movw
movl
pushf
pushl
ret
not
call
call
add
pushf
pushf
push
pusha
lea
jmp
dec
mov
stc
add
pusha
mov
pushf
lea
jmp
call
movzbl
lea
mov
push
bt
pushf
movb
ror
cmc
jmp
movb
pushl
mov
pushl
lea
jmp
movb
dec
clc
stc
cwtl
bt
sub
call
shl
and
mov
pushf
clc
add
pushf
mov
pusha
jmp
pushf
mov
pushf
pushf
lea
jmp
btr
cwtl
mov
pushf
call
jmp
mov
jmp
pusha
jmp
or
bts
bts
mov
pusha
lea
jne
add
push
lea
jmp
jmp
bt
mov
or
jmp
aas
mov
clc
add
pusha
pushl
pushf
mov
jmp
mov
mov
jmp
test
stc
add
pushf
lea
jmp
jmp
pusha
mov
mov
movb
push
movb
lea
jmp
not
pusha
pushl
test
and
pushf
call
mov
mov
push
mov
push
call
mov
pushf
pushf
movb
pushl
lea
jmp
movw
lea
ja
pushf
pusha
jmp
jmp
pushl
call
shl
pushf
pushf
pusha
mov
mov
pushl
jmp
push
pushf
cmp
pusha
lea
jne
shl
bswap
xorb
lea
bswap
pop
push
lea
jmp
jmp
pushl
popl
movb
pushf
lea
jmp
clc
rcl
neg
mov
test
or
add
not
mov
mov
push
mov
pushl
call
pushf
popl
push
pushl
popl
mov
lea
jmp
pushl
mov
jmp
pushf
add
mov
mov
pusha
mov
pushl
pushf
lea
jmp
clc
jo
pusha
cmp
pushl
push
pushf
lea
jne
ror
btc
sbb
xorb
pusha
mov
pushf
movw
lea
jmp
mov
movb
lea
jmp
sbb
xchg
neg
mov
test
add
add
xor
mov
rol
bswap
dec
setns
mov
inc
and
and
movsbw
not
sub
rol
bsr
clc
xor
lea
movzbl
pushf
pushf
lea
jl
mov
call
neg
dec
add
sbb
mov
pusha
xchg
push
cmc
sub
bt
ror
call
pushf
sub
call
ror
stc
push
sub
bt
add
movl
test
mov
sub
push
push
mov
pushf
lea
jmp
mov
pushl
cmp
cmp
mov
pushf
pushl
popl
movzbw
rol
movl
shl
sar
inc
shld
mov
jmp
jmp
call
movsbw
mov
dec
bswap
xor
push
mov
test
add
jmp
mov
jmp
dec
pushl
popl
shld
shrd
sar
pop
movl
stc
test
bsf
mov
push
push
jmp
xor
mov
inc
add
rol
mov
jmp
xchg
bsr
rcl
cwtd
mov
rol
xor
add
shrd
mov
call
mov
movb
pushf
push
movb
lea
jmp
call
sar
sbb
movzbl
shl
sub
mov
sub
not
adc
add
movzbw
jmp
shl
or
mov
rol
adc
mov
bt
stc
sub
test
call
pushf
popl
jmp
lea
mov
push
pusha
push
jmp
mov
cmp
clc
clc
xor
cmc
rol
pushf
pusha
inc
bt
pushf
pushf
stc
not
test
cmc
mov
xor
call
pusha
call
pusha
lea
js
jne
cmp
clc
bt
call
pusha
decl
jmp
movb
mov
cmc
sub
cmc
pushf
add
jae
cmp
shl
pushf
call
cbtw
mov
call
setg
sub
setle
mov
bsr
clc
bt
add
btr
setns
xor
pusha
dec
pusha
jmp
lea
jne
cmc
cmp
pusha
xor
movb
push
pushf
mov
xchg
mov
push
movl
push
call
jmp
cwtl
call
pushl
popl
pushf
movl
sub
mov
bt
jmp
push
pushf
push
pushl
popl
pushf
lea
jmp
not
jmp
pushf
sub
stc
pusha
stc
and
mov
pushf
popl
pusha
pushf
pushl
popl
pushf
lea
jmp
pusha
jmp
mov
call
movsbl
sar
shld
pushl
popl
call
call
rol
call
mov
call
jmp
lea
jne
pusha
pushf
mov
pusha
mov
lea
jmp
test
push
jmp
push
mov
pusha
pushf
mov
pushl
pushf
repz
popl
movb
pushf
movb
mov
pushl
cmp
xchg
test
bswap
pushl
popl
rcl
movl
rcr
mov
cmp
mov
clc
mov
jmp
call
lea
jne
pusha
pushf
call
call
mov
mov
movb
push
pushf
lea
jmp
inc
inc
test
add
and
movzbw
mov
cmp
pushf
stc
sub
push
pushf
pushf
mov
mov
lea
jmp
call
bt
rol
sbb
mov
sub
jmp
rol
xor
stc
shrd
cmp
not
jmp
pushf
rdtsc
mov
cwtl
mov
lea
jne
bswap
rdtsc
lahf
pop
movsbl
pusha
mov
cwtl
lea
mov
pushf
push
mov
pushf
pushl
ret
mov
pushl
movb
shl
call
cmp
mov
btc
stc
bts
mov
xor
call
cbtw
mov
push
pushf
pusha
push
sub
mov
call
pusha
jmp
mov
pushl
pusha
pushf
movb
lea
jmp
bswap
not
jmp
jmp
mov
pushf
movb
mov
push
lea
jmp
jmp
xor
movsbw
mov
push
movb
add
pusha
lea
jmp
bt
not
push
cmp
test
sub
sub
ja
push
and
pushl
mov
jmp
pushl
mov
pushl
mov
movb
lea
jp
mov
jae
mov
pusha
pushf
pusha
push
lea
jne
pushf
sbb
mov
pusha
mov
jmp
call
jmp
call
pushl
popl
mov
lea
jmp
dec
push
setp
ror
mov
cmp
seta
add
pushf
not
setb
setns
mov
push
mov
pusha
lea
jmp
mov
push
mov
pushl
jmp
call
jmp
pushf
mov
pushf
popl
push
movb
pushl
popl
pusha
movl
push
lea
jmp
mov
pushl
jmp
jmp
call
call
movb
rol
cmc
sub
bt
add
call
test
xor
cmc
test
bswap
clc
neg
push
mov
movb
lea
jmp
push
clc
cmc
mov
and
mov
jmp
popl
push
movb
mov
lea
jmp
push
pusha
movw
mov
pusha
pushl
jmp
bswap
pushl
pushf
movw
bt
neg
push
push
lea
jmp
mov
jmp
pusha
mov
jmp
stc
xor
call
pusha
pusha
pushf
jmp
pushf
popl
lea
jbe
pusha
movl
pusha
pushl
popl
pushl
pushf
pushf
lea
jmp
call
mov
pushf
lea
jmp
bswap
pushf
neg
pushl
mov
pushf
lea
jmp
call
pusha
pushf
popl
call
movb
pushl
mov
mov
push
mov
pusha
pushf
movw
movb
mov
jmp
mov
call
mov
call
clc
clc
clc
sub
pusha
call
push
pushl
popl
pushf
lea
jmp
call
cmp
jmp
pusha
push
lea
jmp
mov
mov
mov
mov
lea
jmp
aas
neg
add
and
mov
rcl
or
pushf
mov
call
jmp
mov
pusha
sub
pushl
popf
cltd
movw
mov
mov
jmp
mov
mov
bt
cmp
pusha
xor
pushf
dec
clc
call
rcr
rcl
pushf
mov
bt
neg
rcr
neg
mov
cmp
movl
call
test
and
pushl
pushf
cmc
cmp
mov
lea
ja
pusha
pushf
lea
jne
pushf
inc
shrd
clc
xorb
lea
mov
mov
jo
movsbw
pop
push
lea
jmp
mov
pushl
mov
pushf
movb
pushf
pushf
lea
jmp
repz
popl
jmp
push
mov
pusha
mov
pusha
mov
jmp
mov
movb
lea
cpuid
call
clc
mov
cmp
clc
sub
push
call
jmp
pushf
pushl
pushf
dec
bt
or
push
movb
lea
je
jmp
dec
jmp
jmp
push
pushf
mov
pusha
pushf
pushf
lea
jmp
pushf
pushf
popl
jmp
bt
neg
pushl
lea
jmp
inc
call
btc
bsf
shl
mov
bsf
rcr
mov
xor
bts
rcr
movsbw
mov
pushf
sub
pushl
call
pusha
jmp
pushf
mov
pusha
pusha
call
pusha
pusha
repz
popl
sub
jnp
test
pushf
mov
bt
push
bsf
pusha
pushl
popl
xor
jmp
pushl
popl
movb
movl
mov
lea
jmp
mov
push
mov
jmp
mov
cmp
cmp
stc
sub
pushf
pushl
push
lea
jmp
jmp
mov
jmp
not
push
rcl
ror
pusha
setnp
dec
dec
dec
rcr
xor
call
mov
pusha
movb
lea
jmp
test
mov
push
movw
cmc
mov
test
test
shl
pushl
popl
sbb
bt
shrd
sar
movl
sbb
inc
pushf
mov
mov
bt
cmp
xor
pushf
push
clc
bswap
stc
bt
cmp
neg
mov
mov
movw
mov
lea
jmp
pushf
mov
push
pushf
lea
jmp
not
mov
std
pushf
cld
cld
lea
jle
push
push
mov
rep
jmp
movzbw
btr
mov
shr
xor
push
pusha
pushf
dec
bts
lea
jg
movzbw
not
jmp
not
cwtl
pushf
lea
mov
pusha
sets
mov
jmp
pushf
bt
push
xor
pushf
xchg
test
mov
pushf
sub
jmp
jmp
repz
popl
clc
test
cmp
test
mov
pushf
stc
cmc
cmp
mov
rcl
mov
bswap
shl
pushl
popl
shl
lea
movl
test
pushf
rcl
ror
mov
pushf
clc
cmp
xor
stc
pushf
pushf
bswap
bt
cmp
test
neg
pushf
pushf
mov
lea
jmp
call
call
bts
xor
btr
rol
jmp
mov
push
mov
mov
pushf
pushf
repz
popl
call
setnp
call
call
jmp
cmc
stc
sub
push
movb
mov
pusha
mov
mov
pushl
push
lea
jmp
push
jmp
jmp
cmc
cmc
or
cmp
xor
jmp
cmc
jmp
jmp
jmp
xchg
add
jle
stc
sub
stc
ror
pusha
clc
cmc
add
pusha
pushf
jmp
pusha
movb
call
sets
or
and
adc
mov
test
cmc
sub
pushf
add
push
push
movb
pushf
popl
pushf
movb
pusha
mov
pushl
popl
pushf
pushf
movl
lea
jmp
mov
push
push
repz
popl
cmc
jmp
movb
pushl
pushl
popl
pushf
pushf
pushf
movw
lea
jmp
pusha
push
mov
jmp
mov
jmp
call
mov
call
call
shr
mov
js
clc
test
add
pushf
pushf
popl
jmp
pushl
popl
pushf
movb
mov
mov
lea
jmp
pushl
pushf
call
mov
call
pusha
push
call
pushl
bsr
mov
pusha
stc
add
pushl
lea
jmp
test
call
jmp
pusha
mov
call
pusha
bt
bt
clc
add
mov
call
pushf
jmp
mov
mov
movl
movb
lea
jmp
call
bsf
clc
shld
neg
mov
call
rcl
pusha
rol
push
sete
inc
inc
rcl
dec
and
shl
and
bts
clc
mov
call
bt
clc
pusha
add
cmc
bt
clc
push
pushl
popf
mov
pushl
lea
jmp
mov
pusha
mov
push
pushf
popl
jmp
jmp
mov
test
pushf
cmc
pusha
add
pushf
push
lea
jmp
pusha
cld
cld
mov
rep
lea
bsf
bsf
sbb
mov
and
btr
jmp
lea
jb
push
push
mov
mov
call
lea
jne
call
pushf
mov
mov
jmp
pushl
popl
pusha
pushf
pushl
lea
jmp
mov
mov
jmp
mov
call
pusha
mov
pushl
mov
mov
mov
call
pusha
push
mov
pusha
movb
mov
pushl
lea
jmp
aam
setno
mov
aad
shrd
pop
call
call
inc
rcl
clc
mov
call
stc
not
bswap
ror
bswap
jmp
rdtsc
movzbl
cltd
mov
pusha
mov
pushf
pushf
divl
pushf
mov
call
call
mov
pushf
popl
jmp
mov
mov
push
pushf
pushl
ret
ror
test
cmc
test
sub
test
push
call
call
push
cmc
sub
push
mov
movw
mov
lea
jmp
pusha
rep
xor
ror
mov
bswap
movzbw
mov
cmc
jmp
push
pusha
lea
jmp
setns
dec
sbb
mov
shld
mov
dec
stc
mov
cmc
add
pusha
pusha
test
shld
jmp
call
push
lea
jae
repz
clc
bt
pusha
mov
pusha
mov
shld
pop
clc
bsf
pushl
popl
or
cmc
movl
rcl
mov
test
jmp
mov
shr
lea
jmp
call
push
pusha
pushf
mov
jmp
push
mov
mov
movw
push
call
stc
clc
jmp
call
btc
adc
and
mov
pusha
pushf
bswap
cmp
xor
pushl
cmp
clc
add
jmp
stc
xor
notl
dec
inc
dec
mov
cmc
call
cmp
mov
shld
movsbw
test
call
pusha
mov
pushl
mov
call
dec
mov
pushf
mov
movb
pushf
lea
jmp
cmc
bswap
call
pusha
movl
jmp
push
jmp
mov
pushl
pushf
pushf
pushf
lea
jmp
push
pushf
jmp
mov
mov
pushf
push
mov
push
mov
call
pushl
pushf
div
pushf
pushf
jmp
mov
call
cmp
clc
pusha
sub
movl
cmc
pusha
shl
mov
mov
call
sbb
sbb
lea
mov
test
cmp
add
pusha
pushf
lea
jmp
bt
sub
jmp
pushf
sub
push
call
pushf
mov
jmp
rcl
bts
bts
add
sar
mov
push
jmp
movb
repz
popl
clc
test
movb
mov
cmc
cmp
cmc
mov
cmp
pushl
popl
inc
rcr
bsf
neg
movl
shr
mov
cmc
bt
xor
cmp
jmp
lea
ja
pushf
inc
mov
jmp
mov
mov
pushl
movb
lea
jmp
jmp
not
clc
bt
ror
jmp
movw
lea
ja
pushf
pushl
popl
push
mov
mov
movb
lea
jmp
cmp
pushf
sub
call
clc
not
jmp
pushl
popf
movl
pushl
lea
jmp
mov
pushf
mov
mov
call
mov
mov
pushf
mov
jmp
pushf
push
push
movb
mov
pusha
lea
jmp
mov
dec
cmp
call
push
mov
mov
mov
pusha
mov
pusha
pushf
mov
pushf
pushf
push
mov
mov
pushf
mov
pushf
jmp
pushf
movb
mov
pushf
pushl
lea
jmp
pushf
mov
jmp
push
das
mov
sar
mov
pushf
cmp
add
je
stc
not
stc
jmp
call
mov
lea
pushf
mov
not
movsbw
movsbl
not
mov
pusha
pop
movzbw
push
repz
popl
cmc
rcr
xchg
shrd
xchg
rol
bts
pushl
popl
jmp
movl
pushf
mov
pusha
mov
mov
push
lea
jmp
pushf
pushf
mov
mov
call
lea
ja
inc
mov
xadd
lea
stc
rcl
sub
cmc
lea
lea
and
test
dec
neg
sub
jmp
push
mov
movb
pushf
pushf
movl
pushl
ret
xor
cmc
stc
lea
stc
call
cmc
xor
stc
call
pushf
pushf
movb
mov
jmp
pushl
xor
cmp
cmc
bswap
clc
movb
test
pushf
neg
push
pushl
pushf
mov
lea
jmp
mov
mov
jmp
mov
call
cld
mov
das
andb
das
xor
das
adcb
das
add
das
cmpb
subb
andb
das
add
shrb
xor
das
adc
das
cmpb
andb
das
add
ret
xchg
ret
das
adcb
das
adcb
add
das
addb
das
adcb
sub
das
add
int
add
das
cmpb
cmpb
add
das
add
das
add
shrb
add
mov
das
addb
das
adcb
das
andb
das
add
das
andb
das
add
das
or
das
add
mov
das
adcb
das
addb
das
adcb
das
andb
das
adc
das
adcb
das
sbbb
andb
das
sbbb
sbb
das
xorb
das
addb
das
sbbb
andb
das
orb
sbb
das
add
das
adcb
das
add
das
subb
das
xorb
das
add
mov
das
adcb
das
subb
add
shrb
cmpb
andb
das
subb
sbb
das
add
mov
das
xorb
das
cmpb
sbbb
sbbb
subb
add
shrl
xor
das
add
shrb
sbbb
das
orb
das
add
mov
das
add
mov
das
cmpb
add
ret
das
cmpb
add
das
add
das
adcb
das
add
add
mov
das
add
add
das
sbbb
sbb
das
andb
das
andb
das
andb
das
add
int
add
iret
das
andb
das
add
das
add
mov
das
andb
das
add
int
add
das
add
ret
cmp
das
andb
das
xorb
das
sbbb
andb
das
adcb
das
add
int
add
das
or
das
add
mov
das
add
int
orb
das
andb
das
add
int3
das
add
das
add
mov
das
add
das
cmpb
das
addb
das
add
mov
das
add
mov
das
addb
das
xorb
das
cmpb
das
cmpb
add
mov
das
add
das
add
das
add
lret
das
add
das
add
iret
das
xor
das
andb
das
cmpb
add
mov
das
andb
das
add
shrb
sbbb
das
add
mov
das
add
lret
insl
shrl
adcb
das
sbb
das
sbbb
xchg
shrb
add
ret
das
add
mov
das
andb
das
add
mov
das
add
das
add
ret
das
or
das
add
das
cmpb
das
andb
das
add
das
add
int3
das
cmp
das
cmpb
add
ret
das
subb
orb
andb
das
add
shrl
jnp
das
add
mov
das
add
mov
das
add
shrb
orb
clc
lcall
and
je
cmc
bt
sub
bt
stc
test
xchg
pushf
cmc
mov
bt
sub
pusha
push
call
jmp
bsf
call
jmp
jmp
pusha
call
mov
pushf
pushf
cmc
stc
add
mov
pushf
call
pushf
popl
movw
movw
pushl
popl
pusha
lea
jmp
lea
mov
pusha
mov
mov
pushl
call
neg
push
lea
jmp
cmc
bswap
clc
cmc
neg
pushl
pushf
push
lea
jmp
and
cmc
cmp
call
mov
pushf
jmp
push
pushf
pushf
mov
pushf
mov
call
call
std
pushl
popf
movb
pushf
lea
jmp
xor
bt
call
pusha
pushl
dec
call
pushl
call
mov
movb
lea
jmp
mov
pushf
mov
pushf
pushl
lea
jmp
bswap
call
rol
bt
cmp
xor
stc
clc
call
lea
push
pushf
pusha
xchg
pushl
mov
movzbw
lea
jo
mov
call
movzbl
push
lea
mov
movzbw
not
lea
pusha
cld
cld
std
xchg
lea
push
pushl
mov
pushl
mov
jmp
mov
mov
pushf
mov
jmp
movzbl
mov
cmc
clc
pushf
add
call
jmp
mov
pushf
popl
push
call
pushl
popl
pusha
lea
jmp
jmp
add
jmp
clc
add
pushf
pushf
push
lea
jmp
xor
test
bswap
bt
lea
jp
bt
bt
neg
pushf
pushf
pushf
pusha
lea
jmp
test
test
stc
add
pushf
call
pusha
pushl
mov
pusha
jmp
rcr
mov
bt
add
pushf
pushf
pusha
push
lea
jmp
mov
not
inc
dec
stc
mov
stc
cmc
jmp
push
pushf
popl
push
lea
jp
popl
pushf
lea
jmp
mov
call
call
call
pushl
popl
push
lea
jmp
repz
popl
stc
pushf
mov
cmc
mov
cmp
mov
call
mov
pushf
pushf
pusha
lea
jmp
std
stc
pushl
popf
pushf
lea
jmp
cmc
sub
not
mov
test
cmc
stc
bt
add
push
movl
pusha
pushl
lea
jmp
pushf
call
lea
shl
mov
not
bts
mov
sbb
mov
test
cmp
add
test
pushf
cmc
shrd
push
push
lea
jle
pushf
mov
call
mov
mov
mov
mov
mov
lea
jmp
mov
pushf
movb
lea
jmp
call
pushf
rcl
stc
movl
not
cmc
not
sbb
mov
pusha
pushf
xor
test
stc
call
or
not
inc
call
cmc
cmc
call
pushf
not
test
cmc
clc
bt
not
jmp
pushf
pushf
pusha
push
repz
popl
test
push
mov
stc
mov
test
clc
xchg
bts
pushl
popl
clc
cmp
bswap
bswap
movl
movzbw
bsf
sub
mov
test
xor
stc
bswap
mov
pushf
stc
neg
pushf
lea
jmp
cmc
pushl
popf
pushl
pushf
lea
jmp
xor
test
bswap
cmc
jmp
dec
call
mov
call
call
jmp
pushf
mov
movw
pushf
popl
pushf
pushf
push
jmp
xor
call
pushf
pushf
pushf
popl
mov
pushf
pushl
mov
pushl
popl
pusha
push
lea
jmp
pushf
shr
call
mov
bswap
pusha
mov
xor
bt
mov
clc
sub
bt
shr
lea
jge
mov
push
push
pushf
popl
jmp
or
stc
mov
jmp
add
pushf
push
pusha
mov
pushf
mov
mov
pushl
pushl
ret
xchg
movw
movl
jmp
stc
clc
rdtsc
cmp
call
movb
decl
pushf
jmp
call
call
jmp
mov
pushf
pusha
pushf
lea
jmp
pushf
call
lea
jae
mov
push
pushf
mov
pushf
lea
jmp
lea
jne
ror
shl
xorb
not
pop
pushf
mov
movb
lea
jmp
xor
jmp
jmp
btc
adc
mov
test
xor
mov
jg
push
cmp
add
call
mov
push
mov
push
lea
jmp
pusha
pusha
jmp
or
movsbw
aam
movzww
clc
stc
call
bt
test
mov
pusha
call
call
call
push
call
push
stc
ror
pushl
stc
test
add
stc
not
mov
pushf
pusha
clc
ror
push
sub
stc
clc
cmc
bt
cwtl
cmp
bt
jmp
shr
mov
mov
pushl
jmp
stc
mov
test
pushf
stc
add
call
pushf
call
pushl
popl
push
lea
jmp
bt
test
and
call
bswap
clc
bt
test
neg
movw
push
lea
jmp
pusha
pushl
popl
movb
pushl
lea
jmp
seto
mov
pusha
mov
pushf
lea
jmp
pushf
cld
pushf
mov
pushl
pushf
rep
sar
xor
mov
or
mov
call
pusha
lea
jne
lea
xorb
call
mov
pushf
pushf
movl
call
pushf
pushf
mov
pushl
pushl
lea
jmp
jmp
mov
push
mov
jmp
pushf
pop
mov
lea
movzbw
movzbw
lea
pushf
jb
bswap
push
not
pushf
mov
call
call
bt
stc
neg
pushf
lea
jmp
clc
jmp
mov
lea
jns
pushf
pushl
pushf
pushf
popl
pusha
pushf
call
mov
cmc
jmp
bt
cmc
shl
jmp
call
pushf
push
mov
push
pushf
pushf
mov
lea
jnp
pusha
mov
pusha
repz
popl
push
mov
test
mov
xchg
add
mov
cmp
pushl
popl
neg
ror
bsf
ror
movl
shl
clc
shld
cmp
mov
stc
cmc
call
pushf
mov
jmp
inc
xor
pushf
sub
jmp
push
mov
mov
pushf
mov
pushl
pushl
pushl
mov
jmp
mov
cmp
clc
call
push
sbb
mov
btc
mov
cmp
add
call
add
add
sub
jnp
push
rol
mov
jmp
pusha
clc
pushl
popl
jmp
pusha
pushf
push
pushl
popl
pushf
movb
mov
lea
jmp
pushf
pushf
popl
pusha
pushl
popl
push
mov
pushf
push
lea
jmp
pushf
push
mov
pusha
lea
jmp
pusha
cmp
bt
neg
pusha
movb
lea
jmp
call
jmp
jmp
call
pusha
mov
jmp
mov
pushf
mov
pushf
repz
popl
clc
cmc
mov
bt
test
mov
push
pushl
popl
or
movl
ror
mov
cmp
test
cmp
xor
stc
jmp
mov
push
lea
jne
pushf
shld
mov
call
xor
push
push
test
cmc
bswap
clc
cmp
mov
neg
movb
push
mov
lea
jmp
sar
stc
mov
bswap
add
mov
pusha
jmp
pushl
pushf
mov
pushf
push
mov
jmp
cmp
clc
sub
jmp
ror
push
sar
inc
movzbl
cmc
call
cmp
call
repz
popl
test
stc
bt
mov
jmp
inc
bswap
mov
aam
movzbw
mov
cmc
sub
bt
bt
cmc
pushf
mul
call
sar
movl
bsf
mov
cmc
bt
pusha
xor
bt
call
add
mov
movw
pushf
lea
jmp
sub
shrd
jmp
push
mov
mov
movb
jmp
test
call
das
aam
mov
shr
and
test
mov
cmc
add
push
call
neg
stc
pushf
mov
clc
pushf
test
neg
mov
call
pusha
sub
bt
clc
cmp
cmp
cmpl
call
mov
mov
pop
bsf
rcl
pushl
popl
shrd
movl
inc
test
mov
pushl
clc
call
dec
xor
rcl
call
push
not
pusha
mov
pushl
pushf
lea
jmp
push
mov
pushf
jmp
and
movsbl
mov
pusha
cmc
sub
call
push
add
call
not
call
call
mov
push
mov
jmp
mov
pop
pushl
popl
btr
ror
movl
bt
or
dec
neg
mov
push
pushf
test
bt
xor
mov
cmc
mov
stc
bswap
bt
neg
pushf
pushl
push
pushf
lea
jmp
jmp
jmp
pusha
pushf
pushl
popl
pushl
lea
jmp
lea
jne
mov
mov
cmp
and
jmp
call
push
mov
pushf
mov
pushf
popl
lea
jae
pushf
pushl
popl
pushf
pushl
movw
movw
lea
jmp
jmp
add
jmp
push
pushl
call
call
pushf
popl
pushf
movb
pushl
pushl
pushl
popl
pushf
movb
lea
jmp
not
bt
push
cmp
xor
pushf
jmp
pushl
popl
pushf
push
mov
lea
jmp
not
dec
jmp
inc
jmp
call
bt
sub
mov
pusha
push
call
or
bt
neg
ror
mov
setno
rol
call
xor
rcl
mov
test
not
sar
mov
cmp
cmp
test
add
pusha
pusha
mov
mov
pushf
pushl
lea
jmp
mov
mov
jmp
