rcrl
add
push
lea
push
push
push
push
fnstenv
push
call
pop
dec
and
add
stos
mov
mov
mov
or
cmp
rolb
shrl
sbb
mov
mov
jmp
enter
frstor
inc
xor
adc
pop
pop
pop
adcl
mov
mov
inc
add
mov
adc
jl
push
xor
pop
push
and
pop
cmp
or
and
pop
push
mov
ret
xchg
and
ja
ja
pusha
adc
push
push
call
or
mov
jae
fwait
push
mov
nop
cmpsl
add
add
ret
and
push
mov
in
arpl
or
mov
xchg
lret
adc
dec
or
push
rorb
push
mov
pop
pop
ret
adc
in
or
stos
outsl
movsb
and
xor
push
sbb
rorb
ret
add
xor
fcmovne
cs
cmpsb
call
les
add
push
or
push
mov
cld
add
bound
sub
add
add
dec
stc
inc
rorb
and
or
adc
lods
roll
call
mov
mov
cmp
cmp
cmp
pop
je
mov
cmp
loope
or
add
and
pop
je
push
dec
aam
lea
inc
decl
pop
mov
and
sbb
mov
xchg
push
and
mulb
or
ljmp
adc
test
sub
add
mov
lea
aas
inc
aam
call
call
pop
inc
pop
push
orl
fsubr
pusha
es
jnp
out
adc
test
mov
scas
or
push
xor
inc
stc
inc
adc
or
mov
mov
ret
divl
into
call
push
mov
xchg
and
pushf
jns
xchg
push
adc
mov
mov
in
ret
rorb
sbb
or
add
push
push
test
ret
pop
bswap
fiadds
mov
cmp
jne
or
or
into
movl
dec
cmp
sub
ud0
pop
aam
add
xor
xor
inc
call
pusha
mov
cmpsb
adc
or
xor
movsb
or
push
xor
loopne
mov
test
lea
int
out
movsb
shlb
pop
pop
cmp
add
jb
pop
sbb
and
out
add
pop
sub
sub
lret
sbb
cld
lock
stos
cmp
movsb
push
push
cmpsb
and
jno
ljmp
je
loopne
orb
lret
and
shll
jmp
ret
loope
xor
sub
mov
xor
bound
jbe
xor
shll
or
sbb
and
fstps
outsb
pop
push
jmp
clc
adc
jle
adc
sbb
xorl
xor
mov
and
imulb
movsb
mov
sti
mov
sub
pushf
dec
inc
add
xchg
dec
sbb
pop
mov
daa
nop
sub
push
sub
inc
fcoms
cmp
fcoml
jne
lea
dec
sub
sub
adc
add
js
pop
mov
sbb
and
pop
cmp
jne
shr
out
mov
xchg
inc
adc
push
sti
and
or
xor
mov
imul
inc
sbb
push
dec
add
enter
leave
add
pop
xor
cmp
cmp
clc
lret
mov
sub
push
sbb
or
add
data16
rcll
mov
fs
je
xchg
xchg
loopne
inc
or
cmp
cltd
lret
xor
test
and
addr16
inc
cmp
pop
mov
inc
adc
cwtl
inc
in
jno
add
pop
add
fld
roll
pop
pop
pop
xchg
xor
or
sbb
sbb
mov
adc
cwtl
nop
or
mov
les
ret
enter
or
mov
test
js
dec
jno
push
add
inc
mov
pusha
or
pop
xchg
and
dec
cmp
push
call
sub
jecxz
cmp
mov
test
or
sahf
or
mov
inc
adc
mov
mov
incb
cmp
mov
mov
lahf
push
push
call
mov
cmp
jle
and
push
call
test
push
mov
sub
push
cmp
sub
addl
add
add
pusha
sub
call
cwtl
dec
stc
push
adc
movl
int3
xor
test
je
push
push
push
adc
push
mov
daa
popa
call
jg
xorb
nop
cmp
add
mov
sbb
push
push
xchg
mov
add
sub
mov
xor
test
add
push
hlt
cmp
sbb
xchg
shlb
sarb
inc
push
adc
jl
stos
push
jo
movsl
jnp
mov
sbb
cmpsl
jno
or
xor
add
and
sub
les
in
nop
push
adc
int
mov
adc
ja
inc
adc
adc
es
and
sbb
xchg
mov
push
lds
add
push
shlb
xchg
inc
xor
int3
or
movsl
je
or
sbb
cmc
std
and
sbb
push
aad
xor
mov
inc
popf
test
dec
and
lret
test
and
adc
mov
movsb
xor
push
cmp
xchg
sub
jo
mov
and
jne
add
jmp
pop
push
aad
mov
adcl
sub
repnz
rcrb
sbb
jb
adc
call
ja
fstps
cwtl
push
call
insb
pop
les
mov
inc
sbb
sti
hlt
mov
or
push
and
testb
or
jmp
js
pop
mov
mov
rol
dec
stos
ficoms
popf
sub
je
and
mov
or
adc
into
outsl
stc
xor
subb
push
and
xor
sbb
aam
clc
sub
push
pcmpeqw
lea
adcb
push
push
int
jge
ret
add
imul
sub
adcb
lea
xchg
dec
dec
pop
dec
mov
adc
lahf
addb
das
pop
jne
pop
and
mov
push
sar
add
in
popa
fnstsw
jae
inc
sbb
test
lret
fisubrs
xchg
dec
xor
fstpt
jae
inc
sub
inc
sbb
loopne
sbb
xchg
rcll
add
arpl
xor
sbb
sbb
cmp
jne
add
sbb
fiadds
ficompl
or
jle
pushf
movsb
mov
lods
cmpsb
mov
test
cmp
adc
shlb
push
or
xorl
test
push
call
std
xchg
mov
add
fwait
jae
push
out
push
mov
outsb
jb
sbb
out
add
aas
adc
inc
inc
movsl
repnz
push
scas
leave
lcall
iret
repz
repnz
adc
mov
and
add
push
and
mov
test
or
adc
roll
dec
lock
lds
cmpsb
dec
and
xor
psllq
int3
out
or
popa
xor
adc
fsubrs
aaa
inc
sub
mov
mov
adc
mov
add
into
push
push
mov
jmp
push
jne
mov
mov
mov
sbb
int
xchg
push
lds
add
or
cmp
add
xor
adc
xchg
jae
mov
sub
mov
pop
cmpsl
pop
mov
les
adc
xor
mov
out
int
add
mov
das
xor
clc
dec
and
aas
pop
fidivl
mov
ret
cmp
dec
in
jmp
pop
adc
sbb
xchg
add
sub
lods
gs
adc
adcb
sub
nop
mov
inc
cmpsl
dec
nop
nop
movsl
subb
push
mov
mov
inc
xlat
push
scas
adc
movsb
push
and
loope
pop
adc
pop
dec
sub
adc
add
push
xchg
xchg
or
xchg
adc
sub
sbb
mov
push
ss
adc
sbb
cwtl
dec
scas
or
xor
sub
xor
add
jge
push
xor
pop
lea
push
cli
bound
das
movsb
xor
call
dec
sbb
push
lret
addb
fldl
out
or
push
mov
enter
adc
test
xor
jbe
push
stos
enter
xchg
xchg
sbb
mov
and
mov
pop
pop
sub
sbb
adcl
adc
xchg
bound
sbb
mov
or
mov
insb
xor
or
popa
cmp
adc
xor
sbb
mov
push
xchg
xor
sub
sbb
mov
out
adcl
dec
sahf
filds
test
mov
ss
fs
xor
bound
punpcklbw
es
push
sub
fdivr
dec
stos
sbb
add
dec
xchg
pushf
lods
and
sub
add
js
adc
pop
inc
mov
cmp
xorl
xadd
lret
call
and
xor
adc
sti
leave
je
iret
decb
sub
push
mov
aaa
dec
push
int3
jae
cmp
and
xor
and
xchg
outsl
repz
cmp
aam
sub
lea
jl
insb
push
add
mov
dec
add
pop
in
lahf
pop
add
dec
sub
dec
xchg
int
testl
inc
cmp
inc
xor
jmp
mov
cmp
cmpsb
bound
pushf
jae
mov
xor
pop
pop
mov
dec
pop
rep
mov
dec
sub
lea
jl
sbbb
push
aam
mov
and
or
aaa
out
cli
pushf
imul
xor
mov
cmp
mov
pop
je
push
pop
fs
mov
mov
dec
or
lret
test
daa
cmp
imul
push
imulb
test
orb
xchg
dec
nop
sbb
pusha
rorl
and
xor
adc
movsb
fsqrt
rol
lret
xor
popa
shl
jno
inc
das
mov
adc
rcll
push
add
jmp
cmp
adc
mov
dec
dec
adc
or
sbb
and
dec
mov
js
push
push
push
sub
movsb
push
test
mov
fisttps
mov
call
and
and
inc
push
adc
hlt
mov
lods
xchg
pop
cmp
jne
lcall
bound
push
sbb
and
add
insb
jmp
inc
jmp
xchg
test
dec
fists
and
imul
jge
adc
stos
mov
push
sbb
mov
push
mov
adc
push
leave
mov
movsl
movsl
rorb
add
xor
xchg
out
nop
adc
mov
xor
and
cmp
adc
cmp
cmp
xchg
cmp
adc
sbb
sub
pop
cwtl
sub
push
loope
dec
dec
sub
lods
ss
movsl
inc
mov
aas
sub
flds
mov
add
clc
sbb
and
pop
inc
adc
mov
and
add
aas
out
xchg
adc
ret
or
jg
sbb
sbb
adc
xor
or
mov
xlat
cmp
loopne
xor
sbb
mov
or
mov
cmpsb
je
add
adc
adc
xorb
test
or
dec
and
sub
push
dec
push
bswap
and
dec
mov
inc
ret
cmp
je
bound
dec
imul
jno
jo
and
add
lods
xor
das
jmp
insb
ljmp
loopne
jl
outsl
stos
fadd
sbb
dec
jb
das
and
push
mov
jne
pop
outsl
xchg
lock
mov
add
mov
cwtl
inc
adc
scas
sbb
jle
xchg
cltd
faddp
add
jne
sub
sbb
mov
adc
loop
and
ja
hlt
sbb
jmp
xor
add
xchg
inc
xchg
mov
adc
jno
push
and
js
mov
out
in
mov
inc
sub
aas
rorl
sub
mov
in
ficomps
push
inc
mov
jnp
and
pop
nop
sub
push
call
adc
lock
lods
fwait
adc
pop
adc
loopne
js
mov
or
jo
test
add
cmp
push
test
jmp
push
inc
mov
add
inc
repz
xchg
add
sbb
adc
sub
fldt
adc
xchg
das
leave
ss
sar
sbb
inc
mov
lahf
cmp
sbb
xchg
sbb
sub
adc
mov
js
es
aaa
mov
mov
fs
mov
push
jle
inc
jne
daa
xchg
data16
nop
test
cmc
sti
pop
jmp
push
stos
out
test
push
int3
sarl
sbb
cmp
sub
js
lret
cs
int
adc
test
xchg
mov
xorb
jno
repnz
xor
add
mov
and
bnd
mov
sbb
xor
jbe
ret
jno
xchg
insl
xchg
add
in
pop
sub
dec
lea
adc
jae
mov
lea
cmp
aas
sub
sub
call
xor
sbb
xchg
xchg
into
addb
dec
cmp
sti
inc
mov
mov
mov
fnsave
push
sub
loope
and
pop
fwait
je
add
fsubl
sub
pop
movsl
mov
pop
inc
fs
je
jmp
lock
jne
dec
pop
and
xchg
xchg
sub
pop
mov
test
dec
fs
mov
jecxz
test
xor
xor
xchg
mov
inc
std
add
call
daa
push
mov
cs
push
inc
adc
mov
xchg
inc
loopne
add
or
push
inc
mov
cvttps2pi
je
xchg
adcb
mov
rcrl
movsl
jae
mov
jb
xchg
enter
cmp
sti
lahf
mov
add
dec
sub
push
jl
leave
shrl
mov
lea
cmp
int
and
cltd
push
jmp
mov
sbb
or
inc
jmp
in
adcl
lods
ret
enter
lods
dec
mov
movsb
ret
in
pop
mov
sbb
push
sbb
xchg
fdiv
pop
mov
stos
adc
xchg
lret
push
pop
push
sbb
xor
inc
jbe
mov
adc
mov
push
cmpsl
pop
repz
mov
and
in
dec
xor
dec
or
mov
pusha
mov
rcll
push
xor
inc
cmp
imul
dec
addr16
xor
es
cli
adc
sub
push
out
dec
cmpsl
dec
not
jge
jmp
fimull
jmp
adc
sub
shlb
roll
sbb
adc
les
and
sbb
cmpl
lahf
and
push
cli
je
imul
jns
inc
or
mov
jbe,pn
xor
or
and
and
sub
xor
inc
mov
push
or
and
jg
jbe
dec
lret
scas
dec
and
hlt
add
movsl
cmp
jecxz
mov
push
inc
xor
pop
sub
popf
mov
cmp
repz
pop
mov
pop
jg
mov
cmc
adc
mov
push
xor
or
or
xchg
leave
push
sbb
and
mov
jle
adc
push
insb
add
fs
jl
js
sahf
adc
cmp
call
call
cmpl
pop
add
sbb
add
or
ret
jl
xor
lret
push
imul
pushl
or
dec
ja
pushf
xor
xchg
sub
inc
stc
mov
jp
mov
fdivrs
xor
aas
adc
or
and
push
test
mov
xchg
fdivs
sbb
push
or
mov
xchg
movsl
sbb
push
push
outsb
or
adc
data16
pop
test
jne
sbb
lret
sub
test
pushf
js
jae
insb
add
mov
faddp
jg
inc
cmp
jbe
repnz
jmp
cmc
std
and
pop
lds
or
adc
pop
push
int
sub
pop
xor
mov
push
dec
push
ja
mov
adc
jns
or
shll
inc
jl
and
pop
shl
mov
pop
out
stc
push
cmpsb
pop
and
sahf
adc
jle
sub
movsl
in
loopne
pop
mov
mov
sub
push
inc
cmpxchg
and
jo
fs
loop
and
pusha
cmp
and
fisubl
shlb
fstl
mov
or
shlb
adc
push
jne
loopne
or
rcrb
andb
dec
sbb
addr16
pop
neg
sbb
mov
xor
pop
or
aam
das
add
mov
inc
mov
jecxz
mov
sahf
cltd
and
test
std
add
pop
adc
push
call
sbb
mov
cmpsb
sbb
push
cmp
sbb
or
xchg
push
sbb
lcallw
xor
sub
in
jmp
lcall
cs
mov
das
adc
and
adc
subb
shll
jle
rcl
push
jns
and
or
orb
jmp
fidivs
mov
sub
mov
and
call
xchg
xchg
push
push
jns
outsl
jb
test
rclb
aas
and
jnp
xchg
icebp
pop
dec
push
data16
or
call
sub
push
mov
ret
push
loope
push
out
jmp
mov
inc
out
sbb
repnz
xchg
jecxz
or
outsl
fs
rclb
ja
push
jne
xchg
cmp
xor
inc
mov
mov
inc
stos
pop
adc
mull
test
cmpsl
rclb
jle
add
ljmp
stc
pop
xchg
test
out
pop
sub
ja
imul
sub
xor
and
mov
inc
push
nop
mov
push
shlb
inc
mov
lock
or
lret
jno
test
fdivl
adc
roll
aaa
add
push
mov
cmp
sarl
es
jnp
les
jne
test
push
mov
jmp
add
push
dec
enter
lahf
adc
sub
stos
push
dec
dec
test
add
and
ljmp
subl
and
stos
shll
sub
insb
adc
test
and
add
jmp
aam
imul
sub
mov
push
mov
aaa
and
pop
push
xchg
ret
add
push
pop
mov
cmp
adc
xchg
fisubl
add
cltd
jl
sarb
movl
daa
clc
scas
stc
push
sbb
add
ret
sbb
sar
sub
enter
pop
shl
cmp
aad
imulb
jge
addr16
sub
lock
cltd
adc
cs
in
rclb
ret
in
add
adc
xchg
lcall
add
push
xchg
or
cmp
xor
mov
and
inc
rorb
inc
and
testl
push
xchg
negl
mov
fs
sub
fs
out
push
jbe
mulb
push
push
nop
icebp
sbb
xchg
sbb
xchg
push
fcomps
test
mov
fisttpl
dec
inc
xchg
inc
sbb
or
test
nop
adc
pop
pop
mov
into
or
lea
dec
mov
push
or
shl
push
jne
ljmp
push
hlt
iret
sub
or
enter
xchg
lods
adc
or
pop
stc
jmp
call
lea
sbb
or
or
or
xchg
mov
aas
xchg
jmp
cwtl
dec
xor
jne
push
hlt
xchg
mov
pop
jne
mov
sbb
sbb
lahf
nop
cmp
adc
in
xor
jmp
jne
inc
sub
ret
add
jne
xchg
and
xor
test
jge
and
mov
call
inc
sbb
cmp
sbb
sbb
movsl
adc
pop
add
push
jle
xchg
add
inc
dec
cmp
scas
inc
cmp
jl
add
xchg
jb
xchg
adc
adc
sbb
dec
add
xor
push
pop
in
add
fs
pop
adc
sub
jns
and
shr
cmp
shll
add
mov
dec
lock
daa
pop
add
jp
in
cmp
jne
stos
xchg
adc
pop
sbb
xlat
pop
jae
into
adc
inc
cmpb
stos
adc
inc
xchg
loopne
ljmp
test
in
cmp
mov
mov
mov
inc
lahf
and
mov
xchg
mov
out
ret
add
addb
orl
cld
dec
inc
pop
inc
dec
push
movswl
rorb
xor
ret
xor
mov
test
stos
mov
adc
jb
or
jmp
mov
popf
test
and
sbb
mov
cmp
test
cmp
add
adc
sbb
or
pop
push
std
jg
int3
sbb
es
icebp
mov
lea
push
es
pop
and
sti
sbb
push
push
lcall
daa
loop
mov
or
mov
push
inc
add
rcll
lret
add
lea
jl
int3
push
int
jmp
or
xchg
inc
sub
push
lea
adc
aad
sub
add
add
dec
dec
fs
dec
cmp
fs
test
pop
mov
add
mov
sbb
cld
inc
push
jbe
and
or
or
and
and
sub
pop
sub
mov
xorb
xchg
xor
push
bound
xchg
or
adc
fstps
mov
cmp
jne
mov
xchg
add
cmpsl
cs
jmp
mov
push
add
mov
pop
push
xchg
xor
mov
add
jmp
pop
in
test
or
jne
sbb
push
or
jb
in
fstl
jne
adc
rorl
sub
shlb
sub
xchg
ret
movsl
pop
push
xor
test
inc
sbbl
test
dec
jo
sub
dec
into
dec
ret
aam
and
lds
inc
and
xchg
mov
fs
adc
jmp
insl
mov
pop
cmp
pop
pop
mov
lahf
inc
xor
jne
xor
repnz
cs
lock
mov
and
cmp
adc
adc
ja
lea
push
movsl
ficoml
xchg
cmp
imul
aam
sub
daa
mov
fwait
cmp
mov
inc
jmp
pushw
mov
adc
jnp
adc
and
stos
and
xchg
inc
or
int3
adcb
movsl
sbb
ja
mov
inc
lea
icebp
jnp
dec
int3
xor
fsubs
xchg
pminsw
dec
ret
xchg
movsl
add
ret
cmpsl
cmp
repnz
xor
and
cmp
cmp
push
push
push
les
sub
push
daa
mov
jns
test
add
ljmp
jne
push
jg
sub
out
add
test
je
lea
or
cwtl
shlb
xchg
sub
adc
mov
clts
or
int
jb
mov
sarl
dec
sbb
mov
mov
shlb
cmp
xor
push
hlt
das
adc
and
add
cmp
jle
data16
cwtl
addl
adc
repnz
mov
push
subl
or
and
push
mov
mov
cmp
test
pop
fidivrl
daa
lea
vcvtps2pd
inc
mov
pop
inc
mov
enter
dec
add
lret
jb
inc
push
push
int
ret
push
clc
sti
or
movb
lds
in
or
rcrl
and
icebp
aad
dec
cmpsb
and
jmp
filds
stc
add
mov
lss
lea
cmp
jmp
jb
sbb
add
shll
frstor
int
mov
pop
mov
push
xor
sbb
fidivrs
fstl
jb
xor
call
jle
pusha
fcmovbe
pop
sbb
xorb
xchg
xor
push
add
inc
push
add
push
xor
xor
leave
push
or
adc
add
popf
xchg
sbb
jnp
ret
dec
orb
jge
loopne
out
xchg
adc
xchg
mov
push
push
in
ss
dec
int3
xchg
adc
jmp
xor
and
test
leave
or
adc
adc
cmc
push
dec
mov
adc
and
sti
cmpsb
insl
adc
sti
or
jb
adc
lret
inc
cli
in
mov
das
adc
js
dec
pop
loop
test
dec
add
xchg
js
adc
inc
sar
ret
push
arpl
test
lea
pop
pop
sub
adc
and
sbb
inc
lea
xlat
inc
push
push
nop
jge
mov
shll
test
cmp
push
call
je
pop
xor
aad
stos
and
lea
ljmp
or
sub
xchg
inc
cmp
or
push
test
or
mov
push
sti
cmp
xor
dec
clc
inc
add
cld
inc
call
repnz
push
pushf
jns
mov
jbe
mov
cmp
adc
int
xor
xor
add
push
mov
negl
push
push
jge
add
add
icebp
mov
jb
xchg
scas
dec
jne
lahf
sbb
leave
jb
xchg
xchg
cmp
stc
push
xor
ljmp
orb
ficoms
push
push
push
test
mov
subb
jb
lods
sub
cli
or
je
sub
push
xor
add
aaa
pop
or
jmp
cltd
push
push
dec
mov
xor
and
add
cld
inc
jo
jb
adc
cmp
insl
or
adc
dec
mov
sub
insb
repnz
clc
and
pop
xor
push
xchg
repz
sbb
mov
push
sub
inc
out
rcll
daa
pop
ret
jno
mov
adc
mov
pop
mov
aas
push
lahf
push
mov
test
dec
jmp
push
and
sbb
test
inc
or
sbb
sbb
ljmp
lods
repnz
and
sub
in
mulb
popf
mov
loopne
fmull
ja
je
inc
call
cmp
cli
cmp
jecxz
dec
add
sti
les
cmp
hlt
jno
clc
mov
fimuls
rolb
pop
mov
mov
mov
lea
inc
lds
mov
or
call
inc
push
jb
nop
int
or
cmp
push
sub
inc
cmp
sub
daa
test
std
adc
shl
push
test
dec
scas
xchg
pop
nop
xchg
cs
and
fnstenv
cmp
inc
sub
aas
and
mov
lock
fnstcw
lea
jnp
mov
adc
adc
jno
imul
mov
mov
push
lahf
dec
mov
pusha
xor
and
jne
push
adc
jmp
jb
xchg
es
jp
dec
cmp
push
ret
push
push
cmp
jl
mov
mov
or
push
or
gs
sub
add
movsb
and
sbb
fs
sub
and
and
mov
fcoml
xor
jmp
cmp
and
xor
jmp
dec
rolb
ss
sub
lock
call
push
adc
lcall
add
push
bound
adc
adc
in
push
fs
cmpsb
pushf
and
adc
sahf
inc
adc
mov
adc
jp
loope
imul
fsts
or
mov
outsl
add
sbb
cmp
mov
sub
sbb
jne
and
mov
add
xor
sub
or
inc
sbb
leave
fistpll
repz
mov
popf
jecxz
pop
adc
pop
push
movsl
mov
sbb
ljmp
adc
rcll
cmp
je
xor
adc
xchg
inc
cmp
inc
das
xor
pop
imul
adc
pop
in
lds
mov
inc
push
jne
push
mov
xor
mov
push
mov
dec
push
enter
lea
cmp
xor
and
dec
and
inc
andb
dec
xlat
gs
pop
dec
gs
aaa
xchg
add
in
push
adc
add
or
dec
pop
btr
xchg
sbb
cmp
sbb
inc
jg
stc
and
movl
cli
movsl
shll
mov
cmpsb
push
mov
adc
push
xchg
sbb
ret
mov
or
xchg
jne
int
push
andb
inc
lock
int
cmp
aaa
or
lahf
sbb
xlat
and
clc
add
jne
inc
sub
mov
in
sbb
or
adc
or
lsl
hlt
add
andb
dec
cld
sbb
enter
adc
sbb
push
add
imul
js
xchg
mov
push
push
les
and
xor
incl
xor
push
push
js
mov
cmp
shll
pop
sub
pop
es
js
es
and
in
and
cmp
xchg
je
mov
xor
sub
inc
mov
push
testb
jne
fs
test
mov
push
pop
sub
xchg
or
je
push
push
lods
iret
sahf
sub
xchg
lret
hlt
aad
adc
push
call
pop
and
orb
adc
xor
mov
lods
jge
jmp
xor
call
jmp
call
pop
jmp
sub
sub
jo
sub
sub
ficoms
in
fsts
mov
dec
icebp
add
or
or
mov
or
push
mov
mov
incw
xchg
push
bound
js
push
in
popa
stos
lea
lahf
or
arpl
xor
and
ja
stos
ds
rcll
out
sub
je
iret
cli
insl
mov
mov
add
or
ret
rorb
inc
lret
sub
aam
xor
push
jae
test
dec
mov
mov
and
rorb
sbb
jne
xchg
sbb
movsl
das
call
in
dec
lahf
ret
dec
shl
fs
pop
xchg
leave
dec
pop
in
xor
sbb
xor
sub
enter
xor
inc
inc
sub
je
testb
dec
xor
mov
lods
cli
nop
fidivs
hlt
push
imul
cs
xchg
pusha
mov
push
and
loope
pusha
and
rcrl
call
mov
push
or
lock
cltd
dec
leave
dec
fsts
inc
sbb
inc
push
add
cmc
and
test
xchg
adc
pop
out
inc
scas
sbb
and
dec
mov
sbb
cltd
dec
inc
inc
push
or
jmp
out
imul
mov
shrb
das
push
pop
dec
adc
fdivrl
push
dec
pop
or
inc
and
lret
cmp
jmp
in
je
sub
ret
add
jmp
mov
adc
and
dec
pop
push
outsb
mov
loope
or
stos
and
add
cmp
sarl
or
nop
pop
jl
push
es
js
movsl
out
inc
add
or
adc
xchg
loope
cmc
and
cld
mov
jmp
add
es
inc
dec
rcrb
je
enter
ret
pop
and
ficomps
adc
push
dec
sbb
mov
das
dec
cmp
sub
push
mov
ss
mov
xchg
push
aaa
lret
fsubrl
adc
adc
stos
xor
push
mov
mov
xorb
inc
adc
daa
mov
or
mov
xor
inc
mov
sub
fs
sbb
mov
dec
mov
or
pop
xchg
lret
inc
out
or
fwait
sub
lds
sahf
add
enter
sbb
ja
rorb
xlat
xchg
sub
lea
dec
std
hlt
sarl
sub
adc
pop
shlb
in
jmp
push
jns
loopne
pop
movsb
xor
outsl
add
cmp
je
mov
adc
add
icebp
aaa
mov
cmpb
xor
call
jno
ja
shl
subl
jb
sbb
adc
mov
add
xor
inc
push
test
jp
aaa
cmp
in
adc
into
adc
inc
xlat
stos
adc
push
ljmp
jns
cmp
repz
mov
xchg
test
lods
mov
ds
adc
mov
or
fidivl
dec
shr
adc
ret
movsb
jbe
test
repz
aam
nop
enter
in
mov
mov
in
jge
movsb
sbb
es
sbb
mov
xor
dec
cld
cmpb
mov
push
push
push
jne
stos
aam
stc
push
sub
inc
and
in
cmp
jne
adc
outsl
and
divl
xchg
pop
xorl
mov
dec
test
and
cmp
bound
fistl
andl
xor
dec
inc
in
xchg
stos
push
push
inc
cmp
inc
nop
inc
adcb
push
mov
cld
int3
push
inc
mov
popa
or
mov
mov
add
mov
inc
xor
jge
mov
mov
adc
mov
lea
cmp
jg
testl
push
push
in
push
jo
add
popa
xor
or
nop
je
icebp
cs
add
in
jb
loopne
push
sub
aaa
out
or
mov
rcr
sub
andl
add
mov
jp
mov
popf
sub
xor
test
xor
leave
push
mov
cltd
or
sbb
ret
pop
add
je
mov
jnp
ffree
xchg
inc
cmp
mov
mov
sbb
dec
or
insb
lds
fldt
xchg
mov
or
outsl
and
push
xchg
push
push
dec
dec
sub
inc
and
scas
xchg
addr16
leave
inc
mov
andb
push
dec
push
sub
dec
lds
movsl
iret
xchg
sub
lret
mov
daa
loopne
xchg
jmp
dec
mov
test
push
mov
mov
xchg
cmp
mov
sbb
clc
pop
or
push
push
adc
out
adc
les
push
mov
popa
dec
sub
xor
mov
jmp
test
dec
jno
inc
or
and
aaa
xor
and
scas
aad
dec
or
icebp
daa
cwtl
pop
push
in
dec
into
push
jp
cwtl
bound
loop
fs
pop
adc
xlat
cmp
dec
adc
and
or
scas
aaa
sub
lock
leave
pop
push
aaa
adc
push
pop
mov
pop
popf
imul
inc
shll
add
jbe
xchg
jmp
jne
sar
cmp
cld
adc
xlat
jl
fisubs
loop
push
loop
xchg
and
jno
xchg
or
cmp
or
sub
jbe
movb
fldenv
dec
xchg
out
mov
andb
out
cmpl
daa
and
seta
test
je
insb
cmp
inc
or
or
adc
dec
inc
push
pusha
and
inc
dec
push
dec
push
or
pop
cwtl
ss
add
adc
and
push
adc
jns
test
xchg
and
hlt
pop
push
pop
test
jb
stos
and
and
into
adc
test
aad
in
mov
sbb
jg
notb
jo,pt
adc
xor
xchg
ret
sbb
push
in
fyl2xp1
cmp
or
sub
adc
repz
ret
movsl
or
sub
or
inc
rorb
sbb
adc
arpl
mov
and
cmp
jb
test
xor
mov
adc
xchg
xchg
mov
pop
pop
and
das
push
pop
imul
adc
inc
outsb
xor
test
xchg
movsl
das
xchg
or
and
adc
push
pushf
ljmp
jle
sub
dec
je
data16
cwtl
xor
int3
addps
jne
push
jbe
sbb
jmp
and
push
inc
cs
inc
pop
push
adcl
or
and
nop
mov
dec
fstpl
rol
mov
adc
jle
inc
push
pop
mov
in
test
sub
testb
add
dec
jmp
or
push
mov
cmp
xchg
push
mov
adc
dec
xchg
in
out
addr16
imul
and
xor
fistps
shl
lea
ret
push
push
adc
cld
xchg
push
dec
shll
in
xor
or
cmp
in
sub
dec
sbb
shll
or
push
cmp
daa
push
sub
sub
push
jl
fs
lds
add
jmp
adc
inc
ret
xchg
dec
xchg
xor
pusha
and
push
call
push
out
popa
pop
xor
je
pop
dec
mov
fcomi
jb
adc
xor
adc
lret
sub
and
xchg
ss
nop
push
dec
push
test
test
popa
insl
xor
mov
cmp
mov
or
push
clc
ja
or
cld
push
hlt
push
cwtl
mov
rorb
pop
std
iret
jg
add
test
add
push
in
adc
jecxz
lret
test
push
adc
push
cmp
push
mov
xor
pusha
mov
xor
xor
and
sti
push
jl
cmc
push
jmp
dec
cs
dec
or
or
cltd
push
nop
inc
stos
lret
pusha
mov
pop
jg
sbb
dec
push
jb,pn
and
das
jbe
add
clc
cmp
sbb
lret
sti
shll
and
xor
adc
loop
imul
or
shrb
cld
dec
and
xor
or
aaa
aaa
jne
gs
js
call
jne
testb
adc
lock
adc
leave
wrmsr
mov
inc
dec
pop
and
ret
pop
push
and
pop
dec
push
push
push
push
in
mov
repnz
adc
jp
bound
xchg
je
test
loopne
and
inc
stos
lret
sbb
ss
cld
lods
sub
andb
dec
nop
loop
mov
shlb
inc
bound
xchg
inc
js
adc
xchg
cli
cld
push
push
add
cs
xchg
pop
mov
adc
or
and
push
pop
rorb
sub
imul
jbe
and
mov
ss
add
bound
pusha
mov
test
jo
adc
jae
ss
pop
push
sub
mov
outsl
adc
push
clc
xor
adc
push
call
movsl
fidivs
inc
pop
ret
push
call
popa
xor
mov
inc
add
in
cs
lret
push
gs
mov
dec
shlb
sti
adc
dec
ret
dec
sbb
sbb
or
mov
mov
or
mov
movsb
xchg
sbbb
stos
adc
pop
sbb
mov
mov
jb
bound
and
adc
and
bound
pop
roll
mov
jae
xor
push
cmp
dec
paddw
gs
in
cs
pop
cmp
sbbl
pop
pop
iret
inc
in
cmp
and
cmpw
push
repz
dec
xlat
and
mov
dec
and
jmp
adc
adc
push
xchg
test
nop
loop
lods
xor
mov
aam
pushf
js
inc
or
dec
les
sub
inc
xchg
add
mov
cmp
mov
call
dec
ds
push
xchg
imul
mov
test
inc
mov
xlat
cmpsl
fisttpl
dec
sbb
or
jge
dec
adc
and
lret
adc
or
jmp
leave
shll
sbb
cmp
dec
std
sub
sbb
aas
fsubs
dec
push
rclb
jbe
add
and
call
adc
fldcw
dec
inc
jbe
push
adc
jg
icebp
leave
push
mov
add
pop
dec
inc
inc
push
rorb
inc
or
cmpsb
mov
pushf
dec
int
in
pop
sub
xor
je
inc
inc
repnz
in
cmp
inc
cmp
lret
out
mov
mov
jmp
lcall
jnp
push
stc
dec
pop
jge
in
fstpl
jnp
cld
inc
push
adc
hlt
les
shr
and
adc
push
mov
or
mov
xchg
sub
jnp
mov
imul
mov
orl
adc
xchg
dec
sbb
lahf
pop
lods
clc
mov
add
test
mov
or
movl
adc
xor
or
movsl
push
fdivr
inc
int3
pop
loopne
fadd
adc
jmp
jne
dec
inc
sub
xchg
nop
add
enter
add
sub
jno
cmp
mov
mov
push
je
sbb
bnd
pop
mov
push
cmp
xor
mov
jne
sbb
das
jecxz
add
push
pop
sbb
lcall
dec
xchg
les
push
dec
mov
xor
push
stos
push
cmp
out
push
xchg
push
and
cmpb
aad
sbbl
cs
int
pusha
shrl
and
mov
jo
inc
push
inc
movsb
imull
cld
cmp
jne
notl
in
lods
out
std
setne
test
andl
enter
dec
inc
fnstcw
or
add
dec
mov
jmp
mov
lock
inc
add
cs
outsb
mov
inc
inc
sub
dec
enter
aam
sub
mov
je
add
js
or
pop
push
mov
mov
push
inc
mov
dec
mov
wbinvd
cmp
inc
mov
sub
hlt
dec
adc
pop
mov
or
xchg
rorb
jnp
nop
sti
xchg
cmp
mov
add
sbb
int
rorl
das
xor
push
push
sub
call
inc
test
ljmp
pop
nop
aaa
push
push
xor
insl
push
mov
mov
sub
mov
cld
inc
scas
push
sub
imul
jo
push
out
adc
sub
inc
inc
dec
pop
add
mov
sub
sub
dec
adc
push
push
mov
notb
test
sub
pop
push
dec
mov
adc
adcl
cmpsl
adc
shll
push
gs
xchg
sbb
sbb
and
leave
inc
dec
and
dec
jne
mov
push
mov
call
je
xor
mov
xchg
shr
fs
mov
shll
adc
xor
mov
or
mov
inc
add
and
add
add
dec
daa
push
mov
and
xor
pop
out
rcrb
pusha
ds
sub
sub
mov
call
pop
xchg
mov
mov
or
xchg
xor
call
inc
dec
pop
mov
into
int
dec
xchg
daa
iret
push
mov
sub
push
clc
shlb
mov
push
movsb
and
jge
lret
addr16
sub
fistps
or
mov
data16
cwtl
pop
call
repnz
das
je
out
xchg
cmp
pop
pop
inc
or
push
add
jne
lods
std
dec
pusha
inc
sbb
pop
pop
or
movsb
movsb
ret
pop
mov
mov
xchg
mov
ljmp
leave
jbe
call
dec
ljmp
cmp
mov
sbbl
sub
mov
dec
pop
mov
or
cli
mov
inc
jne
xor
jne
xchg
mov
sub
xor
int3
or
sub
pop
dec
sbb
sbb
dec
sub
pop
dec
and
jae
pop
inc
xor
bound
and
or
mov
dec
loop
push
jg
push
mov
movsb
push
arpl
push
and
xor
sbb
cmp
dec
mov
xchg
nop
mull
dec
push
adc
jl
mov
mov
lret
and
cmp
jb
mov
hlt
sbb
jmp
sub
icebp
sar
add
hlt
or
push
and
aas
movsb
loopne
insl
sub
dec
xchg
pusha
clc
cmc
xchg
inc
pop
pop
aad
orb
inc
popa
xor
push
sub
fcompl
jbe
xbegin
out
jbe
pop
das
push
jb
push
or
sbb
push
dec
mov
test
adc
loop
in
clc
jge
or
xor
and
push
lock
sub
shll
rcll
gs
adc
add
cmp
mov
cmpsb
daa
xchg
dec
dec
stos
adc
add
inc
in
inc
or
jne
aad
ret
popa
rclb
adc
xchg
es
jne
mov
push
dec
pop
adc
sbb
add
stos
and
mov
call
sar
rcll
inc
scas
out
mov
add
pop
mov
mov
icebp
adc
mov
inc
loop
aad
push
sahf
and
aaa
push
push
fidivl
arpl
insl
and
dec
into
mov
inc
pop
negl
scas
push
ljmp
or
jne
jle
mov
mov
add
pop
js
mov
test
shl
inc
lods
fisubrs
fdivs
scas
je
mov
sbb
mov
lahf
lds
dec
inc
jno
sub
lock
inc
jmp
jne
dec
sbb
call
ljmp
lcall
and
lcall
sub
mov
lret
adc
aad
nop
jmp
jae
inc
sub
insb
pop
sbb
fidivrs
lret
dec
jae
cmp
sub
rcll
mov
cmpsb
hlt
cmp
add
ret
nop
pop
outsb
xchg
mov
or
pop
ds
jbe
xchg
sti
jmp
test
rcll
pop
xor
mull
into
call
ljmp
lea
outsl
push
loope
in
mov
add
inc
dec
cmp
and
sub
push
mov
arpl
push
xchg
xor
mov
cmp
jbe
add
jmp
fcmovb
jae
add
pop
and
inc
xchg
adc
adc
fiaddl
or
inc
lahf
divl
dec
sub
in
push
imul
add
shl
mov
xchg
or
ret
test
push
xchg
sbb
adc
fcoms
and
pop
jo
mov
xor
pop
sbb
pusha
xlat
clc
test
cmpsb
adc
xchg
cmp
push
adc
cwtl
mov
pop
lock
nop
adcb
pop
dec
push
push
push
fadds
push
xchg
add
icebp
test
cwtl
mov
mov
adc
add
lods
inc
leave
mov
and
lock
into
pop
ret
jle
mov
std
mov
sahf
call
jbe
pop
cmp
xor
pop
pop
xchg
push
or
rcl
sub
daa
imul
and
inc
mov
and
mov
inc
jbe
cwtl
dec
jmp
enter
push
and
mov
jnp
fwait
add
movl
push
jae
ja
mov
adc
push
pop
xor
mov
and
cld
push
movsb
dec
and
cmp
xlat
sbb
inc
bswap
push
cmpsb
mov
jmp
mov
adc
loop,pn
dec
jl
repnz
push
sub
add
jbe
call
xchg
dec
mov
push
sbb
push
pusha
ljmp
push
sbb
ret
sub
or
dec
dec
lods
icebp
xchg
mov
loope
aas
dec
cmp
nop
and
pop
push
push
mov
sbb
cmp
add
arpl
or
aad
ret
pop
dec
mov
in
lock
out
jne
jmp
pop
adc
es
xchg
enter
xchg
cmp
or
jbe
dec
movsb
add
inc
xor
call
sbb
add
and
xor
xchg
iret
sub
sub
subl
adc
popa
adc
fnstenv
push
cmp
aas
adc
fucomp
xchg
xchg
and
dec
sbb
pop
mov
shrl
cmpl
cltd
mov
in
jbe
mov
sub
fwait
pop
lahf
pop
adc
shlb
dec
adc
push
push
fwait
mov
lcall
add
lret
push
jb
dec
and
add
repz
in
mov
sbb
mulb
and
and
aaa
rclb
or
add
js
adc
jp
adc
xchg
rolb
xor
or
jbe
sbbl
sbb
or
insb
sbb
sbb
adc
mov
test
test
inc
dec
and
or
add
bound
add
bound
movsb
mov
mov
add
xor
pusha
inc
add
xor
daa
or
xor
cltd
add
popf
push
mov
sbb
push
push
mov
cs
mov
call
fcompl
dec
bound
adc
adc
push
cmp
xor
aam
stc
push
movsb
push
adc
fistpll
jp,pt
sbb
sbb
lcall
jnp
add
in
fildl
ja
cli
lahf
xchg
add
inc
bound
mov
xor
loop
xor
aam
xor
adc
movl
popa
mov
sub
call
jne
pop
ds
jge
cmp
mov
xorl
or
lahf
inc
jge
mov
shrb
adc
mov
pop
adc
push
or
jg
xchg
xchg
into
pop
daa
push
push
dec
inc
imul
shll
adc
int
push
push
rclb
cmp
or
or
dec
mov
xchg
mov
out
dec
xor
push
int3
adc
cmp
add
inc
push
or
dec
add
and
pop
mov
mov
std
shll
xchg
mov
aam
outsb
adc
rcrb
jge
ficoml
arpl
dec
out
or
jl
mov
push
xchg
jo
xchg
inc
push
dec
rorl
dec
fwait
enter
shll
je
jae
sbb
push
push
push
fs
adc
mov
mov
imul
pop
cmpsb
jp
imul
sub
out
mov
imul
jne
add
lahf
and
repnz
push
fdivrp
adc
inc
mov
mov
arpl
dec
fcoml
or
in
shr
in
clc
loopne
push
mov
adc
mov
mov
das
push
lods
sti
jo
int3
xor
pusha
add
or
mov
call
cmpsl
adc
push
cmp
test
loopne
out
and
inc
mov
ret
xlat
xor
xchg
or
mov
mov
in
pop
lds
sub
movsb
sbb
ja
in
lahf
sti
pop
ds
mov
cmp
dec
mov
test
mov
jg
fisttps
out
push
bound
fdivrs
cmpsl
pushf
lds
ret
xor
inc
mov
push
sub
sbb
xchg
or
and
push
or
push
xor
pop
cld
sbb
outsl
leave
cli
test
lea
mov
dec
pop
dec
pop
cmp
xchg
lods
mov
inc
xor
ret
fisubrl
push
sbb
or
iret
shlb
push
insl
add
faddl
lret
add
pop
dec
xlat
jo,pn
push
sub
cmpsb
notl
sar
pop
or
adc
pop
xchg
test
pop
pop
mov
pop
adc
repz
or
rcrb
sub
cld
loop
call
lea
outsl
pmuludq
orl
xor
outsb
mov
or
icebp
lea
je
or
aam
shrl
push
nop
pop
das
inc
or
stos
ja
inc
sarb
xor
add
and
adc
jne
hlt
push
cmc
cmc
dec
xchg
inc
ret
sbb
xor
lea
dec
icebp
dec
lods
mov
mov
or
add
add
adc
jg
add
adc
cmp
inc
dec
or
push
cmpsb
jge
jns
out
dec
je
dec
ja
lahf
stos
fs
adc
outsb
loope
cmp
daa
dec
stc
add
call
aad
es
pop
ret
jno
test
ja
push
cmp
inc
and
mov
cltd
mov
inc
sub
xchg
cmp
sub
dec
mov
push
jae
push
mov
pop
lahf
jnp
adc
js
cmpl
pop
call
inc
movl
loop
or
std
mov
add
rorl
mov
or
sbb
out
sub
lock
push
adc
aam
xchg
xor
dec
sub
inc
fistpl
mov
or
bound
jno
test
add
sub
push
cmpl
inc
jnp
sub
push
push
mov
pop
enterw
add
mov
xchg
je
push
sbb
hlt
insb
movsb
sub
inc
in
cmp
mov
mov
jb
xor
mov
sub
push
pop
mov
cmp
loopne
or
or
pop
lds
xor
sbb
jne
pop
das
mov
dec
int
scas
adc
loope
int3
lret
sub
gs
dec
test
cs
sub
sbb
or
adc
jmp
mov
enter
push
shrb
fwait
mov
or
nop
add
hlt
in
push
push
inc
mov
adc
pop
mov
xor
dec
ret
movsl
das
adc
ret
mov
fcomps
cmp
sbb
lock
stos
xor
mov
xchg
pushf
clc
adcb
out
jb
fidivs
fcoms
or
int
hlt
dec
xor
adc
int
mov
push
das
orb
test
push
clc
ret
js
jmp
jne
addl
shlb
cmp
jae
fwait
lea
cmp
lret
and
jmp
aaa
inc
hlt
pop
movaps
push
mov
adc
sub
jne
fadds
mov
adc
pop
faddl
cmp
inc
mov
inc
cltd
dec
sbbb
fsts
loopne
inc
lock
jge
cmp
mov
add
jmp
mov
push
jg
cmpb
push
add
adc
lcall
adc
mov
mov
int3
mov
push
push
sub
jne
mov
movsb
sahf
stos
jno
xor
js
pop
jbe
pop
clc
cmp
shrb
stc
jge
push
loopne
xor
js
push
add
pop
add
mov
and
sbb
cmp
push
mov
mov
push
ret
or
add
mov
and
fnstcw
add
jo
and
adc
add
fimull
rorl
cmpl
add
insb
js
adc
jl
and
xchg
mov
adc
inc
test
xchg
add
aas
add
cwtl
subb
jle
scas
and
icebp
mov
and
mov
int3
xchg
and
nop
imul
cwtl
std
add
pop
orb
aas
jge
or
fldenv
and
sbb
fwait
pop
sbb
inc
mov
shlb
nop
or
xchg
sub
pop
mov
push
pop
pop
inc
es
xchg
inc
xchg
icebp
scas
rol
lock
mov
add
pop
adc
pop
mov
push
adc
add
enter
out
fsubs
fdivr
enter
out
mov
out
loope
add
pop
adc
aaa
ret
add
aas
add
or
jle
in
adc
inc
adc
cld
add
and
clc
clc
mov
test
flds
outsl
inc
addr16
sub
add
sub
cmp
shll
fxam
inc
cmp
dec
jmp
add
icebp
xor
flds
rorb
fnstenv
fdivs
popf
insl
into
push
adc
fdivs
or
and
std
inc
fsubs
pop
loopne
ljmp
subb
sub
pusha
dec
mov
pusha
out
xor
add
jle
sub
daa
mov
test
and
aam
mov
mov
mov
aam
aam
jl
in
cltd
and
pop
clc
jl
mov
loopne
push
lods
les
or
xchg
hlt
add
and
hlt
cmpsl
cmp
push
push
enter
inc
inc
mov
shlb
and
sysenter
icebp
xor
mov
mov
adc
gs
xchg
int3
or
subl
dec
add
test
das
add
jle
outsl
mov
loopne
sub
or
pop
aas
adc
movsl
mov
or
aam
cmpb
push
dec
adc
push
cmp
shlb
push
xchg
adc
movsb
mov
jge
pop
pop
daa
pop
pop
push
daa
imul
mov
cmp
dec
es
call
shlb
xchg
pop
and
stos
pop
cmp
bnd
xor
sub
push
and
inc
shrb
stos
xor
out
push
or
fsubl
mov
push
xor
sti
pop
adc
scas
leave
in
inc
mov
adc
xchg
inc
stos
push
jb
push
xor
mov
push
sbb
cmpl
cmp
or
loop
cmp
xor
jmp
scas
add
mov
cli
xchg
leave
mov
dec
and
repnz
inc
xorl
dec
add
sbb
in
dec
push
add
jae
xchg
cmp
mov
mov
add
cmpsl
sbb
inc
lock
inc
lahf
pop
jmp
clc
push
popf
push
js
adc
call
ss
outsl
int3
ds
sub
mov
xchg
popf
mov
clc
jge
movsb
hlt
pusha
hlt
jno
push
call
xor
push
sub
aad
dec
lods
or
or
test
jmp
les
int3
add
sbb
mov
lods
add
jo
push
mov
shrb
mov
int3
lret
xor
ja
sbb
mov
dec
xorl
inc
adc
jns
outsl
jns
sub
dec
jp
and
adc
lds
dec
or
jo
movsb
xor
cmp
testl
jge
stos
iret
and
dec
pop
xor
dec
fldcw
jp
leave
inc
lret
scas
or
xchg
push
inc
add
jecxz
ret
pop
lea
push
mov
jns
adc
jo
push
xor
inc
addb
push
rorb
stc
add
adc
adc
cmp
stc
sub
stos
das
enter
sbb
das
lea
fdivr
loopne
adc
mov
and
sbb
ret
rdtsc
and
pop
jne
jmp
rolb
sbb
out
inc
fmuls
add
jbe
rolb
push
cld
cli
jle
push
ss
outsl
push
jg
sub
mov
repnz
jle
inc
or
or
mov
inc
add
mov
adc
jno
xchg
hlt
mov
pop
lcall
sbb
or
and
orb
leave
lahf
or
es
mov
sbb
dec
imul
pop
mov
xor
sbb
bndstx
xor
sbb
sub
sbb
test
jg
adc
popf
xchg
sub
lcall
hlt
and
xchg
add
addl
xor
sub
je
sarl
xchg
mov
add
pop
pop
add
mov
adc
dec
popa
mov
push
push
xchg
mov
data16
test
mov
lret
cmp
in
xor
lods
add
cld
sbb
icebp
or
cmpsb
push
addr16
lahf
and
adc
lods
jbe
das
push
fwait
pusha
mov
pop
inc
test
xchg
xor
int3
addr16
pop
add
adc
add
jmp
push
aaa
or
les
sahf
mov
dec
ljmp
push
call
data16
sub
jmp
push
cmc
xchg
ret
jge
add
jns
movb
push
mov
push
dec
rcrb
mov
dec
and
inc
insb
sbb
mov
inc
adc
sbb
idivl
pop
jp
and
stc
push
ja
fsubs
inc
lret
cmpsb
inc
je
in
and
xor
mov
mov
xchg
insb
mov
inc
jne
stc
fwait
jl
adc
mov
or
xchg
aad
pop
cmp
das
jne
loopne
je
jge
inc
leave
and
inc
or
punpckhdq
mov
cld
xchg
sub
xchg
lahf
or
out
push
dec
sbb
and
lcall
or
push
sub
aas
pop
adc
loope
sbbb
and
inc
test
push
mov
jmp
and
mov
inc
push
and
test
daa
add
xchg
add
loopne
and
mov
lea
jns
adc
adc
add
lcall
push
call
movl
clc
test
adc
or
les
xchg
sub
mul
cmp
xchg
pop
aam
sbb
dec
cmc
mov
pop
mov
xchg
mov
lea
xor
xchg
and
sub
inc
pop
push
and
push
ror
adc
pushf
push
pop
sbb
test
icebp
ljmp
fisttps
xchg
dec
jns
and
daa
xor
pop
icebp
inc
add
cmc
shll
and
call
adc
or
push
add
pop
call
adc
nop
or
pop
push
in
push
fsubrl
or
out
sub
jmp
das
sub
cs
fdivrl
pushf
pop
sub
loop
jae
cmpsl
rolb
ljmp
mov
push
popa
orb
fmull
fwait
xlat
stc
xchg
push
inc
lret
out
int
loopne
std
repnz
popa
mov
addl
imul
sub
cli
add
lock
cmp
jne
cltd
ds
arpl
aas
and
xor
sbb
pusha
inc
nop
aas
inc
jge
lret
xchg
or
or
adcb
or
jecxz
sbb
cmp
or
pop
sbb
sahf
loopne
xchg
clc
sbb
mov
loop
cli
hlt
push
jecxz
push
adc
dec
inc
xchg
adc
notb
std
adc
and
push
sbb
sahf
or
push
cmp
adc
dec
xor
inc
xor
cwtl
ljmp
add
cltd
popa
jmp
inc
xor
sub
xchg
inc
add
scas
jg
add
sub
pop
sub
xchg
pop
mov
sbb
push
and
cmpsl
rcrl
cmp
jnp
sbb
in
mov
inc
shll
je
or
add
xor
inc
ret
movsbl
and
cmpsb
pop
adc
sbb
sub
xor
dec
rorb
add
pop
loopne
loope
inc
pop
call
xor
mov
or
fsubr
popf
xchg
shll
jae
push
loopne
out
jbe
sbb
or
push
mov
adc
xor
inc
dec
out
pop
aas
sti
xchg
jp
lock
push
xor
test
mov
bound
sbb
jno
mov
sub
xor
movsb
xchg
dec
sahf
push
inc
pop
cmp
jne
and
testb
push
hlt
nop
xchg
inc
dec
lods
cmc
pop
dec
lea
jmp
jbe
inc
clc
neg
sub
cld
aam
sahf
cmpsb
mov
imul
mull
imull
adc
lock
adc
lret
sub
sbb
jg
ficompl
dec
arpl
dec
stc
push
or
sub
xchg
or
popl
jae
lcall
and
je,pt
xor
sub
rcrl
js
push
push
push
xchg
adc
sub
mov
dec
and
push
adc
add
inc
or
je
inc
call
mov
pop
lret
dec
sub
mov
xchg
inc
inc
lea
loopne
repz
pop
mov
push
fdivs
aas
pop
push
icebp
mov
push
gs
imul
inc
push
mov
dec
push
push
mov
arpl
fwait
popa
pop
mov
daa
push
push
push
js
aad
adc
mov
mov
aaa
fsubl
xor
push
dec
jle
out
aas
mov
add
mov
call
xor
sub
call
dec
add
push
pushf
jns
pop
mov
jecxz
inc
adc
jns
fsubl
gs
cmp
addr16
mov
mov
mov
sbb
fsubrs
addl
dec
or
outsl
insb
icebp
rcrl
into
in
flds
cmp
leave
test
pop
pop
data16
xchg
pop
clc
jp
mov
mov
out
mov
sub
popa
call
or
add
mov
aad
sub
mov
mov
or
and
adc
push
cmpsb
jle
cld
push
roll
stc
std
or
and
or
and
jb
cmp
lahf
sbb
mov
into
mov
jecxz
dec
sub
int
sub
lods
inc
outsl
sbb
dec
inc
pop
inc
sub
jle
into
bound
sbb
adc
roll
lods
pop
aad
push
repnz
or
sbb
cmp
aaa
or
adc
mov
and
inc
mov
or
testb
pop
orb
sub
sub
or
cli
es
push
adc
je
leave
dec
pushf
add
xor
jne
decl
and
mov
push
push
loop
scas
sti
xchg
rorb
ret
testb
je
mov
shlb
cli
mov
cmp
push
jno
jmp
test
mov
push
adc
int
inc
in
lds
pop
cmp
or
out
std
andl
push
in
pop
mov
add
aaa
stc
flds
lock
push
inc
sub
sub
push
iret
adc
hlt
xor
sbb
jle
lea
jnp
xchg
je
fs
ljmp
fildl
mov
mov
or
adc
in
daa
ret
fldcw
ljmp
lret
mov
sbb
dec
mov
cmp
dec
or
add
jae
sub
decb
lahf
push
cs
lock
inc
and
push
call
mov
add
call
leave
pop
inc
roll
mov
mov
mov
arpl
insb
jle
or
and
sub
dec
jne
loopne
and
mov
in
push
aad
sub
jo
into
sub
sub
pop
insb
inc
iret
mov
xchg
out
pushf
inc
pop
cld
lcall
mov
jg
adc
xor
inc
mov
bnd
int3
jae
dec
push
cmpsb
imul
sti
and
push
mov
shrl
sub
inc
sbb
mov
mov
mov
or
mov
jmp
xchg
or
xchg
push
mov
or
mov
mov
or
movsl
int3
mov
dec
or
ret
push
adc
nop
sbb
pop
cwtl
jg
jle
cmp
cld
movsb
insl
pop
adc
xor
shrb
pop
xchg
and
xor
adc
push
mulb
mov
out
inc
lahf
push
arpl
jl
add
adc
mov
inc
leave
std
push
mov
movsb
cs
mov
sbb
mov
shlb
popf
add
inc
adc
pop
adc
loopne
dec
inc
and
insl
adc
lods
ficoml
pop
test
jns
mov
adc
jecxz
mov
push
xor
fwait
mov
out
xor
loope
mov
sub
sub
rcll
jnp
mov
xor
xor
push
scas
repnz
fadds
aam
jnp
repnz
lcall
mov
push
hlt
and
clc
cld
pop
lock
mov
out
push
clc
sahf
mov
cmp
shl
stos
dec
lea
lea
push
andl
sbb
les
into
cwtl
fs
mov
mov
movsl
jmp
hlt
mov
and
addr16
bound
loopne
pop
test
mov
push
and
pop
inc
or
dec
jp
sub
adc
push
adc
add
and
js
push
jne
sub
call
xor
and
jmp
je
test
ja
pop
test
fdivr
jl
cmp
js
call
add
dec
lea
cmp
fmuls
pop
add
jle
pop
push
or
es
cmpsb
dec
imul
xor
mov
mov
test
je
add
inc
or
xchg
daa
repnz
xchg
mov
icebp
into
xlat
and
test
jl
jnp
xchg
pop
sbb
inc
lods
push
jbe
ljmp
or
mov
jg
sarb
andl
loope
in
xor
mov
test
je
cmp
cld
jnp
sub
mov
mov
pop
mov
jne
push
data16
inc
outsl
xor
push
adc
ret
cmp
pop
jmp
or
mov
xchg
push
stc
cmp
cmp
mov
pop
js
or
or
imul
inc
add
imul
inc
test
inc
test
or
jl
mov
adc
inc
aaa
push
push
jmp
lcall
sub
push
push
and
test
andb
mov
dec
pop
call
dec
pop
push
push
xor
adc
cmp
dec
xor
cmp
adc
mov
mov
cmp
mov
test
std
mov
or
dec
cwtl
sub
ret
dec
push
push
call
lock
jne
test
sarb
mov
testb
je
inc
loopne
dec
dec
xchg
sbb
push
ficompl
js
fucomi
dec
or
test
jne
mov
ljmp
adc
push
push
sbb
dec
xchg
fwait
mov
jmp
add
adc
and
sub
mov
cmp
xor
test
testb
movsb
jg
daa
and
and
jne
push
or
lcall
mov
aaa
inc
pop
adcb
or
cli
push
dec
shufps
push
mov
clc
push
gs
test
addb
push
adc
loop
dec
adc
mov
xchg
ds
aam
fcompl
rorb
fsubr
jg
dec
push
nop
or
faddl
sbb
xchg
jno
pop
mov
dec
mov
mov
mov
add
shlb
xor
shr
shlb
pop
jmp
scas
or
xor
sub
js
jnp
cmp
sub
or
jne
sub
mull
fstps
je
adc
and
cmp
sub
shlb
inc
rcrb
in
inc
jnp
or
notl
jle
pop
sub
aas
movsl
cwtl
in
sub
mov
cltd
inc
cmpsb
lods
sahf
addb
dec
punpcklwd
pop
push
sarl
clts
addr16
cmp
in
mov
shrb
aaa
mov
pop
sub
test
jne
add
inc
or
jbe,pt
movsb
inc
sub
mov
mov
orb
pop
inc
rolb
std
rolb
mov
out
xchg
movsb
inc
insb
dec
pop
push
xor
mov
sahf
mov
sbb
loopne
ja
and
sbb
mov
jne
cmp
push
adc
inc
dec
ficomps
and
in
push
or
popa
fs
shlb
xor
xchg
dec
adc
adc
sbb
adc
or
mov
jmp
or
imul
cld
out
mov
or
pop
mov
pushf
pusha
xor
push
aam
xor
call
inc
pop
mov
adc
jne
push
jmp
pop
xchg
imul
jne
clc
pop
sub
adc
push
cmp
test
pop
rolb
inc
xor
pop
dec
jge
inc
or
addr16
inc
xchg
mov
cmp
ror
sub
or
inc
inc
inc
jae
dec
or
popa
lea
movb
push
push
les
pop
push
sbb
pop
pop
test
inc
fbstp
js
dec
add
adc
add
push
adc
or
lea
outsl
sub
adc
mov
and
fistpll
sub
in
xor
jmp
mov
mov
sub
xor
aam
mov
ds
sub
or
or
push
push
xchg
dec
xchg
and
cmp
jbe
loopne
jb
fs
jne
lds
and
cmp
jb
rep
decl
and
pop
stos
loopne
mov
imul
loopne
enter
jo
arpl
lea
aas
nop
adc
cld
dec
orb
enter
and
mov
mov
call
inc
int
add
add
pop
lea
sub
es
pop
push
gs
and
sub
sbb
inc
mov
cmp
or
sub
and
sbb
mov
mov
cmpsb
adc
shlb
pop
and
shlb
pop
and
shlb
push
in
lods
dec
jl
jb
dec
clc
or
or
mov
pop
pop
cwtl
inc
testl
inc
adc
pop
push
push
or
sub
xor
jl
rorb
inc
and
or
icebp
lock
stos
pop
jmp
data16
nop
and
adc
test
stos
xor
stos
adc
xor
sub
push
sub
add
dec
mov
inc
push
mov
rcrl
out
and
out
jle
mov
nop
movsl
sub
mov
and
mov
movsb
shrd
int3
mov
adc
sub
sbb
enter
inc
adc
movsb
dec
adc
dec
or
sahf
cwtl
push
and
or
or
xchg
sub
mov
mov
inc
adc
inc
adc
mov
mov
push
mov
jne
adc
sub
call
test
jae
mov
adc
push
cmp
add
lock
inc
int
sbb
mov
adc
push
cmpsb
or
jb,pn
sahf
insl
adc
mov
sbb
fldl
outsb
aad
mov
scas
stos
iret
daa
test
lret
jmp
scas
jne
shrl
or
push
jmp
sahf
lea
adc
lea
inc
decl
clc
push
data16
cmp
cmp
je
push
cmpb
movsl
jmp
jmp
inc
pop
ret
call
lds
mov
mov
std
pop
and
test
pop
jge
jmp
sbb
add
or
xchg
mov
sbb
mov
adc
lea
pusha
mov
mov
or
inc
add
testb
cmpb
mov
and
popa
jno
or
adc
mov
adc
inc
stos
or
xchg
add
push
or
sub
pop
xchg
mov
or
cmp
adc
jno
lock
jge
popf
fmuls
dec
sub
fistps
cli
pop
mov
pop
cmpsb
pop
push
negl
sbb
ja
add
mov
and
adc
leave
pop
jnp
add
test
adc
ret
jmp
scas
push
jge
inc
lahf
mov
inc
scas
lret
int3
add
adc
in
sub
int
test
inc
fcomp
or
mov
adc
sub
jnp
and
bound
push
and
push
fimuls
int3
pop
dec
or
adc
jne
inc
push
movsb
push
enter
call
pushf
jae
adc
add
mov
aam
mov
pop
ret
cmp
pushf
push
mov
call
cltd
mov
cwtl
adc
adc
cwtl
repz
xchg
xor
push
jb
loop
daa
adc
push
subl
js
popa
sub
adc
es
jecxz
lods
dec
lea
dec
inc
nop
outsl
mov
jae
sub
je
sub
nop
pop
dec
jne
nop
dec
popf
pop
jecxz
dec
pop
adc
and
inc
fsubs
dec
aaa
ja
dec
dec
mov
cmp
rolb
or
push
movsb
imul
push
test
adc
minps
mov
mov
cli
rorb
pop
xor
loopne
test
je
sbb
shl
in
sbb
push
cmovo
add
int
jns
insb
dec
jne
or
std
xchg
gs
ret
or
pusha
sbbb
jl
andb
cwtl
arpl
jmp
add
mov
adc
popa
xor
mul
daa
notl
adc
adc
jb
fbld
or
jo
or
push
xchg
add
shll
ds
add
add
mov
and
imul
nop
sub
cmp
xlat
std
loope
lods
ss
and
shl
inc
jl
enter
push
mov
inc
mov
jmp
sub
sbbl
roll
mov
loopne
inc
or
mov
cwtl
mov
repnz
arpl
xlat
dec
mov
pop
hlt
mov
add
pcmpeqw
inc
dec
inc
lcall
mov
fcoml
adc
aaa
adc
scas
daa
jecxz
xor
test
and
cmpsl
and
and
insl
sbb
repz
adc
mov
add
or
push
std
les
lret
out
sbb
jbe
push
pop
adc
push
cmp
push
dec
mov
push
fisttpll
test
jl
shlb
or
shrb
cld
iret
or
mov
push
loope
mov
mov
inc
int3
lahf
jl
jl
je
insb
mov
push
mov
icebp
mov
or
mov
adc
push
stos
adc
mov
mov
les
aaa
push
mov
pop
sbb
or
inc
mov
or
aad
pop
xchg
hlt
cmpb
add
or
or
sbb
and
aaa
cmp
scas
aad
mov
pop
enter
jl
sub
mov
loope
adc
xchg
icebp
movl
pushl
call
mov
mov
cs
je
les
push
cli
pop
and
pop
test
popf
mov
push
je
pushl
add
dec
inc
xor
fnstenv
and
push
dec
jmp
mov
imul
inc
add
jno
jl
loop
ret
push
cld
scas
mov
sub
xor
xchg
aam
inc
call
jbe
pop
xchg
push
movswl
dec
out
pop
js
outsl
jle
or
gs
in
pop
icebp
mov
adc
jmp
or
mov
fs
xor
adc
mov
xor
ret
adc
push
inc
std
enter
stos
les
dec
addr16
push
lea
push
call
rcrb
push
dec
call
mov
imul
pushl
cmp
jl
jbe
lods
push
add
xor
rcrb
mov
xchg
adc
enter
xor
arpl
cmpl
inc
or
loop
sbb
xor
clc
pop
jmp
repz
mov
and
adc
clc
push
cmpl
push
jne
in
gs
inc
mov
push
dec
xlat
lret
xchg
ss
int3
jl
push
pop
popa
jg
pop
lahf
jno
lods
mov
jbe
cmpsl
xchg
adc
cmp
push
pop
add
pop
or
add
jmp
and
test
stc
sarb
cmp
je
add
inc
sbb
icebp
nop
add
call
adc
pop
push
cmp
jne
sub
inc
adc
mov
call
mov
jbe
jge
adc
mov
mov
rcl
and
scas
in
mov
mov
ret
xchg
push
es
inc
jmp
repnz
lods
push
mov
shl
stos
leave
sahf
adcb
cmp
mov
loopne
nop
test
mov
add
cmp
ja
add
mov
nop
dec
sbb
jbe
sti
cli
repnz
pop
ret
loope
test
rcll
dec
dec
test
and
mov
je
mov
xchg
pop
mov
push
cmpl
orb
pop
and
or
leave
cmp
push
inc
dec
inc
adc
mov
mov
das
adc
stos
add
push
cmpl
call
mov
hlt
add
mov
cmp
loop
lcall
jne
inc
test
and
inc
std
mov
jne
mov
sub
adc
movsb
add
in
and
xor
jge
mov
int3
jg
jecxz
inc
sub
push
clc
or
jb
mov
jne
roll
xor
adcl
in
push
mov
push
dec
addb
mov
add
mov
jb
mov
inc
repnz
add
push
push
lea
and
cmp
ja
sub
mov
imul
xlat
cltd
in
sbb
pusha
ljmp
rcrb
insb
push
mov
cmp
mov
push
mov
mov
or
push
push
mov
test
cmp
and
pop
adc
xor
lods
mov
jnp
lret
lea
jae
mov
call
adcb
add
adc
xchg
nop
pusha
sbb
sbb
add
and
xor
mov
lods
nop
add
test
jle
sbb
pop
les
shll
in
dec
pop
xor
jb
or
push
lods
dec
into
cmp
movsl
jmp
dec
xchg
pop
mov
cmc
cmovnp
fstpl
loop
dec
aad
out
movsl
imul
out
repnz
inc
neg
dec
addl
and
stos
or
mov
popf
mov
testb
cmp
cmp
rclb
cmp
jnp
stc
adc
and
lods
push
cmp
pop
jl
pop
rclb
or
sti
or
stc
adc
jb
enter
ja
call
popf
ljmp
ret
adc
or
test
insb
mov
or
jge
push
ljmp
in
xorb
pop
stos
mov
cmp
add
bound
fucomip
arpl
shlb
push
adc
sbb
xchg
jg
inc
and
bound
cmpsl
insl
loop
pop
or
push
leave
jmp
mov
icebp
leave
sub
nop
lret
ret
mov
push
inc
xchg
jnp
mov
lds
je
imulb
test
jb
enter
cld
out
xor
out
mov
and
adc
rol
inc
les
lret
out
add
mov
or
sub
dec
pop
pusha
out
sub
fmuls
scas
call
in
cmp
adc
pop
aas
pop
sub
xor
pop
loopne
pop
ja
cmpsb
ja
in
cmp
jl
lahf
stc
sahf
mov
ljmp
cmp
je
add
dec
xchg
out
pop
inc
xor
mov
push
cmp
mov
push
loope
sub
and
movsl
jo
sub
aaa
and
or
pop
cmp
lods
sbb
nop
and
mov
pop
xor
nop
mov
pop
pop
fidivrs
or
loop
and
dec
xor
adc
leave
pop
std
or
invd
inc
fnstsw
mov
rorb
xchg
inc
adc
xchg
push
adc
pop
cmp
cmp
adc
adc
push
call
adc
jo
roll
cld
cmpsb
test
mov
push
cwtl
ljmp
lock
cmp
sub
std
xor
pop
sub
lcall
jle
cmp
inc
xor
xor
lds
orb
and
push
daa
cmp
xchg
or
xchg
shlb
aad
mov
jno
add
jmp
push
xchg
ret
jge
xchg
xchg
jbe
jmp
arpl
aam
imul
rcr
xchg
sti
adc
ljmp
stc
ret
cmp
mov
dec
push
shll
xorl
and
cli
jl
inc
xor
push
add
sarl
lea
rcrl
jle
cmp
cmp
cmp
dec
and
inc
inc
add
cmp
jge
fsub
lock
pop
cmp
jne
jp
pusha
sbbl
adc
or
xchg
push
test
and
cs
sbbb
adc
xchg
push
cmp
mov
rcrl
pop
adc
jmp
rcrl
push
das
xchg
repz
mov
add
hlt
inc
sbb
aaa
or
xor
mov
adcb
cmp
lret
push
mov
jae
cmp
jne
lock
and
sub
xchg
lds
inc
sub
rolb
jne
ret
shl
enter
add
or
jg
mov
lret
push
jno
inc
add
gs
in
into
xor
dec
int3
sub
pop
sbb
movsb
cmp
mov
mov
pop
and
in
fsubr
cmp
adc
push
sbb
repnz
inc
sub
dec
mov
pop
add
fsubr
pushf
js
cmpsb
jae
movsl
cmp
sbb
cli
jne
test
gs
jle
iret
dec
xlat
in
push
and
or
mov
push
xchg
adc
xor
jge
xor
aam
mov
push
mov
mov
dec
mov
mov
sbb
jo,pn
cmp
add
fwait
add
dec
push
arpl
pop
hlt
fnstcw
inc
scas
xor
jbe
repnz
mov
pop
mov
out
sbb
or
mov
and
pop
rcrb
mov
sbb
jae
mov
shr
push
mov
in
enter
pop
push
push
lods
jnp
sub
jle
es
jbe
sub
clc
movsl
fs
popf
and
mov
and
out
add
inc
movsl
movsl
outsb
sbb
test
xchg
mov
in
xchg
cmp
fucomi
xchg
inc
inc
pop
adc
adc
push
cmpb
dec
pop
jne
push
test
push
sbb
jmp
xchg
push
sub
inc
and
sub
push
dec
and
mov
mov
nop
or
jne
jmp
enter
cwtl
push
sbb
std
sub
and
mov
lahf
fcoms
lds
or
dec
or
daa
loopne
imul
jnp
xchg
mov
add
mov
aam
shll
sub
imul
or
arpl
and
out
push
adc
adc
push
inc
pop
mov
xchg
sarb
in
and
out
mov
sbb
push
mov
cmp
mov
pop
call
add
scas
push
and
cmp
outsl
mov
add
adcb
jne
pop
ret
and
add
aaa
jmp
fadds
push
cmpl
loopne
sub
js
jbe
sbb
dec
sbb
dec
or
sbb
push
pop
and
push
sbb
jmp
pop
add
rorl
je
jmp
sbb
movsl
sbb
dec
and
enter
sub
addr16
mov
aad
fwait
cmpsl
lock
into
add
cmp
lds
stos
adc
mov
push
and
dec
and
adc
lahf
std
fsts
dec
push
out
daa
testb
js
leave
cmpsb
es
fadd
pop
mov
or
or
inc
jae
push
sbb
adc
fsubrp
add
jb
mov
pop
rorl
stc
adc
loope
or
cmp
sbb
mov
adc
mov
adc
and
std
movsl
adc
out
sbb
fidivrl
fadds
cmp
call
jne
pop
ja
das
adc
in
sub
popa
adc
jle
jmp
cli
lea
add
add
clc
jle
ss
xor
xor
das
cmp
repnz
clc
fcompl
sbb
jg,pt
iret
push
hlt
jp
cmc
mov
cld
ds
jmp
push
in
xchg
popa
lret
xor
movsb
test
push
sub
sub
push
adc
imul
or
jno
pushf
std
movsb
das
push
dec
mov
mov
jmp
jmp
dec
mov
ja
lods
hlt
xchg
insb
sbb
and
sbb
fadds
push
sbb
jae
cmpl
inc
lock
clc
jae
mov
ret
mov
test
sar
adc
outsb
add
dec
hlt
shll
cmpb
movsb
jne
add
imul
push
pop
outsl
adc
add
shr
add
or
aam
xorl
sbb
movsl
inc
pop
movsl
stos
dec
out
xchg
or
loope
or
pop
loope
test
mulb
cmp
inc
roll
or
adc
loop
dec
cmc
fs
mov
mov
dec
dec
ja
ja
inc
mov
or
cmp
ja
loop
lcall
movsb
movsl
adc
dec
paddd
clc
add
sbb
hlt
jno
adc
sbb
add
xor
sbb
mov
ss
enter
addr16
xchg
and
ret
and
add
cmp
aas
adc
sbb
xchg
add
call
insb
in
push
je
dec
outsl
mov
and
mov
sub
xchg
jae
push
push
adc
loope
cs
xor
aam
out
jne
dec
das
rorb
das
sbb
aam
push
fmull
push
push
call
insb
push
in
cmp
jo
push
arpl
or
fisubl
dec
jo
int
jb
pop
jl
push
mov
rorb
aad
insb
sub
and
mov
jge
dec
insl
outsb
test
imul
add
dec
xlat
push
pop
xor
iret
xchg
dec
in
mov
popf
add
jns
and
jo
dec
aas
and
sub
and
adc
mov
ret
push
out
shrl
mov
add
dec
push
lods
lds
xchg
jle
in
sbb
rcrl
dec
cltd
add
jae
mov
je
mov
je
dec
adc
mov
test
in
push
jo
jl
adc
out
and
jno
xor
adc
xor
adc
push
mov
ret
cmp
and
in
mov
es
push
xchg
mov
inc
jae
test
shl
sbb
sub
fsubl
or
jne
pop
and
xor
xchg
xor
test
jne
call
adc
pop
fsubrp
adc
xor
jg
adc
jmp
dec
jl
lds
mov
dec
cli
cwtl
std
push
sbb
lds
sbb
inc
stos
sti
or
int
mov
jmp
pop
sbb
add
mov
xchg
push
push
mov
enter
xchg
ret
cmpsl
push
sub
sbb
and
ljmp
rolb
sbb
xchg
in
push
addr16
ror
les
add
push
mov
lret
pop
sarb
das
xor
out
lret
mov
pusha
cli
aad
sub
sub
mov
jmp
aam
mov
rcr
fimull
pop
jmp
stc
enter
jno
xchg
mov
sub
mov
ret
xchg
clc
stc
sub
shrl
add
jo
je
addr16
arpl
cmp
or
or
add
mov
inc
in
add
mov
push
dec
adc
adc
jmp
push
mov
pop
je
fadds
pop
adc
test
pusha
adc
imul
orb
data16
adc
inc
fidivrs
mov
mov
xchg
inc
xor
mov
out
cmp
add
cwtl
lahf
cld
je
enter
jne
push
call
xorb
imul
cmp
addr16
sub
lea
bound
mov
dec
fisttpll
adc
add
pop
ss
dec
sarl
dec
mov
ret
sar
ret
inc
lret
mov
rolb
xor
out
sahf
rcrl
rcl
je
das
push
push
dec
pop
xor
cmp
mov
movsb
jmp
mov
push
adc
fstps
loopne
dec
clc
and
mov
jp
mov
mov
dec
add
and
jl
or
inc
test
adc
lret
push
shl
lret
dec
pop
add
stc
out
cmp
aam
les
adc
imulb
in
orl
inc
orb
jl
or
jg
movsbl
mov
or
bswap
jb
pop
dec
and
xchg
roll
les
xchg
js
mov
or
sbb
xor
push
fadds
or
push
aam
lds
xchg
orl
mov
add
pop
dec
jecxz
adc
push
nop
popa
or
popf
dec
or
xchg
mov
cmpb
push
adcb
add
jne
aad
loop
faddl
ss
fstl
lea
int
cmc
cld
jmp
das
mov
adcb
pop
test
push
enter
add
sbb
shr
scas
cmp
out
sub
add
push
dec
mov
or
or
mov
cmp
mov
repnz
orb
ss
mov
push
inc
movb
jmp
les
mov
ret
ret
testb
pop
mov
imul
add
insl
sbb
push
das
cmp
insl
dec
pop
xchg
bound
inc
repnz
sub
lock
sub
leave
jg
jae
xor
insb
and
addb
mov
ret
or
mov
int
sbb
in
movsb
and
push
roll
rorb
mov
popf
hlt
mov
or
daa
test
imul
mov
cmpw
repz
inc
jmp
enter
add
and
inc
ror
add
cltd
cmp
int
mov
push
popf
jmp
and
and
xorl
add
lock
mov
enter
sub
pop
jle
into
or
cmpsb
lds
jno
les
pop
ja
pop
mov
dec
or
inc
or
cli
dec
add
fiaddl
sub
inc
add
xadd
shr
stos
in
shl
sbb
ljmp
in
xor
mov
lcall
inc
push
addr16
sub
inc
sysexit
cmp
jle
mov
or
mov
pop
add
loop
mov
jl
shlb
cmp
cld
jae
mov
outsb
or
or
xchg
arpl
dec
mov
neg
dec
mov
mov
mov
subb
and
and
out
mov
or
push
notb
cld
inc
mov
dec
test
inc
ret
call
adc
xor
sub
dec
add
jg
xor
push
bound
jl
sub
loop
inc
lods
int3
inc
daa
jmp
cmp
rcl
and
add
adc
adc
push
dec
push
dec
or
icebp
dec
jmp
or
movsb
ds
dec
testb
je
mov
xor
adc
add
mov
nop
or
test
dec
add
and
or
mov
in
test
adc
daa
adc
jmp
inc
xchg
jns
imul
sahf
and
pop
jmp
ds
and
or
cmc
gs
pop
xlat
pop
rcrb
or
sahf
aad
and
or
aam
jmp
lock
mov
sbb
jecxz
sbb
add
jns
in
mov
xchg
cmc
or
mov
add
cmp
xchg
mov
movsb
in
testl
leave
daa
sub
in
sub
imul
mov
sbb
lock
clc
cli
std
aam
push
xchg
data16
and
or
ret
xor
and
sti
push
cmp
mov
pop
int3
or
sbb
jmp
scas
sub
push
xchg
xchg
add
xchg
pop
les
or
movb
aaa
subl
adc
test
cmp
cmpsl
jo
test
sub
or
mov
lar
xchg
and
add
mov
lock
mov
call
sbb
or
cmp
push
aaa
pop
sti
or
or
clc
or
repnz
sbb
lock
inc
cmp
lea
icebp
or
inc
xchg
mov
popf
fwait
xchg
fwait
jle
lea
push
mov
jmp
sub
xchg
adc
or
call
mov
cmpsb
roll
mov
int
iret
gs
sbb
test
push
push
sbb
in
mov
inc
push
or
inc
sarl
xchg
mov
push
decl
js
movsb
adc
out
mov
stc
sub
lods
call
jbe
xor
pop
mov
and
sub
test
fmuls
or
jp
mov
push
pop
and
push
faddl
dec
jb
data16
insl
pop
adc
or
testb
dec
aaa
aas
test
push
outsl
loop
mov
jl
pop
fs
or
repz
dec
sahf
jg
push
fcomp
cmc
pop
or
or
add
push
push
inc
call
popf
jmp
inc
add
jmp
or
xchg
sub
adc
fucomip
popa
adc
pushf
cs
dec
adc
mov
or
inc
and
test
enter
dec
push
les
xor
dec
and
mov
mov
or
movsl
adc
push
dec
or
scas
mov
mov
mov
mov
and
xchg
jmp
xor
dec
lock
aas
rorl
jne
call
repz
adc
add
jle
cwtl
mov
repnz
out
scas
movsb
fidivrs
cli
or
sub
jne
push
mov
push
test
add
adc
sbb
movlps
andb
in
in
cmpw
and
and
cmp
orl
mov
ljmp
in
sbb
repz
xor
xlat
push
movsl
or
xor
sbb
out
and
insb
xor
lret
cmp
push
ss
in
push
push
ret
mov
inc
and
movsl
sbb
xor
jno
mov
push
je
add
or
sub
mov
inc
cmp
jne
dec
inc
push
push
jle
push
or
xor
adc
adc
fs
add
adc
icebp
mov
sbb
mov
or
push
inc
dec
jle
sbb
cmp
lock
xor
sbb
xor
sbb
stc
xor
enter
scas
push
sarb
mov
sbb
cmp
repnz
mov
mov
shlb
or
data16
add
popf
and
call
jge
push
test
mov
sub
or
xchg
cli
jo
out
add
je
ss
imul
or
repz
or
popf
subl
or
cmp
js
orl
push
push
insl
mov
jne
std
adc
sbb
mov
or
imul
or
adc
popa
pop
adc
rcrl
cli
loope
dec
jb
into
add
jmp
mov
in
mov
sub
ret
pusha
mov
pop
shr
ret
leave
add
and
add
cmp
negb
cs
jno
jp
insl
adc
lea
xchg
cli
adc
push
cld
or
adc
test
pop
or
pop
jle
cli
sbb
jbe
push
pop
cmc
jmp
cwtl
or
shll
jae
mov
lret
out
shll
fsubl
pop
add
sub
test
pop
ret
pushf
mov
push
and
lods
or
fcomps
or
pop
jp
mov
sbb
push
das
mov
arpl
push
or
xor
add
clc
mov
dec
xchg
hlt
mov
in
inc
sub
and
ss
dec
pop
mov
jmp
inc
mov
cmp
and
arpl
mov
cmp
cmp
sbb
xor
shr
or
and
dec
add
xchg
orb
test
sbb
inc
xor
jp
sub
decb
jne
iret
mov
mov
mov
pop
shrl
fildl
xchg
pop
insl
gs
pop
mov
cmp
push
jne
mov
mov
jne
les
jae
test
orb
pusha
insb
in
or
outsb
loop
scas
out
sbb
sub
add
mov
cmpsb
mov
aam
enter
lods
adc
jl
cwtl
jle
lock
pop
test
outsb
sbb
cmpsb
shl
sbb
dec
or
rcrb
sbb
push
mov
addb
push
push
or
or
inc
clc
xorl
fisubl
and
dec
inc
or
in
popl
adc
js
mov
sarl
or
mov
fstl
rcll
data16
or
shl
ret
enter
repz
push
test
jecxz
leave
in
outsb
cmc
shl
or
inc
and
dec
insl
or
arpl
dec
push
fadds
cmp
cmp
adc
fs
xor
je
sub
sub
pop
and
fs
push
stc
add
mov
xlat
inc
or
jne
jmp
or
xor
call
test
fdivrs
dec
fnstsw
cmp
pop
sbb
jl
and
pop
iret
mov
dec
pop
cld
xor
out
jne
mov
fsubs
add
xchg
pop
dec
aas
jae
adc
pop
inc
sub
es
or
out
and
adc
test
pcmpeqb
in
ficompl
pop
iret
mov
iret
adc
lea
adc
mov
cs
cli
enter
pop
mov
xchg
cmp
ficoml
inc
jo
inc
push
add
scas
enter
or
pop
push
xchg
xchg
lods
enter
and
js
pop
cmp
xlat
je
lea
jmp
orl
mov
jne
arpl
pop
lret
mov
shl
inc
jmp
arpl
mov
sub
icebp
pop
xor
cli
dec
je
sub
jle
cmpsb
enter
cltd
or
and
popa
cmp
test
cwtl
add
mov
daa
clc
pop
pop
cmp
hlt
in
push
and
clc
or
cvtps2pi
enter
pop
and
jmp
lret
adc
sbb
push
outsl
adc
mov
sarb
test
lcall
xchg
rolb
jl
rolb
inc
out
push
sub
fimuls
sahf
xchg
fs
push
adc
or
jge
or
mov
mov
shr
or
je
pop
nop
xchg
jl
adc
das
sub
loopne
xchg
push
jnp
pop
lea
push
or
lret
sub
fbld
addb
push
xor
int3
jne
out
ror
inc
add
or
cld
mov
addr16
ds
cmp
adc
pop
cmpsb
jo
and
dec
add
xor
or
add
rcrl
gs
addb
sti
ret
test
leave
sub
les
inc
xor
xor
fwait
hlt
add
inc
adc
outsl
or
mov
adc
or
es
push
mov
dec
pop
lret
pop
dec
and
sub
mov
test
inc
fimull
and
push
cli
jno
dec
cmp
jmp
loopne
es
cmp
imul
xor
mov
xor
push
add
push
adc
pop
sti
xchg
shl
fnstsw
push
cmpb
jb
lcall
xchg
add
add
cli
ja
jmp
sbb
pmovmskb
out
in
cld
vmptrld
inc
lock
inc
push
xchg
ret
shrb
subb
adc
sub
jbe
inc
jae
test
pop
fmull
inc
dec
or
adc
addr16
xchg
jae
dec
enter
rolb
dec
leave
rolb
fcomps
and
mov
dec
adc
push
adc
and
lea
sub
ljmp
wbinvd
test
dec
cmp
pop
subb
xlat
xchg
mov
out
jle
leave
test
lsl
cmp
inc
popl
lcall
adc
or
pop
adc
orl
mov
lea
repnz
inc
sbb
and
pushf
nop
cmp
jbe
lret
or
push
jg
shll
sub
add
pushf
xchg
test
fsubl
incl
mov
fidivs
daa
adc
pop
add
stc
sbb
add
int3
pop
inc
mov
or
sbbb
sbb
mov
mov
jne
add
pop
or
xchg
adc
jnp
xchg
iret
rclb
out
push
data16
jmp
and
dec
sub
dec
add
popf
inc
pop
xor
je
add
out
inc
popa
and
clc
jmp
fldl
jge
fildll
dec
mov
xor
pop
xor
not
push
mov
xor
cmpl
sub
test
movsb
and
subb
push
ret
insb
inc
into
inc
je
mov
push
push
insb
inc
dec
mov
sbb
jp
add
aaa
cwtl
cmp
add
or
cmc
mov
and
dec
mov
mov
lds
dec
es
sbb
jecxz
test
mov
into
adc
xchg
sub
inc
bound
mov
and
cld
test
shr
push
adc
out
ret
or
js
jmp
sbb
pop
popf
call
push
dec
push
sub
sub
pop
aad
and
xor
lods
push
add
push
dec
xor
pop
mov
mov
imul
arpl
xor
mov
mov
inc
adc
xor
mov
outsb
sbb
dec
add
mov
sub
std
orl
ror
inc
mov
xor
xchg
cmp
jl
inc
or
daa
cmpsl
mov
ret
cmp
push
jae
orb
inc
fldl
ljmp
mov
jmp
mov
call
jno
decl
lods
inc
je
push
outsl
ficoml
xor
aam
test
shlb
xlat
adc
cmpl
test
dec
shll
and
push
xchg
mov
adc
xchg
or
inc
push
sbb
jle
pop
sub
mov
aaa
lock
scas
cmp
adc
fists
sub
das
push
inc
mov
or
and
fs
mov
gs
clc
add
or
sub
lcall
lock
cmp
sbb
pop
jns
lea
pop
loop
add
inc
push
inc
cli
sub
or
push
push
call
cmp
jg
jo
push
daa
xchg
mov
notb
xchg
jbe
or
adc
idivl
je
aaa
jmp
test
jne
xor
mov
incl
cmp
daa
jb
dec
add
add
inc
loop
sarl
sbb
icebp
or
aas
lret
shl
sub
loopne
stc
or
cs
lsl
and
cmp
dec
cmc
add
icebp
inc
jne
incl
add
and
adc
xchg
in
sbb
pop
les
push
mov
and
push
sbb
adc
sub
movb
inc
push
mov
lock
mov
js
clc
lret
add
pop
add
adc
mov
jmp
jge
push
movl
jb
mov
dec
test
jle
es
cmp
xor
sbb
push
dec
es
cmpl
jge
jb
movsb
inc
jl
cmpsb
mov
je
jmp
inc
or
or
sub
push
add
cmpl
call
aam
aas
fdivr
xor
jmp
icebp
pop
sub
cld
xor
sub
push
out
loopne
and
cmp
jns
or
movsl
rorb
cmp
xlat
adc
bound
test
popa
pop
mov
pop
loopne
dec
les
popl
test
orb
sbb
mov
test
movl
shrl
mov
aaa
inc
cmp
jae
mov
cmp
repnz
shlb
push
inc
or
rcll
adc
sub
xchg
mov
xchg
ds
and
jmp
call
lret
sub
push
js
sbb
fcmovu
and
rcr
push
nop
and
sub
push
sbb
add
enter
mov
addr16
or
lea
xchg
pop
lea
and
lea
mov
cmpsb
jae
add
sub
mov
or
pop
pop
mov
cmp
add
cmpb
mov
mov
inc
mov
test
jne
mov
jae
pop
pop
loope
in
add
sbb
mull
popa
clc
sub
jle
mov
xchg
cmp
mov
cltd
out
or
jmp
mov
cltd
jne
mov
divl
int
push
push
push
mov
or
movsl
pop
rcrb
and
sbb
loopne
or
lods
sbb
stos
cltd
cmpsl
cwtl
add
mov
xchg
ret
daa
ret
adc
inc
imul
jmp
les
cmpsl
jo
sbb
mov
rcll
mov
mov
ud2
lock
sub
and
pop
or
inc
sub
addb
or
dec
mul
pop
sbb
adc
mov
add
cmc
inc
and
push
jmp
jae
sub
and
ja
rcll
adc
mov
sbb
inc
mov
push
faddp
shlb
inc
sub
sub
jae
decb
pushw
inc
cmpb
pop
or
stos
inc
arpl
add
in
shlb
test
add
adc
push
xor
data16
push
mov
mov
add
inc
pop
repnz
jae
adc
pop
jmp
mov
movsl
jge
in
ret
pop
fidivl
test
sti
js
ja
movzwl
cs
nop
scas
inc
arpl
fists
mov
fld
add
add
xor
jmp
jno
je
test
repnz
cli
cli
adc
cmp
add
jmp
lea
test
jae
adc
lcall
pop
out
in
dec
ss
mov
test
xor
push
xor
inc
clc
pop
xchg
dec
test
inc
stc
add
dec
mov
std
push
loope
jecxz
mov
ficoml
call
xchg
jge
cmp
jne
inc
sbb
or
add
mov
cmp
lret
jb
xchg
mov
jns
xchg
fs
lock
test
stos
mov
test
mov
inc
cmp
push
jge
ss
jnp
jb
xlat
push
mov
test
pop
or
jmp
orb
loope
mov
inc
testb
push
aas
xchg
mov
jge
jl
fadd
scas
aas
in
mov
ficoml
sti
in
cmp
lea
mov
pop
lahf
jo
or
call
lock
je
and
andb
lods
aaa
rorb
push
mov
lods
sti
or
jge
insb
sub
push
and
sub
mov
repz
inc
mov
xor
lcall
and
sbb
mov
sti
xchg
fdivl
sbb
mov
cmovnp
jns
cmp
jne
in
ret
cmp
setbe
push
fwait
mov
and
jae
inc
push
sub
test
nop
xchg
dec
push
mov
pop
adc
fs
cmp
inc
fcoml
xlat
dec
adc
movsl
jbe
add
mov
inc
mov
enter
inc
jl
cwtl
data16
xor
pop
loopne
jl
inc
and
push
cmp
sbb
in
popa
stc
les
lea
add
sbb
decb
popa
pop
shl
inc
adc
inc
in
call
out
xor
and
and
stos
outsb
scas
out
xchg
and
mov
in
hlt
push
sbb
cmp
and
mov
cli
xchg
inc
enter
into
xchg
mov
cs
and
or
sub
or
add
push
loopne
push
pop
xchg
aam
aas
push
test
mov
enter
mov
xor
inc
jg
fwait
inc
pop
int3
pop
lret
pop
mov
sbb
xchg
xor
sbbl
call
mov
mov
lahf
mov
or
int3
mov
push
mov
cmp
dec
pop
dec
add
les
push
sbb
and
outsb
cmpsb
or
xor
and
and
push
xlat
mov
call
sbb
lods
ljmp
jg
xchg
notb
daa
sub
sahf
push
push
mov
sbb
mov
push
loope
dec
pusha
fs
roll
add
dec
add
xor
ja
das
int
xor
add
jmp
push
pop
enter
das
rcll
mov
testb
pop
cld
adc
decb
mov
jb
adc
adc
jmp
sbb
push
in
dec
lea
or
and
push
aad
in
inc
sbb
cltd
add
test
or
xchg
xchg
stc
add
or
or
cwtl
push
mul
scas
or
fadds
in
or
add
inc
loope
rcrl
aaa
mov
push
pmulhuw
rclb
push
add
fsts
mov
pop
push
xchg
outsl
jmp
mov
xor
and
push
movsb
popa
push
and
test
das
dec
jne
push
aaa
jmp
cmp
je
in
push
out
cmp
insb
xor
cli
cmpsl
iret
pop
fadd
scas
fs
push
in
cmp
imul
mov
push
out
lods
or
pop
pusha
jne
clc
mov
test
dec
out
sub
xor
pop
cmp
inc
jg
cmp
arpl
xchg
jle
sbb
pop
sub
or
and
inc
inc
int3
add
sbb
aad
movl
pop
adc
test
call
inc
stos
mov
ja
adc
sahf
movsl
inc
dec
adc
fmulp
iret
cmp
nop
roll
inc
xchg
push
inc
ret
fidivrs
call
and
dec
test
dec
inc
fs
mov
fistpll
scas
fiadds
add
push
fs
and
call
fisttps
daa
jmp
shl
and
rorl
jl
jb
shll
aam
bound
mov
dec
mov
adc
sub
fdivrs
divl
and
push
inc
jle
sbb
mov
cmp
or
fcmovne
xor
aad
pop
sub
stc
mov
add
pop
mov
inc
adc
loopne
adc
fistpl
je
push
lret
push
in
lds
nop
mov
inc
bound
jmp
mov
or
and
push
clc
bound
loopne
jno
and
push
pop
inc
test
push
lea
inc
dec
or
mov
dec
sahf
sub
fadds
cmp
lret
mov
out
pusha
lea
push
xchg
cmp
subb
sub
daa
push
inc
cmp
xor
leave
andb
rol
xchg
dec
cmp
lahf
sbb
js
or
cmp
popa
mov
or
sub
mov
jns
adc
nop
shll
test
fadds
push
or
dec
shrl
ret
je
mov
cmp
test
xchg
mov
stos
les
stos
lret
xor
add
and
push
adc
jne
ljmp
fs
adc
sbb
ja
mov
inc
xchg
jo
ds
or
and
aaa
sbb
cli
push
xchg
movsl
jns
add
pop
sbb
mov
push
cmpsb
mov
sahf
sbb
add
call
pop
push
push
clc
jmp
xor
mov
xor
pop
lock
cmp
cmp
push
mov
add
push
call
push
pop
inc
cmpb
aas
and
pop
imul
pusha
imul
xor
repnz
arpl
jne
pop
test
test
mov
or
es
mov
mov
sub
std
enter
mov
cmpsl
sti
xor
pop
xor
and
inc
mov
and
clc
outsl
pushf
int
jecxz
mov
icebp
fs
mov
xchg
lods
std
inc
xlat
adc
incl
xor
jb
cmp
call
dec
xchg
mov
inc
popf
mov
shll
mov
andl
xor
gs
movsb
mov
dec
sub
mov
inc
sub
add
sub
int3
fdivr
pusha
das
add
jno
mov
mov
inc
inc
movsb
or
xor
into
push
or
in
inc
cmp
inc
test
or
mov
in
imul
mov
nop
jne
je
add
or
jmpw
and
jg
mov
add
mov
enter
mov
add
adc
xchg
xchg
pop
or
mulb
xchg
push
sub
push
xchg
shrl
clc
and
in
cmp
or
add
xchg
or
add
sete
testb
loopne
push
push
inc
mov
adc
test
dec
addl
aas
cs
cmp
fldt
xchg
push
sbb
repnz
dec
and
add
add
jmp
xor
or
orl
pop
test
and
pop
sbb
and
mov
clc
call
xchg
dec
test
mov
dec
dec
jl
sbb
test
sub
pop
sub
add
sti
inc
sbb
adc
sbb
and
pop
sbb
orl
push
ret
cmp
popa
je
in
inc
mov
adc
jne
pop
xor
mov
icebp
es
cmp
push
or
scas
push
call
add
cmp
je
pusha
xor
inc
cmpsl
sub
mulb
cmp
push
push
aas
jnp
dec
inc
or
push
sbb
push
call
pop
xor
or
lahf
xor
ret
jmp
xchg
enter
inc
xchg
mov
je
push
popa
sbb
sti
clc
in
pop
add
and
insl
cltd
iret
cmpsl
pop
les
test
push
xor
mov
pop
pop
pop
outsl
push
dec
add
push
call
repnz
sbb
pop
frstor
mov
xor
push
lds
out
and
or
or
and
and
fidivrs
data16
imul
and
cmp
cmp
mov
jl
shrl
cmp
mov
pushf
dec
cmpsb
mov
pop
je
lea
sbb
pusha
and
sbb
jge
or
and
roll
dec
jl
cmp
pop
or
and
jle
dec
icebp
jg
or
mov
test
nop
fwait
jmp
push
stos
sbb
shll
mov
fnstenv
mov
mov
je
add
cmp
jl
pusha
popa
mov
adc
ljmp
jb
punpcklbw
leave
push
sub
xchg
daa
ret
dec
xchg
inc
xchg
cmc
dec
push
and
lods
sbb
mov
bound
in
sub
dec
jg
ljmp
or
or
cmp
add
xor
and
mov
pop
inc
cmpsb
das
shl
or
cmp
in
push
dec
xchg
mov
pop
in
daa
nop
gs
pushf
les
leave
mov
cmp
js
mov
jb
jg
inc
shl
cmp
sbb
add
rcll
xchg
mov
or
cmp
sub
das
pop
xor
lret
sbb
dec
cld
add
add
inc
push
decl
mov
pusha
aas
inc
pop
ret
jbe
xchg
sbb
xor
mov
shrl
test
xchg
hlt
and
pusha
lods
movsb
xor
test
mov
or
lahf
pop
loop
in
test
pop
dec
and
and
and
cmpsb
adc
js
sub
bsr
cmp
pop
jmp
loop
sub
fsubrp
test
call
adc
int3
iret
jb
mov
pop
pop
leave
int
roll
jnp
ds
inc
push
popf
push
jmp
mov
adc
ret
mov
or
xchg
xchg
repnz
dec
push
sbb
sbb
loope
mov
xchg
in
outsl
dec
push
lret
mov
mov
push
ds
pop
push
les
xlat
adc
sbb
pop
enter
int3
into
xchg
push
add
mov
cmp
xchg
mov
jns
dec
xor
dec
lahf
jb
xchg
and
pop
sbb
movsb
sbb
imul
inc
decl
mov
fnsave
hlt
or
subb
xchg
mov
sbb
xchg
loopne
movsb
pusha
sarl
push
xor
orb
push
xchg
adc
add
repnz
push
pop
notb
dec
sbb
inc
sbb
js
or
call
ja
xor
test
cltd
inc
das
inc
adc
cmp
push
xor
add
mov
sub
dec
sbb
loope
jp
clc
imul
cld
popf
lods
mov
iret
push
or
testb
andl
ja
mov
icebp
int3
push
clc
adc
sub
jmp
mov
test
xchg
pop
test
xor
andb
jnp
mov
mov
into
mov
scas
inc
test
std
mov
inc
mov
mov
ljmp
jb
cmp
adc
dec
push
cmp
cmpsb
lock
and
sbb
je
sbb
outsl
roll
xor
or
lods
cmp
lods
xchg
das
cmpb
sub
push
in
cld
orb
cs
mov
in
sti
or
inc
sbb
jae
pop
incb
mov
cmp
ljmp
inc
mov
enter
add
lret
push
adc
cmp
lds
inc
hlt
aam
and
in
xor
xor
mov
hlt
add
push
jl
adc
lret
adc
mov
or
nop
dec
mov
je
push
pop
loop
mov
dec
call
int3
pop
pop
mov
xor
inc
gs
rcrb
lea
hlt
push
push
je
sub
mov
inc
clc
sub
cmpsl
sub
lcall
sub
pop
inc
mov
sbb
stos
sub
in
enter
jmp
popf
cmp
mov
inc
popa
call
fcoml
inc
rorb
dec
jbe
jns
push
sbb
arpl
sbb
adc
imul
mov
mov
shlb
int
test
dec
gs
push
sub
xor
sub
mov
push
and
pop
ja
les
jge
test
or
push
add
ret
pop
icebp
int3
test
and
es
mov
sbb
push
sbb
jmp
adc
adc
adc
cmpsl
adc
and
ret
jl
les
mov
rorl
mov
jae
xchg
je
mov
loopne
and
cmp
lcall
cmp
add
push
repnz
jb
cmp
adc
nop
scas
clc
sub
jg
bnd
sti
outsb
cld
sbb
das
popa
ret
or
pusha
sbb
sub
and
aam
mov
enter
leave
enter
push
dec
mov
stos
mov
or
jge
dec
aam
cmp
dec
xlat
shll
sahf
push
int3
xlat
dec
push
push
cmp
sbb
aas
xchg
push
pop
jmp
pop
xchg
inc
xchg
pop
pop
lods
pop
std
data16
and
xchg
sub
std
call
cwtl
or
mov
aas
push
lock
inc
clc
xchg
mov
xor
sbb
dec
into
push
jl
mov
add
mov
fwait
sub
jg
push
int3
adc
sbb
dec
xchg
xor
movsb
div
and
xor
mov
xlat
mov
shr
in
call
or
jne
div
mov
lahf
or
je
iret
xor
shll
arpl
push
ja
ret
pop
pop
sbb
dec
lcall
mov
push
sub
sbb
jmp
push
outsl
adc
inc
enter
or
xor
adc
jbe
sub
cli
sub
roll
dec
movzbl
fnsave
inc
into
cmp
je
jns
and
clc
jne
or
add
popa
sub
test
adc
dec
ret
enter
add
ds
out
das
push
ljmp
pop
lea
call
idivb
sbb
ljmp
sub
loopne
jmp
sbb
xorb
int
sub
mov
daa
call
mov
add
mov
ja
push
arpl
std
xchg
jge
or
xor
js
pop
rcrl
adc
adc
cmp
jne
push
inc
push
and
add
push
xchg
test
inc
adc
xchg
adc
rorb
mov
pop
mov
fistps
pop
push
mov
in
mov
popa
mov
dec
sub
arpl
das
push
dec
fsts
pop
inc
mov
ss
or
pop
fidivl
push
test
mov
add
imul
xor
add
fsubl
add
add
or
dec
sbb
jne
sbb
sub
in
cmpb
pop
xor
cwtl
jbe
call
mov
mov
inc
and
push
movsl
jmp
mov
and
out
dec
or
fidivrl
repz
imull
nop
js
imul
jns
cmp
fnsave
cmp
xor
mov
add
ret
mov
mov
xor
push
dec
hlt
and
fdivs
shl
push
jg
mov
inc
cmp
fldcw
push
adc
inc
ret
shl
adc
orb
ja
fiadds
lret
sti
shl
xor
call
or
jg
lret
mov
xorl
rorl
add
or
out
jmp
dec
pop
inc
and
clc
insl
daa
ss
jecxz
loope
xor
outsl
ret
aad
sbb
daa
adc
aam
push
lods
jo
pop
std
xor
or
shrb
xchg
popf
mov
xchg
cmpb
add
ds
cmp
dec
push
or
or
or
jne
or
pop
adc
and
xchg
lea
mov
sub
inc
sarb
loopne
mov
sbb
and
jmp
pusha
pusha
imul
repz
roll
ret
push
jl
leave
add
jecxz
ficoms
and
stc
fstpt
add
cmpsl
loopne
repz
and
inc
pop
or
cmp
mov
jno
and
shll
ret
xchg
daa
push
cmp
nop
sub
add
jae
in
sub
les
mov
inc
add
mov
mov
test
int3
loope
xchg
mov
jno
or
jnp
fcmovnb
adcb
lahf
stos
pop
pop
daa
pop
or
jnp
mov
and
insl
push
fdivs
sub
je
cmpsb
and
cmp
scas
pop
jmp
sub
xchg
pop
push
mov
adc
sbb
bound
int3
jl
inc
or
pop
xchg
sarl
adc
jne
ret
add
xchg
call
sbb
jmp
push
mov
inc
into
emms
lods
and
jmp
sti
xor
inc
int
lds
aam
mov
pop
mov
xchg
jae
rcl
cmp
or
negb
je
adc
scas
stos
xchg
mov
or
nop
sub
mov
dec
add
lar
mov
mov
jmp
jno
cltd
adc
adc
std
xor
int3
dec
inc
adc
pop
sub
push
subb
sub
mov
or
mov
lods
jl
ja
push
scas
addl
xor
mov
mov
sbb
pop
jge
dec
call
pushf
mov
mov
hlt
jl
pop
mov
xor
cltd
adc
push
fidivrs
cmp
pop
jge
dec
cmp
scas
jle
xor
call
and
pop
and
ljmp
je
imul
add
dec
pop
jns
or
lds
pop
stc
test
adcl
mov
jmp
test
cmpsb
mov
adc
dec
mov
movsb
mov
pop
mov
mov
std
imul
daa
xchg
dec
lcall
les
and
cmpb
and
daa
je
daa
sub
add
cltd
and
jne
js
lds
jmp
mov
jne
pop
test
inc
push
ja
push
popf
movsb
pop
stos
in
pop
int
das
add
sub
mov
dec
in
roll
jbe
mov
lcall
scas
inc
out
mov
push
mov
add
and
jmp
pop
fildl
lret
mov
ffreep
inc
inc
xchg
ss
pop
add
cmp
or
pop
push
sbb
aad
mov
sbb
push
add
insb
jne
inc
xor
sub
call
add
pop
dec
mov
sbb
add
cld
push
shlb
pop
dec
sti
pushl
test
mov
jmp
adc
idivb
add
adc
jne
mov
scas
ret
adc
push
and
dec
lahf
int3
dec
sbb
popf
fcoms
hlt
xor
mov
xor
cmp
enter
je
aam
movsb
mov
dec
cmp
adc
or
cli
cmp
sub
sub
mov
lcall
adc
mov
out
sub
or
mov
mov
test
add
icebp
mov
repnz
inc
add
hlt
mov
out
cltd
hlt
jge
or
or
jle
mov
xchg
fbld
sub
jg
je
lahf
dec
lret
jae
pop
pop
test
enter
cmp
pop
adc
hlt
jmp
or
ljmp
sarb
out
push
dec
cmpsl
in
mov
pop
ret
push
push
push
inc
testb
lds
test
sub
mov
pop
or
xor
std
sbb
pop
cmp
rol
mov
lock
and
or
push
lea
push
stos
int
fcmovnbe
or
aaa
nop
push
add
or
rorl
inc
cltd
out
cmp
jno
push
push
jno
xor
inc
imul
add
push
mov
testl
loopne
test
adc
ret
shll
mov
inc
std
test
sub
sub
call
adc
xor
call
or
add
jl
pop
pop
in
inc
scas
push
ret
pop
lods
ss
dec
call
and
testb
pop
in
jbe
call
fcomps
sbb
aas
leave
cmc
jp
mov
push
repnz
stos
nop
mov
stc
add
pop
insl
adc
out
gs
test
or
push
push
cmp
iret
out
jns
and
or
push
pop
test
sbbb
and
mov
jmp
pop
lods
jmp
xor
jmp
shll
addr16
adc
mulb
xor
mov
pop
cmp
in
mov
adc
pop
in
xlat
or
mov
out
divb
out
sbb
shll
sub
adc
pop
xor
push
push
rcrl
mov
xchg
inc
add
repz
mov
xchg
inc
cmp
jl
and
and
add
je
xchg
and
push
lcall
clc
popa
dec
jl
lods
jp
cmp
ss
pushf
mov
xchg
pushf
loop
lahf
cmp
fwait
inc
push
test
lea
cmp
daa
shl
lcall
scas
xor
cmpsb
and
add
popa
cmp
pop
mov
lret
mov
mov
add
adc
push
test
movsb
mov
push
lds
mov
out
ficomps
xchg
test
movsl
test
je
mov
jmp
movsl
test
pop
dec
repnz
testl
das
adc
push
enter
mov
and
push
sub
mov
imul
push
cwtl
rcll
das
pop
lret
mov
mov
push
add
cmpsb
mov
dec
loop
jns
out
das
mov
in
mov
cmc
js
inc
stc
pop
sbb
push
cli
mov
adc
xchg
enter
je
pop
aaa
je
jmp
or
loope
sbb
sbb
and
call
xchg
cld
es
and
or
or
mov
inc
inc
sbb
fildll
xchg
pop
test
scas
add
and
jmp
repz
mov
inc
mov
inc
adc
jae
xchg
mov
mov
and
out
repz
mov
fidivl
mov
pop
adcb
or
lahf
mov
dec
cli
mov
push
push
xor
in
xor
dec
icebp
pop
add
sbb
negl
jge
dec
jmp
nop
sub
rcll
pop
adc
dec
hlt
push
sub
add
jae
bnd
pop
gs
nop
hlt
in
fimull
es
loopne
sub
xor
xchg
adc
add
stc
outsl
and
test
stos
mov
sub
test
jle
mov
and
sbb
outsb
inc
cli
mov
das
push
push
xchg
int
movsb
movsl
ja
test
pop
xor
or
hlt
jmp
sbb
stos
cmp
mov
mov
mov
mov
cmp
in
pop
je
and
inc
inc
cmp
fdivl
pop
out
clc
adc
les
xor
adc
pushf
fwait
lea
jns
adc
fldz
xchg
pop
scas
cs
fldcw
rclb
nop
ljmp
or
push
pop
je
fistpll
jbe
lock
sub
shr
jmp
dec
pop
js
fs
aad
adc
jbe
add
test
push
pusha
xchg
sbb
mov
or
sbb
gs
jae
outsl
lahf
cmp
cmp
outsb
cwtl
shlb
idivl
adc
inc
ret
int3
inc
sbb
in
stc
es
std
dec
sarb
test
sub
inc
add
mov
push
stos
pop
xlat
andb
sub
ret
and
sbb
adc
add
add
inc
rolb
mov
scas
xor
jmp
push
pushf
push
test
jmp
push
mov
or
or
or
hlt
sbb
rolb
loopne
and
adc
stc
sub
sub
jl
lret
mov
nop
je
test
adc
and
adc
jp
fiadds
das
ss
lea
adc
adc
or
dec
nop
add
xchg
sar
cmc
mov
adc
adc
andb
adc
inc
les
inc
adc
sbb
mov
cld
adc
sbbl
and
inc
add
mov
mov
cltd
mov
dec
and
int3
loopne
pop
inc
dec
call
xor
mov
adc
adc
mov
test
cld
jg
adc
test
inc
call
dec
adc
scas
sub
in
xchg
push
cmp
mov
out
loop
cmp
add
jl
xchg
loopne
add
fnstenv
cmp
or
mov
adc
jp
pushf
dec
into
xor
out
push
pop
or
roll
or
bound
mov
jnp
inc
leave
adcb
mov
inc
out
mov
sahf
and
out
cmp
sarl
inc
outsb
sub
jmp
inc
std
imulb
hlt
es
lret
jp
mov
clc
jo
xchg
add
mov
sub
bound
add
scas
mov
lret
icebp
dec
add
orl
ror
push
mov
add
fdivrl
cs
mov
add
inc
xchg
cli
add
and
dec
incb
bound
jb
xorb
xor
test
dec
mov
in
push
add
stc
test
enter
add
out
cmpsl
fldl
xchg
lods
jno
xor
ja
add
mov
jl
sub
and
jge
push
aas
std
inc
lock
inc
pop
roll
lret
mov
dec
or
imul
jmp
leave
loopne
outsb
das
pop
add
ds
rcrb
mov
jecxz
dec
and
inc
aam
cmpsb
fbstp
repz
dec
mull
pop
cmp
outsl
adc
push
xor
mov
sti
inc
dec
add
mov
aam
add
push
ret
in
andb
add
and
xor
fmull
sarb
add
or
mov
adc
add
js
pop
jo
xchg
in
cld
add
sbb
sbb
push
sti
add
shl
add
sub
xorb
mov
pop
arpl
push
hlt
out
daa
ficompl
jmp
sbb
xchg
inc
ffreep
mov
cmpsl
inc
call
loop
adc
cmp
sbb
pop
es
adc
or
jne
dec
les
shlb
add
xchg
cmovl
xchg
xor
fstpl
ljmp
dec
jmp
test
add
dec
dec
push
ret
fcomip
sub
xchg
jne
packsswb
stos
std
add
rcrl
in
and
xchg
out
pop
andl
dec
push
sbb
int3
pop
pop
jmp
je
sbb
or
xor
insl
hlt
aad
popa
jne
mov
add
add
int
add
mov
pop
cmpsl
fwait
or
cmovge
scas
pusha
repnz
into
pop
cmp
cmp
cmp
movsb
and
lock
mov
popa
imul
out
test
sbb
fst
or
icebp
xchg
cld
addl
shll
add
lods
mov
test
mov
add
add
les
test
loopne
fs
outsl
loopne
mov
lret
aaa
pop
in
push
sahf
loop
adc
addb
lock
lret
cmpsb
mov
inc
loopne
outsl
aaa
or
adc
aas
or
nop
cmp
jo
add
incl
sbb
adc
lock
inc
adc
add
jmp
sbb
jecxz
cmp
add
ret
push
push
and
xchg
or
or
add
add
adc
add
or
or
enter
jb
cltd
inc
or
pavgb
adc
xchg
adc
adc
adc
dec
or
cmpsb
sub
or
sbb
fs
sbb
mov
and
xchg
and
and
and
add
cmp
sbb
mov
and
xchg
sub
sub
cmp
sbb
mov
and
xchg
xor
xor
cmp
sbb
mov
and
xchg
cmp
cmp
cmp
xor
inc
cmp
inc
mov
and
inc
enter
jb
cmp
dec
mov
and
dec
enter
jb
cmp
push
mov
and
push
enter
jb
cmp
pop
mov
and
pop
enter
jb
cmp
mov
and
xor
xor
data16
xchg
add
dec
pusha
xchg
push
dec
or
adc
imul
pop
gs
xor
outsb
cmp
jo
adc
xchg
jno
jb
jae
je
jne
jbe
inc
ja
js
jns
jp
jnp
jl
jge
jle
inc
jg
subb
in
jno
push
sbb
and
in
jb
cmp
and
xchg
enter
enter
jb
cmp
cltd
or
xor
pushf
cltd
or
lahf
or
jb
cmp
push
movsl
or
cmpsb
xchg
cmpsl
les
sbb
or
lods
xchg
lods
enter
jb
cltd
inc
mov
or
mov
mov
mov
mov
mov
or
mov
in
jno
pop
sbb
mov
ret
ret
mov
lds
movl
leave
xor
sbb
or
push
or
and
mov
adc
into
xor
iret
cltd
or
dec
pop
shll
rcll
or
shll
rclb
sub
cmp
sbb
mov
or
adc
loope
loop
jecxz
and
in
xchg
in
enter
jno
sbb
or
or
inc
gs
jb
in
cltd
or
sbb
mov
pop
lret
in
xor
repz
or
dec
sub
cmpsb
or
mov
std
adc
cmpsb
sbb
or
cli
xchg
sti
enter
jb
mov
jo
jno
mov
push
adc
or
rclb
sbb
or
fs
jb
cmp
sbb
mov
and
xchg
adc
adc
cmp
sbb
mov
and
xchg
sbb
sbb
cmp
push
xchg
push
and
daa
enter
jb
cmp
sbb
mov
and
xchg
das
leave
xor
sub
dec
or
mov
and
xor
aaa
xor
cmp
cmp
mov
and
cmp
ja
call
inc
cmp
inc
mov
and
inc
enter
jb
cmp
dec
mov
and
dec
lret
in
xor
push
cmp
push
mov
and
push
enter
jb
cmp
pop
mov
and
pop
les
repnz
rclb
xchg
enterw
jb
cmp
imul
or
gs
sbb
sbb
or
sub
jne
enter
adc
js
inc
jns
or
and
jl
jge
jle
inc
jg
or
or
test
cmp
mov
mov
mov
cmp
pop
mov
jnp
inc
xchg
and
in
jb
cmp
pushf
and
loop
adc
mov
mov
test
rclb
out
adc
push
in
jb
cmp
ja
out
adc
and
loop
les
call
or
mov
mov
in
jb
cltd
dec
ret
dec
or
mov
and
xchg
xor
enter
xor
lret
sbb
mov
and
xchg
iret
lret
imul
aad
jecxz
fidivrs
hlt
xor
out
movsb
xor
fistpll
loopne
adc
mov
or
jecxz
xchg
in
lret
fs
out
call
push
ljmp
in
adc
or
rclb
sub
repnz
repz
dec
and
mov
adc
testl
stc
or
sti
cltd
and
sbb
mov
and
mov
inc
add
fwait
sbb
add
adc
jb
outsb
addr16
jno
call
sbb
dec
inc
lret
adc
pushf
mov
pop
jbe
popa
insb
xchg
and
jo
lahf
mov
jo
push
inc
andb
or
xchg
cmpsl
xchg
hlt
pop
scas
adc
or
and
sbb
outsb
imul
js
int
push
push
les
mov
push
loopne
mov
push
and
mov
sbb
add
rol
xchg
or
xchg
vmovss
xor
leave
lcall
lret
adc
sub
push
je
sbb
into
push
addr16
fmul
insb
push
ds
movsb
sbb
adc
or
roll
loope
adc
fists
pop
add
add
add
cmp
and
cmp
pop
pop
or
aaa
xor
push
lahf
sbb
pushf
pusha
push
jo
js
sti
inc
xchg
jecxz
add
nop
dec
dec
jne
gs
mov
and
dec
inc
inc
jmp
push
cli
push
jmp
mov
inc
sbb
push
fistl
imul
push
dec
stc
cmp
lods
aam
ret
or
jb
outsb
add
insl
gs
lahf
dec
outsl
popf
mov
push
cmp
push
rorb
sbb
dec
inc
movsl
push
inc
dec
dec
inc
test
add
xor
cmp
and
nop
mov
xor
jp
sbb
jle
jo
nop
sub
aaa
and
sbb
or
push
arpl
jecxz
imul
nop
out
push
cmp
arpl
jbe
stos
je
inc
shrb
sub
repz
rclb
lret
jle
pop
push
or
mov
inc
fisttpll
jecxz
pusha
xor
clc
pushf
popf
jo
mov
jnp
iret
and
in
sub
mov
mov
or
sbb
mov
andl
and
popa
test
and
arpl
lret
xchg
pop
mov
jb
xchg
add
andb
mov
xchg
stc
or
xor
mov
lahf
push
mov
pop
inc
push
insl
lcall
imul
jne
sub
pusha
sub
sub
inc
ret
fwait
aaa
or
cmp
adcb
sbb
ret
data16
push
out
and
cmpsb
push
popf
out
push
bound
or
pop
inc
inc
pcmpgtw
and
popa
aad
and
cmp
out
loope
dec
jne
lds
mov
pop
push
add
test
or
gs
popa
popl
dec
adc
push
pop
mov
xor
lret
sbb
cwtl
jae,pn
popa
addr16
mov
pusha
jnp
nop
or
xor
mov
push
dec
cmp
ss
or
sub
dec
mov
add
out
xchg
cmpxchg
repz
or
sbb
js
orb
jbe
aaa
dec
shr
or
push
test
adc
into
leave
adc
cld
lock
adc
adc
or
aam
out
aam
or
arpl
inc
or
jne
adc
loope
push
or
andb
push
and
or
jno
mov
and
dec
xchg
dec
sbb
inc
sarl
es
adc
nop
popf
sar
or
or
push
and
push
jne
or
cmp
cmp
xor
inc
and
inc
add
pop
and
mov
mov
lahf
mov
mov
adc
sbb
ja
and
dec
xor
test
sbb
add
adc
dec
xor
ficomps
inc
adc
adc
xor
ret
or
dec
sbb
adc
mov
dec
dec
aaa
adc
inc
jo
andb
inc
xchg
enter
enter
repz
enter
cmp
xor
mov
add
xor
inc
into
nop
pop
adc
push
sbb
sbb
fs
sub
fs
jo
mov
fwait
sub
pop
and
adc
jb
lcall
and
xchg
lret
mov
mov
sub
sbb
adc
and
mov
xchg
and
sub
dec
pop
and
and
loopne
orb
or
dec
sbb
shl
lahf
cmp
xor
pusha
or
inc
sbbb
les
fs
out
mov
inc
push
mov
and
mov
pop
and
adc
sub
push
cmp
dec
xchg
sub
or
adc
cmp
xor
dec
inc
insb
leave
fs
cmp
mov
inc
hlt
enter
or
sub
and
dec
dec
sub
pushf
ret
cmp
int
adc
mov
mov
nop
jns
pop
sub
inc
and
test
pop
fs
xor
pop
and
xor
mov
pop
mov
dec
adc
cwtl
mov
sbb
icebp
into
adc
cmp
faddl
jns
and
or
pop
or
or
inc
sbb
inc
jbe
inc
push
sti
jmp
lret
sub
mov
dec
sub
inc
sbb
push
pop
or
or
lods
pop
adc
adc
jae
dec
and
sub
jnp
or
sbb
cwtl
cmp
pop
push
or
or
push
or
cmp
push
dec
or
sub
mov
fistpll
pop
js
add
sbbb
aas
sbb
sub
andb
cwtl
dec
dec
cltd
leave
and
sub
and
push
mov
and
and
and
and
and
push
and
push
aaa
add
imul
xor
add
push
mov
out
xor
sub
jle
je
jmp
lcall
dec
fdivrs
ds
xorl
mov
sbb
inc
adc
inc
sub
test
or
jnp
les
je
cmovae
add
adc
cmp
xchg
inc
or
inc
pop
outsb
inc
dec
and
adc
jno
popa
rol
push
or
shlb
adc
adc
lret
imul
sub
bound
stc
push
and
cmp
push
add
dec
mov
aam
or
fs
inc
inc
push
sahf
mov
sub
mov
or
cli
and
and
push
das
mov
test
popa
cmpsb
mov
mov
pop
sbb
push
sbbb
and
jno
dec
pop
bound
or
add
mov
fcompl
or
or
xor
sub
enter
xor
js
jno
add
imul
subb
lahf
xchg
cmp
sub
shlb
jns
scas
sub
out
and
jae
add
jle
loopne
push
nop
fs
add
mov
adc
adc
cmp
loopne
vpmacssww
test
add
sbb
add
enter
or
into
pop
es
add
pop
jl
push
sbb
in
sub
add
jg
inc
xlat
enter
cmp
add
xor
cwtl
or
repz
push
dec
in
inc
add
cld
fiadds
enter
mov
jo
lock
jno
dec
mov
pushf
adc
test
xchg
jo,pt
mov
sub
xor
leave
mov
test
or
jo
in
out
bound
or
es
cmp
sub
or
rclb
add
pushf
adc
jae
nop
add
cwtl
adc
inc
push
jae
dec
dec
pushf
mov
scas
add
dec
or
inc
movsl
pushf
adc
repnz
test
cmp
lahf
into
or
cmp
pop
push
orb
mov
mov
fldenv
sbb
test
pop
and
jl
push
cmp
test
int3
stc
cli
push
jo
out
cmpsl
or
pushf
adc
test
inc
cmp
jns
int
and
into
or
mov
add
cmpb
imul
adc
stc
rcll
inc
ror
into
jns
mov
pop
fcomps
dec
push
mov
push
adcb
popa
pop
xor
add
inc
mov
pop
inc
mov
adc
sub
add
inc
inc
inc
dec
mov
cmp
push
imul
or
cmp
push
cmpsl
add
jl
cmp
push
mov
fcoms
mov
nop
jns
rcll
jo
mov
out
cmp
jo
and
add
dec
int
sub
mov
dec
mov
add
pushf
sub
mov
stos
pop
add
sub
cmpsb
push
jo
sti
enter
cmp
enter
outsl
mov
xor
or
mov
shll
cmp
loope
push
subb
cmp
lds
rcrl
sbb
hlt
fistpll
push
aad
enter
mov
add
imul
pop
in
bswap
cmpsb
aam
fildl
cmpb
loop
js
cmp
cmp
scas
cmp
inc
es
push
ljmp
mov
into
sbb
inc
ret
add
pushf
mov
xor
sbb
mov
pop
or
add
add
jmp
dec
sbb
incl
lock
mov
pop
or
pop
jg
inc
and
mov
xor
add
inc
add
ret
cs
rolb
fildl
addr16
add
pop
aaa
or
and
dec
cmove
or
loop
cld
xor
add
xor
inc
add
imul
jae
gs
and
popa
fs
imul
jb
jbe
lds
push
outsb
add
adc
sbb
inc
inc
pop
pop
popa
outsb
je
push
dec
cs
and
jno
sbb
add
pop
das
mov
gs
adc
or
dec
gs
popf
mov
xor
sub
je
jo
das
inc
imul
xor
xor
cmp
add
insl
das
mov
xchg
inc
sti
loope
loope
mov
xor
adc
mov
xchg
sbb
bound
jae
xor
jns
ds
ja
jecxz
push
pop
sbb
cld
jae
gs
jo
pop
js
and
and
popa
add
push
mov
mov
lahf
fmuls
xor
adc
leave
iret
mov
mov
les
loope
cld
rcl
sar
fiaddl
into
rol
mov
mov
and
ret
int
shll
mov
mov
pop
aad
loop
test
mov
ret
int3
loope
mov
mov
std
int
or
and
pop
dec
mov
arpl
push
jecxz
lcall
sbb
imul
retw
ja
jb
pop
std
int3
outsb
arpl
push
cmp
jno
arpl
mov
lret
fcoml
mov
sti
sbb
or
dec
arpl
inc
and
add
dec
dec
push
push
pop
inc
push
inc
dec
pop
inc
cmp
out
xchg
in
outsl
or
sbb
jbe
mov
push
mov
aaa
inc
aas
loope
push
inc
mov
adc
xchg
or
pushf
pop
cmp
ja
add
nop
and
aam
and
testl
jnp
or
and
and
imul
iret
mov
mov
adc
lcall
push
mov
test
call
loope,pn
sub
js
add
push
dec
inc
pop
stos
out
sbb
push
mov
inc
push
push
add
dec
sbb
xor
dec
das
pop
je
mov
pop
cld
les
jo
test
push
xchg
jne
cmp
test
pop
test
fs
ljmp
sub
inc
and
or
mov
sbb
sub
add
and
or
xchg
and
cltd
mov
mov
sbb
sbb
mov
in
dec
mov
decl
outsb
addr16
and
mov
nop
loopne
das
inc
push
ds
jecxz
pcmpeqb
pusha
insb
sub
pop
arpl
inc
mov
or
sbb
outsl
call
imul
sub
in
call
mov
das
data16
jae
cmp
jae
jo
into
push
into
gs
sub
pop
data16
dec
imul
pop
push
popa
insl
adc
xchg
dec
xchg
jge
xor
ljmp
cmp
bound
arpl
mov
subl
jae
ds
outsb
cmp
inc
mov
push
shlb
jne
ror
aaa
inc
lea
out
and
inc
xchg
jne
xor
inc
inc
cmp
dec
xor
push
inc
insb
arpl
and
mov
push
xchg
mov
jne
jb
push
inc
out
or
add
xchg
inc
push
add
add
xchg
inc
push
imul
inc
cmpsl
adc
sbb
jns
inc
adc
inc
mov
cs
icebp
and
imul
pop
inc
outsl
pop
inc
mov
or
cmp
add
movsb
cmp
outsl
mov
dec
pop
aad
xor
dec
gs
and
shlb
mov
pop
add
outsl
inc
jns
clc
add
pop
call
test
adc
js
mov
or
add
inc
movsb
add
and
cmpsb
fisttps
lahf
loopne
jp
inc
jle
or
jb
push
and
cmp
sub
and
xchg
sbb
pop
pusha
test
push
mov
or
pop
xchg
shlb
push
xor
rcr
fisubs
loopne
xor
jle
lret
push
or
cmp
dec
or
sbb
mov
or
dec
or
or
enter
xor
push
push
push
cmp
or
cmpsb
pop
push
adc
adc
add
sbb
mov
adc
inc
xchg
inc
lret
gs
xor
push
cltd
or
pusha
pop
cmpsb
jl
insb
sbb
insl
inc
and
sbb
jb
lods
push
dec
xor
or
andb
or
dec
fs
dec
sub
in
xor
cmp
and
adc
pop
gs
sbb
add
sbb
xchg
mov
push
inc
nop
enter
mov
in
pushf
mov
mov
int3
xchg
inc
int
test
ret
loope
js
inc
test
enter
icebp
sub
push
push
push
xchg
enter
les
stos
pushf
adc
sub
loopne
test
inc
and
or
cmp
movsl
add
and
cs
bound
ljmp
push
or
stos
xor
or
inc
xchg
in
fs
or
adc
xor
adc
and
dec
adc
push
adc
lock
add
dec
enter
nop
inc
sbb
sbb
xor
dec
and
jp
and
inc
cmp
or
mov
inc
pavgb
sub
roll
ds
movsb
mov
inc
pop
or
lods
adc
push
xchg
inc
sub
cld
sub
test
dec
dec
or
or
cmp
cmp
dec
xor
sbb
test
or
xchg
call
fmull
rorb
xchg
enter
sarb
dec
cwtl
xor
mov
insb
pusha
mov
and
dec
inc
xchg
xor
sub
sub
nop
add
fadd
sub
test
push
push
jg
adc
mov
jo
jl
lock
jmp
push
push
push
dec
dec
fcoms
scas
inc
shrb
stos
cld
pop
or
mov
or
or
push
and
dec
pop
or
xchg
adc
xchg
adc
xor
or
insl
push
xor
cmp
xchg
mov
rcll
repnz
dec
das
xchg
dec
xor
or
add
.byte
.byte
add
add
orb
addb
add
sbb
add
push
add
add
and
add
push
add
cmp
add
dec
add
add
add
lret
add
add
mov
add
add
add
or
add
lock
addb
add
add
add
nop
add
add
add
add
add
add
add
mov
sbb
add
lock
add
add
add
add
loopne
add
mov
and
add
add
add
add
or
add
mov
sub
add
add
add
add
dec
add
addb
add
sbb
add
call
add
add
pop
add
add
add
add
add
pusha
add
add
add
test
add
sub
add
xor
add
pusha
add
add
add
add
add
add
or
add
add
add
add
add
add
add
xchg
or
add
or
add
adc
add
add
mov
sub
add
cmp
add
sub
add
aaa
add
sarb
add
scas
inc
add
scas
dec
add
mov
add
mov
dec
add
mov
add
mov
pop
add
inc
add
mov
push
add
mov
add
mov
add
mov
jns
inc
mov
push
add
inc
add
rorl
add
push
add
int
add
lret
pop
add
leave
pop
add
push
add
les
cmp
pop
add
in
add
lret
sbb
leave
push
add
fisubl
or
data16
aad
add
fsubrl
sbb
add
ret
jge
add
jo
add
jb
sbb
jbe
daa
push
add
frstor
lret
ja
xor
sarl
add
add
out
arpl
add
insb
add
jmp
jbe
or
jmp
add
in
add
in
jnp
or
jge
push
jecxz
add
bnd
add
jl
es
add
push
add
pop
add
insl
add
data16
add
ja
dec
fdivl
xlat
jp
popa
sarb
and
xchg
inc
mov
addl
add
test
add
addb
xlat
mov
add
mov
sbb
lret
ss
mov
daa
fmuls
add
lea
cmp
xchg
add
aam
add
fcoml
add
rcll
cmp
cwtl
add
loop
add
jmp
add
out
test
add
lea
add
mov
push
in
add
xchg
adc
addb
out
add
ljmp
add
mov
or
mov
pmulhw
add
ljmp
sbb
xchg
add
jmp
add
ljmp
sbb
cwtl
add
hlt
xchg
add
icebp
xchg
add
cli
xchg
add
cltd
add
sti
lcall
lock
add
sahf
add
xchg
add
out
add
in
add
cmc
mov
add
hlt
cmpsb
add
lods
add
cld
mov
inc
les
add
addb
leave
xchg
add
add
cltd
add
popf
add
addl
enter
lret
xchg
add
lcall
loop
add
fwait
add
popf
add
cmpsb
add
add
add
movsb
add
scas
add
mov
add
mov
add
mov
add
mov
add
lds
add
fisubl
add
mov
sbb
add
into
test
add
in
add
fcmove
add
jecxz
add
cmc
int
fwait
cmc
rolb
xchg
cli
roll
pushf
cli
aad
stos
in
add
repnz
jmp
add
fldl
mov
fiadds
mov
loope
mov
ret
lret
lret
lret
add
iret
iret
add
fcmovne
add
fcmovbe
add
add
rcl
add
rcl
add
aad
add
fcmovnu
add
xlat
faddl
in
add
jecxz
add
in
add
ljmp
ret
hlt
rolb
shl
flds
out
loop
loop
xlat
ljmp
mul
add
repnz
fcomip
in
in
add
clc
ljmp
jecxz
add
in
add
out
add
jmp
add
ljmp
lock
repnz
lock
ljmp
call
repnz
repnz
cld
hlt
add
hlt
stc
add
sti
clc
add
incl
add
mov
repnz
add
mov
push
mov
mov
push
mov
add
mov
std
push
mov
mov
sti
rcl
add
sti
jmp
shr
std
sti
fidivl
add
add
sti
iret
sti
out
mov
add
add
idiv
iret
mov
sti
idiv
shll
shll
repnz
cmpl
mov
div
imul
rcl
add
out
sti
repnz
pop
insl
jns
mov
stos
jmp
repnz
add
mov
fcmovu
fcmovnu
out
repnz
insl
outsb
jns
xchg
nop
leave
div
repnz
fidivl
add
mov
rcr
fcmovu
fucomi
fistps
cmp
jns
xchg
push
out
out
out
out
fisubrl
mov
aam
fcmovu
xlat
sahf
push
adc
inc
inc
dec
js
jns
addl
icebp
out
out
in
mov
add
mov
aam
rcrb
es
inc
inc
dec
js
outsl
ja
jbe
push
mov
out
out
out
fcmovbe
add
add
push
or
movlps
xor
dec
dec
dec
dec
jae
arpl
fs
cltd
shr
mov
add
add
or
or
movlps
and
sub
sub
inc
inc
dec
dec
jae
arpl
data16
pop
mov
out
scas
add
push
or
or
adc
and
mov
test
aas
aas
ds
pop
mov
scas
fcmovb
sbb
push
pop
or
or
decl
xor
ds
xchg
shl
add
mov
fsubl
add
pop
pop
or
or
decl
xor
cmp
push
sahf
fcomi
mov
add
shl
mov
add
pop
or
cmp
sub
cmp
add
add
fdivrl
add
or
or
loop
cmp
sub
daa
sub
cmp
rolb
add
mov
rcrl
add
ljmp
push
push
and
and
sub
push
mov
add
scas
cwtl
sbb
pop
and
dec
dec
push
jecxz
jmp
push
sub
sbb
lock
add
add
ss
std
std
call
adc
fcomi
rolb
add
add
pop
movsb
std
call
sbb
add
mov
jmp
clc
push
ljmp
add
add
ret
mov
out
mov
add
add
ss
decl
or
lock
add
add
ss
iret
iret
iret
iret
iret
iret
call
jmp
out
repnz
add
add
ss
pop
pop
insl
jl
decl
sbb
sbb
not
mov
data16
ss
pop
pop
pop
jo
call
call
imul
aam
add
add
ss
pop
pop
jo
jge
call
imul
add
rcl
in
sbb
sbb
pop
pop
pop
jo
jge
call
imul
out
mov
add
sbb
pop
pop
pop
jo
jo
call
call
mov
xchg
test
out
mov
add
sbb
ss
pop
pop
jo
jge
stc
stc
stc
stc
stc
xchg
addl
shl
add
mov
mov
ss
pop
pop
pop
jo
mov
mov
imul
fidivl
mov
fdivl
pop
pop
pop
pop
jo
jge
test
addl
xchg
pop
mov
add
add
sbb
ss
pop
pop
pop
jo
jl
mov
orb
xchg
shl
mov
add
add
cmpsb
sbb
ss
pop
pop
jo
jge
test
addl
data16
out
in
rcl
add
add
fcmovne
movsb
ss
pop
pop
pop
jo
jl
mov
orb
repnz
out
out
rcl
add
add
fcmovnb
addr16
pop
pop
jge
jl
mov
orb
out
out
out
fidivl
add
fcmovnu
lock
pusha
jo
jo
test
mov
lods
out
div
repnz
mov
add
add
out
in
out
lea
xchg
xchg
xchg
mov
cli
repnz
aam
mov
fucomi
out
icebp
repnz
jmp
ret
call
sti
cli
cli
cli
not
mov
add
shll
repnz
std
std
std
sti
cli
cli
fcmovnbe
rolb
add
mov
repnz
sti
std
sti
icebp
shlb
add
shlb
fcmovnu
aam
repnz
out
mov
add
shll
add
shlb
cld
aas
incl
add
clc
pop
incl
add
push
ud0
add
jmp
pop
incl
add
inc
add
incl
add
incl
add
incl
add
incb
add
incl
add
clc
add
pop
incl
add
loopne
add
incl
add
rolb
add
add
incb
add
add
add
add
add
aas
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
aas
add
cld
add
add
aas
add
incb
add
add
add
incb
add
add
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
incl
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
jg
add
add
add
aas
add
cld
add
add
aas
add
cld
add
add
aas
add
cld
add
add
pop
add
cld
add
add
pop
add
cld
add
add
aas
add
incb
add
add
add
addb
add
add
jmp
add
add
add
push
add
ud0
add
cld
add
aas
incl
add
incl
add
incl
add
inc
ret
incl
add
add
add
add
xor
add
inc
rolb
add
add
add
add
add
add
add
add
add
add
add
or
add
add
addb
add
push
add
mov
sbb
add
sub
add
and
add
das
add
scas
and
add
sub
push
mov
add
cmpsb
xor
add
aaa
add
mov
cmp
add
shrl
add
aaa
add
lret
pop
leave
xor
add
mov
inc
add
mov
dec
add
mov
pop
add
mov
add
mov
je
add
jns
add
jg
and
add
rolb
lret
add
dec
add
les
add
pop
add
iret
pop
add
int
add
into
pop
add
aam
add
rcll
sbb
push
add
ficompl
rcrl
leave
pop
add
ret
pop
add
leave
pusha
add
shlb
fsubs
add
outsb
add
fldt
adc
pusha
add
shll
sbb
add
fldt
add
jge
add
js
push
je
pop
fistpll
daa
les
sub
popa
add
imul
int
add
ret
xor
jl
and
jbe
sarl
and
jg
add
imul
add
jne
add
jb
add
jge
or
jle
adc
ja
sbb
jb
add
jp
and
jno
and
jnp
inc
sarb
shll
ja
or
addb
int
add
into
test
sbb
mov
add
mov
movb
xor
leave
mov
sub
addb
fisttpll
cmp
xchg
add
fcoml
add
rclb
add
addb
ljmp
add
mov
adc
addl
jecxz
add
jmp
add
cmc
test
add
mov
or
mov
add
xchg
add
out
add
in
xchg
add
call
cltd
add
cwtl
add
icebp
xchg
add
cmc
xchg
add
clc
xchg
add
negb
add
cli
cltd
add
clc
lcall
loop
add
jecxz
add
jmp
add
rolb
dec
ret
popl
push
ret
addb
xchg
add
xchg
add
xchg
add
pushf
add
pushf
add
lahf
add
test
imul
cwtl
add
add
xchg
add
xchg
add
mov
add
movsb
add
cmpsl
add
scas
add
lods
add
stos
add
cmpsb
add
lods
add
mov
outsl
fnsave
add
test
dec
in
lods
add
lods
add
mov
dec
clc
mov
push
repz
je
mov
add
add
movb
mov
popl
add
add
xlat
mov
nop
shll
xchg
fidivrs
add
fidivrs
add
out
add
movl
lods
fcmovb
add
aad
add
add
lock
add
ret
out
int3
add
repnz
add
roll
mov
flds
mov
flds
ret
ret
ret
add
lret
lret
lret
lret
add
lret
rcl
add
aam
add
aam
add
rcl
add
aam
add
aad
add
fcmovu
add
loopne
add
out
rolb
into
in
add
jecxz
add
jecxz
add
jmp
add
cli
faddl
leave
stc
fiadds
fdiv
filds
jecxz
loopne
fucomi
in
xlat
mul
add
clc
loop
fcomip
in
add
sti
in
add
cli
in
add
cld
icebp
add
jecxz
add
in
add
call
jmp
add
out
out
add
repnz
add
icebp
out
add
stc
repnz
cld
cmc
add
repnz
hlt
testb
cld
cmc
add
cld
cli
add
incl
add
add
icebp
xlat
fdivr
jmp
add
xlat
fdivr
cld
repnz
add
add
cld
lock
not
add
icebp
cld
clc
mov
mov
xlat
add
xlat
icebp
cmc
hlt
mov
mov
cld
add
fsubrp
icebp
shlb
jne
mov
cmc
cmc
add
aad
in
push
inc
inc
jae
test
hlt
cmc
cmc
icebp
fcom
mov
pushf
sub
xor
inc
push
push
jns
js
outsb
outsl
xchg
mov
mov
mov
xor
aas
push
push
push
pop
jbe
imul
icebp
faddl
add
add
add
add
fisubrs
add
cs
pop
dec
push
push
imul
add
add
xlat
mov
or
adc
out
inc
dec
push
dec
mov
add
mov
adc
sub
inc
inc
inc
dec
dec
dec
pop
leave
faddl
add
ficompl
add
or
cmp
xor
dec
dec
xchg
jecxz
add
mov
lcall
in
cmp
xor
cmp
cltd
in
add
fisubs
int
std
loope
into
loope
sbb
add
lahf
test
mov
mov
aad
jecxz
aam
dec
shl
xlat
add
aad
mov
cli
std
and
mov
aad
add
fisubs
mov
scas
stos
lods
lods
dec
or
add
mov
sahf
sub
gs
decb
pop
in
add
fsubrl
inc
bound
jl
decb
xchg
xchg
jecxz
add
ret
sub
inc
bound
jl
decb
xchg
xchg
xlat
fsubs
gs
mov
mov
orl
add
add
add
add
bound
jl
mov
jno
xchg
mov
add
add
add
mov
sahf
sub
gs
mov
jo
jo
loopne
fadds
add
add
add
add
arpl
jl
mov
outsl
movsb
int3
icebp
repnz
xlat
add
outsb
je
addb
ljmp
add
fdiv
hlt
hlt
lret
mov
scas
scas
lret
in
sti
cmc
cmc
add
xlat
icebp
cmc
sti
in
in
cli
cli
cld
cld
cld
add
fdiv
cld
cld
cmc
cld
cld
clc
add
aad
xlat
xlat
aas
cld
pop
push
ud0
loopne
inc
add
incl
add
cld
add
aas
lock
add
add
add
psubb
add
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
lock
add
add
add
psubb
add
cld
add
aas
incl
add
inc
add
push
ud0
add
add
add
add
add
adc
add
enter
sub
add
sbb
add
xor
add
add
or
add
add
inc
add
add
add
add
add
add
add
add
pushf
adc
add
sbb
add
lods
add
movsl
sub
pop
sub
add
mov
add
mov
cmp
add
cmp
add
mov
add
mov
add
push
add
stos
inc
add
mov
add
mov
add
mov
jns
adc
popa
add
lret
add
dec
add
roll
add
push
add
lds
adc
push
add
pop
add
xlat
pop
add
fistpl
add
add
shlb
adc
outsb
add
enter
xlat
jo
es
sub
jnp
xor
jno
and
jbe
add
add
loopne
add
out
outsb
add
call
jg
add
jp
push
les
ret
pop
lret
jp
arpl
jle
inc
loopne
add
addl
enter
aam
add
fisttps
add
movl
add
rorb
aas
lret
nop
add
leave
xchg
add
xchg
add
ficoms
xor
xchg
add
xchg
add
xchg
add
rcrb
add
in
mov
sbb
addb
hlt
test
add
mov
add
xchg
add
out
add
call
xchg
add
cwtl
add
notb
add
negl
add
negl
add
lcall
repnz
add
loop
add
out
test
add
mov
dec
ret
push
ret
test
dec
ret
nop
add
xchg
add
sahf
add
lahf
add
xchg
add
test
outsl
lret
jno
xchg
add
mov
pop
aam
add
lods
add
mov
jnp
mov
add
mov
push
cmc
mov
pop
cmc
mov
add
scas
add
mov
jb
mov
add
mov
add
into
xchg
add
shlb
add
loopne
add
jmp
mov
sahf
in
mov
mov
aam
add
xlat
int3
add
loopne
add
icebp
les
mov
into
add
sti
iret
add
repnz
pushf
not
add
std
roll
movsl
call
ret
add
test
add
repz
mov
ret
add
enter
leave
add
leave
lret
add
into
into
add
rol
add
aam
add
aam
add
rolb
rcr
add
add
rcl
add
rcl
add
rcl
add
aad
add
rcl
add
fadds
flds
fstp
fldl
ret
icebp
lret
add
loope
add
loop
add
out
add
jecxz
add
loope
add
in
faddl
shl
flds
shl
fldl
loop
loope
in
loop
leave
repz
loope
loope
in
in
in
in
call
ljmp
in
ljmp
in
jmp
add
out
out
add
out
out
add
out
icebp
add
repz
cli
repnz
hlt
add
repnz
cmc
testb
cmc
testl
sti
sti
sti
add
sti
sti
add
sti
std
add
incb
incl
add
add
add
mov
sarb
add
test
iret
int3
int3
rol
mov
add
add
pop
ror
mov
lahf
mov
movb
mov
add
add
add
aas
daa
xor
pop
push
jno
mov
lahf
add
add
add
lahf
mov
xor
push
and
inc
dec
outsl
mov
mov
add
add
add
or
sbb
dec
ds
inc
bound
add
add
push
sbb
lcall
pusha
mov
add
add
mov
add
rolb
arpl
add
add
mov
or
pop
and
push
lahf
adcb
xorb
imul
mov
add
add
add
add
rcl
rcl
rcl
sarb
add
add
add
add
rcl
rcl
rcl
rcrb
add
add
add
add
ja
rcl
sahf
jnp
push
add
add
add
add
cmp
rclb
mov
add
add
scas
inc
pop
cmp
cmp
rorb
mov
add
add
add
cmp
pop
xchg
xchg
je
inc
dec
inc
fs
add
add
cmp
push
pop
pop
pop
push
inc
dec
gs
add
add
add
lahf
mov
inc
cmp
cmp
pop
pop
push
inc
dec
insl
mov
mov
add
add
add
inc
cmp
pop
pop
push
pop
xchg
mov
lahf
jl
mov
je
enter
lahf
mov
rcl
iret
movsb
mov
movsb
movsb
jmp
incl
inc
incl
incl
incl
incb
jg
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
lock
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
sub
add
add
mov
add
aaa
add
scas
push
add
pop
add
mov
dec
add
rcll
fcomps
sbb
arpl
add
arpl
add
jnp
or
jge
push
fnstsw
adc
ret
insb
add
aad
add
jmp
jo
fnstcw
jns
addl
aaa
lret
cmp
nop
add
xchg
add
fistl
add
cwtl
add
loop
add
popl
pop
out
add
icebp
addb
lock
push
jmp
add
jmp
add
jmp
add
in
lcall
clc
xchg
add
cmc
mov
add
fwait
add
add
xchg
add
nop
add
sahf
add
mov
add
cmpsl
add
mov
add
scas
add
frstor
add
mov
mov
fdivrs
add
aad
add
loop
add
repnz
add
out
aam
mov
roll
mov
not
add
cli
flds
test
std
loopne
ret
ret
ret
add
mov
lret
add
leave
leave
add
into
into
add
iret
rolb
iret
rcl
add
aam
add
fcmovnbe
add
rcl
add
aad
add
xlat
aad
add
fcmovbe
add
fcmovnu
add
add
add
out
add
out
loop
leave
mul
add
loope
add
out
add
call
jmp
jmp
repnz
add
sti
lock
std
testb
stc
cmc
add
cld
hlt
add
std
stc
add
sti
add
incl
add
add
add
add
add
jno
add
pop
arpl
das
pushw
add
add
add
add
inc
adc
sub
dec
imul
add
add
or
pop
xor
add
push
or
add
xor
adc
sbb
push
add
add
pop
sbb
add
insl
decl
unpckhps
add
add
add
sbb
jo
xor
or
add
add
add
cmp
add
add
dec
dec
jno
dec
dec
add
add
add
or
and
sub
push
ds
add
add
push
xor
sbb
push
push
sub
push
aaa
push
add
add
push
or
and
sub
pop
add
add
push
pop
inc
and
sub
push
add
add
add
pop
addr16
dec
push
dec
insb
arpl
add
add
add
add
arpl
pop
add
add
add
jg
add
aas
add
lock
loopne
add
rolb
add
add
add
add
add
pop
add
loopne
add
loopne
add
loopne
add
rolb
add
add
add
add
add
pop
add
clc
pop
add
add
add
add
add
add
add
add
mov
push
add
add
add
add
add
enter
cwtl
push
add
add
add
add
and
add
add
add
or
add
sbb
add
add
add
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
sbb
add
add
or
enter
add
adc
add
add
or
push
add
add
add
add
add
add
add
add
add
add
xchg
add
cwtl
out
add
movsb
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
loopne
add
add
xor
xor
xor
cmp
xor
xor
bound
xor
add
sbb
add
add
inc
add
insl
add
add
je
jae
add
and
add
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
sub
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
sub
and
xor
add
add
and
xor
add
add
and
add
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
and
add
add
push
add
imul
je
add
jne
imul
add
and
add
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
cmp
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
sub
and
xor
add
add
and
xor
add
add
and
add
add
push
add
add
imul
inc
add
imul
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
add
add
add
addb
add
or
add
add
add
add
add
js
insb
and
jb
imul
xor
and
arpl
imul
inc
sub
je
outsb
fs
insb
outsl
outsb
gs
and
ds
jae
insl
bound
js
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
insl
popa
outsb
imul
jb
imul
xor
ds
jae
insl
bound
fs
je
je
and
jb
imul
xor
xor
xor
and
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
or
insl
gs
jno
arpl
insb
insb
gs
and
jo
cmp
xor
and
or
or
jae
jb
jo
imul
inc
je
jb
outsb
dec
imul
jo
imul
or
gs
jb
jo
imul
fs
outsb
fs
arpl
or
gs
outsb
fs
je
jae
gs
bound
or
popa
jae
gs
bound
fs
je
je
and
je
jo
cmp
xor
and
or
outsb
popa
insl
gs
jb
jae
data16
push
imul
inc
outsl
insl
insl
outsl
outsb
sub
jb
insb
jae
and
jbe
jb
imul
xor
xor
xor
and
jo
outsl
arpl
jae
jb
jb
push
je
jb
cmp
and
or
jo
bound
dec
gs
outsl
imul
and
xor
xor
xor
arpl
xor
and
insb
popa
outsb
addr16
addr16
or
ds
fs
outsb
fs
je
jae
gs
bound
or
gs
outsb
fs
arpl
or
or
jb
jae
dec
outsb
outsw
and
insb
outsb
jae
and
outsb
cmp
push
sub
outsl
jae
data16
arpl
cmp
insl
jbe,pn
and
or
arpl
imul
cmp
gs
gs
gs
jb
jbe
insb
gs
and
cmp
gs
gs
gs
js
arpl
imul
insb
and
gs
cmp
jne
jb
inc
fs
imul
je
jb
and
inc
arpl
jae
cmp
jae
and
ds
das
jb
jno
gs
gs
jb
jbe
insb
gs
and
jae
arpl
imul
das
je
jne
je
outsb
outsw
ds
das
popa
jae
gs
bound
or
push
jg
and
pushf
or
pusha
jle
movsb
add
test
xchg
sub
lahf
aas
loopne
sub
add
xor
or
dec
add
push
push
dec
inc
cltd
inc
dec
loope
rorl
rcll
inc
inc
jmp
push
xlat
out
push
pop
popa
push
orb
inc
or
loop
push
add
lds
push
add
jmp
adc
adc
arpl
pop
sbbb
sub
adc
mov
dec
inc
dec
dec
and
and
out
lds
ljmp
jb
insb
and
sbb
movsb
adc
adc
xor
out
xchg
adc
iret
in
and
sbb
jg
test
sbb
or
jo
test
arpl
add
pop
pop
or
pop
cmp
jne
testb
add
inc
jb
and
scas
cld
dec
add
gs
daa
dec
out
and
push
movsl
dec
js
sub
inc
mov
lcall
mov
add
jae
in
jb
dec
subb
movsb
gs
and
sub
mov
and
add
sbb
ret
pop
jae
bnd
or
or
mov
and
clc
enter
clc
adc
push
test
sti
inc
push
push
pop
mov
dec
jnp
and
push
es
push
cmpsb
jecxz
cmc
fildl
pop
push
leave
push
in
fs
pop
push
inc
dec
adc
xor
pop
jno
sbb
test
int
mov
je
jae
aam
jb
mov
int
cmp
jge
inc
inc
test
mov
ljmp
and
sub
jecxz
and
lds
int
sub
jne
inc
daa
sbb
nop
add
aas
imul
jb
sbb
test
or
mov
inc
push
cmp
push
and
inc
push
inc
xchg
ss
sbb
fiaddl
sbb
arpl
add
gs
mov
imul
or
sub
sbb
xor
adc
sbb
cmp
and
sub
or
jnp
out
dec
and
test
leave
sub
xchg
test
add
sub
lods
pop
and
jmp
inc
add
clc
adc
int
sbb
xor
and
inc
lods
fcmove
fs
sub
mov
push
xor
sub
or
jmp
push
dec
xchg
add
int
adc
ss
aas
add
xor
test
popf
or
push
in
and
mov
jb
arpl
or
or
add
je
in
sub
adc
sbb
es
xor
jge
int
lods
bound
mov
and
vmovaps
sub
jb
and
out
push
fdivs
test
dec
and
cmp
clc
jae
push
lcall
xchg
xorb
push
stc
daa
mov
jge
stos
sub
mov
cmp
bound
add
mov
jbe
jo
lock
addl
loope
outsb
inc
mov
xor
jg
aas
lea
sub
cmp
lods
jno
jp
int3
and
push
dec
xchg
adc
mov
rclb
sub
cmp
and
jne
testl
xorl
xor
mov
push
mov
push
ret
add
adc
xor
xchg
xlat
lahf
cwtl
loopne
push
jb
jl
arpl
je
jle
mov
stc
outsl
aas
jo
sar
ds
push
in
jae
fucom
jmp
fnsave
jl
je
inc
adc
dec
out
xchg
sub
add
cltd
in
aas
or
lock
sbb
and
inc
pusha
shl
imul
inc
or
mov
ja
jb
add
pushf
jns
jns
fwait
add
test
cwtl
ds
test
sub
sbb
mov
enter
jle
mov
sbb
dec
shlb
mov
and
pop
jno
out
lea
dec
push
aam
adc
xor
scas
ljmp
andb
inc
inc
call
pop
mov
xchg
dec
xor
or
inc
pop
adc
or
lock
stos
push
das
fiadds
fsubrs
int3
inc
cmp
sbb
sub
xor
filds
mov
loopne
sbb
aad
jp
push
je
push
cli
cmp
iret
xorb
mov
mov
and
jne
adc
jo
int
push
inc
dec
and
dec
inc
out
imul
push
lahf
inc
sbb
dec
sub
or
mov
daa
ja
nop
ss
adc
dec
int
sbb
mov
sbb
jns
out
fs
outsb
inc
mov
add
or
out
sub
jae
or
sub
xchg
cwtl
mov
jmp
mov
mov
dec
orb
out
int
test
sub
and
je
pop
shr
pushf
mov
es
adc
lods
out
sbb
or
aas
adc
push
cmp
or
inc
sbb
mov
scas
xchg
xchg
orl
dec
inc
push
adc
imul
adc
scas
in
and
mov
cmp
sub
test
inc
adc
je
sub
inc
nop
xor
inc
adcb
pop
jmp
and
pop
ljmp
adc
or
xchg
push
mov
sub
and
and
sub
mov
and
adc
jo
inc
ficomps
and
xchg
adc
adc
adc
adc
mov
adc
loop
jae
push
je
adc
dec
push
dec
or
es
daa
inc
lds
and
in
es
into
insb
cli
test
cmc
daa
and
push
adc
icebp
cmpsb
adc
int
in
add
movsb
out
xor
dec
hlt
das
mov
pop
test
or
loop
and
enter
lds
nop
inc
sub
adc
std
sub
stc
xchg
adc
out
xor
popf
loope
cmp
inc
rolb
jae
inc
fwait
int
sti
rcrl
push
loope
dec
repz
push
or
int
adcb
inc
fstps
lahf
mov
mov
dec
mov
lods
pop
mov
loop
js
popl
push
sub
xor
ss
test
ret
dec
and
add
int
pop
cs
adcl
dec
cmc
dec
fdivrl
xchg
cmc
les
aas
sbb
xor
clc
add
fwait
jne
movsb
lret
pop
jnp
in
in
xorl
adc
pop
xchg
into
xchg
cli
aas
in
xchg
push
mov
inc
arpl
push
lea
push
add
je
sub
cmc
dec
dec
pop
sub
sbb
adc
jno
cmp
jl
push
mov
ds
sbb
jne
cmc
inc
adc
inc
aas
hlt
lcall
add
push
out
daa
cmpsb
int
aaa
xor
hlt
xor
push
icebp
je
or
add
dec
adc
and
leave
jl
xor
inc
adc
cmp
gs
insl
xchg
mov
and
sub
jecxz
rol
inc
jae
rcll
xor
sahf
push
insl
and
int
mov
adc
imul
ret
adc
lds
add
and
clc
cmpsb
in
loopne
cmp
xchg
ret
and
push
inc
sbb
fmuls
movsb
in
sub
rcrl
loope
cmp
mov
rorl
and
cli
fwait
cmpb
jns
sbb
jg
or
push
fbstp
or
xor
xor
loope
das
js
data16
or
mov
lcall
xor
add
ss
push
sbb
adc
jecxz
or
jns
sbb
mov
ja
test
gs
aas
or
inc
adc
popf
push
or
out
and
inc
test
adc
xor
daa
pushf
push
lods
or
cmp
or
test
inc
or
mov
lods
jb
cmp
inc
or
cs
mov
incb
and
push
imul
call
ret
popf
rcr
mov
test
or
dec
rcrb
jle
scas
test
test
jge
xor
rcl
xorb
nop
xchg
and
push
shll
mov
sbb
and
stos
or
faddp
int
or
lods
adc
lret
push
test
imul
test
loopne
sub
inc
dec
test
mov
or
mov
add
scas
or
mov
aad
xchg
mov
outsl
movsl
mov
inc
or
mull
sahf
jne
dec
movl
in
fs
push
ficompl
loop
dec
cmp
int
push
incb
push
xor
sub
cmp
pop
movsb
xor
push
xchg
xor
add
into
movsl
xchg
fiaddl
xor
dec
inc
bound
mov
pop
repz
test
xchg
mov
jae
dec
les
into
mov
or
sub
xor
test
idivl
into
jp
imul
mov
and
outsb
cld
jae
sbb
mov
xor
test
data16
jmp
ljmp
outsb
sbb
test
into
inc
pop
sbb
dec
cli
dec
std
xor
dec
add
popf
jae
adc
ror
mov
int
es
dec
pop
daa
pushf
and
inc
mov
add
inc
int
xchg
shll
mov
dec
mov
or
ds
adc
rclb
jl
sahf
test
inc
jns
inc
out
out
fcomp
int
pop
push
xchg
jle
adc
or
int3
add
cs
pop
int3
xor
rcrl
test
adc
inc
add
int
mov
out
push
xchg
or
mov
jl
or
leave
shrl
mov
lods
daa
cmp
push
mov
or
mov
rcll
dec
dec
push
xchg
arpl
and
adc
lods
mov
and
sbb
scas
push
adc
sbb
or
flds
scas
aad
jp
adc
es
sub
mov
and
sbb
add
pusha
sub
jb
loopne
or
xor
adc
mov
insl
cmpsb
and
sbb
fadd
sbb
mov
xchg
mov
mov
jno
mov
add
and
repnz
dec
imul
adc
in
xor
mov
xor
and
es
std
jmp
pop
mov
mov
test
dec
and
fwait
xchg
and
mov
shlb
adc
xor
jecxz
dec
dec
sbb
in
roll
xor
inc
rorl
adc
and
lds
les
adc
and
sbb
sbb
and
inc
cmpb
xchg
sbb
test
pop
jp
stos
inc
and
std
ret
int
xor
subl
gs
adc
int
or
mov
adc
int
add
and
sub
loop
and
xchg
rcrl
sub
dec
adc
xchg
xor
les
dec
push
inc
and
xor
and
adc
sub
aam
addr16
inc
adc
sub
clc
xor
cmp
and
out
shll
sahf
lock
sub
xchg
sub
and
aaa
and
int
sbb
and
add
lds
and
xor
pop
adc
jno
or
push
shlb
jne
je
mov
adc
adc
cwtl
negb
and
repz
mulb
xor
ret
and
push
push
outsb
jo
mov
inc
push
add
out
int
mov
push
movsb
dec
adc
test
sbb
inc
sub
je
lods
test
lods
das
push
int
rcr
xor
xorl
dec
imul
into
out
cmp
cmc
repz
mov
cmpsb
loop
and
lock
pop
adc
lea
popf
mov
jbe
mov
dec
inc
push
push
add
rcl
sub
in
cmp
dec
dec
fwait
push
adc
cmp
and
dec
and
daa
adc
push
dec
xor
xchg
mov
xchg
aad
and
std
push
or
adc
test
imul
dec
add
dec
push
cmp
ds
add
inc
subl
aad
push
and
nop
fstp
shlb
int
pop
js
out
and
cmp
push
test
add
xorb
mov
add
into
push
adc
mov
mov
inc
iret
and
or
sbb
adc
sti
or
mov
pushf
xchg
rcrb
mov
inc
dec
aad
and
jb
inc
or
stos
setne
push
xchg
dec
sub
nop
mov
aad
cmp
xchg
stc
xor
sub
das
cltd
dec
xor
lret
adc
add
sub
in
je
mov
or
shlb
adc
lcall
out
mov
jb
add
push
loop
dec
mov
adc
push
loop
mov
je
roll
rcr
outsl
aam
mov
std
fst
fwait
mov
hlt
ja
xchg
xor
dec
jmp
cltd
xor
in
loop
xchg
mov
test
aaa
cmp
cmc
out
adc
cmpsl
ret
int
mov
xchg
sub
out
push
cmp
adc
mov
pop
out
adc
aam
dec
scas
sub
adcb
mov
fwait
in
cmp
mov
xor
add
xorb
xchg
rdtsc
mov
mov
pop
dec
xchg
xchg
pop
pop
repnz
xchg
movsl
cmp
aaa
in
outsl
addr16
test
xor
dec
push
dec
hlt
jecxz
into
add
lods
bound
je
fs
aad
add
hlt
add
out
xchg
mov
popl
enter
and
adc
inc
push
mov
fstl
test
insl
shrb
in
or
hlt
jo
sub
int
xor
sbb
sub
aaa
and
test
xor
mov
push
shlb
shlb
xchg
push
cmp
add
xchg
xchg
mov
mov
lods
or
jae
mov
sahf
int
cmp
cltd
xor
clc
sub
xor
inc
cmpsb
fisubrl
push
and
mov
mov
jne
mov
cmp
movsb
jge
lcall
or
jb
sub
sbb
in
xchg
xor
jecxz
int
outsl
mov
daa
and
es
je
mov
das
dec
jl
jns
addb
cmc
mov
add
in
scas
lret
fiaddl
push
fsubrl
fildll
orb
cmpsb
les
ljmp
xchg
mov
andl
push
sbb
dec
cltd
fldenv
repz
mov
jle
xchg
sbb
mov
adc
and
andl
and
insb
add
jne
gs
xor
mov
sub
movsb
fwait
adc
frstor
add
je
jle
cmc
and
aas
sbb
lods
pusha
and
mov
fst
in
jnp
fisttpll
and
jecxz
sbb
sub
jb
push
les
and
adc
or
cmp
mov
ja
mov
xor
jne
into
dec
cmp
mov
daa
jle
nop
xchg
cmp
insl
scas
in
cmp
xchg
adc
and
xchg
inc
jl
and
mov
in
scas
lods
jns
inc
incb
test
or
scas
mov
push
push
dec
mov
and
adc
or
daa
pop
loopne
int3
xchg
les
or
push
adc
rcrb
incl
mov
sub
and
or
stos
stos
inc
lods
xor
push
in
das
xchg
sub
scas
jmp
mov
jmp
jle
mov
sub
pushf
inc
ja
inc
or
sub
adc
jl
push
dec
push
inc
pop
lret
sub
int
pusha
adc
dec
dec
and
push
andb
dec
mov
pop
sub
xorb
xchg
pop
test
int3
adcl
inc
iret
sarl
int
movsl
outsl
mov
movsl
loopne
int
cmp
or
push
outsl
in
and
push
imul
dec
popa
icebp
jno
int
mov
leave
imul
adc
push
repnz
mov
push
jno
or
mov
out
ret
insb
and
and
fstpt
or
xlat
inc
pop
scas
ficoml
push
cltd
mov
adc
dec
and
dec
mov
iret
mov
pop
add
sbb
and
in
das
push
and
cld
inc
int
inc
mov
adc
or
add
jb
mov
cli
adc
push
cmp
dec
mov
sub
dec
adc
jno
int
xor
sub
aas
xchg
or
cwtl
stc
filds
jne
sub
clc
adc
call
adc
cmp
aas
adc
int3
loopne
pop
cmp
xchg
int3
fisubrs
cs
jecxz
jns
fs
loopne
and
lahf
and
add
sbb
lods
xor
and
mov
movsl
inc
jmp
and
inc
push
mov
add
jns
dec
out
in
push
mov
mov
cmp
fs
push
shrb
add
dec
jle
push
adc
cwtl
int
sub
test
inc
push
add
scas
out
lods
dec
lock
pop
pop
int3
cmp
repnz
xor
jp
and
out
and
rcrb
imull
lds
and
xor
insl
add
jge
pop
cmp
inc
xor
pop
shrl
mov
rcrb
xor
lock
mov
leave
in
mov
int3
or
shlb
repnz
loopne
enter
pusha
adc
int
adc
lock
pop
add
sub
sub
test
aas
xor
adc
xor
xchg
or
dec
push
adc
hlt
shll
sub
enter
stos
cmpsb
decl
or
sub
in
rolb
fimuls
arpl
je
xchg
mov
std
nop
jp
mov
lods
push
push
clc
paddsw
repz
es
pop
ret
push
xor
stos
mov
sbbl
pop
cmp
xor
jnp
popa
lock
loope
mov
xor
test
or
pusha
fwait
xor
pop
mov
outsl
push
sbbb
les
pop
rcll
repz
xchg
clc
arpl
or
add
rcrl
xor
xor
in
cmp
adc
int
sub
imul
out
jae
or
js
loop
je
or
shr
inc
cmp
jb
lods
daa
lcall
xchg
fstl
jmp
sub
sbb
sbb
and
mov
cmp
cmp
adc
or
jne
cmc
inc
jecxz
ja
orl
ljmp
push
mov
movsl
or
xor
xchg
in
xor
jecxz
sbb
mov
pop
cwtl
test
xor
mov
cmp
lock
inc
sub
inc
jecxz
decl
js
pop
test
pop
aas
mov
jbe
or
inc
sub
jne
sub
adc
divl
aam
push
and
jae
popf
and
adcl
sub
js
insb
loop
and
cmpsb
jl
adc
pop
sub
mov
jb
inc
pop
jp
and
sub
psrlq
lods
stos
sub
xor
xor
je
rorl
adc
imul
add
xchg
dec
adc
add
lcall
cmp
mov
int
xchg
in
test
daa
push
adc
dec
movsb
dec
icebp
push
mov
lods
inc
sub
adc
mov
and
inc
nop
testl
ja
popf
mov
movsb
std
cmp
xchg
scas
dec
repnz
dec
cltd
inc
nop
imul
mov
pop
xchg
es
or
push
test
daa
sbb
mov
push
popa
or
adc
hlt
jne
call
movsb
mov
lods
sbb
out
dec
xorl
mov
insl
xchg
jge
and
fs
xor
jne
cmp
adc
gs
test
inc
sbb
and
or
std
leave
jno
movsb
add
jns
test
js
outsb
push
mov
lahf
popa
gs
and
fwait
xchg
mov
shrb
clc
loop
jns
push
add
inc
or
imul
inc
and
nop
sbb
daa
lds
jns
add
jbe
mov
or
int
gs
pop
enter
xchg
mov
jb
mov
aas
nop
out
adc
cmp
test
daa
jnp
daa
inc
sbb
xchg
sub
inc
pop
cli
jmp
pop
push
loopne
imul
xchg
orl
mov
mov
xchg
lods
inc
pop
mov
mov
or
je
ja
ss
xchg
sub
int
push
jne
mov
ja
cmp
push
clc
push
sub
jne
lds
ds
cltd
sbb
push
test
mov
jns
ds
xchg
mov
mov
dec
dec
je
loop
and
dec
ja
mov
shlb
test
ljmp
in
inc
ljmp
imul
imul
aaa
dec
mov
imul
call
cmp
dec
divb
sarl
cltd
insb
clc
mov
push
jo
mov
ret
loopne
lock
or
stos
lods
adc
lcall
push
sub
cmp
bound
test
cmpb
int
add
cmpsb
enter
inc
mov
xlat
and
inc
push
leave
and
loop
or
mov
es
fisubl
jecxz
daa
sbb
add
fimull
in
in
xchg
cmp
lds
enter
jge
mov
or
shl
mov
stos
mov
push
rolb
lea
xor
ja
mov
pop
testb
dec
xor
andb
stc
addl
insb
cmp
dec
std
add
shlb
insb
pop
or
and
arpl
fwait
inc
cmp
push
stos
sbb
and
int
mov
fbstp
and
xor
sbb
xor
xchg
aas
mov
fimuls
inc
out
lret
sbb
insl
or
in
inc
clc
xchg
inc
cs
add
hlt
jb
pop
ret
cmpsl
fnsave
in
or
and
adc
sbb
dec
add
mov
out
add
inc
mov
ror
and
fimull
int
pop
dec
and
jne
pop
int
das
xchg
fwait
dec
adc
lods
fwait
xchg
frstor
iret
repnz
mov
cmp
rcrl
mov
test
sub
cmp
push
ja
jae
aas
push
sub
cld
lock
into
std
std
mov
push
dec
subb
loopne
and
loop
arpl
and
sbb
push
stos
mov
jle
xor
cmp
jno
adc
movsb
test
daa
ror
fnstenv
adc
xor
jno
iret
and
and
leave
add
and
cmc
and
jb
arpl
push
sub
sub
popf
jnp
ljmp
nop
and
xchg
bound
adc
and
mov
lods
push
pushf
les
test
mov
lods
push
mov
pusha
dec
bound
mov
and
sbb
and
adc
mov
std
inc
xchg
jle
aad
lret
nop
adc
xchg
adc
mov
adc
cmp
pop
or
jae
mov
sbb
mov
enter
sbb
lcall
std
decl
test
test
inc
test
and
mov
adc
and
test
leave
sbb
push
int
je
cmpsb
std
icebp
or
xchg
and
push
cmp
in
sti
fs
adc
push
ja
mov
std
pop
mov
sub
jae
inc
add
mov
int3
addr16
in
cmp
hlt
dec
push
cli
cmp
xchg
mov
push
mov
pusha
xchg
xchg
lods
sbb
mov
xchg
mov
push
xor
inc
pop
and
adcb
and
sub
push
je
mov
fsubs
lcall
sbb
mov
icebp
push
and
push
scas
ja
pop
insb
push
mov
push
sahf
mov
in
dec
xor
mov
es
test
pop
sub
jg
aad
cmp
mov
jp
pop
jno
dec
rcrl
push
cs
pop
jle
into
and
and
loopne
dec
jp
ret
loop
xor
push
fldcw
inc
mov
mov
xor
or
out
dec
ja
ret
insb
sbb
add
jle
and
cmp
cmc
lods
jb
ret
cwtl
jge
mov
mov
sub
jmp
add
test
cltd
push
inc
or
fimuls
incb
sbb
dec
jo
dec
push
hlt
and
push
pop
pop
add
mov
sub
push
ror
sbb
ret
push
scas
lahf
fs
sbb
mov
int3
rorb
push
aam
mov
pop
push
xor
in
lods
sbb
outsl
movsb
mov
push
and
scas
xor
jno
and
daa
pop
push
mov
mov
shlb
sub
es
push
mov
pop
out
mov
mov
pop
dec
xchg
cltd
dec
dec
frstor
sbb
imul
std
push
lret
stos
xor
push
xor
mov
mov
add
push
push
inc
outsb
lret
dec
push
insb
inc
jbe
inc
push
out
sub
cs
push
inc
shlb
push
dec
popa
adc
daa
stos
sub
dec
jb
mov
and
stos
sbb
adc
sbb
push
sub
insb
xor
notl
inc
add
fs
inc
and
push
sub
add
fs
or
add
and
mov
int3
push
jmp
and
adc
cmpsl
pushl
jmp
xor
das
and
ljmp
lds
xor
inc
xor
add
add
push
lret
mov
cmp
lock
mov
sbb
outsl
mov
or
mov
cli
mov
mov
push
jecxz
jl
out
xchg
xchg
inc
add
or
xor
loope
daa
sahf
fisubs
cmp
push
dec
xor
add
fisubrl
mov
outsb
shl
mov
xor
mov
jns
gs
add
call
xchg
popf
ss
sub
push
mov
sbb
jmp
push
inc
iret
or
int3
icebp
sub
clc
in
lods
cltd
add
sub
pop
mov
lods
repnz
imul
push
push
cmpb
push
jno
rorb
or
push
inc
shll
cmp
cmp
mov
inc
xchg
xchg
adcb
out
adc
sub
arpl
punpcklwd
lods
adc
dec
sub
pop
push
dec
inc
cli
out
push
pop
ds
int3
jae
scas
adc
push
sarb
pop
sbb
cwtl
adc
imul
int
or
insb
mov
loopne
loopne
mov
sbb
dec
xchg
and
jns
jge
jno
jne
imul
sbb
or
or
xchg
and
sub
sub
sbb
inc
test
inc
inc
adc
dec
fs
xor
pop
or
xchg
and
fs
mov
mov
test
adcl
popf
or
xchg
and
nop
cmc
enter
xor
sbb
or
xchg
and
nop
aad
shll
fstps
std
xor
and
xor
cmp
enter
xor
jp
or
push
push
sbb
sbb
imul
fs
xor
dec
or
xchg
and
pop
enter
xor
test
mov
mov
xor
xchg
and
fs
loope
in
or
xchg
and
nop
std
enter
dec
push
shll
sbb
or
xchg
sub
shll
push
sub
mov
xor
dec
movsl
mov
test
out
and
out
fsubrs
sub
ret
scas
leave
pop
cmpsb
cmpsl
dec
imul
fs
cld
out
jl
inc
int
mov
jecxz
test
lahf
je
pop
data16
adc
test
push
sbb
pop
mov
sbb
jne
inc
push
mov
insb
xchg
fistpl
mov
mov
dec
cmp
or
notb
test
or
mov
push
jne
ficoml
dec
sbb
mov
test
in
dec
xor
test
test
push
test
dec
pop
arpl
scas
ja
pop
out
xor
sbb
adc
lock
cmc
xchg
sahf
adcl
jge
and
xor
xchg
jno
into
sub
sub
rorb
jge
cmp
in
sbb
les
mov
pushf
leave
lods
jne
mov
mov
das
sub
int3
pop
lea
mov
mov
es
sub
and
lods
and
mov
add
int
push
out
aas
popa
fyl2x
xchg
jae
mov
jb
gs
dec
sbb
fcomp
fmull
and
jge
mov
fldenv
and
inc
int
jecxz
xrelease
inc
add
inc
add
stos
adc
or
or
jne
xor
ret
adc
pop
dec
xor
imul
mov
std
inc
jp
jge
out
mov
adc
js
inc
fs
mov
push
ficomps
notb
testb
popa
jno
or
popa
mov
xor
or
fldt
loope
cmp
lahf
or
and
push
popa
adc
out
xor
cli
add
popf
and
mov
pop
test
and
fbld
out
jnp
test
out
or
sbb
mov
fimuls
ja
mov
inc
lahf
sahf
xor
in
adc
and
fcoml
popf
int
adc
adc
inc
and
and
stos
mov
loop
cs
mov
push
sub
sahf
push
adc
loopne
aaa
xchg
inc
cmp
inc
sbb
arpl
mov
sbb
and
out
xor
or
and
and
fucomp
inc
pop
mov
in
in
fwait
push
cmp
mov
xchg
lock
outsl
push
lds
mov
cwtl
inc
iret
xchg
lock
cld
mov
adc
push
dec
and
xor
sbb
cmp
clc
pop
jp
dec
xor
add
or
and
int
rol
test
test
pusha
mov
inc
pusha
call
push
enter
xchg
adc
int
in
int3
shl
or
and
mov
aas
loope
dec
out
hlt
rorl
jmp
sub
or
mov
push
and
aaa
adc
rorb
in
inc
adc
and
xor
xchg
mov
xor
and
adc
or
insl
or
test
and
adc
les
flds
and
pop
jne
test
jp
fwait
in
xchg
test
mov
cwtl
fwait
xchg
jmp
push
adc
aam
test
fcmovbe
jge
shlb
adc
push
inc
subl
test
mov
inc
scas
sub
inc
and
shll
sbb
out
xor
in
ss
sbb
loop
fwait
adc
sbb
in
and
fcmovnbe
dec
push
or
sbb
adc
or
adc
rorb
shlb
xor
inc
ja
adc
shlb
in
nop
jge
and
mov
dec
and
stc
xorb
sbb
or
add
and
rorl
inc
es
and
lds
mov
lods
inc
aaa
mov
jnp
cmp
sbb
push
sub
mov
mov
inc
inc
loopne
popf
in
push
pusha
imul
popf
sub
shl
mov
jbe
adc
cwtl
or
adc
mov
xchg
adc
int
mov
mov
aad
or
test
add
adc
mov
adc
mov
xchg
lock
enter
scas
shl
shr
or
and
mov
mov
mov
add
cmpsw
adc
inc
dec
ja
and
inc
cmp
mov
pop
or
pop
or
mov
adc
and
dec
ja
inc
and
mov
push
xor
jno
sub
fwait
adc
test
outsl
sub
shrl
rorb
aam
and
aad
sub
inc
aaa
insl
int3
imul
inc
inc
daa
mov
and
int3
adc
or
sub
pinsrw
sub
and
add
xor
int3
cmp
cmp
push
outsl
sub
xor
dec
and
dec
xor
push
icebp
data16
xor
pop
fnstcw
xor
shll
mov
xorl
adc
test
cmp
mov
or
adc
adc
cltd
adc
cmc
or
leave
ja
imul
and
xchg
xchg
or
cmp
sahf
int3
sbb
sub
mov
leave
or
data16
dec
xchg
data16
inc
gs
or
dec
mov
shr
push
andb
loopne
cmp
xor
or
rclb
mov
dec
scas
es
and
int3
fscale
sub
aam
xchg
imul
sbb
in
insb
ss
int
mov
cmp
stc
jl
cltd
rorb
and
and
inc
push
cltd
sbb
adc
xor
aad
lret
mov
sub
push
popa
sub
rorl
outsl
sub
jno
mov
and
lcall
or
fs
or
dec
pop
xchg
or
gs
imul
adc
push
dec
movsl
xchg
mov
mov
add
lds
xor
pop
mov
or
xchg
mov
jg
popa
adc
xchg
das
sub
xchg
fs
or
fadd
add
mov
or
gs
push
inc
mov
pop
mov
adc
fldcw
adc
add
paddusb
cltd
in
or
jne
cmc
pop
mov
and
inc
jecxz
mov
popa
lea
xchg
inc
mov
scas
and
dec
pop
xchg
pop
and
dec
inc
mov
jg
jno
imul
adc
jl
in
sbb
or
cmp
and
fmuls
or
adc
sub
or
les
fcomp
jl
lea
push
fs
stc
inc
jne
js
rep
in
push
cmp
sti
mov
mov
icebp
sub
add
sbb
cmp
mov
and
sub
xchg
pop
adc
and
aad
fwait
or
ds
xor
cmp
jo
push
xchg
mov
xor
cltd
adc
movsl
je
inc
sbb
or
cmp
fmull
sub
js
in
clc
xor
test
aad
sbb
inc
push
mov
adc
sub
sub
dec
call
cmp
call
icebp
cmc
ret
push
test
or
mov
adc
add
xor
xor
inc
fstl
ret
lds
xchg
push
aaa
and
aaa
inc
or
sub
sub
jne
xor
in
inc
xor
in
fwait
cwtl
xchg
push
adc
and
pop
adc
pop
sub
sbb
adc
add
lds
cmp
or
aad
sbb
or
and
outsb
lret
adc
leave
stc
adc
jne
mov
shr
jnp
add
leave
adc
mov
mov
dec
push
add
add
push
push
sub
sbb
je
inc
test
iret
mov
push
and
mov
dec
push
mov
xor
and
mov
xchg
cmp
mov
add
jbe
xchg
adc
and
adc
dec
sbb
xor
adc
icebp
jbe
xor
adc
jl
and
inc
inc
and
add
cs
jne
outsb
and
push
mov
xchg
xchg
pop
enter
dec
and
icebp
cmpsb
adc
and
shll
leave
js
or
in
js
cli
jo
sub
add
daa
pop
rcll
adc
and
adc
inc
jge
push
push
inc
movsl
repnz
sub
xchg
test
popf
mov
mov
jmp
sub
cld
xor
les
aam
pusha
out
sub
jae
cmp
arpl
les
lds
dec
jne
in
jb
cmp
movsb
mov
and
inc
mov
sbb
mov
adc
movl
xchg
fsubs
and
jb,pn
sub
test
jb
push
jne
add
pop
addb
xchg
dec
mov
mov
xchg
test
lea
clc
push
fwait
jo
in
xchg
sub
std
jns
dec
xor
cmpsb
dec
inc
aad
fiadds
xor
cmp
and
mov
inc
or
fdivs
push
aaa
adc
sub
bound
repnz
sub
adc
or
push
jo
movsb
jb
test
xchg
mov
dec
sub
jmp
das
inc
cld
add
and
dec
lret
and
inc
sub
pop
jl
sbb
adc
add
xchg
adc
inc
sbb
sub
int3
bound
xor
js
xor
pop
jne
push
call
js
xchg
dec
push
mov
call
xchg
and
in
mov
stc
jb
iret
and
dec
xlat
xchg
sub
fadds
inc
jg
daa
cmp
sahf
add
xor
xor
xor
xor
xor
xor
mov
outsb
sub
sub
mov
mov
aad
js
mov
lds
jle
xor
push
cmp
lods
cmp
jge
inc
adc
arpl
cmp
or
jle
test
jne
pop
in
jo
cmpsb
or
xchg
loopne
lods
pop
cmp
aad
fnsave
aam
arpl
adc
mov
rclb
mov
xor
mov
pop
adc
leave
sbb
inc
inc
cmp
adc
fisttpll
and
adc
mov
ret
jmp
xor
cmp
inc
pop
lds
pop
and
mov
jg
daa
and
jbe
push
pop
insb
ficomps
xchg
jb
jne
or
call
adc
sbb
imul
jno
pop
arpl
mov
inc
insl
outsb
cmp
andl
clc
push
inc
clc
out
daa
fidivrs
inc
dec
sub
fists
dec
jns
jae
sub
inc
clc
jo
jge
dec
dec
cmovo
push
in
mov
shll
or
insl
push
jge
push
push
arpl
dec
xor
xchg
dec
jo
and
xchg
sti
fcomps
sub
adc
lahf
pop
dec
sbb
cmpsb
sbb
insl
dec
or
lds
decb
xchg
or
popa
push
push
inc
dec
dec
jg
pop
mov
push
adc
inc
cltd
push
mov
and
int
xchg
aad
in
mov
sub
out
sbb
push
call
mov
jl
cmp
incl
push
dec
sbb
imul
nop
dec
xchg
fwait
jg
lret
lahf
pushw
dec
pop
sub
jno
cmovno
push
inc
fs
add
imul
mul
pop
lret
and
mov
aad
sub
imul
pop
in
aaa
es
push
sub
mov
test
and
push
insb
dec
inc
dec
es
outsb
pusha
ja
bound
pop
dec
pushf
sub
dec
pop
cwtl
push
cmp
daa
xor
jb
scas
or
ds
loop
cmp
mov
mov
or
mov
and
push
inc
sub
inc
enter
loope
pusha
mov
dec
xchg
mov
movsb
cwtl
movsb
pop
insb
xchg
cmp
sub
inc
mov
and
jne
test
shr
sbb
xchg
mov
inc
xor
cmpsb
enter
fmuls
lahf
xchg
inc
pop
andl
jnp
gs
adcl
fbld
test
mov
and
push
xchg
pop
and
jbe
adc
sbb
enter
dec
cmp
push
sbb
dec
adc
cmc
xor
dec
stos
out
int3
xor
test
mov
push
cmpsb
xchg
adc
ds
sub
jecxz
movsl
pop
sub
lods
sbb
inc
inc
pop
dec
sub
jne
lahf
jbe
pop
sahf
addr16
sbb
shll
mov
add
scas
add
jp
leave
and
dec
repz
mov
sub
push
data16
out
xchg
fisubs
and
fldt
inc
pop
ds
add
mov
pop
pusha
push
adc
sbb
adc
pushw
adc
dec
dec
add
jmp
pop
shlb
xchg
xchg
lea
cltd
push
push
int3
add
pop
inc
mov
je
push
and
adc
les
xchg
cmc
loopne
xchg
lahf
nop
sub
inc
mov
dec
inc
aas
jp
enter
div
fwait
mov
ljmp
jmp
cltd
jp
adc
cmc
test
in
adc
fidivs
jo
and
mov
dec
sub
out
push
sbb
sub
fldt
xchg
sub
int
loope
popf
shll
lock
call
sbb
dec
cmp
sahf
mov
pop
inc
add
and
push
inc
mov
adc
in
shlb
adc
push
pop
movsl
movsb
jo
enter
or
insl
inc
sub
xor
shll
std
scas
adc
lea
test
in
stos
and
inc
xchg
aad
xchg
adc
add
and
dec
adc
das
mov
loopne
mov
stc
and
dec
clc
xchg
lds
sti
inc
mov
or
xchg
and
mov
and
mov
push
arpl
lods
mov
movb
and
cmc
mov
or
inc
and
and
xchg
inc
cmp
sub
insl
pop
and
sub
sbb
xchg
mov
and
in
inc
cmc
repnz
nop
aad
std
and
mov
adc
jne
in
aas
and
movsl
bswap
mov
inc
test
xchg
pop
nop
in
cmc
xchg
lds
and
sti
cli
and
adc
adc
dec
jmp
or
sub
or
adc
adc
sub
lods
inc
inc
ret
iret
jge
adc
gs
in
dec
iret
js
int
and
mov
loop
mov
subl
inc
mov
sub
rolb
lods
adc
gs
and
push
adc
and
mov
lea
dec
inc
and
push
sbb
in
and
popa
and
and
cld
movsl
loop
push
sub
jo
lea
cmp
mov
sub
cwtl
mov
pop
or
xor
jb
and
mov
popa
jo
pop
lea
adc
stos
add
cmpb
les
add
or
sbbl
pushf
adc
pop
and
or
or
sbb
mov
and
xor
jge
es
dec
int3
or
nopl
inc
jecxz
loop
pusha
inc
lcall
hlt
rolb
out
sbb
jne
jecxz
adc
js
xor
ja
sub
jl
dec
out
unpcklps
jp
cmp
inc
add
inc
loopne
cld
inc
int3
inc
jmp
daa
in
cwtl
es
pop
sar
leave
mov
adc
inc
lock
ret
cmp
in
push
sbb
loopne
fsubr
movsb
cmp
inc
pusha
movl
or
shlb
sub
sub
lock
jl
xor
les
jo
mov
jecxz
dec
es
pop
and
mov
ds
push
pop
mov
jecxz
mov
clc
cmp
and
mov
cmp
sub
mov
xchg
icebp
sub
lahf
vpmacssdql
adc
adc
stc
fcompl
xchg
or
lcall
outsb
inc
mov
cwtl
mov
pop
pop
jae
or
jp
adc
inc
test
addr16
or
xor
sub
call
jb
clc
mov
pop
sbb
imul
je
nop
adc
xchg
push
rorb
xor
testl
jge
adc
push
loopne
pop
inc
hlt
pop
dec
pop
loop
push
pop
sbb
inc
push
xor
mov
pop
pop
pop
lret
pop
pop
pop
aam
sbb
mov
loopne
xchg
mov
mov
dec
out
dec
jne
add
aam
xor
inc
in
shr
inc
test
mov
add
push
scas
mov
lods
adc
jo
adc
or
clc
cmp
mov
test
xor
dec
sub
sarb
test
shlb
and
int3
add
fdivrl
cwtl
or
sbb
jl
sub
in
js
mov
or
loopne
aad
inc
add
inc
mov
mov
addr16
xorb
pop
sbb
shlb
or
cwtl
adc
in
test
xor
dec
dec
jmp
call
xchg
pop
ret
imul
mov
mov
fsubl
adc
xchg
js
lahf
push
fstpl
xchg
or
insb
add
fwait
sub
mov
cld
js
fsub
inc
or
inc
xor
mov
movsb
cwtl
filds
add
hlt
mov
mov
idivb
test
push
mov
idivb
xor
mov
add
mov
jl
jge
jl
idivb
faddl
xchg
shrl
popf
loop
pushf
dec
mulb
test
jmp
lock
shlb
scas
fcompl
mov
hlt
loopne
repnz
lcall
adc
nop
sbb
pushf
loope
clc
out
and
repz
paddsw
cmp
std
lahf
cmp
ds
cld
fsubp
shl
aaa
incb
ret
stc
adc
leave
jg
sbb
addb
loopne
repz
rol
sti
lret
ret
or
rcrl
xlat
ret
xor
int3
clc
stc
ds
or
fmul
or
int
iret
ret
add
aad
leave
sbb
shr
iret
lret
cmpsb
xlat
and
rcr
sbb
rcl
add
fstpt
test
test
rcr
and
inc
jns
pop
mov
stc
and
es
in
lods
pop
sbb
jl
inc
in
or
gs
js
pop
roll
fcom
lock
incb
rorb
cltd
rorl
mov
jmp
xor
jl
mov
shl
subb
jb
inc
arpl
fs
repz
pop
clc
ror
or
cmpsl
or
pop
fs
add
add
into
jnp
and
in
add
mov
push
imul
pop
inc
push
in
ss
add
add
adc
sbb
scas
sbb
jp
inc
inc
jne
push
add
mov
inc
xor
cmp
mov
mov
sbb
xchg
dec
dec
add
dec
dec
push
in
and
push
sub
xor
daa
test
adc
movsl
pop
push
push
dec
dec
sub
dec
cli
inc
cli
cmp
pushf
inc
sub
inc
and
pop
push
xor
add
and
sub
and
push
pinsrw
sbb
push
add
dec
lcall
in
inc
and
jecxz
and
loop
cmp
jmp
xor
sbb
sbb
test
xor
add
lcall
add
mov
es
or
and
iret
int3
enter
enter
sbb
adc
xor
xchg
repz
add
add
sbb
xor
pop
pop
mov
stos
mov
sbb
cmpsl
lds
and
mov
xchg
hlt
shl
movsb
es
xorb
repz
ret
clc
xchg
cmc
xor
test
add
mov
and
adc
mov
mov
sbbb
adc
clc
xor
xchg
mov
enter
push
sahf
mov
mov
rcl
jle
and
mov
mov
rol
sahf
jge
or
fst
add
add
and
and
push
mov
sti
jb
xor
roll
push
ficompl
push
shufps
or
pop
push
sbb
adc
adc
movsl
add
sbb
and
fisubl
clc
out
xchg
addr16
lret
xchg
mov
roll
xchg
test
jnp
daa
adc
repz
mov
push
andb
mov
add
adc
jg
mov
adc
jg
sbb
lcall
jecxz
jecxz
ret
jmp
jnp
adc
adc
push
cmp
cmc
dec
sbb
cli
cmp
clc
jg
sbb
loopne
sub
push
int3
adc
mov
popa
lock
pop
mov
jl
sbb
or
sub
mov
and
test
or
xchg
icebp
cmp
mov
cmp
arpl
xchg
sbb
bound
nop
push
lcall
inc
testl
xor
adc
xchg
jae
jl
pop
inc
mov
adc
mov
and
cmpsl
xchg
sar
test
ret
xor
invd
sbb
ljmp
or
mov
lock
pop
and
mov
mov
xlat
mov
fsubrl
push
aad
stos
cld
lds
je
mov
test
rclb
pop
outsb
mov
pop
ret
or
loopne
ficoms
lcall
addl
lods
call
pushf
sub
test
ds
add
xchg
cld
out
loopne
shr
stc
cld
shl
clc
lea
out
jne
lock
fsts
rcrb
mov
ds
call
in
cmc
in
sbb
jmp
ljmp
fwait
repnz
lock
adc
repz
hlt
stc
and
cli
sti
sub
shll
sbb
enter
les
cwtl
fstpt
call
lds
fisubs
sub
jl
cmp
ret
shr
lret
jecxz
rol
or
xlat
scas
or
rorl
fmuls
and
jle
out
dec
sub
push
test
sbb
movsb
cmpsb
dec
or
and
cmovo
je
jne
clc
adc
ds
add
imul
add
cmp
inc
dec
outsb
sub
xor
add
add
sub
and
xor
arpl
adc
push
or
inc
xor
add
push
cmpsb
xor
xor
or
adc
and
das
adc
jl
orl
cmc
pop
add
call
inc
jg
rsqrtps
jb
sarb
sbb
add
dec
cld
and
and
sbb
inc
inc
jo
popa
pusha
data16
mov
or
jnp
xlat
mov
inc
js
push
dec
dec
clc
ds
jge
pop
push
sbb
lret
loop
lds
movsl
sub
cmp
in
aad
push
adc
inc
fs
lods
mov
mov
mov
add
mov
daa
and
and
xchg
sub
fs
std
gs
mov
dec
add
sbb
pop
addr16
pop
sub
les
and
insb
test
jecxz
fcmove
andl
push
jg
adc
sub
push
or
daa
arpl
inc
pop
and
push
mov
rolb
mov
lahf
add
bound
adc
jne
mov
push
inc
fiadds
fiaddl
xchg
xor
std
push
jl
gs
cmp
or
jl
and
xor
mov
dec
mov
jae
dec
mov
test
pop
lcall
fstps
inc
fisttpll
cmp
daa
pop
dec
add
and
adc
jl
loope
pop
repz
xchg
and
mov
add
fcmovu
adc
rclb
add
mov
ss
jp
loopne
movsb
test
mulps
pop
or
mov
adc
dec
mov
sbb
xor
lcall
sbb
fcmovbe
andl
xorl
mov
or
call
cld
sti
and
mov
sub
sbb
add
sbb
and
mov
add
mov
movsb
inc
jl
test
and
push
or
sbb
movsl
movsb
sub
fs
xchg
mov
rol
or
aad
sbb
xlat
data16
dec
push
nop
fidivrs
sbb
aas
sub
or
fisubs
add
ret
add
xchg
pop
aad
mov
popa
cltd
rol
sbb
sub
and
test
jo
inc
mov
and
addb
shlb
aas
and
add
subb
dec
mov
add
cmp
leave
mov
jno
nop
outsl
push
xlat
mov
push
rorl
or
fdivs
fcoml
or
adc
mov
in
ret
jno
fwait
in
add
jge
addr16
sub
sbb
push
adcl
jo
stos
or
mov
test
mov
pop
sbb
pop
pusha
jge
inc
sbb
pop
push
xor
or
sbb
inc
je
imul
aas
stos
and
pop
in
shll
mov
repnz
pushf
adc
add
ror
mov
mov
fstpl
fdivrs
adc
les
rol
icebp
inc
mov
out
loopne
out
nop
test
jecxz
cmp
adc
shrl
pop
mov
add
dec
aaa
addr16
cltd
cs
inc
les
xor
sub
pop
in
and
jge
daa
jbe
les
js
or
insl
jle
jnp
and
test
clc
sub
les
cmc
jecxz
adc
add
inc
add
ret
push
and
push
pop
out
sti
adc
test
ds
scas
aas
and
jmp
xor
rcll
and
inc
test
xchg
clc
mov
icebp
call
subl
pop
or
mov
or
data16
xor
mov
daa
and
mov
xchg
mov
add
and
mov
and
cmpsl
cmp
daa
adc
adc
or
adc
or
adc
and
jns
push
mov
inc
mov
inc
xchg
inc
lcall
dec
add
add
call
ror
aam
mov
out
aas
cli
mov
ror
scas
or
and
rclb
rol
xlat
add
fwait
or
inc
xor
or
mov
mov
cmp
fs
push
add
cmpsb
adc
test
or
fmuls
push
or
add
xchg
je
jb
adc
sti
cwtl
adc
ljmp
loopne
stc
in
mov
mov
xor
std
inc
or
in
push
inc
mov
add
mov
fidivrs
shlb
mov
into
mov
aaa
cwtl
cmp
and
push
aas
nop
js
xchg
addl
cmp
adcb
enter
mov
mov
aam
sbb
imul
fidivrs
js
xchg
sub
cli
mov
pop
cld
test
and
inc
and
jnp
ljmp
sti
push
add
pop
add
movsb
fs
mov
and
add
shll
sbb
iret
or
pop
call
and
nop
pushf
lds
inc
movsb
xor
mov
and
adcl
add
mov
lds
and
pop
pusha
jo
adc
mov
sbb
mov
and
imul
cmc
jno
lock
mov
clc
inc
mov
mov
sahf
jns
xchg
insl
and
mov
sbb
inc
or
inc
cmp
add
or
lds
aad
xchg
mov
and
push
aam
xor
dec
ret
cmp
outsb
xorb
and
xchg
xor
or
cmp
and
daa
xor
xor
inc
xor
aaa
mov
xchg
adc
rclb
aas
int3
adc
cmp
sbb
add
xor
mov
mov
insl
pop
lret
inc
sub
or
testl
out
mov
call
adcb
mov
movsb
xchg
outsb
mov
fwait
push
loope
or
jl
hlt
jnp
std
inc
or
dec
or
dec
dec
enter
pop
add
pop
add
rclb
mov
sub
mov
adc
loopne
pusha
loopne
adc
mov
je
ret
adc
sbb
sbb
add
xor
in
cwtl
fmull
xor
add
add
xor
or
adc
adc
or
ret
or
data16
sbb
xorb
jae
shrb
xor
les
fdiv
add
ret
rorb
call
or
pop
or
les
add
je
ljmp
inc
add
inc
mov
dec
sub
lock
push
pop
ror
pop
add
int3
xor
jl
cs
mov
jae
orl
movsb
aas
lods
inc
push
pop
jo
cld
ret
sbb
sub
insl
xor
hlt
setno
or
jnp
nop
inc
dec
enter
push
js
popf
pusha
jle
fcompl
jg
jmp
inc
push
xor
inc
cwtl
iret
and
or
add
jecxz
or
ret
aad
and
add
adcl
mov
add
sbb
gs
pusha
add
outsl
add
push
icebp
jno
xor
jb
cli
jl
ret
enter
dec
add
dec
and
cwtl
pop
sub
nop
adc
mov
or
loopne
xorb
or
mov
push
push
jnp
add
test
jno
int3
sbb
pop
dec
and
sub
lods
add
lds
jno
pop
shrb
jle
insl
cmpsb
inc
inc
add
cmpsl
push
bound
or
adc
mov
add
dec
mov
inc
push
dec
fs
and
or
or
adcb
out
sub
mov
jl
sub
mov
or
push
xor
faddl
mov
sti
dec
cwtl
hlt
pop
clc
lods
sbb
stc
or
lock
push
enter
or
adcb
nop
pushf
xor
in
enter
sbb
add
dec
iret
lock
mov
xor
or
and
inc
ret
pusha
sub
add
mov
popf
add
repz
ficoml
test
andb
add
sidtl
sahf
adc
in
jmp
sbb
mov
iret
push
in
jmp
xor
adc
repnz
call
or
shll
add
loopne
adc
scas
push
or
dec
lret
pusha
inc
jl
adc
ret
dec
dec
leave
loopne
jle
pop
mov
and
rcrb
lods
push
mov
add
repz
add
cli
rolb
dec
adc
and
adcb
sbb
jecxz
or
test
push
ret
mov
int3
mov
std
jbe
add
add
call
mov
jmp
dec
add
loopne
nop
adc
add
xchg
repnz
sarb
mov
loopne
push
leave
iret
or
popf
fcoms
pop
pop
jl
or
mov
shlb
mov
cwtl
call
call
subb
xor
inc
xchg
cmp
add
push
xchg
inc
or
bound
cmp
adc
aam
push
shlb
stos
pop
lock
mov
mov
hlt
orb
and
inc
xchg
inc
or
out
xchg
pop
in
and
xchg
fs
shrb
movsb
loop
clc
movsl
loop
movsb
add
pop
sbb
inc
push
pop
adc
test
sahf
cmp
test
mov
inc
or
shrb
or
add
cmp
add
lahf
add
pusha
push
mov
rolb
xor
ljmp
add
loop
add
jnp
in
xchg
or
add
mov
xchg
mov
js
mov
sbb
jl
adc
inc
mov
pop
pop
ja
add
add
adc
push
cmp
mov
xchg
inc
inc
insb
adcb
mov
int3
or
inc
xor
nop
in
sub
mov
inc
movsb
ljmp
lds
out
arpl
ss
imul
nop
xchg
xor
test
pop
mov
pusha
in
in
lcall
sahf
inc
xchg
imul
mov
aam
mov
loope
mov
and
or
cltd
rcrb
inc
pop
call
nop
andl
or
int
xchg
xor
repz
shlb
icebp
and
jg
je
jg
sub
leave
faddl
mov
push
rcll
push
insb
in
or
pusha
mov
scas
mov
cwtl
icebp
js
lcall
jg
loopne
add
add
or
lods
test
sahf
add
std
or
pushf
pop
movsb
rcrb
cmpl
add
idivb
push
sub
push
xchg
dec
cwtl
addl
jmp
cltd
movb
pop
add
push
and
nop
or
dec
and
hlt
inc
outsb
xchg
lds
and
sti
int
push
adc
sub
mov
int
nop
mov
test
lds
in
int
add
loope
add
xchg
mov
cli
insb
outsb
les
mov
incl
fcompl
adc
mov
fistps
mov
or
pop
jl
xlat
movsl
ss
xchg
adc
xchg
xadd
cli
sti
loopne
hlt
lea
or
in
lods
movsl
repz
mov
rep
mov
mov
dec
in
add
rcrb
imul
cld
mov
sti
add
sub
mov
lahf
or
adc
mov
jl
cmp
sbb
push
into
mov
lock
rcr
cld
dec
jl
fildl
shlb
xchg
outsl
pop
shr
pop
or
nop
sub
xor
scas
push
mov
mov
and
mov
sti
mov
addl
mov
cmpsl
test
pop
rol
cmp
lret
pop
sbb
add
ret
insl
adc
imul
rclb
call
adc
sbb
pusha
sub
ret
cld
jo
in
sarb
adc
hlt
mov
cmp
out
add
add
pop
add
pop
inc
xor
jl
sbb
movsl
or
inc
loop
push
insb
adc
shll
dec
out
inc
es
pop
and
stos
repnz
xor
add
ret
std
mov
cmp
and
ds
insl
addl
adc
xchg
stc
pushf
clc
lret
lahf
sub
ret
adc
pause
xorb
inc
shrb
mov
cld
dec
lods
cld
add
sbb
loope
arpl
jo
cmp
andb
mov
adc
rcrb
cmc
adc
cmp
testb
xor
add
mov
daa
sub
sbb
shll
xchg
sub
fisttpll
out
popa
loopne,pt
or
leave
aad
xor
icebp
test
mov
mov
divb
xchg
cmp
test
xchg
push
shl
add
out
loopne
ljmp
cmpps
xchg
mov
into
test
cld
insl
popa
xchg
add
lock
cmp
call
lock
shrb
pop
dec
rcrl
sub
stos
sub
in
mov
loope
ret
jo
lahf
filds
adc
and
mov
fcmovb
cmp
clc
or
mov
mov
cmp
jl
cltd
xchg
adc
push
je
pop
inc
fistps
jo
leave
mov
rol
jecxz
loopne
fwait
add
add
ljmp
movsl
lcall
loopne
leave
clc
mov
jo
push
or
das
ret
or
fs
daa
inc
sub
ds
sbb
push
dec
gs
hlt
push
sub
pop
adc
loope
fs
out
sbbb
ret
pop
adcb
ljmp
movsl
rcrb
or
mov
mov
fnstcw
shrb
in
or
ret
xchg
test
xchg
add
nop
and
jno
sarb
add
mov
les
push
out
add
pop
sarb
in
ret
cmpb
loopne
clc
in
cwtl
mov
add
jae
xor
add
mov
js
shl
leave
cld
ds
cmp
add
or
clc
sbb
mov
mov
or
push
stos
sti
pusha
sub
or
iret
test
ret
les
test
faddp
dec
inc
inc
ljmp
push
mov
or
xchg
les
or
sub
cld
jl
pushf
adcb
add
les
loop
dec
stc
xor
leave
push
mov
roll
movb
into
xchg
shrb
jns
sub
daa
sti
out
dec
mov
cli
fs
int
mov
mov
incb
daa
call
pop
lds
shlb
mov
xor
push
or
int
in
mov
push
or
iret
push
aad
shl
jecxz
lret
or
ret
sarb
xrelease
xor
push
add
add
and
int
test
out
lock
shrl
push
ret
nop
subb
test
cmp
adcl
flds
icebp
sub
add
mov
mov
xlat
pop
sbb
rcrl
aam
pop
je
test
pop
add
or
int3
icebp
movsl
leave
or
pop
adc
push
dec
mov
rorb
push
dec
cwtl
icebp
jl
add
je
leave
or
rcrb
sarb
shl
or
fnop
stc
sbbb
fisubrs
aas
shl
mov
fcompl
xlat
add
jecxz
in
fs
mov
dec
lock
adc
push
popf
mov
mov
mov
add
push
test
aam
sbb
sti
arpl
rcr
jecxz
in
adc
sarl
inc
inc
add
rolb
xor
or
xchg
loopne
jbe
cmpsl
add
inc
mov
test
inc
les
out
loop
xor
or
xor
addl
add
xor
xchg
mov
lds
mov
les
mov
add
jecxz
dec
shrb
xorb
xor
fcom
add
aam
push
xor
mul
movsb
pop
and
and
xor
mov
add
xchg
adc
test
mov
adc
xor
jg
enter
dec
enter
xlat
xchg
mov
xor
and
rorl
or
fisttpll
lret
inc
aad
pop
xor
repnz
movsl
stc
sub
mov
outsb
fstps
mov
jg
shrl
stos
movsl
or
in
enter
aas
lret
push
enter
cmp
flds
and
dec
fistpl
es
int
pop
push
sbb
adc
fsubrs
add
imul
sub
inc
add
outsl
sub
xor
sub
push
xor
mov
adc
dec
and
add
mov
lret
add
xchg
and
sbb
or
fs
mov
or
push
jmp
or
icebp
repz
and
dec
mov
adc
pop
js
test
xchg
add
adcl
enter
sti
mov
jge
sub
jns
es
push
push
lds
push
sub
daa
add
dec
in
and
push
push
mov
add
mov
dec
roll
data16
fs
loop
add
mov
mov
scas
pop
add
jns
daa
adc
xchg
es
or
pop
mov
loop
xchg
in
mov
test
test
daa
movsb
nop
mov
js
arpl
sub
dec
or
and
xchg
addb
push
pop
jae
sub
sbb
cwtl
xchg
push
lods
bound
or
pop
xor
push
inc
jl
pop
adc
inc
and
addr16
adc
iret
jb
pop
addb
adcb
outsb
xchg
je
pop
loope
mov
jl
mov
or
and
pop
xchg
aad
out
mov
add
add
sub
dec
sub
es
ret
repz
xchg
and
pop
comiss
mov
sbb
and
js
js
jl
push
sbb
sub
pop
sbb
mov
mov
push
and
loope
in
inc
cld
cwtl
into
lods
shl
inc
cwtl
enter
shlb
fstpl
aas
lret
subps
cmp
or
pop
inc
pushf
mov
lock
sub
mov
pop
pop
dec
pop
and
daa
add
scas
ret
and
lods
shll
mov
add
add
mov
pop
daa
testb
dec
add
cmp
je
ret
mov
sar
movb
adc
pop
shl
sbb
lret
loopne
stos
cmp
test
jge
mov
in
popa
cmp
cs
mov
mov
cwtl
add
cs
xor
dec
mov
fldt
push
sub
icebp
int3
lock
xlat
call
cmc
inc
add
dec
sub
lret
adc
scas
lret
aam
and
add
hlt
xor
pop
aas
mov
cmpb
aaa
dec
xchg
jecxz
je
arpl
xor
mov
and
mov
pusha
add
xor
lods
xchg
icebp
push
xorb
div
mov
loope
repnz
arpl
adc
repz
sub
test
and
xor
jp
inc
lret
dec
and
mov
repnz
test
sbb
mov
sbb
sub
cltd
enter
cs
sahf
adc
sub
pushf
xor
mov
cmp
pop
pusha
clc
or
loopne
cmp
mov
sub
xor
sbb
popa
loope
fstpl
sbb
and
or
add
jne
divl
xor
jp
ret
inc
inc
lret
mov
push
enter
xor
pop
loope
pop
inc
cld
imul
push
loopne
movsl
add
and
sbb
outsl
mov
outsb
xchg
imul
cltd
jg
push
js
in
insb
adcb
or
sub
push
das
mov
lea
mov
sbbl
rolb
xchg
sbb
jecxz
sub
insb
ret
xor
aad
int3
dec
rcll
pusha
or
sar
sub
push
hlt
lahf
cmpl
cld
cmpsb
test
cltd
shll
and
jae
lock
dec
clc
mov
sti
mov
idivb
push
or
pusha
test
cmp
mov
test
stos
mov
cmc
xor
hlt
push
xchg
inc
mov
mov
add
xchg
or
popf
push
dec
test
xchg
or
mov
xchg
cltd
dec
int3
or
les
icebp
dec
cld
pop
ljmp
das
sarb
jnp
cmp
dec
ja
roll
repz
dec
ret
dec
jl
add
cwtl
loop
sbb
cmp
add
loopne
mov
icebp
idivb
aas
mov
aaa
mov
or
mov
pop
nop
rcll
xchg
or
mov
xchg
popf
sbb
les
cwtl
or
in
pop
adc
ret
bound
cmpsb
add
pop
lret
pop
lock
out
xor
xchg
add
lahf
mov
mov
test
out
mov
enter
and
loopne
and
nop
xchg
xchg
mov
xor
pop
or
jmp
jo
or
aam
and
das
js
stc
jnp
in
adcb
orl
in
loop
push
sbbb
pusha
in
jp
call
mov
pop
jo
inc
das
fcomps
lock
rorb
inc
in
jmp
mov
pusha
inc
pusha
cld
push
aas
les
fcoms
clc
pop
add
xchg
pop
adc
stc
add
add
idiv
pop
mov
add
lea
test
cld
stc
adc
ficoml
mov
add
in
in
xlat
sarl
es
hlt
adc
sbb
inc
sti
hlt
adc
lods
stos
mov
add
mov
and
push
mov
mov
mov
andb
clc
mov
out
aad
cmp
lret
cltd
dec
xorb
enter
aam
iret
jb
clc
mov
mov
jg
push
adc
add
cmp
xlat
cmpsl
sbb
in
pop
inc
or
xchg
push
pop
js
mov
icebp
nop
repz
addb
sbb
sti
xorl
fs
dec
sarb
dec
lret
out
jo
mov
mov
jecxz
enter
iret
loope
aam
jl
nop
xor
test
int
repnz
add
lahf
mov
shrb
out
mov
out
mov
addb
aad
pop
aam
ljmp
adc
mov
xlat
mov
clc
pop
lds
sbb
out
or
in
jg
sar
dec
call
lds
daa
mov
jmp
ficoml
hlt
lahf
cld
inc
cmpb
movsb
or
mov
pop
push
lods
adc
pusha
xlat
mov
xor
int3
mov
icebp
adc
cld
incl
gs
mov
nop
adc
stos
lahf
sub
xchg
xorb
bnd
lock
hlt
push
push
xorb
arpl
xchg
sbb
sbb
lock
fistpll
adcb
and
add
les
stos
adcb
adcb
fisubs
or
mul
mov
add
test
and
jl
mov
xchg
mov
shlb
add
cld
andb
xchg
inc
add
mov
fcom
and
mov
addb
bound
aaa
lret
cmp
push
mov
scas
pop
clc
js
or
inc
fadd
mov
mov
cmp
or
out
testb
sub
pop
xorb
or
fisttpll
ss
orb
inc
push
out
cmp
push
inc
inc
jl
adc
hlt
mov
xchg
bound
fdiv
add
clc
std
jo
nop
out
lock
hlt
pop
or
jecxz
sub
test
addb
cli
add
or
push
cmp
sbb
addb
xchg
pushf
adcb
movsb
or
jb
call
or
vdivps
aam
adc
mov
test
fcmovnu
in
andb
int3
mov
adc
push
rolb
call
mov
or
jecxz
and
mov
or
clc
push
mov
add
pop
pop
cmp
hlt
dec
or
loop
test
or
into
cwtl
int3
xchg
pop
cmp
or
adc
jbe
add
jo
movl
ret
sub
stos
les
inc
into
lret
xor
mov
mov
add
test
mov
and
mov
out
and
mov
aas
adc
jl
icebp
rcrl
fdivrl
fcomps
sbb
aam
adc
in
and
fwait
add
mov
mov
sbb
mov
mov
daa
mov
test
cmp
sub
inc
test
leave
mov
lcall
cmp
add
mov
clc
mov
add
aam
adc
jo
lds
pop
stos
loopne
mov
mov
mov
test
cltd
and
outsb
test
out
cmp
push
jg
jl
frstor
and
fs
icebp
xchg
ror
cmp
aad
sti
push
movsb
in
test
or
pop
lea
and
loop
mov
cld
mov
gs
jl
lahf
out
pop
loop
in
xchg
cmp
out
mov
inc
pusha
pop
and
mov
daa
adc
es
jbe
call
pushf
test
add
dec
dec
push
add
call
xchg
loope
adc
daa
or
sbb
adc
mov
mov
xchg
mov
and
jmp
or
pusha
rcrb
loope
jmp
cmpsb
inc
sub
push
mov
or
mov
add
pop
inc
cmp
and
push
sub
add
icebp
mov
test
movl
dec
push
push
lds
call
sub
mov
mov
cmp
xlat
outsb
cmpb
and
ljmp
loop
decl
mov
or
inc
and
mov
ret
ret
or
and
scas
adc
pop
stc
jg
push
andl
cld
das
mov
adcb
and
or
ret
call
jg
enter
loopne
mov
clc
je
mov
push
adc
xchg
jne
push
xor
movsb
pop
add
sbb
cwtl
sbb
and
mov
daa
sar
adc
popl
stos
sbb
mov
pop
mov
jbe
push
mov
inc
dec
repz
or
arpl
or
js
je
xchg
push
pusha
lock
cmpb
push
inc
cld
xor
lock
int3
cld
je
loopne
mov
ret
add
jmp
rol
mov
pop
fstps
test
les
test
nop
decl
mov
test
mov
fcoms
icebp
mov
decl
fdivrl
scas
lock
or
les
decl
mov
movsb
test
das
xchg
cld
and
mov
nop
cli
lods
nop
add
fmulp
mov
enter
in
mov
insb
push
inc
adc
sbbl
mov
mov
call
cld
mov
and
adc
faddl
fdivr
pop
jo
psubq
xchg
stos
push
insb
add
out
cltd
mov
stos
out
or
jl
das
pusha
and
fistps
mov
test
xor
cwtl
xchg
sub
test
inc
mov
lock
sbb
cmp
movsb
jl
push
xor
cwtl
xchg
jg
movsb
add
xchg
jp
cmp
ret
dec
and
leave
push
fcos
clc
mov
pop
ds
clc
inc
rorb
pop
in
sub
pop
xchg
sub
add
testb
cli
add
lahf
in
jno
or
xor
out
lds
cli
in
sbb
add
and
lret
push
in
mov
add
jae
test
movsb
push
and
nop
sub
and
sub
sbb
mov
cmpsb
or
dec
addr16
jg
sti
and
mov
scas
jle
push
lods
jne
out
ds
xchg
jmp
fstl
add
or
imul
addb
les
inc
sub
rolb
scas
sub
jne
add
js
jnp
mov
sub
int3
cmpsb
cmp
and
mov
cli
mov
icebp
iret
das
and
movsl
jne
out
adc
bnd
addr16
inc
dec
push
clc
cld
push
cld
dec
iret
adc
push
iret
push
iret
dec
int3
inc
or
push
stc
pop
xchg
gs
mov
dec
mov
jg
jg
jg
jg
inc
enter
inc
add
and
ja
repnz
adc
adc
iret
or
mov
insb
std
fwait
xor
or
add
ja
daa
ljmp
jle
imulb
daa
adc
jbe
cmpl
ljmp
aam
push
pop
and
repz
inc
or
data16
dec
add
push
fldcw
push
sub
inc
cs
sub
pop
cmpsb
icebp
push
and
add
xor
xorl
push
inc
sub
aas
sub
fs
mov
cmpsb
cwtl
outsb
push
mov
dec
dec
dec
inc
sub
addl
cmp
jae
cmp
pop
test
xchg
push
outsl
adc
push
xor
mov
xchg
dec
cmp
jge
aas
imul
cltd
cmp
xchg
and
es
mov
sub
rorb
pop
or
mov
fmull
pop
ss
adc
dec
pop
sbb
pop
add
out
push
push
push
je
mov
cld
aas
push
mov
mov
lret
jne
jg
push
inc
idivb
sub
dec
inc
adc
xor
adc
cmc
sub
nop
jbe
mov
into
xor
push
popa
and
add
lcall
mov
dec
mov
inc
mov
xchg
in
inc
cs
sub
lock
icebp
adc
cs
and
lahf
mov
mov
repnz
repz
lret
adc
add
pop
daa
enter
mov
xchg
push
inc
aas
mov
lcall
lret
es
pusha
test
inc
enter
ret
cwtl
add
add
lret
push
jl
pop
xlat
into
les
rcl
enter
cli
lock
arpl
sub
stc
pop
inc
lret
rcrb
xor
fsubrl
int3
adc
frstor
fucomip
fisttps
pop
shll
cmp
shrb
jno
into
or
xor
rorb
inc
adc
jecxz
xor
cmp
sub
roll
or
subl
cs
jno
mov
mov
incb
adc
call
xor
ss
xor
xor
lcall
sub
and
leave
das
mov
xor
daa
sarb
jg
daa
scas
jmp
pop
and
and
dec
sub
inc
and
mov
adc
and
dec
das
xchg
sub
add
xor
mov
cvttps2pi
push
movsb
je
sbb
xor
dec
test
lods
nop
je
orb
movsl
cwtl
je
movsb
xchg
jno
mov
sub
inc
sub
cmp
clc
dec
fbld
pop
pop
xchg
inc
cwtl
lret
iret
nop
movsb
std
cmp
add
std
jbe
and
enter
xchg
test
xadd
lock
pop
jbe
xlat
push
ja
aam
arpl
and
jo
shl
jno
inc
rorl
fsubl
or
and
jo
and
out
and
test
add
sub
out
mov
pusha
bound
sub
add
sub
push
and
mov
xor
add
xor
pusha
jne
cmp
movsb
mov
xor
add
mov
pusha
bound
sub
dec
pusha
xor
add
cmp
add
cmp
pusha
sub
call
aas
es
adc
pusha
lds
cmp
cmpsl
add
pusha
jmp
cmp
loop
jae
pop
daa
pop
mov
test
out
dec
cmp
lret
sub
int
fs
mov
int3
mov
adc
or
mov
or
xorl
cmpb
fs
sbb
mov
in
inc
je
cmpsl
add
inc
and
or
lret
pusha
and
add
sub
sub
dec
add
and
out
lret
bound
xor
pusha
sub
add
sub
add
sub
pusha
sub
dec
add
sub
or
sub
add
adc
pusha
lret
aaa
insb
jl
aaa
pusha
sub
es
pusha
xor
int3
ja
xor
pusha
mov
das
xor
jmp
xchg
test
adc
je
jb
fsubs
flds
filds
shrb
add
lret
and
js
clc
ret
rorb
shll
cwtl
mov
dec
add
pop
jb
pusha
sub
stc
or
sub
push
sub
mov
add
and
cs
nop
pusha
lret
ja
pusha
gs
pusha
and
and
stc
or
shlb
and
ja
pusha
gs
in
pusha
daa
popf
add
sbb
dec
add
or
mov
loopne
dec
aas
mov
repnz
enter
sarl
call
popf
in
inc
and
add
pop
movsb
aam
add
nop
pusha
xchg
fsubrs
lods
or
nop
pusha
rorl
cmp
cli
nop
pusha
ror
js
or
nop
pusha
ds
mov
pusha
jecxz
ljmp
xor
inc
pusha
dec
js,pt
xor
repz
inc
pusha
dec
cmp
loopne
cmp
daa
or
daa
mov
sub
call
outsb
rclb
cltd
xchg
lods
int3
std
add
jecxz
jmp
shrl
repnz
dec
andl
push
jno
mov
pop
andl
adc
pop
dec
pslld
xor
mov
add
sbb
xchg
stos
mov
sbb
add
dec
push
jb
mov
pop
shlb
dec
and
add
test
pop
stc
rcrl
es
mov
pop
dec
and
xor
movsl
cmpb
dec
xor
inc
jg
loopne
jbe
add
push
mov
add
and
leave
xor
sbb
les
test
pop
jnp
dec
nop
push
lods
xor
test
pop
in
adc
xor
jecxz
adc
and
push
xchg
loopne
jb
mov
arpl
jmp
mov
aaa
shrb
cld
jns
cmp
and
bswap
aaa
loopne
and
iret
xchg
inc
push
push
cmovns
ljmp
push
movsb
frstor
shlb
push
cmc
sub
imul
adc
lods
cmp
adc
enter
or
mov
loopne
sub
loopne
pop
jnp
sbb
sub
icebp
or
xchg
lods
mov
sub
push
psubd
arpl
jo
sub
xor
add
or
jecxz
movsb
jnp
xchg
mov
aam
pop
call
push
in
aam
and
out
dec
pop
lods
or
jmp
sub
dec
mov
mov
sub
sub
or
movsb
sub
push
sub
xor
nop
shlb
mov
xchg
mov
pop
dec
test
in
std
or
movsb
sub
cmp
call
add
and
movsb
jecxz
incb
xor
imul
push
decb
push
hlt
push
mov
pop
add
or
and
lods
jle
je
dec
jbe
jge
mov
add
inc
sub
push
shrl
jno
mov
pop
mov
js
and
movsb
xchg
ds
or
jp
mov
aas
pop
push
inc
imul
cmpb
jle
push
inc
sub
push
push
cmp
stos
imul
imul
jp
div
sbb
xchg
push
lcall
cmc
inc
std
mov
gs
sbb
inc
push
pop
jl
jb
pop
addl
cli
ljmp
add
jnp
jae
or
inc
pop
test
movsb
or
inc
and
add
inc
pop
xor
or
dec
mov
push
jl
test
and
xchg
jbe
cmp
push
mov
push
adc
stc
pop
test
push
sti
adc
addb
xor
cmp
adc
test
push
inc
shlb
dec
in
mov
sub
es
sub
mov
mov
scas
movsl
loop
popl
jne
xchg
xlat
cmp
lock
faddp
push
aas
mov
call
pop
mov
out
lock
xchg
test
pop
adc
xchg
adc
lahf
push
sbb
adc
jl
push
imul
clc
fs
xor
insl
adc
outsl
mov
or
push
test
and
add
js
sub
aas
push
rolb
add
pop
stc
jge
fsubrl
cli
repz
aad
clc
pop
or
test
add
and
dec
mov
jle
pop
repnz
dec
leave
jp
test
int
leave
jge
or
orb
call
lds
dec
ljmp
ja
pop
or
sub
in
hlt
int
or
push
inc
dec
dec
push
and
and
sub
addr16
add
mov
push
add
cmpsb
in
fidivrl
cli
enter
and
das
cmp
inc
xor
call
in
jb
cmp
xor
adc
pop
and
push
jl
pop
movsb
leave
xor
and
jbe
scas
mov
push
ljmp
mov
mov
mov
enter
jae
pushf
out
rcll
test
add
daa
int3
adc
scas
cmc
repnz
lods
jno
sub
ja
mov
jbe
inc
mov
or
andl
xchg
mov
mov
pop
scas
lret
orb
pop
add
push
cld
cmovs
popl
mov
or
cmc
mov
popa
insb
dec
sub
cltd
das
ja
mov
sahf
popa
sub
pop
cmp
push
xor
mov
jecxz
jo
arpl
jecxz
loop
insl
mov
imulb
inc
scas
jecxz
pop
push
add
bound
mov
add
pop
repnz
shlb
je
xchg
add
add
jb
push
das
popf
bound
test
scas
adcl
sbb
push
imulb
sub
inc
test
mov
jge
into
add
fcomps
je
insb
and
or
jns
inc
mov
lcall
shl
cmp
mov
stos
in
or
daa
test
sub
inc
jne
inc
hlt
xor
push
push
popf
inc
mov
imul
dec
jne
xchg
jle
and
int3
mulb
pushf
enter
data16
adc
scas
divl
adc
adc
jecxz
sub
xor
sbb
sbb
fucomi
mov
lock
dec
mov
cltd
mov
fwait
mov
je,pn
mov
popa
je
jne
and
mov
dec
adc
jmp
testb
test
jb
cmp
mov
fcomp
xor
popf
xchg
and
repnz
cs
in
mov
insl
jae
jbe
xchg
inc
inc
pop
or
xchg
lahf
mov
enter
mov
pusha
fiaddl
fdivs
add
inc
pop
lcall
out
pop
sub
inc
hlt
xor
inc
and
cs
dec
push
aaa
into
adc
dec
push
mov
xor
popf
sub
sbb
mov
dec
adc
jo
scas
out
shll
push
inc
das
orb
add
jge
add
and
add
stc
adc
mov
inc
cmp
push
mov
sub
mov
xchg
cmp
aas
push
cltd
push
popf
xchg
jbe
movsl
ja
mov
dec
out
cltd
popf
inc
clc
mov
mov
jne
cmp
inc
les
cmp
and
es
push
xchg
adc
aaa
cmp
xor
gs
jp
fmul
mov
jmp
mov
sbb
xor
and
xor
int
adc
xor
adc
push
and
inc
gs
ss
pop
pop
and
adcb
pushf
push
and
rcll
jne
repz
jp
jmp
das
cmp
and
push
out
push
xor
test
lods
test
and
in
mov
dec
sub
ret
mov
nop
mov
mov
fildll
dec
je
insb
or
aad
rcll
fcomps
or
dec
sub
stos
mov
pop
stos
bound
add
push
sub
push
and
lods
lock
inc
lret
mov
mov
mov
sub
xor
adc
sti
cmpl
stos
pop
int
or
ljmp
push
dec
inc
and
add
cmp
es
xor
xchg
mov
dec
xor
pushf
sub
adc
loopne
xchg
test
or
mov
cmp
xchg
adc
dec
add
sbb
pop
dec
push
adc
mov
lea
insl
shr
push
lret
je
js
or
rsqrtps
cltd
mov
pop
adc
xor
xchg
jbe
cmp
imul
dec
test
movsl
cltd
inc
pop
adc
sub
imul
mov
out
mov
sbb
fs
in
sub
inc
push
and
jne
mov
stos
push
and
dec
outsb
fdivp
inc
dec
adc
or
pop
mov
je
addr16
push
or
jmp
cltd
dec
add
lods
pop
in
cs
inc
add
jecxz
xor
jp
push
in
lods
das
dec
outsl
mov
into
daa
nop
sub
inc
mov
mov
jb
adc
frstor
ss
sub
jge
sbb
ja
push
dec
xor
pusha
cmp
and
pop
and
outsb
ficoml
inc
inc
int3
cmp
in
mov
les
test
ja
adc
sub
or
leave
int
push
inc
ror
xchg
notl
or
jmp
sbb
sub
adc
add
je
loope
push
cmp
sub
scas
xchg
sahf
jns
cmc
nop/reserved
sub
mov
cmp
stc
fisubrs
daa
scas
mov
orb
and
sub
outsl
cmpsb
in
sbb
mov
out
xchg
xchg
pop
jmp
mov
pop
cmp
dec
mov
xor
scas
inc
jns
push
aad
xchg
or
mov
or
daa
and
gs
mov
jne
push
repnz
fstpt
push
out
fs
adc
jno
iret
xchg
mov
in
arpl
adc
pop
mov
es
sub
aas
pop
incl
lods
adc
test
rcl
xor
lods
mov
mov
jecxz
sbb
lea
ds
loop
jne
add
jns
fidivrl
test
in
lcall
inc
xchg
das
fbstp
inc
fwait
or
ja
jo
bound
roll
push
cmp
and
into
xor
xor
sub
es
lea
fildll
nop
and
inc
sub
mov
dec
dec
push
jno
loope
jnp
or
cmp
jmp
js
or
test
loop
jl
xor
jl
sbb
test
and
cmpsl
add
pusha
adc
sbb
dec
mov
cmpl
push
add
ficompl
jp
mov
out
and
jno
imul
lods
cmpb
jge
or
or
push
cli
stos
fisttps
mov
cmp
cmp
push
add
and
sub
pop
and
and
pop
or
leave
xor
repnz
push
scas
push
sub
nop
lds
dec
jnp
add
push
imulb
mov
fists
out
and
mov
sbb
pop
sbb
fists
mov
rcrl
jnp
mov
xor
and
xor
xor
std
and
add
mov
int3
xchg
stos
push
and
test
daa
nop
xchg
mov
inc
scas
xor
fisttps
enter
mov
inc
inc
scas
pop
ret
mov
test
or
and
and
or
or
inc
fists
mov
sub
mov
pop
in
cmp
xor
ficomps
bound
nop
mov
lods
js
imulb
push
cmpb
dec
add
and
scas
cmp
leave
sub
loope
into
ret
dec
and
or
push
and
test
pop
jns
sbb
inc
es
jne
into
xor
jmp
ret
imul
add
dec
std
sbb
add
pusha
xor
sub
dec
lret
add
push
pop
mov
lods
cwtl
cltd
pop
aaa
loopne
in
jns
dec
xchg
pop
push
adc
and
jns
scas
jecxz
rorl
loop
fildll
cmp
lods
mov
sub
std
cmpsb
nop
inc
test
xchg
mov
xchg
sbbl
mov
fs
imul
cmp
push
mov
and
imul
sub
inc
jl
xchg
shrb
dec
test
push
je
xchg
out
adc
int
add
popa
mov
scas
sti
pop
fwait
or
jae
int3
push
push
fwait
cmp
cmc
lea
jae
xchg
stos
dec
subl
inc
popa
adc
test
decl
push
cmp
jge
aaa
cs
test
mov
mov
arpl
and
icebp
dec
shll
push
sbb
mov
or
push
loop
add
fs
cmc
pop
fs
jb
adc
pop
int3
push
ljmp
sub
inc
stos
into
inc
enter
push
arpl
dec
insb
lea
push
ja
mov
dec
and
iret
loopne
pop
mov
call
mov
push
jno
hlt
cs
cmp
and
push
mov
and
dec
dec
aaa
jb
inc
mov
je
xor
fiaddl
repz
and
xor
cltd
fisttpll
insb
jne
sbb
fxch
add
pop
adcl
mov
sbb
stos
repnz
loop
in
mov
mov
inc
addl
add
xor
push
sbb
jns
push
cltd
sub
cmp
inc
or
daa
ds
scas
stc
lds
add
adc
sub
roll
push
add
mov
stc
lock
sbb
rol
cli
cmp
pop
or
iret
jl
lret
vmovhps
stos
pop
dec
std
sub
jle
sti
add
and
mov
push
test
icebp
fdivs
push
push
daa
and
or
popf
fucomi
cmp
inc
cmp
push
jbe
ret
nop
in
imul
or
lcall
shl
cli
cmp
sub
and
and
cmc
fxch
dec
in
jmp
sahf
mov
add
xchg
jne
mov
push
xchg
inc
jb
inc
sub
pop
dec
es
or
mov
xchg
push
aad
sbb
pop
push
jle
xchg
xchg
rorl
sub
jae
jo
in
cs
push
aam
scas
sub
cmp
je
loop
ja
push
cli
mov
fstl
or
inc
fldcw
and
imul
add
sbb
or
and
into
outsb
inc
jae
adcb
fnstenv
jbe
mov
xor
das
dec
cmp
inc
mov
mov
ret
inc
mov
leave
push
dec
push
dec
sbb
pop
aas
pop
insl
mov
mov
fldt
jmp
cs
cmpsb
pop
imul
enter
sbb
out
mov
ds
jo
xchg
dec
sbb
add
cmc
mov
jbe
sbb
inc
jecxz
movsl
pop
inc
sub
pop
mov
ficomps
into
adc
jbe
mov
scas
data16
xchg
add
adc
mov
test
lods
rclb
ds
adc
jno
mov
and
jne
sbb
lcall
add
aam
and
mov
decl
xorb
sub
imul
out
adc
imul
jo
add
lcall
jmp
test
outsb
pop
mov
push
or
nop
sub
mov
and
hlt
xchg
inc
sbb
dec
movsb
pop
std
or
or
adc
inc
andl
in
fcmovb
movsl
sbb
test
xchg
mov
push
lods
popf
jle
sbb
push
decl
aaa
cmp
stc
jne
jle
xor
and
dec
jmp
pop
leave
imul
jne
or
mov
daa
mov
pusha
and
xchg
add
lcall
sbb
cwtl
dec
lcall
sub
or
bound
push
cmp
fwait
sub
ret
nop
inc
std
mov
sbb
xor
dec
push
cmp
dec
int3
sbb
das
in
in
inc
mov
mov
icebp
std
xor
test
hlt
xor
xchg
xchg
inc
adc
aaa
xchg
das
or
jmp
fmull
jne
daa
jno
jge
or
mov
cld
xchg
pop
ret
popf
mov
jecxz
in
in
jecxz
cmpsl
xor
mov
popf
jns
daa
loopne
xor
adc
je
mov
lods
fnstenv
mov
dec
or
mov
add
daa
push
fmulp
add
mov
mov
adc
je
mov
add
in
sbb
fldcw
jno
lock
xor
mov
jge
jns
push
ja
push
and
inc
rcrb
inc
loope
xlat
shr
cmp
sbb
fsubr
push
ss
push
in
das
add
inc
divb
mov
test
jbe
fldcw
sbb
jae
push
or
jb
add
pop
mov
arpl
sub
loopne
adc
xchg
insb
je
mov
ret
add
jns
xor
insb
data16
jne
sbbb
imul
je
pop
jno
cltd
mov
inc
inc
jae
les
xor
inc
dec
sbb
push
add
push
sub
jbe
adc
push
and
dec
icebp
rol
cld
arpl
mov
xchg
inc
test
xor
lock
dec
lods
das
test
enter
mov
push
std
scas
add
insb
rorl
and
aam
push
aam
ds
pop
push
addr16
push
xor
or
pop
rorb
sbb
into
ret
scas
sub
inc
lods
imul
and
inc
push
out
push
fwait
mov
or
mov
mov
sbb
and
fstpl
xchg
shr
cmp
std
and
jno
jg
inc
and
dec
jnp
inc
sub
cmp
add
and
das
scas
xor
xchg
negl
mov
sub
or
enter
sub
nop
addr16
aas
and
dec
mov
mov
popa
je
jg
jb
pop
and
cmpsl
mov
mov
test
into
repnz
jnp
nop
dec
aad
adc
call
adc
and
dec
or
aaa
jmp
movups
aas
inc
fldl2t
cmpsb
and
imul
dec
cmpsl
mov
mov
call
fsts
push
dec
push
and
or
or
sub
dec
xchg
sub
adc
push
cmp
sbb
popa
rcr
lcall
rorb
mov
and
ja
outsb
add
adc
add
sub
cmpsl
ja
roll
xor
enter
and
cmp
gs
sbb
adc
push
stc
xor
scas
shlb
xor
ja
enter
daa
jbe
imul
leave
adc
mov
fnsave
and
insl
push
inc
mov
rclb
push
and
push
inc
movsl
int3
cwtl
nop
inc
inc
daa
mov
and
push
mov
mov
and
or
test
addr16
pop
adc
and
pushf
stc
into
sub
mov
fsubl
fbstp
shlb
lcall
lods
adcl
mov
push
jge
or
mov
dec
jg
add
les
jns
daa
dec
dec
imul
mov
or
inc
or
movsl
sub
inc
mov
sbb
rcll
mov
movsb
sub
fildl
push
jmp
or
xchg
xor
mov
jecxz
lret
mov
adc
mov
dec
repnz
pop
pop
jmp
jmp
bound
sub
fstps
and
dec
add
mov
das
popf
and
adcb
sbbb
test
std
inc
ds
jp
sub
and
adc
aam
lahf
and
jecxz
sub
lea
push
pop
lds
add
lods
int
nop
or
xchg
pushf
and
push
mov
add
push
xor
adc
push
sub
cmp
jmp
cmp
xchg
and
sub
and
pop
push
inc
dec
mov
dec
negl
inc
inc
lds
and
sub
adc
lret
pop
fdivl
jp
adc
mov
shl
scas
leave
stos
and
lods
movsb
adc
and
je
and
inc
sbb
pop
movsb
lret
aaa
mov
insl
push
nop
popa
enter
or
mov
jo
popf
and
adc
in
scas
pop
bound
mov
lods
mov
pop
sub
cs
lock
iret
jg
dec
xor
pop
je
je
sub
mov
lcall
pusha
cwtl
and
mov
jne
jae
adc
test
and
sbb
loopne
mov
nop
out
stos
and
fyl2xp1
or
fistpl
sbb
pop
jp
xor
mov
loop
lds
cli
and
das
cmp
mul
and
cmp
shlb
loopne
push
ret
xchg
jg
xchg
enter
ja
popa
pusha
test
rcrl
imul
pop
inc
mov
jns
shrl
js
fisubl
lret
cmp
sub
and
rcrl
cwtl
in
xor
pop
popf
out
shrb
mov
or
out
cmc
push
and
and
test
test
sbb
pushf
mov
je
fnstenv
adc
and
test
pop
lcall
jb
lods
dec
or
int
aaa
sbb
sub
out
and
cmp
popa
and
aam
addb
jbe
mov
test
xor
pusha
cmp
test
rolb
xor
sub
rcrl
daa
cmpsb
sbb
adc
or
lods
les
scas
scas
mov
mov
mov
cmp
sbb
and
push
dec
out
lods
subl
mov
pop
adc
sbb
jg
xor
xchg
or
mov
push
ss
mov
sbb
mov
pop
notb
and
decb
sbb
or
push
aaa
inc
or
push
jge
in
sbb
mov
and
mov
lods
jbe
ds
push
and
mov
aad
mov
cmp
loopne
aam
test
inc
jecxz
insl
sub
cmp
mov
mov
and
push
scas
mov
jl
adc
or
lahf
imul
rcrl
sub
add
rcrb
sub
mov
and
enter
cmp
sbb
mov
push
data16
or
pop
loop
movntq
sarl
adc
out
add
sbb
sbb
roll
jbe
pop
or
fmull
fildll
lahf
push
jle
es
fidivl
and
leave
add
lret
rcrb
pop
mov
or
and
push
sub
lods
adc
cmp
push
shr
jnp
bound
cmp
sub
test
sbb
mov
jle
push
lods
sub
lret
xchg
sub
or
insl
sub
sbb
push
shll
mov
dec
nop
sub
cmpsb
int
je
inc
adc
loope
sub
sbb
cmp
or
in
mov
das
mov
cmpsb
or
pop
fsts
push
dec
jecxz
adc
mov
dec
jns
or
adc
jbe
jb
add
xor
push
hlt
hlt
imul
mov
test
or
insb
js
lds
orb
outsb
push
loop
inc
cmpsb
push
and
pop
cmp
lcall
daa
jbe
cmp
stos
xor
lret
lahf
es
mov
mov
hlt
out
rol
fistl
inc
cltd
lods
cmp
stos
daa
loop
dec
push
mov
andb
xchg
xor
pop
inc
pushf
jb
add
push
fwait
push
popa
iret
jno
imul
int
bound
imul
jno
and
je
and
addr16
push
or
int
sub
and
hlt
jle
and
mov
sub
jge
mov
cmp
push
int
xchg
pop
pop
add
mov
shll
mov
pop
adc
pop
mov
fs
sbb
dec
into
fs
xchg
or
jecxz
adc
and
addr16
gs
test
loopne
out
xor
fsubl
pop
inc
sub
pop
fists
sub
hlt
fs
out
push
fiadds
jbe
mov
ss
cltd
dec
insb
addl
imul
in
stos
or
popa
pop
mov
dec
fistpl
jne
jmp
add
std
hlt
fisubs
xor
jb
int
fists
cs
lret
mov
daa
sub
enter
and
adc
mov
lods
mov
adc
int
xchg
jae
xor
pop
mov
adc
jp
push
mov
adc
fldt
dec
js
mov
xchg
add
mov
test
daa
in
in
bound
lods
test
mov
into
or
gs
je
pusha
or
mov
fs
xchg
cs
mov
sbb
ret
jnp
push
pop
mov
add
cmp
or
and
pop
mov
inc
rcrl
je
sub
imul
or
mov
and
stc
jl
scas
or
mov
and
and
and
sub
dec
out
xorl
test
and
xchg
bound
fistps
sqrtps
fildl
das
inc
and
cmpsb
xchg
fisttpl
xor
imul
repnz
insl
aas
aaa
xor
das
pop
sub
sbb
sbb
lahf
sub
add
aas
fs
and
cmpsl
stos
daa
dec
fbstp
mov
ret
dec
xchg
js
paddb
loop
jg
leave
jo
enter
ss
popf
adc
push
push
shr
jnp
and
loop
arpl
xchg
sub
mov
nop
jno
shl
lret
icebp
fdiv
add
out
add
loopne
test
dec
je
inc
loopne
ret
sti
xor
dec
push
push
push
push
mov
jo
notl
mov
imul
es
insb
or
daa
pop
and
dec
or
lods
sub
shll
insb
subb
adc
je
jae
xor
sub
fsub
lret
dec
lea
into
xchg
inc
data16
mov
stos
sbb
sub
gs
cmp
mov
push
and
in
and
or
mov
nop
mov
mov
mov
mov
inc
pop
and
mov
dec
outsb
inc
fwait
jge
subl
lods
xchg
call
xor
in
push
loope
xor
sub
mov
sub
stos
in
pop
inc
cmp
add
mov
adc
sub
or
mov
test
ds
xor
in
pusha
leave
or
jne
mov
add
stc
pusha
mov
pusha
adc
jo
call
movsb
fimull
ret
and
xchg
cmp
and
dec
add
jo
cltd
pop
cmp
pop
das
sbb
mov
pop
iret
pop
sbb
fs
adc
mov
and
and
push
mov
and
sbb
mov
or
jae
adc
in
je
aad
shl
and
lret
inc
dec
mov
pop
outsl
and
cwtl
stos
dec
fimuls
dec
testb
xorb
or
mov
pop
inc
stc
clc
sbb
and
adc
js
ja
cwtl
test
mov
inc
test
fwait
movsl
rolb
pop
stos
push
cwtl
add
adc
mov
inc
jne
movsb
pop
daa
pop
push
rclb
jo
or
ja
add
mov
add
seto
enter
push
mov
cmp
fcoms
insl
enter
mov
lock
movsb
push
in
adc
cmp
int3
ja
or
call
in
es
push
lret
push
imul
in
push
cli
add
scas
fisubrs
sub
dec
leave
shrl
add
mov
xchg
mov
insl
lea
das
dec
je
int3
es
test
or
enter
mov
jae
or
add
int3
xchg
push
test
push
lret
lcall
lock
in
and
aam
test
add
and
sbb
dec
inc
and
nop
cmp
jne,pn
add
xchg
daa
fnstenv
cwtl
ja
bound
push
daa
es
in
stos
mov
adc
adc
mov
and
sbb
cmc
sub
dec
out
fsubl
jle
jge
cltd
rep
or
es
or
cmp
cmp
int3
in
movsb
dec
xor
test
jae
gs
daa
xor
int
negb
dec
jo
xor
outsl
xor
dec
or
lods
mov
popf
stos
or
mov
call
int3
jmp
lock
push
or
xchg
push
or
sub
mov
pusha
aad
sbb
fsubl
sbb
sub
sbb
push
movl
inc
mov
mov
pop
fdivs
add
dec
test
or
in
and
test
adc
inc
lods
cltd
imul
sbb
push
mov
out
lods
adc
sub
sbb
adc
les
sub
or
and
push
cmp
lods
pop
push
sbb
das
loopne
pop
and
sub
repnz
inc
dec
mov
mov
outsl
mov
daa
mov
sbb
push
push
test
jo
std
mov
aaa
mov
cmpsb
add
and
mov
lock
pop
fisttps
xor
jb
sub
rcrl
popa
and
jne
and
lds
rcl
int3
push
sub
in
imul
jbe
lods
dec
loope
fstl
pop
lret
mov
fs
pop
push
in
js
and
rolb
sbb
sbb
sbb
and
and
out
lods
fisubrs
rclb
je
mov
cld
or
and
mov
adc
ret
and
into
and
push
inc
push
dec
xor
into
and
xor
bound
and
int
xchg
jmp
or
lea
fcoml
movsl
imul
je
int3
in
push
imul
ds
iret
inc
imul
icebp
cmp
adcl
mov
and
xor
lods
or
frstor
sub
rcr
movsb
fsubrs
sub
cmpsl
push
xor
or
push
mov
xor
jo
push
sub
leave
mov
mov
in
push
or
cwtl
inc
mov
xchg
inc
int
add
bound
xchg
or
int3
lods
or
or
dec
sub
mov
xchg
xchg
popa
add
mov
out
push
inc
jnp
xor
ret
xchg
xlat
ret
xlat
nop
xchg
es
sub
pushf
pop
mov
fnstenv
fcoms
movsb
fisttpl
js
pop
cmp
xchg
xor
push
jecxz
adc
in
insl
cmc
out
pop
and
insl
add
push
fistpll
in
gs
jle
inc
mov
loop
xlat
mov
sub
mov
imul
mov
sbb
and
dec
inc
dec
jbe
int3
imul
fsubrs
pop
out
xorl
xor
ret
es
in
and
adc
mov
and
adc
ret
xor
xor
mov
push
xchg
ljmp
pop
insb
push
in
push
xor
inc
lds
jb
push
xorb
rcll
sub
clc
and
xor
and
lods
repz
dec
clc
and
daa
cmpsl
and
call
add
loop
out
aas
mov
dec
jle
jp
into
xchg
and
xchg
or
test
inc
rcl
cmpsb
ret
and
sbb
hlt
int3
add
mov
test
sub
rcrl
mov
xchg
lods
mov
pop
lods
and
ja
lods
mov
xchg
sbb
push
or
adc
push
scas
sub
in
mov
cs
xor
dec
dec
loop
jge
push
xchg
pop
xor
jns
add
sub
and
sub
mov
int
pop
cmc
outsl
mov
jecxz
xchg
cld
cmpb
and
and
inc
and
jae
out
mov
sub
or
fs
repnz
lret
sub
mov
mov
dec
outsl
lods
hlt
push
push
push
inc
sbb
or
aam
fmul
mov
rorb
push
xor
dec
mov
push
or
and
lcall
lods
jae
dec
dec
mov
lods
cmp
cmp
inc
mov
out
push
aaa
in
or
dec
std
and
xchg
in
sahf
or
dec
stc
sbb
leave
hlt
jle
js
mov
test
mov
outsl
lods
and
mov
pop
jb
adc
lcall
mov
in
push
push
loopne
mov
and
xor
aad
sbb
sbb
jl
aaa
and
test
push
dec
mov
clc
pop
cmpsl
add
in
mov
clc
pop
test
imull
pop
or
mov
push
test
xchg
pusha
pop
inc
xchg
sub
mov
pop
dec
sub
andb
pop
push
and
sub
lretw
js
jb
fisubl
nop
insl
push
sub
push
jne
xchg
jne
outsb
sbb
mov
test
imul
and
adc
mov
or
mov
sub
lock
xor
orb
stos
and
push
std
les
xor
jle
pop
xor
out
call
imul
mov
xchg
mov
pop
or
sbb
and
cmp
hlt
xchg
mov
test
hlt
ret
fcmovb
nop
xor
jno
or
dec
add
jb
pop
sub
pop
movlps
mov
daa
enter
dec
lods
xchg
movsb
push
int3
hlt
dec
mov
ja
inc
pop
push
repz
jge
xchg
dec
or
std
sub
cmp
jae
roll
or
xchg
test
jo
mov
and
pop
sub
testl
outsl
gs
hlt
push
out
aad
push
arpl
out
push
jg
jae
sbb
hlt
lds
sbb
nop
adc
nopl
enter
mov
mov
push
push
ds
inc
push
push
aam
adc
cld
imul
daa
dec
mov
std
in
inc
adc
nop
pop
inc
test
sbb
fistl
lods
addr16
xchg
pop
or
mov
std
push
sub
xor
test
repz
pusha
dec
add
mov
and
push
int
iret
cmpsb
fcomp
push
das
cwtl
fnstsw
int3
mov
sub
or
or
xchg
pusha
pop
pop
aad
mov
pushf
mov
push
or
inc
popf
mulb
xchg
lods
push
mov
and
aad
cmc
pop
adc
adc
push
push
lret
test
adc
imul
adc
inc
dec
fisubrl
in
push
mov
pop
daa
loope
sub
movsb
sub
enter
xchg
inc
jne
mov
ss
or
mov
out
jo
inc
xor
cmp
in
sahf
aad
sub
mov
loop
cmp
inc
mov
sub
out
stc
dec
lods
mov
leave
cwtl
ja
movsl
daa
mov
sub
pusha
jbe
es
ja
push
stos
orl
lock
xchg
out
rolb
jnp
mov
std
dec
adc
inc
lods
test
lock
movsb
pop
fbstp
test
test
cmp
or
test
fstpl
daa
xchg
mov
daa
sar
dec
fisubs
aad
popf
or
fmuls
out
sub
hlt
jb
push
mov
and
repnz
adc
fsubrl
nop
fiaddl
mov
cmpsb
call
inc
sub
inc
ljmp
xchg
pop
xor
es
cltd
xchg
aad
stos
xorb
sub
testl
dec
addl
jae
in
fdiv
jbe
and
cwtl
xor
rclb
lods
mov
push
int
aam
sti
mov
sub
lods
push
or
test
adc
sub
xchg
ss
orl
or
pop
dec
movsl
jbe
inc
xor
and
xchg
push
push
and
fcoms
pop
out
les
push
in
lcall
sbb
xorb
imul
xchg
lcall
stos
jno
jno
sub
std
adc
clc
or
push
cmp
pop
nop
push
push
test
mov
add
add
xchg
and
movsb
inc
mov
ret
jle
jb
xchg
fwait
movsl
imul
mov
pop
punpckhwd
xchg
push
cmc
push
js
push
push
loopne
lcall
add
pop
or
mov
out
jmp
and
subb
mov
and
and
mov
dec
xor
cmpsb
in
fsubrs
out
je
push
xor
lahf
and
rolb
hlt
call
lods
adc
ret
addr16
repnz
push
push
test
sbb
stc
add
insb
mov
push
cmp
and
jge
xchg
push
jg
imul
mov
push
das
testl
mov
testl
fs
xor
mov
jg
jb
xchg
movsb
lods
adc
leave
xchg
ja
xor
lret
arpl
aas
mov
repnz
bound
into
sub
movsb
cwtl
mov
es
inc
enter
adc
cli
dec
add
stc
mov
dec
in
jle
sbb
pop
clc
push
dec
add
or
cmc
cmp
stc
subb
pop
mov
lcall
jb
xchg
dec
outsl
dec
xchg
jne
test
sbb
cmpsb
push
bound
ss
pop
int
xchg
push
sub
fdecstp
and
into
dec
mov
jbe
movb
or
scas
leave
cmpsb
and
je
adc
popf
in
out
nop
push
je
add
loope
nop
push
ja
gs
nop/reserved
fwait
cmp
inc
scas
outsb
daa
jae
cmp
shrb
add
xor
repnz
daa
jnp
mov
inc
dec
in
jne
or
jne
xchg
dec
data16
loope
out
cmp
dec
divl
jl
sbb
ja
mov
sub
push
xchg
popf
bound
imul
int
jo
bound
jo
jae
iret
xor
das
cmp
jecxz
xchg
cmp
lret
out
jb
cmpsb
jne
jb
out
jb
scas
out
lock
dec
call
js
jne
sub
popf
jb
gs
sbb
sub
js
cmp
ja
jne
movsl
in
in
and
jnp
sub
cmp
push
cmp
enter
mov
ja
out
and
lock
das
cld
dec
inc
jl
dec
jae
cmp
clc
bound
dec
jne
sbb
or
mov
dec
mov
loop
cmp
sub
mov
inc
mov
pop
inc
xor
in
mov
mov
and
inc
xor
xor
xchg
xor
push
xor
leave
xor
aad
pushf
dec
sti
loop
xchg
push
inc
cmp
divb
iret
icebp
cmp
lcall
push
xchg
cmpsl
push
or
jb
dec
mulb
adc
and
testb
lock
inc
notb
imul
xchg
dec
arpl
jb
jb
shl
addr16
adc
and
dec
imul
out
lret
push
and
and
jmp
push
jo
mov
xor
push
js
xchg
je
sub
ja
jecxz
xchg
xor
jne
jb
xor
xor
call
js
xor
cmp
js
xor
in
mov
pop
nop
xor
jp
inc
cmp
das
xor
or
jle
dec
shrb
sub
or
adc
imul
inc
adc
pop
jns
or
adc
mov
jns
xorb
in
mov
popa
jns
or
scas
xchg
mov
rorl
and
sbb
push
sbb
xor
adc
cmp
and
push
push
nop
cmp
xchg
mov
sbb
mov
gs
cmp
repnz
arpl
lds
pop
sub
outsb
icebp
int
pop
pop
push
or
sbb
popa
sbb
or
lods
in
pusha
and
sub
xchg
test
ja
enter
sub
adc
les
or
sub
sbb
in
cmp
imul
mov
rorl
les
or
mov
ja
out
adc
fadds
mov
jb
and
pop
jmp
or
mov
sub
pusha
xlat
fldt
cmpsl
fisubl
leave
in
scas
jne
push
pop
scas
cmp
scas
and
mov
mov
in
rorl
lret
rclb
out
lods
and
sbb
repz
scas
mov
loope
sbb
xor
mov
shll
out
lcall
sub
in
dec
sub
int3
enter
push
adc
jnp
adc
rorb
cmp
jae
stos
cmp
xchg
sbb
push
and
push
or
mov
jnp
addr16
sbb
insl
push
dec
cmp
cmc
xchg
cltd
cmpsl
jl
mov
xchg
and
dec
xor
enter
and
fstps
inc
aad
int
nop
sbb
cmpsb
leave
dec
inc
and
inc
and
jne
or
xchg
and
stc
aad
mov
and
lods
lret
add
cmp
shll
push
xor
nop
shlb
sub
and
jnp
pop
xor
out
xchg
pop
jl
and
or
lahf
lods
lahf
insl
cs
sub
sub
and
in
int3
dec
mov
sti
cltd
pop
or
fwait
and
lods
popa
cltd
jecxz
imul
fstpl
push
aaa
popf
arpl
pop
sbb
test
jne
aaa
imul
jo
sbb
imul
jge
call
jne
dec
shlb
mov
fbstp
and
push
adc
sub
ljmp
sub
jle
inc
mov
and
push
pop
lods
je
cmp
pop
pop
repnz
test
mov
daa
inc
vxorps
fsubrs
test
inc
movsb
pop
pusha
jge
jno
imul
aas
xor
test
adc
mov
mov
loop
push
push
cmp
push
xor
stc
imul
xor
jns
sub
adc
xchg
or
in
and
and
rolb
jmp
popf
xlat
xor
inc
sub
out
fsub
or
lods
and
adc
inc
adc
sbbb
int
test
sub
test
adc
mov
cltd
sub
jne
and
in
xor
jb
pushf
push
loopne
ljmp
cmp
repz
fmuls
cltd
or
jnp
adc
inc
add
pusha
xchg
sbb
push
sub
cmp
jle
or
outsb
jbe
test
xor
jno
push
adc
xchg
and
xor
push
imul
cmp
push
push
insl
push
call
pop
mov
daa
push
neg
xchg
xor
dec
jecxz
pcmpgtw
fstpt
lods
and
sub
pusha
daa
mov
jecxz
cmp
cli
inc
pop
es
dec
pop
in
push
push
fiadds
fldt
movsl
call
pop
or
pop
sub
push
fcmovu
int3
and
dec
dec
lds
cmp
push
xchg
mov
sub
popf
insb
pop
das
ja
add
and
mov
pop
call
daa
jmp
stos
mov
push
int
mov
dec
xor
loop
adc
sub
aas
inc
sub
scas
hlt
jg
sbb
pop
into
jl
xor
sbb
test
sub
push
jmp
sub
loop
movsb
sti
test
shrl
in
cmp
das
cld
js
out
jle
outsl
add
in
jnp
push
daa
and
dec
push
ljmp
cmp
dec
je
dec
hlt
jns
insb
xor
adc
mov
fs
add
sub
mov
mov
and
add
xchg
je
icebp
lods
or
add
dec
push
lods
addb
and
es
aas
xlat
insb
daa
in
cld
lock
out
into
dec
sbb
and
jp
xchg
shl
jo
roll
arpl
add
out
and
ljmp
lcall
and
dec
in
sub
xchg
and
negl
jnp
mov
push
or
push
mov
daa
std
scas
jns
mov
inc
jb
jge,pt
inc
lods
fnstcw
or
push
imul
dec
idivb
in
inc
fwait
jbe
jg
jmp
es
daa
push
mov
xor
adc
into
push
xor
jnp
aas
mov
jbe
cmc
jnp
ret
jge
cmp
add
test
imul
and
stos
pushf
push
std
mov
jle
push
push
test
popa
out
xchg
scas
cmp
jae
jo
jnp
sub
mov
xor
rorl
mov
mov
je
test
xchg
and
movsl
pusha
xchg
pusha
xchg
add
lcall
dec
inc
lea
cmp
and
outsl
sub
mov
jnp
pop
and
cmp
enter
gs
mov
cmp
cs
cs
stos
xchg
cltd
jae
pop
xchg
push
js
and
imul
inc
stos
leave
push
cmc
push
xchg
push
wrmsr
jl
dec
push
jne
imul
dec
stc
stos
cmpsl
push
fcoml
aad
cmp
hlt
push
movl
lahf
pop
cmp
cmp
in
popf
add
lret
or
cmp
punpcklwd
rcl
lods
lock
mov
push
mov
xor
in
insb
jno
and
movsl
enter
lahf
popa
out
xchg
and
inc
outsl
jnp
adc
loop
cmpsb
jge
pop
pop
sub
mov
pop
jbe
dec
lahf
jbe
shlb
jnp
dec
add
push
loopne
cmpsb
test
or
int3
jo
jmp
lods
xchg
dec
hlt
leave
and
jo
jne
nop
jbe
js
iret
js
scas
lock
int
shrl
lds
push
out
aaa
stos
les
jnp
sti
fstps
mov
sub
jl
fimuls
xor
or
cmp
mov
sahf
lret
pop
mul
pop
pop
sbb
lcall
dec
stos
sbb
imul
dec
sub
in
jne
sub
dec
inc
adc
std
cld
dec
jo
xor
mov
xor
dec
adc
jo
mov
in
mov
jle
std
inc
dec
aam
in
mov
hlt
inc
add
scas
lods
mov
adcl
sbb
jnp
sbb
add
push
scas
bound
dec
dec
gs
movsl
and
sub
push
faddl
cwtl
outsb
test
pop
jno
push
mov
les
imul
clc
xor
cmc
mov
shrb
cmc
and
mov
adcb
jne
enter
adc
enter
push
add
pop
jae
adc
int
jo
or
jecxz
cmp
mov
es
int
mulb
add
lods
dec
dec
int3
rorb
ss
in
cmc
aas
jecxz
test
xor
roll
aaa
dec
and
ja
mov
js
or
and
jmp
xor
fidivrl
mov
adc
adc
and
test
movsl
sbb
jecxz
or
push
gs
out
aad
or
cmp
adc
idivb
xor
mov
pop
aaa
and
in
movsl
cltd
sub
and
in
or
sub
push
test
dec
xlat
lods
fstpl
lods
dec
push
push
add
push
xor
mov
leave
xorb
ja
int
xor
push
jmp
push
ds
inc
push
or
dec
mov
mov
fstp
adc
test
int
mov
mov
loopne
sub
lcall
pushl
and
negl
push
in
or
movsl
and
scas
sub
mov
out
jbe
push
adc
rcrb
mov
loop
out
sbb
adcb
fsubrs
daa
xchg
mov
jg
shl
push
sbb
add
jecxz
mov
jb
loop
sub
int3
sub
pop
inc
leave
das
inc
push
jne
sbb
pop
xor
add
push
cs
pusha
imul
push
adc
xor
cmc
cmp
sub
fs
inc
dec
scas
push
out
pop
lret
fistps
and
jo
jle
push
cmc
test
jo
fildll
cmp
scas
icebp
sbb
mov
hlt
xor
cmp
gs
es
xchg
or
sub
mov
cmp
test
sub
adc
xorl
and
sub
pop
sbb
es
std
adc
xor
xor
sub
sbb
imul
int
sarb
dec
pop
into
and
pop
fnstenv
cmp
push
jae
adc
xor
imul
xor
js
pop
or
sub
cltd
rcll
das
or
into
xor
scas
aaa
aaa
mov
pop
and
sub
and
adc
shlb
lods
or
add
std
and
or
sahf
pop
sbbb
hlt
insb
out
and
push
push
cmp
popa
xchg
or
mov
sub
and
mov
sbb
movsb
inc
das
sbb
lret
call
jle
sub
jecxz
mov
push
shlb
addr16
test
daa
pop
dec
adc
sub
push
xchg
test
mov
cld
push
rorl
mov
test
dec
push
les
cmp
xor
adc
jne
dec
ret
scas
orl
inc
cmpsb
in
fists
xchg
sbb
dec
stos
mov
sub
jge
lock
and
cmp
outsb
xchg
mov
es
in
int
mov
pushf
std
push
sbb
mov
lock
push
negb
mov
sbb
imul
test
or
push
shll
xchg
cmpsl
xchg
aad
adc
push
dec
stos
push
ss
push
adc
sarl
push
push
inc
xor
push
adc
or
cs
test
mov
daa
call
or
iret
data16
push
jle
outsb
lret
dec
pop
sub
dec
dec
in
jecxz
xchg
outsl
ret
jne
mov
hlt
bound
hlt
fmull
pop
loopne
in
push
push
shrb
xchg
insb
pop
push
es
aas
push
iret
je
mov
pop
call
scas
add
xor
lods
adc
sub
popf
lret
jp
and
pop
and
dec
popa
insl
sti
cmp
shl
cmp
or
cwtl
out
decb
int
adc
jb
mov
cmp
je
clc
bound
xchg
movsb
mov
pop
xor
lret
cltd
jnp
out
popa
add
dec
pushf
mov
mov
mov
outsl
loop
cmc
ljmp
je
outsb
mov
dec
cltd
adc
push
out
sbb
mov
jne
popf
mov
leave
inc
loopne
pushf
cmpsl
mov
jge
incb
sbb
test
dec
sub
in
les
scas
fnsave
mov
repz
or
cmp
add
jle
xor
and
or
pushf
sub
call
or
adc
and
mov
and
dec
stos
aam
or
lret
and
adc
jp
loop
sbb
pop
mov
movsb
int3
inc
or
addb
leave
xlat
xchg
loope
call
and
jmp
out
pop
add
sbb
cmp
jae
pop
push
daa
jl
dec
jns
jmp
sbb
sub
push
mov
arpl
sub
or
sbb
jne
pop
adc
fisubrl
or
scas
and
sub
lods
popa
jno
push
sbb
add
jl
inc
insl
stos
mov
repnz
sub
or
int
xor
push
jno
xor
sbb
sbb
daa
cmpsb
push
adc
test
push
fstps
aad
mov
sub
add
sub
hlt
pop
add
iret
loopne
test
add
and
je
daa
jl
sbb
js
xchg
inc
std
inc
lods
pop
cmp
shll
push
and
into
pop
add
pop
adc
sarb
pop
test
add
jae
and
sub
push
adc
mov
sub
fs
aam
fisttpl
add
push
add
mov
pop
inc
addb
jnp
push
mov
inc
pop
and
mov
test
in
sub
or
shlb
sub
push
xor
inc
jne
adc
mov
ja
add
push
mov
xchg
popf
and
inc
sti
leave
mov
adc
or
xchg
imul
inc
dec
lods
mov
dec
icebp
xchg
ret
adc
scas
and
inc
add
sub
or
test
pop
mov
inc
dec
inc
mov
arpl
dec
or
sub
inc
scas
lret
mov
adc
sub
sbb
pop
cmpsb
or
int3
or
dec
cmp
or
xchg
arpl
jae
push
cmpsl
mov
xchg
cmp
add
into
sbb
adc
adc
inc
pop
push
dec
test
lods
add
daa
repnz
and
and
aaa
fs
mov
cmp
cltd
add
sbb
mov
and
xchg
cs
je
add
xor
sub
das
and
add
sub
sub
sub
cmpsl
sub
and
mov
mov
xor
or
push
pop
add
daa
mov
std
mov
adc
mov
and
push
or
lahf
je
bsf
dec
mov
adc
addb
mov
mov
sub
cld
lock
add
divl
cwtl
add
pop
and
popf
ret
cmp
mov
add
push
pushf
sti
fs
add
into
sar
dec
je
inc
shl
mov
mov
dec
inc
pop
add
inc
fmul
in
inc
scas
push
jns
xor
dec
and
sbb
add
shrb
sub
add
jnp
dec
imul
push
push
inc
xchg
enter
add
and
mov
nop
das
sbb
push
adc
xchg
add
in
sahf
fcompl
std
pop
push
jns
pusha
ljmp
hlt
mov
pop
add
movsl
nop
repnz
xor
inc
cmc
lcall
loope
jae
mov
ljmp
inc
daa
or
jp
cld
sub
add
add
imul
in
or
xchg
mov
stc
push
and
and
add
lock
lods
mov
xchg
and
push
icebp
popf
int
add
and
fsubl
sub
cmp
add
dec
pop
or
dec
sub
mov
jns
ret
sarl
je
lahf
inc
inc
inc
cmp
adc
and
and
in
shrl
shl
add
xchg
inc
jne
xchg
aaa
iret
add
pushf
fsqrt
add
clc
inc
insb
or
xor
cli
testb
inc
imul
and
jmp
or
push
orb
adc
cmp
repnz
rol
hlt
sbb
dec
int3
dec
data16
add
arpl
add
push
or
popa
sarb
es
jp
das
in
pop
add
clc
sbb
enter
jno
add
fwait
mov
nop
dec
jb
xchg
mov
inc
pushf
mov
sub
sti
jnp
in
sbb
cmc
xchg
xchg
repnz
xor
xchg
jl
sub
or
jns
cwtl
xchg
mov
in
cmpsb
add
mov
ljmp
lock
mov
mov
and
aaa
cs
mov
sbb
sub
ljmp
mov
mov
or
subb
testl
out
dec
add
inc
shr
inc
inc
movsl
pop
push
adc
ret
dec
push
ds
fcmovnb
push
imulb
jmp
cli
cmp
xor
inc
sbb
xchg
inc
pop
mov
test
out
std
sbb
aam
jge
out
add
sbb
add
std
imul
outsl
es
pop
and
lret
jo
inc
loopne
dec
adc
fwait
pop
dec
testl
cmpsb
inc
cltd
sbb
testl
mov
add
jmp
pushf
xor
daa
pop
or
and
push
pop
lahf
loopne
rcrb
add
dec
xchg
jns
out
adc
cmc
nop
scas
mov
mov
jle
loopne
mov
leave
mov
mov
dec
daa
mov
sub
sbb
sub
add
jb
pop
cmpsl
outsl
add
mov
add
mov
sub
add
pop
add
cs
cld
mulb
aam
xchg
clc
dec
dec
cmpsb
add
cmp
xor
pushf
rol
push
xchg
dec
cwtl
bound
jle
push
dec
sub
out
push
add
inc
jns
and
enter
pop
dec
mov
notb
dec
xor
pop
das
test
imull
repnz
and
xchg
es
inc
add
shlb
inc
cmc
add
dec
insb
push
dec
sbb
outsl
dec
hlt
mov
jg
cld
add
cli
gs
std
adc
add
sti
pop
ljmp
adc
imul
lahf
out
and
pop
xchg
add
adc
fbld
bnd
jno
inc
cld
push
or
inc
xchg
popf
outsl
inc
loope
add
mov
dec
movlps
stos
sub
clc
cli
and
test
daa
or
push
xor
aad
xchg
mov
mov
mov
and
mov
dec
movsb
movsl
add
scas
mov
adc
inc
icebp
cltd
mov
adc
scas
and
inc
and
push
test
cwtl
mov
je
jo
pop
push
dec
push
jae
mov
push
arpl
test
adc
std
mov
outsb
sbb
fs
adc
outsl
pcmpgtb
push
mov
subl
inc
jl
loopne
or
or
push
xor
movsl
into
jmp
xchg
xchg
mov
neg
enter
das
xor
and
stos
xchg
xor
push
lods
test
movsb
cwtl
cmc
mov
inc
cmp
daa
ja
neg
aas
popf
rorb
jno
inc
mov
daa
nop
or
xor
sahf
scas
mov
jbe
or
sub
insb
dec
inc
mov
mov
pop
adc
pop
push
rcrb
pop
popa
popa
push
jg
lcall
and
push
cltd
out
std
xor
and
mov
xor
psadbw
cmpsb
mov
inc
xor
inc
dec
dec
adc
ljmp
das
jns
das
cmp
sbb
clc
insb
push
test
inc
xchg
dec
cmc
adc
xchg
push
inc
inc
push
add
jbe
pop
xlat
jb
dec
fs
js
add
jae
ss
mov
jl
insl
sti
stc
push
jbe
bound
push
push
xchg
mov
xchg
adc
push
sub
dec
dec
push
jnp
xchg
or
adc
mov
sub
and
cmp
inc
dec
iret
fcmovne
inc
ds
add
dec
sbb
pop
lahf
pop
cmp
push
sub
push
or
jns
scas
sub
imul
imul
jno
cmpsl
push
mov
les
dec
inc
push
sahf
ljmp
jge
mov
push
push
inc
push
daa
inc
in
adc
cwtl
xor
mov
inc
test
xor
gs
aaa
jge
push
jp
aas
xor
and
sub
insb
mov
xchg
mov
push
jne
ds
daa
push
out
daa
push
iret
repnz
or
push
sbb
sbb
pop
inc
cld
cmpsb
cmp
mov
test
and
sub
test
or
add
and
adc
out
push
test
push
movsb
sar
loop
mov
stc
nop
in
add
mov
pop
xor
adc
sbb
lds
ljmp
mov
stos
mov
or
inc
ljmp
cmp
imul
hlt
pushf
out
rcrb
sahf
div
out
lcall
in
clc
xchg
adc
ljmp
lock
adc
loope
scas
movsb
pusha
leave
xchg
push
adcb
negb
adc
xor
sbb
arpl
inc
add
loop
jp
pop
dec
push
test
and
fwait
popf
or
pusha
dec
inc
push
or
xchg
int
or
cmpl
pop
cli
sbb
mov
pop
mov
cld
xchg
pop
push
int3
xchg
adc
jl
test
insb
jno
push
add
push
jno
and
mov
ret
xchg
lock
xchg
loop
movsb
in
add
sbb
call
mov
shr
cltd
sahf
mov
pop
push
adc
aad
xchg
xlat
lcall
fwait
rcll
xchg
shl
sahf
popf
movsl
pop
into
call
idivb
sbb
aam
out
mov
xchg
fucomi
aam
rcr
nop
sahf
push
les
ret
lock
dec
or
shr
xchg
lea
jo
imul
in
into
ja
push
and
mov
in
sbb
cld
sbb
test
add
imul
mov
xchg
adc
xchg
call
stos
mov
sbb
mov
mov
xchg
cmp
xchg
or
add
jp
repnz
call
repz
test
test
and
je
jo
adc
adc
pop
out
and
xchg
fwait
xchg
lods
adc
out
lcall
xor
movsb
xor
xchg
jmp
fcom
push
xchg
enter
fs
sbb
xor
push
adc
jb
sub
jle
xchg
movsb
dec
je
adc
cltd
fiadds
mov
jmp
mov
sub
dec
push
dec
xchg
inc
push
stos
or
xchg
pop
mov
mov
outsb
ret
sub
mov
inc
xchg
push
dec
js
pop
dec
cli
inc
stc
and
and
ja
inc
scas
jae
mov
nop
jge
addl
push
and
adc
mov
or
pop
sub
aaa
sbb
push
aas
jbe
pushf
jbe
je
ds
xchg
add
mov
mov
repnz
sub
cld
jle
pop
push
push
inc
jge
fimuls
dec
or
incb
pop
add
adc
pop
arpl
adc
push
cltd
adc
dec
aad
insb
cs
lret
xchg
je
xchg
jno
loope
xchg
call
jl
sub
repz
int3
pop
popl
cmc
sub
lcall
xchg
fwait
sbbb
and
xchg
or
dec
push
mov
cmp
pop
lock
clc
div
sub
or
loope
xchg
lcall
test
dec
dec
adc
mov
mov
aad
lahf
and
and
or
mov
pushf
or
jo
xor
jmp
scas
mov
xchg
in
pushf
pop
fsubrs
xor
ds
adcb
jns
add
fdiv
dec
int
inc
adc
jmp
and
ret
test
push
aaa
xchg
sahf
inc
xchg
jmp
jl
add
jo
mov
in
cli
xorl
aad
xor
aas
add
xor
cli
jle
or
adc
adcl
out
mov
adc
imull
pop
hlt
daa
inc
pushf
daa
inc
xchg
mov
stos
sti
add
inc
shrl
icebp
daa
adc
mov
or
enter
andb
cli
outsl
sbb
adc
lea
mov
clc
mov
xchg
or
adc
dec
lret
mov
jmp
inc
push
scas
and
add
push
inc
jbe
cmp
add
cmp
rcrl
lcall
inc
icebp
dec
pop
sbb
xchg
outsb
ficomps
push
sbb
or
or
inc
xor
sbb
js
ds
inc
jbe
push
sbb
inc
xchg
sub
xor
dec
inc
pop
negl
push
xor
fcompl
push
icebp
jae
mov
push
adc
and
sbb
inc
pop
jmp
push
push
inc
test
or
pop
jb
mov
push
and
mov
jne
jge
pop
mov
adc
lds
push
xchg
adc
outsl
pop
ds
std
pop
push
and
adc
fwait
imul
ja
mov
ret
pop
das
dec
call
or
mov
push
gs
push
inc
push
adc
stos
cmp
jge
adc
aam
aam
aas
hlt
push
inc
xor
jp
push
inc
xor
or
xor
lcall
cmp
pop
lock
scas
into
dec
idivb
xchg
inc
dec
fcomp
and
push
inc
push
ds
dec
jecxz
and
faddl
in
cmp
sub
dec
pop
rorl
aas
inc
adc
dec
mov
mov
and
arpl
push
dec
int3
xchg
cs
inc
inc
sbb
addb
mov
mov
push
inc
dec
mov
dec
inc
dec
mov
fisttpll
inc
inc
or
and
cmpsb
enter
jge
jne
fs
pusha
jp
pop
jbe
or
imul
data16
or
repnz
sub
sub
pop
xor
outsl
jb
or
lds
or
inc
or
adc
jg
or
pop
add
out
dec
cld
dec
iret
cmp
out
nop
adc
insl
adc
es
mov
jge
daa
and
mov
push
sbb
test
fs
mov
jle
mov
jne
enter
adc
or
and
push
stc
add
das
pop
pop
rclb
or
ljmp
cmp
pop
mov
jne
mov
scas
mov
ret
syscall
adc
in
repz
xor
or
pushl
inc
jecxz
sbb
pop
jbe
jp
lret
pop
cmp
arpl
pop
sbb
mov
xchg
adc
in
hlt
cmpsl
fsub
insb
adc
dec
rcll
mov
icebp
in
stc
hlt
clc
push
adc
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
sbb
adc
test
ret
lahf
fiadds
pop
sbb
dec
addr16
xchg
mov
out
pop
pop
aaa
lcall
roll
jmp
jb
je
jbe
js
jp
jl
pop
jne
sbbl
mov
mov
fld
push
add
pop
dec
inc
mov
inc
outsb
adc
xchg
dec
mov
lods
roll
repz
lock
sbb
arpl
ja
jl
test
cld
cld
cld
and
push
cmp
push
sub
ret
sub
adc
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
sbb
adc
popf
dec
sbb
aad
insb
adc
daa
ret
inc
into
popa
dec
adc
fcomps
sbb
jbe
js
jp
push
lock
int
sub
sbb
cmp
jbe
inc
cmp
lea
pushf
aas
aas
fisttpll
or
js
inc
mov
xchg
sbb
clc
rcr
loopne
sbb
in
pop
lock
hlt
xchg
mov
mov
sar
cmp
or
jle
clc
cmp
sbb
call
sbb
cmp
cmp
rcrb
xchg
inc
les
rol
enter
or
in
call
jbe
mov
hlt
hlt
test
push
jb
je
jbe
sbb
adc
and
movnti
adc
mov
xchg
shl
loopne
adc
in
cmp
cmp
dec
dec
mov
inc
mov
jne
and
sbb
gs
pop
add
push
inc
adc
adc
je
jbe
js
jp
jl
jle
sbb
adc
xchg
lcall
sbb
mov
sbbb
push
jg
mov
xlat
inc
jne
add
js
dec
popa
inc
adc
leave
not
mov
add
adc
adc
and
shll
mov
test
int
leave
sbb
lahf
call
xchg
cmp
adc
pusha
xchg
leave
jae
out
repz
call
push
leave
test
sbb
loopne
pop
jb
je
adc
in
xor
das
pop
pop
sbb
addr16
sbb
insb
leave
jnp
sti
fxch
loope
and
jp
sbb
adc
ss
lods
daa
cwtl
inc
sub
fstl
nop
fdivs
sbb
sbb
popf
dec
sbb
addr16
fs
loope
jmp
lock
cld
and
push
sub
aaa
cmp
ds
arpl
imul
aas
inc
aas
inc
aas
dec
aas
push
aas
cmpsb
aas
test
xchg
mov
xchg
aas
repz
int
popa
sbb
inc
daa
ljmp
cmp
ljmp
iret
add
adc
xchg
and
mov
lahf
cmp
aam
xchg
jns
cli
mov
ja
sbb
pop
nop
sbb
and
or
sbb
sub
sbb
and
or
pop
mov
int
and
add
jae
jo
outsl
addr16
js
je
jno
hlt
je
bound
cld
jne
stc
imul
cmp
or
sar
std
sub
add
cmp
popf
jecxz
movups
xchg
mov
mov
loop
cmpsl
and
and
jecxz
les
mov
push
and
sbb
add
inc
pushf
mov
add
adc
sbb
cltd
or
or
dec
adc
xor
or
sbb
sub
and
test
xor
or
adc
ss
inc
xor
mov
add
mov
aam
je,pn
js
adc
in
sahf
sub
and
add
jb
popa
je
adc
aam
cld
test
inc
pop
push
cs
jo
mov
xchg
lea
sbb
mov
mov
sub
push
pop
jb
xor
ds
add
jo
scas
sub
sub
ja
pusha
mov
sbb
or
add
cmp
adc
or
nop
add
mov
cmp
push
push
push
mov
push
and
push
push
sti
fcoml
mov
test
sbb
sbb
and
clc
and
sbb
in
push
or
jo
mov
push
enter
pop
pop
pop
pop
ret
lea
xor
or
pusha
push
into
mov
or
fstp
fcoms
sbb
xor
push
dec
mov
outsb
jge
inc
mov
add
push
cmp
je
cmp
or
push
add
add
adc
rclb
push
cmp
je
xchg
lea
push
push
xor
cmp
push
test
je
jnp
and
cmp
enter
jmp
push
cmp
sub
xchg
push
dec
pop
add
adc
pop
pop
rclb
inc
inc
pusha
push
cmp
mov
je
mov
mov
mov
mov
ret
fidivrl
stc
popf
cmovle
mov
sub
cmp
mov
stos
rorl
iret
insb
adc
jno
mov
jno
add
xor
lea
or
xchg
shll
push
push
call
or
inc
xor
lea
add
push
call
out
xor
or
and
add
cltd
mov
sub
test
shlb
mov
xchg
inc
add
jl
pop
xchg
loop
inc
mov
push
mov
icebp
mov
test
add
adc
jne
dec
jmp
cmp
or
dec
xor
push
mov
movsb
push
push
adc
dec
aad
rcrl
inc
repnz
pop
and
lahf
or
test
mov
sbb
and
jns
aam
lea
cmp
sbb
cmp
push
push
dec
add
lsl
mov
and
mov
test
scas
lods
inc
inc
dec
xor
add
test
push
push
push
push
call
orb
add
xchg
or
aad
add
mov
data16
sbb
inc
or
pop
nop
fucomip
xor
out
push
aaa
pop
imul
nop
dec
add
sub
and
xor
push
ret
sbb
mov
popa
inc
inc
or
dec
xor
sbb
add
push
push
addl
loope
testb
pop
add
cmc
adc
sbb
daa
or
imul
add
or
test
inc
or
clc
mov
fcomip
lods
and
daa
or
mov
shr
and
dec
push
and
mov
pop
jle
inc
add
adc
xor
lods
xor
pusha
lods
hlt
add
mov
sbb
sbb
sub
adcb
sbb
pop
push
and
xchg
stos
mov
test
and
insl
sbb
adc
add
sub
lret
mov
or
adc
push
pushf
jmp
leave
test
fmull
stos
je
push
inc
jno
dec
and
test
push
popf
jno
loope
ljmp
push
sub
icebp
cltd
push
shll
cmp
mov
or
sub
pusha
popa
mov
pop
adc
test
lea
xchg
dec
es
dec
adc
dec
push
xor
add
dec
test
test
sub
pop
loopne
cmp
xchg
push
xor
bound
pop
or
out
sub
xchg
fiadds
loop
push
push
or
pop
sbb
cmp
ja
cmp
pushf
add
sub
and
sub
add
push
push
rcll
xor
dec
pop
push
dec
xchg
retw
or
xchg
or
xchg
pop
inc
mov
xchg
mov
mov
dec
repnz
push
mov
adc
and
inc
in
adc
movsl
dec
push
imul
pop
clc
mov
xor
inc
push
push
push
cmc
push
add
sbb
xor
cwtl
scas
jnp
mov
push
call
arpl
sbb
push
mov
je
xor
jmp
int3
lock
jg
xchg
inc
mov
push
stos
push
dec
repnz
mull
dec
cli
movsb
dec
sbb
xchg
or
inc
jbe
push
push
mov
jae
inc
mov
adc
and
xorb
xor
mov
sub
adc
mov
mov
adc
sub
adc
addl
jne
mov
or
rorb
int3
xchg
xor
mov
loop
lock
loope
mov
sub
mov
dec
arpl
dec
mov
ss
xor
or
std
jne
sbb
call
mov
cmpsb
mov
adc
lea
outsl
fidivs
mov
cwtl
xor
push
xchg
push
enter
or
push
mov
mov
sub
cwtl
sub
adc
sub
cmp
and
mov
andb
lret
jbe
ret
jo
scas
nop
pushf
dec
inc
add
mov
inc
orl
pusha
and
icebp
call
and
jmp
mov
ret
pusha
nop
cmp
push
movl
call
or
sub
iret
insb
push
mov
xor
push
shll
cmp
mov
insb
cmpsb
daa
mov
xlat
adc
or
mov
xchg
and
xchg
jo
in
and
or
xchg
test
mov
aaa
and
sub
psrlw
setb
cltd
mov
add
test
xchg
roll
push
mov
pushf
fwait
in
dec
notl
xchg
test
sub
push
mov
cmp
es
sub
adc
sub
add
push
xchg
and
sub
xchg
adc
addb
aad
jp,pt
sbb
sbb
lcall
filds
push
or
add
notb
mov
and
and
imul
pop
pop
ret
sbb
movl
je
sbb
in
and
cmp
sub
xchg
pop
add
push
mov
sub
or
or
pop
adc
jl
adc
xchg
pop
enter
bound
mov
rcll
or
and
push
pop
push
and
pop
imul
loopne
iret
adc
int
add
rclb
xor
mov
sbb
dec
inc
push
xchg
inc
pop
out
dec
sub
sub
sub
xchg
add
dec
sbb
add
inc
push
or
dec
add
and
pop
mov
add
dec
roll
mov
push
pop
aam
inc
sbb
push
mov
and
lds
iret
push
call
jl
cmpsb
dec
test
push
adc
dec
inc
dec
rorl
or
enter
push
bound
imul
push
push
lds
push
mov
mov
push
push
in
enter
fbstp
pop
jp
push
mov
xchg
or
sbb
lds
sub
add
pop
jns
jns
adc
repnz
jg
or
shr
pcmpeqw
add
imul
pop
mov
cltd
xor
fists
clc
lock
pop
add
mov
icebp
pop
mov
adc
in
cwtl
adc
pop
inc
add
sahf
push
rcr
call
or
sbb
adc
lea
scas
in
enter
das
aam
nop
sub
pushf
js
or
andb
cmpsb
or
call
rcll
ret
xchg
mov
mov
fs
aaa
enter
mov
dec
pop
rcrl
cld
pop
insl
leave
jmp
push
mov
add
xchg
mov
addb
mov
clc
addl
outsb
in
or
or
xchg
inc
bound
addr16
rolb
cs
mov
aad
or
lret
mov
inc
xchg
adc
inc
push
mov
and
insl
adc
lods
fistpl
ss
gs
lods
xor
cmp
inc
xor
pop
jle
insl
dec
into
lcall
jae
mov
loope
xor
push
mov
mull
mov
push
rcrl
cld
movsl
mov
push
rorl
or
faddl
inc
jns
xor
into
repnz
loopne
testb
xchg
mov
sbb
call
gs
fs
or
dec
cld
pop
lock
enter
lret
sahf
push
fadds
cmp
inc
int3
add
xor
adc
aam
adc
and
xor
inc
stos
mov
les
leave
cwtl
fs
mov
mov
lods
movsb
aaa
pusha
jmp
addr16
fistl
push
xchg
test
inc
mov
cli
and
outsl
push
pop
jmp
dec
or
add
adc
push
adc
add
and
or
test
call
xor
and
sbb
call
outsl
pop
bnd
inc
pop
lcall
cld
jl
loope
call
xchg
add
mov
dec
cmpl
dec
or
or
or
inc
dec
leave
cmpsb
mov
shlb
mov
push
or
add
cmp
sbb
nop
mov
adc
int3
lea
imul
rolb
inc
dec
mov
add
or
adc
mov
or
ret
jg
jl
or
push
pushl
aam
or
in
jae,pn
inc
mov
lea
jbe
or
test
loop
dec
xor
lret
jne
cmp
shrl
repz
cld
sub
call
ret
sbb
popl
test
adc
mov
xchg
push
cli
cmp
cmp
and
mov
jmp
or
and
dec
sbb
imul
ljmp
loopne
xchg
out
inc
jle
sbb
into
push
push
push
testl
call
dec
pop
je
mov
sbb
inc
push
shrl
or
push
shl
add
adc
jne
in
mov
jb
andb
cwtl
out
cmp
daa
and
sbb
cltd
sbb
popw
add
add
fdivrs
add
or
ljmp
adc
push
test
xor
and
cmp
lret
jmp
dec
clc
add
jge
cmpsl
and
or
aaa
es
jne
or
jne
dec
pop
adc
adc
cmpl
xchg
add
add
jne
fisttpl
and
push
push
sbb
rclb
or
call
add
xchg
dec
adc
in
movsb
imul
aaa
push
push
sub
mov
hlt
push
es
and
dec
and
or
and
pop
mov
cmp
lret
cwtl
adc
sbbb
movsb
xchg
bound
mov
push
pop
add
test
je
inc
mov
xchg
push
andl
adc
xor
and
decb
inc
sbb
in
and
iret
add
in
add
mov
mov
shrb
mov
lock
mov
mov
or
xchg
cwtl
ds
xor
mov
dec
test
mov
add
adc
hlt
and
ss
lret
in
and
stc
push
or
pop
sub
mov
sbb
push
sub
enter
push
and
jns
addr16
test
mov
mov
adc
mov
inc
push
sahf
push
dec
cmp
pop
je
dec
test
jmp
nop
or
cmc
filds
cmpl
inc
pushf
adcl
mov
lock
inc
test
xor
ja
adcb
pop
pop
mov
ret
push
push
jmp
or
adc
lods
in
orb
sub
inc
cmp
jl
rorb
jg
movsbl
ret
mov
inc
or
cmp
and
clc
ds
ja
or
orl
sbb
add
or
xchg
xchg
clc
aam
xchg
sub
cmc
cmp
cmp
jg
adc
xorb
popf
xchg
or
mov
adcb
add
dec
and
inc
pop
sbb
ds
jmp
das
and
lret
ja
add
inc
shr
jmp
cmp
push
nop
add
add
cmp
aas
jmp
mov
mov
ja
mov
jge
cld
js
test
dec
or
repnz
mov
adc
jle
xor
fiadds
bswap
std
jb
mov
mov
and
enter
cmpsb
pop
pop
xchg
aam
sbb
rolb
adcb
xchg
daa
in
add
or
inc
ret
xchg
add
insl
sbb
insl
loop
pop
cmp
adc
mov
xchg
test
pop
and
test
hlt
push
xchg
sbb
imul
jo
imul
add
faddl
lods
push
ret
sti
daa
mov
arpl
mov
in
add
pop
mov
rorb
mov
sbb
sub
or
daa
or
mov
or
dec
test
inc
lock
sbb
repz
inc
mov
out
inc
rolb
inc
mov
mov
or
int
int3
clc
push
adc
dec
add
mov
mov
icebp
test
xchg
int3
and
jge
jle
andb
adc
je
or
xor
dec
cld
add
mov
pop
mov
dec
cwtl
jle
jmp
cli
add
in
xor
jl
mov
pusha
sbb
push
call
jmp
mov
cmp
mov
push
rep
push
inc
call
ds
aam
xchg
xor
jle
mov
addl
pop
add
mov
pop
and
clc
setge
hlt
outsb
pop
es
pop
xchg
mov
clc
mov
mov
inc
dec
dec
mov
stos
push
rclb
popf
sub
out
xchg
mov
pop
inc
and
sbb
pop
dec
mov
test
adc
sbb
sub
inc
ret
call
jmp
imul
lods
and
pop
je
mov
ds
xor
and
mov
add
jmp
sub
roll
sbb
je
in
and
and
sbb
dec
jmp
or
add
adcb
mov
xor
adc
add
mov
nop
or
test
dec
add
and
or
enter
mov
jmp
adc
add
xor
or
or
cmp
inc
pop
jmp
cmpl
and
or
call
add
rcrb
or
out
bnd
or
aam
es
andl
sbb
je
jecxz
jg
jl
mov
sbbl
loopne
ficoml
gs
sbb
add
cmp
or
push
xor
es
idivl
inc
xchg
daa
pop
or
nop
or
sub
fmull
mov
scas
cwtl
xchg
mov
lds
je
adc
cltd
cli
fstl
ljmp
add
or
xor
adc
sub
cmp
mov
pop
int3
push
hlt
mov
mov
sbb
scas
scas
sub
test
xor
lret
dec
inc
or
aaa
add
ret
cld
test
in
cmpsl
movl
sub
or
add
or
mov
sbb
sub
pushw
lock
pop
adc
call
adc
or
and
faddl
cmc
es
pop
jmp
xchg
or
mov
call
mov
je
inc
xchg
or
or
cmp
hlt
adc
add
je
in
call
cmpsb
dec
test
ret
add
inc
jns
call
mov
dec
fcompl
flds
lock
call
movl
je
rcrb
or
or
and
pop
pushf
pop
and
sbb
insb
icebp
cmp
arpl
popa
jmp
pushf
inc
rcr
mov
xor
filds
decl
js
jmp
sub
mov
pop
or
xchg
lock
imul
pop
mov
or
pop
push
aas
adc
sbb
or
or
lods
fldcw
sbb
push
and
inc
mov
push
out
decb
aas
negl
ror
jle
cltd
jnp
insl
adc
push
aaa
push
inc
insl
flds
aas
adc
outsl
loop
pop
jnp
mov
sbb
lock
outsb
leave
add
orb
pushw
adc
loopne
sbb
push
mov
cmp
jbe
adc
cmp
mov
retw
pop
cmpl
leave
outsl
add
imul
xor
idivb
push
ds
add
cmp
arpl
loopne
fnstcw
jbe,pn
frstor
movsl
and
sbb
push
int3
pop
and
sbb
push
lret
xchg
rol
je
jmp
xchg
sbb
push
and
imul
test
xchg
cmpsb
jb
sbb
inc
or
mov
jl
enter
inc
js
mov
push
bound
mov
push
and
dec
cltd
addb
adc
jne
sti
mov
stos
pop
inc
push
mov
fnstcw
sub
and
in
pop
mov
or
or
inc
jae
push
es
or
dec
mov
xor
push
sbb
and
cmp
cmp
sbb
inc
adc
mov
call
push
push
out
sbb
adc
fcoms
bswap
push
xor
jg
popf
jnp
pop
ja
inc
les
fildll
jle
rolb
dec
inc
jo
js
lods
adcb
push
test
jbe
xor
bound
ds
pop
movl
jmp
jmp
xchg
push
in
pop
popa
notl
xor
push
call
stos
movsl
sarl
jo
adc
jmp
inc
jmp
call
int
push
adc
push
inc
sub
mov
push
and
push
nop
inc
push
js
push
sbb
shrb
sbb
mov
and
fdivrs
cmp
jl,pt
xor
mov
shlb
shll
hlt
lcall
popf
adc
mov
add
imul
push
push
outsl
test
add
and
adc
push
test
xor
dec
cmpb
lea
push
inc
es
ret
cmp
in
cmp
xchg
sbb
loopne
testb
mov
ljmp
dec
lret
lcall
rorb
mov
push
add
fisttps
fcoms
cmpsl
in
adc
mov
call
lahf
cltd
inc
out
adc
scas
je
push
adcl
inc
dec
js
andl
orb
movsl
push
andl
jmp
xchg
loopne
das
shlb
adc
xchg
push
push
lock
jne
rol
push
xor
ret
jnp
sbb
or
mov
je
mov
call
cmp
ret
sbb
sbb
or
add
cmp
mov
mov
sub
pop
mov
push
call
in
push
ds
xor
mov
add
ret
popa
popa
and
inc
mov
jb
or
push
adc
adc
mov
mov
push
leave
sbb
pop
xor
das
xchg
call
sbb
push
cs
cmpl
push
jnp
inc
sbb
cwtl
inc
or
pop
cwtl
in
testb
or
push
dec
dec
jo
mov
aam
dec
sbb
mov
shrb
adc
inc
test
cmp
cli
xchg
insl
outsb
or
xor
and
cld
xchg
iret
xchg
fwait
in
adc
fmuls
add
in
test
jo
aas
xchg
sub
cmpl
and
fsts
mov
ret
add
adc
out
or
add
ljmp
iret
jno
frstor
cltd
add
jae
adc
xchg
jg
push
or
inc
xor
sysenter
test
mov
xchg
adc
outsl
sub
pusha
mov
jl
xchg
and
idiv
ret
push
pusha
adc
xchg
xor
and
or
xor
in
push
xchg
push
mov
adc
test
xchg
shll
jmp
mov
sub
test
dec
jae
out
inc
in
adc
sub
adc
dec
sub
sbb
cmpsl
add
mov
and
ss
xor
mov
jne
call
xor
cmp
test
loope
push
addr16
pusha
jmp
hlt
push
lods
sub
arpl
jno
aaa
push
aad
push
lds
sbb
lea
or
and
xlat
jmp
sbb
cltd
repnz
popa
shl
insb
rcr
pop
cli
xchg
mov
aad
les
xchg
ret
xchg
inc
inc
stos
je
loop
and
jne
cmp
jo
ljmp
add
inc
or
xchg
fisubl
jl
movsl
push
mov
add
movb
xor
sahf
and
dec
in
mov
mov
push
outsb
sub
xchg
icebp
push
movsl
push
and
insl
cwtl
loopne
bound
inc
rcl
mov
sub
pop
jmp
stc
adc
jne
pop
mov
inc
push
inc
pop
pop
mov
or
pusha
xor
xchg
pause
pop
mov
shlb
inc
cld
call
push
pop
sbb
jmp
fwait
adc
sbb
mov
int3
xchg
pop
and
add
bound
rorb
jns
int
mov
cmp
inc
xchg
mov
int3
cmp
cmp
ss
aas
loop
hlt
lock
cld
cwtl
xchg
in
out
sub
mov
cmp
test
mov
jp
call
sub
ret
xchg
xchg
nop
addb
addr16
or
insb
mov
gs
pop
andb
adc
mov
les
bound
xor
ret
sbb
mov
and
cmp
cmp
iret
inc
mov
mov
lret
xchg
pushf
in
fbld
notb
in
incb
cmp
and
call
popf
pusha
cmp
dec
or
aas
jmp
inc
cmp
aaa
mov
fs
cmpsl
xchg
or
jmp
push
pop
push
push
fcmovu
mov
lods
test
lods
adc
add
jne
push
call
pop
push
mov
push
cs
in
or
or
das
imul
jmp
enter
js
sbb
jne
sbb
jmp
dec
xchg
sub
fmul
fwait
psraw
add
call
push
or
xor
jmp
sub
xchg
test
pushf
sub
xchg
daa
lret
add
bound
ja
and
int3
lds
cmp
adc
mov
gs
cmp
movsl
sub
inc
xchg
xor
xor
xor
xchg
aas
inc
mov
ds
inc
lret
and
mov
ret
xchg
and
mov
jo
in
lock
mov
ja
les
sbb
shr
push
jp
and
add
push
jmp
pop
jo
push
pop
jne
push
rolb
jno
or
leave
add
cmpsb
lcall
cmc
add
mov
mov
xchg
lock
popf
les
loope
add
xorps
lahf
xchg
inc
inc
pop
cmp
adc
or
lods
push
dec
lret
test
xchg
jo
xchg
and
inc
ret
mov
mov
sbb
lea
jno
cmp
jb
repnz
mov
sub
add
inc
and
in
pop
push
and
in
clc
xor
xchg
test
pop
pop
rcll
inc
mov
or
or
in
enter
sbb
push
fdivs
pop
jno
xor
dec
es
add
call
in
stos
outsb
jle
jb
mov
push
push
popf
and
mov
and
lcall
inc
add
sahf
scas
and
and
ficoms
adc
or
ljmp
in
and
pop
lds
lea
loope
cmp
jns
clc
jl
mov
jge
mov
inc
add
cltd
xorl
mov
test
or
les
mov
cwtl
adc
add
mov
movsl
push
mov
lods
fimull
jle
repnz
add
cmp
xor
jne
add
xchg
mov
and
and
insb
or
jge
outsb
addl
adc
sahf
inc
cmpl
mov
and
add
add
mov
dec
neg
dec
sbb
mov
int
add
je
push
scas
jno
or
out
pop
ds
add
sub
js
and
mov
sti
add
in
out
mov
inc
fisubrl
xor
aaa
push
mov
push
inc
jae
and
cld
or
sarb
movnti
inc
jb
add
ss
es
mov
imul
sarb
sub
xor
mov
push
cmp
je
cmp
rolb
inc
mov
jg
jl
jnp
mov
shr
sti
cltd
cmp
cmp
xchg
mov
add
stos
inc
jl
inc
add
push
addl
jne
pop
inc
cmpb
xchg
and
and
es
gs
in
push
sahf
cmp
and
fwait
jge
add
jo
leave
pop
push
incl
xchg
pop
sbb
scas
and
adc
mov
sub
mov
fisttps
or
xchg
cltd
or
cmp
je
jne
jae
push
lea
mov
out
mov
test
dec
sti
sub
xlat
mov
sbb
and
icebp
pop
push
ss
movsl
xor
mov
popf
or
lea
shll
adc
adc
gs
mov
mov
and
mov
inc
in
in
sub
jne
or
andb
nop
add
es
pop
mov
push
inc
inc
or
aad
jmp
push
or
mov
inc
adc
add
mov
cld
orl
addr16
int
mov
pop
aaa
adc
int3
push
addl
dec
ljmpw
push
data16
sahf
imul
std
loop
sbb
mov
sahf
add
xchg
inc
pop
jne
leave
inc
jmp
xchg
xchg
sub
pop
inc
xchg
and
test
sub
inc
in
or
ret
jo
xchg
or
add
sete
testb
lods
dec
adc
inc
mov
inc
mov
jne
mov
xorl
or
cmpsb
and
cmp
sahf
jecxz
push
and
inc
insl
add
sahf
aaa
sub
dec
and
pop
inc
lar
add
test
dec
adc
add
sub
add
cmpsb
test
cmovs
dec
and
rclb
jmp
or
sbb
cmp
nop
sbb
or
mov
mov
jno
push
dec
inc
or
dec
push
ret
cmp
inc
in
inc
jecxz
adc
jne
and
repnz
mov
rcrb
inc
movsb
push
pop
xor
out
inc
jl
xlat
xorl
xor
icebp
inc
mull
adc
lods
cmp
jnp
pop
inc
pop
sbb
sbb
movsl
or
dec
push
int3
lahf
or
jmp
xchg
arpl
adc
popa
popa
loope
fmuls
inc
out
mov
jle
stc
mov
into
mov
lcall
or
lods
mov
jle
sub
mov
cwtl
bound
cmp
and
faddl
cmpw
jne
mov
dec
cmp
mov
sbb
mov
popf
inc
sbb
add
mov
into
in
jp
cmpsl
push
or
mov
and
xorl
adc
jb
movb
jmp
aam
add
ja
pop
les
mov
inc
inc
rolb
lea
add
je
mov
cmp
popa
jl
add
add
and
sbb
inc
inc
push
and
adc
add
cmp
or
or
dec
adc
leave
add
sub
cmp
mov
sbb
inc
mov
daa
sub
add
sub
sbb
sub
stc
xor
enter
push
cmpb
pop
add
cmp
push
je
cmp
stos
je
cmp
add
adc
cwtl
mov
jge
push
pop
pop
dec
dec
add
repnz
inc
cli
pop
bound
add
mov
ss
fiaddl
jne
insl
adc
je
or
ret
cmp
and
scas
and
call
sub
jge
jne
mov
dec
adc
pushf
or
sbb
lea
or
inc
addl
das
or
xlat
adc
in
add
popf
mov
lock
inc
xor
into
sub
inc
sbb
addl
sbb
leave
inc
xor
sub
dec
mov
or
divl
lods
sar
pop
xchg
int
adc
mov
fwait
cwtl
sbb
mov
pop
add
push
cmp
pop
xchg
dec
dec
movsb
enter
xor
mov
and
inc
cmp
icebp
imulb
shl
cmp
scas
push
insl
xchg
or
mov
or
sub
icebp
movsb
add
pop
sub
aas
xchg
arpl
sbb
mov
sbb
pop
push
cld
sub
sarl
add
cmp
sub
daa
les
or
jecxz
push
test
call
pushl
xchg
or
mov
mov
push
xchg
mov
mov
aam
xor
push
les
mov
add
pop
jmp
xor
adc
xor
adcl
pop
mov
repnz
jns
mov
pop
leave
fldcw
test
jae
mov
adcl
sbb
call
adc
pop
and
and
ret
push
loope
jns
or
aaa
aam
out
and
sub
add
push
sub
push
pop
je
jmp
adc
inc
cwtl
hlt
mov
jmp
lods
mov
ljmp
xchg
mov
mov
scas
cmp
in
push
scas
mov
sub
dec
inc
sub
or
cmovs
fdivs
clc
push
lock
inc
mov
add
add
adc
inc
sbb
add
xor
pusha
cs
push
push
fcomi
adc
or
xor
movb
xor
or
in
cld
orb
es
mov
shr
int3
or
in
inc
fldcw
jg
rolb
cmp
fsubr
adc
loopne
pop
inc
mov
inc
stos
lea
call
push
int3
rorl
cmp
les
inc
hlt
aam
and
xchg
xor
xor
hlt
jae
push
clc
cmp
jl
adc
lret
pusha
push
mov
sbb
inc
add
push
pop
mov
or
sub
sbb
pop
mov
jmp
xchg
mov
ret
fadd
lea
hlt
push
push
out
inc
mov
mov
jmp
xchg
sub
das
sub
and
idivb
cmp
adcb
les
subb
inc
orb
jmp
movsl
adc
jecxz
or
dec
dec
lock
xchg
dec
lods
lock
inc
scas
dec
icebp
sbb
push
sbb
jmp
sbb
adc
xchg
lock
add
inc
cmp
mov
jb
dec
mov
and
dec
sub
xor
sub
shll
xor
rcrb
push
adc
jmp
push
cmp
jge
data16
sbb
or
repz
and
es
mov
sahf
sbb
push
sbb
nop
fisubrl
mov
sbb
jae
ja
dec
cmp
ljmp
rol
xor
adc
lret
jmp
add
or
rol
inc
jno
shll
sub
cmp
je
jmp
gs
jb
cmp
ja
sub
scas
clc
pop
rol
out
das
es
clc
push
das
ret
jge
pop
and
mov
or
cmc
cmp
test
jge
and
pushf
add
add
add
mov
inc
test
inc
inc
nop
pcmpeqw
push
or
decb
xor
xor
dec
xor
xorl
xor
in
xlat
and
loope
jl
jmp
add
inc
push
or
ret
adc
test
jne
sarl
mov
inc
and
or
sub
push
nop
movsb
aam
add
fsubs
adc
test
in
je
or
repnz
add
xchg
cltd
adc
sbbb
cmp
ficoml
pop
pop
cs
or
cwtl
xor
pop
shll
adc
push
xor
push
jb
and
ss
and
outsl
add
push
mov
pop
and
dec
dec
and
dec
dec
ret
daa
outsb
or
xchg
xor
sbb
mov
fdivs
adc
mov
enter
pop
cld
mov
jmp
rcr
leave
jne
push
div
mov
lea
inc
inc
jle
out
shll
cmp
push
ja
push
pop
xor
add
lcall
movsl
mov
push
sub
inc
push
adc
ret
jmp
outsl
xchg
adc
or
or
enter
or
cmpsb
insb
inc
or
cs
jbe
sub
adc
mov
pushf
sub
cltd
push
push
jp
pusha
adc
push
or
pop
shr
test
cmp
dec
sub
adc
mov
lcall
shlb
push
or
xchg
adc
sbb
les
mov
popf
sub
pop
jbe
mov
xchg
dec
imul
adc
sbb
adc
cmp
push
sub
cltd
aad
cmp
add
add
or
xor
and
shr
adc
inc
add
sbb
adc
fidivrl
dec
out
ljmp
incl
nop
sbb
xchg
sbb
mov
xor
add
mov
inc
arpl
sub
shrb
and
inc
lret
imul
push
inc
xor
xor
jmp
das
sub
push
adc
popa
inc
jne
aas
enter
iret
movb
jae
dec
or
ds
dec
lea
js
jl
add
inc
push
jl
dec
imul
push
sbb
cwtl
test
aam
js
cmp
push
call
ret
push
sbb
push
outsl
sbb
add
in
popa
lret
out
lods
or
decl
sbb
mov
fistps
push
xchg
andb
jmp
leave
push
adc
sub
clc
ret
push
and
sbb
or
shlb
shlb
push
sti
and
out
loopne
add
cmp
cwtl
pop
call
js
test
shr
xor
fbstp
sarb
movsl
add
dec
xchg
inc
mov
add
jb
mov
xor
xor
adc
mov
fdivrl
rorl
sub
rcrl
repz
insb
scas
adc
int3
push
cmp
fimull
sarb
inc
cmpsb
lret
inc
inc
inc
push
inc
sbb
insb
xchg
or
inc
push
dec
mov
sub
in
xchg
adc
mov
mov
mov
xchg
mov
clc
or
or
mov
pop
pop
dec
leave
mov
inc
or
cli
nop
adc
movsb
push
push
aad
inc
sub
lea
jl
cmp
or
adc
and
neg
xchg
data16
lock
nop
and
adc
test
push
xor
push
adc
xor
pop
or
cmp
loopne
dec
mov
inc
push
mov
rcrl
out
and
out
jle
mov
nop
movsl
sub
mov
and
mov
aam
sbb
in
in
adc
and
dec
add
pop
jmp
jmp
and
adc
sub
adc
mov
pop
dec
xchg
add
xchg
cwtl
lret
xor
dec
pop
test
mov
mov
adc
mov
mov
sub
scas
push
adc
add
in
add
ja
xor
cmp
xchg
hlt
pop
enter
xor
pop
loopne
cmp
fcomip
inc
rorb
ret
ja
aas
or
repnz
push
cld
push
mov
push
loopne
pusha
and
arpl
jle
pop
faddp
xor
dec
xchg
pop
inc
xchg
pop
mov
inc
mov
lods
cmp
sbb
or
fisttps
dec
dec
mov
dec
mov
inc
inc
and
outsl
or
mov
outsl
cmp
jne
pop
sbb
push
sub
ret
dec
pushf
lcall
mov
or
xor
subb
xchg
fstpl
enter
fs
sbb
ror
cmp
inc
test
and
sub
and
repnz
add
add
push
xchg
add
out
loop
sbb
test
xlat
imul
fisubrs
imul
cmpl
test
std
add
sbb
inc
push
xor
int
adc
lock
addr16
cmpl
add
jne
sbbl
jmp
call
inc
out
js
pop
mov
leave
pop
out
in
dec
pop
cmp
fsubrs
push
adc
aaa
lock
fsubrl
add
cmp
jno
test
dec
adc
loopne
cmp
xorb
fs
sbb
mov
arpl
add
sub
sar
icebp
add
pop
lea
lock
or
fadds
push
stc
js
pusha
jne
pop
add
adc
call
outsb
aad
scas
xor
incb
inc
cld
sub
shr
dec
or
leave
add
bound
xor
pop
dec
test
adc
inc
cmc
out
xor
aas
out
hlt
xchg
push
cld
aas
or
jecxz
test
cmp
or
jle
cli
add
dec
adcl
jbe
clc
pop
pop
mov
cmp
push
sub
and
jae
mov
lret
jmp
dec
add
fsubl
pop
add
sub
loope
dec
loopne
and
pushf
mov
push
or
add
int
sub
add
pop
push
add
pop
add
push
add
cs
or
and
sbb
shrl
push
xchg
xchg
hlt
mov
shll
and
xor
dec
or
fidivs
cli
fwait
nop
xor
rorl
and
push
into
adc
jno
jae
inc
addl
inc
mov
not
and
dec
add
jne
lcall
loopne
mov
push
pop
xchg
add
dec
xchg
or
pop
loopne
and
iret
inc
pop
mov
fimull
pop
test
shl
fmuls
xchg
pop
insl
gs
pop
mov
cmp
push
jne
mov
mov
jne
rcrl
and
orb
pop
adc
or
cmp
mov
sub
es
push
and
cmp
xchg
or
inc
inc
xor
and
imull
stos
enter
or
popf
and
shl
add
or
call
push
pop
push
enter
xor
or
push
or
xchg
pop
inc
repz
and
dec
inc
or
popl
or
adc
js
out
or
and
or
mov
mov
shlb
testb
add
or
enter
out
pop
adc
push
push
dec
adc
add
dec
nop
pop
hlt
bound
mov
insl
sub
adc
imul
push
mov
test
into
int
sahf
aam
sub
pop
subl
and
xlat
inc
and
cld
into
lcall
push
jne
jmp
lods
loopne
mov
pop
push
adc
cmp
add
and
mov
pop
out
daa
or
rclb
pop
cld
xor
rcll
jns
fadds
adc
outsl
out
sub
dec
jae
adc
jnp
inc
mov
push
sub
in
cmp
mov
out
push
sub
cmp
je
adc
mov
pop
pop
pop
mov
inc
test
mov
sbb
lret
enter
pop
hlt
mov
jl
inc
mov
ficoml
inc
jo
inc
push
add
stos
push
jno
jge
or
outsl
sbb
pop
cmpsb
xchg
test
xchg
lea
pop
js
cmp
xlat
je
lea
jmp
orl
mov
jne
arpl
dec
lret
test
add
loope
jmp
arpl
mov
sub
icebp
pop
xor
cli
dec
je
sub
jle
cmpsb
enter
cltd
or
and
popa
cmp
test
cwtl
add
mov
daa
test
aam
add
in
and
out
orb
pcmpeqw
ja
popa
dec
in
and
pop
jmp
sub
adc
and
imul
sbb
cltd
inc
sub
insb
rolb
jp
imul
in
sbb
adc
shrb
jl
sub
cmpsb
aaa
inc
cmp
and
pop
sahf
fs
inc
push
decb
ret
ja
out
gs
into
shr
sub
cmp
mov
scas
jmp
movsl
sub
lods
and
xchg
pop
mov
bound
pop
clc
rol
mov
in
add
xchg
xor
repz
mov
inc
add
mov
lea
ds
sbb
dec
sbb
cltd
fisttpll
jo
and
inc
add
xchg
shll
add
pop
loopne
xor
jo
pop
mov
mov
inc
and
and
leave
lret
or
xchg
loope
cwtl
inc
test
xchg
inc
adcl
push
sub
mov
sahf
frstor
or
push
or
fwait
cli
dec
fsubrl
adc
jb
jle
sub
and
cmp
leave
push
fs
push
addr16
inc
cltd
push
test
inc
and
ret
cmp
enter
stc
dec
xor
or
pop
add
dec
dec
dec
pop
sti
inc
xchg
out
fnstsw
test
adc
addb
inc
shr
xchg
mov
loopne
cmpb
cmp
lock
ret
repz
ja
mov
movl
push
clc
sub
dec
add
orb
adc
sub
push
and
popf
in
imul
dec
or
mov
nop
or
sahf
inc
xchg
inc
inc
imul
call
outsl
rorb
shr
shlb
dec
push
data16
lods
popa
cmpl
aam
test
pop
mov
push
cli
pop
test
add
jp
mov
push
mov
xor
lea
xor
or
pop
cmp
lock
in
or
sbb
or
std
inc
or
adc
or
or
mov
mov
lahf
inc
ja
inc
cmc
jle
dec
stos
in
pop
mov
cmp
setge
ret
shll
mov
dec
dec
sahf
test
jecxz
adc
out
pusha
movsl
adc
ret
xchg
loopne
sbb
andb
push
pop
cmpsb
add
sbb
lahf
xchg
cli
fdivrl
daa
rcrl
and
pop
lea
imul
jns
cmpl
test
dec
shll
and
push
xchg
mov
adc
orl
lds
push
push
cmpl
gs
enter
push
subb
mov
test
mov
push
add
fistpl
push
sub
lea
and
rorl
or
mov
adc
jbe
push
cmp
push
outsl
imul
sub
out
test
aad
mov
je
mov
sbb
push
lea
jl
inc
cmp
inc
push
mov
gs
and
jmp
and
xor
pop
jg
ja
mov
lret
arpl
adc
adc
negl
jle
je
jmp
test
jne
cwtl
push
dec
mov
out
jmp
and
xchg
push
or
sub
rcrl
ret
or
hlt
or
and
or
sar
cs
add
mov
add
xor
adc
pcmpeqw
popa
in
or
and
push
and
out
inc
shlb
push
cmpsb
dec
idivl
mov
icebp
jle
push
mov
sbb
adc
sub
cmp
add
mov
stc
mov
or
mov
inc
fsub
lret
jl
add
pop
add
adc
mov
sub
dec
inc
xor
enter
add
sbb
orb
jns
adc
jl
dec
adc
mov
jae
es
mov
clc
jb
and
in
mov
adc
sub
aad
or
sub
into
push
pop
sbb
cld
out
jbe
or
mov
aas
fdiv
arpl
call
ljmp
hlt
out
mov
add
addl
es
adc
mov
xlat
cmpsb
cmp
adcb
fs
mov
mov
jne
adc
mov
mov
mov
jle
mov
mov
hlt
gs
sbb
cmc
mov
movups
inc
out
icebp
adc
add
aam
or
mov
aaa
inc
cmp
jae
mov
cmp
repnz
shlb
push
inc
jl
xchg
mov
adc
cmp
add
lea
mov
and
xor
xchg
sti
mov
sbb
mov
push
sbb
jbe
fidivl
sub
test
and
push
sbb
int
and
scas
pop
adc
or
lea
sahf
mov
add
mov
pop
jb
nop
cmpsb
push
jae
add
sub
push
bound
jp
into
pop
push
add
cmpb
je
sarl
xor
sbb
add
mov
test
jne
mov
jae
push
pop
cmpb
mov
inc
inc
jmp
movsb
jae,pt
dec
dec
pop
clc
pop
pop
test
leave
cmp
mov
cltd
xor
aad
jmp
mov
inc
jne
call
or
jae
notb
fildll
add
mov
test
adc
movsl
pop
mov
mov
imul
mov
cltd
dec
xor
xor
shlb
jae
sub
inc
imul
scas
sarb
lock
jo
xor
adc
shrl
adc
movlhps
mov
dec
and
mov
xchg
jge
rcrl
scas
je
clc
xor
mov
lea
mov
outsb
fdivrl
inc
push
mov
cmp
outsb
jnp
and
inc
sbb
push
jns
lods
or
cmp
leave
jge
dec
pusha
sbb
mov
ja
dec
fs
inc
arpl
mov
rolb
fisubrs
stos
adc
popa
xor
mul
daa
notl
adc
adc
jb
inc
jno
ret
xchg
or
inc
jo
scas
or
imul
shlb
or
inc
and
pop
cmp
repz
shrb
jmp
fildl
cmp
mov
sbb
movsb
xor
test
sub
pop
mov
and
pop
test
pop
and
adc
and
mov
aam
jne
call
inc
pop
jbe
jge
data16
adc
adc
push
ljmp
cld
xchg
jge
jg
out
sti
dec
scas
sbb
outsb
push
shll
xchg
sahf
enter
pop
cmpb
mov
cli
cmp
ja
mov
sbb
nop
mov
jbe
inc
adc
ljmp
jb
shll
mov
dec
movsl
call
mov
jns
mov
pop
mov
push
push
adc
or
inc
jl
xchg
mov
mulb
adc
dec
mov
and
push
imul
add
xchg
shlb
pop
aam
test
daa
jg
mov
pop
and
xchg
and
xchg
mov
subb
clc
decb
xchg
jmp
std
cmp
sub
pop
mov
or
inc
dec
sub
je
sub
mov
jp
sub
pop
mov
adc
mov
and
jb
push
mov
imul
dec
pop
out
and
js
inc
and
push
dec
repnz
mov
test
add
jb
mov
mov
test
and
adc
or
in
cmp
ja
xchg
test
mov
and
add
lret
pop
jecxz
mov
int
je
rclb
pop
pop
push
xor
mov
push
push
mov
sub
inc
adc
and
adc
stos
xor
dec
and
test
push
enter
les
lea
sub
xchg
daa
inc
adc
cmp
mov
sbb
add
mov
pusha
mov
mov
inc
mov
daa
push
push
es
cld
sbb
or
mov
enter
dec
cwtl
pop
xor
popa
adc
jp
push
pop
dec
popf
cmp
dec
jmp
dec
int3
xchg
mov
mov
cld
push
sbb
mov
jne
and
adc
les
cmp
or
sub
or
fcmovnbe
and
push
push
sbb
cltd
jl
and
dec
insb
xchg
and
and
test
test
dec
loopne
in
and
inc
push
lock
sbb
mov
inc
push
mov
xor
cmp
add
pop
or
adc
sbb
and
aaa
lods
in
jbe
and
or
jl
fisubs
push
dec
jl
inc
adc
scas
addr16
dec
and
scas
jp
add
mov
lea
fisttps
jbe
mov
mov
shll
call
pop
jmp
jle
insb
sub
sub
lods
xlat
add
rolb
lods
push
cmovge
int3
add
xor
cmc
adc
aad
and
cmpsl
or
ja
push
dec
pop
sub
xor
lret
push
or
sub
xor
jg
je
push
pop
adc
test
mov
sbb
push
jne
push
adc
and
add
inc
lods
pop
add
or
pop
mov
mov
hlt
mov
jle
add
call
or
jo
dec
test
cs
loop
in
xor
push
push
lret
mov
nop
push
dec
dec
cld
cmp
jae
cmp
jle
xchg
or
cmp
or
dec
jo
movsb
add
insb
icebp
add
inc
lahf
stos
adc
jmp
adc
outsb
and
test
cmpsl
fcoml
push
jmp
mov
inc
addl
mov
sbb
adc
cmpsb
pop
mov
sbbl
fwait
loopne
sub
ret
daa
call
mov
je
fldl
cmp
adc
mov
add
mov
repz
fstl
nop
or
clc
mov
das
adc
xchg
add
cmp
push
lea
sub
jecxz
gs
dec
mov
fadd
loopne
push
xchg
out
or
cmp
fldenv
push
adc
xor
or
adc
or
inc
divl
lret
shl
stc
xor
decl
iret
leave
pop
sbb
and
pop
and
pop
repz
or
or
inc
cld
cmp
je
pushf
pop
push
out
push
fcoml
daa
ret
push
mov
adc
and
jmp
mov
jo
pop
std
cld
and
pusha
mov
push
mov
mov
imul
sub
iret
xor
cmp
push
push
or
add
or
test
adc
lock
jmp
jle
shll
lcall
loopne
mov
gs
data16
shll
fucomip
mov
pusha
imul
into
inc
jmp
movl
pusha
scas
jecxz
hlt
fsts
daa
repnz
lret
cli
pop
sub
cmpsb
test
cmp
add
fmuls
testl
cmpsl
xchg
or
sub
add
jae
in
sub
mov
sbb
loope
test
outsl
pusha
rorl
adc
xchg
ror
xor
lcall
mov
push
call
in
les
je
push
push
mov
sub
std
lahf
pop
das
cwtl
test
decl
clc
sub
adc
cmp
mov
daa
jmp
push
and
or
jle
adc
add
imull
cmc
aas
pop
enter
outsl
jmp
xchg
push
loopne
dec
je
and
sub
xor
jecxz
and
les
and
das
xchg
and
and
pushw
je
cmp
cld
push
out
dec
cmp
pop
cli
scas
push
sbb
icebp
cwtl
xor
scas
stc
fwait
nop
push
mov
ficoms
sub
push
jb
xor
shll
loop
jo
enter
inc
sub
repz
aaa
lods
or
lds
push
pusha
push
pop
mov
push
test
clc
or
mov
mov
ja
mov
inc
cmp
test
adc
aam
ja
sbb
fmuls
xor
mov
std
test
stc
hlt
outsb
jb
adc
or
or
cmc
or
lds
jb
or
mov
mov
pop
shrl
call
hlt
adc
dec
repnz
add
orl
fsts
loop
add
adc
hlt
jmp
popf
or
push
add
out
adc
pop
pop
testb
and
push
call
arpl
dec
pop
mov
jecxz
test
out
sub
push
jg
add
inc
inc
cmp
mov
push
stos
push
xor
aad
dec
pop
cmp
rol
mov
rorb
mov
push
or
inc
or
push
fwait
or
das
pop
loop
pushf
add
negb
dec
stc
rcrb
mov
push
sbbl
addr16
mov
adc
ret
lods
pusha
add
jle
push
mov
sarb
adc
inc
es
scas
daa
jo
dec
or
dec
jl
add
adc
jl
sub
lods
push
adc
xor
call
xchg
and
add
jl
pop
adc
call
xor
in
xchg
or
sbb
add
inc
or
jbe
test
neg
pop
pop
sbb
mov
mov
push
imul
cmp
getsec
test
add
cmp
sub
cmp
jno
lods
add
jne
push
pop
test
add
into
pop
adc
stos
sbb
arpl
mov
mov
cld
popf
lds
stos
data16
lret
in
sbb
push
loopne
inc
fistps
dec
xor
in
xchg
adc
pop
jle
push
dec
out
fdivl
ret
dec
or
sarl
xor
push
dec
fs
xor
sbb
cmp
sbbb
lret
sbb
inc
add
ss
add
jne
or
int3
mov
push
mov
adc
sub
adc
and
pop
lods
cs
scas
push
mov
xchg
in
jge
in
and
es
cmp
or
neg
sub
add
sub
in
mov
mov
addl
into
mov
or
ja
and
mov
mov
add
dec
das
lret
in
das
js
out
loope
ffreep
inc
inc
lods
scas
and
mov
or
sub
push
mov
cs
add
push
mov
sbb
movsb
dec
mov
sub
cmpsb
shrl
or
adc
clc
pop
icebp
lahf
add
pop
jmp
enter
add
inc
ss
dec
sti
std
xchg
push
mov
rdmsr
test
xor
mov
xchg
adc
enter
daa
add
jne
cmp
mov
fisubs
lock
dec
lds
pop
push
or
insb
mov
xor
push
and
dec
jg
dec
sbb
movl
hlt
scas
xor
imul
jl
add
cmp
jge
pusha
dec
dec
xchg
dec
jmp
push
mov
aas
or
adc
and
inc
add
cmp
nop
loop
add
andb
aaa
sbb
lcall
in
rorb
adc
inc
or
or
lods
inc
mov
leave
xchg
xchg
sahf
or
cmp
pop
push
ret
or
dec
push
mov
jae
xor
jo
hlt
mov
rcll
out
shlb
loopne
xchg
sti
sbb
inc
in
pusha
sti
lods
roll
std
add
pop
push
push
add
ds
cmp
inc
inc
sbbl
hlt
add
sbb
movl
int3
mov
sahf
in
leave
iret
inc
stos
mov
mov
mov
nop
dec
test
fsubrp
jb
shrl
xchg
xor
shr
das
xchg
sbb
and
es
adc
xor
std
sbb
mov
shlb
fbld
pop
sbb
add
lock
js
and
mov
mov
leave
test
jne
hlt
adc
out
inc
icebp
mov
jb
mov
lcall
cmc
lcall
cmp
subl
add
xor
inc
or
jle
repnz
cmp
fstpt
das
xchg
mov
aad
mov
leave
cmp
add
ss
jecxz
sbb
ljmp
or
sbb
lret
in
push
inc
mov
bound
jmp
mov
dec
push
jecxz
inc
and
add
and
jno
sub
and
in
pop
push
lea
je
aad
mov
dec
ficomps
repz
add
es
sbb
sbb
mov
das
jo
or
lea
shl
es
push
push
outsb
aam
sub
add
loopne
sbb
fmuls
addl
loopne
mov
jo
bound
mov
xor
push
xor
jmp
test
pop
sbb
cmp
sub
xor
cld
scas
je
arpl
and
jge
cmc
mov
pop
mov
dec
cli
and
stos
lret
in
dec
test
fldcw
adc
loopne
pusha
lcall
dec
test
adc
inc
test
mov
inc
addb
mov
xor
jp
jo
call
lods
mov
xor
stos
jno
mov
ffreep
xor
clc
and
das
test
jns
cltd
or
clc
or
cli
mov
loope
cltd
xchg
test
adcb
scas
cmp
xchg
cmpsb
sub
pop
adcl
pop
in
dec
popf
inc
add
add
jo
xchg
mov
inc
pop
add
jmp
rcll
sar
movzbl
testb
push
outsb
or
out
or
dec
sbb
or
inc
aas
push
les
add
hlt
ds
lret
rorl
shlb
outsb
and
test
push
lcall
std
or
push
mov
xchg
cmpsl
imul
ja
xchg
xor
mov
pop
inc
jmp
pop
enter
xadd
push
rorl
lock
adc
push
mov
enter
mov
cli
fwait
and
out
fadd
test
or
lcall
bswap
push
inc
leave
inc
inc
mov
fildl
and
adc
mov
push
rol
movsb
cmp
cs
aas
mov
dec
or
jge
dec
xor
mov
jmp
push
mov
pop
mov
fs
add
xor
jle
pop
ret
cmp
repnz
mov
mov
lods
mov
pop
adc
sub
cli
leave
xor
int3
dec
or
dec
pushf
idiv
jecxz
or
test
cmpsl
clc
xor
jnp
cmpsl
mov
hlt
outsb
mov
push
push
jg
xchg
xchg
cld
test
mov
push
push
jbe
add
mov
pop
inc
stos
add
jmp
loope
push
pop
nop
adc
mov
adc
or
ret
loopne
push
push
int3
inc
mov
repz
leave
sbb
fidivrs
cmp
adc
pop
in
cli
inc
lahf
ds
lods
repz
lods
xor
pop
hlt
imul
jbe
das
fldl
mov
cmp
fwait
inc
sbb
xor
nop
lea
cmp
test
mov
sub
jae
mov
stos
xlat
sbb
fiaddl
or
mov
aaa
sbb
les
adc
addl
cwtl
call
lcall
push
das
jecxz
or
lods
lock
outsb
mov
push
dec
inc
cs
imul
push
inc
cmp
xor
leave
orb
and
roll
xchg
sahf
setne
sbb
pcmpeqw
xlat
add
mov
jg
push
es
sub
pop
adc
aad
cltd
and
or
nop
enter
pop
or
daa
fidivs
imul
loopne
ret
and
fcomps
sub
dec
xchg
jmp
mov
imul
jl
sbb
test
rorl
fisttpl
dec
add
and
es
add
sbbb
push
pop
fdivl
pop
out
clc
adc
clc
jne
jae
sbb
xor
adc
data16
mov
nop
push
pop
neg
jmp
in
jno
aam
lock
cmp
in
or
in
push
je
fistpll
jbe
lock
icebp
mov
and
and
aad
adc
sbb
in
std
push
push
pusha
inc
mov
dec
stc
shll
xchg
sub
and
stos
and
mov
and
pushf
cmp
pop
jge
and
jle
je
or
cli
cs
or
mov
repz
call
adc
nop
rclb
mov
push
popa
mov
cmc
or
scas
cmp
inc
mov
and
or
dec
popa
mul
ret
or
in
pop
or
addl
or
xor
pop
aaa
jmp
mov
mov
jbe
push
jmp
mov
cld
popf
das
adc
xor
sbb
or
pop
or
ds
push
and
cltd
xor
or
add
fs
or
cmp
outsb
and
dec
mov
mov
mov
sahf
and
dec
xchg
cmp
fwait
or
and
inc
out
clc
mov
pushf
adcl
dec
inc
xchg
push
and
jbe
mov
dec
ficoms
and
inc
inc
push
mov
jle
mov
xchg
test
mov
add
and
dec
pop
xchg
push
mov
and
dec
aam
in
hlt
and
inc
push
sub
mov
nop
jo
sub
push
lret
xchg
scas
cmp
add
jmp
mov
add
push
or
pop
pop
or
aaa
xor
push
repz
and
inc
pop
push
pusha
push
jo
js
pushl
fnstsw
outsl
setp
fiadds
sub
sti
out
in
pop
cmp
mov
xor
adc
or
dec
adc
adc
add
cwtl
xor
adc
sub
xor
xor
adc
sbb
unpcklps
cmp
sbbl
test
dec
dec
inc
inc
jmp
push
cli
push
jmp
mov
mov
xor
push
fistl
imul
pop
je
insl
and
ds
outsl
cmp
or
test
adc
ret
call
movsb
int3
push
dec
dec
inc
test
add
xor
cmp
and
cmp
jb
scas
jle
addr16
push
dec
sub
aaa
subl
popa
jl
jne
push
popa
arpl
cmp
insb
adc
imul
in
cmp
xor
mov
jne
pop
jbe
ljmp
cmpsb
arpl
neg
sbb
pusha
fwait
pop
push
lret
js
mov
fldl
inc
pusha
adc
daa
jo
mov
fs
and
stc
dec
sub
cmp
mov
xorb
and
aaa
leave
insl
mov
cmp
push
and
arpl
repnz
and
push
inc
jb
inc
hlt
mov
push
inc
aaa
jns
lds
dec
push
fisubl
lods
inc
push
insl
int
je
adc
xor
mov
xchg
popa
inc
sub
mov
cmpl
push
aam
daa
jb
orb
push
cmp
data16
jmp
mov
push
fwait
mov
mov
push
jns
or
pop
pop
mov
mov
and
aad
cmp
inc
outsb
add
cmp
push
or
imul
in
arpl
cmp
xchg
sbb
je
dec
popa
dec
adc
sbb
push
pop
jne
xor
scas
xor
jle
mov
addr16
inc
gs
and
add
xor
cs
inc
xchg
add
add
cmp
jnp
jg
or
call
add
test
add
dec
mov
add
das
out
xchg
cmpxchg
repz
or
inc
pop
cmp
insl
fadds
pop
dec
outsl
jbe
or
mov
push
out
jo
adc
xchg
aas
adc
xor
sub
nop
dec
orl
movsb
cmpsl
dec
dec
inc
adc
adc
or
cmp
outsb
push
or
andb
push
and
or
jno
mov
and
dec
leave
dec
push
cmp
aam
inc
sarl
es
adc
nop
aad
cli
or
or
and
push
jne
or
cmp
cmp
xor
inc
and
inc
add
pop
and
mov
mov
lahf
mov
mov
dec
add
pop
pop
xchg
test
test
sbb
jno
and
jno
jmp
adc
push
mov
mov
push
cltd
jno
adc
cmp
lods
pop
and
push
lds
outsb
xchg
push
mov
popa
xor
adc
sub
fcmovbe
dec
adc
or
inc
jno
int
popa
sub
or
xchg
add
push
lea
inc
lcall
or
dec
cld
push
jns
inc
xchg
jb
dec
ja
adc
imul
jl
std
lret
xorb
sub
add
stos
jbe
cmp
sbb
and
pop
cmpb
cmp
ss
sbb
or
jne
jae
dec
andl
ljmp
push
mov
sub
imul
jmp
pop
mov
lock
sbb
xor
movsl
inc
push
out
pop
and
std
das
mov
in
jb
mov
inc
jns
push
outsl
inc
fs
push
inc
push
dec
xlat
dec
sub
ds
cmp
xchg
push
jb
dec
inc
popa
sub
push
je
push
rcll
inc
cmpsb
pop
mov
loopne
scas
cld
xchg
loopne
loope
loopne
adc
lods
add
adc
xor
dec
xlat
enter
and
push
push
dec
mov
and
mov
mov
or
cld
push
dec
lea
push
arpl
das
lret
je
push
outsb
dec
ja
jo
or
cltd
insl
cmpsb
mov
ficoms
sbb
jae
push
inc
into
adc
test
ret
mov
dec
lods
push
pop
add
insb
jae
dec
fsubrp
mov
lret
sub
push
or
inc
and
or
dec
js
jo
roll
or
xor
or
push
ret
push
mov
cmpl
mov
xchg
and
nop
mov
repnz
xchg
and
jo
push
scas
push
push
xchg
jne
dec
adc
outsw
out
jp
in
xlat
lock
pushf
adc
sub
cmp
es
or
popa
insl
and
daa
inc
push
lock
pop
out
dec
sbb
add
xchg
lret
inc
dec
dec
mov
push
pusha
inc
das
movsb
adc
sbb
and
ja
xchg
and
and
imul
jp
jl
or
es
xchg
jns
out
push
dec
nop
xchg
inc
loop
push
mov
push
xchg
sub
test
cmp
sub
push
out
cmp
xorb
ret
dec
mov
jmp
mov
jbe
shrb
push
adc
mov
outsb
je
aas
arpl
jo
mov
jae
mov
je
sub
adc
adc
jae
jae
arpl
fwait
mov
push
dec
cmpsb
dec
adc
fidivl
fcoms
inc
push
daa
sbb
dec
mov
dec
or
mov
inc
inc
sub
cmp
pushf
jo
mov
inc
cmp
adc
mov
cltd
shll
adc
dec
in
dec
popa
sub
mov
inc
cmp
ret
dec
sub
mov
add
add
cltd
and
mov
pusha
adc
jo
nop
dec
push
adc
xor
mov
lds
popf
inc
xor
push
pop
dec
or
xor
lods
fnsave
hlt
sbb
in
orb
adc
jbe
lea
jns
mov
dec
jnp
cmp
pop
dec
dec
sub
sub
or
insb
xor
cwtl
mov
dec
or
inc
cmpsl
mov
dec
out
mov
jb
or
inc
push
push
add
fsts
push
cs
jns
aaa
inc
sub
push
inc
sub
adc
and
fcmove
dec
push
xchg
jle
rcrb
and
popa
add
push
aad
sub
stos
inc
fdivr
mov
ljmp
pusha
les
les
xchg
mov
popa
jae
cld
test
dec
pop
sub
js
and
pop
sbb
inc
neg
dec
push
adc
insb
arpl
inc
and
std
lret
insb
movsb
xor
cmp
jbe
inc
jb
adc
imul
int
xor
cs
ds
ljmp
cmovl
mov
rclb
xchg
mov
xchg
or
inc
cmp
mov
call
dec
mov
adc
and
cmp
adc
sbb
inc
in
xchg
pop
and
mov
sbb
xchg
cmpl
aam
jp
les
mov
adc
rolb
or
sbb
xor
add
dec
add
add
loop
loope
adc
test
cmpsb
fs
jl
sub
gs
add
test
mov
add
test
sbb
push
addb
add
cmp
and
xor
daa
lock
and
jo
rorl
or
lea
fsubl
push
rorb
or
adc
xchg
mov
inc
or
mov
cmp
xchg
inc
xchg
int3
add
pop
mov
or
ja
popl
mov
lock
movsl
add
push
push
and
add
adc
add
adc
pop
push
pusha
cmpb
and
fists
or
inc
jle
or
ret
popa
shll
adc
decb
mov
mov
xor
inc
in
inc
iret
mov
in
call
nop
push
mov
or
pop
xchg
shlb
push
xor
rcr
fisubs
loopne
xor
jle
cmp
add
or
xchg
add
add
fs
sbb
push
or
or
cmp
dec
sbb
xchg
addps
adc
sbb
and
inc
jb
cltd
xor
dec
sbb
or
pusha
sub
xchg
insb
sbb
insl
xchg
and
jo
sbb
scas
lods
push
push
xor
xorb
xorl
dec
xchg
adc
and
mov
cmpsl
mov
mov
xlat
leave
sbb
dec
xchg
clc
pop
test
or
arpl
adc
cmp
cmp
xchg
xor
sub
and
mov
or
cld
xchg
add
dec
call
inc
mov
adc
and
dec
enter
rolb
mov
movsb
and
dec
xchg
xor
test
push
dec
and
dec
inc
xchg
sub
and
pop
rolb
call
xchg
add
jg
add
int
fwait
pushf
adc
icebp
jmp
push
and
push
pop
std
mov
inc
std
or
cs
std
test
add
popf
push
inc
fiaddl
push
dec
cmp
xchg
mov
or
xchg
repz
loope
xor
dec
dec
insl
xchg
xor
cmp
mov
mov
shll
dec
adc
enter
insb
and
add
push
or
cmp
js
gs
test
lods
sub
mov
xor
inc
push
add
fwait
push
hlt
mov
mov
mov
push
push
add
stos
rolb
clc
dec
add
jecxz
dec
add
loop
cmp
push
shl
clc
or
xchg
jl
inc
or
inc
decb
sbb
xor
and
mov
clc
mov
or
or
push
mov
sub
sbb
daa
addr16
xchg
push
add
int3
test
sub
adc
push
add
sub
inc
add
mov
mov
add
leave
icebp
sbb
sub
jmp
dec
and
cmp
mov
push
or
xchg
dec
or
insb
and
mov
sub
add
adc
cs
pushf
adc
dec
addl
xchg
cmc
inc
rolb
inc
adc
loop
insb
and
add
or
or
roll
xchg
leave
icebp
jle
sbb
dec
daa
sbb
push
mulb
xor
std
or
jne
xchg
inc
imul
jne
fadds
cmp
ljmp
push
inc
pop
cmp
pusha
mov
mov
pop
lock
hlt
jbe
sbb
inc
clc
sbbl
mov
movzwl
add
fidivs
aas
ret
xchg
push
addb
mov
les
add
lcall
add
pop
jb
push
enter
mov
mov
sahf
int
adc
lcall
and
in
int3
adc
inc
adc
push
push
add
test
mov
lcall
push
in
push
call
nop
lock
aas
push
into
dec
pop
or
xchg
hlt
xor
inc
sbb
push
push
je
je,pt
stos
in
xchg
push
in
adc
inc
insb
dec
inc
xchg
adc
stos
into
in
addr16
cmp
mov
xchg
and
and
jmp
aas
mov
cmp
scas
add
adc
pop
adc
jne
jmp
and
add
pop
call
add
jmp
push
cmp
cltd
dec
imul
movlps
es
xor
push
andb
push
adc
inc
outsb
adc
mov
or
sbb
clc
nop
sbb
or
and
fxch
cmp
push
mov
mov
sti
jnp
and
cli
lret
add
push
and
ret
push
and
lock
jl
cmp
imul
push
insb
call
add
dec
bound
add
jnp
mov
dec
cmp
xchg
sub
add
cmp
xacquire
push
and
clc
imul
adc
xchg
mulb
out
adc
add
cwtl
pop
stos
arpl
cmp
or
xchg
jmp
xor
lea
sbbb
pop
mov
clc
sub
sahf
add
push
pop
or
int3
es
sbb
mov
movsl
add
cmpl
push
jae
popf
or
adc
push
sbb
mov
push
xor
xchg
aaa
sub
leave
jl
cmp
mov
xchg
sub
or
pop
stos
test
cmp
xchg
push
jmp
or
nop
or
mov
mov
aaa
or
gs
adc
xchg
mov
mov
test
in
loope
dec
in
shrl
and
shrl
xor
sbb
mov
pushf
add
sub
call
jne
jbe
adc
and
stos
push
jne
mov
sti
faddl
cs
imul
mov
andl
in
loopne
in
mov
inc
scas
adc
in
mov
push
cmpsb
js
cmp
gs
sub
lcall
fisubs
call
mov
push
lods
ret
or
xlat
or
fidivs
xchg
jecxz
shl
or
lds
adc
add
ja
or
jns
mov
add
je
cmp
and
add
adc
ljmp
je
mov
nop
call
push
mov
in
pusha
xor
divl
or
jbe
repz
jp
jp
test
out
xchg
stc
or
daa
cmp
mov
sbb
rcrb
out
push
push
cmpb
fidivs
xor
adc
cmp
add
push
xor
rcll
scas
xor
jno
add
in
or
shr
mov
cmp
push
test
xor
push
xor
xlat
dec
sbb
xor
push
pop
fwait
mov
fbstp
jbe
daa
cld
mov
inc
and
shl
int
adc
jecxz
stos
dec
shrb
dec
add
and
mov
cmp
xchg
add
loop
andb
dec
sbb
dec
jne
add
nop
push
mov
cmpb
add
mov
jmp
adc
dec
mov
inc
push
cld
js
cmp
inc
faddl
push
hlt
orl
xchg
clc
fdivrs
mov
jp
xor
and
sub
nop
in
test
xchg
push
lock
xor
popa
ss
xor
lea
in
sub
mov
dec
and
call
push
call
rolb
push
pop
shlb
loope
cmp
and
dec
or
push
lcall
dec
or
icebp
fs
jmp
ret
adc
add
jle
mov
cmp
jne
js
cmp
inc
mov
add
push
adc
cmp
je
dec
sbb
test
cmp
nop
mov
testb
and
inc
shll
mov
lcall
data16
je
mov
adc
xor
and
js
push
or
shl
or
adc
jns
stos
or
and
pop
inc
cmp
je
inc
jge
ja
rclb
in
adc
sub
sub
mov
imul
adc
mov
add
call
shl
push
clc
mov
mov
mov
iret
pop
xor
xor
dec
xchg
adc
leave
push
aas
std
add
std
out
scas
mov
mov
push
or
add
push
xor
pushf
sub
inc
in
test
sbb
cltd
pop
add
mov
adc
pop
lret
dec
jne
call
dec
jecxz
mov
ljmp
cli
scas
push
ret
movl
popf
push
fisttpll
das
shll
sub
dec
push
jo
nop
xor
dec
add
cli
xchg
je
push
aad
xor
call
adc
mov
cmpsl
push
rolb
dec
iret
dec
mov
pop
test
mov
mov
dec
sub
pop
les
push
int3
pushf
dec
pmulhuw
pop
fmuls
xor
jmp
pushf
shr
xor
data16
fs
popa
iret
jle
sub
mulb
fsubr
stc
test
xor
xor
popa
in
data16
mov
lret
inc
lea
inc
movsl
rcrl
cmp
push
mov
dec
rclb
iret
lods
push
xchg
push
lods
xor
xchg
xchg
add
xor
test
pusha
mov
sub
lret
and
faddl
xor
xchg
inc
shll
leave
enter
push
and
sbb
insb
push
pop
in
mov
dec
popa
push
mov
sbb
lret
mov
sub
cmp
mov
mov
mov
fcmovnb
test
jg
jge
mov
and
mov
inc
inc
sub
aam
rclb
and
fsubl
push
cmc
insl
aaa
sub
lea
cltd
sub
sbb
add
adc
push
loopne
cmp
dec
jl
jg
mov
testb
rclb
cwtl
sub
pop
xor
rcrl
lea
pop
pop
push
insb
fcomps
xor
inc
mov
cmpsb
inc
sbb
sbb
inc
cmp
decb
mov
lods
inc
aas
lret
in
inc
or
clc
mov
ret
xor
das
xor
lods
hlt
mov
xor
xchg
and
cmp
andl
adc
jae
call
sub
lods
add
or
xchg
sbb
iret
push
jne
jmp
mov
xor
rolb
icebp
mov
cmp
pop
mov
in
je
es
inc
mov
rcll
sarb
xchg
adc
pop
dec
mov
je
push
adcl
sub
push
dec
mov
in
sub
jbe
add
add
in
inc
mov
xor
dec
adc
int
sbb
stos
xchg
enter
pop
test
cmpsb
sbb
clc
pop
mov
clc
lret
or
rol
ljmp
cltd
test
mov
adc
ret
popf
sbb
xchg
or
shlb
sti
inc
xor
sub
jp
push
xor
clc
mov
jb
inc
dec
mov
or
cli
adc
push
and
adc
out
test
ret
dec
dec
insl
lods
repnz
sti
adc
jmp
stos
fldl
imul
cs
jno
adc
sbb
fcomps
in
aaa
adc
sbb
insl
push
mov
add
out
push
xor
imul
popa
rorb
gs
aaa
xor
insl
sub
pop
push
push
pop
mov
mov
jle
xchg
and
push
movsb
call
dec
cli
dec
mov
and
xor
cmp
and
xor
ret
call
pop
mov
int3
lea
add
mov
dec
cmp
xchg
test
dec
fcoms
cmpsl
hlt
out
pushf
movsb
loopne
out
stos
or
leave
sbb
movhlps
cs
fldenv
data16
push
pop
mov
dec
push
mov
dec
push
mov
fdivl
in
sbb
hlt
push
stos
adc
mov
outsb
adc
and
push
and
es
xor
xchg
dec
nop
mov
or
jmp
popf
movsl
jb
repz
add
bound
cmp
orb
dec
or
or
adcl
or
sbb
mov
add
sub
pop
repz
push
xchg
pop
push
inc
mov
or
adc
nop
insb
dec
and
dec
sbb
and
jne
push
outsb
or
out
out
cld
dec
hlt
or
mov
sbb
adc
xchg
jns
push
adc
and
test
add
pop
push
out
xor
mov
pop
inc
in
push
mov
pop
adc
xor
cmp
jmp
mov
and
inc
je
pop
ret
push
shrl
fs
clc
jo
or
fs
sub
cmp
ret
sbb
xor
aaa
and
sub
rcll
xchg
xchg
in
inc
hlt
jne
lea
ret
imul
xchg
pop
fcomp
xchg
sub
and
mov
pop
jne
or
stc
dec
cmpsl
jo
push
sbb
push
pop
loopne
loopne
fsubrl
jmp
dec
insb
movsl
pop
and
dec
sbb
inc
sub
jmp
cmpsb
scas
lock
test
or
mov
sub
call
pop
sub
or
aaa
sub
test
add
ftst
adcb
test
mov
test
mov
adc
jecxz
sbbb
divl
test
jmp
mov
adc
or
add
xchg
or
jmp
or
sub
subb
fdivr
or
call
cld
push
jnp
jo
push
and
sub
movb
mov
rol
fadds
sbb
inc
add
outsl
xor
mov
dec
es
lret
cmpsb
lret
xor
sbb
sbb
js
roll
loopne
cld
je
mov
movsl
arpl
rolb
pop
pop
pop
inc
lret
out
test
sbb
xchg
adc
ret
cmp
push
aas
adc
es
test
inc
and
push
in
dec
inc
fpatan
or
test
in
adc
and
in
hlt
enter
or
mov
int
inc
add
xor
sbb
or
iret
inc
pop
cmp
in
or
hlt
lahf
mov
pop
roll
insb
mov
in
sub
xchg
cld
int
mov
inc
int
and
xchg
enter
sub
jne
lds
xchg
sub
pushf
sub
test
sbb
out
ss
or
push
lea
aad
inc
add
ljmp
aam
ds
adc
inc
inc
in
popa
jl
push
jb
mov
rolb
xor
xor
or
popf
pop
bound
adc
pusha
push
adcb
mov
fiaddl
pusha
add
mov
add
in
push
pusha
addb
mov
pusha
add
jne
cmc
adc
rcrb
sbb
jmp
xchg
push
pop
jae
sbb
add
addl
adc
xor
jo
ja
or
jl
and
loopne
cvtps2pi
dec
test
adc
int
sub
pushf
push
push
into
aam
add
call
or
cwtl
mov
aas
je
ja
fdivs
sub
movsb
movsl
cld
sysenter
lea
sub
pop
sbb
mov
xor
fiaddl
imul
pop
adc
cmp
jbe
mov
xchg
inc
jmp
aad
inc
add
pop
lds
jmp
dec
cmp
jmp
or
dec
cmc
sub
xchg
shlb
xchg
sbb
and
push
or
js
in
test
jmp
xor
mov
je
nop
and
cmc
push
je
and
test
jbe
testb
dec
notl
popa
call
push
inc
or
jo
add
insb
test
shlb
add
ret
loop
cmp
xlat
dec
mov
call
push
mov
xchg
repz
and
or
or
add
jl
or
or
shrb
jno
xchg
lea
sbb
pop
subl
cmp
or
or
cs
sbb
cmpl
add
enter
adcl
adc
or
daa
ret
sbb
sbb
int3
push
ss
movsb
adc
add
dec
push
jl
lods
mov
dec
xchg
jne
test
sub
out
pop
cld
fsubrl
add
das
pop
mov
mov
fwait
lret
inc
mov
mov
mov
fcomp
pop
and
adc
and
or
inc
jo
cmp
push
fprem1
mov
nop
sbb
nop
les
or
and
jmp
stc
sub
pusha
push
inc
fs
adc
add
push
das
xchg
or
adc
cs
jl
movsb
sbb
sub
pop
dec
insb
xchg
test
sahf
inc
mov
mov
adc
and
inc
or
fisttpll
loop
dec
bound
stos
dec
enter
sub
sub
or
push
and
dec
mov
mov
push
nop
and
dec
inc
pusha
jb
mov
mov
cltd
push
test
sub
fidivs
not
shl
jns
das
fmull
pop
sub
or
jbe
cmpsb
and
sbb
fadd
xor
dec
push
push
inc
push
jo
imul
sub
out
aad
in
push
lahf
shrb
inc
pop
in
xchg
jl
bound
xchg
inc
iret
or
adc
cmp
jb
imul
jne
sti
lahf
insl
push
fs
fs
ret
jg
scas
pop
xor
jo
pop
ja
je
pop
js
ss
xor
ds
shrl
bound
add
mov
shll
bound
lea
jne
sbb
xor
xor
mov
cld
mov
shrb
add
daa
push
pop
pushf
clc
daa
cmp
pop
pop
pop
dec
hlt
pop
push
inc
scas
adc
inc
loope
outsl
push
insb
sbb
test
pop
stos
add
imul
xor
popa
je
xchg
push
out
xorps
add
pop
cltd
push
jne
jns
out
lahf
cli
sbb
fldenv
mov
stos
mov
ret
adc
push
imul
add
inc
lods
inc
pop
lock
mov
mov
xor
sbb
push
flds
dec
sbb
inc
aam
pop
or
int3
int
push
xchg
xor
sub
inc
inc
jns
lret
mov
dec
outsl
aas
mov
inc
pop
pop
lods
fists
adc
decb
or
ret
out
shll
add
push
into
push
std
mov
pop
add
ds
aaa
xchg
scas
bt
cmp
lods
mov
lcall
out
or
push
sub
inc
push
test
pop
or
sahf
adc
push
bnd
sbb
outsl
lret
inc
push
jb
mov
fs
sub
leave
mov
add
sbb
mov
xchg
cmpl
rsqrtps
inc
imul
add
ficoms
mov
dec
repnz
addb
push
xor
aad
mov
inc
loopne
je
jo
add
pop
sub
inc
sub
and
insb
cltd
push
stos
xchg
data16
pop
mov
je
sti
xor
lret
mov
sub
fsubr
jo
inc
and
jne
movsb
jae
push
out
sbb
add
lcall
shrb
add
lods
lock
icebp
lahf
test
iret
inc
addr16
sub
jo
push
outsb
and
out
loopne
jae
dec
dec
adc
sbb
nop
inc
test
sub
fs
addb
adc
imul
lret
push
jno
push
lock
lea
nop
and
mov
pop
insl
bound
jle
xor
xor
push
mov
and
mov
mulb
dec
and
jo
cmp
jo
sub
leave
or
jo
dec
sub
mov
cmp
push
adc
sub
jno
mov
and
mov
dec
clc
inc
adc
dec
inc
pop
dec
call
mov
push
or
adcl
outsl
xchg
nop
mov
loop
sbb
notl
sahf
rolb
jecxz
icebp
lock
hlt
sbb
cmp
cmp
cmp
push
cmp
pushf
aas
mov
push
or
adc
mov
dec
mov
aam
out
ret
add
mov
movsb
sarl
in
cmp
cmp
cmp
and
sub
iret
mov
mov
iret
jecxz
ljmp
aas
inc
xchg
push
mov
push
add
add
pop
leave
dec
rcll
jg
xchg
jmp
jb
je
jbe
js
jp
sbb
xor
sahf
stos
push
mov
mov
daa
mov
shll
fldenv
cld
loope
xor
leave
sbb
sub
incl
jo
jp
xchg
out
out
out
out
out
out
out
out
out
out
loope
xor
daa
fnstenv
loope
jmp
pop
stc
cld
clc
add
add
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
sbb
aaa
pop
popf
arpl
nop
lahf
mov
lahf
xchg
fisttpll
out
iret
cmc
iret
cld
ret
or
addr16
mov
das
mov
daa
in
call
fdivp
in
or
cmp
cmp
cmp
dec
cmp
loope
lock
stc
push
sbb
dec
fstps
insl
jmp
in
stc
sti
cld
add
mov
xor
cmp
lea
cltd
cmp
ds
aas
into
aas
sarl
jecxz
call
aas
decb
add
adc
mov
dec
xor
dec
iret
mov
xchg
iret
lahf
iret
scas
iret
leave
iret
in
ret
or
pop
xchg
and
sub
rcrl
fwait
rep
repz
repnz
xchg
sbb
addr16
xchg
mov
lahf
out
out
out
out
out
out
out
out
out
out
out
pop
xor
lcall
aam
icebp
out
loope
ss
cmp
cmp
cmp
mov
xchg
aas
mov
push
xchg
cwtl
dec
lahf
mov
xchg
or
pop
sub
inc
mov
adc
leave
mov
or
mov
xchg
inc
push
stos
push
mov
xchg
aas
dec
fistl
movsb
add
xor
outsb
andb
push
dec
pushf
sbb
orb
cmp
or
bound
incl
dec
insl
add
mov
jae
jo
popa
and
and
addb
xchg
push
fadds
push
push
mov
js
mov
gs
mov
subb
mov
add
push
jmp
pop
xchg
dec
sarb
cmp
sarb
xchg
push
mov
inc
cmp
sub
cmpsl
ss
push
xor
xor
cs
rclb
lret
mov
or
sbb
and
popa
dec
sub
sub
stos
jns
mov
and
repnz
ds
mov
or
shrb
cltd
inc
sub
xor
or
test
dec
adc
repz
pop
popf
test
in
or
xchg
ds
or
dec
insb
je
lods
test
aas
push
mov
outsb
xchg
cmp
mov
or
mov
jne
inc
dec
movsl
dec
and
insb
outsl
and
arpl
je
mov
test
push
inc
cmp
sub
pushf
push
xorl
js
xor
push
push
and
dec
sahf
mov
lcall
inc
dec
inc
mov
or
scas
in
cmp
or
xor
popf
dec
sbb
leave
lahf
out
add
and
sub
lock
jmp
std
loope
xor
fldenv
xlat
ret
add
popa
xchg
xchg
mov
int
aam
sti
xchg
or
and
call
hlt
sar
fdivr
loope
out
cld
add
push
cmp
cmp
push
aas
pop
aas
pop
aas
test
xchg
aas
mov
ss
imul
orl
cmp
dec
call
movsl
xchg
xchg
inc
and
cmpsl
push
mov
xchg
out
out
out
xlat
dec
imull
mov
xchg
cmpsl
loope
lock
out
loope
cmp
leave
adc
sbb
push
loope
jmp
cmp
aas
stc
inc
stc
dec
stc
push
stc
pop
stc
push
stc
mov
cltd
stc
enter
clc
mov
dec
push
andl
xchg
repnz
jb
push
cmp
loopne
push
aas
jg
xchg
lahf
jl
outsb
add
xor
js
sbb
xor
sub
push
cld
pop
cld
fs
jle
mov
xchg
xchg
xchg
out
loope
xor
jne
add
lock
dec
xchg
add
or
gs
and
sub
mov
add
leave
ss
xchg
inc
dec
jmp
shll
ja
mov
xor
dec
stos
test
mov
cmp
dec
aad
xchg
jo
jb
je
jbe
js
jp
jl
inc
imul
decb
in
call
xchg
hlt
cld
out
cld
cmp
xchg
cmp
xor
cmp
dec
jb
leave
iret
iret
pavgw
repz
std
movb
add
push
cmp
cmp
je
lea
pop
stos
and
into
cld
and
cmp
cmp
cmp
cmp
loopne
ljmp
mov
jl
lods
dec
mov
ror
ret
push
cmp
sub
mov
mov
repz
repz
lock
ds
in
call
aas
in
inc
inc
fmuls
cmp
and
cmp
inc
cmp
cmp
stc
push
aaa
xor
cmp
cmp
push
add
sub
test
repnz
or
sbb
mov
push
jp
or
iret
test
iret
ret
iret
ror
in
or
xchg
and
push
jns
mov
stc
stc
clc
adc
iret
push
punpckhbw
in
ret
adc
sub
pop
push
aaa
mov
popa
sbb
pusha
leave
ja
test
sahf
loope
jmp
fyl2xp1
in
stc
idiv
pop
cmp
pop
xor
imul
jle
jle
sbb
cmp
jg
jb
lock
cmp
leave
pop
shll
addr16
je
xchg
mov
cmp
nop
daa
xchg
popa
js
loope
jmp
sti
clc
adc
and
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
xchg
repnz
xor
leave
daa
shrl
inc
add
push
clc
jnp
lods
cld
mov
mov
cld
cld
enter
sar
sbb
xor
cmp
sub
cmp
int
fisttpl
push
xor
insl
lahf
mov
ds
aas
lret
aas
sarl
fistpll
in
lock
clc
jo
xor
cmp
cmp
cmp
cmp
push
aas
pop
aas
xchg
mov
jecxz
xor
cld
push
pop
xor
sub
test
xchg
push
mov
mov
lahf
ljmp
sbb
dec
loop
jbe
pop
bound
jge
rcll
data16
sti
mov
xchg
rcrl
repz
mov
xlat
stc
icebp
clc
add
jb
je
jbe
adc
cmp
dec
enter
jg
iret
cmpsl
iret
scas
iret
mov
cmp
pop
mov
ret
adc
jecxz
rep
repz
mov
lock
insb
in
call
cmp
cmp
cmp
es
sub
pusha
or
cvtps2pd
dec
xor
mov
lock
hlt
or
cmp
push
cmp
push
stc
cwtl
fs
cld
lret
jle
jle
sbb
xor
idivb
jp
jl
jle
jle
jle
jle
jle
jle
pop
leave
push
pop
sbb
xchg
lahf
mov
rcrl
pop
dec
aaa
sbb
addr16
xchg
out
in
cld
mov
sbb
into
data16
inc
iret
inc
cmovs
clc
movsb
mov
pop
pop
mov
mov
mov
sbb
and
addr16
xchg
push
cs
in
cld
lods
aas
fdivrs
fdivrl
loopne
in
call
pusha
sbb
fldl
loopne
lahf
add
mov
jb,pt
dec
xchg
ss
scas
clc
mov
mov
pop
iret
insb
aas
cld
jo
jo
mov
leave
dec
rcrl
ds
sbb
popf
sbb
xchg
push
stos
dec
sub
push
iret
out
ret
and
cmpsb
sbb
cld
xchg
xor
pop
inc
jo
xor
adc
push
or
lock
sbb
xor
cmp
psraw
mov
pushf
setge
sbb
pusha
lahf
js
cwtl
lahf
lock
aaa
cmp
cmp
in
test
jmp
xorb
int
pusha
sbb
test
loope
jmp
pop
and
adc
xchg
rcrb
movsb
and
cmp
scas
fdecstp
loope
call
je
pop
in
xchg
rclb
ja
scas
call
and
sbb
xor
mov
adc
pusha
xor
xchg
loopne
lock
ret
or
sub
sbb
cmp
inc
loope
dec
stc
pop
sub
aas
jl
test
cmp
xor
sbb
and
nop
aaa
jb
loopne
loope
and
xchg
lods
adc
pop
add
xor
js
sbb
xor
adc
push
and
sub
xor
popf
iret
inc
iret
dec
iret
push
iret
pop
iret
fs
insb
iret
je
jl
test
mov
nop
iret
cwtl
aam
sub
push
jp
jl
jle
nop
bnd
pop
je
mov
popf
nop
sbb
sarb
push
xor
inc
iret
inc
cmovs
mov
call
pusha
out
out
out
out
out
out
in
shr
test
mov
mov
xchg
stc
cwtl
stc
pushf
stc
mov
stc
lods
xor
mov
cli
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
clc
cmp
movsl
daa
or
sbb
xchg
and
mov
add
push
repnz
cmp
sub
add
sbb
cmp
cmp
inc
mov
adc
ds
sbb
ds
push
adc
adc
adc
or
push
push
loopne
adc
mov
or
xlat
push
push
push
sbbb
sbb
sub
pop
push
add
sub
sub
aad
lcall
push
test
adc
test
mov
pop
xchg
mov
lock
jp
push
adc
mov
and
and
gs
cld
cmp
add
push
cmpb
add
imul
sub
adc
lcall
cltd
mov
adc
sbb
add
or
inc
popf
jae
xchg
fsubrs
nop
mov
push
mov
sti
push
fcmovnbe
adc
adc
pop
sti
ret
std
mov
sbb
orb
cmpl
inc
cmp
jae
xor
jmp
cmp
add
adc
xchg
sbb
cmp
mov
je
pop
cmpl
add
jl
dec
mov
in
test
std
xchg
inc
or
add
jl
fsubl
and
call
arpl
adc
cmpb
je
mov
ds
add
out
mov
mov
je
pop
stc
inc
aas
call
xlat
adc
and
data16
cmc
outsl
or
jnp
pop
pop
out
shrb
pop
mov
mov
test
xchg
jge
or
push
inc
adc
into
stos
add
cmp
xor
mov
push
outsl
mov
or
xor
mov
insb
inc
or
das
addl
jbe
and
push
push
cmp
sbb
cs
jne
out
ja
xchg
pop
mov
addl
mov
push
in
and
clc
movsl
ret
ret
lea
lods
or
call
leave
jne
mov
push
push
inc
dec
adc
dec
inc
adc
mov
dec
add
int
lea
jmp
push
or
adc
ss
shll
data16
lock
nop
inc
and
add
and
mov
push
adc
sbb
mov
out
or
mov
push
xor
mov
inc
xlat
xor
pop
dec
cmc
dec
cmp
das
repnz
and
sub
push
and
je
xchg
sbb
lss
jne
or
and
dec
mov
mov
cld
hlt
push
pop
jmp
jb
outsl
mov
insl
test
jle
mov
clc
out
lock
push
dec
loopne
outsl
loopne
push
and
call
jecxz
repnz
out
cmp
test
jae
xchg
sub
or
cmpsl
or
push
add
nop
jno
cwtl
mov
add
mov
sbb
dec
mov
pop
push
adc
pop
loop
ljmp
sbb
jmp
imull
cmp
inc
cmpsl
push
and
cmp
push
mov
jne
jbe
bound
and
jns
imul
sbb
pusha
push
inc
jl
test
je
xchg
add
or
xor
cld
push
orl
rcrb
pop
push
movsb
mov
inc
sub
pop
iret
cmp
xor
cmp
hlt
call
ja
cltd
cmp
add
or
mov
cld
xor
sbb
jne
dec
and
stc
enter
mov
adc
sti
pop
int3
jb
and
mov
add
in
leave
sbbb
cmpb
mov
out
adc
lock
or
pop
loope
inc
or
rcll
ja
cmp
ret
or
je
ss
push
ror
or
jg
bound
rcll
and
mov
aas
dec
test
cmp
cmp
icebp
mov
rorb
jae
shll
push
jg
jmp
xchg
mov
cmp
lock
popa
adc
insl
push
mov
das
or
inc
hlt
jbe
iret
movsb
lock
aad
in
test
outsb
mov
adc
lcall
add
in
fistps
mov
dec
inc
test
fbld
loopne
call
pushf
and
cmp
add
push
push
lret
pop
movsb
mov
mov
jl
or
idivb
or
inc
dec
jle
mov
push
or
shrb
jno
mov
inc
outsb
add
jecxz
std
rcrl
sub
push
adc
mull
push
fsubrs
push
cltd
mov
mov
xchg
aad
in
lret
fwait
les
movsb
push
xchg
sti
ret
cmc
or
inc
cmp
negl
ds
cs
fs
lods
out
shrb
or
cmpsb
mov
pusha
aaa
sub
loop
mov
loopne
sti
fs
mov
push
xor
ret
das
mov
rorl
shrl
roll
add
add
mov
shlb
push
inc
sbbl
sbb
inc
mov
insl
dec
cmp
mov
mov
and
test
jne
pop
adc
je
mov
pop
aaa
jbe
dec
mov
into
push
push
movsb
pop
cld
adc
aaa
push
nop
sub
jmp
stos
test
xchg
xor
dec
lea
add
mov
or
pop
ficoms
lds
mov
jle
adc
add
mov
adc
pop
sub
ret
inc
shlb
rclb
mov
or
jne
or
sub
and
lods
les
test
adcl
lods
aad
xchg
and
lods
sbb
mov
movb
inc
jo
aam
stos
fistl
and
or
lds
inc
dec
cli
sar
data16
lea
jb
adc
or
test
push
and
mov
mov
movsb
into
and
lock
dec
push
or
push
pop
fstl
cmp
and
addb
inc
or
cmp
adc
sbb
addr16
pop
notl
adc
fisubs
and
mov
scas
ret
movzwl
mov
add
in
out
xor
icebp
push
mov
ret
repz
fwait
dec
in
into
push
push
mov
add
add
xchg
sti
xchg
pop
xchg
xchg
xor
mov
dec
out
sub
adc
jmp
movsl
lahf
jg
pushf
movsb
mov
adc
mov
leave
or
lds
lock
pop
jno
or
ret
call
or
pop
adc
and
cmc
popf
repnz
int
nop
jmp
add
or
xchg
addl
or
and
adc
cwtl
push
loope
inc
mov
fs
sbbb
sti
cltd
iret
and
std
inc
pop
jmp
inc
sbb
cmpsb
and
sbb
push
sub
lret
mov
cmp
sub
sub
or
in
lods
sbb
out
popf
loope
call
jnp
out
add
test
adc
mov
addr16
sub
dec
addr16
loop
repz
movb
pop
mov
lahf
mov
add
daa
lods
jmp
mov
mov
xor
pop
push
jg
pusha
mov
sub
sbb
ds
push
or
jecxz
and
adc
or
out
xchg
inc
ja
je
leave
outsl
mov
pop
pop
insl
ljmp
or
xchg
scas
fisubl
adc
pop
orb
xchg
std
cltd
dec
adcb
jns
inc
push
jp
inc
xchg
push
xlat
out
and
pop
das
inc
lret
pushf
push
icebp
adc
sbb
push
xchg
jno
mov
adc
sbbb
or
xchg
add
mov
and
mov
mov
dec
cmc
push
leave
pop
mov
push
push
jp
xlat
test
pop
pop
cld
inc
pop
cmp
add
ret
push
das
sub
push
mov
xor
fwait
jle
push
inc
sbb
pop
and
and
add
adc
mov
push
push
mov
lea
pop
loopne
fnstenv
divb
sar
mov
adc
out
push
mov
loop
mov
std
movsl
ja
push
dec
ret
cli
sub
and
push
inc
cli
pushl
jle
mov
xor
or
pusha
lea
je
or
xor
cwtl
or
ret
sbb
hlt
adc
test
xchg
mov
movsl
add
in
mov
sti
rolb
sti
mov
je
pop
lea
add
decb
les
sbb
iret
add
or
xlat
call
outsl
jmp
inc
mov
jne
cltd
leave
xchg
and
rolb
push
sbb
call
ficoms
jmp
mov
mov
cmpl
fdivs
lods
ficomps
adc
xchg
xchg
jmp
mov
nop
adc
scas
adc
or
mov
and
xchg
or
push
sub
mov
hlt
lock
push
push
push
stos
nop
xchg
sub
les
mov
xor
pop
sub
sbb
mov
xchg
cli
adc
add
bnd
fisttps
pop
mov
push
or
add
or
inc
add
mov
sbb
in
out
xor
adc
add
inc
xor
rclb
call
adc
testl
pushl
jno
push
sbb
test
xor
mov
push
mov
popa
sbb
cmp
cmp
gs
xchg
and
repnz
xor
xchg
xchg
fbld
mov
sub
insb
mov
inc
add
xor
frstor
rol
mov
xchg
movsb
dec
in
pushf
and
inc
loop
jl
divb
pop
cmpl
add
inc
int3
in
xlat
mov
cs
repnz
ja
repnz
fstpt
shlb
lret
sbb
idivl
stos
dec
std
adc
jle
in
sub
push
and
cmp
out
mov
sbb
scas
jno
xchg
jbe
std
jo
into
jne
arpl
jae
push
pop
ja
pop
push
xchg
dec
mov
push
imul
inc
jb
insb
jmp
push
outsl
xorl
pop
cli
and
sbb
pushf
dec
adc
add
dec
int3
cmp
stos
push
outsl
sbb
jge
mov
fldlg2
push
sbb
pop
push
pop
jae
sub
les
push
inc
jle
inc
js
inc
xchg
sbb
cld
mov
adc
int
addr16
push
adcb
movsb
push
dec
cmp
inc
jne
sbb
mov
lods
dec
mov
std
jo
inc
cmp
outsb
sbb
add
roll
fistpl
sub
jmp
shll
push
loop
sub
push
mov
les
hlt
fstl
xor
jae
add
insb
and
pop
dec
test
adc
inc
ds
mov
push
xchg
stos
and
out
hlt
and
pop
add
and
dec
sub
inc
and
pusha
jp
mov
stos
and
dec
aam
fisubs
repnz
and
inc
xor
loopne
xchg
les
push
cwtl
cmp
mov
outsb
inc
inc
add
or
fs
add
pushf
or
fistpll
shll
loopne
xor
fs
sub
inc
xchg
adc
dec
mov
int
or
push
pop
movsb
inc
je
push
sub
inc
or
and
sub
or
cmpsb
push
adcl
push
aad
sub
xchg
nop
bnd
hlt
dec
sub
xor
push
fcmovu
sub
cwtl
int
cmp
dec
shll
xchg
andb
push
sbb
and
push
and
mov
nop
and
dec
adc
push
clc
push
push
adc
aam
cmp
outsl
int3
clc
je
gs
imul
adc
dec
inc
mov
cwtl
push
push
sub
sbb
add
mov
cmp
sbb
jae
popa
js
mov
jns
imul
lret
or
push
sub
jae
jg
aaa
xchg
adc
mov
adc
out
adc
daa
jae
aam
mov
in
push
enter
or
aam
mov
js
jno
jg
pop
mov
inc
mov
jne
loop
push
int
sbbb
adc
mov
pop
xor
mov
mov
jge
add
mov
adc
pop
into
insb
and
xchg
notb
cwtl
or
insl
add
xchg
mov
sahf
jbe
fsubl
jbe
fldl
dec
movsl
jbe
dec
std
addr16
mov
mov
push
les
sub
lea
stc
mov
mov
arpl
xchg
mov
pop
adc
sub
test
dec
add
dec
in
mov
cld
repnz
push
popa
and
mov
lds
xor
dec
movsl
out
ror
addr16
stos
mov
mov
adc
push
dec
clc
push
fbstp
dec
sarb
into
mov
or
mov
mov
and
scas
mov
jp
outsb
lret
mov
es
xor
push
push
push
dec
popaw
stos
mov
fcomi
in
pop
dec
ja
popf
js
ss
lea
je
inc
imul
lcall
nop
mov
dec
jmp
test
sbb
fdivr
adc
mov
jbe
jl
cmp
push
leave
dec
pop
mov
inc
inc
ljmp
enter
or
mov
or
add
add
mov
mov
test
dec
inc
xor
and
add
dec
mov
sub
mov
leave
aas
in
daa
jo
in
in
xor
add
xor
cmp
pop
xor
xchg
push
jl
push
and
arpl
sub
inc
mov
addr16
test
and
out
cmp
xor
push
xor
xor
xor
cmp
mov
scas
push
push
es
call
push
push
out
push
push
ds
cmp
dec
loopne
test
adc
inc
test
dec
or
addr16
orb
stos
jne
lcall
in
push
xchg
mov
or
jl
xchg
mov
bound
fstpt
clc
dec
and
push
sub
cmpsb
jle
jle
aas
dec
ss
in
mov
adc
cmp
cmp
call
clc
js
sub
inc
js
jp
jl
pop
xorl
add
outsl
sarb
scas
in
jmp
mov
rcl
jecxz
lock
and
sub
lock
push
jl
xchg
cld
movsl
cld
mov
stc
out
stc
pop
outsl
subb
pop
pusha
mov
lret
icebp
mov
adc
aaa
xlat
xchg
seto
pop
jb
mov
mov
ds
dec
jae
push
cld
nop
cmp
cmp
mov
inc
dec
pop
mov
outsl
vmwrite
lods
iret
mov
iret
fxch
repz
clc
ret
jp
xchg
addr16
shlb
mov
pop
fldl
cwtl
cmp
je
and
jmp
lock
iret
mov
into
lret
and
mov
mov
mov
push
cmp
cmp
cmp
jo
cmp
ds
lods
adc
lods
cmp
sub
inc
rolb
xorb
cmp
mov
jae
mov
or
push
pop
push
dec
push
adc
push
es
mov
pusha
mov
js
pop
outsb
push
push
add
sub
cmp
inc
and
sbb
adc
lret
jno
dec
arpl
or
jne
imul
sub
jbe
addr16
aas
bound
xchg
mov
dec
clc
and
adc
add
roll
xor
or
gs
das
testb
ror
or
es
cmpsb
adc
or
loop
test
inc
repnz
iret
arpl
clc
adc
movsl
and
ljmp
sbb
add
or
push
nop
xchg
pop
add
push
jmp
sbbl
jbe
or
addb
cmp
sub
adc
xor
push
mov
dec
mov
xor
push
cmp
dec
jge
insl
jl
xor
rcll
dec
and
jo
mov
inc
xchg
xchg
xchg
adc
jp
test
jns
jno
subl
jg
cmp
jne
imul
hlt
mov
testb
xchg
inc
or
xor
.byte
.byte
add
shlb
fs
add
fs
add
add
add
gs
add
add
add
add
add
and
add
popa
or
add
pop
add
cmp
add
add
movsl
inc
add
movsl
inc
add
add
inc
add
inc
add
je
or
je
or
xor
add
pop
pop
ret
mov
call
pushl
ret
call
pop
sub
add
ret
call
mov
call
pushl
ret
mov
call
pushl
ret
mov
call
pushl
ret
mov
call
pushl
ret
push
mov
push
push
lea
push
push
call
mov
add
pop
ret
mov
push
lea
push
pushl
push
call
push
push
push
call
pop
ret
push
mov
push
push
push
push
push
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
cmpl
jne
mov
push
pop
mov
mov
mov
cmpl
je
cmpl
je
pushl
pushl
pushl
call
pushl
mov
pushl
add
pushl
call
pushl
mov
pushl
add
pushl
call
cmpl
mov
jne
pushl
call
andl
pop
jmp
mov
add
call
mov
pop
pop
pop
leave
ret
pusha
mov
call
popa
ret
push
pushf
pusha
mov
call
popa
popf
ret
push
mov
push
push
mov
movl
call
pop
sub
add
cmpl
jne
mov
jmp
mov
mov
movl
call
pop
sub
add
mov
add
pop
leave
ret
push
pushf
pusha
mov
call
popa
popf
ret
push
mov
push
push
push
push
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
cmpl
mov
jne
push
call
xor
cmp
setne
mov
pushl
call
pop
push
mov
mov
add
push
call
cmpl
je
mov
add
add
cmpl
je
mov
mov
mov
sub
add
push
call
test
mov
jne
push
call
mov
mov
mov
sub
add
mov
test
je
test
je
movzwl
jmp
mov
sub
add
add
push
pushl
call
mov
add
jmp
addl
mov
cmpl
jne
mov
add
movl
mov
call
pop
sub
add
movzbl
shl
cmp
jne
andl
jmp
xor
cmp
jne
cmp
jne
pushl
push
pushl
call
andl
pushl
call
andl
pop
pop
pop
pop
leave
ret
int3
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
int3
int3
int3
mov
add
add
add
add
add
add
gs
add
fs
add
fs
add
gs
add
gs
add
add
fs
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
je
popa
insb
inc
jb
add
push
dec
inc
dec
xor
cs
insb
add
mov
jae
addr16
outsl
js
add
inc
push
xor
cs
insb
add
int3
jo
loopne
enter
cld
adc
dec
and
inc
ss
mov
data16
pop
cmpb
shlb
movsb
adc
add
cld
mov
inc
xchg
in
mov
add
shll
xor
bound
out
and
xchg
add
mov
cli
xchg
repnz
mov
add
jb
xor
jp
push
pop
cmc
cs
ljmp
push
fldcw
inc
cmpsl
loopne
mov
mov
add
inc
xchg
cli
or
incl
pop
sub
js
inc
push
add
fldcw
mov
sbb
or
add
sbb
inc
aam
call
sbb
dec
pop
sub
push
cmp
inc
cmp
cwtl
pop
out
stos
orb
int3
dec
das
push
pop
in
fidivrs
out
pusha
push
add
enter
shlb
sbb
inc
add
add
xor
add
sbb
sbb
pop
mov
adc
mov
arpl
clc
mov
in
push
xlat
aad
lods
and
ljmp
xchg
xchg
addl
jns
inc
add
xor
arpl
sub
lcall
jae
gs
mov
imul
pusha
jg
xor
add
popa
push
out
mov
sbb
insl
mov
xor
mov
add
fdivrl
cld
aad
loopne
xchg
sub
mov
pop
sub
sbb
mov
repnz
mov
add
in
push
insl
push
mov
hlt
movl
test
fs
stc
std
in
leave
mov
pop
add
insb
push
arpl
cmp
or
outsb
add
pop
adc
in
pusha
add
jb
addr16
add
add
add
std
test
or
insb
cwtl
mov
inc
leave
mov
lods
jecxz
fdivs
jne
filds
add
shrl
cmp
ficoms
nop
xlat
enter
sarb
and
les
iret
femms
movsl
mov
sub
mov
or
and
or
mov
jl
das
adc
pop
stos
sbb
data16
push
jno
add
mov
adc
pxor
mov
push
movsl
add
mov
call
js
stc
add
mov
cwtl
push
loope
or
cmp
add
hlt
push
imul
jge
add
xor
dec
xchg
cli
jnp
movsl
add
shl
adcb
pmaddwd
fnstenv
mov
ljmp
mov
bound
sub
rorl
pop
popa
mov
into
inc
sub
add
inc
movsl
fisttps
xlat
xchg
fadd
les
shll
jmp
fldcw
inc
mov
lods
sarb
add
in
add
pop
dec
add
stos
leave
jl
fnstsw
cmp
push
xchg
daa
adc
or
leave
and
test
add
aam
mov
add
stc
ficomps
leave
fldcw
jne
add
mov
test
pop
cmp
or
mov
mov
in
add
loop
add
cmp
imul
popf
adc
push
add
jae
or
test
add
push
or
dec
add
in
decl
xchg
daa
xor
pop
jge
mov
add
xchg
add
inc
add
imul
add
jno
insb
sbb
cld
imul
sbb
loopne
rorl
adc
sbb
outsl
fistpll
mov
mov
mov
aad
mov
sbb
mov
shll
cmp
fisttps
addr16
out
add
dec
add
fmuls
or
pusha
jp
inc
cmp
out
sbb
push
mov
loopne
outsb
xor
add
mov
add
mov
loop
push
int3
add
or
das
add
lds
cld
mov
mov
add
mov
add
iret
shlb
sub
scas
ficomps
mov
fs
es
pushf
mov
xchg
insl
add
aas
ss
jmp
addr16
jb
adc
add
adc
add
jnp
sbb
mov
fwait
mov
xchg
or
mov
fdivrl
pop
fisttpl
aam
roll
clc
mov
sbb
int
add
mul
ja
mov
addb
out
pusha
jle
push
ud0
cmp
pop
or
adc
scas
clc
jns
imul
insb
push
js
or
xlat
push
addl
ret
cmp
cmpsl
add
push
pusha
rorb
imul
dec
push
scas
add
pop
fldenv
filds
lock
aaa
push
loopne
test
fidivrs
mov
jmp
sbb
mov
lret
add
and
ss
testb
xlat
int
push
ficoms
add
and
jp
mov
dec
add
add
push
outsl
sub
mov
aas
or
sbb
pop
out
add
xor
hlt
bound
gs
add
movsb
add
scas
cs
mov
mov
or
mov
es
or
push
add
xor
mulb
sub
xor
int
bound
jne
add
mov
push
xor
loop
add
rcll
daa
adc
xor
cmp
jo
dec
sub
sbb
add
and
ret
jns
inc
push
in
outsl
je
gs
mov
test
mov
insl
and
jecxz
and
divb
in
or
and
sub
jo
aaa
cmp
bound
addr16
inc
ljmp
jae
fsubrl
fcoms
andl
outsb
imul
and
jge
out
outsl
fimull
out
lret
xchg
sbb
dec
cld
xchg
and
cmpsl
int
outsb
ret
or
sahf
push
in
inc
jno
shlb
push
popaw
imul
std
sbb
xchg
adc
sub
inc
outsb
out
out
int
ja
mov
lds
ffreep
ret
push
add
cld
push
cmp
call
jp
int3
add
and
or
sbb
aam
std
jno
sbb
pop
adc
shrb
push
adc
clc
enter
lods
sbb
enter
or
cmp
enter
add
xor
rclb
imul
pop
lret
fwait
push
loopne
test
in
cmp
sbb
or
ret
mov
push
jg
fcoml
inc
adc
jne
in
mov
pop
adc
mov
add
fists
pop
lds
or
mov
int
xor
add
setne
push
lcall
fnstsw
mov
add
and
outsl
jnp
sbb
mov
loopne
xchg
in
push
mov
push
xor
aas
int
xchg
orl
fdivl
sbb
daa
adc
jmp
int
call
pop
mov
dec
pusha
aas
mov
xor
dec
popa
mov
add
jbe
aaa
fldt
shl
adc
ss
push
repz
cmp
ljmp
lahf
incl
inc
notb
sarb
stc
cmp
adc
inc
push
inc
fadds
jecxz
and
adc
sub
pop
jg
xor
sbb
fdivr
test
push
fwait
pop
testb
in
inc
xchg
push
roll
pop
sahf
sbb
mov
icebp
mov
rcr
lahf
mov
mov
xchg
mov
add
sbb
inc
and
push
fcoml
sbb
aas
pop
mov
sbb
xor
push
push
xchg
or
pusha
jnp
mov
or
lods
mov
dec
in
inc
icebp
sub
cmp
add
sub
push
mov
or
mov
xchg
push
jmp
rcrl
sbb
mov
lret
adc
scas
and
jo
add
mov
jne
sbb
popf
fsubs
fistpl
xor
xorl
mul
sbb
cvttps2pi
jecxz
movb
cmp
aas
mov
lock
push
cltd
int
popa
roll
ds
push
xor
shl
js
loopne
adc
pop
icebp
test
test
movsl
sbb
xorl
jle
stos
call
or
jg
cmc
sbb
pusha
loopne
sbb
out
icebp
lret
repz
ds
jb
push
sbb
shll
or
lds
stos
adc
add
sub
dec
pushf
out
pushf
xchg
sbb
push
push
sbb
or
and
push
xor
ret
cltd
lds
push
in
test
sti
adc
and
lds
ss
xor
xchg
jno
fidivl
cmp
mov
mov
loop
pop
into
out
jg
add
in
dec
mov
pop
fisttps
xchg
iret
aas
mov
cltd
imul
and
pop
fwait
inc
mov
xor
loope
mov
jnp
rorl
inc
push
inc
push
xor
faddl
jge
or
call
es
loope
xor
pusha
add
mov
xchg
push
mov
jecxz
inc
adc
or
push
push
js
loope
jnp
add
nop
test
ljmp
mov
addr16
cld
dec
int3
data16
andl
sbb
cmpsb
add
push
shll
enter
push
push
adc
out
cmp
inc
loopne
sarb
cmc
pop
lcall
sbb
cmp
inc
pop
not
mov
loopne
fists
loop
mov
dec
mov
push
incb
or
add
and
add
add
arpl
adc
add
cmpsb
jnp
stos
nop
jae
lret
sbb
jnp
dec
mov
cwtl
fwait
xor
jae
dec
mov
jnp
cld
dec
fnsave
adc
and
fcomi
sbb
dec
xchg
push
xor
xor
pop
inc
pop
adc
and
jl
mov
dec
ror
push
jo
dec
or
inc
pop
sub
scas
add
out
movsl
xchg
push
mov
push
and
inc
cmp
jg
call
adc
mov
pop
inc
push
aam
inc
mov
rcrl
push
xor
adc
fcoms
in
mov
out
xchg
mov
xor
pop
adc
mov
das
lret
stc
or
push
mov
sbb
inc
cmpsl
jle
mov
ret
or
stos
out
xorb
je
push
fists
lcall
test
jae
push
data16
fimuls
test
mov
shll
lret
mov
add
lahf
add
les
lods
ret
pusha
cli
and
lods
adc
adc
repz
xchg
dec
ret
xor
or
cmpsl
or
cmpsb
cmp
cmp
iret
mov
loopne
cmovs
pop
jecxz
add
loop
popf
std
pusha
js
and
movsl
push
dec
inc
fcmovb
pop
loope
or
or
lock
sub
add
adc
xor
add
repnz
loopne
enter
roll
add
and
mov
or
dec
dec
mov
sbb
or
xor
or
sbb
sbb
xchg
lret
adc
dec
mov
pop
or
sub
mov
loope
mov
xchg
sub
orb
xchg
jecxz
loope
push
pop
mov
xlat
pop
sub
adc
cmp
sub
mov
roll
shl
dec
push
paddw
fs
adc
loope
call
dec
bound
mov
idiv
call
inc
aas
pop
xchg
inc
fnstcw
mov
clc
mov
xchg
popf
and
xor
sbb
mov
jbe
outsb
popa
push
sti
es
sub
jg
loopne
icebp
dec
push
jno
push
cld
add
int
mov
ret
inc
fsubs
hlt
and
pop
adc
or
rolb
adc
gs
and
cli
xorb
mov
mov
push
push
sub
scas
call
arpl
in
push
add
adc
mov
push
clc
pop
and
or
jmp
cs
pushw
cmpl
mov
mov
insb
or
pop
xchg
in
int3
xor
jae
test
lock
cwtl
xor
or
scas
xchg
cmp
pop
fisubs
xchg
or
mov
or
std
mov
gs
cmp
ljmp
lds
jbe
testl
adc
cmp
test
sbb
xor
or
sub
dec
push
lret
pop
pop
xor
dec
dec
push
faddl
mov
sbb
xor
mov
jnp
cli
hlt
jle
and
dec
loop
mov
nop
pop
mov
test
mov
icebp
pop
sub
sub
mov
push
jno
sbbl
add
and
shrb
movsl
mov
cltd
mov
jl
add
daa
jo
add
cmovns
push
cmp
and
cmp
fucom
into
rcll
cmp
adc
push
mov
dec
xchg
dec
hlt
por
push
mov
call
cltd
mov
orl
dec
push
cli
lea
push
add
subl
mov
inc
shlb
xor
xchg
cmpsb
xchg
cltd
ret
lods
call
adc
inc
inc
xor
fwait
sub
inc
inc
add
xor
je
call
cmpsl
dec
adc
pop
add
mov
or
mov
je
and
js
inc
adc
xor
sub
jo
jns
sbb
jne
inc
fldpi
or
jnp
mov
push
lcall
jl
push
sbb
dec
add
add
cmp
inc
and
sti
lahf
pop
adc
rorl
sbb
test
adc
je
sbb
nop
or
insb
out
sarl
je
fwait
pusha
adc
fsubrl
lea
adc
divb
xor
clc
xorl
add
pushf
ljmp
or
call
scas
int3
jne
leave
cmpsb
sub
or
into
rcrb
jl
mov
repnz
sbb
call
xchg
pop
add
stos
mov
lea
jb
dec
add
enter
xor
xor
sarb
je
lea
sub
mov
mov
in
shrb
hlt
andb
cmp
or
add
mov
xor
xor
call
clc
test
pop
adc
and
les
and
push
roll
and
fcoms
push
loop
pop
xchg
pop
movsb
or
push
nop
jo
and
dec
pop
adc
mov
es
sahf
ret
xchg
mov
lock
push
sbbl
mov
outsb
call
inc
sub
lds
mov
xchg
in
mov
pop
call
xor
dec
enter
sbb
clc
xor
test
sbb
add
or
sti
sub
imull
or
mov
xor
pop
ret
mull
push
ret
call
push
pushf
clc
jle
or
jmp
pusha
shll
shlb
xor
adcl
fld
xchg
inc
test
jnp
inc
nop
xor
mov
dec
lods
subb
pusha
xor
les
or
adc
cli
test
mov
fiaddl
push
call
or
ret
roll
xor
jne
sbb
xchg
pushl
int
add
jno
sbb
test
sub
repnz
xor
cmpsl
dec
movsl
iret
outsl
dec
xor
dec
mov
adc
inc
push
mov
testl
or
dec
or
gs
push
je
lods
aam
int3
decl
or
je
inc
adc
xchg
cwtl
xchg
or
mov
or
cmpl
adc
mov
call
lcall
inc
ss
mov
inc
jne
xlat
xchg
sbb
inc
push
inc
mov
mov
sbb
jge
call
dec
aas
je
add
pop
sbb
cs
and
sti
insl
clc
xor
cmp
fadds
push
lcall
lret
cs
sbb
and
adc
xor
xor
inc
xchg
inc
xchg
sub
inc
stos
bound
mov
shl
ljmp
dec
push
jecxz
imul
fildl
push
xchg
popa
testl
call
push
add
cmp
push
jbe
lea
movsb
push
mov
push
and
adc
push
push
mov
dec
sbb
adc
ret
xchg
mov
jge
jbe
xchg
xor
add
push
cltd
inc
and
cltd
jae
pop
pop
pusha
or
push
mov
ret
or
fnstcw
hlt
or
call
inc
clc
sbb
das
add
imul
sbb
add
push
jge
call
bound
mov
inc
add
dec
and
pop
push
push
ds
clc
adc
push
sbb
idivb
push
xor
leave
cmp
mov
out
adc
xchg
and
xlat
jge
nop
shr
add
inc
cmp
mov
loope
fldt
pop
jp
rdtsc
lods
mov
imul
mov
enter
adc
pop
mov
xor
add
push
sub
adc
xchg
add
movsl
lock
out
movsb
cmp
pop
test
inc
dec
xor
push
repz
stos
adc
xor
xor
scas
push
rorb
adc
pop
sbb
sarb
je
mov
push
lea
add
mov
rolb
sbb
pop
dec
add
cltd
jne
call
xlat
inc
xor
or
mov
js
push
dec
jmp
cmpsb
dec
pop
or
orb
pop
pop
js
popf
mov
dec
cltd
idivl
mov
sub
mov
call
mov
dec
call
inc
or
and
pusha
pushf
fisubs
popf
loope
xor
loopne
mov
pop
sub
je
ret
or
jne
hlt
shr
inc
popa
insb
fldcw
inc
fstps
fwait
dec
push
sbb
push
and
shl
cmp
shl
inc
decl
inc
outsl
cmp
sub
mov
je
test
inc
inc
cs
repnz
cmpl
clc
dec
mov
mov
dec
sbb
or
decl
popf
xchg
mov
jge
cmp
pop
scas
mov
je
call
ror
call
data16
mov
pop
jmp
shl
movsb
jg
xchg
dec
popa
or
jge
pop
jo
adcb
data16
pusha
push
cmpb
in
or
pop
stos
adc
or
arpl
inc
fwait
nop
jmp
mov
xchg
inc
pop
enter
adc
mov
lret
mov
or
cmp
push
cmp
not
pcmpeqb
push
inc
cmp
das
or
jmp
es
adc
sbb
mov
ret
roll
pop
jmp
cmp
fildl
push
push
push
jmp
push
or
sbb
jmp
add
sbb
and
jmp
add
test
jmp
mov
jp
sbb
mov
movsb
jl
add
and
xor
negl
fcomps
rorb
jns
cmp
pop
sbb
pop
cmp
jne
mov
and
xor
jne
and
or
repnz
fimuls
repnz
adc
or
cs
inc
dec
sub
adc
test
clc
add
aaa
dec
cltd
add
xor
mov
shl
and
loope
sub
xchg
outsl
or
dec
sbb
rorb
or
roll
pop
mov
leave
fnsave
ds
int
negb
add
in
or
repz
or
sbb
or
or
or
jecxz
int
and
in
inc
fldl
roll
int
les
leave
adc
or
xorb
bnd
cwtl
push
les
push
dec
sbb
and
fisttps
sub
jmp
adc
jmp
jbe
inc
cs
jo
push
aad
jo
dec
push
loop
insb
dec
inc
mov
jae
nop
push
inc
les
rclb
mov
dec
and
inc
les
xchg
inc
mov
dec
pop
inc
cmpb
push
or
or
add
rcl
or
xor
je
movsb
jns
nop
push
dec
mov
popa
or
sub
enter
cli
mov
sub
and
or
pop
orl
sbb
or
test
add
rcrb
jmp
fs
pop
fs
shll
mov
mov
fcomps
pusha
mov
and
sub
dec
popa
and
lods
lock
inc
pop
sahf
pop
sub
ds
pop
lret
adc
mov
mov
or
into
and
push
enter
add
xor
add
or
test
cmp
clc
loopne
sbb
and
clc
mov
xor
aas
mov
bound
ljmp
in
mov
add
xor
pop
adc
addr16
and
lea
lock
popa
add
jno
pop
jecxz
hlt
ret
test
and
sbb
lds
out
sbb
subb
out
or
les
adc
aas
mov
pop
sub
pop
inc
mov
and
seto
xor
mov
jge
sbb
and
cwtl
sbb
outsl
push
mov
or
push
cli
dec
mull
xchg
mov
fnstcw
insb
and
lahf
mov
sub
fists
pop
dec
jno
adc
shrb
xor
ret
sub
xchg
mov
loopne
or
xor
add
js,pt
mov
sub
mov
push
adc
call
pusha
sbb
pusha
mov
in
popa
mov
dec
and
std
pop
shrb
sub
and
js
je
jmp
or
xchg
call
fcompl
add
cmp
sub
inc
and
inc
mov
loopne
sbb
pushf
ret
mov
adc
mov
sbbb
add
sbb
mov
bound
jb
cmp
adc
sarl
insb
adc
in
sub
xor
jno
rcrb
cmp
add
mov
jmp
call
push
adc
mov
sti
jle
dec
jmp
fwait
dec
rclb
or
out
mov
fwait
js
call
rorb
pop
xor
mov
jg
mov
ret
push
jg
incl
call
int
mov
out
shrb
xor
mov
mov
mov
cld
xor
incl
cmp
loopne
fcoms
sbb
mov
mov
push
mov
mov
in
jb
sbbl
xor
adc
jg
aaa
in
movsb
mov
fsubrl
in
out
jo
in
dec
out
or
adc
fdivrl
xor
gs
xor
nop
dec
push
and
fmull
jmp
push
and
push
inc
push
in
add
fcomps
fistpll
sti
or
orl
jge
lock
sbbl
xchg
dec
enter
push
jno
sub
sti
dec
xlat
and
out
push
cmp
dec
out
sub
xchg
xor
mov
and
rorl
inc
call
pop
inc
and
scas
test
inc
inc
hlt
sbb
dec
int3
aad
mov
pusha
ss
xor
loop
push
lahf
loop
add
sbbl
xor
inc
inc
lds
orl
rcll
push
xor
add
js
loopne
add
addr16
xchg
push
sub
and
add
mov
inc
fsubrl
pop
es
dec
pusha
movb
jno
xor
addl
mov
andb
cli
adc
xorb
sbb
sub
je
add
rclb
out
jecxz
scas
sub
xchg
test
push
ja
mov
jno
mov
add
pop
in
cmp
xchg
jl
test
inc
push
shll
jns
push
jnp
mov
lods
cmp
in
sub
xchg
or
lods
inc
enter
pop
std
mov
hlt
or
and
pop
jecxz
orb
test
adc
andl
lcall
addb
call
sub
and
and
add
mov
and
and
jno
pop
or
negb
jnp
addr16
sub
mov
mov
pushf
adcb
xchg
or
dec
push
mov
mov
ret
or
mov
decl
adc
outsl
shll
aad
mov
cmpsl
in
sub
mov
loop
stc
hlt
adc
jae
hlt
pop
cmp
push
lcall
adc
jo
les
jecxz
xor
test
mov
xor
or
xchg
mov
or
add
sub
sub
call
sbb
sub
cmp
outsb
sbb
pop
inc
dec
rorl
loopne
push
add
fsubrl
je
xchg
mov
xchg
sbb
insl
mov
sub
test
inc
adc
inc
or
inc
jmp
dec
mov
cmp
adc
sub
adc
push
test
or
adc
adc
xchg
rep
adc
mov
sub
xor
inc
cmp
adc
call
inc
sub
adc
repz
sub
and
mov
add
dec
jmp
jne
xor
ret
jp
jge
out
rcrb
pop
div
pop
decl
sarl
jmp
mov
xchg
cmp
sbb
jge
sub
xchg
sbb
mov
mov
leave
add
prefetcht0
xchg
add
push
call
adc
jo
jb
and
cmp
syscall
sub
add
inc
in
mov
and
icebp
add
cmpsl
div
sub
negb
es
add
js
lret
dec
js
sub
add
push
repz
inc
dec
xchg
xor
gs
inc
cwtl
les
mov
dec
pop
fs
lret
incl
nop
call
loope
xchg
enter
enter
pop
cmp
mov
inc
ror
call
nop
loop
sub
mov
mov
or
xor
aam
jae
sub
inc
mov
test
mov
sub
push
pop
adc
shll
xchg
xchg
test
sti
xchg
movb
test
pusha
movsl
stos
call
or
sahf
inc
aam
push
xor
ja
faddl
pop
jno
aaa
rclb
adc
fwait
scas
into
sbb
mov
enter
outsl
pop
add
addb
loopne
or
and
add
cmp
pop
dec
enter
adc
add
andb
gs
lods
push
loop
outsb
inc
inc
mov
test
arpl
sbb
sub
call
jns
imul
or
shrb
pop
inc
out
rorl
pusha
jno
repz
mov
loopne
jmp
fcomi
adc
loop
add
inc
shlb
decb
shrb
or
sub
mov
push
gs
cltd
sbb
sbbl
sbbl
je
scas
inc
and
jbe
insb
jo
push
mov
mov
into
push
inc
js
insb
mov
fs
sbb
les
adc
fisubl
sbbb
icebp
sub
shll
push
xor
ljmp
xchg
mov
and
cmp
add
shll
and
and
incl
sub
popf
push
mov
sub
fists
and
jecxz
lret
push
jo
cmp
cmp
push
pop
ret
imul
jl
das
daa
mov
adc
pop
xor
sbb
add
ret
and
or
mov
sbb
jbe
nop
test
ror
add
add
add
inc
cmp
xor
nop
fnstsw
lret
xchg
call
js
add
xor
repnz
sbb
lea
out
add
adc
aam
pop
hlt
leave
roll
arpl
outsl
loop
xchg
out
bound
pop
dec
push
add
lock
pushf
into
cmp
jo
xlat
and
and
push
fidivrs
add
mov
sub
shll
sbb
cmp
rorb
js
xchg
inc
js
pop
sub
stc
fisttpll
notb
in
shlb
cli
cmp
xchg
or
jle
jecxz
ja
mov
shr
cmp
adcb
rcrb
dec
sbb
push
xrelease
hlt
add
fcomp
and
sbb
mov
dec
lahf
push
sahf
dec
fs
pop
push
mov
ljmp
add
add
or
les
mov
sub
sti
mov
call
lods
iret
adc
mov
adc
loope
mov
jg
popa
pushf
jno
outsl
into
orb
pand
dec
adc
icebp
movsb
sbb
out
jg
add
sub
outsl
shll
sbb
sbbl
cwtl
add
stc
sub
and
add
insb
mov
add
xor
loopne
jle
adc
stos
loopne
push
push
sarb
hlt
cs
lock
mov
mov
cwtl
xor
cmp
pusha
pop
data16
fbstp
rcrb
cs
pop
cmpsl
sbb
push
iret
fs
shlb
cmp
es
cli
addb
bound
inc
out
sub
stc
and
enter
xchg
push
adc
mov
xchg
push
mov
push
jae
and
lods
jnp
mov
ds
mov
add
mov
or
mov
rcll
push
xor
fwait
and
jno
add
jne
fisttpl
jge
dec
pop
dec
xor
add
add
xchg
add
push
dec
push
mov
mov
push
adc
shll
addb
jne
xor
mov
add
pop
cwtl
add
fadds
fistl
mov
rorb
cmp
cmpsb
rclb
testb
xchg
call
stos
fimuls
or
subb
or
cmpsl
add
notl
outsl
std
mov
nop
push
cs
aas
adc
sub
int
les
push
add
push
icebp
mov
shrb
jg
mov
sbb
subl
cwtl
ljmp
inc
lods
daa
loop
lea
test
lcall
mov
dec
jl
jne
jo
mov
fsts
les
add
adc
push
ret
mov
adc
pop
xlat
andl
fisubs
arpl
or
lahf
mov
or
inc
adc
dec
jo
and
pop
adc
mov
insl
push
cwtl
filds
call
jl
out
mov
call
fadds
push
gs
cmpl
es
push
subb
xor
adc
mov
andb
sub
outsl
hlt
xchg
adc
cmp
loope
add
iret
sbb
add
insl
ja
cmc
pop
mov
popf
xor
sbb
aam
dec
add
jbe
or
mov
pop
mov
in
xchg
sub
xor
cmpsb
addr16
and
jg
pop
inc
push
mov
jp
or
fld1
ret
insb
add
jl
cld
dec
loopne
sbb
cmpsb
add
fadd
push
aam
cwtl
add
mov
call
rcll
or
test
out
jb
subb
insl
jno
pop
mov
mov
aad
and
xor
imul
adc
and
push
out
xor
divl
out
pop
out
add
fstpt
pop
inc
adc
push
adc
sbb
rorl
lret
xor
jae
push
xchg
mov
clc
jno
scas
adc
sub
addl
cltd
and
push
addl
sub
aas
imul
xchg
out
pop
and
jb
sbb
adc
sub
xor
lock
int3
mov
flds
xchg
stc
cmp
and
rcll
roll
call
mov
add
mov
shlb
movzwl
add
sbb
add
inc
adc
repz
push
push
leave
lea
lret
xor
inc
inc
cmp
inc
leave
test
jge
test
push
sub
add
add
push
shlb
sub
movsb
sbb
mov
cmc
cmp
adc
outsb
jg
push
mov
xor
ret
add
and
cld
push
pop
add
push
adc
or
adc
adc
iret
les
fmuls
and
add
push
cmp
push
and
js
push
lods
sub
adc
test
sub
push
mov
add
pop
pushf
js
jo
jnp,pn
sub
add
mov
add
xchg
outsb
pusha
or
mov
mov
in
or
fsub
pusha
bound
or
imul
xchg
xor
cmp
xor
cs
fsubrs
test
inc
shrb
mov
addl
sub
out
pop
shll
add
adc
sbb
mov
mov
filds
dec
push
jg
sbbl
outsl
inc
ds
add
shll
push
and
push
cmp
or
mov
jo
inc
sahf
add
adc
sub
push
in
push
out
push
into
push
sub
push
jb
mov
and
pop
push
or
ds
or
orb
dec
aaa
fadds
push
lcall
pop
mov
dec
sub
xchg
test
xchg
stos
imull
jle
mov
movsb
sahf
pop
lcall
cltd
add
mov
sbbb
jbe,pt
add
mov
mov
stos
cltd
shlb
adc
sbb
icebp
arpl
and
push
jecxz
lcall
daa
lods
loopne
push
sbb
out
adcb
fs
dec
pop
add
andl
and
bound
mov
xchg
cli
push
inc
pop
or
rolb
pusha
daa
sbb
lretw
iret
loop
das
jnp
push
adcl
add
cltd
sub
jg
mov
mov
xor
pop
dec
mov
outsb
push
cld
adc
jge
pop
cmpb
fidivrs
or
xchg
cmp
les
xor
roll
mov
gs
into
outsb
mov
lret
repnz
aas
pop
out
jb
adc
adc
subl
add
iret
sub
or
pop
inc
mov
jecxz
mov
dec
mov
ljmp
popa
xor
or
cltd
mov
mov
mov
adc
cli
sub
jmp
xchg
leave
mov
aaa
pop
insb
inc
into
add
int3
mov
call
or
addl
movsl
test
call
xor
dec
out
xchg
fidivrl
loopne
mov
movsl
cli
sub
mov
cmp
repz
push
or
or
js
xor
js
mov
call
pop
cld
mov
sbb
xchg
loop
out
xor
ficoms
add
insb
ja
push
add
adc
dec
mov
repz
and
bound
inc
lock
or
mov
add
test
jmp
push
add
dec
or
bswap
js
sti
cmp
add
mov
fcomps
push
and
jbe
out
imulb
cmp
pop
out
test
mov
call
mov
roll
scas
aad
xor
into
push
and
dec
cmp
shll
pop
fs
push
jg
frstor
sub
inc
cmp
stos
test
inc
mov
xor
hlt
lret
insb
ja
mov
and
shrb
adc
add
movb
sbb
inc
cmp
mov
loope
push
int3
adc
fwait
and
mov
call
sbb
cmpb
push
call
int
mov
jmp
inc
dec
sub
inc
adc
loopne
push
outsl
rorl
sbb
dec
and
inc
scas
aad
aas
mov
adc
dec
xor
adc
push
xchg
push
shll
adc
or
mov
mov
mov
lea
lods
and
and
sbb
mov
jne
cmpsb
push
daa
out
jnp
mov
mov
push
lods
mov
stc
out
push
ret
xor
test
pop
xor
js
xchg
lds
dec
aam
jns
pop
jno
adc
push
repz
cwtl
mov
mov
add
push
les
dec
cmp
repz
into
insb
and
rol
inc
pop
dec
dec
inc
test
and
pop
repz
jnp
jg
fstps
notb
lods
mov
in
pop
enter
xchg
adc
mov
mov
lea
fimuls
pop
pop
cwtl
sbb
lret
mov
sub
inc
push
sahf
popa
jl
test
hlt
loopne
mov
bound
adc
and
dec
mov
jo
sbb
sbb
add
les
mov
in
subl
push
mov
pop
jecxz
add
add
jbe
xor
push
mulb
ret
mov
dec
mov
jb
add
cltd
and
jmp
dec
shll
les
jge
push
pop
filds
push
mov
jecxz
push
push
lahf
adc
mov
dec
faddl
sbb
movsb
add
push
xchg
add
jno
enter
cmp
and
inc
xchg
adcb
push
and
adc
pop
sbb
push
in
fucomip
adc
jo
mov
xchg
inc
sub
scas
movsb
cmp
mov
cltd
aas
fmul
inc
ds
aad
ret
add
mov
loopne
pop
test
test
or
xor
jg
xor
or
lahf
xor
je
leave
and
and
fnsave
std
bextr
add
aad
scas
fs
cmp
sub
sbb
fwait
int
mov
adcb
fstpl
and
mov
pushl
lcall
test
push
out
xchg
or
add
fiadds
add
sbb
mov
and
shrb
add
icebp
xor
test
ficompl
cmp
pop
add
imul
mov
mov
xchg
pusha
add
mov
stos
xchg
in
cld
cmp
cs
outsl
push
mov
push
push
inc
mov
push
add
mov
adc
or
nop
fcmovu
jnp
xchg
in
mov
pop
inc
pop
out
or
or
dec
mov
fmull
sub
inc
scas
pop
mov
cmp
lcall
sbb
inc
scas
gs
call
in
test
add
inc
je
jmp
add
jno
add
add
or
or
in
mov
pusha
mov
mov
push
dec
test
add
mov
int
inc
add
and
fsubs
jecxz
ret
mov
stos
inc
inc
enter
rcr
mov
ljmp
jg
adcb
lock
dec
add
aad
add
mov
loope
mov
iret
lsl
into
fcomp
outsb
mov
xchg
mov
push
outsl
nop
dec
xor
lods
repnz
pop
std
enter
pop
mov
mov
jmp
xchg
lcall
add
and
or
scas
jns
cltd
jecxz
jne
jno
mov
roll
cmp
add
jge
jg
cmpsb
sub
adc
mov
scas
or
pop
and
int3
and
and
mov
lcall
push
mov
pop
lret
sub
rcrl
add
cli
push
call
cmp
xor
repnz
daa
fsub
lods
sub
push
cmp
push
stos
shrb
aas
mov
pop
push
outsl
xchg
dec
out
jae
pop
sahf
pop
sbb
icebp
push
fistpll
xlat
cli
cmp
xor
cltd
jp
xchg
ret
inc
scas
add
xchg
pushf
aad
pop
push
jns
jp
xchg
inc
arpl
js
das
dec
add
rcrb
pop
push
insb
decb
sub
cltd
pop
shll
inc
inc
pop
or
mov
stc
call
pop
adcl
lock
mov
sub
pop
out
leave
push
pop
cmpsl
inc
xchg
pusha
add
push
ficoms
outsb
pusha
test
call
dec
sbb
mov
mov
pop
sbb
pop
jb
repnz
push
add
xor
fcoms
clc
movsl
cmp
inc
xor
xor
pop
sub
sub
popf
or
dec
inc
shrb
cwtl
cmp
jno
sbb
jnp
and
popf
xlat
or
pop
in
test
cmp
mov
inc
cld
jbe
sbb
ja
sub
sbb
or
pusha
outsl
adc
cli
xchg
jp
inc
stc
adc
shrb
sub
mov
cld
xor
and
movzwl
adc
sarl
mov
and
cmpsb
xchg
adc
inc
or
mov
jne
mov
outsb
add
enter
add
or
pop
aas
push
add
ror
sbb
jno
loope
xor
jns
inc
and
pop
pop
fdivrl
or
add
inc
inc
push
dec
cmp
icebp
and
sbb
add
mov
movsl
inc
xchg
cmc
test
movb
or
add
in
mov
pop
out
scas
push
enter
push
adc
pop
or
adcl
data16
pop
add
mov
out
push
sbb
nop
sub
std
cmp
stos
and
in
sbb
pop
mov
mov
ja
add
mov
or
pop
mov
sub
mov
inc
sub
or
jle
pop
cmp
inc
xchg
jb
cld
push
mov
clc
insb
adc
dec
sbb
fbld
and
or
aaa
jae
loope
jno
shll
popa
xchg
test
aas
adcb
mov
test
adc
imul
mov
out
gs
je
cmp
rorl
lea
je
add
nop
ret
shrb
dec
test
mov
call
lock
add
push
cmpb
push
inc
adc
or
cld
push
test
xchg
adc
inc
inc
sub
push
push
inc
outsl
add
test
outsl
cmpsl
jo
pop
or
in
and
mov
push
push
ret
and
xchg
inc
pop
fstpt
iret
test
mov
inc
or
lahf
inc
cwtl
or
add
les
dec
adc
loopne
sbb
inc
mov
pop
cli
cwtl
and
or
jne
hlt
push
enter
jge
xor
dec
or
aas
xorb
pop
or
or
adc
inc
movups
enter
jae
xchg
lret
xorl
push
add
clc
push
out
push
mov
adc
inc
sbb
xor
add
sarb
jo
jbe
cld
or
or
push
mov
dec
mov
mov
jnp
andl
add
mov
xor
jae
or
sbb
lret
or
ss
inc
mov
sbb
adc
cld
testl
aam
dec
sbb
cs
inc
jmp
lods
shl
je
cmp
leave
mov
dec
aam
aas
jge
sub
cmp
or
cmp
ja
mov
mov
mov
push
ljmp
or
mov
rolb
adc
ret
ret
call
cli
out
pslld
sub
or
popa
outsb
int3
add
mov
arpl
or
les
sub
add
jne
cwtl
loopne
add
nop
or
outsl
fs
jecxz
popa
outsb
mov
jle
inc
js
je
push
push
pop
jge
movsl
push
aad
mov
outsl
inc
das
dec
inc
imul
outsb
addr16
gs
push
adc
add
ja
data16
or
dec
or
js
push
insl
and
mov
je
popa
outsl
inc
mov
mov
cmpl
push
dec
cwtl
dec
xor
and
fs
mov
addr16
outsl
arpl
push
push
inc
cmp
pusha
