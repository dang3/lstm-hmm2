nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
jb
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
pusha
push
mov
sub
push
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
nop
push
xor
xorl
adc
shl
pushl
pop
shr
add
cmpb
jb
cmpb
ja
pop
call
pop
int3
mov
push
mov
sub
push
pushl
push
push
push
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
mov
push
push
mov
push
lea
pushl
subl
push
pop
popl
mov
call
push
pop
mov
mov
lea
sub
dec
and
mov
mov
add
add
push
pop
xor
cmp
je
sub
sub
add
xor
sub
mov
pushl
mov
sub
sub
pop
bswap
jmp
xor
push
mov
call
sub
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
stos
rolb
push
jp
in
xchg
xchg
in
push
mov
xchg
psadbw
inc
stc
ds
inc
adc
das
cmp
and
into
out
call
shlb
lods
push
jmp
or
push
xor
jg
pop
call
mov
push
mov
sbb
adc
repz
roll
mov
call
xchg
loop
dec
push
xor
je
push
shlb
inc
mov
ret
cmpsl
pop
adc
or
roll
and
and
std
push
xchg
push
stc
outsb
cmp
add
jb
jnp
add
xor
mov
jb
mov
fwait
push
xor
inc
add
jmp
mov
aaa
push
hlt
or
or
test
or
imul
xlat
lds
adcb
pop
shr
aad
pop
ds
incb
mov
adc
mov
and
pop
pop
gs
pop
pop
mov
or
xchg
mov
dec
loop
push
fidivl
mov
xor
pop
inc
imul
ja
daa
jno
js
push
insb
push
mov
scas
mov
dec
ret
xchg
sub
mov
sub
fld
mov
scas
mov
push
xor
cwtl
push
cmp
icebp
push
cmp
call
pop
ret
inc
sbb
xchg
mov
jl
ljmp
or
movsl
pop
fwait
in
adc
repz
cmp
cmp
pop
cmp
xor
out
cmp
jns
insl
push
int
adcb
ret
push
adc
stos
xchg
cmp
cmp
ljmp
xor
shrb
xor
fstpt
and
fildl
pop
ljmp
loop
sub
loop
jo
jns
fidivrl
mov
sbb
jecxz
jecxz
rclb
test
test
pop
roll
gs
push
jmp
sbb
sub
loope
in
pop
in
mov
nop
xchg
sub
loop
xchg
jp
insl
push
out
fs
dec
mov
sub
rcl
sbb
cmpsb
bnd
pop
pop
iret
mov
in
cmp
dec
ret
mov
lods
aam
push
jmp
in
jmp
cmp
shlb
js
addr16
scas
std
push
ss
arpl
movsl
daa
fdivl
ljmp
sbb
jmp
out
les
ljmp
jmp
scas
dec
sbb
jmp
aas
pushf
xor
sbb
int
xchg
mov
movsl
ljmp
ljmp
daa
mov
and
icebp
aas
and
sbb
hlt
mov
mov
out
sub
ds
movsb
dec
push
or
in
push
aam
sub
sbb
adc
bound
insb
aad
addl
cmpl
xchg
inc
cmp
sub
xchg
push
mov
call
int
mov
cmp
mov
cltd
mov
xchg
je
push
xor
push
shll
scas
sarl
and
fisubs
push
and
and
jmp
bound
test
cmp
das
push
test
ror
xor
jmp
xor
mov
scas
jne
xor
mov
xor
push
add
mov
dec
cmp
adc
cmpl
andb
jg
jl
int
push
je
jl
test
fidivrl
sbb
add
fnstcw
or
movsb
or
mov
sbb
inc
sti
mov
adc
mov
add
mov
sti
inc
cmp
cmp
inc
sti
mov
xor
mov
icebp
insl
xchg
xorb
push
jmp
cwtl
imul
pusha
xor
add
outsl
daa
fstl
and
jae
pop
pusha
add
mull
std
xor
mov
orb
iret
repz
dec
dec
lret
out
adc
adc
add
push
lahf
mov
sbb
sub
test
lods
or
js
mov
push
mov
not
adc
cltd
stos
dec
jle
mov
cmp
rcrl
jne
movsb
xor
xor
fcmovnu
push
in
divb
push
movsl
pop
add
mov
mov
xor
inc
sbb
jl
cltd
test
incb
push
adc
cltd
jecxz
mov
sbb
loop
in
loop
inc
sbb
adc
sbb
js
push
and
cmp
and
pop
add
sub
mulb
shrb
sub
int3
mov
adc
inc
sub
shr
fwait
cmpsb
mov
out
in
popl
inc
cli
std
adc
aad
lds
lret
mov
shrb
sub
sbb
outsl
jecxz
jno
nop
cmp
enter
iret
fs
push
add
pop
xchg
push
jnp
js
dec
sub
mov
cmp
bound
cli
fistpl
ds
insb
fldl
sahf
ret
xor
jnp
in
adc
test
or
jne
push
test
xor
scas
outsl
or
jmp
mov
in
addr16
mov
jecxz
xchg
adc
roll
inc
mov
popl
mov
les
xlat
push
lds
xor
sub
xor
mov
push
push
push
push
jns
ss
sub
in
cld
shll
mov
mov
mov
out
dec
dec
inc
out
sbb
fmuls
add
dec
jge
out
jecxz
sbb
popa
sub
dec
mov
into
sarb
cmp
fdivs
cmpsl
lret
arpl
out
int3
out
out
in
fs
fistpl
int
and
out
inc
add
sub
mov
inc
aad
sbb
loop
jnp
ret
cmp
ret
cmp
cmp
pop
adc
imul
gs
imul
jg
adc
cmp
sbb
rcl
lcall
lret
ja
repnz
