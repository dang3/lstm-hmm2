push
call
ret
ret
sbb
sbb
imul
pop
push
and
push
lcall
mov
lods
jb
lcall
sub
pop
sub
or
inc
aad
xor
add
dec
add
and
in
dec
cwtl
jmp
push
and
xchg
sbb
int3
and
inc
add
mov
out
push
dec
mov
add
out
sbb
bound
cmpb
sub
sbb
cmpsb
or
xchg
mov
mov
xchg
or
sbb
mov
sbb
stos
add
mov
cmp
aas
fistpll
leave
dec
mov
mov
dec
shll
xrelease
xorb
sbb
mov
fcoml
sub
scas
repz
lea
out
ficomps
xor
cmp
aas
movsl
mov
xchg
into
pop
mov
out
jnp
rcrl
test
insl
in
shr
lds
push
cli
adc
aad
jl
dec
cwtl
clc
cltd
mov
mov
jne
or
sarl
lock
add
mov
push
mov
xchg
test
jl
sbb
addr16
flds
fbstp
cmc
loopne
cmp
sub
xchg
pop
and
mov
xor
mov
dec
mov
adc
pop
xchg
mov
lods
jae
sub
outsl
push
dec
sub
cmp
xlat
xchg
jo
dec
repz
mov
add
sbb
ror
ret
cwtl
sbb
mov
loope
shll
push
adc
pusha
adc
push
sar
shrb
sub
pop
mov
xchg
adc
mov
dec
xchg
mov
icebp
subb
in
mov
addr16
cmpsl
adc
sbb
push
dec
xchg
shlb
xchg
in
push
ljmp
mov
addl
push
xchg
push
fmull
fnsave
lret
sub
push
or
jne
cmp
push
xchg
cmp
fs
add
imul
push
pop
xchg
dec
mov
pop
mov
pop
dec
and
sub
push
xchg
sbb
jnp
sub
setnp
in
adc
mov
adc
mov
dec
xor
lock
clc
fnstsw
in
xor
push
sbb
aad
je
movsl
inc
mov
push
pop
adc
shl
sub
jle
cld
add
pop
aaa
cmp
aad
sub
mov
in
gs
imul
call
les
pop
xchg
and
sti
sub
and
mov
cmpsl
add
icebp
loope
mov
sbb
mov
push
insl
adc
sahf
les
adc
pop
cmp
leave
fwait
leave
movsb
adc
xor
shll
out
fildl
jno
or
arpl
iret
mov
mov
cwtl
push
out
pop
js
mov
sub
and
add
insb
sbb
call
sub
out
sbb
xchg
push
lea
repnz
xchg
mov
xchg
scas
loop
add
dec
loope
test
dec
cli
hlt
or
es
testl
add
pop
fnstenv
inc
lcall
cmp
int
jne
mov
dec
cmp
les
pusha
adc
or
nop
xchg
or
cmpsl
mov
xchg
daa
push
cmp
mov
dec
mov
xchg
mov
push
dec
dec
cmp
movsb
insl
ss
xchg
call
hlt
xchg
inc
call
ficompl
cwtl
movsb
mov
cmp
inc
out
cmp
xor
into
stos
leave
les
cmc
mov
inc
es
mov
enter
scas
scas
sub
loopne
pop
jo
into
add
inc
test
and
dec
je
pop
inc
scas
ret
pop
sahf
and
cli
push
andb
and
mov
adc
or
jbe
out
orb
scas
popa
push
sahf
ss
fs
or
xchg
or
xchg
and
jne
adc
testb
inc
or
outsb
sbb
pop
lods
inc
scas
or
gs
mov
sbb
imul
xchg
stos
jmp
inc
mov
pop
popa
cmpps
xchg
ja
push
xor
mov
cmpsl
pop
cmc
outsl
dec
xor
adc
test
jns
xchg
jo
dec
cmp
xor
imul
andl
hlt
adc
adc
dec
pusha
mov
add
out
outsl
cmpsb
or
jg
cmp
jle
scas
addr16
loop
xor
inc
xor
push
inc
mov
bound
push
push
mov
js
ja
sub
mov
mov
lret
dec
notl
sbb
icebp
adc
pop
lock
jnp
hlt
mov
mov
cmpsb
sti
imul
fsin
pop
pop
xchg
adc
adc
mov
addr16
lret
sarb
mov
fistl
jp
jb
dec
or
cli
push
mov
and
inc
cmp
or
pop
pop
call
mov
pop
cmovbe
loop
adc
fcoml
push
sbb
adc
adcb
cmp
outsl
mov
lock
dec
out
ja
pop
fisubrl
xlat
mov
pop
rcrb
test
push
aas
jno
jno
mov
inc
pop
out
sub
mov
test
pop
int
addr16
push
and
test
arpl
add
adc
testb
in
out
fcomp
cwtl
shll
xchg
jecxz
aaa
mov
fs
ss
leave
xorl
mov
call
xchg
push
and
sub
aad
xor
int
mov
inc
sarb
cmp
imul
xchg
dec
jge
cmpsb
and
ror
rolb
sub
and
outsl
nop
xchg
jg
xor
push
adc
sbb
sub
xlat
pop
xor
cs
push
dec
jmp
sub
fs
sbb
test
jae,pn
and
xchg
das
out
mov
cmp
test
xchg
sub
fistpll
and
leave
out
dec
pop
jns
xchg
push
inc
out
test
jo
jl
dec
sbb
out
mov
pop
sub
out
xor
in
xchg
test
call
adc
rorl
push
adc
adc
mov
inc
mov
or
in
pop
add
xor
xor
fcmovnu
call
pop
in
aad
pop
adc
add
popf
repnz
push
jmp
pop
or
pop
dec
clc
bound
icebp
push
inc
js
jle
push
into
mov
in
pop
int
sub
lea
jns
dec
cmpsl
lea
cmp
dec
fdiv
cwtl
and
inc
or
jmp
xchg
jg
or
or
test
int
aam
stos
xlat
cmp
xor
test
mov
int3
frstor
jge
cmp
cli
xchg
add
lret
add
stos
ljmp
jo
imul
decb
jae
add
ja
and
mov
cmpsl
dec
cmpsb
daa
pop
fsubs
mov
inc
dec
push
ja
lahf
cmp
add
aas
or
hlt
out
and
mov
not
xor
add
pop
sbb
dec
dec
bound
shlb
hlt
shll
cli
es
js
faddp
je
fisubs
or
out
into
cmpsl
inc
dec
adc
mov
iret
pop
sub
xchg
lock
xor
fstpt
mov
int
femms
movsb
or
pop
sub
add
mov
xchg
push
test
mov
popf
add
cmp
imulb
push
or
out
iret
test
mov
addl
outsb
and
jb
fwait
insb
add
in
outsb
inc
daa
repnz
lds
xor
aad
fmul
mov
shlb
or
outsl
cmp
jmp
fsubrp
js
aaa
sub
cmp
bound
or
fistpl
fucomp
mov
scas
cmc
ret
fiadds
sbb
ss
mov
fistpl
mov
inc
mov
decl
xchg
test
pop
mov
clc
test
shld
rcr
mov
or
push
icebp
mov
int3
cmpsl
je
mov
add
test
inc
jecxz
adc
test
jecxz
mov
cmp
mov
std
aad
pop
sbb
scas
mull
push
jb
inc
scas
adc
add
or
mov
mov
push
xchg
sub
push
bound
inc
fwait
into
or
mov
popf
xchg
add
gs
fs
addl
push
mov
xor
mov
insl
shrb
inc
fisttpl
sub
lret
out
xchg
arpl
movsb
mov
push
mov
clc
pop
insb
inc
ret
add
add
sbb
int
push
pop
mov
addl
add
xor
xor
inc
pusha
push
test
in
repz
mov
xchg
xor
lock
addr16
push
add
and
push
sbb
push
pop
aaa
inc
into
dec
sub
adc
cld
dec
push
dec
in
repnz
cmp
in
ror
repnz
loopne
call
inc
popl
dec
mov
js
push
jle
inc
bswap
push
jae
jnp
sarl
or
nop
cmp
arpl
fwait
or
scas
jo
jmp
iret
lahf
add
in
call
sar
enter
mov
dec
or
xchg
inc
add
ret
iret
cmp
mov
inc
xchg
or
addr16
xchg
sub
lock
or
lods
sbb
add
push
inc
subl
cmpsl
shll
push
lret
jmp
int3
add
mov
aas
test
cmc
cmp
inc
aas
pop
icebp
faddl
js
movsl
rorl
ffree
mov
lds
and
and
xor
pop
jnp
push
aam
pusha
sub
iret
cmp
mov
adc
adc
clc
push
pusha
sbb
add
les
bound
xchg
call
repnz
pushl
jl
ret
pop
es
push
pop
jbe
mov
test
shrb
sbb
rolb
xor
xchg
add
xchg
dec
nop
addb
pop
adc
dec
jle
mov
sar
or
popf
sub
cmp
and
cmp
push
xchg
push
mov
test
mov
into
dec
sub
adc
add
ljmp
ja
jno
push
cmc
call
ds
shrb
fucomip
mov
inc
ja
inc
xchg
ss
mov
hlt
orb
mov
aas
inc
out
inc
or
push
test
dec
inc
push
stos
loopne
and
les
and
pop
lods
xchg
jb
shll
orb
or
aam
das
les
push
sarb
mov
ss
bound
shll
rorl
sbb
mov
cltd
cld
lea
lods
jne
mov
pop
je
add
outsb
xorl
iret
fwait
lods
lret
ret
adc
pop
mov
adc
jns
mov
fstpt
outsb
sbbl
xchg
gs
cmpsl
fstl
and
cmpsb
pop
notl
xor
bswap
addr16
cmpsb
pop
lock
rorb
dec
divl
scas
xchg
adc
movsl
data16
sahf
xchg
push
aam
push
aad
sub
icebp
xchg
loopne
pop
jecxz
test
das
sbb
push
or
mov
inc
sub
lcall
and
jo
into
test
lret
daa
loope
push
xor
nop
mov
mov
sbb
sbbl
pushf
push
sarb
outsl
lea
xor
insb
jmp
imul
xor
cmpsl
shl
mov
add
xor
jle
inc
loopne
sbbb
lock
mov
pop
lahf
jp
movsl
fmul
or
js
mov
shrl
imulb
cwtl
push
shrb
cmp
hlt
jle
xchg
shll
imul
adc
shll
popf
cld
dec
bound
xchg
nop
and
ss
aas
in
arpl
mov
xor
adc
add
xor
push
add
cmpsl
fistpl
lds
lcall
enter
mov
mov
sahf
popf
int3
repz
insl
xlat
je
dec
mov
fdivrp
lahf
pop
jg
bnd
adc
xor
std
ja
lcall
inc
push
and
xlat
sbbb
xchg
xchg
push
rcr
rorb
mov
fisubl
ret
inc
mov
cmp
shlb
push
shrl
cmp
sbb
movsl
mov
add
dec
jb
pushf
sub
jnp
add
jno
pop
out
mov
add
mov
out
jmp
push
popa
movsl
sbb
nop
clc
imul
rcrl
push
sub
mov
insl
arpl
loope
stc
sub
mov
xchg
sbb
pushf
pop
push
cmp
mov
sarb
sub
sbb
jnp
adc
repnz
out
mov
inc
xor
push
mov
repz
inc
cld
sub
jo
test
push
outsb
movsb
adc
cmp
fcompl
cmpsl
jne
icebp
and
fdivp
fildl
call
fimuls
jecxz
das
jo
aam
arpl
sub
mov
adc
popf
stc
lahf
lret
data16
cld
inc
and
shlb
pop
int
sti
mov
lret
jmp
jbe
xchg
mov
int
lock
push
ja
enter
add
xor
mov
pop
pop
adc
jns
rolb
stos
mov
fwait
aam
mov
test
loop
inc
mov
adc
push
sub
pushf
std
push
xchg
nop
or
jmp
sub
mov
fidivs
dec
add
push
jmp
mov
rcll
cwtl
fisttps
adc
push
mov
repz
push
testl
or
cmp
out
dec
or
in
mov
ficomps
stc
ss
enter
das
outsb
inc
jns
ss
fisttpl
dec
jp
lock
testb
int
and
xchg
add
dec
cli
shll
insb
ss
sbb
pop
jle
es
out
pop
addr16
aaa
pop
and
inc
inc
fisubs
or
pop
and
add
in
stos
lods
xor
add
lahf
in
cld
lret
mov
jns,pn
test
into
push
clc
ja
pop
mov
lock
jnp
pop
adcl
das
cmp
popf
lahf
mov
jle
nop
or
adc
adc
push
adc
arpl
add
je
std
loop
jbe
inc
adc
rcrl
mov
ret
mov
xchg
dec
jmp
mov
jnp
es
insl
shr
insb
mov
cmp
dec
dec
movsb
mov
adc
adc
sbb
mov
shrb
xlat
and
inc
mov
push
rorb
pushf
jnp
notl
push
ds
ds
xchg
mov
test
shlb
enter
sahf
incl
imul
mov
out
addl
mov
mov
iret
fs
cmp
mov
mov
xor
or
dec
pop
pop
scas
jbe
sbb
xchg
insl
mov
lock
sbb
push
outsb
add
cwtl
call
jbe
cli
jbe
add
pop
gs
lret
pop
in
aam
push
cmp
outsb
push
add
ret
lods
mov
negl
push
inc
rclb
call
icebp
movb
decl
das
hlt
mov
xchg
fstpl
sbb
jno
bnd
fs
mov
push
ja
daa
sbb
cs
mov
add
sub
xor
dec
sarl
mov
cli
shll
mov
stos
inc
gs
dec
idiv
in
stc
inc
in
sarb
daa
cmp
xchg
outsb
or
xor
lret
mov
inc
popf
mov
nop
add
or
movsl
push
xchg
cld
inc
les
or
mov
sub
cmc
cli
jle
in
rcrb
xchg
jns
mov
mov
popf
repnz
ret
aaa
cwtl
push
lods
pop
jmp
cmp
mov
cld
pop
ret
popf
or
or
aad
xlat
xchg
sub
imul
mov
fiaddl
scas
out
dec
lahf
inc
ds
pop
sbb
adc
cmp
mov
pop
pop
in
cmp
or
xchg
mov
push
add
mov
fidivs
mov
xor
iret
sub
pop
or
fistpl
xor
mov
mov
adc
push
pop
nop
pop
subb
ja
jo
mov
into
dec
adc
int3
loopne
dec
mov
sbb
pop
test
in
mov
ljmp
inc
mov
pop
dec
fsub
sub
imul
clc
bswap
insl
jmp
cmp
aas
idiv
mov
mov
jb
cmpsb
setbe
scas
rcl
stos
aam
in
testl
and
je
mov
add
adc
mov
loop
enter
cltd
lods
rcl
iret
mov
jbe
push
ja
or
lret
in
nop
inc
outsl
add
rcrl
or
in
ret
test
add
jnp
outsl
int3
push
add
mov
ficompl
andb
jae
jo
enter
popa
xor
and
pop
cmpsb
mov
test
fwait
dec
call
inc
sub
popa
fldt
jae
subl
lds
adc
out
ficoms
movsb
cmp
and
mov
or
int3
in
loop
cwtl
mov
shlb
shlb
stc
lock
dec
and
xchg
inc
clc
and
add
fwait
mov
stos
adc
rorb
cmc
inc
sahf
adc
mov
insb
movsl
loopne
sti
mov
dec
or
cmp
fmul
xor
fsts
std
pushf
dec
clc
dec
adc
lds
pop
ja
daa
cwtl
xchg
mov
cltd
in
pop
fiadds
fs
sub
loopne
sub
mov
fildll
jbe
test
cmp
push
inc
rclb
insl
mov
addl
mov
imul
loop
nop
adc
das
flds
cmp
scas
mov
ficomps
mov
cmc
add
mov
mov
inc
aad
jne
mov
test
push
shll
imul
dec
enter
xchg
push
inc
lret
cltd
pop
add
scas
mov
jl
push
sti
pop
js
mov
test
mov
movsl
cltd
add
int
cmpsb
sbb
das
div
inc
data16
push
mov
mov
fsts
jg
jg
stos
lods
push
pop
gs
arpl
or
sbb
loop
aad
mov
shlb
pop
lods
jne
and
repz
ja
ror
loope
mov
xor
jno
fidivrs
jo
rcrb
xor
inc
sarb
fwait
adc
mov
push
or
cwtl
mov
das
lcall
repz
int3
adc
dec
fiadds
inc
xor
mov
cwtl
aaa
sub
mov
ja
lock
push
out
inc
pop
fsub
lret
push
stos
inc
xor
jle
je
jbe
popa
scas
jl
and
jnp
mov
fwait
pusha
mov
jne
loopne
xor
mov
xchg
jge
leave
scas
xchg
mov
dec
ja
dec
lods
inc
out
lcall
mov
jle
cmp
hlt
int
push
pop
mov
adc
push
lods
lcall
cmpsb
pushf
mov
loop
lret
cli
ja
int
sbb
mov
dec
int
xchg
negl
stc
inc
rcl
add
out
fadds
cbtw
push
jge
sub
loopne
in
cwtl
dec
into
test
lds
cmp
test
add
push
push
fcomps
daa
cwtl
fmull
push
xchg
xchg
popa
cli
dec
jmp
scas
xchg
inc
ss
xor
mov
sub
xchg
fbld
bound
dec
add
andl
fwait
sub
lock
cmp
or
das
out
ljmp
sbbl
int
push
mov
ret
lods
ja
mov
and
or
dec
dec
lock
xchg
stos
je
mov
into
push
add
xchg
or
jne
popf
outsl
sub
sbb
lret
cmp
hlt
or
add
ljmp
test
sub
jb
mov
adc
inc
mov
or
lret
daa
fsubl
pop
cmpsl
mov
sbb
push
sub
sarl
insb
push
int
push
push
outsl
divl
testb
ljmp
cs
mov
adc
enter
sbb
aas
dec
push
fidivrl
mov
push
popa
cmp
int
dec
pop
xchg
in
data16
fsub
dec
jne
mov
cli
mov
mov
ret
leave
pop
add
dec
vmaxss
in
push
leave
lahf
push
in
outsl
lods
mov
popf
jbe
loop
psubsw
dec
sbb
sbb
outsb
mov
ret
mov
popf
loop
idivl
std
sbb
jle
mov
dec
scas
or
clc
jno
xor
mov
jge
inc
mov
enter
scas
mov
pusha
inc
mov
mov
jecxz
hlt
popa
adc
push
push
lods
cld
das
daa
push
daa
loope
movsb
mov
aad
mov
lahf
insb
inc
aas
mov
fucom
mov
loop
xor
mov
int3
xlat
sub
andl
lahf
insw
mov
movsb
fisttps
mov
add
dec
adc
lsl
outsl
dec
lds
out
sub
cmc
mov
sarl
cld
insl
rcrl
xchg
in
mov
subb
js
in
jge
mov
lahf
adc
out
add
jmp
dec
sub
add
fs
jb
mov
cli
xor
inc
or
cmp
movsb
sub
lock
cltd
pop
mov
lahf
scas
sarb
pop
adc
scas
xlat
jns
push
xchg
adc
mov
inc
mov
xor
add
xor
dec
jle
inc
icebp
or
cmpl
jae
in
ds
aam
or
aas
fisubrl
jmp
mov
push
fcmovne
cmp
cltd
jg
xor
mov
push
popf
sbb
into
repnz
dec
mov
lret
je
imul
fcompl
maskmovq
divl
das
push
mov
mov
or
sub
dec
popa
mov
cltd
fldcw
and
hlt
cs
cmp
aad
out
les
rcrb
loop
call
int3
repz
inc
push
mov
cmp
outsb
scas
pop
jl
hlt
aam
je
xchg
adc
sub
dec
pop
loopne
or
ret
leave
daa
rclb
jnp
stc
mov
aad
jle
adc
fldl
popf
adcb
jno
inc
mov
popf
mov
xorl
xorb
mov
inc
dec
dec
bound
pushf
pop
and
jle
xcrypt-ctr
cmpsl
fnstcw
xchg
jp
sub
jns
ds
and
pop
mov
cli
das
imulb
fs
or
and
mov
fldt
dec
push
or
in
dec
addr16
push
loope
ficoml
push
or
dec
fs
mov
push
shr
stc
pop
dec
fistpll
addb
bound
fldcw
add
out
pop
roll
pop
and
std
shl
dec
jo
fstpl
jg
imul
push
mov
jp
mov
add
sbb
out
xchg
mov
shrb
lds
in
or
jg
push
add
sbb
inc
loop
mov
xchg
aas
push
btc
aaa
rorb
mov
mov
cmp
sub
mov
and
cmp
inc
lods
loope
mov
mov
pop
les
repnz
mov
mov
aaa
lret
cmp
bound
stc
sbb
push
push
mov
mov
cmp
out
fdivrs
data16
mov
and
mov
mov
mulb
outsb
sub
push
inc
sarb
lock
mov
mov
sbb
jmp
jb
dec
jle
xchg
out
movsl
lret
xlat
jb
mov
jl
cmp
adc
outsb
cmp
xor
into
and
pop
cmc
mov
push
imul
int3
test
in
lahf
adc
dec
inc
or
fcoml
ljmp
ja
mov
inc
lock
inc
jno
jg
mov
dec
repz
push
and
cli
call
mov
cmp
pop
adc
out
mov
xchg
cmp
mov
icebp
xor
addb
mov
add
je
pop
fnsave
and
add
mov
imul
jecxz
sub
insb
in
int
sbb
inc
dec
imul
sbb
cmc
in
insl
in
test
loopne
jno
push
movsl
fsubl
push
nop
cmpsl
sub
ror
setl
lea
mov
ret
jp
cld
jae
xchg
inc
js
lods
lret
or
stc
in
arpl
pop
push
ja
incb
mov
push
test
inc
popf
add
xchg
adc
jl
lods
cmp
xchg
sti
mov
and
fisttps
lcall
aaa
dec
push
ds
xchg
sbb
movsl
cmc
fwait
dec
adc
lret
xchg
jbe
add
and
test
mov
push
cmpsb
adc
pop
pop
aas
mov
test
js
jns
dec
add
push
cmp
loop
frstor
ja
mov
xchg
int3
add
push
test
in
das
into
nop
popf
in
dec
or
add
sub
enter
xor
andl
lret
sub
mov
mov
lcall
mov
mov
out
fildll
jo
js
int3
mov
in
xchg
clc
adc
stc
sbb
popf
insl
add
arpl
sahf
sub
jge
gs
cmp
ret
jge
jp
movsb
cmp
lds
nop
sub
mov
and
pop
lds
pop
inc
addr16
movsb
dec
data16
enter
pop
push
icebp
rorb
in
xlat
lds
or
in
pop
rorb
sbb
jg
and
sahf
xchg
scas
xlat
mov
pop
lds
int3
pop
sbb
jge
pushf
inc
add
sub
cwtl
jp
mov
imul
in
rol
mov
lods
push
enter
xor
mov
xor
stc
push
out
dec
rorl
inc
sub
xor
jbe
or
loopne
xlat
xor
hlt
loopne
jae
xor
add
ret
loope
cmp
cmp
mov
mov
mov
lea
push
push
lcall
push
cmp
bound
dec
jo
faddl
sbb
inc
dec
out
aas
push
dec
sti
push
fdivrl
lret
jp
ja
stos
test
iret
sbb
xchg
mov
mov
aad
dec
sbb
dec
imul
xor
mul
sbb
movsl
sarb
lods
dec
sub
sbb
mov
mov
test
adc
or
mov
push
cld
scas
les
lock
pop
jle
testb
sbb
inc
pop
int
js
int
js
mov
xchg
pusha
dec
sub
mov
int
cwtl
arpl
imul
rcl
ret
shlb
mov
mov
xchg
gs
sub
mov
loopne
jno
loopne
jo
and
jo
mov
mov
mov
in
xor
insb
mov
add
iret
and
jecxz
pop
jmp
clc
lcall
pop
scas
ror
ret
sbb
mov
jp
movsl
cs
push
js
pop
incl
in
addl
das
jns
xor
imul
add
push
push
ret
dec
ret
mov
arpl
dec
mov
or
cmpsb
xchg
out
jb
push
leave
mov
inc
sbb
add
and
mov
les
xlat
fwait
je
mov
shlb
in
push
cmp
push
mov
lods
pushf
in
shll
div
cwtl
cs
xor
stc
arpl
fadds
dec
mull
dec
movb
popa
sbb
dec
xchg
mov
dec
in
jb
sbb
aam
jnp
adc
cmp
sub
adcl
push
in
call
jb
fst
jb
or
loopne
add
pushf
pop
ljmp
push
or
pop
lds
mov
aas
scas
addr16
test
lds
mov
movsl
inc
cli
addr16
mov
mov
xor
fs
cmc
test
ljmp
call
sub
inc
dec
inc
mov
cmp
dec
adc
xchg
data16
nopl
xor
add
pop
in
push
push
pop
push
insl
push
or
icebp
push
pop
or
in
jo
mov
out
mov
xchg
outsb
xchg
xlat
add
scas
test
mov
pop
les
sub
dec
les
out
xor
cmp
pop
addr16
push
sub
or
arpl
jne
ss
jne
xchg
lcall
icebp
sahf
lods
sbbl
cli
hlt
int
insl
xchg
call
popa
fcmovnbe
xchg
inc
sub
cmpsl
mov
lahf
mov
mov
mov
xchg
push
lea
jb
push
dec
outsb
xchg
add
leave
push
cli
mov
xchg
sub
pop
enter
clc
les
cmp
mov
or
flds
ret
cmp
rolb
rol
jp
adc
sub
xchg
sbb
scas
outsb
lcall
divl
jo
sahf
out
jmp
mov
test
inc
lods
or
repz
sbb
das
push
sti
xchg
inc
rol
aaa
mov
imul
fstp
das
mov
shl
mov
dec
out
pop
cltd
in
adc
pop
and
dec
mov
mov
or
dec
jae
xlat
inc
pop
xchg
cli
mov
loope
push
jne
dec
sub
bound
dec
ss
lods
ss
xchg
pop
into
and
adc
mov
push
mov
and
pop
std
idivb
push
push
adc
sahf
cmp
add
loop
sbb
dec
jne
add
out
ljmp
jmp
lods
jge
push
pushf
bound
sub
mov
sub
jne
ss
pop
aaa
lods
dec
pop
out
pop
ror
jmp
int
inc
mov
inc
mov
out
dec
testl
outsl
addl
out
pop
push
adc
mov
loop
and
mov
dec
ret
sbb
lods
mov
ss
lret
jbe
fwait
xchg
xchg
lret
js
call
je
lock
loop
enter
scas
xor
cs
ja
jge
sub
out
lds
div
into
push
lock
iret
sahf
dec
inc
xchg
sub
fildll
mulps
or
cmp
enter
lret
cltd
lea
inc
pop
dec
jmp
fwait
cmp
popf
jns
xchg
dec
std
mov
lcall
dec
popa
add
cmpsb
add
push
lret
iret
loopne
in
test
xchg
ficoms
aaa
adc
or
daa
push
rorl
lods
sub
adc
mov
jecxz
ds
stos
jno
inc
shll
xor
cmc
sbb
dec
in
xchg
mov
push
add
daa
test
mov
jns
xor
scas
sbb
mov
loopne
sbb
cmpsl
addb
pop
add
jmp
addb
pop
mov
push
je
push
les
or
cmp
sbb
mov
stos
rorl
mov
push
stos
ja
je
pop
je
test
lea
and
add
fildl
repz
mov
adc
xor
pop
scas
outsl
fwait
mov
mov
cmpsb
ret
adc
or
repz
adcb
sub
bound
push
repnz
lods
pop
mov
mov
and
cmpsl
dec
arpl
sub
out
icebp
jg
inc
jmp
pusha
mov
adc
sub
mov
scas
fidivl
inc
test
subb
and
cmc
fldl
lcall
mov
data16
scas
and
in
addb
xchg
divl
bound
and
ja
mov
loopne
aam
sub
data16
adc
mov
rclb
cmpb
push
stos
bound
mov
clc
add
rcrb
and
mov
adc
mov
pop
scas
into
imul
int
xlat
insb
iret
add
decl
adc
xchg
call
sbb
adc
xchg
dec
xchg
mov
gs
out
stos
cli
lea
inc
xor
das
mov
fdivs
mov
orl
pop
mov
ror
mov
push
sbb
cltd
and
jbe
and
adc
rclb
ja
loopne
jge
repz
sti
subl
dec
std
lret
xor
add
or
push
lds
inc
imul
xor
les
fmuls
std
out
dec
jns
add
std
lcall
sub
push
leave
adc
ss
es
scas
cmc
add
xchg
mov
daa
decl
fldcw
dec
les
jge
stc
test
mov
popf
sub
mov
mov
mov
xchg
jecxz
cwtl
bound
push
and
inc
in
xor
sbb
sahf
call
shll
loop
pushf
cli
mov
pop
mov
sbb
mov
neg
test
or
daa
les
bound
mov
or
bound
or
add
mov
clc
mov
pop
stc
push
push
push
adc
mov
not
push
fisubrl
add
mov
mov
mov
pop
mov
pop
jl
jge
or
sub
addr16
popf
lret
mov
jge
inc
or
jge
xchg
xchg
cmc
dec
jns
mov
push
adc
adc
sub
jne
je
arpl
stc
call
hlt
push
cmp
add
add
or
adc
ret
sub
ficoms
rolb
mov
jne
mov
cmp
movsb
mov
jle
xchg
mov
push
sub
ja
cmp
add
cmp
xlat
ljmp
mov
mov
mov
xor
sbb
out
cmp
mov
ror
in
mov
popa
loopne
movsb
loop
or
fmul
nop
mov
roll
add
xchg
roll
lret
inc
cwtl
mov
sub
stos
jg
out
cwtl
dec
stos
adc
xchg
and
cs
dec
inc
mov
cltd
repz
mov
aaa
icebp
filds
clc
lock
ljmp
lahf
stos
leave
pop
out
sub
adc
fwait
push
pop
mov
stos
fists
lock
adc
cli
xor
push
and
es
jno
fwait
dec
dec
sbb
jnp
inc
lret
ret
dec
loope
lea
add
mov
and
mov
cmp
sub
mov
dec
loopne
xchg
and
shl
jge
gs
aam
xor
or
stos
andb
enter
push
sbb
out
nop
popa
mov
repnz
mov
dec
mov
sbb
fcomi
outsb
and
ret
mov
pop
aad
pop
xchg
jae
imul
int3
sbb
dec
mov
std
pop
mov
loopne
sarl
loope
sub
sub
repz
sbb
out
jl
ficomps
mov
jl
icebp
std
out
in
and
pop
test
push
adc
mov
cmp
sbb
std
adc
flds
sahf
orl
sub
dec
jmp
aas
leave
dec
outsb
inc
movsl
notb
sub
jg
xchg
xlat
in
jno
sub
leave
jne
test
jmp
dec
sti
mov
mov
push
mov
sub
xor
cmp
mov
jb
xlat
lds
scas
mov
xor
aam
pop
jnp
in
mov
xchg
rorb
sti
test
pop
xchg
and
sub
jg
int3
and
stos
dec
pop
xchg
pop
sub
ds
rclb
test
push
add
cmp
adc
cmp
cwtl
mov
pop
xor
sub
sub
in
mov
leave
imul
fdivl
test
jmp
outsb
inc
push
inc
push
pop
ror
popa
dec
inc
inc
add
ds
shlb
add
jecxz
pop
scas
sarl
rcrl
add
lods
out
dec
cmp
addb
mov
sub
jg
xor
sub
push
or
push
sub
pop
sub
mov
lds
xchg
mov
ret
mov
iret
cmp
sbb
test
pop
mov
cs
hlt
adc
mov
sub
inc
subb
cltd
cmc
sbb
ret
mov
repz
jp
cmpsl
mov
jge,pn
dec
jl
repnz
xor
pushf
lds
and
xor
pop
rcrb
jg
and
dec
cmpsb
pop
test
rcr
xchg
adc
out
pop
mov
push
xchg
sub
mov
cmp
mov
cmp
dec
test
pop
mov
dec
xor
mov
sbb
mulb
rorl
jne
cmc
ds
jb
je
lret
out
repnz
lea
mov
imul
cld
movsl
sbb
jmp
fcoml
jns
cmp
jns
xor
adc
loope
sahf
pop
lds
cmp
mov
lcall
xchg
add
xchg
rolb
mov
jle
lods
out
lea
cmc
pop
hlt
inc
dec
and
icebp
test
in
xchg
scas
jnp
adcb
lods
inc
mov
sub
fdivl
lret
sahf
test
dec
xchg
add
aaa
jp
jmp
dec
pop
repz
ss
mov
mov
rclb
jmp
sub
push
iret
mov
cltd
xor
roll
dec
clc
lods
sbb
pop
stc
cmp
jp
push
xor
ret
mov
aad
sbb
lods
xchg
pop
dec
and
push
out
cmp
adc
out
out
loop
jns
xor
mov
nop
outsb
mov
mov
cmp
mov
sbb
dec
orb
mov
pop
inc
repz
aad
adcb
mov
test
pop
subl
jmp
inc
cltd
lds
fcoms
mov
pop
mov
mov
adc
test
push
sub
mov
lock
loop
inc
cmp
mov
hlt
in
shl
mov
lods
lock
fldt
xor
xor
mov
jg
sub
hlt
sbbb
int3
iret
push
imul
or
push
pop
xchg
jle
dec
xlat
sbb
inc
outsl
movsl
mov
je
push
daa
ja
and
fcomps
push
lea
mov
pop
lods
mov
lock
jns
inc
bound
jns
push
jg
test
fisttps
xchg
clc
iret
sub
pop
movsb
mov
pop
pop
add
mov
mov
xor
nop
fmull
lea
jecxz
push
mov
xor
pushf
and
ds
pop
pop
sbb
add
addr16
repz
sub
mov
cmp
in
pop
jb
mov
push
loop
dec
ret
xor
sbb
sbb
push
stos
cmpsb
mull
add
sub
int3
mov
jg
or
subb
clc
lods
or
loope
fwait
pop
pop
into
and
jbe
stos
call
stc
cmp
adc
inc
mov
push
sub
pop
icebp
mov
pop
pusha
int3
shll
pop
mov
orb
cmp
xchg
gs
lock
sbb
test
in
test
xchg
scas
sti
aas
jnp
jbe
pop
mov
inc
cmp
pop
aam
pop
or
int
mov
jecxz
scas
aam
jne
pop
sub
jnp
es
push
std
push
xchg
cld
outsb
or
in
adc
icebp
xacquire
pop
and
adc
outsl
xor
pop
lret
or
mov
jmp
inc
aas
xchg
mov
push
sub
pop
lret
push
out
ss
mov
imul
sbb
mov
jg
dec
pop
jg
push
rcll
xor
stc
mov
xchg
mov
ss
xchg
out
dec
add
jno
jp
sub
xchg
test
dec
pop
xchg
add
mov
mov
lret
adc
jp
adc
hlt
adc
enter
xchg
adcl
mov
dec
and
xor
pusha
inc
fnstenv
inc
insb
mov
sub
mov
loopne
lock
sbb
aas
xchg
xchg
das
fcompl
xchg
sub
xchg
or
xor
repnz
daa
jmp
mov
pop
addb
ficoml
xor
rorl
push
into
adc
and
into
int
xor
jle
pusha
add
add
movsl
dec
dec
lea
test
out
mov
mov
pop
testb
loope
add
push
addl
or
jle
imul
hlt
push
add
pop
pop
xchg
call
dec
cmp
xor
sbb
out
jno
std
adc
lret
sbb
and
in
and
or
sysenter
movsl
dec
and
cs
out
mov
mov
or
push
clc
jae
repnz
inc
xor
divl
xchg
fldt
data16
sub
mov
clc
in
popa
push
dec
mov
lods
into
mov
dec
std
lahf
jno
mov
sub
mov
push
mov
outsl
and
pop
lods
sub
inc
mov
ss
push
push
jb
mov
mov
mov
jb
mulb
loopne
cltd
xchg
push
sub
and
push
adc
and
out
sub
fdivrp
bound
sbb
cmpsb
lcall
mov
movsb
andb
push
daa
inc
pop
push
sub
outsl
mov
push
es
xor
fs
and
dec
scas
sbb
cmp
icebp
imul
push
mov
scas
xor
fs
shrl
mov
xchg
xor
in
adc
and
bound
aad
movsl
dec
xlat
popf
fsubp
xor
rcrl
sbb
mov
sbb
push
inc
xor
pop
cmpsb
nop
test
repnz
add
mov
mov
inc
jnp
rcrb
fwait
push
lahf
out
mov
cmp
sbb
lods
rorb
lock
scas
bound
out
push
xchg
push
mov
jo
jo
test
aas
je
jns
test
in
shlb
cmp
repnz
pop
jp
cmpsb
js
ret
jb
dec
jno
scas
fwait
mov
mov
jo
xlat
call
out
jns
mov
jae
cli
ds
int3
faddl
sbb
outsl
call
lock
and
mov
arpl
add
sub
cmp
inc
mov
dec
adc
adcb
leave
popf
data16
xchg
jl
jmp
fbld
and
ja
test
push
jmp
rcll
mov
and
xchg
addb
mov
push
adc
xlat
ret
jne
sbb
mov
push
insb
or
mov
dec
nop
sbb
add
aad
inc
clc
mov
repnz
sub
jno
sti
sahf
xchg
fwait
jo
or
out
sub
scas
leave
maxps
jmp
jno
stos
inc
jo
pop
jo
fsubrs
cmp
cmp
and
inc
push
jmp
mov
pop
imul
leave
dec
ja
outsb
mov
insl
add
ror
jmp
xchg
xchg
xchg
aam
pop
hlt
lods
movsb
sub
pop
cwtl
sbb
and
inc
sbb
iret
xchg
jl
fsubr
shlb
push
cmp
fimull
aam
or
mov
add
imul
icebp
xor
loop
mov
popa
jmp
jo
xorl
pop
push
test
lret
pop
in
dec
out
sub
lret
into
xor
and
mov
les
clc
iret
aad
xchg
and
push
clc
vphaddbq
scas
push
jnp
rorb
fmull
xor
mov
arpl
sub
insl
push
sbb
xor
push
sub
cmpsl
cmc
rclb
in
jmp
add
jno
movsb
lahf
pop
dec
in
push
ret
and
mov
mov
rcrb
adc
loop
sahf
cmp
pop
shl
ja
std
adc
lea
jp
jp
adc
das
fistpl
out
adcl
xor
jmp
imul
mov
repz
popa
imul
push
fsubrs
test
add
loope
sub
xchg
ljmp
jg
icebp
andl
and
jbe
scas
jle
adc
push
push
fnstcw
xor
mov
adc
mov
cmpsb
mov
lahf
arpl
cmpsb
xchg
mov
dec
push
pop
aas
xor
loope
aam
mov
mov
xor
xor
ret
scas
je
mov
call
bound
xor
mov
sub
int3
xchg
jbe
and
xchg
push
jge
das
lods
das
fcoms
cwtl
dec
repz
clc
push
hlt
sbb
xor
lahf
lahf
or
cmpsl
les
dec
and
push
xor
pop
scas
inc
pop
scas
aam
testl
or
cmc
push
or
mov
insl
in
mov
push
cmp
xchg
mov
iret
mov
xchg
cwtl
or
fs
pusha
pop
test
shl
dec
lods
push
sub
pop
js
cmpsl
cmp
inc
int
lea
cltd
inc
pushf
jmp
cltd
fnstsw
pop
loopne
xchg
and
sahf
repz
outsl
adc
test
dec
inc
lret
cmpsb
mov
ja
outsl
fs
jp
xchg
dec
in
rorl
pop
scas
lret
jbe
rcll
sbb
in
pop
fs
mov
dec
data16
xlat
and
lcall
repz
push
rorb
je
lock
push
mov
jbe
push
jl
ret
push
stos
js
and
std
ret
mov
push
dec
mov
inc
jbe
jb
adc
mov
xchg
dec
sbb
movsl
cmp
ljmp
test
shrl
dec
cmp
dec
mov
or
mov
xor
imul
mov
repnz
inc
mov
inc
arpl
mov
out
je
outsl
mov
jp
xorb
std
xor
add
fs
fistpl
leave
hlt
fldenv
andb
sub
sbb
mov
stos
repnz
add
adc
pop
dec
cmp
mov
sbb
fs
jns
outsl
notl
fwait
loopne
fadd
jge
sub
ja
aaa
xor
xchg
mov
xchg
aas
dec
dec
or
jne
add
stos
jo
std
pop
gs
and
movsb
je
fbstp
hlt
sbb
or
sbb
lods
add
imull
js
push
jno
pop
pop
daa
popa
add
pop
jmp
es
nop
outsl
mov
pop
dec
dec
sub
lret
mov
fistpl
pop
lret
rcll
ds
psrad
mov
scas
and
andl
adc
in
cmpsb
mov
cmpsl
fnstsw
lret
mov
and
add
push
jl
les
cld
push
push
adc
movsb
pop
lret
push
sahf
add
ljmp
mov
pop
out
setp
push
dec
icebp
mov
or
mov
sbb
loop
jno
adc
jg
mov
imul
xchg
jns
xor
push
test
enter
inc
lahf
mov
jbe
lds
sbb
xor
sub
mov
cli
pop
sub
ds
ljmp
or
outsb
insb
and
test
shrb
inc
sarl
push
aad
mov
das
mov
rcll
jb
icebp
jae
xchg
andb
xor
pop
jge
out
mov
movsb
push
push
xchg
or
hlt
adc
js
adc
hlt
jecxz
fwait
mov
cmp
inc
cmpsb
xor
xchg
les
jge
mov
insb
cli
adc
fcoms
and
dec
jle
and
or
mov
orl
mov
mov
cmp
cld
push
push
sahf
lret
jge
sbb
mov
push
pop
xchg
adc
negl
and
dec
mov
jb
in
inc
sbb
rorl
jne
push
and
sbb
adc
test
in
mov
xor
xchg
inc
pop
mov
out
outsl
stos
test
cmp
stc
xorl
aam
xor
into
out
pop
push
mov
adc
std
icebp
push
nop
shlb
mov
jno
sbb
and
sub
push
fildl
sbb
subl
sbb
mov
push
push
sahf
int
pop
cmpsl
imul
mov
lret
adc
mov
jle
loop
dec
or
push
sbb
inc
xchg
movsb
popa
leave
aad
pop
or
jecxz
test
inc
inc
pop
test
ds
adc
mov
pop
jg
les
cmpsl
js
testl
adc
pushl
gs
call
mov
jle
dec
stos
popa
js
rol
arpl
les
pcmpgtd
pop
xchg
jp
xchg
cmp
ss
jae
imul
iret
adc
xchg
jo
inc
inc
clc
mov
test
iret
hlt
js
das
ds
mov
mov
xchg
or
mov
loope
aas
int3
clc
jmp
jge
cmp
jmp
mov
xchg
hlt
lret
mov
nop
add
dec
lret
or
les
mov
iret
cli
push
push
jno
les
pop
xchg
pop
pop
sub
shrl
jns
ret
test
decl
fucomp
xchg
sbb
fildll
lds
adc
mov
and
sbb
mov
xor
scas
xchg
and
jmp
and
loope
add
add
imul
pusha
sub
loope
dec
or
ja
mov
cmpsb
cwtl
mov
sbb
xchg
rcrb
add
shrb
out
adc
mov
popf
ret
dec
and
dec
lods
stos
cld
jb
mov
and
aas
loop
repz
push
cmp
adc
sub
pusha
adc
inc
test
je
push
jle
fmuls
ucomiss
push
pop
push
mov
out
rcr
mov
pop
nop
adc
jne
ret
stos
pop
popa
idivb
fmull
jle
sbb
dec
leave
inc
pop
stc
mov
mov
lret
test
or
xchg
test
outsl
sbb
fs
imul
sbb
imul
out
sub
cmp
pop
cmp
sub
add
and
test
pop
bound
out
xor
add
adc
addl
outsl
sub
sub
mov
push
fcomps
mull
sbb
xchg
inc
gs
sbb
jle
divl
jae
sbb
cmp
shr
mov
inc
pusha
mov
call
dec
stos
mov
lcall
mov
leave
shrl
cwtl
pop
stc
int
xor
int
mov
pop
adc
xchg
xlat
ret
in
dec
xchg
lahf
lcall
lods
cmp
fwait
inc
adc
fsubl
dec
inc
jo
jp
mov
mov
popa
cli
inc
pop
xchg
inc
std
push
add
mov
stos
shlb
mov
les
int3
pop
xor
cmp
mov
clc
lret
pop
inc
adc
cli
mov
sub
and
stos
add
test
mov
and
scas
cltd
popf
jl
add
std
push
inc
hlt
cmp
add
jbe
fists
ja
jle
sub
loope
cmpsb
call
xchg
pop
mov
or
imul
jbe
out
jp
gs
push
stos
clts
roll
in
clc
xchg
and
les
xchg
leave
adc
stc
jg
add
outsl
popf
mov
ss
sbbl
shl
xchg
push
mov
sbb
and
xchg
pop
clc
xchg
mov
jle
std
je
das
or
out
push
xchg
inc
push
sbb
pop
leave
sub
lahf
cld
push
testb
xchg
add
aas
sbb
fldt
imul
movntq
out
sbb
scas
aaa
mov
imul
subl
fsubrs
or
ret
gs
add
std
frstor
xchg
dec
add
xchg
imul
cmp
sahf
inc
sub
sub
fidivrl
dec
pop
lock
into
add
and
movzwl
mov
lcall
lods
mov
cwtl
cmp
rcrb
test
dec
xor
ret
cmp
rorl
pop
outsb
or
fwait
pop
push
mov
das
aam
and
inc
loop
sbb
fnsave
lock
sub
and
pusha
out
es
gs
xchg
pop
jb
sbb
and
mov
into
dec
pop
std
test
mov
or
sub
mov
sbb
adc
cltd
mov
imul
mov
bound
cmp
dec
fimuls
das
in
mov
jae
std
cli
adc
sahf
mov
mov
sub
pop
mov
stos
stc
push
jp
std
sti
rol
mov
mov
push
mov
jne
pusha
arpl
adc
mov
mov
sbb
cmp
xchg
movsb
xor
aas
inc
aas
push
or
lcall
add
inc
adc
call
aam
sbb
xchg
aas
in
jb
fwait
stos
in
aad
pop
inc
in
test
loope
mov
lods
mov
fidivrs
imul
or
fldenv
push
repnz
or
push
jp
pushf
loope
pop
lcall
rcrl
ja
lret
cmp
stos
in
stos
push
jno
xorl
jnp
mov
push
pop
mov
xor
push
sub
fs
jae
jecxz
add
xchg
add
loop
out
xchg
fidivrl
mov
adc
or
loopne
pushf
shl
cmp
ss
lods
fiaddl
pop
iret
scas
mov
xor
mov
adc
es
call
aas
imul
cmp
cmpsb
stos
mov
sub
gs
cli
cmp
pop
mov
mov
dec
jle
dec
in
jle
jle
lods
andl
push
and
mov
push
mov
adc
rorb
sbb
ss
aad
sub
jb
mov
sbb
scas
popa
pop
inc
stos
mov
adc
je
sbb
adc
mov
out
js
aas
sbb
mov
or
inc
and
pop
jns
or
lods
push
and
xchg
add
mov
mov
lcall
fiadds
lea
sbb
fidivrl
sub
movsb
fwait
or
shrb
lock
pop
xchg
mov
shrb
mov
mov
subb
fs
jl
jge
roll
shlb
jecxz
mov
btc
pop
ja
enter
and
dec
nop
push
cmp
ret
xchg
insb
adcl
test
pop
cmp
mov
and
xchg
jbe
fcompl
outsb
addb
test
sub
in
jmp
repnz
mov
lods
insl
pop
aad
lcall
lcall
les
push
mov
push
pop
test
and
ljmp
into
cmp
cmpsl
packsswb
loopne
iret
mov
xorl
out
out
pop
aad
jecxz
push
add
in
aam
mov
or
jg
adc
daa
lock
jg
or
rcrb
jl
pop
push
mov
cmp
stc
jle
pop
cmp
inc
icebp
adc
pusha
ds
dec
notb
jl
pop
negl
mov
adc
cmp
ljmp
mull
ds
lea
add
idivl
int
sbb
mov
aad
out
cmpsb
push
shll
cmp
lcall
sub
add
adc
test
add
mov
mov
jmp
adc
xor
ss
push
cld
data16
or
xor
out
jns
lock
bound
sbb
scas
xchg
push
push
cmp
mov
out
cmp
movsl
fs
push
sub
adcb
mov
push
inc
out
loop
add
or
out
mov
pop
xor
bound
cmp
in
adc
out
lret
into
jne
mov
dec
pop
shrl
sub
cmc
lods
cmpsl
sbbl
pushf
sbb
shlb
jmp
ljmp
push
addl
inc
lret
leave
push
or
jbe
push
std
fisubrs
sub
dec
xor
xor
ja
inc
add
jl
and
and
loop
testb
cld
stc
pop
idivb
inc
sub
mov
cld
dec
das
jge
stos
jecxz
dec
cmp
xchg
pushf
dec
cwtl
mov
test
addr16
mov
cmp
pop
adc
dec
sub
xchg
add
mov
xlat
add
push
sub
and
jnp
bound
xor
lock
aam
pop
jne
sbb
mov
pop
lods
xlat
dec
sub
imul
sarb
imul
clc
push
inc
mov
xchg
pusha
jnp
xor
inc
add
mov
xor
nop
push
cmpl
dec
cs
inc
adc
inc
or
add
or
stos
clc
adc
aam
ja
mov
out
fistpll
cld
clc
cmp
lret
testl
das
orb
cli
jno
je
dec
js
hlt
add
out
arpl
jmp
shlb
and
and
pusha
sub
stc
and
in
les
pop
mov
push
aas
gs
cmpb
dec
je
sbb
lods
push
sbb
xchg
jle
cmpsl
adc
dec
int3
adc
js
xchg
movsl
call
fdivrp
pusha
cmp
mov
dec
fucomi
in
lcall
loopne
mov
mov
outsb
fprem1
pop
int3
jb
mov
adc
jle
cmp
popf
inc
jno
adc
adc
add
int3
adc
dec
outsl
fcomps
dec
inc
addr16
pop
xchg
xchg
xor
mov
xlat
lahf
inc
or
cmpsb
xor
sbb
pop
insl
int3
push
inc
add
test
push
js
repz
iret
mov
mov
je
jle
push
ret
jo
shll
stc
xlat
or
repnz
dec
mov
lods
cwtl
lods
xor
or
int
mov
dec
dec
pop
xor
addr16
push
xlat
xlat
push
rolb
std
lret
add
dec
or
popa
lret
mov
loopne
sar
push
data16
notb
xor
fldl
push
xor
jg
insl
lcall
sahf
add
mov
add
icebp
pop
scas
sub
push
lds
xchg
es
loop
jno
in
outsb
ss
push
cmp
or
sub
push
xchg
jl
cli
dec
imull
pop
pushl
fistl
adc
ret
popf
mov
xchg
arpl
int3
jae
fldt
push
push
sarl
jnp
les
pusha
ss
out
mov
decl
push
push
dec
out
cmc
out
cli
and
gs
lea
or
arpl
and
push
sub
mov
sbb
jno
jecxz
pop
outsb
arpl
dec
and
movsb
xor
xor
jge
sti
adc
jbe
repz
cld
cmp
xor
xor
rcrb
rcrb
dec
loopne
imul
push
lods
mov
outsl
adc
stos
add
pop
xor
mov
leave
jecxz
scas
outsb
addr16
test
pop
push
xchg
mov
pushf
mov
and
cmp
das
push
out
lahf
and
icebp
out
insb
lcall
mov
fadd
nop
int3
les
jne
imul
jbe
jmp
pop
fldt
lret
cmp
pop
pusha
push
int3
xor
sbbl
cmp
xor
push
pushf
adc
mov
mov
imul
mov
jb
fstpt
ret
aad
nop
dec
sbb
bound
div
icebp
sub
mov
cwtl
and
and
fsubrp
dec
and
sub
shll
cltd
push
stc
stos
sbbb
mov
sbb
dec
cli
pop
cmp
pop
cmp
pusha
or
push
das
aaa
inc
and
psraw
ficomps
pop
pop
call
or
xchg
xchg
loopne
mov
inc
or
js
dec
ss
stos
test
push
repz
imul
es
push
js
rcr
mov
mov
std
mov
cmc
or
sbb
jno
jge
and
in
rorb
mov
stos
dec
test
add
cmp
push
cli
stc
popa
push
std
in
out
pusha
dec
pop
movsb
xchg
push
or
pop
pop
jb
push
push
cmp
dec
jge
pop
mov
test
enter
xrstor
inc
push
mov
xchg
mov
mov
push
rcrl
sbbb
enter
testb
mov
stc
clc
pop
mov
in
ret
and
mov
scas
dec
xchg
stc
push
dec
adc
cmc
jmp
ret
mov
mov
and
js
xchg
mov
push
sti
aaa
aam
hlt
pinsrw
test
cmpsl
lret
pop
inc
aas
pushl
sbb
enter
addr16
cli
imul
and
jnp
test
adc
ss
outsl
pop
inc
xchg
sbb
lea
inc
mov
and
xchg
les
flds
mov
cmpsb
cltd
fwait
adc
loopne
out
fldl
cmpsl
loopne
mov
hlt
mov
data16
lea
sbb
fcoml
ret
add
push
xor
inc
or
ret
shlb
sbb
jns
push
sti
jo
idivb
mov
push
mov
outsl
test
xchg
enter
adc
movl
inc
add
mov
and
jg
jecxz
push
add
mov
xchg
xor
sbb
xor
mov
mov
pop
mov
lods
mov
dec
push
xchg
cld
int
and
mov
add
mov
ja
adc
cmc
and
aas
xchg
and
ficomps
adc
movsl
lcall
mov
mov
enter
jb
sbb
es
mov
dec
ss
insb
sbb
mov
push
loope
insb
sarb
test
mov
sti
jl,pn
mov
out
stc
jmp
inc
inc
movsb
fists
and
and
or
shlb
cmp
sub
add
jne
add
dec
adc
adc
pushf
add
mov
jl
inc
cmpsl
sub
popa
into
gs
jmp
mov
jne
xor
cwtl
dec
jns
cs
enter
mov
jg
and
jg
xor
push
push
mov
jnp
aaa
lret
fwait
pop
lods
rcrl
inc
popf
les
pop
lock
cmp
cwtl
scas
es
shll
cltd
sarl
js
insl
stos
loop
mov
out
jecxz
mov
dec
das
sahf
imul
imul
imul
cmp
sbb
and
out
repz
in
xchg
and
pop
push
repnz
into
fistpl
cmp
fstps
pop
inc
inc
shl
nop
and
test
fs
mov
push
and
fxch
mov
aaa
or
lahf
stos
xor
sub
sub
jno
and
mov
incb
mov
pop
jae
sti
dec
sub
or
mov
in
and
mov
mov
insb
mov
or
shrl
xlat
ss
gs
imul
leave
cli
cld
test
loope
xchg
testb
pop
cmp
and
push
mov
inc
jnp
sbb
mov
jle
inc
daa
and
pop
xchg
pusha
cmpsl
sub
lods
add
fwait
rolb
test
mov
ret
mov
inc
mov
inc
push
test
mov
add
js
or
pop
mov
ds
jns
pop
fnsave
xorl
loop
int3
repnz
clc
movsl
add
out
xchg
inc
xorb
vaddps
push
arpl
jmp
push
outsb
inc
mov
mov
or
movsb
lret
push
or
jno
mov
es
adc
mov
insb
imul
loop
inc
in
enter
popa
das
je
cmp
ret
jl
mov
jge
js
out
xor
in
pop
scas
call
xlat
fdivl
fiadds
je
jmp
mov
cmp
mov
xchg
icebp
int3
leave
andb
xchg
aaa
mov
sub
sbb
test
dec
mov
pop
mov
mov
pop
fbstp
sbb
in
rcrb
in
add
test
xorb
sbb
mov
xor
shrl
dec
cltd
mov
xlat
jle
lret
or
dec
xchg
test
mov
inc
sti
xor
mov
push
jmp
lret
sbb
add
jae
xor
pop
inc
inc
movsb
push
addr16
iret
xchg
addl
xor
xchg
mov
push
sbb
popa
mov
and
cmp
in
dec
sarl
sqrtps
pushl
mov
lcall
add
in
in
ja
pop
xor
fldt
imul
lret
xadd
aad
rclb
push
jecxz
lcall
push
fdivl
mov
adc
mov
lret
call
arpl
mov
pushf
in
rcr
pushl
jb
xor
out
leave
add
jnp
adc
lcall
out
xchg
aam
pop
jo
xchg
sub
ffree
and
pop
dec
adc
or
ds
stos
ljmp
cmpsl
or
fstpt
mov
xchg
xchg
movsl
stc
mov
fcompl
mov
fs
ja
mov
subb
adc
add
mov
push
lret
adc
pusha
daa
add
nop
bound
rorb
movl
loopne
enter
mov
add
jb
and
imul
test
jl
mov
lahf
jmp
lret
mov
mov
push
fldenv
mov
sub
adc
out
enter
jne
movsl
or
cli
push
stc
out
imul
mov
dec
shll
shl
test
shll
int3
mov
movsb
insl
fldl2t
fnstcw
sbb
ljmp
pop
pop
aaa
pop
inc
pop
and
cmp
ja
addb
jbe
adc
mov
xor
xchg
push
jo
fcompl
sbb
xchg
inc
pushl
push
adc
adc
jp
aam
push
mov
inc
pop
and
pusha
pusha
test
dec
push
stos
inc
jae
aam
pop
int3
shlb
cltd
jg
push
shl
cmpsl
fmul
adc
fs
dec
inc
or
fildl
aas
mov
push
into
stos
adc
out
mov
ds
les
stc
pop
orl
stos
ja
xorl
insl
xchg
cltd
pop
jp
inc
xor
fs
jne
jg
lea
stos
push
ficoms
imul
sbb
jno
into
dec
mov
dec
out
xor
jo
mov
cmp
nop
add
aaa
mov
mov
ficoml
jbe
pop
lret
push
jnp
and
popa
int
fcmovb
add
imul
mov
or
fdivs
xchg
push
or
mov
mov
pop
add
and
and
xorb
in
ret
stos
leave
mov
dec
pushf
mov
push
outsb
es
imul
aad
push
fs
enter
adcl
pop
and
cltd
daa
in
pop
jge
sti
insb
pushf
mov
rcrl
jg
or
jbe
dec
push
mov
addr16
mov
daa
add
or
fdiv
add
cmp
in
notl
ja
lock
push
arpl
shlb
addl
dec
aaa
mov
or
aam
mov
shl
sub
xchg
mov
rcrb
push
jmp
cmp
push
icebp
pop
jp
fldt
lahf
aad
pop
adc
in
aaa
movsl
repnz
inc
clc
das
and
aaa
or
jns
mov
sbb
stc
insl
inc
mov
fildl
cmpl
ja
insl
fsts
xchg
clc
movsb
jp
jnp
push
mov
mov
jne
out
inc
ss
imul
mov
shll
cmpl
loope
sbb
mov
sbb
xchg
pop
sub
cmp
xchg
xor
mov
push
jle
push
and
insl
pop
es
cmpsb
mov
push
in
test
xor
bound
mov
ret
inc
rorb
sahf
dec
mov
inc
push
rclb
cmpsb
enter
inc
call
cwtl
push
adc
lods
or
push
pop
or
xor
mov
arpl
and
xor
xchg
movsb
or
or
push
cltd
gs
cwtl
into
mov
out
lret
invd
pop
div
mov
je
lret
xor
inc
and
std
sbb
lock
shl
lods
int3
sbb
lret
xor
and
cwtl
mov
cmpsb
mov
mov
dec
imul
dec
jno
push
pusha
loopne
adc
xor
dec
mov
pop
jecxz
pop
mov
lahf
mov
inc
jecxz
ss
lret
push
lahf
cmp
mov
pushf
sub
pushf
mov
cwtl
mov
ret
pop
aaa
es
insb
test
test
pop
xor
in
pop
cmpsb
loop
out
nop
cmp
test
xchg
ds
aad
leave
or
faddl
mov
scas
mov
ret
pushf
negb
mov
and
les
cmp
leave
mov
pop
notl
sub
mov
repz
xor
mov
cmp
fcmove
aas
insl
outsb
test
push
xor
xchg
dec
insb
divl
jne
cmp
scas
es
xchg
shl
data16
mov
jnp
imul
notl
mov
mov
push
xchg
aad
mov
cli
jae
loopne
rorl
mov
sbb
mov
jo
test
sahf
rcrl
mov
scas
jb
lret
or
and
in
or
xor
clc
loop
dec
mov
or
mov
enter
mov
push
fidivl
xchg
sub
cli
or
movsl
pop
mov
jecxz
std
jl
pop
sbb
ds
mov
bswap
mov
pop
xchg
sub
xor
add
lahf
arpl
xlat
push
fsub
adc
lahf
adc
jnp
xchg
test
repnz
rorl
push
cltd
and
movsl
pop
and
add
mov
mov
xchg
addr16
imul
mov
ss
mov
stos
adcb
push
add
adc
push
pop
push
sub
dec
shrl
add
pop
lock
loope
push
cmc
out
mov
aas
loope
mov
lods
mov
sub
jmp
cli
sbb
add
jecxz
test
or
cli
cmp
test
push
sbbl
sub
mov
cmc
inc
inc
cmp
add
mov
imul
lds
sub
daa
nop
test
shrl
add
lea
test
jno
cmp
xchg
stos
test
xchg
mov
or
cwtl
cmp
cmp
dec
xchg
repz
fsubl
addb
xchg
addr16
xlat
mov
das
lcall
lods
aaa
pop
add
jp
and
jmp
fucom
popf
dec
jg
imul
imul
cmp
adc
fldl
in
rcrb
and
dec
or
mov
adc
outsl
call
xchg
out
pop
stos
and
pop
ljmp
pop
aaa
and
or
ss
jbe
popa
movb
and
popf
jne
cltd
cmp
ret
pusha
fidivl
dec
cmp
pop
sub
xchg
mov
xor
xchg
sahf
lea
add
std
sar
cmpsl
fidivrs
or
lock
mov
sbbb
fidivrs
divl
pop
mull
pop
test
dec
sti
xchg
mov
ja
pop
or
in
cmp
or
dec
inc
in
outsl
test
add
push
mov
mov
mov
cmpsb
mov
mov
cld
cmc
fadds
jae
push
aaa
fs
test
out
mov
int
sub
pop
psrad
mov
movsl
fistps
inc
xchg
mov
cltd
cltd
pop
cmp
repz
gs
rclb
sub
pop
test
sahf
xchg
pop
and
outsl
movsb
dec
pop
aaa
rorl
xor
push
xor
mov
and
repz
add
pop
enter
push
pop
jl
mov
pop
lret
mov
mov
insl
in
test
sbb
sub
xor
inc
imul
xor
imul
pop
data16
mov
push
lea
fadd
leave
adc
xor
lock
inc
push
mov
fsub
mov
xchg
fwait
mov
inc
inc
inc
into
stc
inc
test
outsb
adc
inc
jbe
adc
icebp
mov
fldt
in
repz
push
test
fiaddl
sub
test
stos
xlat
movsb
mov
xor
shr
dec
fwait
add
cli
test
add
stc
pause
out
aaa
add
lahf
insb
in
subl
and
mov
xchg
test
icebp
pop
mov
mov
push
ror
jne
pop
xchg
daa
cmp
pushf
mov
sbb
mov
clc
and
or
mov
jbe
repnz
das
jge
cmc
cmp
aad
imulb
push
repz
cmpsb
lret
fnsave
cmp
inc
and
jecxz
xor
mov
fnstcw
in
ret
iret
jecxz
in
cmc
and
xlat
adc
or
pop
adc
loop
insl
into
dec
sbb
push
sbb
rcl
popf
repz
pop
pop
testl
and
loop
clc
fidivrl
dec
adc
mov
cmp
jns
mull
fsubrl
jno
in
xor
outsb
jp
es
roll
addl
ljmp
clc
jecxz
and
mov
mov
mov
incb
aad
pop
jg
hlt
sub
xor
inc
daa
loope
gs
mov
movsb
cmp
adc
clc
in
aaa
inc
adc
mov
arpl
rcrb
lods
add
push
sti
mulb
inc
loopne
shrl
mov
sub
pop
dec
imul
or
add
test
or
add
mov
or
aas
ljmp
xchg
icebp
imul
data16
aad
mov
jge
pop
fwait
inc
or
and
and
jge
fidivs
mov
sub
js
jb
ljmp
clc
loopne
mov
mov
clc
iret
pop
cmp
inc
push
ss
xchg
jmp
jmp
sub
mov
xor
movsl
xorl
mov
bound
jns
std
inc
jecxz
sbb
xchg
fstl
xchg
std
sbb
jmp
pop
fstpl
cmp
or
jb
push
ss
inc
or
push
inc
sbb
lods
xchg
jno
pusha
add
divb
or
std
ljmp
ret
xor
aam
adc
roll
sbbb
xchg
push
outsl
fidivs
fwait
mov
mov
mov
push
pushf
sub
mov
lahf
fdivl
or
sbb
jns
xchg
dec
pop
popa
mov
mov
stos
imul
repnz
lock
scas
cmp
add
jnp
pop
xchg
pushf
insb
cmp
push
stc
pop
ret
and
vcvtpd2dq
inc
dec
cmp
jg
add
and
xor
xchg
test
push
mov
mov
bound
loope
incl
call
repz
jge
push
jae
jbe
dec
arpl
rcl
jbe
imul
lret
repz
lds
pop
fistl
pop
sbb
mov
pusha
inc
mov
mov
adc
lcall
or
lds
cmp
test
cmp
cmp
enter
jg
mull
je
xchg
mov
inc
jl
pop
mov
int
inc
pop
sub
and
xorl
cmpsb
into
fcompl
daa
movq
insb
lret
mov
jge
fisttpll
jb
pop
iret
xor
fsubl
sub
sbb
shl
imulb
push
xchg
xchg
adc
cmp
adc
inc
adc
xchg
mov
inc
outsb
lcall
dec
lock
jmp
mov
dec
or
ret
loopne
out
adc
and
imul
dec
add
add
test
aas
mov
jl
add
int
mov
test
fidivs
inc
idivl
mov
sti
rcrl
adcl
in
dec
jle
ret
ljmp
out
gs
call
pushf
aad
mov
ljmp
cmp
add
adc
sar
clc
cwtl
das
sbb
stc
lret
adc
data16
inc
pop
shlb
mov
push
jecxz
jo
rcl
je
jge
in
cmp
loop
movsl
pop
adc
adc
and
ds
push
enter
add
pop
pop
mov
mov
mov
push
sbb
sub
cmp
mov
daa
cs
fistpll
inc
mov
mov
pop
xchg
jns
rcr
or
inc
and
ficoml
lcall
cs
outsl
gs
push
jp
les
enter
ja
xchg
adc
cmp
dec
int
mov
fs
scas
push
push
sbb
in
inc
dec
imul
inc
ret
xchg
sub
fiadds
adc
arpl
fnsave
dec
test
add
scas
addr16
mov
cmp
xchg
bound
mov
adc
lock
push
lds
and
add
add
jg
test
sbb
insb
push
addr16
jecxz
cmpsl
mov
inc
pop
adc
std
jecxz
adc
fwait
jbe
cmc
shlb
xchg
int
loop
aaa
xchg
add
stos
das
sub
mov
mov
outsl
mov
std
div
xchg
xchg
xor
jle
sbb
in
adcl
lcall
sub
outsl
imul
sbb
push
repz
mov
imul
jl
out
orb
test
ret
mov
push
push
cmp
mov
adc
adc
cmpl
movsl
mov
cmp
add
add
or
scas
test
push
subl
subb
imul
lods
out
int
pop
insb
jbe
push
dec
jo
lds
lods
scas
add
xor
add
lds
stos
dec
xor
pop
andl
dec
adc
cmp
sub
pop
mov
shll
xchg
xchg
aas
dec
jl
and
jno
dec
dec
jnp
xsha256
cmpsb
push
ljmp
orb
add
inc
push
les
mov
pop
push
jl,pt
jl
test
mov
gs
jno
push
fidivs
lret
cltd
imul
gs
enter
nop
lods
cmc
cmc
loope
jbe
xor
pop
pop
test
push
cmp
loop
or
aad
shr
cld
adc
icebp
test
mov
mov
lahf
fwait
xchg
repnz
cmp
push
sti
pop
sbb
shll
cmpsl
mov
sub
inc
xlat
jnp
jp
sub
or
jne
hlt
sub
outsb
inc
push
sarb
aaa
fcompl
jmp
cli
lods
repz
pop
notl
imul
jo
ret
mov
or
adc
sbb
dec
cmpsl
jl
lea
loopne
sbb
jns
fwait
clc
movsl
jo
mov
stos
xor
dec
xor
stos
inc
jle
dec
addr16
xchg
ja
subb
dec
int
mov
add
shlb
test
rcl
lea
xor
inc
xchg
jbe
push
and
add
dec
pop
mov
clc
mov
xorl
out
enter
sub
pop
add
cmp
cmpsl
jns
jb
fimull
sbb
leave
xchg
adc
lcall
outsb
mov
out
sbb
mov
test
lea
xor
pop
cltd
mov
and
rcr
mov
aad
or
cmp
push
adc
sub
and
cmp
push
cwtl
xor
and
fwait
shll
xchg
or
and
iret
ss
mov
inc
cmp
sbb
push
xchg
pop
outsb
jle
dec
dec
inc
jo
mov
cld
xchg
cmpsb
pop
jle
bndstx
in
out
je
sbb
dec
mov
jmp
jns
cmpsb
jge
cmp
addr16
pop
call
pop
out
enter
int
push
push
mov
sti
mov
jnp
inc
cmp
sub
insb
jne
mov
xor
mov
mov
adc
ss
fadds
push
test
arpl
adc
mov
iret
in
or
in
in
push
ja
add
cmpsl
add
cmpxchg
dec
out
jg
xor
in
les
movsl
or
and
repnz
mov
sbb
jle
or
lret
mov
jg
mov
pushf
fisubrs
jge
into
adc
scas
push
mov
stos
add
pop
scas
in
xor
movsl
pop
enter
out
mov
hlt
xor
sbb
inc
subb
push
ljmp
cli
jnp
mov
and
sbb
ljmp
aas
rolb
push
shl
jo
sub
xchg
mov
aam
das
push
sub
pop
je
mov
sub
clc
call
jge
lods
adc
sahf
fldl
mov
mov
inc
sbb
mov
push
or
or
mov
mov
pop
aas
sub
ret
pop
hlt
dec
lahf
addr16
cmp
lret
mov
push
dec
das
push
out
icebp
xchg
cltd
cmp
cltd
add
cld
dec
jmp
stos
inc
cs
ljmp
inc
jno
es
out
in
loopne
mov
mov
push
out
adc
sub
lcall
pop
pop
out
mov
cmc
icebp
mov
shlb
in
cs
pop
push
sbb
sti
inc
lods
insb
and
sub
lcall
rorb
pop
mov
xchg
popa
and
and
mov
mov
adc
inc
jae
sub
adc
mov
cltd
test
mov
sarl
inc
outsb
add
xchg
mov
xor
or
je
dec
iret
xor
enter
arpl
int3
xchg
into
push
insl
lahf
pop
jle
cmpl
std
mov
xchg
xor
lods
jg
mov
lea
in
mov
add
stos
xor
mov
aad
xchg
mov
inc
dec
adc
mov
lds
ret
jbe
xchg
out
lcall
add
jg
out
roll
shlb
mov
and
xor
push
stos
mov
pop
jbe
lahf
inc
xchg
inc
ss
lret
iret
jne
xchg
fst
stc
in
aas
nop
jbe
mov
test
add
adc
sub
sub
pop
cmp
mov
mov
pop
or
jmp
push
test
pop
test
bound
enter
bound
test
scas
pavgw
dec
sbb
xchg
dec
and
addb
or
push
adc
pusha
and
ss
sarl
pop
arpl
cmp
add
xor
les
test
jnp
mov
sub
mov
pop
insl
out
ss
add
adc
std
mov
stos
pop
repnz
rclb
sub
fisubrs
mov
push
rorl
sti
pusha
stos
mov
ja
mov
aad
sub
jae
leave
mov
and
and
sbb
inc
test
xor
das
cmp
in
bound
jle
cmp
add
pop
sub
cli
push
hlt
xchg
ja
mov
cmpsl
in
mov
jecxz
icebp
test
call
xchg
hlt
pushf
pop
cld
imul
scas
lds
mov
into
inc
mov
sbb
dec
pop
fsubs
pop
imul
sbb
xchg
inc
aam
inc
inc
stos
mov
dec
dec
popa
sahf
cmc
push
into
movsl
sub
mov
sbb
into
add
mov
or
lret
repz
inc
xor
xchg
cs
loope
and
cmpsl
cmp
mov
pshufw
divb
mov
pop
add
lretw
aaa
jecxz
aaa
fisubrs
out
mull
dec
movsb
lret
into
out
xchg
mov
jge
data16
add
cmpsl
hlt
lods
and
or
out
cmpps
sub
ja
mov
ss
mov
jae,pn
sarl
jp
add
fcoml
lret
add
mov
or
dec
jb
out
test
mov
mov
int
mov
cwtl
sbb
stos
imul
cmp
xor
sub
push
add
into
clc
fldcw
xor
ljmp
fldt
adc
cmp
push
iret
ja
mov
jecxz
fdivr
cld
call
test
pop
stos
add
and
outsb
cmp
andb
inc
jnp
sbb
pushl
or
xchg
cmp
mov
fs
stos
or
fistl
xchg
repz
imul
jmp
inc
mov
xchg
rorl
jb
mov
insl
hlt
iret
pop
fs
dec
aaa
out
mov
dec
adcb
test
or
jmp
insb
repnz
mov
fidivrs
cmp
sahf
in
into
jo
testb
xchg
int3
flds
jb
pop
sub
mov
xor
xchg
dec
jo
mov
pop
xor
cmpsl
into
test
pop
pop
mov
popa
mov
and
jb
loop
out
out
push
push
pushf
mov
or
adc
paddsb
insb
ret
enter
movsb
mov
lea
stos
xor
call
inc
adc
imull
jns
cmc
jmp
sbbb
gs
insb
call
push
fstp
jne
fisubrs
call
in
jbe
xchg
pushf
adc
outsb
mov
jge
mov
cmp
mov
data16
fdivrl
mov
jae
data16
inc
gs
outsl
aam
fcmovnbe
fistpll
in
and
aaa
roll
xor
imul
jo
inc
xchg
jbe
out
xchg
jo
dec
testb
push
cmp
ss
hlt
je
mov
push
lods
loop
repz
in
gs
es
fucomp
push
mov
scas
and
subl
cmp
inc
imul
sub
rcl
popl
or
push
push
test
sar
movb
adc
cltd
xchg
rclb
push
out
push
mov
icebp
sub
cmovle
dec
dec
xor
nop
aad
mov
and
sub
out
fildl
pop
imul
cmpsl
adc
rcrl
cli
imul
lret
pop
push
std
mov
popa
jbe
lcall
lea
dec
stos
cld
cmpsl
inc
out
lea
mov
je
mov
lds
xor
xor
mov
fisubl
in
mov
mov
sub
cltd
push
adc
xchg
dec
sub
aad
mov
add
popf
test
dec
or
pop
push
lret
jo
mov
and
cmp
mov
popa
push
pushf
nop
push
cld
cmp
sub
jae
outsl
es
mov
into
sbb
loope
iret
jp
lock
jmp
inc
bound
add
lret
cs
adc
cld
daa
scas
lret
icebp
jg
pop
mov
lret
xchg
rcll
loope
imul
pop
inc
mov
imul
lcall
movsl
sti
ds
mov
sbbl
decb
jbe
push
fistl
cmp
mulb
push
lahf
outsb
jno
lds
das
push
and
xor
jae
idiv
dec
pop
mov
insl
xor
ljmp
loope
je
repnz
jg
sub
lods
sbbl
dec
out
call
aad
imul
out
insb
jae
test
dec
fcomps
lret
mov
xor
ret
or
in
add
pusha
insl
ljmp
adc
loop
leave
sti
in
inc
sub
pop
lods
pop
mov
je
add
movsl
mov
out
aas
pop
jecxz
js
or
out
subl
test
or
xchg
cwtl
adc
mov
das
dec
cmc
xchg
push
cmp
mov
add
adcl
push
inc
test
pop
pop
lds
pop
jmp
xor
data16
adc
std
push
lret
in
adc
jle
clc
pop
popa
ds
cld
pop
push
pop
cmp
cmpsb
jbe
fs
fcoml
and
mov
sub
dec
push
xor
push
or
jbe
adc
andb
data16
fwait
add
fbstp
xchg
or
fucomip
mov
inc
enter
push
and
mov
cmp
lahf
lcall
push
mov
cmp
sub
cli
pop
ret
fisttpl
out
shlb
hlt
adc
xor
bnd
push
movsb
push
mov
add
dec
scas
cs
mov
cwtl
lret
xor
sub
insl
ljmp
inc
pusha
push
mov
xchg
loope
cmpsb
push
repz
and
xrelease
fsts
cmp
cmpsl
test
xchg
ja
push
mov
call
mov
add
xlat
enter
inc
sbb
sahf
scas
xor
push
incb
or
out
cmp
mov
inc
aas
mov
ret
adc
or
jg
xchg
stc
sub
pusha
pop
movsl
lock
mov
jb
rcrl
sahf
push
and
dec
xchg
popf
add
inc
adc
les
nop
aam
repz
cmpsb
test
adc
ret
bnd
add
sarl
test
pushf
data16
aaa
mov
je
rcrb
movsb
mov
xchg
mov
sub
shll
xchg
mov
sbbb
sar
rorl
aad
dec
les
push
cwtl
sub
outsl
mov
dec
inc
int
adc
repz
pushf
jg
ss
inc
icebp
test
in
icebp
stos
fsubrs
sub
movsb
inc
aaa
inc
push
fsubr
pop
in
mov
dec
jle
pop
push
repnz
sbb
leave
scas
js
jbe
or
xor
push
dec
mov
push
out
dec
sarb
mov
push
pop
inc
xor
dec
inc
mov
cmp
mov
jg
nop
xlat
xchg
jb
icebp
div
addr16
ficoml
mov
jae
and
mov
fcmovnb
popa
cmc
push
jecxz
cmp
adc
std
cmp
rorb
js
loope
mov
xchg
jp
scas
out
lret
xchg
loope
cmp
loope
xor
iret
push
inc
dec
mov
lods
push
stos
arpl
imul
cld
sub
push
loope
push
ljmp
inc
push
std
fisttpl
xchg
push
sahf
xor
and
addb
cmp
test
or
dec
in
pop
dec
decb
xor
adc
popf
fildl
jne
jmp
inc
fadd
ds
sarl
sahf
call
insb
insb
cmpsl
mov
std
mov
push
push
divb
and
fwait
js
adc
cmpsl
inc
dec
xchg
push
lock
nop
std
mov
call
mov
inc
rolb
cmpsl
cmpsb
mov
sub
push
push
fisttpl
pop
popf
dec
or
into
sbb
jg
adc
add
inc
lods
aas
or
loope
out
rorl
dec
dec
mov
inc
cld
pop
subb
imul
test
jp
fidivrs
cmp
lods
lea
pop
push
and
jno
or
outsb
xchg
push
xlat
and
inc
lods
inc
fdivp
push
cmp
aaa
mov
xchg
loope
push
cmpb
ds
ficoml
sti
inc
fldcw
icebp
cmp
mov
cmpsl
pop
cmpl
or
sbb
je
push
in
test
mov
scas
pop
rorl
fs
repz
loopne
xor
movsl
jg
popa
or
rcll
xor
push
imul
mov
push
mov
add
lcall
xor
pop
repz
fs
or
inc
aad
ror
push
adc
out
aam
push
arpl
dec
xor
jecxz
nop
adc
mov
lods
sbb
sbb
pop
out
test
jmp
cmp
xor
xchg
ss
loop
fsubs
adc
js
cmpl
cmpsl
popl
fstpl
es
mov
mov
sub
je
divb
imul
movsb
out
xchg
jae
bound
popf
xchg
ds
repnz
int3
push
inc
cmovnp
mov
mov
add
sarl
lds
fstl
cwtl
mov
xor
ficoms
cltd
orb
xchg
mov
std
add
jno
push
pop
les
clc
jmp
jbe
les
mov
sti
cmpsl
sbb
sub
jecxz
sub
pop
jp
sbb
jge
cmp
xchg
ret
and
lret
test
aaa
rorb
xchg
jg
mov
cwtl
jp
jmp
int
gs
push
leave
loope
xlat
xor
testb
dec
lret
fisttpl
mov
fwait
push
bound
loope
mov
pop
popf
lock
stos
jp
dec
mov
aas
insb
and
ja
rcrl
je
mov
and
call
xchg
or
pop
cmp
xchg
scas
xchg
jns
mov
push
pop
fs
cmp
aaa
xchg
pop
pop
test
sahf
lds
stos
mov
jbe
loopne
adc
cmpsl
jmp
mov
mov
jmp
push
jg
and
popf
jle
xchg
movsb
dec
mov
push
xchg
int3
or
xchg
daa
mov
mov
sbb
jmp
ds
xlat
inc
push
push
cmp
pop
scas
push
pushf
mov
addb
cmp
mov
lock
mov
es
mov
adc
mov
es
jg
xchg
scas
push
mulb
ljmp
fstpt
adcl
push
cwtl
mov
repnz
add
lcall
cmp
inc
cltd
loopne
xchg
mov
fbld
shl
xchg
xchg
cltd
lahf
inc
scas
test
cli
adc
das
or
xchg
xchg
mov
rcrl
fwait
and
xor
jmp
cs
insl
or
jns
xchg
outsb
loope
repz
sbb
jb
mov
out
ljmp
stos
pushf
insl
fstpt
mov
iret
outsl
pop
les
mov
cmpsl
pop
frstor
mov
xlat
push
stc
mov
lcall
imul
pusha
lahf
add
or
iret
and
fistpl
std
loope
adc
lret
pushf
xchg
fbld
int3
roll
je
pop
rorl
pop
leave
mov
pop
fdivrp
mov
mov
pop
adc
jno
addr16
in
imul
daa
xchg
cmpl
mul
bound
push
es
mov
js
inc
pusha
lds
push
jb
cmp
loop
inc
cwtl
dec
pop
aas
into
sub
lcall
sub
mov
icebp
aaa
sbb
es
test
sbb
outsb
stc
stc
add
mov
and
andl
inc
cs
push
lahf
adc
xchg
test
xor
loope
bound
les
orb
pop
ret
mov
sub
mov
aas
fsubs
enter
dec
fwait
mov
push
jno
xor
add
stos
lock
in
and
sbb
cmc
ljmp
or
loopne
sub
test
xor
lods
sbb
repnz
adc
pop
and
sub
mov
nop
pop
test
sbb
dec
jmp
xor
cmpsl
push
pop
sub
les
pusha
dec
jl
scas
inc
mov
adc
orl
pop
dec
out
or
xchg
xchg
mov
mov
xor
jb
insb
adc
xor
fstp
outsl
or
in
mov
mov
adc
test
icebp
cmp
mov
out
inc
xchg
xor
xchg
lock
inc
push
out
and
in
adc
xlat
mov
repz
jne
push
push
stc
dec
enter
pushf
inc
jmp
test
jecxz
lea
je
cld
mov
cwtl
dec
mov
push
sti
scas
enter
push
mov
xor
loop
aam
jle
cmp
and
or
xchg
shlb
cwtl
stc
xchg
sub
outsl
hlt
jecxz
adc
inc
in
cli
dec
inc
mov
mov
sti
sarb
ss
pop
push
test
inc
int
sbb
jmp
shll
out
push
insb
je
xchg
fcomps
loop
sbb
jne
in
jo
aad
movsb
cmp
xlat
xor
and
dec
push
mov
je
pextrw
mov
movsb
lods
and
inc
test
mov
push
aas
xlat
adc
stos
pop
xchg
testl
stos
push
push
or
scas
xor
sbb
xchg
inc
repnz
mov
roll
dec
lret
repnz
jl
movsb
fdivr
xchg
pushf
adc
orl
test
es
js
mov
add
xchg
cmpb
mov
push
push
bound
fs
loop
cwtl
jg
jp
scas
shrb
xor
mov
jns
jb
out
adc
lods
imul
and
aad
js
cltd
dec
daa
adc
das
jno
cmpb
add
add
js
push
jno
xorl
push
test
and
sahf
cwtl
loop
js
scas
jnp
fs
fsubrp
pop
push
loop
sbb
in
jmp
cmpsl
mov
stc
lea
int
mov
dec
or
cli
jb
in
push
data16
scas
gs
xchg
adc
fs
fcmovnbe
mov
lcall
and
mov
jg
mov
mov
subb
js
dec
mov
ja
adc
push
jge
daa
in
jnp
xchg
adc
cltd
imul
xchg
insb
sbb
add
xchg
les
cwtl
pop
out
mov
xchg
ds
repnz
ficoml
cmp
out
or
dec
cmp
inc
mov
xchg
dec
dec
lock
add
inc
fs
ret
les
mov
aad
xchg
mov
out
jo
in
or
or
dec
movsl
cmp
out
and
pusha
cmp
pusha
lods
mul
mov
xor
icebp
lahf
dec
fisubl
pop
cmpsl
inc
popf
ret
add
sub
loop
xchg
filds
adc
add
out
xchg
je
inc
scas
cli
call
ret
mov
cmc
sub
and
movsl
sbb
test
sbb
or
enter
push
adc
push
cmpl
sbb
xor
or
mov
xchg
sub
and
xchg
rcl
push
adc
sbb
ljmp
aam
jl
mov
jno
lds
lcall
divb
jnp
testl
je
fldl
mov
sbb
iret
fnstsw
repz
out
mov
sub
xor
das
push
pop
xchg
adcb
decl
lret
sbb
jl
jecxz
mov
lahf
cmpsb
das
clc
jecxz
leave
xor
fisttpl
push
iret
mov
inc
push
push
xchg
es
pop
nop
cmc
sbb
cmp
jg
ret
test
push
and
fnstsw
popf
sub
lret
mov
cs
sub
insl
insl
inc
sub
or
hlt
sbb
pop
popa
das
pop
pop
rcrw
xor
faddl
inc
cmc
ret
loopne
and
sub
mov
enter
add
iret
cld
adc
hlt
imul
mov
or
pop
cld
nop
cmp
in
fwait
movsb
dec
add
insl
mov
lea
push
dec
inc
sbb
in
addb
sbb
dec
ja
mov
cmp
xchg
jecxz
cltd
mov
imul
cld
and
sbb
xchg
mov
cmp
into
mov
mov
xor
pop
clc
push
das
popf
mov
cmp
je
jne
daa
fdivs
cmp
xchg
cmp
pushf
imul
dec
or
cli
cld
jl
pop
jmp
xor
gs
int
pushf
inc
jnp
xchg
jns
cwtl
cli
pop
push
les
xor
sbb
lcall
jbe
mov
jg
inc
cld
movsl
nop
lods
pop
test
sub
pop
loop
adc
mov
cmpsb
cs
and
je
icebp
shrb
push
xchg
or
xorl
sbb
cmp
cmp
gs
cli
aaa
idivb
iret
sbb
xor
cltd
sbb
xor
mov
adc
or
adc
popa
cs
adc
in
repnz
rcrl
bound
test
xchg
insl
inc
pop
imul
push
adc
addr16
in
lods
pop
mov
xlat
cmc
push
jnp
sbb
xor
loope
pop
and
out
imul
push
pop
inc
sub
pop
arpl
xchg
adc
mov
nop
sub
pop
adc
out
cmp
addr16
cmp
data16
and
inc
mov
dec
in
out
sti
and
jl
lods
jmp
stos
or
cmpsl
js
fdecstp
test
fistpll
sub
cmp
pushf
ficoms
movsl
push
xchg
das
push
sbb
xchg
lock
or
sub
sbb
cmc
out
testl
fwait
cwtl
fwait
inc
push
daa
jno
sub
mov
pop
lahf
outsb
mov
pop
pop
push
scas
sub
inc
sti
mov
out
fs
repnz
dec
ret
pop
mov
cwtl
mov
and
sbb
jp
mov
in
adc
inc
adc
mov
pop
dec
daa
lods
xchg
leave
mov
inc
mov
push
insb
test
cmp
xchg
dec
sbb
cmp
cmc
xchg
das
ljmp
jae
mull
imul
sbb
xor
mov
push
scas
ds
push
rcrb
fsts
and
test
repnz
or
push
lcall
xchg
jecxz
sub
psubd
sti
inc
stos
sbb
out
push
xlat
fwait
pop
push
xorb
push
jecxz
addr16
movb
inc
xor
push
xchg
mov
xor
jle
xor
sub
lret
lcall
lret
mov
lea
jp
stos
sbb
xor
jnp
add
ljmp
cmp
addl
js
jns
push
mov
popa
adc
sbb
scas
dec
lods
rcll
push
or
arpl
das
mov
xlat
cltd
aam
loopne
add
adc
adc
dec
pushf
and
movsb
test
shrl
inc
pop
jge
das
fstpt
adc
cmp
ficoms
lcall
dec
jp
jge
jnp
stos
idivl
mov
test
xchg
adc
pop
and
jb
mov
jmp
call
testl
inc
inc
filds
mov
or
nop
and
cs
adc
aas
lods
jne
or
or
dec
outsb
aaa
lret
adc
add
adc
mov
fwait
pop
adc
fwait
cmp
sbb
pop
movsl
lahf
sbb
mov
dec
ret
xlat
aad
ret
push
and
and
mov
nop
mov
jne
es
sub
call
insl
sub
scas
xor
or
sbb
jge
add
pop
lcall
int
fs
or
iret
cmpsl
sub
push
jns
mov
lods
cmp
push
or
dec
add
lret
xor
sub
jl
push
xchg
mov
scas
xchg
dec
stos
push
mov
ret
fmuls
jl
lret
insl
mov
xchg
stos
adc
rcll
sbb
push
jge
and
sub
test
fcomps
lea
pminub
pop
int3
inc
in
repz
mov
cs
mov
into
loope
inc
fildl
out
adc
jmp
adc
test
cmpb
xchg
popa
scas
adc
mov
imul
push
cmpb
push
xchg
pop
and
or
xchg
loopne
in
ja
pop
rorl
stos
mov
jecxz
fsubs
stc
repnz
and
ja
dec
outsb
pusha
popf
fistl
or
mov
mov
sub
lcall
and
push
adc
cmp
mov
sub
dec
popa
mov
leave
out
mov
es
mov
hlt
mov
mov
scas
inc
outsb
push
in
scas
aad
nop
movb
fucomi
mov
das
adc
push
aaa
mov
ja
aad
pop
leave
or
js
or
mov
jnp
or
popf
shlb
mov
jle,pt
fwait
add
lcall
add
add
xchg
or
adc
out
sbb
aad
scas
sub
sahf
test
aad
test
int
adc
sahf
sub
jo
mov
dec
mov
mov
jge
popf
fcmove
adc
push
mov
hlt
mov
pop
mov
adc
int3
sbb
aam
ret
cmc
lds
dec
lret
sub
fiaddl
les
scas
sub
imul
ficomps
pop
add
fucomp
lahf
rcl
aam
ljmp
imul
into
scas
push
jns
cmp
les
cmp
adc
dec
mov
mov
repz
out
and
and
sub
out
hlt
push
adc
mov
mov
pop
lds
xchg
cmp
jns
adc
add
loope
pop
mov
out
add
add
pop
movsb
mov
mov
sbbb
lea
enter
arpl
dec
push
loopne
sbb
xlat
dec
push
mov
fidivrs
mov
xor
inc
aam
leave
jbe
test
into
test
in
imul
sbb
adc
mov
sbb
jg
mov
mov
sub
fiaddl
rol
rcl
adc
sub
scas
cmp
dec
es
daa
sub
ds
dec
popa
leave
addr16
lahf
sbb
sbbl
mov
cmpsb
cmc
in
repz
and
sbb
inc
aam
pop
xchg
lret
pop
out
push
loop
les
mov
cmp
sarl
aad
adc
rcrl
arpl
cmp
or
push
in
mov
arpl
push
js
mov
xchg
pusha
push
xchg
das
pushf
ret
dec
cltd
aaa
movsl
mov
or
fidivs
sbb
mov
fists
in
jb
fistpl
lods
aaa
adc
or
fstps
out
lods
adc
xor
xchg
jle
xlat
pop
dec
jp
mov
rcl
push
jg
sbb
inc
nop
adc
adc
icebp
cli
push
cmp
add
scas
addr16
addr16
push
mov
inc
addr16
sbb
imull
cmp
xor
dec
stos
push
sahf
loopne
test
cmc
jnp
xchg
xchg
push
pusha
mov
scas
xor
dec
xchg
mov
sub
out
cmp
pop
movq
int3
gs
or
sbb
jp
insl
mov
aam
pushf
xorl
mov
fadds
iret
sub
inc
inc
fldenv
xlat
sbb
xchg
mov
js
cmc
movsb
add
xchg
test
int
lds
sbb
movsb
mov
test
arpl
shrl
outsl
dec
adc
rorl
jmp
push
xchg
adc
and
inc
pop
or
xchg
jg
xchg
jge
dec
pop
push
call
push
mov
pop
outsl
push
mov
enter
jp
mov
lods
push
and
rol
idiv
stc
and
ds
fisttpll
mov
sbb
xchg
popa
inc
mov
sbb
pop
cltd
push
stos
pop
and
test
shlb
xchg
xor
mov
jmp
jle
pop
inc
jl
push
mov
xchg
push
mov
add
iret
push
mov
imul
or
incb
dec
cmpsl
and
rcl
iret
popf
sbb
es
inc
je
cmp
daa
pushf
mov
lods
movsl
and
cmp
mov
nop
outsb
fs
sbb
addb
xchg
cmp
addr16
sar
ss
nop
fadds
pop
scas
jnp
icebp
sub
mov
cmp
jecxz
pop
sub
sahf
mov
dec
adc
lret
ss
dec
xor
mov
cmpsl
sub
jge
outsb
dec
or
dec
sub
dec
insl
out
fwait
cld
cwtl
jnp
aaa
data16
mov
and
roll
ljmp
pop
cmp
jmp
push
or
mov
cmp
pop
inc
jge
push
movsl
push
xchg
sub
repnz
add
inc
lds
jp
jbe
mov
pop
pop
lcall
test
push
fbld
aaa
or
xorb
gs
insl
jno
mov
jecxz
add
scas
or
loope
dec
imul
hlt
out
roll
cmpsb
push
repz
insl
insl
cmpsl
repz
outsl
or
and
imulb
xchg
inc
lcall
push
cmc
and
mov
add
insb
sbb
jl
xchg
xor
add
pop
sbb
sysenter
jl
lock
arpl
xor
cmp
mov
shlb
sub
cmp
leave
test
inc
fldenv
and
jne
mov
repz
aam
mov
dec
mov
jg
sbb
inc
pop
add
jae
fiadds
lods
jbe
adc
jecxz
and
shll
scas
push
fbstp
mov
add
jl
popf
push
lcall
ret
lea
fldcw
or
adc
jns
insb
jg
xchg
dec
movsl
fiaddl
jge
enter
insl
or
mov
lods
inc
shrl
push
mov
adc
int3
adc
add
lahf
or
clc
sub
mov
fidivrl
shlb
scas
js
inc
push
mov
sbb
and
cmp
push
mov
enter
mov
in
stos
inc
jns
push
fsts
ja
adc
adc
fxch
or
mov
into
orb
cld
andb
cmp
xor
insb
repnz
rolb
xchg
in
adc
nop
add
push
mov
sbb
clc
out
cmpsl
out
jecxz
push
xor
xchg
int
sahf
and
cs
sbb
pushf
enter
nop
mov
fcoms
adc
mov
xlat
mov
inc
sbb
add
cmp
push
push
sbb
push
lcall
inc
inc
lea
mov
or
or
jecxz
test
xlat
cmp
mov
or
inc
push
jae
dec
pop
push
pop
push
adc
rolb
push
lahf
push
adc
inc
daa
adc
sub
cmp
cwtl
aad
popf
dec
and
jecxz
or
test
dec
ror
sbb
test
pop
cmp
add
adc
imul
es
ja
adc
cmpsl
mov
js
cmp
and
adc
bound
loopne
pop
fdivrl
adc
mov
adc
in
cmp
fsubs
dec
lock
hlt
inc
lds
xchg
fwait
loope
sub
fucom
mov
inc
std
xor
dec
jge
adc
or
jecxz
cmp
mov
loope
add
test
xor
or
sbb
pop
std
adc
dec
movsl
push
push
pop
out
mov
je
mov
shll
add
js
stos
out
xchg
push
icebp
lods
and
or
lret
mov
inc
pop
dec
scas
jl
mov
push
lods
ja
test
push
nop
mov
popf
aas
movsb
cmp
and
shl
in
jb
mov
loop
cli
mov
dec
sti
popa
lods
fistpl
mov
pop
push
pop
in
insl
add
hlt
pop
sub
xor
fwait
push
push
mov
inc
mov
ror
fistpl
lret
lock
and
movsl
xchg
je
mov
pusha
mov
inc
pushf
aas
js
sub
jae
xchg
push
cld
out
add
dec
cmp
dec
mov
jae
inc
fldenv
jbe
mov
jg
fisubrl
push
test
ret
push
jge
imul
out
jno
sbb
inc
and
sub
outsb
sub
pop
cli
scas
xor
dec
cmp
repz
jne
out
mov
or
cmp
adc
cmp
mov
or
iret
sbb
mov
push
gs
mov
jns
add
xchg
dec
pop
push
pop
fcomi
add
sub
xor
sub
scas
jge
or
sti
cmpl
jle
and
mov
ret
insl
mov
mov
movsb
xchg
addr16
shrb
and
femms
or
add
leave
cmp
mov
jmp
cmpsl
pop
xor
add
test
imul
push
mov
cltd
xor
jae
in
jbe
xchg
sti
insb
xchg
xor
dec
add
imul
popl
pop
add
outsl
sbb
mov
and
or
or
cmp
mov
leave
enter
cmp
addr16
out
fcoms
xor
push
les
jnp
adc
push
cmp
fnsave
and
movnti
pop
pop
mov
pop
ds
nop
add
xchg
push
dec
mov
push
test
sub
jnp
scas
fcomi
add
jg
jp
pop
lret
jno
inc
and
pushf
cmc
and
ss
scas
mov
pusha
add
fisubl
adc
in
cmpsb
out
add
mov
lds
popa
sub
loopne
cmp
outsb
pop
xor
test
adc
test
outsb
das
push
sub
stos
cltd
cwtl
jmp
inc
lds
call
flds
in
mov
jmp
pop
imul
or
adc
stos
in
mov
pop
imul
ss
fs
xor
mov
flds
movsl
shlw
dec
xor
test
scas
lods
out
cmpsl
mov
add
test
mov
and
fdiv
jo
mov
popa
xchg
mov
mov
and
int3
lcall
inc
add
sub
hlt
out
roll
sub
mov
arpl
dec
inc
imul
ret
rclb
jge
aaa
sub
shrl
xlat
rclb
jbe
mov
xchg
mov
xor
jne
test
lahf
fsubrs
sub
mov
bndstx
cwtl
mov
push
dec
xor
sub
mov
test
inc
xor
cmpsb
test
stc
cmp
cmp
hlt
sbb
mov
pop
addl
push
outsb
add
xchg
lea
cmp
mov
imul
dec
mov
xchg
sbb
sub
fstpl
mov
int
add
jge
mov
dec
dec
addr16
xor
inc
mov
fs
sbb
jecxz
mov
in
pop
xchg
popf
ret
mov
push
scas
push
adc
mov
out
and
mov
inc
insb
sub
lret
xor
ret
movsb
sbb
jbe
mov
hlt
mov
and
cmpsl
addr16
xor
out
jg
dec
cli
lods
ds
xor
xchg
add
inc
movsb
iret
xchg
jns
mov
dec
pop
repnz
jne
push
inc
ljmp
cmp
mov
movsb
sbb
cld
mov
adc
pop
leave
pushf
fwait
stc
les
divl
in
mov
mov
cli
insl
jecxz
aaa
mov
test
xchg
les
sub
inc
in
mov
adc
rcrb
lret
std
frstor
mov
or
dec
pusha
mov
loop
lods
negl
hlt
push
in
mov
pop
in
cmp
gs
jne
xor
xchg
faddl
pop
xchg
inc
cmc
cmp
pop
leave
jl
ds
sub
mov
mov
xor
stc
sbb
xchg
jge
dec
sub
rolb
dec
add
cmp
mov
insb
adc
cmpsl
std
les
jbe
ja
cmp
or
jne
mov
addb
lds
fs
jb
fisubs
push
shrb
aad
fsts
push
xchg
bound
jb
jle
pop
pusha
lds
lahf
pop
cmp
mov
inc
cs
cmp
lock
repz
paddsw
movsl
push
faddl
push
and
sahf
aad
jnp
pusha
or
mov
mov
bound
inc
int3
fistps
cwtl
mov
mov
aam
mov
pop
jmp
pop
popf
mov
dec
or
out
push
jle
adc
sub
in
sub
fmuls
orl
push
dec
ffreep
mov
mov
xor
dec
jb
xchg
imul
mov
add
dec
incl
and
cmp
mov
sbb
das
push
stc
sbb
loope
xor
add
fwait
jb
cmc
repz
push
in
jle
dec
adc
js
mov
dec
and
jnp
ret
dec
mov
mov
shr
cmp
sub
inc
test
sbb
mov
xchg
ja
pop
sbb
sbb
rcr
aad
xor
in
jle
push
lods
aam
push
ret
dec
pop
pop
shlb
pop
pop
add
leave
jge
mov
sahf
scas
dec
cmp
std
fcoml
daa
mov
xor
or
imull
or
cmp
pop
pop
sbb
mov
fldenv
jecxz
shll
pop
loope
push
loop
arpl
add
int3
arpl
shrl
jmp
fcom
pop
stc
lods
gs
mov
pop
or
or
fsub
sarb
popa
mov
cld
jns
inc
xchg
pop
aad
cmp
dec
sbb
leave
jne
nop
imul
test
cli
mov
loopne
mov
insb
mov
cmp
sbb
test
jnp
rcrb
orps
jge
iret
rorb
stos
insl
roll
shlb
gs
cmp
sub
ds
fcoml
test
or
pushf
xor
mov
jg
aad
pop
mov
sbb
fidivrl
jg
mov
cmp
add
fldl
inc
roll
mov
mov
mov
lods
mov
mov
iret
bnd
mov
pop
pop
test
push
cltd
push
xor
xor
je
paddusb
mov
mov
inc
lahf
bound
lock
xchg
rorl
add
adc
add
std
adc
cld
lods
adc
rcl
jge
fimull
stos
jl
out
mov
jns
cmp
jnp
pop
mov
mov
call
add
pmulhuw
mov
adc
fs
mov
mov
push
std
inc
mov
fisubrs
mov
das
aaa
pop
mov
dec
xchg
sub
cmp
je
pushf
lods
cmpsl
shll
hlt
mov
cwtl
sub
pop
add
lahf
stos
adc
scas
mov
and
jns
jecxz
repz
out
mov
or
adc
push
mov
sahf
mov
leave
pop
inc
cmpsb
add
pushf
sbb
cli
call
stos
cwtl
rorl
int
out
subl
cwtl
in
xor
fstps
add
ds
xchg
rcl
mov
imul
jno
shr
iret
mov
cmp
loop
dec
add
aaa
popa
out
push
pop
lahf
addb
shlb
fsubrs
mov
fcmove
and
aaa
mov
fbld
daa
mov
and
push
sbb
mov
cmpsl
push
xor
sbb
jle
xchg
cmp
inc
jae
fsts
sub
sub
pop
mov
les
addb
insl
mov
push
mov
sbb
push
popf
add
add
es
loope
int
mov
fcompl
sub
popf
push
popf
dec
lahf
cltd
add
pop
jg
xlat
push
cli
call
and
loop
jle
jge
mov
push
jmp
pop
imul
push
sti
insl
jl,pn
arpl
cld
xchg
test
add
mov
adc
sub
daa
lds
sub
int3
test
sahf
pop
dec
cld
sub
mov
mov
xchg
mov
call
imul
cltd
gs
add
cli
xchg
adc
subl
or
xchg
cld
std
adc
inc
iret
and
fsubs
pop
insl
ss
push
loope
rolb
cs
mov
imul
inc
in
xor
xchg
cmpsl
aas
ds
outsl
dec
adc
decb
cmp
aaa
sbb
inc
pop
sarb
aad
arpl
outsb
imul
adcl
hlt
pop
movsl
xorl
cmp
jl
sub
insl
mov
push
fidivs
aad
jg
lahf
pop
adc
aam
negl
sub
mov
adc
mov
test
outsl
jecxz
std
jne
test
add
fnstenv
xor
dec
or
sti
push
inc
insb
and
movsl
popa
inc
je
dec
scas
test
inc
insl
jecxz
enter
insb
dec
rcll
call
pop
negl
inc
jmp
mov
shlb
sbb
push
out
shrl
insb
std
movsb
xchg
dec
xchg
rclb
jo
push
or
sub
lock
outsb
int3
mov
and
xchg
cmp
into
stc
pop
iret
xor
mov
in
dec
addr16
jb
xor
stos
mov
jmp
cmp
les
push
inc
dec
pop
dec
lea
dec
mov
mov
pop
jmp
inc
pop
cmp
je
sbb
cmp
ljmp
lahf
fidivs
stc
cwtl
dec
rorl
sbb
outsb
lods
arpl
enter
pop
loopne
cwtl
or
mov
sbb
gs
push
inc
movsw
sub
jge
add
add
xor
pop
or
out
add
insl
ja
cmp
add
repz
dec
lods
dec
mov
out
and
and
xorb
imul
mov
jno
imul
cmc
scas
addr16
sbb
push
loop
jge
shll
or
xchg
sub
pusha
cmc
mov
xchg
cmp
loop
mov
xchg
mov
sub
mov
popa
and
mov
sti
scas
ficompl
mov
cwtl
adc
push
mov
stos
cs
sbb
fcoms
es
je
ss
aad
inc
inc
orb
inc
mov
lret
andl
arpl
mov
cltd
outsl
xchg
jecxz
sub
aaa
xchg
daa
jg
xchg
sbb
shr
mov
bswap
jmp
jl
pop
adc
or
inc
pop
push
rcrl
insb
mov
mov
fcom
ss
mov
popa
dec
mov
fisubs
in
or
out
daa
add
faddl
int3
sub
lret
cwtl
nop
in
xor
inc
push
mov
push
sar
pushf
subl
mov
in
inc
in
pop
aas
mov
call
cltd
or
imul
cmpsl
mov
dec
lods
pusha
inc
xchg
lcall
cltd
sub
popa
rcrb
sub
out
pop
pop
sub
sbb
out
inc
xor
jae
mov
sti
push
pop
inc
faddl
aad
inc
out
lea
push
mov
push
clc
or
add
sub
shrl
fcomi
lret
mov
xor
or
mov
icebp
movsb
fadds
dec
out
mov
sbb
loope
sbb
ds
cltd
ja
arpl
stos
xor
cld
pop
out
mov
icebp
mov
sahf
aaa
fisttpll
and
lret
movsb
jl
inc
cli
push
fyl2xp1
shrl
mov
loope
pop
sbb
add
imul
and
fsubl
aas
lods
popa
sbb
dec
insl
out
jg
cmp
and
sbbb
shlb
repz
mov
cmpsb
pop
loopne
lea
out
fsts
pop
int3
inc
jmp
sub
loopne
sbb
push
arpl
sbb
fbstp
sub
and
xor
and
pop
jne
pushf
insb
jno
pop
outsb
adc
push
adcl
clc
push
mov
ret
into
lcall
nop
sub
add
test
push
lods
jecxz
test
aad
insb
sbb
lods
lods
add
inc
jb
cmp
shrb
outsl
inc
dec
sub
or
adc
pop
stos
shlb
push
sbb
stos
out
movsl
mov
add
lret
pop
push
mov
adc
loope
cmpsl
pop
lcall
icebp
negl
add
fdivl
and
xchg
xor
mov
push
push
jae
jl
in
mov
insl
xlat
sbb
push
pop
cmpsb
imul
inc
pop
roll
hlt
movsl
sarl
cwtl
out
sub
xchg
js
cmpsb
enter
push
scas
mov
test
cmp
popf
divl
shrl
pushf
push
popf
xchg
loopne
ret
pop
leave
test
call
sub
jnp
jle
push
sbb
loopne
cmp
mov
lods
xor
mov
mov
inc
jbe
je
icebp
xor
aad
dec
dec
pop
lret
fsubrl
loope
aam
inc
cmp
sub
and
cmp
inc
lods
adc
test
es
aas
jo
fildl
mov
scas
shll
adc
add
scas
jbe
lea
fstpt
ret
cmpsb
dec
out
pop
lods
push
rclb
mov
lret
add
fmul
xor
pop
cmpsb
jnp
fdivr
ss
pushf
push
and
jb
jmp
cmp
or
sbb
iret
sbb
pop
mov
stos
push
xor
sbb
cmp
pop
cmp
xor
push
clc
fs
push
adc
shr
adc
fs
mov
aaa
stc
bound
xchg
mov
test
loope
xor
xchg
mov
popa
fdivr
cmp
jg
jmp
es
adc
mov
fstp
sbb
clc
enter
add
mov
insb
push
inc
movsl
bound
enter
and
add
or
mov
xor
mov
rorl
xlat
mov
mov
loope
addr16
lahf
les
xor
jb
mov
scas
and
dec
xorl
test
or
cmp
mov
mov
xor
pop
sbb
adc
mov
xchg
xchg
incl
ja
jns
adc
jo
sbb
xchg
push
xor
xor
test
out
adcl
out
or
imull
lret
push
inc
and
jecxz
xchg
jg
jecxz
mov
js
ud0
sarl
int3
push
cs
adc
sbb
lcall
xchg
add
xor
ret
aad
icebp
cli
dec
popl
or
adc
or
test
and
pop
jle
rorl
sub
aam
imul
sub
shlb
subl
imul
add
js
or
outsl
ret
aam
pop
xor
mov
and
out
mov
mov
and
xchg
call
imul
jmp
xchg
lods
movsb
push
mov
test
cld
repz
lds
add
sbb
sbb
pop
sbb
int
gs
or
adc
mov
and
lea
rcrl
mov
mov
cmp
loope
or
test
xchg
hlt
loop
shlb
sub
sub
call
mov
cmp
scas
jns
dec
dec
lds
lahf
insl
cli
jbe
rclb
cmp
xor
inc
cld
mov
sbb
inc
adc
inc
int
enter
lret
cld
sub
add
fistpll
add
in
mov
xchg
sub
mov
popl
das
or
cld
sub
xor
es
sbb
or
cli
ja
jp
aaa
sub
push
pop
movsl
dec
sub
mov
shlb
mov
daa
aad
in
add
pmuludq
cli
ret
addr16
xchg
icebp
jnp
jg
aad
lret
pushf
push
pushf
xchg
sbb
sub
in
int3
fidivs
cmpsl
inc
sbb
push
adc
jl
push
push
xor
les
cltd
out
dec
test
aaa
jb
xchg
mov
mov
mov
xor
bound
mov
jle
sbb
sbb
fwait
adc
mov
cmp
mov
fisttpll
mov
dec
pop
mov
into
push
cmp
movsl
jecxz
inc
leave
inc
call
lds
aam
iret
orb
loopne
and
movsl
data16
dec
pop
cs
mov
sti
or
decb
or
hlt
and
fwait
lock
scas
aaa
push
add
or
jg
std
ds
rcl
jecxz
outsb
out
xor
mov
xor
add
jno
fldenv
mov
mov
push
push
int3
js
add
mov
mov
in
xor
mov
jae
rorl
pop
cmc
ljmp
loope
xchg
and
sub
pop
outsl
outsb
mov
fsubs
imul
or
data16
inc
leave
rclb
imul
mov
arpl
test
imul
rcl
subb
inc
jge
push
out
sarl
push
pop
cltd
and
xchg
push
test
pop
les
shl
fld
aam
push
scas
mov
mov
pop
inc
lods
pop
cmpsb
and
lret
push
and
add
repnz
pop
inc
insl
cwtl
sub
jo
cltd
icebp
bound
ret
pop
mov
sarb
arpl
adc
mov
pop
and
movsl
inc
icebp
or
outsb
xchg
pop
add
dec
sub
lahf
insl
stc
ret
sti
jo
xor
test
stos
jbe
dec
cmp
cmp
jg
je
cli
adc
or
push
lcall
pop
dec
rorl
push
test
inc
aaa
sbb
and
sub
push
shlb
sahf
ret
test
aaa
js
dec
das
xor
mov
mov
sbb
xchg
dec
mov
js
pop
cld
sbb
std
ljmp
iret
xchg
cmpsl
call
inc
jmp
and
pop
or
and
add
repz
adc
mov
and
sbb
push
filds
jnp
xchg
outsb
shll
push
mov
loope
addl
test
xchg
sub
call
insl
cmp
int
shl
inc
in
test
dec
cs
pop
out
xchg
pop
insb
push
add
or
jl
inc
sbb
sbb
or
mov
lea
jno
sbb
mov
sub
in
aam
push
ret
adc
push
int3
cmpl
push
jns
out
xlat
push
mov
push
xchg
stos
ljmp
insl
xchg
stos
push
xchg
pop
mov
push
imul
cmpsl
outsb
ss
ja
xchg
fsubrl
cwtl
setl
fisubrl
and
sbb
adc
mov
adc
icebp
fwait
std
test
mov
xchg
ret
pusha
mov
adc
and
fdivrl
rclb
jle
mov
sbb
jl
jnp
mov
push
les
lock
push
mov
or
out
push
sbb
rorb
cmp
popa
pop
inc
xchg
out
xchg
hlt
push
sbbl
push
or
pop
mov
insl
cmp
std
pushf
pop
pop
icebp
inc
jg
lds
sbb
movsb
rcll
adc
cmp
aas
aaa
gs
jae
arpl
add
inc
insl
cmpsl
andl
sbb
jl
xchg
mov
pop
cmp
in
pop
in
scas
fsubrl
mov
mov
lret
test
xchg
pop
sti
mov
sub
and
or
fsubl
mov
sbb
test
sti
push
adcl
pop
dec
ret
adc
call
addr16
pusha
jge
sub
js
movsl
jg
cmp
dec
mov
rolb
pop
bswap
sbb
jl
sbb
repnz
cli
incl
mov
dec
data16
ss
divb
mov
enter
add
cmp
mov
leave
sub
and
lret
clc
lahf
and
and
push
sub
or
jp
and
inc
lods
xchg
cmp
sbb
loop
cmpsb
inc
sbb
data16
mov
pop
jp
or
pop
sti
sahf
mov
push
adc
stos
sub
mov
lods
mov
ja
xchg
ret
inc
push
jp
push
mov
and
fsub
sbb
pop
push
subl
cmpsl
aam
push
test
mov
jns
xchg
pop
push
enter
add
jge
mov
mov
jp
mov
sarl
js
xchg
lahf
cld
mov
sbb
add
rcll
insb
mov
cltd
mov
lcall
imul
cmpsl
dec
xor
cmpsl
fdivs
or
cmp
or
pop
xchg
jns
pusha
ret
ja
ja
push
inc
inc
and
push
mov
jae
int
es
mov
inc
sub
jo
dec
inc
add
ret
cmp
add
jg
mov
repz
dec
push
push
test
clc
std
test
lods
cmpl
xchg
and
in
sub
hlt
push
rcrb
data16
lahf
xlat
and
pusha
and
out
stos
jbe
lods
test
jecxz
movsb
xor
xor
cmp
push
je
push
test
mov
fdivl
jns
pop
lock
neg
dec
jp
pop
out
pop
pop
aas
rclb
xor
fisubrs
jnp
sahf
push
jl
xchg
mov
push
loopne
mov
lea
sar
test
mov
inc
insb
stos
fs
xor
jp
xchg
outsb
pushf
es
in
shl
pusha
cmp
addr16
jne
jb
dec
jle
cs
inc
xchg
mov
cmp
sbb
pop
jno
or
enter
int3
test
pop
rcrb
pop
inc
add
xor
mov
and
mov
jmp
inc
jmp
jge
cmp
adc
adc
adc
push
jb
out
add
mov
mov
clc
jns
in
mov
jnp
jge
mov
loop
nop
push
pop
aad
test
dec
stos
sbbl
in
xchg
sbb
xor
push
call
nop
xor
in
popa
lock
xchg
pop
xor
insb
mov
push
or
fdivrl
andps
scas
pop
sbb
cltd
push
je
sub
cwtl
adc
adc
idivl
push
popf
lcall
movsb
fs
xchg
fwait
scas
scas
jo
dec
cmc
ret
xor
orb
adc
xchg
jmp
adc
jb
fcompl
mov
jmp
cmc
jl
inc
enter
out
cmpsb
in
mov
mov
jle
ret
cmp
pop
add
mov
adc
popw
inc
lcall
jo
adc
and
movsl
idivb
mov
dec
inc
cmpsb
daa
je
cmp
push
aaa
daa
push
inc
aas
sti
dec
mov
jnp
push
daa
fcomps
in
mov
push
lahf
push
xchg
jmp
cmp
jmp
neg
jae
push
loopne
mov
fimuls
ror
cmp
pop
or
mov
dec
jo
xchg
inc
add
mov
divb
inc
mov
mov
imul
push
inc
pushf
mov
dec
mov
jecxz
pop
clc
int3
cs
in
lahf
scas
jae
adc
push
add
push
loop
pop
mov
daa
lret
es
xchg
adc
dec
loop
inc
inc
fsubr
jnp
in
pop
out
jns
ret
mov
mov
jl
push
jl
push
push
testb
jecxz
push
sbb
cmpsl
mov
scas
int3
xchg
outsb
adc
lret
and
outsb
rorl
mov
jge
movsb
add
xchg
rorb
push
push
inc
pushf
mov
rorb
add
jb
jg
in
jg
sbbl
int3
mov
sbb
pop
xchg
cli
js
imul
cmp
call
mov
aas
jle
sub
xlat
mov
out
dec
mov
icebp
mov
inc
cmpb
mov
nop
nop
into
sbb
rclb
out
repnz
xor
adc
adc
inc
and
in
lds
leave
scas
jl
mov
subl
adc
jg
enter
fistpll
addb
arpl
and
and
or
jne
and
mov
xchg
dec
pop
mov
mov
int
cmp
inc
cmpb
mov
loope
ficomps
notb
xchg
dec
icebp
inc
pop
rol
mov
jecxz
add
iret
xor
int3
ret
data16
adc
push
movb
jae
leave
loop
cwtl
and
outsl
mov
jle
or
outsl
in
dec
sahf
push
sbb
rorl
sub
push
fdivr
inc
or
push
test
xor
jmp
dec
xchg
dec
in
addr16
adc
xlat
fidivl
cmp
out
addr16
fwait
and
jnp
xor
xor
xchg
push
imul
pop
inc
popa
insl
inc
cmpsl
push
ds
mov
and
fcomps
mov
xchg
ret
aam
sub
xchg
cmp
sti
fistpl
cs
movsb
mov
dec
out
sub
or
jl
int3
and
sbb
sub
sub
pop
out
mov
cltd
adc
shlb
js
pop
pusha
sti
mov
push
jb
repz
lcall
and
sbb
inc
sub
mov
cwtl
push
and
icebp
jae
adc
data16
xchg
andb
dec
idivl
mov
iret
and
pop
mov
mov
sbb
sarb
sub
daa
imul
pop
test
rcl
sahf
dec
outsb
or
add
jl
ljmp
push
push
and
popf
gs
sbb
hlt
pop
push
inc
xor
sbb
mov
or
hlt
push
shll
scas
in
xor
xor
test
sahf
dec
out
pusha
out
sub
fucomi
sti
mov
scas
cmp
out
or
in
cld
mov
filds
jnp
xor
xor
mov
sub
and
sbbb
enter
cmp
inc
add
jmp
pop
movsl
loop
int3
jnp
and
mov
or
add
jns
repz
ret
sbb
inc
or
adc
cli
inc
lock
mov
popa
cmp
dec
jp
push
xchg
push
xchg
lods
or
mov
in
ss
pop
mov
sub
hlt
ret
jnp
xor
mov
sub
jmp
lcall
pop
add
and
mov
xchg
sub
xchg
mov
or
in
in
in
div
pop
or
lret
out
leave
xor
lret
pop
jne
push
sbb
pop
in
dec
ror
or
mov
pop
inc
mov
push
int3
in
mov
xchg
clc
icebp
data16
cmpsl
enter
sbb
sub
arpl
mov
in
fninit
mov
xor
and
cli
cmp
fstl
dec
add
pop
jg
inc
mov
xchg
mov
testb
mov
mov
dec
and
sub
push
push
fwait
stos
xor
outsb
es
negl
lods
xchg
fcmovbe
icebp
sbb
or
and
xcrypt-cfb
cmpsl
es
data16
sbb
cmp
adc
push
cmp
rcll
int3
and
into
xchg
stos
lds
xchg
cmp
jne
push
add
mov
sti
lods
mov
cmp
xchg
lcall
repnz
call
pop
or
jbe
inc
pop
add
mov
push
or
push
and
sbbl
pop
inc
and
scas
mov
mov
dec
inc
adc
movsl
aas
int
xor
adc
loop
frstor
out
lds
dec
mov
cmp
push
adc
outsb
sti
sbb
xchg
sub
sub
shll
dec
inc
mov
pop
loope
push
pop
mov
hlt
dec
mov
sub
and
stos
movsb
cs
das
mov
xchg
cwtl
repnz
iret
iret
or
pusha
ss
jo
in
sbb
xlat
or
mov
mov
out
and
xchg
leave
fadd
xor
mov
daa
mov
jp
pop
add
lahf
and
cld
sar
icebp
das
xor
dec
insb
and
aas
fbld
jp
mov
push
das
push
movsl
mov
adc
cli
xor
shrl
stos
adc
or
dec
add
jne
and
cmpsb
out
mov
xlat
ljmp
es
dec
inc
mov
inc
test
repz
sub
addr16
aad
xchg
lea
mov
push
add
popa
ret
loopne
clc
dec
mov
jne
pop
jp
lret
test
in
xchg
xor
inc
sub
stos
movsb
sub
adcb
jp
sub
sub
clc
pop
inc
pop
sbb
and
icebp
lcallw
xor
test
sbb
fucomip
sub
movl
shl
repnz
fildll
lret
inc
jne
lahf
int
daa
and
mov
lea
sarb
jl
fldt
pop
test
cmp
adc
adc
mov
test
ss
dec
or
test
dec
ds
lret
js
dec
fwait
in
add
aad
cmp
push
fildl
xor
mov
xchg
fists
fwait
lahf
fadds
mov
cmc
xchg
xor
xchg
mov
lock
ja
mov
jmp
andb
js
mov
mov
inc
lsl
bound
mov
or
mov
iret
push
jmp
jmp
mov
repnz
int3
lods
push
stos
mov
sti
lahf
out
push
fwait
aaa
xchg
cmp
ret
mov
mov
call
push
stos
movsl
ret
xchg
or
cmp
aaa
jo
bound
cmp
pop
lock
sbb
mov
mov
subl
dec
arpl
int
pop
jmp
push
in
pop
out
ret
and
scas
clc
subl
mov
mov
jmp
mov
rcrb
cmp
test
mov
push
popa
clc
and
test
mov
xchg
and
xchg
cmp
mov
xchg
jno
iret
fisttpl
inc
loop
in
in
stc
in
cmp
cmpsl
dec
stos
movsb
popf
fldenv
into
hlt
mov
pop
sub
or
mov
ja
mov
push
and
lahf
je,pn
idivl
lcall
enter
ret
sbb
ficoml
enter
dec
pop
or
xor
xchg
dec
fists
jge
sub
jns
and
mov
sbb
adc
add
or
subl
mov
jecxz
adc
inc
shlb
sahf
push
add
rclb
mov
sub
xor
inc
pushf
and
cmpsb
xchg
xchg
int3
add
pop
and
dec
xorb
stos
stos
icebp
fisttpl
fisttps
push
or
pop
lahf
dec
cltd
lea
push
cmc
out
popf
xor
mov
jg
push
dec
push
or
movsl
pop
cmc
lods
in
mov
xchg
ss
push
xchg
lods
shl
push
mov
adc
stc
imull
cwtl
stc
jns
mov
rcrl
xchg
pop
sub
dec
mov
push
pushf
lods
sub
les
cmp
xchg
inc
inc
adc
fs
push
dec
hlt
mov
out
cmp
sbb
mov
je
cmpsl
inc
dec
and
outsb
popa
and
leave
mov
xchg
jp
inc
pop
mov
add
dec
push
dec
xlat
and
ds
scas
jl
rcl
mov
in
sub
xchg
push
addr16
es
xchg
addb
sub
jne
mov
pop
adc
js
push
and
mov
pop
sub
enter
ret
jnp
xorb
rorl
xchg
jmp
or
or
ficompl
xor
shl
mov
or
push
cli
pushf
jnp
cmpsb
cmp
mov
xlat
adc
loope
cld
call
xchg
sti
repnz
lds
adc
inc
clc
iret
pushf
mov
negl
pushf
iret
adc
shrb
das
jnp
leave
push
jl
and
repz
jl
pushf
adc
sub
fldenv
cmpsl
mov
lea
mov
mov
mov
scas
lret
leave
push
pop
mov
test
sub
lahf
ja
jb
lret
adc
fcomps
popa
rcrb
fwait
or
push
je
popa
jmp
out
and
rclb
push
in
fnstcw
mov
xor
mov
dec
repnz
cwtl
inc
xchg
loopne
lcallw
dec
mov
es
jmp
mov
mov
jo
and
push
cld
jb
out
and
or
dec
fwait
ljmp
fbstp
scas
adc
adcb
jb
mov
rcl
jmp
addb
dec
ret
cltd
sbb
scas
inc
sbb
iret
push
pop
add
imull
inc
mov
sbb
sub
jae
mov
rcl
stc
and
insb
repz
lret
movsb
cmc
dec
jo
adc
dec
lods
lock
adc
dec
fnsave
fwait
fimuls
xor
mov
inc
jl
fs
cli
cltd
call
inc
dec
pop
pop
arpl
xchg
xchg
or
pusha
jp
or
adc
lahf
pop
mov
or
lret
dec
adc
dec
jno
dec
mov
js
sub
in
pop
pop
xchg
inc
enter
ret
out
inc
dec
lds
out
dec
dec
and
cli
loope
fistl
lock
fildll
lea
xor
xchg
mov
jnp
sub
outsb
jl
push
cwtl
push
popf
xlat
lret
test
mov
push
mov
cmpsl
xor
mov
or
gs
or
sub
test
jne
stos
enter
pop
sbb
mov
lods
das
sbb
mov
add
shlb
or
or
push
sbb
xor
mov
imul
movsl
lea
cmpsb
xchg
out
fnstenv
rclb
mov
pop
mov
add
sbb
lcall
aam
lea
dec
gs
pop
push
inc
addr16
imul
jbe
cmp
xchg
xchg
bound
cmp
jae
push
pop
mov
scas
fsub
jl
push
jns
push
pop
xor
adc
shr
jns
ds
and
mov
out
xchg
das
push
in
into
xchg
cs
dec
lea
or
fnstenv
rorb
les
mov
push
mov
insl
and
scas
les
mov
add
out
nop
std
inc
mov
movsl
into
or
cmp
cmp
ja
jnp
pop
mov
xchg
sub
push
mov
jns
lea
imul
jno
loop
jecxz
cltd
mov
mov
inc
lock
jecxz
and
cmp
sbb
mov
fiadds
xorb
popf
movsl
ss
xchg
and
cmp
dec
lods
cmp
jmp
lret
enter
xchg
ficomps
and
out
xchg
lock
dec
xchg
in
mov
and
scas
jmp
inc
aaa
mov
sti
repz
sbb
imull
mov
idivb
jnp
iret
outsl
push
fildll
jl
cmc
int3
testl
ror
pop
pop
cmpsl
loope
jnp
and
xor
dec
adc
test
pop
dec
pop
inc
sbb
stos
hlt
enter
and
pop
out
fwait
jp
ljmp
jge
or
xlat
ret
xchg
xchg
inc
mov
pop
cli
jae
mov
or
jle
sbb
call
pop
xchg
int3
mov
jl
sub
and
out
aas
xchg
mov
mov
nop
mov
and
cmpsl
push
mov
mov
xlat
dec
lock
sub
xchg
in
jne
shrb
gs
ljmp
jo
enter
cld
shll
out
mov
sahf
inc
fdivrl
xchg
inc
push
mov
cmp
fiaddl
mov
and
dec
out
lcall
cmp
test
mov
fcoml
bound
out
gs
cwtl
stc
xor
test
outsl
inc
sbb
daa
dec
movsb
jo
pop
leave
int3
cmp
jp
pushf
mov
jge
test
ds
push
loope
pop
push
scas
and
cmpsl
xor
sbb
movsl
jno
test
ss
clc
shl
ret
push
addl
lds
add
loope
fiaddl
call
dec
fwait
repnz
int
mov
xlat
xor
idivb
jb
pop
xchg
push
int3
outsb
cmpsb
clc
fisubs
sbb
sub
outsl
lcall
lods
mov
out
adc
fistpll
push
gs
pushf
pop
push
call
xchg
stc
andb
test
fwait
imul
loop
das
xor
in
mov
fnstcw
popa
push
icebp
lret
bound
add
inc
sti
mov
sbb
push
lods
lods
push
pop
cmp
pushf
inc
enter
test
inc
popa
es
iret
push
pushw
adc
mov
fiaddl
fldl
ss
dec
fs
enter
les
imull
jmp
mov
dec
fcmovu
enter
imul
jecxz
pushf
in
orl
or
jl
mov
cmpsb
aad
into
mov
dec
push
lret
sub
inc
je
fisubs
in
xchg
or
cmp
sbb
cmp
add
int3
fmul
ss
sti
sbb
mov
sbb
mov
divb
push
pop
jmp
stc
mov
mov
cmpsb
loop
fisubrl
fwait
xor
out
mov
pop
ret
outsl
cwtl
repz
aad
cmp
mov
lahf
mov
hlt
push
cmpsb
lock
push
cmp
adc
cli
jne
repnz
mov
ret
add
cmpsb
std
outsl
cmpsb
or
in
cs
xchg
inc
hlt
outsl
xor
popa
sub
in
jp
rcl
cltd
das
xchg
cmc
mov
scas
adc
and
sahf
push
repz
push
mov
pop
fiadds
jno
mov
adc
inc
rclb
int
mov
dec
flds
adc
inc
jnp
sub
adcb
inc
lahf
inc
push
sbb
test
fisttps
popa
or
fwait
and
in
call
orl
xchg
push
mov
popf
adc
adc
in
xor
ds
mov
mov
sti
adc
movl
das
or
iret
stos
xchg
lret
xchg
dec
clc
sbb
shl
mov
and
lock
pusha
or
sub
jmp
pop
mov
subl
adc
mov
ret
jmp
sub
mov
in
sbb
out
es
jb
xor
call
cltd
cmp
out
add
push
dec
mov
jb
scas
into
dec
jnp
daa
test
stc
adc
xchg
rcrl
sbb
cltd
ret
sbb
call
mov
enter
sub
jp
orb
xchg
jo
or
push
in
lods
int3
jo
lods
inc
rcrb
shll
xchg
les
popa
shr
iret
in
arpl
aad
push
push
popa
call
sbb
mov
jae
popf
mov
xchg
rolb
push
imul
xchg
flds
and
sbbb
in
lcall
push
inc
popa
test
aam
mov
mov
push
addb
xchg
call
or
lret
mov
inc
imul
test
addr16
push
mov
mov
jmp
in
and
pop
movsb
dec
cltd
and
xlat
mov
mov
pushf
jle
mov
test
jae
arpl
xor
lods
mov
dec
shlb
cltd
pop
push
sbb
xor
cld
lods
mov
sub
and
pop
push
push
push
faddl
xchg
mov
push
jbe
jo
lock
dec
cmpsl
push
loop
cmp
sub
cmc
inc
cmp
aam
cltd
stc
fstpl
sahf
imul
push
icebp
sbb
cli
jmp
dec
stos
sub
dec
push
xchg
inc
or
adc
push
xor
sbb
ret
jns
sub
dec
rcrl
mov
mov
jl
fistpl
xor
xor
pop
sub
and
pop
lods
push
add
xor
movsl
and
lret
das
add
or
push
push
or
and
jnp
out
xor
stc
lret
pop
dec
xchg
lods
aad
xchg
jbe
adc
push
sub
rclb
and
enter
dec
arpl
pop
sub
xor
mov
mov
sub
jae
fldl
in
fsubl
out
imul
outsb
mov
jmp
subb
or
push
ret
hlt
sti
xor
push
pop
lock
mov
ljmp
adc
pop
or
fcoms
xchg
jmp
pop
push
int
mulps
test
aad
push
mov
mov
enter
jp
jecxz
add
cs
jb
jp
pop
lds
pop
push
ds
add
lret
out
fcmovb
daa
mov
xchg
mov
into
ja
dec
jns
pop
or
cmpsb
std
call
int3
and
push
sahf
into
sbb
lods
xor
shl
in
push
ja
mov
mov
add
roll
xor
sub
push
je
shlb
repz
dec
xor
popa
shrl
add
pop
movsb
dec
or
insb
movsl
inc
xlat
add
and
xchg
je
mov
xor
pop
sub
mov
adcl
data16
das
and
leave
subb
aad
add
pop
jecxz
fisubrl
mov
push
mov
je
data16
push
jnp
pop
dec
jne
sub
adc
les
aas
pop
imul
xchg
jbe
ds
sub
sar
pusha
mov
imul
es
xor
sub
xchg
cmp
jbe
xchg
jno
jmp
sub
flds
mov
inc
pop
aas
ja
rcl
in
push
dec
icebp
insl
rolb
ja
sti
dec
pop
loop
stos
loope
push
mov
jp
cmc
mov
or
out
outsb
rcll
js
dec
pop
loope
cmc
mov
movsb
pop
jmp
jge
and
scas
std
in
or
icebp
mov
loopne
movsl
mov
add
outsl
dec
sub
insb
aaa
and
sub
in
stos
lods
cs
and
icebp
pushf
jbe
push
pop
cmp
xchg
fdivr
xchg
fsincos
repz
scas
jae
add
mov
pop
repz
ret
vsqrtps
gs
imul
imul
cmpl
pop
inc
rolb
daa
or
add
xchg
sti
jb
addr16
inc
push
andb
mov
lahf
xchg
adc
mov
jb
scas
shrl
in
xor
add
sahf
sbb
inc
popf
fdivr
fsubrp
mov
lret
inc
and
enter
push
or
movsb
push
outsl
add
out
arpl
imul
dec
adc
dec
push
sub
pop
jle
cmpsb
fst
std
inc
jnp
ja
out
dec
cmp
cmpsb
test
push
repz
cmp
pop
mov
movsb
cmp
xor
xchg
push
sub
incb
mov
int
or
mov
xor
sbb
push
pop
lock
and
sbb
pop
mov
in
call
xchg
push
popf
icebp
fsubp
fldl
mov
sub
pop
cli
in
clc
lods
mov
add
inc
or
and
xor
in
les
xorl
mov
mov
rcll
adc
mov
mov
addb
xchg
adc
push
or
sbb
mov
and
std
add
jae
popl
pop
mov
test
dec
lock
push
testl
mov
shrb
lret
sahf
or
jns
inc
cld
cmp
mov
jge
scas
xor
jmp
inc
pushf
jo
mov
not
clc
into
repz
pusha
sahf
cmp
cs
xchg
adc
xor
int3
fchs
fldcw
inc
loope
pushf
add
dec
in
bound
cmpl
xchg
xchg
shll
shlb
lds
frstor
xor
test
mov
popa
dec
pop
hlt
mov
push
adc
lcall
test
lret
mov
sbb
add
out
ss
or
xlat
pop
and
cli
insb
rorl
js
xor
mov
ljmp
jecxz
in
mov
cli
xchg
aaa
popw
xor
push
lock
insl
ds
fldl
aad
push
or
sbb
mov
stos
popa
outsl
fmuls
dec
movsb
cmpsb
jb
call
and
cmp
jne
in
xchg
stc
fs
sbb
pop
mov
sub
sub
lret
test
adc
sub
bound
andb
and
xor
cs
inc
cmpsb
pop
subl
jle
popa
lahf
rcl
jbe
push
fwait
xchg
mov
push
cli
jge
pop
pop
push
push
lods
in
inc
gs
xchg
jns
or
cs
into
icebp
adc
lret
in
hlt
enter
mov
add
mov
sarl
add
mov
gs
mov
cmpsl
stc
sub
sbb
lret
push
mov
xchg
movsb
roll
sbb
loop
mov
divl
mov
aas
call
or
and
mov
fildll
ret
adc
cltd
push
mov
or
call
mov
jle
jns
jg
movsl
rcr
jae
mov
jle
es
shll
pop
test
das
add
leave
mov
adc
cmp
ja
mov
push
xchg
loopne
ss
push
add
stc
add
xor
movsb
or
mov
sub
push
lret
or
sbb
fmul
fcompl
pop
jp
dec
scas
in
lcall
das
outsl
dec
rorb
xor
lahf
mov
sbb
sbb
sbb
xlat
test
adc
pop
sbb
xchg
in
jg
xorl
sbb
mov
cmpb
popa
fcomps
cmp
mov
inc
push
fwait
jns
push
ret
scas
pusha
out
daa
cmp
push
pushf
outsb
sbb
jb
roll
jne
xchg
stos
or
xchg
into
and
gs
pop
mov
int3
push
jns
sub
aas
and
sub
loop
icebp
jl
sub
xchg
or
pushf
pop
dec
sbb
push
std
rcll
dec
dec
sub
push
adcb
fisubrl
fucom
mov
leave
lods
or
repz
xchg
cli
adc
les
add
mov
loopne
gs
loope
cmp
lds
or
push
outsb
gs
lods
lods
fadds
push
inc
sub
imulb
sbb
fimuls
shl
insl
cli
xchg
cmp
shll
les
mov
gs
mov
outsb
ret
lock
bound
xor
lock
fistl
mov
sbb
mov
push
or
je
adc
adc
mov
ss
cmpsb
inc
testl
sub
mov
xlat
and
pop
cmc
add
jb
outsl
mov
loop
movsl
negl
xor
popa
les
xchg
and
dec
push
fistps
add
ficoml
dec
xor
pop
xor
xor
or
or
scas
mov
pop
cmpb
or
jle
andl
fstpl
inc
mov
sbb
das
xor
je
xchg
rcrb
add
in
pop
ret
xchg
and
xchg
push
adc
pop
sbb
adc
das
getsec
pop
test
sahf
test
xor
mov
inc
cmp
sbb
mov
enter
push
xchg
vpmadcsswd
mov
test
sub
test
repnz
dec
xchg
jne
mov
stos
sbb
icebp
lret
cwtl
imul
or
mov
or
sub
pusha
cli
out
xchg
mov
pop
lret
mov
and
scas
aam
in
push
loop
pop
cmpsb
xorl
movb
testl
stc
les
test
fbld
test
mov
fs
push
adc
mov
cld
popf
jne
mov
xchg
cmp
pop
sub
lods
adc
stos
in
push
out
in
push
out
jl
addl
sbb
add
hlt
dec
and
cmc
fiaddl
cmp
dec
jnp
das
xor
pop
jge
mov
and
rorb
inc
dec
mov
xor
fldenv
or
push
cmp
icebp
cwtl
add
and
push
shlb
mov
add
fnsave
aas
mov
xchg
fwait
add
push
and
or
pop
pop
pushf
sti
es
bound
push
out
dec
hlt
shrb
add
mov
loope
jg
cmp
pushf
xor
inc
les
jmp
aam
sub
xor
jg
pushf
mov
mov
stos
iret
scas
add
pop
sub
in
inc
sub
mov
xchg
addl
add
mov
pop
inc
pop
and
xchg
dec
or
add
jno
repnz
cli
aam
lret
clc
jne
xlat
xor
dec
sub
mov
xor
scas
xchg
mov
adc
in
iret
mov
sbb
or
pop
xchg
jmp
outsl
pushl
std
cli
cli
sub
xlat
xlat
ja
mov
pop
xchg
add
movsl
loope
sarb
pop
popf
cmpsb
cli
cmpsb
mov
inc
testl
jno
cmp
dec
loope
adc
inc
arpl
pop
test
xor
aad
jbe
setnp
jg
add
sahf
xchg
rcll
and
cmp
aas
xor
jg
jne
pop
push
adc
pusha
jle
push
enter
ss
xchg
inc
je
dec
in
or
mov
test
leave
js
out
imul
inc
imul
es
int3
stos
ja
stos
orb
jecxz
sbb
mov
cmp
cld
and
and
bound
dec
adc
dec
scas
inc
lret
cmp
xchg
xchg
and
mov
insb
xor
jecxz
push
jmp
and
or
xorl
xchg
sub
mov
hlt
mov
rol
outsl
sbb
cltd
sbb
out
adc
subl
movb
cld
lcall
or
dec
enter
xchg
in
push
dec
dec
or
jnp
repz
lcall
cmp
add
inc
test
lea
cmp
add
jle
ss
and
xor
inc
push
rorb
je
push
add
inc
lods
movsl
mov
xor
or
push
ror
cmp
mov
mov
outsb
push
sahf
lcall
mul
test
mov
rclb
and
fisttps
mov
inc
pop
nop
mov
out
sbb
sub
data16
mov
rclb
push
lods
stos
hlt
imul
adc
sub
test
fwait
mov
sbb
lods
test
fwait
outsl
adc
and
addb
cltd
mov
cmp
aad
adc
push
fs
mov
lahf
inc
sub
inc
add
and
stos
xchg
in
pop
stos
aam
movsb
sub
mov
out
mov
jge
pop
scas
sbb
add
sbb
jge
ja
aas
test
lds
fistps
out
pop
lock
push
or
cmp
mov
daa
lods
xchg
fs
cs
pop
andb
int3
push
mov
cmp
and
push
loop
inc
add
in
inc
stc
sbb
repz
or
add
pop
bnd
adc
mov
aad
out
aad
aad
in
in
dec
and
decl
lcall
jmp
adc
aam
mov
cmp
jmp
out
push
ret
loope
arpl
fsin
xor
lods
lcall
test
fs
mov
std
and
or
out
xor
cld
jp
dec
jecxz
jno
xor
xor
icebp
inc
push
lret
pusha
vunpcklps
rcll
test
cmp
hlt
jb
cltd
fwait
cmpsl
insl
lahf
xchg
cmpsb
jo
div
mov
jmp
push
aas
stos
call
in
adc
pop
nop
pop
out
xchg
and
add
mov
mov
aad
popa
sub
jno
xchg
ja
jge
out
add
lds
shlb
lds
mov
lea
add
mov
sbb
jg
cs
pop
inc
inc
fiadds
lods
stos
xorb
outsl
mov
sbb
daa
pop
lods
fsts
jecxz
loopne
ljmp
cmpsl
jmp
popf
movsl
hlt
mov
xchg
por
xchg
jmp
gs
flds
push
or
imul
lods
push
sbb
inc
sub
cwtl
adc
fisubs
mov
or
test
pop
jmp
jle
cltd
mov
loop
mov
cmp
dec
pop
or
pop
out
insl
jbe
arpl
test
jl
inc
loopne
inc
lods
inc
adc
mov
mov
mov
out
xorb
xchg
ret
xor
loopne
mov
push
sub
cwtl
in
andb
imul
in
outsb
mov
addb
add
ret
mov
jnp
mulb
push
pop
mov
std
in
aas
mov
repz
pop
ret
loop
aaa
push
rcr
xor
cmp
mov
add
adc
orb
pop
cmc
push
scas
mov
movsl
mov
addr16
dec
cmp
push
add
cmp
mov
lahf
and
pusha
jae
mov
and
scas
cmpl
inc
or
add
lret
outsb
jb
es
cmp
mov
sub
sub
mov
mov
std
or
repnz
mov
loop
push
testb
sub
arpl
mov
subl
mov
cmp
mov
icebp
xchg
into
sub
lret
pop
adc
ja
pmaddwd
int3
leave
and
loop
mov
adcb
ss
arpl
decb
pop
pop
divl
popf
in
into
mov
int3
in
and
std
mov
jecxz
cmpb
mov
fnsave
in
enter
dec
std
ss
xchg
mov
xor
test
xor
mov
int
pop
stos
pop
pop
adc
outsl
mov
dec
loop
add
in
iret
adc
pop
pop
push
aam
out
rol
xchg
or
scas
jl
in
dec
outsl
jo
sbb
enter
int
aaa
push
mov
push
outsl
sub
lret
xchg
lret
sbb
cmpsl
pushf
popf
ret
subl
hlt
inc
push
rol
cmp
in
filds
mov
enter
mov
mov
ja
cmpsb
ret
mov
and
sarb
jge
cmp
ja
out
loop
aaa
mul
aas
pop
pop
in
enter
xchg
xchg
mov
push
sub
sub
sub
lret
fucomip
add
sub
idivl
mov
add
adc
xlat
fcoms
mov
adc
and
or
dec
and
ret
xor
xlat
and
xor
sbb
out
fsubrs
mov
xor
push
lret
les
push
jae
pushf
test
mov
movsb
mov
push
mov
jb
cmp
stos
das
jno
scas
in
ss
jb
inc
mov
enter
dec
mov
dec
xor
and
xlat
push
std
add
ljmp
jmp
ror
cs
test
adcl
int
cmp
mov
and
xor
cmp
cltd
push
mov
pop
mov
add
jbe
cmp
mov
cmpsl
divb
sbb
mov
or
cmp
push
adc
lret
push
jecxz
and
mov
in
mov
sahf
cmc
gs
push
in
ret
sbb
notb
inc
inc
xchg
xor
stos
xchg
adc
fsub
cld
mov
fidivl
or
lret
aas
shll
movsl
leave
push
sbb
test
test
sti
xchg
lcall
out
ret
push
inc
cs
in
in
or
bound
imul
pop
jno
mov
inc
lods
das
ret
insb
pop
leave
loop
add
insl
cmpsb
sbb
sub
faddl
mov
mov
sarl
dec
pop
dec
adc
addl
adc
xchg
jmp
push
or
loope
sbb
bound
xchg
mov
adc
cmp
add
push
push
pushf
jge
mov
in
mov
scas
mov
scas
pop
mov
mov
lods
xor
das
insb
push
pop
adc
andb
push
hlt
das
pusha
mov
push
pop
mov
popa
jo
test
in
in
adc
pop
testb
pop
jno
in
xchg
inc
xchg
test
cmp
pop
pop
and
insb
sar
fst
sub
mov
outsl
fyl2xp1
push
lret
xor
jns
push
xchg
nop
outsb
add
pop
decl
or
xor
int3
movsb
imul
mov
add
mov
cltd
dec
insl
jl
aaa
or
jge
pop
pcmpgtd
sbb
mov
test
aas
xor
xor
or
adcb
cli
lret
dec
movsl
lods
outsb
cmp
cmp
mov
scas
adc
inc
shll
mov
dec
movsb
lret
mov
in
std
add
sub
idivb
adc
enter
push
or
clc
fnstenv
and
ret
enter
xor
push
fnstcw
hlt
xchg
inc
cmpl
iret
mov
cmp
add
adc
std
fcmovnbe
sub
int
pop
xor
mov
bound
out
jne
inc
ja
cwtl
mov
xlat
and
mov
lahf
sub
jno
outsl
push
push
pop
and
fstps
ror
jb
jle
hlt
mov
pushf
enter
inc
hlt
rol
dec
fcomi
push
lret
pop
add
loopne
aad
mov
xchg
pushf
xchg
push
mov
jle
lahf
imul
aaa
pop
mov
xlat
mov
call
mov
repz
and
sarb
xchg
sahf
push
jp
enter
xor
xchg
aam
push
jne
push
add
into
pop
ja
mov
push
mov
ret
cmpsb
cmp
test
int
bound
or
xchg
jecxz
lret
push
dec
pop
sub
cli
sub
xchg
nop
lods
adc
mov
adcl
lcall
push
cwtl
int3
rolb
cs
fmulp
enter
and
ret
or
push
ds
or
lret
mov
jne
bound
mov
inc
push
dec
imul
testb
les
fisttpll
pop
mov
scas
push
xchg
fcompl
cmpsl
addr16
nop
jp
inc
pop
or
inc
addr16
pop
call
in
jp
adc
cmp
aam
xor
inc
mov
xchg
inc
mov
and
pop
leave
iret
xor
pusha
jne
or
lahf
std
js
bound
push
movsb
or
ss
mov
mov
mov
pop
dec
jg
pop
cwtl
push
pop
loopne
xor
fptan
outsl
gs
and
pop
push
and
sahf
in
lods
not
enter
and
inc
cmp
fstps
hlt
and
and
test
mov
push
jp
es
femms
mov
xlat
cmpsl
sub
ds
mov
mov
mov
and
pushf
push
add
pop
std
leave
inc
insl
xor
dec
pop
lret
scas
xchg
push
push
jg
jnp
mov
mov
addr16
jne
inc
jmp
add
filds
sarb
xor
jl,pn
sub
sbb
dec
popa
shll
ret
sbb
cwtl
mov
xor
repnz
lea
push
bound
xor
push
ja
xchg
and
aaa
loopne
in
sti
or
and
dec
stc
test
xchg
cs
dec
cmp
xchg
aad
scas
rcrl
stc
adc
pop
and
aam
test
xchg
sbb
testl
push
icebp
fldl2t
add
pop
xor
mov
dec
je
in
dec
push
push
push
insl
sbb
pop
xor
jle
aas
out
mov
outsb
dec
sbb
popa
mov
or
dec
dec
mov
push
mov
int3
inc
dec
shlb
dec
inc
int
inc
fistps
stc
ficomps
mov
pop
fs
xor
loope
divl
push
push
mov
sub
sti
mov
jno
and
cmp
fistpll
sbb
mov
pusha
sub
subl
pop
pop
pop
les
fadds
inc
imul
loopne
push
pop
mov
lcall
jb
clc
mov
or
mov
inc
xor
dec
mov
pop
in
xor
es
jo
inc
jb
xchg
shl
rcrl
xchg
lret
addl
or
jl
dec
dec
mov
and
jg
mov
jae
pop
out
imul
rcl
out
cmpsl
lahf
out
xchg
loope
xchg
pop
fdivrl
and
jg
mov
out
rcrb
lahf
icebp
mov
outsb
lahf
sbb
pop
cltd
xor
mov
or
push
cmp
in
in
dec
in
sahf
das
mov
call
cmpsl
pop
outsb
xchg
outsl
and
and
sub
push
inc
adc
int3
mov
sub
push
aas
cmp
sahf
inc
std
inc
rclb
int
jecxz
out
test
lea
push
push
add
shrb
push
cmp
scas
xchg
call
xor
mov
push
adc
test
mov
mov
lahf
mov
add
subl
xchg
jp
lods
daa
jle
out
aad
xlat
sti
fidivl
push
fnsave
adc
iret
cmp
int3
fs
jo
sub
pop
adc
jnp
and
jp
rcrl
push
sbb
push
cmpsb
ret
into
in
and
scas
loope
sar
jnp
mov
push
mov
mov
shl
mov
mov
mov
jg
sub
clc
mov
fisttpll
pushf
fldenv
cli
add
fldcw
into
jge
outsb
push
pop
sbb
xor
sbb
mov
sub
mov
dec
test
push
mov
push
mov
jl
mov
lcall
ret
inc
mov
inc
sub
cmpsb
push
fbld
shl
push
jo
mov
int3
fisubs
pop
push
jmp
xchg
or
add
jmp
or
pop
nop
inc
lock
stos
mov
xor
iret
inc
mov
adc
in
or
jg
pop
popa
xchg
jno
out
fs
aaa
icebp
add
mov
inc
mov
jbe
aad
pusha
fsts
out
mov
sbb
imul
mov
adc
adc
inc
pushl
lahf
mov
mov
pop
jecxz
bound
xor
dec
jl
push
popa
xchg
sub
in
js
mov
adc
pushf
out
cs
std
sbb
arpl
jl
roll
arpl
lea
adc
cwtl
adc
push
lahf
jg
mov
in
add
ja
push
cmp
and
dec
lcall
icebp
pop
xor
fildll
loop
fldcw
mov
psubw
mov
mov
or
mov
mov
in
pop
cmpsb
cli
cmc
jne
dec
dec
rorl
in
push
xchg
xchg
and
ffree
mov
pop
inc
xchg
inc
xor
xchg
loopne
jecxz
cmp
sbb
out
call
je
adc
imul
lods
shlb
or
dec
push
dec
sub
loope
es
out
dec
jae
xlat
inc
push
insl
fwait
push
rolb
sub
movsb
mov
pop
dec
pop
sbb
pusha
or
or
test
ds
jl
out
jl
cmp
lods
imul
sub
add
adc
push
xor
mov
and
subb
ret
pusha
mov
mov
inc
sbb
pop
popf
and
js
mov
push
into
in
mov
imul
adc
insb
neg
leave
ljmp
mov
mov
cwtl
testl
leave
clc
test
jl
mov
pushw
push
cmpsl
cmpsb
xchg
jle
dec
xchg
cli
or
mov
mov
into
pop
fcmovu
adc
pop
xchg
jle
push
sbb
scas
push
inc
hlt
inc
adcb
mov
sti
push
add
sbb
aam
das
lcall
iret
push
imul
push
mov
addr16
lods
or
jns
xchg
aas
jp
cmp
cli
jmp
xchg
push
mov
xor
mov
push
jnp
cmp
adc
mov
xchg
add
pop
dec
movsl
mov
pop
lcall
sub
rolw
testb
pusha
mov
mov
mov
movsl
inc
push
mov
in
fadd
cltd
mov
pop
in
into
cmp
test
les
mov
adc
ss
xor
sub
ljmp
push
insl
popa
sti
mov
insl
add
jae
or
out
in
xchg
lods
arpl
bound
out
in
testb
insl
lods
cmp
mov
dec
ja
dec
mov
sahf
or
mov
fbstp
leave
mov
std
popa
and
xchg
int
adc
mov
sar
dec
daa
adc
in
inc
mov
mov
test
mov
icebp
fisubrl
adc
int
mov
aam
rep
pop
push
shlb
cld
in
dec
add
push
dec
inc
imul
out
call
push
cmp
cmc
pop
and
enter
mov
imul
call
rolb
out
xor
out
sbb
jns
cmp
loop
les
in
add
adc
adc
in
call
mov
rcrb
push
loopne
jb
and
sti
jg
mov
int
daa
loop
stos
xchg
xlat
sbb
mov
pop
and
call
push
xor
fdivl
and
fnsave
xchg
imul
adc
inc
insl
jge
roll
xchg
fldenv
xor
sub
xor
dec
subl
add
shl
pushf
lret
push
xchg
and
adc
lds
sbb
adc
and
fsubrs
jmp
pop
insl
mov
jecxz
mov
mov
push
ja
xchg
mov
mov
add
jmp
push
mov
out
adc
push
sbb
ljmp
movsb
movsb
inc
aaa
sub
xchg
mov
stos
cmpsb
icebp
and
jp
pop
fdivrl
pop
xchg
mov
sarb
cltd
mov
fs
mov
xor
mov
or
add
cli
out
cltd
pop
std
push
add
push
pop
push
js
int
lods
lcall
jl
fimuls
xor
sub
mov
push
outsl
adc
repz
pushf
out
mov
or
call
arpl
cmp
sub
jbe
lods
pop
movsb
add
xchg
push
into
sub
pop
scas
jg
sbb
loope
or
ret
or
int
iret
mov
jecxz
add
loop
cwtl
jmp
inc
insl
add
idivl
jnp
outsb
and
loopne
lahf
jne
andnps
pop
cli
sbb
popa
stos
pop
pop
fistps
push
inc
vmovlps
jno
pop
push
pushf
fdivrs
cmc
ficomps
call
shlb
mov
sti
icebp
xchg
mov
cli
subl
push
pop
and
push
inc
insb
movsl
gs
cmp
and
cmp
adc
push
mov
pop
dec
rclb
adc
fwait
xor
es
aaa
mov
arpl
aas
xchg
in
adc
xor
mov
jno
fwait
or
fldcw
or
loop
xor
bswap
add
sub
xchg
xchg
es
sbb
hlt
pusha
out
add
sbb
jo
loopne
ljmp
test
fdivrl
outsl
xor
xchg
push
add
notl
sbb
fiaddl
std
push
jo
cmp
push
and
pusha
stos
pop
cmpsl
lahf
jle
mov
cmp
gs
pop
fcompl
add
xor
push
sbb
icebp
adc
xchg
aam
mov
aad
dec
arpl
push
cmc
lock
fimull
adcb
insl
addr16
sub
mov
daa
sarb
push
pop
lock
sub
dec
ljmp
fidivrl
dec
icebp
mov
mov
je
push
inc
xlat
xchg
test
jb
stos
shrb
add
outsb
xchg
jmp
jnp
lds
aaa
push
cs
mov
enter
cmp
sbb
repz
jbe
stc
cli
mov
push
cmp
cmpsb
jge
lcall
bound
dec
jnp
add
aas
mov
mov
cld
test
int
sbb
popf
push
loop
jnp
cs
mov
xchg
shrl
mov
cmp
cmp
jne
push
push
mov
mov
pushf
pop
stos
and
jecxz
nop
fst
in
jmp
adc
dec
xor
pushf
xor
sti
lods
call
mov
jne
jp
out
jb
je
outsb
imul
int3
dec
je
daa
push
push
or
add
mov
sub
xchg
les
scas
sub
jge
jno
push
xchg
mov
pop
mov
pop
cmp
and
lret
push
sub
jae
movb
movsb
loopne
adc
sub
das
inc
test
push
mov
int3
cmc
jno
push
dec
je
out
loopne
notl
dec
sub
jne
jp
inc
gs
push
inc
sahf
out
xchg
sbb
sarb
inc
loopne
stos
cld
aam
push
and
push
fs
mov
push
rep
push
test
pop
inc
cmp
lahf
gs
adc
lahf
enter
pop
imul
int3
fs
pop
in
repz
orl
push
out
pushf
cmc
xchg
adc
dec
sti
and
insl
outsl
xchg
mov
cmp
dec
sbb
in
lock
notb
fdivrs
push
lret
xchg
mov
clc
pop
ja
mov
fcomps
sahf
pusha
out
ja
fldcw
xor
and
lcall
mov
popf
iret
cmpsl
mov
int
mov
movsl
int
mov
cmc
mov
or
aas
and
cmp
mov
push
push
mov
xchg
mov
pop
adc
xor
inc
cmpb
cmpsb
aaa
adc
ja
or
fucom
or
inc
loope
sbb
imul
gs
xlat
pushf
das
push
mov
insl
pushl
aaa
mov
or
inc
mov
push
packuswb
cmpsl
imul
pop
aad
pop
pop
sahf
inc
in
fsqrt
stc
push
push
subb
bound
cmp
lds
mov
push
in
test
push
mov
xchg
sbb
cltd
pop
sub
or
mov
ficompl
cmpl
in
leave
cmp
add
rcr
push
leave
jo
pop
xlat
jg
cwtl
insb
mov
sbb
xchg
and
inc
ds
test
mov
aas
sub
dec
fxch
adc
lea
pop
and
add
sbb
pop
jp
lds
xchg
iret
scas
mov
sub
rolb
push
lret
dec
subl
jge
xor
cli
xor
jbe
mov
repz
arpl
dec
mov
in
addl
dec
mov
testb
sub
lret
imul
fcoms
stos
xlat
mov
sbb
fldenv
adc
pop
lcall
mov
lret
xchg
repz
pop
pop
pop
cmpl
or
sbb
fbstp
mov
test
mov
arpl
cmc
pop
and
mov
pushl
and
fs
xchg
sbb
inc
imul
mov
xor
les
lods
sbb
pop
into
mov
movsl
call
mov
jae
mov
add
cmp
push
push
cwtl
fldl
inc
jno
insb
aaa
ret
jne
aad
jns
and
jne
sub
adc
test
rclb
mov
inc
arpl
xor
and
pop
loop
arpl
or
stos
xchg
imul
data16
and
dec
rorb
fwait
mov
test
pop
loopne
push
in
rolb
and
xchg
sbbl
xor
jb
rorl
hlt
sbb
test
inc
fwait
push
mov
or
cltd
pop
icebp
idiv
add
pop
jo
nop
gs
add
or
imul
pop
imul
mov
rol
or
lock
cs
fildl
mov
insb
mov
ljmp
pushf
ss
into
in
pop
into
mov
add
aam
aaa
cmpb
out
in
movswl
ja
dec
mov
sbb
popa
bt
cmp
movsb
mov
in
mov
fldl
push
jbe
jle
rcr
jle
fwait
xor
insl
loopne
mov
and
fldt
lret
lea
lea
stc
icebp
test
mov
mov
js
mov
sbb
ret
or
mov
rorl
fstps
or
xchg
icebp
pop
jl
pop
inc
xor
fimuls
mov
xor
xchg
aam
xchg
add
fcoms
rcll
cwtl
inc
in
inc
shll
out
stc
fsubrl
jnp
pop
cwtl
sub
scas
mov
inc
aad
ljmp
test
sbb
lods
jecxz
xor
xchg
mov
jmp
cmc
add
fldl
rcll
mov
adcb
push
and
xor
insb
and
adc
movsb
les
xor
imul
enter
xchg
push
je
fiaddl
sbb
clc
push
into
add
mov
cmp
sub
jle
mov
std
pushw
xchg
cmc
dec
mov
pop
or
xor
in
mov
xchg
push
and
push
mov
data16
std
and
fisubl
adc
mov
jg
pop
push
out
xor
stos
pop
into
xlat
aas
adc
mov
or
ror
mov
rorl
or
mov
negl
fsubs
dec
arpl
loope
lahf
out
cmp
mov
cmpsb
sahf
rcrb
addr16
cmpl
popf
jae
mov
in
jno
mov
and
inc
mov
subl
int3
lcall
push
mov
xlat
lcall
sub
pop
jns
in
push
push
add
dec
je
pop
nop
es
or
dec
inc
push
popa
and
push
addl
fcmove
jmp
mov
not
stc
icebp
lods
shrb
mov
clc
fstl
xor
jle
xchg
sbb
jp
cmpsl
and
xchg
or
xchg
inc
add
imul
xor
jbe
pop
out
imul
shll
sbb
or
cs
xor
xchg
enter
mov
sub
sub
inc
push
icebp
ds
pop
push
repnz
leave
fs
dec
jbe
les
push
shlb
mov
mull
add
adc
bound
jae
or
imul
xor
fs
jl
lds
cmpsb
adc
xchg
sbb
rcrb
jecxz
adc
pop
mov
into
pop
or
pop
xchg
mov
and
ja
ficomps
repnz
and
dec
loop
nop
outsl
out
lahf
loope
xchg
xor
or
sbb
outsb
xor
pop
leave
jbe
dec
add
push
inc
lea
test
xor
sti
jge
xor
aas
inc
add
adc
sbb
dec
das
sbb
or
iret
inc
sub
pmuludq
push
sub
enter
lret
or
cmp
rol
xchg
ja
outsb
clc
pop
cmp
adc
dec
enter
jne
mov
push
or
xchg
mov
leave
or
cmp
mov
imul
pop
aaa
mov
mov
dec
aam
enter
jns
push
xchg
packsswb
pop
cmp
cwtl
add
in
jmp
sub
or
lds
or
out
sbb
punpckldq
push
pop
or
mov
mov
push
xchg
push
imul
cltd
add
xor
shlb
scas
dec
outsb
fwait
repz
imul
repz
mov
cmp
mov
inc
jl
or
cmp
bnd
addr16
dec
cmp
inc
push
out
clc
iret
loopne
les
or
outsl
adc
scas
enter
mov
pop
loope
sub
nop
repnz
push
lods
jo
sub
aaa
mov
fisttpll
xchg
aad
sub
mov
daa
mov
shr
sbb
jge
xchg
movsb
pusha
mov
repnz
pop
xchg
mov
and
es
xor
sbb
or
movsl
mov
leave
inc
pop
pop
push
rclb
fildll
repz
cli
xchg
push
int3
or
cmp
fwait
sahf
in
sub
pop
lret
sbb
mov
jmp
cmp
jmp
mov
popf
xor
pusha
pushf
shrl
and
cwtl
inc
out
sti
test
mov
lahf
pop
cmc
inc
gs
inc
push
mov
cmp
inc
adc
push
adcl
and
stos
sbb
mov
shrb
lea
push
data16
lret
insb
pop
mov
push
xchg
adc
arpl
jmp
stc
push
lret
jg
addl
test
loop
js
in
roll
test
pinsrw
push
hlt
test
lods
lea
cld
in
js
iret
add
mov
push
xchg
repnz
adc
test
sub
sbb
mov
and
movsb
enter
push
push
mov
jg
and
sbb
sub
push
pushf
cli
mov
mov
mov
jl
sub
dec
shlb
sbb
mov
fdivrl
into
enter
inc
push
pop
in
mov
sub
jmp
jp
das
push
jb
push
iret
xchg
jl
mov
loope
les
or
pop
lret
mov
mov
shld
jg
mov
aad
inc
xchg
arpl
repnz
inc
js
mov
sub
push
mov
subb
cmp
fistps
fidivrs
xchg
add
push
pop
mov
dec
dec
xor
inc
fsubrl
inc
addb
shlb
and
ret
popa
test
imul
jge
pop
inc
in
add
push
adc
shrl
aaa
dec
sar
out
jecxz
xor
dec
mov
lods
les
clc
pop
dec
stos
add
push
int3
and
mov
xor
rcrl
das
loop
add
ds
adc
stos
mov
movsb
jl
push
and
push
sbb
and
and
add
xor
fdivs
mov
inc
xchg
stos
mov
adc
rorl
movsb
cmpsb
add
sbb
ds
cmp
stc
push
and
cmp
pop
inc
pop
sti
or
jno
arpl
fisubrl
popf
jp
mov
mov
fidivl
fldt
push
xor
sbb
and
push
or
xor
mov
mov
adc
dec
push
inc
enter
ja
sub
xor
xchg
popa
test
daa
adc
lock
cmp
mov
mov
pop
mov
das
in
pop
pop
and
mov
daa
mov
pop
arpl
pop
pop
sub
xchg
xlat
pop
sub
sbb
add
push
mov
mov
and
push
or
dec
or
es
cmp
loop,pt
lods
mov
cld
mov
mov
push
cld
mov
mov
clc
cli
popl
cwtl
les
xor
sbb
push
cmp
out
cld
xor
mov
fistpl
push
and
add
cs
ja
dec
jecxz,pt
and
or
or
ret
ss
aam
test
lock
rclb
and
inc
test
mov
dec
sub
outsb
pusha
lret
insl
cmp
stos
loope
ret
cli
divb
aaa
adc
int
sbb
mov
daa
cmpsl
int
push
sub
jmp
mov
xor
movsb
addl
mov
and
push
aam
adc
test
cld
imul
cmpsl
lds
mov
dec
pop
add
pop
jne
adc
and
xchg
mov
add
xchg
lcall
fildl
push
add
adc
cli
std
jne
xlat
addr16
mov
xor
inc
mov
mov
dec
in
xchg
mov
jmp
insl
push
mov
and
sti
pop
call
mov
mov
pushl
ficoms
xor
ffree
jmp
aam
dec
aas
or
and
mov
xchg
cs
jbe
lods
dec
int
mov
bound
insb
cld
divb
loop
cmp
push
ret
add
fwait
sbbl
popf
jne
mov
xorb
mov
inc
cmp
cmc
dec
xor
cli
xchg
pop
imul
je
insb
mov
fidivrl
sbb
pop
or
mov
inc
clc
push
fcom
arpl
add
jnp
mov
inc
movsl
in
mov
cmp
scas
xchg
stc
inc
mov
mov
mov
push
and
cmp
shlb
inc
movsb
stc
pop
push
jbe
lahf
dec
gs
jnp
mov
jno
arpl
pusha
xchg
or
jb
push
cli
cmp
xchg
inc
mov
sarb
or
push
push
das
xlat
mov
cmp
lods
test
mov
push
cmp
inc
loopne
imul
aad
imul
stc
mov
push
mov
cmc
dec
xor
scas
ja
test
pop
adc
xchg
addr16
pop
sub
push
mov
in
test
push
cmp
adc
mov
loop
jbe
fiadds
iret
les
sti
and
mov
mov
test
mov
sub
pop
add
mov
arpl
test
inc
cmp
lcall
dec
sbb
loopne
xor
jo
ss
dec
push
jbe
popf
jg
jns
push
mov
xchg
and
sub
mov
dec
inc
dec
pop
or
cmp
jns
daa
jne
mov
inc
dec
insl
repz
inc
mov
and
pop
cmp
ret
xor
dec
add
scas
ret
outsb
stc
xlat
inc
pop
xchg
rcr
call
nop
dec
xor
sub
sbb
add
cmpsl
sbb
outsl
bound
mov
lds
sbb
sub
movsl
ret
pop
sbb
mov
insb
xchg
fs
and
sub
lcall
nop
pushf
pop
cwtl
decl
dec
xchg
js
xlat
xor
into
cmpsl
adc
mov
dec
sub
gs
mov
movsb
jmp
pop
xchg
sub
mov
fs
mov
mov
jl
pop
ja
jo
dec
bound
js
pop
sbb
ljmp
mov
jge
mov
js
scas
fiaddl
repnz
in
das
mov
mov
imul
add
and
lock
sub
movsl
into
lret
dec
and
add
xor
mov
and
mov
lret
dec
push
mov
adc
shrb
addr16
sbb
and
mov
xor
xor
jo
mov
add
adc
mov
adc
scas
mov
push
movb
rcl
fld
das
inc
xor
clc
ret
ret
add
adc
cmp
adc
add
sti
sbb
xchg
test
test
jae
push
ret
arpl
das
push
es
hlt
rorl
dec
mov
push
push
mov
scas
stc
in
mov
pop
lods
push
lea
pop
daa
lcall
jp
mov
xor
mov
lock
jge
xchg
es
dec
xchg
jo
mov
cli
and
mov
sub
sbb
cmp
je
in
es
js
ds
inc
dec
hlt
inc
sbbb
sbbl
sbb
mov
and
fisttpll
aad
mov
push
xchg
xor
sub
and
xchg
in
stos
pop
mov
ljmp
shll
ja
iret
or
in
mov
movsl
je
fmul
lret
outsb
push
mov
rcrb
dec
clc
repz
loope
pop
xchg
adc
stos
movsb
add
sub
fwait
xlat
inc
pushf
testb
repnz
fst
or
xor
jnp,pn
cmp
add
loopne
insb
andl
inc
lea
or
lods
lcall
sbb
cmp
stos
inc
inc
iret
add
sbbl
cmc
mov
and
adc
jmp
mov
mov
jp
mov
adc
inc
andb
pop
jns
mov
mov
cwtl
push
outsb
mov
dec
push
sub
jmp
pop
inc
pop
aaa
cld
mov
xchg
cltd
mov
in
test
cmp
repz
jg
mov
aaa
lcall
popa
in
or
das
ljmp
mov
popl
dec
test
out
adc
and
jns
dec
jmp
mov
lret
jp
mov
das
leave
aaa
and
adc
mov
pop
movsb
dec
or
insl
mov
es
pushf
dec
push
fstps
add
movsb
sar
xchg
daa
cli
inc
popa
inc
dec
xchg
sbb
jb
jp
xchg
scas
mov
pop
int3
xor
stc
leave
cwtl
add
inc
sbb
int
pop
xor
mov
out
xchg
dec
and
sarl
cmpsl
nop
xor
or
jne
hlt
int
in
ret
in
add
scas
daa
adcb
xchg
call
inc
xchg
and
jle
sbb
in
stos
inc
aad
xchg
adc
lods
rorb
mov
dec
push
adc
in
xor
dec
imul
into
xchg
xchg
cmpsb
cmp
fisubrl
or
imulb
mov
jp
lcall
sub
fcmovb
mov
inc
jnp
aam
mov
fwait
sub
xchg
cmp
loopne
mov
xchg
mov
and
push
int
out
data16
loope
shr
xor
inc
fsts
push
xchg
int3
pusha
popf
sub
or
mov
jl
out
xchg
out
dec
pop
and
xchg
xor
ret
mull
movsl
mov
cmpsl
dec
sbb
pop
jne
mul
loopne
xchg
xlat
push
push
sbb
xchg
and
into
frstor
pop
jp
xchg
addl
mov
sbb
adc
shr
pop
sub
push
mov
add
lock
out
divb
xlat
pop
call
lds
stc
mov
xchg
pop
push
lods
loop
cmp
sub
popf
jo
mov
mov
sub
gs
in
inc
pop
push
ret
movsb
mov
fadd
insl
clc
xchg
sbb
lock
popf
ret
jnp
outsl
jo
addb
and
iret
fwait
mov
test
aam
sbb
adc
cmpsl
pop
ffree
pop
jmp
fnsave
cwtl
bound
inc
int
cmp
xor
fcomps
cltd
push
mov
add
cmp
cmp
jle
lods
mov
call
test
mov
ljmpw
aam
push
add
jbe
and
jae
pop
in
arpl
mov
imul
and
idivl
sbb
inc
out
je
and
xor
and
cmp
ds
lods
jle
mov
xor
mov
repnz
loopne
dec
adc
rcll
mov
lods
lret
mov
push
push
mov
jecxz
inc
test
or
ficompl
aad
dec
pop
ficoml
outsb
or
jle,pt
mov
add
dec
and
shlb
call
cwtl
jns
jb
arpl
fdivr
add
lock
shlb
pop
jl
cmc
fs
mov
xlat
in
icebp
push
in
in
jb
stc
vmaxss
test
sahf
push
push
ja
or
cmc
and
xchg
das
outsl
sbb
mov
fwait
es
call
mov
inc
xchg
lock
sub
in
out
aam
add
aad
je
pop
in
outsl
dec
scas
push
ljmp
or
mov
addl
mov
mov
jb
mov
cs
lcall
xor
out
ds
popa
and
or
fadds
push
push
daa
sub
push
push
cmp
cmpsl
jnp
fwait
iret
testl
push
pop
pop
cmc
adc
jmp
xchg
pop
push
cmpsb
inc
jae
xor
cmc
movsl
lds
push
mov
cmpsb
orb
or
shll
inc
pop
into
test
pop
jmp
loopne
call
sub
mov
jo
cmp
int3
mov
cmpl
sbb
js
imul
xchg
sub
ljmp
in
cs
push
and
ss
push
lahf
inc
adc
cmova
lcall
mov
adc
push
sub
sbb
jne
mov
mov
stc
arpl
cld
xchg
call
outsl
ss
adc
fsts
push
cmp
lods
fcoml
dec
dec
popf
cmp
xor
mov
jge
mov
pop
mov
mov
pop
mov
push
jl
roll
addr16
mov
jp
sahf
and
cld
divb
das
mov
pop
insb
out
mov
xor
lock
push
ret
cmpsb
and
push
cmp
xchg
out
ret
cmp
xor
cmpsb
or
js
mov
popf
nop
mov
pop
sbbb
faddl
test
insb
test
xor
jne,pn
addl
pop
and
push
mov
je
jp
testl
dec
mov
outsb
fsubl
lcall
push
xchg
pop
cli
cvttps2pi
and
or
std
push
xor
or
mov
lahf
stos
rcl
out
popa
test
inc
cltd
dec
cmp
std
hlt
data16
scas
mov
push
sti
pop
sub
test
insl
dec
jge
imul
or
and
aam
pop
add
sub
mov
aad
jge
xrelease
xchg
dec
xor
xchg
cmp
fistl
and
sbb
lods
js
xchg
inc
je
adc
rcr
adc
or
hlt
jae
mov
out
cs
leave
subb
fildll
jns
jl
dec
out
pop
das
pop
mov
adc
mov
fs
in
jecxz
mov
ja
movsb
push
jle
add
js
je
xchg
xor
cmp
loop
sbb
mov
inc
push
sub
movsl
add
mov
fnstcw
jno
push
cmpsb
sub
mov
or
push
sar
sbb
cmpsb
mov
mov
addl
mov
daa
insl
pop
inc
aad
jns
mov
mov
aaa
xchg
mov
adc
xor
cs
testb
scas
add
cli
in
mov
mov
mov
add
push
repnz
inc
pop
int3
and
push
jl
inc
cmpsl
mov
adc
xor
push
pop
pop
stos
mov
adc
jb
stos
shlb
mov
mov
jbe
xchg
notl
int
cmp
sub
mov
ret
and
movsl
test
pushf
les
push
mov
adcl
cwtl
out
cltd
test
lea
pop
adc
push
stos
add
fistpl
cmpsb
cld
push
lods
add
loop
jae
stc
outsl
fmull
lret
or
fwait
rcr
mov
adc
add
adc
push
loope
in
dec
jno
mov
xor
pop
add
inc
sarb
adc
out
int3
outsb
push
inc
add
mov
dec
std
xor
dec
dec
loope
sbb
jo
and
cwtl
mov
stos
jo
mov
imul
mov
mov
enter
movsl
pop
xchg
xchg
pop
mov
subb
sti
cmp
pop
jne
push
js
dec
fmul
jmp
in
aam
int3
cmpsb
repz
dec
nop
pusha
ss
int
adc
pusha
cmp
lds
int
pop
lret
fs
mov
pop
mov
mov
sbb
or
ret
movsw
mov
cltd
insb
test
adc
mov
jle
add
xchg
movsl
adc
es
pop
aas
je
mov
cs
dec
in
pop
xchg
pop
jo
push
lcall
jg
cwtl
push
jg
sub
iret
lods
adc
loopne
repnz
push
outsl
push
xor
stos
jb
loopne
cmpsb
mov
cld
pop
insl
adc
ja
movsl
xchg
in
test
call
jmp
jne
lock
cmpsl
mov
nop
push
jno
inc
mov
subl
ret
loop
sub
adc
or
repz
adc
xor
xchg
hlt
loopne
push
lret
pop
test
pop
cmp
xchg
jo
mov
loope
sti
into
xchg
jnp
xchg
add
clc
inc
mov
jo
sbbl
and
inc
or
shl
adc
jae
jl
dec
xchg
subb
mov
or
ror
rol
inc
int
shll
fsubrl
mov
pusha
jecxz
jbe
iret
sbb
ss
into
xor
jbe
pop
fisttps
xchg
int3
jle
inc
mov
dec
push
aam
aam
les
jnp
stos
add
cwtl
out
inc
flds
mov
or
mov
mov
test
lds
xchg
inc
cmpsl
jp
lret
sub
push
sbb
mov
fildll
mov
int
mov
push
lea
push
aaa
jbe
dec
xor
mov
arpl
mov
mov
ljmp
mov
jmp
and
insl
add
cmp
loopne
fwait
mov
jp
inc
push
cli
xchg
out
ret
adc
or
fnstcw
dec
ret
test
test
push
test
sahf
sbb
les
dec
mov
push
or
stc
test
inc
stos
pop
dec
mov
dec
inc
das
jnp
xchg
js
shl
loop
jne
imul
adc
jl
fwait
push
loope,pt
movsb
in
jbe
out
xchg
xchg
lret
ja
es
in
sub
and
cs
pop
out
loope
pop
pop
cwtl
test
in
dec
stc
mov
sub
rcl
scas
jmp
mov
cmp
mov
mov
test
cmp
in
popf
sbb
and
rorl
out
dec
xchg
les
or
adc
push
sbb
loope,pt
loope
push
add
lret
push
and
out
adc
push
pop
paddq
xchg
push
mov
push
or
and
std
fwait
inc
inc
jae
cmpsl
mov
imul
xor
sti
mov
xor
or
xchg
push
ljmp
fcompl
ficomps
stos
push
imul
sti
repz
add
hlt
inc
push
dec
xchg
les
cld
xor
mov
jo
mov
stc
call
jb
dec
enter
cwtl
push
pop
lret
xor
lods
cmp
mov
movsb
mov
scas
test
inc
mov
dec
xor
pop
pop
arpl
je
dec
mov
sti
push
popf
inc
call
aas
mov
mov
and
jns
in
in
sub
adc
push
add
adc
sbb
cmp
fisttps
jb
mov
dec
inc
stc
dec
xchg
push
clc
pop
lahf
pop
dec
roll
push
mov
and
xor
xor
mov
push
and
mov
or
or
leave
sarl
jae
mov
stos
cmp
daa
cmp
rcll
dec
cmc
pop
movsl
cli
add
inc
mov
pop
push
jge
adc
cmp
sub
ret
test
push
push
stos
adcl
into
and
repnz
int
in
inc
adc
xchg
and
cmpsl
ds
inc
xadd
lods
mov
add
cld
in
in
lahf
fistpll
mov
test
bsf
jbe
das
std
clc
mov
fwait
aad
and
sbb
cld
movsb
add
shl
inc
gs
push
ficompl
repnz
cmpb
mov
outsl
std
jle
xchg
fiaddl
lsl
push
pushf
add
adc
mov
add
cmpsb
fistpl
jbe
pop
loope,pt
cmpsl
jge
in
mov
outsl
xchg
xchg
jnp
dec
cli
adcl
lods
movsb
cmp
add
mov
bound
cli
stc
test
inc
cmp
push
or
fiadds
add
adc
inc
sub
jp
cmp
stos
inc
adc
sbb
sub
scas
mov
js
xchg
xor
sbb
xor
fs
rcll
dec
mov
jg
fsubrp
js
jge
sbb
data16
mov
or
jp
cli
mov
mov
stos
adc
dec
pusha
psrlw
jb
push
xor
gs
adc
dec
add
push
and
sarl
cwtl
mov
inc
cmp
mov
xchg
sub
popa
adc
sub
and
lods
aaa
inc
push
xchg
mov
call
addr16
in
js
pop
sub
or
dec
xor
inc
cmp
orb
aaa
scas
cmpsl
fisubrl
inc
lods
mov
or
fstps
push
add
movsl
gs
mul
and
inc
xchg
aam
and
push
sahf
cmpb
add
sub
jbe
outsl
inc
jge
je
ss
or
test
jno
xchg
jcxz
repz
xor
xchg
sti
pop
sub
cli
fdivrs
mov
movsb
jno
aaa
daa
pop
adc
sbb
jp
rclb
repz
xor
sub
add
out
andl
in
push
xor
test
adc
add
xor
mov
adc
in
stos
jno
cmp
and
cli
outsb
fwait
in
push
add
ljmp
scas
xchg
gs
cmpsb
xchg
sbb
mov
fimull
es
ss
pop
mov
shrl
repz
xor
fdiv
or
push
cli
lods
addl
loope
cmp
adcb
lahf
pop
mov
pusha
jbe
pop
or
daa
xchg
xchg
add
mov
ror
ss
jno
shl
jge
pop
sar
ds
add
je
sahf
sbb
xchg
jo
jnp
or
add
repz
fcompl
movsb
icebp
or
insl
insb
fisubl
loopne
out
fs
pop
ja
push
les
mov
add
xor
nop
sti
std
jns
das
lock
mov
ss
cmp
enter
adc
je
mov
lds
iret
jns
lcall
dec
rclb
aaa
sbb
xchg
pop
dec
fisubrl
push
mov
and
ret
pop
push
cmc
sbb
cwtl
fnstcw
hlt
pusha
push
adc
cmpsb
jp
aaa
mov
xchg
psrad
stos
ljmp
sarb
sub
jecxz
xor
inc
inc
in
dec
ja
clc
pop
fstpt
mov
pop
mov
mov
lret
push
sub
das
subl
push
dec
sub
dec
xchg
fwait
pop
test
push
jbe
loopne
inc
jecxz
pop
sahf
jmp
cli
leave
inc
push
sub
and
outsb
test
movsl
jb
jne
lret
mov
cs
mulb
lcall
jmp
pop
les
push
ja
pop
cmpsl
push
inc
outsb
xchg
xchg
rorb
mov
fimuls
xchg
dec
pop
pop
xchg
mov
rol
ret
and
add
rsm
add
dec
das
xor
jmp
and
outsl
pop
xor
inc
xchg
pop
sbb
lods
xor
cmpsl
mov
push
dec
outsl
outsb
mov
js
mov
sbb
xlat
pop
mov
add
jbe
fiadds
andl
mov
std
adc
arpl
outsl
mov
stc
sub
dec
test
mov
popf
out
in
dec
pop
mov
sbb
xchg
mov
push
test
inc
movsb
sub
daa
push
lea
and
sarl
or
lahf
js
jl
sar
mov
in
and
ret
or
adc
stc
cwtl
icebp
fadd
int3
sub
adc
xlat
imull
add
xor
lea
xor
pop
test
pop
fmuls
jecxz
pop
cmpsb
in
jb
js
dec
nop
pop
mov
sahf
sbb
mov
jmp
bnd
jcxz
jne
popa
or
mov
cmp
pop
add
pushf
mov
add
inc
rol
outsl
fwait
aam
out
lret
mov
or
scas
mov
lahf
xlat
sub
add
shr
pop
xchg
push
rcll
shrl
push
push
sahf
int
jmp
lock
aad
das
xchg
inc
mov
mov
sub
mov
and
mov
dec
xchg
and
pop
scas
cmc
fs
loop
or
les
mov
mov
out
push
pushf
andl
loope
in
jae
inc
aad
into
jne
xor
call
pop
xchg
subb
es
xchg
jmp
lea
fstpl
ret
jne
aad
cmp
jge
jnp
jmp
add
imul
fldenv
xchg
rolb
inc
loop
shlb
test
xor
dec
push
add
shrb
into
sub
pop
jbe
lret
ret
enter
test
or
outsb
addl
sbb
and
test
nop
dec
int
fistpl
insb
add
mov
in
fsubp
int3
dec
enter
sbb
movsl
sub
jge
mov
cmc
fisubs
loope
leave
inc
stos
jle
or
in
jl
ja
jmp
xchg
cmpb
or
arpl
imull
jl
inc
fdivp
enter
pop
sbb
outsb
gs
or
repz
loope
push
mov
jle
push
add
xor
and
mov
mov
repnz
xchg
and
aaa
add
xor
sahf
test
flds
js
inc
and
ds
scas
aam
jo
sub
js
mov
add
fisubrs
push
mov
lret
sahf
adc
xor
and
dec
stos
icebp
or
andl
fdivp
mov
in
adc
imul
ret
cmp
ret
adc
adc
test
dec
adc
jb
or
or
in
insb
in
xor
sti
scas
ss
imul
movsb
inc
sub
sbb
stos
imul
imul
or
dec
and
out
push
push
fisttps
shlb
iret
loopne
imul
jno
cmpsb
jne
jp
cmpsb
xor
lret
fidivrs
pop
movsl
pusha
push
or
mov
dec
aam
jmp
sub
dec
cli
inc
fdiv
mov
cmpl
jno
out
and
imul
pop
jo
movsl
test
imul
in
adc
xchg
aam
cmp
dec
stc
fidivrs
add
lret
fs
mov
cmovne
jg
arpl
push
mov
rcrl
cmc
loop
or
aas
fsubrl
xor
rcr
push
or
inc
xchg
mov
or
inc
cmp
aas
mov
or
xchg
loop
fidivl
stc
push
in
cwtl
and
sbb
repnz
mov
popf
dec
fstps
cmp
lods
sbb
pop
jno
pop
out
lret
mov
and
mov
loop
and
scas
icebp
jmp
xor
push
repz
in
and
or
adc
mov
imul
sub
out
or
sahf
out
or
jle
clc
adc
aad
xor
fsts
movl
dec
mov
aam
inc
jge
and
or
mov
test
jno
out
loopne
dec
pushl
or
shl
loopne
xchg
dec
scas
dec
and
push
jmp
add
mov
fs
std
and
cmp
inc
push
sub
and
cmp
jo
ss
pop
push
and
in
outsl
pop
and
dec
out
iret
inc
or
ss
repnz
jecxz
cmpb
pop
adc
ja
sbbb
test
scas
mov
mov
cld
mov
aaa
pop
jg
adc
xor
xchg
push
dec
xor
or
cmp
ja
je
xor
rorl
push
inc
out
mov
lret
mov
cmp
sbb
cmp
xlat
icebp
mov
inc
jle
sub
dec
adc
shll
mov
popa
jne
fs
adc
cmp
dec
call
jo
stc
xor
adc
aad
lea
adc
adc
pop
xor
enter
aad
cli
pop
sbb
adc
pop
jo
cltd
push
in
dec
and
les
push
jno
lret
mov
xchg
mov
fcoms
jecxz
testl
adcb
test
lahf
je
fwait
mov
or
jb
xor
xlat
sub
scas
test
cmc
push
mov
cmp
imul
enter
popf
repz
cmp
mov
pusha
jne
ret
sub
das
jb
push
lahf
leave
dec
divb
push
sub
fisubs
js
popf
sub
insl
ret
ret
addb
push
adc
mov
pop
fstl
icebp
lods
mov
dec
scas
or
mov
mov
insb
hlt
mov
insl
popf
push
shlb
aam
mov
or
stos
and
mov
sbb
mov
cmpsl
xor
or
outsl
mov
cmpl
add
icebp
popa
nop
xor
mov
push
xchg
dec
dec
pop
pop
jbe
sbb
sbb
fwait
push
or
ja
flds
adc
out
push
cmpsl
xor
adc
adc
inc
and
xorl
sub
xchg
int3
inc
mov
pop
sbb
rclb
mov
sub
int
xchg
sbb
fisttpll
fmuls
cmp
push
pop
fwait
cmpsl
cmpsl
and
aad
ds
and
les
popf
in
test
movsb
cwtl
dec
xchg
xlat
je
test
mov
cmp
test
mov
sub
mov
nop
mov
dec
jns
cmc
hlt
imul
cld
loopne
sahf
mov
fisubrl
int3
xor
dec
test
sarb
mov
and
in
enter
stos
cmp
insl
icebp
push
stos
rol
into
imul
cld
jne
jecxz
mov
stos
repz
jns
fbstp
cwtl
repnz
cmp
mov
sub
xor
inc
push
xor
int
xor
fdivs
and
je
mov
pusha
out
std
and
mov
fmull
dec
pop
xchg
cli
in
push
shll
pop
add
repz
xchg
sbb
and
xchg
dec
jmp
scas
test
inc
push
repz
movsb
outsl
push
xchg
mov
in
push
cmp
cmpsl
in
cmp
sti
adc
push
out
repz
mov
imul
push
cld
repnz
adc
xlat
stos
pop
inc
mov
dec
das
mov
jbe
mov
push
mov
dec
stc
iret
pop
dec
adcl
cltd
add
jno
dec
jge
pop
pop
out
jge
mov
aad
loopne
sbb
or
add
cwtl
push
cmp
cmp
jns
repz
add
gs
das
cmpsb
jg
dec
fisubrl
push
leave
mov
cmp
add
addl
mov
bound
dec
inc
loope
fidivl
push
jl
and
inc
fwait
sbb
jge
out
mov
mov
aad
mov
sbb
je
in
mov
stc
push
adc
jnp
cmpsl
das
sahf
mov
and
loope
mov
imul
xor
push
mov
popa
cltd
mov
mov
imul
mov
mov
push
stc
pop
dec
push
std
cmp
jmp
popf
movsb
js
stos
mov
adc
xchg
scas
mov
and
pushf
aas
fstl
orl
xor
pop
xchg
adc
sbb
mov
fdivr
in
jmp
out
xchg
ss
lret
dec
out
push
xor
xor
mov
inc
popa
clc
les
out
nop
iret
test
sub
bound
and
and
dec
jge
xchg
call
push
or
adc
sub
rolb
rorb
and
jmp
dec
pop
icebp
dec
xchg
in
out
pop
aam
xor
add
insb
mov
cmpsl
shlb
addr16
bound
mov
shrb
fsubrs
ret
or
push
mov
mov
loopne
sbb
mov
mul
cwtl
and
pop
imul
gs
das
mov
movsl
xchg
shll
push
loop
dec
mov
scas
in
and
movsl
movsb
inc
popa
jns
arpl
ret
gs
push
mov
ret
shrl
gs
scas
test
das
test
jge
xlat
lahf
add
insl
push
and
mov
dec
inc
xor
sbb
repnz
mov
xchg
sub
jns
mov
rolb
ljmp
fcoms
mov
jno
mov
xlat
mov
and
cmpsl
jecxz
cmpsl
and
xchg
mov
push
aaa
stc
and
jl
add
invd
mov
mov
inc
mov
mov
mov
repz
sbb
sub
out
cmp
fcomps
adc
and
enter
xor
test
sub
dec
loop
setl
cmp
and
jle
adc
adc
pop
mov
les
shl
insb
mov
lds
dec
ror
mov
std
mov
out
inc
jo
dec
jmp
outsl
js
in
out
sub
cld
enter
mov
push
sbb
dec
sbb
push
mov
or
adc
add
movsb
sub
mov
pop
sbb
aas
sub
mov
iret
jno
add
mov
fdivrs
je
nopl
repz
inc
cmp
jo
pop
ja
sub
pop
sub
les
mov
sub
dec
fsubp
jge
or
stos
scas
inc
jge
inc
inc
hlt
ss
xchg
adc
ljmp
inc
scas
push
cltd
int
notl
sbb
push
mov
inc
jbe
idivl
scas
in
jns
mov
test
sbb
sub
mov
sub
gs
bound
jb
outsl
mov
cld
sbb
inc
mov
bound
cli
lods
icebp
pop
dec
push
jmp
mov
sbb
out
in
inc
fdivrp
stos
mov
loopne
adc
test
add
sub
or
inc
repnz
xlat
les
pop
popf
mov
or
cmp
push
divb
iret
ss
push
push
sub
imul
repnz
ret
lcall
xor
cmp
lock
or
or
xchg
push
lods
dec
je
cmp
out
cmc
xchg
sbb
xadd
js
push
push
sub
sbb
dec
and
pop
mov
mov
and
jnp
mov
or
jo
dec
loope
xor
jno
repz
sub
jnp
pusha
imul
sub
pop
push
inc
test
cmp
push
or
pop
jmp
cmc
adc
lods
cwtl
inc
sti
sbb
ja
inc
xchg
je
in
adc
lock
in
pop
icebp
mov
adc
ja
push
sub
out
es
lret
adc
scas
pusha
sti
shll
xor
ja
call
jmp
cmpsl
movsl
mov
mov
cmp
scas
out
lds
subl
roll
mov
push
es
lds
dec
addr16
mov
push
test
mov
daa
mov
or
push
sub
adc
push
mov
pop
mov
add
push
cmp
rorb
call
push
aaa
out
mov
push
or
mov
add
lock
popa
dec
rclb
dec
out
cmp
rcl
push
pop
ljmp
sub
daa
rcrl
nop
call
sub
mov
mov
outsb
push
dec
inc
push
ljmp
arpl
xor
bound
ficomps
js
imul
jbe
in
fiaddl
lcall
add
mov
je
dec
xor
inc
arpl
xor
inc
loopne
lret
and
jge
sbb
sub
xlat
sub
xchg
bound
pop
call
out
xchg
lret
push
mov
je
mov
pop
mov
push
adc
xchg
imul
fwait
dec
fcom
sbb
das
mov
test
scas
int
sbb
loope
gs
dec
das
out
xchg
inc
dec
lock
mov
push
popf
int3
inc
adc
adc
mov
adc
mov
or
fdivrl
add
das
imul
add
pop
adc
pop
in
cmpsb
mov
leave
and
std
pop
sbb
push
leave
cmp
jecxz
or
pop
mov
lods
lods
pop
mov
les
out
jnp
push
and
and
mov
lahf
daa
push
and
call
inc
movsb
fwait
or
sub
sub
xchg
mov
test
push
xchg
int3
lods
push
sub
orl
sti
adc
jecxz
or
xlat
bound
adc
mov
push
fiadds
sbb
jmp
and
xchg
out
rcr
scas
mov
mov
wrmsr
cli
mov
sbb
mov
xchg
test
push
xchg
mov
jle
or
cmp
sbb
jo
fs
adc
push
test
and
ret
cli
dec
dec
jns
xor
ds
fwait
sbb
stos
add
cmpsb
add
adc
aas
inc
fldl
mov
mov
cli
xchg
mov
push
fwait
jae
mov
rcrb
xchg
fbld
mov
cmpsl
scas
shrb
fadd
fdivrl
lods
scas
sub
adc
jns
sbb
or
adc
cld
pop
hlt
sbb
stc
push
dec
add
repz
pop
sbb
push
adc
pop
sub
sti
cmp
jb
and
cmp
add
mov
cmp
subl
or
ja
hlt
ja
cld
fdivr
stos
addr16
sbb
ljmp
std
inc
fimuls
pop
pop
aas
mov
xchg
cmpsl
sar
negb
xchg
sbb
imul
mov
xchg
lods
xchg
sub
and
mov
cmpsb
adc
cmc
lds
add
push
sti
aaa
mov
or
pop
dec
lods
fisubrs
ficomps
pop
ljmp
mov
mov
clc
pop
xor
repnz
vpaddusb
sub
add
xchg
test
push
push
mov
xchg
ss
rcll
out
add
jae
fwait
loop
mov
dec
inc
repnz
ljmp
and
das
repnz
shlb
sarb
lret
lock
add
imul
push
pop
out
sub
pop
xchg
andl
test
and
pop
mov
mov
pusha
xchg
mov
mov
dec
std
cli
push
lods
pop
in
jle
iret
data16
inc
add
daa
fwait
mov
movsb
loope
or
test
sub
inc
in
dec
ss
mov
mov
adc
lret
insl
insb
push
dec
dec
mov
test
xlat
and
inc
push
arpl
dec
popf
in
aam
cli
sub
or
add
cmp
mov
movsl
bound
inc
add
mov
addr16
cmp
in
sub
sbbb
xor
incb
outsb
adc
mov
sbb
repz
out
shlb
sbb
je
or
push
push
scas
jmp
mov
mov
scas
cmpsb
pusha
mov
scas
out
xchg
cltd
icebp
aad
mul
and
scas
sub
xchg
mov
rclb
sbb
sub
sub
add
sbb
ja
dec
xor
xchg
jmp
shrl
shlb
cmpsl
mov
fdivrl
insb
sbb
inc
subb
or
pop
add
int
inc
or
mov
adc
xor
scas
rclb
pushf
xlat
add
jbe
push
call
jbe
xchg
cli
push
jmp
test
clc
dec
push
sarl
xor
push
fmuls
dec
ja
pop
daa
or
lret
enter
jbe
hlt
fnstcw
push
xlat
adc
jo
out
pushl
fsubrp
fs
mov
das
pop
or
push
push
das
nop
cmc
or
iret
xchg
aad
xor
jmp
aad
xor
adc
dec
mov
sarb
in
ds
xor
push
pop
cltd
test
push
or
adc
push
in
fs
adc
push
xchg
xchg
outsl
push
idivb
or
sbb
gs
dec
cmp
fisttpll
pop
mov
arpl
jle
subl
dec
mov
lahf
dec
cmp
daa
outsl
mov
pop
out
adc
fimuls
not
jo
mov
cmp
inc
add
xchg
sbb
mov
add
mov
sahf
mov
shlb
pmaxub
std
roll
lods
bound
pop
call
lods
outsb
pop
lds
sub
cmp
cmp
push
mov
mov
mov
dec
adc
int
mov
xor
cltd
cmpsl
sub
and
xor
and
cmp
jmp
ljmp
mov
mov
cmp
pop
test
pusha
imul
cld
mov
add
adc
pop
push
or
pop
sub
sar
mov
in
jle
push
and
fcompl
out
gs
out
leave
ret
lahf
dec
xor
cmp
ds
xchg
iret
pusha
adc
jno,pt
ds
insb
lahf
int3
das
or
or
lods
mov
push
or
pop
jo
ds
pop
das
dec
les
push
push
mul
rolb
mov
arpl
test
rclb
popa
icebp
jbe
mov
and
in
push
call
mov
dec
nop
mov
lret
ficoml
pop
adcl
and
ret
in
dec
push
fidivrs
les
outsl
aaa
iret
test
jl
add
sbb
rolb
mov
cli
jo
imul
push
cmp
dec
lods
scas
dec
xchg
sbb
data16
stos
stos
fnstsw
xor
ds
test
imul
ret
dec
loope
mov
sub
jle
add
test
in
sub
sub
adc
in
add
dec
push
gs
mov
pop
sub
cmc
sub
pop
movsl
loop
inc
repnz
test
mov
push
jg
xchg
ljmp
xor
sbb
inc
pop
adc
mov
pop
loop
xchg
or
insb
in
xor
pushf
fst
inc
fcmovne
cmc
xor
mov
xchg
or
sub
dec
cld
imul
push
push
mov
js
push
inc
xor
insb
adc
aaa
sub
fcmovnb
and
xchg
inc
cmpsb
aam
jbe
popa
or
xchg
lods
std
mov
and
sti
lahf
loop
mov
fcomps
out
adc
js
in
pop
push
pop
ljmp
sbb
mov
cmp
mov
push
in
sbb
subb
or
arpl
scas
mov
adc
add
and
ja
stos
mov
pushf
lock
xchg
idivb
sbb
sar
or
mov
dec
jp
movsl
dec
cmpsl
jbe
mov
lret
movsb
adc
in
mov
mov
sub
cvtdq2ps
jne
xchg
push
loop
ss
arpl
sbb
xchg
jge
je
enter
jnp
leave
mov
sbb
fwait
inc
add
movl
sbb
inc
aas
or
jg
arpl
int3
lret
out
and
sub
push
pushf
test
mov
jne
fistl
popf
shrl
inc
push
std
mov
xchg
and
shll
loopne
mov
inc
sahf
ret
mov
repnz
mov
cmc
dec
cmp
faddp
dec
push
add
jg
add
imul
lods
fnstcw
xlat
cmp
push
in
fildll
incl
dec
in
add
push
not
mov
test
xchg
lahf
jno
push
pop
add
add
scas
adc
fidivl
mov
pop
cmp
jp
and
mov
mov
int3
pushf
outsl
clc
add
dec
cmpsl
jl
filds
jo
int3
cmpsb
movsb
and
mov
pop
nop
xchg
mov
jp
dec
ds
cmpsl
inc
jg
repnz
mov
pop
repz
imul
orb
scas
mov
ror
ret
xchg
jg
pushf
ljmp
stos
ss
inc
dec
and
jp
cmc
push
xor
out
jmp
pop
mov
out
popa
sti
imul
inc
ret
mov
in
cmpsb
pop
incb
sbb
subb
std
pop
ds
leave
add
push
cmp
jnp
sbb
cmp
xchg
subl
fidivs
xchg
aam
pop
cld
stos
xlat
add
shl
xchg
mov
mov
ds
inc
cmpsb
inc
clc
mov
popa
push
pop
ret
aam
popa
lgs
pusha
bt
xor
mov
scas
pop
xor
fs
push
jg
sbb
in
test
xchg
test
test
ret
cmp
push
pop
loope
and
movsl
pop
cs
mov
add
or
out
mov
lock
adc
sahf
stc
incb
cmpsb
loope
shll
adc
addr16
cmp
imul
sahf
mov
fldenv
cmpsb
subl
daa
repz
mulb
cld
repz
and
sarb
movsl
adc
jecxz
sbb
jae
pushf
rorb
addb
int3
cmp
stc
sub
adcl
cld
push
jne
popa
xor
xor
cmpsb
pop
xchg
cmp
inc
sub
xor
or
mov
sbb
iret
inc
popa
arpl
fwait
jne
mov
xor
push
sbb
imul
fs
adc
cmp
push
ret
scas
jae
cmp
and
std
fcomip
push
scas
inc
inc
sahf
shrl
jmp
dec
sahf
pop
inc
push
iret
or
addr16
or
pop
adc
mov
pop
popf
push
call
cmp
rcl
into
mov
jmp
mov
inc
cmpsl
aad
filds
les
cmp
movsb
div
insb
dec
rol
push
aad
ljmp
imul
stc
adc
sub
mov
fiadds
dec
arpl
in
inc
sbb
jl
ljmp
sub
push
xchg
int
mov
ficompl
sbb
loope
push
add
or
out
fsubrl
or
addr16
outsb
jo
mov
outsl
or
sarb
mov
icebp
insl
or
push
in
test
or
mov
stos
dec
cmova
mov
and
cmpsb
jbe
jo
fsubr
push
movsb
dec
out
and
jbe
shrl
idiv
jl
scas
sub
scas
inc
imul
inc
sub
ds
ss
jno
stos
imul
adc
xchg
jg
lret
pop
movsl
jae
fcompl
rclb
out
push
inc
xchg
pop
xchg
sahf
sbb
jae
xor
pop
dec
mov
call
or
out
xchg
loop
or
insl
mov
hlt
cwtl
mov
xchg
mov
and
insb
jecxz
roll
pop
jae
cmp
xchg
incl
loopne
inc
inc
jle
in
rorb
call
push
mov
xlat
push
pop
mov
loopne
dec
lret
lcall
lods
and
adc
inc
rep
mov
inc
sbb
mov
inc
cmc
sub
jle
cmp
pushl
js
into
mov
rorb
add
cmc
mov
xchg
mov
outsb
ret
sub
push
addl
inc
xor
dec
cli
dec
push
loopne
xchg
cld
sub
sti
rorl
imulb
pop
aas
arpl
ja
xor
lcall
inc
mov
jb
pop
imul
ljmp
jl
adc
lret
xchg
imul
push
cli
imul
jns
mov
aas
cmpsb
adc
fstpt
test
add
in
fs
iret
lret
lret
push
dec
pop
xchg
stos
or
movsl
ret
inc
int
test
xor
aas
dec
icebp
stos
fwait
icebp
cmpsb
std
pusha
loopne
mov
fstl
pop
aam
aas
push
ffree
outsl
cmp
mov
mov
sbb
cmpsl
mov
fcompl
jae
xlat
scas
mov
push
sub
je
lret
insl
aas
out
and
shlb
adc
push
xchg
ja
addr16
gs
or
lds
sub
insl
fisubs
scas
ljmp
push
sbb
cld
xchg
and
gs
push
mov
outsb
adc
cmp
cs
in
inc
cmc
jbe
mov
mov
imul
pushl
iret
rol
xor
add
jo
cmc
adc
movsl
cmp
cld
dec
clc
add
fxch
lret
inc
push
mov
xlat
cltd
jmp
xor
in
inc
fnstcw
out
push
popf
mov
push
imul
int
call
stos
push
fwait
scas
add
xor
mov
pusha
push
cmp
dec
xchg
gs
add
and
jne
lods
adc
mov
pusha
inc
adc
cmpl
mov
push
and
pop
cmpsb
hlt
aas
lods
add
mov
dec
and
sub
stos
inc
mov
pop
int3
pop
jae
cld
sub
lods
sahf
sub
repz
adc
into
notb
movsl
xor
sbb
cmpsb
push
fwait
and
cmp
cmp
xchg
dec
xchg
ret
or
and
sub
ret
xor
cmp
sub
test
dec
mov
mov
loope
sub
xchg
in
mov
sbb
xor
jecxz
mov
in
inc
pusha
add
sbb
stos
out
mov
nop
data16
fwait
lcall
sarl
testl
ja
sbb
push
and
dec
stos
loope
jle
cli
push
sbbb
cld
stc
mov
sbb
fnstsw
sub
jne
fld
xor
push
cmp
jb
or
jecxz
pusha
xchg
jno
imul
cmpb
xchg
ret
cmp
hlt
lea
cs
pop
inc
mov
arpl
insb
ret
call
lret
sbb
setb
bound
fisubl
ss
pop
fisttpl
movups
xor
insl
xchg
test
pop
and
pop
scas
lods
xor
mov
dec
rol
lcall
inc
and
pop
dec
das
lods
orl
pop
hlt
and
lahf
push
test
pushf
int
shll
xor
cmc
dec
pop
out
lods
inc
sub
push
arpl
mov
dec
pop
add
rolb
mov
movsb
out
pop
daa
cmpsb
inc
xor
andb
je
popa
lods
pop
and
cmp
pop
lret
jns
ret
xchg
sbb
push
adcl
sbb
call
imul
arpl
fdiv
mov
js
xchg
or
cmpb
cmc
inc
pop
push
sub
int3
inc
pop
jg
sbb
push
pop
adc
mov
out
cmpsb
popf
lret
mov
and
lret
xor
sbb
and
pop
pop
inc
orl
mov
pop
push
xor
pop
sbb
aas
dec
sub
add
mov
dec
mov
adc
push
push
and
sbb
cld
add
adc
mov
pop
cmp
fwait
xchg
idivl
ja
push
in
inc
xchg
scas
out
push
rolb
add
pushf
je
jle
sbb
clc
pushf
roll
aam
cwtl
xor
add
dec
pop
xor
je
jns
data16
clc
iret
fcomip
insb
test
mov
stos
sub
jae
mov
sub
jmp
cmp
inc
divb
jmp
pop
and
in
xchg
loopne
dec
jo
sbb
je
aas
je
lods
xorb
and
daa
sub
mov
fs
xchg
cmc
inc
push
movsl
push
fildl
pop
movsb
repnz
adc
push
aaa
mov
xor
ficoml
pop
add
imul
in
fwait
cmpl
or
pushf
or
push
lods
mov
cli
es
add
jae
test
decb
mov
mov
xor
dec
cmpsl
repz
sbbb
mov
mov
out
jnp
nop
sub
sahf
xor
and
mov
setge
stos
xchg
stos
or
xlat
or
rorb
es
call
loop
rcrb
mov
add
inc
mov
lods
add
fwait
push
sub
data16
or
test
xor
or
and
shll
mov
fidivl
clc
stos
in
pusha
test
jecxz
xor
cmc
sub
mov
in
adc
push
imull
sbbb
mov
lret
adc
xchg
rolb
pop
imul
aas
cmpsl
loopne
insl
or
mov
ljmp
jne
loope
jl
jbe
adc
pushf
mov
popa
sub
or
in
and
pop
test
mov
push
or
dec
push
sbb
ljmp
mov
jo
pusha
lods
adc
cld
sbb
mov
jmp
in
xchg
pop
mov
addr16
jg
js
fcomip
mov
or
mov
jo
aad
jecxz
aad
lock
dec
jae
mov
and
ja
iret
scas
icebp
push
mov
into
xchg
in
scas
clc
int3
cmp
lahf
xor
inc
imul
cmp
sbb
add
lock
dec
mov
sbb
mov
mov
mov
out
insb
mov
daa
popa
cwtl
out
sub
mov
xchg
scas
out
out
jo
call
sub
push
rclb
cmp
mov
xor
lcall
add
mov
int
fxch
xor
inc
adc
insb
sub
lret
xchg
jmp
xchg
mov
mov
mov
inc
mov
adc
scas
mov
mov
pop
leave
dec
inc
xchg
lret
fadds
sbb
leave
repz
pop
daa
mov
inc
mov
ja
outsl
mov
in
into
jb
test
cmp
adc
stos
stc
test
cld
push
and
adc
xchg
test
or
leave
mov
jl
pop
xor
mov
shl
int3
pop
test
lock
jle
rclb
jbe
fs
dec
mov
push
sbb
mov
fwait
jge
shll
pusha
dec
xchg
jl
jge
dec
jns
movsb
leave
xor
nop
add
lret
test
daa
scas
jg
mov
xchg
test
mov
in
push
shrb
testl
mov
dec
fprem
add
shlb
pushf
subl
pop
mov
cmc
ljmp
repz
dec
fldl
adc
pop
lret
mov
xchg
sbb
xchg
pop
mov
jbe
mov
call
lds
lret
test
adc
loope
xchg
scas
lods
push
rcrl
cmp
leave
sysret
fs
push
and
inc
mov
push
push
dec
mov
enter
sub
xor
imul
jg
mov
movsl
aas
pop
and
and
fbld
push
adc
loopne
or
mov
aaa
jmp
sbb
aam
push
pop
in
xlat
adc
in
push
jne
daa
cmp
insl
sub
pusha
sti
movsl
ja
outsb
sub
in
roll
addb
mov
push
insl
scas
loope
sub
packuswb
jl
cmp
fistpll
daa
cmpsl
mov
add
sub
mov
sbb
iret
stos
adc
jl
pop
adc
xorl
push
mov
loope
or
lcall
push
inc
cs
sarl
loope
arpl
inc
int3
shll
sbbl
jb
adc
sub
push
call
icebp
xchg
repz
mov
jne
pop
arpl
inc
adc
cmp
adc
adc
push
cmc
lret
xchg
pop
sub
push
repz
adc
inc
fsubrl
fmull
lret
lock
add
test
push
mov
std
es
push
sub
push
fstps
rcr
and
cmp
inc
loopne
xchg
mov
cmp
dec
jbe
arpl
push
inc
mov
sbb
cmp
loop
lahf
push
mov
hlt
push
aam
jbe
lds
lock
adc
js
push
iret
mov
aas
xchg
or
push
insl
ret
shrb
jle
stos
inc
sub
mov
mov
imul
cmp
dec
fs
add
xchg
push
adc
jle
xchg
sub
push
mov
lcall
adc
aaa
cmpl
and
cmp
test
repnz
mov
ja
popa
aam
or
lods
gs
faddl
mov
enter
enter
add
xchg
mov
mov
les
cltd
and
mov
std
sub
mov
movb
popa
sub
in
jnp
cmpsb
scas
inc
inc
cmpsl
fcmovne
inc
adc
loope
adc
or
dec
sbb
mov
mov
sbb
mov
je
push
enter
push
je
mov
scas
jecxz
ja
adc
insl
adc
mov
inc
ljmp
add
jl
sbb
jmp
cmp
outsl
inc
fisubrs
in
cld
inc
jns
fidivl
sub
jnp
fwait
mov
outsb
ja
sub
add
lods
cmp
pop
push
inc
adc
mov
jmp
shrl
in
lret
inc
ss
pop
cs
dec
shlb
or
push
popf
lock
popf
sbb
aad
and
mov
mov
leave
xor
sub
dec
lret
lods
mov
lock
inc
adc
test
pop
in
jp
or
add
out
dec
stos
xor
dec
dec
add
iret
cmp
or
sbb
sub
cmpsl
xchg
jg
ljmp
inc
fldenv
std
mov
lds
add
clc
addr16
popf
hlt
cmc
scas
xor
ja
test
fstps
fwait
push
push
cld
in
add
shl
insb
lds
in
lds
int3
sbb
dec
loopne
sbb
xchg
adc
movsl
pop
or
push
idivl
adc
push
cs
cltd
mov
pop
jg
or
jmp
out
xor
loop
cmpb
fcmovnb
loope
lret
movsb
dec
inc
incb
pop
inc
insb
pop
dec
vpaddsb
sbb
cmpsb
inc
int3
push
or
mov
sbb
xchg
and
sbb
arpl
push
ja
imul
cmpsl
or
jo
je
call
sarb
mov
xchg
sbb
pop
out
jb
imul
out
mov
and
dec
orl
in
ret
mov
xchg
push
mov
sbb
icebp
mov
arpl
mov
or
hlt
lods
cmp
xor
addr16
mov
xor
sbb
addl
pop
and
pop
add
pop
xor
out
iret
sbb
daa
sahf
rcr
sarb
fcomi
xchg
data16
jg
mov
lea
mov
fwait
arpl
leave
mov
int3
push
ja
xchg
das
rclb
in
out
lods
pushf
cli
xchg
sbb
insl
pop
xchg
mov
movsb
test
sbb
dec
jae
mov
pop
insb
insb
jae
mov
test
pop
loope
test
push
push
cmp
push
jge
add
sti
push
mov
jp
aam
insb
lods
mov
add
pop
cmp
into
or
enter
inc
filds
lret
xchg
mov
and
dec
fstp
insb
push
add
pushf
xchg
push
mov
jne
adc
lret
inc
add
repnz
call
jge
daa
push
push
mov
lods
cmp
rclb
push
sub
and
sub
addb
pop
sbb
push
imul
daa
inc
xchg
in
mov
xchg
cmp
mov
inc
adc
jbe
inc
outsl
mov
in
adc
js
cmp
scas
in
xor
jl
sub
xor
pop
test
out
xlat
rcl
loope
outsl
les
jg
dec
into
fistpl
xchg
xchg
bnd
sbbb
repz
inc
sbb
sbb
mov
pop
rorl
aam
lds
push
int
imul
arpl
cmovnp
shl
pop
jp,pn
mov
fnstcw
push
push
cld
in
inc
xchg
add
ror
shlb
icebp
stos
adc
cmp
icebp
mov
pop
add
push
sarb
test
fnsave
sbb
xchg
sbb
xor
stc
sbb
add
dec
dec
or
loopne
dec
push
mov
les
or
pop
xor
jmp
jl
sbb
lret
int3
int
into
std
stc
pop
daa
dec
repz
and
push
push
ja
int
adc
outsb
sahf
js
sub
pop
adc
hlt
cmpb
cwtl
sub
out
xchg
dec
mov
sti
testl
rcr
sub
adc
adc
fbld
roll
pop
push
ja
pop
or
loop
adc
xor
pusha
subl
push
dec
in
adc
in
stos
push
outsb
add
inc
shll
cwtl
shll
xchg
xchg
ret
lea
fwait
jl
jns
int3
or
pop
ja
xor
mov
idivb
pusha
xchg
test
insb
in
test
inc
lock
mov
divl
sub
leave
femms
jp
sahf
fldenv
je
inc
and
jecxz
lcall
lret
add
dec
movsb
lcall
adc
je
stos
cmpb
xor
xor
int3
push
adc
pop
pop
les
jns
out
pushf
mov
clc
push
filds
out
sub
sti
cltd
sahf
inc
movsb
mov
mov
jg
aam
mov
add
xor
xor
jecxz
fcmove
arpl
cmpsb
inc
orl
adc
cli
push
sub
rorb
mov
cmp
inc
mov
dec
mov
push
push
xor
ss
popa
jge
push
jl
or
rorb
js
outsl
dec
adc
outsb
dec
out
inc
adc
jle
add
or
mov
pop
dec
mov
psllq
mov
push
mov
or
aad
xchg
shlb
fldcw
xchg
jl
in
shl
ds
mov
ja
jle
inc
mov
jge
mov
xchg
xchg
ret
jb
jns
or
fld
push
imul
xchg
test
repz
repz
lea
scas
int3
inc
push
mov
ja
sahf
sub
lcall
jne
xchg
mov
push
push
imul
shl
xor
mov
ret
roll
pop
jb
cmp
movsl
ret
dec
rcll
xor
jle
add
loope
les
mov
cmpsl
push
hlt
add
or
cmc
roll
sarb
iret
faddp
mov
insb
and
and
xor
data16
mov
jge
pop
lods
lock
inc
pop
pop
xor
sbb
pop
push
mov
frstor
push
leave
mov
mov
jb
arpl
mov
mov
add
dec
cmp
jbe
mov
mov
jb
add
lods
hlt
out
in
outsb
adc
push
sub
push
scas
inc
mov
mov
shlb
cmp
shll
mov
cmp
push
mov
int
or
ficoml
popf
stos
adc
sbb
fcompl
push
stos
pop
imul
mov
clc
mov
mov
mov
jns
out
or
repz
mov
das
out
pop
mov
mov
cltd
testb
cli
out
dec
sub
pop
sub
push
or
pop
insb
dec
test
loopne
xor
subb
pusha
dec
or
mov
js
dec
dec
lcall
mov
fdivrp
outsl
add
push
mov
cmp
iret
insb
inc
push
test
std
adc
jle
jp
sub
imul
mov
and
fistl
lahf
xor
xor
and
pop
cli
adc
xchg
lcall
out
jns
out
xchg
int
ja
pop
add
cwtl
dec
cli
es
cmp
gs
mov
push
rcr
sbb
lock
mov
dec
cltd
das
inc
mov
pop
fnsetpm(287
inc
cmp
dec
fsubrs
sub
movsl
fwait
xchg
in
scas
orl
mov
add
and
adc
ja
les
push
arpl
std
adc
cld
push
in
adc
fs
pop
xor
xor
inc
fldcw
sahf
push
repnz
sub
in
push
das
icebp
int
mov
scas
shrl
inc
xchg
cmpsl
cld
add
outsb
xor
sbb
xor
push
lods
push
into
mov
push
loop
div
andb
add
lcall
clc
pop
sbb
dec
jo
dec
cs
push
ja
push
cmp
push
ss
into
jecxz
lds
cwtl
roll
es
dec
fcomp
xchg
jo
test
ficoml
leave
pop
loope
lods
sub
pop
je
xor
jbe
ljmp
fadds
icebp
outsb
cmpsb
cmc
fdivl
sbb
std
jg
test
mov
mov
add
inc
stos
aaa
jp
push
pop
xchg
mov
rcll
imul
outsb
xchg
inc
out
shll
in
dec
out
adc
bound
sbb
decl
in
cli
lret
mov
mov
push
push
daa
data16
xor
les
popf
fsub
and
mov
stos
adc
push
xchg
lahf
das
pop
cmpsb
and
aad
pop
out
push
loope
mov
test
orb
inc
jno
ss
in
lds
cmp
fdivl
fs
jge
xchg
je
push
jnp
pop
ja
push
adc
dec
stc
xchg
cmc
xchg
inc
pop
lret
aaa
pop
dec
pusha
or
mov
cmp
adc
add
lds
aam
sbb
out
jno
push
fildl
jmp
hlt
xor
jl
rcrl
pop
fistpl
movsl
dec
fimull
mov
aam
cmp
push
fst
sbb
repnz
sahf
test
mov
aam
stos
sbb
lods
ja
fiaddl
rcrl
addr16
sbb
fisttpl
sub
and
test
clc
mov
insb
cli
dec
push
scas
dec
fists
pop
adc
sbb
and
cmp
xchg
faddl
jbe
pop
jecxz
and
scas
andl
out
hlt
push
insl
pop
sub
and
incl
pop
jmp
pusha
jmp
mov
xchg
adc
loopne
fsubl
les
scas
out
pop
notb
dec
xlat
or
stc
adc
or
or
push
lret
movsb
adc
or
sub
sub
fnsave
stc
mov
nop
xor
pop
dec
fistpl
jg
loop
jae
popa
mov
push
mov
and
repz
fmull
imulb
add
mov
pop
sbb
test
es
pusha
xchg
pushf
cmpsl
mov
xchg
add
dec
mov
push
bound
mov
out
cmp
push
mov
popf
push
cmpsl
imul
jnp
test
xchg
push
sub
lcall
orb
sbb
mov
scas
xor
insl
mov
push
sub
sub
add
push
cltd
bound
in
clc
outsb
push
xchg
call
rclb
jp
inc
inc
rolb
fstps
addr16
mov
mov
inc
jo
cmp
sbb
repnz
push
mov
cwtl
hlt
pusha
or
nop
jnp
call
mov
add
or
stc
insb
mov
push
sub
sub
shlb
mov
jecxz
xor
push
push
std
push
mov
ss
pop
xchg
mov
jge
jno
jne
in
and
and
push
ds
xchg
gs
jecxz
jl
pop
stos
cmp
mov
mov
lock
inc
lret
xchg
ret
ja
stc
cli
ret
mov
test
mov
sub
push
leave
pop
sti
adc
lock
or
rcrb
mov
lahf
jnp
jecxz
aad
insb
inc
xor
jae
sbb
fsts
les
fidivs
cmp
insl
push
mov
lods
jmp
pop
pusha
sub
mov
xchg
insl
jns
add
rcrl
aam
out
adc
aaa
jno
les
jl
jp
mov
das
cli
cmp
xchg
std
out
xchg
daa
aad
into
cmpsb
adc
and
jbe
push
sub
mov
lods
out
sbb
notb
push
dec
loop
bound
shrl
cli
cwtl
imul
cli
inc
aam
fimuls
push
jp
int
xchg
or
cmpsb
sbb
jecxz
sub
insb
cld
inc
in
sub
pop
mov
fsubp
hlt
arpl
inc
cmpsb
dec
or
push
mov
xorl
loopne
sbb
mov
int3
cmp
and
ja
sti
iretw
mov
cmp
dec
and
int
sub
sahf
dec
sub
cmp
sub
loopne
in
mov
loopne
loop
cmp
rcrl
gs
mov
gs
xor
lods
xor
cmp
sbb
dec
add
pop
je
dec
ret
and
jne
cmp
mov
mov
mov
jg
sbb
enter
out
pop
xor
test
call
inc
mov
mov
lds
out
pusha
repnz
loop
cmp
cmp
jb
jnp
xchg
push
pusha
test
dec
and
jb
and
cwtl
or
xor
mov
test
xchg
adc
lret
mov
icebp
addl
jg
add
mov
lret
insl
push
rcll
addb
push
lea
mov
push
mov
xor
cmpsl
stc
mov
mov
in
xchg
mov
leave
fnsave
push
push
mov
ret
push
inc
push
xor
mov
jnp
pop
and
mov
imul
out
push
add
dec
or
ljmp
xlat
hlt
movsl
mov
xlat
daa
xor
jmp
fs
cs
dec
stos
add
sub
lcall
clc
daa
int
lods
dec
insb
rclb
mov
xchg
cmc
push
push
call
int
imul
mov
jmp
inc
push
pusha
cs
mov
pop
add
mov
pop
leave
lcall
sub
push
hlt
xor
insb
into
or
pop
pop
xor
mov
mov
push
sti
sbb
adc
pop
and
xchg
mov
imul
pusha
ret
mov
cmc
lahf
jb
incb
jae
and
inc
lahf
gs
lret
stos
xchg
cwtl
pop
out
mov
inc
mov
sub
mov
mov
jge
dec
int3
xor
popa
dec
loop
cmpb
ret
jecxz
popf
repz
xadd
pop
cwtl
and
jmp
inc
iret
or
das
test
dec
push
rol
sub
adc
jg
xor
mov
dec
dec
push
test
fcoms
mov
xchg
push
xchg
jecxz
pop
mov
push
lods
dec
out
movb
jns
and
push
or
sub
aad
xchg
pavgb
cmpsb
out
inc
dec
andb
addr16
inc
xchg
bswap
cmpsb
mov
jge
test
adc
mov
jg
or
xchg
xor
dec
js
movsb
movlps
or
ljmp
mov
mov
addb
ret
int3
test
inc
ds
pushf
jle
das
daa
pusha
mov
jecxz
mov
inc
pop
add
xlat
je
lock
pop
int3
repnz
push
pop
mov
int3
stc
das
dec
mov
push
aas
sbb
lock
add
push
jbe
lahf
sub
ss
jne
int3
sbb
cmp
mov
pop
aad
scas
pop
ret
mov
mov
jmp
sti
jmp
dec
xchg
addl
ror
test
dec
stos
mov
inc
popa
push
pop
push
xchg
ds
sub
mov
xchg
lock
cmpsb
dec
jns
mov
rclw
pminsw
sarb
inc
adcl
jmp
and
push
sub
jno
sub
xchg
cld
xor
iret
push
dec
dec
aad
sti
jle
test
inc
imul
aaa
dec
stc
add
cmp
dec
cs
nop
test
sbb
or
insb
push
clc
je
fimuls
test
jmp
pop
lret
lds
loop
fnstenv
push
xchg
loopne
lret
stos
add
dec
pop
mov
lcall
subl
fwait
jmp
rorb
mov
xchg
fwait
mov
add
jmp
pop
nop
xchg
lret
push
adc
mov
lcall
fcompl
popf
push
stos
jp
and
mov
shlb
push
sub
orl
pop
mov
adc
cltd
cmovp
sbb
pop
lock
cmp
bound
iret
add
cmp
std
and
sbb
orb
dec
push
xlat
add
sahf
adc
adc
mov
pushl
paddsw
movsb
arpl
mov
push
mov
cwtl
pop
mov
lea
jl
int
cmp
adc
mov
sbb
rol
jb
fists
sarb
in
or
fmulp
lds
jmp
jp
lods
push
xchg
adc
or
cld
out
cmc
orl
mov
sti
fs
daa
cmpsl
pop
xor
iret
add
dec
movsb
fistpll
jo
xchg
fs
mov
dec
sub
push
push
push
iret
call
nop
mov
pop
xchg
mov
push
enter
add
pop
push
xor
inc
pop
ljmp
or
or
sub
push
pushf
xchg
mov
imul
dec
out
adc
leave
jmp
into
pushf
mov
in
es
nop
mov
mov
add
mov
xorb
xchg
iret
arpl
gs
enter
xor
dec
sarb
mov
sub
pop
cwtl
lods
dec
jbe
xchg
lock
roll
cmp
xchg
xlat
data16
and
cmp
and
and
pop
insb
cmp
int
idivl
adc
mov
adc
dec
cmp
iret
inc
int3
cmc
out
leave
cmp
xor
pusha
cmp
repnz
fisubs
xor
sbb
add
push
lahf
sub
daa
pop
insb
sub
jb
cmp
adc
popf
push
xchg
addl
and
addb
push
and
sub
jg
jge
cmp
clc
mov
push
loopne
mov
lahf
gs
ret
and
cmp
xchg
push
dec
lea
xor
std
shlb
rcrl
dec
mov
cmp
jbe
scas
dec
ret
xchg
jmp
push
xchg
gs
inc
jne
xchg
scas
in
call
aad
es
cwtl
push
push
sbb
das
into
mov
pusha
dec
ficomps
sub
movb
mov
dec
xlat
pop
cmpsl
rcrl
scas
dec
es
xor
mov
sbb
addr16
cmpsl
jp
mov
lahf
lods
add
push
adc
cli
push
mov
outsb
dec
push
adc
rcr
fdivr
pushf
adc
out
test
fmull
fwait
xchg
adc
mov
int
lea
fisubs
sub
mov
imul
push
les
adcl
cmp
sub
movsl
inc
and
mov
shlb
jae
in
jmp
arpl
dec
add
dec
xchg
rorl
cmp
insb
sub
popa
add
test
push
pop
in
lret
cs
push
orb
cmc
mov
call
rcrb
mov
aad
jnp
in
sbb
std
scas
lret
jo
lods
movsb
outsl
pop
test
xlat
adc
mov
out
cmpsl
mov
cmp
mov
jno
fiaddl
jo
mov
and
repnz
imul
cmp
xchg
jns
ss
dec
out
or
inc
mov
mov
mov
cli
inc
cld
mov
movsb
das
pop
sbb
loopew
mov
jae
in
xor
fadds
call
inc
xchg
cwtl
mov
pop
pop
push
fdivrp
es
iret
xchg
and
jg
jb
sbbb
or
sub
lcall
adc
stos
sub
aaa
sti
or
mov
fsubs
dec
dec
shlb
jle
repz
pushf
mov
out
adc
jmp
stos
push
mov
rorb
fucom
or
xchg
or
cmc
sarb
jp
cmp
xchg
push
iret
inc
sahf
sub
and
test
nop
push
stos
es
outsl
lea
std
push
adc
hlt
addr16
out
cmpl
iret
sti
flds
jne
jo
loop
sbb
pop
incl
popf
xor
mov
nop
sbb
jp
add
mov
iret
js
lahf
pop
outsb
cmp
sbb
push
mov
movsb
pop
push
hlt
cltd
xchg
mov
ljmp
shl
mov
lea
out
stc
gs
push
pop
test
fwait
ds
push
pusha
adcb
push
loopne
fldt
loope
mov
test
jnp
fcmovbe
dec
pop
or
and
das
jae
xchg
add
mov
adc
xchg
mov
es
arpl
xchg
lret
jecxz
push
loopne
add
or
imul
sbb
xchg
ficoml
cmc
push
enter
adc
fldenv
popa
dec
sti
test
lahf
adc
xchg
js
mov
jmp
rolb
pop
sti
cmp
scas
push
jne
in
leave
popf
scas
in
rorl
mov
jl
push
mov
sti
adc
sbb
test
cmp
sets
xchg
or
sbb
xor
mov
add
je
mov
lahf
repnz
loope
lcall
test
inc
stc
push
iret
add
mov
clc
jge
out
mov
adc
mov
cwtl
je
gs
outsl
into
xchg
cmpb
mov
ffreep
stos
cmc
lods
hlt
out
jae
push
test
daa
and
popa
add
xlat
jl
lahf
out
pusha
dec
les
cwtl
sub
and
cmp
cmp
cli
imul
or
int
adc
or
mov
push
cmpsl
sub
dec
xchg
push
lods
mov
cmp
loope
dec
xchg
stos
lret
adc
cmp
cmpb
test
adc
leave
stc
fiaddl
push
outsl
movsl
lods
and
pop
jecxz
mov
arpl
scas
mov
leave
adc
test
dec
cld
cmp
ss
xchg
test
sbb
aad
xor
inc
outsb
inc
cmp
sbb
or
fcmovb
js
nop
imul
aam
mov
xor
jne
cmp
in
or
ljmp
push
mov
inc
lock
in
test
cmp
adc
sahf
ret
mov
in
cmp
outsb
jno
in
test
add
enter
inc
push
mov
push
dec
pop
imul
xchg
test
fsubl
gs
mov
inc
test
nop
jl
popf
addl
repnz
jnp
outsb
aad
lret
or
xchg
insl
sti
pop
or
in
scas
popa
adc
push
jae
and
fidivrl
pop
mov
xchg
jle
push
icebp
pop
lret
inc
mov
mov
push
push
je
mov
mov
push
fnstenv
hlt
das
cmp
out
in
or
inc
jne
rorb
inc
xlat
mov
imul
imull
pop
sbb
mov
sub
popa
data16
adc
sbb
les
mov
lcall
lret
pop
push
adc
ljmp
bnd
and
cld
add
fldt
movl
sub
jle
cld
add
loopne
sti
adc
xor
aas
popl
mov
subb
andb
cmpsl
mov
test
sahf
jno
mul
mov
inc
ja
imul
insl
inc
iret
add
mov
or
inc
add
mov
les
sub
movsl
mov
jmp
jle
cmp
mov
xchg
nop
scas
mov
sti
cmpsb
daa
mov
dec
adc
lds
fldt
out
dec
stos
jb
dec
pop
sub
jp
popf
or
push
scas
scas
daa
sbb
hlt
xchg
outsb
cwtl
jnp
xlat
daa
mov
icebp
xor
out
or
inc
in
in
mov
add
pop
pushw
dec
inc
rorb
dec
jb
mov
xchg
inc
dec
aam
icebp
pop
dec
add
pusha
data16
ja
cmp
mov
add
xor
insl
test
insb
add
lock
xchg
sub
xchg
loope
inc
add
shlb
loope
inc
pop
jbe
testl
mov
es
jnp
or
out
and
clc
les
dec
repnz
dec
repz
pop
shrl
sub
lahf
and
mov
jb
cli
push
fldenv
test
dec
rol
dec
ret
shrl
mov
lds
ret
pop
in
pop
inc
or
cwtl
sub
inc
xor
inc
negl
test
pushw
mov
aad
test
mov
in
xchg
and
or
xlat
dec
jbe
mov
jg
adc
mov
sbb
xchg
std
cmp
inc
pop
push
adc
pop
cmp
repz
jmp
adc
scas
gs
out
xor
push
stos
js
or
ja
dec
imul
ljmp
in
mov
rclb
out
fnsave
pop
je
xchg
sub
inc
mov
inc
pushf
inc
sbb
jle
xor
scas
mov
jbe
adc
ror
ss
push
push
lret
or
sti
lidtl
cwtl
lahf
and
sub
fdivrp
pop
scas
mov
stc
xor
adc
mov
mov
jecxz
fisubs
int3
call
inc
shll
cmp
fmulp
lret
xor
test
push
mov
testl
add
or
sub
cmpb
cli
not
pop
fildll
inc
mov
sbb
adc
sti
add
test
xor
xor
jge
pop
or
sarb
pusha
push
push
or
cltd
adc
jp
xchg
sub
andl
stc
into
or
fldl
push
scas
mov
inc
and
sub
pop
xlat
fsubrl
mov
and
pop
cmpsl
inc
aam
and
aaa
mov
fsubrl
enter
mov
and
xrelease
and
aaa
popa
mov
cmpsb
xchg
ficoms
and
aam
dec
int
cltd
ss
push
pop
mov
hlt
mov
popa
sub
pop
xchg
lret
add
hlt
mov
xor
cmc
lahf
dec
add
cmp
xchg
jno
divb
cwtl
outsb
dec
xorb
lods
push
out
cwtl
cmp
or
or
lea
pop
ret
ljmp
adc
and
push
leave
dec
rcll
mov
out
mov
nop
stos
popf
jle
xchg
movl
push
call
int
into
add
lret
sbb
add
aad
xor
push
push
jae
rcr
push
aad
movsl
insl
add
lret
cmc
cmp
pushf
es
insb
rcl
dec
pop
cs
sbb
sbb
or
repz
sbb
lds
test
pop
add
cmp
jno
sub
adc
pop
mov
sti
mov
dec
jp
in
mov
jb
dec
outsb
andl
sub
and
or
ljmp
cmpsb
jbe
fs
div
cmpsl
adc
shll
mov
data16
cs
loopne
xchg
pop
mov
pop
push
pop
fisttps
cmp
gs
call
xchg
push
outsb
mov
aam
test
in
mov
pop
and
jno
arpl
mov
icebp
push
inc
sub
divl
mov
shll
test
dec
mov
mov
shrl
cltd
push
jbe
inc
jbe
js
cli
jge
inc
mov
in
cmp
cmpsl
cmp
push
hlt
cmp
inc
fsubrs
test
nop
loopne
movsl
fisubl
xor
mov
roll
jns
mov
xor
in
and
loopne
rolb
jbe
lock
movsl
fisttpll
std
cmp
xor
jo
fisttpl
xlat
pop
jg
cmp
std
nop
pop
clc
push
loopne
icebp
inc
sbb
jnp
test
jns
xlat
out
dec
inc
sbb
mov
andl
push
inc
in
push
test
mov
sbb
pop
or
mov
out
sub
mov
pop
sub
xor
les
in
stos
cmp
jbe
add
xchg
jne
mov
jl
xchg
enter
sbb
mov
jo
stos
cli
push
cltd
ret
adc
movsl
sbb
into
sbb
sbb
mul
mov
pop
test
or
adc
lds
das
lcall
lcall
dec
mov
cmc
jbe
jg
add
mov
je
mov
je
insb
lods
xchg
or
jnp
sbb
pop
fnsave
imul
rol
dec
mov
leave
gs
jg
loop
sbb
je
xchg
push
cmp
repz
fcompl
xchg
adc
pop
fcmovbe
icebp
sub
sti
and
cs
adc
js
inc
cmc
dec
adcb
ret
cli
fbld
ret
mov
incl
es
es
fcompl
pop
pop
fwait
dec
adc
push
js
movsb
and
inc
stos
stos
cmpsl
jae
scas
mov
mov
testl
lcall
add
jne
cli
inc
or
pusha
loop
cmp
movsb
mov
or
dec
es
in
jae
push
xchg
jne
pop
test
stos
repnz
mov
adc
xchg
out
je
mov
xorb
add
dec
mov
je
jnp
or
ss
rorb
mov
cld
jge
lods
fdivr
cwtl
in
hlt
xchg
xlat
inc
inc
mov
add
lea
stc
push
into
jg
add
and
lods
mov
daa
push
and
pop
jbe
mov
jg
lea
int3
imul
test
shll
pop
mov
inc
dec
cmp
dec
aaa
repz
aam
into
xchg
jp
sbb
mov
insb
xchg
les
adc
mov
jl
inc
push
shlb
notl
push
les
insl
je
mov
shl
or
push
pusha
loope
and
loop
test
fsubrl
test
jo
ficompl
stos
jle
lea
in
and
xor
hlt
adc
stos
rorl
fwait
bound
mov
dec
fs
inc
sub
out
in
mov
adc
shr
push
imul
or
rorb
fld
mov
pop
mov
or
js
mov
mov
push
jnp
or
outsb
arpl
jl
jmp
inc
dec
cmp
scas
dec
int3
adc
inc
pop
mov
jbe
xor
jnp
adcl
sbb
jo
jg
aaa
popa
sub
inc
das
daa
and
popa
ds
cwtl
jmp
inc
mov
jae
fimuls
sub
lcall
arpl
push
enter
nop
mov
sub
xor
mov
xchg
outsl
insl
dec
shrb
push
cmp
and
mov
and
imul
insl
pop
scas
and
xchg
ret
in
aam
ss
ret
movsb
jne
cltd
das
aam
loop
inc
inc
adc
pop
jo
out
pop
and
bound
stos
insb
xchg
mov
push
xlat
cmp
mov
andb
and
pusha
cmp
and
fsub
sub
iret
imul
ret
cmp
pop
adcb
lods
loopne
test
or
popf
dec
xchg
adc
push
sub
mov
cmp
xchg
les
or
aas
sbb
pop
mov
loop
lahf
push
sub
dec
jb
movsl
jno
jg
leave
and
jmp
in
jmp
sti
nop
test
negb
clc
std
ljmp
inc
jmp
repnz
cwtl
fs
fwait
push
cmc
loopne
stos
arpl
negl
jg
ror
mov
shl
roll
ljmp
push
mov
outsb
xchg
mov
cli
lcall
or
pop
push
pop
xor
fldenv
ficompl
cltd
jno
jbe
adc
push
jecxz
push
or
ret
fdivl
out
out
push
push
inc
mov
push
mov
movntps
xchg
mov
inc
out
inc
inc
sti
jae
sub
jb
or
popa
and
shrl
jmp
inc
jno
js
push
hlt
adc
lods
cmpsl
clc
popf
pop
clc
sbb
inc
aad
xor
adc
nop
enter
mov
shrl
xchg
jbe
shll
mov
loope
pop
jbe
repz
cs
in
lds
pop
mov
jmp
inc
cmpsb
leave
pop
push
je
lcall
clc
xchg
pop
repnz
mov
out
icebp
sub
cwtl
cmp
mov
jb
loop
jmp
repnz
push
push
mov
mov
dec
fnsave
addr16
lahf
lods
pop
int3
jbe
jecxz
lcall
ret
or
test
sbb
add
sbb
mov
mov
mov
push
adc
mov
pop
ficompl
push
enter
pop
test
mov
imul
ljmp
mov
int
adc
aam
repnz
stos
aam
lcall
lods
push
mov
in
in
cmp
fiadds
icebp
scas
inc
mov
add
test
int3
mov
test
mull
mov
arpl
pop
iret
xchg
popf
data16
sub
insl
in
addb
xor
cmp
jno
scas
cmp
enter
stos
dec
test
inc
imull
es
or
inc
adc
push
test
inc
pop
fabs
and
mov
cmp
cltd
mov
mov
add
mov
rcl
dec
add
insl
arpl
push
sti
cmpsb
inc
xchg
hlt
test
mov
inc
or
mov
adc
rcrl
mov
xor
daa
adc
aad
pusha
jl
push
mov
push
test
dec
rcl
in
xchg
add
lret
xor
jbe
ret
ljmp
scas
fstpt
frstor
ret
inc
pminub
push
out
loope
lahf
mov
insl
dec
aad
in
gs
mov
dec
jne
scas
push
push
aam
sub
sub
and
mov
mov
jbe
or
jnp
sbb
push
adc
mov
and
push
and
sub
ret
xchg
or
ret
lods
std
push
outsb
in
dec
xor
sub
pop
js
xor
dec
push
movsl
and
adc
jb
sub
jl
insl
fnsave
mov
jge
leave
and
xor
mov
test
ret
mov
inc
and
pop
idivl
add
or
dec
mov
add
xlat
jg
ds
pop
mov
cmp
sbb
jl
in
cmp
mov
dec
jno
loopne
fisttps
lock
int3
stos
movsb
aaa
inc
in
cmp
test
leave
jno
pop
es
mov
jmp
icebp
sbb
das
inc
pmaddwd
sbb
sbb
push
jae
mov
mov
repnz
jp
mov
push
xchg
lods
or
dec
and
xchg
xchg
popa
mov
pop
xchg
xchg
ss
dec
test
dec
outsl
inc
call
cwtl
loope
push
push
mov
cltd
add
gs
inc
mov
jge
call
lret
aam
jle
jno
jno
sub
arpl
jg
loope
sub
xchg
jnp
mov
inc
es
addr16
xor
fdiv
xchg
dec
lods
mov
adc
daa
cmp
imul
arpl
dec
loope
cmp
adc
cwtl
fcomps
or
nop
ret
iret
scas
jp
mov
xor
lods
icebp
addr16
jmp
add
and
roll
jmp
or
js
sbb
push
adc
incb
data16
sar
pusha
mov
call
arpl
jns
sub
xor
mov
sar
jmp
int
sub
jl
mov
lahf
sub
adc
mov
loop
cmp
inc
or
mov
popf
mov
lahf
and
out
out
fstp
cltd
loop
sbb
push
ret
ficomps
pop
loope
xchg
mov
cmp
lods
imulb
pop
inc
inc
mulb
nop
mov
pop
mov
cmp
jmp
add
or
mov
call
pop
lahf
rorl
int
pop
adc
dec
loope
lods
mov
cmc
outsl
adc
in
push
and
push
cld
repz
lods
jb
and
in
scas
ljmpw
and
rolb
mov
sbb
call
xor
call
xchg
inc
xchg
popa
jl
pop
arpl
jnp
int
lret
mov
sub
adc
jmp
pop
decb
push
mov
mov
fcomps
imul
mov
mulb
inc
int
movsl
les
popf
add
add
into
adc
dec
cmpsb
addl
gs
xchg
out
test
jge
fwait
mov
pusha
stos
call
jne
idivb
xor
mov
or
fisttps
inc
cmc
jp
xchg
daa
cwtl
lea
mov
std
insl
jo
loop
sub
cmp
ja
inc
pusha
lahf
push
cmp
cmp
fnstcw
jbe
rolb
and
aam
adc
or
xchg
pop
lock
sbb
sbb
call
adc
push
popa
pusha
jmp
fldt
xlat
pop
add
fs
cwtl
movsl
pop
sti
lods
addr16
mov
mov
mov
dec
dec
stos
idivl
fbld
stos
cmc
inc
xor
fists
out
mov
cmp
dec
cmp
insb
xchg
arpl
inc
fwait
pop
lods
jnp
add
xor
movsl
jo
and
adc
movl
jle
sbb
mov
lds
mov
jb
xchg
push
loope
idivl
int
mov
nop
sbb
xchg
fidivrs
cmc
sub
je
push
lret
sub
sbb
push
cld
mov
lea
mov
and
adc
arpl
fisttpll
or
stos
sub
adc
aad
mov
addr16
xor
pop
rcrb
gs
or
xor
and
leave
jnp
inc
in
test
lock
leave
aas
dec
lea
test
icebp
ja
xchg
into
outsb
push
leave
mov
and
in
lods
hlt
jae
aaa
add
sub
dec
sub
inc
js
in
jl
fcompl
or
enter
sbb
and
xchg
lahf
and
out
xlat
ja
ljmp
mov
test
shlb
jb
pop
lods
sub
dec
xor
ret
loope
mov
push
cli
jp
jmp
sarl
adc
push
xchg
jae
icebp
mov
sahf
inc
cmp
pop
push
mov
mov
push
adc
xchg
mov
sbb
scas
jne
fldt
dec
in
mov
xorl
iret
hlt
xchg
notl
mov
sub
xchg
sarl
insb
jge
push
outsb
filds
mov
xchg
cmp
pop
push
hlt
mov
mov
push
xchg
das
roll
cmp
repz
mov
aad
lds
daa
push
ds
adc
fnstcw
lods
pop
sub
xchg
outsb
and
shr
lods
jecxz
cld
mov
loope
sbb
cltd
dec
gs
stos
jns
repz
push
cli
push
push
jne
hlt
imul
out
push
and
xchg
repnz
add
push
sbb
gs
ljmp
jns
cmp
sbb
insl
jge
insb
stos
xor
mov
clc
mov
cmp
aad
outsb
sahf
push
imul
mov
cs
mov
int
popl
icebp
or
fnclex
mov
faddl
add
xchg
hlt
ljmp
fs
in
sub
in
and
sub
cmp
movsb
pop
lret
pop
cmp
push
daa
or
fldcw
out
jg
xchg
gs
fnstenv
stc
push
pop
xor
mov
xchg
xchg
jle
and
lods
lea
xchg
jge
cmp
scas
stos
push
aam
mov
ret
mov
lock
sbbl
out
pop
xchg
imul
repnz
stos
bound
out
das
enter
cltd
dec
lret
jo
js
movsl
pop
mov
xchg
inc
jg
mov
scas
negl
repnz
xor
cmp
adc
cwtl
lea
lcall
adc
mov
mov
sbb
jb
in
inc
push
xchg
inc
inc
push
dec
insb
fcmovnb
adc
add
jmp
pop
sub
add
cld
xchg
jb
cli
out
imul
pop
mov
mov
cmp
into
or
jmp
imul
xchg
rorl
pop
ss
dec
or
jecxz
notb
xorl
sub
sbb
xchg
sbb
bound
or
fdivrp
mov
sbb
dec
aad
aas
xchg
jae
xlat
js
fldl
push
mov
pop
sub
push
cmc
pop
mov
sub
ret
lds
je
jle
aaa
mov
push
and
xor
inc
bound
cmpsb
sub
mov
dec
sbb
aaa
aaa
outsl
lock
roll
rclb
sbb
lock
pop
in
and
gs
push
icebp
dec
jmp
pop
jnp
ret
iret
or
aaa
ror
inc
frstor
and
fs
insl
or
lcall
cmp
xor
insl
dec
inc
jge
inc
cmpsl
sbb
or
jbe
mov
call
inc
cmp
sbb
shlb
xorl
aas
sbb
outsl
nop
sbb
pop
aad
cld
push
movsl
add
loopne,pn
adc
push
leave
push
jae
push
push
push
pop
jmp
xor
mov
adc
clc
pop
pop
xlat
in
fwait
or
test
scas
mov
push
and
outsb
jle
imul
test
pop
int
mov
pop
add
ret
jae
jp
cmp
ret
add
sub
iret
fimull
andl
cmp
mov
fiaddl
call
pop
mov
xor
push
call
inc
mov
push
push
cmp
sbb
mov
push
mov
inc
and
sbb
or
jo
and
ficomps
enter
mov
dec
ror
cmpb
sbb
popf
outsb
out
daa
sbbb
les
inc
xchg
inc
adc
push
hlt
xor
std
or
roll
sub
addr16
add
push
lahf
adc
imul
test
xchg
cmp
dec
mov
call
loop
dec
xchg
mov
hlt
cmc
lret
out
icebp
ret
cmpsl
dec
mov
clc
repnz
mov
cmp
xor
inc
fsubrs
imull
xorl
ja
loope
roll
mov
mov
jbe
addr16
aad
adc
dec
ds
pop
push
inc
dec
mov
sbb
jno
in
loope
ds
cmpsl
sub
add
push
xor
push
das
icebp
nop
inc
mov
push
jns
into
fsubs
or
inc
mulb
add
sbb
aaa
adc
inc
dec
ja
jle
mov
pop
mov
or
push
fs
xchg
inc
mov
popf
jne,pn
jne
loopne
in
std
pop
lods
lock
shll
sub
das
cmp
mov
cmp
inc
fimuls
rcll
inc
int3
movsl
cmpsl
xor
movsb
aad
mov
mov
dec
out
mov
and
cmpsl
sbb
lcall
jg
dec
jmp
pop
mov
push
mov
jle
inc
xor
adc
xchg
in
adc
sbb
lret
aad
pop
mov
fdivrs
jmp
stc
xchg
sub
ss
jb
in
mov
or
shlb
add
mov
fstpl
sbb
sbb
out
loop
dec
leave
loop
bound
insl
push
bound
shrb
mov
push
pop
aam
push
adc
jnp
pop
rorb
mov
movsl
inc
add
loope
out
lea
mov
imul
jo
add
repnz
stc
pop
mov
adc
gs
int
das
add
fwait
pusha
mov
pop
or
js
pop
insl
inc
or
dec
cmpsb
xchg
clc
pop
insb
add
popf
les
mov
bound
adc
in
cmp
stos
outsb
cmc
in
push
std
xor
cmp
shlb
aas
int3
xchg
adc
cld
inc
outsb
push
jg
xchg
pop
add
add
sub
ja
mov
popa
sbb
mov
imul
fdivs
adc
insl
pop
out
aad
in
and
in
gs
pop
xor
xor
lods
jmp
test
add
hlt
or
xchg
add
mov
xchg
push
xchg
out
and
pop
add
pop
xchg
sarl
sbb
sbb
mov
je
outsb
mov
imul
or
icebp
test
or
loop
hlt
mov
outsl
sbb
mov
mov
scas
dec
jle
in
cmc
dec
cltd
jnp
xorb
adc
pushf
xchg
add
sub
sbb
cmpsl
sbb
fdivl
xchg
and
int
jb
das
jne
or
add
repz
add
push
test
adc
cmpsl
and
dec
sbb
mov
pop
inc
pop
mov
mull
iret
sbb
mov
inc
stc
and
push
push
mull
out
and
cltd
pop
in
jb
pop
dec
pop
shl
lods
sub
mov
mov
push
stos
lret
lret
sbb
mov
insl
inc
adc
mov
ss
vpblendd
test
lahf
sbb
test
les
pusha
jbe
hlt
stc
insb
cmp
movsb
add
or
shrl
popa
jg
adc
out
div
xorb
fimull
xor
out
popa
stc
dec
call
push
incb
cmp
adcl
mov
ret
mov
cmpb
pop
cmp
jg
mov
adcl
rclb
insb
add
inc
iret
loop
psraw
mov
push
mov
xor
push
fisubs
mov
mov
xchg
flds
jg
popf
sub
andl
sahf
stos
lock
mov
pop
sub
cli
jnp
push
sub
xor
sub
out
sub
popa
sub
je
je
inc
movsb
arpl
push
lahf
mov
popf
lock
dec
stc
mov
nop
outsl
fisubrl
lcall
xchg
xchg
shl
ja
outsb
mov
jo
icebp
sbb
xchg
and
adc
cmp
cs
icebp
out
cmp
repz
push
sahf
push
test
loope
stos
aam
adc
and
dec
fdivrs
out
xchg
push
stc
mov
mov
sbb
cmpsb
hlt
das
pop
sub
mov
mov
inc
push
xor
fwait
loop
xor
pop
pop
movl
pop
fiadds
xor
movsb
popf
or
push
inc
jns
sub
jp
dec
jge
negl
aad
in
idivl
fs
loop
pop
sbb
adc
das
das
mov
imul
daa
sarb
cwtl
fwait
xor
idivl
add
dec
movhps
jns
or
fmul
lock
push
push
push
shrl
leave
xlat
or
xor
or
mov
push
cmp
add
sbb
ljmp
insb
jno
pop
push
mov
loope
stc
scas
pushf
mov
fistpl
jmp
sub
fbstp
jne
je
mov
ret
gs
and
in
sarb
xor
inc
mov
call
jg
hlt
add
cmc
xor
mov
in
loop
push
and
fdivr
inc
push
imul
jno
js
push
mov
add
shlb
mov
or
sbb
aad
das
mov
lock
dec
in
in
scas
sub
sub
int
insl
iret
sbb
imul
stc
xor
mov
jecxz
mov
das
xchg
mov
out
and
push
stos
loope
ljmp
jae
jae
mov
ret
jae
cs
movsl
push
push
insl
push
cwtl
pushf
dec
sahf
in
adc
fadds
jo
rcrl
adc
or
push
rol
adc
pop
lret
cmp
int3
or
xchg
les
pop
lds
xchg
ret
cmpsb
jnp
mov
and
je
push
pushf
jo
ja
clc
sub
nop
pop
mov
stc
push
or
cwtl
mov
or
mov
icebp
lock
fwait
leave
push
xlat
adc
sub
or
add
cmp
repnz
lods
push
dec
rorb
pusha
add
jle
mov
aam
pop
xor
xchg
pop
inc
push
ljmp
mov
ret
mov
outsl
xchg
lret
mov
pop
fisttpll
rolb
cmp
andb
push
outsb
jo
mov
mov
dec
iret
jmp
pop
mov
cs
or
lret
mov
pop
fadds
aas
popa
mov
leave
jb
stos
jmp
sub
pushw
mov
jne
adc
insb
test
adc
les
mov
movsb
pushf
jnp
and
aaa
mov
call
ljmp
mov
push
mov
sbb
lret
xor
cmpsl
mov
push
jno
xor
cli
pusha
aam
cmp
loop
xchg
in
mov
and
cli
mov
mov
jp
mov
in
push
cmpsl
xchg
push
mov
rcll
cmpsl
imul
jo
imul
sahf
inc
xor
adc
dec
les
arpl
inc
and
insb
arpl
mov
push
cmp
cmp
aad
gs
and
xor
pusha
pop
bsr
xchg
call
shl
xor
fiaddl
sbb
inc
push
cs
mov
imulb
daa
adc
push
cmpb
inc
mov
pusha
mov
js
xor
mov
mov
call
lds
dec
aaa
call
mov
or
std
loopne
jl
mov
nop
dec
nop
fcoms
movsb
mov
mov
sbb
ret
stc
sbb
push
or
arpl
mov
mov
pop
dec
push
jae
adc
push
ja
pop
loopne
imul
inc
push
add
iret
fildl
nop
add
std
pop
pushl
popf
bswap
and
ds
test
sahf
mov
mov
stos
lret
push
ret
sti
xchg
sbb
pop
pop
ret
mov
lods
adc
outsb
repz
scas
mov
mov
push
jns
arpl
daa
mov
hlt
xor
mov
fildll
adc
sahf
fs
add
pop
cmp
leave
push
ds
loopne
jns
mov
aad
sub
cmp
or
roll
pop
push
pop
orl
cmc
movsl
xchg
daa
adc
jno
dec
push
adc
scas
cmp
cmpsl
push
cmp
jnp
popw
popl
hlt
pop
ja
fidivrs
loope
add
mov
inc
dec
cmpsl
xchg
cli
sbb
xchg
mov
inc
sti
add
shrl
fsubrl
cli
leave
sbb
jo
out
sbb
mov
mov
repnz
add
mov
mov
jns
fistpl
rcrb
test
fcmovne
jo
adcl
jmp
adc
sbb
adc
adc
mov
push
jp
add
aas
fnstcw
fildll
les
inc
push
mov
pusha
popf
stc
das
stc
add
ffree
and
dec
test
mov
std
or
test
cmpsb
pop
pop
cmpl
inc
lock
inc
fists
jno
in
adc
jl
ja
inc
inc
test
aad
cmpsl
in
popf
xchg
inc
stos
aaa
cltd
mov
outsl
push
jp
out
js
into
push
roll
in
inc
stos
daa
cmp
pusha
cld
cwtl
loop
repnz
clc
dec
imul
inc
pop
and
add
lea
jns
out
cmp
sub
pop
inc
jne
pop
dec
cltd
and
pop
les
xor
fisubl
and
adc
popw
rcrb
lahf
loop
cmp
mov
xor
sbb
out
data16
fisubs
decb
int3
cld
or
add
jae
mov
insl
push
add
sub
push
pop
add
js
popf
dec
sub
sub
iretw
out
inc
pop
test
inc
imul
dec
xchg
les
das
ds
divb
stc
jo
mov
das
push
add
adc
outsl
insb
aam
fwait
sahf
out
lods
fucomp
test
mov
pop
loop
cmp
pop
jge
icebp
and
imul
dec
addr16
fnstsw
mov
mov
idivl
in
jns
andl
dec
xor
xchg
aaa
jb
jmp
movsb
aam
in
out
jae
cmp
mov
jp
dec
adc
sub
lcall
xchg
dec
test
mov
add
or
adc
sarb
dec
or
sub
adc
mov
sub
add
xchg
add
add
out
dec
outsb
and
aaa
jecxz
inc
lds
pop
es
or
add
out
aam
xchg
incb
rcrb
adc
inc
es
pusha
push
daa
fisubl
adc
sbb
pop
inc
add
or
out
xchg
daa
inc
or
das
adc
lods
cmp
sbb
xchg
pop
sub
scas
adcb
mov
lea
pop
dec
sbb
ja
inc
nop
pop
sahf
aaa
inc
add
and
dec
xchg
arpl
or
push
and
inc
jl
and
divl
out
shrb
stc
clc
mov
hlt
shrl
inc
push
dec
add
test
out
or
jge
sub
call
xchg
pop
rcl
inc
out
mov
int3
and
pop
in
or
dec
ds
mov
cld
jbe
jecxz
xchg
xchg
mov
and
pop
lock
mov
jecxz
inc
gs
popa
xchg
dec
add
push
dec
adc
outsb
repz
shlb
into
ret
pop
data16
imul
push
cmp
xchg
insl
push
jp
insl
les
adc
jbe
shll
xchg
mov
sbb
mov
cmpsl
outsb
test
iret
ja
inc
insl
push
repnz
pop
cmpsl
std
out
insl
imul
imull
not
mov
pop
pop
mov
mov
pop
data16
dec
movsb
mov
cmp
fnsave
jge
mov
xchg
jbe
jp
cmp
test
fsubs
xor
pop
imul
fbstp
loop
testl
data16
lahf
sbbb
lcall
adc
das
xor
push
sbb
inc
cmc
xchg
add
cld
or
sahf
aaa
insl
hlt
or
aad
lret
sbb
push
cmp
inc
sbb
and
ljmp
lds
outsb
gs
push
push
inc
cmp
push
call
dec
mov
jmp
mov
dec
inc
fistpl
xchg
daa
pop
movsb
test
hlt
lds
out
cmpsb
and
sub
mov
and
cmp
stos
call
adc
xlat
mov
sbb
cmp
mov
add
sbb
sbb
in
inc
jecxz
je
rol
push
push
add
cld
jl
stos
adc
sub
mov
mov
rcrb
jmp
stos
ja
inc
jo
mov
mov
or
xchg
setp
dec
push
loopne
sbb
xchg
in
mov
pop
dec
movsl
in
adc
pop
add
inc
je
mov
mov
fldl
push
sti
push
ss
mov
cli
sbb
std
loop
xchg
hlt
stos
and
cs
pop
mov
test
or
xor
xor
dec
sbb
dec
or
lock
mov
popa
mov
icebp
stos
or
push
sub
xchg
cmc
adc
and
or
xchg
test
aaa
rclb
arpl
dec
fwait
push
call
mov
jl
pop
dec
cmp
fsubr
repnz
push
call
call
xor
jl
and
jbe
movsb
sbb
cmp
mov
lcall
jo
add
imul
fimuls
aas
into
inc
vmulps
or
cmp
addb
inc
dec
fs
outsl
in
and
sub
div
fsubrl
pop
insl
fcompl
or
sbbb
inc
mov
lahf
sti
pop
push
shll
popf
mov
inc
mov
out
lods
mov
imul
mov
dec
enter
icebp
sub
push
or
push
fstpl
adc
in
push
xchg
mov
scas
xor
pop
mov
insl
jo
xor
adc
mov
int3
or
mov
mov
jb
jns
es
lea
sbb
add
mov
mov
xchg
popl
mov
push
push
bound
fs
or
mov
pop
fsubs
loope
mov
stos
sbb
dec
inc
out
xor
adc
mov
test
ja
sbb
add
push
pusha
rolb
cmp
lock
call
pop
push
mov
call
lods
xchg
mov
mov
add
mov
dec
bound
add
int
outsl
int3
mov
dec
sub
fiaddl
push
imul
sub
adc
mov
jno
add
std
or
gs
dec
stos
xchg
stos
outsb
xor
or
das
fbld
and
sub
lea
push
xchg
outsb
dec
adc
mov
movsb
popa
cmpsl
jge
cmpsb
jl
add
mov
movsl
mov
mov
mov
rorl
outsl
adc
and
jns
or
xor
jae
mov
aaa
fst
inc
add
iret
jmp
fbld
inc
adc
and
test
hlt
dec
loop
pushf
mov
dec
lret
pusha
jno
jo
mov
or
sbb
into
pop
add
shll
es
push
gs
mov
mov
mov
or
shlb
test
hlt
stos
mov
mov
mov
cwtl
dec
cmc
ret
sbb
adc
les
and
cmpl
fneni(8087
stos
cwtl
xor
cmpsb
sub
or
jae
xchg
mov
jb
stc
jb
fcompl
pavgb
xchg
lea
fdivrs
repnz
out
cmpsb
nop
fdivrs
xor
fldcw
icebp
movntps
mov
fnstenv
sbb
lret
shrb
ljmp
fyl2xp1
adc
lea
add
scas
dec
pop
pop
arpl
pushf
pop
sbbl
mov
push
xchg
or
fdivrs
sbb
xchg
sbb
sbb
inc
fistl
out
loope
popa
push
cmp
jbe
es
mov
inc
and
push
leave
sub
cmp
or
jge
aad
shlb
sub
lcall
pop
xchg
clc
jae
repz
rcrb
sub
add
dec
arpl
mov
adc
mov
lret
or
lds
cli
gs
push
into
mov
mov
out
jne
adc
fwait
test
mov
je
insb
dec
bound
dec
pop
mov
repz
cmp
aam
cli
or
jnp
xchg
incl
test
insl
fildll
push
pop
jmp
es
push
cwtl
sub
sub
ffreep
cmpsl
push
out
cmp
fsubrl
dec
cs
and
imull
jge
xor
decl
mov
or
push
push
movsl
mov
in
movsl
mov
xchg
jbe
sub
jnp
lds
jle
cld
popf
fsubp
mov
sahf
jg
sub
push
cmp
xor
orl
ds
mov
jo
mov
je
xchg
mov
push
mov
rcrb
lds
mov
push
dec
mov
scas
xchg
adc
xchg
pop
jb
add
add
sti
dec
dec
mov
inc
and
loope
in
add
enter
stos
iret
cmp
enter
pop
mov
add
mov
mov
test
popf
mov
sub
imul
test
pop
faddl
cmc
adc
cmp
add
add
mov
push
mulb
aas
dec
lcall
sub
cmp
jp
imul
and
jp
enter
cmp
dec
bound
jl
aad
mov
xlat
jnp
daa
comiss
in
iret
insb
and
repnz
add
lock
cmp
sbb
scas
jae
push
xchg
scas
or
xor
mov
shll
mov
mov
gs
es
mov
cmpb
and
pusha
testl
xlat
mov
imul
leave
inc
xchg
inc
add
jno
fldenv
in
imul
daa
loopne
sbb
mov
mov
mov
xor
aas
push
sub
xor
sbb
and
jne
cltd
jg
pop
jg
jl
loopne
ret
xchg
dec
rclb
in
pop
call
scas
pop
cmpsl
mov
cltd
leave
add
xchg
sbb
push
mov
pop
stc
aas
dec
and
xorb
sub
sti
pop
pop
pushf
dec
inc
stos
pop
push
add
and
push
mov
mov
loopne
rcr
push
push
mov
movsl
push
pop
cwtl
lods
and
popa
ret
mov
scas
mov
xor
mov
dec
shll
push
lret
sub
inc
ret
jp
mov
les
es
inc
dec
in
mov
pusha
addr16
sti
add
pop
mov
xchg
gs
sub
or
fsubl
inc
in
mov
aad
mov
mov
clc
lock
pop
mov
mov
lds
mov
dec
push
sub
push
jle
push
cmp
leave
mov
mov
push
movsb
sub
jmp
lods
das
loop
rcl
mov
test
sub
pop
jle
mov
jo
fidivrl
pop
inc
jo
dec
sbb
mov
inc
push
in
pop
divl
inc
enter
adc
pushf
sbb
xor
pop
in
sub
idivb
mov
pop
aam
test
mov
jb
mov
mov
iret
inc
lods
addr16
mov
inc
outsb
fistpll
std
xchg
sbb
gs
mov
and
hlt
ja
push
push
daa
add
mov
sti
andb
adc
xchg
stos
arpl
les
jle
dec
adc
ss
cli
adc
push
fbstp
mov
mov
jecxz
push
pop
ljmp
test
sub
ljmp
mov
lock
jbe
fnstcw
lods
mov
cld
popf
xor
aad
jl
jge
subl
into
fwait
mov
xchg
fildl
mov
out
pop
daa
xchg
push
icebp
jmp
test
lcall
cmpsl
dec
cltd
stos
push
inc
jecxz
in
bound
decb
jmp
and
idiv
mov
inc
push
cmp
divb
mov
les
mov
pop
lock
cs
xorl
mov
sbb
and
fiaddl
je
imul
les
ret
adc
cmp
aam
or
into
daa
cwtl
test
pushf
xchg
adc
fsubl
sbb
or
loop
inc
mov
test
mov
xor
stc
ret
je
push
push
bswap
repz
das
std
inc
pushf
out
xorl
add
arpl
push
popl
jge
dec
sub
addr16
adc
leave
in
rorl
xor
pop
cmp
cmp
aas
pop
lret
outsl
lret
mov
xor
mov
arpl
or
xor
lods
pop
pop
mov
gs
adc
push
xchg
pop
jmp
jno
out
add
sub
adc
and
dec
iret
mov
movsl
inc
add
lea
mov
lds
pop
lcall
xchg
call
lods
or
enter
adc
stc
pop
add
ret
push
mov
scas
popa
and
mov
movsl
ret
sbb
and
xchg
mov
lahf
inc
xor
sbb
and
jns
xchg
cmpsb
xchg
lods
adc
mov
retw
pop
int
dec
dec
adc
ret
mov
inc
fs
test
xor
xor
ret
xor
mov
mov
addr16
xchg
test
inc
xchg
sbb
xor
jb
xchg
xor
repnz
add
mov
pop
inc
imul
pop
lret
xor
add
and
jb
pop
xor
jno
mov
rcll
push
cmp
xchg
movl
mov
roll
or
das
rorb
mov
cmp
enter
jb
pop
jl
and
fmuls
cmc
shrb
cmpsl
add
hlt
int3
add
mov
js
or
mov
mov
lcall
pop
inc
pop
jecxz
jne
aas
or
push
xchg
push
lahf
iret
adc
mov
movsb
mov
ja
pop
jp
jle
rcr
lds
jns
fs
ret
call
or
loop
inc
adc
pop
out
fwait
lret
jg
je
repnz
push
mov
push
dec
push
or
dec
sub
xchg
and
inc
xchg
fs
lock
insb
fneni(8087
rorb
mov
iret
push
sub
imul
add
sbb
lea
adc
xchg
in
insl
cmp
rcrl
xor
mov
lods
icebp
push
insb
and
movsl
xor
out
mov
mov
mov
ss
arpl
adc
lret
mov
and
jno
pmaddwd
cli
push
insb
pop
loop
mov
lods
call
jge
pop
or
mov
lahf
fld
mov
dec
mov
xchg
shrl
ret
dec
jb
pushf
sbb
insl
mov
xchg
les
sbb
cld
sbb
xlat
jg
repnz
mov
mov
xchg
mov
test
mov
push
push
inc
in
adc
inc
inc
fs
clc
inc
rcll
push
out
jge
adc
rol
mov
pop
imul
or
xchg
mov
in
xchg
dec
rorl
lods
lds
mov
sahf
ljmp
scas
outsl
test
push
add
jle
jl
xchg
test
das
xchg
push
insl
mov
in
mov
pop
jmp
decl
dec
sarb
stos
outsb
fstl
int3
data16
ret
repnz
add
shrl
xchg
ss
push
ret
jl
pushw
add
push
cli
mov
lds
es
jp
push
and
mov
scas
sbb
insb
mov
cwtl
xchg
sbb
lds
pop
stos
pop
gs
daa
pop
out
lret
xchg
je
xchg
jns
call
iret
bound
mov
cli
pop
jp
pop
push
xchg
enter
lea
aad
cmp
jl
mov
inc
jns
hlt
ficoms
pop
adc
xchg
cld
adc
arpl
lret
jmp
std
and
movb
es
ja
dec
std
and
emms
into
lods
push
shlb
mov
shrl
or
xor
or
mov
bound
insb
int
test
es
arpl
push
cmp
push
cmp
push
dec
inc
add
aas
and
nop
adc
insl
sbb
jne
adc
das
xchg
pop
imul
aaa
mov
xchg
pop
andb
jns
les
rcrl
fcoms
sbb
sbb
leave
lock
out
fcoml
aad
stos
repnz
movb
lods
cmp
pop
jge
jl
hlt
out
sub
fisubrs
das
pop
inc
jp
xchg
mov
push
or
jb
iret
pop
sbb
jne
rcl
int
testb
mov
pop
sub
sti
adc
cwtl
mov
xlat
inc
jbe
and
pusha
cmp
fiadds
loopne
xchg
dec
push
lds
int
enter
test
jns
xor
lahf
jo
sub
push
aas
movsb
lds
stos
xchg
cmp
xchg
push
xchg
mov
push
movsl
push
xorb
push
push
and
clc
mull
mov
lcall
ljmp
test
inc
add
out
lock
jo
sub
jns
gs
aaa
aad
push
iret
mov
add
inc
sarl
mov
pop
push
js
ret
sub
fistl
ss
fldl2e
xor
and
adc
inc
mov
cmp
mov
in
shll
dec
add
fstl
mov
xchg
jecxz
jne
andnps
invd
in
mov
test
enter
mov
daa
rcr
mov
mov
fcoms
mov
test
inc
jb
lret
movsb
popa
shll
dec
in
or
inc
lods
fucom
xor
jl
mov
jae
mov
lods
fisubl
sbb
add
xor
add
or
and
mov
mov
cmp
stos
cwtl
inc
add
dec
mov
or
mov
out
mov
incb
or
lret
or
pop
sbb
lahf
mov
repnz
jl
outsb
rol
and
mov
mov
inc
xchg
in
mov
loop
dec
jle,pt
scas
xchg
xor
movsl
mov
scas
leave
pop
add
lret
aas
in
mov
lods
pop
fs
sti
notl
test
fldcw
ljmp
jns
outsb
push
in
mov
fcom
out
and
pop
adc
mov
mov
cmp
sbb
shlb
pushf
dec
pop
daa
sahf
dec
jmp
and
stos
or
sub
and
inc
insl
cmpsl
xchg
cltd
out
daa
loopne
xchg
test
adc
pop
sbb
test
clc
cmp
mov
dec
xchg
push
movsl
cmovb
imul
iret
xchg
bound
mov
xlat
insl
add
mov
push
mov
mov
pop
call
or
or
sub
xor
cmp
setnp
xor
mov
jbe
push
hlt
fildll
lret
clc
pop
pop
xlat
sbb
testb
mov
jno
repnz
repz
jns
push
shufps
pop
incb
dec
das
jo
pusha
int
adc
xchg
push
and
ja
cmpsb
js
mov
adc
es
sbb
js
xchg
nop
mov
shrb
cli
lret
mov
sahf
loope
sbb
dec
pushf
pop
mov
mov
filds
decl
mov
mov
xchg
add
xchg
ret
stos
mov
lret
and
das
sbb
add
clc
fs
bound
mov
push
jbe
push
rorl
lcall
sahf
mov
stc
xchg
or
sbb
stc
test
dec
mov
repz
fcoml
jns
jns
inc
and
push
pop
mov
or
inc
js
mov
das
iret
mov
into
cmp
jmp
xchg
or
test
mov
lret
push
add
or
lret
loopne
loope
ljmp
scas
pushw
sbb
rcll
inc
clc
imul
cmp
and
sub
iret
mov
cwtl
cmp
jecxz,pn
cmp
pop
test
jae
aam
in
nop
push
testb
imul
adc
pusha
cmp
fs
sub
dec
addr16
jb
and
jno
lods
pop
jmp
mov
add
jno
and
pop
add
seta
pop
jge
das
lock
mov
sub
xor
into
push
int
dec
mov
push
hlt
lret
cli
cmp
and
xor
insl
in
cmp
cmp
mov
inc
sub
mov
push
pop
mov
sti
lods
add
dec
mov
stos
sarb
add
push
sbb
or
stc
jl
fsts
xlat
push
adc
cmp
jge
cs
xchg
xor
int
xor
xlat
mov
mov
cltd
cld
xor
add
scas
jle
pusha
adcb
rorb
dec
sub
pushf
cmp
jmp
dec
dec
dec
lds
add
xchg
cltd
mov
iretw
inc
push
or
jle
fs
inc
ds
sbb
into
jp
ja
jecxz
mov
hlt
imul
push
sbb
xchg
add
inc
andl
in
mov
lods
mov
push
add
xchg
jg
je
or
cmp
cld
pop
jno
jne
pop
aas
outsb
sbb
cmpsb
ds
mov
xchg
mov
hlt
in
jne
pushf
jl
das
in
adc
add
pushf
sbb
jo
or
and
cmp
scas
call
inc
addr16
sub
nop
test
test
and
xor
js
je
ljmp
dec
rol
push
aad
out
loope
dec
push
fstpl
pusha
jmp
repz
push
leave
cltd
mov
stos
mov
mov
cltd
imul
jmp
cmp
fdivr
mulb
add
lds
cmp
add
push
mov
rolb
and
sbb
iret
sbb
sub
incb
xor
mov
or
dec
inc
xor
dec
or
negl
lret
jle
inc
or
shlb
pop
mov
adc
sub
daa
repz
inc
jp
rorb
push
mov
loop
fnsave
xchg
pop
pop
lahf
or
jno
ljmp
jg
call
pop
mov
daa
jb
mov
int3
fisttps
add
push
cmc
sbb
jle
pusha
arpl
or
popw
imul
dec
lock
jno
bound
les
mov
es
cmc
dec
fildl
jnp
testl
fs
jns
xlat
bound
pushf
dec
cs
xor
add
in
cli
ret
mov
ret
andl
mov
xchg
rclb
pop
pop
pop
fwait
sbb
and
sbb
jne
bound
jae
adc
ss
adc
jecxz
fdivrp
ret
jno
cmpsb
arpl
xchg
sbb
hlt
cmpsb
outsb
mov
pop
sbb
xchg
mov
stos
jp
sub
xor
add
in
dec
imul
shl
adc
arpl
fldcw
cmp
mov
mov
add
pop
outsb
inc
stos
pop
pop
mov
movsb
push
lret
or
sti
popf
inc
dec
dec
data16
cld
testl
mov
push
push
inc
movsb
cmc
push
xchg
aas
aaa
mov
pop
push
add
jno
orb
add
and
fldcw
push
xor
bound
and
cltd
sub
add
mov
mov
dec
jne
xor
and
dec
outsl
clc
arpl
push
lods
out
call
add
dec
and
pop
cld
pop
push
sub
inc
push
out
sub
xchg
cmc
mov
mov
mov
mov
pusha
ja
rcl
outsl
out
xlat
hlt
repz
xor
sub
lcall
mov
mov
adc
pop
sbb
stos
jmp
into
outsb
pop
or
mov
sarb
sub
pop
sbb
dec
jl
das
or
xor
xchg
shr
adc
arpl
jne
imul
add
or
scas
adc
and
and
call
cmc
push
xchg
jp
inc
int3
xchg
das
mov
or
ja
add
push
or
jmp
push
adc
in
adc
inc
aad
shlb
lcall
sbb
dec
adc
fwait
ror
inc
cmp
cli
fbstp
adcl
and
test
in
shlb
out
push
mov
xor
aaa
pop
xlat
fwait
clc
inc
sbb
subl
dec
xchg
xor
mov
push
sub
xchg
cmp
mov
inc
addr16
and
je
mov
fwait
out
les
std
in
mov
jle
adc
movsl
outsl
inc
leave
xchg
dec
pop
bound
mov
push
orb
test
repz
roll
dec
pop
inc
je
stos
aad
mov
aad
js
mov
pushf
ret
clc
add
outsl
or
mov
dec
xchg
mov
fistps
clc
inc
adc
movsb
out
icebp
jo
fiadds
cld
jl
subb
jecxz
xchg
sbb
dec
jg
ljmp
mov
clc
das
jmp
and
jnp
inc
int3
dec
cmp
rorb
shll
loope
outsb
out
cmp
pop
mov
jnp
and
into
lods
cltd
push
sbb
rorb
adc
inc
imul
shll
sub
xchg
sub
or
or
icebp
mov
jle
out
push
fcmovnb
lods
icebp
push
lock
mov
push
pop
push
mov
xchg
in
jb
adc
cmpsl
into
mov
mov
jns
movsb
mov
fiaddl
sbb
mov
fdivl
push
popf
and
mov
jns
mull
mov
les
pop
cmpb
push
bound
insb
popa
dec
mov
cmp
icebp
test
mov
insl
popf
mov
dec
cmp
sub
out
es
test
cmpb
or
repnz
cs
fwait
sub
cmpl
jp
xchg
roll
fxch
mov
jne
lret
icebp
jl
lods
cmc
jl
jecxz
loopne
push
cmp
std
mov
mov
ret
add
fsubl
lods
add
push
cmpsb
add
movsl
mov
pop
mov
test
mov
sti
cmc
dec
dec
inc
push
xor
in
insb
mov
andb
dec
inc
addr16
rolb
in
inc
xor
jge
call
adc
mov
push
adc
enter
in
push
mov
sbb
dec
adc
inc
sbb
lret
in
inc
dec
aaa
adc
clc
xor
arpl
cmp
ror
xchg
outsb
xchg
es
gs
movsb
jbe
lds
insl
sub
jae
mov
pop
lcall
xchg
cmp
outsl
cmp
stc
inc
aaa
dec
iret
mov
push
lcall
or
pop
clc
mov
call
adc
xchg
sub
cltd
or
sti
xchg
jl
pop
push
inc
sub
push
scas
and
leave
xchg
sbb
mov
int
test
sahf
inc
mov
sub
mov
les
and
imul
push
pop
dec
xchg
or
push
leave
inc
fdivrl
jp
mov
mov
cld
sti
insb
test
clc
fists
out
inc
popa
sbb
ret
jnp
js
xchg
push
lahf
clc
adc
test
movsb
pop
mulb
ds
mov
fs
push
add
andl
repnz
pushf
nop
cmpsl
arpl
jmp
sub
and
cltd
xor
and
jbe
test
push
cmp
lock
xchg
add
jnp
mov
sub
out
icebp
sbb
out
stos
loop
test
lock
push
scas
aaa
jecxz
stos
insb
push
sub
or
inc
iret
xchg
pop
popf
add
dec
fisttps
sbb
inc
push
cli
jno
test
push
inc
aaa
jb
add
in
cmpsb
mov
cli
push
adc
adc
imul
dec
xlat
inc
cmp
mov
and
rclb
or
in
js
sub
ret
int
cmc
pop
sti
cli
cltd
mov
jecxz
movsb
loop
rolb
xchg
mov
inc
inc
jg
sahf
dec
cmp
daa
pop
and
divl
fcmovbe
sbb
shll
call
icebp
mov
adcl
fdivr
rclb
mov
jbe
dec
dec
jnp
pop
jecxz
sub
pop
aaa
icebp
sbb
fcomi
push
dec
mov
ficompl
jnp
icebp
stos
into
aaa
xor
test
rcrb
mov
inc
jmp
insl
dec
xor
or
xchg
mov
dec
mov
mov
call
mov
std
push
daa
fimull
test
or
inc
clc
icebp
jmp
adc
frstor
out
imul
and
xor
jo
imul
xchg
mov
stos
mov
mov
xor
mov
mov
addr16
fstl
jle
aas
out
rolb
fs
jo
iret
fstps
sbb
fadds
add
hlt
cltd
xor
adc
sbb
mov
jle
test
adc
lods
mov
push
decb
ret
sbb
xchg
stos
and
push
lds
sub
adc
pop
aam
xchg
mov
imul
call
cmpl
mov
sub
sbb
and
push
cmp
imul
ret
push
je
sub
pop
test
dec
cmp
mov
adc
pop
mov
cld
mov
pop
sub
mov
jbe
insl
idivl
adc
and
jbe
mov
mov
jecxz
cwtl
divw
in
cmp
rorl
add
nop
mov
insl
movsl
aad
lods
sub
and
fsts
push
xchg
into
mov
and
or
sbb
mov
adc
subl
or
fnstcw
mov
aad
int
and
jb
push
fimuls
xchg
or
xor
or
cmpsl
lret
xchg
xor
xchg
pusha
lret
or
sti
mov
add
push
popf
pop
jb
popa
aaa
dec
popa
sub
sbb
cli
sub
js
stos
scas
scas
das
stos
sbb
mov
and
sti
mov
sub
add
cmpsl
and
loop
inc
scas
push
ja
pop
xor
sub
push
in
dec
jp
or
ja
cmp
enter
leave
mov
pop
ds
data16
lahf
sahf
clc
jl
and
dec
scas
lock
inc
movsb
mov
shl
cmp
inc
out
js
cmp
xchg
jbe
push
xchg
mov
seto
and
cwtl
xor
sub
sbb
xchg
add
cmp
sbb
and
jl
mov
rcrl
adc
dec
dec
popf
cmp
jle
cmp
test
mov
and
and
sti
fistpll
sbb
xlat
out
and
sbb
into
add
pop
dec
jne
test
sbb
mov
adc
mov
add
lcall
mov
leave
sbb
rcrl
rcl
aad
push
xchg
orl
pop
cmp
lods
lock
movsb
pop
ss
cmpsl
cs
pop
dec
shrl
out
push
popf
add
aam
adc
scas
mov
outsl
movsl
adcl
repz
pop
mov
leave
loop
lock
mov
and
rclb
aad
stc
into
inc
sub
dec
push
cltd
add
sarl
pop
jno
and
pop
es
mov
js
scas
cli
push
loop
sbb
jae
arpl
clc
ret
mov
xor
in
outsl
es
or
daa
push
scas
pop
cs
sbb
jo
popf
cmp
add
ror
mov
loop
add
and
cmp
test
or
and
sub
ret
nop
pop
mov
int
jns
xlat
xchg
test
fwait
mov
cld
push
push
jne
xchg
ret
rorb
inc
daa
out
test
jge
dec
mov
fnstenv
mov
in
and
pop
dec
jae
mov
aas
sbb
xor
sbb
mov
jo
inc
or
pop
fsubr
jle
lds
and
in
loope
mov
mov
sub
push
adc
daa
rolb
ds
push
pop
aam
lret
stos
mov
insb
jg
push
fchs
xor
and
je
lret
into
or
in
imul
clc
aas
lock
mov
dec
push
fists
fstps
mov
add
das
add
mov
incb
cltd
or
mov
ja
push
dec
pop
push
movsl
push
dec
fwait
xor
icebp
test
iret
movsl
loope
addb
mov
insb
ljmp
push
outsb
ja
cmp
sub
jmp
dec
aas
loopne
xorb
sub
xor
lea
cmp
mov
std
loope
mov
xor
push
ja
dec
jns
fistps
lods
push
pop
adc
popa
push
xor
fwait
icebp
mov
xchg
mov
rcr
lcall
push
shll
cmp
add
scas
ljmp
stc
fisubrs
fcomps
jmp
fcompl
insl
sti
scas
xor
sahf
stc
dec
sbb
jae
xor
cli
sbb
lods
adc
push
inc
jmp
inc
inc
or
and
js
js
and
insl
jg
or
jne
pushf
mov
pop
loope
mov
cmp
fdivr
jg
in
sbb
dec
sbb
mov
xchg
movb
and
fidivrs
sti
xchg
ror
xor
mov
sbb
insb
push
out
xor
ret
mov
test
sbbl
fs
xchg
jbe
xor
cmp
clc
pop
movsl
scas
jmp
lds
mov
out
mov
fcmovnb
outsl
mov
aas
and
push
add
xor
mov
push
loop
add
jno
mov
xor
inc
cmp
lcall
outsl
ret
cmovns
ror
out
int3
pushf
inc
xlat
pop
dec
add
cs
insb
mov
aas
jb
inc
cmovp
enter
fnstenv
aaa
inc
jbe
push
ljmp
subb
xchg
push
mov
nop
lea
sbb
outsb
sti
mov
pop
pop
leave
enter
into
lret
push
shll
dec
outsl
repz
rsqrtps
xor
int3
cmp
lds
sti
int
lret
cmc
adc
inc
hlt
xlat
mov
dec
dec
cmpsb
gs
dec
adc
sub
not
out
push
jge
lock
stos
or
cmp
mov
mov
pop
jne
fwait
arpl
push
lods
mov
cmpsl
mov
adc
adcb
fcomps
insl
and
mov
dec
aaa
pop
add
pop
push
ret
addr16
sbb
arpl
scas
popf
sbb
cmc
push
sbb
aam
xor
in
inc
jbe
loope
dec
outsl
sub
int3
inc
jle
mov
xchg
testb
cmp
lret
aam
adc
mov
sbb
jmp
add
je
push
and
inc
sbb
pop
adc
enter
sbb
or
mov
mov
repz
push
dec
push
mov
inc
roll
shlb
pushf
push
add
and
in
int3
or
dec
jp
or
inc
cli
push
cmp
jg
out
sub
mov
shlb
sbb
push
push
mov
cwtl
or
fnsave
scas
out
sub
ficoml
aam
out
ret
fiadds
daa
popf
sub
mov
jle
adc
jmp
shlb
iret
adc
data16
cmp
out
inc
int
out
fildll
pop
mov
push
mov
fst
jle
and
mov
jmp
in
mov
fiaddl
je
mov
jns
outsb
fmuls
out
inc
sbb
sub
jmp
inc
adc
call
aad
out
jg
xchg
and
fwait
jp
call
nop
dec
adc
add
fstpl
or
cli
sbb
sbb
sbb
push
in
cmc
std
cwtl
xchg
scas
inc
cmpl
popa
pop
aam
stc
rcrl
xchg
sti
imul
sbb
in
int3
addb
mov
push
inc
test
js
ret
pop
movsl
outsb
sub
cmpsb
xchg
fdivp
rcrl
mov
push
mov
jmp
subl
push
jo
mov
jbe
dec
or
mov
out
xor
loop
and
mov
xorl
in
pop
pop
xor
pop
jle
push
adc
sub
data16
mov
stos
or
test
or
nopl
iret
jge
push
icebp
je
jecxz
stos
cmpsl
or
into
inc
imul
adc
push
cmpsl
lahf
xchg
and
shll
mov
jle
push
mov
stos
mov
data16
mov
jne
lahf
je
out
andl
imul
and
cs
aaa
addr16
jg
rorb
add
bound
testl
loope
lock
in
inc
movsl
je
xchg
add
out
xor
mov
pop
mov
or
cwtl
in
inc
adc
mov
jl
push
mov
push
add
mov
loopne
xchg
mov
sbb
inc
pop
movsb
xchg
dec
add
sub
xor
sbb
popa
push
pop
pause
arpl
inc
js
inc
nop
lods
hlt
mov
cmp
push
jle
push
or
pop
stos
sbb
popf
dec
jg
fsubrl
in
gs
mov
sub
popf
mov
aas
inc
in
sub
and
inc
and
add
pop
adc
shrb
inc
flds
pop
outsb
cmpsl
jno
sub
sub
sarb
add
mov
fsubr
daa
inc
push
push
mov
mov
sub
mov
xor
mov
xchg
mov
add
dec
and
add
or
xor
mov
enter
ljmp
sahf
cmp
pop
inc
loopne
shrb
sub
fs
shrl
or
and
scas
mov
mov
pop
cwtl
out
shlb
pop
mov
repnz
nop
mov
mov
xorl
cmp
fdivs
stos
mov
xor
out
pushf
push
loopne
lds
aas
shrl
lret
cmc
popa
mov
pop
pop
outsl
inc
neg
pop
sbb
push
lret
xchg
out
add
mov
test
sbb
and
pop
mov
xchg
mov
sarb
repz
pop
loop
repnz
filds
outsb
push
pop
adc
push
hlt
cltd
inc
lret
shrl
or
es
int
xor
outsl
mov
xchg
jae
loope
sbb
adc
add
add
lock
std
out
aad
mov
inc
cli
add
jo
jno
clc
xchg
pop
mov
lock
cmp
lcall
scas
into
pop
adc
and
xor
dec
ds
fidivrs
add
cmp
add
push
push
cmp
or
cmc
mov
inc
dec
mov
cmpsl
loopne
adcb
mov
or
loopne
int3
rolb
into
dec
movsl
hlt
fwait
mov
ret
sub
sbb
sbb
shrb
push
mov
in
sub
sub
call
or
ret
dec
lcall
pop
lcall
jmp
popa
jmp
sbb
test
fxch
jp
nop
inc
daa
fcompl
in
fs
or
shrl
cmp
jle
adc
popf
lock
popf
scas
dec
xchg
incl
xchg
insb
icebp
sub
pusha
cmp
popf
mov
movsb
lods
out
inc
adc
inc
pop
inc
adc
sar
xchg
or
rorl
stc
jne
jae
nop
mov
std
jnp
sub
xchg
mov
mov
jno
or
jp
lret
in
arpl
movsb
test
fucomi
and
mov
test
inc
push
mov
inc
jae
sbb
scas
add
push
jo
push
into
mov
dec
bound
add
or
les
ret
mov
subl
loopew
or
js
and
xchg
mov
shl
sbb
pusha
pop
scas
jnp
lea
ds
loop
adc
mov
xchg
lcall
pop
pop
sbb
dec
cmp
test
es
in
shrb
sbb
shrl
movsl
cmp
add
ret
mov
out
inc
jecxz
cmpsl
and
pop
add
rorb
cli
cmpsl
sahf
jb
popf
rcrl
fldenv
sahf
mov
xchg
push
imul
ficoml
and
int
mov
adcb
repnz
push
and
add
flds
sar
mov
cmp
sub
in
add
xchg
mov
es
sqrtps
jo
lret
fisubs
in
or
mov
les
enter
xor
ds
leave
inc
shll
push
sbb
ds
fs
xchg
icebp
xchg
fisubrs
ljmp
out
jp
sar
call
sub
insb
sub
pop
popf
jnp
xor
es
in
pushf
rcrl
push
xchg
out
leave
sbb
lea
nop
adc
clc
or
mov
push
dec
lret
insb
xchg
out
loop
or
inc
dec
push
rcrl
dec
ret
pop
pop
movsb
or
jl
sbb
clc
push
sub
cmp
add
dec
dec
int
jbe
mov
pop
and
jno
mov
mov
ss
add
outsl
std
and
loopne
xchg
add
mov
outsb
subl
dec
test
in
int
push
sub
jns
lock
jg
mov
xchg
lret
fmull
testl
cmp
jne
sub
jg
clc
ljmp
roll
mov
ljmp
mov
xor
push
or
push
rorl
pop
stos
jb
mov
inc
mov
mov
cmp
outsl
jmp
filds
jnp
xchg
or
movsl
mov
and
popa
jmp
repnz
jne
dec
xchg
cmp
push
mov
dec
fcoms
jge
outsl
dec
mov
xchg
dec
lahf
aaa
outsb
mov
jge
or
add
ljmp
addb
and
cmpsl
inc
mov
das
stos
sub
fcmovb
push
cmpsl
jecxz
sbb
mov
jecxz
shrl
or
in
aam
and
or
decl
mov
insl
outsb
fidivs
insb
cmp
out
lret
mov
and
mov
pop
stos
jecxz
movsl
dec
xchg
aaa
ret
dec
mov
lods
and
dec
and
jecxz
stos
mov
aaa
inc
jge
cmp
aas
xor
jl
lahf
push
pop
pop
imul
push
xlat
jge
test
cmc
lods
fstpl
out
xchg
sahf
add
xchg
sub
in
std
mov
loop
dec
ror
dec
mov
arpl
movsb
push
cmp
arpl
pushf
pop
les
das
in
inc
cmpsl
cmp
loope
xchg
jne
mov
nop
and
inc
xchg
ljmp
inc
lods
outsl
nop
mov
js
xor
jl
jg
adcb
aaa
movb
imull
inc
enter
add
stos
movsl
cmp
jecxz
enter
int
dec
scas
mov
notb
out
and
je
mov
in
cmp
xor
or
sbb
les
enter
lret
cmp
bound
lcall
push
dec
stos
scas
push
lds
xchg
jmp
inc
scas
jns
cwtl
faddp
test
lods
es
inc
xchg
leave
sub
xor
iret
mov
and
or
call
mov
mov
cmpsl
test
cmc
jmp
lret
shl
mov
rcrb
les
jge
cmpsb
lea
addr16
sti
xor
shlb
popa
xchg
scas
or
pop
sub
outsl
xor
xchg
test
in
sub
sbb
inc
mov
pop
fistpl
int3
mov
outsb
nop
and
adcl
sub
js
add
cmp
stc
std
sub
loopne
cmpsb
cmp
xor
adc
sbb
or
xor
push
fstl
mov
push
push
cmp
jb
aaa
cwtl
iret
aam
popf
out
pop
mov
cmp
pop
aad
push
addr16
ljmp
mov
push
cmp
arpl
pop
mov
into
sti
xchg
int3
mov
and
ljmp
in
add
mov
ret
outsl
inc
jecxz
insl
mov
xchg
popa
cltd
sbb
push
or
test
stos
adc
mov
repnz
pop
leave
ret
test
push
pop
pop
mov
add
in
mov
insb
outsb
mul
inc
inc
daa
mov
cmp
cmpsl
cwtl
xor
xorb
mov
ljmp
lock
mov
imul
cmp
xor
in
lock
ror
jp
adc
mov
fbstp
sbb
icebp
in
add
cld
and
pop
ret
stos
sub
leave
xchg
shll
jmp
jle
pop
push
mov
cmp
inc
or
mov
into
mov
pop
inc
sub
add
dec
and
xor
rcrb
in
xchg
pop
and
sub
in
xchg
mov
imul
pop
je
inc
int
sub
add
fst
jle
lcall
cmpsl
dec
clc
in
jae
add
or
cmc
insb
imul
lret
bound
fsub
add
rorb
mov
dec
dec
ror
xor
pop
push
adc
adc
scas
push
sbb
mov
icebp
mov
js
out
daa
push
inc
or
mov
cmpsl
push
call
ss
pop
push
in
popa
mov
xchg
pop
xchg
push
into
in
sarb
sub
in
add
add
mov
jge
dec
aam
and
cltd
jbe
arpl
sub
pop
fidivl
cmc
and
add
mov
out
rcll
enter
ds
dec
add
or
fmull
fwait
dec
sub
inc
pop
cmc
cmc
fstps
syscall
dec
rcr
mov
loop
jno
jge
and
mov
andb
dec
mov
jge
nop
rorl
adc
bound
cmc
rorl
xor
xchg
xlat
mov
leave
mov
or
sub
mov
xlat
test
into
and
inc
mov
adc
xor
sbb
ds
push
jge
leave
or
adc
fcomps
and
outsl
mov
adc
enter
bound
adc
pop
rclw
mull
pop
movsl
mov
mov
and
icebp
imul
mov
aad
movsb
sub
cmp
and
ret
inc
imul
push
xchg
mov
dec
fldt
std
sub
lock
jno
and
insb
adc
jae
jno
ret
xor
loope
mov
and
daa
das
mov
jmp
stos
loope
cld
sbb
dec
jp
call
add
bound
adc
orl
dec
dec
adc
or
adc
mov
scas
pop
stos
jbe
mov
popl
dec
ljmp
in
xchg
cwtl
inc
or
shrl
imul
jmp
jp
es
fwait
fwait
popa
cmp
and
add
je
aad
cwtl
inc
push
aas
mov
ds
pop
jnp
mov
fwait
jmp
inc
das
dec
negl
xchg
mov
pop
out
notb
loopne
sbb
and
stos
ljmp
jecxz
and
push
std
and
mov
adc
xchg
pop
or
fsubl
fs
fs
inc
jne
sbb
sub
push
lret
mov
addr16
ljmp
dec
rolb
inc
and
cmpl
imul
xchg
lret
sub
sbb
push
add
mov
fisttpll
pop
mov
mov
fs
imul
and
mov
jge
es
xor
out
and
pop
push
push
fidivl
add
pop
lock
int
lock
and
scas
flds
leave
shlb
sbb
test
pop
xor
jecxz
std
test
sub
mov
subl
sbb
pop
and
jmp
cmc
pop
push
push
xchg
add
push
test
fcmovb
mov
int
mov
dec
cmp
pushf
aam
inc
mov
xchg
inc
fld
mov
pop
push
sub
xchg
push
jne
int3
dec
add
mov
faddl
xor
loopne
xchg
dec
dec
fistl
lods
jmp
xor
mov
add
movsl
pop
fsubrs
sbb
rol
add
adc
jb
lods
sub
mov
lds
jo
mov
mov
dec
jl
lcall
and
inc
add
rorl
out
adc
loope
pop
arpl
repz
das
mov
push
sarb
mull
out
pop
pushf
cltd
push
dec
scas
jbe
lock
mov
das
sbb
and
add
outsb
insb
push
xchg
int
inc
xor
pop
jmp
stc
inc
icebp
jns
frstor
in
push
or
cs
xchg
cmpsl
add
in
iret
xchg
movb
sarb
pushf
xchg
xor
inc
xorb
jns
add
pop
push
push
repnz
jp
std
repz
stc
cmp
mov
inc
mulb
xor
sub
scas
sarl
inc
ret
or
stos
shlb
mov
daa
repz
push
jns
psubb
mov
fs
mov
int3
movsl
jl
ret
mov
mov
loopne
aam
popa
inc
dec
mov
jb
push
sbb
jo
aad
stos
out
mov
pop
lods
clc
sub
xlat
out
js
and
xchg
sbb
movsb
inc
xorl
insl
mov
fidivrs
insl
push
mov
jg
out
in
out
or
jo
lock
out
lcall
aas
push
hlt
jle
inc
ja
jge
dec
aaa
in
xor
icebp
fsubrl
test
adc
push
out
sub
jb
std
outsl
xor
enter
pop
mov
loop
out
mov
sarl
jo
stc
subb
sub
xor
adc
xchg
subb
push
call
fcompl
jg
jne
push
add
or
inc
aaa
loopne
mov
insl
inc
or
pop
je
popf
loopne
loope
inc
mov
test
aad
int
jnp
add
push
jno
fs
mov
mov
scas
sbb
xor
mov
jne
add
nop
inc
jae
inc
jae
dec
and
cltd
movl
push
jb
xor
mov
rol
xchg
jge
add
xchg
shll
xlat
dec
cmp
sbb
and
div
xor
pop
scas
cmp
shrb
sbb
dec
dec
inc
cwtl
jns
fistpll
jns
loopne
push
jae
or
test
jp
push
or
push
into
mov
imul
fwait
std
sub
push
pop
jnp
inc
out
das
mov
or
lds
mov
sbb
sbb
stos
xchg
pusha
jle
and
std
int3
add
pop
push
movsb
cli
loop
bound
cmpsb
jbe
mov
test
in
js
or
pop
pushf
cmpsb
and
pop
mov
dec
sub
fwait
push
clc
out
dec
adc
lds
add
movb
xchg
dec
mov
sub
call
mov
push
jns
xchg
adc
fldl
into
das
jmp
push
ja
push
shlb
sti
sarl
dec
jl
lahf
and
lea
je
pop
sbb
fadds
pop
mov
adcb
test
ret
mov
sbbb
dec
fbstp
inc
push
push
stos
fwait
nop
es
xor
std
dec
pop
xor
leave
pop
pop
outsl
leave
sbb
jl
les
pop
xor
stc
cli
lret
cltd
cmpsl
cmpsb
fbstp
mov
push
fidivrl
daa
dec
inc
push
sbb
xchg
mov
scas
sub
fcomp
jmp
incl
orl
xor
adc
je
das
cld
data16
add
or
adc
addr16
loop
push
jp
daa
sbb
jge
sbb
jo
xchg
mov
sub
adc
jne
aad
xor
xor
sbb
adc
push
dec
hlt
push
sti
addr16
repz
fistps
mov
adc
movsb
cwtl
adc
xorb
fimull
mov
dec
mov
adc
push
mov
push
lcall
add
into
cli
pcmpgtw
or
mov
les
inc
mulb
xor
fwait
scas
dec
bound
andl
jge
mov
lea
sbb
ret
mov
sub
sub
dec
cmp
xor
in
scas
cmp
cwtl
dec
ds
mov
icebp
pop
sbb
mov
cmp
xor
lds
push
and
or
and
sahf
mov
and
inc
in
call
pop
lcall
sbb
arpl
das
adc
sub
mov
jp
adc
or
dec
mov
repz
rcrl
xor
fsts
js
rcrl
and
mov
out
pop
imul
cmp
das
adc
fcmovb
pop
pushf
js
xchg
sub
sbb
push
or
jnp
jo
daa
pop
mov
js
lcall
scas
sbbb
xchg
sarl
dec
mov
add
cmp
outsb
and
sahf
jnp
rclb
fnstenv
pop
sub
scas
dec
pop
iret
cmp
or
sahf
in
mov
pop
mov
adc
rolb
outsb
push
les
dec
scas
adc
orb
sbb
xchg
push
pop
dec
test
push
and
pushf
lret
mov
sbbb
pop
push
add
ret
ficomps
xor
repz
xor
shr
dec
lds
mov
shrl
xchg
and
sub
cwtl
mov
mov
sub
stc
ljmp
cmp
pop
dec
dec
jge
xor
inc
mov
push
test
rorb
outsb
push
mov
add
pushf
rorb
push
cmp
add
stos
divb
xchg
sbb
mov
and
popf
mov
mov
jne
push
scas
and
mov
push
lret
add
hlt
mov
fsubrs
mov
mov
pop
repz
and
loope
sub
mov
jb
inc
mov
scas
xchg
stos
rcr
mov
pop
xor
test
mov
sbbl
loop
add
xor
std
daa
inc
pop
jnp
or
jns
test
bnd
cmpsb
rorb
repnz
mov
adc
test
outsl
add
test
sbb
xor
in
xor
lcall
and
sub
mov
cmp
jb
sbbl
std
mov
mov
insl
add
cli
dec
fildll
jno
gs
push
int3
in
mov
rol
jle
es
ja
sub
sbb
jge
or
clc
addr16
rclb
lods
pop
sub
adc
jnp
push
jecxz
movsl
pop
ret
mov
sbb
andb
lock
mov
ret
jne
xor
inc
popf
sbb
mov
push
into
roll
mov
sbb
xchg
dec
stos
pop
sub
addr16
pop
fnstenv
inc
int3
push
push
les
adc
dec
push
push
repz
into
popf
pop
insb
shll
stos
ja
adc
sub
ret
xchg
ss
mov
fsubrs
fwait
andb
int3
xchg
xor
cmp
xchg
cmp
jecxz
xor
inc
inc
xor
call
push
and
sti
cmp
xlat
and
push
in
lret
mov
mov
add
push
dec
fxch
jno
divb
mov
jne
lret
decl
bound
ds
cli
gs
jmp
sub
fwait
rolb
mov
out
imul
push
lahf
xor
jno
lock
jecxz
jmp
les
clc
push
push
inc
jae
dec
ljmp
inc
into
cltd
js
jnp
imul
adc
cmp
mov
mov
mov
inc
cmp
lea
jbe
sbb
dec
inc
xor
add
icebp
shrl
pop
push
jbe
shll
aad
inc
push
sbb
sub
clc
mov
push
jns
stos
sbb
inc
cmpb
mov
lock
dec
pusha
push
fldt
sarl
cmp
sbb
insb
cmpsl
mov
sti
jecxz
js
mov
dec
dec
out
mov
add
pop
orb
jo
adc
aas
std
imul
fwait
pop
mov
andb
ja
adc
rolb
mov
les
sub
mov
lea
sbb
test
ss
add
and
and
lods
shll
pop
lret
and
call
adc
mov
pop
fistpll
pop
int
rolb
test
clc
in
adc
jo
addr16
jle
lock
loop,pn
fistpll
test
jmp
cmc
jg
popf
adc
rcrl
stos
js
fwait
mov
push
xor
mov
rorl
pop
sub
stos
mov
push
or
push
fwait
xchg
ds
pusha
lods
adc
adc
adc
cmc
mov
sbb
leave
inc
in
xorb
mov
jb
xor
cmp
push
and
xchg
scas
xchg
push
test
mov
or
mov
jecxz
push
cli
and
imul
or
inc
sahf
in
fbld
cmp
sbbb
arpl
in
inc
adc
mov
es
pop
xchg
sahf
call
push
jne
popf
inc
adc
cmc
add
xchg
ret
and
push
jg
sub
fcoms
in
es
icebp
xchg
test
mov
test
cmpsb
jo
mov
and
push
arpl
mov
cld
imul
mov
xchg
arpl
mov
faddp
mov
ret
mov
ss
sub
test
mov
adc
cmp
fsubr
adc
lea
inc
call
push
add
insl
icebp
add
pushf
scas
push
jle
insb
ljmp
seto
rorl
add
imul
mov
pop
inc
mov
stc
or
mov
fidivl
add
fldenv
arpl
movsb
pop
inc
sbb
cli
outsl
pop
fmuls
jnp
cmp
movsb
aaa
rep
mov
lret
add
cli
ror
inc
out
loopne
jmp
jbe
loop
subb
rol
push
fsts
jne
cli
pop
out
pusha
pop
sbbb
sbb
sbb
insb
mov
jg
gs
and
pop
scas
add
xor
dec
mull
cwtl
sbb
inc
jp
repz
in
insb
sti
xchg
inc
stc
xor
fisttpl
jno
or
cmp
hlt
repnz
rcl
xchg
jp
mov
test
and
pop
daa
inc
pop
mov
inc
push
test
pusha
add
scas
cli
in
popa
jp
cmpsl
jns
xchg
adc
aam
fs
gs
adc
leave
test
popf
scas
pop
dec
pop
lahf
jae
xchg
lods
cmpsl
fiadds
jae
mov
jmp
sbb
mov
je
imul
inc
lds
je
jle
js
mov
lods
dec
lods
sahf
add
data16
cmp
test
dec
mov
aaa
pop
jl
or
jmp
pop
push
rcrl
xlat
lret
int3
xchg
xchg
push
push
push
push
pop
xor
jmp
mov
push
ret
out
mov
xor
jg
sub
mov
jmp
pop
push
push
dec
pop
xchg
or
xchg
sub
mov
imul
xchg
incl
jle
lods
cmp
fcmovnb
iret
addl
mov
arpl
in
mov
rcrb
mov
mov
mov
mov
test
or
mov
and
xor
std
fldt
call
das
mov
inc
stos
jbe
pushf
movl
mov
mov
call
lcall
and
ret
push
test
adc
iret
jp
xchg
cmp
xchg
sbb
mov
hlt
adc
sub
in
orl
cmpsl
loop
frstor
ljmp
lcall
fistl
mov
pop
jo
lock
inc
bound
pop
or
or
cmpsb
fistpl
mov
es
sbb
mov
add
frstor
outsb
push
pop
inc
lret
push
add
and
test
push
mov
adc
ret
mov
pop
mov
sub
arpl
sbb
mov
or
out
std
in
popf
cwtl
outsl
mov
xchg
inc
inc
test
dec
xor
filds
shrl
sub
int3
popa
into
mov
sbb
pop
aam
xchg
push
inc
sub
pop
jns
int3
mov
in
dec
xchg
in
fs
pushf
push
inc
lods
pop
sub
scas
jp
imull
cmc
lods
addr16
mov
pop
pop
xor
pop
sbb
cwtl
into
jns
inc
and
fdivs
pushf
sbbl
cmp
and
xchg
sub
pop
push
jb
jnp
scas
mov
and
outsb
mov
addb
mov
push
icebp
jl
shll
cmp
ja
mov
out
jp
test
and
sahf
sub
test
pop
xchg
decl
cmp
jp
scas
mov
mov
cld
mov
aaa
shlb
adcl
adc
dec
dec
out
pusha
xor
ret
pop
std
and
les
jge
test
fmull
rol
jge
push
xor
jmp
sbbl
fldenv
unpcklps
es
lret
loopne
dec
fnstcw
adc
lret
fdivrp
je
sbb
pop
rorb
movsl
or
cmc
lods
xor
xchg
push
adc
push
bound
lret
sbb
inc
imul
cmpsl
xor
cs
in
lcall
adc
mov
push
lahf
xchg
nop
je
cltd
popa
ret
insb
or
or
sbb
xchg
daa
out
sbb
mov
adcl
ficomps
dec
xchg
mov
orl
lock
mov
lret
push
enter
aas
pop
fisttps
add
push
cmpsl
sub
iret
jo
testl
jns
push
sub
dec
mov
popf
mov
out
sarb
cmp
arpl
outsl
in
fisubs
lods
dec
cmp
in
test
lret
or
mov
or
test
or
jle
xchg
pop
fildl
fwait
xchg
aam
ret
insl
jnp
pop
into
or
ss
mov
mov
outsb
mov
cld
mov
sbb
shl
gs
inc
inc
jecxz
popf
aad
and
cmp
dec
shll
push
push
out
aad
pop
adc
xchg
mov
jge
pop
mov
test
or
push
lods
xchg
inc
cwtl
scas
pop
aaa
xor
xchg
out
add
inc
jle
dec
cmpsb
icebp
and
and
sbb
mov
lods
and
jg
outsb
jae
or
insb
test
jmp
mov
mov
add
and
adcb
mov
dec
call
jp
xchg
popf
xor
xchg
add
leave
insb
sbb
cmp
push
mov
mov
mov
fisttpl
sub
xlat
arpl
scas
add
lea
outsl
or
jae
mov
sub
outsb
orl
dec
cmp
xor
decb
mov
js
sbb
sub
sbb
push
push
push
dec
xchg
insb
lea
pop
cli
imul
and
cmp
test
sbb
in
jp
mov
fcom
mov
xor
scas
add
or
shll
inc
and
push
mov
cmp
stos
push
iret
cltd
or
mov
jb
mov
sbb
pop
push
iret
ja
into
rcrb
adc
cltd
or
inc
mov
dec
pusha
sub
dec
sub
add
outsl
sub
icebp
cmpsb
fiadds
fistl
sbb
imulb
cmpsl
stc
mov
push
sbb
add
jne
lcall
rorl
mov
pop
leave
xor
shll
sar
ljmp
int3
bnd
add
push
inc
push
rcr
push
xor
dec
mov
add
mov
mov
or
cli
out
jle
aad
add
mov
sti
mov
into
mov
rcll
xor
adc
mov
mov
dec
inc
xchg
pop
fbstp
arpl
mov
shrl
shrl
out
xchg
inc
lahf
out
mov
xlat
dec
pop
or
xchg
loope
jl
xchg
cmp
jl
jno
and
test
pop
jns
cld
push
cwtl
out
int
dec
jge
jno
mov
icebp
popa
lcall
fldl
lret
or
pop
jne
mov
loope
cwtl
fisubrl
or
sub
sbb
sub
jae
add
jecxz
mov
xor
push
sub
jge
ret
cltd
and
mov
aaa
jns
pop
roll
fists
and
cli
push
mov
ja
sbbl
nop
inc
add
sbb
fdivs
aaa
sub
mov
test
sbb
mov
sub
dec
xor
jo
dec
add
insl
cmp
lahf
add
addr16
ret
popf
xchg
push
and
mov
sbb
mov
stos
mov
out
adc
cld
and
hlt
bound
adc
dec
pop
sbb
mov
out
cmp
pop
dec
fnstcw
cmp
adc
and
pop
sub
clc
add
stos
popa
imul
adc
jo
cmp
inc
xchg
or
inc
and
mov
sub
pop
leave
lods
lds
pusha
xor
cmp
mov
sbb
add
add
pushf
outsb
cmp
and
xchg
aam
into
sbb
out
das
xchg
movsl
daa
inc
jge
js
sub
add
jae
pop
add
jl
les
in
or
or
call
mov
pop
movsl
sub
inc
pushf
push
es
cmp
sub
lods
inc
xchg
cmp
jns
test
mov
imul
dec
pop
add
hlt
imul
adc
sbb
aam
mov
push
fcmovnb
adc
pop
fisubrs
imul
cmpsb
cmpsl
nop
divb
ss
push
cwtl
xor
add
inc
pop
xor
popf
data16
cmpsb
sub
ss
sub
in
ret
cmp
push
mov
outsl
and
lret
in
lcall
stos
jnp
jp
mov
mov
dec
adc
adc
jns
ja
jns
push
dec
rclb
das
je
movsl
call
push
inc
iret
adcb
or
or
mov
mov
dec
jb
push
push
lods
sub
cld
inc
out
mov
loopne
out
loopne
shr
mov
cmpsb
jg
xor
add
insb
cmpsb
shl
push
push
push
lcall
cmp
inc
shll
shll
aaa
idivb
jnp
xor
xlat
aam
fistpl
rcrl
cmpsb
xchg
into
pop
lahf
mov
ja
aad
lret
pop
lcall
xor
lds
test
mov
adc
hlt
mov
sub
push
and
mov
add
lret
xor
bound
arpl
cmc
js
jo
push
push
inc
mov
pop
andb
shrl
xor
int
dec
mov
in
jp
and
sbb
fisttpl
and
dec
or
jae
and
jecxz
hlt
xor
cmpsl
fldt
roll
lcall
outsl
inc
sbb
dec
cld
pop
inc
mov
roll
mov
cmpsl
mov
cmpsl
mov
in
daa
dec
jb
fadds
lods
rcll
push
pop
cmp
imul
ljmp
inc
push
daa
cmpsl
jae
pop
xor
cmp
out
fistps
pop
or
out
nop
sub
add
cmp
fldenv
jnp
js
sbb
cmp
popf
or
fs
mov
js
xchg
fistps
lret
dec
mov
test
fldcw
out
add
sbb
dec
sbb
mov
cli
push
mov
repz
push
add
ret
scas
mov
sbb
adc
add
sti
mov
dec
pop
sub
mov
sub
dec
mov
daa
and
jl
pop
mov
xor
inc
mov
lret
int3
dec
mov
pop
std
dec
xchg
mov
cmp
subb
pusha
test
insb
mov
testb
es
rcrl
pop
xchg
push
fldenv
leave
xchg
xor
lahf
cmp
jnp
jl
adc
xchg
ds
add
or
sbb
push
mov
push
inc
aaa
cmp
mov
add
mov
fcomip
push
test
pop
and
mov
aam
dec
jle
xchg
inc
fsub
in
test
das
cmc
aaa
sarl
inc
mov
icebp
sbb
fstps
shrl
xor
inc
shll
addr16
loopne
jns
out
loopne
jnp
call
iret
add
popf
fbld
mov
pop
in
daa
mov
mov
push
push
data16
imul
jp
scas
and
and
in
pop
mov
mov
in
movsb
loopne
mov
ljmp
add
adc
xchg
subb
stos
mov
outsb
push
dec
scas
pusha
jnp
aas
arpl
sub
push
cmp
mov
gs
pop
pop
xchg
xor
jne
data16
filds
fwait
inc
lods
sub
dec
add
rorb
xchg
dec
sbb
fstpl
iret
and
mov
shlb
hlt
gs
or
sub
xchg
cmp
mov
test
xchg
mov
mov
sub
cmpsl
clc
fs
call
mov
xchg
ret
wbinvd
jmp
pop
inc
jg
fsubrl
jno
inc
adc
adc
add
leave
jo
xor
into
xchg
jecxz
push
rcl
into
jo
push
icebp
iret
pop
mov
sub
in
pushf
mov
mov
lret
adcl
mov
adc
sub
imul
stc
pusha
xchg
es
push
sbb
xchg
jno
jmp
mov
enter
mov
sub
sub
mov
ljmp
adc
out
fimull
sbb
sub
mov
fwait
dec
mov
push
adc
mov
sub
lahf
ret
int
push
fs
outsb
or
adc
dec
adc
ja
adc
data16
shll
outsb
push
scas
pop
addr16
lahf
outsb
mov
mov
imul
mov
insl
mov
mov
sbb
adc
push
nop
ret
lods
push
mov
push
sbb
push
jo
push
push
and
mov
loope
sbb
icebp
xor
test
cli
push
call
pop
cmpsl
aas
xor
fisubrl
in
adc
in
mov
inc
movsb
inc
mov
or
or
mov
daa
cmc
inc
sti
stc
push
adc
mov
jo
dec
adc
cld
push
ret
cmp
outsb
xchg
cmpsb
or
push
int
cmp
or
inc
fs
adc
push
push
in
ljmp
mov
bound
and
mov
imul
cmpsl
insb
icebp
out
adc
ljmp
bound
in
test
jbe
loope
jl
inc
push
mov
int
mov
push
imulb
scas
jge
push
push
jmp
or
adc
subb
sub
inc
cli
cwtl
jl
mov
push
ja
pop
dec
push
imul
cmp
mov
mov
push
xor
std
push
stc
js
outsb
int3
repz
std
jl
fyl2xp1
xchg
lahf
ret
in
arpl
fwait
push
cmpsl
cmc
adc
fildl
sbb
mov
out
and
xchg
shl
mov
jp
in
sub
ja
int
xchg
jo
sbb
in
mov
xchg
jp
dec
iret
nop
add
ja
xchg
rorl
jns
adc
in
iret
push
jmp
mov
xchg
popa
mov
fisubl
movsl
pop
or
fcoms
mov
out
ljmp
fisubrs
nop
and
daa
aam
js
repnz
xor
sub
ds
out
nop
movsl
gs
ljmp
adc
stc
ret
outsb
addb
cmpsb
xlat
xor
insb
scas
enter
push
mov
mov
in
fbld
or
sbb
call
in
out
sbb
cmp
xchg
jmp
fwait
push
jg
and
mov
fstpl
call
add
jo
xchg
jg
mov
pop
sti
jne
add
cmp
and
shr
loopne
mov
in
push
mov
sbb
inc
mov
insl
dec
decl
adc
adc
rol
and
dec
outsb
lcall
cltd
outsb
shlb
dec
sbb
sahf
aam
dec
gs
xchg
js
mov
mov
sbb
cli
mov
mov
cmpsl
or
dec
js
dec
std
or
out
test
jmp
pop
xchg
push
testl
mov
fdiv
shrb
in
rclb
ret
stos
sub
jbe
ljmp
pop
in
push
test
xchg
jns
jnp
test
mov
in
or
outsb
add
sbb
pop
lret
aad
pop
and
or
fwait
jge
xchg
mov
add
ja
aad
adc
jbe
jnp
lods
mov
jns
ss
pop
mov
push
jle
cltd
xor
fcoml
adc
inc
jecxz
ffreep
fldcw
cmp
popf
and
popa
pop
or
hlt
push
dec
rorl
mov
mov
xchg
mov
movsl
scas
dec
sar
mov
scas
cmp
popa
add
or
ljmp
ss
jge
or
out
sbb
daa
loopne
mov
fadds
sbb
iret
icebp
les
xor
in
mov
testb
inc
inc
mov
or
jb
push
push
inc
dec
loopne
sarb
adc
and
dec
jl
lods
ss
inc
pop
movsl
outsb
shlb
aad
popf
enter
push
fnstenv
pop
or
cli
sub
mov
lods
aam
sbb
in
jno
ss
cs
dec
push
cltd
mov
mov
dec
xchg
push
sub
xchg
idiv
sbb
adc
imul
sbb
insl
stc
aaa
fisubs
push
in
data16
pop
push
cmp
xchg
nop
call
mov
mov
aas
mov
aaa
leave
jb
jo
bound
roll
dec
and
sbb
mov
cmc
mov
jge
xchg
int
xor
adc
mov
test
clc
dec
mov
into
adc
ds
mov
or
jecxz
scas
ja
jae
mov
and
mov
inc
xchg
rclb
cmp
inc
push
mov
xchg
fs
int
xor
je
fcomps
call
lods
jb
fisubl
test
sbb
or
add
jp
out
sub
mov
inc
sar
mov
js
arpl
in
mov
daa
aam
push
out
outsb
ss
cmp
mov
adc
cs
movsl
mov
pushf
test
repnz
or
or
jmp
sbb
adc
out
int3
ja
fisubrl
jb
mov
rclb
inc
int3
in
mov
rep
lock
xlat
xor
pop
jno
xor
in
pusha
imul
andb
or
xor
adcl
cmp
ss
data16
int
push
adc
dec
shll
lahf
gs
call
test
inc
add
sti
movsl
enter
sub
ret
mov
jb
insl
inc
mov
jl
jns
lods
test
push
inc
adcb
jbe
scas
pop
adc
dec
mov
mov
mov
sbb
lock
adc
sahf
push
jnp
popa
inc
mov
xor
std
out
out
inc
loope
cmp
inc
filds
fbld
push
lahf
sub
test
iret
jmp
aas
mov
mov
and
mov
jp
cmp
lock
ja
mov
ss
sub
adcl
pop
loope
into
stos
mov
stos
imul
fs
sbb
jmp
cltd
int
lods
test
inc
call
in
fbstp
or
ret
and
pop
test
push
adc
xchg
cli
sub
icebp
cmpsb
mov
int3
iret
loop
mov
xchg
add
fstps
and
loop
loope
mov
pop
pop
fsubrl
leave
push
les
xchg
xor
in
jb
cld
jmp
sub
aaa
mov
jne
push
and
loope
ja
dec
mov
jle
movsb
xor
mov
add
mov
add
inc
sbb
sbb
fldt
mov
ret
mov
cmp
dec
cmp
test
js
adc
dec
movl
test
jg
mov
hlt
outsl
push
adc
xchg
cli
pusha
xor
cmp
xchg
inc
lock
cmpsb
inc
out
data16
je
mov
xor
or
pop
jae
pop
pop
mov
and
clts
cmp
lcall
inc
stos
in
adc
subl
imul
aas
repnz
cmp
dec
stos
lods
sahf
dec
pop
or
cmpsb
inc
fcompl
js
inc
mov
mov
xlat
pop
pop
jbe
stos
mov
popf
inc
cli
dec
in
xor
stc
mov
outsb
inc
dec
mov
iret
pop
cmpsb
sbb
fucomi
jge
pop
cli
or
adc
ss
in
imul
inc
lods
push
les
test
mov
mov
addr16
add
iret
cmpsl
add
mov
es
mov
sbb
test
sub
or
dec
loope
test
add
lahf
xchg
xlat
pop
outsb
mov
mov
in
arpl
lahf
fmuls
inc
shlb
arpl
shr
adc
out
xor
jo
imul
cmp
cltd
jb
pop
xlat
inc
xchg
or
cmpsb
scas
mov
cmpsl
xchg
mov
pusha
sbb
jp
xchg
das
sub
test
jp
or
lcall
int
aam
adc
movsb
mov
rorb
or
and
push
inc
ljmp
mov
xchg
cwtl
pusha
cmp
mov
imul
fcmovbe
fwait
imul
cli
sub
mov
filds
jmp
pop
pop
insb
push
xor
test
adcl
add
fisubrl
scas
lods
xor
inc
push
inc
sbb
mov
adcl
repz
mov
cs
mov
icebp
mov
bound
fcom
push
xchg
std
pop
das
push
add
stc
fldcw
sub
xor
add
and
inc
sbb
mov
in
scas
jle
sub
repnz
inc
cmp
ja
lret
mov
in
hlt
aam
outsb
ja
out
jl
clc
sbb
popa
mov
outsb
daa
mov
mov
xchg
jge
pop
inc
into
jne
mov
xlat
cld
hlt
xchg
mov
addb
inc
insb
or
add
adc
pushf
mov
add
fldenv
pop
sbb
and
inc
pop
icebp
jb
inc
rol
pop
adc
scas
ja
test
add
mov
gs
xor
aaa
mov
test
push
xor
int
and
cmc
xchg
inc
test
cmp
sbb
ret
inc
xor
jae
add
add
mov
sbb
and
repnz
out
mov
out
push
jp
daa
mov
jle
dec
cmove
jnp
inc
mov
negb
push
or
add
shlb
and
cmc
adc
cmp
out
popa
xlat
and
jb
lock
dec
in
jo
or
call
push
shlb
xchg
or
mov
push
mov
xor
pop
inc
ljmp
sbb
ljmp
cmc
clc
mov
idivb
cld
xchg
adc
std
inc
add
adc
je
loopne
sbb
adc
in
xor
mov
mov
leave
sub
dec
out
mov
xor
int3
push
and
stos
scas
or
xor
in
das
mov
pop
pop
mov
xorl
jns
adc
jno
xor
std
inc
xor
push
xlat
and
sbb
inc
pop
mov
inc
ss
cli
outsb
stos
fs
out
add
inc
arpl
inc
popa
mov
repnz
mov
add
push
xchg
jns
cmp
cmp
mov
lds
jae
imul
ret
cmpl
pop
dec
clc
jge
gs
jo
mov
xor
fwait
and
cmpsl
shll
xor
push
mov
xor
popa
cs
lret
repnz
xor
add
xlat
scas
xchg
popf
mov
cmc
mov
mov
dec
jle
int
sbb
jl
pop
pop
xor
aas
loope
aaa
fisttpl
js
or
addr16
lock
pop
inc
cld
sbb
push
xor
or
jg
lods
and
and
imul
mov
or
std
mov
inc
clts
sbb
mov
andl
push
cli
adc
mov
mov
sub
xchg
out
addr16
mov
mov
loope
gs
int
mov
mov
push
mov
inc
fs
push
add
idivl
mov
xchg
sbb
sbb
lods
push
or
pop
xchg
loopne
xchg
add
cmp
pop
jbe
mov
xor
es
mov
loopne
fstl
lea
xor
jne
mov
je
xor
jno
adc
xchg
int3
roll
xor
fs
ja
cltd
cs
fnstenv
insb
mov
and
mov
dec
cld
cmp
or
cltd
testb
pop
mov
pushf
inc
xchg
push
imul
andl
fs
pop
push
mov
ret
ss
sbb
xabort
dec
gs
stos
sti
adc
inc
pop
pop
aas
sbb
out
xchg
mov
mov
pop
dec
jne
int
inc
sub
jecxz
ret
mov
or
ja
dec
fwait
or
mov
fs
es
fsubrl
xchg
notb
sbb
int
jns
ret
inc
inc
xchg
in
insl
add
les
push
push
out
fs
xchg
pop
lock
mov
rcll
mov
ret
aad
js
jno
add
das
imul
and
xor
lret
ljmp
and
jg
xchg
mov
aam
push
or
lret
mov
test
mov
lea
xor
cmp
call
add
aam
imul
and
movsb
cwtl
push
and
push
fisubrs
out
lret
std
add
imul
sub
orl
shl
xor
cmp
leave
loop
sbbb
pop
mov
mov
jecxz
xlat
jl
sub
daa
or
mov
in
insl
fidivl
insb
nop
adc
xor
sub
call
fdivs
push
jle
pop
cmp
fs
insb
cmp
xlat
inc
push
out
jns
pushf
and
into
push
mov
mov
push
sahf
lods
addr16
adc
lret
inc
mov
fucomi
pop
dec
out
clc
mov
add
jge
in
out
push
cli
and
sub
xchg
xchg
jnp
jb
or
fwait
lods
into
outsl
push
mov
xor
mov
cltd
daa
rorl
outsb
xchg
sbb
test
rcll
adc
cmp
movsl
imul
mov
insl
xor
push
and
stc
xor
stos
jne
dec
rclb
and
sub
loope
xchg
or
push
mov
and
cmp
push
sbb
sbb
insb
outsl
jo
call
or
loopne
xor
sbb
mov
push
orl
sub
cmp
in
imul
cmp
movntps
fdivl
sahf
fs
adc
dec
and
mov
arpl
ror
test
aad
js
xlat
or
and
sarl
and
jge
loope
mov
movsb
ljmp
adc
je
out
scas
dec
popa
dec
lea
or
pop
cmp
repnz
fwait
sarb
enter
xchg
testb
jns
mov
xor
test
aas
ret
cwtl
pop
pop
lcall
mov
dec
mov
push
adc
rcl
xchg
xor
ljmp
cmp
insl
mov
ljmp
jbe
fcmovbe
dec
mov
jg
mov
mov
stos
repz
xchg
push
jno
xor
jbe
xchg
adc
loope
divl
add
add
push
inc
xor
mov
ret
jmp
adc
mov
testb
lods
dec
iret
mov
mov
push
pop
xor
shl
push
jae
push
xchg
cld
mov
push
sbb
cmc
mov
les
aas
test
cld
mov
mov
iret
jnp
pop
das
pop
add
pop
call
mov
sbb
in
pop
daa
cmp
or
pop
arpl
adc
insl
fcomps
sti
aas
rcrb
enter
cwtl
add
jae
je
cmp
lock
and
aam
sub
adc
xchg
pushf
aas
repnz
xor
push
mov
xchg
stos
addr16
lret
aaa
inc
aam
dec
sub
push
pop
fdivs
test
cmc
sub
xchg
decl
stos
mov
push
mov
out
dec
stos
data16
ss
push
pop
scas
arpl
fwait
jno
mov
adc
jnp
sbb
jge
mov
dec
lret
movsl
nop
sub
loope
insl
inc
or
aam
xor
or
jnp
cmp
add
xchg
std
mov
inc
push
add
lret
jno
lock
mov
mov
gs
sub
jnp
aam
pop
cmc
fisubl
sub
pop
adc
push
hlt
fcoms
pushf
mov
cmp
repz
pop
cs
lret
shll
enter
mov
jns
mov
sub
shlb
out
mov
mov
or
bound
hlt
pusha
stc
jle
mov
dec
cs
andl
cmp
mov
das
mov
cmp
mov
and
cs
mov
cmc
ss
push
shr
lods
jg
sbb
movsl
in
jb
js
lock
cmpb
xor
push
mov
ret
rcrl
add
cmp
sub
stc
adc
in
out
or
xor
or
int3
mov
rol
mov
sub
into
pop
fnstcw
sub
or
aas
xchg
xor
daa
sbbl
repnz
pop
rcrl
jne
xchg
mov
or
mov
xchg
inc
pop
adc
adc
and
dec
mov
mov
push
lods
inc
sbb
and
imul
lock
cmp
test
sbbb
jno
jmp
jg
mov
leave
jns
mov
dec
adc
push
pop
add
push
cmp
cld
xorps
jecxz
sbb
sti
adc
aas
mov
inc
inc
pusha
daa
cli
and
xor
mov
push
xor
outsl
add
in
xchg
adc
mov
sahf
xor
aaa
into
addr16
and
out
cmp
mov
out
mov
jnp
pop
mov
or
repz
xor
or
fildl
sti
jae
shlb
mov
push
popa
inc
sbb
dec
add
sub
mov
pop
mov
push
add
rcr
test
xchg
mov
push
and
mov
int
xor
into
lret
sbb
inc
sarb
cld
dec
push
outsl
sub
out
mov
xchg
or
outsb
fwait
add
jns
ljmp
ljmp
vhaddps
lock
add
cltd
repnz
add
cmp
setnp
dec
movb
outsb
xor
test
ficoms
out
inc
ret
adc
pop
push
cwtl
and
xor
sbb
lahf
mov
add
adc
lods
fdivp
sub
lock
sub
imul
rep
ficoml
loopne
mov
repz
movsl
mov
cmc
pop
jle
addr16
and
jle
xlat
jecxz
rorb
jnp
lcall
adc
nop
rcrl
clc
push
jnp
stos
int
xlat
dec
mov
jb
jge
pop
inc
lock
push
mov
cmc
fiaddl
jb
lret
xchg
ds
aad
int3
push
insl
adc
xor
and
add
stc
popa
out
mov
inc
inc
aam
test
mov
xor
fcomp
loopne
test
sbb
and
or
or
jle
dec
push
mov
repnz
push
pop
adc
or
xchg
dec
pop
xor
into
sub
pop
push
sub
outsl
test
addr16
fs
dec
inc
out
cmp
jns
pop
sbb
jecxz
lock
mov
push
adc
xlat
incb
in
dec
sbb
imul
insl
pop
and
outsl
notb
movsb
int3
mov
xchg
inc
mulb
in
xchg
push
jnp
jae
mov
in
dec
add
xchg
ja
jmp
sbb
outsl
jle
inc
add
adc
cwtl
les
scas
xor
test
addr16
pop
enter
inc
inc
fmull
cmp
sbb
pop
pop
xchg
dec
mov
sar
cmpsl
int
mov
rcrb
pop
pop
jp
loop
mov
xchg
xchg
lahf
push
and
or
sub
insl
fbld
mov
or
jns
mov
cmpsl
sbb
je
jl
inc
mov
fwait
jle
pop
dec
mov
aad
outsl
xchg
xchg
fwait
mov
and
inc
in
out
insl
xor
pop
push
fists
out
rcrl
out
cwtl
dec
jb
aad
mov
pop
aas
add
sub
sbb
dec
outsl
stc
into
in
or
jo
inc
push
movsl
shl
imull
fwait
cltd
dec
cmp
and
push
or
adc
mov
and
xchg
jns
push
fwait
xor
outsb
mov
mov
scas
and
arpl
adc
mov
adc
xor
mov
xchg
cld
push
adc
lahf
adc
rcll
iret
push
and
xchg
or
adc
cmp
sbb
stos
aam
pop
mov
cli
loope
popf
cmc
movsl
test
mov
mov
cmp
sbb
sbb
pop
or
stos
and
sub
cwtl
es
mov
push
shll
data16
cmp
daa
ret
inc
inc
int
test
pop
das
add
subl
dec
sbb
mov
sub
in
push
lcall
das
xchg
pop
pop
lods
data16
lret
add
stc
jmp
loope
cmp
hlt
aad
ds
out
or
out
sub
movl
bound
notb
in
jle
fistpl
negb
inc
xchg
cmp
push
test
repz
xchg
add
cld
mov
inc
lds
outsl
add
int3
and
or
lcall
sarl
subl
mov
dec
in
mov
fwait
ss
dec
pusha
xor
stos
fsubrl
inc
sub
push
add
ljmp
pusha
mov
mov
jb
push
out
cmp
mov
xchg
xchg
xchg
xchg
aas
or
in
dec
stos
sub
in
pop
inc
addb
sbb
aam
cmp
sbb
and
mov
mov
lods
jnp
stos
jp
imul
test
pop
sbb
mov
loopne
jmp
xor
and
inc
fldl
mov
push
jbe
shrb
xor
pop
fstps
and
lock
out
pop
mov
in
jmp
movsl
mov
add
aam
push
sti
inc
push
in
mov
shll
fbld
jnp
hlt
sbb
sar
mov
xor
pop
push
mov
cmp
into
inc
cmp
push
sti
xchg
mov
in
pop
and
popa
in
stos
push
push
testb
add
pusha
push
push
mov
dec
sbb
mov
hlt
inc
and
jnp
fsubrs
dec
and
iret
sbb
pop
aam
sub
dec
mov
cmp
add
mov
ss
cmp
mov
mov
mov
mov
cmp
mov
and
movsl
dec
fadd
clc
adc
hlt
notb
xchg
jne
mov
hlt
xchg
in
cmpsl
mov
xor
fnstsw
mov
cmpsl
insb
jne
sub
mov
sti
cmp
or
int3
fcomps
leave
sbb
mov
gs
push
inc
out
push
cltd
sbb
lods
jo
add
dec
pushl
rclb
pop
dec
test
push
test
lcall
inc
jmp
ret
inc
pusha
inc
cmp
cmp
xchg
insb
loop
adc
xchg
imul
add
and
mov
popa
movsb
jno
dec
jp
jecxz
into
push
add
and
dec
xchg
testl
adc
xor
pop
or
cmp
inc
and
dec
decb
dec
mov
push
pop
jp
xchg
or
dec
in
stos
sahf
mov
jns
inc
popf
mov
sub
fs
pop
xchg
testb
popf
jg
bound
shlb
bswap
les
cwtl
daa
pop
decb
mov
aad
dec
jmp
or
repnz
push
fists
icebp
inc
mov
sbb
sub
rcrl
fiaddl
daa
cltd
fdiv
ficomps
push
inc
dec
mov
dec
xchg
int3
ret
xchg
lods
xchg
pop
subb
sub
testl
and
mov
add
pop
sub
mov
loopne
xlat
imul
lea
xchg
jo
je
push
inc
dec
lea
cmp
pusha
aam
cli
sbb
test
mov
sub
push
fisttpll
xchg
add
dec
leave
push
imul
lods
jno
cmpsb
jle
or
insb
pusha
enter
pop
push
movsl
pop
arpl
xor
aaa
call
das
mov
sbb
add
push
inc
mov
insb
aad
and
popf
inc
or
bound
push
dec
aas
xor
pusha
push
stos
pop
dec
jb
xchg
rorb
js
std
ss
dec
jae
icebp
inc
sarb
imul
ss
stos
rclb
jno
cmc
mov
fldl
mov
xor
jns
add
clc
mov
lods
rcrb
loopne
incl
push
dec
mov
repz
iret
addr16
imul
sub
jbe
movsb
loope
roll
mov
insb
pusha
sbb
test
leave
push
jge
loop
cwtl
ficoms
rolb
ret
lea
cmpsl
add
test
jns
lods
rcll
sbb
decb
xlat
js
jns
pop
outsl
cmpsl
cmp
xor
xchg
es
inc
leave
cs
mov
jb
or
sarb
stc
add
aaa
mov
popf
pop
dec
test
aad
popa
xlat
mov
inc
leave
xor
jg
or
cmp
dec
jmp
icebp
fisubrs
sbb
add
stos
loopne
cmpsb
imul
sbb
xchg
mov
cmp
and
ds
sbb
pop
ja
andb
filds
jle
cmp
xor
xchg
cmp
mov
lret
sahf
in
mov
xchg
outsl
orl
call
mov
pop
xor
mov
mov
push
dec
lahf
sub
or
lea
ja
push
stos
sbb
divb
xor
cmpsl
inc
mov
nop
mov
xor
dec
push
divb
fisttpll
mov
sbb
sub
jbe
mov
sub
mov
inc
iret
push
xor
out
adc
aam
add
mov
cmp
lock
push
inc
fnstcw
fs
mov
jo
insb
push
jb
xchg
cmp
jl
sbb
or
fistpll
pop
cmp
mov
jg
bound
or
fwait
and
jae
cs
xchg
out
rorl
jmp
lods
adc
jmp
adc
test
inc
cmpl
mov
pop
and
jb
mov
stos
out
pop
in
lret
adc
test
loope
push
sar
inc
in
iret
sbb
sbb
fldl
and
inc
jmp
dec
jbe
and
cmp
inc
add
mov
arpl
mov
sbb
jp
push
sbb
fs
pop
jp
inc
test
push
jns
in
scas
in
fwait
mov
out
fld
popf
add
mov
inc
cltd
add
push
imul
icebp
cmp
andl
jae,pt
inc
push
push
divl
jne
nop
xchg
pop
sarl
xor
pop
test
cld
mov
in
push
push
sub
gs
leave
xchg
iret
mov
sbb
shrl
pop
aas
ficompl
dec
lret
loopne
push
jle
jge
insb
test
xchg
mov
frstor
outsl
sub
jne
mov
xchg
rcl
stos
dec
dec
movsl
mov
movsl
xchg
pop
insb
jmp
pusha
cmpl
cmp
pushf
jp
loopne
xor
sahf
es
push
dec
mov
mul
push
idiv
ret
mov
pop
outsb
ss
pop
repz
mov
shll
lods
ss
mov
pcmpgtb
sub
inc
push
fxch
out
out
sbbb
lods
cs
subl
out
jle
sub
xchg
jle
dec
mov
enter
scas
sbb
jno
lods
push
out
mov
jbe
mov
cmpb
add
mov
clc
out
sub
cli
mov
sti
sbb
adc
sbb
push
mov
shlb
fnstsw
cmp
popf
inc
es
mov
gs
push
push
inc
push
lret
stos
inc
adc
sbb
xchg
call
pop
int
jp
and
cli
test
shrb
sub
push
pushf
or
outsb
and
jmp
in
cld
rol
mov
lds
push
add
push
test
jle
out
or
cld
hlt
xchg
rorb
bound
and
inc
mov
jno
mov
jns
push
xor
jbe
pop
pop
push
pop
lret
add
in
push
stc
xor
into
and
out
icebp
fcomps
fsubs
imul
xlat
pop
out
mov
mov
xchg
pop
cld
xlat
xchg
fwait
and
lea
xchg
mov
sub
ljmp
xor
mov
mov
addr16
insb
mov
sub
dec
add
mov
jnp
mov
push
add
push
push
add
pop
push
in
pop
inc
lds
cmp
inc
or
fldt
call
push
pop
xchg
loop
jo
pushf
xorl
inc
jmp
repnz
sub
je
jp
add
push
adc
aaa
and
lds
pop
dec
sarl
jo
cmp
lret
push
cmc
sbbb
sti
xchg
add
xlat
mov
add
clc
pop
mov
cmpsb
xchg
and
fwait
repz
shl
ljmp
push
jmp
sarb
cmp
cmc
out
jl
dec
inc
test
and
lea
dec
pop
in
mov
stos
xor
pop
adc
xchg
aaa
jge
out
out
mov
push
sub
mov
ror
or
testl
xor
scas
xchg
rcrl
cmp
in
sbb
rep
shlb
daa
push
and
mov
hlt
lret
jmp
add
dec
scas
jb
or
adcb
push
sbb
jp
mov
mov
andb
sbb
xchg
or
or
mov
push
adc
imul
test
test
in
into
nop
mov
mov
pop
mov
mov
loopne
inc
in
gs
inc
push
stos
or
jnp
in
dec
andl
xor
jmp
aad
xchg
cmpl
test
xor
loopne
sbb
mov
mov
sbb
icebp
es
cmp
into
mov
mov
pop
jl
mov
mov
xchg
setae
es
outsl
aad
pusha
pusha
mov
lea
clc
xor
xchg
xor
pop
stc
push
sub
insl
in
pusha
jae
or
add
lds
scas
call
push
pop
rcrb
test
jbe
nop
or
stc
push
fbstp
pop
call
push
test
shrl
and
fisubs
pop
outsb
les
push
inc
ror
mov
fs
insb
dec
xchg
ja
add
mov
mov
ljmp
out
sub
push
pop
add
mov
fiadds
xchg
dec
mov
movsb
mov
jl
jne
xor
sub
in
outsl
js
mov
sarb
iret
nop
pop
jns
jo
adc
push
daa
fcmovnu
push
cld
mov
sbb
cmp
inc
outsb
adc
add
xor
mov
loop
daa
shl
or
push
push
mov
jb
or
stos
jmp
lods
shlb
pop
dec
mov
movsl
mov
in
dec
test
xchg
push
lds
ret
push
sub
repz
push
jge
adc
xchg
popa
or
push
imul
cmp
xchg
aaa
mov
rorb
loope
sbb
shrl
xor
int
adc
in
rcrl
and
sahf
mov
fwait
inc
test
inc
scas
dec
dec
mov
pop
sti
push
cmp
jno
sub
mov
jbe
xchg
lds
dec
mov
push
adc
mov
cwtl
das
jecxz
stos
xor
loop
xor
stos
cld
jne
jle
cmp
pop
dec
cmp
xchg
popa
dec
or
push
rcrb
mulb
lock
inc
xchg
push
dec
fdivl
dec
aam
inc
in
rorb
jae
lds
rcr
sti
mov
aas
jnp
adc
fsub
mov
stos
sub
cmpsb
fistpll
popa
sbb
push
mov
int
pop
pusha
xchg
jmp
test
xchg
dec
lds
gs
aas
xor
sbb
mov
inc
das
out
idivb
mov
jno
push
xchg
shl
lret
es
push
fcmove
into
xchg
daa
icebp
sub
cli
int3
pusha
sub
notl
shlb
fcmovnu
mov
dec
repz
pop
inc
pop
into
add
pop
pop
outsl
and
jp
cltd
insb
shrb
arpl
lods
clc
dec
bound
xor
cmp
mov
adc
mov
cmc
xchg
sbb
sub
mov
and
and
add
sbb
testb
xor
ja
inc
or
aad
cmc
test
cmpsb
dec
push
cmp
xchg
call
and
mov
jle
rorl
inc
addr16
ret
movsl
faddp
cmpsl
inc
aad
sub
icebp
adcb
mov
xchg
sahf
dec
loop
jbe,pn
cmp
jmp
lahf
aad
test
sbb
out
mov
dec
test
in
pop
jnp
adc
inc
jecxz
cwtl
inc
push
inc
pop
inc
mov
addb
ret
leave
test
inc
pop
iret
arpl
mov
inc
nop
sub
loopne
xchg
stos
sbbl
mov
out
jecxz
cli
jg
jecxz
xor
jbe,pn
test
sahf
ss
mov
lock
arpl
orl
cmp
and
and
shr
mov
jmp
or
popa
lock
dec
cli
xor
test
mov
push
mov
cmp
or
arpl
dec
leave
xor
xchg
es
inc
add
push
cmp
add
lods
jb
mov
or
xlat
vmread
aas
cmp
int
push
push
fstpl
arpl
sarl
mov
gs
sub
je
mov
loope
pop
in
xchg
je
cld
dec
xor
push
testb
gs
out
sbbl
mov
push
jmp
movsl
xchg
jb
das
loop
arpl
cltd
mov
push
adcb
xchg
cwtl
sti
ja
js
std
push
mov
or
stos
test
std
mov
fmuls
and
cmpsl
push
std
jo
cwtl
imul
add
adc
dec
or
lods
rorl
push
mov
dec
and
adc
xor
push
jg
or
repnz
and
add
mov
lahf
aaa
movsl
sahf
bound
lret
xchg
mov
xor
or
mov
pop
xchg
push
sbb
sbb
sti
sbb
jp
lret
insl
out
jl
push
xchg
adc
mov
fildl
mov
ret
popa
push
xor
lea
and
or
xchg
push
enter
in
dec
cmp
clc
lret
pop
dec
inc
xchg
xlat
mov
push
add
fistpll
arpl
fstpt
leave
repnz
jmp
mov
daa
cwtl
adc
stos
test
rcll
adc
lods
cs
fwait
pop
xorb
aam
sar
and
stos
je
cmpsb
push
jmp
and
ror
je
jg
ficoml
mov
pop
push
jnp
push
pop
push
outsb
cmpsb
push
xor
addr16
jno
aas
mov
aad
mov
pop
movsb
mov
data16
jno
cltd
out
adc
and
xlat
ss
push
aad
outsw
pop
dec
mov
xor
lea
mov
xlat
adc
xchg
dec
popa
push
pop
test
decb
adc
sub
fiaddl
movsl
pop
and
xchg
and
sbb
je
adc
mov
pop
cmp
out
outsl
dec
fmul
inc
fisttpll
subb
ja
lret
lcall
xchg
dec
adc
stos
out
xchg
adc
fdivl
rclb
int
cld
mov
icebp
mov
jl
andb
cld
es
cmc
xor
outsl
outsb
fiaddl
cmp
shlb
dec
shll
lcall
jne
ror
mov
xor
js
mov
popa
adc
cli
in
movsl
cmp
mov
push
pop
sub
orb
sub
test
sub
mov
xchg
xor
repnz
loope
cltd
scas
xor
mov
xchg
dec
mov
lret
push
pushf
andl
fwait
sub
pusha
popf
ret
pop
inc
sahf
pop
and
push
das
out
mov
dec
cmp
out
jl
push
std
add
scas
jmp
in
mov
pop
scas
sub
popf
lea
lret
nop
in
into
cmp
lods
mov
jecxz
pop
mov
adc
lea
subl
dec
push
add
sbb
cwtl
mov
out
jecxz
test
xchg
daa
add
sbb
xor
repz
cmp
outsl
mov
lods
cmp
and
cmp
xchg
out
pushf
add
push
shlb
insl
push
dec
add
jb
mov
pop
push
pop
xor
aad
repnz
mov
dec
pop
add
cmovne
mov
xchg
or
inc
stc
ds
push
xchg
test
mov
mov
cmpsl
mov
sti
movsl
fisubrl
adc
out
jecxz
sbb
xor
into
dec
clc
test
inc
arpl
mov
push
cs
push
das
jmp
lret
jge
outsb
pop
leave
xor
inc
daa
mov
in
jp
dec
ljmp
pop
repnz
cmp
dec
lea
or
repz
ds
jp
dec
ja
cld
cmp
test
stos
int
or
mov
add
ljmp
sub
and
cmpb
in
repnz
test
sbb
fwait
pop
dec
sub
push
int
jne,pt
ficoml
mov
lods
lahf
add
inc
jle
push
sbb
repz
push
push
fmul
push
enter
por
or
jnp
divl
in
and
stc
pop
push
sub
jge
jl
in
popf
addl
mov
scas
sahf
fcomps
inc
nop
pop
cmp
xchg
inc
push
aam
push
xor
out
dec
std
dec
pop
pop
jl
shlb
dec
dec
sub
repnz
mov
push
pop
mov
cmpsb
xor
inc
xor
add
sti
jg
xchg
pop
and
add
out
dec
sarl
push
out
repz
into
add
mov
mov
and
sub
push
stos
shrl
or
push
dec
push
fnstsw
adc
in
imul
push
mov
in
xchg
cli
lods
adc
mov
int3
scas
sarl
add
out
repz
xorl
cli
mov
push
pushf
xor
into
jmp
imul
call
mov
push
push
js
test
jnp
push
rcl
imul
cltd
xor
jecxz
mov
ret
pop
xchg
xchg
dec
sti
adc
mov
jl
xorb
inc
aas
push
push
cmp
leave
ljmp
sub
inc
out
pop
pop
inc
insl
outsl
mov
and
out
xchg
clc
int3
popa
sbb
stos
add
pop
cmp
into
lods
push
andb
dec
loop
insb
rolb
fs
adc
ss
rcrl
out
push
xchg
dec
mov
popa
push
xlat
cmpsl
aad
push
imul
cmp
adc
mov
lahf
shll
mov
adc
mov
or
adc
xchg
cmp
sbb
and
fildl
out
sub
inc
dec
mov
mov
pop
ss
sti
mov
movsb
xchg
adc
mov
mov
mov
test
jns
xor
fstps
mov
jae
mov
push
dec
jb
xor
fstps
mov
stos
lcall
and
mov
mov
stos
jno
aaa
pop
add
jne
addr16
data16
push
outsl
adc
cmp
pop
adc
inc
push
in
inc
jge
cmp
xchg
into
or
vmwrite
push
push
outsb
jb
or
insb
push
add
mov
test
jo
sbb
cmpsl
dec
push
push
fisubrs
xor
pop
data16
jns
jg
faddl
arpl
sbb
inc
shl
stos
popa
movl
mov
lods
mov
fiaddl
mov
xchg
pop
stos
lret
and
pop
pop
jne
push
jae
push
dec
adc
shr
test
sub
iret
idivb
push
rcll
jno
and
adc
cmp
and
sbb
push
xor
lods
test
mov
lcall
ss
add
pop
pop
sub
mov
cmp
xor
push
shrl
test
ja
mov
pushl
out
dec
sti
inc
xchg
push
enter
lahf
stos
outsl
push
xor
sbb
ss
mov
jge
sbb
lret
ss
lcall
sbb
jecxz
mov
scas
das
add
pop
jnp
sub
repz
das
dec
es
arpl
es
add
inc
stos
cli
ds
cmpsb
pop
add
push
outsb
insb
xlat
mov
addr16
in
enter
add
movsl
int3
scas
int3
bound
sub
mov
push
jg
push
aas
mov
inc
test
adc
pop
sub
pop
jno
rclb
mov
call
das
cs
inc
push
xchg
hlt
les
in
mov
aad
rorl
or
bound
push
in
adc
cmc
aam
mov
jl
mov
je
int3
xlat
fsubs
jmp
fninit
sti
xchg
add
and
cltd
fisubrs
sahf
push
jl
mov
adc
inc
jns
add
js
and
adc
cmp
push
mov
sub
lea
cmp
pop
cmp
inc
repnz
enter
or
lods
fidivrs
loope
pop
daa
push
xchg
pop
adc
ss
movsb
pop
pop
inc
inc
push
xchg
mov
fs
fimull
clc
addr16
lcall
sbb
xchg
dec
mov
pop
mov
xorl
test
hlt
cld
mov
sbb
jp
jno
sbb
adc
sbb
pusha
xchg
imul
rolb
icebp
xor
push
push
sub
sub
xchg
ljmp
loope
adc
push
add
push
xor
out
push
push
stos
cmp
lds
out
push
aam
fdivrs
ret
push
push
inc
ja
lahf
push
dec
xchg
das
repz
ret
pusha
mov
fisttpl
scas
and
push
aam
jne
gs
addr16
sub
imul
repnz
lea
adc
jne
jge
mov
fcoms
add
add
ljmp
xor
jl
dec
add
shll
jnp
lea
loope
sbb
leave
sbb
pop
icebp
outsb
aaa
add
inc
mov
leave
jmp
mov
aas
stos
incl
sub
aam
inc
ljmp
push
stos
movsb
imul
ds
sub
mov
xorb
mov
dec
sahf
adc
xchg
movsl
stos
sahf
adc
dec
in
add
cltd
mov
arpl
add
call
jmp
mov
test
rorb
or
je
mov
push
pop
rclb
fcom
popf
xor
das
repnz
popf
or
fldt
add
cmp
out
jnp
movb
sub
ficoml
jo
adc
test
fisttpl
cmpsl
std
leave
filds
subb
sbb
jae
mov
scas
aas
xor
mov
in
lods
daa
mov
mov
adc
scas
test
stc
sub
loopne
pusha
cmp
aaa
jmp
push
xchg
sbb
aas
mov
jns
mov
inc
lahf
adc
push
mov
push
sbbb
jl
or
rcr
add
adc
enter
xor
mov
mov
add
test
mov
cmpsb
push
dec
call
fistl
das
out
sbb
dec
arpl
sahf
pop
scas
clc
adc
xorl
dec
jb
in
jns
jge
imul
jmp
loopne
dec
mov
push
inc
shll
scas
lock
push
add
jmp
sub
bswap
sub
ret
add
jecxz
sbb
mov
rclb
cmp
push
xchg
jo
dec
ret
in
test
jle
div
fwait
repz
adc
xlat
aaa
cmpsl
popa
sub
std
movsb
test
sub
jb
and
push
mov
add
add
push
popf
push
psllq
inc
das
mov
in
out
pop
in
push
cwtl
int
add
cmc
das
mov
leave
push
movsb
aas
clc
pushf
inc
inc
push
xchg
iret
loopne
jg
sahf
mov
std
push
push
imul
jmp
ja
xchg
mov
movsl
xor
mov
aam
out
inc
in
jo
daa
ss
and
and
rcr
jae
lret
mov
int3
sahf
pop
mov
mov
mov
mov
daa
cli
add
mov
push
cs
cltd
pusha
outsb
pop
and
ds
movsl
push
pop
std
mov
push
xchg
cmp
dec
sti
cmp
cmc
insb
mull
xchg
xchg
push
movsb
sbb
cmp
test
in
in
nop
add
mov
push
clc
ret
dec
pop
mov
pop
imul
enter
inc
xchg
shlb
aad
and
cltd
je
mov
fs
jl
imul
sbb
nop
add
es
sahf
mov
int3
cmp
dec
xor
xchg
xchg
iret
int
arpl
xor
std
xchg
cltd
fbld
xor
add
sub
pop
mov
xchg
and
push
popa
mov
jnp
add
out
dec
jne
inc
jecxz
and
sbb
addr16
sbb
mov
popf
push
into
clc
mov
pop
adc
test
addr16
imul
mov
jns
jle
adc
or
dec
fstpl
in
mov
xor
icebp
adc
or
inc
insb
sbbl
dec
aad
and
mov
and
xchg
sbb
cmpsb
push
out
nop
mov
sbb
fwait
inc
add
pop
sbb
pop
addr16
add
xchg
or
out
jecxz
pop
loopne
cmp
add
adc
add
ret
aad
lock
mov
movsl
jecxz
shlb
cmpb
ja
push
out
inc
shrb
in
mov
jb
test
dec
dec
xor
or
bound
dec
imul
clc
popf
test
popa
mov
outsl
mov
jecxz
movsb
pop
icebp
test
mov
xchg
lret
and
ds
ret
push
pop
xchg
sub
insb
punpcklwd
jne
outsl
adc
mov
sbb
pop
andb
into
push
test
into
adcl
add
push
pop
nop
out
sub
test
call
push
int3
push
mov
nop
inc
jle
mov
ds
cmpsl
xor
loop
aaa
stos
jns
in
insl
cmc
and
in
popl
loop
fs
fildll
sbb
in
sbb
imul
inc
xchg
rorb
add
out
outsb
sub
pxor
or
test
fsubr
pop
insb
out
out
lret
bound
cs
dec
sbb
sub
repnz
sarl
adc
pop
mov
outsb
int
es
xchg
adc
mov
ret
mov
and
xchg
and
in
and
pop
or
mov
arpl
and
pop
jno
lahf
repnz
orb
lds
sub
mov
add
and
add
xchg
push
mov
xchg
pop
fildll
test
xor
test
mov
sti
xor
fldenv
mov
add
inc
and
cs
adc
out
popa
xchg
dec
pop
mov
js
xlat
out
insb
pop
je
cld
cmp
mov
push
xlat
inc
pop
hlt
cmp
inc
fnstsw
inc
sbb
das
mov
add
push
mov
and
lret
jcxz
jmp
lahf
shrl
nop
adc
imul
cmpl
push
jne
scas
scas
jno
cmp
lds
or
lret
outsl
enter
out
or
jp
cmpsl
mov
andl
adc
cmpsl
jae
movsl
mov
or
hlt
push
mov
fcmovb
push
arpl
and
inc
sub
lahf
xor
mov
jmp
out
lahf
loop
or
add
daa
in
lret
fsubl
lahf
cmp
mov
inc
add
imul
and
movsl
xlat
stos
out
dec
sbb
mov
in
js
cmp
mov
je
rcrl
cmp
enter
andl
fidivrl
out
cmp
mull
xor
icebp
push
cmp
insb
rorl
adc
aad
jb
mov
sub
pop
pop
iret
inc
sbbl
inc
rcll
cmp
icebp
inc
syscall
sub
fisttpll
scas
std
add
clc
stos
mov
dec
ss
inc
rcr
cmp
lds
fucomp
pushf
lahf
push
jmp
mov
ljmp
mov
enter
add
push
and
out
lods
pop
neg
test
adc
imul
dec
les
loop
mov
or
push
xchg
aam
icebp
sti
leave
jo
enter
inc
popf
gs
or
in
stos
or
pop
jbe
xchg
lcall
xchg
inc
cmc
or
sti
loop
xor
insl
mov
cwtl
mov
adc
sti
add
aas
pop
out
ss
fisttps
les
imul
inc
mov
popa
int3
push
or
xchg
cld
mov
movsl
xor
inc
mov
fsubrl
ror
mov
mov
dec
jne
cmp
adc
mov
jecxz
push
push
push
sub
icebp
jae
or
fiaddl
stos
mov
lds
ficoml
mov
enter
adc
jle
mov
xor
lret
rcll
dec
pusha
lret
adc
cmpsb
out
mov
bound
test
and
stos
outsb
test
and
add
mov
fnstenv
and
mov
imulb
mov
mov
jno
sbb
xchg
js
jo
ds
pop
outsb
cs
fisttps
sub
cmc
mov
js
stc
repnz
sub
scas
cmp
adc
aam
loope
cmp
popf
sbb
jg
shrb
xor
inc
test
inc
imul
loopne
test
pop
add
mov
xlat
lcall
sub
and
leave
int
ss
int
mov
out
call
in
push
mov
mov
add
sub
mov
adc
out
roll
js
lret
add
xor
add
xlat
stc
xchg
decl
movsl
or
mov
or
addb
mov
cmpsl
sti
mov
insb
cmp
sti
or
push
ja
sub
xor
and
adc
and
stos
xchg
xchg
mov
aaa
push
test
std
add
mov
adc
insl
xchg
out
pop
insb
push
mov
les
jnp
push
aaa
bnd
mov
dec
sub
mov
pop
call
or
test
mov
fs
je
jg
and
jo
repz
jb
xor
repz
sub
cmp
fcoml
fstpt
scas
add
stc
icebp
sub
mov
jb
lcall
pusha
ja
std
movsl
xor
pop
popf
xor
or
pop
scas
in
fcmovne
ret
mov
lods
mov
repnz
mov
and
sbb
loopne
push
sub
std
pop
shrl
aad
fisttpll
xor
data16
mov
addr16
adc
mov
movsb
int
add
enter
rolb
sbb
jae
sti
leave
test
xchg
in
push
inc
jo
pop
out
lcall
sub
mov
test
mov
lcall
or
ficompl
lret
dec
jp
mov
jg
mov
sbb
popa
popf
fwait
jno
xor
std
pop
xchg
or
shll
adc
inc
insl
aad
mov
insb
and
ss
fdivl
lods
adc
cmp
pop
cli
mov
xor
mov
ds
or
popf
jne
inc
mov
test
push
aas
divl
in
ss
sti
jl
mov
addr16
cmc
lea
fcomps
mov
mov
es
std
lahf
pop
mov
addl
mov
out
pushf
add
inc
push
fisubrs
xchg
lds
aaa
mov
xor
dec
shlb
push
icebp
add
mov
or
dec
xor
sub
iret
inc
or
cwtl
mov
es
das
cmp
pop
clc
and
lods
sub
and
cmp
out
and
stos
mov
sub
sbb
pop
neg
icebp
in
xor
mov
nop
in
in
hlt
lret
cmp
movsb
fisttps
or
push
call
movsb
jl
dec
int
adc
and
dec
dec
add
xchg
out
jle
mov
xchg
mov
rorl
jmp
mov
push
pop
jecxz
sub
fisubl
data16
ljmp
inc
cmp
cmc
mov
jmp
pop
push
int3
stos
pop
pop
ljmp
test
aaa
inc
lods
pop
les
add
pop
gs
lds
mov
mov
xchg
dec
jnp
jno
dec
add
test
xchg
shll
aad
cltd
fildl
scas
out
ss
aas
xchg
inc
fsin
ret
lods
dec
pop
lea
sbb
inc
movsb
fisttpl
movsl
adc
push
das
repnz
aad
jb
mov
test
shll
xchg
mov
mov
pop
dec
hlt
fisubrl
xor
neg
inc
dec
xor
andb
loope
jae
or
dec
xor
aas
pop
sar
xor
int
mov
repz
enter
aad
inc
pop
das
test
ss
cmc
jo
sub
cs
jp
or
mov
mov
scas
sbb
popa
notb
push
rclb
out
imul
mov
xor
aaa
add
inc
fidivrl
xor
jbe
fwait
adc
pop
fimull
lret
push
mov
cmpsb
sbb
pop
loop
in
rcll
pop
mov
xchg
mov
test
cmpsb
mov
jecxz
ds
push
testb
cmc
and
xchg
jecxz
into
sub
mov
xchg
jmp
sahf
cltd
jg
negb
mov
dec
aas
add
push
fldenv
fildll
data16
jle
les
jb
sahf
pop
sbb
daa
lods
out
or
testl
call
ja
outsb
pcmpeqb
cwtl
repnz
imul
test
imul
imul
mov
fisubl
mov
pop
sub
xchg
mov
pop
mov
inc
insl
insb
jecxz
and
push
cmp
mov
js
sbb
jnp
hlt
mov
ljmp
cmp
lahf
gs
outsl
lock
lds
ret
add
sub
stos
dec
jp
sahf
cltd
aad
jo
push
int
pushf
jmp
sub
out
into
movsl
cmpsl
clc
hlt
jmp
jbe
ret
mov
stc
mov
cmpsb
ret
inc
aam
icebp
mov
inc
ret
pop
popa
movsl
mull
and
sub
test
test
dec
cmp
lahf
mov
xchg
sbb
inc
or
popa
inc
sbb
cltd
les
movsb
xor
fildl
push
lcall
mov
outsl
xchg
shll
add
ret
mov
cmp
clc
movsb
pop
popa
mov
enter
pop
out
dec
jmp
or
pop
sbb
stos
dec
fistps
xchg
jge
shrl
fimull
pop
jp
xor
into
jle
or
jb
clc
fisubrl
xchg
clc
and
clc
ja
inc
push
cmp
cmp
jae
jl
enter
arpl
dec
adc
mov
adc
xchg
mov
iret
frstor
push
pushf
sub
inc
or
jbe
xchg
das
subl
cmp
lds
cwtl
fnsave
lcall
daa
push
test
pop
cwtl
rcrl
ret
cmp
jmp
inc
cltd
or
or
dec
gs
aaa
jne
movsb
psadbw
ror
cmpsb
dec
iret
in
jnp
popf
adc
idiv
in
mov
xor
push
xchg
mov
xchg
repz
lods
xchg
cli
leave
je
ss
rorl
mov
cs
dec
stc
dec
fadds
je
fwait
rorl
xchg
cmpl
inc
loop
jns
pop
lcall
stos
jo
cmp
push
bound
jbe
adc
push
and
mov
pop
lahf
and
mov
jnp
mov
ljmp
rorb
mov
jb
icebp
lods
jne
inc
aas
adc
mov
lock
xchg
in
je
pop
inc
sbb
fs
inc
pushf
icebp
test
cmp
bound
xor
or
sti
das
lret
inc
jge
aam
add
xchg
lea
fwait
sti
ds
into
rcr
pop
scas
daa
lret
push
mov
fmuls
fwait
js
loopne
jne
ss
xchg
fadds
stos
add
dec
dec
push
loope
jg
mov
xor
loop
and
mov
mov
insb
stc
rcrl
cmp
into
add
mov
nop
adc
daa
fstps
pop
inc
push
fisubl
mov
fisubl
add
jns
ja
pop
add
mov
xor
sarl
push
ficomps
mov
insl
stos
xchg
cmpsb
push
push
mov
inc
arpl
or
sbb
sti
jno
pusha
jle
or
shlb
adc
inc
sbb
adc
jge
cmp
insl
ss
pop
sbb
add
cmp
in
addr16
pop
les
add
aam
aam
inc
adc
or
outsl
push
in
xor
jmp
les
jae
add
or
dec
rcll
pushf
cmp
xor
cmpsl
addr16
push
mov
mov
jae
and
aad
in
aam
jl
enter
outsl
inc
and
incb
push
loop
lret
icebp
scas
and
mov
test
fists
xchg
jne
loopne
out
js
outsl
jmp
divb
int
int
movsb
jo
push
inc
sbb
inc
insl
sbb
add
mov
pop
mov
movl
in
jno
and
push
push
icebp
push
mov
xchg
loopne
popf
out
adc
push
add
stos
sbb
xchg
fs
mov
jno
clc
add
negl
dec
pop
fists
das
adc
jbe
push
add
fisttps
icebp
xor
in
sub
mov
fs
neg
test
into
jl
in
pusha
xlat
add
add
dec
pop
hlt
pop
outsl
and
mov
lock
xchg
rcr
inc
mov
cmpsl
rcrb
and
pop
pop
xor
cli
test
jecxz
fcomps
leave
jne
sbb
lds
mov
mov
aad
enter
jns
lods
icebp
fisubrs
mov
mov
sub
icebp
mov
mov
pop
loopne
or
call
sbb
outsb
cwtl
imul
cld
pop
sbb
xchg
cmc
xchg
push
fists
mov
dec
and
sar
jge
sub
sub
je
mov
int3
pop
stc
adcb
mov
mov
cld
mov
add
sbb
cltd
mov
sub
data16
mov
popf
scas
ret
mov
cmp
and
in
cmpsb
imul
mov
mov
leave
test
push
xor
push
inc
sbb
pop
sbb
js
inc
js
jge
inc
ljmp
sbb
mov
cltd
clc
add
mov
fdivs
mov
mov
cmpsb
aad
or
scas
xchg
mov
add
loop
es
in
xchg
fstpl
push
gs
lret
and
sub
adc
subb
pop
divb
rcrb
imull
pushf
sti
aaa
mov
inc
and
cwtl
sub
ss
out
jo
pop
test
fsts
or
mov
sub
arpl
mov
sbb
mov
mov
lret
add
std
push
mov
or
test
xor
arpl
sahf
ret
mov
sahf
out
cltd
mov
push
mov
scas
and
mov
andl
sbb
sahf
mov
pop
ss
dec
xor
cmp
pusha
hlt
es
test
scas
cwtl
push
imul
sbb
loop
stos
add
movsl
xchg
fildl
inc
sub
xchg
cmp
js
repnz
nop
neg
xor
mov
add
jns
aad
inc
aam
push
pop
or
gs
fwait
cmpsl
and
inc
sub
clc
adc
das
lods
outsl
and
aam
cltd
inc
adc
sub
aas
push
test
push
bound
xchg
add
lock
out
sbb
loope
fs
mov
gs
std
lcall
mov
push
sub
or
shrl
add
pop
and
jae
hlt
dec
mov
and
jns
push
and
xchg
loopne
sbb
int3
clc
dec
jmp
lds
adc
push
sbb
dec
sar
dec
mov
cmp
pop
and
adc
mov
je
divb
push
in
movsl
shlb
scas
test
sub
jb
dec
js
outsl
mov
cmc
shll
icebp
movsb
pop
enter
xchg
nop
sbb
sahf
sub
mov
or
sbb
xlat
mov
mov
mov
xor
stc
ret
dec
jp
mov
insl
jb
and
mov
jecxz
je
xchg
in
mov
mov
hlt
sahf
xchg
add
hlt
jo
mov
sbb
add
pop
push
push
in
push
push
jg
lcall
and
sbb
xchg
push
sbb
daa
mov
xchg
xor
inc
imul
jo
and
push
leave
pop
cmpsb
push
loopne
sahf
mov
ret
fsubrl
pop
adc
nop
bound
jl
sub
popa
jecxz
fsqrt
mov
jne
and
and
inc
pop
insb
aaa
gs
or
mov
loop
mov
adc
jmp
mov
push
sbb
mov
vmovss
dec
or
adc
jae
out
xchg
subb
enter
and
mov
in
std
sub
sahf
push
mov
aam
addl
sub
cwtl
ret
push
cld
faddp
mov
pop
sbb
mov
andb
adc
add
pop
leave
sub
daa
nop
jge
mov
dec
pushf
fsubrs
aad
fnsetpm(287
movsb
aam
lcall
mov
ljmp
jmp
jo
adcl
loopne
or
pushf
pop
ret
lea
clc
pop
mov
inc
xor
dec
lret
xchg
subb
or
std
arpl
cmp
notb
pusha
xor
adc
adc
loop
sbb
in
mov
mov
mov
xlat
sub
xor
pop
xor
pop
sbb
sub
dec
hlt
xor
imul
mov
sbb
aas
ficomps
shl
fnstenv
jge
add
jb
adc
and
mov
rclb
lds
lods
and
dec
and
pop
sbb
push
popf
int
js
lret
test
push
ljmp
inc
and
arpl
mov
and
jg
dec
adc
addr16
jne
add
rcrl
inc
mov
mov
lods
adc
mov
loop
or
loope
or
mov
mov
cmp
cmp
cmp
mov
lcall
clc
icebp
lahf
gs
andb
cmp
mov
imul
adc
loope
rorb
rcrl
cwtl
jo
mov
sbb
dec
mov
lahf
cltd
xchg
aam
adc
dec
mov
lock
push
xchg
insl
xchg
mov
sub
jo
pop
xchg
scas
bound
cmp
mov
fs
add
test
cmp
stos
xchg
sub
or
jb
outsl
cmp
imul
fcompl
aad
and
movb
inc
rclb
shl
cmp
push
repnz
leave
and
fisubs
jo
dec
ficompl
cs
mov
std
jnp
cltd
in
cltd
xor
mov
sub
xor
pop
xchg
scas
dec
int3
lret
jge
fdivrl
fidivrs
data16
addr16
pop
adc
call
test
or
push
in
stos
pop
stc
mov
dec
lods
add
and
xor
addr16
xor
adc
out
push
sub
clc
dec
jecxz
jo
sbb
xchg
add
xchg
xchg
inc
testb
xchg
push
fucomip
stc
loopne
or
outsb
fisubrs
push
cmp
dec
movsl
fstpt
je
and
xchg
inc
mov
out
push
popa
loope
repnz
mov
rolb
mov
add
cmp
movsb
jbe
ja
into
jge
fnstsw
adc
xor
adc
ret
dec
popa
test
ficoml
xchg
jmp
push
lahf
adc
mov
sahf
cmp
mov
das
lcall
scas
dec
test
cwtl
popa
push
mov
inc
and
aas
nop
push
jg
mov
mov
push
adc
xorb
leave
pop
out
sbb
ja
add
xor
iret
pop
lods
pop
repz
out
leave
loopne
fs
and
aaa
or
mov
arpl
cmp
movsl
fwait
call
push
adc
stc
mov
xor
mov
aaa
adc
mov
sbb
dec
adc
test
pop
fbstp
out
negl
je
xor
repnz
cs
cltd
push
addl
inc
jge
xchg
xchg
jne
sbb
and
jge
push
scas
push
ja
dec
test
fldl
add
ja
sbb
lds
mov
cmp
imull
pop
ss
je
movsb
popa
add
repz
js
sbb
sbb
fnstcw
jne
push
and
adcb
sub
inc
adc
cli
bound
cmpsl
sarl
xor
aam
jne
adc
jno
les
xor
shr
insl
loopne
or
inc
mov
sbb
aaa
jne
mov
ds
ret
xchg
fs
fistl
aam
sbb
dec
or
fstps
push
jp
or
arpl
mov
pop
cld
adc
mov
imul
push
popf
mov
loopne
out
leave
ss
jl
sub
and
fnstsw
outsl
sub
out
rcr
pop
test
out
xchg
test
xor
or
fmull
ljmp
pop
pop
les
pop
xchg
inc
or
ret
or
xor
adc
xor
dec
push
cmp
clc
mov
sarb
es
popa
mov
push
lds
scas
fcmovnbe
stos
out
jnp
mov
mov
sub
movsb
lods
xchg
mov
loope
mov
notl
inc
pop
repnz
sbb
sbb
outsl
insb
push
inc
and
int
mov
add
mov
in
cmc
sahf
sbb
pop
imul
jmp
inc
sbb
push
mov
je
fwait
mov
shll
in
fs
sub
pop
scas
add
push
add
pop
scas
mov
stos
sbb
adc
cwtl
negb
pop
rcl
insb
fimull
int3
pushf
cmp
ret
push
mov
xchg
xor
ja
out
mov
lahf
add
imul
add
outsl
dec
cmp
into
pop
loopne
push
xor
pop
mov
mov
mov
adc
mov
insb
out
xchg
xlat
push
add
xchg
shlb
xor
test
cli
hlt
out
bound
or
sti
adc
insl
nop
outsb
push
push
add
loop
cmp
out
negb
push
push
mov
js
sbb
es
add
add
xlat
cmp
in
sbb
push
in
in
and
and
sbbb
inc
mov
sub
insb
arpl
mov
mov
xchg
dec
adc
xchg
dec
bound
inc
jns
dec
aad
sbb
fprem1
sub
sbb
or
sbb
out
mov
dec
cmp
xor
sub
repnz
jnp
jge
push
xlat
mov
and
and
frstor
sbb
enter
addb
sbb
nop
jge
imul
pusha
pop
add
push
lahf
lods
pushw
fwait
cmpsb
js
add
fyl2xp1
test
mov
pop
arpl
rolb
lret
mov
addr16
pop
xchg
adc
das
in
add
mov
mov
and
pop
rorb
sub
mov
inc
lahf
cmp
gs
and
fadds
mov
les
or
nop
pop
jl
sbb
call
fsts
sbb
test
xlat
loopne
test
push
popa
shll
jmp
or
mov
or
pop
cmp
pushf
cli
add
pop
cmp
loopne
xchg
add
lahf
dec
sub
mov
add
cmpsl
repnz
mov
mov
inc
mov
add
popf
jnp
sbb
dec
jo
inc
sub
pop
cmpsb
sbb
push
mov
aam
jle
lock
roll
insb
xor
sbb
lahf
sbb
mov
out
outsl
dec
lahf
shlb
fadds
fs
aad
push
sbb
xor
jl
lret
xchg
sbbl
and
dec
addr16
dec
xchg
and
or
sbb
out
xchg
xchg
and
jl
in
cmc
push
sbb
lock
xor
pop
in
dec
fiaddl
sub
arpl
mov
push
mov
sbb
jno
cmp
dec
sbb
in
lcall
and
jns
pop
lock
jnp
mov
or
out
dec
mov
cmpsl
sub
push
dec
inc
jle
lret
in
cltd
fdivp
testl
fcmovb
fiadds
push
out
idivl
lea
jecxz
mov
pop
mov
loopne
cmc
adc
fwait
push
cmp
add
sbb
nop
inc
aad
scas
add
arpl
xor
int
adc
insb
flds
jo
fldt
pop
jne
mov
cmp
outsl
mov
xorb
adc
inc
std
mov
mov
dec
popf
mov
sti
aad
xchg
shrl
adc
fldt
into
adc
divb
fs
dec
in
je
ror
push
xor
xchg
sbb
add
mov
xchg
mov
loope
jns
popf
into
in
in
ds
rcrb
sarb
xor
jae
xchg
adc
divl
mov
xchg
pop
addr16
int
mov
xorb
loope
push
jmp
or
push
add
leave
in
mov
test
dec
enter
dec
outsb
adc
int3
cmpsb
shll
fwait
cmpsl
adc
jl
push
in
pop
and
cmp
mov
shlb
xchg
xchg
push
push
sbb
or
xchg
adc
cwtl
xor
mov
loop
rcll
xor
cmp
call
shl
mov
outsb
mov
es
bound
fbstp
jmp
pop
in
lea
cmp
pop
dec
push
jge
adc
mov
mov
andl
ljmp
sbb
mov
cs
dec
repz
sub
cltd
test
nop
in
jmp
sbb
imul
mov
in
xlat
sub
mov
add
outsb
cmpsl
inc
jmp
jg
xor
and
pop
mov
add
sbb
sbb
mov
mov
lds
insl
push
push
imul
shlb
inc
nop
add
iret
lods
xchg
lahf
dec
jae
cmpsb
rcl
push
cwtl
out
sti
cmp
sub
dec
mov
lret
loope
adc
xor
aaa
sub
sarb
jmp
outsl
adc
adc
add
loopne
mov
cmpsl
mov
lahf
add
cmp
xchg
fstl
stos
dec
mov
xor
jnp
std
sub
dec
jp
xchg
cmp
and
mov
pop
shlb
in
xor
aaa
jbe
mov
stos
scas
jb
mov
iret
in
push
xchg
mov
lds
stos
pop
push
ret
push
pop
mov
dec
popa
std
push
xchg
shll
adc
jp
decb
ljmp
ds
lea
jbe
adc
ret
aas
push
dec
pop
neg
rcrb
aad
add
jle
mov
or
cwtl
mov
jmp
and
out
outsl
call
push
shll
cwtl
popf
xchg
out
or
sahf
sub
fwait
pop
lock
into
cmp
je
mov
xlat
mov
sbb
in
mov
cmp
pop
enter
ss
fdivr
loop
lock
movsb
icebp
pop
or
test
xlat
lret
jecxz
pop
movsb
aad
in
add
inc
jl
dec
adc
aas
adc
adc
mov
pop
dec
xchg
push
sti
adc
cmpb
lahf
adc
cmp
mov
rclb
aam
jp
test
mov
icebp
pop
mov
fildl
testb
stc
jmp
inc
loope
sub
cmp
scas
cmp
add
cmpsl
fcmovnu
cli
push
outsb
xchg
pop
test
push
pop
pusha
ja
sub
jno
mov
sub
adc
dec
xor
out
std
fwait
xchg
or
repz
loopne
popf
dec
stos
clc
ret
imul
faddp
cmpb
sbb
cmp
jae
and
jl
fstps
adc
insl
out
push
jmp
lret
mov
popa
adcl
cmpsb
out
or
sar
popf
leave
outsl
adc
roll
jb
dec
mov
adc
mov
cli
mov
sbb
and
nop
in
scas
imul
push
jo
pop
jmp
scas
outsb
push
ss
ret
pop
je
lds
mov
aas
fisubs
add
outsl
sbb
flds
aas
inc
std
sub
jl
push
outsl
loopne
jge
ljmp
xor
and
lret
dec
inc
test
cmovle
out
hlt
mov
loope
mov
outsl
mov
scas
inc
cmp
add
in
cmp
stos
xor
and
xchg
in
int3
and
mov
cmp
jmp
sbb
lods
lret
lods
mov
xor
sub
jl
test
in
jne
rcr
ret
pushf
inc
cmp
imul
xchg
rol
sub
inc
mov
nop
xchg
cltd
jo
or
lret
pop
or
mov
ja
xchg
cmp
ficomps
sbb
mov
fistpl
hlt
or
shr
popf
pop
arpl
das
lds
push
mov
mov
movsl
xor
lret
mov
pop
jae,pt
cmp
bound
xor
in
cmc
cli
aam
mov
jp
in
lcall
push
fnstsw
xor
jl
and
xor
call
or
push
incb
mov
dec
add
mov
mov
xor
in
xchg
sarl
call
jp
clc
mov
ret
xor
in
push
sub
sub
das
inc
orl
clc
jmp
xchg
sub
rorl
xor
test
inc
xchg
add
bound
out
stos
int3
scas
xor
inc
out
fs
insl
sarl
xchg
jo
insl
pusha
xor
or
lds
addl
dec
cmc
mov
imul
icebp
aaa
ds
imul
and
popa
xor
sbb
pop
cltd
lds
jge
xor
cli
xor
and
in
jb
jecxz
dec
mov
mov
jge
jmp
or
mov
into
out
jge
bound
xor
or
nop
leave
pop
add
xchg
ret
jb
fwait
scas
sahf
xor
xor
ljmp
sub
jge
or
les
mov
adc
out
lods
cmp
mov
movsl
scas
inc
fisubrs
into
pop
mov
and
mov
stos
jo
lods
mov
mov
push
sub
and
mov
sahf
mov
imul
mov
fistpll
rol
inc
aas
dec
and
in
jmp
sbb
jae
in
test
sbb
mov
jg
stos
dec
cld
rorb
xor
inc
inc
jmp
sbb
cmp
mov
dec
bound
sbbl
and
mov
mov
inc
movl
ret
and
je
mov
cmp
mov
stos
js
pop
popa
mov
push
adc
fcomp
dec
push
fidivrs
mov
or
pop
xchg
push
cli
int3
mov
push
cmp
arpl
int
xchg
arpl
pop
pop
push
xchg
mov
aaa
jecxz
sahf
add
inc
mov
in
fwait
scas
insb
push
cld
das
mov
xchg
mov
in
sub
mov
fucomp
bound
std
mov
pusha
inc
in
stc
imul
sub
add
or
pop
in
push
inc
pusha
sub
xorl
shl
ficomps
fcoms
mov
shll
inc
pop
inc
mov
xchg
push
mov
dec
add
aad
in
jne
dec
mov
ja
cmc
dec
xchg
push
es
ds
outsl
xlat
cmp
sbb
clc
int3
das
jb
jae
push
ss
xchg
das
cmc
jnp
loopne
jp
jnp
popa
mov
int
add
testb
leave
clc
pushf
jge
negl
sarb
cli
adc
mov
adcb
mov
mov
rol
push
call
int
test
cmpl
clc
scas
xchg
lcall
andb
and
cmp
adc
add
mov
out
xor
inc
adc
lods
mov
lock
clc
sub
pop
jae
add
aaa
push
cmpsl
jecxz
shll
add
add
stc
call
and
jecxz
dec
push
cmc
fdivl
stos
mov
dec
test
jb
xchg
inc
xlat
imul
push
cmp
jne
lea
roll
adc
inc
mov
dec
dec
dec
adc
mov
clc
mov
sub
lds
jge
adc
dec
loop
pop
test
arpl
lahf
repz
fcoml
shrb
loope
addr16
sbbl
mov
les
gs
insl
push
jmp
stos
xchg
pushf
pop
adc
jb
lds
lret
idiv
clc
je
bound
mov
push
adc
ss
cmpsb
push
and
push
xchg
loop
data16
dec
inc
adc
idiv
xor
push
lret
test
xchg
arpl
xor
jne
xchg
adc
orl
jmp
loop
lcall
inc
aas
popf
sti
in
bound
push
insl
pop
sub
shl
mov
mov
mov
mov
mov
repz
inc
js
scas
sub
push
popa
mov
insb
add
js
imul
sub
xchg
xlat
mov
clc
enter
aas
fcoml
mov
jecxz
dec
pushf
jmp
arpl
nop
pushf
inc
lcall
lret
jmp
sub
mov
negb
dec
mov
sbb
adcl
das
fdivp
mov
and
push
mov
xchg
xor
push
add
bswap
je
or
in
mov
insb
add
repnz
sbb
jmp
mov
adc
cltd
mov
repnz
cmp
in
cmp
test
adc
ret
add
out
pushf
shlb
push
lods
push
cmpsb
or
mov
inc
shlb
or
mov
xchg
mov
rol
jl
pop
lock
cltd
or
and
fsubp
fdiv
iret
movsb
push
or
popf
mov
xchg
jecxz
xchg
sti
insl
lret
movsb
pop
ds
rorb
push
pminsw
and
cmp
fcoml
pop
mov
shlb
mov
outsb
xor
pop
int
out
aaa
cmp
fistps
scas
fadds
sahf
or
cld
mov
loope
inc
inc
xchg
popf
xor
pop
movsl
and
pop
jno
or
pop
fimull
ds
sahf
out
cmp
jl
out
pop
test
jle
cs
add
aaa
je
ficompl
xor
movsb
jbe
sahf
dec
hlt
and
test
xor
jmp
and
fcmovne
sbb
xor
or
jbe
add
cmp
insl
addr16
cmp
rcrb
add
and
xchg
loope
ficoms
xchg
in
shl
xor
rorl
mov
push
jns
ja,pt
fsubrs
jae
dec
stos
stos
movsl
fstpl
rol
aam
into
ja
stos
cwtl
sbb
sahf
insl
and
xchg
mov
fwait
adc
aas
int
dec
js
repz
push
jo
mov
out
stos
or
fwait
cmp
push
jge
xchg
leave
or
outsl
sbb
test
subl
inc
rcrb
sub
les
fs
notb
in
out
dec
push
inc
jbe
jb
xorl
stc
js
jmp
rclb
or
inc
mov
lahf
cld
movsl
sub
jmp
repnz
out
cld
ja
mov
jb
jbe
orl
popf
xchg
sub
cli
jns
pop
gs
cwtl
lret
lods
in
loopne
add
js
pop
xchg
dec
mov
js
dec
cld
cmp
fnstenv
xchg
test
push
lock
or
pop
sbb
mov
xchg
mov
adc
or
add
das
mov
in
push
mov
hlt
shrb
jbe
sub
dec
jnp
test
stc
xchg
in
nop
pop
jno
cmp
dec
fwait
mov
cs
pop
les
xchg
mov
nop
or
push
into
stos
push
xchg
movsl
mov
ljmp
cmp
incb
adc
jecxz
jbe
inc
into
mov
mov
rcrb
js
or
mov
scas
cmc
jno
nop
insb
add
dec
jecxz
or
hlt
jo
adc
mov
cmp
xor
out
sub
sub
bound
into
fcom
inc
movsb
inc
mull
test
xchg
adc
and
cld
sbb
fcmovb
cmc
loopne
fisubrs
xor
movsl
mov
scas
push
fldt
sub
loop
std
les
stc
mov
leave
push
popa
mov
jl
imul
pop
xchg
jp
inc
or
dec
lds
cltd
add
aam
enter
add
xchg
fcomps
sar
pop
jle
mov
sahf
inc
dec
cmpsb
pop
xor
popa
push
int3
aaa
test
test
add
add
lcall
inc
shll
ret
pop
aaa
adc
pop
xchg
aam
imul
rcll
jno
loop
add
jl
cmp
jg
push
lcall
imul
push
push
and
imul
xor
jb
js
notl
cmpsb
sub
pushf
lret
mov
loop
popa
inc
cmp
mov
sbb
or
adc
addr16
xor
add
jmp
inc
adc
call
loopne
cmp
bound
fisubl
xor
jb
lret
sbb
out
sub
pop
decb
xchg
push
add
js
in
push
dec
xor
sub
xchg
fimull
movsb
aam
push
shl
inc
add
mov
cwtl
jg
iret
loope
imul
mov
sbb
bound
add
jg
fcompl
adc
cmc
cmp
test
scas
shll
mov
mov
cltd
outsl
and
test
fwait
adc
adc
cmpsl
jmp
ss
add
fnstcw
push
adc
jg
lret
pop
ljmp
rcrb
inc
inc
inc
jb
cltd
push
lock
jge
mov
pop
loope
daa
hlt
ret
adcl
pop
sub
js
fs
fisttpl
flds
mov
cmp
push
push
or
mov
mov
mov
or
hlt
vpcompressq
ret
mov
scas
iret
js
out
or
cmp
mov
nop
or
jg
mov
mov
xchg
in
stc
flds
fimuls
mov
cmp
jno
jno
cld
stc
adc
sti
or
dec
je
mov
cmp
dec
push
jae
mov
das
sarb
negb
sbb
negb
fiaddl
test
adc
mov
clc
icebp
call
mov
sahf
xchg
or
pop
push
roll
std
rolb
inc
dec
faddl
pop
mov
mov
enter
bound
mov
rorl
ret
or
lods
pushf
dec
dec
add
cltd
add
cwtl
jecxz
sub
mov
and
mov
and
mov
mov
dec
adc
dec
cmp
cmp
jae
lcall
inc
xchg
jg
pop
lods
mov
mov
sub
mov
mov
xor
sub
and
jle
arpl
lods
ret
xor
clc
decl
test
push
pop
push
push
inc
insb
mov
push
or
arpl
es
and
add
mov
scas
jmp
mov
jp
stos
pop
mov
pop
xchg
lods
bnd
arpl
in
jle
lods
and
push
sub
mov
test
repz
mov
sub
pop
aas
negl
arpl
cld
mov
je
out
mov
cld
pop
in
inc
lods
cmp
adc
xchg
cltd
shr
dec
pop
add
aas
cmp
pop
test
sub
push
pop
jb
jmp
mov
cmp
mov
in
jecxz
push
dec
push
ret
xor
sbb
or
out
and
cmc
out
ss
outsl
pop
ror
jbe
out
jbe
aaa
push
mov
sar
pop
jmp
nop
mov
daa
std
mov
and
aad
xor
shrb
ucomiss
or
insl
cltd
sbbl
popa
int3
xchg
repnz
jbe
dec
pop
adc
outsb
push
xchg
data16
push
add
shrb
scas
pop
mov
push
push
push
rcrb
adc
and
sbb
push
lods
mov
xchg
or
rorb
dec
lods
or
fidivs
and
loop
iret
mov
insb
mov
push
jo
data16
cmp
pop
cmp
jge
cmp
jns
into
scas
pop
mov
clc
inc
jmp
ret
das
data16
nop
pusha
cmpsl
adc
sub
call
mov
out
pop
or
cmp
nop
decb
mov
popf
hlt
out
bound
mov
sbb
mov
mov
push
outsl
lret
sub
into
mov
mov
push
popf
out
es
cmp
insb
jp
sub
scas
cmc
in
pop
sbb
ret
sbb
ds
fsts
sbb
in
out
pop
repnz
cmp
fwait
icebp
pop
leave
sti
push
jp
adc
test
into
xor
jp
sbb
add
fwait
rorl
adc
xchg
dec
cld
stos
mov
mov
add
mov
push
or
scas
movb
or
test
lods
and
je
or
fwait
and
add
sub
fiadds
push
std
push
ss
dec
push
jge
inc
stc
loop
je
nop
mov
and
lock
lea
mov
mov
mov
test
mov
bound
lahf
mov
ret
std
sub
aaa
loopne
in
lret
sub
popf
or
push
jp
mov
sbb
mov
push
scas
push
add
in
push
enter
add
imul
xchg
push
lock
push
lock
test
xor
dec
int
jnp
adc
xchg
adc
sbb
mov
js
fsubrl
nop
out
mov
orl
popa
xor
stc
inc
loop
push
fdivs
in
mov
xor
sub
in
mov
mov
sarb
jns
inc
adc
pop
fucomp
adc
stc
push
sti
aad
dec
aad
insb
addl
scas
mov
das
mov
leave
aam
and
mov
cmp
shll
lods
or
xchg
cmc
mov
mov
dec
fadd
or
js
mov
mov
mov
push
mov
stos
mov
jnp
mov
je
jmp
fidivrs
movsl
xor
das
lcall
mov
shrl
mov
out
fimuls
into
or
sbb
mov
jle
jp
in
jo
testb
addl
jae
test
rcrl
mov
gs
and
adc
lahf
nop
jle
mov
sbb
lret
and
mov
or
sbb
dec
dec
push
and
or
or
adc
sbb
mov
sub
iret
adc
imul
ss
pusha
movsb
outsl
or
push
test
arpl
fptan
fwait
pop
xchg
in
not
pop
xchg
sbb
lds
int3
cld
cli
aad
loope
jmp
or
cmp
arpl
mov
or
add
inc
jl
xchg
sub
loop
or
mov
inc
xchg
js
sub
jl
adc
xchg
arpl
pushf
lahf
dec
xor
aam
enter
jmp
jns
and
sub
mov
jecxz
lods
push
stc
das
mov
loope
xor
mov
cmpsb
cmc
xchg
sbb
pusha
add
cli
push
imul
adc
sub
xlat
imul
stos
pop
pop
adc
push
stc
lods
mov
xchg
xor
add
jp
push
mov
cmc
jg
pusha
push
mov
cld
std
out
movsb
push
cmpsb
mov
push
fcmovnb
lcall
inc
mov
ror
cwtl
test
mov
push
xchg
mov
pop
dec
stos
fsubrp
lods
push
enter
mov
sbb
popf
mov
xor
rcll
ret
sbb
cs
inc
xchg
adcl
mov
outsb
mov
push
out
jle
jno
dec
cmp
imul
std
inc
es
int3
xor
cmp
rclb
call
pop
sub
je
cwtl
mov
fadd
push
in
ss
inc
rcll
inc
mov
pop
rol
ret
ficomps
sbb
scas
xchg
add
sbb
stc
insb
shrl
test
repz
or
test
sub
fiadds
adc
and
imull
pop
incl
iret
jecxz
dec
push
and
test
fdivs
movsl
outsl
ss
out
mov
pop
mov
ret
dec
push
cmc
jns
mov
insb
jl
lods
xor
je
outsl
cmc
sbb
fbld
and
ja
scas
shlb
cli
jmp
cmpsb
and
adc
mov
pop
or
xchg
clc
mov
daa
mov
sbb
ret
xchg
loope
add
gs
push
cmp
jp
shlb
xchg
stos
sbbl
cld
inc
adc
sbb
sbb
fildl
pop
faddl
insl
cwtl
sub
cmp
pushf
dec
and
jecxz
push
xor
push
jl
xor
out
movsl
push
add
mov
jge
mov
inc
mov
xor
mov
mov
ss
adc
add
or
pop
addr16
rcrl
push
adc
push
push
mov
sbbl
add
jbe
gs
mov
sbb
daa
adc
mov
sbb
int3
lcall
dec
sbb
cmovle
popf
icebp
xorl
and
in
mov
xor
cmp
in
call
adcb
arpl
adc
mov
push
jle
or
mov
xrelease
in
fldl
lea
subb
div
push
xchg
xor
and
add
clc
sbb
pop
ja
daa
mov
test
test
int
fnsave
pop
loopne
adc
mov
test
nop
sub
xchg
cmpsl
jmp
addr16
jne
jb
stos
insl
pop
mov
sbb
mov
jecxz
xchg
and
xor
mov
xchg
mov
push
inc
jecxz
iret
cli
mov
or
push
mov
test
in
loop
mov
push
andb
gs
lds
pop
add
test
sbb
movsb
push
add
jns
jp
push
xchg
call
das
ret
add
add
scas
mov
jecxz
push
cmc
daa
dec
xor
add
and
inc
mov
cmpb
fisubs
pushl
cmp
cmpsb
pusha
jp
mov
int3
repnz
fnstenv
scas
in
push
cmp
adc
int3
test
outsb
mov
add
inc
mov
daa
xlat
inc
mov
cwtl
xor
inc
sbb
not
nop
ret
or
jne
clc
dec
jo
and
test
in
fwait
enter
fwait
cld
aaa
sbb
out
daa
imul
xchg
inc
sbb
imul
les
movsb
push
subl
pop
js
aaa
call
fidivl
cmpsl
push
lcall
leave
sbb
mov
cmp
dec
cmp
pop
leave
xchg
loope
std
out
fidivrs
icebp
outsb
loop
mov
and
ret
out
fildll
sub
adc
jp
fidivrs
add
jno
lea
out
jmp
cs
jns
lret
or
add
ss
sar
nop
lods
dec
sbb
clc
mov
cld
mov
stc
cmp
stos
lock
mov
xchg
cmp
call
jecxz
lock
push
or
lret
ljmp
lods
xchg
icebp
daa
mov
adc
sahf
es
in
jns
in
movsb
rclb
movsl
add
cmp
punpckhwd
push
stc
xor
xor
mov
jbe
inc
lea
xor
dec
xchg
mov
xchg
test
jmp
jg
and
dec
mov
mul
mov
pop
js
push
pop
pop
inc
mov
push
xchg
push
adc
jp
test
mov
in
pop
inc
clc
xchg
repz
push
xlat
dec
inc
mov
cli
mov
popf
sbbb
rorl
adc
movsb
aad
cmp
xchg
nop
push
mov
stos
jns
or
imulb
aam
sbb
push
mov
xchg
dec
insb
insb
out
jle
jns
sub
iret
sub
dec
cmp
inc
rcrl
or
cmp
mov
xor
stos
and
cmp
ds
push
divl
out
fstpl
loop
sub
sub
data16
in
inc
fs
cmc
xor
es
and
push
mov
mov
pusha
mov
inc
divb
popl
int
outsb
loop
xchg
xchg
inc
inc
sub
clc
test
xchg
inc
push
sbb
xlat
in
mov
jbe
test
push
loop
xor
sub
adc
and
push
mov
daa
sub
fistpl
insb
inc
mov
jg
cld
insl
fsubs
pop
imul
cli
jp
mov
mov
mov
jle
mov
mov
lcall
adc
ss
ret
push
add
jno
sarl
test
pop
pop
xchg
inc
cmp
in
sahf
loope
sub
jge
lea
add
mov
mov
and
xor
arpl
popa
ljmp
inc
mov
jns
sahf
pop
adc
mov
dec
push
sbb
insl
std
movsb
sub
aad
cmc
inc
inc
adc
pushf
fpatan
mov
adcb
out
xchg
mov
pusha
sbb
in
xchg
sub
jg
mov
ret
pop
sbbb
add
movsb
sub
leave
subb
mov
ret
add
or
add
mov
repz
addr16
jge
nop
sub
jl
negl
xchg
sarb
cmp
dec
sbb
rclb
es
pop
out
pusha
je
iret
xchg
shr
clc
or
movsb
pop
fnclex
mov
lock
sti
pushf
addr16
stc
sbb
or
sub
add
cmp
inc
or
mov
in
ds
in
jae
dec
jns
jbe
aaa
clc
mov
or
pop
dec
std
aad
mov
push
repz
inc
ljmp
lds
test
addr16
sub
std
sbbl
sbb
xchg
add
test
jbe
cmp
es
cmp
jne
add
mov
mov
test
jg
and
sub
pop
pop
xorb
cli
jae
aas
or
push
loop
jbe
vmovdqa
out
jnp
jle
pop
inc
mov
jl
je
add
pop
aad
loope
lock
sub
aad
and
push
mov
push
mov
stos
cmpsb
fucomi
or
push
mull
or
lcall
jae
das
sbb
pop
test
je
jnp
cmp
or
test
cmc
xor
mov
lds
cli
fstpt
sub
mov
nop
cmp
dec
pop
xlat
and
aaa
and
pop
mov
mov
mov
stos
inc
in
xor
bound
mov
xlat
outsb
ljmp
xchg
mov
pusha
jg
pop
jmp
sub
sub
and
mov
jo
xchg
push
pop
xchg
aad
sub
lcall
movsl
imul
xlat
loop
sbb
testb
pop
cs
xchg
je
popf
jg
push
into
fdivl
lock
js
ja
addl
pop
aad
mov
stos
xchg
enter
sub
and
loopne
jbe
int3
jle
xchg
arpl
stc
fiaddl
inc
rcl
sahf
mov
adc
les
xor
mov
push
sbb
sarl
rclb
and
cmp
jbe
cmpsl
popl
in
outsb
inc
add
jle
in
sbb
mov
adc
pop
mov
lods
adcb
add
mov
icebp
cmp
rcl
cmp
mov
dec
lret
lods
rcrb
push
jge
xor
divb
sub
out
pop
pushf
into
shrl
jae
call
xchg
sbb
cmp
jno
xchg
mov
inc
cwtl
dec
add
xlat
mov
adc
mov
jge
aas
repnz
jb
adc
jo
in
cs
ficompl
rcll
dec
or
xchg
jb
adc
push
in
sub
inc
xor
mov
frstor
jae
push
sbb
insl
inc
mov
mov
cmp
fsubrs
ja
popa
push
stos
pushf
out
mov
jecxz
pusha
nop
sarl
mov
dec
scas
scas
and
cmpsb
sbb
loop
pop
cmp
xchg
jmp
xchg
pop
in
aam
xorl
mov
popf
inc
add
cmp
fistpll
lcall
jp
cmp
lahf
daa
xor
xor
and
mov
aas
mov
repnz
iret
arpl
stos
sub
sub
and
lods
mov
mov
dec
and
push
xchg
out
xor
pop
mov
mov
mul
xchg
stos
xchg
jl
ss
int3
push
xor
imull
out
and
cli
push
pop
mov
xchg
mov
adc
loop
jle
adc
xor
mov
xchg
and
jg
ljmp
std
mov
pop
xchg
push
lea
test
outsl
add
mov
sbbl
pop
aaa
inc
fldcw
das
aam
rolb
lret
jae
fucom
jne
pop
mov
ds
fucomp
or
add
insb
cli
pop
enter
movsb
push
mov
sub
insb
movsl
xchg
jp
mov
inc
mov
insl
sub
xchg
jnp
outsl
cmp
iret
out
sbb
bound
sbb
or
inc
lods
jo
or
repnz
rcrb
and
jnp
pop
inc
lock
movsb
rcrb
xchg
xchg
push
lret
scas
addr16
leave
push
or
mov
aaa
mov
xor
ja
xchg
mov
push
sbb
fsubrp
xchg
jno
inc
mov
sbb
pop
mov
adc
pushf
or
outsl
jp
sbbl
test
or
out
jne
pop
mov
pop
inc
inc
lret
push
test
adc
xchg
push
xlat
mov
dec
stos
sahf
lods
cmp
adc
lock
jmp
pop
jnp
cmp
push
push
push
mov
cmpsb
mov
mov
rcl
adc
xor
xlat
rolb
jp
cwtl
and
call
jbe
add
jo
or
arpl
mov
lods
in
pop
pop
and
dec
aam
inc
dec
cli
lahf
je
aas
push
loop
fcomp
jb
adc
mov
mov
subl
lock
mov
or
sub
jb
cmc
decb
rcrl
rorb
in
jb
jp
scas
dec
arpl
mov
mov
mov
jo
pop
add
js
pop
add
fs
je
les
enter
xlat
jns
orl
inc
pusha
xchg
stc
dec
pop
sub
scas
dec
test
mov
jp
cld
mov
and
inc
mov
icebp
outsb
mov
pop
mov
xchg
lret
xchg
push
or
or
xor
das
push
lcall
cmpsb
pop
or
jle
dec
js
mov
outsb
cld
lods
jo
or
int
lret
sbb
sbb
cltd
adc
vmread
sub
andl
add
mov
cmp
mov
or
int
sbb
lahf
out
rolb
mov
mov
or
fimull
std
sub
jae
fs
cld
repz
push
jge
add
xor
lret
add
sub
add
aad
mov
arpl
mov
inc
adc
or
cmpsb
fmul
pop
dec
lcall
iret
aam
mov
xlat
in
add
xchg
xchg
mov
or
ja
or
arpl
mov
cmp
int3
mov
and
repz
repz
aam
int
in
sub
adc
daa
sub
xchg
fmuls
roll
pushf
lea
test
iret
pop
cmpsl
pop
in
shr
divl
gs
lret
push
push
sbb
mov
stc
aaa
jp
ss
ss
dec
xor
pop
adc
cld
sbb
push
push
jne
adc
popf
int3
inc
or
insb
mov
fs
out
push
outsb
push
xchg
cmp
outsb
adc
jne
ss
xlat
inc
fcoms
jg
dec
dec
sub
and
in
mov
push
mov
inc
iret
xchg
dec
jmp
into
arpl
cmp
mov
lock
and
sbb
movsl
xchg
cmc
jnp
mov
testl
test
or
sahf
scas
or
mov
mov
mov
popa
data16
repnz
xchg
leavew
jg
xor
and
clc
or
dec
add
jmp
jb
xchg
jo
das
mov
cmpsb
dec
cmpsl
mov
sub
movsl
pop
xor
sbb
add
cmp
inc
sar
in
imul
inc
ret
mov
call
pop
xchg
orl
lods
xchg
pop
dec
dec
add
shlb
dec
pop
mov
repnz
lock
and
mov
mov
mov
dec
mov
sbb
aas
rorb
sub
sti
lea
mov
dec
fnsetpm(287
cltd
cld
mov
dec
dec
mov
pop
dec
mov
lods
movsl
icebp
sbbb
fcom
xchg
mov
push
dec
dec
inc
std
out
loopne
add
rol
cld
sbb
mov
and
jbe
cs
iret
aad
sbb
push
xchg
dec
mov
lret
rolb
mov
rcl
pusha
push
outsl
idivl
inc
cmpsl
in
es
adcl
push
icebp
sti
cmp
loop
mov
mov
and
mov
in
leave
push
or
inc
jg
mov
xlat
test
lret
rcrl
jmp
lea
out
test
cmpb
hlt
pop
pop
es
daa
xchg
lahf
sbb
lods
addl
aam
add
ja
pop
imul
sbb
out
adc
lahf
fdivl
lods
nop
jle
push
insb
pop
xor
gs
icebp
sahf
lds
aas
outsl
mov
scas
leave
inc
dec
leave
jbe
pushf
je
cmp
movsb
aam
inc
aad
jecxz
fldl
loope
pushf
lds
adc
sub
mov
push
std
std
inc
movsl
cmpsl
or
lea
push
push
test
xor
dec
rcll
addb
mov
push
jae
jecxz
daa
inc
jae
or
ljmp
iret
push
insb
movsl
sbb
ret
xchg
cmc
test
jno
dec
adc
mov
cmp
test
adc
iret
or
and
cmp
stos
push
out
jl
sbb
subl
xchg
adc
test
leave
sub
out
pop
out
stos
sarb
movsl
jne
in
xchg
push
outsl
mov
add
int3
sbb
leave
ret
fwait
gs
jb
jne
add
test
test
cmp
int3
xor
addr16
out
inc
sti
pop
xchg
stos
shrl
pop
jae
cltd
mov
sbb
andb
insl
psubd
popf
xor
xorb
arpl
mov
dec
rolb
icebp
imul
xchg
in
adc
mov
orb
push
add
dec
cmc
jne
cwtl
and
loop
mov
inc
data16
in
and
dec
jmp
data16
insb
lock
xchg
mov
xchg
mov
mov
rorw
push
xor
pop
les
cmp
cld
mov
lret
inc
lret
ret
adc
bound
rcrb
mov
es
out
mov
dec
movsl
ds
pop
lret
int3
push
lods
push
jns
cmp
sbb
dec
xchg
jnp
or
je
in
jge
lds
add
adc
mov
inc
scas
clc
hlt
jl
pmaddwd
in
fidivl
xor
out
push
pop
xor
dec
inc
and
test
lea
or
in
add
xor
insl
ds
xor
cltd
push
dec
push
cmp
aas
out
jnp
js
pop
adc
leave
adcl
or
sarl
mov
ss
xchg
mov
dec
lods
mov
cmp
xchg
add
and
or
sbbl
or
in
xchg
sbb
cmp
lds
jae
sbb
sub
lret
inc
fisubs
jnp
sarl
or
xchg
push
add
mov
in
cmp
daa
jg
jno
inc
or
and
push
in
jge
jbe
in
cmp
aaa
mov
fisubs
sbb
jg
data16
adc
sbb
lret
push
in
insb
sbb
push
int3
mov
sarb
adc
test
and
nop
movl
push
push
mov
mov
pop
adc
insl
idivb
mov
fdivrl
inc
jl
push
adc
ret
jmp
les
dec
push
pop
jnp
cmpsb
xchg
inc
xchg
mov
pop
scas
and
loop
shlb
cmpsb
xchg
pop
and
sbb
push
dec
xchg
mov
imul
mov
movsb
inc
adc
xor
adc
mov
mov
xchg
nop
or
enter
addr16
sub
cld
lcall
gs
dec
mov
sub
sub
outsb
shll
je
cmc
mov
es
fstl
push
pop
cld
adc
inc
imul
dec
pop
inc
or
mov
nop
loope
and
loope
add
jnp
sub
xchg
xor
pop
cwtl
shll
mov
add
xchg
xchg
push
mov
ss
loop
mov
cmp
sub
fisubl
lds
sbb
or
mov
loope
jg
es
adc
cmpsb
insl
adc
pop
inc
imul
js
add
cltd
pop
stc
mov
aaa
sub
or
aam
lds
sub
test
mov
hlt
je
inc
cmp
inc
dec
mov
imul
mov
push
rorl
jle
mov
push
test
subl
dec
mov
mov
mov
adc
sbbb
movsl
outsb
stos
int3
cmp
mov
mov
lcall
cmpsl
cmp
sbb
aas
out
cli
mov
div
dec
pop
mov
xor
dec
push
cmp
icebp
jge
in
jnp
or
xor
jl
dec
mov
xor
add
lret
ja
ret
xlat
dec
fists
ret
lea
fcoml
sbb
sub
inc
xor
loopne
pop
mov
mov
int
fists
push
int
or
hlt
xor
cs
repz
imul
sub
mov
pop
addr16
data16
cmp
lret
ret
js,pn
scas
mov
gs
or
jnp
fwait
int
aam
pop
adcl
fwait
cmp
out
das
lock
or
mov
loope
daa
movsb
push
lcall
test
in
jp
mov
sbb
push
repz
subl
pop
pop
outsl
ret
adc
fistpl
jb
dec
scas
outsb
fidivrl
sbb
jbe
add
push
sbb
or
cmpsb
aam
pop
in
jle
ficompl
and
shll
sbb
scas
and
pusha
push
fisttpl
cmc
push
jno
jo
cmc
int
push
add
xlat
mov
je
sub
and
loop
jl
add
adcl
pop
jge
push
movsl
dec
push
fnstenv
inc
cmp
outsb
push
in
arpl
push
ss
ficoml
andb
push
repz
fstpl
scas
daa
insb
inc
mov
out
stos
or
inc
inc
pop
cwtl
xchg
fdivrl
orl
pop
push
mov
adc
in
dec
mov
pop
iret
popa
mov
cwtl
movsb
adcb
shlb
mov
cmp
add
jae
mov
xlat
xchg
inc
xor
push
ljmp
mov
mov
popf
jbe
sub
cmp
add
mov
inc
xorl
out
shlb
mov
xchg
mov
neg
fadds
test
insl
insl
into
xor
pop
fldenv
ljmp
fisubrl
fisttpl
iret
push
in
test
jbe
mov
and
nop
mov
push
js
push
idivl
popa
movsl
cmp
push
push
xchg
push
or
inc
movsl
jge
push
adc
repnz
add
pop
pop
rcrl
pop
pop
or
dec
dec
xor
pop
lods
aaa
std
mov
mov
mov
lahf
xor
sub
xchg
loope
mov
lds
in
jnp
pop
data16
stc
mov
imul
pop
push
and
xchg
jmp
mov
push
std
cmp
xor
inc
dec
jg
insb
dec
decb
movl
fmull
mov
jae
jne
aad
jo
inc
in
mov
sub
cld
fisttps
adc
sub
pop
cli
mov
jecxz
sub
out
jns
outsb
mov
sbb
cli
adc
pusha
outsl
imul
xor
int3
mov
loope
push
jl
hlt
mov
ds
in
xchg
sub
icebp
mov
in
pop
popf
pop
and
and
sbb
insl
imul
inc
cmpsl
cmpsl
inc
push
fists
in
push
mov
dec
sti
jbe
push
pop
out
cmpsl
lcall
lret
xchg
inc
mov
lahf
sub
repz
stc
aas
push
sub
fistpl
xor
lock
addr16
cmp
imul
imul
out
cli
sbb
mov
mov
enter
stc
inc
fnsave
shlb
push
arpl
adc
test
mov
xor
pop
sub
xor
subb
mov
inc
or
int
sti
sub
push
cld
mov
dec
lcall
gs
mulb
cmc
stos
rcll
lea
dec
push
mov
or
xchg
imul
add
mov
adc
aaa
xchg
push
hlt
lds
mov
or
out
orb
ja
mov
mov
in
dec
sti
ljmp
insl
jne
loope
or
in
scas
sbb
sub
in
jns
add
pop
inc
lcall
lods
fldln2
sbb
arpl
shlb
or
ja
add
shl
js
cmp
add
xor
insb
popf
fwait
inc
sub
add
adc
mov
dec
or
push
sub
mov
shll
adc
movsb
addl
jo
inc
aam
ficoml
pop
je
out
loop
insl
test
sub
aam
pop
ljmp
push
in
ss
pop
cld
clc
out
mov
daa
jle
repnz
test
mov
jnp
xchg
adc
dec
push
mov
ljmp
mov
and
mov
rcl
xchg
mov
or
daa
lcall
pop
or
jo
mov
outsl
pop
adc
mov
push
in
cltd
jno
push
xchg
mov
iret
in
and
sbb
cmp
cmp
leave
xchg
rorl
arpl
aas
mov
pusha
sarl
add
pop
shll
sbb
ja
loope
adc
movsb
addr16
jmp
mov
mov
fsubrs
paddw
cs
push
call
test
add
add
jl
lret
in
gs
sbb
mov
stc
mov
fisubs
or
inc
dec
sub
mov
movsb
rcll
inc
mov
sub
aas
jae
das
dec
test
mov
ljmp
jp
mov
js
adc
sub
out
or
lahf
shlb
add
inc
data16
push
icebp
pop
call
dec
jecxz
cmpsl
ret
test
popa
in
loopne
jne
sub
js
push
sub
int
inc
inc
icebp
add
xor
dec
call
cmpsb
sar
movsl
jae
or
jp
dec
outsl
dec
or
lcall
fs
and
stos
push
js
dec
movb
in
and
inc
sub
xor
xchg
inc
xlat
lret
in
push
cmp
inc
fwait
addr16
add
repnz
popf
rorl
ds
lret
pop
sbb
insb
test
lret
leave
repnz
mov
mov
das
hlt
in
cmp
pop
lcall
adc
sbbb
dec
jb
fidivl
push
outsb
pop
andb
ret
push
push
daa
aam
cli
or
sub
xor
push
std
jne
or
push
stos
loopne
loop
fcompl
scas
pop
mov
aaa
sbb
into
mov
add
push
shrl
fsubrs
inc
cmpsl
xlat
orb
sbb
jge
fadd
pop
xor
add
push
mov
pcmpeqb
ja
loope
roll
dec
movsl
mov
shl
test
mov
outsb
and
adc
jg
scas
iret
jae
es
or
mov
sub
pop
mov
arpl
push
xlat
add
call
inc
or
out
sahf
jecxz
loop
fdivl
jecxz
in
push
sub
addl
mov
xor
fmul
mov
mov
rcl
lea
fwait
cmp
xor
inc
aad
adc
jecxz
sarl
lcall
scas
outsl
in
hlt
pusha
dec
lds
dec
bound
and
xor
mov
mov
ret
daa
mov
clc
movsb
add
cmp
iret
add
daa
test
dec
test
pop
adc
cmp
pop
add
jb,pn
ja
or
adcb
popa
mov
inc
mov
fildll
ret
and
mov
lods
jne
mov
push
cs
idivl
xchg
rcl
jnp
mov
movsl
inc
inc
inc
das
lea
lock
jecxz
ss
orb
int3
cmp
jne
xchg
movsb
mov
outsl
xor
test
and
xor
pop
sti
push
mov
add
and
sbb
notrack
jecxz
adc
repz
jp
stos
fs
ss
push
mov
pop
in
stos
mov
pushf
cmp
testl
inc
jns
xor
jp
adc
es
jmp
out
mov
bound
or
stos
cltd
jl
sbb
cltd
cmpsb
or
mov
es
mov
mov
mov
or
sbb
cld
push
inc
push
xchg
dec
cmp
sbb
insb
fsub
sbb
leave
pop
cwtl
sbb
sbb
shrl
mov
ret
pop
mov
imul
rcrl
in
and
lea
jg
dec
push
mov
cld
jl
lock
lret
enter
mov
push
mov
and
imul
add
jle
arpl
dec
into
fs
mov
sub
or
push
pusha
fldenv
push
sbb
popf
cld
sahf
fldenv
jne
movl
mov
aaa
shl
test
mov
js
xor
icebp
jnp
lds
push
cs
sub
movsl
xchg
dec
das
imul
mov
lret
mov
mov
and
jb
cmc
xor
ljmp
add
mov
dec
inc
lods
and
cwtl
adc
rcll
pop
mov
mov
sub
out
inc
adc
pop
addr16
movsl
pop
push
ret
lods
mov
rorb
xor
pop
pushf
adc
in
insb
push
dec
in
imul
gs
scas
sbb
add
les
inc
push
mov
pop
enter
out
icebp
or
dec
mov
fsub
jmp
aaa
cwtl
cwtl
dec
in
enter
aaa
lods
xor
dec
movsl
dec
insb
mov
inc
leave
sbb
ror
pusha
in
mov
xor
addr16
sub
or
imul
jae
lahf
sti
out
test
push
lahf
ret
add
fs
and
cmc
adc
lea
mov
jbe
add
sahf
cmpsl
into
mov
push
mov
sbb
mov
xorl
inc
mov
movsl
push
cmp
xor
pop
adc
repnz
xor
sbb
sbb
pop
les
mov
mov
jns
cmpb
out
xchg
inc
jnp
dec
mov
lock
stos
cmpsl
lds
in
jmp
cli
leave
sub
movsw
dec
mov
pushf
add
or
lcall
jno
and
xchg
jae
das
mov
or
aaa
mov
jle
xchg
mov
xchg
shr
stc
pop
mov
dec
ss
shlb
lret
sti
fxam
movsb
call
mov
lahf
pusha
movsl
adc
pop
xchg
icebp
enter
iret
sahf
add
rcrl
push
test
sti
push
dec
scas
push
cmpsl
into
mov
sub
sub
mov
jb
sub
stc
cmpsl
and
push
cmc
lods
push
test
icebp
xchg
adc
bound
je
mov
push
pop
add
pop
repnz
pop
rep
pusha
sub
insb
aaa
add
sbb
hlt
xchg
push
cmp
or
mov
shr
cli
mov
xchg
into
jo
cmp
inc
cmp
jle
cmpsb
push
in
cmc
push
rcr
iret
cmp
mov
mov
push
out
in
push
shll
inc
adc
fidivl
or
cmp
cmp
adc
xor
xor
aad
incl
sti
dec
mov
inc
scas
int3
push
int3
inc
xchg
xchg
jecxz
add
leave
adc
sub
dec
lret
and
pop
dec
mov
out
cmpsb
aaa
cmp
jecxz
adc
cmpb
jo
leave
lret
mov
mov
scas
lods
mov
mov
push
das
shrb
and
pusha
dec
jno
jp
mov
shr
ja
lock
dec
js
into
jmp
sti
sahf
mov
or
das
pop
bound
movsb
dec
sbb
cwtl
inc
lea
orb
daa
jecxz
iret
dec
es
aad
push
pop
add
jo
sarl
mov
pop
lret
jp
clc
push
sbbb
sbb
aam
or
inc
in
mov
fistpll
sbb
pop
push
in
js
aaa
push
clc
sub
aad
sub
sbb
sub
cld
hlt
outsb
dec
mov
push
push
or
cwtl
shlb
sub
push
in
hlt
and
jle
ss
punpckldq
pop
loopne
aaa
mov
inc
and
daa
jo
repnz
mov
rcrl
pushf
jo
lods
push
add
add
repz
mov
ret
xorb
sbb
neg
inc
idivb
cmp
pop
mov
adc
dec
xchg
xchg
icebp
xchg
jge
push
nop
jo
in
lock
setb
add
push
stc
push
pop
sub
jge
sbb
das
mov
and
jmp
xchg
cmp
fs
dec
jb
adc
ret
adc
mov
mov
ret
jb
roll
sbb
arpl
mov
popa
jmp
or
je
into
into
mov
sysexit
inc
push
jp
mov
xchg
jp
das
clc
fistpl
sub
adc
fldenv
dec
int
xlat
inc
and
push
bnd
mov
test
dec
push
sbb
lods
xchg
and
push
sub
xchg
ss
fdivrl
jg
outsl
sub
dec
dec
sti
es
es
and
iret
fstp
mov
xchg
inc
inc
sahf
xchg
stos
ret
pop
icebp
pop
outsl
leave
stos
subl
cld
cld
sahf
dec
dec
les
lods
outsl
test
xor
cmp
lods
sbb
pop
fnstcw
ljmp
sub
and
xchg
das
push
mov
jmp
cmp
icebp
fcoms
sbb
mov
and
cltd
cs
imul
xchg
cmp
cs
lahf
cmp
or
add
add
adc
xchg
pushf
int
cltd
mov
jno
movsl
mov
iret
jb
xor
outsl
and
sub
adc
pop
aad
sub
mov
cmp
mov
pop
mov
mov
dec
scas
jecxz
gs
mov
mulb
mov
rolb
stos
jno
jmp
inc
mov
fcompl
sbbb
push
ret
scas
aad
adc
out
imul
into
sub
inc
mov
call
jp
imul
in
push
inc
jnp
insb
jecxz
in
flds
mov
or
mov
add
mov
mov
insb
mov
adc
mov
and
inc
mov
fsubrs
add
jl
stos
loope
rcrb
adc
mov
cld
or
push
jecxz
insb
fxch
push
inc
sbb
push
repz
aam
inc
movsl
jmp
lods
cmpl
mov
test
ficompl
adc
int
outsl
pop
mov
xchg
add
xchg
mov
aam
cwtl
xchg
add
negb
cmp
jbe,pt
lret
outsb
xor
mov
cmp
xchg
pop
mov
jg
in
clc
gs
scas
cwtl
ror
in
imul
cwtl
jl
sub
fcompl
mov
inc
sbb
clc
in
je
arpl
les
nop
int3
xchg
mov
outsl
into
dec
sti
push
insb
or
fisubl
and
jns
scas
cwtl
out
outsb
xchg
popf
mov
mov
popf
pop
jmp
addr16
into
mov
inc
cli
popa
sbb
push
xchg
aad
cmpsl
xchg
sbb
cltd
sub
xorl
dec
loopne
add
and
inc
fnstcw
jle
pusha
jle
push
sub
add
mov
and
adc
adc
pop
or
fmuls
aam
jno
push
shll
aaa
ret
fwait
push
dec
fwait
add
rorb
push
and
jae
inc
sbb
pop
push
push
ja
test
add
je
iret
pop
test
in
test
inc
mov
cmp
bound
sahf
mov
sti
imul
push
push
negl
mov
inc
stos
adc
outsb
std
cmpsl
ljmp
shl
lods
xor
lea
mov
lods
pop
inc
push
xchg
push
mov
push
gs
pop
lds
sub
aaa
test
enter
sub
fsubs
push
jecxz
and
imul
adc
mov
or
mov
dec
out
and
xchg
int
imul
push
inc
rorb
popf
pusha
mov
dec
cltd
movb
adc
aad
ficoml
add
mov
lods
insb
xor
fadd
push
hlt
sarb
inc
mov
ret
fidivl
in
out
jno
stc
jge
aas
out
repnz
lods
ret
sbbb
push
cld
repz
mov
or
pop
cltd
xor
mov
xchg
cmpsb
mov
cltd
movb
sbb
push
jae
aas
push
xlat
stc
mov
faddl
mov
xchg
cmc
pop
jle
add
aas
or
mov
stc
ret
es
movsl
cli
add
cmc
sub
push
lods
sti
push
sub
lds
sbb
out
test
add
inc
jl
mov
pop
and
or
ret
call
pushf
jo
test
adc
push
aas
psadbw
das
add
add
mov
xor
nop
jg
add
fidivrl
push
adc
sbb
les
out
push
clc
jae
mov
dec
ja
xor
xchg
lods
aaa
out
mov
xor
xchg
scas
dec
xchg
jmp
xor
jg
aas
fstp
imul
pop
cs
mov
pop
add
mov
dec
dec
xor
push
dec
lods
test
cmp
xchg
add
enter
jge
sti
idivb
sub
sbb
sti
inc
arpl
mov
cmp
xchg
icebp
push
shrl
sub
ss
xor
or
xchg
sub
pop
push
jmp
loop
mov
dec
dec
fnsave
xor
cmp
sti
sub
inc
xchg
adc
inc
adc
or
mov
jne
lahf
mov
push
pop
dec
rorb
aad
pop
xchg
out
scas
leave
dec
dec
fidivl
jno
pushf
cmp
pop
mov
mov
mov
into
jne
jnp
dec
mov
shlb
stc
add
sbb
jnp
add
lret
loop
repz
in
or
ret
mov
popa
repnz
shll
scas
mov
lret
inc
sub
jmp
or
stos
jne
orl
sbb
stos
test
jl
pop
jbe
xor
loope
mov
xchg
pop
push
leave
fcmove
push
or
inc
clc
insl
movsb
jmp
cwtl
adc
dec
lret
arpl
shrb
loopne
jno
adc
addr16
xor
sub
js
cmpl
mov
mov
xor
pop
fdivs
ja
ja
sarb
stos
movsb
or
sti
mov
test
push
lcall
dec
in
cmp
shr
out
addr16
mov
cli
nop
cmpsl
insl
mov
dec
shrl
mov
mov
add
ror
sub
cmp
rcrb
add
mov
fs
lret
icebp
int3
enter
inc
push
clc
ljmp
daa
dec
sahf
sbb
add
sub
add
xor
aaa
in
or
add
js
push
clc
xchg
into
daa
loopne
mov
icebp
jmp
mov
mulb
outsb
in
cmp
sub
adc
pop
push
lret
lahf
inc
pushf
out
rorb
add
cltd
jl
jp
mov
pusha
mov
into
into
mov
sti
js
jecxz
mov
push
jns
or
int3
pop
adc
lret
adc
add
push
bound
jno
lret
xor
sbb
popa
loope
stos
mov
stos
cmc
mov
aas
stc
mov
and
sub
jl
mov
xchg
mov
jno
std
sub
and
int3
sbb
mov
cmp
lcall
enter
cmpsl
push
cmp
orb
jbe
int3
hlt
sub
cld
push
push
icebp
mov
xchg
aam
pop
jb
cld
mov
or
pop
xchg
ret
insl
cld
test
sbb
xor
das
dec
fsubp
and
push
or
jo
dec
jo
adc
or
inc
fsubrp
cmp
jno
sbb
pop
lea
xchg
ljmp
stc
xchg
out
mov
pop
les
dec
movsb
ret
dec
dec
pop
mov
pop
cltd
or
inc
ds
add
in
adc
dec
mov
mov
popa
jle
jecxz
xchg
push
adc
mov
das
pop
sbb
jne
lahf
loopne
pop
jns
and
and
sbb
pop
push
sub
mov
scas
dec
int
fs
cmp
test
loopne
add
aam
in
cmp
and
jecxz
mov
cltd
add
lods
sbb
mov
xor
jle
pop
mov
pop
leave
pop
dec
ror
pop
cli
mov
cmp
aas
decb
fs
xor
popl
popa
xchg
and
pop
add
fwait
cs
flds
orb
xchg
jg
and
xor
fs
or
outsl
shlb
test
scas
inc
xor
out
adc
aad
cltd
or
dec
test
rol
jb
pop
adc
les
arpl
cmpsb
addr16
jle
mov
xchg
scas
cmp
adc
sub
mov
imul
insb
push
jge
in
and
xchg
inc
push
or
pop
sub
xor
cmpsb
outsb
lret
pop
inc
jecxz
das
cld
inc
add
sub
xchg
pop
sub
lret
inc
jb
dec
std
or
out
mov
sub
jae
jns
in
or
mov
mov
cmpsl
lods
addr16
mov
pusha
sbb
dec
sub
mov
call
fisubrs
gs
movsl
iret
sub
sub
jb
je
test
adc
cmpsl
mov
int3
mov
rol
pop
sbb
mov
xor
sub
fnstenv
pop
mov
xchg
rcl
and
mov
xchg
dec
cmpl
ljmp
adc
fstpt
idivl
sub
xor
notb
gs
dec
mov
cwtl
xor
pusha
es
push
clc
xchg
or
repz
lahf
aad
mov
rcll
push
jne
in
popa
xchg
and
sti
and
mov
jnp
dec
lods
cmp
dec
rorl
cmp
orb
mov
xchg
sbb
dec
sub
fwait
add
mov
jl
dec
dec
repz
syscall
mov
or
pop
pop
lock
mov
mov
dec
mov
inc
add
inc
and
cmpl
ja
or
sahf
mov
push
push
leave
mov
inc
xor
pushf
or
ficoml
shlb
lods
push
jne
or
rcll
push
das
sub
and
cmp
mov
leave
xor
and
insl
test
cltd
aaa
andb
repz
lcall
in
js
and
insl
movsl
cli
jb
push
cmp
or
scas
rclb
pop
sub
mov
xor
mov
and
in
jmp
in
push
daa
hlt
dec
aaa
mov
std
push
ffree
and
push
or
fisubrl
mov
inc
nop
cmp
jp
outsl
mov
into
cmpsl
lods
jecxz
int3
push
jb
dec
push
add
jne
gs
mov
fwait
lods
xchg
imul
xor
orl
sub
icebp
sub
pop
shll
push
or
pop
mov
lods
xor
and
bound
lods
jb
mov
dec
sahf
clc
out
cmp
mov
push
or
dec
loope
xchg
mov
xchg
js
push
rolb
inc
mov
repz
std
mov
aaa
jne
sbb
arpl
mov
dec
sbb
xor
fwait
ds
or
out
out
push
cli
or
pusha
push
cmp
test
mov
cwtl
xchg
push
or
mov
ret
and
rep
fldt
lcall
sarl
dec
into
call
jns
inc
sahf
cmp
lret
negl
adc
mov
mov
and
xchg
bound
dec
inc
cmp
lret
sub
sbb
pop
lds
das
stos
mov
stos
and
jo
je
inc
dec
test
neg
fbstp
mov
orl
xchg
les
rorl
xor
adc
cli
pop
rcll
pop
shl
sbb
pop
adc
ror
or
mov
sbb
dec
mov
mov
outsb
lcall
ljmp
aam
test
cmp
cwtl
ret
daa
int3
jge
dec
out
xor
pusha
push
je
filds
daa
mov
jp
sbb
sbb
push
aaa
cmpsl
adc
xchg
xchg
aad
stos
aam
and
loopne
xor
testl
test
js
dec
sbb
pop
jmp
cmp
mov
pop
cltd
push
inc
push
jbe
lcall
push
lahf
jg
xchg
dec
jbe
add
popa
add
xor
nop
xchg
mov
mov
jmp
fidivrs
sbb
dec
mov
lds
push
outsb
xchg
push
lock
imul
dec
mov
dec
xor
push
inc
push
cmp
lret
push
sbb
fidivrl
nop
sub
mov
cmp
sbb
mov
jmp
int3
mov
dec
clc
popf
xchg
jbe
push
hlt
lea
int
push
int3
jmp
add
fs
mov
adc
jl
pop
sbb
mov
out
jo
lret
mov
and
clc
fdivs
cmp
test
mov
add
lock
xchg
cmp
ja
adcl
sub
jle
sub
test
fisubs
rorl
shlb
or
ret
sbb
push
int
xchg
pop
inc
in
push
scas
push
xchg
pushf
stos
imul
push
ret
dec
into
mov
mov
jo
sbb
stos
ficoml
ds
cwtl
frstor
stc
push
push
or
jg
popa
subl
pop
push
mov
jns
nop
cld
lea
sub
sbb
pop
pushf
mov
int3
add
movsb
notl
push
test
mov
jno
cltd
mov
data16
rcll
roll
xchg
xor
pop
aam
nop
incl
push
aam
loope
lea
loopne
adc
push
jmp
es
or
in
jge
dec
sub
lea
pop
and
mov
mov
mov
cli
fnstenv
stos
cmpl
sub
int3
jecxz
dec
inc
push
add
fsts
out
pop
jae
and
fmul
xchg
and
push
insl
ja
repnz
push
mov
sub
test
adcb
adc
fsts
and
cmp
dec
js
mov
mov
test
out
push
adc
imul
loop
xlat
sub
enter
sbb
ret
dec
data16
pop
xor
push
pop
imul
popf
pusha
and
je
scas
idivl
iret
xchg
aam
or
fidivl
in
ja
inc
or
aaa
fidivl
dec
pop
sbb
inc
sub
mov
popf
lea
lea
xor
cltd
cmp
sub
incb
outsb
sub
insl
insb
add
test
mov
jne
dec
pop
cmp
sbb
out
dec
add
test
adc
or
sbb
xor
mov
sub
subb
pop
cmp
mov
mov
std
mov
jno
xor
lcall
dec
sahf
iret
inc
std
ud2
mov
and
js
pop
in
pushl
push
mov
cmp
pop
cmpsb
mov
arpl
add
sub
xchg
call
adc
mov
rorl
cld
pop
into
mov
jbe
jbe
adc
xlat
popa
sub
mov
xchg
mov
int3
aas
dec
push
out
rolb
jno
add
or
push
xchg
push
imul
loopne
sub
or
sub
dec
push
jb
add
adc
sbb
add
loopne
mov
mov
inc
fldcw
clc
insb
sub
and
cwtl
out
jp
nop
xchg
add
jg
jb
ljmp
js
loop
lods
stos
aad
mov
dec
cwtl
outsb
test
mov
xchg
insl
test
mov
mov
roll
dec
pop
test
fstpt
dec
and
or
mov
aaa
mov
ljmp
push
icebp
mov
cwtl
xlat
dec
add
xor
mov
stos
pop
jo
push
mov
pop
push
add
jno
dec
dec
ret
inc
test
loopne
push
xchg
fs
insb
sub
cltd
rolb
sbb
xor
sbb
sbbb
lds
and
and
dec
adc
cli
adc
lahf
movsl
push
daa
add
xor
and
out
je
pop
jp
push
leave
mov
cwtl
pop
data16
js
and
filds
fdivs
jp
pop
adc
test
ret
dec
mov
jg
sbb
sbb
add
ds
fidivrl
inc
and
mov
jbe
push
lods
dec
shll
movsb
bound
enter
or
jo
xor
jg
jo
mov
mov
sub
sub
fcmovu
jmp
jae
jp
xchg
hlt
lds
push
jne
dec
ficoml
jno
mov
or
rol
mov
lods
test
test
leave
jb
das
in
shrb
inc
push
xor
je
adc
push
aas
test
into
rorl
and
jp
cmp
jge
mov
lea
jnp
stos
xchg
aas
incb
lods
mov
xchg
aam
bound
xlat
test
add
sbb
pop
and
mov
mov
cmp
pop
mov
rclb
fcomps
and
mov
mov
data16
pushf
dec
arpl
cli
cmp
pop
jno
test
sbb
das
dec
dec
mov
fnsave
xor
xor
jl
lret
xor
ss
mov
test
pop
mov
imul
repnz
inc
test
out
pusha
roll
push
sbb
cmp
lcall
jl
aam
sub
fwait
add
popf
jne
xchg
or
cmp
push
setno
ljmp
out
nop
xchg
pextrw
cltd
push
in
cmc
clc
bound
loop
inc
dec
scas
mov
ljmp
push
mov
rcrb
push
pop
testb
out
stos
call
push
cmp
sbb
xor
es
out
pop
mov
sub
push
icebp
mov
sub
stc
mov
jne
js
cmpsb
xchg
push
test
sbbb
pop
jnp
sbb
mov
in
adc
data16
daa
ret
scas
rolb
xchg
mov
jg
lods
add
dec
xchg
test
and
mov
sahf
mov
ja
dec
xchg
fs
out
dec
mov
xor
mov
xchg
shlb
pop
adcl
fidivl
scas
inc
sbb
xchg
jae
push
sbb
inc
adcl
xlat
sub
jl
insl
fwait
icebp
xchg
fdiv
shll
notl
mov
sbb
test
and
aaa
xchg
or
scas
mov
aad
sbb
adc
jg
add
test
sahf
dec
cmp
sbb
imul
jmp
jno
jecxz
cmpsl
out
scas
cmp
je
xor
cmpsb
pcmpeqb
std
add
enter
fists
mov
jle
mov
lods
ljmp
imul
dec
add
mov
xlat
add
test
nop
inc
lret
clc
sbb
or
dec
dec
test
adcl
movsl
lea
mov
aad
cmpsb
dec
push
lcall
jbe
rcrb
mov
movsb
pop
mov
jg
pop
pop
push
or
out
lret
mov
out
stos
pushl
push
xor
dec
leave
lret
in
cltd
mov
das
ljmp
das
test
in
jle
repz
repz
inc
inc
fisubrl
mov
mov
inc
imul
sbb
add
dec
fiaddl
mov
out
sbb
outsb
jbe
add
test
fldt
adc
sti
fldt
aam
jns
rcr
sub
add
cmp
push
arpl
xchg
dec
sub
jbe
xor
adcb
je
or
inc
jno
xchg
or
inc
out
shll
and
test
jle
popf
icebp
les
cmpsl
add
and
enter
jae
cmp
mov
les
dec
call
sbb
jmp
or
leave
push
cmp
rclb
mov
adc
out
and
aaa
lods
ret
mov
je
inc
ds
jge
xchg
or
shrl
lock
fsts
mov
jno
jae
repz
cmc
or
ret
xchg
sub
inc
jb
lock
in
push
jb
xor
leave
push
fcomps
jnp
pop
ficompl
aad
sbb
mov
mov
fstps
sub
xchg
ficompl
adc
dec
add
aad
ss
out
cmpsl
dec
scas
sbb
pop
std
xor
push
jns
adc
jns
cmp
jp
mov
push
mov
arpl
push
insb
pop
push
mov
dec
cmp
ret
xchg
xchg
dec
dec
rorb
stc
fidivrl
mov
xlat
or
sub
jns
mov
jo
shll
test
aad
fwait
jb
dec
repz
scas
push
push
dec
stc
inc
test
push
mov
in
imul
and
sub
mov
lcall
aaa
xchg
daa
rcll
fimull
jge
loopne
push
std
out
or
js
and
imul
cmp
pop
pop
mov
dec
jo
ret
lret
add
fstps
and
inc
add
or
push
pop
add
jno
aaa
out
pop
push
jl
xchg
je
xchg
pop
cli
test
mov
or
dec
in
fcom
mov
jge
pop
jp
cs
add
icebp
jnp
into
iret
popa
repnz
fsubr
cmp
cmpsb
sub
fcoms
ss
mov
aam
cmp
xor
enter
movsl
mov
push
mov
loop
jae
popa
mov
sub
in
int3
push
fsubs
jg
push
push
and
inc
aam
and
push
jl
aam
cs
mov
adc
cmpl
mov
les
inc
adc
push
gs
xor
fwait
cmc
es
dec
decl
mov
sub
pop
sbb
incl
fisttps
in
sahf
inc
repnz
and
mov
mov
xchg
add
lds
out
pop
lods
push
cmc
jle
sarb
and
shrb
jle
or
inc
cltd
jge
test
das
pop
and
cmp
out
or
sub
aam
and
xchg
xchg
roll
ja
mov
or
mov
mov
mov
cmpsl
xor
mov
mov
call
xor
mov
jmp
and
std
mov
dec
rclb
iret
push
icebp
cmp
xor
fistps
inc
addr16
and
jo
imul
scas
push
test
dec
or
int
faddl
jbe
ss
cmp
test
sub
sub
je
xchg
lahf
scas
and
test
jo
lret
mov
lahf
inc
dec
bound
addr16
mov
push
rcll
sbb
mov
or
fs
lret
sbb
icebp
negb
jecxz
das
push
ljmp
icebp
sbb
addl
bound
mov
cli
movsb
jno
call
addr16
adc
imul
scas
arpl
add
in
sbb
test
jno
movsl
mov
cld
ret
pop
dec
pop
and
outsl
ljmp
cmp
adc
insb
stos
push
mov
gs
xchg
bound
mov
push
sub
adc
scas
test
mov
outsl
js
sar
jecxz
enter
subl
dec
je
inc
pop
sbb
sub
inc
lcall
fdivr
ljmp
ret
or
js
hlt
testl
aam
or
movsl
bound
adc
movsl
sbb
icebp
and
adc
incb
scas
xor
cmp
xor
int3
shl
push
arpl
xor
cmp
inc
call
and
xor
and
loope
fnstcw
popa
lret
call
stos
jb
jecxz
xchg
mov
js
repnz
sub
add
lret
xchg
add
sti
xchg
sbbl
shrb
mov
xor
mov
mov
leave
mov
pushf
sti
or
addl
fistps
out
mov
mov
inc
sbb
rolb
cmp
dec
scas
jmp
inc
cmp
pop
dec
aad
dec
enter
xchg
enter
les
pop
sti
rcrb
inc
dec
test
sbb
cmp
mov
cwtl
mov
inc
ljmp
jnp
loop
fistl
subb
ja
fmul
or
fdivrl
inc
in
mov
sarl
adc
daa
cmp
aam
sub
mov
push
jo
ror
inc
outsb
add
mov
mov
xorl
cmp
rorl
out
lret
push
push
cmc
pop
dec
mov
cmp
add
inc
xor
scas
gs
cmp
cmp
lcall
insl
mov
cmpsb
int3
mov
push
add
mov
jecxz
jnp
push
fistps
cld
cld
mov
xchg
les
aaa
dec
dec
adc
icebp
mov
xor
or
scas
pop
lcall
bound
stos
nop
adcb
fcompl
imul
rorb
sarb
jnp
testl
movsl
or
pop
cmpsl
mov
call
jae
cmp
das
add
jmp
xor
in
dec
ds
and
xchg
mov
mov
scas
bnd
xlat
fs
jl
rolb
inc
or
cmpsl
xor
inc
ret
dec
sbb
movsl
inc
add
push
mov
das
frstor
inc
cmpsl
mull
lods
inc
fadds
inc
ss
fidivrs
js
mov
mov
lock
dec
mov
sbb
lods
shll
push
sbb
mov
mov
or
repz
xlat
jmp
pop
inc
jle
movsl
testl
push
mov
pop
push
fstp
adc
xchg
lock
xchg
mov
aad
lods
fistl
sbb
imul
into
add
popa
xchg
xor
push
dec
test
jecxz
mov
or
iret
jle
push
jp
ret
cmovno
sub
adc
shll
insb
cmp
lcall
mov
nop
add
in
sti
test
ljmp
xchg
test
mov
pop
out
add
shr
pop
ds
push
xchg
outsl
sub
jbe
fst
fistpl
mov
stos
mov
mov
insl
inc
dec
addr16
jb
pop
or
mov
xor
sub
fadd
insl
pop
icebp
push
cmpsl
jle
mov
sub
lret
lods
push
xor
jbe
push
fwait
xchg
xchg
pop
std
xchg
aad
mov
and
and
jg
stos
test
push
xchg
aaa
testb
adc
add
mov
cs
lret
push
or
scas
int3
popf
test
and
mov
int3
outsl
pop
adc
lods
mov
ds
ss
lcall
stc
fcompl
fstpl
mov
gs
sbb
jno
pop
imul
js
incb
and
and
hlt
outsb
cmp
fstl
loop
mov
or
xor
sbb
mov
in
leave
dec
das
movsl
dec
dec
cmpsb
cs
mov
repnz
or
stc
adc
adc
pop
inc
inc
popa
mov
arpl
je
aaa
loope
xor
movsb
dec
cmpsl
icebp
jge
jg
sub
pop
lret
jge
cmc
pop
cmp
jnp
or
mov
aas
int3
je
mov
or
sbb
jp
imul
mov
xchg
mov
dec
sbb
pop
stos
mov
test
lock
add
xchg
push
inc
adc
dec
cmpsl
xchg
xchg
mov
stos
in
inc
out
mov
push
ffreep
push
pop
mov
lea
mov
dec
jns
inc
repnz
cmp
inc
sub
pusha
std
hlt
sarb
jne
push
sbb
hlt
xchg
lcall
mov
js
and
push
jle
loopne
lods
ss
nop
sub
xchg
cmp
push
jno
jecxz
lcall
add
sub
push
add
inc
sub
in
push
or
movsb
xor
mov
arpl
movb
inc
push
imul
mov
sbb
pushf
xlat
sahf
mov
sbb
mov
and
jnp
push
popf
fsubrs
shlb
pop
push
mov
out
xchg
sub
mov
dec
cmc
adc
shl
lods
sub
in
ja
and
mov
cwtl
fstps
xor
cmpsl
shlb
iret
mov
mov
cwtl
lds
inc
cmp
ret
add
flds
aad
pushf
xor
gs
dec
cmp
addl
add
std
xchg
or
andl
xchg
push
out
subb
fdivrs
mov
adc
aam
lods
xor
js
mov
adc
cmp
repz
pop
jo
xor
sbb
icebp
sub
lret
jno
fldcw
mov
sahf
mov
add
sbb
sub
clc
enter
into
lret
aaa
faddp
dec
adc
lahf
and
pop
ds
repz
imul
jne
ds
mov
andb
mov
cmp
out
testb
pop
mov
jmp
out
out
jae
adc
lea
lret
pop
popl
testl
and
mov
ss
jae
mov
mov
jno
das
in
sbb
int3
js
sbb
rolb
pop
mov
stc
push
pusha
push
sahf
inc
daa
inc
cli
xor
mov
ret
ss
dec
cmp
mov
xorl
ss
aaa
sub
data16
add
hlt
jae
icebp
pop
dec
cmp
xchg
test
mov
xchg
cmp
xor
add
test
imul
push
jns
sub
xchg
xor
bndldx
hlt
jb
lods
xor
jle
cmp
cs
sub
mov
inc
xchg
mov
push
xchg
insl
mov
fucomp
lock
lods
push
xchg
in
dec
cmp
pop
cmp
pop
aam
add
xor
push
test
sbb
in
mov
and
mov
outsb
push
xchg
movsb
push
ljmp
push
es
addl
ffree
js
mov
xchg
push
dec
xchg
sbb
add
daa
pop
mov
fidivrs
jno
imul
outsb
out
or
test
and
lahf
lahf
dec
fstpt
cmp
mov
push
push
or
insb
ficoms
data16
jo
sbb
jecxz
mov
insl
sbb
pop
sub
frstor
loop
mov
inc
iret
jns
add
test
les
lret
sub
lods
out
pop
xchg
lock
jnp
adc
shrl
jmp
sub
dec
xor
divb
rcrl
out
into
xchg
inc
insb
mov
imul
pop
mov
cld
fwait
push
jge
mov
mov
int
and
and
adcl
dec
inc
bnd
movsl
jle
call
or
mov
dec
movsb
adc
movsl
ds
nop
xchg
fistps
mov
leave
scas
popf
pop
ljmp
into
jmp
adc
sbb
add
out
add
sub
out
fwait
stos
leave
sub
aad
sti
out
pop
inc
cld
lock
pop
mov
out
lret
or
lahf
lret
xchg
das
insb
aas
jo
mov
push
arpl
daa
imul
repnz
call
cmp
mov
in
sub
aad
ret
mov
int
inc
loopne
inc
scas
or
mov
add
pop
lds
call
cmpsl
add
jb
dec
stos
ja
adc
popa
push
sub
shlb
jnp
cld
pop
and
in
into
xorb
sbb
add
pop
xchg
lods
addr16
bound
xchg
imul
pop
or
addb
jbe
adc
aas
pop
jnp
pop
or
jno
in
and
sbb
mov
xor
lods
add
xchg
sbb
rolb
lock
mov
movsb
and
inc
std
pop
cs
mov
testb
in
cli
iret
mulb
andb
insb
xchg
xor
cli
ds
mov
add
sbb
dec
in
jecxz
popa
popa
jp
iret
inc
jmp
inc
pop
mov
add
negb
dec
sbb
imul
std
loop
mov
and
subl
cmp
mov
clc
out
aaa
jne
test
insb
nop
lods
add
shr
test
cmp
push
pop
xchg
out
out
sub
pop
ret
notl
jno
cmp
cmpsl
hlt
dec
testl
inc
xchg
push
leave
adcl
and
pop
std
mov
mov
mov
sub
adc
xor
jb
lret
mov
js
aas
cmpsl
xchg
pop
xor
mov
pop
xor
cmp
push
sub
cmp
int3
ds
pusha
out
mov
dec
mov
adc
fidivrs
gs
jmp
daa
jns
loope
and
hlt
pop
nop
pop
pop
mov
into
xchg
adc
dec
xor
sahf
ret
push
stos
and
cli
mov
xor
pop
int
pop
cmp
cmpsb
jae
xor
loop
pop
sub
js
js
fidivl
pusha
xchg
pop
int3
out
enter
inc
xor
add
ljmp
movsb
cs
push
mov
mov
push
fldcw
sub
ffreep
pop
inc
idivl
jmp
or
xchg
cmp
jnp
insl
push
push
pcmpeqd
or
lods
sbb
push
stc
and
mov
push
push
rcr
stos
data16
mov
adc
lea
xor
xchg
add
add
inc
add
add
push
pop
mov
pusha
ret
mov
xchg
push
push
insl
sbb
mov
xorb
shll
stc
sub
test
add
lds
add
push
mov
push
sbb
xchg
pop
outsl
xchg
jle
xor
pop
and
push
addr16
and
xadd
mov
shlb
addl
lock
popa
shrl
adc
pop
iret
push
movsb
jno
dec
xlat
or
ret
fistpl
dec
addr16
mov
push
sti
mov
cs
mov
sahf
popa
jle
add
cmp
scas
adc
mov
sbb
sub
ret
in
cmp
push
xchg
jns
sti
sar
lcall
jb
jp
xchg
or
scas
lret
sbb
stos
aas
js
lahf
mov
out
cs
les
dec
stos
push
in
jbe
cwtl
pop
orb
and
xor
lea
pop
xchg
mov
xchg
sub
test
mov
cmpsl
mov
div
lret
cmp
cmc
adc
cmp
inc
test
aas
out
cmp
into
push
outsb
jae
jge
pop
push
dec
xchg
sbb
imul
dec
cmp
shrl
jno
cmp
ret
das
push
pshufb
pop
dec
cmp
iret
sbb
mov
bound
scas
inc
incb
orl
mov
js
sub
into
mov
jmp
cld
push
cmp
into
add
loopne
or
lods
push
daa
dec
xchg
ror
dec
mov
sub
js
or
xor
adc
scas
adc
in
dec
jne
cmc
pop
adc
adc
mov
xchg
hlt
cmpsl
xchg
xchg
lea
fs
inc
mov
cmp
xchg
and
mov
cmp
jmp
mov
jge
mov
mov
bound
mov
cmpsb
inc
les
outsl
or
loop
loope
sub
jg
xchg
and
ret
or
shrb
insl
cltd
out
cmp
jg
sbb
adc
scas
test
jne,pn
push
inc
cmp
ljmp
test
add
xchg
daa
mov
xor
fsub
shr
insb
clc
dec
test
movsl
cmc
loop
out
cmpsb
sar
dec
mov
jge
inc
lret
sbbl
mov
dec
and
jnp
addr16
in
pop
xchg
gs
cli
jne
xorl
pusha
pop
test
jmp
movsb
cmpsl
test
rolb
mov
xchg
outsl
loop
sub
cmp
lahf
enter
stos
mov
sbb
pop
mov
sub
and
fwait
jns
jl
jae
xor
mov
in
icebp
sbbb
mov
bswap
inc
or
jbe
setb
loop
dec
sub
cmpl
cltd
mov
jecxz
ficomps
pushf
iret
inc
cmp
in
mov
jnp
push
dec
out
sbb
cmp
imul
cmpsl
int
dec
pusha
mov
push
mov
cmp
call
movsb
test
jbe
push
test
mov
aas
mov
call
dec
inc
sahf
cltd
pop
aam
cmpb
imul
pop
add
lea
mov
jo
fdivl
mov
ja
jne
inc
and
ret
cmp
mov
push
mov
cmp
fcmovb
mov
mov
sbb
lock
mov
ss
mov
dec
pop
mov
outsl
divb
fdiv
dec
cltd
in
lock
mov
dec
sahf
xchg
iret
icebp
dec
jmp
scas
pop
jecxz
add
repnz
dec
inc
jg
pop
jecxz
ljmp
inc
int
pop
repnz
jo
subl
push
xorb
sbbb
cmp
dec
cmpsb
inc
cmp
and
loope
sti
sti
lahf
inc
sub
les
lds
push
and
sbb
push
jb
cli
add
jecxz
rorb
in
xchg
cmp
arpl
mov
jo
xor
adc
pop
inc
out
iret
cltd
xchg
lods
aam
xor
adc
adc
adc
inc
adc
mov
xor
adc
lea
adc
jb
cwtl
iret
jl
call
dec
push
loop
and
rcrl
xchg
negb
xchg
rcll
out
add
fnsave
jbe
adc
cmp
test
lret
fwait
adc
push
or
or
mov
out
xchg
call
push
pop
enter
jne
int3
push
outsl
pop
clc
mov
dec
pop
pop
sbb
sub
jg
push
pop
xchg
xchg
sbb
cmc
fists
xchg
insl
or
test
pop
jno
xor
and
push
icebp
and
shll
inc
mov
sub
test
sarl
stos
imul
xor
pushf
into
mov
enter
out
push
popf
dec
es
fistl
gs
shrb
add
xchg
mov
jg
mov
icebp
add
sub
push
push
cmp
subl
mov
sbb
cwtl
and
adc
data16
outsl
jl
loope
lods
mov
movsb
popf
imul
dec
les
imul
and
aas
jmp
pushf
push
notl
stos
inc
sbb
cld
iret
dec
push
mov
incl
in
int3
cmp
imul
and
inc
sub
fmull
push
out
sbb
pop
aaa
lea
cltd
sbb
lds
xchg
inc
lock
sahf
add
push
cmp
mov
lds
popa
inc
addr16
jp
pop
ffree
repz
cmp
stc
pop
mov
pop
adc
dec
test
jge
push
loop
movsb
mov
jb
mov
xacquire
lret
mov
mov
fwait
lret
test
or
ficoml
and
fisubs
loop
inc
jae
add
flds
add
sbb
inc
outsb
xchg
shrb
fbld
xchg
pop
daa
xchg
dec
or
sub
loop
fwait
cmp
insl
add
jnp
or
or
ljmp
dec
xchg
push
dec
add
dec
std
in
arpl
cli
iret
jae
aaa
adc
mov
sti
jmp
xlat
lcall
mov
push
out
pop
xlat
jnp
mov
adc
push
pop
mov
sub
xor
inc
pop
sbb
out
and
stos
imull
and
shlb
out
loopew
insb
bound
sub
test
add
sti
pop
rorl
enter
push
adc
and
fcomip
pop
fnstenv
jae
in
test
xchg
xchg
xchg
xchg
ds
cli
js
jae
xchg
in
pop
sbbb
daa
jge
cmp
jle
out
fsubrl
pop
daa
dec
lods
pop
inc
into
inc
das
nop
stc
pop
loope
dec
adc
stc
pop
dec
adc
in
je
int
mov
mov
int
rorl
mov
dec
sub
adc
and
ficoml
xlat
inc
hlt
jns
sub
sub
mov
sbb
nop
push
dec
leave
inc
test
dec
mov
in
movsb
lods
xchg
pop
jp
enter
mov
jns
ror
pop
or
mov
ja
or
in
or
jg
mov
or
mov
or
rol
pusha
inc
push
lret
inc
pop
fcmovne
fs
xlat
dec
jns
xchg
cmpsl
or
pusha
xor
leave
push
ja
push
jp
insl
cmp
in
jb
xchg
cmpsb
or
mov
js
push
dec
dec
lods
sbb
orl
xchg
movsl
xchg
lds
xlat
xchg
sbb
add
cmp
or
std
shll
jl
inc
mov
push
inc
sbb
mov
pop
lods
pop
cli
ret
cmp
pop
jp
out
and
leave
lods
add
vunpcklps
loope
cmc
ficoml
mov
lret
and
popa
std
mov
and
add
mov
mov
stc
or
je
or
bound
leave
movsl
pop
push
loope
sub
add
mov
xchg
or
mov
test
cli
cmp
mov
lret
bound
fdivl
stos
inc
inc
popa
xchg
je
shll
cmp
adc
pushl
in
pop
cltd
adcl
addb
popa
aas
scas
mov
test
inc
in
xchg
push
add
mov
xor
mov
mov
jl
cmp
push
mov
lret
orl
mov
sbb
xchg
jns
mov
push
sbb
lea
jl
es
mov
inc
xor
sbb
int3
loope
and
mov
rolb
gs
push
movsb
add
dec
je
out
out
or
jb
pop
lods
test
sbb
lcall
sbb
dec
xchg
inc
test
lret
out
test
xlat
lret
icebp
push
lea
mov
pop
sub
in
sbb
fimuls
pop
xchg
xchg
pop
jno
adc
nop
test
cmpsb
jle
jg
test
sub
repnz
bnd
sbbl
and
in
sbb
in
sahf
enter
cli
push
pop
xchg
and
out
in
add
push
in
sahf
aaa
pop
frstor
rorl
js
sub
enter
movsl
jmp
push
lahf
ja
mov
shr
ss
sub
sar
cmp
lahf
fstl
push
imull
or
inc
adc
push
lret
sti
mov
or
and
push
and
push
int
push
jno
dec
pop
or
mov
xor
sub
push
jmp
aad
negb
jae
jbe
rcrl
inc
mov
cmpsl
sar
in
push
repnz
mov
mov
jp
daa
hlt
mov
andl
sub
xchg
dec
adc
std
cmp
adc
push
jne
jb
inc
std
js
mov
or
jns
aad
repz
cmp
sub
mov
add
out
xor
xlat
push
dec
in
add
mov
jae
pop
xchg
xor
shrb
sub
push
movsb
push
dec
fsubrs
dec
lods
lret
sbb
inc
sbb
push
movsb
dec
push
jle
mov
push
cmp
jle
push
push
fmuls
popf
add
add
ss
cmp
repnz
xchg
mov
push
loope
ret
dec
lods
sub
scas
cmp
loop
sti
stos
inc
or
adc
xor
es
imul
and
iret
add
mov
loope
lds
mov
fists
mov
sub
mov
cmp
jne
jmp
xor
ss
std
cmp
adc
cmpsl
sbb
popl
pop
cltd
sub
pop
add
sub
jb
jge
fdivrl
pop
inc
mov
fst
xchg
adc
mov
mov
jmp
pop
clc
fbld
inc
sub
rclb
mov
and
test
out
in
test
mulb
add
call
pop
mov
lea
dec
cmp
ret
andb
lock
inc
clc
cmp
ss
out
test
inc
pop
xchg
sbb
or
icebp
inc
adc
nop
sti
insl
pop
fcomps
mov
xor
mov
data16
jge
mov
xlat
cltd
jg
pushf
mov
scas
mov
les
test
pop
scas
and
jmp
push
xchg
dec
xchg
inc
scas
cmp
and
andl
dec
xor
test
pop
inc
cmc
mov
js
sub
lods
pop
shlb
push
mov
push
dec
jmp
testb
or
outsb
movsl
out
in
aas
xchg
dec
int
mov
fs
movsl
push
pop
or
ljmp
out
jae
insl
xchg
fsubr
scas
sbb
mov
les
sahf
or
aad
leave
paddsb
icebp
pop
mov
sbb
add
mov
cmp
fildl
xor
pop
xchg
xchg
jnp
shrl
lret
int3
lea
dec
mov
push
mov
das
push
and
mov
xchg
call
sahf
out
xchg
sub
sub
jp
mov
or
dec
sbb
fcomp
jle
std
dec
mov
inc
cwtl
sbb
insb
xor
ficompl
icebp
jno
push
lret
rcrb
lds
pop
add
rcll
sub
jl
pop
fldenv
aaa
movsb
andl
dec
jns
pop
fldcw
lea
mov
adc
cmp
jp
mov
sbb
fs
jbe
xor
pop
mov
cmp
cmpsl
mov
das
jmp
jne
daa
xlat
jnp
dec
adc
mov
sub
in
sbb
outsb
xchg
push
lods
xchg
or
adc
jb
fwait
out
push
or
jecxz
mov
lcall
out
xor
push
cmpsb
xchg
add
push
daa
ficompl
mov
cmpl
aas
mov
inc
ret
mov
insb
imul
mov
pop
sub
pop
pop
insl
cmp
mov
into
add
mov
lret
and
lahf
mov
rep
addr16
repz
into
fxch
fnsave
sbb
daa
lcall
aad
and
shl
pop
push
mov
shrb
fsts
or
pop
or
xchg
pop
fwait
popa
inc
pop
inc
sub
movsl
mov
inc
mov
pop
and
outsb
jmp
dec
in
dec
inc
in
mov
in
xor
stc
mov
or
and
add
adc
mov
pushf
pop
mov
push
inc
das
ds
popa
gs
negb
mov
and
addr16
xchg
xchg
rcrl
leave
inc
xor
mov
sbb
lods
push
into
xlat
adc
sbb
gs
test
push
inc
fmull
pop
rorl
inc
lods
xchg
les
xor
pop
and
fs
pop
fucomp
in
push
int
sbb
into
inc
outsb
popf
popa
sub
push
mov
mov
and
mov
push
icebp
inc
repz
mul
inc
jecxz
das
push
negb
ret
jle
jns
pop
jmp
cmp
out
pop
xor
pop
xor
lcall
mov
pusha
mov
daa
insb
pop
pop
mov
sub
int
push
and
inc
pop
mov
inc
mov
gs
lods
int3
stos
xchg
rolb
cmp
xchg
push
nop
sub
xchg
mov
cmp
lock
arpl
mov
dec
es
in
test
xchg
or
inc
push
pop
pop
adc
shll
aaa
cs
fldl
sti
cmp
addb
icebp
sub
dec
int3
jmp
or
loopne
aam
daa
jbe
push
pop
outsb
sbb
xlat
ja
sub
not
arpl
lods
out
ja
outsb
jmp
in
fistpll
ret
hlt
stos
or
push
repnz
pushf
aad
jae
inc
sub
cmp
xlat
fdiv
xchg
rorb
xor
test
jmp
inc
std
xchg
rcrl
lods
xor
pop
pop
inc
dec
icebp
sti
fnsave
popf
mov
cmpsb
mov
dec
fldt
andl
mov
cmp
mov
lods
or
mov
popf
or
pop
sahf
sti
pop
divb
data16
rcr
xchg
aam
push
or
and
sub
clc
and
adc
jle
sbb
pushf
sarb
fmull
mov
adc
ljmp
jb
scas
mov
je
mov
pop
test
loop
in
orl
andb
das
mov
mov
fisubs
movsl
outsb
movsb
cwtl
cwtl
sbb
fwait
test
std
xor
lods
cmp
mov
adc
lods
or
mov
jne
stc
js
sub
sub
scas
mov
inc
sti
into
lods
jge
pop
mov
jb
pusha
jne
mov
mov
out
push
sbb
rcrb
mov
popa
sub
sbb
sahf
mov
push
fwait
dec
dec
insl
test
hlt
imul
testb
fidivrl
pop
jb
fwait
rorb
shrb
jge
arpl
or
or
xchg
pop
jns
push
sub
and
cmpsl
xchg
pcmpgtb
dec
or
test
jge
add
mov
pop
outsl
mov
xchg
mov
insb
push
mov
sub
cmpsb
fwait
jmp
xchg
lock
jmp
mov
dec
or
ljmp
add
cwtl
xor
or
lods
nop
orl
cwtl
out
stc
jmp
aas
mov
pop
push
inc
or
push
or
add
xchg
xchg
lods
nop
insb
push
addb
adc
or
mov
mov
mov
and
jge
mov
sbb
jecxz
or
mov
outsl
sti
push
pop
test
jmp
inc
notb
int3
jo
cmp
loopne
xor
push
push
and
sbb
pop
and
or
adc
cmp
cmpsl
add
xorb
pushf
pop
push
or
pop
movsl
out
sub
xchg
adc
dec
sbb
or
mov
enter
cmp
mov
push
loop
sbb
insb
cmp
pop
inc
or
int
cltd
inc
pop
ficoms
cmp
into
push
jecxz
std
xchg
xchg
and
sub
cmp
lock
js
fs
cmp
pop
scas
or
in
mov
rcr
or
inc
and
mov
movsb
jmp
shrl
xchg
aad
pop
mov
in
cli
out
cmp
jae
cmp
hlt
icebp
addl
fucomp
push
mov
adc
gs
mov
rcl
xchg
das
in
sub
cwtl
scas
ja
xchg
testb
mov
js
imul
jmp
add
stos
dec
dec
test
and
rcrb
popa
aas
and
mov
jbe
mov
outsb
mov
jns
push
add
add
mov
or
fdivl
dec
fcmovb
bound
jp
cmp
mov
ljmp
mov
out
mov
outsl
sbb
jns
rcrb
ficoms
lret
js
pop
lods
xlat
aam
jb
outsb
inc
iret
repnz
iret
mov
push
adc
aas
add
popa
add
call
pushf
dec
int3
ret
mov
lds
xor
adc
nop
lcall
mov
add
das
mov
mov
leave
clc
sbbl
jb
stc
mov
xchg
jo
lahf
out
leave
cmc
xor
inc
outsb
cmp
movsb
adc
loope
sbb
aaa
mov
sbb
in
shll
nop
test
sbb
clc
loopne
xchg
aas
cmpsl
leave
out
pop
xlat
repnz
lcall
adc
pop
or
mov
sub
popa
xchg
gs
adc
pop
fcompl
push
push
out
xchg
jb
mov
in
clc
aad
push
xor
jecxz
pop
sbb
sbb
inc
sbb
adc
mov
and
fldenv
jnp
andl
rorl
movsl
dec
iret
push
ret
adc
fnstsw
push
dec
in
or
cmp
sbbl
fs
xchg
add
and
inc
pxor
aad
popa
lods
push
sti
stos
loop
add
ret
adc
adc
out
ljmp
xchg
lock
repz
jp
push
jg
shlb
inc
lods
out
cmpsb
cmp
int
shll
addr16
sarb
pushf
adc
add
lods
test
test
push
in
pop
clc
sub
pushf
mov
inc
fwait
inc
adc
xor
iret
cmp
fists
repnz
out
cs
xchg
cmpsb
push
loopne
orl
jl
push
dec
mov
out
mov
dec
jno
scas
push
stos
mov
mov
shlb
push
sub
fs
aam
insb
in
les
xorb
ljmp
sbb
and
mov
popf
dec
mov
add
ret
xor
push
int3
subl
xorb
repnz
sub
xchg
test
sub
mov
movsl
xchg
mov
das
sbb
stos
notl
call
inc
add
push
outsb
bound
pop
pop
xor
ss
mov
and
mov
push
movsl
adc
or
insb
sbb
int3
inc
xor
xchg
xchg
les
ds
or
mov
outsl
push
sbb
add
mov
in
and
lods
xlat
popa
jnp
nop
pop
test
dec
clc
movsb
mov
cli
mov
mov
push
mov
and
out
adc
or
pushf
pop
push
rclb
cmpsb
adc
jmp
cmc
imul
in
mov
push
out
data16
in
and
or
ret
push
sub
sub
xchg
mov
hlt
add
jno
testl
sub
mov
dec
pcmpgtd
mov
and
loop
xor
cmp
push
inc
dec
mov
jnp
cmpsl
jmp
sub
cmp
fildl
repz
arpl
fwait
xchg
push
repnz
inc
jno
or
push
repz
xchg
mov
and
mov
mov
scas
sti
or
cmp
negl
clc
cltd
adc
sti
jle
iret
push
or
and
jo
dec
rcrl
cmp
aaa
sub
xchg
out
sbb
in
inc
mov
lret
ret
shll
and
pop
cmp
call
or
and
pop
jge
shl
ret
movsl
or
sub
idivl
shl
lcall
cld
fcmovnb
adc
and
lcall
or
repz
andb
jecxz
aaa
mov
adc
mov
stos
insb
push
scas
popf
cmpsl
es
ret
jns
adc
cltd
inc
xchg
cmp
sahf
lcall
repz
in
cmpsl
bnd
loopne
pop
pushf
pop
popf
loop
xor
cmc
call
aam
dec
movsb
les
stc
icebp
sub
pop
lret
arpl
xor
lret
xchg
dec
push
aaa
pop
xchg
lea
iret
push
mov
loope
mov
inc
popf
cmp
lods
cmp
jno
in
jmp
push
xor
mov
call
and
cmpsl
pop
in
into
push
or
sub
cld
sub
mov
push
adc
mov
aas
push
inc
sbb
js
pop
jnp
jb
mov
xor
inc
ret
mul
jb
imull
jmp
je
out
fidivrl
loop
mov
mov
mov
inc
push
fmull
xchg
xor
bound
cmp
popa
sarl
scas
mov
rcl
dec
stc
dec
fidivs
dec
pushf
shlb
adc
idivl
repz
pusha
cmp
bnd
jmp
inc
add
dec
arpl
sub
pop
fldcw
arpl
mov
call
inc
stos
sti
cmc
mov
fbld
test
arpl
cli
les
xchg
adc
lret
xor
inc
loop
je
jg
test
mov
popa
imul
sub
cmp
sbb
jge
pop
out
mov
pop
push
or
push
xchg
cltd
popf
fimull
lods
movsb
ret
out
lcall
scas
pop
cmpsb
jo
xor
add
xorl
fsubrp
out
scas
add
or
and
lea
aaa
imul
sbb
cmp
jae
sub
add
xchg
mov
imul
add
xchg
cmpsb
mov
daa
aad
out
aas
movsb
mov
mov
jmp
inc
aad
out
mov
punpckhdq
mov
xlat
out
in
dec
push
adcl
sub
loop
mov
xchg
fcmovnb
lea
and
sbb
movl
and
sbb
and
stc
sbb
push
xor
shll
test
int3
arpl
mov
call
sbb
int
ja
sub
aas
leave
std
lret
pop
or
jg
xchg
subb
pop
fcomp
popa
in
or
ljmp
mov
notl
mov
xchg
out
stc
insb
pushl
loope
shll
mov
cld
cltd
push
dec
add
fisubs
mov
or
xor
jl
mov
outsl
jp
imul
loop
mov
aam
shl
adc
stc
fchs
pop
xlat
push
aam
gs
imull
outsl
out
jno
mov
cmp
cmp
insb
adc
push
cs
sbb
sahf
jge
mov
jge
push
xlat
jnp
daa
orb
les
fs
add
push
int
cmp
clc
inc
sti
lods
cmp
dec
mov
jecxz
iret
xor
in
or
out
insb
adcb
sbb
cmp
jb
rcrb
outsl
das
loop
jae
lds
addr16
mov
int3
out
push
shrb
aaa
not
add
jne
shrb
test
fcoml
sbb
rcrl
test
pushf
xor
pop
sti
xor
pop
dec
xchg
push
cmp
ret
cmp
adc
jbe
scas
test
popf
xlat
mov
mov
pop
adc
aam
les
mov
enter
adc
stos
xchg
out
jno
fistl
dec
xchg
fs
mov
movsb
jns
push
fimuls
int
std
out
add
movsb
je
pop
and
or
popfw
test
ljmp
sub
adc
jmp
cmp
ss
out
lds
outsb
and
xor
inc
jbe
xchg
fs
dec
cwtl
dec
sbb
ljmp
insb
cmp
mov
xor
add
fdivrs
jmp
out
bound
and
and
shll
or
mov
les
clc
cmp
mov
push
les
adc
push
std
push
push
or
jg
mov
jmp
mov
int
insl
sbb
cmp
stos
add
pop
inc
and
mov
fiaddl
xor
dec
je
loop
inc
sarl
iret
stos
fmulp
cmpsl
xor
fabs
jle
sub
dec
fmuls
arpl
jle
adc
fistps
lret
ror
dec
jle
push
jne
in
jg
and
pop
dec
mov
data16
add
pop
add
dec
aas
inc
mov
rclb
lods
push
push
arpl
sbb
jne
cmp
daa
movl
jl
mov
es
jb
fidivrl
mov
xchg
in
je
and
fsubrs
mov
outsb
popa
xor
cltd
aas
pusha
insl
mov
mov
fnsave
mov
nop
lret
xchg
push
cmc
pop
out
roll
xor
test
push
xor
cmp
or
imulb
mov
cmp
movsl
and
pop
and
out
inc
iret
lahf
scas
xchg
sub
xor
pop
into
push
jg
mov
or
movsb
adc
aad
mov
add
or
fistpll
jae
clc
shl
fildll
lods
add
dec
push
sbb
rcl
nop
pop
out
add
rol
mov
or
test
lods
repz
cltd
in
inc
inc
adc
out
test
xlat
dec
ficomps
ds
dec
lods
jne
mov
xchg
mov
cwtl
lahf
seto
jns
dec
jae
cmp
fistpll
dec
sub
rorb
and
stos
mov
mov
inc
push
or
push
imul
cmovns
xlat
xor
arpl
sub
in
add
push
and
sub
outsl
sbb
aaa
sbb
xchg
or
jecxz
loop
frstor
rcrl
inc
xchg
push
mov
and
je
push
loopne
loopne
push
mov
ss
sub
cmpsl
fdivrl
lret
dec
insb
cmc
mov
or
rclb
test
mov
xlat
fisubrl
mov
sbb
jle
jne
arpl
movsb
stos
sbb
subl
out
push
stos
jmp
sub
imul
out
outsb
loope
sub
loop
mov
xchg
sub
cmpsb
pop
test
aad
repz
jl
xchg
lods
shlb
loopne
sbb
pop
movsb
shrb
lahf
cmp
pop
pop
jbe
push
xchg
sti
insl
add
sbb
hlt
sub
out
add
arpl
fsts
call
ret
pop
sahf
jns
orl
mov
add
mov
lahf
push
inc
jl
jnp
fsubrs
inc
mov
xor
xchg
inc
dec
cmpsl
stc
cmp
mov
sub
cmp
test
adc
mov
test
xlat
aaa
ja
push
repz
xor
dec
cmp
add
test
and
fsubp
lret
inc
sub
cli
dec
xchg
push
mov
push
sub
cli
data16
movsl
jecxz
inc
push
or
mov
sub
push
adc
or
xlat
sbb
adc
lret
bound
mov
dec
jg
adc
sti
mov
das
pushf
into
jo
mov
nop
jns
repz
push
jmp
lret
fs
xchg
fiadds
incl
mov
mov
adc
out
lock
sub
mov
movsb
fcompl
int
adcb
aad
and
push
mov
mov
sub
sub
dec
out
and
cld
sbb
xlat
or
sbb
sbbl
icebp
leave
jecxz
add
lcall
jg
xor
xchg
ja
lds
test
lds
divb
insb
repnz
add
fcoml
mov
inc
lret
cmp
stos
lods
outsl
push
stos
mov
sti
push
xor
mov
add
test
mov
test
imul
ret
xor
loop
aaa
inc
aam
cwtl
mov
imul
pop
mov
shld
cld
add
call
ja,pn
sub
iret
cmpb
std
push
mov
mov
or
xlat
enter
cmp
and
xchg
push
imul
js
add
and
nop
fwait
or
fidivs
mov
aad
mul
js
hlt
loopne
cs
or
xor
push
in
inc
push
mov
pop
test
data16
pand
test
aas
inc
out
inc
push
pop
int
out
sar
das
int3
add
cmpsb
stos
jbe
pop
pop
inc
adc
repnz
sti
mov
mov
ret
push
adc
sbb
sbb
xlat
inc
push
dec
dec
mov
xor
adc
and
xor
sahf
push
pop
inc
sbb
xchg
pop
inc
lcall
insl
cmpsb
adc
pop
sbbb
pop
fcompl
loope
inc
rcl
cmpsb
add
adc
stc
mov
or
jb
mov
xchg
gs
test
repnz
hlt
and
jle
adc
push
test
lds
mov
sbb
fldenv
push
loope
orb
test
jae
sbb
adc
imul
inc
out
xor
or
icebp
jle
sub
adc
add
inc
repnz
pop
call
mov
dec
lods
push
pop
sub
pop
fmul
inc
popw
push
jge
adc
movsb
mov
sbbb
add
pop
jmp
adc
ljmp
fs
or
bswap
adc
fmul
push
ret
test
pop
sub
lods
mov
pop
sbb
jnp
aad
lcall
pop
enter
shl
out
ljmp
dec
popa
mov
repz
jb
imul
jl
add
jle
das
shrb
xor
test
push
dec
mov
les
in
pop
or
iret
outsb
adc
add
adc
sub
shll
jne
sbb
dec
push
dec
mov
jb
jne
pop
jmp
jb
inc
xchg
filds
test
cmp
nop
dec
push
lcall
cmp
test
into
outsl
adc
je
iret
subb
dec
push
adc
call
push
call
xchg
cld
pop
sbb
repnz
pusha
jp
add
dec
dec
imul
mov
and
push
cmp
mov
dec
adcl
shll
addr16
addl
sbb
mov
pusha
xchg
out
lcall
xor
cmp
addl
dec
jp
lea
movsl
loop
sub
xor
push
mov
pushf
outsb
cmpsb
sub
adc
jo
int3
push
repz
inc
dec
xchg
adc
mov
jecxz
jp
sub
pop
out
sub
mov
rcll
dec
mov
clc
aas
andl
je
mov
or
in
inc
stos
inc
xchg
popa
flds
icebp
sub
outsb
mov
cmovp
mov
gs
jle
cmp
mov
or
test
inc
pop
add
mov
xor
mov
add
xchg
or
call
scas
inc
pop
pop
xchg
bnd
sbb
daa
test
pop
lahf
sub
fisttpll
xor
add
addb
push
dec
bound
outsl
lods
mov
adc
scas
scas
cmp
and
push
cmp
lods
aad
je
jb
iret
push
lret
sbb
fwait
in
ljmp
mov
ljmp
mov
cmpsb
lods
mov
int3
push
xchg
stos
adc
imul
xchg
int3
jmp
mov
ret
sub
dec
mov
ret
push
push
pop
pop
gs
ja
outsb
dec
sub
mov
push
add
ficoms
fcmovu
popa
adc
mov
enter
test
xchg
push
add
mov
add
cmp
repnz
mov
mov
mov
test
int
adc
xchg
sbb
mov
add
cli
and
sti
pop
pop
popf
inc
out
mov
and
adc
mov
fsubrs
imul
mov
int3
jno
or
fldcw
pop
rorb
jbe
jp
or
imul
movsb
aad
call
js
or
iret
pop
lret
xor
sti
mov
loopne
fistps
leave
dec
sub
xchg
insb
test
test
push
lret
int
mov
mov
jbe
push
sub
cmp
test
sub
sub
hlt
or
ror
or
mov
pop
sub
or
in
mov
or
mov
jp
jp
mov
pusha
cwtd
inc
inc
add
jle
mov
shlb
jns
arpl
int
je
sub
inc
aam
sti
rcrl
lret
mov
stos
xor
push
sahf
leave
pop
pop
sbb
loopne
add
subb
int
rclb
jle
clc
sahf
fcmovu
jb
int
mov
test
dec
push
mov
sarl
mov
sbb
jecxz
arpl
xor
loope
mov
push
jl
ret
pop
call
test
or
jnp
arpl
out
icebp
scas
push
bound
mov
dec
xor
xchg
movsb
fisubrs
lcall
icebp
arpl
cmpsb
sbb
and
stos
jecxz
mov
dec
push
int3
aaa
fmull
adc
lock
inc
ds
repnz
sub
iret
cmpb
push
push
test
ja
shl
inc
sarb
ret
pop
bswap
ret
dec
jne
std
idivb
sub
and
fwait
inc
sub
dec
mov
fidivl
xchg
jbe
mov
repnz
and
inc
xrelease
lods
pusha
je
jae
cli
pushf
or
or
stos
jnp
call
es
rclb
stos
inc
xor
aad
jmp
jno
pop
pop
adc
in
jae
xchg
lock
adc
shlb
mov
jp
jecxz
cmpsb
nop
repz
into
dec
jmp
test
xchg
mov
jo
insl
dec
dec
mov
aas
in
xor
stc
ret
xchg
in
fdivrl
loop
sbb
outsb
test
inc
iret
addb
fwait
sub
int
mov
in
or
push
mov
mov
fnstcw
cwtl
inc
into
cltd
xor
and
cs
cmp
push
sbb
loop
adc
addr16
mov
sbb
mov
mov
mov
movsb
mov
hlt
shl
orl
mov
mov
dec
pop
cli
stos
pop
stos
aas
or
add
push
cs
mov
pop
cld
jl
call
mov
lcall
mov
inc
fstps
in
push
add
mov
xchg
imul
jb
xlat
stc
mov
inc
icebp
testl
push
push
mov
ret
scas
int
cld
sub
leave
mov
fmul
xor
inc
add
mov
adc
and
mov
iret
ret
std
push
push
push
je
lret
lahf
stc
sahf
inc
sbb
cmpsl
xchg
lahf
ror
inc
mov
cmp
stc
sub
arpl
test
or
cmp
cmp
jae
mov
pop
ljmp
push
movhps
mov
mov
mov
in
jecxz
mov
jecxz
in
call
cltd
mov
aad
sub
sbb
and
inc
into
mov
stos
add
scas
jae
popa
or
fadds
xor
xor
bound
insb
or
push
inc
add
lods
movsl
adc
xor
ret
lcall
mov
inc
fdivrs
inc
jecxz
int
xchg
jmp
movsb
out
inc
sub
push
sbb
sub
jmp
cmp
mov
and
and
cmpsl
xor
dec
out
sbb
ss
pusha
xchg
cmc
and
pop
out
test
repnz
jge
xor
dec
gs
pop
xchg
add
js
inc
aam
addr16
outsl
aad
xor
int3
xchg
lret
imul
addr16
pop
push
pop
mov
mov
add
or
mov
jbe
daa
mov
call
call
adc
add
mov
pop
pop
jl
sbb
leave
sti
out
sbb
or
sbb
jae
daa
cmpsl
idivl
push
lods
push
rol
scas
mov
xor
lods
or
cmp
lock
xchg
mov
jo
pop
loope
xchg
jle
aad
cli
pop
fwait
cltd
fldl
pop
dec
addr16
jns,pn
shll
cmc
sub
jge
jae
mov
mov
ss
dec
inc
cltd
int
hlt
pop
push
movsl
add
mov
mov
pushf
and
adcl
lods
enter
sbb
or
push
popa
pop
push
int3
aas
test
xchg
add
mov
adc
push
punpcklwd
cmp
sub
rolb
cld
jne
int
push
pop
and
data16
jns
mov
jo
xchg
das
mov
cmp
hlt
push
cld
ja
popf
test
dec
adc
loope
ret
jae
cli
cmpsb
push
push
cmp
sub
iret
adc
sarb
pop
loope
push
pop
adc
loop
fists
roll
outsl
cmp
pop
lods
loope
pop
push
push
loop
and
daa
mov
mov
sar
std
js
add
sbb
dec
fidivs
sub
mov
ss
in
push
imul
loop
ficoml
in
fidivl
mov
ljmp
push
test
push
test
outsb
xchg
mov
sub
cmp
fimull
jle
into
je
adc
add
les
and
xchg
dec
or
sbb
cmpsb
out
test
xor
lret
clc
imul
add
push
push
mov
or
and
dec
fstpt
test
jno
pop
push
das
mov
adcl
adc
imul
je
nop
aas
out
cs
mov
dec
push
inc
ljmp
pop
adc
mov
lock
lahf
sbb
mov
and
cmc
jp
pop
imul
fstl
xorb
scas
test
adc
sbb
cmpsl
sahf
cmp
mov
jne
pop
icebp
pop
loop
and
sbb
cltd
imul
rcll
adc
fistps
ja
mov
push
pusha
mov
das
mov
lahf
sub
mov
sti
clc
sbb
or
mov
adc
mov
enter
cs
movsb
imul
mov
fistps
stos
test
pop
and
jg
dec
rolb
cwtl
mov
dec
aas
out
mov
les
pop
push
lods
out
lea
pop
mov
jbe
xor
ret
in
fstl
lods
leave
mov
scas
lret
fisubrs
test
arpl
loope
sub
jb
dec
fildll
mov
xchg
jecxz
enter
dec
sahf
les
adc
sub
fnstcw
je
push
jnp
cli
out
hlt
adcb
mov
cmp
cwtl
shrb
loopne
out
idiv
mov
xor
js
in
and
add
test
ret
pop
daa
jge
xor
lods
xchg
inc
subl
movb
push
pop
sub
imul
xchg
mov
and
jne
data16
cs
or
test
jecxz
jno
cld
sub
sub
ret
aaa
adc
fs
push
es
sti
aam
cmp
das
ja
das
push
add
pushf
push
mov
xchg
push
dec
outsl
mov
rol
je
les
loop
out
nop
jnp
add
dec
cmp
mov
sbb
push
mov
pop
fwait
repnz
fisubrs
aaa
fmul
pop
idivb
lret
mov
mov
sub
mov
xchg
mov
scas
cmp
icebp
lret
imul
outsb
sub
les
in
adc
ror
push
cmp
mov
loop
push
sub
xlat
adc
xor
in
iret
add
xchg
in
push
outsb
or
or
jmp
jl
gs
stos
xchg
or
orb
mov
and
adcb
mov
data16
and
inc
test
sub
inc
out
cmc
sbb
or
inc
stos
jae
pop
jmp
in
cmc
sub
repz
pop
or
inc
sarb
mov
add
and
shll
data16
mov
cs
pop
jle
adc
dec
pop
and
cltd
add
lods
repnz
aam
test
push
leave
insb
lds
sbb
mov
pop
add
push
mov
fbstp
lock
shlb
jmp
cmp
xchg
jne
test
xor
push
push
dec
mov
in
iret
sarl
call
adc
jbe
and
call
cmpsb
add
add
add
ja
push
xchg
out
les
fcompl
btr
jno
std
xchg
hlt
cvtps2pi
jo
clc
out
pushf
imul
gs
inc
pusha
mov
adc
jle
cmpsb
shr
push
ret
mov
std
outsl
push
lea
pop
jnp
mov
test
lds
dec
gs
xadd
insb
cmp
and
mov
mov
pop
jae
mov
in
add
daa
ljmp
maxps
xchg
xor
dec
push
add
push
inc
jge
lret
inc
mov
pop
or
mov
push
add
lods
cmp
cmp
fld
xchg
addr16
mov
inc
fwait
add
cli
sub
jmp
cmp
xor
sub
cwtl
dec
bound
cmp
ds
psubusb
mov
cmc
in
xchg
mov
push
mov
mov
or
pusha
fstpl
pop
repz
cmp
jle
fstpt
into
int
xor
clc
shrl
jmp
jo
leave
scas
mov
loope
ret
mov
inc
mov
out
sbb
push
pop
ss
add
imul
pop
dec
jg
jo
inc
push
xchg
sbb
cmc
dec
shrb
dec
outsb
mov
mov
inc
adcb
push
insl
and
mov
xchg
fwait
test
test
imul
mov
cwtl
cmpsb
sbb
inc
xchg
icebp
loope
movl
xchg
sti
dec
fwait
push
popf
out
push
and
test
mov
mov
dec
dec
movsb
dec
ret
adc
idivb
les
call
push
je
repnz
sarl
popf
pop
je
mov
adc
dec
inc
cltd
push
ds
popf
fcos
scas
sub
jo
je
or
cmp
scas
fidivrs
push
add
add
pop
repz
fsubp
dec
scas
loopne
mov
in
fwait
enter
pop
aaa
mov
pushf
sbbl
cwtl
nop
push
pop
mov
dec
push
movl
mov
fwait
lret
jnp
inc
test
sti
mov
test
xchg
adc
xlat
ret
das
sbb
jmp
mov
iret
cmpsb
sbb
xchg
lret
sub
ljmp
or
je
pusha
sub
pushf
cmp
aaa
mov
mov
repnz
push
jae
inc
rorb
push
xchg
sub
xchg
inc
enter
je
xchg
out
and
ret
out
sbb
fldt
ficompl
or
mov
dec
in
je
jmp
xor
mov
dec
adc
push
fldl
sub
insl
hlt
test
loope
std
lock
jecxz
loopne,pn
or
sub
jmp
pop
loopne
insl
popa
fistpl
pop
sub
lock
dec
or
xchg
in
jne
das
and
adc
adc
and
cmp
sbb
outsb
repz
add
mov
cmp
loop
sahf
add
addr16
sti
inc
push
push
add
call
inc
aaa
in
fcmovnu
add
dec
mov
mov
cltd
fisttpl
ret
jl
arpl
or
ret
mov
dec
push
add
jbe
pushf
scas
mov
xchg
adc
and
xchg
out
jbe
mov
jb
mov
adc
xchg
adc
inc
sub
sub
lahf
jae
insl
and
in
jmp
sbb
stos
mov
jp
adc
mov
in
scas
out
daa
shll
clc
and
jno
adc
fcoms
jecxz
mov
sub
test
jl
repnz
lahf
bound
jmp
pand
addb
and
jp
test
fistl
push
clc
adc
es
push
cmc
lahf
je
test
jb
jnp
xor
add
mov
pavgw
push
outsl
sarb
ljmp
popa
aam
aad
inc
jge
mov
stos
lods
inc
jno
xchg
jb
lock
repnz
dec
dec
pusha
mov
push
test
mov
imul
mov
jbe
imul
mov
add
lea
mov
sahf
lea
out
ds
jmp
lea
imul
cmp
push
push
xor
xor
and
xchg
rcl
inc
insl
xchg
sarl
lret
add
popa
lcall
mov
scas
ja
jns
pop
sbb
mov
movb
lret
daa
jae
popf
push
testb
dec
mov
adc
clc
mov
sub
pusha
pop
dec
add
or
aam
or
push
aad
andb
mov
shlb
pop
loope
adc
aad
sti
pop
cmpsl
pop
mov
mov
addr16
adc
lea
cwtl
xor
add
and
rcll
add
loop
test
daa
mov
and
pop
rcrb
sub
jle
add
outsb
test
movsl
out
std
sti
test
stos
jmp
mov
push
in
jp
scas
cmp
pop
movsl
stos
adc
ficomps
repnz
roll
insb
fmuls
fdivrl
lret
pushw
mov
adc
push
lock
cld
and
sbb
push
jb
cmc
js
xor
dec
into
jo
and
mov
stos
inc
lahf
dec
mov
adc
sub
xor
sbb
adc
in
and
mull
mov
cmpsb
and
inc
xchg
bound
mov
shl
xchg
and
pop
pop
icebp
test
js
and
xchg
cmp
fsubp
adc
mov
adc
lods
icebp
dec
pusha
or
iret
cmc
cmp
adc
fildl
dec
pop
adc
mov
cmpsb
inc
xchg
jg
inc
iret
xchg
mov
and
mov
cli
cld
inc
mov
mov
out
or
and
nop
jp
add
xchg
ret
sbbl
int3
mov
dec
loopne
add
cmp
lret
adc
cmc
adc
int
jns
les
cmpb
add
in
hlt
or
fsubrl
fwait
lock
in
jnp
lret
fs
repnz
mov
mov
jl
sub
cmp
data16
pop
mov
push
mov
push
pop
cmpsl
pop
xchg
mov
pop
rorb
pusha
ss
xor
out
jo
mov
and
mov
cmp
insl
js
faddl
rorl
jecxz,pt
fists
mov
cmp
mov
jecxz
in
lret
or
jp
adc
pop
pop
loope
test
mov
test
and
mov
test
and
lods
imul
push
push
adc
sub
arpl
or
mov
outsl
loopne
push
inc
sti
out
in
jp
imulb
mov
mov
imul
aaa
les
lds
adcb
test
inc
lea
inc
int
nop
mov
arpl
add
hlt
inc
pop
lds
sub
dec
in
call
sbb
add
popa
les
xor
xchg
dec
mov
push
fsts
push
ss
shll
cmc
popa
pop
mov
jbe
jl
pop
repnz
ds
rcrl
cs
movsl
jnp
cmp
jb
add
cmpsb
imul
scas
test
std
loop
subl
push
pop
pushf
iret
jmp
mov
icebp
cmpsl
daa
push
xchg
pop
js
call
mov
jle
outsb
inc
fnstenv
cmpsl
adc
add
xchg
movsl
sub
iret
push
push
aam
mov
cmp
int3
xchg
mov
push
mov
sbb
leave
add
sub
pop
jge
dec
add
mov
jne
mov
jge
lods
or
mov
lea
jo
xor
out
ret
mov
adc
arpl
cmp
and
cmp
push
imul
lods
mov
push
int
cltd
test
xchg
cmp
sbbb
push
ret
push
aas
repnz
les
inc
insb
hlt
iret
sub
jg
dec
sub
cmp
icebp
sahf
xlat
movsl
fiaddl
cld
inc
bound
test
add
fistps
dec
test
push
js
repz
mull
ror
or
pushf
mov
incb
adc
das
sub
pop
sub
rolb
or
xchg
clc
inc
mov
xchg
fwait
inc
adc
cmp
es
push
andb
xor
leave
rorl
sahf
pop
xor
cmp
ja
xor
rorb
mov
loopne
out
mov
mov
lods
outsb
or
inc
dec
add
lret
ja
jp
ja
xchg
gs
mov
push
jle
jmp
lods
xchg
movsl
sbb
pop
pop
mov
popf
in
clc
sbb
mov
xchg
jns
mov
mov
mov
sub
push
push
loopne
pop
xchg
inc
loopne
mov
cmp
syscall
mov
addr16
aam
lcall
fstpt
sbb
fwait
outsl
scas
loope
sbb
xor
lret
sbb
clc
ret
sbb
lret
xchg
add
jnp
sbb
sbb
fdivl
jg
into
std
lret
nop
add
aam
lahf
dec
xor
jnp
jecxz
jmp
ret
and
out
cli
push
inc
rolb
or
test
mov
add
fldl
adc
pop
push
sarl
mov
fstpt
sarb
sahf
jb
cmp
jne
ss
lds
pop
cmpsl
loop
cmc
mov
ljmp
cmpsb
in
cld
sbb
mov
fisubrl
and
adc
pop
cltd
xor
nop
and
cltd
or
mov
mov
cltd
jp
out
daa
inc
mov
lea
cld
fstps
mov
sbb
in
rclb
sub
xlat
xchg
cmp
xor
std
pop
jg
adc
adc
mov
jmp
mov
scas
mov
rorl
fwait
jmp
mov
push
rolb
inc
push
mov
fwait
movsl
js
popf
jmp
negl
jp
fsubrl
stc
fcomps
lea
sbb
xchg
and
or
lds
lret
movsl
lcall
xor
adc
sbb
insl
dec
mov
out
xchg
push
mov
popf
pop
lcall
xchg
mov
pusha
sahf
xlat
andl
and
inc
jmp
push
push
in
adc
insl
cmp
push
mov
jecxz
mov
jg
loop
dec
mov
pushf
mov
lock
mov
lods
imul
sti
or
ret
pop
push
fsubr
xor
out
xchg
in
in
es
cmpsl
roll
je
add
mov
movsb
aam
mov
test
add
aam
or
cmpsl
pop
arpl
mov
xchg
adc
pop
push
pop
int
test
mov
je
gs
sub
enter
aaa
fs
mov
push
mov
lret
in
push
xchg
ljmp
mov
adc
mov
jecxz
js
cmpsl
enter
iret
aas
lea
daa
push
sub
jp
sub
jle
xchg
jbe
sbb
xchg
mov
sahf
repz
lahf
jecxz
push
sbb
movsl
loope
dec
repz
inc
fimull
adc
jmp
ficoms
ficoml
or
cmc
sub
xor
jns
je
lret
cmp
push
outsb
out
sub
mov
sub
xor
psrlq
push
sbb
sbb
adc
mov
and
dec
cli
hlt
jecxz
and
jp
and
adc
scas
sarb
mov
adc
ret
sbb
arpl
xchg
inc
mov
xchg
mov
push
adc
call
rcll
pop
adc
outsl
sti
imul
movsl
inc
push
stos
xchg
mov
push
pusha
int
pop
test
mov
dec
sbb
loope
add
and
mov
inc
insb
inc
push
lds
pop
scas
roll
sbb
shlb
mov
leave
mov
sarl
cmc
mov
mov
xlat
inc
addr16
data16
adc
sub
and
jb
cmc
loopne
shlb
xor
add
push
arpl
les
jbe
jae
mov
or
ja
popf
orl
jbe
xor
idivl
outsb
cmp
or
sub
fisttpll
push
insb
fcomi
fwait
int3
sub
cmp
jb
ss
aad
scas
enter
pop
loope
dec
inc
jg
pop
sub
xchg
ss
mov
and
arpl
pop
bound
cmp
shlb
imull
mov
and
jb
jmp
dec
mov
inc
dec
jnp
dec
xchg
push
stos
mov
dec
push
cmp
jecxz
xchg
je
jae
mov
adc
fidivl
scas
jo
ss
push
sub
add
jbe
xchg
sub
jne
mov
push
mov
push
cli
sti
pop
push
dec
ret
dec
pop
sarl
frstor
lods
shrb
xchg
push
loope
loop
repz
popf
push
mov
push
nop
dec
mov
xor
stos
arpl
fbld
outsl
xor
das
int
insl
mov
push
pop
aam
push
jg
pop
iret
sahf
inc
popa
mov
loopne
pop
shlb
mov
jp
add
cli
loope
push
cmp
xchg
movsl
in
test
aaa
adc
xchg
add
lods
int3
popa
int3
stos
stos
out
jg
fadds
mov
out
add
or
jmp
inc
out
stos
std
mov
lcall
shlb
push
dec
mov
sub
xchg
es
push
add
push
mov
repnz
mov
mov
repnz
adc
mov
mov
outsl
cli
cmp
lret
add
adcb
cmc
mov
adc
int
in
pop
jno
mov
outsb
cmpsb
push
jl
je
xor
int
inc
or
arpl
fucomip
xor
inc
jg
xchg
lds
push
or
pop
jl
test
cmp
or
stc
scas
jnp
jmp
ficoms
jns
loop
stos
xor
add
mov
mov
cmp
inc
dec
sbb
ds
dec
adc
mov
or
insb
lret
or
lahf
mov
adc
push
or
sbb
das
imul
hlt
push
mov
dec
push
add
mov
mov
add
jae
nop
jmp
outsl
xor
ret
inc
add
rcrb
dec
and
sub
jge
push
hlt
sub
jae
pop
inc
test
jb
rorb
fnstsw
stos
adc
in
icebp
fs
mov
and
insl
movsl
insl
xchg
or
xchg
lods
inc
cmp
lea
jmp
cmp
pop
xor
iret
rol
sbb
pop
out
popf
addr16
in
adc
pop
add
push
ljmp
lcall
outsl
jo
loopne
mov
sbb
jecxz
or
jnp
pushf
fstps
insl
push
push
jo
popl
and
and
mov
fimull
das
stc
push
addr16
iret
fcmove
icebp
jbe
test
aas
mov
out
xchg
jo
into
insl
lret
adc
dec
stc
lahf
daa
out
inc
daa
sbb
repz
inc
dec
pop
jns
data16
icebp
jecxz
sarb
in
rclb
pop
mov
je
fsubl
lcall
inc
sub
std
lret
mov
jmp
push
aam
cmp
inc
inc
pop
mov
xor
int
mov
cltd
push
mov
sub
mov
fisubs
sub
sahf
les
cmp
out
daa
fildll
mov
mov
clc
adc
cmpsl
cmp
sbbl
pusha
and
out
lahf
push
xor
dec
and
daa
je
sbb
sub
test
sub
jo
xor
cmc
cmpsb
jecxz
or
mov
mov
std
pop
jecxz
add
mov
test
ret
rolb
lea
lods
dec
imul
jge
or
xchg
mov
inc
lret
sub
cli
xor
aam
bound
xor
xor
test
sar
mov
dec
mov
rcrb
fimuls
aas
push
jno
or
mov
nop
jno
xor
fisttps
in
mov
jne
out
push
cmp
lds
sbb
stos
pop
mov
mov
cmpsb
sbb
test
pop
insl
neg
inc
rorl
leave
push
sarl
mov
out
dec
in
add
notl
imul
mov
in
xchg
xchg
jno
incl
pop
sub
loop
cmp
sbb
pop
sbb
sti
iret
cmc
neg
jecxz
test
fldl
cs
mov
pop
stc
das
push
bound
ret
mov
push
cmp
jo
mov
sbb
int
pop
pop
xor
mov
and
inc
jle
imul
mov
pop
es
pop
jl
inc
ljmp
hlt
mov
pop
aad
iret
stc
enter
adcl
and
xor
sub
xor
lods
mov
cs
mov
fstps
xchg
les
mov
mov
daa
inc
cmp
adc
mov
pop
mov
scas
daa
cltd
bound
sub
fnstcw
leave
in
rol
nop
jns
loopne
xchg
je
inc
test
mov
aam
fistpl
enter
ficomps
es
mov
popf
add
inc
pushf
in
fs
fsub
out
xor
jge
pop
ret
test
push
jns
pop
popf
cs
sub
sahf
xorl
addb
ficoms
fiadds
aad
aad
bound
xchg
pop
add
mov
inc
addr16
jl
jne
xor
jno
pop
or
add
inc
fs
sub
les
and
out
mov
jl
jle
sub
add
pop
outsl
xor
add
push
push
test
xchg
pcmpeqw
or
pop
push
and
inc
xchg
inc
push
dec
sub
push
iret
fwait
sbb
inc
and
movsb
test
fstpt
cli
outsb
jb
movsl
jnp
sbb
and
sub
icebp
in
mov
xlat
mov
movsl
xchg
lret
fadds
je
lock
imul
jb
mov
and
push
push
pop
dec
popa
cmpsl
push
std
lods
add
push
incl
les
adc
xor
mov
je
popf
aam
xor
lds
lret
cmp
xorb
test
lret
push
out
xor
data16
movsl
mov
xchg
push
int3
mov
icebp
inc
scas
mov
leave
js
mov
je
xor
test
mov
push
mov
movl
daa
insb
lock
cmp
les
sub
int
shlb
loop
inc
int
inc
jnp
ret
daa
iret
dec
sbb
xchg
jge
dec
pop
xor
call
in
jl
orb
out
ja
mov
pop
sbbb
xchg
jb
mov
mov
outsl
mov
cmpsl
pop
sbb
dec
imul
or
test
fcomp
mov
push
clc
hlt
stos
and
les
push
jno
push
in
bound
mov
aad
lock
xchg
mov
mov
mov
stc
xor
xor
xor
pop
mov
sub
cmp
add
clc
or
cmp
inc
addb
cmp
xchg
cmp
shll
sub
xchg
adc
dec
call
movsb
outsb
das
and
aaa
dec
push
xchg
xchg
mov
in
and
popf
movsl
and
pop
pushf
dec
ret
dec
js
call
inc
mov
sbb
mov
mov
fadd
fnsave
add
dec
sar
xlat
sbb
pushf
ficoml
mov
cmp
inc
adc
mov
xor
daa
jmp
adc
add
movsb
loope
cld
add
inc
sbb
jmp
inc
or
inc
pop
xchg
mov
ljmp
inc
inc
pop
lods
icebp
cmpb
cld
es
mov
mov
fidivs
gs
dec
and
lds
fs
xchg
mov
int
mov
lods
addb
mov
add
repnz
inc
or
jnp
scas
inc
divl
popf
xchg
cmpsb
pop
lea
pop
pusha
into
dec
xor
in
xchg
add
mov
xor
xor
sbb
lret
ret
xchg
movsl
test
sahf
jecxz
inc
jge
or
jecxz
and
cmc
ds
inc
iret
pop
mov
inc
pop
jbe
mov
cmpsb
pop
mov
adc
cmp
mov
lods
mov
jae
lcall
mov
cmp
cmc
int
xchg
or
jae
push
arpl
int3
xor
mov
cmp
mov
scas
xchg
sub
cmc
sbb
push
jo
cmp
mov
test
xchg
out
fmuls
in
xor
lcall
xchg
pop
push
sub
ljmp
in
scas
aam
jle
cmp
pop
lds
pop
nop
dec
cwtl
sbb
insl
sti
sub
pop
popa
sub
jae
or
jl
lahf
mov
pusha
sub
push
xchg
xlat
mov
subb
aad
adc
and
xchg
dec
stc
cli
lods
sub
or
rclb
add
pop
cmp
push
movsl
sub
jecxz
jne
out
push
add
in
imul
xlat
stc
jo
dec
or
mov
mov
shl
inc
lret
dec
dec
scas
lret
cltd
je
mov
lds
mov
push
addl
das
mov
js
cmc
fwait
adc
lods
pop
stos
sub
add
jb
mov
pop
sbb
loopne
test
add
mov
inc
xor
enter
in
mov
jge
std
cld
popf
mov
xor
enter
pusha
or
jle
cli
adc
xor
lea
push
sub
jecxz
pop
pushl
add
adc
mov
jle
icebp
and
lds
fxch
adc
lcall
jae
mov
call
dec
adc
cmc
call
leave
xor
sbb
add
into
sub
outsb
out
jno
xor
fcoms
imul
push
pusha
jle
xorb
imul
dec
aam
mov
push
xlat
mov
inc
sub
idivb
testb
outsb
arpl
popa
nop
int3
cmp
mov
push
fprem
jo
xchg
cs
movsb
or
mov
and
aam
icebp
dec
mov
pushf
ficompl
shll
cld
push
sbb
and
adc
test
pop
lcall
dec
sub
or
hlt
push
or
jae
xor
mov
adc
pop
sub
mov
xchg
sbb
sbb
cmp
lret
out
push
call
or
mov
outsb
movsl
lock
fistl
addb
mov
and
pop
or
dec
mull
pop
xchg
pushf
je
popf
cmp
push
inc
fnstenv
es
or
int3
repz
mov
mov
mov
gs
sub
test
mov
sub
push
test
aaa
pushf
xchg
shlb
int3
je
aad
sub
fidivs
mov
data16
fiadds
cli
inc
and
repz
mov
jp
and
xchg
push
inc
imul
jg
fcoms
sub
sahf
sbb
dec
or
add
mov
lods
push
sbb
gs
push
sub
cmpsl
jg
add
cmp
jns
mov
out
xlat
stos
stos
add
hlt
icebp
or
adcb
xchg
jmp
ljmp
sub
pop
test
es
cmp
mov
cmp
push
inc
mov
stos
ret
addr16
pop
movsb
fpatan
xchg
lods
jns
das
push
test
pop
fstps
and
lahf
es
stos
xchg
cmpsb
bound
cld
mov
scas
push
mov
stc
jg
dec
sub
pusha
or
fwait
pop
rcrb
test
subb
mov
pop
les
ret
mov
in
push
out
and
mull
dec
mov
xor
nop
jo
mov
xor
push
pop
scas
out
cmpb
dec
push
inc
pop
test
mov
rol
popa
das
add
stc
mov
ret
aad
ret
mov
out
cld
es
sti
js
inc
arpl
pop
and
popa
sbb
inc
push
sti
mov
and
lods
fs
pop
inc
fcompl
dec
dec
aad
adc
or
jmp
scas
xor
lahf
mov
or
lods
outsl
cld
decl
sahf
arpl
pop
sub
xchg
out
xchg
sub
out
leave
inc
ds
push
outsb
add
fbstp
fnstenv
inc
sti
scas
mov
popf
jo
lods
sbb
lret
int3
sbb
push
push
xchg
arpl
mov
adc
addr16
scas
aam
xchg
sbb
cltd
adc
mov
jp
loopne
clc
push
cmp
cmpsb
add
pusha
adc
inc
xchg
xchg
xchg
xchg
ljmp
test
outsl
mov
xchg
add
mov
and
jmp
cwtl
xor
iret
and
xchg
out
das
jl
pop
test
out
add
test
jno
push
cli
ja
inc
iret
test
sbb
jo
lods
cli
mov
adc
jbe
inc
iret
lods
dec
idivl
imul
cmp
aaa
push
in
dec
lods
inc
xchg
mov
dec
dec
popa
imul
out
shlb
cmpsl
icebp
jmp
test
fadd
out
js
mov
jnp
fsub
pushaw
jno
jae
inc
scas
insb
scas
adc
out
test
insb
pop
je
xor
pop
jecxz
mov
push
mov
jno
add
dec
sub
pusha
inc
jb
daa
in
sahf
pop
and
mov
dec
test
stos
divb
xor
aaa
mov
pop
push
popf
rolb
jnp
test
rcll
jmp
lods
sbb
nop
test
mov
icebp
lcall
push
inc
dec
xor
cmp
ss
dec
pushf
std
fisttps
scas
jbe
aad
xchg
imul
pop
xchg
and
mov
xor
iret
xchg
dec
test
int3
dec
fcompl
and
cmp
outsb
cmc
std
nop
lods
pop
inc
ficomps
jl
push
stc
cltd
arpl
adc
jle
test
inc
cmpsl
cli
xchg
imul
in
cmp
mov
pop
lret
or
orl
andl
les
cmp
sbb
outsb
pushl
pop
and
dec
sti
ds
push
js
pusha
outsl
mov
fcmove
nop
xorl
lds
xor
std
pop
stos
out
lods
cmp
shlb
xor
push
fs
inc
and
adcb
scas
ja
mov
adc
xor
adc
idiv
sbb
bound
jne
loopne
xchg
fsubs
lods
add
insb
inc
call
adc
or
into
ret
aaa
lock
pop
orl
sub
jne
add
repnz
adc
jno
arpl
in
xor
and
lret
lock
pop
sub
dec
roll
imul
mov
xor
mov
push
sub
cld
aaa
adc
hlt
adc
jge
xor
mov
sbb
push
sub
aad
cli
or
sub
inc
aam
adc
sbb
das
adc
or
jg
inc
jo
ret
fwait
jno
cld
sti
lahf
push
sbb
std
aam
jnp
xor
test
mov
lret
out
jl
xor
jecxz
aam
out
sub
push
jecxz
push
popf
jge
xchg
add
mov
ja
dec
sub
add
or
and
test
cmpsb
roll
xchg
test
inc
fidivs
mov
pushf
jno
xor
cmp
jo
cld
jecxz
add
and
push
fadds
jmp
test
orl
mov
mov
cmp
adc
hlt
pop
xchg
cmpsb
jle
sqrtps
inc
out
popa
mov
repz
in
mov
fcoms
ja
lea
xor
fst
adc
gs
push
push
push
jb
lahf
adc
cmpsb
shlb
pop
sub
mov
cli
out
sbb
and
inc
xor
mov
gs
xor
add
fcoml
out
aam
lret
pushf
lds
pop
cli
mov
andl
mov
rcll
into
sub
mov
inc
mov
les
shll
insb
dec
repz
or
test
jg
cmp
sub
inc
cmpb
fs
sub
jnp
aaa
add
sub
pop
popa
movsl
sub
daa
sti
nop
push
jp
adc
aam
adc
rcl
enter
mov
outsl
mov
adcb
pushf
mov
in
cs
or
lcall
inc
shrl
or
or
out
jae
aam
pop
fldt
mov
inc
dec
dec
pushf
aaa
adc
sbb
aas
imul
scas
insl
aas
outsl
jl
cmp
insb
cmp
inc
jno
cs
dec
stos
movsb
shrl
cmc
push
mov
fldl
in
jo
negl
cmpsb
xor
clc
clc
arpl
in
test
jle
pop
xchg
sub
mov
incl
fcmovbe
cmp
mov
lahf
push
pop
sbbb
loop
dec
sub
push
test
imul
std
mov
cmp
sub
or
pop
lahf
testb
mov
adc
aam
in
in
in
xchg
mov
fs
in
aaa
and
dec
push
roll
fldl
pop
lods
mov
dec
movsl
enter
add
adc
and
or
cli
mov
incb
add
loope
loope
dec
scas
inc
jne
pushf
roll
mov
loop
pop
xchg
daa
and
inc
stc
push
push
in
push
nop
shrb
inc
dec
push
call
and
out
sub
imul
scas
push
movsl
imul
mov
out
dec
jbe
in
cmp
mov
jne
mov
dec
mov
test
loope
cwtl
ret
adc
xor
int
loop
sub
js
xlat
repz
std
rorb
imul
je
mov
jne
rclb
inc
rcrb
mov
jae
or
insb
jbe
es
inc
fwait
repz
stc
mov
cmp
dec
lret
push
xchg
outsb
add
jg
fwait
mov
mov
and
leave
je
enter
popa
xor
fcmovbe
cmp
fistl
xor
adc
ficomps
lcall
mov
lods
mov
mov
fstl
ret
mul
call
push
cmp
dec
sub
mov
or
mov
lcall
or
sub
cmp
cmc
popf
lahf
cmp
jg
popf
jns
dec
push
xor
icebp
mov
xlat
pop
lret
clc
das
mov
ljmp
addr16
movsb
loopne
mov
bnd
out
lretw
and
ds
outsl
fs
mov
stos
xor
mov
inc
rcll
add
jge
cmp
push
inc
iret
outsl
push
shrb
in
jae
mov
xchg
test
xor
and
dec
cwtl
ficoml
fnstsw
shll
mov
add
sbb
lods
mov
shr
popf
mov
push
ror
mov
in
inc
sub
stos
test
cli
inc
daa
inc
jmp
ljmp
mov
mov
pop
ucomiss
ss
mov
stos
jbe
xor
xchg
mov
jge
or
jb
dec
mov
pop
rolb
push
ds
fdiv
mov
fs
pop
pushf
jbe
push
jg
sbb
in
lea
xor
sbb
cmpsl
or
cmp
mov
mov
dec
lahf
fdivl
mov
addr16
dec
cmc
xlat
inc
arpl
dec
rorb
rcl
test
xor
push
push
insb
mov
ret
fldenv
sub
mov
out
add
cmp
pop
ss
insl
in
loope
call
fwait
inc
mov
es
jb
lods
xchg
or
testb
ja
inc
int3
or
mov
ds
repnz
aad
out
cmp
mov
jecxz
pushf
or
orb
iret
adc
lock
lret
push
push
cmp
mov
ds
sub
mov
dec
int3
jmp
in
cmc
dec
ss
xchg
mul
rclb
mov
pop
cwtl
sahf
stos
jno
inc
test
repz
js
popa
xor
ret
lods
jg
mov
test
repnz
movsl
and
mov
cmp
push
or
daa
push
aam
insl
in
mov
imul
fiadds
roll
movb
cmp
cmovp
dec
pop
shl
sub
mov
inc
sbbl
pop
and
repnz
das
add
int3
cltd
out
negb
add
dec
xchg
mov
and
test
mov
lds
and
or
repnz
sub
sti
sbb
mov
xchg
push
data16
jbe
repnz
popa
jne,pt
cmc
and
lahf
and
pop
movsl
cwtl
lock
add
repnz
add
cld
ds
in
std
andl
pop
loop
mov
jae
and
negb
mov
fldcw
mov
fwait
jmp
pushf
inc
pushf
rolb
ret
mov
rorl
fldt
cmp
lds
filds
xchg
inc
mov
in
out
cmp
jp
jae
push
stc
cmpsl
mov
dec
mov
and
mov
lds
push
imul
xor
cwtl
push
out
xchg
jns
xor
in
jg
push
data16
pop
cld
push
xor
andb
stos
mov
loope
std
cli
cltd
jg
sahf
adc
inc
sub
rcll
out
push
mov
push
jge
rcll
sub
js
and
lret
data16
les
mov
out
mov
jecxz
int3
push
lcall
cmp
nop
in
stc
lret
test
mov
and
add
inc
insb
in
pop
dec
add
int
dec
pop
and
cmpsb
mov
mov
mov
adc
adc
cmc
cld
nop
scas
mov
jns
inc
jb
pop
jbe
das
bts
aam
and
notb
inc
daa
add
fbstp
fwait
movsl
jns
or
mov
pop
inc
data16
mov
dec
outsl
adc
popf
sbb
outsl
and
incb
jmp
std
mov
cmc
popf
mov
pop
and
xchg
xor
mov
addr16
mov
adc
xchg
rcr
jae
push
mov
aad
sbb
jge
sub
shll
popf
sahf
jl
sbb
cmp
in
ret
mov
out
pusha
cli
je
cmp
and
dec
and
sbb
sbbl
dec
sbb
push
fsubs
mov
fstps
js
int3
in
jo
enter
mov
fstl
dec
push
lods
xchg
push
xchg
pop
xchg
lret
movsb
mov
add
sti
inc
sbb
sub
inc
jne
fildll
xchg
jbe
mov
adc
roll
cmpsb
dec
inc
cmpb
out
xchg
and
out
push
in
xchg
pushf
mov
and
xchg
imul
cs
stos
stos
adc
xchg
dec
lds
push
ss
jns
test
lods
xchg
push
fs
filds
sti
cmc
fisttpll
xor
mov
sbb
inc
xchg
fmul
arpl
sbb
dec
xor
ficoml
xchg
daa
stos
ja
test
dec
test
lock
push
lock
arpl
add
les
jns
mov
adcb
cmp
mov
mov
or
push
cwtl
push
out
lods
into
adc
ss
push
mov
pop
mov
cmp
push
push
jp
sbb
hlt
pusha
pcmpgtb
int
loope
loop
mov
dec
stos
enter
pop
mov
iret
dec
je
or
sbb
pop
mov
fwait
testl
je
call
loop
loopne
fildll
jno
mov
or
inc
sbb
repnz
pop
insb
adc
dec
mov
xchg
jle
adc
scas
cli
sahf
pop
pop
adc
imul
insb
fwait
les
cmp
fildll
jmp
xchg
mov
mov
adc
negl
cld
jl
sub
sti
pop
jecxz
cs
pop
imul
in
clc
jge
mov
push
rclb
mov
dec
xchg
mov
inc
test
out
sub
shll
lods
loop
jnp
xor
scas
push
sbb
lret
imul
sbb
fdivrs
cld
pop
xchg
into
hlt
jle
cmp
xlat
dec
fimull
daa
jp
mull
mov
mov
pop
and
inc
out
jp
jne
out
push
rcrl
pop
aaa
mov
nop
sub
sbb
and
stos
mov
inc
fsubl
aad
mov
and
outsb
lahf
inc
push
cmp
fimuls
rclb
push
xorl
cmpsl
mov
jmp
outsl
stc
mov
enter
sarb
jmp
aas
in
dec
stc
push
jp
inc
jmp
lcall
gs
inc
dec
mov
insl
inc
inc
xchg
test
data16
inc
stos
loopne
jbe
mulb
pop
dec
mov
int
dec
mov
mov
push
stos
notl
lret
inc
mov
sbb
and
pop
sub
insl
dec
add
adc
test
out
sbb
int
testl
repnz
jmp
xor
dec
cmpl
push
pop
and
cmp
and
mov
xchg
inc
int
pop
nop
clc
mov
mov
movsl
shlb
dec
mov
lcall
cmp
leave
jb
mov
or
jbe
jg
dec
push
cld
push
or
push
sbb
in
pop
enter
push
test
push
adc
mov
nop
sbb
hlt
stos
ljmp
or
xor
je
xor
sbb
adc
or
insb
cmpsl
mov
push
push
ljmp
out
jecxz
and
mov
sbb
cmp
cmp
inc
jmp
adc
les
cmc
lds
fsubrl
je
mov
push
testb
lods
dec
fcomps
pop
ja
fistl
mov
inc
jo
and
sarl
fs
push
cld
popa
mov
outsl
ret
out
out
pop
aas
nop
icebp
leave
pop
pop
lods
xchg
and
or
mov
mov
dec
mov
aaa
jb
sub
jns
pop
jecxz
mov
leave
sbb
or
in
mov
lods
mov
pop
sub
pop
xchg
shrl
clc
das
bnd
std
out
push
jmp
pushf
jle
cmp
push
jnp
mov
nop
xor
fs
jae
test
jg
xchg
push
push
mov
sbb
cmc
mov
ret
fwait
in
stos
or
mov
jmp
mov
sub
jns
out
xor
xor
test
mov
xchg
pop
cli
notl
mov
cli
mov
dec
fmull
fstl
test
sub
jp
or
push
fnsave
outsb
cmp
and
mov
cmc
fsubr
push
rorb
jno
or
dec
jge
ds
sub
fnstsw
test
sbb
pop
jne
push
inc
fstpt
mov
sub
aas
jae
sub
movsb
mov
shlb
mov
cli
cmp
shl
xor
bound
push
push
sub
test
ds
aas
adc
mov
insb
cld
sbb
test
test
cmp
jns
jns
mov
fildl
mov
movsl
in
bound
movsb
push
decl
icebp
xor
cmp
pop
pop
hlt
pop
cwtl
mov
pop
xor
ret
mov
mov
inc
pushf
addr16
js
pop
jo
push
inc
xor
in
cmovs
or
sbb
sbb
jnp
pop
mov
or
sub
sub
pusha
sbb
pop
adc
mov
mov
xchg
sub
dec
mov
bound
repz
dec
rcll
lret
pop
pop
mov
xchg
repz
or
xchg
fdivp
jne
pop
aam
out
xlat
enter
adc
and
jmp
sti
mov
jns
icebp
ret
sbb
jno
sub
mov
pushf
inc
mov
movsb
gs
cld
pop
jb
inc
dec
or
add
jnp
rcrb
lods
scas
mov
dec
dec
stc
imul
xchg
push
mov
sarl
outsl
test
je
push
push
push
mov
insb
lock
cmp
push
jne
lds
jp
decb
mov
out
adc
or
into
mov
pop
in
in
jns
adc
xorb
fcoml
inc
cmpb
scas
push
or
imul
pop
add
xor
mov
das
inc
scas
cmp
push
je
testl
psadbw
and
xchg
sbb
mov
jg
inc
and
xchg
pop
push
je
push
or
adc
xor
out
inc
xchg
sub
ds
insb
add
sarb
cmp
das
mov
mov
je
fwait
les
sti
xchg
sbb
adc
ljmp
sub
ret
mov
xchg
leave
icebp
and
mov
pop
test
mov
and
adc
roll
inc
mov
sub
ret
or
pop
test
adc
lods
div
cld
jecxz
inc
pop
sub
cmp
movsl
imul
push
out
inc
gs
aas
jae
push
cltd
loop
jbe
daa
nop
gs
loopne
xlat
out
push
dec
test
pop
fcoms
add
push
test
aam
add
mov
pop
or
jno
fsub
cmpsb
je
and
test
cmc
dec
push
lret
jp
sbb
out
pop
shr
ss
add
cmp
sarb
xchg
or
into
and
add
push
js
pop
jnp
cmp
jo
enter
fiadds
ss
and
mov
loopne
cmp
mov
xlat
test
and
xor
aas
mov
inc
xlat
test
test
cwtl
cwtl
lods
test
mov
push
xor
pop
dec
leave
sbb
add
cmp
add
divb
ret
and
imul
push
mov
sub
ret
jne
xchg
mov
repz
adc
jne
sub
jae
push
cmp
dec
loopne
arpl
cwtl
aas
jo
add
cmp
dec
pop
adc
jecxz
fs
cld
mov
imul
dec
sbb
stos
or
shrl
fstpt
xchg
sbb
add
pop
lods
jecxz
mov
sbb
push
in
lods
ffree
loope
xlat
jecxz
push
out
lods
push
pushl
sbb
xor
add
cltd
fsubs
inc
fisubrl
test
xor
push
test
add
stos
add
test
xchg
dec
jg
leave
into
sub
in
insl
pop
ja
xorl
rcrb
push
adc
inc
mov
inc
pop
aas
lods
mov
jge
shl
or
cmp
push
lret
aad
xchg
jle
jae
sahf
sub
inc
inc
sti
inc
adc
jno
or
ficompl
fidivl
je
inc
push
out
jae
clc
dec
adc
push
pop
or
add
fnstenv
cwtl
mov
push
add
out
add
push
inc
pop
or
insl
lods
mov
or
jo
enter
dec
jmp
pop
or
shl
push
in
sub
push
dec
mov
popf
insb
movsb
jae
stc
imul
or
shll
add
cli
rclb
test
or
mov
jg
push
mov
jo
mov
add
xor
mov
add
mov
ret
repz
sub
inc
xchg
ret
call
mov
jle
test
shufps
lock
in
fbld
inc
adc
lcall
mov
cmpsb
mov
add
inc
cwtl
out
mov
xchg
dec
mov
in
addr16
movsb
fistl
mov
or
jb
inc
dec
xor
or
push
sub
cwtl
into
movsl
sub
in
stc
fdivrl
in
push
fs
sbb
aaa
jne
scas
jns
mov
ret
push
dec
mov
jno
pusha
xorl
ljmp
std
pusha
xchg
mov
daa
push
adc
add
aas
cwtl
loopne
xchg
mov
dec
inc
xor
das
and
sbb
adc
or
lcall
lret
push
fdiv
sbb
stos
add
mov
xchg
cli
mov
je
lret
and
fcmovnb
jne
push
dec
loopne
push
lret
cmpsb
insl
and
in
je
pop
mov
fwait
xchg
xchg
mov
ds
cli
js
dec
fcmovu
or
filds
popa
dec
cmp
rcll
add
stos
inc
pushf
inc
inc
mov
mov
xlat
in
dec
mov
adc
mov
lods
fwait
aaa
and
mov
mov
ss
lock
insb
cmp
pop
push
push
imul
out
popf
scas
out
aam
cs
mov
fisttpl
rcll
pop
pop
je
push
neg
fcmovnb
test
mov
mov
inc
popf
xchg
mov
mov
ss
cmp
roll
repnz
xor
inc
aas
xor
inc
jg
push
call
jg
mov
rcll
test
push
jp
ds
stos
xchg
lret
fst
jns
xor
mov
inc
sbb
and
lods
jo
push
rorb
out
shlb
loope
mov
inc
dec
test
xor
jb
ljmp
inc
xlat
xchg
movsl
outsl
push
rcll
lods
sub
cmp
mov
dec
popf
inc
outsb
es
push
xor
adc
xchg
cwtl
cmp
adc
xor
mov
pop
fs
push
lds
push
jns
shlb
inc
int3
cmc
out
and
in
pop
or
push
inc
and
notl
cmp
add
cld
add
imul
or
out
sub
add
in
sub
loope
xchg
sti
aas
sbb
sub
das
jne
fidivrs
cli
mov
and
add
or
sti
into
sbb
and
add
rorl
sbb
adcb
cltd
repz
add
shll
cmpsb
xchg
out
lret
push
xorl
dec
test
shll
pop
mov
sti
inc
xchg
or
jbe
sub
rolb
push
mov
mov
xchg
mov
out
pusha
aad
mov
xor
test
leave
out
xor
in
and
sbb
aaa
push
xor
and
xchg
or
xlat
add
pop
leave
dec
out
jo
in
movsl
inc
pop
lds
mov
outsb
and
lock
xchg
push
bound
xchg
xor
aaa
mov
mov
jo
dec
jnp
xchg
mov
dec
push
adcb
xchg
xor
mov
push
mov
outsb
xchg
dec
into
imul
movsl
xchg
loope
xchg
lods
dec
push
fcmovne
sub
loop
out
loope
cmp
imul
pop
clc
imul
or
iret
inc
das
xchg
orl
ret
cwtl
test
cmp
mov
lcall
movsl
adc
mov
pop
adc
push
insb
inc
push
adc
xor
adc
push
mov
scas
pop
ret
jns
rcrb
fsts
rol
cmp
or
xor
pop
xchg
mov
nop
insb
xchg
pop
scas
pop
jge
sub
repnz
aaa
pusha
pop
out
mov
int3
js
fs
add
shrl
jbe
inc
nop
mov
dec
enter
inc
add
scas
ret
popa
mov
out
sbb
pop
mov
mov
jmp
inc
mov
push
dec
mov
jne
pop
pop
mov
add
push
bound
or
mov
push
pop
push
xchg
dec
ret
dec
jg
or
mov
arpl
iret
dec
dec
enter
pop
inc
add
js
push
mov
out
fidivs
outsl
inc
jnp
popf
cmpsl
outsb
aaa
push
loopne
fcoml
loopne
mov
into
repz
pop
gs
shlb
cwtl
inc
ficoml
xchg
push
mov
test
stos
jg
call
aam
test
sub
test
inc
push
mov
cmpsl
idivb
xlat
mov
push
pop
sbb
aam
lock
psubb
movsb
in
mov
testb
push
popa
mov
cmc
scas
pop
dec
sbb
adcb
dec
sbb
js
mov
mov
fcmovne
fsts
pop
pop
and
push
mov
stos
sbb
and
mov
imulb
dec
call
jge
ss
xchg
in
pop
jl
adc
xor
iret
adc
repz
iret
jbe
jbe
inc
jae
jno
inc
outsb
cmp
cwtl
mov
mov
fcmove
std
test
ret
mov
jle
sub
jns
pop
rcr
xchg
popf
mov
stc
in
enter
or
loopne
in
mov
adc
gs
clc
xchg
andb
or
push
mov
xor
push
push
insb
xor
popf
test
cmc
dec
sbb
ret
and
repnz
ret
int3
out
sub
fwait
popl
sub
add
jp
cmp
imul
cmp
rcr
xchg
mov
jne
stos
call
scas
mov
shlb
pop
lods
pop
pop
jnp
jo
jne
mov
fwait
mov
bound
sub
mov
jb
inc
push
imul
pop
inc
inc
in
andl
sbb
movsb
push
js
out
dec
test
or
stos
in
xlat
sbb
fcoms
mov
std
aad
sub
mov
cld
xchg
jo
cmp
into
aaa
lret
stos
adc
fsubp
inc
jb
into
xchg
insb
aam
pop
movsb
out
sti
lahf
daa
lret
scas
js
subl
into
mov
add
hlt
jae
mov
mov
jno
push
hlt
push
inc
push
fidivl
pop
decb
outsl
sbb
jl
cmc
cmp
xor
iret
cli
add
and
cli
scas
pusha
adc
aad
push
arpl
pop
js
scas
sarb
fistps
pop
or
int
mov
jmp
add
fdivl
in
push
or
mov
push
push
repnz
xor
in
jge
push
aaa
xor
sbb
push
arpl
imull
sub
sub
or
es
ljmp
jmp
adc
adc
mov
ljmp
aam
push
dec
outsl
cmp
cltd
dec
or
shrb
mov
lods
data16
jg
loopne
fldl
xor
js
mov
clc
push
out
adc
xor
orl
cmpsb
pop
inc
jmp
out
fsubs
imul
jbe
jno
roll
push
sub
pop
in
nop
and
nop
mov
imul
inc
push
add
sub
inc
xor
sub
mov
pusha
pushf
adc
or
and
cmp
pop
cmp
scas
push
add
pushf
mov
fists
push
stos
sub
or
std
cwtl
cmp
int3
or
and
mov
mov
mov
jle
sbb
enter
test
pop
and
xor
and
cmp
mov
pop
lret
push
push
test
jmp
dec
in
cmc
arpl
jmp
sub
jae
nop
fcomps
cld
mov
repnz
mov
xor
lods
test
push
dec
cmpsl
movsl
and
pop
stc
and
insb
mov
dec
pop
mov
mov
nop
subb
adc
imul
dec
push
movsb
mov
xchg
xor
cmp
jp
mov
inc
mov
xor
mov
test
mov
jbe
out
inc
adc
loopne
inc
push
popf
leave
pop
int
dec
lret
xchg
jl
movb
imul
pop
jae
jb
inc
mov
dec
ljmp
insl
mov
mov
nop
cwtl
push
mov
cld
aaa
add
std
fcoml
add
shr
das
andl
sub
cs
into
cmpsl
and
add
movsb
and
xchg
jl
push
inc
ljmp
inc
aaa
out
pop
ret
daa
pop
fwait
xor
xchg
xchg
mov
insb
mov
push
xor
sub
aam
sar
lods
sub
mov
test
mov
dec
je
fnstenv
aas
inc
ret
scas
fisubs
mov
push
or
mov
sub
jp
push
stos
clc
mov
inc
imul
push
pop
lret
push
and
in
lods
rcr
pusha
xor
xlat
mov
xor
adc
adcb
add
mov
push
cmp
jp
repz
pop
fiaddl
frstor
jne
push
cmp
and
std
or
lcall
push
movsl
sbb
inc
jb
sub
int
movsb
xchg
sbb
sub
inc
adc
adc
pop
or
inc
jge
ss
xchg
aad
or
pusha
xor
sub
jb
out
and
mov
jge
cmp
cmp
scas
xchg
dec
insb
test
insb
cmp
lods
or
movsb
mov
out
push
mov
pop
sub
mov
test
pop
outsl
and
cmp
push
imul
mov
mov
inc
mov
or
sub
outsl
or
stos
mov
repz
cmp
jge
movsl
add
enter
ffree
inc
loope
xor
pop
push
pop
mov
jo
cmc
inc
fldcw
or
xor
bound
into
inc
out
subl
ljmp
xchg
fidivrs
clc
in
mov
jo
repnz
ret
mov
es
dec
cmp
cli
xchg
xor
cmp
jp
mov
pop
dec
push
scas
int3
add
es
inc
inc
dec
in
jmp
or
push
jp
mov
xchg
jo
push
inc
jmp
dec
sbb
aam
jo
rclb
xchg
mov
call
or
dec
mov
rcr
or
add
adc
mov
sub
inc
push
outsb
jns
mov
dec
addr16
sbb
mov
or
cmp
adc
orl
inc
mov
dec
dec
movsb
popf
popa
jnp
push
addr16
sbb
aad
mov
jno
out
adc
jne
repz
call
mov
mov
mov
xchg
xor
adc
mov
rorb
inc
jns
lcall
stos
shlb
xlat
addl
stos
pop
pusha
mov
jmp
mov
mov
jae
lahf
loopne
xlat
lea
test
jnp
cmp
mov
xchg
call
cs
lret
mov
sub
cmpsl
add
pushf
imul
repz
mov
xorl
pop
sub
xor
mov
xor
pop
int3
add
push
das
pop
or
jl
mov
call
jnp
and
lods
cmc
jae
mov
imul
sahf
aad
or
mov
dec
and
mov
cwtl
lret
push
mov
stc
lcall
push
pop
enter
jge
insl
movsb
sbb
fmulp
gs
cwtl
loope
lods
adc
or
dec
and
inc
cmp
test
push
pop
ret
mov
fsubrs
ror
mov
test
movsl
or
out
mov
pop
daa
add
or
aam
xor
push
and
xchg
and
dec
adc
mov
stos
dec
jmp
or
loope
lods
int
loopne
gs
aam
xor
mov
shlb
and
sub
fistpl
stos
ds
cmc
mov
nop
ja
in
xchg
shl
jne
int3
mov
in
stos
ret
aad
fidivl
push
stos
mov
sbb
stos
mov
push
cmpsb
aad
adc
sbb
mov
sub
dec
stc
jbe
xchg
xor
adc
test
scas
dec
gs
jg
jge
repnz
jns
insb
or
sbb
and
jecxz
xchg
dec
bndldx
lcall
int
pop
mov
jecxz
stos
testb
mov
addr16
test
popa
stc
test
mov
lds
repz
int3
cli
or
fistps
sbb
sarl
pop
dec
lret
jle
mov
mov
hlt
ss
inc
mov
into
test
fs
jne
xchg
dec
divl
sub
fists
push
sub
sub
ja
push
xchg
and
pop
adc
enter
ja
bound
push
fdivr
xchg
mov
ljmp
xchg
lret
push
and
jns
jp
mov
cmpsb
icebp
xor
lahf
inc
inc
cmp
mov
pop
xchg
incl
xor
in
xor
xchg
xor
pop
jae
sti
pop
ret
add
daa
ficomps
mov
mov
sub
sbb
cs
push
lods
xchg
imul
adc
out
pushf
or
in
mov
loopne
icebp
orb
aaa
sahf
jno
ret
imul
push
dec
out
or
fimull
lea
push
imul
mov
pop
jo
ror
lret
and
xchg
iret
lret
ljmp
cltd
sub
pop
add
push
js
test
jo
test
push
popl
add
shlb
push
add
push
sub
jle
out
int
pushf
cmpsl
mov
movsl
xchg
xorb
pop
iret
mov
lea
mov
popf
nop
das
in
out
sti
mov
aad
sub
fstps
sti
or
adc
jne
aaa
shl
ljmp
mov
data16
pop
data16
and
xchg
loope
push
aad
ds
sti
data16
inc
imul
in
and
push
ja
fisttps
jb
icebp
imul
lock
hlt
mov
ret
or
test
icebp
lods
add
add
and
add
push
sub
popf
xchg
cltd
sub
ja
sarb
inc
mov
daa
fwait
push
mov
xorb
test
adc
jle
daa
shll
shll
lret
out
mov
test
in
test
cmpsb
push
dec
and
pushf
sbb
mov
xor
jecxz
or
mov
xor
sub
cmp
in
jbe
pushf
popf
dec
jge
cmpsl
pop
in
xchg
stc
adc
shl
dec
inc
jns
push
jle
sub
pop
js
mov
ljmp
in
sub
mov
mov
mov
xchg
push
xchg
sbb
xchg
xchg
out
int
jno
sub
pop
jmp
pop
xor
push
mov
popf
sti
cmpl
enter
sub
sub
pop
dec
call
mov
arpl
fmuls
scas
pop
inc
pop
push
lcall
cltd
jmp
mov
mov
jnp
dec
jle
ss
lcall
aaa
ja
fstpl
leave
mov
sbb
imul
repnz
xchg
dec
loop
leave
mov
sub
mov
push
int
imull
les
push
fmulp
mov
dec
pop
or
out
pandn
faddl
push
and
sahf
pop
and
push
xchg
addr16
and
insb
xor
test
or
cmp
int
je
sbb
stc
and
fdivr
fwait
shll
sbb
mov
mov
ljmp
rcl
or
xchg
les
fists
movsl
int3
addr16
dec
cwtl
add
rcll
xchg
sub
push
js
je
fcomip
fisubl
mov
sub
push
pop
xchg
lret
imul
push
popf
call
mov
insb
divl
sbb
pop
sbb
pushf
adc
pop
outsl
add
lret
pop
dec
inc
lcall
pop
hlt
jecxz
mov
xchg
cmp
xchg
mov
in
cmpsl
pop
scas
push
outsb
andb
popa
dec
pop
lret
pop
das
mov
mov
sbb
adc
pop
ret
sahf
pop
mov
ret
add
rol
scas
push
mov
int3
jno
aaa
testl
fsubr
mov
push
out
push
sahf
fwait
inc
test
xor
and
lcall
push
or
pop
ffreep
mov
ljmp
and
stos
or
mov
lods
and
or
xor
cmp
jno
adcl
loopne
sbb
dec
subl
xor
pop
stc
pusha
sbb
inc
and
xor
cmpsb
mov
mov
fnstenv
sub
adc
jle
mov
adc
movsl
out
xchg
push
js
cmc
pop
cmp
ret
and
insl
and
cmpb
shrl
jge
loopne
outsl
leave
stos
adc
dec
cmp
sahf
xchg
nop
pop
das
jns
bound
push
popa
pop
rclb
clc
and
mov
mov
sub
aas
and
popa
and
or
in
mov
or
shl
in
push
shl
cmp
and
mov
popa
mov
jmp
bound
jo
mov
lea
popa
in
inc
pop
out
lret
jb
sub
mov
mov
jp
mov
mov
add
push
call
lea
xchg
sbb
push
dec
xor
std
mov
xchg
gs
std
sbb
std
mov
sbb
jno
mov
lods
clc
mov
and
add
pop
or
dec
rcrl
stc
inc
mov
call
pop
or
enter
rcl
mov
dec
push
mov
xchg
add
jmp
arpl
jmp
movsl
loop
imulb
addr16
addl
aam
clc
sbb
sub
adc
mov
sub
xor
lahf
and
fwait
inc
bound
fs
int3
nop
cmp
push
mov
shrb
addr16
cld
out
mov
xchg
rcrb
pop
popa
dec
push
fisttpl
pop
je
sbb
adc
mov
jecxz
mov
xchg
mov
icebp
mov
mov
pop
push
jp
mov
in
jg
or
xor
iret
mov
lock
push
out
test
add
bound
aaa
lea
lahf
cli
fwait
or
repz
mov
rolb
out
sbb
push
sub
arpl
xchg
popa
mov
out
cmp
hlt
shrl
adc
cmp
jae
imul
test
popf
adc
pop
inc
mov
xchg
sbb
dec
jmp
push
int
pop
pop
xchg
mov
loope
mov
xchg
sahf
imul
sti
sub
xchg
jmp
add
jp
xchg
call
lock
outsl
inc
inc
gs
mov
insb
outsl
and
mov
int
push
or
push
fstps
xor
sarb
sarl
xchg
sbb
in
pop
lods
jns
xchg
lahf
add
test
xchg
popf
fdivp
test
dec
add
mov
or
sub
lret
cmc
inc
pop
pop
lret
xchg
repnz
ret
push
pop
dec
lods
subb
mov
sub
out
rclb
inc
sbb
ret
daa
cmp
sbb
ret
xor
pop
idivl
loope
incl
xchg
pushl
or
cmp
dec
mov
rolb
jne
sbb
cmpl
in
lahf
add
aaa
cmpl
push
add
cmpsl
dec
xchg
mov
push
xor
adc
test
adc
dec
sbb
repz
dec
sub
ja
mov
int
mov
insb
fwait
jae
lcall
insb
mov
lea
or
out
leave
out
aaa
mov
mov
outsb
mull
ljmp
sub
sbb
xchg
test
rcrb
mov
mov
push
xorb
adc
pop
cwtl
fildl
jmp
je
incl
sub
addr16
pop
rcll
imul
xor
aas
and
clc
sbb
js
adc
out
inc
inc
inc
aad
mov
je
les
or
push
dec
mov
ss
push
jmp
mov
test
jg
popa
or
fcoml
xor
aas
mov
sub
mov
fisubs
ficoml
sahf
shrb
pop
adc
aam
sti
cmp
add
dec
movsl
test
addb
shll
sub
push
jo
push
jne
repz
inc
xor
adc
push
mov
aas
stos
loope
mov
movsl
push
jae
dec
rorl
cmp
sub
xchg
or
and
mov
loop
sbb
or
add
mov
ljmp
leave
jno
push
ja
cwtl
cmp
mov
mov
push
push
out
xchg
dec
iret
iret
gs
jg
sub
mov
hlt
and
xchg
jne
dec
out
jno
dec
incb
fdivrl
pop
cmp
ds
fisubs
mov
or
pop
pop
xchg
nop
movb
ret
in
dec
lea
cmp
adcl
pop
xchg
stc
cs
cmc
test
sti
loope
mov
sbb
ja
pop
mov
jle
js
jle
aad
test
outsl
add
add
lods
fldl
pop
xor
or
adc
push
rcl
push
aaa
sub
shll
lods
pop
and
ds
shl
push
icebp
test
punpckhwd
cmp
mov
mov
mov
mov
div
cltd
sub
pusha
mov
dec
sbb
dec
and
push
scas
mov
test
fisubs
mov
aam
xor
pop
test
push
je
mov
test
mov
inc
imul
add
push
test
mov
sub
cmp
aas
in
add
mov
inc
fsubs
repz
cmc
test
icebp
cltd
and
jae
or
in
imul
mov
xchg
call
inc
mov
imul
inc
movsb
decb
shrb
pop
subl
in
sub
ljmp
les
stos
sbb
pushf
outsl
call
das
push
xchg
push
cmc
sub
mov
lods
gs
out
enter
jg
jp
mov
mov
xor
sbb
mov
into
jns
mov
mov
clc
add
mov
xchg
fimuls
pop
aas
xchg
negb
bound
or
lret
std
add
ss
fdivl
push
add
dec
add
int3
std
movq
cmpsb
cmpsl
mov
loope
adc
movsl
ja
cs
bound
les
pop
push
mov
cmc
mov
pop
in
push
insl
jb
push
dec
pusha
imul
sbb
mov
sbb
xchg
adc
sbb
pop
lea
test
movsb
jecxz
jae
mov
mov
add
les
pushf
jae
adc
sbb
ficoms
test
mov
jns
xlat
andl
jnp
push
or
testb
in
pop
aam
xlat
insl
imul
pop
push
push
or
mov
sti
adc
jae
cmp
adc
test
int3
or
scas
push
xchg
xor
das
lods
inc
mov
and
je
fbld
arpl
mov
pop
rcr
aad
lahf
mov
std
into
cmp
cmpl
xchg
sbb
push
mov
lds
mov
mov
out
gs
mov
sub
into
xor
lock
xchg
mov
fisubl
data16
sbb
cs
pop
addl
xchg
mov
inc
nop
dec
test
push
cld
lock
out
xchg
es
mov
hlt
pop
pop
push
cs
and
lret
mov
je
pop
inc
cmp
and
sub
mov
xor
out
add
sub
jl
pusha
sub
mov
push
push
gs
pop
in
popa
fists
fcoms
mov
icebp
sbb
xor
jmp
test
std
fnstenv
inc
or
push
aaa
pop
aaa
push
cli
scas
inc
and
mov
mov
jmp
fmuls
fmuls
ljmp
lcall
iret
andl
mov
mov
in
in
stos
hlt
lahf
dec
in
fwait
js
push
add
xor
mov
rcl
sub
xor
mov
cmp
in
imul
ljmp
sbb
mov
bound
pop
dec
pmullw
mov
aam
scas
dec
jecxz
xchg
out
sub
or
xor
roll
lahf
mov
repnz
fs
push
push
xchg
push
ljmp
hlt
cmp
ja
movsb
test
sar
call
mov
in
psubsw
mov
sbb
loopne
sub
sbb
pushf
nop
push
jle
cli
jmp
mov
xor
sti
mov
ror
dec
pop
lods
hlt
dec
ficomps
enter
or
jb
cmpsl
mov
inc
adc
rcrb
or
push
push
insb
int
emms
enter
fs
clc
inc
mov
xor
mov
lods
push
rcrb
pop
jl
mov
int
mov
fsubl
dec
loopne
cld
mov
scas
fidivs
inc
inc
mov
orl
pushf
xchg
lock
mov
lea
in
shll
sbb
insb
cmp
call
fldl
in
fwait
or
mov
jbe
lahf
in
xchg
mov
fistpll
cmp
jl
adcl
dec
daa
je
fstpt
insb
ret
bound
lock
imul
inc
adc
into
cmpsb
sahf
xchg
jns
mov
out
pop
bound
cmp
scas
jp
cmp
xchg
sbb
jno
mov
cmpsb
lahf
mov
mov
addr16
loope
mov
lea
xchg
xor
xorl
jbe
ficomps
push
test
push
pop
fsubl
cmc
and
aas
aam
or
pop
lock
inc
xor
inc
imul
in
loope
ret
cmp
inc
fiaddl
aam
arpl
and
mov
and
out
xor
movnti
xchg
xchg
das
jnp
add
sbb
out
stc
int3
aas
nop
sub
pusha
mov
sub
stc
enter
testl
lret
out
inc
xorb
xchg
push
sub
mov
xchg
fmull
dec
adc
xchg
pop
xor
int
mov
fnsave
xorb
fsts
mov
xchg
jecxz
push
xor
or
xor
sahf
pop
cli
dec
jecxz
inc
sbb
xor
mov
loopne
std
pop
fisttpl
faddl
movsl
pushf
jle
out
jbe
hlt
cmpsl
xor
fiadds
add
xor
cmpsb
repz
or
rclb
data16
push
sub
jnp
cmp
xchg
mov
xchg
or
jbe
adc
cs
scas
sbb
sub
sub
or
ja
inc
scas
sub
xchg
cmp
add
mov
ret
loop,pt
scas
dec
inc
movsl
out
jo
out
out
xchg
sub
add
jbe
mov
mov
mov
add
ret
mov
packuswb
bound
fstps
imul
sub
jp
fsubrl
das
mov
sub
mov
sti
cltd
jl
push
outsb
out
fcompl
fptan
es
xor
jns
test
mov
jmp
ss
and
lcall
dec
je
mov
call
lds
mov
out
sbb
cmpb
aad
push
shl
inc
xchg
mov
xchg
add
out
outsl
or
sti
dec
shlb
out
and
aas
inc
jle
jns
mov
inc
nop
cmp
orb
mov
vmread
shlb
outsl
imul
dec
jp
inc
mov
loope
jne
loopne
nop
push
xor
pusha
jecxz
mov
jmp
dec
lock
pop
adc
imul
mov
in
xchg
arpl
mov
popa
rcl
mov
xchg
sbb
mov
imul
nopl
dec
dec
iret
xor
loop
movd
test
inc
lahf
jle
mov
mov
mov
pop
outsb
and
mov
dec
in
cmp
les
or
les
jnp
push
and
xor
pusha
outsl
push
aaa
mov
add
xchg
inc
xchg
and
mov
inc
in
daa
jle
lahf
imul
enter
lahf
mov
arpl
inc
xchg
jmp
push
inc
fs
mov
lret
scas
mov
mov
ja
repnz
cmc
add
std
pop
mov
mov
sbb
leave
push
xchg
cmp
mov
sub
push
cwtl
das
das
and
adc
sub
cmp
hlt
and
mov
xchg
stc
inc
dec
sub
pop
sarb
mov
mov
mov
stos
mov
push
inc
and
fldcw
movsb
decb
cmp
jae
sbb
pop
out
pushl
jmp
ja
ja
js
xchg
mov
es
jne
xchg
fldenv
and
adc
out
addr16
shrb
xor
in
xchg
pop
sbb
popf
inc
shrl
ror
scas
jl
mov
cwtl
sbbl
adc
rcl
pop
stos
enter
pop
cmp
cmp
ret
notb
jno,pt
xor
daa
cmp
sub
jp
rcll
cmp
sti
jne
mov
insl
movsl
sub
xor
stc
mov
out
lods
inc
pop
in
adc
push
mov
push
popf
mov
sbb
lahf
adc
fstps
mov
gs
mov
push
ja
movsb
data16
sub
mov
or
std
jb
push
adc
push
int3
lock
pop
les
or
insl
das
subl
sbb
xchg
fwait
sbb
sbbb
out
xlat
popf
sbb
je
int3
lcall
or
mov
sub
add
das
aas
adc
and
cmpsl
cmpsb
outsl
inc
cmp
imull
adc
hlt
mov
push
cmp
xlat
lods
xchg
or
lock
lods
cld
in
dec
aam
fs
shl
and
mov
push
add
sub
loop
mov
pushf
add
insl
or
mov
mov
ljmp
mov
and
pushf
mov
rcll
mov
pop
popf
mov
test
nop
mov
add
adc
cld
jmp
jge
lcall
and
pusha
das
nop
ds
sti
stc
xchg
jmp
pop
and
inc
mov
pop
popa
mov
dec
lahf
lret
cwtl
cmc
xchg
or
jns
stc
lods
fs
daa
loope
and
and
xor
data16
mov
pop
or
rcrl
cmpsl
into
mov
add
fwait
fwait
popf
je
jae
fimull
sbb
stos
shlb
movsb
outsb
dec
pextrw
sti
cmp
ds
aaa
and
cwtl
add
add
mov
sbb
and
cmp
sub
cmpb
adc
nop
dec
fistpll
or
xor
mov
imul
sahf
repz
pushf
push
xchg
adc
add
jne
pop
xchg
mov
or
xchg
inc
int3
cmp
pop
mov
push
push
sti
dec
test
sarb
rcrl
ljmp
mov
fisubl
imul
xor
push
mov
mov
and
mov
xchg
jae
bound
cmp
add
pop
xchg
sub
xchg
push
flds
cltd
push
popa
jo
xchg
or
mov
ss
xchg
mov
ljmp
jmp
test
out
std
mov
adc
test
out
dec
lods
loope
in
scas
xchg
dec
das
subb
pop
adc
push
mov
add
inc
scas
adc
popa
mov
and
or
hlt
popa
jae
mov
jg
loopne
jnp
mov
shrb
xchg
sub
repnz
cli
sub
pop
fimuls
pop
ljmp
sti
test
inc
jne
popa
in
je
cmp
pop
es
jmp
or
popf
sahf
mov
and
les
mov
loopne
mov
sub
inc
and
sti
xchg
shlb
inc
mov
and
pop
jne
repnz
test
push
mov
ret
push
sub
pusha
into
mov
aam
pop
push
insl
repz
mov
test
inc
push
inc
push
or
into
and
out
push
push
scas
adc
jg
dec
arpl
out
icebp
cmp
fimull
mov
adc
dec
inc
push
cmp
xor
loope
add
sub
jecxz
in
mov
adc
sub
out
test
cmp
jp
lock
filds
xchg
fidivs
inc
insl
mov
es
sar
movsl
gs
xor
inc
xchg
les
push
mov
mov
and
and
andl
jne
xchg
cs
cwtl
mov
fsts
mov
cmp
push
mov
gs
lret
loop
mov
pop
xor
sahf
mov
xchg
inc
fbld
pushl
push
mov
cld
in
dec
movsb
sub
cmc
in
sbb
rclb
push
push
mov
mov
lock
push
lcall
and
pop
out
push
stc
add
mov
lods
xchg
push
jle
xchg
ljmp
cmp
pop
sbb
mov
sbb
or
sbb
or
xor
pop
jns
pop
mov
rclb
std
or
ss
and
push
inc
push
push
pop
mov
cmp
out
inc
inc
xchg
pop
jns
fs
mov
pop
jecxz
jo
xchg
bound
cmc
sub
scas
jp
popf
inc
fidivrl
popa
bound
push
adc
orb
gs
aas
push
xor
xor
push
dec
fcomps
sub
cmp
popf
push
cltd
out
mov
out
loop
jl
and
adc
mov
or
sbb
and
xchg
adc
sti
jp
jge
aaa
add
and
sbbb
add
clc
sub
rclb
mov
inc
ret
aas
xorl
out
ret
pusha
add
enter
pop
pop
pop
sub
movsl
movsb
xor
test
adc
call
lret
xchg
mov
and
or
fcomp
insb
daa
jge
push
loopne
or
jbe
push
pop
test
neg
pop
hlt
cmpsl
pushf
xor
or
outsl
movsl
das
dec
mov
pop
sti
fisttpll
mov
idivl
xchg
push
and
mov
movsl
pop
inc
xchg
push
inc
nop
leave
xchg
fstl
sub
sbb
stc
and
push
inc
xor
add
adc
sub
xchg
inc
xchg
sbb
and
push
mull
pop
inc
jns
pop
xor
pushf
addr16
shlb
sbb
addr16
and
mov
fnstsw
lret
mov
xor
mov
mov
sti
ret
fldenv
xchg
dec
mov
push
pop
adc
mov
popf
ljmp
mov
pop
mov
mov
pushf
test
loop
enter
lds
xor
icebp
loopne
test
cmp
mov
lret
mov
aam
ret
stc
dec
loopne
or
fiaddl
lods
pushf
arpl
ja
xor
loopne
test
out
push
lahf
pushf
jecxz
imul
xor
popf
cwtl
idiv
mov
movsl
pop
mov
je
fbstp
or
adc
loope
mov
stos
xchg
lods
rolb
mov
mov
gs
insl
outsb
aad
jns
adc
push
decb
dec
mov
sub
cmp
and
repz
sub
xlat
push
and
aad
std
scas
fs
in
rclb
in
fisubrs
cli
je
out
jge
scas
test
lds
inc
ds
ficomps
jg
outsb
cmc
loope
push
cld
push
cli
mov
jae
xchg
shr
cmp
stos
call
mov
jo
je
pushfw
mov
repz
test
dec
or
nop
jge
add
das
rcr
loop
sbb
insb
movsb
ja
jge
lds
and
xor
xor
mov
xlat
inc
cs
sub
repnz
and
jnp
dec
nop
jl
aam
js
bound
cmp
test
scas
notl
imul
pop
mov
push
mov
xchg
mov
int
dec
inc
or
movsb
mov
xor
adc
ljmp
pop
loope
sub
add
imul
mov
out
xor
lret
aas
mov
stos
xchg
ss
out
jnp
into
inc
or
or
inc
pop
push
dec
push
jmp
bound
je
jne
out
xor
pop
push
roll
idivl
pop
lcall
enterw
mov
xor
adc
in
pop
xchg
aad
mov
mov
daa
int3
add
sub
pop
leave
mov
fs
and
mov
push
push
add
and
pop
je
pop
aam
and
test
fldl
aam
push
adc
in
jl
cmp
enter
jp
sbb
aad
inc
mov
or
aas
pop
out
sbb
dec
fsub
push
iret
adc
scas
xor
xchg
icebp
cmp
xchg
cmp
and
or
test
jo
xor
jo
test
arpl
cmp
cwtl
leave
sbb
xor
adc
sarb
mov
lods
xlat
sub
or
es
lret
jno
out
pop
mov
jnp
imul
xor
loope
pushf
bound
stc
repz
jge
cmp
scas
mov
jge
and
mov
mov
fdivs
inc
push
stos
sahf
xchg
cltd
leave
sub
jmp
mov
icebp
mov
ss
lcall
add
dec
xor
in
jmp
or
test
fnstsw
fimuls
icebp
into
rol
mov
mov
dec
lds
xor
mov
jnp
dec
lret
pop
jle
repz
mov
pop
dec
stos
push
push
jle
xor
insb
lods
shlb
fcmovbe
andb
stos
push
mov
dec
mov
stc
xchg
dec
xorb
out
inc
in
test
xlat
pushf
adc
or
or
dec
cmp
xor
popf
push
xor
xor
xchg
les
movsl
scas
pop
andl
adc
pop
xchg
xchg
xchg
mov
mov
sbb
negl
movl
arpl
loopne
es
mov
repz
and
test
aam
mov
jb
inc
ljmp
dec
repnz
cmpsb
xor
testb
aaa
rol
sti
xchg
and
cmp
push
movlhps
int3
sar
or
adc
adc
inc
arpl
add
push
mov
stc
das
test
push
add
lahf
and
fmuls
xor
sbb
in
add
cld
cmp
ljmp
rcr
repnz
push
int
lahf
jg
pop
sub
pop
jnp
xchg
out
in
jle
cmp
and
js
dec
xchg
and
int3
popa
adcl
push
mov
lea
adc
mov
lret
data16
dec
pop
lret
lds
popf
and
inc
mov
inc
ds
push
shrb
nop
daa
cltd
adc
push
inc
sub
or
out
or
mov
scas
jb
aas
mov
mov
mov
mov
cmp
movsb
sub
jae
aam
test
push
cmp
adc
pop
cmp
xchg
pop
cmp
test
add
pusha
pushf
lret
stc
jg
and
xchg
xor
insb
xor
and
pop
lock
insl
ja
lret
popa
imul
punpcklbw
movsl
icebp
fistps
enter
cmpsl
push
add
popa
popf
mov
ficoms
push
pop
and
ja
jg
and
jle
loopne
loop
cs
adc
cmpsb
cli
lock
lods
sarl
or
shll
into
int3
je
lods
insb
fimull
into
imul
dec
sbb
mov
int3
pop
lds
iret
lcall
xchg
xlat
cmpl
xor
mov
xor
jp
pop
das
icebp
adc
sub
jge
shrl
scas
popa
mov
dec
push
jno
mov
mov
stos
sub
pop
in
jmp
nop
add
enter
jg
loopne
outsl
inc
pop
xchg
aad
lds
cmp
mov
pop
mov
or
enter
sub
pop
jge
cs
xchg
test
or
jo
sti
mov
cltd
mov
adc
insb
jmp
int3
leave
fwait
in
shlb
or
into
adc
jns
or
adc
adc
ja
mov
jb
xor
adc
imul
lock
shlb
rorb
sub
cwtl
jns
orl
xchg
push
cli
lret
mov
sub
push
jge
dec
in
lods
pop
pop
gs
push
rcrb
aad
jo
icebp
add
lcall
push
sbb
mov
cmp
cmp
dec
cmpsl
pop
lret
rdtsc
pop
clc
adc
mov
pop
mov
xor
lret
sbb
test
loop
movsb
push
mov
xorb
shl
mov
pop
fistpll
mov
cmp
push
jno
sarl
and
mov
lods
lea
jno
jb
das
sub
repz
adc
mov
mov
inc
repnz
xor
mov
mov
and
and
add
fcoml
in
cli
push
and
and
jns
mov
push
mov
cmp
mov
imul
xchg
ret
insl
push
sbb
call
js
mov
test
push
packuswb
mov
je
inc
scas
xchg
mov
inc
adc
jnp
lret
inc
lahf
xchg
mov
push
add
mov
sub
test
xchg
sti
cmp
and
pop
arpl
adc
movsb
pop
lds
es
push
sbb
pop
mov
jnp
sub
je
add
inc
insl
les
mov
cmp
mov
cmp
es
xchg
rcll
inc
dec
dec
cmc
mov
hlt
fwait
addr16
lods
outsb
ror
clc
mov
add
sbb
sbb
sub
inc
or
fadds
jns
lcall
arpl
mul
call
xchg
xchg
xchg
cld
or
add
sarl
fistpl
sbb
mov
scas
lea
test
xlat
push
push
imulb
ljmp
cmp
jmp
data16
push
mov
insl
or
sub
pop
jns
cmpb
ds
hlt
enter
dec
pop
cmpsl
mov
fcomps
push
pop
pop
ss
cmp
jecxz
sbb
and
xchg
dec
adc
adc
pop
mov
xor
or
push
push
inc
mov
or
repz
nop
inc
xchg
sub
shlb
ret
stos
mov
adc
lock
mov
sub
int
aas
mov
dec
cwtl
inc
in
insb
and
sub
inc
dec
hlt
jns
xchg
mov
cli
xor
xor
push
add
mov
mov
pop
dec
jo
mov
shrl
out
sub
pop
ljmp
ds
xchg
mov
mov
sbb
rorb
sub
icebp
pop
cs
test
pop
pop
mov
mov
test
mov
and
mov
ret
inc
mov
repnz
arpl
sub
inc
mov
out
addr16
and
ds
lahf
sub
mov
lods
cmp
or
sub
add
push
in
es
dec
xor
add
lret
jo
dec
xchg
daa
imul
mov
mov
stos
mov
test
sub
ljmp
mov
push
cld
sub
sbb
or
xchg
frstor
insb
push
cmp
shrb
jb
int
je
jmp
xor
out
lret
mov
test
sub
pop
jecxz
xor
or
pop
xor
mov
push
mov
adc
lods
sahf
cmp
push
xor
mov
cmp
mov
je
adcl
js
sub
pop
xor
pop
les
cmc
out
cwtl
add
or
mov
add
fbstp
js
and
sbb
andl
xchg
jns
fnstenv
dec
push
into
push
dec
mov
xor
nop
fbstp
xchg
pop
sbb
cmp
and
jl
xor
inc
push
push
or
mov
std
mov
test
arpl
mov
in
push
push
push
arpl
fnstcw
mov
mov
popa
cpuid
xchg
xor
std
mov
test
push
inc
std
pop
jg
lea
pop
sbb
cmpsl
std
not
sbb
lock
mov
gs
daa
jmp
movsl
mov
popa
cmp
outsl
test
dec
adc
jmp
mov
lret
push
fldcw
or
mov
mov
inc
imull
jle
in
or
and
cmp
mov
ret
in
pop
mov
lock
mov
pop
xor
mov
xchg
rol
adcl
pop
leave
jo
scas
push
mov
aas
repnz
jno
pop
fnstsw
xchg
xor
jno
jno
dec
add
imul
out
mov
lcall
outsb
or
or
inc
xchg
mov
jmp
push
mov
addb
ss
ja
std
push
dec
pop
xor
and
pop
jb
cwtl
ret
aam
inc
sbb
mov
adc
jae
mov
and
mov
cmc
in
mov
xor
lock
popl
xchg
loope
stos
and
movsb
int
pop
mov
sarb
lock
push
pusha
add
mov
push
mov
out
push
mov
frstor
pop
dec
mov
outsb
lret
dec
xchg
shrb
outsl
ret
sub
and
inc
test
loopne
mov
fsubl
jns
fs
data16
xchg
pop
mov
sarl
push
mov
or
mov
sbb
xchg
push
jb
and
pop
insl
in
test
or
lcall
popf
hlt
int3
aad
into
aad
aad
sub
fwait
jmp
xchg
inc
push
dec
imul
test
bound
loopne
mov
mov
addr16
xor
jae
movsb
test
mov
or
push
mov
loopne
out
xor
mov
fistl
or
cmpb
or
imul
pop
xor
pop
mov
fdecstp
and
push
mov
xchg
push
xchg
jbe
stos
add
mov
imul
rep
aad
add
pop
fstpt
adc
jbe
ss
pop
add
lcall
mov
fsubs
mov
movsb
call
jecxz
jbe
xchg
fldcw
bound
and
shl
hlt
jle
sarl
es
mov
test
dec
mov
inc
bound
stos
loopne
cs
imull
outsb
or
imul
dec
ja
fldl
push
inc
outsl
scas
repnz
and
xchg
mov
das
fdivl
stos
sbb
ret
push
or
jne
out
lea
sbb
fdivl
mov
cltd
sub
mov
dec
or
cmpb
xor
idivl
test
shlb
push
fistps
jae
cmp
loop
repz
ja
insl
and
movsl
add
stc
xchg
sub
xchg
shll
in
inc
ja
jge
cmpsl
iret
hlt
sbbb
xchg
or
xchg
add
sbb
daa
add
test
and
mov
pop
pop
pop
pop
jnp
xor
lcall
adc
lret
imul
loop
stos
das
or
mov
push
repz
mov
xor
test
ficompl
adc
xchg
push
ret
mov
ss
aas
xchg
out
daa
aad
jo
insb
mov
shll
ss
xor
mov
aad
xchg
mov
cmc
pop
pop
add
pop
shl
push
ret
cmp
testl
mov
mov
xchg
bnd
stc
mov
pop
xchg
je
add
pop
shlb
inc
loopne
lcall
pushf
mov
loope
and
fmull
mov
popf
lahf
jle
test
imul
aas
xor
fwait
fwait
or
pusha
xchg
mov
nop
mov
cmp
rcl
ficoml
pushf
rcrl
add
lcall
lock
xor
aas
fsubrl
das
xchg
add
inc
or
pop
out
stos
and
lret
xchg
pop
sbb
push
cmp
push
lock
mov
sbb
push
jns
cwtl
cmp
mov
or
adc
xchg
inc
pusha
or
add
lret
cmp
mov
data16
mov
je
pushf
mov
add
clc
outsl
shll
imul
cmp
ss
push
lret
mov
add
imul
pop
icebp
ljmp
and
jmp
mov
popf
mov
out
daa
addb
fisttpl
mov
fs
les
xchg
xchg
inc
push
jl
push
push
stc
cmp
dec
iret
call
sbb
and
out
adc
hlt
jo
add
mov
nop
inc
push
rcll
dec
clc
dec
jecxz
xchg
adc
jns
ret
push
fdivs
jno
les
mov
adc
shll
push
out
adc
fs
push
adc
push
shlb
cmc
and
sbb
xor
out
push
inc
ja
jge
icebp
out
in
cmp
lea
sti
pop
jns
call
negl
jae
cld
push
notb
cmp
inc
fsubr
cmpl
jb
js
pop
pop
inc
orl
int
out
sahf
jbe
fcomip
sahf
dec
or
mov
mov
js
mov
mov
fs
mov
lcall
pop
negb
je
xchg
pop
or
sbbb
adc
outsb
testb
inc
cmp
fdivrl
fistps
addl
notl
ret
adc
cmpsb
mov
adc
add
ss
jge
inc
adc
cmp
cmp
push
push
fiadds
out
test
mov
cmp
out
push
jb
adc
cmp
rorb
jno
ret
cli
xchg
xor
outsl
test
popf
test
xlat
mov
sub
add
cmp
pop
sbb
cmp
inc
orb
jb
out
mov
test
imul
xor
out
loop
cmp
movsb
jecxz
test
pop
loopne
and
adc
ds
mov
sbb
in
pop
addr16
lret
mov
sbb
jl
xor
add
fs
faddp
pusha
jg
aaa
cmp
xlat
or
mov
add
es
das
leave
aad
add
cld
testb
into
lcall
sub
or
jne
lahf
pop
aam
cltd
jl
push
loopne
mov
xchg
rcrb
insb
fldt
jns
ljmp
cmpsb
mov
lock
dec
jle
and
ret
int
push
push
mov
hlt
outsl
clc
ret
sbb
dec
sarb
and
sbb
ficoml
mov
or
call
jbe
jb
in
mov
push
ja
or
push
scas
into
idivb
loopne
dec
inc
stos
push
cwtl
jnp
mov
in
fsubrp
and
dec
mov
and
fsubrs
imul
out
popf
in
sbb
cmp
pop
aaa
outsb
dec
scas
popf
cs
mov
push
or
test
vorps
stos
sbb
into
mov
jb
dec
aam
movsb
fisubrl
shll
arpl
outsl
or
outsb
add
mov
xor
lret
mov
sar
add
fprem
cmovl
jecxz
xor
cmpsb
add
pop
inc
adc
dec
icebp
into
cwtl
inc
repz
fsubs
xchg
idivl
int
lret
push
lcall
jo
xchg
sbb
cmp
pushf
sub
repnz
adc
stos
cwtl
adc
into
jmp
clc
push
jecxz
mov
in
mov
pop
push
jno
mov
lcall
les
hlt
pop
test
out
ret
daa
data16
js
inc
aaa
xchg
in
push
cmpl
xor
aad
add
mov
mov
test
push
pop
addr16
data16
imul
fiaddl
popf
xchg
jne
sbb
int3
push
inc
ret
adc
pop
repnz
mov
or
cmp
dec
push
pop
adc
cltd
jae
push
out
addr16
fwait
les
or
daa
push
inc
inc
lds
fidivrl
add
dec
lds
mov
fwait
daa
pop
cwtl
leave
mov
inc
and
test
mov
daa
aas
jge
xor
mov
adc
call
cmpb
push
dec
in
mov
inc
scas
in
add
or
sub
add
data16
inc
test
sub
jle
outsl
mov
inc
bnd
aas
clc
insb
popf
sub
imul
dec
adc
pushf
sub
pop
push
sub
adc
xchg
sbb
sbb
adc
ret
ffreep
mov
in
ret
dec
imul
xchg
push
jmp
push
scas
ret
out
arpl
aas
xor
xchg
sbb
cmc
mov
cmp
mov
daa
lock
push
inc
hlt
or
imull
aaa
push
adc
and
jnp
inc
cmp
pop
popa
add
sub
movsl
mov
push
fs
dec
scas
xlat
xor
sub
out
push
mov
lds
cmp
or
into
sbbb
imul
pop
lret
leave
inc
stos
test
cmpsl
sbb
inc
add
jns
aam
xchg
or
iret
movhlps
loop
mov
cld
jl
and
and
sahf
jne
shrb
push
dec
sbb
inc
imul
push
xchg
hlt
inc
mov
adc
xchg
popf
data16
popf
fisttpll
mov
rcrb
dec
or
aad
lods
call
adc
test
daa
inc
xchg
xor
mov
js
imul
inc
les
mov
mov
cmc
addr16
clc
sbb
jp
and
mov
fidivl
std
or
and
and
lea
pop
insl
xchg
lock
daa
test
xchg
dec
nop
fisttps
inc
xor
xchg
out
ljmp
adc
popa
jg
inc
cmp
push
orb
inc
xor
inc
mov
xchg
cmc
lcall
mov
lds
call
mov
cli
out
lds
pop
pop
xor
sub
dec
push
js
lcall
addr16
xlat
dec
dec
mov
and
adc
mov
sub
incb
jge
add
pop
xchg
jbe
pop
jb
xchg
xor
jg
and
mov
push
or
add
jmp
push
pushf
loop
movsl
xor
xchg
xor
leave
push
push
gs
xor
stos
push
jg
push
rcrb
dec
dec
ds
and
dec
mov
cli
inc
mov
cld
je
frstor
fldl
test
testb
cmp
inc
lret
stos
into
push
lahf
or
pop
insb
fmul
pop
movsl
pusha
ficoms
out
and
jmp
cmp
xchg
mov
mov
xchg
mov
xor
mov
daa
adc
inc
cmc
fadd
rclb
fs
enter
pushf
mov
arpl
jae
push
and
jns
adc
jne
cli
jl
xchg
fisubrl
js
inc
insb
or
dec
cwtl
xchg
mov
outsl
cmp
adc
dec
hlt
mov
ja
adc
jp
enter
mov
ret
jmp
mov
add
mov
sbbb
mov
into
jge
sbb
sub
mov
mov
sbb
mov
popa
out
lods
xchg
mov
push
push
sbb
or
std
sub
lret
xor
loop
popf
mov
repz
fdivs
xor
xor
sub
inc
add
ss
insl
popf
lret
iret
add
cmp
xor
repnz
or
and
cs
lock
rol
sbb
adc
cmpsb
xor
adc
inc
sti
std
ljmp
aas
mov
cmp
js
outsb
test
mov
cs
pop
rorb
sub
or
jl
xchg
mov
adc
inc
mov
mov
int3
scas
and
inc
ds
pop
movsl
sub
loop
sbb
xchg
loop
call
add
sbb
or
xor
inc
icebp
mov
fisubs
cmp
out
call
jmp
jmp
xor
add
adc
lcall
sub
je
xchg
mov
push
jg
or
adc
sub
pop
dec
xlat
xbegin
aas
xor
cmp
jns
ss
cmp
fidivl
in
pop
aam
xor
adc
fbld
fistl
cltd
push
adcl
cmpsl
push
inc
insb
and
lods
xchg
jmp
ljmp
lret
call
stos
scas
daa
iret
add
xor
mov
mov
loopne
shrb
sbb
dec
lcall
es
scas
or
xor
adc
xlat
cmpsb
daa
add
out
loop
imul
lock
pop
dec
addr16
nop
in
ret
cs
lahf
pushf
jo
data16
cmp
ss
iret
fcmovne
push
inc
jp
repz
pop
lock
or
xorl
xchg
pop
inc
hlt
cmc
xor
dec
movb
cmp
in
je
insb
add
mov
push
mov
jo
outsl
addb
xor
sub
loop
scas
jg
and
mul
dec
lods
ja
shr
repz
mov
xchg
push
push
adc
rcrb
mov
xor
fs
rcr
dec
je
das
adc
jle
jae
rolb
leave
fnstenv
cld
jnp
iret
mov
or
mov
dec
addr16
cmp
dec
cli
test
mov
adc
sub
xor
mov
movsl
cmpsb
repnz
iret
repz
pop
pushf
sbbb
jnp
inc
and
dec
cmp
repz
test
xchg
stc
inc
leave
cli
lret
cli
xchg
ss
outsl
add
nop
bound
mov
lds
inc
mov
ret
and
cwtl
pop
jg
cli
inc
push
outsl
push
ret
addr16
popf
pop
mov
mov
lret
xor
add
lock
xchg
loop
mov
xchg
jae
clc
lahf
adc
inc
pop
shll
pop
jg
int3
sub
mov
add
fldenv
mov
mov
idivw
out
ja
cmp
mov
in
mov
inc
cli
stos
ficoms
or
jns
xor
or
pop
fcmovb
or
andl
push
aam
lcall
lock
faddl
in
sub
test
mov
jge
icebp
nop
pop
dec
push
scas
leave
cmpsb
push
sbb
js
dec
jg
xor
mov
inc
test
dec
or
lods
movsb
stos
xor
add
ds
jnp
cs
sbb
mov
dec
xor
and
popf
dec
cli
fistl
std
dec
lods
bound
inc
popf
hlt
popf
cmp
pop
inc
divl
arpl
xchg
nop
sti
or
mov
fcompl
adc
cmp
cwtl
dec
fcompl
jg
or
inc
stos
jg
xchg
sub
mov
cld
scas
lea
lahf
xor
push
lret
add
test
push
sbb
nop
mov
add
cli
insl
sub
dec
jne
scas
cld
or
imul
gs
xlat
and
stos
or
clc
hlt
xor
fcoms
xchg
sub
jmp
imul
imulb
jmp
movsb
mov
add
lods
movsl
cmp
hlt
sti
cli
out
push
xchg
cli
rclb
pop
aam
sub
push
xor
cmp
push
int3
add
ss
lds
mov
mov
mov
out
and
sahf
fdivrl
fildll
mov
aad
mov
adc
and
aam
icebp
pusha
and
sbb
pusha
pop
add
push
mov
dec
mov
lds
out
popa
js
shll
mov
lret
xor
pusha
fs
je
lock
in
mov
sarl
sbb
inc
aam
inc
vminps
or
outsl
andl
add
int3
enter
adc
mov
jb
icebp
xlat
adc
std
insl
lods
inc
jl
loop
xchg
stos
cmp
nop
in
sahf
fwait
arpl
add
ja
daa
mov
inc
jne
adc
mov
jne
sub
dec
push
push
dec
and
lea
or
popa
not
clc
ret
int3
sbb
mov
fimull
out
sub
push
repnz
scas
xchg
inc
outsb
fistpl
pushf
adc
push
sbb
and
jno
lock
jle
pusha
imul
jo
mov
test
adc
aam
add
jae
jae
xor
push
sbb
sti
aas
xor
aad
sub
sar
arpl
popa
sub
pop
or
out
pop
popa
add
loop
inc
inc
das
push
andl
call
pop
out
jecxz
sub
cmp
stc
popa
mov
js
mov
fiadds
imul
mov
xchg
jle
fmulp
lea
add
int3
and
xchg
cmp
dec
repnz
sbb
call
loop
pop
testb
push
mov
cmc
adc
push
xor
ja
add
dec
out
and
inc
in
loop
fsubr
ret
and
fcomps
sti
loopne
push
inc
and
loopne
loope
mov
jge
sub
xchg
aam
cmp
pop
push
aaa
push
shll
push
push
out
pop
inc
jne
es
mov
in
fldcw
cmp
pop
fmull
out
adc
jle
sub
push
cwtl
mov
rolb
adc
or
mov
add
daa
cmpsb
xor
data16
cwtl
sahf
repz
push
sub
xchg
lea
hlt
cs
bound
ja
mov
mov
shl
addr16
inc
inc
and
xchg
mov
bound
mov
repz
and
cmpsb
adc
pop
lods
jp
bound
xchg
dec
icebp
into
and
into
je
sub
sub
inc
xor
lret
cmp
cmp
out
mov
sahf
pop
fcmove
adc
lcall
fs
cld
sub
test
xchg
aad
add
shlb
jle
sub
outsl
or
add
movsb
ds
push
mov
popa
ret
mov
jge
cmp
pusha
mov
leave
xor
stc
add
insl
cld
lods
jle
mov
pop
stos
mov
and
pushf
bound
pop
mov
sbb
out
movsl
subl
adc
cmc
fadds
fbstp
xchg
mov
mov
dec
push
add
mov
or
loope
push
pushf
mov
imulb
xor
mov
fnstcw
adc
insb
inc
mov
inc
mov
pop
into
das
pop
adc
in
ret
sub
xchg
outsb
data16
test
imul
or
push
je
dec
inc
movsl
test
pop
jecxz
mov
popa
jmp
pop
lahf
jecxz
mov
jns
adc
sub
aam
pop
sti
imul
xchg
xor
shll
jns
shlb
hlt
dec
or
mov
dec
xor
xlat
fidivrl
shll
jns
int3
jl
xchg
pop
inc
adc
sti
pop
cmp
push
dec
add
mov
outsb
sti
mov
or
jle,pt
nop
lahf
test
or
jge
fidivl
inc
and
push
cmp
dec
cwtl
push
je
add
stos
sbb
cmp
sub
xchg
cmp
adc
cli
fs
pushf
addr16
lods
lcall
and
fists
sbb
sbb
mov
sub
imul
jb
jecxz
hlt
pop
inc
push
sbb
push
into
push
popa
xor
loop
test
dec
stc
inc
sti
mov
pushf
adc
test
lds
out
push
pop
es
fcoms
fbld
ret
cltd
dec
dec
mov
out
insb
adc
leave
je
pop
lods
hlt
ret
jo
mov
xchg
nop
mov
lods
lahf
add
loopne
insl
add
cmpsb
inc
lcall
inc
movsb
push
xchg
sub
pop
cmpsb
and
xor
cwtl
inc
and
inc
sbb
cli
ss
xchg
out
jb
out
xchg
popf
xchg
add
mov
es
ja
sub
in
pusha
adc
mov
sbb
dec
lahf
or
xchg
call
lea
and
lret
mov
xor
push
mov
adc
ljmp
xorl
lds
cmp
pop
jae
or
movsl
daa
mov
jae
push
adc
cmp
call
mov
push
jns
pop
addr16
xchg
mov
dec
lds
jge
lahf
sub
pop
testb
sbb
enter
addl
jb
pop
pusha
add
pop
mov
push
pop
dec
adc
testb
in
push
out
lods
mov
push
mov
imul
sahf
jns
dec
jl
sub
push
aam
jb
dec
in
xor
lret
push
jne
push
add
xor
cmp
cmpsl
pop
stc
sbb
add
out
pop
lret
dec
int3
dec
adc
push
cmpsb
jo
add
out
pop
loopne
mov
movsl
ljmp
imul
jl
push
mov
jecxz
ret
xor
ljmp
sub
inc
sub
mov
fdivp
cli
mov
jbe
repz
lahf
pop
pop
sub
fbld
in
jno
aam
out
and
push
fildll
mov
into
mov
fwait
pop
jl
jle
movsb
or
stc
xchg
out
inc
cmc
mov
push
add
mov
inc
mov
rol
jb
stc
mov
jle
mov
out
push
jns
xor
repz
mov
data16
sarb
loop
add
xchg
jmp
pop
mov
cmpsb
xchg
xor
enter
gs
cmp
and
pop
push
ret
inc
sbb
pop
mov
movsl
add
mov
sbb
xor
cmpl
push
fcoml
xor
ret
jg
lahf
in
jmp
sub
sub
xlat
xchg
cwtl
rclb
test
adc
je
push
pop
push
pusha
out
xchg
adc
inc
out
pop
push
call
fwait
or
cld
in
add
scas
js
cmp
ljmp
ss
mov
xchg
push
data16
mov
insl
or
lret
stos
and
inc
jle
push
pop
shrb
or
mov
cmpsl
shll
nop
mov
mov
call
shll
ja
outsb
cmpsb
call
jbe
lcall
jne
popf
fs
inc
test
xor
fsubrl
push
mov
test
push
lock
stos
pop
sbb
test
pop
popf
sahf
loope
pop
outsb
inc
mov
pushf
fdiv
fldl
test
mov
out
jb
cmc
std
sahf
cmpsl
gs
in
xchg
sub
xor
ja
lcall
shlb
sbb
jp
dec
push
orb
dec
adc
aad
cli
iret
jecxz
lcall
out
sbbb
cmp
xor
fdivr
inc
xchg
inc
push
sub
and
adc
mov
adc
push
movsl
mov
das
aad
add
mov
mov
data16
sbb
loopne
test
subl
ljmp
and
jge
fwait
mov
dec
in
cltd
addr16
mov
fisubrs
dec
bound
cltd
scas
scas
lret
mov
out
mov
nop
in
or
jne
rcll
dec
stos
sub
or
js
and
jnp
mov
pop
jp
or
js
into
or
outsb
lahf
pop
out
xchg
mov
lret
inc
je
mov
jl
adc
insl
jmp
mov
mov
jmp
and
cmp
repnz
pop
adc
add
mov
xchg
jns
mov
test
mov
lahf
add
cmp
out
xchg
je
dec
or
adc
mov
push
mov
and
ss
push
daa
test
push
or
and
dec
fistpll
out
push
mov
sub
mov
adc
ret
add
std
sub
into
lods
in
adc
imul
mov
xlat
xlat
sarb
repnz
loopne
les
mov
jbe
jg
xor
out
sarb
pop
ja
in
test
push
pop
daa
dec
das
shr
inc
imul
add
mov
icebp
jne
mov
fsub
or
pop
shll
clc
lret
xor
aad
imul
test
das
sbb
stc
fldt
jge
inc
ja
push
nop
pop
jne
testl
adc
sub
pop
pop
inc
loope
ret
nop
jmp
push
and
xchg
cmp
pop
loopne
or
cmpsb
and
sub
pop
xchg
je
pop
jle
mov
cmp
add
fimuls
cmp
xor
sub
fimull
test
imul
push
out
sub
ficomps
pop
xlat
clc
rcrl
mov
insl
movsb
pop
dec
adc
pop
push
cmpsl
sbb
fstps
popf
jmp
dec
fmul
jo
pop
adc
test
cmp
or
xchg
lods
mov
push
lods
pop
lahf
jb
pop
pop
inc
add
xor
mov
mov
movsl
imul
add
test
jne
inc
cmp
pusha
cmpl
xchg
sub
fldcw
ficoms
mov
mov
jae
pop
sub
push
mov
sbb
push
stos
adc
cwtl
push
in
fcoms
hlt
jge
sub
xor
add
sbb
sbb
jnp
fs
out
add
xor
insl
mov
insl
les
xchg
sbb
inc
aam
add
mov
pop
dec
pop
xchg
sub
arpl
shrl
add
jmp
decl
xchg
pop
add
adc
pushf
mov
mov
loopne
sarb
mov
jp
sarl
add
cmp
cmp
sub
lret
sub
lods
dec
cmp
mov
add
adc
shlb
shlb
cs
add
je
test
ljmp
mov
mov
repz
mov
push
cmp
cmp
mov
or
xchg
cmpsb
sbb
cmp
loopne
dec
pop
int
jge
sbb
mov
adcb
push
push
decb
movsl
jge
stos
outsb
outsl
hlt
sub
addr16
int3
rolb
or
movsb
int
push
inc
das
adc
mov
mov
jae
xor
lea
xchg
xchg
push
scas
jb
aad
repz
div
jl
popf
mov
int3
mov
out
cmp
and
jne
bound
dec
stos
mov
ret
idivl
into
fists
jne
bound
ficoms
ret
mov
add
cmpsl
push
gs
xchg
cli
test
mov
stc
mov
adc
mulb
fnstcw
je
scas
xlat
xor
inc
pop
pop
rolb
adc
scas
fisubrs
xchg
or
jns
pop
jmp
mov
xchg
adc
mov
stos
xchg
mov
sub
fdivl
inc
daa
jne
rcrl
test
shl
movsb
dec
or
sub
leave
lahf
inc
and
jb
inc
xchg
push
xchg
or
divl
mov
and
dec
into
jmp
xchg
xor
outsl
lret
or
or
mov
cmpsl
sbbb
enter
lcall
inc
in
xlat
jmp
jmp
ds
push
adc
dec
mov
cmp
push
adc
add
mov
xor
sbb
add
adc
stc
and
and
nop
imul
push
cs
xchg
sbb
arpl
and
mov
out
sbb
fidivl
cmp
jbe
incl
dec
lds
je
push
push
mov
sub
insb
insl
shlb
adc
mov
or
inc
aas
int
adc
mov
fisubrl
mov
outsb
frstor
cli
mov
ret
hlt
sbb
test
push
cmpsl
mov
push
hlt
or
and
xchg
push
frstor
cmp
outsl
cmp
mov
aas
out
sysret
sub
movsl
sub
cmp
fdivrl
and
add
add
push
fwait
cmp
fnstcw
loopne
out
cmc
adc
fidivs
in
push
sbb
sub
and
gs
push
xchg
out
cmp
mov
cmp
xor
jae
xchg
imul
ss
imul
daa
cltd
leave
vrsqrtps
jmp
jns
sub
fsubs
ja
cmp
adc
adc
lret
inc
push
ds
dec
in
jno
popa
and
push
in
outsl
or
jb
jno
or
movsb
dec
cltd
mov
in
int
nop
sbbl
movl
out
sbb
testl
js
push
ds
fsubr
cwtl
sub
testb
inc
lds
and
insl
cmpl
push
out
sub
or
push
push
or
push
add
inc
cmp
and
stc
pop
pop
inc
jo
or
or
mov
push
pop
fisttpl
push
cmpsl
add
pop
int3
notb
pop
ficoms
sub
mov
es
dec
mov
arpl
loopne
cmp
adc
pop
push
push
mov
fldt
fsubs
mov
lret
push
push
jp
ret
call
mov
fdivrl
jg
das
or
push
stc
inc
sub
mov
pop
xchg
sub
aam
or
xor
dec
pop
mov
sub
jae
test
mov
xchg
mov
pop
dec
cmp
cltd
xor
cmp
das
repnz
adc
push
fists
shl
insl
pusha
and
or
adc
dec
push
push
mov
iret
cs
ret
jns
pop
pop
fdivrp
pop
rcrl
out
into
add
sub
lahf
jg,pn
lods
mov
arpl
inc
fs
icebp
js
fs
fwait
cmp
sub
mov
add
pop
or
dec
cmpl
xchg
pop
ss
add
int3
sahf
loope
jbe
loop
adc
lds
mov
rolb
arpl
dec
es
add
xor
inc
fcmovb
xchg
ss
push
leave
int
or
sub
leave
stos
roll
xchg
xchg
and
ljmp
mov
test
add
loop
fisttpll
dec
fs
sbb
stos
test
test
or
sub
cmp
cmp
cmp
aam
out
test
les
sbbb
and
xchg
pop
jg
xchg
cltd
in
inc
int
test
dec
inc
xchg
xchg
mov
mov
fisttpl
pop
loop
jbe
pop
sbb
mov
xchg
push
mov
insl
jae
jl
jl
sub
imull
sti
add
mov
gs
hlt
pop
ret
cs
adc
cwtl
std
cmp
and
xchg
fcompl
in
sbb
push
test
stos
fisubs
mov
mov
xchg
pop
cmp
mov
lea
rclb
into
int3
sbb
add
xchg
adcb
pop
pop
mov
mov
lahf
cmp
sbb
fidivs
inc
cmp
jno
cmp
out
shll
sub
fsubl
outsl
fimull
mull
test
ds
jns
add
aam
movsb
cmpl
shlb
out
or
jns
out
aam
lret
pop
das
imul
mov
jmp
adc
stc
in
jns
inc
mov
mov
sub
repnz
inc
pop
scas
jne
xor
sbb
pushf
cld
xor
cld
stos
mov
xchg
dec
int
scas
stc
gs
add
cmp
mov
repz
pop
sbb
mov
loope
sti
loopne
fbstp
jl
jae
loope
les
mov
imul
adc
mov
aam
mov
movsl
pop
jg
jle
cmp
cmpb
icebp
xchg
lock
ret
xchg
and
xchg
inc
gs
sarl
mov
nop
jge
xor
shlb
push
jnp
cwtl
sub
cmp
scas
pop
aaa
mov
outsl
test
adc
int3
dec
test
pusha
adc
mov
ficomps
xor
push
push
cmpsl
std
sub
sti
add
out
jo
adc
cmp
seta
cmp
sahf
xchg
mov
dec
sbb
mov
push
mov
hlt
lret
std
add
lock
or
jecxz
fidivs
sbb
clc
sahf
xor
xchg
add
jl
jge
push
rorb
xchg
adc
insl
sub
outsb
add
xchg
fcmovnb
mov
addb
hlt
jno
outsl
mov
insb
mov
dec
push
repnz
sub
lret
pop
jae
inc
movsb
cld
pop
insb
dec
test
jecxz
adc
aam
mov
xlat
int
in
pop
aas
add
scas
hlt
ljmp
mov
mov
scas
xchg
mov
jp
iret
lods
jp
dec
mov
ret
add
cmp
fwait
je
jns
pop
jge
sbb
dec
mov
test
dec
pusha
push
mov
pop
mov
inc
insb
and
adc
and
sbb
rcrl
je
xor
push
push
in
lds
sahf
mov
push
loop
push
xor
test
ret
loope
inc
xor
adc
addr16
inc
lods
enter
or
dec
iret
push
push
inc
inc
push
insb
loope
movsb
pop
and
and
cltd
mov
lret
daa
loope
sbb
iret
mov
sahf
inc
or
jmp
xor
cld
and
mov
mov
add
pop
mov
ss
gs
and
cld
roll
pop
inc
adc
incb
inc
std
lods
out
lret
pop
imul
fdivl
push
dec
mov
movsl
mov
and
jns
push
push
dec
jbe
lahf
fisttpll
in
inc
jae
dec
dec
cmp
lods
dec
outsb
mov
stos
test
mov
mov
stos
out
ds
xchg
mov
mov
cmp
cld
sub
in
sbb
jp
jecxz
jbe
adc
xchg
inc
das
int
mov
xor
push
lret
xchg
jo
mov
sbb
dec
inc
xor
mov
sub
add
test
mov
cmc
fimull
fcmovnb
mov
mov
jne
jecxz
jne
hlt
push
lcall
jo
mov
fucomip
out
jnp
push
mov
xor
jns
and
inc
test
cld
mov
pop
xlat
mov
sbb
das
ds
cmp
outsb
lret
test
icebp
mov
out
pop
cs
imul
loopne
jge
xchg
add
jmp
loopne
xor
mov
fistpll
scas
and
aad
std
mov
div
popa
das
lahf
jmp
stc
rorl
mov
jnp
cmpsb
in
push
std
ljmp
rcrb
mov
jae
or
adc
cltd
dec
jl
mov
out
insl
push
xor
push
mov
xor
mov
sbb
cmp
and
std
xorl
dec
or
mov
bnd
cmp
jns
popa
cld
outsl
push
mov
out
xchg
jnp
popa
mov
leave
sub
mov
movsb
ficompl
je
gs
inc
dec
or
jmp
ljmp
aas
addr16
push
cmp
jns
push
mov
jne
add
cmc
xlat
les
jae
pop
or
loope
jno
aas
mov
mov
cmp
cld
pop
cmc
fdivl
sbb
fidivs
xchg
jbe
cltd
insl
add
fcomp
cld
push
mov
mov
cmp
mov
out
push
repz
inc
pop
shlb
and
mov
aaa
arpl
in
dec
xchg
jbe
or
lds
das
int
pop
gs
in
push
pop
ret
mov
rorb
inc
xchg
in
stos
je
fs
mov
push
nop
dec
fstpl
out
fucomi
sbb
repnz
lcall
xchg
rolb
xchg
pop
push
lret
cmp
pop
cmp
xchg
inc
push
lret
mov
xchg
outsl
lahf
popa
sbb
mov
push
mov
dec
xor
add
out
push
or
add
iret
scas
sub
inc
and
xor
push
icebp
and
jbe
pop
jge
outsl
xchg
fnsave
or
pushf
push
dec
imul
mov
aam
mov
push
mov
dec
jle
xor
sbb
or
mov
cmp
xchg
dec
clc
jno
testl
sbb
ss
dec
lea
ret
mov
sbb
imull
jge
testl
lcall
repnz
push
cwtl
sbbb
jbe
icebp
jne
adc
mov
stos
sub
cmp
dec
mov
dec
mov
mov
fstps
lea
mov
fisttpl
and
rcl
fdivrp
jne
sti
mov
jne
sbb
daa
mov
or
push
add
add
push
mov
les
cwtl
das
mov
fdivp
adc
ret
aam
ds
imul
outsb
sbb
or
dec
jmp
mov
mov
rcrb
jo
mov
fwait
inc
cmp
incb
ds
subl
mov
jmp
xchg
aam
out
dec
and
hlt
adc
jecxz
fisubs
xchg
int3
fdivr
sbb
sbb
lea
sub
lahf
adc
push
xor
mov
adcb
in
movb
call
jns
mov
sbb
cmc
push
pop
sub
sub
insb
sbbl
dec
mov
dec
bound
pushf
imul
push
xchg
cmp
cmp
mov
add
dec
mov
scas
adc
fstps
push
add
hlt
xor
mov
out
push
fcompl
sbb
rolb
push
xor
mov
rcll
pop
mov
test
jns
roll
sti
movw
mov
pop
push
pop
mov
xor
or
sbb
inc
or
add
in
leave
ret
imul
iret
shl
in
test
sbb
pop
and
fstpl
mov
jae
lret
jmp
out
jge
push
xchg
push
popl
adc
mov
inc
push
in
or
mov
or
negb
js
push
movsb
cs
sub
sub
mov
xor
mov
cmp
test
fcompl
nop
mov
push
adc
inc
cmc
dec
out
or
imul
ss
stos
sub
mov
aaa
movups
inc
mov
enter
in
fdivrl
mov
sbb
push
sahf
and
and
es
add
gs
leave
data16
sbb
lea
pop
ja
or
add
or
cmp
xchg
sub
lret
sti
and
mov
inc
dec
lods
cmpb
imul
fadd
gs
fdivrl
xchg
push
xchg
xchg
jl
pop
outsb
mov
adc
fs
sti
dec
jecxz
add
shll
fsubrl
je
stc
fmulp
pop
xchg
cltd
and
scas
outsb
shrb
pop
xor
mov
inc
push
lret
fistpll
ficoml
mov
aad
sbb
push
into
fadd
aam
mov
mov
pop
inc
cmc
repz
add
cmp
mov
or
mov
push
out
fwait
mov
mov
mov
sub
mov
or
rcrl
mov
popf
stos
out
imul
or
lret
xor
ficoms
jbe
dec
jl
dec
repz
hlt
cld
pop
int
mov
push
popa
push
sahf
pop
inc
xor
std
mov
mov
pop
outsb
sub
dec
jns
cmp
jle
sbb
insl
sbb
lcall
ror
mov
ljmp
ds
shlb
out
jns
cmp
iret
sbb
jg
lcall
lods
or
dec
xchg
push
xchg
movsl
cli
jge
sbb
ljmp
jecxz
push
jl
pop
push
cmpb
xor
sub
or
sahf
out
rcl
add
mov
fdivrl
sbb
cmp
mov
es
movb
xor
je
inc
mov
cmpl
dec
mov
pusha
xchg
les
leave
aad
jmp
fildl
dec
enter
mov
in
mov
cmp
and
xor
jno
xchg
dec
xchg
pop
push
iret
inc
aad
jno
add
mov
lds
sarb
mov
cmp
mov
addl
sub
lret
sbb
clc
mov
rcl
fmuls
cltd
mov
mov
enter
push
sbb
mov
lahf
rcl
jnp
arpl
or
scas
xor
ret
mov
fbld
add
imul
inc
xor
out
inc
imul
ds
cmp
data16
sarl
ljmp
rcll
inc
sub
repnz
xchg
jne
lahf
cli
sbb
jmp
lea
repz
fmull
jo
sbb
sbb
push
add
add
movsl
data16
lret
adc
cmp
dec
push
or
inc
loope
fsub
sub
aam
or
idivl
mov
pop
sahf
shrl
loop
or
mov
mov
adc
fcompl
mov
pshufw
lret
sahf
in
testl
add
xchg
scas
xchg
pop
cmp
dec
pop
repz
adc
push
mov
mov
adc
push
xchg
mov
iret
fcmovbe
outsl
dec
xor
int3
imul
idivl
mov
mov
aas
cmp
push
lds
dec
adc
fcoms
cld
cld
outsl
lods
cwtl
add
push
xchg
pop
mov
pushf
data16
mov
lahf
std
lea
xchg
xor
push
push
sub
sbb
int3
jp
lds
pop
je
dec
scas
cmp
cmp
xchg
stc
fildll
sub
mov
cltd
enter
pop
dec
lret
xchg
or
stc
stos
dec
adc
hlt
dec
movsl
aam
test
mov
lret
push
mov
pop
dec
cmp
cmp
iret
push
adc
xor
outsb
or
outsb
pop
adc
lods
fwait
or
and
shlb
call
loopne
jecxz
jb
in
sub
sbb
les
addr16
push
stos
inc
jns
test
pushf
pop
xlat
xchg
aam
xor
inc
and
push
icebp
jne
orl
lret
push
mov
cmp
cld
or
mov
dec
mov
xor
stos
lea
mov
loopne
stos
xchg
add
ds
arpl
int3
frstor
rcrl
imul
mov
mov
dec
test
sub
addb
repz
mov
mov
jb
sbb
jge
cmc
pusha
xchg
aas
ret
fdivrs
lods
jle
rclb
cmpsb
je
xchg
mov
jecxz
mov
adc
jo
imull
sbb
and
cli
dec
pop
mov
mov
sbb
jns
ss
nop
hlt
push
cli
inc
movsl
dec
imul
movl
push
aaa
mov
xchg
shrl
mov
mov
aad
or
add
aaa
fidivrl
push
xor
les
fwait
addr16
mov
repz
mov
jl
sbb
fs
push
movsl
or
xchg
notb
sti
std
fsubl
push
rclb
lret
mov
in
scas
and
mov
xor
and
in
jge
scas
dec
pop
scas
and
ja
pop
mov
lock
or
add
or
cmp
imul
outsb
test
je
stos
xchg
dec
sbb
and
cli
jnp
hlt
mov
inc
loopne
adc
outsl
mov
fisttpll
aad
jl
pop
inc
lds
push
popf
mov
xor
pop
lahf
in
jne
mov
mov
movsb
inc
cmp
jo
adc
fstl
sbb
loope
sub
sub
sub
std
idivb
sbbl
cmp
imul
jne
sub
xchg
push
mov
pop
scas
mov
int3
push
xchg
and
push
insb
insl
out
pop
inc
mov
lret
sti
mov
push
or
add
cmp
cmpsl
and
adc
lahf
sbb
and
inc
lods
jmp
inc
mov
dec
ret
out
inc
faddl
and
add
js
flds
arpl
and
push
jo
and
test
push
mov
add
pushf
inc
out
loope
push
cmpsb
cmpsl
mov
sbb
leave
and
xor
call
scas
pop
movsl
pop
aas
sbb
fistpll
fstps
inc
es
xor
insl
pop
xor
outsl
loope
xor
pushf
adc
lcall
jle
fmul
dec
add
and
pop
pop
mov
sbb
cmc
and
addr16
jno
cmpl
lahf
or
ds
jecxz
mov
mov
mov
adc
shlb
mov
stc
scas
dec
cmp
std
fistl
pop
movsl
test
stos
adc
cmp
adc
icebp
mov
xor
pop
mov
xor
and
mov
pop
lods
inc
cltd
sub
mov
in
and
je
out
mov
les
sub
gs
stc
rcll
loop
and
mov
mov
pop
outsl
dec
repnz
jecxz
jp
in
jbe
adc
lds
iret
mov
inc
test
add
loop
or
mov
es
or
rolb
adc
ss
push
mov
mov
jne
sbb
cmc
mov
sarl
adc
lods
mov
fnsave
dec
or
pop
dec
lea
fwait
out
jmp
mov
mov
jp
xchg
xchg
or
aas
push
imul
jmp
mov
imul
xor
pop
scas
pop
push
push
int
nop
or
js
pushl
loopne
iret
inc
fs
cmp
cld
fdivrs
stos
mov
imul
test
mov
xchg
sbb
into
add
test
add
fdivr
int
insb
mov
les
shrl
ljmp
cmp
mov
int3
stos
fwait
lods
xorl
inc
pusha
jno
shrb
mov
rorb
jae
push
mov
add
les
or
pop
lods
jns
push
fmull
adc
popf
dec
adc
jns
mov
mov
enter
mov
out
in
icebp
add
sti
out
scas
xchg
push
rcll
sbb
mov
inc
sbb
movsb
inc
mov
sti
pop
pushf
sar
pop
or
andb
fsubs
inc
fildl
push
aas
aas
stos
sub
cli
add
xchg
fstpl
jmp
mov
addl
je
cmp
mov
gs
lret
cmp
and
sbb
das
mov
mov
mov
leave
push
push
push
mov
push
sub
add
pop
sahf
inc
add
std
leave
cmp
leave
addb
aas
loopne
jl
mov
xchg
test
sub
dec
ret
fisttpll
aam
xor
fs
mov
shlb
test
andl
push
cmpsb
mov
shlb
daa
mov
insb
les
aad
mov
push
aaa
dec
fcoml
das
leave
pop
sbb
adc
shr
cwtl
dec
push
fs
add
push
divb
pop
inc
popf
pusha
out
pop
and
cltd
mov
bound
sub
push
xchg
rcll
subb
pop
stc
loop
jnp
xor
in
cld
xchg
pop
xchg
xchg
ficoml
jp
lds
lods
xor
es
lods
cmpl
cmpsb
shlb
fsubl
adcl
cmp
sarl
dec
push
add
cli
dec
mov
inc
fsubrs
addl
push
lods
sbb
xchg
cmp
xlat
add
push
lret
movsb
jge
cmpl
jnp
in
sbbl
fistl
dec
xor
push
push
jge
jp
sub
aad
lcall
push
leave
inc
jae
and
les
cmp
adc
jo
mov
push
adc
adc
pop
aam
add
cmp
aaa
insb
adc
mov
jbe
cmpsb
stos
fcomps
or
mov
fistpll
and
mov
mov
cmp
shl
mov
xchg
mov
ja
mov
mov
jno
adc
adcl
mov
cmp
adc
sahf
push
fstpt
inc
fisttps
mov
adc
push
dec
aad
inc
js
add
xor
inc
mov
push
addl
shrl
in
arpl
dec
sahf
imul
jg
cmpsl
mov
mov
repz
fs
mov
mov
xlat
mov
out
in
jge
dec
in
sub
or
sbb
and
sti
repnz
pusha
mov
jl
insb
cmp
jno
ss
rcrl
cltd
loop
fildll
mov
jp
stos
orb
mov
repnz
cmp
inc
lods
or
out
out
pop
in
and
daa
push
mov
aas
lcall
xchg
hlt
mov
cwtl
push
setno
imul
orl
adc
les
int
stos
push
and
mov
mov
adc
xchg
pop
push
dec
jnp
mov
jbe
test
xchg
or
adc
test
and
or
jns
jl
scas
mov
inc
iret
pop
push
xor
cmp
xor
rcll
lret
sbb
and
xor
mov
stos
out
inc
loop
mov
imul
outsb
and
popa
imulb
loopne
mov
mov
and
scas
add
negl
cmp
lods
out
ja
pop
pop
xor
push
or
cmp
icebp
mov
mov
jp
fcomps
add
lea
cmp
stos
bound
pop
rclb
push
imul
adc
ljmp
testl
or
push
sub
out
jns
adc
into
out
mov
stos
adc
aad
sub
jns
pushf
and
fldl
aaa
xor
cmc
mov
mov
or
sbb
xlat
fisttpl
fcmovbe
and
mov
decl
pop
add
or
add
stos
adc
jmp
sbb
std
outsl
mov
scas
adc
adc
lods
aaa
into
or
mov
add
and
test
adc
or
or
push
pop
mov
loopne
lahf
sbb
sbb
mov
fstpt
outsb
iret
ja
je
out
aas
pushf
outsl
xor
pop
ja
ds
mov
jmp
int3
jmp
pop
mov
test
dec
pop
jo
test
sbb
mov
pop
stos
add
cld
fnstsw
xchg
push
cmpsb
xor
xor
cld
mov
test
mov
insb
jnp
mov
cltd
or
ds
sbbl
xor
add
orb
fs
push
mov
sbb
mov
jecxz
subb
push
aam
pop
mov
xchg
and
or
xor
push
js
icebp
into
jg
dec
mov
addr16
rcrb
sub
popf
push
in
add
call
dec
xorb
rcrl
jmp
pavgw
xor
out
stos
hlt
popf
pop
cmpsl
mov
imul
clc
lcall
and
bound
ja
mov
cmp
xchg
pop
sub
sbb
jmp
aad
loope
push
sub
xor
andb
push
mov
das
movsb
pop
ds
pop
pop
dec
lea
jo
cmp
sbb
jne
in
icebp
sbb
ret
cmp
xchg
mov
loop
jmp
pop
cwtl
xor
add
insl
or
add
and
dec
popa
sbb
loop
sub
lret
inc
test
xchg
dec
insb
ljmp
xor
mov
lret
xchg
mov
mov
cld
ret
movsl
push
in
dec
into
adc
push
or
lods
out
out
jg
das
mov
cltd
mov
mov
jb
sub
jecxz
jmp
cmp
les
imul
push
imul
fsubrl
fstps
andb
sub
iret
or
add
adc
sbb
aad
cld
mov
push
adc
movb
jle
mov
mulb
lods
or
push
cmc
cmp
inc
sub
cmpsl
ret
push
call
push
sbb
adc
cmp
mov
pop
fcoml
shrl
jp
sub
push
addr16
or
lcall
cmpsl
cld
jnp
sbb
cmp
add
ret
enter
aas
xor
scas
push
test
pop
and
jne
aaa
sub
fisubs
mov
push
pop
xlat
jns
or
pop
loop
pop
sti
push
jl
aad
icebp
mov
add
mov
or
adc
jmp
loope
imul
aaa
js
leave
pop
push
aas
fistps
test
push
stos
adc
ja
daa
inc
lea
in
adc
pushf
jo
push
fcompl
and
sbb
mov
les
jae
test
in
cwtl
jmp
stos
pusha
push
das
lods
dec
inc
fmull
arpl
cmp
cmc
dec
push
divps
adc
outsl
mov
scas
adc
gs
sub
mov
pop
and
pusha
shufps
lods
lds
sbb
addl
mov
jno
mov
dec
push
loopne
lods
pop
pop
shrb
andb
jp
push
rolb
or
jbe
out
push
adc
shl
sbbb
stos
out
xchg
mov
xchg
pop
xchg
pop
insb
ja
dec
xor
fwait
sbb
push
and
adc
loope
sbb
repnz
xor
stos
jl
sbb
jnp
sub
or
arpl
pop
movb
bound
pop
in
pop
sbb
rcl
decl
out
rcrb
js
pop
xlat
push
int
mov
leave
cs
cwtl
cld
or
jo
outsl
push
cmp
push
adc
loopne
mov
or
in
lock
ds
movsl
icebp
imull
pop
aaa
sarb
cmp
aad
scas
dec
arpl
loope
scas
jo
ret
lcall
pop
and
push
adc
lods
stos
xchg
push
outsl
mov
and
inc
test
add
notl
aas
jl
mov
xchg
push
addr16
nop
sbb
call
lods
loope
adc
xchg
shr
jl
sub
outsl
lods
scas
push
ret
mov
pop
cmpsb
push
rclb
sbb
lds
pop
test
push
loope
xchg
mov
arpl
out
sbb
inc
mov
pop
nop
loopne
inc
hlt
or
add
push
cld
mov
rol
xchg
inc
pop
loope
orl
loopne
loopne
mov
jmp
push
jb
xchg
jo
gs
dec
push
jns
shlb
bound
mov
movsl
int
pop
aam
xchg
call
cmp
sub
fsts
jnp
ljmp
cs
dec
sbb
adc
daa
mov
inc
cltd
pop
pop
roll
adc
jle
sbb
jbe
jo
mov
sbb
jg
mov
xchg
and
popa
dec
sti
icebp
out
mov
aam
mov
xchg
jae
lods
xor
cmp
adc
aad
mov
fnstcw
cli
pop
mov
mov
fildll
pop
in
movsb
out
add
jb
loope
xchg
out
nop
xor
jno
push
xor
std
std
out
xor
mov
lcall
xor
lea
push
adc
xchg
lods
dec
es
ficoms
mov
enter
sbb
cmp
sbb
outsb
mov
adc
xchg
lea
rcrl
pusha
wbinvd
mov
push
inc
pop
ret
fbld
sub
pop
sub
sub
jmp
scas
pop
out
iret
les
mov
jge
xor
mov
cmp
addr16
cltd
xlat
xchg
xchg
lock
jmp
iret
jns
inc
cmc
xchg
mov
add
cwtl
sub
orb
cmp
xchg
adc
mov
jnp
push
imul
sbb
sub
push
inc
add
cmp
jmp
xchg
fiaddl
jae
gs
popf
xor
out
jae
leave
rol
insl
jno
test
pcmpgtw
push
adc
mov
mov
or
cmpb
push
stc
data16
cli
mov
bound
data16
mov
in
adc
test
or
lahf
ss
out
imul
into
in
sti
mov
xor
and
shll
jmp
or
pop
inc
mov
sbb
fcoms
mov
inc
sahf
cmpsl
mov
lret
pop
enter
sub
cmc
pushl
insb
jle
dec
pop
mov
addr16
std
pop
cs
in
pop
dec
jnp
fiadds
sbb
loop
int3
sub
pop
stos
xchg
pop
popa
pop
jns
lea
mov
outsb
jl
out
and
outsl
mov
movsl
int3
and
adc
add
outsb
xor
test
rorl
imull
cmp
scas
insb
mov
rorl
adc
lods
cltd
jno
pop
fimull
movsl
es
push
pop
test
aaa
mov
popf
mov
iret
lcall
repz
inc
adc
outsl
dec
arpl
or
pop
jb
jns
inc
sub
push
mov
cmp
gs
dec
jp
and
in
push
mov
jne
push
loope
pop
cmp
xchg
faddl
push
mov
shlb
and
adc
test
inc
adc
mov
cmc
xor
or
mov
das
pop
push
cmpsl
xor
jmp
pop
mov
and
cmp
xchg
add
xor
and
add
js
inc
mov
xchg
xchg
jmp
gs
dec
int
mov
jno
add
into
mov
pop
sti
ret
push
adc
popf
dec
sahf
insl
repz
test
shr
cmpsb
out
dec
jmp
in
jne
fiaddl
les
std
adcl
sbb
leave
lds
test
mov
sbb
pushf
pop
lea
cltd
mov
jle
mov
add
jno
jge
enter
fldt
outsl
mov
stos
test
aas
xor
bound
push
push
sbb
push
fwait
mov
jae
sbb
xchg
clc
clc
out
testb
dec
mov
ret
lahf
cltd
inc
les
mov
sbb
nop
fcompl
shrl
movsl
xchg
dec
push
jbe
mov
xchg
test
sub
leave
pop
cmpsl
fnstenv
xor
mov
js
mov
sbb
js
fadds
mov
add
in
pusha
outsl
fnop
pop
push
push
jmp
into
inc
mulb
aas
pop
and
mov
arpl
jp
pop
mov
enter
data16
or
mov
fstpl
pop
es
int
jmp
sti
fcoml
or
jae
fisttpl
aam
in
dec
imul
inc
xchg
pop
jg
iret
adc
sti
test
fldl2e
push
jmp
inc
rcll
cmp
ljmp
add
addb
je
mov
push
out
pop
scas
add
and
inc
arpl
dec
inc
icebp
jmp
xor
xchg
rcrl
add
jns
pusha
test
mov
into
mov
or
mov
aaa
push
mov
aam
fidivs
imul
dec
push
mov
xor
fmulp
mov
jns
xor
lock
sub
xor
loop
in
push
and
or
add
sub
shlb
add
std
or
inc
xor
enter
mov
sub
ficoml
in
arpl
rolb
fcoml
shlb
xorl
lcall
rcrb
sbb
std
inc
sahf
iret
xchg
lods
sbb
cwtl
sbb
jnp
sahf
inc
nop
sti
mov
es
test
xchg
xor
pop
nop
sub
jae
das
mov
leave
sbbl
sub
notl
cwtl
test
mov
dec
pop
inc
icebp
xorb
mov
adcb
es
inc
dec
sti
sbb
sub
pop
test
iret
movsl
cmpsb
pop
xchg
into
pop
add
movl
or
dec
std
adc
fisubrs
and
or
or
sub
gs
rolb
inc
cld
testl
adc
push
xor
mov
sbb
sub
and
add
jae
aaa
xor
adc
inc
xor
inc
and
sub
jae
pusha
out
push
in
call
bound
aaa
push
into
adc
push
sahf
imul
jle
int
sub
mov
fidivrs
data16
andb
outsb
clc
inc
ficoms
test
arpl
adc
leave
mov
fimull
or
shll
xchg
loop
mov
xchg
in
sub
pop
dec
add
out
pop
nop
imull
mov
add
data16
push
push
inc
icebp
adc
cs
je
cld
shrb
mov
cmp
imul
sbb
dec
cwtl
fstl
in
aaa
lret
xchg
cmp
pop
scas
das
lock
cltd
js
jnp
and
shl
int
outsl
pusha
lock
adc
fwait
decl
adc
shrb
pop
ffreep
push
iret
add
inc
cmp
add
push
cmp
popa
mov
hlt
jns
cmc
jmp
sarb
jecxz
ret
fcompl
mov
daa
xchg
xor
mov
sbb
sti
js
cmp
stos
mov
ret
jne
cmp
sarb
movsb
loopne
rcr
mov
loopne
push
mov
mov
pop
sti
xchg
xor
loope
mov
push
pop
into
pop
shl
jecxz
hlt
xlat
jmp
push
int3
cmpsl
push
into
xchg
scas
mov
jne
mov
clc
jmp
pop
movsb
and
cli
sub
jb
add
fnsave
push
jmp
mov
daa
xchg
xchg
add
out
and
and
cltd
loopne
mov
push
pop
sbb
ficomps
out
rol
push
bound
dec
mov
repz
dec
xchg
das
cmp
iret
sub
mov
mul
mov
push
movsb
or
mov
lods
clc
stos
ret
cmpl
and
adc
add
push
stc
mov
scas
bound
sub
pop
ret
addr16
loope
xrstor
call
mov
xchg
call
pop
sar
iret
jbe
jae
aad
mov
imul
mov
push
push
jmp
insl
orl
sbb
mov
lret
and
movsl
push
sbb
test
adc
into
push
in
mov
xchg
mov
lock
rcr
test
jecxz
imul
stos
sbb
test
pop
push
sti
lock
aad
fists
xor
lock
pop
arpl
xchg
mov
cmpsl
xor
shlb
xor
sbb
stos
xlat
out
xor
lcall
jno
mov
addb
push
xor
sbbl
mov
cmpsb
idivl
push
cld
xchg
adc
bound
or
out
mov
mov
dec
push
lods
loopne
or
fisttps
mov
pop
pop
or
fiadds
mov
ljmp
insb
mov
fidivrl
mov
jo
mov
sbb
ds
aas
jnp
js
sbb
push
inc
mov
pop
call
sahf
ret
push
repz
test
jle
mov
lods
push
mov
push
mov
outsb
push
sbb
bound
int3
out
outsb
pop
adc
cmpsb
mov
je
into
sbb
lods
sbb
pop
lock
jge
ret
mov
inc
rorl
loope
and
lea
pop
repz
sub
xchg
push
enter
ss
sub
pop
in
in
ds
fsub
test
repz
sub
inc
mov
cmc
or
loopne
dec
mov
ja
mov
jae
addr16
imul
es
enter
in
cmpsl
nop
clc
popf
push
mov
xlat
gs
arpl
sbb
pop
outsb
aas
cwtl
adcb
push
cmp
or
adc
lea
pop
mov
mov
call
push
add
inc
mov
lret
sbb
mov
inc
mov
dec
add
sbb
leave
ss
and
xchg
jnp
and
or
inc
cmp
mov
push
and
popa
jns
cmp
and
ds
xchg
inc
xchg
pop
pop
jns
mov
pop
fdivrl
imul
jne
pop
pop
xchg
mov
xor
mov
adc
in
scas
insl
push
jo
leave
fmuls
nop
or
outsl
aaa
inc
mov
mov
sub
fadd
cmc
popf
mov
fisubs
sbb
push
jne
or
sub
adc
mov
adc
mov
jle
jmp
jecxz
aas
inc
mov
and
das
xor
add
push
out
xchg
es
jmp
inc
test
mov
cld
jae
mov
js
popf
aam
push
xchg
mov
add
or
inc
ss
cmc
mov
and
stos
mov
sub
sti
lods
inc
dec
sub
xorb
or
leave
icebp
push
aaa
movsl
pop
cltd
xchg
sub
push
pop
aad
jle
add
ret
jb
ret
mov
jecxz
cmpsb
into
jns
int
shlb
inc
jnp
pop
imul
cmp
stc
cltd
push
jne
xchg
mov
mov
cwtl
add
addr16
fnsave
inc
lock
mov
mov
sub
adc
mov
push
test
dec
xchg
inc
mov
cmpsl
and
mov
or
push
pop
imul
sahf
gs
aaa
shlb
inc
rorl
cltd
fwait
inc
movsb
sbbb
mov
push
inc
mov
std
xor
push
out
pusha
pop
aad
xchg
movlps
jbe
pop
imull
mov
pop
sub
and
mov
stos
int3
jbe
ss
dec
lret
scas
mov
stos
repnz
dec
jbe
aaa
sbb
jb
pusha
fs
jl
mov
push
pop
stos
xlat
mov
push
cmp
sahf
mov
cwtl
ss
scas
pop
xorb
pop
and
arpl
jge
pop
pop
test
insb
push
aam
add
pop
adc
lahf
jno
jnp
mov
inc
cmp
test
xor
cltd
pushf
jbe
es
mov
mov
dec
or
push
or
popf
cmc
and
mov
xchg
sub
btr
cmc
inc
shll
into
mov
xor
mov
push
push
popf
sub
clc
mov
icebp
bound
mov
popa
aaa
push
dec
repz
aaa
repz
mov
cmpb
mov
mov
xor
je
add
push
mov
out
ret
inc
cmpsb
and
jnp
sbb
push
jae
jmp
in
jbe
stos
mov
lock
sbb
push
xchg
and
loope
xor
repz
cmp
xchg
movb
mov
daa
jg
popf
sbbb
inc
and
shr
inc
add
jno
loope
xchg
sbb
push
xchg
fwait
sar
cwtl
fldcw
ret
xchg
scas
pop
mov
sub
sub
mov
adc
mov
or
test
cmp
ds
mov
test
mov
push
push
jmp
cmp
inc
std
loop
fs
jnp
xchg
scas
clc
mov
mov
hlt
pushl
xlat
movsl
pop
push
sbb
xchg
or
pushf
xchg
pop
call
jle
push
scas
inc
cmp
jmp
sbb
inc
dec
out
lret
push
in
lock
adc
test
push
fisttps
daa
add
jnp
dec
stos
lods
int3
ds
and
dec
repnz
and
bound
sub
fwait
mov
ljmp
test
cltd
call
cwtl
mov
jge
add
int
push
rcrl
jbe
adc
sbb
divl
mov
mov
xchg
aas
test
movsb
sbbb
xchg
pop
cmp
dec
or
sub
add
loop
pop
xor
dec
aaa
testb
push
ljmp
xchg
hlt
or
sub
cs
jmp
and
lock
jnp
andb
pop
jno
sub
ja
cmp
add
pushf
push
cli
xlat
cmpsb
fsubl
jecxz
std
mov
es
movsl
jp
sahf
call
movsb
push
xor
leave
inc
mov
enter
cmc
jmp
inc
push
cltd
pmulhuw
fstp
repz
or
call
mov
jns
fisttpl
pop
inc
mov
or
dec
in
mov
cmp
inc
rcll
rclb
cltd
aad
inc
dec
inc
insb
add
cltd
adc
lods
and
adc
jnp,pn
sub
in
xchg
in
aad
addr16
pop
jle
adc
fs
xor
arpl
push
popa
loopne
jle
mov
cmp
jg
push
mov
add
imul
pop
xchg
lret
repz
dec
xor
push
jecxz
cltd
push
pusha
sbb
loop
popf
adc
aaa
and
or
lret
adc
fbstp
jo
dec
adc
sbb
xchg
lcall
lods
push
mov
sub
mov
aaa
out
lret
xor
jg
out
aam
pop
lahf
push
adcb
insl
dec
leave
scas
cmp
imul
ret
inc
xor
jge
popa
sbb
lock
mov
mov
sbb
or
sbb
jg
test
ja
dec
inc
mov
cwtl
dec
jnp
pop
cmpsl
arpl
and
fldt
pop
add
into
dec
sub
xlat
push
das
test
mov
xor
test
clc
das
test
imul
in
popl
mov
dec
cmpsl
arpl
fsubp
je
insb
adc
mov
pop
out
iret
jae
and
lret
cmpsb
shll
fsub
add
xor
es
add
pop
int
adcb
das
andb
jbe
mov
loopne
je
xor
mov
cwtl
xor
sub
xchg
fldcw
push
jp
mov
xlat
adc
inc
push
push
xchg
out
repnz
int3
xchg
mov
and
pop
repnz
or
jp
or
inc
lods
negl
ret
std
loop
lock
mov
mov
and
sbb
mov
jp
xor
outsl
mov
mov
loopne
fimuls
adc
fs
or
arpl
pop
imul
int3
push
push
pop
movsb
jnp
gs
mov
cli
mov
xchg
arpl
mov
xchg
leave
fistpl
and
mov
lods
jne
push
xchg
pop
arpl
out
mov
or
cwtl
call
bound
repnz
jmp
data16
ret
inc
movsb
in
sti
jno
sbb
in
dec
icebp
dec
sbb
sub
push
movb
adc
dec
icebp
jnp
repnz
cmp
pop
std
dec
jb
movsl
add
je
or
xchg
mov
inc
mov
jp
push
test
fs
jne
push
adc
sarb
xlat
add
enter
cwtl
stc
jp
inc
dec
mov
cld
xchg
cmp
jle
adc
push
push
sbb
mov
rcrl
loop
adc
cwtl
outsb
inc
dec
xchg
mull
jns
dec
push
repnz
cmp
mov
stos
pop
sub
pop
cli
mov
test
pop
sub
js
jnp
sub
mov
sbb
mov
dec
loopne
js
dec
mov
sbb
cmp
sub
leave
mov
fwait
pop
jecxz
int3
sbb
xor
lods
sbb
or
cmpsb
mov
fisubrl
xor
adc
mov
xor
cltd
hlt
xorl
nop
jae
cmpl
lahf
xor
jo
lea
pop
push
mov
fldcw
push
add
movl
lods
int3
jno
sbb
popa
lret
cli
addr16
aam
adc
mov
xchg
fbld
and
mov
and
movsb
push
mov
mov
sbb
mov
movlps
ret
push
bound
dec
cli
neg
or
test
cmpsb
in
mov
or
jnp
stc
jo
iret
and
out
ja
push
add
inc
push
out
cmp
repz
divl
js
and
fmul
pop
dec
lds
nop
adc
lcall
fs
rclb
adc
ret
cltd
movq
pop
sub
push
inc
into
mov
je
movsl
shll
fistl
mov
lahf
xor
pop
push
sub
cmp
shll
or
icebp
call
jmp
aas
jnp
sbb
pop
cmpsl
mov
push
inc
xchg
bound
fstl
lea
fxtract
sub
lods
shll
mov
std
mov
shlb
ret
sar
mov
fimuls
cmovno
das
sub
mov
test
cmpsb
dec
sub
inc
push
test
pop
xchg
in
loopne
daa
mov
in
jnp
push
mov
sub
aas
sarb
push
mov
nop
or
test
mov
loopne
cs
adc
mov
pop
in
aam
xlat
in
jg
push
mov
adc
lret
iret
leave
jecxz
push
mov
fdiv
loope
ret
push
push
or
stc
pop
test
cmpsb
jb
xor
cmp
pop
mov
sbb
dec
add
xchg
lods
mov
push
leave
push
dec
mov
jg
pop
pop
pop
outsl
mov
rclb
ret
incl
dec
mov
rclb
sahf
stos
addr16
and
mov
pop
stos
mov
imul
sbb
lret
rolb
or
repz
mov
insb
fmul
fldt
das
sbb
sbb
imulb
pop
iret
in
stos
mov
pop
enter
xchg
pop
int3
cld
aas
leave
xchg
mov
xchg
mov
shrl
rcl
and
jmp
dec
push
mov
ds
rorl
gs
enter
mov
sahf
mov
into
push
js
push
xor
test
xor
bnd
jne
stos
push
js
call
inc
pop
fiaddl
dec
popf
movl
xchg
negl
cwtl
fnstsw
fcoml
rclb
adc
push
imul
mov
cltd
lds
xchg
flds
out
mov
xchg
movsl
cmp
push
or
es
push
fs
xor
cld
pop
inc
adc
imul
mov
mov
add
in
daa
add
lcall
cld
es
imul
dec
dec
pop
daa
sbb
xchg
lods
sbb
inc
mov
or
pop
cmp
pop
nop
js
cmp
aad
adc
ret
les
ss
push
cmp
add
andb
fidivrs
adc
inc
jmp
stos
addr16
imulb
je
add
rorl
sub
lea
test
cli
mov
lret
jg
shll
inc
add
mov
or
outsb
cs
xor
and
dec
xchg
or
xor
xchg
lds
dec
repnz
xchg
cmp
mov
and
push
clc
lcall
cmp
sbb
and
stos
add
cwtl
pop
ret
fbstp
ss
das
stos
sub
sbb
pusha
fcos
sbb
popf
cmp
xchg
inc
and
mov
call
lea
jnp
xchg
fiaddl
daa
jno
lahf
lea
fsub
pusha
out
jl
inc
or
jle
iret
scas
loopne
pop
cmp
cmpsl
sarl
dec
test
cmpsb
adc
inc
iret
addl
push
clc
jp
movsl
mov
insb
adcl
sub
xchg
mov
and
loope
xchg
aas
jne
sbb
out
mov
inc
pop
dec
leave
sub
pop
xchg
cwtl
aad
cmc
sbb
aam
pop
ds
into
iret
xchg
popa
cmp
leave
sar
jne
jbe
sbb
lret
int3
lods
sub
or
pop
inc
inc
fstpl
pop
mov
add
inc
mov
mov
push
adc
sub
int
lret
xor
cs
aas
and
mov
xchg
mov
in
and
ds
lea
xchg
pop
sahf
cmp
cmp
cmpsl
inc
rolb
and
out
xchg
xchg
mov
icebp
xor
insb
lcall
aas
lret
xlat
not
xor
sbb
xor
insl
mov
int
repz
push
pusha
inc
xor
cmp
loop
push
mov
das
ja
int
cmp
sub
lds
aad
mov
pop
push
test
arpl
mov
adc
mov
inc
cmp
xchg
daa
mov
daa
jbe
or
sbb
jmp
jge
cmp
inc
xor
xor
cmp
mov
and
mov
push
jnp
xchg
jbe
or
sub
scas
xchg
test
pop
cmpsl
sahf
push
pushf
out
fidivs
xor
sbb
inc
inc
xchg
push
les
xor
mov
cmpsl
pusha
cli
popa
mov
xchg
mov
mov
push
push
test
lret
ljmp
in
sbb
sbb
cmp
daa
push
popf
mov
shll
pushf
ret
jge
mov
bound
mov
inc
sbb
pop
pop
stc
mov
mov
or
mov
stos
sbb
hlt
fs
jmp
push
jb
enter
leave
ds
shlb
mov
jle
sti
insl
jge
scas
test
mov
sub
inc
jne
das
mov
aaa
cwtl
insl
divl
movsl
outsl
jl
call
fildll
jne
sbb
adc
jp
pop
xor
dec
out
sub
ja
iret
stc
flds
or
inc
popf
cmpsb
sbb
jb
cmpsl
or
and
jecxz
xlat
shrb
sbb
pop
loopne
hlt
xor
ret
mov
daa
cmpsl
ljmp
je
leave
lods
mov
mov
stos
or
in
aas
ja
xchg
mov
and
stos
sbb
and
out
aad
int
outsb
or
pop
mov
sbb
nop
std
fadd
out
jle
xchg
mov
push
mov
stos
jno
push
mov
cmpsl
and
pop
scas
cmp
lods
mov
sub
cld
push
mov
jne
xor
mov
lods
fbld
insl
dec
daa
es
jne
jo
sbb
mov
push
dec
cmp
jge
gs
pop
shll
xchg
inc
xor
sbb
sub
test
repnz
lret
pushf
and
lods
xor
pop
sbb
mov
cmp
sub
shll
fcmovb
lea
jnp
mov
push
xorb
push
sbb
bound
mov
rorl
cmp
or
inc
dec
cmp
xor
lahf
push
mov
push
lock
gs
jbe
mov
leave
in
mov
sub
mov
jbe
sbbb
mov
and
les
out
icebp
stos
cmpsl
repz
insl
mov
pop
neg
in
xor
xor
inc
dec
and
cli
mov
fs
sti
movsb
pop
jl
dec
xchg
fisttps
and
inc
mov
mov
mov
movsb
jae
push
ret
mov
adc
loope
dec
sbb
cmp
jmp
adc
sahf
aad
dec
jle
lret
jne
iret
frstor
or
xchg
es
arpl
jmp
xchg
popf
lods
and
or
jns
repz
and
adc
cmp
jbe
addl
mov
sub
fs
and
jl
test
or
mov
inc
addr16
imul
popf
sbb
mov
std
lret
sahf
sub
mov
pop
mov
enter
leave
adc
test
xor
mov
jns
int
rclb
dec
mov
jae
scas
int
sbb
mov
sbb
icebp
out
cmp
dec
dec
out
test
sbb
or
ret
jmp
shl
gs
sub
or
in
lea
xor
sub
mov
fwait
adc
fldl
xchg
and
addl
icebp
inc
mov
mov
add
cmp
pop
fildl
lret
jns
repz
cmpsl
adc
xlat
in
inc
fwait
rcl
push
fisubrl
adc
push
enter
and
outsb
ret
out
cmp
mov
xor
mov
adc
loop
adc
fisttpll
je
mov
or
mov
jae
xor
mov
std
je
xchg
or
inc
xchg
mov
ds
adc
iret
mov
cs
outsl
sbb
inc
push
dec
clc
inc
xor
push
in
je
test
cmc
push
out
popa
sub
adc
or
inc
adc
movsl
rorl
sub
or
psubb
mov
mov
daa
sub
lods
clc
and
xchg
nop
adc
add
and
jne
clc
repz
je
xor
dec
bound
pop
lahf
or
imul
movsl
daa
pushf
cmp
xchg
fsts
hlt
mov
cmpsl
popf
xchg
outsb
mov
mov
fisttpll
mov
mov
pcmpgtd
addb
sti
xor
mov
shl
mov
and
add
ja
or
xor
ret
inc
cmp
loopne
xchg
out
xchg
cmp
xchg
mov
test
loop
out
int3
nop
flds
lods
fstps
add
pop
jbe
jnp
jns
jle
dec
rorb
notb
test
adc
popf
enter
add
ret
mov
mov
pop
add
jp
insb
ds
ret
mov
jbe
add
adc
add
pop
fldcw
push
push
fs
fidivrl
dec
mov
and
add
jmp
movl
add
dec
cmp
pop
pop
jg
sbb
test
inc
outsl
add
aaa
xor
ds
loope
clc
pop
jns
cmpsb
push
or
imul
test
sbb
xor
loop
mov
scas
jmp
data16
test
jle
lea
fstpl
or
js
and
jns
ss
and
cmpb
adc
cmp
pop
out
jle
lea
or
cld
mov
shrl
loope
dec
mov
sbb
jl
mov
pop
add
mov
xor
aaa
cmp
xchg
or
mull
push
or
xchg
cmp
jae
fcompl
insl
imul
xor
lret
aas
mov
inc
jne
jmp
sub
xor
adc
cld
jb
pop
cmpsl
fs
lds
jmp
mov
mov
mov
push
cmp
and
in
bndstx
and
jg
jnp
scas
dec
adc
clc
xchg
pushl
inc
iret
insb
outsb
out
fildll
aam
jae
sbb
adc
repnz
mov
jl
mov
jge
gs
jo
or
inc
rorb
and
loop
xlat
dec
mov
ficoms
aas
xor
sbb
inc
jne
pop
mov
lcall
test
inc
sbb
mov
jle
mov
inc
push
pop
fstps
daa
aam
in
cmp
adc
dec
lret
inc
dec
xchg
scas
shl
shlb
fildll
popf
pop
fnstenv
mov
arpl
push
pushf
out
inc
adc
mov
sub
and
xor
loope
lahf
fld
mov
adc
rcrl
test
mov
jns
push
enter
mov
cmc
enter
inc
xchg
sbb
mov
mov
loop
ret
sbb
add
xchg
xor
cmp
orb
cmc
dec
insb
ss
or
aaa
sub
mov
fisubs
sahf
aam
jae
push
or
icebp
sub
js
icebp
sbb
or
call
subl
out
movsl
sub
test
or
pop
jg
stos
cltd
int3
daa
mov
out
daa
es
sub
fdivl
sahf
jo
inc
loop
cs
sahf
or
scas
mov
mov
xor
outsb
and
or
cmp
xchg
stos
xor
fldt
and
xchg
jne
xor
jo
repnz
rcl
add
xor
sub
xchg
cmp
cmp
and
jmp
adc
inc
test
inc
bound
out
into
push
add
arpl
pop
out
sub
imul
mov
dec
inc
push
jp
or
push
mov
mov
dec
leave
scas
mov
popa
or
jno
xchg
sti
stos
xor
mov
adc
data16
xchg
xor
hlt
adc
cmp
jno
outsl
mov
in
xchg
or
sarb
sbb
jge
mov
mov
pop
push
adc
jg
out
inc
mov
imul
ja
lea
insb
cli
in
sbb
data16
or
insl
inc
test
ja
scas
inc
add
in
dec
push
dec
stos
and
dec
lahf
push
add
lock
nop
lahf
jge
sbb
imul
dec
mov
push
pop
outsl
push
and
xchg
or
jne
pop
fcomip
in
jmp
aaa
sti
jno
mulb
push
imul
dec
mov
inc
lret
inc
lret
addr16
js
jne
sub
add
jle
cmpsl
stos
out
rep
je
ffreep
mov
jns
pop
bts
mov
cmp
lods
fstpt
iret
lea
gs
or
aad
hlt
es
jbe
xchg
aad
insb
or
cmp
cmpsb
sub
cmp
std
mov
into
sub
add
rcrl
mov
ds
mov
xchg
mov
out
out
xor
cld
push
loope
aad
sti
js
mov
lea
push
add
xchg
and
stc
sub
push
aaa
jae
loopne
fwait
cltd
out
and
repz
int3
pop
idivb
sub
add
je
rcr
sar
jbe
jns
mov
ret
cmc
mov
pop
sub
bound
mov
lds
iret
adc
add
mov
arpl
mov
dec
test
xorl
and
movsl
dec
cmp
test
out
pop
mov
fsubl
mov
les
pop
dec
fisubrs
cli
and
mov
fs
push
in
sbb
inc
pop
out
mov
orl
stos
mov
mov
insb
cli
movsl
cmc
fs
das
ret
repz
add
xchg
shlb
negb
sub
in
mulb
cmp
mov
jns
aas
test
out
push
ljmp
adc
push
call
push
cltd
mov
repz
mov
inc
cld
or
insb
out
mov
push
mov
test
les
fs
lock
inc
mov
pushf
push
popf
mov
or
mov
or
pop
int3
and
push
pop
mov
or
or
xor
jmp
repnz
adc
int3
jb
cmpsl
push
mov
test
mov
add
lods
daa
mov
mov
mov
repz
mov
aaa
je
push
sbb
bound
lcall
subl
add
mov
rcrb
jns
mov
test
inc
ficoms
push
lea
xchg
lret
scas
inc
repz
or
sbb
and
std
fsub
dec
jb
inc
scas
cld
cld
inc
push
or
pop
aaa
stc
xchg
jae
data16
out
mov
imul
jg
cwtl
test
sahf
jo
scas
xchg
push
mov
divl
add
mov
dec
and
fildll
pop
xchg
stc
pop
test
pop
jns
lods
rorl
cli
aam
ret
inc
shrl
inc
out
mov
lcall
roll
adc
pop
ror
hlt
fcoms
pop
movsl
pop
dec
loopne
sub
sub
mov
mov
jbe
and
mov
stc
roll
pushf
jb
les
outsl
les
and
insb
dec
int
insl
insb
ljmp
mov
and
pop
repz
movb
mov
leave
cmp
xchg
rolb
rolb
das
lods
push
data16
fcmovnb
xor
out
fwait
mov
sub
lods
dec
fdivr
repz
mov
jmp
leave
inc
push
sub
bound
imul
into
fmull
out
xor
scas
sbb
xor
imul
icebp
jb
xor
pop
push
sbb
sub
cltd
imul
pop
mov
lcall
inc
xchg
je
into
and
fistpl
jle
test
ss
xchg
mov
inc
pop
leave
mov
fnstcw
stos
ret
aaa
nop
adc
insl
orl
sbb
rcll
and
test
push
push
sub
lock
sbb
cmp
aaa
cmp
mov
pushf
mov
jmp
imul
and
fdivs
jg
mov
insb
test
testw
aaa
movsb
jb
lret
xchg
mov
xor
jnp
push
test
mov
and
sub
out
xchg
or
xor
jge
push
inc
jl
fxch
dec
inc
push
jl
inc
int
push
xlat
je
and
sub
stos
ffreep
movsl
add
jle
enter
repz
lea
adc
and
xor
mov
mov
mov
fildll
push
pop
xchg
mov
xor
mov
mov
xor
sbb
das
cmpsb
hlt
ret
dec
jmp
mov
sub
test
sarl
inc
jne
movsl
dec
and
ret
sbb
adcb
adc
or
movzbl
adc
icebp
mov
xchg
fsubl
pop
aas
push
inc
mov
inc
lods
popl
jmp
pop
jmp
mov
mov
lcall
jl
and
push
and
pusha
or
icebp
sarb
pop
flds
cwtl
test
in
aaa
rclb
jne
cmpsb
icebp
xor
mov
pop
xchg
mov
and
dec
sbb
nop
cmp
cmp
arpl
shrl
popf
sti
rcll
rcl
sti
gs
cmpsl
cltd
dec
cltd
out
repz
sbb
scas
enter
inc
sub
int3
push
pusha
xor
cmp
add
addr16
push
push
xchg
jbe,pt
dec
xchg
pop
xlat
data16
aam
out
add
push
adc
sub
mov
popf
scas
leave
nop
cltd
pop
cmc
lods
lods
dec
daa
jno
sub
out
inc
jle
in
xor
mov
fdivs
shlb
sub
cwtl
pusha
jne
popf
push
fwait
mov
es
push
jmp
jo
in
aaa
dec
push
push
aas
mov
dec
and
xor
jne
xor
hlt
xchg
cli
fiadds
cmp
fs
cld
or
gs
mov
outsb
int
ror
aad
sbb
lcall
jle
loopne
dec
xchg
sbb
fbstp
push
jmp
shl
das
pop
bound
pop
xchg
and
repnz
lods
jmp
or
inc
push
iret
push
ret
mov
add
xchg
mov
jle
push
jecxz
pop
std
or
lahf
pop
arpl
repnz
mov
daa
loopne
test
sbb
lods
dec
adc
cli
xchg
lretw
cli
or
pop
leave
das
scas
lret
lock
out
add
iret
xorl
mov
repnz
stc
pop
sub
add
fisubrs
out
aam
mov
pop
sbb
dec
mov
cmp
movsb
xlat
cmp
fmuls
inc
and
ja
and
sbb
rolb
insb
xor
pusha
in
ljmp
pop
in
lea
jp
mov
popa
lret
fiadds
ds
js
shll
fcompl
inc
and
rcrb
icebp
xor
cmpsl
loope
sub
pop
pushf
jbe
loopne
loope
mov
out
aad
dec
pop
imul
inc
std
mov
enter
push
mov
leave
jb
cmp
arpl
mov
mov
sbbb
xchg
add
mov
test
sbb
add
inc
outsl
add
icebp
ret
iret
fldt
push
inc
jne
push
adcb
cmp
out
and
cmp
push
cmpsl
sbb
fmuls
dec
xchg
pop
lods
movsb
sub
sahf
inc
fwait
sbb
inc
add
aaa
gs
insl
into
dec
es
sbbl
sbb
sub
test
ret
cwtl
cwtl
push
fdivs
fsts
lahf
scas
stos
stos
sahf
mov
jno
mov
out
sub
sbb
push
mov
std
pop
mov
in
call
mov
push
gs
push
xchg
scas
dec
mov
mov
arpl
in
invd
sub
jno
leave
xlat
inc
popf
inc
movsb
hlt
addr16
jno
cld
into
imul
mov
inc
and
xchg
adc
enter
push
mov
je
inc
lds
pusha
fsubr
cld
fsubp
push
lea
test
ret
insb
pusha
pop
sub
and
mov
movsl
inc
jae
xor
sbb
push
dec
fs
idivb
je
sarb
fidivs
and
sbb
jmp
and
ljmp
xorb
scas
ds
int3
daa
add
push
cwtl
into
xchg
pushf
inc
dec
dec
or
movsl
les
sbb
lods
xchg
cmp
lds
pop
mov
mov
cmp
xor
sbb
xor
vmovdqa
aad
in
addr16
mov
les
mov
inc
fs
pop
cltd
push
fistps
rcll
xor
mov
cld
sbb
bound
mov
adc
mov
jp
adc
shrb
adc
push
dec
repz
add
mov
test
inc
das
jp
fisubl
adc
or
push
shlb
push
pop
push
stos
mov
adc
aas
sub
mov
push
sbb
mov
popa
in
and
pushf
insl
dec
jle
xchg
or
cmc
lods
test
xchg
rcl
sub
pop
jmp
and
dec
shrl
aaa
mov
jns
xchg
mov
push
test
xchg
enter
ja
mov
jo
decb
leave
or
lret
out
and
adc
push
pop
lret
nop
cli
and
sub
stc
pop
sub
imul
lret
sbb
rep
mov
cltd
fadd
outsb
cmp
xor
cli
outsb
fs
gs
es
out
jmp
mov
vpunpcklqdq
sahf
or
mov
push
jl
adc
mov
lret
mov
and
push
xor
inc
test
std
push
out
xor
jb
push
popa
ss
insl
stc
push
andb
mov
cltd
or
ss
and
jo
xchg
xchg
insb
sub
roll
mov
jecxz
dec
mov
into
out
mov
lret
cmp
inc
pop
popf
push
mov
push
jle
jne
jno
xlat
lcall
int3
or
inc
mov
and
jp
dec
push
aas
sbb
test
dec
stos
ljmp
loope
das
ljmp
imul
mov
into
xchg
insl
rcll
gs
mov
adc
mov
out
xchg
mov
and
sbb
movsl
jo
jno
pop
aaa
in
test
jbe
jae
enter
jmp
pop
sbb
jb
xchg
ljmp
nop
mov
mov
cld
int3
sub
das
in
mov
adc
mov
inc
fcmovnu
jns
push
pop
or
mov
lods
push
mov
cmp
push
push
outsl
in
cmp
imul
rclb
sarl
insl
xchg
jge
adc
scas
dec
adc
je
pop
sahf
aam
add
incb
aas
loope
xlat
sub
pop
sbb
daa
pmaxub
out
sbb
into
inc
pusha
stc
jle
jae
sbb
sbb
add
in
pusha
pop
leave
jle
arpl
andl
push
mov
sub
jp
jge
test
mov
imul
cmp
rorb
mov
lret
and
pop
orb
pop
dec
rcll
rep
test
rorl
aas
adc
push
je
adc
push
out
pop
inc
lock
js
pop
and
sub
dec
rolb
clc
mov
jmp
into
add
cmp
mov
sahf
mov
notl
das
shll
neg
inc
dec
cmp
dec
xchg
or
jb
ret
push
dec
inc
jae
pop
sbb
ret
xchg
insl
movsl
je
ret
dec
andl
sbb
mov
in
sahf
push
add
or
out
mov
pop
in
push
inc
dec
loopne
push
dec
jbe
xchg
and
mov
ret
or
xor
cmp
mov
cmpsl
clc
pop
into
dec
fcmovne
aad
mov
jg
sbb
psubq
pop
lds
repz
in
mov
fwait
out
ds
inc
negl
lcall
lahf
push
mov
ficomps
push
sbb
shrb
popl
scas
inc
mov
rolb
movsb
inc
inc
mov
xchg
int3
sub
dec
lods
xchg
outsb
lods
popf
pop
rcll
push
testl
cmc
push
stc
inc
pop
push
sti
bound
ds
in
xchg
mov
and
hlt
push
int3
mov
call
pop
jmp
clc
stos
cli
jge
mov
push
xlat
icebp
cmp
mov
rcl
sub
ds
fnstcw
inc
ja
pop
dec
pop
mov
outsb
ljmp
scas
daa
xlat
or
pop
jbe
cmpsb
js
or
fcomps
pusha
imull
lds
movb
test
pop
cs
dec
xchg
jnp
lret
incl
lods
fsub
nop
mov
in
or
lret
arpl
push
jb
dec
mov
je
stc
jo
stc
or
into
lods
ja
fcmovnbe
pusha
sub
sahf
mov
and
shl
test
lods
jo
xchg
movsb
sti
lret
cmp
jb
cs
xor
aam
and
dec
stos
push
mov
add
movb
sbb
push
movsl
add
and
push
and
sub
ljmp
je
xor
lahf
rorb
stos
xor
repz
xchg
fs
inc
loop
ljmp
mov
iret
out
cmpb
gs
dec
pop
mov
and
enter
jbe
sub
inc
popf
mov
aaa
lds
les
mov
xor
mov
xrelease
pop
fnclex
cmp
mov
xor
add
mov
test
pop
xchg
imul
jae
cs
jg
inc
adc
cmp
sbb
jmp
add
jge
cwtl
test
inc
sub
fdivl
push
cmp
mov
mov
or
or
mov
dec
scas
dec
and
add
cld
xchg
jle
iret
out
sub
pop
cs
sub
rorb
mov
mov
ljmp
jecxz
mov
jmp
fbld
int
pop
test
inc
cmp
mov
xchg
sbb
roll
xor
minps
mov
aad
scas
hlt
ljmp
xchg
sub
je
jno
aam
jns
sbb
pop
lods
mov
shll
pop
xchg
sub
cli
and
adc
jnp
sub
pop
or
inc
push
mov
dec
sub
fisttps
das
xor
sub
addr16
add
jecxz
fisttpl
popa
enter
out
cld
outsl
cmp
pop
aaa
sbb
repnz
push
mov
sti
adc
outsl
adc
cs
outsl
test
jo
rcrl
cli
les
jnp
mov
popf
rcrb
lods
popw
dec
or
pop
xchg
push
mull
stos
xchg
call
aaa
in
xor
lock
mov
jp
mov
push
das
push
cli
pop
stc
loope
cmpsb
dec
add
in
xchg
adc
aam
mov
shll
testl
inc
or
jae
adc
test
or
and
test
lcall
fs
fcompl
push
jle
xlat
jmp
xchg
es
inc
cmp
push
je
movsl
loop
add
stos
lahf
jmp
pushf
mov
pop
imul
push
pop
mov
pop
pop
jno
sarb
fisttpll
pusha
xchg
es
shll
mov
inc
loope
jbe
mov
xlat
scas
rorb
aaa
jmp
add
or
inc
lret
mov
jge
xor
mov
fiadds
es
fmuls
ror
fcoml
sbb
leave
push
jg
jns
call
mov
or
cmp
xor
add
xchg
jmp
or
flds
inc
test
stos
rcrb
pop
mov
xlat
xchg
mov
inc
pop
pushf
pop
dec
daa
push
jb
xchg
sbb
mov
arpl
neg
inc
addr16
and
mov
and
dec
inc
adc
ljmp
lock
ret
inc
fcoms
pop
out
add
out
ret
jge
pop
inc
fsub
pop
jg
cmp
addb
lds
sbb
rolb
mov
xchg
jns
push
mov
xor
jne
icebp
xchg
std
and
int3
inc
into
pmulhuw
xlat
mov
mov
cmp
or
and
or
fisttpl
or
cmpsl
xor
sub
sti
pop
roll
clc
push
add
into
xor
mov
jl
inc
add
lods
cld
dec
popf
jmp
cmp
nop
out
or
mov
dec
notb
addr16
mov
or
xchg
lock
imul
push
outsl
mov
xchg
add
or
addr16
fsts
cmovae
leave
and
in
out
loop
pop
fildll
enter
add
lods
lea
and
into
fcmovu
jmp
repnz
fwait
sub
push
outsl
scas
loop
test
mov
xchg
test
inc
movsl
adc
fimuls
push
xchg
cmpsl
fnstsw
or
or
in
mov
jge
test
mov
scas
shll
adc
dec
mul
jecxz
leave
fcmovnb
xchg
inc
loope
out
lds
sub
negb
imul
mov
xchg
push
push
fadd
jmp
or
pop
pusha
int3
loopne
push
sub
mov
scas
adc
pop
cmp
sub
repz
pop
mov
outsl
mov
test
fildll
xor
outsb
lahf
and
in
fs
xchg
mov
mov
sbb
jecxz
ss
add
aad
fsubrl
fwait
mov
out
mov
scas
in
inc
xchg
dec
mov
bound
cmp
cltd
pop
push
mov
mov
fcoms
xchg
sbb
fwait
push
add
sub
js
test
mov
cmp
inc
add
ret
and
push
pop
cmpsl
iret
ds
imul
iret
sti
cmp
pop
cmpsb
jae
pop
std
dec
aas
add
dec
fdivs
fistpl
cmpsl
xchg
pushf
fwait
cs
lea
cs
cmpb
stc
mov
cmp
adc
loop
shll
out
push
adc
adc
or
mov
cltd
lods
fists
sub
cmp
cltd
xor
imul
nop
hlt
sub
rcrl
insl
imul
xlat
mov
dec
jecxz
xchg
or
gs
pop
mov
outsl
int
stos
sbb
cmpsl
sub
mov
and
xchg
loop
mov
push
stc
fsubl
add
mov
jle
pop
stos
leave
pop
jns
rclb
sub
orb
mov
outsb
rorl
pop
cmc
mov
adc
mov
push
mov
xor
pop
sub
in
cmp
test
xchg
mov
sarb
inc
inc
fmull
push
das
or
sti
mov
xor
mov
add
or
sub
cmp
or
daa
fiaddl
inc
xchg
sbb
scas
jge
mov
mov
lods
mov
scas
sbb
push
or
negl
xor
fsts
std
dec
popa
repnz
fmull
insb
cli
mov
jo
xchg
jns
cmp
inc
in
push
icebp
ja
nop
cmp
ljmp
push
fmull
repnz
mov
add
sbb
leave
int3
push
dec
lret
xlat
jae
xlat
mov
in
sub
mov
mov
je
scas
inc
or
mov
or
mov
lock
pop
mov
dec
addb
pop
cld
cmpsb
add
or
iret
push
hlt
mov
and
ljmp
push
push
dec
arpl
mov
add
cmp
js
pop
inc
test
loope
mov
in
xchg
or
int
pop
xor
xor
std
fisttps
cmp
fidivrl
dec
push
xchg
sub
call
lds
repnz
jp
js
jb
jle
jp
icebp
out
mov
jae
das
or
and
xchg
push
call
or
leave
and
and
arpl
xor
mov
rcr
dec
cltd
or
lds
inc
ss
shll
and
lods
test
ds
mov
leave
pop
fmuls
mov
insb
push
stos
xchg
mov
push
icebp
lcall
cmp
or
jg
js
pop
xor
sub
nop
js
mov
jns
adc
out
addl
cmpsb
subb
addr16
jp
aaa
push
sahf
das
inc
ja
cmp
not
jmp
cmpsl
sahf
pop
add
pop
sbbb
adc
xor
shll
fcmove
push
into
movsl
fsubrp
ret
ljmp
mov
adc
inc
lahf
dec
jnp
adcb
ja
adc
add
lret
popa
movsl
jp
jecxz
jp
shlb
les
add
int
mov
test
cmpsb
movsb
jg
dec
fistl
mov
enter
int3
mov
sbb
sti
add
stos
mov
lahf
sub
cltd
aaa
xor
sub
fstps
xchg
sub
mov
mov
or
dec
push
jo
jl
jbe
adc
dec
ficompl
in
mov
sbb
lahf
pop
dec
push
push
inc
cs
pop
adc
fcompl
inc
faddl
jae
cmp
gs
aam
popa
mov
ret
cli
fadds
add
aad
pop
xchg
or
adc
mov
lods
addr16
push
arpl
das
adc
popf
mov
daa
out
pop
out
jns
and
fstpt
ficomps
pop
dec
dec
movsb
lcall
cli
in
sbb
fld
ret
lret
std
cmpsl
jmp
push
add
rorb
scas
mov
adc
popa
adc
push
mov
inc
out
dec
fs
jno
xchg
aad
fwait
jo
in
popa
fwait
push
adc
in
jmp
pop
es
jg
push
sbb
mov
mov
push
lcallw
sbb
inc
fildll
push
repz
lock
fidivrs
dec
xchg
xlat
faddl
cmp
leave
mov
das
pop
sbb
popf
fs
imul
pop
fwait
pop
push
icebp
lahf
repnz
sbb
push
pop
aas
test
out
inc
or
push
fs
in
sub
and
pop
ret
lret
sub
add
or
int3
dec
sbb
pop
cwtl
pop
or
cmp
std
jbe
nop
push
jne
mov
push
out
add
lret
pop
add
pushf
jnp
test
sub
cld
mov
sub
and
sbb
into
aas
add
adc
jbe
cmp
jl
clc
cmpsl
lea
jle
leave
add
data16
mov
ret
test
repnz
mov
sbb
mov
cmpsl
fld
mov
pop
sub
imul
in
adcl
les
or
cmp
pop
mov
mov
int
call
sub
shrb
daa
sbb
sti
or
test
jmp
mov
arpl
xchg
mov
dec
sub
cmp
les
jno
dec
enter
das
inc
pop
xor
push
fs
cld
jmp
mov
fmuls
aad
sub
ds
jmp
das
mov
test
mov
xchg
inc
pushf
outsb
sahf
jbe
lahf
mov
pop
xchg
pop
mov
cmp
jmp
sbb
popa
inc
test
fstps
push
test
leave
add
shl
xor
sub
xor
mov
sahf
lret
dec
insl
test
push
imul
xchg
and
sbb
add
push
add
arpl
test
iret
push
pop
stos
addr16
ficoms
sub
cmp
jle
test
add
adc
inc
sbb
repnz
xlat
int3
mov
pushf
jl
cmp
ret
fmull
fs
xor
enter
adc
test
loopne
mov
popf
inc
inc
mov
sbb
lret
mov
loope
mov
mov
movsb
out
inc
in
sbb
scas
mov
imul
push
adc
pop
outsb
repnz
in
add
dec
or
sub
jo
imul
outsl
jg
stos
or
test
jp
dec
push
cmp
xchg
inc
ret
mov
xor
cmp
mov
inc
pop
sbb
outsb
out
aaa
scas
cmpsl
icebp
rclb
insb
outsl
dec
stc
pop
sbbb
in
pop
arpl
shr
lods
fisttpl
scas
dec
pusha
enter
idivl
jmp
mov
mov
cmp
push
jmp
or
mov
sbb
scas
cmc
push
fadds
rcrb
push
cmp
and
adc
mov
and
mov
jb
sbb
jecxz
lods
adc
lods
push
stos
in
xor
push
arpl
sub
and
sbb
in
or
scas
sahf
mov
or
scas
in
data16
aam
out
push
repz
popa
and
loopne
jno
xor
pop
xlat
or
mov
orb
cmp
outsl
imul
jl
loop
cmp
push
inc
cli
push
add
xchg
pusha
and
push
icebp
sbb
pop
xchg
sbb
push
jge
rol
lods
xchg
inc
adc
xor
mov
test
mov
repz
and
jge
in
lcall
xchg
add
inc
inc
cwtl
xchg
jns
fistps
xor
mov
pop
xchg
out
iret
push
xchg
popf
outsb
jne
or
cmp
jne
xchg
xor
xor
sub
jno
dec
repz
jns
inc
mov
push
or
and
xchg
outsb
cmp
inc
mov
mov
inc
pop
sub
xchg
repnz
xchg
cltd
mov
pop
pop
jb
mov
lahf
add
sub
push
adc
ficomps
mov
cmc
pop
daa
sub
add
inc
push
jle
stos
xor
and
sbb
nop
fst
jae
clc
dec
add
aam
aad
jge
lods
mov
lcall
mov
adcb
hlt
lods
push
cmpsb
les
rorb
dec
mov
xor
jnp
lds
ss
cmp
ss
mov
xchg
sahf
leave
fisttpll
imul
cmpsb
ret
adc
imul
dec
subl
or
icebp
dec
movsl
mov
dec
ja
jnp
xor
sub
icebp
xor
dec
outsl
sub
or
sub
jns
ds
adc
lds
outsl
repz
jg
scas
aam
popf
xchg
daa
dec
mov
mov
mov
repz
scas
sub
xlat
xchg
icebp
jne
in
out
aaa
mov
cmp
lock
xchg
pushf
mov
inc
divl
mov
hlt
push
call
push
fbld
add
mov
pusha
sbb
or
dec
stos
cmp
xlat
inc
dec
mov
adc
mov
lcall
outsl
call
clc
jmp
cwtl
repz
push
jns
fmuls
ds
dec
movb
mov
leave
hlt
sahf
sarl
push
cwtl
inc
out
das
inc
sub
ja
test
mov
icebp
jo
cmpsb
mov
push
pusha
in
popf
sbbl
sti
cmp
inc
and
add
or
fs
add
clc
fildl
add
repz
int
inc
pop
sbb
popf
in
fwait
push
pop
cmp
and
push
inc
scas
ret
and
mov
insb
pop
inc
add
ss
sub
lock
xchg
das
test
lret
xchg
mov
aam
pop
add
add
jge
sub
lods
inc
je
loop
hlt
jl
scas
mov
xor
inc
orb
jge
jb
mov
or
inc
dec
mov
mov
sbb
lahf
and
or
push
xchg
inc
out
sub
mov
ficoml
subl
dec
mov
rcrb
lahf
cmp
pop
jbe
dec
sub
push
movsb
and
jo
jmp
adc
popa
cmc
lds
push
mov
fprem
push
mov
fwait
enter
xorb
inc
mov
xchg
sbb
mov
repnz
mov
lahf
mov
push
imul
jmp
xor
or
stos
xchg
icebp
stos
mov
mov
jl
lea
xchg
cmova
aad
mov
arpl
push
dec
js
in
push
fnstsw
mov
rcrl
mov
xor
mov
leave
out
aaa
sub
nop
into
cs
sbb
lock
fbld
dec
mov
push
andl
or
sub
je
shr
push
add
sub
add
pop
popf
or
sahf
pop
mov
cmp
mov
inc
adc
pop
cmp
mov
cmp
data16
push
lea
xchg
mov
cwtl
xor
insl
adc
lret
outsl
xchg
sub
ss
mov
out
xchg
sub
imul
stc
fcoml
sub
gs
adc
cmp
icebp
push
mov
dec
sarl
loop
push
jmp
mov
test
fdivrp
ss
adc
lods
add
popa
jbe
xor
xor
mov
je
jge
sub
ja
mov
fdivr
arpl
jle
cmp
je
add
xchg
loop
orl
jecxz
push
hlt
dec
rorl
outsl
aas
inc
les
int
mov
dec
mov
add
xlat
and
aam
add
pop
fdivl
subl
aad
mov
mov
ret
push
add
or
fimuls
push
call
cwtl
xchg
leave
cmp
hlt
rolb
and
push
sbb
push
je
bound
and
pushf
mov
sbb
test
mov
lds
push
dec
inc
cwtl
add
ljmp
pop
imul
add
in
mov
lret
mov
shlb
jae
mov
jge
mov
aas
mov
stc
pop
std
in
and
shrl
outsl
add
jo
jmp
dec
adc
rcll
or
push
push
hlt
xor
repz
push
jg
ljmp
adc
int3
sbb
adc
mov
pop
inc
xchg
or
in
das
mov
icebp
adc
pop
pop
stos
lds
jl
js
inc
mov
int
xor
icebp
andb
dec
jge
push
jecxz
test
je,pt
push
aad
scas
nop
xor
ret
push
pop
adc
outsl
mov
enter
leave
out
test
sbb
cs
xor
sub
mull
mov
int
std
loopne
xor
jns
mov
add
sub
xchg
scas
add
mov
xchg
mov
into
jns
lds
cmp
int3
push
adc
jmp
jl
shrb
and
push
fs
jno
orl
ss
in
jo
dec
nop
jl
iret
mov
inc
mov
inc
dec
xchg
adc
inc
mov
adc
and
xchg
test
sub
psllw
cmpb
cmp
pop
ror
adc
ret
add
pop
dec
loop
cmpl
mov
jae
ja
sarb
mov
nop
push
jp
cmp
dec
adc
jbe
sahf
loopne
push
push
add
inc
sub
mov
ss
cld
es
pop
xorb
add
out
push
enter
inc
jbe
scas
imul
mov
outsl
mov
inc
mov
jg
dec
xchg
loopne
mov
mov
pop
cmpsl
push
fs
pop
rcrl
dec
dec
bswap
push
inc
rcl
test
dec
or
loop
mov
push
in
test
adc
lahf
shrb
sub
movsl
sub
sahf
scas
xchg
adc
insl
out
sub
test
or
rclb
or
out
dec
cmp
adc
andb
mov
cmc
jl
cld
fadds
add
mov
or
cli
gs
cld
dec
ror
out
mov
lods
add
icebp
pop
cmovle
insb
sub
imul
cmc
mov
fidivrl
add
fistpl
stos
jae
or
cmovno
stos
ljmp
gs
sahf
lcall
add
or
pop
or
mov
mov
test
mov
mov
cmp
adc
or
lret
test
push
testb
and
cwtl
mov
xor
sti
xor
test
lods
pop
mov
and
sub
outsb
imul
aas
negl
push
int
sub
orb
loopne
push
aam
lcall
aad
jb
out
adc
or
add
mov
out
movsl
dec
lods
mov
orb
sbb
or
movsl
jne
das
ja
sbb
pop
jbe
mov
test
mov
cmp
inc
push
das
dec
sub
dec
mov
sub
and
push
jae
lock
sbb
ljmp
adc
mov
out
jnp
mov
jae
lahf
cmp
sbb
stos
in
mov
jmp
or
xor
cld
pop
sbb
pop
movsl
jmp
adc
loop
lods
ret
inc
mov
push
pop
int3
cmpsl
aam
dec
xchg
fs
push
mov
addr16
jnp
pop
test
pop
fs
rolb
addb
jmp
mov
push
cmp
inc
cs
ljmp
sahf
in
xor
stc
addb
popa
mov
mov
and
ljmp
mov
out
test
out
ret
das
mov
jp
dec
shr
mov
add
insb
out
sbb
mov
jbe
mov
arpl
dec
iret
or
sub
icebp
adc
mov
xchg
sub
sbb
sub
push
jbe
pop
push
nop
and
inc
cmpsb
dec
sbb
lret
jp
xchg
inc
pushf
fcomip
loopne
jge
mov
call
movsb
sub
ljmp
xchg
xor
mov
fdivl
dec
jmp
pop
aas
push
push
mov
aas
pop
sub
movsb
hlt
lcall
mov
in
mov
in
insl
jle
mov
call
rcl
lret
insl
fisttpl
shrl
mov
popf
scas
dec
jg
lahf
stos
or
cwtl
je
nop
stos
andl
adc
ret
inc
cmp
jecxz
adc
outsl
clc
leave
movsb
ror
leave
jno
or
lock
leave
cltd
adc
push
xchg
out
bound
mov
xor
and
sbb
cmp
jnp
dec
shlb
adc
mov
push
into
icebp
push
test
pop
dec
stc
jmp
cmp
adc
mov
andb
add
test
jmp
cs
dec
inc
fdivr
test
push
xchg
out
negb
mov
icebp
xor
dec
push
pop
mov
pop
inc
les
mov
jl
push
jecxz
cli
lods
test
mov
mov
cmp
mov
bound
add
dec
in
push
cmpsl
sbb
sub
push
jo
test
aad
jp
sub
rorl
lock
and
cmp
lahf
jmp
rcrb
test
or
movsb
aam
daa
dec
mov
addr16
mov
inc
test
sbb
sar
bound
xor
std
out
add
subb
jae
lods
xchg
mov
test
idivb
fwait
cmp
pop
cs
sti
xchg
inc
jno
jge
or
and
je
push
inc
jne
pop
es
aam
lret
push
pushf
sub
ficomps
xchg
xchg
jb
mov
jle
lea
push
mov
jl
hlt
xor
jne
adc
add
mov
lods
movsl
pop
mov
cmp
fcompl
rol
pop
pop
aam
lcall
push
push
add
pusha
dec
mov
test
push
gs
cmp
aam
fimuls
and
popa
addr16
sarb
fiadds
push
xchg
aam
lret
cmpsl
adc
aam
add
xor
mov
dec
cwtl
cmp
and
dec
inc
rclb
push
push
sbb
adc
lret
daa
jmp
test
test
and
mov
dec
push
imull
sahf
rcll
movl
data16
daa
fnstenv
fcompl
stos
iret
in
mull
hlt
in
out
push
sahf
mov
iret
fdivrs
xor
inc
mov
pop
mov
adc
jl
jb
xor
push
jmp
ret
sub
out
test
or
mov
cmp
insb
xchg
jno
pushl
rorl
or
lret
xor
push
sub
jg
pop
adc
fmul
out
mov
and
adc
pushf
rorb
data16
dec
inc
hlt
dec
sub
fcmovb
clc
dec
sub
les
sub
cmp
rcrl
dec
xor
cmpl
cmpsl
and
es
xchg
pop
imul
adc
fnstcw
xchg
fildll
mov
jge
mov
inc
in
sub
mov
xchg
mov
sub
aas
int3
hlt
mov
shlb
pusha
pop
cli
sub
cmpsl
call
jg
lret
inc
sti
inc
jbe
scas
mov
mov
pop
dec
or
pop
pusha
addb
aam
pop
mov
mov
lret
cli
cmp
pop
jo
sub
mov
iret
leave
xchg
inc
sbb
xor
or
sub
das
and
inc
sbb
dec
mov
xlat
stos
push
jnp
aas
lods
leave
mov
fs
xchg
add
inc
sbb
dec
pop
iret
hlt
jb
daa
mov
cld
in
mov
jecxz
mov
imulb
shl
pop
test
push
lret
sub
mov
ss
ficomps
iret
dec
push
test
sub
inc
jg
mov
mov
aaa
inc
mov
push
das
idivb
inc
adcl
test
pop
or
test
xchg
shlb
mov
out
testl
pop
adc
cmc
aaa
fucomip
movsb
inc
push
jg
sbbl
xor
arpl
push
xor
xchg
jge
arpl
out
test
inc
and
or
das
dec
stc
aam
fdivl
fs
mov
sub
cld
xchg
fdivp
shrl
lods
inc
cmpl
jp
into
jno
ret
mov
orb
sbb
xchg
inc
mov
or
dec
sub
xor
mov
sbb
cmc
pop
mov
mov
icebp
data16
xchg
xchg
shll
dec
test
fistps
xchg
jnp
inc
jnp
and
frstor
add
xchg
ljmp
int
test
shl
sahf
mov
pop
dec
push
aas
mov
pop
insl
or
dec
mov
dec
in
mov
xchg
sub
sbb
outsl
ret
cld
stc
xor
mov
mov
das
xor
stos
pushfw
fldt
add
das
rcr
pop
pop
ss
xor
enter
outsb
jle,pt
outsl
cmp
jle
je
inc
ficompl
das
aas
test
adc
mov
mov
dec
int3
aaa
xchg
inc
or
mov
adc
xchg
push
cmp
xchg
jb
lods
shll
mov
adc
jl
xchg
dec
fidivs
mov
pop
add
movsl
iret
rcrb
pop
aad
and
push
add
mov
pop
insb
gs
cs
lea
je
pop
lret
inc
cmp
pop
sub
add
into
fcmovnu
xchg
cmp
add
and
out
imul
jmp
lds
mov
scas
and
stos
shll
dec
adc
inc
cmpsb
fs
in
sbb
adc
inc
dec
push
adc
mov
xchg
mov
ror
fidivrs
dec
lret
popa
adc
fcompl
push
jg
iret
pushf
cmp
or
sti
dec
stos
verw
push
rcl
push
test
push
andb
iret
repz
jge
subl
sbb
stos
je
das
shl
xchg
cmp
dec
cmp
cwtl
pusha
sahf
mov
add
imul
test
rcll
pop
mov
pop
test
add
je
xchg
ljmp
movsl
fisttpll
sub
gs
dec
icebp
fsubrs
sub
mov
jg
out
gs
ds
outsl
mov
sub
outsl
inc
dec
hlt
add
mov
mov
inc
dec
into
icebp
push
mov
loopne
fcmovu
cmp
dec
add
mov
ret
sub
jbe
mov
jns
ja
xchg
pop
test
ljmp
iret
mov
lods
aam
xchg
es
xor
push
shll
sbb
pushw
push
adc
add
jne
out
frstor
lods
dec
xlat
ret
cmp
push
incl
rcr
data16
pop
pop
push
mov
lahf
mov
cmp
in
push
lret
jge
mov
nop
push
sbb
push
add
addb
inc
scas
dec
mov
ds
or
mov
daa
dec
sbb
arpl
cmp
lret
lret
loope
loope
cmpsl
cmpb
push
jp
fwait
push
cmp
fucom
or
ficomps
addl
pop
jp
lods
arpl
aas
lret
cltd
and
sub
push
aas
lahf
jns
imul
insb
cwtl
loope
dec
pop
negl
repz
sbb
or
aas
or
cmp
inc
inc
popa
mov
jnp
mov
outsb
xchg
repz
push
daa
pusha
sar
push
stos
push
cmp
mov
adc
add
les
jns
pop
add
dec
shll
nop
dec
push
adc
sub
or
in
negb
iret
add
jae
fdivl
xchg
enter
cmp
test
mov
jb
sbb
dec
icebp
sub
push
nop
cli
and
stos
ret
lahf
roll
add
dec
add
add
cmp
stos
movsl
or
pop
scas
push
orb
cs
xor
icebp
xchg
subl
cmpb
and
inc
sub
or
cmp
jecxz,pn
dec
lods
sbb
cmp
mov
mov
out
addr16
push
das
gs
jp
jnp
inc
shl
mov
rorl
sbb
sub
xor
xchg
das
ljmp
add
cmpsb
fistpll
adc
xor
xchg
mov
iret
push
lret
repnz
xlat
fs
mov
xlat
lret
and
and
fcmovbe
sbb
mov
jl
xchg
out
fsubs
jl
fcmovb
cmp
xlat
sub
inc
cmc
test
jle
or
xorl
sti
test
loopne
test
je
loope
out
inc
push
test
jae
xor
jno
cmp
dec
leave
in
loopne
cmp
test
mov
inc
outsb
xor
push
add
ds
mov
xor
pusha
lea
or
fcmovne
sub
xchg
sbb
inc
shll
jecxz
out
push
xor
insl
dec
in
fdivp
push
xor
cmp
imul
fnsave
cli
xchg
sahf
mov
int
adc
jecxz
xchg
push
sbb
and
scas
icebp
mov
lods
ja
inc
aas
cmp
aam
jecxz
xor
xchg
push
or
sub
adc
sub
pop
mov
repz
jbe
push
lock
mov
pop
rolb
adc
cmp
xchg
and
and
sbb
out
das
adc
movsl
sub
add
fwait
xchg
insb
add
push
fst
rcrl
dec
add
jns
xor
dec
cmp
adc
pop
xchg
imul
dec
mov
and
jne
loope
fsubl
and
dec
aam
push
subb
cltd
scas
into
test
leave
sub
sti
xor
ja
xchg
fwait
mov
ljmp
jp
or
sub
inc
pushf
sbb
or
js
cs
lcall
loope
into
mov
mov
jnp
rorl
pusha
popf
out
add
and
mov
fucomip
sahf
in
das
cmpb
daa
xchg
xchg
pcmpeqb
rcrb
ret
or
stos
cltd
fst
rolb
sub
into
loope
ja
ret
add
push
sbb
les
adc
and
lds
xchg
icebp
jl
ljmp
cmp
push
fiaddl
bound
out
lret
out
and
push
shl
mov
hlt
enter
pop
mov
mov
xchg
push
pop
iret
and
ja
insl
movsb
dec
cmp
mov
xchg
mov
dec
sti
inc
and
test
idivb
out
aaa
dec
mov
jne
jbe
cmpsb
lods
gs
mov
mov
cld
pushf
jbe
pop
mov
sbb
lods
and
mov
cs
lds
push
mov
mov
mov
sarl
mov
push
pop
in
std
imul
mov
push
sarb
mov
ja
mov
fmuls
xlat
pop
scas
test
ljmp
xchg
pop
jle
outsl
mov
repz
fs
mov
dec
xchg
push
mov
xchg
cmovs
sbb
enter
pop
std
testl
fisttps
and
push
jno
mov
push
out
sbb
xchg
pop
fldt
xor
lock
mov
mov
pop
ffreep
fisubrs
and
lods
sbb
movsb
push
mov
test
int
subl
mov
mov
lea
cld
sbb
ljmp
ljmp
xor
inc
push
inc
mov
dec
push
mov
push
sbb
push
xchg
fisttps
sbb
jns
or
xchg
out
push
adc
aaa
xchg
loopne
imul
shrl
lea
dec
pop
enter
sbb
test
pop
hlt
mov
jecxz
add
in
mov
test
std
scas
adc
or
decl
stos
pop
sub
andb
andl
lds
push
test
push
in
mov
lahf
pusha
mov
jmp
jg
jl
inc
add
fcmovne
add
test
mov
cmp
lret
fnstenv
sbb
inc
in
test
pop
lods
and
fmull
test
loopne
jp
xchg
pop
cs
mov
and
repz
aam
or
js
and
xchg
xchg
add
mov
xor
dec
push
sbb
cltd
stos
ljmp
dec
scas
xlat
mov
mov
sbb
xor
add
dec
iret
repz
push
mov
inc
test
or
cmp
push
movmskps
push
mov
jecxz
sbb
stos
fildll
stc
xor
jmp
testb
in
push
or
mov
add
inc
xor
lcall
pop
push
push
xchg
gs
push
outsl
scas
movsl
aas
ja
mov
lret
sub
ret
sub
movl
push
repz
xorl
movsl
sbb
mov
out
push
pop
push
insl
jle
and
dec
xchg
or
dec
mov
scas
jg
in
mov
aas
mov
cmp
push
and
or
nop
mov
daa
sti
mov
jns
and
idivl
xor
cmp
fwait
push
adc
jb
sbb
sub
push
pop
int
add
ret
popa
cmp
les
sbb
into
psubsw
fwait
insl
fistl
sub
and
cmpsb
leave
imul
jns
mov
or
shrl
dec
stos
xor
mov
cmc
mov
ja
pop
xchg
xchg
mov
in
fsubl
push
andl
push
mov
aam
adc
inc
xor
cmpsl
mov
sbb
adc
stos
xchg
xor
cld
iret
lods
stos
scas
sbb
pop
xchg
jle
test
pop
mov
shrb
mov
nop
pop
out
pushf
xchg
jo
cltd
mov
test
mov
or
push
outsl
jbe
sub
cli
mov
adc
dec
movsb
lahf
jp
xchg
lcall
js
adc
fwait
pop
pop
cmc
nop
push
sbb
xchg
jae
in
pop
pop
outsb
inc
xchg
scas
jo
js
andnps
or
push
movsl
and
test
shrl
aam
xor
push
mov
mov
push
mov
icebp
pusha
push
movsb
pop
adc
push
dec
xchg
push
hlt
mov
mov
pop
jp
jle
mov
jne
stc
add
bound
add
or
nop
lret
neg
nop
mov
insl
out
lods
inc
jo
xlat
cld
jg
popf
push
cmp
ja
push
cmp
and
sub
iret
dec
cmpsb
cmp
mov
repz
add
inc
pop
mov
jge
jnp
inc
mov
incb
mov
aam
jbe
je
mov
test
int3
add
jl
dec
xchg
add
idivb
adc
push
mov
mov
rcr
fisttpl
push
popf
mov
cmp
xorb
shrl
xor
out
push
add
test
sub
sbb
mov
in
jge
jo
adc
testb
arpl
dec
inc
ret
push
pop
call
jns
sbb
or
push
inc
sub
adc
and
push
mov
cmp
xlat
mov
rcrb
icebp
test
xchg
les
sbb
lret
jnp
xchg
daa
mov
xchg
addl
scas
or
push
xchg
lea
lock
xor
mov
mov
out
jle
push
cwtl
imul
pop
shlb
inc
jbe
cmpsl
adc
ljmp
cmp
mov
movsl
lret
jne
icebp
xchg
sub
rolb
stos
pop
pop
imul
push
in
mov
add
stos
dec
in
cmp
ljmp
test
add
push
movsb
dec
stc
icebp
gs
sub
int3
stos
cwtl
aaa
cld
fxch
scas
xchg
arpl
inc
dec
pop
pop
dec
fistpl
test
inc
sbb
movsl
push
ja
sub
repnz
sub
or
ja
call
adc
scas
adc
cmp
add
xchg
fcomi
or
cmp
lret
scas
cmp
dec
jmp
jo
daa
pop
jo
inc
or
push
mov
outsb
stos
pop
in
and
fwait
or
push
outsl
push
pop
call
scas
jne
stos
movsl
lock
into
mov
inc
sbb
pop
xlat
xchg
inc
dec
pop
push
mov
add
rcll
test
cmp
ljmp
into
icebp
pop
jne
mov
jbe
cmp
lcall
xchg
fsubrs
mov
cmpsb
fnstenv
inc
ror
or
push
sti
inc
add
cmc
rorb
notb
mov
jbe
lcall
adc
mov
inc
mov
and
pop
sbb
add
jl
leave
mov
mov
xchg
ja
push
iret
ss
xchg
inc
jg
mov
mov
push
dec
or
lock
jae
aam
orl
cmp
rcr
aaa
insb
fadds
dec
and
jge
outsl
push
clc
xor
std
mov
add
cmp
sub
ret
insl
ja
xor
sbb
sbb
push
pop
jecxz
sbb
inc
lret
idivl
sub
inc
push
and
xchg
mov
push
add
outsb
mov
xlat
das
in
or
lods
sbb
lods
scas
fcompl
lock
mov
sbb
jl
clc
sbb
xor
jl,pn
sbb
das
jp
or
sti
loope
mov
pop
pop
mov
dec
adc
call
adc
cmp
cmp
pop
jae
ss
cmpb
addl
insl
push
clc
push
insb
ss
mov
mov
cmp
jne
adc
daa
mov
push
mov
cmp
jg
imul
or
pop
jle
and
out
jae
outsl
dec
sub
cmpb
mov
out
out
jp
test
cli
inc
mov
imul
jle
arpl
and
xor
subb
push
roll
xchg
inc
je
xor
popa
dec
push
jae
ret
cmp
push
call
movl
xorl
adc
jbe
inc
pop
or
insb
je
sti
cmp
jne
shl
push
incl
je
das
cmp
icebp
inc
leave
pop
mov
and
jns
push
lcall
sub
mov
fists
dec
loope
stos
jge
jge
mov
sahf
call
pop
pop
xlat
pop
jae
fdivl
lds
loopne
fwait
ljmp
inc
ss
xchg
cltd
mov
fadd
mov
pop
call
insl
sbb
add
hlt
cmp
repnz
pop
lods
arpl
cmp
sbb
dec
shlb
inc
fiaddl
mov
imul
and
orl
xor
cmp
xchg
cmp
jp
add
sbb
out
pop
jno
mov
bound
out
pop
xchg
sbb
cmp
or
sbb
cmpsl
cmp
mov
add
out
xchg
data16
test
cmp
movsb
insb
push
shrb
push
jge
loop
cmpsl
cmpsb
test
push
in
and
mov
scas
lods
jb
push
sub
xor
out
add
xor
iret
into
je
loope
mov
pop
loop
shll
and
sub
ret
or
rorb
push
mov
xchg
lock
sti
lea
mov
jne
mov
inc
and
inc
cmp
cmp
inc
dec
out
adc
cli
cli
je
insl
notl
xor
in
mov
pushf
jecxz
or
mov
or
pop
pop
jge
test
and
cmp
insl
cs
rorb
ljmp
push
pop
in
add
push
push
ja
insb
mov
pushw
jbe
adc
sub
sub
push
movsl
jp
insb
mov
stos
xchg
adc
xchg
ja
inc
xchg
in
pop
nop
mov
adc
push
mov
lock
add
into
or
fdivl
cld
mov
or
push
in
lahf
call
xchg
add
pop
lods
in
movsl
movsl
sub
rcrb
jp
lret
xchg
inc
fcomip
mov
sti
pop
cmp
bound
ds
into
jecxz
enter
test
hlt
andb
cmp
jl
inc
cmpsl
sub
dec
fstp
mov
stos
add
test
xor
popa
add
or
rcr
inc
gs
repnz
xchg
mov
ljmp
inc
loopne
scas
lock
dec
sahf
stos
sbb
dec
jg
lea
aad
mov
push
stos
sub
jmp
scas
pop
cmp
in
xlat
test
mov
mov
iret
jp
jo
andl
cmp
frstor
mov
out
jmp
fnstcw
inc
out
lret
push
dec
xchg
jmp
lock
xor
insl
ds
das
arpl
out
dec
and
aas
push
outsb
pop
push
add
test
mov
sarb
and
lea
cs
sub
and
or
xor
mov
push
jb
ds
push
mov
and
mov
popf
sbb
loopne
imul
iretw
cmc
shlb
shll
push
and
pop
sbb
mov
jo
xlat
xchg
dec
cmpb
or
mov
xchg
es
push
mov
loopne
jle
jns
xchg
cmp
mov
mov
push
fs
jbe
out
push
push
sub
movsb
enter
mov
inc
xchg
sub
nop
rcrl
mov
lods
adc
xor
out
cmc
pop
and
dec
inc
mov
xchg
cmp
sub
sub
jnp
ja
sbb
and
xchg
mov
pusha
adc
stos
pop
pop
lods
inc
xor
inc
movsl
fs
inc
mov
mov
lret
test
sbb
jecxz
sub
sub
inc
mov
pop
push
add
sbb
sub
ja
gs
enter
xlat
jae
push
cmp
or
call
sbb
out
fs
insb
inc
aad
pop
stc
pushf
movsb
sti
pop
adc
shrl
sbb
fisubrl
sub
shr
and
mov
or
out
xchg
or
xor
dec
cmp
fdivrl
pusha
mov
test
push
xor
cmpsb
adc
add
orl
mov
mov
cmc
leave
mov
cmc
gs
out
cli
outsb
push
fisttpll
stos
dec
es
mov
dec
leave
lcall
mov
add
fldl
xorb
sahf
mov
int3
gs
fnsave
movsb
push
in
lea
mov
lcall
fwait
aam
stc
or
in
or
mov
fidivrs
or
testb
andb
or
mov
sbb
rolb
ljmp
cmovo
add
push
out
test
addl
sbb
push
inc
dec
mov
dec
push
cmpsl
jne
jmp
xor
repz
jl
xor
xchg
pop
loop
xor
sub
push
rcll
scas
mov
stos
push
je
pusha
xchg
imul
sbb
jae
dec
xchg
nop
jb
aas
jecxz
in
sbb
jne
outsb
in
xchg
push
sarl
pusha
fisubs
je
repz
pop
mov
push
or
xchg
push
inc
mov
sbb
icebp
into
mov
push
mov
mov
pop
test
ret
out
nop
mov
cs
hlt
pop
push
xchg
lcall
lods
mov
mov
sbb
cmp
adc
dec
in
xor
test
sti
mov
mov
aaa
shrb
scas
loop
pop
cmpsl
rcrb
xlat
cs
shr
pusha
scas
pop
cli
add
jnp
dec
in
fdiv
adc
sbbb
pop
mov
mov
jle
and
jle
jecxz,pn
ficomps
xor
stc
xlat
pop
ret
pop
popf
cmp
add
jle
cltd
dec
mov
pop
xor
nop
sub
mov
sbb
push
daa
ss
cmpsb
daa
mov
into
inc
xchg
jb
xor
push
dec
inc
cli
scas
sbbl
loopne
cmp
jp
jbe
insb
xor
push
es
int
xchg
shr
xchg
push
addr16
mov
int3
xchg
out
loope
inc
lock
dec
pop
daa
das
mov
clc
pusha
sbb
cltd
jne
gs
jp
push
cmp
les
cmp
scas
mov
arpl
xor
inc
test
call
cmp
scas
popa
call
addr16
in
lods
jle
or
add
outsb
cmp
lds
adc
cld
call
sti
xchg
ljmp
in
sbbb
js
js
sarl
mov
enter
idivb
mov
adcl
fnsave
fldenv
in
popa
aad
fst
ss
insl
sbb
inc
sbb
fdivl
sbb
pop
or
mov
pop
dec
inc
lahf
cmp
and
and
adc
pop
jbe
mov
cmpb
mov
mov
movsb
dec
in
test
std
in
fwait
push
lahf
pop
popa
jns
arpl
inc
in
jmp
cmp
out
fisttpll
ds
jge
push
ja
imul
jmp
outsb
xor
mov
xor
dec
ret
mov
clc
or
sbb
mov
push
loop
jp
push
cltd
imul
mov
fadds
pop
int3
jge
pop
or
sahf
pop
outsl
mov
sub
and
jns
push
xchg
cld
fdivrs
jnp
out
lock
js
cmp
lahf
dec
push
nop
fsubrs
popf
push
jecxz
cmp
and
test
jg
jp
sbb
ljmp
lods
clc
pop
scas
sbb
mov
ret
data16
jne
fsubl
or
in
jns
cwtl
lahf
lock
pop
loop
mov
mov
mov
adc
in
mov
lods
imul
push
cmp
aaa
inc
push
sub
or
fsubl
inc
mov
jecxz
mov
pop
push
mov
sbb
dec
stos
mov
data16
inc
jmp
in
fisttps
adc
mov
xchg
xor
sub
jl
rorb
mov
mov
cli
scas
inc
out
shld
add
lods
cmp
cld
cld
push
pop
cmp
sub
lcall
fisttps
and
enter
daa
mov
jno
mov
dec
xor
mov
and
sbbl
rcrb
aam
jp
loope
inc
xor
and
mov
repnz
and
sbbb
dec
adc
cs
les
cli
dec
loop
js
xor
bswap
add
fwait
xchg
scas
outsb
adc
inc
mov
xor
mov
lock
xchg
and
fs
inc
mov
and
or
pop
insl
mov
adc
movsb
xchg
test
push
stc
inc
mov
jecxz
pop
add
xchg
adc
data16
cmpb
sbb
mov
inc
aam
jg
mov
inc
jge
mov
ret
sub
mov
mov
jne
and
push
cmp
push
stc
bound
add
mov
mov
or
push
fistpll
cmp
inc
int3
jnp
and
inc
lahf
imul
out
lea
push
fstps
loop
shrl
lods
mov
mov
sbb
dec
mov
xchg
pop
cmp
shrb
mov
ficoms
xchg
push
mov
sub
inc
inc
cmp
jmp
inc
sbb
popa
add
mov
lret
pop
stos
inc
int
sbb
add
push
out
jp
mov
lods
bound
test
inc
mov
push
lds
int
sub
loopne
jmp
jp
and
lret
sbb
insb
push
bound
nop
sub
adc
xchg
mov
outsb
mov
dec
jp
sub
inc
or
mov
test
cwtl
in
mov
inc
add
adc
les
jmp
fisubrs
mov
sub
add
mov
in
push
xchg
jb
push
or
pushf
push
lods
push
fcomi
mov
setle
incb
push
push
xchg
inc
std
loop
hlt
xchg
popf
cmpsb
xchg
mov
fsub
xchg
scas
lret
lods
aad
pushf
mov
lock
test
lcall
lret
cwtl
cmp
fnstsw
sbb
and
push
dec
fsub
xor
sbb
in
test
xchg
leave
sub
xchg
jnp
adc
push
sub
repz
bound
xchg
aad
cmp
xchg
adc
cmpsl
cmp
jne
popa
push
movsb
cltd
movsb
rorl
inc
arpl
dec
adc
mov
pop
outsl
cmc
sbb
dec
inc
insl
adc
sub
push
sub
sub
sub
jp
pop
ljmp
imul
inc
xchg
mov
int3
pop
cmp
xchg
insb
cld
adc
push
xchg
xor
lock
idivb
mov
loope
mov
adc
lcall
repz
cmp
rclb
lea
aad
pusha
push
mov
in
fcoms
mov
dec
sti
dec
int
push
clc
xchg
cmp
js
cmpsb
or
addb
adc
rcrl
loopne
jae
aam
repnz
fiaddl
aas
testl
xchg
ljmp
jecxz
sub
mov
sti
jmp
call
inc
dec
frstor
std
push
lret
mov
lds
cmp
jecxz
test
push
iret
or
loop
dec
dec
mov
xchg
mov
cs
stos
pushf
lret
or
pop
xchg
fcoms
and
inc
mov
lea
sbb
insb
push
out
movsl
ret
test
dec
mov
cli
push
popf
decl
pusha
fisttpll
push
popa
pop
outsb
lock
lcall
fistpll
mov
dec
inc
call
movsb
dec
dec
jae
dec
adc
xchg
pop
mov
sub
xchg
lock
jne
push
fildl
ja
add
fs
ret
movsl
and
cmp
push
dec
outsl
nop
xor
jne
sbb
mov
xchg
movsl
mov
mov
pushf
movsl
and
xor
adc
mov
in
cmpsb
push
in
rorb
xor
pop
lahf
icebp
je
mulb
daa
push
mov
sub
jo
scas
test
push
jg
enter
jae
dec
inc
and
xor
pop
scas
rcr
lcall
les
mov
sub
xchg
test
sub
rcll
std
int
das
iret
cmp
xor
jae
imul
daa
and
in
aad
icebp
hlt
subb
jmp
pusha
lods
iret
ret
sub
mov
jmp
fcmovnu
icebp
fisttps
fs
xlat
les
ja
das
pop
pop
xchg
sbbl
dec
dec
dec
andb
dec
sti
pop
inc
clc
push
sbb
mov
pop
fwait
stc
mov
jo
adc
into
fdivr
imul
push
sub
mov
add
les
sbb
cs
pop
adc
and
push
pop
pop
sub
popa
xorl
lods
push
mov
jmp
ret
rorb
jg
repnz
jae
mov
jno
negl
mov
stos
fnstsw
clc
sub
sub
in
in
loopne
dec
bound
push
push
mov
sarb
stc
dec
orl
cmpb
fisubrs
cmpsl
out
mov
mov
mov
cld
popf
jnp
addr16
cld
jecxz
push
push
pushf
sbb
and
sub
pop
pusha
adc
popa
in
dec
jae
push
sbb
sbb
loope
imul
in
cld
pop
jle
insl
push
jno
loop
imul
rorb
mov
sbb
and
mov
xchg
cwtl
adc
repz
outsb
adc
xlat
call
sbb
jp
xchg
ret
stos
mov
out
push
cmc
mov
outsb
xchg
cli
xor
sub
mov
ror
ja
stos
and
lcall
imul
lahf
inc
pop
push
fsubl
add
sub
imul
ret
mov
in
pusha
je
leave
je
pop
outsl
dec
cmp
sbb
ret
sbb
mov
ljmp
sarb
test
shrl
sbb
scas
push
pop
movsb
jp
stos
scas
cmp
xorb
cmp
xchg
jns
or
and
ss
lret
pop
cmp
jmp
mov
xchg
mov
xor
pushf
jmp
jae
inc
cmpsb
or
sbb
mov
lock
les
inc
dec
mov
or
add
testb
lods
jle
ja
imul
ret
lcall
cli
aas
pop
push
and
iret
cmp
sbb
mov
and
int3
es
gs
in
and
cmp
js
mov
push
push
inc
iret
out
jnp
lret
cli
adc
rclb
xchg
sbb
call
test
sub
cmpsl
xchg
mov
mov
addr16
push
loop
mov
addr16
sbb
dec
inc
cs
jb
pop
push
jmp
in
movsl
insb
inc
stos
jle
je
sbb
shl
lock
xchg
sar
fwait
adcl
and
pop
int
addr16
mov
cmc
pop
add
add
in
lods
je
cmpsl
mov
sub
push
mov
jmp
xchg
test
adc
lcall
inc
and
push
add
and
pop
adc
lret
xchg
pop
lcall
popf
sti
ss
sti
into
sub
xor
loopne
iret
bound
popa
sbb
ds
stos
fldcw
push
adc
dec
add
lea
fucomi
lods
std
fwait
mov
sbbb
xchg
pop
leave
rdpmc
push
xlat
and
orb
in
enter
jo
xchg
pop
repnz
jnp
xor
fwait
add
pop
loopne
adc
mov
dec
xor
aad
gs
xchg
popf
xor
fdivrs
test
add
jnp
sti
or
adc
adcl
mov
dec
xor
push
nop
outsb
jbe
sbb
add
pop
repz
xor
sub
cmp
test
sbb
pop
cwtl
mov
test
ljmp
pop
pushf
sub
sbb
xchg
jns
aam
iret
test
or
mov
outsl
int
push
mov
add
or
pop
sub
lock
cmp
pop
stos
les
dec
scas
mov
jae
mov
xlat
and
dec
push
xchg
mov
outsl
mov
nop
lods
lds
fdivrs
insl
daa
std
xchg
jb
dec
les
sahf
add
inc
xchg
sbb
dec
outsl
testl
jbe
lret
inc
dec
out
es
dec
sub
sbb
sbb
push
repz
push
mov
clc
pop
out
scas
test
mov
pop
cmpsb
hlt
fbstp
inc
mov
out
xchg
loope
pusha
sbb
sbb
jecxz
adc
jecxz
test
xchg
or
out
lock
lret
dec
hlt
push
outsb
cmp
test
mov
xor
in
mov
fcmovne
xchg
pop
xor
cmp
mov
ficoms
xchg
mov
sub
pop
and
jl
pop
pop
pop
clc
push
mov
mov
jecxz
ljmp
push
bound
push
loop
jmp
movsb
lock
jecxz
and
addb
mov
inc
or
rorb
mov
es
dec
or
dec
pop
test
and
cmp
push
adc
jo
mov
fnstsw
ljmp
add
mov
mov
rclb
jo
pop
mov
sbb
dec
pusha
outsl
push
div
and
and
ds
out
in
or
mov
cmc
cmp
movsl
ljmp
sbb
outsb
out
movsl
adc
shrb
aas
xchg
out
imul
xchg
loop
inc
test
mov
lds
out
popf
hlt
rep
in
fsub
and
mov
or
jecxz
ja
or
xor
dec
pushl
xor
iret
and
pop
js
mov
arpl
das
adc
mov
sub
jle
jle
adc
nop
pop
repnz
xor
push
pop
inc
rcrb
dec
push
addr16
cmp
mov
cmpsb
leave
je
jp
dec
imulb
stos
jp
or
loopne
dec
adc
aad
je
pushf
js
out
cmp
dec
jb
lcall
insb
pslld
into
xor
bswap
mov
push
dec
xor
icebp
testb
dec
lea
les
adc
sub
mov
mov
push
dec
jle
les
out
dec
mov
mov
stos
mov
cmp
sbb
andb
and
mov
push
in
push
in
leave
lock
dec
or
sub
sti
bound
dec
xor
es
inc
ret
div
and
and
sub
mov
imul
dec
mov
pop
dec
sub
lcall
addb
and
les
jno
repz
or
sub
mov
hlt
jecxz
daa
data16
adc
mov
rcrl
mov
inc
aam
pop
outsb
push
xor
or
mov
jae
mov
jle
incl
test
loop
inc
xor
movntps
jae
jns
call
or
sbb
xchg
xchg
adc
pop
adc
orb
push
jns
xor
inc
and
in
lods
cmc
fidivrs
mov
lods
mov
ja
pushl
sub
mov
jmp
jl
stos
dec
repnz
add
inc
push
and
out
mov
nop
add
es
inc
pop
rorb
cli
ss
iret
out
push
pop
push
popa
mov
les
mov
test
jns
mov
mov
test
inc
je
ret
cmp
subb
dec
cltd
scas
addb
cmp
fs
xchg
jns
or
loop
xchg
mov
xchg
scas
mov
or
adc
imul
inc
mov
arpl
inc
test
add
cmp
push
roll
mov
sub
fisubrl
mov
xchg
rcrl
xor
or
mov
push
cmp
or
lret
pop
push
mov
insb
es
ss
sbb
mov
in
lret
pop
push
ja
in
faddl
scas
int
cmp
jno
lods
lret
inc
pop
js
dec
inc
cmp
cmpsb
push
inc
adc
cmp
push
ret
xor
inc
adc
addr16
aam
xor
ljmp
xlat
enter
pushf
xchg
rorl
inc
div
cltd
nop
or
pop
or
roll
sbb
pop
stos
cmp
and
je
icebp
fisubl
test
or
xchg
int
dec
pop
popa
and
jmp
mov
insl
cli
jno
fnsave
push
add
imul
xchg
and
cmp
lcall
adc
jl
test
jne
xchg
xchg
dec
scas
incb
cli
nop
push
shll
stc
aad
cmc
push
push
push
jg
add
jecxz
cld
out
mov
xor
ss
out
cli
mov
pop
imul
adc
push
ret
jne
xchg
jb
pop
es
dec
cmp
inc
roll
loop
push
rcr
imul
xchg
pushf
js
cli
stos
cmc
test
out
sbb
pop
clc
lods
xchg
mov
dec
jle
and
cmp
ds
pop
push
mov
loopne
in
xchg
and
inc
loopne
sub
cs
add
push
dec
sub
mov
or
jbe
pop
in
jns
adc
ficoms
loopne
aam
inc
adc
fistps
insb
jecxz
dec
cmp
jmp
inc
inc
xchg
iret
repnz
stos
and
or
iret
icebp
gs
ss
or
lret
cmp
cmp
imul
jbe
out
lcall
stc
mov
mov
jg
mov
inc
adc
and
and
cmp
subps
gs
lret
jge
ret
mov
adc
loop
cmc
or
jg
lcall
outsl
lcall
daa
inc
push
lret
out
cmp
mov
pop
inc
jecxz
popf
push
dec
sub
cmpsl
jg
jl
inc
jbe
jle
adc
sub
jg
cmp
ret
std
je
icebp
xor
mov
adc
jb
out
dec
mov
xor
xorl
gs
dec
dec
stos
jbe
mov
push
dec
xor
jle
xchg
imul
lds
notb
into
inc
testl
sub
xor
jecxz
mov
or
repnz
hlt
mov
add
lcall
cli
popa
rcr
test
lcall
mov
stos
xchg
cmp
ja
sub
aam
cli
test
mov
ljmp
pop
daa
test
enter
push
sub
std
xor
sub
dec
lock
push
loopne
nop
dec
imul
sbb
cmc
nop
data16
frstor
movsb
inc
push
push
cli
cmp
mov
add
rol
adc
cmp
cmpb
bound
int
aaa
repz
or
mov
and
sbb
ret
xor
adc
pop
sbb
xchg
call
cwtl
xchg
sub
cmc
aas
popa
inc
addr16
push
push
dec
shlb
ss
jl
loop
in
lods
mov
mov
xor
enter
fildll
cwtl
xor
and
rclb
fcmovbe
xorb
add
jbe
xlat
push
dec
dec
shll
push
aam
dec
std
adc
pop
sarl
pop
push
in
ljmp
inc
leave
dec
cmc
pop
jp
cmp
popf
cmc
ljmp
imul
push
cltd
sbb
in
ja
cmp
mov
mov
lods
mov
stos
dec
push
enter
leave
lods
lock
add
add
mov
int
push
js
jl
pop
js
and
insl
adc
test
out
cli
mov
sub
push
or
or
pop
sbb
outsl
nop
ljmp
xchg
xchg
sub
das
inc
add
mov
add
push
or
inc
lods
adc
cltd
nop
divl
push
dec
add
lret
arpl
xchg
ss
cmp
leave
js
mov
mov
xor
xchg
stos
movsl
arpl
mov
fldenv
fs
xor
rcl
test
aaa
iret
sbb
in
aad
sbbl
mov
hlt
cmp
inc
xchg
sbb
imul
div
out
scas
mov
in
and
push
fcomps
pushf
pop
pop
icebp
stos
shl
inc
and
dec
jb
aaa
xchg
jbe
outsb
fmuls
pusha
sbb
sbb
mov
push
push
pop
aad
mov
add
push
test
scas
mov
rorb
xchg
icebp
push
jne
cmpsl
sub
inc
xor
lret
fcmovbe
and
test
ja
sbb
mov
sbb
add
jbe
outsl
mov
or
cmp
into
cmp
inc
jl
jae
push
pop
add
insb
mov
cmp
inc
dec
sbb
jnp
testb
push
inc
mov
cmpsb
aad
pop
arpl
aaa
neg
ret
shll
pop
outsb
fildll
xchg
cmp
sub
cmp
xchg
cmp
nop
jbe
jmp
mov
mov
cld
mov
push
cld
cmc
scas
xacquire
ffree
and
jnp
dec
sub
add
leave
xchg
jbe
roll
dec
adc
pop
jo
test
arpl
or
jle
clc
dec
jnp
cmp
loopne
sbb
push
inc
or
push
dec
sub
pop
fildl
sub
std
mov
mov
push
fs
mov
ret
fdivrl
dec
js
mov
addb
mov
sahf
mov
or
dec
fildll
mov
add
sarb
sub
and
fs
push
dec
xchg
adc
sub
cltd
divb
and
push
xchg
scas
and
mov
sahf
pushf
mov
sub
inc
push
into
lcall
push
sub
cmpsl
mov
fwait
idivl
push
lahf
dec
mull
push
sbb
test
mov
sbb
push
push
inc
out
mov
adc
lock
dec
pop
jno
dec
icebp
in
out
fdivrl
mov
loope
push
push
mov
aaa
dec
dec
rolb
cmp
and
add
das
ret
imul
mov
test
push
jle
pop
jge
mov
push
sub
loope
outsl
jl
and
inc
sbb
cli
and
mov
fistps
and
mov
js
jle
lds
cmp
cld
addb
push
int
std
add
fldl
sbb
cmp
add
push
movsl
adc
jbe
cmpl
test
nop
ret
lret
sbb
or
imul
xchg
or
pop
and
mov
sub
or
outsl
dec
test
scas
outsl
pop
outsb
mov
fwait
repnz
sub
aam
sub
lret
or
andl
xchg
nop
fisttpl
arpl
je
scas
pop
out
mov
add
sahf
xchg
mov
test
popf
orb
nop
arpl
xor
push
insl
mulb
push
clc
stos
inc
loope
push
ror
aaa
dec
add
sahf
and
push
mov
mov
xchg
aaa
add
dec
push
fbld
inc
or
jge
les
mov
sub
pop
inc
in
aad
scas
cltd
push
inc
je
xchg
or
push
pop
mov
jg
mov
imul
inc
int3
mov
mov
rcl
rcl
mov
jbe
pop
ja
loope
in
mov
jnp,pn
cmpsl
adc
rorb
sub
mov
xor
ficoml
daa
jl
in
stos
iret
xchg
adc
push
dec
test
dec
mov
mov
mov
mov
outsl
fucomp
dec
test
mov
hlt
lcall
mov
mov
cmpl
mov
xchg
cmpsl
jg
les
ds
cs
out
fisttps
aas
jl
push
fimuls
pop
in
insb
xchg
and
xchg
jne
movsl
mov
fstp
das
xchg
inc
dec
cmp
xchg
cmp
sbbb
popa
out
push
xchg
ret
or
dec
loopne
xor
jns
sbb
das
imul
jmp
pop
mov
lea
pop
push
dec
cmp
insb
add
push
sahf
lock
ret
negb
aad
sbb
scas
pop
xor
push
insl
xchg
popa
out
mov
dec
sbb
sub
cmpsl
test
push
pop
stc
fsubs
fstpl
ljmp
inc
mov
jno
xchg
sbb
add
xlat
mov
fdivl
xor
adc
mov
lock
xor
mov
pusha
popf
ret
fwait
int
iret
mov
mov
hlt
pop
cmpsl
loopne
in
mov
cmpsl
lds
in
mov
je
scas
test
cltd
outsb
or
in
sub
mov
lock
movsl
inc
fidivrs
pop
add
xor
pop
pop
mulb
lods
mov
out
lea
shlb
loop
mov
xchg
sub
push
fstpt
mov
loopne
mov
cmp
pop
sbb
xchg
xchg
jmp
pop
add
inc
insl
jle
or
scas
mov
sub
out
hlt
jle
sbb
cltd
mov
inc
test
into
enter
xchg
icebp
jno
sub
aaa
sbb
jl
cmp
in
dec
inc
pop
pop
sbb
push
inc
enter
iret
inc
and
mov
data16
ja
mov
pop
sbbl
add
dec
jl
dec
stc
fcoml
and
cmp
cmp
mov
xchg
xchg
rcll
cs
icebp
pop
inc
shl
mov
sti
xchg
fistpll
cltd
int
mov
sbb
or
repnz
sbb
rcl
mov
sub
sarl
mov
and
addr16
adc
lahf
cmp
mov
ds
pop
icebp
mov
js
add
push
jno
or
mov
xorl
sub
cli
test
mov
repz
iret
jge
mov
mov
loop
stos
pop
popa
das
pushf
in
adc
rcll
and
sub
xor
mov
stos
ss
dec
fsubrs
inc
adc
lea
insl
sbb
inc
push
in
xor
int
cmp
subb
sub
push
mov
loopne
lods
pop
sbb
arpl
les
sbb
dec
aam
cld
xchg
and
orb
sbb
or
sti
add
mov
jle
sbb
jl
test
es
sub
pop
enter
xchg
lods
test
daa
iret
adc
mov
lods
lret
test
das
xchg
push
jecxz
mov
inc
stos
pop
sbb
push
cli
sub
lods
or
mov
int3
fisttpl
push
in
notl
sbb
mov
aaa
inc
inc
enter
push
add
cmpsl
fs
lahf
jg
jbe
ljmp
inc
cs
pop
sbb
mov
int3
insl
pop
sbbb
push
or
add
mov
mov
fld
or
ss
xchg
hlt
out
pop
flds
add
or
fsub
add
test
push
cmc
fbstp
mov
jp
mov
sub
and
sub
arpl
inc
repnz
xchg
aaa
popf
add
lock
push
mov
test
push
jno
fistpl
sbb
cmp
out
add
jae
dec
cmp
outsb
push
push
loope
pop
add
into
ja
jle
adcl
adc
mov
lds
rorb
inc
lds
cmpsb
ret
dec
add
inc
negb
mov
or
push
or
lock
sbb
cmc
add
int
out
rol
popf
jl
jle
push
ss
push
ss
xchg
cmpsl
xor
pusha
leave
sub
gs
push
and
pop
and
inc
dec
stc
hlt
cltd
negl
sbb
movsb
push
das
inc
xchg
sbb
dec
imul
inc
pop
xor
pop
cmp
cs
vpaddw
stos
fcmovnu
popa
xor
aad
push
addb
xlat
jns
inc
or
xorl
sub
mov
xor
xchg
fistl
fcoms
mov
mov
scas
into
push
adc
test
jbe
js
xor
jne
cmp
sahf
mov
add
iret
add
jb
sub
lock
leave
mov
popa
push
scas
inc
cltd
dec
in
popf
testl
cwtl
aad
and
cmp
icebp
push
lock
mov
xor
mov
mov
insl
adc
push
lea
fs
ret
imul
pop
dec
aas
jns
lret
xorb
stc
bound
fisubrs
pushf
mov
mov
addr16
mov
dec
sbb
mov
js
cld
sub
jae
xor
es
push
imul
inc
cld
jb
add
lcall
jg
lods
dec
daa
fs
xchg
popf
xor
cli
pop
roll
or
fidivs
inc
mov
push
sbb
mov
sub
shl
mov
stos
mov
xor
mov
cmc
lret
pop
mov
push
inc
cmc
and
dec
das
sub
xor
out
jno
enter
xchg
mov
mov
cmp
and
mov
inc
mov
pop
into
sbb
sahf
xchg
mov
inc
das
stos
sub
jp
dec
imul
adc
push
daa
xchg
mov
insb
int
jg
aas
in
jp
mov
addr16
aam
std
test
movb
jbe
pop
cld
cmpsw
adc
rolb
xchg
pop
aaa
xchg
dec
cmpsb
jl
mov
cmp
sbb
push
shl
sahf
xchg
mov
aad
insb
aas
jecxz
orl
or
jecxz
cltd
mov
movsl
outsl
hlt
adc
sarl
lock
filds
xor
scas
dec
jle
fwait
sti
stos
cmc
dec
into
sti
push
cmp
push
jne
out
inc
mov
sbb
push
fs
in
shl
lods
mov
xchg
and
mov
cmp
outsl
xchg
add
test
sbb
inc
mov
jecxz
in
loopne,pt
inc
andl
mov
pop
sub
out
lcall
xchg
xor
data16
inc
sub
push
jnp
shrb
push
sahf
jg
insb
adc
cmp
movsl
into
adc
cs
jno
fcoml
or
sub
mov
xchg
and
push
enter
insl
sbb
fdivl
std
sbb
aam
xor
and
loope
inc
lret
push
sub
mov
lock
cmpsl
inc
jno
pop
rcrb
jbe
rcrl
ret
pop
push
or
mov
mov
inc
sbb
push
push
jecxz
xchg
jae
mov
loop
mov
inc
or
jnp
insl
stos
add
push
mov
push
adcl
movb
outsb
jb
mov
stc
inc
jg
daa
push
push
cmp
stc
cmpsb
mov
ljmp
hlt
scas
sarl
sarl
inc
lcall
mov
jae
dec
dec
cmp
clc
jno
dec
mov
scas
and
dec
sahf
pop
and
hlt
xchg
test
sub
int3
in
fidivrl
mov
dec
loope
lret
push
jge
in
icebp
leave
mov
jb
adc
cli
das
gs
aaa
das
and
pusha
stos
mov
jnp
mov
push
mov
and
jno
popa
outsl
outsl
dec
mov
pop
or
xor
dec
jbe
into
and
pusha
cli
cmp
imul
jns
xor
cmp
into
gs
lcall
jne
lods
dec
push
adc
loope
ss
add
cmp
push
push
rorl
popf
mov
out
scas
fucom
push
rcl
popf
divb
sub
and
stc
xor
adc
mov
mov
test
jb
mov
lds
mov
jge
mov
imul
aaa
fs
aad
ret
iret
lret
insl
aaa
inc
imul
jl
je
mov
filds
jmp
aad
mov
adc
shll
orl
lods
insl
dec
dec
pop
lods
mov
ljmp
out
push
xor
pop
xchg
mov
iret
inc
ret
xor
jnp
into
cmc
jbe
stc
inc
repnz
je
push
pop
nop
fwait
xchg
dec
mov
lret
fadds
addl
mov
cld
insb
lds
cmc
inc
lock
adc
in
push
dec
lea
pop
and
inc
push
mov
cld
xlat
movsl
outsl
dec
lcall
or
mov
jnp
xor
jmp
pusha
xor
push
pop
sub
dec
enter
loop
lods
push
inc
cmp
iret
in
rep
cwtl
in
mov
mov
or
xor
mov
sbb
insb
cmp
jmp
xchg
test
inc
xchg
xor
mov
std
jmp
call
movsl
gs
test
jbe
xchg
xabort
cmp
mov
or
ficoms
dec
in
or
mov
push
shl
xor
inc
adc
cmp
jle
das
pop
aas
addb
lret
inc
inc
add
in
mov
pusha
out
test
sub
mov
stc
inc
stc
fsub
repnz
in
xchg
jne
push
shll
stos
movsl
sbb
arpl
add
movsl
pop
sbb
xlat
jp
or
arpl
lods
push
inc
scas
dec
xor
int
test
movsb
call
shll
push
xchg
or
sbb
xchg
or
lret
orb
cmp
push
push
jg
div
cli
inc
dec
leave
pop
leave
movsl
inc
jle
imul
jg
or
int
pop
or
roll
scas
lds
jno
popa
xchg
jbe
inc
push
clc
xchg
push
sbb
mov
shl
pop
data16
push
add
test
jns
fwait
sbb
lret
popf
pushf
xorl
adc
aas
into
repnz
sbb
rep
push
lock
mov
fiaddl
jo
addr16
xor
mov
shll
in
mov
jnp
pushf
cmpb
jne
mov
out
inc
jle
js
jle
mov
xlat
lret
out
jns
dec
mov
lds
stos
imul
xchg
mov
add
xchg
icebp
mov
mov
xorb
jae
sbbl
jecxz
testb
inc
pop
ss
and
in
jb
fisttpl
es
repz
sbb
fisttpl
sti
adc
inc
dec
sahf
roll
aaa
xor
mov
mov
mov
cwtl
into
mov
ja
adc
xor
iret
jecxz
push
aam
cmp
int3
push
sahf
roll
lds
stos
lods
mov
cmc
sbbb
mov
push
push
xor
dec
pop
sub
shlb
add
sbb
pushf
mov
sti
rep
pop
daa
lcall
stos
inc
sub
mov
xchg
aam
rcl
mov
sbb
mov
push
test
jo
adc
ljmp
orb
repnz
enter
fmull
add
movsb
and
imulb
inc
in
shrb
scas
jae
mov
lods
std
outsb
or
mov
and
adc
mov
gs
cli
sarl
jnp
sar
xchg
push
cwtl
aas
dec
xchg
popf
adc
or
stos
xor
cmc
clc
fidivrl
mov
xlat
jecxz
or
movsl
fimull
xor
adc
mov
jmp
pushf
mov
cld
loop
sub
mov
xor
xchg
pop
cmpl
cld
mov
mov
fs
jns
test
xchg
popa
test
mov
and
lock
or
mov
cmp
pop
cmp
jle
loope
dec
cmp
push
aam
sbb
fsubrp
jns
cltd
lcall
sbb
and
lods
jno
inc
or
leave
pop
lods
aam
aam
push
out
test
or
inc
mov
sub
bswap
push
ret
out
cmpsl
orl
dec
dec
out
mov
loop
addr16
shrb
mov
nop
jg,pt
in
xor
arpl
enter
mov
shll
jecxz
sldt
fldt
xlat
insl
mov
enter
pop
cmpsl
xchg
test
xchg
imul
inc
aad
inc
mov
outsl
jmp
xchg
js
push
imul
adc
movsl
push
ljmp
ret
das
sbb
gs
push
xor
aas
ds
and
xchg
ds
out
aaa
sbb
fbld
fstpt
enter
mov
ds
popl
fcoml
sub
push
push
sub
adc
inc
in
adc
lods
aam
xor
xor
and
add
add
inc
and
cld
jmp
pop
pop
into
and
and
or
popa
adc
jecxz
rcrl
ljmp
mov
jnp
jno
imul
shlb
lcall
inc
iret
jne
or
push
imul
into
xor
cltd
enter
mov
ja
sahf
push
and
push
xchg
push
cld
out
mov
sti
int3
and
insb
fstpl
lea
mov
dec
xchg
scas
fimull
pop
in
je
mov
push
addl
push
lds
fs
dec
add
and
cmpsl
push
loopne
add
pop
mov
push
cli
cld
or
add
mov
xchg
push
int3
mov
push
test
ret
xor
mov
lcall
sub
aaa
jb
fnstcw
lret
jne
jg
cmpsb
call
inc
leave
and
sbb
stos
test
jmp
dec
cltd
adc
pop
stc
repz
daa
adc
sbb
stc
into
and
into
das
cld
stos
lahf
ficoms
pop
xchg
out
add
out
mov
xor
iret
lods
jbe
addr16
jg
jl
xor
jae
imulb
in
sub
jmp
stc
cmp
clc
into
leave
popa
xchg
push
into
sahf
xor
jo
push
dec
lds
stos
ficoml
incl
fs
in
mov
mov
shr
aad
inc
adc
jbe
sub
mov
xor
jmp
jo
pop
cmpl
scas
roll
fisubs
cmc
push
testb
jae
shlb
test
dec
push
add
push
cmp
imull
jecxz
sahf
and
stc
cmpsb
test
ja
popa
sbb
mov
test
sub
lea
cltd
push
jb
movsl
imul
inc
cmp
cmp
mov
cmp
out
inc
lahf
cwtl
dec
sub
jb
or
inc
sub
in
jp
sti
aam
cltd
xor
fisubl
mov
inc
cmpsl
shl
mov
leave
int3
ret
cmp
sub
cmpsb
fisubrl
repz
xor
addr16
mov
jbe
mov
pop
ret
jo
xchg
ret
push
xchg
test
cli
cmp
rorb
inc
lock
jb
inc
std
repz
hlt
pop
stos
ret
and
shrl
imul
sahf
aad
jg
mov
lods
dec
mov
or
loope
andl
cmp
test
fdivr
pop
pop
sub
or
ds
dec
fidivl
add
inc
lods
and
pop
add
int3
jne
xchg
addps
or
mov
or
push
movsb
ljmp
lret
mov
fdivs
mov
pop
rcl
or
orps
pop
out
js
xchg
and
lods
add
pop
stos
hlt
push
or
mov
hlt
test
sub
test
and
gs
fisubl
pop
jbe
lds
lcall
pop
aam
cmpb
cmpsb
xor
cmp
sbb
cld
adc
cld
or
xorl
xchg
cltd
mov
sbb
aaa
jae
dec
jge
jae
popa
xor
daa
shl
jbe
xchg
pop
out
push
rolb
mov
push
ss
mov
out
fld
ljmp
pop
sub
repz
sbb
decl
or
imul
xchg
inc
shlb
adc
xchg
lds
xor
cld
adc
mov
add
mov
ss
mov
mov
xor
jl
fwait
sub
inc
in
in
pop
iret
les
sub
fnsave
iret
movsb
inc
sbb
addb
lods
xchg
or
stos
bound
wrmsr
add
and
aas
out
push
mov
sbb
jnp
add
cmp
and
arpl
mov
movsl
pop
notb
jae
lds
into
jp
ljmp
sbb
sti
mov
leave
call
leave
xor
sti
mov
aam
jns
xor
push
pop
push
add
mov
add
negb
popf
push
fimull
ljmp
dec
out
cld
rcl
daa
test
loop
lock
mov
mov
mov
icebp
popa
imul
jecxz
scas
cmc
arpl
xchg
lcall
add
push
das
cmp
lock
xor
aam
mov
cmp
adc
jmp
enter
stos
stos
xchg
xor
cmp
sti
mov
aad
jl
cmp
xor
cmp
lahf
popf
inc
out
jecxz
jnp
arpl
push
das
mov
pop
sbb
scas
jo
push
dec
pop
incb
int3
mov
push
add
ret
mov
sbb
mov
and
mov
xchg
adc
push
movsb
stos
cmp
in
daa
outsb
hlt
imul
xlat
mov
add
stc
mov
out
andb
dec
fsubrs
push
in
jge
xchg
push
lods
add
jnp
loop
push
dec
scas
sub
cmpsl
call
dec
push
lea
mov
inc
cmc
mov
jmp
xlat
jbe
adc
int3
xor
lods
lods
dec
pop
mov
out
mov
and
dec
jmp
mov
es
jae
subb
scas
xchg
xlat
pop
mull
into
or
popf
pop
mov
cmpsl
outsl
repz
or
fcomip
or
cmp
mov
daa
arpl
movsl
insb
lds
leave
mov
popa
xchg
shlb
sub
les
xor
flds
jnp
jnp
mov
loop
add
sarl
shlb
xor
cmpsl
mov
mov
mov
clc
ret
arpl
lock
mov
mov
dec
in
jne
push
data16
pop
fbstp
arpl
not
fnstenv
cmpsb
mov
rorb
or
ret
pop
int3
mov
add
mov
xorl
add
sub
sub
xchg
gs
insl
movsl
jnp
or
mov
jle
pop
adc
sub
addr16
nop
mov
push
in
mov
inc
lods
inc
push
adc
adc
fidivs
fwait
gs
subl
mov
inc
mov
pusha
icebp
mov
movsb
pop
xor
push
dec
push
test
push
xchg
xchg
gs
stc
out
movsb
or
fucomip
rolb
xchg
popf
dec
pop
push
jbe
mov
dec
push
loop
push
push
ljmp
popf
jb
inc
xor
adc
sbb
xor
sub
scas
stc
mov
in
cmpsl
lods
push
mov
dec
sub
outsb
fdivl
pop
sti
popa
imul
into
pop
clc
or
dec
sahf
lods
loop
inc
mov
mov
jns,pn
mov
mov
jmp
insb
mov
jno
neg
adc
xchg
dec
inc
jge
loope
das
ret
xchg
lods
int
mull
test
add
iret
cltd
push
mov
mov
movsl
push
movl
sub
aam
jae
jle
rorb
mov
mov
movl
outsb
mov
mov
jge
hlt
ja
cmp
pusha
rcl
mov
lea
aam
and
shl
out
movsb
cltd
sti
in
add
rcrb
push
jnp
lahf
pop
add
lcall
inc
je
jecxz
adc
fisttpll
cmp
xchg
xor
pop
cmpl
ljmp
dec
xchg
test
jl
mov
jns
sti
and
notl
sbb
mov
sti
sbb
cmpsl
jbe
xchg
jp
mov
shr
stos
push
mov
jmp
scas
jge
mov
js
push
sbb
gs
pop
cmp
sub
sbbb
fildl
adc
incb
jno
pop
mov
dec
scas
imul
push
pop
push
jmp
jmp
arpl
mov
xchg
lahf
jmp
daa
xchg
icebp
push
dec
test
aaa
dec
mov
pushf
dec
nop
jg
cmp
imul
or
adcl
jmp
insb
cmc
loop
popa
call
loope
mov
mov
insl
jg
in
cli
arpl
enter
fnstenv
and
add
sar
and
daa
shll
lahf
out
fsubs
aas
mov
mov
bound
cmpsl
fsts
int
and
aad
cmpsl
sbb
test
enter
loope
cmp
mov
addl
mov
cmp
enter
int3
andb
jo
mov
inc
cmp
sbb
mov
inc
mov
jl
push
lods
jle
dec
es
or
sti
mov
cs
add
repnz
fisttps
inc
cmpsl
sub
or
aaa
shll
dec
add
xchg
dec
xor
imul
mov
push
mov
push
cmp
mov
rcrb
sbbl
lahf
fs
xchg
arpl
fcoms
mov
insl
cmp
insl
mov
popa
sarl
daa
cwtl
push
mov
aad
mov
or
into
cmp
nop
cwtl
pop
dec
test
xor
mov
mov
ja
ret
lods
lods
push
mov
inc
or
scas
mov
loopne
xchg
cltd
outsl
jo
daa
jo
imul
jle
fnstenv
fadds
test
sahf
jae
popf
or
rcrb
daa
jge
daa
cmp
dec
mov
hlt
sub
push
mov
cmovb
lock
fistps
sarl
addr16
xchg
or
jg
cmp
mov
sbb
bound
add
xchg
loope
insl
int3
pause
lds
aam
daa
xchg
inc
fcompl
adc
mov
sbb
rcll
dec
icebp
arpl
popa
outsl
pusha
sub
out
adc
stos
xor
xor
adc
add
jge
lahf
dec
lret
push
push
out
jns
and
aad
or
jecxz
int
mov
pop
aas
mov
clc
mulb
xchg
cmp
lret
stc
xlat
sub
call
cmp
into
xor
xchg
test
push
xchg
xor
mov
inc
jns
hlt
popa
xor
fildl
insb
push
fmuls
push
mov
fs
pop
les
movb
js
sbb
cmp
push
xor
insb
mov
add
mov
add
mov
xlat
scas
or
and
cltd
out
fisttpl
jp
pop
scas
push
fsubs
inc
push
dec
rcr
daa
sarb
jo
rcl
nop
aam
movsl
add
pop
push
test
loop
dec
lret
out
mov
jp
cmp
xchg
lods
sub
mov
in
lea
js
rorb
add
or
jecxz
cmp
das
adc
int
into
imul
lret
fcoml
in
and
and
rorb
xorl
stc
cmp
into
aas
push
fwait
aam
cmp
inc
sbb
rclb
pop
dec
sahf
scas
ret
lds
sub
enter
or
sbb
xchg
pop
push
addr16
push
jecxz
xchg
or
les
bound
or
push
mov
add
xchg
fsubl
pop
adc
lds
call
mov
jo
loope
mov
inc
mov
ss
cmpsb
dec
jmp
lock
aas
mov
or
sub
stos
je
xor
adc
xchg
insl
loopne
mov
lret
pop
pop
adc
loop
ret
aam
loope
je
fwait
hlt
outsb
mov
mov
jg
xchg
mov
add
push
push
cs
mul
ljmp
shl
mov
adc
ljmp
mov
inc
call
sbb
add
rclb
xchg
stc
ja
pop
lods
xor
cmpsb
mov
mov
lods
cmp
sub
cwtl
sahf
dec
rorb
xor
cmp
lods
arpl
jns
aaa
out
icebp
mov
imul
cmp
mov
cmp
call
pop
test
mov
push
fisubrs
mov
push
sub
subl
cltd
jns
xor
cmp
inc
sub
xor
imul
movsl
fs
lret
fs
sub
dec
ret
sbb
repnz
and
mov
adc
add
arpl
sub
mov
jmp
ja
aaa
lcall
lds
xchg
sub
popa
cmp
and
xchg
ja
push
mov
stos
jmp
lea
pusha
mov
fsubrp
imul
das
sub
xlat
aas
test
adc
popf
cmc
popa
add
sbb
call
push
iret
int3
std
pop
cmpsl
fabs
test
xor
dec
mov
insl
faddl
and
jl
mov
cs
pop
mov
repz
add
js
cmpsl
pop
or
outsb
mov
incb
sub
fnstsw
imul
xchg
dec
scas
dec
lea
xorl
addr16
gs
push
loop
out
stc
push
mov
fnstenv
bnd
lea
stc
push
icebp
out
sub
add
mov
dec
dec
stos
and
cli
sarl
not
sub
jno
push
jmp
push
adc
insb
cmp
pmullw
test
popf
dec
sbb
test
pop
ja
frstor
sbb
insb
sub
incb
in
fisttpl
fistpll
jns
fldcw
sbbb
mov
fucomi
xchg
push
int
inc
pop
enter
dec
xchg
xor
mov
sahf
mov
shl
ja
fidivs
movsl
dec
xchg
pop
xor
addl
sbb
push
jns
mov
xchg
cmp
scas
adc
repnz
jp
and
add
pusha
add
cs
sbb
cmovg
icebp
push
mov
loope
fucom
jns
pop
fwait
mov
iret
add
pop
movsb
mov
sahf
ja
mov
push
inc
inc
xchg
call
loopne
testb
cmp
dec
test
cmp
adc
xor
jge
mov
orb
daa
sarl
push
inc
clc
test
out
adc
insl
xor
orl
je
mov
cmp
in
dec
mov
cmc
out
pop
adc
jp
leave
mov
dec
daa
and
dec
xor
test
dec
mov
push
jge
dec
cmpsb
sti
xor
push
pop
pop
add
mov
mov
jae
dec
sub
push
call
sub
inc
call
inc
mov
sbb
out
and
popf
aam
dec
movsb
gs
push
fdivp
hlt
cld
cld
cmp
fiadds
scas
dec
inc
test
push
push
pop
pop
sub
add
mov
or
push
mov
fildl
js
sbb
pusha
stc
shr
inc
idiv
fdivp
mov
sahf
sarl
push
insb
adc
adc
xchg
pop
sbb
mov
pop
push
fcmovne
imul
inc
add
mov
sbb
mov
ret
xor
fucomp
adc
lea
or
pop
pusha
pushf
imul
sub
fstpt
bound
les
out
pop
mov
cli
jecxz
push
mov
jle
aaa
xchg
fs
adc
mov
mov
pushf
cmp
mov
sbb
hlt
lods
adc
in
sub
je
movsl
xchg
loopne
jecxz
movsb
dec
mov
xlat
scas
repnz
jo
das
push
in
out
xchg
jnp
fcmovb
insb
rcll
outsl
pop
ja
sub
test
sbb
and
xlat
jne
mov
cmpsb
fidivl
adc
sub
mov
iret
test
and
cmp
mov
xchg
jp
jmp
scas
sbb
mov
test
xchg
add
cmp
jmp
addb
jg
jecxz
dec
mov
adc
pushf
lds
pop
mov
mov
add
jmp
or
cmp
ja
add
fcompl
push
mov
mov
out
loope
pop
cwtl
pop
mov
nop
mov
jnp
scas
xor
movsl
addb
or
sbb
pop
mov
outsl
adc
pop
sub
idivb
outsl
dec
xchg
hlt
xor
push
mov
mov
cmp
pop
pop
insb
or
repz
iret
call
lods
and
jle
dec
insl
aaa
xor
insb
cmp
mov
jb
insb
lret
xor
lsl
mov
in
mov
cmp
popf
xor
fwait
scas
mov
insl
std
xchg
dec
push
mov
mov
arpl
sti
popf
mov
int
addr16
mov
mov
adc
sbb
in
mov
fistpl
mov
pop
push
inc
sbb
mov
aas
sbb
push
sbb
fs
xchg
ds
bound
and
ja
adc
jno
push
outsb
jmp
jp
shl
or
sbb
push
jae
jne
lcall
dec
mov
add
mov
or
adc
out
mov
xchg
sbb
loope
insb
mov
out
cwtl
inc
push
in
adc
jg
movsb
xchg
loope
cmpsl
push
sarb
mov
mov
cli
pop
into
jp
lods
hlt
jae
mov
push
xchg
leave
loopne
adc
dec
sub
loope
push
mov
cmp
rclb
push
flds
sbb
imull
or
or
and
icebp
add
mov
imul
or
jnp
call
insl
movsl
pusha
jb
ja
adc
mov
or
mov
xor
jmp
mov
inc
divb
pop
xchg
xchg
and
jae
xchg
cmp
inc
and
ror
rolb
xchg
push
mov
push
loope
or
and
cmpsb
mov
jl
fwait
ja
push
fisubl
mov
mov
cwtl
imul
movsl
cmp
sbb
jno
mov
nop
inc
mov
cltd
sbb
js
jnp
fs
adc
ja
dec
stos
jmp
cmp
jno
in
sub
cmp
cmp
scas
ljmp
outsb
test
push
xchg
gs
fwait
and
test
fnstenv
jnp
and
aaa
mov
mov
scas
movsl
jbe
loope
xor
lock
or
dec
cmpsl
dec
fs
cltd
mov
es
pop
pop
pop
insl
data16
gs
lods
add
push
xor
arpl
lret
pop
insl
jns
inc
xlat
cmp
cmp
or
xchg
pop
sub
or
loope
and
popa
or
mov
pushf
push
imulb
jbe
ret
mov
mov
mov
dec
aas
push
or
pop
or
or
sbb
dec
or
ret
pop
stc
sbbl
mov
add
push
dec
psllq
fwait
jae
cli
cmpb
add
push
fimull
leave
xor
xor
rcrb
movsl
cmp
push
ja
mov
jecxz
or
cli
inc
pop
mov
mov
incl
pop
dec
subl
sbb
xchg
ficomps
fcomp
xor
sub
clc
mov
cmp
jmp
xchg
inc
dec
xor
push
lods
stos
dec
fsubl
hlt
or
mov
fcoml
and
idivl
fldcw
insb
sbb
popa
xchg
test
pop
fmull
xchg
loop
sub
mov
mov
adc
insb
xor
push
or
xor
push
sbb
and
adc
ja
inc
dec
imul
push
pusha
ret
sbb
mov
xor
test
mov
add
aaa
pop
and
xchg
addr16
stos
adc
xchg
push
shll
insb
notl
rcrb
imul
imul
jnp
adc
xlat
decb
shlb
xor
cmp
push
out
mov
shlb
sbb
gs
or
inc
addr16
negl
push
cli
add
pop
cld
sub
sub
push
inc
or
pop
lock
adc
or
lret
mov
ret
jno
push
pushf
and
sbb
call
repnz
mov
cmp
faddl
dec
sahf
bswap
adc
out
push
xchg
loop
pop
jno
xchg
xlat
int3
dec
ds
outsb
pop
insl
lcall
adc
rcll
lods
add
add
fstpt
aam
mov
sbb
fisubl
push
xchg
xchg
push
int3
cwtl
mov
shrl
cs
gs
out
es
dec
pop
jnp
sub
push
xchg
ja
push
int
iret
aam
jae
test
insb
icebp
mov
ret
dec
imul
dec
ja
adc
ds
mov
movsb
leave
mov
lahf
mov
sub
loope
cmp
cmp
cmp
lods
mov
pop
or
and
xchg
inc
pop
pop
sbb
dec
inc
mov
adc
dec
mov
rep
mov
mov
jle
push
add
into
int
lret
xchg
sbb
push
notl
mov
mov
inc
fs
adcl
pop
in
imul
cltd
js
mov
loop
push
pop
add
seta
scas
dec
int
push
push
push
stc
repnz
sarl
add
xor
sbb
call
jg
sbb
test
jns
sti
push
lret
xchg
cld
lock
push
loopne
jnp
push
mov
loopnew
lods
mov
dec
dec
mov
aaa
gs
test
or
push
mov
ljmp
loop
nop
repz
outsb
fisttpll
xlat
bound
xchg
or
es
stc
sarl
inc
push
inc
mov
daa
push
sub
dec
push
das
icebp
aas
daa
fimull
adc
les
in
cmpsb
add
call
or
bound
sbb
popa
push
cltd
xchg
and
loop
hlt
or
pop
adc
sub
xor
and
insb
lods
pop
xor
insl
js
jmp
xlat
and
cmp
jnp
test
aad
and
loopne
pop
xor
insb
mov
subb
pop
or
cmp
mov
or
shl
call
in
push
sti
sbb
in
push
jg
push
test
mov
out
jae
mov
iret
lock
sub
out
cmp
test
cmpsl
sbbl
mov
cmp
mov
ja
insl
aaa
jne
push
push
scas
jbe
dec
push
cmc
inc
test
lret
sub
mov
pop
or
add
call
xor
int
addr16
outsb
loope
sbb
arpl
nopl
adc
outsl
stos
push
out
out
xchg
cmp
test
lret
arpl
das
ds
pop
xchg
orl
outsb
fucomi
mov
jge
dec
xchg
pop
xchg
int3
cmovge
sbb
adc
aas
adc
sub
push
fbstp
fisttpll
dec
xor
clc
fdivrs
or
push
push
fsubr
popf
orl
mov
outsb
nop
inc
ja
cmp
xchg
push
and
aaa
pop
lea
sbb
cli
jmp
aaa
jb
cli
enter
test
push
pop
das
mov
xchg
adc
dec
mov
call
nop
dec
xchg
and
or
pop
mov
mov
inc
fs
sbb
mov
fisubl
stos
mov
pop
and
and
xchg
push
mov
call
dec
jne
xchg
jae
fwait
push
shlb
popf
jmp
add
pop
jns
jmp
add
push
jae
push
movl
sbb
mov
mov
sub
pop
lods
cmp
pushf
xchg
es
negl
or
sbb
out
xor
inc
mov
jle
daa
dec
mov
inc
mov
add
fistps
jae
or
shlb
mov
pop
out
mov
outsb
adc
dec
jle
int
sahf
lds
cwtl
sbb
mov
nop
xchg
add
icebp
sub
fsubrs
fbld
jno
xor
mov
stos
add
inc
sbb
into
jno
out
jo
xchg
movsb
inc
pop
sub
imul
jnp
nop
and
and
aad
mov
jns
inc
add
or
lcall
pop
cmp
pop
mov
out
mov
ror
pop
test
or
and
xor
in
xchg
mov
cmpsl
xchg
xchg
sbb
pop
out
mov
sar
mov
mov
xor
shrl
scas
xbegin
dec
mov
call
push
hlt
jmp
lret
lock
cli
stc
bound
into
adc
mov
pop
sbb
mov
push
push
add
or
sub
gs
ficomps
xor
adc
fldt
sarl
mov
testl
std
into
pop
pop
cmpsb
adc
add
lods
pop
cmp
dec
das
pop
jbe
mov
into
inc
dec
mov
incl
les
ljmp
xorb
stos
lods
sti
sbbb
jae
mov
pop
jle
jb
mov
loop
popf
ds
sub
push
hlt
xor
mov
orl
ret
sarb
insl
xor
imul
insl
ret
ds
xor
das
in
jg
xchg
pop
sub
jnp
data16
xor
ds
imul
inc
push
inc
mov
into
sub
xlat
cs
xor
icebp
inc
stos
cmpb
xor
lea
push
inc
fsubrl
cld
pushf
push
ja
ret
hlt
insb
jnp
aas
inc
sbb
dec
mov
mov
lahf
xchg
shlb
dec
sbb
shlb
nop
sahf
inc
cmpl
fwait
mov
aas
cmp
or
sbb
iret
push
in
add
cmp
icebp
aaa
mov
aas
inc
xor
xor
lds
mov
and
dec
push
push
das
sbb
rcr
enter
cmp
cltd
repnz
stos
cmpsl
push
mov
loope
sbb
rcrb
ret
lock
rorb
inc
inc
adc
jne
lcall
rcr
fs
adc
cmpsb
outsb
arpl
adc
pop
cmp
sub
leave
loope
sti
sbb
xor
ret
jp
xchg
push
inc
xchg
jmp
sbb
add
aam
data16
jp
mov
mov
scas
dec
mov
cltd
clc
add
aad
cltd
je
jecxz
out
flds
add
add
pop
bound
jns
out
lods
les
sub
inc
push
lcall
stos
lcall
test
je
test
insl
dec
mov
fstpt
or
data16
jbe
jns
dec
rcrb
and
stos
stc
lds
cmc
sarl
aam
push
push
das
stos
mov
das
xchg
nop
cmp
fidivrs
mov
repz
xchg
mov
popa
xchg
movsl
shr
xor
test
lods
xchg
in
lcall
cmpsb
mov
mov
xchg
test
js
sub
in
pop
mov
stc
mov
sub
adc
mov
xor
mov
or
sbb
and
stos
push
dec
and
jmp
sub
pop
enter
jmp
iret
loop
and
mov
mov
mov
ljmp
jb
ss
pcmpeqd
xchg
mov
ss
cmpsb
hlt
outsb
orb
fs
in
ja
jecxz
push
cs
cmpsb
jae
cld
imul
jmp
movsl
ss
xor
pop
imul
div
hlt
shlb
dec
add
lea
xchg
das
pushf
out
mov
sbb
cmpsl
mov
mov
lret
jb
aam
hlt
push
mov
cmp
mov
dec
sbb
jns
adc
mov
xor
arpl
adc
popf
jmp
adc
mov
mov
addr16
addl
xor
call
orb
iret
pop
inc
jmp
add
aam
test
pop
daa
mov
sar
lahf
cmp
daa
mov
mov
jae
jbe
pop
dec
xor
or
xchg
popf
subl
inc
outsl
sbb
ds
ror
jmp
iret
jo
jns
daa
lods
ss
mov
mov
stos
mov
adc
and
xor
popf
jae
push
aam
bound
fidivl
or
test
push
movsl
xchg
stc
push
or
push
and
rcrb
shrb
dec
test
sub
mov
lret
dec
sbb
and
mov
mov
adc
insb
push
test
stos
lods
stc
in
xor
push
pop
in
in
scas
adcb
leave
push
ret
das
xchg
inc
fcomps
pusha
fistps
ffree
mov
add
sbb
out
xor
mov
mov
jmp
and
or
xor
adc
inc
pop
ljmp
mov
push
sub
int
incb
inc
cmp
sahf
mov
shll
test
push
loope
imul
int3
inc
mov
pop
mov
and
adc
scas
add
in
fistpl
push
lea
jnp
cmpsb
outsl
les
sbb
jle
push
ficompl
ljmp
cmpsb
fcomp
sti
fcomp
push
sub
cmc
inc
dec
int3
cmp
jno
in
sbb
cmp
xchg
jne
mov
ss
push
sub
es
icebp
mov
out
mov
xchg
mov
add
cmc
mov
jae
fwait
xor
daa
scas
sub
add
mov
call
cli
test
sbb
push
loopnew
imul
push
push
or
xchg
pushf
ljmp
xchg
pop
mov
push
mov
jmp
jmp
inc
fwait
adc
pusha
push
push
push
add
iret
jg
cmp
sbb
cwtl
jbe
xor
pop
mov
sub
idivl
iret
add
fsubrs
aad
mov
adc
xchg
sbb
mov
mov
sbb
mov
dec
in
fsts
sbb
sbb
cmp
sti
int3
mov
mov
and
sub
xchg
or
push
arpl
test
jmp
sbb
xor
mov
mov
mov
incl
xchg
mov
mov
pop
lods
inc
movsl
arpl
push
cmp
adc
xor
inc
leave
sahf
dec
gs
ret
jb
push
pop
or
in
mov
jecxz
inc
pop
jge
dec
inc
pop
cmp
or
sub
and
mov
std
jno
and
scas
push
xchg
sbb
mov
push
pop
xchg
ror
sbb
test
jnp
clc
dec
int3
or
mov
pop
arpl
jg
sub
insl
adc
out
jbe
into
cmp
push
int3
gs
add
into
daa
cmp
insl
sbbb
add
or
push
fwait
cmc
insw
movsb
subl
enter
shlb
push
idivl
out
es
sub
and
dec
inc
sti
xor
cmpb
insl
fsubrl
mov
inc
cmc
cltd
sub
int
rcrb
dec
pop
jno
cli
mov
xchg
adc
pop
mov
mov
cmp
lea
aas
and
out
loop
or
xchg
push
ret
ficompl
dec
xlat
into
inc
aad
gs
leave
pushf
mulb
lods
inc
inc
dec
pop
mov
xchg
aam
cwtl
sub
sti
mov
add
jbe
aas
cmpsb
push
mov
in
fdivl
test
push
or
add
jmp
mov
lahf
in
dec
cli
pop
int3
outsl
insl
jo
pop
leave
call
push
jns
jno
adc
rcrl
push
pusha
movsb
outsl
mov
jbe
or
jge
mov
jge
stc
movsl
mov
pop
stos
pusha
dec
or
call
xor
out
jecxz
add
mov
dec
mov
xor
out
rol
shl
and
dec
jg
shlb
mov
stos
aas
mov
xchg
bound
cmc
add
add
add
add
jno
adc
jns
sub
mov
cmp
and
jnp
in
aad
incb
xor
jns
pop
insl
andl
pop
imul
adc
mov
aas
jmp
fcmovnb
push
adc
hlt
cmp
cmp
test
int3
aad
enter
cmp
inc
ljmp
iret
mov
in
fmul
inc
ljmp
sub
inc
test
xchg
sbb
or
in
push
daa
mov
adc
cmc
ret
xchg
mov
push
das
adc
aad
aad
dec
mov
cmp
je
inc
mov
inc
jge
scas
dec
mov
iret
sub
out
daa
stos
pop
icebp
sti
xor
lret
sti
mov
cmp
in
jge
xchg
loopne
out
pop
or
mov
loopne
pop
pop
xor
popa
bound
push
rcrb
das
mov
data16
xchg
repnz
ror
pop
jle
push
stos
int3
dec
fldt
arpl
addr16
xorb
lock
and
inc
mov
cmpsb
jl
mov
dec
jp
and
insl
xchg
or
pop
sub
xor
push
nop
in
push
ds
dec
xor
ljmp
inc
dec
repz
dec
xor
outsb
mov
jbe,pt
out
cld
jge
pop
sbb
xchg
sbb
cmp
js
cmp
mov
adc
add
jno
sbbb
sbb
jl
xchg
fisubrs
insl
lcall
mov
andb
hlt
movsl
cld
cmp
lods
inc
mov
mul
cli
loopne
cmc
cs
jne
push
test
mov
xor
cmpsl
push
adc
mov
in
aad
rcrb
lods
cmp
adc
es
adc
shll
xlat
push
add
jg
xor
inc
sub
movsb
add
push
test
adc
or
mov
sub
add
aas
and
addr16
push
mov
cmp
test
cmp
imul
bound
das
pushf
repz
or
fsubl
mov
mov
sub
fprem
cld
pop
xor
mov
inc
jae
rorl
out
lds
testl
jmp
mov
fcmove
arpl
sbb
push
xor
mull
test
ror
jo
cmpsl
lock
inc
in
sub
imul
pop
mov
mov
push
cmp
xor
push
pop
cs
xchg
xchg
test
stos
push
in
and
sub
jg
pop
int3
aam
lea
cmp
cmp
rcrl
lret
push
ss
xchg
mov
mov
stc
mov
hlt
inc
xchg
stos
shrd
jbe
aaa
stos
cmp
movsb
mov
pushf
inc
es
sbb
dec
ret
loop
divl
ss
cmp
fsubrs
inc
imul
or
mov
mov
jl
test
sti
lea
sub
mov
pop
inc
adc
adc
mov
xor
jo
sar
es
popa
lods
dec
cltd
fwait
inc
push
inc
popl
mov
xor
out
mov
push
int3
imul
pop
lds
mov
cmp
repnz
inc
xchg
pop
imul
out
divl
cwtl
sar
das
xchg
out
xchg
aam
loope
inc
fsubs
sti
test
xchg
mov
jnp
shl
or
jp
test
xchg
sbb
enter
pop
mov
int
bound
imul
sub
add
test
pop
push
call
scas
xor
pop
std
mov
fildll
lret
adc
enter
nop
and
fnsave
inc
movsl
shr
mov
xchg
fs
ja
push
xor
xchg
call
clc
loopne
mov
mov
cltd
sub
cmc
in
xchg
xor
mov
or
out
movsl
mov
sbb
xchg
in
in
sbb
and
into
movl
fsubp
adcl
loopne
xor
aad
sbb
mov
fwait
orb
xchg
das
jb
out
cld
arpl
rcrl
aas
mov
test
add
push
or
cmpsl
pop
cmp
imul
dec
lods
xchg
aas
mov
movsb
or
popf
int3
int3
decb
mov
aam
dec
add
imul
out
adc
mov
stc
push
inc
mov
cmp
fsubr
xchg
ja
sub
xchg
xor
icebp
mov
push
or
jle
ss
ljmp
outsl
mov
in
pop
or
ret
daa
mov
ret
adc
add
mov
jmp
pop
or
sub
out
cmpsb
sub
popa
xchg
xchg
iret
mov
scas
ljmp
je
sbb
mov
mov
push
xor
lock
mov
mov
xlat
jne
rol
adc
into
outsb
add
test
pop
fstl
pop
nop
add
loop
addr16
lods
lock
sub
sub
adc
lahf
xchg
inc
jbe
xchg
popf
mov
cmp
and
dec
or
movsl
stos
mov
movsb
aaa
sbb
into
mov
outsb
and
shll
pop
popa
sahf
jnp
jb
pushf
fistpll
or
adc
mov
inc
jl
add
xchg
cmp
add
call
rcrb
xor
jnp
push
pushf
or
outsb
xchg
mov
in
sbb
and
or
in
xchg
adc
jae
pop
or
subl
int
ljmp
out
sub
sbb
inc
jl
cmp
xlat
xchg
dec
sub
pop
jge
adc
dec
push
pop
jb
dec
iret
mov
sub
jp
jp
cmp
cltd
ja
stc
pop
pop
fs
jle
jecxz
xlat
add
adc
int
stos
mov
arpl
pusha
dec
aaa
es
push
hlt
jnp
lret
ss
push
sub
sub
cs
mov
inc
push
ljmp
call
xchg
jmp
mov
dec
adc
fwait
lret
stos
cltd
add
addl
push
hlt
push
lea
outsb
xchg
lret
out
nop
notb
ja
mov
mov
xchg
insb
push
pop
leave
sub
and
mov
mov
stc
cld
adc
inc
jp
adc
andl
aas
pop
negl
mov
stos
loopne
cmp
mov
or
jl
pop
xor
enter
and
fisttpl
xor
mov
test
adc
adc
mov
aas
cmp
cmp
daa
inc
cmpb
jno
gs
fildll
sbb
cltd
mov
mulb
fsts
stc
or
ja
and
sub
push
sub
mov
shlb
push
fildll
notb
lock
push
stc
xor
mov
aad
xor
lea
sbb
addl
shl
jne
add
sub
out
data16
jg
call
lods
mov
xchg
mov
outsl
lds
popf
loop
push
push
sub
stos
sbb
fsubl
mov
add
push
and
sub
pop
outsl
push
fcomps
cmpl
mov
add
loope
jae
in
add
clc
das
or
ljmp
hlt
ljmp
subb
imul
test
add
dec
push
and
push
xor
mov
mov
and
or
pop
orb
cmp
mov
pop
mov
pop
loop
out
mov
sbb
xchg
mov
ljmp
xor
pop
out
lock
lret
call
mov
in
jecxz
mov
sub
xor
lcall
cmp
jne
or
shr
sti
dec
repnz
addr16
or
jno
mov
add
cmp
sbb
aam
xchg
repz
or
sub
push
sub
sub
fmuls
out
mov
mov
sub
pop
mov
dec
addr16
out
xlat
xchg
mov
cmp
insb
pop
xlat
into
add
pop
outsl
pop
jmp
sub
xchg
mov
testl
dec
leave
mov
xchg
and
push
lahf
nop
mov
das
mov
xchg
out
jbe
inc
push
andl
or
mov
les
cmpsl
rcll
enter
test
jno
mov
bound
fdivrp
shrb
or
stos
fcmovne
movsb
xor
mov
pop
mov
pop
movsl
push
in
or
cltd
daa
addb
fnstcw
mov
jo
xchg
pop
pop
aad
mov
pop
icebp
sbb
and
in
dec
pop
popa
push
cltd
push
push
push
mov
pop
add
add
mov
mov
in
xor
add
rcr
ret
pop
cmp
fisttps
jg
push
shll
cmpsl
test
ja
sarl
jb
sahf
cltd
lret
inc
test
lcall
sub
int
xchg
mov
jmp
cmpsl
pop
repnz
fs
sbb
sub
imul
les
outsl
in
stos
pop
pop
divl
imul
sbb
lods
ret
xor
xchg
pop
pop
sahf
sbb
cmp
adc
inc
mov
insb
data16
sbb
cld
xchg
jl
cltd
pop
out
fsubs
cltd
pop
sahf
push
and
or
enter
jl
sub
cmc
fstl
lods
addr16
sbb
pop
sub
rorl
dec
test
pop
aaa
xor
jbe
pop
addr16
rorb
cwtl
fprem1
or
and
push
mov
insl
jbe
outsl
lret
bound
enter
or
mov
or
mov
mov
fwait
sbb
rcrl
pop
pop
and
push
xchg
or
movsl
enter
pop
out
aad
add
jp
fadds
mov
mov
cmp
lds
mov
jbe
push
addr16
fdivl
sbb
pop
rol
fsts
lods
lcall
cmp
scas
fsts
push
mov
sbb
mov
lds
inc
rcrl
popf
repz
push
lods
cmp
int3
sti
aad
xlat
aas
push
bound
stc
jl
pop
in
mov
les
mov
sbb
int
mov
sub
jl
xchg
and
xor
stc
push
push
pop
mov
pop
ja
adc
cld
std
cmp
jb
adc
sbb
in
pusha
adc
mov
test
push
aaa
lods
xor
inc
fmuls
mov
cld
mov
out
push
jns
push
cltd
push
sbb
xor
xor
dec
jnp
in
sarl
mov
out
sub
cmp
mov
fildll
idivl
jl
fldt
cltd
push
aas
xchg
aam
mov
adc
push
mov
sub
dec
xchg
repnz
pop
repnz
adc
pop
dec
loope
std
mov
lret
cld
enter
popf
and
mov
les
test
aad
pop
dec
xchg
loope
fnsave
stos
add
pusha
es
mov
out
call
pop
ss
jbe
in
or
push
mov
xor
testl
aam
sahf
mov
insl
adc
ss
add
cs
test
jl
ficomps
dec
mov
aaa
xor
or
andl
sub
xor
pop
lret
push
jnp
jns
testl
pop
mov
scas
in
fsubrl
loopne
shr
rclb
adc
out
inc
stos
into
addr16
inc
jle
inc
cmp
cmpsl
push
addr16
adcb
aad
in
out
sbb
cmp
nop
pusha
or
add
insb
mov
out
out
std
rolb
popa
inc
ret
inc
fdivl
notb
mov
leave
les
jp
pop
sbb
dec
aam
pop
sbb
out
pop
ljmp
icebp
mov
xchg
sub
das
jb
xor
ljmp
lahf
mov
ret
loop
mov
shr
fldt
push
or
mov
xchg
mov
lahf
dec
out
ret
cli
xchg
pop
repnz
xchg
shlb
pop
push
dec
and
pusha
test
push
nop
pushf
dec
ss
add
mov
xchg
add
outsl
je
push
ret
xor
fidivrs
scas
mov
xchg
dec
repnz
jg
popf
insb
in
imul
mov
in
push
aam
mov
adc
cs
push
int
ja
scas
adc
jno
icebp
data16
sbb
pusha
cmp
jl
pop
int
lods
fildll
mov
push
xchg
adc
add
pop
jb
test
shll
sub
nop
pop
add
mov
xchg
push
mov
push
ja
sbb
mov
pusha
ljmp
push
mov
dec
test
in
jo
loop
inc
fadd
jo
aam
dec
lods
fwait
mov
push
sbb
sbb
out
rcl
pop
lret
cwtl
pop
push
pop
jmp
imul
pusha
mov
mov
sbb
push
push
xchg
js
jbe
mov
sbb
pop
pop
bound
sub
cltd
sbb
or
test
in
add
jnp
push
in
lock
dec
cmp
dec
outsl
push
pop
add
movsb
shrl
mov
inc
cltd
jae
icebp
xlat
inc
rcr
inc
dec
cmp
cmc
push
movsl
icebp
in
adc
aaa
sbb
mov
cs
jo
xor
repnz
jmp
inc
mov
lret
dec
gs
jb
ja
lock
aad
adcb
rolb
push
jp
cmc
add
stos
arpl
or
cwtl
xchg
dec
or
lret
movsl
lock
adc
mov
cmp
adc
clc
push
push
pop
outsb
mov
jnp
push
dec
sub
sub
xchg
mov
push
push
shrb
mov
fnsave
cmp
or
mov
lahf
jno
sub
into
lock
into
iret
push
inc
out
aaa
xorl
subw
lret
lods
push
dec
and
jno
push
in
add
cwtl
sub
jecxz
mov
fisttpl
mov
mov
push
mov
inc
add
xor
xor
ficoms
in
subl
hlt
xlat
inc
scas
jne
xor
in
les
arpl
arpl
mov
push
es
dec
bound
inc
aaa
xchg
xchg
cmc
cmpsl
scas
orl
sub
and
stc
ja
or
dec
inc
lods
pop
bound
std
mov
sub
popf
xchg
mov
imul
cmpb
xchg
fsub
mov
mov
pop
repz
xchg
iret
mov
xor
int
enter
movsl
xchg
fidivl
sbb
adc
mov
xorl
dec
and
gs
test
movsl
xor
push
ret
movsb
sub
daa
popf
inc
out
xchg
mov
iret
out
call
xor
cmp
in
out
jge
mov
out
xor
sub
pop
adcb
adc
sub
fisttps
repz
popf
addr16
lds
pop
dec
outsb
jle
loopne
std
mov
rcll
dec
push
lcall
pushl
mov
imul
inc
ret
add
test
sub
and
add
jae
dec
xor
inc
out
inc
imul
aaa
mov
ds
movsb
or
sbb
les
imull
leave
xor
das
into
stos
xchg
out
sub
mov
mov
mov
add
mov
into
mov
ret
rcll
jp
mov
or
ret
mov
pusha
clc
inc
int3
dec
insb
test
fistl
push
jb
xchg
or
xlat
sub
sub
adc
rcrl
adc
cmp
fcomps
test
push
jne
mov
pop
inc
xchg
ja
jge
xchg
jb
jecxz
adc
sub
bound
leave
lock
pop
nop
mov
fcmovnbe
pop
les
or
push
shl
jp
out
stc
lds
imull
test
lahf
out
fcmovnu
out
mov
inc
lods
clc
shlb
sbb
sbb
movsb
stos
scas
repnz
std
enter
cmpb
outsl
xlat
int
roll
dec
insl
mov
das
pop
and
cmp
outsl
jno
inc
pop
icebp
push
popf
jno
gs
mov
push
adc
jnp
fs
scas
xchg
repnz
outsl
jle
ss
sti
lea
fmuls
sbb
xchg
scas
jp
pop
mov
fstpt
mov
or
or
lret
cwtl
fisubrl
out
dec
shll
in
or
aam
es
in
test
leave
xor
je
fimuls
dec
pop
xor
or
repnz
xchg
into
enter
sbb
mov
lea
cli
pop
mov
cmp
cwtl
push
aas
inc
les
dec
es
sbb
icebp
leave
xchg
mov
bound
dec
dec
cmp
cmc
decb
dec
rorl
push
jae
xchg
out
add
stc
mov
test
mov
orb
and
int
cmp
ds
dec
bound
lds
dec
push
ret
popa
out
int3
pop
fsts
mov
mov
or
jp
insl
mov
test
repz
faddl
push
jne
stos
xor
imul
scas
std
repz
stos
gs
sbbl
lcall
jne
in
js
stc
aas
mov
out
out
jae
ds
push
iret
jecxz
mov
ficoms
icebp
adc
call
sbb
aaa
roll
fimuls
xor
sbb
mov
out
sbb
insl
inc
inc
aam
or
jp
pop
mov
sub
insb
jns
dec
in
push
jg
out
inc
inc
roll
test
pop
lret
push
lods
imul
mov
cmp
js
ficoml
xchg
inc
mov
xor
add
ds
out
sub
adc
mov
pop
addr16
pop
mov
adc
mov
insb
mov
push
lret
repnz
sub
jno
out
ds
xchg
cwtl
jl
xor
int3
jno
push
xor
adc
outsl
xor
and
sbb
mov
test
cmp
fsts
mov
adc
call
ja
dec
aad
xchg
add
xor
pop
fcompl
lods
mov
mov
jg
incb
fdivl
movsl
dec
int
repnz
xchg
int3
cmp
sbb
mov
dec
lods
jg
mov
adc
fcmovu
repz
inc
dec
out
scas
xchg
mov
sbb
jae
dec
lea
inc
adc
lcall
mov
sub
iret
cwtl
es
xchg
in
and
sbb
insb
fiadds
inc
or
mov
dec
into
fldenv
insb
sub
aas
mov
lret
int
push
push
add
add
mov
fwait
lahf
or
mov
idivb
sbb
insl
hlt
mov
push
lds
pop
add
and
mov
mov
or
add
jp
call
push
mov
nop
into
xor
popf
jnp
xchg
pop
icebp
jno
mov
out
ds
test
or
mov
jmp
mov
mov
popl
pop
les
adc
or
rcrl
xor
faddl
std
or
pop
imul
loope
push
stc
nop
mov
mov
push
pop
or
or
sub
cmpsl
dec
pushf
mov
adc
adc
out
dec
sahf
daa
xchg
jae
inc
sbb
mov
mov
rolb
lcall
fisttps
fbstp
cmpsb
cs
and
push
cli
scas
lods
lahf
pop
or
mov
cmpl
out
cmp
push
aam
ds
arpl
and
mov
fildl
bound
test
adcl
xchg
jb
fimuls
stos
sub
testb
fs
scas
mov
stc
jno
lahf
notb
pop
movsb
lods
les
int3
xor
jo
outsl
jl
cmpl
in
rorb
popf
scas
cmp
mov
cmp
test
xor
xor
ja
icebp
mov
mov
imul
in
ror
in
mov
rcrb
insb
hlt
push
out
xchg
dec
dec
adc
or
imul
mov
test
testl
pop
loopne
aam
sbb
mov
shll
lret
sbb
xchg
pop
adc
movsl
xor
add
test
mov
mov
enter
mov
or
call
insb
mov
cmp
lret
push
negb
test
jo
xchg
cmpsb
push
cmp
pop
fisttps
add
mov
scas
sub
int
cwtl
movsb
mov
repz
imul
sub
int3
jne
push
dec
dec
ljmp
aam
inc
lods
int
sbb
gs
push
pop
pusha
arpl
mov
mov
ret
out
outsb
je
aam
scas
loopne
xor
cmpsl
arpl
pushf
cmp
ss
cwtl
cmpb
loop
xor
push
getsec
sbb
xor
mov
xchg
rclb
mov
jp
sbb
repz
jne
sbb
inc
scas
push
and
imul
sahf
mov
aad
orb
dec
loop
jge
cmp
fdivs
ljmp
fstpl
loopne
adc
pop
loopne
repnz
les
pop
pop
fidivs
int3
aaa
lret
dec
or
or
scas
mov
in
jno
inc
mov
fldt
ficoml
cli
out
lcall
int
inc
in
mov
sbbl
rcl
xchg
stc
jo
mov
adc
or
je
data16
daa
les
mov
add
mov
pop
adc
adc
lods
sub
sub
xchg
xor
adc
bound
iret
popf
fdivrl
sbbb
mov
push
adc
pop
cmp
stos
rorb
pop
lahf
addb
lret
call
insb
mov
in
lcall
jle
rorl
shrl
repz
or
fmuls
push
mov
xchg
fbld
lret
or
hlt
les
outsl
cwtl
xor
adc
add
movsl
aad
imul
mov
push
mov
mov
je
lcall
lret
and
cmp
mov
mov
and
outsl
sbb
in
xor
sub
mov
das
and
mov
sbb
add
xor
sub
fistps
mov
test
lret
arpl
mov
gs
cltd
scas
mov
jmp
les
scas
test
mov
mov
or
xchg
aaa
mulb
in
lret
cmp
pop
fists
jns
mov
out
inc
jo
clc
repnz
out
xor
cmpsb
dec
mov
pop
scas
fdiv
arpl
jbe
inc
adc
push
jle
sbb
pop
dec
imul
stos
scas
cmpsb
ja
or
dec
sub
stos
movl
in
pusha
jbe
adc
adcb
aam
fisubrs
xchg
push
std
add
call
lock
andl
movsb
cmpsl
inc
push
push
iret
mov
iret
mov
fists
and
mov
fidivl
scas
adc
outsl
fdivs
push
sti
inc
inc
mov
cmp
pushf
mov
cmp
iret
lahf
dec
jnp
inc
out
sbb
sbb
loop
mov
fcoms
pop
dec
fwait
mov
mov
dec
pop
and
repz
lahf
inc
arpl
mov
push
or
mov
jg
mov
out
pop
xchg
cmp
lahf
aad
cmp
xlat
xchg
pushf
mov
ljmp
imul
call
das
push
addl
add
aas
lahf
jp
sub
lods
call
xchg
cld
jecxz,pn
mov
or
fs
scas
sbb
cmp
adc
sub
dec
mov
orb
xor
dec
mov
mov
sub
enter
sbb
push
push
inc
repz
hlt
nop
pushf
popa
adc
inc
inc
repnz
jno
lahf
test
into
hlt
sti
dec
jg
inc
pop
ljmp
lds
push
jne
mov
xlat
push
in
push
lret
jecxz
or
sbb
lcall
int
adc
lock
xor
push
or
adcl
icebp
shr
cld
jmp
xor
or
push
pop
sti
xor
pop
orl
cmp
test
cmpsl
inc
jg
or
test
pop
jne
cmp
cmp
mov
fadds
mov
sub
inc
iret
scas
cmp
ljmp
arpl
lds
cwtl
clc
ja
jno
leave
imul
aaa
jno
popf
xchg
lods
fwait
xor
aaa
loope
push
stc
shrb
jl
fcmovnu
adcb
mov
std
jbe
pop
push
sub
movsl
inc
dec
cmp
pop
push
mov
cmpsl
dec
lret
and
ljmp
enter
out
push
and
clc
stos
adc
jmp
rclb
fsts
adc
mov
test
xchg
stos
out
daa
push
stc
adc
adc
and
push
sbb
gs
repz
add
shll
insl
push
int
aam
stos
add
or
in
dec
dec
inc
sbb
jns
push
hlt
int3
fidivrl
sti
mov
xor
jb
imul
insl
push
pop
add
mov
fists
ja
pop
pusha
and
or
mov
testl
in
add
jge
add
cmpsb
sbb
scas
cmp
inc
adc
lret
bound
jmp
cld
clc
inc
adc
dec
ss
leave
mov
lods
mov
cmp
pop
test
xor
dec
push
mov
and
sub
sbb
out
push
mov
sub
shlb
iret
inc
or
mov
adc
xlat
pushf
and
add
xchg
rcr
xor
push
jb
push
xchg
stos
cmp
or
scas
cmc
mov
movsb
inc
push
int3
jns
roll
jns
pop
add
inc
and
movsb
lahf
inc
sbb
mov
lahf
lahf
add
push
scas
jecxz
into
hlt
mov
sahf
ss
aaa
addr16
stos
jle
mov
add
out
lods
push
mov
xchg
dec
sub
sahf
cmc
mov
cli
xor
in
rcrb
loopne
dec
push
in
popa
in
jle
pushl
mov
sub
lock
dec
mov
imul
ja
stc
sahf
loop
test
sub
test
imul
pop
mov
out
mov
imul
cwtl
stos
jmp
mov
iret
push
loope
jmp
sbb
jnp
inc
movsl
testb
das
pop
mov
cmp
jmp
pop
out
cmpsl
popa
inc
or
jp
dec
imul
dec
push
cld
sbb
push
dec
cmpsl
or
iret
jg
outsb
sub
xchg
mov
outsb
mov
sub
loope
scas
pop
and
andb
xor
into
leave
mov
xor
cmc
jecxz
loop
xor
inc
scas
out
dec
lods
sarb
ficompl
push
mov
sbb
cmp
decb
rcrl
push
rcrl
xor
and
adc
out
mov
jne
cli
pop
icebp
insl
out
pop
repz
pop
mov
test
and
call
mov
dec
push
outsb
test
insl
hlt
cwtl
inc
jne
leave
mov
xchg
insb
data16
gs
and
call
jge
cmc
fimuls
mov
sbb
add
vpaddusb
xor
cmp
int3
ss
xor
xchg
les
pusha
add
out
mov
push
mov
add
roll
adc
xchg
xchg
daa
rol
jne
cmp
sub
movsb
cltd
push
call
push
xor
or
aad
jecxz
daa
or
lods
dec
enter
xchg
fadds
pop
push
lcall
ja
dec
ljmp
cmpsb
loope
jp
cli
data16
ffreep
dec
sub
adc
jl
ret
jne
sarb
push
jecxz
andl
repnz
mov
fsubp
test
sub
mov
push
movsb
mov
rolb
pop
and
or
aad
iret
lahf
cmp
int
gs
cltd
mov
sahf
xchg
jbe
int3
adc
out
daa
adc
int
xchg
adc
push
repz
mov
mov
push
jb
sbb
jmp
rcr
pop
jl
add
and
arpl
xchg
aam
mov
movsl
cmpsl
push
and
lea
and
arpl
mov
adc
shlb
dec
add
or
add
add
pop
test
dec
std
push
xchg
es
orb
nop
mov
ss
xlat
roll
nop
sbb
sbb
test
inc
xlat
mov
jmp
mov
into
ljmp
xchg
rorl
xchg
cwtl
icebp
movsl
loopne
jno
pop
xorb
repnz
inc
scas
mov
adc
stos
push
dec
bound
dec
sbb
push
into
jle
cld
pop
mov
shll
test
pop
iret
mov
lock
les
cmc
ret
add
out
mov
xchg
sub
aas
cmp
jg
into
mov
push
lret
or
cmc
scas
push
xchg
imul
mov
icebp
xor
cmp
xorl
pop
push
xchg
sbb
sub
int3
push
xor
ret
dec
ljmp
push
jo
cmp
rcrb
jno
popa
insl
popf
xchg
mov
sbb
in
insb
xchg
aam
jo
lret
pop
push
sub
imul
mov
add
lret
pop
push
cmp
jg
dec
mov
sar
lock
pushf
mov
mov
les
mov
das
shr
pop
mov
mov
sbb
fnstcw
mov
repnz
xor
xor
jmpw
and
es
stos
add
arpl
leave
das
sbb
jp
pop
mov
or
lea
mov
pusha
clc
rolb
lds
dec
inc
repnz
std
cltd
pusha
jnp
adc
push
sbb
adc
sbb
xchg
les
loop
cs
push
rcll
cmp
call
xchg
fstp
xor
outsl
sbb
aaa
insb
push
push
jp
inc
out
sbb
shl
in
xchg
push
rorl
imul
addr16
adc
xchg
mov
add
xchg
in
xchg
or
arpl
mov
bound
sbb
mov
cmpsl
inc
push
push
mov
xlat
in
pminub
mov
mov
sub
int
es
jae
push
jb
jecxz
dec
ret
test
mov
orl
mov
sbb
popa
imul
sub
adc
push
xchg
cmp
mov
aaa
lret
cltd
sub
lea
sbb
imul
cwtl
aam
fistpl
into
pop
push
sub
adc
data16
adc
test
fs
xchg
ficompl
lea
lds
std
jg
sub
xchg
fcompl
push
or
lcall
fsubrs
testl
fs
push
push
mov
fistpl
ret
test
repnz
sbb
loope
mov
xchg
fldt
xorb
int
fsubs
push
xor
lahf
movsb
mov
jle
adc
mov
push
push
fisubrs
pop
mov
inc
loop
adc
stos
test
xchg
cmp
cmp
mov
int3
ds
add
xor
flds
jno
cmp
test
sbb
xchg
dec
xor
add
ret
pusha
mov
ret
jge
cmpsb
xor
mov
cmp
pop
pop
loop
scas
cwtl
mov
das
sar
xchg
sbb
add
cltd
mov
ret
push
mov
ret
jle
xor
fcmovnu
aam
and
sti
pop
cltd
roll
sub
adc
sti
push
add
jne
xor
xchg
test
cltd
daa
pop
xchg
out
lret
faddl
adc
xchg
outsb
add
inc
or
mov
sub
mov
rclb
xlat
adc
xchg
mov
ret
sub
pop
insb
dec
iret
lahf
jne
push
jecxz
mov
jae
imul
mov
jbe
adc
sub
add
push
push
popf
ljmp
mov
daa
push
cltd
std
sahf
in
fwait
dec
test
sbb
stc
mov
icebp
xchg
xchg
sahf
or
fcmovnb
jl
fwait
inc
jns
les
mov
or
repz
mov
mov
in
cltd
fldl
in
cmp
pop
mov
fisttps
adc
push
sbb
xchg
mov
cmp
mov
lods
xchg
cmp
push
loopne
or
imul
scas
mov
and
push
xchg
in
inc
jle
adc
test
adc
or
add
ds
xchg
testb
daa
xor
dec
mov
mov
lods
mov
cli
xchg
sahf
movsl
lods
and
mov
icebp
pop
faddl
outsl
xchg
or
add
cmp
rcl
and
inc
dec
jmp
inc
adc
add
or
in
jo
das
jns
cmp
mov
mov
xor
and
and
xor
ret
pop
lods
mov
scas
out
push
xchg
test
clc
movsl
call
dec
jecxz
xchg
sbb
ljmp
adc
test
ds
or
cwtl
mov
shll
cmp
decb
mov
push
sbb
sub
push
jne
dec
mov
jl
sub
cmp
lahf
mov
pop
push
popf
fisubl
inc
xchg
push
push
inc
dec
mov
into
aam
cld
mov
andb
sar
xchg
xchg
pushf
adcl
call
add
dec
push
jg
or
enter
and
jle
insb
lods
xchg
add
push
fnstenv
aam
in
mov
push
out
push
shlb
mov
negl
mov
push
push
rcrl
repz
or
dec
xchg
jg
or
jns
mov
lock
ljmp
mov
push
inc
jg
pop
xor
pop
lcall
popa
dec
lret
pop
sub
dec
nop
shrb
inc
inc
ss
int
shl
mov
icebp
mov
pop
jbe
adc
das
es
mov
test
mov
bound
mov
pusha
shl
pop
sahf
sbb
push
mov
outsb
mov
sub
dec
cmp
in
mov
out
stos
sbb
sbb
bts
pop
mov
test
repnz
inc
adc
pop
jg
in
jge
dec
movsl
and
mov
shll
mov
inc
jne
std
jecxz
or
pop
daa
cmp
push
incl
adc
or
daa
fiaddl
dec
xchg
xor
add
cmp
cmp
adc
mov
pop
aas
cld
xchg
pushf
shlb
xchg
ficomps
test
or
aas
add
sub
jecxz
dec
orb
or
loopne
mov
dec
push
push
and
repz
push
jp
mov
push
jp
jne
es
mov
push
test
adc
or
insl
stc
ja
mov
xor
push
push
dec
ljmp
das
rclb
xor
leave
repnz
movsl
sbb
adc
mov
and
das
jmp
mov
into
es
fdivrl
iret
mov
xor
xor
add
and
scas
das
sbb
enter
sbb
mov
push
lods
out
push
ret
out
or
inc
mov
lcall
mov
fbstp
sahf
fs
shrl
scas
push
xor
pop
dec
push
cltd
std
into
lock
mov
repnz
push
je
ss
decl
pop
mov
cli
xor
pop
cmp
movsl
in
xchg
bound
test
data16
idivl
xchg
mov
mov
dec
out
cld
icebp
jmp
dec
stc
mov
mov
mov
fistpl
fucomip
pop
inc
and
dec
push
loope
xor
jl
dec
cli
pop
add
into
inc
lods
loopne
cmpsb
in
xchg
jg
and
icebp
lret
sbb
inc
pusha
andb
xor
push
cltd
pop
pop
sti
stos
push
mov
out
dec
pop
pop
xlat
push
and
cmpsl
or
inc
clc
inc
roll
addl
sub
dec
repnz
or
or
fidivs
repnz
push
js
push
cmc
mov
xor
mov
fidivl
pop
fstpt
xor
shll
shrl
repnz
stos
pop
pop
outsb
mov
or
mov
xlat
imul
leave
jge
scas
decl
stos
test
test
sbb
imul
mov
jg
and
loop
setnp
lea
adc
dec
add
test
mov
arpl
sbbb
mov
push
iret
ret
xchg
jns
stc
pop
mov
fisttps
test
cmp
lcall
clc
xor
pop
adc
jns
dec
mov
iret
jo
or
adc
outsb
and
sbb
mov
subb
xchg
push
jl
pop
inc
rorb
push
lods
mov
adc
mov
fisttps
cltd
pop
stc
mov
adc
pop
outsb
adc
ret
inc
push
adc
jl
iret
repz
fstpl
cmp
inc
lret
stos
pop
push
mov
fstpt
cmp
fwait
xchg
sub
gs
push
fidivrs
and
lods
jae
mov
and
cld
insb
inc
xchg
aaa
push
popa
insl
ret
ljmp
shl
ds
lcall
jmp
test
jmp
push
push
push
dec
shlb
fwait
enter
cmpb
mov
movsl
js
int3
cmpsb
fcompl
push
pop
and
mov
and
popa
and
test
addl
cmp
lods
je
xchg
js
mov
mov
adc
popa
pusha
lods
sbb
outsl
dec
repz
xor
or
stos
xchg
xchg
xchg
aaa
es
sub
inc
aad
movb
pushl
out
arpl
rcll
xchg
cmp
mov
inc
jmp
add
out
popa
cmp
loop
das
pandn
push
push
cmp
pop
cs
mov
inc
bound
sbb
push
mov
lea
rcll
jg
aas
int
push
icebp
xchg
add
inc
mull
sub
stos
push
sub
mov
cwtl
mov
push
add
cmc
xchg
sti
add
xchg
repz
adc
shll
sbb
cwtl
and
xchg
leave
xlat
and
xchg
lea
jmp
cmp
sarb
pop
iret
cmp
test
sbb
or
repnz
xchg
mov
dec
mov
stos
cmpsb
lahf
pop
add
outsb
mov
push
mov
mov
push
in
xor
stos
ja
push
mov
lret
in
mov
sbb
out
adc
jg
push
sbb
andb
adcl
push
repnz
cmpsl
pop
test
mov
rorl
cwtl
xor
cmpsl
and
fbstp
mov
mov
ja
dec
popa
mov
cmp
push
xor
mov
scas
push
pop
lcall
out
out
sbb
mov
aad
mov
mov
push
aas
stos
std
stc
inc
fucom
mov
adc
test
ss
add
adc
mov
stos
pop
mov
sbb
mov
pop
push
lods
push
pusha
mov
sbb
test
jne
dec
dec
out
xchg
dec
sahf
bnd
add
push
add
cmp
dec
or
jecxz
cmp
repnz
mov
push
and
idivb
jmp
icebp
add
arpl
cltd
ss
ret
ret
sub
adcl
push
mov
xor
idivl
sarl
aas
inc
pop
iret
sbb
xor
jl
in
lret
push
lret
inc
imull
sbb
in
je
inc
or
mov
pop
dec
lea
mov
in
outsb
pushl
push
rcrl
sbb
rcrb
mov
mov
mov
inc
fidivrl
pop
sti
fiadds
ds
jg
test
mov
sbbl
jbe
mov
ds
stos
jecxz
test
push
ret
std
std
xor
inc
test
sbb
inc
aad
hlt
ss
not
dec
push
int
mov
xor
push
jno
cltd
loopne
pop
dec
adc
dec
lods
jbe
ss
or
jae
lock
mov
mov
jbe
mov
fwait
xchg
mov
notl
pop
adc
xchg
sub
addl
in
fs
shrd
sub
stos
adc
pop
jge
mov
push
cwtl
xor
ret
addl
jb
mov
cmc
inc
in
hlt
and
sub
sbb
push
stos
stc
stos
mov
cs
push
inc
cmc
push
cli
adc
add
fbld
dec
jo
pop
scas
movsl
rclb
pop
orl
mov
push
ja
test
mov
inc
adc
mov
aaa
test
add
dec
scas
test
ret
add
orb
in
sub
repnz
mov
adc
or
mov
adc
mov
jbe
daa
jo
mov
in
adc
and
dec
jl
enter
mov
add
sbb
jns
mov
push
bound
fsubl
pushf
mov
pop
xchg
mov
mov
mov
je
jg
dec
mov
xor
push
leave
cmpb
mov
cs
xchg
pushf
jno
push
ss
jb
push
jl
sti
mov
repz
sbb
xchg
stos
inc
ss
pusha
xor
ljmp
sahf
or
mov
push
xor
scas
sarl
and
xor
mov
popa
mov
push
xchg
sbb
push
shll
cmp
dec
add
insb
cmpsl
mov
pop
sub
leave
xchg
lods
idivb
ljmp
mov
stc
outsb
jne
push
jae
xor
push
xor
fsubl
movsb
inc
push
add
mov
push
jns
cltd
xor
ficoms
in
lcall
jbe
xlat
cltd
int3
push
cmc
xchg
lods
xchg
pop
lea
les
xchg
xchg
inc
js
or
fiadds
xchg
in
mov
mov
sbb
push
dec
mov
data16
and
enter
sub
ret
sub
adc
pop
mov
cmp
imul
dec
incl
jmp
arpl
jbe
lods
leave
adc
sbb
dec
and
lock
add
fcomps
test
fidivrs
test
inc
outsb
xlat
sub
scas
outsb
movsl
mov
cmc
mov
in
cmpsl
mov
inc
shr
bound
aaa
outsl
cmp
push
jbe
pop
rcll
ret
mov
adcl
add
ret
dec
stc
sub
mov
scas
out
push
repz
push
rolb
dec
pop
xchg
xchg
outsb
inc
lods
in
adc
xchg
lods
xchg
push
xchg
jae
sbb
arpl
lds
stc
lcall
mov
jge
xor
aad
push
cld
cmpsb
mov
int3
pop
fstps
and
mov
int
test
cmp
sahf
out
test
xchg
xor
popf
in
jnp
adc
out
or
xor
jbe
orb
inc
and
xchg
and
addb
mov
jge
std
adc
inc
add
les
mov
mov
call
scas
sub
fstps
jle
rorl
pop
jl
fwait
and
jmp
xchg
cld
pop
rcl
sbb
loopne
jecxz
xchg
push
jne
movsl
movsb
push
ret
mov
pop
xor
inc
xchg
imul
shl
cmp
adc
sub
fisttpl
data16
sub
pop
pop
fldt
inc
cld
jns
xchg
cmp
xor
cwtl
mov
test
lods
aas
dec
mov
cmp
imul
cltd
sbb
and
fldt
jge
mov
out
cmpsb
pop
push
lret
xor
ficompl
jmp
sub
sarl
in
mov
or
fadds
inc
fsts
mov
inc
test
sbb
ret
xor
cltd
sbb
adc
sbb
lods
enter
adc
test
push
and
mov
xor
mov
xor
adc
mov
arpl
push
fs
push
mov
out
pop
mov
dec
jnp
mov
adc
inc
test
hlt
xchg
inc
dec
movsb
xchg
mov
xchg
pop
jno
push
sub
add
xchg
sti
mov
jmp
and
popa
iret
dec
je
jge
sti
and
dec
jns
cmp
fnstenv
pushf
inc
jb
push
scas
xchg
sbbb
or
lcall
lock
adc
dec
jge
push
clc
fidivrs
repnz
loopne
inc
mov
adc
rorl
sbbl
cmpsl
add
jb
shlb
lds
outsb
fwait
mov
pop
jge
push
stc
mov
xorb
add
mov
push
ss
xchg
or
mov
jns
sub
dec
ljmp
jno
pop
sub
fildl
mov
faddl
sub
fstl
mov
mov
aaa
push
mov
and
out
mov
dec
ja
test
dec
sub
add
shlb
std
stc
dec
sbb
push
rorl
cmp
fucom
mov
aaa
xchg
dec
sub
test
mov
pop
fs
pop
jge
shll
icebp
add
inc
jns
dec
or
pop
mov
cmpsl
out
adc
push
cmc
add
adc
fidivs
pop
add
jl
punpcklwd
push
cmpsl
sub
aam
ficompl
fnstsw
cwtl
lods
bound
xor
pushf
or
shlb
cmc
cmpsl
int
push
dec
lock
sbb
cli
fsub
test
push
inc
and
push
rorb
stc
push
and
push
nop
incl
push
jb
and
cwtl
insb
xor
adc
je
aad
xor
pop
test
xor
inc
jecxz
mov
cwtl
push
jns
sub
repnz
xchg
jnp
idivb
aas
lods
jns
adc
pop
inc
cmpsb
push
cmp
add
sysexit
test
xchg
jmp
mov
pop
and
loopne
sub
and
jge
jmp
dec
mov
inc
sub
pop
fiaddl
pop
lock
sbb
mov
add
and
out
scas
pop
js
jb
mov
lock
lret
insb
insb
or
and
stc
mov
xchg
pop
stc
jp
jb
mov
dec
movsl
rol
gs
iret
fsubr
jp
call
sbb
inc
in
pushf
mov
movb
lods
adc
mov
xchg
mov
jmp
adc
test
sbb
pop
subb
and
push
mov
mov
sbb
mov
clc
imul
leave
push
cmp
push
lcall
dec
fisttpl
pop
fstpl
pop
ja
cmp
loop
add
loop
jno
sbb
aad
cmp
repz
push
cltd
add
push
rol
popf
fstl
test
add
outsb
pop
mov
mov
test
sub
enter
adc
mov
xchg
and
or
ljmp
pop
jg
jne
pop
ss
outsl
arpl
ret
pop
fs
fidivrs
push
cmpsl
push
idivl
pushf
push
enter
dec
rclb
mov
cmp
sbb
mov
xlat
js
dec
sub
adc
sti
sub
jp
out
xor
fstpt
jnp
leave
js
xchg
dec
jbe
inc
stc
pop
fidivs
add
je
popa
cmp
shlb
mov
test
mov
inc
mov
mov
popfw
xchg
xchg
push
in
mov
imul
std
pop
mov
out
cmp
les
xlat
xor
rcll
shll
jp
aaa
dec
xlat
xor
adc
arpl
xchg
or
push
je
das
das
fsubr
cmp
mov
adc
cli
enter
jne
push
xchg
push
imul
ret
jns
push
mov
xchg
pop
push
inc
inc
stos
test
jp
loopne
in
ljmp
cmpsb
mov
mov
pop
and
dec
scas
lret
scas
xor
iret
insl
loop
fwait
and
loopne
mov
xchg
push
imul
aas
enter
js
adc
pop
repz
cmp
or
and
dec
mov
stos
mov
mov
outsl
mov
clc
mov
mov
and
cmpsb
cmp
scas
fucomip
cmp
mov
pop
push
lds
inc
fisubrs
lock
daa
xchg
imul
mov
mov
in
adc
xchg
cmp
loopne
lea
pop
ss
shlb
shll
repz
out
in
jns
in
mov
std
mov
mov
cld
fisttpl
clc
xor
shrl
xchg
jne
mov
or
pop
fwait
outsl
das
imul
imul
stos
jno
hlt
inc
xor
popa
enter
inc
jl
icebp
lret
and
xchg
add
popa
mov
sub
mov
addr16
push
sbb
into
adc
rcrb
jns
mov
lcall
shl
bound
mov
shlb
pop
rcrb
push
push
inc
mov
lods
jns
out
jbe
out
stc
negb
sub
loop
or
mov
jne
xchg
mov
adc
enter
and
mov
push
jns
out
js
xchg
dec
movsb
ss
xchg
cmpsl
cmp
testb
xchg
xor
pop
jns
dec
inc
mov
repnz
pop
ret
leave
mov
ss
add
dec
xor
test
sahf
ficoml
std
addl
sbb
push
fldt
jge
lods
xchg
dec
mov
or
pop
sub
repnz
fwait
lahf
daa
mov
sbb
cmp
mov
int
pop
xchg
mov
and
pusha
loop
stc
int
xchg
push
jae
inc
cmc
or
add
sahf
push
xchg
push
dec
mov
pop
adc
mov
repnz
dec
adc
sbb
stos
aam
mov
push
xchg
push
cs
lock
dec
push
pop
xchg
push
jp
xchg
push
mov
cmpb
jb
popf
and
mov
hlt
jle
iret
xchg
xor
daa
pop
arpl
add
insb
insb
and
dec
or
inc
loopne
fnsave
out
adc
ficompl
push
inc
mov
ret
xlat
scas
push
jecxz
pushf
inc
ljmp
pusha
inc
jno
rcll
arpl
xlat
jb
adc
nopl
sub
test
push
test
imul
add
add
daa
sahf
stc
jmp
xchg
andl
jmp
or
push
inc
scas
hlt
arpl
in
sbb
out
leave
xchg
subl
adc
jb
outsl
mov
xchg
stc
pop
dec
imul
adc
in
inc
hlt
cmpsb
adc
mov
jle
repnz
sbb
pusha
test
int
nop
jg
adc
insl
divl
out
xchg
popa
mov
sti
fisubl
lret
shrl
and
mov
sbb
imul
pop
loope
mov
testb
ret
sub
sbb
lds
add
sbb
repnz
push
dec
jge
es
dec
and
test
sbb
sbb
lcall
add
jle
mov
dec
jmp
fldenv
pop
cmpl
clc
jae
scas
mov
stos
pop
jno
sbb
pop
xor
mov
xchg
jg
sbb
adc
sub
lret
pop
popf
dec
inc
jg
or
push
mov
xor
dec
xchg
xchg
loopne,pt
mov
fdivl
mov
lahf
imul
ss
gs
mov
xor
cmc
sbbl
mov
nop
and
push
test
mov
jnp
repnz
cmc
xchg
in
iret
lea
andb
xchg
mov
and
xchg
and
test
lock
jp
mov
mull
addr16
pop
mov
imul
jae
outsl
pop
std
movsl
jo
xor
mov
push
inc
ret
sbb
or
gs
int
ret
ja
lds
imul
fwait
jnp
stos
ljmp
bound
shrb
push
push
or
push
fstp
cs
push
call
rclb
dec
ret
pop
cmc
daa
pop
mov
test
gs
mov
mov
inc
aas
in
jne
fisttpll
adc
stos
or
xchg
sbb
pop
sub
cmp
mov
inc
clc
jns
pop
and
loopne
sahf
out
inc
mov
or
cmpsb
push
mov
xor
xor
cmp
xchg
pushl
insl
icebp
jns
mov
mov
and
std
push
dec
into
dec
cwtl
outsb
add
out
adc
sbbb
ja
inc
pop
movsb
push
test
pop
add
inc
js
testb
ja
cs
aaa
jge
sub
fs
push
mov
outsl
scas
push
inc
addr16
lret
mov
mov
mov
sti
bound
push
fidivrs
jecxz
mov
cs
add
push
lock
adc
mov
xor
inc
xchg
mov
mov
inc
imul
push
push
push
xlat
mov
lret
sbb
aam
xchg
push
sbb
sub
lcall
inc
insl
in
or
test
xchg
stos
cmp
mov
test
adc
jne
popa
cmpsl
xchg
scas
adc
lods
aaa
cmp
fstpl
icebp
pop
fnstenv
lahf
ss
scas
loopne
loop
xor
sub
adc
sub
or
cld
scas
ljmp
dec
dec
push
shrl
aam
inc
subb
add
mov
cltd
and
aas
mov
and
mov
xchg
cmpsl
sub
mov
cwtl
lret
xor
xchg
push
sub
mov
dec
mov
push
rcrb
mov
subb
and
pop
daa
inc
ljmp
xor
add
notb
cmp
aas
mov
lcall
shlb
jle
dec
shrl
stc
inc
adc
fmull
shl
add
jne
nop
jne
lret
sbb
jo
sahf
inc
das
cmpsl
mov
in
xchg
into
cltd
fdiv
pop
arpl
dec
pushf
sti
ficompl
push
push
xor
mov
leave
cs
inc
mov
inc
and
shll
test
inc
in
mov
clc
out
add
pusha
in
faddl
inc
pop
popf
or
or
xor
sahf
pop
call
push
insl
jge
int
in
ret
outsl
fsubr
popf
sbb
pusha
ficomps
sbb
add
mov
loopne
mov
es
mov
into
cltd
lock
or
rorl
iret
mov
call
cmc
aad
xor
mov
lcall
loopne,pn
jo
lahf
xlat
jecxz
push
or
and
aam
cmp
or
sub
push
jmp
sub
jne
imul
fdivp
loope
xor
test
push
xchg
sbb
cld
aam
push
add
in
aad
arpl
xchg
push
sub
hlt
flds
sahf
popa
pop
cmp
mov
das
mov
imul
outsb
shll
add
ja
movsl
hlt
ljmp
cwtl
ret
and
movsb
dec
packsswb
lret
cs
je
adc
pop
mov
inc
push
mov
sub
add
iret
fldt
pop
mov
cwtl
ficoms
cmpsl
sarl
insl
mov
pop
icebp
sub
adc
xchg
test
aam
aam
pop
add
and
sub
dec
dec
push
mov
loopne
pop
test
test
idivb
mov
xchg
out
outsb
inc
add
mov
in
in
xor
sub
or
lret
sbb
incl
and
into
pop
cmc
lods
or
repz
lcall
mov
sub
leave
movb
pop
cwtl
gs
pop
fdivs
fmul
mov
mov
push
lea
dec
inc
add
loopne
negb
sub
outsl
ror
add
idivl
ja
push
jl
movsl
scas
fs
leave
add
adc
inc
jno
pop
mov
punpckhwd
cltd
dec
fstpt
lret
cmpsl
jg
rcrb
cmp
in
nop
cmp
jne
mov
lods
push
adc
sbb
aad
mov
cmp
adc
cmc
and
idiv
push
xor
test
mov
insl
cwtl
test
dec
xlat
sub
push
xchg
enter
cmp
xor
pop
fsubr
lea
ret
mov
test
jg
lret
sbb
daa
pop
cld
mov
mov
ret
cmp
outsb
ret
das
int3
pop
sub
ret
dec
jnp
xor
inc
xchg
fistl
rcl
pop
ret
ret
popa
gs
lret
sbb
jbe
and
pop
ret
or
in
jg
sub
xchg
xor
xor
es
stos
mov
sub
sbb
push
cmp
stos
inc
xor
xlat
cmp
in
je
jnp
push
mov
ljmp
mov
mov
or
mov
es
mov
movl
es
dec
mov
sahf
xchg
aam
popa
scas
jmp
push
adc
lods
and
cmpsl
dec
imulb
push
out
pop
fmuls
cmpsb
cmp
out
jl
sub
lds
xchg
mov
xor
incb
test
test
xchg
and
ds
sbb
xchg
xor
and
test
mov
cmp
mov
push
icebp
out
mov
push
mov
je
clc
scas
test
divb
jns
push
adc
rcrl
mov
ss
jmp
sub
out
inc
mov
add
push
sub
or
cwtl
xor
mov
and
leave
pop
lcall
lcall
dec
mov
notb
add
outsb
adc
push
arpl
movsl
cmp
push
insl
ret
jle
mov
or
stos
hlt
fdivrs
repnz
and
xor
outsb
ss
adc
jbe
push
xchg
dec
ret
mov
arpl
dec
lods
cmp
repnz
fldenv
sbb
test
shlb
adcl
outsl
pusha
mov
pop
adc
loop
dec
out
int
xor
pop
add
fcoml
push
movsl
cmpsb
mov
neg
sbb
sbb
js
xor
pop
push
adc
push
icebp
ss
add
sbb
popa
sbb
inc
jne
cmpsl
bound
stc
test
div
fstp
mov
insl
cld
inc
sbb
pop
dec
adc
jns
in
add
aaa
fstpl
and
in
out
push
xor
in
xchg
jo
or
inc
int3
in
and
mov
sub
clc
add
pop
in
xchg
outsb
adc
jle
inc
int
out
push
ret
xchg
pop
jle
cmp
inc
push
mov
out
mov
sbb
jmp
subb
xor
add
std
addr16
call
icebp
dec
data16
insb
mov
ds
push
and
xor
or
sbb
in
or
sbb
lods
in
sti
and
std
int3
sub
or
inc
adc
jmp
xor
inc
test
mov
mov
inc
xchg
xor
fwait
pop
lods
cmp
bound
xchg
xchg
inc
pop
std
imul
int3
out
adc
xor
test
out
popa
add
je
dec
aas
dec
jns
xchg
push
mov
dec
mov
inc
mov
pop
repz
sarb
inc
les
cmpsb
and
aaa
and
outsl
xchg
xlat
lcall
mov
jo
cmp
mov
mov
repz
lcall
add
fnstcw
xchg
pop
mov
cmpsb
dec
inc
and
pop
xchg
mov
push
and
add
sbbb
mov
insb
shrl
jo
pop
testl
xor
inc
dec
jg
cli
push
sti
push
repz
fmuls
jp
aas
les
bound
cmp
orb
inc
xor
add
test
add
push
rcrl
push
bound
jge
and
xchg
sbb
idivb
cld
into
fnstenv
xchg
mov
stos
sarl
ret
xchg
sbb
add
inc
fdivs
loopne
ret
testb
pusha
ss
xchg
pop
ss
stos
jno
push
adc
sets
fidivrs
inc
or
bound
movsl
mov
cmpl
out
sti
sahf
loop
jno
inc
xor
dec
add
popf
cmp
push
ljmp
in
rol
es
nop
and
sti
lods
test
fwait
rcrb
loop
fistpl
mov
sub
push
push
lds
jne
inc
repnz
aam
sbb
loope
repnz
ret
sbb
xor
mov
mulb
clc
lods
sbb
data16
lcall
fld
aad
mov
jae
or
jnp
or
sbb
das
cmp
repz
lds
lods
jnp
ret
iret
decb
shl
or
int
mov
mov
outsl
push
xchg
outsb
lcall
xchg
dec
adc
push
xor
bound
insl
cld
mov
jae
mov
pop
sbb
xchg
dec
jae
mov
mov
shr
bnd
xchg
sbb
addb
adc
mov
fnstsw
ret
popa
lahf
aaa
or
orl
push
add
test
or
or
dec
mov
and
stc
dec
dec
jae
hlt
sbb
mov
loop
fwait
clc
push
loopne
xlat
imul
jmp
insl
mov
decl
cmp
and
mov
fbstp
sub
imul
xchg
xor
pop
fsubrs
jnp
or
mov
xor
xchg
gs
movsl
add
inc
dec
sbb
mov
rcll
inc
arpl
jge
adc
sbb
xor
int3
pusha
add
push
push
cld
mov
jle
jb
inc
jecxz
xchg
jle
dec
fbstp
and
sbbl
ljmp
out
sahf
jg
lret
jg
leave
adcl
adc
js
aam
leave
mov
shlb
pop
movsl
inc
mov
loope
pop
cmp
adc
push
or
add
cwtl
imul
movsl
cmp
inc
mov
mov
push
int3
adc
adc
add
dec
pushf
mov
lock
scas
dec
inc
xchg
fnstcw
push
sbb
mov
addl
stc
movsb
cmp
mov
add
loop
in
lea
pop
pop
loopne
mov
bound
fs
or
pop
sarl
jg
ljmp
or
adc
jecxz
adc
add
fidivrl
test
imulb
negl
push
in
pop
adc
jge
movsl
mov
mov
test
subl
dec
ds
out
dec
push
lea
or
cmp
fstpl
out
sub
jl
out
cld
mov
fmul
and
xor
sbb
push
cwtl
clc
les
fs
xchg
out
mov
icebp
sub
mov
rcrb
xorl
decb
inc
fwait
iret
dec
mov
insb
icebp
or
cmpsl
sbb
fs
jecxz
cltd
jl
pop
xor
adc
dec
sub
ljmp
pop
mov
mov
aad
and
lds
fadd
int
jl
leave
sbb
mov
loop
nop
lods
mov
repnz
pop
or
in
movsb
fsubrp
mov
pop
roll
ds
xor
les
cmpsl
sbb
fstpl
in
sarl
or
fsubrs
lcall
mov
data16
cmp
call
rorl
fiaddl
aaa
lods
int
jno
scas
add
sarb
and
jg
pop
or
pop
inc
xchg
rcr
cmp
sbb
mov
mov
adc
imul
mov
push
mov
enter
sub
dec
push
std
and
sbb
mov
mov
xor
dec
cld
add
ret
test
xor
movsb
mov
xor
inc
or
mov
fs
add
jns
mov
sub
pop
in
fiadds
rclb
insl
xor
repz
sub
imul
outsb
out
movl
ss
cld
rcll
test
dec
xchg
jb
sti
outsb
jne
inc
dec
je
leave
jp
adc
das
mov
loopne
mov
aam
js
xor
push
push
clc
fs
mov
xor
scas
dec
fldt
cli
insb
testb
loop
inc
jg
dec
adc
or
pop
ds
leave
mov
outsb
adc
into
sub
xor
pop
stc
adc
cmp
idivb
cmp
faddl
dec
jb
inc
enter
sbb
push
int
arpl
xchg
mov
xor
jne
sarb
rorb
jp
jle
pop
test
jecxz
mov
cltd
mov
les
xor
xor
in
cwtl
in
cmc
pop
dec
xlat
mov
imul
out
dec
mov
dec
mov
jmp
sub
push
mov
push
cwtl
xchg
in
inc
sub
leave
cmpsl
outsl
jns
cmp
add
xchg
jecxz
mov
xchg
fdivl
add
mov
scas
aad
loop
movsb
outsb
pop
dec
sahf
adc
mov
mov
mov
mov
cmp
cmp
cmp
dec
fdivs
mulb
pop
sbb
push
aas
mov
sbb
push
lock
dec
pop
in
fwait
adc
fildll
js
push
pop
int
in
inc
add
popl
jb
pop
sub
popa
or
je
or
jl
sub
dec
in
mov
sub
push
mov
cmp
lds
add
mov
jle
or
mov
lods
dec
addb
ficoms
xchg
sub
into
sub
aad
xor
fidivl
sbb
cs
xor
pop
lods
add
or
mov
jbe
or
outsb
dec
clc
cmp
xor
aas
sbb
cwtl
push
ds
jne
push
imul
insb
sbb
pop
cltd
aam
jp
sarb
pop
outsl
sub
pop
iret
sbb
mov
and
sbb
ljmp
sbb
lcall
cmpsl
ja
or
in
sbb
xor
fdivrs
mov
sbb
mov
or
repz
pusha
mov
stos
out
or
fldl
pop
xor
ss
insl
ret
incl
ljmp
cmpsb
jae
mov
mov
inc
xor
add
cmp
jns
das
pop
pushf
loope
lcall
jl
sahf
movsb
pop
and
xchg
mov
mov
jne
or
loope
jmp
adc
jns
inc
mov
push
mov
in
mov
call
fimull
sti
aam
add
jb
pop
push
cmp
popf
push
pop
jmp
cmp
add
imul
shll
subl
ret
jae
jle
dec
sbb
in
or
mov
push
xchg
jge
js
add
fisttps
ja
mov
pop
lock
out
xor
pop
arpl
fnsave
inc
leave
mov
xchg
in
fadd
mov
shll
mov
test
imul
xchg
movsb
jmp
dec
dec
mov
mull
sbb
adc
or
lea
cmpl
and
pusha
gs
jge
mov
lds
or
pop
test
mov
lds
lret
sbb
push
sub
inc
stos
outsl
fwait
scas
push
dec
jmp
inc
fs
and
int3
sbb
jno
vshufpd
nop
repnz
fisubs
incl
xchg
arpl
mov
sub
lds
lahf
mov
lahf
jno
out
mov
adc
mov
repnz
mov
xchg
mov
std
mov
jae
inc
loopne
pop
add
notb
das
leave
mov
stos
pop
out
pop
xor
xchg
fisttpl
aas
aaa
je
or
xor
popf
enter
scas
inc
xchg
in
xchg
stos
jns
or
xchg
and
outsb
insl
je
and
cmp
adc
dec
adcb
aam
xor
insl
data16
sbb
push
cmp
push
scas
cltd
loope
adc
shlb
int
stos
sbb
stos
adc
jg
jnp
movsl
cmpsb
and
mov
mov
jb
xlat
mov
add
mov
mov
sahf
xor
and
sbb
lods
adc
push
int
cmp
mov
jge
mov
in
push
push
mov
pop
and
out
ret
cwtl
or
out
sbb
pushf
std
int
gs
mov
test
outsl
and
xlat
xlat
fwait
rorl
adc
cmp
dec
push
pop
mov
xchg
jecxz
pop
pushf
out
mov
add
adc
inc
int3
sub
mov
mov
and
push
push
jnp
jno
cmc
fwait
add
mov
mov
rolb
add
filds
xlat
loopne
outsl
in
icebp
sub
xor
sbb
inc
pusha
cmpsb
adc
xchg
dec
xor
cli
cmp
lret
loopne
xor
dec
iret
xor
sub
push
add
hlt
in
inc
mov
xlat
mov
jo
in
inc
or
daa
je
xor
cmp
stos
test
sahf
addr16
pop
dec
add
jno
outsl
mov
jmp
xchg
dec
adc
movsb
stos
dec
jb
rorl
cmc
bound
icebp
outsb
mov
pop
leave
mov
inc
push
pop
xchg
jp
pop
rclb
call
repnz
sub
mov
ret
hlt
out
in
lahf
or
fwait
push
mov
xchg
sub
cs
jae
loopne
loopne
mov
sbbl
pop
or
adc
dec
call
test
jecxz
int3
jecxz
gs
push
aam
xchg
test
ficoml
inc
push
aaa
sbb
xchg
test
jl
out
fucomip
xchg
out
icebp
fsub
iret
jo
inc
xor
or
scas
insl
lock
xchg
pusha
fsubs
ss
out
shlb
cmp
xchg
mov
repnz
adc
mov
xchg
mov
cmpsl
ud0
and
test
jbe
inc
jle
add
sbb
loop
popa
add
enter
pop
mov
inc
imull
jecxz
cli
adc
adc
xor
fdivl
dec
test
jecxz
push
addr16
pop
test
inc
subl
add
rorb
add
out
adc
sbb
cmp
fscale
adc
push
sbb
pushf
bound
mov
cmp
and
mov
push
jmp
mov
mov
fsubrl
pop
dec
rcll
adc
pop
xchg
inc
arpl
fs
js
add
mov
jecxz
jl
push
dec
pop
jno
jo
xor
and
pop
jo
loop
ficompl
mov
addr16
push
es
sub
or
lds
mov
cmpb
subb
andb
inc
dec
icebp
cwtl
xchg
mov
jg
iret
fs
jbe
lea
pusha
pop
mov
rcll
adc
loope
je
cmpsb
js
cmp
mov
mov
repnz
fistps
jno
sbb
pop
jb
push
mov
jmp
mov
stos
fcomp
pop
mov
das
popa
loop
aam
jae
adc
mov
test
or
adc
shrb
xor
outsb
minps
mov
icebp
mov
insl
mov
mov
insb
daa
pop
adc
pop
xlat
jle
mov
sbb
xor
fisubrl
bound
insb
inc
add
mov
fnstcw
stos
clc
sub
xchg
js
aas
add
dec
add
dec
add
xor
adc
dec
add
xor
xor
add
add
pusha
cmpsl
cmp
add
add
add
or
add
add
push
add
addb
add
cwtl
add
addb
add
add
add
sbb
add
xor
add
add
add
xor
add
js
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
add
add
addb
add
add
addb
add
or
add
and
add
pusha
cmpsl
cmp
add
add
or
add
push
or
cmpb
add
push
add
subb
push
or
addb
add
pushf
or
xorb
add
mov
add
add
add
rorb
add
fimuls
add
add
add
add
add
inc
add
addb
add
pusha
cmpsl
cmp
add
add
add
add
clc
or
sbbb
addb
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
sub
add
mov
sub
add
mov
sldt
mov
sldt
rolb
sub
add
call
sldt
add
add
sbb
add
xor
add
dec
add
add
pusha
add
add
js
add
nop
add
add
test
add
rolb
add
add
add
lock
add
or
add
and
add
cmp
add
push
push
add
push
sldt
addb
addb
add
cwtl
push
add
pusha
cmpsl
cmp
add
add
add
add
adc
xorb
add
ss
and
add
clc
push
add
pusha
cmpsl
cmp
add
add
add
pop
add
jg
add
pop
add
sub
add
inc
pop
add
pop
pop
add
jo
add
mov
add
mov
add
add
cmp
add
add
add
add
push
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
cmp
add
add
add
add
add
add
push
or
add
add
add
cmp
add
add
add
add
add
add
pusha
or
add
add
add
cmp
add
add
add
add
add
add
jo
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
orb
add
add
add
cmp
add
add
add
add
add
add
nop
or
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
mov
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
add
add
cmp
add
add
add
add
add
add
rorb
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
loopne
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
add
add
cmp
add
add
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
adc
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
add
mov
or
xor
add
in
or
xor
add
sbb
add
dec
mov
add
andb
add
add
call
add
add
add
add
add
insb
stos
or
rolb
add
cmp
or
rolb
add
or
or
rolb
add
fsubrl
add
lods
mov
add
add
add
add
add
add
add
add
add
or
call
add
add
add
add
or
test
add
lods
les
add
add
add
or
in
add
in
or
in
add
add
leave
or
js
add
dec
int
add
rorl
add
add
add
add
movsb
rorl
add
add
xlat
or
add
add
adc
or
enter
or
call
add
add
add
add
fisttpl
add
add
add
add
js
or
faddl
add
push
loop
add
add
add
add
in
in
add
add
clc
jmp
add
jl
or
mov
add
sub
or
sbb
add
add
add
add
add
add
add
or
sub
add
nop
stc
or
mov
add
add
add
add
or
mov
add
aam
or
les
add
cwtl
add
sbb
add
mov
or
jo
add
and
add
inc
or
add
add
or
adc
add
xor
or
adc
add
inc
adc
adc
add
pop
adc
adc
add
insb
adc
adc
add
adcb
add
add
xchg
adc
adc
add
xor
or
adc
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
inc
add
inc
add
dec
add
inc
add
inc
add
dec
add
add
inc
add
dec
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
or
inc
add
add
add
push
add
add
add
add
add
inc
add
dec
add
push
add
dec
add
push
add
inc
add
dec
add
push
add
add
inc
add
dec
add
inc
add
dec
add
inc
add
or
add
dec
add
inc
add
push
add
push
add
push
add
add
add
inc
add
dec
add
inc
add
dec
add
cmp
add
in
sbb
and
jne
fildl
nop
or
insb
stos
bound
sub
dec
cli
dec
std
cld
inc
cmp
sbb
mov
lahf
inc
inc
inc
icebp
test
fstl
pop
pusha
andl
cmp
adcb
and
loopne
mov
js
test
insl
jmp
pop
add
jno
cli
arpl
insl
in
xor
mov
stos
cld
mov
scas
packsswb
dec
mov
xor
dec
clc
ficompl
fcmovu
sub
cld
adc
inc
mov
sahf
sarl
sbb
repnz
ret
jecxz
dec
sbb
mov
mov
inc
adc
jle
dec
mov
cli
sub
or
lock
xchg
outsl
pop
ljmp
addr16
sbb
add
dec
dec
xor
xchg
cld
roll
or
out
pop
mov
cltd
xor
outsb
or
faddl
cmpps
mov
cld
adc
xchg
fcomps
mov
sbb
dec
or
inc
scas
xchg
cmpsl
jnp
bswap
xchg
inc
dec
xchg
mov
stos
dec
cli
bound
pusha
sarl
fiaddl
mov
fsubl
pushl
push
add
jp
adc
or
add
sarl
dec
and
loop
test
enter
jno
xlat
xor
stc
push
cmc
addb
cmp
jle
lahf
negl
jbe
jno
lcall
xor
jno
aaa
cmp
dec
jnp
ret
sub
pop
jl
push
std
rcll
mov
ret
add
and
cmp
jge
dec
fldt
add
push
jno
cmp
roll
dec
bound
pop
sti
popa
inc
inc
call
and
jge
test
mov
add
loop
sti
sarl
adcl
dec
lock
icebp
int3
dec
push
inc
cmpsl
test
inc
push
mov
sar
clc
push
dec
cmp
clc
or
sub
cmp
orl
mov
test
mov
lods
vaddps
dec
sub
mov
fiaddl
dec
cmc
into
sub
mov
xchg
cmp
jg
sbb
test
sbb
mov
rorb
add
out
push
and
adc
mov
out
add
adc
cmpsb
adc
adc
mov
push
mov
arpl
shl
popf
cwtl
lret
cmpsb
sub
mov
sub
push
or
cmpsl
outsb
add
cmp
fimull
jb
mov
jmp
mov
mov
std
nop
int3
adc
imul
jecxz
mov
js
push
sbb
stc
sti
shlb
push
or
f2xm1
pop
xor
pop
cmp
dec
lods
dec
subb
xor
test
rol
jmp
mov
adc
dec
xor
fstps
test
cmpl
rolb
mov
mov
das
mov
mov
std
lock
outsb
rolb
sub
pop
cld
adc
insb
and
sbb
cld
negb
jecxz
enter
mov
rorl
pop
push
dec
movsb
cmpsl
inc
and
xchg
nop
lea
daa
jae
fildll
int3
sti
outsb
and
add
and
std
lds
fwait
ljmp
add
adc
sub
insb
mov
jno
lcall
gs
bnd
pop
pushf
adc
gs
pop
sub
es
cwtl
lcall
sub
mov
adc
das
xor
out
cmp
push
ljmp
rorb
dec
add
rcrl
ja
pop
and
xchg
sbb
rcrb
nop
xchg
scas
clc
lret
dec
xor
push
leave
daa
cli
push
mov
or
movswl
mov
fsub
addr16
push
popf
out
push
test
mov
adc
outsl
pop
push
mov
bound
fiadds
jae
adc
test
xor
cmp
clc
cltd
mov
xor
pop
xchg
mov
das
jl
out
inc
add
push
arpl
dec
outsb
pop
dec
ja
mov
pop
sbbl
push
jle
inc
add
aam
and
loop
cld
lret
or
push
and
cld
lret
adc
push
push
stc
xor
mull
int
lahf
dec
pop
je
sub
adc
icebp
ret
ret
loopne
int3
fcomp
call
add
je
sahf
pop
fistpll
push
mov
dec
in
sti
lds
jle
std
xor
and
xor
add
notl
sbb
mov
jne
cmp
scas
in
xchg
js
in
add
sub
and
sub
repz
outsl
mov
decl
test
repnz
mov
sub
test
sbb
cmpsl
sub
pop
xchg
out
mov
test
mov
adc
orb
aad
cwtl
jae
test
push
mov
add
cmp
add
jecxz
add
test
das
mov
mov
xor
mov
call
sub
lret
lcall
fnstsw
std
adc
pop
add
repnz
add
adc
addr16
xchg
scas
cld
mov
into
push
je
test
or
add
movl
adc
mov
stos
mov
out
int
hlt
popa
cwtl
stos
mov
dec
xchg
add
cltd
pop
inc
jae
mov
stc
inc
in
mov
sbb
mov
cld
inc
test
in
lods
sub
fimuls
push
or
bound
push
jmp
pop
in
ss
loopne
aam
cmp
adcl
inc
xor
add
js
push
sub
jae
shr
cmp
and
xor
mov
sbb
adc
leave
jb
aad
xor
or
push
clc
repnz
popa
aam
inc
imul
loope
jne
sub
xchg
repz
adc
jae
jle
std
xchg
aas
scas
mov
out
popa
movsb
add
enter
pop
adc
jns
inc
in
std
cmp
xchg
mov
cmpsb
mov
jle
shll
jmp
xor
add
testb
dec
nop
mov
push
mov
stos
mov
jo
sbb
push
inc
test
adc
jmp
xchg
push
xchg
add
or
subb
jns
adc
or
push
and
pop
xor
divl
je
bound
xchg
cmp
sbb
mov
js
jecxz
movsl
jne
outsb
mov
sbb
add
and
out
pop
lods
adc
lds
pushf
andl
daa
scas
in
jp
je
mov
mov
xchg
mov
inc
xor
loope
add
int
popa
call
insl
sbb
ds
mov
popf
repz
dec
int
inc
aam
inc
sbb
xchg
cmp
subl
dec
in
ljmp
cmpsb
call
mov
lea
scas
jb
test
or
sti
stos
fildll
imulb
adc
testb
repz
cmp
jo
mov
movsl
movsl
inc
push
xchg
add
mov
mov
rclb
outsl
pop
inc
dec
nop
add
movsb
mov
jne
int
rsm
sub
scas
rcrl
fstpt
dec
sbb
jmp
push
je
inc
or
xor
adc
mov
mov
ja
cmp
data16
das
cltd
test
inc
mov
xchg
repz
gs
xor
rclb
fwait
jnp,pt
push
mov
mov
inc
imul
xor
mov
stc
mov
and
jbe
fsubrs
cld
mov
popa
testb
das
repz
pop
push
dec
jp
inc
pop
imul
out
jae
lea
and
dec
in
cmp
mov
mov
xchg
mov
cmp
addr16
xor
cli
movsl
pusha
subb
mov
cmc
add
push
jg
or
mov
xor
xchg
or
push
xchg
dec
mov
jns
sbb
js
add
mov
mov
not
jmp
and
out
mov
and
hlt
pop
mov
fbstp
addr16
cltd
jnp
fisttps
cmp
mov
push
mov
sub
rcll
adc
dec
test
or
fs
mov
lcall
out
pop
fsts
pop
js
jmp
ljmp
jl
icebp
lahf
pop
sbb
mov
cwtl
ror
jp
or
lcall
test
mov
and
add
mov
xor
xor
jecxz
pushf
xor
mov
pop
les
lds
incb
or
mov
cmpsb
jecxz
hlt
jg
push
pop
mov
mov
cmp
aaa
ljmp
xchg
cmp
repnz
aam
pop
int3
push
repnz
add
jge
sahf
push
je
mov
movsl
adc
scas
mov
push
push
test
out
daa
insb
mov
imul
out
add
push
pop
and
into
loopne
dec
jno
test
mov
pop
pop
aaa
fisttpll
into
mov
push
mov
cld
pop
lret
rolb
scas
xor
test
scas
and
cmp
and
lds
xchg
pop
sub
aaa
adc
sub
cmp
movsb
fildll
arpl
in
leave
and
ret
push
sub
mov
sub
int3
sahf
mov
ret
fwait
adc
jns
ljmp
pop
loop
stos
int
das
int3
xor
rcrb
jns
dec
and
ljmp
push
mov
or
stos
xor
xchg
out
lret
jbe
cwtl
les
clc
push
in
je
data16
adc
mov
loopnew
mov
rorb
push
js
xchg
mov
lret
ljmp
repnz
in
leave
fsubl
xchg
or
jne
sbb
xchg
fstpl
xor
into
mov
movb
test
insb
cli
testl
cmp
dec
inc
mov
push
mov
aad
jb
jnp
mov
jecxz
push
jge
fistps
cli
imul
mov
xchg
aad
addl
movsl
icebp
fcmovu
adc
inc
inc
push
cmc
mov
cmp
pop
jb
push
or
popa
gs
das
sub
lret
sub
sbb
aaa
jp
sub
xchg
scas
jae
inc
sbb
flds
xchg
daa
sti
ficoms
sarl
imul
dec
mov
sbb
js
jl
dec
adc
jp
mov
xor
scas
xchg
lea
in
hlt
f2xm1
mov
mov
nop
push
fnstsw
mov
fwait
sub
call
fisttpl
fnsave
mov
xchg
cmp
fstpl
add
pop
icebp
mov
adc
lds
push
test
jo
push
frstor
call
or
jl
nop
and
pop
test
std
mul
mov
shlb
mov
sbb
jns
les
mov
cmp
cmpsb
dec
std
repz
pop
push
out
mov
dec
outsb
inc
test
dec
loopne
sbb
cld
movsl
std
stos
cltd
repz
or
dec
int3
cmp
dec
xchg
stos
test
xorl
mov
hlt
inc
dec
mov
jnp
mov
jg
out
bound
in
jbe
cli
out
and
or
mov
xor
inc
xchg
es
loope
rolb
lods
xchg
cmpsl
push
std
mov
xor
dec
xchg
dec
or
jp
sahf
loopne
cwtl
out
push
dec
punpckhwd
mov
and
out
dec
pop
mov
cltd
jl
mull
mov
cltd
xchg
or
pop
or
xchg
orl
inc
mov
imul
xchg
mov
loopne
mov
and
and
mov
pop
fwait
add
jne
jge
jle
stos
fs
test
sbb
aam
push
fsubs
gs
adc
daa
lahf
insl
stos
mov
movl
out
not
and
mov
popf
js
mov
jmp
push
into
test
xchg
mov
stos
in
ret
je
cmp
xor
das
jo
aam
xchg
sahf
mov
add
cmpsb
ret
mov
leave
test
movb
cmp
add
add
pop
inc
dec
and
icebp
adc
lock
mov
or
scas
push
fdivs
push
adc
xor
sahf
and
xor
dec
inc
sarb
cwtl
js
test
xchg
pop
ret
lods
xor
fcom
ds
into
cli
sub
pop
pop
fsubs
or
outsb
lock
adc
mov
imul
xchg
and
xor
jle
push
add
push
lahf
inc
leave
das
pop
jp
mov
scas
xor
arpl
cmp
sbb
enter
inc
dec
pop
pop
cltd
dec
jge
sahf
add
outsb
out
lahf
push
jnp
push
push
and
out
pop
cltd
aad
pop
mov
mov
in
das
mov
xor
repnz
inc
mov
cmc
aas
repnz
pop
mov
cmp
sub
nop
push
sbb
fs
jne
jmp
pop
iret
jae
les
cltd
pop
in
nop
scas
and
sub
fwait
stos
fwait
jmp
xchg
test
das
xor
out
imul
decl
pushf
out
pop
lock
mov
popa
cmp
pcmpgtd
and
aaa
fdivs
test
push
mov
inc
push
mov
fstpt
push
pop
mov
test
push
jns
arpl
add
push
or
outsb
ds
dec
mov
xlat
insl
clc
jne
adc
sbb
jno
add
cld
imul
mov
fimull
mov
sub
add
test
inc
and
ffree
pop
lret
movsb
adc
jb
outsb
dec
push
cs
and
cmpsb
jno
rcll
orl
lock
xchg
scas
lock
mov
inc
sub
and
popa
orb
stc
adc
aam
int
xor
mov
xchg
rclb
adc
int
dec
dec
adc
xorb
movsb
std
mov
int3
cmc
aaa
bound
test
fmuls
ja
xchg
inc
xchg
push
mov
adc
add
xor
data16
fdiv
lret
sbb
fnstsw
mov
repnz
enter
push
rcl
lcall
sbb
push
cld
fistpl
and
add
mov
dec
repz
mov
and
add
in
adc
ss
adc
dec
mov
pop
int3
loopne
push
scas
cli
xchg
jecxz
lahf
ret
mov
sbb
inc
push
cmp
pop
ljmp
push
mov
mov
pop
das
das
lds
cmc
jnp
inc
and
jae
cmp
out
xorl
jmp
jle
inc
fmulp
add
in
js
cmp
pusha
out
addl
pop
pop
jnp
sahf
into
cmpsb
sbb
mov
movsl
xchg
and
or
stos
push
gs
fadds
notl
aad
xor
mov
jmp
sbb
pusha
jmp
sahf
loop
inc
unpckhps
mov
adc
or
xchg
push
xor
addr16
jg
cmp
outsl
dec
jp
jo
cli
xorb
daa
adc
loop
test
movsl
fcomps
lret
fbstp
fdivrs
mov
jle
jae
cmp
adc
enter
call
pop
adc
imul
or
mov
int
shl
cmp
push
adc
call
rolb
mov
fs
adc
fadd
or
mov
adc
daa
jb
cmpsl
push
nop
test
mov
stos
and
aaa
xchg
lahf
test
rcrl
adcb
cmp
popa
and
adc
cmp
lods
andb
pop
sub
mov
loop
movsb
cmpsl
scas
mov
cmc
cmc
sarb
sahf
arpl
jmp
adc
xchg
push
lret
mov
jg
dec
add
das
or
fimull
mov
jbe
inc
repz
xadd
in
xor
lret
xlat
jle
cmc
into
xor
ja
aas
mov
sarb
adcl
and
pop
outsl
dec
mov
sub
mov
shll
std
int3
cmp
and
ljmp
cmp
fimull
and
inc
xchg
jno
jbe
idivb
mov
ljmp
lods
or
dec
cmpsb
cmp
fiaddl
stos
cld
mov
fsubrl
andb
dec
adc
pop
jns
sub
add
stc
sub
push
push
jbe
fsubrs
stc
cmp
dec
mov
inc
push
mov
add
in
xchg
dec
dec
xchg
cmp
mov
or
mov
mov
and
xchg
clc
sbb
push
es
leave
test
addr16
add
fdivs
dec
pushf
mov
lahf
arpl
popf
push
rcr
ficomps
or
call
push
sub
adc
ret
cmc
push
and
arpl
mov
mov
shrb
xor
imull
sbbl
dec
inc
sub
psllw
dec
dec
je
push
pop
add
rolb
or
add
lods
cmpsb
add
lock
sub
stos
push
scas
outsb
rorl
cmovl
iret
lahf
cld
clc
out
arpl
outsb
out
xor
mov
jmp
jmp
stos
or
dec
pop
push
sahf
shrl
adc
ljmp
inc
and
jmp
inc
inc
jle
sti
add
fsubs
and
push
xchg
xchg
scas
lret
scas
fcompl
out
subb
loop
mov
add
cld
movsb
inc
jo
and
sub
call
fbstp
push
insb
cmpsb
out
pop
sbb
cli
lods
mov
ficompl
xchg
mov
cli
xor
shl
cmpsb
mov
pushf
js
imul
daa
rcr
loop
push
and
mov
sub
stos
daa
lds
mov
or
fnstcw
and
in
mov
fistpl
pop
test
dec
mov
xchg
std
push
pop
lods
in
in
add
stos
adc
pusha
rclb
dec
ja
mov
sub
das
lods
notl
pop
xchg
ficompl
daa
mov
call
mov
push
push
int
mov
lods
lea
mov
jae
push
sbb
rcl
xlat
pushf
sbb
add
das
repnz
lods
lods
adc
adc
cmc
sbb
fsts
pop
mov
imul
lret
push
in
and
and
dec
and
bnd
jnp
gs
movsb
mov
inc
adc
pop
and
shll
inc
filds
dec
icebp
mov
pop
fisttpl
ret
lods
aad
aam
mov
imulb
hlt
inc
mov
xchg
stos
repnz
jmp
ret
call
push
mov
mov
outsb
mov
mov
adc
cmpsb
movsb
jae
jge
xchg
ficomps
ss
mov
sarb
mov
fsts
mov
sbb
aas
jge
test
adc
adc
dec
xchg
or
and
or
sub
incl
fisttpll
xchg
xchg
and
addl
xor
lret
add
cld
push
cmp
shrl
sbb
loope
andl
out
out
addb
aad
rolb
push
or
cmp
imul
lock
pop
fcmovnu
movsb
push
ja
pusha
lcall
lods
adc
icebp
lods
mov
push
les
and
mov
cmpsb
lcall
out
push
mov
hlt
pop
out
scas
out
jne
shlb
int
xchg
mov
cltd
or
pminub
leave
sarl
call
fwait
xchg
aaa
adc
push
rolb
jbe
xorb
push
dec
add
xchg
jnp
sbb
xor
aad
into
or
out
inc
xor
ds
clc
js
enter
cld
not
xor
xlat
push
push
xchg
sbb
jge
xchg
mov
adc
mov
jb
pop
inc
cmpsb
xchg
push
lds
stos
cmp
mov
add
in
mov
jbe
fcoms
negl
sahf
push
jno
xor
fwait
mov
jmp
outsb
pop
in
in
loop
xchg
adcb
mov
inc
jno
imul
popa
push
mov
xor
mov
adc
arpl
dec
inc
push
data16
adc
fistpll
jecxz
imul
push
add
fdiv
shrb
sbb
addb
rcrl
jle
mov
mov
inc
sbb
dec
not
das
mov
add
je
lods
stc
daa
hlt
sub
push
pop
fimull
xor
cmc
cmp
fwait
mov
jl
out
sti
xor
outsl
pop
shlb
lret
or
addb
xchg
and
roll
and
bound
int3
mov
stc
lea
pop
scas
add
inc
pop
jge
lock
push
rolb
or
pop
leave
pop
sub
scas
adc
ror
fs
and
pop
test
adc
mov
movsl
jle
dec
outsl
mov
mov
dec
outsl
hlt
jb
mov
fildl
jne
push
mov
mov
int3
into
adc
rcrl
jg
mov
push
cmp
or
test
and
xchg
imul
lods
pushl
cmp
jg
add
push
cmp
xchg
ficomps
and
jno
in
fstps
out
pop
mov
xor
pop
jp
insl
sub
rcr
sbb
pop
ljmp
mov
pop
fstp
mov
xor
jg
mov
inc
push
pop
pop
and
xorb
rclb
add
cmp
sti
aaa
dec
mov
and
fstpl
and
notb
or
inc
insb
sub
sbb
cli
loop
dec
movsb
call
mov
lahf
test
imul
mov
cld
mov
sub
jp
mov
mov
aad
or
jae
lods
pop
xchg
into
dec
add
testb
pop
loop
mov
cmp
shlb
loopne
cmpsb
call
out
fs
jno
bound
call
mov
scas
push
repz
mov
sub
xchg
push
popa
fstp
call
fs
iret
ds
lds
lea
lock
xor
or
cmp
mov
ret
and
pop
pop
sbb
pop
das
pushf
cmp
sub
negl
and
rcrl
stc
jne
sub
sub
lds
out
xchg
ret
mov
or
and
adc
cmp
inc
aaa
push
in
outsb
push
enter
adc
stos
xor
push
lods
ret
outsb
out
pop
pop
sahf
cmp
adc
pop
adc
addr16
jp
outsl
fs
add
insl
xchg
pop
lea
mov
mov
daa
sub
xchg
imul
insl
lods
movsb
inc
mov
rolb
cmpsl
jne
xor
jbe
xor
mov
jmp
nop
cltd
cld
sub
stos
aaa
mov
jno
jns
pop
cmpsb
addr16
je
int3
arpl
hlt
push
push
pusha
or
inc
lods
out
push
repz
divl
sbb
repz
push
jg
iret
in
shll
pop
bnd
ret
or
mov
add
mov
inc
pop
das
sub
scas
pop
stc
ss
pop
lcall
hlt
inc
sbb
add
mov
testl
shll
xchg
inc
mov
subl
cmpsl
aam
push
cmp
xchg
clc
sbb
ficoms
scas
and
or
lret
fnsave
inc
into
sub
ss
call
out
mov
lea
pop
mov
insb
adc
xchg
lret
xchg
test
xor
orl
lret
mov
lahf
bound
scas
xlat
jno
pop
or
mov
scas
cmp
inc
clc
rcr
inc
mov
push
xor
cmpsl
push
add
ljmp
pcmpgtw
or
sub
xchg
sbb
jp
sbb
in
lret
lcall
mov
push
cmp
pushf
mov
mov
add
push
repnz
inc
xor
clc
and
xlat
ret
subb
mov
sbb
sub
jo
mov
add
cmp
cmc
xor
lea
lret
fdivrp
jp
in
push
insb
push
mov
int
cmp
or
cmp
lock
xor
xlat
daa
fisttps
sahf
adc
xorl
outsl
jecxz
sbb
or
add
imull
out
stos
sub
test
cmp
iret
push
popf
xchg
mov
cwtl
loope
adc
call
mov
mov
mov
fdivl
shlb
ret
ret
stos
xchg
mov
leave
std
pusha
xchg
aaa
inc
xor
mov
inc
inc
push
loop
shrb
sbb
mov
pop
aaa
dec
dec
sbb
lcall
sub
and
xor
pop
xor
mov
popf
add
mov
pop
pop
out
xchg
adc
push
fistpl
lea
leave
mov
pop
sahf
repz
aam
jmp
jmp
sub
jae
fptan
mov
dec
mov
stc
movb
stos
sub
cmp
push
jg
jge
pop
nop
cltd
and
mov
insb
xor
data16
mov
and
sahf
lret
repz
in
enter
inc
scas
test
adc
jb
rcrl
push
mov
xor
jmp
adc
lds
xor
xchg
jb
mov
mov
movsb
push
cmpsb
xor
fnstcw
push
imul
ss
mov
mov
lock
inc
push
inc
lcall
mov
adc
repz
push
dec
inc
cltd
xor
ret
aam
scas
add
sbb
icebp
in
add
push
cmp
jmp
movsb
repz
and
or
bound
aam
les
cmp
push
out
pop
xchg
jns
dec
push
imul
fisttpll
stc
dec
lahf
or
pop
idiv
inc
cmp
mov
dec
scas
cltd
or
sbb
cmp
or
sub
shl
cmpl
inc
mov
iret
push
mov
or
shl
mov
xor
mov
stos
pop
and
ror
loope
insb
mov
cs
xor
xor
addr16
adc
ret
sbb
in
test
imul
dec
pop
add
inc
inc
std
xlat
scas
shl
ja
pop
arpl
or
mov
out
add
mov
sub
sbb
or
sub
in
sbb
jle
hlt
jcxz
xchg
in
cmovle
imul
mov
or
and
mov
cmp
xor
nop
or
sarb
dec
rolb
xchg
mov
test
and
out
scas
ljmp
in
out
add
mov
mov
push
cmp
int
imul
inc
mov
sub
fmul
ret
orb
mov
cld
xor
jmp
push
scas
push
cmp
mov
gs
mov
jno
adc
mov
stc
outsb
dec
dec
sahf
jns
and
mov
imul
frstor
dec
loope
insb
das
mov
fildl
sub
xchg
les
addr16
sbb
pop
push
fwait
scas
or
fldenv
loopne
stc
mov
insl
out
test
out
.byte
adc
sbbl
add
add
mov
shlb
sbb
mov
mov
mov
sbb
stc
ljmp
out
in
jo
pop
dec
jmp
sbb
nop
movsb
in
addr16
mov
mov
mov
xchg
vminps
sub
rcll
jl
xchg
inc
lock
bnd
adc
xor
dec
xor
mov
push
pop
xchg
inc
xor
hlt
fadd
enter
es
push
sub
jl
lahf
lea
in
jb
sbb
rolb
jno
mov
and
or
add
push
mov
pusha
inc
aad
push
or
cmp
xor
mov
xor
movsb
scas
movsb
insl
mov
cmp
jb
xchg
pop
fcompp
lods
inc
mov
or
mov
mov
xchg
iret
mov
xchg
mov
sub
testl
outsb
in
mov
popf
stos
xor
ss
cs
iret
jg
loopne
sbb
mov
jecxz
mov
ja
les
fbstp
mov
mov
mov
mov
cld
add
dec
mov
mov
push
shll
ret
xlat
add
mov
push
lods
mov
mov
fiadds
add
pusha
jns
rcll
stos
test
mov
inc
fwait
inc
int3
mov
outsb
loope
lods
or
test
mov
xor
lret
xlat
pushf
data16
mov
scas
xchg
push
les
rorb
push
cld
aad
add
jp
icebp
mov
stc
popa
sti
stc
fdivrl
loopne
sbb
pop
out
das
fisttps
scas
stos
or
or
rcll
jle
lods
rcrl
repnz
fld
insb
and
pop
or
in
call
addr16
.byte
push
xor
add
adc
sub
arpl
mov
add
jb
test
xchg
xor
movsl
vpsubd
enter
shlb
inc
mov
push
pop
ljmp
add
inc
jl
std
dec
sbb
sbb
adc
push
call
push
xorb
data16
adc
sbb
mov
xchg
push
pop
push
scas
lret
or
jno
ss
and
ret
dec
or
jb
shl
pop
adc
dec
jno
sarb
pop
pop
into
adcb
roll
mov
adc
mov
mov
mov
push
and
in
inc
pop
sub
rclb
clc
and
xor
mov
push
or
xor
dec
lods
inc
js
ret
jo
aaa
dec
or
jp
lret
cmpsb
test
push
fwait
rcll
pop
dec
add
mov
imul
stc
stos
sahf
repz
decb
stos
lea
adc
shll
loopne
xchg
pop
movsl
mov
cmpb
dec
or
and
stos
mov
xor
fsub
jl
ds
xor
jae
mov
shrl
fistl
mov
pop
inc
shll
test
cmp
pusha
cmp
dec
lock
arpl
out
or
pop
cmpsb
push
jg
xchg
mov
dec
jge
les
fstpt
mov
inc
xchg
xchg
add
shl
in
adc
sbb
and
fistps
sbb
and
push
xchg
cld
jge
and
in
jp
ja
jns
or
dec
fcmovu
push
enter
dec
lods
shl
out
int
jno
xchg
pop
or
push
xor
dec
bound
into
arpl
lods
cltd
xchg
jbe
or
adc
aam
in
inc
pop
pop
push
jo
xchg
nop
pop
mov
pop
into
ja
ss
iretw
pusha
pushl
and
pop
inc
mov
and
sub
mov
outsb
popl
push
jo
and
ds
sub
movsb
cld
pop
dec
adc
aad
repz
sub
int3
pushf
pop
ficompl
cld
lock
nop
sbb
dec
daa
sub
dec
sti
test
xor
adc
mov
or
jnp
stos
int3
sbb
call
mov
pop
lcall
test
repnz
pop
cmc
mov
cmp
sbbl
cwtl
ret
in
dec
sbb
jmp
stos
imul
inc
les
or
and
test
pop
jmp
and
pop
fucom
jbe
arpl
testl
sbb
jbe
push
pop
std
xchg
add
mov
lea
jne
aam
cmp
and
cmp
pusha
push
xlat
xchg
lods
jae
sub
lods
jmp
adc
and
and
and
push
out
push
pop
out
in
jg
jbe
push
adc
outsb
inc
mov
push
dec
mov
loopne
adc
fmull
adc
or
push
repnz
dec
sbb
xor
jmp
loopne
pop
jae
fscale
adc
jo
xchg
and
and
dec
fisubrs
cmp
lds
pop
jge
fldt
mov
sti
sub
in
das
adc
rep
add
aad
test
push
sbb
test
add
push
lahf
and
inc
push
jne
fsubl
mov
out
aam
scas
aam
popl
push
cmc
fcoms
imul
lret
arpl
lcall
mov
xchg
pop
dec
je
stc
ja
add
mov
cmp
imul
in
cmc
mov
adc
or
popf
pop
xchg
jmp
aam
jmp
outsl
inc
or
xor
out
add
out
test
mov
aaa
jae
or
adc
jp
inc
push
arpl
sbb
sub
cltd
jne
cld
jae
dec
cmpsb
out
cmp
or
sub
mov
aas
es
push
mov
jno
or
shlb
mov
push
pop
daa
xchg
cmpsb
mov
std
outsl
inc
lock
loope
push
sbb
gs
pop
mov
lea
enter
xor
shl
fiadds
mov
out
notb
call
add
loop
sbb
jnp
movl
ja
xchg
mov
cmp
or
insb
lcall
pop
lds
cltd
mov
repz
pop
movsb
aad
stos
sbb
ja
mulb
cs
cltd
adc
in
iret
bound
loop,pn
pusha
es
hlt
push
fcmovbe
jge
arpl
lahf
or
out
dec
test
mov
mov
dec
pop
stc
lea
daa
popf
xor
clc
out
pop
test
aaa
adc
inc
xlat
inc
dec
hlt
jo
in
fs
stos
clc
bnd
lock
sarb
xchg
popa
xchg
cli
push
dec
fcmovu
cmp
xor
mov
pop
sarb
cmp
stc
hlt
in
cmp
inc
ds
mov
or
fld
pop
je
aam
test
inc
jmp
call
or
jo
outsl
repnz
in
mov
test
pusha
sub
jg
cmpsl
adc
lods
push
imul
jp
or
sar
xchg
mov
fisttpl
xchg
mov
inc
fsubl
test
mov
mov
lock
xchg
int3
nop
xchg
pop
out
fmull
pusha
sbb
push
pusha
sbb
test
mov
lret
aaa
dec
xchg
push
cmp
xor
mov
outsb
mov
pusha
or
mov
ds
sti
aaa
and
cmp
mov
xchg
mov
sar
xor
adc
popf
ficoms
popa
bound
dec
xlat
push
mov
xor
pop
rorl
cmpsl
fldcw
arpl
leave
and
lock
fisubl
add
xchg
cmp
loopne
shll
mov
dec
dec
popa
lcallw
enter
mov
in
movsb
popf
mov
mov
mov
shlb
call
loopne
mov
movsl
or
aam
pop
and
gs
jl
push
roll
and
outsb
mov
fcoms
push
les
pop
sahf
imul
add
lea
inc
sbb
mov
inc
add
inc
pop
sub
fs
cmp
gs
mov
cmp
inc
andb
pop
mov
cli
jns
leave
sbb
lcall
adc
cmp
mov
xchg
mov
in
mov
push
jge
ret
mov
mov
mov
push
mov
pop
add
push
xchg
out
rclb
pop
jb
inc
mov
nop
cmpsl
add
pop
cmp
jecxz
dec
out
cld
jne
lds
cwtl
mov
scas
push
inc
jb
int3
fistpl
sahf
pop
sub
push
sub
pop
lcall
aaa
popf
lock
test
in
cmp
pop
sub
cmpsb
lret
shlb
ds
adc
repnz
inc
fmul
cmp
inc
shrd
pop
loope
test
xor
fisubl
imull
xor
loop
aam
insb
add
hlt
pop
nop
pusha
out
shrl
inc
insl
shll
or
add
add
adc
push
in
loopne
cltd
sub
cld
out
jo
dec
leave
lcall
fstpl
sbbl
mov
inc
ret
mov
push
jnp
jl
jecxz
cmp
vmread
push
mov
outsl
scas
add
or
imul
mov
or
cwtl
cmp
jle
jae
inc
xchg
pop
ret
test
mov
jo
fs
test
mov
xor
ljmp
subb
cmp
sti
fisubrl
ffree
push
sahf
add
xchg
sbb
push
mov
out
repz
sbb
es
sub
jge
out
and
je
mov
push
jp
or
dec
enter
mov
xor
add
or
repnz
iret
pop
enter
xchg
sub
lret
add
mov
loop
ret
call
lcall
sub
pop
jne
and
leave
jb
push
cmpsb
inc
mov
jecxz
cwtl
mov
subb
push
push
pop
mov
and
mov
dec
sbb
add
popf
mov
sub
add
and
fsubrl
add
add
push
addb
lock
fadd
clc
sbb
xchg
lret
loopne
ljmp
sub
and
addr16
add
nop
pop
lcall
into
cmp
push
loope
xlat
mov
leave
xchg
add
jb
adc
jle
xor
sbb
add
xor
mov
mov
xor
mov
inc
xchg
bound
add
push
test
repz
push
inc
xor
mov
rorb
xchg
inc
fbld
fisttpl
mov
xchg
jb
mov
xchg
ljmp
lods
pop
inc
push
aad
mov
ficoms
test
dec
xor
mov
sub
call
jae
mov
add
rcr
mov
iret
sbb
xlat
and
sub
inc
and
xchg
fwait
int
sub
je
out
push
and
cmpsl
ret
lret
insl
add
ficoms
sub
dec
lods
sarb
lock
popa
sbb
lods
cmp
lock
leave
lret
jae
icebp
xor
pop
pop
pop
in
push
int
jmp
rolb
sbb
mov
jnp
ljmp
fwait
push
or
pushf
ret
repz
lea
repnz
adcb
out
ss
in
insl
lea
xor
lret
push
repz
test
sub
pop
in
and
adc
out
push
xchg
in
pop
shl
jb
lds
pop
testl
punpckhbw
cmp
fyl2xp1
xchg
jo
xchg
iret
pusha
inc
xor
dec
or
shr
fldl
loop
repnz
xor
dec
sub
xor
pop
jmp
push
xchg
mov
sbb
out
das
pop
stos
mov
addr16
int3
aam
inc
jecxz
fidivrl
rclb
movsl
jnp
mov
std
gs
hlt
pop
pop
sub
leave
mov
fcom
std
pop
xchg
out
sub
out
push
mov
mov
pushf
jns
add
aam
fwait
leave
sar
mov
ds
addr16
stc
lods
mov
add
out
testb
jmp
fwait
mov
jnp
repz
jmp
dec
incb
push
shll
es
mov
mov
into
push
pop
out
mov
insb
ficompl
loopne
mov
dec
sub
xor
test
mov
jns
popa
mov
mov
in
fadds
push
lea
stc
xor
cmpsb
test
enter
cwtl
arpl
mov
pop
inc
mov
fwait
and
and
subb
lods
test
test
lcall
data16
aaa
stos
dec
jge
lods
and
ja
fidivl
arpl
lret
mov
jmp
cmpsb
mov
in
push
mov
sbb
fistpl
pop
test
or
mov
cmpb
dec
mov
imul
ret
push
mov
dec
rorl
mov
insb
fs
sub
std
mov
xor
ss
sub
fnstcw
sbb
push
in
lahf
xor
push
rcl
cvtps2pd
aaa
lods
dec
push
mov
cltd
dec
sub
js
jg
sar
cmp
mov
bound
vsqrtsd
and
and
ja
add
sbb
mov
pop
mov
push
mov
stos
shr
repnz
das
dec
clc
nop
nop
lea
push
mov
ja
xor
dec
inc
push
cmp
push
les
jmp
mov
adc
jmp
jo
push
ja
dec
sub
jle
lods
stos
andb
xor
inc
adc
scas
adc
int
in
push
lock
mov
movsb
or
notb
or
mov
xchg
hlt
mov
dec
mov
dec
add
fstpt
sahf
push
jno
and
sbb
add
pop
push
cmp
pop
mov
cmp
adc
mov
inc
xor
repnz
adc
sub
pop
jbe
mov
ret
inc
xor
mov
lahf
pop
jo
stc
dec
std
dec
pop
jae
pop
popa
addr16
sahf
and
jmp
out
inc
pop
mov
aas
loope
iret
dec
cld
xchg
ret
mov
into
push
sbb
push
in
loope
sti
scas
xchg
mov
in
dec
jnp
add
and
pop
les
and
inc
rorb
addb
movsb
iret
int
jnp
out
nop
adc
add
int
orl
nopl
cs
mov
pop
out
popa
or
lea
roll
push
not
add
cmpsb
out
inc
xchg
jne
sub
lds
hlt
ljmp
or
pop
lds
adc
mov
rol
mov
cltd
in
loop
nop
adc
lea
push
cmp
shl
xchg
or
movsl
outsl
inc
mov
lds
loop
jecxz
xor
lret
xchg
push
test
sub
mov
adc
test
dec
dec
aaa
std
aam
addr16
lods
cltd
cmp
adc
xchg
sbb
dec
clc
add
icebp
cmp
cmp
outsb
nop
in
or
ret
sbb
call
xchg
lock
or
add
xchg
iret
or
decb
dec
scas
repnz
xor
lret
inc
repnz
push
ljmp
clc
add
dec
push
cwtl
pusha
push
es
out
insb
sahf
mov
idivl
rorb
cmp
pop
push
daa
inc
stc
mov
adc
call
leave
push
rol
cwtl
ror
stos
sub
mov
pop
pop
dec
lcall
push
test
inc
sub
push
sahf
pop
cwtl
loopne
repz
insl
jns
test
sar
inc
xchg
pusha
mov
jmp
inc
rol
jno
cld
movsl
imul
lahf
mov
fwait
dec
sbbl
ficoml
jae
andb
dec
inc
dec
jbe
dec
mov
imul
shlb
xlat
xlat
add
jl
hlt
push
mov
imul
loope
sar
or
es
jl
jns
inc
fistps
mov
cmp
jge
push
inc
mov
xlat
in
jecxz
fwait
adc
or
add
js
jns
sbb
inc
cmp
pop
sbb
shll
lret
cs
pop
in
lahf
or
push
into
xor
jb
xchg
push
mov
xor
or
xchg
outsb
rcl
aas
les
adc
pop
mov
nop
cmp
or
fsts
ret
lods
cld
or
mov
repz
cmpl
icebp
mov
rcrl
inc
ror
aam
test
imul
std
push
adc
xchg
jae
and
dec
jecxz
fisubrl
popf
dec
test
pop
mov
clc
or
test
pop
or
xchg
das
or
fadds
adc
inc
dec
std
hlt
jmp
stos
and
out
add
or
xchg
shlb
dec
jge
in
and
stc
icebp
lret
xlat
push
test
push
out
mov
lret
sarb
or
mov
xchg
fxtract
mov
mov
push
shrl
mov
jmp
outsl
pushf
imul
shr
es
cmp
xor
int
mov
loop
xor
sub
popf
mov
notb
add
test
mov
add
dec
das
sbb
and
adc
out
push
add
mov
test
adc
stos
inc
pop
xor
xchg
orl
xchg
xchg
scas
jl
scas
andb
xor
arpl
test
lahf
sub
add
pusha
inc
xchg
pop
hlt
push
and
dec
pushf
mov
push
cmp
in
dec
leave
popf
push
dec
mov
ss
push
bound
jno
push
push
dec
xchg
mov
divl
lods
jmp
sbb
test
push
mov
jle
xor
stos
mov
sbb
push
cli
shll
inc
cltd
cmp
andb
in
jl
mov
or
and
lcall
loop
and
lds
out
bound
mov
mov
adc
inc
mov
mov
lahf
xor
inc
cmp
jb
popf
pop
sub
cli
mov
sarl
fldl
in
rorb
mov
mov
repnz
jl
cwtl
movsb
cmp
or
jo
scas
jge
xchg
xor
popf
ljmp
imul
push
sbb
shl
sahf
mov
rcll
outsb
cmp
test
imul
pop
popa
xchg
push
pop
clc
and
fdiv
mov
dec
adc
push
out
popl
in
inc
pop
add
nop
jne
push
dec
hlt
xchg
shl
stc
mov
inc
lcall
daa
adc
jle
cmp
jle
fs
ret
mov
fdivrp
xchg
mov
outsb
mov
pop
lock
je
fcoms
movsl
push
andb
cmpsl
sbb
stc
sub
push
adc
es
or
add
in
shrl
mov
movsb
fdivs
mov
add
jecxz
jle
xchg
test
in
and
jbe
iret
and
pop
enter
lock
aas
cwtl
test
fbstp
je
sub
sahf
xor
inc
jmp
loope
cmp
fnstcw
loope
sub
jno
mov
out
and
dec
push
mov
loope
pop
data16
sub
std
lods
fstp
pop
std
in
xlat
mov
jmp
lret
jge
mov
push
mov
lahf
ds
fisubl
repnz
inc
or
xchg
mov
cmp
dec
push
mov
lods
jmp
mov
adc
out
pop
bound
mov
or
sbb
fsub
aad
push
divb
mov
mov
enter
push
jle
leave
adc
push
fwait
jp
fwait
iret
dec
mov
stos
push
cmp
fisubs
mov
mov
stos
and
fiaddl
pushf
movsl
icebp
mov
fistps
and
ja
mov
push
jecxz
rolb
adc
dec
das
xchg
std
das
sbb
cmp
fwait
inc
dec
shr
in
stc
add
xchg
dec
shrb
add
mov
cs
popf
jno
lock
shlb
std
jg
mov
cmpsb
lods
aas
aad
aas
cmp
outsl
aad
xchg
dec
sbb
pop
cmp
dec
insb
or
sub
add
add
cmpsb
loopne
pop
and
rcll
daa
in
and
mov
dec
imul
xchg
jb
sbb
inc
iret
rorl
into
and
sbb
mov
cmp
insb
aam
xor
xchg
or
int
cmpsl
inc
mov
loop
out
mov
mov
jo
lahf
dec
pusha
inc
dec
add
clc
mov
and
push
xlat
jbe
sub
inc
sbb
pop
mov
aaa
mov
xor
lods
insl
mov
xor
push
mov
test
jae
and
or
notb
aad
int3
push
inc
in
outsb
subl
mov
daa
dec
das
pop
mov
ss
aas
ret
roll
dec
xor
xchg
jno
push
mov
out
cmpsl
add
lret
lret
xchg
scas
push
xchg
aaa
pop
in
data16
jl
inc
or
jle
and
sub
mov
jbe
sbb
in
lahf
mov
loope
out
in
push
add
lret
idivb
scas
mov
xchg
ret
mov
call
cmp
int3
and
or
stc
xlat
movsl
out
add
into
daa
inc
arpl
lret
push
jl
and
lcall
push
inc
xor
and
add
push
movsb
pop
outsw
adc
lcall
jbe
and
pop
outsl
jno
xor
mov
cmp
jmp
xchg
push
cwtl
stos
or
lds
neg
and
sbb
repnz
jae
es
je
cmp
aam
loopne
inc
and
pop
es
inc
std
cmp
leave
les
jge
jns
jle
ljmp
aas
hlt
dec
je
mov
mov
into
mov
loop
pop
push
xchg
add
lret
xor
sbb
jge
insl
aaa
dec
arpl
test
rorl
sub
mov
inc
ret
jg
xchg
lahf
mov
mov
jp
cmp
dec
dec
mov
xchg
pop
jne
mov
push
mov
push
popa
mov
cli
jecxz
cltd
adc
test
arpl
out
fldt
daa
inc
pop
add
stos
test
mov
mov
dec
lock
fcoms
add
jae
iret
sub
mov
sub
xor
imul
mov
pop
ret
push
int3
mov
pushf
xchg
mov
and
cmp
pop
xchg
in
push
pop
or
mov
in
xor
stos
cltd
stos
sti
xchg
imul
push
xor
cmp
add
stos
sub
pusha
test
cmc
dec
mov
arpl
mov
add
lds
and
xchg
lods
bound
es
cltd
iret
inc
add
inc
test
fildl
jp
lock
adc
jl
mov
add
push
add
sub
xchg
and
mov
out
inc
arpl
and
mov
pusha
cli
jle
mov
popl
add
test
scas
dec
xor
sub
sub
aaa
sub
dec
bound
mov
test
std
mov
sbb
xor
lea
push
filds
cmp
adc
iret
test
adc
je
pop
sbb
movsb
adc
xchg
add
jns
jb
xchg
aaa
sti
lret
lret
rcrl
addr16
cmp
sbb
pop
out
or
into
inc
pop
sbb
xorl
lock
mov
cwtl
out
pop
adc
aam
push
jecxz
cmc
add
sbb
pop
dec
ja
pop
mov
dec
jp
jl
mov
popf
addb
dec
outsb
hlt
fstpl
or
mov
and
out
daa
in
hlt
mov
ret
sahf
xchg
lock
pop
out
xor
cmpl
push
into
scas
daa
jb
lret
scas
loope
pop
mov
adc
sti
sbbb
xlat
or
push
inc
pop
mov
mov
cmpsl
lret
jne
out
xchg
pop
fistpll
test
js
jg
sub
inc
xchg
lods
ds
dec
imul
scas
and
or
inc
sti
mov
gs
leave
gs
pop
repz
xor
inc
mov
out
sbb
les
mov
jmp
pop
movsb
cli
push
subb
mov
pop
cmp
jo
repz
arpl
loope
adc
mov
cmc
mov
call
mov
jecxz
and
lock
bound
out
fisubs
xor
insb
xor
add
rolb
xchg
push
fcom
fdiv
cli
sub
push
mov
insl
dec
shr
push
fsts
mov
loopne
imul
fcmovbe
jbe
scas
lods
mov
jge
fchs
subl
pop
dec
in
scas
cmp
ljmp
in
cmp
pop
roll
push
pop
testb
sub
mov
addb
jmp
or
inc
bound
mov
cmp
lahf
loopne
push
jmp
fwait
aas
stos
fnstsw
fistl
mov
daa
test
mov
mov
sbb
inc
pop
je
mov
mov
enter
test
sub
scas
sub
and
pop
mov
lea
fnsave
aaa
fistps
push
cwtl
and
inc
mov
int3
scas
pop
je
jb
push
jecxz
test
cmp
por
mov
cmp
dec
cmp
jmp
testl
adc
push
pop
xor
lret
ret
ds
jbe
fnsave
outsb
sub
sbb
pop
inc
lock
lahf
fs
jge
sub
push
outsl
pop
fldcw
movsl
add
cld
inc
scas
add
icebp
mov
pusha
or
inc
das
or
inc
inc
push
aaa
or
ja
loop
fidivs
ret
mov
repz
stos
mov
decb
cmc
pop
mov
test
mov
jae
fistl
cmp
xchg
cwtl
jge
jle
andl
xor
adc
cmpsb
pop
fadd
dec
jo
adc
mov
ljmp
lock
ret
mov
mov
aas
or
imul
fs
and
dec
ds
xor
mov
out
push
ss
jae,pn
ja
jne
mov
mov
in
xor
fcompl
fisubrl
dec
mov
imul
pop
fst
ja
arpl
pop
sti
sahf
adc
pusha
dec
adc
xchg
lcall
add
push
in
mov
xor
inc
insb
inc
dec
int3
mov
in
and
xchg
daa
dec
xchg
les
outsl
call
dec
dec
jo
jae
popf
addr16
lock
push
pop
data16
jb
add
dec
in
pop
mov
fists
pop
test
or
dec
lods
pop
inc
xor
nop
jns
mov
inc
int3
xchg
adc
jbe
xor
xor
dec
xchg
les
xchg
test
add
jns
and
xchg
xor
inc
movsb
mov
mov
cld
cwtl
mov
popa
adc
xchg
adc
push
sbb
push
pop
popa
shll
mov
mov
mov
mov
orb
scas
ds
lods
mov
xor
out
push
sbbl
testb
data16
pushf
sub
test
aas
lcall
lret
lret
iret
jb
mov
incb
xor
mov
insl
jle
mov
sbb
jp
jecxz
jle
daa
std
movsl
out
inc
ss
data16
dec
out
pop
ret
idivb
cmp
loope
xchg
mov
xchg
and
mov
adc
mov
mov
inc
leave
ja
fidivl
das
dec
inc
xor
nop
pushf
iret
aad
jae
push
adc
add
cmp
inc
nop
in
pop
mov
add
loope
lds
jl
sbb
fcompl
inc
add
ret
and
stos
loope
cmc
xchg
in
jmp
adc
scas
aad
out
sbb
lock
inc
enter
add
add
push
loop
lcall
and
xor
xchg
fiaddl
mov
jg
loop
mov
dec
sub
push
outsl
cmc
pop
jbe
adc
mov
xchg
cmpb
jecxz
and
icebp
cmc
xchg
arpl
movsb
cmp
mov
mov
repnz
pushf
pop
fdivrs
in
fdivl
adc
xor
lcall
bound
jns
imul
add
adc
fistps
pop
push
movsl
pop
adc
dec
ror
jnp
fnstenv
dec
test
inc
jno
sbb
mov
ljmp
aas
sti
repnz
inc
addr16
rol
push
imul
movsb
mov
xchg
inc
dec
inc
xchg
xchg
scas
inc
xor
add
scas
add
pusha
insl
andb
int3
or
rcl
dec
cmpsb
inc
lods
add
nop
mov
mov
jge
xor
shll
and
out
pushf
pop
in
lods
pushf
test
dec
and
clc
and
outsb
popl
outsb
sbb
xchg
pop
dec
arpl
jl
or
jnp
out
or
insb
mov
icebp
cwtl
es
daa
mov
inc
sti
sub
in
into
xchg
xor
or
pop
sub
ret
xchg
aad
sbb
xchg
imul
inc
pusha
cmp
inc
stos
out
jo
jae
adc
push
lds
popf
out
pop
int
test
lcall
mov
mov
repz
jl
cmpsl
jno
aad
repz
scas
jmp
cmpsl
cmpsl
cwtl
fsubs
pop
sub
pushf
fbstp
adc
fcmovne
pop
jl
jnp
shll
pushf
jbe
push
in
cmp
test
pop
xchg
adc
aas
testb
xor
sahf
cmp
mov
movsl
notl
mov
pop
push
mov
cmp
jae
imul
outsb
sub
xchg
sub
mov
dec
cmpsl
sub
ja
pop
and
sub
lcall
inc
movsl
inc
les
aad
arpl
sub
cmp
les
int
mov
or
cwtl
add
dec
xor
mov
cmp
mov
sbb
sub
addr16
sub
push
iret
repnz
mov
stos
lea
inc
es
sbb
mov
pop
sub
mov
pop
cli
leave
movb
mov
in
or
scas
xchg
cmp
stos
dec
mov
sahf
push
mov
mov
xchg
and
mov
data16
out
jbe
stc
scas
mov
dec
flds
out
jb
xchg
insl
adc
mov
mov
dec
xor
push
dec
jmp
mov
jbe
cmp
js
inc
push
sub
fisttps
test
in
adc
pop
mov
aam
testl
or
loope
pop
ja
cmp
xchg
cmp
push
pop
fidivrl
outsl
mov
sahf
bnd
lds
ds
mov
test
sbbl
push
jp
pop
ds
add
dec
fwait
rcrb
mov
out
jmp
dec
pop
sub
bound
and
fidivs
jp
jle
sub
xchg
sahf
outsl
push
jl
cmpsb
fs
mov
leave
dec
xchg
mov
or
push
shrb
or
cmp
add
loop
pop
mov
mov
daa
into
sahf
lahf
in
inc
faddl
lods
mov
mov
test
or
mov
out
ds
movzbl
imul
lods
sti
jns
ja
mov
pop
inc
imul
sbb
shlb
mov
insl
push
dec
add
lock
mov
dec
ret
jge
in
jne
call
add
add
xchg
das
push
sub
out
or
cld
pop
out
divps
xchg
inc
or
inc
mov
out
sbb
jg
adc
mov
jmp
dec
icebp
js
push
dec
in
pop
push
pop
mov
mov
popa
xchg
xor
xchg
mov
push
lret
cmp
dec
mov
leave
mov
add
xchg
int3
addr16
push
ss
es
rcrb
mov
lds
mov
jmp
xor
jbe
mov
movsb
xchg
test
test
xor
sti
outsl
imul
xlat
jmp
add
pop
out
ja
adc
iret
popfw
sbb
dec
in
jmp
xlat
or
sbb
pop
cld
inc
sbbb
les
or
xchg
aas
dec
xchg
aad
xorl
and
repz
xlat
loopne
xchg
lock
shlb
xchg
inc
jno
sarb
sub
pop
daa
aam
or
and
push
bound
push
in
xlat
popa
or
les
or
jge
xor
cmpsb
repnz
mov
enter
mov
pop
test
imul
add
lds
push
dec
adc
mov
add
cmp
dec
cmc
stc
pop
adc
sub
test
cs
icebp
dec
dec
arpl
scas
mov
ficoml
jmp
out
int
cmp
dec
ret
mov
adc
rclb
loopne
xor
inc
pop
push
test
and
dec
sbb
scas
jmp
xchg
xchg
cmp
jo
lea
push
aad
inc
pusha
loopne
lds
mov
fistpl
cmp
out
pushf
inc
inc
push
leave
enter
das
aam
push
out
mov
xchg
push
add
sub
out
mov
les
decl
push
cmp
mov
lea
scas
pop
daa
mov
or
sti
adc
popa
push
test
lds
mov
lock
mov
push
xchg
push
adc
dec
and
stc
mov
add
jecxz
loope
push
jl
xchg
loopne
cmp
xchg
imul
lahf
dec
xchg
sub
jl
sbb
cmp
jl
das
or
int3
out
mov
adc
pop
popa
adc
loopne
rcrl
mov
dec
pop
mov
lcall
and
push
lds
lods
out
jmp
cmp
icebp
js
xchg
mov
test
std
addl
mov
jns
adc
push
adc
in
mov
xor
sti
rorb
pop
stc
ss
jmp
test
inc
andl
fidivl
add
fmul
mov
repnz
pushf
push
das
adc
js
aaa
mov
dec
fistps
lods
enter
sbb
jmp
add
popf
mov
xor
lods
in
sarb
sbb
nop
mov
ds
nop
cli
mov
xchg
sbb
mov
mov
sbb
out
inc
imul
inc
xor
insl
outsb
dec
push
inc
push
popf
dec
mov
lods
push
call
add
add
add
xor
add
push
ret
movsl
xchg
test
inc
xchg
mov
in
pop
push
sti
xchg
sub
jb
pop
mov
enter
lret
inc
daa
imul
sbb
pop
push
imul
and
mov
pop
fistps
leave
jle
aaa
jo
lods
mov
dec
pop
dec
movb
in
jae
mov
sbb
xchg
into
xchg
dec
cmp
rorl
add
dec
inc
jae
hlt
fs
cmp
shl
ja
add
outsl
xchg
popa
and
stos
add
pop
xchg
ret
mov
leave
and
xorl
popf
cwtl
push
inc
jg
daa
in
sub
push
ja
decb
inc
pop
xchg
iret
sbb
clc
sahf
inc
jb
fmull
mov
push
mov
xchg
sti
les
scas
adc
push
stos
inc
pusha
dec
dec
adc
mov
xchg
mov
and
in
fwait
dec
jns
mov
bound
shlb
and
repz
jecxz
fbld
xor
jb
ret
push
sbb
imul
mov
fimull
lret
movsb
imull
pop
mov
cltd
push
loope
je
nop
mov
jno
or
rol
sub
inc
xchg
popf
sbb
inc
add
or
inc
inc
fsubp
pop
imulb
les
xchg
sub
mov
jle
cltd
xchg
adc
je
and
movsb
and
ret
insl
and
inc
clc
mov
xchg
mov
in
lret
rol
inc
dec
and
daa
stc
jl
jb
xlat
popa
ret
push
xchg
jl
aas
fildll
mov
cmp
push
lea
into
pushf
jl
shlb
mov
adc
mov
inc
mov
push
mov
add
pop
adc
testb
jg
data16
.byte
arpl
fmull
addl
xor
add
movsl
pop
loopne
push
outsb
icebp
add
lret
js
xor
dec
sub
jge
mov
mov
out
lods
and
enter
mov
into
sub
pushf
xchg
daa
test
gs
pop
or
repnz
out
mov
push
cmp
scas
jecxz
mov
lret
or
daa
or
mov
and
fimuls
cmp
mov
ss
pusha
imul
cmp
pmulhuw
cwtl
push
arpl
popa
insl
or
push
jg
lds
imul
rcrb
lods
mov
mov
jne
or
test
mov
in
mov
rcrb
dec
andl
jg
cmp
enter
cmpsb
dec
adc
jp
test
inc
xchg
push
cmp
mov
adc
jbe
out
aaa
fstps
dec
icebp
insb
shlb
mov
xchg
or
imul
icebp
loope
shll
add
and
add
enter
fcoml
das
mov
fldt
xchg
std
addr16
add
inc
xor
add
mov
lcall
jecxz
dec
shlb
in
arpl
call
push
xchg
gs
jnp
cmp
bound
insl
mov
mov
jnp
mov
clc
sbb
stos
scas
mov
lcall
lahf
test
jge
cmp
int3
movsb
shr
and
cs
cwtl
sub
inc
jmp
mov
pop
push
mov
test
aad
inc
xlat
fdivl
ret
js
aam
adc
repz
mov
pop
cwtl
sbb
push
add
fldt
scas
ret
js
into
pop
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
or
call
hlt
sbb
fidivrs
mov
push
push
pop
pop
add
movzwl
mov
xor
mov
pushl
mov
pop
xor
xor
mov
xor
xor
sbb
mov
call
cmp
jbe
in
add
push
dec
dec
outsl
jl
pop
mov
or
add
addr16
mov
cmpb
sub
jmp
sub
scas
dec
fsub
dec
dec
mov
sub
jne
jo
aam
test
and
push
fcmovnb
jl
pop
sbb
iret
mov
cmp
test
imul
or
mov
pop
repz
pop
scas
push
jp
imul
mov
test
pop
pushf
pop
sub
call
adc
cmp
out
or
xor
sub
leave
scas
inc
adc
and
and
mov
lcall
jge
cmp
cmpsl
add
mov
inc
fiadds
mov
mov
stos
add
lods
inc
add
mul
dec
je
pop
cld
fsubrl
test
add
cmp
test
fcoms
mov
cmp
les
mov
mov
ret
rcrl
fsubl
mov
xchg
jae
and
push
jae
and
pushf
dec
addb
mov
add
cmpsl
sbb
and
pop
int3
das
and
adc
mov
fs
xchg
jp
inc
in
out
repnz
je
cmpsb
dec
mov
movsb
fdivp
or
push
mov
repz
aam
or
jmp
xchg
mov
pop
jae
cmpsl
sub
stc
fisttpl
iret
push
imul
je
jne
fadds
mov
cld
repnz
mov
jo
adc
pop
and
fwait
mov
stos
inc
iret
xchg
aaa
cmp
sub
bound
push
pop
jbe
mov
mov
inc
mov
in
out
mov
jne
adc
in
clc
and
fcoms
pop
sub
aad
js
rcl
push
jbe
or
sbb
pop
or
mov
push
or
adc
cmpsl
jb
pop
add
movsb
aam
xor
aam
out
mov
mov
cltd
stc
mov
pop
push
adc
jae
clc
xchg
xchg
xor
lret
xorb
mov
push
ror
add
mov
aas
or
sbb
cwtl
outsl
pop
pop
mov
pop
mov
mov
add
cld
mov
ret
sbb
popa
xorb
addr16
sbb
fdivl
sbb
ljmp
xchg
loop
lret
cli
fdivrp
repnz
in
pop
stc
sub
cmp
xor
or
mov
or
inc
xor
inc
iret
mov
and
xor
movsl
sbb
mov
sbb
cmp
sbb
xor
pushf
inc
popf
je
dec
or
adc
xchg
lods
mov
mov
mov
or
and
std
adc
or
jnp
mov
jnp
mov
xchg
mov
sahf
pushf
mov
aad
cmp
jle
push
add
or
sub
push
mov
std
cmp
sub
pop
xor
out
ja
shlb
xchg
sti
dec
inc
leave
jnp
out
movsl
mov
sti
cmp
sub
out
ja
shlb
xchg
sti
fdivrl
aas
jae
push
cmp
push
cmp
inc
arpl
pop
stos
lods
jne
lds
push
sbb
cmp
dec
decb
lret
mov
mov
jg
ss
mov
bnd
mov
jno
push
mov
pop
push
push
push
sbb
mov
in
push
push
cmp
aad
cmp
lret
inc
jne
sbb
jb
dec
cmp
mov
jae
pop
mov
cmpsb
sbb
push
test
xor
push
mov
push
and
cmp
aad
sarb
or
jae
jb
inc
mov
sbb
inc
call
push
aad
ljmp
je
cmp
push
push
xor
cmp
push
xor
push
cmp
loopne
push
pop
jge
cmp
and
jae
lret
sahf
clc
mov
lret
cmpsb
dec
nop
mov
fldl
mov
inc
imul
out
ret
mov
mov
sub
in
aad
cmp
mov
jno
cmp
lret
cmp
mov
cld
push
lret
mov
cld
xchg
sbb
cmp
push
xlat
mov
push
xlat
push
into
pop
sbb
jae
addb
aas
jae
aad
imul
mov
mov
adc
test
mov
popf
scas
out
push
push
mov
push
push
cmp
push
push
cmp
lret
in
dec
insl
cmp
push
dec
xchg
xchg
xor
inc
adc
jno
mov
imul
push
or
dec
sub
ret
jo
mov
jno
mov
imul
inc
adc
xchg
dec
sub
push
pop
sub
push
aam
cmpxchg
push
push
or
dec
sub
ret
jo
push
xchg
cmp
jg
push
push
xor
sbb
jae
sbb
loopne
aam
cmpxchg
push
push
or
dec
sub
ret
jo
xor
ficomps
inc
int
sbb
jae
sbb
loopne
aam
cmpxchg
push
push
or
dec
sub
ret
jo
xor
ret
cmp
fcompl
push
adc
call
push
push
cmp
inc
adc
xchg
dec
sub
imul
add
mov
inc
or
sbb
push
adc
jae
dec
js
cmp
jae
ret
cmp
pop
sbb
and
jo
lret
and
mov
adc
sbb
adc
or
pop
push
or
and
mov
negb
xchg
mov
jns
push
push
cmp
lret
push
rcrl
xor
jae
and
cmp
push
push
cmp
popf
daa
es
nop
out
push
push
push
add
xchg
adc
sub
dec
jbe
adc
jae
fdivs
jb
push
push
and
loopne
jne
push
xor
push
cmp
rcl
cmc
jmp
inc
or
lcall
lret
adc
push
adc
rclb
push
push
cmp
addl
dec
rcr
or
sbb
sub
mov
push
cld
cmp
inc
cmp
sub
movsb
pop
aas
cmp
decb
outsl
das
mov
push
popf
leave
js
mov
adc
mov
mov
mov
out
add
outsl
sub
aas
push
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
push
cmp
mov
into
jb
push
cmp
pop
xor
push
push
cmp
push
cmp
push
rorb
sub
pop
adc
push
push
mov
jae
push
cmp
push
cmp
push
cmp
andl
sbb
insb
pop
sub
repnz
daa
pop
xlat
sti
xlat
stc
test
dec
lcall
mov
cmpsl
push
imul
or
pop
push
in
or
push
or
lods
scas
mov
push
xlat
jle
jno
sahf
adc
ja
js
popa
pop
rcr
outsb
data16
xchg
movsl
ret
icebp
cli
leave
cmp
out
cmc
jp
push
push
ror
mov
or
xchg
icebp
out
add
out
push
or
pop
lods
and
cwtl
cmp
mov
mov
adc
daa
cmp
mov
push
inc
cmpsb
push
sbb
arpl
push
mov
adc
pop
xor
sbb
and
test
jle
stos
fadd
mov
mov
push
cmp
in
xchg
cmpsb
adc
inc
aas
dec
push
pop
adc
ds
dec
jle
test
shlb
aam
jp
sbbl
out
mov
push
cmp
cmp
lods
cld
out
imul
mov
scas
je
mov
iret
fnstsw
pop
dec
mov
movsl
add
cwtl
push
std
adc
and
gs
lock
inc
ret
data16
xlat
aad
shl
dec
and
lret
and
jne
sarl
incb
pop
aas
shlb
daa
push
jbe
mov
fsubr
in
test
dec
jae
scas
sub
shrl
sarl
pop
adc
roll
inc
loop
lahf
jo
lret
mov
fidivl
scas
xor
rcrl
cmpsb
and
test
je
lahf
stos
pop
mov
insb
pop
fcos
dec
fldt
ds
ja
lods
mov
repnz
jg
cwtl
hlt
lret
stos
imul
imul
sub
cld
jnp
push
imul
cmp
push
pop
cwtl
out
and
mov
lcall
pop
or
notl
aam
rol
or
dec
shlb
in
cmp
mov
pop
adcl
cmpsb
pop
adc
test
xchg
sub
into
shlb
out
stos
rcrl
les
cmc
das
pop
lret
or
cmp
mov
jle
test
das
pop
sub
xchg
call
add
pop
jle
dec
push
ficompl
inc
mov
and
cmpsl
push
ret
movsb
cmpsl
mov
push
ficompl
in
shrl
repz
aaa
in
jnp
sbbl
dec
sar
fsts
or
lcall
dec
or
daa
mov
lods
xor
andb
adc
iret
call
jnp
add
and
add
add
add
rorb
rorb
xor
adc
dec
add
lods
or
cmp
add
add
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
or
hlt
stos
or
adc
or
imul
pop
scas
or
pop
scas
or
sub
or
aaa
scas
or
daa
scas
or
inc
scas
or
das
scas
or
push
scas
or
aaa
scas
or
pop
scas
or
aas
scas
or
gs
or
inc
scas
or
jb
or
dec
scas
or
jg
or
push
scas
or
mov
or
xchg
scas
or
scas
or
mov
scas
or
lods
scas
or
ja
or
mov
scas
or
lds
or
shrl
or
fisubrs
or
jmp
or
lahf
scas
or
cmc
scas
or
cmpsl
scas
or
add
or
jne
gs
xor
fs
insb
add
xor
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
jbe
jo
xor
cs
insb
add
jb
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
outsb
insl
insl
cs
insb
add
gs
jne
xor
cs
insb
add
gs
xor
fs
insb
add
jb
imul
add
outsb
imul
insb
add
outsl
arpl
xor
fs
insb
add
imul
fs
insb
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
scas
or
add
add
aam
or
add
add
out
or
add
add
ljmp
add
adc
add
and
add
xor
add
inc
mov
add
add
add
or
add
add
imul
add
or
add
add
mov
add
pushf
mov
add
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
gs
je
push
imul
inc
add
add
inc
dec
outsl
arpl
add
push
gs
jne
jb
push
popa
insb
jne
inc
js
add
add
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
jo
jb
inc
jbe
outsb
je
add
add
gs
jo
outsb
inc
outsb
jne
inc
add
add
popa
jb
push
gs
imul
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
jbe
dec
jne
push
jb
je
add
add
jae
jb
gs
je
imul
gs
gs
outsl
popa
jb
push
jns
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
je
jb
gs
gs
fs
imul
inc
inc
insb
gs
outsb
jne
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
arpl
imul
add
push
outsb
jb
popa
insb
imul
arpl
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
add
add
add
add
add
add
add
add
add
add
sbb
add
add
add
add
add
mov
mov
mov
mov
test
test
mov
mov
test
movb
add
add
incl
test
mov
mov
test
mov
movb
add
incl
test
test
incl
incl
incl
incl
add
incl
mov
test
test
test
test
test
add
test
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
mov
mov
test
add
add
incl
add
add
incl
add
add
test
add
mov
mov
mov
test
test
add
add
incl
incl
incl
incl
test
test
add
incl
add
add
incl
add
add
test
add
mov
test
test
add
test
test
add
test
test
add
test
add
add
incl
add
add
incl
add
add
test
add
mov
test
test
movb
add
inc
mov
test
add
test
test
add
add
add
add
incl
add
add
incl
add
add
test
add
test
add
test
add
mov
test
test
add
add
add
test
add
add
incl
add
add
incl
add
add
add
add
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
add
add
add
test
incl
add
add
add
test
add
add
mov
mov
incl
test
add
add
add
incl
add
mov
add
add
add
add
test
test
test
test
test
movb
test
test
test
test
test
mov
mov
incl
add
test
test
mov
test
add
test
mov
mov
test
incl
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
movb
test
movb
mov
mov
add
test
test
test
add
mov
mov
inc
mov
test
add
test
add
test
mov
test
add
inc
mov
add
add
add
test
test
test
mov
test
test
mov
add
add
add
inc
mov
add
test
add
add
incl
add
add
incl
add
add
incl
add
add
test
mov
test
add
test
test
test
test
add
incl
add
add
test
incl
mov
test
add
test
add
add
add
test
add
add
incl
mov
test
add
test
test
add
incl
incl
mov
test
add
test
test
add
incl
test
add
test
add
mov
test
add
test
test
add
incl
add
incl
add
add
test
mov
test
add
test
add
add
add
incl
add
mov
test
add
test
test
test
mov
test
add
test
test
test
test
test
test
mov
test
add
test
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
test
incl
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
incl
add
test
test
test
test
test
test
add
add
jg
aas
sarb
pop
rcrb
xadd
loopne
rolb
add
add
inc
add
inc
add
xadd
add
rolb
add
add
add
add
add
add
add
add
add
add
add
add
pavgw
add
repz
ud0
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
add
jmp
add
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
scas
push
cmpsl
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
cmp
xor
outsl
hlt
cltd
jno
sbb
push
ja
xor
mov
push
call
jbe
jmp
sub
add
js
add
and
ret
mov
imul
imul
inc
in
mov
jmp
or
push
xchg
sbb
test
xor
in
pop
add
push
les
fstps
nop
push
sbb
mov
mov
imul
call
add
sub
cmpsl
inc
imul
mov
add
dec
mov
mov
push
or
not
aam
add
or
xchg
ja
add
push
push
stos
xlat
shrb
shrl
inc
mov
pop
sbb
cmc
cli
cs
fidivs
out
push
lock
xor
jb
es
jb
adc
fistl
push
fsubp
and
adc
fmuls
into
icebp
push
ds
cmc
or
fcmovne
xchg
fdiv
out
xor
mov
test
icebp
add
xchg
ljmp
xchg
bound
cmp
into
push
mov
jns
pop
lock
std
xor
cltd
or
push
bound
sbb
insl
pop
mov
mov
lahf
and
inc
pop
ja
popf
xor
cld
out
test
jle
loopne
rcrl
gs
mov
ljmp
jl
nop
in
lods
test
xchg
loope
or
out
add
xchg
fdivrl
mov
add
push
push
xchg
icebp
inc
scas
es
aam
mov
xchg
mov
xchg
sbbl
sar
jg
mov
leave
movsb
xorb
fdivr
push
xor
jmp
xor
dec
fistps
clc
rorl
cmpsl
sub
lods
dec
inc
repnz
stos
pop
outsb
int
inc
cli
imul
or
shlb
xchg
push
sbb
int3
pop
mov
scas
adc
scas
xchg
das
outsl
imul
sub
and
nop
mov
adc
icebp
ja
sub
insl
inc
outsb
repnz
mov
daa
pcmpgtd
loop
xchg
ss
dec
xchg
ret
insb
push
out
push
in
cmpsb
sbb
push
jecxz
xor
and
pop
sbb
rorl
in
icebp
mov
roll
jl
sbb
aam
lret
sbb
mov
outsl
cmc
out
jns
and
mov
inc
inc
xchg
push
cmc
unpcklps
xchg
mov
xor
scas
xlat
sbb
je
or
inc
dec
xor
adc
jmp
dec
ss
or
adc
orl
repnz
aad
adc
cmpl
pop
xor
pop
mov
ss
loop
pushf
fisubrs
cmp
xor
les
pushf
dec
jnp
or
adc
js
mov
cld
lahf
xor
cmpsb
sub
arpl
push
int3
inc
push
xor
or
sbb
sub
pop
lock
mov
in
mov
xorb
xor
or
idivb
xchg
push
std
jp
inc
mov
sub
xlat
in
out
push
jns
inc
ficompl
aam
sbbb
push
test
push
pop
pop
push
inc
bound
arpl
add
mov
push
sbb
fists
nop
scas
mov
dec
loop
cmp
mov
mov
mov
and
in
imul
rclb
inc
or
test
mov
jo
sar
cmp
fidivl
mov
push
test
add
jno
mov
out
or
push
add
sbbb
lock
and
loop
jmp
fnstenv
push
pop
aaa
fmull
cmp
and
xor
jo
jle
shl
jle
add
pop
adc
xchg
test
cmpl
cmp
fsts
fnstcw
ret
lea
movl
push
jl
mov
sub
bound
outsl
out
lcall
xchg
mov
mov
inc
ret
les
shll
sub
pop
test
scas
or
adc
std
int
dec
test
mov
out
in
negb
sub
adc
push
cmp
dec
jne
int3
push
inc
lods
jp
out
sahf
scas
ret
adc
jns
sarb
fildl
out
cmpl
fsave
popl
int
iret
insb
mov
sbb
cmp
out
repnz
repz
xor
stos
jne
repz
fistps
push
lods
sbb
rcr
cmp
repnz
lahf
push
mov
add
cmp
cmc
xor
add
enter
movsb
ret
xchg
ret
call
dec
call
inc
sbb
fimuls
mov
jle
xchg
add
mov
add
dec
push
ljmp
fs
es
das
pop
cmp
pop
or
aaa
imul
lret
loop
loopne
je
hlt
cli
mov
repnz
movsb
jl
sub
rcll
int3
outsl
and
add
out
pop
call
in
jnp
inc
cmp
mov
loopne
loope
mov
dec
je
dec
das
inc
or
inc
lea
mov
inc
dec
adc
pop
add
xchg
and
or
cmp
push
lret
adc
jle
rclb
ljmp
iret
fisubs
adc
jp
inc
adc
pop
dec
iret
les
int3
fcomip
add
leave
dec
pop
jl
mov
dec
sti
repz
pop
dec
mov
imul
das
pushf
jb
xor
inc
sbb
inc
div
dec
aaa
sub
daa
mov
loopne
mov
xchg
cmp
stos
xor
xor
fstl
push
ret
push
mov
loop
add
loopne
cmp
daa
jo
inc
cmp
aaa
mov
int
and
leave
mov
jge
icebp
rolb
stc
mov
push
fisttpll
call
test
cmp
cmp
mov
and
ficoms
test
jmp
or
cs
test
mov
loopne
and
jbe
aas
imul
mov
xchg
test
sarl
inc
in
xchg
xor
iret
push
int3
pop
xor
sub
xchg
sub
fwait
insl
add
out
xor
inc
sub
cmc
hlt
adcl
mov
gs
into
iret
fadd
fcmovnbe
scas
lahf
sub
xchg
or
xlat
and
fcmove
sbb
pop
mov
scas
iret
cmp
icebp
adc
jge
daa
inc
in
lahf
aam
loopne
and
mov
lahf
lcall
push
lods
gs
sub
je
add
xchg
dec
push
pop
mov
aam
test
mov
dec
rorl
jge
test
cmp
and
inc
adc
mov
mov
push
sbb
ret
imul
out
mov
mov
arpl
push
and
out
shrb
push
adc
mov
outsl
aad
and
lea
inc
and
cld
or
cs
push
pop
xchg
gs
repz
fldenv
pop
xor
jecxz
ja
xor
rolb
mov
and
push
fists
lock
push
mov
movsl
xchg
data16
lods
inc
jb
je
mov
arpl
fs
ret
xor
pop
incl
scas
or
jae
shlb
xlat
divl
cwtl
frstor
aam
mov
xor
jns
sti
jne
cltd
test
xor
sahf
popa
aam
pop
mov
or
shll
pop
test
popa
pop
cmp
jmp
aam
mov
jo
cmp
stc
push
or
and
xchg
das
jmp
orb
sar
les
jne
cmp
mov
push
mov
mov
cs
stos
dec
lds
and
mov
mov
shlb
dec
insb
popf
fists
inc
jle
outsl
jmp
int3
lock
lods
das
nop
andb
insb
cmp
xlat
and
rolb
pop
adc
xchg
adcl
ja
lock
or
movsl
fildl
and
mov
push
jg
cmp
out
clc
in
test
gs
js
popa
sub
int
out
pop
push
sub
lock
inc
mov
jmp
pop
mov
mov
add
imul
pop
sbb
out
jnp
cltd
xchg
fdivs
testl
pusha
push
test
sbb
xchg
icebp
jns
das
call
xor
cmpsl
and
inc
rcr
mov
pop
mov
jmp
mov
test
push
scas
sahf
cli
js
dec
xchg
ds
mov
jl
add
or
xchg
fidivl
mov
jmp
imul
test
mov
and
jecxz
clc
add
cmpsl
loop
mov
icebp
sub
mov
xchg
out
jecxz
xchg
mov
iret
aaa
cmc
imul
jbe
in
mov
out
or
dec
or
movsb
fildl
and
jle
loop
cmpsb
repz
lret
stos
jbe
outsb
scas
popf
push
test
cli
dec
into
or
shr
jp
mov
cwtl
lcall
push
dec
push
loope
push
fwait
mov
jae
hlt
test
stos
outsb
jno
stos
fwait
movsl
xor
xchg
iret
iret
xchg
fsubs
cs
out
jo
movsl
aam
pop
aas
adc
jbe
push
and
xchg
or
jge
int
jbe
fsubrs
test
add
sti
pop
add
test
lds
jmp
mov
leave
aas
rolb
outsb
andb
sahf
repz
lds
sub
xchg
mov
fcomps
push
fcmovnb
loopne
lods
sub
sub
enter
outsl
scas
jmp
lcall
sar
pusha
push
cmp
and
pop
mov
cld
mov
adcl
inc
jnp
fstpl
les
insl
stos
add
cmp
push
cmp
loopne
push
or
push
lds
sbb
dec
dec
cmp
call
test
shrb
sbb
loop
push
mov
int
inc
mov
mov
push
xor
fisubrl
cwtl
insb
into
jg
jmp
push
loope
rorl
adc
jo
fbstp
fidivl
fwait
push
cld
inc
xchg
mov
movsl
cmpsl
out
ja
push
pop
jp
sub
bound
dec
xchg
loope
dec
and
inc
add
inc
add
sbb
xchg
ret
pop
orb
jbe
mov
movsl
xor
ljmp
inc
out
lret
sub
test
xor
mov
shll
mov
scas
mov
cmpsl
pusha
jl
rcrb
icebp
xchg
test
mov
imul
imul
pop
negb
outsl
push
dec
or
and
in
das
push
jo
das
jl
dec
push
fwait
or
mov
cwtd
dec
pop
dec
xchg
or
sbb
repnz
sbb
and
jnp
loopne
rcl
mov
dec
call
xor
adc
sub
mov
add
push
icebp
xor
push
dec
and
xor
xor
call
call
arpl
mov
mov
sub
test
pop
xor
ret
fcoms
decl
add
and
test
fidivrs
or
mov
pushf
cltd
call
test
fstpt
ret
movsl
aaa
xchg
pop
std
lcall
fbstp
fisubl
or
pushf
xchg
push
cmc
loope
or
in
popf
cmpb
or
gs
and
lock
shlb
lret
sbbl
mov
orl
popl
adc
mov
int3
xor
add
insb
inc
into
inc
lcall
or
jle
push
or
cld
cmc
or
lds
adc
pop
aam
jbe
ficomps
lcall
push
orl
push
shrl
pop
pop
mov
test
jl
mov
sub
in
inc
and
adc
dec
xchg
jbe
pushf
mov
push
cmc
xor
jl
sahf
mov
and
sub
adc
pop
inc
scas
aas
add
add
sbb
and
xchg
pop
ret
int3
sub
push
mov
mov
xchg
xchg
das
cmc
cli
imul
and
sub
sbb
mov
xor
mov
adc
mov
xchg
pusha
push
jmp
dec
pushf
cmp
dec
lret
inc
cmp
das
or
sub
orps
fimuls
jl
or
mov
negl
data16
xchg
pusha
outsl
inc
pop
push
inc
std
jp
jb
loope
jnp
cmp
pop
sbb
or
or
mov
and
cmp
mov
jmp
insb
push
jae
add
mov
sub
out
jo
xchg
mov
sti
inc
adc
fstl
adc
mov
shl
and
mov
sub
and
je
js
ss
mov
mov
inc
or
sbb
popa
ret
hlt
inc
dec
popa
pop
stos
inc
add
shll
adc
stos
pop
xchg
push
sarl
inc
and
jae
mov
mov
jmp
lock
or
jbe
xor
and
iret
xor
subl
pop
cwtl
scas
daa
fst
clc
pusha
fcom
je
cmpsl
dec
add
and
push
mov
pusha
les
jae
sbb
and
iret
adc
inc
xor
pop
dec
pop
insb
dec
loopne
popa
das
int3
jmp
imul
cmp
pop
push
test
bound
bound
push
loop
roll
fdiv
dec
mov
and
hlt
mov
push
jl
adc
cmp
bound
and
enter
mov
pop
mov
mov
repz
andl
in
sahf
cld
inc
xor
xor
sbbl
imul
xchg
jae
fnstenv
cmpsb
xor
outsl
fistl
lods
pushf
nop
sahf
adc
dec
xchg
mov
adc
arpl
cli
fwait
xor
fidivs
xor
insl
add
cmpsl
or
leave
jo
popa
jg
cmp
movsl
dec
int3
cli
popa
mov
inc
jecxz
mov
aaa
fs
mov
jno
mov
dec
mov
pop
xorl
mov
inc
push
rcl
ja
adc
movsl
out
nop
stos
sub
and
xlat
sub
jge
adc
rclb
rclb
xchg
inc
test
or
mov
sti
testl
sub
pop
lds
add
and
xor
xchg
dec
test
cmp
xchg
out
jbe
mov
fwait
rcrl
clc
je
inc
in
mov
cmp
js
xor
arpl
in
sub
pop
pop
inc
sub
cmpsb
icebp
mov
loop
xchg
hlt
fsubl
sub
cli
sub
mov
adc
add
sub
xchg
inc
lock
xchg
fsubrp
daa
xchg
mov
addr16
mov
outsl
sbb
sub
adc
mov
sbb
daa
cmp
sub
lahf
dec
neg
leave
mov
imul
test
loope
pop
sub
sbb
scas
test
pop
pop
mov
lds
dec
enter
ds
pop
sbb
in
insb
out
push
xor
iret
pushf
enter
pop
or
aas
call
mov
jno
jbe
lds
cwtl
pop
aad
jmp
sbb
sub
and
xor
pop
cmpsl
pop
push
mov
cmp
jno
pusha
outsb
mov
es
repnz
xor
loope
call
push
xor
lret
das
add
insb
dec
add
xchg
xchg
out
aad
sbb
add
inc
mov
imul
push
xchg
cmp
jno
push
pop
cli
ss
push
cmpsb
popa
lea
dec
popf
or
arpl
divb
ret
mov
or
repz
mov
push
push
lret
sbb
pop
setle
std
fsubrs
adc
jns
cmc
sahf
add
inc
cmp
sbb
add
sub
mov
adc
rcr
inc
dec
sub
outsb
repz
in
jp
sbb
xchg
dec
gs
arpl
ss
arpl
mov
pop
inc
out
jp
stos
aas
cmc
mov
mov
sbb
xchg
lods
sbb
pusha
pusha
cmc
pop
in
ljmp
lods
sbb
sub
lds
mov
aam
hlt
movsb
xchg
mov
jmp
fs
cmp
mov
int3
push
mov
sub
cmc
mov
push
mov
out
jno
or
hlt
outsl
xlat
aaa
push
sarb
mov
fs
mov
xchg
mov
xor
ds
xor
lret
out
push
xchg
lea
pop
xor
jae
movsb
pop
leave
inc
and
loopne
fcom
out
loopne
call
loop
mov
enter
mov
loope
sbb
xchg
mov
inc
orps
ds
shll
xchg
and
xchg
fisubl
popf
das
lea
inc
roll
push
adcl
and
jne
jbe
push
js
stos
test
popf
test
xchg
repnz
mov
mov
xchg
rorl
fdiv
dec
fnsave
mov
jne
push
ds
cmc
popa
notb
sub
aam
xchg
add
imul
enter
pop
xchg
jno
jae
stos
lcall
sbb
test
shl
xchg
sub
call
push
repnz
popa
pop
sub
lcall
call
pop
cmc
daa
push
divb
in
fnstcw
je
or
inc
inc
stc
push
sahf
xchg
adc
jmp
rcrb
mov
pop
data16
inc
cltd
addb
mov
jb
adc
ffreep
sbb
and
gs
push
mov
and
loop
push
je
adc
and
sahf
pop
fwait
div
mov
dec
test
push
pop
inc
jge
push
sahf
icebp
cmp
push
jno
fimuls
jmp
and
popa
cwtl
dec
out
push
sub
mov
lahf
mov
pop
push
xchg
cmp
dec
sub
out
jp
int3
or
push
stos
sbb
xchg
in
push
jg
scas
pop
and
push
xor
lahf
testb
lahf
sbb
xchg
pop
jecxz
ja
and
aad
inc
dec
icebp
adc
pop
aaa
jns
ror
lods
cltd
push
ret
sub
lcall
test
adc
xchg
ret
daa
lods
inc
jmp
jo
out
mov
cltd
cmp
sti
fadd
data16
inc
repnz
jbe
cli
jle
ja
mov
mov
in
add
sbb
jl
jl
fildll
cmp
push
lahf
fstl
test
xor
mov
jp
loope
sahf
jg
sbb
push
mov
push
jno
mov
and
dec
test
outsb
rcrl
stos
stos
aaa
mov
cmp
mov
fadds
pop
adcb
call
cmp
xor
adc
jae
mov
sbb
xor
in
sub
mov
je
notl
ret
dec
xorl
jmp
jno
rcll
es
jg
xchg
xorl
test
out
pop
inc
rcll
or
bound
push
add
enter
push
lahf
add
jecxz
cmp
xor
inc
popf
call
fstps
ret
add
adc
push
dec
out
fnstenv
pop
imul
fdivl
les
mov
pop
popa
iret
outsl
cltd
mov
dec
cltd
adc
stos
jecxz
push
test
jmp
mov
notl
lods
push
push
pop
and
or
dec
shr
subl
cli
shrl
xchg
les
jbe
mov
jb
push
sub
lods
insl
into
or
push
pop
pop
push
scas
aas
push
loop
mov
push
sbb
pop
dec
sahf
aas
jmp
pop
xchg
outsb
mov
add
in
jbe
mov
jb
daa
cmp
cmpsb
ds
addl
add
test
jle
les
and
lret
in
push
dec
or
jns
dec
bound
mov
cmpsl
rorb
in
mov
fcompl
out
aas
sub
and
xchg
mov
xor
ds
ljmp
dec
mov
roll
sbb
lea
inc
js
sub
mov
popa
sbb
push
test
cltd
and
ret
push
mov
sub
daa
leave
es
cmc
mov
xor
incb
lods
arpl
pop
ds
mov
lock
xchg
cltd
dec
outsb
sbb
out
sub
mov
loopne
repnz
jle
push
push
outsb
jne
mov
insl
scas
sub
cmp
mov
sbb
push
rcrb
cmp
jg
sahf
sti
push
and
iret
insl
jns
sub
cmc
xchg
xchg
cmc
shll
addr16
dec
popf
imul
dec
or
cmpsl
rcl
std
mov
inc
sahf
lgs
xchg
xlat
mov
or
mov
insb
mov
xchg
mov
mov
mov
rcrl
add
pop
mov
std
fildll
inc
leave
adc
test
push
dec
popf
test
sbb
dec
movsb
and
jle
es
sahf
xor
aam
repnz
xchg
int3
cmpsl
imul
push
in
cli
movsb
push
leave
push
cmp
mov
and
add
loope
add
mov
insb
imul
fsubs
dec
dec
ds
rdpmc
test
add
scas
rep
cmp
xlat
scas
mov
aad
push
ret
dec
std
mov
and
inc
jle
mov
adc
cmpsb
sbb
hlt
or
mov
out
mov
stc
movsb
push
inc
stos
push
inc
inc
jo
push
mov
inc
push
xorw
mov
cmpsb
fdivrs
test
aam
xlat
mov
jno
add
jno
jnp
xchg
fs
fdivrs
into
cli
clc
lahf
cld
dec
xchg
mov
popa
adc
sbb
cmp
shrb
xchg
in
lods
out
sub
inc
mov
insb
out
mov
adc
or
insl
xor
push
enter
mov
mov
iret
push
gs
pop
pop
loopne
adc
loope
jns
cmc
xchg
xchg
or
stos
repnz
add
mov
pop
in
int3
pop
xlat
xchg
sbb
daa
xor
mov
inc
les
xlat
mov
jle
test
jmp
aam
push
adc
lds
les
xor
movl
xchg
pop
stos
ret
xchg
add
hlt
loop
lcall
mov
ficomps
into
push
xchg
jge
test
dec
and
sub
adc
stos
push
cwtl
add
mov
xor
out
int
inc
cmp
lret
out
push
xchg
insl
inc
int
lret
dec
adc
or
repz
daa
jne
sbb
sbb
int3
fcmovne
mov
arpl
mov
fcmove
inc
mov
sub
in
sub
xorb
idiv
fdivr
jnp
mov
adc
cmc
hlt
jmp
sub
mov
out
das
pop
sbbb
popa
ret
xchg
xor
loope
outsl
sti
je
or
test
mov
mov
push
fcoms
push
cmp
sub
xchg
in
cmp
sub
cmp
jl
mov
sbb
jmp
dec
pop
inc
xor
cmpl
xor
xchg
divb
filds
adc
mov
or
xor
cmp
or
mov
lds
sbb
add
jnp
pop
loop
repnz
iret
add
popf
dec
sbb
cmpsb
jo,pn
in
aam
movsb
cltd
aam
fwait
or
sub
aaa
or
je
cmp
mov
sbb
in
push
rorb
jecxz
fs
orl
lahf
mov
pop
aas
lret
js
and
adc
int
sub
scas
jb
sbb
sbb
lret
mov
out
dec
jp
mov
in
ficoms
aad
leave
push
shrb
or
mov
xor
dec
popa
cmp
stos
xlat
push
xchg
cs
out
cvtps2pi
pop
pop
pop
into
mov
je
mov
aad
dec
pop
cmp
repnz
pop
mov
mov
outsb
fsubl
cld
jo
adc
cmp
arpl
test
add
sahf
es
or
and
stos
test
int
icebp
jbe
ret
mov
cmc
push
nop
dec
cli
sub
adc
faddp
xchg
inc
add
and
adc
jne
xchg
mov
xchg
cmp
pop
pop
jle
or
mov
cwtl
sub
jns
add
mov
push
push
mov
movsl
add
mov
daa
mov
aas
mov
mov
ljmp
imul
sub
arpl
enter
imul
add
aad
fmull
push
or
push
js
imul
jno
add
jno
aaa
aad
dec
adcb
fcmovbe
sub
push
push
je
insb
xor
xor
aad
xor
and
jo
clc
clc
in
jns
push
jns
cmpsb
cmpsl
push
int3
cmp
cs
aam
and
fucomp
mov
pushl
roll
xchg
inc
pop
cs
mov
cmp
std
test
xlat
rcrb
iret
mov
sahf
mov
mov
pop
repz
mov
adc
push
adc
add
push
cs
jo
mov
mov
test
cs
mov
std
leave
adc
xchg
ror
and
enter
ret
and
mov
dec
pop
mov
sub
or
mov
inc
sub
imul
fbld
mov
lahf
mov
cwtl
and
cwtl
rcrb
mov
jp
aaa
loope
or
shr
mov
aam
fdivp
or
mov
sbbl
adc
gs
pop
inc
popf
aas
mov
xchg
push
mov
and
mov
fcomi
cmp
cmp
jg
pushf
xchg
cwtl
pop
fcoms
stos
xlat
cmp
in
fsubrp
call
mov
rorb
or
stc
das
lds
scas
rcr
les
mov
add
ret
mov
or
ret
popf
and
icebp
and
mov
push
movsb
hlt
mov
xor
dec
addl
push
mov
xor
and
jle
push
cli
popl
insl
icebp
and
mov
cmpsb
addl
mov
clc
or
xor
sub
leave
and
mov
pop
fsts
cmp
sahf
fildl
pop
mov
shll
std
scas
inc
dec
addr16
loope
and
mov
in
mov
mov
int
stc
and
nop
mov
cmp
adc
and
and
jns
ret
and
push
sub
mov
stos
scas
jae
addb
lea
enter
add
scas
mov
mov
rorb
hlt
pop
and
adc
cs
aam
cmpsl
orb
dec
or
jmp
xor
dec
cwtl
ljmp
cld
lret
add
loope
aam
inc
daa
fsubrl
mov
pop
inc
adc
jge
bound
bswap
jge
pushf
xor
xchg
sbb
add
movsb
dec
bound
xchg
mov
pop
xchg
jge
fwait
inc
adc
ss
fldenv
js
mov
add
cmp
int3
mov
sbb
adcl
jno
dec
mov
into
in
pop
push
lret
movsl
xchg
jecxz
test
mov
incl
fs
push
insl
fistps
cmp
leave
adc
ret
cmp
outsb
mov
insl
loopne
cmp
mov
into
pusha
jno
ret
arpl
loop
bound
adc
scas
mov
pop
inc
cmp
sahf
cltd
int
lds
bt
mov
mov
loop
xor
js
mov
nop
pop
and
and
stos
adc
mov
push
sub
out
fstpt
arpl
lret
sbb
push
xor
int
dec
ss
js
mov
repnz
loope
and
sub
mov
pop
sub
lock
and
in
and
cmpsl
je
adc
xchg
loop
cmpb
mov
mov
pop
aaa
jne
test
shl
insb
sbb
inc
mov
mov
mov
repz
das
movsb
sti
andb
aad
pop
adc
adcb
gs
fadd
push
std
shl
jbe
test
mov
rorl
stos
js
icebp
mov
mov
or
pop
xchg
fstps
test
push
lods
sub
push
inc
repz
fdivr
inc
popl
je
mov
loope
dec
jp
xor
int
pushf
inc
es
push
jg
sbb
push
mov
test
pop
cmp
or
in
in
xor
pop
xchg
sub
push
test
jmp
xor
sub
or
shrl
cmp
adc
insl
mov
shrb
mov
cmpsl
push
outsl
push
xor
lds
cmp
xchg
sbb
lahf
xchg
sub
in
test
or
sub
outsl
mov
sbb
in
pushf
scas
js
repnz
xchg
jne
and
mov
xor
add
fistpll
and
pop
xchg
or
jne
bound
out
pop
add
lret
ficoml
add
fcmovbe
jbe
test
std
inc
lds
xor
dec
divl
pop
insl
or
je
push
ljmp
in
fwait
push
xchg
scas
out
mov
sub
or
jg
inc
mov
in
test
sub
jp
mov
inc
loope
dec
shrl
adc
div
xchg
push
addr16
jo
mov
addr16
mov
cmp
dec
cmp
fidivrs
cmp
mov
inc
or
es
and
mov
mov
pop
nop
xchg
jne
test
mov
mov
outsl
xor
into
data16
test
cld
cmp
in
cmp
pop
mull
inc
mov
addl
sub
xor
sub
and
icebp
sbb
mov
in
adc
mov
outsb
call
mov
inc
insb
loopne
arpl
hlt
mov
xchg
push
test
adc
push
pop
adc
mov
mov
pop
mov
testb
add
sub
imul
or
clc
pop
xor
cltd
push
and
jl
movsl
insl
adc
das
xchg
adc
outsl
push
dec
jp
jl
imul
aam
je
icebp
lock
scas
add
test
pushf
mov
push
sbb
lock
jge
xor
daa
mov
in
dec
sbb
mov
jnp
inc
cmc
sbb
call
adc
cmp
aad
push
push
pop
ret
jmp
adc
mov
inc
mov
aad
les
xchg
sub
cmp
scas
push
test
fsubl
adc
dec
roll
sub
xor
div
mov
addl
faddl
aad
andb
xchg
add
pop
xor
sti
ja
sarb
in
inc
xchg
and
je,pt
int3
xor
sbb
pop
push
les
sub
out
outsl
mov
mov
rorb
mov
dec
push
mov
sbb
mov
aas
push
bound
push
cmpl
repnz
int3
imul
ja
or
loop
lcall
cltd
pop
outsb
dec
mov
in
inc
or
xchg
dec
and
inc
sub
push
in
test
adc
or
mov
and
fwait
stc
push
gs
dec
push
jp
mov
outsb
or
xchg
lret
push
hlt
scas
int3
lods
jnp
jmp
xlat
div
stos
add
rorb
mov
dec
cmp
xor
lcall
xlat
scas
mov
lea
sbb
cmp
mov
xor
push
div
mov
and
sub
sub
cmp
add
xor
mov
push
jl
sub
xchg
lods
test
xor
pushl
xchg
xor
pop
jmp
call
jg
andl
or
stos
add
cmpsl
xadd
jge
pop
fbstp
inc
cmp
sti
adc
rcr
idivb
dec
mov
or
mov
adc
cwtl
push
daa
mov
xchg
mov
pop
jns
sbb
cmp
or
mov
int3
adc
inc
adcb
push
mov
add
mov
xchg
movsl
mov
loopne
outsb
mov
test
in
cmp
inc
and
sarl
lods
test
int3
call
xor
popa
jbe
pop
push
mov
pop
mov
cmp
test
pop
imul
adc
inc
popf
arpl
roll
pop
leave
aad
ds
leave
aad
mov
dec
push
push
or
xchg
cmp
or
rorl
bnd
mov
inc
cmpsl
shl
cmc
xchg
push
sbb
sahf
les
inc
mov
mov
mov
cmp
adc
xchg
jl
std
mov
out
cltd
adc
ret
push
aam
pop
dec
mov
xor
inc
mov
pmaxsw
popl
aaa
mov
aas
xor
sbb
iret
inc
jl
push
xchg
call
sahf
jb
jb
call
adc
or
scas
fdivr
adc
jle
loopne
sbb
popf
mov
imul
sahf
lcall
mov
emms
mov
mov
dec
cmp
lret
sbb
imul
repz
mov
insb
and
jl
loopnew
xor
int3
mov
push
imul
mov
jge
or
ss
inc
mov
pop
or
cmpsb
mov
arpl
imull
ja
sbb
cmp
xchg
and
jmp
mov
dec
pusha
and
xor
mov
inc
pop
frstor
loope
xor
arpl
bound
and
lods
dec
xor
lock
movsl
call
adcb
sbb
rcll
pop
inc
lret
cmc
dec
addr16
jl
mov
sbb
push
jne
mov
shlb
jg
mov
out
popf
xchg
dec
jno
push
push
push
cmp
pop
mov
xor
ljmp
mov
sbb
orb
xchg
adc
fwait
and
int3
leave
push
sbb
or
mov
popf
push
cmpsb
xchg
jmp
dec
cwtl
dec
arpl
pop
jbe
xor
or
leave
mov
push
cmp
push
sbb
mov
push
dec
push
inc
out
vpsubsb
ret
icebp
add
lock
adc
iret
xor
xchg
notl
ret
mov
fstps
dec
fwait
mov
mov
cmp
stos
and
sbb
inc
pusha
movsl
test
aas
aam
std
sub
das
pop
ret
dec
setle
lds
or
es
andl
cmp
push
stc
mov
adc
pop
jle
std
xor
jg
aas
dec
jbe
dec
pusha
push
fcmovbe
ret
cmp
push
iret
test
lret
loope
push
call
orl
ror
and
mov
outsl
jge
xor
cmpl
icebp
stc
test
imull
sub
xor
inc
out
jecxz
out
pusha
or
or
test
push
add
orl
sbb
in
mov
aam
jne
jne
xor
add
sub
cwtl
mov
mov
mov
xchg
pop
lahf
push
mov
das
jae
mov
adc
mov
jo
insl
in
jp
sbb
add
xchg
andb
mov
pusha
fsubl
aaa
dec
jg
mov
or
ret
or
sbb
aas
jbe
push
pop
xor
push
fistl
mov
and
mov
inc
test
rcll
fists
adc
push
and
lret
add
mov
jo
push
inc
repz
mov
imul
inc
mov
add
rol
cs
movsl
push
inc
sbbb
or
pop
test
cltd
mov
cmp
cli
xchg
ss
ret
mov
les
mov
pusha
cltd
xor
stos
xor
cmc
in
inc
les
out
mov
mov
jbe
sbb
lea
pop
cmpsb
add
xchg
or
gs
add
sbb
inc
sub
rol
dec
jae
fidivrl
mov
lock
pop
jo
push
imul
mov
sbb
loop
jle
or
xchg
cmp
xor
mov
sbb
in
loope
iret
loope
or
pop
jecxz
ds
cs
jo
in
rcrl
sbb
leave
hlt
mov
aam
push
dec
nop
les
testl
in
cmpsb
push
mov
out
jbe
mov
scas
add
mov
dec
sti
pop
iret
adc
jp
std
test
sti
pop
out
xchg
xchg
cmc
pop
xor
stos
cwtl
push
xor
jp
push
in
and
push
mov
das
rorl
dec
ret
sti
imul
popa
and
stc
push
imul
bswap
pop
inc
fsubs
out
test
hlt
jns
je
cmp
mov
inc
movsl
test
cld
iret
stos
xchg
cwtl
cs
add
push
loop
mov
je
jno
jbe
shr
inc
inc
scas
scas
xor
xor
sbb
or
mov
push
fstps
lds
mov
sbb
inc
shl
push
out
mov
adc
add
addr16
cmp
insb
xchg
lock
mov
jns
inc
in
xlat
pop
lcall
jg
inc
xchg
cwtl
fs
add
dec
lock
fs
sbb
nop
or
adc
inc
vorps
adc
cmp
push
dec
push
stos
loope
jns
imul
pop
iret
push
lds
add
and
sbb
xor
out
xchg
cmp
dec
shll
cmc
push
cmpsl
ret
lcall
pop
push
repz
push
or
subl
add
jae
mov
mov
test
mov
fs
mull
push
jno
or
sub
lods
sub
lods
push
lock
das
xor
mov
mov
loope
add
andnps
sbb
insb
or
and
mov
and
push
xchg
xor
push
decb
pop
sub
fmulp
cmp
sub
fcoml
in
cmp
push
outsl
js
je
xchg
fisubs
dec
xor
xchg
mov
push
cmp
fwait
into
clc
and
ds
lret
rorb
dec
cmc
push
aad
in
insb
int3
jg
enter
ret
rcrb
or
xchg
scas
das
jns
inc
adc
mov
notl
lret
push
pop
sub
fstl
fiadds
dec
shlb
fs
imull
xor
mov
arpl
jl
push
sub
and
xchg
sub
inc
test
jl
or
andb
or
into
xlat
pushf
or
imul
movsb
fs
stc
push
in
dec
and
mov
or
or
fildll
push
fcompl
data16
mov
xlat
pop
enter
into
ds
mov
stos
cwtl
pusha
jno
inc
ficoml
push
lock
add
dec
loopne
adc
xchg
pop
inc
cmp
leave
xor
or
sbb
cmp
push
xchg
stos
scas
inc
inc
out
and
add
pop
rcrl
adc
inc
inc
fistl
in
pop
std
ret
mov
fcmovnb
push
sti
jne
xchg
push
lock
shlb
andb
pop
adc
pinsrw
cmp
adc
movsl
ret
mov
pop
pusha
jo
stos
mov
sbb
ret
lahf
int3
mov
jge
mov
mov
xor
jns
xchg
sahf
stos
mov
xchg
mov
pop
mov
das
sub
xor
pop
jno
sub
mov
fisttps
rcrl
fimull
jl
sub
add
sub
mov
sahf
cmp
cmc
clc
sub
mov
cmp
push
in
or
mov
mull
int
movl
inc
mov
mov
popa
test
add
and
nop
or
add
sub
sbb
xchg
lcall
mov
lret
mov
mov
sbb
hlt
bound
adc
jnp
insl
loope
rclb
ds
mov
into
push
in
movsl
outsl
jo
mulb
negb
fldenv
push
ljmp
cmp
mov
sub
add
push
jge
mov
add
xchg
mov
pop
xchg
fnstenv
ljmp
xor
lea
loope
xchg
out
pusha
sbb
xor
rcrl
mov
adc
mov
xchg
cmp
mov
push
dec
dec
loop
int
mov
jmp
scas
sub
rol
add
data16
mov
andb
push
scas
test
insl
fistpl
mov
data16
jecxz,pt
lahf
lea
out
and
sub
jge
add
add
jg
push
or
lret
daa
js
pop
andb
add
dec
notl
jmp
cli
push
xor
cmp
or
nop
mov
push
push
js
fdivrl
cli
mov
xchg
cwtl
jge
push
test
addr16
hlt
and
fdiv
adc
int3
push
push
test
movsl
mov
mov
dec
mov
inc
test
std
xchg
and
jge
movsb
int
stos
cmpsb
inc
aaa
inc
push
add
mov
pop
cwtl
out
and
xor
or
pusha
and
enter
sub
mov
dec
mov
inc
mov
ja
sub
mov
mov
imulb
xor
fnsave
mov
pushf
nop
js
rcll
lret
out
adcl
and
mov
clc
pop
sti
jo
cltd
test
lret
xor
adc
cmp
dec
add
fnsave
lret
mov
test
in
lahf
in
clc
std
mov
add
outsb
lret
mov
dec
stc
js
ja
cvttpd2pi
xor
mov
push
cltd
les
lods
mov
addl
push
xchg
insb
popf
std
sub
scas
jae
and
push
push
andl
loop
pop
jb
push
es
fst
sahf
or
pusha
movsb
shlb
imul
xlat
mov
shll
sub
mov
cmp
mov
xor
mov
lcall
nop
cmp
inc
jno
filds
dec
sti
mov
imul
sbb
xchg
push
pop
or
test
mov
and
sbb
fsub
popa
mov
test
add
rcrb
dec
push
xchg
mov
or
xchg
stos
inc
mov
fwait
push
xchg
ja
int3
or
dec
lret
aaa
jno
push
pop
and
ret
fldt
out
xor
movsb
call
pop
cli
dec
jne
xchg
cmp
and
mov
cli
js
aas
gs
sbb
dec
ret
mov
adc
rep
cmp
aas
loop
add
xchg
arpl
leave
movsl
add
pop
mov
cmp
jno
or
or
fwait
daa
inc
stos
ds
test
leave
jecxz
or
ret
xchg
fwait
and
fs
lds
adc
jno
cmpsl
or
push
fcomps
stc
addb
fwait
push
iret
xlat
ret
aad
mov
pop
dec
out
mov
sub
xchg
fnstcw
je
test
add
std
jmp
add
scas
dec
dec
inc
adc
jo
lods
repz
scas
dec
pop
arpl
scas
repnz
mov
fcoml
clc
mov
pop
out
mov
mov
pop
cmc
lcall
mov
fimull
icebp
cs
es
jg
imul
rorb
and
mov
lods
in
ret
push
mov
lret
adc
arpl
lcall
addb
sub
jge
sbb
mov
stc
daa
xchg
lods
jne
into
jnp
frstor
mov
mov
xor
adc
in
sub
lret
dec
xchg
push
cmp
xlat
out
adc
cli
mov
mov
es
dec
sbb
popf
lahf
aam
push
movsb
test
jb
data16
push
jle
out
or
xor
pop
out
mov
and
or
sbb
dec
iret
add
testb
dec
hlt
xor
cld
inc
subl
mov
pop
js
sub
pop
divl
lds
leave
push
pop
stos
inc
push
push
ds
mov
pop
stc
sbb
lret
sbb
mov
aam
jbe
xchg
fcompl
enter
dec
mov
dec
xchg
es
faddl
ss
fsubs
inc
inc
fwait
test
nop
and
into
push
mov
insb
adc
and
dec
mov
inc
xlat
pop
inc
sbb
stos
in
mov
inc
out
xchg
pop
lcall
adc
inc
lret
push
pop
pop
mov
mov
inc
rolb
jne
push
push
or
pop
jo,pn
cli
sbb
int
push
lcall
dec
jp
or
add
xor
mov
mov
mov
das
push
mov
cmp
xchg
mov
xchg
and
mov
loopne
imull
sub
sbb
dec
sub
cmpb
push
xchg
sub
data16
pop
dec
in
lock
lods
mov
mov
xchg
cld
fimull
loopne
inc
lea
mov
dec
ret
into
stos
stc
nop
inc
icebp
stc
test
hlt
sbb
aad
pop
xchg
ja
or
ret
push
xor
loop
mov
adc
add
sub
adc
mov
ja
adc
pop
bound
xor
cmp
push
fnstcw
mov
jne
mov
sub
icebp
scas
sub
into
sub
fildll
addb
cmp
mov
std
mov
fwait
mov
push
hlt
pushf
insb
pop
xor
inc
mov
imul
in
stc
xchg
sub
pop
cmp
aam
push
les
shr
and
add
mov
out
xor
insb
pop
movsb
add
ret
lahf
dec
xchg
inc
inc
mov
insl
mov
push
or
pop
int
inc
data16
popa
loop
lods
pushf
notb
lret
dec
add
xchg
xorl
movsb
cltd
fwait
or
dec
sub
std
dec
cli
or
add
enter
sbb
jo
sti
and
mov
lds
jl
test
inc
and
mov
mov
out
mov
icebp
cmp
push
in
xchg
out
push
aaa
mov
and
int
mov
rorl
push
pop
je
adc
push
sbb
push
leave
jbe
sarb
lock
pop
adc
les
sti
shll
sbb
addr16
inc
and
ds
cmp
aaa
push
sbb
mov
jl
imul
inc
mov
imul
mov
idivb
cmp
xchg
aad
lods
mov
sub
cmpsb
insl
fcoml
imul
pusha
add
mov
jecxz
sub
addr16
cwtl
hlt
pop
cmp
and
aaa
stc
dec
sub
fdivrl
dec
lcall
jns
push
ljmp
inc
and
aam
repnz
push
adc
testl
cmc
in
jp
dec
ds
xchg
loop
enter
dec
imul
fs
int
aas
xlat
adc
stos
dec
call
xor
adc
push
mov
in
jns
inc
shrb
sub
shrl
scas
cmpsl
adc
insb
pop
or
lret
inc
xor
aaa
fisttpl
mov
rcl
sbb
pop
incl
clc
out
out
loope
movl
call
lret
js
shlb
push
outsl
xor
lret
int3
mov
or
cld
out
sub
dec
sub
and
mov
jbe
or
clc
inc
lods
cs
mov
shl
mov
cmp
nop
jae
movsl
mov
push
push
or
addl
stos
or
pop
dec
idivl
fsts
sub
push
add
out
mov
js
push
nop
dec
leave
sbb
in
push
inc
popf
mov
push
push
pop
fmuls
mov
scas
jg
jp
xor
ficoml
cmpsb
mov
push
cmp
and
std
aas
pusha
mov
rorb
imul
adcb
and
jae
fcmove
adc
push
sub
xchg
push
jnp
mov
cmc
add
test
sbb
sbb
addr16
add
leave
fs
int3
pop
and
jae
loope
xchg
adc
pop
rcr
lds
jp
pop
pop
js
sub
mov
sub
mov
ss
outsl
fucomi
xlat
shl
mov
xor
or
mov
fistl
cmp
je
xchg
and
in
sarb
repz
movsl
cmp
add
dec
sahf
ss
std
iret
sub
ss
cwtl
mov
xchg
shrl
inc
out
ret
or
and
mov
popf
test
call
add
popa
leave
cltd
imul
sbb
mov
xchg
popa
jb
ror
mov
cli
sar
dec
outsb
inc
sti
clc
mov
stc
dec
pop
int
cmp
adc
xor
sub
inc
aam
xor
cmc
push
jp
aaa
in
mov
rol
push
lret
jl
scas
cmp
cltd
mov
and
in
push
sarl
in
ror
pop
pusha
out
outsl
leave
sub
sub
imul
scas
bound
push
aad
mov
cmc
out
mov
shrb
fistpl
lods
jl
xchg
dec
add
cmp
sbb
inc
add
sbb
pop
mov
push
mov
dec
mov
bound
cmp
push
mov
movsl
xor
lods
mov
mov
les
xor
cmp
or
out
or
into
scas
inc
jle
mov
test
dec
orl
xchg
sbb
or
sbb
jg
ss
clc
out
popa
pop
ds
insb
mov
outsl
adc
sub
pop
adc
jge
sbb
pop
arpl
mov
ds
or
sub
lret
and
stc
mov
xchg
jns
push
push
push
nop
jge
ficompl
dec
cmp
insb
inc
lods
inc
mov
inc
lods
mov
push
loope
adc
or
scas
enter
fimull
fs
stos
pop
cli
cmp
pushf
lods
pop
lock
xchg
jno
xor
call
dec
cmpb
int3
mov
or
xchg
add
xchg
push
lods
cltd
mov
aad
xor
dec
lock
cmp
in
cmpsl
jmp
adc
repnz
movsl
sub
jb
mov
adc
in
dec
push
aad
add
dec
stos
sti
daa
lret
cmp
add
icebp
arpl
xchg
sbb
mov
shr
imul
mov
sub
mov
xor
cmpsl
arpl
imul
rorl
pop
sbb
pop
sti
push
in
addr16
loopne
or
lcall
mov
cmp
lret
lods
pusha
out
dec
lds
xchg
and
sbb
test
insl
mov
jp
push
push
ret
lea
mov
lods
outsb
jmp
ds
mov
faddl
xchg
popa
fwait
inc
pop
stos
aas
in
mov
push
jb
dec
xchg
pushf
cmp
xor
test
dec
out
mov
mov
xchg
imul
or
xchg
cmp
scas
es
sbb
add
xor
mov
leave
in
clc
idivl
and
dec
add
sbb
push
mov
pop
adc
dec
aas
push
and
xlat
push
mov
or
notb
pop
inc
loope
icebp
int
or
pop
mov
lret
imul
ret
push
iret
xchg
dec
dec
xchg
adc
imul
lea
mov
popa
cmpsl
mov
xor
ret
add
inc
scas
daa
mov
mov
cli
inc
pop
lods
push
and
sub
out
mov
dec
inc
ficompl
inc
leave
icebp
push
jmp
and
cltd
repz
aas
mov
insb
out
call
pop
sbb
jo
daa
mov
mov
xchg
adc
adc
pop
jl
sti
rorb
sub
xchg
aaa
push
cmp
xchg
cmp
outsl
fwait
lods
iret
mov
pop
adc
push
and
jmp
movsb
aad
push
jl
jb
push
push
cltd
aad
add
mov
out
push
lea
scas
add
sti
std
in
cmp
test
mov
xchg
cwtl
test
push
ret
push
lret
test
adc
cmp
icebp
jmp
dec
test
cmp
sbb
adc
iret
outsl
xor
ret
call
cwtl
popa
inc
mov
je
repnz
push
loopne
imul
imul
adc
scas
imul
gs
dec
fsubrs
pop
mov
andw
dec
push
xchg
sub
jns
fxch
xor
jns
cmpsl
dec
jl
push
hlt
adc
inc
lods
cwtl
cmp
pop
aaa
add
mov
fdivl
and
shrb
int3
or
mov
ss
sub
sub
aas
inc
sub
roll
xor
incb
sbb
cli
ss
sarl
data16
scas
pop
mov
je
maxps
mov
jae
aad
out
dec
and
fimuls
std
mov
fcmovnbe
xor
add
imul
pop
inc
xchg
sbb
inc
cmp
andl
mov
sub
dec
push
adc
or
mov
test
mov
pop
jmp
sbb
cmp
fimull
inc
sbb
jl
sbb
shl
sub
shl
cld
jmp
mov
js
adc
sar
gs
outsb
sbb
das
sbb
xchg
int
ficomps
push
or
mov
pop
call
shl
mov
scas
int3
cmp
jecxz
mov
pop
ret
sub
xchg
pop
cmc
sub
xchg
inc
inc
ss
in
stc
outsl
ret
enter
das
jl
int3
pop
mov
inc
pop
ret
movsb
push
popf
popf
sub
rcr
adc
popa
in
test
jb
lea
loop
shl
jge
mov
pop
push
lret
jp
mov
jno
push
icebp
decl
bound
decb
cs
nop
rcr
inc
pop
das
lret
shll
pushw
push
adc
divl
mov
ds
aas
movsb
jp
orl
mov
cltd
dec
mov
xchg
push
push
iret
mov
cmp
jg
mov
loope
mov
push
repnz
icebp
loopne
inc
xlat
or
mov
fwait
je
es
mov
xor
push
rcl
push
in
jle
loop
adc
popf
jne
shr
ret
sbb
daa
cmp
cmc
mov
mulb
ficoml
imulb
xchg
xchg
push
inc
pop
lods
loope
arpl
cwtl
lret
jo
sub
jl
mov
lds
icebp
pop
test
add
cmp
jl
or
xor
icebp
loope
test
mov
out
mov
mov
fisttpll
hlt
mov
ljmp
cmp
popa
inc
mov
xchg
add
mov
mov
sbb
mulb
push
adc
into
ds
lcall
lds
mov
stos
adc
outsl
lret
mov
xchg
mov
ss
add
popf
sbb
inc
ret
mov
and
icebp
inc
cmpsb
sbb
fstps
nop
mov
popa
jg
cmc
mov
sahf
stos
cs
lea
mov
movsb
mov
lcall
lds
nop
mov
mov
stos
jecxz
call
in
push
lcall
mov
or
cmpsb
lock
xor
dec
shlb
ja
sub
mov
mov
mov
fistl
fildl
cmpsb
gs
and
fmuls
xor
dec
or
lret
fcmovne
or
xchg
mov
daa
add
cmp
inc
mov
and
xor
or
pop
push
push
xor
or
sub
test
inc
outsl
enter
insl
sub
xchg
cmp
mov
pop
mov
loopne
lcall
pop
js
jbe
sub
mov
ljmp
call
lahf
cmp
adc
aaa
fstpl
pop
lret
and
push
dec
dec
packssdw
and
mov
loope
adc
aas
out
stc
test
jne
sub
shl
push
test
shl
xor
add
in
clc
jne
cld
and
lods
adc
test
sbb
aam
or
vfnmadd231sd
roll
sbb
jo
cmpsb
std
inc
jb
mov
cmp
pop
sub
out
pop
pop
dec
adc
mov
or
xor
mov
stc
jae
popa
lret
jg
ret
adcl
mov
lcall
xchg
pop
mov
sbb
inc
push
neg
pop
hlt
add
hlt
imul
inc
incb
xor
repnz
fistps
into
std
out
imulb
in
xchg
js
sub
frndint
clc
js
out
xor
out
lea
push
int
test
cltd
insl
mov
loopne
xlat
mov
pop
add
mov
adcl
xlat
xlat
loopne
sbb
lret
xor
add
or
xor
popa
adc
inc
xor
xchg
sti
push
inc
data16
test
ds
out
outsb
js
push
mov
or
out
mov
xlat
xor
push
add
inc
xchg
aaa
xchg
pop
aam
scas
cmp
sbb
popa
jecxz
jb
shll
pushf
gs
shl
pusha
or
popf
cmp
and
inc
adc
xlat
test
cld
sub
jno
add
pushf
pop
xor
or
lahf
mov
inc
inc
cmc
pop
stos
mov
xorb
js
mov
adc
negb
push
sahf
roll
dec
shll
jbe
jae
dec
mov
push
add
xor
xchg
daa
in
clc
aaa
fucomip
add
cmpsl
xlat
les
ja
push
lock
jns
mov
mov
shrl
xorb
pop
lods
in
fisttpll
fs
repz
imul
popf
mov
push
fs
outsl
mov
pop
lret
jno
inc
lods
pushf
outsb
ja
cmpl
mov
mov
shlb
mov
aas
pop
es
fstpl
jmp
and
cmp
cmp
push
loop
mov
xchg
in
sbb
jecxz
dec
imul
cs
mov
fdivs
bound
add
fisubl
call
pushl
mov
sti
jb
pop
jo
stos
mov
fcoml
int3
push
push
fsub
push
xor
push
adc
gs
dec
dec
xchg
push
jmp
cmpl
lret
adcb
inc
mov
jmp
and
pop
or
adc
cmp
xor
call
mov
push
inc
pusha
leave
dec
lcall
out
arpl
xlat
cmp
movsl
sbb
xor
leave
push
out
inc
out
std
mov
jns
or
lret
hlt
les
scas
mov
inc
gs
xor
push
push
lcall
cmc
adc
aad
cmp
fnstsw
fdivrl
ljmp
mov
sub
es
out
pusha
cltd
and
push
addr16
sbbl
insb
mov
push
or
cltd
ss
leave
ljmp
incb
xchg
adc
mov
loop
call
push
sbb
jle
ret
add
dec
incb
fs
pop
bound
loopne
pop
mov
and
mov
add
insl
mov
or
pop
pushf
ret
arpl
jae
rclb
push
and
gs
mov
aas
fwait
xchg
cmpsl
fidivrl
pop
cmpsl
pop
inc
push
pop
inc
shrl
icebp
in
or
xor
adc
or
pop
hlt
inc
mov
or
or
stc
dec
or
pop
and
adc
dec
xchg
xor
data16
sub
out
jno
repz
js
cmp
scas
cs
sbb
lds
jl
or
outsl
lret
ja
pop
outsl
sbb
jge
dec
mov
std
xlat
das
lods
inc
test
out
enter
mov
js
daa
outsl
mov
je
ss
sub
sbb
mov
jns
mov
dec
xlat
sbb
mov
test
je
or
call
inc
enter
lcall
xchg
dec
xchg
es
sub
jae
sbb
dec
jp
hlt
jbe
cmpsb
mov
imul
scas
mov
pand
push
and
inc
stc
inc
int3
xor
rsm
or
test
cmp
dec
mov
cld
icebp
push
stos
test
sbb
mov
mov
fidivrs
pop
mov
inc
mov
mov
inc
xor
insb
jmp
int3
insl
push
sub
test
insb
enter
xor
xor
fimull
dec
inc
out
xchg
mov
mov
push
adc
pop
fdivl
dec
icebp
stos
mov
hlt
fsubrs
ss
out
push
mov
xlat
lcall
je
pop
ja
lret
cmpsl
test
js
xor
shlb
lds
and
inc
imul
mov
mov
jp
push
mov
adc
cmpsl
stc
pop
mov
jg
jle
call
call
jl
insb
jnp
adcl
pop
and
xchg
sub
in
dec
lods
int
mov
ret
pop
outsl
mov
cmp
in
sbb
sti
imul
or
fcmovbe
popa
in
sub
fidivs
push
test
dec
leave
stos
mov
or
sarb
jp
cmpsb
adc
jo
out
pop
xor
imul
hlt
andb
adc
repz
gs
mov
push
xchg
orl
pop
pushw
imul
push
dec
xchg
jae
push
jo
aaa
cwtl
adc
pushf
mov
or
cmp
push
test
push
pop
leave
arpl
push
aad
inc
cld
addr16
push
mov
jne
push
out
inc
into
dec
pop
jb
adc
bound
xchg
mov
outsl
xor
nop
popf
cltd
push
mov
dec
in
clc
ja
mov
popf
jne
push
or
pop
aaa
cmp
adc
fcmovb
aaa
addl
sbb
or
dec
fsubrl
mov
jbe
push
stos
adc
fwait
lret
push
repnz
imul
popf
pop
ret
enter
dec
ss
fs
cmpsl
loop
testb
dec
dec
repnz
inc
jl
iret
or
adc
cmpsl
xor
xor
mov
in
sub
inc
xchg
inc
leave
sbb
mov
xchg
pop
cltd
into
cmp
bnd
adc
push
sub
sub
into
outsb
sbbb
subb
lret
mov
lds
fmul
pusha
lock
into
cld
sbb
add
jg
in
jecxz
addl
push
adc
sti
enter
adc
mov
mov
xor
int3
adc
popa
std
jg
mov
lret
sbb
popa
aam
xchg
out
test
pop
test
out
mov
push
or
scas
jbe
in
and
imul
jg
hlt
into
xchg
adc
loope
sar
int
insb
nop
inc
mov
sub
xor
imul
shll
xchg
sbb
jnp
jo
lock
jb
inc
sub
bnd
pop
pop
insb
fisttps
xor
mov
inc
das
out
sbb
jle
ds
xor
aas
mov
sbb
jg
negl
mov
mov
push
sti
loopne
dec
adc
mov
cld
pop
rorb
add
adc
ficoml
or
daa
out
push
or
add
xor
icebp
notb
pop
mov
mov
cwtl
mov
sbb
stos
cmp
je
or
loop
sub
dec
inc
leave
xchg
sahf
pusha
cmp
ja
imul
insl
in
sahf
and
pop
inc
addl
mov
fwait
testb
daa
adcb
inc
ljmp
jno
jb
loope
push
ret
xchg
lea
imul
popa
call
jmp
fists
add
mov
dec
cmp
pop
mov
mov
insl
push
sub
enter
push
jl
pop
inc
dec
jp,pt
outsl
dec
inc
pop
sub
out
lods
add
roll
arpl
fcmovnu
mov
lock
sbb
hlt
jno
cwtl
fs
mov
out
and
xor
add
iret
mov
sub
sbb
test
dec
icebp
jne
test
loopne
cmp
jecxz
add
pop
cld
test
pusha
in
scas
xchg
repz
scas
lods
imul
repnz
ds
lret
out
outsb
sub
scas
scas
loopne
adc
add
or
shll
add
adc
jae
xor
cmp
xor
inc
insl
pop
xchg
xchg
in
mov
cmp
xchg
loop
jle
jge
mov
jl
mov
fwait
mov
mov
ds
hlt
mov
xchg
pop
pop
mov
push
adc
adcl
lea
xorb
jns
and
pop
lods
mov
add
insl
mov
adc
std
mov
data16
xchg
ja
cmp
iret
lea
xchg
lds
push
pop
xor
aaa
ret
cmpsl
inc
push
jmp
and
ret
and
pop
pop
out
sarb
mov
and
inc
inc
cmp
and
stos
push
cltd
shll
bound
or
inc
ja
loop
jp
ss
cld
cmpsb
dec
jae
adc
mov
mov
mov
std
dec
cmp
dec
pop
iret
adc
push
xchg
jmp
dec
xchg
adc
jp
fsubrs
data16
or
cwtl
pop
dec
andl
fwait
add
or
jns
insl
push
and
sub
add
shlb
clc
sub
mov
dec
scas
fwait
mov
lcall
cmp
cmpsb
mov
ss
mov
pop
pop
mov
pop
xlat
jo
jl
stc
sub
push
movsb
adc
xor
dec
daa
jl
aad
into
push
dec
mov
jno
adc
lcall
sub
mov
sub
xchg
mov
imul
outsl
scas
ret
cwtl
xor
out
fnstcw
cltd
cli
std
or
sahf
testb
lahf
dec
loopne
adc
sub
repnz
loope
pop
jmp
mov
out
shll
push
in
adc
xchg
inc
idivb
jecxz
out
insl
stc
adc
js
adc
xor
out
add
lock
cs
inc
jbe
out
fst
icebp
add
mov
sahf
pop
lds
mov
outsb
jge
adc
int3
dec
and
in
cmp
call
push
test
pop
movsb
stos
xchg
adc
pop
divb
int
inc
ja
fdiv
xchg
jl
icebp
xlat
inc
and
das
in
in
adcb
and
movsb
clc
loop
fiadds
pop
std
rclb
jle
pop
popf
sbb
bound
sub
mov
ret
enter
lret
jg
outsb
xorl
or
xchg
cmp
ret
add
mov
cltd
jnp
out
bound
iret
test
pop
xor
shll
jbe
arpl
fstpt
add
daa
outsb
xor
fadds
and
inc
fidivrs
sbb
xchg
xchg
data16
das
adc
xchg
data16
push
jg
cmp
dec
dec
nop
sub
lcall
mov
rcl
stc
aaa
scas
push
scas
mov
in
mov
lods
push
mov
shlb
inc
mov
jmp
xor
hlt
sahf
outsb
fdivrs
fwait
nop
sub
stos
adc
leave
dec
call
cmpb
in
mov
fld
push
cld
subb
sbb
mov
sarl
outsl
cmp
mov
jl
ja
fdivs
mov
xchg
adc
mov
mov
sar
add
fdivl
add
clc
jmp
leave
jae
hlt
mov
xor
dec
leave
daa
xor
jmp
clc
jecxz
imul
mov
in
enter
jo
pusha
rcr
in
mov
pop
pop
aas
jbe
sbb
test
xor
icebp
pop
or
pop
sbb
fidivrs
insb
mov
aam
mov
icebp
xchg
xchg
ret
jg
sub
lods
mov
aaa
fwait
inc
clc
xchg
imul
icebp
cwtl
dec
lret
testb
loopne
adc
cwtl
into
ret
out
sbb
fincstp
mov
ret
out
call
rcrb
ds
pop
sbb
mov
pop
pop
call
mov
jnp
sbb
mov
push
and
adc
arpl
dec
je
loopne
dec
mov
push
add
mov
jnp
lahf
mov
in
subb
sub
leave
mov
jo
les
lret
daa
ljmp
xor
mov
push
xchg
stos
shl
cwtl
jo
mov
jb
push
push
cmp
adc
mov
neg
cmp
mov
xchg
cmp
outsb
adc
pop
mov
test
gs
mov
scas
into
aam
insl
push
clc
or
paddb
fwait
xlat
sahf
repz
mov
lahf
cwtl
clc
jle
sbb
popf
mov
push
pushf
inc
dec
and
imul
push
rorb
aad
outsl
xorb
lret
int
pop
mov
lret
stc
push
es
inc
es
andl
mov
xor
mov
movsb
mov
inc
int
ficoms
mov
popf
ss
mov
rolb
inc
add
and
jge
aas
and
push
sub
push
inc
ja
xlat
mov
xchg
ljmp
fdivrl
xchg
ret
and
xor
lods
and
stos
adc
mov
jle
cmpsl
jno
addr16
cld
pop
addb
fisttpll
mov
add
bound
or
div
push
inc
jne
data16
mov
push
ret
dec
ret
nop
inc
lods
lret
sarl
aaa
inc
sbb
test
push
ret
pop
pop
mov
xchg
imul
sti
stc
ret
sbb
fcmovbe
pop
in
pop
xchg
mov
lcall
adc
push
mov
imul
cmp
inc
test
push
fwait
les
jge
movsb
or
bound
loop
clts
mov
stos
insl
insl
jno
dec
jns
test
out
mov
mov
xor
sub
jbe
or
and
dec
xlat
stc
lods
call
pop
aas
pop
jo
mov
cmpsl
sbb
cs
xchg
cltd
in
mov
pop
and
enter
xchg
sahf
subl
xor
fcoml
mov
test
inc
pop
jp
insb
rcrb
insb
jb
adcl
pop
das
inc
sub
cwtl
gs
xor
lahf
dec
xchg
xchg
jae
fdivrl
jl
pop
jnp
sbb
std
cltd
mov
in
add
mov
cmpsb
push
inc
sbb
test
mov
sub
fstpt
sbb
sbb
insl
test
mov
push
and
sub
addr16
movsb
test
or
inc
mov
and
pop
daa
cmp
pop
push
push
mov
inc
adc
adc
cmpsl
sbb
int
in
sub
jecxz
fldt
ss
aas
outsl
cli
dec
fstp
sbbb
jnp
sub
add
xchg
sbb
cmpsb
and
scas
into
adc
adc
repnz
das
push
fisubl
dec
stos
jmp
ret
adc
and
aas
ror
out
xchg
pop
scas
std
je
fisubrs
cmp
push
push
into
outsb
sbb
data16
xlat
mov
mov
fs
lret
dec
xchg
call
cli
xchg
jp
sbbl
imul
std
std
or
jne
cs
into
sbb
fisubrl
jae
stos
imul
mov
xor
pushf
sub
scas
aas
and
xchg
bnd
xchg
fldenv
push
cmp
int3
lret
jmp
pusha
xchg
sbb
loope
and
cs
daa
mov
cmp
lods
push
insl
sbb
int
pop
fs
cmp
or
int3
xchg
inc
sub
scas
cmp
test
sbb
outsb
test
flds
inc
loope
fnsave
cltd
out
scas
pop
xchg
push
stos
out
cmp
cmc
nop
out
adc
popf
inc
push
aaa
hlt
cmp
xor
popf
push
mov
sbb
call
xor
aaa
mov
dec
jbe
loopne
popf
jb
jno
and
mov
lods
and
das
and
mov
xor
inc
sti
push
jnp
sti
hlt
xor
jns
int3
add
jp
leave
mov
ror
pusha
in
adc
inc
dec
jae
scas
adc
ljmp
scas
addl
xchg
inc
lea
insl
scas
and
call
lcall
and
pop
xchg
adc
inc
xchg
std
aad
cmpsb
xchg
xchg
loopne
out
jg
fisubl
lahf
fxch
int3
out
sbb
mov
mov
mov
dec
ret
xchg
push
inc
addr16
inc
add
stc
mov
or
mov
mov
arpl
bound
lcall
clc
ret
jecxz
ljmp
dec
aad
inc
in
xchg
jecxz
jno
pushf
xor
jg
lret
cmpsb
incb
jns
dec
adc
add
mov
cmp
pusha
fs
stos
out
sub
sbb
xchg
outsl
cmp
jae
rol
inc
adc
jo
push
mov
das
xor
ds
adc
pop
out
jle
fwait
adc
fidivs
xchg
inc
pop
dec
lahf
add
enter
fs
in
cmc
rcrb
dec
ljmp
or
ja
sarl
repz
shll
mul
xchg
mov
pop
sbb
jmp
or
in
xor
dec
out
or
jbe
lea
jns
push
xchg
lds
lods
das
mov
into
fwait
push
subl
and
lea
adcb
and
cmp
push
out
int
and
or
or
push
imul
int
out
int3
daa
and
cli
les
popa
jecxz
or
jg
pop
pop
fidivl
pushf
mov
sbb
push
xchg
dec
and
stos
add
mov
sbb
cmp
arpl
pop
mov
push
test
mov
cld
and
leave
or
nop
sub
xchg
sub
aam
out
inc
sbb
sub
and
xchg
jmp
imul
jnp
inc
das
and
inc
imul
or
les
js
or
pop
js
xchg
outsb
and
das
xlat
mov
add
jle
pushf
xchg
repnz
cmp
in
jmp
add
jb
cmp
mov
mov
rcrl
jae
ds
push
mov
ret
sbb
sbb
pop
inc
mov
aaa
xor
xor
pop
mov
push
jae
dec
inc
push
mov
repz
jmp
mov
out
hlt
out
pop
push
outsl
mov
out
fbstp
imul
adc
popf
fmuls
mov
adc
or
pop
or
stc
popa
jno
xor
inc
roll
mov
push
and
push
cmp
mov
shrl
and
pop
or
gs
fistpl
sub
out
fadds
cmp
lea
adc
popf
cmp
pop
popa
cli
scas
jae
push
dec
daa
fwait
js
push
xor
mov
pop
sub
mov
test
sub
mov
pop
ret
sti
lea
ds
push
lds
fnsetpm(287
mov
out
imul
ret
xor
cwtl
test
sarl
jmp
out
sub
fsubl
jno
adc
adc
push
arpl
pop
push
pop
cld
mov
inc
add
loope
mov
mov
ftst
or
and
jbe
outsb
add
xchg
into
sub
or
jmp
jp
push
jo
dec
mov
jbe
xlat
andl
sarl
adc
jae
xchg
repz
xlat
in
mov
ret
stos
bound
mov
push
jo
std
in
lret
jg
xor
inc
jge
xor
push
stos
or
inc
xchg
jne
fs
ret
or
testl
jge
lea
push
sbb
add
fnsave
out
adc
fcom
push
mov
jle
cmp
outsb
pusha
jb
jno
or
rcrl
sahf
cmpsb
roll
xor
and
or
call
call
mov
call
sbbb
pop
lret
push
cmp
or
nop
addb
lcall
mov
js
int3
ljmp
and
out
jae
setb
xlat
adc
mov
xchg
das
popa
push
in
sub
inc
int
mov
shrb
test
pop
ror
pop
lret
lahf
cmpsl
and
push
mov
lods
xchg
cmp
sub
scas
jecxz
imul
fs
cmp
add
outsl
enter
stos
lcall
dec
cmp
inc
in
sub
pop
and
test
mov
adc
or
mov
push
aam
int3
xlat
fwait
out
push
movsb
add
jbe
or
loope
in
sbb
xlat
cmp
sbb
shr
or
dec
lods
jb
inc
sbb
in
aas
xchg
loopne
out
xchg
orl
mov
mov
fcmove
pop
sub
sbb
sti
push
xchg
jo
push
xchg
ret
xor
aam
and
popf
out
cmp
jnp
xorl
movsl
ja
cwtl
cli
cs
andb
lret
jecxz
dec
xor
out
jge
mov
mov
mov
fcmove
adc
pusha
xor
and
pop
dec
aas
mov
test
enter
pop
push
bound
js
mov
ja
push
sub
popf
int
js
and
ss
cmp
jnp
xchg
lcall
int3
add
rorl
call
fisubs
mov
xchg
inc
scas
std
mov
in
lds
movsl
hlt
adc
popl
adc
xchg
dec
cmc
dec
nop
cmc
loop
push
loope
xchg
repnz
or
jne
stos
dec
pop
lock
add
ja
push
popf
movsb
je
jecxz
cmpsb
mulb
jns
mov
pop
mov
stc
aas
das
xchg
bound
add
lcall
ror
arpl
xor
in
aad
sub
mov
xor
mov
cli
xchg
out
scas
xor
cld
pop
iret
fidivrs
mov
pop
mov
scas
scas
mov
stos
or
loop
pop
sti
sbb
adc
ret
or
xchg
mov
test
inc
lock
mov
xor
or
cs
and
lret
mov
mov
sbb
xchg
mov
inc
xchg
xor
xor
sbb
sub
xlat
lea
call
ds
fnsave
in
cltd
pop
xlat
call
sub
mov
pop
stc
shrb
lret
dec
int
or
and
push
jg
out
gs
xor
sub
inc
add
cmp
loopne
jnp
in
addr16
pop
in
aaa
pop
mov
sub
fnsave
jo
mov
nop
cltd
rorl
andl
and
mov
in
jle
aas
jg
xchg
or
sti
pop
loopne
sbb
pop
jp
out
divb
lret
pusha
inc
adc
ds
scas
pop
les
add
sbb
in
inc
stc
pop
xchg
push
xor
jmp
fsubrl
xchg
jecxz
dec
loop
je
sub
leave
push
ret
sbb
sub
imul
jge
sbb
out
out
dec
aaa
scas
xchg
push
cwtl
lcall
inc
aam
cmp
mov
xor
lahf
or
adcb
sbb
xlat
shrb
dec
mov
pop
cmp
mov
pushf
sbb
std
pop
push
stc
push
or
jmp
push
fidivs
jo
mov
dec
xchg
sub
ret
cld
daa
cld
jp
dec
arpl
loopne
mov
mov
cwtl
mov
lret
add
test
xorb
cld
fisttpll
hlt
adcl
jge
cli
icebp
aas
cmp
lret
dec
data16
jbe
bound
dec
xor
xchg
and
sahf
cltd
je
pop
adc
push
int3
pop
sarb
out
jo
xlat
daa
xchg
push
stos
imulb
insb
pop
inc
inc
notb
inc
cs
and
cmpsl
dec
test
in
cmp
inc
clc
movsb
orl
cmc
mov
cmp
stc
insb
adc
inc
xor
aaa
pushf
inc
dec
aaa
xchg
jns
add
movsb
data16
add
scas
out
mov
imul
fldcw
jle
dec
fs
int3
jno
sbb
jecxz
jbe
sahf
xchg
shrl
cli
stos
or
mov
pushl
mov
pop
xchg
testl
xchg
jb
frstor
addl
stc
fistl
sub
nop
mov
addr16
stos
ret
add
imul
out
in
mull
les
aaa
loope
pop
pop
inc
inc
cmp
jge
fisubrs
int3
negl
push
jo
sub
or
xor
dec
into
add
fs
sub
jbe
jl
mov
andl
jecxz
std
mov
add
adc
insb
dec
cli
mov
ss
lret
cltd
mov
push
ja
ja,pt
and
lcall
call
sub
push
xchg
pop
mov
int3
in
mov
daa
and
daa
xchg
jb
mov
mov
xchg
lcall
sbb
inc
test
lahf
mov
add
push
add
sti
daa
lock
outsb
xchg
stos
mov
jb
mov
jnp
enter
fldcw
je
cli
ficoms
cmp
xlat
cmp
mov
in
sti
rcrb
or
inc
cld
out
int
cmpsl
xchg
and
enter
ret
adc
push
imul
stos
cwtl
icebp
push
inc
sub
push
in
stos
cmc
mov
das
push
ds
pop
mov
sub
jl
ret
les
or
cmp
pop
rcl
int3
xchg
jg
addr16
sbb
fs
adc
jns
repz
and
inc
cmp
cmp
dec
ror
mov
jp
lods
sub
xchg
fwait
inc
pop
inc
inc
push
push
in
aaa
shl
adc
jb
inc
fldcw
lds
add
pop
mov
lds
jl
jl
lcall
mov
push
loop,pn
das
out
push
or
pop
push
xchg
mov
or
push
cmp
cmp
mov
sbb
insl
cmpsb
pop
fwait
repz
xor
rorl
adc
sahf
idivb
mov
pop
cli
xor
jge
xor
repnz
loope
xor
jp
ja
dec
xor
sti
pop
out
test
add
icebp
xchg
in
push
pop
add
xor
in
cmp
cld
xchg
xchg
mov
pop
popa
ficoms
xchg
adc
sub
daa
mov
fnsave
xor
mov
mov
iret
lock
iret
push
pop
and
fwait
mov
inc
jno
out
mov
cwtl
xchg
cmc
sub
sub
sbb
fdivrs
filds
xcrypt-ecb
cmpsl
mov
sub
fidivrs
int3
lods
sub
les
dec
and
xchg
popa
sahf
daa
sub
shr
ss
ja
les
pop
in
pusha
gs
inc
repnz
inc
sub
cmp
cmp
cmpsb
add
loopne
jnp
je
mov
sbb
push
popa
lret
or
pop
mov
mov
adc
push
mov
cmc
xlat
inc
mov
jo
dec
inc
rclb
and
jne
push
and
xchg
xchg
aas
stc
lahf
fimull
inc
iret
jmp
iret
mov
push
pop
xor
pop
incb
sti
out
mov
rcrb
or
lods
nop
cmp
pop
int
loop
add
into
roll
xchg
arpl
out
mov
int
scas
popf
sub
hlt
cs
insb
into
dec
cld
add
int
mov
push
push
mov
fcoml
inc
inc
outsb
xchg
sbb
in
popf
scas
push
cs
lock
adcb
clc
pop
cld
ss
sub
loopne
lods
das
and
jmp
jae
iret
jne
adc
mov
pop
aad
test
dec
mov
mov
inc
leave
inc
add
jp
sbb
icebp
jg
cli
aas
cmp
pop
inc
or
das
and
mov
out
aaa
cmp
lret
cltd
mov
sbbl
adc
and
bound
sub
dec
mov
sub
xorl
mov
fistps
cmp
clc
push
sbb
mov
jbe
xchg
jle
test
mov
adc
outsb
pop
int3
ja
cs
pop
mov
mov
roll
aam
movsl
popa
pop
xchg
inc
fistpl
add
cltd
mov
push
jmp
pop
mov
adc
sahf
int
pushf
popa
imul
sahf
in
inc
cmp
push
mov
lock
cmp
lds
pop
pop
cmp
ss
loope
sahf
mov
xchg
pop
jne
adc
mov
add
mov
dec
mov
and
outsl
mov
out
or
pop
jl
pop
sbb
push
adc
popf
inc
shrl
push
sub
aas
mov
pop
sbb
jp
push
pushf
cwtl
push
je
popa
add
jbe
cli
test
out
in
xchg
loope
filds
sbb
cli
pop
in
mov
mov
sbb
movsb
lret
inc
or
xor
mov
lcall
mov
jmp
jmp
outsb
or
fmul
mov
nop
clc
rcll
mov
jb
xor
lock
sbb
xchg
dec
pop
xlat
imul
mov
sti
mov
outsb
mov
sbb
in
test
inc
in
insb
in
sub
cmp
das
jno
jmp
jo
movsb
out
addr16
add
mov
add
pushf
jg
add
push
jecxz
scas
mov
mov
out
sahf
xchg
mov
lahf
idivb
mov
daa
pop
hlt
and
fsubr
xor
cwtl
hlt
xchg
pop
jecxz
mov
scas
adc
stos
pusha
mov
sub
jecxz
sbb
ss
or
les
dec
mov
lods
sbb
jecxz
addr16
xchg
repz
call
lods
add
lahf
in
ss
out
jg,pt
cld
or
pushf
lret
jae
xchg
bound
ds
lahf
imul
lods
and
fcoml
sbb
xor
mul
stos
xor
fst
mov
lret
add
xor
in
je
pop
cwtl
dec
std
mov
cs
rolb
pop
jmp
mov
test
data16
xchg
push
xor
pop
js
push
int3
dec
in
repnz
or
insb
dec
outsl
ja
inc
into
mov
mov
fldt
mov
aaa
xchg
inc
repz
aam
jns
rorl
inc
leave
jbe
push
ja
mov
push
jle
and
stos
gs
and
les
lret
or
fsubrs
cmp
dec
mov
cmp
xor
aas
cmp
jo
xor
les
add
cmp
jp
push
cmp
mov
push
fstpl
bound
fsubp
jp
cmpsl
push
inc
das
jno
shr
jns
sub
loope
outsl
mov
outsb
xchg
jp
out
xor
inc
into
and
lret
lcall
nop
adc
stc
push
lods
lahf
mov
shl
std
outsl
test
cmpsl
dec
inc
mov
lods
in
enter
ja
dec
mov
outsl
loopne
sarl
mov
jmp
sbb
and
ret
test
inc
mov
mov
test
daa
pop
fldt
inc
out
inc
pop
icebp
adc
dec
jecxz
pop
fnstsw
popl
push
or
icebp
lods
iret
mov
int
inc
inc
xor
js
sbb
nop
in
mov
lea
jo
lret
flds
mov
das
inc
movsb
dec
inc
and
pop
jb
aaa
ret
mov
outsl
pop
aad
data16
xchg
ficompl
mov
and
insb
cmp
jnp
fwait
lock
mov
mov
scas
sub
and
jne
movb
mov
jbe
jg
add
dec
imul
xorl
sub
mov
or
imul
lods
mov
sub
jp
inc
lods
adc
repnz
and
adc
xlat
jno
es
add
dec
loope
lahf
rolb
pop
in
lds
or
or
xchg
sub
jb
xchg
cld
das
mov
mov
fisubs
pop
insb
sbb
cmp
ja
add
cmp
add
push
push
fidivrs
gs
push
test
aas
imul
xchg
xor
das
subb
scas
popf
int3
or
push
int
xchg
sub
or
mov
gs
cltd
sub
ret
inc
cmp
filds
loope
shlb
cmc
jo
es
xlat
cltd
pop
aaa
or
xchg
lcall
imul
daa
sub
add
fmul
sbb
mov
fdivrs
mov
jecxz
insl
xchg
pop
xchg
adc
pop
sbb
lods
js
fnsave
test
jle
pop
inc
js
faddl
push
test
jo
inc
subb
xchg
mov
lods
dec
cmp
out
mov
mov
jmp
push
std
sbb
cld
loope
lods
aaa
lods
or
loopne
mov
mov
mov
add
aaa
aad
adc
mov
jbe
inc
mov
repz
sub
mov
popa
movsb
add
dec
jno
aam
repz
xor
popl
movsb
movsl
std
jno
or
fwait
divl
sub
xchg
loopne
jns
xchg
pop
dec
dec
andb
jecxz
mov
adc
ret
jne
sbb
lret
outsb
pop
xchg
jne
or
xor
in
movsb
stos
sahf
sarb
mov
jecxz
mov
out
inc
lret
sti
out
xorb
stos
into
loope
mov
repnz
fs
push
and
adc
jg
xchg
hlt
mov
push
push
inc
dec
scas
cmp
xchg
sub
mov
cmp
and
in
ljmp
inc
lahf
inc
cld
jno
dec
xchg
xor
or
fistpll
out
inc
inc
or
aad
lret
test
and
push
popa
cmp
test
sub
fisttpll
dec
or
dec
loopne
xchg
push
andb
std
fadd
ds
jbe
fnstsw
or
loop
sbb
mov
nop
pusha
pop
inc
jbe
sbb
std
xchg
mov
inc
dec
ret
rcrb
jl
int3
aaa
push
xchg
jle
sbb
push
add
pop
inc
icebp
and
xchg
ficompl
outsb
mov
or
sub
dec
pop
outsl
push
stc
push
xor
pop
sub
inc
jmp
push
shl
std
pop
imul
sub
or
stos
jno
push
mov
lds
adc
aaa
xor
lock
repnz
popf
aas
mov
inc
mov
jg
or
movsb
insl
sub
aam
cli
jne
mov
push
enter
faddl
pop
jg
jns
mov
push
xchg
clc
insl
pushf
xor
cs
stc
jns
nop
xor
mov
ret
xchg
shr
mov
insl
and
notl
loop
pusha
mov
push
mov
les
mov
es
sar
inc
test
dec
and
jo
mov
dec
iret
and
ret
xor
jo
mov
in
stos
mov
cmpsb
pushf
inc
sub
mov
jge
shr
mov
outsl
push
mov
inc
fildl
inc
add
pop
movsl
add
daa
and
sbb
lods
mov
pop
ja
and
idivl
aad
dec
push
jmp
jnp
fcom
sub
notl
int3
fs
pop
push
pop
cmp
inc
cmc
xchg
mov
and
ficoms
imul
das
sbb
sti
pop
and
or
sub
mov
mov
jle
cmp
jbe
gs
pop
cltd
aaa
mov
add
mov
jl
xchg
mov
scas
mov
ja
insl
aaa
filds
ja
xchg
pop
pushf
adc
in
test
pop
fcomps
loopne
mov
dec
dec
xchg
fmull
shll
pop
mov
lds
mov
jg
mov
test
jae
push
mov
xor
and
push
xor
xchg
cltd
pop
push
out
xor
loopne
xor
stos
pop
mov
in
and
add
hlt
dec
stos
fcomip
and
jno
mov
hlt
add
cli
xchg
xchg
inc
call
or
sbb
jns
lock
xor
cwtl
lahf
jno
cli
sub
cmp
push
xlat
ret
jge
pop
cs
lret
fisubrs
shll
xor
add
jnp
pop
or
pop
popa
int3
scas
sbbb
cmp
inc
add
inc
cli
mov
mov
cmp
inc
std
imul
fisttpl
dec
and
test
cwtl
push
push
jl
xor
push
cmc
mov
sub
and
fbld
lock
insb
outsl
jbe
or
adc
sub
in
cs
xor
lret
sub
dec
in
iret
adc
loop
push
mov
in
mov
nop
cmpsb
push
cltd
sbb
loope
jmp
enter
jp
mov
inc
sbb
aaa
mov
dec
sub
cmp
cmp
inc
inc
addr16
icebp
push
dec
test
push
gs
mov
ljmp
scas
mov
mov
jns
ljmp
out
sub
mov
in
add
or
cmp
int3
or
das
push
push
ja
mov
xor
nop
xor
push
or
mov
dec
jnp
pop
push
jb
mov
in
sahf
dec
inc
mov
scas
aas
lds
sub
mov
add
icebp
xor
mov
mov
sbb
fsubl
das
icebp
adc
imul
int3
out
ss
clc
dec
inc
cltd
clc
jo
xor
rcll
inc
popf
imul
out
jecxz
xchg
fs
jmp
inc
jl
cmp
in
and
inc
bound
call
and
jnp
push
xchg
loope
xchg
sahf
sub
or
inc
mov
add
into
fsubrs
mov
stc
and
xor
jae
out
aas
mov
shlb
int3
mov
xchg
add
sub
sbb
out
jae
out
pop
mov
or
loope
mov
and
mov
xor
cmpsl
repnz
notl
ljmp
movsb
test
pop
jno
dec
jmp
adc
add
int
aad
insl
push
into
dec
sub
mov
cmp
xor
in
inc
in
adc
int
in
fbld
cmp
cvtdq2ps
adc
fildl
mov
xor
mov
add
fdivrp
sub
push
xchg
fbstp
and
scas
out
out
adc
shlb
add
sbb
sbb
cmp
fmul
dec
mov
aad
loope
push
sar
xchg
cmp
arpl
mov
cmpsl
out
push
fimull
sbb
out
dec
push
mov
ljmp
sbb
loop
bound
jmp
push
test
pushf
stc
icebp
or
inc
or
addb
fcompl
cld
call
daa
std
fstps
xchg
negb
push
mov
iret
xchg
int3
std
cmp
loopne
mov
stc
gs
cmp
lods
or
shll
test
or
sbbb
bound
js
pop
push
cmp
fisttps
jmp
dec
dec
mov
cwtl
pop
enter
test
dec
out
jns
pop
cmpsb
sahf
add
das
push
cli
cmp
sti
sub
mov
jp
leave
fstl
xchg
and
aas
fnsave
sub
int
mov
insb
movb
xchg
pop
mov
add
mov
popa
pop
dec
cld
out
aaa
cmpb
lahf
jb
div
test
gs
jmp
orb
mov
cmpsl
dec
sbb
adc
and
push
add
add
push
add
lret
pop
out
pop
or
mov
cmp
aas
ss
fldt
jl
jae
cmp
xor
clc
mov
cmp
insb
push
repnz
sahf
into
das
bnd
outsb
jmp
mov
pop
mov
sub
hlt
sub
cld
adcb
xchg
pusha
mov
sbb
leave
pop
out
fs
repz
sbb
add
push
rorb
xchg
and
sti
jmp
xchg
jae
ljmp
adc
adcl
jp
xor
fnstcw
int
xchg
scas
mov
push
jne
or
ret
sahf
jmp
adc
sbb
mov
idiv
popa
push
xlat
daa
mov
mov
mov
negl
xor
jb
sahf
mov
ror
xchg
mov
sub
push
pop
jmp
add
sub
inc
lret
imul
fsubr
repnz
pop
out
loope
insl
stos
dec
cmpb
xchg
pop
aaa
scas
xchg
loope
sub
test
lods
daa
lahf
dec
sbb
out
cwtl
outsb
ja
scas
cmp
scas
loope
cmpsl
push
xor
aam
rorl
add
mov
das
jbe
dec
jmp
pop
or
jmp
lods
jae
iret
mov
test
addr16
push
lcall
imull
lds
or
stc
pcmpeqb
push
scas
xchg
pushf
and
out
fldl
mov
mov
aam
add
dec
cwtl
add
insb
addl
sbb
aas
jno
mov
xor
mov
xchg
inc
sub
mov
push
inc
mov
insb
fdivrs
stc
mov
sub
xor
cwtl
lea
cmc
adc
mov
aad
sub
mov
stc
into
mov
stc
xrelease
lcall
ficoms
andb
scas
add
push
insl
mov
cmp
test
and
jl
lret
sarl
dec
cmp
dec
mov
sub
mov
jge
pop
cmp
sbb
cmp
aas
and
sbb
ret
les
sub
pop
loop
hlt
inc
stos
mov
repz
and
xchg
fnstenv
aad
push
jns
rcrb
xchg
and
mov
adc
stos
push
and
nop
mov
xchg
sbb
sub
ds
imul
fmuls
dec
fs
pop
lds
ljmp
cmp
push
cmpsb
lret
lahf
sbb
stc
xor
mov
ffree
adc
push
push
es
fists
sbb
rcl
lods
mov
je
int
imul
add
icebp
and
ret
lods
mov
pop
mov
jnp
mov
inc
jnp
idivl
lds
push
ret
lock
pop
das
add
xchg
pop
loopne
dec
imul
aaa
sbb
pusha
fists
inc
clc
inc
inc
ss
test
stc
push
inc
and
xchg
es
mov
push
jecxz
cmp
cmpsl
fcoml
leave
pop
xchg
xlat
call
pop
push
mov
aas
and
pusha
xchg
sub
xchg
shll
out
aaa
push
inc
cmpsb
jecxz
fcomps
cmc
hlt
mov
shll
inc
adc
jle
test
bound
test
orb
xchg
push
ret
scas
lds
pop
and
aaa
popa
stos
aad
into
jae
lods
mov
test
dec
jns
loop
adc
aas
jmp
jns
mov
mov
pop
xor
sub
popa
xchg
or
pop
inc
outsb
sbb
dec
sti
cmp
xchg
ds
sbb
and
out
shr
or
int3
and
fstpl
je
inc
aam
sub
cmp
push
jnp
sub
jo
or
sbb
pop
fistpl
jl
inc
rcrl
and
inc
pop
ror
imul
out
mov
ljmp
inc
dec
out
mov
leave
sub
stos
cs
xchg
mov
movsb
cmp
jo
jno
out
and
or
push
bound
push
lds
jp
sbb
ss
xor
sti
sbb
xchg
dec
dec
mov
or
mov
pop
jbe
rolb
out
stos
lcall
loope
repz
mov
pop
clc
enter
out
loope
imul
icebp
addr16
imul
pop
ret
xchg
out
adc
fdivrs
or
idivb
out
jmp
out
or
inc
leave
add
adc
addr16
das
clc
insl
loope
scas
xor
inc
pop
cmpsb
mov
xor
ds
xlat
xchg
and
xchg
xchg
xor
test
arpl
xor
dec
pop
clc
fnstsw
jp
jae
mov
out
pop
pop
lahf
jecxz
xchg
dec
sub
push
cld
outsl
xchg
movsl
sti
subps
andl
push
arpl
xchg
aas
add
or
add
and
sahf
icebp
add
pop
subb
in
clc
sbbl
mov
aas
inc
jmp
ljmp
test
push
fsubp
aam
sbb
mov
nop
jo
mov
cmp
out
pushf
js
jbe
jne
sbb
aad
nop
iret
sti
push
cmp
int
and
push
scas
imul
sub
push
xchg
in
cs
addr16
push
cmp
push
jo
cld
lret
jecxz
bound
push
jb
ret
pop
sbb
cmpsl
mov
jmp
dec
adc
push
mov
arpl
and
add
add
daa
out
and
loop
es
loopne
mov
cmp
iret
js
test
jo
movl
cmc
xchg
ror
ljmp
xchg
inc
add
push
inc
into
movsb
or
jp
push
xor
adc
add
and
inc
cltd
mov
mov
hlt
cltd
pop
sbb
in
int
faddl
mov
pop
aas
divb
outsl
pop
pop
inc
sbb
mov
fstpl
jb
in
repz
add
mov
insl
pop
xor
cmpsl
ds
test
adc
xor
fbld
call
arpl
mov
sti
gs
in
dec
lret
push
mov
data16
xlat
popa
jno
mov
iret
pop
push
xchg
pop
fdivs
ljmp
stos
mov
push
or
repnz
mov
fisttps
mov
sub
fdivl
mov
test
ss
pop
pop
jmp
je
xchg
aaa
cs
aas
inc
pop
enter
dec
stc
std
xlat
lea
xor
xor
mov
jns
mov
xchg
ret
add
dec
adc
inc
jnp
shll
xor
xchg
lods
pop
repz
mov
mov
and
or
fildl
push
movsl
movsl
rorb
inc
inc
or
sbb
xchg
pop
out
loope
push
jns
xor
sar
xchg
pop
test
push
testl
push
dec
fildll
or
popa
mov
sbb
mov
push
stc
aaa
jecxz
in
mov
shll
in
sahf
and
pop
mov
bound
dec
mov
jge
push
xchg
fsubl
adc
int3
sub
and
push
sahf
mov
jne
cmp
push
in
pop
lds
add
inc
inc
in
pop
sbb
arpl
jae
jae
sub
iret
cmpsl
xor
push
ret
arpl
mov
jbe
push
loope
xor
push
stos
fwait
mov
cmp
jmp
push
push
cmp
pop
fs
sbb
mov
and
xchg
xor
iret
aaa
inc
push
pop
dec
movsb
arpl
jb
imul
stos
stc
pop
cmp
aaa
inc
mov
pop
sbb
popa
data16
pusha
outsb
or
mov
xor
sbb
push
push
rclb
lret
int
cltd
sub
rorb
pusha
rcl
add
movsb
loope
stc
lcall
out
sub
jne
lcall
lea
add
rclb
stos
je
or
sbb
cmp
shrl
or
push
out
mov
jbe
dec
pop
mov
and
stos
loope
add
pop
nop
jecxz
jl
inc
roll
arpl
cmp
add
insl
or
xor
push
aad
pop
and
mov
outsl
mov
xchg
inc
loopne
xchg
sbb
iret
icebp
repz
icebp
push
sbb
lea
enter
cmp
inc
into
js
jp
sub
dec
mov
hlt
inc
addr16
aaa
daa
stos
hlt
jge
out
sub
mov
jle
pushf
shrl
push
sbbb
xor
push
xorb
xor
xchg
push
inc
loopne
loopne
sbb
jnp
adc
xchg
mov
call
movsb
stos
pop
lds
in
shll
mov
sahf
sbb
addr16
cmp
test
sbb
or
jecxz
test
pop
mov
fisubs
test
les
je
sbb
pop
inc
xlat
inc
dec
jle
or
test
clc
mov
inc
jo
jge
mov
mov
add
ss
inc
or
test
pop
mov
adc
jge
dec
jl
dec
and
inc
popl
aas
sbb
jns
fsubrl
or
hlt
xchg
xor
xor
pop
test
dec
iret
jle
inc
cltd
ljmp
dec
inc
ret
scas
dec
mov
cmp
jbe
push
push
jp
sahf
xlat
pop
lods
pop
mov
mov
addr16
dec
and
jns
mov
adc
add
mov
inc
xchg
loop
divb
mov
push
in
push
push
repz
jmp
dec
lods
mov
dec
aad
outsb
sub
cwtl
testl
pusha
es
cmp
cli
pop
lret
jecxz
and
jno
push
mov
add
mov
mov
push
addl
cmc
inc
pop
ret
fisttps
js,pn
out
sbb
adc
xchg
in
cmpsl
and
lods
pusha
push
lretw
enter
and
les
jno
adc
dec
mov
call
daa
sub
shlb
jae
cmpsl
mov
sub
js
mov
int3
scas
ret
xor
mov
pop
dec
das
xchg
push
push
jo
ret
jle
test
in
insb
mov
shr
shr
in
push
adcl
les
dec
out
cli
mov
enter
or
adc
mov
insl
xchg
sub
inc
push
add
jmp
fs
sbb
adc
imull
and
inc
rorl
scas
in
pop
dec
mov
cmp
dec
mov
cli
mov
fsub
or
sub
stc
mov
adc
rol
addb
mov
adc
icebp
gs
inc
jp
and
xlat
and
das
adc
cld
packsswb
inc
xchg
je
mov
dec
mov
xchg
xor
lcall
flds
mov
jge
mov
dec
pop
sbb
pushf
mov
stc
inc
shll
sbb
xorl
add
outsl
cmc
push
mov
jb
cwtl
in
repz
mov
adc
or
mov
clc
in
xlat
pop
jo
add
inc
subl
mov
orb
push
fisubl
sbbb
cmpsl
test
fdivs
cmpsb
xchg
sub
lret
cmp
and
or
cmp
fisubrl
mov
jmp
mov
fdivl
mov
jg
push
arpl
jge
repnz
mov
sbb
xchg
shlb
push
jp
sbb
inc
or
scas
dec
or
loope
lcall
push
adc
test
mov
shrb
in
sbb
push
adc
mov
scas
cli
add
loope
icebp
cmp
stc
mov
or
push
fldenv
in
in
push
cmp
enter
rclb
or
rcrl
cld
in
dec
insl
jnp
push
mov
int3
pop
xchg
xchg
mov
dec
movsb
int
sub
das
fnstcw
fmull
mov
xchg
in
movsl
mov
mov
xchg
push
jae
cwtl
test
in
ror
rcr
mov
adc
rolb
inc
cmp
mov
inc
leave
leave
pop
inc
clc
or
daa
xor
pushf
push
xor
orb
pop
xor
push
loopne
mov
mov
jae
in
and
repz
ret
jno
arpl
pop
leave
jo
or
out
int3
ss
and
iret
jp
sbb
repnz
out
adc
add
in
cli
and
push
daa
outsb
lods
adc
mov
repz
loopne
cmp
jne
mov
mov
aad
push
sbb
sbb
inc
mov
push
cmpsl
add
es
cli
xlat
jo
push
bound
out
push
daa
ret
cmp
je
push
dec
insb
and
pop
cmp
push
scas
daa
mov
fisttpll
movsb
cmp
mov
lret
std
fwait
testb
add
cli
pop
lret
out
fcmovnu
pushf
loope
out
cwtl
pop
mov
in
xchg
push
sub
mov
adc
dec
inc
repnz
mov
sbb
aas
inc
push
out
or
sbb
ds
inc
shl
mov
aam
xchg
testb
mull
lret
cli
lock
fcoms
shlb
stos
inc
aad
add
data16
pop
movsl
dec
dec
lea
inc
out
push
icebp
scas
adc
adc
mov
lret
sbb
ss
push
ss
xor
jge
jl
in
test
jmp
out
pop
jnp
dec
cmp
pop
lods
imul
sub
xor
add
js
push
cmp
add
xor
fisttps
jae
or
cwtl
xor
fisubs
mov
cmpb
sbb
cld
mov
add
or
mov
fsubrl
add
cmp
imulb
sbb
push
mov
and
popl
ret
inc
xor
cmp
movsb
clc
jb
dec
inc
div
xchg
jmp
rcrb
data16
iret
cmp
xorl
ret
cmpsl
sub
ja
repnz
push
mov
dec
sbb
and
std
mov
jecxz
lods
xchg
or
in
adc
ja
sub
jp
sarl
ja
insl
lods
stos
cmpsl
popf
test
addl
mov
sbb
stos
jl
inc
mov
fwait
mov
mov
loopne
fwait
adc
push
out
outsl
rolb
sub
std
jl
cmc
leave
fiaddl
xchg
pop
cltd
or
lcall
div
mov
jae
setne
addr16
sub
xor
hlt
mov
push
mov
jp
push
mulb
aas
rorb
stos
ljmp
push
xchg
xchg
xor
inc
mov
out
js
fadd
dec
push
mov
sbb
and
mov
mov
push
pushf
insb
and
fs
cltd
shrl
jo
fmull
das
jne
sbb
sbb
jg
test
or
nop
push
jne
cld
shll
jmp
mov
and
jbe
xchg
lahf
cmc
nop
ja
pop
inc
or
insb
ss
scas
mov
fwait
sub
and
mov
xor
add
cmp
frstor
mov
jb
lods
int
xchg
sahf
mov
lea
add
daa
and
int
cmpsb
lods
clc
or
mov
mov
jmp
add
push
inc
nop
and
push
adc
pop
adcl
and
add
jge
push
mov
ficompl
lea
add
sbb
jo
or
stos
roll
mov
cmc
lcall
fldenv
popa
inc
mov
sub
mov
fldl
sbb
fdivs
xor
adc
mov
js,pn
xchg
xchg
jecxz
adc
pop
sub
pop
lods
rol
dec
mov
in
fnsave
cmpsl
cmpsl
and
test
or
pop
and
enter
cmp
pop
outsl
test
ljmp
in
leave
push
popf
dec
enter
jmp
lahf
cmp
mov
cld
cmp
mov
aaa
out
sub
call
cmpb
negl
testl
sti
dec
popa
push
testl
cs
dec
sbb
sub
sbb
mov
adc
arpl
fstpl
lret
xor
dec
cmp
cmc
xchg
inc
cs
xlat
fs
fwait
push
xchg
jns
shl
shrl
sub
outsb
into
xchg
mov
stc
fcomps
mov
sub
stos
mov
in
adc
push
dec
dec
sbb
jl
dec
adc
jb,pt
dec
sub
cmpsl
jg
add
fistps
loope
dec
outsb
xchg
cmp
int3
fdiv
mov
jmp
xchg
pop
rolb
out
adcl
rcll
ret
movsb
cmp
jmp
std
add
addb
pop
aad
fs
push
mov
jb
dec
loopne
adc
fisttps
jb
and
mov
inc
popa
pushf
js
adc
mov
adc
mov
rcll
lcall
sbb
mov
cmp
leave
shll
movsl
pusha
cmp
jmp
mov
cli
sub
sub
jmp
mov
adc
jmp
pop
mov
in
fsubr
mov
dec
jge
mov
mov
inc
inc
push
or
adc
lret
xor
ret
push
cld
xchg
cltd
sahf
mov
or
ret
mov
cmpb
shlb
repz
lcall
cmp
adc
xchg
and
js
imul
sub
sti
popa
mov
adc
pop
inc
fsubr
das
ds
cltd
clc
sbb
sahf
xlat
nop
ror
adc
xor
adc
push
ja
mov
int3
jg
push
jl
data16
or
dec
pop
into
jne
sub
add
cltd
sbb
cmp
ret
shrl
jns
push
in
stos
arpl
mov
cmpsl
sub
cmp
movsl
pushl
jl
lods
or
popf
fldl
adc
pop
add
dec
inc
clc
xchg
pop
stos
jnp
loop
rorl
stos
mov
xor
dec
cmc
xor
mov
jns
lahf
add
mov
mov
call
cmp
push
icebp
adc
lds
pushf
mov
arpl
mull
bsr
add
pusha
repnz
dec
fs
sahf
add
jle
pop
popf
jmp
xchg
scas
in
add
pop
fisttpll
sbbb
mov
in
lret
clc
jmp
sti
xchg
xor
mov
mov
inc
or
scas
sbb
cwtl
jl
fisttpl
inc
leave
fwait
and
fs
jne
add
lods
sub
cwtl
lahf
shlb
add
in
rol
adc
mov
addr16
push
scas
nop
push
pop
dec
fdivp
call
mov
xchg
je
push
jmp
pop
movl
out
cwtl
mov
cltd
in
popa
fs
push
cli
mov
sub
sbb
sub
decb
or
sbb
add
orl
inc
cmp
dec
fdivrl
int
aas
inc
mov
push
hlt
std
int3
std
scas
ss
bound
lods
push
mov
sbb
sbb
jecxz
fidivs
dec
mov
loop
lahf
sti
mov
pop
add
cmpsl
mov
or
cmpsl
xor
loop
ljmp
test
jecxz
xchg
pop
push
or
cltd
add
inc
jo
pop
sbb
mov
or
xchg
or
and
sbb
push
fwait
cs
pop
inc
out
aaa
inc
mov
dec
test
enter
movl
mov
dec
mov
mov
jbe
push
push
jg
in
leave
pop
jmp
sbb
or
repnz
dec
lock
ds
stos
cs
mov
mov
mov
mov
adc
mov
pop
pop
out
cwtl
sbb
add
fildl
dec
jb
ret
add
or
sbb
lea
add
sbb
inc
xor
cmc
jno
mov
or
mov
push
sub
mov
add
mov
cmpl
cmpsl
test
push
sbb
inc
mull
push
cmp
inc
sub
movsl
inc
aam
cmpl
mov
xchg
inc
add
sbb
mov
test
fcmovnbe
jle
add
in
sub
shlb
test
cmp
push
fsubrs
sub
or
ficompl
inc
mov
stos
arpl
pop
call
mov
mov
lcall
pop
cmp
or
and
mov
outsb
sbb
mov
mov
js
lea
je
mov
daa
cwtl
xchg
das
inc
or
sub
sbb
loope
push
idiv
popf
seto
orb
jno
ljmp
xchg
dec
jno
leave
cmp
xchg
insb
pop
rol
cmp
in
cltd
push
scas
xor
subl
mov
jne
pop
mov
push
push
xchg
lahf
mov
sahf
sahf
loopne
fisubs
mov
dec
sti
out
and
pop
jo
fildl
roll
lret
loope
sbb
adc
ret
ss
sbb
inc
pop
dec
popf
fcoms
inc
push
push
push
jo
and
pop
cmp
dec
sbb
sbb
clc
out
fldenv
pop
pop
xchg
dec
das
mov
mov
push
or
mov
filds
inc
pop
in
lret
inc
dec
xchg
fstpl
in
adc
movsb
mov
inc
xor
mov
arpl
xlat
outsb
mov
mov
or
sub
or
stos
dec
inc
ss
loop
xchg
cmp
lds
lcall
movsb
fcmovbe
sub
xchg
insb
movsl
lret
dec
fwait
insl
das
jecxz
insl
sbb
mov
add
jecxz
xabort
pop
lcallw
nop
and
cwtl
in
lea
daa
pop
jg
sbb
inc
test
jg
in
dec
pusha
dec
xchg
mov
inc
push
pop
aas
inc
xchg
fs
xor
fidivrl
adc
in
sbb
cmpsb
outsl
mov
loopne
in
mov
lock
outsl
inc
mov
loop
xlat
movsl
ja
jmp
cmp
mov
and
cld
adc
mov
push
outsb
fcoml
sahf
js
mov
ss
pusha
test
cmp
das
cmp
jae
es
shll
adc
mov
and
jecxz
fcmovu
in
ljmp
cmp
push
fdivrl
movsb
mov
orl
jge
or
ja
mov
outsl
dec
iret
repz
outsb
movsb
test
xor
imul
sbb
fcoms
lods
cmp
js
in
push
std
stos
pop
cmpsl
fiadds
test
bound
fcomps
pop
fsubrp
lea
add
push
add
cmpsb
jae
loop
adc
enter
add
test
ljmp
imul
das
icebp
pop
jmp
xor
mov
in
or
mov
lods
ret
jecxz
jo
movsb
pop
movsb
pusha
es
xchg
fstpt
add
jb
fldl2e
cmp
mov
sub
xchg
xor
iret
test
mov
mov
out
mov
mov
mov
and
jmp
popl
fnstenv
cmp
dec
je
sbb
out
adc
add
loop
sbb
mov
xchg
jo
fisubl
ret
outsl
inc
mov
cld
mov
in
movsb
xchg
rcrb
fnstcw
jno
jl
push
addl
push
fistps
xor
dec
sbb
dec
mov
add
lret
jecxz
xlat
mov
mov
movsl
sti
xor
data16
pop
dec
popa
lahf
sti
cmp
pop
jo
fisubrl
insl
out
lret
inc
cmpb
xchg
xor
or
sub
roll
or
aas
pop
add
ljmp
scas
lahf
mov
pop
test
mov
dec
cld
pop
mov
mov
imul
int3
jae
inc
push
pop
mov
mov
mov
add
sbb
rorb
jae
pop
xor
and
push
fidivrl
aad
popf
or
sbb
fwait
les
push
jmp
adc
mov
mov
cmpl
rcrl
xor
inc
loopne
addl
pusha
out
and
jecxz
rorl
jo
pop
adc
insl
push
cmp
in
pop
inc
and
popa
test
push
test
bound
adc
add
sub
in
inc
or
jmp
stos
xor
scas
cli
or
cs
inc
dec
test
rol
cmp
mov
cmp
jg
xchg
xchg
aaa
push
jl
addl
mov
sarb
pop
mov
sbb
call
out
push
fldcw
add
push
cmp
cwtl
xlat
jb
in
sub
pop
push
icebp
int
shl
mov
push
dec
push
dec
jmp
or
popf
xchg
test
pop
loop
and
movsl
mov
inc
inc
fcomps
arpl
add
pop
test
and
stos
addr16
fldl
dec
push
pop
xchg
jbe
adc
pop
repz
mov
cltd
and
mov
notb
fisubrl
pop
sbbl
mov
nop
inc
sahf
mov
mov
mov
sahf
and
add
or
std
xchg
push
pop
out
mov
mov
sub
outsl
or
push
inc
jge
sbb
adc
sahf
fcomp
sbb
rcl
add
je
inc
push
int3
cmpsb
cmpb
daa
sub
push
fsubs
mov
push
xchg
in
ret
loope
sarl
cs
xchg
xor
push
sub
ret
ret
sbb
dec
inc
push
in
pop
mov
orl
icebp
jnp
xor
and
test
sahf
out
sub
jae
fldenv
adc
push
and
mov
lcall
test
cwtl
sub
ret
xlat
dec
push
aas
mov
adc
jno
push
dec
and
iret
xchg
xor
mov
sub
jo
in
lock
mov
lds
xlat
and
dec
and
adc
cmp
pop
jns
mov
jmp
inc
aaa
mov
adc
inc
xor
enter
call
and
dec
arpl
cmp
xor
ds
in
add
iret
shll
ljmp
xchg
ret
mov
cld
mov
fisttpl
xlat
sbb
mov
adc
jg
mov
and
add
test
push
inc
scas
jg
add
ss
shrb
enter
inc
and
fsubl
subb
push
loop
fsubl
cwtl
mov
and
pop
popa
dec
jmp
and
loope
jmp
aaa
stc
push
fimuls
push
mov
ret
stc
lahf
imul
sub
sbb
or
pop
xchg
or
xchg
jae
in
pop
aad
mov
cld
mov
movsb
push
ljmp
adc
mov
leave
jecxz
mov
insb
sbb
pop
mov
dec
sub
int
add
jns
jp
fisubl
test
dec
xchg
sbb
mov
arpl
mov
sub
jo
jnp
call
mov
mov
imul
sahf
bound
shrl
jle
js
push
test
aam
fsubs
push
dec
in
push
mov
push
lcall
jnp
lea
sbb
sti
xor
mov
mov
js
stos
push
add
rcrb
dec
addb
xor
pop
ds
sub
pop
sub
je
cmpsl
ret
roll
in
repz
xchg
cmp
mov
mov
inc
mov
mov
mov
jne
dec
push
lea
ficomps
mov
rorl
iret
leave
out
scas
mov
lods
inc
mov
pop
and
inc
adc
pop
and
jo
jb
data16
sub
aas
mov
sub
mov
mov
loopne
mov
inc
adc
mov
dec
in
scas
fisttps
dec
pop
and
cmp
pop
push
cmc
and
loopne
push
mov
and
cmp
sub
hlt
inc
lahf
push
aas
inc
ret
fidivrs
xchg
movl
push
xchg
xchg
sbbb
cli
imul
adc
sub
xchg
or
adc
dec
loopne
dec
call
movl
enter
xchg
inc
aam
insl
mov
and
pushf
dec
dec
addr16
fildl
and
sti
add
mov
jno
je
je
push
adc
lds
into
rcrb
ja
push
sbb
repnz
sbb
mov
outsb
sbb
test
sbb
lahf
cmpsb
loope
pop
xchg
dec
fcompl
lret
loop
gs
jbe
mov
in
inc
dec
push
fistl
js
stos
or
jno
sbb
pop
jl
sbb
jge
sti
cmc
dec
xlat
jecxz
call
hlt
xchg
inc
sahf
fs
es
cmc
rorb
pop
mulb
mov
push
test
lret
in
pop
sub
pop
jae
xchg
ja
push
pop
out
pop
iret
cwtl
adc
rcrb
pop
cmp
stos
insl
test
icebp
lret
xor
cld
out
pop
adc
int3
cmp
pop
psubusb
rorl
and
inc
fimull
push
cs
ljmp
adc
or
test
ret
repnz
mov
sub
clc
xor
nop
jl
adc
les
sarl
inc
push
mov
outsl
cmpsl
fldenv
pop
push
cmc
in
int
and
adc
aas
scas
pop
jmp
nop
mov
push
cmp
adc
pushf
push
shl
inc
add
test
lahf
daa
fucom
aad
insb
mov
fdivrp
stc
test
inc
mov
inc
xor
mov
or
pushf
push
sub
leave
cmp
or
popa
aad
and
jp
mov
and
jmp
lret
mov
jae
adc
pop
jae
lds
cmp
dec
add
ret
sub
adc
mov
es
into
into
dec
inc
in
aad
pop
sub
mov
cmp
movsl
and
fnsave
fldlg2
xor
ficoml
inc
out
je
jle
push
pop
mov
push
mov
jl
outsb
pop
lcall
mov
dec
lcall
dec
icebp
fnsetpm(287
push
call
dec
xchg
cmp
cmp
push
push
inc
sahf
inc
aaa
movsl
dec
fistl
lea
pushl
mov
sti
pushf
push
ficoms
test
stc
stos
sti
and
call
outsb
jno
scas
pop
sbb
and
pop
adc
pop
jl
loope
in
psrlw
and
mov
cmp
and
sahf
inc
nop
out
push
in
jecxz
aam
stc
loopne
push
repnz
inc
mov
xchg
cmp
jo
inc
xchg
dec
add
sbb
js
test
ljmp
sahf
hlt
add
mov
fs
stos
jp
add
rorl
xchg
or
test
mov
inc
xor
fsubs
jae
aad
inc
ja
fdivrl
cmc
mov
inc
jp
and
test
ljmp
mov
lea
incl
xor
mov
cs
incb
cmp
or
sbb
mov
rorl
and
es
jne
movsl
aas
leave
subb
xchg
xlat
cld
mov
cmpsl
lods
or
loop
sbb
iret
int3
push
pushf
outsb
pop
mov
sti
mov
jno
xchg
xchg
pop
mov
xchg
jnp
stc
imul
pop
dec
adc
ja
add
xor
fcomip
xor
mov
fcoml
icebp
cmpsb
mov
xchg
inc
daa
aad
leave
jg
and
cli
pop
popf
rclb
test
inc
jmp
lods
pop
lock
dec
mov
mov
jg
mov
rol
ret
jecxz
xor
mov
aas
jmp
aas
jns
out
dec
fmul
push
sarl
jno
mov
xchg
mov
mov
and
data16
pop
jae
add
xchg
sub
pop
negb
or
or
lea
add
shlb
sub
mov
push
push
dec
sub
add
mov
lcall
testb
add
and
pop
jmp
mov
jl
stos
add
inc
add
dec
pop
incb
imul
and
dec
dec
and
push
jg
pop
loop
sbb
mov
ljmp
pop
subb
mov
sbb
sbb
out
cmp
pop
jp
push
movsb
lds
inc
mov
cmp
ds
sbb
or
and
repz
fwait
inc
popa
test
mov
icebp
mov
jb
sbb
aam
dec
mov
sbb
xchg
dec
add
enter
xchg
stos
jno
pop
popa
sbb
addr16
add
xorb
lds
aad
loop
inc
movsb
jl
or
daa
jbe
push
out
pop
and
outsl
sub
sub
jbe
aas
jno
mov
cs
xchg
inc
xor
andnps
enter
call
fcomps
sub
add
ret
dec
push
sbbb
loope
adc
sbb
rcrl
add
ret
fwait
cmpsb
test
mov
rorl
dec
sub
sub
jle
inc
jno
adc
out
dec
cmc
jne
mov
push
psrlw
seto
fcoml
mov
jo
mov
mov
xor
scas
lret
mov
iret
mov
mov
shlb
add
push
xchg
mov
pop
mov
jns
movsl
or
loope
int3
lods
pop
lcall
les
mov
jmp
xchg
lahf
lret
jle
cwtl
pop
sub
jle
cwtl
lret
ret
push
outsb
lret
gs
jg
mov
movsb
push
push
negl
in
movsl
adc
or
stos
lret
out
neg
cltd
sbb
es
rcrw
pushf
test
mov
adc
add
xlat
lret
mov
enter
arpl
fs
add
icebp
jne
push
adc
shll
lret
test
test
lret
cli
pop
pop
data16
inc
mov
adc
mov
movsl
ret
stos
sar
jnp
mov
cltd
popf
mov
dec
adc
mov
push
pop
jae
lds
mov
in
in
arpl
lret
xchg
clc
fprem
mov
adc
cmp
rolb
sbb
decb
mov
out
inc
test
pop
or
out
dec
push
inc
or
mov
or
cmp
loope
xlat
aaa
jnp
flds
inc
cmp
cmp
jmp
movsl
pop
popf
lret
mov
ror
lret
jno
int3
add
and
push
add
add
fiadds
xor
orl
bound
cmp
imul
push
stos
shrl
mov
xchg
mov
addr16
inc
std
and
sbb
sbb
or
sbb
ficompl
ljmp
pop
jns
jns
mov
inc
fildl
inc
push
pop
fistpl
das
mov
aas
mov
mov
lret
into
rcr
add
andl
or
cmp
les
data16
movsl
and
mov
cmp
push
dec
adc
sti
gs
pop
jp
and
push
lods
mov
mov
hlt
mov
sbb
pop
insb
incb
push
and
cld
mov
nop
push
icebp
dec
das
sub
cwtl
nop
push
xchg
loop
lcall
mov
insl
inc
sub
clc
into
iret
jnp
scas
or
iret
in
fcmovu
call
daa
ret
sub
xor
and
sbb
inc
dec
dec
pop
jge
cmc
cmp
cld
insb
mov
les
addb
cwtl
and
shl
pop
push
push
fidivl
add
pop
call
sbb
shlb
gs
je
cmpl
push
rcll
shl
push
jle
sub
mov
jmp
inc
xchg
pop
xor
pop
jmp
lods
insl
push
pop
pop
sub
cld
daa
jne
roll
jle
sbb
bound
incl
and
mov
nop
sbb
pusha
inc
xor
jb
pop
popf
xor
mov
push
mov
pusha
jb
pop
inc
push
jbe
and
icebp
ss
call
loopne
pop
icebp
imul
xchg
pop
sub
pop
jl
mov
xor
daa
fisttps
pusha
add
rcrl
mov
sbb
icebp
cmp
pop
je
fsubl
sti
les
fisubs
inc
fnstenv
movsb
inc
in
or
or
mov
or
data16
outsl
dec
xchg
mov
jp
mov
pushf
sbb
sub
aam
cwtl
mov
aad
pushf
jno
mov
loopne
aam
sti
stos
pop
xor
rcll
push
mov
jnp
mov
mov
pop
pop
es
jp
jns
out
dec
dec
sub
clc
ljmp
adc
dec
enter
jge
stc
test
loopne
dec
adc
push
add
in
lock
dec
sbb
pop
push
daa
sub
adc
mov
rorb
aaa
cmp
les
shll
iret
mov
bound
dec
loopne
adc
dec
add
mov
xor
mov
cmp
sarl
jge
sub
mov
mov
in
dec
iret
mov
jle
addr16
sub
scas
pop
or
fisubrs
fs
push
mov
jecxz
pop
movsl
inc
sbb
aam
rcll
mov
cmp
jmp
jmp
hlt
popa
add
es
out
fdivl
sub
ret
push
and
stc
pop
notb
arpl
mov
pop
stos
subl
add
les
pop
in
pop
lods
sub
jns
cltd
dec
cwtl
sbb
stos
pop
mov
jg
int
and
mov
jmp
shl
sub
shlb
jb
mov
pop
repnz
sahf
add
push
add
mov
inc
push
sub
imul
mov
xchg
iret
fucom
lods
ds
clc
jno
daa
dec
push
cmpsl
div
sbb
jne
sub
cmp
mov
pop
pusha
out
push
dec
jo
push
sti
inc
cs
xchg
xor
xchg
stos
rolb
leave
jo
popa
or
aaa
xchg
mov
cmp
xlat
pop
or
repz
mov
sti
ret
lods
ret
xchg
lret
lahf
mov
dec
fsubl
movsl
cmc
mov
ds
xchg
std
dec
jmp
mov
and
and
mov
stos
rcr
inc
shl
out
cmp
fimull
call
fcmovb
push
pop
dec
xor
nop
dec
icebp
and
jne
jbe
ror
test
sbb
insb
cmc
scas
push
call
in
or
addr16
int3
push
test
in
imulb
mov
sbb
in
pop
das
sbb
lahf
lret
xor
adc
xchg
add
lds
lahf
jne
jg
add
push
enter
stc
inc
data16
orl
aas
inc
or
mov
outsb
xchg
sub
xchg
fnstenv
jp
pop
pop
dec
and
das
xor
mov
sub
jmp
jge
pop
cmp
sub
pop
jmp
dec
xchg
dec
fwait
sub
rcr
mov
and
mov
ficoml
jbe
iret
lods
dec
push
push
dec
test
int3
push
inc
sub
lods
cmpsl
scas
xlat
cmp
pop
xor
sti
cld
sarl
pop
scas
mov
sbb
jo
push
fs
cmp
or
popa
jl
mov
xor
cmp
js
cmp
data16
push
decb
mov
inc
fdivs
mov
enter
pushf
stos
lcall
dec
call
sarl
xchg
cmpsb
cmp
sub
fsubrl
movsl
jmp
dec
stc
cmp
arpl
xchg
jbe
out
mov
flds
cmp
jns
and
rcrl
test
outsl
nop
jno
mov
xchg
mov
mov
shll
pop
lret
jg
pusha
ss
push
pop
stc
pusha
cmp
push
dec
push
and
stc
rolb
mul
jmp
jecxz
fwait
lret
push
sahf
aaa
push
push
or
mov
in
mov
rcl
jbe
mov
push
insb
cmpsb
sbb
ja
cmp
mov
jo
movsl
aam
comiss
in
xor
shr
xchg
pop
push
xor
mov
xchg
dec
xchg
jno
jns
mov
mov
jp
xlat
insb
bound
push
lret
scas
out
mov
xor
or
adc
push
sub
pop
sbb
push
icebp
in
dec
icebp
pushf
cmpl
inc
adc
mov
mov
out
pop
push
push
rcll
inc
pop
rcrl
outsb
cmpsl
fsubrp
or
pop
les
rcrb
test
std
jbe
pop
cltd
ret
loop
mov
jecxz
cltd
testl
ja
cmpb
push
sub
push
dec
push
cmc
testb
cwtl
scas
inc
enter
xor
and
and
insl
or
push
in
cmp
les
in
jl
mov
add
adc
std
ds
mov
std
loop
push
add
aas
daa
cld
mov
adc
pusha
lcall
int
jb
andl
adc
test
fldenv
leave
mov
dec
fsub
mov
fnsave
fisubrl
cmp
lcall
jne
fsubrp
inc
pop
inc
jecxz
iret
fdivs
bound
push
pop
jbe
xchg
cwtl
movsb
cmp
ja
xchg
mov
xchg
dec
dec
sub
jns
pop
mov
notb
movsb
leave
inc
mov
lret
jmp
stc
lods
jnp
psubd
push
fcoml
dec
sahf
test
push
addl
scas
add
cmp
push
add
sbb
push
sahf
or
sbb
mov
sbb
clc
dec
push
xchg
jge
call
cmp
mov
les
pop
daa
popf
jl
jg
ljmp
mov
jp
mov
sbb
dec
dec
sti
cltd
cltd
cmp
xorl
test
icebp
pop
push
pop
fld1
mov
outsl
push
sbb
arpl
mov
mov
stos
aad
sbb
jo
popf
mov
sub
sarb
xchg
push
sbb
push
repz
lea
stos
les
push
sbb
mov
lfs
mov
sbbb
leave
dec
push
out
pushf
sbb
xor
inc
jmp
mov
push
pop
ret
push
mov
fdivl
scas
sub
add
in
and
and
jns
popa
sbb
dec
adc
cmc
ret
mov
aad
pushl
or
mov
push
cmp
pop
push
or
xchg
movsb
nop
sbb
push
cmc
ret
ficompl
cmpsl
leave
push
xchg
out
aaa
jg
popf
lahf
inc
and
sub
mov
sbb
movsb
fistps
pop
insb
fs
jno
pushf
inc
out
cld
dec
add
imul
ret
ret
mov
test
leave
outsl
dec
pop
mov
pop
sub
test
sub
sbb
xor
push
mov
push
push
jg
test
dec
sbb
stos
pop
loopne
stos
and
add
mov
testb
cltd
clc
mov
mov
cmc
pop
lret
cs
sbb
js
jns
push
cmpsl
aad
sbb
aad
fildll
and
pop
pop
jl
loop
push
icebp
mov
mov
cmp
fistpll
mov
inc
push
int
add
pop
fdivl
mov
xchg
popa
jmp
sub
arpl
mov
arpl
inc
add
divl
mov
sbbb
fcmove
stc
dec
scas
xchg
imul
arpl
xchg
jb
pop
imul
mov
in
mov
aaa
push
out
inc
pop
xor
mov
or
fstpt
or
sahf
add
inc
add
fldcw
push
ficoms
cmp
sbb
or
clc
cli
iret
dec
test
jp
cmpsl
mov
shll
xchg
xor
rclb
and
das
add
sub
mov
mov
enter
pop
mov
stos
das
gs
or
cmp
and
dec
idivb
mov
iret
mov
leave
inc
mov
pop
testl
or
ja
lret
frstor
inc
popa
in
loop
push
mov
jg
movsb
ds
mov
push
inc
sarb
int3
jp
ds
push
lock
xchg
mov
test
js
adc
subl
mov
lea
cmp
or
mov
fcompl
cmc
mov
sub
ljmp
inc
lahf
lock
cmp
rcl
mov
mov
pop
and
js
in
ja
pushf
or
or
andl
mov
inc
ds
subb
add
inc
mov
rdrand
out
ds
jg
insl
imul
gs
push
repnz
test
mov
cmp
nop
add
fimuls
add
push
aas
dec
jg
leave
sub
outsl
push
fisubs
ja
rorl
lock
cmp
fildll
int
bound
add
adc
jp
adc
push
add
mov
adc
cmp
stc
sbb
xchg
xchg
sti
inc
rorb
cmp
fcoms
lcall
les
and
push
scas
pop
or
lret
outsl
add
jbe
mov
push
bound
cmp
xchg
sbb
les
rclb
insl
mov
sarb
and
imul
inc
pop
test
adc
dec
and
jg
pop
mov
inc
loop
inc
mov
add
mov
add
jg
negb
jge
shrl
lret
test
outsb
sbb
lds
and
cwtl
fwait
cmpsb
addl
insl
or
mov
and
aad
out
inc
inc
mov
add
sub
aad
xor
xor
jnp
fnsave
mov
pop
sahf
xor
pop
nop
dec
iret
mov
jnp
mov
pop
inc
roll
pop
push
cmp
rcrl
jo
jle
aad
mov
test
repnz
mov
pop
pop
mov
test
pop
add
fists
loop
jns
xor
lret
aam
mov
imul
mov
and
ja
ficompl
inc
scas
nop
or
push
pop
bound
mov
outsb
inc
cmp
cmp
dec
fsubs
loopne
add
into
cmp
cltd
in
ret
je
cmc
dec
into
scas
sub
xchg
sbb
pop
pop
jb
cltd
inc
fldl
xor
xlat
cmpb
ret
jbe
add
in
cmpsl
add
lret
ja
xorl
leave
push
push
push
pop
xor
add
push
adc
cmp
test
jb
fwait
push
xor
cmc
add
shlb
cmpsl
enter
cmp
aad
push
stc
push
cmp
movb
das
in
icebp
pop
in
ret
test
add
jae
fisubrs
push
jb
adc
lods
jp
xlat
inc
cmp
icebp
dec
dec
jbe
dec
shl
dec
xor
outsb
inc
xor
mov
mov
push
adc
jle
mov
jecxz
mov
arpl
scas
push
xor
inc
xor
pushf
into
push
sub
lds
pop
or
fnstenv
aam
pusha
jno
ret
inc
sub
jg
adc
test
add
sub
int3
pop
xorl
in
das
add
ret
add
nop
ss
iret
add
xchg
loopne
fs
imul
loopne
mov
sbb
fcompl
movsb
mov
xchg
cmp
sarb
cmp
xchg
push
lods
cmpsl
iret
sbb
loop
imul
idiv
shll
icebp
int
mov
ds
out
or
seta
push
fidivs
fcomip
insl
cmp
sub
sub
data16
adc
rcrl
lock
sahf
jmp
and
mov
jle
sti
and
loope
add
add
das
fnsave
test
xchg
rcll
and
into
adc
aaa
pop
jno
jp
dec
dec
xorb
iret
and
enter
push
push
pop
mov
test
and
shll
jmp
into
scas
mov
jge
cmpsl
push
push
mov
ljmp
pop
movsl
xchg
push
xchg
aad
es
lret
jae
or
sub
mov
sub
mov
mov
ror
and
adc
jo
ljmp
xchg
push
push
push
rcll
std
sub
incl
pop
movsl
xchg
scas
insl
adc
mov
jge
mov
repnz
jns
push
movsb
mov
inc
inc
push
aam
int
setb
mov
jns
cwtl
xchg
je
mov
adcl
pop
repnz
jg
lods
fcmovnb
and
movsl
ja
pop
xchg
xchg
cmp
out
sbb
call
loop
popf
outsl
out
dec
addr16
aas
jmp
rcl
push
enter
fcoms
hlt
popa
mov
dec
insb
testb
aas
test
add
out
sub
sbb
clc
leave
sti
mov
fbstp
cmpsb
dec
out
popa
or
add
in
mov
inc
and
mov
into
icebp
jbe
insl
add
mov
dec
push
mov
nop
or
mov
push
lock
mov
loope
sbb
pop
pop
aas
jae
xor
test
js
insl
addl
adc
push
std
fisubs
jnp
mov
sbb
pop
adcb
mov
call
test
jo
scas
repz
shll
icebp
sub
dec
inc
fdiv
inc
enter
sahf
call
and
lds
or
dec
loop
dec
loop
fmuls
xchg
jge
test
mov
shr
insl
jl
daa
xchg
roll
movsb
test
mov
or
insb
enter
and
out
fdivr
out
dec
negb
sbbb
dec
imull
out
les
xchg
inc
or
mov
xchg
js
add
adc
sbb
inc
lds
xor
fwait
and
jno
mov
cli
nop
pusha
int3
xor
pop
in
psubsb
aam
imul
rcll
xchg
jecxz
incb
xorl
popf
es
mov
pop
push
aaa
ljmp
push
int3
loop
mov
pop
lods
xor
fmulp
cs
andl
push
mov
xchg
pop
and
xor
dec
cmp
sbb
mov
sbb
add
lea
popa
hlt
sub
push
stos
shll
int
sub
xor
jmp
lods
pop
rolb
aad
dec
xchg
adc
and
movsl
mov
int3
adc
daa
es
aas
and
cmpsl
xor
xlat
push
icebp
xchg
xchg
out
xchg
push
dec
lea
rcll
insl
cs
in
dec
jbe
pop
mov
fmull
lret
lahf
je
insb
mov
dec
mov
sbb
icebp
aas
sbb
push
lea
cs
jb
push
add
mov
or
adc
jo
dec
sub
jnp
jp
jb
sub
in
movsb
dec
xchg
out
in
out
add
test
out
lret
mov
cmp
xor
jae
jg
sbb
mov
mov
push
sbb
cmc
or
cs
lea
jne
ljmp
pop
inc
ds
or
xchg
sbb
mov
rorl
sbb
scas
inc
mov
sar
mov
mov
mov
rolb
inc
adcb
mov
xor
jns
loop
ljmp
fidivrs
pop
xor
outsb
pop
or
insb
mov
jo
cmp
mov
lcall
fwait
sbb
leave
jne
leave
inc
je
adc
test
and
sub
fwait
jecxz
mov
mov
test
pop
cmp
dec
lods
push
iret
mov
out
fcmove
xorb
loop
dec
pop
pop
push
cmpb
cmp
push
add
sbb
push
inc
les
cmpsb
mov
mov
add
test
or
hlt
test
mov
mov
mov
and
pusha
fldt
test
gs
bound
add
xor
mov
add
xor
test
movsb
or
dec
scas
ds
cld
inc
sub
push
xor
xchg
jae
loopne
cmp
ret
push
imul
mov
push
stos
xor
lea
scas
xlat
push
push
sahf
fdiv
lds
xchg
jne
pop
loope
lret
lock
sbb
cld
loope
or
imul
push
xchg
cltd
jecxz
test
popl
adc
push
stc
xchg
outsb
jo
loope
cmp
pop
idivb
ret
mov
test
data16
pushf
in
aas
jno
pusha
jnp
mov
jmp
and
mov
sub
add
push
loop
inc
xchg
out
xor
and
mov
push
iret
cld
or
xor
push
sahf
adc
xor
stos
adc
fdivl
xchg
dec
xor
mov
dec
lahf
iret
fnstcw
and
dec
mov
inc
sti
out
push
mov
addr16
arpl
xchg
fsubl
push
loope
xchg
sub
iret
cmpb
lret
bound
sbb
lahf
movsb
inc
jb
adc
fbstp
fwait
cmp
mov
cmp
test
jmp
cmc
add
push
sbb
mov
mov
andps
flds
pop
inc
dec
cmp
sub
jbe
pop
stc
sub
pop
pushf
mov
ficompl
pop
cmc
dec
jne
shl
mov
mov
fwait
neg
mov
inc
and
xor
push
rcr
cmp
test
in
mov
jno
std
mov
xchg
inc
push
imulb
into
cmp
mov
push
stc
out
mov
les
ljmp
popf
pop
add
scas
xorb
add
fsubs
daa
in
jns
out
inc
fstpt
mov
lods
pop
insl
lods
push
in
dec
test
inc
cwtl
into
sbb
cltd
jle
push
rcrl
dec
sarl
repz
iret
xchg
jp
psubw
or
jl
popa
outsl
cmpsl
sbb
lcall
lret
loop
fdivp
cmp
bnd
stos
inc
enter
cmp
xor
mov
cld
sbb
scas
jo
aam
cmp
jp
int
jecxz
test
jae
or
xchg
pop
adc
ffree
or
idivl
int3
sbb
pop
sbb
sbb
add
ret
test
incb
movsl
pop
shrl
ds
pop
jp
popf
mov
iret
ss
sub
jo
inc
out
repnz
int
mov
ficomps
or
mov
cli
mov
xor
mov
sbb
iret
subb
mov
sub
pop
and
out
loop
inc
inc
imul
lods
add
cmp
sbb
jp
cs
inc
dec
sbbb
cmpsb
mov
jl
loop
cwtl
ss
fsubrl
pop
push
pop
and
daa
sbb
sub
xor
jbe
test
je
cmp
mov
mov
fucomi
pusha
test
mov
ret
dec
xchg
cmp
and
push
test
jg
cmpsl
pusha
cld
pushf
mov
cmpsb
xor
jecxz
bnd
out
push
push
fistpll
lea
cmp
sub
jno
push
mov
mov
ret
jl
addl
xor
lret
shlb
bndldx
fwait
lret
pop
mov
fmuls
xor
adc
sbb
iret
or
pop
sti
int3
mov
or
and
lret
pusha
inc
add
jge
aam
ds
das
xor
cmpl
repz
es
jmp
and
es
lret
inc
arpl
sub
mov
xlat
cld
adc
dec
or
fdivr
in
pop
and
loope
or
sbb
icebp
add
mov
loope
sahf
jg
les
xlat
jbe
mov
push
and
inc
pop
adc
fdiv
stos
pop
mov
mov
push
push
cmp
insl
add
mov
loop
xchg
push
stc
dec
sub
pop
scas
cmp
or
test
xchg
decl
mov
jp
aam
adc
sbb
data16
nop
and
push
sti
mov
cmp
stos
into
je
xchg
stos
push
mov
cmp
push
test
xor
and
enter
pop
jge
into
filds
mov
cmp
fsubl
ret
loop
dec
hlt
mov
sbb
scas
shll
out
cli
mov
cmpsl
push
sub
fcoml
adc
adc
loope
cmp
cld
mov
sbb
and
iret
and
jle
ja
inc
test
andl
std
imul
sub
pop
imul
shl
clc
adc
cmpsb
imul
xor
subl
outsb
lea
int3
rep
in
outsb
imul
mov
int3
shlb
sbb
pop
push
in
stos
and
jns
icebp
pushf
lock
ljmp
pop
mov
add
and
pushf
icebp
cmc
in
xchg
stos
mov
movsb
xor
mov
das
lahf
push
jecxz
fwait
movsl
aam
pop
xchg
cltd
inc
repz
mov
rcrb
jmp
insb
inc
leave
xchg
addr16
int
adc
cmp
das
push
and
loope
ljmp
lret
or
sbbb
jle
mov
and
jns
jmp
cs
pop
js
dec
js
sub
mov
push
imul
ljmp
ret
dec
jmp
cmc
or
jb
outsb
or
dec
mov
pop
mov
xor
mov
sub
adc
enter
jo
and
push
into
xchg
cmc
shl
lea
loope
mov
test
sbb
jo
jge
aas
sub
xlat
add
movsb
mov
mov
push
dec
jnp
imul
lahf
pop
dec
ret
and
mov
jne
jbe
xchg
jne
mov
enter
mov
sub
mov
add
inc
xchg
fistpll
mov
insl
jo
filds
or
out
andl
daa
jl
out
or
mov
push
cltd
daa
push
adc
pop
mov
sarb
inc
icebp
ljmp
fwait
sub
sbb
push
or
inc
xchg
stos
cwtl
ret
rclb
pop
test
mov
dec
pop
adc
ret
sub
loopne
mov
inc
in
push
pop
sbb
mov
cmpsl
lea
push
jbe
xchg
int3
imul
scas
mov
std
ja
push
out
fimuls
iret
js
and
pop
push
mov
fcmovbe
rcr
mov
fstpt
das
xchg
mov
and
sbb
jnp
jmp
and
sub
jo
pop
jle
pop
repz
inc
sub
nop
test
add
cmp
jne
inc
ljmp
icebp
lcall
and
xchg
xchg
adc
mov
mov
test
mov
mov
cs
xchg
xor
dec
push
jns
add
sub
pusha
ja
hlt
xchg
pop
push
push
dec
add
dec
mov
shll
adc
daa
subb
loop
cwtl
test
sti
push
pop
shrb
ret
into
icebp
add
fdivr
xchg
xchg
ljmp
sbb
sbb
sbb
inc
shlb
imul
mov
jb
and
jg
dec
jno
sti
mov
stos
mov
out
xchg
repz
sbbb
aaa
mov
lahf
notb
xor
mov
sbb
jb
ss
inc
lods
push
jecxz
mov
mov
repnz
outsb
jae
jb
jne
enter
xor
xchg
rcrb
mov
addr16
mov
insb
popa
daa
inc
ljmp
adc
dec
mov
xor
push
addr16
popa
es
inc
adc
inc
jg
inc
psubb
pop
dec
pop
sbb
lahf
lods
rcr
add
jns,pt
pop
enter
mov
cmp
mov
pop
movsb
out
xchg
jp
xchg
and
jle
push
push
loope
xchg
xor
add
lock
sbb
jo
jge
xchg
bound
sub
inc
jmp
and
popf
push
inc
imul
pop
mov
cmpsl
outsl
add
mov
fwait
push
cmpb
dec
cmp
aam
je
jg
lss
push
xor
sbb
pop
push
popa
add
sub
out
inc
sbb
stos
pop
pop
pop
xorb
jo,pn
add
dec
insb
dec
cmp
pop
sub
imul
dec
jne
arpl
cld
orl
movsl
push
mov
icebp
loop
mov
loop
mov
divb
pop
imul
push
mov
test
mov
scas
pop
rclb
pop
adc
mov
jge
lock
movsb
out
adc
fbstp
dec
scas
in
sub
sbb
mov
dec
xchg
sti
ja
dec
hlt
pop
pop
sbb
outsl
pop
rorb
mov
cmp
cmpsl
cmp
popa
jo
insl
lret
pop
fcoml
mov
dec
lahf
dec
or
js
dec
in
addl
negb
inc
cmp
push
out
push
std
stc
or
lods
pop
sub
xor
lret
mov
and
movsb
mov
movsl
cltd
pop
ja
arpl
pop
mov
xor
lret
es
fwait
mov
test
clc
cmp
clc
mov
adc
sbb
das
jecxz
xchg
out
cmpsl
pop
or
jl
ret
and
popa
adc
lods
mov
aad
adc
mov
add
test
sub
lods
and
jmp
jle
and
xor
out
xchg
nop
lahf
hlt
and
movsb
addr16
mov
sbb
push
jmp
std
hlt
jne
rcr
cmpsb
jns
fwait
jae
or
pop
mov
mov
sahf
mov
scas
inc
sub
dec
ja
sbb
lock
cs
fcmove
test
cmp
into
cmc
mov
pop
pop
inc
sub
call
jb
sbb
imul
out
das
scas
mov
xor
dec
push
fmull
stos
dec
adc
inc
and
cltd
cmp
sub
mov
insl
test
sub
repnz
lock
pop
aam
and
cli
cld
push
iret
enter
mov
stc
push
mov
fwait
adc
je
xor
mov
pushf
mov
xor
sbb
loop
out
aas
adcl
sub
mov
test
lock
bound
adc
repnz
pop
dec
sbb
or
int
arpl
mov
scas
push
int3
ror
mov
mov
pop
jo
sarb
inc
sub
sub
pop
cmp
or
xchg
xchg
push
or
mov
xchg
adc
xor
xchg
mov
orl
sbb
mov
jle
mov
sub
insl
xor
jmp
sbb
loope,pn
sub
mov
fadd
imul
push
out
xchg
jmp
popa
push
sti
fcompl
popf
repnz
sbb
out
push
outsl
dec
xchg
bound
lcall
fsubl
mov
inc
adc
jl
cmp
or
shll
cmpb
jmp
cmpsb
xchg
push
pusha
adc
movsb
popa
sub
push
adc
xor
pop
push
sarl
add
pop
and
push
loopne
sub
stos
test
add
add
or
dec
ficoms
shrl
outsb
push
clc
push
icebp
loopne
stc
arpl
pusha
mov
xchg
or
pop
insb
pusha
negb
add
jecxz
inc
in
das
add
mov
in
jbe
add
out
xchg
mov
jmp
cmpsb
lods
sub
push
aam
push
out
lods
das
push
movsl
jo
mov
pop
sbb
insb
sahf
add
inc
in
cmc
mov
in
adc
enter
inc
mov
ja
mov
xchg
cs
stos
fimull
je
sbb
lods
or
int3
xor
pop
fildll
rcrl
cmp
lahf
nop
dec
in
iret
push
jle
popa
lds
leave
rorl
dec
push
cld
push
xchg
mov
data16
or
shlb
adcl
inc
fwait
test
out
imul
cmp
jge
mov
mov
xchg
shlb
sbb
cmp
mov
mov
call
cmp
mov
push
lock
fwait
sub
lahf
scas
mov
in
std
inc
aam
movsl
mov
cld
or
loope
test
scas
sbb
or
jecxz
sbb
out
lcall
lcall
lcall
mov
shrl
fsubr
dec
imul
cwtl
sti
aad
inc
cltd
imul
xchg
mov
mov
cmc
and
mov
ficomps
sbb
pop
sub
add
cmc
into
mov
repnz
stc
push
pop
in
incl
es
sub
repnz
lret
xchg
pop
popa
cs
push
and
push
mov
roll
fstpl
cld
and
aas
sub
les
test
sub
test
aam
cmp
popf
orl
sub
sahf
repz
pop
fmul
clc
add
rolb
and
xchg
movsl
sbb
mov
inc
in
jbe
jno
fwait
xchg
inc
lahf
and
popl
cmp
or
xchg
mov
bound
subb
movd
ret
ret
rorl
mov
cmp
addr16
fstpt
xchg
loop
sub
stc
xchg
shll
xor
lret
sbb
adc
fldl
dec
add
xor
dec
mov
xchg
scas
push
jl
push
int3
jno
push
out
lds
int3
cltd
and
sti
pushf
int
shlb
jg
or
inc
out
pop
pusha
stos
dec
pop
popa
negl
push
and
xchg
jp
cmpsb
cli
jbe
dec
lds
imul
cmp
dec
jae
mov
dec
pop
call
popa
es
aas
mov
lock
mov
iret
dec
mov
test
xchg
cmp
mov
insl
xor
pop
sbb
and
ret
mov
jle
hlt
xor
aad
in
mov
mov
lock
add
cmpsl
xchg
sub
push
cmp
adcb
lods
rcrb
sti
leave
loopne
xchg
jmp
push
pop
loopne
push
lock
pop
mov
loop
ja
ja
sub
mov
daa
and
std
dec
mov
insb
sbb
pushf
xor
sbb
sbb
imul
aam
cmpsb
mov
test
pop
mov
sbb
outsl
pop
lret
and
adc
test
cmpsb
xor
out
xor
dec
push
xchg
fisubs
pop
arpl
add
incl
jo
arpl
push
or
add
mov
call
or
mov
mov
loopne
xor
push
jae
in
jo
in
adc
adc
inc
push
aaa
aas
cmpsl
cmc
mov
cmp
mov
fs
sbb
xlat
pop
push
out
call
in
push
push
addr16
loopne
or
xor
push
cwtl
jmp
add
adc
clc
out
cmp
insl
pop
daa
push
fisttpl
push
dec
inc
jns
mov
lods
mov
pop
dec
mov
mov
pop
lret
sbb
outsb
dec
nop
inc
das
loopne
jge
out
sub
mov
cld
ja
inc
mov
in
cmpsb
into
adc
loopne
dec
jbe
mov
and
push
movsb
call
xchg
insb
stos
icebp
ljmp
es
scas
cmp
lcall
jmp
sahf
out
sub
stc
rcrl
fldenv
cmp
imul
push
test
or
dec
inc
or
aad
lret
xor
jp
pop
push
test
sub
and
xor
or
adc
xor
mov
out
push
inc
mov
xchg
dec
pusha
inc
xchg
int
cmove
pop
nop
leave
sbb
dec
or
xor
out
pop
data16
add
dec
pop
inc
movsb
xor
adc
pop
int3
adc
cmc
fnstenv
imul
jb
cli
xchg
pop
rclb
inc
stos
test
testb
pop
push
popa
in
jg
and
nop
xchg
mov
xchg
mov
ficoms
cltd
mov
sti
lret
jne
enter
out
mov
inc
test
xor
jne
cmpsb
dec
stc
add
or
adc
cli
in
sbb
jle
cmp
outsl
xchg
addr16
loope
gs
pop
jl
pop
sbb
jbe
pushf
ja
pop
ud1
cmpsl
xchg
pop
jp
loop
test
jnp
push
shl
inc
xchg
outsl
fiadds
mov
subl
fnstcw
leave
sub
adc
push
dec
cmp
not
scas
aad
fwait
shl
pop
mov
or
cs
incl
cli
push
ljmp
aaa
ljmp
out
xor
pop
push
mov
sbb
repz
add
adc
mov
sti
in
mov
fisttpl
mov
push
fiadds
adc
inc
es
out
jne,pn
mov
enter
mov
cmp
xor
pop
sbb
mov
jmp
ret
pop
push
jnp
pop
push
fldl
insb
gs
sbb
mov
inc
ficomps
test
inc
pop
inc
iret
cmp
jo
push
mov
push
enter
lods
pusha
aaa
and
jne
mov
jae
xchg
cmp
adc
shl
push
and
sti
push
pop
pop
jb
mov
mov
out
fcoms
clc
mov
movsl
push
stos
repz
stc
incb
test
xorb
xchg
cmp
dec
dec
mov
push
dec
imul
xchg
dec
inc
mov
aam
or
testl
push
jbe
adc
aad
jle
xchg
in
sarl
mov
rol
mov
lret
rorl
je
cwtl
push
cli
mov
lret
and
ljmp
xor
mov
rorb
push
lea
sahf
repnz
or
sbb
dec
push
mov
cmp
addr16
jmp
leave
bound
xchg
jnp
xor
in
bound
imul
addr16
pop
pop
mov
sbb
frstor
out
mov
or
int
push
xchg
ds
test
loopne
lahf
outsl
leave
cmp
cmp
mov
mov
mov
shll
test
daa
sbb
mov
pushw
movsb
std
stos
pop
in
dec
inc
jb
adc
push
rorb
mov
imul
cmp
mov
iret
repnz
in
cmp
mov
cmp
push
and
jae
or
sbb
test
mov
inc
jle
cltd
sarl
int3
xchg
jns
pop
aaa
jb
xor
mov
sub
lock
in
aaa
daa
inc
fiadds
ret
aad
cmp
mov
les
fisubrl
dec
test
mov
aad
les
pop
sbb
out
xor
movsl
inc
xlat
ss
repz
add
mov
xor
lea
pusha
ja
out
sbb
lea
mov
jmp
jno
inc
out
jmp
scas
lret
add
lahf
in
adc
and
mov
pushf
inc
jo
outsb
inc
xchg
push
loopne
push
icebp
push
adc
ud2
lahf
out
xchg
popf
sbb
or
adc
fs
jg
push
adc
imul
mov
sti
add
out
leave
xchg
shll
cmp
xor
lods
push
sbb
in
lahf
into
cltd
ret
iret
add
jp
fnstsw
and
xchg
pop
test
and
repnz
xchg
or
insl
aad
jns
out
fnstsw
pop
fs
std
and
jmp
push
test
fstp
xchg
adc
test
inc
mov
sahf
inc
aad
hlt
adc
test
cmp
scas
fnsetpm(287
push
inc
dec
pushf
es
push
lock
xchg
sbb
ja
ja
adc
pop
lret
push
lcall
push
lahf
jecxz
push
jecxz
sub
out
pop
fadds
jne
cmpsl
dec
jbe
mov
test
das
pop
jmp
js
and
add
adcb
xchg
push
in
sub
loop
push
xchg
aam
inc
inc
sarb
mov
dec
pop
mov
fs
dec
popa
mov
cmp
xor
mov
stos
ret
jp
daa
cmp
fldl
int
rol
inc
ror
icebp
mov
rcrl
push
inc
push
pop
sub
fs
or
mov
jge
mov
nop
sub
fstps
out
pop
in
xchg
lea
pusha
subl
iret
loop
clc
addr16
and
xchg
stos
adc
loop
mov
dec
insl
je
imul
sub
addr16
xchg
int3
xor
es
test
decb
ss
cmp
push
les
out
add
mov
adc
xchg
mov
ja,pt
pop
mov
js
pop
mov
fldl
mov
js
loope
lret
or
in
aam
xor
inc
xlat
mov
and
lea
inc
je
lret
mov
jl
and
shrb
leave
xchg
leave
mov
pop
mov
add
cmp
rcrl
scas
daa
rcrb
inc
fsubp
jne
or
pop
inc
ret
cwtl
into
out
pop
or
cli
sub
push
es
ret
mov
repz
dec
cmp
or
and
stc
mov
leave
sbb
sub
test
pop
out
pop
sbb
incb
lock
fstpl
adc
push
jo
dec
test
push
xor
push
rorb
xor
jnp
popa
pop
not
cltd
out
mov
ljmp
aas
add
into
lcall
in
rcrb
loop
test
pop
push
adc
int3
push
inc
and
xchg
ret
push
int3
cs
push
pop
loope
rclb
out
test
push
mov
out
int3
jo
pop
mov
cmp
divl
loopne
bound
leave
out
or
fcomps
mov
or
sub
jg
adc
mov
out
pop
repnz
shr
arpl
test
sub
fst
mov
jb
loopnew
sbb
jecxz
jge
sub
fadds
shl
je
into
les
mov
pop
ss
outsb
cmp
add
jno
ret
fdiv
fucomip
fildl
mov
jmp
adc
fwait
ds
frstor
dec
sbb
stos
test
hlt
mov
icebp
push
icebp
leave
aaa
fidivs
mov
pop
or
cmp
in
mov
sub
sti
mov
pop
xor
inc
adc
rclb
mov
add
test
lret
sar
dec
jp
pop
jnp
jbe
call
xor
popa
popa
xchg
or
and
clc
cltd
mov
xor
mov
test
jmp
jne
xchg
out
repnz
dec
add
cltd
in
pop
dec
stos
testb
xchg
das
and
shlb
push
sbb
cmpsb
cli
add
sub
stos
je
pop
add
inc
test
and
sub
push
mov
loope
mov
leave
xor
or
addr16
repz
xchg
jge
arpl
sarl
add
dec
inc
shr
insl
dec
fs
adc
pop
rclb
rorb
aas
aam
hlt
sub
sub
jmp
arpl
bound
sahf
push
cmp
rorl
pop
mov
lea
mov
sbb
or
pop
jmp
pop
inc
cltd
mov
ret
push
aaa
dec
rclb
frstor
in
sbb
fs
stc
xorb
fsubrl
mov
addb
mov
fwait
or
in
adcb
sbb
pop
jmp
stc
mov
jg
push
aad
int3
push
orl
xchg
push
inc
push
fistl
andb
pop
mov
jmp
rorb
ret
ficoms
mov
lea
mov
xchg
jle
test
imul
or
arpl
pop
int3
repnz
sub
pop
mov
loope
and
test
fcmovnbe
xlat
mov
fs
and
and
sbb
stos
arpl
daa
loopne
in
call
or
testl
jp,pn
enter
ljmp
jb
stos
sub
js
jae
popa
cmp
repnz
sbb
pop
rorb
mov
pushf
movsl
cmpsl
cmovs
repz
cs
ret
push
mov
cmc
jne
xchg
jbe
inc
cmp
aam
dec
aaa
aam
ret
push
std
sahf
sbb
adc
inc
aad
lcall
jo
push
push
jle
xchg
sub
outsl
dec
xchg
adc
jo
sub
cmpsb
cltd
push
and
sbb
inc
adc
push
int
in
pop
sub
cmpsl
push
cmp
jmp
sahf
lcall
in
rclb
notb
fs
mov
mov
lret
dec
call
sub
mov
call
adc
mov
pop
sbb
mov
imul
sbb
jl
or
lods
lahf
clc
idivl
cmpsb
js
cmpl
mov
pusha
outsl
jmp
nop
inc
mov
lds
cmp
and
push
and
lahf
inc
and
insb
xchg
dec
movsb
int3
sbb
std
sub
add
in
add
mov
mov
mov
jno
lret
sbb
jne
lcall
sub
ss
jnp
jae
or
add
loop
inc
or
jno
jo
fnstsw
lock
xchg
call
loopne
add
out
or
add
cltd
and
push
sub
cli
pushf
out
adc
xor
leave
in
aad
pop
push
ret
test
mov
mov
out
mov
test
jnp,pt
fwait
jb
icebp
add
xor
push
inc
cmp
lcall
ja
jle
pop
not
mov
idiv
data16
or
cld
stos
lods
repz
jae
pop
pusha
dec
ja
ds
cmp
cwtl
jae
das
mov
mov
scas
popf
fcmovb
arpl
adc
push
dec
pop
mov
mov
leave
inc
cwtl
push
jp
add
cmpsb
push
push
sarb
adc
inc
jp
add
minps
ffree
loop
insl
push
testl
out
mov
xchg
pop
lea
sbb
cmp
sub
and
mov
std
xchg
fs
cmc
jbe
and
adc
pushf
movsb
adc
inc
xchg
pop
xchg
mov
lret
and
into
aas
sub
int3
shl
fldt
scas
cwtl
fsubr
jmp
not
xchg
jbe
mov
push
jne
mov
outsb
fdivrs
push
or
fmull
push
aaa
std
add
add
inc
jmp
nop
mov
add
outsb
fwait
push
arpl
int
aas
test
jae
int
push
hlt
andps
cltd
jno
leave
pop
mov
fs
and
cmp
or
fldenv
add
cltd
loop
test
jb
outsl
lahf
cld
inc
xchg
cmp
push
add
and
rorb
pop
lcall
lret
cmp
pop
ficoms
jecxz
or
insl
dec
daa
popf
lods
sbbb
push
inc
sbb
pop
in
mov
outsb
xchg
arpl
cmpsl
aad
cmp
mov
aaa
mov
lea
adc
popf
cwtl
testl
fisubs
js
xor
mov
cmc
pop
and
mov
jo
jl
cmpsl
lret
cli
lahf
cmp
mov
jg
push
not
mov
cmc
pushf
repnz
lds
pop
stos
je
lods
rorb
or
push
lahf
adcb
mov
xchg
cmp
sub
scas
mov
xor
in
push
sbb
sub
dec
xor
lds
imul
mov
les
inc
mov
int3
ret
sbb
call
movsl
jb
xchg
add
or
movsb
mov
jae
outsb
push
pushl
adc
lea
mov
fcmovbe
int3
mov
das
jle
inc
lahf
negb
inc
mov
cwtl
inc
addb
add
jns
inc
push
add
sub
sbb
sub
lret
cmpsl
and
out
js
sbb
mov
push
sbb
sahf
mov
dec
loope
xchg
sbb
add
xchg
sub
fidivs
cmpsb
stos
or
pusha
and
insl
leave
imul
in
aad
negb
fiadds
lds
dec
aad
shrl
stos
int3
sub
cmp
or
repz
loop
push
out
ret
inc
mov
popf
or
testb
fbld
mov
sbb
mov
and
pop
aad
push
imull
cmp
cs
loop
js
loop
ret
arpl
movsl
std
cmp
add
cmpsb
jmp
pop
push
test
push
out
sti
pop
cmc
inc
insl
xchg
mov
imul
jmp
push
xor
ficompl
filds
jo
dec
pop
aad
jb
dec
lock
pop
or
in
pop
sbb
pop
pop
push
arpl
sbb
sub
mov
rcll
xchg
or
push
jmp
cs
pop
pop
mov
pop
add
or
mov
lret
sbb
daa
adc
dec
and
fildll
xor
aaa
xchg
and
icebp
test
add
imul
fstl
into
pushf
and
xchg
pop
mov
dec
outsl
loopne
mov
loope
test
pop
pop
rol
mov
jbe
lahf
mov
mov
lock
jne
sbb
mov
mov
rclb
ljmp
insb
sti
loopne
or
xchg
pop
jne
fwait
mov
les
mov
fisubrs
leave
movsl
sbb
mov
cld
xor
lock
push
inc
mov
jo
andl
cli
adc
cmpsb
fisubrs
add
rol
std
add
sti
clc
jecxz
inc
push
or
shl
pusha
cmp
fs
inc
stos
cmp
jb
xchg
jbe
insb
ss
repz
aaa
push
sub
dec
fstps
sub
ljmp
dec
xchg
pop
sub
loopne
dec
lods
mov
mov
cmc
push
mov
in
pop
dec
lret
cmpsb
pop
jne
inc
xor
pop
outsb
mov
into
mov
cwtl
orl
cmp
stos
sarl
repnz
cld
sahf
stos
push
movsb
pop
sbb
mov
inc
aam
mov
ret
adc
call
nop
xor
cmp
lret
ss
cmpsb
stc
xchg
repnz
dec
and
vcomiss
cmp
cmpsl
sti
pop
cmpb
add
push
rcrb
adc
fdiv
jb
out
in
xor
inc
inc
mov
arpl
in
jae
in
cmp
ret
add
ret
cmp
ja
pop
shl
incb
mov
fistpll
mov
adc
mov
mov
dec
push
call
sub
mov
cmc
or
pop
rcrl
movsb
lds
pop
jo
loop
lods
test
lret
push
jbe
and
jg
jmp
inc
xchg
lock
shll
iret
mov
cmp
cmp
pop
das
adc
sahf
add
inc
je
lock
cli
les
fistl
xchg
ja
aas
sub
arpl
dec
or
mov
test
xchg
push
js
loop
sub
mov
out
loopne
loopne
dec
sub
mov
mov
popa
add
in
mov
insb
lods
jo
leave
sbb
ljmp
jle
jecxz
lods
int3
xchg
out
fcom
pop
mov
pop
lea
nop
pop
pop
mov
push
scas
push
push
pop
lret
leave
jb
ljmp
es
jmp
int3
outsl
iret
repz
pop
ret
in
lret
push
aam
pop
pop
lock
fwait
or
mov
mov
xor
fstl
aaa
jg
push
ret
aaa
stc
cmp
inc
pop
sub
cld
pop
notl
mov
rolb
mov
mov
aad
adc
sub
sbb
pop
out
lea
sbb
pop
sarb
sub
shl
jg
add
lods
add
mov
aad
pop
inc
inc
dec
lds
push
xchg
in
cli
jl
or
cwtl
in
pop
rep
sub
movsl
xchg
cmp
dec
mov
fwait
cmpsl
ret
test
ja
in
lods
mov
push
or
pop
xor
add
les
enter
jo
pop
cmc
push
cmpsb
mov
jnp
inc
cld
sbb
mov
sbb
push
lock
outsb
subb
push
add
and
ds
inc
int3
in
jmp
inc
addl
mov
ss
jmp
lock
and
in
push
sub
test
push
aas
rcrb
adc
add
enter
in
mov
cmpsl
jno
fsts
in
ss
pop
ficompl
push
pop
je
in
pop
sbb
push
or
dec
imul
xor
add
jns
adc
pop
lods
or
cmp
mov
mov
mov
mov
mov
pop
sbb
inc
jle
pop
pop
repnz
sbb
jmp
push
dec
jno
push
dec
scas
aam
pop
lret
popa
xor
jge
mov
push
out
ljmp
int
loop
cmp
push
iret
dec
in
lcall
xchg
nop
dec
pop
lods
jae
sbb
jp
mov
adc
addr16
push
push
out
pusha
negb
and
push
rol
inc
popl
hlt
xor
sti
jno
jp
jg
mov
adc
fnstenv
lret
psubd
arpl
mov
pop
insb
lods
hlt
sub
rcrl
lods
repnz
lret
pop
jbe
test
or
or
aam
sub
cmp
jle
mov
push
ljmp
mov
pusha
pop
mul
gs
hlt
and
fldenv
cli
bound
pop
cmp
int
adc
mov
dec
lahf
xor
jl
mov
add
dec
fxtract
cmp
shlb
movsb
fnstsw
dec
cwtl
bound
or
and
xor
int
cli
mov
ljmp
inc
or
repz
dec
shld
out
leave
nop
sbb
jg
les
fadd
in
repz
jns
sbb
sub
ret
pop
loope
cwtl
adcb
std
sub
pop
sub
pushf
pop
testb
xchg
insl
js
inc
pop
cmp
std
xor
inc
je
xor
xchg
jae
push
mov
and
sbb
inc
jl
call
pop
cmpsb
cmp
dec
cmpsl
ret
insb
pop
fdivr
lcall
jmp
cmp
adc
pop
add
push
fcomip
jge
and
lock
out
test
repnz
pop
das
aam
movsb
in
int3
cmp
ret
es
rcll
jb
sahf
push
jge
jge
sbb
pop
push
xor
sub
pop
dec
out
test
ss
jae
mov
cmpsb
les
and
cmp
mov
mov
iret
cmp
ret
call
push
xchg
out
outsb
pushf
test
cmpsl
movsb
xchg
xchg
dec
cmc
scas
mov
rcll
mov
sbb
incl
arpl
int
lret
jecxz
inc
and
fcomps
outsl
push
jmp
in
xchg
mov
shlb
lcall
rolb
scas
ret
mov
ss
leave
sbb
in
pop
jnp
mov
negl
xor
push
test
out
insb
roll
cld
push
mov
test
xor
or
dec
shlb
pop
jg
push
loop
sub
jp
ja
mov
std
sub
dec
inc
mov
testl
cs
fldl2t
xor
fisttpl
loop
mov
sub
rcll
cltd
popa
shlb
cmp
pushf
test
mov
pop
psrlq
push
and
jb
pusha
out
arpl
jp
ss
sub
jae
add
loopne
xchg
cmp
daa
mov
xor
mov
popf
push
mov
test
push
rolb
sub
adc
test
xor
loop
and
jle
loop
jecxz
lahf
shlb
inc
cmp
mov
add
push
sbb
in
sbb
push
loope
bound
scas
daa
push
pop
dec
mov
call
add
mov
les
and
outsb
push
gs
push
mov
inc
test
inc
ljmp
jg
sbb
mov
mov
jmp
jbe
dec
xlat
rep
jno
push
pushl
xchg
cmp
stc
dec
outsl
fmull
push
mov
fildll
cmp
mov
test
aaa
shll
adc
xchg
mov
mov
movsb
stos
cwtl
sbb
push
orl
jne
add
icebp
loope
add
movsb
icebp
sbb
push
fidivrl
mov
mov
mov
mov
pop
in
lock
dec
enter
shr
push
inc
lods
mov
push
add
shr
push
in
scas
clc
or
imul
mov
or
mov
outsl
cmpsb
int
clc
dec
or
mov
out
add
jp
inc
dec
fbstp
mov
in
inc
and
adc
js
pushf
and
xor
mov
cld
dec
xchg
pavgb
inc
inc
dec
testl
aas
add
mov
xchg
iret
sbb
rolb
cmp
inc
xorl
call
pop
out
jo
in
sub
push
pop
daa
push
sbb
xchg
sbb
aas
adcl
aaa
repnz
xchg
adc
ret
iret
push
xor
fldt
out
jae
stc
loop
mov
fldl
or
or
or
add
test
mov
fistpll
movsl
arpl
sub
lret
xchg
xor
xor
adc
mov
fwait
insb
fisttpll
or
repz
sti
lcall
repnz
popf
mov
hlt
cmpl
ret
scas
imul
dec
ficoms
ret
dec
aas
jb
data16
scas
push
das
dec
ficoms
adc
xor
jo
filds
popf
mov
xchg
adc
jbe
push
outsl
leave
dec
pop
addl
gs
out
gs
pushf
xor
movsl
insl
fdiv
incl
xchg
in
stos
jnp,pn
stc
pop
imul
dec
jle
inc
or
repz
push
cmp
icebp
nop
inc
nop
sarb
cmc
enter
popa
js
and
jae
mov
out
and
movsl
push
fisubrl
repz
xor
aas
es
xchg
dec
negl
and
sbb
fsubrl
pop
add
lods
dec
fistpll
aaa
cmc
mov
popf
lds
sbb
adc
fsubrl
dec
shll
out
fwait
push
outsb
xor
test
pop
roll
icebp
mov
sbb
cmp
fwait
sbb
xor
mov
jne
fwait
in
test
outsl
mov
mov
nop
xchg
mov
cmp
add
sbb
add
sub
ror
ds
repz
dec
rorl
faddp
push
leave
push
fimull
std
jecxz
or
and
adc
push
js
inc
jmp
and
fcmovnbe
ret
add
lods
rorl
imul
cmpsl
rcrl
xor
movsb
dec
adc
pop
aas
nop
test
dec
stos
add
xor
dec
xor
leave
lods
test
mov
pop
andb
mov
test
mov
stos
mov
jns
dec
fbstp
mov
xlat
aas
call
xchg
rcrb
jno
fldt
test
mov
out
fisttpl
gs
adc
rcrb
test
cmpb
pop
out
popa
mov
movsl
and
lds
dec
fimull
call
loope
sbb
shl
rorb
into
loop
push
mov
popa
out
scas
jmp
imull
mov
test
ds
lods
sbb
sbb
pop
push
test
add
rclb
int3
mov
and
fidivrs
xor
and
cltd
mov
pushf
push
xor
push
cli
sbb
in
pop
jecxz
cmp
cs
jp
lcall
ss
jno
popf
dec
push
ja
fs
add
cmp
stos
leave
jne
daa
out
outsb
call
fnstsw
sbb
jne
aam
cmp
mov
or
ljmp
add
pusha
inc
dec
add
lahf
fisttpll
jns
notb
add
jnp
cwtl
mov
orb
pop
inc
call
inc
and
cmp
jae
inc
stc
inc
loope
mov
xor
jge
jae
enter
int
loopne
mul
add
cltd
in
insl
popf
imul
lea
xchg
push
push
push
cmpsl
addr16
cwtl
fs
in
add
pop
inc
cwtl
jo
add
xor
mov
cli
js
mov
fwait
jl
out
imul
fisubs
pop
shr
cli
aam
lock
jg
add
repnz
or
add
lods
mov
test
pop
pop
jp
in
out
orl
and
lahf
out
adcl
xor
test
cmp
inc
scas
fwait
inc
push
or
adc
inc
hlt
mov
adc
enter
es
mov
nop
imul
mov
xorb
and
inc
fistpl
fwait
nop
inc
pop
mov
jmp
dec
and
xchg
ljmp
sub
test
dec
jbe
loopne
lock
sar
pushf
sbb
test
mov
stos
sub
jle
jnp
sbb
jmp
fldt
out
stos
adc
mov
inc
cmp
dec
inc
mov
clc
fdiv
adcl
mov
mov
pop
xchg
jnp
fildll
pop
fistps
adc
ds
push
xor
imul
lods
icebp
mov
lea
in
mov
push
xchg
sub
and
and
aaa
mov
inc
dec
popf
dec
mov
adc
sub
sub
mov
cmp
lods
xlat
insb
jns
mov
pop
aad
andl
jnp
out
mov
nop
roll
js
mov
xchg
movsb
mov
out
dec
xchg
out
pop
imul
pop
pusha
cs
pop
in
push
aam
jecxz
mov
or
push
sarb
pop
outsl
or
inc
lods
add
rcll
rorb
cltd
xchg
push
aaa
adc
pop
pop
and
dec
add
loope
adc
push
sbb
out
ret
jle
fistpl
in
jecxz
ret
xchg
in
dec
lea
cmp
int
fisubl
adc
xchg
cs
add
aaa
dec
incl
push
imul
jle
cmp
iret
lds
adc
mov
lahf
xchg
inc
lea
cmp
mov
add
pop
mov
stc
int3
or
inc
or
push
imul
dec
lods
xchg
ret
sti
mov
xor
pop
setae
test
addl
test
mov
xrelease
mov
xor
ljmp
sbb
xchg
mov
mov
ja
bound
mov
subl
in
and
sbb
mov
aad
mov
mov
popf
testb
lods
sbb
inc
lcall
fldcw
sbb
and
lahf
cmp
jp
lahf
dec
loop
mov
cmpsb
neg
out
or
mov
or
outsb
ds
test
xor
pop
lods
repz
lock
jns
test
cwtl
pop
das
cwtl
andb
lods
movsl
loope
in
mov
aam
leave
sbb
push
test
push
add
into
outsl
imul
xchg
add
mov
jae
movsb
dec
xchg
loopne
scas
xlat
sbb
mov
aad
mov
shl
incb
mov
loop
mov
icebp
enter
push
data16
subb
out
rol
aaa
test
icebp
int
cmc
adc
lods
out
cmc
cmc
int
sbb
cwtl
daa
outsb
jae
icebp
int3
sbb
aaa
stos
std
ss
push
mov
push
imul
daa
ja
and
insb
negl
and
mov
cmp
outsb
xchg
ret
mov
xor
mov
in
bound
data16
jp
mov
dec
xor
xor
movsb
mov
mov
xchg
mov
pusha
jb
push
sub
rclb
or
jecxz
jno
roll
js
stc
xchg
pusha
ljmp
mov
push
stos
loopne
cmp
jmp
sbb
jnp
cmpsl
test
or
jmp
inc
mov
mov
int
stos
push
and
cld
repnz
jge
xor
mov
mov
bndldx
or
fnsave
pop
test
stc
bound
sahf
cmpsl
push
push
mov
mov
cmpsl
movsl
push
lock
lret
xor
data16
inc
xchg
ret
cmpsl
test
jmp
adc
gs
sbb
sbb
dec
xor
pop
mov
or
fnstenv
inc
in
inc
bound
push
addr16
xor
popa
insb
mov
jno
jne
xor
adc
push
lretw
mov
shlb
mov
mov
outsl
and
out
jb
lea
mov
sub
sub
dec
mov
sub
rclb
and
pusha
inc
jne
in
sub
mov
cmpsl
xchg
xchg
es
pop
push
out
inc
xchg
push
addr16
add
mov
enter
sbb
mov
sbb
subb
movsl
adc
roll
popf
xchg
mov
push
adc
xlat
or
push
out
popa
xchg
sub
mov
sub
sbb
xor
cmp
mov
or
aaa
xchg
jbe
cli
fisttps
pop
pop
fs
jno
ret
dec
stos
dec
mul
mov
lret
js
mov
and
push
lret
pusha
loop
scas
or
sbb
in
inc
loop
enter
push
adc
mov
lcall
sub
xor
cs
das
cmp
xchg
pop
jb
out
cmc
inc
inc
fstpt
stos
mov
rcrl
adc
je
sub
loope
frndint
mov
xchg
icebp
jp
cmpsb
and
aaa
mov
les
inc
jb
cmp
and
push
imul
stos
xor
lock
lods
pop
sahf
jnp
push
fld
pop
sub
xchg
test
pop
xchg
addr16
mov
pop
popa
xchg
loop
aam
push
lock
gs
leave
rcll
loope
filds
lock
pop
dec
shr
popf
push
js
sub
mov
or
test
pop
jnp
cli
cs
nop
xchg
inc
xchg
fwait
jb
lcall
xor
lock
loope
sbb
sbb
ja
paddusb
das
add
adc
inc
test
add
out
cwtl
pushf
xor
scas
clc
je
pop
test
pop
testl
mov
push
imul
push
ja
xlat
scas
mov
adc
out
xor
es
pop
in
mov
sbb
scas
pop
inc
push
sarb
scas
mov
mov
enter
nop
pop
pop
jg
sbb
xchg
sbb
imul
jo
push
ret
push
pop
add
clc
bnd
xchg
jp
scas
int
subb
rcll
adc
jb
xchg
pop
mov
lahf
inc
xchg
and
sbb
add
sub
negb
out
sbb
hlt
cmp
repz
loopne
cmpb
push
std
push
call
stos
stc
sbb
or
inc
jb
shlb
addr16
es
inc
add
and
lret
jne
cld
dec
call
lock
lret
insb
stos
cmp
add
bound
jecxz
aaa
push
xor
lock
adc
push
imul
outsb
mov
adc
test
repz
add
ss
and
test
in
fistps
imul
stos
or
movsl
mov
push
lret
arpl
cld
adc
jns
cld
sbb
xchg
mov
stos
outsl
jbe
push
jge
and
movsl
stos
mov
aam
out
pop
sub
mov
or
insb
lea
mov
aad
sub
icebp
nop
gs
rcr
push
dec
inc
fchs
mov
cmc
adc
sbb
fldt
pop
xchg
movsb
insb
mov
jl
aam
mov
std
ret
push
int3
outsb
lret
push
fdivp
test
sub
shr
pushf
sbb
dec
divl
inc
movsb
enter
lahf
in
push
jp
loopne
mov
addr16
xchg
popa
inc
call
ja
mov
mov
pop
inc
pushf
rorb
das
rorb
jecxz
fdivrl
adc
cmp
pop
push
jno
add
jne
jbe
xor
ret
iret
mov
cmpsb
cld
jno
je
xchg
cmp
mov
push
shll
fwait
out
add
jnp
stc
pushf
pusha
lods
mov
xchg
imul
inc
in
popa
pop
xchg
add
gs
shrl
and
frstor
push
cmp
insl
inc
stos
mov
in
addr16
popf
mov
jnp
sbb
inc
sahf
cmp
aaa
sub
xchg
sbb
sahf
and
lcall
lret
movsl
mov
fstps
add
lods
lahf
push
popf
cmp
subl
xor
data16
mov
xchg
pushf
mov
call
stc
push
sub
sar
xchg
adc
fstpl
rolb
add
in
xor
xor
imul
adc
int
call
int
lods
call
xchg
dec
mov
inc
insl
lock
mov
test
xchg
out
fmuls
add
mov
xchg
addb
fcompl
dec
adc
in
aaa
adc
setbe
sbb
cmp
imul
xchg
mov
sti
mov
dec
imul
lods
inc
dec
mov
mov
in
adc
stos
out
jo
mov
notb
add
inc
or
jp
fnstcw
mov
add
cmp
pop
push
mov
dec
sbb
xor
sub
xchg
lahf
push
subb
add
into
cmp
js
sahf
popa
dec
scas
push
push
fwait
out
dec
mov
das
xchg
pop
mov
adc
mov
adc
mov
mov
jmp
iret
cmovg
pop
jle
lret
xchg
in
ljmp
sbb
mov
nop
cmp
pop
mov
test
ss
push
fld
xor
insl
mov
insl
addl
pop
jmp
xchg
scas
or
xchg
inc
mov
sub
test
iret
push
ja
test
jo
mov
inc
mov
imul
push
xchg
adc
scas
sub
std
add
in
inc
sub
sub
and
outsl
addr16
es
dec
pushf
push
cmp
test
scas
add
mov
aam
out
imul
push
cld
dec
xchg
jge
pop
mov
add
mov
in
pop
mov
adcl
pop
xchg
lea
pop
xchg
insl
push
mov
cs
jo
pop
leave
in
add
adc
std
movsl
ret
imul
cmp
les
mov
mov
leave
fidivl
fcmove
cmp
hlt
jp
xchg
cld
cmc
adc
push
pop
adc
je
int
cmp
out
push
xacquire
sbb
faddl
hlt
jns
cltd
outsb
mov
lret
aaa
dec
loop
mov
lret
jb
mov
xchg
dec
sbb
push
jmp
inc
adc
push
hlt
fdivrl
lahf
dec
int3
xchg
pop
sbb
aaa
and
mov
into
xchg
loopne
fists
lods
aaa
sbb
sahf
stc
enter
push
mov
jmp
orl
push
out
xor
add
mov
sub
lods
push
arpl
add
lret
pusha
mov
roll
out
test
je
addr16
push
jecxz
popf
jns
hlt
int3
gs
jl
push
pop
scas
cld
push
sub
mov
jmp
loop
leave
dec
test
cli
sbb
cld
js
jl
and
pop
add
xchg
xor
data16
fsts
fdivrl
leave
adc
push
inc
inc
mov
sbb
adc
sarl
mov
gs
mov
xor
aad
sub
repnz
ss
add
xor
sub
loop
cltd
jge
inc
pop
pop
sbb
sub
ja
xor
push
mov
adcl
mov
dec
bound
mov
push
enter
call
mov
pop
fcoml
lret
sbb
hlt
shll
test
clc
mov
hlt
adc
es
sbb
sarl
vmovaps
sub
cmp
bound
mov
inc
ret
lea
cmpsl
scas
sub
jns
cli
mov
iret
xchg
and
mov
mov
negl
mov
pop
cwtl
or
push
dec
push
lahf
test
movsl
mov
jo
popf
push
mov
scas
leave
pop
add
cmpsb
sti
xlat
jp
shrb
sub
push
pop
stos
test
or
inc
push
iret
cwtl
push
lock
jb
orl
xorl
test
cmp
jae
sbb
mov
inc
clc
loope
push
mov
cmp
cwtl
inc
jmp
or
jo
insl
arpl
mov
arpl
cmp
sub
sar
pop
inc
xchg
call
pop
jno
insl
cmc
push
icebp
jecxz
cld
xchg
lock
add
sbb
or
fists
jbe
fsubrs
add
mov
dec
push
mov
cmp
sbb
push
dec
push
sbb
cmp
push
fadd
shl
mov
testb
popa
stos
xor
cmp
stos
or
and
dec
sbb
repz
add
fs
mov
out
stc
mov
pop
jl
ja
mov
stos
jbe
ds
icebp
lahf
lahf
push
sub
pop
and
jne
jne
or
daa
xor
imul
adc
inc
addr16
mov
int
mov
leave
cld
adc
or
mov
jl
jp
and
jnp
loop
mov
clc
dec
mull
add
daa
mov
aaa
dec
dec
push
sbb
in
sub
movsb
jg
out
in
out
pop
cmp
xorb
and
fwait
push
movsl
adcb
inc
andb
pop
outsl
sbb
mov
xchg
dec
pop
clc
pop
icebp
cs
push
mov
rep
out
in
cmp
xchg
jnp
and
bound
mov
loopne
pop
clc
in
daa
aad
test
decb
adc
mov
jae
xchg
icebp
ret
ss
in
cwtl
inc
lds
inc
xlat
xchg
xlat
int
add
jmp
fnsetpm(287
std
pop
and
push
sub
and
mov
pop
xor
hlt
outsb
lods
int
hlt
and
push
aas
jp
sbb
adc
dec
jecxz
xor
dec
xchg
mov
jb
repz
andl
insl
mov
cwtl
sub
push
mov
or
lret
mov
mov
add
adc
lods
in
cli
out
sub
inc
incl
xchg
xor
xor
in
js
sbb
xchg
jecxz
or
mov
fnsave
stc
lret
jb
movd
lods
movsl
loopne
gs
xchg
pandn
add
push
mov
imul
fs
cmp
cmp
cmpsl
lret
or
mov
and
cmp
call
movsl
loopne
loopne
rclb
pop
push
call
inc
stc
repz
imul
test
rcll
cmp
clc
sbb
add
clc
mov
inc
adc
frstor
lods
daa
push
jg
fwait
mov
inc
xor
mov
adc
ds
push
popa
mov
fs
sbb
cmp
arpl
test
jns
cld
icebp
loopne
xchg
sbb
test
mov
addr16
add
inc
movsb
ficoms
fisttpll
inc
xor
outsb
adc
pushf
fadds
and
cmp
scas
cmpb
mov
dec
pop
mov
jmp
fucompp
ds
addr16
or
popa
pop
sbb
xor
cmp
sbb
or
jl
call
xacquire
lods
lcall
js
mov
aam
sub
dec
fldl
in
push
sbb
mov
xor
sub
push
leave
ljmp
jp
inc
xchg
xchg
fsub
mov
lods
sarl
dec
inc
push
mov
push
out
push
out
inc
movsb
enter
dec
je
sbb
cmp
out
cltd
lcall
insl
xor
je
inc
jo
and
jne
mov
nop
inc
outsl
lods
mov
test
data16
push
bsr
dec
loopne
inc
cmp
adc
add
xchg
in
xlat
fs
jo
jno
stos
jbe
addb
faddl
add
test
dec
push
adc
push
mov
pop
jmp
insl
fprem1
cmc
pushf
push
cld
cmp
int3
jmp
mov
inc
mov
out
cli
test
inc
data16
or
lea
jb
fucomi
and
fstp
xchg
xchg
jo
pop
dec
pop
mov
sub
ss
or
inc
dec
nop
mov
fbstp
jnp
lret
push
aaa
adc
pop
dec
in
fimuls
mov
dec
mov
divb
cld
out
int3
out
stos
enter
mov
push
lcall
mov
push
push
clc
daa
iret
add
jmp
sub
jo
add
or
cmpsb
pop
in
stc
jb
jg
leave
popa
es
loopne
lahf
and
push
adc
inc
push
mov
xlat
xchg
inc
fs
cmp
ret
sub
fidivrl
ds
bound
js
ficoml
out
inc
lret
idivl
push
aaa
ja
int3
clc
out
mov
mov
roll
popa
fiaddl
push
pop
jp
addr16
push
stc
movsl
enter
sbb
mov
data16
push
push
loop
rcr
aad
pop
sub
dec
jmp
adc
repz
jne
fnstsw
inc
xchg
add
jg
lea
sbb
push
cmc
jge
aam
test
cli
ret
mov
ret
mov
je
and
push
and
mov
loope
sub
je
mov
add
repz
ror
test
and
loop
mov
call
das
mov
into
or
sbb
pop
adc
cmp
das
adc
mov
sbb
test
sub
push
js
mov
jb
hlt
mov
jge
xchg
out
mov
repnz
sti
adc
jg
stos
xor
dec
mov
std
loopne
mov
rclb
jnp
imul
push
xor
out
popl
call
jnp
lret
push
push
lcall
in
jo
es
xchg
bound
jns
sbb
xor
scas
jmp
or
pop
and
or
sub
jne
lret
int3
or
pop
mov
mov
sarl
add
enter
push
mov
cmp
push
cwtl
fimuls
mov
cmp
adc
pop
mov
and
jge
mov
cmp
cltd
out
jae
cmpsb
xor
add
jg
or
xchg
push
lods
bound
mov
sub
jbe
dec
add
aas
pop
adc
stc
fld
push
pop
and
fldcw
rorb
fsts
popf
push
adc
sub
xchg
push
outsl
cmp
stc
outsb
dec
loop
inc
adc
js
movsb
data16
jge
sahf
sbb
popf
sarl
push
or
roll
ret
fisttps
pop
dec
mov
hlt
push
fidivl
or
std
jbe
jge
lea
jnp
mov
popf
mov
stos
adc
pop
test
dec
loopne
repnz
jne
test
pop
pop
adc
cmp
mov
or
dec
sub
not
or
jecxz
jmp
fidivs
les
mov
sub
sti
jge
inc
imul
jp
ret
fldcw
dec
jno
push
jnp
lock
push
das
adc
adc
je
jb
or
inc
xchg
jle
dec
xchg
jae
mov
gs
and
inc
rclb
mov
push
inc
and
jns
inc
clc
sbb
out
mov
test
and
xlat
ret
jecxz
test
add
dec
fldenv
inc
aad
jno
mov
mov
movsl
sti
aad
sub
mov
sub
in
xchg
adc
scas
incb
icebp
call
repnz
mov
lret
mov
push
mov
pushf
fistl
in
leave
xchg
or
push
pop
adcl
stos
push
xchg
xchg
mov
filds
mov
das
sub
mov
cmp
pop
dec
pop
push
outsb
shlb
cmp
or
dec
pop
insb
mov
pop
dec
outsl
cmp
aas
push
pop
and
mulb
jae
cmc
jl
inc
cltd
jge
push
sub
mov
pop
loop
loopne
sbb
mov
les
int3
insb
je
lods
push
iret
xchg
add
sub
add
xor
and
jbe
rclb
dec
mov
cs
mov
insl
mov
outsl
dec
frstor
fisubrs
mov
mov
pushf
stos
mov
dec
xchg
into
xchg
cmp
std
shrl
pop
xchg
push
pop
mov
fwait
in
sahf
and
fstps
out
push
lahf
bound
loope
jns
or
repnz
dec
je
nop
ja
lahf
and
jl
and
shrl
xchg
dec
xchg
dec
xor
ret
dec
push
dec
add
int3
jle
test
daa
cmp
in
shl
leave
sub
jmp
in
data16
mov
into
daa
dec
or
lcall
push
mov
insl
lahf
call
leave
sbb
cmp
xor
mov
lret
add
scas
add
mov
sar
pushf
sub
dec
add
mov
push
or
mov
call
adc
insb
sub
jne
scas
and
cmpsl
sub
inc
and
sahf
movsb
mov
adc
ljmp
jecxz
xchg
jae
push
xchg
cli
js
push
sbb
movsl
push
frstor
arpl
scas
cmpsl
pop
cmpsl
pop
pusha
std
inc
mov
add
mov
adc
pop
push
shrb
scas
sub
mov
or
lahf
cmp
and
lret
ss
lods
sub
sahf
ficoml
jg
push
sub
sbb
and
mov
jecxz
mov
mov
adc
add
shll
repnz
mov
test
add
cmp
js
pop
mov
mov
inc
testb
push
out
into
dec
jne
xor
aad
mov
push
dec
call
jle
mov
rcll
dec
lock
gs
addl
sti
test
lods
pusha
xchg
add
andb
xlat
pop
mov
mov
int3
fcmovbe
push
fidivl
aas
enter
lock
jnp
push
jmp
cmp
repz
jbe
adc
mov
cli
sbb
jge
sbb
in
xor
and
aam
mov
imul
aaa
jp
dec
mov
dec
push
xchg
mull
xor
out
jge
mov
adc
pop
repz
and
ljmp
xchg
dec
clc
pop
sbb
cmp
add
cmp
shrl
cmp
scas
and
jle
push
mov
sbb
mov
cmp
mov
insl
cmc
mov
cwtl
jb
std
jle
cmpsl
or
xor
sub
das
mov
ret
ret
repnz
pop
movsl
int
icebp
mov
add
lock
and
aad
or
std
jne
and
lret
sti
scas
fwait
test
insl
addr16
repz
fldl
inc
fadd
stos
add
adc
xor
sbb
jo
mulb
pop
cmp
xchg
jecxz,pt
test
or
cmp
iret
mov
xchg
call
leave
sbb
jl
popa
dec
cmpsl
sub
arpl
sti
test
mov
loope
ljmp
mov
dec
cmpsl
jp
lds
and
out
sub
sub
sbb
shll
lret
jb
fstl
sub
das
jl
std
inc
aas
fimuls
inc
out
or
xchg
aas
pusha
ja
inc
dec
push
lcall
insb
dec
inc
int3
adc
mov
mov
imul
mov
mov
gs
pop
out
dec
loop
add
cwtl
jo
xchg
jge
cmp
push
cmp
enter
rorl
stc
shr
cltd
inc
and
cmp
fistpll
jb
jl
add
rcrb
lret
iret
pop
ja
sub
mov
test
pop
xchg
mov
xchg
or
mov
and
push
xlat
loop
out
popa
lds
cmpsl
cmp
std
notl
xor
adc
mov
outsb
cmp
sbb
stc
push
ror
push
jle
cmpsl
mov
cmp
mov
mov
cld
dec
idivb
xorps
in
je
add
leave
and
shrb
add
inc
dec
insl
mov
cli
movsb
fs
ficoms
fsub
int
or
clc
inc
and
sbb
mov
pop
add
push
push
outsl
subb
mov
push
ds
daa
fdivs
data16
dec
dec
pushf
mov
cs
sub
fldlg2
or
adc
loope
stc
xor
js
divb
test
or
mov
inc
push
or
pop
xchg
adc
push
sub
xchg
idivb
outsl
sbb
push
xchg
jp
mov
push
mov
sarl
loope
jmp
pop
cmc
push
or
test
out
imul
jne
jl
cli
stos
push
loope
nop
dec
pop
aam
mov
mov
insb
push
pop
loope
mov
push
in
cmp
pushf
mov
push
pop
je
ss
imul
in
lock
fimull
loop
mov
je
movsl
xchg
cmpsb
cli
inc
shll
pusha
pop
mov
dec
xchg
cmp
dec
or
insl
xlat
mov
push
push
mov
stos
inc
mov
jle
outsb
fdivs
push
loopne
push
cmp
xchg
xchg
adc
mov
subl
cmp
sbb
add
neg
aas
imul
leave
pop
pop
ret
idivl
jl
push
push
testl
in
psubusb
mov
jl
fwait
mov
xchg
filds
jl
nop
push
dec
pusha
call
insb
sub
in
jle
cs
pop
xor
sub
sti
test
add
pop
and
inc
push
and
mov
push
nop
popa
or
mov
xlat
xchg
das
scas
sbb
push
xchg
out
add
sbb
mov
push
addl
jne
inc
sahf
or
sub
mov
push
inc
sub
and
push
mov
jae
in
sub
push
sti
jmp
sahf
pop
and
mov
mov
cmpsb
xor
leave
ret
test
mov
invd
cmpsl
mov
dec
or
jge
xor
mov
adc
ja
imul
jmp
pop
ret
xor
xor
inc
mov
inc
dec
scas
and
xchg
std
mov
push
sbb
std
out
sub
cmpsl
mov
ljmp
repz
out
lcall
orb
loope
cwtl
xor
xor
push
or
fiaddl
dec
mov
dec
add
sub
push
xorl
cmpsb
repz
or
in
ljmp
xor
pop
sub
xchg
gs
or
jb
jns
add
dec
sub
in
dec
test
lret
pop
ljmp
ret
js
mov
ja
adc
stos
dec
mov
jle
dec
notb
mov
call
cmp
fwait
jmp
inc
into
jl
mov
sub
mov
or
in
mov
xchg
or
andb
or
ret
pop
pop
dec
mov
jno
xor
push
add
cmpsb
push
adc
cwtl
sbb
in
pop
test
out
xor
jge
daa
repz
mov
fistps
loope
fwait
out
push
adc
mov
mov
in
xchg
inc
mov
mov
ret
aaa
jo
adc
idiv
test
es
xchg
add
pop
dec
imull
mov
ljmp
pop
lock
or
and
mov
lea
mov
negb
and
loopne
lahf
int
or
dec
les
inc
inc
mov
lods
jge
and
pop
push
lcall
into
arpl
les
testb
fwait
mov
mov
addb
pushw
fldt
movb
pop
cmp
inc
sub
sub
int
push
push
je
mov
sbb
dec
inc
cld
or
cmp
divb
xor
xlat
xchg
inc
es
test
xor
movsb
ss
sub
jle
repz
loop
jl
cwtl
das
test
mov
rcll
addr16
lahf
add
popf
mov
mov
fadds
push
inc
push
mov
arpl
fdivrl
dec
repz
jns
sub
popf
les
pop
pop
adc
push
pop
movq
push
dec
movsl
dec
cli
jecxz
and
adc
xchg
insl
jne
xor
pop
pop
insb
jg
pop
insb
jp
pop
testl
mov
iret
dec
inc
adc
lods
push
inc
lock
call
mov
sbb
dec
in
test
dec
outsl
imul
sbb
jp
cmp
sub
dec
add
and
mov
pop
icebp
xchg
push
fs
dec
ljmp
jecxz
mov
xor
mov
and
insb
test
arpl
into
xor
lret
not
mov
loope
jge
sub
cmpsb
or
adc
cld
jno
mov
pop
lock
sti
mov
inc
out
xchg
imul
test
mov
xor
out
sub
pop
scas
pushf
data16
nop
push
out
popf
fst
lea
push
loop
mov
dec
imul
or
and
mov
mov
popf
cmp
into
mov
loop
mov
mov
popf
jge
and
or
dec
cwtl
mov
icebp
and
mov
ljmp
pusha
les
outsb
aad
mov
dec
sti
out
xchg
mov
loop
roll
push
and
add
iret
mov
das
mov
cmp
enter
std
mov
pop
testl
mov
xor
jbe
pop
push
inc
cs
inc
push
xchg
sbb
stc
sub
imul
mov
lea
xchg
sbb
sub
push
mov
ret
mov
xor
dec
nop
mov
inc
or
int3
mov
sub
inc
cmc
mov
loope
outsl
outsb
cmp
popf
xchg
aam
out
ficoms
test
sbb
push
ljmp
pop
mov
mov
in
xor
sbb
jle
sub
add
sbb
pop
add
int
add
xlat
aaa
xchg
loopne
rclw
lret
sub
push
mov
decl
mov
xchg
movsl
addb
push
out
insb
mov
sbb
cmp
xor
xchg
add
adc
mov
xchg
iret
pop
into
repnz
mov
and
orb
ficoml
int
and
pop
push
lock
xor
rorb
gs
sahf
jp
sub
adc
push
rcrl
adc
pop
test
and
push
mov
inc
cltd
xchg
fimuls
fwait
push
adc
lds
add
jp
mov
fldenv
loopne
cmpsl
roll
adc
xor
push
ret
daa
lods
ss
and
jae
pop
dec
mov
inc
and
fdivrl
mov
fildl
fisubrl
bound
sbb
mov
test
mov
jle
call
gs
shlb
jns
jge
pop
jbe
add
sbb
das
jo
loope
dec
jg
popl
iret
push
xor
imul
shrl
outsl
pop
jle
pop
repnz
loopne
lahf
in
pusha
sub
xchg
into
mov
ds
je
shrb
push
scas
and
jo
sub
cmp
popa
mov
push
scas
mov
bswap
sbb
sbb
inc
jo
jg
jbe
sbb
out
dec
and
lahf
jmp
inc
mov
aam
and
imul
push
pop
clc
add
mov
xchg
fwait
inc
pop
xchg
clc
cld
iret
sub
mov
and
stos
xor
xchg
in
pop
mov
jae
pop
inc
notl
pop
inc
fs
int
stc
pop
test
add
icebp
aas
jae
xchg
adc
repnz
inc
test
clc
or
jns
je
jb
inc
jmp
sub
push
cs
cmc
movsb
adc
push
outsb
adc
fwait
sub
adc
sahf
xchg
dec
out
fsubrs
in
frstor
rorb
mov
rol
cld
repz
mov
das
jle
mov
jbe
mov
hlt
or
lods
push
test
push
push
mov
mov
mov
stc
cmc
inc
push
adc
add
or
mov
jns
push
cs
inc
jbe
fwait
inc
pop
subl
idivl
add
shlb
ficoms
mov
imul
test
xor
shl
mov
mov
jmp
shlb
jl
int
test
cmc
push
loope
cmp
js
xchg
popf
mov
out
xor
mov
stc
push
loope
mov
dec
repnz
jecxz
dec
adc
adc
or
mov
jo
insl
push
xchg
or
mov
movsb
fbstp
roll
mov
sub
and
sbb
lret
xchg
jecxz
loop
subl
out
and
pop
ds
mov
stos
mov
mov
push
fstl
adc
outsl
dec
adc
ljmp
test
iret
xchg
sub
jle
aas
test
add
xor
and
imul
js
push
jecxz
inc
imul
fisubrl
outsb
xchg
or
jo
test
lods
test
push
cmp
jp
out
into
stos
dec
lods
mov
sub
add
jno
rcll
mov
cmc
fs
out
adc
dec
mov
enter
js
push
das
cmc
lods
and
push
sub
dec
sub
les
insl
sarb
dec
mov
popa
cmp
mov
xlat
ds
aad
aaa
in
mov
insb
dec
sbb
icebp
xchg
fwait
inc
mov
pop
push
mov
pop
call
test
sub
sbb
pop
push
inc
mov
leave
and
scas
pushl
icebp
rcl
insb
jg
std
cmpsb
inc
andb
ds
insb
jne
mov
adc
repnz
iret
fidivs
jg
ficompl
orb
imull
in
scas
out
hlt
mov
jae
dec
sahf
in
popf
jl
sahf
mov
add
dec
out
pusha
sbb
push
testb
or
jne
addr16
adc
fnstenv
jecxz
pushf
iret
shlb
pop
mov
aaa
fs
sbb
jg
lock
lods
mov
dec
in
negb
mov
and
dec
adc
xchg
mov
movsl
dec
stc
mov
cmp
js
jge
or
jb
xchg
sbb
stc
and
test
adc
and
sub
push
sub
mov
jbe
mov
div
sbb
or
data16
sbb
add
dec
fmul
mov
ret
push
ja
in
mov
jmp
hlt
imul
lods
jge
sti
out
xchg
jp
mov
and
inc
cmp
mov
add
scas
subl
mov
mov
rcl
push
mov
ret
or
push
sahf
insl
aaa
repz
mov
jecxz
sbb
insl
sbb
fstl
mov
xor
jns
insl
jbe
hlt
adc
sbb
jne
push
outsb
fucom
mov
lods
lcall
iret
mov
sbb
or
stos
xchg
testl
insb
sbb
cmp
je
fadds
movsb
adc
jbe
mov
fadd
popf
das
not
xchg
jp
arpl
daa
jns
adc
jne
sub
push
xchg
scas
pop
xchg
pop
loop
mov
jno
aas
push
stos
xchg
scas
pop
fwait
loop
decl
adc
sbb
jne
xor
push
lcall
push
andb
xchg
out
inc
das
movsl
lret
adc
popf
int3
decb
or
mulb
push
jg
sub
das
addr16
gs
mov
out
xchg
xchg
inc
xchg
push
and
sbb
insl
in
adc
and
inc
jae
pop
cmpb
dec
fdivrs
mov
cld
pop
imul
inc
in
loop
inc
rorb
ljmp
fistl
xchg
cmp
dec
lds
test
mov
icebp
repz
cmp
aas
decb
aaa
push
imul
xchg
inc
mov
ds
pop
fcmovbe
sbb
pop
mov
out
shll
loope
mov
outsb
sub
cs
cld
xchg
mov
loopne
push
mov
mov
aaa
inc
pop
insl
xchg
je
xchg
test
js
add
frstor
inc
and
cmp
clc
jg
bts
ljmp
sub
add
or
xor
inc
ficoms
add
dec
aaa
dec
popa
xor
movsl
adc
xchg
test
sub
mov
jle
lret
aad
cmc
pop
jno
fnstcw
lds
fisttpl
outsl
rclb
sahf
pop
and
dec
xor
xchg
add
mov
add
mov
daa
xchg
mov
inc
cwtl
repnz
les
jp
sbb
les
push
popa
clc
sub
insb
in
mov
loope
add
insl
shrl
cmp
mov
cli
iret
pop
push
ret
divb
adc
jecxz
mov
xor
cmp
sarl
ret
mov
cmp
jnp
push
add
ljmp
or
or
add
inc
add
dec
cmp
mov
arpl
aaa
mov
mov
arpl
mov
jl
cld
ret
ret
cltd
rol
imul
mov
push
loop
xor
or
enter
pop
and
jbe
shlb
pushf
push
xor
cmc
jge
sbb
aad
xor
cmpsl
jbe
test
push
cli
loope
imul
mov
lds
lds
pop
ss
cmpsl
cmp
in
popf
test
rorl
xor
jnp
xchg
js
mov
xor
push
out
imul
inc
test
div
popl
jno
adc
jns
icebp
adc
in
lcall
or
lods
inc
xchg
fdivl
fisubl
aam
add
and
loopne
xchg
daa
sti
mov
aam
jae
iret
mov
rol
push
ret
fwait
cmp
sbb
and
lods
mov
xchg
sub
test
cwtl
pusha
loop
jle,pt
push
imul
jmp
fimuls
inc
sbb
push
push
ss
mov
sarl
aaa
mov
or
mov
sbb
das
lock
and
xchg
mov
push
jmp
hlt
jecxz
ja
fistpl
jle
mov
dec
pop
aaa
mov
dec
pop
shlb
xor
pushf
sbb
adc
pop
jecxz
std
incl
add
push
or
mov
clc
lea
xor
cmp
insl
icebp
mov
imul
adc
rclb
je
xor
adc
std
sub
jmp
mov
lret
aad
sbb
ret
jns
xchg
push
mov
push
add
jecxz
mov
or
xorb
sbb
jae
add
pop
fiaddl
lea
push
pop
scas
push
movsl
enter
pop
sbb
push
test
push
jo
xorl
into
push
or
aad
xchg
sbb
xchg
and
jl
mov
adc
repz
mov
iret
dec
jns
adc
dec
fidivrs
pusha
in
ja
and
sbb
aaa
mov
adc
mov
jecxz
loope
ds
and
cmpsl
and
mov
xchg
in
in
pop
adc
adc
adc
mov
inc
cs
inc
ret
mov
mov
dec
cwtl
nop
pop
add
mov
cmp
sub
sbb
scas
mov
cwtl
stos
stos
addb
aaa
mov
mov
cmp
or
dec
outsl
in
sbb
push
xchg
dec
ja
xchg
mov
push
xor
inc
inc
lds
insl
inc
fadds
push
pop
xchg
inc
add
adcb
inc
inc
dec
mov
mov
test
icebp
push
insb
xchg
ficomps
push
jmp
aam
std
insl
scas
ret
jae
and
sysenter
into
sar
xchg
out
dec
icebp
sbb
push
stos
add
outsb
fisttpl
pop
arpl
rcll
lea
scas
push
sub
push
adc
sbb
iret
addb
xchg
or
adc
test
daa
sub
sub
nop
lcall
mov
pop
inc
imul
ljmp
jle
cmp
arpl
mov
inc
jge
pop
dec
pop
sbb
pop
hlt
shrb
and
aad
sarl
insb
fwait
sub
pusha
imul
xchg
movmskps
repz
inc
divb
aam
pop
mov
dec
adc
push
ja
mov
fwait
rclb
call
push
add
jge
out
in
push
mov
pusha
xchg
js
jp
sub
sti
loope
scas
imul
lds
and
cmp
lahf
sti
andl
xchg
std
and
cmp
movsl
cmpsl
iret
lds
jecxz,pn
pop
ljmp
mov
sbb
dec
test
or
stc
into
mov
pop
pusha
push
lea
outsl
or
adc
ja
sbb
adc
int
test
or
ret
cmp
aaa
xchg
mov
mov
pop
push
ficompl
repz
mov
inc
jae
sbbb
pop
aas
xchg
dec
test
xchg
mov
or
stos
ljmp
or
inc
sub
pop
mov
ror
mov
rol
jns
ja
push
aaa
push
cmp
fnstsw
dec
lods
or
rorb
test
mov
mov
dec
mov
mov
hlt
lock
mov
xchg
xor
xor
stos
std
test
inc
mov
scas
in
adc
inc
sub
repnz
cmpsl
jl
lret
insl
std
gs
pusha
xchg
popa
pop
stc
aas
cmp
addb
int3
addb
pop
push
pop
cmp
fnsave
pop
lods
xchg
and
mov
xor
scas
enter
cli
repz
outsb
cwtl
mov
push
inc
push
inc
jecxz
fdiv
adcl
xchg
mov
jb
mov
or
jmp
enter
sub
mov
pop
ret
cld
dec
loop
lods
les
inc
lahf
and
sub
es
jl
call
mov
lahf
lahf
mov
ljmp
fs
je
mov
dec
mov
add
and
loopne
test
cmpsb
je
js
clc
mov
sti
lock
lods
lahf
jmp
sti
out
mov
aad
sarl
clc
mov
cltd
in
add
xchg
enter
jno
aaa
push
mov
ja
fildl
xor
clc
mov
jb
xchg
xor
fimuls
jp
lods
xor
and
fwait
xchg
lock
sbb
clc
cmp
or
xchg
cmp
out
in
cltd
test
push
xchg
je
jp
enter
sub
movsl
mov
rol
ret
jmp
outsl
sub
lcall
sub
jl
jae
add
cmpsl
mov
jo
xchg
mov
mov
cmc
push
add
adc
shlb
mov
jle
pop
test
jmp
dec
or
outsl
clc
inc
jo
or
dec
or
xlat
fmull
add
ja
push
jbe
pop
and
push
mov
mov
cld
mov
jmp
pop
int
repz
and
in
pop
arpl
mov
add
pop
inc
jecxz
xchg
fcmovbe
lock
xlat
in
insl
pop
sbb
sar
mov
popf
sbb
jle
xchg
mov
dec
mov
int
ret
and
xor
enter
cmpsl
xor
or
mov
mov
jl
jle
data16
fldenv
mov
mov
add
pop
outsl
xor
xchg
out
lds
cmc
pushf
in
hlt
lock
xchg
jl
xchg
aad
jno
idivl
nop
dec
insb
mov
pop
fists
adc
imul
mov
jmp
lea
hlt
in
or
adc
fnstcw
cli
inc
lds
cmp
add
dec
xor
sub
mov
aas
inc
mov
cmp
mov
pop
sub
imul
jae
std
test
dec
negb
xchg
mov
mov
jns
xor
xchg
pop
call
mov
and
stos
fwait
dec
pop
stc
lods
out
dec
inc
scas
in
xchg
adc
mov
push
sbb
lods
nop
pushw
out
pop
or
in
cmpsl
imul
ljmp
pushf
cmp
xor
or
jge
fcoms
mov
aad
jge
xchg
pop
sbb
sub
aaa
push
cltd
inc
cltd
mov
cmp
sbb
push
cmp
aas
int3
lods
mov
dec
inc
and
cmpsl
hlt
mov
sarb
les
sub
jns
xchg
daa
data16
fisubrl
test
push
test
mov
js
or
sub
sbb
fcompl
push
sbb
insb
lret
pop
sub
and
inc
lock
into
mov
mov
pop
lods
sbb
mov
je
ret
push
and
jns
lock
fiadds
outsl
dec
clc
push
mov
inc
subb
fistpl
lcall
dec
scas
daa
test
ss
test
jo
pop
sbb
ja
and
in
xlat
jmp
andb
cmpsb
xor
sub
or
lock
call
pop
dec
out
xchg
mov
test
bndldx
popl
mov
div
ja
out
or
hlt
ret
loop
sbb
rorb
cmp
jne
pop
cmp
js
dec
aam
push
sub
ret
push
dec
pop
dec
jp
lret
enter
mov
xchg
cmp
fcompl
mov
fstl
movsl
adc
cmp
mov
mov
movsl
ret
mov
ret
dec
adc
pop
mov
xchg
xor
xchg
sbb
push
pushf
dec
jmp
jmp
mov
xor
stc
pop
inc
loope
js
cli
imul
xor
bound
aaa
xchg
push
movsb
sub
cmc
add
movsl
mov
or
pusha
sub
fadd
popf
sbb
push
dec
inc
jl
cmpsb
mov
lods
fsubr
je
xchg
fisttps
push
outsl
fsubrl
push
mov
push
popf
outsb
dec
dec
shlb
negb
xchg
fdivrl
aad
insl
aad
addl
arpl
and
std
fnstsw
inc
incb
lock
mov
adc
mov
adc
aaa
sub
mov
fs
leave
inc
loopne
push
nop
aad
dec
outsl
pop
scas
inc
mov
xor
pop
sub
xchg
mov
pop
pop
add
push
dec
data16
xchg
push
in
cmc
popa
pop
jns
rolb
push
lret
mov
fstpl
int
mov
inc
out
scas
stos
sub
dec
imul
fsubs
add
je
xor
pop
dec
jae
lret
add
vpgatherdq
loop
nop
std
insl
push
insb
mov
sub
or
addb
or
push
in
stos
leave
test
sbb
cltd
std
jne,pt
jg
jle
push
repz
push
mov
jmp
or
lock
ljmp
jnp
subl
popa
sbb
das
xor
adcl
or
out
in
pop
stc
push
sti
arpl
pop
aad
loop
push
jge
pop
adc
push
add
dec
xchg
xor
scas
mov
movsb
or
jne
lods
inc
daa
repz
lods
icebp
push
cmp
pop
pop
and
js
push
ret
mul
popa
push
or
daa
nop
sahf
and
sub
sub
mov
clc
push
and
adc
not
mov
mov
cmp
in
mov
lods
jge
push
ss
mov
frstor
ficompl
inc
xchg
jmp
sub
fcmovne
repnz
lea
fdivrs
ss
iret
or
push
ss
cmc
mov
ret
or
cld
jnp
aaa
sti
insl
push
cmp
push
fnsave
filds
cmp
xor
push
aaa
fnstenv
testl
sbb
pop
iret
and
daa
add
fs
je
adc
add
dec
sub
mov
adc
add
adc
mov
mov
mov
ret
sbb
mov
es
cmovl
xchg
or
loopne
push
lock
jno
add
lods
rorl
popf
mov
jb
add
inc
shlb
adc
nop
outsl
sti
aas
dec
xchg
dec
push
inc
data16
cmp
xchg
adc
je
aam
xor
arpl
incl
cmp
xchg
in
add
ja
dec
gs
test
scas
xchg
idivb
dec
adc
sbb
xor
sbb
std
andb
and
js
in
sbb
inc
fsubrl
outsb
cwtl
jnp
in
mov
sub
popf
pop
hlt
push
xchg
imul
cmp
mov
fidivs
mov
stc
add
pop
dec
test
mov
mov
mov
lcall
xchg
mov
mov
inc
out
or
icebp
addr16
sub
shr
dec
sbb
sub
loop
and
and
push
stos
xor
mov
add
sub
fs
aaa
jno
shrl
jge
push
jmp
jg
or
mov
mov
cmp
push
sbb
jno
xorb
sub
orb
stos
or
jmp
imul
cs
cmpsb
sub
ret
ljmp
ret
lret
pop
mov
mov
stc
aaa
mov
scas
test
mov
mov
jp
push
adc
orb
or
inc
adc
outsl
iret
or
adc
pop
mov
xchg
cltd
cmp
push
and
and
leave
popa
cmp
aaa
call
cmp
loopne
and
and
pop
and
jb
mov
adcb
std
ret
andb
dec
aad
fisttps
mov
shll
or
jb
and
lods
in
pop
and
iret
lcall
lcall
pusha
mov
fs
push
mov
mov
cmpsl
fdivp
loop
pop
push
pushf
mov
lcall
inc
movsb
cmp
xor
mov
inc
inc
xlat
test
stos
inc
jo
sbbl
leave
xor
push
js
subb
loopne
xchg
mov
std
mov
mov
loope
mov
arpl
mov
jg
loope
xchg
mov
xlat
mov
aaa
and
xlat
lods
fiaddl
loope
pop
or
mov
push
xchg
pop
pop
aam
push
adc
lahf
mov
icebp
sbb
stc
cmp
out
dec
scas
cwtl
mov
push
stc
sub
ret
push
sbb
inc
jbe,pn
xchg
sbbb
arpl
leave
pop
pop
ljmp
add
ret
mov
outsl
divl
and
popa
cmpsl
fnstcw
add
mov
ja
lods
push
dec
inc
sti
and
dec
adc
gs
aaa
xor
dec
mov
fnstcw
ja
loop
fcmovnb
pusha
loope
mov
ljmp
xor
cmp
xchg
pop
dec
adc
out
dec
popf
and
pop
mov
push
add
loopne
addr16
push
cmp
or
adc
gs
mov
push
add
repz
xlat
add
mov
imul
jne
adc
push
out
xchg
ficoml
lods
in
xor
or
loope
fsubs
gs
mov
inc
out
loope
outsl
and
dec
test
jbe
cltd
pop
xor
mov
add
dec
cmpsb
mov
shll
mov
mov
xchg
mov
add
jnp
lret
inc
test
ja,pn
bnd
shrl
loop
scas
sub
cwtl
or
fadds
adc
cmp
jnp
adc
xchg
idivl
adc
mov
imul
outsb
mov
les
xchg
jge
fmull
add
xchg
lods
xor
jge
and
and
jl
cmp
fnsave
inc
pop
rorl
mov
jae
popf
mov
scas
filds
sbb
push
push
popa
dec
xchg
aad
sbb
sbb
lcall
add
mov
inc
jnp
and
test
jo
sbb
xchg
fwait
and
add
mov
in
xchg
sahf
lods
or
or
add
mov
mov
cmp
mov
pop
test
leave
in
adcl
xchg
pop
cltd
cltd
push
ficompl
or
daa
xor
mov
stos
enter
mov
mov
arpl
xor
xor
xchg
mov
lds
mov
pusha
dec
andl
pop
and
out
bound
mov
lahf
mov
cmp
mov
pop
add
xchg
in
sbb
dec
rcll
adc
inc
push
test
mov
push
jl
aam
xor
popf
repz
out
shr
push
xor
lods
push
sub
das
insb
pop
push
jmp
mov
enter
jb
sub
sub
xor
jns
mov
lahf
inc
xchg
jno
cld
push
lea
pop
dec
push
mov
mov
mov
or
xor
lahf
add
in
dec
repnz
outsl
idivl
insl
shrb
mov
je
daa
loopne
and
std
loope
adc
xor
add
dec
andb
jb
aad
and
test
ret
imul
movsb
jl
inc
push
popl
pop
push
pop
clc
jge
mov
add
push
sarl
es
test
push
addb
jnp
jae
lcall
in
pop
push
and
push
jge
sub
fldl
xchg
sbb
cmp
fstps
lods
int3
jge
push
pop
lds
out
dec
int3
inc
out
add
data16
aaa
push
cmp
cmp
icebp
mov
ret
push
imul
movsl
dec
cmpsl
rcl
incl
cli
pop
leave
jge
mov
test
inc
sub
lods
cmp
ja
sbb
daa
ja
cmp
mov
lods
push
cli
cld
loopne
ds
lret
imul
add
xor
jg
mov
push
jle
pop
xor
xchg
xchg
imul
mov
adc
stc
and
xchg
movsl
call
cmpsl
jl
clts
inc
dec
add
fbstp
jg
ss
fstl
shrl
xchg
add
loopne
add
jne
add
push
jbe
sbb
sbb
ja
mov
fcmovnu
in
loope
sub
scas
add
lret
push
les
push
and
out
push
sub
mov
push
mov
mov
inc
scas
sbbl
sbb
jmp
xor
pop
cltd
rolb
sbb
jnp
pop
cmpsl
pop
insb
js
es
sub
sarb
and
xchg
push
push
pop
mov
lret
cs
out
mov
int
aam
sti
or
sahf
lock
inc
xlat
add
xchg
and
jnp
iret
lcall
mov
jb
and
mov
mul
cld
cmp
adc
jg
call
cmpsl
je
test
and
jno
mov
mov
inc
daa
addr16
xor
and
pop
cmc
or
push
mov
jo
insl
aam
dec
adc
rcr
mov
nop
mov
nop
push
arpl
adc
add
outsb
loop
mov
jns
sbb
inc
sbb
push
cmp
ja
je
out
xor
lret
iret
jnp
or
jl
push
or
ja
aaa
int
enter
inc
xor
mov
inc
mov
enter
ljmp
or
cmp
push
mov
jae
aam
dec
xor
cmc
sbb
jno,pt
repnz
inc
cli
test
ret
repnz
and
mov
int
or
incl
add
push
fwait
enter
and
inc
stc
sbb
and
or
mov
xchg
into
jecxz
js
push
mov
pop
push
push
cmc
loopne
push
lcall
xchg
push
fimull
mov
and
pop
cmovge
daa
inc
push
cmp
decl
pop
jns
add
test
imul
test
push
jp
sub
clc
push
jns
or
fstl
xchg
adc
ja
rcr
subb
sbb
xorb
jl
push
cmp
pop
test
and
loope
outsb
es
jmp
dec
cmp
xchg
inc
or
add
pop
ret
shlb
cmp
mov
ret
mov
add
aad
cmpsl
dec
ds
in
fwait
mov
repnz
mov
jmp
ficoml
mov
sti
pop
push
cli
jo
test
mov
clc
loop
call
je
push
test
ret
inc
mov
pop
push
xchg
test
lcall
movsb
jne
arpl
stos
mov
mov
push
xchg
dec
out
and
xchg
pop
aam
cs
scas
adc
insb
loop
imul
sti
fistpll
fisubrs
je
leave
cwtl
cmp
mov
adc
xor
cmp
mov
rclb
mov
bound
ljmp
lcall
add
fidivrs
fcoml
push
addl
daa
mov
stos
push
xor
jnp
int3
mov
xchg
lahf
pop
jae
shll
xor
pop
dec
ret
sub
js
xor
push
hlt
xor
arpl
aaa
scas
insb
xor
enter
movsl
ja
lds
test
fwait
or
repz
test
xor
repz
xor
ljmp
sub
dec
gs
cmpsl
cmpsl
fucom
push
in
mov
push
test
jmp
pop
scas
add
test
jne
sub
je
jecxz
jg
jecxz
ret
lea
test
lods
pop
xor
inc
jmp
repz
and
xchg
insb
gs
popf
int
imul
stos
sbb
iret
dec
xchg
fwait
pusha
fs
sahf
cmp
insl
mov
add
jl
mov
pop
ss
jmp
pop
call
dec
lods
sub
rclb
loop
icebp
add
jmp
lods
dec
lock
sub
popf
push
xchg
aam
sbb
jnp
and
xchg
lock
or
ret
sarl
pop
pop
pop
add
xor
xchg
jg
or
push
mov
lret
aam
jo
pop
stc
dec
xchg
cmpsl
xor
lahf
addr16
push
je
lret
and
add
mov
jl
aam
pop
insb
imul
out
xchg
lods
addr16
iret
shll
fisubrs
mov
inc
hlt
loope
ds
daa
ret
idivl
jbe
aas
dec
sbb
adc
jecxz
lods
sub
sbb
adc
fistl
aaa
xchg
xor
dec
in
subl
or
push
jnp
std
ja
mov
mov
out
cmp
in
cmp
mov
or
push
jo
xlat
fiaddl
mov
xchg
loope
mov
jmp
dec
js
dec
cltd
outsb
jbe
mov
aad
and
cmp
nop
test
xchg
pop
push
es
iret
lock
pusha
jge
in
dec
push
es
inc
rcrl
mov
jbe
es
adc
arpl
addb
mulb
mov
jo
and
mov
movsb
inc
sub
dec
push
loop
mov
rcll
rcrl
cld
pop
popf
scas
cmp
cmp
leave
and
aas
pop
stos
fcoms
int
inc
sbb
xlat
xor
mov
pop
cltd
out
sbbl
stc
mov
add
fs
inc
andl
adc
and
mov
pop
test
cmp
fwait
lret
repnz
dec
ljmp
jnp
idivl
fsubrl
int
sub
xor
pop
sarl
stc
cld
push
or
mov
mov
dec
popa
mov
icebp
cmp
jo
aam
xor
cmp
fists
addr16
sti
xor
sbb
pand
pop
dec
push
in
test
xchg
mov
sahf
or
mov
fcomps
pop
sti
ds
adc
dec
jle
mov
ljmp
pop
mov
jo
mov
adc
test
xchg
jns
mov
and
jecxz
xor
jnp
pusha
jns
inc
lcall
adc
outsb
jb
push
mov
sub
jne
push
pop
mov
mov
in
push
int3
testb
dec
xor
scas
cmp
ret
faddl
lret
lret
cwtl
xlat
inc
sub
int
test
jne
imul
mov
jp
push
xor
pop
pushf
call
jge
mov
loope
push
sbb
gs
or
push
cwtl
push
sarl
adc
cmc
inc
sub
cwtl
or
in
loope
pop
fisttpl
fistl
jne
ja
out
cmpsl
ds
add
negb
push
inc
clc
pop
loop
mov
inc
mov
leave
push
inc
xchg
cmp
fwait
jmp
pop
mov
divl
mov
or
movsb
jae
jbe
fmul
sbb
push
cld
in
pop
or
pusha
sub
pusha
mov
mov
push
mov
push
mov
sbb
mov
stos
push
pop
push
stos
jge
sbb
fcomps
or
jns
xor
clc
sti
xchg
pop
or
xor
adc
lock
call
pop
loope
pop
mov
jo
pushf
and
xchg
rorb
and
mov
push
call
scas
lcall
mov
in
mov
xor
or
xlat
fwait
in
rcrb
push
in
dec
mov
ret
add
push
jecxz
sbb
mov
jl
dec
call
fistpll
imul
nop
pop
divl
cmp
dec
pop
xchg
cs
iret
mov
mov
cmp
cmp
pushf
jge
pop
dec
sub
out
mov
jg
mov
aad
in
mov
pop
inc
sub
movsb
push
or
or
js
and
mov
test
mov
pop
enter
xchg
fldl
test
enter
xchg
pop
push
push
addr16
or
mov
dec
aaa
popf
pop
push
add
stos
pop
pop
pop
lahf
mov
push
xor
sbb
lret
xchg
int
add
rol
mov
adc
outsl
loope
loop
add
jns
inc
xor
xor
jecxz
outsb
or
leave
mov
std
les
adc
jno
mov
dec
push
outsb
mov
lods
test
pop
dec
ds
jnp
arpl
sbb
sarl
adc
jmp
lods
fs
dec
in
in
scas
inc
rcll
mov
cmpsb
cld
or
icebp
mov
xchg
xchg
xor
in
je
jne
and
fisttpl
test
into
iret
int
sub
mov
scas
sahf
imul
adcl
push
or
icebp
mov
lret
popf
xchg
enter
imul
enter
pop
xor
aas
mov
push
out
mov
test
push
jmp
repnz
sarl
cmp
dec
mov
push
sarl
xchg
pop
inc
inc
fisubrl
fwait
jecxz
jl
and
mov
cmp
sub
mov
sub
cmp
in
outsl
inc
sub
adc
or
mov
sub
adc
idivl
inc
push
add
loopne
xchg
repz
push
mov
mov
cmp
jg
or
lods
mov
xchg
sbb
push
dec
xchg
mov
pop
xor
call
jge
mov
add
loop
sbb
iret
xor
cld
out
jg
sbb
mov
popa
in
push
xlat
dec
jb
pop
push
mov
test
les
loopne
cmp
cli
clc
imul
daa
sub
mov
sub
inc
push
mov
mov
xchg
or
sbb
popf
push
stos
fidivs
push
cld
mov
in
mov
mov
jp
pop
jno
nop
in
xchg
mov
cmpsb
dec
data16
lea
mov
pop
data16
inc
arpl
mov
and
addr16
repz
addl
inc
xchg
push
push
test
cmpsb
pop
bound
loope
add
aas
jmp
ret
or
fidivl
mov
clc
sbb
ss
add
adc
add
mov
mov
dec
mov
loopne
xchg
or
or
mov
in
push
dec
push
xchg
stos
dec
xor
mov
xor
movsb
stos
aas
cmpsl
cli
mov
pop
add
loopne
mov
cmp
std
adc
dec
inc
sub
sub
js
mov
sbb
adc
test
out
stos
xchg
ret
ja
aad
cwtl
sbb
add
loop
mov
add
mov
dec
push
lret
push
or
xor
mov
mov
dec
int3
add
scas
loope
sahf
cmpsl
popa
sti
inc
adc
and
insl
sbb
into
fdivrp
icebp
cwtl
jno
sub
xor
jg
scas
popa
fsubrl
sbb
xchg
ljmp
and
xchg
aas
movsb
stc
shr
pop
mov
sbb
mov
pop
add
pop
sub
mov
dec
sub
mov
stc
ljmp
jg
shll
or
xchg
jmp
in
xchg
ffree
pop
xchg
js
outsb
fisubrs
movsb
pop
jbe
mov
adc
cmp
xorb
cmpsl
andl
inc
outsl
out
dec
outsb
xor
test
imul
in
add
xlat
aad
sahf
mov
fmuls
pop
add
add
ja
dec
xchg
mov
loope
ja
arpl
pop
adc
loop
jmp
sub
push
mov
mov
mov
jl
add
inc
les
arpl
aaa
sub
push
pop
loope
sub
les
sbb
cld
stos
mov
pop
add
jo
pop
outsb
lcall
sub
aad
loopne
test
pop
xchg
push
mov
cltd
jns
jno
sbb
clc
nop
cmc
aam
xchg
fdivrs
fwait
pop
faddl
in
mov
test
lock
daa
arpl
jae
jo
push
dec
sbb
inc
popf
mov
jg
lds
fsubr
inc
std
lods
outsl
loope
lret
xor
xlat
loop
fstl
jo
xor
arpl
push
imul
cs
aaa
jns
cmpsb
fcoml
sub
icebp
js
out
scas
roll
sbb
into
pop
dec
cmp
xlat
cmp
and
aad
cmp
jecxz
and
xor
cmp
frstor
sub
loop
push
lret
aas
xchg
leave
push
cmpsb
sub
cmpsb
cld
loope
xchg
pop
sbb
insl
lods
stos
loope
mov
test
add
push
enter
movsb
les
dec
test
mov
dec
enter
frstpm(287
divb
lea
ljmp
xchg
push
icebp
lods
cmp
movsl
jns
sub
cmp
xor
adc
je
or
mov
into
lret
add
xor
sti
fst
jae
imul
in
xlat
ja
pop
dec
mov
out
mov
push
in
and
movsb
pusha
andb
push
faddl
cli
imul
jmp
jp
cwtl
xchg
dec
js
push
in
push
and
cmpsb
sub
jmp
push
fucom
push
or
bound
or
lret
leave
jl
test
sub
clc
je
pop
push
cmp
push
xchg
fnsave
fstl
cmp
imul
xchg
addl
dec
push
stc
rolb
sbb
pop
adc
je
movb
pop
int3
adc
inc
ror
stos
mov
cltd
sub
pop
in
push
outsl
lods
sub
ss
mov
push
sub
stc
and
cmp
movsb
popf
dec
push
aaa
insl
dec
cmc
pop
leave
sbb
xlat
mov
pushf
ja
fildl
jecxz
orb
xchg
sbb
ds
jbe
sub
rolb
xchg
arpl
cmp
push
xlat
add
pop
sub
daa
dec
adc
cld
or
aaa
jp
or
cmp
push
xchg
popf
aaa
arpl
lcall
and
call
fwait
xchg
add
into
mov
xchg
aad
movsb
pop
insb
out
ficomps
and
jns
cmp
inc
mov
fucom
push
mov
xchg
bnd
dec
push
pop
pop
leave
push
imul
sarb
add
sbb
dec
dec
shrb
shlb
pop
push
paddd
das
fs
and
imul
stos
cmp
fwait
aad
sub
sub
or
lahf
and
sahf
cld
xchg
fbld
ljmp
negl
popa
cmp
ja
inc
shrb
xchg
cs
push
in
and
xchg
repz
mov
mov
xor
add
mov
push
mov
out
cmp
mov
popf
xor
xchg
or
mov
or
add
lea
jnp
xor
and
ret
pop
cmpsb
cmc
jnp
and
test
push
jbe
aad
xor
pop
push
movsl
mov
enter
mov
cmp
and
xor
int
lds
and
fsts
mov
dec
inc
jmp
push
add
inc
xchg
cwtl
push
mov
lret
pop
js
jae
jno
dec
shlb
pop
jo
push
movsl
int3
jle
js
xor
out
lock
push
dec
lret
inc
xor
fs
push
loopne
and
cmp
fsubrs
dec
js
bound
dec
loopne
mov
mov
mov
add
cmp
mov
cmp
mov
and
in
hlt
data16
aas
xchg
fists
mov
stos
mov
mov
jl
add
push
ja
cltd
pop
movsb
pop
pusha
xchg
xchg
mov
xor
fwait
icebp
mov
pop
jbe
jns
inc
cmpsl
into
mov
enter
das
mov
sub
pushf
dec
push
daa
dec
jge
outsl
divb
nop
std
clc
in
ja
dec
dec
mov
movsl
scas
cld
sbb
sub
sbb
cmp
sub
std
pop
inc
sbb
xchg
shl
or
sub
ficoms
fidivl
xchg
test
inc
pusha
into
mov
popf
and
rorb
inc
jbe
mov
test
inc
or
xor
movsb
loope
or
scas
adc
fwait
insl
pushf
test
repnz
mov
jg
jge
xlat
xlat
cli
mov
or
imulb
xor
sbb
mov
jns
mov
iret
add
inc
sahf
mov
xor
or
lret
fstpl
iret
cs
ja
data16
int
out
addl
mov
sbb
push
andb
mov
inc
cmc
fldl
mov
in
adc
pop
mov
pop
and
dec
lret
cltd
cmp
xor
pop
dec
popa
mov
in
ja
int3
pop
mov
push
adc
ss
mov
xor
or
xchg
std
mov
aaa
jne
xchg
sbb
fstpt
mov
mov
ja
mov
push
out
daa
xchg
enter
loope
mov
cmpl
pop
inc
cmp
into
int3
stos
push
or
jno
xor
pop
cmp
xor
push
or
movb
dec
stos
insl
cmp
dec
jbe
call
pop
inc
sbb
xchg
xchg
es
xor
scas
sbb
mov
addl
shrb
cwtl
test
sbb
test
mov
pop
nop
xlat
push
lea
sub
sti
or
les
lea
fcom
xchg
dec
adc
sub
leave
lret
es
pop
out
push
and
out
popf
xor
sbb
mov
jecxz
les
add
insl
insl
push
and
sub
inc
pop
out
int
in
in
clc
push
outsb
clc
or
mov
xor
ljmp
dec
jmp
inc
and
push
xor
test
movsb
fwait
cmp
pop
pop
mov
imul
jge
or
mov
sub
stc
rcrb
dec
outsl
xor
pop
xor
pusha
stc
fiadds
hlt
lret
jp
popa
scas
adc
push
adc
les
ud0
cli
movsl
adc
cmc
arpl
rclb
mov
sbb
jb
lods
xchg
lock
testl
xchg
add
mov
or
jp
je
enter
pop
xchg
sub
dec
movsl
scas
dec
add
pop
inc
dec
sbb
xor
mov
repnz
fnstsw
cmp
jmp
xlat
test
or
jg
cmp
inc
mov
mov
stos
sbb
dec
inc
xor
or
jnp
loopne
jbe
sub
les
mov
loopne
mov
hlt
adc
lret
rcl
jp
int
push
js
les
loope
repnz
push
data16
out
imul
fisubrl
cmp
fldl
mov
mov
lock
out
mov
pop
in
push
mov
enter
mov
push
notb
clc
lods
pop
mov
arpl
mov
inc
mov
movsl
popf
adc
jo
sub
pop
fbld
mov
mov
lds
test
mov
mov
insb
sbb
loopne
ret
fst
call
mov
mov
sbb
pop
dec
cmp
xchg
inc
and
mov
pusha
out
mov
xlat
jne
inc
dec
inc
cmc
add
dec
cmc
loope
ret
xchg
jmp
cld
pop
sbb
lock
jg
mov
add
dec
jecxz
out
sbb
cmpsl
pop
pop
stos
dec
xorl
lea
or
and
jb
push
and
sbb
fistl
les
stos
xchg
xchg
and
stc
sub
adc
pop
movsl
test
and
jno
xor
mov
mov
sbb
xor
and
or
push
or
add
xor
mov
cmc
test
test
or
cltd
popa
sub
es
mov
dec
sbb
xchg
cmc
loope
add
push
aaa
pop
jmp
push
pop
push
out
icebp
stos
xchg
out
sahf
sub
push
inc
aaa
inc
out
stos
pop
jo
and
icebp
push
xlat
jbe
ds
pop
jmp
push
ja
jl
push
pop
lock
sbb
mov
inc
testl
gs
and
jb
push
inc
mov
imul
pushf
repnz
mov
inc
fisttpll
sub
push
jno
mov
arpl
adc
inc
push
cmp
mov
xchg
out
jb
int
lret
jmp
mov
fdiv
mov
pop
inc
loope
push
out
inc
cmp
add
mov
inc
xchg
or
push
ljmp
orl
xor
adc
lods
ss
scas
dec
cmpsl
cmpsl
mov
cli
in
cli
adc
movl
add
outsb
addl
cld
cmp
scas
xchg
testb
add
dec
xchg
dec
mov
inc
arpl
sti
fisubl
cld
out
mov
pop
pop
ljmp
pop
mov
data16
pop
into
mov
cmp
jle
cmp
paddq
fistps
ret
push
out
loope
or
outsl
mov
jne
ret
stos
sbb
aaa
jp
dec
stc
pop
fs
jae
sti
and
inc
cwtl
popf
adc
push
ret
popf
xchg
adc
popa
xchg
push
repz
movsl
inc
add
shlb
cld
jno
pop
xor
mov
push
cmp
lret
jo
fsts
mov
movsl
loope
mov
iret
xor
repnz
mov
jae
cmp
data16
outsl
add
add
push
mov
in
xchg
cmpl
lds
cli
icebp
cmp
ret
leave
xor
push
jns
xchg
dec
pop
push
inc
bound
push
jns
nop
inc
in
sbb
cmp
cs
shrl
mov
cltd
mov
push
mov
bound
not
cmpl
dec
jmp
popf
std
stc
mov
or
or
ljmp
xchg
ds
shll
sahf
out
xchg
test
inc
ss
mov
mov
and
call
popa
push
sbb
fstpl
ljmp
push
iret
sbb
ret
push
lcall
cmpsb
push
aad
sbb
inc
sub
in
stos
sbb
lret
jl
mov
ljmp
jnp
ss
loop
nop
sahf
pop
mov
mov
fcmovbe
test
xor
iret
rcll
fcoms
xchg
mov
pushf
jg
mov
add
out
sti
jnp
fiaddl
inc
shll
and
add
sbb
jmp
lcall
xchg
dec
jns
add
in
mov
stc
icebp
sbb
mov
ds
xor
pusha
adc
mov
push
mov
jp
cltd
mov
enter
into
or
stos
je
movsb
pop
add
mov
xchg
cmp
mov
mov
sbb
sbb
xchg
inc
add
mov
sbb
test
push
add
lahf
inc
in
in
mov
movsb
xchg
and
int3
mov
jecxz
dec
orb
add
loop
outsl
ljmp
sbb
jbe
pushf
jmp
lods
or
pop
fisubl
mov
sahf
fs
das
in
cmp
clc
sbb
xchg
pop
xchg
jl
sti
cmp
xchg
ficoml
test
lods
movsb
fucomp
fcmovnu
mov
xchg
pusha
mov
shl
int3
or
push
lea
sbb
js
push
jns
int3
xchg
sbb
shll
mov
pop
std
aas
pop
dec
jb
mov
ret
insl
subl
testl
dec
cli
pop
pop
fsubs
dec
daa
mov
add
cmc
arpl
lods
popf
mov
mov
cmpl
sti
sti
out
mov
mov
ret
sbb
jno
dec
pop
mov
add
out
or
jg
cmpsb
outsb
jecxz
pop
incb
mov
push
cli
jg
pop
ss
into
in
add
lcall
jne
mov
loopne
cmpl
lods
out
scas
xchg
stos
mov
and
xchg
inc
or
dec
sub
leave
inc
xor
pop
rorb
push
jno
xchg
lds
jne
data16
jecxz
insb
dec
out
cmp
fisubrl
int
out
sbb
es
xchg
iret
aam
mov
cltd
rcrl
cwtl
mov
loope
bound
mov
sub
mov
hlt
mov
push
mov
scas
xorb
inc
mov
call
dec
sar
xor
pop
les
iret
repz
xchg
xchg
pop
push
jbe
cmpsl
cltd
scas
clc
add
arpl
ret
je
pop
xchg
out
and
push
insb
dec
jno
int3
pop
pop
sbb
test
test
aad
cmp
sbb
bound
aas
cmp
xor
push
or
jle
fcmovb
mov
out
stos
xor
bound
inc
or
add
fdivs
xchg
out
push
cmp
and
mov
in
pop
ss
inc
fs
repz
in
inc
pop
dec
push
add
icebp
add
mov
pop
xor
pushf
int
aad
imull
pop
dec
inc
mov
test
pop
cs
jo
xchg
in
or
pop
dec
push
push
lret
adc
or
inc
sub
sbb
mov
inc
aad
push
mov
clc
hlt
lahf
stos
mov
push
cli
ret
mov
cmp
clc
je
add
ss
roll
adc
cmpsb
out
fcmovne
sete
imul
movsb
stc
andb
icebp
cli
jle
sbb
rcrl
sbb
xorl
or
jp
movsl
or
xchg
ss
fcomps
hlt
loopne
and
adc
mov
mov
push
push
inc
jp
out
xor
lret
repnz
jl
aad
fwait
clc
jbe
pop
lock
pop
and
lea
icebp
xchg
imul
adc
sti
push
push
mov
push
dec
mov
cli
dec
ret
je
shrb
mov
mov
push
ljmp
jne
int3
lcall
mov
in
inc
mov
xor
ja
xor
rcrb
dec
aam
movlhps
xchg
pop
push
inc
int
sub
xchg
leave
jne
pop
pop
cmp
orl
add
lret
mov
gs
pop
out
insb
push
addr16
mov
imul
xor
xchg
in
pop
out
cs
ficompl
outsl
jecxz
ror
or
and
in
nop
and
out
lds
js
xor
jecxz
adc
jns
shrb
scas
je
outsb
xchg
nop
push
dec
movsl
push
pop
pushf
push
xor
notb
jno
ficoms
cs
call
cmp
sub
fcomps
push
outsb
daa
ret
int
int3
sahf
dec
jl
test
aam
pop
sahf
adc
push
rorl
or
test
fidivs
aas
jne
dec
int3
sbb
stc
inc
push
sub
ljmp
shr
hlt
mov
mov
and
sahf
ror
mov
xchg
mov
les
inc
cltd
adc
sbb
pop
xlat
add
mov
aas
cmp
shl
decl
ja
sbb
xchg
popf
or
lret
bnd
lds
sbbl
dec
xor
cmp
mov
std
push
mov
mov
imul
cmpl
lret
loop
mov
jb
int
cmpb
xor
notb
arpl
imul
xor
push
test
jne
aas
xor
les
adc
leave
dec
pop
popf
mov
cmpsb
mov
jb
pushf
inc
mov
pop
jmp
dec
mov
mov
fiadds
xchg
scas
imul
lock
out
xchg
cmpsl
in
mov
fisttps
pusha
out
mov
cmp
mov
mov
insl
or
outsl
aam
imul
hlt
adc
daa
hlt
sbb
mov
out
mov
mov
sbb
jge
imul
mov
xlat
cmpsb
sti
dec
and
mov
cmp
orl
push
sub
mov
sbb
sti
fwait
daa
stos
push
cmp
inc
flds
add
js
fcompl
insl
push
sarl
pusha
xchg
pop
xchg
mov
aaa
loopne
mov
pop
or
sbb
out
push
in
in
mov
out
jbe
mov
clc
dec
jne
push
xchg
cmp
lds
pop
pop
adc
shll
inc
xchg
nop
adcl
fstpl
jo
outsl
pop
xor
fs
inc
les
sar
mov
xor
fsubrp
loope
fs
pop
cli
sbb
leave
movsb
mov
nop
mov
and
mov
adc
jo
fwait
popa
push
xor
adc
cmp
mov
dec
mov
inc
negl
xchg
icebp
cmpsb
cmp
in
into
stos
add
subb
xchg
mov
push
dec
adc
insb
mov
inc
push
int
icebp
pop
mov
mov
out
adc
out
adc
dec
lret
pop
cltd
cmpsb
xor
inc
dec
call
mov
adcl
push
adc
stos
cmp
jns
aaa
mov
jmp
out
orl
fisttpll
lock
icebp
lea
into
dec
test
inc
test
cwtl
incl
cmp
cltd
pop
lcall
frstor
xor
aaa
mov
leave
inc
jmp
and
lea
xchg
popa
bound
jne
or
lds
scas
push
jo
push
in
inc
bound
pop
loopne
je
xor
fldenv
lods
imul
inc
test
and
aad
sahf
loope
mov
shll
lods
movsl
movb
push
fsubrl
xchg
cs
int3
repnz
sbb
hlt
sub
movsb
adcb
sub
inc
stos
shlb
add
xchg
loop
popf
movsb
ss
push
orl
inc
xor
jg
mov
sub
fs
and
aad
pop
and
ljmp
sub
mov
xor
fcoml
inc
jno
xor
inc
inc
pusha
sub
lahf
and
pop
xor
pop
mov
inc
cmpsl
mov
xor
lock
sahf
jg
lock
push
cmpsl
lock
adc
js
insl
clc
and
pop
jmp
rolb
jecxz
mov
das
rorb
ljmp
dec
mov
fidivrs
pop
mov
scas
movl
add
lds
dec
in
shll
inc
push
inc
lds
jbe
jae
ds
stc
lret
movd
sbb
jne
sub
shll
inc
call
jbe
mov
addb
jp
dec
or
loope
xor
lea
ret
mov
popa
xchg
mov
xchg
ja
sub
add
les
dec
pop
int3
lods
push
sub
pop
cmp
push
fidivs
fwait
or
call
in
loope
fdivrp
xor
dec
pop
xchg
xchg
mov
test
sbb
adc
in
xlat
xor
xchg
stc
sbb
mov
into
rcll
jne
and
out
mov
notb
inc
out
imul
test
jbe
mov
or
pop
cld
shlb
push
movsb
or
leave
xor
lock
js
xchg
out
test
pop
rorb
call
adc
call
mov
xor
clc
push
cmp
push
dec
sbb
and
in
test
stos
call
lds
add
inc
sub
idivb
jmp
lret
popf
push
adc
xor
sti
push
inc
pmuludq
lret
cltd
in
sti
xchg
mov
mov
cltd
sbb
sub
mov
stos
mov
dec
jge
enter
imul
scas
insl
push
test
sbb
shlb
cmp
ja
pushf
int3
inc
dec
sarb
cld
sbb
insb
or
fldl
and
shrb
cmp
cmp
es
cli
pushl
mov
push
mov
adc
les
dec
xchg
cmp
ss
pop
mov
dec
dec
pop
push
addr16
cmp
ret
pop
sub
lds
fstpt
es
loopne
push
lods
dec
loop
and
ds
les
or
jmp
dec
in
shll
sbb
sarl
insl
lcall
ffreep
mov
or
mov
divl
add
jle
sbb
mov
cltd
insl
pop
push
mov
aas
shlb
mov
pop
or
fldl
cmp
mov
push
mov
jge
and
cmc
jl
push
test
ss
icebp
bound
xor
fdivl
push
es
aam
inc
push
push
in
cwtl
stos
or
int3
hlt
adc
jp
pop
adc
std
adc
out
faddl
push
filds
pushf
mov
hlt
and
push
ljmp
jne
pop
popf
std
repz
fisubs
and
dec
jne
push
inc
mov
lock
pop
enter
mov
mov
jmp
adc
in
mov
or
xor
xchg
arpl
and
in
add
ss
cwtl
pusha
aaa
mov
cmp
inc
jbe
add
stos
pop
inc
adc
or
xchg
aaa
fdiv
lea
dec
cmpsb
mov
daa
add
cmpsb
sahf
adc
pop
push
sarb
xchg
fidivl
sbb
lret
pusha
xor
adc
scas
clc
xchg
adc
and
sbbl
or
jl
stos
lods
push
sub
lcall
data16
ja
lret
adc
mov
mov
enter
ss
fwait
into
lods
adc
arpl
push
testb
movsb
repz
sub
mov
arpl
pop
xor
and
imul
addr16
in
adc
mov
pop
lods
jge
and
mov
inc
fmuls
lock
iret
mov
std
scas
cmp
movsl
imul
je
sbb
leave
cmpsb
push
test
inc
lret
cmpsb
lock
inc
out
sbb
and
out
cmpsl
jg
xor
das
outsb
sbb
sahf
adc
cmp
mov
lcall
and
push
push
pop
not
fistpl
mov
cmpsb
push
repz
jg
jno
xor
loopne
sub
into
out
jb
push
ja
pop
mov
sbb
lock
sbb
movsb
jge
mov
pop
mov
pop
xor
cli
aam
ss
cwtl
adc
add
out
cmp
jnp
cmp
rol
pop
cmp
adcb
mov
mov
sub
ja
in
pop
fisttpll
loopne
push
aas
ret
scas
movsl
jae
push
sub
hlt
add
jns
movsb
ret
dec
repz
jecxz
movsl
in
inc
sub
sub
mov
sbb
push
sub
xor
inc
pop
gs
fsubr
cli
loopne
mull
sbb
ljmp
jl
pop
push
je
inc
add
pop
or
outsb
fsub
pop
jo
mov
iret
dec
lret
psubsw
jb
jno
push
les
rep
add
mov
mov
loopne
test
lret
dec
in
mov
repnz
pop
movsl
fldl
pop
xor
sub
or
mov
xchg
lret
stos
xchg
or
pop
jmp
or
mov
mov
pushf
jmp
loop
inc
das
jl
and
out
cld
out
pop
jle
mov
out
adc
mov
in
in
sbb
inc
sub
nop
fwait
mov
out
push
lahf
mov
cld
mov
sub
dec
pop
jmp
cmpsb
mov
das
push
into
dec
repz
aaa
loope
mov
shlb
and
cs
push
imul
dec
scas
inc
xor
mov
sub
push
popf
sbb
loope
inc
add
xchg
push
enter
shll
imul
insb
pop
div
jl
pusha
add
insl
push
sub
or
rorl
or
dec
xor
mov
repnz
aad
xchg
sti
insl
mov
sarl
je
mov
pop
in
jle
popa
pop
fistpl
dec
popa
scas
insb
jecxz
ret
test
jns
arpl
mov
ljmp
int3
push
inc
das
xchg
pop
mov
adc
insb
shr
fdivrs
and
sti
cmp
mov
xchg
dec
or
lock
insl
lahf
popf
inc
insb
sub
dec
jecxz
shlb
xlat
push
scas
jge
in
addr16
push
stc
mov
cmp
fisttpll
xchg
push
test
shrb
loope
std
mov
movsb
daa
lcall
mov
jno,pn
jl
or
mov
mov
aad
cmpsb
in
repnz
std
push
adc
lahf
sahf
lret
addl
pop
mov
or
daa
xor
js
xor
clc
arpl
and
xor
lods
mov
fistps
push
inc
pop
divb
ja
pop
ficomps
imul
pop
sahf
pop
and
lahf
adc
or
mov
scas
rclb
cld
iret
fs
pop
inc
sbb
adc
jl
or
adc
inc
stc
add
sti
mov
sahf
or
dec
in
or
js
push
pusha
les
cmpl
cwtl
cmc
inc
test
mov
sar
ficomps
xor
dec
fldt
pushf
xchg
cmp
sub
push
or
sbb
pop
call
mov
push
sbb
arpl
adc
pop
adc
repnz
imulb
mov
ret
sub
pop
repz
mov
pop
push
fwait
mov
shl
int
cmp
jle
inc
adc
fwait
sti
jge
test
jns
mov
mov
dec
stos
jae
cmp
xchg
add
and
movsb
lret
out
sub
jbe
inc
cmp
sub
cwtd
mov
xchg
lcall
in
jb
and
stos
sbb
mov
adc
jmp
mov
mov
bound
xchg
dec
push
push
cmpl
bound
cli
pop
out
jno
lock
or
inc
sub
jmp
add
movsl
and
dec
cmc
test
leave
cmp
push
fsubl
fmull
rcl
jae
cmc
inc
cld
mov
adc
xchg
dec
loope
daa
movsb
fldenv
fs
clc
add
jb
lock
inc
movsl
jmp
fimull
fidivl
cmp
bnd
and
or
into
das
mov
sub
xor
dec
add
xchg
stos
jne
and
sbb
fstl
jns
adc
cld
or
sub
aam
xchg
xor
pusha
inc
push
or
dec
and
push
pop
sub
and
mov
addb
int3
jae
sub
mov
and
push
dec
xor
xchg
push
fistps
mov
mov
mov
jmp
int
push
lea
lret
inc
sbb
push
nop
mov
mov
test
or
rcr
sub
cmp
xchg
out
daa
adc
daa
or
pop
and
bound
sbb
xchg
jnp
test
faddl
mov
lret
repz
in
popf
jb
inc
push
inc
mov
shrb
outsl
mov
jmp
data16
mov
cmp
jle
das
inc
dec
lods
sbb
fcmovne
dec
mov
popf
mov
fbld
adc
fstp
jl
add
stc
mov
inc
mov
pop
addr16
shlb
pop
adc
mov
hlt
rcll
sbb
sbb
adc
pop
dec
fnstsw
jmp
jnp
mov
scas
push
aaa
ud0
pop
mov
cmp
inc
dec
popa
xchg
pop
iret
sub
pop
ja
hlt
pop
push
sti
sub
push
cmp
push
add
sbb
or
or
dec
or
addr16
popf
dec
dec
hlt
bound
cmc
cmpsb
dec
js
test
loop
push
cmp
jl
push
test
dec
or
sbb
test
dec
dec
les
fcmovnb
ss
addr16
dec
or
push
cmc
aad
out
into
leave
jne
and
ja
sub
lea
cmp
xor
fs
mov
cwtl
push
mov
out
xchg
pop
jno
ljmp
push
add
out
stos
rorl
cmpsl
sarl
mov
jle
xor
cmp
popa
push
fists
icebp
outsl
mov
test
xchg
and
call
push
iret
jmp
and
jmp
and
xor
fnstsw
adc
dec
add
loopne
out
jle
negl
cltd
mov
inc
ss
fmuls
or
fimull
xchg
jmp
cmp
lcall
push
add
insl
inc
loopne,pn
jnp
or
pop
in
sti
callw
lods
push
je
loopne
push
xchg
iret
test
mov
imul
divl
clc
loopne
imul
fnsave
loope
mov
vmwrite
and
push
pop
inc
jb
mov
mov
jmp
push
mov
push
aas
or
int3
jae
aad
pop
push
outsl
out
cmp
mov
mov
mov
mov
icebp
xchg
push
push
push
imul
mov
aad
jg
mov
in
in
movsb
pop
xor
jno
fnstenv
outsb
idivb
push
das
mov
testb
mov
mov
xchg
xor
pop
fnstenv
outsl
mov
iret
lret
mov
dec
aam
mov
jp
sub
inc
mov
mov
adc
cmp
jne
stos
xor
ficompl
or
mov
lock
sub
xor
mov
inc
sahf
lods
in
das
out
shrb
add
and
mov
mov
stos
stos
dec
jp
mov
in
movb
popa
add
jbe
imul
push
add
mov
repz
mov
cmp
inc
daa
push
jbe
sbb
xlat
xchg
hlt
sbbb
cmpsl
lock
lret
add
inc
cmp
aaa
repnz
lds
sbb
ret
jae
adc
pop
push
mov
pop
adc
outsb
xchg
into
jecxz
mov
mov
inc
call
adc
mov
mov
mov
mov
into
lock
inc
mov
pusha
ret
dec
inc
or
movsl
shr
jns
data16
cmpb
push
and
mov
mov
dec
out
pop
enter
mov
lret
and
clc
mov
dec
dec
add
into
imul
inc
push
sub
loope
lods
xchg
pop
jno
adc
jb
xor
xor
push
popf
adc
inc
dec
and
fldenv
arpl
push
or
test
sbb
and
and
adc
outsb
lahf
or
or
leave
push
sbb
lods
inc
add
lock
testl
int3
xchg
out
inc
cld
inc
incl
lods
addb
gs
adc
cmp
imul
inc
je
push
subl
out
inc
cmp
iret
cmc
pop
in
gs
and
fdivr
xchg
stos
push
popa
mov
push
adc
push
jecxz
add
or
outsl
out
in
xor
punpckhbw
add
insb
cltd
xor
mov
ljmp
fimull
jo
mov
add
dec
filds
shll
ja
movsl
sub
mov
negb
mov
dec
add
cmpsl
ljmp
punpcklwd
fmull
test
xor
icebp
push
psubusw
and
nop
sbb
subb
and
pop
mov
in
mov
fisttpl
in
add
mov
adc
add
jo
cmp
pop
dec
cmpsl
or
dec
adc
fnstsw
icebp
into
call
pusha
in
stos
outsl
lahf
loop
mov
sub
mov
push
test
lods
xchg
pop
movsl
sbb
outsb
sti
cmp
xchg
mov
lahf
enter
cmc
jno
arpl
dec
rorl
mov
mov
xchg
shrb
xor
out
test
cwtl
test
or
pop
xchg
cld
pop
and
mov
lods
inc
inc
jge
aas
cmp
push
mov
lods
test
push
dec
scas
pop
xor
jmp
les
dec
jb
fwait
imul
add
jne
xchg
jno
mov
or
push
xchg
fnstcw
inc
jns
ljmp
out
repnz
adc
and
icebp
enter
xchg
add
das
pop
cmp
lods
or
push
mov
enter
leave
into
ret
icebp
in
jns
and
repnz
jp
push
repnz
shrl
cmp
adc
outsl
xchg
sahf
dec
ljmp
mov
fbld
outsb
cmp
cmp
mov
xchg
jb
movsb
mov
mov
mov
push
insl
fists
lock
ljmp
cmpsb
andb
adc
dec
das
xchg
dec
outsl
stos
xor
and
mov
out
mov
pshufw
test
xchg
lods
pop
cmc
shll
cmc
dec
pop
mov
dec
inc
mov
cmp
push
adc
sub
int
mov
dec
or
in
sub
loope
stc
adc
mov
pusha
into
mov
data16
xchg
jp
push
push
fstpt
or
sbb
inc
mov
std
push
mov
in
cmpsl
add
outsl
in
lcall
ror
mov
out
rcll
mov
xchg
inc
lcall
adc
lods
pop
xchg
dec
scas
dec
add
pop
cmp
pop
cmp
pop
jp
pop
lods
mov
mov
adc
push
push
or
jl
pop
in
arpl
lcall
xchg
clc
xor
aas
sbb
cwtl
sbb
sbbl
div
sbb
pusha
inc
mov
sarl
gs
je
mov
outsb
shlb
out
stos
dec
aam
xchg
push
pop
and
inc
mov
fs
fsubrl
pop
sbb
inc
test
push
ss
push
xchg
sarl
xor
xor
les
test
mov
push
pop
push
insb
loop
lcall
loop
test
std
push
shl
inc
sahf
cmp
out
mov
outsl
enter
mov
mov
or
hlt
jo
das
je
mov
ss
xor
cltd
out
sbb
xchg
jno
push
into
fnstcw
or
lds
mov
xchg
mov
add
lods
xor
movsl
cmp
pop
movsb
xor
sub
cmp
into
jo
lods
repnz
add
mov
loopne
pop
ljmp
clc
jl
sbb
push
mov
loopne
outsb
pop
shll
icebp
fstpl
or
ret
jle
sub
sti
pusha
cmp
inc
and
xchg
pop
cltd
notb
adc
test
xchg
adc
xchg
icebp
dec
shll
pop
hlt
repnz
mov
jp
ds
ds
lds
push
push
inc
roll
aad
cmpsl
fptan
outsl
test
adc
sbb
in
pop
fsubl
das
data16
outsl
mov
lods
mov
cmp
call
mov
mov
ljmp
rol
fnstenv
outsb
dec
jecxz
dec
cmp
push
mov
dec
neg
sbb
repz
pop
add
clc
jecxz
xlat
push
cli
jg
lea
cld
hlt
cs
je
or
rcl
shrl
xor
mov
test
aad
shlb
ret
bound
cmp
add
xchg
insb
out
mov
leave
sub
xor
push
fidivl
fwait
jns
jne
pop
jle
popf
mov
roll
cwtl
mov
or
xchg
out
filds
out
push
cs
cmp
push
add
cmp
pop
scas
sahf
ja
push
scas
dec
cltd
sbb
bound
shll
sbb
es
jns
iret
dec
or
fldcw
jecxz
or
adc
outsb
sub
shl
into
jo
xcrypt-ctr
cmpsl
pop
popa
sub
mov
fs
ja
loop
iret
pop
push
imul
push
jnp
data16
sti
push
pop
call
int
sub
lock
dec
outsl
xchg
or
shlb
aam
mov
clc
test
jne
popa
jnp
popf
sahf
daa
andl
adc
scas
adc
xchg
ret
pop
xor
add
push
mov
fcmovnb
adc
iret
mov
mov
push
mov
dec
jge
xlat
cmp
or
sbb
out
sbb
dec
inc
push
dec
int
or
cld
xchg
sbb
mov
add
loopne
inc
add
push
stc
xchg
fs
mov
lea
and
loop
mov
xor
push
adcb
je
ljmp
cmp
sbbb
sbb
nop
push
inc
mov
std
push
mov
push
mov
std
mov
mov
push
xchg
mov
sbb
lods
js
pop
dec
xchg
mov
cmp
mov
sbb
dec
das
xchg
repnz
jecxz
in
ds
cmp
add
test
orl
cwtl
in
scas
out
mov
mov
nop
icebp
inc
xchg
out
mov
outsb
jmp
jle
adcb
mov
int
ficoml
and
xor
ljmp
imul
arpl
xor
add
mov
call
ja
sub
dec
lods
jp
cmp
lahf
out
jg
and
pop
mov
orw
sti
jmp
repnz
ret
stos
aas
inc
lea
lret
push
or
cmc
pop
popf
call
inc
shl
push
push
sub
in
mov
jnp
push
mov
roll
lcall
jb
ja
ja
jmp
outsl
push
adcb
shl
sti
adc
lret
adc
data16
lods
std
adc
fidivrl
add
hlt
scas
lock
xor
out
cwtl
mov
out
fists
and
xchg
in
sub
int3
push
pop
iret
mov
fists
sahf
and
sbb
dec
jae
add
or
sbb
mov
add
jge
stc
jge
roll
fimuls
xchg
mov
xchg
int3
and
push
test
xchg
pop
xor
ror
adc
add
clc
scas
cld
scas
test
dec
mov
outsl
dec
fwait
jge
sbb
push
xlat
add
into
into
mov
ret
data16
mov
jno
sub
sbb
dec
iret
mov
xchg
ja
sub
push
xor
jne
adc
test
ja
xchg
push
ret
in
sbb
ja
xor
pop
aam
loop
xchg
push
dec
into
inc
daa
test
roll
push
addr16
mov
scas
fs
test
out
jl
sub
je
leave
xlat
je
int
icebp
cmc
mov
in
ljmp
xchg
aas
inc
jp
aad
pop
push
sbb
movsb
mov
daa
mov
push
sub
stos
xor
shr
mov
xchg
call
pop
int3
js
sub
xor
incb
jle
adc
test
loopne
add
ljmp
imul
cli
rolb
js
pop
pushf
dec
add
imul
xor
push
fldcw
arpl
adc
lods
sbb
pushf
jecxz
add
mov
sub
imul
vmovhps
xor
adc
gs
push
gs
fistpll
sub
sbb
jmp
pop
lcall
adcb
adc
pop
add
dec
xchg
xchg
mov
cld
ja
pop
add
mov
xchg
pop
shll
mov
filds
push
jb
xchg
xlat
lods
faddl
adc
mov
out
sub
fidivrs
pop
xor
loop
repz
dec
xor
cld
xchg
inc
mov
test
std
hlt
arpl
or
mov
cli
or
icebp
jae
fstpl
mov
xlat
mov
mov
pop
stos
push
lcall
jnp
cmpsb
into
rcl
mov
fstl
aaa
ret
and
mov
ret
inc
xchg
push
shll
cmp
aas
and
orb
sbb
pop
jmp
adc
push
adc
loope
jmp
in
sbb
jno
std
mov
outsl
push
enter
sbb
pop
add
aad
loopne
adc
js
jp
mov
mov
or
dec
xchg
stc
cmpsb
stos
lcallw
lods
bound
fwait
into
xchg
mov
fidivs
aas
mov
sub
xchg
dec
test
xchg
out
hlt
dec
jne
dec
or
mov
inc
sub
add
xchg
data16
ss
pop
push
push
ds
pop
mov
mov
sub
filds
adc
adc
mov
mov
mov
leave
jb
jae
rolb
fwait
es
cltd
pop
pop
sbb
pop
jbe
xchg
fmuls
fisttps
push
add
les
xchg
data16
into
pop
cmp
cmp
sbb
sti
dec
shll
push
pop
push
mov
es
jp
mov
cs
mov
fbld
lods
daa
xor
add
pop
call
inc
subb
aad
push
pop
ss
lcall
cmc
jg
mov
jge
dec
xchg
ret
push
push
xlat
adcb
icebp
stos
cmp
cmp
in
dec
push
arpl
cmpsb
jmp
lea
jae
and
clc
push
adc
sub
movsb
or
in
in
xor
cmp
rolb
xchg
loopne
mov
fs
adc
sub
sub
pop
out
ljmp
divb
xchg
cwtl
add
push
push
and
lcall
fwait
popa
inc
mov
lods
inc
add
pop
jae
les
test
loope
add
mov
fsubr
inc
inc
xchg
loop
mov
fstpt
rorb
add
std
push
arpl
jnp
fwait
sub
sub
mov
pop
stc
xor
xor
sbb
addr16
push
lock
mov
outsl
outsl
lea
scas
xor
jne
je
dec
jo
sahf
pop
mov
and
bound
std
pushf
xchg
repnz
pop
mov
enter
mov
jmp
adc
jae
or
call
cmpsb
sub
mov
int
pop
jle
xchg
in
or
loope
addr16
or
in
popa
js
push
into
inc
mov
adc
pop
je
xor
sub
jmp
cmp
sbb
xor
mov
cmp
out
incl
repz
or
xor
fdivrl
mov
jge
and
iret
gs
xchg
mov
sub
mov
inc
and
cwtl
xchg
fiadds
jns
lods
ret
mov
inc
cwtl
pop
or
mov
lcall
pop
mov
dec
or
stos
inc
cs
add
popf
jmp
sbb
jecxz
push
int
add
add
cmp
lcall
xor
gs
in
and
fimuls
pop
mov
pop
jae
cmc
cld
in
icebp
push
aas
xchg
push
or
and
jmp
mov
bound
cld
sub
in
xchg
mov
cmp
jae
mov
mov
push
add
add
mov
fdivs
out
outsb
or
xor
movsb
fcoms
lret
push
push
clc
fs
pop
dec
sbb
insl
push
gs
sbb
sbb
loop
dec
mov
inc
out
cmpb
das
cli
fbld
ss
fdivrs
aam
adc
xor
mov
lea
cld
mov
jnp
mov
incb
sbb
insb
jmp
stos
push
rcr
cs
nop
and
and
and
adc
fdiv
jo
jp
sbb
sahf
add
cltd
out
ljmp
leave
jecxz
jno
xchg
iret
cmpsb
push
pop
js
push
mov
lahf
loope
hlt
mov
mov
pop
repz
and
mov
dec
push
cwtl
xchg
int3
out
xchg
repz
rcl
sub
jb
in
imul
add
jb
push
das
xrelease
or
mov
fwait
add
and
mov
xchg
iret
je
xchg
and
push
jae
cmc
mov
add
sbb
mov
nop
cwtl
outsb
fldz
pop
mov
addr16
dec
cmp
fmull
insl
out
rorb
xchg
sbb
pop
pop
cli
test
leave
adc
stc
pop
mov
mov
mov
cmp
mov
fcompl
arpl
pusha
cltd
and
scas
bound
scas
jnp
addb
jp
push
movsb
or
sti
sbb
out
out
and
addr16
mov
lods
cmpb
pop
loope
lahf
pop
enter
iret
sahf
cmpsb
sbb
mov
push
daa
jg
and
fistpll
shl
jl
test
cmp
bound
sub
es
or
pop
push
dec
add
xchg
lret
mov
movsl
in
repz
pusha
jno
lea
jbe
mov
sub
mov
sbb
stc
lret
fwait
dec
lods
mov
jns
iret
pop
imul
pop
sti
popf
sahf
jne
outsb
or
cmpsb
lcall
aam
dec
add
dec
mov
rol
adc
lea
push
icebp
push
nop
popf
mull
sbb
push
xchg
jl
js
jle
cmp
dec
sbb
and
inc
in
mov
push
hlt
xchg
ljmp
sub
fnstsw
movsl
jbe
push
mov
or
xchg
rcll
stos
adc
or
push
mov
or
js
xchg
int3
lods
mov
ljmp
pop
jne
sbb
leave
and
adc
dec
cwtl
cmp
pop
xchg
shl
xor
in
mov
or
xchg
mov
xor
adc
enter
inc
std
xor
scas
or
jp
out
mov
lcall
jp
push
push
out
dec
repz
loop
mov
imul
repnz
mov
mov
pop
insl
ds
int
aam
jno
jmp
or
out
mov
repnz
cmp
cmp
mov
push
icebp
mov
pop
pushf
imul
add
push
popf
lret
mov
sbb
sbb
push
lock
adc
fists
mov
push
cmp
pop
gs
iret
dec
outsl
mov
xor
repz
add
out
in
out
repnz
xchg
popf
or
repz
sub
out
sub
mov
push
sub
xlat
inc
mov
scas
sbb
push
sbb
or
jmp
icebp
cmp
std
enter
lret
cli
push
mov
aam
mov
pop
adc
lds
push
fstl
add
push
or
out
dec
outsl
jns
mov
sbb
popf
popf
dec
adc
mov
mov
mov
push
mov
push
shlb
shll
mov
xchg
add
arpl
push
dec
jae
mov
int
sbb
in
pop
inc
es
pop
mov
or
adc
pop
sub
pop
xchg
xor
or
dec
mov
and
sbb
push
xorb
dec
jge
mov
aad
test
stos
add
cmp
bswap
rorl
and
add
inc
xchg
fs
push
mov
roll
sbb
bound
test
xor
daa
in
gs
cmp
call
jb
repz
fidivrl
movsb
std
stc
scas
mov
lea
or
sbb
lea
mov
ss
cmpsb
jns
movsl
xchg
arpl
lods
adc
adc
xchg
sbb
scas
shlb
jle
hlt
or
dec
xorb
bound
push
mov
rolb
push
mov
xchg
jne
cli
fs
out
add
push
pop
ret
lds
push
cmp
and
push
lea
mov
jbe,pt
pop
jle
push
jg
dec
mull
pop
loopne
inc
mov
addr16
dec
in
negl
into
scas
sti
out
test
and
and
pop
insb
lds
or
sub
dec
or
sbb
mov
dec
mov
inc
pop
mov
sub
mov
dec
and
out
mov
cltd
lock
cmp
jle
daa
sub
mov
inc
adc
lock
dec
sbb
push
bound
lds
jg
subb
push
out
mov
outsb
push
dec
nop
into
mov
add
icebp
gs
mov
jmp
and
lods
add
pop
jne
cmp
mov
fwait
or
jg
fdivrs
jne
lcall
mov
jae
repz
adc
cs
lods
and
inc
cmp
ret
mov
ret
call
jb
add
dec
es
jno
pop
test
inc
rorb
shrb
das
in
out
fwait
adc
dec
inc
or
rol
push
addr16
lcall
or
fcoml
sub
cli
int3
int3
mov
lods
sbb
pop
shl
cmpsl
cmpl
push
adc
add
pop
lret
inc
xchg
pop
or
mov
fmuls
dec
jecxz
sub
push
mov
jo
pop
sbb
and
and
outsl
leave
bound
ljmp
aaa
pushf
mov
adc
mov
clc
dec
xor
ss
pop
out
loopne
sbb
lahf
stc
jl
mov
std
cmp
scas
insl
add
cmp
dec
mov
loope
pop
js
push
or
mov
les
in
xchg
inc
xchg
fists
push
fistl
incb
adc
in
push
sub
inc
sbb
movsl
and
sub
adc
push
shrb
imull
or
or
jo
cwtl
andb
or
jns
int
mov
xchg
test
pop
sbb
fstl
mov
cmpsl
roll
xchg
mull
push
adc
push
jbe
in
movsb
das
xchg
sarl
jecxz
mov
dec
repz
push
adc
loope
pop
repnz
jae
jp
push
pop
inc
fistl
or
xchg
adc
lods
ficoml
inc
into
faddp
mov
adc
fmulp
subl
inc
push
inc
outsl
stos
push
shlb
int3
loopne
stos
cmp
sbb
inc
ficomps
test
sub
add
pop
mov
je
fwait
insl
jno
mov
popl
add
inc
add
loopne
sbb
xorl
pop
or
iret
xor
out
mov
pop
inc
sbb
push
cmp
daa
and
sub
xor
arpl
xchg
jmp
jp
daa
int3
and
and
cltd
jo
test
dec
or
pop
sbbl
xchg
addr16
xchg
or
xchg
adc
mov
jmp
cmp
dec
jge
leave
sub
jno
push
sub
mov
iret
jecxz
fcmovbe
int3
fsubr
pop
push
adc
push
or
pop
test
aam
mov
lahf
push
jp
pop
jge
inc
mov
push
dec
mov
sub
xor
movsb
in
sub
push
arpl
dec
xchg
into
dec
push
cs
sub
push
aad
out
jecxz
push
dec
cs
fcoms
sub
ljmp
sub
imul
es
call
rcr
incb
insb
das
test
dec
out
rcr
push
popf
dec
movsb
shlb
add
push
dec
adcl
add
jne
xchg
daa
rcrb
jmp
cmp
cmp
cmp
and
fucomi
int
fwait
jae
test
mov
rcl
orl
jb
adc
negl
inc
sbb
pop
mov
xchg
div
pushl
pop
inc
inc
push
aaa
mov
push
mov
std
ds
fcoms
push
in
data16
or
scas
cmp
daa
xchg
xorl
mov
or
push
call
pop
xchg
lock
sbb
cmpl
out
rep
stos
push
or
sbb
inc
push
lahf
jecxz
jne
imull
out
and
sbb
mov
mov
loope
movsl
add
xchg
mov
push
dec
mov
nop
cmp
dec
int
add
inc
sbb
xchg
inc
add
and
test
mov
cmp
call
test
mov
add
call
scas
jno
insl
jnp
fwait
xor
pop
clc
mov
ret
add
jb
add
push
bound
add
jg
xchg
fcmovne
jnp
test
out
mov
outsl
mov
pop
xor
jae
mov
stos
inc
cmp
mov
out
mov
dec
fistps
stc
inc
sub
andl
aad
test
mov
cltd
xor
sub
push
rcr
cwtl
in
mov
xlat
stc
ljmp
pop
mov
popa
and
pop
lret
push
loop
fisubs
push
xchg
out
fwait
and
je
mov
out
push
dec
or
mov
xchg
shld
sbb
add
sbb
xchg
add
dec
add
xchg
int
cwtl
pop
lods
push
xor
fisttps
sbb
pop
inc
shlb
aam
subb
mov
sbb
lcall
adc
imul
inc
push
aaa
push
sahf
sub
scas
push
loopne
popa
pushf
xor
inc
sub
leave
sub
xor
mov
hlt
mov
dec
push
cwtl
dec
fwait
xlat
dec
sub
lret
jmp
xor
ret
push
scas
lahf
out
inc
sbb
repnz
rolb
hlt
lcall
add
loope
inc
adc
mov
push
xchg
imul
dec
push
jl
xchg
cmp
mov
add
push
xchg
movsb
fxch
xchg
jbe
popf
mov
inc
pop
or
inc
in
mov
lds
sbb
sbb
sub
icebp
and
sbb
xchg
xchg
xorl
stos
jmp
ret
test
lar
int
mov
ret
fstl
gs
xor
int
push
inc
xchg
xor
pusha
xchg
mov
xor
and
outsl
mov
stos
int
fucomip
pop
imul
std
out
jmp
enter
fs
mov
ss
jne
hlt
add
xor
sub
call
and
fmuls
imul
xor
into
test
lret
stc
fsubr
push
into
xchg
jae
iret
les
xchg
xor
les
push
xchg
testb
sub
cmp
mov
pop
sbb
mov
mov
dec
aas
imul
add
jmp
adc
stos
inc
loop
mov
bswap
sarb
lea
mov
cmp
ja
fimull
data16
pusha
dec
mov
mov
lea
mov
or
inc
arpl
xchg
sbb
or
ja
cmpsl
ds
lret
fs
int3
lret
stos
push
add
popa
fadd
dec
push
ss
and
push
in
aad
xor
scas
cmpsb
repz
cvtps2pi
ret
cmpsl
jl
stos
or
jg
int
scas
push
popa
in
mov
jmp
loop
stos
movsb
pop
jg
lods
mov
xorl
shrl
in
cmp
data16
push
jae
inc
repz
stos
fcmovb
fnstcw
inc
adc
and
ds
or
lahf
arpl
test
sbb
mov
std
inc
xchg
mov
mov
mov
stc
sarl
loope
adc
dec
es
mov
add
sti
sub
int3
fisttpl
pop
mov
aad
mov
push
pop
cmpl
mov
or
dec
mov
inc
mov
shrl
mov
mov
js
iret
xor
ljmp
mov
inc
jmp
pop
cld
popa
leave
pop
adc
mov
fistl
inc
loope
test
sbbb
dec
cmp
clc
dec
fisubrs
mov
lcall
nop
mull
xor
push
enter
add
jl
sub
cmp
xor
mov
cmpsl
mov
rclb
sahf
cli
insb
sbb
inc
xchg
std
popf
fs
daa
jb
adc
and
lret
dec
les
xor
ss
push
mov
icebp
jp
enter
pusha
sbbl
xlat
jl
adc
addb
into
insb
xor
pop
testb
lcall
xchg
out
and
insl
dec
cmp
fcoms
pop
jo
inc
ljmp
stc
add
inc
push
cltd
xor
jnp
sbb
push
ret
add
dec
in
ja
jb
cmp
push
shlw
pop
inc
popf
lcall
mov
pop
or
or
lcall
sbb
and
sbb
inc
fldt
shl
loope
mov
inc
aas
and
hlt
js
mov
dec
push
jmp
pop
jmp
jae
mov
icebp
mov
xchg
fdivp
or
jb
imul
cmp
push
xlat
loope
mov
out
clc
jno
lock
xor
xor
popa
mov
fsubl
xchg
add
jo
pop
sti
in
and
pop
test
pushf
push
seta
test
mov
test
movsl
dec
xor
xor
add
sti
cmp
add
popl
test
cmpsl
pop
int3
inc
inc
mov
dec
add
xchg
int
repnz
testl
aad
cmp
jp
int
fdivl
pcmpgtd
jle
hlt
fcoms
xchg
jo
inc
jns
pop
sbb
push
lret
addr16
push
sbb
sbb
xchg
rclb
rolb
add
pop
in
cld
add
and
loop
or
clc
xor
es
lret
xchg
js
adc
mov
jae
fldcw
mov
mov
and
loopne
xchg
sbb
inc
add
addr16
addr16
sbb
add
mov
out
inc
shl
adc
dec
fiaddl
xchg
popa
add
lret
sti
pusha
arpl
xchg
test
jle
jo
xlat
mov
and
sub
xchg
lods
sti
sub
enter
adc
xor
sub
mov
rcl
jmp
mov
mov
cltd
lock
gs
mov
rorb
cmp
jnp
mov
fstpl
push
mov
add
rcll
pop
cli
push
mov
rol
add
push
lret
dec
loop
sub
mov
std
xor
test
xlat
jle
xchg
xlat
and
or
sbb
inc
mov
push
xor
adc
cmpsl
out
shlb
fidivrs
mov
in
gs
xor
jno
out
jns
js
adc
xor
out
xchg
stos
sub
cmpsb
fldenv
push
mov
jle
ret
jo
pusha
stos
or
xor
mov
jae
icebp
jl
mov
mov
fsubs
or
jl
stos
mov
mov
repz
loope
orl
outsb
jns
lods
pop
je
movsl
out
fistpll
or
jae,pn
int
push
xor
jp
mov
cmp
lret
xor
daa
adc
lret
pop
mov
test
pop
sbb
xchg
sbb
xchg
mov
ret
xchg
aas
pop
and
popa
dec
cld
inc
or
es
xchg
jbe
jae
les
fs
add
cli
movsb
in
lds
pusha
mov
loop
addr16
js
dec
shll
jns
into
into
pop
sub
stc
movsb
fstp
mov
mov
mov
or
ret
push
push
cmpsl
lds
cwtl
mov
bound
adc
mov
and
cli
push
jnp
and
andl
cmp
mov
sub
push
into
push
movsb
int
movsl
push
fldcw
cmpb
les
xor
dec
and
xchg
sub
and
inc
sti
pop
repz
cmp
adc
xor
push
icebp
and
push
push
aam
in
xor
xchg
pop
repnz
mov
dec
shll
bound
add
popa
xchg
sahf
outsl
sti
mov
sub
addl
inc
xchg
imul
mov
lahf
sub
xor
test
dec
sbb
pop
mov
mov
clc
lea
dec
and
arpl
add
js
sub
sub
jecxz
cld
cld
mov
push
mov
or
or
pop
scas
out
sub
or
lahf
fstl
and
xor
sbb
dec
or
sbb
cs
mov
pop
out
sbb
repnz
jge
xor
mov
jmp
ret
xchg
cmp
sbb
push
out
jb
call
jecxz
movsl
test
dec
fstps
mov
xor
out
scas
mov
push
fdivs
out
adc
xchg
not
sbbb
movsb
pop
sahf
mov
xchg
adc
outsb
jo
or
movsl
pop
dec
xor
fsubr
stc
and
jb
int
xchg
out
mov
inc
mov
pusha
lret
fsubrl
test
lret
pushf
sti
stos
pop
inc
mov
fnstcw
sbbb
aaa
inc
dec
xchg
inc
inc
out
imul
add
mov
aad
dec
rol
sbb
xlat
jge
out
das
xchg
dec
sub
mov
or
ret
out
xchg
jae
jp
xchg
sub
std
adc
jl
adc
sub
jmp
push
pop
push
in
in
stos
ret
pop
hlt
cmp
rcrl
in
scas
sti
xor
orb
jae
and
xchg
test
imul
adc
adc
enter
push
add
or
inc
dec
or
rorl
fldl
pop
sahf
ds
fidivs
push
pop
add
adc
inc
subl
std
push
sti
mov
loopne
adc
inc
inc
mov
sti
arpl
mov
mov
cmpsl
pop
cmp
out
xchg
mov
nop
push
pop
add
mov
sar
enter
cli
jle
jmp
cmpsb
movsl
xor
popa
cmp
push
out
lods
push
in
loopne
jne
or
mov
movsl
xlat
rol
cltd
outsb
les
popf
mov
xchg
mov
pop
bound
test
fidivl
repnz
mov
mov
sub
pop
fs
xchg
jbe
and
xor
pusha
pop
movsb
jl
and
rcll
pop
mov
imul
insl
jae
push
add
and
push
mov
arpl
rcl
mov
ret
test
and
std
sbbl
shlb
mov
imul
jmp
push
stc
xor
mov
ljmp
jmp
lods
je
sub
call
out
cmp
xchg
cmpsl
mov
out
ret
sahf
int
jb
jle
push
stc
xor
cmpsb
inc
movsb
jle
imul
mov
xor
out
add
movsb
xchg
addl
scas
fstps
cltd
pop
data16
inc
std
lret
mov
or
fnstsw
les
fistps
jl
xor
fisubrl
int3
rcrl
vunpckhps
ss
stos
mov
in
and
pop
pop
in
xchg
jg
jb
push
push
sbb
stc
ret
jg
pop
push
cmp
push
jle
dec
xchg
push
fadds
cmp
popa
loope
push
adc
mov
dec
mov
out
inc
js
push
std
fisttpl
xchg
frstor
out
jle
popa
mov
dec
push
ffree
cmc
pop
sub
std
ret
mov
ror
fldl
test
incl
mov
mov
mov
stos
mov
loop
sub
jns
scas
lcall
add
in
mov
push
pop
dec
jl
mov
lea
addr16
sahf
jmp
dec
lret
pushf
cmp
js
aaa
pop
enter
push
rcll
aad
insl
jo
filds
stos
test
jmp
inc
repnz
inc
jo
in
add
dec
xchg
sbb
push
shr
mulb
sub
popa
push
outsb
sbb
pop
call
hlt
lahf
inc
add
sbb
mov
and
xchg
sahf
jns
lds
mov
xchg
inc
insb
hlt
dec
cwtl
in
mov
and
bnd
cmc
mov
mov
pop
test
lods
iret
fwait
mov
notb
jne
sahf
jmp
sub
sbb
jge
add
lahf
fildl
arpl
std
push
in
stos
clc
fadds
stos
pop
jne
mov
and
fistpl
imul
sub
inc
pop
xchg
call
fimull
sbb
or
insb
push
mov
xor
lea
mov
scas
lods
pop
andb
or
pop
jns
adc
pop
or
add
mov
in
pop
mov
ss
fs
ljmp
mov
mov
inc
mov
jl
scas
push
rcll
sarl
lahf
adc
xchg
jp
nop
aad
icebp
pop
fstpt
popa
mov
pop
dec
das
outsl
andl
ss
mov
faddl
pop
in
sub
movsb
imul
mov
ds
inc
scas
icebp
cltd
mov
push
test
enter
push
jno
mov
xchg
ss
push
test
inc
mov
int
jno
pop
inc
je
inc
or
cmp
enter
mov
or
xchg
mov
add
out
mov
adc
into
int3
mov
mov
xchg
sbb
lret
push
push
rolb
fdivr
dec
push
jns
arpl
in
js
pop
je
into
mov
mov
call
cmovge
insl
mov
adc
jne
data16
pop
movsb
xlat
or
pop
mov
pusha
sub
sub
mov
add
push
push
adc
test
mov
and
add
cmp
std
mov
in
decl
fsts
in
outsb
and
mov
lock
cli
hlt
sub
mov
negb
push
adc
jl
mov
mov
insb
adc
sub
fmuls
jle
push
dec
mov
int3
stos
aas
loope
iret
mov
pop
cld
xor
or
das
xchg
loope
das
push
jbe
mov
pop
push
pop
lods
lods
and
push
xor
lret
dec
movsb
sbb
inc
xchg
mov
imul
xor
repnz
ret
dec
mov
test
inc
les
xchg
sbb
sub
jle
lret
xor
mov
xchg
fs
or
sahf
ss
xchg
ds
nop
addr16
xchg
pushf
xchg
sbb
aam
ret
adc
ret
dec
add
out
bound
loop
mov
enter
andl
pop
jae
dec
std
mov
test
mov
xchg
xchg
ljmp
jl
dec
pop
or
rolb
shlb
xor
test
adc
outsl
jmp
fldt
add
in
jae
xchg
lret
shrl
add
pop
cs
test
xchg
cli
adc
mov
push
mov
sbb
jne
mov
in
cmp
jle
jle
mov
push
ds
cmp
inc
mov
loope
pop
mov
fsubs
data16
fs
mov
mov
mov
mov
cld
jbe
js
lahf
pop
loopne
cmp
xchg
call
push
cmp
jnp
cmp
dec
hlt
mov
mov
cmp
adc
jne
popf
or
pop
xchg
mov
push
and
lds
and
repnz
xor
int3
cmpsb
mov
lock
lcall
push
nop
pusha
orl
andb
imul
andl
mov
and
outsb
movsbl
push
and
ds
repnz
and
add
cmp
or
cmp
testb
leave
pop
rcl
push
ds
cli
movsl
jb
and
mov
stos
mov
jae
and
sahf
fldenv
inc
dec
pop
adc
mov
or
fdivrs
adc
jecxz
jnp
pop
loop
pusha
outsl
pop
jmp
push
cmp
add
rcrb
inc
int3
insb
inc
sbb
pop
lret
adc
cld
jno
movups
inc
mov
xchg
js
lret
add
ljmp
mov
mov
adc
sti
jp
test
xor
call
pop
push
push
inc
mov
sbb
mov
cmp
mov
stc
mov
cmpsl
rdtsc
jmp
xchg
leave
les
loopne
adc
mov
outsb
inc
push
mov
movsl
loop
sbb
push
dec
jecxz
adc
scas
and
mov
pop
dec
mov
jae
or
jge
pushf
jb
jne
jns
xchg
call
fsubl
and
push
test
push
testb
das
inc
aam
jmp
xchg
adc
push
xchg
xor
xor
mov
or
sti
jb
imul
pop
ror
push
into
shll
xor
popa
insb
jbe
jbe
pop
xor
repz
adc
and
or
sub
in
clc
inc
jo
mov
sahf
cli
icebp
pop
mov
cmpsb
in
jecxz
popf
sarl
mov
leave
lods
xor
lret
xlat
cmpb
pusha
adc
insl
in
setne
insl
lods
jbe
out
sbb
cmp
pop
mov
push
rcll
cli
cmp
cmp
mov
adc
add
jmp
inc
sbb
in
jge
fistpl
mov
push
jne
mov
int3
pop
lock
test
ret
cmp
movsl
jne
icebp
adc
rcrb
cmc
push
pop
sub
inc
clc
dec
jne
stos
sahf
je
xchg
xchg
pop
rcrb
cmp
loopne
inc
cmpsl
mov
adc
scas
clc
scas
cmp
xor
sbb
mov
cli
push
or
in
xor
ret
mov
sub
ljmp
mov
jl
pop
sbb
cmpb
test
pop
jb
repz
adc
or
cmp
and
into
movsl
scas
in
push
dec
mov
xor
dec
mov
fiaddl
push
xchg
cmp
adc
xlat
push
xor
pop
fcomip
pop
fwait
cmp
or
add
and
je
das
mov
pop
or
mov
loopne
sbb
aad
sub
mov
xchg
cmc
push
mov
jbe
push
call
cmp
add
add
ljmp
mov
bound
inc
jns
test
adc
jl
inc
ds
pop
push
xchg
mov
jp
out
xor
fldl
fdiv
mov
arpl
and
xor
mov
add
hlt
cmp
ss
jno
fldcw
mov
je
in
jl
movsb
xchg
add
subl
push
mov
xchg
enter
pushl
out
enter
imul
scas
mov
cmp
inc
dec
add
into
or
cmpsb
int
in
data16
mov
sahf
and
push
and
fadd
cmpsl
or
bound
cmp
lea
dec
pop
je
xchg
dec
shrl
popa
imul
gs
or
and
movsb
arpl
popf
outsb
fimull
add
rcrl
sbbb
cltd
adc
test
in
fnstcw
sbbb
shufps
ja
aas
adc
pop
iret
loopne
scas
sub
repz
subb
dec
sbb
and
push
inc
and
pop
cmc
in
loope
rorb
sbb
adc
je
andb
cmpsb
insl
mov
mov
mov
insb
mov
scas
xchg
xchg
lcall
je
and
pop
orb
jne
lret
xchg
mov
in
sbb
stos
inc
pop
fildl
mov
jne
cld
inc
inc
les
xlat
cld
cmp
insl
lea
gs
dec
shrl
cmp
xor
fisubl
and
sbb
cltd
push
inc
lds
int3
push
sub
or
mov
in
dec
jne
mov
and
lods
cmp
rcl
sub
sub
jne
js
in
ret
stos
popf
inc
and
dec
ja
sbb
add
cmp
enter
push
sub
aaa
xor
in
mov
stos
xchg
out
scas
popf
xlat
fimuls
sar
movsb
dec
fldenv
pop
fisubl
loopne
xchg
xor
ret
icebp
lahf
fdivl
out
jnp
inc
xlat
or
xchg
lods
cmp
pusha
mov
je
mov
insl
stos
test
mov
pusha
mov
adc
in
mov
loop
push
shlb
or
xchg
insl
inc
pop
ucomiss
mov
in
into
insl
adc
out
xor
fcoml
lods
stc
out
movsl
pushf
movsb
stc
xchg
mov
fs
out
push
pop
mov
das
inc
shr
cmp
cmp
mov
or
js
push
loop
pop
xchg
mov
xor
sti
data16
outsb
aam
inc
jg
ljmp
cmp
leave
dec
or
cltd
push
lret
xchg
repz
inc
sub
pop
fs
pop
and
jo
jno
das
or
xchg
jl
stos
test
divl
hlt
fstpl
js
jbe
pop
or
popa
test
jae
cmp
push
adc
sarb
iret
and
inc
xchg
cmp
xlat
adc
push
nop
lock
in
fstpt
popf
in
loope
push
xor
cwtl
mov
push
cmp
enter
push
call
and
push
ds
add
in
mov
mov
mov
dec
mov
ljmp
jle
stos
sbb
imul
xchg
scas
mov
lcall
adc
mov
inc
mov
clc
mov
in
aas
sti
cmpsl
or
xchg
jns
pop
stos
push
ja
loop
cmp
out
loop
or
lods
pop
sbb
or
dec
movsb
mov
das
stos
push
int3
dec
data16
out
fisubrs
sbb
outsl
xchg
mov
or
jl
test
notl
cmp
dec
xor
or
or
inc
xlat
xor
out
push
pop
ds
or
pusha
sub
sub
lahf
mov
sbbb
mov
or
mov
test
cmp
leave
sti
sbb
or
leave
add
sbb
insl
call
cmp
addr16
jnp
lods
orl
mov
or
insl
pop
jmp
sahf
ret
xchg
dec
push
lock
sti
outsb
or
mov
sti
xor
mov
push
jne
stos
fsubrp
fstenv
rcrl
pop
shlb
ret
dec
sbb
mov
lret
fildl
push
negb
mull
pop
push
arpl
cmp
mov
jp
inc
stos
mov
int
ret
inc
fnsave
lods
mov
popa
mov
inc
mov
arpl
mov
inc
in
shll
and
jl
int
cmpsl
fdivr
xor
sub
test
repz
xchg
jbe
dec
mov
sub
adc
loope
and
mov
popa
inc
or
or
popa
outsb
out
les
das
adc
mov
shlb
mov
add
sub
aaa
jbe
or
sub
scas
mov
mov
push
into
in
idivb
je
or
pop
push
movsb
ret
jecxz
rorb
mov
mov
xor
mov
lret
test
pop
pop
push
mov
fidivrs
inc
rol
jmp
add
pop
loop
pop
outsb
orl
fisttpll
movsb
dec
pop
test
add
sub
aas
sbb
push
les
inc
xor
push
cmp
fcompl
fdivrs
into
outsb
adc
lahf
mov
fdivl
pop
xlat
loopne
icebp
push
and
stc
push
testl
je
je
test
dec
pop
pop
mov
xchg
rcl
ret
mov
lock
lahf
aam
adc
sub
shll
ja
and
rorb
mov
mov
mov
stos
adc
or
popf
in
call
sbb
pop
lea
fcoms
rclb
mov
and
fiaddl
mov
cmp
mov
mov
dec
inc
inc
mov
popf
xorb
sbb
add
outsb
push
and
jb
push
pop
and
sub
gs
sbb
mov
adc
fistpl
lahf
mov
jns
movsl
cli
push
popf
push
loope
or
dec
mov
cmpsl
fildl
call
adc
repz
xchg
xor
pop
repz
in
out
pop
pop
xchg
outsb
pop
ret
mov
xchg
cwtl
inc
xor
test
ret
xchg
mov
test
test
movsl
cmp
repnz
mov
push
sbb
xchg
incb
jbe
call
aam
cmpsb
pop
pop
sbb
fwait
jnp
sbb
jg
loopne
jp
out
jl
out
push
ret
jno
sub
mov
cmc
mov
popa
aaa
inc
jnp
dec
icebp
cltd
mov
push
popa
movsl
out
xchg
push
test
xor
sbb
sbb
jbe
aad
ror
ret
and
jl
and
cld
das
adc
cmpsl
pop
out
cmp
fmull
xchg
out
sbb
or
push
push
in
pop
stc
sub
icebp
adc
or
jae
mov
pop
xor
ret
inc
mulb
test
xor
aad
hlt
mov
ret
and
les
dec
xor
and
lret
jge
cmpsb
mov
pop
ja
fldl
mov
jo
mov
pop
cmp
pushf
faddl
js
cmp
mov
mov
xor
xchg
mov
inc
das
out
ret
push
out
les
cltd
push
lods
movsb
jae
hlt
add
movsb
fs
lret
add
dec
xchg
test
aad
hlt
fcom
lods
test
add
dec
lods
outsb
dec
lret
dec
pop
imul
dec
push
push
mov
sahf
pop
sub
lds
add
movsl
and
mov
jae
insl
ljmp
jmp
les
dec
ret
ss
out
mov
call
xor
add
or
xchg
xor
out
shl
mov
insb
xor
dec
jns
mov
mov
arpl
inc
xchg
into
push
movsl
mov
xor
xor
addr16
cmp
pop
jns
cmp
xor
loope
loopne
gs
ds
loope
mov
lret
lcall
sbb
jno
shr
or
pop
push
std
aam
jmp
sbb
lahf
or
mov
mov
bound
cmc
jb
inc
push
aam
cmp
les
test
testb
pop
lods
pop
dec
mov
leave
mov
dec
adc
pop
andb
jae
hlt
or
bound
daa
jo
arpl
dec
mov
xor
shll
mov
dec
xor
and
addl
aas
inc
sbb
cmp
cli
jcxz
jo
push
sti
mov
fidivrl
gs
push
cmovo
in
xchg
movsb
sub
gs
adc
mov
repz
insl
jnp
lods
and
arpl
sti
or
fwait
lcall
lcall
push
or
jne
or
mov
sbb
scas
fdiv
jg
mov
add
mov
xchg
rcrl
sarl
mov
or
jge
mov
in
icebp
push
rcrb
and
xchg
test
movsl
pop
mov
mov
sub
daa
xchg
in
sbb
sbb
psubusb
orl
mov
ds
pop
iret
push
sbb
stos
imul
xor
cmp
cmp
inc
insb
sbb
cmc
and
pop
or
mov
lahf
xor
and
jne
cmp
addr16
push
pop
inc
and
or
xor
mov
in
mov
pop
push
push
push
test
or
inc
pushf
sbb
int3
pop
push
mov
mov
pop
pop
jecxz
add
xor
sbb
aaa
jge
jns
mov
sbb
cmp
pop
push
icebp
shl
sbb
mov
mull
bound
sub
lret
cmc
jecxz
aaa
xchg
mov
pop
inc
and
lods
cmp
js
dec
cmpsb
dec
dec
jp
mull
add
sbb
lret
or
sub
mov
in
jecxz
sahf
jno
fldt
xchg
jge
fisubs
mov
mov
fimuls
out
sub
lret
popa
popa
cmp
mov
ss
mov
mov
mov
popf
repnz
xchg
cmc
jle
lahf
jo
loope
or
pop
jl
mov
test
mov
xor
lret
add
in
mov
mov
lock
mov
jmp
cmp
ficoml
test
in
fdivs
ret
and
lds
xchg
jecxz
ja
and
lret
enter
push
scas
cmp
sahf
das
sbb
jp
push
nop
fstl
sbb
ret
or
ret
sbb
and
ja
loope
cmp
aad
sbb
mov
push
popf
loop
dec
lcall
sbb
xor
or
outsb
fsubrl
lcall
pop
ljmp
bound
push
imul
mov
inc
push
dec
push
add
lret
jmp
test
mov
mov
adc
mov
mov
add
xor
pop
int
stc
dec
xchg
shrl
inc
cmovns
inc
cltd
and
xchg
shr
cmp
cmp
nop
push
mov
pop
jno
call
fsubrl
push
mov
arpl
mov
xor
push
lea
scas
lods
icebp
in
adc
rcr
in
push
das
lods
nop
fwait
cmp
insl
xor
rcll
cmpsl
mov
cmp
ja
mov
aam
dec
and
mov
cli
aam
icebp
repz
jne
movsb
inc
je
lcall
push
fimull
sub
movsb
push
test
je
mov
shlb
cli
push
mov
inc
adc
cmp
jl
int3
sbb
pop
add
sub
icebp
lret
stc
lret
lods
push
in
cmpsb
push
fidivs
and
and
dec
mov
inc
or
cmp
cmp
mov
push
in
daa
inc
cmp
lods
add
into
mov
sbb
aaa
cmc
xchg
mov
jge
and
movsl
enter
mov
add
dec
mov
repnz
test
test
lret
mov
sarb
xchg
mov
es
scas
enter
hlt
orb
test
enter
push
aaa
xchg
xchg
nop
fstps
std
jmp
lods
and
mov
jb
xor
lods
lods
sbb
cmpb
arpl
sahf
push
ret
dec
sbb
lods
les
fdivrs
sub
inc
jae
out
ds
mov
loope
and
cmp
lret
push
dec
jp
das
pusha
pop
imul
dec
scas
xor
shlb
std
lea
cmp
dec
adc
int3
dec
push
outsb
lock
jo
dec
sbb
les
cmp
lock
outsl
loop
mov
pop
repnz
ljmp
jmp
mov
popa
push
mov
stc
cltd
faddl
adc
sbb
popf
pushf
jne
jne
gs
into
imul
rcll
push
filds
out
int3
jle
out
sti
movsl
jbe
mov
out
pop
repnz
scas
sub
loop
nopl
sub
fsubs
inc
pop
movsb
fldl
sti
mov
int3
lret
add
ds
and
arpl
xchg
cmp
vpmacssww
sbb
fs
or
cmp
stc
mov
mov
xchg
fsubl
push
lret
mov
test
call
cltd
popf
dec
cmp
mov
jae
and
mov
js
repz
xor
mov
out
mov
cltd
inc
rol
les
rorl
dec
adc
and
push
dec
mov
sbb
insl
mov
xchg
dec
mov
loopne
xchg
cmc
adc
into
movsl
inc
gs
mov
cld
push
lcall
ljmp
add
push
pop
ret
add
loop
les
adc
or
jle
xor
imul
inc
sbb
jg
aam
cmp
aad
inc
push
stos
push
jb
xchg
xchg
out
cmp
rolb
test
in
lahf
test
lods
imul
mov
push
dec
out
loop
mov
mov
or
ljmp
pop
cli
xor
jmp
pop
popf
lods
repnz
aaa
out
cmpsb
testb
mov
xchg
adc
adc
fs
push
inc
pop
dec
xor
dec
cmpsb
jno
ljmp
and
jns
sub
addr16
inc
sbb
cmp
in
je
sbb
lret
or
push
cld
push
xor
cs
or
sub
mov
mov
mov
notb
jp
js
pop
mov
push
fstps
leave
enter
dec
in
mov
ss
pop
sbb
aad
or
imul
ret
adc
inc
decb
mov
sbb
jbe
cmp
xor
adc
or
ret
xchg
stc
test
add
xchg
insb
xor
rcr
clc
int
out
fcmovnbe
popa
xor
mov
xor
inc
test
shll
sub
loope
push
shlb
jo
shll
adc
aam
jmp
mov
ds
std
mov
fucomip
sub
cmp
enter
rorl
sbb
sbb
nop
icebp
lods
mov
dec
out
fadds
xlat
inc
enter
out
loopne
lahf
dec
fwait
addr16
or
push
or
mov
in
lcall
aaa
jecxz
out
push
loopne
pop
mov
out
lret
cmpsb
std
push
scas
sub
fstpl
aam
fmull
xchg
scas
jb
xor
std
fisttps
xchg
cltd
cmp
in
sbb
enter
xchg
or
xor
mov
cmpsl
sbb
mov
and
mov
xor
clc
jne
movsb
or
pop
adc
enter
jno
push
adc
push
mov
lds
mov
mov
or
and
xchg
dec
mov
jnp
jp
cmp
loopne
idiv
and
mov
int
ds
sbb
sahf
and
ret
repz
sub
mov
fistl
call
or
pop
xchg
lsl
outsl
xor
mov
aad
ja
aaa
mov
push
jl
xchg
push
add
lcall
xor
and
leave
inc
add
cwtl
mov
icebp
adc
es
sarb
mov
dec
push
lods
pop
les
inc
xchg
jmp
shrl
rcrl
xor
adc
add
fldl
fdivrs
lret
lea
xor
jg
out
mov
cmp
lods
rorl
loopne
mov
sbb
push
mov
jl
icebp
adc
lahf
jle
push
lea
jns
test
jbe
aad
fcom
aad
sbb
scas
adc
repz
setl
dec
mov
fisubrl
or
dec
mov
dec
nop
mov
xor
nop
jle
lods
sub
mov
pop
sub
sbb
xchg
pop
test
pop
pushf
lods
mov
popf
mov
cmpsb
and
mov
xchg
fisubs
sbb
xchg
mov
jg
adc
pop
or
sbb
xor
loop
push
out
mov
xchg
lret
dec
int3
mov
test
ficomps
adc
aad
daa
andl
scas
pop
mov
pop
sti
add
lods
xor
push
push
ret
xchg
pop
or
mov
sbbb
sbb
push
push
in
dec
cwtl
jmp
xlat
cmp
jae
xchg
out
dec
adc
adc
int3
inc
pushf
mov
add
dec
mov
mov
movsb
xchg
xchg
jne
and
fcmovnb
into
xlat
sti
add
lret
dec
mov
xchg
andb
aas
sbb
insb
or
out
subl
sub
cmp
pop
jnp
out
inc
fimull
pop
jmp
fwait
hlt
xchg
movsl
inc
leave
sarl
in
inc
mov
pushf
gs
cmp
dec
inc
and
repz
nop
jl
into
repnz
mov
mov
ljmp
pop
push
in
sub
hlt
mov
divl
fwait
outsl
sbb
mov
imul
or
dec
mov
fistpl
arpl
movsb
pusha
hlt
lds
push
push
int
mov
inc
loopne
stos
dec
jne
or
xor
fisttps
pop
jns
jl
inc
das
jecxz
mov
cmp
pusha
sbb
xchg
xchg
add
and
das
xchg
xchg
movsb
shrl
sbb
hlt
jle
push
and
out
adc
push
in
sub
and
jp
mov
push
bound
add
aam
cwtl
dec
cmpsl
pop
jmp
mov
bound
dec
ljmp
jmp
push
daa
test
mov
jmp
fistl
ja
neg
and
test
ds
aas
shrb
movsb
inc
xchg
inc
pop
es
add
sub
cmc
aam
mov
fstpt
je
dec
and
sar
sub
pop
test
pop
jnp
mov
in
loope
pushf
mov
cmc
lahf
mov
insl
cmpsb
xchg
adc
sub
mov
sbb
add
popf
jns
in
sub
shll
or
aaa
dec
mov
pop
jp
xchg
adc
pusha
in
sub
or
out
push
aaa
dec
jb
dec
and
sarb
push
inc
int3
sahf
pusha
dec
popa
cli
daa
xor
daa
jnp
lret
xor
pushf
mov
xchg
js
pop
mov
popf
mov
dec
dec
inc
sbb
imul
and
cmp
ss
pop
xor
stos
mov
sbb
ret
ret
mov
or
rolb
test
pop
adc
mov
pop
add
mov
pop
sub
cmpsl
pop
xchg
enter
sub
push
xor
in
xor
add
mov
xor
xchg
push
lahf
inc
mov
pop
data16
test
dec
or
sbb
outsl
dec
outsl
outsl
add
push
clc
push
int
adc
into
dec
imul
jl
pop
xchg
pop
ja
dec
inc
bound
mov
bound
out
cli
jne
xchg
loope
loope
hlt
in
ja
adc
mov
mov
and
mov
push
jmp
push
add
pop
jbe
sbb
in
shl
mov
out
cs
add
mov
popa
ljmp
xchg
jbe
fmuls
and
ja
repnz
pop
and
and
push
push
iret
fisttps
adc
ficoms
int3
mov
pop
or
roll
push
mov
or
mov
or
out
lret
lds
mov
jmp
add
inc
sbb
and
je
daa
adc
shrl
fimull
jno
cmp
xor
mov
sub
push
fadd
arpl
ret
icebp
test
jp
hlt
pop
pop
inc
xchg
xchg
aad
sub
inc
cmc
mov
lcall
add
mov
loope
pushf
push
daa
sub
or
hlt
jo
sub
inc
cmpsl
notb
push
pop
test
hlt
je
insb
push
xchg
iret
cmp
push
into
mov
rclb
shrl
adc
stos
adc
aam
int
dec
in
ret
out
stc
mov
pop
dec
pop
adc
mov
mov
and
adc
lahf
jl
int
jb
mov
in
adc
jo
movsb
add
and
sbb
mov
mov
ret
je
sub
sbb
or
mov
aam
fst
sub
jmp
inc
jnp
xor
fstpt
or
faddl
cltd
jle
jns
mov
pushl
mov
xchg
add
jne
inc
mov
push
movsb
aam
fidivl
dec
pop
xor
aam
jbe
outsl
stos
scas
push
pop
mov
push
and
mov
mov
insl
cmpsl
push
inc
inc
dec
push
sahf
data16
lock
in
iret
lcall
sbb
cmp
mov
std
sbb
xor
xchg
insl
sti
mov
mov
sarl
xchg
xor
push
pop
inc
scas
add
scas
sub
sarl
push
into
pop
ss
sub
xchg
fdivp
into
and
sbb
movsl
out
add
push
hlt
daa
jns
out
lods
adc
ja
jo
into
xchg
push
cli
xchg
mov
inc
jns
jge
mov
int3
push
cmpsl
adc
dec
pop
lcall
xor
mov
mov
or
mov
mov
ret
mov
push
or
addr16
dec
mov
jns
pushl
jle
or
test
xor
cmp
push
or
add
cli
shl
lods
jg
mull
rcrl
cmp
addr16
jl
int
dec
mov
sub
xchg
in
sbb
ss
jbe
sub
push
cs
add
push
aaa
in
jae
jmp
rclb
scas
aas
in
mov
movsl
adc
sbb
incb
pop
lds
sub
insb
sub
pop
xchg
popa
mov
ret
aam
cmp
aad
sub
add
mov
dec
in
sub
shrl
mov
sub
dec
mov
mulb
fidivl
lret
and
xor
enter
or
aaa
repnz
push
dec
sahf
sahf
xchg
push
dec
test
push
sbb
out
xchg
jmp
popf
ljmp
dec
push
xchg
ficoml
ss
std
mov
mov
mov
or
in
dec
into
data16
and
jbe
mov
pushl
arpl
pop
adc
jmp
hlt
cmp
push
popf
jno
jnp
mov
ljmp
xchg
in
arpl
repz
loope
dec
call
call
lret
roll
push
or
jecxz
stos
cmp
int3
jl
jnp
jmp
stc
cs
aaa
stos
in
es
adcb
out
rclb
std
mov
jp
jg
add
ss
negl
movsl
sub
mov
test
gs
cmp
mov
or
push
inc
out
sbb
es
dec
gs
pop
xchg
add
jl
mov
fucomi
inc
mov
leave
inc
les
mov
in
fwait
sub
fadds
mov
fisubs
pop
xor
fsubrl
add
jg
das
imul
pop
jns
icebp
inc
sbb
sub
mov
sbb
jne
adc
arpl
jg
fiaddl
push
cmpsb
lods
inc
daa
push
in
ficoms
das
add
or
je
pop
cli
insl
sti
add
add
mov
lcall
push
fldl
data16
cmpsb
iret
and
cmpsl
sub
mov
adc
ja
sbb
aam
sbb
push
int
or
jno
lahf
or
in
or
push
out
ja
nop
and
jl
sbb
leave
fsubrl
aad
dec
xor
add
cmp
dec
adc
mov
jnp
jnp
imul
frstor
or
mov
mov
cmc
in
push
cld
fisubrs
pop
inc
neg
add
mov
mov
dec
push
enter
pop
jmp
xchg
pop
fcoms
imul
outsb
mov
outsl
mov
roll
cmp
xor
pushf
inc
push
rcl
out
dec
js
bound
ret
push
in
lret
arpl
lods
sub
cmc
notl
jnp
mov
cmc
call
fnstenv
lret
mov
mov
in
out
iret
mov
inc
rcr
or
mov
jle
mov
sbb
dec
nop
leave
mov
jp
and
jmp
fisubrs
test
lds
jo
mov
call
sbb
imul
mov
scas
scas
xchg
je
lret
pop
xchg
aaa
cmpsl
rcll
mov
cmc
imul
xchg
xchg
jnp
mov
jle
cmp
push
insl
cld
jmp
je
or
jo
idiv
and
inc
cltd
in
add
ja
xor
cltd
lock
cmp
hlt
in
mov
inc
dec
and
movsl
subl
movsb
mov
sti
repz
pop
fadd
cmp
pusha
addb
mov
mov
sbb
jbe
punpckhbw
push
shl
sti
xor
dec
add
lret
dec
ja
dec
and
jae
push
sbb
sub
sub
mov
adc
or
add
int
or
or
mov
call
push
into
movsb
add
bnd
xchg
test
shlb
jo
add
pop
xor
jg
bound
fbstp
shrl
dec
leave
or
xor
into
punpckldq
imul
es
fs
and
mov
cmc
stos
mov
push
sbb
pop
mov
jnp
mov
in
adc
or
sub
or
adc
push
filds
mov
popa
sbb
pop
into
and
test
or
adc
loop
bound
lods
dec
dec
cmp
jmp
mov
outsb
insl
xor
adc
negb
cltd
inc
dec
push
or
pushl
mov
in
dec
mov
pop
int
push
cmp
pop
cmpsl
sub
jmp
xor
loope
push
push
repnz
inc
dec
push
adc
and
sbb
jl
or
addl
push
mov
sbb
mov
adc
xchg
sti
cmpsb
dec
insb
push
rorl
xorb
dec
lods
lret
inc
mov
int3
jl
cmpsl
push
call
adc
fstps
jge
xor
insl
jp
push
mov
lret
mov
test
mov
inc
or
mov
rcll
lahf
adc
cltd
dec
les
imul
inc
nop
dec
dec
ret
inc
cltd
shlb
lcall
call
aaa
push
inc
push
push
push
push
ljmp
enter
mov
es
frstor
clc
xor
mov
push
jne
lret
push
ds
mov
xor
add
fwait
sarl
mov
mov
jle
sub
rorl
push
cmpsl
dec
lret
jmp
pop
jp
mov
test
inc
mov
or
lods
push
pop
scas
cmp
loopne
movsl
fisubrs
andb
iret
bound
push
int
sbb
cmp
ret
fbstp
pop
adc
test
aas
hlt
popa
es
in
adc
lret
js
outsl
inc
mov
fiaddl
outsb
inc
dec
movsl
and
inc
cmp
loop
xchg
loope
inc
imul
andl
js
insl
movsb
cmp
insl
repz
out
test
std
mov
dec
xchg
xchg
imul
scas
test
icebp
movsb
mov
out
and
pop
xchg
pop
mov
jae
ficompl
sub
add
loope
daa
xlat
pop
sbb
xchg
fadd
subb
xchg
pop
jb
decb
nop
sbb
xchg
sbb
jns
pushf
add
in
xchg
jno
pop
inc
lods
mov
enter
inc
cmpsb
mov
mov
shl
dec
subb
xchg
test
test
movsb
mov
sub
call
loop
pop
mov
sub
sbb
jge
jns
jmp
or
cmp
jb
nop
clc
ss
xor
je
push
inc
stos
push
sub
add
cmp
pop
mov
mov
sbb
xchg
out
cmp
xchg
aas
or
mov
sti
and
rcr
mov
push
dec
pop
fbstp
xchg
xlat
xchg
lahf
mov
pop
mov
andl
addl
aad
popa
push
fwait
jbe
cmp
lret
xlat
inc
sub
jle
or
mov
and
cld
cld
push
addb
ss
out
pop
adc
cmpsb
mov
push
push
loop
mov
mov
lret
pushf
and
push
pop
pop
pop
push
enter
cltd
sub
cmc
pop
imul
mov
cmp
xor
cmp
and
gs
xor
adc
or
repz
ret
ficoml
dec
mov
out
or
xlat
mov
cmp
addr16
add
das
fwait
adc
shrl
testl
ljmp
sub
xchg
std
cli
push
shlb
ljmp
out
push
ljmp
sti
js
and
inc
push
cmp
popf
popa
jns
pop
test
cld
sbb
test
push
les
push
xchg
push
push
mov
fldl
fwait
rorl
bound
loop
dec
or
aas
out
shrb
sbb
mov
and
fxch
xchg
mov
cmpsl
inc
nop
andb
scas
jge
xor
jno
add
clc
xchg
add
je
js
adcb
ret
daa
imull
add
pop
sub
fimull
idivb
inc
mov
data16
jg
scas
cmp
iret
jb
scas
add
jmp
xorb
mov
jecxz
adc
repz
sbb
aam
fwait
mov
mov
test
or
xor
mov
in
iret
aad
and
outsb
xchg
mov
pusha
insb
add
rorb
xchg
ss
jmp
xchg
stc
mov
daa
scas
ja
dec
pusha
mov
push
jle
xor
xor
pop
movsb
cli
insl
cmp
push
sub
sub
cmc
adc
jle
fs
fsincos
lods
mov
or
adcl
jnp
leave
sbb
ja
push
xor
lret
lret
jg
jbe
imul
ljmp
push
int3
jge
fucomip
imul
pusha
pop
or
stc
push
aad
pusha
mov
dec
shrl
fmuls
test
sub
outsb
jmp
sbb
out
cmc
push
pop
in
loope
pop
adc
cmp
cld
mov
sbb
jp
xchg
je
mov
out
lret
mov
mov
loop
pop
enter
mov
adc
lahf
ret
mov
sub
or
movb
adc
test
fists
sub
hlt
popf
dec
xchg
mov
push
pop
cwtl
xor
cmp
push
addl
int
fs
loopew
in
dec
fnstsw
or
les
sub
outsl
xchg
out
adc
and
add
fistpl
popf
dec
popf
repnz
into
sub
mov
scas
pop
or
pushf
cli
mov
pop
mov
mov
shll
inc
call
insl
inc
xor
jae
ljmp
iret
into
inc
add
xor
fisubrs
sub
out
pushf
lret
xchg
mov
rcrb
and
fcompp
ljmp
sub
xchg
push
orl
jl
mov
sbb
mov
inc
movsb
jge
xor
repz
sbb
ret
xchg
xorb
mov
mov
stos
fdivrl
shll
pop
sbb
daa
xchg
dec
lock
imul
rol
cmp
mov
lahf
fwait
mov
outsl
scas
mov
cmp
sbb
pop
add
movsl
dec
cmp
mov
inc
cmc
ret
mov
push
pop
jmp
add
inc
mov
sub
xchg
xor
testb
adcb
arpl
pop
add
ret
and
mov
push
mov
enter
pop
add
mov
xchg
in
cmp
dec
stos
sbb
inc
sub
jb
mov
sbb
lods
mov
neg
rcr
stos
mov
adc
rorl
popf
sbb
fsubrl
das
mov
rol
out
or
imul
mov
sub
and
xchg
ret
aas
loop
jp
sbb
inc
loop
cmp
jo
pop
cwtl
ljmp
cld
cltd
or
mov
add
stc
ja
fdivrs
fadds
les
dec
cs
das
ljmpw
and
inc
push
icebp
addb
sub
push
incb
and
ss
sbb
lds
loope
dec
adc
sbb
add
pop
shll
fldt
dec
adc
lea
jp
fdivs
es
xchg
adc
xor
out
and
xlat
dec
xor
jnp
subb
fisubrs
int
cmp
adc
mov
push
aaa
push
insl
rolb
jnp
cs
in
andb
popa
sbb
cltd
and
pop
dec
sbb
lea
ja
inc
faddl
push
sub
pop
jg
and
outsb
push
push
inc
mov
or
jne
int3
pop
jno
pop
or
xchg
dec
icebp
mov
das
fst
ret
mov
ds
lret
pop
pushf
add
cmp
mov
insb
pop
loop
aas
out
xchg
mov
mov
cmp
push
ljmp
jge
xchg
out
int
adc
push
mov
jle
movsb
in
insl
mov
out
xor
loop
push
or
inc
sbb
std
mov
or
incb
pop
add
dec
aam
mov
test
dec
inc
rcrb
icebp
adc
add
dec
cmc
gs
and
cmp
jnp
packuswb
pop
inc
jge
loop
add
or
psubb
cmpsl
jns
incl
mov
in
jo
push
arpl
ret
and
sub
xchg
jb
cmp
imul
js
addr16
mov
sub
mov
mov
push
ret
aas
or
mov
mov
or
sti
test
into
jle
xchg
fwait
or
popa
fstpt
ret
sub
cmpsb
jnp
or
cmp
add
or
jo
xchg
pop
les
inc
ss
dec
cld
inc
pusha
mov
inc
pop
inc
ret
lea
idivl
mov
repnz
push
arpl
inc
mov
test
aam
test
out
fmuls
adc
imul
mov
sbb
xchg
stos
push
test
mov
les
je
js
cmc
or
sti
test
popf
lret
mov
sbb
ds
or
lods
sub
xor
mov
push
flds
shlb
and
or
mov
bound
xchg
pop
inc
into
les
or
push
cmp
pushf
xchg
sbb
out
xchg
and
in
cmc
mov
cmpsb
lahf
out
daa
loope
in
mov
mov
or
mov
and
lods
insl
fcomps
sub
sahf
fdivl
loop
mov
aaa
mov
out
ljmp
or
dec
sbb
unpcklps
xchg
cmp
jmp
mov
xor
push
movsb
mov
fnstcw
xlat
cmc
int
leave
enter
pop
xor
push
jecxz
push
fwait
push
push
inc
mov
xor
dec
pop
push
adc
lock
mov
cs
push
subl
fninit
add
enter
mov
jns
movsl
and
pop
je
xor
mov
je
sahf
sahf
call
adc
je
popf
adc
and
add
outsb
fucomi
sub
test
xlat
in
in
ret
popf
in
dec
pop
les
xor
xor
xchg
imul
inc
xchg
in
push
cmc
loop
jle
mov
clc
aaa
mov
push
cmp
shrb
ret
loop
jne
je
or
stc
lods
adc
cmp
fs
jno
push
sarb
cmp
aas
xchg
jb
aaa
xchg
arpl
aam
push
xor
iret
mov
aad
test
dec
or
add
cmp
dec
repnz
mov
icebp
mov
jne
jge
or
jp
mov
push
mov
mov
add
stos
sub
inc
push
push
fildl
pop
shll
inc
push
sub
mov
push
xlat
jnp
push
xchg
sti
cmpl
lret
add
fadds
stc
imul
add
loop
cwtl
cmpsl
push
inc
in
and
leave
fsubrs
sbb
cmp
pop
dec
push
push
loope
push
and
fimull
xor
sarb
or
test
and
cli
les
loope
ds
outsb
mov
and
pop
xor
lods
ds
jnp
call
les
shlb
ljmp
mov
add
mov
xlat
jle
xor
mov
push
xchg
out
jb
iret
sbb
push
ss
cwtl
cmc
lret
bound
push
push
add
sbb
sub
xchg
outsb
jo
inc
or
cmp
sar
inc
ret
faddp
stc
test
fdiv
stc
sbb
jge
popa
cli
in
xor
mov
insb
adc
add
adc
push
inc
push
jbe
pusha
test
or
pop
std
jge
mov
ja
add
pop
xchg
jne
popa
dec
xchg
add
cmp
cld
pop
scas
jb
mov
xlat
cli
xchg
push
and
mov
and
das
rorb
dec
test
add
adc
mov
cwtl
test
push
je
daa
adc
mov
mov
push
ret
dec
loope
sub
rcrb
scas
in
sub
gs
test
pop
xor
xor
adc
andb
movsl
sub
and
int
mov
xchg
ljmp
dec
lret
rol
iret
mov
pop
movsl
je
loope
xchg
pop
outsb
adc
add
and
and
or
faddp
mov
jg
outsb
es
std
mov
andb
adc
sbb
rorb
adc
sti
in
fnstsw
add
pusha
cmc
arpl
xchg
mov
or
and
adc
outsl
mov
idivl
loop
inc
les
out
pop
mov
mov
in
fistpll
add
icebp
aas
xor
in
jns
scas
pop
mov
jno
data16
dec
xchg
adc
sbb
addr16
push
in
movsl
adc
stos
add
imul
aas
pop
call
repz
stc
fistpll
dec
dec
xchg
push
gs
in
push
je
mov
xchg
add
ds
sub
adc
lock
mov
or
xchg
xchg
mov
push
sub
shl
movq
inc
and
push
push
jmp
mov
or
cmp
push
lahf
mov
aas
subb
xor
sub
in
mov
dec
pop
mov
xor
imull
test
movsb
cmc
les
in
and
cmpsl
loope
pushf
imul
mov
in
ds
in
jno
mov
outsb
cmp
scas
daa
mov
mov
and
mov
push
or
push
ja
xchg
nop
stc
cmp
push
xchg
nop
jo
int3
frstor
pop
or
sahf
subl
les
scas
and
pop
mov
fnstsw
mov
scas
jo
push
stc
sarb
daa
aad
bound
jg
sub
jne
add
adcl
add
cli
mov
test
push
adc
mov
fwait
inc
shrl
outsb
js
ljmp
sub
mull
test
out
nop
add
xlat
or
ds
mov
xchg
push
mov
pop
clc
fstpt
and
hlt
sbb
out
mov
mov
stos
cmp
xchg
cltd
rcrl
push
fdivs
ss
lret
xor
add
daa
lret
xchg
mov
push
jno
push
push
add
mov
cwtl
xor
sahf
cld
dec
mov
sbb
pop
bound
or
mov
or
ret
in
mov
or
xchg
cli
jmp
addr16
stc
hlt
scas
gs
mov
pop
inc
mov
rcl
stos
push
inc
cwtl
mov
adc
push
insl
lea
push
pop
call
stos
pop
jbe
mov
stos
sub
fwait
popf
sbb
lods
mov
or
in
aaa
jle
cmp
ljmp
lret
jae
scas
ss
in
mov
or
push
xchg
lods
mov
mov
rcrb
cmp
subb
push
jle
xchg
bound
or
test
xlat
pop
add
int3
mov
adcl
adc
jmp
sbb
and
test
shrl
xchg
sub
or
xchg
sbb
sbb
ljmp
mov
xchg
xchg
mov
pop
rorb
popf
adc
out
mov
rorb
dec
mov
add
repnz
pop
insl
jae
jae
push
bound
mov
xchg
dec
jb
inc
hlt
xor
pop
jle
pop
pop
insl
push
lcall
add
xchg
lcall
clc
cmp
xchg
pop
and
xlat
fcmovb
pop
cld
pop
sub
sbb
jmp
gs
push
fistpl
je
add
jge
out
mov
inc
or
dec
push
mov
fstl
in
out
sub
inc
pop
mov
xor
or
data16
fsubl
ljmp
xor
dec
add
jmp
inc
or
or
shrb
cmc
lea
and
stos
popa
and
popa
je
adc
and
and
xor
inc
pop
inc
outsl
xor
push
adc
jp
cltd
mov
pop
mov
sbb
out
mov
cli
or
jl
roll
or
fisubs
out
pop
lds
adc
cli
loope
push
leave
cmp
xchg
pushf
es
adc
rcll
dec
lds
push
pushl
mov
xchg
ss
push
sub
jecxz
sub
in
add
sub
das
iret
cmc
push
xchg
mov
js
jg
test
cmc
or
sbb
pushw
sub
mov
xor
sub
mov
es
test
push
loop
pushf
and
fdivrs
scas
stos
hlt
sar
lock
and
outsl
sbb
dec
lahf
fs
jle
jbe
mov
or
xlat
insb
xchg
add
xlat
xor
jmp
cwtl
and
sbb
pop
xor
je
js
mov
pop
inc
shrb
pop
mov
nop
and
cmpsb
enter
adc
shrb
adc
outsb
jmp
dec
adc
pop
test
jns
int
fildl
jbe
jecxz
xchg
push
jl
popf
push
xchg
mov
xchg
std
xchg
or
mov
lds
jmp
inc
push
popa
mov
jp
xor
sahf
push
push
enter
movsl
adc
mov
mov
adc
pop
insl
jno
push
sub
xchg
adc
ficomps
orb
std
idiv
mov
mov
pmullw
or
or
jp
aam
sarb
mov
and
xchg
and
inc
adcb
sub
jns
inc
jbe
cmp
push
xchg
imul
incl
or
inc
mov
out
push
orb
mov
loopne
dec
icebp
lock
lock
cmc
lea
insb
aas
pusha
lahf
jae
dec
fsub
lcall
sbb
test
fnstenv
pop
int3
mov
add
xchg
das
jbe
stc
jbe
jb
cld
mov
outsb
sbb
loopne
push
cmp
insb
popf
xor
or
adc
mov
mulb
loop
cwtl
or
test
sti
jns
pop
mov
rcl
shr
addr16
lcall
sub
jp
push
push
cltd
pop
in
int
inc
out
adc
and
xchg
aad
cmp
repnz
dec
push
aas
jl
rcl
test
add
push
pop
sub
mov
inc
mov
mov
jl,pt
hlt
push
rcll
push
pop
mov
cmp
mov
int3
or
mov
cmpsl
in
add
nop
pop
inc
stc
or
mov
mov
subb
push
jbe
nop
lret
push
and
inc
xor
repz
and
sbb
and
data16
add
cmp
incl
and
jl
adc
xchg
inc
add
out
jo
loopne
pop
mov
xchg
movsl
repz
cltd
call
repnz
pop
notb
into
adc
pop
dec
mov
std
xlat
xchg
xor
fs
lcall
stos
xchg
outsb
movl
int3
call
int
fcompl
adc
add
xor
push
jne
test
in
mov
gs
mov
xor
or
mov
cmp
jge
lods
mov
push
mov
xchg
imul
lcall
xchg
out
jmp
shlb
cmp
mov
mov
push
add
push
push
pop
and
jl
mov
or
xchg
jno
sti
lock
out
inc
test
mov
sub
lahf
push
stos
cld
repz
jbe
inc
cmp
pop
movsl
stos
jecxz
rcrl
sbb
xchg
and
dec
rorl
sahf
fdivs
int3
add
stos
mov
ret
mov
in
lea
xchg
sub
mov
in
lods
pop
std
jecxz
jae
jno
dec
rcrl
daa
pop
sahf
hlt
push
mov
sarb
in
xor
and
pop
into
jmp
fisttps
push
adc
pusha
and
xchg
jnp
xor
adc
fs
mov
and
jne
lcall
int
lods
push
cs
ljmp
mov
mov
inc
loope
xorl
mov
push
inc
xor
jmp
in
mov
jbe
test
pop
pushf
pop
movsb
jl
cmp
pushf
jnp
mov
sub
pushf
out
cmpsb
mov
fdivrl
push
lret
mov
sub
mov
sahf
xor
push
pushf
clc
daa
or
push
dec
dec
jecxz
ss
pop
mov
loop
inc
pop
into
arpl
mov
jecxz
pop
xchg
lods
repz
lock
mov
push
fwait
dec
mov
out
jmp
cmp
rolb
pop
clc
mov
subl
rdtsc
pop
bound
mov
fmuls
adc
and
mov
sbb
cmp
mov
cmpsb
lret
pop
inc
ss
sub
cmpsl
imul
ds
jbe
out
rorb
aas
cmp
push
out
inc
inc
scas
setb
pop
inc
test
push
xchg
jge
xchg
into
inc
xchg
bound
ret
ret
sub
ss
mov
sarb
aaa
push
dec
pop
ja
icebp
adc
insb
and
outsb
push
add
orb
shll
or
mov
rorl
mov
and
movsb
lea
push
dec
push
push
push
movsl
repz
bound
rsqrtps
adc
fcmovnu
jo
mulb
pop
xchg
xchg
ljmp
hlt
adcb
ss
stos
mov
mov
fisubl
dec
push
test
cmpsb
shrb
movb
into
or
sub
jp
add
popa
scas
popl
mov
data16
aas
fldl
in
and
daa
fcoml
add
push
test
adc
fldl
xchg
das
push
cwtl
rcl
arpl
mov
dec
push
mov
lea
mov
repnz
mov
sahf
dec
pop
mov
mov
out
xor
inc
shlb
pop
shll
xor
cmp
shl
mov
lcall
and
xchg
sub
fisubs
push
std
sbb
popf
push
fucomp
iret
cmpsl
push
in
jno
cmp
jmp
add
fmull
xor
inc
mov
sarb
sbb
out
inc
lcall
dec
test
imul
out
pop
fnstenv
add
data16
stos
and
iret
pusha
push
cmp
shlb
and
add
frstor
xchg
sub
mov
and
sti
push
cmpsl
xchg
xchg
xlat
sub
or
fmull
inc
dec
pop
cmpsb
jmp
call
dec
cmovo
fsubrp
and
test
add
inc
pop
adc
inc
mov
cmp
dec
je
cld
hlt
xchg
loopne
pop
push
enter
clc
xlat
sbb
fsubl
push
and
in
or
hlt
cmc
aaa
fs
adc
mov
adc
adc
push
push
ss
es
mov
add
aam
loopne
js
subl
inc
push
das
cmp
test
aaa
jnp
adc
js
mov
lcall
cld
cmp
xor
mov
pop
mov
push
imul
xor
xchg
jp
xchg
jno
and
test
or
rcr
in
and
jp
pusha
inc
sar
es
pop
lds
dec
pop
pop
xor
dec
adc
xor
mov
insl
push
mov
mov
mov
arpl
jne
andb
out
push
aad
ret
rolb
xor
lods
frstor
loope
pop
pushf
pop
mov
xor
mov
sbb
lret
rcl
scas
rcl
cltd
adc
je
xchg
repnz
mov
mov
add
gs
dec
shrb
sbb
xlat
sub
mov
add
inc
ret
pop
int3
pop
pop
adc
cmpsb
xchg
outsl
jne
jne
pop
mov
push
mov
adc
lret
xchg
adc
aas
andl
xorl
dec
fs
mov
mov
xchg
mov
or
pop
add
xlat
or
cmp
cld
aam
mov
cmp
outsl
cltd
pop
ret
rorl
les
clc
rcll
adc
push
lock
jg
stos
popf
push
dec
sahf
push
testb
out
dec
inc
out
outsl
mov
lock
push
xor
jmp
xchg
notb
mov
or
nop
test
jmp
ja
push
fs
outsb
xor
fwait
xlat
lahf
mov
jno
sbbb
xor
inc
xor
cmc
aaa
mov
mov
orb
or
and
int3
mov
xor
adc
popa
push
sub
adc
jl
test
iret
dec
rorb
data16
stc
fs
es
lret
movsb
mov
mov
fildll
cmp
pop
jle
gs
nop
mov
sbb
shlb
lods
dec
xchg
sub
fadds
or
fwait
sbb
int3
push
push
add
jbe
cmp
jnp
imul
mov
mov
aam
in
fmuls
inc
fnstenv
jg
ljmp
loope
pop
mov
pop
mov
jns
fmuls
fstps
ljmp
cmp
call
jecxz,pn
fs
mov
or
decb
xchg
xlat
sub
aam
jnp
movsb
xchg
ror
add
pop
push
stos
aas
aaa
mov
or
dec
mov
mov
add
roll
jecxz
sub
aad
popa
jo
add
sti
sub
int
jbe
sub
mov
rcll
cs
adc
push
sbb
dec
pop
add
dec
data16
inc
add
fiaddl
dec
in
xor
mov
and
aaa
adc
cmp
cmp
inc
jbe
push
shll
ja
les
xorb
mov
adc
sbbb
cmp
add
in
ljmp
pop
mov
pop
dec
push
sti
xchg
inc
sub
jmp
mov
inc
pop
mov
xchg
pop
pop
mov
outsb
cmpsb
insl
push
mov
pushf
jp
lods
jg
inc
ret
rol
mov
pop
cwtl
icebp
stos
stc
mov
ret
dec
sbb
repnz
sti
lea
xchg
lcall
out
test
xor
sbb
xor
adc
lret
clc
jnp
xchg
xor
mov
subb
outsb
sub
or
or
fidivs
pop
out
stos
sub
cmp
adc
call
mov
pop
repnz
je
cmp
jmp
mov
sub
adc
aaa
jno
fwait
cld
xor
dec
sbb
add
dec
jns
scas
mov
movsb
mov
jecxz
xchg
jno
pop
sahf
enter
fwait
xchg
mov
push
xchg
out
lret
lods
jnp
fisubl
sbb
cmpsl
pop
and
popf
ljmp
scas
push
mov
lcall
xchg
push
mov
or
mov
arpl
or
inc
xor
sub
into
sbb
pop
jmp
fwait
dec
cmpb
popf
inc
push
mov
cmpsl
sahf
sbb
and
lret
push
sti
ss
cmp
loopne
cmp
adc
fcomi
insb
sbb
xor
jae
mov
xor
mov
xor
iret
xor
enter
mov
movsb
mov
sbb
jle
std
jp
cli
push
iret
cmp
or
aad
arpl
adc
dec
dec
idivl
dec
lods
stos
cmpsb
pop
xchg
inc
add
das
pop
cmp
ja
mov
push
icebp
cmp
and
push
xor
adc
jo
and
sbb
and
inc
pop
mov
mov
and
dec
sbb
sbb
jmp
pop
out
dec
test
cmp
add
insl
jmp
fisubrs
mov
stos
test
in
jb
mov
imul
jo
faddl
imul
lcallw
xchg
stos
in
fnstsw
data16
cmpsl
inc
mov
adc
cmp
adc
shrl
dec
and
dec
push
jo
mov
and
repnz
push
insb
jae
xchg
sbb
rorl
xor
jne
mov
pop
out
cmp
lods
hlt
stos
push
clc
shll
dec
xchg
adc
das
popa
dec
push
sar
ret
incb
mov
mov
repnz
outsb
pop
movl
loop
mov
dec
lahf
or
cmp
idiv
addr16
lret
cld
ret
fldenv
pop
lcall
push
push
inc
cwtl
and
mov
or
cwtl
lcall
mov
sub
cwtl
mov
push
pusha
mov
fmul
inc
hlt
jns
or
jmp
adc
sub
jl
aam
push
fwait
pop
xor
inc
addb
xor
inc
les
imull
in
pusha
cmp
sbb
std
adc
mov
js
mov
lods
dec
cmpsl
test
cmp
jmp
cmp
mov
and
fldt
add
pop
mov
sbb
or
lds
and
leave
and
nop
data16
js
xchg
and
xchg
push
sub
mov
pop
ljmp
jns
in
jp
stos
xchg
fucomi
mov
icebp
sub
fdecstp
mov
push
outsl
dec
in
cmp
xor
xchg
pop
xchg
xchg
aas
cwtl
mov
popf
sbb
dec
int
cltd
xor
dec
int3
push
mov
loop
loope
sub
jl
dec
mov
cmp
out
mov
xor
adc
imull
test
int3
rclb
lret
out
fwait
mov
es
push
inc
mov
and
or
inc
mov
push
cmp
dec
xor
pop
fisttps
mov
mov
xor
xor
daa
mov
push
sahf
hlt
jecxz
or
in
xchg
jecxz
test
sbb
test
loopne
ss
cmp
push
in
lcall
push
sbb
jno
call
les
dec
xor
cmp
cmc
loopne
loop
pop
push
cltd
sub
fwait
push
lcall
lcall
sbb
fs
mov
das
cmp
int
fidivl
imulb
mov
sbb
pcmpgtb
imul
sbb
or
jo
xor
mov
int3
enter
out
pop
and
dec
xchg
or
jo
jp
add
lock
xor
dec
push
cld
call
jbe
das
pop
inc
ja
out
insl
fiaddl
inc
mov
push
cmp
fsts
scas
testb
outsl
dec
sub
pop
ret
pop
mov
ficompl
xchg
subb
pop
sub
lcall
or
pusha
or
push
pop
pop
push
adcb
cwtl
inc
arpl
mov
or
sbb
je
ret
cmp
stos
ret
mov
in
xchg
ss
insl
add
dec
xchg
jp
hlt
test
push
sub
push
stos
sti
pop
or
cltd
into
pop
mov
add
add
pop
xor
es
jmp
clc
or
xor
xchg
jns
aam
mov
ret
xchg
jmp
add
sahf
fs
sub
mov
dec
sub
scas
lcall
mov
jg
sti
pcmpgtb
mov
adc
push
sbb
in
lea
cmpsb
jo
mov
and
and
adc
pop
xor
outsb
sub
adc
sbb
icebp
imul
mov
out
notl
adc
or
sub
fistl
idivb
inc
push
lea
fcomip
cmpsl
in
inc
jae
test
mov
fcompl
movsb
add
push
popf
ss
mov
repnz
dec
dec
cmp
sti
fisttpll
mov
imul
inc
dec
rclb
push
jno
jge
repz
es
add
mov
dec
inc
aaa
mov
int
repz
push
mov
xchg
mov
xor
sbbb
sarl
shll
mov
popa
sahf
loop
les
and
test
or
xchg
lods
cld
inc
ret
push
fldl
inc
loopne
or
pop
fildll
fnstsw
cmp
lods
sbb
cli
xor
lret
pop
sbb
imul
sti
jo
inc
in
sbb
mov
into
mov
notl
mov
push
cmp
cmc
xchg
data16
mov
in
and
test
push
xchg
jnp
jnp
ret
jb
je
hlt
or
dec
sub
jb
je
cs
jle
neg
sbb
add
jmp
adc
mov
test
adc
lds
cmp
out
mov
adc
jns
daa
push
xor
adc
shrl
rcll
jmp
iret
xor
and
in
cmp
mov
mov
mov
mov
fldl2t
mov
enter
fwait
push
hlt
repz
sub
lds
jg
stc
rcl
es
jmp
and
ret
test
shlb
pop
loop
ss
scas
pushf
in
cmp
movl
shlb
outsl
test
mov
dec
mov
rcr
cmpsb
stos
lods
arpl
out
mov
xchg
or
aam
dec
test
and
inc
loop
adc
stos
and
mov
jbe
lock
xchg
inc
test
enter
out
mov
in
int3
adc
jg
sar
and
fcos
inc
out
loopne
xchg
xchg
push
or
and
mov
lcall
jmp
pop
cld
rol
inc
cs
ljmp
and
test
mov
fwait
add
mov
push
lret
adc
lds
lcall
and
out
push
push
xor
imul
jo
ret
stos
push
and
sbb
leave
call
fs
sahf
sbb
lock
jmp
push
clc
ror
cmp
imul
in
leave
pop
jno
dec
sti
insl
sti
sub
add
push
push
xor
data16
lret
stc
and
in
out
sub
cmp
test
dec
loope
pop
cld
cmp
sub
jae
jno
mov
push
and
into
lret
cmp
or
ret
clc
bound
call
pop
dec
jp
test
push
jle
dec
adc
repz
mov
popf
aaa
add
mov
cwtl
mov
getsec
mov
data16
out
insl
lret
mov
cmc
mov
mov
push
ret
jecxz
xchg
or
or
subb
dec
iret
cld
inc
testl
mov
fs
push
add
aad
mov
dec
or
arpl
lods
out
mov
sbb
adc
cmpsl
jnp
lock
add
cltd
lods
jo
fldl
rdmsr
addb
adc
clc
cmpl
sbb
xor
adc
nop
scas
out
xchg
roll
sarl
faddl
lcall
xor
mov
xchg
jmp
jmp
or
mov
mov
sub
fisttpll
aas
dec
lods
mov
or
std
jne
in
fcmovnb
sub
loope
and
leave
test
xchg
xor
sub
or
fwait
lahf
movl
push
push
mov
or
xchg
rcrl
lea
dec
mov
sbb
orb
mull
int
cmp
scas
inc
jne
imull
xor
ss
inc
push
sbb
hlt
test
add
sub
out
mov
cmp
sub
dec
repz
mov
js
fcmovbe
cmpsl
ret
out
pop
jno
loope
push
pop
xchg
push
mov
pop
aad
mov
mov
dec
and
adc
loope
push
or
adcb
ljmp
gs
jbe
loope
ret
aam
jo
fcoms
push
testl
dec
stos
test
in
iret
ret
mov
dec
push
shll
sub
imul
pop
inc
xorl
pminsw
push
data16
jae
test
xchg
out
inc
hlt
andl
dec
fucomi
jmp
xlat
or
iret
lcall
xor
mov
push
adc
inc
xor
inc
xlat
dec
push
movntq
out
inc
mov
addr16
xor
sbb
lahf
xchg
jg
jo
aas
jle
aam
pop
jne
je,pt
dec
inc
xorb
xchg
or
out
push
out
aaa
int
mov
jne
aaa
scas
lahf
fstpt
mov
dec
mov
inc
mov
xor
lret
in
shll
mov
ja
das
adc
xchg
fistps
test
mov
bound
pop
stos
sub
add
cmp
cmp
dec
lock
push
cmp
scas
loop
std
repnz
jae
xchg
xlat
push
cmp
and
mov
mov
test
faddl
pop
es
sbb
mov
clc
sub
push
jne
aad
mov
pop
sub
mov
push
sti
sub
push
mov
es
movsb
jno
cmp
or
imul
xchg
pusha
sti
cltd
cmpsb
jl
sub
or
jae
negb
das
pop
imul
dec
ja
xor
mov
daa
repnz
lret
stc
stc
pop
sbb
aam
pop
std
imul
push
arpl
xchg
gs
mov
cmp
test
imul
jmp
pop
lock
pop
lock
orl
pop
jecxz
dec
adcb
cld
and
mov
int
push
filds
movsb
dec
sti
test
int
stos
cltd
scas
inc
lods
sbb
adc
leave
push
lea
mov
enter
fimuls
mov
pushf
into
inc
repnz
jns
or
jne
out
pop
mov
sahf
dec
ds
sahf
jae
push
loop
test
adc
jae
mov
cmc
xor
mov
or
lea
inc
push
mov
scas
sub
lea
sbb
cmc
ret
push
xchg
pop
cs
cltd
stos
aaa
add
jbe
xchg
cmpsb
push
cld
fsubrs
cmc
nop
imul
fiaddl
cwtl
mov
inc
mov
shrl
jns
jp
push
mov
push
mov
mov
ja
lock
xor
pop
pop
pop
cmp
mov
mov
sti
mov
mov
fnstcw
xor
aam
add
js
add
mov
pop
stos
mov
jne
movsb
xchg
call
dec
adc
lret
mov
js
into
cld
mov
rolb
mov
jnp
adc
xchg
pop
mov
outsl
arpl
fbld
std
les
push
inc
cwtl
ficoml
xor
ljmp
jns
pop
and
addr16
fisttpll
xchg
and
fld
or
jne
mov
scas
shlb
inc
out
lea
xchg
sbb
jno
mov
scas
popf
in
cmp
hlt
push
push
inc
jbe
xor
test
outsl
cli
inc
cld
mov
rsqrtps
cltd
adc
js
push
pop
fstl
in
aas
clc
push
mov
mov
jg
fsub
inc
in
xor
pop
popa
popa
adc
ja
sbb
sti
dec
mov
rolb
les
cmpsb
cvtps2pd
les
sti
jb
add
lods
or
les
out
insl
lret
test
cmp
xchg
push
into
outsb
xor
push
pop
arpl
out
pusha
xor
aad
imul
jl
mov
or
fstpt
inc
lods
fs
mov
push
mov
lds
out
dec
mov
scas
mov
adc
mov
dec
xor
gs
jg
mov
mov
imulb
mov
mov
iret
and
enter
mov
js
xchg
sbb
fs
out
sar
cltd
repnz
xchg
into
sbb
fcompl
ret
push
fcmovnu
xor
dec
ficoml
dec
ret
in
jecxz
mov
push
mov
or
cld
mov
cltd
push
inc
cmp
pop
push
sub
xchg
xchg
and
fidivrl
adc
icebp
mov
push
fnsave
inc
mov
outsl
cmpsl
push
es
insl
jne
outsb
pushf
sub
dec
mov
fstpt
pop
fisttpll
inc
loopne
mov
scas
and
stc
pushf
gs
cmp
nop
pop
jmp
adc
mulb
xor
insb
inc
aas
jne
mov
push
or
adc
mov
add
xchg
cwtl
mov
adc
call
xchg
popa
push
cmp
lret
fwait
or
mov
mov
push
pop
fiaddl
ljmp
aas
dec
aaa
mov
pop
xchg
lods
dec
into
xchg
xor
mov
rcrb
pop
mov
leave
or
jno
call
ficoml
and
fmull
out
sbb
dec
in
sarb
popa
inc
adc
cld
addl
add
sbb
loopne
pop
ret
addr16
xchg
pushf
pusha
jns
and
inc
add
fsubrl
dec
cld
jl
enter
aam
push
out
bound
ret
andl
stos
adc
push
push
jno
loop
xchg
aas
push
xchg
and
jnp
jmp
mov
xchg
cmpb
sbb
dec
lods
jl
jae
jbe
jb
add
mov
jns
push
ss
add
outsb
push
dec
imul
jno
xchg
bound
insb
aam
and
pop
add
push
out
jle
pop
lcall
adc
xchg
mov
jecxz
call
xchg
mov
stos
xor
daa
adc
fistps
mov
fcmovb
aad
outsb
addr16
mov
fdivl
out
cmp
pop
push
jge,pt
xchg
inc
cmp
pop
repnz
and
adc
pusha
lds
xchg
cmp
pop
sbb
push
in
cmp
jo
jg
pop
pop
ss
dec
mov
or
or
xchg
testb
push
mov
rorl
mov
sub
lret
xchg
xchg
adc
push
jne
and
xor
push
imul
addr16
cli
or
call
mov
xor
dec
pop
pop
popf
mov
out
and
gs
mov
mov
add
or
loopne
out
push
hlt
push
test
mov
push
daa
push
push
jns
or
fisttps
int3
aaa
xor
fisubrs
mov
outsb
mov
or
lea
cmp
repz
jge
and
sbb
or
sub
xor
addl
adc
outsl
mov
cmp
ja
inc
push
dec
fs
adc
push
dec
pop
xchg
cwtl
sbb
js
call
sti
sbb
pop
dec
ficoml
adc
or
fwait
push
push
mov
adc
sarl
popa
ror
scas
mov
pop
testb
xchg
push
sti
mov
outsl
insl
push
cmc
fdivp
dec
mov
add
fnstenv
push
ljmp
int3
cwtl
loopne
add
cli
out
and
clc
lea
dec
mov
cmpsl
mov
shrl
sub
add
dec
or
out
lea
scas
negl
outsl
add
das
mov
mov
or
add
cmp
add
fmull
cmp
jp
jnp
push
or
push
dec
pop
push
test
and
mov
jmp
and
into
faddp
lahf
mov
xchg
test
ffree
loop
shrb
push
js
arpl
lock
loopne
or
xor
push
mov
cmp
xor
mov
dec
outsb
sub
adc
faddp
fsubp
sub
add
into
stc
loop
jno
cmp
or
xchg
pop
push
enter
arpl
popa
mov
aaa
sbb
adc
xchg
sub
and
rorl
inc
aam
inc
cmp
das
xor
jne
jo
sbb
or
ss
out
lea
out
and
int
into
call
addps
std
dec
push
leave
and
sub
or
mov
nop
pop
and
and
dec
imul
pop
jo
enter
cmc
scas
jnp
and
xchg
into
dec
adc
pop
test
enter
mov
cmp
ds
nop
mov
push
test
adc
and
insl
cmp
mov
fs
scas
inc
lret
out
fists
lds
in
dec
inc
mov
push
aas
inc
push
inc
mov
or
cmp
push
fsubrs
sbb
and
jp
imul
mov
popf
mov
cmp
adc
rolb
and
mov
xchg
xor
in
inc
and
or
pop
daa
dec
cld
jl
inc
cmc
and
nop
movsb
push
jbe
ds
outsl
mov
int3
addr16
cmp
mov
js
xor
push
addl
std
and
ret
jp
test
fyl2xp1
cwtl
mov
fsubrs
std
sub
and
repz
mov
pusha
pop
cld
faddl
ret
mov
mov
dec
popl
pop
ss
mov
sbb
scas
dec
fnstenv
sub
shrb
repz
mov
subl
mov
sbb
push
or
mov
mov
mov
jb
dec
lcall
cmp
xlat
sub
stc
js
sbb
lahf
in
lcall
repnz
ret
pushw
lahf
loop
cmp
push
in
cs
ds
dec
cmp
inc
sbb
icebp
das
add
and
icebp
push
pop
sub
ss
jmp
lea
sub
or
faddl
mov
ds
sbb
stos
fwait
sub
insb
rcll
mov
test
xchg
jbe
inc
and
sbb
inc
sahf
ljmp
push
jae
push
mov
pop
inc
sbb
xchg
hlt
out
in
ss
jae
test
xchg
in
jns
pushf
test
enter
enter
lds
mov
and
es
dec
fincstp
mov
push
daa
movl
dec
sub
call
test
out
ret
test
cmpsb
sbb
aad
bound
in
jmp
jge
rcl
loopne
notl
add
fstpt
rcrw
mov
es
out
or
vaddsubpd
insl
popf
cmp
lcall
movsl
push
call
rcr
mov
mov
or
add
setb
inc
pop
out
movsb
sbb
cwtl
es
xchg
push
js
pop
sub
adc
pop
sbb
inc
and
adc
jg
mov
xor
pop
andb
mov
pop
gs
bound
aaa
xchg
orl
sbb
and
fadds
lock
push
jg
test
push
push
adc
adc
or
mov
int
push
decl
cmp
sbb
pop
cmp
sbb
push
and
sub
data16
pop
clc
push
aaa
cmc
sarb
dec
imul
mov
int3
fwait
mov
adc
dec
test
mov
lods
shlb
xlat
subl
orb
push
clc
outsb
add
adc
xorb
sbb
jp
ss
mov
rcl
rcr
mov
gs
test
jg
mov
ret
or
fbld
xchg
aas
es
xor
sbb
and
fdivs
xchg
jecxz
sub
mov
adc
test
inc
je
and
shlb
sub
inc
jb
cwtl
adc
and
dec
mov
scas
fstl
mov
mov
jp
in
lret
sbb
mov
inc
add
and
cmpsl
sub
jo
movsl
xchg
pop
cltd
insl
mov
das
fdivrl
mov
jo
inc
pop
cmp
ret
sub
out
pop
cmp
xchg
and
push
ret
pop
cmp
hlt
test
cmp
push
cltd
sub
subb
lahf
test
sarb
add
sub
xchg
push
sub
repz
jb
or
dec
repz
cmp
xchg
stos
add
ret
roll
push
aad
sub
lds
or
stos
cmp
inc
xchg
test
adc
push
and
ret
clc
cmpsb
pop
cmpsb
loope
shl
arpl
mov
xor
mov
mov
mov
fmulp
jle
mov
cmpsb
hlt
mov
adc
xchg
je
shll
and
and
push
mov
filds
and
mov
push
enter
sub
adc
movsb
sub
adc
fisubrs
and
out
mov
dec
mov
mov
cmc
adc
adc
cltd
sbb
clc
stos
mov
jbe
or
mov
or
fwait
mov
jmp
sbb
xchg
lods
dec
and
test
sahf
jnp
xchg
aaa
ucomiss
sbb
enter
and
inc
push
push
pop
call
dec
inc
mov
pushf
and
or
repnz
push
ljmp
dec
mov
daa
sahf
pusha
mov
pop
push
insb
mov
test
inc
inc
dec
icebp
in
xchg
adc
cmp
in
icebp
push
andb
push
pop
sbb
jp,pn
imul
add
sbb
testl
dec
sarb
repz
dec
ret
xor
leave
push
cmp
add
js
outsl
bound
mov
jae
insl
jmp
lcall
inc
and
xchg
jns
iret
cmp
xchg
imul
stos
add
imul
add
out
mov
dec
add
jp
pop
and
mov
inc
and
pop
fs
repz
out
test
enter
fucom
dec
inc
into
adc
fidivrs
sbb
jnp
sub
pusha
xchg
divl
nop
mov
lods
hlt
adc
test
movsb
mov
cli
call
bound
clc
mov
divb
xchg
inc
pop
sub
stc
cltd
mov
std
sub
push
sti
iret
fnstsw
dec
xor
fidivs
and
push
xchg
mov
fmull
xchg
mov
ret
sarb
mov
jno,pn
insb
cltd
adc
lahf
mov
cmp
js
push
pusha
std
ffreep
inc
and
xor
ret
push
stc
push
orb
inc
jne
dec
lahf
loopne
cwtl
notl
jecxz
cmpsl
cmp
stc
mov
std
dec
inc
jne
fsts
pop
inc
or
lods
xchg
cltd
dec
and
andl
inc
or
push
shl
and
jl
dec
shll
push
xor
mov
aaa
out
addr16
cmp
adc
scas
jecxz
add
nop
mov
aam
sub
xchg
mov
iret
outsb
lods
xor
pop
aas
pop
subps
and
shrb
fcmovu
push
pop
fcompl
lods
and
mov
fld
movsl
and
test
push
js
and
jae
mov
mov
push
ds
sub
cmp
into
jne
sbb
cmp
xor
imul
xchg
mov
add
icebp
jae
test
mov
hlt
incb
jb
enter
insl
jecxz
or
movsb
es
sahf
enter
adc
jmp
mov
fidivs
lcall
xor
fwait
xor
stos
outsb
gs
cwtl
xor
push
aam
adc
aam
popa
lods
cmc
push
pop
sbb
stos
repz
mov
adc
jbe
push
repnz
adc
push
lcall
pop
sbb
xchg
or
cltd
cli
add
gs
stos
push
pop
cli
lods
lret
cmp
jl
xchg
lahf
jne
fldenv
adcl
pop
fbld
or
dec
adc
lods
inc
fs
sub
into
dec
inc
inc
jo
xchg
cs
cmpsl
inc
aaa
out
loop
call
push
repz
xor
add
out
and
xchg
in
test
push
not
cmp
rcrb
dec
cltd
js
outsl
and
and
mov
and
mov
push
icebp
sti
es
pop
clc
mov
pop
adc
je
faddl
sbb
mov
pop
fstps
jno
cmc
lcall
hlt
xchg
dec
add
sbb
sub
stos
aas
inc
sbb
add
testb
test
outsl
or
in
loop
mov
add
aas
or
ja
or
stc
outsb
jmp
ds
and
adc
jno
pop
lds
int3
shll
fnstsw
arpl
mov
or
xor
ror
vmovdqa
sbb
je
lea
in
sbb
mov
outsl
xor
mov
mov
push
popa
add
js
mov
xor
les
xchg
out
dec
mov
lahf
cwtl
popf
pop
leave
jbe
mov
xor
stc
call
loop
jmp
mov
inc
icebp
mov
cmp
jae
mov
adc
xor
fbstp
mov
jno
lret
int3
jo
cmp
in
sahf
push
test
movl
dec
inc
test
js
aas
add
std
jmp
xchg
xchg
in
in
data16
movsl
bound
imul
cmpsb
insl
cmp
mov
xchg
sar
addr16
out
nop
pop
std
leave
mov
ljmp
in
vpavgb
lahf
xor
insb
popf
inc
test
insb
andb
xchg
sub
sub
and
andb
cmp
push
rep
jmp
jg
sub
jo
mov
dec
push
js
sbb
pop
adcl
mov
fstl
jg
sub
addr16
test
and
dec
xchg
icebp
push
and
pop
add
pop
dec
ss
mov
sub
xchg
xor
stos
stos
xchg
call
mov
sbbb
fnsave
aas
and
into
adc
iret
or
sub
fbstp
sahf
xchg
setnp
mov
mov
lcall
lea
sti
inc
int
mov
sub
inc
inc
mov
dec
mov
hlt
movsl
lods
inc
adc
mov
jl
ljmp
xchg
bound
xchg
daa
jl
sbb
insl
pop
mov
gs
xor
sub
jb
mov
xor
xor
popf
outsb
cmp
test
lds
out
lock
inc
mov
push
outsb
and
push
and
mov
sub
cld
jmp
mov
ret
out
push
cs
idivl
in
arpl
test
push
jb
and
call
rcrl
cs
xchg
hlt
sbb
dec
add
inc
inc
pop
test
loope
das
adcb
cmc
bound
add
outsb
sub
push
shl
stc
or
push
or
mov
lods
jge
lods
sub
xchg
pop
xor
je
or
sub
dec
mov
enter
dec
jnp
fwait
je
or
fidivrl
mov
inc
add
gs
arpl
lahf
lcall
or
test
jl
dec
std
das
sbb
xchg
nop
sbb
dec
andl
daa
or
sbbb
adc
jae
and
fstl
add
mov
cmc
dec
push
push
mov
in
adc
jecxz
xor
cmc
cli
jne
cmp
and
lea
adc
pop
std
xchg
test
or
out
sub
cmp
sbb
adc
nop
iret
sbb
mov
xor
or
pop
in
std
cwtl
xchg
cmp
jp
and
mov
fs
push
xor
in
repnz
xlat
jne
mov
adc
pushf
dec
push
ret
shlb
mov
subb
sti
xchg
xor
out
bound
ljmp
add
xor
dec
ror
mov
out
fldcw
xor
stos
push
addl
inc
std
pop
pop
mov
xor
inc
xchg
sbb
mov
push
ds
shrb
mov
int
dec
scas
addr16
push
lret
ficomps
jle
movsl
popf
jbe
cmp
jne
sbb
ds
insb
les
lock
das
xchg
repz
mov
insb
add
adc
fisttpll
sbb
mov
mov
jnp
mov
testl
dec
pop
add
mov
pop
gs
and
out
int
sti
lahf
adc
dec
outsl
inc
rorl
jp
repnz
pop
dec
clc
jbe
push
nop
loopne
mov
out
aam
popf
ds
sub
add
scas
es
dec
ret
lcall
jp
sbb
xorb
mov
pop
dec
xor
lahf
pusha
in
cmp
and
xor
pop
cwtl
push
int
adc
bound
jae
inc
push
lock
xchg
gs
imul
cmp
inc
in
movsb
in
fcompl
outsb
mov
xchg
imul
and
push
mov
cmp
or
lcall
push
movsb
jecxz
dec
inc
nop
aas
and
mov
pop
std
adc
push
stos
add
imul
push
insb
cmpsl
fwait
mov
in
les
aad
push
in
stos
pushf
or
lcall
mov
pushf
enter
push
mov
cmp
lods
adc
jne
ljmp
xchg
movsl
sub
mov
js
incb
gs
cmp
adc
sub
fwait
push
push
xchg
xchg
mov
push
lea
sub
dec
data16
lods
xlat
add
jl
aaa
imul
mov
mov
mov
inc
nop
xor
loop
jge
stc
rol
clc
int3
mul
ljmp
and
aaa
or
dec
aad
std
push
pop
pop
cmp
imul
popa
cmp
cmp
out
adc
pop
push
cld
add
sti
sub
xchg
call
jg
lret
sub
pop
dec
jl
sub
jecxz
int
inc
jmp
data16
adc
negb
push
xor
fwait
inc
sub
lods
sub
mov
shll
inc
cmp
mov
scas
and
push
jge
sti
mov
push
test
out
aad
adc
adc
js
flds
dec
movsb
sub
or
and
jno
xchg
push
pop
lahf
and
adc
mov
ret
lret
inc
adc
iret
ficoms
hlt
cmp
lret
les
mov
mov
xor
jmp
cli
movsb
xor
sbb
loopne
add
pop
ret
adc
adc
pop
fldl
in
and
push
negb
iret
jmp
dec
push
sbb
pop
icebp
xor
bound
outsb
pop
cmpsl
mov
add
gs
lahf
mov
and
in
loope
jg
inc
mov
das
dec
pop
sti
jns
dec
or
sub
pop
flds
push
pop
addr16
push
shr
jecxz
push
fsubl
mov
lret
inc
icebp
test
stos
dec
mov
and
or
ja
bound
or
rcll
adc
insl
stos
out
jp
scas
data16
shl
mov
sbb
add
sbb
pop
cmpsb
aam
xlat
sahf
pop
add
or
addr16
insl
jle
pop
inc
xor
or
cmp
dec
mov
mov
inc
das
addb
repnz
pop
inc
jns
int
mov
outsl
fsubr
fs
data16
shlb
fcoml
aaa
pop
pusha
mov
mov
sub
dec
xchg
test
inc
and
jne
stos
mov
lret
mov
outsb
call
jle
pop
fcmovbe
cmp
popa
call
mov
insb
repz
inc
les
incl
lods
ret
iret
add
push
arpl
jbe
and
pop
pop
mov
fs
neg
push
dec
imulb
mov
xchg
mov
in
cmp
or
push
shll
xchg
jmp
sbb
and
xor
xchg
jg
in
mov
into
push
pop
add
idivb
and
rcrb
out
mov
cmp
and
inc
data16
xchg
mov
xchg
mov
lods
inc
jb
cmp
push
sbb
push
out
mov
mov
mov
xlat
add
jb
inc
outsb
aad
push
mov
push
mov
pop
bound
fcom
mov
and
mov
in
cmp
std
test
test
hlt
sub
add
pop
push
scas
dec
repnz
clc
pop
cwtl
jmp
sahf
pop
loop
std
imul
jmp
sbb
mov
repz
cmpsl
dec
daa
movsl
imul
ficoml
cmp
add
jno
dec
mov
fldl2e
or
pop
push
push
mov
std
stc
les
or
adc
out
dec
mov
adcl
pop
outsl
lods
sbb
sub
lds
jne
scas
inc
fmulp
daa
sar
test
icebp
lock
xchg
mov
in
addr16
gs
jo
pop
clc
pop
roll
aaa
jne
rorl
mov
aaa
sbb
jl
mov
adc
cmp
mov
and
cmp
cld
fbstp
outsb
mov
inc
scas
or
fs
sbb
sub
clc
je
add
or
out
and
ror
push
pop
mov
xchg
cltd
pop
add
mov
jnp
fiaddl
or
mov
stos
xlat
or
inc
test
icebp
std
mov
insb
daa
jo
negl
popf
repz
jne
mov
shll
mov
jmp
jle
add
pusha
pop
jo
adc
xlat
inc
push
dec
mov
pop
cli
jge
jecxz
xchg
pop
push
inc
jno
arpl
fisttps
mov
inc
jle
jle
jae
sbb
dec
scas
aas
pop
pop
outsb
lods
mov
movsl
push
lcall
clc
rclb
sub
icebp
in
mov
sub
inc
jl
mov
movsb
cmpb
xrelease
jle
in
lock
pop
sub
decl
adc
out
insb
int
or
or
icebp
pop
push
testl
and
or
pop
sbb
mov
icebp
test
ds
jle
insb
pop
scas
mov
mov
fcos
or
repz
mov
jnp
cld
push
clc
hlt
push
mov
rorl
fiaddl
sub
mov
sub
xchg
rolb
xchg
rcrl
lret
add
cmp
out
jmp
fdivs
std
lods
and
lods
and
lock
sub
mov
ret
lds
leave
clc
repz
mov
mov
jmp
ds
jno
adc
cmpb
scas
mov
outsl
push
mov
scas
jbe
jp
fwait
pusha
push
cmpsb
mov
push
jecxz
mull
push
jge
test
add
inc
lret
jle
es
xchg
incb
js
data16
loope
ss
jge
cmp
cmp
inc
inc
leave
cmp
fsubs
cwtl
jmp
mov
adc
movsb
test
add
fstpt
imul
inc
push
lds
loop
fidivrs
in
adc
enter
aas
mov
mov
jl
cmpsl
in
rcll
gs
and
lret
arpl
push
pusha
push
sbb
ss
cmp
mov
add
out
mov
pop
test
stc
imulb
jnp
or
mov
cli
outsl
mov
add
test
jbe
pop
out
lcall
mov
daa
dec
xchg
or
test
inc
daa
push
dec
jecxz
repnz
inc
das
stc
pop
jne
cltd
xor
lods
jo
aad
sub
and
dec
fwait
cmp
xchg
push
sti
add
enter
mov
cmpsl
pop
xchg
add
jb
push
push
push
add
and
xor
inc
jmp
addr16
sarb
cltd
jmp
adc
adc
sti
sbb
and
sbb
ljmp
bound
xor
mov
imul
add
and
pushf
test
mov
pop
xlat
jnp
pop
push
test
pmuludq
jae
in
jp
cmc
push
gs
stos
movsl
dec
adc
cmp
repnz
jne
stos
mov
xor
fsubrl
fnstsw
mov
and
repz
fldcw
push
pop
insl
cs
sub
lock
testl
faddl
sbb
repnz
popa
or
and
jmp
push
pop
in
js
sbb
arpl
test
mov
sbb
fistl
jle
lea
lods
mov
iret
add
pop
adc
sbb
and
popf
sahf
subb
dec
xor
pushf
dec
js
jbe
adc
and
and
pop
xchg
fwait
mov
fs
pop
mov
dec
xchg
sub
mov
push
pusha
pop
pop
push
in
in
dec
fimuls
nopl
outsl
mov
and
jecxz
out
mov
lcall
cld
cmpsl
icebp
mov
ds
dec
and
and
fsubrl
add
fisubs
aad
mov
fnstsw
mov
addr16
mov
or
mov
adcl
rorl
ss
mov
cwtl
in
imul
xchg
jmp
js,pn
jg
jp
cmp
mov
jb
arpl
out
adc
in
mov
stc
jle
xor
push
jmp
in
add
lds
filds
cmp
inc
jae
nop
cwtl
xchg
push
sub
outsl
pop
jp
fs
daa
adc
xor
arpl
cld
jmp
psrad
nop
adc
push
testl
inc
jg
inc
sbb
pop
xchg
sub
mov
dec
or
popa
int3
or
inc
and
adc
push
push
fwait
sarb
xor
xorb
scas
mov
mov
push
call
xchg
xchg
inc
in
outsl
std
fsubr
pop
fmul
mov
jl
nop
adc
xchg
mov
imul
das
jge
adc
nop
pop
movb
dec
clc
jno
les
push
mov
jp
lea
mov
pop
jl
stos
popa
loope
and
pop
stc
inc
xor
push
pop
push
lea
add
adc
mov
into
push
add
sahf
pop
sbb
mov
jb
inc
and
xor
stc
cli
cmp
pop
adcl
mov
scas
mov
notl
mov
cmovb
addr16
inc
in
cwtl
add
imul
sbb
cmc
and
mov
clc
adc
jo
loop
sub
sbb
xor
cmpsl
ja
jg
dec
push
mov
inc
int
mov
mov
mov
adc
ss
aad
or
incb
ss
stos
outsb
in
rolb
mov
push
mov
pop
popa
shll
mov
mov
mov
outsl
bound
test
ds
jmp
shrb
jnp
pop
lock
push
enter
sbb
push
mov
cmpsb
jecxz
bound
mov
mov
or
icebp
jp
cmp
push
jb
movsl
push
jp
mov
jle
call
aad
sbb
pop
pusha
or
and
std
push
outsl
addb
inc
imul
shlb
sbb
mov
cmp
mov
mov
mov
jge
fs
add
shlb
leave
in
mov
mov
enter
mov
adc
shlb
cmpsb
outsb
fdivp
addl
rcl
gs
test
stos
or
lods
shlb
dec
mov
sub
or
mov
sbb
mov
add
notl
adc
add
mov
loope
fsubrs
aad
in
jo
out
mov
loop
fwait
push
scas
and
cmp
xlat
mov
mov
popf
sub
ret
push
dec
dec
push
push
jae
jb
xchg
xchg
jg
cltd
xor
divl
adc
loop
and
lahf
insb
int
or
int
xchg
int3
mov
out
ja
stos
xor
stc
frstor
fistpl
rcrb
and
stc
jb
xchg
and
push
leave
jo
adc
and
repnz
adc
dec
xorb
fbld
jne
pop
or
nop
dec
cmpb
incb
jae
xchg
push
cmp
lret
imul
shl
mov
iret
ds
fdivl
xchg
pop
mov
xchg
sub
lcall
push
aad
dec
pop
xchg
aad
cwtl
sbb
les
mov
cmp
xchg
sub
dec
or
dec
jbe
and
mov
mov
mov
pop
xchg
cmp
jle
xchg
adc
cld
mov
pop
xchg
dec
popa
adc
adc
xlat
ss
and
dec
lods
pop
lret
fisubrl
sbb
xor
imul
mov
mov
pop
ret
dec
in
fidivrs
and
add
mov
stos
or
jle
scas
push
and
roll
adc
fs
mov
rclb
movsb
xchg
dec
pop
mov
cltd
mov
jnp
push
rclb
fdivs
or
add
add
stos
daa
scas
out
push
xchg
test
mov
adc
loopne
ret
sti
out
xor
mov
pop
jns
mov
sub
ljmp
push
dec
pop
mov
jp
mov
and
cmp
sbb
ja
pop
les
xor
out
lods
push
dec
xchg
stos
and
xchg
fs
fs
push
inc
fdivrs
fidivs
xchg
call
popf
popa
data16
ljmp
insl
sub
cmp
test
jmp
daa
idiv
adc
repz
mov
lret
test
fucom
sahf
inc
stc
stc
sbb
fistl
inc
test
push
orl
cmp
push
sahf
push
mov
pushf
mov
and
jns
adcl
dec
sub
push
mov
cmpsb
mov
subl
mov
mov
mov
in
test
cli
bound
imul
add
mov
add
jae
out
inc
add
in
jae
xchg
jbe
push
int
arpl
enter
adc
or
mov
lds
leave
cmpsl
mov
xorb
xor
aam
int
fcompl
mov
adc
ficomps
data16
inc
pop
jg
xchg
add
adcl
cmp
push
je
movb
jo
jbe
and
pop
dec
fldl
jae
das
lcall
aaa
ljmp
mov
xchg
clc
insl
jle
jge
es
cmp
push
push
push
cmp
mov
push
dec
imul
sbb
sub
out
ljmp
out
loop
out
insl
and
ret
mov
adc
lock
decl
cmp
xchg
dec
cwtl
out
push
cwtl
div
enter
jp
mov
and
pop
inc
outsl
mov
popf
ret
pop
xor
inc
cwtl
inc
sub
dec
mov
ljmp
jne
popf
out
xor
xor
inc
adc
movsl
pop
clc
cwtl
xor
mov
jmp
xor
sub
adc
pop
into
les
xchg
mov
ficoml
gs
repz
mov
ret
pop
rcll
imul
add
cwtl
jge
inc
mov
cmp
ja
cli
mov
ret
shr
ds
jl
pop
icebp
mov
cmp
aas
mov
pop
sub
icebp
jecxz
iret
lcall
or
das
and
or
sbb
rcll
iret
sarb
es
xchg
mov
add
out
sub
and
mov
sbb
cmc
cld
shr
sbb
adcb
dec
dec
pop
int3
arpl
push
sahf
inc
push
push
sbb
je
scas
mov
xchg
xor
lret
xor
adc
push
stos
loop
movsb
scas
cmc
addr16
es
add
push
popfw
push
xor
neg
dec
insl
dec
push
mov
fdivrs
scas
jp
mov
and
xor
inc
divb
mov
loope
cmp
stos
pop
push
dec
test
or
mov
mov
insb
lret
pop
push
and
in
inc
ds
inc
pop
or
stos
popa
addr16
adc
lods
cs
sbb
push
and
mov
fcomp
in
xchg
and
inc
xchg
in
mov
ret
pop
sub
cmp
shll
xchg
testl
insb
mov
cs
lcall
push
sbb
mov
pop
inc
add
cs
insb
xlat
and
cmp
push
sbb
mov
dec
in
fnstsw
and
jno
and
or
push
jb
out
in
add
inc
jg
xor
sti
fdivs
xchg
aas
insl
ret
cmp
dec
or
lret
sub
and
sbbb
mov
sbb
xor
cwtl
movsb
sbbl
jno
push
into
dec
and
cmp
jmp
mov
repz
lods
xchg
pop
shlb
jnp
fnstenv
inc
fcmovne
data16
loope
addr16
lea
repnz
cli
sahf
loop
push
mov
mov
mov
xor
or
popf
mov
inc
mov
pop
outsl
pop
push
les
in
sbb
popa
dec
inc
mov
xchg
push
mov
fidivrs
inc
lock
cmp
test
pop
test
fsubr
hlt
xchg
sbb
mov
and
xchg
and
sti
and
lret
pop
xor
and
icebp
fildll
pop
stc
in
or
leave
les
jae
nop
jns
xchg
dec
add
fisttpll
xor
pop
lock
push
mov
xchg
cmc
xchg
mov
jo
in
and
or
out
out
scas
dec
dec
lret
mov
lock
lock
xchg
int
dec
sub
adc
inc
mov
inc
fs
pop
push
inc
divl
in
enter
mov
or
lcall
adc
cmpsl
and
sbb
ss
xor
adcb
mov
loope
cmp
gs
push
pop
jno
movsb
test
aaa
aam
pop
ljmp
xchg
pop
nop
gs
sub
sar
and
and
jno
inc
aam
xor
outsl
push
add
mov
push
push
mov
lds
popf
leave
sarb
pop
and
cmc
out
insb
add
mov
xlat
ret
xchg
jp
jo
popa
fisttps
inc
mov
cltd
jno
sbb
dec
ds
inc
movsl
xlat
pop
insb
icebp
fs
cmpsl
and
mov
push
mov
and
jae
lcall
in
cmp
push
jle
out
test
sbb
and
je
sbb
fxch
fildll
test
clc
and
xchg
in
hlt
pop
aam
push
mov
push
fiaddl
xchg
stc
cmpsb
stc
or
mov
out
mov
sub
mov
xchg
jl
lret
mov
lcall
test
add
ret
mov
aaa
es
and
rclb
mov
outsb
xlat
dec
sub
cli
imul
out
pop
icebp
jo
mov
into
out
mov
push
loopne
mov
sub
mov
xor
mov
outsb
inc
pop
sub
outsb
loopne
mov
add
daa
imul
sbb
fsubrs
repz
jne
mov
sbbb
or
arpl
inc
sbb
daa
mov
cmc
push
mov
mov
push
ret
or
mov
bound
cs
xchg
hlt
mov
gs
mov
je
in
shll
stc
arpl
cmp
adc
cmp
cs
jo
pop
in
fdivrl
movsb
shll
pop
andl
sbb
stos
pusha
mov
mov
in
mov
sahf
and
push
jbe
in
jne
push
adc
lcall
cli
filds
je
stos
adc
mov
sahf
xor
xor
xor
cmp
and
push
sti
push
add
mov
mov
out
daa
lcall
push
push
xlat
js
repnz
ss
orl
adc
inc
fldt
call
push
pop
mov
add
push
adc
sub
mov
lret
test
jp
mov
aas
test
movsb
int3
sarl
inc
add
pusha
pop
rorb
insb
and
sub
dec
out
mov
lock
sub
data16
ret
jnp
test
add
pop
repnz
add
scas
sub
pop
xorl
adc
loop
adc
or
jmp
clc
out
mov
inc
pop
sbb
xchg
lds
scas
fbld
call
int3
out
daa
inc
mov
sub
and
jge
scas
std
test
addr16
lods
mov
int
and
cmc
scas
mov
push
aad
pop
lods
jnp
dec
mov
js
dec
adc
jne
jo
fstp
test
jnp
movsl
cmpsl
nop
sbb
or
popa
icebp
aaa
in
leave
loop
lahf
pop
mov
mov
pop
jb
fildl
ljmp
sbb
jp
push
rcrl
ds
out
push
dec
and
stos
or
test
data16
and
inc
inc
pushf
push
dec
xor
mov
rcl
popf
mov
mov
cwtl
popf
lods
jo
iret
lea
clc
shrl
jp
pushf
dec
xor
into
lret
or
aaa
sbb
add
leave
mov
mov
xor
jle
jbe
rolb
mov
sub
sahf
out
dec
lods
test
fwait
jg
test
mov
into
pop
into
hlt
inc
notb
fisubl
jno
jns
in
xor
sahf
or
ficompl
into
mov
pop
js
cmc
and
mov
cs
cmp
and
je
fimull
scas
lds
cmp
cmp
pop
loop
xor
sbb
pop
inc
inc
and
daa
aaa
mov
push
and
call
inc
pop
mov
adc
jns
add
pop
sbb
fcompl
addb
test
sti
fisubl
jle
test
mov
or
jnp
sti
add
fldcw
adc
fsubl
pop
pop
je
aas
push
movb
outsb
in
fucom
or
shlb
adc
cmp
pop
enter
pop
icebp
fisubs
sub
jb
cmp
sbb
inc
test
dec
sbb
repz
orb
iret
int
loop
jo
jmp
roll
addl
pop
outsb
fidivrl
arpl
and
lret
mov
mov
pushl
tzmsk
jae
mov
jl
lods
lea
cld
mov
xor
stc
xor
fisubs
fcom
movsb
popa
call
cli
mov
and
ljmp
push
fbld
push
push
push
xor
jb
insl
xor
adcl
test
sbb
hlt
xor
pop
repnz
sbb
imul
xor
jle
dec
mov
into
xchg
mov
aam
adc
add
cli
push
dec
stos
cmp
push
mov
ret
les
mov
es
in
movsb
or
repnz
inc
xchg
ficompl
mov
test
mov
add
mov
and
das
mov
cmp
mov
in
stc
imul
cs
nop
mov
loop
sub
insl
dec
cmp
out
fisttps
je
in
dec
and
ret
pop
sub
inc
mov
push
xor
xor
in
mov
fcomp
cmp
arpl
xchg
jp
and
inc
aam
fisubrs
push
pop
or
xchg
mov
lahf
cmpsb
lds
mov
xchg
test
outsb
cmp
pop
and
mov
add
fwait
mov
mov
lods
lods
push
jmp
sbb
mov
lods
sbb
lret
ret
pop
pop
sbb
or
jmp
gs
leave
stc
ss
out
lea
loope
cmp
shr
mov
push
xor
mov
ret
push
mov
lods
icebp
data16
pop
mov
pop
lcall
cmp
mov
cmp
push
push
jge
or
clc
mov
sbb
aaa
je
mov
sbb
lret
add
adc
rorl
daa
xor
ret
lods
jg
divb
jmp
les
xchg
and
push
leave
std
jns
jnp
pop
mov
jmp
fsts
jno
orl
inc
mov
cmc
push
or
push
cmpsb
call
gs
add
pop
repnz
mov
in
jp
jle
jmp
push
fwait
xchg
insb
cmc
or
and
bound
lahf
lods
cmpsb
sub
les
mov
jb
clc
data16
adc
stos
mov
jb
xor
push
mov
stos
and
repz
xor
jbe
int
repnz
push
lods
adc
add
iret
add
nop
add
mov
push
jl
xchg
jp
inc
mov
fld
or
adc
mov
and
insb
jp
mov
mov
fmul
lods
mov
stos
mov
scas
pop
ja
xchg
cli
dec
sti
push
or
fsub
cmpsl
xchg
lock
pop
and
mov
add
ret
cmpl
mov
dec
jno
xlat
aaa
fidivrl
adc
ret
add
les
adc
lods
xchg
xchg
jg
add
ret
test
scas
adc
dec
mov
xchg
pop
mov
cmp
cmp
cmp
mov
lock
addr16
dec
imul
inc
mov
lcall
jo
rolb
clc
fnstenv
dec
or
dec
stos
sbb
sbb
mov
mov
mov
push
into
mov
mov
mov
in
sbbl
stos
movsl
pop
xchg
or
das
add
subps
push
jae
xchg
jo
jmp
je
aam
lds
push
cmpsb
aam
inc
jp
cmpsl
sbb
and
mov
cmpsl
imul
sub
pop
sub
jp
lcall
mov
sbb
in
pop
sub
sbb
dec
add
dec
jne
mov
jmp
in
adc
fs
outsb
lcall
pushf
and
xor
inc
xor
pop
push
ror
lret
and
cmpsl
enter
xor
jge
xor
mov
ljmp
mov
mov
cltd
sbb
fisttpl
out
inc
in
std
push
mov
inc
cmp
lds
push
dec
jp
sbb
fwait
and
push
jmp
add
sub
pop
aad
pop
sub
fbld
cli
dec
dec
cld
xchg
adc
nop
mov
pop
scas
lods
lea
mov
sub
dec
sahf
pop
loop
mov
cmpsb
gs
inc
cs
test
pop
mov
rolb
out
cmpsl
iret
imul
imul
push
pop
aas
lahf
imul
add
jecxz
dec
xor
inc
xor
push
call
ljmp
imul
lea
je
dec
pop
flds
pop
popf
out
lods
shl
rcrl
scas
jl
cli
in
xor
pushf
stc
andb
or
mov
rorb
fwait
pop
push
push
push
or
and
shrb
cmp
xor
sbb
push
movsb
sub
jp
sub
das
inc
mov
inc
repz
add
sbb
xchg
mov
pop
sbb
divb
aaa
mov
shlb
sbb
mov
pusha
imul
adc
stos
add
lret
jne
and
scas
out
lock
int3
insb
in
je
cmp
cmc
xlat
outsb
jnp
mov
pop
decl
out
xor
fcompl
out
dec
jp
cwtl
arpl
shrl
push
aam
or
loope
jae
dec
int3
loope
and
and
pop
xor
sbb
mov
inc
inc
xor
or
dec
fimull
xchg
je
jb
cltd
mov
push
addl
data16
add
movl
scas
inc
movsb
mov
jb
flds
mov
adc
mov
pop
or
sbb
sahf
and
lock
push
fistps
or
lcall
cmp
lods
insl
push
adc
sbb
push
outsl
in
push
imul
jae
and
insb
xchg
push
inc
call
filds
sbb
ror
dec
and
xchg
sub
pop
jg
int3
scas
sbb
lds
nop
dec
cld
xor
pop
test
pop
or
out
rcl
ja
movsb
sbb
movsb
mov
das
add
sub
jb
imulb
loop
insb
push
xor
cmp
sahf
xor
cmc
enter
inc
cmp
xorb
mov
sbb
insl
gs
sbb
push
mov
adc
jne
jbe
jno
in
scas
mov
add
imul
or
daa
movsl
movsl
fisttpll
repnz
std
out
xor
cs
push
ficoms
aas
add
pop
repz
push
and
ljmp
adc
cli
xchg
cmp
sbb
jge
outsl
ja
shll
cli
pushl
ret
mul
ret
push
lock
sub
leave
xor
out
pop
adc
dec
shlb
pop
cmp
insb
jno
movsb
push
cli
lcall
es
or
push
paddb
aad
adc
fisttpl
sahf
mov
bound
in
or
jp
cld
push
scas
lahf
test
push
cmpsl
out
pop
jae
test
movsb
push
sarb
sbb
sahf
xchg
movsl
filds
jmp
in
adc
and
fstps
aaa
sub
cltd
gs
push
dec
inc
and
arpl
or
mov
insb
mov
xor
cmp
adc
test
pop
sti
mov
jo
pop
mov
lock
and
in
mov
sub
fisttps
xlat
popa
push
repnz
cltd
bound
testb
mov
mull
and
out
es
push
lock
addb
and
or
fistl
mov
pop
push
sbb
xchg
pop
in
and
cwtl
das
and
out
push
dec
adc
or
enter
imul
fsubr
cltd
cmp
cld
dec
lods
dec
mov
cwtl
addb
cmp
push
push
out
out
rcrl
or
arpl
and
shlb
lea
push
push
sub
iret
fistps
cs
clc
lret
push
int
test
push
and
mov
adc
addr16
jns
push
jno
sub
jg
lret
push
scas
inc
push
jbe
stos
or
psubsb
sub
testl
push
cmc
jmp
xchg
jnp
cs
jge
decb
test
ds
test
fiadds
iret
xchg
xchg
push
loope
add
cmp
mov
or
cwtl
sarb
and
pop
out
test
loope
mov
mov
adc
into
shll
push
and
adc
test
xor
mov
aam
jle
enter
sub
and
sub
es
loope
jnp
push
mov
ds
jnp
loopne
shlb
aas
inc
dec
mov
adc
sub
sbb
scas
stos
pushl
cli
push
mov
lcall
cmp
inc
mov
fsubs
faddp
ljmp
pop
into
enter
lock
fldenv
int3
cwtl
sbb
jns
pop
lcall
xchg
fnstsw
pop
cmp
mov
or
pop
iret
ljmp
or
mov
ljmp
add
inc
fs
pop
sbb
push
in
xor
lea
loope
xor
dec
pop
cmpsl
and
or
push
xor
jmp
mov
mov
sub
dec
int
cmpsl
pop
mov
mov
ret
pop
test
mov
sub
ss
push
adc
out
sub
adc
lret
rolb
cmp
sub
dec
xor
push
pushf
xchg
inc
push
out
inc
bound
pop
cmp
xor
pusha
mov
aam
pop
loop
adc
mov
das
outsl
pop
push
imul
inc
pushf
jnp
sbb
pop
jnp
cmp
jne
rorb
roll
mov
loopne
out
ret
mov
inc
cmp
cmp
aam
cmp
mov
xor
movsb
push
scas
loope
shrb
test
mov
pop
push
mov
fisttpl
xchg
xchg
cmp
inc
mov
add
rcr
lock
add
in
jno
imulb
or
je
shrl
insl
jb
fistps
cvtps2pi
xchg
jae
test
sbb
roll
mov
pusha
inc
notl
movsb
ds
fs
push
insl
pop
adc
notl
push
jnp
insb
lods
xor
xchg
gs
out
test
mov
scas
ja
fisubrl
dec
fdivrl
lar
or
sbb
ds
push
mov
into
sbb
xchg
int
stos
ss
cmp
arpl
outsl
aam
cmp
jp
out
pop
mov
adc
inc
dec
xchg
xor
scas
outsl
hlt
jnp
inc
popf
mov
jns
addb
bound
lods
sbb
inc
das
sbb
js
jnp
andb
jge
cmp
push
pusha
fisttpl
mov
xor
push
push
push
or
mov
sub
out
pop
xchg
jae
into
sbb
lcall
mov
fldenv
or
cmc
bound
push
fisubl
cwtl
popl
mov
inc
notl
pop
push
out
cmp
iret
fcmove
dec
cwtl
or
jbe
dec
lret
sub
xchg
adc
inc
addl
sub
push
dec
gs
fdivs
les
stos
add
mov
cltd
adc
cltd
rcr
out
and
clc
xchg
mov
out
sub
movsl
jl
push
mov
or
xchg
dec
and
jmp
xchg
jnp
push
fdivrp
mov
stc
jns
jecxz
mov
aaa
cmp
inc
out
cmp
shlb
sti
jmp
mov
and
fmulp
aam
cmp
sub
sahf
loopne
out
js
push
invd
cmpl
pop
stos
and
in
push
in
mov
jge
in
jmp
insl
pop
sub
xor
adc
shrl
ss
ljmp
les
adc
xchg
insb
fidivrs
push
in
dec
xchg
adc
nop
rcrl
mov
shlb
xchg
mov
dec
cltd
inc
repnz
cmp
mov
cmp
pusha
bound
lock
imul
mov
mov
cmpsb
xor
cld
jp
inc
jo
sub
aaa
icebp
jmp
sub
add
add
hlt
cmp
les
lods
push
mov
hlt
repnz
insl
imul
fdivr
gs
xchg
cltd
sub
fs
add
push
push
jmp
scas
js
cmp
loopne
cmpsb
mov
fstl
or
xor
or
cld
and
fdivp
pop
and
test
push
popa
mov
xor
adc
jno
cld
movsb
sarb
aad
cltd
fwait
outsl
repnz
sbb
int3
lret
push
pop
gs
xchg
mov
mov
cmp
ficoml
rcrl
js
icebp
or
sbb
or
dec
int
jo
cmc
stc
out
pop
inc
sti
aad
mov
cwtl
nop
loope
addb
push
gs
lahf
scas
pop
jle
rcrb
test
jmp
mov
xchg
dec
xor
cmc
std
xchg
fisttps
fadds
arpl
xor
add
push
pop
dec
mov
add
scas
in
xor
dec
icebp
push
rorl
mov
popf
jno
loopne
push
stos
ss
jl
out
dec
mov
test
xchg
jb
adcl
xchg
data16
xchg
cwtl
les
mov
cmp
adc
insb
xor
orl
insb
pop
fidivrs
dec
or
arpl
push
mov
pop
imul
frstor
das
lods
jo
adc
aam
sbb
fidivl
fwait
aas
int3
xacquire
outsl
mov
or
mov
loopne
clc
insl
mov
loope
push
jle
push
fsubrp
xor
cmp
jae
rorb
outsb
out
push
push
mov
pop
mov
jne
jmp
in
cmp
les
cmp
dec
or
cli
les
hlt
pop
pop
mov
test
xor
jecxz
mov
or
leave
fstl
std
xorb
mov
rorl
into
ja
and
mov
mov
lcall
mov
mov
xor
adcl
stos
cli
jns
imul
push
outsl
cmpsl
mov
movsb
sbb
pop
mov
cmpsl
adc
popf
jbe
movsl
iret
int3
dec
movb
mov
or
lcall
insl
sbb
sbb
mov
ds
subl
mov
mov
mov
mov
push
adc
pop
clc
xlat
mov
push
dec
popl
cmpsl
hlt
sbbb
push
mov
cld
inc
pushf
xlat
in
jns
sub
pusha
insl
call
int3
call
mov
push
mov
push
inc
mov
ja
cmpsl
inc
inc
mov
add
mov
fistps
and
xlat
cmpsl
dec
push
xchg
sub
inc
pop
pop
cmp
jnp
jne
mov
les
push
inc
in
cmp
inc
mov
test
fbstp
inc
sahf
xor
dec
mov
push
inc
insb
daa
fimull
fdivrl
adc
fildll
fsts
ret
lods
sti
aam
push
sub
data16
nop
adc
lea
hlt
in
mov
sbb
jbe
sbb
aaa
and
mov
ret
fistps
mov
stos
cmpsl
mov
or
jnp
adc
decl
jno
lds
fistpll
ret
rol
lret
or
outsl
push
xchg
sarb
xor
sti
push
sbb
xchg
sbb
hlt
dec
gs
and
cmp
int
sub
fadds
fwait
scas
add
and
movsb
fwait
or
xchg
scas
dec
cmpsb
pop
mov
minps
outsb
test
pop
adcl
xlat
or
dec
lea
shll
mov
je
clc
mov
sahf
in
and
lods
pop
in
xor
pop
cmp
cmpsl
pop
rorb
lds
movsl
sub
int
shlb
sub
pop
push
sbb
push
jb
xor
in
xor
clc
hlt
test
das
leave
mov
mov
push
rclb
mov
insl
lods
jg
pop
out
dec
pop
jmp
in
cmp
in
shlb
mov
pushf
test
outsl
push
scas
jnp
cmp
cld
stos
inc
cmpsl
out
aad
jo
fldl
out
sub
push
jl
or
mov
xchg
icebp
push
lock
sbb
mov
bound
jbe
jge
push
xor
mov
daa
scas
loop
or
push
mov
test
mov
leave
xlat
iret
stc
push
call
jmp
inc
loopne
mov
orl
jle
popa
xor
in
neg
mov
lods
popf
push
fs
rcll
push
xchg
sub
fdivrs
lea
nop
jne
hlt
ss
loop
mov
fcmovu
daa
in
aas
loop
fucomip
movsb
push
and
or
fwait
mov
int
sbb
ljmp
test
ss
xchg
cs
and
sub
xchg
rclb
push
and
idivb
aam
mov
out
cmpsl
std
icebp
adc
insb
xor
mov
orl
sbb
xchg
dec
out
cmpsl
adc
or
push
cwtl
je
inc
sbb
push
cmc
lret
mov
push
and
call
xor
lods
test
and
ljmp
dec
adc
jne
cld
add
test
fimull
aaa
aam
fwait
add
and
jo
loope
cmp
xchg
ret
iret
mov
addb
pop
call
pop
pop
clc
cmpsl
cli
cmp
cmpsl
mov
jne
xor
mov
cmp
and
cld
mov
push
push
subl
dec
pop
pop
movsb
xchg
xchg
sahf
xchg
in
jbe
mov
std
fnstsw
lcall
repz
fisubrl
push
je
jo
icebp
mov
cmp
sbb
mov
int3
movsl
dec
xchg
dec
pop
fsubl
clc
sti
jne
iret
push
inc
cli
gs
movsb
jg
fimuls
push
adc
jb
repz
cmp
enter
sub
repz
inc
jno,pt
ja
dec
cli
pushl
roll
stos
or
loope
lcall
outsb
inc
jo
and
jns
jmp
pop
outsb
adc
shll
in
sub
scas
popf
add
cmp
push
pop
cwtl
push
push
mov
or
cmp
jae
out
addr16
jb
sub
lock
cmpsb
lods
je
cltd
dec
fs
rcrl
test
lcall
inc
leave
inc
xor
popa
jno
push
mov
incb
jp
inc
push
loop
fisttps
mulb
jne
ja
stos
mov
andl
lcall
cwtl
ret
stos
call
dec
shl
stc
lcall
add
xchg
pop
xchg
orl
movsl
fisubl
cmp
loopne
into
popf
ljmp
or
lcall
sub
mov
sbbb
arpl
ds
lret
aaa
inc
mov
mov
xchg
mov
stc
arpl
ret
sbb
repnz
outsb
call
cmp
cmp
daa
xchg
xor
repz
lcall
xchg
jp
push
cmp
and
dec
mov
dec
mov
push
push
mov
cmp
imul
cmp
push
cmp
shlb
pop
icebp
mov
jg
inc
inc
push
sbb
testb
pop
loopne
push
ja
out
out
add
pusha
out
mov
lret
movsl
mov
jae
pop
daa
bound
dec
pop
mov
lods
or
insl
xchg
or
mov
inc
cmp
adc
repz
xor
sub
xchg
sbb
loopne
fmuls
orb
mov
jb
push
mov
pop
sub
loopne
xor
flds
sahf
ja
dec
pop
hlt
xchg
outsl
xlat
dec
daa
mov
xchg
addr16
sub
mov
popf
imul
notb
push
dec
mov
push
mov
repnz
pop
pop
or
shl
cmp
jge
or
push
jp
test
pop
jp
aad
enter
loop
mov
mov
icebp
add
arpl
mov
jmp
or
jecxz
push
clc
pop
lock
hlt
lock
mov
sbb
xchg
mov
jae
imul
stos
cmp
or
sub
lret
dec
or
adc
add
mov
push
in
popa
mov
fbld
in
nop
mov
or
mov
lea
add
rcrb
call
cltd
icebp
sbb
inc
cmp
call
jbe
ja
pop
xchg
ljmp
dec
xrstors
sarb
mov
add
mov
cmp
mov
push
scas
mov
ret
or
stos
push
push
sub
cmpsl
xchg
mov
add
add
das
cli
add
into
clc
mov
xor
and
lock
gs
hlt
pop
dec
inc
out
inc
sbb
mov
es
xor
stos
cmp
inc
dec
jns,pn
rorl
mov
xchg
in
add
js
pushf
hlt
mov
add
jl
xor
std
ficoms
jl
fs
pop
arpl
adc
lret
xchg
scas
mov
add
inc
sub
mov
xlat
push
insl
insb
and
mov
aam
mov
int
sti
inc
mov
scas
pushf
push
cmp
sub
cld
mov
sub
jmp
cmp
and
xchg
orl
fidivrs
pop
nop
push
popf
mov
cmpsl
dec
add
dec
pop
jbe
pop
jmp
push
shll
aad
mov
das
xchg
sbb
xor
nop
mov
xchg
add
out
and
sub
lret
xor
arpl
or
or
inc
flds
scas
adc
pop
std
inc
mov
bound
and
xchg
cmpb
xor
push
push
test
leave
jmp
shr
lahf
js
lock
movsl
sub
stos
add
push
push
sub
cmp
outsb
call
int3
clc
push
daa
imul
scas
add
pop
test
xor
in
mov
mov
mov
xchg
push
je
mov
push
dec
or
mov
lret
test
adc
scas
fdivrl
dec
cmp
dec
pushf
push
stc
dec
xchg
xchg
xchg
orl
jmp
fldcw
mov
ficoml
rcl
jne
imul
imul
ret
xchg
out
lret
dec
add
fmuls
dec
jae
sahf
cmpsb
in
rcrb
push
stos
jg
mov
add
cmp
add
and
xlat
popf
pop
movsb
int3
pop
jbe
repnz
outsb
mov
lods
jns
mov
push
gs
fidivrs
out
cmp
inc
jo
imul
loop
inc
adc
and
mov
outsb
add
xchg
bound
repnz
cld
mov
roll
jmp
add
movsb
inc
in
xor
lods
out
lea
ss
mov
movsb
cmc
sbb
stc
cmp
lret
outsb
js
insb
icebp
lods
pop
ds
pop
test
enter
ret
jns
int3
sub
repnz
in
sbb
in
pop
ret
sub
jno
addr16
mov
pop
cmp
arpl
jns
mov
pop
rorb
mov
mov
sub
adc
adc
xchg
xor
fucom
test
gs
ss
or
cmpb
fwait
or
std
push
sbb
scas
stc
add
xchg
jne
lcall
js
repnz
push
push
leave
xor
mov
loopne
mov
enter
rcl
xchg
imull
mov
inc
lds
cmpsl
data16
out
cmp
cmc
inc
mov
aas
add
jg
dec
jo
push
cld
inc
xchg
fs
jno
jnp
shrb
mov
cmp
mov
and
mov
xor
pushf
or
int3
lahf
add
cmp
mov
jns
scas
sub
mov
cmp
sahf
call
lock
fdivs
mov
xchg
enter
xchg
rorl
hlt
and
inc
xor
int3
stc
sub
or
enter
mov
icebp
mov
cmpsl
andb
xchg
sahf
push
cmpsl
test
xchg
movaps
clc
lcall
aas
out
in
push
or
je
iret
fisubrl
aas
arpl
jg
cmp
ss
pusha
test
movsb
ret
loope
shll
sub
cs
int
dec
mov
imul
or
adc
push
testl
pop
jae
and
jge
dec
popa
push
test
mov
push
inc
pop
mov
aad
fnstsw
inc
sub
pop
push
push
outsl
ds
test
clc
lret
pop
int
adc
sub
insb
movsl
andb
mov
jmp
popf
sbb
pushf
loope
sbb
mov
mov
hlt
push
mov
jne
movsl
orl
popf
dec
cmp
pop
xchg
je
shrb
dec
stos
inc
cltd
push
xorb
inc
and
pop
jle
cmp
dec
mov
xlat
fisubrs
jp
daa
test
test
add
jnp
outsb
cmp
sub
jns
loopne
add
sbb
jp
into
lret
cmpl
into
xchg
add
fcomps
mov
mov
add
lcall
inc
xchg
sahf
lds
imul
in
inc
subb
in
notl
inc
mov
add
pop
mov
inc
cmpsb
xchg
or
mov
add
xor
pop
xchg
ret
dec
arpl
adcb
sbb
lea
mov
fnsave
push
scas
sbb
cltd
out
test
sarb
outsl
push
mov
sbb
lds
inc
xchg
mov
rorl
popa
cmp
pop
fs
jne
aas
sub
in
fildl
xor
mov
fwait
add
mov
addr16
mov
and
inc
jo
test
push
xchg
inc
push
movb
mov
cld
mov
repnz
cli
mov
pusha
out
pop
js
into
stos
mov
jecxz
shl
dec
icebp
pop
fimull
mov
call
jecxz
adcl
aad
imul
jb
push
jns
inc
out
shrd
sti
mov
push
iret
andb
push
aas
lcall
mov
or
mov
dec
xchg
xor
add
loope
loop
dec
adc
adc
pop
xchg
inc
push
test
lret
sahf
mov
fs
ljmp
rcrb
mov
jbe
movsb
aad
xchg
add
imul
ds
loopne
js
add
mov
push
adc
test
jmp
hlt
push
fisubs
mov
iret
outsl
jg
xchg
in
dec
dec
jle
lock
jnp
fs
jecxz
leave
fs
hlt
jo
std
mov
dec
mov
mov
mov
pop
jns
pop
or
fnstcw
sub
in
add
mov
sub
add
shll
sbb
or
jmp
imul
jne
int
mov
add
sbb
hlt
aam
repz
cld
or
je
aas
dec
pop
fucomp
xchg
sbb
mov
inc
adc
jge
jne
lahf
add
jb
jo
mov
sbb
mov
lahf
lea
gs
jae
lret
out
stos
stc
cwtl
mov
bound
mov
orl
pusha
mov
cli
jno
lods
or
stos
xor
add
dec
pop
imul
cmpsl
jbe
icebp
dec
sahf
sbb
inc
in
lahf
int3
ljmp
fistps
mov
pop
sbb
xor
lret
jns
mov
call
pop
popa
ss
nop
sub
or
out
sti
inc
or
xchg
icebp
loope
jne
repz
mov
ret
push
subl
stos
lock
lods
lahf
ss
cmp
aad
jne
aam
adc
loop
fnstenv
xchg
movsb
xchg
cs
pop
jg
cmp
xchg
cmp
xor
shll
mov
or
mov
jnp
stos
cmp
xor
movsb
dec
sub
cwtl
pop
pop
ljmp
lret
cmpsl
push
je
adc
mov
movsl
add
in
xlat
mov
aad
es
outsl
sbb
pushf
xchg
and
scas
stc
pop
fmul
and
data16
int3
insb
and
test
mov
movsb
and
inc
cmpsb
mov
lcall
jle
ljmp
out
mov
and
std
mov
sbb
mov
add
add
add
cltd
add
data16
or
pop
jno
xor
pop
jns
outsb
pusha
cmp
stc
add
jle
lret
and
scas
jnp
add
push
push
stos
out
mov
fsubrl
rolb
mov
adc
clc
dec
shrl
lods
push
cmp
roll
push
mov
jbe
add
stc
push
in
sar
popf
xchg
jnp
test
mov
add
mov
sbb
adcl
nop
sbb
std
scas
in
out
cmp
leave
cmp
jp
jbe
xor
cmp
inc
mov
cmp
gs
sahf
fildll
test
insb
in
gs
pop
sahf
push
jp
sub
lret
mov
das
inc
mov
add
aas
add
inc
inc
mov
mull
lock
out
aam
adc
cmp
mov
xchg
or
jns
mov
jno
pop
adcl
add
cmp
movsl
mov
icebp
or
dec
aad
testl
lea
fcoms
leave
out
cmp
push
int3
add
and
roll
sub
inc
bound
sub
aad
or
ficoml
jnp
imul
add
xor
loope
je
sarl
rorb
clc
pop
and
iret
mov
cwtl
adc
pop
push
xchg
scas
inc
add
dec
and
cmp
std
adc
fistpl
inc
pop
notb
sarb
xchg
fnsave
sbb
pop
mov
mov
add
adc
jmp
and
movsl
stos
repnz
mov
push
fs
mov
stos
xor
outsl
xor
stos
xor
dec
mov
mov
adc
jge
inc
xchg
std
test
lret
stos
sar
addr16
jmp
addr16
or
in
ljmp
rcl
xlat
shrl
xor
aad
mov
push
imul
addr16
sti
fs
enter
add
mov
loope
in
jb
ret
jle
popa
pushf
mov
jmp
enter
pop
adc
ljmp
aas
cmp
data16
int
pop
sub
les
mov
cmp
out
lret
cmp
hlt
mov
adc
mov
mov
xor
pop
dec
loope
cld
adc
insb
sbbb
in
aas
add
jne
lret
movsl
divl
pop
mov
fs
imul
or
sahf
sub
cwtl
lret
fs
adc
lcall
and
rol
add
mov
shrl
push
xor
mov
test
stos
rcrl
mov
jnp
sbb
xor
subl
lock
dec
test
dec
es
inc
lea
sti
jbe
and
pop
imul
sahf
or
imulb
insl
sbb
sub
insl
adc
or
ret
adc
shrb
mov
xchg
dec
int3
mov
cmpsl
cmp
popa
add
or
hlt
sub
add
test
jb
cs
popf
xor
out
pop
aas
xlat
addr16
add
lahf
rcl
xor
aam
pop
xor
retw
and
xchg
cmpsb
lds
mov
leave
sahf
dec
cmp
leave
test
xor
loopne
cmp
cmp
arpl
push
jle
out
push
mov
inc
insb
adc
adc
inc
movsb
push
pop
jnp
add
or
mov
dec
les
fsts
sbb
pop
and
rol
and
cmp
xor
out
lret
imul
jle
or
mov
stc
jmp
xchg
inc
enter
int3
push
mov
xchg
cmp
das
push
sbb
sub
jge
xchg
pop
jae
fldenv
out
inc
ss
lret
aam
cltd
xchg
jl
lods
mov
or
fsubs
aam
mov
sarl
push
mov
fistpll
loop
test
fistps
out
ja
jne
scas
std
es
test
pop
insb
sub
out
push
iret
ret
lods
jo
mov
mov
inc
negl
lea
iret
andb
or
push
xchg
and
pusha
in
aaa
das
xchg
shrb
arpl
scas
cmc
ds
fdivp
in
dec
cs
imul
fnstenv
out
out
testl
xor
cmp
and
inc
daa
jo
push
sub
add
adc
das
lds
dec
shrl
add
jns
in
call
mov
mov
repz
push
out
pop
bound
and
mov
aaa
mov
mov
lock
xchg
imul
stos
or
mov
orl
add
xchg
xor
jmp
pop
daa
jb
cmpsb
and
jmp
sub
clc
adc
sar
imul
xor
ljmp
call
sub
push
and
sub
test
sbb
sub
add
and
enter
dec
cmp
sahf
ret
push
sbb
xor
mov
xchg
test
xchg
pop
dec
and
ds
outsb
sbb
inc
ds
cmp
inc
cmp
push
cli
es
sub
gs
stc
stos
push
je
jnp
sub
push
jp
sahf
aaa
jae
add
fmul
push
jb
test
dec
xchg
repz
adc
push
ja
xchg
repz
enter
or
aad
xchg
shl
adc
shll
aas
xchg
cs
ds
xchg
pusha
add
mov
dec
jno
xchg
aad
into
jp
jbe
push
insb
les
enter
xchg
test
adc
mov
int
cltd
cmpsb
les
pusha
sbb
int
sub
inc
lea
mov
les
leavew
mov
cli
test
dec
adc
dec
jno
popf
mov
and
daa
dec
cwtl
stos
mov
jle
popa
rcrl
xor
rcll
jp
popf
pushf
push
mov
jmp
xor
faddp
jg
cmpsl
mov
stos
cmp
mov
mov
out
jle
xchg
mov
xor
int3
xchg
push
add
cs
mov
cmpsl
mov
push
pop
je
dec
xor
es
sti
inc
push
lods
pop
jmp
aam
jne
inc
jnp
loop
cwtl
xlat
dec
dec
push
and
or
mov
push
inc
stc
mov
cwtl
cmpsl
add
aas
xorb
inc
jecxz
inc
addr16
js
fs
rcl
jl
push
addl
lahf
std
push
pop
or
push
dec
sub
or
xor
or
mov
nop
mov
mov
and
mov
or
les
ret
aas
prefetchnta
xor
subb
and
mov
cli
insl
add
fisubl
cmc
aam
mov
in
xchg
cmc
lcall
mov
dec
ljmp
sub
mov
push
loope
lea
cmp
cmp
dec
mov
adc
out
add
mov
fldcw
cld
inc
mov
add
inc
scas
xor
out
push
fs
jmp
xor
test
xchg
imul
mov
and
stos
es
imul
mov
xchg
fs
pop
mov
add
cmp
icebp
add
es
fidivs
xchg
mov
and
jge
cmp
sub
mov
cmpsl
lret
cmp
push
rcrl
cli
xchg
xchg
sbbb
mov
andb
push
lret
and
and
ja
push
iret
mov
mov
loopne
cli
in
enter
or
cmp
push
sbb
jmp
sub
call
cmpsl
lods
add
push
outsl
mov
pop
ficoms
and
flds
sbb
push
xor
loop
clc
repz
jae
pop
out
xchg
sti
roll
clc
inc
call
pushf
int3
cmp
out
dec
jnp
adc
jge
xchg
dec
mov
movsb
or
mov
lcall
sti
andb
sub
js
sub
push
lahf
inc
sub
cmp
clc
and
imul
movsl
mov
outsl
xor
dec
mov
inc
and
mov
and
rorl
xor
fisubs
es
xlat
jmp
in
ret
pop
add
jno
mov
add
addr16
ret
add
inc
pop
rcrl
mov
sub
push
rol
ja
iret
adc
dec
inc
inc
into
aaa
lahf
ss
ds
mov
pop
scas
jmp
lahf
sti
inc
xchg
insb
mov
inc
cld
adc
stos
mov
jno
mov
adc
cmp
adc
and
sbb
jg
xchg
jp
sub
and
mov
pop
jle
push
mov
repnz
cmp
iret
mov
rorl
cmp
in
inc
in
mov
in
sbb
pop
push
andl
xor
and
lds
lds
push
and
rol
or
idivb
ss
xchg
cmp
stos
and
dec
or
push
sbb
mov
rorb
inc
jne
fnstenv
lret
and
mov
jmp
mov
mov
shl
pushaw
and
adc
sub
sti
mov
dec
fcomps
mov
sbb
inc
cmp
aad
ss
in
or
out
xlat
inc
push
rol
les
aaa
ds
fsubp
mov
loope
mov
sbb
mov
sub
mov
jne
adc
stos
ss
adc
and
cli
les
mov
mov
pop
ja
mov
into
jl
lret
ss
js
sbb
into
outsb
push
jnp
jb
les
or
jno
or
fldl2e
andb
dec
mov
int
inc
pusha
push
ret
out
adc
sbb
mov
jp
inc
mov
cmp
sub
xchg
mov
mov
int
sti
les
pop
idivl
add
cmp
loopne
rol
add
fldl
push
xorl
inc
enter
repz
sub
leave
adc
or
pop
push
xor
into
inc
fdivs
orl
out
xchg
aaa
mov
dec
lret
aam
push
fbld
aaa
dec
xorb
out
out
mov
neg
add
stc
in
lea
ficomps
push
add
das
pop
mov
and
repz
cwtl
ja
adc
xchg
outsl
ljmp
inc
jmp
jae
in
push
repz
out
pushf
repz
lahf
mov
icebp
mov
jbe
stos
mov
xchg
add
ror
or
add
or
sbb
mov
cmpsb
repz
mov
jle
jno
hlt
in
daa
adc
pop
js
daa
shll
cli
cli
mov
inc
add
jmp
push
hlt
sbb
popa
and
daa
and
rcll
iret
jb
scas
adc
int
ljmp
dec
pop
icebp
xor
cmp
lods
push
popf
pop
lcall
hlt
sbb
ss
mov
iret
pop
xor
repz
outsl
cli
icebp
icebp
push
push
push
cmp
out
dec
dec
mov
pushf
mov
and
test
loop
cmp
stos
sbb
movsl
xor
sub
push
sbbl
sti
cs
push
inc
mov
mov
outsl
pop
or
sub
jb
ljmp
sbb
add
cli
lods
sbb
mov
and
mov
dec
orl
cmp
scas
mov
dec
arpl
pop
jge
inc
lcall
mov
hlt
xchg
adc
leave
jo
cmc
shll
clc
add
popf
aaa
scas
int
cmp
bound
icebp
je
mov
mov
pop
cmc
mov
jmp
inc
test
je
push
xchg
or
jg
cmp
fcmove
ja
shll
mov
insl
hlt
sub
popa
sub
scas
out
imul
cltd
icebp
push
adc
jno
loopne
jb
cwtl
es
xchg
out
cmp
pushf
adc
mov
dec
jo
pop
clc
cmp
xchg
cmp
mov
jl
adc
push
in
stos
icebp
xchg
mov
adc
es
cmp
das
pavgw
out
scas
mov
mov
int3
lahf
mov
test
mov
les
cmc
cli
cs
daa
or
jmp
cmp
mov
in
std
inc
mov
mulb
lcall
jno
push
push
outsb
xor
xchg
mov
ds
cmp
and
mov
jp
xor
out
bound
mov
test
cmp
pop
pop
out
push
outsl
out
bound
out
fmul
and
cmp
pop
or
call
push
pop
mov
out
jbe
cmc
int3
inc
sbbl
es
popa
inc
loop
sub
cmp
sti
push
ror
insl
jg
mov
sti
or
xchg
repz
cmp
pop
sarb
insl
insb
xlat
pop
mov
loop
ret
sub
clc
xor
jae
push
outsl
int3
inc
add
fwait
imul
inc
sbb
mov
mov
out
rcrb
pop
arpl
pop
pop
mov
cmc
jge
mov
jae
rcl
jb
into
out
lret
montmul
cmpsb
ret
dec
test
jnp
sub
les
ds
test
xor
in
push
out
negl
stos
shl
xchg
or
sub
xor
mov
pop
jp
and
or
out
scas
movsl
pushf
adc
scas
mov
mov
or
scas
mov
cltd
dec
stos
scas
sub
in
ror
add
or
sti
fldl
adc
push
mov
cld
xor
jb
stos
push
dec
pushf
cmc
mov
dec
scas
es
dec
pop
ret
inc
adc
lds
adc
sub
dec
pop
mov
dec
aaa
push
repz
sub
dec
push
pop
push
sbb
xlat
cltd
mov
fs
bound
lret
xchg
lcall
push
ret
aam
mov
xchg
je
mov
stc
sahf
adc
notb
mov
cmp
pop
xchg
and
jl
mov
push
scas
lods
mov
mov
sub
das
aas
pop
leave
fcomip
lock
inc
arpl
pop
inc
adc
jno
aaa
orl
loop
dec
cmp
lahf
enter
cmc
js
push
dec
push
stos
ja
lds
xor
int3
rorl
push
sbb
mov
mov
jno
hlt
inc
mov
scas
mov
loop
dec
sub
sbb
xor
cmpsl
mov
movsb
pop
mov
leave
movsb
jno
or
stc
fs
sub
push
in
pop
jns
leave
popf
fwait
adc
jmp
mov
repnz
sub
jae
cmp
xchg
push
and
mov
cmc
mov
sub
sbb
fisttpl
in
loopne
xor
cltd
das
testl
mov
xchg
and
add
and
or
cli
stos
xchg
les
icebp
dec
negb
idivb
pop
inc
in
int3
fisttps
cltd
stc
hlt
stc
mov
mov
lcall
sahf
in
repnz
scas
stc
je
inc
pop
mov
mov
cmp
mov
popf
loop
mov
das
inc
scas
mov
inc
pushf
test
jo
sub
stos
mov
cmp
popa
sbb
cmp
add
loope
dec
jne
and
dec
in
pusha
shl
lds
ja
jns
sbb
mov
sub
mov
jg
clc
jnp
sbb
adc
xchg
pop
arpl
lea
mov
out
mov
sub
push
push
xchg
dec
inc
inc
push
test
notb
in
and
jecxz
mov
inc
lock
addr16
cs
jne
xchg
jmp
bound
jmp
sbb
pop
cmp
jae
movl
sar
inc
push
stos
pop
push
cli
push
mov
pop
xchg
call
cmpsl
xchg
cmp
mov
cwtl
in
fcmovbe
out
sub
cmpsb
movsb
jge
jge
xor
pop
mov
jle
xor
inc
cltd
mov
jns
fdivs
mov
fwait
pushf
leave
test
popa
jmp
inc
mov
pop
or
fnsave
stos
cmp
daa
sbb
push
sbb
push
pop
test
push
pusha
stc
push
aaa
or
fistl
jmp
aam
or
in
push
pop
rcrb
inc
outsl
pop
pop
movsl
hlt
cwtl
je
inc
and
shll
movsb
xchg
push
cmp
je
inc
push
or
int
push
shrl
or
loop
xchg
mov
mov
sbb
inc
push
cwtl
xor
lods
lcall
adc
sbb
cmpsl
pop
add
scas
mov
jmp
ds
push
or
aam
stc
daa
pop
fcompl
inc
cli
std
movsb
sub
ret
test
jbe
in
cltd
ljmp
pushf
xor
mov
inc
data16
inc
xor
fwait
xlat
pop
jae
out
xchg
cltd
clc
js
xlat
mov
popf
xor
sub
jecxz
sbb
sbbl
rolb
ljmp
xchg
or
daa
jge
cmp
add
jl
mov
cs
push
fcompl
inc
int3
or
dec
call
or
adc
adc
cld
mov
out
adc
sti
jecxz
xchg
xchg
and
or
lock
dec
or
cmpsl
dec
test
mov
daa
sbb
lret
insl
loopne
jecxz
add
negb
clc
imul
fsubrl
divl
dec
push
mov
mov
rorl
jb
das
xchg
inc
in
jnp
or
mov
sbb
fimull
mov
ja
cmp
sti
data16
xchg
inc
xchg
imul
insb
xchg
clc
outsb
dec
mov
jg
sarl
adc
jne
fldl
add
pop
rol
shlb
repnz
test
sbb
dec
fcmovne
and
mov
sahf
pop
repnz
aad
icebp
or
jae
jle
negb
cmp
dec
sbbb
bound
sbb
std
pop
mov
imul
or
xchg
sub
jle
aad
mov
test
addr16
cltd
sbb
sub
mov
ret
mov
xor
rorl
pop
adc
pop
jnp
cmp
popa
xlat
inc
mov
sub
pushf
roll
out
pop
and
lcall
pcmpgtd
pop
fucomi
sub
in
jno
aad
push
enter
out
mov
mov
in
cmp
stos
push
xor
mov
ja
mov
jo
push
and
add
mov
andb
xchg
mov
inc
sbb
lock
outsb
push
lock
xchg
and
adc
cmp
mov
movsb
jns
push
jge
mov
mov
jne
in
jg
cmp
pop
out
inc
popa
jle
addr16
mov
jnp
dec
sub
sub
popf
mov
cmp
jmp
sti
cmp
sbbl
push
xchg
ja
add
xor
sbb
sbb
mov
or
xchg
movsb
mov
sbb
jl
lds
scas
rclb
sbb
adc
aas
out
in
mov
pop
sub
sti
fnstsw
mov
pop
loope
sbb
insl
frstor
jae
ret
jo
mov
jne
dec
or
dec
add
mov
dec
cmc
xchg
fwait
or
push
xchg
cmp
push
lds
dec
sub
rcr
push
ret
xor
loop
fwait
clc
gs
cmp
or
cld
inc
enter
fstps
cmp
iret
lock
sarl
pop
mov
test
push
std
or
push
xorl
lods
or
push
test
adc
jg
sub
xchg
repnz
cmpl
inc
and
in
dec
and
imul
clc
int3
adc
daa
xchg
pop
xlat
sbb
xchg
in
xchg
and
inc
jle
ret
push
jne
push
std
addr16
imul
addr16
das
jmp
rol
mov
lret
or
pop
add
daa
test
jns
xlat
mov
stos
jge
idiv
sbb
test
cmp
pushf
popa
xchg
rclb
int
and
pop
fimull
dec
out
push
jle
mov
sar
insl
loope
fstpl
sub
push
inc
sbb
sub
out
int3
mov
push
mov
push
xor
mov
or
ret
ds
dec
lahf
cmc
out
mov
aas
or
out
scas
enter
cmp
pop
mov
jp
icebp
mov
mov
jmp
jle
adc
icebp
push
lahf
cld
xchg
jae
repnz
cmp
lock
sub
mov
push
inc
mov
scas
movl
int
ljmp
test
pop
imul
jno
push
add
imul
cli
testb
lea
aas
dec
sbb
pop
lret
scas
loopne
adc
push
cmp
in
xchg
dec
sub
xchg
sub
test
stos
xlat
andl
jmp
jecxz
mov
jns
xchg
push
js
lret
icebp
dec
adc
movsl
xor
dec
mov
bound
pop
xchg
jne
sti
shrl
lods
sub
jno
xchg
jg
je
pop
push
shrb
lret
xchg
add
daa
sbb
adc
pop
loopne
out
jnp
hlt
add
cmpsl
ret
shrl
sarb
leave
mov
testb
push
cmp
mov
bound
jle
dec
inc
dec
jae
aad
int3
rcll
out
enter
push
in
dec
pop
test
fwait
rcr
test
cmp
cmp
inc
xor
push
pusha
pop
and
push
and
xchg
imul
xor
xor
test
shll
lret
insl
push
stos
out
pop
fsubl
jmp
ds
ss
xchg
dec
fnstenv
divl
push
jp
adc
rorl
dec
repnz
sbb
push
movsl
adc
mov
mov
pop
push
mov
adc
faddl
sbb
dec
dec
sarb
dec
push
testl
adc
movb
pop
fs
dec
mov
cmp
int
fcmovb
xchg
cmp
xor
arpl
mov
xlat
or
mov
inc
loop
add
and
jno
mov
inc
mov
cmpl
lock
scas
sub
pop
popf
mov
lret
mov
fcmovnbe
cmc
and
sbb
inc
xchg
enter
pop
mov
jae
icebp
add
or
inc
adc
or
cmp
ja
les
fwait
dec
jle
roll
mov
inc
cld
stc
jo
mov
xor
adc
mov
test
push
insl
xor
imul
jb
data16
mov
call
add
cmc
loop
mov
pop
mov
and
lea
mov
rclb
xchg
inc
cmc
or
mov
cwtl
and
in
and
arpl
fsts
push
out
ret
mov
inc
and
sbb
xchg
jae
jl
scas
mov
ret
enterw
pop
sahf
jnp
popa
mov
cmc
pusha
sahf
mov
lods
mov
aam
lcall
and
insl
mov
in
les
sbb
addl
arpl
cmpsl
cmpl
jecxz
mov
sub
fs
call
lahf
cmp
adc
popf
sub
loopne
xchg
xchg
loope
call
pop
xor
mov
dec
inc
lds
inc
xchg
sub
es
dec
jae
mov
ja
arpl
popa
xchg
hlt
mul
mov
lods
icebp
repnz
add
and
ljmp
jmp
mov
aad
mov
dec
es
aam
enter
int3
lret
imul
hlt
outsl
jle
cmp
add
scas
mov
mov
cs
xchg
xchg
mov
inc
sbbl
mov
loopne
sbb
pop
and
cltd
mov
mov
out
aaa
fwait
jp
xor
xchg
dec
jmp
lods
sti
pop
inc
ss
xor
test
mov
xor
sbb
sub
push
es
sbb
out
adc
pop
shll
jae
pushf
jae
pop
movl
out
imul
sahf
cmp
jns
std
and
add
sbbl
daa
cmp
imul
and
shll
inc
inc
bound
cwtl
inc
dec
xchg
xchg
xchg
xor
sbb
jbe
xchg
stos
and
fidivrs
gs
xchg
gs
push
mov
pop
sbb
mov
xor
sub
ja
fisubrl
std
lahf
mov
dec
imul
jno
scas
jp
inc
f2xm1
insl
lods
mov
pop
xor
adc
mov
and
sbb
fs
loopne
ds
cmc
add
xor
test
enter
popa
pop
aas
push
cmp
and
sbb
repnz
adc
idivb
cmc
jbe
aam
push
cmp
cmp
sub
aaa
and
out
cmpsl
ljmp
std
in
xor
cmp
inc
xchg
shll
xlat
dec
inc
inc
push
inc
pop
loope
dec
jecxz
pop
mov
inc
cltd
mov
and
jne
pop
sahf
mov
fbld
dec
xchg
orl
dec
dec
push
push
orb
jecxz
or
iret
je
dec
sti
mov
mov
sbb
nop
fs
je
jp
sahf
jg
add
lods
add
pop
movsb
lods
pushf
hlt
cltd
push
loope
out
mov
push
fcoml
popa
dec
outsl
sbb
sub
xchg
rcrb
scas
and
push
cmpsb
and
inc
popa
clc
fldl2e
cmp
dec
dec
loopne
cmp
inc
xchg
dec
lahf
push
mov
inc
lcall
leave
inc
and
shlb
scas
imul
test
test
mov
cmp
arpl
pop
or
clc
subb
xchg
push
imul
fs
add
mov
and
outsl
push
sbb
ss
and
nop
push
dec
into
fsubrs
inc
fnsave
nop
pop
idivb
push
mov
or
movsb
ret
mov
in
mov
orl
cli
loop
pusha
test
das
fs
sbb
test
movsb
pop
scas
sarl
aas
out
dec
push
cltd
inc
sub
fucomip
push
and
fsubs
mov
sti
ja
movsb
mov
icebp
in
cmp
idiv
push
inc
mov
cmpb
or
popa
sub
sarl
sub
iret
sahf
popa
mov
ffree
mov
imul
sub
mov
add
std
lea
push
bound
xlat
mov
cmp
test
rorb
dec
mov
mov
fsubr
or
fucomip
inc
push
mov
mov
mov
push
gs
iret
dec
insl
inc
or
das
pop
stos
pop
into
fsubrl
sbb
pop
clc
and
repnz
ds
rcll
mov
jns,pn
out
add
call
aad
inc
adc
rol
mov
call
movsl
jae
mov
aad
mov
movsl
add
leave
lcall
je
rcr
fimuls
fs
out
mov
pop
jp
shlb
sbb
mov
hlt
jnp
or
fidivrs
mov
jns
mov
xor
fiaddl
rorb
jmp
lods
pushf
bound
fcoml
lock
movsl
stos
pop
jmp
rorl
mov
ss
lds
cmp
rorl
int
movsl
xor
and
int
jnp
xor
test
adc
sub
push
cli
es
jo
push
push
xor
sarl
xlat
ds
cmpsb
jge
adc
popf
repz
xor
sbb
pop
js
scas
jo
push
xchg
lahf
inc
aam
andps
adc
push
sbbl
add
mov
out
or
loop
orl
data16
loope
shrb
push
shll
and
fs
mov
pop
ret
shll
inc
sahf
adc
sti
scas
pop
mov
js
jbe
cmp
lods
jg
test
repnz
or
gs
mov
xor
jb
push
ljmp
shlb
xchg
xchg
or
rclb
sub
pop
add
mov
aam
dec
in
bound
adc
adc
push
ret
popf
gs
cld
dec
pop
int3
aam
iret
mov
mov
test
pop
push
dec
popf
orl
cmp
dec
push
daa
or
arpl
dec
mov
aaa
or
pop
outsl
fstpt
mov
mov
decl
cmpsb
test
clc
sub
jae
adc
dec
jne
lret
out
cltd
push
ljmp
sbb
mov
ljmp
cmp
sahf
sti
adc
outsb
or
cld
imul
jmp
or
fisttpll
neg
dec
sub
mov
xor
icebp
sub
lcall
das
outsb
lods
adc
sbb
out
lock
push
push
mov
xchg
cs
or
inc
addl
hlt
loope
mov
into
sbb
and
lahf
iret
adc
add
inc
popf
sbb
pop
lds
or
sahf
imul
cli
lods
pop
dec
sahf
mov
fwait
fwait
js
ficomps
scas
push
or
js
xor
inc
inc
imul
gs
dec
dec
mov
cmc
mov
and
or
push
jecxz
inc
xchg
lret
jle
popl
mov
push
test
dec
sbb
push
daa
imul
mov
cltd
test
dec
mov
outsb
dec
push
mov
test
es
pusha
and
or
xor
push
lcall
adc
test
add
add
shll
notb
mov
jp
sub
mov
sbb
movsb
sbb
jp
rol
cmp
shll
dec
xor
jge
aam
ja
dec
shrl
xchg
xor
jg
or
xchg
dec
fidivrs
inc
add
mov
xchg
rorl
or
sbb
sbb
fnstenv
sbb
inc
das
cmp
in
stos
adc
insb
js
push
ret
lcall
mov
outsl
sub
and
mov
pop
xor
sbb
out
inc
sbb
shl
scas
adc
pop
jg
lock
xlat
insl
adc
and
ja
pop
adc
and
cmp
out
vpsrlq
pop
sbb
add
lods
pop
cs
mul
in
push
inc
fisttpl
jl
inc
add
pop
gs
jns
and
clc
cmp
mov
shlb
adc
add
jbe
sarb
mov
in
add
sahf
imul
cld
pusha
mov
leave
lcall
and
ss
xor
lds
prefetchw
cmp
mov
fs
and
xchg
mov
inc
adc
sti
in
and
mov
push
inc
mov
add
cmp
sbb
iret
push
sbb
sbb
sbb
outsb
cld
call
ret
aad
pusha
inc
repnz
test
aas
lods
ds
loop
jecxz
inc
mov
mov
cld
call
adc
pop
ljmp
jp
test
outsb
xchg
jmp
sbb
xlat
adc
insb
movsb
cmpsl
and
mov
jmp
fwait
cmp
and
mov
jg
cmc
sub
cld
mov
stos
imul
mov
outsb
aas
mov
sbb
lret
lret
shl
sbb
icebp
scas
shl
lods
xchg
pushf
cmpsb
frstor
out
adc
imull
test
jmp
xor
scas
or
pop
cmp
push
sub
jge
add
push
mov
pop
jl
in
les
push
sbb
rolb
dec
loop
jo
xchg
jo
lret
clc
mov
xchg
push
cmp
inc
or
pop
in
mov
loope
push
cmpb
aas
sahf
mov
inc
sahf
cmc
adc
pop
add
sub
sub
cmp
push
rorl
movsb
pop
cmpl
push
je
mov
hlt
sahf
imul
test
outsb
ja
sub
inc
inc
sub
movsl
aam
and
xor
pushl
sbbl
xchg
std
mov
pop
adc
inc
sub
lea
es
enter
jbe
sbb
cmovbe
movsl
hlt
mov
lea
dec
int3
js
jg
pop
fisttps
jp
inc
adcl
sbb
mov
mov
jb
scas
cmpsl
cltd
lahf
outsb
gs
ret
jle
aaa
jecxz
enter
add
mov
insb
orl
or
scas
adcl
pop
pop
stos
das
into
pop
je
bound
fsts
adcl
loop
ja
mov
xchg
xchg
stos
daa
sbb
cmpsb
scas
or
pop
jge
inc
shrb
cmp
and
mov
and
stos
outsl
or
sahf
sub
movsl
fldpi
adc
mov
jne
in
repz
mov
out
lods
xor
jl,pt
cmpsb
and
addr16
iret
jle
scas
nop
hlt
push
mov
and
lcall
mov
mov
adc
push
loopne
mov
push
xor
xchg
add
xchg
jne
das
or
or
push
popf
test
scas
xchg
dec
fldl
pop
add
scas
mov
adc
mov
xor
xor
adc
std
mov
shrb
inc
push
lea
cmp
and
pop
dec
dec
sub
insb
or
or
aaa
cmp
ret
sub
or
stc
mov
mov
jae
sub
mov
add
loope
fildl
jmp
mov
push
adcl
pop
inc
iret
pop
sbb
adc
dec
into
loopne
fdivrs
mov
popa
test
jmp
scas
sub
sbb
inc
inc
push
insl
ret
fs
fdivrs
cmpsl
lret
jns
loopne
inc
jbe
insb
add
lret
sub
pushl
sub
mov
sub
ja
dec
int
out
sub
shlb
or
testb
push
frstor
jecxz
imul
dec
mov
or
stc
out
in
inc
pusha
mov
inc
fildl
fnsave
inc
push
out
mov
sub
xor
cmp
jo
stc
push
int3
stos
push
loope
xor
ss
add
inc
or
in
ljmp
adc
aas
les
jmp
ljmp
cld
adc
xor
inc
les
icebp
pop
inc
mov
movsl
jo
adc
cli
dec
addr16
out
mov
lret
adc
rclb
xchg
sarl
adc
pusha
push
repnz
lds
dec
int
mov
jg
fstp
insl
imul
int3
leave
std
mov
cwtl
xchg
out
push
out
iret
imul
andl
ret
mov
sbb
push
mov
mov
cltd
mov
jae
cmp
lahf
icebp
enter
pusha
out
add
sbb
pop
sbb
inc
repz
mov
nop
mov
mov
lret
xor
add
hlt
xchg
mov
inc
jno
pop
fcoms
arpl
push
ja
jbe
pop
enter
test
mov
jmp
scas
pop
shld
pop
popa
lcall
cmp
ljmp
jno
loope
lcall
scas
out
ret
dec
or
sub
insl
xchg
clc
pop
adc
dec
es
jns
xchg
mov
mov
mov
adc
dec
xlat
pop
jb
and
pop
push
or
das
xor
in
xor
add
and
inc
cwtl
and
mov
lea
es
push
je
icebp
jne
xor
cmp
fwait
out
fimull
and
dec
inc
push
test
rcrb
cmp
mov
decb
cmpsb
xchg
sahf
mov
mov
mov
and
mov
movsl
jg
cmp
mov
sub
push
mov
pushf
sbb
sahf
lahf
pop
or
and
pop
stos
ja
lds
sbb
cmp
movsl
std
lods
mov
push
adc
jg
pop
aaa
add
lcall
xchg
sub
jp
mov
test
shll
mov
inc
adc
mov
loope
mov
xchg
mov
sahf
mov
push
mov
loope
jo
cs
lret
cmpsl
adcl
mov
mov
sub
ja
inc
adc
fdivr
cs
sub
add
outsb
inc
sub
push
cltd
sub
sub
adc
mov
ss
es
stos
outsb
incl
pop
nop
addr16
dec
mov
fdivr
push
mov
cmp
negl
fwait
mov
fnstcw
dec
mov
and
rolb
pmulhw
lahf
adc
mov
hlt
loope
pop
mov
sahf
cmp
pop
sbb
mov
insl
scas
pop
int
xchg
mov
call
test
aaa
inc
jo
incl
stos
je
push
int3
or
pop
outsl
adc
or
cmp
ret
push
hlt
inc
dec
out
mov
mov
out
pop
out
and
imul
push
into
jecxz,pn
pushf
arpl
sarl
incb
jl
in
jmp
sti
adc
fwait
mov
ds
jle
jbe
add
iret
jno
int
fsubp
push
bound
dec
scas
clc
mov
sub
movsb
mov
and
push
test
call
inc
push
dec
and
xor
out
movsb
shlb
loop
add
add
push
cli
cltd
mov
call
iret
ret
out
popa
pushf
repnz
pop
fstl
loop
mov
cmp
in
test
adc
push
ljmp
into
insl
test
fnsave
inc
sbbl
fldt
test
pop
jp
and
cld
mov
jb
sarl
jb
gs
insl
push
or
jb
jmp
movsb
jg
pusha
sar
xor
push
rorl
mov
test
sbb
repz
pop
xor
rorl
roll
jo
push
cmp
dec
cltd
imul
gs
jno
fisubs
sbb
ret
xor
cmpsl
jle
insb
xchg
push
pop
out
add
jo
test
fsubrs
jnp
mov
add
jns
aam
mov
in
test
inc
push
int
sbb
leave
sbb
fnstenv
xor
je
xor
aad
data16
std
dec
dec
cmp
push
pop
gs
call
repnz
data16
out
push
inc
dec
pop
push
enter
popf
sub
xchg
sub
lcall
xor
mull
add
std
pop
push
or
adc
ja
lea
push
xchg
add
inc
jmp
mov
inc
fsub
sub
jecxz
push
std
pushf
clc
cmpsb
cwtl
dec
nop
cld
sbb
xor
lods
or
aad
pop
add
out
push
insl
sbbb
iret
xlat
dec
push
push
ret
ret
dec
pop
mov
mov
dec
dec
mov
iret
pop
adc
clc
in
push
cmp
cmp
shlb
into
jno
sub
fxch
out
dec
sub
pusha
push
add
cwtl
js
lods
hlt
add
loopne
cmpsb
icebp
fimuls
or
jo
test
call
xchg
cmp
or
mov
cmc
sbb
call
movsb
ret
adc
mov
int
test
sub
out
jmp
lret
add
xor
mov
loope
mov
insl
pop
clc
cmp
mov
pop
outsb
sub
ds
in
jns
ret
daa
testb
sbb
jno
mov
cmp
enter
into
push
iret
xchg
mov
pushf
mov
cmpsb
addr16
and
daa
and
xor
and
push
add
ret
mov
sbb
cmp
xor
sbb
and
imul
mov
outsb
jns
push
dec
aam
aam
lahf
jmp
cmp
insl
cli
sub
rcl
sub
jae
inc
das
add
insl
add
push
pop
adc
push
aas
leave
mov
jb
pop
jp
insb
mov
cld
xchg
inc
jmp
dec
insb
iret
or
pop
mov
loop
push
int3
xchg
jns
mov
sub
in
or
icebp
or
cltd
jno
push
out
mov
out
and
mov
popa
xchg
outsl
loope
sub
jecxz
xchg
dec
mov
imul
js
mov
or
mov
loop
call
cmp
icebp
dec
mov
insl
les
mov
mov
inc
push
and
pop
dec
add
or
mov
out
js
jne
cs
pop
popf
ljmp
jp
das
sub
mov
ret
mov
push
sub
xchg
aad
xor
push
sub
push
push
repz
sub
aaa
ret
iret
cs
jp
jge
sarl
int3
sub
out
jne
test
xor
or
jns
xlat
xor
pop
aas
mov
lahf
loop
fsubl
xlat
fmuls
addl
fistpll
shlb
mov
push
jl
sbb
into
sahf
pop
notl
adc
fidivrs
xor
add
xor
cmp
daa
push
pop
xor
mov
cs
pop
push
xchg
stc
fldl
cwtl
sbb
gs
pop
lds
pop
and
jae
int
and
pop
jo
dec
int
pop
mov
popa
fwait
test
cmp
popa
or
mov
test
adc
iret
scas
paddb
fnsave
rorb
sbb
scas
pop
xor
cmpsb
fldl
dec
mov
push
and
bound
mov
sub
sub
push
ljmp
jg
shr
ds
adc
repnz
xchg
sub
lgs
fdivrl
push
flds
fcomps
arpl
mov
adcb
mov
adc
out
mov
faddl
mov
sub
or
outsb
js
adc
ljmp
lock
sbb
mov
sub
xchg
sbb
stc
lock
pop
ljmp
int
mov
jle
js
xchg
mov
jae
sub
scas
je
or
mov
add
cmpsl
xchg
fneni(8087
aad
mov
out
ror
insb
pop
dec
adc
xchg
daa
mov
mov
sub
jb
mov
les
arpl
mov
hlt
mov
lcall
out
int
fwait
pop
sub
leave
mov
dec
mov
xchg
aad
mov
enter
mov
dec
add
loopne
std
rolb
leave
subl
inc
pushf
pop
cmpsl
mov
es
lcall
dec
adc
cmp
std
jo
test
in
aas
adc
add
jno
sbb
loop
push
jg
add
sti
xor
fwait
shll
enter
aas
popf
aas
and
push
mov
popf
ljmp
fnstcw
xor
in
movsl
repnz
in
jo
or
cltd
mov
fcmovu
sbb
or
pop
insb
mov
pop
fimull
insb
mov
ret
fmuls
mov
pop
pop
gs
push
ljmp
gs
dec
jne
pop
mov
imul
jp
fs
inc
and
ret
jle
mov
xchg
jecxz
lret
rcll
and
popa
push
jbe
xchg
into
mov
push
xchg
movsl
aad
mov
aam
mov
repz
data16
ror
aam
cmp
pusha
in
cmp
add
mov
jb
mov
push
mov
or
push
jmp
mov
sub
pop
cmc
pop
xchg
sbb
inc
and
xor
je
push
pushf
inc
sti
xor
sbb
push
add
dec
push
scas
mov
mov
xchg
sbb
push
cld
dec
push
mov
fnstenv
insl
mov
cs
adc
enter
loope
inc
sub
xchg
dec
jb
outsl
sti
xchg
fdivrl
pop
pop
dec
popa
jecxz
xchg
aas
sbb
inc
out
cld
es
outsb
test
cmc
mov
or
jp
and
inc
pop
xor
adc
adc
arpl
test
adc
ds
jb
mov
xchg
bnd
std
divl
inc
jl
shrl
scas
adc
xor
or
or
les
popa
xchg
jns
jns
mov
cmc
mov
xlat
imul
lret
or
out
adc
fisttpl
push
lock
fisubrl
pop
lds
clc
mov
push
mov
mov
add
movsb
popf
mov
mov
push
push
dec
mov
or
sub
loop
mov
xchg
or
jmp
aam
pop
test
pop
cmc
add
loope
arpl
or
sbb
mov
pop
mov
mov
or
cmp
xor
mov
lods
pushl
out
adc
ljmp
push
das
mov
push
fisttpl
ds
inc
cwtl
lcall
gs
ds
jne
adc
xchg
cmp
stc
push
push
inc
sub
mov
lock
sbb
popa
pop
xchg
imul
pusha
add
test
xchg
and
xor
push
and
rorl
or
int
cmp
je
stos
cmp
sbb
sub
sub
push
sub
sbb
sbb
rorb
addr16
addb
imul
push
push
test
sti
sbb
int3
mov
mov
dec
mov
or
shl
ja
jo
mov
mov
in
imul
push
xor
inc
mov
mov
mov
push
sub
imul
je
faddl
cs
push
mov
addl
fidivrl
inc
mov
pop
movswl
fildl
sbb
dec
inc
outsl
sub
cmp
cmp
inc
test
push
mov
fnsave
jb
scas
imulb
pop
iret
sub
xchg
nop
jp
aas
push
xor
jmp
mov
jmp
lcall
push
cmp
js
mov
aaa
icebp
pop
mov
in
mov
lods
and
push
xchg
enter
inc
sahf
pushf
nop
pop
ss
in
jl
inc
or
shlb
mov
xor
movsl
jo
stc
push
jns
push
pop
into
mov
addr16
xor
dec
imul
loop
xor
adc
adc
or
arpl
ret
jns
fidivrs
jnp
pcmpgtb
js
lret
pop
enter
in
add
pop
lret
int
mov
fdivrs
jle
addl
dec
ds
rcr
cmc
cmpsl
cmp
cmpsl
jmp
mov
xor
aaa
mov
pop
stos
hlt
cwtl
sar
adc
cmpsb
cmp
push
loope
mov
lret
pop
call
pop
in
int3
xor
pusha
pop
aad
adc
and
fnsave
mov
cmpsl
fimull
jne
lret
out
lock
jnp
adc
cmpsb
sbb
out
aam
sub
out
push
arpl
xchg
cmpsl
jbe
insl
int3
sbb
test
je
scas
imul
mov
xchg
test
push
and
pusha
dec
and
jp
pushf
sti
hlt
sub
in
mov
leave
inc
loope
ret
sbb
inc
add
out
add
int
mov
or
es
dec
test
ret
add
cltd
dec
negb
xchg
pop
mov
push
insb
daa
les
imul
ljmp
popa
adc
jo
jb
xchg
je,pt
lret
test
arpl
das
lcall
pop
mov
mov
xchg
scas
nop
or
daa
in
mov
push
aaa
idivl
mov
inc
faddp
mov
leave
adc
outsl
in
hlt
mov
fistl
aaa
xor
lods
mov
and
xchg
mulb
sub
add
fnsave
jle
addr16
dec
in
pop
sti
mov
mov
cli
pop
pop
push
jno
repnz
sar
out
and
mov
xchg
ret
insb
adc
call
pop
pop
and
repnz
push
sbb
xor
loop
test
fidivs
insl
xor
adc
ljmp
and
inc
pop
sbb
jb
mov
mov
inc
aam
xor
out
dec
dec
xchg
xor
inc
jo
data16
lret
dec
shlb
adc
sysexit
lea
adc
mov
push
inc
mov
xchg
push
sub
inc
cld
movsl
pop
mov
xchg
cltd
ret
outsb
adcb
or
pop
imul
je
mull
inc
testb
push
jae
sub
loop
lret
jg
leave
xor
cwtl
nop
cmc
aad
or
je
leave
out
jo
dec
fwait
cltd
fcoml
out
je
mov
ficomps
fbld
push
cmp
test
mov
pusha
lcall
enter
aas
aaa
dec
mov
stos
mov
mov
lea
mov
in
sti
mov
stos
jae
cmpsl
movl
imul
xchg
test
xchg
jo
lods
push
leave
cmpsb
popa
lds
jns
pop
orl
aad
mov
xchg
jmp
aaa
inc
aad
movsb
cmc
cmc
loope
movsl
insb
jne
fidivs
cmp
pop
clc
mov
adc
cmovbe
enter
loop
cltd
rclb
jmp
fstp
ds
xchg
jne
inc
or
pop
xchg
ss
pop
lods
mov
lds
arpl
xor
sub
ret
lret
add
or
cmp
add
cmpsb
mov
hlt
or
lods
add
sbb
int
mov
push
in
aaa
stos
insb
cld
test
lods
pop
enter
mov
or
mov
or
jl
inc
push
adcl
lahf
stos
xchg
nop
loopne
xchg
cmpsb
jge
push
sbb
outsl
jbe
xor
daa
xlat
roll
sub
sub
ret
and
js
inc
sbb
xchg
pop
cmp
xor
xchg
inc
dec
xor
fbld
dec
lods
nop
jne
lds
or
dec
das
push
in
lret
fdivs
std
xchg
mov
add
std
ret
loopne
shll
push
xorb
adcb
jbe
fmuls
push
loop
pop
js
mov
add
adc
into
adc
add
and
pop
adc
arpl
cwtl
push
push
sub
les
ficomps
mov
lock
push
std
push
sub
pop
lods
xchg
jecxz
aaa
or
sahf
aam
arpl
fnstenv
andb
repz
in
mov
dec
out
insb
imul
fdivrs
dec
hlt
jmp
imul
cli
test
sub
dec
jbe
sbb
lret
bound
shlb
cmp
pop
jmp
pop
clc
jecxz
mov
leave
stos
and
jge
pop
movsl
and
push
mov
adc
mov
push
mov
xchg
roll
and
dec
xor
in
dec
idivb
test
pushf
into
jno
repnz
rcrl
adc
lcall
outsl
jno
test
dec
ret
mov
jg
mov
int3
jne
icebp
xchg
inc
sub
jnp
push
aad
shrb
ret
sub
mov
inc
mov
add
push
cmp
loop
push
mov
test
cmp
dec
xchg
xchg
mov
adc
inc
mov
cmp
fisttps
stos
mov
jg
mov
mov
adc
push
xlat
jmp
mov
mov
xchg
sbb
cmp
nop
fs
jmp
inc
leave
mov
sub
jmp
xlat
ja
iret
add
arpl
stos
icebp
push
test
daa
xchg
cs
scas
mov
xchg
ret
leave
and
and
movsl
and
mov
xchg
cmp
dec
daa
rol
cwtl
inc
push
dec
push
dec
gs
inc
js
adc
test
pop
push
xchg
stos
aad
orl
mov
push
push
mov
je
je
lea
push
mov
fs
mov
and
adc
and
push
push
lea
xchg
fwait
mov
in
test
mov
or
jbe
mov
mov
mov
xor
push
inc
add
mov
push
push
test
fisttpll
ret
jne
leave
adc
ja
aam
dec
icebp
xorb
in
es
mov
mov
xchg
sti
out
sbb
fsts
fcmovnu
das
shr
or
fmull
adc
fcmovne
testl
inc
xor
inc
adc
shrb
push
dec
dec
sub
xor
pop
test
fwait
daa
push
jo
xor
mov
push
fadds
push
cwtl
bound
imul
ret
jp
in
jge
mov
mov
xchg
imul
mov
ret
pop
stos
test
sub
rorb
xchg
sbb
scas
push
mov
les
jecxz
fnstenv
and
inc
xchg
mov
xor
mov
addb
fsubp
pushf
push
jge
lock
scas
mov
test
xor
data16
push
add
mov
xorl
movsb
clc
push
push
aad
fs
sub
cmc
inc
sbb
xor
push
cmpsl
fs
sti
sti
mov
push
gs
sti
int
mov
xor
xchg
and
inc
push
add
mov
mov
lods
std
xchg
inc
loopne
fidivl
inc
add
int3
es
sbb
es
cmp
push
test
fwait
iret
loop
ss
mov
aaa
push
test
sbb
xchg
rcrb
push
lret
lods
xchg
popf
ror
sbb
sbbl
lret
je
scas
mov
pop
movsb
push
sbb
mov
scas
adc
pop
or
lcall
jbe
pop
or
xor
fiaddl
imul
jp
lods
pop
iret
mov
sbb
stos
int3
inc
adc
cmp
out
mov
scas
lock
insb
lret
xchg
repnz
push
movsl
jecxz
sub
fisttps
and
mov
xlat
and
cmp
orl
mov
lock
pop
adc
into
outsl
jge
sbb
call
lcall
in
xor
mov
imul
testb
mov
mov
mov
cmpsb
stc
jecxz
negb
push
xor
xlat
jns
inc
pop
sti
rolb
mov
pop
push
sbb
rorb
inc
pop
sbb
pushf
ss
jnp
push
add
loope
test
call
mov
into
mov
xchg
out
cmpl
jecxz
mov
sbb
mov
call
push
mov
mov
pop
inc
add
push
xor
js
mov
lea
xchg
adc
jg
dec
push
or
sbb
fmuls
inc
jo
and
in
mov
popf
jno
incb
imul
jbe
popa
pop
cmp
jmp
push
xchg
push
clc
insb
pushf
notb
sub
pop
mov
daa
inc
jne
inc
cmp
xchg
jae
add
cmpsl
loop
pop
cli
ljmp
shlb
mov
jno
inc
bound
lahf
jb
into
ficoml
adc
addr16
push
stos
mov
mov
cmp
dec
add
fisubs
mov
repnz
dec
push
pusha
out
dec
les
test
aas
mov
lods
stos
sbb
icebp
sub
adc
mov
dec
aas
sub
dec
aas
jmp
and
pop
xchg
cli
add
pop
stos
cmp
mov
rcrb
sbb
dec
push
inc
into
xor
imul
dec
cmp
or
lods
mov
sahf
xor
and
mov
dec
inc
popa
inc
les
or
mov
dec
outsb
dec
xchg
and
stos
push
adc
shlb
lcall
inc
xchg
cld
push
imul
fwait
adc
inc
mov
xchg
inc
mov
push
push
jle
leave
out
sbb
jo
mov
pop
push
cmp
and
lock
push
push
sub
decb
in
in
outsb
test
add
gs
cwtl
mov
xlat
call
repz
jmp
lahf
inc
cltd
aad
push
add
fwait
adc
sbb
xchg
sub
xchg
and
test
jecxz
std
lds
sub
loope
jecxz
adc
add
fidivs
movsl
sub
std
xor
inc
mov
addr16
mov
lds
adc
mov
xor
mov
pushf
xchg
mov
enter
or
ret
xchg
imul
popf
rorb
mov
push
fwait
inc
mov
fsubl
rcr
or
jg
pop
dec
push
inc
adc
andb
popa
push
imul
and
xor
add
and
icebp
cli
cmp
iret
jg
dec
and
nop
pop
inc
mov
fsubrp
outsb
mov
cmp
lods
inc
cli
fdivs
aas
xchg
xchg
sub
inc
inc
fisubl
jmp
sbb
in
cmp
cmp
in
loope
fdivrp
rcrl
push
out
jbe
out
repz
mov
push
sar
jl
ja
mov
clc
push
dec
and
leave
es
push
or
push
cmp
movsl
sub
dec
fs
shl
or
push
fldl
jo
pop
sbb
dec
fucomip
pop
cwtl
mov
ret
mov
adc
mov
xor
sub
pop
add
fiaddl
call
in
push
out
xorl
add
cmp
data16
mov
aam
fcomps
jmp
mov
loop
xor
stc
mov
xchg
jmp
cmp
jmp
movsl
fldenv
jecxz
push
rorl
fs
lods
jecxz
cs
mov
fcompl
shl
out
push
int
mov
lods
jl
test
gs
nop
jge
out
push
loop
lcall
fmull
in
jbe
outsl
or
xchg
add
mov
push
aaa
stos
dec
out
cmpsb
pop
mov
adc
iret
sbbb
out
outsb
mov
fnstenv
adc
pop
aaa
data16
in
loop
loopne
movsl
rcrl
bound
sub
rcrb
add
push
push
movsl
push
outsb
roll
jg
push
add
xchg
xchg
test
pop
add
repz
xchg
xchg
aas
cmp
fwait
sub
in
outsl
js
rorl
aas
arpl
cli
lahf
pop
mov
add
arpl
aad
test
sub
mov
out
shr
sbb
xor
dec
cmp
pusha
pop
in
shll
or
mov
in
stos
test
push
fnstcw
cmpsb
xchg
es
int
mov
aaa
sbb
jns
cmp
push
icebp
addb
xchg
pusha
lahf
sahf
mov
mov
push
inc
add
cwtl
fwait
mov
pop
mov
ret
lock
js
daa
int3
xor
and
push
sbb
add
jns
push
lret
xor
fs
dec
cs
pushf
xchg
fs
ljmp
sbb
sahf
mov
insb
int
adc
cwtl
cltd
ljmp
out
cmp
sbb
jmp
pop
adc
fnstcw
dec
nop
stc
sub
int
pop
fs
ret
push
push
mull
mov
add
sahf
pop
lcall
dec
cmovb
cmpb
sbbl
hlt
and
mov
cld
jmp
js
lret
int
mov
cmpsl
sub
out
sbb
pop
xor
into
mov
shl
inc
and
mov
jmp
daa
pop
mov
int3
push
mov
fsubrs
mov
loop
notb
pop
jnp
outsl
dec
mov
js
iret
jno
sbb
jg
lock
xchg
test
adc
test
inc
pop
mov
jo
cmp
cwtl
jb
push
dec
jnp
lods
push
push
out
add
lcall
repz
test
insb
aaa
aaa
shl
mov
mov
mov
xchg
xchg
inc
jl
pop
xchg
ja
adc
dec
aaa
inc
rep
sub
add
fstps
mov
out
ret
jb
bound
pop
sub
fisubl
fldenv
sti
insl
ja
sub
cs
mov
and
push
bsr
inc
dec
xchg
jl
lcall
idiv
sbb
loop
fisttps
out
mov
cmpsl
xor
cmp
mov
mov
mov
xor
sbb
fistl
popf
mov
xor
push
call
sbb
add
lods
inc
pop
jo
data16
insl
sbb
fs
rorb
cs
and
cli
jecxz
lds
mov
mov
nop
push
filds
cmpsb
pop
fsubr
jmp
outsl
subb
stos
jecxz
mov
decb
add
loopne
adc
mov
pop
loope
sbb
mov
aam
jle
decl
xchg
shlb
iret
add
inc
cmp
ss
or
pop
incb
pop
adc
jbe
into
pop
pop
xor
pop
in
and
js
or
add
jle
movsb
jl
arpl
gs
out
mov
shrl
sub
sub
cmp
cmp
insb
mov
pop
jge
inc
cld
xor
add
sub
cld
sbb
mov
ret
cmp
test
cmp
arpl
jae
aas
fistpl
sbb
and
out
mov
adc
ret
jb
pop
pop
outsb
xchg
leave
setg
jns
and
adc
sti
adcb
lret
clc
push
data16
testb
xchg
jge
fsub
scas
or
into
ret
sbbb
xor
jmp
repnz
and
cmpsl
xlat
lods
adc
mov
cmpsb
cli
add
ret
push
out
jl
pusha
popf
mov
pop
repnz
lods
nop
sub
pusha
leave
call
xchg
lret
sbb
je
test
fmuls
mov
jne
ret
cli
mov
nop
jae
pop
rolb
cltd
loop
pop
lock
sbb
repnz
jo
int3
pop
xchg
mov
rcll
or
push
dec
pop
rolb
mov
push
imul
stos
or
movsl
sub
mov
inc
and
icebp
mov
movsb
inc
lahf
cmp
in
dec
nop
lods
push
fmul
mov
push
loop
jle
pop
inc
jg
push
out
jecxz
ja
lcall
pop
imul
loop
rcll
mov
push
sub
push
lods
inc
and
mov
jnp
sub
test
lds
sub
jo
fwait
cld
pusha
test
sbb
je
add
push
cwtl
cmp
xchg
push
lret
fimuls
addr16
inc
add
jb
sbb
cmp
push
jnp
fisubrs
enter
inc
fcmovnu
loop
jmp
adc
mov
lods
push
sti
xchg
rorl
jp
lds
ljmp
adc
dec
inc
fs
jnp
jae
fdivl
enter
jae
sti
fdivrs
int3
jle
inc
or
inc
hlt
rclb
loopne
pop
jbe
xor
inc
sub
iret
fildll
xchg
arpl
pop
test
sti
lea
lea
sbb
sbb
ljmp
hlt
fwait
mov
lea
arpl
xchg
sbb
sbb
loop
push
pop
mov
adc
repz
or
nop
inc
jb
stos
xchg
adc
clc
mov
jge
mov
adc
in
in
orb
mov
xchg
inc
xor
jno
pop
or
aaa
add
roll
jp
filds
jge
pop
dec
loope
sbb
movsb
ljmp
sub
repnz
pop
outsl
pop
jmp
and
cmp
nop
adc
sahf
in
fstl
frstor
mov
mov
xchg
es
push
enter
add
push
and
inc
sub
sbb
pop
aad
scas
sub
cld
mov
fidivrs
push
les
divb
mov
outsb
subl
ret
push
mov
xor
push
out
loop
xchg
daa
loope
das
inc
out
add
xor
outsb
sbb
or
cmp
add
push
jae
mov
xchg
ficoms
dec
inc
sub
cmp
mov
dec
or
mov
adcb
je
lret
in
cli
pop
xor
mov
std
inc
sbb
xor
jmp
add
out
and
dec
xchg
xor
or
jb
fwait
fs
mov
pop
stos
imul
inc
jle
adc
or
and
cmpsb
ljmp
mov
hlt
mov
xchg
lret
rcl
mov
mov
int3
loop
outsb
cli
jle
imul
cmovne
popa
adc
mov
into
aas
test
xor
dec
push
adc
cli
aam
and
pop
pop
push
insl
jge
xchg
loopne
popf
xor
test
sub
jo
addl
out
fs
mov
adc
and
or
xchg
sti
push
jns
mov
lcall
jl
inc
xor
jno
and
and
decl
xchg
sti
popf
push
inc
dec
pop
insb
in
sub
jns
adc
push
adc
imul
xlat
mov
mov
mov
mov
push
inc
pop
std
or
ljmp
lret
gs
jo
mov
jo
mov
das
adc
mov
out
scas
movsb
bound
orb
lret
mov
xchg
xchg
jl
or
xchg
jle
stc
xchg
xchg
dec
adc
dec
lea
mov
inc
adc
test
jb
add
add
fdiv
jbe
or
lret
xchg
sbb
sahf
ret
cmp
enter
idivb
pop
inc
mov
mov
push
gs
in
imull
clc
mov
das
dec
cltd
sub
pcmpgtw
mov
mov
or
mov
or
popa
movsl
inc
cmpsb
lea
lods
xchg
xchg
out
clc
fisubrl
in
test
enter
add
lds
shlb
cmpb
int
popf
mov
xchg
adc
repnz
mov
xor
jne
bound
inc
jmp
and
push
imul
sub
mov
insb
fs
adc
movsl
dec
inc
xor
rcl
mov
mov
xchg
and
and
mov
mov
jno
adc
int3
mov
imul
movsl
ja
mov
pop
insb
cwtl
push
xor
mov
sahf
clc
jnp
sbb
or
das
pushf
les
cli
jne
jo
shll
out
inc
and
je
xchg
and
sbb
ds
lock
push
xor
cmc
je
outsl
sets
jae
jbe
inc
pop
popf
and
in
dec
push
ss
jnp
mov
loop
mov
leave
xchg
imul
xchg
out
rcrl
inc
jne
push
in
loope
adc
aad
in
cmc
fisttpll
or
pop
cmp
mov
out
and
mov
das
jo
sub
in
ljmp
fstpl
sti
mov
lods
pop
mov
mov
add
xor
and
mov
nop
mov
adc
xchg
sub
insl
ret
in
pop
push
enter
push
sbb
mov
mov
iret
rcl
popl
sub
mov
inc
mov
inc
add
cmp
inc
jp
adc
in
in
mov
fnsave
jo
jb
push
sbb
mov
mov
ja
add
stc
aaa
pop
mov
adc
outsb
repnz
insb
push
xchg
sub
mov
mov
jbe
jns
push
inc
outsb
repz
jns
pusha
xor
or
movsl
cmpsb
cmp
js
cmp
cli
aam
mov
test
lods
mov
aad
adc
mov
in
into
jbe
decb
fs
and
pop
test
lcall
push
mov
dec
adcb
clc
add
sub
push
jl
adc
stos
orl
stos
or
test
les
movsl
adc
push
jae
js
cmpl
fisubs
sub
dec
push
pop
lahf
daa
mov
lahf
mov
dec
sub
mov
inc
push
loope
push
fwait
cwtl
in
jge
nop
pop
jo
jns
mov
je
sahf
push
xchg
cmp
mov
inc
sbbl
mov
sub
mov
sbb
inc
jo
jnp
mulb
imul
sbb
in
jo
stos
lds
inc
sahf
mov
mov
pop
pusha
sub
test
fnstenv
sub
jb
ljmp
jns
clc
inc
mov
fsubrl
sub
fnstenv
jmp
outsb
cmp
mov
les
add
mov
test
xchg
add
jbe
imul
popf
popf
cmpsb
cmp
jle
mov
cmpsb
fsubp
cmpsl
les
mov
rcrb
lcall
and
lret
dec
xor
push
sarb
addr16
inc
xchg
je
aaa
daa
in
les
jne
push
and
loop
inc
lcall
cmp
push
mov
cmpb
or
fcmove
aas
add
mov
loopne
add
push
fisubs
xchg
imul
pop
sub
push
add
cmpsl
mov
scas
cwtl
scas
pushf
in
les
cld
jl
arpl
dec
popa
xchg
mov
pop
aam
push
dec
inc
xchg
jbe
add
pop
or
into
mov
push
repnz
xor
mov
test
add
pop
aaa
xor
mov
aam
test
cs
test
push
outsb
in
xor
mov
inc
cwtl
xorb
outsl
xchg
sbb
out
scas
add
dec
pop
imulb
andb
mov
pop
pushf
pop
std
fsub
addb
fsubrl
mov
outsl
jg
out
sbb
adc
call
ret
fs
cmc
mov
aaa
push
mov
mov
inc
mull
aad
xor
and
fwait
jns
cld
mov
icebp
sti
scas
fnstsw
mov
ds
xor
hlt
jae
dec
jo
sbb
pop
imul
xchg
sub
inc
cmpsb
and
xor
int3
ret
shlb
push
ds
and
loop
out
fistl
dec
jb
add
cmp
enter
outsb
jmp
movsb
jmp
outsb
inc
mov
test
lea
gs
pop
lods
sub
pushf
call
mov
add
idivl
xlat
jmp
stc
mov
out
mov
fidivl
mov
je
aaa
cli
into
inc
mov
scas
mov
adcl
xchg
inc
and
das
add
mov
jbe
adc
add
daa
movsl
mov
push
dec
xchg
in
cmp
lods
jnp
sbb
inc
fisubl
mov
imul
inc
jb
lds
sti
push
aaa
mov
call
jo
mov
lcall
in
fistpl
jno
test
xchg
and
fisttpll
jb
out
lock
pop
aaa
xorb
sbb
out
movsb
pusha
pop
notb
out
dec
fs
imul
xchg
jmp
cmp
xchg
push
jae
xor
div
and
aaa
adc
sbb
pop
adc
adc
adc
enter
mov
cmp
mov
or
xchg
push
movsl
lahf
sub
in
adc
test
pushf
mov
dec
xchg
je
mov
int
adc
or
ret
idiv
jne
jmp
fcmovb
pushf
cmpsb
inc
adc
pop
sbb
fimuls
imul
iret
push
call
mov
out
ss
push
mov
mov
jno
mov
movb
push
jl
push
pop
add
cmp
inc
xchg
mov
xchg
sub
mov
pcmpeqb
sahf
cwtl
jge
insb
mov
shrl
jecxz
nop
cmp
push
adc
push
or
adc
xchg
cmp
pop
fistl
dec
dec
jge
mov
pop
jp
xor
mov
xlat
push
nop
test
test
xor
pop
xchg
cwtl
push
popa
adc
pop
jl,pn
mov
stos
mov
loop
icebp
mov
aas
rolb
add
cmp
mov
push
mov
sbb
sub
ja
enter
push
movsb
lods
mov
jns
data16
pop
push
sarb
push
cld
push
sbb
lea
xlat
and
or
pop
int3
fsubr
sbb
test
inc
subb
lea
scas
int
sahf
daa
popf
mov
mov
int
jmp
mov
add
ss
daa
in
repz
out
ficoml
pop
jg
fs
enter
xchg
iret
add
mov
xor
test
xchg
mov
pushf
jge
cmp
sarl
dec
fcoml
clc
xor
test
mov
fsqrt
sbb
push
fdivs
mov
jns
call
in
mov
pop
ficompl
cmp
arpl
push
ds
sub
jmp
rorl
mov
cmp
pop
pop
imul
mov
mov
aaa
cmp
sbb
stc
jnp
inc
add
pop
xchg
mov
mov
sbb
lds
pushf
jne
jg
lds
xor
sti
dec
call
jbe
inc
ljmp
in
sub
fucomi
repz
adcl
repz
or
pop
sbb
into
pop
ret
dec
fs
loopne
inc
cltd
dec
in
and
pop
mov
adc
cld
in
int
lock
out
movsb
inc
leave
lea
xor
loopne
insb
jecxz
jne
xchg
test
mov
and
push
mov
fwait
sbb
jecxz
cmpl
hlt
cmpl
ret
or
lds
jae
add
and
mov
xchg
lret
xor
mov
jbe
popf
jg
jmp
adc
nop
adc
aam
int
fwait
arpl
es
cld
mov
mov
insb
mov
pop
into
mov
and
fldt
jg
outsl
call
shrl
pop
jae
fmull
inc
mov
lods
sub
mov
loop
loope
popa
pusha
push
mov
clc
dec
xorb
arpl
sbb
pop
shll
xor
xor
sub
gs
enter
xchg
push
sbb
cld
sbb
dec
mov
pop
xor
insl
in
push
sbb
push
adc
mov
aad
roll
es
pop
js
repz
or
enter
cmp
neg
fidivrs
pop
fstpl
xlat
fsubrs
iret
sbb
jne
roll
and
imul
push
mov
push
or
sub
xchg
ja
xor
in
leave
insl
ret
icebp
xchg
inc
movsl
es
repz
lods
pop
mov
xchg
test
sbb
pop
sub
ss
xor
imul
mov
xchg
clc
lret
cli
sbb
lahf
push
mov
icebp
mov
cmp
inc
pop
cmpsb
insb
outsl
shll
fnsave
xchg
lahf
mov
xchg
jmp
adc
push
or
add
lods
push
aad
cmp
aaa
subl
lods
int3
ds
rclb
push
cli
pop
xchg
outsb
mov
xchg
mov
popf
dec
js
sbb
pop
sti
lock
mov
daa
sbb
fadds
inc
xchg
sub
cmp
cli
jp
or
xchg
xor
dec
push
out
pop
gs
subl
xor
sbb
clc
inc
sub
scas
ret
imul
jp
std
sbb
ds
rorl
jmp
ss
shlb
repnz
mov
out
xor
daa
pop
jns
pop
loope
test
mov
repnz
sahf
adc
int3
cld
xchg
jp
and
push
ds
hlt
pushf
shlw
push
pop
mov
push
pop
roll
jb
fs
dec
mov
out
lods
inc
xchg
popa
testl
adc
jecxz
pop
cmp
cmp
outsl
push
sub
dec
xlat
cmp
fsubp
pop
divb
test
jnp
lds
fwait
mov
movsb
leave
xorl
sub
push
mov
adc
nop
push
jecxz
push
cmpsb
xchg
adc
out
aad
orl
mov
or
or
cld
jl
xor
rorb
jnp
and
into
pop
cmc
jecxz
imul
jecxz
push
gs
sub
mov
mov
andb
and
inc
inc
sbb
xchg
dec
xchg
jmp
hlt
adc
cmp
cli
sahf
pusha
les
or
pop
pushf
xchg
xor
es
pushf
rcrb
or
out
xchg
outsl
xchg
rorl
test
cmpsb
xorl
dec
mov
sub
xor
jb
mov
neg
popa
mov
adc
daa
lock
jb
cli
ret
push
sub
fwait
lcall
push
adcl
inc
xor
jmp
jmp
enter
sbb
divl
add
call
add
xor
dec
push
pop
xor
std
xor
movsb
xchg
adc
sti
sub
jle
adc
jns
test
ljmp
fcoml
cwtl
xor
outsl
jno
sbb
arpl
mov
aas
js
sbb
mov
test
lret
je
loope
cld
cmp
vpshufbitqmb
je
clc
and
aaa
je
push
xor
push
pop
jne
xchg
sub
jbe
aas
jns
in
xchg
test
icebp
push
stos
and
mov
jne
pop
or
leave
sub
adc
and
pop
xor
je
mov
arpl
cltd
out
ret
popa
in
les
jnp
arpl
int
jecxz
scas
test
xchg
cmpsb
mov
sub
int3
pop
int
xor
int3
movsb
dec
into
lods
pop
cmp
add
jne
addr16
dec
aas
sub
adcb
dec
or
push
mov
jae
jb
sbb
or
fiaddl
aaa
shll
xor
enter
push
jl
call
xchg
and
push
enter
daa
decb
arpl
inc
das
and
xor
push
ljmp
jmp
mov
adc
add
gs
into
enter
je
test
scas
ss
sub
int
in
imul
data16
in
sbb
fistps
gs
push
scas
or
dec
and
mov
cmp
out
xchg
lods
movsb
add
fsubl
jne
pushf
xchg
jae
rcrb
jmp
ror
rcl
mov
sti
rcrb
add
cmp
std
add
or
addb
in
or
iret
ss
xor
clc
in
popf
inc
enter
push
popa
lock
mov
push
clc
fisttpl
pop
dec
arpl
and
mov
and
mov
arpl
sbb
out
scas
fs
aas
mov
cltd
mov
or
lret
pop
shll
jmp
popa
mov
mov
mov
imul
cld
out
gs
into
bound
xchg
jg
mov
gs
adc
xor
push
test
das
cmpsb
test
clc
mov
dec
test
pop
mov
fstl
into
pop
imul
mov
stos
in
adc
ljmp
fsubrl
xor
push
lcall
jl
lods
pushf
dec
xor
push
repz
aaa
pop
adcb
push
out
lret
jp
xor
int3
mov
inc
push
lahf
pop
add
lock
imul
pop
pop
dec
adc
lahf
jnp
add
out
scas
bound
shr
push
js
jp
addr16
icebp
fbld
aad
jle
cmp
stc
leave
insb
mov
sub
enter
xchg
mov
inc
push
sub
rep
shr
push
push
fisubrl
mov
mov
xor
mov
pop
xchg
add
addr16
pop
pop
loopne
mov
dec
push
cmp
cmpsb
sbb
mov
in
pusha
sti
ja
cld
outsl
pop
outsl
dec
jmp
push
mov
push
cmpsl
adc
ss
mov
loopne
push
int3
cmp
mov
enter
test
lcall
push
aas
dec
aad
jnp
xor
and
pop
mov
xchg
inc
leave
xchg
jle
cmp
fwait
sub
jns
or
paddw
xor
or
push
push
lods
mov
pop
inc
dec
pop
negl
repz
jb
out
mov
int
xor
jo
push
fsave
hlt
lods
pop
dec
mull
scas
test
jecxz
mov
in
pop
ljmp
in
dec
xor
cvtps2pi
test
sub
cmpsl
sbb
sub
inc
fisttps
sbb
sub
fwait
outsb
mov
loopne
repz
add
cltd
addr16
lahf
das
scas
adc
fcmovb
xchg
ljmp
into
roll
or
push
ss
loop
loope
ljmp
sarl
push
ljmp
pop
push
mov
movsl
cmpsb
push
popf
mov
insb
pop
add
push
lahf
outsl
mov
sub
in
xchg
ffreep
testb
mov
cltd
xor
stc
scas
daa
jl
movsl
jg
inc
daa
ror
sbb
aas
sbb
int
loopne
push
adc
sub
movsb
xchg
imul
or
enter
add
push
repnz
or
xlat
dec
pop
inc
repz
push
mov
add
stos
xlat
or
jbe
cs
das
cwtl
fdivrs
bound
sub
xor
jle
pop
lods
jmp
cli
rclb
mov
push
mov
add
sub
dec
mov
mov
jae
jecxz
xor
cmpsb
jge
dec
inc
inc
popa
data16
sbb
or
jge
cwtl
jmp
mov
ss
movsb
and
pusha
xor
jno
sbb
bound
mov
and
add
int
and
pop
js
into
repz
and
dec
stos
fisttpll
leave
insb
mov
cmpsb
fisttpll
adc
jecxz
jecxz
out
mov
mov
mov
lahf
repz
in
cwtl
popf
lret
out
pop
les
and
cmc
fisttpl
mov
lahf
cltd
sub
ja
leave
lret
repz
pop
cmp
push
sti
push
adc
add
lcall
cmc
sbb
dec
jnp
dec
fstps
mov
jnp
xchg
in
shlb
lcall
das
cwtl
frstor
lock
loop
xor
stos
imul
movsl
pop
mov
push
sahf
clc
lret
push
pop
push
inc
out
ss
notl
jb
cmp
adc
sbb
cmc
movsl
sbb
push
test
adc
add
jle
xor
mov
enter
fisttpl
add
add
and
mov
or
lock
popa
cmpl
cmp
fadds
mov
sub
mov
add
test
test
cmp
push
rolb
xchg
std
sbb
sbb
xor
mov
or
mov
add
in
flds
test
mov
ss
mov
adc
pop
insb
fnstenv
and
inc
lret
pop
rcrl
cmc
push
divb
out
push
pop
nop
mov
mov
fs
fldt
xchg
push
xor
scas
push
pushf
ret
inc
cmp
pop
push
jle
ret
mov
test
lea
sbb
xor
ja
jb
lds
loopne
inc
shll
jae
fisubl
out
inc
dec
mov
sarb
jno
icebp
push
test
loopne
js
adc
outsl
xchg
pop
decl
scas
cmpsb
out
repnz
jmp
aaa
popf
pop
and
out
movsl
and
aam
pop
sbb
out
cmp
loopne
rcrb
jns
int
mov
mov
and
add
jge
stos
mov
mov
adcb
clc
adc
jo
xchg
rcrl
push
in
in
mov
and
xor
insl
dec
mov
ret
push
int
insb
dec
pusha
and
sbb
push
cmpsb
mov
pop
pop
testb
or
sub
rcrl
fld1
popf
mov
mov
cld
xlat
test
pop
inc
movsb
ret
cli
mov
jne
ds
cmp
popf
mov
jno
xchg
pop
mov
push
jns
inc
cmpsb
mov
ljmp
xchg
jg
insb
push
push
aas
test
aad
xchg
addr16
push
sub
xchg
dec
cmc
fcmovnbe
push
addl
out
or
aaa
les
or
push
cmp
call
sti
iret
ds
cmp
sub
mov
cs
arpl
dec
xchg
loope
shll
sub
mov
addl
mov
fsubl
inc
jne
insl
cli
lock
pop
dec
dec
lds
xchg
xchg
sbb
and
adc
and
fisubrs
cmp
into
out
push
repz
addb
mov
fildl
call
sub
pop
sub
jge
mov
jp
mov
dec
loopne
push
or
add
das
insl
gs
mov
push
out
cmp
mov
test
push
std
int
mov
dec
inc
sub
cmp
test
inc
les
dec
stos
in
xor
mov
xor
pop
inc
jo
je
push
adc
sbb
out
insb
jle
cmpb
ret
movsl
xchg
push
mov
sub
out
xchg
lea
sbb
ds
data16
pushw
repnz
sbb
add
pushw
repnz
aad
jecxz
cmp
pushl
xor
push
in
lret
cmp
mov
aaa
mov
xchg
je
xchg
or
shl
sub
imul
imul
rcrl
pop
mov
or
in
push
xchg
fmuls
fs
jge
cmp
adc
in
cmc
fnstsw
mov
cwtl
cmpsl
in
ds
pop
std
pop
jecxz
fbstp
xchg
xor
loope
xor
dec
xchg
push
sub
xchg
cmp
push
cld
xchg
out
pusha
out
mov
fs
int3
or
test
and
into
sbb
pop
rolb
mov
daa
dec
into
stos
add
sti
jg
ret
stc
push
mov
shld
mov
or
mov
loope
jle
mov
fbld
stc
lea
popa
sbb
cld
mov
repnz
dec
push
imul
push
test
sbb
push
out
ret
outsl
imul
jmp
in
stos
mov
push
popa
mov
push
test
sub
mov
stos
cmp
and
xchg
imul
mov
sub
mov
lds
sbb
dec
add
vmwrite
push
sub
jo
pop
adc
pop
xlat
imul
insl
push
inc
ret
shl
push
or
lds
cld
fiadds
test
push
lahf
jbe
mov
push
pusha
jp
lds
dec
daa
ret
xor
lods
int
sahf
fwait
or
rcl
ret
fwait
stos
sub
mov
xor
fistpll
fisttpll
test
in
mov
aaa
in
jno
cmc
stos
ljmp
in
scas
mov
inc
shlb
adc
jnp
adc
mull
or
ret
push
js,pn
iret
inc
cmp
add
test
notb
xchg
mov
outsb
dec
out
mov
repz
xor
sub
sarl
mov
and
rclb
lcall
push
or
push
cld
mov
jle
mov
shll
push
iret
xchg
js
mov
cmpsl
mov
push
mov
add
dec
lret
add
dec
mov
jnp
jg
mov
repnz
add
xchg
mull
push
shlb
out
mov
jg
xchg
int
out
cmp
fnstcw
rcr
jae
orl
and
leave
addr16
mov
xchg
in
pusha
dec
pop
or
dec
imul
adc
cld
push
dec
pop
fcoml
cmc
test
enter
jne
movsb
or
call
push
out
sub
lea
out
clc
xchg
out
pop
loope
popaw
scas
mov
push
int
dec
or
repnz
cs
stc
add
fsubl
vminsd
xor
test
cmp
mov
dec
mov
jo
pop
fstps
jns
sbb
jl
inc
jg
int3
cmp
adc
dec
cmp
mov
xorl
inc
xchg
inc
jecxz
mov
bound
adc
fsubrp
ror
inc
jo
xchg
lret
jmp
in
and
enter
stos
lahf
xchg
cld
mov
push
push
jno
loop
cmpsl
in
gs
cld
ret
shlb
imul
hlt
dec
mov
stos
push
ja
or
popa
mov
cmp
sbb
ret
and
xor
jmp
subb
lods
mov
xor
int
add
mov
sti
add
mov
lock
add
jg
shll
fldl
xor
and
mov
cmp
icebp
imul
stos
push
pop
pop
insl
ja
jne
mov
cltd
test
popa
imul
popa
aaa
cmp
sti
push
lea
repnz
push
and
cmpsl
in
es
orb
xor
cmp
fisttps
xchg
jmp
dec
cmp
pop
jnp
outsl
out
dec
addr16
loope
lahf
in
ss
dec
mov
fmull
fs
idivl
fwait
loopne
mov
lahf
out
clc
jge
mov
or
push
pop
in
adcl
dec
or
push
mov
jge
inc
mov
rclb
repnz
arpl
pop
xchg
idivl
and
rcl
je
test
cld
scas
dec
outsl
cmp
lahf
imull
ret
pushf
dec
aam
call
pop
ret
pusha
and
push
rcrb
dec
cmc
aas
scas
clc
xchg
outsb
push
dec
sub
cli
mov
pop
sub
and
aad
repz
sub
das
icebp
sbb
xchg
mov
push
clc
test
movsl
xchg
mov
std
in
inc
dec
sub
or
pop
or
sbb
mov
and
pextrw
dec
add
lock
adc
jb
pop
adc
mov
cmp
data16
cmpsl
xor
push
xchg
stos
mov
push
stos
pusha
pop
sub
mov
jnp
cmp
je
jno
and
std
lods
nop
push
scas
pop
adc
ja
das
dec
adc
rcl
scas
mov
orl
push
xor
xchg
data16
jg
out
jno
cmp
aaa
push
adc
jbe
pusha
sti
jnp
dec
inc
or
es
mov
dec
jbe
or
adc
imul
idiv
xchg
enter
sbb
dec
ror
mov
arpl
cmp
leave
fisttpl
adc
sbb
out
sub
adc
cmp
ret
pushf
push
push
pop
lea
pop
out
pop
sbbb
movsl
mov
mov
cmp
pop
xor
ja
rol
add
inc
jno
sbb
mov
mov
addb
test
test
decb
rclb
and
cmp
sar
test
adcl
sahf
std
sbb
fidivrl
cmpl
jp
stc
sbb
hlt
sbb
jae
xor
or
in
cmp
scas
cmpsb
out
pop
xchg
mov
stos
aaa
dec
sti
jb
cmp
push
and
sub
sti
mov
pusha
stc
or
pop
cmp
mov
bound
lock
insb
out
mov
icebp
ljmp
pop
mov
add
test
leave
pop
in
and
pop
call
sar
cmp
into
push
pop
insl
sahf
add
repnz
pop
shl
xchg
dec
push
lock
sbb
scas
adc
xor
push
and
or
pushf
loopne
or
fwait
mov
popf
gs
call
or
pop
mulb
jecxz
fiaddl
push
mov
enter
jmp
fs
push
xlat
faddl
mov
dec
test
xor
cs
mov
scas
mov
mov
xor
or
in
jle
fwait
inc
lret
lds
mov
fidivs
mov
push
out
push
jl
mov
xor
lock
ljmp
out
sub
call
mov
sub
mov
mov
test
cwtl
lret
test
adc
sub
push
lods
test
cmp
adc
out
fbld
cwtl
test
rolb
add
xor
call
outsl
fbstp
cmp
mov
or
mov
cmc
scas
jl
imul
sbb
xchg
mov
movb
sub
lods
cmp
jbe
xor
adc
sar
scas
unpckhps
cmp
adc
push
in
lret
mov
lcall
adc
dec
divb
das
gs
js
push
inc
data16
jo
xchg
fbld
popf
stos
rcr
inc
in
sti
in
enter
popa
outsl
xor
jb
xor
movsl
aam
ficompl
mov
inc
fcoms
ja
and
and
and
xor
jge
out
inc
loope
inc
aas
int3
inc
or
and
ret
mov
mov
jmp
mov
jle
xchg
repnz
push
dec
inc
jecxz
push
xor
std
ljmp
aam
sub
adc
sti
adc
insl
je
or
jb
or
xchg
pop
sub
sahf
or
and
mov
push
sub
mov
ret
adc
push
pop
out
or
std
fsubrl
jecxz
popf
repz
scas
negl
popf
xchg
add
mov
inc
testl
sbb
fldl
jp
and
and
mov
rolb
jge
and
inc
mov
inc
cltd
rclb
jl
fwait
ja
aas
scas
sub
insb
adc
push
pop
xchg
call
mov
fdivr
out
jecxz
mov
adc
cmp
xchg
sbb
mov
es
cmp
mov
stos
std
jb
repz
adc
fnstcw
outsl
and
mov
adc
dec
jae
out
inc
cmpsl
push
xlat
add
add
and
push
inc
sbb
out
sbb
icebp
bound
mov
or
mov
popf
fwait
cmpsb
mov
in
cmpsb
stc
lcall
movsb
adc
test
in
sti
sbb
inc
cmpb
loop
je
cli
call
icebp
xor
mov
push
sub
push
cmpl
outsl
jle
inc
push
xor
push
js
sbb
ret
call
cmpsb
sub
xor
push
mov
int
scas
xor
and
inc
shll
jle
push
rorl
ret
add
inc
cs
xchg
std
test
pop
sub
cmp
scas
gs
sub
outsl
fcoms
sub
mov
imul
pop
dec
sub
fwait
mov
push
or
and
jb
test
movsb
js
sub
cmpsl
in
ret
aam
cmp
out
hlt
sbb
es
cmp
mov
sub
xchg
imul
cld
sbb
lods
and
mov
shr
xchg
mov
inc
aaa
sub
add
or
xor
push
rcr
rolb
clc
mov
lret
lods
jbe
push
jmp
push
pop
inc
cmp
jle
xorl
lods
arpl
mov
sti
mov
clc
xlat
jae
push
jl
stos
dec
lods
inc
xchg
xchg
aaa
xor
cmp
pop
cmpsb
and
pop
fidivrs
sbb
adc
add
mov
stos
mov
pop
rcrb
jbe
xchg
ds
hlt
jmp
cli
movsl
add
je
sbb
and
lret
mov
xor
pop
rolb
jge
out
dec
adc
jb
aam
test
into
lcall
add
pusha
mov
cltd
sbb
sarl
add
insb
mov
pop
lock
fnstenv
repz
fimull
push
and
cmp
loopne
cs
ljmp
push
sub
loopne
pop
jnp
loopew
push
sub
fcompl
sbb
rcll
push
cmpsb
mov
fcmovb
incl
or
adc
stos
push
cld
jg
xchg
xor
nop
scas
out
add
mov
ds
pop
dec
out
pop
push
cmpsl
or
daa
or
inc
daa
ss
out
cwtl
jbe
leave
cmp
stos
mov
repz
jp
mov
sub
add
mull
or
pusha
int
sub
hlt
in
das
cmp
and
cmc
add
add
movsb
subl
xchg
cmp
cld
das
shlb
lahf
loope
jnp
jae
jecxz
adc
add
clc
mov
or
cld
or
les
pop
inc
rolb
or
jp
and
lods
jp
sbb
dec
push
sbb
mov
ret
stc
daa
stos
aaa
cmpsb
mov
fisttps
jmp
mov
movl
int3
jge
int
aam
scas
lret
inc
pop
jmp
push
test
fnstenv
mov
fcoms
int
push
jg
xchg
ljmp
adc
cmc
xor
xchg
lcall
inc
andl
push
mov
hlt
mov
fldt
add
in
push
pop
cli
mov
xor
repnz
sbb
aas
or
push
add
mov
xchg
ljmp
push
dec
lods
adc
subb
inc
out
dec
fbld
mov
or
add
out
xchg
inc
add
bound
loopne
test
inc
lahf
and
idivb
out
std
or
in
addl
cmc
in
jle
jge
out
xor
out
ljmp
movsl
push
outsl
pop
dec
or
jb
pusha
mov
out
testl
loope
fdiv
popa
frstor
mov
test
pop
add
sti
dec
xchg
mov
or
adc
std
mov
dec
or
dec
mov
dec
scas
or
mov
jnp
loopne
popa
jbe
mov
push
sbb
test
in
out
sbb
mov
mov
pop
mov
popf
fildll
jl
inc
and
mov
es
jns
movsb
push
sahf
aam
cmpsb
add
fimuls
sub
clc
jns
add
ret
sbb
bound
fst
les
popf
flds
mulb
cli
pop
sub
xchg
cmpsl
pop
cmp
push
add
stos
adc
flds
push
int
mov
fimuls
add
out
inc
lahf
push
in
jno
jbe
xchg
mov
push
xor
icebp
and
jl
sti
dec
es
fcmovnbe
pop
stos
pop
jae
andl
daa
ficoms
xchg
adc
sarl
xchg
ss
sub
fisubs
fcomps
jmp
insl
leave
add
sub
fwait
movl
push
in
into
in
leave
mov
mov
fadd
sub
cld
pop
pusha
fnstsw
inc
lcall
ds
xchg
cmc
xor
push
aad
mov
dec
cs
inc
in
cld
lret
cmp
and
insb
lods
into
ficompl
add
jae
adc
bound
pop
push
je
clc
mov
sbb
mov
je
pop
arpl
lret
fnstcw
pop
cmc
das
ss
xor
push
subb
js
push
in
cmp
sahf
jo
push
testl
xor
push
faddp
xlat
into
dec
dec
clc
mov
sub
mov
nop
sti
mov
loope
imul
insl
sbb
shrb
inc
cli
cmpsb
or
das
xorps
addr16
popa
push
stc
adc
cwtl
dec
mov
aad
mov
pop
aaa
lret
bnd
shlb
shll
outsl
cltd
xor
lret
mov
in
pop
cmp
sub
das
push
sub
mov
test
sub
mov
das
pop
cmp
ret
pop
xor
add
popf
addl
xchg
outsb
jp
out
cmp
mov
mov
pop
xor
ret
iret
pop
into
adc
rorb
sbb
scas
lods
insb
xchg
pop
or
out
xchg
enter
dec
mov
sub
aad
cmpsb
lods
test
dec
outsl
mov
add
inc
dec
push
js
xor
ss
iret
sti
push
stos
or
into
sbb
push
sbb
dec
scas
xor
ds
cs
mov
dec
fldt
and
rcrl
add
rcr
outsb
enter
imul
loopne
pop
xor
int3
enter
add
cmpsl
sbb
loopne
stc
xchg
xbegin
xchg
bound
int3
ds
or
loopne
out
xchg
sbb
enter
aam
jmp
clc
aad
outsl
mov
scas
sub
lret
sub
pop
loop
stc
jge
sub
jbe
sbb
dec
sbb
jne
popf
rclb
jp
inc
filds
mov
stc
sub
inc
cmpb
rcrl
jecxz
add
add
ficomps
out
push
xor
sbb
gs
jg
xor
adc
daa
stos
jno
cli
rolb
sbbb
cli
and
xchg
push
jb
jecxz
repz
das
sub
in
out
or
jl
or
jmp
mov
jmp
gs
cmp
das
jecxz
jno
cmpb
test
shlb
sub
int
loopne
idiv
jo
push
and
ss
movsb
insl
pushf
repnz
jecxz
lods
sub
mov
xor
loope
lea
sub
mov
and
pop
mov
jge
adc
push
xorb
test
test
and
movsl
xor
mov
lock
inc
mov
push
hlt
add
xchg
idivb
lcall
adcl
std
das
mov
lcall
push
mov
sti
fsubs
in
or
nop
mov
dec
or
push
loopne
mov
cld
mov
std
std
aam
dec
sbb
pop
hlt
in
lea
mov
clc
stc
push
mov
enter
ja
cs
and
cltd
adc
pop
cltd
sti
pop
js
out
fld
xorb
push
xchg
mov
sub
or
add
call
incl
or
mov
xor
jmp
inc
pop
and
jae
sub
sub
sub
jb
cli
std
xchg
mov
push
in
pop
sub
push
ja
mov
idivl
pop
cltd
mov
iret
mov
sub
rep
popa
scas
pusha
test
cmpl
adc
and
in
mov
dec
loopne
cld
and
xor
sub
mov
pop
jecxz
xor
xchg
iret
dec
xor
inc
scas
rorl
rcr
incl
pop
adc
mulb
pop
dec
into
add
mov
lods
sub
lock
xlat
cmpsl
inc
pushf
mov
scas
xchg
cwtl
xlat
mov
std
lret
fs
popa
mov
jp
xchg
add
mov
outsl
data16
movsl
sub
fsubrl
and
sbb
xor
cmp
jb
test
cmc
add
imull
or
mov
ljmp
add
test
sbb
stos
cmp
sahf
call
and
pop
notl
dec
dec
adc
mov
pop
jmp
into
ret
shld
xor
add
mov
sarl
jmp
mov
jb
sub
sbb
lcall
lret
mov
sbbl
and
cmpsb
negb
mov
pop
gs
inc
jp
orl
jo
sub
mov
stos
jecxz
mov
filds
lea
sbb
repnz
hlt
movsb
cld
push
xchg
fs
and
sub
repz
add
sub
inc
out
in
outsl
push
in
cltd
paddsw
jnp
cmp
das
push
jge
arpl
in
jae
add
out
sbb
cli
sub
dec
mov
into
lea
fdivrs
lods
pusha
cmp
les
jbe
xchg
imul
add
out
cs
scas
out
mov
nop
push
push
jle
hlt
test
js,pn
lret
cmc
add
xor
mov
mov
pop
pop
cmp
fisubrl
dec
mov
push
aaa
ja
repnz
mov
pop
xchg
push
pop
ret
cmpsb
push
jge
aaa
lods
inc
scas
cltd
push
inc
sbb
adc
adc
lds
cmc
mov
jnp
test
les
cmp
cmp
mov
xlat
repnz
or
mov
aaa
jnp
sub
fdivr
mov
sti
mov
jmp
sub
adc
xchg
mov
shr
out
js
pushf
sbb
push
mov
adc
fwait
cli
mov
out
xchg
adc
rclb
lock
sub
mov
movsb
cmc
xchg
mov
jbe
jnp
pop
aaa
and
incb
and
jnp
aaa
mov
mov
jae
aaa
sarb
xchg
loopne
test
add
push
push
push
inc
mov
and
fwait
pop
std
arpl
mov
iret
test
out
mov
fsubr
sub
add
jmp
push
mov
xchg
sbb
and
insl
push
popa
dec
mov
add
enter
jns
pop
or
dec
dec
sub
adc
rcl
push
outsl
mov
imul
jg
push
sbb
sub
outsb
cmp
repnz
repz
push
imul
inc
pusha
mov
enter
sub
push
mov
cmc
jno
cmpb
adc
mov
lods
in
dec
lahf
enter
or
aad
push
xchg
cmp
lea
and
fsubrl
test
mov
movsl
or
cs
xchg
bound
mov
inc
pushf
pop
cli
mov
lret
sbb
repz
or
cli
inc
mov
scas
cmpsl
call
pushf
jmp
inc
ja
lods
into
rcll
pop
push
inc
push
and
and
add
scas
dec
xor
or
jecxz
push
xlat
inc
mov
xchg
aam
cmp
sahf
and
mov
xor
cwtl
pop
fwait
and
and
mov
cmp
leave
movsb
cmp
xchg
dec
dec
jno
daa
push
pop
in
insb
cmpb
mov
popa
or
jle
adc
out
cmpsb
inc
adc
cld
in
mov
dec
cmp
lea
inc
push
mov
pop
pop
cmp
sub
pop
js
cmc
stos
or
sbb
nop
inc
mov
mov
mov
jle
sbb
mov
insl
or
dec
rcll
or
leave
inc
mov
pop
sti
lahf
mov
add
subb
jo
sahf
adc
addr16
repnz
dec
arpl
int3
mov
lahf
or
insl
mov
fs
inc
icebp
cmp
or
push
xorl
in
aam
repnz
push
pop
popa
cmp
lahf
pop
xchg
cmpsl
cld
fisubrs
outsw
fistpl
les
lret
and
cltd
repnz
rcrl
pop
dec
or
push
mov
adc
popa
and
lods
test
xchg
test
xchg
and
and
test
jle
dec
mov
test
in
int
mov
add
mov
es
std
cli
int
in
jp
scas
sbb
inc
imul
jl
push
inc
pop
flds
sub
mov
mov
imull
mov
fwait
push
push
jo
pop
fiadds
push
in
cmp
adc
inc
loopne
mov
adc
insl
push
or
adc
xchg
xor
nop
repnz
cmpsb
mov
mov
cmpsl
stc
or
lret
arpl
mov
or
push
roll
loop
or
ja
hlt
cs
nop
out
fmuls
xlat
in
mov
jl
push
stc
imul
adc
rcrl
lret
sub
or
je
cmp
dec
pusha
xor
icebp
call
fildll
push
cmp
dec
out
dec
shr
jns
xchg
xchg
jne
test
rorl
fdiv
pop
mov
adc
xor
out
cmp
test
fldenv
ss
fisttpll
and
leave
test
movsb
subl
insb
xchg
dec
dec
sar
push
push
sarb
mov
repz
mov
push
adc
sbb
dec
sub
sbb
pop
stos
les
out
mov
add
mov
xchg
inc
add
mov
fistl
jnp
stos
iret
iret
out
in
sarb
mov
cltd
jne
decl
pop
lods
mov
in
jecxz
or
ret
pop
or
call
jl
popf
xor
int3
pop
pop
mov
in
scas
lret
push
mov
inc
fcompl
ftst
xchg
lcall
sbb
push
add
mov
jecxz
cmp
lcall
xor
es
and
cmp
push
nop
scas
fists
and
pop
cmc
mov
and
jge
push
adc
mov
cmp
addb
and
imul
sub
sub
test
jmp
pop
in
xor
sub
subb
jg
xor
addb
enter
scas
adcb
lds
push
xchg
pop
push
shlb
jmp
mov
iret
stos
and
sub
test
adc
jmp
pop
test
or
add
sub
fnstcw
pop
adc
mov
cld
jg
sahf
imul
je
fisubs
push
aas
ficomps
int
jl
stc
or
pushf
loopne
mov
aam
adc
mov
add
pop
call
int3
mov
jge
ret
mov
fbld
lods
inc
les
pushf
sti
clc
mov
cmp
xchg
jecxz
push
insl
jb
and
xchg
mov
std
dec
pop
cmp
in
xor
jnp
pop
idivb
add
mov
xor
xor
cli
mul
stos
mov
add
inc
add
sbbb
pop
xchg
mov
test
mov
ret
adc
sbb
aaa
sub
add
imul
lods
mov
dec
sbb
enter
mov
push
add
sub
mov
in
mov
sbb
mov
loop
xorl
jno
sbb
stos
roll
cmc
xor
mov
jnp
imul
into
dec
mov
or
ret
stc
mov
or
jo
jno
mov
pop
mov
jecxz
sub
in
xchg
push
mov
call
inc
sbb
call
shl
roll
popf
mov
jp
push
into
nop
in
and
stos
movsl
pop
dec
mov
in
xchg
adc
push
fdivl
nop
test
mov
push
cli
flds
push
or
icebp
lock
push
jns
push
cmp
push
lcall
out
sbb
pop
sarl
data16
xchg
scas
push
mov
adc
aaa
test
mov
jo
fiaddl
sub
mov
dec
lock
sub
mov
cltd
mov
adc
movsl
pop
andl
test
mov
test
jmp
adc
out
dec
stc
imul
out
cmc
dec
pop
push
push
adc
mov
mul
pop
mov
mov
xchg
xchg
int3
imul
ds
mov
push
iret
in
stos
test
lret
stos
or
scas
divl
adc
int
sub
outsl
insl
lock
mov
xor
push
mov
and
xchg
push
mov
in
mov
bound
xchg
scas
in
mov
lret
jbe
dec
push
mov
jmp
adc
mov
mov
popa
adc
and
mov
push
add
in
sbb
pop
push
jbe
xchg
mov
clc
adc
aam
rcl
jbe
fwait
mov
out
lds
out
xchg
aas
outsb
xchg
push
rol
imul
push
push
mov
push
out
or
dec
out
iret
cmpsb
into
and
movsb
sub
push
scas
or
inc
inc
mov
xlat
fwait
sub
lcallw
pop
cmp
stos
sub
movl
xor
mov
bound
lea
mov
xchg
adc
and
jno
iret
jo
push
ds
lahf
cltd
loopne
in
fadds
jecxz
lahf
std
xlat
mov
lcall
insb
scas
sub
notb
adc
cltd
ds
adcl
and
jnp
or
bt
mov
push
cmc
test
pop
repnz
ds
sub
add
inc
push
mov
idiv
mov
inc
adc
cmp
fs
jns
fstl
fsubrs
cmpsb
out
scas
jmp
fcoml
inc
jnp
add
mov
lds
pushf
lods
mov
pop
adc
sbb
jns
mov
dec
cmp
out
xchg
shr
mov
mov
inc
test
add
ret
push
jo
pop
ljmp
stc
sub
lods
sbb
inc
mov
pop
loop
mov
or
jl
add
and
add
jnp
and
outsl
sbbl
or
addr16
dec
in
ja
lea
cmp
hlt
add
sub
adc
xchg
and
lds
cmpsb
inc
adc
outsl
pushf
popf
fwait
lahf
dec
insb
cld
sbb
mov
inc
xchg
out
sbb
cmp
mov
adc
cmp
stc
cmp
les
sbb
mov
mov
out
out
cmp
push
mov
jo
sub
jne
push
aas
xchg
outsb
lret
out
xchg
pop
pushf
jle
dec
dec
mov
cmc
push
jecxz
lods
testb
sub
xor
inc
out
cmpl
inc
sub
addr16
xchg
mov
push
push
push
jo
sub
mov
xor
mov
adc
test
add
cmp
mov
unpckhps
xor
out
sahf
int
sub
push
iret
push
int3
mov
mov
shrl
inc
lock
jae
ficoms
or
rolb
hlt
fnstenv
fdivr
mov
jmp
js
ja
cmp
push
test
jmp
sub
repz
hlt
ret
out
push
insl
test
rcrb
insl
xor
lods
adc
loopne
into
inc
add
push
fs
or
gs
outsl
jnp
repnz
inc
ja
ds
adc
add
mov
sbb
sarb
les
in
mov
mov
adc
xchg
pop
mov
dec
push
jg
rcll
movsl
in
push
lock
push
insl
sbb
mov
shl
adc
daa
mov
cmp
jns
loopne
xchg
shlb
mov
xchg
jg
xchg
fs
daa
adc
call
gs
test
jo
mov
mov
sub
test
lods
add
js
hlt
pop
iret
popf
sub
add
or
cmp
cmpsb
mull
vmovsldup
ror
and
in
imul
cmp
cmp
shlb
jne
arpl
pop
das
fdivs
fisttpl
dec
xchg
mov
pushf
push
dec
insb
adc
or
loop
mov
add
xchg
pop
sub
fwait
dec
and
push
sub
adc
stc
and
mov
mov
mov
xchg
arpl
dec
pop
mov
xchg
addb
sub
xor
sbb
pop
jb
sti
and
jbe
push
sti
fs
es
cmpsl
into
subb
clc
outsb
cmpsl
or
mov
pop
gs
popa
fcoml
push
inc
inc
push
mov
xor
fcomps
dec
fdecstp
leave
fildll
leave
cmp
fistps
mov
xor
push
mov
rorl
push
add
pop
or
push
jno
das
sbb
stc
inc
ss
loope
jb
cmp
sbb
add
inc
xor
and
push
sbb
or
mov
icebp
aas
cmpb
inc
in
push
pop
sbb
sub
jp
dec
aaa
out
clc
hlt
enter
js
xchg
xor
aas
mov
sub
and
mov
inc
push
mov
std
cltd
in
daa
into
test
adc
arpl
mov
loope
add
rcrb
cmp
xchg
adc
in
sbb
or
cmpsl
cs
jl
mov
xlat
push
insb
aaa
mov
pop
and
das
sub
push
rolb
cmp
lock
loope
iret
loope
sub
aam
dec
mov
lods
mov
repnz
pop
xchg
fmuls
jnp
adc
movsl
xchg
adc
pop
ljmp
call
pop
mov
and
jmp
xchg
jp
mov
stos
dec
je
add
stos
data16
in
pop
xchg
dec
sti
das
mov
ficomps
adc
mov
popf
mov
into
mov
lret
pop
stos
cmpsb
add
push
cwtl
incb
lcall
sahf
leave
adc
xchg
mov
cli
sub
xor
lret
pusha
inc
mov
scas
xor
call
push
aaa
loop
cmp
int3
scas
cmpsb
mov
mov
daa
push
pop
dec
dec
xchg
xor
mov
sub
data16
xor
insb
pop
adc
les
ljmp
aaa
lret
push
imul
mov
xchg
cmpsl
jg
ficomps
dec
adc
or
and
outsl
cmp
es
imull
lcall
dec
int
adc
dec
jnp
mov
sub
cwtl
int
lea
add
inc
aaa
iret
icebp
loope
aaa
fmuls
push
sub
movsl
inc
cmpsl
iret
sub
cmpl
jp
mov
cli
mov
loope
lea
fisttpl
pushf
adc
stos
jo
xlat
shlb
je
xchg
add
or
push
pop
loopne
movsb
sub
cli
cmp
xchg
flds
xor
sbb
mov
in
testb
or
mov
xchg
icebp
fsub
inc
lock
mov
outsb
or
cli
shlb
mov
jne
jae
pop
jp
stc
jmp
pop
jae
mov
jo
add
and
xchg
push
in
ljmp
cmp
xchg
ret
mov
pop
gs
hlt
push
sbb
in
imul
pop
sbb
mov
leave
jmp
out
daa
mov
out
cmpsb
out
or
adc
movsl
mov
push
cmp
or
test
push
push
scas
push
push
ror
adc
pop
pop
push
dec
xchg
int3
xorl
cmpsb
cmp
or
push
dec
adcb
inc
sbb
pop
inc
lock
in
sbb
pop
scas
mov
xor
push
hlt
cwtl
add
cmp
outsb
mov
decl
clc
loop
test
loopne
xchg
aaa
sbb
sbb
sub
jge
pop
mov
fdivs
mov
add
stos
pminsw
sbb
rolb
in
sbb
lock
jae
push
ds
clc
sub
fdivl
imul
movsl
add
push
dec
repnz
cmp
addr16
pop
ljmp
xchg
rcrb
lds
adc
jne
lcall
or
jmp
dec
loopne
sub
dec
cmp
fcmovnb
repz
ret
jae
xchg
sbb
mov
rcrl
ljmp
imul
xor
jno
sahf
iret
repz
into
lock
adc
in
add
mov
leave
inc
mov
sti
cltd
push
test
rolb
xchg
pshufw
cmp
mov
das
jl
add
es
je
movsl
jns
xor
stos
addl
adc
inc
loope
stc
push
in
movsl
fcoms
pop
push
xchg
aaa
notb
lret
jecxz
add
mov
andb
daa
out
movsl
cmp
sub
add
ds
icebp
sbb
enter
int3
ja
cmp
inc
scas
sbb
outsb
icebp
push
lds
dec
pushf
and
stc
dec
dec
lret
mov
xchg
xor
in
fs
movsb
push
test
lock
addr16
push
add
pop
inc
roll
in
and
imul
into
cmp
popf
pop
sbb
cmp
and
and
push
lods
lock
les
xor
sbb
pop
mov
jns
enter
out
sbb
mov
sub
jo
decb
jo
xchg
dec
dec
stos
mov
lea
mov
dec
popa
fimull
mov
mov
sbb
pop
mov
lods
mov
pop
insb
hlt
sbb
lods
fists
outsb
mov
sbb
icebp
ficoml
push
mov
push
out
adc
test
inc
and
lcall
xorb
pop
xchg
add
sub
jo
adc
push
lcall
add
xor
int
mov
jmp
sub
rclb
fdivrs
push
loope
adc
jl
das
sub
push
push
bound
inc
cli
std
arpl
jle
iret
push
mov
lcall
aaa
je
push
pusha
outsb
inc
ret
js
push
jge
dec
mov
rolb
js
mov
jmp
xchg
xor
jne
icebp
call
and
xor
ja
jb
dec
jno
pop
push
frstpm(287
pop
inc
out
in
arpl
addl
jp
pop
cmc
inc
popa
ljmp
in
andb
sub
test
sti
aas
and
jae
jbe
push
and
sub
adc
and
jns
jo
xchg
scas
out
mov
sbb
push
mov
out
mov
add
hlt
rolb
sub
lret
mov
fwait
jmp
and
or
repnz
adc
jge
cmp
jno
mov
mov
or
lcall
rorb
mov
and
or
pop
add
repnz
mov
inc
push
jg
daa
shrl
imul
aaa
in
call
jle
dec
pop
pop
outsb
pop
outsb
daa
adc
xchg
test
popf
cmpsl
xor
popl
adc
adc
jae
movsl
cmp
lret
cmpsb
inc
adcl
push
cmp
and
popa
sti
dec
das
hlt
xchg
rep
int3
dec
adc
mov
jecxz
arpl
cmp
nop
ja
inc
int
pop
and
or
push
xor
orb
dec
loopne
fstl
mov
jae
or
sub
jge
lods
negb
movb
orb
and
mov
push
fwait
fwait
pop
and
in
je
mov
push
aam
lret
lock
arpl
fwait
dec
add
push
xchg
gs
ljmp
aas
fldcw
leave
cmp
mov
scas
xlat
imul
fsubrs
dec
pop
adc
jb
popa
popa
cmc
mov
fistpl
test
insl
adc
mov
sahf
lcall
cmpb
sub
jno
jp
aad
pop
mov
daa
push
sub
adc
icebp
xor
sbb
movsl
addb
imul
ret
xchg
arpl
test
pop
sbb
jecxz
test
push
in
pushf
sbb
cltd
adc
rclb
push
mov
sarl
mov
jae
xor
pusha
iret
mov
dec
dec
lods
lret
gs
pop
inc
dec
cmp
loope
jns
pushf
adc
out
aad
hlt
jb
cmp
jns
lcall
fistpl
sti
jl
fcmovb
push
das
pop
scas
or
mov
push
xor
loope
das
pushf
dec
fmull
xor
in
dec
mov
cmc
test
add
dec
dec
mov
fstp
lcall
out
jo
sub
jmp
mov
arpl
outsl
aad
lods
stos
call
and
outsb
test
sbb
repnz
mov
outsl
adc
roll
fwait
dec
loope
cld
cwtl
cmp
addr16
add
outsl
sarl
dec
ds
sbb
jge
sub
pop
pop
jge
nop
mov
inc
xchg
dec
lret
adc
scas
jmp
inc
add
fwait
inc
movsl
fcomip
hlt
mov
repnz
enter
cmp
aad
jmp
and
jb
cmp
add
push
push
jmp
cwtl
dec
dec
inc
les
push
in
xchg
pop
mov
mov
jl
hlt
jle
xor
pop
fisttpll
divl
mov
jae
cltd
loopne
mov
dec
repnz
push
fsubr
out
out
cwtl
cmp
cmp
inc
repnz
sub
sub
add
sbb
adc
dec
fnstsw
pop
data16
fcoml
ss
push
popa
test
cld
call
stos
cmp
sbb
dec
push
fs
mov
out
mov
adc
mov
dec
fistpl
fnstsw
lods
cmp
mov
cmpl
loop
or
es
add
sub
pushf
xchg
loop
ret
movl
mov
xchg
fcomps
ret
cvtps2pd
jmp
shlb
cmc
fistps
insl
cmp
dec
and
lods
add
stos
dec
push
insl
sbb
or
mov
fwait
stc
hlt
pusha
pop
stos
js
test
loope
aad
sub
data16
or
inc
adc
pop
lret
xchg
mov
aad
inc
in
int3
push
push
imul
loope
aaa
icebp
xor
sbb
imul
pop
pop
dec
xor
mov
icebp
mov
cs
xor
iret
mov
push
mov
xchg
aad
lret
pop
arpl
add
dec
sar
jae
movsb
xlat
cli
dec
push
lds
mov
mov
xchg
jne
subb
in
or
andl
add
popa
in
popa
xor
jno
jo
add
push
xchg
popf
sub
hlt
lds
dec
inc
clc
js
loop
and
jb
inc
repnz
cmp
mov
je
bound
xor
int3
xor
jge
ljmp
aaa
ss
les
adc
cmpsb
hlt
sbb
pop
lahf
sbb
mov
push
mov
fs
jae
lea
sbb
xchg
ljmp
inc
push
loop
dec
xchg
or
js
cmc
inc
add
mov
call
cmc
arpl
loop
insb
mov
mov
loopne
or
leave
xorl
mov
fimull
shlb
in
mov
test
pop
inc
leave
mov
mov
loope
xchg
popa
sbb
insb
imul
in
mov
jns
leave
mov
orb
fstp
mov
pop
call
lds
mov
push
movl
push
popa
fwait
jo
mov
sbb
mov
push
inc
lret
cmpl
ja
dec
int3
mov
mov
in
adc
clc
roll
mov
push
jne,pn
xchg
add
out
mov
fistps
or
callw
lahf
gs
jl
mov
mov
jo
pop
push
dec
sbb
inc
stos
or
outsl
push
std
gs
xor
arpl
jbe
push
fwait
incb
and
fcmovu
iret
jl
loop
movsl
ret
adc
lcall
sub
jecxz
movsb
xchg
mov
add
cmp
mov
sub
jno
sbb
mov
insl
mov
xorl
mov
inc
dec
test
dec
popf
stos
pusha
jb
mov
adc
in
xadd
loopne
xchg
addl
or
lahf
in
push
mov
cltd
sub
xchg
xchg
call
add
clc
outsl
push
sbb
add
out
pop
and
add
pop
rcll
js
in
push
mov
arpl
std
pop
lret
lds
lahf
test
jmp
sub
mov
dec
xchg
ss
pop
push
adc
pop
out
enter
out
pop
sahf
xchg
scas
mov
adc
aaa
mov
enter
subl
adc
adc
das
jo
or
js
dec
jl
cmp
or
jb
or
std
outsb
mov
mov
mov
sbb
fwait
rcll
cmp
inc
jle
repz
cmovg
lea
add
pushf
scas
in
sahf
lods
cli
mov
mov
ret
loop
xchg
out
fistpll
inc
jnp
ficomps
das
jne
sbb
pop
mov
in
stos
jecxz,pn
insl
dec
xchg
gs
lods
add
push
scas
push
mov
in
fdivl
push
inc
rolb
mov
ret
mov
movsb
aad
out
jge
xor
cmp
por
dec
pusha
fstpt
cld
xchg
lcall
and
push
addr16
clc
cwtl
cmp
jne
cmp
pop
insl
ja
dec
push
loope
sbb
out
cmp
es
push
adc
fs
inc
adc
js
arpl
sub
cld
adc
cltd
daa
shl
sbb
xchg
mov
test
hlt
mov
push
or
xor
je
adc
in
cmpsb
jg
in
ss
vpunpcklbw
cmp
shrl
scas
push
push
outsl
iret
sub
enter
mov
add
adc
orl
add
into
push
and
enter
xlat
js
mov
in
mov
decb
orl
nop
xchg
mov
cltd
sub
negl
popf
adc
sbb
adc
push
ss
pop
jp
ljmp
inc
divl
cmpsl
inc
add
jo
cmp
cs
loope
aad
mov
sbb
dec
pop
push
dec
jb
in
adc
xor
dec
jo
out
or
adc
out
push
mov
test
xchg
mov
cmpxchg
inc
dec
repz
clc
outsb
sbbl
push
adc
sahf
jno
test
add
dec
jbe
cli
movsl
mov
data16
aas
jb
and
bound
data16
push
add
push
mov
push
insl
push
je
dec
inc
data16
jecxz
pop
into
clc
inc
inc
sub
cwtl
aas
je
inc
and
jl
jecxz
xchg
xchg
or
pop
imul
inc
inc
jl
aam
adc
pop
pop
std
js
add
lahf
sub
mov
xlat
xlat
sbb
mov
add
int
outsb
test
gs
sub
mov
aam
mov
iret
dec
lds
mov
cwtl
xchg
push
out
lods
mov
mov
lods
imul
jbe
rolb
jne
xchg
daa
pushf
cmp
and
add
mov
and
psllq
fisubrs
movsb
sub
imul
call
rclb
push
stc
push
in
or
xor
pop
adc
cmpsb
mov
cmp
and
pop
jno
out
js
divb
je
outsb
mov
aad
jae
mov
into
xchg
pop
call
fbstp
fdivrl
addr16
insb
sub
sub
sbb
xor
rorb
int3
subl
pop
call
ljmp
out
out
sbb
insb
test
daa
mov
rcll
lock
dec
adc
sub
sub
testl
or
sub
fwait
je
dec
mov
stos
rcrl
roll
mov
inc
xor
nop
xor
jg
dec
popa
popf
cmpsb
push
mov
jmp
push
cmpl
mov
loopne
push
mov
leave
scas
xchg
lods
ret
mov
leave
push
pop
sbb
lcall
cmp
roll
in
jne
das
sub
test
push
jno
add
dec
in
xor
ss
ret
mov
or
hlt
out
sarb
pop
arpl
jnp
jmp
outsb
outsl
xchg
sbb
xchg
fimull
call
mov
jo
das
je
cld
xlat
aaa
jp
bound
mov
loop
mov
repz
outsl
push
jbe
les
test
xor
push
gs
inc
lcall
jp
add
aad
add
inc
jg
push
jge
xor
cmpsb
jnp
xorb
push
fwait
sub
cmovae
mov
rcr
and
lods
jge
loope
cmp
xor
icebp
sub
sub
and
pushf
jge
movsl
dec
mov
and
ss
js
test
or
sbb
adc
add
pop
leave
stos
int3
jle
cmp
inc
in
test
inc
xor
in
sti
clc
adc
pop
cmpsl
shlb
lret
jnp
xlat
inc
and
xor
inc
fwait
push
pop
sbb
pop
bound
jns
arpl
jge
pop
fldl
test
push
pop
lock
gs
mov
rcl
jmp
pop
or
popf
mov
gs
jle
stos
jmp
cmp
adcl
and
mov
xchg
jecxz
and
cmpsl
ret
dec
dec
jo
fnstsw
orb
push
jns
and
stc
stc
insl
movsb
aad
or
sub
les
jo
stc
jp
dec
enter
jge
push
mov
fsubs
fmul
pop
in
test
inc
cmpsb
sub
mov
popf
and
aas
push
mov
jnp
imul
mov
lods
dec
mov
scas
xor
dec
inc
jmp
leave
repz
push
xchg
iret
xlat
xchg
ljmp
jbe
pop
mov
jg
cmp
push
mov
test
and
in
jp
xchg
into
dec
mov
push
hlt
loop
pop
sub
push
mov
je
jle
pop
popf
add
add
push
jg
mov
jne
negl
sbb
aas
sub
std
cwtl
sar
lcall
aas
hlt
aas
push
xchg
aad
push
icebp
mov
mov
out
push
and
add
out
in
popa
scas
lahf
mov
fdivrs
daa
xor
jb
lods
mov
faddp
in
jg
sbb
dec
xchg
inc
mov
inc
pop
subl
cmpsb
and
adc
mov
leave
ja
imul
scas
sbb
mov
cmpsb
xchg
enter
jnp
push
jl
insb
js
sbb
addr16
push
sar
xchg
int3
lahf
pop
movsb
xor
sbb
pop
sbb
jge
mov
lea
mov
in
bound
jns
out
pop
inc
adc
andl
adc
mov
into
push
fucomi
je
inc
sbb
inc
hlt
push
xor
std
in
addr16
gs
pop
inc
stos
leave
jno
inc
lods
lock
jmp
push
jno
loopne
ja
push
in
add
inc
add
xor
pusha
sti
fmull
ficompl
aam
adc
xchg
cltd
pop
xchg
xor
cmp
cld
dec
adc
mov
inc
scas
or
fs
gs
pop
push
push
insl
push
loopne
xor
roll
ja
jmp
das
mov
dec
leave
sbb
call
pop
rol
mov
cmpl
stc
or
inc
fwait
mov
lods
shlb
aam
push
ffreep
mov
call
cltd
push
add
lock
xchg
adc
add
or
push
mov
andl
test
xrelease
sti
subl
cs
sbb
pusha
cltd
decl
rcll
mov
lds
call
inc
int
sahf
add
ja
movsb
inc
fcoms
mov
sbb
test
repz
xchg
arpl
ret
sarl
cmpb
xchg
pop
sarl
jp
scas
mov
dec
cmpsl
push
bound
pop
cmp
rcl
xchg
repz
xor
sarb
inc
ret
movsb
roll
xchg
mov
push
pushf
aam
cmp
jl
fwait
and
addl
inc
stos
or
jne
xchg
cmp
in
push
enter
mov
mov
out
mov
xchg
std
into
cwtl
sub
sarl
sub
jne
inc
insb
cmp
lds
cwtl
sub
pop
out
in
mov
inc
ss
xchg
mov
cmpsb
and
rcrb
mov
popf
mov
shrd
pop
push
cmpsb
pop
imul
dec
jb
jg
add
pusha
test
mov
xor
push
lret
cwtl
andb
xchg
adc
daa
jnp
bnd
cmp
lret
sahf
int3
dec
in
sbb
sbb
out
xorl
push
in
jno
jmp
lret
pop
inc
inc
and
jno
xchg
mov
mov
testl
mov
test
bnd
push
add
inc
mov
es
fcmovu
jne
jns
mov
mov
adc
fxch
repz
shlb
mov
xor
cwtl
popf
aad
mov
or
int3
mov
xor
bound
mov
out
mov
ss
sub
xchg
ss
jb
mov
clc
lds
sub
jb
cmp
mov
and
sbbl
ss
test
int
stc
jo
ret
cltd
out
jle
mov
je
pop
and
sbb
push
jo
mov
test
aas
jae
fistpl
dec
fsubrl
iret
mov
mov
cmpsb
mov
test
popf
div
loopne
out
mov
cmpsl
cmp
cli
push
jns
pop
push
cmpb
ret
imul
pop
fs
jae
movsl
ja
fnstsw
jbe
pop
add
movsb
sbb
add
push
cwtl
mov
and
inc
pop
das
mov
repz
push
ror
push
scas
jae
push
xor
sbb
in
ja
fdivrs
popa
mov
mov
ss
stos
pop
imul
fsub
sub
subb
cmp
jge
push
bound
ret
cmpsl
xor
sbb
cmc
xchg
cltd
les
rol
into
cltd
mov
ret
xlat
in
lock
sub
ret
scas
add
rep
andl
in
ret
ret
aam
lret
cltd
xor
inc
adc
cwtl
icebp
fcoml
mov
es
lret
into
data16
and
pop
or
push
aaa
in
fisttps
sbb
push
ss
or
sub
hlt
xor
mov
adc
mov
mov
ret
stc
push
and
jb
inc
outsb
and
std
out
data16
add
mov
mov
xor
jo
test
imul
add
mov
fisubrs
leave
pop
push
insb
daa
or
lcall
add
movsb
movsl
mov
jne
movsl
pop
jle
pop
movl
sub
mov
frstor
jg
mov
shl
mov
je
sete
dec
jmp
push
cltd
xchg
jnp
loope
int
mov
insb
sbb
mov
inc
cmp
xchg
sub
bound
jle
sbb
int
loope
cmp
push
pop
cmpsl
dec
dec
insl
fcompl
aaa
int3
in
sub
sarl
shl
fisttpl
pop
add
bound
into
xchg
push
adc
jnp
and
push
inc
das
mov
negl
aas
jmp
mov
dec
aas
sub
mov
mov
or
dec
movb
in
cwtl
sub
jb
fstp
mov
into
cmpsl
jl
nop
into
ja
das
jno
mov
mov
insl
or
cli
sub
rclb
xorb
xor
das
rol
sbb
mov
aad
push
mov
xor
outsb
insb
sbb
stos
jecxz
push
mov
cmp
mov
inc
ljmp
in
push
inc
and
mov
fisttps
hlt
or
sbb
jnp
fisubrl
or
inc
scas
pop
cld
push
loopne
aas
cmp
adc
sbb
repnz
fdivrl
xor
inc
push
repz
push
dec
jb
int
mov
mov
cmp
mov
enter
imul
fs
dec
adc
sbb
rclb
cmp
lret
std
enter
cwtl
add
mov
or
lret
shlb
dec
push
sbb
pop
loope
rolb
ret
int
or
and
pmovmskb
imul
cs
lcall
lods
dec
jo
lods
ficomps
sbb
cmpsl
pop
dec
je
dec
js
movsb
fs
scas
xor
ret
push
cwtl
sbb
xor
mov
push
cmc
pop
aaa
mov
fidivs
aaa
inc
or
inc
movsb
mov
cmp
or
int3
loope
xor
andb
sti
ficomps
dec
ja
loopne
and
fwait
lcall
addb
xor
in
test
lods
nop
arpl
or
gs
xchg
lcall
lret
popf
aas
jp
xchg
stc
sbb
jmp
ficoml
lea
fucom
add
xchg
adc
pop
bound
stos
mov
push
xor
or
js
xchg
std
stos
pop
icebp
xor
hlt
ret
xchg
outsb
int3
fstl
push
or
lcall
push
pop
sbb
inc
cmc
push
adc
add
and
and
negb
enter
mov
lock
xor
clc
pop
mov
xchg
adc
mov
lahf
push
fdivrl
insl
mov
insl
mov
into
sbbl
add
push
push
test
mov
pop
insl
dec
sti
mov
sub
les
movsl
cmp
std
jne
mulb
xor
push
pop
push
lds
fimuls
mov
shlb
loopne
daa
push
cmp
jecxz
xor
xor
outsl
nop
or
fwait
loopne
or
int3
sub
push
inc
sub
je
fiadds
js
xor
shrl
outsb
cwtl
ja
push
mov
mov
add
jg
dec
add
mov
sub
pushf
mov
xchg
and
sub
in
inc
xchg
cwtl
jecxz
stos
or
popa
push
call
and
rcrb
pop
mov
fwait
inc
cmp
xor
fcomi
test
lods
pop
cwtl
mov
or
lcall
enter
push
mov
fidivrs
ret
sbb
lea
xchg
sbb
push
add
insb
cli
leave
lahf
jmp
add
cltd
dec
andb
push
pop
xchg
inc
pop
push
mov
and
adc
cmc
cmpsl
jns
or
daa
push
mov
sbb
mov
xchg
jbe
dec
mov
cmp
dec
popa
sbbl
lock
sbb
dec
sbb
out
in
gs
jno
mov
mov
inc
mov
mov
rolb
sbb
dec
mov
fisubl
sbb
int
cld
sbb
test
or
mov
outsl
jns
fwait
fwait
orl
cmp
sbb
dec
push
mov
sbb
out
icebp
scas
das
outsl
rolb
int3
stc
shl
imul
out
insl
sbb
inc
sbb
mov
int
enter
dec
jle
test
imul
sbb
adc
loopne
xchg
shll
lods
cmpsb
sub
or
sbb
adc
and
and
bound
out
idivl
xchg
test
push
fyl2xp1
add
xlat
inc
loope
dec
lods
xchg
xor
insb
xor
roll
aas
cmp
dec
add
testb
pop
or
outsl
popf
and
add
call
lret
jecxz
cmp
scas
inc
repz
jg
mov
xorb
and
mov
lcall
jno
addr16
cmpsl
mov
cmp
jnp
mov
xchg
jne
push
adc
xchg
mov
filds
or
cmp
outsb
inc
or
insl
push
movsb
andl
add
xchg
or
jbe
scas
fs
push
push
jne
and
enter
sbb
aam
lcall
jne
fisttpl
jge
faddl
xlat
inc
int3
adc
stos
jns
test
sbb
test
jg
cli
rclb
cltd
xor
mov
in
sbb
adc
sbb
cmpb
iret
icebp
in
xchg
xchg
popf
and
xor
ja
jno
jecxz
in
xor
mov
mov
ds
xchg
shl
out
inc
jle
popa
cwtl
movsb
lret
imul
jmp
or
pop
test
jno
push
scas
out
in
mov
fstpt
inc
push
cmc
add
sub
mov
cmp
lret
dec
cmpsl
ficompl
cld
xchg
adc
cli
loop
ljmp
pop
push
mov
loopne
mov
fdivrp
jmp
out
pop
cmp
pop
mov
pop
xor
rcrl
out
mov
xchg
add
iret
jno
mov
pop
add
js
pop
enter
loop
mov
test
hlt
mov
and
pop
popa
decb
imul
lock
or
inc
out
lds
sti
mov
cmp
jle
push
pushf
mov
dec
insb
ret
sbbl
mov
and
call
cld
inc
mov
add
pop
xorl
ret
aas
insl
sub
pusha
xchg
mov
or
cld
je
js
dec
arpl
js
dec
mov
incl
dec
repnz
push
jp
cmp
sub
incb
cmpsb
dec
inc
sbb
pop
popa
call
mov
and
push
imul
cmp
je
dec
int3
imul
xchg
test
cwtl
xchg
movsb
cmp
mov
out
stos
fmull
insb
push
push
sub
cmc
or
mov
fwait
inc
pmaxsw
pop
stos
imul
ficoml
xchg
fcomi
add
add
sti
sahf
mov
ja
icebp
dec
outsl
pop
lcall
sarl
mov
lret
inc
cltd
loop
sbb
je,pn
pop
shl
mov
pop
insb
mov
shlb
test
and
push
push
shll
push
xchg
iret
sbb
fsubr
dec
fstpt
sub
lods
ret
xorb
inc
jge
mov
cmp
in
cmp
fwait
mov
sbb
mov
dec
outsb
test
out
jle
sub
repnz
jo
cld
inc
test
ja
adc
and
sbb
cmp
pop
jmp
and
mov
pop
jp
inc
lret
js
mov
in
push
out
mov
jo
mov
lock
imul
shll
mov
movsl
lret
shrb
push
mov
mov
pop
ficoms
xchg
push
jg
add
es
test
pop
xor
adc
out
movsl
xchg
sbb
and
js
jge
and
scas
push
dec
into
mov
pop
out
mov
mov
popf
mov
dec
outsb
push
fildll
ja
das
fcoml
xchg
mov
pop
push
out
lret
in
push
push
mov
and
hlt
mov
addb
loop
and
mov
out
xchg
ja
sar
push
xorl
mov
mov
sarl
jl
sub
sbb
lret
nop
mov
cltd
mov
xchg
push
pop
pop
add
sbb
jnp
and
out
lock
int3
add
das
icebp
mov
stos
addr16
mov
dec
ret
xor
insb
fistpll
rorl
sub
pushf
out
test
faddl
jge
mov
call
insl
xor
xlat
xor
arpl
or
adc
mov
test
cltd
push
rclb
iret
xor
inc
in
and
daa
ret
push
nop
xor
dec
sub
stos
adc
jnp
aad
mov
iret
xor
fidivl
push
test
add
div
icebp
out
push
xor
leave
pop
jnp
inc
mov
mov
iret
add
mov
lods
xchg
test
in
xor
sahf
xchg
rcrl
sar
in
jmp
mov
and
ja
sub
je
jo
jmp
outsl
dec
imul
outsl
addr16
cmc
mov
and
jmp
shld
or
push
sbb
sbb
gs
xchg
negb
rolb
add
inc
xor
pop
sub
pop
rolb
aas
push
aaa
imul
iret
mov
xor
and
cld
rolb
pop
xor
rorb
pusha
pop
inc
popa
adc
mov
dec
push
pop
inc
sbb
out
adc
in
inc
inc
fwait
xor
xchg
adc
dec
pop
outsl
lds
jbe
sub
sub
mov
sub
adc
cmpsb
lcall
pop
shlb
sub
aam
lock
fstpl
mov
mov
movb
fdivr
mov
mov
mov
hlt
sub
pop
ljmp
stc
push
lods
in
jb
cmp
stc
loopne
lods
mov
sub
cld
cmp
imul
dec
into
enter
xchg
popf
push
roll
inc
lods
cmp
movsb
adc
push
pop
pop
pop
mov
imul
sub
lods
sbb
push
insl
mov
or
cmc
pop
cmp
mov
mov
mov
dec
into
pushf
nop
dec
in
or
dec
dec
jns
or
repnz
mov
and
in
push
pop
push
dec
les
xor
pushf
aaa
sbb
inc
icebp
out
inc
push
gs
insl
cmp
dec
fsubrl
jno
in
xor
repnz
loopne
sub
loope
scas
dec
dec
mov
jge
ja
stos
icebp
add
bnd
sbb
xor
test
repnz
in
sbb
arpl
mov
cltd
in
fwait
leave
dec
cwtl
push
mov
mov
and
ss
inc
out
and
pop
ljmp
into
inc
pop
call
popa
xchg
pop
or
pop
in
pop
fstp
test
xchg
push
fcoml
mov
mov
push
aaa
or
dec
out
shrb
sbb
cld
mov
adc
mov
sbb
outsl
cmp
adc
adc
outsl
stos
jo
jmp
push
mov
pop
imul
cmp
inc
jmp
mov
les
out
fld
in
loope
inc
jns
iret
pusha
pop
push
jmp
aad
fwait
idivb
push
fadds
xchg
xchg
mov
pop
and
mov
les
fistl
sbb
mov
xor
test
xchg
ss
dec
mov
scas
jbe
xor
sub
loop
popf
push
xor
push
js
hlt
and
insb
mov
xchg
jnp
pop
pushf
push
scas
shrb
aam
mov
fs
xor
dec
leave
leave
mov
lcall
sbb
inc
sub
sbb
fdiv
adc
popf
jl
jae
cmc
sub
inc
mov
fstpt
mov
movb
test
push
sub
in
ret
mov
stos
movsl
mov
cmp
jle
jle
loopne
push
add
fs
xchg
add
jp
add
xorb
inc
sub
imul
fsub
lret
mov
stc
enter
out
in
ret
or
push
sbbl
jae
int3
iret
mov
and
stos
cld
scas
mov
adc
mov
xchg
pop
jp
popa
jl
mov
mov
sub
and
inc
inc
stc
xorl
mov
and
jle
jno
notb
jg
arpl
cltd
icebp
int3
gs
jo
mov
or
int3
pop
dec
insb
xchg
push
push
jno
pop
sti
mov
dec
adc
or
mov
nop
pop
lret
and
sahf
pusha
dec
movsl
loope
lods
mov
cmpl
stos
adc
int3
movsb
inc
rcll
add
xor
xor
adc
jp
sub
test
test
push
ds
ja
fisttpl
cmp
pop
pop
mov
and
rcrb
sbb
pop
cmp
mov
or
push
dec
sbb
dec
cmp
lretw
mov
jbe
jecxz
add
int3
out
lahf
aam
jge
mov
lcall
jmp
xchg
jle
push
mov
div
adc
cld
mov
lret
lcall
jecxz
stos
into
int
inc
cmpsb
cmc
fimuls
cmp
popa
imul
xlat
xchg
fldt
sti
xchg
les
lods
and
test
or
jnp
mov
and
mov
or
add
jne
and
scas
sub
xor
rcll
mov
fiaddl
push
sbb
js
out
fcomi
cld
cmp
test
jecxz
mov
call
insl
mov
popf
in
jle
mov
xchg
icebp
imul
mov
jle
push
mov
iret
adc
add
inc
sti
les
sbb
dec
movsl
mov
mov
jae
pop
fldl
call
mov
mov
pop
lods
ds
jge
and
imul
sub
mov
inc
loop
mov
mov
ret
enter
or
sarb
inc
test
in
loopne
sahf
pop
mov
pop
loop
sbb
ss
out
xor
pushf
pop
jo
xchg
inc
imul
cmpsb
out
flds
inc
pop
xor
inc
ja
lret
repnz
lret
dec
mov
mov
push
outsl
dec
adc
ret
mov
loope
mov
inc
int
cmp
jl
cmp
loop
xchg
mov
mov
orl
daa
out
mov
xchg
in
mov
fistl
int
or
shrb
cmp
scas
lcall
insb
xor
and
xchg
dec
sbb
ret
cmp
mov
lods
scas
push
sbb
repnz
adc
pop
inc
pop
xchg
loope
cmpb
xchg
lods
rol
inc
inc
cmc
lcall
cmpsb
push
xchg
pop
movsl
pusha
mov
inc
negl
es
into
test
bound
in
subl
or
cltd
jg
add
ret
fcompl
lcall
out
cwtl
rorl
movsl
xor
ljmp
shr
int
pushf
xchg
mov
mov
bound
daa
jae
movsb
shrl
sub
pushw
cld
mov
and
push
inc
push
add
add
inc
sbb
int3
insl
call
scas
jne
test
ret
lcall
xor
leave
and
lcall
nop
or
cltd
xor
hlt
cs
mov
clc
sbb
repz
icebp
lods
jnp
mov
add
inc
aas
xchg
mov
pop
test
aaa
cmp
repz
mov
sti
inc
mov
iret
stc
lret
xchg
cmc
pop
and
icebp
and
or
add
andb
push
les
aaa
add
lods
push
xchg
jecxz
rcrl
inc
lret
cmpxchg
adc
cmp
mov
hlt
jns
sbb
adcl
and
jo
add
pop
mov
dec
adc
cmp
mov
or
add
shr
daa
and
adc
add
aas
testl
out
cmc
xchg
test
out
pop
dec
mov
es
sbbl
jb
mov
mov
int3
daa
mov
push
movzwl
fisttpll
insb
leave
pminsw
xor
jp
hlt
jbe
xchg
mov
movsb
repz
inc
and
mov
pop
add
xor
mov
or
jmp
scas
mov
test
dec
lret
aad
shlb
popf
fwait
sbb
test
ljmp
jo
cltd
ret
test
icebp
into
dec
or
jge
out
add
jb
mov
or
ljmp
fildll
das
or
push
or
adc
mov
mov
aaa
sbb
hlt
sub
sub
gs
fcoms
xlat
push
rolb
ljmp
addb
push
fdivrp
jge
add
dec
or
push
cmp
pop
lods
xchg
outsb
xor
xchg
cmpsl
movsl
xor
push
mov
fcmove
aas
pop
mov
nop
sub
jmp
test
scas
cmp
cmp
out
fs
and
adc
loope
in
lcall
loope
lds
adc
adc
dec
daa
prefetch
ja
int3
add
iret
loopne
add
jp
cmpsb
incl
jae
inc
add
outsl
outsl
sub
fidivrs
xchg
push
xchg
xor
insb
aas
iret
jns
popl
test
mov
je
daa
jae
mov
jg
and
sub
icebp
xchg
out
addr16
or
mov
mov
cs
mov
inc
adc
add
rolb
pop
sbb
mov
or
cltd
daa
mov
movsl
popf
add
stos
fstpt
aaa
lahf
push
fidivl
inc
add
or
push
and
mov
mov
int3
arpl
outsl
or
lods
enter
imul
cmp
sbb
mov
pop
cmp
mov
pushf
mov
test
and
inc
sub
sub
lcall
movsl
pop
sub
les
pop
daa
dec
jbe
add
andl
mov
in
pop
mov
les
orb
test
adc
xor
inc
sbb
mov
fwait
jno
lods
gs
mov
jb
mov
add
ret
jmp
daa
cmpsl
or
or
insb
jo
stos
pop
push
stos
aam
fcmovne
fdivrl
mov
lods
pop
fiaddl
cmp
out
loopne
mov
add
jecxz
xor
pop
push
sbb
movsb
pushf
aam
xor
jecxz
dec
inc
outsl
pop
dec
jl
mov
sti
add
mov
call
inc
mov
repz
in
mov
mov
xor
or
push
test
push
mov
adc
mov
mov
xor
das
sbb
xchg
mov
loope
fwait
jns
in
adc
push
shll
cmp
jns
loop
scas
pop
shlb
cmpsb
sub
adc
test
pop
lds
mov
xor
inc
push
or
aam
push
fcmovnbe
push
sbb
inc
sub
cmpsb
pusha
xchg
lods
ja
rcr
icebp
pop
into
sahf
inc
add
fdivrl
fwait
shr
into
fbld
and
js
inc
and
lock
test
daa
addl
rcl
call
add
movsl
cmp
push
daa
repnz
stos
sbb
ficoms
imul
fcmovu
mov
mov
cmp
xchg
fnstcw
jne
data16
push
iret
xchg
sbb
adc
and
in
inc
wrmsr
xor
dec
sub
jae
or
xor
mov
sub
loop
jbe
or
aad
insb
sbb
rcl
pop
shlb
iret
addb
mov
loopne
xor
sub
outsl
aaa
jmp
imull
cmp
mov
mov
pop
fcoms
xor
jne
mov
push
mov
jle
fldl
push
stc
cmp
les
mov
xor
cs
popf
jno
push
jo
jns
jns
cli
sub
or
popa
sub
in
adc
popfw
inc
stos
xor
push
inc
js
adc
lahf
out
or
out
adc
dec
fwait
mov
jecxz
lds
mov
imulb
and
sub
xchg
mov
loope
into
pop
out
mov
fs
xchg
popf
sub
xchg
mov
mov
and
in
push
or
fnstsw
pop
sub
push
imul
cmpsl
adc
sbb
out
cld
adc
pshufw
pop
das
mov
and
loopne
daa
sub
cli
mov
xor
fidivrl
nop
jae
fcomps
icebp
popf
arpl
pop
mov
lds
mov
lret
pop
jecxz
fsub
popf
push
fsubrl
cmp
jg
dec
xchg
dec
jae
add
addr16
pop
cmp
enter
aas
sub
dec
pminsw
repz
fisttps
pop
jl
ss
mov
aad
int
popa
mov
outsl
sbb
adc
xchg
push
and
jae
test
sbb
adc
ljmp
inc
xchg
repnz
je
rorb
int
ja
mov
jo
fwait
dec
cmp
ror
cmp
mov
cmp
sar
sti
add
dec
inc
out
aas
jmp
jmp
jnp
mov
push
ja
and
js
push
stos
dec
sub
in
inc
sub
movsb
inc
in
inc
fs
inc
sbb
xchg
out
jo
aaa
xchg
inc
mov
push
hlt
ret
add
dec
outsb
dec
or
push
inc
push
xchg
out
mov
xchg
add
cwtl
jp
push
call
mov
popf
and
inc
mov
add
jle
or
in
and
and
pop
jl
test
mov
dec
xchg
xchg
adc
mov
sbb
cmp
hlt
pop
mov
xchg
mov
pop
lea
scas
jecxz
in
xchg
imul
pusha
sbb
or
ss
inc
cmp
cltd
dec
hlt
stos
stc
shrb
pushf
shll
data16
pop
bound
or
enter
inc
sbb
jne
jmp
mov
adc
sub
ret
fcmovb
xchg
xcrypt-cbc
cmpsl
xchg
dec
push
aad
mov
inc
push
loop
leave
sbb
ljmp
orb
cli
dec
sub
decb
aaa
inc
or
jae
rcrb
shlb
dec
xor
jmp
xchg
ds
push
inc
xor
mov
icebp
push
cmp
xor
inc
cmpsl
fs
fwait
cmp
divb
lea
jecxz
xchg
cwtl
or
outsw
cs
sahf
das
cmp
add
ss
mov
add
not
jmp
outsl
mov
and
aaa
fs
sub
and
fistpll
dec
je
inc
inc
leave
icebp
push
sti
les
adc
sub
rcl
outsl
cli
jo
in
jae
lret
leave
cld
fcmovne
aaa
push
mov
xchg
ret
jno
pop
lods
test
push
sub
xchg
insb
jp
pop
dec
lods
std
inc
jecxz
jl
int
daa
xchg
and
jge
pop
imul
jno
jmp
imull
add
or
in
mov
pop
cmpsl
repz
xchg
pop
push
inc
jg
mov
lcall
loope
cmpsl
addr16
rcr
mov
cmp
aaa
adc
jge
mov
sbb
pusha
jb
cmpsl
mov
andb
lcall
cmc
loope
fcomps
jl
cmp
jl
jno
push
sub
loopne
and
test
xchg
sahf
sarl
int3
sub
pop
fldcw
repz
add
ja
or
ret
or
mov
data16
ja
sahf
jge
dec
dec
aaa
imul
xor
enter
mov
sub
fnstsw
mov
in
les
std
or
call
add
xor
pop
dec
jecxz
jl
jp
dec
mov
add
dec
mov
pushf
sub
jl
fwait
imul
cmp
jns
inc
xchg
je
inc
push
xorb
pusha
movsb
or
pop
and
pop
dec
out
push
fidivl
lds
in
xchg
mov
cmp
cmp
cmpsl
ffreep
loopw
xor
lds
jo
or
xchg
insl
in
aas
mov
jl
inc
mov
fisubl
std
sbb
dec
mov
xchg
mov
aas
mov
mov
sub
lret
cmc
xor
into
mov
imul
adc
xchg
cmpsl
inc
fnsave
jns
les
ds
mov
jle
movsb
into
faddl
cmc
mov
pop
push
pop
add
jmp
bound
in
cltd
jg
test
mov
fsubl
out
jg
cmp
xor
lds
pop
psrlw
fcompl
test
sbb
stos
mov
jp
stc
or
cmp
out
jbe
imul
push
and
pop
pusha
mov
ret
sub
push
cltd
neg
jae
imul
arpl
scas
stos
mov
xchg
mov
popa
pop
push
insl
dec
cmp
cmpsb
rcrb
testl
xor
jp
push
or
out
das
andl
mov
sbb
mov
movsb
mov
push
adc
in
shrb
mov
loope
movsl
xlat
in
dec
movsl
fiadds
sub
push
leave
mov
lcall
pop
sbb
repnz
out
sahf
dec
sti
xor
loope
outsl
xchg
mov
loope
aam
ja
adc
inc
int3
mov
xchg
cmpsl
dec
jp
mov
jns
xor
sarl
mov
fwait
mov
stos
mov
shl
leave
nop
push
sbb
scas
ljmp
add
mov
mov
int
mov
lahf
iret
sahf
lret
add
push
leave
fstpt
outsl
xchg
push
ds
inc
shrl
sbb
mov
add
push
pop
ss
lods
push
jge
test
adc
xchg
stc
or
inc
adc
sti
xor
xorb
mov
or
imul
add
add
xchg
aam
cmp
jns
fucomi
sti
sar
fstp
adc
mov
jae
idivb
jne
leave
lahf
into
inc
push
pop
stos
xor
in
insb
out
jae
pop
adc
data16
mov
and
jns
out
out
arpl
jae
xchg
jg
xor
adc
sub
inc
sub
sbb
data16
out
dec
das
aam
dec
sub
emms
sbb
cmc
fisubrs
push
fnstcw
mov
push
scas
sti
ficoml
pop
fdivrs
ret
lcall
sbb
daa
sbb
or
and
popa
cmp
shl
in
andb
fwait
mov
xorl
rcl
mov
push
testl
js
ret
xor
push
leave
shrl
xchg
xchg
faddl
mov
xchg
loop
call
clc
cmpsb
or
push
dec
jo
xlat
push
fsubrp
dec
arpl
jbe
in
inc
xchg
and
js
mov
xchg
in
imul
ret
sbb
jo
jnp
add
outsl
adc
arpl
jo
push
pop
inc
inc
jbe
cs
xlat
fistl
sbb
mov
rcrl
xor
lods
adc
xor
jae
pop
dec
inc
stc
or
out
cmp
jg
xchg
pop
push
and
jl
ret
ret
int
pop
cld
pop
fldenv
stc
fwait
sub
sbb
or
mov
in
adc
enter
inc
push
fcompl
lahf
sub
xchg
jno
pop
sbb
sbb
xchg
mov
ljmp
fldl
enter
dec
add
push
in
inc
adc
les
adc
mov
fmull
imul
call
pop
xchg
roll
aad
mov
xchg
xlat
test
push
pop
lock
idivl
dec
push
sub
jne
arpl
xchg
xchg
cli
pop
cmp
je
or
out
mov
out
lcall
addr16
inc
sub
inc
cmp
cmp
xlat
cmp
cmp
aas
mov
adc
iret
xchg
sahf
stc
imul
xlat
or
iret
dec
lods
xchg
mov
push
sbb
sarl
push
jle
js
lahf
xor
rcrl
cld
lods
shll
jns
adc
fbstp
jo
sub
adc
out
xchg
mov
cmp
loop
movsb
test
imul
hlt
cmp
adc
stc
in
test
loopne
scas
jnp
stc
aad
into
sbb
and
push
bound
mov
data16
mov
push
adc
adc
xor
jb
sbb
add
fisttpl
sub
mov
inc
and
sub
mov
aas
add
in
push
filds
mov
pop
adc
or
xor
cli
dec
int
push
pop
fidivl
fbstp
or
mov
sar
dec
jae
jmp
in
push
test
out
xchg
inc
push
cmp
pop
iret
ret
cmp
sub
iret
or
jbe
faddl
cld
or
hlt
jp
inc
xorl
cltd
mov
and
mov
xchg
int3
ljmp
or
push
push
das
lods
push
shll
sbb
or
fwait
out
shl
jbe
pop
and
xor
outsb
pop
xor
xor
call
movsb
jg
add
jns
addb
cmc
paddsw
js
movsb
ror
sbb
push
or
lods
and
arpl
frstor
cmpsb
pause
rolb
dec
jecxz
push
or
pusha
dec
push
pop
sub
dec
int
or
sahf
mov
ret
andb
fdivl
sbb
jp
add
out
inc
daa
ret
imulb
orb
jne
test
sub
jnp
pop
cmc
out
cmpl
mov
mov
scas
xchg
add
jno
leave
mov
je
dec
out
or
mov
test
mov
mov
shrb
sahf
sub
or
xor
xchg
mov
mov
aam
xchg
cmp
ss
pop
cmpsl
stos
test
and
or
stc
out
enter
mov
hlt
or
push
int
mov
mov
xchg
cli
pslld
jl
lcall
scas
mov
jb
pop
push
ljmp
lcall
xor
and
aam
inc
shrl
mov
or
loopne
mov
or
xor
imul
idivb
jne
pop
test
cs
das
mov
test
lods
pop
int3
leave
sahf
xchg
stc
adc
cmpsb
ljmp
movsb
add
push
in
dec
popf
adc
sahf
or
mov
sbb
std
jmp
inc
sbb
push
rorl
movsl
out
out
adc
pushf
mulb
cld
xor
stos
js
icebp
les
std
loope
xor
push
cmp
gs
pop
das
and
xor
add
adc
rorb
mov
push
push
jg
cltd
fldt
jecxz
cmpsl
sahf
insb
mov
push
mov
sub
mov
jb
fcomp
pop
xchg
cmpb
sub
pop
loope
push
inc
aaa
test
xchg
or
pop
fs
jo
int3
sub
imul
push
clc
sti
and
xchg
js
jbe
loopne
xlat
sub
test
jns
dec
outsb
xor
out
jbe
sbb
sub
addb
cmp
push
int
cld
xchg
into
mov
push
cmp
and
mov
call
jmp
add
add
ja
lods
jne
outsb
mov
xchg
jo
jp
inc
xchg
push
and
adc
add
dec
roll
roll
imul
push
sahf
mov
sub
fwait
int
mov
pop
mov
add
xor
sbb
xchg
jnp
xor
aam
jle
mov
mov
jg
repnz
mov
inc
leave
std
in
jecxz
imul
dec
lahf
loopne
out
or
fcmovnu
adc
clc
fldl
fs
jecxz
gs
dec
xchg
js
cltd
aaa
dec
sbb
jnp
insb
xchg
std
xchg
dec
cmp
mov
jne
xor
stos
mov
or
shrl
dec
mov
out
out
jp
add
adcl
das
pop
mov
test
insb
daa
jle
xchg
rolb
mov
fs
rorl
mov
aaa
in
jg
xchg
mov
adc
xchg
lods
cmp
arpl
lcall
sti
xchg
xchg
xchg
popf
stos
cmc
insb
lea
push
mov
scas
cli
xchg
adc
mov
xor
and
fst
or
mov
jmp
test
imul
pop
js
pop
dec
pmaxsw
int3
mov
into
scas
repnz
jge
jle
add
or
push
pop
out
pushf
stos
cmp
dec
sub
cmp
data16
aad
cmp
imul
stc
mov
lds
push
and
mov
xlat
jnp
mov
out
push
mov
and
movsb
xlat
pop
inc
fiaddl
fadds
jo
int3
les
push
iret
xor
or
in
ror
imul
pop
mov
or
mov
xchg
sbb
test
push
scas
mov
or
pop
addb
mov
inc
or
push
pusha
pop
mov
pop
jmp
dec
fsubrp
or
aas
mov
imul
loope
sbb
es
dec
sub
cmp
pop
fisubl
mov
inc
mov
sbb
xlat
pop
das
push
cmpl
pop
cld
jae
ret
movsb
addb
rol
aad
lea
jbe
outsl
addr16
dec
cmp
testl
andb
mov
push
insl
insb
fidivs
repnz
mov
roll
adc
pop
lds
adc
aaa
fildll
push
mov
pop
fsubp
add
inc
xchg
mov
or
aas
dec
aad
xchg
stc
mov
daa
push
inc
cmp
jne
xor
xor
pop
and
or
lea
pop
mov
inc
sub
outsl
mov
addr16
adc
cmc
lahf
out
cld
sbb
stc
lods
xor
pop
and
push
in
mov
jle
das
sub
in
scas
and
in
cmp
cwtl
int3
adc
adc
flds
push
fisttpl
jne
pusha
pop
push
movsb
or
dec
xor
cltd
mov
jns
addl
int
in
cmc
sti
push
lahf
mov
lods
cld
sahf
or
dec
sub
int3
xor
pop
lea
insl
add
pop
subb
movsb
es
inc
rcll
les
push
outsb
mov
std
or
xchg
test
push
les
sub
sbb
cs
mov
or
and
das
movsl
cmp
and
lret
mov
push
inc
jge
xor
jne
jg
adc
arpl
repnz
insl
pop
add
lods
stos
fmull
ror
push
sub
inc
xor
stc
push
push
sbb
adc
outsb
xchg
ds
pop
inc
xlat
jns
sarl
pop
mov
cmp
push
stos
jmp
into
pop
mov
jl
test
add
xchg
ret
cmc
push
fisttps
inc
shlb
sub
mov
and
shll
leave
fiaddl
sti
mov
pop
out
mov
mov
push
les
shll
jns
inc
iret
imul
cmp
into
stos
push
push
sbb
fidivrl
in
fistl
sbb
pcmpeqw
dec
inc
mov
stos
jl
iret
sti
outsb
aad
fwait
cmp
push
xor
ljmp
fwait
dec
insb
push
es
mov
pop
mov
push
lds
pop
leave
adcb
inc
mov
xchg
add
pop
cwtl
inc
mov
push
ja
es
jg
lret
sub
rcrb
mov
push
sbb
test
les
insl
call
aam
pushf
jp
popf
xor
les
inc
inc
stos
and
and
cmc
xlat
xor
test
jno
es
mov
pop
xchg
stos
sarl
scas
jge
mov
clc
into
and
ss
arpl
pop
adc
sbb
in
out
cld
xorb
mov
jmp
jmp
andl
cmc
in
push
jno
or
add
inc
and
insl
xlat
or
mov
cs
addl
mov
lcall
lock
dec
adc
jg
push
std
outsb
addr16
sbb
in
in
xchg
or
jmp
sub
js
sub
mov
mov
cmp
sbb
or
mov
cmpsb
xchg
shll
inc
mov
fwait
ds
inc
adcb
mov
jl
xlat
lret
data16
mov
xchg
clc
cs
mov
inc
inc
jae
clc
xor
sahf
sti
sbbb
fcmovu
inc
daa
cwtl
xlat
sbb
in
jo
push
stc
scas
daa
pop
aam
lds
std
pop
fnstenv
push
scas
stos
push
jecxz
add
sub
add
inc
movsb
jnp
std
in
xorl
ljmp
addr16
ret
rcl
scas
mov
hlt
adc
adc
loope
and
pop
adc
dec
pusha
iret
sub
divb
sbb
sbb
shl
scas
scas
inc
pop
fwait
lods
dec
mov
lods
jle
xor
ret
sub
cmpsb
stos
pushf
divb
cwtl
jle
sbb
mov
lods
ds
divl
movsl
shl
and
imul
ret
arpl
dec
pop
dec
sub
data16
inc
xor
sub
push
icebp
or
repnz
leave
imul
ds
pusha
add
cmp
dec
push
jo
jb
and
and
xlat
jecxz
popa
enter
jle
dec
das
fmuls
jne
loop
fisttpll
xchg
jmp
jne,pn
rolb
inc
add
test
cltd
nop
cmp
xchg
fnsave
dec
dec
xchg
addl
inc
mov
inc
insb
iret
fcmovb
sub
push
sub
cmp
sub
stos
fsubl
sarl
xor
fbld
iret
insl
test
lea
jle
or
xchg
je
fnstcw
sbb
in
test
sub
fsubp
xchg
sub
gs
xchg
pop
sti
and
out
mov
mov
inc
mov
push
out
push
fimuls
adc
ret
pop
mov
orl
xor
enter
inc
xor
loop
aas
jne
faddl
lods
sbb
ficoms
xchg
pop
fsts
dec
out
in
fdivrl
mov
orl
jg
stos
or
push
push
pop
mov
es
into
jnp
xchg
int3
scas
mov
cs
in
cld
add
cmp
aaa
or
or
or
jge
insb
repz
xchg
stos
mov
cmp
cs
imul
inc
pop
dec
loope
push
add
stc
imul
nop
sbb
mov
cmp
popf
call
push
int
mov
arpl
in
jmp
lock
fisubl
and
sbb
sahf
jmp
mov
aam
mov
fwait
push
sbb
sbb
aaa
sub
or
and
pusha
xchg
pop
popa
mov
push
adc
jb
xchg
mov
xor
negl
ss
push
add
cmp
jmp
xchg
pop
push
mov
dec
mov
push
cltd
test
dec
mov
ss
int3
and
into
fsubs
dec
out
out
push
ja
pop
xor
xchg
daa
jge
and
inc
lods
sbb
or
pop
xchg
sbb
push
mov
lods
inc
icebp
mov
ret
sub
mov
add
pop
movsb
sbb
scas
jbe
push
mov
sahf
dec
in
pop
rol
fbstp
xchg
pusha
ja
in
adc
cld
pop
outsb
pop
mov
in
and
movsl
jbe
cmc
mov
push
pop
or
js
sub
cwtl
call
out
lcall
aad
mov
in
jl
mov
scas
inc
jp
rorb
pop
mov
sahf
enter
dec
push
idivb
imulb
dec
dec
pop
and
add
jp
jmp
pusha
hlt
repnz
clc
mov
xchg
repnz
or
sbbl
jnp
std
mov
inc
xchg
dec
adc
sub
test
cmp
jle
push
dec
push
xor
stos
enter
inc
fadd
das
xor
mov
jp
xchg
or
pop
lgs
in
inc
mov
aam
lds
aad
popa
test
jo
mov
mov
inc
lret
hlt
cmp
aas
sbb
psrad
enter
mov
es
lock
aas
call
mov
jp
sub
fsubs
mov
pop
inc
push
xlat
or
push
cld
cmp
pop
es
sbb
pusha
xlat
lahf
xchg
lock
clc
lock
sahf
cmpsl
stc
notb
arpl
lds
dec
mov
mov
fnstenv
mov
mov
dec
enter
out
lods
cmc
in
mov
push
push
ss
repnz
cmp
das
rclb
adc
adc
pop
xor
mov
sbb
in
or
repnz
test
dec
imul
testl
je
subb
mov
ss
adc
sbb
xlat
subl
and
imul
and
push
xchg
pop
stos
adc
and
call
int3
inc
rclb
and
rcrl
sbb
roll
pop
push
stc
cwtl
mov
lock
inc
das
sahf
mov
add
mov
xor
int3
bound
inc
andl
jno
jle
jg
insb
inc
outsb
imul
addr16
push
or
lcall
or
xor
fsubl
bound
cltd
mov
cmp
leave
scas
ljmp
pop
stc
stos
jp
cwtl
or
lods
jmp
imul
inc
popw
adc
jmp
mov
pop
dec
jns
jg
sahf
jae,pt
repz
stos
xor
mov
in
adc
xchg
sub
icebp
popa
xor
or
outsb
loop
cmp
lock
imul
cmp
mov
sub
insl
insb
mov
loopne
pop
cmp
icebp
inc
mov
rcr
xor
xor
xor
roll
inc
ja
mov
mov
mov
out
sbb
in
popf
push
xor
lret
xchg
pop
jbe
fidivrs
les
divl
inc
dec
mov
test
rcl
mov
fsubrl
dec
mov
cmp
mov
cltd
stos
pop
fisubs
sahf
test
push
in
pushf
and
int3
pushf
aam
push
hlt
pop
test
test
loope
push
pop
mov
pop
std
sbb
sbb
sbbb
std
in
inc
sbb
inc
dec
mov
mov
arpl
sbb
or
jo
mov
sbb
cmp
out
frstor
invd
sarl
ds
cli
shrl
dec
xor
jnp
inc
lods
inc
ret
push
push
daa
xor
mov
mov
jp
mov
mov
jmp
or
xchg
xchg
and
lcall
orb
push
test
inc
mulb
and
lods
add
test
cmp
loop
out
js
adc
add
inc
andl
out
insb
neg
leave
cld
push
fidivrs
cltd
xchg
mov
push
call
icebp
jmp
das
and
dec
dec
cs
mov
cmp
into
add
jmp
inc
and
xchg
lods
cld
and
iret
adc
insl
or
mov
sub
mov
insb
icebp
add
mov
xor
es
xor
inc
adc
out
imul
push
pop
inc
mov
inc
dec
sub
divb
push
mov
and
mov
call
test
jmp
push
dec
movsl
xchg
shll
out
fisttpl
pop
jmp
sub
hlt
sbb
in
cwtl
xor
mov
jmp
stos
in
cltd
xchg
mov
push
and
jbe
ds
ljmp
cmc
inc
loopne
stc
cmova
pop
repnz
push
fcompl
pop
cmp
jl
out
dec
jmp
popa
fiaddl
bound
mov
test
outsl
mov
jo
aaa
pop
mov
mov
mov
mov
mov
test
jb
sahf
or
addl
mov
inc
pop
jb
mov
mov
in
cmc
mul
sbb
gs
cmpl
cmp
pop
rclb
in
int3
mov
mov
js
adc
mov
inc
pop
dec
andb
jecxz
cmp
mov
lcall
or
gs
shlb
sbb
popa
cli
push
dec
call
mov
and
mov
jmp
jmp
imul
ljmp
dec
jae
jp
adc
shrl
jmp
cmpsb
lcall
test
rcrl
mov
dec
jmp
sbbl
out
in
pushf
push
loope
push
adc
mov
testl
daa
out
jnp
rorl
cmpsb
fmulp
hlt
add
repnz
pop
jge
insb
inc
and
pop
jp
sahf
mov
jbe
push
or
jns
out
add
je
mov
jle
call
movsb
testl
xor
ds
jg
mov
sub
or
adc
pop
ror
rclb
mov
sub
insl
ja
fidivl
xchg
std
and
add
fsubr
mov
data16
xlat
js
movsl
mov
lret
inc
sahf
xchg
sub
sbb
lods
fcom
pop
xchg
jne
cwtl
pop
push
add
xor
or
lahf
and
into
fdivrs
and
push
mov
or
push
sbb
repnz
icebp
jbe
push
push
iret
sbb
fistl
pushf
fwait
icebp
movsl
and
push
mov
insl
push
adc
dec
sub
insl
adc
jb
cltd
outsl
push
xor
inc
decl
rcll
sbb
outsb
fisubrs
fimull
loop
popa
add
and
add
xchg
ficoml
clc
lods
fdivs
pop
cwtl
mov
jmp
addr16
mov
je
lds
mov
mov
ja
jo
push
or
pop
nop
aam
cmp
sbb
push
ret
addr16
xor
fldcw
jge
add
int3
sahf
add
cwtl
sbb
inc
daa
test
push
push
cld
sti
lea
push
into
fbld
fstl
and
in
jle
push
add
sub
mov
mov
or
xor
lds
outsl
inc
inc
xlat
or
popa
mov
cmp
popf
adc
jecxz
xlat
jl
jnp
imull
push
mov
jl
std
arpl
xchg
mov
std
xorl
valignq
jl
push
scas
mov
int3
mov
mov
and
loope
push
hlt
adc
cmp
nop
fbstp
scas
and
adc
mov
cmp
and
fistl
ficompl
mov
inc
mov
or
into
fcmovbe
in
cltd
mov
out
or
cltd
and
xchg
ja
or
loop
popf
ficoms
jbe
fildll
add
inc
mov
mov
adc
shrb
sub
mov
fists
jno
mov
clc
jbe
sub
xchg
insb
dec
imul
xchg
push
xchg
out
fildl
jb
aas
jns
in
dec
add
inc
repz
mov
adc
aas
pop
pop
cltd
jns
imul
jg
cmc
ret
mov
notb
pop
add
mov
lds
sbb
addr16
inc
in
xchg
je
cwtl
push
add
push
scas
mov
sub
testl
insl
add
ror
pusha
sahf
stos
mov
sub
out
push
mov
xor
sbb
add
jg
fucomp
dec
bound
loope
lret
in
iret
pop
pop
xor
ret
imull
es
aad
das
cs
sbb
pop
cmp
mov
movsl
mov
sbb
sti
imul
xor
sbb
imul
clc
mov
inc
and
adc
imul
stos
add
sar
cmp
nop
shrb
push
scas
lea
test
icebp
clc
push
push
outsb
adc
jmp
jmp
dec
mov
arpl
sub
xor
loopne
sub
ret
icebp
add
or
sbbl
pop
push
call
int
inc
movsl
add
cmpsb
mov
jle
aas
add
adc
sbb
cmp
fdivrs
addr16
mov
loope
cmpsl
pop
js
jmp
mov
adc
xchg
jl
insb
add
sub
addr16
shrb
iret
jle
pop
mov
adc
data16
mov
sub
ss
fstpl
lcall
cmp
dec
ret
in
mov
lods
fistps
sbb
fsubl
iret
cmp
lahf
cmp
nop
push
add
adc
mov
sbb
ffree
aad
mov
jbe
mov
push
adc
lea
or
push
loop
pop
outsb
xchg
imul
adc
or
pop
sub
inc
lret
bnd
push
lret
scas
lcall
mov
loop
ror
mov
sub
fildll
jae
orb
enter
mov
fldl
cmp
dec
out
and
sbb
mov
pop
imul
movsl
ret
mov
push
xor
mov
fs
adc
or
xchg
ljmp
sbb
jmp
cmp
xchg
fbstp
push
ja
xchg
add
popa
lahf
push
pop
jecxz
mov
xchg
cld
out
icebp
mov
jg
test
inc
add
mov
popa
sbb
sbb
pop
pop
bound
and
xchg
add
int
rclb
rclb
and
mov
ret
push
dec
js
insb
sub
hlt
xor
pop
sbb
sub
mov
push
das
ficoms
or
sub
xlat
or
cwtl
aam
cmp
sar
or
mov
dec
cld
xchg
sbb
push
dec
pop
cmpsb
inc
aad
dec
sbb
and
sbb
xchg
mov
inc
jae
lock
pop
mov
xchg
jg
lea
sbb
mov
mov
imul
xchg
mov
in
and
xchg
mov
xchg
or
mov
cmp
add
inc
xchg
inc
mov
lahf
dec
aad
push
adc
jb
push
aad
push
lock
add
lahf
inc
addr16
cs
xor
cmp
inc
aad
and
adc
test
shlb
jmp
jp
pop
cmp
pop
mov
mov
cwtl
test
fstps
or
pop
out
lahf
repnz
in
sub
xor
cmp
jbe
sti
cmp
jnp
mov
or
mov
out
cmp
arpl
aam
or
xorl
arpl
enter
mov
les
sub
fs
int
shl
js
inc
movsb
mov
add
adc
jns
mov
xcrypt-ctr
cmpsl
pop
pushf
cmc
out
int3
and
push
out
jp
fldcw
pop
adcl
xchg
add
sub
pop
div
in
push
in
cld
adc
cwtl
mov
rolb
dec
inc
push
loope
fdivrp
negb
mov
addr16
cs
out
aad
add
and
je
cwtl
dec
int3
xor
in
cmp
mov
pop
test
mov
mov
xchg
jp
mov
sbb
test
cmp
xor
test
fistps
bound
call
add
ljmp
mov
or
xor
add
fucomp
xor
and
imul
inc
pop
add
push
cmp
lods
cli
dec
das
cmpsb
mov
mov
mov
mov
sub
fs
paddq
add
rcll
mov
xchg
dec
test
push
data16
sbb
pop
inc
hlt
mov
es
enter
inc
mov
aaa
mov
pop
arpl
xchg
or
sbb
iret
dec
cmpsl
push
jbe
push
fcomps
int
jmp
out
xor
jle
xlat
adc
lret
and
data16
xchg
dec
pop
inc
fstl
and
mov
addr16
xorl
sbb
cli
xor
sub
mov
pop
rdtsc
fdivrl
xchg
add
cmp
jo
or
dec
mov
or
fstpl
popf
or
mov
push
hlt
or
xor
fidivs
inc
xchg
and
addr16
dec
or
or
fmuls
inc
dec
out
adc
div
aad
push
ret
loop
xlat
call
cmc
add
ret
jb
lods
and
ud1
pop
sub
test
out
push
jo
ret
ds
xorl
or
mov
mov
sbb
mov
cmp
xor
movsb
mov
shrb
outsb
pop
xlat
icebp
rcl
mov
iret
fstps
std
out
lret
cmp
and
cs
inc
inc
dec
or
cs
out
xor
loop
roll
daa
cmc
xchg
cmp
out
clc
das
movsl
jge
dec
push
arpl
jb
cwtl
clc
sbb
cmpsb
mov
mov
inc
xlat
push
mov
pop
push
sahf
push
add
mov
push
xor
inc
test
mov
jmp
mov
mov
mov
fs
pop
pop
pop
xor
icebp
pop
movsb
push
jg
mov
adc
sbb
jbe
adc
push
das
fildl
aaa
xor
mov
fildll
neg
nop
sbb
enter
sub
das
jae
pop
pop
lcall
sub
cltd
stos
insl
mov
or
aad
adc
movsb
mul
pop
into
xor
xchg
mov
mov
fdivrs
rol
cvtdq2ps
mov
scas
lret
js
mov
mov
cld
in
popa
xchg
stc
insl
mov
insb
add
shr
das
sbb
jmp
add
jp
fcmove
xlat
jecxz
dec
jno
push
stos
sarl
xchg
inc
je
sub
adc
cltd
jb
xor
cmp
jmp
aas
fcoml
sahf
jo
hlt
xor
in
cs
add
lds
xor
negb
je
mov
clc
push
push
test
out
pop
lcall
imul
sub
add
sbbl
dec
sbb
sbb
mov
xchg
out
data16
sbb
out
movb
test
jecxz
mov
ror
xchg
pcmpeqd
push
clc
imul
add
call
mov
jp
ja
jnp
das
xchg
mov
and
mov
add
loope
push
inc
pop
xor
aaa
xchg
iret
sub
pop
pop
jbe
imul
push
testb
mov
fcmove
jge
mov
cmp
cmp
jmp
xor
cmpsb
xor
imulb
dec
nop
push
or
jb
add
pop
cltd
aam
dec
fidivs
cmc
mov
and
adc
add
push
cmp
xchg
loope
ret
and
sbb
es
lcall
inc
adc
mov
xchg
or
push
mov
sub
mov
pusha
mov
icebp
bound
mov
add
addr16
inc
dec
jne
pop
pop
cmp
int
movsb
pop
cmp
xchg
push
loop
xor
or
fsts
cs
add
pushf
in
ficompl
rcl
into
xchg
loop
xchg
arpl
pop
adc
xchg
dec
ja
clc
inc
in
test
and
sub
iret
loopne
pop
mov
inc
fildl
pop
push
and
gs
aaa
clc
test
lahf
in
movsl
xchg
or
xchg
add
mov
cmp
aaa
cmp
jae
sub
mov
add
out
adc
shrb
inc
cmpsl
fldl
cmc
pop
and
or
mov
mov
fidivl
repz
dec
fistl
adc
lret
xchg
nop
insb
or
inc
push
out
in
inc
cmpsb
nop
out
adc
jne
jl
sbb
jns
js
enter
or
xlat
mov
enter
in
lret
mov
inc
dec
rclb
push
fcoms
cmp
push
jecxz
mov
fiaddl
dec
mov
push
loope
in
sti
xor
stc
dec
lcall
ret
cld
push
cmpsb
data16
push
push
stos
es
sar
popa
shlb
cli
sbb
mov
mov
aas
cmc
and
and
jno
pop
dec
jge
movlps
cmp
inc
inc
incb
imul
add
sbb
and
or
cmp
cmp
mov
jmpw
jb
bnd
lods
cmp
in
into
push
fwait
mov
leave
xor
sub
imul
inc
clc
iret
lods
and
mov
pop
mulb
imulb
push
sbb
xchg
xadd
in
or
pusha
cmp
pushf
jns,pt
cmp
shr
test
mov
imul
loop
sti
sti
test
mov
sub
js
sbb
mov
add
push
and
out
mov
test
loopne
insl
mov
xchg
mov
fcompl
xlat
cmpsl
jb
mov
jge
pop
jns
loop
push
mov
jecxz
add
icebp
xor
cmp
sub
test
dec
xlat
push
repnz
jno
in
xchg
fisttpl
sahf
jo
jge
loopne
mov
cmp
add
dec
cmp
pop
jg
pop
rcll
push
adc
pusha
leave
ljmp
inc
fsubl
xlat
sub
add
jge
data16
not
push
push
fistl
je
and
ret
sub
sub
mov
int
daa
in
loopne
imul
and
das
sub
push
cmpsb
jg
imul
insl
cs
insl
clc
xchg
mov
aas
xchg
int
loopne,pn
mov
daa
imul
mov
loop
sbb
in
push
icebp
imul
or
and
xchg
inc
aas
pop
int
jnp
fadds
orl
xchg
sbb
fwait
sbb
js
xchg
aam
add
and
loope
mov
lahf
xchg
sbb
cmpl
dec
jecxz
cmp
int3
xchg
mov
lcall
fwait
sahf
xchg
fstpt
add
jmp
testb
mov
mov
pop
icebp
sub
jge
arpl
fsubs
jl
imul
dec
fldenv
pop
std
cld
mov
mov
lds
push
enter
leave
pop
mov
sbb
and
pop
xor
inc
add
push
or
cmp
aad
inc
xchg
out
jg
push
mov
cmp
sahf
jb
push
das
popa
cmp
or
sub
ss
mov
pusha
jl
jmp
out
jg
jmp
jge
or
jecxz
shlb
pusha
cmp
mov
add
push
sub
iret
in
jl
dec
cmp
pop
and
mov
icebp
cmp
pop
popf
dec
out
pop
hlt
xchg
fldl
push
data16
loopne
scas
push
data16
loope
in
gs
add
adc
sbb
push
aad
lods
inc
cltd
push
stos
lds
fsubrl
push
sbb
stos
cwtl
rorl
cld
pop
cmc
add
xchg
inc
push
jnp
int3
subl
pop
loop
mov
jmp
mov
sbb
pop
outsb
jmp
inc
in
cmp
mov
insb
mov
mov
lret
cmp
push
sub
push
add
pop
jge
xchg
into
lds
fs
cmp
daa
push
orb
mov
fdivr
jg
mov
std
test
loop
cmpsl
jae
xor
out
ret
sub
push
inc
mov
inc
jp
fbstp
shr
imul
lds
push
insl
adcl
int3
inc
xlat
xchg
dec
push
jg
mov
adc
ss
cs
cs
ja
xor
lods
and
fcmovnb
lea
xor
jmp
out
push
je
int3
adc
cmp
lods
jmp
rclb
icebp
jecxz
sbb
add
push
insl
out
jl
pop
and
dec
mov
jne
jae
inc
jp
repz
mov
inc
jnp
insb
leave
xchg
pop
inc
and
add
sub
aaa
xchg
aad
jns
push
out
arpl
mov
daa
pushf
into
sub
fisttpll
shlb
inc
mov
out
aad
inc
jo
vrcpss
xchg
loopne
sahf
fwait
mov
movsb
cmp
or
add
sahf
adc
or
jecxz
dec
les
or
clc
ljmp
cmp
icebp
enter
lahf
int
inc
cli
inc
into
jge
mov
push
xchg
outsl
aad
push
jge
xor
mov
jmp
in
mov
sahf
fs
push
into
pop
mov
dec
addr16
pop
push
cmpsl
cmpb
mov
daa
shlb
or
jo
loop
rcr
adcl
leave
aas
ret
or
fidivl
add
in
lret
dec
rcrb
xchg
pop
lds
mov
sub
xor
adc
push
scas
insb
cltd
fisubrs
hlt
aaa
inc
xor
cmpsl
mov
push
div
inc
mov
ljmp
push
arpl
add
scas
mov
nopl
adc
cmpsb
push
ror
inc
xlat
shl
cmpsl
fimuls
lahf
fcompl
jno
mov
jns
mov
xchg
fmuls
dec
pushf
dec
ds
rcrb
dec
ret
and
dec
popf
jp
mov
je
repnz
shl
add
jno
xchg
leave
lret
cmpsb
sub
hlt
mov
repnz
sub
mov
xchg
xchg
movsb
xor
cmc
dec
lahf
add
mov
test
xchg
inc
mov
jl
fildll
lods
pop
pusha
pushf
gs
mov
test
imul
cmp
int
ficoml
aas
sti
xchg
repnz
les
ljmp
loop
pop
xor
push
mov
in
jle
pop
fdivrs
ss
loop
mov
cmp
jle
rcll
cmc
cmp
imul
xor
or
test
jne
lds
into
xor
out
xor
push
sub
mov
jno
xchg
inc
ds
arpl
fcoms
cmp
jo
pop
fucomip
mov
call
dec
loopne
fs
inc
inc
lret
jecxz
testl
scas
jo
cmpsl
insb
hlt
cmpsl
nop
xchg
pusha
or
mov
into
pop
.byte
jae
