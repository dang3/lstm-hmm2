pop
lds
loope
or
and
xor
ret
lea
inc
pop
push
or
psubw
movb
xchg
mov
pop
adc
add
ja
xlat
icebp
insl
jne
push
lahf
mov
out
pop
dec
xchg
sbb
lahf
std
fwait
pop
pop
divl
fs
mov
push
or
jb
and
push
mov
sbb
test
lar
sbb
or
call
adc
loope
or
adc
scas
popa
call
jno
push
and
loop
pop
jne
icebp
clc
adc
and
leave
add
inc
add
in
test
js
test
pop
in
out
fwait
push
es
pop
sub
add
jl
decb
jecxz
and
and
and
cwtl
in
pop
xchg
imul
xor
sbb
xor
push
nop
data16
enter
push
jo
dec
rolb
fwait
mov
inc
dec
and
sub
xchg
add
adc
je
mov
iret
and
inc
jle
adc
adc
divl
insl
sub
repnz
or
scas
sub
xor
lock
add
mov
sub
add
sbb
loop
pop
cwtl
rcrl
insl
or
inc
mov
je
add
cmpb
push
popa
sbb
or
je
ss
dec
fwait
jecxz
or
push
push
lret
push
and
lock
sbb
lcall
inc
gs
stos
stos
push
fabs
jae
cs
bound
lea
xor
loopne
pop
cmp
call
and
adc
nop
or
pop
add
shrl
mov
roll
or
dec
loope
pop
mov
mov
pushf
outsb
pushf
mov
push
dec
scas
nop
push
shlb
dec
inc
and
jle
push
xchg
inc
lea
outsb
lea
xorl
and
mov
dec
or
ljmp
orb
jnp
cmp
xor
inc
sarb
adc
cmp
int
ljmp
cmpsb
add
lea
lds
shlb
sub
testl
xchg
iret
loope
addr16
enter
nop
push
and
nop
ss
leave
pop
cmp
pop
lahf
or
pop
arpl
jmp
into
test
fcmovb
mov
cmp
add
cli
jle
add
add
orl
cld
dec
mov
jmp
rcrb
push
mov
mov
inc
jle
or
adc
and
and
jp
clc
int3
and
rorl
ljmp
rcrl
dec
cmp
pop
sahf
lret
cmp
sub
jnp
mov
dec
mov
arpl
mov
imul
sub
test
sub
aaa
push
or
add
cmp
and
cmp
test
adcb
es
xchg
aas
and
aam
sbb
push
sub
or
movsb
loope
movsl
jle
mov
jae
mov
mov
sub
xor
ret
sbb
shrl
dec
jo
test
aad
movsb
or
adc
test
mov
inc
add
sub
sub
daa
dec
inc
sahf
addr16
xchg
jl
inc
test
add
test
inc
sub
sbb
sbbl
scas
test
add
ds
xor
pop
jmp
daa
mov
fisttps
adc
aad
mov
push
xor
lea
add
in
xor
imul
sbb
xchg
jnp
sbb
push
fdivl
mov
xchg
mov
sub
push
icebp
test
pop
ret
sub
sub
push
ret
xchg
test
sub
mov
jb
push
adc
add
scas
fstpl
add
mov
cwtl
scas
sub
mov
fnsave
adc
pop
shl
push
test
or
add
imul
xor
mov
push
fcoml
andl
xor
mov
xchg
inc
push
sarb
fwait
in
and
and
xchg
roll
and
mov
push
push
mov
fdivs
insb
push
push
xchg
pop
call
and
cmp
mov
out
sahf
jecxz
adcl
fwait
inc
movsl
mov
or
gs
jae
daa
rorl
sbb
ret
out
nop
mov
mov
adc
add
xor
cmpsb
inc
es
orl
dec
outsb
inc
pop
call
adc
arpl
jns
cwtl
mov
imul
lret
pusha
jb
mov
or
fwait
repz
test
pop
sahf
ja
shll
mov
arpl
repz
push
cltd
lock
mov
je
and
or
fistl
push
and
sub
xchg
popa
aad
pop
lds
pop
std
scas
adc
add
jecxz
clc
bound
mov
popf
adc
aad
xchg
int3
dec
adc
imul
das
push
add
cmp
push
loop
push
adc
jb
push
push
iret
xchg
xor
push
or
inc
or
sub
dec
out
or
jmp
mov
mov
or
sahf
jmp
dec
pop
push
mov
mov
bound
lret
movsl
arpl
cmp
cmp
iret
push
or
and
in
rorb
push
nop
sub
rcl
subl
pop
add
mov
hlt
sub
and
ja
loope
or
test
dec
je
cmp
add
xchg
outsb
add
sbb
xchg
mov
mov
icebp
mov
adc
pushf
aas
rorl
add
cmc
enter
rcll
mov
fildl
aas
and
dec
ljmp
xchg
loope
scas
cmp
lea
add
cwtl
call
jmp
loope
test
xchg
outsb
xor
cmp
sbb
and
jge
inc
xor
or
inc
popf
sub
adc
and
push
mov
sbb
jecxz
or
pop
xchg
and
inc
pusha
dec
mov
outsl
dec
mov
test
push
outsl
fwait
mov
test
lds
inc
pop
gs
pop
and
jae
xchg
sub
mov
pop
iret
and
les
fcmovb
hlt
or
andb
and
mov
xor
sbbl
enter
pop
pop
sub
pop
dec
loopne
stos
xchg
rorl
dec
xchg
into
cmovns
mov
push
test
sub
dec
rorl
xor
cmpl
push
imul
movsl
out
jo
iret
push
xchg
sbb
mulb
and
inc
jp
adc
shrb
rolb
mov
and
scas
sahf
das
stos
loope
and
in
aas
xchg
cmpsb
shrl
cs
push
js
xor
lods
mov
inc
sbb
inc
dec
cmpsb
scas
inc
xchg
dec
inc
mov
jmp
lahf
fwait
cmp
cltd
ljmp
inc
dec
sub
movsl
xor
out
js
int
cwtl
stos
cmp
mov
pusha
inc
push
das
or
lret
fucom
jl
std
sbb
cmpsb
les
sbb
jg
les
mov
inc
cwtl
daa
sbb
adc
jg
mov
push
ret
mov
mov
mov
pop
or
int
xchg
mov
adc
sub
daa
in
std
mov
loope
xor
fs
xchg
fwait
ror
or
push
fcmovnb
imul
or
adc
adc
out
stc
data16
addr16
iret
testl
push
push
ds
xchg
push
or
add
imul
std
jns
sbb
mov
insl
or
leave
in
insb
cltd
jae
scas
jae
pop
mov
test
inc
leave
dec
sub
push
xorb
and
or
popl
sbb
xor
mov
and
nop
dec
loop
pop
xchg
adc
fidivrs
movsl
inc
xchg
leave
subl
add
adc
cmp
adc
sar
and
push
mov
mov
out
mov
ret
enter
inc
adc
clc
repz
sub
xchg
test
adc
fidivl
cld
pop
enter
adc
out
sub
sub
iret
mov
inc
or
xchg
push
ja
ja
outsl
add
sbb
dec
and
adc
insl
in
jle
jmp
xchg
or
adc
aas
pop
xchg
dec
mov
or
out
test
inc
sbb
jp
dec
clc
xor
das
arpl
stc
mov
ret
insl
sub
aad
or
or
cmpsb
movsb
insl
and
test
dec
insb
into
cmp
xchg
inc
and
and
sbbl
popa
mov
sub
xchg
arpl
jbe
dec
shrl
push
test
and
or
in
loope
andl
adc
ret
or
lret
test
in
sti
add
and
inc
or
xlat
or
xchg
cmp
outsb
pop
cmc
test
push
mov
pop
add
sbb
movsb
pop
adc
lcall
sub
add
cmp
shlb
fimull
mov
daa
cmpxchg
adc
test
adcb
push
pop
sub
aam
cmp
add
xchg
mov
xchg
jns
fs
mov
and
jo
xor
jge
jb
sub
xchg
in
ljmp
lret
jbe
inc
sub
aam
movsb
sbb
or
mov
inc
lahf
out
in
push
cwtl
jecxz
and
xchg
mov
test
push
and
lods
xchg
jmp
lods
iret
sub
jns
xor
sbb
rcrb
dec
out
and
lea
jl
or
jmp
sub
popf
and
inc
ret
roll
mov
push
insb
aaa
fwait
sub
gs
push
jne
cmpsb
and
loope
xor
inc
imul
pusha
xor
orl
adcb
aaa
xor
adc
rol
lahf
out
adcb
fmulp
ret
iret
loopne
popa
add
ret
rolb
push
unpcklps
loopne
scas
rcr
filds
and
or
mov
inc
pop
popa
imul
sub
ret
xor
test
jmp
adcl
stos
leave
adc
sub
in
orb
push
pop
inc
adc
outsb
out
sub
je
dec
pop
adc
and
xchg
cmc
cmpb
push
mov
inc
pusha
and
cmpsb
cwtl
add
and
mov
adc
xor
inc
imul
inc
data16
ja
pop
adc
insl
dec
cmc
and
add
fiaddl
sub
cmove
dec
sbb
mov
sbb
adcl
sahf
es
aaa
cmp
les
movaps
and
sbbl
fcmove
push
push
lahf
pusha
ret
pop
insl
push
test
daa
jno
or
mov
jno
cmp
inc
cmp
aas
add
out
or
push
fs
mov
int3
ja
add
orl
sbb
mov
orl
inc
pop
mov
dec
ss
or
cmpl
mov
cmp
jo
xor
js
daa
inc
clc
clc
ret
addl
adc
test
pop
mov
dec
nop
add
xor
mov
dec
sbb
inc
sub
sbb
nop
gs
lret
push
push
inc
jmp
fwait
jecxz
aaa
aad
test
and
inc
insb
cmp
lods
or
mov
popl
stos
arpl
inc
pop
xchg
inc
jne
mov
dec
popa
jbe
loope
int3
movsb
lds
pop
xor
in
pop
adc
and
add
cmp
or
aam
inc
adc
mov
arpl
fiadds
cmp
push
clc
and
int
xchg
adc
mov
mov
lods
sbb
jmp
lea
out
push
mov
sbb
ret
sub
xchg
xor
into
data16
adc
xchg
mov
imul
into
push
mov
lock
push
gs
sub
adc
movsl
mov
sub
or
ret
in
inc
xchg
dec
adc
or
sub
mov
and
addr16
or
in
test
and
insl
dec
lods
fldenv
das
push
xor
loopne
pop
imul
push
mov
fidivl
nop
jne
push
dec
arpl
inc
fisubs
xor
mov
pop
or
sub
sbb
mov
xor
or
repnz
outsb
sub
lds
add
sbb
fiaddl
movl
ret
frstor
xlat
mov
fstl
mov
mov
fiadds
inc
repnz
or
and
inc
jmp
inc
js
push
and
cltd
and
nop
mov
fwait
pavgw
adc
imul
lret
aaa
sahf
adc
leave
sub
aam
and
out
xorl
jle
fwait
adc
xchg
and
mov
loope
mul
sub
repnz
push
mov
xlat
imul
cltd
dec
dec
pop
push
lret
mov
pusha
and
and
cmp
push
pop
or
mov
fstpl
jecxz
orb
mov
mov
cmp
xor
lock
mov
pop
lahf
add
xchg
sbb
xor
xorl
cltd
inc
lock
cwtl
pop
cmpl
pop
mov
mov
xor
add
test
jp
aam
add
and
filds
or
arpl
xor
and
xor
dec
rolb
pop
aam
call
cmp
pop
and
arpl
lock
dec
mov
dec
popf
cmp
mov
frstor
shlb
in
lcall
jne
sbb
mov
mov
sbb
pushf
jbe
das
push
or
cmp
pop
outsb
int
sarb
or
xchg
dec
xchg
ret
ljmp
sbb
in
and
push
roll
aaa
dec
setns
jae
aad
shrb
movsl
push
cmpsb
mov
push
and
jo
lods
inc
shlb
js
mov
and
pushf
add
dec
jg
push
sub
lret
dec
inc
aad
dec
int3
add
push
fisttpll
mov
les
mov
cmpsb
in
sbb
adc
pop
faddl
stos
push
mov
and
jl
lds
mov
and
and
xchg
ja
nop
dec
and
cmp
or
adc
adc
jne
negl
xor
xor
outsl
mov
inc
imul
push
arpl
dec
cmp
mov
shlb
int3
push
int
pop
inc
pop
cmpsb
push
push
mov
jmp
mov
fldcw
insb
into
dec
inc
add
shlb
fistps
dec
out
wrmsr
add
jecxz
sbb
lock
xchg
pop
addl
jl
fistl
or
add
loope
ret
pusha
push
push
ret
dec
inc
scas
and
movsl
or
mov
mov
dec
or
push
mov
inc
xor
xor
mov
bound
cmpsl
inc
cld
cmp
insl
push
xchg
sbb
movl
fldl
xor
arpl
pushf
and
pop
mov
mov
inc
out
in
loop
lock
mov
test
add
test
ret
pop
sbb
adc
xchg
cmc
cld
inc
ret
inc
or
mov
lock
fnstenv
dec
ljmp
push
mov
sbbb
dec
shll
adc
jns
adc
or
into
push
jg
and
lock
mov
int3
dec
mulb
inc
roll
add
repnz
scas
xor
xchg
outsl
dec
lea
push
loop
pop
pop
enter
lds
orl
sbb
pop
push
inc
orl
mov
and
dec
sbb
push
divl
es
mov
into
push
xchg
lea
out
mov
jno
mov
jno
aaa
ret
arpl
mov
pop
popa
sbb
mov
jge
pop
js
lea
lea
sub
push
mov
outsl
pop
xor
xchg
mov
and
loope
inc
popa
enter
jmp
xchg
xchg
lds
sub
idiv
or
adcb
inc
jle
imul
xchg
imul
aam
add
daa
jl
jg
dec
getsec
mov
dec
dec
add
adc
sub
or
dec
ja
xchg
or
sarl
in
sub
ljmp
adc
mov
jb
hlt
xor
rcrb
iret
aas
jg
sahf
insb
pop
xor
popl
xchg
nop
dec
bts
mov
mov
movsl
adc
xor
add
adc
sbb
jno
lds
push
lret
push
int3
lds
xor
pop
fcoms
stos
mov
scas
jg
add
sub
stos
into
ret
pushf
pop
cmpsl
add
dec
jns
dec
jecxz
pop
pusha
push
pop
xchg
push
xchg
js
pop
mov
add
xchg
mov
lea
pusha
jg
xchg
mov
xorl
inc
add
mov
rsm
and
push
dec
ror
int3
push
stos
push
pop
push
rcr
scas
je
test
out
push
lods
in
mov
ret
sub
pop
and
sbb
leave
shr
mov
sub
pop
inc
adc
testl
fdivrp
jmp
cmp
mov
xchg
imul
out
adc
cld
push
enter
ss
pop
and
stos
mov
out
int
adc
fistpll
inc
lea
pop
adc
dec
pop
cmpl
mov
push
xor
sbb
shll
mov
or
push
arpl
loopne
add
movb
jno
daa
or
ror
sbb
or
cmpsb
xor
rcrb
push
or
lock
sbb
push
mov
jg
cmp
mov
adc
push
xor
xor
push
fdiv
jl
inc
insl
arpl
dec
dec
or
cmpsb
jne
sub
xchg
or
popa
xchg
mov
cltd
dec
add
dec
jns
jge
push
int
xor
subl
inc
mov
dec
sub
fs
movsl
xchg
fstpl
dec
cmpsl
incl
insb
adc
jp
popa
xor
adc
cmp
xchg
add
shlb
notb
sbb
sub
subl
mov
and
lea
or
xchg
lret
sbb
test
loope
dec
jmp
orl
popf
cltd
add
mov
pmaddwd
adc
adc
mov
push
cs
arpl
icebp
and
es
dec
xchg
outsb
sub
and
in
xchg
movsl
xor
xor
lds
aad
les
add
lahf
mov
pop
fucomi
add
incl
stos
or
flds
rcrb
cld
inc
cmp
xchg
and
fwait
in
nop
test
mov
inc
roll
add
and
aaa
ret
sbb
pop
dec
mov
push
dec
addl
rcrl
jmp
jae
dec
mov
gs
test
loope
and
stos
outsb
inc
sahf
push
clc
out
divb
mov
arpl
jecxz
lea
add
push
mov
andl
mov
sbb
les
and
mov
imul
pushf
or
lods
xchg
add
popa
mov
and
push
and
sub
jbe
fdivl
or
lcall
sti
push
or
in
add
pop
mov
popf
inc
adc
add
inc
mov
into
push
and
shl
int
xchg
jmp
push
test
scas
jle
dec
push
inc
mov
movsl
bound
fsub
mov
nop
adc
add
push
sbb
icebp
inc
daa
dec
dec
add
lods
xor
test
inc
adcl
sbb
inc
push
or
jne
loopne
push
mov
jmp
test
pop
mov
dec
iret
push
or
or
xor
frstor
mov
dec
mov
adc
push
cwtl
mov
adc
loope
adc
icebp
inc
sbb
filds
loope
dec
jno
inc
mov
jbe
jl
xchg
in
loope
cwtl
mov
cmpsl
xor
cmp
mov
insl
jne
jg
popf
movsl
outsl
aaa
jecxz
inc
mov
cli
in
scas
jbe
jb
repz
jbe
jb
loop
data16
and
xor
and
push
cmpsl
cmp
mov
sbb
ret
push
adc
and
inc
adc
test
lds
flds
fwait
mov
sub
jecxz
sub
lock
js
adc
cmp
push
or
adc
lret
xchg
out
mov
mov
jg
adc
fildll
mov
and
addr16
push
and
mov
fstpl
shr
push
dec
adc
cmp
mov
adc
mov
sahf
xlat
xchg
ret
inc
or
stc
imul
sub
jg
push
sbb
xor
imul
inc
inc
pop
dec
pop
push
lret
arpl
adc
enter
into
enter
das
push
sbb
lods
sbbl
fnstenv
out
aaa
jge
adc
pop
lea
loope
icebp
es
push
cmp
and
lcall
arpl
in
icebp
test
std
stc
jne
out
pushf
xchg
movsb
imul
or
enter
sbb
cwtl
mov
in
aad
loope
imul
sbbl
stc
shll
sub
inc
cwtl
ja
cs
cmc
orb
push
inc
xchg
dec
insb
push
insl
clc
and
adc
sub
push
test
mov
shlb
icebp
mov
pop
flds
inc
lock
and
push
outsl
mov
mov
and
test
mov
sub
add
xor
fdivs
subl
cmpl
sbb
and
sub
jb
andb
mov
xchg
addr16
dec
sti
cwtl
adc
mov
cld
and
pop
mov
sbb
or
sbb
sbb
adc
aaa
cmpsb
ret
adc
xor
inc
add
test
pop
and
cmp
cmp
inc
mov
ja
pop
sub
leave
fists
xchg
bsr
xor
pop
je
pop
clc
test
inc
ficompl
adc
aaa
stos
mov
test
mov
sahf
inc
or
cmpsb
mov
insb
inc
dec
push
adc
adc
dec
sub
dec
inc
roll
xchg
ret
or
push
dec
pop
pop
dec
clc
push
dec
popf
movsb
or
xchg
cmp
fcmovu
xor
enter
lds
sub
mov
push
jg
aad
fsubrp
je
fldenv
insl
or
sub
insb
cwtl
mov
call
sub
sbb
mov
adc
mov
stos
xlat
xchg
jnp
xor
jno
xchg
movsb
cli
js
jno
sbb
fdivrp
fs
scas
push
inc
xchg
ret
inc
pushf
push
fistl
jns
xchg
or
bound
adc
xor
popa
mov
dec
adc
add
dec
push
sub
ss
xchg
inc
pop
pop
xchg
and
mov
add
mov
sub
sbb
mov
pop
pop
shrb
xchg
and
fs
mov
shrb
daa
popf
imul
push
cwtl
push
xor
test
and
jl
leave
sbb
mul
loope
sub
push
arpl
add
bound
mov
std
setno
movsb
push
dec
subl
cmc
push
adc
mov
or
out
mov
loopew
aam
sub
lret
shl
xchg
ljmp
les
xchg
xorl
rcrb
flds
jo
clc
mov
ret
fcmove
pop
repnz
js
and
pop
or
dec
hlt
int
jbe
cs
fldl
scas
sbb
nop
dec
mov
sub
out
nop
add
insl
sbb
mov
sbb
jp
lods
dec
loop
push
js
and
adc
fsubrs
and
mov
pop
pop
and
xor
cmpsl
aaa
lods
push
pop
lea
and
es
ret
loopne
xor
mov
outsl
pusha
cmp
push
push
sub
test
cmove
imul
ljmp
jl
shl
call
int
outsb
cmpsb
lcall
addb
mov
insb
jno
mov
ja
imul
xchg
mov
or
scas
dec
dec
mov
rclb
stos
sahf
or
cmp
rcrb
js
mov
dec
test
inc
adc
js
nop
add
dec
lock
inc
inc
sbbl
xchg
imul
call
or
shll
les
sub
add
enter
icebp
sub
stc
mov
arpl
repnz
sub
jns
mov
mov
test
xor
pop
and
rcrl
das
sbb
cmp
sbb
or
leave
inc
popa
sub
sub
sbb
arpl
repz
inc
mov
addr16
jno
xchg
inc
xchg
inc
jecxz
fcoms
add
and
enter
mov
lcall
xchg
or
test
add
mov
subl
ret
loopne
xor
addb
pop
inc
cmp
xor
xor
imul
mov
adc
sbb
icebp
add
js
sarl
popa
push
orb
xchg
add
jns
xchg
dec
leave
lahf
out
push
int3
in
dec
sbb
push
jle
out
jne
sbb
pop
clc
enter
pop
jno
ljmp
jecxz
rorb
shll
iret
fildl
imul
xchg
dec
cli
dec
sbb
adc
xorb
mov
xor
daa
cltd
adc
push
lret
cmpb
adc
adc
xor
dec
shlb
and
in
add
dec
aaa
test
cmp
bound
movsl
cltd
jne
loope
arpl
jno
mov
add
addl
inc
xchg
jns
xchg
pop
pop
mov
negl
popf
pop
dec
xchg
int3
int3
inc
dec
xchg
cltd
jns
andl
ljmp
sub
sub
in
les
sbb
jns
and
sbb
test
aad
cmp
arpl
mov
adc
mov
and
inc
sbb
jge
adc
lahf
or
or
and
ffree
cmpsl
dec
inc
test
xor
xor
popa
cs
mov
xchg
pop
xor
add
or
rcrb
xchg
fwait
pop
jg
jmp
test
dec
in
mov
bnd
cmp
dec
pop
push
mov
testl
jmp
aas
dec
shl
xchg
pop
dec
scas
adc
shll
scas
testl
push
cmpsl
or
cmp
mov
je
pop
loop
dec
mov
dec
add
mov
ljmp
shl
xchg
pop
loop
movsb
adc
inc
mov
fwait
mov
out
jmp
divl
mov
scas
divl
ljmp
lahf
fstps
fdivrs
dec
rcll
cmc
testl
shlb
pop
push
testl
sub
ljmp
test
aad
jl
mov
clc
mov
divl
divl
dec
jle
mov
mov
into
divl
push
lds
nop
pop
fdivrs
dec
shl
xchg
pop
dec
cmpsl
lds
dec
xchg
mov
aas
dec
shl
xchg
pop
xchg
mov
mov
mov
imul
je
pop
divl
mov
mov
ss
divl
sarb
testl
pop
mov
loop
jmp
mov
testl
and
outsl
fdivrs
dec
rorl
jle
dec
bound
mov
fsubl
mov
pop
dec
or
mov
divl
sti
sub
adcl
mov
mov
divl
dec
adc
mov
ret
pop
cmp
rcll
mov
dec
or
mov
cmp
push
loop
add
mov
je
pop
dec
pop
or
xor
shl
xchg
pop
dec
mov
mov
jae
jb
faddp
je
pop
rcl
shl
xchg
pop
dec
lock
jb
mov
divl
dec
loop
mov
jecxz
jl
mov
dec
shll
mov
mov
lods
divl
pop
xor
and
adc
fdivrs
dec
shr
je
pop
iret
dec
loop
mov
sub
inc
cmp
xchg
pop
divl
and
shlb
out
mull
daa
leave
mov
mov
dec
pop
or
adc
dec
std
fidivl
mov
enter
je
dec
inc
xor
imulb
jge
je
pop
dec
mov
mov
sbb
addr16
sbb
jmp
mov
xchg
inc
out
fistpl
dec
rcll
lods
divl
dec
adc
mov
mov
adc
je
pop
dec
or
xchg
dec
mov
jge
popa
xlat
sbb
je
pop
dec
xor
bound
divl
dec
ds
outsb
je
pop
fadds
pop
mov
mov
xchg
pop
dec
inc
inc
mov
inc
cwtl
test
shll
js
mov
dec
mov
lret
adc
je
dec
out
sub
dec
int
rcr
aas
dec
shll
cmp
inc
arpl
pop
add
je
pop
sarb
dec
push
or
lds
mov
test
mov
loop
das
fdivrs
dec
shl
xchg
pop
dec
stc
adc
jnp
pop
out
testl
or
pop
shlb
je
pop
dec
fcoml
mov
into
rcrb
shlb
mov
and
pop
xchg
jne
mov
dec
repz
mov
popa
mov
shl
divl
ja
mov
popf
lods
jp
xchg
sbb
pop
dec
cmpsb
mov
mov
aam
sbb
aas
dec
shl
mov
mov
loope
add
dec
sbb
mov
leave
addr16
inc
mov
dec
sub
mov
or
jl
and
pop
fdivr
jg
mov
dec
aam
mov
out
push
je
pop
divl
dec
sub
insl
flds
dec
ljmp
pop
testl
cmp
add
je
dec
sbb
test
out
xor
pop
jb
divl
test
mov
dec
sbb
divl
add
mov
pop
cwtl
inc
inc
xor
mov
push
divl
dec
pminsw
fdivrs
dec
rcll
je
pop
push
lahf
dec
pop
dec
out
mov
jb
sub
aad
test
xchg
pop
jbe
dec
lock
add
je
pop
jmp
je
dec
adc
clc
aad
add
scas
mov
mov
testl
movsb
push
fbstp
xchg
dec
mov
mov
lret
push
cmp
dec
shl
outsb
mov
ds
divl
rcr
out
divl
shlb
mov
enter
movsl
fdivrs
dec
shl
xchg
pop
dec
cmpsb
cltd
mov
inc
mov
divl
rol
int3
dec
add
mov
push
sahf
inc
ror
pop
sarb
mov
pop
clc
mov
dec
and
mov
testl
inc
mov
or
or
test
fdivp
dec
adc
push
je
pop
scas
mov
mov
adc
mov
mov
je
pop
dec
pop
add
and
mov
dec
dec
mov
mov
dec
aas
fidivs
inc
lock
fdivrs
dec
shll
mov
mov
roll
lods
dec
cwtl
fidivs
pop
repz
cld
mov
inc
divl
rclb
sbb
je
pop
mov
out
testl
push
adc
lock
pop
leave
mov
mov
je
dec
lods
mov
push
pop
mov
aas
in
loopne
aas
dec
shr
mov
mov
enter
xchg
divl
mov
push
mov
lock
leave
fwait
aam
divl
and
dec
out
mov
cmp
jb
xchg
pop
testl
inc
mov
sbb
mov
dec
sub
mov
sti
repz
inc
enter
je
pop
dec
je
mov
sbb
and
sbb
divl
or
mov
cmpsl
loop
fwait
into
pop
daa
je
pop
dec
cmp
dec
jb
mov
testl
jb
divl
mov
and
xlat
mov
pop
mov
fsubrp
dec
aaa
ss
dec
sahf
shlb
mov
aas
dec
sar
dec
out
mov
int3
or
or
fdivrs
dec
shl
pop
xor
xor
xchg
dec
mov
mov
fdivrs
dec
shll
pop
mov
push
mov
call
je
pop
stos
fwait
out
mov
ds
xor
mov
xchg
jno
cmp
dec
rcll
mov
mov
je
sub
aas
dec
shl
xchg
dec
adc
mov
enter
add
divb
fdivrs
dec
shrl
dec
mov
mov
cltd
xchg
ret
movsb
les
fdivrs
dec
shll
out
mov
xor
divl
adc
mov
xor
mov
data16
jp
ror
mov
shll
sahf
push
jmp
enter
je
pop
sarb
mov
mov
fdivrs
pop
out
dec
cmp
mov
mov
fdivp
je
dec
imul
mov
divl
dec
push
xchg
mov
sbb
jle
fdivrs
dec
rcl
divl
dec
or
jge
and
mov
outsb
xor
mov
dec
jnp
scas
jbe
dec
mov
dec
jae
mov
stos
movsb
push
int
aas
dec
rcll
into
lods
pop
divl
mov
jnp
xorl
jnp
dec
push
cltd
mov
dec
fdivrs
dec
shll
mov
cltd
mov
fdivrs
dec
rcll
mov
mov
xor
out
dec
adc
mov
adc
fdivrs
dec
shl
lds
mov
rol
je
pop
inc
shrb
mov
and
dec
shll
mov
mov
xor
and
stc
fdivrs
dec
shll
push
or
xchg
imul
shl
mov
divl
dec
mov
mov
cltd
jmp
pop
mov
sub
popa
push
mov
mov
je
pop
sti
testl
mov
mov
dec
pop
push
mov
xor
out
dec
mov
je
dec
cwtl
repnz
clc
push
sbb
pop
mov
pop
dec
mov
mov
adc
fdivrs
dec
shll
fucomi
dec
cwtl
divb
sarb
scas
mov
mov
divl
shl
mov
imul
call
je
pop
testl
inc
push
add
pop
pop
dec
aas
add
pop
dec
andl
testl
mov
mov
shll
mov
dec
mov
and
enter
inc
mov
pop
inc
test
out
dec
data16
mov
inc
arpl
xchg
pop
dec
aam
mov
cltd
sub
or
xchg
fcomip
int
push
mov
test
mov
out
mov
std
sbb
divl
dec
cli
xchg
mov
mov
ss
faddl
fdivrs
dec
rcll
jg
mov
ds
insl
adc
or
fcomp
dec
lods
divl
jmp
fstpl
lcall
testl
pusha
push
adc
dec
sub
mov
divl
adc
mov
pop
dec
mov
mov
divl
dec
xchg
ds
push
mov
rcl
out
dec
cmp
iret
cmp
je
pop
rol
dec
testl
testl
cs
testl
sbb
cmp
mov
divl
jne
mov
imul
je
pop
push
mov
mov
jno
outsl
mov
dec
divl
dec
adc
xlat
scas
divl
rcr
fimuls
mov
iret
divl
dec
add
mov
js
divl
stos
dec
mov
mov
aas
dec
shll
dec
fisubl
mov
or
inc
jmp
je
pop
shlb
mov
addr16
divl
leave
mov
mov
popa
cs
push
push
lods
or
in
aas
dec
rcll
dec
mov
push
ficomps
je
pop
divl
mov
psrad
loopne
lea
das
mov
loopne
jge
add
mov
loopne
insl
dec
mov
mov
dec
adc
mov
pop
dec
mov
lods
jns
mov
sahf
fidivs
pop
rcl
jle
dec
cmp
test
dec
arpl
mov
je
pop
mov
dec
dec
lret
test
lcall
xchg
dec
add
addb
mov
divl
dec
adc
or
fdivrs
dec
shl
xchg
pop
jb
testl
cmpsl
mov
add
pop
dec
xchg
cli
aam
jnp
mov
sbb
sbb
fdivrs
dec
shll
shll
into
fdivrs
dec
rcll
je
pop
dec
out
and
mov
pop
aad
push
mov
xchg
pop
mov
scas
divl
dec
jl
mov
iret
repnz
fdivrs
dec
rcll
lods
dec
push
mov
dec
in
mov
aas
dec
shll
adc
mov
mov
aaa
test
iret
pop
rolb
cwtl
push
mov
or
sub
aas
dec
rcll
jnp
dec
dec
mov
or
pop
inc
stos
sahf
fistl
dec
mov
mov
clc
mov
nop
dec
fistl
xchg
pop
dec
add
mov
test
or
xchg
pop
dec
jnp
mov
jl
lock
dec
ror
je
pop
dec
loope
mov
fdivrs
dec
rcll
test
dec
rcrl
mov
cmc
xchg
sbb
dec
hlt
jge
mov
repz
divl
push
movsl
mov
retw
dec
sti
rcrb
mov
xchg
pop
dec
loopne
mov
insb
cmp
loop
dec
test
dec
sti
sbb
push
divl
dec
stos
movsl
mov
cltd
jecxz
divl
test
loop
mov
out
sub
divl
mov
pushf
test
aas
dec
shll
sub
mov
and
shll
fidivs
mov
sub
je
pop
dec
cmp
mov
push
test
divl
xor
mov
insl
dec
je
pop
sarb
mov
leave
insl
out
insl
pop
fdivrs
dec
shl
xchg
dec
les
mov
xor
testl
lods
orb
daa
adc
dec
mov
push
lds
divl
pop
mov
mov
arpl
fdivrs
dec
fnsave
adc
loop
mov
je
pop
dec
adc
mov
add
pop
dec
xchg
xchg
pop
shlb
dec
int3
lea
jge
je
dec
pop
or
xor
dec
nop
popf
mov
xor
cwtl
sbb
aas
dec
shll
mov
mov
je
pop
dec
or
mov
testb
aas
dec
rcl
loop
mov
mov
divl
imul
adc
je
pop
out
divl
dec
pop
lret
cwtl
sbb
dec
divl
mov
scas
testl
int
push
arpl
pop
divl
dec
add
mov
lods
fdivp
je
pop
pop
testl
pop
insl
pop
sti
rcrb
dec
cmp
mov
push
ljmp
shl
xchg
pop
testl
cmc
fwait
testl
push
mov
testl
inc
adc
fwait
mov
pop
enter
je
pop
dec
add
mov
pusha
sbb
je
pop
testl
popa
gs
aas
dec
shl
pusha
lds
mov
fdivrs
dec
rorl
mov
divl
loop
ja
mov
mov
cmp
cmp
dec
cmp
mov
leave
jo
pop
hlt
inc
pop
rcr
dec
testl
or
mov
dec
sub
mov
testl
jb
in
hlt
or
aas
dec
shll
mov
imul
xchg
pop
dec
sbb
pop
cmpb
divl
dec
bnd
mov
or
je
pop
dec
leave
repnz
cmc
xchg
dec
push
mov
fdivrs
dec
shll
xchg
lods
mov
or
sbb
add
je
pop
jb
testl
out
shll
inc
dec
fdivrs
dec
shl
xchg
pop
dec
push
lea
scas
dec
rcll
lea
xchg
pop
dec
fisubrs
es
fdivrs
dec
sarl
xchg
pop
jo
dec
cwtl
test
add
xchg
pop
mov
fdivp
dec
cwtd
mov
mov
je
pop
stos
dec
add
mov
divl
sti
rcrb
out
mov
jnp
xchg
pop
loop
mov
dec
ret
mov
mov
xorb
adc
je
pop
dec
cmpsb
repnz
cltd
mov
divl
jae
mov
pushf
mov
sbb
dec
shll
dec
test
adc
rcll
dec
mov
mov
mov
fdivrs
dec
rcll
dec
jge
mov
lock
mov
test
dec
setge
adc
dec
test
pushf
je
imulb
shll
fdivrs
dec
rcll
dec
iret
or
push
je
dec
insb
popa
mov
fdivrs
dec
rcll
mov
fstpl
mov
mov
pop
mov
sub
mov
pop
je
pop
dec
push
lds
fdivrs
dec
shll
fdivp
je
dec
jns
mov
lds
inc
push
fdivrs
dec
shll
leave
mov
mov
xchg
mov
push
push
xchg
push
mov
add
je
pop
dec
inc
insl
mov
fdivrs
dec
rcll
mov
pop
dec
sbb
xorb
repnz
divl
dec
dec
jno
mov
je
pop
ror
push
divl
pop
ljmp
outsb
fdivrs
dec
shll
repz
mov
mov
adc
ja
out
testl
out
xchg
dec
xor
mov
divl
mov
insb
mov
ror
testl
push
cmp
cmpl
jns
mov
mov
pop
cmp
dec
rcll
inc
out
mov
push
dec
shl
xchg
imul
fdivrs
dec
shl
xchg
pop
dec
lods
push
mov
in
xchg
sub
sbb
mov
mov
adc
roll
lods
divl
inc
enter
xchg
mov
in
sbb
mov
sbb
mov
divl
push
mov
mov
fwait
sbb
xor
je
dec
mov
inc
pushf
xlat
enter
je
pop
testl
cmpl
pop
loop
mov
mov
xchg
test
divl
mov
dec
divl
loope
mov
lahf
jl
out
dec
inc
shlb
mov
mov
dec
shl
stos
movsl
mov
cwtl
xchg
mov
dec
out
cli
mov
xchg
add
mov
divl
dec
popa
test
xchg
fbstp
dec
rorl
xor
xchg
pop
dec
cmp
dec
add
dec
stc
mov
mov
popa
sarl
divl
ud1
fcmovne
mov
mov
je
pop
fdivrs
dec
rcll
cmp
dec
cmp
mov
testl
mov
fdivrs
dec
shll
mov
mov
fdivrs
pop
out
testl
or
shrb
out
testl
push
shl
je
pop
dec
enter
push
mov
adc
xchg
inc
fdivrs
dec
rcll
pusha
shll
mov
shrl
divl
dec
pusha
jne
mov
mov
dec
adc
movsl
lret
ret
je,pn
pop
xchg
icebp
dec
push
push
mov
adc
ret
je
pop
dec
call
ds
dec
rcl
mov
popf
repz
add
lret
imul
je
pop
divl
dec
inc
loop
mov
add
rol
dec
iret
imul
aas
dec
rorl
mov
mov
ss
sub
mov
divl
loopne
mov
subb
je
pop
dec
add
mov
call
sub
cmp
je
dec
int3
popf
mov
add
rcr
fimuls
popa
mov
outsl
jnp
je
pop
loop
flds
xchg
pop
dec
ljmp
fs
mov
aas
dec
shll
dec
dec
cli
mov
mov
divl
fs
mov
out
push
loop
adc
xchg
pop
shlb
xor
mov
add
je
pop
divl
push
andl
pop
push
mov
dec
cmc
pop
mov
popa
jae
xchg
pop
fdivrs
pop
dec
mov
mov
jp
aas
dec
rcll
je
pop
loop
cld
mov
mov
mov
jp
mov
scas
divl
dec
scas
repnz
aad
out
jbe
fdivrs
dec
rcll
testl
stc
xchg
in
xor
jae
divl
pop
popa
mov
pop
push
fdivrs
dec
shll
ljmp
aas
dec
shll
mov
xchg
mov
divl
pop
out
mov
mov
aas
dec
rcl
out
divl
adcb
in
clc
fdivrs
dec
rcll
mov
mov
je
dec
popa
loop
mov
pop
push
rcrb
sbb
out
mov
fsubrs
imul
dec
shr
je
pop
mov
jecxz
mov
pop
loop
fdivp
mov
divl
loop
sub
mov
dec
out
mov
imul
sub
aas
dec
rcll
je
dec
rcll
out
add
fdivrs
dec
ror
sbb
mov
mov
pop
jb
dec
cmp
mov
divl
mov
pop
mov
je
pop
shrb
testl
adc
ljmp
mov
mov
divl
testl
test
je
pop
popf
dec
leave
fidivl
xor
or
pop
mov
popf
repz
add
dec
daa
mov
clc
pop
or
jno
sbb
aas
dec
shl
xchg
dec
fidivl
nop
push
fdivrs
dec
rcll
mov
dec
cs
mov
jg
je
pop
ror
out
divl
dec
imul
rol
popf
mov
mov
dec
dec
jne
mov
xchg
pop
mov
pop
dec
out
push
mov
lret
stos
fdivr
je
pop
sarb
mov
hlt
mov
je
pop
divl
inc
shll
mov
mov
divl
sub
insb
repnz
dec
dec
hlt
repz
mov
divl
shll
pop
sar
sub
inc
insl
mov
pushf
fdivrs
dec
shl
and
sbb
test
mov
inc
imulb
shll
jnp
dec
mov
dec
cmpb
fdivrs
dec
shl
adc
sti
in
je
pop
push
mov
dec
lret
mov
sti
mov
dec
or
mov
mov
fidivs
lods
pop
add
divl
mov
test
mov
aas
dec
rcll
dec
add
adc
mov
scas
testl
fstpt
loop
loop
xchg
pop
rclb
out
divl
dec
inc
cltd
mov
lods
out
divl
dec
mov
pop
lea
dec
into
mov
add
inc
and
adc
mov
mov
jne
mov
sarb
ror
loop
int
mov
dec
xchg
fidivl
mov
shl
hlt
loop
mov
and
mov
nop
shlb
pop
mov
dec
dec
idivb
mov
aas
dec
shl
xchg
pop
testl
sub
lock
xor
je
pop
dec
mov
mov
dec
ja
mov
xchg
divl
inc
mov
fdivrs
dec
rorl
jle
dec
testl
mov
jno
cmp
aas
dec
rcll
rcrb
mov
popf
mov
sbb
xchg
pop
dec
jne,pn
mov
loop
sarl
stos
mov
mov
mov
xor
mov
jne
cmpsl
fdivrs
dec
shl
cmp
mov
insb
das
jns
divl
rcr
fimuls
push
mov
adc
shll
je
dec
ja
mov
xchg
out
dec
sahf
mov
push
fdivrs
dec
rcll
fwait
out
divl
dec
lods
mov
ljmp
shrb
dec
push
popa
mov
jnp
pop
fdivrs
dec
rcll
jnp
dec
dec
jno
mov
adc
testl
aad
adc
hlt
in
xchg
pop
dec
or
mov
mov
mov
divl
push
out
mov
stc
jnp
cwtl
je
pop
mov
scas
divl
push
test
dec
xchg
dec
pop
dec
cltd
jne
mov
iret
dec
imul
xchg
inc
divl
mov
mov
repnz
aas
dec
shll
adc
testl
xchg
and
imul
je
pop
xchg
fistpl
mov
dec
mov
mov
fdivrs
dec
shll
lret
sub
popa
pop
divl
dec
push
shlb
movsl
leave
iret
fdivrs
dec
shl
out
mov
and
fstp
aas
dec
rcll
mov
dec
cmp
pop
and
mov
mov
dec
stos
insl
mov
sbbl
testl
je
cmp
pop
mov
jge
je
pop
sarb
mov
stc
je
pop
fdivrs
dec
fsubs
sub
je
pop
dec
jmp
mov
out
cmp
shll
mov
xchg
out
mov
int3
gs
into
adc
divl
dec
outsl
push
mov
fdivrs
dec
shl
xchg
pop
divl
mov
inc
pop
jecxz
je
pop
push
mov
mov
fisubs
fisttpl
xchg
pop
testl
jno
pop
mov
mov
mov
mov
divl
add
mov
aas
dec
shll
imul
testl
or
imul
mov
mov
adc
mov
mov
dec
ss
mov
aad
rcrb
divl
push
divl
cmp
lahf
lret
test
dec
mov
pop
divl
lret
testl
xchg
in
or
fdivrs
dec
rcll
xchg
je
dec
adc
mov
fdivrs
dec
rorl
jle
dec
mov
dec
jl
mov
mov
je
pop
dec
enter
inc
jl
es
pop
dec
fidivl
mov
fdivrs
dec
rcl
dec
lahf
jno
mov
push
mov
je
pop
fldenv
dec
xor
mov
dec
pop
roll
dec
rcll
dec
and
or
push
loop
mov
je
pop
dec
fstl
mov
cmpsb
test
out
dec
fcoms
cmp
hlt
cmp
xchg
pop
shl
out
dec
loop
mov
push
or
je
pop
sarb
pop
dec
mov
mov
divl
rcrb
test
fucomp
dec
and
mov
divl
repnz
dec
push
jno
mov
aas
dec
shl
jle
mov
jbe
addr16
pop
dec
sbb
and
sub
pop
testl
out
mov
mov
dec
sbb
insb
fdivrs
pop
out
dec
aam
mov
ss
mov
jbe
divl
lret
mov
xor
pop
divl
dec
sub
mov
je
pop
rcrb
dec
adc
sbb
je
pop
shlb
mov
nop
das
je
pop
scas
popf
mov
mov
dec
sub
dec
push
popf
mov
dec
mov
fdivrs
dec
rcll
mov
pop
dec
push
andl
fdivrs
dec
shll
mov
dec
xor
mov
pop
sbb
pop
mov
test
aas
dec
shll
rcrb
in
mov
test
divl
rcrb
fimuls
xor
out
mov
test
inc
enter
pop
mov
xchg
into
and
fdivr
dec
lods
divl
dec
fxch
mov
in
pop
js
out
divl
dec
imul
mov
shl
pop
jae
dec
addr16
mov
divl
dec
mov
testl
and
imul
lret
dec
shl
divl
dec
out
mov
je
pop
dec
adc
mov
jae
ret
divl
divl
icebp
mov
dec
and
aas
dec
shrl
push
xchg
divl
shlb
mov
fdivrs
dec
shl
xchg
pop
enter
dec
push
mov
je,pt
pop
dec
jne
mov
mov
xchg
je
dec
mov
mov
and
call
xchg
pop
inc
mov
mov
mov
dec
push
xor
pop
addb
divl
xchg
xchg
mov
addr16
je
pop
mov
sbb
push
push
mov
mov
pop
dec
xchg
shlb
mov
xchg
pop
dec
popf
shlb
imul
dec
dec
hlt
repz
mov
mov
and
jae
pop
cmpsl
dec
xchg
fidivs
dec
rolb
push
arpl
pop
pop
divl
pop
pop
mov
outsl
xor
inc
pop
divl
dec
and
dec
xchg
pushf
lods
movsb
imul
mov
pop
out
dec
or
clc
popf
arpl
shl
testl
mov
mov
mov
pusha
lods
mov
divl
lahf
mov
sbb
pop
divl
dec
stos
pop
mov
lds
jno
testl
js
adc
mov
divl
testl
cmc
lcall
in
mov
adc
divl
mov
fdivp
dec
mov
mov
pop
cs
lods
fdivrs
dec
shll
shll
aas
dec
rcll
popf
pop
mov
ret
fdivrs
dec
shll
insl
mov
dec
divl
mov
rclb
loop
fnstsw
out
loop
mov
mov
lret
hlt
or
cli
scas
je
pop
divl
aam
mov
test
jb
divl
testl
pusha
cld
fiadds
jbe
fdivrs
dec
shl
xchg
pop
testl
das
push
and
out
divl
dec
iret
shll
je
pop
fdivrs
dec
movsb
xor
sbb
push
sti
out
divl
ficompl
fdivl
out
fdivrs
dec
shl
xchg
pop
sarb
cmp
jecxz
aad
mov
scas
divl
fcoms
sub
mov
dec
dec
fidivs
fdivrs
dec
rcll
mov
dec
inc
jns
mov
aas
dec
shll
dec
mov
mov
mov
mov
xchg
mov
sbb
divl
leave
dec
loop
mov
pop
cmp
mov
dec
mov
mov
je
dec
xor
mov
add
push
xchg
divl
sti
dec
mov
aad
inc
ja
fdivrs
dec
shll
mov
dec
cmpsb
mov
mov
pop
dec
jp
mov
divl
dec
jae
mov
fists
divl
jb
testl
sbb
je
dec
cmp
mov
fdivrs
dec
shl
xchg
pop
fdivrs
mov
or
aas
dec
rorl
mov
mov
cmp
or
aas
dec
rcll
mov
pop
dec
mov
mov
mov
sub
xchg
dec
xor
mov
push
pop
fdivrs
divl
fiadds
mov
repnz
divl
dec
imul
testl
xchg
test
divl
push
mov
nop
dec
mov
pusha
dec
pop
pop
stos
divl
dec
jl
mov
lahf
je
pop
mov
mov
pop
dec
shll
pop
testl
shrb
push
pop
divl
popf
dec
push
popa
mov
cmp
shll
je
dec
add
mov
xchg
cmp
shr
jg
mov
mov
mov
xchg
pop
testl
sbb
out
jmp
lods
shll
dec
mov
mov
mov
cmp
dec
in
imul
xchg
pop
dec
dec
jno
mov
loopne
pop
divl
inc
mov
xchg
fdivrs
dec
shll
add
mov
mov
pop
testl
lret
scas
push
je
pop
shl
divl
mov
mov
mov
fs
je
pop
divl
lret
and
add
mov
testl
lcall
aas
dec
shll
dec
dec
jb
mov
dec
pop
enter
dec
mov
mov
fdivrs
dec
shl
xchg
pop
mov
dec
shrl
mov
aas
dec
shl
xchg
pop
rol
cs
pop
push
mov
ret
fdivrs
dec
rcll
adc
dec
leave
xor
or
pop
enter
je
pop
rcrb
out
dec
test
mov
add
lods
add
jno
mov
adc
fdivrs
dec
rcll
mov
jno
lcall
shlb
mov
push
cmp
dec
rcll
jnp
out
dec
inc
inc
mov
mov
pop
testl
and
adc
mov
dec
lea
mov
aas
dec
rcll
je
pop
dec
popa
inc
mov
cmp
mov
dec
push
popf
mov
dec
pushl
mov
je
dec
cmp
fnstcw
fdivp
je
pop
dec
sbb
mov
mov
aas
dec
rcll
divl
dec
popa
shll
ljmp
pushf
dec
mov
maskmovq
testl
roll
pop
mov
dec
fistl
push
fs
xchg
pop
dec
repz
mov
inc
fdivrs
dec
rorl
mov
loopne
popf
dec
imul
mov
imul
fdivrs
dec
shrl
dec
movsl
jns
mov
push
fidivs
loope
mov
loop
cmp
mov
and
xchg
pop
cmp
je
dec
and
mov
mov
rcrb
mov
lods
mov
push
test
fdivrs
dec
shl
xchg
pop
divl
push
sbb
cmpsb
divl
divl
dec
and
mov
jl
inc
stos
je
pop
mov
mov
mov
cmpsl
pop
push
fdivrs
dec
shl
xchg
pop
dec
cli
pop
mov
pop
std
pop
rcr
cmp
dec
sahf
jne
mov
adc
xchg
pop
dec
and
mov
sti
rcrb
mov
dec
in
cltd
mov
in
sbbl
testl
lahf
cmpl
mov
mov
mov
je
dec
mov
call
add
je
dec
cmc
jno
mov
je
pop
push
fcmovnu
divl
dec
xor
mov
rclb
fdivrs
dec
shl
xchg
pop
sar
decb
adc
lock
repz
arpl
mov
pop
dec
mov
cwtl
cmp
pop
sti
rcrb
je
pop
dec
xorb
sub
divl
dec
and
dec
jmp
sti
in
es
testl
shl
aas
dec
shll
mov
divl
dec
mov
mov
loop
idivl
out
mov
mov
movsl
fldenv
mov
dec
js
mov
shlb
sarb
dec
mov
mov
int3
cmp
or
je
dec
lea
mov
mov
scas
mov
mov
je
pop
dec
or
mov
jp
cs
leave
mov
mov
into
popa
mov
dec
shll
mov
mov
and
xchg
pop
dec
pop
cltd
mov
shll
mov
xchg
and
mov
scas
divl
testl
inc
insl
pop
push
fdivrs
dec
shll
lods
dec
rcrb
mov
dec
sub
je
pop
dec
ljmp
pop
push
cmp
aas
dec
shll
cltd
xor
clc
add
sahf
pop
out
divl
inc
lea
addb
pop
sarb
pop
enter
pop
lea
sbb
fdivrs
dec
shl
xchg
pop
dec
popa
lea
in
xchg
pop
sti
dec
jae
mov
shll
mov
xchg
pop
dec
stos
jge
mov
arpl
fdivrs
dec
rcl
repz
add
push
mov
mov
xchg
pop
mov
fimuls
cltd
mov
je
pop
sarb
pop
dec
adc
mov
sbb
push
insl
testl
enter
dec
shl
inc
xor
call
dec
lcall
jmp
je
pop
dec
rcrb
inc
cmp
and
pop
dec
pop
lods
mov
dec
xor
mov
pop
fdivrs
dec
es
mov
mov
cs
pop
mov
xchg
mov
inc
xchg
push
je
pop
ror
loop
and
xchg
dec
pop
push
mov
push
movsb
push
cmp
aas
dec
shll
rcrb
jle
mov
testl
push
fidivrs
xchg
pop
divl
jb
dec
push
and
aad
aas
dec
rcll
sti
testl
popa
pop
add
xor
pop
adc
dec
sbb
jne
lods
cltd
mov
fisttpl
jmp
adc
dec
shl
xchg
pop
dec
adc
and
divl
sbb
je
notb
aas
dec
shl
out
mov
or
push
fdivrs
dec
rorl
mov
mov
pop
shrb
into
data16
sti
fdivrs
dec
shl
xchg
pop
dec
insb
jno
mov
xchg
sbb
divl
out
divl
je
mov
sbb
mov
fdivp
je
pop
dec
fsubrs
out
mov
inc
mov
dec
movaps
scas
test
aas
dec
shl
xchg
pop
rclb
dec
out
mov
fdivrs
dec
shl
xchg
dec
fisubl
mov
sub
arpl
aas
dec
rorl
mov
pop
dec
cld
xchg
mov
mov
mov
pop
dec
cmpsb
dec
mov
insl
js
pop
divl
xchg
jbe
scas
xor
divl
loop
out
iret
testl
loopne
lock
mov
je
pop
dec
cmp
dec
xorb
mov
add
imul
cmp
mov
mov
dec
rcll
dec
xchg
mov
jnp
jg
aas
dec
shll
fisttps
divl
sub
rolb
dec
shll
inc
mov
pop
divl
divl
dec
jno
mov
movsl
clc
arpl
fdivrs
dec
shll
je
dec
ja
mov
pcmpeqb
mov
sub
mov
push
mov
divl
cmp
lret
test
xchg
pop
enter
dec
jmp
mov
incb
sti
rcrb
divl
dec
sub
loope
ss
aas
dec
rcll
aad
mov
cmp
or
aas
dec
shl
xchg
pop
dec
sub
push
int
je
pop
push
mov
dec
es
mov
or
aas
dec
shl
push
cltd
mov
sbb
divl
shl
dec
sbb
jno
mov
je
pop
mov
fimuls
mov
mov
mov
pop
aas
sar
jle
mov
testl
jns
xchg
popw
call
leave
loop
popf
jno
mov
mov
scas
mov
push
divl
dec
mov
mov
jnp
mov
pop
out
testl
pushf
ds
inc
fidivl
enter
divl
cmp
mov
ja
jne
jb
dec
test
imul
xchg
pop
mov
xchg
dec
clc
push
mov
roll
je
pop
divl
pop
sub
pop
imul
dec
rcll
mov
mov
fistpll
mov
mov
je
pop
testl
std
sbb
dec
cmp
mov
add
popa
mov
pop
pop
dec
mov
pop
loope
aas
dec
shll
xor
mov
aas
dec
shll
imul
xchg
pop
rcrb
pop
dec
mov
inc
jl
js
divl
divl
dec
push
lea
cmp
divl
divl
pop
xor
cmp
js
pop
lea
sub
rcr
adc
not
jmp
or
sub
out
sar
cmp
jne
cmp
dec
mov
cmp
jne
cltd
mov
mov
rclb
lret
sbb
out
testb
icebp
or
scas
push
add
pop
cmc
cs
xor
shl
rol
sbb
test
jmp
push
or
add
adc
shl
call
sub
ret
and
cmp
mov
xor
cmp
jmp
in
jne
icebp
ror
adc
xor
not
jmp
lods
pop
push
lahf
rorl
shl
adc
cmp
jne
cltd
mov
lea
shr
ret
shl
call
es
jle
andb
rcl
shl
jmp
cmc
ret
jl
fs
rcr
shl
rol
cmp
jne
es
jp
or
sar
neg
xor
shl
add
cmp
jne
in
stos
leave
jno
int
ror
and
rcl
sbb
call
clc
fadds
add
xchg
mov
mov
neg
cmp
jne
mov
sbb
inc
and
add
rcr
cmp
jne
out
jge
lea
shl
shr
jmp
int3
xor
lret
add
pusha
lea
sbb
adc
adc
cmp
jne
loope
and
call
add
sub
and
sar
jmp
jmp
fs
add
push
shl
sbb
cmp
jne
xor
jmp
hlt
shr
sar
cmp
jne
inc
sti
orb
push
jmp
sbb
and
sub
shr
cmp
jne
neg
xor
repnz
inc
test
sbb
call
out
xchg
gs
shl
shl
or
and
jmp
repz
les
iret
int
sti
neg
shl
sub
jmp
sbb
hlt
adc
sar
rcr
test
jmp
mov
sbb
fmuls
neg
jmp
mov
add
fadds
arpl
lret
sbb
mov
jne
push
push
mov
adc
rcl
sub
sar
call
xor
pop
sbb
add
mov
adc
xor
cmp
jne
ret
jnp
add
lea
rol
mov
and
inc
cmp
jne
adc
push
subb
xor
xlat
sar
cmp
jne
clc
mov
stc
mov
rcr
mov
not
mov
cmp
jne
inc
fwait
add
fsubs
fdiv
ret
pop
insb
mov
xor
repz
fdivr
sub
jecxz
not
test
test
call
out
push
sbb
xor
mov
iret
xor
out
adc
rcl
cmp
jne
push
add
movl
test
ror
sub
cmp
jne
cmp
lds
fcmovnb
stc
or
fmull
shl
jmp
ds
pusha
stos
push
lea
sub
neg
rcl
jmp
int
mov
loopne
fs
ror
inc
jmp
pop
mov
addl
rcr
or
shr
ror
jmp
push
outsl
pop
scas
test
ror
or
and
dec
cmp
jne
movsl
jns
lea
sub
rol
rol
jmp
cmpsl
out
hlt
popf
rcl
and
shr
cmp
jne
sub
call
and
rol
mov
rcr
cmp
jne
mov
mov
ror
rcr
call
int3
fisubl
add
shl
jmp
xchg
out
in
pop
and
add
shr
or
dec
ror
call
or
pop
testb
fs
adc
mov
and
jmp
lea
lea
ror
cmp
add
cmp
jne
test
or
sub
and
cmp
jne
orl
jg
lea
rcl
jmp
sub
neg
shl
cmp
jne
xor
sti
xlat
test
rcl
add
and
not
dec
call
gs
int3
fildll
cld
inc
jmp
mov
lea
sar
test
inc
lea
dec
and
ror
cmp
jne
sbb
inc
ror
adc
ror
and
call
insb
jne
or
and
rol
ror
dec
sar
mov
cmp
jne
or
dec
or
xor
shl
and
test
call
adc
and
ror
add
adc
dec
call
inc
movsl
mov
fld
fcoms
add
jmp
inc
ja
cmp
std
sbb
call
andb
and
cmp
jne
pushf
test
mov
dec
shl
xor
jmp
push
daa
in
jno
sbb
rol
rcr
adc
shl
cmp
jne
mov
out
les
and
into
icebp
ret
orb
out
ja
add
roll
jne
gs
mov
neg
ror
adc
sar
jmp
aam
xlat
dec
lea
shl
adc
cmp
jne
ja
inc
jno
fs
adc
sar
and
cmp
jne
mov
sar
or
jmp
pop
rolb
sar
add
not
call
push
cmpsb
xchg
outsb
and
aad
rcl
lock
stos
xchg
loopne
cmp
jne
in
int3
lea
ror
xor
shr
dec
shl
cmp
jne
outsl
ss
cs
lea
adc
neg
sar
xor
call
clc
loop
or
std
rcl
adc
adc
ror
call
cmp
fld
stc
sbb
fiadds
xlat
shl
call
lcall
and
mov
mov
ror
sbb
and
cmp
jne
pop
cmpsl
mov
add
int
shlb
lret
icebp
call
xchg
loope
imul
icebp
adc
dec
jbe
neg
rol
not
jmp
push
cmp
shr
xor
sbb
sub
dec
call
mov
and
adc
mov
adc
or
jmp
hlt
pop
jbe
cmp
cmp
jne
adc
shl
call
std
inc
mov
in
adc
sti
call
jns
dec
and
and
rol
adc
xor
test
ror
cmp
jne
xlat
adcl
ret
test
inc
ror
jmp
lock
and
sbb
adc
or
jmp
inc
arpl
adc
fdivp
fldl2t
xor
add
xchg
and
sar
dec
and
jmp
lahf
or
fs
shl
xor
not
shl
call
stos
mov
repz
test
mov
jmp
jne
lds
cmp
lea
and
rcr
rcr
jmp
pop
outsb
loop
cmp
shl
rol
add
test
or
cmp
jne
push
xor
cmc
shr
rcr
shl
rcl
cmp
jne
push
cmp
sub
adc
rcl
call
adc
repz
add
shl
rol
xor
cmp
jne
popf
sbb
fildl
test
inc
shr
sbb
cmp
jne
sbb
mov
ret
rcr
shl
cmp
call
imul
jmp
pop
scas
cmpsb
adc
shl
call
sti
ljmp
xor
fstl
adc
ror
ror
sbb
jmp
and
pop
loop
and
or
jmp
and
vmread
mov
rcr
sar
jmp
dec
nop
mov
sar
rcr
ret
shl
sar
jmp
dec
sbb
mov
adc
into
rcr
cmp
jne
inc
jo
shlb
icebp
adc
xor
mov
jmp
adc
data16
dec
ror
sar
shl
rcl
call
scas
push
stc
test
rcl
xor
cmp
jne
in
adc
repnz
and
adc
jmp
mov
add
neg
shl
call
pop
data16
push
lea
sar
sub
sub
cmp
jne
in
inc
dec
xor
not
inc
jmp
pushf
outsl
and
neg
call
adc
inc
rcr
shr
rol
inc
cmp
jne
int3
loopne
fwait
cmp
lea
ror
shr
cmp
jne
cwtl
data16
fld
icebp
add
loopne
adc
call
stos
and
loop
cmp
sar
cmp
jne
pop
push
mov
rcll
shr
add
shr
add
cmp
cmp
jne
sbb
lods
pop
cmc
or
lret
dec
call
mov
jbe
fs
rol
adc
and
mov
call
fcoml
lea
sub
call
je
adc
lea
rcl
rol
shr
ror
mov
cmp
jne
inc
ret
mov
and
not
and
cmp
jne
jmp
repz
shlb
add
and
ror
shl
cmp
jne
push
clc
mov
jmp
jecxz
cmp
sti
call
lcall
call
cmc
negb
sbb
sbb
sub
xor
ror
call
xor
lea
neg
not
sar
call
stos
push
sub
push
xor
add
sar
jmp
inc
and
call
pop
push
ds
shr
shl
cmp
jne
bound
or
mov
fcmovbe
cli
jmp
push
sar
shl
and
or
jmp
jb
adc
std
or
rcr
dec
mov
shr
cmp
jne
popa
dec
sbb
dec
addr16
sub
neg
call
dec
xchg
xchg
in
scas
pop
sar
ror
rol
inc
sub
rol
jmp
fnstenv
adc
shl
sub
call
das
or
test
sar
sbb
shl
jmp
out
push
ret
fs
add
mov
inc
shr
add
cmp
jne
fadd
nop
xchg
out
adc
sub
cmp
jne
mov
dec
sbb
shr
adc
shl
mov
jmp
sbb
cwtl
not
ror
adc
add
not
mov
call
rorb
push
adc
rcl
shr
cmp
jne
mov
sbb
shl
or
neg
jmp
insb
xor
add
or
add
shr
rcr
ror
cmp
jne
mov
aaa
lea
mov
not
jmp
sub
add
sbb
and
jmp
mov
inc
xchg
bound
loop
out
xor
testl
mov
call
mov
lea
shr
and
not
cmp
jne
js
mov
pop
shl
call
fwait
pop
outsb
mov
shl
shl
mov
mov
cmp
jne
inc
movsb
std
adc
sbb
int
shl
call
and
sbb
ror
rcr
rcr
sbb
sub
call
outsb
jle
adc
repz
xor
or
inc
ror
jmp
insb
xchg
jmp
sub
sar
sbb
or
call
stos
push
sbb
ret
sbb
out
adc
cmp
jne
cmp
sbb
and
sub
cmp
jne
and
aaa
rcl
rcr
shl
mov
rol
cmp
jne
ret
sub
stos
cmc
lea
shl
shl
rcl
cmp
jne
incl
pushf
shl
test
add
xor
rol
jmp
xchg
adc
mov
sub
jmp
cmpl
data16
lcall
adc
jmp
add
and
not
rcr
test
ror
add
rcl
cmp
jne
imul
lea
cmpw
je
jmp
outsl
and
cmpl
mov
ror
rcl
not
adc
jmp
pop
cli
dec
xchg
out
addr16
rol
rol
call
movsb
mov
repz
ret
push
rcl
sub
jmp
cmpsl
adc
in
sti
cld
mov
shlb
iret
adc
ror
or
shl
call
jp
fs
shr
rol
sar
cmp
jne
pop
dec
lds
xor
fistpll
test
jmp
lret
jecxz
lea
xor
shr
shr
dec
call
ds
jp
push
sar
and
rcl
and
dec
call
ficomps
