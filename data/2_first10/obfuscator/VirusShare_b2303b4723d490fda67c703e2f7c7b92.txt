mov
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
mov
pusha
push
mov
sub
push
push
push
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
jb
add
mov
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
xor
pop
push
mov
adcl
mov
mov
bswap
pushl
pop
shr
mov
cmp
jb
cmp
ja
pop
jmp
incl
mov
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
in
push
mov
push
mov
push
mov
push
mov
call
push
pop
mov
mov
mov
xor
dec
and
mov
mov
sub
sub
push
pop
xor
sub
or
adc
add
mov
pushl
sub
sub
pop
bswap
add
cmp
jne
xor
push
mov
call
sub
ret
add
mov
push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
add
add
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
add
add
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
add
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
push
push
push
call
add
pop
sub
mov
add
ret
add
add
add
mov
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
pushl
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
in
fcmove
stc
cmp
movsl
pop
push
push
or
push
in
mov
int
adc
enter
lock
daa
and
aad
mov
xchg
push
adc
xchg
lock
ret
cmp
lahf
ja
rclb
sub
pusha
inc
and
mov
xlat
in
test
xchg
subb
sti
jl
add
push
ss
mov
js
pusha
jbe
fwait
mov
mov
mov
xor
decb
pop
push
sub
out
jne
sub
aam
xchg
notb
xchg
shll
cwtl
mov
mov
sarb
repz
insl
or
mov
fs
add
test
add
jo
adc
jl
adc
pop
lahf
mov
adc
mov
sub
ret
and
xchg
sub
push
inc
mov
inc
inc
push
out
scas
mov
out
push
popa
outsl
inc
mov
xor
pop
mov
sbb
mov
dec
xorl
pop
ret
xchg
adc
adc
sub
jbe
inc
or
mov
incl
loopne
lock
add
cmpsb
enter
aad
in
std
and
imul
out
mov
xchg
int3
push
jp
mov
jge
mov
mov
addb
xchg
call
sahf
push
mov
je
xchg
fisubl
int
sbb
fwait
mov
das
aaa
cwtl
mov
sbb
popf
outsb
jae
fidivrs
aaa
icebp
cltd
xchg
sbb
cmp
mov
daa
fildll
and
pop
and
fildll
mov
sbb
sub
loope
bound
jae
or
shl
jno
push
les
sub
xchg
jl
js
insb
lahf
je
push
pop
and
in
ss
addr16
or
dec
add
cmp
pusha
ljmp
jmp
cmp
sbb
shrl
jle
lahf
sub
inc
fstl
adc
shlb
frstor
mov
fst
pop
jmp
enter
getsec
out
gs
fsubr
imul
aad
outsl
inc
cmp
adc
pop
mov
lahf
fidivs
mov
cmp
dec
cmp
mov
jmp
cli
push
push
lcall
jns
jne
fndisi(8087
and
xor
add
or
popa
push
push
mov
insl
incb
cmp
les
adc
dec
shl
sub
pushf
mov
xchg
push
jns
shl
fidivs
rclb
xchg
cmp
fwait
and
sbb
mov
pushf
in
out
xor
adc
adc
xor
adc
lret
lods
out
adc
hlt
xchg
push
scas
jmp
xchg
lods
jae
add
push
jns
lods
popa
andb
jecxz
les
mov
pop
mov
pop
xchg
mov
xchg
cmpsb
sbb
cmc
xor
dec
hlt
pmulhuw
lock
scas
pop
inc
mov
ret
push
and
and
dec
mov
mov
inc
mov
aaa
iret
dec
add
stc
dec
mov
iret
cld
pop
mov
outsl
nop
and
pop
pop
ljmp
push
fs
sbb
insb
repz
jmp
adc
inc
ret
and
cmc
dec
mov
test
jnp
dec
imul
xchg
imul
push
repz
mov
pop
repz
mov
jae
push
scas
fisttps
cmp
sbb
mulb
pop
data16
cmc
mov
pusha
lcall
sub
push
rolb
cli
xchg
hlt
cld
add
incl
add
pop
cmp
popa
stos
cmpsl
pop
and
popf
popa
and
nop
out
fistpl
xor
adc
adc
or
pmuludq
imul
jge
ljmp
push
test
push
lock
movsl
psubw
pop
fwait
fs
lock
adc
ds
jno
cltd
jbe
sarl
adc
outsl
jo
ss
xchg
js
jno
push
in
adc
pop
sbb
popa
fsub
dec
mov
xor
lret
push
rolb
shrl
sbb
std
add
mov
add
lcall
lods
jp
xor
xor
sbb
jmp
fsubs
mov
or
inc
jecxz
mov
jnp
fsubl
out
inc
ret
jp
or
jnp
or
pop
mov
inc
js
fs
xor
mov
inc
aad
jb
adc
add
cli
and
xchg
dec
push
xor
and
mov
mov
daa
mov
adc
fwait
or
pop
add
mov
cmp
ret
clc
xor
cmp
out
aad
adc
push
in
repz
aam
nop
xbegin
or
negl
mov
stc
cmpsl
das
leave
loope
inc
or
lcall
imul
std
outsl
cmp
outsb
cmpsl
sbb
mov
adc
mov
stos
xchg
aam
push
cli
pop
cld
xor
fsubs
add
fwait
ds
das
es
cwtl
sub
sbb
mov
imul
xor
rolb
out
movsb
mov
sbb
pop
call
outsl
call
in
call
add
ja
push
lea
fbstp
dec
and
mov
lods
push
enter
in
adc
lock
dec
notb
mov
in
cmpl
mov
notl
mov
pushf
inc
arpl
pop
inc
mov
ss
movsb
pop
in
rolb
inc
aam
ja
jg
mov
in
fistpl
daa
dec
mov
dec
and
adc
sbb
xchg
ljmp
or
xchg
imul
iret
repnz
xchg
sbb
loop
gs
jns
dec
xchg
xor
or
call
mov
push
xor
pop
jl
mov
shl
xor
fists
mov
inc
rcr
inc
pusha
ret
enter
loop
clts
adc
inc
sub
pusha
jp
dec
sarb
push
loope
sub
push
loope
sub
push
loope
sub
push
loope
sub
cmpsb
pop
lds
mov
and
mov
pop
int3
lods
xchg
pop
mov
jns
push
ficomps
aaa
mov
add
jno
sub
.byte
