adc
scas
and
arpl
mov
jb
das
xor
cmp
out
lahf
or
enter
or
add
out
test
repnz
int
and
xor
test
or
jnp
push
stos
clc
pop
lcall
sub
gs
repz
xor
jno
pop
cmc
lock
aam
add
in
sbb
xchg
push
add
push
pop
jae
or
test
fnstenv
fistl
mov
xor
ds
xor
inc
inc
and
sub
or
or
fsubrs
scas
push
dec
js
jge
jg
xchg
add
popf
in
sub
or
stc
int
ja
rcl
sti
das
gs
xor
mulb
push
pushf
sub
roll
hlt
adc
pop
aad
push
dec
pop
mov
dec
and
mov
je
les
insb
aam
inc
and
mov
js
pushl
pushf
mov
pusha
lea
jmp
ja,pt
cmpsl
inc
xor
out
mov
outsb
sub
sarl
pushf
fsubrp
enter
pusha
inc
mov
xor
pop
jne
push
shlb
fwait
pusha
or
fnstsw
jo
cmp
ret
insb
cmp
aam
sub
cmp
pop
inc
fdivrs
lret
imul
cmpsb
dec
fnstenv
ficoml
les
fisubl
or
and
fldlg2
sbb
dec
sbb
in
cmpsb
pop
and
mov
pop
mov
ja
hlt
pusha
icebp
repnz
inc
jmp
out
inc
cmp
mov
insb
ja
hlt
mov
mov
xor
or
imul
repnz
jg
xor
adc
push
push
sbb
add
mov
push
fsubrs
fsubl
sbb
popf
dec
pop
xchg
jnp
int
jns
jno
push
pop
fimull
pop
dec
fcoms
and
in
sbb
inc
gs
outsl
fs
gs
imul
add
dec
lret
pushf
pusha
mov
call
cmp
add
cmc
pusha
cmp
call
xor
test
sub
movb
bt
cmp
neg
push
test
cmp
pop
not
lahf
lea
lahf
movzbw
not
mov
call
jmp
mov
pushf
rep
pop
not
not
mov
pushf
movb
pusha
lea
jmp
test
bt
mov
mov
jmp
push
pusha
lea
call
call
cmp
pushf
add
pusha
call
lea
call
call
sub
dec
pop
inc
clc
push
cmp
inc
add
fdiv
cld
push
fucomip
mov
push
leave
lcall
mov
mov
cmp
cmp
mov
mov
push
add
ss
orb
imul
lds
jecxz
je
ljmp
test
ljmp
jno
push
xchg
and
in
lock
mov
jnp
mov
push
test
test
out
insb
xor
int3
push
mov
sbb
leave
negb
test
inc
cmpsb
pushf
dec
pop
mov
bound
cmp
add
test
xor
or
stos
mov
xchg
jl
out
cmp
out
cmpsb
gs
inc
or
inc
outsl
jmp
andb
pop
fisubs
jbe
jnp
lock
mov
fistl
int
xor
dec
mov
and
out
adc
sar
scas
mov
call
or
jns
rclb
jle
push
fsubs
pop
cmpsl
sub
sub
lods
decb
mov
adc
push
pushf
lods
xlat
jg
pop
sub
aaa
insb
clc
int
mov
cltd
push
lcall
mov
les
mov
pop
loopne
jg
add
ds
icebp
out
cs
push
rcll
pop
sar
xor
out
push
lods
xor
cmp
cmp
add
sub
sahf
outsl
sbb
mov
js
lea
inc
out
pop
out
xchg
call
dec
andl
aad
mov
jge
sub
lea
sbb
lahf
fwait
xor
jmp
iret
push
xor
test
ja
outsl
cltd
mov
rolb
mov
mov
cmp
ret
jecxz
push
adc
aad
fdivrl
xchg
add
push
sti
and
xor
cmp
ja
or
and
testb
push
aam
faddl
dec
int
mov
mov
cli
lea
pushf
jmp
jle
cmpsb
sti
iret
stos
cmpsb
repnz
aaa
pop
sub
mov
and
lods
pop
or
test
adcb
push
decb
or
mov
fisubs
pop
lea
lcall
mov
mov
cli
push
xor
nop
xor
add
and
aaa
mov
mov
lcall
mov
xchg
in
adc
pop
cmp
cmpsl
ja
std
fwait
mov
add
mov
ret
cld
or
dec
or
les
es
in
inc
mov
data16
jnp
rolb
pop
notb
iret
sahf
mov
sub
repnz
int3
fstp
enter
xor
shl
ljmp
in
push
out
adc
pop
out
mov
push
roll
and
dec
xchg
dec
movsb
jbe
add
loop
sub
xchg
pop
pop
jmp
xor
cmp
mov
jle
push
lods
pushf
sbb
dec
aas
repnz
fwait
sub
or
dec
stos
andl
out
outsb
mov
pop
mov
push
jmp
dec
lods
mov
xchg
scas
mov
imul
sbb
mov
and
xchg
mov
add
sahf
and
lock
out
lods
jmp
int3
cmp
arpl
sbb
insb
sbb
or
test
xor
fucomi
pop
lock
gs
imul
push
mov
mov
std
sub
lds
add
fcmovnbe
dec
sub
sub
mov
imul
test
rolb
xor
push
lock
xor
fisttpl
adc
jmp
popf
and
adc
or
sub
xchg
jnp
mov
jecxz
shl
outsl
mov
inc
xor
adcb
fwait
stc
mov
cmpsb
jp
pop
xor
jbe
pop
pop
ljmp
xchg
divb
push
pop
leave
mov
dec
cmpsl
stos
pop
or
cmp
add
dec
aaa
movsb
xchg
add
mov
js
addr16
xchg
jg
or
icebp
dec
punpckhbw
fimull
scas
dec
int3
and
idivl
adc
inc
loop
and
sub
rcrb
rorl
movl
loope
xchg
cmp
mov
pop
mov
and
repnz
or
and
lea
ja
cmp
cmc
stc
pushf
sub
cmc
cmc
add
add
push
pusha
pushl
lea
jmp
jne
mov
stos
out
cmp
fld
outsb
inc
out
stos
bound
mov
xor
inc
mov
jge
mov
pop
cmpl
aam
shlb
je
jge
mov
inc
out
icebp
xor
mov
fsubrp
pop
cli
pop
out
push
test
loope
stos
out
pushl
imul
jno
aam
mov
std
push
testl
es
rolb
loope
and
repnz
inc
add
push
or
pusha
xchg
xor
test
addr16
stos
or
adc
lock
out
cmpb
daa
sbb
jle
inc
ljmp
jle
jno
je
imul
fpatan
mov
pop
flds
ja
imul
cs
pop
popf
imul
movsb
add
add
add
cmp
add
lret
jg
sub
pop
shlb
add
jb
add
lahf
sub
add
add
fwait
jmp
lret
mov
inc
pop
enter
jbe
add
push
int
add
mov
ss
aas
fbstp
push
mov
mov
divl
aas
imul
movsb
pop
lock
jp
rolb
mov
xchg
das
jecxz
je
and
xor
inc
fcmovb
inc
imul
xlat
ds
es
lods
sbb
adc
xor
and
hlt
and
mov
add
shrd
shl
shl
mov
neg
setge
mov
call
dec
mov
jge
inc
mov
mov
sub
xchg
arpl
lea
jns
in
test
mov
bound
fdivr
cli
pop
pusha
inc
sbb
cmp
test
bound
mov
pusha
sbb
pop
out
jae
cmp
pop
fcomps
add
stos
out
insb
mov
test
push
jecxz
mov
iret
aas
pop
fsubrs
sub
mov
jb
mov
adc
xchg
adc
in
dec
in
pop
cli
into
push
test
movsb
adc
sbb
ja
ret
hlt
mov
and
jg
cmp
lea
jb
stc
clc
cmp
push
jmp
call
xor
mov
loop
test
sub
rorb
testl
imul
ret
ret
mov
sbb
sub
imul
mov
les
mov
sarb
rcrl
mov
orl
pop
clc
es
mov
insb
cmp
cs
cmpsl
sub
and
cmc
insl
or
int3
inc
call
mov
daa
jmp
cmp
mov
xor
inc
adc
pop
mov
mov
cmpsb
mov
mov
xchg
sbbl
mov
lret
cmp
popf
lock
mov
xchg
ss
in
imulb
in
xor
jne
add
sub
jbe
jno
jle
ljmp
imul
sbb
fprem1
jns
dec
push
sti
es
cmc
push
mov
inc
imulb
push
cwtl
addl
ja
insl
popa
pop
jle
jmp
push
pop
xchg
mov
mov
ja
insl
pop
shr
enter
ja
call
sub
cmp
fs
ret
lahf
push
sbb
in
cli
dec
aam
inc
je
add
mov
aad
pop
in
jg
int
dec
lret
icebp
rorb
repnz
aas
mov
sub
je
fdecstp
insb
or
or
add
aad
add
cmp
stc
clc
test
push
pushf
pushf
lea
jne
pushf
jmp
push
inc
lea
jmp
push
mov
lea
ja
pushf
jmp
sbb
xchg
popa
or
lcall
jl
hlt
lods
jg
or
xor
addl
les
mov
repnz
loope
iret
xchg
adc
or
pop
add
cs
or
push
hlt
lea
mov
push
imul
sbb
sbb
ret
mov
test
fs
data16
jge
xchg
jg
and
testl
lret
call
mov
call
clc
cmp
add
call
call
call
iret
test
popf
sub
push
mull
jecxz
aas
call
test
lea
cmpsb
mov
mov
repz
test
dec
stos
mov
mov
xor
inc
fs
repz
jo
xchg
xor
mov
imul
dec
push
push
iret
pop
mov
into
push
dec
mov
mov
mov
add
rcrl
xchg
into
dec
pop
arpl
maxps
shrb
push
fwait
sub
and
neg
jle
and
mov
loope
pop
jae
mov
frstor
pop
pop
iret
cmp
ja
aam
push
push
inc
and
filds
es
pop
ja
shll
sub
loope
dec
mov
or
pop
nop
shlb
iret
cmp
aas
push
fstpl
pop
int
mov
clc
or
jns
pop
cli
incl
ss
jae
ljmp
mov
imul
mov
mov
ljmp
incb
inc
xor
jl
dec
test
lret
push
test
imul
mov
sbb
pop
push
in
leave
jmp
ret
mov
sarl
mov
insb
mul
pop
pusha
adc
repz
out
mov
outsb
sub
and
cli
mov
add
sub
int
outsb
jmp
clc
xchg
sbb
stc
call
loopne
scas
cld
push
lock
push
mov
jne
ljmp
dec
jmp
repnz
sti
fdivl
popf
inc
ret
gs
cmpsl
jno
add
push
mov
and
xchg
test
mov
lret
and
in
cmp
je
xchg
sbb
sahf
xlat
loope
arpl
mov
in
jmp
dec
jmp
fisttpll
lcall
loop
icebp
inc
test
gs
mov
mov
lcall
ja
popa
pop
adc
roll
push
out
sahf
xor
add
mov
cmpl
mov
adcb
xchg
fidivrs
add
jge
cmpb
add
pop
hlt
insb
fcomps
aas
and
stc
pop
fsubp
es
xlat
xchg
mov
jbe
inc
jle
rolb
dec
fisubrl
fyl2xp1
int
sti
cmp
cmc
addl
dec
dec
and
stc
aas
mov
xlat
xchg
mov
pop
daa
and
in
imul
adc
sub
fistps
pusha
mov
ds
sub
aas
loope
pop
xor
cmc
je
fwait
test
mov
jecxz
push
pop
xlat
aaa
sub
leave
mov
push
lods
adc
ret
or
sbb
pop
in
push
fistl
imul
or
negl
mov
cmp
cwtl
and
jp
xchg
adc
xchg
testl
imul
ret
dec
bound
into
fnstsw
and
cli
test
shll
and
ret
jmp
add
call
xchg
fwait
push
shlb
fisttps
inc
pmaxub
mov
cmp
add
mov
dec
jnp
jnp
aam
sub
or
pushf
testb
mov
dec
pop
sbb
sub
int3
mov
popa
lea
push
test
pop
das
into
pop
sbb
cmpsb
xor
dec
mov
mov
mov
jnp
push
mov
add
inc
out
mov
add
out
jge
and
sti
inc
loopne
mov
xchg
mov
add
lcall
xchg
pusha
sarl
int
cmp
inc
mov
cmp
mov
jecxz
sbb
lods
and
cmpl
and
mov
int
mov
xchg
sti
mov
iret
rclb
pop
jecxz
jl
and
sti
hlt
fabs
push
mov
mov
mov
stos
xchg
mov
ljmp
and
sti
mov
add
xor
ljmp
sub
frndint
loop
jl
aas
push
mov
pop
inc
pop
pop
cli
repnz
int3
fsubrs
cld
pop
mov
inc
lods
xchg
lock
mov
and
cld
mov
mov
xchg
in
movsl
testl
dec
loop
jecxz
and
cld
sub
push
cmp
stc
add
jmp
movl
pushl
pushl
lea
jmp
jmp
sbb
or
movsb
fcmovnu
jg
add
mov
imul
gs
outsl
std
mov
imul
sahf
scas
imul
stos
sets
cmc
cs
test
stos
ds
jecxz
fcoml
fadd
cmpsb
or
mov
aas
xor
imul
cmpsl
pop
fwait
lds
inc
stos
adc
ja
insb
loop
bnd
orb
sbb
frndint
sar
imull
or
add
cmc
cmp
cmc
add
pushf
lea
jmp
in
cmp
push
hlt
push
fistps
push
ss
scas
jne
add
mov
icebp
stos
xchg
jmp
sub
fdivrs
mov
or
xor
pushf
add
lcall
push
jmp
in
xchg
loop
sbb
and
add
lods
lcall
cs
cli
aaa
out
pop
loope
or
mov
aaa
loopne
xchg
jae
push
mov
sub
and
sbb
fscale
xor
xchg
mov
push
mov
mov
scas
test
frndint
jl
lods
inc
mov
mov
or
jle
mull
jo
pop
mov
dec
mov
outsb
int
out
sbb
jl
inc
lock
inc
sbb
pop
movsb
fs
adcl
inc
or
enter
int
and
cmp
outsl
xchg
frndint
movsb
and
jo
xor
in
shr
aad
mov
aas
mov
xor
push
mov
std
out
sbb
in
inc
aaa
ja
sub
add
dec
roll
mov
shll
mov
les
and
mov
hlt
sti
lods
in
lahf
adc
ss
add
xor
dec
jecxz
int
mov
sbb
subb
fiadds
test
adc
add
imul
dec
jge
icebp
je
pop
mov
out
repnz
jl
cwtl
push
sahf
or
push
test
and
std
subl
add
cmp
pushl
mov
pushf
pushf
lea
je
pushf
lea
jmp
movb
imul
pusha
call
rcrb
lret
mov
pop
add
cmpb
ret
test
stos
or
imul
push
mov
leave
lods
jl
lock
xor
cmp
aam
inc
xchg
sbb
in
inc
and
fs
test
mov
jl
cltd
and
sbb
mov
inc
and
mov
jns
int
mov
aad
jae
mov
imul
push
filds
inc
into
push
and
fcos
sbb
add
cmp
lea
jmp
adc
adc
es
pop
sbb
xchg
pop
negl
add
pop
and
or
aas
cmp
dec
nop
adc
mov
push
pop
sti
mov
mov
aam
pop
pop
and
mov
cmp
lahf
into
xor
test
inc
popf
cmp
pop
xchg
sbb
aad
sub
or
sub
bound
mov
out
cli
jl
pop
ds
rclb
in
js
xchg
sub
aaa
cmp
insb
ss
jbe
jne
test
out
jge
pop
vmwrite
out
lea
push
xchg
imul
jne
pop
scas
xor
mov
inc
out
or
cmp
es
jg
xchg
popa
loope
jnp
mov
push
in
ds
or
rolb
cmc
sbb
hlt
out
xor
push
test
xor
add
jmp
shlb
add
aad
xchg
pop
pop
mov
xchg
pop
into
push
jmp
sti
int3
sub
mov
mov
shrl
or
rorl
test
lcall
imul
fiaddl
cmp
nop
sbb
leave
pop
jb
rorb
push
cwtl
and
add
jo
lods
test
movsl
fdivrl
dec
adc
or
sbb
mov
pop
filds
xchg
pop
sub
inc
sbb
mov
je
fsubrl
imul
lea
push
out
mov
lret
testb
cmp
adcl
iret
std
adc
mov
out
call
inc
jae
inc
and
add
sti
add
add
scas
pop
lea
je
test
stc
clc
cmp
jl
push
pushf
lea
je
call
pusha
pushl
adc
mov
lea
call
jmp
loop
cmp
icebp
sub
fmuls
pop
mov
mov
inc
inc
ret
add
fs
mov
inc
loop
repnz
leave
loope
andb
dec
int
lds
jge
jne
ret
jmp
xchg
cmp
dec
ds
inc
xor
fnstcw
sahf
xor
dec
scas
xor
sub
pushf
sub
add
mov
call
mov
mov
mov
lea
jmp
lea
je
xchg
rcl
sbb
mov
xor
rcr
neg
add
dec
bsr
mov
test
test
push
mov
mov
movb
lea
je
dec
add
test
mov
jmp
cmp
in
int
imulb
pusha
sbb
pushf
push
pop
xchg
and
adc
popa
pop
out
cmc
fdiv
in
mov
pop
movsl
imul
cmpsb
pusha
out
movsb
jp
lahf
imulb
out
setp
add
call
iret
pushf
cld
push
dec
push
jbe
andb
or
daa
mov
fisttpll
or
dec
cmp
pop
adc
std
rorl
xor
pop
and
rolb
test
out
sti
aad
xchg
pop
pushf
test
push
mov
pushf
aad
jno
fiaddl
mov
sub
mov
jmp
popf
dec
out
imul
and
add
lret
enter
or
jle
or
mov
pop
sbb
out
mov
xchg
mov
je
test
in
mov
shrb
xor
outsl
outsl
imul
mov
call
clc
mov
loop
andb
add
mov
dec
mov
outsl
mov
xor
cmc
inc
leave
sub
inc
sub
test
add
ret
bound
shll
jnp
stos
and
hlt
popf
add
jp
mov
sub
gs
subl
movsl
scas
push
mov
outsl
or
hlt
xor
mov
or
aam
cli
push
mov
or
stc
inc
mov
bound
add
xor
pop
imul
sub
aam
jecxz
loope
and
add
leave
push
cmp
mov
or
lods
imul
sbb
fiaddl
arpl
ret
aad
inc
repz
fmull
andb
add
int3
int
nop
les
push
sub
lcall
mov
pop
daa
out
mov
add
lcall
push
pop
add
cltd
mov
movsl
pop
add
add
xor
jae
fiaddl
ret
mov
mov
and
cltd
dec
es
dec
add
pop
lcall
mov
repnz
adc
lock
lea
xor
and
pushf
out
pop
ficomps
push
cmp
fsubr
test
sub
aaa
popa
add
pusha
mov
lds
lret
xor
push
insl
arpl
cmc
test
push
fcmove
inc
push
sub
xor
out
add
pop
in
in
push
pop
call
and
add
add
add
ds
lea
jae
pusha
movl
movb
push
push
lea
jmp
push
inc
add
adc
and
push
in
out
ret
in
cwtl
hlt
jmp
or
mov
pop
push
outsl
cwtl
hlt
jmp
push
adc
push
or
xchg
fldl
push
mov
ljmp
leave
imul
cmc
gs
dec
adc
pop
jo
mov
jp
out
js
push
fcomps
and
add
push
sbb
dec
test
imull
xor
int
arpl
add
fstpl
loopne
daa
subl
jns
lahf
mov
das
add
adcl
xor
aad
sbb
or
cmpxchg
fcomps
and
jge
sahf
add
cmp
inc
adc
insl
popa
sbb
xchg
inc
xchg
and
xchg
call
pop
adcb
je
lahf
aas
sub
pushf
btr
btr
mov
neg
mov
xor
shr
sub
mov
mov
cmp
stc
cmp
clc
or
pusha
jmp
bt
add
pushf
push
mov
pushl
lea
jmp
not
and
inc
neg
mov
test
cmpb
pushf
mov
call
mov
shl
push
shrd
shr
bswap
push
or
push
cmp
and
push
xchg
adc
btr
shr
push
btr
mov
rol
cmc
bts
setne
mov
pushf
bsr
seta
mov
stc
cmp
bt
or
jmp
pop
sbb
or
fcomps
imul
pushf
clc
or
mov
enter
pop
pushf
sub
pushf
pop
sbb
pop
sub
test
sub
pushf
fsubrs
clc
dec
pushf
fsubrs
mov
pushf
insb
lret
mov
lcall
test
ljmp
or
jo
rorb
into
inc
insb
or
daa
aas
xchg
repz
rorb
dec
cmpsl
xor
aas
jb
mov
ds
cmp
movsb
or
cltd
cmc
xchg
push
or
add
imul
insl
push
rclb
js
out
lret
xor
lods
xor
ds
xor
nop
and
pop
mov
stos
add
fcoml
cld
mov
inc
adc
addl
jl
addl
inc
push
cmpsl
lahf
adc
mov
push
insb
xor
jg
mov
jnp
push
out
xor
dec
cmp
xchg
xchg
cli
add
incl
mov
mov
push
imul
xor
push
add
mov
not
inc
lret
cmp
push
lds
scas
aas
mov
push
and
or
movsl
faddl
fisttpll
dec
xchg
push
inc
out
lret
jb
in
mov
ds
or
sahf
xor
mov
stos
pop
adc
fbld
pop
int
sahf
xor
xchg
int
in
jge
pop
mov
jnp
push
push
ret
popa
inc
mov
mov
aas
adc
jecxz
imul
push
pop
and
add
out
gs
push
mov
and
or
scas
push
pop
mov
call
jl
jnp
popf
sbb
loop
pop
xchg
mov
or
pop
maxps
ss
push
xchg
push
push
inc
mov
das
and
adc
xor
ja
stos
jmp
add
xchg
repz
ret
xchg
push
sub
pop
mov
fsubp
scas
pop
inc
xchg
notl
test
push
jbe
mov
cld
or
roll
mov
push
sbb
or
inc
cmpsl
jge
gs
cmp
ret
testl
aas
sbb
or
shlb
mov
mov
dec
movl
and
or
mov
mov
xchg
aad
jmp
xor
fimull
bound
push
inc
lret
sub
mov
fmull
js
cld
lret
jmp
movsl
push
and
jne
and
or
aad
mov
mov
out
mov
lahf
movsl
cmp
fimull
lock
sub
jnp
dec
js
repz
scas
pop
push
lret
xchg
cmp
mov
adc
adc
dec
test
imul
into
mov
push
mov
jmp
int
out
lods
push
ds
insb
std
aad
push
aas
pop
adc
mov
adc
scas
repz
dec
in
dec
lods
mov
mov
subl
pusha
jns
scas
fptan
push
das
cli
push
pop
push
iret
inc
test
xchg
push
cltd
add
sbb
or
int3
scas
jmp
inc
mov
test
loope
aaa
pusha
loop
mov
mov
pop
and
xchg
ja
scas
loopne
sub
and
dec
gs
ja
mov
xor
jae
in
mov
shlb
lods
cmpsb
push
in
gs
dec
cltd
adc
lea
mov
mov
aam
fimull
int3
imul
ret
cmp
rcrb
push
pop
mov
inc
test
iret
jbe
pop
test
or
push
and
jmp
jbe
cmp
les
repz
inc
cwtl
outsb
pop
mov
aad
sub
cmp
adc
testb
lcall
push
adc
xor
movsb
ss
or
xchg
and
cmp
fimull
add
sub
push
mov
push
inc
pop
and
add
jae
push
lds
movsb
add
inc
lods
repnz
sti
push
rcrb
ret
dec
cld
dec
lods
repnz
sub
push
test
cmc
ljmp
rcrb
cwtl
pop
mov
xor
lods
mov
xchg
lods
sub
cmpsl
js
jbe
push
fs
inc
fs
jno
mov
sub
fxch
and
fimull
fidivrl
movw
call
mov
mov
fsubp
push
cltd
inc
adc
cmpsl
push
movsb
sti
cs
pop
push
stos
dec
sub
xorl
and
xor
add
or
adc
loopne
out
data16
jae
and
or
fbld
and
lods
lock
add
jl
jne
mov
add
fdivs
push
int
cmp
ret
loopne
dec
loopne
jb
bswap
mov
xchg
mov
pop
push
mov
insb
add
xchg
mov
mov
test
fwait
cmpsl
cld
in
sarl
pop
js
cmpsb
xchg
fwait
push
and
mov
lret
pop
sbb
jge
inc
test
aaa
arpl
pop
aam
imul
test
scas
repnz
sub
movsb
adc
and
pusha
mov
out
push
lret
sub
inc
push
xor
call
out
sbb
test
xor
inc
arpl
imul
addl
pop
dec
push
outsb
fistpll
push
stos
mov
popf
adc
or
push
movsb
push
lahf
daa
jnp
mov
mov
imul
xchg
enter
push
add
lea
jne
bswap
mov
bt
pushf
clc
add
pushf
stc
pushf
movzwl
lea
stc
shl
cmp
not
mov
jne
add
pushf
stc
cmp
mov
bt
test
pusha
call
pusha
lea
jb
pusha
pushf
pushl
ret
adc
nop
and
mov
xchg
push
sbb
fimull
enter
je
sarb
jns
out
xor
enter
insb
cmp
jecxz
jne
fsubr
sub
sub
sub
sub
push
jmp
repnz
mov
mov
addb
push
fisubl
adc
pop
sub
fimull
and
insl
or
test
adc
xchg
stc
lds
sahf
add
inc
cmp
dec
and
and
cmp
lret
mov
sti
fdivrl
fidivrl
mov
lods
lds
or
inc
mov
pop
inc
imul
mov
sbb
jno
or
pop
fbld
data16
fisubrl
jb
outsl
or
fimull
addr16
flds
aaa
in
dec
sbb
dec
sti
adc
cmp
xlat
test
sarb
bswap
jle
jnp
mov
cmc
xor
mov
push
lret
pop
xchg
jmp
jae
and
lock
sub
xchg
adc
cs
lods
push
push
and
add
icebp
ret
aas
mov
lahf
movsl
or
or
andl
pop
add
pop
ficompl
idivb
mov
lret
sbb
pushf
adc
daa
mov
xor
push
and
hlt
pop
lcall
movsl
xchg
mov
jecxz
dec
pop
fists
sub
xor
mov
fs
leave
outsb
cmp
cwtl
arpl
cmp
push
es
xchg
and
add
inc
pop
loop
mov
dec
outsb
loope
test
loopne
mov
and
bound
insb
cs
pop
iret
fs
mov
stc
xchg
cli
xchg
dec
pushf
incl
inc
dec
cltd
std
cltd
pop
mov
popa
xchg
insl
xlat
cmp
fimull
imul
addl
movsl
xor
or
push
mov
aas
ljmp
pop
mov
loopne
inc
stos
pop
sbb
adc
fimull
ds
fwait
mov
test
xchg
mov
ficoml
sbb
rclb
imul
mov
and
adc
cmp
pop
andb
sub
fsubl
pop
sub
outsb
or
cmp
adc
push
and
adc
mov
pop
add
dec
mov
enter
out
jmp
ficoml
pop
mov
cmp
add
pushf
push
mov
mov
fldl
ja
fisubl
or
in
adc
scas
adc
mov
sarl
scas
repz
cld
inc
inc
scas
pop
sbb
jecxz
jns
mov
mov
sub
fisubrl
jne
pop
add
and
in
sbb
jle
movsb
out
sbb
loopne
stc
test
xchg
pop
jnp
xchg
ficoml
dec
push
adc
cmp
pusha
push
jmp
jmp
hlt
insb
and
xchg
stc
xor
cmpsb
insl
adc
movsl
push
or
adc
or
stos
dec
dec
push
sbb
fwait
or
or
xchg
jae
jp
or
aas
adc
test
ljmp
test
test
and
and
adc
jle
loopne
stc
enter
shl
cmpsb
ja
xlat
mov
daa
cmc
mov
scas
lcall
pop
cs
and
test
add
pop
arpl
movl
lret
adc
and
addr16
inc
mov
mov
scas
lock
xor
or
gs
and
push
push
bnd
movb
push
push
test
outsb
in
out
jo
imul
ficoml
stos
xchg
incb
push
mov
dec
and
lahf
push
fldcw
mov
das
mov
jp
lods
enter
test
mov
adc
jp
jle
test
inc
xor
insb
mov
lahf
leave
cltd
int
xor
clc
popf
rcll
dec
jae
push
pop
cmp
adc
jg
xchg
sub
pop
sub
push
mov
dec
les
pop
lea
ficoml
bound
nop
ss
imul
movsl
pop
int3
mov
mov
push
sti
test
jb
xchg
sbb
int
ret
aas
or
push
and
push
sahf
sbb
ds
insl
test
imul
lods
pusha
js
lds
push
es
sbb
add
notb
in
pop
add
scas
cmp
dec
fdivrl
push
jl
movsb
adc
pop
cltd
or
and
adc
jbe
call
push
jbe
sbbl
cltd
std
rcll
loope
dec
adc
test
out
mov
cmp
lcall
rorb
jmp
sarl
jle
jns
or
repnz
sub
int
mov
and
add
sti
andl
xbegin
mov
fs
je
pop
add
stc
jne
pop
inc
outsb
inc
imul
dec
stos
das
mov
adc
insb
lock
ficoml
jmp
mov
cwtl
repz
sti
mov
xor
mov
outsl
aas
cmpsb
adc
ret
xchg
jae
jo
scas
mov
pop
add
icebp
test
fisttpll
sub
mov
iret
jae
fimull
je
jb
adc
ret
loopne
add
int3
inc
stos
inc
inc
lods
cs
push
sbb
cs
cmc
jae
mov
movsl
or
xchg
xlat
lock
rcl
add
xor
popf
cwtl
or
std
je
add
inc
aaa
ljmp
fistpll
loope
mov
xor
in
aad
and
adc
inc
and
adc
add
js
mov
sahf
cmp
je
cmp
fwait
push
hlt
ret
scas
dec
lods
and
adc
jecxz
xchg
sti
adc
sbb
stos
je
add
ja
and
adc
lahf
inc
test
adcl
insb
fsts
mov
aas
inc
push
and
adc
dec
fcmovne
dec
pusha
mov
add
mov
sub
adc
fwait
mov
loopne
sbb
cmc
fwait
addr16
fiadds
clc
stc
and
adc
mov
push
cmp
xor
add
push
inc
cmc
mov
sub
scas
and
adc
inc
inc
jmp
dec
int
ljmp
and
adc
and
sub
mov
xlat
imul
ss
repnz
loope
sub
inc
adc
jbe
ja
mov
push
and
xchg
pop
js
out
ja
mov
xor
xlat
pusha
shrb
jp
insl
xor
jb
fsts
or
vpminub
and
out
es
aam
pop
add
lret
addl
and
xchg
aam
mov
cmp
lret
xor
leave
inc
mov
dec
xor
add
xchg
aam
jb
pop
xlat
daa
mov
push
adc
xchg
inc
inc
lods
mov
jbe
push
xor
repz
cld
jp
jns
lcall
mov
dec
shl
jmp
loop
ficoml
jmp
and
scas
or
jg
frstor
ficoml
cmp
mov
cmc
popf
sti
mov
mov
ficoml
jecxz
cmp
jb
fs
or
xorl
dec
mov
or
jg
cmp
jl
pusha
and
adc
ret
cmp
sbb
add
mov
cmp
xor
and
push
and
pusha
xchg
loopne
add
xchg
add
dec
movsbl
icebp
shrb
inc
mov
cltd
test
or
stc
cmp
jmp
scas
and
inc
add
dec
mov
outsl
or
jle
mov
push
scas
add
repnz
add
add
xchg
mov
out
pop
mov
jmp
dec
or
push
ret
int
jecxz
and
push
movsl
iret
into
call
mov
cwtl
mov
rol
push
add
aas
mov
xor
push
mov
stc
add
shl
and
mov
pushf
cmc
push
stc
test
jmp
daa
pop
and
xchg
insb
push
inc
inc
adc
test
add
lods
mov
mov
in
dec
mov
cmc
sub
movsl
mov
leave
mov
in
hlt
sub
out
iret
movsb
cmp
fcomps
xor
iret
and
sub
pop
stc
xchg
mov
mov
shrl
add
xchg
sbb
imul
daa
push
and
and
mov
cld
xchg
sti
jl
imul
pop
bound
nop
jb
xchg
add
push
mov
mov
jo
xchg
push
jb
or
add
sub
adc
fdivrp
mov
push
mov
push
fs
or
mov
aad
mov
das
ljmp
dec
cmp
mov
outsb
adc
or
in
jne
je
test
xor
push
or
arpl
int3
dec
mov
into
insl
or
test
fdivr
push
lds
xor
out
clc
clc
push
cmp
pushf
jmp
js
add
cmp
add
lret
jg
sub
pop
shlb
add
jb
add
lahf
sub
add
add
movb
movzbw
push
movzbw
lea
push
jmp
call
jbe
jb
scas
push
jns
cmpsl
faddp
test
bswap
jl
adc
mov
imul
pop
mov
adc
pop
pop
cmp
xchg
adc
mov
fcompl
cs
mov
lods
loop
nop
int
leave
adc
mov
outsl
popa
je
roll
loop
mov
aaa
pusha
movsb
pop
cs
jge
mov
enter
or
popa
xchg
inc
dec
les
seto
jb
test
mov
aam
cld
jne
gs
xor
fs
insb
add
inc
and
adc
lea
jne
aad
bts
bt
xor
inc
btr
cmp
xor
mov
shr
cmc
rol
add
sub
pusha
mov
jmp
push
pusha
pusha
lea
jae
cmc
pushf
cmp
pushf
pushf
call
hlt
inc
std
ja
add
aaa
outsb
push
and
scas
insl
sub
test
and
mov
or
cmp
and
adc
fnop
jne
sub
xor
neg
test
pushl
iret
mov
je
pop
cwtl
adc
jge
clc
je
xchg
lods
mov
adc
or
outsb
test
ficomps
data16
shrb
xchg
popa
in
fisubl
insl
jle
imul
and
sbb
or
mov
hlt
push
test
enter
sarb
adc
nop
cmp
pop
ficoml
push
inc
rcr
into
xchg
and
or
es
pop
out
xchg
rcr
iret
in
inc
xchg
dec
cwtl
data16
xor
cmp
stos
shlb
ja
in
jno
inc
sti
adc
test
sbb
mov
in
pop
or
scas
and
jne
je
xor
fiaddl
xor
aas
sarb
mov
sub
and
sbb
lret
mov
and
in
fs
jae
nop
push
sub
mov
mov
stc
sub
xor
jg
push
incl
pop
or
jnp
stc
sub
push
in
data16
jmp
inc
lock
mull
ficompl
cmp
pop
push
mov
jmp
rolb
adc
sti
push
ret
push
mov
out
in
mov
mov
cmp
lds
sub
mov
lret
xchg
jg
test
popf
insb
mov
orb
lret
push
testb
or
jle
insl
rclb
imul
and
cmp
cmpsl
sub
lahf
data16
into
sbb
jmp
jecxz
sbb
lock
push
inc
mov
aaa
mov
fwait
and
and
sbb
iret
inc
in
push
aam
out
aas
icebp
in
fcmovnbe
outsb
in
push
je
jmp
sub
sbb
out
pushl
mov
push
xlat
ja
aas
mov
adc
neg
jmp
jmp
cmc
pop
sbb
das
rorl
cmc
mov
pop
fistl
negl
push
xchg
or
pop
mov
fsubp
cmp
or
mov
loop
mov
or
push
jg
push
fdivl
lods
mov
pushf
mov
or
add
dec
jo
lahf
adc
fstp
dec
fcomps
pop
int
fisubrl
pop
xlat
add
ficompl
out
stc
inc
jmp
push
movsl
pop
lahf
lahf
popa
rolb
sbb
nop
push
scas
cmp
pop
inc
rol
sbb
sbb
xchg
inc
add
add
push
cmp
push
in
sub
mov
sbb
andb
aam
or
push
scas
add
xor
outsl
arpl
jns
stos
fsubr
push
sbb
sbb
cmc
outsb
fildll
insb
repz
cld
pop
and
sbb
icebp
jno
mov
add
test
pusha
neg
bt
pushl
test
sub
call
cltd
in
add
inc
lods
lods
xchg
mov
inc
or
xchg
push
std
into
test
mov
fwait
inc
inc
xchg
or
outsb
call
cmp
inc
xchg
or
or
cmp
lods
repz
adc
imul
inc
int3
in
shlb
call
rclb
pop
or
push
push
rcrl
and
jns
add
add
outsl
negb
jne
pop
fisubrl
popa
fldt
sbb
add
add
add
add
add
add
shll
loopne
add
add
add
add
add
add
sahf
es
js
add
add
add
add
add
add
mov
add
pop
sbb
fwait
mov
imul
mov
sub
pop
pushf
insb
enter
imul
pushf
clc
or
mov
enter
pop
pushf
sub
pushf
pop
sbb
pop
sub
test
sub
pushf
fsubrs
clc
dec
pushf
fsubrs
mov
pushf
insb
lret
mov
faddl
push
mov
shll
jo
cmc
stos
or
cltd
aaa
sbb
or
adc
jmp
dec
int
push
cltd
aaa
sbb
or
xchg
cltd
jno
push
out
and
sub
inc
adc
cwtl
lods
mov
loope
xlat
insl
imul
mov
pop
out
cmpsl
dec
adc
pop
scas
mov
mov
or
jnp
test
and
sbb
lods
pop
leave
bound
loop
pop
jge
mov
insl
adc
movsb
imul
in
js
rorl
scas
mov
loope
xchg
aad
ss
xor
loopne
or
outsb
call
es
mov
inc
and
lcall
repnz
aad
fistpll
dec
and
scas
daa
xchg
insl
in
std
fs
jns
ficompl
sub
sti
call
fists
into
cltd
and
sbb
jo
mov
dec
mov
mov
sub
xchg
outsl
xor
fwait
pop
test
ja
lds
add
and
iret
in
rol
jp
repz
les
and
into
ret
inc
mov
lods
inc
cmp
jge
mov
jl
xchg
and
and
push
jecxz
push
lea
jne
jmp
pushf
jmp
jmp
call
jg
mov
mov
mov
idivl
jl
mov
dec
outsl
arpl
push
mov
inc
fbstp
insl
lret
sbb
dec
outsl
bound
shrb
adc
das
ja
mov
adcl
rclb
xchg
movsl
dec
sub
bound
add
push
inc
sub
cmpsb
out
push
mov
jno
mov
pop
imul
sub
sbbb
jl
adc
pusha
in
adc
popa
int3
push
lds
mov
subl
fmuls
jnp
rolb
test
cmp
mov
pop
xor
cli
movsl
pusha
push
sbb
les
sbb
xor
loopne
cmpsl
movsl
pusha
push
clc
xor
sbb
stos
jecxz
sbbb
cld
pop
xorb
shll
and
xor
xor
push
inc
mov
punpckhwd
push
sbb
cmpsl
fisubs
xchg
fists
push
hlt
inc
mov
pop
sub
fisubl
and
inc
adc
sbbl
xor
pusha
sub
mov
fucomp
out
dec
xchg
inc
dec
retw
mov
sarb
mov
test
loopne
ret
cmp
test
enter
cmpl
sub
pop
mov
mov
xor
lods
push
clc
push
aam
cmc
cltd
sub
jb
ss
in
aad
sbb
mov
jbe
cmp
mov
stos
or
mov
sbb
jg
xchg
xor
xchg
aas
pusha
scas
sub
mov
mov
icebp
das
in
lods
jp
sbb
mov
fldcw
pop
fldt
jmp
call
shll
fisubl
and
in
push
sbb
adc
xchg
xchg
dec
mov
and
and
lea
jmp
sub
mov
sbb
xorl
lret
mov
idivb
mov
cmpsl
mov
jo
mov
dec
or
insb
adc
inc
xor
add
push
repz
xlat
ds
and
addr16
cmpsl
mov
sbb
push
psubq
rcl
lret
es
mov
jp
mov
cmpsb
lret
cltd
push
sub
stos
xor
sub
test
jo
xor
fcom
and
and
sub
and
mov
lret
ret
ds
pop
mov
scas
jle
fisubl
jbe
mov
xor
lea
ja
jmp
xchg
loop
pop
cmp
or
js
fisubs
insb
sbb
filds
fnop
inc
add
repz
cwtl
dec
shll
loope
xchg
out
repnz
pop
fsubl
repz
bound
sub
inc
lret
or
insl
outsl
add
dec
imul
bound
cmp
testb
arpl
ficoml
mov
rorb
fsts
and
and
iret
inc
jmp
xlat
cmp
aas
xlat
push
loope
orl
cmp
jne
add
cli
sub
ja
sti
mov
dec
cmp
inc
ret
jg
xchg
sti
rcll
and
jno
xchg
dec
cmc
push
mov
sahf
cli
push
fs
jge
jns
jae
push
fsubl
and
and
lahf
in
pop
adc
push
jns
je
push
loope
pop
adc
fwait
pop
das
xchg
cld
pusha
test
xchg
int
icebp
loop
adc
aas
sbb
xchg
gs
insb
and
int
icebp
call
fwait
scas
mov
jne
xor
pusha
xor
out
pop
dec
aaa
fldl
cmp
add
pop
adc
cmp
xchg
add
in
in
sbb
movsl
cmc
mov
jns
adcb
cmc
lret
and
and
lods
sbb
in
cmpsl
mov
fwait
imul
iret
test
sub
push
adc
sub
mov
sbb
xor
nop
in
mov
pop
inc
add
int3
push
xchg
scas
ret
jg
dec
jb
jns
scas
ret
xchg
lods
inc
mov
jp
mov
in
xchg
mov
adc
push
movsl
and
pusha
and
and
cltd
pushl
pushf
mov
pushf
pushf
movw
pushl
lea
jmp
not
mov
lods
stc
stc
add
jmp
push
pushf
lea
je
call
cmp
pushf
push
lea
jae
bsf
inc
mov
shl
mov
shld
btc
mov
jmp
cld
push
and
cli
mov
popa
and
mov
lret
push
mov
stos
push
mov
cmp
mov
addb
sbb
shl
pop
fwait
shl
das
aas
in
shrb
add
pop
movsb
out
inc
call
xchg
cmp
scas
inc
mov
cmpsb
call
inc
clc
pop
mov
dec
mov
xchg
sub
cld
lock
mov
pop
jecxz
stos
aas
into
mov
cmpsb
adc
xor
pop
xor
fisubl
adc
mov
or
and
xor
mov
inc
mov
cmp
clc
xor
cmp
jmp
dec
mov
ret
mov
mov
mov
or
pop
rol
insb
pop
cmp
mov
cmp
jle
pop
sahf
daa
cmp
cmp
scas
pop
inc
cwtl
ss
ret
sbb
pusha
sub
mov
imul
inc
mov
pop
or
pop
jmp
imul
jb
xor
fisubl
outsb
sbb
add
test
sbb
push
pusha
lea
jmp
repnz
adc
mov
jb
sbb
movsb
dec
sti
mov
sub
mov
das
sahf
push
sbb
iret
ja
jmp
imul
and
xor
pop
movsl
push
ja
jmp
sub
jae
mov
ret
insb
or
or
jp,pt
ja
insb
jmp
and
and
sbb
pusha
lea
call
pushf
jmp
lea
je
stc
jmp
pop
lret
jbe
mov
arpl
ja
or
mov
out
pop
aad
ja
cmpsl
push
and
inc
inc
xchg
fsubs
push
stos
out
jo
push
and
jne
push
xchg
pop
xchg
je
sbb
adc
sbb
cmp
dec
lahf
in
aad
movsl
mov
sbb
cmpsl
or
repz
imul
sbb
push
sar
popf
push
xchg
nop
or
push
ja
xchg
data16
fisubl
xor
dec
push
pushf
pushf
push
lea
call
call
pushf
cmp
add
pushf
dec
call
pop
xchg
pop
mov
mov
into
mov
loopne
jo
aad
push
adc
aaa
adc
sbb
lret
and
scas
adc
and
pop
inc
rcr
aad
dec
inc
pop
stos
fninit
or
aaa
mov
sbb
cmp
shrl
or
bound
push
inc
mov
shl
xor
insb
orl
jne
mov
pop
push
xchg
and
mov
lods
adc
vmwrite
push
xchg
in
jg
fisubl
daa
lock
scas
or
add
sbb
and
es
sbb
jl
or
movb
pushf
mov
call
and
mov
mov
pop
dec
hlt
mov
ds
aas
adc
in
and
add
in
bound
sbb
push
test
mov
sbb
and
dec
xor
xchg
jno
aad
adc
xchg
ljmp
dec
lds
mov
sbb
stos
lds
movb
adc
lods
inc
cmpsl
sub
loop
mov
add
aad
test
call
lea
jne
bsf
sub
mov
bt
btc
sub
shrd
mov
jmp
jne
xorl
std
iret
jl
push
arpl
inc
js
fnstsw
hlt
into
dec
stos
push
mov
mov
mov
sahf
push
dec
mov
dec
add
lds
fnstsw
popa
and
sahf
or
xchg
ja
adc
xor
lea
xchg
cmc
dec
mov
pop
fstpt
cmp
xor
inc
rcll
into
xor
enter
cmp
fcomip
jecxz
movsb
inc
das
fdivrs
xchg
call
add
fdivrs
cmc
aad
in
inc
ldmxcsr
outsl
inc
xchg
jl
cmp
hlt
jg
cmpsl
rolb
das
pop
lcall
sub
xchg
iret
fistpll
rolb
pop
fisubs
push
sub
jno
fsubl
mov
jb
jg
es
mov
ja
out
adc
add
xchg
lret
loope
add
mov
and
pop
pop
fmuls
lret
add
lcall
push
lea
xchg
mov
and
dec
out
mov
mov
daa
pop
test
vpmovzxbd
mov
push
hlt
add
sbb
mov
out
or
shlb
in
dec
pop
in
cmp
and
lea
cmpsl
sbb
adc
and
sub
cmp
xor
mov
imul
cmp
sti
aaa
add
mov
sbb
int3
mov
stos
cmc
imul
sti
jae
cmp
xchg
lahf
xchg
movsb
sub
stos
loop
dec
movsl
ja
pop
lret
adc
pop
int3
lds
jmp
mov
jl
shll
cld
imul
arpl
sub
mov
push
push
or
mov
and
imul
push
jg
mov
jae
jg
call
sar
or
sti
orl
and
sub
insb
add
insl
sbb
dec
push
fs
lea
flds
jl
adc
fs
pop
cmc
loop
lret
inc
jp
push
inc
mov
or
mov
or
std
xor
push
xchg
mov
sub
dec
repnz
into
add
mov
imul
mov
into
imul
push
mov
dec
cmpsb
in
xor
test
data16
sub
fcomps
pop
xchg
and
sub
xchg
fwait
cmp
fidivrl
cwtl
dec
addl
sbb
notb
adc
mov
sub
add
mov
jmp
mov
dec
loope
mov
and
les
insl
lods
fildl
loop
daa
repnz
mov
fisubrl
jecxz
imul
lds
pushl
mov
sbb
mov
push
ljmp
or
or
aaa
in
xchg
push
sub
test
and
lods
pop
xchg
adc
sbb
test
bound
movl
xchg
adc
rclb
divl
sbb
inc
rcrb
mov
bound
inc
or
push
std
sbb
movsb
inc
jecxz
stos
and
out
addr16
jb
arpl
sahf
xchg
in
adc
sub
push
lret
xchg
imul
cmp
outsl
add
fisubrl
bound
pushf
call
lea
jl
pushf
lea
jae
test
cmc
clc
cmp
push
pushf
lea
jae
clc
cmp
push
lea
jnp
ja
jmp
jmp
call
cmp
mov
lods
jecxz
sahf
inc
sbb
mov
sub
pop
mov
fs
xor
inc
fldcw
stos
scas
pop
or
jecxz
fs
and
mov
out
pop
push
jno
or
ss
stos
push
scas
cs
gs
push
or
out
fsubl
adcb
out
jbe
arpl
arpl
and
sub
int
bt
pushl
popl
call
adc
das
sub
loope
pop
and
pop
out
inc
adc
xchg
push
or
daa
scas
popf
push
lods
inc
ja
xlat
mov
shlb
dec
pop
fs
lret
ja
xlat
ja
and
pop
xchg
lcall
and
lods
inc
scas
inc
ret
inc
jb
dec
rcrl
mov
in
add
movl
jmp
xchg
rcrl
pop
es
das
ficomps
xchg
cli
mov
pop
mov
adc
pop
mov
cmp
lahf
xlat
adc
and
sub
shrb
fnstsw
scas
in
adc
jne
ljmp
sbb
xor
pop
out
scas
and
mov
pop
rolb
push
xlat
imul
and
fisubrl
push
lea
call
je
adc
call
cmp
mov
out
jo
add
jbe
xlat
mov
lahf
aad
rcll
jb
je
add
adc
mov
rcll
or
stos
jae
jae
in
push
xor
ret
pop
notb
xor
fdivl
dec
lods
mov
lods
aas
push
imul
push
ja
sub
daa
pop
cli
outsl
nop
dec
adc
repz
insb
add
popa
loop
dec
ret
popa
and
sub
add
pushf
clc
and
stc
call
cmp
imul
mov
jl
sub
fstpl
aad
mov
pop
loope
fmul
lea
loope
dec
jle
out
xor
lret
mov
cmpsb
and
cs
iret
das
lret
mov
push
cmc
hlt
mov
out
cltd
jno
out
push
or
and
jmp
jno
inc
lahf
cli
fdivrs
sbb
mov
and
clc
cmp
clc
or
cwtl
negl
xchg
jmp
jecxz
fsub
call
std
jno
mov
mov
push
cmpps
mov
jbe
xor
adc
call
jno
sub
pop
sub
xchg
and
shlb
enter
jp
or
xor
and
cs
mov
mov
nop
add
jl
inc
jno
and
cs
pop
sub
es
arpl
adc
scas
test
and
das
inc
pop
push
sti
jne
aam
daa
inc
pushf
xor
jle
mull
scas
jmp
mov
mov
or
cmp
stos
push
enter
push
mov
aam
fstpt
leave
push
aad
push
and
cs
stos
shrb
xor
sub
lds
les
mov
jae
lret
cs
dec
mov
mov
mov
lods
lods
push
and
cwtl
jmp
fisubrl
add
mov
shrl
out
icebp
mov
inc
inc
add
stc
rorl
push
pop
andb
jbe
jmp
mov
jo
jns
andb
push
cmpb
push
pop
fmull
push
mov
fisubrl
aad
sbb
cli
arpl
test
xchg
and
xchg
stos
and
das
lock
xchg
pop
insl
xchg
dec
cld
add
js
jecxz
cmp
pop
and
das
mov
stc
insb
mov
mov
xor
insl
les
popa
add
fisubrl
inc
sbb
and
rolb
push
in
fwait
push
xor
and
das
cmp
and
inc
sahf
lods
jo
scas
mov
xchg
jge
arpl
movsb
icebp
popa
mov
inc
shl
xchg
or
mov
mov
jg
mov
cmp
fiadds
fidivl
pop
lods
stos
negl
mov
mov
jecxz
stc
and
xor
cmpl
bsf
mov
pushf
call
mov
bswap
not
mov
clc
clc
cmp
pushf
push
lea
jbe
rol
sub
xchg
sbb
mov
stc
add
inc
inc
mov
mov
adc
shld
movsbw
add
rcr
movl
pushf
bswap
cmp
mov
add
stc
clc
cmp
jne
jbe
rcl
bt
btr
sub
rcl
xadd
mov
rol
dec
neg
mov
and
dec
add
jmp
pusha
pusha
pushf
lea
jae
dec
mov
clc
rcl
mov
push
or
stc
mov
test
pushl
movb
pushf
sub
bt
jmp
pushf
xchg
mov
jb
sahf
mov
outsl
ja
fwait
insl
sbb
mov
push
mov
push
hlt
out
push
insl
int3
sub
js
dec
jmp
rclb
push
hlt
out
stc
or
repnz
xlat
addr16
imul
xor
push
inc
mov
dec
shll
inc
pop
into
pop
cmpsb
and
xor
das
xchg
int
movsl
pop
and
std
int
push
or
mov
int3
movsl
or
or
add
ds
dec
push
push
lods
sbb
out
mov
xor
ds
pushf
fsubrs
adc
jl,pt
pusha
stc
ret
push
loope
in
sub
cwtl
aaa
imul
sbb
jg
test
int3
rolb
ljmp
fidivl
stos
aam
call
cmp
pushf
pushf
mov
push
lea
ja
clc
shl
shl
sub
add
dec
pushf
sub
lea
add
sbb
mov
and
ror
setle
shr
mov
cmc
repnz
push
push
pushf
lea
jne
jmp
mov
je
cltd
mov
or
mov
dec
adc
int
popa
outsb
push
sbb
pop
stc
push
and
out
push
sbb
pusha
dec
std
lcall
shll
pop
test
nop
ja
push
test
shrb
jecxz
imul
fmul
stc
adc
scas
pusha
push
cmp
repz
cmp
mulb
fidivl
out
lea
mov
lea
jne
jmp
movsb
add
and
push
mov
jne
out
insl
adc
dec
mov
aad
pusha
xchg
imul
mov
xor
sbb
fadds
jg
add
jecxz
popa
fistps
or
and
fwait
mov
in
test
movsb
lea
pop
jmp
movsl
add
add
mov
inc
xor
push
or
lock
inc
lds
and
xor
mov
stos
ret
fcmovbe
xor
push
dec
lods
dec
adc
add
push
xchg
cmpsb
adc
std
xor
loope
dec
push
xlat
push
in
xor
jnp
jecxz
lods
cwtl
sahf
pop
adc
scas
jb
out
out
cmpsb
fdivrl
inc
dec
xlat
sarb
cmp
aas
fsubs
cmpsl
xor
or
and
xor
or
push
jb
jbe
lret
cwtl
sti
xor
adc
sbb
push
push
mov
fisubrs
and
xor
fidivl
push
xchg
cmpsb
adc
nop
push
mov
les
das
hlt
mov
fidivl
das
mov
or
lret
dec
dec
test
sbb
outsb
insb
push
sti
sbb
mov
enter
dec
dec
sti
adc
aas
sub
pop
pop
cld
insb
fldenv
or
lods
cmc
mov
mov
fsts
push
and
cltd
xchg
lcall
mov
imul
rolb
call
sub
lods
pusha
rcrl
xchg
sub
dec
mov
push
dec
stos
and
xor
mov
mov
sbb
imul
std
leave
and
xor
pusha
sub
clc
cmc
mov
clc
sbb
sub
mov
pusha
test
stc
cmp
repnz
pusha
push
push
lea
jne
setne
pusha
pushl
bswap
movb
call
lea
ja
push
inc
sete
inc
cmp
or
pushf
xchg
sar
das
mov
rcr
pushl
sbb
mov
clc
stc
mov
shr
not
shl
mov
cmc
test
cmp
sub
pusha
jmp
cmc
cmpb
jmp
cmc
xor
pushl
lea
call
pushf
push
pusha
lea
jae
inc
dec
mov
not
sete
inc
call
test
popf
push
roll
add
mov
outsb
and
test
cmpps
cmp
test
nop
cltd
pop
les
cli
or
push
rcll
out
test
mov
data16
scas
rcrl
xchg
push
or
stos
pop
push
dec
jmp
std
lods
mov
jle
xchg
jp
push
xchg
mov
xchg
or
and
xor
fs
jae
call
add
xor
push
mov
sub
or
lret
xchg
push
mov
xor
fidivl
shl
push
inc
pushf
xchg
inc
inc
xchg
pop
repz
lods
into
scas
adcl
es
sbb
jo
mov
bound
mov
scas
dec
in
mov
das
or
daa
xor
jecxz
ss
ljmp
rol
inc
lcall
fldt
mov
and
xor
std
mov
movb
call
pushf
lea
call
call
mov
pushf
pusha
pushl
lea
jmp
test
cmp
add
push
pushf
lea
jmp
lds
lds
mov
fists
add
mov
das
call
dec
cld
pop
jl
sarl
pop
dec
out
lahf
out
mov
xor
sti
arpl
movl
sahf
xor
mov
mov
fsub
sub
inc
or
dec
out
flds
push
mov
mov
in
push
imul
cs
arpl
mov
pop
int
icebp
jg
xor
hlt
mov
mull
imul
sti
js
imul
cmp
sub
sub
mov
fidivl
stc
cwtl
iret
mov
inc
std
and
sbb
jg
repnz
subl
imul
cmpb
jnp
push
testl
loope
out
dec
popf
sbb
add
cmp
cmp
or
pop
loopne
dec
stos
roll
jg
dec
sbb
cmp
subb
ficomps
xchg
jbe
xchg
incl
aaa
fstpt
push
movl
jmp
push
call
call
mov
push
mov
pushl
pushl
ret
jmp
ds
pop
xchg
bound
lret
add
jl
adc
sbb
aam
push
in
push
inc
sti
inc
leave
fcmovu
call
cmp
inc
cmp
cli
mov
and
xor
loop
and
or
neg
lcall
scas
test
cmpl
jb
sub
imul
and
inc
and
xchg
movb
mov
lret
fcmovne
rcl
fidivrl
sbb
clc
dec
shrl
xor
in
xchg
and
mov
sarl
rorb
push
add
les
cmpsb
push
cmp
stos
dec
dec
push
xor
mov
mov
add
fldl
push
std
rclb
mov
jl
xorl
test
out
out
pushf
cld
insl
and
les
rcr
out
lea
sub
cs
scas
outsl
roll
lods
jns
jnp
hlt
jae
mov
sbb
shlb
or
push
jp
call
mov
shr
dec
pop
sub
in
push
inc
mov
jp
push
lcall
in
into
or
lea
xchg
sbb
aas
mov
ja
popa
dec
inc
sbb
cwtl
jl
into
out
mov
cmpsl
rclb
xchg
adc
inc
push
xchg
bound
cld
or
push
or
dec
imul
jmp
and
cmpsb
subl
out
mov
dec
lret
push
mov
sub
enter
stos
cmpsb
repz
xor
push
loope
das
jmp
loope
mov
push
mov
scas
jmp
and
or
out
out
inc
imul
lods
push
imul
dec
mov
test
add
shll
inc
jbe
out
insb
xchg
sub
sbb
aad
stc
pop
mov
test
sti
js
dec
outsb
push
pop
out
mov
sahf
or
push
xlat
inc
int3
dec
ficompl
incl
and
cmp
mov
push
xor
movsl
je
rorb
jb
pop
pop
cli
and
cmp
cltd
stc
cmc
cmc
sub
call
adc
outsl
adc
sbb
addr16
cltd
outsb
sbb
fwait
push
adc
xor
push
mov
cmp
ffreep
jb,pn
cmc
or
xor
add
cltd
pusha
adc
int3
pop
fwait
sbb
lret
xor
aaa
add
fabs
adc
push
and
jnp
ja
dec
push
fidivl
notb
or
and
outsl
xchg
sbb
jg
pop
das
in
daa
into
and
add
outsb
repz
jle
insl
fistps
sbb
adc
js
addl
mov
mov
sbb
push
dec
stc
dec
fsubrl
subb
out
pop
popa
pop
pop
outsl
push
dec
clc
pop
add
shlb
je
fcomip
ds
xorb
inc
mov
and
adc
push
add
xchg
rcrb
lahf
loope
dec
in
sbb
nop
into
jo
lahf
insb
incl
pop
cwtl
or
xor
jmp
jnp
inc
iret
cmp
push
jecxz
ficoms
push
mov
fidivrl
dec
enter
decl
push
inc
push
dec
xor
inc
dec
dec
add
adc
adc
popf
push
or
mov
notl
jnp
cli
and
fadds
push
xchg
cmp
inc
scas
jmp
xor
cmp
sahf
in
sbbb
cmp
mov
xchg
xor
push
filds
and
fldcw
je
imul
fmul
push
dec
mov
adc
xor
xchg
jbe
xchg
adc
cmp
ret
movl
movw
mov
lea
jne
shl
mov
btr
sub
rol
mov
push
push
movb
sub
movb
stc
pushl
popl
stc
bt
call
aas
cltd
arpl
xchg
out
pusha
and
stos
pop
or
stos
jnp
mov
add
cmp
les
adc
pusha
int
in
js
xchg
mov
aaa
roll
imul
push
xor
es
pushf
mov
inc
mov
pop
cmc
xor
arpl
pop
sub
iret
cmp
ret
pop
loopne
dec
lcall
pop
addl
fidivrl
fwait
xor
add
push
filds
add
jp
sub
mov
sarl
stc
mov
inc
adc
fwait
dec
or
leave
push
sub
sub
pop
js
aas
sahf
mov
pop
or
lds
sub
cli
sahf
xchg
movsl
in
sbb
jo
xchg
and
sahf
std
inc
inc
xchg
sub
xor
push
lahf
lahf
cmpsb
test
dec
imul
mov
or
idivb
xor
xor
dec
lds
cltd
and
cmp
xor
jmp
pop
jno
mov
cltd
ror
jbe
push
rcll
adc
inc
jle
data16
fidivl
ret
jae
and
sbb
mov
push
test
xchg
in
inc
jle
and
jae
lods
fisubrl
daa
enter
imul
out
pusha
or
push
jb
negb
sub
jle
lcall
movsl
cmp
cwtl
sbb
mov
and
nop
pop
int
add
ret
jge
data16
sub
fidivrl
and
pushf
lea
call
jmp
dec
cltd
push
movsb
inc
pop
push
sub
sub
inc
mov
cmp
xor
pushf
mov
and
sub
ja
test
xor
sbb
dec
es
mov
in
pushf
mov
lcall
mov
adc
outsl
pusha
pop
adc
in
xor
scas
movl
dec
xchg
cmp
sbb
jecxz
ss
stos
xor
stc
add
xchg
mov
in
loopne
pop
jno
jae
push
jnp
popf
lods
pop
lea
mov
fisubl
fidivrl
sar
add
movzbl
movsbw
mov
pushf
pushl
ret
lods
mov
neg
call
scas
sbb
repnz
es
xchg
push
mov
pop
xlat
push
dec
inc
mov
add
mov
pop
xlat
push
mov
inc
dec
int3
repz
push
mov
pop
pop
and
ds
out
cmp
bound
daa
push
adc
adc
cmpl
andl
sar
ljmp
push
lods
xor
jns
in
mov
mov
add
xchg
cli
sahf
fdivrp
and
lcall
lea
jbe
and
bound
imul
mov
stos
movb
jp
sti
add
into
add
js
insl
or
stos
add
cmp
mull
test
add
fmulp
push
push
lods
mov
pop
adc
and
in
rolb
mov
and
inc
sub
jmp
loopne
in
in
repz
jnp
test
lcall
bt
add
pushf
push
mov
pushf
lea
jmp
je
lahf
in
push
loope
imul
push
lret
in
mov
adc
mov
cmpsb
cld
and
sbb
fnsave
in
aas
and
mov
sbb
call
xchg
sub
sub
inc
mov
mov
in
inc
scas
sub
imul
jmp
call
push
adc
movb
pusha
pushl
lea
jmp
iret
or
inc
jo
inc
and
push
lea
stc
lret
xchg
pop
jecxz
js
stc
sbb
cltd
cmp
dec
push
mov
ja
cmpsb
loop
jo
pop
sbb
cltd
xchg
sbb
loopne
jp
push
imul
hlt
mov
inc
andl
rcll
wrmsr
cmpsl
and
push
imul
xor
xchg
rcll
mov
and
sbb
movsl
and
inc
add
inc
call
push
lock
std
std
xorb
imul
sub
sub
xor
pop
cmp
xor
xor
insb
in
jge
or
mov
and
aam
pop
into
add
loope
sub
test
mov
add
inc
xchg
xchg
in
xchg
push
mulb
std
and
or
insb
adc
dec
mov
pushf
pusha
pusha
pushf
pushl
ret
sbb
cmp
test
and
mov
loop
pop
xor
pop
xor
or
push
dec
lahf
xor
addr16
pop
cmp
add
or
xchg
clc
mov
pop
mov
mov
ja
arpl
fidivrs
les
movsb
lret
cmpsb
movsb
pop
mov
sub
pop
roll
xor
jno
lds
dec
cwtl
and
std
cmp
mov
mov
out
test
int3
mov
mov
shll
jecxz
roll
ds
mov
sbb
and
add
aas
add
sub
mov
xchg
xchg
add
daa
mov
pop
enter
pop
pop
jo
and
inc
inc
mov
outsl
sub
xlat
lcall
dec
les
cmpsl
inc
mov
fiaddl
inc
imulb
fldenv
pusha
lock
decl
mov
pushl
lea
ja
pusha
pushl
lea
jb
call
mov
pushf
push
inc
lea
dec
setns
inc
clc
and
clc
rcr
xchg
aam
sub
aas
mov
clc
mov
cmc
push
stc
pusha
mov
cmc
clc
cmp
sub
jmp
lea
jb
push
pushl
ret
pushl
rep
not
call
call
mov
out
inc
adc
inc
dec
adc
addb
imul
push
pop
sbb
imul
push
pop
fsubs
outsb
lock
jecxz
ret
push
and
cltd
jg
js
gs
jbe
and
pop
out
push
bound
inc
mov
lea
jae
pushf
pusha
pusha
movb
lea
jmp
sbb
cmp
mov
push
ror
mov
push
rol
sub
dec
push
or
call
inc
pushl
jmp
lcall
ret
loope
pop
cwtl
iret
shrl
mov
sub
mov
rcl
imul
ja
shrb
dec
adc
popf
add
shlb
and
aad
push
in
or
mov
add
sbb
shrb
sub
pop
mov
and
inc
push
jp
xchg
mov
sbb
pop
shll
dec
in
dec
mov
inc
cmpsb
ss
sub
mov
shlb
sub
subps
pop
xor
ret
mov
sbb
shrb
lret
bound
pop
xor
xchg
daa
nop
lcallw
adc
shrb
out
mov
les
sub
daa
mov
jnp
mov
cmc
mov
xor
mov
cmp
sub
cmc
cmp
neg
bt
cmp
pushf
mov
jmp
int
add
xor
shrl
push
push
into
sahf
outsl
adc
cmp
cmpsb
imul
pop
movsl
loop
xlat
out
pop
mov
pop
sub
xchg
xchg
jp
dec
aam
push
icebp
jno
add
mov
pop
pop
movsl
loop
test
test
fwait
add
jno
sub
push
mov
gs
into
or
push
repz
inc
testb
div
imul
and
test
std
jp
jle
fwait
mov
mov
nop
and
cmp
test
fistpll
mov
test
pop
aam
or
xlat
popa
ja
mov
adc
mov
inc
sbb
gs
imul
and
inc
int
jl
push
xchg
nop
or
popa
push
cmp
dec
mov
and
inc
andl
lea
jb
pusha
movw
pushf
jmp
leave
das
add
cs
fcompl
mov
pop
lds
hlt
dec
stc
pop
adc
push
push
dec
int
push
loope
test
mov
lock
adc
sbb
into
icebp
or
cmp
mov
cmc
into
cmp
sbb
notb
push
mov
xchg
xchg
mov
rorl
jl
or
lret
pop
lds
push
rorl
rcll
dec
pop
and
inc
fxrstor
push
mov
stos
jns
or
les
loopne
cmpb
mov
mov
push
and
ret
xchg
sti
ljmp
inc
fcoml
cmp
outsb
sub
pushf
or
lods
or
fiaddl
xor
mov
fs
popf
add
inc
test
mov
mov
rclb
pop
inc
sbb
fiaddl
mov
jle
mov
jl
dec
daa
cli
stos
pop
sbb
lahf
outsl
sbb
mov
les
ja
hlt
cmp
and
ret
fldenv
lods
pop
mov
xchg
ja
repz
outsb
or
inc
xchg
xchg
push
inc
cmpsb
cs
rorb
jns
aad
fiaddl
insb
adc
popl
xor
lret
mov
xchg
rcrl
pop
cmpl
xchg
push
and
orl
outsb
scas
xor
xchg
xor
addr16
mov
aas
xor
dec
addr16
js,pn
cltd
aam
loop
rorb
lods
gs
pop
cmc
call
adc
out
ret
lods
mov
and
mov
imul
addr16
imul
mov
ret
and
push
fadds
xor
mov
and
inc
je
popf
xchg
stc
mov
dec
xchg
jmp
and
insb
aas
out
cmpsb
jae
std
movsb
or
mov
es
rclb
mov
xor
xchg
xchg
lret
into
cmpl
jp
inc
mov
add
adc
nop
daa
rclb
mov
xchg
lahf
push
jae
fwait
lods
adc
shrb
in
xchg
sub
pop
ds
pop
repnz
push
mov
jns
insl
inc
jl
and
xor
add
add
fimull
pushf
popf
cli
jmp
fistpl
fisttps
adc
clc
jbe
mov
mov
mov
out
mov
jo
add
xor
fiaddl
inc
and
mov
push
mov
inc
and
dec
nop
inc
int3
sbb
cli
pop
popa
dec
push
and
dec
popf
pop
in
ds
push
cmp
mov
jl
pushf
sbb
insb
or
fs
push
mov
pushl
ret
pushl
call
pushf
lea
jne
shr
shl
shl
mov
jmp
cmc
neg
bt
jmp
inc
movsl
pusha
into
cltd
or
sub
push
add
xchg
inc
or
addb
ljmp
out
jb
lret
test
push
movsl
cmp
mov
cmpsl
sub
adcl
shrb
mov
loopne
jns
xor
fisubs
xchg
cld
pushf
dec
mov
add
add
jb
add
sbb
in
stos
push
push
loop
jbe
mov
aad
je
notb
lcall
sub
jge
dec
jmp
add
nop
or
inc
push
rolb
jns
and
lahf
pop
ds
and
std
mov
pop
xchg
test
or
sub
and
loopne
and
add
mov
int3
mov
inc
cmpsl
sub
bound
mov
mov
enter
mov
bound
outsl
loope
into
popa
fsubl
je
sti
pop
and
dec
jge
fldenv
mov
mov
mov
arpl
xchg
or
dec
loop
or
dec
or
aaa
andl
sbb
lcall
add
mov
and
frstor
rcrb
cmp
mov
movsl
pushf
aaa
enter
pop
add
ja
stos
aaa
mov
push
dec
mov
fimull
popf
pop
icebp
sub
mov
and
add
adc
sahf
ret
add
jg
mov
nop
inc
push
or
jg
inc
gs
lock
dec
pop
add
idivl
test
jle
and
dec
loopne
push
cmpb
into
repnz
push
daa
pop
xor
idivb
cmp
cmp
lock
cli
xor
pop
aam
daa
js
in
clc
jne
je
imul
dec
mov
in
test
call
sub
pushl
neg
pushf
bt
pushf
ror
movb
shr
pusha
mov
jmp
rolb
pop
daa
dec
xor
push
dec
adc
mov
aam
ds
stos
pop
rcrb
call
and
jno
and
adc
sbb
ficoms
xchg
push
jp
dec
out
ljmp
sbb
mov
sahf
das
xchg
pop
xchg
xor
fimull
jl
push
inc
pop
imul
jmp
push
pop
in
mov
sub
shlb
sub
adc
inc
adc
je
xor
into
out
movsl
and
imul
scas
iret
pop
push
dec
sub
dec
push
mov
iret
pop
imulb
fimull
inc
push
xchg
lods
lods
mov
hlt
xchg
sahf
imul
clc
xorb
cmp
hlt
mov
test
xor
dec
and
dec
lods
dec
ljmp
shlb
std
insl
sahf
psrad
enter
xchg
add
pop
dec
repnz
push
je
cmp
xchg
and
icebp
pop
dec
mov
fcoms
es
push
stos
rcl
icebp
mov
call
xchg
stc
inc
fnstenv
shrl
adc
sbb
sbbl
out
rolb
sarl
mov
or
push
jne
and
dec
inc
loop
pushf
mov
lea
pushf
lea
call
jmp
jmp
in
push
jl
mov
stos
test
outsl
mov
faddl
pop
adc
or
or
ja
decb
cmpsb
add
dec
ds
xor
mov
ja
sub
and
cwtl
or
lcall
fidivl
cmp
cmp
sub
xchg
and
dec
cltd
ret
loopne
les
rorb
neg
test
add
test
push
add
jp
xor
push
cmc
pushl
ror
pusha
cmp
cmc
pushf
sub
push
mov
jmp
add
dec
outsl
arpl
inc
jb
add
pushl
lea
jmp
jmp
lea
ja
shr
sub
clc
add
jmp
das
jp
xchg
daa
inc
dec
outsl
notl
cmc
test
inc
in
mov
jns
push
fists
lahf
lcall
fnstcw
orb
push
jo
sbb
out
add
sbb
fwait
repnz
ljmp
add
mov
sbb
xchg
or
mov
mov
mov
inc
and
cmpsb
in
popf
push
lea
jmp
jo
nop
sahf
xor
scas
xchg
push
es
cmpsl
js
cli
test
pminub
cmpsl
jmp
ret
cli
mov
movsb
jae
out
sub
sub
shll
inc
ret
sub
pop
mov
pop
xor
cltd
movsl
test
fistl
insl
cmp
lea
pop
inc
jb
sti
and
jmp
sarl
out
xor
mov
cmp
aaa
xlat
and
dec
ss
mov
movsbl
cmp
stc
add
pushf
movsbw
pop
jmp
not
movzbw
jmp
xor
shr
jmp
jmp
xor
addr16
daa
test
push
fldenv
shrb
jae
imul
xlat
shlb
cmpsb
cmp
inc
ret
cmp
fnstsw
mov
push
std
iret
int
dec
mov
loope
pop
aad
stos
int3
xor
dec
cwtl
dec
test
int
outsl
and
sahf
cltd
std
push
xchg
dec
jg
shll
xchg
in
and
out
cmp
ret
xor
fdivs
inc
mov
or
test
stos
cmp
adc
xchg
sub
lret
hlt
out
dec
stos
pop
pop
mov
test
ret
cmp
popa
push
sub
and
ja
out
addr16
pop
xchg
dec
shrl
cmpsl
pop
pushf
xchg
push
movsb
and
jns
mov
stos
aaa
sbb
cvtpi2ps
push
mov
and
pop
sbb
mov
inc
les
sbb
repnz
mov
add
xchg
push
jb
mov
push
or
mov
out
jne
fs
jp
push
and
cmc
ret
daa
scas
call
push
xlat
stos
in
mov
push
sub
fnstenv
std
ljmp
mov
imul
dec
iret
sub
icebp
jl
ds
push
mov
adc
jbe
popf
fstpt
movb
and
xchg
push
mov
mov
jns
push
inc
and
push
imul
dec
cmpsb
xlat
xchg
loope
mov
arpl
pusha
in
pop
cld
and
push
pop
inc
arpl
sub
lea
call
pushf
pusha
push
lea
jmp
icebp
pop
adc
cmp
test
xchg
dec
and
mov
cmp
rcll
jno
sub
inc
repnz
lods
mov
out
rcll
xchg
inc
rorb
cmp
shlb
xchg
cmp
cmp
lahf
ret
or
sbb
mov
pop
repnz
std
imul
jge
jo
sar
xchg
xchg
iret
inc
inc
repnz
fimuls
pop
jmp
loop
jns
dec
frstor
cmp
add
call
xchg
and
push
add
add
xor
xchg
push
push
fstl
jp
call
dec
jno
push
jnp
mov
cmc
xchg
out
bound
out
out
addl
out
mov
sub
fwait
push
or
insb
sub
mov
add
mov
mov
fcomip
in
mov
push
jge
pop
dec
mov
jns
xchg
test
outsl
xchg
add
adc
xor
mov
pop
xchg
addb
je
adc
xor
inc
sub
mov
mov
or
jge
push
sbb
mov
das
pop
sbb
push
jg
fldenv
cld
js
jg
xchg
fildl
nop
stos
cmp
idivl
jmp
push
and
outsl
into
fs
test
mov
mov
sbb
sbb
push
icebp
cld
lret
int
shrl
rcr
stos
mov
fldcw
jp
ljmp
xor
adc
dec
scas
and
int3
insl
js
imul
loop
and
push
pop
mov
inc
or
stos
popa
imul
divl
js
xchg
pop
mov
shll
push
mov
and
je
cmp
push
call
mov
pushf
mov
lea
pushf
jmp
lea
jae
shrd
lea
bsr
call
jno
push
push
xor
test
loopne
push
jb
mov
jnp
in
int
lcall
mov
pop
push
sub
insb
cmp
into
iret
xchg
lods
test
mov
rorb
shrl
lret
lods
pavgw
lods
mov
sub
and
orb
mov
pop
lods
fdivs
and
inc
rcll
push
jl
cmp
fadds
dec
test
outsl
or
mov
ss
into
cltd
dec
pmaxub
pop
clc
sahf
jl
cmp
pop
mov
roll
hlt
jbe
jl
enter
dec
divb
xor
cmp
adc
mov
xor
inc
and
data16
sub
sub
popf
inc
loope
andl
stos
outsl
pavgw
add
lret
hlt
je
and
push
cmp
jg
adc
jae
rorl
inc
cmp
pushf
pusha
es
inc
sbb
cmpsl
clc
and
mov
or
mov
nop
sub
arpl
ds
and
dec
mov
jnp
leave
gs
jp
inc
scas
jnp
inc
repz
inc
in
mov
mov
jnp
in
enter
movsl
inc
inc
inc
int
mov
inc
jb
mov
mov
cmp
or
pop
inc
push
inc
frstor
test
mov
pop
or
cmpsl
push
xchg
pop
popl
xchg
mov
jle
test
and
push
mov
test
cmpsl
or
lahf
mov
imul
mov
jb
add
xor
rcll
xchg
fbld
mov
cwtl
dec
movsb
sahf
xor
ss
enter
mov
mov
cwtl
mov
data16
adc
inc
aad
or
inc
push
inc
rcll
lret
dec
jnp
or
mov
and
cs
das
cli
and
push
repnz
add
pushl
popl
call
les
inc
pop
lea
ljmp
or
inc
sub
inc
sarl
push
push
xchg
in
cmpb
inc
js
add
mov
das
mov
mov
pop
mov
cwtl
stc
fildl
add
fs
xor
and
sub
cwtl
mov
dec
sbb
mov
fisttps
dec
fcomps
push
jl
inc
mov
and
push
mov
repz
pusha
movb
pushf
push
lea
jmp
inc
lds
negb
pop
sbb
sti
jno
add
stc
cmc
scas
mov
pop
out
addl
pop
call
add
mov
xchg
mov
data16
icebp
test
mov
adc
rorb
jge
mov
faddl
mov
and
push
xor
loop
sti
rclb
sbb
inc
sbb
push
int
push
out
in
js
jle
outsb
aad
mov
jle
jno
clc
mov
cmc
fisttpll
lret
dec
mov
jae
hlt
andb
and
push
aas
or
adc
adc
jmp
stos
and
push
mov
movl
movl
pushf
pushf
call
mov
dec
adc
test
cld
cltd
mov
scas
add
xor
mov
xchg
lea
mov
push
and
push
aaa
cwtl
mov
add
lcall
inc
out
mov
fildl
call
mov
mov
mov
lea
loopne
movsb
cltd
cmp
inc
push
push
ss
in
push
sub
sahf
mulb
outsb
mov
pop
pushl
pop
xor
imul
cmpsb
js
pusha
out
popf
mov
xor
or
lea
clc
arpl
push
lret
insl
add
ficoml
add
add
dec
cli
fcmovb
std
out
shlb
mov
cmp
fwait
pop
pop
insb
repnz
mov
sti
out
inc
push
mov
xchg
pop
mov
push
lods
push
push
lcall
divb
add
outsb
es
idivb
mov
xchg
das
mov
push
pop
cwtl
ja
lea
lret
or
pop
or
inc
dec
inc
loope
and
add
or
pop
mov
and
rorb
xor
ficoml
cmpsb
and
fs
jae
pushf
xor
call
lea
jae
push
cmp
call
cmc
push
adc
notb
mov
bound
cld
daa
int
sbb
cld
jb
movsl
xor
out
dec
dec
dec
movsl
jmp
movsb
adc
jmp
sbb
inc
hlt
mov
sub
aam
mov
cmp
xchg
sbb
jle
aad
jno
enter
cld
mov
popf
insl
mov
push
mov
insl
mov
and
std
aaa
cmp
adc
push
stos
sbb
das
fwait
enter
mov
hlt
ficoml
adc
adc
pop
pop
adc
and
push
int
add
mov
ffreep
cli
fwait
repnz
and
push
mov
mov
adc
int3
sahf
in
cmpsl
pop
xor
scas
jl
in
dec
and
push
fwait
xchg
or
pop
iret
dec
loopne
mov
mov
test
inc
imul
icebp
out
mov
push
xchg
jl
mov
call
mov
lea
int
mov
shlb
xchg
pusha
pop
push
add
jmp
lock
xchg
and
addl
pop
loopne
cmp
push
xchg
add
xchg
and
and
pusha
lcall
pop
into
fs
cmp
push
in
jno
jmp
jb
ficompl
add
cli
loope
mov
pop
inc
add
lea
int3
test
std
and
ja
add
sarl
test
jge
ja
add
outsb
in
mov
sahf
add
mov
jmp
loopne
sarl
and
imul
jle
push
pushf
call
movsb
out
stos
sbb
push
bound
mov
sub
in
fs
lods
inc
or
es
push
and
sahf
dec
adc
ja
pop
lods
inc
or
idiv
adc
sbb
push
outsb
sub
das
xchg
into
push
sub
lods
sub
mov
jns
daa
mov
aas
or
popf
and
xchg
and
and
pop
loope
cmpsb
shrl
stos
sahf
sbb
mov
xorb
fldt
pop
es
and
mov
xor
bound
cmp
and
mov
jo
jno
lods
cmpsb
sub
std
pop
pop
rorl
lods
and
inc
dec
leave
cli
nop
push
push
pop
lods
mov
je
jnp
fistpll
cmp
notb
nop
adc
add
mov
mov
ret
sub
xchg
pop
cli
mov
pop
mov
or
or
outsb
sbb
sub
add
xchg
test
inc
test
mov
mov
push
mov
mov
mov
mov
adc
push
ficomps
sbb
sbb
cmp
xor
lods
sub
ficompl
or
pushf
test
pushf
jmp
pushf
push
cmc
xor
bt
movw
pusha
ror
cmc
test
bt
sub
cmc
stc
cmp
pushl
mov
cmp
clc
add
cmp
stc
test
jmp
mov
pushl
push
pushf
lea
jmp
push
lock
std
std
mov
cs
ja
mov
int
dec
pop
daa
push
pushf
mov
pop
insl
ss
dec
pop
in
pop
jge
leave
in
test
dec
leave
and
aam
pop
leave
add
out
sub
test
test
adc
fbld
cmpsb
popf
repz
xchg
push
stos
movsb
cmc
lcall
pop
and
jmp
adc
inc
mov
mov
jmp
arpl
ljmp
sbb
movsl
push
cmp
and
or
xlat
leave
and
jae
fdivrs
ljmp
test
aad
dec
mov
inc
lret
and
ficompl
test
cmp
add
rcll
out
and
jnp
ficompl
popf
mov
scas
loope
mov
popf
popl
jecxz
inc
add
fs
loope
sbb
sub
mov
dec
imul
lahf
add
mov
cmpsl
pop
ja
sub
jae
jae
data16
sbb
nop
inc
jo
out
in
xor
das
cmpsb
sbb
out
and
pop
out
or
xchg
pushl
add
or
xor
mov
push
pop
ficompl
imul
mov
or
bound
std
pop
fmull
inc
or
add
out
xchg
addr16
outsl
sub
mov
sub
xchg
imul
cmpsl
fisttpl
push
xchg
test
flds
mov
and
or
sub
and
pop
pop
or
add
pushf
push
call
insb
ret
mov
ret
xchg
xchg
push
mov
cwtl
pop
cs
lcall
ret
ljmp
jno
mov
pop
fs
xor
sub
lahf
add
or
dec
in
jns
pushf
fxch
push
jno
xorl
fsubrl
dec
sub
cltd
sbb
push
flds
bnd
dec
movsb
push
mov
jg
jb
fldcw
imul
and
pop
fstpt
ficompl
fsubr
xchg
roll
mov
mov
xchg
sbb
inc
push
addl
enter
mov
js
incl
adc
daa
pop
notl
inc
faddl
scas
lret
pop
nop
and
inc
aad
repz
fsubrl
jb
jo
xchg
dec
ret
call
jb
andb
and
pop
pop
decb
int
call
sti
cmp
jp
or
adcl
mov
xor
pop
aad
je
psubw
cli
adc
pop
loop
out
psubw
add
cs
repnz
or
mov
sbbb
fs
loope
push
je
mov
repnz
imul
scas
xor
cmp
adc
and
and
mov
pop
mov
and
pop
in
mov
mov
lods
dec
cmp
pop
or
movsb
push
sbb
mov
lock
xor
sub
mov
sbb
repz
test
sub
jmp
or
lods
jmp
mov
into
aas
pusha
arpl
push
stos
mov
lods
test
jmp
sbb
add
mov
cmp
cwtl
adc
dec
ljmp
xchg
loope
push
xchg
loope
pop
sub
xchg
mov
adc
sub
jo
int3
rcl
negb
repz
adc
push
jno
mov
std
stos
inc
or
jae
dec
cltd
bound
cmp
test
mov
mov
mov
inc
cltd
sub
jno
jno
insb
add
ficompl
in
sti
fwait
mov
into
dec
pop
hlt
or
fnstenv
or
sarb
jmp
ret
sahf
bound
lods
and
jle
test
das
fs
pop
jo
dec
inc
add
lahf
mov
jge
jb
jl
ja
je
repz
mov
dec
aam
or
mov
mov
and
mov
jge
popf
xchg
in
inc
mov
subb
inc
sub
rcrb
loopne
pop
test
mov
mov
mov
adc
sub
mov
jecxz
aam
sbb
push
xchg
jmp
pop
cli
test
mov
fincstp
mov
pop
pop
cmc
or
push
mov
jne
dec
dec
hlt
pop
xchg
testl
sbb
push
lock
inc
mov
pop
xor
das
test
mov
pop
adc
mov
mov
sti
movsb
dec
inc
xor
sub
les
mov
mov
bound
or
fnstcw
add
or
shrl
das
fwait
mov
fchs
lods
push
jge
mov
fadd
pop
mov
pop
ret
jo
mov
popf
mov
movsb
aam
fstl
jo
sub
adc
adc
int3
ljmpw
das
jg
fdecstp
stos
ss
test
in
lds
call
std
mov
ljmp
sbb
mov
inc
minps
sbb
sti
jo
cmp
aam
clc
repnz
push
adc
cli
mov
pop
ret
jp
test
and
sbb
adc
int
sahf
jp
int3
pop
mov
into
pop
jne
mov
das
mov
mov
in
mov
cmpsb
cs
fldenv
jp
cmp
sarl
jmp
sbb
add
scas
xchg
inc
loopne
and
xchg
mov
repz
jp
pop
mov
mov
mov
and
shrl
sahf
popf
rclb
test
idivb
sahf
das
mov
in
sahf
mov
jle
mov
inc
mov
fdivrl
ficoms
and
mov
and
bound
cmp
mull
fbstp
clc
mov
shlb
lret
inc
movsb
mov
shl
sahf
mov
sahf
in
sub
fstps
mov
out
popf
add
stos
aam
icebp
movsl
lahf
lods
adc
adc
ss
rcrb
lahf
and
mov
add
adc
icebp
into
mov
fs
and
sahf
add
into
cli
xor
rorl
lods
xor
call
lahf
pop
fs
cmp
mov
stos
mov
jge
sub
adc
mov
enter
test
mov
and
and
lea
or
push
mov
xor
rcl
lahf
mov
lahf
inc
fs
and
mov
mov
fnstenv
inc
xchg
lahf
ficompl
mov
mov
mov
sub
xlat
cmp
pusha
les
loopne
mov
clc
ret
fidivrl
clc
mov
or
sub
xor
popf
ret
pop
xchg
movsb
in
sahf
gs
lcall
ret
mov
mov
fadd
sbb
ficompl
mov
fwait
leave
sahf
popf
lret
pop
xchg
lods
lods
mov
sub
mov
std
into
outsl
and
fs
xor
and
inc
pop
add
rcrl
lods
hlt
push
rol
clc
mov
test
test
sub
cmp
popf
leave
ret
lods
hlt
xor
ret
mov
int
add
jecxz
mov
xchg
mov
ret
mov
mov
pop
xor
xchg
and
mov
ret
ret
mov
push
sub
stos
scas
push
cmpsb
popf
xlat
call
fadds
popf
push
sub
ret
mov
cmp
add
lods
mov
cmpsl
mov
cltd
mov
sub
mov
shlb
stos
lahf
sub
lahf
fs
lea
mov
test
mov
jbe
sub
inc
mov
and
lahf
shll
mov
sahf
sub
mov
in
fsubl
clc
imul
add
popf
push
pop
xchg
xor
mov
sub
inc
sbb
add
lods
hlt
pop
fwait
ret
mov
and
stos
insb
add
fcompl
add
lods
xchg
dec
cmpsl
xchg
cs
mov
mov
push
sub
sub
popf
xlat
cmp
push
jge
xor
sub
rcr
pop
mov
popf
ret
mov
ret
mov
mov
stos
sbb
pop
sub
popf
jne
pop
hlt
lret
stos
clc
mov
cmp
test
and
sbb
mov
ret
add
clc
scas
mov
push
inc
pop
xor
popf
roll
lods
hlt
cmp
mov
scas
xor
pop
inc
hlt
dec
popa
ret
mov
sahf
sub
lods
add
lods
hlt
leave
and
stos
clc
mov
ds
xor
and
mov
mov
sub
flds
push
les
aaa
fs
mov
mov
enter
movsl
ficompl
xor
lds
fimull
and
aad
lahf
mov
lahf
test
fs
mov
stos
xor
and
or
enter
iret
ficompl
sahf
fs
mov
ret
xor
roll
lahf
mov
lahf
movsl
fs
and
lea
sub
test
cmpsb
xor
pop
enter
lahf
push
or
dec
fs
mov
into
popf
in
pop
xor
hlt
movsb
xor
xor
incl
push
sahf
mov
imul
popf
stos
ss
fcompl
mov
mov
lock
jmp
sbb
sub
or
sub
mov
sahf
rorl
or
add
mov
and
movsb
int
ficoms
and
xorl
lret
int
aas
jo
scas
xor
enter
xchg
ficompl
xlat
out
mov
mov
shll
lock
out
fs
and
fs
mov
xchg
xor
lock
out
cmp
iret
fs
mov
lret
xor
push
sbb
fs
mov
mov
lock
call
lock
mov
cmp
stos
loopne
subl
rcrb
mov
pushf
or
jge
sahf
or
aad
mov
movsl
mov
mov
sub
xchg
xchg
mov
cmp
ffreep
es
ret
sbb
jmp
push
add
lods
inc
pop
xchg
sub
test
ret
sbb
pop
and
add
lods
inc
jg
sub
push
clc
mov
mov
lret
shrl
add
lods
hlt
mov
ret
mov
mov
fwait
add
lods
hlt
lahf
and
jg
ret
ss
add
pop
sub
adcl
pop
and
mov
dec
add
mov
test
cmp
lods
hlt
lock
sar
mov
sub
push
add
lods
hlt
inc
out
sub
call
popf
aas
ret
xchg
and
mov
sub
add
pop
and
mov
dec
and
cs
ret
ret
ret
cmp
dec
arpl
add
lods
hlt
repnz
ret
mov
sub
and
mov
dec
add
sub
mov
and
lods
dec
inc
xchg
lods
hlt
inc
fs
ret
cmp
dec
test
add
lods
hlt
out
ret
mov
leave
sub
lret
sub
int
popf
out
inc
xchg
iret
lods
hlt
lock
mov
shrl
aad
popf
test
xlat
lods
hlt
clc
out
fprem
mov
fldt
mov
xchg
mov
ret
mov
ret
sub
lds
mov
or
call
sub
cmp
mov
dec
inc
ret
mov
and
lods
cmpsl
test
xchg
cltd
clc
mov
mov
jge
add
popf
mov
hlt
mov
ret
mov
test
xchg
add
lods
xchg
mov
hlt
lods
lret
clc
mov
jg
add
popf
mov
hlt
mov
ret
mov
xchg
cltd
add
lods
jne
imul
clc
mov
subl
sub
test
xchg
clc
mov
mov
fwait
add
add
lods
hlt
mov
ret
mov
subl
add
lods
hlt
inc
out
ret
ret
cmp
dec
push
pop
add
or
add
dec
dec
ret
mov
es
mov
clc
inc
scas
ret
mov
push
sub
lods
dec
out
xchg
sub
and
ret
ss
add
pop
sub
popf
inc
dec
xchg
and
mov
cs
and
mov
dec
mov
xor
mov
es
lock
lods
xor
inc
adc
sub
mov
push
sub
lods
dec
push
xchg
sub
and
ret
ss
add
pop
sub
popf
inc
mov
and
mov
cs
and
mov
dec
adc
xor
mov
es
push
dec
cmp
lods
inc
jno
sub
push
clc
ret
xor
add
pop
sub
popf
aas
rclb
mov
sub
add
pop
and
mov
dec
xor
cs
mov
and
test
cmp
lods
hlt
inc
xchg
ret
ret
sbb
mov
push
add
lods
inc
rcll
ret
ret
xor
add
pop
sub
popf
aas
xor
mov
sub
add
pop
and
mov
dec
xchg
ret
mov
and
test
cmp
lods
hlt
inc
hlt
ret
ret
sbb
adc
push
add
lods
inc
xor
sub
push
clc
ret
xor
add
pop
sub
popf
aas
xchg
xchg
and
mov
xchg
leave
add
lods
xor
ljmp
sub
add
pop
and
mov
dec
jne
cs
mov
and
test
cmp
lods
jne
push
xchg
jge
hlt
scas
ss
mov
subl
xlat
xchg
test
xchg
clc
mov
mov
fwait
add
lods
hlt
lahf
fadd
jg
mov
xchg
sub
addl
mov
xchg
xchg
lods
hlt
cmpsl
cwtl
ret
ret
ret
mov
mov
jge
add
popf
mov
hlt
mov
ret
mov
test
xchg
add
lods
hlt
mov
mov
lea
jg
popf
mov
xchg
xchg
lods
hlt
mov
mov
xchg
sub
mov
mov
popf
dec
fcoml
ret
ret
sbb
lahf
push
sbb
sub
cmp
mov
dec
jl
sub
ret
ret
ret
ss
add
pop
sub
popf
inc
fstl
cmp
cs
and
mov
dec
cmp
inc
pop
sub
pop
mov
mov
sahf
ret
mov
push
sub
lods
dec
ficoms
ret
mov
mov
pop
popl
popf
or
add
ret
mov
mov
pop
flds
popf
cli
aas
xchg
fldt
mov
sub
mov
loopne
out
pop
mov
loop
add
xor
sar
movsb
mov
test
and
mov
gs
xchg
rolb
push
cmpb
xor
test
dec
inc
aas
inc
mov
rol
popf
mov
insl
in
cmpsb
lea
int3
or
pop
mov
pop
mov
in
and
in
sti
jl
in
cmpsb
jmp
lcall
test
mov
pop
sbb
mov
insb
xchg
jge
add
mov
mov
fsubs
cwtl
int
iret
enter
fmulp
pop
les
sub
neg
mov
loopne
cmp
and
add
iret
int
mov
and
movsl
cmp
loopne
and
cmp
mov
and
and
stc
stos
dec
insl
mov
lods
adc
pop
sbb
pushl
call
insl
pop
sbb
or
xlat
loopne
cltd
sbb
movsl
das
into
xlat
sahf
and
xlat
int
mov
and
fs
cli
fidivl
into
sbb
pop
loopne
into
lcall
sub
fldenv
lods
lret
jne
cmpsb
shrb
jge
out
dec
xchg
mov
inc
and
mov
rcr
negb
add
jno
lds
loopne
inc
sbb
movsl
ja
jmp
into
mov
and
rcr
lcall
lahf
into
aas
loopne
and
arpl
and
movsl
dec
into
or
dec
and
iret
int
and
loopne
and
pop
int
pop
andl
loopne
add
imul
iret
sbb
mov
repnz
popa
cmp
subl
xchg
mov
scas
and
sahf
loopne
je
leave
mov
push
lods
sub
mov
sbb
ror
jnp
fs
xchg
movsl
push
into
cmp
and
mov
scas
mov
sbb
ret
xchg
fdivp
loopne
mov
mov
test
mov
ret
inc
loopne
mov
sbb
ror
fnstcw
and
mov
push
clc
lods
pusha
inc
xlat
leave
mov
arpl
sarl
popf
xchg
or
icebp
mov
jo
rolb
inc
loopne
test
mov
int
jge
xor
scas
es
shll
mov
lods
gs
push
and
jo
xchg
loopne
mov
int
aad
sbb
xor
and
and
mov
push
fs
inc
fimuls
and
and
test
popa
movsl
loopne
and
fisubs
cmp
fcompl
dec
add
cmp
jb
je
push
scas
cmp
mov
imul
sahf
cmpb
loopne
push
and
fldt
fidivs
gs
mov
mul
sbb
push
adc
cltd
sarl
int
mov
mov
and
cli
lods
loop
mov
sub
and
movsb
insl
das
xor
mov
xor
int
into
push
mov
mov
pusha
ja
sub
cmp
mov
icebp
and
mov
and
push
xchg
mov
out
mov
mov
mov
stos
pop
stos
mov
mov
mov
int3
loope
pop
inc
cld
pusha
loopne
inc
and
adc
jecxz
repnz
and
loopne
mov
or
loopne
call
lods
fisttps
mov
sahf
pop
push
add
popa
test
leave
lods
ret
or
data16
ret
rolb
mov
inc
les
addr16
lahf
ret
fsubl
inc
insl
and
lods
sub
add
and
movsl
jp
add
fnstcw
mov
std
ljmp
and
lds
int3
dec
je
outsb
push
xchg
mov
test
jno
sahf
hlt
lret
sahf
das
or
into
adc
mov
mov
imul
mov
xor
mov
pop
mov
ds
lock
popf
enter
in
mov
sahf
je
sahf
jns
sahf
pop
mov
int
inc
in
loopne
and
xor
pop
mov
and
in
mov
adc
call
pop
insl
xlat
aam
add
inc
int
pop
sub
scas
mov
into
mov
fcompl
push
fsubrl
sbb
and
outsb
popf
loop
iret
mov
test
mov
loopne
dec
sbb
and
popf
ljmp
sub
loopne
mov
popf
movsb
xor
fidivl
jp
addr16
sahf
stos
sarl
mov
jno
sbb
sbb
rcrb
adc
xor
cmp
xchg
loopne
push
loopne
mov
mov
into
adc
das
lahf
stos
jg
int3
sbb
xchg
push
jl
lds
lods
and
aas
std
add
sahf
pop
je
bound
push
and
icebp
int
fidivs
into
sti
sahf
add
lods
loop
int3
in
and
test
loopne
and
dec
int
fidivs
and
movsl
test
loopne
and
sbb
cmc
mov
and
arpl
and
dec
int
fisubrs
rolb
xchg
into
cltd
sahf
inc
adc
xor
dec
fdivp
and
and
push
popf
ret
mov
into
dec
loopne
and
fmul
fidivrl
mov
out
mov
push
and
adc
mov
cmp
cmp
in
out
call
loopne
and
xor
loopne
mov
aas
movsl
inc
into
gs
and
sub
and
movsl
push
scas
pop
cli
pop
loopne
sbb
ljmp
movsl
or
mov
jo
mov
push
mov
jb
sub
inc
popf
subl
mov
mov
cmpsl
and
jmp
or
and
xchg
popf
inc
into
out
or
fimuls
lods
inc
xlat
mov
enter
fimuls
movsl
bswap
shl
jno
xchg
push
int
ficomps
and
movsl
sbb
loopne
and
add
inc
fisubs
ljmp
movsl
lods
add
or
jl
xchg
or
mov
cli
xchg
jecxz
mov
out
jl
movsl
hlt
mov
outsl
fsub
jb
push
loopne
clc
faddl
sbb
movsl
inc
into
or
mov
cwtl
and
mov
movsl
sub
int
mov
icebp
int
fidivs
movsl
xlat
into
cwtl
loopne
and
popf
sbb
frstor
lahf
movsl
pusha
into
mov
fs
fsubrp
and
movsl
ljmp
sahf
bound
dec
movsb
fnstcw
stc
add
cmp
pop
mov
int
adc
into
mov
sahf
ret
cmp
jnp
cld
jo
in
mov
sub
fxam
sahf
sahf
rcrb
fwait
sbb
push
mov
cmc
mov
cmp
fs
out
insb
xchg
and
mov
inc
insl
xor
int
mov
and
andl
rcr
js
pusha
rcrb
sub
dec
loopne
and
ror
xchg
fidivs
and
into
mov
fldenv
cmp
fidivrs
and
and
arpl
test
xchg
stos
fisubrs
jae
and
fsubrl
mov
daa
mov
or
scas
cmpsb
adc
adc
sub
insb
mov
xchg
sahf
pop
pusha
loopne
and
push
lods
inc
adc
mov
mov
mov
and
jecxz
sbb
and
movsl
test
imul
int
fisubrs
and
movsl
mov
repz
and
mov
js
cmp
ficomps
push
dec
mov
into
mov
mov
imul
in
mov
loopne
mov
mov
sub
int
mov
and
adc
pop
loopne
and
or
cmpsb
movsl
addr16
sub
lret
dec
int
fimuls
adc
aad
adc
fldenv
lcall
imul
xchg
sahf
adc
loopne
test
sahf
push
loop
jns
fwait
sahf
mov
shl
pusha
daa
mov
pop
aas
in
sub
arpl
into
sub
add
subl
and
movsl
adc
jp
mov
adc
sub
lcall
int
mov
and
inc
add
js
sti
ret
movsb
and
ja
inc
inc
fdivl
dec
pop
das
loop
mov
imul
cld
iret
xor
test
pop
cmpl
and
movsl
scas
into
push
lcall
insb
and
aas
movsb
les
or
shll
jno
xor
cmc
loopne
and
sbb
mov
in
mov
loopne
and
add
and
movsl
or
lret
loopne
and
mov
push
pop
fsubrs
ficoms
test
mov
out
idiv
fldt
lahf
mov
aas
imul
sub
dec
ror
xchg
mov
and
test
xchg
cmp
fidivs
ja
pop
lds
sbb
sarb
mov
fidivrl
jae
sub
movsl
pop
into
fistpl
and
mov
jl
int3
movsl
fmulp
and
movsl
lods
popf
inc
mov
rclb
sahf
sub
andb
arpl
dec
and
xchg
int
mov
mov
mov
mov
pop
mov
and
push
mov
inc
mov
mov
stc
out
lods
sbb
fisubs
sahf
mov
jecxz
out
sub
leave
pop
into
scas
fsubs
fidivs
mov
fstps
fs
xor
or
xor
sub
xor
fstps
push
or
jbe
pop
lock
fadds
pop
sahf
mov
jecxz
out
sub
movsb
sbb
sahf
fdivrs
les
ficoml
xchg
add
movsb
sub
xor
data16
sub
adc
test
fisubs
loop
pop
mov
sbb
ljmp
imul
sahf
jae
jmp
and
ror
mov
hlt
loopne
xchg
pop
and
push
int
fmulp
jecxz
scas
in
adc
mov
jnp
loop
mov
push
and
arpl
es
test
loopne
mov
or
mov
and
and
adc
inc
fisttpl
sahf
fmuls
adc
inc
int
iret
push
mov
mov
pop
jno
cmp
cmp
loopne
and
jecxz
fs
mov
mov
or
lea
mov
jl
popa
mov
inc
cmp
push
xor
mov
pusha
pop
ret
lahf
lcall
mov
pusha
jnp
and
cmpsl
sarb
ss
jbe
jle
mov
and
xor
sahf
or
sahf
les
arpl
fsubs
lods
mov
int3
push
mov
mov
movsl
shll
fxch
loop
adc
mov
mov
fcoml
dec
jns
call
ficompl
sbb
cmp
mov
mov
push
cli
push
aaa
mov
sbb
pop
sub
pop
out
sub
popf
sbb
test
and
aad
sbb
jnp
movsb
fwait
xchg
lods
jle
xor
lods
mov
and
faddl
loopne
cmp
andb
popf
add
sahf
sbb
loopne
mov
cmp
push
fcompp
loopne
pop
cld
mov
mov
cmp
addr16
popf
dec
dec
inc
faddp
lods
mov
sahf
inc
loopne,pt
mov
jle
lahf
mov
fbld
sbb
lcall
out
mov
jge
dec
push
mov
pop
movsl
hlt
test
popa
aas
mov
sahf
pop
sahf
pop
mov
shlb
and
cmc
lods
adc
int3
xchg
mov
loopne
sbbb
xchg
mov
loope
lock
popl
sahf
mov
sub
or
mov
data16
ret
hlt
mov
loopne
add
jns
and
loop
xchg
ret
cmp
loopne
ret
sbb
and
jecxz
pop
lods
adc
mov
sahf
sub
movsb
mov
or
jae
fdiv
loopne
inc
fcompl
fs
adc
add
sbb
stc
cmp
add
sub
inc
in
mov
pop
push
mov
shl
lods
ljmp
subb
xor
out
mov
mov
jno
push
into
mov
sahf
or
or
cmc
mov
enter
mov
js
sub
sub
cmp
xor
movsb
es
int
xor
lahf
mov
sub
lods
lahf
cmpsl
int3
xor
xchg
add
sbb
and
daa
popf
subb
pop
mov
fisubrl
mov
mov
loopne
call
or
sub
or
and
push
loopne
and
js
sbb
and
loopne
and
sbb
pop
ficomps
sbb
lods
sub
mov
into
dec
test
insl
dec
loopne
xor
or
pusha
lods
test
sub
xchg
lret
or
imull
fdivrp
mov
mov
stos
call
xor
fiadds
jmp
icebp
and
jmp
xchg
and
movsl
pop
lods
jl
mov
add
fisubrs
movsl
push
into
shl
adc
push
int
ficomps
loopne
or
cmp
fiadds
into
dec
mov
into
into
loopne
and
adc
xchg
jge
mov
popf
jle
sub
loopne
mov
jmp
icebp
fsubrs
fimuls
xchg
movsl
aaa
into
pop
loopne
add
mov
jb
nop
or
lahf
movsb
in
add
mov
mov
pop
mov
aam
movsb
lods
sbb
and
fucomip
popf
sbb
loopne
and
andb
loopne
dec
sbb
movsl
xor
add
lods
adc
in
popf
pop
dec
sbb
lods
mov
mov
lods
xchg
aas
outsb
mov
mov
lods
push
iret
lods
scas
out
lods
shrd
pop
outsl
int3
xor
aam
mov
rcrb
adc
pop
mov
push
mov
nop
mov
adc
mov
mov
loope
mov
sub
sahf
lahf
icebp
sahf
fs
das
mov
movsl
movsb
jno
movsb
xchg
test
mov
movsb
rcl
movsb
repnz
movsb
push
fwait
lods
shrl
lods
pop
push
lods
mov
loopne
loop
xchg
lds
hlt
add
adc
je
int
cmc
faddl
adc
mov
popf
xchg
mov
mov
negb
ss
xor
pop
mov
sbb
lods
mov
mov
mov
pop
arpl
addr16
adc
scas
mov
or
push
sbb
add
and
jnp
std
cmp
add
pushf
push
into
cmp
loopne
xor
int3
push
and
js
in
imul
hlt
test
mov
and
mov
and
test
push
jl
jae
push
scas
cmp
mov
cmp
lcall
jne
hlt
mov
mov
loopne
and
mov
jnp
int
mov
add
mov
jl
fcompl
hlt
cld
fdivl
fmull
sbb
movsl
jb
xor
pop
movsb
jl
int
jge
mov
sahf
movsb
popf
and
int
push
loopne
mov
lods
aam
sahf
push
xor
std
pop
lods
mov
andb
movsl
daa
into
lret
loopne
mov
popf
movsb
jge
int
fiadds
stos
sahf
int3
sub
mov
fcompl
inc
ljmp
mov
or
push
insl
and
aam
fdivrp
loopne
fsubl
and
xorb
jle
mov
sbbb
and
int3
lahf
faddp
and
fs
popa
enter
cmpsb
loopne
and
in
int
fidivs
and
stos
cmp
movsl
call
xchg
adc
mov
fbld
xchg
movsb
decl
pop
ljmp
int3
inc
faddp
loopne
loopne
std
and
and
inc
sbb
pusha
popf
leave
clc
cmpsl
sbb
mov
int3
mov
mov
bswap
nop
je
and
movsb
inc
jne
mov
mov
insb
loop
aaa
lods
inc
and
xchg
jg
fisubl
aas
mov
jecxz
add
mov
popf
lock
jno
repz
fdivp
frstor
fcomip
mov
imul
xor
sbb
les
popf
xchg
and
outsb
inc
popf
repnz
popf
test
loopne
mov
lods
inc
and
cmp
fsubr
test
int3
cmpsb
sub
mov
mov
pop
into
cwtl
xchg
cmp
mov
mov
mov
mov
pop
cld
into
loopne
dec
mov
fisubl
test
inc
mov
enter
dec
or
sub
mov
jns
sti
loopne
push
mov
jae
push
mov
ss
cmp
sti
and
loop
loopne
mov
xchg
andl
sub
sahf
pop
movsb
dec
mov
sbb
lret
lock
mov
xor
xor
mov
test
sahf
sub
push
stos
dec
test
sti
test
xor
ds
stos
xchg
test
sub
jbe
adc
pop
lods
bound
push
and
testb
rcrl
lds
pushf
add
push
js
sahf
daa
data16
lret
rcl
js
rclb
sahf
jbe
cwtl
repz
test
and
stc
cld
loope
mov
mov
lahf
movsl
movsb
pop
pop
int
iret
les
cmp
test
ret
lods
mov
sahf
stc
cmp
mov
iret
pop
sarb
mov
mov
mov
jae
loopne
and
gs
int
xchg
cmp
movsb
rclb
call
iret
rolb
fidivs
xorb
mov
sub
sub
arpl
inc
into
mov
icebp
add
mov
xor
pop
pop
mov
in
xor
out
popf
push
cmpsb
sbb
sti
add
shrb
mov
jg
popf
test
mov
stos
data16
jg
std
mov
add
dec
mov
ja
pop
into
mov
loopne
mov
mov
jg
cmc
mov
xor
outsl
sahf
mov
sbb
out
sahf
sub
and
cs
ret
flds
movsb
push
cmc
andl
les
repnz
sub
jecxz
mov
dec
movsb
es
dec
mov
rcrb
add
imul
mov
into
mov
idiv
movsb
adc
int
fidivs
test
mov
push
and
je
sub
lock
mov
sbb
ficoms
mov
mov
add
jle
push
mov
in
pop
jbe
aas
pop
je
shlb
pop
arpl
pop
cmp
lahf
jge
insb
jmp
jecxz
cmp
lcall
xchg
xchg
pusha
inc
or
movsl
loopne
aaa
lahf
sub
mov
bound
add
fildll
mov
lds
xor
mov
mov
dec
jmp
sub
movsb
xchg
inc
daa
popa
repnz
fstl
ljmp
and
in
xor
lock
in
mov
jb
arpl
cmp
inc
int3
pop
mov
sbb
es
cmp
cld
sbb
inc
jge
fwait
addb
push
loop
mov
cs
in
mov
lds
mov
mov
mov
dec
mov
lods
cs
stos
pop
and
jns
xchg
lahf
test
fidivs
mov
adc
cmpsl
mov
mov
aam
lahf
daa
lds
mov
lret
sbb
pop
xor
cmp
cli
fildll
jp
mov
pop
xchg
xchg
popa
cs
mov
mov
mov
jg
andl
es
cmp
adc
lcall
cli
adc
test
pop
mov
jle
mov
js
and
pop
enter
sbb
lahf
sub
pop
adc
scas
dec
sbb
shlb
shrb
call
sub
gs
test
loope
jnp
jns
sub
int3
popf
fisubs
scas
mov
mov
mov
mov
fs
add
test
push
pop
int
sbb
mov
xchg
fstpl
lcall
icebp
in
sub
loop
scas
das
enter
sbb
mov
sub
ret
in
or
out
mov
mov
iret
jne
je
jg
scas
sub
movsl
es
pop
sub
sub
mov
sbb
mov
loope
pop
ja
popa
aad
mov
les
cmp
fsts
push
jmp
jmp
sahf
popf
cli
cltd
xor
cmp
je
jns
imul
sti
js
ret
jle
and
mov
sbb
inc
cmp
xor
stos
int3
je
xorl
pop
arpl
inc
bound
lahf
pop
cmpsb
pop
jmp
imul
mov
js
cld
jle
pusha
jns
jge
fldt
call
out
das
call
dec
movsl
fnsave
ror
cltd
fxch
loopne
les
in
outsl
push
xor
mov
dec
hlt
das
cltd
push
lahf
movsl
mov
mov
add
lcall
addb
or
dec
imul
shrb
and
das
dec
sbb
sub
stos
and
sbb
nop
push
lods
and
jb
jmp
add
setnp
sub
mov
cmp
int
sarl
pushf
dec
gs
or
test
cmp
inc
cmpsb
in
xor
xor
lods
ds
fucomip
pop
adc
inc
ret
std
adc
jge
mov
inc
test
jge
gs
push
sbb
push
push
fnstsw
cld
pushaw
sbb
int3
mov
mov
sbb
je
in
sbb
mov
imul
cmp
jns
mov
push
or
enter
cmp
std
add
xchg
mov
mov
sahf
mov
xor
int3
mov
dec
int3
sbb
cmp
aaa
fadd
cmp
aaa
mov
cmp
enter
mov
mov
fmull
popf
mov
and
out
mov
lcall
fs
les
xor
adc
dec
sahf
shll
adc
inc
mov
enter
out
sbb
push
nop
outsl
or
add
fsubrl
int
rcll
insl
movsb
mov
pop
lret
stos
enter
xchg
jbe
inc
jle
and
adc
adc
in
mov
test
pop
pop
or
mov
pop
aaa
mov
insb
dec
cmp
adc
dec
jns
nop
inc
mov
es
cmp
cmp
add
mov
cmp
jno
jmp
mov
and
mov
sub
mov
jg
cltd
stc
leave
faddl
sbb
nop
movsb
sahf
ljmp
test
je
xorl
jecxz
out
inc
push
insl
sahf
add
jl
fdivrl
add
lret
lahf
lcall
shll
test
cld
lods
sub
popf
sbb
je
sahf
mov
xchg
sahf
jbe
icebp
movsb
dec
rorb
mov
sahf
sbb
pusha
xor
mov
fldt
mov
lods
xchg
cmp
outsb
lret
fwait
cld
xor
xor
scas
inc
mov
or
loopne
dec
inc
mov
cld
lcall
xor
popf
push
dec
push
sahf
into
mov
xlat
and
ljmp
clc
popf
cmp
mov
jle
and
mov
fdecstp
and
lods
mov
fidivrs
aas
sbb
loopne
std
lea
sahf
movsl
dec
int
cmp
loope
pop
push
call
push
insb
cld
ret
iret
add
outsl
cld
lods
jb
mov
ret
mov
mov
mov
xor
mov
cld
sarl
inc
lods
fdivp
in
mov
nop
test
add
jno
mov
xchg
stos
sub
push
lahf
fdivp
cmpsl
mov
mov
test
loopne
call
cld
repz
lods
push
adc
je
xchg
mov
push
lahf
sahf
mov
mov
pop
inc
mov
jl
repz
pop
bound
pop
add
stos
mov
adc
pop
and
sahf
lock
test
les
mov
pop
hlt
mov
ds
lods
adc
test
aam
std
ret
hlt
imul
jae
sahf
mov
insb
cmpsb
push
int
and
jne
lcall
sahf
rclb
scas
dec
mov
cs
fimull
lahf
xchg
outsl
lods
pop
ss
pop
aas
dec
out
popf
fimull
stos
add
pop
mov
xor
mov
arpl
lahf
lahf
loop
stos
jecxz
lods
inc
adc
rclb
mov
imulb
sub
mov
call
push
mov
or
sahf
pop
rcrl
mov
ja
mov
xchg
mov
cmp
shl
xchg
pop
add
xor
xchg
sub
mov
leave
add
pop
cmpsl
and
jno
mov
cmpsb
add
lahf
incl
mov
fstpl
jecxz
repnz
and
test
xchg
mov
inc
mov
mov
jmp
cld
mov
aam
pop
sahf
push
in
sbb
fldcw
vorps
mov
test
loopne
lods
data16
push
mov
out
mov
push
jbe
xor
adc
xlat
sahf
pop
adc
push
imul
lods
or
sub
or
mov
lods
ret
lods
cmp
movsl
clc
call
adc
sbb
lods
dec
pop
hlt
mov
cs
fmuls
sub
subb
or
mov
stos
mov
mov
mov
lods
push
stos
jo
sub
push
cld
sbb
int
mov
xchg
adc
sahf
cwtl
stos
scas
fdivs
cmp
sahf
cwtl
xchg
mov
dec
mov
or
idiv
pop
ss
test
mov
sub
pop
xor
xchg
cwtl
repz
xor
clc
mov
cli
stos
pop
add
stos
lret
movsl
adc
rorb
adc
mov
push
cwtl
lods
push
and
sbb
xlat
mov
pop
pop
jl
push
stos
or
test
pop
lahf
mov
cmp
stc
lahf
je
popf
mov
xchg
mov
xchg
outsb
into
and
sbb
call
mov
lahf
pop
mov
test
lahf
push
cli
cmpsb
js
jp
sbb
pop
neg
mov
mov
fcompl
sbb
cmp
push
mov
addr16
pop
sbb
cmp
xchg
test
shll
enter
faddl
stos
cmp
jp
lcall
outsb
mov
popa
cmpsb
cmp
sub
mov
cmp
shlb
icebp
adc
cltd
sbb
movsl
sbb
enter
lods
arpl
mov
dec
mov
aad
aaa
cli
js
jb
call
pop
movsb
mov
negb
arpl
in
add
in
ljmp
mov
cwtl
jo
arpl
add
and
lret
cmp
call
sbb
sub
pop
loopne
in
lds
dec
lods
cs
xchg
movsb
aad
dec
imul
mov
cmpsl
daa
inc
or
jne
pushf
adc
push
jle
pop
rolb
push
data16
pop
outsl
push
pushf
xlat
sbb
fstp
lahf
jmp
and
pop
testb
movsb
sahf
sbb
popf
cmc
and
mov
add
adc
aad
fdivl
int3
sbb
sub
add
popa
les
bound
fdivs
inc
inc
movsb
dec
mov
cs
pop
mov
icebp
inc
inc
ret
movsb
pushf
rclb
mov
clc
cli
into
dec
stc
cmpl
pop
inc
mov
sbb
movsb
popf
jae
in
stos
sbb
movsb
rolb
lods
fnstenv
xor
and
and
gs
call
lods
dec
mov
xor
xchg
gs
mov
dec
xor
xchg
dec
out
test
divb
push
mov
sbb
mov
outsl
inc
es
movsb
test
mov
scas
loopne
scas
mov
in
in
or
lods
jae
pushf
out
movsb
aam
arpl
aam
push
sub
fldenv
test
sub
shlb
aad
jae
adc
scas
iret
repz
scas
mov
cmp
adc
divb
or
fdivrl
loopne
cmc
cmp
loopne
popf
aaa
or
lret
int
divb
stos
fwait
jnp
mov
jg
mov
mov
mov
popf
jge
jg
mov
mov
cmp
idivl
fs
or
cs
mov
mov
lock
cmpsb
popf
shrl
or
dec
mov
movsl
xchg
stos
dec
lahf
and
test
xchg
imul
adcl
mov
mov
pop
aas
push
dec
jl
jne
mov
mov
pop
xchg
rcrb
notl
mov
insl
mov
aaa
xchg
shrb
shlb
push
lods
mov
lds
mov
mov
mov
lahf
mov
cmpsb
outsl
rorb
mov
jb
outsb
mov
cbtw
test
sub
xchg
jno
push
xchg
hlt
lods
push
aaa
je
sarb
fcoml
fnstcw
push
mov
pop
mov
repnz
jns
pop
xchg
sub
sahf
xchg
sbb
int3
sar
outsl
popf
rcrl
cmp
outsb
sub
jbe
daa
mov
mov
mov
sbb
aam
sahf
mov
stos
xchg
jns
pushl
fdivrs
pop
cwtl
fiadds
lods
daa
mov
fnstenv
ficomps
mov
cmp
pop
mov
mov
cmp
mov
lcall
fidivrl
cmp
pop
aam
mov
pop
sbb
sbb
mov
fdivr
sbb
sbb
lcall
inc
mov
inc
cmpsl
add
popa
pop
inc
movsl
cmpb
ficomps
aaa
mov
jl
shl
jle
add
mov
jge
shl
movsb
pushf
and
or
loopne
add
and
push
mov
pop
lds
stos
pop
les
out
sahf
jl
push
fistpll
add
sahf
inc
and
add
add
jmp
inc
mov
gs
and
addr16
inc
xor
ret
aam
inc
cmpsl
es
jg
mov
jo
lods
jge
lods
shll
jno
ror
repnz
fwait
cmp
inc
loope
lds
test
cmp
mov
jp
mov
sbb
shlb
lcall
or
pop
movsl
fcompl
clc
push
iret
pushf
movsl
mov
cltd
rcrb
mov
sti
jae
mov
xchg
ficomps
xchg
add
jae
into
pushf
idivb
push
mov
add
mov
sbbb
pushf
movsb
sbb
neg
jmp
adc
inc
aaa
movsl
pushf
adc
push
setle
push
mov
cmp
push
mov
xor
shlb
sbb
in
mov
fcoml
mov
cmp
sbb
js
xchg
push
lds
push
mov
xor
mov
pushf
sbb
xchg
and
lea
xor
sbb
xor
in
pushf
pop
lock
and
lahf
push
sub
lret
jb
xchg
mov
mov
pushf
jns
movsb
inc
cmp
nop
lahf
aad
jg
lcall
hlt
mov
jp
pushf
jnp
sbb
cltd
fdivr
daa
cmpsl
sbb
xchg
cmp
fdiv
xor
pop
fsubr
pushf
cmp
sbb
jo
neg
xchg
arpl
stos
cs
mov
pushf
dec
sbbb
sbb
cmp
or
adc
pushf
sbb
sbb
into
cmp
es
sbb
sub
sahf
pop
xchg
adc
jno
pop
mov
cltd
push
test
jbe
mov
sbb
pushf
push
add
cltd
mov
jge
mov
push
mov
gs
enter
outsb
jns
mov
popf
out
pushf
out
sbb
mov
cltd
repnz
fwait
cmp
and
insb
cwtl
fmul
stos
xor
pop
jg
cwtl
xchg
pop
fists
mov
cmp
iret
pushf
mov
mov
ficomps
rep
sub
jbe
int
mov
pop
mov
imul
jg
in
shll
int3
mov
cmp
hlt
ret
lods
sbb
push
jecxz
test
add
movsl
stos
mov
and
cmp
js
sub
pushf
push
sarl
xor
fiaddl
sub
rcrl
pushf
icebp
in
inc
stc
fsubr
sbb
inc
sti
or
stos
fmul
xchg
mov
jmp
jns
pushf
icebp
out
in
aam
pop
fcoml
dec
pushf
xlat
pusha
sub
push
sbb
icebp
in
outsb
xchg
movsb
test
dec
xor
cmp
xchg
fdiv
mov
pop
inc
das
mov
scas
aaa
pusha
aaa
adc
aam
pop
mov
sbb
jmp
jo
xchg
call
test
mov
cmp
rep
adc
stc
add
cmp
xor
fsts
loop
adc
sarl
pop
fsubl
pop
jl
jmp
clc
xchg
adc
xor
mov
pop
push
push
jb
jae
pop
stc
fsts
out
mov
lcall
pop
divl
pushf
mov
push
cmp
pop
sbb
sbbb
xchg
outsb
push
fisttpl
jb
shrl
mov
mov
test
mov
fisubrs
sarb
sbb
loope
sbb
stos
pusha
adcl
cltd
shll
pushf
mov
popf
test
leave
cmpsl
inc
or
ss
jmp
jge
dec
mov
pushf
sar
fcomi
scas
fidivs
sub
adc
and
mov
xchg
dec
nopl
mov
mov
lea
add
push
lds
cmp
xchg
stos
nop
jecxz
inc
popf
inc
sarl
stos
sahf
push
push
mov
pushf
call
sub
and
mov
push
popf
push
and
xor
push
nop
in
and
mov
mov
aaa
hlt
lods
sub
dec
scas
sti
xlat
sub
ss
inc
aaa
sbb
xor
xor
or
mov
rorl
xor
pushf
shll
jo
enter
mov
mov
lea
xchg
sbb
out
mov
sbb
lock
xor
popf
out
sbb
popf
xchg
sub
inc
pop
popf
test
sub
mov
sbb
negl
fsubr
sbb
cli
and
mov
cmp
cmp
cs
pushf
sarb
sbb
fisubrl
and
dec
popf
xor
or
sub
cs
outsb
sahf
loopne
xor
sbb
pusha
sahf
shll
sbb
mov
aas
decb
ret
fisubl
sbb
jns
mov
test
xchg
lcall
loopne
clc
mov
sbbb
mov
mov
popf
xchg
lods
int3
xor
les
jne
lods
xchg
insl
int
decb
sahf
mov
iret
sahf
jbe
pusha
xchg
sbb
insb
xlat
adc
mov
movsb
adc
sbb
std
push
jg
sahf
rorb
add
negl
idivl
lahf
and
pushf
and
xchg
fidivs
jns
das
mov
cmp
sar
lds
pop
xor
mov
mov
jle
stos
lods
popf
xor
popf
push
sub
int3
popf
aad
popf
adc
mov
fistpl
sbb
fs
stos
lods
jle
sub
nop
aaa
int3
mov
popf
sub
mov
mov
pusha
pushf
xchg
lahf
cmpl
xchg
lcall
xchg
pushf
pop
mov
xor
sub
adc
sbb
pushf
repz
mov
mov
mov
pop
jae
popf
mov
lods
aam
lods
adc
out
sbb
lret
or
imul
sbb
xor
mov
scas
popf
add
dec
inc
lahf
sbbb
gs
and
int
cli
les
mov
ja
bound
in
lods
cmp
push
aad
pushf
out
sbb
sbb
cli
push
mov
inc
icebp
mov
int3
mov
pop
ret
popf
adc
mov
sbb
mov
xchg
mov
or
arpl
xor
xchg
imulb
sbb
and
push
arpl
xchg
das
and
lods
divl
scas
pushf
mov
mov
outsl
jg
and
add
stos
push
inc
movsb
aaa
xorb
mov
clc
and
xor
test
pushf
cmp
sti
push
sub
pushf
inc
dec
mov
xchg
pushf
fistpl
mull
sarl
shlb
and
cmp
dec
scas
xor
shrl
push
popf
push
mov
or
stos
xor
push
jmp
xchg
sub
int3
sbbb
push
in
sahf
shlb
iret
push
mov
sbb
push
loop
mov
jg
sbb
sbb
pusha
mov
loope
sbb
ret
add
pop
rcr
sarl
jbe
popf
leave
pop
fsubl
push
pushf
cmp
xchg
in
lods
cltd
fwait
mov
pushf
xchg
mov
mov
mov
xchg
mov
ss
movsb
addr16
enter
shll
xchg
hlt
xchg
mov
jg
hlt
dec
popf
adc
sbb
popf
das
sbb
sub
sub
xor
dec
xchg
sbb
les
sbb
dec
out
cli
and
sbb
mov
sbb
mov
aas
shll
lahf
mov
and
test
and
mov
adc
pusha
pushf
fstps
arpl
es
push
cmp
xchg
fdivrl
es
popf
jno
sahf
mov
sahf
rolb
sahf
adc
lds
sbb
movsb
dec
repz
sbb
mov
mov
fdivl
pusha
or
sahf
ret
popf
adc
pop
in
and
call
fcoml
sbb
adc
leave
sbb
loopne
pop
add
popf
mov
pusha
push
xor
inc
cli
test
mov
mov
inc
lds
ret
push
cmp
cmp
mov
xlat
scas
popf
pop
sarb
mov
sbb
cltd
mov
xor
sar
pop
in
mov
mov
lods
nop
call
fcoml
test
xor
fcoml
mov
out
pop
incb
popf
push
test
sbb
add
xor
jae
adc
stos
in
ficomps
sbb
lods
aad
mov
sbb
sub
push
mov
iret
lahf
mov
mov
mov
loopne
popf
pusha
and
and
and
popa
faddp
addb
mov
sbb
pop
xor
xlat
mov
and
pushf
sub
jbe
mov
cmp
sbb
pop
pop
dec
lahf
loopne
mov
test
cmp
pushf
sti
sbb
and
xor
movsl
sbb
mov
movsl
gs
cmpsb
xor
mov
sahf
arpl
jb
into
sub
inc
fidivl
in
sbb
in
dec
lret
lahf
mov
cli
rcrl
movsl
insb
into
lods
mov
inc
into
mov
fbstp
ficomps
mov
jg
mov
loopne
popf
enter
jbe
fiaddl
xchg
and
sbb
fsubp
cmpsl
and
mov
into
and
movsb
in
test
out
cld
cmpsl
out
mov
test
or
xchg
inc
cmpsb
push
xor
pushf
cmp
mov
cmp
loopne
mov
sbb
in
adc
popf
loopne
add
sahf
shl
and
adcb
sahf
popf
repnz
adc
lds
dec
popf
rorl
test
sbb
mov
pusha
sub
sbb
or
imul
and
mov
dec
push
adc
leave
sbb
movsl
mov
pusha
out
pushf
arpl
mov
inc
lods
jg
mov
add
mov
jecxz
loopne
and
aad
add
sbb
pusha
pushf
inc
sub
pusha
mov
sbb
shll
inc
pushf
das
push
cmpsb
jb
mov
push
sbb
sti
mov
jp
mov
fisubrs
xor
popl
popf
outsb
loopne
jo
sbb
sahf
stos
push
cmpsb
int3
jno
xchg
jge
mov
sbb
pop
inc
int
lods
popf
mov
and
shl
leave
popf
push
sub
and
mov
sbb
test
loopne
push
iret
sbb
int
sub
dec
push
mov
sbb
xor
shlb
and
scas
inc
pushf
mov
fisubs
andb
xchg
sbb
outsl
sbb
aas
sahf
shrb
cld
jbe
popf
inc
and
in
mov
and
aaa
leave
test
and
xor
mulb
pushf
jno
inc
sti
push
sbb
fwait
int
aas
pushf
nop
sarb
jno
push
mov
mov
and
popf
mov
and
jo
sahf
test
sbb
sahf
cmpsl
loopne
and
jb
xchg
sbb
sbb
and
sbb
mov
push
mov
lods
aad
mov
sub
insb
push
mov
mov
and
and
pop
mov
sub
cmpsl
add
popf
sbb
and
loope
mov
mov
into
add
inc
sub
and
popa
xor
mov
movsl
int
negb
sub
sbb
pop
xchg
mov
clc
vpmacssdql
fstps
and
mov
and
dec
add
and
lock
bound
xor
test
adc
mov
cmp
mov
inc
in
jne
and
adc
sahf
fnclex
sbb
hlt
sahf
sub
jg
rcrb
sbb
test
lahf
lahf
push
sahf
mov
sbb
sar
add
pusha
mov
scas
popf
call
enter
fcomps
push
jl
movsl
mov
inc
movsb
cmp
sahf
arpl
movsl
and
cmp
inc
pushf
mov
inc
stc
imull
sbb
pushf
out
push
andb
xchg
inc
repnz
and
pop
sahf
scas
and
or
shl
inc
inc
push
sahf
fcoms
les
movsl
popf
shl
fcoml
add
fistps
sub
sahf
hlt
xchg
addr16
sbb
sub
mov
in
aam
stos
sbb
sahf
xor
sbb
popf
mov
in
cmc
sbb
sbbb
and
sahf
mov
enter
and
sbb
loopne
and
popf
inc
xchg
mov
shrl
stos
push
mov
add
jl
movsl
pop
mov
sub
int3
cmp
les
scas
loopne
sub
int3
add
and
mov
iret
pushf
jbe
clc
and
mov
scas
xchg
push
adc
movsl
add
push
scas
cmp
outsb
ret
dec
popf
xor
xchg
shl
sbb
outsb
sahf
pop
nop
negb
sbb
and
sub
sbb
inc
inc
xchg
sbb
int
mov
and
ljmp
arpl
test
hlt
and
pop
inc
lahf
sbb
fcmovu
jg
and
loopne
and
and
xorb
mov
sbb
ret
and
incb
and
movsb
inc
fstpt
popf
add
movsl
mov
cli
sbb
gs
scas
and
movsb
data16
cmpsl
and
out
pushf
pop
inc
sbb
mov
xchg
mov
stos
repz
fdivr
sahf
jg
scas
aaa
jge
mov
add
jecxz
outsl
add
inc
cmp
xlat
sbb
xchg
cmp
sbb
sbb
sub
shlb
cmpsl
popf
push
pop
sahf
sub
repz
hlt
sbb
push
jge
outsl
mov
lock
movsb
adc
mov
sub
daa
in
xor
xlat
jl
test
xor
mov
inc
mov
sbb
xor
or
and
movsb
inc
int
push
mov
iret
popf
inc
and
and
andl
int
imulb
mov
and
test
cld
xor
es
sahf
xchg
jecxz
test
xchg
push
add
pushf
push
xchg
fsub
pushf
lods
stos
xchg
mov
sub
mov
sub
push
lods
mov
popf
cs
xlat
popf
mulb
mov
scas
lock
movsb
sahf
push
sub
jo
rcrl
cs
mov
sbb
sbb
inc
mov
popf
jb
and
or
mov
mov
movsl
mov
loope
or
popf
popa
mov
insl
or
fcoml
pop
lods
out
and
out
sbb
add
popf
test
scas
add
cmpsb
leave
sbb
movsl
xchg
cmpsl
mov
mov
adc
pop
mov
sti
in
sbb
cmc
pop
int3
mov
out
and
popf
inc
outsb
call
mov
mov
jl
lock
adc
xor
jo
sbb
movsl
call
std
sbbl
pushw
les
pushf
cmp
shlb
sub
jecxz
dec
mov
fdiv
lods
pop
lods
int
adc
mov
fdivl
and
movsb
int3
in
fsubl
in
popf
inc
and
lahf
and
movsb
es
mov
xchg
mov
pushf
mov
cmc
mov
xchg
outsl
sbb
into
pushf
inc
cmpsl
mov
cmpsb
lahf
pop
lea
roll
scas
loop
iret
movsb
add
repz
dec
loopne
lahf
shlb
popf
adc
xor
mov
mov
sbb
add
sbb
ficoml
mov
mov
and
mov
loopne
sbb
sbb
int3
arpl
fldenv
popa
add
mov
or
cli
sbb
and
int3
add
test
popf
lds
mov
sbb
movsb
iret
jne
out
sub
sub
xor
out
leave
pushf
jecxz
movsl
repnz
sbb
cwtl
pushf
cmpsl
ss
adc
mov
popf
push
and
data16
popf
sbb
adc
inc
popf
dec
scas
sub
popf
xor
les
sbb
sbb
add
sub
popf
les
cli
clc
sbb
add
aas
scas
pusha
mov
daa
add
sbb
stos
push
mov
and
inc
cli
jl
mov
loop
mov
mov
adc
add
inc
sbb
in
movsl
and
mov
out
fmul
ja
inc
out
mov
cmpsl
cmp
movsb
sbbl
lahf
cmp
inc
setge
sahf
cmpsb
out
loope
popf
cs
dec
into
sbb
out
mov
jg
outsl
sub
popf
jle
ljmp
scas
sbb
test
insb
jbe
movsl
sbb
fs
pushf
sbb
and
imul
sbb
loopne
and
mov
cmp
scas
loopne
and
and
cmp
cmp
mov
and
xor
add
adc
test
jge
sahf
sahf
in
jecxz
movsb
test
mov
stc
imull
cmp
jle
loope
outsb
cmp
mov
divl
cmp
setge
mov
loope
inc
jle
outsb
popa
ljmp
sbb
loop
sbb
clc
nop
jmp
adc
sub
out
sbb
xchg
pushf
dec
fbstp
and
jg
std
daa
mov
adc
add
movsl
mov
and
sbb
negb
mov
sbb
leave
popf
inc
cli
jl
lods
jg
decb
test
popf
sbb
and
lcall
mov
lret
aaa
sbb
mov
mov
lds
mov
dec
and
cmp
push
ret
outsb
and
iret
ret
sbb
popf
ficomps
sbb
popf
sbbl
in
jno
roll
mov
addr16
hlt
daa
jg
sbb
xchg
sbb
dec
fsubrs
mov
jmp
sbb
test
popa
adc
popf
ret
loop
mov
and
movsb
jecxz
mov
adc
and
push
aas
and
sub
and
scas
sub
sahf
into
pushf
out
test
xchg
sbbl
xor
sbb
cmpsl
jb
sbb
lods
les
popf
pusha
sbb
sub
pusha
fmul
add
int3
scas
and
int3
das
mov
loopne
ret
fdiv
add
and
sbbl
popf
mov
shll
adc
loop
lds
mov
cmpsl
cmpsb
test
hlt
and
add
loopne
mov
inc
mov
popf
lahf
mov
push
lds
fcmovnu
ret
add
jl
lds
xor
and
and
add
sbb
cld
add
mov
mov
xchg
pop
push
sbb
sub
jmp
sahf
insl
pushf
push
lods
sbb
adc
std
dec
popf
insb
pop
ret
popf
dec
sbb
insl
movsb
pusha
out
out
popf
and
dec
or
mov
iret
movsb
popa
out
lods
psrad
dec
fisubrs
popf
mov
mov
inc
fdivl
sbb
and
add
adc
sbb
lahf
fsubs
mov
xor
test
rclb
sbb
push
and
jl
lods
jg
mov
loope
and
mov
jecxz
and
loop
fsubl
addb
mov
inc
cmp
adc
in
loopne
sub
mov
jecxz
test
cmp
jecxz
sbbl
mov
aad
mov
lods
add
sbb
dec
and
and
push
mov
and
je
cli
rcrl
nop
jge
ficomps
rcl
enter
jecxz
movsb
pop
xchg
mov
sbb
leave
sbb
sub
and
xor
shrl
mov
add
and
ret
movsb
jecxz
and
jl
int
popf
negb
mov
mov
pushf
orb
xor
daa
mov
pushf
dec
cmpsl
xor
dec
sarb
popf
loopne
and
lods
lods
int
int3
or
add
popf
lea
popf
into
jg
sbb
dec
and
out
aam
das
loop
dec
add
mov
arpl
sub
sbb
add
and
pop
out
sbb
pushf
stos
les
in
stos
loopne
sbb
adc
enter
fadd
xor
sub
popa
push
sbb
jge
add
push
mov
add
andl
les
push
sahf
add
and
loopne
adc
flds
pushf
mov
add
mov
push
adc
out
popf
movsb
jle
int
jl
mov
and
movsl
dec
cmp
jg
sbb
sahf
dec
sarl
popf
rcrl
and
and
mov
jo
sbbb
jb
xchg
pop
cmpsl
fistpll
jg
sub
mov
imul
andb
das
inc
pusha
sbb
loope
popf
sub
int3
popa
clc
mov
loop
jl
lods
jg
mov
jecxz
sbb
inc
mov
in
mov
stos
stc
sbbl
sub
ljmp
daa
sub
dec
and
scas
sbb
ds
popf
into
mov
lods
mov
dec
int
fimuls
and
movsl
outsb
and
popf
iret
lods
cpuid
sahf
das
lods
add
mov
jecxz
pushf
fninit
popf
and
outsb
lahf
mov
es
cmp
jg
sub
mov
sub
and
dec
mov
adcb
shll
popf
and
mov
inc
add
int
fsubp
andb
mov
jo
lds
pushf
inc
jp
orb
and
loopne
lock
mov
sbb
insl
stos
sbb
popf
sbb
dec
out
popf
and
lods
lods
int
int3
or
insl
shl
rcrb
cs
dec
mov
iret
int
pop
dec
int
mov
popf
mov
out
sbb
inc
xchg
pushf
sub
pop
mov
fists
sbb
sahf
sahf
rclb
movsb
and
cs
imul
mov
jge
sahf
sahf
popa
mov
mov
sub
scas
popf
call
enter
faddl
adc
pop
andl
xor
aad
cmc
daa
movsl
pushf
roll
sbbl
jae
sbb
pushf
rol
cmp
pushf
mov
test
pushf
pusha
in
push
popf
scas
pop
loopne
in
mov
in
adc
push
popf
into
movsl
popf
out
clc
dec
sbbb
iret
loope
out
lods
punpcklwd
loop
leave
sbbl
pusha
jle
popf
lahf
mov
in
mov
jg
sub
mov
mov
and
jecxz
and
loope
popa
cmp
popf
popf
and
popf
mov
add
enter
test
ja
in
pop
mov
cmp
sub
nop
popf
lds
lcall
scas
mov
or
mov
dec
bound
int
dec
int
pop
out
call
cmp
sbb
imul
sbb
jno
scas
sbb
lods
xchg
test
sub
fcomip
test
cmpb
jg
sub
rcrl
sbb
xor
cmp
loopne
sub
scas
sbb
aas
inc
mov
ret
scas
popf
sub
mov
mov
int3
jecxz
sbb
mov
and
lods
movsb
dec
pushf
mov
sbb
sbb
jmp
push
mov
pop
jg
adc
mov
sbb
int3
xchg
xlat
lahf
stc
sub
divl
cmp
pushf
sbb
cltd
in
repnz
pop
int3
mov
mov
cmp
and
popf
std
popa
xor
push
aas
add
cli
sbb
push
sbb
cmp
pushf
push
sbb
cmp
or
mov
mov
movsb
ss
pushf
pop
cli
mov
mov
xchg
adc
inc
bnd
movsl
pop
mov
sbb
inc
xor
mov
lods
sarl
pushf
nop
pop
pop
mov
testl
mov
pushf
stc
mov
push
jae
shll
sbb
mov
insl
sbb
pop
and
loop
loopne
stos
or
lret
pushf
adc
in
cli
cmp
mov
pushf
sti
xor
pushf
pop
mov
pusha
jno
sbb
mov
inc
mov
ret
popf
add
fsubl
sarb
shr
cmp
pushf
xor
dec
mov
pushf
xchg
stos
shll
mov
incb
mov
and
movsb
and
pushf
popa
jno
scas
sbb
mov
add
xchg
fldt
push
push
jbe
hlt
hlt
jns
js
mov
bnd
adc
lods
xor
jb
xchg
movsl
pusha
cltd
mov
pop
mov
jmp
cmp
or
imul
sub
mov
negb
jnp
push
xor
inc
xor
fiadds
pushf
mov
cmp
push
sbb
test
jae
out
loope
lods
lods
dec
push
xorb
and
sub
sub
in
add
pop
sti
cmp
jp
xor
xchg
jnp
dec
into
mov
setl
jp
cwtl
pushf
jno
jo
in
sbb
pop
dec
mov
xchg
pop
xor
fdivrs
adcb
roll
mov
pushf
push
negb
sahf
dec
sbbl
outsl
jecxz
sbb
popl
mov
inc
negb
adc
xorb
rcl
xor
inc
pushf
popa
mov
mov
dec
xorb
mov
sahf
loop
mov
pusha
test
and
cmp
pusha
mov
pushf
jbe
push
fs
hlt
insb
fdiv
inc
data16
jbe
push
aas
lar
incb
sbb
aaa
mov
sbb
jecxz
popf
dec
pusha
popa
push
sbb
divb
pushf
repz
xchg
mov
fldenv
pusha
iret
ret
out
loop
mov
mov
mov
int3
popf
leave
xor
jmp
cmp
xchg
jbe
popf
xor
pushf
in
mov
ds
dec
shlb
enter
mov
ljmp
aam
sbb
lods
pop
adc
xor
js
cmp
pop
test
or
mov
mov
or
mov
stos
mov
ret
jmp
fmull
and
mov
lods
mov
cmp
cmp
scas
popa
repz
mov
sub
xor
adc
sub
insl
cmp
xchg
cwtl
pushf
pop
inc
pushf
jmp
jecxz
sarl
ds
mov
scas
sbb
xor
push
shld
popf
jbe
popf
xchg
outsl
popf
mov
out
lock
daa
mov
xlat
push
mov
nop
push
jnp
ss
popf
aaa
xor
adc
sarl
mov
lods
add
test
xor
jno
inc
clc
arpl
pop
mov
xchg
fdivrl
pop
dec
and
mov
inc
int
sbbb
mov
inc
and
adc
loope
pushf
repz
sbb
jo
pop
xchg
xor
outsl
pushf
sbb
lds
cmp
pop
mov
jg
jle
cmp
loopne
inc
add
pop
pushf
inc
lds
pushf
jnp
xchg
pushf
flds
sub
mov
leave
sbb
jl
loope
test
idiv
aaa
mov
fnstenv
pushf
dec
sti
inc
push
popf
and
stc
mov
pushf
sti
push
cmpsb
xchg
fsubrl
cmp
mov
mov
rorl
push
fcomi
pushf
lock
aas
imul
jb
sbb
xchg
inc
cmp
mov
orb
int3
sahf
push
sub
adc
mov
cltd
cli
xchg
sahf
push
negb
ja
out
loope
icebp
addb
lahf
mov
mov
sbb
pushf
es
divl
sti
add
sbbl
popf
xorb
stc
mov
mov
test
lret
cmp
pushf
adc
out
mov
cmp
lcall
lret
pushf
fwait
mov
test
push
push
add
out
loope
cltd
std
xchg
stc
pop
xchg
out
and
pushf
test
xchg
sbb
out
push
mov
add
adc
out
loope
xor
into
pushf
testb
lds
pop
call
inc
pushf
xchg
daa
ss
sbb
loope
test
mov
cli
fwait
mov
pop
test
loop
xchg
xor
xor
stc
insl
pushf
out
jnp
pushf
insl
sbb
test
out
sarb
pushf
repz
mov
jmp
push
pushf
sbb
es
pushf
inc
mov
stos
mov
mov
pushf
mov
xchg
sbb
roll
into
pushf
inc
sti
std
sbb
sbbb
sbb
sbbl
outsb
pop
cmc
ja
cmp
rcrl
mov
lret
negl
pop
insl
push
pushf
push
sbb
mov
pushf
cmp
rcrl
cwtl
sbb
push
cmp
inc
pushf
addr16
inc
cmp
mov
popf
xor
mov
or
ret
inc
xchg
loopne
pusha
push
pushf
push
sbb
push
push
xor
pop
xor
test
xor
dec
cmp
popf
push
pop
cmp
push
cmp
movsl
pushf
jno
cmp
sti
sub
rcrl
popf
jae
popf
flds
jecxz
and
fdivrl
cmp
pushf
xchg
pop
rcrl
xor
clc
xchg
es
popf
fnstcw
pushf
dec
pop
mov
sbb
orl
mov
movsl
fcompl
xchg
addr16
sub
popf
jnp
jns
int
aas
pushf
das
mov
sti
add
mov
sub
cltd
in
sahf
stc
xchg
xchg
pushf
flds
adc
dec
sbb
outsl
pushf
out
sub
jno
pushf
adc
fs
fmull
cmp
outsb
cmc
pushf
jns
jmp
mov
fcomps
ficomps
adc
mov
mov
cmp
pushf
jp
pushf
xchg
test
fwait
int
xchg
xchg
pop
mov
nop
stos
push
dec
daa
pushf
inc
ficoml
repz
pushf
sbb
movsl
fdivrl
jbe
push
jns
popf
pushf
cltd
mov
and
fs
lret
lcall
loope
sahf
repz
sahf
out
sbb
aaa
mov
ja
sbb
fimull
faddl
cmp
pushf
push
xor
mov
mov
lock
out
pushf
out
outsb
cwtl
xor
fistpl
rcrl
cmp
imul
mov
pushf
push
dec
cs
xor
in
pushf
shrl
push
xchg
in
pushf
add
pushf
push
jecxz
mov
push
cmp
daa
and
pop
jp
sti
xchg
popf
add
fcomps
push
cmp
mov
popf
xor
pushf
fucomi
shlb
hlt
fwait
mov
add
dec
jne
adc
mov
sbb
icebp
lock
sbb
sbb
fcomps
pop
loope
mov
lods
mov
or
pop
dec
inc
mov
lcall
call
aad
jle
es
ja
sbb
cmc
dec
or
sahf
popf
dec
cwtl
and
iret
mov
pop
sti
push
cmp
pushf
fwait
pop
flds
stc
adc
jae
js
adcb
xchg
gs
loope
pop
jae
mov
pop
sti
sahf
les
hlt
outsb
fsts
dec
sbb
pushf
xchg
xchg
mov
xor
clc
xchg
xor
mov
lret
and
push
pushf
jnp
fnstenv
inc
mov
fcmovu
push
clc
xchg
lcall
pushf
lret
push
sti
push
xor
movsl
and
pushf
sbb
out
stc
mov
cltd
clc
pushf
jno
push
mov
in
aad
sbb
repz
xchg
neg
int
arpl
pushf
jnp
pop
fwait
push
cmp
popf
jecxz
aaa
sub
pushf
sub
movsl
sbb
cmp
or
lods
cmp
cmp
aaa
clc
mov
pushf
shlb
stos
xor
dec
cltd
mov
sbb
mov
mov
inc
jae
test
movsb
outsl
pop
sti
cmpsb
cmp
pushf
jp
ss
ljmp
sbb
repnz
jmp
fcom
lcall
mov
add
cli
sbb
leave
mov
or
clc
mov
mov
setl
out
pushf
out
mov
cmp
mov
shll
pop
pop
jae
push
dec
shll
pushf
shrl
cmp
adc
outsb
addr16
adc
sbb
sbb
dec
pushf
inc
cmp
mov
cmp
dec
ficompl
ljmp
ds
out
sbb
mov
push
mov
cmp
das
pop
inc
sbb
lds
cmp
popf
push
arpl
fadd
ss
add
sti
inc
xor
mov
popf
xchg
shll
mov
lea
mov
popa
mov
cmpl
pop
aaa
pop
jo
dec
testl
cltd
aaa
xchg
xor
and
pushf
mov
push
mov
and
mov
pushf
inc
out
sub
lods
stc
sbb
out
push
test
pop
mov
sahf
cmp
mov
mov
xor
cmpsb
sbb
xchg
mov
gs
js
cwtl
fistpll
xor
call
mov
out
xchg
test
fisubs
pushf
or
mov
out
cmpsl
sub
mov
adc
lea
ficoms
imul
or
ret
and
xlat
xchg
or
icebp
fildl
scas
stos
stos
push
outsb
cltd
xchg
and
xor
mov
mov
enter
js
mov
xchg
mov
mov
ljmp
jnp
pop
mov
test
mov
mov
mov
int3
testl
sub
jge
dec
xchg
adc
xchg
cmc
lods
sahf
push
cld
xchg
dec
test
dec
mov
test
mov
rclb
outsl
mov
sahf
jl
xorl
leave
adc
sbbl
subl
mov
cli
jnp
pop
adc
aas
sahf
push
cld
jecxz
test
sahf
mov
jno
mov
jge
mov
sbb
test
insl
mov
inc
mov
cmpsl
movsb
repz
mov
mov
sti
cltd
lods
popa
mov
adc
adc
test
sub
mov
out
int
dec
mov
lods
leave
into
mov
leave
mov
push
adc
mov
push
cmp
inc
fsubrl
gs
add
mov
and
lret
xor
pop
cmp
lds
popa
mov
scas
adc
push
fdivl
loope
xor
push
jecxz
mov
push
cld
xor
aad
fsub
xor
mov
jle
mov
aas
mov
popf
xor
ljmp
add
sub
lahf
shll
pop
jp
jnp
in
ds
adc
cmp
mov
mov
dec
enter
xor
loop
faddl
cmc
fdivrl
lds
jle
mov
push
mov
cmpsb
adc
cltd
mov
mov
xchg
mov
jnp
cmp
sbb
jge
cli
mov
fmuls
cmpl
cmc
mov
sbb
jae
xchg
sbb
dec
or
pop
int
faddl
mov
xor
into
movsb
xlat
notl
aaa
dec
mov
es
or
jl
mov
jl
inc
push
aam
cmp
sub
roll
repz
int
pusha
out
shll
xor
lret
push
shlb
jnp
cltd
cmpsl
cmpb
mov
fsts
mov
ja
cli
lfs
loopne
rorb
hlt
sbb
xor
sub
repz
and
xchg
fcompl
push
and
mov
rcll
aaa
aas
sub
jp
test
cmp
fdivl
sub
fdivs
mov
cli
loope
loopne
sarb
sub
aam
pop
in
sahf
add
scas
lret
into
and
sub
mov
sub
shr
mov
sbb
fildll
sub
jg
sbb
pop
mov
mov
push
in
xor
xchg
in
xor
xchg
mov
cmp
jp
adc
insl
aaa
xor
sub
arpl
sbb
out
scas
inc
addr16
add
inc
lret
cli
idivb
xchg
mov
sahf
mov
jns
fsubrl
fisubrl
icebp
jl
aad
adc
lea
xor
aaa
sub
mov
sub
arpl
push
and
pop
mull
fwait
jg
mov
pop
add
mov
mov
xchg
cmp
outsl
xor
cmp
push
xchg
push
cmp
loope
sub
cmc
mov
pop
adc
jg
or
lahf
pop
xor
popf
xchg
lods
lods
adc
lods
imulb
shll
lea
cmpsb
mov
cmpsl
aaa
push
jecxz
movsb
mov
jecxz
mov
sub
mov
and
lock
aas
fidivrl
dec
or
push
lods
and
aam
mov
mov
aam
dec
movsl
jmp
mov
mov
mov
push
or
sahf
scas
jbe
mov
adc
push
xchg
sub
mov
jmp
pop
adc
sahf
loop
imul
or
push
iret
aad
cmpsb
or
add
jl
xlat
jo
popa
test
aam
notl
lds
sub
mov
mov
in
mov
xchg
mov
jbe
movsb
pop
mov
sub
mov
push
sub
lods
arpl
jge
xor
fidivs
cmpsb
xchg
popf
xchg
scas
sahf
adc
push
jb
xor
mov
sub
sbb
scas
int3
lods
push
dec
test
ss
scas
sub
push
scas
aas
pusha
and
jl
jbe
hlt
ret
xor
inc
mov
scas
popf
mov
jg
add
es
jl
aaa
rcl
push
cltd
cmp
sub
mov
mov
push
imul
xchg
out
repz
mov
add
xor
movsl
push
sahf
adc
pop
jno
jecxz
repnz
lahf
jb
lods
repz
popf
aam
lahf
mov
lods
and
cmp
mov
lahf
mov
inc
aam
shl
adcl
les
push
aam
movsl
test
test
cmc
mov
push
ss
dec
mov
mov
lods
push
pusha
cmp
dec
ret
xchg
jbe
mov
xor
mov
and
lock
fnsave
mov
icebp
and
shr
scas
ret
sahf
rorl
or
xor
or
xchg
sub
cmc
in
pop
aas
and
loopne
mov
and
mov
nop
pop
lods
sub
mov
pmuludq
les
push
jl
test
or
push
jns
out
xor
fbstp
out
and
stos
push
into
movsb
dec
push
cmp
aam
dec
mov
lods
popf
dec
ret
popf
shlb
push
cld
sub
popf
push
gs
mov
xor
xor
popf
mov
mov
mov
mov
mov
rcl
cmpsl
and
cs
adc
dec
mov
push
push
mov
sub
das
frstor
xor
push
sahf
loopne
sub
ss
and
xor
pop
mov
sti
and
test
out
pop
scas
mov
jnp
pop
fsubl
das
in
mov
add
inc
xor
xchg
call
push
fistpl
or
mov
jmp
mov
dec
scas
sub
je
jge
xchg
or
loop
insb
movsb
sub
in
mov
add
scas
cmpsb
xor
jbe
mov
clc
xor
cmp
and
sbb
jnp
push
fmulp
aam
cmp
pusha
sub
out
loope
mov
add
cmp
inc
les
adc
mov
cwtl
mov
xor
cmp
gs
sbb
hlt
mov
sub
in
xor
inc
push
stos
int3
sub
mov
pusha
xorl
xchg
xor
ja,pn
cwtl
jecxz
sub
or
sti
test
movsb
cs
test
mov
fisttpll
std
int
jg
sbb
into
sbbb
es
les
lock
popf
jo
jl
inc
cmc
mov
mov
fists
mov
mov
push
sub
mov
xchg
int3
mov
mov
mov
jg
hlt
imul
adc
mov
cmp
xor
arpl
xor
inc
les
hlt
lods
pushf
sbb
and
inc
cmpsb
xor
mov
lods
pop
push
sahf
sub
and
cs
es
sub
and
lods
mov
jb
int
xchg
test
in
test
shrl
or
adc
xor
push
int3
cmp
stos
mov
inc
push
nop
ficomps
cmp
and
xchg
mov
jmp
cmc
scas
mov
sbb
sbb
cmp
mov
push
popa
hlt
mov
or
push
push
inc
xor
punpcklwd
popl
mov
fdivs
es
fists
in
cmp
mov
add
cmpsl
addr16
jg
call
in
mov
mov
dec
movsl
pusha
shrl
aad
jecxz
stos
stos
cmp
int3
pop
addr16
push
les
xchg
movsl
popf
movsb
push
addr16
out
icebp
int3
sub
lea
and
mov
aam
xlat
xchg
lods
popf
pop
rcrl
or
sahf
mov
sbb
int3
sub
cmp
sub
daa
cmc
daa
and
sbb
daa
adc
mov
movsl
push
xchg
test
fdivs
push
movsb
and
ss
lods
out
mov
pop
push
mov
mov
jbe
sub
divl
insl
test
xchg
cli
js
mov
jnp
adcl
jne,pn
mov
mov
stos
mov
add
adc
cmp
sbb
or
mov
ss
cmp
push
push
xor
cli
dec
sub
xor
jnp
xor
pop
sbb
fdivl
sahf
int
iret
movsb
cwtl
aam
cmp
add
jp
mov
sahf
sbb
cmp
fcmovu
mov
hlt
pop
lcall
and
lea
cmpsb
lods
fsubs
push
mov
add
xchg
push
lods
push
cmp
movsl
lods
outsl
xchg
mov
mov
xor
out
mov
and
jp
nop
mov
mov
lcall
les
xor
popf
sub
xchg
stos
pop
popa
aas
out
xor
aam
das
ret
mov
pushf
lock
data16
popf
pusha
hlt
and
mov
mov
xchg
rclb
mov
notl
adc
push
and
call
mov
popf
inc
push
push
sbb
adc
mov
test
xchg
jge
adc
in
mov
ret
xchg
inc
xor
add
stos
fs
insl
mov
ss
and
aas
ss
xchg
mov
cmpsl
mov
icebp
insl
lods
hlt
jno
fmuls
jnp
xchg
xchg
mov
rcrb
movsl
arpl
xchg
cs
pushf
lds
sbb
pop
stos
mov
mov
xlat
pop
js
cmp
scas
mov
addb
dec
cmc
dec
mov
sbb
lods
mov
notb
inc
pushf
aam
mov
cmc
mov
mov
mov
stos
xlat
sbb
cmp
iret
lods
and
test
outsb
dec
lods
mov
jmp
sti
in
mov
or
mov
or
cmp
cmp
mov
pushf
pop
sbb
in
mov
adc
rcrb
jl
ss
mov
cwtl
mov
aad
adc
stos
xchg
mov
xchg
je
inc
stos
sub
sbb
in
dec
test
loopne
pop
push
popf
test
mov
or
cwtl
idivb
jo
sub
and
jb
adc
jae
xchg
stc
push
cmp
jne
jecxz
adc
cmp
add
xchg
mov
add
cmp
clc
adc
mov
dec
aaa
shrl
add
add
push
cmp
loope
movsb
adc
movsb
xchg
push
popf
inc
ja
les
sbb
ja
jne
xor
mov
cmpsl
jns
add
mov
mov
jnp
mov
xchg
xor
inc
add
push
loope
daa
mov
mov
lds
into
lods
push
out
arpl
xor
mov
daa
es
jge
xor
mov
add
xchg
cmp
mov
xchg
sahf
cmpl
inc
lods
popf
mov
clc
mov
lea
mov
sbb
xchg
fiaddl
loop
sbb
or
sbb
jns
stos
adcb
inc
push
sbb
xchg
inc
mov
out
mov
or
mov
xchg
sub
lods
push
pushf
and
lret
and
in
xor
push
mov
push
xor
ret
push
inc
inc
les
sub
insl
lods
insb
mov
cwtl
test
jmp
repz
aaa
sbb
pop
mov
push
out
es
xchg
repnz
fldcw
aas
add
stos
mov
mov
cli
adc
cmpsb
pusha
cwtl
push
pop
jecxz
adc
fcoms
mov
repnz
cmp
ss
lods
add
cmpsl
and
sbb
lret
sub
and
pop
adc
popf
dec
mov
and
jnp
push
pop
lods
mov
mov
jp
mov
jg
sti
mov
sbb
popf
xor
adc
jb
cmp
jbe
les
push
lods
shrl
xor
idivb
addr16
movsl
pop
out
rolb
sub
cmp
fmull
xchg
xchg
lods
push
pushf
sti
jp
sti
popf
mov
jae
out
cmp
mov
imul
clc
mov
daa
pop
xor
orl
in
pop
mov
mov
lds
mov
push
leave
push
sahf
cmp
mov
add
repnz
xchg
aaa
mov
stos
cmc
imul
pop
lahf
sti
fdivl
mov
jns
cmpsl
outsb
popa
pop
sub
mov
lds
or
push
mov
sub
cmpsb
xchg
or
dec
repz
fcompl
les
hlt
lods
push
push
shrb
scas
ficomps
sub
lods
mov
or
adc
loop
mov
sbb
push
cmp
mov
mov
sahf
mov
mov
std
cmp
movsl
sarl
lret
mov
lods
sti
loop
cs
push
mov
push
lds
fwait
jb
out
cmp
and
lods
pop
and
pop
aaa
jae
mov
fidivrs
adc
lds
mov
dec
sub
mov
sarl
push
xchg
dec
xor
cmp
cmp
ljmp
aaa
cmp
lods
xor
dec
sub
lods
cli
xor
and
sub
xchg
shlb
and
sbb
enter
mov
push
mov
fwait
repz
test
das
mov
jge
adc
into
jecxz
and
cmc
push
pop
lods
mov
mov
mov
xchg
cmp
and
adc
sub
cmpsl
xor
and
jns
xor
and
sbb
mov
mov
mov
add
lds
xlat
xor
incb
jge
and
js
das
cmp
inc
xor
sub
push
lods
test
scas
lock
stos
xor
outsl
popf
fidivrs
adc
xor
lods
push
arpl
jge
ss
jle
sbb
mov
aaa
icebp
sub
movsb
mov
cwtl
mov
cmp
jnp
mov
lock
into
arpl
jne
cmpsl
jae
movsl
mov
push
int3
mov
push
mov
jnp
and
mov
cmpsl
xor
call
push
jg
sarl
add
jle
jae
aaa
idivl
mov
mov
dec
xchg
xor
lods
stc
fadds
xchg
cmc
lahf
pop
pop
and
insl
std
sub
and
mov
shlb
mov
das
dec
scas
fwait
xor
jbe
hlt
ret
sub
lds
mov
ficoms
xchg
mov
mov
loopne
mov
scas
xor
ja
and
push
lods
fwait
scas
sub
in
jnp
in
push
pop
and
repz
popf
xchg
mov
in
and
lea
in
sub
xchg
xorl
sub
nop
add
add
mov
dec
pushf
xchg
aad
xchg
push
push
xchg
loopne
shlb
std
repnz
dec
test
hlt
popf
mov
setae
sub
mov
or
push
jecxz
cs
out
mov
data16
jle
pop
pop
xor
ds
jmp
das
fidivs
stos
pop
pop
push
and
sub
and
add
das
mov
out
fidivrs
mov
arpl
push
jge
xchg
mov
aad
mov
inc
mov
imul
dec
mov
xor
mov
rcrb
outsl
out
popf
xor
sbb
lods
push
jns
sbb
xor
int3
sbb
stos
fcoml
sub
jg
hlt
imul
aam
xlat
adc
lods
lds
inc
push
test
lret
pushf
push
call
dec
and
daa
ret
lahf
outsb
loope
xor
lods
mov
mov
scas
inc
mov
test
repz
jle
adc
jle
mov
adc
icebp
sub
xchg
lods
shll
sub
xor
xchg
mov
loopne
mov
lret
jae
mov
push
mov
insl
lods
sub
push
sahf
jge
adc
lods
push
jo
lahf
mov
or
pop
sbb
test
ss
adc
mov
adc
mov
cmp
jecxz
lods
les
push
cmp
dec
cmp
add
cli
pop
cmp
out
cmp
mov
or
sahf
stos
sti
jp
addr16
enter
out
push
or
sbb
rcll
pop
sbb
mov
mov
scas
das
lcall
mov
aam
xchg
movsl
lods
scas
stos
fsubrs
push
xor
popf
arpl
jae
dec
pop
hlt
inc
fwait
bound
pop
mov
popf
push
aad
sub
scas
and
sahf
shl
sbbl
pop
sbb
dec
jecxz
mov
rclb
in
dec
push
je
adcb
pop
roll
lods
adc
popf
and
sbb
pop
xchg
repnz
addb
add
adc
xchg
shll
xchg
repnz
cmp
sub
imul
clc
je
dec
dec
sub
xchg
shrb
mov
lods
hlt
or
push
pushf
and
mov
mov
ds
lods
push
jno
mov
das
clc
mov
cmp
cmp
dec
dec
jns
sub
leave
mov
jns
xchg
pop
fsubs
adcb
insb
mov
fbstp
out
sub
inc
xchg
xchg
lods
mov
sbb
mov
stos
aad
jns
add
mov
xchg
lods
dec
inc
mov
mov
pushf
and
ja
cmp
push
ret
pushf
xor
xor
sub
shlb
pop
ficoml
pushf
movsl
lods
push
xchg
cmc
pushf
clc
imul
pop
sbb
pop
test
fdivs
nop
lods
xor
mov
stos
dec
in
pushf
add
add
push
pushf
fcmovb
add
inc
push
lods
outsl
mov
cmp
clc
scas
mov
repz
cmp
pop
int3
pop
jg
sbb
sub
repz
je
pushf
movsl
cmp
stos
cmpsb
test
inc
ss
fsubl
mov
hlt
lods
fdivl
pushf
push
adc
add
popf
sbb
push
and
xchg
or
add
leave
imulb
pushf
add
pushf
xchg
mov
in
or
movsb
in
std
xor
add
push
adc
shll
and
into
out
mov
fcmovnb
roll
inc
dec
pop
lds
aaa
scas
mov
dec
xchg
aaa
push
mov
mov
cmp
and
mov
mov
adc
push
push
pop
sbb
scas
push
cmp
cmp
sbb
jp
and
mov
inc
jne
sub
pop
dec
scas
lret
cld
or
sub
cmp
mov
dec
push
call
fldcw
mov
stos
movsb
out
push
xor
adc
mov
mov
dec
mov
stos
mov
and
in
mov
cs
and
cmp
push
push
mov
sub
imul
es
dec
int3
mov
repnz
fcompl
cmp
movsl
xchg
dec
mov
cmp
call
lret
es
fisubl
mull
lahf
in
mov
xchg
hlt
xor
adc
adc
sub
adc
lcall
les
xor
push
xor
sub
sub
je
pop
xor
or
shll
and
test
and
mov
test
sub
scas
and
cwtl
aaa
mov
sub
and
mov
mov
jne
sub
int3
and
xchg
jno
mov
stc
int3
aad
sbb
bnd
popf
cli
fsub
mov
rcrl
mov
loop
jns
and
mov
mov
loope
mov
xor
or
push
nop
add
push
or
lds
ss
popf
popa
out
fstl
dec
xlat
shlb
ds
sbb
movsb
xchg
cmp
jo
sbb
and
and
fidivrs
cmp
inc
mov
daa
movsb
cmpsb
or
cmp
aaa
outsb
daa
push
add
divl
dec
repnz
les
xchg
movsb
aad
mov
xchg
jns
cmp
call
leave
sbb
cmp
cltd
aam
adc
and
scas
mov
sbb
mov
dec
popf
pop
mov
outsb
sbb
sub
fmul
cli
outsb
mov
clc
fsubl
cmp
insb
dec
sbb
mov
aaa
subb
and
cmp
fs
dec
loop
pusha
cmp
pop
sahf
adc
push
aam
ret
sahf
mov
xor
enter
ret
lahf
cld
cmp
add
pop
fidivrs
lahf
cmovne
enter
enter
ret
mov
cld
cwtl
xchg
push
cmp
pop
sbb
sub
repz
xchg
aad
cmp
xchg
sbb
aam
icebp
cmc
jbe
pop
cld
xlat
xchg
lcall
lods
mov
xchg
hlt
mov
ficomps
inc
lds
inc
mov
xchg
xor
pop
loop
ret
jbe
pop
out
jbe
iret
and
lret
sub
inc
ds
fisubrs
xor
pop
movsb
es
stos
sub
ret
aam
sbb
cmp
aad
push
and
mov
add
pushf
movsb
std
scas
pop
nop
cmp
and
scas
xlat
cmp
add
dec
call
jg
les
js
into
xlat
and
lea
jg
test
fdivrl
pop
sbb
xchg
add
loop
das
or
sarb
out
jl
mov
cli
xchg
icebp
adc
gs
cld
cmc
push
je
push
xor
mov
jmp
shll
fistpl
cmp
and
xchg
pop
adc
popa
dec
sbb
and
hlt
sbb
repz
mov
xor
pop
addr16
mov
cld
mov
sub
popf
inc
lods
mov
ret
enter
inc
stos
cwtl
in
mov
jecxz
push
sbb
cld
aaa
mov
mov
clc
mov
xchg
je
fdivs
aaa
pop
pop
aaa
jl
shr
cld
outsb
call
cmpsb
loop
jbe
movsl
xchg
int3
adc
lea
popf
xchg
inc
ret
popf
mov
movsb
insl
or
movsl
cld
inc
or
fdivrs
hlt
and
popf
xchg
sahf
adc
fwait
aam
fadd
sbb
popf
ret
mov
or
popf
je
mov
icebp
cwtl
fsubr
sbb
popf
call
pop
jl
and
jns
mov
pop
jge
movsl
mov
cmpsb
ljmp
movsb
shrl
or
cmpsb
aas
xorl
or
dec
mull
aaa
sbb
popf
outsb
sahf
or
cmpsb
push
cmp
outsb
movsb
or
or
pop
test
jl
loop
mov
movsb
je
jo
push
shlb
popf
rcrb
movsl
inc
or
add
int3
or
movsl
sbb
pop
rol
fcoml
or
sahf
mov
int3
or
movsl
sbb
add
xchg
pop
or
mov
jne
hlt
fdivl
icebp
popf
outsl
sahf
out
mov
int3
call
popf
arpl
fistps
fwait
sbb
lods
gs
push
faddl
sbb
sahf
lock
into
sub
aam
cld
popf
pushf
cmp
movsl
mov
aam
or
loopne
xchg
jno
adc
cld
sahf
add
das
movsl
sarb
xchg
sar
lcall
add
pop
repz
dec
clc
mov
es
dec
pop
adc
or
xor
pushf
fidivl
xor
jge
popa
fwait
push
mov
push
inc
xchg
dec
dec
jecxz
loopne
sti
ljmp
loope
mov
cld
in
addr16
jmp
inc
pushf
adc
out
mov
icebp
inc
add
pop
orl
mov
adc
adc
fcoml
lea
fcom
pushf
lods
das
stos
stos
inc
cld
xor
cld
sbbb
cltd
cmp
out
fldt
daa
cmpsl
sbb
xchg
dec
push
dec
je
mov
ud0
test
adc
add
aas
pushf
adc
ljmp
pushf
xchg
cltd
xchg
mov
sbb
mov
mov
or
mov
out
and
xor
push
sbb
inc
repz
sbb
stc
ds
xchg
hlt
in
cmp
movsb
fstl
mov
cltd
and
std
js
xchg
cmp
push
mov
pop
lods
js
sar
pushf
mov
adc
jp
and
in
jl
cmp
and
cmp
push
icebp
mov
cmpsl
push
xchg
mov
xchg
roll
cld
push
xor
mov
mov
in
mov
sbb
xor
insl
das
xchg
xchg
pushf
lods
pop
je
sbb
adc
cld
add
adc
pop
call
movsb
or
dec
pushf
or
jo
rcrl
enter
mov
repnz
xchg
cld
inc
mov
sti
mov
jne
add
pop
push
adc
dec
inc
lods
mov
std
pushf
mov
mov
int
pop
and
out
cs
sbb
and
pushf
fwait
notl
fptan
xorb
cld
dec
sti
es
sub
sub
jmp
adc
out
aad
stc
adc
in
or
inc
repnz
aam
aas
xchg
jb
pop
pushf
lret
je
std
xchg
cmp
sub
aad
std
and
mov
aam
lcall
cmp
pushf
je
mov
mov
sbb
and
in
jge
ja
xchg
sar
cmpsb
testb
pop
mov
iret
pushf
xchg
dec
ss
jo
adc
ljmp
jmp
cli
aas
pop
adc
mov
in
pushf
push
mov
pusha
sbb
mov
xlat
xchg
mov
sbb
loopne
dec
or
push
xchg
aad
sbbb
cmp
inc
adc
fs
popf
das
pop
sbb
test
xchg
mov
push
mov
insb
in
inc
fsubrl
mulb
int3
xchg
test
arpl
and
notb
mov
movsb
sbb
mov
jge
adc
mov
mov
jl
mov
and
or
or
xchg
aas
les
shr
push
ja
dec
bts
loop
ret
movsb
shll
mov
cmpsl
fdivrl
je
scas
pop
in
aaa
mov
ja
or
pop
mov
mov
cmp
dec
mov
mov
jbe
xor
leave
jp
ljmp
push
xor
leave
jp
jns
ss
add
sub
jecxz
fbld
cmp
out
or
sahf
push
ror
icebp
sub
addl
mov
sbb
mov
mov
adc
insl
lcall
sub
pushf
xor
mov
aaa
jl
shll
adc
push
mov
mov
adc
xchg
aad
push
divb
icebp
xchg
lea
jg
je
adc
push
adc
rol
idiv
leave
pushf
xchg
ds
fidivrs
mov
and
cld
test
ficoms
sbb
data16
mov
stos
mov
movsl
jl
ficomps
mov
lods
mov
mov
pushf
mov
jbe
cmp
jno
hlt
xor
xchg
in
movsb
adc
sbb
adc
test
shll
sbb
cld
loope
cmpsl
sbb
xchg
test
mov
jge
adc
sarl
hlt
xchg
jb
scas
addr16
ja
and
enter
sbb
push
lock
fisubrs
popa
test
inc
sbbb
in
lds
mov
mov
ljmp
ret
cmp
or
insl
sbb
gs
ljmp
popf
mov
pop
jns
mov
jge
sub
lahf
cmpsb
inc
mov
mov
cmp
clc
fwait
mov
lret
popf
mov
test
fwait
xor
mov
sub
mov
xor
jl
mov
out
sub
cmpsl
popf
xchg
repz
dec
stos
les
ret
ficomps
enter
lret
int3
into
rcrb
aam
out
mov
ljmp
mov
mov
bound
and
fs
test
inc
pushfw
xchg
dec
push
jmp
mov
sub
insb
mov
push
cs
outsb
mov
xor
pushf
nop
mov
icebp
repnz
push
add
repz
push
je
mov
push
notb
pushf
ss
jbe
mov
neg
pushf
clc
sbb
pop
js
mov
cli
sbb
pop
jp
push
mov
xchg
les
mov
mov
or
jl
dec
pop
mov
xchg
pop
faddp
fadd
jl
lret
mov
negl
mov
jbe
and
fadds
pop
scas
divl
imull
xlat
shlb
jbe,pt
les
adc
imulb
mov
jl
jp
push
mov
roll
imul
loope
fdivl
pop
dec
popa
dec
clc
mov
cmp
sbb
cli
in
loop
or
loopne
insb
aam
and
push
jp
fmull
jb
fs
and
mov
and
pop
cs
sub
push
ss
push
rcrl
mov
dec
inc
test
lcall
out
outsl
lods
icebp
lock
mov
sub
outsl
jne
mov
pop
push
icebp
dec
xchg
jge
loopne
je
pop
imull
jno
test
cld
push
hlt
jecxz
cmp
mov
aad
cmpsl
lret
fidivs
outsb
das
mov
dec
int3
clc
out
xchg
mov
in
mov
cmp
fimull
xchg
hlt
mov
movsl
jecxz
insb
pushf
add
sbb
aad
or
pusha
push
lret
pushf
inc
xor
jno
aaa
shrb
mov
sbb
lods
ljmp
jge
pop
and
pop
jns
mov
outsl
mov
pushf
lea
imul
lahf
dec
fidivrs
in
dec
pop
dec
clc
inc
das
sahf
push
mov
shrb
pushf
cmp
inc
jns
adc
inc
xor
bound
aad
push
dec
ret
dec
fidivrs
loop
sub
push
popa
cltd
add
das
mov
mov
dec
lods
fcoms
repz
inc
pushf
pop
idiv
lcall
out
shrl
out
aas
or
jg
xor
outsb
sarl
and
xchg
push
push
stos
xchg
adc
add
and
fcomps
ja
pop
pop
pushf
pop
mov
dec
pushf
subb
and
sahf
into
in
pushf
xor
repz
out
stc
mov
test
dec
or
sbb
mov
mov
dec
ret
inc
cld
insl
lret
sbb
cwtl
pop
sbb
jmp
mov
movsb
pop
or
xlat
sar
mov
push
js
fcompl
lret
pushf
inc
and
out
mov
xor
sbb
add
pushf
sub
fidivs
or
cld
ljmp
into
bound
pushf
cwtl
xchg
in
les
cs
xor
dec
pop
sub
cmp
inc
lods
adcb
xchg
xchg
or
stos
adc
cltd
xor
pushf
dec
stos
push
lock
add
sarl
mov
lret
cltd
mov
dec
sbb
jl
inc
cmp
ja
sub
xlat
jno
sbb
scas
aas
jecxz
popa
scas
rcll
mov
ret
pushf
mov
jecxz
daa
into
clc
jl
adc
out
push
lret
jmp
or
test
insb
xchg
xlat
insl
cmp
adc
jecxz
jg
mov
out
and
rclb
jne
xor
imul
xlat
xchg
icebp
xchg
ja
push
xchg
outsl
insl
adc
jp
pushf
and
int3
sbb
das
gs
ss
xchg
mov
push
test
push
pop
adc
sub
fstpl
stos
cli
fisttpl
pop
aad
sbb
dec
in
das
mov
loop
mov
pushf
repz
sbb
jmp
jl
pop
pop
push
mov
and
mov
adc
jb
jecxz
out
mov
scas
pop
lds
in
dec
pop
cmp
popf
inc
xchg
insb
in
and
cmp
inc
mov
adc
adc
mov
sarl
mov
cwtl
mov
mov
push
mov
and
test
mov
or
xchg
mov
xchg
hlt
into
jg
sub
call
mov
clc
frstor
sub
int
fnstsw
scas
pop
mov
and
test
inc
mov
rol
inc
imull
out
mov
cmpsl
inc
popf
jl
frstor
sbb
push
mov
ret
bound
cld
iret
mov
cli
xchg
xorl
lahf
xchg
pushf
out
bound
pushf
cwtl
xor
sbb
push
nop
gs
aas
pushf
orb
dec
clc
mov
pushf
push
cmc
inc
pop
xchg
addr16
pushf
icebp
pop
sbb
xchg
mov
pop
shrb
in
enter
or
daa
push
cld
mov
testl
sub
fnstsw
pushf
mov
adc
mov
insl
loope
loopne
ret
outsl
xor
push
int3
in
sbb
aas
in
lods
mov
adc
xor
xor
leave
sub
dec
scas
addr16
cmp
rcrb
fs
add
push
fstpt
ds
ljmp
cmp
and
jl
pop
stc
pop
scas
ds
sbb
std
mov
mov
test
cmc
popf
ljmp
adc
daa
sub
cmp
jge
cmp
std
dec
mov
lahf
ret
popf
lea
lods
cmp
test
arpl
jmp
sbb
shll
push
mov
std
mov
sub
repz
in
fs
ss
or
loopne
fmul
jp
popf
dec
loopne
ljmp
outsb
loopne
lret
nop
popf
movsl
loopne
and
pop
or
lahf
aaa
dec
call
push
fucomp
mov
mov
sub
and
cmp
dec
jb
cltd
xchg
insl
daa
lods
jl
xor
jp
and
rcrl
popf
addr16
shrb
cmp
lret
sub
cmp
sbb
in
sahf
jo
mov
sub
fbstp
movb
popa
pop
lods
mov
shll
mov
ja
cmp
push
xchg
push
sarl
xor
loop
lea
cmpsl
sub
in
movsb
fdiv
rolb
mov
adc
adc
xor
ss
mov
xor
mov
loop
cmp
imul
adc
roll
xor
and
and
push
mov
sahf
mov
lods
mov
add
ror
mov
mov
int
fsubl
push
imul
fldcw
jne
fistpl
mov
mov
mov
push
jns
mov
loop
xchg
and
mov
jle
xor
or
xor
pop
mov
xchg
lock
cld
cmp
pop
xor
fwait
sub
dec
mov
fidivrs
insb
sahf
inc
jg,pn
shlb
sub
push
jl
jecxz
mov
bound
push
je
mov
insl
neg
movsl
fdivrp
mov
shll
pop
cld
mov
pushf
sbb
push
mov
adc
mov
sub
mov
and
lret
pop
xor
divl
bound
imul
pop
xchg
roll
call
mov
popf
movsb
sar
sahf
je
add
mov
or
jns
pop
into
push
jl
out
mov
and
andb
mov
std
and
sub
and
mov
pop
test
ret
mov
mov
lret
mov
pop
pop
fstl
push
xor
rcl
stc
and
jo
inc
xor
mov
jne
jbe
icebp
push
mov
mov
scas
mov
and
sbb
andl
addr16
fidivrl
call
adc
or
fistpl
push
jne
mov
loop
pop
xor
jno
adc
lods
ret
adc
adc
mov
ljmp
das
add
in
je
icebp
loop
sub
fsave
add
and
push
test
cmpsl
mov
sub
clc
ret
jl,pt
pop
mov
jl
idivb
fidivrs
repz
scas
mov
pop
and
ljmp
add
scas
push
sbb
and
pop
inc
sahf
enter
dec
sbb
out
jb
ret
test
push
pop
frstor
ljmp
jb
pop
das
dec
in
ja
and
int
pop
loop
cld
rorb
lea
xor
xor
sub
mov
into
sub
test
mov
mov
xorl
jae
pop
cmp
lea
nop
mov
mov
in
cmp
mov
dec
jl
push
add
clc
es
pushf
addl
and
cmc
lods
icebp
xorb
cmp
andl
mov
or
sbb
add
stc
cld
xchg
jecxz
test
insb
je
pop
pop
dec
inc
push
jno
dec
movsb
pop
push
repnz
push
pushf
outsl
dec
shrb
and
sbb
pushf
add
jl
jp
pushf
addr16
ret
arpl
and
aas
pusha
idiv
xor
scas
test
mov
pop
test
and
mov
aas
ja
or
or
fiaddl
mov
leave
addr16
outsb
or
ja
mov
push
rol
lret
in
insl
jl
ss
adc
mov
ret
inc
pop
inc
sub
sbb
jmp
mov
test
mov
xlat
dec
adc
out
pushf
inc
test
add
and
mov
repz
loop
and
pop
pushf
and
dec
ret
std
jg
fistpll
insb
notl
push
push
adc
lds
add
add
xchg
pushf
xor
pushf
cmp
jge
mov
aas
push
lods
out
incl
in
and
mov
cmp
and
push
sahf
into
pop
mov
sub
loopne
sbb
add
jnp
and
outsl
pushf
lcall
pusha
pop
insl
cltd
jo
movsb
jnp
inc
rcll
in
xlat
xor
inc
adc
jle
int3
jb
in
stos
mov
imul
les
push
sbbl
fisubl
mov
push
leave
mov
adc
xor
mov
mov
out
ret
fisubrs
enter
cmc
pushf
imul
inc
push
pushf
repz
sub
shlb
mov
pushf
in
clc
inc
inc
xor
mov
or
and
mov
pop
out
jg
sub
jle
negb
xchg
lret
fimull
pushf
cmp
mov
in
xlat
leave
repz
pop
icebp
mov
mov
adc
jg
push
lods
push
fiadds
popf
pushf
cwtl
xchg
sbb
js
mov
fcomps
jle
ds
inc
scas
add
pusha
ja
aas
pop
xchg
adc
mov
sub
call
ret
nop
test
xor
repnz
enter
cmpsb
pop
push
xlat
popa
sub
dec
mov
jae
ss
inc
or
test
mov
pop
shlb
daa
fsubrs
in
lret
cmp
stos
arpl
sub
push
jle
pop
cmp
jl
cmp
dec
dec
pop
out
or
xchg
push
test
lds
pop
addr16
mov
sbb
scas
mov
andl
sub
rorl
test
subl
push
cld
and
push
mov
rcrl
cmpsl
ss
fs
fcmovu
cld
shlb
fstpl
jns
and
outsl
pushf
xor
and
pop
loope
jecxz
xor
popf
cmp
in
lods
std
add
fcomps
pushf
lea
dec
nop
cmpsl
sbb
xchg
daa
cmp
mov
out
je
mov
pushf
iret
xor
add
jns
data16
popa
pop
or
mov
pop
lret
cld
pop
cmp
sbbl
lock
fdivrs
decb
adc
mov
adc
mov
cmp
mov
cmc
add
pop
cmp
pop
inc
xchg
pushf
mov
inc
add
push
out
div
ja
mov
lock
pushf
sub
lret
xchg
adc
in
rorb
push
ret
xor
outsb
cmp
jge
sbb
test
bound
cmc
jae
push
mov
lea
xchg
adc
sub
fldpi
pop
adc
fwait
pushf
and
cwtl
aad
pushf
pop
push
lret
add
pop
pushf
sbb
arpl
icebp
adc
pop
dec
lods
inc
subl
inc
sub
and
imul
jle
sti
xchg
pushf
adc
ja
adcb
sbb
mov
pop
adc
pushf
negb
sbb
bswap
pushf
popa
pop
das
push
popf
movsb
jno
pushf
jecxz
in
cmp
mov
clc
jl
pushf
xor
dec
mov
insl
xchg
pushf
subl
push
fbstp
pushf
std
mov
inc
adc
subb
mov
dec
rcrb
bound
test
je
into
and
loop
and
dec
inc
xor
out
pushf
mov
pop
inc
mov
pop
fcoms
int
mov
fnstcw
mov
mov
dec
push
cmp
lret
test
cmp
pushf
bound
mov
pushf
popa
and
sahf
stos
or
pushf
fiaddl
sti
loop
add
push
shll
mov
jmp
xchg
inc
stos
push
scas
add
and
sub
lret
push
aaa
rcrb
push
sti
jns
int3
xor
clc
pushf
xor
aas
push
clts
movsb
hlt
shll
mov
push
cmp
ds
mov
fcmovb
lods
sbb
repz
aaa
fcmovnbe
xor
xchg
xchg
pushf
arpl
xchg
cmp
ds
sub
pop
out
es
std
adc
adc
popf
pushw
dec
sbb
cmp
into
divl
mov
mov
sbbl
daa
mov
test
stos
pushf
xchg
inc
std
inc
or
adc
dec
mov
xchg
loopne
inc
jecxz
decl
or
xor
mov
pop
fistps
es
sub
mov
js
cmpl
out
std
jnp
test
sub
pushf
mov
xchg
jl
jge
hlt
jmp
outsl
std
iret
orl
push
inc
clc
mov
stos
or
add
add
es
ja
pusha
sub
jb
test
xor
pop
xchg
pop
sbb
xchg
movsb
sbb
pop
add
pop
mov
cwtl
jg
push
mov
pop
vpminsw
inc
add
push
or
std
cmp
push
mov
and
sbb
xchg
fdivrl
dec
add
inc
pushf
adc
cld
test
stos
clc
in
jns
pushf
pop
cltd
imul
dec
push
xchg
mov
lods
xchg
add
ss
cld
loope
sub
and
pushf
std
dec
arpl
adc
pusha
leave
andb
add
pushf
adc
les
imul
fnstsw
jg
lock
sarl
pushf
popf
sub
xor
cmp
mov
jnp
imul
jmp
lods
cld
add
imul
push
pushf
dec
pop
push
push
inc
out
cli
std
cmpsl
dec
sub
lods
jecxz
repnz
pop
mov
cmc
xor
stos
mov
mov
cmp
stos
lods
pop
loope
aad
lods
cmc
pusha
shlb
cmc
aam
mov
mov
arpl
cmp
leave
orl
push
add
in
sbb
mov
and
ret
sub
and
test
add
mov
int3
inc
add
push
add
and
imul
inc
mov
lcall
mov
ds
or
mov
and
inc
lret
and
xor
push
ljmp
pushf
xor
xchg
hlt
push
mov
adc
jne
je
jnp
inc
cmp
lret
sti
popf
movsl
cld
dec
mov
rolb
test
pop
push
mov
jp
mov
lock
test
adc
jl
test
fs
std
jne
cli
scas
or
bound
in
mov
cmp
pop
cmp
testl
jge
neg
mov
inc
jecxz
arpl
fdivp
ror
cmc
mov
lret
ds
into
clc
xor
cmp
add
data16
in
push
adc
adc
std
sub
cmp
je
ss
mov
sbb
out
and
lea
sahf
add
fsubp
xor
insl
sbbl
and
mov
cmp
pop
sub
lcall
mov
loope
mov
add
and
or
mov
pushf
enter
ljmp
pushf
mov
repnz
xchg
pushf
or
subl
out
pushf
push
lret
stc
xor
in
orl
insl
mov
ja
lret
idivb
push
pushf
add
pop
sub
inc
adc
inc
ret
insl
pop
shl
movsb
fstpl
mov
loopne
loop
out
repnz
leave
mov
test
pushf
pop
jmp
jo
pop
std
xor
in
pop
cltd
jecxz
cmpsl
pushf
xchg
mov
sbb
inc
lret
and
push
and
aad
dec
jbe
mov
fdivr
add
adc
gs
mov
inc
rcll
inc
inc
pushf
and
gs
out
daa
pop
dec
decb
stos
push
fdivs
jne
rcrl
cwtl
mov
adc
jge
stos
fsubl
mov
les
adc
add
and
xchg
jp
jl
je
mov
enter
lret
jge
inc
out
sub
or
mov
cli
outsl
mov
rcrb
xorb
xchg
arpl
pushf
and
push
in
pushf
shl
nop
add
push
es
cmp
pushf
dec
ljmp
dec
rcrb
repnz
push
fs
xor
insl
jmp
pop
sub
scas
pop
add
pop
and
pop
sub
mov
dec
inc
xchg
pushf
lret
pop
jne
and
push
bound
mov
mov
aad
roll
cmpsl
aam
or
sbb
dec
std
push
jge
or
rcl
pushf
add
fsts
push
jo
out
test
ds
and
sbb
cld
fadd
in
cmp
xchg
les
mov
and
mov
jno
add
mov
stos
or
clc
movsb
fsub
sbb
inc
mov
daa
lret
test
mov
mov
lds
js
int3
cmp
ja
ljmp
jno
movsl
jno
loope
or
mov
loop
dec
jl
push
dec
add
in
mov
cld
leave
or
xlat
roll
addr16
cmc
stc
cmp
ret
movsb
hlt
inc
fisttps
test
and
je
test
jns
ret
jle
clc
notb
push
push
pop
daa
fstps
adc
push
add
arpl
mov
cs
pushf
pop
xor
cwtl
xor
pop
pop
fistpl
sub
gs
or
popl
push
mov
dec
aad
jo
jle
rcrl
in
jae
pushf
cmp
or
pushf
dec
pop
push
pop
vandps
pushf
ljmp
dec
sbb
pop
or
jne
push
adc
xchg
loope
ret
in
and
bound
popa
stc
ror
push
jle
call
pusha
xor
push
mov
repnz
adc
and
decl
popa
cmc
iret
pushf
push
sarl
dec
mov
mov
mov
divb
or
mov
into
loopne
in
js
das
jl
xchg
inc
inc
lret
mov
ret
adc
and
mov
ficompl
pop
mov
pushf
sbb
das
or
cmpsl
push
pushf
sbb
insl
ljmp
mov
cmp
ljmp
pusha
stos
test
rep
pushf
dec
push
mov
or
ds
inc
pushf
or
inc
adc
add
push
adc
orb
pushf
sbb
xor
xlat
pushf
mov
add
hlt
and
ret
cli
cmc
adc
shll
int
mov
xorl
stos
daa
sbb
popf
scas
data16
sub
and
loopne
mov
lock
sahf
fists
loop
jg
mov
sahf
lods
inc
clc
loop
xchg
in
lods
mov
fnsave
repz
adc
aad
out
dec
mov
fimuls
icebp
movsl
mov
arpl
mov
jp
cld
loope
sbb
daa
inc
jl
subb
in
xor
adc
add
or
fcompl
test
sbb
xchg
inc
cmp
xchg
mov
test
test
and
and
mov
fs
xchg
aad
mov
imul
or
push
add
fisubs
xor
mov
mov
xchg
movsl
xchg
rolb
movsb
lods
ret
ficomps
cmp
mov
pop
xor
lds
in
ret
sub
clc
cmpsb
into
pop
mov
lea
add
outsl
jl
int
add
jb
add
loopne
and
and
ljmp
mov
mov
call
in
lods
mov
dec
iret
inc
gs
clc
add
pushf
and
popf
iret
sbb
jle
fisubs
sysenter
test
add
jl
cmp
mov
loop
xchg
and
xchg
loopne
jne
cs
aam
das
mov
add
icebp
xor
jne
lret
inc
ljmp
mulb
xchg
pop
insl
cli
mov
out
add
cli
mov
andb
jne
or
fdivrs
in
mov
clc
loop
mov
hlt
ret
mov
push
pop
add
lods
ret
xchg
or
jl
add
outsb
push
jge
cli
nop
lods
dec
movsl
clc
xor
add
popa
pushf
inc
notl
icebp
movsb
adc
lret
inc
cwtl
xchg
pushfw
dec
in
or
push
test
nop
loope
out
dec
mov
sbb
mov
jecxz
notl
repnz
mov
pop
pushf
and
ficompl
mov
fcoms
scas
pushf
rorb
adc
daa
jge
repnz
jne
orl
inc
mov
pushf
jecxz
call
push
dec
mov
inc
adc
sub
cmc
mov
mov
std
mov
loop
cli
pop
cwtl
mov
xchg
mov
lods
push
in
jbe
int3
add
xchg
inc
adc
sbb
xlat
in
inc
insl
rol
inc
mov
pop
ret
jnp
xor
in
lret
xchg
add
fwait
sub
mov
xor
mov
scas
pop
sub
pop
popf
pop
mov
mov
cltd
imul
pop
lds
in
mov
cmp
cli
jge
in
mov
push
dec
fistpll
hlt
cmp
das
mov
addl
outsl
inc
stos
pop
pop
xor
mov
sub
cld
rol
cmp
push
push
sbb
fwait
es
mov
or
inc
ss
sahf
stos
pop
inc
and
inc
rcrb
pop
out
sbb
into
out
pop
movsl
push
in
mov
mov
sub
and
fucom
lods
pop
pop
adc
popf
and
lods
stos
pusha
out
push
cld
in
mov
int
or
dec
das
and
jl
aas
cmp
fiadds
sub
movsb
mov
cltd
xorl
pop
pop
iret
xlat
movsb
mov
xor
jnp
xor
push
incb
lahf
rorb
inc
cmpl
bound
mov
mov
addr16
mov
cs
xchg
cld
xor
sub
or
clc
mov
cld
aas
cmp
repz
cmp
test
sbb
loop
or
decb
imul
cmc
es
enter
test
hlt
mov
mov
xor
call
sbb
mov
inc
call
lds
daa
sbb
insb
loopne
jge
repnz
pop
sub
test
mov
std
xchg
mov
sub
and
cld
lcall
call
and
aas
je
cmp
xor
cmpb
mov
ret
data16
test
push
or
fiadds
sub
fsub
dec
sub
ret
into
lods
aas
enter
xor
inc
fsubp
add
and
lods
es
into
push
and
ljmp
mov
loopne
pop
ret
and
in
loope
sub
and
addr16
idivb
lods
xor
mov
cmp
sbb
fimuls
fildl
sahf
fistpll
ficomps
repz
mov
imul
shl
lock
arpl
pop
jp
push
mov
fiadds
add
jnp
ss
jle
bound
idivl
mov
movsb
std
mov
push
imul
lods
adcb
loopne
decl
xor
imull
mov
mov
mov
jb
rclb
sub
mov
lods
ljmp
orl
lahf
xor
call
testb
lret
xor
mov
ljmp
mov
fnsave
sub
ret
xor
sub
push
ret
in
loope
jecxz
fmull
cmp
loop
lods
repz
aas
insl
pusha
std
sarb
inc
ficomps
lret
mov
inc
jl
push
rcr
xorb
mov
imul
sub
loop
mov
adc
aam
ret
or
push
sahf
gs
sbb
ljmp
bound
out
shrb
fimuls
mov
jo
sbb
cmp
imul
pop
cld
jle
into
aas
rorl
jle
rcl
fsubrl
cmovg
lods
sub
inc
inc
imul
dec
cmp
cld
loop
int3
ret
and
fbstp
pop
rol
sbb
or
loope
fstl
push
jo
fs
loop
mov
jecxz
pop
xorb
sub
mov
ficoms
dec
jge
stc
out
dec
jae
roll
rcrb
test
fimuls
es
inc
mov
mov
cmp
sahf
fwait
push
mov
inc
insb
push
xchg
sahf
movsb
std
outsb
and
sub
rclb
inc
and
mov
out
mov
push
lock
mov
fstp
pop
mov
lods
mov
out
and
mul
jge
mov
int
ret
pop
dec
inc
or
cmp
das
stos
loop
lret
sub
in
mov
ds
add
mov
into
and
dec
mov
xor
orb
bound
shlb
mov
jbe
call
pusha
addr16
mov
call
imul
hlt
das
cld
xchg
xchg
in
cmp
sar
cmp
sub
aas
jnp
jns
xor
hlt
popf
aad
je
aad
mov
in
lock
movsb
dec
adcl
mov
mov
test
xor
jge
je
movsl
rcrb
aas
mov
movsb
ffree
in
xor
or
iret
and
scas
clc
pop
add
xchg
jb
test
pop
rorl
add
add
pop
hlt
xor
movsb
and
mov
lret
jns
ret
outsl
add
out
mov
sub
nop
je
adc
movl
faddl
int3
test
pushf
mov
pop
pushf
movsb
enter
lds
pushf
push
shrl
fsubr
mov
pop
cmp
mov
mov
stc
int3
ljmp
dec
cmp
cmp
rcll
cmp
mov
sbb
xor
lods
pushf
jmp
xchg
inc
add
das
test
dec
mov
dec
fldenv
sbb
enter
loope
dec
mov
cmp
dec
popf
popa
xchg
aad
call
clc
push
fs
jno
inc
insb
fs
mov
mov
sbb
xorb
aas
movsl
popf
daa
test
push
and
jp
dec
sub
cmpsb
pushf
hlt
scas
ds
dec
cmp
iret
cmp
in
pushf
mov
cwtl
mov
std
adc
cmpsb
lods
popa
sbb
push
add
cmpb
add
lods
inc
sub
ss
push
sub
jl
inc
sti
test
jp
add
mov
mov
pushf
dec
adc
fcoml
negl
int3
pop
xor
push
test
aas
mov
je
and
xchg
in
push
sti
daa
lahf
pushf
ss
xor
xchg
jnp
pushf
cmp
jne
jge
jl
cmp
add
xchg
repz
mov
adc
jb
adc
mov
popf
mov
movsl
push
sbb
ja
sarb
jae
fdivrp
je
icebp
push
in
mov
std
mov
and
or
rcrb
mov
shlb
test
aad
inc
sub
icebp
ljmp
fs
push
pop
xor
xchg
push
push
jo
push
sub
sbb
cmpsb
aas
adc
mov
in
sub
stos
dec
mov
sbbb
dec
cmpsl
sub
push
outsb
lods
nop
imul
cmc
das
lds
out
mov
nop
test
fnstcw
popa
xlat
add
adc
mov
jle
mov
xchg
stos
cmpsb
sti
pushf
std
sarl
mov
int3
pushf
add
cwtl
inc
pushf
lret
ljmp
repnz
xchg
insb
dec
mov
xor
sbb
push
add
addr16
cmpsb
fstpt
or
adc
push
in
add
xchg
cmpsl
jecxz
ret
sub
scas
loop
aad
dec
inc
xchg
lahf
xor
push
das
addl
mov
or
push
lock
sub
jae
pushf
jno
ja
add
inc
cmp
push
dec
pushf
pop
xchg
or
jbe
sbb
add
cmp
xchg
jne
sbb
mov
data16
mov
push
push
mov
xorl
sub
xchg
xchg
lock
out
mov
sahf
fistps
cli
daa
push
outsl
dec
mov
and
ljmpw
fldt
fdivrl
mov
inc
jl
es
push
outsl
test
jns
rcrl
push
cmc
xor
xchg
jno
lea
rol
test
push
ret
jmp
mov
xchg
mov
cli
dec
cmp
stos
lods
fistpl
insl
scas
jg
or
ret
repnz
stos
mov
das
fildl
loope
pop
mov
movsb
jp
ds
mov
adc
sub
inc
pop
loop
push
pop
repz
mov
pop
or
andb
mov
cmp
cli
jg
outsl
pop
stos
lods
dec
dec
or
adc
and
imul
pushf
das
cld
inc
insl
add
xchg
mov
jg
aaa
mov
push
push
cmpb
xchg
scas
dec
sahf
ret
adc
jge
inc
and
mov
fsubrl
std
cmpsl
fsub
lcall
in
sbb
fsts
clc
nop
sub
mov
test
or
mov
cmp
pusha
jl
mov
icebp
call
je
sub
sub
cld
fsubp
sbb
icebp
loopne
push
jnp
xor
pushf
cmp
fnstsw
mov
addr16
push
movsb
push
mov
jne
push
call
std
mov
jne
in
dec
cmp
iret
ret
inc
stos
hlt
cld
adcb
jo
jo
sbb
adc
xchg
xor
jg
lcall
sbb
xchg
xlat
xchg
les
cwtl
rcll
pushf
mov
hlt
movsb
mov
push
pop
pushf
adc
xor
dec
push
lds
sbb
sahf
jno
sti
pop
cld
xor
mov
cld
lods
mov
jle
add
into
fcoml
mov
mov
push
and
adc
xchg
xchg
sti
add
mov
jecxz
sbb
fdivrl
mov
jnp
inc
xor
push
xchg
cld
scas
or
fdivrl
test
xchg
xchg
arpl
xor
jecxz
jbe
sarb
xchg
in
push
dec
andl
ds
jge
inc
pop
xor
jl
pop
movsl
inc
shlb
leave
xchg
inc
sbb
aas
fisubrl
mov
insb
pop
pop
fnstsw
mov
push
cld
lock
notb
fs
sahf
jb
fdivs
xor
push
aaa
sub
notb
ret
pop
mov
push
and
push
add
fs
movsb
in
sahf
jne
into
movsl
out
push
push
fs
fstp
loop
pop
test
add
sti
test
std
mov
push
fidivl
mov
movsl
lods
cld
xor
mov
rcrb
in
in
add
sahf
test
inc
jmp
imul
jge
push
xchg
shll
push
test
lahf
push
popf
aam
lods
je
lods
mov
lods
jae
lods
cmc
jno
sbb
es
mov
pop
test
lahf
pop
sub
jge
push
es
fwait
bound
loope
popf
fists
mov
and
fsts
std
inc
ds
mov
popf
push
sub
pop
mov
or
loopne
aas
call
icebp
fsubrp
xor
loopne
and
mov
pop
out
loop
subl
popf
jmp
sahf
cmp
push
pop
adc
xor
shll
adc
sub
icebp
or
adc
push
shlb
xor
inc
pushf
sbb
cmp
jg
aad
xor
sarl
sub
mov
jge
cmp
xchg
inc
jmp
sub
jg
adc
rorb
mov
imull
ljmp
lahf
loop
bound
scas
stc
gs
dec
mov
popa
unpckhps
loop
test
pop
pop
lds
icebp
std
mov
movl
cmp
rep
cld
popf
jl
dec
pushf
ret
mov
ss
shlb
adcl
lods
and
inc
stos
add
push
ss
es
dec
gs
data16
mov
cmc
popf
ficomps
scas
sbb
cmp
push
mov
fstpl
inc
or
fdivrp
jge
aas
fistpll
pop
popf
pop
sahf
mov
loopne
and
push
mov
mov
add
inc
mov
cwtl
out
mov
lahf
lret
loop
rcrb
nop
mov
test
loop
hlt
add
idivb
or
push
out
mov
fnsave
pushf
pop
jp
push
clc
cld
add
sub
cmpsl
push
xor
pushf
ficoms
lea
js
pushf
sub
insb
inc
jle
cmpsb
jmp
out
fwait
pushf
lock
xchg
dec
pushf
imull
jae
inc
add
xor
lods
pop
cmp
pushf
xchg
push
dec
or
dec
adc
mov
mov
loope
push
mov
ljmp
pushf
out
or
cwtl
xchg
mov
lods
adc
stos
aam
and
pushf
mov
cmpb
xchg
mul
adc
pushf
jecxz
pop
gs
cmp
mov
mov
bound
mov
insb
rcr
adc
add
push
cmp
cmp
pushf
data16
js
into
mov
pushf
mov
push
cmp
xor
jge
and
in
pushf
xor
dec
data16
sbbb
sbb
jle
inc
cmpsl
push
pop
fmull
sti
inc
stos
movsb
shl
pushf
sub
in
loop
jg
lcall
mov
in
shlb
stos
pop
mov
clc
rcll
lock
rcrl
loope
mov
lods
ja
outsb
rcrb
push
nop
test
pushf
mov
stos
dec
xor
adc
sbbl
cld
insb
cltd
in
ret
or
adc
orl
push
xor
sahf
pushf
add
xchg
mov
xor
mov
jge
jb
popa
jno
cltd
and
pusha
xlat
add
pushf
or
mov
cmp
mov
pop
push
out
dec
movsb
divb
push
jno
cmp
jae
out
pushf
loopne
pop
push
aas
testb
js
daa
sbb
popa
fldt
aad
or
in
xchg
pushf
and
inc
and
jl
leave
filds
ljmp
sub
stos
ret
loopne
roll
or
fnstsw
jns
push
mov
fstps
xor
and
jge
lock
mov
pushf
test
or
mov
inc
cmp
movsl
pop
out
aaa
pushf
xor
iret
idivl
pop
rorl
mov
mov
aas
mov
popa
adc
aaa
adc
or
pop
cmp
cwtl
outsl
stc
stos
pushf
mov
adc
les
jge
iret
pushf
cmc
mov
xor
and
out
clc
pop
lock
inc
ss
mov
sbb
es
lods
aad
pop
in
test
repnz
cmpsb
push
shlb
stc
mov
repz
xor
scas
lahf
pushf
lods
cmp
jo
dec
aaa
jecxz
xor
lds
jbe
cmp
cmpb
jecxz
das
or
imul
movsb
sti
pushf
dec
mov
jl
xor
inc
cmc
xchg
inc
sub
pushf
testl
je
pop
jns
adc
jmp
pop
cmp
pushf
rclb
jns
imulb
subl
xor
loopne
push
out
pop
jge
inc
iret
clc
adc
fnstcw
fdivs
outsl
cli
lret
mov
stc
in
mulb
fs
and
jmp
dec
testl
arpl
pushf
into
jge
mov
and
mov
jmp
mov
aam
cld
pop
mov
setl
lea
stc
sti
jecxz
cmpsb
out
dec
pushf
sub
scas
aad
ljmp
pushf
popa
loop
ja
pop
lret
pop
fsub
jp
outsb
jecxz
subl
inc
xchg
dec
lret
pop
mov
cmp
xor
out
pushf
sbb
pop
call
sub
mov
popf
adcb
popa
and
dec
xchg
jns
pop
int3
scas
add
int3
sbb
mov
xchg
xchg
fistl
lret
sub
lods
lret
mov
mov
or
and
insb
js
or
mov
cmpsl
popf
shll
cmpsb
in
aas
lods
mov
sti
push
push
es
mov
mov
mov
xchg
inc
fcomps
lock
into
push
fidivs
inc
jl
xor
aas
sbb
out
mov
out
mov
fstpt
sbb
lahf
jnp
dec
xor
mov
test
sbb
fnstsw
jmp
mov
fistpll
jg
and
sbb
pop
sub
mov
pop
or
jecxz
enter
stc
xchg
sub
sbb
pop
xchg
pop
push
lea
lds
fistpll
adc
sub
pop
push
jg
icebp
pushf
xor
and
or
adc
enter
cld
loope
mov
cld
mov
std
inc
push
cmpsb
jl
mov
jge
pop
popf
sbb
xchg
popf
xor
outsl
sbb
lahf
faddl
orl
jno
xchg
adc
mov
push
jnp
xor
fistpll
xor
loop
mov
data16
add
popf
and
fistpll
or
mov
or
pushf
hlt
adc
je
push
out
pushf
cmp
js
inc
roll
mov
adc
push
mov
xor
shll
push
mov
leave
or
cmp
cld
movsl
inc
cmp
loop
fcompl
cmp
xor
lahf
jmp
cld
inc
mov
jno
cmp
sar
mov
inc
stos
outsl
sarb
pop
loopne
xor
jp
es
nop
jo
std
pop
xorb
data16
adc
sbb
insb
add
jg
inc
popf
mov
push
inc
or
pop
pushf
xchg
hlt
mov
ja
imul
test
sbb
inc
icebp
repz
int
stos
fidivl
add
les
jl
in
push
push
mov
pushf
cmp
cmp
dec
pushf
jno
popa
push
sbb
or
dec
mov
push
cld
cmp
movsl
xchg
mov
pushf
jb
or
in
cmp
xlat
popa
cwtl
lock
lods
sub
mov
push
clc
lea
mov
mov
jmp
pushf
testl
pop
pushf
movsb
xchg
loop
cli
icebp
cmp
pushf
aaa
jecxz
shl
mov
and
mov
mov
xor
ja
cmpb
pushf
cmp
out
dec
data16
rep
inc
das
int
sub
cld
add
adc
lret
mov
jp
fcmove
jge
push
mov
inc
pop
jns
fistpll
addr16
mov
gs
outsl
mov
incb
sahf
mov
and
cld
dec
fs
daa
jae
mov
push
imul
cmpsl
test
mov
add
clc
add
jns
je
cmc
or
xor
test
jg
int
adc
cmp
xor
xchg
mulb
xchg
jl
into
sub
js
ja
hlt
cli
lret
inc
popa
mov
push
arpl
push
and
inc
sbb
or
jbe
lods
pushf
and
fadds
pushf
push
icebp
xchg
jb
imul
pushf
mov
into
jmp
fisttps
stos
mov
das
cld
lds
add
loope
mov
pushf
xchg
or
ja
out
push
adc
pushf
add
mov
sbb
lcall
mov
clc
cld
xchg
sub
push
xor
jno
inc
into
negb
in
mov
mov
jle
push
adc
dec
xor
jns
nop
scas
mov
xor
pushf
adc
fisubrs
push
aam
jp
mov
insl
xor
loopne
pop
cltd
imul
loop
cmp
rcrl
lret
jl
pushf
aad
popa
inc
jae
xchg
loopne
push
mov
addr16
xorb
lcall
rorl
jb
push
stos
repnz
adc
shll
movsb
test
cwtl
pushf
movsb
mov
fnstsw
mov
dec
add
cmpsl
xchg
and
scas
push
pushf
idivl
push
iret
sub
pushf
or
add
or
fsubl
ret
xor
mov
mov
and
pushf
pop
xchg
in
insl
push
nop
stos
setl
in
jne
call
push
sbb
loop
xor
icebp
xchg
stos
pop
and
and
pop
neg
lods
js
cmp
adc
jne
mov
dec
inc
mov
xor
sub
mov
ficompl
xchg
jno
lret
pop
mov
jb
lret
and
mov
lahf
mov
andb
jge
lret
fsubs
xchg
and
ficompl
mov
lods
out
xor
sbb
mov
popf
pushf
imul
cmpsb
pop
cmp
repnz
sarb
mov
adc
and
xchg
add
fldcw
dec
jp
out
pushf
jbe
sub
aas
jno
pop
pushf
and
cli
pushf
xor
and
sub
jnp
pushf
mov
dec
mov
push
out
pushf
cmpsl
daa
sbb
into
pop
pushf
pop
mov
adc
sub
mov
dec
pushf
outsb
inc
ret
ljmp
lea
mov
sub
stc
sub
mov
imull
pushf
ja
cmpsl
mov
pop
dec
pop
pop
adc
ret
dec
popf
test
or
pop
fidivl
mov
mov
xor
data16
aam
sbb
cmc
pop
pushf
cmp
pop
dec
xor
adc
orb
mov
lret
xor
inc
mov
jo
cmpl
repnz
jge
and
and
inc
pushf
sbb
cwtl
int
push
ret
pop
fstpt
pushf
push
mov
lret
and
rorl
mov
int
pop
aam
mov
add
and
cli
sub
mov
adc
pop
fdivs
stos
xchg
je
outsl
cmpl
mov
cmp
mov
xchg
xor
gs
xor
xchg
mov
pop
arpl
stos
dec
scas
mov
int3
repz
lock
jecxz
insb
lea
cld
jo
inc
pushf
call
jp
repnz
mov
push
mov
pop
jge
jmp
pushf
xor
inc
mov
push
and
out
ret
push
add
adc
and
mov
popf
fldl
xchg
sbb
out
cld
rcl
lods
jg
jno
popa
mov
std
and
sbb
xchg
sbb
fnstsw
mov
movsb
jl
add
push
mov
pop
lea
sub
adc
mov
push
cmpsb
mov
cwtl
jnp
pop
xor
mov
add
mov
push
stos
pop
cmp
cld
leave
cmp
mov
shl
rclb
cmp
ffree
scas
mov
sub
pushf
je
testl
jl
clc
sub
cmc
lret
sahf
or
cmp
dec
and
and
jb
stos
in
add
and
loop
mov
subb
jl
inc
inc
ret
sbb
inc
mov
mov
jl
jge
jl
lods
scas
or
pusha
aam
imul
add
fsubp
ret
loop
js
stc
xor
pushf
mov
adc
xlat
into
nop
jnp
movsb
out
pop
mov
mov
enter
adc
cmp
in
fnstsw
ret
into
sbbb
sub
test
jbe
roll
fdivs
rcrl
push
pushf
imul
pushf
in
fnstenv
shl
nop
test
addr16
ret
or
jbe
jmp
rcrl
adc
inc
pushf
pop
jnp
sub
push
outsl
std
pushf
mov
mov
pop
xchg
xor
jp
or
fldcw
and
jne
sbb
adc
cmp
sbb
popa
pushf
es
jge
bound
pushf
lret
adc
insl
dec
adc
xchg
enter
pop
push
popw
xchg
ljmp
dec
pushf
test
in
dec
negb
sbb
inc
hlt
dec
mov
push
or
sub
xchg
push
scas
outsl
xchg
lds
mov
and
std
mov
mov
mov
dec
popf
xor
xor
xchg
insl
or
cmpsl
hlt
inc
ljmp
or
xor
loopne
or
inc
cld
inc
pushf
mov
cltd
inc
dec
cmp
clc
cmc
and
sahf
inc
jp
sub
js
test
inc
js
and
mov
pop
push
mov
outsb
lea
out
jge
mov
adc
add
pushf
divb
movsl
les
scas
pushf
add
pop
es
and
mov
jg
mov
xchg
or
lea
push
xor
pop
add
xor
lods
add
in
jbe
lods
gs
dec
cmp
aas
jl
cltd
dec
jg
insb
les
push
cwtl
mov
and
pop
in
xchg
add
sub
inc
arpl
decl
sbb
shlb
out
data16
fcom
sar
ss
sahf
jl
movsb
adc
mov
js
pushf
xlat
out
mov
dec
sub
jl
mov
dec
mov
das
pushf
test
and
jecxz
add
adcb
jmp
adc
dec
pop
push
pop
mov
stc
pushf
out
cli
and
fcmovnb
pushf
aad
inc
jns
test
in
pop
jne
pop
sub
pushf
loop
xchg
std
xor
stos
hlt
sti
push
out
lods
sub
push
pushf
and
mov
ret
pushf
clc
or
adc
orb
faddp
push
mov
cmpsb
in
pushf
pop
add
cli
stc
lea
fimull
lds
shrl
sbbl
in
jne
aaa
test
shll
outsl
pushf
xlat
jns
or
sbb
clc
mov
sbb
xchg
add
cld
xor
sbbl
dec
mov
stc
xchg
cmp
xor
pushf
divb
in
faddl
pushf
xchg
pop
nop
and
and
jl
lods
xchg
mov
mov
pop
jnp
fsts
movsb
ja
hlt
add
pushf
pop
ror
xchg
sbb
movsl
dec
sub
pop
cli
outsl
inc
fdivrs
shrb
add
mov
aam
cltd
mov
sbb
jle
lea
mul
jmp
pop
lds
jge
andb
call
xorl
pushf
mov
cltd
sub
xchg
daa
stc
subb
jge
jb
jo
push
jmp
pushf
ror
fbld
jg
and
mov
stos
cltd
addr16
in
and
orl
imul
jno
lds
test
mov
add
leave
mov
jg
sbb
sub
aad
and
enter
jl
push
push
not
mov
ret
and
cld
test
mov
or
mov
int3
sbb
ja
cwtl
add
hlt
out
mov
dec
pushf
pop
les
in
outsb
cld
pushf
adc
shr
inc
leave
sbb
mov
pushf
cmp
fidivrl
jp
imul
in
inc
xor
mov
jbe
pop
pushf
push
loop
dec
xor
cmp
sub
mov
inc
ficompl
push
pushf
sbb
pop
popl
imul
pushf
lcall
pop
mov
xor
out
pushf
mov
pop
sbb
out
hlt
pop
jge
push
enter
mov
aas
xor
inc
jge
roll
mov
fmuls
or
mov
or
js
cli
cmp
sbb
movsb
ss
push
pop
jb
scas
test
dec
pop
sub
cmp
adc
out
test
mov
insb
xor
pop
stos
pushf
dec
idiv
shlb
cld
jno
mov
mov
sub
shll
pushf
mov
cld
fcom
xor
mov
out
pop
ret
xchg
adc
pop
jne
mov
mov
and
dec
shlb
xor
out
pushf
and
ljmp
push
cmp
fwait
pop
lret
into
cmp
shl
lods
test
je
push
sbb
pop
leave
mov
add
lret
mov
data16
fimull
jge
xor
pop
mov
movsb
pushf
adc
and
es
je
sub
adc
push
jl
mov
in
add
mov
jno
clc
arpl
sub
lods
push
xor
jns
cli
iret
cmp
repz
add
sub
lcall
xchg
add
inc
lods
loope
or
and
or
insl
sbb
pushf
cwtl
stos
popl
pop
cmp
push
mov
adc
pushf
iret
push
test
pop
pushf
push
jmp
stc
pop
leave
setl
adc
sub
push
test
pop
jl
pop
mov
aaa
mov
jle
mov
push
xchg
inc
jno
cmp
adc
mov
arpl
aaa
icebp
arpl
int3
or
mov
sahf
push
mov
pop
clc
adc
push
sbb
cmp
popa
pop
mov
mov
outsl
addl
int3
inc
dec
cmp
mov
xor
mov
test
jbe
mov
xlat
test
lods
lock
repz
mov
add
add
fs
lods
stos
sbb
pop
es
mov
test
mov
xchg
mov
add
add
and
cld
jl
arpl
lods
movsb
cmpsb
or
cld
vmovaps
fists
xchg
orl
pop
test
sub
outsl
and
loop
sti
sub
mov
dec
movsb
pop
dec
aad
enter
roll
and
fimull
cmpsb
pushf
push
pop
loope
mov
push
pushf
pop
xchg
repnz
jp
mov
pushf
and
ljmp
lret
xlat
fucomi
popa
rcrb
dec
mov
adc
jne
adc
sti
in
cli
pop
pushf
jno
cmc
dec
shl
pop
daa
dec
lret
pushf
mov
sbb
fucomp
sub
cld
repnz
xchg
imul
adc
cld
sbb
dec
sub
pushf
lock
or
pushf
adc
mov
aad
inc
sbb
jmp
pushf
pop
gs
push
sbb
std
in
adc
test
std
push
jg
jns
popa
ljmp
inc
fcompl
or
sbb
mov
addr16
inc
and
movsb
imul
shlb
inc
insl
fs
adc
add
cli
enter
in
ret
nop
popa
pop
stos
pushf
pop
ret
mov
pushf
sbb
insb
sub
shr
movsl
mov
test
mov
jae
pushf
lret
insl
aaa
xchg
popl
mov
mov
pushf
push
cmc
pusha
push
jo
mov
dec
pop
push
cli
rcrb
not
xlat
jg
bound
push
subl
sbb
mov
mov
clc
and
jb
xor
out
test
dec
cwtl
ss
pushf
lock
push
pushf
mov
nop
int3
jl
pop
ss
pop
xchg
push
xor
out
dec
pushf
lret
mov
add
mov
push
jecxz
aaa
push
cld
pop
xor
cmp
pushf
add
jbe
xchg
dec
sbb
fwait
xor
pushf
adc
jle
xchg
cmc
add
out
push
stos
hlt
or
mov
xor
insb
and
pop
cmp
push
pop
jmp
jg
fwait
scas
pop
mov
add
inc
pop
mov
mov
popf
pusha
jle
mov
mov
xor
xchg
scas
mov
sub
pop
pop
and
jp
mov
dec
or
fisttpl
cmp
je
jecxz
mov
cmpsb
lock
loopne
xchg
gs
adcb
mov
jl
int3
in
mov
fldenv
es
shll
in
aas
daa
addr16
xchg
repnz
loope
or
jno
push
filds
bound
frstor
xchg
or
jle
ret
je
mov
repnz
ss
scas
orb
xor
mov
mov
inc
xor
lods
lea
out
test
xchg
outsl
inc
add
pushf
jne
rolb
pushf
dec
leave
mov
push
xchg
pop
jae
mov
pop
xor
pop
stos
or
inc
lcall
rorl
bound
cmpb
push
pushf
adc
pop
test
stos
mov
cltd
sub
pushf
pop
cmp
sbb
dec
shl
cmp
mov
shrb
mov
pop
dec
add
adc
sbb
pushf
mov
fs
mov
int
in
xchg
lock
push
pop
xchg
loop
aaa
cs
push
mov
test
stos
pop
jne
ficoms
and
test
test
addr16
into
pop
ret
lods
jo
sarl
mov
mov
mov
pop
mov
sbb
sahf
div
dec
xchg
movsb
xchg
div
xchg
cmp
or
xchg
push
pushf
mov
notl
pushf
jns
xor
js
popf
adc
mov
adc
xchg
imul
mov
jae
test
cld
adc
fcoms
jecxz
pop
in
mov
pop
xor
ret
xchg
aad
test
rcll
mov
pop
and
push
hlt
ja
inc
icebp
xor
mov
pop
push
cwtl
mov
mov
mov
lods
jno
xlat
xchg
xor
xor
sarl
adc
adc
mov
arpl
mov
mov
fmull
sahf
arpl
cltd
push
negb
xchg
shlb
outsb
aad
adcl
out
loopne
mov
mov
iret
sbb
xchg
int3
pop
inc
rcrl
inc
inc
popf
rorl
cs
movsb
push
xor
push
xchg
sbb
sti
in
fstl
cli
sbb
mov
je
repnz
repnz
outsl
ffree
inc
icebp
push
out
push
sarb
dec
fiadds
ret
stos
popf
mov
cmpsb
ret
scas
das
movsb
cmp
int3
jmp
adc
push
in
push
push
fcmovnbe
jo
dec
pop
fistpll
scas
ret
cld
mov
loopne
int
sbb
inc
ret
addr16
repnz
and
jno
cmp
add
shlb
lods
ret
iret
repnz
ret
in
aaa
popf
adc
das
dec
mov
cmp
add
pop
adc
xchg
loopne,pn
shrl
cmp
cwtl
pop
xor
call
pop
sarb
sbb
adc
shl
not
mov
lea
sub
sbb
jnp
xchg
add
mov
add
es
insb
and
jb
pusha
add
jecxz
aam
fisubrl
mov
sbbb
xchg
pop
gs
and
jge
inc
mov
push
mov
and
inc
add
fimuls
sub
addb
and
add
and
fwait
ljmp
push
xchg
mov
cli
ret
jmp
roll
pop
jmp
or
dec
pop
mov
lahf
push
jle
je
fnsave
mov
sbb
push
mov
dec
js
and
test
mov
mov
dec
shrl
adc
xor
fildl
test
imul
mov
out
aam
call
pushf
xchg
int3
jg
insb
daa
mov
mov
repnz
pushf
inc
insl
cmp
sub
lds
aad
lret
or
pushf
loope
das
mov
jecxz
negl
int3
orb
fdiv
pop
mov
negb
idivb
lret
shrl
nop
aam
cld
rclb
or
je
inc
xchg
leave
pop
sti
inc
pushf
flds
es
jecxz
rcrl
imul
pushf
adc
inc
sub
jmp
sbb
sub
imul
js
pushf
mov
ds
xor
les
mov
aas
nop
test
cmp
fldt
mov
jl
pop
cli
aaa
iret
into
pushf
mov
xor
stos
dec
stc
jae
or
lahf
mov
xchg
adc
das
pop
ljmp
push
dec
pop
ficoms
push
adc
repz
jae
stc
mov
xor
fistps
inc
xchg
mov
cmp
add
lods
pop
in
mov
pop
dec
sbb
fdiv
inc
jle
cmp
clc
hlt
jmp
pop
adc
adc
xor
jge
pop
int
sbb
repz
idivb
mov
repz
sbb
jmp
mov
std
insb
ficompl
lods
lods
enter
jle
addr16
rcrl
into
mov
movsb
out
ret
sub
pushf
pop
adc
sahf
pushf
lret
scas
push
mov
sub
sbb
and
gs
xchg
into
sbb
ljmp
pushf
xor
outsl
jle
jmp
push
adc
add
dec
adc
sub
mov
jno
fs
push
pop
jl
cli
push
pushf
push
arpl
out
cltd
pop
push
ror
xlat
mov
mov
das
insl
sbb
pop
jle
pushf
int3
or
dec
test
out
ffreep
je
lods
pushf
fisubl
sub
pushf
pop
jmp
dec
out
xor
dec
dec
ret
adc
cmp
popa
mov
jge
and
pop
test
icebp
mov
bound
sbb
cmp
sub
daa
jb
stc
out
mov
fimuls
jmp
and
push
sbb
mov
jg
je
cmp
mov
add
enter
je
or
inc
pushf
clc
push
xchg
and
and
fmull
or
mov
out
jl
inc
jmp
inc
mov
pop
jmp
loop
lods
int3
add
pusha
cmp
adc
cmc
xor
jbe
ror
test
sbb
test
mov
push
add
stos
dec
pushf
insl
incb
push
cmp
nop
push
xchg
icebp
dec
cmovle
xchg
pushf
sub
add
pushfw
repz
negb
sbb
pushf
or
std
pop
jne
xchg
pushf
adc
adc
cwtl
loope
stos
pushf
sub
movsb
out
dec
push
in
pushf
pop
push
dec
mov
pushf
outsb
inc
stos
call
pushf
xchg
inc
push
mov
pushf
push
cli
je
jle
mov
add
lds
pushf
std
sbb
inc
mov
mov
mov
cwtl
int3
in
cltd
jne
push
mov
push
sbb
iret
das
sbb
jne
jnp
daa
je
or
push
test
xor
add
ret
inc
ja
aad
xor
jge
leave
inc
mov
mov
test
add
pop
les
aam
lret
insl
push
mov
xchg
out
add
scas
add
into
sub
mov
mov
rclb
xchg
in
cmpsb
ljmp
int3
pushf
icebp
shll
mov
mov
push
or
sbb
nop
pushf
lret
ja
sar
fcomps
and
push
pushf
dec
hlt
das
loopne
test
mov
cmp
pop
cmp
dec
jge
push
lock
movsb
je
stc
ds
mov
inc
push
in
mov
adc
xchg
add
push
cmp
mov
jmp
and
mov
test
clc
pop
inc
scas
or
imul
pop
std
lahf
cwtl
movsl
in
and
mov
lret
cmp
scas
ficoml
jecxz
xor
sub
ds
pushf
push
ljmp
in
mov
push
push
pop
jbe
pushf
xor
clc
imul
jl
addr16
mov
adc
dec
pushf
mov
cmp
or
jne
cli
sbbb
mov
pop
xchg
es
inc
sub
mov
ret
jl
sub
pop
popf
mov
push
in
popf
xchg
mov
jb
stos
pop
pop
push
dec
into
leave
adc
mov
cltd
enter
insb
mov
pusha
pushf
jge
add
mov
push
xor
push
scas
pushf
fisubs
jne
inc
mov
cli
push
out
lret
and
and
into
mov
mov
jmp
outsb
push
test
mov
rcrl
adc
pop
inc
movsb
negb
adc
arpl
cld
pusha
cmc
pinsrw
mov
push
or
lcall
repnz
pushf
jne
mov
addr16
mov
pop
popa
and
cmp
pushf
sti
and
xchg
pushf
pop
insb
bound
sbb
mov
jb
or
cmp
xchg
gs
push
push
fcom
or
rorb
loope
cwtl
pushf
int3
or
push
mov
adc
hlt
ret
fistpll
sub
nop
sub
cmp
imul
stos
fimull
mov
cmp
cmp
inc
jge
lods
sbbb
arpl
cmp
mov
adc
arpl
xchg
mov
pop
lahf
cmp
sbb
insl
mov
into
lcall
pop
cmc
dec
pushf
push
xchg
cmp
addb
lock
lret
ljmp
test
and
jecxz
jmp
pusha
push
mov
fstpl
jmp
pushf
not
add
mov
ret
leave
in
mov
dec
sbb
fadds
xchg
ds
aas
aad
dec
lods
out
inc
loope
or
adc
sahf
subb
stos
and
jp
push
into
mov
imul
pop
movsl
push
inc
push
push
pushf
add
inc
aad
aaa
repz
scas
mov
mov
xchg
xor
fistps
push
inc
add
push
jmp
pushf
js
xchg
dec
jmp
and
shrb
pushf
push
or
mov
and
jne
lock
push
pushf
into
or
sub
inc
icebp
cmp
and
imul
push
in
mov
or
mov
in
add
popf
pop
mov
xchg
lods
mov
das
sbb
mov
jne
mov
xor
insb
push
and
cmc
lret
dec
pop
movsl
mov
aad
sub
dec
ja
scas
repnz
jge
int3
inc
std
mov
jl
inc
fcmovu
outsl
movsb
mov
mov
push
pushf
dec
es
inc
stc
movsl
dec
and
pop
pushf
dec
xlat
out
mov
ret
push
roll
inc
movsb
dec
enter
xchg
pushf
mov
cmpsl
adc
pushf
nop
outsl
push
sbb
movsl
adc
jns
mov
lret
xlat
dec
idivl
leave
lcall
or
pushf
int
pop
sbbb
lock
mov
jns
cmp
adc
or
jecxz
inc
pushf
lahf
repnz
insl
dec
pop
clc
pushf
sbb
scas
dec
and
sub
inc
push
jl
outsl
aaa
adc
mov
popl
nop
jns
outsb
jecxz
sbb
js
pop
ret
xor
addr16
ljmp
ja
fisubl
shrb
add
pop
lea
js
sbb
ret
ljmp
sbb
mov
jle
jge
xchg
add
stos
pop
jle
je
lahf
movsb
adc
cmp
mov
inc
insl
das
mov
pop
lahf
shll
pushf
int3
loop
jecxz
icebp
scas
mov
jl
dec
pop
aam
nop
sahf
sbb
ficomps
out
aad
sub
nop
out
jbe
loope
mov
or
fstps
sbb
fidivs
dec
jo
mov
sub
outsl
scas
mov
jno
xor
mov
mov
mov
cmpl
fsubr
sarl
pop
pushf
jecxz
rolb
inc
push
out
push
cld
jne
push
in
inc
jg
push
mov
adc
out
aaa
cltd
xchg
cmp
ret
popf
sti
xlat
push
xorl
decb
int
push
jle
pop
mov
pushf
xor
xchg
add
sbb
sub
push
es
sti
pusha
jge
pushf
mov
test
dec
jg
xor
inc
inc
mov
mov
shll
mov
sar
fadds
into
ret
dec
je
and
ss
pushf
arpl
sbb
repnz
insl
test
or
adc
add
out
push
xchg
inc
inc
iret
dec
cmp
push
in
cmp
icebp
inc
int
dec
xlat
rcrl
dec
leave
ss
repz
jnp
subb
mov
mov
nop
stos
pushf
or
aaa
mov
es
sbbb
xor
ljmp
rep
inc
pop
mov
pushf
push
cmp
mov
out
and
test
popa
pushf
mov
inc
lret
rcrl
je
pushf
sbb
fidivrs
iret
or
pushf
inc
fldt
lcall
inc
inc
ja
stos
sbb
or
mov
push
or
pushf
adc
pop
inc
xor
test
xchg
mov
mov
sahf
gs
cmp
mov
pop
mov
sar
icebp
fstps
call
stos
roll
adc
pop
ret
and
les
popf
xchg
movsl
mov
dec
pop
ja
fstl
cmp
xor
sbb
mov
lods
mov
cs
nop
dec
mov
mov
and
pop
sbb
sbb
nop
inc
scas
cmp
mov
fdivl
inc
sub
mov
push
sti
ljmp
inc
mov
mov
cmpsb
sbb
xor
adc
mov
dec
ja
jae
dec
fildll
addr16
stos
xchg
loope
adc
mov
cli
bound
sahf
dec
and
sbb
cld
in
and
sub
stos
insl
ljmp
inc
inc
pop
dec
and
xchg
aaa
dec
std
push
testl
aaa
aaa
pop
mov
jl
cmp
movsl
aaa
mov
cmpsl
inc
test
popf
jbe
mov
outsb
jp
and
out
ss
daa
ffreep
jp
cs
cld
js
je
mov
cld
test
insl
std
fwait
adc
pushf
in
aas
xorl
adc
and
and
sbb
xor
lods
sbb
lret
in
adc
cmp
pushf
test
call
pushf
and
jge
dec
or
xor
mov
add
out
rolb
pushf
mov
dec
push
or
cmpsb
pop
pushf
xor
es
push
mov
cld
push
adc
cmp
hlt
jl
subb
test
aas
repnz
jge
jl
adc
pushf
cli
loop
mov
xchg
jb
pushf
push
mov
stc
ss
iret
sti
test
jecxz
test
pushf
or
adc
arpl
or
pushf
mov
push
jns
cmc
repz
andb
repnz
pop
mov
sub
and
or
add
xor
mov
enter
cwtl
cmpsl
add
pushf
out
data16
ficoms
pop
cmpsb
int
ficoms
lods
pop
cmp
std
cltd
inc
fwait
xchg
mov
and
movsb
pop
std
sub
xchg
loopne
xchg
and
add
ret
cmpsl
scas
jbe
xchg
negb
sub
jbe
adc
incb
loopne
cmc
push
sbb
aaa
sbb
es
popa
mov
repnz
sahf
pop
cmc
dec
adc
std
add
stos
popf
sbb
xchg
in
ret
and
rcrl
stos
pop
mov
test
divb
mov
mov
in
pop
xor
xchg
sub
jle
cs
cmp
push
mov
adc
dec
notl
push
push
xchg
adc
inc
pop
in
push
ret
mov
xchg
inc
loop
sbb
divb
dec
pop
cld
aaa
notl
or
adc
and
sti
xchg
cmpsb
xor
push
jns
mov
xchg
shlb
pop
push
mov
icebp
fistpll
mov
movsb
inc
popf
in
mov
shlb
and
dec
push
lret
adc
mov
ljmp
mov
popf
lods
mov
pop
adc
dec
xchg
sarb
cmpsb
add
push
leave
decb
loop
fcoml
add
pop
jb
int3
pop
repnz
xchg
xor
push
push
lods
mov
jbe
jns
and
sub
jp
sub
and
notl
aam
loopne
or
mov
mov
pop
jbe
cmp
mov
cmp
sbb
xchg
mov
scas
arpl
scas
mov
mov
gs
mov
test
inc
mov
mov
pop
jo
xchg
sti
mov
test
fwait
inc
sarb
fsubrs
push
xlat
adc
fistl
jnp
push
movb
shlb
repnz
or
pusha
in
sub
ja
mov
sti
mov
push
loop
push
repnz
cmc
rolb
and
sti
stc
rcl
inc
mov
fstl
test
loop
pop
mov
sbb
jbe
mov
push
jns
or
adc
jl
stos
pop
xor
xchg
movsl
mov
push
adc
pop
or
rol
notl
add
xchg
adc
aam
sbb
fdivr
out
xlat
pop
mov
pop
out
sbb
add
sbb
stos
out
ljmp
jmp
fwait
push
mov
push
clc
cmc
push
push
mov
hlt
mov
mov
out
loopne
shll
jnp
jnp
int
pop
in
mov
jle
xchg
sarb
sarb
inc
mov
aaa
mov
sbb
mov
icebp
daa
mov
push
adc
pushf
xchg
imul
stc
pushf
and
pop
jnp
mov
xor
aam
movsb
lods
fstl
test
minps
out
ss
pop
sub
int
mov
push
jmp
push
jecxz
idivl
adc
pushf
out
icebp
mov
mov
push
mov
pop
repnz
add
mov
leave
out
call
jae
pop
pushf
mov
rcrb
pop
adc
test
pushf
ret
or
iret
xor
pushf
nop
push
pop
cmc
out
stc
mov
insl
pop
lret
sub
pushf
mov
inc
pop
jmp
fadds
push
pushf
or
lret
xor
sbb
out
dec
out
js
or
mov
add
push
cmpsb
mov
test
je
daa
jp
inc
pop
pop
jp
pushf
mov
push
xlat
jb
shlb
les
js
jp
mov
rorl
pop
jmp
addr16
int
mov
mov
sbb
push
and
jg
sahf
lret
lods
test
movsl
mov
mov
in
and
enter
cmc
fcoms
movl
loopne
test
push
lods
mov
dec
jl
outsl
les
loope
mov
pushf
adc
or
mov
leave
mov
pusha
dec
out
cmpsl
icebp
mov
fldcw
mov
jo
in
shl
rorb
icebp
not
test
inc
sbb
sub
in
inc
movsb
jecxz
lahf
jl
dec
lock
lret
lret
jg
in
jl
jmp
sahf
push
xor
pushf
pusha
inc
es
jmp
adc
sub
pop
dec
punpcklwd
xchg
pushf
inc
adc
ficomps
mov
arpl
jp
cmp
pop
das
lcall
jg
test
cli
mov
jb
pop
adc
lcall
lcall
add
sbb
mov
in
shl
push
sub
mov
push
lahf
data16
mov
rolb
xor
sub
stos
pop
std
pop
fcoml
lret
shlb
ret
mov
mov
xchg
pushf
cld
sbb
inc
lret
int
shll
pushf
jnp
rcrl
xor
xor
movsb
pushf
nop
es
out
sarb
repz
sbb
fisttps
mov
imul
ss
mov
aas
push
pushf
mov
lret
add
add
incl
and
pushf
mov
hlt
mov
xor
mov
inc
jge
cwtl
mov
pushf
jp
notl
jne
pushf
push
xchg
bound
cmp
xlat
xchg
cmpl
in
jge
pop
arpl
cwtl
stc
push
mov
pushf
daa
adc
ja
lods
ja
pop
xchg
dec
orb
sbb
xorb
mov
jle
bound
fwait
inc
and
test
pop
imul
sbb
jle
sub
sbb
xchg
shlb
test
push
ja
fisubl
sahf
nopl
in
and
sub
das
mov
movsb
mov
xchg
decb
jl
lcall
pop
push
pushf
repz
rcll
outsl
inc
nop
ficomps
or
add
dec
repz
rcrl
xchg
jns
ss
sub
cmp
pushf
adc
and
imul
pop
bound
scas
jae
test
iret
mov
or
xor
jp
pop
pop
push
daa
and
repz
xor
lret
insl
pushf
repz
pop
push
lds
data16
pop
cmp
jecxz
xchg
lea
or
pop
daa
movsb
mov
cmpb
repnz
in
cmp
or
inc
jmp
cli
pushf
dec
incb
fiaddl
pop
sti
mov
mov
jmp
sbb
jmp
jecxz
and
add
or
push
mov
or
data16
mov
mov
and
cld
or
push
mov
loop,pt
mov
mov
pop
lcall
jno
jle
jns
test
ret
xchg
mov
adc
jl
jge
call
add
or
stos
mov
jl
test
int3
orb
pop
mov
das
subl
xor
xor
and
into
psllw
in
push
aaa
aad
cmp
jl
adc
xlat
or
xor
jge
jmp
sbb
or
rorl
xchg
cltd
aaa
mov
pop
fdivr
pop
and
clc
xor
cmp
pushf
sar
cmp
adc
xor
cmp
cmpsl
aas
mov
mov
sbbb
jae
cmp
movsl
or
or
arpl
pop
dec
sbb
inc
cld
pop
divb
lds
icebp
es
cld
inc
jp
testl
xchg
jmp
or
aam
add
jg
notl
mov
dec
add
or
sbb
inc
or
push
lods
divl
sbb
pop
pushf
or
mov
pushf
ret
sub
or
std
dec
rolb
mov
std
fsts
jo
lods
inc
xchg
repz
sbb
inc
cli
jbe
mov
cmp
pop
mov
pop
outsl
lods
mov
cwtl
jp
push
pop
rorl
and
mov
addb
cmc
pushf
mov
or
imul
cmp
dec
push
mov
sub
lea
fwait
outsb
jbe
mov
jne
sbb
clc
xchg
insl
test
dec
fst
cmp
sub
dec
dec
jae
pushf
call
outsb
mov
jo
cmpsb
jecxz
inc
out
int
fldl
addr16
xchg
and
mov
adc
mov
and
ds
mov
lea
sub
push
pushf
mov
xchg
jmp
jecxz
push
pushf
mov
idivl
fldenv
jno
xchg
imul
shr
pop
in
dec
jmp
mov
sbb
pushf
xchg
jl
jae
mov
cli
je
mov
sar
or
pushf
jnp
cs
cwtl
xchg
fwait
sub
cmp
and
je
les
xchg
add
pop
push
jns
mov
push
gs
xchg
adc
jb
insl
push
mov
rorl
nop
data16
and
mov
andb
pushf
imul
pop
push
daa
pop
xchg
pushf
jbe
movb
jns
mov
xchg
out
lods
xchg
jns
data16
addr16
fmull
clc
int
push
push
int3
loope
xor
les
bt
dec
and
int3
dec
cmp
mov
or
cmpl
xchg
pop
pop
cmc
aam
mov
xchg
or
xor
add
sbb
cmpsl
mov
add
jecxz
shlb
mov
cmc
add
xchg
mov
cs
adc
jge
ret
jnp
mov
rol
adc
and
rcl
adc
mov
pop
scas
sbb
xchg
enter
addl
bsr
sbb
lret
cmp
fldenv
in
mov
inc
decb
ljmp
lcall
mov
adc
lods
cmpsb
fucomp
xchg
lock
cwtl
adc
pop
test
hlt
xor
in
lods
and
js
jns
das
pop
popf
xchg
mov
xchg
movsl
lods
negb
mov
mov
sub
negb
in
sti
jp
cltd
and
inc
pushfw
pop
cmpsl
adc
dec
in
ja
mull
push
stos
lods
pushf
pusha
mov
jg
pop
pop
xchg
pushf
xor
repz
insl
iret
clc
xchg
xchg
pushf
adc
dec
mov
cltd
cmc
sarl
dec
insl
pop
movsl
es
pop
pushf
sub
xor
dec
cld
cmp
test
lods
cmp
popf
or
add
repz
aas
in
sub
cmp
setno
dec
mov
cmc
pushf
daa
fdecstp
stos
hlt
xchg
es
add
cmpl
or
jl
aas
das
inc
stos
popf
push
ror
scas
xchg
push
add
sub
sub
mov
inc
lods
outsb
je
cmpl
dec
xor
les
out
mov
pushf
push
cmpsb
movsl
jns
out
adc
add
dec
adc
mov
orl
xchg
jb
mov
sub
pushf
or
lods
pushf
xchg
pop
aad
insl
dec
jo
mov
lods
sbb
adcb
mov
pop
jbe
mov
leave
mov
inc
mov
pushf
dec
inc
xor
std
inc
in
fadds
pop
out
daa
sub
iret
sbb
pushf
repnz
mov
jl
dec
mov
call
pushf
insl
push
adc
jae
or
test
outsl
movsb
fcoml
je
mov
movsl
inc
push
jb
out
mov
iret
push
add
xor
lcall
adc
jmp
ret
sahf
jecxz
mov
xchg
inc
pushf
push
xchg
mov
and
mov
sbb
fdivrl
repz
push
fldenv
adcl
in
fnstcw
mov
mov
repz
xor
pop
mov
and
sarb
and
jmp
pushf
popf
cli
movsl
dec
out
mov
das
mov
out
inc
sbb
loope
shlb
cwtl
dec
aam
mov
add
fistps
sahf
jmp
push
xor
add
scas
mov
rclb
into
cld
sbb
pop
pop
sbb
or
jmp
mov
faddl
sbb
test
sub
mov
mov
pop
cmpsl
or
jne,pt
pushf
stc
inc
pop
cltd
cmp
arpl
lods
movsl
jno
fdivrs
inc
pushf
xchg
adc
popf
xor
enter
pop
adc
add
fisttpl
cli
sbbl
movsb
mov
add
imul
mov
cmpsl
xchg
mov
aas
pushf
xchg
lods
pop
pop
into
adc
bound
mov
sbb
out
je
sub
mov
jbe
insl
adc
dec
inc
push
pushf
jns
lds
sub
out
or
pushf
cmp
ds
inc
das
pushf
aas
xchg
or
adcl
push
sub
xor
mov
jl
sbb
jne
stos
dec
dec
mov
jge
push
out
movsb
jno
lods
cmp
outsl
loope
pushf
lock
mov
jae
and
int
pop
sahf
test
rep
xchg
xor
and
sbb
and
daa
jne
stc
pushf
add
push
pop
fdiv
push
mov
push
ss
lcall
xchg
sti
pushf
ja
outsl
inc
out
call
adc
xchg
mov
pushf
mov
pushf
sub
add
inc
fidivrl
jg
pop
xchg
stc
jmp
dec
xor
call
pushf
xor
je
push
lds
pushf
sub
lods
sub
pushf
mov
xchg
xor
jae
daa
stos
mov
add
add
lret
in
mov
out
xor
mov
out
push
js
xchg
idivl
dec
repnz
ljmp
xor
xchg
xchg
leave
or
test
lods
cmp
inc
pushf
loope
inc
pop
pop
pop
sbb
cld
jbe
cmpsl
sbb
mov
xor
test
sub
aam
fmuls
lcall
or
inc
sub
cmp
std
pop
punpckhbw
mov
inc
stc
cmpsb
pushf
cmc
xor
mov
gs
xchg
lcall
lea
in
pushf
inc
adc
cmp
clc
adc
pop
and
loope
pushf
insl
cmc
fsubs
sbb
pushf
inc
std
mov
adc
cmp
xor
cld
sbb
xchg
dec
push
jge
xchg
add
sti
dec
cmp
inc
dec
dec
pop
sub
loop
and
jge
sti
subb
mov
icebp
jl
mov
out
cld
push
adc
push
jle
aas
addl
sbb
sbbb
rorb
pop
loopne
jb
mov
scas
js
out
out
nop
dec
cli
std
adc
xchg
jl
test
stos
adc
xor
push
mov
cmp
or
aad
mov
jnp
push
xor
incl
pop
pushf
xchg
cmc
arpl
mov
les
lret
lods
mov
ficomps
cmp
mov
mov
add
mov
pushf
mov
pushf
pop
sahf
ficoml
pushf
mov
int
lret
lahf
aad
subl
sub
ret
scas
or
fstl
mov
loope
jno
fstpt
adc
test
or
or
sub
out
sbb
cmp
scas
jne
add
cmp
sarb
fmuls
lret
xor
sbb
jb
les
loopne
popa
or
loop
add
mov
clc
jg
gs
cmp
mov
pushf
pop
cmp
cltd
jnp
inc
adc
ret
pop
gs
mov
jmp
jl
jmp
xchg
or
loopne
lds
xchg
push
mov
pop
pushf
cmp
lahf
pop
cmpsl
sub
pop
outsb
aad
mov
clc
adc
push
in
cmp
lds
enter
jb
loopne
test
sar
sbbb
stc
jne
popf
push
scas
mov
xchg
jno
rclb
pushf
sub
stc
je
pop
jns
xchg
lea
mov
mov
ret
scas
push
aam
sub
sbbl
push
xor
inc
lods
pushf
push
mov
fildll
ret
shr
pushf
lret
loopne
fistpl
adc
inc
pushf
cmc
add
xor
pushf
incb
imul
mov
shll
add
cltd
fstl
pushf
jo
mov
sbb
pop
adc
mov
dec
pop
bound
sub
adc
inc
cmp
or
and
sub
ficoms
cmp
xchg
cld
push
clc
out
outsl
push
mov
and
inc
aaa
push
pop
mov
mov
loopne
ja
loopne
insl
mov
mov
mov
jnp
cwtl
ret
ja
and
bound
adc
js
sbb
sbb
mov
jno
pushf
xchg
or
enter
out
pushf
push
gs
fwait
notl
rcrl
push
loopne
pushf
cmc
and
bt
push
fnstenv
pop
popf
rcll
push
pushf
adc
add
push
and
inc
std
bound
clc
je
jecxz
imul
pushf
cmpb
dec
pop
fnstsw
xchg
mov
hlt
inc
and
in
cld
pop
fwait
inc
pop
movsb
cltd
push
je
add
mov
mov
shrl
fldcw
pop
or
jo
sub
inc
repnz
cmp
decb
xchg
ficompl
incb
jae
push
daa
cmp
into
xchg
mov
lods
cmp
xchg
cmp
sbb
xchg
push
in
lods
orl
jo
daa
lret
mov
pushf
cli
and
bound
andb
and
or
inc
adc
jl
call
mov
aas
pop
add
mov
lods
pop
not
jmp
sbb
cmpsl
shrl
xchg
sbb
inc
or
mov
outsb
sbb
lcall
add
or
pushf
das
cmp
rcrl
insl
and
xlat
iret
fdivs
push
repz
ficomps
xchg
cld
sti
rclb
lods
inc
into
mov
sbb
pop
or
aad
pop
test
hlt
push
outsb
fwait
pop
mov
mov
fcoms
jo
mov
movsb
pushf
leave
pop
ds
push
test
mov
push
loope
pushf
int3
out
insl
pop
repz
push
xchg
inc
cmp
mov
add
out
mov
out
pextrw
xchg
movsb
jo
jmp
pushf
cmp
pop
xor
aad
inc
cld
add
movsb
mov
js
pushf
mov
mov
scas
loop
push
ljmp
mov
adcl
sarl
xor
insl
outsl
push
mov
pushf
xchg
xchg
test
push
stos
lock
mov
std
xchg
mov
jg
popa
pusha
loop
fadd
add
faddp
inc
push
xor
xorl
mov
lods
in
loope
in
push
jge
push
mov
or
xchg
shll
xorl
pop
sti
and
pushf
test
rolb
in
pushf
aad
fadds
sbb
in
pushf
aas
jle
sub
adc
push
pushf
icebp
sbb
rcll
cs
mov
out
adc
xchg
cmp
pop
and
pop
popa
fbstp
pushf
imul
sbb
mull
cld
ds
mov
pop
imul
dec
mov
stc
ja
stos
pushf
sub
pop
sbb
mov
add
and
repnz
mov
cmp
sbb
es
add
out
js
pushf
pop
icebp
sub
movsb
outsl
cmp
push
adc
or
sti
and
outsl
jl
jnp
mov
js
fmull
inc
gs
mov
push
rcrb
lea
mov
repnz
adc
icebp
clc
mov
dec
cld
and
repz
push
adc
shrd
adc
in
mov
jns
pushf
xchg
imul
adc
stos
addb
xchg
movl
ljmp
add
inc
xlat
movsl
cmc
and
cmp
pushf
rcrl
jle
shlb
or
or
iret
ljmp
push
push
dec
pushf
test
cli
and
dec
mov
mov
rorb
pushf
rcll
inc
iret
sbb
pushf
insb
dec
andb
rorb
or
filds
jle
imul
dec
or
dec
lcall
enter
fnstsw
inc
repz
xchg
inc
cmp
addr16
xor
inc
jl
and
sarb
pop
and
dec
mov
mov
popf
inc
in
aad
in
in
es
xchg
mov
fs
mov
mov
in
in
sub
or
shll
aaa
lret
pushf
js
icebp
push
jge
push
push
pushf
xchg
loope
add
sbb
stc
push
adc
xchg
lods
sbb
cmp
cwtl
push
loope
das
imul
andl
cli
sub
ljmp
das
jne
jge
add
pop
mov
cmp
inc
dec
iret
repnz
inc
pop
aas
cli
test
dec
pushf
or
jge
pop
outsl
mov
mov
jno
pushf
lahf
xchg
jae
lds
jae
mov
mov
mov
popa
pop
nop
pushf
mov
jle
idiv
pop
fisttpl
into
dec
sbb
xchg
inc
por
pop
aaa
push
icebp
lods
pop
inc
or
pop
fwait
rcr
ret
mov
fcmovu
mov
out
push
adc
xor
cli
out
mov
fildl
and
lods
push
das
sar
xchg
scas
mov
test
cmp
int3
fisubrs
outsl
pushf
ret
inc
jmp
lret
loopne
iret
mov
cmpsb
nop
cmp
pushf
pop
das
out
scas
leave
es
jl
imul
and
pushf
insl
or
jb
pop
sbb
lods
es
rcll
stos
aad
push
stc
mov
cli
pop
or
hlt
in
jl
push
cld
adc
mov
jns
mov
or
mov
sbb
cmp
inc
andb
sub
cwtl
xchg
dec
or
jmp
in
mov
or
js
jno
push
fs
jg
or
mov
mov
pushf
mov
ret
ljmp
xchg
adc
sub
jle
mov
call
sbb
or
out
std
push
push
mov
mov
gs
js
loopne
test
add
inc
addr16
adc
stos
clc
sahf
mov
pushf
mov
sub
into
js
mov
leave
mov
pushf
jge
dec
in
rol
outsl
pushf
orb
incl
stos
mov
pop
jb
movsl
xor
lret
pushf
mov
xor
push
js
jle
xchg
pop
jle
sub
imul
lods
push
insb
pop
jnp
add
insl
jg
outsb
xor
mov
or
sbb
daa
jecxz
mov
xchg
aam
push
popa
test
jmp
jmp
sbb
jns
mov
cld
lods
test
sbb
mov
mov
jge
insl
pop
aad
ret
lods
or
rolb
jle
sti
jecxz
aaa
add
xchg
push
pop
decl
pop
test
push
pop
cmp
add
pop
and
fwait
jmp
in
pop
inc
jl
and
aad
cld
add
jbe
xor
xchg
mov
dec
fcoml
outsb
insb
jnp
xchg
cwtl
insl
rolb
inc
fsubl
pop
aaa
push
mov
stos
pop
push
mov
mov
xor
mov
adc
fimuls
ss
pop
fbstp
add
push
loop
pushf
daa
push
negb
mov
dec
or
pushf
add
or
out
mov
lods
xor
mov
pushf
insb
sub
xor
mov
test
and
mov
insb
jg
cmp
int3
xchg
sbb
adc
fisubrs
dec
mov
cmpsl
pushf
ja
test
mov
sub
pushf
mov
repz
pushf
mov
add
cs
addr16
mov
push
cmp
leave
outsl
hlt
js
scas
test
and
xchg
jl
aad
mov
lahf
lcall
js
dec
jo
jae
cmp
sub
mov
adc
call
arpl
dec
pop
push
jmp
xor
repnz
mov
hlt
adc
push
dec
fistps
insb
fs
int3
loope
cmp
jbe
inc
push
popa
and
xchg
fidivs
hlt
pushf
or
shlb
scas
out
xor
out
pushf
call
lods
or
iret
jecxz
jg
jle
jbe
or
and
sub
jge
popf
test
lret
lock
stc
out
push
xor
xchg
ss
outsl
mov
or
and
stos
lret
daa
mov
pushf
pop
mov
or
push
cmpsb
scas
pushf
sbb
push
push
pop
push
pushf
out
cmc
ja
out
push
xor
fiaddl
sbb
xlat
call
rcrb
inc
int3
leave
jge
notl
mov
flds
fldt
nop
ret
testl
cmpl
mov
dec
xor
add
push
pop
loop
mov
std
scas
xor
and
xlat
pop
lret
repnz
xor
subl
jbe
adc
xor
and
xor
outsb
push
sbb
jl
mov
test
jg
mov
clc
mov
jl
dec
pushf
call
mov
loopne
adc
mov
repz
cld
lahf
ret
dec
clc
ds
xor
rol
pop
mov
add
cmp
ret
sahf
jnp
mov
adc
out
adc
fcomps
mov
and
pop
icebp
mov
add
mov
adc
les
mov
lods
mov
pushf
mov
nop
xchg
xor
mov
sbb
mov
inc
ficomps
shrb
aas
pushf
add
fstpl
repz
xchg
arpl
stos
xchg
xor
notl
shll
jmp
lods
pushf
out
or
mov
jno
pushf
iret
enter
es
test
pop
pushf
imul
mov
aam
xchg
mov
dec
xor
sti
andl
xlat
pop
mov
popf
push
jns
sahf
pop
fldenv
int
push
mov
xor
aad
and
and
sahf
stos
or
je
fdivrs
inc
ret
mov
outsl
inc
mov
jns
cmp
call
and
push
jl
jae
push
push
sahf
push
pushf
sbb
jge
stc
dec
mov
push
aad
and
int
xchg
lods
push
pop
pushf
out
test
dec
in
inc
lds
ffree
jae
sub
ds
fcomps
cmp
pop
and
bound
pusha
mov
jns
pop
in
pushf
test
cmp
pushf
sbb
mov
jle
rol
inc
push
out
lock
mov
pop
pop
mov
sbb
into
mov
shrl
or
push
jno
outsb
dec
insb
imul
sbb
shll
int
dec
rcrl
popa
add
mov
mov
xor
add
js
mov
insb
add
shlb
adc
stos
mov
scas
mov
fsubrs
jo
pop
stos
dec
pop
add
loop
aas
into
sbb
cmpsb
js
stos
inc
inc
stos
pop
ret
popf
sbb
and
roll
cmp
pop
mov
add
mov
lods
pop
aas
popf
mov
popf
mov
movsl
mov
cmp
cmp
sub
sbb
and
xor
jb
cmpsl
mov
cs
jg
outsl
stos
add
rcr
and
sub
mov
sbb
inc
bound
pop
mov
iret
sub
mov
dec
adc
and
xor
lods
fnstcw
sub
pop
sahf
fs
loopne
mov
xor
mov
mov
and
mov
mov
iret
movsb
jl
mov
add
in
lods
pop
mov
call
sahf
in
shlb
push
cld
or
dec
frstor
xor
mov
fcmovnb
mov
xlat
scas
cmp
je
mov
popf
xor
movsb
mov
mov
stos
jbe
mov
bound
aam
xlat
loop
sbbb
popf
lcall
divl
shll
mov
cmpsb
lods
mov
test
inc
ret
std
adc
lahf
daa
xchg
fcompl
mov
shll
lahf
xlat
add
negb
pop
mov
add
es
shrl
pop
add
repnz
cmp
fdivrp
popa
xchg
inc
into
xor
mov
rcll
sbb
push
xorl
cs
mov
or
cld
pop
dec
pop
dec
fildll
cmpsl
ss
fsubrl
sub
or
mov
sbb
mov
movsl
scas
dec
push
out
or
lods
scas
xchg
mov
cld
xlat
mov
into
lea
lahf
pushf
inc
test
rcrb
vpackssdw
xchg
fwait
sarb
sub
xchg
jl
pop
lret
push
dec
lods
cld
xchg
jge
mov
in
movsb
data16
fwait
rcrl
test
adc
and
xchg
sbb
mov
out
inc
or
outsb
mov
cmp
xchg
push
cmp
fildll
adc
mov
loope
pop
inc
ret
lods
lods
inc
push
lds
es
xchg
imul
js
cld
add
popf
lods
xor
xor
movsl
pop
in
scas
sbbl
mov
stos
add
lods
cmp
ret
sbb
add
into
popf
xor
pusha
call
cmp
das
into
movsl
xor
and
mov
daa
pop
lahf
insl
add
mov
mov
sub
pop
aas
aam
lahf
mov
pop
add
lods
scas
push
xor
mov
stos
pop
and
fidivrs
cmp
ret
pop
pop
mov
sahf
add
into
mov
scas
ret
movsl
pop
cmp
pop
mov
int
sbb
adc
and
mov
sahf
ds
add
bound
push
fsubl
cmpsl
movsl
hlt
in
lret
shll
mov
popf
outsl
sbb
sarb
movsl
mov
push
sbb
mov
and
shl
es
movsb
mov
mov
xor
sub
hlt
mov
lahf
mov
out
xchg
sub
push
and
push
int
ficoms
jns
sbb
loopne
sbb
data16
stos
int
fsubrp
and
loopne
and
mov
pop
fdivrp
and
mov
and
inc
int
fimuls
into
insl
loopne
and
push
int
ficoms
into
jp
cld
add
loope
sbb
and
movsl
addr16
or
stos
and
out
int
fidivs
and
movsl
je
push
loopne
and
sti
lods
jl
int3
push
faddp
and
add
movsl
loopne
and
mov
sub
int
outsb
movsl
adc
mov
push
and
xchg
int
and
std
inc
popf
lahf
into
inc
loopne
and
and
and
movsl
lods
into
dec
loopne
and
xor
aam
jne
pop
movsl
mov
gs
and
ror
jle
into
cmpsb
loopne
and
mov
sub
into
and
adc
mov
push
and
xchg
int
loopne
test
movsl
mov
and
es
fisubrs
or
lock
xor
aad
jbe
sbb
frstor
ret
fiadds
into
ljmp
jo
adc
mov
push
into
mul
cwtl
and
mov
fisubs
into
test
daa
and
push
or
scas
and
icebp
into
xchg
loopne
and
ja
sbb
mov
fisubs
ret
and
push
int
fimuls
jmp
mov
loopne,pn
and
adc
mov
push
and
movsl
cltd
into
cmp
and
mov
and
loopne
and
scas
int
fdivp
and
loopne
inc
sbb
and
sbb
and
movsl
gs
pop
loopne
and
in
int
fisubrs
and
movsl
jb
adc
mov
push
stc
int
mov
and
add
mov
xchg
sub
lret
and
into
mov
push
and
xchg
int
and
sbb
loopne
fmuls
mov
sbb
in
mov
and
jl
cmp
shlb
xchg
jge
xchg
cmc
jne
sahf
push
mov
movsl
jge
sbb
insl
negb
ret
ss
out
cli
pop
and
mov
clc
add
pop
shlb
xlat
pop
shlb
shl
clc
inc
ja
shlb
shlb
mov
pop
fs
sub
pop
and
mov
cwtl
mov
jp
fstpt
xor
stc
and
add
xor
cmp
test
jns
pop
add
mov
mov
mov
out
fidivrl
inc
cli
cli
mov
clc
pusha
cmp
rcrl
jp
fs
sub
lcall
mov
fisttpl
jge
and
cli
cwtl
and
in
cmp
inc
pop
pop
shlb
aam
pop
sahf
ret
mov
sahf
cmp
in
and
xor
pop
and
scas
fcmovb
mov
fiaddl
sbb
stos
add
mov
mov
jge
xchg
fs
sahf
and
mov
fimuls
mov
lahf
pop
cmp
mov
aas
mov
mov
stos
pop
add
pusha
pop
rorb
rclb
mov
inc
clc
popa
sbbl
loop
rclb
rclb
movsb
mov
clc
add
aad
clc
and
cmp
les
push
in
stos
add
sar
cmp
enter
scas
fs
nop
and
in
cmp
scas
add
xor
lds
jbe
popf
lret
in
pop
add
call
inc
cli
mov
rolb
add
xor
cmpsb
and
stos
aas
out
into
mov
or
jge
pop
es
shll
shlb
add
xor
xchg
mov
popf
or
into
aam
sub
jge
jl
cli
icebp
and
inc
daa
cmp
xor
addr16
dec
popf
sub
into
hlt
rorb
jge
add
mov
mov
or
jge
orb
and
dec
push
fs
push
leave
mov
mov
jmp
dec
or
mov
imul
shrb
fistps
stos
jge
push
in
lret
sbb
ljmp
mov
sub
fistps
stos
jge
jns
into
lret
pop
shlb
cmp
sahf
aas
sub
mov
rorb
clc
js
pop
ror
cwtl
cmp
lods
cli
sub
dec
insb
mov
int
lods
jnp
or
sub
lods
mov
lods
dec
out
stos
sahf
mov
mov
out
mov
dec
mov
mov
lods
adc
stos
popa
adc
jo
lods
xchg
nop
stos
jecxz
mov
xor
jno
lods
mov
sahf
test
dec
sar
mov
sub
adc
rolb
xor
mov
lods
fnsave
push
fistps
and
outsb
mov
ret
rcrl
aaa
sub
repz
add
mov
mov
xor
jae
lods
into
xchg
stos
push
aam
lods
cwtl
hlt
stos
repz
lods
inc
je
mov
mov
aad
lods
ret
cmc
add
pop
arpl
and
addr16
hlt
mov
cmpl
enter
mov
mov
iret
sahf
std
mov
mov
mov
cli
xor
cmp
es
movsb
std
cmp
mov
mov
jmp
lahf
sbb
and
and
mov
mull
mov
stc
mov
inc
mov
lahf
pop
cmpsb
adc
mov
sbbl
and
fdivl
popf
cmpsb
and
fs
mov
mov
cmp
ljmp
sub
cmp
cmpsl
mov
lret
lods
pop
sub
jle
daa
insl
add
mov
cmp
ljmp
add
sub
mov
mov
pushl
adc
sub
mov
mov
ret
xor
dec
call
sub
push
jge
cs
mov
push
into
stos
mov
lret
mov
pop
sub
bound
push
mov
insl
and
pop
insl
test
mov
and
jge
sahf
mov
fisubs
mov
movsl
mov
sahf
lahf
mov
add
ret
lahf
into
movb
popf
fs
add
ret
mov
pop
inc
mov
mov
and
inc
mov
cmp
and
insl
and
ds
test
rcrb
leave
ret
pop
ret
mov
loop
into
sub
and
cmp
and
push
test
stos
pop
jmp
movsb
cmpsb
xor
aas
xor
jmp
loop
mov
add
mov
stos
add
into
xor
sub
test
mov
cmp
and
insl
and
loopne
test
ljmp
fnstsw
fs
xor
cli
scas
ret
mov
jecxz
pop
jo
ret
cmp
mov
in
test
mov
and
mov
mov
stos
xor
push
aaa
lahf
movsb
mov
xor
imul
stos
into
mov
stos
sub
and
ret
test
ljmp
sbb
lods
mov
cmp
test
mov
mov
mov
rolb
iret
mov
pop
out
lahf
cmp
mov
test
sarl
scas
sbbl
mov
scas
loopne
test
sbb
and
aaa
ret
movsb
fisubs
ret
popf
pop
rorl
sarl
ljmp
test
add
ret
cmpsl
fsubp
or
sbb
sbb
sbb
cmpsb
lahf
pop
mov
xor
in
mov
pop
test
sub
ficompl
fsubrp
and
mov
sub
mov
lret
mov
cs
daa
mov
mov
mov
add
mov
int
fidivs
adc
mov
push
loopne
fmuls
insl
mov
cmpl
movsl
jle
cmpl
mov
mov
stos
xor
sahf
cmpsl
mov
inc
cmp
lret
mov
push
aam
std
mov
dec
ja
cmpsb
cltd
shrb
mov
cmp
std
mov
dec
fcoms
sub
loope
xor
cli
scas
mov
mov
pop
mov
inc
cmp
xorl
xor
cmc
mov
daa
jle
movsl
std
xor
cltd
shlb
inc
add
jno
mov
push
hlt
mov
add
xor
loope
mov
sbb
sbb
mov
clc
push
sub
cltd
shll
mov
inc
clc
lahf
xchg
movsb
std
xor
cltd
out
and
popa
cli
test
lret
test
xor
mov
adc
negb
sub
sub
xor
cltd
fistpll
and
ljmp
pop
mov
in
push
ret
rol
arpl
and
mov
pop
enter
mov
fisubrs
sahf
mov
and
stos
lods
mov
jo
in
jb
sahf
mov
in
stos
mov
push
cmp
push
mov
hlt
mov
dec
dec
and
and
pop
shrb
and
sbb
inc
loop
arpl
lret
outsl
fdivrl
aas
mov
sub
es
lahf
sbb
inc
jp
popf
inc
out
mov
sub
out
movsl
iret
cmpsb
fistpll
and
mov
inc
stos
das
sub
inc
jo
test
or
and
mov
cmp
and
outsl
scas
movsb
mov
int
inc
lahf
fsubl
mov
scas
and
and
scas
cmp
and
pop
rorb
jae
scas
mov
stos
mov
sub
mov
clc
lahf
lock
test
pop
test
mov
sub
lahf
xor
loope
stos
insl
add
xor
adc
xor
sub
lret
ss
xor
loopne
mov
xor
xor
xor
shr
ret
mov
xor
xchg
rcrb
ficomps
aaa
add
push
sahf
popf
int3
sarl
adc
cmp
lahf
add
add
stos
add
jo
sbb
mov
push
shl
mov
shlb
inc
lahf
popf
mov
xor
jo
and
push
stos
into
scas
mov
stos
daa
nop
sub
popf
push
das
ljmp
std
and
pushf
out
xor
outsb
mov
mov
sub
test
rolb
fiadds
mov
in
mov
pop
test
add
ret
sub
mov
xor
mov
mov
movsl
add
pop
add
icebp
mov
mov
ljmp
mov
cmp
xor
adc
cs
ljmp
adc
mov
inc
and
push
inc
cmpsb
add
xor
mov
mov
push
mov
sti
stos
add
xor
push
sub
movsl
mov
pop
mov
mov
inc
xor
popf
push
aaa
loop
bound
lahf
jno
mov
stos
clc
mov
add
into
mov
push
cmpsb
add
mov
mov
into
mov
std
mov
cmpsb
loope
mov
cmp
mov
cmpsb
orl
mov
mov
sahf
sbb
cs
xor
movsb
sbb
mov
cmp
mov
xchg
mov
mov
cmpsb
sahf
clc
fisubl
loope
mov
mov
push
loopne
fcoms
mov
mov
ljmp
popf
mov
sub
mov
mov
cmp
ljmp
mov
test
loope
mov
mov
bnd
shl
push
xchg
mov
imul
out
imul
cmp
aas
aam
adc
scas
lods
pop
mov
fs
popf
mov
mov
mov
sub
movsl
cmpsb
sahf
int
pop
and
popa
mov
cmp
or
lahf
xor
lahf
jle
push
mov
repz
sub
jecxz
mov
pop
rorl
shll
mov
push
sub
stos
test
push
ret
data16
cmp
ss
and
inc
insl
fistpl
mov
movsl
es
mov
lret
sub
cmpsb
int
pop
movsl
insl
add
mov
cmp
ljmp
test
scas
into
cmpsb
mov
lret
cmpsb
pop
test
insl
add
mov
cmp
mov
mov
jle
daa
andb
cwtl
jle
pop
test
mov
loopne
test
add
scas
add
xor
cmp
lahf
sarl
sub
mov
cmpsl
subb
ret
sti
ljmp
mov
push
jbe
mov
mov
daa
repz
mov
mov
cmp
ficoms
mov
or
mov
shlb
sub
js
lods
mov
js
sub
sub
mov
scas
insl
cli
mov
mov
pop
mov
movsl
cmp
es
jo
push
cmpsl
div
mov
lahf
dec
outsb
mov
scas
cmpsb
shlb
push
mov
das
mov
stos
mov
movb
cmpsb
mov
xlat
jge
cmpsb
push
lods
and
xlat
scas
mov
insl
add
xor
push
or
rol
cmpsb
into
mov
ss
popf
jae
and
ss
test
sarb
jae
and
jg
mov
push
mov
xor
mov
int
imul
int
cmp
mov
add
xor
xchg
call
mov
add
into
daa
rcr
into
mov
dec
mov
ljmp
mov
sub
imul
test
mov
into
lret
cmp
and
lahf
int3
mov
into
daa
cmc
sub
insb
mov
pop
cs
lahf
lock
add
rclb
fwait
in
push
mov
aaa
and
lahf
fwait
sub
movsb
int3
sub
lahf
iret
cmpsb
mov
lods
xor
xor
lds
test
idiv
lahf
adc
cs
jns
test
adc
das
into
jmp
and
insl
and
or
mov
ljmp
inc
jge
xor
into
mov
pop
xor
ds
mov
cmp
adc
sbb
xor
adc
fs
mov
push
push
mov
ret
fcompl
mov
cs
mov
and
add
pushf
loop
ficomps
mov
mov
sahf
mov
stos
sbb
sub
cmpsb
inc
push
pop
add
mov
sub
loop
mov
jb
test
enter
add
mov
and
cmp
mov
pop
mov
xor
push
mov
mov
outsb
and
call
pop
mov
sbb
ret
aad
fs
push
xor
mov
sbb
dec
and
mov
dec
push
jmp
mov
ror
daa
jge
and
daa
jb
mov
mov
aad
and
mov
cmc
xor
in
mov
pop
add
outsb
cmpsb
repz
sub
movsl
sub
sub
sub
pushf
cmp
call
adc
xchg
shll
xor
mov
cmpsb
and
lods
jbe
mov
xor
mov
pop
cmp
aam
cmpsl
insl
add
xor
push
call
daa
ret
cmpl
push
ljmp
scas
sub
fisubrs
mov
movsl
dec
cmp
cmpsb
loopne
test
add
scas
jae
das
ret
sub
jae
stos
pop
mov
into
mov
add
jae
xor
xchg
call
mov
xor
xchg
call
pushf
add
rcl
mov
jb
mov
sbbb
mov
scas
enter
cmc
mov
movsl
cmc
cmp
popf
mov
sub
and
pop
scas
insl
add
mov
cmp
movsl
movsl
cmp
ljmp
sub
cmpsb
into
scas
mov
lret
mov
pop
das
insl
add
xor
push
call
pushf
mov
je
mov
sub
mov
stos
and
sub
ljmp
into
xor
fadd
lods
clc
xor
ret
xchg
mov
mov
stos
fisubl
stos
inc
cmpsb
cli
ret
mov
mov
lods
xor
push
pushf
pop
mov
mov
mov
in
stos
cmpsl
jbe
dec
xor
mov
out
add
push
xor
and
xor
test
xchg
mov
mov
add
push
lods
xchg
stc
and
ret
mov
xchg
lods
aaa
cs
stos
aad
ret
movsb
out
jge
mov
out
mov
and
insl
test
xlat
ret
mov
into
mov
cmp
mov
ficompl
ffreep
mov
pop
test
add
pop
lahf
push
int
pop
cmp
push
mov
cmp
movsl
push
cmp
mov
add
scas
xchg
stos
aaa
lahf
and
xchg
mov
mov
shrl
clc
test
ret
adc
out
xor
ret
out
pushf
shlb
ja
and
insl
add
mov
cmp
in
mov
sbb
and
daa
in
or
pop
add
jp
cmp
mov
cmp
movsl
add
lahf
ljmp
sub
inc
into
pop
mov
lret
mov
sub
and
mov
fsubrs
adc
stos
lods
fsubrs
cmpsb
test
ljmp
mov
jge
test
mov
repnz
cmpsb
mov
mov
xor
lds
xchg
mov
add
cmpsb
add
push
das
sbb
cmpsb
test
rcl
push
cmp
xor
aad
mov
test
stos
jmp
add
xor
cmp
xor
xor
loop
sar
lahf
lret
pop
cld
stos
rcl
lahf
jno
dec
and
cs
lahf
and
rol
mov
or
js
and
adc
popf
mov
or
dec
push
stos
bsf
lods
stos
mov
sub
dec
lahf
cli
ret
cmp
mov
cmp
imul
movb
or
mov
lahf
sub
or
mov
mov
adc
pushf
das
mov
dec
mov
shrl
mov
mov
enter
ljmp
mov
jg
mov
arpl
lahf
mov
in
jo
test
rolb
jne
add
dec
mov
cmp
in
mov
sub
jl
add
jl
into
lods
mov
lret
lods
aas
mulb
add
sub
mov
into
scas
mov
stos
movsb
cmp
pushf
jns
lods
test
mov
sub
ljmp
lahf
pop
lods
mov
jecxz
pushf
sbb
sub
xor
in
mov
mov
popf
test
roll
daa
jns
and
hlt
insl
xchg
xor
mov
shlb
cltd
mov
pushf
test
cltd
mov
dec
and
cltd
lahf
jle
lods
cmp
jns
mov
mov
pop
and
pop
pop
xor
ljmp
mov
mov
mov
mov
mov
pushf
mov
scas
into
mov
cltd
lahf
dec
mov
mov
movsb
mov
cmp
and
fs
loopne
push
mov
out
and
fs
inc
ss
out
mov
and
movsl
push
mov
fidivl
pop
cwtl
mov
cmpsb
aaa
ljmp
cmpsl
mov
push
and
int
and
adc
mov
push
and
lcall
pop
and
movsl
mov
and
sub
lret
fisubrs
movsl
mov
push
loopne
and
ss
fidivrs
sbb
loopne
andl
or
stos
movsl
dec
into
in
loopne
and
ror
jae
adc
into
cli
loopne
mov
pusha
int
fisubs
mov
sub
insl
int
fidivs
into
xchg
loopne
and
jp
cld
mov
and
movsl
or
loopne
and
or
stos
fimuls
movsl
into
xor
shll
push
int
ficomps
sti
and
fistpl
popa
and
movsl
int
fsubrp
and
loopne
and
mov
push
fdivp
and
loopne
mov
inc
int
fiadds
into
push
dec
int
ficoms
into
jne
pop
and
pop
lods
fcompl
int3
jge
pop
and
movsl
bound
fsubrp
and
loopne
and
mov
push
fdivp
and
sahf
pop
cmp
and
inc
int
fiadds
imul
int
ficoms
into
jbe
sbb
pop
int
jbe
jle
and
ret
and
cmpsl
int
fsubrp
and
loopne
and
mov
push
fdivp
and
jnp
pop
cmp
movsb
sbb
push
and
mov
sbb
in
mov
mov
subl
movsl
mov
stos
fwait
shrb
mov
jp
sahf
mov
inc
and
test
stos
cmp
fwait
add
sub
mov
cmp
jg
pop
mov
lcall
hlt
dec
cmp
dec
mov
lret
add
lret
mov
fisubrs
scas
lret
subb
cs
jmp
and
cmpsl
cltd
add
mov
mov
jmp
pusha
mov
pop
dec
stos
xor
push
sub
xlat
mov
rclb
mov
mov
cmp
sahf
sub
js
xlat
testb
mov
cwtl
sti
cs
scas
xchg
shrb
rol
das
dec
and
les
and
xor
gs
fidivl
pop
add
shlb
lock
mov
data16
dec
push
xor
cmpsb
std
cmc
lods
mov
push
lret
jg
and
dec
cmp
sub
lahf
mov
into
std
fidivrl
cld
fidivl
add
pop
je
shlb
imul
shl
scas
fisubl
test
daa
sbb
jecxz
push
out
mov
mov
mov
repnz
test
loopne
xor
mov
loop
rclb
xor
add
dec
xlat
mov
lods
in
outsl
movsl
cmp
push
add
pop
jne
mov
mov
data16
sbb
movsl
jl
xchg
sarb
je
rorl
clc
mov
cli
add
popa
add
movsl
and
xor
scas
lret
stos
std
cmc
dec
mov
or
cmpb
in
xor
int
mov
fisubrl
ror
and
sahf
int3
std
sub
fldt
outsb
cmc
pop
cmp
and
cltd
add
dec
mov
test
and
cld
cmc
sarb
scas
lods
xor
push
mov
in
repnz
lods
mov
push
rolb
push
mov
xchg
mov
in
push
test
pop
cmp
mov
shl
addr16
mov
cmpsb
in
cmc
inc
das
shrb
mov
data16
es
test
fwait
mov
rcrb
sbb
add
insl
shl
scas
xor
arpl
or
cmp
xor
sub
cmc
rorb
and
icebp
scas
test
in
xchg
scas
iret
dec
shrb
sti
or
or
js
shl
mov
mov
cmpsl
test
and
loopne
xor
lods
cmp
jle
ds
popf
loopne
lcall
mov
ss
jnp
mov
scas
loop
rolb
push
popf
aaa
out
sub
out
xor
shlb
add
push
and
lea
in
aad
dec
jnp
scas
push
int
insb
sub
sahf
mov
test
mov
add
mov
pop
mov
cmp
rorb
pop
pop
xor
andl
mov
xchg
xor
xchg
lret
inc
pusha
and
lahf
test
mov
cmp
xor
scas
stos
adc
mov
xchg
scas
mov
mov
popf
int
stos
mov
cmpsl
stos
icebp
cmc
lods
aaa
lcall
jle
repnz
mov
in
dec
xor
add
movsl
dec
sub
stos
and
fldt
scas
xchg
scas
mov
jmp
std
mov
xchg
lods
sahf
or
mov
shrb
jle
adc
cli
mov
into
push
xchg
stos
in
clc
testb
jno
cmpsb
stos
pop
add
mov
mov
and
mov
lods
xchg
dec
mov
dec
or
movsb
inc
fldt
imul
cltd
sarl
add
popf
in
clc
push
cmpb
addl
or
mov
sub
mov
das
cmp
sub
xchg
shrd
mov
push
stos
dec
into
js
pop
pushl
scas
push
mov
jns
mov
inc
fisubl
imul
mov
jbe
push
stos
jns
mov
cli
stos
push
aaa
lea
mov
sub
movsb
test
sub
in
mov
push
push
mov
mov
xchg
mov
data16
stos
adc
mov
xchg
into
mov
mov
imul
nop
cmp
mov
scas
hlt
mov
mov
pop
dec
stos
mov
cmc
scas
sub
mov
and
mov
mov
mov
ss
inc
mov
dec
stos
jbe
lods
sub
shlb
lock
gs
pop
cmp
shlb
fisttpl
test
adc
stos
mov
lret
sub
mov
cmp
jno
mov
mov
xor
cmp
movsb
fwait
sarb
scas
xchg
cmp
mov
sarl
mov
cmp
jg
jg
lods
stos
icebp
cmc
mov
push
sub
xor
mov
subb
scas
nop
test
add
mov
sub
mov
out
test
out
icebp
push
repnz
sub
add
push
cwtl
movsl
cmp
sbb
daa
jns
fwait
ret
mov
lock
outsb
ffreep
popf
jp
dec
or
cmp
jb
lahf
xchg
mov
mov
call
sub
jae
or
jge
mov
scas
ffreep
sbb
insb
xor
enter
cmp
lods
adcl
jge
dec
jne
lahf
mov
push
sub
sbb
push
add
add
add
xor
lahf
add
pop
pop
loopne
loope
clc
dec
pop
pop
mov
sahf
mov
lahf
cwtl
sub
cmp
clc
mov
add
jns
sbb
mov
xor
sbb
push
mov
lret
add
xor
jnp
sbb
fstp
mov
sbbb
jbe
call
mov
ds
in
inc
clc
pop
popa
pop
add
or
and
loop
les
call
mov
jecxz
loopne
faddl
inc
add
call
sub
out
cmp
sub
popf
jg
stos
out
and
xor
shlb
fidivl
lahf
xchg
sub
or
imul
jge
mov
lods
in
or
push
clc
xlat
dec
ret
xor
xor
stos
and
fs
rorb
jge
adc
lods
mov
pop
ja
cli
xchg
mov
rclb
fimull
lahf
or
movsb
sbb
adc
pop
add
sahf
or
popf
pop
stos
sbb
cld
xor
add
cmp
ds
xor
mov
fisttpll
cmp
add
xor
fisubs
loope
push
rorb
cmp
mov
shlb
sar
ficompl
aas
lahf
push
sub
fwait
pop
clc
ljmp
add
adc
jge
pop
pusha
lods
test
test
mov
andl
inc
add
xor
and
cmpb
fcmovbe
sbbl
pop
add
inc
sahf
add
dec
bound
mov
ret
call
mov
arpl
add
mov
in
fs
rcrb
clc
fs
popf
roll
mov
jl
fiadds
lods
mov
or
inc
fcmove
data16
fdivrs
cmpsl
and
call
mov
xchg
lcall
call
rcrb
push
aad
mov
call
jae
popf
mov
sarb
lahf
sbb
xchg
rcrl
call
bnd
mov
fdivrl
cmp
push
add
cmp
xchg
pop
mov
in
test
popf
push
xlat
rorb
rolb
lahf
mov
pop
cwtl
sahf
or
sbb
xchg
sahf
cmp
in
mov
mov
or
fisttps
jl
xchg
sub
cmpsb
cmp
mov
mov
mov
pop
mov
imul
mov
frstor
sub
movsb
jle
frstor
push
fcoms
jo
imul
sbb
xor
out
jmp
sbb
and
mov
and
sub
mov
stos
stos
int
in
test
cmp
cld
lods
mov
scas
sub
js
lods
and
cmpl
movsl
mov
add
mov
mov
ret
mov
jle
mov
mov
or
ret
mov
ficomps
jle
mov
ficompl
pop
mov
std
mov
fstpt
daa
mov
int
std
cmc
movsb
scas
and
fistpl
mov
aaa
scas
sbb
aam
out
add
into
mov
sub
push
movsb
fidivrl
mov
push
lods
pop
sub
mov
lods
scas
cmc
test
cmp
mov
mov
lods
js
sahf
rcrb
scas
jecxz
test
pop
xor
ret
enter
and
and
int
arpl
and
inc
mov
aam
movsb
into
mov
sub
int
fisubrs
sub
mov
into
mov
xor
int
fidivrs
daa
les
int
sub
mov
lods
xor
mov
lods
stos
inc
lods
sbb
mov
inc
popf
cmp
jg
mov
movsl
and
cmpsb
loopne
and
stos
int
fisubrs
and
movsl
xor
xor
mov
xor
int
fidivrs
and
mov
push
into
pop
loopne
and
and
movsl
fisubs
and
loopne
and
mov
mov
mov
mov
mov
mov
mov
sarb
cmpsl
into
sub
sub
das
xor
xor
fs
test
mov
movsl
into
sub
lods
and
mov
fidivrs
mov
sub
scas
fidivs
and
lds
daa
stos
int
fidivs
lods
sbb
mov
cmpsl
sub
scas
fidivs
and
sbb
and
sub
sub
das
and
movsl
xor
mov
sti
and
movsl
sub
sub
ss
fidivrs
sahf
movsl
pop
into
mov
and
and
loopne
and
xor
mov
xor
mov
aaa
into
mov
int3
sbb
movsl
mov
and
test
sub
stos
and
mov
xor
cmp
popf
test
push
and
and
mov
loopne
and
sub
lods
fisubrs
into
mov
xor
cmp
mov
mov
and
cmpsl
loopne
and
xor
mov
cmp
sbb
lock
sub
scas
fidivs
and
out
and
movsb
and
stos
int
fidivs
dec
sbb
xlat
testb
mov
mov
mov
mov
mov
mov
int
ds
cmpsb
sub
sub
sub
fidivrs
loopne
inc
sbb
movsl
and
and
lods
int
fidivs
and
mov
mov
adc
fwait
test
fnstenv
movsb
sahf
inc
enter
popf
or
or
push
mov
jmp
dec
imul
sbb
xchg
mov
or
fisttpll
cmpsb
rcl
mov
lcall
jbe
jp
sbb
cmp
popf
scas
sahf
test
mov
push
fadds
xchg
scas
stos
adc
jbe
cmp
xchg
mov
sub
int3
xor
cmp
je
lock
dec
clc
lock
scas
mov
push
dec
sub
fists
sub
test
popf
add
and
push
add
sbb
aam
jo
xor
pop
mov
xchg
sub
loope
aaa
mov
jg
lds
pop
adc
fdivrp
ja
jge
or
cmpsl
test
dec
les
mov
test
lods
push
test
pop
iret
push
and
jne
mov
push
mov
push
cmp
fnsave
fimuls
jecxz
cmpsl
pop
popa
inc
pushf
sbb
sti
mov
sahf
nop
mov
pushf
lret
jecxz
cmpsb
ljmp
mov
or
inc
cmp
push
push
push
sbb
sub
mov
sub
bound
popa
test
ss
mov
shrb
or
mov
dec
movsb
sahf
clc
xchg
push
adc
xchg
mov
cld
adc
std
iret
mov
push
cmc
fsts
enter
addr16
popf
dec
mov
faddl
jns
lods
lods
cld
xchg
ss
jae
jne
xchg
fcomps
sti
pop
sbb
mov
and
pop
pop
jbe
loopne
jne
push
shrl
and
daa
adc
mov
and
jecxz
mov
addr16
ljmp
mov
mov
xor
mov
aad
je
scas
xchg
js
popf
loope
cmc
and
lods
or
loopne
sub
rclb
arpl
add
mov
mov
pop
inc
xchg
and
sti
sahf
fdivrl
repnz
sbb
adc
jecxz
mov
dec
and
nop
adc
cmp
adc
xchg
add
sahf
jb
scas
icebp
ficoms
push
es
fnsave
mov
negl
inc
mov
ss
aaa
rclb
xor
scas
out
les
sahf
cmpsb
add
lahf
repnz
and
rcr
mov
fstpl
sbb
lcall
shll
push
and
ficomps
into
and
pop
in
and
clc
and
frstor
push
aad
in
sahf
es
dec
fistps
sahf
lahf
scas
mov
mov
or
imul
mov
mov
test
dec
movsl
pop
enter
and
mov
mov
sarb
sub
fwait
cmp
cmpsb
xchg
ret
mov
enter
mov
sub
jb
mov
push
imul
andl
fs
cmp
mov
clc
out
push
cmpsl
or
push
out
pop
jo
jns
movsl
test
scas
into
pop
lock
dec
ret
scas
mov
cmp
sarb
in
enter
imul
lahf
mov
xchg
mov
popf
mov
test
test
les
ret
push
ffreep
pop
xor
sub
lods
test
sub
ljmp
sub
and
shlb
dec
mov
push
jge
in
xchg
sub
mov
pusha
mov
es
into
ss
movsl
mov
cmp
sub
jmp
enter
mov
sub
test
fwait
jg
cmp
or
es
add
test
cli
std
and
jae
pop
mov
and
cmp
and
iret
sbb
or
movsl
and
ret
shrb
and
inc
mov
push
std
lods
add
sub
loop
test
sub
cmpsb
pop
inc
out
jl
enter
in
add
sub
sub
test
mov
int3
xchg
test
and
add
fimuls
scas
inc
mov
movsl
test
lods
ffreep
lods
hlt
and
inc
sub
cmc
les
ljmp
sub
sub
stos
mov
imul
ffreep
mov
xor
sbb
xor
push
jge
dec
inc
and
cmp
xor
xor
mov
lahf
and
lret
icebp
mov
fs
mov
movsl
in
mov
sub
inc
mov
push
ljmp
pop
lods
loop
xor
add
lods
scas
fistpl
rcr
or
mov
call
cwtl
aaa
lods
jge
mov
inc
test
pushf
mov
dec
fidivrl
lret
jmp
jge
sub
popf
aad
outsl
fildll
adc
dec
pusha
and
mov
andl
xchg
mov
into
ret
std
sbb
addr16
jmp
test
loop
test
popa
mov
cmp
test
mov
sub
notb
insb
cmpsb
leave
or
xchg
mov
add
xor
lods
add
mov
dec
mov
and
mov
cs
std
cmpsb
rcr
mov
and
popf
xchg
stos
adc
loop
mov
mov
loop
mov
xor
in
inc
in
mov
push
loop
popf
add
and
inc
popf
add
xorb
test
scas
pop
add
add
and
xchg
adc
add
roll
in
ret
scas
cmp
ret
ret
loop
stos
lahf
mov
movsl
add
insb
stos
vpmovsxbw
cmpsb
out
mov
movsl
leave
adc
ljmp
movsl
movsl
leave
and
stc
cmp
push
xchg
movsl
lock
bound
sahf
into
das
xor
ret
xor
ja
jo
adc
cmp
mov
into
sub
loop
and
bound
orb
and
mov
bound
subl
subb
push
dec
loop
add
ret
mov
test
sahf
test
popf
sbb
push
mov
adc
mov
loop
addr16
push
xor
pushf
ret
loop
sub
inc
dec
sub
loop
loop
bnd
cmpsb
sub
subb
sahf
cmc
inc
mov
mov
pushf
movsl
popf
test
mov
in
int
push
movsb
push
mov
andb
dec
andb
subb
shl
rol
shll
sub
and
lods
lret
int
pop
dec
pushf
mov
outsb
dec
jae
loope
shrb
jge
push
xchg
xor
fimuls
lret
sbb
dec
dec
xchg
xor
pop
mov
enter
mov
dec
sbb
lahf
rcrb
bound
xor
stos
movb
and
mov
fstpt
mov
push
xor
sub
xchg
mov
lcall
push
and
add
xor
and
sub
sub
loop
bound
test
xor
push
xor
aas
subb
into
aaa
inc
hlt
cmp
lahf
inc
das
cmp
fs
imul
push
mov
adc
mov
stc
pop
dec
mov
dec
lret
call
push
xor
add
enter
xor
das
pop
das
push
mov
cmp
out
sub
mov
lahf
je
mov
stos
mov
sub
enter
pop
dec
and
shll
inc
scas
popa
aas
mov
xlat
movsb
inc
aam
into
mov
dec
pushf
leave
pop
mov
jmp
xor
xor
mov
mov
int
xor
loope
push
inc
and
mov
scas
mov
sub
add
cmp
xchg
rcrb
test
and
mov
sub
rcr
in
cmp
add
or
mov
cmc
ds
popf
movsb
mul
mov
imul
cwtl
outsb
std
fistpl
ljmp
and
inc
xor
push
xchg
sbb
repnz
mov
fsubrl
inc
clc
sub
mov
shl
sbb
addr16
jns
inc
sub
sbb
cmp
push
push
and
push
jg
loopne
out
sbb
mov
pop
mov
aam
call
push
scas
push
xor
sub
rcrb
jg
sub
test
dec
iret
inc
imul
into
cmp
out
fucomp
xor
dec
mov
dec
lahf
in
das
and
popf
ficompl
sahf
lods
mov
fsubl
mov
rcrb
aaa
sub
mov
mov
dec
int3
push
lds
add
enter
les
stos
mov
sbb
xor
loop
aad
rdpmc
pusha
sbb
mov
inc
sub
mov
loopne
add
bound
mov
cmp
out
in
pop
inc
icebp
pop
mov
sbb
faddl
mov
and
and
mov
das
sbb
mov
xor
scas
dec
jnp
into
out
bound
mov
lahf
les
cld
cmp
pop
add
and
cli
mov
cld
and
mov
into
stos
loopne
and
xor
movsl
into
addl
pop
push
enter
pushf
mov
dec
stos
and
lds
fildl
std
cmp
sub
and
mov
xor
dec
push
lods
mov
jecxz
lret
inc
fsubrl
fld1
popa
repz
add
sub
sti
movb
test
ljmp
xor
pop
jge
dec
scas
call
movsb
data16
bound
and
and
out
push
sub
loop
inc
lods
iret
lahf
cwtl
test
lret
sahf
and
adc
push
mov
and
stos
sbb
stos
lret
xorl
int
mov
popa
lds
nop
test
and
add
xchg
in
lods
into
xchg
add
stos
and
cmpsl
push
mov
movsl
lods
mov
add
jns
push
or
push
sbb
inc
mov
inc
sbb
add
mov
test
test
andb
insl
test
lods
call
rorl
push
mov
sahf
imul
xor
mov
mov
lret
mov
pop
cmpsb
xchg
scas
sbb
rorl
int3
insb
mov
xor
pop
imul
xchg
lret
push
mov
les
cmp
and
ficoml
mov
dec
push
test
mov
sahf
movsb
clc
daa
arpl
es
pop
out
and
cs
and
mov
shl
lds
sub
and
lods
cmp
sahf
xchg
leave
scas
scas
dec
inc
mov
add
inc
mov
andb
dec
into
in
mov
sahf
push
mov
add
test
mov
ljmp
ss
sub
shrb
cmp
cmp
gs
cmpsl
mov
movsl
lret
mov
loopne
sub
ljmp
shrb
sub
mov
shrb
cmpsl
and
push
roll
jo
fs
lods
mov
xor
jge
sub
in
push
popf
push
mov
xor
popf
xor
aam
imul
mov
pop
cs
in
cmp
xor
insl
pushf
and
inc
leave
push
dec
lret
push
xor
das
loop
xor
add
lods
mov
incl
xor
scas
es
mov
push
sbb
outsl
mov
or
add
jmp
mov
movsl
mov
mov
test
repnz
in
add
movsb
scas
ret
mov
mov
decb
and
jnp
mov
test
cmp
and
ss
cmp
sub
das
sahf
cli
shlb
shl
out
inc
sub
das
scas
cli
cli
sbb
adc
and
pop
enter
dec
fmulp
ds
es
dec
sahf
lahf
clc
xor
mov
fisubl
lahf
pop
nop
movsl
sahf
and
push
loope
sbb
sub
sbb
or
sub
xor
cmpsl
mov
jg
fisttps
mov
fcomp
ljmp
pop
sub
rcl
and
mov
sbb
mov
fs
icebp
sub
stos
sahf
or
aas
leave
sbb
stos
negb
movsl
lahf
mull
mov
mov
dec
repnz
push
pop
mov
pushf
fsubl
iret
and
mov
inc
cmpsb
in
test
orb
cmc
mov
movsl
or
fstpl
mov
shll
lret
out
out
lret
mov
cmp
shrl
imul
push
sub
push
cmp
inc
fisubs
and
or
or
cmp
pop
push
cs
pop
popa
rorl
shll
fdivl
mov
mov
lock
popa
cli
in
push
cmp
mov
jmp
inc
les
ljmp
sub
ljmp
sbb
scas
or
mov
lods
movsb
dec
cmp
mov
insl
mov
sub
xor
add
popf
sbb
data16
das
cmp
enter
xor
and
pushf
mov
stos
jecxz
pop
push
mov
inc
std
imul
pushf
rorb
pop
sub
sub
jno
sbbl
scas
movsb
sub
enter
cmp
jle
lods
inc
mov
je
mov
cltd
or
mov
pop
sub
in
idivl
loop
cmp
xchg
cmp
dec
sahf
movsl
sub
popf
pop
sub
pusha
loop
mov
cmpsb
pop
lahf
in
xlat
xor
mov
mov
popa
call
dec
lcall
shrl
mov
pop
mov
data16
les
mulb
in
sub
cs
sbb
dec
sub
icebp
inc
clc
test
cli
inc
adc
lods
in
imul
push
inc
stos
mov
fdiv
rcrl
dec
jg
shrb
sub
push
shrl
pop
call
pop
and
sahf
push
sbb
fidivrs
mov
cltd
add
push
or
sub
push
sahf
loopne
lock
inc
lret
sub
leave
gs
dec
shrl
into
ljmp
sub
test
mov
sub
dec
pop
into
subb
pop
das
mov
cs
sub
loopne
push
bound
cmp
sbb
mov
repz
gs
stos
mov
stos
shr
xchg
fidivrs
cmc
lds
arpl
sub
popf
mov
dec
mov
mov
sub
push
dec
mov
push
sahf
out
xorb
data16
mov
in
pushf
add
or
or
sbb
xchg
stc
fbstp
and
cmpsb
fildll
out
int
cmpsb
test
push
mov
mov
mov
mov
sub
pushf
push
and
mov
leave
ljmpw
add
and
insb
mov
loope
jecxz
push
ret
das
push
arpl
andl
add
cmp
or
and
push
mov
xchg
cmpsb
and
push
and
sub
add
andl
lods
and
imul
pop
in
das
xor
cmpsl
sub
fs
and
stc
inc
call
or
mov
jecxz
push
outsb
movsb
push
pusha
jo
clc
scas
repz
daa
in
sti
pop
sahf
jecxz,pn
mov
cmp
ljmp
es
movsb
jnp
xlat
cmp
sub
cmp
mov
cmp
addl
push
fildll
in
cs
mov
push
call
mov
cmpsb
mov
cmp
xchg
ret
movsb
fbld
outsb
mov
out
pop
out
and
xlat
daa
in
and
xor
cs
and
fnsave
sbb
test
or
sahf
mov
stos
push
mov
xor
sub
push
and
xchg
or
add
pop
dec
push
and
sbb
mov
shrb
cmpsl
les
scas
bound
in
push
ret
sub
cs
mov
dec
and
sahf
add
fcoml
mov
mov
xor
sbb
scas
mov
scas
pop
xor
xchg
outsb
mov
arpl
aam
inc
mov
pop
and
ret
and
sahf
in
out
pop
daa
jmp
sub
mov
mov
ds
sbb
lods
scas
sub
xor
push
in
out
leave
ret
sbb
mov
jb
add
and
xor
and
cmp
loopne
into
movsb
in
fstpl
sbb
lea
dec
repnz
push
sub
xor
ljmp
push
data16
mov
pop
popf
stos
or
out
cs
dec
sub
push
cmpsb
into
mov
sub
sahf
cmp
mov
insl
data16
push
clc
jecxz
mov
mov
push
mov
lock
imul
sbb
fsubl
movsl
fldl
shlb
mov
adc
mov
scas
sub
adc
push
repz
mov
shlb
mov
and
or
movsb
fildl
push
or
add
push
mov
popf
out
outsb
push
or
pop
jp
lods
lock
dec
pop
xor
mov
popl
adc
out
test
test
int3
fmul
sbb
in
into
pop
lcall
shl
sub
out
push
cli
push
and
test
and
cmp
test
mov
mov
pusha
and
adc
imul
std
or
xchg
pushf
cwtl
cld
sbb
push
xor
data16
pushf
xchg
data16
sub
les
jmp
cmp
xor
sub
add
sub
std
test
mov
sbbl
cmp
dec
lock
fadd
and
mov
push
in
icebp
mov
icebp
popf
jae
or
mov
aaa
push
push
mov
xor
fists
scas
or
out
mov
in
fmulp
and
jp
aad
loopne
in
imul
std
jmp
pop
addr16
push
mov
push
into
fs
push
add
dec
data16
aad
test
add
dec
jo
push
shrl
push
roll
pop
or
add
fildll
sti
and
mov
pushf
and
jp
repnz
cmpsl
inc
mov
sub
ds
adc
orl
loope
popf
imul
and
out
xor
gs
push
andl
imul
mov
mov
sub
movb
mov
into
faddl
jne
enter
loope
cmc
gs
sahf
dec
sub
sbb
xchg
nop
push
mov
stos
sub
lret
icebp
add
inc
scas
shrb
mov
push
cmpl
stos
push
mov
mov
inc
pusha
cmp
add
mov
mov
mov
gs
xor
mov
les
push
or
pop
mov
mov
and
push
and
es
in
inc
stos
rcrb
lret
andb
or
push
inc
movsb
xor
mov
lds
imul
xchg
outsb
xor
out
sub
dec
xor
jae
test
inc
cmpsb
or
in
test
test
mov
jecxz
or
sub
pop
leave
mov
or
xlat
fwait
cmpl
push
cmp
mov
imull
push
inc
push
mov
loop
lods
mov
out
xor
pop
dec
inc
cmpsl
inc
push
mov
ret
out
ss
test
cwtl
push
push
and
dec
push
cmpsl
xor
push
jmp
xor
add
mov
mov
pushf
shll
fimull
loope
hlt
aad
dec
test
sub
cltd
loopne
nop
and
rol
jb
pop
add
enter
shl
stc
inc
jl
mov
aad
pop
in
add
lods
adc
xchg
add
in
inc
cmp
les
xor
in
mov
xchg
or
out
or
sbb
lea
jmp
add
lret
and
pop
inc
sub
lret
stos
out
aad
rclb
das
push
xor
mov
cmp
enter
sbb
subb
lret
cs
cmp
int3
fbld
out
and
loopne
add
xchg
fsubrs
test
sbb
movsl
test
pop
pusha
push
shrl
dec
stos
fstpl
sbb
dec
or
scas
mov
cmp
xor
pop
and
es
in
fstps
cmpsb
out
jmp
and
test
test
cmpsb
int
pop
lods
dec
push
mov
xor
das
int
dec
daa
sarb
sahf
mul
insb
and
in
ds
stos
aas
test
mov
test
popf
in
add
aam
lds
leave
push
pushf
scas
sbb
jge
and
dec
sahf
adc
sahf
lahf
sbb
scas
stos
xchg
lods
xchg
pop
add
stos
insl
or
loop
xor
push
sub
add
in
cli
shll
add
shlb
popf
into
add
and
push
lahf
in
in
xor
mov
dec
push
and
orl
xchg
ror
std
divl
imul
sahf
add
jns
sahf
lds
lds
and
sti
cmpb
lds
push
lds
in
add
or
mov
in
in
mov
ja
pushl
cli
add
into
add
sti
or
xor
and
and
mov
ja
and
and
xchg
fs
lds
out
cs
jmp
bound
xor
sub
jmp
out
stos
out
jmp
pusha
sub
out
cmp
jmp
out
out
jmp
pusha
cmpsb
xor
and
cmp
or
outsl
in
push
shlb
and
lds
hlt
push
lds
cmpsb
cmp
dec
sbb
add
and
lds
hlt
push
lds
cmpsb
lods
jb
dec
sbb
in
and
lds
hlt
push
lds
cmpsb
push
jb
mov
or
lds
sub
mov
and
sahf
cmpsl
clc
add
sub
push
les
es
pop
fstpt
mov
xchg
rcrb
push
adc
xor
pop
fildl
movsl
nop
outsb
test
cltd
xor
das
cli
pop
or
stos
jae
aad
ret
lock
adc
div
pop
sbb
lret
push
ja
add
xor
lds
addb
ret
js
jo
das
xor
push
ret
out
xor
ret
or
test
jmp
mov
fadds
rcll
movsl
movsl
lret
scas
mov
jo
dec
and
pop
fistps
lods
add
lcall
sub
sysexit
cmc
add
ja
add
add
xchg
fs
add
into
add
add
cmp
add
and
mov
ja
and
mov
and
cmp
popf
in
add
and
push
test
imul
mov
push
and
cmp
lahf
in
cmp
mov
add
ss
mov
ljmp
dec
and
sub
add
cmc
add
imul
add
push
adc
repz
lcall
addr16
shlb
and
and
fwait
cli
lods
rcrb
das
idivl
scas
add
xchg
xor
leave
and
ljmp
int
lret
push
pop
mov
dec
push
movsb
icebp
sahf
cmc
mov
sbb
std
pop
cld
mov
aam
mov
jo
mov
in
cmp
sub
and
push
lahf
repnz
pop
imul
mov
mov
loop
jne
popf
mov
dec
cmp
cli
loop
sbb
xor
cmp
push
and
ret
repz
bound
sahf
leave
fs
popf
ljmp
cmp
dec
pop
cmpsb
add
subb
push
mov
xchg
sahf
andb
pop
and
lahf
in
cmp
shrb
shlb
mov
cli
ret
pop
push
les
sahf
xlat
in
add
cmp
icebp
mov
push
sub
bound
mov
rcrb
scas
loop
sbbb
movsl
xor
loope
sahf
add
bound
inc
sub
hlt
mov
add
mov
lret
inc
jge
add
and
fs
cmp
into
mov
and
cli
ret
fs
cmc
add
daa
cmp
inc
scas
sbb
icebp
ds
push
and
sahf
lea
and
andb
mov
and
bound
testb
and
sbb
imul
and
sbb
sahf
and
test
mov
inc
aad
test
jg
sahf
cvtpi2ps
sahf
ret
insl
xchg
data16
ret
in
jb
flds
movsl
sub
into
ret
lcall
cmp
into
and
and
test
arpl
pop
cmp
rolb
dec
idivb
mov
fsubrp
fnstsw
gs
ret
jg
ret
and
push
mov
arpl
jg
inc
and
mov
std
mov
test
mov
fcmovnb
jg
ret
sub
into
cmp
arpl
add
dec
and
and
nop
sbb
loope
popa
and
push
movsl
add
lea
fs
ret
cmp
cs
mov
popa
and
cli
les
fs
xchg
mul
sbb
add
into
loop
xorb
bound
icebp
inc
sahf
mov
fcmovnb
jg
cmpb
sub
adc
sahf
imul
fs
fildl
add
pop
and
sahf
mull
jg
fs
sub
xchg
jg
ret
sub
and
jno
pop
sahf
add
cmp
sub
loop
dec
stos
mov
test
fildl
inc
pop
inc
sub
adc
les
jae
pop
pop
sahf
sub
arpl
inc
add
mov
mov
sbb
inc
dec
sbb
and
mov
bound
lods
or
and
mov
add
ret
ret
fnclex
jg
bound
and
pop
and
and
mov
add
xor
mov
addr16
cli
and
test
add
and
and
into
and
and
fstpt
into
and
and
test
cli
and
in
mov
lock
arpl
jg
cmp
arpl
jg
inc
cmp
add
shlb
and
mov
fildl
jg
ret
sub
into
loop
andb
aaa
push
and
out
stos
scas
and
shlb
mov
ret
jge
les
inc
and
scas
fs
test
cli
push
fcoml
mov
mov
fnsetpm(287
jg
in
add
ret
test
jns
cli
loop
test
mov
fnclex
subb
add
mov
ret
sbb
loop
xor
imul
and
push
xchg
dec
and
cmp
inc
lds
js
lea
sub
aaa
shll
inc
push
stos
and
leave
dec
dec
pop
mov
push
jnp
sbb
push
sahf
fbld
mov
xlat
scas
enter
adc
in
xor
jae
xor
inc
add
out
in
fcompl
loop
and
jmp
in
fwait
mov
cmc
insb
or
mov
ljmp
jecxz
psrlw
in
call
sahf
out
lods
cmp
in
lods
inc
into
sahf
mov
mov
cmp
mov
push
pop
lods
cmp
jbe
cmpsl
out
movsb
cmp
mov
add
sub
fcomip
bound
loop
mov
out
movsb
cmp
mov
add
xor
sub
add
xor
or
and
add
scas
lret
loop
test
ret
loop
mov
xchg
into
and
bound
or
mov
lret
mov
pop
sahf
sbb
cld
out
xchg
push
jns
fbld
fcoml
and
mov
mov
lods
sbb
sub
outsb
loopne
js
push
inc
mov
mov
test
mov
out
and
loop
in
rol
mov
add
les
and
mov
push
jns
out
daa
add
mov
push
insb
in
clc
mov
gs
test
addr16
xchg
repnz
mov
gs
sbb
mov
es
xor
test
data16
int3
seta
and
lods
in
int
aas
mov
lret
loop
stos
fs
lods
scas
test
shlb
mov
scas
test
jl
test
mov
shll
and
mov
pop
stos
out
mov
test
ljmp
popf
mov
mov
push
ret
daa
jnp
sahf
or
mov
xor
and
add
xchg
stc
daa
fwait
mov
test
scas
les
test
ss
pushf
add
sub
sbb
idiv
and
adc
data16
mov
sub
sbb
push
sub
xor
jne
and
call
repnz
fisubrl
call
dec
xlat
cmp
call
mov
pop
mov
or
rcrl
out
in
xor
and
popf
sub
and
sbb
imull
push
mov
inc
jns
not
jae
mov
cmp
fldenv
test
popf
xlat
stc
jecxz
call
xor
int3
mov
add
in
sbb
mov
arpl
sub
out
and
mov
inc
ret
or
mov
leave
movsl
dec
bound
mov
stos
insl
mov
push
daa
rcrb
movsl
lods
out
lods
sub
gs
sub
sahf
sub
repnz
out
pop
cmpsl
push
push
push
mov
lods
sub
cmp
call
push
repz
sub
ljmp
push
mov
std
or
mov
and
gs
ret
jp
or
mov
addb
mov
pop
inc
inc
and
hlt
dec
popf
xchg
cmp
sub
movsb
in
loop
aam
dec
push
lods
aad
loope
movsb
and
xor
in
dec
xor
pushw
sbb
mov
push
sub
stos
daa
pop
hlt
push
stos
mov
cmp
or
sti
inc
xor
out
test
cmp
push
inc
call
or
dec
cmpsb
stos
sub
bound
ret
movsl
sahf
mov
lret
xor
nop
imul
jae
push
mov
add
in
jae
mov
lret
lea
hlt
add
fdivl
dec
pop
mov
cmpsb
mov
mov
mov
xchg
sahf
pusha
mov
push
push
mov
sub
inc
sub
outsb
movsl
sub
in
fisubs
fidivs
mov
push
in
out
scas
stos
out
pop
negb
xchg
cs
cmpsb
in
sbb
shrb
jae
push
sbb
mov
sbb
mov
sbb
jns
sub
and
mov
loope
xor
lods
lods
cmpsl
test
in
insb
push
sub
inc
jne
lods
pop
jg
and
scas
sbb
and
sub
sub
shrl
out
or
cs
sahf
adc
push
jbe
cltd
push
iret
sub
mov
rcrl
lds
rorl
fs
mov
js
mov
push
push
and
rcr
mov
xor
lahf
lea
call
movsl
dec
das
mov
ret
loop
call
loop
and
mov
jg
insb
out
dec
ficomps
and
mov
ja
cmc
scas
ret
add
movsb
push
push
add
pusha
rcrb
fmull
sub
repnz
mov
mov
xlat
gs
lahf
inc
and
sub
pop
jge
mov
jmp
and
sahf
ljmp
sarb
out
dec
mov
sbb
mov
ficoms
popf
sbb
loopne
lods
fisubrs
daa
inc
sub
lds
and
jns
in
in
scas
pop
in
dec
sbb
mov
push
loop
dec
in
loop
les
adc
imul
loop
inc
adc
test
and
idivl
and
add
loopne
pop
mov
sbb
pop
pusha
push
adc
fwait
mov
xor
xor
xor
push
mov
sub
sub
sbb
jns
inc
sbb
in
sahf
ds
and
push
inc
mov
jne
add
notb
stos
and
xlat
jb
es
cwtl
and
es
pop
mov
fcomi
rcrb
popf
mov
daa
jp
dec
xor
add
push
xchg
dec
cmp
popa
xor
xor
loop
out
mov
sbb
ret
xor
sahf
aaa
adc
loop
add
arpl
jg
ret
leave
mov
jg
into
add
mov
outsb
add
int
and
lea
test
fstpl
sahf
add
test
cs
fmuls
pop
add
test
stos
inc
pop
pop
jle
push
push
mov
adc
dec
out
pop
jo
inc
es
mov
and
mov
idivb
sub
jle
sahf
sub
sub
mov
scas
mov
inc
pop
das
and
or
es
dec
xor
sub
call
fnstsw
add
lock
popf
fs
popa
call
pop
and
movsb
ljmp
mov
popa
outsb
pop
dec
mov
cmp
lret
in
mov
jmp
sahf
in
aad
mov
std
repz
imul
stos
dec
out
roll
lret
movsb
add
iret
sub
push
xor
push
add
mov
jle
out
cmp
jecxz
enter
in
xor
mov
dec
stos
fsub
pmuludq
xlat
scas
mov
mov
fstl
mov
cmpsb
xor
inc
clc
mov
scas
mov
push
mov
sub
and
fsubrp
push
test
cmp
inc
out
sahf
into
aam
scas
xor
pop
js
mov
inc
rorl
out
dec
and
mov
dec
mov
fsub
int3
mov
lods
mov
adc
cmp
sahf
movsl
mov
lahf
daa
push
mov
das
mov
sahf
subb
inc
xchg
out
mov
aas
mov
sub
call
sbb
lret
sahf
cmpsl
xor
sahf
add
sbb
icebp
test
or
or
and
mov
and
jo
movsl
sbb
scas
push
and
mov
sahf
cmp
mov
ljmp
fmulp
dec
mov
divb
mov
xor
fwait
mov
mov
scas
push
fistpll
sbb
stos
and
xchg
ljmp
mov
subl
aaa
mov
push
nop
test
test
shlb
sub
nop
sub
mov
loop
sub
shlb
cli
cmp
and
and
push
in
sahf
cmpsb
cmpsb
cmp
stos
stos
xchg
xor
xor
xchg
mov
mov
loop
cmpsl
pop
and
xor
inc
js
lods
and
loopne
sub
mov
sbb
xchg
lods
jle
call
movsb
fldenv
stos
xlat
aam
jecxz
mov
cmc
pushf
xor
lods
inc
jb
sbb
mov
jno
stos
pop
sub
pop
mov
mov
adc
xchg
loope
fld1
mov
outsb
es
imul
cmp
pop
test
mov
push
nop
jmp
jae
clc
adc
outsb
mov
cmpsb
add
gs
repz
mov
pop
lods
mov
pop
or
gs
cmc
stos
orb
out
jecxz
adc
gs
shrl
fidivrs
in
insl
sbb
in
sti
xchg
adc
cli
mov
pop
adc
sbb
adc
inc
mov
scas
sub
scas
movsl
and
xor
mov
and
dec
stc
cmpsl
dec
js
sub
jb
rcrl
and
cmpsb
mov
push
mov
movsb
cmp
test
daa
xor
push
mov
push
rol
loop
testb
pop
mov
fldcw
mov
cmp
xor
pop
add
scas
test
rorl
jb
sbb
ret
test
jg
dec
es
xor
mov
xor
inc
and
and
and
sbb
mov
jnp
shrb
push
cmp
add
scas
and
pop
mov
stos
dec
and
jge
push
fsubl
mov
jb
mov
les
jl
out
fs
jge
es
mov
ljmp
arpl
or
or
mov
aam
hlt
mov
mov
mov
mov
daa
pushf
les
sub
ret
aaa
sbb
adc
adc
and
mov
lea
shlb
pusha
arpl
call
sbb
movsb
out
sahf
stos
popa
into
mov
lcall
lahf
inc
xor
lahf
rcrl
mov
xor
xchg
push
sub
into
out
and
and
pop
orb
shll
pop
xor
mov
gs
es
aaa
fsubp
jne
inc
sahf
dec
sub
lret
es
mov
sub
lahf
rcr
movsb
imul
xor
xchg
testb
push
dec
cmp
popa
repnz
cmp
sahf
loop
test
inc
sub
push
ss
sahf
adc
jp
sbb
sahf
in
negl
test
add
stos
cmp
ja
push
hlt
pop
and
in
ja
cmp
pushf
scas
bound
shl
cltd
jle
push
nop
adc
fstl
cmpsl
cmp
jle
adc
sub
test
test
dec
repz
lds
popa
dec
xor
lea
add
out
and
xlat
ds
jnp
xor
push
stos
add
xchg
std
gs
fbld
push
shlb
lret
mov
lods
jmp
xlat
aam
leave
arpl
dec
and
inc
jmp
lods
jle
and
xor
call
mov
or
adc
sub
mov
or
push
data16
and
mov
or
sub
aas
cltd
dec
mov
mov
pop
repnz
mov
mov
mov
lret
in
and
shll
pop
mov
push
dec
ja
push
push
inc
fwait
and
and
mov
sub
loop
mov
mov
nop
ss
lret
sbb
mov
cltd
mov
jmp
cwtl
add
xchg
mov
sbb
int
sub
cmpsb
ljmp
inc
sbb
loopne
out
inc
filds
in
jbe
addr16
cs
push
sbb
test
and
or
sbb
ss
and
mov
jl
popf
out
in
push
and
divl
cwtl
call
arpl
and
repz
pop
xchg
push
sbb
xor
inc
insl
pop
fildl
mov
sbb
fbld
fs
dec
faddp
mov
jae
xchg
add
or
cli
test
inc
sarb
frstor
mov
and
leave
and
mov
xor
shlb
lahf
in
xor
mov
cmpsb
xlat
mov
imul
and
mov
in
out
add
test
sbb
and
cltd
scas
lcall
sub
sub
fldt
aas
mov
mov
cltd
into
cli
sub
sub
stos
iret
mov
rcrl
fldt
jge
mov
inc
fsubrl
movsb
test
movsb
popf
sbb
inc
mov
test
jge
repnz
mov
cmpsl
and
sub
jo
xor
lret
mov
mov
lods
dec
sbb
pusha
mov
add
mov
lahf
push
lahf
icebp
and
rcrb
mov
and
outsb
sbb
lock
scas
lcall
test
mov
cmp
arpl
inc
cli
pop
fstpt
test
mov
xchg
rcrb
mov
daa
jno
sbb
jmp
test
arpl
sarb
rol
mov
cli
arpl
test
xor
pop
fstpt
lea
in
and
clc
or
or
mov
or
or
or
pop
fstpt
sub
or
sub
mov
mov
add
and
pop
sbb
mov
lahf
fstpt
sub
sub
sub
xor
sub
ja
shll
fnstcw
mov
test
or
inc
cli
pop
fstpt
dec
cltd
scas
jp
dec
movsb
jae
push
cmpsl
clc
dec
mov
dec
out
dec
inc
and
pop
fstpt
dec
and
pop
inc
movsb
cli
outsb
lahf
nop
mov
mov
cmp
arpl
jge
insl
dec
pop
push
dec
and
mov
and
fstpt
shld
imul
rcrb
sbb
nop
sub
inc
cli
lret
mov
stos
lea
xchg
add
sbb
mov
stos
jge
into
stos
cli
stos
pop
fstpt
lea
lret
xchg
rcrb
lret
or
inc
cli
pop
push
xor
sub
mov
xchg
add
lret
xchg
cmp
ljmp
mov
lahf
out
lahf
xchg
shll
sub
ljmp
add
and
ljmp
xchg
cs
or
cli
arpl
xchg
rcrb
ficomps
stos
jp
pop
fildl
lock
pushf
fimull
jg
or
or
arpl
cmc
arpl
movsl
cltd
mov
jne
enter
cmp
sub
lea
sahf
xlat
imul
and
mov
pop
adc
mov
mov
xchg
sarb
inc
cli
pop
fstpt
lea
mov
or
sub
lea
mov
push
pushf
pop
cltd
into
cli
sub
jge
mov
cmp
arpl
mov
inc
addr16
dec
mov
dec
mov
fstpt
stos
cmp
add
add
stos
sub
add
stos
inc
cli
xlat
cmp
inc
cli
test
outsl
mov
leave
push
and
movsb
testb
add
cs
sbb
sbb
mov
cmc
lret
xor
cmp
jmp
jae
mov
sub
nop
mov
lahf
dec
outsb
lahf
fildl
test
cmp
arpl
jg
jmp
into
cli
jmp
gs
cmp
into
jmp
jmp
cmp
mov
fucomi
jg
jmp
cmp
sub
into
jmp
jmp
and
mov
fstpt
jmp
or
inc
cli
ret
lds
call
push
lret
stc
dec
xor
test
jbe
out
in
dec
push
mov
jns
mov
xor
jno
mov
and
mov
leave
push
cmp
cli
ret
push
outsl
test
outsb
and
mov
mov
dec
push
and
add
sahf
pop
fwait
xor
ja
gs
fninit
mov
mov
clc
cwtl
fdivl
or
fdivrl
scas
loopne
add
es
mov
inc
mov
xchg
and
inc
movsl
lret
sub
mov
ret
mov
loope
cmp
in
lods
sbb
inc
jl
jo
mov
dec
aaa
pop
jo
mov
clc
shrb
insl
xorb
movsl
fcomi
inc
mov
pop
aaa
out
sbb
outsb
call
cmpsb
mov
xchg
fcoml
sbb
popf
or
lds
ret
sahf
mov
insl
int3
or
movsl
jl
jle
popf
mov
cmp
fcoml
or
movsl
lds
inc
movsb
mov
stos
sahf
je
mov
icebp
jne
out
popf
jmp
call
cmc
pop
mov
or
jg
fwait
shll
ljmp
cmp
outsb
movsb
or
aaa
movsb
shrl
or
cmpsb
ds
aam
imull
aaa
popf
rcrl
cmpsb
nop
mov
movsb
outsb
or
cmpsb
fstl
mov
sub
mov
je
mov
xchg
in
lods
ss
shlb
int3
inc
jl
data16
ss
insl
fmull
sbb
popf
inc
mov
xchg
popf
adc
xchg
xchg
aaa
mov
insl
fmull
sbb
popf
inc
data16
mul
xchg
xchg
pop
cli
fsubl
hlt
sbb
popf
icebp
sahf
outsl
mov
int3
imul
in
arpl
int3
pop
pushf
fwait
sbb
lods
xchg
push
int3
popf
jnp
jl
cld
rcr
push
jle
sub
and
je
cmp
mov
or
pushf
loope
mov
sahf
pushf
add
das
movsl
shl
push
or
push
subb
in
pop
lds
mov
imul
cmc
das
lds
mov
xor
sbb
insb
fwait
neg
cmp
mov
inc
push
loop
frstor
jge
gs
movsl
sbb
sub
adc
cld
push
test
shl
ror
push
repz
testl
xor
push
sub
iret
xchg
repz
add
sub
lcall
xchg
add
inc
mov
xor
rcrb
cmc
insl
pushf
sbb
add
popl
pop
cmp
push
mov
adc
iret
push
pushf
test
pop
push
jmp
jp
pop
leave
divps
cld
adc
sub
push
test
mov
aaa
daa
push
xchg
movsb
xlat
push
xchg
jno
cmp
adc
nop
jl
or
arpl
sti
or
cltd
dec
inc
lods
fistpl
mov
xchg
jae
lret
js
pop
clc
adc
sbb
cmp
popa
pop
pop
mov
mov
push
addl
int3
inc
jl
cmp
shlb
dec
lahf
push
sbb
inc
cmp
push
enter
aad
pop
adc
mov
and
and
and
mov
pop
mov
int
faddl
add
jl
mov
pop
mov
sbb
ret
bound
push
adc
loopne
push
sbb
lahf
mov
lods
inc
insl
fwait
mov
mov
shll
push
cmp
mov
fmull
cld
cld
sbb
jl
popf
daa
cmp
sbb
push
sbb
daa
shrl
ficomps
push
ja
or
sbb
and
mov
lahf
ss
mov
mov
sub
mov
fstps
cld
mov
cmp
pop
fwait
xor
jg
inc
sub
mov
les
pop
jl
mov
push
sub
cmpsl
in
xchg
popf
repz
inc
dec
aaa
les
rol
pop
inc
pushf
enter
push
loop
into
pushf
rcrb
ds
mov
in
cs
xchg
pushf
mov
mov
pushf
bound
and
inc
test
pushf
inc
data16
fmull
mov
push
stos
pushf
lret
jmp
sub
insb
mov
push
cs
outsb
mov
xor
pushf
nop
mov
icebp
repnz
push
pushf
jb
mov
repz
adc
pushf
push
je
mov
cmc
notb
pushf
ss
jbe
mov
neg
pushf
clc
sbb
pop
js
mov
cli
sbb
pop
jp
push
mov
xchg
les
mov
mov
or
jl
dec
pop
mov
xchg
pop
faddp
fadd
jl
lret
mov
negl
mov
jbe
and
fadds
pop
scas
divl
imull
xlat
shlb
jbe,pt
les
adc
sti
mov
xchg
push
jp
push
mov
roll
jecxz
inc
pushf
cmpsb
shl
lods
fdivl
dec
dec
popa
dec
clc
pop
mov
cmp
loop
aad
lret
cmpxchg
mov
movsl
arpl
lds
push
jb
in
sub
cli
stos
mov
and
pop
sub
rcrl
pushf
mov
inc
test
out
cli
mov
jl
dec
out
outsl
pushf
icebp
lock
and
xor
push
sub
mov
jne
pushf
mov
push
icebp
xchg
stc
push
pop
loopne
je
pop
imull
jno
fwait
aaa
stos
push
jl
jecxz
cmp
mov
pushf
loope
lret
fidivs
outsb
das
icebp
cmpsb
and
clc
out
mov
pop
cmp
fimull
xchg
hlt
mov
movsl
shrb
insb
pushf
add
sbb
aad
or
scas
stc
mov
push
lret
inc
pushf
xor
jno
aaa
shrb
mov
sbb
pushf
ljmp
pushf
in
pop
and
pop
jns
js
fisubrl
outsl
mov
lea
imul
lahf
dec
fidivrs
in
mov
das
sahf
push
mov
movsl
inc
mov
in
push
xor
pushf
inc
nop
inc
jns
adc
inc
xor
bound
ret
dec
fidivrs
loop
sub
pushf
popa
cltd
add
pushf
mov
mov
or
fcoms
repz
inc
pop
pushf
idiv
lcall
out
shrl
out
or
mov
jg
xor
sarl
and
xchg
push
stos
mov
mov
xchg
cmp
add
push
lret
push
fcomps
ja
pop
pop
pop
pushf
mov
dec
sbbb
and
pushf
add
arpl
mov
inc
out
ss
pushf
sbbl
std
jle
fdivrl
mov
pop
mov
inc
sbb
call
or
xchg
xchg
movsb
stc
xchg
bound
xchg
pushf
imul
into
mov
fcompl
nop
cmc
lods
pushf
lret
mov
pushf
ja
xor
push
xchg
push
mov
inc
dec
adc
inc
and
mov
daa
dec
fstpt
test
jo
cld
fstps
add
pushf
cmp
outsl
pop
dec
loope
idiv
stc
aas
loop
cmpsl
cmp
cltd
cld
aam
std
mov
add
mov
jg
ret
xor
lret
mov
adc
push
test
in
shr
push
pushf
cmp
rolb
mov
inc
mov
mov
sbb
jno
adc
push
push
cmp
pushf
out
mov
or
das
in
push
push
shll
minps
cltd
adc
in
push
clc
in
cmpsw
nop
push
test
jae
fmul
imul
mov
pushf
std
pop
das
imul
cmpl
mov
lret
pushf
cmpsb
pop
xor
xchg
cmp
and
mov
push
arpl
pushf
repnz
sub
sbb
dec
pushf
sbb
aaa
test
sbb
jl
popf
stc
cmc
cmpsl
mov
cmp
cltd
xor
mov
inc
test
push
fists
push
jno
stos
incl
aam
gs
sub
pushf
adc
ljmp
mov
xchg
sub
sti
gs
clc
mov
or
xchg
and
cmpsl
fisubs
es
scas
dec
jl
adc
pop
add
repnz
xor
imul
cmp
cld
xor
add
xchg
mov
mov
jg
xor
sbb
jbe
dec
fs
pop
sbb
mov
xlat
mov
mov
sar
push
lods
push
xchg
mov
jecxz
push
mov
push
xchg
push
pushf
jns
push
add
in
insl
xor
inc
adc
call
arpl
dec
pop
inc
jmp
xor
repnz
mov
hlt
adc
push
dec
fistps
insb
fs
int3
loope
cmp
jbe
les
dec
mov
fidivs
mov
jb
xor
outsb
orb
pushf
test
xor
or
iret
jecxz
jg
jle
mov
out
sub
jge
test
mov
lock
out
dec
push
xor
jl
ss
outsl
mov
cld
pushf
lock
mull
rolb
daa
std
cmp
pop
mov
or
out
mov
loope
push
pop
push
pushf
out
cmc
ja
out
push
xor
fiaddl
sbb
xlat
call
rcrb
inc
int3
leave
mov
xchg
sub
iret
jge
ret
mov
cmpl
das
mov
dec
xor
add
pop
pushf
loop
adc
scas
xor
into
and
xlat
lret
ret
repnz
add
lods
arpl
and
fnstenv
and
out
mov
ja
pushf
outsb
push
sbb
ficomps
out
and
test
fistpll
test
lret
and
pushf
dec
call
mov
loopne
adc
stos
sub
fisubs
sbb
lret
xor
mov
pop
scas
xchg
test
ret
sahf
jnp
mov
adc
out
adc
pushf
fcomps
push
or
pushf
cmp
icebp
mov
add
mov
adc
icebp
clc
fstps
adc
mov
mov
pushf
nop
xchg
xor
adc
sbb
sub
cmpsl
js
pushf
adc
test
and
pop
shrb
test
rcr
pop
repz
ficoml
xchg
xor
xor
pushf
and
fucomip
inc
mov
out
or
mov
mov
jae
es
xchg
pop
test
ljmp
aam
mov
cltd
cmp
xchg
hlt
inc
dec
xor
sub
pop
mov
popf
push
jns
sahf
pushf
pop
fldenv
call
ljmp
aad
and
pushf
and
stos
or
je
fdivrs
inc
mov
pushf
inc
out
pop
lock
and
dec
fsubrp
pushf
mov
jl
std
jae
push
sahf
push
push
sbb
jge
stc
dec
mov
push
aad
and
int
xchg
lods
push
pushf
pop
out
test
dec
in
inc
jge
aad
xchg
movsb
sub
adc
cmp
lea
aad
insb
mull
addr16
test
lods
mov
mov
sbbb
cs
lods
mov
ljmp
cmp
sbb
mov
mov
lds
mov
pushf
fbstp
sbb
push
loop
pushf
daa
push
negb
mov
dec
or
pushf
add
or
out
jl
sub
movsb
pushf
mov
outsl
mov
insb
sub
xor
mov
test
and
mov
insb
jg
cmp
or
fimuls
pushf
mov
cmpsl
ja
pushf
test
mov
sub
mov
mov
pushf
mov
sub
cs
mov
or
jg
outsl
hlt
js
mov
pushf
mov
push
pop
movsb
aad
lods
inc
sbb
in
lcall
mov
dec
jo
push
jae
cmp
sub
incl
subb
outsl
pop
push
pop
xchg
mov
bound
ljmp
lds
lret
push
in
mov
add
sbb
out
mov
jle
pop
les
fdiv
in
mov
pushf
aas
out
fistpll
test
lods
jl
fdivr
mov
xchg
cmp
cmp
sahf
fwait
sbb
sbb
in
mov
adc
test
lea
pushf
cmp
sub
sbb
repz
sti
or
or
dec
fisubs
loopne
mov
mov
xchg
mov
fistps
clc
subl
jmp
or
aad
in
ret
rcrb
lret
and
mov
loope
xchg
aam
lods
divb
pushf
jmp
fucomip
gs
stos
jg
fcmove
jnp
daa
pushf
pusha
xchg
mov
out
xchg
pop
pop
push
sub
fwait
pushf
test
inc
mov
mov
leave
cmp
daa
pushf
push
push
pusha
lds
mov
icebp
pushf
lahf
xor
insb
sti
xlat
test
cmp
mov
fbld
pushf
xor
xor
loope
data16
imul
ja
xchg
enter
clc
rcll
xor
lds
and
iret
arpl
lret
sub
mov
test
imul
in
inc
jnp
pushf
popa
mov
test
popf
xor
or
add
pusha
push
lahf
xlat
add
cld
mov
fstp
xchg
scas
xchg
insb
xor
inc
pushf
mov
sub
cld
std
add
push
andl
js
lret
adc
rorb
scas
adc
mov
sub
pop
mov
adc
shll
inc
add
push
fldcw
sbb
inc
movsb
mov
xor
mov
fsts
lret
ret
insb
imul
call
push
testb
pop
pushf
stos
popa
cwtl
fcomps
dec
push
pushf
dec
jg
addr16
xchg
pushf
fnstcw
pop
jmp
stos
xchg
sbb
mov
pushf
dec
pop
das
sub
sahf
les
stos
sti
pop
pushf
xchg
sub
pop
cmc
adc
setl
add
clc
cli
add
mov
stc
loop
cmp
mov
lods
mov
mov
mov
test
pop
pusha
or
cmp
repnz
or
pushf
in
sub
xchg
test
cmpb
movsl
mov
pop
pop
arpl
xchg
fistpl
add
inc
lea
test
pushf
imul
mov
add
adc
sti
shrb
dec
pop
sub
fists
or
ret
sbb
insb
sbb
mov
out
pop
arpl
pushf
inc
xchg
sub
sbb
cmp
or
lods
push
cmp
repnz
xor
loope
or
movsb
mov
pushf
in
mov
roll
sbb
dec
xlat
xchg
fs
and
jecxz
push
push
mov
cmpsb
sarl
add
xor
jns
mov
sbb
pop
je
mov
in
and
inc
cmp
inc
pop
hlt
pop
icebp
mov
ljmp
rorb
pushf
test
test
dec
pushf
or
adc
sahf
pushf
pusha
xchg
dec
addr16
sub
ss
push
rorl
or
mov
or
movsl
pushf
es
pop
sub
xor
lahf
or
mov
jp
lods
pusha
out
xchg
xchg
mov
cld
jne
subl
lcall
lods
bound
sub
mov
movsl
jbe
sub
push
jne
subb
sbb
ss
sbb
idivb
rorl
cmp
in
mov
pop
pushf
iret
out
fidivs
lds
push
loop
xchg
adc
adc
pushf
add
lahf
jecxz
mov
adc
adc
mov
je
pushf
in
jnp
xor
and
pop
rcll
lods
or
adc
mov
push
fadd
xor
dec
out
and
mov
stc
jge
mov
int3
mov
ficompl
outsb
xchg
pop
mov
lret
mov
sbb
cmp
jne
pushf
js
lods
xchg
arpl
add
pop
sub
pop
pushf
into
push
xor
jno
outsb
jmp
adc
int
jecxz
push
lods
enter
addr16
dec
pushf
ja
xor
loopne
xchg
pushf
in
pop
leave
sbbb
pushf
cmc
and
mov
movl
dec
lods
push
mov
inc
imul
stc
out
sahf
push
call
push
aas
pushf
dec
pop
dec
fists
movsb
mov
sub
pop
sub
nop
sub
loop
mov
sti
xor
cli
pushf
add
jnp
cmp
and
cmp
pop
sarl
mov
xchg
std
mov
or
mov
insl
leave
inc
lcall
movsb
ret
mov
jge
in
fidivl
jle
add
inc
mov
push
ds
mov
pop
xor
xor
icebp
dec
or
or
inc
xchg
cmp
mov
movsb
lock
dec
pop
testb
xor
jnp
jmp
cmp
cli
adc
sahf
inc
int
jo
sub
mov
inc
xchg
fstpl
mov
xchg
xlat
cmpsl
aas
pop
sub
dec
cmp
shrl
test
or
test
add
mov
sub
jge
cmp
lods
cmp
xchg
or
add
out
push
outsb
adc
pop
xlat
mov
in
jge
fs
sub
mov
aam
mov
movb
push
in
jecxz
pushf
push
insl
negl
in
in
jmp
mov
pop
mov
sahf
cwtl
popf
jg
or
rorb
negl
mov
pop
and
xor
jp
cltd
and
inc
pushfw
pop
cmpsl
adc
dec
in
ja
mull
push
stos
lods
mov
pushf
push
jg
pop
pop
xchg
xor
pushf
repz
insl
iret
clc
fistl
mov
inc
push
dec
dec
mov
cltd
cmc
sarl
test
aas
dec
cmp
test
xlat
lods
cmp
cld
sub
popf
rcr
clc
test
add
repz
mov
in
sub
das
cmp
xchg
cmp
pushf
inc
mov
stos
hlt
jl
es
fiaddl
push
push
mov
push
or
add
inc
sub
push
ror
lods
xchg
inc
cmp
sub
sub
dec
mov
mov
je
arpl
pop
cmp
testb
les
jecxz
out
mov
push
cmpsb
movsl
pushf
jns
out
adc
xor
jl
add
adc
jp
mov
ret
sub
js
and
mov
sub
pushf
sub
ja
xchg
pop
aad
mov
test
sbb
adcb
inc
mov
jbe
mov
xchg
leave
je
add
sub
push
std
jl
in
fcomps
stos
daa
sub
iret
pushf
sbb
repnz
mov
jg
dec
mov
and
dec
lods
pushf
lds
adc
jae
lea
jp
cmp
fcoml
pushf
je
mov
inc
push
jb
push
mov
cmp
inc
sbb
push
push
insb
jge
xor
fisttps
jecxz
cmp
push
xchg
mov
jge
or
sahf
mov
ds
repz
push
pushf
fldenv
push
and
in
pop
sarb
cmp
repz
dec
xor
pop
pusha
mov
inc
jge
and
shll
or
cmpsl
mov
hlt
inc
mov
lods
mov
movsb
add
jge
mov
mov
pop
mov
aas
pop
jg
jno
sbb
mov
jecxz
pop
mov
add
fistpll
pop
lods
pop
sahf
jmp
mov
and
aaa
cli
rcrb
pop
pop
jecxz
mov
inc
push
cmpsb
jl
cmp
mov
roll
cs
cli
mov
cmp
pop
negb
aaa
adc
ficomps
fsubrl
jl
lods
mov
aaa
out
iret
in
jl
pop
pop
mov
sbb
adc
fadds
call
ds
jne
decb
ret
loope
lods
pop
mov
insl
jl
clc
xchg
pop
aaa
mov
sub
loopne
mov
mov
outsb
pushf
daa
xor
jb
pop
pop
jae
loope
and
in
repnz
mov
dec
sub
sub
popl
mov
sbbb
cmp
testb
adc
outsb
sbb
mov
pop
arpl
fsubrl
jbe
dec
jl
mov
iret
cld
xor
scas
adc
and
pusha
pushf
sti
jg
test
push
dec
cs
xchg
int3
pushf
jnp
xchg
sbb
test
es
pushf
xor
dec
outsb
or
repnz
xchg
movsb
mov
lods
sbb
mov
fcomps
dec
mov
xchg
push
movsl
outsb
jb
std
out
mov
in
cmpsb
pushf
xchg
mov
cmc
loop
mov
xchg
pushf
sbb
sahf
adc
leave
lret
cwtl
ljmp
cmp
movsb
mov
out
xlat
mov
lods
pop
mov
adc
dec
cli
pop
ret
jmp
lea
repz
add
jnp
aas
out
add
inc
cmp
rcrb
int
insb
mov
cmp
dec
pushf
fidivs
sub
pushf
lea
mov
icebp
sbb
mov
jo
pushf
push
pop
inc
dec
cmp
popa
push
jbe
push
sbb
nop
cltd
test
lock
cmpsb
hlt
and
lods
push
lds
pop
cmp
mov
bound
mov
es
push
mov
and
in
cmp
mov
fimull
pop
aad
jmp
mov
stos
out
cmp
pop
pushf
aas
push
in
idiv
inc
xor
push
xchg
pop
pop
mov
cld
mov
add
pushf
xor
add
jle
inc
jae
push
jecxz
cmp
and
divb
test
pushf
xchg
xchg
jge
lock
in
hlt
dec
add
stc
jl
inc
push
xor
lret
sbbl
jg
lods
fisttps
dec
mov
pop
and
nop
mov
mov
test
or
mov
and
cld
and
scas
mov
test
jno
fldenv
sub
repnz
inc
xor
inc
lahf
notl
pop
jmp
pushf
cld
fsubrs
clc
dec
std
inc
jae
and
negl
xor
add
loopne
add
mov
movsl
mov
xor
jb
or
xchg
leave
repnz
jmp
mov
aad
dec
fcmovnbe
fnstenv
cmp
sub
pop
push
mov
and
loop
dec
or
sub
incl
xchg
adc
std
sbb
pushf
ret
dec
js
int3
pop
and
movsl
std
pushf
dec
les
jg
icebp
jp
test
sub
decl
xchg
add
pushf
lea
out
jbe
adc
jecxz
lcall
cld
mov
sbbb
cmp
pop
mov
fadd
lock
add
hlt
orl
scas
test
das
cmp
lret
addr16
loop
nop
mov
pop
mov
jp
inc
inc
jmp
js
lea
push
icebp
mov
push
stos
mov
cmp
mov
ret
lea
icebp
adc
loop
or
xchg
ss
mov
inc
inc
movsl
sub
cmp
pop
sbb
mov
cmpsl
mov
sbb
jecxz
mov
sbb
cmp
pop
and
std
cmp
int3
push
loopne
fbld
mov
fiaddl
mov
xrelease
mov
nop
mov
jnp
lock
adcl
xchg
mov
or
ret
cmp
sbb
mov
stos
std
test
sbb
sti
pop
and
sub
test
mov
jnp
push
or
jecxz
mov
xor
mov
jp
lods
cmp
or
dec
loopne
cmp
cld
dec
scas
cs
jl
pop
cmp
xchg
insl
mov
nop
mov
xor
pushf
mov
js
fnstsw
sbb
add
xchg
mov
rorb
xchg
sub
mov
stos
add
lea
pushf
clc
mov
dec
mov
xchg
insb
and
fdivrl
pop
stos
adc
mov
idivb
stos
xchg
mov
and
daa
sub
pushf
scas
jns
add
icebp
bound
sub
mov
and
arpl
int3
pushf
cltd
xchg
pop
sbb
push
pushf
mov
mov
jne
add
pop
push
sarl
add
cmp
pushf
lea
imul
rcr
sub
xchg
push
lods
int
mov
out
repnz
js
ss
mov
pop
push
mov
ja
xchg
mov
mov
push
insl
adc
mov
mov
fstl
pushf
inc
test
inc
in
cli
jg
data16
and
pushf
jns
add
dec
lock
xlat
movsb
cmp
sbb
shlb
enter
mov
int3
or
dec
andb
in
cmpsl
pushf
lret
pop
push
jae
pushf
inc
test
add
pushf
nop
xlat
dec
adc
xchg
jl
loop
clc
sti
movsb
adc
lret
and
lahf
psubsb
sub
lock
lea
adc
adc
fistl
xor
call
pop
cmp
adc
scas
icebp
xor
and
pop
test
fidivs
test
mov
cmpl
xchg
scas
sub
mov
xchg
ljmp
jmp
jnp
in
in
out
mov
pushf
push
std
pop
push
imul
data16
mov
xor
mov
xchg
fistps
cld
data16
mov
sbb
ret
xor
jb
xor
mov
lods
outsb
pusha
test
subb
ljmp
clc
cltd
dec
inc
mov
outsb
lods
imul
push
movsb
lods
testl
insb
lahf
cmp
mov
mov
xchg
jecxz
stc
xchg
icebp
movsl
sub
int3
sbb
sub
dec
push
add
mov
outsb
movups
push
mov
pushf
lods
xchg
into
jecxz
pushf
xor
and
pushf
mov
xor
push
jae
mov
repz
lock
je
jnp
hlt
jp
arpl
jge
jg
or
mov
or
testb
push
jl
outsl
pop
fidivl
pushf
sbb
inc
out
pushf
movsl
js
or
icebp
aad
mov
loope
add
test
push
jnp
push
dec
mov
lea
xor
or
or
push
cmp
movsb
mov
or
loop
out
xchg
sbb
sub
mov
bound
jmp
pusha
mov
stc
jbe
mov
roll
push
jns
aad
lcall
and
loope
xchg
mov
bound
stc
mov
ljmp
push
nop
jne
lret
jmp
pusha
cmc
shll
pushf
mov
xor
call
xchg
mov
ja
aas
ja
hlt
jg
xchg
adc
pushf
xor
jecxz
mov
lds
fiadds
inc
pushf
sub
das
mov
mov
test
cld
xchg
lea
pop
mov
pop
daa
mov
lock
repz
or
inc
pop
je
addr16
pushl
xor
pushf
jmp
arpl
pushf
pop
mov
sarb
rcrl
sbb
adc
cmpb
test
fcmovne
fucomp
cmpl
lock
pop
arpl
push
xlat
jg
mov
gs
jecxz
lds
cmc
or
les
cmp
mov
xrelease
sti
cmp
cmpl
cmp
push
mov
fistpl
xchg
and
shll
and
sahf
xchg
mov
jnp
pushf
pop
sbb
lea
cli
push
pushf
fstpl
pop
inc
push
dec
pop
jmp
lcall
enter
sahf
pop
es
popf
cmp
pushf
dec
sub
out
test
jg
sub
dec
lods
mov
ljmp
xor
cmp
arpl
mov
roll
xor
idiv
cmp
push
mov
jb
fsubl
inc
lods
xor
push
jmp
js
sbb
adc
lods
add
mulb
push
fcompl
sbb
ss
jp
das
xchg
xor
cwtl
popf
popf
mov
lods
xchg
mov
fiaddl
mov
dec
adc
mov
jnp
es
addl
sub
stos
cmc
lods
icebp
sbbb
pushf
xchg
adc
sub
xchg
xor
pop
adc
or
push
lret
add
pop
sbb
imul
xorl
sub
and
test
or
mov
ja
xchg
adc
push
inc
aas
in
sbb
mov
call
pushf
gs
pop
into
sbb
pushf
bswap
popa
pop
das
push
popf
movsb
pushf
jno
jecxz
in
cmp
in
mov
mov
pushf
jl
xor
dec
mov
pushf
insl
xchg
subl
push
fbstp
jle
mov
inc
adc
pushf
subb
mov
dec
shlb
mov
add
pushf
je
and
loop
and
inc
xor
fsubr
mov
pop
inc
mov
pop
fcoms
int
pushf
mov
jp
mov
dec
dec
push
sub
pushf
data16
cli
lret
test
pushf
cmp
bound
mov
inc
popa
and
pop
sahf
stos
or
hlt
pushf
sti
loop
dec
nop
leave
mov
mov
jmp
mov
rolb
push
add
and
pushf
sub
stos
and
sar
cltd
push
sti
jns
mov
or
pushf
cmp
dec
push
clts
ss
rcrl
add
cmp
ds
mov
fisubl
pop
repz
fcmovnbe
xor
jge
cmpl
fs
jl
fisubl
xchg
dec
mov
mov
leave
arpl
das
inc
dec
faddl
int
ret
fidivrs
enter
cmc
arpl
xchg
mov
pushf
cmp
inc
sub
out
es
std
adc
lds
insb
negb
sbb
mov
pushf
into
divl
mov
mov
lret
fimull
xchg
cmp
mov
mov
inc
pop
icebp
cmp
mov
lret
push
mov
sub
popf
cwtl
xchg
sbb
sub
cmp
pushf
fiaddl
xchg
push
inc
std
inc
or
mov
jns
pushf
mov
xchg
loopne
jecxz
cli
decl
or
pushf
insl
leave
mov
pop
fbstp
scas
pushf
or
jno
ret
sub
jl
aam
mov
scas
dec
cmp
js
out
std
jnp
test
sub
mov
or
fnstenv
aas
hlt
jmp
outsl
std
iret
dec
adc
mov
stos
or
or
xchg
insb
js
es
pushf
ja
pusha
sub
jb
lds
xchg
pop
xchg
add
mov
sbb
ret
xchg
pushf
sbb
pop
add
lods
pop
mov
cwtl
jg
push
mov
pop
vpminsw
inc
add
or
std
cmp
push
mov
pop
adc
movsb
sbb
xchg
fcoml
insl
dec
add
cld
cld
test
stos
clc
in
mov
pop
cltd
pushf
imul
dec
push
xchg
mov
xchg
pushf
add
ss
loope
cmpsl
sub
and
std
dec
pushf
arpl
adc
pop
pusha
leave
andb
add
adc
mov
jecxz
enter
outsb
sbb
shrl
cmp
mov
xchg
inc
fninit
mov
lea
cld
cld
add
imul
push
dec
pop
pushf
push
push
inc
out
cli
cmpsl
dec
popa
sub
jecxz
mov
or
imul
cmc
xor
stos
lods
andl
jno
push
popf
scas
push
and
fsubr
pop
push
jle
fidivl
adcl
push
xor
hlt
add
inc
daa
pop
or
int
push
jge
push
pushf
outsl
mov
jae
pushf
dec
and
dec
cmp
mov
pop
add
jb,pt
pop
ret
pushf
pusha
sub
mov
mov
or
inc
mov
xchg
cmp
repz
inc
stos
mov
fistps
shlb
pushf
mov
fstpt
and
push
mov
dec
xor
js
mov
int3
mov
pushf
jnp
xchg
push
and
fiaddl
out
aad
add
push
je
xchg
incl
clc
pushf
fcmovne
loopne
mov
mov
mov
fisttps
jl
and
scas
sbb
push
and
dec
shlb
insl
aas
xor
and
add
pushf
pop
movsb
adc
orb
inc
jo
dec
pop
dec
and
in
and
add
jl
lea
in
lret
dec
push
cmp
and
sub
adc
inc
cmp
mov
jge
imul
jno
fs
add
pop
cmpsb
push
adc
push
pushf
dec
jle
or
pop
andb
sub
cmp
jge
nop
push
ja
inc
and
les
mov
inc
xlat
stc
mov
pop
pop
pushf
xor
pop
mov
popa
mov
sbb
fdivl
xor
lahf
inc
adcl
pushf
jmp
cmovnp
icebp
addr16
lock
mov
js
fidivrl
mov
dec
scas
shll
xor
dec
jg
movsb
push
sub
fs
scas
jg
xchg
xor
notl
sbb
dec
or
or
cmp
mov
pop
xor
stc
cmpsl
pop
mov
mov
in
fiaddl
xchg
sub
std
mov
add
mov
xor
or
xchg
insl
dec
lods
mov
inc
pushf
sub
das
pop
mov
lret
and
pop
pushf
js
mov
cli
mov
std
xchg
push
mov
iret
jg
mov
cld
dec
aaa
sti
cs
mov
pushf
push
dec
dec
stos
xchg
lds
inc
pushf
mov
add
mov
out
and
xchg
test
push
cmp
cld
imul
sbb
mov
dec
aas
lock
xchg
pushf
into
addr16
in
mov
add
aam
insl
clc
jae
sub
jns
push
adc
or
cmpsl
fiaddl
pushf
cmp
cltd
jp
xor
jmp
fcoml
movl
xor
pushf
stos
add
lret
pushf
or
ror
and
fnstcw
push
mov
imull
pop
call
insl
inc
fistps
cmpsl
rol
sub
xor
xchg
mov
mov
mov
xor
mov
test
pushf
pop
dec
jge
inc
push
xchg
lods
xchg
cmpsl
jae
xchg
jl
test
leave
mov
pop
in
jge
mov
or
cmpsb
mov
xor
jg
mov
sbb
faddp
repz
subb
sub
jmp
sbb
jg
pushf
pop
inc
mov
outsb
xchg
in
jge
mov
test
aad
lds
mov
sbb
cwtl
aas
and
push
dec
int3
xlat
push
movsb
xchg
ret
ja
int3
imul
xor
mov
add
dec
xchg
fucomp
mov
bound
pop
imull
mov
arpl
push
jnp
cli
jnp
xchg
mov
in
sbb
cld
inc
push
mov
or
pop
jg
mov
xchg
sbb
push
adc
popf
pushf
and
xchg
mov
out
mov
xor
jmp
pop
mov
dec
xchg
lods
pushf
pop
sbbl
data16
dec
in
mov
aad
vcmppd
mov
pop
ljmp
sub
xlat
fld
rolb
out
repnz
stc
jo
add
inc
lods
sbb
popf
test
mov
sbb
fimull
int3
mov
inc
test
cmp
mov
add
stc
cld
je
mov
pop
outsb
sub
fnsave
cmc
jae
jp
ss
dec
negl
xor
add
shlb
xor
pop
fisubrl
dec
push
arpl
lds
adc
add
cmp
sub
aad
mov
mov
dec
lahf
pop
cmp
or
pushf
popa
enter
mov
mov
movb
adc
pushf
jg
lods
aam
xchg
sub
fwait
aad
mov
pop
pushf
js
push
adc
cwtl
adc
xchg
mov
mov
arpl
push
ja
mov
pushf
pusha
js
mov
cld
pop
cwtl
pop
pushl
fnstsw
xor
into
jle
pushf
repz
push
and
jmp
or
xchg
adc
dec
lods
cld
daa
out
jp
clc
fwait
scas
jb
fsubs
cmc
les
add
in
idivb
add
xor
pushf
es
and
dec
ret
cmp
dec
shlb
xlat
push
mov
mov
pushf
fisubs
xor
pushf
sahf
xor
aam
jne
mov
in
bound
mov
addr16
insb
xchg
inc
pop
mov
insl
movsb
cmpsl
jmp
pushf
and
add
lea
femms
pushf
pop
mov
pushf
mov
movsl
xor
inc
xchg
fcmovb
aaa
sbb
ret
sahf
mov
xchg
dec
test
out
add
sbb
pushf
sbb
js
add
pop
dec
sbb
inc
repnz
add
ficompl
xchg
jmp
or
mov
pushf
mov
sub
jl
push
pop
push
inc
movsb
xor
test
cmp
jns
rclb
cmpsl
iret
adc
pushf
and
outsl
mov
jl
shlb
cltd
push
mov
or
mov
mov
or
std
jg
jp
aaa
push
sbb
inc
jno
pushf
or
mov
pop
xchg
inc
pushf
inc
aaa
inc
cli
and
sahf
pushf
stc
add
jbe
jge
pop
and
inc
je
pushf
jb
imul
add
ja
sbb
adc
hlt
ret
push
cmp
fistpl
stc
jnp
cs
fldl
std
ja
loop
in
sub
jbe
jo
shlb
xchg
pusha
add
push
mov
inc
push
movsl
xchg
enter
int
pusha
add
push
cld
add
pop
xor
dec
pop
inc
pushf
inc
mov
jbe
pop
xchg
lods
arpl
inc
pop
dec
xor
lds
pushf
and
dec
lods
loope
stc
aam
pop
jae
or
xor
gs
jnp
add
adc
jl
mov
xlat
test
movsl
mov
xor
roll
sub
out
test
lods
adc
shll
jns
fstl
mov
icebp
cmp
adc
adc
bound
adc
pop
test
pushf
lds
scas
pop
test
div
mov
pop
mov
or
fadds
or
lods
cmp
repz
pushf
jbe
inc
mov
pop
lds
int
lods
cli
adc
stos
and
mov
mov
dec
in
mov
and
adc
jb
lods
ret
ljmp
cmp
aad
mov
pop
jmp
cs
dec
fnstenv
xchg
hlt
cld
pop
stos
ds
lahf
cmp
xor
jp
pushf
pop
dec
adcl
fnstenv
sti
in
pushf
mov
push
pushf
mov
and
pushf
rcll
out
fstpt
insb
test
xchg
cmp
inc
pushf
addr16
pop
xchg
cmp
sub
cmp
fdiv
xor
lea
movsb
jbe
add
out
stos
xchg
jnp
adc
pop
lcall
xchg
push
push
mov
xchg
lods
or
cltd
sbbl
or
arpl
pop
sbb
repnz
mov
pop
and
jp
pushf
fs
pusha
addr16
mov
xor
add
inc
dec
pushf
scas
cmp
xlat
and
sbb
push
ret
and
jecxz
cwtl
pop
xchg
jns
jl
add
test
jmp
xchg
jae
jb
cmp
aas
fs
aad
daa
add
mov
movb
dec
fiaddl
mov
fldpi
out
jne
inc
xchg
jecxz
pushf
cs
je
pop
dec
inc
push
stc
bound
repnz
push
outsl
dec
shrb
add
and
sbb
faddl
mov
adc
mov
addr16
push
ret
inc
adcl
mov
pusha
sub
pop
xor
scas
test
mov
test
ret
and
mov
ja
mov
pushf
inc
rolb
mov
hlt
jg
and
and
push
rol
imul
adc
mov
ret
inc
pop
inc
sub
sbb
sarb
sbb
call
sahf
clc
mov
xlat
jecxz
adc
xor
cmp
mov
push
daa
mov
sti
insb
cld
notl
push
push
daa
lds
ret
xchg
xor
cmp
jl
jae
out
test
push
cmp
fdivr
inc
add
add
xchg
push
sub
lods
adc
repnz
pop
mov
push
loopne
pushf
sbb
adc
pushf
and
outsl
lcall
into
pusha
insl
cltd
jo
mov
push
pushf
inc
rcll
xlat
xor
xor
dec
adc
mov
push
in
lock
cli
pushf
lea
xchg
arpl
sub
and
dec
xchg
pushf
imul
cmp
lods
repz
sub
shlb
pushf
mov
in
clc
inc
inc
xor
pushf
mov
lret
movsl
sahf
xchg
pushf
repz
pop
out
jg
and
lret
negb
mov
mov
mov
mov
add
sbbl
ds
pushf
add
ss
dec
pop
cld
pusha
ja
pop
xchg
mov
mov
dec
pushf
repz
ret
nop
test
xor
pushf
repnz
cmpsb
pop
push
inc
xlat
sub
mov
jae
shlb
inc
or
pushf
test
mov
pop
pushf
shlb
fsubrs
daa
in
jg
pushf
cmp
arpl
pushf
sub
jbe
imul
int
inc
fmul
inc
cmp
cld
iret
dec
out
or
adc
mov
lds
lret
addr16
mov
sub
cmp
andl
sub
rorl
jge
das
imul
push
cld
and
ljmp
add
sub
mov
sbb
jae
dec
push
mov
lret
dec
mov
and
pop
loope
and
pushf
popf
cmp
cmp
pushf
add
lcall
cmp
nop
cmpsl
sbb
pushf
daa
cmp
sbb
mov
mov
jmp
dec
pushf
enter
stos
jns
mov
popa
pop
or
rol
cltd
fcomps
or
xorl
lea
out
sahf
lods
jae
mov
adc
mov
fnstsw
stc
mov
add
cmp
mov
inc
xchg
mov
pushf
inc
add
out
negb
ja
pushf
push
lock
sub
lret
pushf
xchg
adc
shlb
pop
mov
jl
cmc
jbe
inc
sub
pop
sbb
mov
xchg
sbb
mov
test
xchg
mov
leave
jp
mov
popf
sbb
pop
add
out
pop
lahf
in
mov
sbb
mov
xchg
mov
push
mov
push
push
mov
cld
or
jbe
add
xor
and
jne
cmpsl
fsubr
out
pop
clc
push
aam
jle
popa
sahf
iret
jo
xchg
adc
xchg
cmp
xchg
aam
popf
and
sbb
push
call
andl
sub
cmp
push
mov
jb
cld
int
xor
pop
mov
mov
mov
rolb
inc
fldl
mov
test
push
insb
sbb
inc
imul
jb
sbb
mov
cld
hlt
inc
repnz
jl
sbbb
int
pop
cmpsl
adc
lahf
xchg
mov
and
xlat
fistps
mov
mov
cmp
sbb
xchg
hlt
lea
mov
dec
call
push
xlat
xchg
mov
dec
jb,pn
ret
arpl
add
xchg
fprem
in
xchg
sub
loopne
enter
xchg
cmpsl
cmp
in
arpl
sbb
aas
sub
sbbb
fidivrl
arpl
mov
mov
xchg
aad
jae
cmp
adc
pop
mov
mov
jbe
fstpt
jl
pushf
mov
pop
jae
pop
leave
fcoms
lods
xor
shr
stc
jne
in
adc
mov
imul
mov
mov
and
jle
mov
pop
mov
mov
test
xchg
aam
push
push
test
lock
cs
sarb
xor
in
cwtl
int
add
xor
pop
pop
adc
cld
sbb
repnz
mov
or
ss
or
lods
push
xlat
les
daa
xchg
push
pushf
gs
loop
cltd
xor
insl
cmp
mov
jg
push
mov
xor
pop
push
adc
pop
pushf
mov
pusha
rorl
mov
out
jl
xchg
mov
push
push
scas
adc
clc
lea
into
loopne
fisubs
movsb
pop
lret
pop
pop
test
fidivs
adc
jnp
js
jp
add
pushf
xor
lea
ss
add
imul
cltd
loope
jg
movsl
mov
sbb
iret
mov
hlt
fstpl
or
sbb
stos
fwait
mov
test
jg
xchg
inc
cli
mov
lcall
mov
ret
test
add
and
cltd
arpl
jg
inc
adc
or
testl
add
push
lods
push
mov
mov
movsl
repnz
stos
fiaddl
xchg
int3
ret
mov
repz
lods
mov
sub
mov
xchg
and
add
mov
cld
push
or
icebp
inc
dec
pushf
jp
mov
push
sub
pop
cmc
or
pushf
loope
movsl
sbbb
mov
inc
lret
xchg
pushf
pop
cli
cmc
loop
insb
sub
int3
mov
sti
cmp
xor
outsb
xor
add
mov
mov
pushf
sbb
fcoms
stos
outsl
pushf
mov
or
push
pushf
dec
add
idivl
sbb
insl
js
mov
or
pop
add
xchg
inc
mov
xchg
test
fnstsw
inc
stos
or
pop
popf
pop
cmp
and
xchg
mov
cmp
ficoms
mov
push
xor
mov
mov
adc
or
inc
ljmp
fbstp
es
leave
dec
sbb
mov
loop
xchg
fidivs
cmpsl
mov
pop
adc
pushf
cltd
jnp
jg
xchg
cmp
and
cmp
xchg
ja
jb
shrl
mov
cmp
lods
outsl
stos
or
inc
push
mov
test
jg
pop
frstor
and
pop
push
pop
pop
jne
xor
je
nop
insb
cmp
push
add
pushf
push
xor
or
xor
inc
nop
outsb
sub
hlt
jns
and
add
pushf
adc
jp
lods
jae
dec
pushf
adc
push
jmp
pushf
jb
inc
lret
scas
xor
mov
enter
sub
xchg
test
mov
mov
ds
outsl
and
push
jae
pushf
jns
fs
fsub
fnstenv
mull
mov
push
jl
push
cli
xor
mov
jl
mov
push
add
jnp
test
scas
jge
xchg
mov
js
xchg
mov
cltd
or
sahf
hlt
jb
jle
xchg
roll
sub
mov
out
mov
xlat
dec
andl
mov
xchg
jg
andl
fcoml
cmpl
xor
inc
cmpsl
add
pushf
mov
adcb
pop
push
jl
inc
xor
push
mov
mov
dec
pushf
out
xchg
jecxz
dec
lods
and
movsl
loopne
sbb
lret
sub
out
mov
jne
decb
pop
push
mov
pushf
adc
mov
xor
in
stos
mov
dec
jnp
cmp
xchg
std
mov
xchg
xor
pushf
jecxz
mov
mov
cmp
xor
mov
add
ja
fbstp
xor
dec
fadds
jb
lret
stos
stos
pushf
jbe
lcall
sbb
stos
xor
mov
lds
cmp
cld
pop
loop
pop
pop
jb
dec
in
cld
adc
mov
notl
or
jge
mov
mov
mov
sbb
or
sub
adc
xchg
cs
dec
ljmp
dec
lcall
mov
sub
pop
mov
les
push
mov
xlat
dec
adc
iret
add
cmp
sahf
mov
xchg
pop
adcl
sti
xor
and
cmp
adc
sbb
pop
in
loop
cld
xchg
xchg
sti
mov
inc
or
xchg
lret
jp
adc
mov
cwtl
xor
jge
inc
test
jo
xchg
lds
pop
aaa
xchg
pop
mov
push
scas
adc
fcmovnu
jge
cmp
into
push
adc
int
test
sub
popa
out
and
mov
arpl
pushf
dec
jle
sub
leave
sub
pop
xchg
out
xlat
lods
add
cmpsl
pop
ret
pop
aaa
sbb
jb
cmp
adc
into
xchg
subl
ret
shll
outsb
push
push
cld
xchg
add
repnz
push
out
add
dec
mov
cmp
mov
xchg
mov
jmp
mov
cs
fnstcw
xchg
cmp
xchg
mov
jge
pop
mov
int3
cmp
push
cmpb
and
ret
jb
mov
mov
add
mov
js
pop
cld
jae
xchg
jge
mov
add
sub
add
ficoms
int
fnsave
mov
ret
jmp
push
cli
xchg
push
jg
cmp
push
add
xchg
jnp
inc
movsb
pop
xorl
cltd
xor
xchg
cmp
xchg
add
lea
jg
inc
sbb
les
in
test
loopne
aad
sub
jle
pop
cmp
and
call
cld
pop
jge
rcrb
pop
sbb
mov
pop
mov
out
sbb
mov
inc
es
repz
xchg
sbb
cs
xchg
nop
sbb
and
scas
and
pop
inc
push
dec
loop
mov
and
dec
fidivs
sti
mov
mov
insb
pushf
inc
sbb
movsb
dec
and
outsl
adc
mov
mov
dec
std
dec
pushf
in
push
add
mov
rol
or
lods
scas
mov
outsl
mov
repz
pushf
ret
xorl
out
outsl
fsubr
jns
cmp
mov
loope
cld
cmp
lret
hlt
aad
push
popf
cld
sbb
in
xor
xorb
aaa
cmp
jge
pushf
pop
adc
add
gs
cmc
outsl
mov
mov
pushf
aad
xchg
loopne
js
adc
xor
cmp
arpl
test
inc
addr16
test
les
inc
fs
cmp
inc
jl
jae
test
dec
mov
xchg
lods
xchg
ret
lahf
and
xor
pushf
push
mov
inc
adc
dec
inc
pushf
popf
adc
stos
or
push
mov
pushf
in
mov
cld
jb
mov
das
dec
mov
mov
pushf
adc
cli
jne
push
scas
movsl
sarb
repz
mov
or
cmp
aad
xor
dec
jecxz
adc
fildll
pushf
sbb
movsbl
mov
adc
pop
lea
mov
daa
fisubrs
test
call
push
out
pushf
incl
cmp
pushf
sarb
jge
aaa
leave
pushf
adc
sbb
mov
lret
aad
xor
push
cmp
pushf
mov
and
jl
mov
pop
inc
movsb
jo
fs
inc
pushf
or
mov
iret
cmc
pushf
mov
shr
pushf
dec
sub
cld
pushf
in
mov
ja
jge
cmp
movsb
xor
fimuls
mov
mov
inc
aaa
jae
dec
cmpl
mov
mov
rcr
pushl
jp
mov
gs
fsubrp
pushf
fpatan
pop
adc
xor
jg
jne
cld
cltd
incl
and
mov
cmp
shrl
or
cmp
leave
mov
loope
pushf
in
mov
dec
stc
or
mov
pushf
out
stc
clc
pop
mov
inc
or
or
xchg
mov
dec
xchg
pushf
inc
xchg
cltd
loopne
in
cld
pop
inc
pop
or
scas
sbb
je
jl
popa
cmp
xchg
push
negb
insl
shrl
xlat
adc
push
jmp
jb
jmp
pushf
pop
adc
mov
insl
push
push
mov
push
enter
mov
jno
aaa
pushf
ja
add
int
fcomps
xorb
xchg
pusha
jae
push
pushf
or
mov
and
int3
add
or
testb
sub
or
mov
iret
and
mov
jno
pusha
dec
and
mov
or
pushl
dec
enter
xor
cli
dec
out
mov
outsl
or
data16
sbb
mov
jp
mov
mov
xchg
orl
jge
stos
scas
test
sub
mov
movl
jl
fdivl
loopne
xor
xchg
cmc
sub
repz
int3
lods
pushf
ljmp
arpl
push
jbe
nop
stos
xchg
clc
imul
push
test
jbe
cmpsl
cmp
pop
pop
cltd
xchg
scas
pop
xchg
sub
std
fmuls
cmp
in
arpl
add
stc
pop
or
testb
jge
insl
adc
xchg
mov
shl
cld
dec
pop
pop
cltd
push
stc
mov
xchg
jmp
dec
mov
cmp
pushf
xlat
loopne
rclb
in
aas
ja
stos
lods
pop
cli
test
mov
jns
push
and
mov
and
mov
lcall
dec
mov
xchg
clc
inc
mov
ja,pt
dec
stos
test
jns
pop
dec
leave
jno
xor
xlat
pushf
push
inc
adc
mov
pushf
and
sub
ficoms
imul
sbb
add
ret
xor
mov
inc
repnz
xor
or
xor
mov
sub
jge
in
out
inc
xchg
int
mov
pushf
test
push
scas
mov
lods
leave
pushf
repnz
test
inc
jns
pushf
or
xor
std
dec
lods
sbb
lods
inc
xchg
sub
mov
inc
dec
andl
out
mov
jo
cmpsb
adc
mov
mov
xchg
adc
and
push
dec
sarl
mov
pushf
inc
adc
inc
bound
dec
xlat
icebp
push
pushf
dec
jae
push
xor
mov
jle
lods
sahf
aad
iret
ret
pushf
and
data16
cmp
fs
orl
and
ss
in
out
inc
xor
xchg
sbb
aaa
adc
in
and
scas
pushf
pop
or
pop
popf
pop
inc
mov
out
pop
clc
orl
adc
dec
scas
cltd
pushf
bound
mov
rcl
pop
pop
add
lock
mov
mov
dec
int
cmpsb
stc
jne
pop
aad
test
decb
out
cli
mov
dec
and
pushf
pop
jl
icebp
adc
sbb
pop
dec
wbinvd
add
pushf
out
idivl
je
fcomps
and
dec
fdivrl
je
cmpb
inc
rclb
pushf
aas
call
or
and
test
jns
popa
mov
stos
out
pushf
in
xchg
int
push
popl
pop
inc
and
mov
clc
nop
rcr
mov
sbb
pushf
adc
sub
pushf
jb
aas
add
jo
hlt
sub
pushf
sub
jl
dec
imul
rcl
in
shll
pop
dec
sub
pop
cmp
loop
adc
lret
movsl
hlt
scas
mov
adc
cld
push
jnp
dec
add
sbb
inc
incl
jbe
jle
arpl
cmp
mov
insb
or
xor
jecxz
fsubl
add
inc
pop
xchg
xchg
imul
mov
dec
lret
mov
jg
lods
bound
add
mov
dec
add
jp
ss
push
or
jae
pop
inc
sti
inc
movsb
pop
out
leave
fs
out
pusha
xchg
lahf
fsubl
aad
ja
mov
and
popf
pop
lret
inc
movsb
inc
loope
pop
aas
pushf
mov
daa
test
lods
add
hlt
sahf
mov
int3
and
nop
lahf
mov
xchg
adc
pushf
cmp
das
sub
xchg
testb
ss
push
roll
or
ret
aaa
push
pushf
stos
or
jb
fcom
dec
push
push
adc
movsl
aad
inc
inc
mov
pushf
mov
cmp
imul
xor
mov
pushf
int
or
pushf
out
xchg
test
dec
add
imulb
insb
clc
mov
and
xchg
mov
dec
pushf
lds
and
sti
pushf
jecxz
nop
sbb
pushf
push
jmp
cmc
mov
fadd
inc
rorl
pushf
push
adc
out
pushf
dec
push
jb
sub
cmp
xor
inc
pop
pop
outsb
push
pop
push
pushf
loopne
adc
lret
push
dec
movsl
pushf
mov
je
mov
loop
add
cmp
xor
pushf
out
adc
jmp
pushf
aad
enter
and
mov
in
dec
mov
dec
sbb
ret
pushf
cmc
out
movsl
cmp
inc
fcoms
leave
jae
stos
call
push
cmp
mov
and
xor
jmp
lea
sub
pop
cmp
gs
subl
addr16
xor
add
cmp
out
jae
mov
test
cmc
push
pushf
or
outsb
jbe
sbb
pop
mov
push
lods
jb
cmp
gs
jle
aas
std
xchg
xlat
mov
stos
rolb
lods
dec
xchg
or
js
jge
imul
mov
bound
inc
xor
popa
xor
pushf
adc
push
push
inc
mov
testb
lods
add
xor
mov
push
mov
sub
mov
clc
pop
mov
inc
inc
cltd
cmp
loopne
jbe
adc
jl
dec
push
sub
cmc
mov
sub
hlt
loop
insl
cltd
std
xchg
jge
mov
ret
xchg
and
addb
test
sbb
gs
xchg
ret
in
and
pushf
leave
sub
mov
clc
mov
dec
jg
pop
mov
adc
mov
loopne
jmp
adc
pushf
clc
inc
movsl
pop
addr16
jo
xor
jle
dec
mov
dec
push
inc
pushf
lret
and
and
and
insl
fsubl
push
pop
call
pop
cmp
std
pop
dec
insb
cmp
iret
nop
clc
cmpl
xchg
out
pop
adc
jge
jae
jne
adc
ja
push
pushf
stos
lods
push
jmp
mov
lcall
cltd
in
sub
and
xchg
adc
addr16
mov
jo
imul
repz
test
das
push
pop
fcompl
mov
or
and
pushf
daa
and
mov
mov
mov
mov
add
and
xor
mov
mov
jno
fidivrs
jno
xchg
xor
push
mov
outsl
or
mov
xor
and
push
push
pushf
mov
mov
jmp
mov
jl
addr16
cmp
xor
mov
adc
es
popf
int
ret
pushf
outsl
loopne
jbe
in
jge
clc
adcb
jne
sbb
daa
jbe
xor
cmp
es
lods
mov
nop
repnz
cli
rorb
aaa
push
insb
xlat
jecxz
cmpsl
neg
mov
jp
pushf
sub
adc
out
rcl
xlat
pushf
leave
lcall
fsubrp
dec
fs
movsb
ret
ljmp
lods
mov
notl
fstpt
jge
movsb
imul
je
inc
sub
sbb
pop
insb
out
outsb
adc
jae
cld
mov
aad
aam
dec
jg
leave
data16
lea
popf
add
sbb
cmpsb
xor
rcrb
cwtl
or
jae
ss
out
pushf
sub
jns
lahf
mov
aam
iret
push
dec
out
or
cli
test
mov
call
lods
jbe
sub
pushf
pop
rol
xchg
clc
or
jle
push
dec
mov
dec
push
cwtl
iret
mov
jg
test
lods
mov
fisubrl
sub
out
jmp
cmp
std
adc
pop
push
lods
shll
jno
outsb
xchg
sub
jle
test
mov
jb
js
or
mov
fcomps
aas
mov
dec
test
popf
dec
sahf
cmp
cmp
loopne
inc
das
mov
insl
cmp
push
ja
and
test
rcrb
fmuls
sar
pop
das
xchg
xlat
jl
pusha
push
movsb
adc
pushf
sbb
mov
mov
jbe
and
mov
push
sub
xor
jl,pt
dec
pop
xchg
xor
lahf
mov
push
xchg
pushf
adc
ds
idiv
adc
lret
pushf
sub
sub
mov
pushf
dec
jne
sub
stos
dec
pushf
push
pop
sub
cltd
xor
mov
fists
jg
scas
push
inc
lods
js
sbb
and
adc
leave
cmp
jg
sbb
test
pop
sub
je
cltd
pop
popf
stos
clc
lcall
cld
leave
out
jb
push
pop
stos
dec
pushf
inc
lret
push
cmp
and
rcrb
sub
pushf
xor
into
push
xchg
pushf
add
pop
int
sbb
pushf
and
lock
add
lahf
lods
stc
xor
loop
outsb
sbb
inc
cltd
dec
pop
fsubrl
fiaddl
daa
xchg
jmp
jle
mov
push
and
ja
cld
pop
xchg
adc
add
jmp
dec
mov
pushf
push
inc
jmp
stc
out
pushf
sub
and
in
aaa
jle
mov
cld
and
push
mov
andl
inc
mov
notb
sub
pushf
add
das
xchg
sub
pushf
dec
pop
xchg
gs
jmp
pushf
mov
or
stos
jno
lea
mov
and
sbbl
adc
lods
imul
push
mov
gs
xor
ficompl
mov
cmpl
jnp
mov
jp
pushl
xchg
mov
movsl
push
fstpt
in
jns
sti
pop
mov
push
mov
cmc
adc
jecxz
sbb
jge
cld
stc
cmpsl
imul
fneni(8087
dec
cmpb
jo
sbb
inc
or
jge
fsubs
mov
push
jae
repz
shrb
aas
pop
ret
out
sbb
sbb
sub
xor
pushf
inc
lds
divps
xchg
mov
in
pop
insl
push
or
xchg
jl
stos
nop
mov
stos
leave
mov
lds
loope
xor
cld
push
fs
jecxz
lret
popf
fwait
arpl
mov
xor
popf
fisubrs
jbe
scas
jae
lret
jl
cmp
das
fdivrl
push
cmp
mov
aas
filds
jg
popf
pop
lods
mov
lahf
loopne
add
mov
mov
cmpb
add
push
bnd
push
imul
loop
pop
pop
testb
movsb
pop
dec
loop
pushf
add
idivb
or
pushf
xorb
mov
adc
pushf
pop
jp
push
clc
add
or
test
shrl
pushf
push
xor
ficomps
add
dec
js
sub
cmpsb
jmp
push
lods
lock
xchg
pushf
dec
imull
jae
inc
jle
inc
cmp
cmp
pushf
xchg
push
dec
or
dec
adc
mov
mov
loope
push
mov
ljmp
pushf
out
or
cwtl
xchg
mov
lods
adc
stos
aam
and
pushf
mov
cmpb
xchg
mul
adc
pushf
jecxz
pop
gs
cmp
mov
mov
bound
pushf
das
insb
rcr
adc
xor
mov
jbe
ds
push
xlat
mov
data16
ja
and
mov
mov
pushf
push
cmp
xor
jge
and
in
xor
pushf
dec
data16
adcb
insl
sbb
jle
inc
push
test
dec
mov
pushf
shl
sub
pushf
in
loop
jg
incl
shlb
addr16
stos
pop
pushf
mov
rcll
inc
lock
pop
fs
pushf
mov
ja
pushf
outsb
shl
pop
rorb
jge
nop
test
mov
stos
dec
xor
adc
lods
cmpl
les
in
ret
orb
ret
adc
mov
test
xor
sahf
add
pushf
xchg
mov
fsubs
movsb
mov
xchg
jge
jb
xchg
popa
jno
and
pusha
xlat
pushf
add
or
mov
add
ja
andl
out
dec
mov
xor
jno
cmp
mov
jae
out
loopne
pop
push
aas
pop
testb
adc
inc
in
xchg
and
pushf
inc
and
and
filds
outsb
ljmp
dec
add
stos
ret
loopne
add
movsb
insb
popa
fistpll
pop
push
mov
push
mov
xor
adc
or
lock
adc
or
pushf
mov
cmp
movsl
pushf
pop
out
aaa
xor
pushf
iret
idivl
rorl
mov
mov
aas
mov
adc
adc
or
and
rcrb
mov
pushf
adc
les
pushf
jge
iret
cmc
mov
xor
pushf
and
push
clc
pop
pushf
lock
ss
insl
mov
test
pushf
test
lods
aad
pop
in
test
xsha256
cmpsb
push
rcrb
decl
repz
mov
ficomps
or
cld
jo
cld
dec
aaa
jecxz
push
lds
push
dec
jbe
jg
sbbb
fsubrl
or
imul
movsb
pushf
sbb
loope
sub
ss
xor
inc
cmc
xchg
inc
sub
pushf
testl
je
pop
jns
adc
jmp
pop
cmp
pushf
rclb
jns
imulb
subl
xor
loopne
push
out
pop
jge
inc
iret
clc
adc
fnstcw
fdivs
outsl
cli
lret
mov
stc
in
mulb
fs
and
jmp
dec
testl
arpl
pushf
into
jge
mov
and
mov
jmp
mov
aam
cld
pop
mov
setl
lea
stc
sti
jecxz
cmpsb
out
dec
pushf
sub
scas
aad
ljmp
pushf
popa
loop
ja
pop
lret
pop
fsub
jp
outsb
jecxz
inc
sub
mov
cld
faddl
dec
lret
pop
lods
or
cmp
sahf
add
sbb
xor
test
outsb
mov
sub
mov
xchg
jns
int3
scas
jecxz
fstpt
or
xchg
xchg
fistl
sub
mov
sbb
mov
mov
outsb
or
jp
push
add
insb
js
or
aam
popf
enter
xchg
cmpsb
pushf
in
aas
lods
mov
mov
ss
jl
pop
mov
call
fsubs
pop
lock
into
fcomi
xor
inc
mov
aas
rcll
xor
pop
out
mov
push
sbbb
dec
xor
mov
test
sbb
fnstsw
jmp
mov
fistpll
jg
push
sbb
jnp
sbb
pop
sub
mov
pop
or
in
subl
mov
mov
push
lea
xchg
popa
xor
fcmovnu
mov
jg
int3
es
xor
and
or
add
enter
loope
add
adc
mov
cmpl
and
les
xchg
jne
push
in
mov
cwtl
cmpsb
xchg
or
xor
jb
inc
push
jnp
adc
xor
loop
mov
data16
pushf
add
and
fbld
stos
arpl
out
mov
mov
mov
cwtl
sbb
decb
out
cmp
cld
js
inc
roll
mov
lods
mov
pushf
cmp
shll
push
or
push
leave
or
mov
fisubs
jmp
fsubl
lods
cmp
xor
lret
mov
jmp
sahf
inc
mov
lret
out
pushf
cli
inc
stos
outsl
sar
mov
xor
stc
jp
jle
aas
adc
pop
xorb
data16
stos
adc
insb
add
cmp
popf
mov
pushf
int3
pop
xchg
sbb
imul
outsb
ret
sbb
inc
pushf
icebp
repz
stos
fidivl
add
mov
les
clc
jle
push
push
mov
outsb
cmp
cmp
push
sbb
or
dec
mov
push
sarl
movsl
sbb
and
or
in
pushf
cmp
popa
cwtl
lock
lods
sub
mov
ficoml
in
rclb
pop
mov
mov
jmp
inc
testl
adc
lret
cli
icebp
pushf
cmp
aaa
jecxz
shl
pushf
mov
or
pushf
xor
ja
addr16
mov
xor
xor
pushf
data16
outsb
inc
das
int
pushf
sub
add
adc
pushf
lret
mov
pop
call
mov
inc
pop
jns
dec
fbstp
enter
push
pushf
xchg
outsl
mov
incb
sahf
mov
pushf
and
dec
fs
daa
jae
mov
shlb
mov
and
add
pusha
jns
sbb
or
xor
test
add
into
cmp
cmp
jne
dec
in
ss
xchg
and
sub
or
js
sti
ja
cli
lret
inc
aas
popa
mov
jge
lods
lret
push
sub
and
sbb
or
cli
jbe
lods
and
fadds
outsb
push
icebp
xchg
jb
fsubrl
dec
inc
pop
ss
movsl
adc
lea
push
adc
stos
mov
das
cld
lds
add
loope
mov
pushf
xchg
or
ja
out
push
adc
pushf
add
mov
sbb
lcall
mov
clc
cld
xchg
sub
push
xor
jno
inc
into
negb
in
mov
mov
jle
push
adc
dec
xor
jns
nop
scas
mov
xor
pushf
adc
fisubrs
push
aam
jp
mov
insl
xor
loopne
pop
cltd
imul
loop
cmp
rcrl
lret
jl
pushf
aad
popa
inc
jae
xchg
loopne
push
mov
addr16
xorb
lcall
rorl
jb
push
stos
repnz
adc
shll
movsb
test
cwtl
pushf
movsb
mov
fnstsw
mov
dec
ja
pushf
mov
and
lods
scas
push
idivl
enter
rorl
add
fisttpl
xchg
sbb
mov
pop
subb
inc
mov
and
pop
xchg
in
pushf
insl
push
nop
stos
shufps
pushf
movsl
call
sbb
pushf
loop
xor
xchg
mov
pop
dec
mov
pushf
cmp
adc
inc
test
jne
leave
arpl
jbe
inc
mov
shrl
pushf
cmp
jno
pushf
lret
pop
mov
insl
lret
add
mov
in
arpl
lods
push
lahf
mov
pushf
fs
adc
jge
fsubs
jbe
and
fidivrl
out
jae
cmc
sbb
inc
mov
out
popf
imul
lods
cmpsb
pop
cmp
sbb
sarb
insb
pushf
ja
xchg
adc
and
add
fstps
pusha
dec
jp
out
jbe
sub
jno
pop
mov
clc
inc
cli
xor
and
test
movsb
ret
mov
inc
dec
mov
out
pop
cmpsl
pushf
daa
sbb
into
pop
pop
mov
repz
sub
and
addr16
outsb
inc
ret
and
loopne
cmpsb
nop
lds
push
mov
pushf
xlat
pop
jg
sub
je
sub
addr16
push
test
negl
pushf
ja
cmpsl
mov
dec
pop
pop
jp
cmpsl
fstpl
ret
dec
popf
test
in
pushf
fiadds
nop
mov
fidivl
mov
out
addl
xor
jge
fcomps
pop
mov
fcompl
ja
fcmovb
adc
xor
mov
mov
pop
fxch
stc
repz
push
jno
mov
xchg
mov
repnz
and
jge
and
and
inc
sbb
pushf
cwtl
int
push
ret
fistpl
push
mov
pushf
lret
and
rorl
mov
movsl
pop
pushf
aam
mov
add
aaa
cli
pushf
push
adc
fdivs
ljmp
push
dec
je
outsl
cmpl
test
jge
mov
push
pushf
rclw
fsubl
xor
mov
mov
xor
stos
dec
scas
mov
int3
repz
mov
iret
daa
insb
jl
arpl
call
lahf
jp
repnz
mov
push
mov
pop
jge
popl
inc
mov
pushf
push
and
ret
push
add
adc
and
mov
or
add
mov
inc
push
cmpsb
sbb
daa
adc
mov
adc
pushf
mov
movsb
jl
mov
call
mov
fistpl
xchg
pusha
lahf
push
cmpsb
mov
cwtl
jnp
pop
add
xor
push
mov
notl
cmp
mov
mov
cltd
pop
cld
sub
je
fcomip
add
in
xchg
push
jge
sub
cmc
lret
sahf
or
cmp
dec
jmp
lock
mov
mov
cmpsb
icebp
loop
lret
mov
test
aas
sub
mov
frstor
pop
out
inc
jnp
mov
call
jno
icebp
pushf
stc
sti
insl
adc
dec
inc
jae
lods
leave
push
ret
and
xchg
push
ljmp
xchg
pushf
rcll
imul
sub
stos
sbbl
out
and
divl
mov
mov
call
cs
cmpsb
pushf
imull
or
pusha
movsb
add
test
gs
add
lret
pushf
push
or
add
loope
sub
jno
adc
ja
mov
inc
push
out
test
xchg
cmp
mov
push
bound
pushf
push
out
jae
rcll
inc
fcmovbe
popf
xchg
ds
xor
push
jp
mov
enter
leave
push
push
mov
jl
xchg
hlt
xchg
cmp
orb
test
sbb
jle
jno
lock
aaa
and
rcrl
pushf
cmc
stc
xor
es
mov
pop
cmp
pushf
clc
roll
out
inc
insl
pushf
push
pop
adc
mov
push
add
xorb
adc
shlb
sub
push
out
out
add
mov
stos
and
pop
pushf
pop
cmp
out
push
repnz
push
js
lcall
xor
or
hlt
add
xor
dec
sbb
push
pushf
mov
push
inc
xor
fisttpl
aas
icebp
int3
out
pop
mov
data16
and
mov
mov
mov
subl
mov
add
rol
pushf
inc
int3
popa
dec
dec
mov
pushfw
enter
mov
mov
pushf
ds
outsl
xchg
push
arpl
xor
flds
or
xchg
jo
stos
jns
pushf
in
js
push
nop
xor
sbb
div
dec
loop
sbb
fcmovnb
jge
mov
adcl
fimuls
inc
int
lock
outsl
pushf
push
mov
lret
xor
int
lahf
jae
jl
inc
in
xor
lcall
fdivl
or
jp
pushf
mov
xchg
into
pop
orl
pushf
add
xchg
xor
dec
call
jae
mov
das
pushf
stos
adc
add
pushf
add
or
addr16
aad
cltd
xor
sti
cmp
mov
push
pushf
push
jmp
seto
cmp
jecxz
adc
lret
push
jb
cmpl
fimuls
fstpl
push
imul
inc
loope
ret
pop
test
dec
lret
dec
and
xor
daa
xor
ja
jns
arpl
cltd
in
xor
mov
pop
bnd
pushf
add
jbe
in
pushf
sti
ja
add
dec
stos
mov
fmull
cli
lret
lods
and
jo
sbb
pushf
xlat
xor
imul
and
sub
pushf
cmp
or
stos
pop
adc
in
add
pop
dec
mov
push
sub
out
pushf
inc
clc
aad
ja
mov
pushf
add
cli
outsb
rcrl
and
mov
jnp
jge
jge
mov
clc
cmpl
add
in
mov
test
cltd
push
dec
mov
dec
lods
mov
pushf
mov
enter
xchg
leave
ljmp
inc
mov
sbb
add
cli
xor
popf
dec
or
fldenv
daa
gs
sbb
add
dec
mov
frstor
push
pushf
dec
inc
cmpb
add
cmp
cwtl
mov
shlb
lods
push
sub
sbb
clc
inc
pushf
add
rcl
push
sub
repz
mov
mov
mov
inc
pushf
mov
mov
es
je
outsl
loopne
and
and
jae
mov
jl
pop
and
cmpsl
or
inc
adc
lods
jne
sarl
leave
sub
xchg
pushf
incb
pushf
sub
fcomip
xchg
loopne
inc
pushf
enter
push
insl
inc
mov
and
add
xchg
jp
mov
lea
movsb
fdivr
clc
inc
gs
adc
pop
mov
mov
lds
mov
cmpsb
pushf
out
sbb
or
mov
push
out
xchg
xchg
out
jmp
in
fucomi
mov
push
cmc
repnz
jge
loope
cmpsb
pop
mov
mov
sub
aam
fistpll
and
rolb
jns
adc
pushf
push
dec
jo
lret
or
xor
pusha
lods
bound
movsb
repz
and
sbb
lret
pushf
xchg
fisubl
jo
inc
outsl
lods
and
mov
mov
mov
movsl
mov
xor
iret
jl
pushf
pop
daa
add
outsb
test
push
and
lea
cli
xchg
mov
pop
rclb
or
push
cmp
popf
add
xor
xchg
mov
push
push
push
xor
subb
xor
and
jbe
inc
gs
sub
pop
sbb
nop
pop
inc
add
pop
jbe
imul
jge
xchg
inc
sti
jg
scas
adc
ds
pushf
mov
inc
lea
ja
clc
add
roll
into
push
xchg
in
pushf
fs
push
outsb
mov
push
pop
mov
pop
daa
sub
pop
cli
inc
add
test
hlt
mov
jns
scas
push
dec
or
push
cwtd
ss
push
mov
push
bound
lea
cmpsb
jnp
push
shr
stos
jg
push
xchg
mov
cmp
sti
pop
jae
push
int3
into
push
pop
xchg
or
sbb
shrl
add
push
xchg
sbb
call
xchg
mov
aam
scas
out
cli
xor
scas
jg
test
sti
decl
mov
xchg
add
xor
pushf
rorl
fmuls
xor
and
std
mov
dec
shrb
aam
push
mov
mov
and
jmp
jb
jo
fnstenv
pushf
lret
pop
push
push
xor
inc
fstl
andb
jl
jbe
add
add
inc
mov
rcl
scas
out
out
cmp
mov
and
sbbl
addr16
mov
push
mov
fimull
sbb
jne
pop
inc
addb
mov
cmpsl
sbb
imul
gs
lds
pop
out
or
and
or
dec
fdivrl
sbb
add
fimull
xchg
js
and
movsl
dec
sub
lret
pushf
icebp
out
stc
ljmp
pop
scas
dec
jo
lea
movsb
mov
sbb
outsl
aam
out
mov
and
sbb
mov
mov
hlt
outsb
cltd
fisttpll
sbb
jmp
arpl
jge
nop
cmp
test
mov
push
cmpl
mov
js
fldt
into
lret
inc
pop
mov
xorl
pop
inc
inc
lods
clc
sub
stos
negl
movsb
lahf
test
dec
sub
sbb
and
cmpl
setl
pop
xor
pop
imul
pop
incl
pushf
add
push
and
out
and
pushf
mov
and
jl
pop
dec
or
jl
cmpsl
idivl
dec
sahf
fistpl
fsubs
jae
push
dec
adc
fidivrl
xchg
repz
dec
pushf
insl
fstpt
add
xchg
push
adc
pushf
push
ds
xchg
inc
xor
ret
pushf
mov
or
sub
mov
js
fdivs
fcoml
clc
decl
jbe
pushf
push
ss
mov
push
adc
pushf
repz
cmpsl
pop
add
jno
add
das
lods
mov
mov
jge
fstps
test
jmp
sub
dec
in
jp
jl
xor
imul
xchg
out
pushf
bound
pop
jbe
push
cmpsl
mov
mov
sub
push
outsb
mov
sub
rclb
pushf
lds
ret
mov
inc
sub
in
sbb
and
push
dec
push
pop
cwtl
test
sub
sbb
pop
mov
jbe
cmp
inc
jb
mov
pushf
out
outsb
or
dec
pushfw
lret
popa
aas
addr16
and
adc
ljmp
sbb
outsl
rcrl
das
pushf
xchg
std
mov
lret
jg
lcall
insb
dec
nop
adc
cmpsl
enter
pop
mov
lcall
pushf
shlb
or
jns
pushf
adc
mov
or
jbe
mov
jp
clc
dec
or
push
mov
out
lods
in
cli
sbb
cwtl
ficomps
addr16
sbb
stc
dec
dec
rcl
and
loope
mov
jbe
pop
mov
ret
mov
test
add
mull
mov
push
pushf
mov
hlt
jmp
xchg
mov
pusha
mov
xchg
xor
mov
js
jne
es
push
and
xchg
imul
pop
cld
ds
cli
movsb
mov
out
pushf
xchg
test
outsb
out
sub
movsl
sbb
lds
test
scas
rcrb
xchg
jg
mov
scas
fmull
lds
inc
pop
leave
push
mov
push
pushf
jbe
or
inc
add
mov
inc
movsb
movl
push
dec
cmp
or
xchg
pop
testb
fistps
test
fisubrl
adc
mov
pushf
push
je
add
pushf
and
data16
ror
mov
add
repz
adc
sbb
pushf
add
jnp
mov
or
push
fdivp
inc
ja
xor
test
imul
out
mov
mov
mov
and
sub
adc
jl
neg
mov
push
sub
pushf
ja
adc
xchg
aaa
repnz
mov
in
loope
xchg
lret
adc
je
pushf
ja
xchg
jmp
pushf
adc
cwtl
lods
xor
xchg
rep
mov
pop
pushf
xchg
shlb
pop
mov
pushf
sti
sbb
inc
pushf
add
popa
pusha
mov
test
pushf
dec
xor
pop
lds
pusha
cmp
xchg
push
fistps
cmp
mov
iret
mov
xlat
jo
mov
lods
mov
pushf
mov
inc
lcall
push
rcll
pushf
xchg
xor
fidivl
or
stos
or
mov
inc
push
in
xlat
fisubrs
mov
scas
pushf
jo
adc
mov
fiadds
cwtl
adc
and
lods
lods
xlat
imul
movsl
push
or
push
xor
jns
xchg
test
jmp
ljmp
jns
out
out
or
lods
clc
jae
xchg
pushf
pop
jb
insb
bswap
pop
dec
sbb
cltd
shlb
jmp
lods
clc
sarl
xor
mov
mov
arpl
fisubs
js
pop
je
sbb
jnp
sbb
mov
mov
pushf
scas
add
stc
lds
in
mov
jle
aad
mov
aas
xchg
mulps
dec
scas
loopne
leave
dec
or
xchg
fwait
mov
pop
fstp
mov
das
mov
fs
xchg
xchg
xchg
mov
jecxz
jns
stos
cmp
cmp
test
jge
sbbb
in
or
jns
dec
mov
call
pushf
pop
inc
xlat
adc
mov
sub
pop
pop
stc
addb
cmp
mov
mov
pop
sub
ljmp
stos
sbb
icebp
jl
leave
popa
mov
mov
arpl
ret
imul
inc
fimuls
fldl
aaa
mov
ds
imull
aad
push
aam
and
push
lcall
push
add
in
addl
adc
inc
sbb
mov
jg
push
add
inc
jmp
sub
mov
out
std
sbb
enter
scas
add
mov
dec
outsb
jmp
fnsave
xchg
lock
xchg
jge
lock
jno
rorb
dec
xorl
stos
gs
popf
cli
inc
xchg
mov
sahf
pop
subb
mov
mov
xlat
cmpsl
mov
scas
lret
pushf
or
mov
mov
push
mov
pop
mov
mov
mov
xor
aas
cmp
cmpsl
aam
push
xor
mov
dec
inc
aad
stc
pop
pushf
lds
xchg
inc
out
jp
out
imul
out
cld
sbb
hlt
pop
cld
jge
push
icebp
lcall
pop
and
xchg
insl
sahf
popf
pop
jbe
or
push
insb
push
mov
dec
repz
push
adc
jp
xchg
add
sub
inc
push
cmc
push
pop
mov
xor
mov
mov
rcrl
xchg
int
or
icebp
stc
mov
lods
mov
or
pushf
cli
pop
scas
sbb
cwtl
cmp
pushf
jge
test
outsl
popa
mov
push
cmp
lock
test
xchg
mov
sahf
xchg
mov
xchg
loopne
cmc
mov
push
jl
xchg
cld
jmp
lock
cmp
add
ljmp
xor
jno
xor
jl
lahf
aas
adc
pushf
jo
jb
push
xchg
pop
pop
push
add
cltd
xor
sahf
stos
insl
stos
fwait
repz
cld
lahf
imul
imul
jl
inc
cld
gs
xor
loop
dec
nop
aad
mov
push
cmc
pushf
push
leave
sbb
lea
loopne
cld
cmp
inc
jmp
outsl
inc
stc
ficompl
or
push
jno
xchg
cmp
scas
pushf
jbe
fimuls
std
xchg
insb
fsubr
out
iret
je
movsb
jno
mov
mov
jmp
ss
push
jp
enter
ret
aaa
ja
out
arpl
notb
cmp
pushf
insb
sub
cmpsl
push
xor
shll
jo
or
mov
xchg
int3
and
push
gs
pop
lret
dec
outsl
pushf
div
stc
add
pusha
rcll
movsb
out
push
shl
mov
std
cmc
dec
xor
add
and
pushf
sbbl
mul
pop
cmp
xchg
fldcw
dec
lods
pushf
lock
or
inc
out
clc
mov
lods
and
pusha
mov
cmp
pushf
jg
xchg
push
sahf
cmp
pushf
fiaddl
xchg
sbb
xchg
pushf
jmp
push
in
push
pushf
aam
or
mov
adc
lds
pop
test
scas
notl
or
xchg
xchg
jo
in
pushf
cmc
add
outsb
data16
sub
sub
or
lahf
mov
jns
mov
jg
pop
or
jmp
int3
js
mov
dec
mov
cmp
pushf
push
pop
sbb
cmp
xor
lcall
jl
pop
scas
jo
lods
movsl
push
lods
sbb
xchg
jp
dec
jne
sbb
pop
push
pusha
mov
bound
iret
dec
icebp
jl
sarb
movsl
push
jno
sub
loop
dec
lock
jge
inc
xor
mov
pop
pushf
add
flds
bound
loop
orl
out
test
out
idiv
rcpps
pop
lret
mov
mov
test
jp
jg
loop
mov
xor
ss
jnp
pushf
or
xchg
int
pushf
xchg
pop
jbe
in
mov
push
jg
mov
pushf
je
test
int3
pushf
and
jl
stos
jo
insb
sahf
jbe
jmp
pushf
or
pop
lods
pushf
stc
js
nop
sbb
out
pusha
pop
jb
sbb
inc
cmp
mov
or
mov
xchg
mov
dec
and
adc
mov
push
cmp
cmp
pop
jg
stos
sbb
out
pushf
out
xchg
repz
pop
cmp
rclb
pop
and
xchg
sbb
adc
ds
dec
pop
cli
lds
rolb
dec
mov
cmp
mov
push
popa
mov
mov
scas
mov
cmpsl
sbb
jl
loop
pop
aam
mov
add
stos
inc
xchg
cmp
sbb
ret
std
hlt
ja
pushf
push
ss
imul
dec
sbb
scas
mov
js
pushf
add
sbb
int3
stos
cmc
cs
mov
sub
aad
inc
fcoms
pushf
outsb
ja
push
lods
movsl
mov
movsb
sbb
and
int
aas
fucom
movsb
mov
loope
pop
mov
andl
cmp
inc
cmp
in
and
mov
into
int
pushf
das
sub
push
insb
dec
imul
iret
in
imul
fnstsw
scas
imul
unpcklps
dec
pop
stos
hlt
inc
ljmp
or
xor
loopne
or
inc
cld
inc
pushf
mov
cltd
inc
dec
cmp
clc
cmc
and
sahf
inc
jp
sub
js
test
inc
js
and
mov
pop
push
mov
outsb
lea
out
std
pusha
mov
cld
xor
add
mov
pushf
and
les
scas
add
mov
push
pop
int
push
mov
repz
or
lea
push
inc
loopne
jg
add
jle
mov
xchg
test
cwtl
dec
cmp
jl
cltd
mov
insb
cmpsb
adc
push
cwtl
or
and
aaa
pushf
xchg
add
push
mov
inc
cld
call
push
jbe
sarb
arpl
out
data16
fdivrs
dec
clc
mov
adc
fs
push
lods
mov
leave
dec
mov
push
dec
mov
lds
test
and
lea
lods
mov
pushf
xchg
outsb
pop
mov
pop
push
pop
lods
adc
out
cli
and
imul
add
pop
sbb
cmc
leave
mov
cmp
adc
mov
mov
test
jno
mov
lret
ret
clc
or
adc
shrl
data16
aaa
cli
mov
add
add
or
test
or
sub
pushf
imul
jne
test
pushf
shll
outsl
xlat
jns
pushfw
or
lods
cmc
pushf
cmp
cld
pop
clc
mov
adc
add
mov
inc
mov
cmpsl
stc
xchg
cmp
xor
divb
pushf
in
faddl
xchg
pop
nop
pushf
and
and
jl
lods
xchg
mov
xor
jnp
fsts
ss
sbb
add
pop
ror
js
sbb
dec
lods
sub
cli
outsl
pushf
inc
fdivrs
mov
cld
mov
xor
stc
imul
pushf
arpl
lea
adc
out
test
into
pop
lds
psrlq
jns
movsl
iret
andl
mov
mov
cltd
sbb
fbstp
out
xchg
xlat
daa
stc
xorb
jb
jo
push
dec
loopne
ror
fbld
push
and
mov
cltd
addr16
mov
fisubl
pop
orl
mov
nop
loopne
pushf
pop
leave
lock
jno
lds
pushf
test
xor
sahf
sub
arpl
lods
outsb
cmp
xlat
pushf
sub
aad
or
nop
jae
mov
aam
aas
cmp
ja
lret
movsb
test
cmp
add
loope
sub
int3
sbb
bnd
add
sbb
and
pushf
dec
pop
les
in
pushf
outsb
cld
adc
jl
out
inc
leave
sbb
mov
push
cmp
fidivrl
cltd
jp
or
or
jae
in
inc
and
bnd
cmpsb
pop
jbe
pop
movsb
push
loop
pop
dec
xor
fcompl
rcrl
inc
addr16
ficompl
leave
mov
stos
mov
test
ret
mov
or
lcall
push
pop
xor
aam
inc
out
mov
pop
pushf
sbb
out
hlt
pop
and
jmp
arpl
enter
mov
add
mov
add
roll
sub
adcl
or
cld
mov
jge
js
cli
mov
sbb
push
inc
pushf
ss
push
pop
jb
scas
test
pop
sub
pop
cmp
loope
sub
lods
mov
and
jge
insb
xor
pop
stos
dec
idiv
pushf
shlb
jno
imul
iret
mov
sub
shll
mov
cld
cld
fcom
xor
mov
pop
pushf
ret
xchg
adc
jne
mov
xchg
mov
shl
xor
xor
out
fs
ljmp
push
and
popf
and
clc
add
cmp
repnz
popf
sahf
sti
jl
sbb
mov
cmp
jl
jg
pop
xor
xchg
pushf
jle
aam
filds
mov
cmp
int
mov
cld
pushf
sbb
cmp
xchg
cli
jg
xchg
inc
cld
mov
mov
lahf
mov
xlat
or
xchg
cmp
mov
push
imul
test
leave
cltd
pop
pushf
pop
pop
or
repnz
lahf
mov
add
mov
scas
mov
fiaddl
repz
das
pushf
pop
pop
movsb
dec
and
and
outsb
push
pusha
xchg
add
and
cmp
ret
outsl
xchg
adc
leave
and
mov
pushf
out
imul
jg
mov
mov
sbb
and
lock
pop
nop
imull
sbb
or
mov
pushf
xchg
mov
adc
pushf
mov
mov
xor
lcall
mov
mov
negl
mov
popf
mov
jmp
mov
and
add
fisttps
xchg
int
jno
lds
mov
pushf
dec
adc
ret
pop
mov
add
and
stos
std
dec
adcl
std
xchg
pushf
or
lea
sti
js
jl
dec
gs
test
cmp
inc
inc
xchg
adc
pushf
cmc
inc
and
dec
xchg
dec
push
mov
fnstsw
loop
dec
insb
pushf
mov
xor
aas
dec
push
cmp
outsb
xchg
xor
and
lods
sbb
call
addr16
push
push
mov
lock
sub
or
pop
push
mov
sbb
rol
mov
sbb
and
sbb
jecxz
loope
pop
call
addr16
or
jns
ficoml
adcl
jmp
outsb
decl
dec
push
cmc
mov
xchg
pop
dec
xor
sbb
mov
clc
pushl
and
inc
push
or
mov
je
shll
dec
add
test
cwtl
bound
push
popa
imul
xchg
jge
xlat
and
mov
pushf
sub
imulb
and
mov
lahf
adc
pop
mov
sub
test
lea
mov
cmp
leave
mov
lods
pushf
lret
sub
dec
pushf
adc
stc
jp
aaa
pop
pushf
shrl
into
pushf
mov
push
orb
xor
fidivs
in
jnp
scas
mov
inc
pushf
sub
sbb
jmp
cwtl
mov
dec
mov
xor
push
pushf
js
test
mov
fiadds
push
sbb
and
jo
xchg
scas
fstp
test
jne
scas
icebp
sahf
fisubrs
adc
in
stc
mov
decl
pop
push
push
xchg
addr16
or
xchg
mov
xchg
mov
dec
call
daa
mov
xchg
imul
cld
push
push
mov
dec
movsl
push
push
outsl
jbe
popa
insb
loope
stc
je
jmp
aaa
cli
xchg
pop
sub
mov
pop
xchg
inc
mov
int3
inc
repz
xlat
aaa
fisttpl
xchg
xor
stos
pop
cmc
popf
xchg
in
outsb
jl
push
clc
test
sti
mov
xchg
pushf
xchg
cmp
inc
ds
add
xor
imul
adc
add
pushf
mov
xor
xchg
addr16
fistps
sub
popf
mov
aam
fidivrs
insb
addr16
idivb
cmpl
and
mov
adc
shlb
les
pop
mov
add
test
lods
mov
imul
sbb
pop
add
jl
test
cmpl
stc
fdivrs
cli
inc
inc
leave
sub
dec
aam
jb
repz
insb
jl
dec
pushf
mov
lret
xchg
mov
jg
mov
scas
xchg
mov
xchg
cld
push
adcl
sub
and
stc
movsl
pushf
xchg
adc
negl
cs
sub
mov
mov
lods
jl
leave
jg
cmp
jmp
adc
xor
out
jo
cld
pop
push
dec
mov
mov
fs
fstl
sarb
or
lods
jp
and
jnp
pushf
out
hlt
mov
lcall
cmpsl
ja
and
pushf
lds
ror
dec
cld
lea
or
lods
inc
cmp
out
cmp
popf
xor
sti
fiadds
aam
push
or
lret
jno
xor
mov
ja
mov
loope
mov
ficompl
and
arpl
lret
sahf
test
adc
lds
xor
inc
pop
sub
mov
pop
lds
stos
nop
cmpsl
pushf
jbe
add
mov
pop
jge
push
fdivrs
notl
push
mov
in
cmp
jle
sbb
xor
jns
cld
ljmp
shrl
jb
adcb
movsb
mov
pop
adc
shlb
fs
dec
xchg
mov
xchg
xor
ja
push
call
les
pushf
push
leave
test
daa
pushf
pop
pop
dec
sub
push
imul
rcll
mov
mov
pop
sub
push
test
sbb
movsl
pushf
rorb
ljmp
in
sbb
movsb
test
nop
mov
xchg
ret
pusha
cmp
adc
jae
sub
cmpsl
repnz
inc
push
pushf
jns
xlat
popa
orl
jp
mov
outsb
and
in
je
cmp
pop
jne
lds
mov
mov
pop
sub
jecxz
punpckldq
test
daa
push
adc
aaa
and
cld
jno
dec
push
movsl
lods
into
cli
xchg
out
push
pop
xor
or
fiaddl
dec
push
adc
xchg
mov
aas
mov
xor
cwtl
and
push
jo
out
sar
mov
clc
mov
nop
mov
sti
std
fimull
cltd
pushf
call
idivl
and
push
test
ja
add
lods
outsl
mov
cli
pushf
lea
dec
loope
push
dec
pushf
sbb
inc
shl
mov
push
jl
inc
fiaddl
inc
mov
fcompl
imull
clc
or
cs
mov
fucomp
mov
pushf
pop
xor
nop
xor
lea
and
jg
mov
fldenv
sbb
mov
mov
or
mov
pushf
jne
les
int
int3
pushf
sahf
pop
or
sbb
xchg
dec
pushf
subl
mov
fidivrl
or
push
inc
add
mov
not
adc
dec
xor
into
pop
mov
imul
fdivl
pop
lds
mov
adc
sbb
insl
pushf
xor
mov
pop
xchg
int
daa
xchg
mov
daa
push
xor
jns
mov
sahf
rcll
jnp
sbb
setl
sbb
or
clc
outsb
xchg
jo
pushf
fcoms
xchg
push
xchg
leave
jno
xor
or
mov
dec
and
pop
lret
add
loopne
mov
repnz
dec
push
jge
xchg
leave
add
jno
cmpl
pusha
mov
mov
sub
loop
and
aam
jnp
stos
mov
in
mov
cmp
pushf
push
test
in
push
adc
aam
jle
aas
sbbl
add
daa
mov
add
imul
fdivrl
or
jnp
add
arpl
fcomp
data16
pop
test
mov
rcr
cmpsl
jb
pushf
out
icebp
mov
in
mov
sub
or
cld
test
cs
movsl
mov
ret
jno
xchg
jnp
push
xchg
pop
cmp
aam
mov
push
mov
repnz
pushf
fcoml
lret
jecxz
imul
xchg
pushf
test
dec
pop
jge
pusha
shlb
xchg
pushf
mov
jl
sub
int3
and
sbb
inc
dec
add
xor
xchg
cmp
xchg
pop
jl
pushf
jg
inc
es
sub
rcll
dec
inc
popa
sbb
out
jno
in
and
mov
inc
mov
into
das
stos
mov
stc
cld
adcl
sub
out
sbb
mov
test
sbb
in
cld
jmp
lret
lods
pop
push
stos
cmpsl
ss
fdivl
mov
adcb
push
mov
dec
mov
jg
mov
jge
add
cmpsb
sub
xchg
loopne
xorb
and
cmp
mov
push
add
pushf
jecxz
dec
jns
cltd
pushf
testb
cmp
jnp
pushf
orl
lcall
mov
dec
movsb
aas
xchg
movsb
loope
sarl
sbb
paddb
out
and
rcrl
aad
stos
fistl
cmp
cwtl
xor
jnp
jge
stc
push
test
sbb
fistpll
test
in
lret
mov
cmp
js
scas
mov
sub
xchg
cmp
imull
jno
jnp
lods
lahf
pusha
pop
cmp
sbb
pop
sbb
fisubs
add
cld
iret
mov
aas
mov
jg
pushf
fimuls
xrelease
pushf
lret
enter
mov
cmp
jmp
push
pushf
adc
loop
stc
enter
repz
push
stos
pop
xchg
sbb
push
leave
add
adc
test
outsl
inc
out
lahf
mov
fdivrs
std
sti
pop
jns
cmpsb
push
lods
stc
jne,pt
scas
clc
inc
inc
pop
push
iret
lods
mov
jns
inc
xchg
pushf
adc
popf
xor
enter
pop
adc
push
pop
fisttpl
cli
sbbl
pushf
mov
add
imul
mov
xchg
mov
aas
xchg
lods
pop
jl
into
adc
bound
call
lcall
xchg
sub
mov
adc
inc
inc
mov
lret
imul
test
push
cmp
or
das
pushf
aas
xchg
or
adcl
push
sub
xor
es
cli
js
cld
imul
dec
dec
mov
push
out
movsb
xchg
lea
lock
mov
mov
and
pop
int
pop
les
mov
insl
pushf
xchg
xor
and
sbb
and
daa
jne
mov
add
pushf
push
pop
notb
mov
mov
jecxz
lcall
mov
subb
call
adc
xchg
fidivs
and
cmp
pushf
xchg
out
pop
jg
lods
cmc
pushf
inc
cmpsl
roll
jo
xchg
pop
xchg
stc
pushf
jmp
dec
xor
call
xor
pushf
je
push
lds
sub
lods
pushf
sub
mov
add
adcb
daa
stos
movsb
test
add
pop
add
in
mov
xor
scas
imul
push
js
idivl
pushf
dec
repnz
ljmp
xor
xchg
lea
test
lods
cmp
inc
loope
inc
pushf
pop
pop
pop
sbb
jbe
cmpsl
jg
jge
adc
push
adc
iret
xchg
test
xor
sub
pushf
cmp
dec
add
xchg
fimull
pushf
fistpll
inc
sub
mov
mov
dec
mov
pushf
xchg
xor
decl
mov
cmpsb
cmc
pushf
xor
mov
gs
xchg
lcall
lea
in
inc
pushf
adc
cmp
pushf
adc
pop
and
loope
insl
pushf
cmc
fsubs
sbb
inc
das
pop
lret
mov
cmp
xchg
mov
scas
xchg
xchg
xchg
lods
push
sub
rorb
pop
loopne
jb
mov
scas
js
out
out
pushf
dec
cli
std
adc
xchg
jl
jge
stos
adc
xor
push
cli
je
mov
or
test
dec
cmpsb
xor
xor
lret
mov
jno
cmpl
mov
rclb
lea
cld
xor
sub
orb
leave
daa
ficoms
stos
mov
pop
pushf
sahf
ficoml
mov
dec
lahf
aad
lcall
sub
lds
enter
dec
or
loope
dec
cmp
arpl
pushf
jbe
mov
sub
leave
out
sbb
mov
scas
jne
or
cmp
sarb
or
dec
test
xor
movsl
movsl
xor
sub
out
mov
loopne
popa
or
pop
in
add
mov
clc
jg
ficomps
aam
movsb
pop
cmp
cltd
jnp
adc
or
mov
gs
mov
jmp
jl
jmp
xchg
or
loopne
lds
xchg
push
mov
pop
pushf
cmp
lahf
pop
cmpsl
sub
pop
outsb
aad
mov
clc
cmp
hlt
faddl
stos
or
popf
scas
sbb
mov
add
pop
mov
negl
mov
push
lock
mov
xchg
mov
outsl
xchg
lea
pushf
aaa
leave
daa
sub
mov
push
lar
imul
fnstsw
lock
add
loope
cli
mov
mov
je
out
icebp
pushf
mov
sub
sub
xchg
cli
push
pushf
lret
jmp
jbe
pushf
cmpsb
xchg
jae
out
leave
push
pushf
adc
xchg
jns
aaa
shrb
testl
push
lods
pop
pop
pop
mov
shrl
cltd
inc
das
mov
sbb
cld
jle
xchg
xchg
dec
mov
pushf
cli
daa
aad
inc
add
ljmp
mov
mov
je
loope
push
imull
dec
or
mov
pop
std
jge
jecxz
out
pushf
je
jg
popa
xor
adc
pushf
mov
mov
mov
push
pop
jecxz
js
mov
push
jae
clc
rolb
mov
mov
inc
jge
xor
pop
pop
jge
mov
mov
sbb
ds
add
mov
mov
sub
jge
test
mov
cld
inc
jns
aas
and
jno
and
subb
cmpsb
or
lea
lahf
pushf
shll
mov
pushf
push
mov
popf
jne
rol
mov
xor
movsl
in
lahf
pop
fnstsw
in
mov
pushf
sub
inc
loope
outsl
aam
pushf
gs
mov
or
dec
into
push
shll
daa
adc
imul
lods
into
push
es
loope
das
out
test
xor
jmp
pushf
mov
xchg
popa
pushf
dec
or
xlat
pushf
jnp
mov
pop
xchg
gs
nop
jl
add
dec
out
setl
mov
addr16
je
popa
ja
xchg
lods
add
insl
cmp
xor
mov
xchg
lods
fdivp
insb
daa
mov
pop
imul
pop
xchg
repnz
dec
or
pop
pop
xor
dec
scas
inc
mov
daa
imul
xchg
jmp
sbb
push
adc
or
mov
into
pushf
cmp
mov
test
mov
inc
pop
push
ret
xor
sub
mov
popa
test
daa
xor
std
sbb
jmp
mov
in
in
push
popf
jae
jle
add
xchg
pushf
cmp
in
add
sub
push
and
shrl
cld
in
loopne
nop
scas
js
icebp
push
jl
pusha
push
scas
xchg
loope
pushf
add
cli
stc
pushf
push
adc
lods
sbb
sbb
test
cwtl
push
loope
insl
das
sbb
pop
test
sub
dec
mov
jb
pushf
iret
das
jne
dec
add
add
mov
cmp
dec
iret
bnd
push
xor
rolb
cli
cmp
inc
dec
or
jge
xchg
pop
outsl
mov
arpl
rorl
xchg
jae
pushf
lds
sbb
jnp
jo
pop
mov
cli
pushf
pop
nop
mov
jle
adc
mov
into
dec
sbb
mov
add
fs
xchg
cmp
icebp
je
push
sbb
dec
inc
or
addr16
ret
dec
push
in
dec
cli
xchg
jl
sbb
dec
jecxz
loope
repnz
in
inc
sahf
notl
pushf
sub
dec
pushfw
adc
xchg
pushf
dec
stos
mov
stc
dec
pop
outsb
pushf
subl
mov
lods
pop
pop
cmp
mov
loop
shrb
jbe
pushf
mov
js
mov
std
arpl
mov
mov
iret
and
scas
into
add
jmp
cwtl
jne
fidivrs
mov
xchg
xor
mov
fdiv
mov
xchg
mov
add
pop
cmp
sub
add
nop
jno
repz
cmp
jge
cmp
movsb
push
xchg
sti
sbb
and
jp
push
mov
repz
mov
jecxz
push
test
pusha
mov
in
sbb
fs
or
or
pushf
insb
pop
out
pop
test
jmp
pop
lods
and
call
in
loopne
sbb
sub
dec
ret
sbb
sbb
pop
sti
add
sar
xor
jnp
sub
imul
mov
mov
stos
xchg
gs
mov
test
xor
mov
icebp
in
fbstp
out
adc
ds
jp
icebp
xchg
mov
mov
dec
sbb
les
fs
jo
lret
sbb
imul
xchg
lods
add
repnz
cmp
scas
pushf
cmp
xor
lahf
mov
xchg
popa
aas
or
addr16
push
pushf
push
stc
xchg
xchg
add
movsl
leave
mov
inc
sbb
or
pop
ja
mov
cld
xchg
push
mov
addb
repnz
or
arpl
stc
push
pushf
adc
add
fidivrl
je
xor
ret
sbbb
bound
xor
inc
add
xlat
adc
mul
ljmp
mov
cmp
add
pop
mov
push
test
sahf
pushf
fs
sbb
dec
pushf
ds
fmuls
lods
cmp
lock
lahf
push
in
stos
lea
xchg
sbb
cld
sti
push
pop
mov
not
mov
rcrb
call
aam
fcomip
adc
in
sahf
and
mov
test
xor
mov
mov
pop
add
and
jl
popf
arpl
lods
cmpsb
fisttpll
vmovaps
test
fiadds
mov
pushf
ror
inc
jge
sub
loop
cmp
jle
outsb
and
or
das
xchg
mov
sub
xchg
mov
fists
stos
mov
xchg
dec
lods
mov
lea
lods
push
cmpsb
add
xor
jmp
lods
jns
jecxz
lcall
lods
in
les
aas
idivl
jns
lock
push
icebp
dec
add
stc
jne
aam
pushf
mov
in
cmpsl
or
cs
scas
ret
or
icebp
ud1
popa
mov
sub
xlat
mov
xchg
loope
mov
mov
pop
mov
pushf
push
inc
shll
std
xchg
mov
call
les
aaa
stos
xchg
dec
std
stc
lods
pop
subb
xchg
ds
cmp
dec
in
cwtl
pushf
mov
fld
cld
mov
pop
lock
or
jecxz
jle
mov
shl
adc
cmp
stc
fdivl
or
sbb
es
fs
daa
add
add
mov
stos
mov
fs
mov
cld
mov
xlat
pushf
or
pop
and
mov
loopne
outsl
and
arpl
call
jnp
mov
dec
movsb
pop
dec
aad
out
enter
add
popa
jmp
push
pop
loope
pushf
mov
push
pop
xchg
repnz
repz
idivl
stos
pushf
mov
mov
push
xlat
fistpl
inc
nop
ficomps
adc
pushf
jne
adc
mov
sti
in
movsb
pop
jno
cmc
dec
rcrb
pop
daa
lret
mov
repz
fstpl
xchg
imul
adc
pushf
cld
sbb
sub
dec
lock
or
xchg
adc
mov
aad
inc
sbb
shll
push
pushf
sbb
in
adc
hlt
test
push
jg
cmpsl
jns
jl
cmp
scas
xchg
jae
sbb
mov
jle
rcl
sub
inc
aaa
cmp
push
mov
das
std
inc
sbb
cmp
test
jl
mov
mov
stos
pop
ret
pushf
mov
sbb
insb
sub
pop
mov
cld
mov
jmp
and
and
insl
aaa
xchg
pushf
popl
sarb
les
cmc
pushf
pusha
push
jo
into
bound
popa
mov
mov
jg
rol
pushf
or
mov
andl
and
xchg
xchg
sbb
hlt
mov
mov
clc
and
jb
xor
out
test
pushf
cwtl
ss
pushf
lock
push
mov
xchg
ss
pushf
xchg
push
xor
out
dec
lret
pushf
mov
add
mov
push
jecxz
aaa
push
cld
xor
popa
and
lods
call
add
dec
sbb
fwait
xor
adc
add
out
push
stos
hlt
or
mov
xor
insb
and
pop
mov
mov
ljmp
mov
test
scas
aas
mov
add
inc
pop
mov
out
mov
add
or
fldcw
adc
lcall
pushf
scas
pop
repz
out
mov
orl
mov
push
iret
jg
pushf
insb
sub
cli
daa
cmc
mov
pushf
fwait
pop
sbb
repnz
setl
js
fdivl
push
cli
sub
jl
jl
sbb
dec
add
aas
jl
sbb
adc
lahf
sub
mov
inc
subb
das
xchg
lock
jmp
pop
pushf
xlat
pop
sub
mov
mov
fnstcw
adc
sti
test
adc
pop
pushf
cmc
xor
push
cmp
ljmp
cmp
push
pop
gs
in
cmp
dec
ret
xlat
fmul
push
movsb
push
pushf
dec
add
xchg
pop
les
or
ds
xor
push
cld
pop
das
scas
bound
add
mov
pop
pop
das
cli
dec
pushf
xchg
jmp
mov
mov
mov
rolb
and
out
adc
into
loop
ds
pop
push
daa
mov
mov
sbb
movsl
js
stos
test
xor
jge
je
movsl
rolb
mov
ffree
in
xor
scas
clc
add
js
or
in
lods
popa
mov
mov
hlt
xor
inc
outsl
add
les
pushf
fwait
mov
rcll
or
pop
fcompl
sbb
mov
test
mov
cmp
je
cmp
jb
push
shrl
pushf
fsubr
mov
pushf
cmp
mov
dec
mov
dec
cmp
cmp
pushf
lret
push
rcll
cmp
inc
mov
sbb
pop
xor
jmp
rcll
das
mov
dec
fidivl
sbb
sbb
popf
add
ss
sbb
scas
jg
shlb
jnp
lea
lock
cmp
loop
bound
sbb
mov
rcl
or
idivb
movsb
pushf
popf
test
insb
sbb
data16
movsl
pop
inc
ret
lods
push
cmp
mov
in
mov
add
pusha
int3
stos
mov
nop
lods
movsl
orl
or
pop
call
mov
mov
pop
lds
sbb
popf
repnz
sbbb
pushf
mov
cmp
mov
iret
pop
mov
lret
outsb
inc
adc
pop
inc
add
pushf
push
in
dec
in
or
int3
mov
and
cmpsb
jmp
mov
out
pusha
fs
push
pop
mov
jmp
enter
out
scas
adcl
pop
or
or
adc
jb
pop
inc
mov
fimull
mov
dec
xlat
fwait
inc
push
lods
pop
in
aad
mov
and
cmpsb
xor
in
mov
adc
pop
and
imul
outsl
and
in
popa
add
lcall
cmpsl
in
sub
int
mov
mov
mov
pop
pushf
mov
clc
add
fmull
pushf
in
mov
mov
sbb
xor
pop
push
stc
xchg
or
jl
cmpsl
icebp
cmpsb
inc
repnz
mov
lods
neg
adc
mov
shr
xor
mov
mov
jg
cmp
mov
jl
jnp
mov
pop
jns
aas
mov
push
imul
inc
mov
inc
jo
pop
cmc
stc
pop
jmp
outsl
repz
push
mov
jg
push
mov
jg
mov
xchg
aad
mov
inc
fcomip
cli
inc
mov
mov
mov
movsl
lods
daa
test
mov
pushf
mov
jp
dec
sub
scas
ds
dec
cmp
iret
cmp
in
mov
insb
cwtl
mov
adc
sub
fnstsw
jg
push
add
cmpb
add
lods
inc
sub
ss
push
sub
jl
inc
sti
test
jp
add
mov
mov
pushf
dec
adc
fcoml
negl
int3
pop
xor
push
test
aas
mov
je
and
xchg
in
push
sti
daa
lahf
daa
ss
jnp
cmp
cwtl
jne
add
cmp
xchg
repz
lret
mov
push
sub
loopne
mull
into
pop
mov
cmp
sub
or
lret
or
rclb
ficompl
sub
and
jle
loope
sub
shr
shrl
mov
out
mov
mov
push
push
mov
mov
pushf
and
cmp
into
sbb
popf
add
sti
lods
and
and
sub
shll
pop
outsl
jl
pusha
cmp
mov
into
jp
pushf
rcrb
mov
inc
inc
addr16
mov
or
jp
xlat
sub
test
repz
dec
jns
test
jmp
mov
xchg
mov
dec
std
mov
ficoms
jae
sub
mov
pushf
xorb
sub
push
sbb
cld
mov
add
or
mov
xchg
pushf
inc
cmpb
jecxz
bnd
push
sbb
dec
pushf
push
or
popa
pop
cmp
pop
jmp
pushf
mov
cld
inc
mov
cld
jno
cmp
xchg
icebp
pop
addr16
outsb
sahf
or
jae
xor
es
je
xchg
mov
add
push
mov
int
hlt
cwtl
daa
mov
pop
mov
push
xchg
scas
test
rolb
out
pop
outsb
stos
daa
add
adc
pushf
arpl
dec
cwtl
add
mov
cmpl
dec
gs
mov
mov
pushf
aas
ds
divb
les
notl
jg
or
dec
adc
mov
es
sub
mov
jno
fs
push
pop
jl
cli
push
pushf
push
arpl
out
cltd
pop
push
ror
xlat
mov
mov
das
insl
sbb
pop
jle
pushf
int3
or
dec
test
out
ffreep
je
lods
pushf
fisubl
sub
pushf
pop
jmp
dec
out
xor
dec
dec
ret
adc
aam
mov
sub
jge
test
jmp
or
cmp
lahf
sahf
lock
inc
loopne
mov
pop
outsl
lock
ljmp
daa
dec
add
test
js
je
pushf
mov
test
insl
std
push
add
and
pushf
in
aas
xorl
adc
and
rcr
ret
test
push
test
lods
cmp
lret
in
mov
iret
pushf
hlt
push
test
lcall
aas
dec
or
shlw
inc
out
shlb
cmp
pushf
pop
xor
es
jno
mov
mov
stc
xchg
sub
hlt
subb
mov
aas
repnz
xchg
scas
adc
cli
pushf
loop
mov
xchg
jb
push
pushf
mov
stc
ss
pushf
sti
test
jecxz
test
or
mov
or
cld
enter
scas
mov
push
cmp
cmc
repz
andb
sub
sbbb
lock
inc
or
and
fdivr
add
in
lahf
dec
jne
stos
int3
rcrl
dec
into
adc
stos
das
mov
int3
pop
mov
aam
mov
mov
push
pushf
mov
sbb
mov
and
fisubrl
xlat
sahf
lods
ret
stos
xorb
cld
add
es
mov
movsl
aas
pushf
jns
mov
std
ds
cmp
addr16
push
loope
aaa
jl
aas
inc
xchg
push
gs
push
fldcw
lods
pop
inc
mull
xchg
loop
or
xchg
jae
inc
movsb
xor
in
add
mov
xchg
in
sub
xor
andl
mov
mov
loope
enter
mov
inc
add
cmp
jp
push
mov
xchg
in
dec
push
mov
mov
les
aad
adc
jge
mov
clc
xchg
jne
enter
add
aas
in
mov
pusha
popf
add
xor
repz
push
mov
cmp
stos
mov
stos
aam
fists
hlt
pusha
push
xchg
pushf
gs
mov
jg
insb
sub
scas
loopne
ja
xorb
adc
sbb
pushf
jg
fnstenv
lret
adc
pushf
outsl
add
cmp
mov
out
outsb
add
and
adc
pushf
int
sbb
pushf
bsr
clc
pushf
mov
sbb
or
inc
xchg
fs
cmc
pushf
inc
pop
dec
ret
adc
dec
mov
mov
xor
and
adc
lea
mov
movsb
sub
or
sub
loopne
jmp
mov
repnz
jns
cld
aas
adc
or
pop
mov
push
cltd
pushf
mov
xor
loop
mov
pushf
mov
bnd
cmp
lret
push
push
adc
pushf
lods
xchg
mov
or
mov
jno
test
das
mov
and
outsl
mov
cs
inc
pushf
int
dec
ret
ljmp
push
pop
sub
pushf
pop
sbb
jp
insl
pop
ret
data16
rclb
daa
inc
arpl
mov
mov
jno
inc
mov
in
cmp
lea
cmp
das
xchg
popf
mov
imul
lods
into
fadds
and
int3
jg
insb
daa
mov
mov
repnz
inc
pushf
insl
cmp
sub
lds
aad
pushf
cwtl
gs
loope
ss
mov
jecxz
idivl
pushf
lds
push
in
icebp
pushf
pop
mov
push
pushf
push
imul
gs
rcrl
adc
and
or
adc
pushf
leave
pop
sti
inc
flds
loop
std
repnz
jae
imul
adc
pusha
inc
sub
jmp
jecxz
pushf
add
add
imul
imul
pushf
xor
outsb
scas
mov
bound
ja
cmp
fldt
mov
mov
aas
jl
pop
aas
cli
mov
into
mov
xor
pushf
stos
dec
stc
jae
lret
fwait
push
clc
lahf
pushf
mov
xchg
adc
mov
pop
ljmp
push
dec
pop
adc
mov
jae
stc
cs
lods
repz
or
sbb
les
cmp
icebp
in
cmp
ljmp
cmc
rcll
adc
stc
adc
lock
mov
std
add
xchg
jmp
pop
lock
pushf
dec
jmp
cld
mov
mov
lea
inc
jecxz
test
inc
xor
popf
cmp
js
or
lret
pushf
and
clc
gs
and
loop
mov
cmp
cld
insl
daa
rcll
subb
outsb
mov
lret
cmpsb
test
call
rclb
and
inc
push
jno
dec
outsb
pushf
dec
flds
out
xchg
es
jo
pushf
popf
ja
test
xchg
pushf
dec
fdiv
dec
or
xchg
clc
pushf
out
movsl
lret
jp
pop
dec
add
add
mov
sbb
sub
mov
cmp
xlat
push
pushf
decb
orl
lds
loopne
mov
ljmp
mov
pusha
cmc
pushf
pop
ret
fcmovu
and
dec
jl
push
pop
gs
fisttpll
push
pushf
push
lcall
inc
shlb
xchg
mov
repz
mov
mov
add
ss
sub
add
pushf
sbb
enter
jg
pushf
lret
mov
ret
mov
inc
and
mov
inc
cmp
test
lods
mov
jo
inc
and
inc
jb
clc
or
push
inc
mov
push
xor
jl
pop
push
add
mov
add
push
push
mov
mov
jl
je,pt
scas
repnz
add
sub
cmp
mov
ja
outsb
pushf
std
inc
clc
push
xchg
and
and
fmull
or
pushf
push
lret
loope
jmp
or
or
pop
jmp
cmp
pusha
cmp
adc
inc
dec
test
gs
pushf
test
sbb
cmp
mov
outsl
inc
jno
pushf
dec
insl
incb
push
cmp
nop
pushf
push
icebp
dec
cmovle
xchg
pushf
sub
add
pushf
data16
negb
sbb
jmp
pop
jne
pushf
xchg
adc
adc
cwtl
loope
pushf
stos
sub
movsb
out
dec
push
in
imul
dec
mov
insb
outsb
inc
stos
call
push
xchg
inc
push
mov
pop
push
cli
je
jle
mov
add
std
sbb
inc
mov
pushf
adc
or
jne
push
cmp
sbb
iret
das
pushf
sbb
gs
jmp
repnz
jnp
je
or
push
test
into
add
sub
cltd
stos
xor
inc
mov
mov
in
int
test
fisubs
outsl
lcall
lock
lret
es
lret
mov
pop
cmp
sbb
fsubrs
dec
popa
xchg
lock
shlb
mov
cmpl
jo
push
cld
inc
mov
leave
lret
shr
movsb
adc
cwtl
mov
and
hlt
sub
jecxz
arpl
mov
scas
daa
jne
sub
pop
mov
sbb
pop
mov
test
daa
lret
inc
adc
pushf
or
imul
pop
mov
sahf
subb
sarl
stc
xchg
push
ss
stos
pushf
dec
jbe
pop
pop
enter
dec
lods
add
imul
lods
nop
inc
sub
sbb
clc
mov
cmpsl
dec
or
add
cmp
pushf
fldl
or
daa
pushf
out
test
xchg
jbe
iret
popa
lahf
jmp
addr16
push
mov
stc
stos
loopne
out
or
test
aas
sbb
push
movsb
mov
mov
rcrl
xor
pushf
and
pop
fsubr
jnp
mov
rcrl
or
ja
lret
fs
add
mov
xlat
dec
aad
insl
sub
cmpsb
movsb
mov
in
mov
es
ja
stos
int3
push
pop
add
xor
cmp
cmp
ficompl
ja
dec
pushf
popa
je,pt
ret
adc
push
and
sub
aad
nop
lods
lret
ja
pushf
sar
fsubs
jle
fisttpll
std
xor
lods
sbb
iret
jmp
mov
lea
rorl
pop
push
lock
lods
je
stc
ds
add
mov
xchg
inc
push
in
scas
and
mov
ljmp
mov
jo
jmp
and
cwtl
in
xchg
mov
test
clc
inc
and
sub
mov
nop
outsb
jl
pop
pushf
std
lahf
cwtl
movsl
in
and
mov
dec
and
lret
mov
repz
inc
scas
fimull
push
push
sub
pushf
ds
inc
push
ljmp
in
pop
mov
push
pop
jbe
inc
xor
clc
idiv
out
packuswb
push
aam
dec
fsubrs
lods
mov
cmp
or
jne
lds
mov
cwtl
push
movsl
xchg
pop
xchg
add
loope
clc
mov
in
lahf
in
lret
loopne
add
mov
insb
pop
imul
xor
stos
push
pushf
sub
jl
std
lock
lea
iret
or
add
lret
mov
das
fmull
shl
outsl
movsb
cli
lcall
inc
fcmovu
jp
pushf
push
mov
cs
push
jge
cmp
test
cmc
push
jo
mov
adc
dec
pushf
xor
stos
xchg
loopne
mov
xor
xchg
out
pushf
add
sub
push
inc
jecxz
mov
shll
cli
jmp
out
arpl
mov
lods
mov
cmp
scas
imul
filds
std
mov
dec
xchg
gs
pop
jecxz
and
pushf
sti
dec
or
jle
jae
or
test
int
test
incb
outsl
jnp
cmp
imul
add
cmp
mov
stos
std
xor
aas
pop
add
pushf
stc
sub
jno
mov
movsb
mov
pushf
pop
dec
iret
add
mov
or
and
imul
rcrb
scas
pop
mov
cs
fcomps
push
inc
lods
push
sub
pop
lock
insb
mov
outsb
test
mov
in
loopne
mov
hlt
das
lahf
es
jne
stos
int3
pop
pop
push
dec
into
leave
adc
mov
pushf
cltd
enter
mov
ljmp
js
orl
push
xor
out
mov
negb
pushf
scas
fisubs
jne
inc
mov
cmp
andb
test
cli
and
mov
and
sub
adc
test
mov
rcr
inc
cmpsl
pushf
ds
adc
inc
stc
negb
arpl
jp
jg
pinsrw
std
push
or
lcall
aas
ljmp
jne
mov
pop
addr16
mov
and
ret
aas
pop
xchg
lods
sbb
and
xchg
popl
insb
bound
mov
test
xchg
pop
repz
scas
xchg
cmp
add
add
fxtract
push
mov
lods
lret
xchg
dec
cmp
or
ja
sarb
cmp
mov
sub
nop
sub
jns
test
cmp
imul
sbb
ret
dec
fwait
out
mov
and
lds
testl
adc
shlb
jmp
pop
and
cmp
push
pop
lahf
pushf
or
loopne
jl
cli
add
xchg
repnz
lods
dec
push
xchg
cmp
xor
add
inc
aaa
pushf
and
es
and
lods
gs
fnsave
cwtl
adc
jle
add
mov
ret
leave
in
mov
dec
sbb
fadds
xchg
jl
icebp
aad
dec
test
inc
loope
decb
adc
xchg
and
sbb
jp
push
fmul
push
out
aad
movsb
or
cmp
pop
movsl
or
mov
pop
inc
pushf
aad
aaa
repz
mov
mov
fistps
sbb
add
jmp
js
xchg
dec
pushf
jmp
and
mov
pushf
popa
das
pop
or
or
mov
repnz
jne
pushf
push
into
or
lcall
pop
adc
and
test
mov
cmpsl
jae
xchg
sbb
fsubrl
mov
aas
adc
imul
stos
pop
jle
je
lahf
movsb
adc
cmp
shll
aad
cli
outsl
mov
loopne
out
and
in
sbb
fnstenv
rcrl
mov
cmp
pushf
mov
pusha
xor
add
jl
dec
mov
and
in
negl
xchg
dec
mov
packuswb
sbb
jbe
test
arpl
sbb
mov
and
insb
pushf
and
pop
adc
int3
and
cld
imul
mov
inc
bound
aam
cmp
push
pop
push
mov
pop
dec
pushf
insl
mov
loope
sub
mov
shrl
pushf
xor
out
cmova
pushf
clc
xor
js
scas
jmp
addb
popf
in
push
pop
pushf
ljmp
xchg
cmp
xor
sbb
test
sbbb
mov
hlt
sti
lret
adc
pop
and
push
adc
roll
repnz
insb
push
ds
movsl
mov
aad
aas
sbb
ja
scas
repnz
inc
std
sub
ljmp
mov
push
pushf
dec
es
inc
stc
movsl
dec
and
pop
pushf
dec
xlat
out
mov
ret
push
roll
inc
movsb
dec
enter
xchg
pushf
mov
cmpsl
adc
pushf
nop
outsl
push
sbb
movsl
adc
push
cmc
sbb
dec
divl
cwtl
das
leave
lcall
gs
int
mov
pushf
jns
cmp
mov
imul
test
repnz
insl
dec
pop
clc
pushf
sbb
scas
dec
and
sub
inc
push
jl
outsl
aaa
adc
mov
popl
nop
jns
outsb
jecxz
sbb
js
pop
ret
xor
addr16
ljmp
ja
mov
pop
dec
cmc
mov
clc
js
and
stos
sbb
push
int3
lods
cmpsl
gs
mov
xchg
fwait
in
pop
std
je
fdivrs
pushf
sbb
pop
movsl
dec
push
gs
and
inc
pusha
aaa
lahf
or
mov
lock
xchg
xchg
outsl
js
xor
cmp
pushf
jecxz
clc
and
push
pusha
hlt
mov
xor
orl
lock
sub
aas
mov
and
push
in
dec
pushf
adc
sub
outsb
push
push
je
dec
add
sub
push
daa
lds
fstpl
out
aas
or
dec
pop
les
dec
xor
aaa
adc
das
mov
aam
iret
lds
ficompl
push
in
xchg
andb
lcall
in
pushf
sbb
mov
test
arpl
add
mov
fmuls
mov
lahf
adc
in
inc
mov
jp
in
inc
pop
mov
dec
popf
aad
hlt
pop
xor
ljmp
mov
sub
shrl
in
jge
lds
shr
decb
ljmp
push
punpckldq
jecxz
test
cli
inc
inc
outsl
and
cld
pushf
aas
in
test
imul
es
gs
mov
out
pushf
pop
ret
fs
scas
fxtract
nop
cmp
fisubrl
pushf
pop
adcb
pushf
lds
jecxz
mov
pop
lret
push
pushf
lret
repz
aaa
jecxz
sub
inc
pushf
mov
add
insl
int3
cmpb
pushf
gs
add
and
cmp
mov
cmp
call
sbb
xchg
ret
je
lods
jmp
adc
mov
aad
pop
xchg
in
jbe
adc
jg
fidivrl
and
mov
imul
ds
mov
add
addr16
lods
mov
cmp
sbb
pushf
icebp
daa
lret
test
inc
insl
das
mov
jl
ljmp
int3
loop
dec
jecxz
icebp
scas
mov
jl
decl
pushf
cmc
dec
sbb
fisubs
or
inc
aad
pop
mov
nop
out
jbe
loope
adc
and
fprem1
mov
pushf
xchg
imul
pushf
lds
pop
mov
sub
roll
mov
pushf
mov
cmp
test
sub
add
jbe
lret
cmpl
fsubr
sarl
pop
jecxz
push
rolb
inc
push
sbb
mov
mov
in
inc
jg
push
mov
adc
mov
mov
cmc
pushf
movsb
cltd
xchg
mov
popf
jnp
adc
jne
rorl
int
das
hlt
lahf
ds
mov
xchg
pop
dec
add
mov
xchg
fiadds
push
jge
push
sbb
mov
sub
cli
das
or
jo
sub
mov
mov
fmull
cmp
push
orb
jo
insl
inc
test
cmp
or
mov
loop
cmc
aas
cmp
out
movsb
mov
loopne
xchg
lcall
push
inc
or
push
jecxz
pushf
mov
out
add
push
dec
lret
bound
inc
fcoml
and
fwait
clc
cmp
repz
mov
outsl
dec
add
xchg
pushf
popa
jp
push
ljmp
inc
pushf
lret
lcall
pushf
adc
lret
lea
pushf
jae
xor
jmp
adc
cmpsl
das
xor
pop
lock
lret
dec
call
mov
faddl
pushf
mov
lcall
jbe
out
push
bound
lret
xchg
sub
jle
sub
jne
mov
dec
dec
inc
ljmp
sub
rorb
leave
or
add
sbb
and
cmp
inc
outsl
mov
xchg
or
mov
mov
aam
scas
bound
jmp
mov
fnstsw
into
ret
dec
je
repz
inc
arpl
sbb
cmc
cs
jae
and
pushf
imul
inc
inc
iret
dec
mov
dec
test
in
cmp
pushf
inc
int
dec
xlat
rcr
xchg
pushf
cli
and
dec
leave
repz
push
xchg
mov
adc
movsb
daa
nop
stos
or
dec
aaa
mov
cld
pushf
sbbb
xor
ljmp
pop
lods
inc
pop
lods
iret
or
push
cmp
inc
mov
adc
adc
mov
inc
pushf
lret
roll
scas
je
sbb
fidivrs
iret
or
inc
fldt
pushf
lcall
popf
mov
cld
hlt
sbb
inc
cmp
sub
pushf
xchg
icebp
je
xor
test
dec
daa
test
pushf
jns
insb
in
ficomps
adc
pushf
pop
mov
rorl
pushf
test
cmp
ficomps
outsb
pop
sub
out
jecxz
lods
sbb
push
lret
lock
shrl
in
pop
and
negb
jp
test
js
jg
push
rcll
aaa
pushf
rorb
jno
int
xchg
mov
adc
mov
sbb
jp
or
add
adc
mov
pushf
jle
and
das
pushf
cmp
sub
adc
add
divb
pop
andb
xchg
and
pushf
clc
es
mov
cli
sbb
dec
dec
add
int3
pushf
rcl
add
je
mov
push
jbe
pushf
outsl
xor
xchg
pop
dec
jno
cmp
jg
mov
mov
sub
imul
add
fmuls
incl
incb
gs
inc
into
and
inc
ljmp
push
ja
inc
pushf
dec
xchg
or
subl
mov
outsb
lods
aaa
in
orl
insl
mov
ja
and
imulb
sub
cmp
pop
mov
in
aad
loope
inc
js
mov
loopne
loop
out
repnz
leave
mov
test
popa
pop
jmp
jo
std
xor
icebp
in
pop
cltd
jecxz
cmpsl
xchg
mov
inc
and
mov
pushf
hlt
or
push
and
pushf
push
jbe
mov
fdivr
add
pushf
mov
gs
jle
rcll
inc
mov
and
clc
gs
daa
pop
pushf
dec
decb
adcb
mov
pop
incb
mov
fsubp
dec
in
pushf
adc
pop
xchg
fs
add
mov
mov
insb
and
fidivs
lds
mov
in
adc
pushf
pop
adc
cmp
dec
add
lock
rcrl
mov
shlb
dec
mov
in
repnz
and
add
into
pushf
jmp
insl
add
mov
dec
ljmp
lods
inc
push
pop
xchg
out
lcall
pop
pop
leave
cmpsb
mov
rorb
pushf
sbbb
xlat
jbe
mov
pushf
add
clc
jbe
xor
lret
push
shrl
and
pushf
mov
test
or
call
jp
out
adc
jge
aas
dec
popa
inc
pop
fmull
sbb
scas
inc
scas
jnp
dec
pushf
decl
ss
ret
lds
jne
lods
shl
xchg
mov
aad
xor
sbb
orl
xor
xchg
adc
lea
mov
loopne
imul
mov
cld
enter
jge
inc
out
shrb
test
and
pushf
rclb
dec
pop
xor
arpl
mov
and
in
push
in
shl
nop
test
push
add
leave
popa
icebp
cmpsb
pushf
sbb
dec
rcrb
repnz
push
fs
xor
insl
jmp
pop
sub
add
pop
and
pop
sub
mov
out
mov
ficompl
pop
jne
pushf
and
bound
mov
lods
roll
aam
or
fisttpll
pop
ss
jge
aas
or
rcl
pushf
add
fsts
push
jo
out
test
ds
xchg
push
scas
push
aam
inc
cs
popf
xor
jne
lahf
test
cmpsl
stc
sarl
lahf
mov
in
sarl
push
stos
pop
sbb
mov
lods
or
ret
jl
cmp
mov
mov
aad
jo
in
and
fstp
jl
aas
jecxz
pop
mov
ds
jecxz
mov
mov
daa
or
push
int3
inc
ss
pop
into
dec
sbb
xor
add
aas
fnstcw
sbb
inc
sbb
jnp
mov
cmp
stos
pushf
mov
repnz
pop
pushf
dec
ljmp
inc
imul
mov
jp
test
nop
je
pop
mov
test
adc
leave
aad
sbb
jo
repz
cmp
pushf
sbb
xchg
popa
jne
jno
addr16
int3
add
jno
pushf
mov
data16
cwtl
jne
pushf
inc
nop
and
mov
pushf
sub
inc
stc
xchg
cli
push
pop
mov
or
mov
addr16
in
fs
loopne
in
cmpsl
insb
lcall
fwait
lods
pop
mov
pushf
or
clc
movsb
loope
roll
mov
mov
lds
js
int3
cmp
ja
ljmp
jno
movsl
jno
loope
or
mov
sub
into
adc
xor
lods
jne
in
cli
das
leave
jl
adc
roll
addr16
cmc
cmp
hlt
inc
fisttps
test
and
pushf
das
test
jns
ret
jle
pushf
notb
push
push
pop
daa
stos
adc
push
cmp
pushf
mov
ja
cs
mov
pop
pushf
xor
cwtl
xor
pop
pop
fistpl
sub
inc
inc
or
popl
stos
push
mov
aad
jo
jle
pushf
shr
loope
ljmp
lahf
jb
xor
or
vandps
xorb
adc
aaa
lret
arpl
addr16
shll
int3
pop
mov
mov
adc
testl
sbb
ror
mov
xchg
jno
fs
imul
iret
stos
cmp
cs
mov
push
dec
lcall
aaa
cmpsb
sub
mov
jg
pavgb
es
fldl
and
jecxz
jmp
iret
fbstp
test
xor
js
stos
xlat
arpl
mov
push
in
out
pop
fcoms
popa
aas
adc
scas
mov
lret
mov
inc
in
and
pushf
mov
jo
jg
pushf
dec
and
dec
pop
jecxz
push
lea
jae
in
dec
in
add
nop
imulb
sub
das
mov
scas
dec
pushf
lahf
mov
sbb
cmp
mov
push
jno
jl
pop
inc
in
test
add
jl
xchg
repz
pushf
sbb
lds
adc
arpl
pop
pushf
cmp
jg
inc
inc
cmp
insb
std
add
jge
int3
mov
popa
fistps
mov
mov
pushf
das
aad
mov
pushf
repnz
and
mov
push
popa
icebp
movsb
push
sarl
dec
mov
or
loopne
movl
mov
loopne
pushf
in
js
das
push
xchg
inc
ret
inc
lret
int3
add
xor
push
mov
ficompl
in
pushf
div
pop
mov
sbb
das
pushf
or
cmpsl
push
sbb
insl
pushf
ljmp
sub
cs
stos
pushf
test
rep
dec
push
cmpb
jns
ds
inc
or
inc
pushf
adc
add
adc
sbb
pushf
xor
xlat
mov
ficompl
and
mov
shll
int
mov
push
lock
hlt
nop
sbb
push
popf
aad
enter
xchg
jp
dec
mov
push
mov
cmp
xchg
dec
xor
repz
fadd
popa
add
shll
inc
cwtl
xchg
or
leave
mulb
pushf
je
int
mov
cmp
mov
rcrl
sub
out
arpl
enter
jecxz
faddl
es
in
in
mov
add
adc
dec
out
inc
sub
lock
xlat
scas
add
aas
ds
popf
adc
push
movsb
cmc
sbb
inc
xor
arpl
lret
out
pop
movsb
lock
repz
adc
or
sub
pusha
pushf
push
sbb
fnsave
pushf
fisubrl
imul
lcall
ja
ffree
sbb
aam
jl
test
movsb
xchg
push
jg
btr
adc
xorl
xchg
jne
mov
arpl
ret
mov
pop
daa
sbb
xchg
cmc
fdivr
cwtl
mov
stos
shl
mov
xor
mov
xchg
hlt
inc
lret
jno
addr16
xchg
pop
pushf
push
mov
adc
xlat
into
jecxz
xchg
jnp
movsb
out
pop
mov
mov
enter
adc
adc
and
sub
leave
jbe
aas
roll
fcoms
adc
pushf
lea
in
fnstenv
rcrl
inc
ret
gs
or
and
cmpsl
rcrl
adc
inc
pushf
pop
jnp
sub
push
outsl
pushf
std
mov
mov
pop
xchg
pushf
xor
cld
orl
adc
push
fisubs
fldcw
and
jne
sbb
adc
cmp
sbb
pushf
popa
es
jge
bound
ret
lret
adc
insl
dec
pushf
adc
enter
nop
push
popw
mov
mov
mov
dec
test
in
dec
addr16
mul
ret
sbb
inc
hlt
dec
pushf
mov
or
sub
loope
jno
mov
mov
sub
push
xchg
cmp
sbb
xchg
repz
mov
sbb
mov
pop
ret
cld
jne
adc
call
mov
jge
adc
sub
cmp
adc
mov
jl
inc
je
in
js
lock
pushf
dec
pop
dec
lds
rolb
repz
negb
ljmp
pop
sbb
xor
aad
mov
shlb
pop
jecxz
mov
adc
xorb
xchg
mov
inc
out
or
fistpll
daa
stos
sarl
incl
test
mov
push
pushf
adc
gs
pop
mov
scas
fidivrs
aas
fxch
lret
push
pop
mov
adc
pop
pushf
pop
jmp
or
push
push
gs
push
lea
cmp
xor
jo
or
xor
addr16
js
xchg
mov
ja
cmpl
adc
add
loopne
push
fistpl
xchg
inc
inc
pushf
sub
sbb
or
test
fcoms
push
lods
cmp
jle
dec
hlt
sbb
ljmp
jmp
test
pushf
mov
popa
es
scas
inc
add
pextrw
or
or
sub
or
jae
mov
ret
xor
ss
mov
pop
dec
lods
out
out
les
daa
mov
pushf
loopne
ret
dec
mov
mov
in
ljmp
dec
out
insl
push
loope
test
xor
pop
jno
pushf
repz
aaa
push
pusha
pop
addr16
ljmp
jae
adc
mov
mov
enter
fwait
and
cmp
pushf
or
push
cmc
aas
xchg
xorl
pushf
aad
jle
and
sub
ss
lret
dec
and
aad
dec
or
jecxz
das
jl
xchg
push
stos
jb
push
pushf
jg
nop
movsl
imul
mov
sbb
movups
ds
je
dec
ret
icebp
out
cli
push
aad
daa
push
movsb
mov
and
andb
mov
xchg
mov
lods
outsb
cmp
pop
dec
inc
lret
pop
pop
cmp
pushf
sbb
push
leave
xor
dec
fnstsw
mov
sub
jmp
push
in
sub
test
imul
icebp
addr16
dec
sbb
push
notl
test
cli
aas
add
mov
mov
pushf
mov
lret
pop
cwtl
popf
add
xor
daa
dec
lret
or
mov
or
adc
xor
adc
int3
push
int3
pop
cmp
fidivrl
lahf
jb
mov
pop
adc
jno
in
jl
jecxz
mov
pushf
clc
cmpsb
mov
rcrl
xchg
mov
pushf
mov
or
fidivrl
shrl
addr16
jl
dec
ret
sub
inc
push
pop
jg
jae
or
sbb
andl
cmp
xchg
xchg
cmpsb
and
xchg
mov
mov
cli
nop
insl
sti
inc
in
pop
add
fwait
inc
or
repnz
push
jecxz
push
sbb
lods
mov
outsb
cld
loopne
popf
xchg
movsb
and
cli
or
fistl
adc
cli
pop
xchg
stos
outsl
pop
in
sbb
cmp
sbb
outsl
mov
fstpl
pushf
mov
movsl
into
pop
and
xor
mov
mov
jo
mov
pushf
repz
pop
es
daa
adc
push
fildll
sbb
call
hlt
rorb
sti
lods
and
xor
pop
dec
cltd
push
or
aad
inc
fistps
fwait
pop
bound
push
repnz
inc
pop
jbe
enter
lret
in
sub
aad
mov
xor
lods
lea
out
test
nop
outsb
cmp
add
add
jge
leave
mov
lods
adc
pushf
rcll
adc
arpl
pushf
stos
stos
xchg
xor
imul
push
ja
mov
cmp
push
pushf
xor
mov
mov
dec
mov
sar
xchg
add
repz
jnp
idiv
cmp
xchg
xchg
jno
test
push
loope
rcrb
push
mov
mov
mov
int3
inc
ss
jp
and
sbbb
stos
or
outsb
icebp
out
dec
mov
les
xchg
test
cmpsb
lock
and
faddl
xchg
dec
gs
les
loope
mov
adc
or
xor
out
shll
popa
push
fldcw
mov
jo
in
sarb
out
inc
mov
inc
repz
idivl
roll
mov
xchg
rcrl
ret
aaa
std
mov
jmp
mov
ljmp
sub
sahf
push
xor
jle
inc
cmp
pushf
roll
inc
add
sub
dec
punpcklwd
push
rolb
mov
dec
fimuls
pushf
mov
imul
mov
mov
push
mov
xorl
jns
adc
lcall
pop
mov
mov
push
popf
push
mov
in
or
pop
dec
popa
adc
add
cs
movsb
insb
lods
sbb
add
mov
mov
fsubrl
xchg
ss
jae
pop
lods
lds
fisttpll
push
cld
fs
jne
pushf
in
stc
add
ljmp
cmpsl
or
stos
es
fnstenv
dec
sbb
dec
or
fs
xlat
push
fnstsw
and
push
andb
iret
mov
pop
jnp
lret
pop
cld
es
out
addb
sub
das
lahf
rcr
push
jl
xchg
outsb
push
out
mov
mov
orl
xchg
scas
dec
mov
rorl
push
lods
pop
pop
add
sbb
push
sub
push
mov
sbb
nop
sti
pushf
pop
xchg
mov
mov
cld
pop
lods
test
dec
mov
or
mov
test
es
aam
pop
or
mov
jnp
sub
adc
subb
lret
push
mov
in
sbb
test
lea
loope
mov
cmp
pushf
mov
call
rcll
test
add
xchg
pushf
mov
mov
mov
pop
ja
cmp
es
sub
sbb
xor
cs
pop
cmp
pop
enter
dec
insl
cld
insb
inc
or
xchg
repnz
or
mov
ficoml
sub
xchg
lcall
popa
andl
sub
jmp
mov
pop
xchg
inc
pop
pushf
jns
sbb
dec
mov
fidivrl
jge
add
outsb
movsb
in
out
sub
faddl
in
popf
test
clc
mov
test
int
xchg
fisttpl
mov
hlt
and
fmull
ret
or
mov
cmp
lods
clc
scas
pusha
mov
jl
int3
in
mov
fldenv
es
adc
in
mov
inc
jge
aas
mov
cwtl
xchg
cld
repnz
loope
or
in
pushf
bound
xchg
mov
sbb
dec
fs
jb
mov
sub
je
movsb
sbb
pushf
scas
orb
xor
mov
pop
pusha
insl
mov
xor
fisubrs
push
xchg
and
lods
mov
xor
pop
jg
or
pop
or
dec
bound
cmpb
fsts
adc
pop
test
pushf
stos
mov
ror
cld
pop
cltd
cmp
sti
pop
cmp
mov
dec
shl
lock
sub
push
xor
stos
popl
insl
ss
jns
nop
mov
push
in
repz
mov
rcrb
rcrl
lock
je
xor
jo
sbb
bound
roll
addr16
loope
js
pushf
jo
jge
inc
out
icebp
pop
push
xchg
push
lods
imul
leave
xchg
jecxz
orb
cmpsl
mov
xchg
inc
lcall
sub
adc
mov
jl
add
xchg
fistps
fisubs
push
pushf
roll
aas
add
ja
lret
rclb
jp
leave
ret
ret
mov
repz
xchg
dec
inc
pushf
add
xlat
push
cwtl
xchg
push
pushf
orl
or
lea
mov
add
outsl
sub
cmp
js
int
adc
cmp
iret
jg
jno
lret
cli
fdecstp
pop
dec
or
gs
jmp
cmp
lods
stos
cltd
popa
arpl
stos
mov
int3
mov
repz
mov
out
pop
pushf
imul
frstor
or
dec
dec
in
sbb
fcmove
mov
jp
inc
jne
aam
shlb
and
jg
fs
mov
pop
cmp
in
inc
pop
jno
rorb
jns
cmpsl
rol
sub
pop
inc
adc
or
or
xchg
dec
pop
mov
and
into
sti
mov
scas
leave
lock
pushf
fucom
xor
movsl
iret
jmp
push
mov
inc
icebp
stos
cmp
pushf
les
xor
pushf
mov
push
jno
sbb
pushf
adc
jbe
call
inc
dec
jne
imul
jnp
and
and
aaa
sbb
xor
ret
movsl
mov
in
mov
or
daa
and
mov
xchg
inc
cli
repz
xor
divb
int
insb
jecxz
jp
mov
enter
sbb
std
lcall
xchg
lea
js
push
out
ret
cmp
jp
mov
add
sbb
mull
rcrb
repz
arpl
mov
sbb
xchg
xchg
out
and
mov
call
gs
inc
sahf
mov
sarb
mov
fimuls
xlat
jno
mov
mov
gs
jno
mov
sbb
push
sub
fs
jnp
sbb
mov
jge
mov
in
mov
pop
pop
ret
pushf
sub
push
mov
xchg
jmp
mov
push
negl
xchg
imul
shr
pop
in
jg
jmp
or
ja
mov
lret
add
mov
jnp
pushf
int
add
sar
or
sti
cs
sbbl
xor
leave
pop
je
les
lret
add
pop
push
mov
mov
pushf
gs
adc
fwait
jb
insl
push
pop
sarl
ret
mov
incb
fnstenv
or
mov
pop
stc
mov
jbe
movb
jns
mov
xchg
mov
in
xchg
mov
sub
loope
clc
les
mov
loope
fsubl
in
lods
popa
out
cmp
push
mov
cs
loope
arpl
pushf
scas
push
xchg
add
pushf
push
shll
pop
dec
sarl
nop
cmc
inc
add
cmp
pop
leave
cmp
sti
pop
pop
sub
lods
fbld
mov
mov
lret
dec
xchg
push
rorb
pushf
into
xor
scas
mov
mov
pop
inc
lcall
scas
inc
pushf
nop
jae
lahf
dec
call
xchg
add
mov
scas
add
push
sarb
imul
push
cltd
mov
lcall
andb
fldt
imul
ja
pusha
or
jg
xor
jp
cmp
out
mov
push
inc
sbb
test
es
pop
ficomps
push
xchg
or
xor
call
sub
addr16
mov
mov
xchg
jl
pushf
or
loopne
sbb
mov
insl
inc
cmp
mov
inc
jae
repz
cmp
rcrl
fwait
mov
jo
arpl
xor
ss
fs
pop
icebp
cmpsb
xor
sbb
pop
and
pushf
cmp
in
inc
jmp
test
sbb
sbb
jns
pushf
jo
push
jb
add
cltd
mov
out
inc
sbb
or
mov
pushf
sub
xchg
mov
jno
and
pushf
mov
incl
cmp
adc
lret
dec
fnstenv
xor
enter
jmp
mov
sarb
out
dec
dec
jbe
mov
or
cmp
adc
pushf
add
divl
pushf
mov
movl
cmp
int
push
test
lahf
mov
push
je
pushf
pop
imul
pop
mov
adc
mov
sti
push
inc
cmp
inc
jmp
dec
cmp
dec
fstpl
js
inc
sub
out
xorl
jp
ljmp
std
pop
test
imul
inc
or
cmp
in
lcall
int3
pop
push
repz
rcll
outsl
mov
or
add
jge
repz
mov
aas
and
xchg
mov
out
dec
add
pushf
xlat
adc
and
fiadds
gs
bound
mov
imul
or
stos
fiaddl
pop
push
insb
pushf
andb
xor
adc
repz
pop
push
lds
adc
pop
pop
or
adc
mov
adc
xchg
and
cmpsb
mov
jle
pushf
adc
cmp
repnz
in
or
mov
and
jp
dec
incb
pop
ficoml
mov
mov
and
pop
gs
stos
and
add
sarb
jl
sti
push
mov
fdivrl
in
xor
in
jnp
js
mov
mov
ret
push
icebp
pushf
dec
shl
jno
mov
pushf
lret
pop
jo
xchg
daa
push
jae
sub
ds
insl
loope
jnp
push
adc
pushf
pop
push
adc
and
jns
cld
scas
mov
push
lods
mov
lret
sub
fs
out
xchg
cltd
test
dec
incl
pushf
jo
iret
xchg
sub
pushf
sbb
int
loop
fs
xor
xchg
jno
fisubs
push
mov
ljmp
cltd
xchg
jae
cwtl
pop
cmp
pushl
jle
push
and
movq
aad
or
sbb
push
test
pushf
xchg
arpl
pop
fsub
int3
mov
and
cltd
or
fucomp
dec
mov
js
fisttpl
lds
lods
dec
popf
pushf
mov
sbb
xor
add
pushf
popa
imulb
lahf
sahf
call
mov
addr16
jp
fistl
pop
pop
cwtl
es
stos
add
push
cltd
scas
add
out
or
sbb
mov
mov
leave
sub
outsl
movsb
aaa
adc
out
inc
divl
fsts
mov
or
pusha
xor
xor
or
mov
xchg
out
pushf
loopne
or
adc
movsb
cs
mov
rcrl
jbe
or
sti
pushf
dec
std
inc
icebp
aas
shrb
push
jl
push
pop
xchg
jecxz
pushf
pop
and
jno
ficomps
pop
aas
lea
add
xor
mov
cmp
test
push
cltd
mov
xlat
fcoml
das
mov
sbbl
push
pushf
fdivs
add
stc
push
lods
sar
sbbl
add
jecxz
insb
lods
mov
rcll
aaa
shl
push
xchg
sub
xchg
dec
sbb
mov
dec
ss
add
pop
hlt
and
sub
outsb
fcomp
jmp
clc
xchg
lods
xchg
stos
test
lods
shll
pushf
jnp
rcrl
xor
xor
movsb
pushf
nop
es
out
sarb
repz
sbb
pushf
add
sub
imul
ss
mov
aas
test
call
fidivrl
pushf
dec
incl
and
mov
pushf
hlt
mov
xor
lods
add
push
inc
and
pushf
jp
notl
jne
push
xchg
js
xchg
sub
push
test
dec
push
pop
andl
stc
push
or
daa
adc
lcall
xchg
dec
orb
adc
xchg
xor
test
pop
mov
mov
fwait
inc
fisubs
test
pop
movsb
pop
dec
or
sbb
fimuls
push
in
negl
dec
fstpt
sti
imul
mov
shll
cltd
ret
mov
icebp
cmp
mov
mov
cmp
inc
fdivl
inc
adc
idivl
inc
shrb
dec
pushf
imul
sub
pushf
push
insl
xchg
xchg
mov
fstpt
pushf
and
jge
pop
and
mov
cld
pop
pushf
daa
xor
jle
push
adc
cld
pushf
add
stos
ljmp
rcrl
les
pop
ss
cld
add
insb
adc
or
xchg
jns
lea
mov
rorl
cwtl
in
cld
orl
in
add
pushf
fsts
dec
or
arpl
pushf
sbb
sbb
and
mov
push
and
sti
fdivr
xchg
cmpl
clc
mov
ficompl
cs
fucomip
movsl
pushf
in
stos
rorl
fstpl
mov
xchg
sub
and
mov
jg
jmp
cmp
push
push
mov
mov
pop
lods
mov
jp
stc
lea
das
sqrtps
and
pop
adc
jne
cs
push
cmp
xor
out
sbb
nop
test
bound
arpl
daa
lods
int3
add
dec
pushf
stc
xchg
mov
xchg
push
xor
mov
fsub
dec
push
jl
inc
xor
stos
pop
rep
inc
pushf
mov
gs
testb
mov
fidivs
mov
mov
jns
add
cmpsb
mov
dec
and
out
std
not
cmp
das
pushf
fsts
jo
out
or
or
test
fs
pushf
sbb
pusha
pushf
dec
movsl
mov
mov
mov
mov
cld
cwtl
jp
pop
cmpb
jo
adc
jnp
lret
mov
cmp
ljmp
inc
ja
sub
pop
mov
xchg
dec
pushf
xor
lea
movl
imul
push
in
mov
xchg
sbb
add
popa
mov
and
mov
pop
cmp
lods
push
cs
pop
jp
std
pop
data16
and
pop
jno
out
lea
adc
adc
fisttpl
int
push
in
pop
negb
lds
icebp
es
inc
jge
xor
dec
mov
jmp
or
aam
add
outsl
inc
mov
test
int3
dec
add
pushf
push
out
or
push
lods
neg
repz
sbb
pushf
cmpb
sbb
cmc
dec
sar
insb
add
jno
sbb
popf
aad
lret
sarl
jnp
cmp
cmp
orl
mov
or
cmp
aaa
adc
xchg
cmp
dec
push
mov
dec
adc
or
das
fwait
dec
lods
mov
jne
sbb
lock
test
and
cmp
aas
sub
dec
dec
movsb
call
lahf
outsb
inc
adc
nop
lock
inc
fsubrl
jb
mov
pop
xchg
pop
dec
cmp
jmp
popf
mov
pop
xor
call
dec
popf
adc
lahf
add
jns
mov
scas
cmp
icebp
daa
shl
pop
mov
clc
pop
dec
pushf
or
adc
or
aad
cwtl
int3
das
mov
fisttpll
pushf
add
fisubrl
pushf
rcll
jecxz
pusha
ds
xor
aad
lds
jno
jmp
pushf
insl
xchg
xchg
test
je
or
adc
sub
mov
inc
push
inc
or
pushf
jne
enter
add
test
cmc
sub
rorl
mov
pop
test
sbb
jg
andb
pop
rclb
add
pushf
lds
push
pushf
nop
add
pop
dec
jmp
jmp
add
dec
out
jb
ficoms
sub
jbe
jno
pop
out
pushf
insb
outsl
pop
fucomi
cmp
dec
fists
mov
movsb
inc
cltd
jl
or
sbb
scas
pushf
pop
pop
dec
xchg
int3
flds
popl
mov
xchg
xchg
aaa
cmp
pop
mov
mov
inc
sub
sub
xor
push
mov
sub
popf
sbb
sbb
in
fadd
daa
mov
mov
add
xor
fadd
mov
sbb
xor
mov
mov
xor
pushf
test
pop
repz
and
mov
sub
jge
arpl
add
push
mov
jmp
push
xor
add
scas
adc
mov
in
ds
mov
les
mov
aas
xor
test
mov
sub
mov
cld
subb
lret
adc
cmp
daa
dec
xor
das
jge
push
sbb
push
pop
movsb
or
repz
push
cli
cmpsb
mov
inc
sub
pop
jo
jns
adc
sbb
jne
adc
xchg
adc
in
adc
pushf
in
iret
mov
mov
lock
push
lods
dec
mov
sbb
lock
sub
hlt
sbb
ljmp
xchg
jno
pushf
mov
dec
mov
stc
je
fs
std
subl
mov
stos
cmpsl
and
pop
jnp
push
das
sar
xchg
pushf
and
cmp
pushf
fisubrs
outsl
ret
fldl
es
mov
mov
pop
pushf
das
out
scas
leave
es
jge
push
mov
and
insl
pushf
or
jb
sbb
inc
pushf
es
rcll
stos
aad
fnstenv
mov
pop
cli
pop
or
hlt
in
jl
push
adc
call
jns
push
cld
xchg
mov
scas
sub
ret
cmp
mov
xor
pusha
inc
scas
sub
or
jmp
mov
sbb
jno
cltd
inc
ja
jl
jne
sbb
pushf
mov
ret
ljmp
xchg
adc
sub
jle
pushf
gs
jne
call
adc
or
sti
push
shll
movsb
in
sub
add
dec
cld
ficompl
pop
cmc
es
dec
mulb
jo
cmpsl
shl
sub
cmp
add
dec
repnz
xor
inc
stc
pushf
push
and
inc
jl
lcall
pop
sbb
pushf
enter
inc
cmpsl
xor
sbb
mov
imul
int
leave
ja
ret
jge
cwtl
push
popl
sbb
push
ret
sub
fildll
test
pop
pop
mov
push
dec
adc
dec
cmp
mov
sbb
xchg
add
daa
test
push
xchg
in
cltd
jl
mov
sarl
sbb
xor
mov
cmp
cmp
scas
inc
pop
sbb
insl
mov
mov
pop
push
out
popa
movsl
rorb
mov
add
stc
lods
push
test
lret
out
loope
in
push
test
lea
mov
pop
pushf
dec
fimuls
cs
mov
jmp
adc
inc
sub
rcrl
and
out
or
xchg
pushf
lret
fstpt
or
test
push
lods
stos
jmp
jl
pop
sub
movsb
sub
add
rorl
stos
std
mov
cmp
mov
or
shll
test
rcrl
xchg
stc
rcrb
fldt
test
movsb
push
xor
pop
mov
adc
pushf
das
gs
xor
or
call
cmp
icebp
andb
mov
cwtl
popf
mov
xchg
mov
xor
clc
sahf
mov
pushf
mov
sub
into
js
mov
leave
pushf
iret
out
bound
pop
rcrl
incl
stos
mov
cld
pop
jb
push
into
sysexit
mov
fidivrl
or
lods
pop
ja
loope
sub
hlt
imul
movsb
push
insb
pop
jnp
add
insl
jg
outsb
xor
mov
or
sbb
daa
pop
jecxz
cmp
test
xchg
les
cmp
test
sbb
cmp
insl
pop
aad
pop
mov
sbb
pop
shrb
sbb
add
cwtl
inc
andl
xor
jae
cmpsl
popf
jle
push
jo
xchg
sub
data16
fadds
jmp
mov
shll
adc
jns
dec
and
call
aad
nop
xchg
mov
ficoms
movsl
push
jge
push
lret
imul
dec
jmp
sbb
sub
jbe
xchg
sub
es
and
push
mov
push
pop
leave
dec
nopl
jmp
pushf
loope
or
pushf
push
jecxz
jns
add
das
mov
incl
pop
push
mov
inc
xchg
mov
clc
jo
jge
ficomps
rcrl
ja
sbb
ds
popa
fisttps
sub
jne
inc
pushf
cwtl
imul
cltd
inc
lahf
mov
daa
pop
mov
pop
mov
jns
ret
cmp
mov
rclb
lcall
pushf
dec
and
sbbb
xchg
and
jns
cwtl
xchg
mov
cli
jmp
arpl
lods
mov
push
sub
sub
cld
jae
jl
int3
jge
lods
cmpsb
push
stc
push
lock
out
pushf
mov
and
mov
lods
pushf
daa
leave
movsl
call
popf
dec
mov
in
stc
test
clc
ret
adc
and
jmp
cld
arpl
add
movsl
pop
repnz
push
cmpsb
rcrl
dec
cmpsl
jecxz
ror
outsb
daa
push
push
movsb
subl
and
jns
jle
xor
in
dec
in
loopne
pushf
aaa
mov
mov
xchg
mov
xchg
mov
mov
mov
rol
pushf
inc
cmc
ss
or
or
test
xor
cmpsl
lods
pop
ss
cmpsb
add
in
or
push
mov
aam
cmp
inc
and
mov
imul
xchg
pushf
call
pop
in
daa
pushf
sbb
or
ja
pushf
leave
fwait
repnz
cmc
mov
and
xchg
loop
test
or
mov
out
int
inc
pushf
repz
stos
cmp
fists
push
ror
setl
adc
mov
dec
pushf
pop
jae
jmp
cltd
ja
pushf
xchg
xlat
pushf
xrelease
stos
mov
xchg
cmp
js
lret
xchg
jns
xchg
sbb
mov
xchg
dec
or
inc
aaa
mov
cmp
jge
outsb
add
sbbl
xchg
nop
adcb
daa
mov
gs
lcall
jg
cmp
mov
mov
mov
addr16
inc
xchg
aad
aaa
loop
in
mov
mov
in
dec
lods
inc
popa
push
push
in
lock
ljmp
push
push
ret
sbb
lock
sub
hlt
push
jle
xor
xchg
mov
shl
push
bound
ss
sbb
xor
out
mov
push
xchg
jle
sub
aam
pushfw
jne
int3
in
test
frstor
mov
minps
pushf
loope
sub
xchg
loopne
repz
jmp
push
jecxz
idivl
adc
les
out
pushf
out
icebp
mov
mov
push
pushf
notl
pop
repnz
pop
add
xchg
jbe
adc
out
call
jae
pop
sbb
or
sbb
pop
adc
test
pushf
ret
or
iret
xor
pushf
nop
push
pop
cmc
out
stc
mov
insl
pop
lret
mov
mov
cltd
inc
pop
jmp
fdiv
push
cmp
adc
sbb
lret
pushf
sbb
out
dec
out
adc
inc
subl
rclb
movsb
fnstenv
test
xchg
je
daa
jp
pop
pop
pushf
orl
shlb
mov
jp
mov
shr
or
mov
inc
or
aaa
aam
lods
clc
mov
sbb
push
and
pop
dec
sahf
lret
mov
jg
mov
daa
push
xor
jle
mov
jns
add
inc
ds
repz
ds
lret
shll
fdiv
mov
xchg
rcll
in
and
push
insb
and
pushf
and
push
lret
jne
lock
pushf
add
fucom
mov
stos
icebp
popa
jno
pop
mulb
cmp
loop
cmpsb
in
pop
dec
cli
das
pushf
nop
push
fs
fistpll
jmp
mov
adc
aad
cmp
ret
push
cmp
pushf
inc
sahf
test
xchg
or
jg
add
pushf
popa
shrb
push
pop
or
aad
push
mov
adc
jae
jl
pop
sbb
std
fsubrs
repz
add
jge
sub
cmp
mov
sbb
cli
or
pop
mov
in
pop
jl
adc
repnz
and
mov
mov
inc
stc
lahf
mov
xchg
xchg
shl
enter
cmpsb
mov
mov
in
lock
mov
jecxz
lret
mov
rolb
or
adc
pushf
push
lahf
mov
int3
popa
enter
xlat
or
js
cmp
sbb
jl
dec
fstpl
mov
ljmp
dec
add
les
lahf
mov
in
push
pushf
ljmp
or
mov
mov
cld
inc
jns
ja
ret
push
xor
aam
adc
pop
mov
add
in
add
mov
sub
xor
sti
lods
push
mov
rcr
jnp
daa
shlb
xchg
jno
shlb
stc
mov
pop
lods
add
cli
sbb
jno
cmpb
ret
pushf
adc
jl
jnp
lret
xchg
lret
daa
pop
mov
add
or
pushf
mov
ljmp
ja
aam
push
inc
das
cmpl
cli
xor
jp
shll
or
icebp
xchg
insl
mov
push
nop
out
aaa
sbbb
xchg
adc
imul
push
fs
jmp
jbe
aas
xor
mov
cmp
inc
cmp
arpl
mov
out
pushf
add
fdivrl
std
pop
and
clc
fldl
bound
cmp
pushf
sar
cmp
adc
xor
into
sbb
sub
sbb
ret
popf
push
adc
xor
ljmp
repz
ds
test
dec
adc
mov
addr16
les
leave
outsb
add
test
ret
mov
test
jl
jns
lret
in
mov
lret
loop
jle
push
icebp
out
and
rorl
xchg
test
fstpl
rol
adc
dec
xchg
stos
pushf
sbb
dec
lcall
or
push
cvtdq2ps
pop
or
jae
jge
aas
pushf
das
jle
add
pushf
push
std
aas
arpl
lods
fcoms
outsb
adc
dec
in
stc
mov
pushf
fs
cltd
and
roll
pushf
pop
push
jb
popf
fldenv
push
push
jns
lods
int3
sbb
or
dec
js
imul
das
mov
adc
fwait
movsb
xchg
cli
push
cmp
xor
and
xchg
pop
jmp
dec
aad
add
arpl
inc
pause
jnp
inc
scas
lods
sbb
xchg
or
cmp
xchg
cmpsb
pop
dec
mov
adc
daa
pop
negb
mov
shr
add
mov
xchg
dec
mov
movsb
fstl
stos
dec
shl
in
call
and
test
insb
sbb
mov
pop
mov
pop
sbb
pushf
int3
test
dec
loope
ror
out
movsb
dec
in
xchg
push
add
jl
icebp
dec
test
insl
stos
scas
xor
es
xchg
xchg
gs
pop
sub
mov
imul
push
test
aaa
or
rcrl
push
sub
add
daa
dec
aad
addb
pushf
das
adc
jecxz
sub
or
dec
xchg
scas
stc
aad
push
or
fs
jecxz
lods
mov
add
js
insb
cmc
pushf
iret
sbb
adc
mov
add
jl
mov
pushf
mov
inc
lret
cmp
xchg
adcb
popf
and
or
fdivr
jl
lds
cmpsl
popf
je
scas
shlb
mov
mov
or
lahf
call
hlt
dec
es
jbe
and
test
jbe
leave
repz
cltd
jne
pushf
ja
adc
jnp
cld
jle
mov
stos
cmpsb
mov
dec
rcrl
or
push
cwtl
inc
lret
ljmp
repnz
xchg
pop
insb
dec
mov
test
push
sbb
stos
sbb
repnz
fstpt
or
cmp
push
in
mov
mov
sbb
push
cmp
inc
pushf
xchg
lahf
xor
das
pushf
addl
js
jl
inc
or
lock
xchg
pop
push
mov
pop
mov
jno
ja
add
cmp
je
dec
pop
imul
mov
inc
pop
sub
mov
adc
jmp
pop
xchg
push
push
lods
outsb
popa
push
xorl
cmp
adc
mov
out
dec
fmulp
mov
and
and
loop
fcoml
adc
add
pushf
push
mov
xchg
pushf
adc
xor
pushf
push
movsl
nop
outsb
push
jmp
ret
in
pop
inc
mov
add
stos
fidivl
sbbb
aas
daa
xchg
pushf
mov
repz
lcall
mov
scas
sbb
ficomps
add
pushf
fnclex
pop
rorl
popa
imul
iret
popl
stc
enter
bound
xlat
mov
dec
pop
jp
nop
inc
mov
jno
adc
pushf
incl
cwtl
adc
lret
xor
sarb
and
scas
fnstenv
imul
push
mull
xchg
test
imul
lods
xchg
or
stos
mov
xor
jne
sbb
pop
mov
scas
lods
dec
mov
mov
xor
add
loop
icebp
push
movsl
or
jns
and
loop
adc
push
mov
insl
in
cmovl
movsb
enter
and
pop
insb
and
adc
sub
push
movsb
inc
jmp
adc
pushf
cmp
and
out
dec
sar
loop
out
push
pop
mov
xchg
loope
sub
repz
fxrstor
jl
inc
stos
mov
lret
les
popl
sbb
fisubl
iret
aaa
push
push
insl
and
outsl
cmpsb
pushf
jnp
xlat
sub
rcrl
fists
jno
or
mov
or
cmp
shrb
bound
sbb
dec
pushf
dec
mov
test
cltd
xchg
xchg
ret
inc
addl
std
sub
xor
scas
out
in
mov
cs
add
ds
sbb
dec
cmp
and
pop
adc
loop
adc
insw
in
jge
test
sub
jle
mov
in
mov
es
push
outsl
mov
jns
sarl
pushf
icebp
rol
push
cmc
xor
xchg
jno
lea
rol
test
push
jmp
dec
mov
xchg
adc
mov
mov
test
scas
jg
or
mov
dec
pop
out
mov
xorl
std
pop
inc
mov
add
jp
xor
jne
fistpl
add
inc
daa
pop
idivl
add
mov
pop
or
andb
ret
mov
and
int
outsl
pop
cmpsb
lea
pop
fstpl
mov
xor
add
fidivrl
and
xchg
int3
andl
addb
push
outsb
xchg
mov
and
mov
sub
aas
cmp
and
mov
pop
aam
fdivrp
pop
mov
push
aad
std
jmp
aaa
xorl
jne
xor
lcall
cmp
cli
mov
mov
movsb
movsb
xor
pushf
xor
nop
outsb
and
je
loope
add
into
test
cli
mov
lock
test
pushf
lret
add
mov
jmp
dec
iret
and
jmp
in
jb
inc
mov
xchg
out
push
and
dec
lods
out
call
pushf
xor
lcall
addr16
xchg
imul
js
in
clc
in
jl
mov
sbb
ds
outsl
adc
leave
fnclex
stos
lods
lea
xor
stos
cld
dec
sub
mov
dec
adc
adc
sub
or
sbb
mov
xchg
gs
mov
mov
pop
popf
or
sbb
xor
roll
mov
repz
xor
xor
sahf
xchg
or
scas
mov
stos
ret
dec
add
dec
sbb
scas
mov
fucom
xor
mov
out
mov
imul
mov
cmovae
fildll
pushf
mov
adc
std
loop
idiv
mov
scas
inc
loope
cld
jmp
jecxz
test
ljmp
daa
xor
sbb
pop
pop
repz
orb
xorl
pop
sbb
mov
push
and
subb
add
xchg
lods
add
loop
xchg
mov
xrelease
inc
lds
or
rcrl
test
mov
xchg
and
add
cmpsl
sti
sub
add
sahf
loopne
shlb
sbb
inc
daa
add
cs
jle
xchg
mov
pop
mov
push
mov
lods
mov
das
repz
fdivr
mov
and
out
dec
sbb
mov
add
pushf
sub
fidivs
or
pop
ljmp
bound
xchg
xchg
pushf
push
in
les
rcrl
mull
rorl
mov
fisttps
xchg
mov
rcrw
cltd
pushf
xor
dec
stos
push
lock
add
sarl
mov
jb
movsb
adc
pop
outsb
dec
sbb
xchg
jge
mov
jl
inc
cmp
xlat
jno
sbb
scas
aas
jecxz
popa
scas
rcll
mov
ret
pushf
mov
jecxz
daa
into
clc
jl
adc
out
push
lret
jmp
or
test
insb
xchg
xlat
insl
cmp
adc
and
add
or
mov
mov
inc
repz
or
add
dec
dec
push
test
fidivrs
jo
outsl
test
and
dec
in
stc
lret
push
pop
out
push
jnp
push
outsl
dec
lret
and
sbb
inc
mov
out
mov
pushf
push
adc
pushf
fdivp
adc
decb
jge
rcrb
icebp
add
pushf
insb
adc
adc
aaa
inc
enter
dec
mov
xor
mov
jmp
cmp
popf
or
ja
add
sahf
push
mov
pop
inc
and
pop
cld
ret
stc
cli
cmc
fucomi
xchg
or
in
and
push
cmp
push
lods
jnp
xor
nop
in
adc
data16
je
add
jno
mov
mov
xor
pop
dec
aaa
pushf
jb
push
imul
jp
add
or
std
arpl
std
inc
adc
pushf
dec
aad
les
xor
dec
mov
movsb
iret
sub
rcrb
inc
ficoms
pop
sbb
jle
addr16
std
mov
jle
mov
mov
jae
pop
lods
out
inc
or
lahf
movsb
xchg
out
pushf
bound
cwtl
xor
fistps
push
nop
gs
aas
orb
inc
dec
clc
mov
push
cmc
pushf
inc
pop
xchg
addr16
icebp
pop
add
pop
shrb
in
or
ja
imul
mov
jge
dec
orps
frstor
js
jle
fcoms
mov
mov
loope
loopne
jl
outsl
xor
stos
pop
and
popf
aas
pushf
in
mov
adc
cld
xor
xor
sub
dec
push
sbb
scas
inc
int3
icebp
aam
lahf
mov
pop
cmpb
xchg
movsl
stos
and
test
int
lret
loop
pop
add
or
stos
mov
xchg
adc
jl
sti
es
scas
shl
pusha
daa
lea
pop
fisttps
cmp
add
jmp
loop
push
hlt
in
push
incb
sub
inc
or
ret
jge
divps
jb
push
hlt
aas
pushf
iret
mov
xchg
sbb
sti
pop
pushf
pop
sbb
sub
xorl
xchg
mov
ret
outsb
and
loop
cmc
cmp
add
addr16
adc
lods
aad
add
jo
ret
cld
repnz
divl
xor
stos
pushf
xor
adc
push
jmp
sub
notl
mov
or
fs
std
and
sbb
sub
sti
inc
or
pop
lock
pushf
adc
jp
fidivrs
jle
sub
popf
pop
into
ret
rolb
cltd
stos
dec
insl
fs
repz
nop
jp
sub
pop
test
je
iret
jge
push
in
add
stos
xchg
popf
sbb
ss
fwait
mov
aam
movsl
mov
mov
cmpsb
lock
lret
scas
pop
mov
pushf
icebp
inc
mov
aas
out
stc
pushf
mov
xchg
insb
dec
fildll
jns
pop
add
cmp
jns
ja
pushf
adc
pop
push
adc
aas
addr16
or
lcall
mov
or
cmp
pop
call
add
pushf
dec
aam
into
jecxz
aaa
sbb
ficompl
push
repz
movsb
sbb
mov
dec
mulb
cltd
xchg
pop
ds
push
xchg
pushf
stos
lock
sahf
add
xchg
sub
dec
xor
sti
fs
shlb
add
mov
inc
addr16
push
sbb
mov
mov
shlb
ret
scas
push
aam
lods
mov
or
xor
xchg
push
xor
fldl
push
mov
leave
fildll
shr
mov
lret
dec
loopne
fisttpl
flds
pushf
nop
cmpsb
adc
inc
cmc
add
pushf
xor
incb
imul
ret
ljmp
mov
adc
cltd
frstor
push
ljmp
negl
adc
imul
bound
cmpsl
sbb
cmp
pushf
or
xlat
sub
decb
jl
mov
xchg
dec
rorl
jmp
xchg
cld
push
clc
out
outsl
push
mov
and
inc
aaa
push
pop
mov
mov
pop
mov
insl
mov
cmp
mov
out
or
mov
aam
mov
jge
dec
push
cmpb
lret
mov
and
xor
lods
sub
pushf
push
mov
cmpsb
pushf
fs
out
loop
xor
pop
aas
in
icebp
xchg
or
inc
pushf
adc
jbe
gs
scas
test
out
inc
adc
out
ljmp
mov
sbb
std
cmpsl
stos
fcoml
mov
inc
pop
lods
ljmp
sarb
adc
jmp
mov
adc
lods
pop
sbb
jle
and
push
shrb
inc
pushf
cmp
aas
or
pushf
xchg
addr16
push
loopne
pop
mov
jle
ss
or
mov
add
outsl
mov
scas
mov
inc
or
fstpt
outsl
mov
inc
xchg
mov
rcrb
xor
sbb
adc
jb
pushf
sbb
nop
mov
dec
push
pushf
ficomps
sub
and
sarl
xor
cmpsb
mov
mov
cli
movsl
jl
mov
gs
ret
stos
sub
jge
cmpsl
dec
push
mull
jmp
lea
mov
or
das
inc
adc
pushf
ja
xchg
addb
notl
mov
sbb
stos
pushf
mov
hlt
dec
incb
lret
enter
add
mov
mov
cltd
call
imul
adc
sub
xlat
mov
adc
pushf
movl
or
fsubl
sub
aaa
hlt
int
test
or
sbb
ret
and
mov
pop
js
mov
pop
popf
sbb
mov
jno
xchg
pushf
or
enter
out
push
pushf
gs
fwait
notl
shl
pushf
outsl
mov
inc
cmc
pushf
and
bt
push
fnstenv
pop
rcrl
adc
add
push
mov
stos
pushf
in
inc
std
bound
clc
je
jecxz
imul
cmpb
js
xchg
popa
movsb
push
std
hlt
inc
and
in
cld
fwait
and
lods
cltd
push
je
add
mov
mov
shrl
fnstenv
pop
mov
gs
imul
stc
jbe
repnz
nop
mov
sbb
add
jne
in
rcrb
add
add
mov
stos
sbb
dec
fstpl
shll
fiadds
xor
imulb
fwait
mov
loop
test
xor
pushf
xchg
jmp
xor
fstl
push
jne
push
add
sti
sbb
clc
push
in
lcall
enter
adc
insb
jge
jp
mov
aam
pushf
jg
outsb
and
pop
dec
loop
ja
bound
xchg
outsl
andl
incb
mov
push
inc
negl
dec
jbe
or
mov
sub
xor
mov
cli
movsl
dec
lcall
push
clc
aas
sbb
scas
loopne
cmp
lods
xchg
xchg
outsl
sub
test
inc
fucom
sub
dec
pushf
ds
add
mov
dec
cmp
sub
push
in
arpl
cs
gs
popf
mov
mov
leave
mov
rcr
daa
icebp
pop
push
loope
add
lret
jae
mov
push
or
mov
jae
pop
pushf
bound
repz
jle
inc
add
fistpl
pop
mov
fstps
pop
repnz
mov
shr
scas
add
cwtl
mov
pop
inc
jmp
scas
bsr
notl
cltd
mov
das
jnp
jle
push
xor
add
lods
ds
cmp
sub
lret
mov
jl
sbb
lahf
xchg
push
add
orl
xchg
and
xor
dec
iret
pop
testb
and
or
das
inc
adc
xchg
pop
xchg
jo
nop
adc
aas
pop
add
mov
lods
pop
not
jmp
sbb
pushf
cmpsl
shrl
xchg
js
decb
xchg
std
rorl
outsb
sbb
inc
cld
lcall
pushf
add
or
das
cmp
xadd
mov
insl
and
iret
fdivs
push
mov
out
pop
mov
insl
cld
add
out
pop
sbb
scas
inc
lods
std
or
popf
pop
cmp
or
adc
pushf
dec
add
jecxz
or
jge
out
mov
mov
dec
cmp
xor
push
sub
movsl
cmp
jns,pt
and
push
or
push
je
mov
fidivl
pop
fistpll
mov
cld
xchg
insl
cmp
or
push
aad
movsb
sub
mov
push
or
inc
cltd
mov
cmpsb
xor
inc
std
xchg
lahf
stos
fstpt
sub
int3
mov
aas
xorl
rcrl
mov
mov
adc
aad
adc
xchg
pushf
xor
lea
test
outsl
ret
jl
lret
aas
mov
stos
std
jg
pushf
test
inc
loope
sbbl
hlt
xchg
es
in
rcr
stos
imul
inc
push
push
xchg
fstps
mov
sbb
scas
dec
jge
mov
jbe
jne
fcompl
ds
mov
sub
cmp
les
int
fstps
adc
cmpsl
int3
jp
pushf
adc
inc
and
std
push
pop
stos
imul
ljmp
jmp
inc
xor
xlat
jne
lcall
imul
imul
cmpsb
jbe
xchg
dec
inc
cmpl
ljmp
jae
mov
leave
nop
and
add
pushf
and
das
inc
pop
jae
call
mov
stos
arpl
and
mov
sbb
imul
jmp
dec
hlt
jecxz
mov
cli
xor
mov
mov
fcoms
jo
mov
movsb
leave
pop
ds
push
test
mov
push
pushf
loope
int3
out
insl
pop
repz
pop
push
inc
cmp
mov
jl
adc
mov
out
lds
dec
mov
xor
aad
inc
add
rep
lods
fdivrl
mov
dec
mov
pushf
loop
push
ljmp
mov
adcl
shll
fldcw
push
pushf
push
mov
pop
xchg
xchg
test
pop
pop
cmp
inc
xchg
mov
or
addb
mov
jb
sbb
fmull
ljmp
or
lret
dec
pushf
cmpb
jmp
dec
add
and
pushf
add
jl
out
inc
adc
mov
pushf
call
push
insl
pushf
inc
adc
out
inc
or
add
stos
xchg
je
sub
pop
jae
xor
sbb
mov
cwtl
sbb
mov
dec
mov
cli
cmp
mov
xchg
and
das
add
repnz
adc
xchg
insl
pushf
inc
popf
jmp
fstpt
testl
jo
inc
mov
dec
mov
mov
jl
out
fdivrl
cli
jns
push
cmp
push
and
out
xor
pop
mov
nop
movsb
pop
int3
jp
pushf
mov
ret
mov
pop
mov
in
pushf
pop
inc
in
push
xorb
add
lret
fisttpll
mov
mov
jecxz
sub
pop
mov
or
sub
xchg
popa
rorl
dec
jmp
ljmp
imul
add
jmp
std
cwtl
inc
pop
shrl
ljmp
adc
xchg
mov
add
jl
xor
cli
push
loope
xchg
repnz
scas
cmp
pop
mov
push
xor
lods
aaa
mov
mov
mov
fdivs
cmp
inc
sub
pop
daa
sbb
xchg
das
xor
sub
pop
outsl
mov
fs
mov
cmp
cmpb
in
loope
in
push
int
push
mov
or
pop
mov
xor
and
mov
mov
rolb
in
aad
fcomps
aas
jle
pushf
sub
adc
push
icebp
ds
sahf
aas
xchg
stos
aad
cs
mov
out
adc
adc
stos
mov
jae
in
fbstp
scas
imul
adc
mov
ds
mov
pop
imul
in
xor
stc
ja
stos
pushf
sub
pop
sbb
mov
add
jo
std
and
in
sarb
paddq
lcall
outsb
xor
jl
ja
xor
push
cmp
mov
pop
mov
dec
mov
pushf
push
shlb
clc
iret
es
mov
lods
push
leave
jl
jne
ror
sbb
add
pushf
xchg
scas
cwtl
div
inc
adc
push
jmp
loop
xchg
xchg
pushf
mov
lahf
stos
test
sub
jge
jae
cmp
pushf
mov
repnz
mov
xor
lea
or
scas
aam
dec
sub
ja
jl
cmp
cmp
jb
scas
pushf
int3
pop
jo
add
inc
mull
pushf
push
pop
push
adc
mov
mov
test
or
jle
jle
xchg
bound
pop
mov
ds
cmp
jge
in
clc
sarb
shr
pop
cmc
fwait
int3
imul
loope
test
dec
pop
leave
jmp
dec
jl
cmp
push
mov
mov
cmp
or
dec
jl
inc
out
adc
xchg
nop
mov
pushf
or
out
add
sbb
mov
rol
xchg
jno
decl
or
push
adc
mov
cmp
adc
in
mov
cld
push
adc
xchg
jge
rcrb
mov
enter
jnp
xchg
add
adc
mov
jbe
lds
stos
cmpsb
bound
popa
mov
cmp
inc
pop
push
inc
das
movsl
xor
dec
lret
sub
cli
lods
out
addb
dec
bound
or
adc
xorb
inc
cmp
int
adc
in
jno
xchg
pop
icebp
pushf
sub
outsl
cmp
pushf
push
adc
or
scas
and
test
sub
mov
js
dec
movsl
inc
and
xchg
push
pushf
push
rolb
inc
pushf
cmp
inc
adc
icebp
clc
mov
subb
pop
and
inc
pushf
mov
inc
adc
addb
xchg
movl
xchg
ljmp
pop
test
dec
inc
cwtl
xor
in
add
mov
mov
pop
mov
and
subb
jle
shlb
fimuls
in
in
pushf
fs
jns
jmp
cld
or
and
dec
in
dec
sti
xor
add
test
ljmp
test
mov
hlt
mov
aaa
sbb
inc
jle
and
mov
insb
xor
iret
sbb
and
loop
mov
inc
aam
or
adc
mov
push
jecxz
xor
inc
pushf
push
notl
imul
add
stos
or
lods
idiv
xchg
xor
dec
js
xor
or
stc
mov
shrl
xchg
mov
jae
dec
cld
sbbb
push
in
jge
int3
mov
repz
push
popa
movsb
xchg
outsl
loope
jnp
cmp
rclb
add
mov
std
pop
and
push
int3
out
out
test
out
cmp
jl
xor
xchg
or
mov
dec
adc
pushf
ret
out
cs
push
adc
and
pushf
adcl
cwtl
mov
jl
xor
insb
pop
lcall
je
rorb
push
push
sbb
mov
jl
jno
mov
das
mov
lods
outsl
inc
punpcklwd
test
mov
insl
pushf
inc
push
push
std
sbbb
add
shrl
testb
gs
cwtl
popf
push
pop
jle
movsb
inc
jle
shlb
pushf
inc
or
iret
ljmp
pushf
push
push
dec
test
cli
and
mov
push
cmp
outsb
sub
lods
push
rcll
jle
iret
sbb
mov
out
inc
or
cmp
inc
jle
pushf
imul
adc
xchg
dec
lcall
enter
fnstsw
inc
repz
xchg
inc
cmp
addr16
xor
inc
jl
and
sarb
pop
and
cltd
daa
fildll
ret
xchg
sbbb
lods
arpl
bound
and
and
shll
loopne
xchg
outsl
stos
adc
add
cltd
popa
aaa
push
add
add
push
add
stc
push
sahf
out
and
push
aaa
jge
or
sbb
mov
prefetch
sub
mov
pushf
inc
out
cs
mov
pusha
inc
jmp
jmp
ja
loope
roll
and
push
insl
xlat
jecxz
test
bound
xchg
jl
imul
test
inc
add
cmpsl
iret
stc
addl
cmp
imul
push
pushf
lahf
push
fcoms
int3
cld
add
std
cmp
adc
adc
loop
xchg
test
or
cli
test
arpl
lods
pop
stc
push
xor
ja
cmp
sbb
popa
dec
push
cltd
mov
or
jne
adc
stos
fdivs
stc
add
sbb
or
shlb
jg
push
lods
push
lock
xchg
add
adc
push
inc
push
daa
call
jge
sbb
cmp
test
mov
insl
shll
mov
clc
repz
mov
pop
aad
mov
fstpl
mov
rcrl
xchg
mov
outsl
pop
movsb
jl
pop
test
nop
stos
les
push
test
mov
pop
mov
gs
inc
cmp
ds
in
stc
jne
add
divl
mov
add
lods
xor
xlat
xchg
test
mov
adc
gs
cmpsl
out
sbb
cld
jl
insl
andb
pushf
jmp
xchg
orl
andb
mov
cmc
lods
rcrl
xor
cld
pop
lret
mov
pushf
add
repz
rorb
decb
pop
xor
adc
cmp
jno
xor
xor
sbb
pushf
arpl
ret
xchg
push
repz
sub
jne
and
add
xlat
lods
or
mov
gs
cwtl
mov
push
xchg
xchg
es
jno
push
sti
add
lcall
or
pop
adc
xor
xor
test
fwait
push
cmp
push
pop
inc
xchg
dec
jecxz
loopne
sti
ljmp
loope
mov
lret
addr16
jmp
pushf
inc
adc
out
mov
icebp
inc
add
pop
imul
add
adc
adc
xchg
xchg
lret
pushf
jle
pusha
fcom
lods
daa
das
stos
stos
inc
xor
cld
pop
sbbb
cltd
cmp
fldt
jbe
cmpsl
sbb
dec
push
pushf
dec
je
mov
pushf
decl
adc
adc
add
aas
adc
std
ljmp
push
movsb
sbb
out
das
mov
dec
xchg
mov
mov
and
xlat
xor
push
sbb
test
xchg
scas
push
sbbb
sub
fdivl
adc
add
into
les
loopne
pushf
ja
adc
cmpsb
cli
aad
mov
cmc
out
mov
gs
in
lds
int
pop
cmp
inc
nop
dec
movsb
fdiv
dec
pushf
mov
jae
dec
adc
push
popl
pop
jns,pn
lods
lret
push
adc
fprem1
inc
pushf
and
mov
mov
test
fs
shll
loope
adc
int3
pusha
and
sub
cld
jae
cs
xchg
mov
insb
gs
xlat
xchg
inc
mov
lcall
mov
inc
cmpsb
fimuls
out
pop
rcrl
mov
repz
sti
push
dec
lods
adc
or
mov
sbb
mov
std
adc
movsl
inc
sbb
aas
loope
cmp
dec
or
dec
xchg
lcall
add
mov
faddl
cmpsl
sub
fistl
nop
mov
in
loopne
inc
pushf
jne
test
fldenv
aas
stc
mov
pushf
push
addr16
cmc
loope,pt
push
xor
fists
movsl
or
out
int3
dec
jecxz
test
push
pop
xchg
cmp
enter
pop
andb
mov
xchg
sub
sub
pop
cmp
ljmp
push
je
pushf
add
jo
gs
or
and
lds
push
out
pushf
add
jbe
adc
or
jg
mov
sbb
cmp
pushf
and
repz
sbb
dec
std
pusha
mov
repnz
mov
xor
xor
sbb
popa
inc
dec
lahf
dec
push
cmp
mov
jae
cmp
mov
popf
and
and
fists
jnp
lea
nop
test
xor
repnz
cld
dec
sti
es
sub
sub
jmp
icebp
pushf
adc
push
aad
mov
adc
and
aam
aas
xchg
pushf
jb
pop
lret
je
pushf
std
xchg
repz
insl
das
adc
lods
aad
std
and
mov
lcall
mov
or
mov
mov
sbb
and
in
jge
ja
xchg
shlb
or
ret
and
cmp
xchg
dec
ss
inc
adc
sbb
rorl
fisubl
aas
adc
mov
clc
call
nop
pop
cmp
pusha
mov
test
xlat
frstor
xchg
loopne
jle
cld
faddl
lcall
adc
push
call
sti
mov
out
mov
add
and
pushf
sbb
dec
loope
adcb
jl
mov
push
jecxz
inc
out
data16
outsl
jl
add
xor
cmpsb
push
into
inc
dec
setl
jno
sbb
ret
and
lods
push
sub
repz
pop
outsb
pushf
push
push
repnz
jnp
or
push
dec
jl
pop
pushf
adc
call
jecxz
sub
add
adc
dec
add
test
nop
imul
stos
pop
mov
pushf
add
sub
xor
icebp
add
xor
pushf
ljmp
cmp
rcll
dec
mov
xchg
mov
pushf
push
xchg
xlat
sub
cltd
or
cmp
fdivrp
sbb
outsl
popa
pop
xchg
outsl
push
mov
xchg
or
mov
fmuls
mov
xchg
cmp
jge
loopne
add
es
dec
arpl
popf
pushf
sub
cmpsb
icebp
movsl
xchg
in
pushf
lds
push
out
fistps
repnz
gs
mov
pushf
adc
mov
out
out
mov
pushf
pop
mov
aad
inc
fs
cwtl
mov
mov
cmpb
xchg
in
push
push
pushf
sbb
dec
les
and
daa
fsts
mov
add
and
dec
inc
add
test
ja
xlat
divb
sbb
lock
sbb
mov
jge
sbb
leave
jns
push
pop
inc
in
xchg
jo
sbb
or
std
js
xchg
push
push
pushf
mov
pop
push
cmp
xor
movsl
lea
loope
dec
jne
cli
jl
jns
shll
mov
cmp
push
icebp
mov
cld
push
xchg
mov
inc
adc
mov
mov
popa
pop
mov
sbb
xor
mov
pushf
sbb
dec
cld
add
mov
pop
cmp
push
dec
or
jo
pushf
rcrl
enter
mov
jmp
test
mov
cmp
pushf
jne
add
jb
push
adc
inc
xor
dec
cmp
test
and
jecxz
popf
adc
ljmp
xor
into
pusha
inc
icebp
sbb
pushf
and
fucom
in
jl
lock
pop
jne
cmpsl
or
inc
shll
xchg
cmpsb
jno
pop
mov
test
int
xchg
jno
pushf
jb
push
jnp
lret
popa
cmp
fstpl
mov
jb
push
pop
push
add
mov
pushf
jns
lahf
jno
adc
push
add
mov
pop
pushf
aas
lea
nop
pushf
pusha
in
pop
mov
xchg
imul
jmp
pushf
insl
dec
sbb
jns
nop
and
cltd
mov
inc
stos
jnp
sbb
dec
clc
inc
and
js
rolb
inc
jp
pushf
orb
mov
push
test
pop
mov
push
mov
push
inc
xchg
jecxz
aas
fidivs
push
nop
lahf
loopne
in
or
out
hlt
sbb
nop
cwtl
or
lods
jecxz
sbb
sub
pop
ret
popa
xchg
xchg
lahf
out
pop
xchg
fisubs
mov
int3
ficompl
or
scas
pushf
in
push
nop
jl
bound
loopne
mov
adc
in
out
xor
pushf
xchg
jmp
adc
les
push
cld
cmc
inc
add
adc
mov
cmp
pushf
test
repnz
cmc
push
jle
push
jo
loope
cltd
jbe
in
sub
xchg
adc
cmp
hlt
inc
jl
push
xor
aas
pusha
pushf
repnz
sub
add
dec
aad
or
leave
xchg
adc
lret
pushf
dec
or
imul
in
xchg
sbb
pop
cmc
out
sub
arpl
jmp
mov
xor
xchg
sbb
xchg
and
xor
sbb
sub
adc
or
test
sahf
add
aaa
shlb
sti
gs
xor
std
mov
aad
nop
pushf
dec
movsl
clc
xor
pushf
ss
mov
add
popa
inc
pushf
notl
icebp
movsb
adc
lret
inc
cwtl
xchg
dec
pushf
in
or
push
test
nop
loope
out
dec
mov
sbb
fisttps
notl
add
clc
mov
pop
and
ljmp
lret
jge
mov
insb
mov
or
daa
cmpsl
repnz
jne
mov
fbld
enter
pushf
mov
jecxz
call
adc
dec
mov
inc
pushf
adc
sub
xor
fs
cld
mov
std
mov
loop
cli
fsubs
shlb
in
stos
adc
xchg
inc
xor
dec
add
rolb
add
enter
sub
mov
cmp
mov
mov
xor
test
loopne
cmc
pop
mov
pop
and
scas
pop
lods
std
lahf
inc
jno
rcr
jb
xor
fdivrl
fnstsw
cmpb
lock
jmp
pop
test
jne
pop
cmp
xor
fadds
push
cmpsb
mov
mov
xchg
shrb
fwait
xor
jg
jnp
xor
fadds
mov
cmp
jl
mov
push
sahf
out
cmpsl
jmp
sbb
cmp
sbb
inc
dec
les
ret
pop
inc
enter
push
pushf
loop
into
rcrb
aam
out
mov
ljmp
mov
mov
inc
bound
pushf
and
test
es
data16
sub
mov
sub
mov
sub
insb
mov
push
cs
outsb
mov
adc
push
jo
mov
pushf
icebp
repnz
push
jb
mov
shl
hlt
adc
push
je
pushf
mov
cmc
notb
ss
jbe
xchg
mov
neg
clc
sbb
pushf
pop
js
mov
pushf
sbb
pop
jp
mov
in
xchg
cmp
test
or
out
jl
mov
pop
mov
test
pop
faddp
jl
cmpsl
lret
xchg
popf
mov
xchg
mov
mov
fsubl
and
inc
pop
fcomip
jle
push
in
imul
mov
ljmp
mov
cmpl
add
sub
add
jg
xchg
movsb
pop
push
and
clc
mov
push
adc
stos
bound
pushf
lret
or
and
in
xor
stos
movsb
movsl
cmpsb
lret
ljmp
pushf
mov
push
hlt
and
rorb
cwtl
jnp
mov
mov
xor
mov
pop
cmp
adc
out
js
or
mov
or
sub
cmp
dec
ret
pop
fs
pop
daa
rclb
ss
pop
movsl
add
xchg
pushf
sbb
cmc
jl
and
dec
mov
sbb
cmp
push
mov
and
in
pushf
in
and
out
mov
and
lods
mov
pop
nop
int
xchg
lods
fstl
ss
fisubrs
fsubs
push
ret
pushf
inc
jg
inc
or
adc
fmuls
fbld
nop
cwtl
aad
cmp
mov
pushf
pop
outsb
mov
pushf
pop
stos
cmpsb
mov
pop
out
jmp
sub
stc
ljmp
mov
test
adc
jle
stos
sbb
jne
cld
push
lods
aas
cmp
pop
pop
mov
mov
das
outsl
pop
ret
pushf
call
ficompl
orl
xor
pushf
test
inc
jae
ja
jl
in
add
scas
sub
pushf
imul
xchg
ja
pushf
sbb
xchg
cmpsl
sub
testb
mov
gs
dec
aaa
cwtl
leave
pop
mov
in
stos
ret
aas
push
cld
lea
inc
sbb
daa
lods
fdivrs
insl
movsb
sbbb
outsl
adc
sub
cmpb
stc
jecxz
sub
test
pushf
cmp
je
fsubrl
add
pop
test
mov
loop
mov
cmc
stc
adc
sbb
iret
clc
inc
jp
stos
nop
ja
addr16
dec
movsb
sahf
mov
out
pushf
testb
mov
push
sti
xchg
cld
add
cmp
push
xchg
mov
and
sbb
lea
mov
sbb
cmpsl
mov
cmpsb
xorl
or
fimuls
pushf
xchg
sti
and
jo
or
aas
lea
xchg
mov
in
inc
es
outsl
jge
sbb
idivl
jle
mov
add
inc
mov
jg
push
xchg
jbe
cmpsb
mov
mov
jge
clc
mov
jl
jo
adcl
pop
pushf
xchg
inc
push
out
mov
jns
mov
cmp
cld
push
ja
inc
dec
cmp
xor
xchg
dec
push
lods
ret
scas
or
in
pushf
iret
arpl
stos
inc
adc
xchg
mov
mov
in
mov
mov
sub
or
mov
clc
push
cmp
stc
adc
cmp
lods
pushf
xchg
jae
dec
sbbb
loop
nop
into
adc
out
dec
pushf
movsb
inc
pusha
mov
mov
cwtl
mov
pop
pop
cld
add
ja
and
mov
or
sub
mov
inc
dec
xchg
xchg
or
pusha
pop
sbb
popa
adc
pop
xlat
aam
cli
cmc
ja
xchg
push
cmp
pushf
lea
add
pushf
mov
popf
fisubs
pop
scas
outsb
pushf
addr16
test
sti
jnp
mov
mov
in
cmp
jp
insl
cld
xor
mov
stos
sbb
in
mov
pushf
xchg
mov
add
jl
sbb
pop
pop
mov
pushf
sbb
jne
fsub
cwtl
mov
jg
ret
pushf
lea
lret
lods
out
or
jmp
gs
pop
pop
mov
xchg
arpl
mov
pop
jae
cmp
pushf
stos
jnp
adc
repz
add
cmpl
rorb
cltd
dec
movsb
or
aam
pop
fidivrl
pop
lods
lahf
out
bswap
sbb
arpl
movsl
xlat
adc
je
push
push
mov
imull
sarb
fisubrl
nop
pop
pop
fsubrs
pmaddwd
int3
aad
aas
mov
test
sti
or
in
add
or
sbbl
jl
push
or
cmp
dec
stos
std
add
shl
clc
dec
nop
and
sub
cmp
pushf
pop
mov
stc
pushf
adc
mov
fistps
sahf
or
out
or
jmp
add
jae
mov
push
push
mov
cmp
add
aas
pushf
mov
subb
je
jge
adc
imul
sbb
lods
sbb
test
movsb
sbb
dec
or
mov
and
dec
xor
inc
sbbl
mov
pushf
or
aam
adc
aas
sub
mov
imul
add
sub
jnp
mov
pop
pop
cwtl
jb
adc
sbbl
stos
mov
mov
xor
and
in
or
pushf
xchg
jmp
aas
sub
enter
lods
xor
adc
cwtl
rcll
jo
lock
push
mov
inc
mov
pop
out
shlb
sbb
insl
jae
mov
sbb
sbb
js
dec
and
dec
rcrb
loop
xchg
int
popf
stos
sbb
cmp
addr16
and
mov
das
jmp
push
std
jecxz
hlt
addr16
pop
jle
movsb
lock
dec
pop
cld
mov
daa
lods
mov
jl
mov
loope
mov
or
popf
test
push
jecxz
iret
sub
mov
out
pushf
jne
ja
sbb
pop
pushf
sti
pop
shll
dec
test
je
mov
pop
or
jg
int3
or
cmp
pushf
out
pop
pop
ss
mov
cmp
ja
lea
adc
lret
mov
insb
jl
xor
cmc
cmpsb
push
filds
add
mov
ret
clc
xchg
jmp
pop
not
jbe
mov
sbb
xchg
call
pop
imul
xchg
movl
and
pushf
sbb
dec
add
adc
das
sbb
lahf
xor
xchg
or
scas
add
mov
mov
fnsave
sbbl
sbb
aam
cmp
or
fcomps
movsb
inc
popa
jecxz
xor
cld
sbb
xor
pop
ljmp
stos
jge
scas
dec
push
test
sub
inc
lods
adc
pop
sub
bound
repz
push
mov
insb
lods
adc
pushf
mov
jo
stos
jl
xlat
sub
pusha
adc
mov
mov
pop
mov
ja
mov
lods
in
cmp
subb
sbb
lahf
cmp
or
pushf
xchg
pop
xor
inc
adc
or
pop
rorb
mov
lds
popa
xor
pushf
in
pop
lock
sbb
popa
and
xor
cmp
fs
jb
xlat
add
adc
or
dec
push
mov
sbb
cmc
jge
xchg
rcl
mov
pop
pushf
add
arpl
mov
sbb
ljmp
pop
aam
jno
ds
pushf
dec
fsubr
and
cltd
xchg
pushf
cmp
add
cmp
xlat
repnz
dec
mov
enter
subl
jmp
das
js
pushf
jecxz
pop
push
sbb
jg
mov
mov
mov
pushf
xchg
adc
clc
mov
push
pop
popa
in
pop
cmp
dec
mov
and
cmp
jbe
sbbb
std
mov
cmc
mov
xchg
pushf
loop
ljmp
fs
xor
dec
mov
cmpsl
sbb
aas
adc
cmp
pop
ret
xchg
lahf
stos
lret
cltd
arpl
insb
lods
pop
lods
jnp
fidivl
scas
mov
cmp
dec
mov
mull
lea
push
push
mov
loop
pop
mov
inc
stos
pop
test
enter
ret
sub
xchg
unpckhps
or
push
in
shl
mov
xchg
outsl
dec
inc
sbb
push
or
sub
pushf
xchg
hlt
inc
push
cs
lea
pushf
xor
inc
jle
subb
or
sub
cmp
dec
jmp
sub
jecxz
xchg
in
sub
mov
cmp
fwait
or
and
and
test
and
xor
sub
pop
pop
add
cld
sbb
ret
fcompl
pushf
cld
test
movl
icebp
mov
outsb
lock
pop
and
scas
push
movsl
cmp
sub
rol
dec
movsl
sub
in
mov
scas
xor
aas
fcomp
stos
int
movsl
insl
inc
add
movsl
xor
mov
xor
in
sarb
rcrb
lcall
repnz
popa
push
movsl
fstps
and
int
gs
mov
out
ficomps
mov
xor
cmp
dec
into
push
shll
mov
lahf
and
dec
pop
and
mov
sub
and
mov
dec
fisubrs
dec
inc
andl
movsl
xor
cmp
cmp
dec
into
mov
mov
mov
das
repnz
pop
and
mov
jmp
mov
iret
mov
enter
cmp
out
scas
sub
pop
pop
fucom
stos
add
repnz
and
push
mov
mov
sbb
movsl
cmp
movsl
and
pop
mov
scas
pop
cmp
dec
into
dec
shlb
popf
mov
lods
mov
dec
pop
and
and
sub
sub
mov
fisubs
aas
scas
fptan
or
sahf
add
dec
sub
pop
mov
mov
repnz
fidivs
lret
scas
aas
sahf
push
xacquire
add
push
sub
shll
xlat
dec
into
mov
mov
push
std
loopne
add
repnz
pop
and
mov
sub
and
sub
dec
movsl
mov
in
mov
scas
sub
push
dec
into
sub
mov
sar
loopne
add
repnz
and
scas
mov
push
and
push
jmp
aam
roll
insl
sub
inc
lods
fisubrs
mov
inc
std
loopne
shrl
scas
push
std
loopne
sbb
aad
adc
mov
mov
shl
mov
cmpsb
add
push
sub
in
movsl
addr16
mov
scas
movsb
cmp
dec
into
push
shlb
add
repnz
pop
and
mov
sub
mov
xchg
fidivrs
aas
scas
shl
or
sahf
add
push
sub
push
mov
mov
repnz
sarb
enter
mov
and
int
pop
mov
test
mov
adc
stos
add
iret
sub
pop
mov
scas
lods
cmp
into
shlb
loopne
add
repnz
pop
and
mov
sub
jb
sub
daa
fidivs
xchg
and
pop
movsl
scas
push
pop
mov
scas
xor
dec
dec
into
out
lods
pop
in
cld
push
and
das
mov
int3
and
int
pop
mov
repz
cmpsl
popa
mov
adc
and
lret
std
loopne
rcrb
xor
cmp
dec
std
loopne
add
repnz
xor
push
movsl
and
cmp
pop
ds
dec
sub
movsl
ss
mov
cmp
dec
into
push
shlb
std
loopne
add
repnz
pop
and
xor
sub
mov
mov
inc
repnz
loopne
outsb
aas
sahf
inc
repnz
and
add
shrl
movsl
scas
push
mov
scas
stos
cmp
into
xor
xlat
inc
std
loopne
out
and
ret
push
fidivs
and
mov
inc
jno
and
mov
ljmp
in
mov
lods
mov
sub
lds
mov
inc
sub
rolb
mov
aad
mov
into
lds
aam
and
stos
add
lock
pop
and
xor
mov
vpavgb
ret
pop
and
mov
std
loopne
add
repnz
pop
and
lahf
add
lock
pop
and
xor
sub
les
xor
movsl
and
stos
nop
scas
sub
and
mov
xchg
fisubrs
mov
lods
scas
mov
mov
and
inc
movsl
cmp
movsl
mov
in
mov
lods
stos
scas
sub
shlb
dec
into
test
and
aas
daa
movsl
movsb
int
add
cmp
in
and
mov
lods
repnz
pop
and
mov
sub
and
mov
mov
push
fisubs
ljmp
cmc
dec
movsl
cmp
mov
jecxz
cmp
push
lret
mov
scas
mov
mov
movsb
xlat
dec
std
loopne
add
repnz
and
mov
xlat
lods
popf
iret
mov
bnd
and
mul
mov
dec
mov
int
loopne
add
repnz
movsl
sbb
aas
scas
dec
repnz
and
bound
mov
scas
movsb
cmp
dec
into
inc
rcrb
add
repnz
pop
and
popf
mov
iret
and
fldcw
add
rcl
std
loopne
cmpsl
jecxz
add
into
loop
test
movsl
fmul
lods
pop
mov
mov
push
repnz
inc
stos
add
and
dec
jecxz
shrl
sbb
mov
pop
pop
movsl
or
cmp
movsl
aas
scas
push
repnz
and
pop
movsl
mov
inc
scas
mov
push
dec
into
js
mov
and
cwtl
lahf
mov
aad
add
mov
mov
mov
push
repnz
mov
rcl
fldenv
mov
rcl
shll
stc
scas
mov
xor
mov
aad
sbb
scas
add
repnz
movsl
sbb
lret
push
daa
movsl
cmp
lods
pop
mov
pusha
fisubrs
movsl
mov
cs
cmp
dec
into
inc
shrb
add
repnz
pop
and
mov
and
ljmp
mov
movl
push
std
loopne
out
and
push
shll
scas
fdiv
fiaddl
add
add
movsl
into
rolb
cmp
in
sub
dec
movsl
loopne
out
and
movsl
sbb
daa
aas
scas
iret
bnd
mov
cmp
xlat
dec
std
loopne
add
repnz
pop
and
aas
int
pop
mov
jp
and
scas
dec
repnz
and
lcall
ljmp
into
mov
std
loopne
add
xchg
pop
stos
lock
and
ror
mov
cmp
sti
push
and
lods
rorb
movsl
mov
loopne
add
repnz
pop
and
mov
iret
lock
mov
dec
and
mov
mov
pop
ficomps
and
jnp
enter
loopne
add
repnz
cs
lods
leave
fidivrs
jge
sarb
dec
std
loopne
add
repnz
cmp
scas
enter
sahf
mov
sahf
inc
repnz
cmp
rolb
in
scas
push
shll
pop
pop
movsl
jge
mov
movsl
cltd
into
shlb
inc
std
loopne
add
bnd
cmp
mov
and
inc
pop
fidivs
scas
inc
repnz
ret
sub
aas
test
and
adc
push
inc
movsl
loopne
gs
aaa
movsl
mov
lods
sahf
out
sub
les
inc
dec
into
ffree
popf
xlat
inc
std
loopne
in
cli
sbb
scas
into
sub
cmc
jno
cmpsb
adc
or
scas
inc
mov
shrb
mov
movsl
cmp
scas
ret
bnd
mov
rolb
in
movsl
addr16
mov
scas
scas
cmp
dec
into
jge
lods
cmp
ret
cmp
dec
popa
mov
mov
in
mov
inc
mov
out
movsl
add
enter
shlb
add
repnz
pop
and
movsb
mov
inc
and
int
std
aaa
sarl
or
movsl
repz
inc
mov
mov
fwait
in
sub
js
fbld
test
push
mov
mov
pop
sub
mov
sub
fsubs
in
mov
fs
stos
mov
movsb
mov
hlt
sahf
sbb
sahf
fnstsw
lcall
test
cli
and
cmp
cli
es
sbb
sub
jp
push
test
popf
sub
sbb
cmp
sub
lahf
stos
ret
sub
sub
and
into
mov
sub
xor
pop
sub
ds
stos
lods
lahf
ds
mov
sub
das
xor
mov
popf
mov
movsl
lds
pushf
jbe
add
leave
dec
enter
aaa
sub
dec
mov
stos
dec
dec
or
movsb
and
mov
cs
sbb
xor
jae
movsl
sbb
sub
and
daa
int
mov
and
and
repz
xor
sub
pop
mov
and
cmp
and
fs
xchg
fcmovu
jle
jae
jb
loopne
and
es
mov
and
and
adc
push
mov
and
fisubrs
and
and
mov
sub
xchg
loopne
and
and
fisubs
push
fisttpl
cmp
mov
call
sbb
movsl
and
loopne
and
xor
and
and
movsl
pop
lods
ss
mov
cmp
xor
int
mov
and
xor
cmp
and
stos
xor
stos
int
jle
xor
mov
loopne
fimuls
cmp
and
loopne
jle
into
das
sub
ret
fstpt
fisubrl
movsb
push
stos
xor
int
into
mov
mov
mov
loop
movsl
mov
mov
mov
mov
lods
mov
iret
test
mov
mov
lods
mov
mov
and
mov
repz
movsb
xor
mov
stos
inc
mov
jo
movsl
and
nop
mov
mov
int
mov
sbb
icebp
and
mov
sahf
adc
cmpsl
fidivs
xor
popf
push
loopne
and
mov
stos
fidivs
movsl
loopne
and
mov
xor
mov
lahf
repnz
mov
mov
lods
and
cmpsl
into
mov
mov
stos
mov
popf
jb
cmpsb
fisubrs
xchg
popf
stos
into
mov
loopne
fnstcw
jae
repz
adc
cmpl
or
fidivs
into
stos
int
jle
xor
mov
loopne
mov
jle
stos
inc
or
popf
test
mov
ljmp
popf
sbb
cmp
xchg
inc
cmp
mov
fwait
add
int
mov
int3
aaa
fdivl
sahf
xor
int3
mov
das
sbb
jge
cmp
fidivrl
scas
sbb
movsl
loop
mov
add
sahf
mov
mov
mov
mov
mov
and
dec
sarl
out
jecxz
xorb
or
into
add
dec
inc
scas
push
out
loop
sahf
pop
or
mov
pop
or
mov
inc
das
loope
test
and
cmp
fisubrs
push
and
data16
cmpsb
stos
bound
test
push
shlb
dec
xchg
call
sub
lock
ds
push
pop
cmp
hlt
sahf
movsb
aas
mov
test
mov
jp
mov
lods
fisubrl
cmp
addr16
fmull
mov
into
xor
mov
std
cld
xchg
dec
mov
int
adc
scas
mov
les
lret
pop
sbb
aas
addr16
fmull
cmp
out
int
scas
addr16
jbe
sub
and
mov
repnz
mov
sub
mov
scas
cmp
dec
mov
cmpsb
sub
popf
mov
mov
xor
movsb
loopne
lds
subb
mov
jbe
and
xor
in
add
mov
sub
lret
mov
cmpsl
fs
push
pop
dec
mov
ret
mov
sub
sbb
hlt
mov
fldl
xor
addr16
push
mov
or
add
mov
inc
lods
ss
xchg
xchg
and
xor
int
fsubrp
in
pusha
imul
add
ss
int
loopne
test
movsb
repnz
adc
pop
bnd
js
push
dec
xchg
mov
cmpsb
loopne
js
xchg
cmp
cmp
in
sub
xor
and
mov
xchg
or
scas
repz
lods
xor
in
call
pop
xor
mov
lahf
cmpsl
movsl
or
loopne
int
sub
jae
fsubr
insb
movb
cmp
dec
mov
sub
mov
jnp
jnp
jno
sahf
lahf
in
cwtl
out
stc
and
pop
lock
popa
fdivrs
outsl
push
push
cmp
dec
int3
pushf
and
cmp
cmp
or
push
jb
jno
push
jno
fnstsw
xchg
in
jg
daa
insl
push
mov
pop
cld
cs
das
icebp
jl
repnz
jl
push
xchg
inc
cmp
outsl
inc
add
in
inc
scas
gs
xchg
xchg
movsl
pop
imull
xchg
out
sbb
mov
das
stos
push
aaa
shrb
cmpsb
into
enter
repz
popa
pop
sti
push
test
fsts
clc
sub
mov
mov
in
add
test
fstpt
pop
stos
enterw
ds
xlat
mov
lret
dec
data16
in
test
cmpsb
inc
out
xchg
std
std
pushf
mov
push
dec
call
adc
pop
test
outsb
and
jecxz
mov
pop
dec
bound
pop
mov
sub
adc
push
aas
xor
pop
sbb
jns
cmp
loop
sti
push
lahf
inc
sbb
into
jbe
outsb
or
leave
sarb
xor
out
add
movsl
out
dec
jge
add
jge
add
popf
repz
mov
cmp
mov
inc
ss
into
movsl
mov
ds
cmp
loopne
mov
dec
mov
out
cmp
int
aad
pop
cmp
mov
pushf
and
cmp
fmull
mov
movsb
cmp
pop
mov
enter
fsubr
mov
inc
mov
jge
cld
jns
mov
out
addr16
rcrl
sahf
push
adc
inc
popf
out
lahf
mov
std
mov
xor
and
dec
int
dec
cmpsb
sbb
push
sahf
mov
lahf
sbb
stos
mov
mov
pusha
dec
pop
out
mov
scas
adc
pop
push
add
xchg
nop
movsl
push
jg
leave
add
inc
pop
mov
jg
pusha
adc
push
aam
and
in
shrb
xchg
ljmp
push
int3
ffree
pusha
js
sbb
in
mov
psrld
and
inc
add
aaa
mov
repnz
mov
ds
mov
mov
mov
pop
mov
xor
cmpsb
add
shlb
insl
int3
dec
pop
and
shrb
mov
shll
xor
adc
aad
mov
pop
rcll
push
loope
das
jb
ds
push
sbb
lods
out
xor
mov
int3
dec
sbb
les
es
les
inc
gs
sbb
jecxz
sbb
scas
push
sti
mov
mov
mov
mov
or
mov
orb
leave
mov
out
inc
inc
idivb
xchg
lods
mov
flds
push
loope
push
fs
or
lods
rcr
dec
mov
push
mov
mov
or
scas
sbb
jl
push
xor
inc
inc
mov
xor
stos
fdiv
ret
shr
add
mov
call
insl
bound
jo
sbb
mov
outsl
lds
ds
mov
scas
inc
jge
mov
dec
cmp
sub
sbb
mov
loop
negb
out
out
sahf
mov
hlt
repnz
out
addr16
popa
mov
pop
jle
lcall
shr
and
fldl
xor
xchg
mov
sub
mov
mov
js
loopw
cmp
push
jle
mov
mov
mov
adc
pop
push
mov
dec
mov
xchg
pop
cmp
clc
cld
or
cmp
push
dec
sub
in
adc
sbb
xor
dec
jl
in
lods
sbb
add
in
cmpl
mov
push
xor
fiadds
mov
jae
gs
shrl
cmc
add
mov
scas
inc
fists
add
mov
es
lds
sahf
addr16
pusha
je
repnz
mov
aaa
and
pop
mov
insl
aad
aas
pushf
dec
pop
in
imul
mov
xor
xlat
mov
mov
mov
mov
mov
lcall
lods
and
lock
mov
addr16
pop
mov
mov
sbb
cmp
aas
and
xor
aam
out
rclb
leave
adc
dec
mov
lods
cmp
mov
mov
sbb
popa
fwait
in
push
and
fs
mov
add
or
mov
fxch
std
outsl
cli
xchg
outsl
mov
scas
and
mov
pop
cltd
mov
sbb
test
out
decb
jne
add
adc
jno
push
popfw
xchg
cmp
hlt
ret
mov
es
in
mov
mov
jnp
inc
jg
xor
mov
or
mov
cmp
mov
fdivl
sbb
aas
dec
lcall
sbb
pop
int3
sarl
xchg
push
push
and
push
jle
in
and
ss
and
push
fdivr
xor
lods
add
or
push
jge
xor
je
jge
into
inc
popf
xor
iret
shll
pop
or
fstps
cli
xor
in
add
or
xchg
out
ffree
push
in
jge
fsubrl
mov
out
inc
vsqrtss
mov
mov
test
es
cmpsl
mov
mov
and
sahf
mov
shll
cmp
xchg
mov
icebp
push
ljmp
mov
aad
mov
adc
mov
push
xchg
mov
popf
movsb
pop
leave
adc
jl
or
sbb
dec
lods
movsl
mov
and
arpl
roll
clc
cmp
mov
push
sbb
aad
insl
mov
xor
mov
cmp
dec
fidivs
out
sahf
cmp
sub
icebp
mov
loope
in
or
in
out
cmp
inc
push
mov
pop
out
dec
and
mov
and
out
fs
sahf
mov
xor
into
cmpsb
cmp
lods
inc
cmp
mov
sahf
sahf
cld
jne
mov
gs
and
out
xor
subl
pop
push
mov
sbb
popf
rcr
add
mov
into
sbbl
adcb
sub
or
cmp
sarl
jl
scas
and
or
adc
hlt
adc
out
cmp
into
mov
jo
pop
out
push
fs
and
cmp
lahf
mov
push
or
jbe
movsb
stos
xor
lahf
sub
int3
mov
mov
cmc
inc
jns
movsb
mov
out
nop
shrb
xor
aaa
push
iret
clc
pop
sti
repnz
int
dec
or
das
in
jge
jge
loopne
scas
nop
xor
stc
shrb
xor
pop
jns
sahf
sbb
popf
outsl
sub
dec
nop
push
push
in
pop
nop
or
ret
jns
mov
movsb
stos
cmp
notb
cmpsb
rcrb
test
fsubr
in
fwait
adc
cmp
cltd
cmp
mov
ss
mov
sbb
mov
mov
cld
mov
out
cmpsb
fnstenv
clc
mov
inc
cmp
gs
fcompl
fnstenv
out
daa
jg
out
and
lahf
mov
and
mov
push
out
dec
orb
inc
pop
inc
inc
stos
leave
jle
push
in
aad
fidivrl
mov
mov
pop
repnz
rorb
sub
push
push
pop
out
cmp
push
data16
fs
into
lds
gs
movsl
sbbl
mov
jns
inc
sbb
mov
dec
fwait
xor
cmp
fldl
pushf
mov
dec
mov
repz
xchg
test
cmpsb
jns
add
inc
xor
mov
xor
mov
cmpsl
scas
inc
scas
mov
lods
ja
add
pop
jecxz
push
mov
mov
xor
clc
mov
mov
jnp
jg
xor
cs
sub
xor
mov
into
mov
lods
or
and
cmpsl
insb
test
jns
frstor
xor
push
and
mov
add
push
iret
xor
lret
clc
push
pop
lods
push
mov
xor
mov
sub
inc
sbb
popf
jo
mov
or
cmp
and
add
dec
mov
int
stos
dec
mov
inc
outsb
mov
bswap
dec
inc
aaa
lock
cmpsl
dec
test
lock
mov
push
scas
mov
ljmp
jmp
out
jge
scas
and
test
loope
out
loop
sahf
insl
test
or
add
xchg
insb
mov
les
bnd
in
rorl
inc
out
mov
sub
mov
xchg
scas
cmpsl
mov
dec
mov
incb
xchg
cmpsl
loop
fmuls
stos
jmp
pop
popa
xchg
in
and
xor
insb
add
sub
bound
mov
std
add
mov
and
pop
aad
loop
cmp
mov
pop
inc
pusha
xor
inc
xor
sub
mov
movsl
pop
lods
xor
int
dec
add
and
sbb
jle
cltd
les
repnz
cmpsb
dec
sub
and
add
pop
and
les
sub
scas
ret
test
and
hlt
sub
data16
push
xor
inc
pop
mov
ljmp
mov
lods
int3
scas
mov
aam
mov
mov
inc
push
inc
repz
imul
mov
addr16
mov
inc
mov
cmp
clc
push
pop
in
mov
mov
jnp
cltd
outsb
jg
out
mov
mov
cmpsb
loopne
xchg
fucomi
scas
hlt
and
and
mov
or
mov
lods
hlt
jno
das
add
hlt
ret
aas
out
inc
dec
sahf
arpl
in
mov
cli
ja
mov
inc
fsubrl
adc
or
lahf
mov
testl
faddp
adc
jl
xchg
mov
in
lods
cmp
fadds
sti
stos
mov
pop
mov
or
stc
cmpsb
daa
cmp
sbb
sbb
mov
xor
mov
xor
mov
xor
scas
sub
cmpsb
insl
cmpsl
mov
jle
fisubrs
mov
inc
xchg
lods
into
sub
and
stc
das
mov
popa
or
stc
add
or
lds
jmp
xor
pop
jmp
shlb
jmp
scas
xor
xchg
jmp
pop
xchg
dec
xor
scas
xlat
mov
mov
int
dec
pop
int
xor
sbb
jge
jae,pt
push
popf
insl
scas
lahf
mov
mov
lahf
loop
sub
push
incb
mov
outsb
push
rcrb
les
test
jno
and
mov
mov
mov
aam
fcompl
test
scas
pop
pop
jb
adc
cmp
xchg
mov
test
adc
out
or
lcall
push
test
push
jmp
aaa
fldl
leave
adc
sub
mov
imul
mov
cmpsb
jb
add
inc
mov
out
sub
inc
pop
lahf
mov
cs
or
push
pop
or
movb
sarb
fidivrs
jnp
mov
aaa
push
dec
test
fsubr
fiadds
sahf
mov
mov
mov
neg
sub
sub
mul
mov
das
cmpsb
jbe
push
dec
fldl
std
aaa
mov
inc
stos
in
mov
pop
push
cmp
loop
mov
pusha
std
dec
xor
mov
movb
inc
fnstsw
inc
xor
xlat
arpl
cmp
in
insl
stos
add
loopne
mov
pop
inc
xor
push
cmpsb
test
push
pop
push
lods
mov
mov
stos
insl
ficompl
cmp
xor
inc
outsb
scas
lea
pop
das
shlb
rep
mov
bound
and
mov
cs
jge
add
inc
je
scas
cmp
cmc
stos
xchg
shrl
jle
mov
ds
scas
inc
fiadds
ja
in
outsl
stc
adc
mov
add
xor
push
and
sbb
sti
mov
dec
jbe
lods
ja
aaa
mov
xchg
mov
mov
and
jmp
mov
add
sub
lods
mov
mov
mov
mov
lock
scas
sub
mov
in
sahf
sahf
mov
sub
sbb
push
pop
test
lods
lods
sub
mov
push
sahf
pop
xchg
lock
and
imul
cwtl
into
mov
pop
aam
fstpl
stos
cmp
mov
cmp
add
cmp
mov
ret
sub
add
in
cmp
cltd
mov
ret
mov
mov
sbb
test
stos
shrb
jle
add
sbb
test
cmpsb
jns
cmp
jns
dec
into
and
add
es
fcomip
daa
aas
scas
daa
xor
movsb
jno
mov
stos
mov
cmpsl
filds
and
add
bnd
jmp
ds
arpl
jg
aas
sbb
popf
fisubl
and
lock
cmp
mov
jbe
and
push
mov
xor
xorl
xorl
xorl
xorl
xorl
loope
pushf
cmpsb
mov
scas
and
and
popf
mov
cmp
aaa
fisubs
into
mov
mov
nop
dec
movsb
pop
shlb
add
mov
lods
mov
mov
pop
ss
adc
pop
fs
mov
dec
pop
fcomip
pop
inc
and
jmp
and
or
out
pop
je
in
lock
cli
aas
scas
and
aaa
movsb
jo
pop
xor
sub
loopne,pn
sahf
test
lods
mov
pop
push
sahf
ss
lock
andb
repnz
pop
sbb
dec
lods
sub
mov
enter
pop
jnp
sub
jnp
sub
shrb
sbb
add
loop
ds
jge
mov
ds
mov
push
icebp
mov
xchg
jae
movsl
lahf
sbb
movsl
pop
xchg
scas
mov
adc
or
xchg
mov
adc
jg
in
pop
jg
push
enter
mov
stc
pop
jg
push
enter
repnz
cmp
int3
gs
and
xchg
in
lock
and
sbb
sub
jle
scas
inc
sbb
mov
sbb
sahf
popf
repnz
xchg
clc
sbb
sub
lods
jns
cld
xchg
das
cmp
test
aaa
pop
leave
cmp
sub
sub
lods
sub
sub
add
sarb
hlt
pop
das
pushf
cmpsb
mov
lret
lea
pop
mov
mov
mov
mov
sub
ja
and
cmp
cmp
lock
in
xchg
lods
sub
pop
jecxz
mov
jecxz
aas
mov
icebp
add
stos
dec
push
cmp
lods
cmp
cmp
test
dec
sub
ja
cmp
stos
inc
in
cmp
popf
aaa
cmp
mov
rcr
inc
test
stos
ljmp
aaa
mov
mov
inc
xor
loope
stos
dec
aaa
add
xchg
shlb
cmpsb
jns
dec
jo
lret
push
push
pop
mov
es
mov
pop
sub
cmp
lods
cs
pop
xchg
sub
sub
lods
mov
in
fcmovu
push
ljmp
pop
mov
mov
cmp
ss
sub
sub
sbb
cmp
add
sbb
cli
dec
jecxz
je
stos
pop
fwait
jecxz
adc
pop
pop
jge
stos
pop
jge
stos
xor
sub
cmp
shrl
fwait
push
je
in
lock
fs
mov
mov
xor
mov
xchg
xlat
lret
xor
jge
cmp
ss
stos
xchg
inc
xchg
cmpsb
adc
stos
jle
jge
xor
dec
push
add
xchg
insb
shrb
push
mov
es
cmp
fmuls
mov
sub
lock
scas
mov
or
mov
arpl
or
mov
xor
cmp
dec
push
or
push
pushl
scas
in
outsl
push
add
push
cmp
mov
sub
sub
add
es
cmp
add
mov
aas
sbb
shrb
cli
sub
sub
cmp
mov
fimuls
jnp
fdivrl
add
cs
aas
popf
sub
xor
or
cmp
pop
stc
aas
mov
sti
in
aaa
jmp
xchg
popf
lods
cmp
lods
lods
cmp
lods
lods
cmp
lods
lods
cmp
lods
lods
cmp
jae
repnz
jle
sub
ret
lods
sub
stos
pop
mov
addr16
movsb
je
cmp
pop
movsb
stos
lea
lods
lods
cmp
scas
mov
shrb
add
std
jmp
or
testb
mov
cld
mov
sti
cld
jg
mov
mov
clc
dec
int3
mov
mov
and
leave
pop
cld
jge
sub
scas
sub
pop
gs
in
push
lds
jg
outsl
sub
mov
std
shrb
test
cmpl
std
jmp
stos
or
sub
cld
xorl
xorl
xorl
xorl
xorl
jbe
pushf
mov
in
shlb
fistps
mov
cmpsb
cmpl
stos
fimuls
inc
pop
cli
and
es
sub
xor
pop
into
cld
xchg
add
scas
movsl
xchg
mov
pop
xchg
call
cmpsl
sbb
clc
cmpsl
sbb
clc
cmpsl
sbb
clc
cmpsl
sbb
cltd
stos
cmp
jns
jmp
mov
fbld
loope
movsb
in
sbb
cmp
add
and
push
mov
cmp
repnz
test
lods
movsb
and
mov
add
in
jnp
and
add
hlt
jge
cmc
push
shlb
jnp
es
shlb
jnp
es
shlb
jnp
mov
movsl
push
mov
fdivp
mov
mov
sbb
mov
and
ds
add
iret
mov
sub
xchg
xor
and
xor
dec
fwait
sahf
mov
mov
push
sbb
mov
jmp
fists
cmp
dec
clc
int3
ljmp
outsb
and
loope
add
push
push
push
lret
jl
mov
shrb
lea
into
cmpsb
repz
jle
in
ja
ja
mov
lock
lods
and
add
popf
jle
repz
sbb
add
and
sub
jle
imul
cmc
jno
mov
ret
xchg
xchg
sahf
sbb
popf
aas
into
and
and
imul
aas
mov
dec
cmp
lock
inc
and
jmp
movsl
icebp
sahf
cmp
mov
sbb
pushf
mov
in
mov
sbb
movsl
sarb
mov
sbb
mov
mov
pop
and
sbb
ss
movsl
sub
std
sti
add
cmp
sarl
insb
and
shlb
cmp
fisubl
cmp
fisubl
cmp
fisubl
cmp
fisubl
cmp
cli
mov
and
fistpll
shlb
clc
and
clc
mov
aas
inc
rcrb
stos
push
push
fdivrl
sar
pop
mov
mov
cmp
mov
xchg
repz
cmp
sbb
mov
cmpsb
cltd
pop
pop
xchg
pop
popf
lret
fcomip
mov
lods
mov
shlb
or
insb
in
lock
mov
mov
ja
call
mov
aad
mov
lods
mov
xor
mov
mov
mov
sbb
mov
sahf
sbb
mov
sahf
sbb
mov
mov
xor
lea
sbb
mov
lods
sbb
es
mov
pop
repz
stos
xor
cmp
in
fwait
sub
sbb
stc
daa
pop
mov
dec
jge
sbb
lock
lods
sbb
xor
pop
rcrb
sahf
aam
popf
mov
and
test
pop
mov
cmpsb
mov
mov
sbb
jge
lcall
adc
pop
lods
sbb
jnp
dec
push
add
xchg
outsl
rolb
and
add
cmp
jb
notl
incb
jo
data16
cmpsl
std
push
fldl
add
mov
xor
andl
mov
outsl
jno
adc
orb
mov
xor
sbb
scas
subb
mov
sub
pop
roll
ss
jmp
mov
mov
push
call
lods
std
xor
data16
imul
pop
push
mov
iret
ja
and
xor
ss
and
mov
mov
sbb
mov
or
and
adc
cmp
out
push
data16
mov
aaa
shll
int3
dec
loop
push
sub
andl
loopne
pop
jge
jge
sbb
shl
aas
lret
lods
std
jmp
xchg
mov
cs
mov
cmp
xchg
mov
cli
and
cmp
mov
sbb
mov
daa
add
jno
mov
sub
or
pop
mov
pop
and
loope
stos
daa
test
dec
enter
mov
mov
pop
xor
ljmp
mov
aaa
pop
mov
push
mov
dec
mov
xor
push
add
jns
stc
aam
mov
adc
loopne
and
ss
push
cli
lock
push
hlt
stc
fcmove
in
sahf
push
xor
sarb
aaa
push
std
xchg
mov
and
inc
test
cmp
ss
add
cld
aaa
pop
insb
into
jae
inc
push
mov
or
popf
mov
inc
int3
sub
xor
in
sbb
into
popf
sbb
testl
inc
leave
mov
and
mov
dec
fistps
in
pop
xor
push
repnz
pop
leave
mov
mov
fs
arpl
push
sarb
xor
shrl
bound
mov
sbb
mov
mov
pop
mov
pop
pop
mov
data16
push
adc
bound
aas
scas
sbb
push
inc
pushf
mov
add
sbbb
cmpsb
or
pop
stos
scas
test
lods
aad
rorb
fwait
lods
daa
pop
add
repz
sbb
mov
pop
cld
jge
xor
xorl
fwait
or
cmp
mov
sbb
popf
ret
loope
es
cld
jg
sahf
cmp
mov
cwtl
in
or
or
jle
sbb
fldl
add
and
andb
and
mov
out
xchg
stos
mov
mov
jge
sbb
xorl
fwait
mov
aas
scas
and
fisubl
jae
loopne
sub
xor
sbb
sbb
jge
and
pop
sub
sbb
out
fisubs
mov
cmp
inc
mov
pop
ret
mov
mov
sbb
jnp
rcrb
and
aas
xchg
outsl
sub
lcall
fcomip
and
and
lods
and
mov
fiadds
push
mov
shlb
and
add
es
repnz
mov
mov
rol
fistpll
fisubs
mov
out
lock
shlb
pop
stos
bound
cmp
fisubl
cmp
fisubl
cmp
ficompl
sbb
pop
sbb
add
and
sbb
rcrb
mov
push
dec
clc
xor
pushf
mov
jno
push
adc
mov
stos
lahf
dec
scas
pop
cmp
sti
add
rcrb
push
adc
push
insl
shlb
cltd
popf
pop
mov
rcrb
jg
popf
add
popf
stos
sub
lods
mov
shrb
sbb
sbb
popf
cmpsb
pop
mov
mov
sbb
mov
rclb
sahf
mov
popf
aas
lods
cmpsb
pop
xchg
scas
mov
adc
push
call
stc
aas
mov
lret
test
in
loope
fs
dec
es
es
and
jmp
sahf
cmp
mov
pop
and
mov
pop
sti
cwtl
bound
dec
sti
pop
mov
daa
loopne
sbbb
test
inc
pop
push
leave
fistpll
xchg
mov
es
repz
in
ja
aaa
lods
dec
je
das
insl
scas
fists
icebp
add
mov
sti
mov
movsb
add
pop
mov
sub
sti
sub
add
mov
push
popf
mov
sub
dec
push
mov
sbb
and
jns
imul
sti
incl
cmpsb
mov
mov
pop
mov
pushl
mov
sti
outsl
push
add
data16
mov
sub
mov
sahf
sub
pop
fwait
jecxz
adc
xor
sti
std
sub
mov
xor
pop
xor
sti
sub
pop
xorl
jecxz
in
cwtl
xor
pop
adc
aam
mov
xor
mov
shlb
jle
fs
in
ja
aaa
cli
gs
cmp
mov
cwtl
and
mov
and
jnp
mov
mov
sti
dec
hlt
test
in
gs
fildll
xor
clc
xor
pop
shlb
jnp
mov
push
clc
sti
jle
fadds
fiadds
lea
mov
xor
mov
add
sub
xor
and
xor
mov
pop
add
ljmp
mov
dec
cmpsl
fcomip
cmpsl
inc
and
jmp
xor
shlb
stos
pop
in
shlb
es
repnz
jle
fisttps
ds
xchg
mov
movsb
lods
das
lea
into
cmpsl
repz
mov
imul
shlb
lods
daa
push
mov
es
mov
mov
scas
cmp
ficomps
pop
insb
in
lock
lods
mov
lods
and
jo
mov
enter
aam
fsubrl
scas
push
daa
mov
daa
repz
dec
scas
lods
xchg
mov
mov
xchg
lret
lock
inc
and
jmp
movsl
icebp
shrb
sub
xor
rcrb
push
scas
xchg
stos
dec
and
test
pop
mov
subb
shrb
fistpll
adc
into
jo
sti
incl
cmpsb
mov
call
push
mov
pop
add
lcall
dec
and
and
jmp
add
test
mov
and
sub
add
and
jmp
test
push
pop
sbb
inc
sub
icebp
adc
mov
add
test
repz
push
mov
cmpsl
std
jmp
ljmp
sub
jmp
cs
add
es
mov
es
jmp
sti
xor
sti
and
add
cmp
sti
std
sub
lahf
cld
mov
dec
insl
cmp
loop
mov
add
repnz
mov
pushl
and
push
add
sbb
mov
add
es
mov
dec
das
fcomip
das
inc
and
add
movsb
stos
jae
lods
cmpsb
mov
mov
es
cmp
mov
xchg
popa
arpl
or
and
in
mov
mov
movsb
cmp
dec
xor
sti
add
sub
shlb
les
fwait
nop
xor
jecxz
and
mov
movsb
mov
aas
sahf
jp
mov
sti
mov
and
std
in
stos
mov
pop
xchg
aam
jecxz
je
xchg
int
pop
shlb
cmp
subl
in
outsl
push
mov
lret
mov
mov
movsb
mov
dec
movsb
fcomip
movsb
inc
and
add
lahf
stos
mov
mov
sahf
push
mov
dec
mov
xlat
sahf
std
jne
scas
and
xor
decl
push
sub
in
jnp
movsb
push
mov
pop
add
stc
and
cmp
sub
cmp
add
cmp
add
cmp
add
cmp
sub
sahf
leave
fnstsw
in
sbb
sbbb
cmp
sahf
cmp
mov
clc
mov
fstpl
xchg
and
cmp
sahf
sti
adc
jecxz
sub
sub
sub
jae
sbb
cmpsb
jns
test
pop
popf
lea
lods
jbe
clc
lods
pop
jg
lods
pop
jg
lods
cmpsl
mov
mov
lods
fpatan
stos
sahf
in
mov
fstpt
lods
pop
fwait
sahf
mov
ljmp
ds
insl
lret
popf
aas
adc
fisttpl
stc
aas
mov
jle
cmp
and
inc
jmp
movl
dec
push
cmp
sbb
pop
aaa
fistpl
aaa
pop
fsubr
push
fcom
arpl
mov
cli
test
mov
add
insb
filds
push
stos
sahf
cmp
ljmp
and
sub
push
dec
pop
fcmovnu
mov
addr16
push
and
notb
pop
push
adcl
mov
loope
data16
loope
data16
dec
movsl
cmp
pop
xchg
adc
int
ss
xchg
xchg
jp
popf
sbb
xor
mov
add
mov
fstpt
fnclex
adc
dec
mov
add
data16
stos
inc
jl
cmp
nop
pop
icebp
movsl
cmp
arpl
xchg
and
cld
jae
push
ljmp
and
jle
pop
push
mov
fwait
imul
dec
mov
jp
clc
pop
sbb
loop
and
lods
mov
xor
cmp
clc
movsb
mov
fidivs
dec
das
push
mov
divb
push
jbe
out
ja
dec
ds
cmp
in
stos
clc
jge
inc
push
push
mov
aaa
js
insb
leave
add
pop
add
out
pop
xchg
push
cmp
push
test
test
cmp
popf
insb
adc
test
mov
pop
and
adc
xchg
repnz
mov
lods
mov
notb
lods
xchg
mov
adc
lods
mov
sahf
add
mov
out
xor
xchg
cmpb
sbb
cmpsl
in
cmp
ja
ljmp
xchg
stos
scas
and
mov
and
sbb
mov
sarb
sti
mov
dec
add
xchg
and
and
mov
pop
repz
sbb
add
popa
test
push
sbb
cli
cmpl
pop
lcall
add
xchg
jge
sbb
sub
cs
cmp
mov
in
addr16
mull
sub
pop
stc
leave
sub
hlt
or
push
add
fstps
pop
fucomp
mov
jge
inc
cmp
int
add
in
test
pop
mov
add
int3
or
adc
jno
movsb
cmp
and
cs
push
jg
mov
inc
mov
fwait
loopne
test
dec
cli
pop
fldt
sub
fwait
push
xor
scas
sub
mov
mov
fcoml
pushf
aam
fdivrp
out
dec
inc
scas
out
test
mov
push
stos
sahf
insb
ds
jb
and
sub
sub
outsb
add
mov
sub
daa
frstpm(287
lea
imul
test
mov
xor
and
test
mov
repz
xchg
imul
xchg
jg
or
mov
push
and
xchg
imul
inc
pop
call
xchg
scas
test
out
out
and
aas
mov
aad
and
adc
xorl
ss
mov
and
sbb
pusha
sub
out
pusha
jne
mov
nop
das
jge
out
xor
jge
popf
int3
mov
xlat
mov
xlat
es
mov
pop
xor
nop
fstp
push
sub
lock
fs
adc
sub
cs
in
in
les
dec
jge
ja
out
push
sahf
or
pop
test
sbbl
or
cmpsb
jmp
movsb
inc
adc
pop
jae
ret
outsb
sbb
movsb
lock
fs
add
add
pop
dec
mov
mov
and
dec
das
sub
ret
clc
es
into
push
xchg
dec
mov
jmp
cmp
lret
popa
mov
jge
hlt
std
lcall
push
lcall
clc
cmp
movsb
jge
mov
loopne
pop
into
and
push
push
sub
pop
xor
cltd
packuswb
push
push
fdiv
outsl
cmp
ret
push
movsl
xchg
jo
mov
pop
fisubs
or
push
push
mov
arpl
xor
or
xchg
aad
mov
fisubrs
mov
rcrb
movsl
lcall
sub
rorl
scas
in
jb
notb
stos
fcompl
inc
aas
jne
xor
mov
dec
scas
sahf
outsb
sti
xsaveopt
pminub
imul
jae
add
dec
add
sti
ja
leave
jo
faddp
or
inc
mov
test
addr16
pop
push
mov
jge
out
pop
fisubl
adc
and
enter
jmp
scas
inc
lods
arpl
mov
hlt
mov
jge
aam
xlat
pop
fisubrl
cmpsb
or
cmp
jno
jno
mov
pushf
int
jge
sbb
jo
inc
and
arpl
sub
push
sbb
repnz
sahf
dec
imul
dec
cmp
das
jmp
out
fcomps
sarb
popa
mov
int
stos
mov
arpl
jne
enter
and
je
push
sbb
adc
ja
insl
sbb
popa
mov
mov
mov
add
adc
or
pop
jae
cltd
push
adc
imul
sub
popa
loope
mov
xchg
mov
sbb
inc
sub
les
std
xchg
test
out
pop
aaa
rcr
push
lahf
in
mov
loop
mov
sahf
testb
mov
add
mov
stos
pop
or
lock
loop
fwait
mov
push
and
hlt
aam
mov
and
stc
mov
pop
ror
mov
sub
push
dec
cmp
leave
filds
out
lock
shl
mov
cmp
mov
jbe
mov
fstp
repz
out
fstps
mov
fldcw
xor
out
rcr
sub
push
push
mov
push
repz
jae
mov
xchg
ja
aaa
push
ds
push
adc
fwait
mov
push
dec
gs
mov
lods
pop
popf
clc
into
mov
mov
fadds
mov
dec
lods
push
imul
pop
lods
ljmp
mov
jge
jmp
cmp
dec
bound
mov
jmp
cmpsb
inc
jb
sti
js
pop
stc
nop
cmc
cld
push
mov
stc
sub
fnstcw
lods
mov
xlat
sahf
xchg
in
cmp
xchg
mov
or
popf
sahf
or
and
hlt
sub
push
fiaddl
scas
repz
lock
aas
sub
push
call
into
test
neg
dec
mov
or
mov
loope
out
movsl
sahf
mov
out
movsb
add
stc
inc
sub
ljmp
call
jmp
or
ja
jbe
inc
cmp
popa
ss
aaa
cli
ja
movsb
jle
mov
cmp
orb
setg
sarl
xchg
stc
adc
or
pop
jle
or
adc
xchg
inc
shll
lods
fcompl
xor
in
out
test
sbb
sub
add
es
lods
mov
aad
xor
add
scas
pop
mov
ss
iret
movsl
jns
inc
pop
fmull
push
imul
lea
jmp
and
imul
or
fidivrs
or
sub
in
aaa
dec
adc
repz
lods
push
data16
adc
cmp
mov
mov
in
adc
mov
sbb
hlt
in
imul
je
outsb
cltd
enter
loopne
mov
addr16
repnz
cmp
cmp
cli
add
push
sbb
and
fsubl
xchg
aad
sub
push
lret
dec
lock
xor
cmp
and
xor
pop
lock
das
mov
push
mov
stos
cmp
movsb
lret
inc
scas
inc
sahf
add
pop
fndisi(8087
cmp
loopne
pop
imulb
jge
jg,pt
pop
pop
sbb
add
push
jmp
dec
data16
arpl
sahf
jge
dec
data16
in
aaa
je
addr16
pusha
mov
sahf
xchg
nop
push
pop
in
out
fiadds
inc
sahf
mov
aad
stos
add
sbbb
dec
mov
jl
data16
sub
mov
xor
int3
test
sahf
mov
mov
dec
cmpsb
mov
xor
sub
rclb
or
mov
icebp
subl
rol
stos
test
xor
aaa
inc
xchg
sub
push
push
pop
xchg
cmpl
or
jmp
shl
nop
insl
push
cs
or
scas
and
cmpsl
mov
cmpsl
andb
and
dec
int3
inc
adc
and
cmp
stos
gs
dec
lds
sub
std
push
fnsave
and
sub
pop
mov
stc
mov
xor
nop
jmp
leave
push
xor
js
push
xorl
mov
test
ds
subl
push
push
adcl
fimuls
in
rorb
jbe
test
aaa
out
adc
aas
mov
pop
dec
mov
cli
mov
in
hlt
dec
ja
adc
sub
cmpl
xor
mov
outsb
mov
enter
out
xor
xor
cmp
and
sbb
into
xor
mov
mov
stos
ds
xlat
inc
data16
or
pop
data16
cli
mov
cmpsb
dec
xchg
inc
pop
mov
cmpsb
cmp
mov
mov
xchg
ret
jmp
or
cmp
loopne
mov
mov
mov
clc
add
mov
pop
das
mov
rcrb
out
outsl
fsub
xchg
dec
mov
pop
fs
movsb
xchg
xor
inc
in
imul
inc
inc
scas
mov
pop
out
ja
pop
in
std
xchg
cmp
in
dec
inc
xor
mov
test
or
push
arpl
push
add
in
jmp
icebp
xor
sarl
inc
das
rcr
cmp
out
loopne
rol
fcoml
jmp
popf
xchg
sub
mov
rclb
popf
mov
call
inc
xor
lret
jnp
pop
std
arpl
xchg
data16
sub
mov
daa
fstpl
loopne
daa
and
mov
stc
xlat
mov
loopne
pop
test
lcall
in
adc
jp
dec
pop
stos
push
xor
mov
mov
xor
das
int3
scas
mov
addr16
add
into
je
fcomp
scas
ffreep
sub
movsl
adc
sbb
pop
sbb
xor
scas
inc
sub
mov
sbb
ljmp
jle
stc
aad
subb
movsb
xor
outsl
stc
adc
es
cmp
dec
sub
out
stc
pop
lret
dec
sub
insl
leave
mov
mov
pop
movl
cmp
mov
and
add
test
mov
pop
jne
pop
lods
pusha
out
fsub
aad
xchg
repz
pop
and
insb
cmp
sbb
mov
xchg
mov
mov
pop
aas
mov
cmp
nop
xchg
push
inc
mov
xchg
shlb
inc
sti
lret
sub
in
popa
pusha
jb
xor
jl
sbb
xor
jnp
popf
nop
pop
mov
push
pop
test
xorb
rcrb
mov
aam
dec
mov
xchg
fdivl
sub
jge
adc
cmp
sbb
pop
cmpsb
mov
xchg
mov
or
jno
lods
xor
popf
movsb
and
adcl
sbb
test
mov
xor
hlt
xor
and
and
inc
mov
xor
mov
mov
and
popf
mov
lods
xor
mov
xchg
mov
mov
xchg
out
pop
or
pop
inc
xchg
fadds
cs
xchg
and
outsl
mov
mov
or
xor
mov
addr16
dec
mov
cmp
mov
dec
adc
imul
add
in
mov
rorb
jno
movsb
pop
mov
xor
dec
push
aas
push
sub
mov
and
dec
std
fdivs
mov
cwtl
add
mov
xchg
xlat
imul
jnp
stos
test
mov
in
lcall
sbb
mov
and
imul
pop
ljmp
adc
jge
sub
repnz
andb
shll
xor
incl
test
movsb
stos
incb
push
pop
sbb
mov
xlat
xor
sarb
sub
add
sahf
mov
sub
dec
cs
pop
mov
bnd
es
loop
dec
inc
push
popf
cmp
lcall
popf
ds
sahf
cmpsl
rcrl
dec
xchg
imul
lcall
xor
fidivs
mov
fidivrl
or
mov
add
xlat
mov
rcrb
stc
inc
and
imul
sahf
stos
dec
sbb
dec
mov
cld
ficomps
lods
mov
nop
gs
sahf
lods
mov
mov
jp
int3
cmp
cmpsl
ds
fcoml
push
cli
jg
add
xchg
xor
movsb
ret
ss
int
sub
mov
fisttpll
push
adc
sub
pop
push
sub
pop
dec
mov
lods
mov
mov
xor
pop
jbe
sub
pop
shlb
and
loop
mov
ljmp
xor
pop
xor
das
loop
mov
add
loopne
mov
push
cmp
push
jae
in
mov
lret
out
xor
addl
jae
xor
lock
sub
daa
sub
sar
xchg
jno
cmp
les
sbb
shl
mov
scas
scas
cmpsb
sub
das
out
fsubrs
daa
mov
out
loopne
dec
adc
or
and
mov
repnz
js
iret
out
mov
out
lds
mov
jl
sbb
aas
jbe
and
je
jno
lock
outsl
push
dec
pop
icebp
adc
and
movsb
ljmp
mov
lock
jno
xchg
and
in
lods
mov
xor
and
or
sub
in
out
mov
movsl
lods
add
mov
scas
jne
imul
mov
push
in
test
jge
mov
in
scas
and
scas
ret
mov
in
jle
call
sar
out
loop
mov
push
inc
out
daa
hlt
fmulp
pop
sbb
lahf
repnz
fiadds
adc
mov
and
mov
push
sbb
sub
cs
cmp
and
scas
add
lods
into
call
adc
mov
pop
rol
dec
fwait
mov
push
or
daa
mov
dec
mov
xor
xor
xor
adc
mov
mov
outsb
inc
fwait
sub
mov
movsl
and
in
int
mov
ret
mov
loopne
cmp
rcrb
into
aaa
inc
jae
cltd
loop
cmp
shl
rorl
or
test
xor
das
ljmp
mov
jo
call
sub
mov
loop
fcomps
loop
push
adc
sbb
jnp
cmp
ja
int
xor
pop
es
add
aaa
mov
push
pusha
xchg
fnstenv
pusha
push
js
jge
sub
out
mov
xor
cmp
and
or
add
cmp
and
pop
out
andb
pusha
aad
insb
sub
mov
push
and
notb
cmpsl
pop
push
rol
xor
sti
xchg
mov
xchg
xor
call
cmp
movsb
andl
sub
mov
adc
add
cs
dec
jl
aad
xchg
or
shr
into
dec
sub
rcll
fldcw
ss
xchg
mov
loopne
xchg
mov
mov
pushl
xchg
hlt
pop
shlb
insb
hlt
mov
loopne
scas
daa
and
sub
lds
icebp
xchg
test
sub
xchg
sbb
jg
xchg
movsl
insb
lock
jmp
mov
mov
and
int
flds
mov
mov
insl
imul
jno
fsts
xor
stc
dec
iret
mov
push
mov
pop
lds
xor
repnz
dec
sbb
and
and
jmp
or
in
das
cld
sub
pop
daa
jl
xchg
jle
sub
and
mov
pop
adc
cmp
imul
sub
pushf
cli
mov
stos
stc
in
insl
pushf
mov
push
ss
stc
ljmp
pushf
fs
js
je
pop
nop
sahf
cmp
mov
xlat
cltd
arpl
ss
push
popf
test
pause
xabort
ficoms
and
sbb
data16
mov
mov
cmpsb
test
std
adc
daa
mov
pop
cmpb
dec
lahf
addr16
xchg
popa
mov
mov
mov
sbb
and
cmp
rcr
cs
loopne
mov
cmp
and
insb
jge
mov
leave
jmp
and
inc
cs
lods
mov
scas
dec
push
jmp
xchg
ljmp
movsb
in
aaa
xorl
push
in
aam
je
std
add
cwtl
push
add
sarl
sbb
mov
arpl
lods
inc
sbb
xchg
cs
xchg
pop
pop
testb
ss
lcall
mov
and
imul
sub
mov
pop
jmp
mov
and
andb
xor
das
mov
fs
cwtl
out
das
les
and
popa
sahf
cli
mov
inc
or
inc
lea
faddp
xchg
sahf
std
sahf
dec
or
sbbb
or
add
mov
fiadds
sahf
mov
rcrl
shl
sahf
xchg
mov
jp
sbbb
mov
iret
stos
fs
cmp
in
mov
pusha
or
adc
popf
mov
jmp
mov
fstps
xchg
jg
pop
mov
call
mov
stos
in
and
push
xor
mov
jae
and
pop
in
inc
sbb
daa
mov
ljmp
sbb
push
pop
mov
data16
loopne
jg
test
inc
addl
hlt
adc
int3
inc
scas
push
inc
es
push
xor
cmp
mov
ljmp
nop
add
lds
push
nop
popl
xchg
mov
xchg
mov
sub
mov
pop
into
xor
cmp
ds
sbb
repnz
and
cwtl
movsl
fadds
orb
es
nop
sbb
cmp
sbb
mov
cmp
fs
and
push
and
jge
fadds
vxorps
fldl
dec
inc
mov
scas
rep
add
cmp
fs
and
ret
fidivrs
scas
scas
rolb
pop
lds
rorl
inc
sahf
pop
xchg
mov
mov
push
push
mov
daa
or
into
scas
sub
push
cltd
dec
aas
inc
hlt
movsb
lds
inc
xor
cs
inc
sbb
mov
dec
sahf
cmpsb
mov
jb
mov
sbb
push
inc
jp
dec
sahf
aas
mull
dec
push
out
push
inc
push
or
and
push
repnz
xchg
outsl
nop
inc
mov
es
fnstenv
sub
adc
mov
jle
cltd
repnz
mov
lds
int
inc
jp
xchg
mov
inc
movsl
push
imul
xor
pop
ficompl
adc
int3
mov
pop
mov
cmp
mov
mov
sahf
inc
push
stc
jle
adc
xor
and
sbbb
push
inc
imul
jb
ficomps
mov
jae
mov
sub
mov
jp
movsb
daa
fs
cmp
scas
add
popf
inc
stos
dec
std
dec
xchg
push
enter
hlt
aas
xlat
mov
sub
dec
incb
aas
lods
fcomps
rclb
and
stos
popa
xchg
or
mov
das
mov
jnp
mov
mov
sub
shlb
mov
push
clc
les
pop
das
fldl
fsubp
jbe
and
adc
sub
fs
es
or
dec
jmp
dec
daa
mov
xlat
mov
test
fisttpl
inc
aam
lods
xor
shrb
mov
mov
pop
jecxz
xor
and
rolb
sahf
lods
sub
es
dec
sub
sub
gs
and
jmp
sbb
ja
push
mov
pop
fistps
orl
xor
cld
mov
data16
sahf
or
inc
dec
sub
and
or
and
mov
lcall
lods
mov
and
out
mov
and
and
dec
js
mov
sub
mov
inc
sub
push
pusha
dec
mov
sahf
in
add
lock
jae
fldt
data16
scas
mov
int
dec
mov
fisubrs
pop
inc
test
push
scas
add
dec
stos
cs
push
xor
push
fs
xchg
mov
xor
fisubrs
stos
loop
mov
out
nop
cmp
call
pop
das
adc
mov
sub
popf
out
add
scas
push
sbb
inc
xchg
lods
and
add
mov
inc
dec
adc
mov
rolb
scas
mov
flds
push
push
jge
mov
xor
popf
fmul
aaa
inc
sub
das
les
fisttpll
ret
out
repnz
clc
das
mov
sbb
jae
sbb
enter
and
test
adc
test
fxam
repnz
notl
scas
sti
outsl
or
pop
xor
inc
daa
call
mov
loop
notb
dec
fidivrs
fwait
push
fmull
jae
xchg
fs
das
and
jno
scas
pop
int
loope
pusha
les
ficoms
cs
in
push
repnz
test
inc
dec
and
call
mov
and
es
int
ds
lea
and
sbb
xor
dec
and
mov
mov
mov
mov
lahf
fadds
push
sbb
stc
push
pop
mov
xorl
repz
cmp
xor
fidivs
cmp
push
daa
xchg
stos
dec
iret
jmp
or
xor
push
scas
mov
ret
outsl
inc
jnp
imul
popf
add
repz
push
pop
mov
cld
std
std
ljmp
cmp
pop
sahf
js
pop
mov
ljmp
neg
push
push
mov
push
xlat
inc
fmull
out
mov
int
dec
ss
add
xchg
lods
fdivrs
repnz
mov
mov
mov
mov
incb
cmpsl
and
dec
stos
jge
mov
test
stc
mulb
mov
mov
push
aam
sbb
clc
cmp
xor
adc
push
jecxz
pop
shlb
push
lret
dec
push
xchg
mov
push
orl
add
ss
and
adc
mov
out
xchg
xorl
test
pop
jbe
mov
fimuls
nop
inc
and
fildl
jae
add
mov
jge
xchg
lret
repnz
fsubrs
add
add
xor
xor
movsl
mov
mov
pop
add
push
mov
adc
mov
addl
pop
lret
fs
jmp
lret
xchg
pop
mov
scas
and
pop
popl
xor
fidivs
add
int3
fcomps
fisubrs
stos
mov
inc
rolb
mov
data16
or
iret
pop
mov
jbe
mov
xchg
popf
pop
popa
lock
mov
imul
lahf
mov
lahf
gs
jmp
pop
sub
neg
sub
sub
imul
sahf
cmp
push
xchg
jmp
xor
sub
mov
mov
xor
cli
xor
scas
fwait
mov
das
xor
push
dec
cld
divb
sub
xor
dec
arpl
fcoms
inc
fistpll
inc
sbbl
xor
dec
not
push
data16
ror
ds
push
mov
and
pop
cltd
sub
loop
into
icebp
das
scas
lahf
dec
dec
fisubs
popa
jmp
imul
shrl
mov
test
mov
xchg
push
mov
notl
call
mov
pushf
add
jge
lea
dec
les
and
das
pushf
fwait
scas
imul
movsb
lods
loop
aad
jo
mov
in
addr16
push
shll
scas
imul
out
lds
shll
dec
adc
sbb
popf
mul
pop
loop
push
leave
xor
sbb
jecxz
mov
xchg
call
out
xchg
or
idiv
sbb
and
add
sbbl
ds
pop
rep
sahf
pop
std
cmp
aam
imul
int
mov
sbb
dec
dec
inc
mov
rclb
sub
scas
lods
mov
xchg
out
dec
xchg
dec
fdivrp
sbb
lods
ret
data16
dec
fldenv
jnp
cmp
ja
addr16
aam
cmp
xchg
jge
pop
and
out
fwait
pop
sahf
test
cmpsl
lret
sbb
sbb
mov
jp
mov
pop
dec
pop
and
pop
stos
js
and
mov
mov
mov
cmp
mov
xchg
test
sbb
mov
mov
push
add
xor
jo
cli
test
sub
jno
cmpsb
pop
fwait
mov
and
aas
mov
jle
stos
pop
inc
push
sbbb
cmp
dec
dec
scas
mov
lods
pop
dec
and
adc
aad
jge
xorl
jl
or
sbb
repz
pop
cmp
in
cwtl
cmpsl
dec
out
pop
cltd
lea
jp
sub
repz
sub
or
xchg
cmpb
push
aad
test
clc
es
xor
jmp
cltd
imul
push
popf
sub
arpl
stc
push
aam
xor
push
sub
loope
dec
pusha
or
adc
sahf
repnz
inc
in
cmp
test
sahf
mov
add
cld
pop
pop
adc
mov
mov
cmp
lods
xor
push
and
jnp
cmp
adc
lahf
dec
fs
xor
outsl
dec
mov
inc
xor
inc
out
push
jno
jge
cmp
int
and
jno
mov
daa
test
fsubl
mov
mov
out
xchg
jns
push
pop
test
mov
repz
adc
movsl
in
push
lds
into
push
ja
lret
cmp
mov
lods
or
in
mov
pop
push
loop
add
sub
mov
lds
fwait
pop
subb
jno
sub
shrl
in
popa
and
mov
pop
gs
mov
adc
insb
push
scas
movsb
pop
repz
gs
lcall
mov
push
cmpsb
movsb
pop
dec
cs
adc
push
mov
pushf
xor
lds
sub
outsb
addb
mov
call
sahf
pop
inc
adcl
push
xchg
pusha
pop
lods
cmp
xchg
addr16
mov
and
in
cmpb
inc
std
mov
cmpsl
sub
jp
sub
popf
mov
push
mov
jno
out
or
test
xor
repz
aam
sbb
std
pop
mov
lea
in
ficomps
aad
repz
lds
pop
daa
add
cmp
mov
ja
call
stos
push
in
sbb
lods
jge
dec
sarb
cmc
addr16
mov
push
cmp
stos
ds
cmp
loope
mov
sbb
imul
adc
test
mov
sahf
aam
std
inc
nop
ror
jecxz
outsb
mov
xchg
xchg
fistl
fsubp
xchg
add
clc
cmp
sub
cmp
mov
mov
popf
das
scas
inc
jne
sub
rcrb
xchg
mov
sub
sbb
testl
aaa
loope
mov
in
stc
add
stos
sahf
dec
jo
mov
arpl
jge
inc
mov
loop
adc
inc
lret
mov
popf
sahf
jle
lods
lods
cmp
sahf
scas
repz
fildll
mov
push
or
mov
ljmp
mov
cmp
in
stc
popl
pop
outsb
push
mov
sarl
popa
mov
jle
pop
xor
loope
dec
mov
jge
jg
gs
ja
and
out
xchg
mov
add
xchg
push
push
mov
lds
aad
aas
mov
dec
mov
mov
xor
push
jns
ds
in
inc
cwtl
scas
lods
inc
and
stc
pop
dec
dec
cltd
jne
cmp
dec
xor
icebp
dec
pop
sar
pop
mov
mov
int
popf
enter
repnz
xchg
add
push
cltd
ja
xchg
cmp
mov
fwait
adc
icebp
lcall
cmp
das
cmc
fsts
clc
call
adc
xlat
popa
fnstenv
push
into
sbb
test
cmp
shll
sub
mov
adc
xchg
mov
sbb
out
outsl
sub
movsl
xchg
add
push
cmp
mov
aad
xchg
sbb
jmp
jae
hlt
shl
mov
pusha
js
pop
in
xor
call
xchg
adc
jmp
cmp
lret
repz
sub
sub
mov
call
movsb
aam
je
dec
imul
jbe
dec
popf
stos
jle
into
cs
mov
enter
aam
jge
inc
add
jne
cltd
sub
jle
mov
push
scas
mov
push
cmp
or
stos
sub
and
sub
fdivl
mov
mov
fisubrl
push
es
icebp
aaa
push
mov
or
scas
pop
lods
aad
stos
xchg
cmpsb
mov
mov
fnsave
fbstp
fs
out
cld
sub
sti
push
sbb
imul
mov
dec
loope
xor
divb
cmpl
xchg
adc
pop
mov
dec
leave
xor
push
jp
cmpsl
icebp
test
shlb
lret
jbe
imul
mov
push
cmpl
int
inc
in
mov
movsl
fcmovb
jecxz
jmp
xor
movsb
mov
adc
mov
xlat
mov
nop
sbb
add
pop
and
jnp
add
and
jnp
push
jnp
stos
aam
mov
push
jnp
dec
insb
xchg
mov
int
jnp
movsb
pop
mov
add
cmpsb
sbb
in
in
ss
add
mov
lods
add
or
repnz
cmp
xchg
mov
mov
dec
jo
lods
mov
lahf
aas
add
out
xchg
cmp
push
lret
popf
clc
mov
inc
mov
movsb
daa
pusha
ss
in
icebp
inc
fimull
test
dec
clc
mov
push
imul
leave
mov
fisttps
lods
imul
sub
aam
mov
sti
mov
hlt
repz
sub
push
pop
inc
jg
jp
sarl
lock
cli
mov
sub
mov
scas
fadd
mov
out
pop
mov
sub
inc
div
xor
mov
call
clc
mov
xchg
scas
mov
or
xchg
jp
aam
outsl
push
clc
xchg
lahf
sahf
mov
xor
fiaddl
std
ljmp
sbb
ljmp
call
sbb
cmp
and
dec
aas
dec
sub
hlt
add
pusha
leave
mov
jbe
cs
dec
mov
sbb
mov
fnstenv
pop
in
mov
ret
cmp
cmp
mov
mov
sub
jbe
lods
ljmp
inc
xor
xchg
mov
mov
mov
aaa
mov
fadd
loope
mov
sbb
cmc
jbe
je
push
mov
add
repnz
orl
cmp
jge
inc
lock
shrb
sub
pop
fstl
mov
mov
adc
cmp
mov
jne
push
and
hlt
repnz
cmp
sub
jbe
inc
ja
out
pop
xchg
sub
dec
push
push
stos
pop
and
and
mov
test
lods
mov
fists
sahf
mov
cmp
mov
rcll
out
xchg
xor
push
inc
movsl
mov
push
and
xchg
mov
pop
cwtl
jmp
notb
arpl
std
mov
mov
fistl
mov
pop
inc
mov
popf
adc
aam
xor
or
xchg
jo
add
and
cmp
fldenv
jns
roll
out
imul
popa
mov
call
fld
pop
test
push
sub
movsb
dec
out
add
and
ja
leave
movsb
inc
call
cmp
in
outsb
adc
lahf
or
mov
mov
loop
cli
or
add
outsl
dec
andl
and
mov
and
rorl
shll
cli
popf
sbb
and
adc
shlb
ret
or
and
and
inc
and
push
cmpsb
cmpl
add
mov
and
pop
repz
fildll
jge
push
cli
rol
jmp
lock
and
mov
ds
mov
std
fptan
std
jg
mov
cmp
mov
cmp
sub
in
mov
std
gs
xor
clc
xor
push
loopne
inc
frstor
mov
dec
jo
sub
scas
and
stos
adc
sbb
cmp
adc
lahf
inc
cs
lds
xor
cmp
or
mov
das
dec
out
fs
xchg
fbstp
and
pop
push
test
push
leave
cs
mov
inc
scas
cmp
sbb
std
xor
adc
and
pop
mov
xchg
cmp
sbb
arpl
shrl
adc
frstor
mov
and
lods
and
or
mov
outsb
inc
addr16
mov
xor
adc
popa
out
std
sbb
mov
add
mov
aam
mov
fmul
pop
sahf
dec
cmc
jb
push
adc
stos
dec
dec
mov
fisttpll
mov
fsubs
in
adc
cmp
test
pop
inc
out
hlt
gs
sub
adc
sbb
out
xor
mov
pop
mov
in
sbb
ret
push
push
push
mov
xchg
les
es
inc
mov
jno
xchg
data16
xchg
mov
and
lods
sub
adc
and
mov
mov
push
mov
outsl
add
stc
push
inc
je
xchg
mov
mov
pop
pop
pop
cmp
dec
icebp
xchg
sarb
push
xchg
add
cmp
cmpsl
imul
out
mov
push
inc
jne
pop
push
jl
fldcw
les
mov
lea
cmp
or
mov
lods
imul
lcall
shll
adc
mov
movsl
push
xor
sbb
mov
sbb
dec
movsb
xlat
mov
sub
popa
rcll
mov
rcrl
popf
fucompp
ja
jge
push
jle
cltd
popa
mov
adc
dec
jl
jecxz
push
jle
mov
push
scas
das
repz
mov
push
sub
ja
rolb
pop
popl
test
popf
lahf
jge
daa
subb
popa
shll
test
mov
imul
repz
fstpt
dec
clc
or
dec
ja
mov
sub
mov
jbe
hlt
movsb
aas
lret
push
cmp
inc
aad
cmpsb
sub
cmpsl
dec
xlat
mov
icebp
add
sahf
ficoml
call
out
in
enter
jmp
mov
mov
insb
pop
mov
ljmp
loope
mov
mov
push
pop
mov
shlb
xor
test
aam
aaa
pop
fistpll
movsl
jg
and
jmp
xor
mov
cmp
add
dec
ljmp
mov
stos
sub
jbe
dec
and
adc
ja
adc
sub
jmp
in
loopne
gs
xchg
sub
dec
push
subl
mov
xorl
mov
jmp
inc
dec
flds
mov
scas
sbb
fidivl
sub
imul
sbb
cmp
test
adc
shlb
cs
in
lahf
push
xchg
and
lahf
pop
loopne
pop
dec
fidivs
mov
jno
mov
jecxz
stos
xchg
data16
loop
jbe
inc
push
scas
cmp
inc
sbb
mov
or
lock
push
add
sarb
fbstp
jnp
inc
subl
pop
mov
arpl
andl
mov
xor
movsb
andl
inc
dec
jmp
gs
lds
mov
pop
inc
scas
mov
mov
scas
push
lock
mov
stos
mov
jmp
and
into
test
inc
faddl
cmp
inc
pop
jge
loope
stos
or
xchg
fisttps
int
push
stos
in
add
adc
mov
and
aaa
std
lds
xor
loop
mov
loop,pt
mov
lret
mov
inc
sbbl
jbe
mov
clc
in
sbb
or
loope
movsl
xor
cmpsl
jle
push
outsl
inc
loop
das
mov
shrl
sub
inc
add
xchg
adc
jmp
sar
pop
lahf
jge
mov
jns
mov
sub
cmc
hlt
pop
xorb
sub
xchg
mov
fcomp
rclb
fld
jnp
cmp
add
faddl
pop
test
xchg
add
addr16
repz
sbb
sub
jg
jbe
scas
inc
sub
mov
into
into
xor
in
xor
divb
scas
add
xor
xchg
mov
sbb
push
mov
repnz
inc
lods
mov
sub
pop
int
cltd
stc
cmp
mov
popa
iret
aad
aaa
xor
shll
push
rorl
shrb
xor
aas
inc
xor
pop
mov
mov
xchg
lock
sub
xor
cmc
in
stos
cmp
clc
mov
test
inc
rclb
sub
lahf
aam
jge
mov
pop
jnp
popf
std
mov
ss
ljmp
mov
mov
jle
dec
mov
jmp
repnz
sahf
or
add
mov
mov
add
jp
mov
inc
or
cmp
jge
xchg
inc
and
push
mov
adc
iret
mov
mov
dec
sub
pop
push
mov
xor
notb
jb
push
xchg
call
jecxz
call
outsb
pop
shr
aas
loopne
in
rol
xchg
or
mov
aas
enter
bound
xchg
jmp
repnz
pop
lods
test
inc
jecxz
mov
pop
imul
or
pop
mov
mov
mov
jbe
dec
lea
bound
call
inc
into
xor
lret
sub
in
cmp
mov
xor
sbb
in
dec
imul
xor
bound
ss
jne
push
xchg
lea
mov
sar
pop
dec
mov
jl
mov
js
adc
daa
sub
clc
cmp
faddp
mov
cmpb
mov
xchg
imul
sbb
sti
xor
andb
and
adc
and
jbe
orb
fdivrp
sbbl
adc
and
xchg
add
sti
xor
andb
enter
jg
dec
mov
movsl
stos
pop
outsl
scas
mov
repnz
jle
out
jae
stos
call
jbe
xor
shlb
push
mov
sbb
jg
in
mov
and
inc
pop
sub
sbb
xrelease
lahf
xchg
cmpsl
xchg
shlb
std
sarb
cli
jmp
mov
mov
outsb
xchg
hlt
sahf
jnp
mov
adc
loopne
mov
call
mov
orl
sub
xor
mov
mov
dec
and
mov
sub
jbe
mov
xchg
cmp
adc
pop
or
lods
lods
adc
dec
mov
push
int3
pusha
add
jnp
pop
subb
arpl
aad
xor
mov
fldl
or
ja
lret
jo
mov
xor
xor
rorl
rcrl
fstps
lock
mov
sub
lcall
scas
andb
xorl
dec
mov
mov
inc
push
ja
hlt
xor
pop
pop
scas
xor
sub
cmpsl
popf
mov
pop
clc
cmp
mov
push
push
outsl
ficoms
push
jge
mov
xor
icebp
in
hlt
stos
cmp
shl
lock
cltd
es
icebp
adc
mov
fsubl
mov
sub
mov
sbb
mov
mov
mov
jg
sarb
push
stc
aam
cwtl
add
clc
and
or
lods
fistl
mov
mov
pusha
fiadds
in
sahf
cwtl
push
jnp
and
imul
subl
and
xchg
repz
rol
sub
pop
jp
popf
mov
mov
ret
loopne
sarl
shrb
ljmp
lock
jno
pop
jnp
xor
and
inc
xchg
jg
sarb
push
lahf
rcrb
mov
leave
bound
nop
adc
xor
sbb
jae
sbb
repnz
push
in
iret
shl
sbb
jne
adc
loope
mov
and
pop
lahf
lret
mov
cmpsl
pop
and
cli
pusha
mov
test
adc
mov
adc
outsl
push
mov
jnp
sbb
ja
data16
test
fwait
imulb
mov
mov
add
data16
mov
rclb
jns
cmp
mov
movsl
fnop
std
mov
mov
fcomp
pop
hlt
inc
test
push
lods
and
lods
jnp
mov
push
mov
arpl
movsl
sub
test
pop
dec
daa
or
push
mov
xor
mov
push
mov
sub
pop
arpl
mov
mov
cmp
ret
stc
mov
sbb
aaa
mov
mov
xchg
cmpb
and
sahf
gs
mov
dec
xchg
jne
into
adcb
lahf
dec
fistpl
notb
xchg
xor
dec
xchg
sub
xor
push
mov
sti
loop
xor
xor
xchg
pop
xchg
out
cs
mov
repnz
mov
mov
pusha
mov
dec
ss
mov
xchg
add
in
mov
in
or
dec
inc
mov
cmp
in
pop
adc
add
clc
xor
loope
stos
or
int
in
mov
lret
ret
cmp
out
pop
scas
xor
jbe
sub
xor
in
push
adc
gs
leave
ljmp
xchg
mov
mov
xor
add
sarl
push
push
out
xlat
mov
push
fisubl
xor
out
mov
mov
mov
push
cmp
adc
sub
cs
jle
pop
adc
sbb
xor
jg
int3
cmp
push
sbb
cli
jp
dec
mov
mov
mov
scas
jge
sbb
fwait
sub
sbb
inc
hlt
aaa
mov
scas
mov
jno
test
dec
movsb
addl
cmpsl
lahf
or
sbb
inc
sahf
lods
add
fs
mov
and
cld
push
xchg
fwait
scas
test
mov
jno
cmp
mov
addr16
mov
dec
dec
push
mov
inc
jns
negb
iret
popf
in
mov
ss
mov
or
mov
mov
leave
bound
jne
mov
cltd
sbb
mov
sub
mov
fisubs
test
add
sahf
movsb
jbe
add
xchg
in
std
push
in
pop
daa
sbb
repz
call
add
aad
in
or
mov
cmp
arpl
rcll
sbb
scas
inc
daa
fidivl
leave
push
lahf
pop
pop
sub
enter
xor
push
jle
jbe
into
sbb
pop
into
sub
jle
lahf
or
cld
sbbl
in
mov
mov
and
cmpsb
mov
mov
cs
adc
fisubrl
std
adc
sbb
cs
decb
sub
push
out
mov
mov
dec
int
mov
aas
inc
dec
pop
pop
mov
xchg
inc
test
cmp
inc
jbe
pop
jnp
jg
popf
fdivrl
and
inc
sbb
dec
xchg
push
cmp
dec
dec
aaa
xchg
popf
sbb
xor
repz
ficoml
jno
lcall
xor
mov
xor
cmp
pop
popf
out
xchg
jle
jno
sbb
push
add
dec
dec
cli
leave
je
mov
push
cmpsl
inc
lods
pop
mov
ret
in
aas
sbb
push
pop
push
jmp
jle
xchg
xor
mov
popf
mov
test
inc
lods
pop
scas
inc
aaa
stos
pop
stc
push
lods
mov
lahf
mov
fldl
jecxz
mov
adc
xchg
aad
movsb
stc
inc
jle
inc
push
bound
adc
mov
mov
pop
cmp
mov
jecxz
lahf
jl
cld
in
xchg
push
mov
jbe
dec
mov
sbbb
mov
aad
add
xlat
fistpl
cmpl
xor
cmpsl
push
out
mov
je
lods
dec
ss
lds
cmc
ja
and
popf
mov
arpl
xchg
sub
jnp
cmp
push
inc
sbb
out
mov
ss
add
aad
sbb
ss
mov
in
mov
jnp
jp
pop
std
mov
out
fists
aad
ud1
and
jecxz
movsb
sub
push
cld
call
sbb
xchg
sbb
fidivrl
mov
add
jecxz
scas
jae
lret
decl
or
push
add
inc
cmp
cmp
lock
es
pop
out
inc
clc
popa
stc
andb
jle
stc
scas
inc
push
mov
mov
scas
dec
xlat
mov
icebp
sub
lock
rcrb
and
pop
add
movsb
imul
mov
mov
xchg
aam
sub
add
test
in
cmpsl
sti
pop
fsubr
loop
test
sbb
cwtl
mov
pop
inc
add
sbb
gs
js
cmp
mov
sbb
fists
and
pop
or
mov
cmp
jo
lea
and
jns
fs
jno
sbb
repz
mov
arpl
pop
xchg
ficompl
aas
jle
out
popf
subb
xor
sbb
int
std
lcall
lock
hlt
sahf
sbb
or
pusha
pop
adc
xchg
in
mov
jae
push
mov
adc
imul
daa
inc
arpl
inc
add
outsb
out
sbb
jmp
test
mov
into
cmp
pop
sub
filds
das
mov
mov
scas
movsb
repz
sub
fsubrs
and
in
cmpsl
pop
sbb
sbb
mov
inc
push
cmp
sbb
push
fnstcw
cmpb
test
sub
negb
shrb
sbb
mov
pop
mov
sub
sub
jp
mov
sub
loopne
add
jmp
sub
es
les
sbb
aad
adc
jne
cs
pop
and
xchg
xor
cltd
lock
scas
in
into
popf
xchg
sahf
jle
add
aaa
inc
cs
ss
shrl
mov
ud0
add
das
mov
cli
inc
push
cwtl
push
enter
ljmp
push
jnp
addb
add
roll
icebp
mov
and
sahf
icebp
popa
fdivs
adc
cltd
add
in
ret
mov
movsb
cld
fmuls
xor
cmp
and
sbb
lret
pop
lock
loope
ficomps
lea
add
push
mov
scas
sub
xchg
nop
lods
push
pop
aaa
fidivl
adc
cmp
dec
jle
fs
std
xorl
xchg
aaa
mov
je
xlat
pop
insl
cmp
sbb
gs
lret
pop
adc
das
add
in
icebp
pop
mov
cld
out
push
cltd
jp
cmp
fstps
in
dec
ss
or
push
pusha
loopne
lret
ds
mov
push
dec
inc
push
hlt
mov
or
fistps
pop
aam
fisttps
jno
add
inc
in
xor
pusha
sti
jp
int
dec
stc
stos
cs
into
pop
and
xchg
inc
movsb
sti
imul
cmpsl
pop
add
jle
xchg
adc
outsl
lds
int3
mov
xchg
push
cmpsb
pop
pusha
push
fisttpl
add
inc
mov
cmp
pop
jge
mov
xor
mov
xchg
ficomps
cmpsb
inc
sub
push
cmpsl
call
pushf
cmp
imul
shrb
mov
dec
xchg
mov
and
jns
rorl
inc
lods
ss
mov
dec
and
mov
shl
les
jle
lret
lahf
ds
mov
sbb
or
xchg
or
push
sbb
dec
push
fidivrs
sbb
xchg
dec
and
test
aas
inc
jbe
xchg
lcall
popf
sbb
lods
loope
gs
das
pop
xorb
lret
mov
jmp
imul
dec
lret
dec
arpl
push
ss
push
rclb
push
inc
test
pop
sub
addr16
cmp
jle
lds
dec
lock
mov
jmp
push
mov
push
call
mov
push
sahf
xor
mov
jge
mov
mov
pop
cmp
cmpsb
add
cmp
icebp
dec
pop
jge
jle
hlt
hlt
mov
cmp
adc
mov
pop
test
jno
mov
lahf
cmp
push
stos
movb
leave
scas
jmp
xor
fldenv
mov
jmp
mov
sbb
dec
out
mov
stos
push
mov
dec
xlat
mov
adc
push
jb
inc
mov
add
or
mov
mov
dec
xlat
mov
icebp
sub
push
popf
ret
aaa
pop
cli
das
ds
cmp
es
scas
mov
jl
add
es
xchg
stos
sub
sbb
add
pop
xchg
outsb
or
mov
push
xor
mov
sbb
dec
adc
push
mov
cmp
xor
push
mov
or
mov
adc
hlt
data16
dec
ja
data16
mov
sbb
lret
add
sbb
push
aas
in
sahf
push
push
inc
push
sub
mov
fs
or
xchg
pop
scas
jb
push
mov
ficoms
push
ffreep
mov
mov
mov
cmc
jge
xor
push
int
sub
adc
adc
outsb
clc
mov
and
hlt
jae
mov
mov
rcr
sbb
inc
sbb
pop
xor
movsl
push
loop
pop
xor
cmpsb
xchg
fbld
js
sub
pop
in
mov
stos
shlb
mov
lahf
xor
sub
sub
cmc
push
dec
xor
and
mov
and
and
sbb
sub
out
and
stos
dec
xchg
in
sbb
sarl
mov
bound
xor
dec
repnz
pop
cmpsb
mov
mov
mov
dec
push
arpl
xchg
stos
sbb
stos
mov
lret
mov
add
icebp
sub
sbb
mov
sbb
cmp
and
mov
mov
mov
or
cld
xchg
sbb
cmp
xchg
dec
mov
dec
xchg
push
addr16
addr16
clc
ss
cmp
es
lea
mov
xchg
insl
jmp
pop
test
sub
jge
xor
sub
dec
mov
imul
mov
mov
int
das
jecxz
mov
les
mov
and
insl
popa
insb
cltd
in
dec
dec
mov
inc
dec
mov
aaa
jns
paddb
leave
jb
mov
sbb
jns
out
cmp
dec
popa
mov
mov
sahf
inc
andl
mov
xor
push
aas
xchg
jge
test
sbb
jns
mov
lods
nop
xchg
push
stos
xchg
mov
cwtl
xor
lahf
aam
or
lock
cmp
mov
push
jbe
inc
into
mov
test
pop
add
mov
pop
sub
sbb
lahf
into
out
mov
pop
lea
xchg
inc
out
add
or
test
out
xor
gs
aad
lcall
fs
push
test
out
jmp
out
pop
add
xor
mov
cli
pop
popf
fs
sahf
fistpll
sahf
jmp
decb
jle
sahf
repnz
adc
filds
cmp
push
dec
repnz
adc
mov
aam
movsb
cltd
sahf
mov
xchg
pop
test
xchg
mov
inc
sbb
imul
xchg
lcall
cmpsb
fistpll
imul
pop
lret
push
jle
fimull
pop
add
mov
cmp
stos
shrl
pop
fistpll
cmp
cmc
ds
add
sub
std
icebp
dec
pop
pop
sub
mov
mov
test
add
daa
add
xchg
sub
and
loopne
dec
and
sub
test
scas
inc
and
jmp
sub
add
lahf
sub
mov
mov
test
add
pop
roll
cmp
jno
out
stc
mov
fdivrs
jecxz
jecxz
lods
xchg
sahf
mov
fwait
pop
movsl
sbb
stos
pop
mov
mov
push
inc
cmpb
mov
sub
mov
inc
xchg
or
aad
sbb
mov
dec
xchg
xor
int
sbb
cltd
aad
and
ja
adc
jns
mov
mov
xchg
fisubl
dec
cmc
sarl
test
daa
std
lret
jno
mov
xor
jl
sbb
lret
mov
test
fcomp
mov
mov
in
ja
mov
and
pushw
das
mov
icebp
jb
imulb
and
mov
das
dec
mov
inc
loope,pt
xor
test
mov
int
dec
dec
cmp
inc
mov
imul
push
int
mov
js
push
sub
sub
xchg
dec
adc
lcall
sbb
mov
push
jmp
push
stc
cmp
cli
divl
rorl
push
in
inc
add
std
ds
sub
inc
in
and
or
ljmp
fmuls
flds
arpl
sbb
and
outsb
outsl
loop
repnz
cmp
adc
ret
fisubrs
rcrb
imul
test
xchg
gs
lds
sub
fisubrl
dec
int
sbb
sahf
lcall
sbb
repz
sbb
pop
movsb
andl
and
mov
pop
es
jno
sbb
cmp
mov
ds
outsl
add
addr16
xchg
mov
shlb
mov
scas
out
mov
xor
and
in
movsl
sub
test
sbb
fisubs
pop
and
xor
pop
not
xchg
xor
scas
mov
push
jl
ds
xchg
inc
xor
mov
cmp
mov
add
shlb
movsb
jle
mov
jp
icebp
in
adc
fucomi
cmp
xor
mov
cmp
and
int
stos
fisubrs
in
pop
dec
mull
inc
sbb
icebp
adc
mov
push
xorb
int3
xor
adc
adc
mov
or
sub
add
jnp
aad
cmc
pop
lods
in
fmulp
data16
jnp
mov
dec
mov
mov
int3
jo
stc
mov
sbb
incl
xchg
mov
mov
inc
and
mov
add
adc
fisubrs
pushf
jecxz
pop
xor
mov
movsl
lods
stos
jnp
jae
aad
repz
es
jae
pushf
push
pop
xchg
shll
sub
scas
popa
fs
scas
std
clc
push
mov
loop
sbb
daa
mov
pop
dec
out
push
outsl
xor
movl
inc
xor
mov
out
push
in
xor
out
arpl
pop
out
hlt
lock
xor
cltd
hlt
dec
xchg
fcomps
pop
add
stos
push
inc
mov
popw
sbb
mov
out
mov
jno
mov
mov
lret
mov
dec
arpl
aaa
repnz
ficomps
mov
mov
cmpsb
test
repz
sbb
sub
adc
rcrl
mov
inc
fimuls
mov
add
jns
cmpsl
daa
std
lods
daa
mov
mov
iret
pop
stos
decb
daa
outsl
ficompl
mov
mov
mov
inc
sub
xor
nop
enter
hlt
aas
xlat
mov
push
lods
js
jno
add
sar
mov
dec
pop
push
xchg
mov
mov
mov
cmpsl
cld
ds
cmpsl
cld
push
les
inc
jle
cmpb
fs
outsl
xchg
insl
mov
or
add
pop
sub
xor
or
dec
jne
mov
aas
mov
pop
mov
xor
cmp
sar
nop
jle
jae
mov
pop
dec
push
dec
movsb
xor
or
ljmp
pop
mov
jge
in
ds
cmp
mov
out
add
loope
inc
jb
lds
sub
cmpsb
jb
into
mov
sbb
mov
int3
xchg
xor
adc
pop
mov
fwait
pop
test
ss
test
mov
xor
popa
std
lret
mov
cmp
push
jp
cmpsb
mov
popa
aam
inc
cld
mov
call
call
pop
pop
or
subl
mov
mov
pop
stos
imul
sahf
jnp
pushf
std
add
jmp
mov
pop
push
jg
add
mov
push
mov
test
pusha
add
das
pushf
inc
dec
fadds
ljmp
xchg
mov
dec
jp
mov
sar
test
hlt
in
sub
and
fnstsw
sahf
adc
sub
cmp
mov
lods
ffreep
aaa
stc
or
pop
dec
and
lods
sub
mov
test
sub
imul
movsb
repnz
jle
pop
mov
xchg
mov
jae
in
stos
pop
add
fdivs
cmp
lods
cmc
dec
clc
sahf
jp
lods
mov
mov
xchg
fisttpll
dec
mov
pushl
shr
adc
mov
dec
imul
fcomps
ret
mov
mov
jl
or
pop
lea
and
push
xchg
inc
mov
cmpsl
jg
inc
cs
popf
addb
mov
repnz
sub
cmp
stc
mov
int3
filds
jl
out
sarl
jmp
mov
mov
in
xchg
add
lcall
lret
call
in
cmp
out
andl
std
pop
xor
incl
sub
cmp
lret
sub
mov
mov
ja
fidivl
mov
sub
cwtl
insl
hlt
adc
addr16
inc
ljmp
daa
lods
mov
mov
fadds
pop
lret
cwtl
insl
idiv
sbb
add
push
mov
outsb
mov
push
inc
lahf
mov
shr
scas
adc
adc
fldcw
cltd
push
lahf
scas
insb
out
je
adc
ret
addr16
dec
cmc
xor
mov
push
pop
push
cld
mov
lods
cwtl
dec
lods
mov
cmpsl
lret
imul
in
insl
xchg
jg
pop
aas
adc
imul
jle
and
gs
cld
sar
mov
aas
mov
sub
cmp
lea
fnstenv
xchg
dec
dec
xor
or
aas
andl
adcl
movsb
clc
xor
pop
push
std
cmp
adc
mov
cmp
stc
aas
lds
inc
lret
mov
fnstcw
out
xchg
jo
adc
sub
jnp
notb
xchg
mov
pop
sahf
sbb
xchg
jbe
sub
sti
rcr
loopne
cltd
add
adc
add
jle
into
mov
stos
sub
mov
popf
push
int
out
scas
rorl
or
dec
dec
mov
pop
cmp
mov
cmpsb
sbb
movsl
scas
inc
mov
sbb
mov
mov
xchg
push
add
xchg
fidivl
lods
xchg
inc
scas
pushf
pop
fisubrl
mov
or
repz
lret
sbb
popa
ret
aas
lret
test
dec
scas
add
in
fimuls
jmp
push
pop
lods
lahf
mov
inc
pop
popf
in
sbb
sbb
mov
loope
sub
lahf
fwait
ss
inc
fistps
and
les
fdivr
or
sbb
jnp
aam
mov
pop
or
dec
loopne
and
push
cld
mov
mov
stc
test
shll
sub
cmp
cwtl
mov
test
jg
push
rcrb
or
cmp
test
inc
sbb
add
add
in
jecxz
push
ret
gs
or
stos
mov
xlat
jns
mov
and
sub
jl
or
mov
std
popf
mov
test
fwait
cmpsb
popf
mov
in
cld
xchg
mov
jp
jbe
jnp
mov
push
pop
and
mov
and
mov
ret
jns
and
cli
mov
push
bound
push
inc
leave
lods
mov
insl
cmp
lods
cld
sbb
sub
cli
movsb
mov
call
dec
aaa
cmp
adc
std
mov
pop
out
dec
gs
mov
xchg
pop
and
mov
cmpsb
lcall
inc
xor
test
jno
je
test
sub
pop
mov
daa
in
es
mov
xchg
popa
adc
movl
sub
and
cmp
and
mov
mov
mov
ss
in
daa
add
clc
dec
lcall
shl
cmpsb
cli
outsb
jae
cmp
inc
lods
mov
bound
cmpsb
adc
pop
testl
fnstcw
xor
scas
push
sub
push
loopne
cmp
scas
fldln2
pop
dec
pop
sbb
dec
lods
xorb
in
mov
rcrb
or
mov
cmpsb
jle
cmpsb
mov
sub
add
loop
xorb
pop
add
popf
pop
mov
ds
add
add
sbb
mov
repz
popa
fcompl
inc
cmp
rcl
adc
and
mov
fisttpll
ljmp
xchg
testb
std
into
mov
into
push
sub
dec
ja
cwtl
xor
pusha
out
jmp
push
je
leave
mov
pop
jecxz
pop
in
inc
mov
in
jns
xor
mov
out
mov
clc
pop
movsb
in
xor
jnp
test
xchg
fdivrl
mov
inc
dec
mov
and
dec
lds
and
in
sub
xor
and
push
imul
add
int
lcall
push
mov
adc
mov
daa
daa
lcall
lods
mov
add
jmp
add
js
inc
mov
sbb
fdivrs
push
xor
fstpl
int
and
std
out
nop
push
push
xchg
sub
add
enter
mov
inc
sbb
div
sub
es
lret
mov
lret
push
mov
sbb
stc
inc
lds
cmpsb
and
out
mov
jle
inc
cmp
mov
imul
cmp
mov
loope
cmp
xor
jnp
jg
and
data16
lock
xchg
pop
fdivs
mov
out
jnp
add
stos
and
into
jo
adc
lcall
mov
push
std
mov
enter
clc
and
push
inc
fimuls
or
in
incb
and
dec
movsl
add
fdivp
mov
dec
sbb
cmp
iret
inc
test
dec
scas
mov
outsl
mov
jno
dec
and
pusha
push
and
pop
pop
pop
ret
dec
cmp
xchg
xor
div
adc
idivb
stc
rclb
add
fdivr
rorb
data16
andb
xor
js
inc
movsl
movsl
shrl
out
inc
in
add
jnp
or
push
pop
cmp
lret
xlat
jge
xchg
mov
mov
scas
stos
pop
out
jge
vpscatterqd
cld
enter
cmc
mov
mov
cmp
pop
lods
pop
std
mov
scas
in
scas
dec
rclb
test
xor
pop
mov
mov
cmpsb
pop
adc
inc
pop
movsb
loope
pop
cld
mov
add
mov
sbb
sbb
std
in
fstps
shrl
fnsave
cmpsb
push
mov
xchg
mov
pop
xchg
fldt
adc
or
sbb
bound
outsl
je
xor
mov
inc
ljmp
fnclex
push
icebp
mov
popf
cmpsl
xor
push
sub
ljmp
and
xor
cmp
jge
dec
fiadds
ss
push
xor
xor
lds
pushf
sub
aaa
dec
xor
sarl
mov
inc
mov
into
cs
mov
push
mov
push
xor
pushf
push
push
inc
push
in
ffree
sub
mov
dec
hlt
out
sahf
repz
sub
cmp
dec
jp
push
dec
cmp
xor
push
sub
push
mov
mov
xchg
or
call
lods
clc
sbb
call
jp
mov
mov
xor
jnp
jo
fiaddl
mov
fnsave
jge
xchg
sub
xor
push
mov
and
sbb
jnp
pop
les
xor
mov
mov
fsubs
or
stos
call
popf
scas
movsl
jno
push
and
out
mov
out
jg
push
lods
nop
push
and
sbb
aas
add
xor
jp
mov
and
and
leave
mov
mov
mov
out
mov
imul
leave
aaa
and
movl
mov
pop
pusha
shll
cmp
clc
adc
dec
mov
repz
outsb
cld
imul
shrb
jnp
lahf
adc
inc
ds
mov
cmp
in
dec
fcomps
push
pop
in
hlt
mov
rcrl
sub
nop
cmp
mov
mov
rolb
and
or
push
cmpsb
jne
xchg
xchg
shrl
xchg
mov
inc
imul
pop
clc
mov
out
xchg
hlt
xchg
popf
inc
cmpsb
mov
shrb
cltd
mov
push
inc
jge
pop
fwait
test
cwtl
rorl
lods
inc
mov
nop
jle
jnp
sbbl
repz
fdivr
inc
js
ja
push
jbe
dec
pop
jge
push
mov
add
repnz
ret
mov
lods
push
or
jmp
mov
sub
adc
xor
adc
stos
arpl
pushf
addr16
xchg
aam
inc
cs
sbb
scas
shl
inc
das
cmp
mov
clc
dec
lahf
inc
sub
cmp
imul
out
cmpsb
mov
mov
nop
mov
andb
sbb
dec
and
pusha
test
mov
mov
lds
xchg
sbb
and
and
mov
test
sarb
addr16
outsl
push
mov
add
dec
mov
lret
and
scas
and
ds
push
xor
lods
scas
or
jbe
push
insl
inc
std
mov
lods
mov
add
fadds
dec
xor
add
pop
leave
nop
sbb
dec
scas
out
inc
in
fwait
xor
sahf
jl
add
jp
leave
stos
and
or
cs
ja
inc
leave
mov
sbb
jo
pop
in
mov
fldenv
xchg
sbb
mov
lret
sbb
dec
sub
popf
pop
cmp
mov
cwtl
sbb
imul
xchg
pop
je
clc
and
mov
pop
scas
sbbb
xchg
andb
dec
fwait
rol
xor
fwait
and
loope
cmp
sub
xor
pop
xchg
mov
jnp
sahf
or
mov
sbb
jp
cmp
pop
pop
xor
lahf
xchg
adc
jns
cltd
lods
mov
ss
mov
jmp
cmp
mov
cmp
fsubrl
cmp
and
ljmp
in
xor
fmulp
sub
outsb
cmpsl
add
test
mov
sub
mov
leave
cld
fcomps
lahf
lcall
lret
stos
pusha
pop
xchg
daa
out
pinsrw
popa
icebp
rorb
dec
test
repnz
enter
dec
inc
fcmovnb
or
jnp
or
xor
add
adc
cmp
mov
adc
je,pt
and
cmp
xor
xor
mov
scas
in
test
mov
popf
mov
xor
or
int
xor
push
fistpll
cmp
loope
aaa
mov
stos
stos
fidivrs
push
sub
and
mov
dec
in
int
out
int3
mov
in
cmc
mov
mov
shlb
out
adc
push
sbb
xchg
cltd
movsb
cmp
out
loope
cmp
popf
fsubr
stos
mov
dec
fisubrs
in
stc
dec
scas
loope
add
test
test
addr16
mov
dec
pop
lock
mov
shlb
push
popf
push
adc
fxch
das
sahf
xor
inc
mov
mov
test
lods
mov
dec
dec
pop
pop
cmp
jle
js
add
cld
lds
mov
xor
pop
scas
xor
aaa
int
mov
movsl
leave
dec
xchg
mov
jecxz
loopne
pop
jae
xorl
jle
ss
and
jmp
lds
sbb
rcrb
mov
int
xor
or
cwtl
andb
mov
inc
test
dec
adc
int3
add
xchg
pop
int3
jl
push
mov
xor
mov
fucomip
xor
mov
inc
fwait
shrb
jge
sbb
push
push
add
push
pop
push
daa
out
mov
outsl
repnz
mov
dec
enter
xor
cwtl
in
or
aas
popf
sub
pop
jl
daa
mov
mov
pop
in
call
inc
mov
pop
fistpl
mov
lods
std
mov
xchg
mov
jp
das
inc
mov
dec
push
pop
test
fcmovb
sahf
sbb
iret
and
mov
in
clc
dec
inc
lahf
pop
cmp
mov
ss
out
mov
mov
adc
dec
cmp
sub
aam
xor
cmp
dec
aaa
icebp
repnz
sti
mov
mov
movb
sbb
jmp
fildl
ds
pop
rolb
push
push
sbb
mov
and
xor
lods
movsl
subb
sbb
in
ds
aad
mov
mov
inc
adc
cmp
fisttpl
jne
js
leave
lcall
mov
enter
dec
jl
mov
movsl
lods
leave
mov
inc
outsb
out
cmpsb
int
leave
into
shl
ds
push
out
mov
daa
sti
push
or
pop
sub
xor
int3
xor
jl
sbb
sahf
adc
mov
push
scas
inc
je
mov
dec
rorb
jmp
lods
daa
data16
lods
xor
mov
lahf
and
mov
lds
mov
pusha
dec
movsb
sub
pmaxub
add
pop
and
jle
and
mov
popf
imulb
sub
cmp
adc
push
lods
xchg
xchg
fmuls
shll
jne
cld
pop
mov
leave
or
mov
popf
mov
leave
test
test
into
leave
jecxz
push
dec
call
bound
adc
push
pop
add
mov
sub
es
test
cmpsl
mov
and
imul
lret
mov
lret
sbbl
mull
cmc
cmp
mov
mov
sar
pop
mov
mov
test
pop
in
pushf
movsb
testl
mov
int3
inc
xor
insb
pop
xor
movsb
adc
xor
push
fdivrl
sub
xchg
mov
mov
sahf
mov
sub
xchg
adc
add
stc
rorl
pop
xchg
xchg
js
leave
cmpsb
and
dec
ret
add
lods
lahf
jmp
push
push
mov
lods
int
add
sahf
pop
xor
push
ljmp
add
insl
xchg
fldcw
clc
cld
sahf
sti
sub
mov
fstpl
jl
xchg
xchg
leave
add
gs
stos
xchg
push
call
fidivs
push
mov
mov
inc
push
cmc
xor
cli
inc
xchg
orb
js
push
ja
inc
push
roll
stos
in
sbb
es
in
cmp
outsb
adc
push
mov
jmp
dec
dec
or
outsb
push
sbb
jno
fidivrs
mulb
test
mov
movsb
xor
in
pop
test
lock
mov
stos
movsl
mov
ljmp
notl
lahf
cmp
cmpsb
popf
and
and
add
add
lea
push
sub
pop
add
mov
xchg
inc
inc
popa
fistps
push
jp
push
fcmovne
insb
mov
out
mov
test
push
stos
mov
sbbb
std
stos
xlat
in
into
pop
ja
pop
test
nop
fnstsw
cmp
out
mov
mov
add
mov
xor
cmpb
inc
mov
fldcw
sbb
cli
mov
cs
stos
and
xchg
lods
xchg
jle
dec
jle
mov
divb
push
into
mov
fisttps
aaa
push
or
adc
cmp
out
sbb
dec
popf
inc
and
xor
pop
dec
loope
lea
jns
das
enter
xorb
sahf
enter
test
or
add
mov
xchg
inc
subl
cmp
cmp
push
lock
loopne
mov
xor
or
pop
and
fwait
arpl
dec
out
test
jge
in
pushf
lods
push
js
mov
push
pop
lock
mov
mov
out
push
pop
out
adc
pop
jbe
or
sbb
and
sti
inc
adcl
mov
addr16
negb
sbb
insb
dec
and
in
stc
shl
lock
insb
lret
loopne
xchg
rep
sub
sbb
lahf
sbb
cmovae
lret
or
stos
lods
sub
inc
sub
fisttpll
mov
outsb
mov
outsl
hlt
push
insb
cmp
outsl
sub
or
push
mov
fstl
ret
mov
aas
pop
add
aam
loop
cli
inc
fldcw
into
pop
xor
std
test
xchg
push
add
mov
lods
test
in
sbb
push
sti
sbb
mov
xor
mov
lea
inc
mov
faddl
mov
jbe,pt
sub
mov
fnstsw
test
mov
loope
mov
push
jb
lret
in
sub
mov
mov
mov
sub
inc
cmpsl
hlt
mov
add
dec
enter
test
xor
dec
stos
add
or
mov
clc
in
or
or
rcrb
test
cs
cmp
dec
out
fdivrs
rcrl
divps
in
xor
test
sub
mov
popf
adc
popf
rcrb
dec
popf
scas
push
xor
bnd
dec
movb
add
nop
pop
mov
or
jg
pop
daa
add
xacquire
xchg
fdivr
jge
shl
ljmp
add
out
int
aad
xlat
test
dec
jl
adc
mov
leave
cmp
test
loopne
aaa
push
into
mov
xchg
sub
movsb
lahf
dec
int
sub
stos
or
sbb
lock
xchg
aas
iret
jmp
mov
test
loope
or
mov
ss
cmp
and
xchg
test
stos
les
aaa
pop
aas
sub
xchg
mov
aaa
es
lock
lds
gs
ss
shl
mov
sub
clc
or
mov
in
gs
push
mov
imul
fmull
xor
lock
clc
inc
dec
data16
mov
inc
xor
xchg
ret
into
fisubs
xchg
into
inc
xchg
dec
xor
cltd
repnz
mov
stos
decb
mov
cmp
test
int3
fcomps
mov
mov
sub
cmp
daa
insb
add
shrb
test
loop
mov
add
shrb
mov
sub
sub
das
out
adc
mov
fisubrs
mov
jnp
fnstsw
jge
in
jecxz
jns
adc
xchg
aaa
dec
inc
ds
stos
mov
dec
add
mov
xor
cmp
pop
mov
mul
repz
mov
jne
lock
mov
stos
ds
ja
leave
testl
add
adc
mov
scas
cmp
ret
mov
in
dec
inc
pop
mov
add
add
cmc
aaa
clc
sti
dec
sub
daa
fs
mov
scas
xchg
jnp
addr16
ret
inc
mov
mov
xchg
jecxz
aaa
dec
mov
cmp
sbb
ror
ret
imul
lds
es
iret
stos
push
mov
pop
push
inc
in
add
fwait
int
dec
dec
xchg
sbb
and
cmpsb
data16
lods
das
mov
sub
mov
xor
lock
or
xor
repz
add
jmp
leave
mov
or
jecxz
sbb
mov
int3
outsl
adc
mov
mov
movzbl
jp
jne
jns
cmpsl
rcrb
adc
imul
xor
ljmp
test
sbb
jmp
call
xchg
rcrb
cmp
movsb
push
push
inc
mov
inc
cwtl
jmp
fdivrl
jg
scas
sub
or
sbb
add
scas
xor
pop
inc
sbb
aaa
test
data16
les
jl
loopne
sbb
int
push
inc
add
or
pop
mov
mov
int
jbe
rcrl
daa
and
xor
mov
mov
jno
or
aad
sbb
cs
push
xlat
add
outsb
rcll
fisttpl
lods
sub
sub
ss
in
lea
lods
jnp
dec
ss
xchg
push
arpl
aaa
cmp
or
push
lret
ds
mov
in
int3
in
dec
popf
in
add
cmp
cmpsl
or
mov
loop
push
xchg
dec
pop
clc
cmp
inc
fcomps
jmp
pop
lods
sti
mov
sub
mov
stos
icebp
jo
inc
daa
icebp
cmpsl
push
dec
stos
lahf
cmpsl
lds
repz
sbb
mov
lret
xchg
test
cmpsb
mov
mov
fsincos
inc
cwtl
out
aaa
icebp
cmp
lods
mov
mov
int3
sub
mov
xor
shlb
xor
data16
insb
orb
push
jne
xor
xor
jns
stos
push
repz
mov
cmp
cli
mov
or
popa
sbb
jne
imul
jne
push
add
jge
cmpl
jge
fdivl
shll
dec
ss
aam
std
mov
mov
xor
xor
lret
lahf
std
adc
pop
leave
xor
xchg
ss
mov
mov
push
btr
jnp
sbb
ret
jp
add
dec
jne
repz
mov
fsubrl
cmp
mov
or
and
cmp
stos
stc
push
push
outsb
shrb
loope
jl
xor
jp
or
xchg
movsb
dec
and
int3
lret
and
jne
jmp
dec
mov
jns
cmpsb
push
or
or
mov
out
shlb
fwait
or
bound
xchg
lret
lds
das
xchg
mov
loopne
ret
ffreep
mov
sub
jo
mov
rcrb
sbb
dec
cmpsl
pop
xor
mov
sbb
push
mov
mov
lock
or
adc
arpl
fiadds
fs
and
xor
xchg
mov
aas
push
out
inc
or
inc
pop
int
test
or
push
xchg
push
lods
gs
adc
mov
inc
ja
imul
aaa
mov
sbb
jne
jmp
out
xor
mov
movsl
cmc
jmp
pop
sub
scas
xchg
xchg
mov
outsl
mov
inc
cli
mov
pop
adc
xchg
movsb
vphsubdq
into
cltd
out
cmp
cltd
scas
xchg
mov
sahf
adc
sbb
test
stos
dec
push
cmpsb
stos
insl
dec
mov
push
push
mov
xchg
sahf
mov
out
mov
push
lds
push
adcb
dec
inc
cltd
pop
cs
loop
cs
stos
jp
cmpsb
out
cs
out
lods
movsl
cltd
mov
push
aad
adc
pop
andl
sub
xor
and
out
shl
pop
fcmovnu
inc
dec
mov
lds
mov
out
lods
out
out
fmul
inc
pop
inc
pop
shll
sub
mov
movsl
in
sub
and
clc
dec
xor
mov
xchg
insb
outsl
mov
cltd
nop
pop
xchg
aad
inc
mov
push
pop
lock
es
icebp
aas
outsb
addl
loopne
mov
push
ret
call
in
or
mov
mov
rcll
pop
push
int
dec
out
inc
enter
push
push
sbb
xorl
xor
mov
mov
mov
int
sub
jge
and
mov
sahf
test
xor
test
add
sub
mov
popf
mov
movsb
xchg
into
dec
jecxz
jno
pop
out
mov
addr16
sbb
mov
xor
pushf
fisubl
clc
cli
popf
fdiv
xchg
jmp
pop
sti
xchg
scas
hlt
shlb
and
jge
je
and
rcrb
aam
nop
scas
lahf
arpl
loop
xchg
mov
inc
mov
push
fdivs
test
loope
out
fadds
lock
pop
in
sar
sahf
lods
fwait
push
in
in
sahf
cli
mov
dec
xchg
or
fstl
adc
out
loop
inc
lds
test
cmp
aad
fdiv
inc
mov
mov
mov
push
and
add
sbb
repnz
std
xchg
dec
aaa
icebp
imul
push
pop
mov
jb
stc
and
fwait
jecxz
or
pop
cmp
cmp
imul
mov
xor
mov
cmp
leave
mov
push
dec
dec
mov
bound
clc
out
jbe
cmpsb
fstl
loop
lret
outsb
xchg
pop
hlt
cmpsl
dec
out
fnstsw
pop
dec
sub
mov
enter
fildl
jbe
and
mov
add
stos
jle
mov
xchg
loopne
dec
jbe
xor
push
xacquire
imul
aas
cwtl
ss
inc
mov
mov
dec
outsb
addr16
xchg
xor
sub
lahf
in
jmp
in
mov
aad
dec
sahf
mov
and
mov
mov
push
pop
inc
sbb
lock
xor
popa
jl
mov
mov
jne
popf
mov
xor
out
add
dec
jl
sub
jnp
scas
and
fcompl
fdivr
lods
fcompl
js
lds
push
imul
mov
into
dec
es
es
adc
adc
dec
rcr
adc
cmpsl
jecxz
shl
mov
mov
cmp
cld
jg
cld
jge
cld
std
shlb
sub
lock
xorl
popf
sub
out
movsb
fisttpl
mov
dec
in
dec
mov
pusha
mov
xchg
sub
vpshlw
mov
fs
push
fldt
jge
pop
pop
pop
sbb
lock
test
xchg
jl
xchg
dec
popf
aad
xor
pop
mov
fidivs
pop
push
test
cmpsb
pop
dec
push
inc
mov
inc
inc
das
xor
std
mov
scas
lret
cmp
push
repnz
adc
fisubrl
sbb
stos
xchg
xor
test
jmp
aaa
sbb
push
xchg
clc
cmpsl
mov
push
add
sbb
ret
loopne
mov
shlb
pop
and
cld
int
lods
add
mov
testb
ss
mov
int
adc
mov
scas
mov
out
scas
mov
mov
enterw
add
dec
pop
dec
push
in
repnz
ret
sbb
jno
sar
stos
mov
pop
push
out
dec
enter
mov
xorb
mov
lret
xchg
test
fistpll
cmp
mov
xchg
mov
inc
mov
arpl
mov
push
fcmovnb
mov
sub
push
int
into
insl
cwtl
mov
lds
fwait
push
idiv
dec
mov
mov
sti
and
pop
and
std
jno
ds
nop
push
jge
mov
mov
cmpsl
mov
and
aaa
pop
fsub
mov
mov
les
mov
adc
sub
in
xor
add
stos
aas
lret
cmp
stos
dec
cmp
mov
in
xchg
lahf
shrb
sahf
lock
and
mov
shrb
cwtl
mov
aas
test
or
lods
push
test
jle
pop
pusha
mov
aas
push
mov
in
call
shrb
xchg
jbe
and
loope
lcall
mov
rorb
mov
test
cmp
sbb
ret
pop
xor
lock
movsb
cwtl
ds
pop
bt
adc
mov
popf
xchg
stos
mov
rol
sahf
scas
sbb
cld
xor
jle
addr16
enter
mov
and
xchg
dec
dec
out
das
mov
cltd
add
cld
andb
rcrl
mov
mov
mov
ds
fstpt
shrb
aad
mov
jnp
int3
cmp
sub
stos
dec
into
mov
cmp
xchg
dec
add
movsb
xor
push
mov
shll
stc
ficomps
fninit
lods
xchg
jnp
scas
dec
xchg
cmc
push
cli
movsl
ret
mov
mov
xchg
enter
ss
push
mov
fcompl
popa
in
ds
xor
mov
je,pt
in
add
sti
outsb
push
mov
ffreep
ss
mov
fwait
iret
clc
add
cmc
inc
ss
sub
call
mov
mov
push
ja
sbb
ljmp
inc
mov
in
mov
cmp
pop
sahf
adc
xchg
mov
repz
bound
jo
lahf
sub
adc
adc
sbb
fucomip
fbld
lahf
mov
shlb
jg
pop
loope
sbb
pop
sub
cltd
cli
adc
arpl
mov
mov
xchg
imul
mov
mov
dec
mov
iret
insl
inc
cmp
mov
test
pusha
mov
dec
incb
or
testl
xchg
inc
and
xor
pop
shl
mov
bound
aaa
inc
or
lock
das
mov
addr16
pop
mov
mov
cmpsb
mov
add
sbb
and
fisubrs
lcall
hlt
push
sbb
mov
std
aaa
mov
pop
or
mov
and
jg
jl
mov
and
adc
ds
jbe
mov
or
out
pop
imul
jle
fcomi
xchg
sbb
mov
mov
mov
popf
leave
ljmp
popa
pop
idiv
sahf
mov
cmp
scas
test
scas
mov
pop
test
in
mov
repnz
mov
push
out
jp
lcall
cmp
repnz
jae
jne
xor
xor
sti
in
push
popa
pop
das
pop
xor
ds
cmp
or
mov
cmp
mov
shrl
andb
mov
adc
jge
and
xchg
pop
arpl
scas
sub
gs
pop
mov
jle
mov
mov
out
pop
push
jp
lods
cmp
aaa
mov
rcrl
pushf
dec
dec
int
bound
mov
sarb
mov
cmp
xor
mov
mov
aas
mov
cwtl
mov
jmp
sub
daa
mov
mov
sar
pop
mov
lea
xor
xor
mov
sbb
jge
jae
shll
mov
repnz
jle
addr16
sarb
sahf
dec
sub
adc
jge
sti
mov
jne
dec
cld
push
lods
ds
pop
dec
mov
cltd
in
xchg
add
add
mov
and
fsubrs
test
ds
imul
aaa
jle
cli
mov
shrb
mov
dec
sarl
mov
xor
mov
xchg
in
adc
int3
push
fs
addr16
adc
xor
jbe
jnp
jmp
std
mov
fstpt
andl
jl
pop
shlb
dec
jbe
sahf
jg
sahf
and
mov
inc
pop
pop
mov
cld
inc
mov
cmp
jecxz
xchg
mov
jne
xchg
push
pushf
push
sbb
fcmovbe
cwtl
ficompl
inc
mov
cmpsl
cld
jge
jb
mov
push
mov
mov
lret
fucomi
imul
lock
xlat
insl
mov
fidivrs
mov
mov
jg
xor
mov
push
mov
dec
mov
stc
cmp
cwtl
mov
inc
xor
mov
cltd
dec
in
mov
sub
sbb
adc
adc
xor
mov
add
fistpll
stc
inc
xor
mov
fsub
fwait
shr
push
cmpsl
inc
mov
mov
mov
add
xor
jecxz
aaa
cmp
cmp
dec
cmp
push
rcrl
stos
mov
shrb
jae
inc
or
lods
mov
mulb
aaa
push
daa
repz
lds
cli
dec
or
mov
pop
inc
and
or
push
mov
repz
std
out
mov
in
add
fildl
cmp
mov
mov
movsb
sbb
jle
enter
jge
pop
mov
pop
mov
mov
inc
mov
jg
aad
fadds
pop
dec
xchg
fstps
mov
ds
enter
pusha
xor
flds
sbb
sbbl
mov
sarb
xchg
cmp
test
pop
jnp
loop
dec
popf
and
inc
and
pusha
arpl
jle
out
add
int3
das
jnp
sub
mov
pop
xor
icebp
call
push
dec
es
mov
mov
mov
cmpsb
pop
addr16
sbb
stc
mov
stc
mov
cmpsb
adc
pop
inc
push
or
mov
add
add
jge
jne
inc
mov
std
std
inc
xor
or
mov
jge
and
or
jo
das
loopne
push
sub
fcompl
nop
rorl
mov
adc
inc
xor
das
fwait
rorb
and
add
mov
ret
cmpsb
push
jo
pushf
jnp
sti
add
ljmp
and
popf
xchg
adcb
dec
out
icebp
bnd
xor
shlb
sarb
fstl
mov
jecxz
dec
inc
outsl
fnstenv
push
xrelease
cmp
stos
mov
fldenv
rorb
cmpsl
out
cmp
cmp
xchg
mov
ret
mov
sahf
fcompl
mov
cmp
popf
pushl
xchg
lds
add
hlt
testb
clc
cmp
rcl
xchg
cld
in
addb
in
pop
loop
mov
out
pop
je
outsb
int
jp
daa
sbb
mov
sbb
cmc
jae
or
xchg
sbb
mov
push
sahf
cmpsl
adc
insl
jmp
in
inc
adc
xchg
sub
flds
push
call
or
fwait
or
push
lds
divb
roll
aad
jae
outsb
stos
test
mov
mov
lods
xlat
mov
in
fsubs
call
enter
int3
cs
sub
mov
jg
and
push
dec
and
in
mov
fsubrl
pop
and
cmp
jo
jae
lods
sub
or
div
mov
add
mov
xor
mov
roll
pop
iret
add
shrb
das
popf
cs
js
sbb
inc
lods
orb
rcrl
mov
mov
mov
enter
sbb
hlt
in
inc
sbb
jmp
cmpsl
xor
mov
jnp
fsub
fs
movsb
out
inc
jg
add
or
mov
clc
js
mov
or
inc
in
shlb
insb
jle
jle
and
stos
sub
jle
pop
mov
sti
movsb
ss
imul
pop
dec
aad
rorl
and
dec
mov
mov
fidivl
sbb
cmpsl
notrack
dec
pop
mov
outsb
cld
pop
cld
mov
and
xchg
jmp
sbb
in
lea
insb
sub
adc
fdivl
dec
pop
adcl
test
addr16
cld
jmp
cmp
test
mov
xchg
mov
mov
std
pushf
imul
sub
test
movsl
sahf
jg
lods
out
call
test
push
xlat
mov
lods
jge
loopne
call
mov
dec
sub
sar
xchg
sbb
pop
es
inc
dec
jle
das
sbb
inc
push
lahf
hlt
jl
xchg
or
push
sbb
mov
xor
push
sub
mov
fs
push
gs
jg
sahf
inc
mov
jns
lds
js
lods
xor
push
mov
push
insb
shlb
mov
adc
push
and
lods
mov
xchg
mov
rclb
jge
lods
mov
pop
lahf
mov
leave
lods
and
sub
xchg
lods
enter
jge
lods
xchg
push
popf
cltd
sbb
shrb
mov
lods
stos
fildl
xor
xchg
lods
popf
pop
int
adc
iret
pop
mov
xor
and
jne
fildll
add
cmp
or
mov
mov
fs
sbb
mov
nop
xchg
shrd
mov
enter
lods
sbbb
pop
mov
add
xchg
xor
sahf
add
cld
dec
shrl
fdivr
push
mov
sub
pmaxub
lods
xchg
aaa
pop
push
std
jl
pop
lods
pop
add
jae
dec
test
pushf
addr16
mov
clc
js
aam
mov
pushf
mov
insl
test
sti
aam
das
mov
add
cmc
shrb
mov
sarb
lods
sub
jp
scas
clc
sbb
lret
das
repnz
loop
jnp
push
dec
dec
ljmp
rclb
loopne
or
shll
push
and
sahf
xchg
pop
pop
out
loop
sub
sbb
lret
xchg
or
lret
fwait
xchg
push
divb
push
aas
cltd
push
bts
addr16
inc
pop
lret
loope
push
or
cmp
es
movsb
mov
stos
scas
mov
pop
icebp
pop
enter
idivl
call
ret
int
or
inc
aaa
add
fists
mov
sub
frstor
xchg
mov
stos
loopne
popa
or
jge
idiv
add
lock
fs
xchg
rcr
xor
das
rdtsc
xor
inc
icebp
int
lahf
fnstenv
or
xchg
das
xchg
sbb
cmp
mov
lahf
mov
sahf
pop
stos
sub
flds
mov
mov
and
test
and
dec
jae
rclb
cwtl
xor
roll
dec
cmpsl
sub
rcrb
or
xor
mov
xchg
xchg
push
jmp
push
fldl
push
xchg
cmpsl
test
lock
mov
add
js
lahf
nop
mov
xchg
xchg
sub
mov
jno
popf
jge
xchg
sub
inc
mov
shlb
cwtl
sbb
jmp
shlb
jb
rol
hlt
mov
jg
pop
std
rcrb
sub
xor
leave
mov
cs
test
sbb
test
mov
mov
jne
fs
int
sbb
fcomp
mov
fdivrs
xchg
aam
ficomps
aas
add
push
adc
lcall
sahf
lahf
mov
xchg
in
xchg
push
int3
mov
fistpll
jge
jno
mov
mov
lret
sbb
movsb
inc
xor
xchg
clc
pushf
lret
jg
mov
cmpsb
dec
sub
mov
fisttps
xchg
mov
mov
sahf
mov
dec
pusha
xchg
shrb
popf
mov
repnz
out
aaa
sub
test
std
aas
xchg
cmp
lock
cmc
mov
arpl
aaa
pop
lahf
lcall
jae
mov
mov
mov
inc
test
fldt
in
aas
ret
mov
pop
pusha
adc
stos
jg
cmp
cld
mov
mov
mov
sbb
std
int3
mov
mov
pop
sahf
lods
sbb
stos
mov
popf
xchg
add
jle
sahf
test
xor
popa
out
aas
sbb
sahf
xchg
dec
out
jl
fisubrs
daa
mov
cmp
lea
lods
inc
jmp
popl
aad
fs
jp
aam
mov
sbb
add
xchg
pop
lods
mov
sub
mov
stos
iret
mov
out
pusha
test
add
test
push
loop
jge
pusha
in
sbb
pop
inc
roll
outsb
in
out
sbb
out
stos
daa
imul
mov
inc
xchg
jg
inc
inc
mov
and
sbb
mov
and
ret
dec
int3
xchg
add
cs
adc
mov
sahf
lods
repz
adc
fistps
in
arpl
mov
mov
lcall
addr16
aam
lahf
sahf
jmp
lods
mov
and
lock
xchg
popa
adc
negb
test
scas
xor
sub
inc
scas
lahf
sar
push
mov
pop
mov
lea
popa
sub
mov
das
push
cmpsb
xchg
lods
mov
pusha
sbb
mov
push
sbb
shlb
hlt
mov
aas
lret
mov
dec
mov
jmp
scas
adc
mov
xchg
mov
and
mov
test
or
sbb
scas
mov
dec
mov
cmp
andl
fildll
mov
mov
stos
lea
push
fbstp
fistps
and
mov
mov
filds
cltd
xchg
mov
add
xor
aaa
ds
sub
fadds
dec
sub
rol
mov
xor
clc
test
push
cmpsl
stos
icebp
popf
inc
xchg
sahf
stos
xchg
ret
scas
mov
rorb
pop
stos
pop
fcomps
push
mov
shl
std
sub
pop
icebp
mov
dec
scas
sahf
repnz
inc
mov
stos
imul
mov
into
add
scas
mov
test
test
shlb
stc
jle
test
cs
cmpsb
xchg
cld
mov
fildll
into
insb
jl
jp
mov
in
lods
push
cld
mov
jecxz
mov
xor
sahf
imul
adc
mov
xor
popa
mov
arpl
sahf
lahf
gs
inc
data16
lock
sahf
aaa
in
mov
shl
lods
mov
lods
in
mov
jge
cmc
add
cmp
push
mov
ret
inc
xlat
mov
mov
push
loope
cmp
xchg
mov
jle
sahf
fcomp
add
xchg
mov
in
movl
add
cmp
cmpsl
dec
sub
incb
mov
pop
aad
mov
lods
and
movsb
out
mov
cmp
adc
mov
inc
dec
sub
sub
mov
mov
popf
dec
or
or
test
into
and
mov
arpl
pushf
xchg
sub
jmp
repz
cmp
pop
scas
hlt
stc
out
std
psraw
pushf
cmpl
adc
arpl
loopne
cmp
daa
imul
lret
lahf
xor
movsb
popa
add
jne
cmp
jg
sbb
and
les
adc
mov
sub
sahf
mov
mov
fs
scas
pop
mov
movsb
lret
xchg
out
mov
imul
xor
cmp
mov
xchg
sub
mov
test
xlat
mov
cmp
mov
pushf
cmp
mov
mov
data16
mov
push
popl
adc
add
mov
mov
push
mov
jae
fs
push
fs
xchg
add
push
sbb
mov
inc
jno
mov
sbb
mov
pop
xchg
test
arpl
lcall
pop
movsl
or
fisubs
pushf
rol
mov
shlb
call
int3
out
ds
pop
dec
add
in
mov
pop
sahf
dec
and
arpl
mov
sub
rep
sahf
and
pop
lahf
sahf
out
add
test
add
and
push
scas
cmpsb
std
push
ljmp
ret
std
adc
ret
fsubrp
arpl
lods
jge
movsl
dec
push
mov
std
lea
sub
test
pop
fsubl
js
mov
shlb
in
mov
pusha
stos
mov
fbstp
gs
sub
stc
jle
sti
lods
mov
xor
popa
scas
cmp
mov
pop
mov
testb
shlb
mov
sahf
inc
sahf
in
sub
sbb
sahf
cmp
mov
jns
mov
mov
and
sahf
popf
imul
cli
pop
std
cs
test
xor
cmp
andb
pop
mov
push
in
push
jle
in
sbb
xchg
arpl
cs
mov
mov
test
mov
std
mov
addr16
add
sbb
xor
popa
in
mov
flds
hlt
rorb
rcll
jge
aam
jge
mov
mov
pusha
int3
lds
mov
out
sahf
test
stos
ret
std
add
stc
sahf
sahf
and
mov
inc
cld
mov
mov
or
outsb
xchg
sbb
aad
xchg
mov
mov
adc
arpl
lds
out
cmp
jg
mov
mov
je
incb
in
jae
call
adc
in
fwait
rcrb
mov
xchg
sbb
pop
fwait
and
mov
lock
push
sahf
sub
nop
mov
xchg
xchg
lods
test
test
pop
fcompl
test
mov
xchg
sub
sub
mov
jg
xchg
sub
es
sbb
mov
scas
repnz
fsub
mov
popf
mov
sub
inc
stos
jbe
xchg
pop
mov
dec
mov
push
je
mov
adcl
pop
mov
popf
stos
pop
inc
xorl
lods
pop
xchg
fidivrs
lods
sbb
push
ret
pop
pop
stos
test
movsb
mov
movsb
xlat
in
push
xchg
test
and
dec
sbb
fdivs
pop
fnstsw
adc
mov
popf
call
incb
jno
mov
pop
popa
hlt
cmp
pop
dec
mov
fsubrl
mov
shrb
push
lret
lods
dec
hlt
mov
call
cmpsb
xchg
dec
push
mov
push
mov
test
mov
mov
sub
lahf
dec
jns
inc
xchg
jns
daa
inc
mov
push
daa
std
mov
rcrl
mov
popa
push
mov
adc
sahf
pop
mov
dec
neg
jns
test
shlb
in
push
mov
jns
mov
dec
cmp
mov
sbb
insl
scas
sar
inc
push
xor
mov
and
cmp
sub
movsl
std
scas
mov
movsl
repnz
pop
scas
in
leave
jle
imul
and
popa
or
mov
jle
mov
sub
idiv
repnz
lret
pop
std
aam
sbb
jnp
scas
mov
lea
in
mov
cmp
in
mov
add
xchg
les
mov
fiadds
push
jne
mov
lea
in
mov
cmp
xor
popa
push
fsubrl
mov
mov
js
lods
imul
into
scas
xchg
into
test
lods
ss
sbb
pop
in
roll
cmp
cmpsl
xchg
inc
add
sahf
lahf
stos
mov
pop
shl
pop
sahf
movsl
sbb
popa
push
mov
jae
sbb
adc
pop
or
sahf
mov
jno
out
shlb
sub
inc
popa
dec
push
ljmp
and
sarb
in
sahf
mov
in
ljmp
test
popa
scas
adc
mov
mov
int
sbb
popf
xchg
movsb
ss
mov
clc
mov
pop
loope
mov
mov
and
scas
inc
in
cld
xor
scas
repnz
mov
mov
sbb
mov
cmpsl
push
in
mov
sbb
scas
jno
mov
sahf
sub
sahf
lahf
adc
inc
scas
sub
pop
xor
fdivrp
daa
mov
subb
popa
sbb
in
mov
clc
mov
cs
mov
mov
in
shlb
cmp
mov
test
adc
mov
stos
iret
ror
call
movsl
xor
std
xchg
add
pop
mov
or
mov
xchg
fadds
mov
push
cmp
faddl
dec
testb
bound
mov
loopne
add
sahf
scas
sub
cmp
mov
ds
stos
fimuls
lahf
sub
cmp
push
mov
not
or
jmp
pushf
imul
fisttps
lret
pusha
cmp
popf
xchg
pop
push
xchg
mov
sbb
fdivrs
push
push
mov
cmp
test
adc
xchg
xor
add
lea
fcomp
pop
pop
addr16
mov
out
fdivs
lods
sub
bound
call
mov
add
fldenv
pop
push
fnstsw
fdivrl
jge
inc
scas
sub
and
shll
pusha
js
pushf
inc
in
insl
mov
aas
lret
mov
not
xchg
call
scas
inc
scas
scas
repz
mov
pop
mov
sahf
sahf
cmp
cmpsb
sub
movsb
hlt
ds
std
into
scas
xchg
into
movsb
stc
int
dec
movsb
mov
lcall
pop
mov
or
loopew
pushf
dec
dec
aam
mov
mov
mov
test
out
sbb
mov
or
mov
sahf
xchg
mov
scas
sbb
std
jecxz
test
mov
mov
xchg
jge
iret
sub
mov
popf
lahf
int
sahf
clc
xlat
sahf
sbb
xchg
push
clc
movsb
jae
mov
lock
test
dec
push
mov
in
mov
pusha
cmp
cmpsb
cli
aam
into
scas
inc
adc
flds
lret
cmc
sbb
push
loopne
xor
sub
pusha
movsb
xchg
into
scas
stc
das
scas
xchg
push
sahf
mov
test
out
les
xor
lods
mov
addr16
dec
sbb
jle
adc
stos
xchg
push
lock
sahf
lods
xchg
std
jle,pt
in
sub
popa
movsb
lock
and
mov
lock
jle
sbb
inc
lret
scas
xchg
cmp
sub
pop
scas
std
xor
xor
jno
mov
cmpsb
xor
cs
stos
pop
mov
pushf
testl
xchg
andl
mov
in
mov
mov
sub
mov
xchg
jno
mov
mov
mov
jne
jno
adc
mov
push
or
or
mov
ja
lret
jns
mov
adc
mov
mov
or
jno
movsb
mov
test
pop
lods
mov
xchg
pop
mov
cmpsb
or
mov
xor
or
test
into
test
test
mov
scas
inc
xlat
stos
fbstp
int3
mov
jno
lods
jbe
lods
mov
into
mov
xchg
mov
lods
scas
jbe
scas
fisubrl
test
xor
out
xchg
sub
popf
and
orl
out
xor
push
pop
xchg
mov
add
dec
ror
clc
lea
inc
xlat
mov
mov
jnp
inc
cmpl
fistpll
mov
jl
loope
mov
push
mov
fs
xor
mov
popf
mov
xor
xor
xorl
jae
mov
lahf
andl
dec
int3
std
inc
ja
mov
mov
sbb
mov
xchg
fs
add
out
mov
fisttps
movsb
or
sahf
inc
inc
scas
cmpb
cmpsb
dec
sub
imul
mov
xchg
mov
add
mov
shlb
xlat
stos
fbstp
mov
hlt
jg
inc
xlat
lods
fbstp
lahf
stos
sahf
shlb
dec
sub
sub
cmc
sahf
shlb
pop
jp
add
xor
fcom
pop
pop
aam
pop
mov
mov
test
clc
xchg
xchg
mov
lods
mov
test
stos
filds
sub
nop
or
mov
out
aaa
xchg
mov
pop
add
xor
outsl
movsb
jnp
sbb
push
mov
mov
test
lcall
jno
mov
call
scas
jge
xor
dec
mov
pop
mov
cld
jne
xchg
lods
mov
stc
inc
mov
adc
mov
mov
cli
pop
mov
movsb
or
add
lahf
mov
push
xchg
sub
inc
push
stos
jle
pop
lods
xchg
xchg
xor
or
sub
mov
xlat
stos
out
mov
jnp
dec
in
sahf
sahf
sbb
jg
fistpll
lods
dec
sub
mov
divl
into
das
mov
cld
adc
repnz
mov
xor
mov
stc
add
add
xor
fdivs
loope
aam
pop
add
xor
enter
pushf
clc
repnz
fcmovb
mov
dec
mov
hlt
adcl
xlat
mov
jl
mov
lret
mov
xchg
mov
push
mov
mov
or
testb
mov
pop
lea
hlt
pop
cltd
fistpll
imul
clc
xchg
jb
xlat
mov
cmp
adc
mov
inc
pop
mov
xor
mov
repnz
push
mov
daa
mov
jns
ficompl
inc
adc
jge
mov
mov
or
stos
inc
into
sub
jnp
sbb
repz
xlat
lods
out
mov
cmp
xchg
dec
xchg
mov
lods
scas
jbe
das
mov
std
add
sub
adc
repnz
into
xor
pop
test
adc
mov
xor
cmpsb
mov
pop
add
xor
adc
lea
sub
sbb
mov
xorl
mov
cmp
sub
mov
pop
mov
xor
xchg
or
sbb
jg
mov
mov
test
into
pop
fldt
jge
pop
mov
lods
mov
mov
stos
pop
mov
mov
push
mov
pushf
or
add
test
jecxz
jns
stos
pushf
clc
adc
fiaddl
or
push
je
xchg
mov
xor
or
sub
mov
inc
dec
stos
mov
sub
hlt
jg
ficompl
mov
sub
fsubr
mov
lret
fcmovnu
mov
sub
lahf
sahf
and
mov
mov
sub
mov
cld
imul
dec
push
mov
xor
sahf
xor
xchg
xchg
mov
adc
add
int3
push
mov
ds
sub
mov
cltd
or
sbb
mov
ja
jle
jle
add
arpl
cmp
mov
fwait
cmc
mov
clc
cmp
dec
xchg
and
sub
mov
adc
pushf
cli
add
cmp
jp
mov
lret
adc
mov
cmp
mov
xchg
dec
sub
imul
sbb
mov
jmp
mov
dec
subl
andl
mov
lods
cmp
cltd
push
mov
mov
jge
mov
jne
cmp
mov
and
add
mov
jle
mov
test
cmp
dec
push
mov
xor
popa
hlt
in
push
ds
sahf
mov
popa
jl
scas
adc
sbb
jecxz
stos
and
cmp
in
cmp
cmp
sub
sub
mov
inc
add
jp
mov
gs
sub
push
cmpl
aas
scas
lret
mov
dec
mov
out
fistps
sub
popa
in
mov
push
subb
jbe
scas
mov
dec
cltd
add
inc
dec
scas
lret
mov
dec
mulb
mov
cld
mov
inc
arpl
cmpb
xor
scas
mov
rcrl
mov
xor
mov
jbe
rclb
popa
ss
popf
cwtl
scas
data16
shrb
mov
pop
mov
das
mov
mov
jmp
or
or
sbb
stc
dec
add
lret
mov
popa
repz
adc
rcrl
fnstcw
xlat
mov
sbb
mov
shlb
mov
daa
cli
add
xchg
add
dec
movsb
mov
js
jae,pt
pop
push
jb
lahf
sub
popf
lods
aaa
daa
mov
sahf
rclb
push
hlt
movsb
mov
in
fldenv
sahf
scas
es
xor
lahf
ja
cmp
mov
xchg
add
inc
sub
cmp
fnstsw
mov
outsl
aam
loopne
movsl
aas
and
sbb
mov
mov
xchg
int
jle
enter
aam
jg
ss
shlb
pop
push
lods
push
mov
mov
fidivrs
add
push
mov
and
mov
popf
mov
daa
xor
imul
stos
push
flds
cmp
in
mov
fmul
scas
inc
scas
xor
cmpsl
imul
mov
dec
sub
in
mov
pop
add
sahf
adc
mov
scas
xlat
cmp
mov
mov
mov
mov
shlb
sub
out
mov
and
xchg
sbb
test
mov
mov
sbb
stos
cwtl
stos
outsl
cmpsl
mov
movsl
xlat
scas
sbb
mov
imul
xchg
scas
mov
mov
and
movsb
mov
sahf
popf
hlt
lret
mov
arpl
mov
push
mov
xchg
and
in
push
sub
into
add
ret
stc
std
in
mov
fsubr
jecxz
clc
inc
cmpb
shlb
inc
mov
mov
pop
xor
rcr
sahf
fcomps
mov
aas
lret
inc
cmp
in
mov
dec
push
sub
jo
mov
mov
pop
scas
mov
xchg
into
scas
stc
lods
das
inc
int
imul
xor
mov
add
call
mov
hlt
insl
pushf
mov
dec
jnp
xor
dec
ficomps
scas
repnz
ds
sub
je
add
pop
mov
jecxz
popf
xlat
sbb
cmp
test
mov
mov
cmp
stos
dec
xchg
lcall
stos
mov
shrb
mov
sub
mov
add
adc
mov
add
xchg
mov
sbb
add
jno
mov
pop
pop
shlb
mov
push
movsb
jp
xchg
sbb
dec
pop
repnz
mov
leave
push
insb
shrb
lea
insl
pushf
xor
jnp
and
jns
aaa
stos
xchg
mov
arpl
xor
adc
lock
rcrb
inc
fisubrl
daa
cmpsb
repz
add
mov
sbb
fs
mov
cmp
rclb
sub
addr16
mov
xchg
xchg
pop
or
inc
arpl
jle
lock
sar
mov
rolb
cmpsb
repz
bound
xor
xchg
pop
xchg
loope
popf
in
pop
call
lret
cmc
test
sbb
pushf
xchg
mov
cmpsb
repz
jae
std
popf
lret
xchg
lock
fadds
mov
mov
stos
pop
sub
cmpsl
pop
stos
inc
mov
mov
ret
cmp
fstps
in
cmpsl
inc
scas
push
cmp
cmp
fsubrs
add
lret
in
lcall
movsb
jmp
sbb
std
lock
sbb
pop
in
scas
cmp
popf
mov
test
clc
std
addr16
pushf
aam
std
or
or
popa
cmp
das
or
iret
xchg
add
push
mov
dec
lods
sbb
or
and
jp
std
xchg
sbb
mov
test
fadds
pop
xchg
push
loope
movsb
repz
orl
fadds
dec
sub
ja
push
mov
jge
or
scas
inc
into
sub
mov
mov
xchg
or
mov
into
stos
cmp
and
outsb
mov
adc
mov
sub
push
loop
hlt
pushf
or
mov
jg
inc
into
mov
scas
lea
lcall
add
mov
stos
pop
mov
mov
cmpsb
mov
pushf
lock
push
mov
mov
mov
xor
fs
mov
cmpsb
sti
mov
fbstp
sub
sbb
sub
inc
add
lods
cltd
xchg
xor
or
mov
mov
std
jno
movsb
mov
jnp
lea
push
jbe
or
mov
cmpsb
inc
into
lahf
mov
pop
pop
mov
fs
mov
daa
sahf
fcoms
dec
sub
loope
mov
lods
or
movsl
mov
add
insl
jge
jno
scas
jbe
cmpsl
mov
stos
and
setle
mov
mov
mov
fidivl
fcompl
add
xor
in
je
pushf
xor
or
or
mov
pushf
fs
scas
sbb
mov
mov
lds
jmp
mov
sahf
repz
xor
xchg
jl
insb
ficomps
mov
lods
lahf
push
daa
mov
andl
adc
mov
jmp
pop
mov
sbb
popa
lahf
sub
test
sub
test
sbb
pop
mov
mov
vmread
mov
cmp
dec
mov
jno
frstor
xchg
stos
stos
inc
shlb
mov
and
in
clc
mov
shlb
pop
ss
fdivl
addl
pop
pop
in
adc
cmpsl
xor
out
sarw
sti
scas
test
push
or
xchg
leave
mov
loope
sub
imul
in
bnd
push
mov
add
sbbb
push
sbb
sti
inc
fsubs
jg
fstpl
or
lds
insb
sbb
xlat
inc
push
repnz
inc
out
sahf
jno
lods
mov
mov
mov
sahf
fisttps
js
in
pop
sahf
or
dec
aad
adc
fidivrs
jecxz
cli
mov
fwait
add
inc
bound
fisttpl
les
adc
or
mov
movsb
inc
push
xchg
fisubrl
push
sahf
in
mov
cmp
xor
jmp
popf
push
jge
dec
xchg
pop
sahf
xlat
mov
xor
or
ljmp
sbb
mov
sbb
push
mov
jle
mov
movsl
cmpsb
sahf
sbb
pop
popa
dec
ficomps
mov
pop
mov
pushf
pop
in
xchg
lods
mov
jbe
test
sbb
or
idiv
sbb
cmc
mov
loopne
popa
cld
push
mov
arpl
stos
test
ret
fidivl
aam
fidivs
or
cmp
std
shrb
popf
xchg
popf
iret
xor
jnp
in
jae
setg
jmp
cmp
jno
in
fldt
dec
xor
loopne
inc
cs
add
cs
popf
inc
push
sbb
fistpll
push
mov
and
mov
adc
and
out
dec
js
lds
inc
dec
jbe
and
loopne
aaa
popa
jnp
xchg
loopne
loopne
pop
jg
cmp
xor
mov
fcompl
rol
aas
pop
cmpsb
aam
mov
jle
inc
out
sub
mov
push
pop
lods
mov
test
cmpsb
sahf
popf
xor
inc
cmp
cmp
cmp
sub
repz
mov
mov
mov
mov
sub
inc
clc
mov
mov
push
dec
push
push
test
push
and
inc
sub
out
mov
jae
je
mov
push
negb
fdivr
stc
in
inc
xchg
adc
cli
add
mov
push
push
xchg
xchg
fnsave
xor
add
or
and
cmp
mov
les
popf
sarb
repnz
cmp
mov
mov
sub
data16
movsl
lcall
js
sbb
setno
aad
adc
aad
dec
push
fstl
loop
sbb
cmp
xorb
repnz
sub
ss
lods
fidivrs
jne
outsb
repz
push
int
mov
push
sbb
mov
sbb
mov
imul
hlt
lahf
mov
lods
mov
push
loop
andb
push
cmp
mov
xchg
or
aaa
push
mov
ret
inc
cmp
mov
decb
mov
or
sahf
mov
data16
inc
mov
popa
faddl
mov
int3
jne
cmp
cmp
mov
fstpl
sub
mov
and
cmp
lods
out
addr16
adc
dec
pop
test
es
cmc
dec
and
out
pop
push
sbb
cmc
xchg
loopne
into
imul
xchg
xchg
ret
mov
test
or
pop
mov
cwtl
xor
aam
jge
mov
push
xor
mov
inc
mov
xor
cmp
out
out
jmp
scas
mov
scas
lcall
dec
int3
sti
lods
jl
mov
sbb
or
adc
arpl
movsb
rcrb
movsl
inc
pop
nop
leave
fbstp
fmul
and
out
sbb
xor
negl
loope
mov
pop
test
repnz
mov
mov
mov
mov
hlt
lret
shlb
mov
cmpl
fdivl
inc
addr16
mov
in
sti
push
pop
mov
pop
das
movsb
scas
cs
scas
fsubrl
fisubrs
stos
loop
mov
add
shrb
test
daa
sub
sbb
shlb
popf
ret
popf
mov
xor
mov
xor
inc
popf
sub
lock
in
dec
jb
stc
ret
mov
lods
cmp
test
aad
dec
and
fildl
out
cmp
loope
leave
out
out
mov
add
pop
sub
xor
pop
xchg
sub
push
push
add
xor
fiadds
cmpsb
pop
cmc
cwtl
mov
scas
push
jl
xchg
jmp
inc
push
inc
cmp
cmpsl
popa
stc
out
sub
inc
cs
push
jae
les
in
mov
pop
ret
inc
push
fsubs
sbb
dec
addr16
nop
sub
into
and
sub
dec
shlb
and
sahf
mov
dec
stos
in
ds
xor
out
inc
into
imul
xor
insl
test
lcall
test
pop
loope
mov
pushl
mov
gs
mov
fsubs
insb
cmp
xchg
dec
push
lock
push
aam
sbb
push
push
loop
adc
ds
out
pop
insl
inc
leave
fwait
andl
data16
mov
xor
aaa
fbld
jbe
div
ds
in
mov
jns
scas
xlat
cmp
sbb
mov
scas
repnz
test
shll
lods
xchg
mov
inc
jl
test
mov
les
jl
insl
sbb
mov
add
dec
negb
in
mov
mov
mov
std
jne
xlat
call
stos
popf
push
cmc
popf
and
test
std
mov
mov
inc
xchg
and
stos
jle
sbb
mov
sub
and
xor
and
mov
xchg
pop
int3
push
stos
lods
idivb
xor
int
mov
dec
out
push
cmp
add
xchg
popf
dec
ds
xor
and
sub
ret
xchg
call
mov
xor
cli
idivb
daa
mov
adc
and
jbe
sub
xor
loopne
mov
cmpsb
dec
and
xor
sbb
int
and
sub
shlb
sub
rcl
jge
fstl
mov
dec
out
pop
out
push
pop
fxch
or
jecxz
cs
lods
dec
mov
cs
das
sti
sahf
enter
inc
loopne
mov
movsl
jl
repz
mov
stos
dec
movsb
aas
packssdw
dec
cmpsl
add
pushf
mov
push
mov
in
jecxz
jbe
mov
inc
outsb
mov
jne
jnp
xchg
xor
jns
sub
or
and
mov
push
push
dec
lods
int3
pop
mov
pop
push
subl
and
jmp
pop
nop
adc
incb
mov
lahf
cmpsl
mov
pop
loopne
xor
lea
add
out
mov
lock
bound
or
pop
xchg
stos
mov
std
aaa
sbb
pop
fwait
out
xchg
cmpsb
ret
mov
mov
push
pop
ljmp
ds
mov
out
xor
mov
ss
xor
inc
adc
jne
iret
fsubrs
xchg
adc
push
or
in
pop
mov
andl
scas
lods
fwait
dec
popf
loope
shr
fs
fidivs
or
std
sbbl
lods
stc
das
cmp
add
test
sub
and
popa
sahf
int3
and
mov
mov
repz
xor
fildl
mov
mov
je
and
sbb
outsb
push
mov
jge
mov
and
shlb
cs
mov
sbb
xor
fwait
xchg
in
sti
icebp
pop
faddl
cmpb
pop
adc
and
xor
arpl
cli
fisubs
push
leave
cs
cmp
mov
fstpt
aas
adc
ja
add
xchg
arpl
lea
neg
lock
xchg
sub
fcmovnbe
mov
jg
in
push
jo
adc
push
mov
ss
mov
outsl
cmpsb
add
mov
jp
inc
mov
mov
dec
adc
push
test
sub
sub
xchg
cmp
test
xchg
clc
xor
aas
clc
and
and
pop
jle
test
dec
inc
mov
push
lds
xor
jge
sub
xor
push
fisubrs
xlat
push
ret
and
pusha
popf
adc
outsb
adc
mov
mov
cmp
movsl
bound
out
push
mov
or
rcll
sub
sub
mov
in
mov
aam
mov
clc
xchg
repz
test
or
mov
inc
out
orb
dec
int
popf
andl
mov
cmp
pop
into
xchg
dec
lods
mov
pop
in
sbb
out
mov
dec
clc
inc
ja
adc
scas
fnstenv
push
sbb
lret
shlb
jmp
cltd
jl
cmc
add
jl
cs
fistps
xchg
cltd
cmp
xchg
es
cltd
in
xchg
lods
fistpl
aad
mov
cli
in
rcr
test
cltd
mov
push
shrb
ja
rolb
jmp
mov
dec
add
mov
out
jecxz
mov
sub
punpckhdq
cltd
jns
je
std
shlb
call
cld
mov
lcall
sbb
add
and
stos
stc
adc
dec
scas
sub
rolb
andb
negb
mov
lods
rcl
stc
sbb
adc
insl
rcrl
or
fcmovnu
mov
fldenv
std
ret
cmp
xor
sbb
mov
xchg
rclb
pop
xor
sub
xchg
and
mov
mov
mov
cmpsl
pop
inc
lods
test
inc
pop
outsl
mov
xor
push
das
pusha
add
bound
inc
pop
stos
dec
jl
push
stc
out
mov
lret
cli
xor
xlat
pop
loopne
lods
inc
sbb
mov
xlat
xchg
and
sub
ficoms
sub
cwtl
aas
ss
pop
sbb
lods
dec
rorb
cmp
rdtsc
scas
in
fistpl
push
xor
mov
cs
and
jmp
cwtl
mov
lods
adc
das
mov
mov
add
and
test
std
push
cmp
mov
pop
mov
dec
into
pop
mov
dec
mov
inc
mov
popf
pop
loopne
scas
cld
and
mov
shlb
jle
mov
loope
mov
mov
test
out
test
inc
lcall
jp
fnstsw
dec
or
movsb
lahf
inc
arpl
jno
or
loopne
pop
fldenv
clc
mov
cwtl
push
stos
cmp
lods
jecxz
gs
dec
xchg
xor
push
cmc
xor
xor
lcall
dec
stc
stos
push
icebp
ret
mov
mov
call
mov
xor
inc
xor
icebp
cmp
xchg
push
cli
mov
in
mov
jne
lea
insb
mov
cmpl
push
or
in
push
daa
lods
test
mov
int
data16
lret
lcall
mov
jbe
xor
dec
andb
fldenv
repnz
fsubrl
xchg
xchg
inc
je
aad
test
mov
xchg
cmp
and
ret
mov
and
ds
testb
mov
and
add
sahf
outsl
es
mov
scas
imulb
xchg
push
gs
aas
push
clc
push
mov
ror
dec
rclb
test
test
stos
dec
pop
and
cltd
in
out
sbb
ljmp
fildl
mov
loopne
pop
clc
push
xchg
sub
stc
inc
or
cli
jo
inc
xchg
sbb
sub
flds
mov
inc
dec
lods
mov
cld
sbb
negb
cld
sub
pop
and
mov
dec
popa
cmc
sub
int3
movsl
cmp
out
lock
xor
in
xor
outsl
pop
mov
fnstenv
sti
and
cmpsb
mov
push
cmpsb
mov
dec
movsb
or
ds
pop
aas
fdivrl
jl
mov
je
push
jns
in
int
mov
push
push
pop
idivb
mov
push
cs
push
cmp
daa
push
xor
push
insl
outsb
in
es
xor
std
shlb
cli
cmp
xor
test
pop
sub
mov
stos
jmp
mov
scas
sbb
inc
dec
sbb
pop
inc
scas
cmp
pop
mov
pop
lods
aad
pushf
inc
mov
mov
ret
call
mov
xchg
sub
inc
lods
test
pop
add
in
sub
pop
nop
xchg
bound
adc
mov
test
mov
lcall
test
inc
cmp
sbb
jnp
mov
add
sub
jmp
sub
int
fidivs
pop
std
mov
mov
stos
fistps
mov
in
and
test
push
pop
icebp
lret
popl
pushf
mov
adc
mov
movsl
dec
mov
inc
dec
mov
mov
aaa
insl
adc
cwtl
or
es
inc
hlt
and
aas
cmp
shlb
pop
and
or
data16
mov
cmpsl
jne
das
jnp
dec
pop
add
loopne
movsb
sahf
test
adc
popf
test
lods
in
cwtl
push
adc
xchg
and
rcr
xchg
enter
sbb
inc
daa
cmp
mov
inc
das
inc
testb
stos
and
fstpl
sbb
dec
insb
out
iret
jp
add
std
sahf
push
mov
dec
les
fbld
add
sbb
ss
test
and
lea
mov
in
aaa
and
flds
mov
push
dec
cmpsb
shrl
xor
insb
or
mov
int
push
int3
and
inc
int3
mov
popa
sub
stos
and
push
adc
jo
iret
jmp
loopne
sbb
arpl
push
xchg
test
jmp
sahf
cmp
addr16
int3
movsb
xor
push
in
fldl
mov
jo
add
out
mov
movsb
mov
inc
das
out
das
xor
in
fwait
negl
cmpb
cmp
out
lahf
push
outsl
sbb
jmp
loop
xor
inc
hlt
mov
inc
cmpb
xor
imul
mov
ficompl
dec
pusha
xchg
sbb
inc
outsl
popf
mov
cli
mov
pop
xor
imul
repz
jle
lods
movsl
imul
pusha
push
push
sbb
and
inc
cmp
cmp
mov
in
pop
xchg
sahf
imul
sbb
imul
sbb
jecxz
mov
aaa
adc
punpckhwd
cmc
lods
xlat
scas
fnsave
or
lcall
jge
iret
jb
push
scas
jno
sub
sbb
xchg
adc
fiadds
pop
clc
lods
cmc
lret
sub
push
push
popf
popf
mov
jge
push
das
in
scas
mov
cwtl
int
subb
daa
imul
stos
aas
arpl
inc
jb
inc
repz
ret
mov
pop
mov
in
fldt
push
repnz
inc
xchg
ds
loope
nop
xlat
xchg
and
add
jnp
loop
mov
dec
dec
mov
sub
xchg
aaa
inc
test
jae
rcl
push
pop
insl
lock
jle
xchg
cmp
sub
cmp
cmp
push
or
sbb
sbb
scas
data16
mov
call
aaa
inc
mov
mov
pop
mov
dec
and
add
int
xor
dec
ss
popf
mov
addb
std
dec
adc
adc
add
imul
jecxz
inc
mov
xchg
stos
add
add
mov
push
mov
frstor
jmp
pop
fdivr
pop
stos
pop
pop
ss
push
mov
xchg
aas
sbb
mov
sbb
mov
movsb
inc
xchg
lret
dec
lret
ret
mov
stos
daa
push
jle
lea
pop
and
int
mov
push
stos
dec
call
mov
sub
mov
sbb
shll
jnp
shrl
sbb
in
pop
xchg
aaa
clc
fisttps
lods
mov
cmp
and
mov
cwtl
mov
push
cmpb
xchg
call
xor
lret
into
inc
cmpb
add
mov
inc
mov
inc
mov
repz
inc
stos
mov
orb
xchg
outsb
jl
xchg
add
ljmp
sub
mov
mov
push
ror
ja
icebp
push
fmul
xchg
xor
cmpsb
mov
fs
lods
aas
xor
and
lret
dec
cld
xor
or
movsb
int3
cs
add
call
cmp
add
push
cmp
repz
sbb
repz
pop
cmpsb
push
and
cmpsl
xor
xchg
lahf
inc
cmp
std
into
andb
dec
sbb
cmpsb
ja
xchg
ficoms
dec
sarb
sbbb
ja
pop
pushf
mov
cli
cmc
xchg
in
add
enter
jge
or
add
movsb
xchg
fiaddl
push
sbb
imulb
or
mov
or
into
lea
mov
call
das
dec
and
push
in
dec
lods
push
mov
mov
cmpsb
jb
xor
stc
testb
and
xchg
push
sub
inc
cmp
mov
ss
sbb
arpl
xchg
adc
sub
outsb
mov
hlt
sbb
or
pop
fld
std
fidivrs
cmp
dec
push
sub
mov
test
mov
ds
xor
jmp
cltd
mov
daa
pop
push
mov
mov
or
scas
das
sahf
popf
jnp
xor
mov
xor
call
imul
mov
mov
add
sti
sarb
xchg
sbb
xchg
lahf
mov
push
aad
cmp
sahf
mov
and
dec
rep
mov
cmp
push
or
push
enter
push
push
jae
inc
iret
popf
movsb
mov
adc
leave
fs
cmp
movsl
and
pop
fdivl
mov
fidivrl
dec
mov
jnp
cmpsl
xchg
inc
dec
leave
xor
pcmpeqd
adc
adc
xchg
mov
test
jle
or
xor
andl
ss
hlt
fld
dec
ficoms
stos
mov
dec
call
adc
outsl
repz
or
negb
sbb
lods
lock
sbb
inc
rolb
push
push
push
mov
sub
cli
and
sbb
push
sbb
mov
xchg
push
sahf
rcl
push
mov
shl
ficoms
movsb
jmp
rolb
cmp
mov
or
adc
roll
mov
sbb
mov
jmp
ja
mov
mov
jge
mov
mov
enter
adc
xlat
cmp
orl
cmp
sbb
fs
hlt
std
mov
mov
push
sarb
jbe
lods
inc
xor
cmp
sbb
lahf
push
xchg
mov
movsl
lods
xor
cmp
pushf
mov
std
push
lahf
fidivrl
out
inc
test
ss
or
jge
fldenv
jno
int3
push
cmp
hlt
push
cmpsl
gs
dec
std
cmpsl
sahf
mov
hlt
jae
scas
sahf
cs
call
fdivr
outsl
mov
cld
dec
mov
inc
test
shl
out
or
cmp
sti
cmp
sub
xchg
and
inc
fabs
inc
int
xor
addb
and
in
pop
sbb
jg
testl
xchg
scas
xorb
out
push
or
sti
rcrl
add
cmp
repz
mov
sbb
pop
xchg
movsl
adc
jecxz
xchg
fsubs
mov
mov
sub
cmpl
rcrb
fistpll
scas
dec
xlat
or
je
in
sub
fs
jae
mov
lahf
mov
fnstcw
data16
adc
lahf
and
dec
sub
fstpl
push
push
loop
cmp
cmpsl
sub
call
xor
or
jg
dec
push
mov
decb
or
shl
and
ds
sahf
ficoms
addl
xchg
mov
mov
scas
inc
daa
xchg
mov
mov
gs
icebp
into
hlt
lods
sub
das
arpl
lods
test
sub
test
scas
popa
repnz
arpl
sub
lods
popa
xchg
mov
sub
sar
and
lods
sbb
and
xchg
inc
xor
sub
stos
jg
inc
fisttpll
xchg
insb
into
push
push
sbbl
cmp
out
bnd
fs
cmpsb
movsb
std
or
adc
sub
cmpsb
mov
into
stos
sub
scas
or
push
cs
mov
clc
mov
mov
jns
cli
xor
mov
data16
mov
fwait
imul
out
cmp
mov
decl
leave
inc
out
inc
push
pop
mov
xor
dec
es
fs
add
xor
dec
sbb
jo
jp
subb
inc
sub
push
fcoml
lods
sbb
xchg
imul
xchg
negb
mov
rcrb
jp
xchg
inc
cmp
sahf
inc
xor
and
push
addr16
outsb
mov
jo
stos
jp
xor
sub
mov
roll
xor
icebp
push
sti
cmp
cmp
rcrb
lea
cmpsb
xchg
jge
xchg
test
call
stos
push
xchg
mov
push
add
dec
fcoml
jge
inc
ds
sbb
enter
int
iret
xchg
mov
cmp
movsl
push
mov
fcomip
rolb
shrb
mov
pop
pop
dec
sub
in
popa
lock
rclb
mov
movsl
cmp
dec
lods
rorl
mov
mov
popa
pop
or
daa
in
sub
sub
cmpsb
mov
inc
jle
jmp
xor
mov
pop
je
push
dec
lods
sbb
fwait
mov
cmp
pop
in
add
sahf
push
rclb
in
std
add
mov
or
mov
hlt
sub
loop
iret
sub
lods
sti
or
sbb
or
or
into
pop
test
jl
aas
push
push
inc
xor
aas
mov
pop
movsb
test
xor
js
sbb
mov
enter
jg
aas
xor
loope
test
adc
hlt
push
xchg
adc
jnp
xchg
push
jbe
jnp
dec
int
data16
pop
mov
push
cltd
sub
arpl
popa
inc
stos
mov
idivb
and
xor
dec
mov
xchg
push
pop
push
sub
xchg
cmp
pop
pop
xchg
mov
es
insb
out
inc
push
pop
inc
scas
mov
add
movsl
data16
or
insb
adc
xlat
sub
push
xor
sub
push
imul
mov
inc
lock
rorb
ret
faddl
mov
std
repz
sahf
cmpsb
add
mov
mov
pusha
xchg
lahf
add
mov
ret
mov
push
mov
and
inc
xor
lahf
cmpsb
add
pop
lea
out
dec
jge
in
add
lds
mov
popf
je
pop
mov
cmp
add
lea
mov
fcoml
fnsave
dec
jmp
mov
fsubrl
bnd
mov
sbb
mov
fsubl
int
mov
and
mov
sbb
sahf
cmp
pop
push
int
sbb
addr16
pop
mov
data16
adc
or
inc
pop
mov
lods
jg
push
daa
push
pop
sub
mov
sbb
roll
aad
cmp
loope
push
lods
sub
push
add
fincstp
inc
push
inc
leave
dec
xchg
rolb
push
nop
addr16
xchg
sub
xor
jmp
hlt
out
das
hlt
push
stc
scas
mov
mov
movsb
cmpb
adc
push
cmp
repz
push
push
add
cld
mov
les
mov
repnz
mov
out
mov
lcall
xor
loopne
aad
ret
ss
xchg
dec
sbb
inc
pop
in
mov
out
xor
and
fnstcw
pusha
and
lret
dec
cmp
sub
out
sahf
mov
cmpsl
sbb
es
mov
push
and
or
cmpsl
bound
xor
fdivrl
mov
pop
push
mov
sub
mov
mov
mov
jge
das
fninit
dec
cmpsb
mov
sti
pop
pop
das
scas
iret
fidivs
fldenv
mov
and
jp
enter
jp
inc
xor
jecxz
clc
lods
sub
cmp
in
jno
fidivs
popf
dec
push
movsl
mov
loopne
mov
pop
jl
lods
xor
inc
hlt
stos
mov
mov
inc
hlt
adc
lods
or
sbb
ds
ja
dec
clc
cmpsl
push
outsb
cmp
mov
push
daa
test
sbb
push
sub
lods
sub
cmp
inc
scas
adc
and
jae
xor
in
mov
xor
scas
xor
loop
mov
push
xchg
sub
loope
sahf
inc
cmpb
cmp
out
stc
fs
sahf
sbb
mov
fs
mov
out
sbb
out
sub
inc
in
jnp
cld
mov
cs
jnp
dec
fldenv
or
mov
cmp
sub
ljmp
and
cmp
std
mov
adc
sbb
inc
xchg
add
and
addl
shrb
sbb
shr
jp
and
xor
jne
pop
pop
xchg
clc
lds
hlt
dec
mov
jg
ljmp
stos
inc
movsl
hlt
subl
lret
cltd
lcall
loopne
add
cmp
dec
jbe
out
leave
cmp
mull
rcr
mov
push
push
jns
jp
jl
dec
jle
mov
test
mov
incl
pop
cmp
xlat
dec
add
fstps
and
dec
cmp
pop
hlt
and
test
lock
jg
pop
sub
shr
or
xchg
mov
push
adc
lcall
mov
dec
xor
mov
jmp
mov
xchg
insb
cmpsb
and
mov
rcrl
mov
enter
bound
sub
shrb
adc
movzbl
jnp
icebp
cmp
and
adc
dec
jbe
sti
jp
enter
or
cmp
cmp
cmp
lods
mov
int
in
add
int
imul
fldenv
or
aas
cwtl
xor
xor
mov
outsb
push
movl
aas
adc
movsl
jmp
les
fldenv
ss
in
mov
cwtl
fstps
xchg
xor
cmp
sub
sub
pop
enter
std
mov
inc
pop
jns
mov
aam
pop
xlat
and
mov
sbb
int3
xor
fs
popa
adc
add
jno
arpl
mov
push
push
pop
sub
cmp
xchg
mov
and
and
pop
sti
mov
outsl
cmp
pop
pop
pop
push
dec
mov
incb
mov
and
aaa
push
mov
mov
lods
cwtl
push
push
pop
rorl
loopne
push
lret
ljmp
mov
loope
femms
dec
lods
sub
mov
and
push
xorl
sbb
xor
sub
js
xor
mov
je
loopne
cmpsl
add
cmp
sbb
sbb
scas
shlb
loopne
sub
mov
and
mov
pop
in
inc
loopne
sub
or
pop
xor
loopne
call
mov
cmpsb
mov
call
bound
lahf
add
sub
ds
in
sbb
or
scas
pop
cmp
int3
adc
loopne
outsl
sahf
orb
stc
jne
cli
ja
lods
xchg
dec
out
addr16
aad
cltd
or
shlb
repnz
icebp
add
sahf
mov
and
test
in
jmp
mov
sbb
pop
mov
push
fcmovne
pop
mov
cmc
aad
xchg
push
js
icebp
gs
enter
clc
xchg
xor
jnp
push
mov
stos
cmc
rorb
lcall
add
mov
mov
mov
mov
aam
jge
sahf
push
lret
sbb
mov
pushf
fldenv
jg
mov
cmp
mov
pop
lods
inc
rcll
inc
addr16
repz
icebp
imul
mov
cmp
xchg
dec
sub
movsb
mov
in
mov
rcrb
pop
arpl
sbb
cmp
fcompl
push
aam
fucomp
cld
movsb
sbb
rcrb
out
cmpsb
and
adc
jne
push
popf
mov
inc
stos
mov
cmp
stos
mov
mov
pop
in
xchg
sub
fsubrs
std
in
push
and
jle
cmp
insb
inc
push
icebp
mov
mov
inc
mov
lods
adc
add
xchg
pop
fistps
dec
lahf
mov
sti
sbb
cmp
jbe
cmpl
add
pop
mov
in
cld
arpl
adc
pop
lret
sub
stos
pop
mov
sub
jp
xchg
rclb
push
orl
and
inc
sub
cmpsb
xor
sbb
mov
xchg
inc
mov
mov
add
inc
mov
sub
push
mov
fisubl
pop
push
imul
stos
sarl
mov
mulps
push
jg
popf
mov
scas
repnz
fnsave
cmp
call
inc
out
or
pop
imul
stos
std
popf
dec
popf
or
lods
arpl
push
inc
dec
sub
or
or
cmp
loope
jle
ficomps
iret
incl
loope
sahf
sbb
loop
scas
mov
jb
push
mov
sbb
gs
stc
cmp
jns
in
and
fnstsw
arpl
cwtl
lock
mov
and
inc
push
fcmovne
pop
popa
insb
xchg
stos
jno
sahf
mov
adc
jmp
mov
leave
xor
out
out
push
jno
shll
std
and
movsl
pop
leave
out
cmpsb
lods
addr16
inc
jno
and
mov
fistps
dec
dec
aam
pop
mov
shlb
imull
xor
add
cmp
cmp
jge
mov
mov
sbb
xor
ficoml
daa
xor
rorl
push
sbb
pop
mov
xor
lds
xor
popa
add
push
stos
in
lds
adc
in
dec
sbb
sti
pop
sbb
dec
sti
lea
cwtl
mov
jnp
dec
movsb
dec
loop
push
cmp
dec
popa
mov
clc
cltd
mov
fs
jnp
xor
pop
arpl
sbb
clc
icebp
sahf
cmp
sarb
mov
mov
ror
xchg
lcall
pop
lds
iret
movsl
lret
and
cmp
or
cld
jge
dec
js
push
add
icebp
mov
sbb
jnp
mov
mov
and
jge
push
fldenv
xor
std
push
arpl
les
xor
fcoml
aas
sbb
and
pop
push
repnz
or
pusha
test
outsl
les
loop
mov
push
mov
cmc
test
ljmp
movsb
out
ficoml
movsb
fidivrs
fldenv
sub
mov
test
cmpsb
ljmp
or
fsts
fsubl
jecxz
pop
cli
dec
jns
loop
dec
rcrl
bound
dec
lock
inc
aaa
sbb
bound
fdivrp
dec
pop
aas
dec
add
sub
les
and
jo
inc
jmp
std
fnstcw
scas
xor
repz
jg
lods
and
aam
repnz
dec
hlt
xor
out
and
inc
adc
adc
xchg
jle
mov
jae
push
jecxz
mov
xor
mov
cwtl
cmp
mov
and
mov
push
xchg
imul
jecxz
rol
dec
fwait
sbb
arpl
aam
dec
xchg
in
jg
xchg
sbb
push
rclb
or
adc
pop
and
and
test
xor
orb
rcrb
cmp
fnstsw
mov
adc
adc
shrb
jg
in
xchg
ficompl
dec
xchg
dec
das
lcall
or
daa
bound
loope
xchg
sbb
popf
lock
pop
mov
fwait
nop
dec
shl
xor
orb
jb
in
sbb
insl
iret
cld
xchg
jb
mov
mov
lods
mov
and
jl
popf
mov
jno
enter
lahf
cmpsb
mov
jmp
jg
pop
mov
jnp
dec
sub
insb
gs
loopne
mov
pop
jl
adc
fdivs
sbb
and
aas
out
enter
pop
int
mov
loop
xchg
lods
pop
cld
lcall
mov
mov
xor
mov
sub
mov
cmp
mov
dec
fwait
int
lret
dec
lock
adc
cmp
popf
loop
repz
cmpsb
aad
cmpsl
fnstsw
pusha
push
xor
sahf
pop
or
inc
pop
dec
and
sub
int3
aad
jle
dec
adc
aas
sti
lds
stc
mov
shlb
xchg
jge
push
rorb
fidivrs
xor
and
or
dec
xor
mov
mov
inc
sahf
pop
rolb
fnstenv
add
stc
rol
add
test
movsb
dec
mov
or
int
out
dec
push
das
sbbb
aad
in
dec
mov
mov
mov
iret
push
mov
mov
dec
shll
jnp
cmpsb
movsb
ljmp
mov
push
in
test
lea
mov
pop
dec
pop
and
les
dec
mov
inc
cmp
sbb
mov
cs
dec
out
negb
xor
cmp
adc
cli
test
icebp
mov
lods
ret
mov
xchg
rorb
and
or
push
andl
mov
setle
pop
push
or
sbb
into
add
mov
mov
mov
out
ffree
push
fsub
pushf
jge
pop
pop
mov
mov
inc
sub
std
mov
push
std
sbb
mov
jp
scas
enter
ds
dec
push
mov
dec
popf
mov
or
aaa
adc
inc
int
or
push
loopne
jle
jo
fwait
mov
pop
push
in
xchg
cwtl
push
cmpsl
in
dec
std
pop
adc
std
ljmp
mov
cmp
clc
jmp
mov
stos
dec
in
sbb
dec
imul
sub
popf
stos
pusha
mov
mov
pop
orl
imul
xchg
xor
loope
xor
fsubrl
gs
mov
sub
inc
gs
inc
push
imul
xchg
inc
scas
pop
das
add
mov
or
jmp
xchg
pop
cmp
mov
adc
pop
cmp
mov
jb
mov
sarb
xor
loopne
pusha
icebp
xchg
sahf
mov
mov
sbb
mov
testl
fs
or
pop
mov
out
loop
push
fwait
lods
in
out
ret
popf
jmp
sbb
push
or
test
outsb
jno
shrb
xchg
stos
stos
mov
mov
xchg
pop
or
jmp
sbb
xchg
mov
lahf
insb
shl
flds
clc
dec
repz
stos
add
inc
mov
clc
sub
dec
adc
std
mov
inc
sub
and
inc
daa
inc
dec
fadds
sub
inc
les
add
or
scas
push
pop
loope
test
inc
lret
push
lods
cltd
mov
mov
jno
faddp
or
das
and
call
les
lds
xchg
stos
jge
icebp
jb
sbb
mov
call
add
icebp
outsl
inc
adc
dec
repnz
in
rol
sahf
ja
pop
insb
dec
xchg
pop
notb
sub
xchg
push
dec
push
bound
out
jb
test
repz
xchg
popf
xor
nop
ss
cli
add
jnp
or
xlat
add
push
cmp
lcall
outsb
test
mov
cmp
lods
aaa
cmp
jmp
cltd
inc
xlat
sub
mov
mov
jnp
push
mov
es
mov
shrb
jle
inc
cmpsb
mov
mov
inc
cmc
lods
cmpsl
leave
inc
push
push
mov
daa
xor
jle
xchg
test
dec
fwait
xchg
mov
mov
mov
in
and
pop
or
aam
dec
xor
clc
and
fsubl
loopne
mov
fmull
ficompl
je
in
cld
insb
sti
cmp
es
fs
subl
adc
outsl
in
shrl
cmp
mov
cmpsb
xchg
decb
ja
cmp
ds
subl
xchg
push
stc
testl
lcall
clc
mov
arpl
stos
jb
aam
push
stos
push
fprem1
push
push
sub
jae
xchg
or
gs
mov
cmpsb
xchg
nop
scas
shll
test
mov
nop
fwait
xchg
test
pop
cltd
cmc
mov
sbbl
cltd
cmc
mov
jp
jle
stc
and
mov
loop
pushaw
les
sbb
inc
lahf
lcall
xchg
mov
rclb
addr16
sahf
popf
bound
in
aam
dec
arpl
fisubl
mov
negl
repnz
jbe
push
and
sbb
lods
cmp
xor
movsb
sbb
fs
js
xlat
pusha
jmp
mov
pop
or
fs
fldcw
jmp
and
dec
push
adcb
xchg
pop
fwait
adc
mov
fldcw
xchg
call
jecxz
mov
mov
or
test
out
cmp
push
enter
mov
xor
jle
insl
sbb
cmp
fsubrs
push
dec
cmpsb
mov
clc
add
mov
xchg
mov
and
mov
ret
push
mov
xor
mov
in
mov
jp
mov
fidivs
fdivrp
cmp
notl
sahf
cmp
movsb
std
ljmp
fs
repz
lret
clc
push
addl
xchg
fidivrs
adc
jno
jg
stos
jle
js
pop
lods
push
push
push
mov
scas
mov
mov
push
sahf
aaa
inc
in
mov
mov
dec
cmp
movsb
mov
add
xor
cmp
in
mov
dec
test
mov
ror
int
jge
dec
mov
and
nop
mov
jp
push
popa
cwtl
mov
adc
clc
inc
adc
leave
lock
stc
adcb
sbbb
or
xlat
push
roll
jle
movsb
and
cmc
mov
adc
lods
out
jl
clc
xchg
in
cmpb
adc
jmp
repz
mov
sbb
popa
repz
pop
aad
dec
inc
loop
fbstp
loop
mov
mov
enter
add
push
xor
inc
hlt
pop
shll
cltd
adc
mov
fstps
push
jp
das
subb
inc
outsl
cmpsb
mov
shrb
cmp
pop
push
std
mov
in
sahf
sbb
hlt
xchg
inc
sbb
xlat
lcall
sub
add
mov
jl
je
stc
jecxz
xchg
sub
subl
inc
mov
xchg
aad
xchg
cwtl
dec
push
sub
int
call
imul
dec
sub
bound
xor
inc
mov
xor
push
psubsb
mov
loop
adc
mov
lock
out
sub
mov
xchg
pop
jmp
loop
adc
or
mov
rcr
lods
flds
jnp
lahf
in
mov
xor
addl
xor
jge
lahf
xor
jne
stos
xchg
dec
jp
mov
out
loopne
and
imul
inc
inc
out
sti
hlt
push
xchg
pop
cmp
inc
jp
xor
cwtl
loop
inc
lret
testb
xor
out
xchg
add
cmp
sbb
jle
fimull
dec
fldenv
test
dec
lea
xchg
jp
pop
push
push
out
pusha
lahf
adc
mov
dec
fnstenv
in
xor
xor
xor
inc
mov
hlt
cld
xor
jnp
pop
mov
xchg
and
rcr
hlt
inc
aaa
stos
inc
std
int3
cmp
mov
adc
mov
int3
xor
xor
popf
jg,pn
ss
sti
scas
mov
push
xor
jmp
dec
xchg
in
test
mov
xor
or
outsl
and
and
repz
enter
pop
adc
js
xchg
mull
add
xor
xor
xor
into
fcompl
push
sub
movsb
pushf
mov
push
out
mov
cmp
daa
rol
test
push
outsl
sub
movsb
lods
out
sub
sbb
dec
into
xor
aam
ss
mov
push
jge
test
addr16
sub
lret
or
cmp
sub
lahf
je
int
xor
cmpsb
jmp
int
mov
mov
int
add
xchg
mov
mov
xor
sub
pop
rdpmc
push
pop
stos
push
cmpsb
mov
jae
test
push
mov
adc
test
mov
frstor
repz
faddl
pusha
daa
sahf
lahf
cmp
lahf
jge
imul
inc
out
mov
les
cmp
aad
xor
xor
push
addr16
dec
xor
adc
lret
adc
stos
jnp
mov
push
adc
jns
loopne
gs
loopne
and
rcr
roll
pop
or
std
mov
mov
ret
mov
xor
sbb
shrl
je
hlt
das
and
iret
fstpl
aam
cmp
dec
pop
loopne
dec
bound
pusha
mov
mov
inc
jo
aam
mov
mov
push
add
lock
fwait
lods
xor
xchg
push
dec
rolb
cmpsl
sbb
out
cmp
mov
mov
xor
shr
pushf
fmull
test
sbb
sbb
mov
add
shrl
test
shll
inc
sbb
xor
mov
mov
sbb
sbb
and
sub
lahf
in
fnstcw
les
mov
mov
lods
ss
outsl
scas
push
pop
mov
mov
fnstenv
std
fsubrs
adc
outsl
mov
sbb
test
pop
adc
addl
mov
sbb
fstpt
out
push
fmul
pop
imul
mov
sbb
or
xchg
arpl
out
stos
lahf
adc
enter
xchg
cmpsb
mov
arpl
cmp
clc
iret
repnz
cmp
or
and
or
inc
sbb
cmp
or
sub
aam
mov
inc
out
add
xchg
dec
mov
bound
mov
mov
mov
jge
inc
imul
test
sbb
stos
push
jp
mov
mov
outsb
xor
iret
loop
hlt
gs
repnz
cmp
scas
push
outsb
cmp
and
mov
bnd
fldenv
scas
fists
popa
jmp
inc
das
sub
ret
das
pushf
sub
test
pop
mov
mov
xor
movsb
xor
mov
xor
das
or
inc
outsl
ja
out
outsl
outsl
loopne
loop
sub
in
movsl
les
jmp
jl
insl
add
fnsave
ret
adc
packsswb
xor
adc
sub
jl
mov
out
es
and
dec
push
es
xor
out
mov
in
pop
mov
sbb
jp
call
insb
cmc
mov
ds
xor
pop
pop
mov
pusha
sub
inc
mov
shr
jl
mov
cmp
aad
mov
mull
lahf
or
mov
sti
pop
sbb
mov
mov
fbstp
addl
jo
sub
cmp
sbb
cmp
mov
std
cmpsb
xor
cmp
add
push
cmp
jmp
stos
adc
xchg
xlat
push
test
mov
sbb
out
inc
dec
xchg
test
ljmp
cmpsl
or
call
xorl
into
pop
inc
push
add
leave
ret
jge
inc
xor
popa
insb
jne
out
add
and
ds
mov
or
sahf
fsub
sbb
sbb
nopl
pusha
jmp
adc
cmp
add
or
pop
in
xorb
or
fs
cmpsl
aas
popf
cmp
pop
inc
jb
fldt
pop
cmp
adc
in
or
roll
test
addr16
enter
inc
sub
xor
out
add
sarb
shrb
setp
mov
lea
mov
and
es
adc
and
mov
bound
sub
or
movsl
xor
mov
jge
bound
out
inc
out
clc
fsubs
pop
sub
imul
cmc
cmc
mov
mov
mov
mov
lods
lods
lahf
shll
push
dec
sub
inc
pop
out
enter
cs
push
dec
leave
push
xchg
in
xchg
push
inc
inc
xchg
mov
push
addr16
icebp
test
fistpl
xchg
subb
xor
icebp
dec
sub
fdivrp
arpl
es
out
cli
pushf
xor
jecxz
mov
jae
sub
shll
cmp
addb
in
xchg
mov
out
rorb
stos
jmp
push
test
or
in
mov
and
cmp
mov
test
scas
push
push
mov
push
push
xor
lock
inc
jns
test
dec
xor
and
popa
icebp
shlb
fisubrs
shll
adc
loop
add
or
sbb
test
into
xor
out
xor
add
das
adc
or
mov
xor
in
mov
les
adc
add
jecxz
and
push
xchg
jbe
push
and
cltd
xor
pusha
cmp
xor
negl
notb
cmp
aaa
xlat
clc
inc
ss
mov
std
xor
in
xchg
xor
lock
push
movsb
mov
mov
adc
inc
mov
std
mov
movsb
in
mov
ss
jle
add
jnp
movsb
xchg
xchg
adc
std
sbb
and
sahf
xorl
sbb
sub
xchg
das
mov
mov
mov
in
push
data16
out
mov
cmp
out
adc
inc
ss
inc
sub
popf
jg,pn
jbe
outsb
sub
into
daa
pop
xchg
add
adc
add
inc
lret
add
pop
aaa
dec
or
fstps
cli
and
icebp
and
mov
fidivl
sbb
out
mov
or
ffree
aas
and
repz
jno
xor
pop
bound
lea
mov
fcoms
fidivs
cmp
mov
cmp
inc
sahf
mov
xor
outsb
call
pop
negb
enter
pop
jge
sbb
sbb
cmp
adc
and
sub
stc
mov
sub
mov
test
dec
pop
int3
xchg
movsb
cs
rorb
mov
popf
mov
lret
pop
jl
fisttpl
arpl
jnp
xchg
mov
xchg
loope
clc
aaa
popf
test
scas
ss
sbb
lea
ret
push
ja
cmp
inc
out
enter
sub
arpl
mov
or
add
add
mov
insl
cltd
pop
aaa
inc
decb
push
mov
pop
mov
inc
iret
lds
loopne
js
repnz
and
nop
loop
pop
imul
push
scas
sbb
ljmp
add
cmc
data16
push
loope
fcompl
add
add
sbb
loop
push
dec
push
sahf
and
rolb
cmp
jg
popa
stos
stos
imul
roll
popa
sbb
fidivrs
shl
cmp
xchg
sbb
in
popf
fstpl
mov
pop
out
jl
test
inc
inc
sti
daa
fnsave
push
fcmovne
arpl
or
testb
and
adc
inc
mov
repnz
loopne
cmp
inc
lcall
jmp
mov
adc
or
add
mov
cmp
and
divb
test
roll
fisubl
xor
lock
seto
sub
movsl
jb
hlt
insb
pusha
insl
mov
lods
push
sahf
jge,pn
into
push
out
mov
inc
ja
mov
lock
inc
iret
sub
loop
mov
mov
cmp
dec
test
iret
imul
sbb
loope
out
jmp
aam
jg
xchg
pop
mov
sub
xchg
cs
xchg
xchg
push
aas
mov
xor
dec
icebp
xor
push
mov
inc
push
cwtl
jle
mov
and
mov
jmp
ss
aam
mov
inc
popf
push
in
or
add
mov
inc
inc
out
mov
inc
and
mov
imul
xor
ds
repz
push
mov
xchg
fldt
xor
insl
arpl
or
mov
xor
cmp
das
and
add
jp
lods
das
jl
cs
pop
stos
mov
loopne
popf
mov
push
ljmp
push
pop
adc
fisubrs
lret
xchg
push
push
test
xor
stc
and
jge
cwtl
inc
mov
cwtl
add
lods
mov
outsb
shl
ljmp
push
and
mov
dec
shll
push
adc
xor
inc
dec
out
dec
dec
or
cs
sub
jo
hlt
mov
shrl
push
mov
inc
ret
loope
mov
das
mov
mov
ljmp
or
lds
jns
jbe
gs
mov
mov
out
add
test
mov
lock
loopne
cld
mov
addb
fs
nop
clc
cmp
mov
and
xchg
repz
push
mov
jl
loope
inc
inc
xchg
fildl
cmp
push
jl
mov
push
adc
popf
inc
xor
mov
sub
aam
jae
cli
jle
stc
inc
lods
inc
mov
aad
fisubs
jae
lds
roll
push
orl
mov
cmp
test
ds
mov
mov
stos
fsubp
sbb
add
ds
repnz
xor
scas
mov
sub
dec
push
adc
mov
in
sahf
out
je
dec
in
xchg
mov
push
cmp
shlb
lret
cmp
mov
mov
stos
pop
outsl
popf
pop
add
jge
std
rcll
in
mov
pop
mov
inc
ss
hlt
pop
data16
imul
dec
lahf
mov
xor
movsl
or
xchg
mov
lock
cmp
dec
jbe
or
call
push
jle
cmp
dec
xor
std
test
pusha
mov
cmp
loop
sbb
adc
out
mov
mov
dec
or
add
dec
inc
in
jecxz
sub
sbb
cmp
int
int
stos
push
jns
insb
mov
out
add
test
xor
lea
add
mov
lret
out
pop
sarl
pop
insb
mov
cs
fnsave
xor
push
mov
sbb
cmc
mov
and
dec
jnp
xor
sbb
pop
mov
mov
mov
sbb
mov
popf
and
test
and
xor
ds
xor
and
pop
mov
mov
daa
insb
xchg
adc
das
test
scas
bound
sub
sbb
mov
push
insb
jnp
scas
jns
push
das
mov
and
insb
mov
lods
cwtl
sbb
mov
pop
insb
cmp
xor
cmp
jg
pop
cmc
pop
arpl
movsl
int
dec
inc
fdivp
and
jg
mov
dec
dec
stos
add
add
xor
add
fimuls
adc
cmp
lods
push
test
jnp
sub
dec
inc
fidivs
jnp
test
popf
cmp
sti
sahf
mov
sub
mov
aaa
lretw
shrb
mov
daa
dec
jb
daa
loopne
xchg
int
cmpsl
scas
sub
es
jb
xor
in
sarb
xchg
mov
data16
rcrb
xchg
xor
add
movsl
sahf
jl
push
or
and
popf
and
mov
movsb
ds
movsb
lods
mov
and
scas
and
cmpsl
jg
pop
fnsave
jmp
push
mov
inc
cmp
cmpsb
flds
sub
aad
out
jno
popf
pop
pop
mov
daa
and
pop
lock
and
dec
sbb
sub
cmp
stos
mov
cmp
dec
ss
mov
pop
xor
and
jl
push
or
movsb
dec
inc
leave
mov
shl
out
pop
dec
sar
mov
data16
out
pop
ss
adc
test
std
test
xchg
sahf
inc
adc
sub
aaa
mov
rcrb
mov
hlt
je
push
inc
xorb
pop
mov
xor
mov
mov
fldenv
popf
xor
mov
das
pop
sub
dec
xlat
sub
pop
daa
mov
loop
mov
add
lods
cld
and
jae
and
xchg
jl
int
imul
xchg
sahf
dec
cmpsl
aad
sub
xchg
xchg
scas
mov
dec
fldt
dec
aas
cmpsl
in
dec
pop
add
nop
pop
jge
xor
jo
xchg
mov
aaa
fldcw
mov
shll
adc
pop
cmp
xor
sti
jb
or
jbe
cld
scas
mov
jbe
mov
call
push
aas
pop
push
ficompl
ficompl
mov
sbb
cltd
push
imul
mov
scas
out
xor
in
sub
xor
dec
jp
pop
repnz
dec
xor
je
add
inc
ja
repz
fmulp
mov
lahf
outsl
js
sub
loop
mov
loopne
jg
loopne
xor
push
loopne
mov
push
inc
int
mov
mov
pop
idiv
mov
aaa
jp
pminub
fs
test
jp
popf
std
es
sbb
inc
and
cltd
cld
mov
sarb
in
scas
cmp
and
mov
mov
jno
movsb
mov
mov
xor
jge
dec
stos
push
dec
inc
ds
in
in
cld
mov
data16
divb
fs
lret
mov
das
movsl
popa
mov
pop
sbb
pop
lods
cmp
repz
adc
pop
fistpl
in
clc
mov
int
mov
xchg
ss
mov
jp
imul
jl
sbb
aaa
lea
inc
push
adc
jb
add
jecxz
stos
fs
mov
psraw
mov
ja
fbstp
xchg
xor
adc
cmp
divl
push
jp
and
sahf
jmp
movsb
jno
mov
cld
mov
cmp
movsl
stos
sahf
inc
pop
fiaddl
lods
cmp
arpl
sbb
call
fisttps
cmpsl
fnstsw
cmp
cmp
pop
sahf
mov
xchg
lock
movsl
xor
inc
lret
std
mov
mov
adc
cmp
dec
and
arpl
std
adc
xchg
mov
jp
in
sbb
test
mov
cmp
insl
sbb
mov
mov
repz
mov
xchg
inc
xchg
int3
mov
enter
xchg
sbb
in
cmpb
repnz
xor
add
mov
andb
dec
movsl
bound
sbb
pop
mov
push
fidivs
sbb
fsubs
sbb
out
mov
mov
in
jo
xchg
or
cmp
push
adc
loope
mov
mov
push
pop
stos
jge
cltd
js
and
ret
jle
sahf
stos
sbb
cmp
pop
jb
adc
das
pop
in
cwtl
inc
adc
std
mov
mov
cmp
cli
or
mov
mov
sub
mov
inc
mov
dec
sti
inc
ret
lahf
movsb
lea
mov
mov
mov
xor
mov
mov
xor
xor
mov
xor
mov
jo
xor
mov
push
in
add
sub
js
pusha
mov
in
fnstsw
jnp
mov
pusha
lret
sbb
es
repz
adc
push
xor
jae
movsb
sub
insl
repnz
jl
dec
lahf
sbb
popa
faddl
les
imull
aam
inc
test
in
cmp
in
stos
mov
mov
dec
out
stos
pop
outsb
cmp
cmp
pop
mov
push
dec
fidivl
into
repnz
fldt
arpl
out
and
lock
push
repnz
test
mov
xacquire
jge
inc
mov
or
and
xchg
js
scas
dec
fidivs
pop
in
adc
dec
and
add
jl
xchg
cld
jae
add
mov
sub
mov
out
or
or
sub
and
sbb
icebp
stos
ds
adc
jns
in
xchg
fidivl
mov
rorl
mov
and
push
or
mov
or
mov
jle
sahf
xor
andl
lods
push
mov
aam
call
sti
dec
adc
mov
push
lods
push
testl
mov
inc
or
adc
xor
xor
mov
aaa
sub
ds
stos
sbb
fimull
sar
fdivr
mov
xchg
cmp
and
xor
and
dec
popf
dec
adc
int3
mov
and
stos
into
sti
sub
std
xor
shl
mov
int3
pop
fnstcw
sti
pop
sti
aas
fwait
scas
push
mov
jl
add
mov
popf
mov
scas
mov
cmp
ds
mov
and
add
push
cld
mov
out
sbb
adc
stos
push
in
dec
pop
in
sub
das
arpl
mov
sbb
or
mov
add
adc
repnz
fcomps
or
cmpsl
or
sub
out
mov
pop
dec
stos
dec
fisubrs
sbb
insl
fs
fs
mov
mov
scas
xchg
enter
jge
fidivrl
mov
in
sub
push
ret
mov
cs
imul
jo
jge
jl
ds
popa
inc
mov
mov
mov
push
mov
xor
fstl
mov
loope,pn
mov
divl
mov
dec
xor
scas
mov
cmp
into
sti
mov
out
jo,pn
les
mov
jnp
and
loopne
lret
out
cmp
shrb
sbb
lret
xor
fdivr
fsubs
lods
dec
or
add
mov
jns,pn
rorb
std
in
mov
fldt
pop
sub
sub
fadd
and
mov
mov
cmp
in
dec
sub
rcl
push
jecxz
pop
mov
push
mov
inc
imul
dec
hlt
das
andb
xor
mov
in
inc
lock
mov
fcmovnb
in
or
shll
mov
and
aam
mov
mov
fcompl
fcomps
sahf
xlat
lock
adc
cmc
aas
popf
sub
out
mov
and
jne
sahf
js
and
popf
cmp
test
lret
in
andl
repz
repnz
fyl2xp1
pop
xchg
mov
pop
ret
outsl
scas
loop
out
push
repnz
mov
sarl
xchg
rcrb
mov
sbb
mov
stos
mov
jle
sub
jae
outsb
fwait
rorb
mov
jl
ds
mov
add
mov
jecxz
fidivl
jle
lods
cmp
loop
mov
mov
xor
lcall
mov
xor
fsts
fnstenv
loop
cmp
xor
repz
mov
inc
xor
pop
sahf
ljmp
pop
push
lock
xor
fnstsw
lods
and
nop
scas
in
pop
in
pop
out
sbb
push
sub
sbb
push
jle
push
push
ficoml
push
and
pop
push
jl
jecxz
test
das
mov
jg
inc
jmp
sbb
mov
out
shrb
push
fists
int
pop
in
lahf
add
pop
sbb
les
dec
pop
jecxz
ret
std
jge
adc
loope
lcall
dec
dec
inc
mov
or
scas
and
push
and
dec
mov
aas
imul
aad
xchg
and
pop
mov
adc
cld
pop
scas
imul
lcall
sahf
stos
test
adc
dec
jmp
xlat
pusha
xor
and
fdivrs
xchg
div
mov
int3
xchg
push
pop
fnstenv
popa
shll
push
sti
pop
inc
mov
imul
cld
lods
xor
fwait
testl
pop
imul
pop
mov
pusha
loope
leave
fimuls
inc
aam
stc
xchg
push
push
int3
and
dec
in
and
orb
fsubrp
dec
lret
shlb
aam
sbb
fisttpll
add
bound
sub
mov
ss
lret
fstpl
or
dec
rcrl
in
mov
mov
lds
xchg
out
in
mov
mov
inc
in
and
mov
mov
gs
sahf
imul
test
in
popa
les
stc
jmp
sahf
into
popf
mov
jo
int3
mov
inc
push
jno
cltd
cmpsl
rcr
sub
mov
sbb
pop
into
xor
push
mov
adc
push
insl
fiadds
fisubl
sub
push
ret
pop
ds
jae
and
rcr
insb
cmp
push
xor
shld
push
test
rcll
cmp
in
movsb
fwait
xchg
cmpsb
imul
loope
icebp
jl
mov
movsb
jae
mov
inc
mov
scas
cmp
mov
daa
mov
stos
dec
addr16
mov
adc
lret
cmp
fcompl
cli
dec
inc
cltd
xchg
mov
addr16
std
mov
popf
fsubrs
aaa
pop
mov
fisubrl
imul
mov
hlt
mov
leave
arpl
or
mov
fcoms
jle
xor
inc
or
into
repnz
fldt
or
mov
pop
pop
notl
shrb
jge
sahf
xchg
inc
xor
cmp
fdivp
popf
popf
mov
mov
xor
scas
jae
jnp
adcb
mov
sbb
cmp
mov
push
sub
out
ds
or
mov
mov
popa
icebp
cwtl
mov
xchg
in
hlt
cmp
mov
subl
jecxz
fdivrp
call
add
mull
adc
aaa
iret
popa
mov
xchg
mov
jae
repz
fmull
xchg
inc
add
jb
decb
sbb
inc
mov
xchg
mov
insl
push
rcll
push
cmp
insl
or
gs
popa
insl
sarb
mov
xchg
int3
cmp
mov
pop
fisttpll
pop
lock
popf
cmp
das
fnstsw
mov
adc
cmp
xchg
jno
rcl
mov
mov
mov
sahf
lret
xor
jae
inc
sarb
ds
sbb
add
mov
and
sub
add
sub
mov
das
cmpsb
std
cmpsl
dec
es
lods
mov
jge
inc
or
mov
out
loopne
mov
int3
mov
rcrb
addr16
mov
ss
in
mov
mov
mov
es
fxch
mov
stos
or
mov
sti
xchg
pop
insl
pop
mov
xchg
pop
mov
jb
push
jle
sti
lcall
sahf
movsl
mov
cmpsl
inc
pop
cli
in
xchg
pop
mov
adc
in
cmpb
cld
pop
mov
popa
shlb
mov
mov
pop
lds
frstor
pop
sahf
fcompl
outsb
add
in
push
adc
mov
clc
cld
jg
scas
sub
fld
fnsave
mov
sahf
or
imul
cmp
push
jp
stos
popa
mov
faddl
mov
sub
xchg
mov
mov
rcrb
pop
and
push
jle
jecxz
popf
into
adc
pop
scas
fcompl
ja
ds
mov
rclb
sub
sbb
cld
fwait
das
pop
sub
movsb
add
pop
dec
mov
ljmp
sbb
sti
mov
stos
sub
insl
shr
xchg
mov
mov
mov
cmp
xor
es
sbb
inc
std
scas
jae
inc
outsb
in
pop
scas
pop
fwait
xor
dec
sub
dec
or
inc
adc
or
xchg
es
ret
jle
xchg
lods
scas
and
stos
mov
push
mov
mov
pop
mov
mov
ds
push
pop
jmp
push
and
xchg
and
ss
ss
ds
xlat
xchg
daa
inc
popf
cld
fldt
lcall
mov
add
mov
and
xor
popf
mov
cmp
sbb
lret
ljmp
mov
mov
cmp
xchg
lds
mov
inc
sub
ss
pop
aaa
dec
jns
dec
sbb
clc
cld
fcompl
inc
push
dec
lds
inc
fcmovnbe
cld
fst
mov
imul
dec
ret
popa
xchg
push
mov
fwait
pop
mov
sbb
fcoml
pop
jl
jae
mov
jp
mov
cmp
and
aas
xor
repnz
ss
iret
int
cltd
and
lock
mov
imul
scas
xor
mov
movsb
fiadds
jmp
and
mov
aad
dec
xor
lahf
dec
pop
shrb
imul
mov
movsl
jnp
push
sar
cmp
lret
sub
daa
jg
or
test
outsb
ljmp
mov
out
imul
jp
pop
test
cmp
cli
dec
sub
push
dec
stc
nop
aas
mov
aas
jbe
ljmp
cmp
addr16
fildl
imul
inc
sub
nop
xchg
es
push
in
scas
push
daa
mov
mov
mov
cs
jecxz
add
insl
sbb
xchg
pop
push
or
mov
idivb
int
test
push
dec
and
sbb
mov
mov
cmp
inc
das
movsb
add
mov
iret
aaa
and
xchg
aas
jecxz
test
pop
dec
push
sbb
sbb
and
in
cmp
mov
lock
fisubs
sbb
add
shl
daa
sbb
mov
xchg
test
or
mov
jmp
xchg
mov
mov
mov
scas
popf
add
in
mov
rolb
adc
jge
xor
mov
fidivs
pop
imul
and
xor
andl
push
scas
das
popa
sub
mov
sbb
cmpl
ds
std
subb
outsl
daa
data16
pop
jns
sti
inc
pop
sbb
mov
xor
inc
fwait
xchg
mov
mov
xchg
sub
xchg
and
jmp
outsl
out
aam
adc
dec
mov
lcall
call
adc
fidivrs
sbb
addr16
pop
test
int
cmp
xorl
sub
mov
jno
and
out
dec
scas
push
notb
lods
pop
sub
lods
pop
dec
sub
xchg
dec
sub
and
fsubl
push
xchg
mov
jae
inc
mov
jns
push
andl
fsubrs
fidivl
sub
push
xlat
jmp
push
lods
sti
jne
inc
mov
dec
imul
mov
call
in
inc
mov
jo
lods
fsubl
dec
xlat
sub
scas
sahf
int
pop
push
inc
mov
push
andl
cmpsl
inc
lahf
mov
cs
gs
rol
pop
ja
insl
out
outsb
in
fwait
adc
aad
out
adc
lcall
arpl
dec
lods
sbb
or
loope
mov
mov
pusha
mov
or
loopne
xor
sub
nop
lcall
test
out
and
and
xor
pop
and
das
and
dec
pop
mov
loopne
into
stos
xor
fwait
sub
mov
dec
mov
cmp
out
cmpsb
and
outsb
fisubrs
in
pop
ffree
outsb
fisttpll
sbbb
pop
out
inc
cmp
aam
lea
adc
mov
sahf
cld
movsb
dec
int
bound
xlat
in
iret
outsl
xchg
jmp
test
add
and
fsubl
lock
add
mov
shrb
push
in
push
mov
sahf
mov
sub
in
mov
dec
sbb
inc
cmp
push
shl
dec
xor
and
push
xor
std
repnz
sbb
loopne
andb
sbb
xchg
fdivl
cmp
cli
test
iret
dec
out
and
loope
cli
lea
add
xor
scas
pop
pop
pop
jge
notl
out
dec
in
jmp
leave
push
std
inc
xor
fs
cmp
xor
mov
inc
xchg
andb
cmp
mov
mov
dec
popf
mov
add
insl
cmp
ss
adc
inc
sarl
jecxz
xor
mov
inc
nop
inc
cmpsb
inc
mov
push
jnp
or
insb
scas
cs
inc
shrl
pop
ljmp
cli
daa
imul
das
shlb
out
mov
sbb
fdivl
scas
mov
cwtl
pop
shll
fadd
jbe
jns
xlat
mov
inc
clc
test
cmpl
ljmp
in
cmpsl
adc
push
daa
and
pop
fidivrs
nop
sub
jp
sub
fwait
jnp
scas
sub
jnp
fwait
mov
mov
mov
jnp
mov
dec
mov
lock
mov
inc
jle
cmp
mov
fucompp
xchg
pop
fsubs
or
lea
pop
jl
adc
mov
cli
popa
in
outsl
or
mov
push
enter
add
sbb
test
mov
outsb
dec
xlat
xor
in
dec
mov
int
test
loopne
sbb
xor
mov
fisubrl
cs
outsb
dec
cltd
adc
insb
mov
mov
xor
test
add
pop
xor
xor
dec
arpl
adc
cmp
push
or
js
fidivs
icebp
lods
and
shrb
repnz
xor
sahf
stos
mov
or
popf
xchg
adc
jnp
mov
out
sahf
mov
out
cs
aaa
sbb
mov
xor
jge
popfw
mov
int3
xrelease
fucom
loope
lock
lods
mov
in
frstor
test
sub
or
aaa
add
sbb
sbb
arpl
sahf
and
jg
dec
fcomp
sub
mov
hlt
push
sbb
popa
outsb
jge
fs
in
dec
xchg
or
and
jmp
jl
es
mov
dec
aaa
mov
in
out
fisttpll
pop
mov
mov
mov
xchg
xchg
fnsave
fnstcw
push
jle
fnsave
mov
add
adc
andb
sbb
test
rolb
popf
and
sti
mov
and
pop
rclb
dec
xchg
sahf
js
jns
and
sub
aaa
ljmp
sbb
sti
sahf
and
add
pop
mov
mov
sub
mov
adc
cmp
in
sahf
fisttpll
fdivr
mov
mov
outsb
dec
or
inc
dec
mov
mov
sub
xchg
add
stc
and
icebp
push
hlt
dec
mov
jb
jns
pop
insb
test
inc
and
mul
mov
incb
fimuls
push
adc
mov
mov
loopne
fsubp
adc
add
testl
or
mov
in
inc
scas
movsb
jae
jno
scas
xchg
lods
jmp
int
mov
mov
sbb
repnz
pop
addl
sbb
cmc
in
xchg
mov
mov
adc
lds
push
sarb
dec
cmp
xchg
and
mov
ja
or
imul
inc
icebp
flds
out
das
pop
inc
dec
xchg
mov
in
cs
in
testb
mov
popf
jae
ss
dec
pop
mov
lcall
cli
lahf
out
sar
cmp
mov
rolb
fxch
ss
inc
pop
loop
push
sbb
jmp
cmp
pop
xor
aaa
pop
rcl
lds
mov
push
sub
xlat
push
vaddsubps
mov
dec
inc
iret
scas
arpl
dec
cmpsb
aas
and
lea
mov
in
shlb
loope
push
inc
or
jp
repz
or
addr16
lods
lods
mov
sahf
xor
and
fsts
xchg
xchg
xchg
cmpsl
clc
lods
aas
popf
and
idivb
push
mov
ret
sub
sub
inc
test
mov
and
or
or
cmp
int
lahf
sub
outsl
push
jae
add
sub
lcall
fisubrs
xchg
lods
mov
cwtl
jmp
adc
inc
sub
cltd
arpl
sub
dec
mov
lods
xchg
fildll
push
xchg
test
adcl
lock
inc
or
push
lret
push
pop
sbb
aaa
in
push
stos
sub
clc
mov
mov
dec
shlb
cltd
rorb
add
xor
stc
flds
xor
cmpsl
sahf
ret
repz
pop
leave
rclb
jae
mov
lods
pop
in
mov
loopne
push
iret
ret
lret
inc
sbb
mov
ret
xchg
fcoml
cmovno
pop
push
fcmovu
test
hlt
cmp
mov
sub
sub
icebp
and
cmc
lret
insw
jnp
bnd
jb
xor
xor
xor
leave
ds
xlat
std
js
cmp
xor
ret
cmpsl
sti
pop
imul
repz
loopne
inc
shl
std
aaa
cmp
ret
sbb
dec
repz
ret
lret
daa
pop
in
mov
out
ret
sbb
mov
or
cmp
jmp
fists
mov
in
jp
ret
lcall
xor
jl
sbb
std
aas
ret
clc
pop
or
and
cmpsl
cltd
shll
ret
stos
mov
xor
aaa
sub
adc
addr16
popa
in
add
aaa
out
inc
mov
dec
ss
cmp
cmp
or
ja
sbb
sbb
pop
xchg
ss
popf
fsubrs
mov
test
cmpsl
out
pop
and
xchg
xor
cmp
lea
stos
hlt
sbb
xchg
bts
mov
cmpsl
pop
xchg
in
mov
repnz
and
stc
mov
lods
push
cmp
xorl
mov
jmp
cmp
xor
ret
insl
mov
das
jge
sub
inc
cld
push
mov
ret
xchg
xor
mov
jns
ds
test
and
outsb
mov
inc
ret
cmp
xor
popa
lods
cmp
aaa
std
popf
lret
dec
sub
loope
xor
jp
xchg
cmp
xor
sahf
mov
jmp
cmp
lods
or
sbb
and
mov
sub
dec
jl
std
popf
test
popf
and
stos
out
add
mov
shrb
push
xchg
dec
mov
loope
insl
and
fnsave
rcll
mov
test
mov
sub
lcall
mov
out
clc
xchg
sti
shrb
jbe
cmp
jnp
xor
mov
ljmp
sahf
or
jecxz
xor
std
cwtl
xchg
pop
in
sbb
cmp
faddp
adc
xchg
add
mov
inc
fnsave
hlt
shlb
xchg
jle
test
insb
loop
mov
aaa
add
shlb
pop
mov
rcrl
jnp
out
test
xchg
hlt
popf
xlat
push
decb
fidivrl
xor
xor
xchg
mov
test
cmp
sub
mov
call
mov
or
sub
cmp
ficomps
jnp
xor
mov
cmp
mov
repnz
popf
pop
fisubl
mov
cmp
pop
fldl
mov
add
push
push
mov
test
std
mov
pop
bound
inc
addr16
lret
mov
mov
pop
adc
add
push
jb
lock
movsb
inc
xchg
xchg
pop
sub
cltd
loope
or
add
mov
add
cmc
test
xor
mov
or
jg
mov
loop
clc
mov
mov
jecxz
push
jecxz
dec
xor
mov
mov
in
mov
and
or
mov
mov
jae
mov
repz
movsb
call
test
mov
enter
iret
mov
jnp
es
pop
inc
jne
mov
das
jae
or
adc
arpl
enter
mov
inc
push
xchg
sbb
addr16
mov
in
sahf
adc
sub
mov
mov
fisttpll
mov
ja
dec
push
mov
fsub
inc
ss
mov
cs
popf
xor
xchg
aam
dec
add
aaa
xchg
lret
jl
js
stos
fsubp
mov
lock
popf
fidivrl
fidivrs
inc
aas
mov
mov
sub
lahf
in
mov
cmp
cmp
popa
jl
jbe
adc
adcl
shr
cmpsl
sub
stos
popf
add
shll
and
inc
pop
mov
mov
push
in
mov
iret
std
xchg
mov
push
xlat
jecxz
xchg
jbe
mov
and
aas
sahf
mov
std
shll
xlat
xchg
xchg
mov
es
adc
les
mov
popa
shrb
imul
xchg
mov
clc
xor
ds
stos
sbb
je
xor
mov
or
mov
jbe
inc
xchg
imul
sbb
rorb
dec
mov
imul
stos
inc
testl
push
aas
mov
mov
repz
iret
mov
test
fstpl
mov
sahf
orl
js
cmpsl
sub
std
ficompl
mov
jne
xor
mov
pop
pop
add
mov
pusha
cmp
sub
mov
out
pop
orb
xchg
inc
or
mov
mov
mov
cmpsl
pusha
lcall
loop
pop
dec
jne
scas
sub
lahf
push
fstl
jg
test
lock
and
xor
imul
cmp
inc
mov
insl
dec
mov
push
lock
ja
mov
or
sbb
in
popf
add
mov
pop
popf
out
dec
fiadds
adc
jns
hlt
inc
out
inc
push
test
popf
in
es
mov
imul
test
sbb
jmp
mov
into
pop
shrb
xchg
lcall
adc
ds
xchg
jns
mov
gs
sbb
scas
je
mov
lahf
pop
jne
lods
mov
subl
mov
push
ret
rorb
imul
lcall
mov
jl
mov
dec
lods
sbb
nop
repz
sbb
fisubl
sub
and
cmc
in
xchg
sub
lock
int
xchg
das
mov
cltd
fldenv
cmp
outsl
fidivrs
mov
xchg
sarl
adc
xlat
and
mov
push
fisubs
jecxz
xor
mov
pop
sub
xor
fisubs
addr16
fnstsw
mov
push
mov
roll
das
or
aam
outsb
sti
std
sub
xchg
mov
xchg
test
sbb
je
stos
pop
cmp
mov
pop
ja
dec
popf
mov
fnstcw
subl
lds
pop
pop
lods
mov
mov
mov
xchg
cmp
jg
add
shlb
adc
std
insl
aaa
pop
dec
mov
decb
repz
cli
icebp
insl
lret
sbb
xor
add
cmp
mov
cmp
addl
pop
add
jo
cmp
and
movnti
int3
stc
mov
xlat
test
dec
mov
and
sub
insl
jns
dec
in
cmp
jno
sbb
shrb
pop
ret
mov
les
leave
dec
mov
mov
enter
push
clc
ss
rcl
mov
imul
es
mov
jecxz
pop
aaa
popa
test
fidivrs
cmpsl
mov
or
aaa
ss
adc
ficomps
imul
popf
push
es
mov
fld
jbe
push
jge
lods
mov
dec
adcl
fcmovnu
adc
and
out
ds
sbb
shlb
out
ljmp
stos
vpaddw
aam
cmpsl
inc
popa
or
dec
rcrb
int3
and
sbb
push
mov
sbb
mov
push
decb
mov
shrb
in
sbb
shl
mov
dec
insb
push
xlat
push
jp
cmp
mov
jg
faddl
jg
stos
popf
add
mov
loop
mov
sahf
pop
pop
pop
jae
sub
jno
jg
enter
fimuls
std
jge
mov
adc
lods
jle
loop
es
mov
test
mov
mov
mov
jae
and
ror
fwait
push
jnp
push
mov
sbb
mov
mov
repnz
jle
add
mov
ja
push
stc
dec
xor
and
test
sahf
out
mov
push
stos
pop
add
roll
ds
stc
mov
pop
test
pop
jmp
rclb
xchg
repnz
lock
fnstsw
jbe
xor
fsubp
xchg
inc
jge
ret
aaa
add
in
cmp
ss
imul
pop
mov
jns
test
je
push
pop
in
jp
scas
mov
in
mov
xor
clc
push
jae
or
and
mov
dec
mov
imul
es
enter
xchg
adcb
cmp
daa
ja
or
arpl
inc
ficomps
dec
sahf
xor
add
out
jae
ss
mov
or
add
cmp
xor
push
repz
mov
inc
cmp
pop
sahf
mov
cltd
popf
and
sbb
mov
pusha
cmp
lcall
iret
sbb
mov
test
jo
mov
dec
xlat
cmp
push
shlb
mov
out
fmull
sbb
orl
jns
inc
pop
push
cli
les
jae
sbb
fdiv
mov
and
shrl
jecxz
scas
fsubs
cmp
xchg
mov
hlt
jae
movsl
sbb
fsubs
xorb
je
inc
pop
pop
in
mov
loop
cs
mov
inc
or
push
adc
mulb
cmp
addr16
fisubl
in
iret
xchg
insl
or
xchg
idiv
push
pop
push
mov
outsb
stos
mov
mov
push
idiv
scas
mov
sbb
rorl
std
mov
dec
jle
outsl
sbb
cld
fisubs
outsb
pop
mov
imul
cmpsl
test
or
sub
dec
xchg
mov
xchg
mov
mov
xchg
divl
hlt
inc
pop
cmc
add
imul
sbb
adc
mov
data16
mov
insl
std
popf
xchg
in
or
loope
mov
mov
jae
push
in
add
pop
push
mov
adc
and
daa
mov
insl
mov
fdivr
int
sbb
mov
inc
cmp
pop
rorl
sub
shlb
scas
fstl
lds
mov
adc
aam
mov
stos
mov
dec
sqrtps
mov
dec
ds
add
jnp
mulb
xor
mov
xchg
repz
push
lcall
mov
fs
mov
xchg
add
xchg
aad
jae
pop
rcll
mov
inc
push
sbb
faddl
xchg
aas
clc
subb
orl
mov
in
es
mov
sub
aaa
pop
inc
sub
xor
pop
hlt
mov
inc
lret
xor
outsl
test
jle
hlt
pop
fnstcw
aam
jle
or
lock
aas
popf
xchg
jnp
lea
mov
mov
mov
cmpb
mov
add
rolb
std
shrb
addr16
xchg
mov
xchg
mov
fs
fsubs
cmp
dec
pop
stc
or
sbb
lods
mov
movsb
iret
rclb
xor
clc
hlt
mov
pusha
push
es
clc
xchg
hlt
test
lret
push
mov
and
and
jl,pt
outsb
jns
fmull
sahf
das
push
mov
cmp
and
push
push
xor
jmp
mov
pop
icebp
jecxz
mov
mov
std
jo
pop
ss
adc
sub
out
lods
out
dec
lock
dec
popl
mov
sub
push
call
in
loopne
xor
sbb
cmp
mov
sbb
repz
imul
data16
adc
std
cltd
call
xor
or
adc
cld
or
cmp
pop
mov
jns
int
push
jp
mov
aam
addr16
out
jns
shlb
insb
inc
adc
aas
push
cwtl
mov
xchg
rcr
and
xchg
shlb
jmp
ds
pop
mov
test
mov
call
xor
stos
dec
movsb
mov
in
arpl
in
jge
and
pop
icebp
sahf
mov
xchg
mov
arpl
mov
loope
orl
jle
sub
rcrb
popf
mov
insl
xchg
push
mov
cmp
cld
out
jae
push
sub
in
mov
cmpsl
arpl
fdivrs
inc
rol
dec
xlat
stos
add
rorb
or
sub
bound
hlt
ret
mov
orb
lcall
sar
and
sub
inc
mov
mov
adc
mov
shlb
inc
hlt
out
mov
jo
mov
outsl
test
rorb
push
pop
inc
ljmp
inc
mov
fistpl
xchg
testl
mov
mov
sbb
add
jnp
popa
fisubs
repz
test
icebp
test
movsl
pop
and
mov
in
adcl
pop
mov
imul
mov
push
mov
cmp
mov
sbb
fdivr
mov
mov
movsb
xorl
fst
and
or
mov
mov
push
addr16
push
and
add
fstl
mov
testl
mov
std
gs
and
jmp
and
xchg
test
pop
ret
sahf
adc
dec
popf
sbb
loope
or
jecxz
out
adc
es
mov
pop
inc
pop
mov
sarb
addl
push
or
cwtl
mov
and
jnp
mov
fs
xchg
inc
mov
lret
lods
cld
xchg
call
and
daa
ds
mov
fs
mov
mov
mov
mov
rorb
jge
sub
xor
call
jge
sahf
mov
mov
cmpl
fs
pop
in
fcomp
popf
pop
sahf
sbb
mov
mov
in
rcrb
cmp
movsb
ds
das
xor
movsb
xorb
mov
adc
adc
and
xor
mov
sahf
and
scas
ret
sbb
mov
inc
sar
cltd
mov
cmp
push
mov
sbb
add
push
pop
mov
adc
xor
and
test
and
mov
ljmp
sub
mov
sahf
or
shll
popf
dec
das
sbb
test
int3
and
imul
pop
jge
and
pop
ja,pt
js
adc
test
mov
jge
das
mov
push
mov
arpl
stc
mov
test
sahf
andl
and
jo
or
dec
pop
in
add
sahf
mov
sub
out
pop
xchg
pop
shlb
pop
ja
sahf
mov
mov
in
add
add
sbb
push
mov
lods
ss
push
sahf
and
pop
pop
sahf
ficomps
divl
lret
jmp
fwait
je
daa
cmp
pop
push
mov
push
push
mov
out
popf
mov
in
lcall
and
xorb
pop
arpl
xchg
and
pop
jo
pop
mov
xor
xor
inc
jmp
mov
enter
mov
mov
xchg
sub
jmp
dec
loopne
cmp
cmpsb
mov
cltd
sub
pop
mov
lds
adc
xor
pop
outsl
and
nop
sahf
cmp
xchg
push
std
insb
xchg
push
testb
inc
notb
icebp
cli
repz
cwtl
mov
push
xchg
cmp
jg
test
push
mov
jnp
pop
test
cmpsl
jge
cli
jb
jno
pop
push
cmp
pop
ss
arpl
xchg
cmp
cmp
mov
dec
add
add
pusha
adcl
shlb
out
adc
inc
xchg
in
mov
add
mov
cltd
jb
mov
test
mov
push
add
xchg
es
addr16
outsl
fdivr
sbb
loop
aaa
push
push
cmp
mov
push
pop
aam
sub
fs
pop
dec
loop
mov
repz
xor
sbb
stos
frstor
sbb
add
sbbl
mov
mov
dec
add
or
mov
addl
cmp
mov
cltd
jg
push
leave
cmpl
fs
jmp
xchg
inc
jle
adc
orb
and
push
jns
cmp
mov
mov
push
cmp
ror
scas
cmp
outsb
mov
mov
sbb
mov
push
xchg
cs
add
lds
pop
stc
data16
sahf
mov
adc
sub
mov
add
in
lods
xor
mov
fsubp
push
mov
add
jg
mov
lcall
out
or
and
jg
cltd
ret
scas
lods
push
addl
add
leave
xor
in
sub
inc
mov
inc
sub
or
std
outsb
jne
test
arpl
xor
cmpl
pop
lea
jne
xchg
add
repnz
or
adc
fdivrs
sub
jle
out
popa
lods
xchg
dec
sahf
movsb
xor
xchg
insb
lahf
add
xor
mov
in
add
jl
es
js
das
pop
and
add
fldcw
pusha
add
dec
pop
icebp
movsl
aam
jb
repz
xor
out
mov
fmuls
jmp
popf
inc
mov
sahf
or
fsubs
lods
jno
dec
sub
arpl
fsubl
jo
push
jg
mov
mov
lods
jmp
shrl
mov
popf
adc
in
and
test
aad
arpl
sbb
test
popf
es
sbb
pop
mov
icebp
sahf
fnstcw
pop
mov
cld
stc
repnz
jns
test
movsb
adc
or
lcall
mov
fisttps
andl
push
adc
ret
scas
inc
push
inc
mov
pop
xchg
sahf
ret
ss
out
aam
mov
dec
adc
xor
xor
mov
fdivr
out
mov
mov
sti
rcl
xor
loopne
imul
mov
repz
call
xor
movsl
mov
adc
aaa
int
or
sahf
fisubs
and
loope
es
push
sub
loopne
xchg
in
and
mov
sbb
in
jmp
mov
jns
out
push
test
out
adc
cmp
andb
cld
pushf
les
xrelease
lret
push
sub
sbbb
push
movl
int3
sbb
sbb
xchg
xchg
dec
je
cmp
jae
cmp
cmpb
rcrb
fs
mov
cmpl
andb
mov
mov
movsb
lcall
and
sub
mov
frstor
add
adcl
jle
xchg
sub
loop
test
loop
sbb
fsub
ss
cmp
pop
jle
out
sub
sahf
push
push
in
adc
fsubs
push
call
dec
jbe
jle
xor
xor
mov
ja
jp
fnsave
mov
cmp
pop
lods
out
pop
dec
mov
or
jge
xor
aad
jge
popa
popfw
cmp
sub
jge
jle
test
or
and
ret
outsb
call
inc
and
cmp
mov
aaa
fmull
jo
lcall
imul
mov
and
outsl
mov
test
scas
inc
add
addl
movsb
ss
mov
leave
int
ret
mov
mov
cs
repnz
fwait
pop
enter
ds
cmp
stc
sahf
lahf
pop
scas
dec
jne
ds
jge
add
mov
mov
and
pop
or
cmpsl
xor
add
add
outsl
fcomps
adc
shlb
scas
movsl
cltd
mov
mov
cltd
mov
mov
and
cmp
push
test
in
out
mov
jp
xor
and
adcl
cld
cmp
xchg
cmp
test
jno
cmp
add
mov
mov
mov
sub
mov
mov
lds
cmp
mov
in
aad
shl
push
jae
cmpsl
jne
xor
sub
xchg
adc
adc
mov
mov
pop
fcompp
add
loope
lods
and
and
dec
repz
test
mov
jp
mov
sbb
cmpsl
inc
repz
sahf
push
std
shrb
in
imul
popf
dec
adc
xor
xchg
mov
sarl
es
pop
adcl
cmp
aam
fnstenv
cmp
enter
aam
push
mov
push
mov
and
push
icebp
xor
fidivrs
repz
das
out
outsb
lea
xchg
push
jmp
cli
out
in
cmpsb
mov
adc
xchg
and
xchg
mov
cli
adc
test
fwait
xchg
xor
das
dec
mov
shrb
mov
mov
push
xchg
inc
inc
lret
cmp
xchg
in
lret
mov
pop
dec
clc
stos
int3
lahf
inc
aam
push
sahf
xor
dec
pop
sti
pop
mov
sub
jbe
arpl
sub
inc
rcrl
dec
mov
xchg
dec
xor
xchg
insl
jp
adc
shrl
add
mov
out
cli
mov
clc
sub
mov
or
and
bound
enterw
hlt
out
add
mov
mov
fimuls
push
insl
fld
sbb
std
mov
flds
jp
xchg
das
pop
xchg
mov
test
fiaddl
popf
mov
dec
ss
xchg
gs
popf
push
cmpb
enter
add
lods
mov
fbld
ja
sub
jmp
sub
and
or
and
push
jmp
das
inc
mov
mov
mov
mov
add
in
orl
movsl
cltd
sbb
inc
jne
pop
fxch
cltd
arpl
sub
push
cwtl
mov
push
adc
jne
into
adc
sub
andb
push
ds
insl
bound
fdivr
dec
mov
addr16
shll
pop
inc
cmp
shr
jg
jns
inc
mov
xlat
mov
popl
jle
in
cmp
ss
dec
adc
fldl
cltd
out
sbb
adc
sbb
cli
push
loopne
jle
mov
lock
shll
sub
jge
out
pop
int
jo
push
xchg
icebp
in
ret
repnz
aad
or
sbb
xchg
jp
adc
data16
in
pop
jge
sub
and
inc
fstl
add
mov
push
mov
test
std
mov
and
fisubs
fdivr
pop
bound
in
call
pop
pop
icebp
push
loopne
lahf
enter
adc
rol
or
out
jle
cmpsb
movsb
push
dec
mov
push
mov
and
les
cmp
or
loop
idiv
in
mov
and
scas
inc
xor
sar
fprem
sahf
adc
bound
cltd
rclb
xlat
cmpsl
sub
or
lea
negb
inc
and
adc
cmp
test
sbb
sbb
call
pop
mov
mov
ret
sbb
call
pop
mov
mov
mov
andb
cmc
lcall
stos
xchg
push
fxch
jbe
cmp
test
add
jne
mov
push
and
jp
adc
mov
ror
cmp
not
scas
and
shrl
and
arpl
xchg
negl
cli
and
mov
ja
push
popf
push
mov
negb
jne
sub
mov
dec
xchg
pop
popa
in
lods
into
sub
lods
dec
test
sbb
pop
and
cmp
in
dec
fs
data16
lods
xchg
fisubrl
insb
sbb
inc
sub
dec
lock
mov
sub
stos
mov
sub
and
stos
stos
std
add
mov
das
xor
mov
lods
mov
add
sub
and
test
movsl
sbb
fnsave
cmp
sub
in
repnz
sub
and
and
shlb
mov
into
xor
movsb
mov
xchg
cmp
add
and
ss
mov
cmp
and
cmp
cmp
push
or
mov
and
dec
jnp
mov
and
ret
jge
sub
fs
push
mov
cltd
fisubl
mov
mov
xor
xor
xlat
pop
gs
pop
dec
aas
pop
pop
pop
dec
dec
mov
je
and
shl
in
pop
dec
icebp
jg
inc
mov
loope
dec
pop
add
ss
repnz
add
fnsave
xor
repnz
mov
pop
sub
add
mov
xchg
popf
pop
call
cmp
inc
mov
sub
mov
cmp
scas
cmp
sub
mov
idivb
scas
cmp
sbbb
add
mov
cmp
scas
cmp
xor
mov
aaa
dec
sub
and
dec
jnp
mov
mov
cmp
and
dec
jnp
mov
mov
dec
xchg
pop
sub
mov
mov
scas
mov
and
shlb
stos
fldenv
pop
mov
add
stos
mov
mov
mov
add
lret
push
dec
shll
xor
enter
or
push
push
sub
xor
imul
daa
mov
jle
jnp
pop
imul
lcall
shlb
jnp
inc
mov
sub
mov
sahf
mov
mov
cs
push
aas
jae
xor
xor
and
add
mov
sub
xor
in
repnz
add
or
dec
lods
cmp
xor
add
mov
mov
xchg
xor
add
das
call
scas
fnsave
cmp
dec
sub
inc
stc
sbb
fnsave
dec
cmp
sub
xor
mov
into
cmp
push
cmc
jo
ss
inc
aaa
and
inc
cmp
dec
jo
gs
shl
adc
int
xchg
aad
mov
fnstcw
inc
mov
inc
push
pop
mov
or
mov
aam
cli
sub
cmp
mov
ret
mov
jno
mov
dec
pop
mov
lret
pop
mov
sti
cmp
cmpsl
xchg
cmc
insl
xor
in
mov
sahf
xchg
sti
shlb
std
nop
arpl
xor
arpl
adc
aas
out
jno
hlt
xor
pop
jne
in
divb
pushl
sub
mov
push
sub
dec
jnp
sub
sub
mov
in
bnd
jnp
mov
pop
sub
add
scas
jnp
jnp
jbe
jnp
jnp
jnp
mov
pop
sub
add
scas
jnp
jnp
jbe
jnp
jnp
jnp
mov
pop
sub
add
scas
jnp
jnp
jbe
jnp
jnp
jnp
mov
pop
sub
sarb
jge
and
push
test
mov
pop
cltd
sub
or
lcall
mov
mov
into
and
mov
data16
and
mov
repnz
ds
pop
sti
mov
data16
push
jg
idivl
into
sahf
sti
mov
data16
popf
jg
sbb
sub
xchg
popf
data16
cmp
pop
sarb
pop
jg
mov
and
dec
jnp
cmp
cmp
xor
std
add
repz
cmp
ss
sub
and
dec
popl
data16
push
in
mov
das
mov
cmp
adc
fdivr
jle
cmp
mov
popa
mov
aaa
pop
loope
aaa
pop
sti
in
mov
data16
mov
xchg
cmp
add
xchg
subb
in
mov
and
cmp
js
fwait
shll
mov
xor
sub
sbb
fnsave
cmp
dec
sub
and
dec
jnp
mov
mov
sub
std
add
mov
into
sub
mov
xchg
imul
ds
mov
mov
data16
sbb
mov
mov
xor
dec
sub
imul
ds
scas
jns
fldenv
xchg
mov
jnp
lock
pop
add
xor
mov
dec
jge
sahf
and
adc
sbb
mov
scas
pop
shrb
scas
pushl
sub
repnz
ds
lods
sti
mov
data16
shrb
sub
imul
ds
stos
sti
mov
data16
sbb
stos
stos
jg
sub
imul
ds
test
test
sbb
test
test
xor
dec
sub
imul
ds
cmpsl
sti
mov
data16
sbb
dec
sub
into
and
in
xchg
mov
sbb
xlat
data16
push
stos
popf
dec
lods
cmp
pop
lret
shlb
pushl
and
imul
ds
mov
test
sbb
mov
and
imul
ds
mov
test
sbb
mov
pop
dec
sub
imul
ds
lahf
sti
mov
data16
sbb
sub
into
sbb
test
sbb
push
hlt
ds
sbb
sub
sub
cmp
mov
in
or
or
ret
std
nop
gs
mov
sub
sbb
mov
std
sub
cmp
and
loope
cmp
sti
pop
sub
mov
cmp
xchg
fstpt
and
cmp
dec
sub
inc
lret
xchg
xchg
cmc
mov
data16
xchg
seta
ss
sub
sbb
fnsave
cmp
es
fnsave
cmp
sub
sub
in
repnz
fs
shlb
xor
add
mov
into
xor
xor
mov
into
xor
mov
xchg
imul
sbb
sub
xor
fwait
xchg
or
mov
shlb
pop
and
xor
mov
scas
ret
inc
jecxz
cwtl
imul
pop
add
dec
mov
dec
test
cli
push
out
dec
int
xchg
cld
jge
mov
mov
pop
xchg
xchg
mov
xchg
das
or
cmp
adc
pop
in
inc
jle
out
popf
in
hlt
dec
fneni(8087
dec
call
xchg
mov
xor
imul
mov
ja
cs
fnsave
add
sub
lods
lea
sub
sub
lods
fnsave
add
sub
stos
xor
repnz
stos
pop
sub
add
sub
test
in
repnz
test
sub
add
daa
pop
scas
cmpsl
xor
repnz
add
lret
lds
mov
inc
or
or
mov
cmp
jae
pop
xchg
mov
inc
aas
xchg
mov
in
and
cmp
and
mov
test
stc
shll
lock
into
and
mov
data16
and
mov
repnz
into
and
mov
data16
and
mov
repnz
ds
pop
sti
mov
data16
push
jg
idivl
into
sahf
sti
mov
data16
popf
jg
sbb
sub
xchg
popf
data16
jbe
jne
nop
push
or
cwtl
cmp
mov
jecxz
gs
sub
sbb
daa
add
sahf
imul
std
nop
loope
shrl
inc
sub
or
mov
jl
sbb
idiv
lods
daa
inc
sarl
xchg
sbb
sbb
outsl
enter
mov
lods
jp
cltd
and
popf
mov
jle
mov
sbb
popf
cmp
pop
inc
mov
sub
in
push
jo
fwait
sub
sub
in
repnz
andb
in
mov
out
and
pop
aaa
add
mov
mov
scas
mov
movsl
sbb
fstl
cli
mov
scas
mov
sub
enter
cli
mov
scas
mov
sub
cmp
dec
jnp
xor
xor
xor
std
add
scas
xor
xor
xchg
mov
data16
jbe
popa
out
shll
adc
data16
pop
xchg
pop
mov
sub
mov
sahf
mov
jno
fcomip
mov
dec
dec
jp
dec
sub
sbb
loopne
lds
sub
test
rorb
add
mov
dec
lods
sub
mov
xor
dec
sub
and
fs
shlb
sub
das
dec
push
fs
shrb
mov
into
xor
scas
xchg
sbb
dec
into
aaa
xchg
mov
data16
mov
push
add
or
sub
mov
add
in
inc
and
sbb
lahf
cmp
add
ljmp
test
ds
mov
stos
lahf
std
je
mov
lods
xchg
fwait
stc
mov
mov
cmp
jge
lahf
cmp
fdivl
out
push
jge
cld
rorl
mov
mov
gs
sbb
fstpl
cmp
loope
popf
movsl
fdivrl
insb
sub
dec
push
ret
mov
cwtl
xorb
popf
mov
loop
mov
pop
cmp
pusha
sbb
xor
mov
sub
sub
popf
mov
adc
pop
mov
daa
shrb
and
jno
pop
fisubrl
lea
inc
imul
add
mov
out
xor
inc
sub
ljmp
sub
pop
js
push
cmp
add
rorb
in
fidivrs
sahf
stos
sub
mov
fstl
popa
aas
jge
xchg
scas
mov
pop
sub
mov
in
cs
jmp
repz
test
cmp
sub
pop
dec
pop
stc
cmpb
mov
sub
push
in
call
sbb
push
and
sub
loopne
cmpsb
dec
lret
mov
stos
ficompl
aaa
or
mov
jno
je
hlt
and
and
ljmp
sbb
sub
fwait
fs
and
int
pop
in
or
jge
paddusb
push
cmp
push
clc
cmp
loopne
mov
jbe
cmp
push
montmul
cmpsb
add
loopne
testb
mov
lds
lods
shl
repz
out
cmp
add
xchg
adc
je
repnz
fwait
lret
rcll
pusha
xor
pop
xchg
and
std
mov
dec
and
in
xchg
jmp
mov
movsb
pop
out
mov
mov
loope
or
int
andl
and
sbb
fnstenv
idivb
cmpl
mov
mov
xlat
inc
xor
xlat
stos
xor
outsb
notl
mov
push
or
jp
movsb
repnz
cmp
out
jo
add
inc
aam
cmc
aam
mov
and
push
ret
cmpsb
mov
ss
scas
mov
push
jecxz
push
ffree
leave
mov
mov
std
ljmp
push
mov
pusha
pop
and
jnp
out
bswap
cld
sbb
adc
xorb
hlt
mov
cli
xor
hlt
jns
loop
fwait
push
jo
jns
adc
mov
pop
fidivrs
addr16
push
and
jo
xchg
sbb
and
jmp
sti
inc
pushf
jmp
and
loopne
mov
dec
xchg
in
pushf
inc
scas
movb
cmp
ficoms
movsb
jbe
fisubrs
lcall
in
popf
aam
frstor
popf
and
lret
iret
mov
mov
xlat
cmp
clc
jecxz
fidivrl
test
daa
cmp
xor
mov
mov
sbb
dec
test
cmp
insl
push
ds
cmpsb
repnz
addl
lock
push
hlt
mov
jl
out
in
stos
andl
jl
mov
xor
cmp
pop
xlat
sub
push
and
test
arpl
push
popf
xchg
fsubrs
mov
lahf
or
sahf
sub
pop
mov
jae
mov
mov
jmp
aam
inc
xchg
gs
add
lods
shrb
stc
mov
cwtl
rcr
stos
and
xchg
inc
or
popa
loope
mov
lods
sar
sub
out
pop
lods
sub
sbb
inc
rcrb
pop
js
mov
mov
sbb
cmp
insl
add
call
sub
es
pushf
loopne
fs
xchg
pop
fistps
outsb
adc
inc
scas
jb
es
and
or
push
mov
roll
jne
fisttpll
sbb
pop
pop
ror
pop
xor
or
sub
jnp
fdivrl
pop
shlb
inc
int
mov
std
mov
out
xor
jge
arpl
repnz
dec
add
push
mov
xchg
sub
stos
inc
lahf
shrb
jmp
test
lret
inc
sbb
out
sub
sbbb
lret
pop
cmp
xlat
movsb
sbb
add
cld
ljmp
pop
jmp
andb
mov
mov
cmp
mov
outsl
test
or
repz
and
add
jnp
jne
js
ret
ss
int
fdivrl
pop
or
sbb
xchg
int3
dec
movsl
out
sbb
pop
add
pop
cmc
loop
cmp
cmp
cwtl
adc
pop
mull
mov
xchg
fdivrp
imul
cmp
adc
dec
stos
outsb
jge
and
mov
stos
pushl
clc
out
pop
lock
lret
xchg
bnd
out
mov
mov
or
mov
pop
sub
lahf
loop
pop
adc
sub
push
into
xchg
dec
sub
inc
mov
mov
xchg
sahf
add
and
pusha
cmp
xchg
rolb
push
dec
aas
jno
ljmp
nop
repz
mov
cltd
mov
arpl
in
cmpsl
dec
outsb
or
fcmovbe
cld
andb
mov
out
fldl
add
unpcklps
mov
inc
dec
xlat
iret
stos
sub
test
sti
mov
push
jg
jne
pop
jg
lahf
adc
mov
sbb
leave
xor
sbb
sahf
lods
loop
jge
mov
pop
mov
movsb
mov
repnz
enter
std
hlt
movsb
mov
lock
xor
idivl
and
rorb
jge
and
and
fildll
sbb
repnz
fildll
sbb
xor
xchg
test
mov
subb
sbb
clc
les
lods
adc
add
movsb
scas
pop
xchg
cmpsb
std
mov
insb
sarb
movsb
mov
jecxz
clc
scas
and
ljmp
movsb
rcrb
clc
les
inc
popf
fucomp
jle
xorb
jns
ds
and
and
aad
jp
mov
mov
jae
fildll
mov
jge
jmp
mov
outsl
xchg
hlt
jl
icebp
push
sbb
cwtl
mov
and
out
jecxz
mov
xor
fs
fistpl
jb
fs
shrb
dec
in
push
ss
test
sbb
insl
lea
jg
or
movsb
mov
mov
and
mov
shlb
push
popf
stos
fcmovb
mov
add
xor
out
insb
sub
xchg
in
roll
pop
or
lods
pop
loope
sub
int
cmp
adc
fldl
or
sub
sub
mov
mov
scas
xchg
inc
pop
cs
movsb
adc
mov
pop
sub
jle
mov
dec
mov
sub
sub
push
popf
jmp
and
lahf
cmp
jge
dec
loopne
cs
xor
cmp
dec
add
cmp
mov
jg
push
xor
mov
les
fs
cli
movb
enter
push
cmpsl
jge
mov
push
leave
lds
cmpsl
add
lret
ret
stc
ja
popa
out
pop
outsl
rclb
add
sub
imul
xor
dec
dec
es
lret
cmpsl
sub
cs
xchg
mov
jb
push
and
fldenv
movsb
clc
outsb
xor
sub
mov
mov
mov
add
xchg
rolb
sahf
push
cmp
sbb
jne
mov
xor
mov
mov
jne
pop
mov
pop
and
add
sar
push
xor
lods
pop
cmp
mov
into
push
es
mov
mov
or
es
daa
pop
push
test
fnstcw
mov
push
popf
ljmp
sub
sub
add
pop
jg
mov
pop
loope
pusha
mov
lret
pop
sti
xchg
push
std
sub
mov
mov
xor
mov
ret
divl
popf
mov
shrd
mov
dec
sbb
and
cld
out
xchg
add
xor
sub
test
ds
mov
sysenter
xor
mov
cli
pop
pop
aas
clc
and
sub
scas
movsl
xor
inc
xchg
push
mov
jge
ss
mov
mov
out
xor
and
jp
mov
enter
in
pop
movsb
cltd
pop
inc
pop
dec
lds
xchg
add
fs
cmpsb
dec
repnz
and
inc
lcall
push
xchg
ret
ds
push
data16
addr16
adc
pushf
xor
add
mov
fwait
mov
cmpsb
mov
mov
mov
mov
xor
cs
int3
sub
clc
sbb
and
mov
fdivp
xor
add
scas
sub
xchg
pop
mov
sub
jbe
dec
xchg
int
out
jbe
pop
dec
xor
stos
sbb
jno
ds
fcompl
imul
pop
fiadds
out
test
jp
popf
test
jo
xchg
push
out
in
jae
mov
push
push
scas
test
stos
popf
dec
sub
sarl
jno
adc
pusha
jg
clc
std
or
daa
or
mov
inc
into
in
or
faddl
mov
mov
stc
nop
stos
pop
and
xchg
mov
out
or
stos
test
mov
push
mov
add
in
sbb
fcmovnbe
subl
out
fbstp
clc
mov
fsubrs
cmpsb
cmpsb
inc
outsl
sbb
ljmp
int3
or
or
add
lods
rorl
aad
xor
nop
mov
mov
sub
in
in
ret
adc
daa
or
jae
bound
in
mov
fidivrs
inc
push
or
fisttpll
lods
and
and
test
push
jae
js
sbb
mov
xchg
sub
imul
mov
inc
sbb
jne
cmp
cmc
in
or
cmc
jo
mov
jb
out
cmp
insb
fiadds
frstor
jbe
cmp
std
mov
je
inc
inc
mov
jg
out
jae
pop
addr16
mov
mov
xor
lock
shll
and
sbb
sub
dec
insb
mov
cmpb
movsb
push
shrb
adc
add
dec
std
cmp
jbe
out
out
pop
push
jle
fidivs
cld
js
cmpsl
cwtl
mov
mov
xchg
mov
fninit
or
cmpsb
xchg
pop
test
in
outsl
push
test
test
adc
push
sub
in
fmul
mov
sbb
dec
add
lock
les
nop
lods
push
test
jg
sub
inc
cs
xchg
cmc
pop
xor
push
outsl
fsub
xlat
loope
add
cs
push
mov
add
inc
mov
testl
sbb
sub
sub
mov
cld
sbb
pushf
sbb
or
mov
dec
mov
push
inc
insb
negb
jns
arpl
push
pop
out
push
aaa
cmp
int
adc
mov
mov
cmc
fisubl
loop
mov
add
mov
sbb
add
jns
mov
inc
repz
repz
stos
test
cs
inc
adc
xor
xchg
cmpsl
cmp
xor
mov
inc
fucomi
outsb
into
imul
push
aam
adc
jmp
sbbb
shll
inc
xor
arpl
jge
mov
sahf
mov
mov
loopne
stos
aad
lret
fdivrl
mov
xchg
and
fcmovbe
fdivl
insb
dec
inc
and
mov
mov
sbb
mov
cmpsb
mov
gs
mov
lret
pop
aad
popa
adc
xor
mov
inc
mov
or
mov
cmp
and
fisubl
dec
cmc
test
fmulp
and
mov
push
fdivrl
push
sbb
sbb
lcall
nop
fiadds
dec
mov
ss
sahf
fsubs
stos
pop
addr16
cmp
xlat
xor
xor
das
sbb
popf
lods
sahf
sub
dec
push
xor
lods
stos
test
sub
mov
sub
jle
xchg
adc
xchg
fbstp
adc
dec
cmpsb
sub
scas
loopne
das
and
je
jmp
dec
and
aad
leave
inc
sahf
addr16
sahf
aas
adc
dec
dec
and
movsl
and
add
ret
rorb
and
loope
xlat
xor
pop
jbe
iret
jo
inc
into
push
out
jg
inc
xor
xor
gs
rolb
cmp
gs
scas
push
shlb
adc
xorl
test
js
es
scas
sub
and
lods
jge
scas
in
in
pop
xlat
sarl
rcr
lods
in
insl
xor
popa
mov
es
pop
inc
pop
into
imul
jbe
xchg
sub
das
push
jo
sbb
lods
jb
enter
aam
popf
dec
sarb
cmp
inc
lods
fildll
xchg
lret
lods
insb
cwtl
cmp
rorl
fucomip
dec
cmp
std
mov
cld
xchg
mov
push
arpl
mov
add
loop
in
pop
sbb
movsl
pop
stos
mov
pop
mov
add
in
push
mov
xchg
adc
pop
and
out
repnz
cmpsb
mov
xor
mov
out
and
in
gs
xchg
in
inc
cmpsl
das
int3
inc
lods
js
dec
lock
and
push
enter
xor
jmp
pop
lds
push
inc
inc
iret
sbb
out
test
shrb
adc
mov
mov
fimuls
inc
inc
movsb
bound
inc
sub
into
aas
negb
sub
sti
dec
test
pop
jl
mov
jnp
or
in
jle
xor
rolb
dec
cmp
add
cmp
insl
add
movsl
dec
in
push
pop
push
sahf
xchg
pop
jg
mov
pop
mov
les
cld
sub
mov
dec
inc
xor
js
mov
insb
mov
sub
inc
int3
pop
sub
andl
sub
inc
insl
icebp
cmp
int3
gs
push
stos
in
div
or
inc
cwtl
xor
pop
dec
mov
lret
pop
push
dec
popa
push
mov
ficoms
ljmp
das
scas
add
pop
mov
ds
repz
ljmp
mov
incb
jns
test
addr16
fsts
fistpl
or
loop
xchg
jmp
inc
mov
mov
mov
adc
jae
cmp
xor
jmp
xor
arpl
dec
add
fmull
sahf
into
jg
stos
push
pop
adc
mov
fucom
popf
mov
mov
push
lret
lods
jno
dec
test
fidivs
stc
xchg
lods
shlb
cmpsl
add
mov
mov
xor
sbb
popf
xor
mov
int3
mov
xor
popf
scas
subl
cmpsb
sbb
rcrb
jp
or
testl
mov
sub
add
sahf
sbb
and
stc
inc
iret
in
int
xchg
sbb
pop
incb
mov
lock
ret
test
xor
cwtl
xchg
aaa
aas
jnp
lahf
push
add
sbb
add
mov
push
stc
sub
mov
sub
je
dec
std
jge
adc
cmc
aad
lods
dec
push
dec
inc
inc
scas
scas
fdivl
aad
lods
mov
sub
lods
lret
mov
xchg
pop
xchg
in
inc
out
mov
aad
pop
push
xchg
sbb
incl
mov
dec
jne,pt
inc
aam
mov
cmp
fs
std
shrb
push
sbb
jne
xchg
scas
test
mov
and
ds
mov
lods
addr16
mov
xchg
mov
xor
pop
inc
push
xor
mov
sahf
push
fadd
jo
cmp
icebp
jo
loop
cmpsb
xor
mov
sbb
dec
cvtpi2ps
xor
mov
xor
xchg
pop
cld
mov
mov
adc
cld
insl
pop
out
sahf
dec
movsl
xor
cmp
cltd
mov
xchg
mov
js
rol
xchg
fs
dec
inc
int
scas
xchg
je
call
int3
mov
xchg
in
and
and
fsubp
and
movsb
inc
mov
imul
mov
test
out
out
jo
or
dec
xlat
mov
mov
jae
jl
jge
pop
sbb
inc
pop
repz
lret
std
cs
xchg
add
fldt
jbe
jl
add
int
pop
add
arpl
sbb
xlat
es
movsl
jb
stos
test
iret
xchg
inc
dec
daa
cmc
sbb
mov
push
xor
rcr
mov
dec
pop
inc
dec
stc
jmp
xchg
xor
imul
int
cld
pushf
jl
lods
js
hlt
push
fnstcw
jnp
sarl
sahf
imul
cmc
lret
insl
add
leavew
pushf
popl
fdivrp
aaa
inc
cmpsb
jg
out
mov
movsl
jge
popa
pop
inc
gs
jl
mov
push
mov
add
lea
push
mov
dec
push
add
cmpsb
imul
sbb
mov
xor
clc
mov
sbb
into
adc
mov
push
inc
and
ljmp
xor
sbbb
pop
push
out
gs
mov
pop
xchg
lcall
push
cmp
cld
insb
xchg
in
aam
lahf
mov
pop
ret
mov
mov
mov
into
ficompl
or
cmp
cmp
loope
jmp
daa
push
jp
test
jo
shlb
sti
xchg
insb
addr16
out
xchg
xorl
outsl
test
cmpsl
repz
fnsetpm(287
cs
and
jnp
aas
mov
addr16
and
cmp
xor
scas
pop
xchg
sbb
push
movsb
fisubs
test
push
stos
fcomi
in
sarb
outsl
and
arpl
mov
test
push
cmp
push
mov
pop
inc
xchg
cmp
pop
mov
cmp
nop
inc
cs
aad
inc
in
sbb
gs
aaa
shll
fcmovnu
pop
test
mov
sbbb
out
lahf
lods
insb
test
mov
push
cwtl
imul
popf
add
sbb
mov
lea
push
mov
xchg
mov
mov
insl
add
nop
popf
jmp
out
imul
xchg
cmp
inc
stos
addr16
outsl
insb
inc
dec
mov
lods
sbb
pop
insb
xor
jl
push
sub
incb
jge
mov
and
aam
insb
mov
sbb
jl
ja
sbb
lcall
cmp
pop
lea
sub
xchg
mov
dec
scas
hlt
pop
mov
insl
xor
push
lods
xor
andb
jecxz
outsl
jnp
jecxz
cli
push
lret
imul
outsl
inc
push
out
dec
and
cli
inc
popf
ficoml
negl
stos
cs
mov
push
sbb
push
aaa
cli
inc
into
popa
xor
lcall
lret
inc
das
mov
out
test
shlb
ss
dec
dec
mov
cmp
xor
sbb
fnstenv
mov
pop
cli
jle
aam
sub
jno
jmp
movsl
push
fisubrs
cmpsl
or
jae
aam
add
xchg
add
lds
gs
outsl
mov
aaa
ds
icebp
fsubr
rcr
sbb
jne
divps
push
mov
cmp
leave
inc
in
out
xchg
in
test
scas
cmp
sub
in
xchg
xor
cli
call
mov
enter
addl
mov
xor
mov
cltd
les
popa
inc
mov
mov
cmp
pop
mov
inc
movsl
lcall
ret
lods
xor
loopne
push
sarb
pop
mov
cmp
inc
jecxz
test
fwait
xchg
cli
incb
test
sbb
loope
mov
or
mov
cld
push
sahf
cwtl
in
sbb
inc
clc
push
cmp
or
mov
xor
ljmp
gs
leave
movsb
cmp
and
xchg
lods
pop
xor
frstor
stc
pop
mov
das
out
rcl
shrb
push
std
and
ret
bound
out
inc
das
jne
inc
dec
or
sbb
fwait
add
in
fwait
jnp
sbb
sarb
test
jns
xor
sbb
imul
mov
cmp
inc
add
mov
out
mov
mov
loopne
in
idivb
xchg
push
pop
out
jmp
sahf
mov
sbb
das
cli
cld
adc
cmpsb
ret
pop
mov
fdivrl
insl
popf
pop
das
mov
lds
sbb
pop
stc
push
mov
mov
push
mov
push
movsb
js
popf
mov
pop
lret
mov
xor
ror
xor
cmp
dec
push
imul
add
pop
fucom
dec
cmp
jg
mov
or
shrl
insb
loopne
sbb
fnstenv
xchg
shll
rcrb
in
add
pop
lods
sub
in
sub
sahf
sbb
xlat
hlt
into
inc
sub
sbb
scas
sub
pop
mov
shl
inc
mov
pop
inc
repz
pusha
pop
push
pusha
aas
mov
xor
cld
movsl
scas
mov
sub
stos
sbb
add
in
shll
mov
adc
sbb
sub
xor
sub
int
icebp
ja
test
mov
aad
roll
pop
push
dec
imul
fstpt
fdivrp
dec
add
mov
andl
jecxz
in
imul
dec
fildl
sbb
and
sub
cmpsb
sti
inc
sarb
lret
cld
add
mov
out
sahf
mov
loopne
inc
sbbl
xchg
pop
test
and
inc
scas
out
lea
cmp
push
cmp
stos
dec
or
xor
and
sub
sub
cmp
movsl
mov
xor
aam
fiadds
std
sbb
or
add
test
mov
lods
lahf
or
mov
clc
pop
adc
dec
sahf
aam
xor
xor
mov
sahf
push
dec
add
push
mov
sbb
mov
aaa
cs
lock
test
test
pop
aam
xlat
push
insl
pop
xchg
dec
imulb
lds
jns
loopne
ret
mov
add
loop
mov
movsl
movsb
cmp
dec
pop
fadd
pop
add
mov
test
fldt
and
scas
pop
inc
sub
imul
iret
ret
insb
stos
pop
sub
lock
push
out
cld
lret
cmp
cmp
test
mov
mov
stos
mov
dec
sub
pop
adc
add
sbb
clc
mov
mov
ss
cs
sti
int
dec
and
and
dec
insb
lret
mov
sub
inc
xor
adc
xchg
clc
dec
fbld
sahf
clc
mov
push
adcl
sub
mov
shll
xchg
cmp
movsb
aas
inc
popa
inc
addr16
es
cmp
ret
sbb
test
sbb
or
adc
ret
out
negl
cmp
scas
scas
bsr
or
iret
mov
shll
xchg
out
jg
jl
pop
lahf
cld
loope
sub
mov
lods
popa
stos
stos
and
and
mov
or
lods
sahf
jge
or
shrb
push
hlt
sti
sbb
not
jne
add
repnz
inc
mov
add
mov
pop
mov
sbb
sub
and
inc
mov
pop
mov
repnz
fucom
cs
hlt
mov
std
sbb
push
push
movsl
xchg
addr16
mov
subb
cli
ds
shlb
lahf
lahf
lods
rcrb
leave
cli
xchg
push
adc
or
or
mul
cmp
and
xor
ret
stos
negl
cld
loopne
in
cmp
jle
loopne
mov
ss
pop
lods
mov
sub
into
mov
or
adc
sbb
insb
fcmove
pop
cmp
outsb
loopne
sbb
cld
ds
imul
das
addl
dec
pop
mov
jle
pop
ja
mov
and
mov
jp
and
mov
scas
sarl
pop
jb
movsb
fimuls
push
test
js
addr16
inc
mov
cld
clc
je
dec
sbb
adc
pop
and
sub
mov
idivb
push
dec
push
add
adc
add
add
push
mov
pop
mov
xor
iret
stos
orl
sarl
push
jae
dec
test
nop
mov
cld
nop
push
xchg
and
out
sbb
and
je
sbb
es
pop
dec
xchg
push
cmp
dec
mov
and
and
mov
and
xlat
fdiv
add
xor
mov
mov
loopne
cld
adc
sub
popf
add
cmpsb
xchg
xor
mov
rcrb
scas
adc
jo
stos
jae
cmpsl
mov
mov
in
mov
add
mov
or
lahf
xor
mov
hlt
scas
mov
ljmp
mov
incl
sub
cmpsl
mov
in
gs
ljmp
das
inc
test
clc
push
pop
jmp
fiaddl
cli
inc
lods
sub
sub
stos
and
mov
out
sub
mov
push
or
popa
mov
mov
das
loopne
ret
movsl
jg
shrl
test
and
and
mov
and
cli
movsb
mov
mov
gs
cmp
pushf
lock
cmp
mov
mov
fwait
sub
jbe
mov
dec
lcall
clc
inc
stos
ret
out
loopne
ficomps
mov
xor
cltd
xchg
sahf
mov
sarb
jp
sbb
jne,pt
adc
popf
shlb
sbb
out
dec
or
sub
add
movsl
ljmp
inc
ss
jae
cmpsl
scas
push
dec
sbbb
ret
mov
fbld
clc
jns
pop
inc
std
loope
sbb
or
push
scas
mov
int3
and
mov
pop
loop
mov
push
out
or
aad
push
filds
scas
and
in
dec
scas
stos
imul
cmp
cmc
clc
pop
femms
mov
cmp
js
popf
lock
adc
inc
sub
cwtl
int3
shl
je
or
loopne
int
aam
mov
push
xchg
cmp
xchg
sub
cmp
das
dec
nop
dec
shlb
inc
cmp
das
mov
xlat
cmp
sbb
dec
les
and
cld
js
pop
and
inc
test
jne
test
in
xchg
gs
cmp
mov
in
and
jnp
pop
mov
and
inc
data16
ja
add
mov
cmpsb
in
xor
scas
xchg
mul
arpl
lods
mov
test
jo
iret
mov
mov
cmp
sub
js
jmp
std
sbb
in
push
andb
xor
movsl
cmpsb
mov
pop
sbb
test
cmpb
pop
inc
push
xor
aad
sub
mov
scas
add
sub
mov
rclb
es
aas
shrb
mov
ret
mov
dec
or
daa
shl
test
mov
fistpll
lcall
dec
lret
inc
loopne
fwait
ds
pop
popf
push
dec
popf
xor
sbb
in
lock
daa
out
xor
push
outsb
mov
jo
mov
imul
xlat
stos
cmp
cmp
add
adc
inc
and
push
mov
inc
fdivl
mov
ss
sbb
stos
push
lret
cwtl
jae
mov
rcrb
idivl
sub
stos
and
call
std
dec
clc
jg
jmp
cmp
mov
mov
sti
inc
dec
scas
inc
adc
push
shl
mov
pusha
lret
and
outsl
adc
rorb
dec
pop
dec
push
ss
mov
cmp
sub
sub
test
xor
cld
push
mov
xchg
outsb
pop
scas
test
pop
add
mov
sub
xlat
push
mov
jg
outsl
mov
jmp
pusha
jge
test
push
and
repz
loop
pop
iret
scas
jmp
mov
pop
sbb
insl
pop
int3
push
int
and
mov
fs
xor
outsl
jae
pusha
adc
xchg
add
and
adc
sub
and
test
jnp
mov
or
push
mov
dec
int3
in
or
pop
xor
bound
push
adc
mov
mov
mov
push
cmp
sbb
xchg
scas
shl
mov
pop
mov
adc
xor
jl
mov
pop
cmp
or
pop
es
ret
in
gs
sahf
mov
and
aas
add
fmulp
mov
mov
shlb
mov
cmp
mov
or
push
leave
xchg
mov
pop
fsubrs
cli
or
pop
loop
aas
scas
mov
pop
insb
orb
aad
mov
adc
mov
and
cmpb
jle
sbbb
rorb
mov
mov
nop
arpl
js
or
clc
out
cs
lods
cmp
mov
negb
jecxz
jnp
aaa
mov
mov
pop
xchg
test
lods
test
pop
lret
in
inc
stos
outsl
jns
mov
test
sbb
outsl
jns
scas
pop
push
faddl
outsl
xchg
jl
loop
push
fisubrl
mov
in
popf
ret
test
jns
add
pop
sub
incb
adc
dec
sbb
or
frstor
iret
mov
inc
xchg
stos
mov
inc
sbb
in
stos
jns
push
push
inc
cmp
in
pop
cmpb
sub
xor
loope
rcr
mov
arpl
jns
test
insb
ffreep
lds
mov
jns
lods
xor
nop
call
decb
xorb
std
repnz
cmp
sti
ss
push
sub
psubusb
aaa
jge
aas
ss
cld
test
adc
push
cwtl
push
int
aaa
pop
xor
mov
mov
sbb
lcall
jne
cld
mov
and
fsubs
es
sub
mov
cmp
cmp
popf
and
cmpsl
scas
sbb
arpl
mov
dec
sub
outsb
sti
mov
pop
in
out
push
test
dec
pop
add
rorb
movl
jmp
outsb
dec
loop
stos
jge
cld
or
lods
clc
push
add
adc
jne
inc
and
notl
fbld
and
repz
jle
repnz
loope
pop
pop
mov
jmp
pop
pusha
lahf
sahf
mov
xlat
int3
call
xchg
sbbb
mov
xchg
roll
dec
pop
sahf
jne
ffree
clc
add
repz
ret
sub
or
xor
or
ret
mov
push
xchg
mov
popl
das
dec
ds
leave
mov
inc
add
sbb
add
mov
sbb
mov
sub
in
cmp
pop
stos
push
adc
rcr
mov
and
fisttpl
decb
je
mov
dec
repnz
outsb
adc
add
dec
cmpsl
xor
jl
iret
call
lods
inc
fisubrs
sbb
aad
and
mov
fcoms
sub
cmpl
addb
inc
out
cwtl
xchg
sbb
jecxz
xor
push
push
dec
imul
dec
and
pop
lret
call
jnp
pop
xor
cmp
and
push
pop
pop
and
push
test
mov
jne
jbe
int
inc
xor
pop
imul
int3
inc
fmull
cmp
lret
sub
scas
mov
std
inc
rcll
dec
pop
mov
sub
imulb
sub
adc
xlat
adc
or
sub
xor
mov
or
nop
imul
in
out
jae
aaa
loop
and
stos
mov
test
mov
mov
jg
jnp
std
outsb
inc
add
ss
aas
jg
and
bound
cmp
or
jg
push
sub
es
arpl
or
inc
jg
xor
test
pop
xchg
sbb
pop
sub
dec
loopne
loopne
cld
fwait
jg
shl
push
jb
imul
jne
mov
mov
int
movsl
lret
lret
adc
scas
cmp
sbb
int3
and
mov
cli
subl
inc
adc
mov
imul
dec
inc
inc
insl
jg
mov
fsin
je
movsl
cmc
pop
jae
test
cmp
cmp
dec
int3
inc
adc
mov
xchg
mov
and
and
cmp
adc
xor
decb
test
outsl
pcmpgtw
sbb
or
clc
xor
sub
cmp
xorb
int3
xlat
push
jmp
pop
dec
mov
call
stos
add
sbb
test
lods
jg
and
mov
sub
sub
sbb
fdivrl
fildll
int
test
fldenv
outsl
movsl
int
xlat
cs
repz
lret
nop
and
lods
inc
inc
jbe
idivl
cli
cltd
shl
popf
int
push
das
mov
mov
mov
adcb
mov
cmp
push
mov
xor
pop
dec
repz
in
xchg
pop
out
mov
cmc
dec
mov
jl
adc
neg
testl
cmp
xchg
jmp
aam
test
shrb
add
popf
add
sub
mov
mov
cmp
jae
mov
scas
lods
lock
and
sub
sbb
mov
cli
sarl
xchg
jl
inc
adc
jle
mov
in
and
and
testb
rol
mov
loopne
clc
cmp
mov
shl
roll
inc
mov
or
sub
mov
or
mov
mov
inc
cmp
xor
cmp
mov
dec
push
dec
cmpl
lahf
sbb
lds
or
icebp
mov
fisubrl
sub
xor
xor
cmp
popf
push
mov
fisubrs
jae
lahf
cmp
cwtl
cmp
std
stos
fwait
mov
pop
mov
aaa
cmp
mov
inc
lods
addb
or
aaa
loop
sub
sarb
sahf
add
daa
movsl
sbbb
sbb
sub
xor
mov
lods
sarl
xorb
sub
cwtl
pop
jge
mov
into
cwtl
push
lods
add
adc
fimuls
dec
outsl
shr
lods
push
and
stos
sbb
roll
sbb
fcmovnu
jmp
mov
into
fcmovne
sub
popa
cli
inc
sub
push
int
loopne
in
popf
aaa
push
or
sbb
jns
mov
fdivs
sbb
sub
pop
test
dec
test
inc
lods
out
fldl
add
data16
daa
and
ds
fnsave
push
cmp
cld
int
out
subps
and
and
sahf
idiv
sub
mov
movsl
pushl
or
mov
mov
mov
repnz
mov
cmp
mov
sbb
das
sahf
lods
and
cltd
add
test
les
jle
sti
inc
add
mov
push
jbe
std
jl
in
adc
sub
movsb
shl
mov
subl
push
adc
mov
lahf
xor
adc
sahf
addr16
test
add
adcl
fisttpll
lods
bnd
add
push
repz
cmc
sub
jbe
sub
aaa
push
cmp
sti
jbe
imul
aaa
sahf
sub
adcl
je
lods
rcrl
bound
dec
std
mov
repz
or
pop
jge
pop
pop
jae
or
push
sub
es
inc
jbe
sbb
imul
sub
push
dec
ds
not
and
and
push
mov
sub
jb
mov
push
mov
loope
std
jmp
add
cmpl
addr16
mov
lahf
mov
shlb
inc
mov
mov
sahf
dec
movsb
mov
data16
mov
add
sub
lea
cld
cli
aaa
inc
mov
shr
sbb
out
std
aas
xor
mov
jge
clc
pop
jb
dec
sarb
adc
scas
scas
dec
xor
cmp
push
std
clc
lea
das
sbb
and
and
loope
sub
cmp
test
jb
ss
mov
cmpsb
inc
adc
dec
out
xchg
lret
scas
popf
cld
loope
and
clc
pop
hlt
jnp
cli
dec
mov
xor
frstor
push
nop
movsb
mov
in
mov
xchg
gs
in
mov
mov
add
stc
sub
cld
out
cmpsb
jo
nop
cmc
sub
jle
pusha
aas
xor
stos
loop
test
mov
enter
and
in
notb
or
sub
les
mov
pop
lahf
stos
sub
mov
jae
xor
push
sti
fisubs
clc
fistpll
push
cli
mov
jge
dec
push
test
rcrb
add
or
inc
popf
loop
sbb
movsb
nop
pmullw
dec
loop
fsubp
sub
es
xor
or
in
dec
sbb
adc
fsts
add
dec
bound
enter
mov
shrl
daa
mov
mov
notb
addr16
cmpsb
inc
movsl
jp
dec
inc
lods
inc
sbb
push
popf
xlat
and
in
xchg
roll
outsw
or
jl
cmpsl
sub
cmpsb
stos
dec
push
pop
and
sub
mov
js
fs
lcall
sahf
stos
lock
test
idiv
push
leave
mov
out
cmp
mov
cs
and
xlat
int3
data16
xchg
rolb
das
fdivrs
shl
mov
test
fldl
sub
repz
jge
jb
and
testl
mov
sarb
jg
gs
mov
add
dec
filds
xchg
cmp
xchg
stos
outsb
cmpsl
push
dec
dec
icebp
cmp
pop
xor
pop
jnp
xchg
cmpsl
sub
dec
mov
shrl
les
sub
cmpsb
or
cld
mov
mov
mov
cld
data16
out
test
ss
out
sahf
mov
dec
jecxz
dec
sbb
popf
inc
pusha
sbb
push
or
clc
push
repnz
sti
xchg
push
and
mov
xor
scas
xor
enter
sbb
ret
add
les
jne
xor
int
inc
jecxz
inc
add
add
mov
xchg
daa
mov
push
add
clc
pop
adc
and
push
cwtl
dec
ret
add
add
pop
push
in
mov
jmp
std
push
or
daa
add
xchg
ds
out
sbb
sbb
push
cld
std
sti
ljmp
mov
and
lods
outsb
stc
mov
jns
push
ret
call
lock
scas
push
mul
fyl2x
sub
adc
mov
cltd
scas
adc
jo
stos
lea
pop
imul
dec
push
shrl
mov
ja
xor
adc
add
xor
lock
add
add
insl
aam
std
aam
push
clc
mov
ds
push
sbb
adc
xor
dec
test
or
pop
mov
pop
push
jle
jl
sbb
mov
ficompl
in
mov
les
aam
int3
xor
xchg
lods
pop
lods
dec
push
mov
push
fdivr
test
jg
xchg
pop
pop
shlb
cmp
minps
cwtl
xor
addr16
pop
shl
cmp
shlb
xor
lods
sbb
xor
xchg
mov
mov
pop
cmp
dec
test
cmp
push
clc
mov
rclb
mov
push
repnz
call
dec
repnz
clc
inc
repnz
les
push
lods
xor
add
mov
js
xchg
hlt
mov
sub
xchg
pop
xor
and
mov
daa
adc
int3
out
mov
push
pop
pop
cmp
xchg
push
ficomps
cwtl
add
sbb
add
pop
xchg
dec
sbb
clc
or
in
fldl
sbb
enter
mov
mov
push
jne
xchg
and
in
pop
push
fcomp
or
sti
test
leave
or
jnp
jmp
psubusw
or
or
scas
xor
pop
cmp
or
pop
fldenv
or
aad
or
sub
push
or
adc
lcall
insw
cmpsl
mov
insb
mov
push
pop
cwtl
orb
leave
lret
dec
cmp
jns
daa
sti
inc
jns
fmul
add
ret
shrb
sub
sub
jo
lods
xor
or
mov
sahf
subb
xor
sarl
add
inc
loope
xchg
ljmp
xor
pop
or
xlat
or
sub
nop
inc
leave
or
dec
xchg
cmp
clc
ss
test
stos
dec
movsb
pop
icebp
imul
or
inc
loope
std
fimull
mov
lds
mov
inc
jl
or
cmp
sahf
decb
lock
hlt
cmp
repnz
and
push
rclb
xchg
mov
repz
add
shll
xchg
pop
or
mov
stos
mov
dec
sti
and
push
mov
out
cli
lock
xchg
test
and
int
mov
and
xchg
clc
pop
add
jns
mov
sbbl
mov
mov
mov
pop
clc
and
std
add
xchg
and
cmp
jl
lods
xchg
inc
mov
insl
xchg
and
cld
imul
arpl
dec
xchg
ficomps
shl
xchg
ficompl
aaa
lcall
add
jmp
or
mov
push
sub
add
ret
in
out
repnz
out
es
pop
popl
or
imul
int
sub
das
out
gs
push
inc
sbb
inc
xor
hlt
inc
call
sbb
push
cwtl
mov
mov
dec
mov
push
mov
es
mov
ret
std
aad
pop
mov
stos
fcmovu
cli
fdivrl
out
sbb
cmc
mov
out
mov
mov
in
mov
push
mov
push
and
xchg
cwtl
jbe
mov
stos
fisubs
cmp
or
inc
addr16
in
icebp
add
mov
cmp
sahf
out
pop
mov
xchg
sub
cmp
mov
add
out
lcall
loop
adc
jne
pop
jp
dec
adc
xor
sarl
bound
gs
inc
push
and
mov
out
push
dec
jl
sub
xchg
gs
xor
cmp
lret
popf
push
and
add
cli
and
add
add
in
iret
ja
cli
cmp
pop
xchg
aaa
out
in
mov
movsl
sub
sahf
repz
stc
ret
test
mov
add
and
ds
push
addb
ja
es
call
inc
mov
into
jge
add
jle
outsb
lods
mov
addr16
lcall
lahf
xchg
xor
jmp
int
ds
lock
mov
mov
mov
cmp
fbstp
push
shlb
and
rcrb
rcrl
shlb
add
push
cmp
movsb
shlb
inc
mov
ljmp
mov
stos
jns
scas
movsl
xchg
and
sbb
aad
hlt
loope
movsb
into
xor
mov
subl
fidivs
push
sub
jge
or
scas
dec
mov
lahf
scas
cmpsb
out
cmp
mov
in
xor
dec
xchg
jp
push
es
dec
mov
in
fsubl
pop
sbb
cmp
xor
push
xchg
push
int3
jp
test
mov
push
adc
mov
and
mov
mov
dec
mov
push
clc
xor
dec
xlat
mov
shlb
stos
inc
or
aad
inc
inc
xor
xor
into
lods
int
mov
sub
pop
scas
repnz
mov
pushf
push
add
xchg
out
xor
and
sahf
xchg
arpl
mov
dec
out
xor
ficompl
fisubrl
cmp
xor
xor
mov
xor
jl
mov
jno
mov
movsb
ja
stc
dec
mov
xchg
pop
ficoms
sarl
or
mov
out
push
push
shlb
test
or
xor
add
scas
testl
add
push
or
jbe
jns
aas
pop
inc
or
mov
push
jo
or
inc
in
mov
aas
mov
neg
mov
lcall
in
pop
stc
pop
inc
ss
insb
push
or
sbbl
stc
aaa
mov
sahf
clc
sbb
or
ss
into
lods
cmp
jle
sub
add
xor
push
add
into
mov
mov
insl
in
sub
sar
dec
in
lds
out
add
es
fisubs
popa
mov
mov
rcrb
insb
std
mov
cmp
xchg
rorb
and
pop
mov
fs
popa
xchg
mov
loop
pop
mov
shrb
jg
xor
cmp
add
xor
aad
mov
mov
jg
mov
add
mov
popa
and
or
das
xor
cmpl
stc
add
xor
mov
dec
mov
ss
in
cli
push
mov
test
inc
outsl
adc
sahf
loop
pop
mov
daa
mov
inc
cli
pop
pop
aas
clc
inc
clc
sub
mov
imul
inc
into
scas
ja
cmpsl
mov
adc
loop
sahf
sub
inc
cli
pop
pop
aas
clc
inc
clc
mov
and
jle
mov
imul
and
shrb
inc
jg
sub
add
xor
adc
cs
sahf
jnp
adc
add
jl
jl
ds
sub
and
jecxz
sbb
jge
dec
push
test
lea
sbb
insl
xor
movsb
lret
clc
pop
mov
leave
mov
pop
sahf
dec
fnsave
lods
ret
cmp
xchg
rorb
enter
adc
jmp
lcall
adc
pop
orb
pop
mov
xor
lcall
lods
jbe
pop
mov
push
fst
mov
jge
testl
decb
out
outsl
push
sahf
lods
jl
and
mov
ss
sbbl
mov
fwait
mov
rclb
fcmovu
push
mov
push
bound
arpl
subl
cltd
scas
xchg
mov
mov
sbb
inc
std
pop
jbe
pop
outsb
add
or
mov
adc
or
les
dec
mov
fstp
movsl
int3
repnz
sahf
daa
lcall
lods
movsb
repz
std
lock
sbb
ret
mov
mov
jge
fs
cmpsb
fdivl
add
cmp
pop
pop
aas
cli
inc
cwtl
xchg
stos
fwait
popf
or
mov
mov
cmpsb
xor
push
les
pusha
int3
xor
mov
xor
inc
cli
pop
pop
aas
clc
inc
clc
out
adc
jb
aam
jg
movsl
insl
fcmovu
ja
mov
push
test
jge
dec
push
test
xchg
test
lds
cmp
pop
repz
std
addr16
jmp
cmp
xchg
rolb
sahf
and
insb
sti
stos
xchg
sub
add
xor
add
push
stos
lock
xchg
rolb
add
sbb
outsb
inc
pusha
xor
mov
mov
add
cmp
shl
daa
cld
aas
shll
loopne
adc
xor
dec
inc
sbb
fsubl
lret
jp
testl
add
pusha
lods
and
rolb
stos
mov
pusha
stos
or
push
push
sub
sub
adc
stos
mov
lods
mov
sbbl
mov
std
daa
mov
jbe
fbld
add
jne
mov
cltd
mov
and
dec
dec
mov
jmp
push
sub
test
jp
mov
dec
mov
adc
pop
add
fiadds
mov
cli
mov
sub
rcrb
dec
pop
clc
pop
add
xor
jmp
out
lea
push
push
stos
insl
dec
or
rorb
test
incl
test
aad
into
sti
dec
lds
into
sub
aas
jp
push
aad
fisubs
add
dec
push
test
stos
dec
in
inc
int
push
dec
cltd
xlat
jnp
pop
pop
add
shrl
xor
sbb
clc
inc
lea
loope
mov
sbb
es
and
sarb
dec
dec
push
push
hlt
jle
cld
loope
cmp
sbb
sub
xor
mov
outsl
push
dec
push
mov
jle
in
push
mov
popf
cmp
cmp
xchg
into
xchg
dec
addr16
push
sahf
call
xchg
push
cmp
repz
push
mov
add
push
cmp
sahf
adc
pop
mov
out
je
pusha
jmp
aam
mov
test
mov
sbb
icebp
adc
sub
or
mov
pop
arpl
outsl
push
or
out
mov
rorl
jnp
divl
push
fisubl
mov
hlt
mov
push
pop
stc
add
cs
adc
fdivl
mov
xchg
push
shlb
pop
mov
data16
cs
mov
and
cmp
lods
mov
cmp
add
shr
jo
mov
mov
add
add
xor
lcall
test
jge
jne
jecxz
cli
xor
out
push
fsubrl
add
popf
sbb
add
sub
stos
dec
sub
xor
mov
xchg
mov
daa
jg
mov
cmp
add
shlb
std
xchg
mov
mov
xor
jne
and
ds
inc
sub
mov
roll
add
divl
mov
inc
sbb
push
mov
adc
mov
lret
jmp
and
les
or
mov
pop
add
sahf
mov
mov
scas
jnp
mov
inc
mov
addr16
xor
shr
test
add
sub
out
push
mov
mov
mov
movsb
popa
fs
fcompl
out
std
sar
sbbl
in
add
insb
in
xor
push
mov
cmp
test
jge
sbb
test
inc
cmp
mov
dec
cmp
incb
cld
mov
iret
add
mov
insl
daa
scas
pop
lds
cmp
jae
pop
mov
mov
push
xchg
test
sbb
stos
mov
inc
sbb
int3
adc
mov
sbb
ret
hlt
inc
test
rcrb
add
dec
cmp
lret
cld
hlt
lds
fildll
mov
and
les
mov
cmp
cmpsb
lock
cmc
rclb
mov
add
hlt
addr16
and
ss
xchg
cmpsb
xchg
push
jge
sbb
adcb
inc
shr
sub
or
aaa
mov
jbe
es
bound
sbb
loope
leave
es
xchg
test
jbe
pop
xchg
cs
out
adc
sbb
loop
xor
fnsave
jae
cmc
fxam
jnp
in
mov
decb
pusha
aas
ljmp
int3
aaa
pop
add
mov
scas
mov
mov
test
aaa
lcall
pop
mov
xor
mov
int3
xor
adc
push
imul
insl
xor
xorb
dec
lods
lods
add
mull
sub
mov
dec
mov
pop
mov
xor
mov
dec
dec
aas
int
repnz
mov
das
insb
movsb
xor
dec
push
pop
ljmp
and
inc
and
insb
iret
insb
jns
aas
jnp,pn
rcrb
sbb
dec
scas
mov
mov
clc
cld
stos
negb
mov
mov
scas
mov
jo
cld
and
call
hlt
jmp
faddp
and
inc
or
loopne
xor
shr
dec
cmp
imul
mov
add
inc
psrld
xor
in
ds
shll
out
or
stos
sub
loop
mov
out
test
dec
mov
mov
add
cmpsb
inc
xor
fwait
push
add
imul
mov
orb
cs
push
lahf
or
sahf
rorb
or
push
mov
shrb
out
fildl
sbb
imul
out
push
cmpsb
test
hlt
lods
xchg
imul
jne
jge
leave
mov
test
xchg
les
push
mov
sbb
in
xor
adc
dec
xor
fisttpll
aad
sub
mov
mov
dec
cwtl
push
psubusw
fimuls
insb
mov
cpuid
in
inc
xlat
into
adc
mov
mov
xlat
jns
outsb
clc
push
arpl
mov
xor
mov
mov
lds
and
scas
inc
flds
hlt
push
xor
rcrl
fildll
xchg
iret
movsw
adc
pop
xchg
imul
mov
mov
sahf
hlt
scas
add
mov
and
inc
repz
and
icebp
adc
mov
cmpsb
push
inc
pop
xor
cs
out
xor
ss
loop
pop
add
sahf
sub
repnz
xor
mov
mov
sbb
fdivrp
jle
adc
mov
mov
clc
movsb
push
sbb
pop
repnz
mov
inc
dec
cmp
sti
ret
ret
dec
mov
mov
add
xor
inc
xchg
js
mov
xchg
mov
push
cmp
insb
lods
dec
addr16
pop
sub
call
rcr
jae
adc
inc
lock
and
cwtl
out
inc
das
dec
push
insl
push
cmp
icebp
outsl
inc
gs
and
stos
cmp
clc
sub
lods
outsl
test
and
cwtl
fsubl
movsl
push
test
inc
inc
sub
pop
fwait
rcrb
push
jle
pop
mov
daa
arpl
sub
insl
sub
pop
cli
mov
sub
popf
popf
jno
lret
cld
fbld
jle
ss
jle
sub
mov
imul
test
sbb
push
dec
lea
push
sahf
or
lods
add
cmp
xchg
out
sbb
insl
push
add
jge
fisubs
fwait
clc
stos
test
mov
adc
fnstcw
dec
addr16
out
and
sbb
sub
jo
add
test
in
lods
pusha
sub
sbb
xchg
gs
shrb
loope
mov
mov
xchg
cmp
xchg
mov
insb
add
ss
ret
cmpsb
scas
jbe
fnsave
add
leave
sub
test
cltd
add
cld
xchg
sub
pop
jne,pt
cld
add
inc
or
push
and
in
push
ljmp
sbb
sbb
dec
jnp
xchg
jo
out
jg
pop
jl
and
roll
fwait
clc
outsb
sar
dec
stc
es
add
cmpsl
mov
aad
je
fidivrs
inc
adc
dec
sub
fucomip
test
xchg
stos
fcoml
add
push
fsubrl
and
movsb
lods
inc
mov
mov
mov
mov
mov
clc
add
addr16
neg
jmp
cmp
adc
sahf
push
sahf
sbb
and
jmp
subl
push
xor
mov
pop
icebp
push
mov
movsb
aaa
icebp
cmc
push
int
int
add
push
sub
imul
test
sbb
nop
sbb
shrb
int
nop
aas
push
xor
mov
in
inc
fiadds
jge
les
cld
mov
dec
jecxz
inc
mov
ret
movsb
scas
push
mov
mov
lods
les
mov
fsubp
xlat
push
and
mov
mov
lods
mov
cmp
insb
loop
xchg
and
xor
add
and
cmpsl
loop
mov
xor
xor
sahf
gs
and
xor
std
loopne
ret
push
movsb
movsl
dec
add
push
mov
lret
add
mov
pop
idiv
ds
lock
gs
icebp
popf
sub
sahf
lods
cmp
int
ret
loope
inc
out
add
cmp
and
xlat
sbb
pop
inc
mov
and
cmp
arpl
pushw
jp
add
loopne
dec
cs
out
iret
mov
sbb
rcr
push
and
inc
lock
sahf
addr16
mov
mov
mov
in
lods
ss
mov
rorb
mov
fldl
aaa
sahf
dec
lock
inc
push
rorb
in
loopne
add
sub
lods
and
int
mov
je
sahf
andb
sbb
jle
out
es
mov
xor
lods
rcll
jge
ljmp
or
shrb
xor
and
movsl
mov
shlb
jg
inc
sbb
adc
fyl2xp1
jp
lock
mov
xchg
sub
cld
and
or
mov
xor
sbbb
sti
cmp
dec
loopne
sub
mov
and
pop
rcr
jo
xlat
cli
mov
and
testl
outsb
aas
hlt
dec
mov
inc
xacquire
inc
push
stos
lods
mov
cmp
mov
lock
jbe
ljmp
and
mov
sahf
repnz
int
inc
pop
lods
jmp
inc
jbe
inc
pop
xor
in
aam
popa
sbb
loop
gs
loope,pt
pop
mov
jnp
es
pop
sbb
in
data16
add
stos
filds
repnz
popa
sbb
mov
fcoml
mov
jl
addr16
and
pop
pop
aaa
pop
mov
dec
mov
inc
and
jno
cmpsb
in
inc
aam
mov
pop
dec
in
inc
mov
add
int3
or
xor
addr16
inc
or
sbb
mov
movsl
xor
mov
aam
int
iret
rorb
xchg
xchg
insl
aad
stos
inc
lret
sub
cltd
mov
mov
negl
push
pop
pop
ficomps
and
rcr
lcall
xor
sbb
sahf
lea
push
mov
and
mov
inc
in
jbe
es
ret
in
in
push
sub
frstor
fwait
pop
inc
xor
fisubs
sub
std
push
inc
push
mov
shlb
push
mov
mov
mov
dec
sbb
push
hlt
out
mov
cltd
xor
push
popf
leave
mov
inc
mov
and
mov
lahf
sahf
into
test
push
stos
cmp
dec
lods
sti
popf
stos
xor
iret
push
and
push
mov
stos
addr16
mov
push
dec
push
popf
dec
popf
stos
pop
and
pop
push
sahf
and
scas
sbb
xor
fadds
fidivs
mov
popa
sarb
es
clc
jg
sahf
mov
add
inc
dec
and
sub
add
sub
push
out
push
mov
pop
mov
test
stc
daa
push
cmp
pop
pop
push
call
push
mull
rorb
mov
pop
xchg
add
or
in
in
sub
lods
mov
add
ret
and
mov
xor
jnp
popa
mov
ficoml
inc
fldt
jo
mov
jmp
dec
shl
and
and
inc
jno
jle
fcomi
stc
mov
test
loopne
mov
jp
shlb
test
xchg
sub
js
addr16
push
enter
out
jb
gs
mov
cmc
xchg
lret
daa
movsl
sub
and
and
in
roll
daa
adc
clc
scas
and
mov
cld
inc
dec
outsl
sbb
testl
das
jbe
mov
pop
arpl
xor
xchg
xchg
dec
das
jnp
mov
vcomisd
mov
sbb
mov
mov
insb
adc
xor
das
clc
fdivrl
out
mov
das
pop
push
ss
dec
mov
jge
mov
sub
sahf
sahf
loopne
lahf
flds
pop
fdiv
dec
daa
dec
fists
fwait
pop
sbb
std
cmp
xchg
int
and
outsl
push
jns
mov
xchg
stos
xor
jno
xlat
sbb
loopne
and
push
movsb
testl
xchg
hlt
sbb
inc
dec
pop
shlb
dec
mov
popf
pop
std
pop
push
jb
inc
dec
rclb
cmp
into
sahf
inc
movsl
dec
sti
mov
scas
mov
es
mov
cmpsb
jnp
cmp
adcl
imul
push
neg
fwait
xchg
push
push
sbb
push
pop
iret
repnz
dec
push
jmp
pop
xor
dec
and
adcl
lods
sub
add
cli
dec
push
cmp
pop
xchg
jns
in
sbb
jge
jnp
jp
jno
xor
xorl
sar
cltd
aad
in
in
sahf
pop
adc
fucomi
call
sbb
call
cltd
mov
sahf
test
mov
lds
mov
int
loope
in
pop
das
loopne
mov
loopne
inc
jle
xchg
clc
addl
sub
mov
pop
call
sbb
sub
mov
ljmp
push
es
push
cltd
xchg
mov
das
mov
push
jl
icebp
adc
adc
push
pop
sar
fcmovnu
xor
mov
js
in
out
call
pop
xor
in
out
xchg
icebp
ljmp
leave
jmp
pop
and
mov
xor
dec
loop
mov
pop
into
repz
inc
xchg
add
add
mov
jne
sahf
addr16
cli
and
and
call
pop
push
rolb
sbb
lret
scas
sbb
cmp
and
test
mov
dec
mov
push
sahf
nop
sub
scas
cwtl
mov
add
sub
and
cmp
push
dec
add
aaa
std
mov
lret
jns
mov
aad
sarb
mov
fstl
shl
ret
icebp
stc
iret
fisubrl
shl
sub
mov
fcoml
add
mov
arpl
lods
stos
mov
ljmp
sub
adc
xchg
xor
repnz
mov
outsl
and
mov
lea
es
sti
mov
or
stos
push
mov
xchg
stos
cmp
dec
jbe
inc
aam
mov
mov
and
mov
pop
cmp
inc
and
out
or
movsl
xchg
or
movsl
cmp
xchg
into
sub
cwtl
ss
or
clc
cld
lock
into
cmp
jmp
dec
xor
jno
test
sub
mov
push
inc
hlt
pop
ljmp
insl
in
ret
dec
xchg
repnz
cmp
cld
lock
jge
in
popf
inc
inc
lds
movsl
into
inc
icebp
and
sbb
inc
add
fidivl
dec
jo
xchg
dec
int
outsb
xchg
rcrb
icebp
stc
inc
cmp
into
movsl
mov
sbb
adcb
cmp
movsb
xchg
out
sti
mov
fwait
clc
out
ds
adc
ds
xor
and
jl
mull
lock
mov
scas
xchg
mov
pop
add
mov
adc
test
xor
xor
push
lock
pop
sub
sahf
pop
ja
scas
lret
sub
pop
cli
clc
sbb
ret
mov
sbb
test
xchg
fildll
dec
stc
imul
mulb
out
mov
out
popf
das
mov
inc
into
xor
ss
inc
scas
mov
mov
xchg
push
stos
push
pop
xchg
out
and
stos
faddp
adc
call
rcll
scas
xchg
rolb
loope
add
sub
adc
adc
adc
jecxz
fcomps
cs
mov
pop
jecxz
sub
cmc
stos
pop
mov
and
and
pusha
inc
pusha
dec
push
push
dec
lods
xor
sbb
movsb
cld
mov
dec
repz
pop
push
sub
rorl
jne
aam
adc
dec
adc
dec
sbb
inc
mov
jns
push
push
rcr
jecxz
adc
scas
mov
out
push
gs
pusha
shl
sbb
push
test
add
repnz
cmp
push
xor
inc
cli
pop
pop
aas
clc
push
pop
test
mov
lods
pop
jmp
ficompl
mov
sub
mov
sbb
repnz
jne
dec
imul
dec
mov
js
dec
cwtl
dec
test
mov
test
adc
cmp
fdivl
mov
cmp
mov
mov
and
mov
push
addr16
push
jns
mov
lahf
call
sahf
add
dec
cmp
pop
push
mov
dec
mov
cmp
stc
add
mov
inc
or
xchg
pop
sub
test
xchg
sub
sub
xor
mov
xlat
push
jbe
fcompl
xchg
cmp
mov
shr
in
jp
pop
repnz
jg
sub
mov
movsb
out
xor
pop
scas
cmp
fdiv
mov
xchg
aaa
std
cli
movsl
pop
fs
or
std
mov
in
cmp
dec
into
pop
icebp
xor
or
jmp
and
in
cmp
into
mov
scas
repnz
pop
or
lods
add
scas
into
sbb
subl
std
add
scas
sub
jmp
push
and
pop
cmc
pop
fs
in
mov
push
sub
xorl
xchg
add
inc
scas
xor
ds
lret
in
cs
outsl
test
cmp
add
loop
xchg
insl
les
pop
xor
repz
xor
pop
jecxz
pop
and
shlb
das
fsubrl
and
pop
add
mov
sahf
lods
add
mov
mov
lods
pop
sbb
popf
lahf
insb
fsubrl
call
inc
dec
adc
mov
sbbb
mov
mov
mov
sub
loopne
loop
mov
rorl
in
jecxz
stos
insb
mov
sub
mov
aaa
sbb
mov
test
ret
cmc
into
sahf
mov
in
addb
insl
add
lret
into
mov
popf
sbb
add
xor
enter
jno
into
movsb
idivl
push
out
dec
mul
push
xchg
in
sbb
mov
into
mov
xchg
inc
fiadds
sbb
push
and
adc
sub
aas
cmp
inc
xlat
in
sbb
mov
in
inc
fdivrl
mov
xor
sub
or
das
and
mov
popf
and
jl
nop
lcall
push
dec
xor
outsl
faddl
das
shll
lahf
mov
mov
cmp
mov
push
imul
and
pop
adc
xchg
cmpsl
sub
out
adc
fxch
jnp
sahf
test
and
aam
mov
jno
xor
lret
push
cli
mov
pop
in
popa
ret
dec
rcrl
addr16
in
mov
jmp
push
mov
dec
lods
hlt
pop
ja
enter
jmp
ret
call
mov
lods
sbb
hlt
mov
hlt
lcall
aas
xchg
loop
mov
inc
push
daa
imul
andl
ljmp
call
mov
and
out
push
popf
dec
pop
xor
popa
movsb
mov
pop
mov
je
hlt
sbb
cld
sub
xchg
dec
cmp
rcrb
xchg
cs
sub
lods
loope
mov
xchg
pop
jle
div
add
inc
cmp
push
inc
xor
lret
adc
add
popf
lods
int3
xor
movsb
insb
mov
xor
lods
pop
sbb
mov
lcall
movsb
inc
inc
sbb
nop
pop
in
cld
add
inc
and
cmp
pusha
nop
je
into
cmpsb
xor
inc
nop
or
dec
cmpsb
outsl
push
mov
stos
mov
add
scas
lods
xor
dec
insb
shlb
loop
and
arpl
mov
rcrb
cmpsl
xor
js
push
fnstsw
fnstsw
or
xor
dec
int
out
mov
pop
adc
xor
ss
pop
scas
cmpsl
mov
jo
lods
and
sub
bound
lds
xlat
in
sub
stc
mov
leave
xchg
lahf
scas
mov
in
loopne
scas
lods
pop
jne
cmp
leave
inc
imul
ret
pusha
mov
xchg
std
jmp
mov
mov
out
cmp
mov
loope
leave
es
stc
leave
jg
leave
xchg
xor
xchg
adc
lods
push
std
xchg
in
sahf
sub
scas
sbb
add
or
adc
pop
and
inc
enter
push
pop
loopne
cmp
cmp
addr16
sbb
daa
xor
xor
cli
popfw
mov
mov
in
call
mov
aaa
lods
mov
lods
loop
dec
pop
jle
ss
adc
xor
or
sub
dec
push
add
stos
pop
add
shlb
and
inc
aas
inc
int3
sbbb
hlt
inc
jb
cmpsl
cmp
aaa
cmp
stos
xor
icebp
das
xor
dec
jle
push
aad
cmp
pop
cmc
push
gs
jnp
dec
and
xor
pop
cmpsl
ud1
outsl
pop
sbb
clc
mov
daa
addr16
arpl
dec
cmp
inc
jmp
pop
mov
push
pusha
inc
cmp
xorb
jo
mov
or
fs
in
cs
fldl
insl
int3
ss
sahf
pop
ds
xchg
jge
inc
call
outsb
push
xchg
jo
pop
test
dec
mov
sbb
test
pop
int3
aam
add
push
loop
mov
rol
mulb
jmp
iret
mov
sbb
and
je
mov
adc
pop
adc
aad
dec
idiv
hlt
pushf
jmp
ds
movsl
jo
inc
jno
jbe
loopne
cmpsb
inc
in
loopne
int3
hlt
in
cmpsb
dec
lea
es
loopne
js
scas
shll
cmp
out
outsl
ss
loop
lock
mov
fisubs
and
add
sarb
mov
negb
jmp
push
sub
stos
or
std
jae
sub
scas
sbb
sti
xchg
and
dec
icebp
in
in
lds
test
fimuls
movsl
movsl
es
out
fcoml
sbb
cmpsl
pop
push
movsl
push
fst
xchg
pop
cs
mov
cld
or
out
mov
int3
dec
movsl
sub
in
cmpsb
inc
out
fistl
ljmp
sahf
fisubl
mov
push
scas
leave
stc
daa
jg
dec
movb
cld
pop
scas
imul
inc
mov
mov
xchg
popa
jbe
sbb
pop
das
das
adc
aaa
sahf
mov
gs
lock
filds
mov
sbb
fisubrs
sub
push
lods
subb
stos
sahf
aam
clc
outsl
add
dec
inc
dec
hlt
stc
xor
jae
fisttpll
out
shll
scas
or
and
mov
xchg
jmp
lea
aad
pop
mov
sub
cmp
xchg
cld
and
add
inc
push
sbb
test
mov
sub
mov
fisubrs
pusha
scas
mov
sarb
xchg
ss
out
add
mov
cltd
sbb
mov
out
sub
sub
push
mov
jo
roll
faddl
dec
stos
mov
inc
loope
test
xor
mov
dec
cwtl
jl
and
cli
jge
mov
fidivs
push
jne
sbb
mov
movsb
push
mov
mov
xchg
sbb
sbb
pop
push
or
jge
les
adc
cld
arpl
mov
repz
dec
es
cmp
and
out
jns
fstps
push
mov
mul
add
std
add
in
add
insl
out
cmp
lcall
dec
movsl
mov
mov
jecxz
sbb
cmp
mov
insl
jge
je
insl
sarl
scas
xchg
xor
sbb
les
sub
sbb
arpl
cmpsb
inc
sbb
inc
cmc
cmp
jnp
adc
pop
and
loopne
pop
test
in
xor
pop
dec
jne
mov
push
adc
ret
cmp
mov
dec
xchg
rcl
jno
add
lea
hlt
aaa
mov
in
ljmp
lods
jo
in
mov
mov
ja
push
ret
ds
clc
dec
mov
pop
fdivs
dec
out
mov
cmc
push
stos
in
test
cmp
rcrb
jle
sub
andb
xchg
negl
cmpl
push
scas
pop
mov
inc
mov
loope
pop
or
sub
cmp
push
jbe
int
mov
jns
xor
fstl
fs
rcl
fidivrl
pop
or
lods
aam
popf
sbb
faddl
aas
cwtl
jl
pop
aam
push
push
jecxz
mov
mov
test
pop
mov
jne
in
out
popf
adc
or
sub
jp
je
cmp
loop
lahf
xor
mov
push
cmp
mov
cmpsb
xchg
adc
cmp
fstpt
mov
daa
and
movsl
fistl
sbb
xor
scas
bound
push
add
in
ret
mov
inc
mov
fnstsw
fidivl
iret
daa
test
insl
in
ljmp
movsl
add
and
outsb
lahf
pop
cli
mov
mov
leave
sub
jge
sbbl
sbb
stos
push
outsb
cld
jmp
dec
dec
jp
cmc
push
fbld
cmp
xor
das
adc
xchg
setge
repnz
cli
stos
stos
sub
jns
push
mov
js
dec
cmp
mov
or
sub
popf
addr16
sub
test
xchg
stos
add
inc
xchg
fcmovnb
incl
and
xor
mov
mov
test
mov
pusha
mov
jae
daa
out
xorb
sahf
sub
gs
cmp
enter
lods
andb
jl
in
lock
push
lock
mov
and
out
cmp
fisttpll
jmp
push
aad
xchg
arpl
adc
adc
mov
push
or
mov
sbb
popa
or
push
fmulp
adc
movsl
inc
and
add
das
popf
dec
xchg
cmc
movsl
movsl
add
xchg
mov
bound
lods
arpl
and
les
movsb
push
mov
fs
add
sahf
xor
mov
rolb
test
mov
inc
test
mov
in
xchg
or
adc
cmp
and
clc
cmp
aaa
inc
lahf
pop
dec
and
dec
ret
sahf
dec
out
jns
loope
pop
cmp
push
pop
adc
rolb
loope
shl
xchg
push
aad
cltd
fst
jae
pop
and
data16
popf
jge
jns
loope
add
xchg
mov
sti
mov
test
lret
jmp
loope
and
mov
fisubs
ret
repnz
loope
pop
std
adc
in
outsb
jae
inc
add
cld
loop
push
pop
inc
aaa
loope
es
pop
dec
and
cmp
loope
push
negb
cmp
pop
and
or
sahf
and
scas
and
test
hlt
cld
inc
mov
sahf
dec
and
popa
sar
push
std
lods
pop
es
clc
mov
pop
dec
and
sub
and
sub
dec
and
sub
and
sub
push
loope
sub
lret
daa
jp
push
lea
and
xchg
mov
addr16
je
mov
sub
cld
popa
sbb
lods
movsl
mov
fmull
lea
push
aaa
xor
mov
popf
mov
addl
mov
push
sti
mov
xchg
roll
jmp
popa
jp
cli
and
movsl
fstl
mov
mov
out
jns
push
or
lock
test
cltd
lods
lods
or
neg
xchg
je
jp
fiadds
push
xlat
jnp
sbb
cmpsb
lods
sbb
popf
lcall
lods
mov
cs
xchg
shlb
mov
sub
out
nop
lahf
mov
outsb
aas
loopne
popf
sub
into
cmp
arpl
xchg
pop
xor
mov
in
dec
ret
jge
test
jno
mov
lds
cli
mov
mov
scas
stos
jb
dec
xchg
mov
xchg
push
mov
pop
ss
mov
rcr
cmp
pop
lret
cli
sub
div
clc
mov
xchg
push
imul
repnz
inc
fimuls
pushf
leave
jmp
rcrb
adc
cmp
inc
add
cmpsl
mov
shrb
test
pop
mov
cld
pop
andl
cld
rolb
mov
ss
popf
and
inc
lret
sub
outsl
pop
shrb
xor
es
pop
sub
cmc
xor
xchg
sub
jp
lcall
dec
scas
jge
scas
cmp
faddp
mov
aad
outsl
sub
add
or
mov
adc
and
fdiv
bound
jg
dec
das
shlb
dec
and
repz
push
pop
inc
es
aas
mov
inc
push
mov
sar
sbb
push
mov
sub
ljmp
std
mov
push
inc
xor
sub
sbb
scas
mov
cs
dec
push
shrb
mov
push
movsb
pop
rorl
fisubrs
xor
adc
sub
sub
gs
popa
sub
jo
repnz
roll
aas
mov
or
sub
in
inc
sarb
adc
pop
cltd
mov
pop
pop
sbb
inc
mov
dec
fidivs
cmp
out
cltd
xor
mov
push
push
test
mov
sbbb
imul
loopne
sarl
addr16
xor
jne
xchg
adc
pushf
sahf
add
movsl
in
fidivl
push
inc
cmpsb
int
je
push
cmp
stos
mov
mov
stc
mov
add
fwait
dec
lret
movsl
or
sahf
mov
scas
test
add
cmp
in
lret
fwait
jg
fisubrs
fwait
mov
stos
popf
dec
cmp
xchg
mov
cmpsl
xor
popf
cmpb
sub
adc
cmp
mov
cli
test
jl
cmp
int
sbb
lcall
cltd
inc
inc
mov
aam
mov
sahf
inc
cs
mov
xor
loope
cs
arpl
cmp
lea
subl
popf
and
xor
xlat
pop
scas
push
dec
aas
fdivp
adc
adc
mov
idivb
push
pushf
jae
stc
das
xchg
jmp
out
repz
in
mov
pusha
and
clc
subl
pop
or
add
stc
xchg
pop
jae
sbb
mov
xchg
cmp
les
mov
jns
scas
sbb
dec
mov
sahf
sub
fisubrs
push
pop
das
test
adc
decb
fmull
or
mov
sbb
inc
jnp
push
in
scas
lcall
sbb
mov
mov
shr
pop
mov
lret
or
aas
gs
add
daa
fwait
je
pop
daa
sbb
loopne
test
ret
popf
popfw
mov
mov
popa
lods
mov
mov
mov
push
xchg
mov
pop
shrb
jnp
jle
sub
in
jno
jp
loope
in
or
loope
ror
test
dec
mov
or
add
mov
add
xchg
loop
dec
mov
cmp
add
scas
adc
dec
shl
add
adc
push
push
roll
cltd
or
sub
stc
sub
test
mov
fs
loope
jbe
adc
add
or
divb
mov
cmp
adc
out
and
jg
or
adc
xor
mov
xchg
xchg
std
rcr
mov
sti
lahf
fnstenv
addr16
fwait
dec
call
mov
mov
dec
adc
popa
loop
push
mov
cmpsb
into
loopne
inc
fabs
clc
inc
cmp
mov
in
push
mov
add
jl
mov
out
daa
pop
sub
mov
mov
sbb
js
mov
fwait
sti
arpl
mull
push
ja
sub
mov
sub
ja
sub
cmpsl
dec
lock
add
sub
xchg
push
xchg
push
iret
xchg
cltd
mov
lea
rclb
test
xchg
cmp
mov
pop
fwait
js
cli
andl
cwtl
in
adc
cmp
adcb
call
cmp
js
lock
ja
sub
xchg
or
xor
mov
movsb
mov
lea
addr16
mov
cmpb
xchg
test
mov
inc
and
arpl
sti
arpl
hlt
mov
in
sub
fsubrs
jns
jnp
lea
out
lcall
pusha
pop
lock
fwait
adc
loop
pop
sti
inc
in
mov
sub
inc
mov
dec
pop
mov
data16
int3
push
mov
lea
loopne
xchg
call
adc
sub
mov
out
stos
mov
fimull
cltd
lock
push
jns
scas
lock
and
push
adcl
out
lret
xor
outsb
jge
fmuls
jo
push
std
xchg
mov
repz
mov
repz
sub
jns
xor
cli
and
and
xor
pop
sbb
lret
mov
add
cmp
dec
cltd
jo
sbb
mov
dec
cmpsl
movsb
cltd
lock
push
and
dec
test
lock
lods
push
in
xchg
cmp
sub
cmp
mov
push
call
mov
aas
xchg
dec
and
hlt
pop
inc
sbb
xor
cmp
fdivrs
xor
pusha
pop
mov
ljmp
mov
sbb
push
daa
mov
sbbl
stc
cwtl
incb
mov
cld
mov
popf
push
jg
cmpsb
and
mov
mov
mov
inc
mov
mov
cs
in
mov
dec
cmp
sahf
inc
pop
repz
in
sub
cmp
pop
add
xor
popf
cmp
xor
mov
imul
sub
imul
iret
pop
and
inc
jnp
stos
shlb
cld
arpl
mov
das
add
cmpl
xor
push
ficompl
and
mov
lods
cmpsl
cld
popl
into
scas
shrb
xchg
cld
stos
xchg
sbb
xchg
and
sbb
sbb
iret
outsb
stc
mov
mov
or
stos
es
mov
dec
scas
scas
inc
into
scas
cmp
shrb
xor
jnp
mov
addr16
das
int3
scas
mov
cmp
jnp
and
stos
scas
sub
inc
mov
dec
jb
in
mov
call
insl
fadd
mov
xchg
xchg
sub
mov
xor
mov
mov
sahf
sub
xchg
sub
cltd
ret
popf
push
mov
fbstp
push
cld
sarl
outsl
leave
adc
push
push
or
loopne
and
pop
xchg
rcrb
test
and
lea
mov
ds
sbb
cld
mov
inc
mov
and
mov
int
dec
jecxz
int3
mov
test
in
sahf
dec
mov
lcall
loop
jns
inc
mov
scas
sarb
sub
jno
aaa
ljmp
movl
add
hlt
pop
inc
jnp
dec
test
inc
scas
dec
lods
out
xor
cld
inc
cmp
jecxz
fidivs
cmc
cmpsb
scas
adc
mov
inc
ss
cmp
cld
sahf
shr
ja
test
std
shll
in
popf
in
ror
inc
fnstsw
fst
xor
sub
pop
lret
mov
lret
dec
pop
call
push
add
pop
aad
fwait
jne
mov
ss
call
stos
rclb
and
add
mov
xor
int
and
or
int
mov
pop
into
fadd
hlt
pusha
push
daa
mov
mov
xor
stc
aaa
inc
mull
push
dec
loop
pop
fisubrs
pop
add
pop
push
mov
inc
xor
dec
jb
mov
push
add
push
hlt
or
nop
test
mov
or
jns
shrl
outsb
mov
aad
adc
mov
hlt
test
and
mov
lret
bound
scas
cld
addr16
loopne
lods
es
pusha
mov
inc
out
jbe
sub
jge
loop
inc
pop
subb
cmp
ds
sbb
in
mov
test
test
popf
sub
mov
xorl
jge
scas
pop
divb
pusha
repnz
lcall
push
pop
dec
dec
xor
dec
fcompl
and
or
fldcw
pop
mov
and
faddl
lahf
imul
add
test
test
out
cli
xchg
mov
push
fdivl
pop
mov
mov
push
push
aas
push
jge
mov
hlt
cmp
pop
fimull
popf
clc
cld
ljmp
in
fcmovbe
shlb
sar
pop
shl
out
addb
arpl
mov
cmp
dec
movsl
sar
pop
mov
xlat
nop
pop
adc
xlat
jge
faddl
lea
sarb
arpl
push
daa
shl
adc
or
and
mov
mov
jmp
cmc
rcr
sub
xor
int
push
xor
mov
push
lret
imul
fdivs
xchg
fisttpll
mov
scas
mov
loop
mov
inc
cmp
add
iret
mov
clc
mov
aaa
pop
xchg
jp
int
sbb
sbb
xchg
mov
mov
adc
mov
add
ds
pop
fstl
test
les
shrb
scas
mov
push
mov
jecxz
mov
xor
mov
lock
pop
pop
repnz
call
mov
mov
adc
push
std
adc
xor
pop
mov
cs
insb
pop
sbb
mov
and
into
jbe
mov
std
das
mov
popf
lahf
es
mov
lahf
push
lret
ficomps
or
int
mov
push
shl
cmp
sub
cld
test
mov
mov
jge
sahf
fs
xorl
jl
fdivr
mov
nop
mov
mov
mov
mov
pop
lret
xchg
jns
fsubs
arpl
mov
stc
clc
loop
lock
shr
ss
ds
or
loop
push
ss
or
jb
mov
push
xchg
fs
stos
repnz
xorl
popa
and
xchg
sti
aas
jb
xchg
loop
fs
push
popl
xor
fs
in
add
pusha
cld
sahf
push
adc
push
sti
lret
pop
jmp
loop
push
fdivr
dec
mov
lret
inc
fs
aas
push
dec
mov
daa
loop
insl
pop
jle
testb
fdivl
pop
or
int
fmul
das
leave
ja
imul
clc
add
das
mov
pusha
rclb
cmp
pop
outsl
mov
xor
mov
push
arpl
cwtl
repnz
sbb
int
faddp
stc
jmp
loop
sub
outsb
sub
adc
add
push
lods
dec
inc
fsubrs
arpl
mov
imul
pop
popl
mov
mov
cmpsb
mov
inc
mov
loopne
push
and
in
test
rcll
inc
sub
inc
shlb
icebp
or
sub
xor
scas
or
sub
fnstenv
mov
fcomps
ss
mov
loope
pop
and
popa
and
xor
lods
adc
mov
sbb
sti
testb
cmp
cltd
sub
stc
fisttpl
mov
mov
scas
add
out
sbb
add
pop
xorl
negb
repnz
mov
dec
scas
sub
sub
adc
adc
out
adc
lods
pop
xlat
push
jmp
in
in
sub
jnp
xor
dec
fcomip
rcll
icebp
in
xor
and
pop
pop
mov
push
fwait
sub
jmp
mov
aas
scas
loop
mov
bound
mov
fwait
imul
mov
and
cmp
sub
push
xchg
adc
aas
lods
mov
pop
sub
xor
push
imul
jb
cmp
test
jl
lahf
push
adc
xor
std
add
mov
mov
test
pusha
pop
add
mov
sarl
lods
out
add
fnstsw
mov
jb
and
xor
adc
inc
ret
scas
fs
das
loop
and
jl
add
in
add
std
jge
sbb
xor
ss
mov
mov
pop
cmpl
jo
lds
int
repz
add
sub
cs
xor
xchg
scas
mov
inc
xor
fistpll
cmp
cmpsl
dec
mov
jnp
push
out
popa
mov
pop
mov
out
mov
mov
test
cmpsb
fidivl
mov
lods
push
mov
fdivl
or
xor
fldt
dec
test
and
dec
cli
mov
dec
dec
fcmovnbe
cmpsl
xchg
pop
aad
jge
jle
gs
test
xor
in
or
in
sub
mov
lods
cwtl
popf
rorb
les
push
repnz
fwait
cmp
pop
jp
mov
notb
mov
das
popa
jo
and
xor
and
call
mov
and
xor
gs
inc
sbbl
leave
iret
push
out
pop
inc
add
cmp
inc
aaa
fwait
xor
popa
cmp
xor
sub
xchg
lahf
test
push
ret
mov
sarb
call
jecxz
fwait
sbb
cmp
loope
lods
lods
mov
test
push
lds
and
outsb
les
mov
ror
ljmp
fucomp
mov
xorl
xor
scas
sbb
sbb
xor
sub
rcll
loopne
out
in
cmc
movsl
loop
sbb
hlt
repnz
jge
pop
cmc
dec
int
xchg
imul
test
lock
push
in
inc
mov
dec
jge
jmp
or
and
cmp
idivb
test
divb
push
outsb
testb
testb
fsts
and
data16
adc
lods
cli
ss
enter
push
test
mov
inc
icebp
out
decb
lret
movsb
jp
cs
pop
mov
ficomps
jno
mov
and
push
cmp
pop
jg
rorb
cmp
fsubr
les
xlat
std
hlt
mov
add
jae
cld
jmp
mov
mov
das
add
and
jnp
xor
mov
xchg
xor
pop
sub
cmp
hlt
fwait
lods
xor
in
pop
mov
jae
popf
mov
pop
pop
mov
scas
cmp
std
sbb
cmpl
fists
fnsave
adc
mov
jmp
mov
mov
mov
das
xchg
sbb
mov
sub
adc
mov
daa
es
mov
mov
jge
dec
cmp
mov
and
mov
fistps
push
xor
popa
inc
sub
mov
ss
xchg
inc
pop
inc
test
sub
popf
in
mov
or
iret
cmpsb
inc
cmpsl
aam
mov
jb
cmp
inc
mov
pop
xlat
adc
mov
imul
fwait
cmp
jl
mov
ljmp
cltd
xor
std
outsl
in
int3
jno
pop
out
mov
popf
ljmp
lods
and
fnstenv
xchg
mov
sub
jb
pop
js
dec
mov
pop
lods
shlb
push
jl
jb
std
dec
lods
sub
dec
sub
mov
lods
mov
xlat
ljmp
jl
mov
add
cwtl
jno
pop
jecxz
out
std
ljmp
mov
aaa
fisubrs
test
lods
mov
dec
fdivs
pop
movsl
push
loop
popa
cwtl
inc
xchg
mov
aam
pop
pop
mov
fisttpl
jne
std
fsubrs
push
dec
lods
movsb
xchg
xchg
hlt
shl
mov
mov
pushf
fimull
std
push
sti
xorb
pushf
fsubrs
aam
pop
push
fsubr
popa
adc
pop
jnp
mov
add
pop
movsl
inc
stc
popa
stc
lods
mov
mov
sub
stos
fst
adc
hlt
and
les
or
or
data16
lret
cmpsl
dec
lds
shll
jl
pushf
enter
pop
adc
push
pop
pushf
sahf
test
mov
jbe
adc
cwtl
lods
mov
sbb
add
std
outsl
jmp
lods
and
or
ja
sbb
mov
mov
jnp
pop
cltd
lods
add
out
xor
mov
mov
aam
jge
imul
popf
ss
movsl
push
cmp
xchg
sbb
decb
sti
sahf
adc
inc
adc
pushf
push
xchg
cmp
mov
in
mov
lods
cli
movsb
and
loope
mov
inc
decb
aas
pop
jno
dec
mov
cmp
aas
and
or
ret
inc
jle
push
cwtl
lods
lcall
in
outsl
fisttpll
mov
sub
push
fisubrs
xchg
lods
or
mov
cwtl
sarl
je
popf
dec
mov
insl
pushf
jae
jmp
mov
sbb
icebp
outsl
enter
pushf
sbb
push
std
push
mov
stos
pop
add
mov
loop
cltd
daa
sbb
repnz
and
jmp
mov
mov
pop
fs
stos
push
popl
mov
mov
pusha
mov
jg
sbbb
lds
xchg
push
outsl
ret
and
mov
mov
mov
in
jecxz
mov
or
xchg
notb
lds
sahf
subl
in
mov
icebp
repnz
dec
inc
jmp
cmp
rcrl
insl
jne
mov
inc
daa
add
cmp
test
lea
aas
push
cltd
sti
dec
in
push
xchg
sub
into
ret
out
xor
aas
jge
pop
sub
mov
dec
movsl
call
lds
sub
cld
sub
int
dec
xor
dec
lcall
aam
loopne
int
lods
out
dec
cmp
repz
inc
cs
or
mov
push
lret
stc
push
mov
aaa
gs
inc
fs
loop
mov
int3
sub
sbb
inc
mov
sub
sbb
pop
je
and
xor
fsubrp
push
enter
int
sbb
jmp
mov
and
sub
js
in
leave
in
mov
dec
out
mov
fidivs
adc
leave
in
mov
jae
int
jmp
out
pop
ficomps
sahf
cmc
jmp
mov
inc
lods
pop
dec
jmp
mov
xor
ds
divb
adc
cld
mov
cmp
xor
iret
xor
hlt
mov
das
pop
hlt
outsb
xor
cmpsb
cmp
addb
pop
xlat
cmpsb
add
out
mov
lcall
jbe
sahf
push
dec
pop
inc
subb
add
inc
cmp
push
int
iret
add
outsb
sub
scas
xor
shll
popa
cmp
sahf
mov
fistl
add
jecxz
mov
insl
sahf
xchg
movsb
adc
cltd
in
jl
sahf
cwtl
sub
addr16
lret
mov
int
and
and
mov
mov
mov
sahf
mov
mov
and
dec
pop
pop
lea
xorl
call
mov
lods
popa
sbb
mov
int3
setle
push
test
into
pop
jb
in
out
pop
xor
lret
mov
imul
hlt
pop
xchg
mov
and
out
movsl
cmp
mov
mov
mov
and
mov
cmpsb
es
dec
test
mov
jp
stos
jge
pop
mov
das
sbb
mov
pop
mov
in
inc
mov
fsubp
cmpsb
repnz
mov
jp
push
adc
int3
mov
movb
pop
testl
adc
pop
inc
mov
fiaddl
movsb
cmp
inc
scas
shrb
cmp
mov
fwait
and
movsb
inc
or
or
stos
push
cmp
bound
pushf
sbb
dec
add
pop
cmp
out
lret
lcall
sub
mov
adc
xchg
and
fistpl
fmuls
out
push
inc
mov
jno
aaa
jmp
xchg
mov
rcrb
test
mov
aaa
mov
jb
lahf
jge
cmp
sbb
adc
push
jns
sub
jg
in
xchg
sahf
xlat
cmpsb
scas
mov
enter
aaa
inc
add
sub
cmp
sub
inc
xor
in
ljmp
jge
adc
ds
cli
in
dec
mov
mov
inc
and
test
push
pop
cmp
ficoms
mov
and
sahf
gs
cld
sub
sub
mov
mov
and
xor
jmp
imul
sbb
mov
incb
fsts
test
neg
sbb
push
sbb
sub
mov
rolb
xchg
pop
pop
mov
jge
stos
mov
cmpsl
ljmp
mov
push
ret
mov
lock
lea
adc
rcll
push
cmp
xor
in
jge
rorb
out
lahf
mov
lahf
out
push
ss
cmpsl
adc
lret
iret
dec
mov
mov
mov
or
loopne
mov
sub
mov
sar
stos
dec
sbb
pop
lret
mov
cwtl
stos
xorl
dec
idiv
push
es
punpckldq
and
insb
movb
mov
cld
jmp
mov
mov
aaa
out
mov
push
int
mov
flds
scas
mov
nop
cwtl
mov
pop
and
sub
arpl
pop
sub
cmpsb
inc
fstl
fucom
fsub
mov
jb
stos
lret
leave
mov
mov
cmp
dec
xchg
adc
mov
inc
push
mov
daa
into
pop
clc
jmp
fwait
cmpb
les
les
xchg
pop
subb
jecxz
into
mov
scas
cwtl
sahf
mov
lcall
sahf
fcomps
push
sub
mov
mov
mov
add
fnstcw
xchg
mov
lahf
cmp
sarb
sahf
jle
cmp
iret
std
mov
mov
mov
out
add
sbb
arpl
xchg
ja
adc
dec
pop
iret
repz
sub
hlt
sahf
mov
rorl
xor
mov
mov
push
mov
jle
cmp
xor
leave
out
std
pop
sub
sub
fstp
mov
xor
mov
add
adc
stos
js
rolb
dec
mov
mov
leave
stos
and
pop
and
push
pop
das
inc
dec
inc
stos
mull
outsl
mov
push
pop
mov
lods
fidivrs
pop
leave
add
jns
pusha
movsl
cmp
jae
aam
pop
mov
sub
xor
in
repz
add
xor
loopne
pop
rorl
mov
push
mov
shll
add
jge
aaa
icebp
sbb
or
adc
daa
dec
jl
mov
push
enter
adc
subb
outsl
jo
std
adc
sbb
lea
add
xor
in
movsb
enter
xor
out
fsub
enter
in
les
xchg
loope
cmp
sbb
push
es
pop
mov
xchg
arpl
mov
les
jbe
mov
lea
stos
sarb
pop
sub
cmp
subb
jb
add
push
sahf
movsl
push
adc
hlt
inc
aam
add
aas
mov
int
fmull
stos
repnz
cs
sbb
push
test
and
test
jne
pop
std
mov
pop
hlt
enter
add
xchg
lods
iret
push
hlt
nop
loopne
push
jp
inc
setge
jp
enter
mov
insb
pop
bound
mov
imul
lret
ljmp
mov
call
mov
fs
cltd
mov
cmp
shrl
repz
xchg
dec
jne
popf
fisubs
add
repz
int
add
pop
pop
in
movsl
mov
cld
mov
cmp
lods
add
add
hlt
loopne
cmp
dec
pop
sarb
rorb
mov
sbb
sahf
in
adc
mov
dec
push
pop
push
lret
cmp
mov
in
ret
call
aad
push
mov
push
add
mov
add
mov
mov
jle
adc
inc
fnstenv
lea
xor
and
repnz
inc
jge
cmp
nop
xchg
fldcw
push
dec
jne
in
aas
jecxz
mov
sahf
popf
mov
lock
mov
test
push
es
fsubrs
or
xchg
dec
mov
inc
push
xchg
xchg
xor
fwait
xor
fnstsw
mov
mov
add
sbb
push
outsb
loop
mov
pop
or
sub
sub
repnz
xor
lahf
movsl
push
cmpsb
mov
xor
sbb
popf
mov
scas
jno
mov
and
xor
cmp
aad
es
mov
rcrl
xor
xor
jl
mov
jno
fbstp
pop
mov
fisubrs
mov
mov
mov
pop
jae
push
inc
adc
fs
gs
movsb
scas
jl
popf
sbb
sbbb
dec
push
lahf
mov
mov
inc
shll
ret
or
outsb
add
jns
movsb
add
aam
cmp
jge
mov
xor
sub
repnz
scas
aam
mov
nop
mov
sbb
js
enter
push
sub
repz
flds
mov
push
mov
int
add
sbb
in
mov
inc
cmp
sbb
xor
test
inc
sbb
shrb
in
cmpsb
imul
sbb
inc
mov
mov
lea
sub
mov
sbb
cmpsl
adc
fwait
lea
in
in
les
in
add
mov
pop
scas
int
inc
pop
mov
out
rcr
les
notb
fwait
std
sarl
xchg
sbb
test
movsb
test
ss
mov
fdivrl
cli
ljmp
adc
icebp
notb
into
inc
shlb
addr16
mov
lcall
test
cmp
daa
xor
mov
mov
movsl
sbb
push
in
std
mov
imul
or
sbb
sub
xor
aas
stos
lret
movb
adc
dec
fs
mov
mov
inc
sub
iret
and
push
mov
cs
pop
push
arpl
mov
mov
inc
mov
aas
lods
outsb
scas
mov
push
or
cli
xchg
xchg
cmp
push
push
jle
xor
mov
cmp
aas
inc
jae
ficomps
fidivs
mov
xchg
inc
xchg
inc
xor
popa
mov
push
mov
bnd
jle
mov
mov
loop
sahf
jb
cmpsb
pop
xor
sbb
fbstp
sbb
mov
xchg
xor
stos
lods
sbb
les
xor
push
mov
sub
pop
adc
mov
jae
into
movsl
push
pushf
mov
mov
ret
lods
fstps
sahf
mov
jecxz
popf
pop
test
jmp
pop
cmp
aaa
and
sub
xor
movsb
popf
mov
cmp
mov
js
shr
lcall
lods
in
mov
xor
add
mov
lret
sbb
push
or
sbb
mov
lret
jnp
jmp
ret
xor
loopne
cmp
ja
vmread
push
sbb
push
jbe
lcall
movd
and
fidivrl
lods
ret
mov
fiaddl
xchg
in
mov
lahf
lret
mov
cmp
mov
adc
sbb
stos
sub
push
cmp
and
push
sub
or
mov
mov
or
mov
mov
cltd
ljmp
addb
popa
mov
shlb
inc
loope
cmp
xchg
jne
mov
push
dec
std
mov
pusha
dec
imul
cmp
xchg
sarl
inc
xor
fidivrl
cltd
les
pop
inc
mov
dec
sub
push
aas
mov
push
lret
mov
lcall
sub
mov
sub
xor
xor
push
stc
movsb
ja
lahf
add
pop
sub
push
out
mov
mov
mov
mov
xor
xor
cmpsb
scas
sub
inc
jae
jl
std
mov
or
or
lret
mov
shr
js
fsubrs
addb
stos
mov
cmpb
xor
mov
mov
mov
js
and
mov
ljmp
push
loope
fmul
fistps
jns
outsl
decb
dec
sub
jns
call
dec
inc
fisubl
test
stc
xchg
jns
mov
sbb
or
nop
fidivrl
lods
rcll
ficomps
xchg
fcomi
movsl
repnz
sub
jg
sbb
mov
push
or
add
sti
pop
xlat
out
inc
lds
mov
or
sahf
dec
mov
add
in
icebp
mov
rorl
pop
jecxz
ljmp
pushf
sbb
test
dec
add
mov
xor
push
mov
repnz
pop
mov
xor
mov
loope
mov
jle
stc
ret
movsb
add
mov
test
sub
lods
shrb
xor
inc
fucom
cli
lock
iret
pop
inc
cli
xchg
in
xor
pop
js
cltd
xor
cmp
lret
cli
cmp
cmpsb
imul
bound
adc
xor
jle
test
cmpsl
mov
cli
jmp
jg
cli
leave
shrl
out
dec
pop
cmp
movsl
cmpsl
mov
xchg
cli
sahf
inc
shl
std
roll
bound
sub
and
inc
cs
push
fs
cli
out
dec
inc
mov
push
dec
or
cltd
shl
cli
lods
sahf
in
pop
pop
fbstp
out
ret
mov
in
push
adc
psubd
int3
jne
fmull
sbb
jbe
outsb
mov
data16
stos
mov
clc
adc
mov
jae
mov
nop
push
and
mov
xor
pop
mov
sub
aas
maxps
cmpsb
lds
lods
hlt
ret
aas
addr16
adc
jge
mov
mov
sbb
outsb
ljmp
mov
hlt
sub
mov
xor
das
andb
mov
leave
mov
popf
sbb
testb
add
jne
icebp
mov
jb
ss
leave
and
dec
sbb
xchg
pop
fdivr
scas
test
push
mov
es
addb
test
mov
push
in
dec
dec
rcrb
aad
xchg
movsb
pop
aam
xlat
or
jmp
sarb
mov
in
add
cmpsl
scas
out
cmp
adc
fwait
outsb
jnp
mov
subb
add
pop
dec
sahf
sbb
in
lds
inc
sbb
cmp
dec
push
jb
mov
sub
jle
cmpsl
mov
mov
pop
cmc
add
pop
dec
mov
push
xor
fildl
ljmp
dec
frstor
dec
int
or
inc
jl
xchg
mov
xor
sub
or
cmp
leave
in
mov
mov
scas
xor
das
movsb
xchg
cmp
jno
sub
gs
pop
hlt
adc
addl
lret
insb
mov
pop
arpl
xchg
shrb
imul
lods
test
push
adc
shlb
scas
cli
xor
add
cmpsb
dec
sub
jbe
sbb
mov
or
nop
pop
std
out
push
jle
cmc
pusha
cmp
out
sub
repz
or
inc
cmpsb
xchg
push
inc
jge
movsl
push
adc
add
fstps
dec
cmp
aad
pop
bound
stos
inc
cli
pop
pop
aas
clc
pop
cmpsl
xor
add
fwait
xchg
ljmp
dec
inc
dec
test
std
xorb
mov
and
sub
clc
jecxz
xchg
inc
aas
sbb
stc
ljmp
aam
sbb
mov
pop
cmp
mov
arpl
xor
inc
stc
leave
in
mov
add
rcrl
shll
cmp
sbb
inc
or
jle
cld
cmpb
outsl
sbb
adc
in
jmp
and
cmpb
add
mov
mov
stc
dec
mov
xor
out
jp
lcall
xchg
jbe
adc
xchg
clc
jbe
cmp
mov
push
mov
mov
inc
mov
mulb
mov
in
cs
lock
push
mov
out
or
fs
aas
mov
pop
outsb
scas
push
sahf
push
pop
pop
outsl
jmp
push
mov
das
stos
mov
push
das
fstps
add
loope
mov
sub
arpl
mov
fidivrs
inc
inc
test
lahf
mov
add
int
or
aas
mov
pushf
mov
shrl
mov
sbb
out
out
jmp
inc
mov
fldenv
hlt
mov
in
xchg
mov
dec
or
lahf
sub
sub
loopne
cmp
lods
jnp
mov
xchg
add
gs
mov
incb
cmp
out
push
loopne
fstpt
xchg
int3
sarl
push
jl
ljmp
daa
shr
sbb
shrb
sub
mov
cmp
add
cli
cmp
dec
in
movsl
arpl
pop
mov
lock
testb
xor
mov
xor
add
mov
and
pop
pop
call
cmpsl
popa
in
pop
mov
ja
add
mov
mov
cmp
and
push
sbb
lods
pop
push
lret
dec
mov
mov
lods
push
sub
out
imul
cmp
adc
jge
sahf
clc
sbb
stc
xor
shll
pop
pop
mov
xchg
dec
lods
push
fwait
mov
xchg
arpl
aaa
lods
mov
addb
dec
and
scas
cltd
leave
fiadds
lods
scas
fmulp
sbb
aas
sub
dec
pop
loop
inc
incl
add
jge
je
fsubrs
adc
aaa
cld
hlt
mov
shlb
loope
mov
inc
jecxz
loope
gs
xchg
fdivrs
std
shlb
xor
insl
ficompl
cmpsl
push
jp
sti
loope
cmc
push
cmpsl
adc
xchg
mov
aaa
es
insl
loop
les
insl
sub
lcall
sahf
in
pop
sarb
les
aad
mov
sub
out
sahf
inc
std
cli
push
jmp
jno
mov
hlt
mov
sub
movsl
mov
addb
nop
dec
push
cltd
and
jns
in
sbb
xchg
xor
sbb
mov
ss
iret
aad
in
lds
nop
dec
xchg
jns
test
cmpsb
add
and
sub
std
adc
mov
xor
mov
mov
cmp
add
mov
dec
jns
cmp
push
xor
movsb
fs
enter
dec
push
iret
adc
mov
cmp
lock
xchg
sub
aaa
test
cld
dec
movsl
lahf
and
mov
mov
sbb
cmp
adc
sub
add
shlb
sub
hlt
mov
aam
mov
ja
les
jns
xor
sub
stos
in
inc
hlt
cs
imul
popf
insb
mov
pop
out
and
call
pusha
jmp
add
cmp
xor
int3
das
jge
cwtl
shrl
out
cmpsb
or
iret
fld1
sub
cmp
test
cmc
mov
jb
mov
xchg
cld
dec
popf
fdivs
jle
ret
dec
push
roll
hlt
jb
or
mov
mov
or
jecxz
xchg
dec
inc
push
xor
jno
jmp
xchg
data16
mov
mov
xchg
fimull
repnz
adcl
cmp
xchg
dec
push
imul
out
mov
dec
jbe
sub
jg
dec
sbb
xor
sub
cld
inc
jns
inc
test
add
repz
shl
jge
pop
add
cmp
xchg
jp
cli
dec
addr16
adc
sbb
loopne
pop
lret
daa
pop
push
insb
push
and
xchg
or
mov
mov
dec
addr16
outsb
or
dec
ret
and
sahf
addl
fdivrl
mov
fisubl
cmp
sub
rorb
ficompl
xor
sub
fcmovb
test
je
add
mov
subl
adc
shll
lods
push
jmp
stos
xor
fwait
lret
cmpsl
dec
adcl
mov
pop
pop
mov
inc
aaa
push
ficomps
xor
pop
ficomps
add
mov
je
pop
mov
std
fldenv
lret
loope
lcall
aas
sub
es
es
jne
pop
cltd
mov
mov
adc
loop
pop
in
xor
test
lea
dec
fists
inc
and
inc
mov
lock
mov
adcl
das
xchg
fs
sbb
lock
and
xchg
addr16
inc
adc
adc
or
imul
xor
add
sbb
aad
sbb
mov
mov
sbb
jmp
movsl
xor
mov
sub
cmp
out
lock
stos
xchg
fcomip
daa
push
in
in
jns
loope
mov
mov
ja
out
cmpsl
inc
inc
add
jle
lock
cs
jle
xchg
aam
mov
je
out
test
add
lock
xor
imul
lock
add
inc
outsb
cmc
outsb
loope
jne,pn
imul
pop
xor
jns
dec
pop
in
lock
mov
aad
stc
mov
jno
sub
sahf
cwtl
aad
lock
inc
mov
daa
mov
pop
lret
fidivs
sbb
sbb
data16
or
xchg
sbb
cmp
cli
cmc
mov
repnz
push
sbb
push
cmc
push
mov
xor
jno
jne
movsb
push
flds
cld
push
add
jge
insl
jmp
outsb
dec
xchg
sahf
repz
mov
insb
add
mov
clc
jnp
jmp
outsb
mov
sub
xchg
rorb
sub
sub
jmp
mov
mov
sahf
mov
lods
mov
mov
mov
push
sub
mov
ja
xor
adc
adc
loopne
lock
cmpsl
sbb
in
mov
or
fdivrl
or
orl
std
jge
dec
sahf
jp
cmpsb
fcos
negb
xor
push
cmp
fiaddl
add
lock
adc
cmp
shlb
mov
sahf
jno
movsl
cltd
scas
xchg
mov
mov
mov
mov
cmp
pop
push
iret
cmp
imul
jae
ja
xor
and
in
mov
adc
fs
add
xor
xchg
ffree
and
in
lcall
pop
movsb
fldenv
pop
mov
test
std
jmp
xor
insl
mov
dec
int
adcb
cmp
cli
pop
pop
aas
ret
push
adc
icebp
lcall
adcl
xor
shll
cltd
nop
fisubrl
jno
jl
outsl
mov
or
jnp
sub
add
insl
fcmovu
clc
popf
pop
jmp
push
jecxz
lret
jecxz
push
mov
jle
mov
push
fstp
lret
jl
and
pop
xchg
jge
hlt
call
add
mov
sub
sub
cmp
jg
sarl
sahf
pop
jb
icebp
adc
gs
cmc
icebp
shll
and
stc
push
cmpsb
cmp
cmp
movsl
popa
fcoml
xorl
stos
fs
inc
mov
xor
adc
gs
ja
add
aad
movl
addr16
addb
cli
dec
repz
clc
or
test
mov
popf
mov
mov
test
mov
and
loop
add
insb
test
cmp
mov
xor
adc
jecxz
lret
frstor
and
sub
cmpsl
xchg
into
fsubrs
adc
out
fstps
xlat
sbb
pop
add
cltd
mov
stos
ret
mov
sbb
out
jl
loop
cs
push
and
dec
jb
popf
xchg
outsb
jecxz
jbe
mov
sub
movsb
fnstsw
cmp
addl
mov
mov
mov
stos
mov
dec
cmpsb
inc
rorb
inc
lcall
hlt
bound
std
orb
call
int
in
xor
cmp
mov
jl
xchg
jge
xchg
xor
addr16
in
pop
xor
popf
in
data16
or
mov
pop
xchg
mov
cmp
lea
lret
mov
std
sbb
or
or
lret
mov
mov
lahf
gs
js
add
push
mov
fwait
push
shll
pop
shl
sbb
sub
mov
flds
push
popf
push
and
aaa
dec
cltd
sahf
push
mov
fdivl
inc
dec
hlt
ss
pop
xor
sbb
push
pop
les
jne
push
mov
pop
fcmove
ja
mov
and
jne
lods
dec
jmp
and
gs
jne
xchg
andl
xchg
cmp
xchg
add
xchg
xchg
cmp
sbbl
xchg
popf
shl
xchg
push
mov
stos
or
push
and
sbb
testb
xor
xchg
imul
adcl
sti
xor
imul
rorb
xor
imul
xchg
push
shlb
xchg
sub
mov
and
jge
add
fidivl
pop
push
pop
or
xor
pop
sub
mov
inc
js
mov
idivb
xor
in
mov
in
lcall
loope
notb
jp
push
cmp
roll
lret
jmp
popf
aaa
shrl
add
cmc
hlt
pop
jge
insl
cmp
fcos
jle
ds
leave
jp
sub
pavgw
arpl
stos
in
xchg
jecxz
orb
push
push
inc
nop
xlat
mov
jge
pop
dec
ja
mov
nop
xlat
test
add
adc
xlat
addr16
dec
mov
mov
dec
or
ljmp
popf
and
or
in
daa
add
inc
and
pop
jecxz
adcb
sbb
add
insb
addr16
inc
decb
outsb
out
shll
js
adc
pop
stc
fisttps
dec
push
jb
stc
test
mov
cmp
fs
ficomps
dec
lea
cmp
mov
mov
mov
repnz
mov
aaa
cwtl
jnp
cmp
jno
fs
cmp
cmc
xchg
ret
sbb
dec
xor
mov
loopne
push
clc
push
in
es
ret
lret
clc
dec
fists
lods
cld
xchg
jp
sti
cmp
mov
pop
leave
jp
pop
jno
xchg
jp
sti
adcb
lcall
inc
adcb
aas
clc
xor
je
pop
adc
sahf
mov
stos
cmp
mov
sub
mov
cmp
sbb
sahf
gs
and
mov
enter
aam
es
xchg
mov
mov
push
cmp
push
sub
push
leave
ret
xor
loopne
ret
sub
repz
xchg
gs
or
mov
jb
lahf
pop
xchg
push
mov
add
and
ss
jo
mov
in
es
incb
cld
popa
xor
sbb
aam
popa
xchg
dec
int3
mov
inc
popa
pop
scas
sub
fsubl
les
cmpsb
in
mov
cmpsb
mov
scas
lret
sub
stos
dec
sub
and
js
fwait
clc
inc
jb
add
push
xor
call
stos
mov
sbb
mov
mov
call
pop
inc
cli
pop
pop
aas
clc
ds
xor
test
fwait
aas
clc
and
dec
orl
in
lahf
je
fcmovu
repnz
outsl
mov
fucomp
push
push
cltd
fidivrs
scas
mov
dec
scas
cmpsl
xchg
mov
mov
popa
add
cltd
sarb
cmpsb
dec
or
jge
pop
in
cmp
sarb
mov
fwait
pop
jne
mov
push
rorb
fiaddl
cmc
dec
lods
xor
fwait
lret
xor
mov
adc
cmp
push
repz
xor
repz
xchg
idivb
movsl
in
icebp
and
lret
fstp
xchg
lods
inc
iret
scas
lods
mov
mov
mov
pop
adc
in
sarl
xor
mov
mov
leave
inc
or
sub
add
lods
movsb
sub
or
dec
fists
sahf
addb
xor
add
lods
fsubrl
stos
mov
stos
aas
popa
int
popa
in
push
mov
and
loop
mov
sahf
pusha
cmc
mov
mov
xchg
mov
cmp
push
ror
mov
push
mov
in
repz
sahf
push
lds
test
cs
stc
cmp
insl
stc
push
adc
add
fs
mov
sub
popf
fisubrs
dec
xchg
fsts
aad
sub
imul
insl
xor
mov
icebp
jge
popa
loope
out
cmp
popf
pop
jecxz
lret
out
call
aaa
or
mov
outsl
inc
push
mov
mov
cmpsl
dec
push
test
scas
dec
push
lds
mov
mov
ja
push
mov
sub
test
insb
add
mov
shrb
jge
adc
sub
xchg
and
jge
push
icebp
lock
sarb
shl
mov
jecxz
dec
movsl
popa
lea
imul
mov
push
stos
xor
fidivl
xor
adc
in
popa
jge
mov
mov
mov
incb
mov
mov
outsl
inc
pop
and
and
lea
mov
sbb
outsl
jno
mov
xchg
mov
mov
sub
dec
das
or
in
jg
sub
hlt
jnp
cmp
inc
sahf
xor
lods
outsw
xor
into
mov
test
flds
inc
adc
adc
mov
mov
ja
xor
imul
adc
mov
cltd
incb
lods
xor
cmp
push
push
add
cmp
sub
cmc
mov
cltd
repnz
clc
sub
test
mov
mov
mov
xor
movsb
cmp
stos
popf
mov
mov
and
jle
xor
pop
pop
aas
clc
pop
adc
cld
fnstsw
xchg
push
xchg
loope
out
mov
cltd
scas
xchg
mov
fimuls
push
mov
insl
fcmovu
clc
cs
jmp
xor
adc
ja
hlt
push
push
lds
sub
mov
and
push
and
add
xchg
rorb
sahf
cld
xchg
lods
lods
cltd
fimuls
xchg
inc
sub
dec
hlt
jno
pop
out
sbb
sub
xor
ret
mov
mov
lods
sub
cmp
jno
imul
or
aaa
ret
inc
xor
jg
or
or
sub
dec
in
mov
mov
sahf
repz
mov
test
pop
sub
cld
loop
xchg
sti
inc
adc
rorb
aad
pop
dec
adc
imul
mov
mov
jg
insl
xchg
fidivrs
dec
ret
in
mov
test
pusha
sahf
inc
loopne
loop
sub
fldl
inc
out
ja
addb
xor
inc
cli
pop
pop
aas
clc
add
aas
clc
xor
icebp
and
cmp
ljmp
in
fmull
imul
ficomps
pop
pop
mov
pop
ss
or
mov
imul
inc
xchg
jge
loope
cmp
pop
pop
aas
cli
or
aas
clc
ds
inc
cli
pop
pop
aas
clc
add
aas
clc
xor
nop
bound
adc
pop
std
jle
ret
popf
shll
adc
and
sub
xor
cltd
fidivrs
stc
sub
add
lock
xor
sbb
popa
lea
inc
cli
push
jmp
push
jge
in
pop
clc
mov
and
cmp
add
imul
sub
xor
mov
mov
popf
mov
fcmovbe
repnz
and
and
aaa
push
push
and
mov
aaa
imul
inc
mov
xchg
test
mov
xor
mov
dec
xor
inc
cli
push
jmp
outsb
imul
mov
pop
andnps
adc
stos
roll
clc
orl
cmp
push
or
mov
stos
mov
xlat
aaa
imul
es
add
sti
ficompl
test
popf
mov
mov
mov
add
lret
mov
jge
lock
mov
sub
sahf
cmp
xchg
into
fucom
and
sahf
pop
nop
dec
lods
mov
clc
and
inc
cmp
cltd
and
outsl
jns
sbb
cmp
enter
cmc
sub
and
lret
pop
mov
lods
ret
cmp
cmp
pop
test
inc
sahf
jb
sbb
mov
sub
and
push
sub
jecxz
data16
add
cmp
std
lock
fidivrl
std
cmp
cld
insb
xchg
sti
clc
cmp
std
jmp
ficompl
mov
xchg
pop
cmp
push
outsl
or
adc
mov
out
adc
in
pop
mov
nop
mov
add
popa
out
pop
mov
lods
mov
xchg
loope
mov
or
mov
stos
dec
leave
cwtl
test
mov
leave
sahf
pop
test
popa
fstpt
fs
and
aaa
cmp
fcmovnb
stos
add
cmp
add
lods
add
inc
push
subl
mov
lret
jg
insl
rcrb
clc
scas
fidivs
popf
test
mov
xor
inc
mov
mov
add
mov
xchg
adcl
test
inc
aad
jae
cld
dec
addr16
xlat
xor
popl
mov
dec
cwtl
adc
aas
mov
or
iret
nop
test
mov
jecxz
sbb
mov
xlat
and
test
sub
aaa
sbb
adc
add
dec
aas
xor
popf
add
arpl
dec
out
stc
cmp
aaa
jno
cmp
out
inc
cmpsb
aaa
jl
pop
inc
fwait
rcr
sub
rolb
mov
pusha
push
mov
divb
or
inc
dec
aam
xor
insl
sub
pop
inc
dec
dec
ror
xchg
clc
sub
testl
scas
dec
movsl
sbb
gs
pop
fxam
mov
test
out
inc
lock
lret
rcr
jge
mov
movsb
mov
pop
mov
sahf
mov
mov
push
lods
or
inc
cli
pop
pop
aas
clc
pop
push
inc
outsb
and
out
out
mov
subl
or
add
inc
sub
jo
rclb
adc
add
mov
push
mov
dec
sbb
ja
xor
or
dec
xor
repz
adc
sbb
sti
popa
pop
lret
and
clc
jecxz
mov
mov
sub
mov
add
cmpsl
push
repz
mov
loope
cmp
mov
cmp
fildll
push
mov
mov
fcomi
push
cmp
and
mov
lods
mov
sub
test
mov
pusha
rcrl
xchg
push
pop
ss
mov
test
dec
into
xor
xor
inc
mov
int
xchg
xchg
adc
xlat
or
push
mov
mov
push
dec
mov
xor
push
add
aaa
fldt
mov
jecxz
insl
mov
dec
mov
mov
xor
mov
mov
or
adc
cmp
push
xchg
cmp
fwait
mov
xor
popf
or
daa
or
xchg
cmp
push
rorl
mov
inc
mov
daa
mov
and
inc
out
sahf
pop
inc
xchg
stos
adc
pop
mov
rorb
scas
dec
mov
sahf
dec
mov
sahf
inc
mov
andl
inc
sub
inc
lods
adc
sub
xor
mov
ret
sbbl
out
cld
or
das
mov
lods
cmp
mov
xchg
push
push
sbb
mov
mov
mov
mov
mov
repnz
ret
mov
jbe
lahf
ss
mov
lods
pop
mov
subb
cli
pop
pop
aas
clc
into
xor
fcoms
inc
xor
lods
xor
scas
xchg
cmp
in
add
cwtl
scas
pop
lock
ss
push
sub
mov
nop
cmpsb
jns
mov
push
pop
ljmp
data16
xchg
rorb
and
jg
test
clc
movl
jmp
rcl
mov
cmpsl
hlt
movsb
adc
js
xchg
jnp
xchg
inc
sbb
insl
pop
jb
and
mov
and
sbb
xchg
idivb
xchg
fisttpl
mov
es
dec
gs
inc
lods
stc
ret
hlt
in
movsl
icebp
movsl
fiadds
insl
shlb
mov
icebp
adc
add
into
mov
mov
repnz
cmp
hlt
std
add
sti
pop
mov
aaa
mov
into
sub
test
mov
dec
add
mov
inc
mov
fidivrs
scas
pop
jo
shlb
xchg
sbb
inc
pop
addl
xchg
cltd
add
push
addr16
lods
mov
adc
xchg
es
mull
push
inc
push
push
jb
les
dec
adc
mov
mov
xor
popa
push
sti
xor
adc
scas
int
insl
and
mov
mov
cmp
xlat
insb
ja
inc
jle
aad
jp
mov
aad
out
xor
xor
mov
xor
inc
lods
push
int
aad
ror
pop
in
mov
out
pop
jns
cmp
cmp
inc
xchg
jns,pn
pop
pusha
mov
lret
and
mov
daa
mov
sub
jno
fsts
pop
test
loope
add
mov
ss
xor
clc
mov
ret
and
sbb
xchg
cltd
mov
adc
std
sahf
cld
sub
popf
loop
inc
pop
popa
outsw
shl
aas
jns
inc
push
mov
jmp
shlb
jns
mov
cmp
add
clc
sub
xor
xor
aaa
call
insb
test
std
pop
lea
daa
xor
push
into
mov
cmp
in
leave
fs
cmpsl
pop
out
lahf
add
xchg
add
xor
lret
add
loop
sbbl
mov
lods
mov
or
ds
popf
sub
scas
cld
movb
push
movsl
jns
rorb
and
add
jmp
shl
mov
cmpb
cmp
pop
add
add
std
popf
xor
scas
jns
push
cli
sahf
xor
jns
inc
sub
call
mov
cmp
divl
in
push
clc
jg
add
clc
aaa
fisubl
push
mov
xor
inc
mov
push
mov
mov
push
dec
pop
jmp
cmp
sahf
mov
scas
sbb
into
repz
xor
push
xchg
imul
popf
cmpsb
xor
dec
aad
cmpsb
inc
out
es
enter
mov
int
std
addr16
cwtl
xlat
mov
adc
iret
dec
add
js
cmovns
cmpsl
insb
inc
aaa
rcrl
push
mov
mov
les
xor
pop
shll
and
aaa
out
int
mov
stos
sub
arpl
push
scas
mov
mov
fnstcw
std
icebp
inc
xchg
lahf
mov
push
popf
stos
repnz
push
xchg
mov
faddl
mov
sub
xor
shlb
xlat
mov
test
mov
testl
int
mov
mov
fstps
fadds
dec
insl
stos
cmp
lock
bound
add
sub
insb
or
pop
sbb
mov
mov
jg
aad
add
decb
int3
mov
stos
mov
push
pop
push
or
push
lret
adc
out
xor
inc
pop
and
mov
adc
mov
push
roll
pushf
insb
jp
fwait
mov
in
xchg
mov
inc
jp
mov
xchg
mov
mov
nop
mov
jnp
dec
xchg
loop
mov
xor
add
push
out
xlat
fstpl
and
lods
movsb
xor
leave
mov
test
dec
lcall
push
jge
xchg
mov
dec
mov
xor
js
mov
clc
push
imul
jbe
mov
loop
pop
jo
push
mov
hlt
jp
std
movsl
mov
filds
push
dec
pop
adc
xchg
scas
mov
mov
shlb
fmuls
subb
add
xor
fisubs
cltd
int
inc
scas
mov
inc
testb
mov
push
sbb
shlb
dec
lea
out
and
pop
push
fdivl
push
mov
fdivrp
mov
or
pop
jne
dec
cmp
ret
aas
pop
pop
pop
push
fstpl
hlt
sarb
jge
mov
cmp
lods
inc
scas
pushf
cld
mov
inc
sub
or
push
stos
push
inc
dec
push
xor
icebp
mov
dec
cmp
xchg
xor
push
test
dec
sbb
sub
cli
loop
lret
push
adc
aad
out
das
les
sbb
int
fcmovnbe
cmc
in
les
add
insb
dec
add
int3
call
das
add
and
mov
jge
in
ret
sbb
out
pop
pop
xchg
out
mov
cmpb
in
jo
cmpsb
inc
sub
xor
inc
test
data16
scas
test
mov
jmp
ljmp
mov
ficompl
das
cmp
xor
xor
xor
inc
ljmp
testb
push
ss
mov
inc
or
test
and
adc
leave
jbe
sbbl
mov
inc
shl
mov
inc
mov
add
or
sahf
ror
dec
jp
inc
std
mov
enter
dec
bound
mov
xchg
shr
fistpl
add
jge
sbb
jnp
mov
ret
inc
and
aad
cld
mov
mov
sarl
movsl
adc
and
icebp
pop
inc
sahf
jnp
inc
push
jbe
dec
mov
cmpl
xchg
pop
cmpsl
shlb
xchg
mov
insl
fcom
mov
shlb
scas
adc
loopne
jge
mov
insb
movsb
testb
in
push
pop
repz
shlb
cmp
call
jnp
out
jmp
mov
jbe
inc
clc
es
mov
and
mov
dec
xchg
ja
mov
pop
jmp
xor
dec
cmp
add
mov
mov
pop
stos
mov
loopne
rcll
mov
xlat
lea
mov
add
mov
and
lods
out
addr16
fdecstp
inc
dec
aaa
out
mov
ror
sub
mov
xor
cli
mov
pusha
movsb
xchg
mov
xchg
pop
pop
jnp
cmp
stc
out
cmpsl
daa
mov
mov
imul
cltd
lock
cs
mov
xchg
lock
loop
cmp
mov
xor
shll
repz
inc
imul
or
mov
fs
cmp
rorl
add
cmp
xor
cwtl
ss
mov
popa
fwait
aad
pop
lods
dec
pop
and
dec
add
xchg
sub
mov
lea
cmpsl
lea
cwtl
cld
push
or
dec
sbb
test
pop
inc
nop
mov
mov
mov
std
fcomi
and
ficomps
push
cmpsl
xor
and
cmp
loopne
fidivrs
or
mov
leave
pop
stos
lret
and
loopne
js
in
mov
cmpsb
in
xchg
mov
movsb
fs
xlat
loopne
pop
sub
lods
pop
sub
mov
mov
test
push
faddl
pop
icebp
mov
jge
dec
cmp
xor
stos
xor
fwait
adc
xor
xrelease
lods
gs
sti
xor
fimuls
ret
cmp
pop
mov
dec
rcrl
mov
hlt
pop
rcrl
shlb
ds
xor
je
ret
daa
cmp
mov
sbb
xchg
scas
jge
xlat
xor
mov
mov
lea
sbb
xor
aaa
or
sbb
pop
mov
mov
popw
xor
or
xor
cmp
pop
cltd
das
xlat
and
jl
jns
add
fs
loop
and
shlb
aam
ds
or
jle
add
outsl
mov
decb
push
and
rolb
sbb
mov
int
dec
sahf
xchg
lret
icebp
movsl
mov
sub
into
mov
js
sub
dec
mov
sub
int3
rol
pop
pop
lock
out
les
cmpsb
mov
icebp
mov
and
fsubs
mov
pop
mov
aad
and
sub
popa
pop
fcoms
jg
lods
push
mov
repz
les
popf
push
dec
mov
or
dec
ss
push
test
mov
mov
or
mov
loopne
mov
in
add
mov
data16
mov
and
stos
mov
dec
cmpsb
mov
push
popf
shr
mov
or
popa
mov
cmp
daa
mov
popf
mov
pop
test
nop
adc
sbb
pushf
stos
adc
mov
popf
testl
pushf
mov
adc
imul
adc
sahf
enter
scas
iret
sbb
call
jl
cmp
mov
enter
in
cmp
movsb
fdivs
mov
sahf
mov
push
sub
movsl
jae
jg
ret
pop
mov
inc
mov
inc
mov
movsl
cmp
cs
cmp
mov
cmc
push
lret
lret
jmp
sahf
mov
pop
loopne
xor
push
das
rcr
movsb
rorb
movsb
into
mov
mov
imul
cli
mov
inc
nop
inc
mov
ret
pop
inc
push
loope
out
cli
mov
or
enter
mov
push
xchg
jno
repnz
xor
int3
sbb
mov
data16
sarl
push
repz
jnp
int3
xlat
aad
and
push
xor
call
cmpsl
nop
das
aad
mov
mov
or
sti
adc
pop
xor
lods
das
cmp
rorl
cmp
mov
pusha
cli
lret
das
movsb
inc
pop
shr
and
stc
sarl
or
adc
test
inc
mov
mov
xchg
inc
or
testl
popf
mov
sub
inc
inc
out
sub
int3
jecxz
add
lahf
lods
dec
leave
addl
jmp
scas
cld
push
inc
mov
jle
out
mov
sbb
xchg
xor
stos
and
dec
or
test
lods
movsb
mov
add
cli
mov
dec
mov
into
cmp
popf
dec
mov
cmp
pop
push
and
outsl
sarb
add
in
mov
add
cli
lahf
push
shlb
mov
add
cli
das
push
push
xor
add
and
test
mov
loopne
into
mov
scas
lock
xchg
cli
fistpll
mov
push
outsl
or
xor
mov
loopne
push
movsb
lods
pop
testl
mov
lret
mov
adc
pop
adc
mov
ljmp
inc
xor
mov
aas
shll
test
ds
jle
shlb
pop
cmp
insb
xor
ror
sub
and
add
add
aaa
pop
pushf
sub
ror
loopne
das
shrl
xchg
cmpl
xchg
popl
outsl
dec
push
adc
adc
mov
in
sub
jns
inc
mov
push
mov
jle
adc
mov
out
mov
xchg
decb
sbb
popa
mov
xchg
cli
clc
and
fisttpll
push
adc
clc
shll
cld
sbbl
aaa
inc
loopne
jge
mov
divl
pop
hlt
cmpsb
jg
bound
fistpll
loopne
ja
fistpl
mov
jmp
cld
call
repnz
ja
pop
cmp
fimuls
cmp
test
int
pop
jb
mov
cmp
movsl
es
es
lods
mov
or
int3
adc
cmp
cltd
arpl
mov
add
xchg
rcrb
xchg
test
sub
lcall
stos
mov
out
je
imul
mov
int3
sbb
lock
cmpsb
mov
and
es
jae
or
fiadds
movsl
sub
mov
pop
mov
push
cltd
scas
push
jae
outsl
xor
cld
and
sbb
mov
fisubl
jns
sub
std
divb
fists
pmovmskb
cmpsb
popa
xor
cmpsb
cmpb
inc
mov
jmp
jnp
inc
xor
jne
push
xchg
shr
rcr
ljmp
xchg
xor
testb
inc
mov
test
lock
lods
movsl
pop
mov
xchg
pop
cmp
xchg
lock
xor
xchg
xchg
cmpsb
xlat
push
movb
mull
xor
mov
mov
les
popa
sub
jmp
ficompl
mov
push
jae
das
mov
arpl
mov
and
or
int
das
jg
and
push
cmp
xchg
inc
xor
sbb
add
and
xchg
inc
jp
xchg
xor
pop
negl
add
xchg
pop
fnstcw
pusha
xchg
inc
jbe
dec
cmp
xor
sub
lret
cltd
sbb
or
xchg
aad
mov
mov
dec
xorb
cmp
or
inc
cld
xor
xchg
push
hlt
cmp
mov
cmpsl
out
or
xchg
stos
aam
mov
xchg
xchg
fisubrl
cmc
fs
lods
imul
test
mov
sub
xor
sub
xchg
idivb
adc
in
mov
adc
fs
aas
andl
shlb
mov
out
xchg
cwtl
mov
jb
cmpsl
fdivs
cmp
rclb
adc
add
cmpsl
movsl
fs
and
shlb
cmp
mov
aam
mov
std
les
in
jecxz
shr
dec
rcrl
int
cli
fldenv
insb
mov
mull
xor
rorl
insb
in
push
cmp
fs
jb
enter
mov
xor
aas
add
mov
pop
and
aas
dec
test
rorl
pop
insl
int
jae
dec
sub
ja
aam
mov
xchg
sarl
jp
addr16
cmp
inc
aaa
sbb
cli
testb
dec
cwtl
cmp
stc
rcll
push
sahf
sub
sub
mov
popa
jne
lock
mov
cltd
sbb
inc
jae
dec
push
mov
lds
out
dec
mov
pop
mov
dec
and
push
leave
push
es
push
test
ljmp
jmp
adc
push
sti
das
adc
inc
xlat
add
push
xlat
add
xor
aad
inc
sub
sub
idivb
pop
push
cmp
leave
xchg
cmpsb
adc
push
adc
dec
arpl
hlt
push
test
lret
push
cltd
adc
shrb
nop
adc
lahf
sbb
xchg
cmpsb
adc
push
adc
dec
arpl
hlt
push
test
lret
out
adc
mov
xor
ja
cli
das
adc
frstor
stos
xchg
mov
push
add
adc
inc
adc
imul
push
test
and
dec
ja
xchg
adc
mov
cltd
pop
mov
add
xchg
push
imul
movsb
xor
bound
jno
push
pop
test
sub
lret
jno
sub
pop
jmp
xchg
rcrb
lds
repz
xchg
shr
push
test
mov
sub
lock
push
in
jno
cltd
lret
inc
adc
cmp
inc
addr16
cmp
adc
dec
sbb
push
out
test
jecxz
dec
ja
xchg
adc
xor
or
adc
lret
clc
add
mov
push
stc
filds
xor
dec
mov
test
jns
and
dec
fcmovne
or
inc
pop
dec
out
mov
dec
addr16
imul
das
adc
jb
into
inc
mov
filds
xor
lcall
adc
fs
arpl
dec
fldt
or
and
and
inc
sahf
cmpsl
adc
cltd
ja
in
aam
test
addb
mov
cmpsb
loop
xor
mov
xor
or
and
cmp
mov
daa
add
xchg
and
fstps
xchg
iret
xorl
jb
sahf
cmpsb
out
fsubl
mov
pop
test
sub
lea
loop
mov
xchg
sbb
stos
es
sahf
out
lods
sbb
in
push
xor
mov
mov
cltd
push
jg,pn
mov
mov
fwait
lods
xchg
sbb
pop
sti
insl
mov
jle
dec
xor
cmp
jbe
dec
pop
popf
mov
mov
xor
adc
daa
lods
dec
leave
out
and
xchg
shrb
jmp
roll
xchg
inc
outsl
add
lret
or
sarl
dec
mov
add
and
repz
xchg
pop
mov
push
je
fstpt
or
add
cmp
xchg
cmpsl
das
sarl
mov
cli
in
mov
mov
jnp
mov
jecxz
mov
sub
bound
mov
sbb
jno
dec
leave
shlw
add
ja,pn
ja
lahf
jge
dec
mov
lret
mov
push
repnz
sbb
lods
mov
lcall
mov
push
and
cmp
mov
mov
lock
dec
js
push
movsb
push
aam
stos
std
or
inc
inc
pop
dec
cmpb
testl
dec
xorl
popf
vmovntdq
jbe
sbb
lods
sub
fmull
xor
cmp
jbe
ret
hlt
push
popf
sub
cmp
imul
cmpsl
fwait
mov
xchg
xchg
insl
in
shlb
scas
xchg
mov
popf
mov
sub
fcmovu
addr16
aas
mov
loope
jecxz
xor
lea
jo
sub
loop
cmp
mov
mov
mov
inc
mov
and
loop
dec
pusha
mov
jmp
int
cmp
inc
sub
cmp
adc
push
test
jl
sti
mov
inc
push
aad
in
mov
hlt
push
cmp
cmp
cld
into
lahf
idiv
mov
dec
out
pusha
push
loope
outsb
add
jns
mov
push
adc
das
jnp
lcall
or
in
mov
and
movsb
sbb
jecxz
repnz
mov
aad
xor
mov
mov
scas
cmc
out
lcall
push
repz
imul
pop
add
inc
sub
cmpsb
fcomip
and
push
hlt
lds
frstor
add
push
call
xchg
out
repnz
mov
test
sub
and
std
lods
mov
sub
mov
sbb
les
sahf
outsl
shrb
jno
jecxz
add
xchg
adc
clc
popf
ret
in
xor
xchg
mov
push
mov
lods
sub
sbb
jae
clc
daa
mov
pop
xor
stos
sub
cmp
aad
leave
inc
gs
outsl
cmp
lods
sti
cmpsl
mov
pop
cmp
xorl
sahf
fsubrl
jmp
scas
popf
sahf
mov
sahf
sub
lahf
orb
push
xlat
orb
mov
pop
mov
stc
pop
leave
loopne
push
stc
sub
mov
push
gs
dec
sbb
or
in
gs
jl
mov
stos
and
mov
pop
popf
dec
push
lcall
scas
lods
xor
stc
xor
rclb
inc
sbb
mov
xchg
dec
jnp
dec
lds
stos
ror
data16
xor
dec
sub
dec
inc
jecxz
push
enter
sbb
cli
pop
test
dec
popl
dec
stos
lds
stos
test
popa
roll
push
inc
loop
mov
mov
pop
cmp
ret
xlat
jnp
cmp
cmp
pop
add
pop
gs
jg
xor
adc
and
add
sbb
sbb
adc
push
rorl
mov
push
stc
fisttps
test
es
and
stos
data16
push
repz
jo
add
ror
cmp
xchg
push
adc
xchg
or
and
shlb
sbbl
sahf
sahf
xor
ficoms
es
sub
xchg
lock
mov
cld
adc
test
pop
push
dec
add
cmpb
fdiv
inc
xlat
outsl
push
adc
dec
inc
sbb
icebp
test
cmp
icebp
dec
fiaddl
popa
jmp
sahf
ljmp
lcall
push
xchg
sahf
jae
das
xor
pusha
aad
cmpsb
inc
or
sbb
rcrl
dec
test
xchg
sub
leave
outsl
sub
inc
jmp
push
jg
dec
jecxz
push
cs
mov
mov
cmp
inc
sub
mov
jl
push
les
dec
imul
sti
mov
es
pop
fidivrl
gs
ficomps
in
rsqrtps
int3
cli
dec
filds
sahf
jecxz
in
test
addl
ss
daa
sbb
xor
and
mov
pop
cmp
sbb
fnsave
jp
pop
addr16
fistpll
xor
cli
push
xchg
push
test
pop
lock
jae
cmp
push
sbb
cwtl
shlb
mov
xchg
inc
mov
add
shll
lret
cmp
loop
and
addr16
jg
xor
cli
pop
push
push
test
sahf
pop
mov
push
sahf
popa
rcrl
add
sbb
add
pop
sbbl
push
xchg
mov
pop
add
mov
xchg
pop
add
fisttps
mov
and
cmp
cmp
psubsb
sbbl
push
xchg
mov
pop
add
mov
xchg
pop
shlb
out
stos
mov
pop
lea
pop
cli
pop
pop
aas
clc
sbb
aas
clc
jecxz
sbb
scas
xchg
sahf
cs
cwtl
xchg
scas
nop
xchg
outsl
and
scas
pop
outsl
and
xor
lea
mov
inc
lods
mov
sbb
mov
mov
sbb
test
pop
mov
xor
ljmp
gs
mov
arpl
outsl
push
fs
ficompl
lods
outsb
fcmovnu
or
adc
sbb
sub
sbb
cmc
stos
push
or
mov
stos
dec
out
sbb
sub
stos
lcall
negb
sub
test
test
pop
mov
mov
and
push
repz
xor
pop
ret
sbb
rcrl
mov
or
dec
into
test
ror
jg
daa
or
inc
stc
add
lock
add
mov
sub
ds
add
sbb
inc
cli
pop
pop
aas
cli
inc
xor
inc
cli
pop
pop
aas
clc
add
aas
clc
ds
inc
cli
pop
pop
aas
clc
inc
lret
and
clc
sbbl
mov
add
mov
mov
leave
or
scas
inc
sub
dec
loop
pop
mov
repnz
add
and
ss
lret
sbb
fnstsw
pop
mov
mov
lea
mov
scas
and
mov
push
push
out
mov
cmp
xor
and
inc
adc
pop
pop
mov
mov
and
pop
mov
and
ljmp
les
lahf
or
sub
mul
fimuls
imul
mov
dec
insb
dec
cmp
lea
dec
nop
mov
xchg
mov
xchg
mov
sahf
popa
pop
cld
rcll
mov
rcll
ss
or
sbbl
push
xchg
mov
pop
add
popf
pop
xchg
pop
shrb
orb
lods
sbb
cmp
add
cwtl
popf
jns
icebp
add
mov
jo,pn
cmp
mov
lods
inc
cmp
cmp
sub
mov
pop
sbb
mov
int
enter
pop
popf
cmp
push
cmp
cli
pop
pop
aas
clc
sbb
aas
clc
jecxz
popf
imul
jbe
outsb
mov
cmp
fs
mov
cmp
outsl
push
fcmovnu
inc
dec
lds
inc
ds
inc
popf
data16
mov
movb
mov
stos
cmp
and
dec
popf
and
and
dec
sbbl
das
addb
cmp
outsl
and
in
frstor
popf
push
call
lods
inc
cs
lcall
fcmovu
xor
push
cltd
sahf
jno
mov
lea
push
sahf
dec
sbbb
jecxz
popf
mov
mov
mov
jecxz
popf
inc
jo
cmp
pop
adc
jbe
lcall
xchg
xor
mov
dec
inc
jmp
push
sahf
jo
stc
mov
in
loop
push
xor
mov
mov
dec
mov
je
sbb
mov
sahf
xor
and
lods
xor
add
xor
ret
sbb
rcrl
mov
mov
push
sahf
jo
xchg
mov
in
mov
adc
lea
iret
or
pop
dec
sbbb
jecxz
popf
lcall
jg
or
inc
sbb
adc
or
gs
rolb
push
sub
mov
pop
aam
imul
dec
xchg
pop
mov
mov
xchg
mov
mov
mov
mov
stos
cltd
jne
andb
mov
scas
mov
mov
shl
outsb
mov
mov
sub
mov
and
shrb
inc
lea
mov
jb
enter
popa
fisubrl
dec
test
or
jge
mov
lret
pop
mov
mov
gs
inc
cmp
push
push
sbb
ret
jmp
cld
xchg
pushf
push
in
cmc
add
aaa
scas
mov
mov
in
shlb
or
mov
and
sbb
aaa
mov
jno
and
in
inc
xor
pop
cs
neg
gs
sub
les
lret
sar
xchg
add
add
test
jno
jmp
jge
stos
leave
and
pop
dec
mov
mov
adc
sub
mov
shrl
or
hlt
pusha
jg
lods
mov
mov
xchg
stc
sub
mov
outsb
aaa
stc
stos
cli
loopne
movsb
push
mov
xor
popf
or
out
addb
pop
push
add
in
orl
outsl
idivb
popf
hlt
sahf
sub
and
and
push
cs
cwtl
mov
cld
cmp
out
adc
push
std
mov
mov
mov
std
fldl
icebp
ljmp
jle
arpl
loope
fs
and
stos
and
clc
arpl
add
mov
inc
dec
mov
popf
push
inc
add
add
pushf
in
cvtdq2ps
lock
pop
push
sti
jge
adc
cltd
aaa
testl
add
cld
cmp
mov
into
adc
flds
out
outsb
jg
ffree
xchg
imul
sub
lcall
mov
fcom
repz
jne
fstl
movsb
jno
pop
sbb
sub
fabs
out
pop
das
movsl
jns
ds
and
lcall
adc
pushf
xchg
mov
pop
mov
popf
ss
mov
mov
mov
and
rclb
fcmove
dec
test
cmpsb
ja
add
mov
mov
mov
test
sbb
jns
lock
mov
cmpsl
outsl
testb
jmp
xchg
xchg
sbb
shlb
inc
xor
dec
outsb
cmpsl
sbb
xor
dec
inc
add
xchg
std
cltd
jge
fucom
inc
inc
or
mov
test
cmpsl
jecxz
dec
aam
mov
mov
stos
lock
adc
pop
pop
mov
mov
ljmp
enter
aad
je
pop
cs
dec
bound
shlb
and
mov
sbb
cmp
or
jge
shlb
adc
sbb
aad
and
or
pop
add
in
or
pusha
dec
pop
ret
ret
fdivrl
fiaddl
cltd
sub
or
sbb
es
ja
sub
jge
arpl
test
dec
test
out
es
mov
xor
mov
jge
sub
lock
cli
scas
js
test
add
or
push
call
test
pop
mov
arpl
and
dec
add
out
pop
push
sbb
fisttpll
pop
fs
and
and
push
xchg
lock
mov
pop
cltd
sarl
push
mov
jo
lock
dec
ss
jmp
repnz
data16
or
and
inc
es
adc
ss
jo,pt
and
mov
jo
mov
in
inc
mov
out
imul
xchg
sbb
inc
pushf
out
inc
xor
int3
pop
aaa
jbe
xor
sbb
fisubrs
jl
out
cmp
lcall
scas
jge
mov
mov
push
lock
dec
mov
xchg
xor
pop
mov
cmp
lods
xchg
cmp
mov
movsb
dec
sub
mov
cs
and
mov
sarb
fdivs
rclb
sbb
test
lods
ljmp
xchg
xor
xor
dec
adc
mov
cmpsb
add
ret
into
les
and
lods
inc
out
dec
pop
in
push
pop
sbb
in
push
fidivs
pop
fstl
inc
leave
push
lret
and
imul
sarb
decl
dec
ret
push
xor
mov
xchg
mov
sub
addl
push
mov
cmp
sub
mov
xchg
pop
test
ficompl
scas
pushf
sub
push
pop
dec
mov
sbb
pop
lods
lods
scas
in
les
rol
and
ds
in
xor
scas
cmpsl
movb
adc
pop
pop
sbb
inc
test
push
popf
repz
pop
mov
rolb
jnp
mov
push
mov
mov
lods
sbb
pop
push
loope
addr16
push
lea
dec
leave
mov
mov
movsb
out
lock
mov
mov
dec
jbe
dec
aaa
enter
and
mov
out
sub
mov
outsl
adc
test
negb
cmpsb
leave
data16
sub
push
pop
jmp
or
int3
dec
mov
push
sbb
ss
repz
fdiv
cmpsl
out
jbe
jl
xchg
sbb
xorl
cmp
out
int
or
sar
xor
sbb
mov
gs
adc
pop
cli
fidivl
sbb
in
add
pop
push
inc
cmp
inc
sub
fisubrs
jecxz
enter
loopne
pop
mov
mov
lret
mov
jbe
mov
stc
frstor
in
mov
push
jno
adc
xor
cmp
negb
repnz
mov
movsl
push
aas
mov
test
xor
aam
fldenv
int3
out
rcrb
dec
dec
cs
popf
jp
sbb
das
and
push
dec
adc
repnz
inc
pop
adc
and
popf
test
jecxz
mov
arpl
sbb
adc
divl
cltd
ljmp
movsl
sti
jo
cmc
adc
cmpsl
inc
imulb
and
lds
in
mov
sbb
pop
pop
int3
push
sahf
dec
inc
mov
mov
cmp
mov
dec
mov
shr
rcrb
fsubl
sbb
mov
mov
pop
pop
shrb
gs
mov
jno
mov
fyl2xp1
mov
or
pop
xor
mov
fidivrs
push
dec
and
shrl
cs
movsb
push
rorb
xor
movsb
and
push
xchg
push
test
in
mov
movsb
mov
sub
dec
add
shlb
and
dec
cmpb
mov
lock
xlat
enter
pop
je
in
add
adc
ljmp
mov
jge
sti
mov
mov
out
je
cmc
ljmp
cmpl
lea
in
jecxz
push
sbb
vshufps
idivl
xor
gs
fs
mov
push
lahf
cmp
inc
push
xchg
jle
scas
dec
neg
loope
dec
push
es
pushf
cli
and
adc
inc
fsubp
cmp
cmp
movsl
fistps
cltd
xchg
sbb
push
xchg
daa
lds
jns
aad
gs
repnz
push
xor
pop
popa
sub
xchg
leave
xor
cmp
test
mov
dec
xchg
push
ss
mov
push
loop
lock
xchg
test
inc
sub
ds
stos
mov
insb
in
aad
daa
aad
jns
and
insl
add
push
adc
jb
inc
pop
leave
xchg
test
mov
cltd
fisubrs
jne
push
icebp
xchg
mov
dec
gs
mov
incb
xchg
mov
cmp
mov
dec
es
mov
mov
dec
lret
lahf
inc
mov
dec
sub
xchg
jno
and
sbb
repnz
testl
shr
lcall
stc
xchg
lds
push
lds
push
cmp
sti
and
cli
sub
push
adc
cmp
scas
fmul
dec
bound
push
iret
and
add
cmp
push
sub
int
push
xchg
dec
mov
sbb
sbb
xor
mov
mov
into
jns
mov
out
dec
mov
xchg
enter
pop
mov
repnz
cli
inc
or
xlat
mov
push
arpl
movsl
inc
sti
fnsave
push
stos
xor
fldl
lods
ja
stos
jl
dec
jmp
and
pop
inc
xorl
nop
mov
cltd
and
cmp
test
xor
out
dec
mov
jl
iret
insb
inc
pop
mov
jp
mov
xchg
mov
adc
mov
addr16
jecxz
sbb
fwait
lret
add
inc
insb
clc
xchg
pop
bound
mov
sub
mov
cli
mov
and
mov
dec
int
mov
mov
sbbb
pop
rcll
xor
mov
sub
cltd
push
jae
lahf
gs
inc
pop
pop
xchg
pop
pop
pop
jmp
pop
jle
lea
and
xor
mov
daa
mov
xor
popa
mov
mov
lock
jge
sub
daa
sub
addr16
int
adc
add
cld
add
cwtl
mov
daa
shrb
jb
nop
imul
sub
movsl
mov
stos
and
ficomps
std
in
mov
jnp
out
xor
mov
xor
push
lahf
xchg
mov
hlt
xchg
mov
jle
jecxz
mov
xor
mov
mov
pop
xlat
aas
int3
cmp
add
xor
stc
cli
pop
cmp
cmp
shlb
nop
xor
dec
lret
fwait
push
movsl
mov
mov
sahf
shll
sbb
call
jnp
cltd
jns
xor
jnp
bound
ja
pop
in
out
sbb
dec
int
fwait
je
add
popf
push
pop
adc
repz
iret
sar
inc
push
pop
pop
in
int
inc
sbb
mov
loope
lahf
fldcw
add
aas
pop
jle
cmc
cld
push
and
cld
or
add
sub
jnp
xchg
mov
mov
fdivl
lds
mov
xor
mov
jnp
fildl
mov
xor
sub
mov
lods
lods
or
shll
sbb
lods
call
xlat
popf
lahf
lods
jge
mov
xor
je
mov
std
sbb
add
test
adc
popl
sbb
cmp
fildll
loop
xor
fs
add
aad
std
cwtl
in
out
add
fcom
into
and
dec
fiadds
inc
stos
jno
in
push
sahf
andb
bound
in
mov
outsb
scas
lahf
mov
adc
inc
mov
inc
out
pop
or
xor
addr16
nop
stc
add
and
decb
mov
adc
in
dec
xchg
std
fnstcw
cld
ss
sub
out
cmp
ficomps
sub
add
sub
sbb
test
add
sub
and
jmp
subl
and
and
adc
cmpsb
mov
sbb
pop
inc
cld
lret
push
xchg
cmp
sub
popa
dec
stc
daa
mov
cmpsl
or
orl
adc
aad
mov
sub
lods
data16
in
cli
sub
movsl
mov
lret
out
jnp
mov
or
dec
cmp
cld
mov
sbb
dec
filds
sbb
cli
nop
ja
mulb
insl
fadd
sub
mov
and
sub
jnp
lds
mov
pop
mov
fxch
repz
insl
xchg
sub
std
dec
sub
lret
fcoms
shr
adc
cmp
movsl
test
cmp
dec
and
arpl
cmp
fldt
xchg
int3
jbe
popf
xchg
movsl
movsl
aad
into
iret
mov
gs
cmpsw
aad
jnp
iret
and
std
icebp
sahf
jbe
pop
pop
out
sbb
sahf
fidivrl
fstps
sbbl
lock
fbld
xor
sub
lret
cmpb
mov
and
cmp
mov
or
xchg
in
in
inc
rorb
pop
lds
in
inc
orl
pop
fwait
ja
cmc
pop
sahf
sbb
mov
mov
mov
outsb
pop
fsincos
jl
ret
mov
jl
in
adc
xchg
or
mov
jae
pop
roll
mov
adc
push
pop
sbbl
movsl
mov
in
enter
xchg
mov
sarb
lret
pop
jecxz
sub
mov
in
ljmp
imul
sub
es
push
mov
test
push
or
mov
imul
pop
jnp
mov
push
xchg
push
mov
push
mov
fwait
sub
cmp
xor
mov
es
xor
sahf
shrb
sub
jbe
mov
and
das
mov
fs
movsl
sahf
push
lret
roll
pop
repz
lahf
in
bound
jbe
mov
fcmovnu
inc
dec
in
adc
lds
and
or
jae
outsb
fs
push
cli
dec
push
loope
mov
outsb
cltd
dec
aaa
dec
dec
jl
jecxz
fstpl
in
ret
pusha
sbb
imul
sbb
pop
xchg
fisubs
loope
inc
lods
dec
and
movsl
inc
lods
dec
mov
enter
xor
push
sub
sub
xor
lock
aad
insl
movsl
pusha
cmpsb
or
sbb
into
jbe
out
adc
movl
out
es
rolb
loopne
xchg
cmp
xchg
repnz
dec
cmpsl
add
sub
add
adc
dec
shl
shrl
das
sarb
push
cmovge
loop
push
or
adcl
push
sti
in
loop
push
lods
daa
addr16
adc
cmc
inc
inc
ficomps
push
xor
jnp
das
adc
sbb
push
movsb
mov
cmpsl
dec
pop
into
shrb
pop
xor
mov
mov
sahf
pop
rorb
cld
pop
aaa
int3
push
ds
xlat
and
mov
pop
push
mov
gs
sub
xor
in
and
or
fcoms
pop
pop
and
mov
inc
movsb
inc
ds
xor
js
xor
dec
and
scas
icebp
out
sbb
mov
imul
repz
dec
pop
or
outsl
dec
jbe
push
pop
movsl
rclb
or
stos
stos
inc
mov
or
mov
fcomip
mov
jge
orb
xor
loop
mov
dec
mov
sub
jecxz
call
cmpsl
test
pop
pop
push
cmp
jo
and
imul
icebp
sets
cmp
adc
in
inc
lret
scas
adc
les
addb
std
mov
inc
dec
pop
add
or
or
inc
je
push
subb
loop
dec
into
adcb
sub
push
jecxz
xor
sahf
and
out
xor
out
push
cmpsb
dec
aam
dec
movsl
mov
pop
addl
jge
sahf
sahf
sub
adc
push
loopne
jle
push
cmp
mov
dec
fs
scas
data16
or
cmp
push
jmp
in
sbb
loop
sahf
mov
aad
inc
pop
dec
sub
push
cs
mov
fstl
dec
pop
sbb
dec
mov
mov
cmp
and
cmp
dec
fwait
push
sbb
test
popl
cltd
add
inc
ret
inc
faddl
shlb
int
out
mov
aaa
inc
movsl
mov
pop
push
inc
xchg
push
aad
push
loop
pop
sbb
test
andl
movsl
xchg
mov
dec
push
mov
cld
cli
in
sub
bound
out
cmp
jge
pop
mov
popf
sub
in
jge
jns
sub
sub
fadds
xchg
xchg
repnz
cmp
fwait
jb
push
push
jle
shll
leave
testl
xchg
popf
cmc
bound
cmp
adc
lahf
dec
add
jecxz
bound
flds
clc
or
jg
daa
pop
and
mov
or
dec
data16
fwait
inc
add
push
clc
pop
out
cld
dec
cmp
and
or
push
fsts
cmpsb
pushl
popa
add
ret
je
mov
shll
jle
ss
rcll
mov
sahf
mov
cmp
inc
outsl
xlat
dec
into
and
xchg
inc
dec
imul
inc
push
lds
push
push
xchg
xor
add
mov
scas
mov
mov
cmpsb
xchg
stos
shrb
and
xchg
and
adc
shl
sbb
mov
inc
sub
add
rorb
das
mov
inc
push
sub
push
mov
sahf
xlat
cmpl
orl
shlb
xor
insl
stos
loopne
and
les
and
mov
movsb
inc
dec
add
mov
inc
mov
sub
sbb
imul
inc
pusha
add
add
es
int
fcoml
subb
cmpsl
in
dec
stos
icebp
fiadds
subl
and
lods
jge
dec
lods
inc
inc
call
cmpsb
lret
sahf
or
aas
inc
fwait
xchg
mov
jns
cmpsb
cmp
push
pop
ret
cmp
aaa
lcall
divb
in
loope
jecxz
and
sub
pop
jmp
jmp
dec
dec
in
mov
cmp
insb
movsb
mov
data16
dec
sti
cmp
jnp
adc
pop
ss
xchg
es
negl
add
push
push
or
jo
jbe
or
loope
and
xor
test
mov
xor
in
xor
or
sbb
in
inc
or
pop
clc
stos
jl
loopne
xchg
cwtl
mov
scas
xchg
or
lock
mov
dec
xor
inc
dec
dec
push
mov
cmp
or
dec
xchg
push
hlt
inc
add
push
jle
mov
jae
jno
push
int
addr16
stos
inc
popf
push
fsubrl
faddp
or
add
and
subb
inc
shr
sub
dec
add
subb
mov
test
in
repnz
push
push
cmp
xchg
push
pop
pop
mov
pop
mov
sbb
out
jbe
divb
loop
sub
shll
outsb
repz
insb
xor
cltd
cli
fdivrl
cli
dec
sub
cltd
dec
stc
popf
mov
sub
fldenv
gs
dec
cmp
jnp
gs
dec
or
lds
or
or
dec
scas
mov
out
cld
push
icebp
test
fiadds
out
jae
push
xor
mov
out
fisttpl
imul
xlat
test
call
xchg
xchg
jmp
pop
sub
std
mov
pop
fildl
cmp
fdivrl
cli
xchg
iret
out
mov
jg
jg
fstps
movsl
or
jbe
adc
movsb
notb
cld
addl
sub
fsubp
and
mov
mov
mov
pop
daa
in
ficoms
xchg
adc
mov
xchg
cli
sbb
dec
fists
mov
notb
mov
and
mov
sahf
add
sbb
lea
inc
xor
dec
fisubs
test
cmpsb
sbb
sti
inc
insb
out
in
push
sahf
insb
and
into
sahf
dec
mov
add
inc
add
cmp
adc
and
cld
sub
or
sbb
or
dec
xchg
sbb
cmp
xlat
lcall
push
inc
mov
jp
dec
mov
jo
popf
dec
dec
push
addb
sub
cmp
mov
inc
and
fldl
xchg
add
mov
iret
jns
push
pop
popa
xchg
gs
push
cs
pop
loope
jns
ss
cli
cld
fndisi(8087
mov
xchg
and
and
mov
dec
es
push
aaa
loop
and
ffreep
xor
mov
jns
sbb
sub
data16
pop
cmp
loop
aas
scas
mov
pop
pop
push
test
cmp
repnz
cmp
ret
push
lods
inc
ret
hlt
shlb
mov
stos
lods
sub
stos
mov
into
sub
cmp
inc
sub
rcrl
popa
lods
xor
decb
inc
fwait
cmp
xchg
shrb
mov
push
daa
fabs
push
hlt
pop
imul
inc
sub
cmp
stc
cmc
or
mov
cld
dec
sub
cmp
rcll
idiv
test
dec
popa
xor
adc
rcl
popa
push
xor
xchg
loope
cli
ss
shlb
xor
lods
xor
pop
mov
lods
add
dec
xor
dec
jge,pt
test
aaa
sub
xor
or
xchg
push
stos
mov
ds
leave
push
dec
cmp
xchg
mov
mov
mov
adc
cmp
mov
sub
xchg
adc
cmp
nop
shr
push
xchg
xchg
mov
test
fisubl
push
std
shrb
lcall
clc
fnstsw
inc
xor
inc
fldcw
pusha
inc
nop
inc
test
push
dec
xchg
clc
push
jg
bound
cmc
push
pop
add
xchg
xor
cwtl
out
adc
flds
push
jecxz
xor
jecxz
loope
leave
mov
push
jnp,pn
mov
shl
and
lcall
fstl
cwtl
mov
lret
inc
nop
dec
mov
dec
ss
mov
sahf
xchg
daa
in
jae
repz
pop
leave
rorl
and
adc
sbb
or
faddl
inc
cwtl
push
cwtl
movsb
idiv
imul
pop
jge
fwait
pop
shl
insb
icebp
xor
pop
mov
cld
aam
pop
pop
addl
mov
stos
flds
cmp
mov
pop
mov
les
push
mov
sub
jns
xor
inc
jg
stos
mov
cmpsb
mov
xchg
sbb
pop
mov
sbb
mov
add
lock
mov
xor
cmpsb
mov
andb
jmp
loope
out
movsb
jnp
loope
sbb
mov
cmp
movsb
pop
ret
sbb
xchg
mov
adc
movsb
push
mov
lea
dec
push
movsb
xchg
popf
push
inc
daa
push
dec
stos
xor
dec
mov
or
and
jge
imul
test
push
stc
sbb
sbb
pop
mov
popf
fdivr
icebp
sahf
cmp
fcomps
pop
stc
sahf
cmpsb
jno
inc
movsl
je
rcrb
mov
sbb
push
dec
je
dec
dec
movsb
xchg
mov
mov
dec
aam
je
fistpll
and
or
call
mov
jae
jne
xchg
test
out
cld
fadds
in
movsb
adc
js
xchg
jbe
mov
add
jge
shld
addb
mov
iret
add
xchg
xor
sbb
cmp
add
enter
aam
push
sahf
cmp
fsubs
pop
stc
sahf
and
pop
fstp
xor
std
sar
sub
mov
fiadds
mov
sbb
stc
or
sbb
jecxz
fs
pop
jnp
loopne
addr16
sahf
mov
xchg
pop
popf
dec
push
movsb
xor
sbb
or
jns
movsb
faddl
lret
jle
push
popf
sub
mov
fnstsw
orl
fbld
pop
jne
rorb
xchg
mov
popa
in
negb
shll
mov
mov
jecxz
fisttpl
std
test
aaa
in
mov
in
add
je
ret
mov
fmul
mov
sub
mov
mov
dec
cmp
mov
mov
loopne
xor
rolb
fdivl
mov
imul
shlb
sbb
mov
jle
es
push
call
add
je
mov
adc
mov
and
fwait
icebp
jb
mov
mov
addl
adc
ret
inc
mov
mov
xchg
scas
int3
mov
stos
pushf
fnstcw
adc
cmp
cmp
mov
cmc
cmp
repnz
cmp
mov
jle
jns
dec
cmpsb
subl
mov
or
arpl
add
inc
dec
es
inc
xchg
fidivrl
inc
lret
mov
cmp
jmp
popa
mov
cmp
pop
xchg
jbe
cmpsb
dec
mov
cmp
xchg
xchg
movl
jne
xorl
shlb
neg
add
mov
hlt
pop
add
ss
add
xlat
or
icebp
xor
sub
mov
popf
jle
push
roll
stos
add
lods
or
inc
fmuls
loopne
sbb
pusha
shrb
aas
cmp
je
insl
pop
add
ret
inc
sub
aas
lahf
xchg
loop
sahf
dec
jmp
cmp
sahf
addr16
mov
sbb
scas
pop
popf
mov
cwtl
sbb
cmp
mov
mov
mov
inc
mov
dec
xor
inc
icebp
mov
in
push
call
mov
dec
clc
mov
push
xchg
loop
xor
fs
inc
mov
cmp
mov
jbe
xchg
jbe
pop
das
or
leave
minps
push
inc
mov
pop
and
shll
xchg
sbb
mov
xchg
fisubs
cld
sub
ret
arpl
cmpsb
inc
jle
inc
inc
outsb
out
cltd
andl
jmp
movsb
mov
insl
pop
add
mov
and
sbb
sbb
sbb
sbb
cltd
enter
lock
xchg
andw
mov
mov
mov
mov
in
push
pusha
sub
sahf
xor
dec
xor
cmp
and
shr
rorb
je
add
and
mov
add
stos
mov
out
insl
xor
fdivl
push
lret
jb
or
mov
and
mov
dec
in
sub
adc
mov
test
inc
imul
movsb
pop
push
hlt
lret
insb
hlt
jbe
rorl
sbb
out
aaa
out
fsubs
sub
xchg
mov
mov
lock
cmpsb
sub
jne
std
outsb
dec
pop
sub
iret
mov
sarb
pop
jp
inc
ljmp
mov
dec
xor
clc
sub
call
xor
add
dec
outsb
ja
mov
in
movsb
jo
jae
jmp
pop
cmpsb
int
inc
mov
stc
and
inc
mov
test
inc
arpl
add
xor
pusha
xor
in
cmpb
adc
inc
daa
add
adc
mov
ja
mov
sub
loopne
cmpb
popa
scas
pop
out
mov
test
inc
xchg
cmpsb
aam
cmp
test
push
mov
mov
xor
xor
jnp
push
push
in
sub
pop
test
daa
mov
lock
pop
outsl
outsb
xchg
dec
push
stos
xor
in
and
adc
aas
xor
cmpsl
push
sbb
pop
cmpsl
packuswb
int3
inc
mov
and
adc
pop
jp
out
pushf
aad
mov
add
popf
jne
xor
cmp
ret
cli
jp
cmpsb
in
add
or
out
test
adc
stos
xchg
fists
inc
in
loope
aaa
repz
testl
insl
xor
aaa
jae
or
in
stc
mov
or
stos
push
inc
mov
popf
sbb
cltd
jl
sbb
inc
cmp
cmp
mov
hlt
arpl
push
or
mov
mov
mov
sti
in
xchg
lock
cmp
mov
pop
pop
rcl
int3
repnz
sub
mov
mov
flds
and
dec
insl
or
dec
mov
out
rorl
shlb
call
scas
cwtl
sbb
mov
lods
xchg
inc
lret
fdivr
mov
pop
mov
repnz
push
in
lods
sahf
test
mov
push
popf
cmp
lret
mov
dec
mov
push
cmp
xlat
lcall
mov
sbb
sub
cs
mov
repnz
jb
push
pop
out
inc
ljmp
and
mov
jns
mov
mov
push
inc
in
fstpl
sbb
sarb
xchg
out
jge,pt
mov
xor
mov
rcr
cmp
lret
add
frstor
fidivs
testl
mov
xor
rorl
xchg
and
jle
or
adc
xor
aam
cld
and
xor
push
in
jle
aam
sub
std
adc
push
aaa
fcomp
les
js
mov
jle
sub
add
xchg
or
pop
pop
inc
xor
fs
enter
dec
push
out
mov
pop
pop
add
inc
sbb
div
cmc
addr16
adc
aaa
jo
cs
call
into
test
push
sub
and
test
mov
out
sahf
add
test
aad
mov
xlat
imul
ficoml
jecxz
add
in
or
out
inc
inc
mov
ds
mov
pop
lods
inc
xor
sub
stos
cs
js
aaa
aad
cmp
add
mov
jl
dec
mov
int
inc
pop
ljmp
scas
dec
dec
xorl
cs
out
out
daa
jp
movsl
les
push
fdivp
xchg
cmp
fisttps
mov
mov
pop
mov
inc
adc
adc
cmp
and
dec
ss
sbb
xor
xor
pop
cmp
icebp
xor
sbb
jne
jge
adc
inc
pop
je
in
cs
adc
pop
jp
sbb
xlat
jl
mov
inc
add
push
and
test
fsubl
mov
out
cmpsb
pop
or
sahf
aaa
ds
inc
sahf
out
mov
inc
jns
into
cwtl
out
insl
les
or
fsubrs
faddl
int
pop
jno
sbb
jmp
push
mov
call
or
push
cmp
popa
lcall
lock
mov
add
jge
pop
dec
jp
mov
cmp
shrl
adc
dec
push
dec
adc
orb
mov
jae
add
es
or
and
stc
cmp
cmp
and
push
dec
dec
jmp
test
inc
mov
pop
iret
mov
out
out
lret
inc
enter
shll
stos
xor
and
sbbl
sub
in
stos
push
clc
loopne
jle
sub
mov
push
dec
mov
fsts
test
dec
xchg
out
cltd
xor
jne
dec
mov
inc
mov
test
daa
inc
add
ficomps
cmp
xor
stos
daa
int
and
add
in
push
jbe
add
popf
aaa
fnstenv
in
rcr
jmp
arpl
fsincos
cmp
push
jl
inc
fisubrs
lret
or
dec
mov
and
mov
mov
jns
dec
test
cmp
dec
rorl
imul
sahf
lods
insb
cwtl
jnp
push
aas
jmp
inc
test
cmp
popf
add
adc
pop
cld
or
push
xor
push
sub
stos
sub
pop
adc
fsubrl
push
imul
cmpsl
dec
adc
sbb
icebp
shlb
test
jne
mov
dec
fsubs
xchg
add
das
icebp
add
cwtl
loope
sahf
adc
and
push
fisttpl
js
cmp
mov
cmp
ss
das
sbb
mov
inc
cmp
fcoml
lds
xor
in
xchg
jp
mov
jb
push
negl
rolb
lock
sub
shrl
jmp
sbbl
sub
cmp
ljmp
mov
mov
xchg
push
xor
xchg
repz
andl
jle
push
out
bound
in
mov
jbe
add
add
aaa
jle
xchg
rcr
pop
lahf
xor
xor
xor
jo
inc
sti
rclb
adc
xchg
and
mov
add
lret
push
sub
xchg
mov
xor
cmp
push
sub
mov
cmp
loopne
mov
xchg
ficompl
mov
pushf
add
stos
xchg
imul
adc
and
out
inc
sub
xchg
dec
or
fwait
mov
push
or
cmp
jno
std
sahf
shll
fistl
add
out
loop
xchg
sahf
cmpsl
pusha
push
sbb
test
jle
stc
push
dec
sub
test
mov
jbe
shlb
sub
xchg
call
jns
dec
data16
scas
sub
ljmp
jecxz
mov
jp
sub
mov
ljmp
jge
or
dec
sub
sbb
push
es
sub
mov
mov
pop
imul
and
cmp
pop
fwait
in
pop
movsl
sarb
mov
mov
fsubrl
jb
sbb
in
jge
pop
das
cli
add
popf
sub
aad
inc
fnstcw
mov
pop
in
sbb
loopne
sub
mov
test
and
clc
shlb
jmp
aaa
sahf
int
popf
lahf
jmp
push
push
shlb
aaa
pop
shrl
add
or
idivb
pushf
pop
bound
popf
mov
dec
push
xor
scas
arpl
sbb
xchg
in
mov
sub
push
fsubrl
popf
mov
cmp
stos
lahf
out
call
and
lods
cltd
mov
mov
stos
add
sub
fldt
imul
sbb
daa
ud1
ds
mov
scas
sub
gs
loope
das
jle
dec
push
push
call
mov
mov
inc
push
dec
stos
hlt
das
sbb
mov
cmp
cmp
test
xor
arpl
shr
sbb
pop
sub
mov
nopl
rclb
mov
cmp
mov
sarl
sbb
cmpsb
sbb
xchg
aas
andl
ret
add
hlt
js
add
inc
pop
xor
mov
and
mov
xchg
scas
pop
jae
push
into
add
js
xchg
fucomp
push
ja
push
mov
sub
mov
out
cmpsl
cmpsl
push
sbb
pop
gs
xchg
push
not
mov
cmp
aad
adc
ret
mov
nop
adc
sti
loopne
and
loope
push
cmp
add
es
popa
adc
das
xchg
mov
movsl
insb
jp
scas
lock
jl
aad
outsb
aas
dec
push
cmpsl
sub
in
lea
or
pop
jle
mov
wrmsr
push
in
cs
lcall
sub
push
xchg
cmpsb
mov
jp
or
fcomps
cmp
jne
clc
ss
fs
shlb
cli
aaa
and
mov
mov
in
and
arpl
movsb
aaa
add
jae
push
pusha
fidivrs
mov
ja
xchg
push
aas
lret
fdivrl
cmpsl
outsb
movsb
or
and
xor
dec
xor
testb
lods
mov
outsb
insl
sub
repnz
or
cltd
shlb
shll
dec
mov
pop
xchg
adcb
stos
in
mov
ret
cmpsb
cmp
arpl
negb
movsl
shlb
mov
sub
ljmp
cmp
pop
je
xor
out
mov
pop
add
movl
out
imul
mulb
stos
cmp
jae
dec
stos
aad
sub
adc
sahf
scas
cld
addr16
leave
jp
jno
xor
mov
add
das
mov
fdiv
dec
scas
leave
ret
rcrl
sbb
in
add
lret
xchg
rolb
sub
dec
xor
jl
call
sbb
in
add
subb
std
dec
les
mov
adc
stc
loopne
xor
xchg
xor
sbb
rorl
in
scas
das
jl
ret
pop
pop
loopne
add
mov
test
mov
imul
jge
mov
inc
mov
adc
sub
push
cwtl
adc
sbb
insl
sbb
rcr
dec
pusha
or
sbb
mov
fiaddl
add
xchg
adc
adc
add
jmp
sbb
fisttpll
scas
in
fwait
cs
into
call
xlat
loope
mov
fsts
mov
and
sub
mov
mov
imul
fiadds
pusha
stos
push
sahf
gs
call
sbb
fsubr
push
mov
int
fnstenv
dec
test
ret
push
or
fadd
push
leave
xchg
pop
xor
add
mov
mov
sub
mov
xor
pop
int
xor
cld
mov
int
and
mov
fcomps
pop
arpl
mov
loop
sbb
cmp
push
xchg
hlt
fwait
mov
dec
lods
insl
xchg
jmp
jp
cld
or
add
dec
mov
xor
je
sbb
test
aad
and
mov
cmp
enter
addr16
add
push
and
pop
add
cmp
aaa
aad
sbb
sub
or
in
jnp
fs
mulb
mov
or
loopne
fscale
cmp
mov
inc
rcrb
sub
jns
xor
jno
flds
adc
fwait
cmpl
icebp
rcrb
dec
popf
inc
int
xor
xor
loope
mov
sbb
icebp
test
rcrb
inc
enter
cmpb
sbb
movsl
rcrl
or
xor
xor
repnz
cmp
sub
jo
into
sar
mov
push
fwait
js
mov
adc
mov
mov
repz
fwait
push
cmp
and
cmp
add
inc
fistpl
jo
lret
repz
mov
movsl
subb
and
pusha
shlb
mov
add
mov
push
xchg
mov
lret
add
pusha
in
sub
lds
ljmp
ljmp
add
mov
movl
push
pusha
push
cmpsb
ljmp
sub
push
pusha
in
stos
ljmp
inc
sub
ljmp
and
sub
shrb
sahf
sub
jle
fs
lods
cmpsl
fidivrl
into
mov
adc
or
and
pusha
jg
shr
scas
and
cmp
and
lea
sarb
and
lea
test
std
mov
and
xor
aam
scas
gs
xor
dec
and
enter
xor
shll
mov
pop
sarb
test
ljmp
insl
mov
xchg
out
rcrb
pop
mov
dec
into
pusha
lock
std
add
pusha
inc
and
ljmp
cmp
add
stos
test
ret
sbb
add
cmp
push
push
pusha
push
mov
clc
mov
in
xor
stos
and
cmp
mov
mov
ljmp
cmp
mov
add
lea
std
mov
lea
mov
and
mov
adc
pusha
shll
lea
test
std
add
xor
test
clc
das
and
lahf
ja
mov
in
cmc
xchg
pusha
mov
ljmp
pusha
push
ss
cmp
mov
andb
sbb
push
test
dec
lods
pop
mov
adc
cmc
push
pusha
cmpsb
gs
pusha
sub
and
stos
stos
dec
mov
cwtl
cmp
std
test
inc
cwtl
jle
iret
movb
pop
test
or
jmp
add
mov
mov
lret
pusha
cmp
rcrb
and
mov
ss
jl
add
int
cltd
mov
mov
mov
push
pop
cli
inc
leave
xor
test
mov
adc
inc
xchg
mov
mov
inc
jbe
incb
jg
jnp
movsb
xchg
and
add
bound
mov
loopne
inc
out
out
jae
inc
mov
cmp
cmp
xor
and
leave
sbb
loope
cmp
push
enter
popf
push
or
mov
sub
xchg
pop
loop
and
popa
movsl
push
out
shlb
dec
and
sub
xor
dec
fdivp
inc
in
es
and
test
ja
sub
insb
and
jmp
mov
mov
aad
inc
dec
push
mov
adc
jmp
pushf
mov
mov
mov
lock
sahf
and
cmp
loopne
ret
cmp
add
pop
dec
into
sub
dec
mov
sub
imull
mov
into
scas
fadd
xor
pusha
daa
shrl
sti
popl
pop
sub
inc
pop
add
fsub
and
ret
or
and
fsubr
in
scas
push
imulb
pop
inc
cmpsb
gs
popf
int
mov
and
add
imul
aad
mov
aad
and
out
cmp
decb
popf
and
push
cmpsl
daa
mov
mov
xchg
movsl
cmp
mov
lret
daa
fst
jmp
std
push
jne
lock
leave
jle
cmp
push
add
out
mov
cwtl
jg
and
sti
jle
clc
sbb
mov
inc
das
lods
add
push
xchg
inc
imul
subb
imul
add
pop
std
adc
pop
andl
ss
pop
push
xor
movsb
xchg
sbb
scas
mov
push
and
stos
testl
cmpsl
mov
int3
mov
fcomp
imul
lcall
adc
xchg
sbb
cli
stos
xor
xchg
and
rcrb
inc
loopne
shll
out
pop
push
xchg
sti
or
adc
mov
nop
cltd
mov
dec
dec
mov
xchg
sbb
shll
and
jle
popf
push
popa
mov
stos
sbb
dec
pop
dec
mov
dec
sti
inc
mov
imul
rorb
inc
mov
jecxz
xor
cld
leave
xor
mov
int
stos
das
inc
lcall
in
mov
add
shll
call
mov
adc
shlb
aam
jl
daa
fs
mov
mov
pop
sub
outsl
push
xorl
out
add
xor
cmp
xchg
cmp
sbb
dec
cli
mov
rolb
pop
ljmp
ds
pusha
mov
gs
pop
std
mov
dec
dec
stos
xor
mov
or
mov
pop
jno
dec
leave
and
xor
mov
and
add
mov
inc
jmp
das
xchg
dec
add
push
es
lcall
mov
std
xchg
mov
cmp
jo
jbe
mov
mov
sbb
arpl
mov
mov
and
xchg
int
cmp
dec
das
out
out
dec
mov
cltd
repnz
mov
xor
data16
ror
mov
imul
aas
xchg
mov
ss
clc
mov
jge
outsb
sahf
inc
scas
mov
jl
es
cmp
mov
xchg
push
in
and
out
repnz
fdivrs
ds
xchg
jle
sbb
shlb
sahf
popf
test
ja
cmp
lds
cmpsb
mov
cmpsl
fnstenv
iret
hlt
in
xchg
push
out
daa
mov
leave
push
imul
push
mov
adc
mov
clc
popf
fdivrl
jg
lret
leave
cmp
xchg
xchg
fdivs
pop
push
xchg
inc
xor
xchg
aas
gs
out
repnz
daa
hlt
xchg
rcl
sub
out
shr
cmpl
mov
idivb
xchg
jg
daa
in
mov
in
mov
mov
pop
imul
cmpsb
mov
aam
loope
test
and
push
scas
popf
sbb
sahf
test
xchg
dec
push
xlat
and
sub
sub
jl
lea
dec
and
ss
mov
add
or
rorb
add
pop
pop
mov
fnsave
test
sahf
xor
cmp
xchg
sahf
out
or
add
jge
sub
fnsave
lods
mov
mov
scas
xlat
jbe
aaa
mov
bound
push
jl
sub
push
dec
in
sub
aaa
cmp
cmpsl
jg
stos
daa
sub
sti
rorb
cmp
ja
mov
cmp
fisubrs
int3
cmp
rcrl
xor
dec
mov
les
xchg
xchg
movsl
xor
cmp
mov
push
push
jge
fdivrs
or
or
jae
inc
sub
inc
push
int
inc
dec
mov
pop
into
pusha
lret
xchg
cmpsb
fildll
fnstsw
lods
sub
mov
mov
mov
fdivrl
cmp
xchg
sub
dec
loopne
mov
mov
out
pusha
mov
sti
add
ljmp
pop
stc
mov
insb
daa
loop
mov
mov
shlb
push
stos
dec
and
jl
das
cmp
push
jecxz
jbe
lods
inc
mov
les
aad
gs
xchg
sti
mov
cld
je
jae
push
jg
adc
enter
inc
stos
and
jge
sub
add
dec
mov
aas
scas
xlat
xchg
imul
mov
xchg
sub
dec
dec
cmp
add
dec
ss
in
adc
rolb
and
cmpsb
faddp
cmp
scas
fists
cld
lcall
mov
pop
in
in
push
in
pop
and
jo
mov
cmp
cmpsb
shr
push
cld
xchg
fnstcw
mov
bound
pop
sub
bound
popa
mov
mov
xchg
lret
push
or
inc
fidivrl
gs
or
sub
in
cmp
mov
mov
cwtl
aaa
sub
sbb
movsb
push
jnp
leave
mov
pop
sub
stos
cmpsb
sbb
in
add
or
gs
cmp
shlb
cld
jbe
addl
push
push
xor
repnz
push
lahf
mov
clc
jecxz
dec
stos
lods
dec
add
mov
jmp
loope
dec
or
test
ja
push
xchg
dec
pop
xchg
push
stos
sbb
cmpsb
in
inc
inc
data16
dec
mov
inc
divps
xor
lods
lods
sbb
sub
cld
mov
lea
adc
or
inc
jns
jae
sub
in
enter
stos
pop
mov
pop
push
scas
loop
popa
lods
lods
sub
cmp
inc
das
fmul
xor
int
sub
pop
mov
mov
jnp
dec
lret
int3
sbb
inc
cld
sarl
mov
xchg
jl
loop
cs
js
ds
xor
cmpsb
pop
loope
rol
add
arpl
jno
fstl
push
jle
cmp
mov
and
jbe
xlat
push
dec
in
lret
movsl
sahf
mov
push
dec
cmp
mov
jb
popa
ljmp
popf
push
dec
test
scas
out
outsl
popf
xor
mov
aaa
inc
cmpsb
push
jae
mov
pop
loop
into
pop
mov
jge
inc
xchg
daa
pop
in
int
sub
pop
pop
test
pop
xor
mov
dec
ss
adc
rorb
jnp
or
andb
sbb
cs
push
xor
movsb
push
roll
ret
ljmp
xchg
cs
sahf
mov
fidivrs
cmp
mov
mov
fisttps
pop
or
xchg
pop
sub
and
movsl
fimuls
loopne
cmp
dec
aaa
idivb
cmpsb
fidivrs
pop
sub
mov
or
mov
dec
fs
int3
aaa
and
test
loopne
jmp
sbb
pop
ss
sub
pop
push
addb
loopne
repnz
fildl
cmp
cmp
jge
in
in
lcall
dec
call
cmp
jmp
cmp
cmp
jne
xor
in
inc
hlt
mov
xchg
mov
iret
mov
stos
std
pop
cmp
pop
push
in
aaa
push
sbbl
daa
aaa
shll
sbb
testb
imul
mov
xor
bound
pop
sarb
sbb
fdivs
aas
cmp
push
arpl
push
mov
mov
repz
scas
rcrl
jg
popa
hlt
mov
sub
pop
jne
stos
fidivs
sbb
outsl
xchg
popa
or
mov
cmp
jl
jecxz
pop
mov
sub
sbb
movsb
mov
pop
mov
cmp
cmp
push
add
mov
mov
lods
loope
push
sub
int
js
and
sub
loopne
fcmovnb
mov
inc
sahf
out
sahf
xor
and
or
cmp
xchg
cmp
xchg
sub
lods
nop
sub
add
mov
pop
shll
mov
fsub
mov
es
sub
mov
or
sub
insl
in
shrb
js
mov
mov
btsl
into
ljmp
cmp
imul
mov
call
cwtl
jg
insl
lcall
sahf
pop
loopne
into
and
pop
and
stos
inc
sub
and
shr
pop
inc
hlt
leave
pop
mov
pop
mov
xor
mov
xor
out
xor
jge
pusha
inc
mov
lds
test
inc
mov
lods
and
in
lock
popa
mov
mov
mov
inc
popa
aaa
fmuls
test
pushw
in
push
lock
lcall
mov
inc
xor
in
lahf
sbb
in
popa
sub
out
xor
sar
xor
jno
jp
ficoml
lds
push
cmp
pop
mov
pop
mov
add
andl
aaa
push
jns
stos
stc
lods
sbb
push
movb
aam
fnstsw
loop
aaa
mov
sahf
cmp
pop
fnsave
dec
arpl
aaa
pop
shl
cltd
inc
dec
mov
test
xchg
mov
cmp
inc
mov
addr16
push
push
dec
sub
icebp
repnz
inc
xchg
pop
movsl
idiv
xorl
and
in
aaa
sbb
mov
and
cmp
arpl
pop
xor
mov
sub
mov
leave
dec
push
push
fidivs
xchg
lock
cmp
test
mov
cli
int3
std
mov
js
and
cmp
xchg
sahf
popf
cmp
mov
lods
pop
in
lret
mov
mov
fdivrp
stos
movsb
test
inc
xor
xchg
mov
dec
popf
rcrl
test
into
mov
push
stos
cmp
mov
mov
in
rol
mov
push
dec
imul
mov
movsl
push
pop
push
ss
icebp
xor
iret
pop
fisubs
xor
into
fwait
and
pushf
test
out
loope
jo
sahf
in
or
jge
dec
jbe
testl
mov
fcomps
mov
insb
fxch
sahf
call
push
sub
cmpsb
outsb
in
fadd
mov
in
cmp
flds
push
cltd
addr16
mov
mov
hlt
aaa
pushf
xchg
sahf
imul
mov
add
clc
enter
fcmovb
mov
pushf
mov
cmp
push
ljmp
mov
mov
aad
fstl
lock
jg
je
dec
in
push
pop
fisttpl
loope
inc
pop
xor
cld
sbb
pop
pop
cmp
mov
pusha
mov
mov
orl
cmp
sarl
shlb
frstor
popf
ret
sbb
testl
in
xchg
popf
fmuls
mov
xor
mov
cwtl
mov
ficompl
push
sub
lods
fs
pop
out
push
sub
negl
adc
into
popf
push
mov
leave
movsl
mov
inc
inc
cmpsb
mov
push
pop
loopne
daa
ret
inc
sahf
push
dec
enter
mov
cld
mov
rcl
jl
cltd
inc
sbb
add
fwait
scas
cmp
pop
sahf
jmp
pop
inc
mov
push
out
sub
std
es
mov
fldl
mov
xchg
mov
adc
cli
jecxz
cltd
into
mov
stos
dec
scas
test
add
adc
sbb
adc
mov
xor
das
cld
sub
inc
xor
push
mov
in
pop
mov
aas
rcll
xchg
hlt
daa
mov
into
inc
fcompl
mov
dec
lret
in
pushf
rcr
ficompl
dec
cmp
jmp
xchg
xor
sbb
loopne
mov
xchg
inc
hlt
mov
out
adc
sbb
mov
mov
repnz
mov
in
std
das
out
fsubrp
pop
sbb
insb
hlt
dec
aad
and
pop
ret
fcompl
xchg
movsb
mov
xchg
pushf
add
add
das
inc
pop
decl
sbb
das
pop
imul
pop
hlt
aaa
lds
cld
movsl
and
std
les
adc
or
in
mov
hlt
xor
cmpsb
push
push
jge
into
dec
lods
mov
loopne
pop
sub
testl
mov
loopne
adc
mov
cmpsb
mov
in
inc
push
mov
std
sbb
mull
push
popf
xor
ss
push
bnd
dec
fidivs
inc
ljmp
pop
imul
pop
call
nop
pusha
sahf
ljmp
mov
xor
dec
jecxz
xor
mov
loope
and
xchg
pop
cmp
mov
mov
daa
xchg
push
and
sti
xor
sbb
or
leave
test
in
in
mov
in
push
mov
mov
shlb
int3
adc
jecxz
lret
mov
inc
in
outsl
std
mov
inc
divb
adc
ss
sti
int3
and
sbb
pop
ss
sbb
in
in
dec
inc
arpl
sub
or
aad
sub
test
sub
popf
sbb
push
mov
fists
pop
xchg
enter
adc
cltd
sbb
dec
test
int3
xor
arpl
jo
add
subl
or
xor
stos
fidivrs
fdivrs
cmpsb
pop
jno
enter
aad
pop
mov
mov
mov
pop
and
sub
pop
jnp,pt
addl
mov
push
dec
jb
sub
cmc
xchg
sbb
xchg
aad
pop
stos
shll
xor
rcrl
stos
rcrl
test
out
adc
in
sahf
fbstp
cmc
out
xchg
mov
dec
sbb
or
out
mov
jnp
cltd
scas
jg
mov
add
and
and
lock
mov
cmpsb
sbb
add
mov
xor
std
inc
ret
cld
dec
fsubrl
and
push
cmp
das
push
add
in
cmpsb
mov
mov
inc
or
out
xchg
adc
stc
insl
xchg
aas
sbb
cli
jg
rclb
sarb
cmpsb
and
mov
in
mov
add
push
mov
and
mov
mov
push
sub
shrb
mov
sub
loop
mov
add
shlb
xor
dec
dec
jecxz
xchg
mov
mov
lods
sbb
out
shl
repnz
dec
xchg
in
adc
out
data16
xlat
fdivrs
push
jno
inc
push
cld
sbb
scas
fnstsw
inc
dec
pusha
fnstenv
sub
cmpsl
out
jle
pop
cs
and
push
cld
pop
push
and
in
loope
hlt
in
mov
clc
inc
inc
dec
arpl
and
mov
cmpsb
popf
cmpl
pusha
loop
dec
jbe
test
or
cmp
jge
ret
scas
inc
push
cmp
clc
inc
push
dec
mov
sahf
test
popf
fsubrl
jno
mov
enter
inc
xlat
lahf
ss
sub
sahf
mov
jbe
jl
push
or
push
mov
and
pop
sahf
mov
decb
xor
adc
test
jnp
cmpsl
sub
lret
push
mov
dec
lods
outsb
push
pop
mov
in
ret
into
cmpl
cmp
jecxz
mov
xor
test
xor
adc
aaa
das
dec
xchg
imul
mov
and
sub
xchg
scas
xchg
orl
inc
sub
pop
xchg
sbb
negb
add
fs
xchg
xor
hlt
ret
cmp
mov
shrb
mov
mov
push
jge
stos
push
dec
push
or
and
add
mov
dec
lods
inc
xor
and
stos
shrb
sub
leave
stos
andl
sbb
mov
test
push
sub
ret
sbb
in
imul
cmpsb
jp
int
fs
push
in
and
aaa
inc
xchg
leave
test
jbe
subb
dec
and
in
mov
inc
cli
adc
mov
sub
sbb
cmp
out
fptan
and
sub
scas
and
mov
testb
pop
jmp
xchg
sahf
loopne
movsb
pop
div
lahf
push
arpl
int3
jne
xor
imul
cmp
adc
scas
jmp
push
cmp
add
out
mov
aad
out
jbe
fstpl
cmpsl
test
cmc
daa
dec
std
dec
and
dec
cmc
cmpl
cli
inc
insl
sahf
adc
test
cld
add
fmull
sub
mov
push
mov
es
mov
fisubrs
movsl
std
sub
fbld
lahf
sbb
pop
and
push
sbb
hlt
pop
adcl
push
xlat
pop
xor
push
sub
fiadds
daa
pop
pop
xor
cld
mov
in
sub
or
insl
aas
ss
lret
xchg
dec
lods
ret
insl
pop
std
nop
dec
pop
dec
inc
add
adc
andb
out
pop
push
pop
out
jae
mov
pusha
lahf
xchg
int3
fbstp
mov
mov
mov
enter
pop
dec
mov
xor
jge
dec
pop
out
push
ret
lods
loopne
xor
fmul
sub
clc
inc
xor
jne
sahf
xchg
popf
add
push
mov
inc
push
jle
and
scas
mov
or
and
cs
das
jne
incl
out
lahf
or
jl
mov
jge
sub
mov
data16
cmpsl
jmp
push
pop
hlt
cli
jge
int3
xlat
sub
inc
dec
outsb
aad
rclb
out
loopne
and
mov
and
mov
push
inc
jl
mov
repnz
mov
movsb
pop
shll
adc
jnp
pop
mov
decl
mov
mov
sub
jle
sbb
mov
repz
stos
call
movsb
mov
push
cs
mov
cmp
cmp
cmp
or
push
les
xor
push
mov
icebp
pop
mov
pop
aaa
cmp
enter
imulb
cld
pushf
sub
test
fcompl
lret
lcall
pop
stc
call
and
fnstenv
push
lea
cmp
mov
cli
mov
mov
fwait
shlb
cmp
addr16
mov
dec
mov
loop
dec
cmp
pop
mov
inc
and
mov
add
movsb
scas
cs
sub
push
jmp
popa
dec
sub
loop
mov
mov
and
push
pop
sub
scas
pop
jmp
mov
sub
dec
dec
filds
dec
retw
sbb
mov
sbb
mov
test
xchg
jl
cmp
sbb
dec
push
jo
lcall
rep
inc
scas
int
movsb
xchg
pop
adc
subb
ret
mov
push
mov
aad
and
pop
mov
jb
sbb
jnp
xchg
fimuls
mov
jp
lds
or
pusha
mov
and
mov
rorb
xchg
xlat
cmp
adc
inc
pop
mov
push
orl
es
mov
sbb
call
out
adc
mov
and
adc
jnp
and
andl
outsl
std
sub
int
mov
mov
iret
push
dec
inc
mov
movb
data16
popf
movsl
andl
lods
pop
mov
mov
jnp
inc
sbb
inc
add
pop
in
test
sub
popf
dec
icebp
test
fs
jnp
mov
cmpsb
push
aas
jge
sub
sbb
xor
fiaddl
andb
scas
sbbb
popa
ret
and
in
dec
cmp
mov
xchg
frstor
ljmp
loopne
adc
mov
mov
xchg
call
shrb
aaa
test
in
cmp
cmpsl
dec
call
shlb
leave
lahf
mov
dec
xor
pop
inc
cmp
mov
loopne
aam
jg
fidivs
enter
cld
int
int
addb
sub
pop
in
or
xchg
sub
es
pop
mov
sub
out
rorb
ss
shlb
int
cmpsb
loopne
mov
or
adc
fsub
sbb
enter
inc
shlb
pop
ds
mov
add
jge
add
and
pop
cmc
ret
cs
out
or
out
out
repz
add
jns
sbb
std
in
jns
jle
popf
pop
pop
cmpsb
sbb
addr16
orb
hlt
flds
mov
pop
and
mov
repnz
in
repz
mov
out
negl
and
les
dec
movsl
jmp
pop
sbb
dec
sbb
sahf
fadds
xchg
xchg
int
frstor
add
sub
hlt
pop
xor
sbbl
cli
sbb
sub
les
jnp
dec
sbb
movsb
aas
jmp
or
mov
fadds
push
rolb
dec
rorl
xor
lret
add
cmp
rolb
jg
jbe
and
mov
jecxz
dec
std
jne
adc
pop
adc
inc
jno
fdivrl
add
sub
push
scas
popf
stos
cmpsb
outsb
dec
sbb
xor
idiv
dec
sbb
aam
mov
mov
xor
mov
fcoms
repz
das
or
movsb
fsts
out
sbb
push
xor
mov
jle
aaa
adc
ret
jecxz
leave
cmp
adc
mov
sbb
sahf
sub
rcrb
sahf
mov
icebp
jl
add
sbb
push
stos
xor
loopne
fadd
dec
sbb
sbb
mov
and
jns
jecxz
nop
out
loopne
xor
pop
movsl
push
iret
movsb
xor
negl
jns
jae
cmp
rolb
scas
inc
mov
mov
jge
push
xchg
add
sub
and
push
jnp
add
lea
subb
cs
xlat
mov
popf
and
mov
jecxz
jo
mov
sbb
ljmp
xor
dec
and
fisttpll
inc
xchg
sti
in
cmp
cli
or
dec
xchg
mov
sar
push
push
fmull
mov
into
ss
adc
pop
mov
mov
ljmp
push
ja
lock
push
inc
cs
pop
mov
mov
stos
lods
sub
inc
xor
shll
xor
out
mov
repz
cmp
and
lahf
mov
pop
aas
scas
in
xchg
adc
fsubrs
cmp
es
xor
mov
add
push
and
mov
push
loopne
lds
inc
jl
loopne
sbb
sbb
mov
push
xorb
cs
popf
cmp
mov
add
add
lea
mov
call
jb
rolb
adc
lods
test
cli
adc
xor
icebp
inc
fidivrl
jne
adc
outsl
inc
jmp
popa
cmp
popf
hlt
loopne
clc
sahf
mov
das
mov
mov
xchg
sub
push
lods
mov
pop
imul
and
mov
inc
jno
or
dec
or
rcrb
ror
sahf
mov
add
xor
inc
pop
rcrl
dec
lods
icebp
jp
inc
pop
movsb
shlb
xor
es
cmp
mov
int
leave
stos
cmp
mov
les
scas
movsb
jp
daa
mov
dec
loop
mov
pop
cmp
adc
shl
jl
mov
jnp
xchg
inc
inc
mov
fsub
jge
dec
lea
fmull
mov
pushf
mov
mov
xchg
jnp
or
shr
jl
mov
pop
aad
dec
movsl
sub
int
mov
out
jno
inc
stos
jecxz
std
mov
stc
inc
add
ficompl
mov
and
lahf
cs
fnstsw
les
mov
cmpsb
cmpsb
mov
mov
sahf
cmpsb
pusha
mov
out
movsl
inc
push
cs
dec
call
xchg
and
cmp
insb
shlb
pusha
jl
mov
jg
dec
cmpsb
mov
sbb
mov
ss
mov
xor
mov
add
shlb
mov
xor
mov
xor
add
shrb
scas
mov
sub
sbb
shrb
stos
mov
sub
sbb
shlb
push
mov
nop
mov
sbb
std
cmc
sahf
movsb
fimull
pop
push
loopne
lds
mov
sub
inc
sbb
and
rolb
fisubrl
enter
sub
jo
add
sahf
mov
sarl
scas
add
movsl
mov
dec
mov
xchg
imul
sbb
push
push
out
in
and
and
mov
cwtl
xor
sbb
jge
ja
out
ret
mov
inc
and
cmpl
mov
daa
jp
shrl
cltd
in
lods
jle
dec
out
aas
cmp
pop
pop
std
shll
mov
dec
addb
les
push
xlat
pop
pop
push
xchg
fnstcw
out
nop
daa
xor
pop
xchg
repnz
das
out
fisttpll
inc
mov
push
cmpsl
dec
and
pop
pop
sti
xchg
shlb
fstpl
hlt
mov
stos
int3
int
in
jmp
and
lods
stos
push
testl
add
into
and
sub
rorb
mov
ds
movsl
bound
scas
sahf
dec
pop
mov
xlat
test
lock
pop
sahf
sbb
xchg
fisubrl
sub
push
cmpb
dec
xor
jp
bound
xlat
test
cld
mov
and
mov
loopne
lret
pop
jp
mov
inc
ss
loope
mov
aad
into
nop
scas
mov
dec
in
in
cmp
cmc
mov
movsl
and
inc
sbb
and
lret
test
cmp
outsl
push
xor
fidivs
and
xor
add
xor
cmp
mov
pop
out
cs
ret
movsb
incl
scas
and
test
mov
sub
bound
sub
in
add
xchg
and
shll
sub
sti
es
out
in
mov
imul
stos
call
sub
lods
add
xor
call
xor
mov
pop
dec
push
mov
add
mov
mov
xor
sub
jmp
std
cltd
js
scas
test
push
lods
and
call
loop
scas
lcall
xor
cmp
fadd
mov
mov
mov
test
flds
cmp
in
mov
dec
fs
cltd
mov
stos
push
sub
ds
ret
lods
sub
mov
cs
mov
xor
mov
xor
mov
xor
add
xor
call
inc
lods
imul
insl
iret
add
movsl
loop
sub
cmpb
inc
adc
adc
mov
dec
cs
cmpsl
fdivp
out
in
adc
and
sub
fistpll
addr16
insb
cmc
cmpl
push
inc
bound
dec
shlb
mov
stos
xor
dec
cli
mov
xor
lahf
jno
imul
sahf
mov
xor
lods
int
xlat
fidivrs
test
movsl
mov
jo
ficoms
mov
xchg
inc
test
popa
ss
or
mov
xchg
imul
adc
test
sti
push
fwait
jecxz
es
loop
mov
mov
movsl
mov
mov
lret
scas
ret
inc
xor
xchg
or
xchg
fcmove
es
les
add
shlb
mov
js
jae
adc
mov
pushaw
jp
push
sub
push
rcrl
and
inc
xor
into
xorl
pop
mov
xchg
loopne
inc
scas
xchg
sahf
mov
mov
je
or
adc
cmp
adc
les
lret
das
lods
xchg
cmp
popf
xchg
cmc
pop
inc
push
enter
fiadds
jbe
stos
lods
push
out
dec
sahf
lods
loopne
dec
mov
pop
pop
arpl
sahf
push
pusha
cmp
inc
cmp
imul
repz
or
shrl
enter
scas
mov
inc
std
mov
inc
lods
jno
addr16
jmp
inc
out
dec
rol
add
pop
dec
dec
lods
cld
mov
sub
add
or
dec
mov
movsb
xor
mov
aas
inc
xchg
out
cs
rorl
out
mov
pop
in
jae
in
dec
movsb
xchg
and
cmc
popf
or
in
scas
loop
leave
jmp
cli
fisubs
rorb
shlb
js
aam
add
xor
sub
xchg
add
aas
mov
mov
cld
dec
sahf
pop
test
sbb
push
jae
jnp
xor
in
in
push
iret
pop
xor
and
pop
mov
es
sub
push
jae
mov
mov
cltd
shrb
cmp
sub
inc
in
dec
fisubl
mov
jl
fwait
jg
adcb
out
sub
and
es
pop
ret
les
call
cmpsl
mov
out
push
movb
mov
mov
ds
and
jb
jnp
ja
imul
adc
shl
lds
aad
and
add
xor
repz
add
jbe
jle
ret
mov
lcall
jecxz
test
mov
mov
rclb
cmp
push
xchg
stc
insb
les
stos
inc
sbb
mov
mov
inc
aaa
mov
mov
push
and
stos
inc
add
pop
test
sbb
cmp
test
mov
add
aad
xchg
fstps
xchg
shl
xchg
jo
push
fcmovu
sbb
fwait
out
repz
xchg
and
mov
or
stc
pop
aam
scas
xorl
mov
xor
and
inc
sarl
mov
xor
adc
mov
jo
cli
inc
dec
pop
pop
xchg
jle
dec
mov
xchg
jo
fwait
out
out
in
int
xor
mov
movsl
add
loopne
lea
pusha
add
aas
dec
cmpsb
cltd
sbb
out
in
mov
dec
mov
cmpl
shll
xchg
cmp
sbb
inc
pop
dec
pextrw
pop
cmpsl
scas
xor
test
loope
xchg
jmp
mov
sub
hlt
pop
pop
xchg
shrl
mov
cmp
jecxz
xchg
arpl
leave
xor
mov
xorb
je
out
mov
jl
pop
std
sbb
adc
push
mov
jmp
sti
aas
cmpsl
lds
sub
jecxz
sub
inc
pop
out
sub
inc
lret
inc
ljmp
sbb
jmp
push
push
lahf
dec
adc
std
fld
jl
lahf
jb
dec
pop
incl
push
cs
scas
das
int
test
mov
lods
or
loop
clc
inc
test
popf
std
mov
clc
das
mov
addb
mov
xchg
sahf
into
xchg
out
mov
and
or
and
jle
jb
adc
movsb
fstpt
mov
stos
push
std
out
mov
test
sbb
or
push
jl
fnsave
xorl
mov
lock
xchg
loop
jbe
in
jl
mov
cmp
sub
cmp
add
mov
aaa
add
test
xor
mov
lahf
or
pop
cmp
or
or
dec
dec
outsl
pusha
sbb
mov
add
stos
sahf
add
cmpl
xchg
out
popa
sub
cltd
insb
bound
in
dec
mov
jge
sahf
add
mov
ljmp
lock
mov
and
xor
ds
mov
mov
popf
ljmp
add
push
aaa
cld
cmc
push
sub
int3
fst
movsl
pop
ljmp
pusha
mov
call
test
push
shrl
lds
fsub
adc
mov
sub
lods
xchg
lret
das
cmpsb
add
push
scas
xor
xor
jb
and
mov
pop
int3
das
dec
stc
aad
push
aad
mov
fiaddl
pop
or
add
in
xlat
cmp
mov
mov
aaa
loope
aaa
dec
sbb
mov
imul
js
mov
pop
add
mov
stos
ljmp
lods
aad
xor
outsb
es
mov
pop
mov
or
lods
aaa
outsl
jl
mov
repnz
mov
xor
xor
mov
inc
mov
insb
push
dec
shll
cmp
lock
aaa
mov
dec
dec
add
lock
dec
xor
mov
add
mov
outsb
jbe
insl
lret
mov
jb
cmp
ss
stos
mov
sub
lds
cltd
mov
cli
xchg
cmc
and
xor
cmp
or
cli
dec
xchg
mov
into
aaa
xor
fnstsw
ds
adc
add
lret
pop
imul
fs
cmp
pop
mov
inc
xor
jecxz
sub
lcall
rclb
idivl
and
lock
outsb
xchg
loop
lods
push
xchg
ficoml
or
mov
push
dec
and
insl
test
notl
xchg
pop
add
cli
xchg
push
add
pop
in
push
pop
xchg
pusha
push
icebp
mov
mov
and
xor
jl
into
aam
xor
and
pop
cmc
pop
cmp
cltd
ss
dec
test
jo
add
xlat
and
push
mov
bound
popa
aad
idiv
pop
int
out
mov
push
mov
mov
int
dec
dec
in
mov
sgdtl
aam
xchg
cwtl
jl
pop
adc
sbb
jae
mov
loop
sbb
fisubs
outsl
scas
popa
outsb
outsl
pop
testl
lds
aad
and
das
sbb
sub
pop
fstpt
arpl
outsb
fldenv
loope
hlt
sahf
mov
mov
inc
xchg
push
xor
roll
bound
lds
cmp
shlb
out
jo
sahf
aam
inc
clc
std
jb
pop
jecxz,pn
out
xor
mov
pop
orl
pop
imul
cmp
pop
fsubl
leave
push
sbb
leave
fcomi
jle
jne
sub
and
aam
test
xchg
jo
push
xchg
nop
add
sbb
jns
mov
xor
or
stos
push
dec
pop
sbb
sbb
mov
fnstcw
in
jnp
inc
and
jge
ss
outsb
icebp
in
imul
sbb
leave
jp
cmp
ss
test
and
inc
add
imul
add
push
jecxz
or
lock
sbb
pop
pop
cmp
dec
xor
rcl
jecxz
mov
hlt
scas
mov
xchg
test
mov
xchg
cmp
adc
fsubl
mov
mov
jecxz
xchg
xlat
fsubl
mov
mov
sahf
test
dec
pop
lcall
jecxz
and
adcb
nop
jge
mov
xor
popf
sbb
cmpsb
addr16
xor
inc
sbb
mov
aad
lret
popf
test
add
add
xor
iret
imul
fnsave
out
cmp
cmp
je
adc
ds
jge
shlb
sbb
test
xchg
dec
lods
pop
ja
ja
cmp
sbb
mov
cmp
sbb
popw
and
filds
pop
lock
or
xor
mov
loope
mov
sub
cmpb
ffree
popf
xchg
push
lahf
inc
pop
in
mov
dec
add
mov
xor
or
mov
mov
adc
shrl
jnp
dec
in
mov
pop
sbb
sahf
xor
cmp
push
sbbl
dec
mov
or
and
xchg
dec
aad
aas
mov
sbb
ljmp
xchg
ljmp
dec
sahf
add
mov
daa
aas
mov
adc
mov
pop
sti
inc
in
int
cmp
xchg
push
pop
push
shl
dec
and
push
push
rolb
cld
mov
std
dec
lcall
in
cmp
ja
and
mov
add
std
dec
mov
rcr
ret
mov
mov
and
popa
mov
daa
xor
stc
pop
sub
in
mov
sub
lods
iret
cmpsb
sub
push
jge
sub
ret
sub
cli
pop
lods
mov
das
fmull
scas
cs
mov
fs
adc
mov
push
out
stc
add
inc
xchg
in
push
pop
int3
mov
sarl
shlb
cmp
jl
sahf
xor
stos
daa
outsb
pop
ffreep
mov
in
clc
out
out
pop
test
and
popa
aaa
mov
shlb
add
notl
ret
ret
in
cmp
mov
xor
and
in
mov
mov
sarb
jle
pop
sbb
scas
js
divb
lret
in
movsl
in
jl
scas
insl
popa
lods
mov
jbe
inc
inc
in
in
scas
jle
sbb
mov
xchg
in
scas
push
popa
pop
add
hlt
mov
pop
out
cmp
in
mov
sti
aad
cld
add
cmc
mov
xor
aam
lahf
add
in
cmp
std
and
rcll
adc
fwait
pop
and
daa
cmp
dec
aad
cmpsb
push
test
fdivrs
test
scas
stos
adc
fldl2e
movsb
cmpsb
add
fs
pusha
arpl
vpextrw
xor
push
jecxz
pop
mov
xor
cs
nop
xor
mov
in
ljmp
jl
shll
addr16
mov
ja
jge
mov
push
push
cs
loope
dec
sahf
mov
shl
cmp
pop
add
mov
inc
scas
aam
popfw
mov
mov
xor
outsl
aaa
imul
scas
ror
out
ja
cld
shrl
insb
vpslld
jle
push
popa
movsl
cmp
mov
jle
out
sub
fnstsw
and
popa
inc
or
ret
pop
aas
ljmp
mov
dec
push
jecxz
jg
or
and
popa
mov
daa
cmp
lock
in
mov
lods
jge
mov
test
inc
cmp
ds
adc
cmp
inc
and
sub
std
jne
xlat
insb
cwtl
mov
xor
push
or
scas
pop
add
add
outsl
popa
scas
cmpsb
js
fs
in
mov
inc
scas
jb
mov
add
cmc
xor
xchg
push
cltd
jbe
sbb
repnz
jle
sub
jge
cli
mov
iret
ret
dec
cs
cltd
mov
imul
or
xlat
pop
pop
add
xor
arpl
fstp
sarl
addr16
cmp
hlt
adc
test
sarb
in
mov
jl
aam
sub
std
push
shll
sub
jb
pop
xlat
enter
stos
sahf
out
dec
icebp
in
xor
imul
adc
mov
push
cmp
and
outsl
popa
xor
jb
jl
cmc
ret
dec
repnz
addr16
out
std
xor
sbb
mov
push
in
adc
std
and
es
dec
aam
gs
out
scas
sbb
mov
out
mov
adc
cmpsl
aam
insb
or
dec
xlat
ja
int3
push
mov
pop
stos
in
pop
std
ja
dec
add
adc
in
rcrb
fidivl
mov
sahf
aam
jge
scas
push
lock
cmp
or
dec
xor
pop
stos
add
mov
aad
mov
punpcklwd
cmp
je
mov
sahf
sar
jle
testb
fisubs
mov
repnz
popf
mov
inc
jmp
mov
mov
fs
in
cmp
inc
scas
fidivl
mov
psllq
cli
stos
mov
mov
in
aam
fstl
clc
movsl
mov
sub
xchg
aas
jmp
stc
in
dec
sub
mov
scas
dec
aad
scas
ja
xor
cld
lahf
std
repnz
sbb
xor
rolb
push
jnp
xorb
and
inc
scas
cwtl
mov
inc
movsb
add
mov
daa
pop
mov
sarb
popa
mov
daa
mov
or
cmpsl
getsec
jmp
enter
out
insb
aas
sbb
adc
in
mov
daa
dec
in
adc
hlt
xlat
jge
jmp
cli
xor
lock
jl
clc
shrb
push
jne
adc
jl
and
rorl
lock
cmp
adc
pop
and
clc
sar
jmp
mov
jle
sub
movsl
out
popf
mov
mov
in
pop
jle
mov
lret
xchg
divl
xchg
xor
sarb
sahf
jnp
mov
xor
cs
repz
xor
mov
repz
out
clc
jmp
push
in
adc
loopne
push
xchg
jmp
hlt
cs
and
and
mov
mov
sub
mov
in
rcl
mov
sahf
dec
std
movsl
das
jle
inc
pop
subl
lret
and
cs
xchg
mov
jge
js
sub
addr16
ficompl
pop
in
cmp
sbb
xor
test
mull
push
cmp
shr
mov
mov
out
pusha
sub
adc
sbb
out
in
rorb
mov
neg
ffreep
mov
addr16
adc
das
xchg
sub
xor
imul
mov
mov
cs
popa
out
ss
xor
add
mov
daa
std
mov
stos
in
cmp
les
ret
pop
ffreep
cmp
lcall
test
stos
jne
outsb
fisubs
mov
sbb
inc
push
xchg
in
mov
js
dec
push
dec
punpcklwd
shr
roll
out
cmp
push
fmul
fildll
and
xchg
shl
or
fildl
mov
push
iret
pop
stos
out
lret
dec
and
push
adc
xor
xchg
pop
inc
daa
popa
cs
jae
cmpsb
hlt
andb
xor
aam
xor
mov
jb
jmp
in
xchg
popa
ljmp
mov
dec
aaa
jmp
mov
cs
repnz
dec
cs
imul
fstpt
out
in
dec
imul
inc
jo
xchg
jmp
push
fs
leave
cs
icebp
xchg
jle
sbb
push
mov
cmp
jge
sbb
and
hlt
loop
mov
mov
xor
mov
repnz
lods
add
dec
cmp
xchg
std
push
into
ljmp
in
push
daa
lods
ja
lock
mov
test
and
push
mov
adc
imul
mov
ss
cmp
in
push
dec
cltd
rcrl
adc
adc
cmp
jmp
or
jb
idivb
sub
popa
cld
out
mov
jge
and
std
int3
mov
in
jmp
in
in
mov
ja
or
mov
xchg
dec
movsl
ja
out
pop
test
mov
hlt
lock
pop
jnp
shrb
daa
mov
das
dec
in
xor
jle
ljmp
adc
in
mov
cmp
adc
jl
shlb
jmp
mov
add
add
cmpsb
mov
mov
inc
cs
ja
xor
bound
xchg
daa
scas
hlt
mov
cmp
clc
or
lds
outsl
jmp
cmp
xchg
or
icebp
test
cs
sub
out
std
push
push
add
mov
daa
jle
fmuls
mov
xchg
std
dec
scas
jae
and
insl
jmp
clc
loope
outsb
and
jle
xchg
out
mov
imul
in
push
popa
sbb
mov
add
sti
sub
rcr
cmpsb
cmpsb
mov
sahf
stos
cli
sub
cltd
popa
movsl
cmp
mov
inc
lods
add
mov
daa
mov
dec
mov
xor
hlt
or
cld
and
xchg
jmp
jl
in
mov
push
xlat
xchg
pop
in
pop
mov
in
push
dec
mov
xor
mov
cmp
dec
fsubs
loopne
push
dec
jmp
sub
test
aaa
std
push
fsubrl
in
cmp
addb
pop
imul
push
ss
push
xor
mov
and
or
xchg
mov
pop
or
in
shrb
add
mov
ljmp
mov
add
cmc
and
inc
scas
push
xor
stc
inc
movsb
add
mov
and
mov
add
mov
in
mov
cmc
xor
daa
add
jmp
movsb
mov
fs
test
mov
popf
mov
stos
in
cli
cwtl
jle
mov
std
lods
mov
popa
and
insl
mov
ja
dec
xlat
push
cmp
pop
jl
test
sub
xor
mov
in
pop
dec
ja
pop
push
sahf
test
jnp
imul
mov
adc
popa
jnp
sbb
push
xor
mov
inc
cmp
cmc
mov
stos
mov
pop
mov
jmp
pusha
inc
out
aas
outsb
or
cs
daa
mov
pop
aam
mov
sub
and
addr16
push
dec
in
push
popa
mov
add
in
pop
lods
sbb
push
mov
stos
mov
inc
pop
push
and
xchg
rclb
sub
mov
add
shlb
inc
aaa
xor
ss
mov
shll
mov
and
popa
mov
daa
sbb
mov
sub
std
hlt
in
cld
push
stos
or
addr16
fidivl
aas
out
dec
sahf
cs
sbb
jl
out
push
mov
xchg
sar
mov
jno
ffreep
xor
sbb
outsb
jmp
mov
rcrb
jmp
push
int3
xor
shlb
repnz
inc
adc
mov
mov
rorb
push
lret
mov
stos
in
fs
mov
push
jecxz
fiaddl
std
lock
in
mov
cmp
sbb
stos
push
testl
lahf
lock
push
cmp
hlt
jg
pop
ja
mov
or
mov
mov
dec
in
jae
pop
mov
inc
fisttpll
mov
ljmp
mov
lock
cmp
iret
pop
mov
cmpsl
fs
cmpsb
inc
outsb
mul
popa
popf
mov
in
cli
xchg
jle
mov
fstpl
outsl
popa
mov
out
ds
mov
push
xlat
cwtl
std
aad
xchg
sub
xchg
pusha
fstps
jl
lods
cs
scas
lcall
pop
mov
imul
mov
loop
in
mov
inc
int
je
cmpsb
sub
fs
mov
mov
je
imul
push
xor
stos
out
pusha
add
mov
popa
pop
shl
cs
add
and
popa
mov
daa
std
mov
movsb
push
cmp
xchg
rclb
pop
test
fdiv
je
sub
adc
lret
adc
lock
mov
fstpl
and
xchg
dec
xchg
aad
sbb
mov
mov
std
das
sub
dec
out
xor
adc
fists
sub
movsl
add
pusha
popa
popf
sbb
es
cli
push
jle
xchg
test
xlat
mov
mov
in
sahf
mov
adc
add
std
adc
inc
lods
popa
cs
ficoms
jno
clc
sub
add
inc
fisttpll
scas
adc
pop
addr16
jo
push
jmp
aam
jge
mov
push
shlb
push
sbb
xor
cli
ds
mov
mov
cmc
adc
sub
xor
sahf
xchg
mov
test
shll
cmp
mov
daa
scas
pop
cmpsl
pop
inc
inc
fcomps
dec
in
xchg
std
or
mov
in
cmp
xchg
push
add
cmp
mov
xchg
rcll
cmpsl
in
jle
cmp
xor
xor
push
in
mov
push
xchg
in
in
jbe
adc
rcl
and
call
mov
jmp
and
and
cmp
dec
aam
add
xchg
in
hlt
pop
out
in
pop
dec
adc
cmp
shll
fdivl
fstpl
adc
fdivr
mov
push
fsubrl
out
cmp
mov
jb
cmc
sub
xchg
jp
pop
popf
cmp
lods
in
cli
fstpt
cmp
push
push
or
lret
xor
jmp
jl
xchg
dec
push
mov
adc
mov
pop
mov
in
jo
mov
xor
fs
int
aad
imul
lods
out
cmp
aad
cmp
icebp
ljmp
inc
mov
xor
in
rclb
or
xor
cmpsl
movsb
in
and
push
cs
repz
aaa
iret
jbe
jmp
rcrb
imul
pop
in
cmp
dec
mov
mov
call
cmp
push
aad
mov
sahf
jge
and
push
fnstcw
fs
fisubrl
in
scas
sti
jp
push
dec
cmp
daa
in
pop
jo
andl
test
aas
sbb
lds
stos
dec
xlat
xchg
std
int3
mov
popa
cmc
sub
xchg
and
pop
jp
dec
cs
punpcklwd
shr
xor
out
ja,pn
in
pop
cmc
jle
mov
xor
cmp
sbbl
lret
xor
faddl
loope
pop
fsubp
aaa
push
aaa
jmp
xor
cltd
mov
rclb
in
in
cld
and
cmp
xor
dec
mov
add
adc
jo
in
fidivrl
mov
jo
jmp
movsb
xchg
and
pusha
stos
fnsave
das
in
mov
cs
mov
adc
adc
mov
pop
leave
stc
std
cs
jle
mov
stos
std
pop
popa
inc
test
jle
clc
shrl
add
sti
std
adc
mov
test
mov
mov
movsl
jge
sub
push
jno
stos
mov
pusha
cmc
lods
in
scas
mov
mov
lods
inc
xlat
cmpsb
repnz
jle
push
subl
fsubl
xor
and
mov
addr16
mov
cs
cmpl
in
push
nop
les
jnp
fbld
xor
xor
cld
les
push
jge
aaa
push
cmp
jb
out
in
fisttpl
mov
mov
jle
mov
sub
pause
aaa
jmp
mov
lahf
nop
std
rclb
loopne
mov
push
and
xchg
rcl
or
pusha
mov
mov
aad
stos
add
sbb
jnp
je
stos
adc
popa
cs
aas
mov
lock
jle
xchg
popa
sbb
mov
add
add
jge
out
add
push
cmc
stos
cs
scas
fcom
sub
test
pop
test
add
dec
sahf
lods
adc
cmp
fisttpll
std
scas
nop
or
mov
push
dec
in
ret
add
sub
popa
xor
jne
sahf
std
pop
shr
mov
in
adc
addr16
lret
jne
outsb
fdivl
les
xor
pop
stos
adc
inc
cmp
mov
scas
daa
cmp
adcb
and
stos
je
xchg
ds
arpl
popf
mov
popf
mov
cmp
xor
cmp
xchg
mov
mov
jl
cmp
inc
mov
mov
mov
cli
jle
sub
int3
jge
movsl
in
cli
jbe
jl
in
je
pop
xor
in
out
lods
enter
imul
aaa
jmp
xor
movsl
mov
dec
xlat
int3
inc
mov
mov
inc
lods
push
daa
jecxz
or
test
popa
repz
sbb
arpl
and
cmp
addr16
lahf
adc
xor
cmp
cmpl
xor
stc
daa
mov
push
sub
mov
or
mov
mov
and
xor
testb
push
mov
in
rclb
in
push
dec
ljmp
cli
mov
aad
cs
mov
inc
jmp
lods
cs
xor
sahf
shl
sahf
xor
mov
adc
dec
lods
push
sbb
stos
pop
mov
xor
popa
inc
mov
insl
in
xor
lock
popa
cmpsb
mov
and
popa
xor
ss
inc
sub
in
dec
xlat
adc
int
cmp
das
jb
dec
cmpsb
shl
cmpxchg
lcall
cs
popa
pop
mov
or
test
sbbl
lret
sub
in
pop
jle
stos
push
dec
cmp
std
lods
rorl
jmp
adc
cmp
clc
std
int3
mov
divl
shrl
addr16
pop
mov
lock
in
cmp
mov
loop
xor
std
xchg
sub
pop
push
stos
inc
mov
in
jp
fldl
jmp
ja
mov
repnz
mov
pop
outsl
in
aaa
popa
xor
pop
push
psubsw
adc
and
cmp
mov
push
adc
out
cmp
cmp
addr16
cmp
popf
sbb
xor
push
insb
adc
imul
cs
outsb
xorb
scas
cmp
jae
pop
jl
push
pop
mov
addr16
xchg
mov
in
rclb
cmp
mov
jno
sti
icebp
xchg
jg
dec
mov
in
addr16
xchg
sub
cmp
mov
and
sahf
dec
cli
sub
flds
in
nop
cmpl
lret
lods
pop
add
xchg
sbb
cmp
push
scas
cs
nop
xchg
andl
and
pop
popf
gs
mov
bnd
cs
add
leave
stc
push
push
xchg
imul
shlb
in
add
ret
sbb
lcall
lret
push
std
int3
mov
cmpsb
mov
inc
int
xchg
inc
imul
or
adc
and
rcll
in
cmp
js
adc
and
sub
jne
je
leave
in
in
sbb
jo
mov
stc
std
out
jmp
adcb
in
mov
in
mov
and
xchg
sarb
out
jbe
cmpsb
in
movsl
cli
ljmp
and
cli
mov
aaa
inc
or
xor
sub
sti
mov
sub
loop
ds
sbb
push
ds
mov
dec
xchg
or
out
jp
mov
push
xchg
dec
data16
pop
das
cltd
cmc
movsl
push
pop
clc
and
pop
mov
popf
dec
and
xchg
cmp
int
add
xchg
inc
push
cmpsb
dec
out
adc
mov
and
dec
leave
and
aas
dec
and
fwait
sbb
test
icebp
aad
data16
clc
mov
pop
movsb
add
push
loop
add
mov
push
data16
in
scas
hlt
sub
jle
xor
push
jb
out
lds
icebp
mov
rolb
xchg
fwait
scas
mov
cmpsb
mov
rorl
pop
xchg
lcall
popf
movsl
xor
sub
aad
jmp
sub
lret
mov
pop
mov
push
xor
or
mov
inc
sahf
mov
in
or
cmp
cmp
pop
ds
xor
dec
daa
fwait
in
fs
loope
ficomps
ficomps
mov
cltd
nop
jae
xchg
shrl
lock
stos
and
inc
and
int3
add
test
sti
scas
daa
fsub
inc
cld
aam
das
xchg
lret
dec
jbe
je
out
mov
aad
popf
cmpsb
inc
pop
aaa
jmp
sbbb
xchg
ds
sbb
nop
in
sub
cli
sbb
push
adc
xor
mov
rorl
jp
inc
scas
shll
imul
pop
add
fnstcw
in
lock
out
jmp
sbb
loopne
mov
cmc
test
decb
sbb
and
xchg
insl
push
pop
sub
adc
push
adc
adc
daa
test
push
or
out
loop
xor
bound
xchg
in
pslld
mov
mov
xchg
mov
cmp
test
or
movsb
mov
int3
scas
cld
lods
cmp
fst
cmpsl
out
movsl
mov
mov
test
stos
cwtl
xchg
mov
xchg
fbld
dec
aaa
fst
adcl
dec
test
pop
cmpsb
call
pop
push
and
and
add
ret
lret
push
repnz
jmp
and
js
inc
lahf
in
inc
arpl
or
mov
push
cmpsb
aaa
mov
es
mov
rcrb
push
mov
scas
sub
test
mov
ja
adc
cltd
dec
pop
mov
leave
sbb
jmp
mov
jae
lret
imul
inc
ret
psubq
lods
out
sbb
xchg
es
js
inc
lods
mov
movsl
xchg
adc
jnp
sbb
xchg
xchg
mov
mov
outsb
cmpsb
rol
aas
ret
shll
mov
add
insl
xchg
add
lods
inc
scas
movb
add
cmp
sbbl
fwait
loope
xchg
dec
add
pusha
jp
data16
ss
xor
ss
data16
popf
xchg
ss
xchg
dec
int
inc
mov
cmpb
mov
add
and
out
out
xor
jbe,pn
mov
pop
push
cmpsb
sbb
or
std
js
mov
jnp
xchg
mov
std
mov
fsubrl
lcall
push
mov
fisubl
or
jbe
lods
or
aad
jae
loopne
dec
pop
call
push
add
mov
pop
inc
push
push
repz
aaa
cltd
loopne
test
mov
xor
mov
aaa
repz
lods
xor
mov
loope
mov
and
xchg
fmull
sub
cwtl
test
mov
sti
jle
inc
dec
jno
mov
addr16
adc
arpl
test
mov
push
pusha
push
pop
jbe
push
inc
xor
ljmp
push
mov
aas
fdivr
insl
js
dec
dec
cmp
jb
mov
dec
cmp
test
aas
and
pop
sub
add
loop
sbb
mov
and
sarb
inc
cmp
dec
jg
jo
sub
shrb
mov
out
and
daa
dec
push
cs
xchg
dec
addr16
mov
adc
aad
loope
shll
in
sbbl
xchg
jle
inc
cmp
lret
les
out
loopne
xor
dec
dec
pop
cmc
mov
lds
out
xor
gs
mov
adc
sbb
mov
xchg
mov
orl
out
in
sbb
sarl
sbb
scas
sbb
movsl
cs
pop
mov
jmp
out
shr
enter
nop
xchg
repnz
call
mov
and
aaa
loop
pop
jb
loopne,pn
aad
xchg
xchg
dec
sub
lcall
inc
mov
mov
mov
cmpsb
xchg
data16
ficompl
mov
mov
xchg
mov
mov
add
aad
aas
and
outsl
inc
and
sub
xor
push
sub
xchg
int
test
mov
sub
sub
jge
rorb
dec
push
xor
test
dec
push
xchg
adc
mov
xchg
jle
test
inc
cmp
lret
jge
leave
push
outsl
es
fs
cmp
push
push
lcall
mov
mov
inc
xor
xchg
scas
lahf
xor
inc
gs
inc
mov
and
xor
fldcw
into
sub
stos
jge
push
cmp
mov
mov
inc
test
sub
jns
inc
mov
sbb
sbb
xchg
push
out
scas
mov
mov
loop
dec
not
ret
sub
out
dec
pusha
push
aam
mov
enter
or
push
xor
add
fucomp
cmpsb
mov
push
hlt
mov
popf
test
in
popf
test
inc
xor
cltd
mov
mov
cmp
push
dec
in
movsb
mov
test
mov
ds
add
cli
sbb
das
inc
int
pop
sub
int
pop
cmp
mov
sbb
jmp
cs
dec
pop
sub
inc
fldl
dec
popa
mov
adcb
dec
ficomps
movb
or
sub
mov
push
and
mov
mov
scas
fdivr
insl
outsb
into
daa
cmp
scas
in
mov
js
shll
pop
outsl
js
mov
sahf
sub
out
add
in
xchg
jge
push
aad
push
ret
xchg
push
fcmovnu
mov
imulb
sahf
jmp
lock
and
jecxz
xchg
stos
and
neg
lods
lods
mov
and
add
cmc
add
ficomps
cltd
mov
in
mov
push
fstps
and
out
or
add
jbe
mov
cs
mov
lret
and
or
and
add
sub
inc
mov
mov
insb
in
and
arpl
lods
lea
add
lods
xlat
jne,pt
cmp
add
sub
and
add
sahf
ss
int
daa
push
cld
orb
ja
test
pop
and
and
sbb
xor
inc
mov
out
imul
inc
sub
mov
pushf
shrb
push
push
scas
test
add
imull
add
jl
lahf
insb
xor
mov
push
test
fistpll
cld
mov
repz
push
loopne
dec
sub
push
jnp
mulb
cmp
dec
cmc
xlat
xchg
js
loop
sarb
cmpsl
mov
sbb
popf
mov
test
cld
in
push
inc
mov
fld
test
std
inc
lods
lock
fwait
test
pop
clc
movsl
scas
bound
int3
dec
pusha
mov
out
js
into
stos
sbb
inc
popf
hlt
lods
les
js
cmp
mull
gs
aaa
decb
into
es
icebp
mov
arpl
and
sti
sub
mov
fidivrs
mov
fisttps
mov
cld
cmp
daa
pop
rorl
insl
sahf
push
pop
cli
lcall
and
mov
leave
push
mov
movsb
xor
dec
into
push
and
movsb
fucom
or
cmp
sub
adc
call
adc
push
ljmp
lods
mov
mov
mov
mov
in
cmp
call
rcl
cmp
out
mov
push
and
dec
sbb
enter
jae
mov
adc
loope
jno
push
inc
loop
dec
mov
jg
mov
les
mov
lret
movb
adc
lret
test
jmp
lock
pop
jg
jo
nop
pop
sbbb
sbb
test
dec
jmp
stos
stos
lds
leave
movsl
shlb
lock
fdivrs
rcll
or
dec
cmp
mov
jne
dec
jo
inc
mov
mov
mov
fbld
cld
scas
lods
or
mov
inc
cmpsb
push
sub
test
jne
push
sub
mov
cmp
cli
mov
pusha
add
pop
sbb
mov
out
sub
lods
and
das
int
into
les
mov
jp
lods
rcrb
into
mov
cmpsl
mov
insb
loopne
push
sub
mov
cmc
mov
aaa
into
mov
sbb
popf
into
shlb
in
test
sub
mov
imul
loopne
insl
sub
mov
hlt
int
into
mov
xor
popf
fmulp
mov
and
and
jno
je
int
fidivrs
fstl
sbb
movsl
loop
movsb
loopne
and
sub
in
fisubrs
jo
mov
mov
xor
pusha
xchg
and
test
mov
sarb
and
ret
lahf
mov
sub
dec
add
shrl
mov
int
fiadds
push
cmp
mov
mov
cmp
cmp
movsl
sub
mov
mov
outsb
jo
xor
mov
mull
test
jbe
pop
mov
leave
movsl
arpl
jmp
iret
scas
mov
shl
xor
mov
je
mov
js
mov
and
stc
xchg
mov
mov
push
imulb
mov
jno
xor
xchg
pushf
sbb
sbb
pop
inc
popf
je
and
and
jge
mov
sarl
nop
jl
lahf
adc
pop
pop
insb
mov
aaa
int
mov
fldenv
or
iret
push
andl
jge
and
mov
insb
arpl
pushf
mov
pop
int3
sbb
mulb
dec
mov
mov
aam
cmp
dec
sub
aad
int3
cmp
test
je
and
pop
aaa
dec
sub
out
mov
movsb
push
inc
adc
pop
mov
insb
mov
pop
cli
lcall
test
js
xchg
in
dec
hlt
xor
insl
sub
cmc
mov
ds
dec
ljmp
sub
decl
ds
inc
mov
lahf
fsin
aam
xlat
idivb
sahf
xchg
bound
mov
push
dec
push
pop
cmpsb
adc
mov
sbb
movsb
scas
jb
mov
je
lock
and
divb
clc
jp
xchg
cli
cld
jns
adc
jnp
loop
push
jnp
pop
mov
or
iret
loope
std
js
mov
and
insl
bound
cld
and
jb
imul
push
imul
adc
cmp
test
fwait
mov
neg
jge
testl
stc
xor
mov
cmc
cmp
mov
rcrb
xor
lret
lfs
sbb
pusha
mov
sbb
lea
pushf
pop
pop
jge
je
int
mov
jns
jp
mov
dec
stos
dec
mov
and
insl
mov
jbe
fsts
and
scas
mov
lods
push
cmpsb
dec
mov
mov
dec
push
jl
lea
mov
add
test
pop
cmc
jge
sbb
pop
jae
test
xor
jl
jge
mov
jge
ja
ja
movsl
xor
mov
aam
fnstsw
cmp
xchg
mov
int
test
int3
popf
dec
push
jle
mov
iret
scas
sbb
aaa
es
movsb
in
scas
mov
lahf
adc
ljmp
cli
js
enter
jae
and
jnp
cmp
fs
ds
das
xchg
andl
adc
fs
mov
push
shll
jg
mov
scas
mov
and
and
dec
push
mov
in
pop
repnz
or
fsubs
stc
pushf
jnp
pop
fstps
aad
rcl
push
outsl
movsb
int3
mov
inc
jmp
popf
lods
fs
test
jae
leave
xchg
repz
xor
and
pop
xor
jae
inc
push
fpatan
mov
pop
pop
sbb
enter
mov
cmpsb
jmp
movsb
mov
cmpsb
movsb
ja
mov
mov
movsb
jae
adc
je
pop
inc
mov
scas
sub
test
lret
mov
fildl
cmp
fld1
cs
bnd
incl
movsl
enter
pop
mov
sub
icebp
push
clc
lahf
mov
mov
xor
mov
pop
lock
push
cmp
test
lods
push
add
jno
jo
xor
mov
mov
sbb
dec
test
mov
and
pop
mov
mov
outsl
xor
inc
in
push
fsubp
xchg
fimuls
pushf
andb
dec
popf
lods
out
mov
arpl
xor
sti
sbb
rorb
mov
fnstenv
dec
adcb
cwtl
out
and
in
xor
out
xor
push
mov
mov
cwtl
xchg
ror
sub
fsubr
push
out
jnp
data16
cmpb
repz
push
add
jne
scas
and
pop
mov
fnstcw
pop
pop
int
pop
mov
sbb
out
divb
stc
pusha
mov
lods
sbb
cmpsb
dec
mov
lods
cmp
push
push
ret
popf
pop
mov
sbb
aaa
mov
test
push
mov
mov
fldcw
fisubrs
and
fdivrs
add
jo
mov
outsl
shlb
data16
fidivs
lret
lahf
fidivl
and
in
idivb
mov
lock
insb
daa
test
dec
sub
into
jno
or
dec
add
adc
aas
cmpsb
inc
pop
addr16
xchg
ljmp
adcb
adc
repz
dec
mov
pop
sub
pop
fadd
popa
pop
push
and
mov
cmp
adc
mov
les
insl
imul
mov
sub
lods
stc
movsb
mov
fxch
vcvtsd2si
sbb
xor
jmp
mov
insb
popa
test
iret
mov
mov
in
in
orl
jae
add
cmp
fcoms
fildll
dec
mov
mov
daa
and
mov
bound
outsb
xor
aaa
and
in
jp
imul
mov
xchg
cmpsl
pop
std
dec
lods
aas
jnp
add
mov
mov
push
xchg
jno
jae
xchg
cmp
testl
fmul
popa
mov
push
push
das
mov
and
ss
fidivrs
lods
mov
jecxz
sub
or
cs
or
stos
inc
lahf
lret
push
js
fcomi
jb
aam
sahf
push
mov
sub
cld
loope
cmp
int3
out
cld
in
sbb
jge
aam
fsubl
push
lods
push
adc
lods
fsqrt
mov
push
fmull
sbb
and
outsb
add
fldcw
sahf
and
lcall
pop
push
int
adc
or
lcall
sbbb
xlat
pop
xchg
popf
ss
fnstenv
jecxz
jbe
cmp
das
mov
or
sub
call
dec
or
push
test
iret
mov
test
xlat
adc
and
test
notl
jp
sti
hlt
mov
popf
jge
movsb
icebp
fsubs
and
mov
pop
sbb
mov
xchg
push
dec
pop
jno
jo
out
or
insl
sub
sbb
shll
or
movsl
call
and
pop
mov
aam
jp
shrl
imulb
and
test
icebp
pusha
inc
adc
ljmp
fldcw
lret
mov
jnp
mov
fdivrl
or
and
cmp
mov
mov
mov
sub
in
xchg
mov
mov
pop
shlb
pop
mov
test
xor
clc
pop
push
or
inc
dec
sti
lods
lods
jne
enter
cmp
push
loop
jae
and
pop
jecxz
push
int3
imul
arpl
sub
or
cli
nop
and
adc
loope
stos
nop
int3
inc
cmp
pop
repnz
push
adc
ds
push
mov
mov
pop
xchg
xchg
inc
or
pop
sbb
mov
test
jb
ja
fistpl
mulb
dec
sbb
orb
ja
fdivl
jae
jmp
mov
not
adc
push
dec
les
inc
insl
mov
dec
push
and
push
push
lods
xor
bound
cmpsl
jne,pt
sbb
rcrb
cmpsb
pop
pop
aam
pop
stos
pop
in
sti
push
xchg
or
stos
or
cmp
loope
ljmp
imul
inc
pop
popf
es
pop
pop
mov
cli
imul
add
xor
sbb
cs
adc
pop
mov
add
and
and
mov
std
push
ficoml
lret
inc
aad
cmp
dec
and
push
xchg
out
sbb
mov
je
pop
push
rolb
fstpl
pop
ljmp
movb
movzwl
jmp
jns
mov
jp
repnz
adc
mov
sbb
mov
ds
jl
cmp
cltd
scas
sbb
pop
nop
nop
scas
adc
ja
add
outsb
aas
cmpsb
adc
mov
testl
stos
sub
mov
xlat
pop
popf
mov
pop
ds
arpl
scas
test
jl
out
mov
mov
mov
jbe
hlt
dec
lahf
jg
pop
ret
cmp
jo
arpl
xor
dec
and
pop
cltd
pop
xlat
int
cld
aad
jns
addr16
movsb
cli
test
and
or
and
pop
inc
jecxz
mov
stos
jg
mov
sub
add
or
test
or
pop
or
popf
cmc
jno
hlt
push
and
scas
jne
pop
mov
ss
lret
arpl
inc
push
enter
jge
cmp
jbe
mov
mov
mov
sbb
inc
stos
cltd
adc
xchg
inc
icebp
sub
push
push
jmp
enter
imul
jb
pop
cmpl
fists
les
inc
mov
lock
mov
pop
in
pop
loope
lock
fists
out
daa
das
jp
mov
gs
dec
sbb
xchg
pop
or
cmpsb
dec
stc
shrb
scas
scas
pop
mov
ja
fstl
push
sbb
in
test
outsl
mov
js
inc
xor
in
xchg
add
cmpsb
add
jmp
loope
repz
aam
and
pop
mov
fisubrl
rcrl
jecxz
jnp
mov
aam
add
push
push
ret
aad
xchg
imul
push
pop
jb
add
stos
sbb
in
xchg
cltd
dec
popa
mov
in
jae
insb
add
stos
jnp
xchg
mov
js
das
addl
ret
out
pop
xor
sub
loope
stos
sahf
sahf
clc
aam
es
loopne
or
mov
dec
imul
adc
repz
cmpsb
pop
fsubrp
test
inc
dec
aad
int
outsb
inc
loopne
xchg
mov
ret
sar
in
int3
cli
testb
in
test
and
xor
add
and
pop
das
push
roll
sar
out
fimuls
fwait
int
inc
jmp
pop
xor
push
ljmp
repnz
xchg
cmc
fsubrs
mov
js
cs
jge
dec
mov
add
xchg
movsl
mov
enter
repz
or
jnp
pop
adc
dec
lea
sub
lahf
daa
jmp
ficoms
cwtl
loope
stc
add
call
test
add
cwtl
dec
pop
mov
jg
xchg
push
inc
xchg
push
out
fldcw
push
je
inc
dec
mov
adc
out
frstor
cmp
adc
or
lahf
mov
jecxz
jb
sbb
pop
je
xchg
cmp
jp
xorb
aaa
mov
xor
shll
fistps
lret
push
add
inc
js
je
jb
arpl
jae
mov
bt
jmp
movl
jmp
lea
call
stc
cmp
call
xchg
push
mov
movsbw
mov
bswap
movsbw
mov
movb
push
pusha
mov
lea
pushf
call
pusha
pusha
lea
jae
pusha
mov
jmp
cmp
mov
daa
test
mov
pushf
dec
sbb
mov
jle
adc
xchg
lret
lea
dec
or
jns
gs
lret
mov
and
and
adc
sarb
inc
lds
dec
mov
mov
popa
mov
sbb
adc
stos
pop
lret
sub
cmp
pop
sub
mov
pop
add
pushf
movsb
mov
cltd
cld
repz
fstpt
and
push
clc
adc
pop
mov
js
cltd
std
clts
and
jge
mov
pop
xchg
stc
sub
repnz
mov
iret
dec
iret
imulb
das
mov
fistps
adc
out
fwait
mov
adc
xchg
dec
push
movb
cmp
jg
xchg
cmp
je
daa
in
push
xchg
leave
cmp
cmpsl
sbb
jg
or
cmp
push
je
data16
xchg
xor
jo
xlat
lock
sbbb
clc
or
fstl
push
out
cmp
sbb
cli
data16
cmp
mov
lock
punpckhdq
jns
cwtl
sbb
pmuludq
cld
repz
lret
and
out
push
push
add
dec
iret
mov
icebp
cmpb
aaa
fisubrl
push
or
cmpsl
pushf
or
clc
sarl
sbb
out
int3
and
inc
inc
cmp
fwait
pop
adc
jg
ljmp
repnz
test
fistps
jne
pusha
pop
mov
pop
ret
test
adc
aad
fistps
int
xor
test
add
insl
and
lcall
inc
out
testl
call
or
scas
fwait
mov
aas
outsl
testl
sbb
sub
jge
outsl
outsb
stos
out
cli
in
and
pop
jo
popa
xchg
mov
xor
insb
lock
mov
clc
repz
fs
or
mov
sbb
testl
pop
into
pop
hlt
aas
rcrb
xor
das
jo
jp
mov
aad
push
pop
lret
sbb
push
sbb
mov
out
pop
jnp
cmp
mov
ja
dec
daa
out
jmp
pop
jl
cli
inc
push
and
jbe,pn
sti
mov
frstor
cmp
leave
incb
add
push
imul
jecxz
jecxz
or
cmp
mov
dec
dec
rcll
push
loope
cli
and
sbb
fdivrs
testl
stc
movsb
stc
call
jg
jg
stos
loope
push
pop
adc
enter
imul
jge
xorl
lds
add
xchg
int
ja
loope
push
and
test
push
inc
mov
pushf
rcrl
fidivs
ds
rcrb
sarb
mov
mov
xchg
mov
sbb
iret
loope
shrb
hlt
movsb
outsl
aas
or
test
scas
pop
mov
enter
adc
cmp
mov
test
sub
cmp
inc
jp
mov
mov
iret
push
leave
sub
adc
cmp
jo
lret
xor
mov
negb
std
xlat
pop
cwtl
scas
or
push
xor
imul
sub
adc
fwait
sbb
pop
inc
xchg
or
and
push
add
xor
jmp
dec
mov
leave
pop
xchg
cmp
adc
insl
daa
shrl
bound
push
sub
jle
fwait
xchg
inc
inc
lcall
es
mov
pop
jg
repnz
inc
and
lea
mov
mov
sti
scas
or
cmp
jge
adc
sub
sbb
lods
rclb
cmpsb
adc
add
pop
cwtl
and
imul
mov
mov
jecxz
add
mov
stos
test
lods
pop
or
sti
push
xor
mov
and
add
scas
or
mov
dec
xchg
movsb
shrb
in
rcll
into
adc
rcll
pop
in
icebp
jae
push
in
and
push
fstpt
or
packsswb
in
scas
es
lahf
push
rolb
mov
push
mov
cltd
aaa
or
xor
or
xorl
pop
cltd
aaa
pop
lret
repnz
fidivrs
or
sbb
outsb
stos
js
je
scas
or
outsb
rorl
adc
mov
cwtl
inc
jne
dec
enter
test
xchg
push
xchg
mov
adc
push
jl
cmp
pushf
call
mov
sahf
icebp
xor
hlt
ret
cmp
or
adcl
dec
ljmp
xor
sbb
scas
mov
fnstcw
bound
fists
inc
sbb
out
sti
jg
ds
enter
mov
push
jne
mov
inc
shrl
jmp
dec
leave
cwtl
or
stos
dec
mov
sub
sbb
sub
fwait
dec
stc
cmc
test
mov
jmp
add
ja
inc
jae
inc
jnp
sbb
xchg
dec
sbb
mov
in
mov
out
iret
or
ficoml
push
loope
fs
xor
mov
stos
push
ficoml
js
dec
adc
sub
or
or
or
xor
cmpb
repz
in
and
inc
mov
mov
loop
adc
outsb
aad
xor
jno
fcomip
subl
in
sub
sbb
and
fistps
andl
jmp
call
outsb
dec
sbb
lds
shrl
mov
loopne
fwait
or
mov
ficoms
das
imul
test
pop
jne
mov
push
add
gs
jecxz
int
and
dec
mov
mov
xor
pop
xor
inc
bound
cmp
inc
das
mov
std
push
test
fbld
std
pushf
cmp
pop
xchg
push
in
mov
or
fistl
xor
cmp
sbb
out
lahf
sbb
call
fildll
sahf
cmc
in
dec
mov
enter
lahf
popa
fwait
std
into
jg
pop
nop
addr16
mov
xlat
imul
xchg
incb
push
shlb
sub
and
and
and
mov
int
inc
lock
not
bts
push
btc
movzbw
stc
sub
mov
jmp
sti
cmp
mov
dec
pop
call
and
iret
mov
in
imul
fs
mov
pop
bound
or
pop
rep
jns
jge
call
lret
mov
ficoms
gs
rcrl
inc
lea
fbld
femms
adc
lahf
inc
add
rorb
pop
test
aad
sbb
and
fbld
sbb
test
xor
leave
jbe
mov
popa
dec
lds
mov
test
rorl
fcoms
cmp
stos
dec
lds
adc
mov
xor
enter
inc
dec
test
mov
mov
fidivrs
sub
sbb
adc
mov
jns
lds
shrb
mov
sbb
rcrl
jbe
test
loop
lds
repnz
push
popf
add
aas
mov
or
pop
push
adc
push
or
int
xchg
lcall
lds
dec
imul
sub
jo
mov
xor
int3
dec
daa
or
rorl
mov
loopne
inc
dec
lds
scas
cltd
test
lret
inc
pop
shr
mov
jno
lds
dec
cmp
sub
mov
or
fisubrs
pop
sub
sub
jnp
mov
or
or
cli
out
subl
leave
sub
mov
loope
lds
xor
testl
lds
pop
adc
pop
cmc
xor
sub
xor
mov
dec
dec
lds
insb
or
sub
add
or
lds
fdivr
jge
punpckhwd
or
dec
lds
and
dec
lds
sub
dec
lds
dec
or
sub
adc
dec
lds
idivb
mov
dec
lds
mov
sub
sub
cmp
scas
setae
and
mov
or
dec
rolb
inc
cmp
sub
push
dec
lds
fidivrs
mov
dec
lds
test
adc
test
adc
adcb
movsl
pop
xor
xchg
xlat
scas
add
rcll
addl
mov
dec
loop
xchg
sbb
add
out
movsb
popf
mov
mov
inc
pusha
mov
push
fisubl
dec
in
mov
loopne
std
pop
pop
fistps
sub
mov
fidivs
adc
test
jb
mov
xor
mov
or
inc
mov
daa
pop
hlt
dec
inc
movl
sub
stos
aad
dec
cmc
push
shl
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
pusha
movl
mov
push
lea
jmp
xchg
pushf
push
pusha
call
ror
movb
pushw
popfw
call
cmp
jmp
push
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pop
mov
es
push
adc
es
fs
mov
mov
mov
pop
inc
fidivrs
es
and
or
out
mov
mov
call
nop
addl
fcompl
inc
subl
fbld
inc
push
call
addr16
adc
cmp
cmp
jl
mov
in
call
popa
xor
ljmp
mov
jl
mov
lock
test
dec
les
and
pop
pushf
push
jle
movsl
jo
lock
sub
add
inc
lds
mov
adc
inc
notb
push
insb
add
arpl
mov
ja
lds
lock
cmp
push
icebp
push
les
pop
fisubl
fs
sar
dec
push
and
es
cmp
or
hlt
andb
and
stos
ja
fisttpll
pop
mov
xchg
fnstsw
idivl
and
jne
sbb
mov
fdivrl
cs
push
mov
xorl
add
push
lahf
sbb
sbb
es
mov
jmp
fs
jb
jmp
std
pop
and
loope
jbe
xor
or
sbb
ja
out
imul
cmp
xchg
divb
out
pop
mov
aas
jecxz
sbb
leave
fbstp
ss
or
add
jns
shll
fbld
lret
push
mov
xchg
test
or
mov
mov
aam
lcall
cld
pop
jmp
sbb
mov
sti
xor
sti
js
stc
mov
jge
loopne
dec
addr16
jnp
icebp
adc
out
iret
bound
dec
jecxz
cmp
daa
sub
pop
xor
xor
leave
jl
dec
pop
xorl
mov
rcll
add
pusha
lret
and
daa
dec
call
out
ror
dec
mov
stc
bt
cmpb
push
pushf
pushl
lea
jne
cmp
rol
btr
sub
btr
btr
rol
aaa
mov
cmp
pusha
and
push
add
pusha
inc
adc
mov
movw
bt
test
jmp
push
pushl
mov
pusha
lea
ja
jmp
call
or
test
mov
rorl
imulb
subb
push
jmp
cmp
fnstenv
add
and
mov
sub
into
rol
aam
lcall
mov
lret
adc
mov
stos
push
iret
pop
rcrl
inc
mov
les
fildll
and
pop
xchg
pusha
movb
call
lea
je
cmp
xor
add
or
shl
sub
push
clc
setno
rcr
shr
sub
btr
pushl
mov
pusha
shrd
shld
and
add
and
bts
add
lea
and
rcr
mov
stc
clc
shr
call
or
shr
not
mov
stc
add
pusha
push
call
movb
inc
or
push
aas
mov
aam
push
adc
mov
int
cmp
mov
mov
test
adc
fcompl
mov
or
lock
je,pn
xchg
popa
call
shrb
adc
stc
jg
fstpt
or
aad
daa
and
cs
jbe
mov
sub
mov
pop
dec
jg
xchg
bnd
and
mov
xor
outsb
cld
insl
pop
jmp
std
jg
orl
jle
ss
and
jne
jge
push
pushf
movl
mov
pusha
mov
mov
pushf
call
stc
pushl
ror
jmp
call
test
mov
out
lods
in
jp
jmp
jae
in
lahf
je
mov
lret
mov
test
add
push
lret
adc
icebp
mov
add
lcall
movb
test
movsl
imul
pop
mov
add
mov
xor
imul
cmp
xchg
jecxz
fs
xor
and
mov
enter
out
adc
stc
decb
fdiv
gs
test
scas
stc
decb
shrb
mov
jl
mov
inc
insl
inc
mov
fsubrl
pop
scas
adc
and
mov
pop
mov
dec
add
stos
imul
lcall
xchg
or
cmp
aaa
ret
dec
mov
test
sub
test
neg
jmp
xchg
pushf
jae
cmc
mov
jb
lea
lahf
sub
enter
push
fcoms
push
call
and
sub
stos
fs
or
pop
push
mov
push
add
into
and
sub
stos
jmp
rorb
cmp
mov
not
mov
xchg
mov
movsbw
pushf
call
jmp
adc
shr
inc
jge
xor
iret
xorb
stos
mov
ljmp
lock
ljmp
nop
out
out
lea
addr16
xor
jae
test
nop
cs
jns
inc
inc
out
mov
mov
fidivl
das
popf
lret
xchg
xlat
movsl
mov
jne
mov
aas
popa
pop
pop
andl
imul
cwtl
xchg
lds
test
lea
pushf
add
stc
jns
and
sub
and
ja
pusha
stc
call
pushf
pushf
jmp
shll
mov
into
add
fistps
aas
out
gs
inc
lea
ja
mov
and
in
insl
outsb
les
sub
mov
dec
addr16
mov
arpl
pushf
int3
push
pushf
repz
call
inc
rorb
inc
lret
and
sub
idiv
decl
outsb
in
sarb
fsts
out
push
xor
mov
aaa
jecxz
arpl
popf
and
aam
pop
into
pop
xor
cmp
sub
rcr
aaa
pop
into
mov
pop
jg
popa
test
in
jo
cmp
fstp
and
pop
dec
sub
movsb
sub
shrl
out
jecxz
or
dec
rorb
jnp
xor
sub
pop
sub
out
aas
mov
xor
sahf
outsl
and
sub
push
mov
xchg
in
fxch
lock
add
insl
xor
mov
or
inc
outsl
dec
mov
hlt
pushf
and
test
insl
sbb
push
cmpb
ret
add
aaa
mov
inc
outsl
push
test
orl
repz
cmp
push
inc
imul
mov
sti
ret
lret
cmpsb
gs
rolb
pop
fisttpl
inc
lret
mov
add
daa
inc
clc
and
pushf
test
clc
add
sub
call
bswap
mov
pushl
pushf
pusha
pushl
ret
xor
in
imul
mov
shrl
fld
data16
daa
shl
adc
xor
sahf
lahf
push
stos
test
xchg
cmp
popf
sub
je
shl
or
in
pop
test
add
mov
xchg
inc
cmp
pop
dec
cmp
ds
xor
xor
xor
cmp
jle
mov
push
pop
and
pop
push
test
js
mov
mov
fisubrl
out
mov
ds
inc
dec
stc
stos
outsl
es
push
jle,pt
test
pop
lret
movsb
insl
sub
arpl
in
and
ret
pushf
pusha
pop
fidivrs
out
lret
inc
and
push
test
inc
lods
cmp
mov
fildll
add
pusha
xchg
fwait
mov
lret
dec
enter
cmp
and
cs
xor
and
dec
push
xlat
stos
push
or
mov
dec
sub
fildll
mov
jg
imul
and
adc
add
xor
push
frstor
pcmpgtd
and
cs
push
fidivl
mov
notb
cli
or
sbb
push
ret
and
sub
clc
sub
test
sub
test
sub
clc
pushf
push
pushf
insb
imul
sub
test
cmc
pusha
clc
cmp
call
add
cmc
push
cmp
mov
pushf
lea
jb
call
add
dec
gs
popa
addr16
outsl
js
add
or
add
outsl
mov
mov
jp
xchg
pop
adc
test
push
sahf
cs
das
test
mov
xor
or
or
mov
and
test
cs
das
es
dec
jp
insl
mov
testb
cli
enter
fdivrs
inc
sahf
ret
test
loope
xchg
cmp
dec
pop
pushf
rcrl
test
or
push
lods
in
cmc
fwait
aaa
push
or
imul
inc
and
incb
mov
adc
mov
pop
imul
in
je
imul
adc
push
pop
fildll
insl
lock
insb
stc
jp
and
xor
pop
fcos
xor
lea
je
bt
jmp
mov
pushl
push
pushl
ret
xor
xor
pusha
mov
push
push
lds
pop
popa
mov
cltd
fcom
sbb
nop
pop
mov
push
and
or
sbb
popa
sub
jge
dec
leave
dec
aad
in
leave
dec
fisubrs
stos
and
das
mov
cli
ret
loope
addr16
and
lcall
push
fdivrl
outsl
int3
ja
fucomip
test
push
pop
outsl
test
adc
ja
fbld
js
rorb
push
cs
test
lods
dec
push
popa
pop
fiaddl
inc
mov
mov
scas
inc
mov
and
das
sbbb
add
add
dec
fwait
pop
mov
or
or
dec
cmpl
lahf
js
sti
test
ss
mov
mov
fadds
stc
out
jno
mov
pushf
jb
hlt
popf
dec
lods
pop
add
popa
xchg
lock
fsubr
or
dec
loop
pop
pushf
scas
xor
cld
push
dec
push
xchg
repnz
sti
mov
popf
mov
inc
lods
push
pop
dec
pop
mov
fidivl
xchg
push
mov
and
sahf
std
and
xor
jb
daa
cmc
enter
lock
sub
cmp
fbstp
xchg
popf
push
xor
shrb
in
sbb
xchg
fbstp
cmpsl
sbb
push
aas
inc
mov
sub
stc
and
xor
push
inc
pop
insb
repnz
sub
jg
xor
mov
adc
daa
cmc
enter
loopne
std
cmpsb
call
xor
xchg
and
xor
gs
test
xchg
jo
jmp
cmp
push
stc
out
test
jae
jge
xchg
jmp
mov
jo
lock
enter
out
push
and
xor
sbb
and
sub
daa
stos
adc
and
xor
mov
sbb
mov
xor
call
aam
dec
sbb
sub
enter
cmpsb
or
pop
in
es
cmpl
jge
xchg
pop
cmp
mov
andb
imul
inc
lea
cmp
imul
es
ror
pop
cmc
decl
adc
outsl
cld
jo
sbb
lock
or
add
cmp
xchg
jns
or
test
sub
popf
std
jae
clc
pop
or
jns
loope
sub
or
or
pop
xchg
jle
jl
dec
aad
sti
cmp
lahf
push
mov
pop
jge
popf
and
sbb
ljmp
out
jae
mov
out
gs
mov
pop
ja
xchg
sbb
das
mov
xchg
sbb
xor
jns
adc
sub
movsb
inc
jbe
pop
mov
imul
dec
scas
or
int
incl
jnp
cmpsb
sub
movsb
pop
lret
or
dec
mov
inc
add
pushl
in
inc
scas
cmp
in
aaa
mov
jl
movd
std
xor
inc
imul
loop
imul
pop
fimuls
fucomp
mov
enter
cmp
daa
dec
lcall
push
cmc
xchg
add
lea
je
call
push
movb
lea
je
push
add
test
cmp
pushl
jmp
mov
mov
jo
into
add
repz
mov
insl
lahf
icebp
add
push
cmp
sti
dec
mov
cmpsb
inc
das
sub
ficoms
push
and
and
ret
mov
andb
out
lret
push
fsubr
subb
stos
add
lds
movsb
push
and
pop
mov
iret
ds
jecxz
inc
inc
xchg
sub
sbb
add
cmp
fbstp
test
in
xorl
fbstp
push
pop
pushf
mov
test
test
and
test
jmp
nop
stc
mov
je
push
aaa
adc
lea
jmp
dec
push
call
sub
into
shlb
in
push
sub
sub
fld
xor
xchg
in
scas
adc
jae
mov
push
in
movsb
fwait
lock
push
jge
jle
add
push
call
mov
cmp
cmp
call
inc
lea
push
loope
xchg
mov
out
imul
pushf
sbb
or
loopne
mov
in
mov
push
lcall
inc
addb
testl
inc
mov
xor
xor
fbstp
popf
sub
gs
mov
inc
jge
sub
mov
outsl
sub
inc
rcrb
mov
push
imul
filds
mov
push
inc
inc
ja
js
mov
sbb
jp
dec
inc
lods
mov
push
imul
jbe
mov
push
and
adc
pushf
add
push
in
or
or
lock
pop
mov
pop
add
mov
into
jge
add
mov
cs
shrb
lods
cmp
or
shrl
mov
cmp
clc
movsl
jge
in
lods
cld
jg
pop
pop
ds
fs
loope
xlat
mov
pop
loopne
mov
popa
out
loope
and
sub
and
icebp
pushl
jnp
mov
lods
fs
sbb
mov
inc
lds
fs
icebp
and
cltd
and
and
jmp
pusha
movb
movl
movl
pushl
movw
movb
lea
jmp
pop
mov
icebp
mov
call
xlat
mov
pusha
packsswb
push
outsb
jnp
ja
sub
arpl
and
loopne
icebp
out
fcoms
pop
push
and
enter
daa
sub
aam
add
lods
pop
dec
lahf
xor
mov
or
loopne
push
rep
movzbw
movsbl
not
jmp
lea
jne
rol
shrd
mov
test
test
cmc
cmp
pushf
movb
pushf
pushf
lea
ja
setne
mov
pop
setle
call
pusha
lea
jbe
or
btr
sub
or
pusha
test
movzbw
mov
shl
mov
bt
mov
adc
shl
test
add
btc
lea
shr
mov
mov
xor
bt
add
not
pop
mov
pushf
pushl
mov
mov
jmp
cmc
xor
cmp
loope
xchg
inc
ss
orl
mov
out
ja
decl
int3
pop
push
and
mov
das
push
pop
push
mov
std
jg
js
jb
jle
xchg
testb
jmp
lock
jne
je
ret
and
aaa
mov
mov
or
fsubl
int3
test
or
xchg
add
cmp
inc
gs
and
movsb
add
pop
mov
push
insb
test
cmp
push
mov
jp
push
sbb
fs
and
gs
jne
cli
testl
xchg
divl
hlt
repz
jle
mov
ret
movsl
add
and
and
loop
movsb
push
xchg
mov
mov
outsb
cmc
jnp
sub
sbb
outsl
and
cmp
dec
lods
mov
stos
mov
xchg
jne
and
cmp
jl
pushf
bt
and
shr
jmp
imul
gs
xor
cs
insb
add
and
test
call
arpl
ljmp
stos
scas
push
sub
mov
lret
test
cli
sub
cmpl
or
mov
es
cmpl
ss
addr16
adc
cltd
xlat
add
pop
mov
ds
out
or
je
pop
jne
xor
testb
xor
sahf
and
cmp
xchg
fimull
add
mov
add
test
flds
mov
aaa
and
and
mov
icebp
add
cs
jmp
xor
lock
xor
in
inc
data16
aaa
jg
mov
or
movsl
fldt
adc
mov
mov
mov
inc
jmp
das
sbb
inc
roll
shlb
mov
and
cmp
mov
or
lock
add
sub
test
push
or
xchg
pop
rcll
lods
aam
inc
mov
call
dec
shlb
mov
adc
aam
jb
ss
ss
leave
jl
lahf
sub
sti
xlat
push
xor
dec
call
and
shlb
cltd
leave
sub
adc
sarl
jns
sub
daa
sahf
aam
sub
and
push
jp
jae
pusha
lahf
and
cmp
xlat
xor
pop
sub
mov
and
ds
enter
lods
arpl
ja
in
pop
sbb
push
mov
dec
sub
lds
les
in
xor
lahf
sub
xor
movsl
dec
ret
test
imul
repnz
mov
test
fistpll
dec
call
sbb
test
movsbl
rol
setl
mov
add
sub
bt
movzbw
or
and
mov
cmp
push
bt
jmp
pop
jge
dec
in
fildll
adc
rorb
sub
lds
push
aas
ret
out
push
mov
clc
mov
orb
lods
jp
popa
sbb
ljmp
cmp
aas
ret
out
fidivs
shrl
inc
mov
xor
mov
aam
es
push
pop
push
int3
dec
mov
addb
cmp
and
cmpsl
lret
lcall
pop
fisttpll
in
leave
sahf
and
cmp
decl
jle
cmc
mov
inc
cmp
and
cmp
pop
stc
push
clc
cmpsl
lret
cmp
mov
xor
cmp
inc
add
repz
push
xchg
adc
fistpll
dec
mov
cmpsl
lret
faddl
aaa
mov
xor
sti
jno
and
cmp
mov
aas
add
push
js
mov
add
outsb
cmp
mov
call
pop
mov
jbe
cmp
dec
decl
out
mov
pop
stc
mov
je
mov
mov
inc
frstor
sub
inc
ja
sub
push
lcall
insb
cmc
xchg
lods
test
adc
push
inc
imul
xchg
mov
test
adc
lods
adc
or
fsubl
fistpll
aam
aaa
lea
jno
pushf
lea
call
call
lods
sbb
stos
sbb
sti
rcll
adc
fdivrp
arpl
daa
xor
cmp
adc
lret
pushf
sbb
jno
outsl
daa
xor
push
jnp
out
mov
adc
push
push
dec
cmp
lock
clc
shlb
fistps
jmp
cli
and
mov
or
inc
jle
adc
jae
scas
sbb
imul
sbb
aad
shrb
stos
sub
push
test
and
cmp
sub
stc
jmp
not
inc
cmp
xchg
shld
xadd
clc
pushf
mov
cmc
neg
rcr
mov
cmp
push
pushl
xchg
pushl
mov
cmp
sub
call
mov
shlb
add
aas
add
push
adc
pop
clc
or
nop
and
enter
in
push
loope
fmuls
dec
mov
cmp
push
push
and
lret
decl
mov
fisttps
jnp
mov
mov
mov
pusha
or
sub
std
cmp
mov
mov
scas
imul
je
jnp
inc
fimull
rcrl
xchg
setle
ja
orl
stos
lock
sbbb
xor
lahf
addr16
push
aad
pop
dec
dec
stc
jge
add
xchg
push
adc
and
mov
xor
outsb
cmp
jecxz
pop
imul
out
jne
shll
add
push
xor
mov
mov
rorl
cmp
std
repz
mov
push
jne
dec
or
push
sbb
pop
sbb
ret
enter
cmp
lret
fistpll
jnp
inc
jns
mov
fildll
xchg
push
jmp
cs
jle
int3
cmpsl
mov
xor
mov
pop
fldt
sbb
sub
mov
clc
test
jno
xchg
jle
pop
jno
aad
pop
es
pop
mov
out
cmpsb
push
mov
sub
and
and
ja,pt
xchg
int
cltd
add
dec
pop
lret
cmp
movsb
xchg
pop
xchg
pusha
and
ds
inc
test
mov
movb
inc
out
cs
jg
and
xchg
cltd
add
push
dec
repnz
xchg
inc
push
or
jbe
and
jb,pt
subl
adcl
js
fmull
jmp
test
into
lds
and
ds
jae
jl
cltd
sub
mov
pop
jecxz
in
and
fistpll
notl
and
cltd
add
jmp
push
outsb
cmp
les
dec
cmp
pop
sbb
cmp
mov
and
inc
mov
push
mov
ficomps
lahf
inc
mov
ds
jg
ljmp
nop
aaa
mov
aam
sbb
cmp
pop
shll
idivl
mov
fistpll
dec
jmp
jmp
decl
gs
incl
js
xor
jle
scas
jns
clc
into
subl
xchg
stc
mov
sbb
js
mov
push
push
inc
xchg
pop
mov
and
inc
pop
mov
packuswb
mov
sahf
clc
jo
dec
mov
mov
lcall
loope
sub
cmp
cs
mov
stos
outsb
or
cwtl
stc
jge
push
pop
adc
fnsave
push
fs
mov
cmp
ja
addl
jne
cli
aam
ret
aaa
pop
push
jbe
inc
dec
out
fwait
shlb
shlb
addl
sub
data16
push
into
xor
enter
adc
sbb
cltd
mov
mov
das
jns
push
mov
rclb
mov
int
loope
cmc
iret
or
and
and
and
aas
sub
sub
out
add
sti
ret
test
cmp
mov
adc
inc
mov
inc
loop
out
mov
adc
movsb
data16
xchg
pop
das
xchg
add
adc
inc
fisubs
pop
adc
lcall
in
mov
inc
fdivl
xchg
add
jo
lods
xor
ljmp
imul
addr16
sbb
cmpsl
ja
pop
inc
scas
pop
sbb
addr16
ficoms
out
push
rorl
and
inc
jecxz
or
hlt
pushf
pushf
pusha
mov
lea
jmp
mov
sbb
js
arpl
cmp
lods
dec
jmp
clc
loop
xchg
cmpsb
mov
mov
jmp
daa
pop
inc
bound
dec
in
int3
inc
lret
dec
loopne
inc
push
xchg
in
mov
and
jnp
sub
scas
and
icebp
std
repnz
pusha
flds
dec
int3
pop
jg
and
inc
mull
mov
jmp
inc
popf
enter
adc
stos
jns
filds
adc
or
adc
dec
adc
out
es
jmp
bound
ljmp
lcall
into
data16
jb
rorb
jno
jge
in
sbb
data16
lea
js
or
xchg
lock
inc
cmpsl
jecxz
setns
xor
imul
jle
ds
ja
mov
pop
int
leave
cmp
filds
sub
xor
jno
push
repz
hlt
mov
pop
ret
cmp
push
shlb
cli
sbb
jns
scas
test
sub
ror
and
push
rclb
dec
in
int3
repz
das
jns
jns
daa
loope
out
adcl
stc
jns
lret
icebp
sbb
push
and
mov
cmc
pop
add
xor
pop
xchg
pop
aam
jnp
jg
xchg
dec
xor
mov
filds
ds
pusha
movl
call
loop
fnstcw
int3
aaa
adc
sti
leave
lea
add
cwtl
dec
add
and
idiv
fsubrl
in
aad
lds
int3
idiv
and
ds
push
repnz
shll
pop
cs
add
push
aas
pop
rcrb
das
shrl
lods
mov
xchg
imul
adc
imul
jae
pop
popa
loopne
clc
fs
sub
filds
mov
sbb
pushl
ret
movsl
mov
mov
xlat
inc
orl
test
loope
pop
mov
cmpsb
mov
push
and
cmpsb
mov
sub
sti
repnz
imul
and
push
aaa
push
out
cmp
and
inc
andb
std
pop
push
imul
mov
in
cmp
mov
push
in
mov
xor
aas
push
mov
lods
aas
push
and
xor
xor
fcmovu
xor
cwtl
and
paddusb
repz
jb
gs
test
cmp
addb
test
inc
stos
xchg
add
test
aam
subl
fistpl
xlat
mov
sub
lahf
outsb
and
mov
out
sbb
out
jg
hlt
dec
lods
mov
int
cmpxchg
mov
xor
sbb
out
js
mov
imul
loopne
or
jae
cmp
xchg
adc
cmp
sbb
or
insb
jmp
test
mov
fbstp
sbb
cld
nop
vmread
jle
adcl
inc
dec
jb
clc
pushl
jmp
push
jl
pushf
movl
pusha
pusha
lea
jmp
pushl
jmp
pusha
mov
lea
je
push
push
push
pushf
lea
jmp
add
jbe
repz
lods
sbb
push
or
stos
insl
sbb
mov
aad
jo
fs
nop
jmp
mov
outsl
xchg
mov
or
mov
push
aaa
mov
dec
mov
lret
sbb
mov
imul
push
loope
jmp
jae
int3
xor
xchg
int3
addr16
out
clc
outsl
fstpt
filds
ss
pusha
lea
jae
bt
call
pushf
push
mov
setnp
call
add
dec
outsl
popa
fs
imul
add
aad
mov
movsl
pop
add
xchg
or
sub
lock
imul
test
adc
cmpsb
jp
pop
scas
add
sbb
mov
xor
xor
push
ret
addr16
sub
sti
aaa
leave
out
pop
imul
decb
pop
clc
adc
push
ficoml
dec
jno
aaa
rolb
push
and
inc
lds
bound
sub
pop
arpl
out
imul
inc
leave
mov
pop
repz
es
mov
fmuls
out
jo
mov
add
arpl
pusha
fmuls
out
out
mov
and
mov
repz
es
or
rsm
lret
pushf
dec
stc
xor
cltd
repz
and
shl
aaa
xchg
sub
ja
cmp
test
inc
mov
dec
shll
cmp
push
jp
add
call
dec
jl
add
shlb
and
inc
dec
out
mov
mov
mov
in
stos
insb
enter
les
sbb
sti
push
jae
jns
enter
in
and
cmp
push
or
popa
mov
cmpsl
mov
repz
out
into
and
and
pop
scas
cmpsl
addr16
inc
fbstp
es
jne
addb
mov
and
inc
cmp
mov
jle
hlt
dec
push
shl
cmp
rolb
insl
and
inc
int3
imul
jle
xchg
iret
fs
movsb
es
gs
shll
test
das
fwait
pop
jns
adc
add
fcomps
out
cmp
mov
or
gs
rcl
ss
xchg
xorl
add
outsl
and
sub
scas
lods
cmp
xor
insb
adc
addr16
inc
xor
push
enter
mov
ss
ljmp
mov
mov
addb
xor
jecxz
push
cwtl
pop
inc
test
mov
xchg
leave
sbb
jns
xlat
test
lret
out
test
js
cli
repnz
sbb
sbb
add
inc
iret
sub
cli
jo
decb
mov
and
in
and
sbb
and
xchg
pop
das
sbb
mov
cmp
loop
xor
push
sbbb
dec
sbb
xchg
pop
push
mov
inc
ja
cmpsb
jns
fists
lods
mov
rep
jns
int3
mov
cmp
notb
loop
push
mov
addr16
jecxz
ficompl
cwtl
push
popa
stos
inc
add
rorl
cwtl
dec
sbbb
lret
in
pop
pop
leave
shll
les
mov
sbb
push
jp
inc
jl
in
cmc
arpl
es
movsl
iretw
add
int
inc
add
ret
shll
or
mov
jne
shlb
mov
inc
sub
ficoml
inc
inc
test
ss
test
inc
lret
ret
dec
repnz
mov
pop
xor
ja
xor
aas
pop
sub
add
sarl
cltd
mov
aam
ljmp
xor
jl
xchg
push
xchg
cmc
sub
insl
jmp
movsl
sti
mov
jmp
imull
pop
push
pop
lods
push
pop
repnz
and
add
test
movsb
int3
xlat
dec
orl
cmpsl
push
out
std
mov
sbb
and
incb
jnp
sbb
aam
fiaddl
in
out
sub
fdivrl
sti
insb
push
lods
out
cmp
out
imul
add
jge
inc
iret
das
inc
xorb
ss
push
stos
jb
movl
sub
mov
aad
mov
sub
pushf
repnz
cli
push
aaa
and
mov
xor
mov
cs
test
outsl
hlt
ret
aas
cs
stos
andl
jo
popf
dec
incb
adc
jnp
mov
jae
lcall
in
push
gs
push
mov
iret
imul
fwait
data16
xchg
int3
add
sarl
xchg
mov
mov
std
mov
cmp
inc
mov
mov
mov
pop
mov
fcoms
dec
add
cmp
arpl
stos
and
fs
or
test
sub
xchg
fwait
testb
push
or
and
in
pushf
push
in
jo
divl
xlat
shld
inc
and
push
push
insl
push
push
lods
in
jle
add
dec
test
sbb
dec
jge
out
js
sbb
shrl
adc
cli
xchg
out
fnstenv
adc
iret
jp
mov
fs
push
sbb
cmp
iret
call
inc
addb
lea
pop
mov
pop
cmp
jno
and
frstor
mov
mov
pushf
jo
cmp
mov
fidivrl
iret
pop
sub
mov
mov
es
dec
sub
rorl
cld
fdivl
test
pop
rorb
cmpsl
cmp
lcall
fnstenv
inc
jmp
sbb
sarb
jl
mov
ss
rolb
mov
imul
stos
xor
push
xchg
push
or
into
jns
xorb
push
aas
or
sbb
xchg
lock
lret
adc
rcll
out
out
fldl
outsl
xchg
xor
nop
and
fwait
or
std
sub
mov
fdivrs
aas
mov
mov
pop
sahf
iret
mov
pop
pop
repz
or
or
xchg
psraw
xchg
out
flds
dec
lret
add
and
mov
test
and
clc
fwait
push
pusha
ds
mov
iret
fstpt
xor
xor
sub
xchg
sub
rorl
xchg
gs
and
lahf
and
fadds
cmp
mov
inc
adc
movsb
nop
out
cmp
dec
bswap
shlb
cmc
es
cmp
mov
pop
xchg
arpl
jo
clc
and
sbb
jns
push
xchg
shlb
dec
iret
movsl
xchg
pop
mov
dec
fdiv
pop
inc
das
gs
icebp
sarl
rcrb
sahf
insl
enter
addr16
and
and
in
mov
mov
retw
test
ret
add
out
shll
cmpsl
adc
loope
enter
cmp
jg
mov
or
xchg
imul
nop
ljmp
lods
adc
rorb
loope
popf
add
pop
or
pop
lahf
shlb
sub
jp
push
bnd
adc
sbb
test
aas
jns
fiadds
or
dec
jne
xchg
fisubrl
fidivs
popf
mov
cmp
shlb
sbb
push
pop
jge
aad
mov
out
inc
mov
aaa
divb
aad
dec
mov
mov
jne
sub
and
mov
out
leave
stc
sub
push
pop
mov
std
or
jo
mov
lcall
mov
push
or
push
push
inc
cmpsl
push
sub
jb
add
inc
test
inc
sub
or
xchg
cmp
sub
xchg
cmp
inc
push
jmp
dec
test
into
sarb
xor
callw
mov
les
ds
adc
sbb
mov
test
and
cmpb
pop
rcrl
addr16
test
lahf
jno
leave
lret
xchg
push
pop
cwtl
rorl
mov
into
faddp
sbb
sbb
fbld
aam
cmp
imul
roll
or
add
add
mov
pop
cltd
push
cmpb
scas
mov
jl
xchg
push
les
mov
dec
mov
je
pop
loopne
pusha
sbb
xsha1
xor
je
das
hlt
ja
lods
repnz
jecxz
pop
stc
jne
dec
sbb
mov
fs
jne
ret
and
sub
sti
mov
daa
inc
xchg
adc
enter
daa
mov
sub
dec
xor
outsl
into
repnz
ja
nop
sbb
mov
mov
mov
xor
or
sbb
in
in
sar
loop
sbb
fnstsw
cltd
ljmp
and
mov
int
mov
mov
dec
test
cmp
jns
push
xor
scas
mov
push
or
bound
es
cltd
int3
cwtl
pop
mov
inc
mov
aad
sbb
or
outsl
fwait
mov
cmp
fsubrs
cmpsb
sbb
aaa
outsb
jl
cmc
cmp
ljmp
add
dec
adc
lret
cmp
push
jae
movsl
sbb
fnstenv
sahf
sub
scas
adc
sbb
lods
mov
pop
push
test
scas
push
and
movsb
imul
into
or
je
test
jmp
mov
xchg
roll
mov
stc
in
in
out
ds
scas
cli
xor
nop
cmp
call
sub
and
fnstcw
inc
test
cmp
jnp
adc
cmp
sub
lds
push
mov
das
cltd
add
dec
xlat
add
in
cld
decb
and
and
int3
sub
pop
xor
add
fstl
pop
or
and
sbb
test
pop
ja
ja
mov
bound
cmp
pop
mov
adc
inc
loopne
fdivs
mov
mov
and
hlt
rorl
insl
dec
sbb
push
lods
call
sbb
sbb
ss
test
jg
xchg
in
pop
lods
mov
inc
adc
sbb
ret
xchg
jl
lock
mov
push
das
in
xchg
add
adc
sbb
mov
es
imul
add
mov
mov
stc
daa
cmp
pop
cmp
xchg
jnp
xchg
int3
push
aam
xchg
sti
ja
loopne
push
pushf
sub
mov
mov
popa
mov
pop
jae
rcrl
in
pop
cs
je
pop
out
loopne
jne
fwait
xor
jp
imulb
inc
imul
inc
int3
mov
cld
push
inc
sub
dec
xchg
pop
rcrb
and
push
mov
js
add
ret
push
push
in
scas
into
iret
jns,pt
inc
cwtl
mov
cmc
push
rorl
arpl
mov
pop
pop
cmpsb
mov
jle
fists
pop
fists
mov
jg
jne
stos
lock
sub
dec
sub
imul
inc
mov
adc
push
movb
dec
fwait
mov
out
jne
cltd
hlt
ret
xor
stos
in
and
push
and
jno
daa
addr16
xlat
mov
sahf
icebp
adc
xor
jg
loop
stc
adc
jge
or
xor
cmp
fbld
in
arpl
push
inc
jmp
repz
into
or
push
push
shll
pop
sub
sti
stos
jmp
inc
fs
or
add
adc
sti
ljmp
cmpsl
jae
inc
mov
clc
push
and
test
push
test
jge
aad
in
test
jae
sbb
inc
push
sub
xchg
imull
nop
scas
cmp
pop
mov
in
dec
test
pusha
and
pop
jne
popf
pushf
leave
mov
sbb
dec
cmpl
push
fidivrl
sarb
pop
sbb
mov
cwtl
or
in
mov
xor
cmpsl
pop
rcll
dec
sbb
aad
jecxz
in
das
xlat
ffree
mov
loop
mov
push
xchg
pop
imul
outsl
out
cs
les
pop
xchg
fcmovne
push
imul
push
outsl
mov
enter
mov
lret
enter
test
stos
push
pop
mov
cmp
sub
les
jo
shrl
mov
jge
inc
stos
hlt
cmp
mov
andl
andb
mov
xchg
add
sub
mov
in
dec
test
pop
icebp
leave
pushf
pop
lcall
mov
pop
scas
and
movsl
scas
pop
call
mov
aas
mov
lods
sti
xchg
movl
test
fists
mov
aaa
mov
xchg
xchg
aam
loopne
jg
lods
outsb
aas
mov
jb
stc
cmp
xchg
push
pop
inc
cmp
mov
add
sub
lret
pop
push
xchg
fldl
bound
shrb
jge
aas
outsl
add
or
or
addr16
test
aad
in
inc
movsb
repz
mov
loopne
mov
dec
add
insb
out
cmpl
vfrczsd
xor
jb
or
scas
sub
bound
lret
lock
clc
mov
or
scas
jmp
dec
cmpsb
sub
or
aaa
xor
jne
mov
mov
push
push
scas
add
push
fstps
mov
push
iret
add
je
push
xchg
jp
lret
cld
pushf
sbb
nop
lret
or
push
rorb
and
push
addr16
sub
pop
sbbl
outsb
fildll
in
jo
cmpsb
jmp
and
push
xlat
insb
push
rcrl
imul
mov
cmpsb
jno
in
inc
add
fbld
mov
cmpsb
fwait
push
stos
sub
push
in
jle
sub
test
jne
xchg
xor
flds
je
mov
rorl
rorb
pop
jbe
movsb
pop
aas
cmpsl
das
cli
jae
cmp
mov
add
imul
lods
mov
fdivl
jns
sbb
adc
or
or
in
sub
jae
jb
or
inc
enter
shll
sub
notl
int
aad
aad
push
jecxz
aad
lcall
rorl
sub
and
pop
and
mov
out
loope
ret
jno
lcall
movsl
je
aad
mov
fdivs
sbb
add
sbb
lcall
out
adcl
sbb
xor
testl
ljmp
xchg
aas
inc
xchg
jb
sbb
lock
std
arpl
mov
icebp
mov
stos
add
adc
icebp
sti
pop
mov
or
jg
push
mov
cmp
push
pop
inc
cmp
cmp
mov
shlb
push
cmpsl
lahf
add
adc
leave
sbb
sub
or
mov
adc
push
sahf
xor
xchg
sub
aad
xchg
shrb
movsl
aaa
or
mov
das
js
ja
fdivrl
ja
lahf
mov
fisttpl
add
dec
xchg
testb
or
xor
notb
pushf
aad
jl
push
sub
cmpsb
jbe
cwtl
pop
cwtl
push
jo
and
pop
mov
dec
rcrb
jo
fidivs
into
add
push
jns
incl
inc
jnp
push
aaa
xchg
loop
hlt
dec
inc
pusha
mov
mov
xor
cmp
shlb
jno
jecxz
into
nop
push
scas
jge
cmc
test
or
jp
fdivrl
rolb
pop
ss
inc
mov
inc
xchg
and
lds
mov
push
stos
out
jmp
lods
adc
fs
add
jmp
aaa
shlb
pop
scas
xor
mov
lahf
mov
divb
lret
lock
xchg
js
adc
mov
or
inc
ret
mov
jo
add
iret
inc
and
cmp
mov
sub
sub
sbb
xor
cmpsb
mov
les
nop
or
and
dec
xor
push
cmp
hlt
das
pop
lock
adc
dec
jnp
mull
enter
ja
and
int
jmp
mov
and
add
cmp
add
cmc
leave
inc
adc
mov
rorl
jmp
jbe
mov
lahf
notb
and
lds
xchg
int3
fs
call
loopne
mov
xchg
jmp
lock
pop
pushaw
mov
and
and
std
pop
fsts
and
pusha
mov
sbb
loopne
pop
aas
inc
stos
cmp
inc
lret
pop
jg
dec
jp
inc
jle
add
mov
xor
cmpsl
lahf
leave
out
in
movsl
test
push
mov
push
mov
sub
push
mov
cmp
push
mov
gs
dec
fiadds
outsl
mov
mov
sbb
dec
dec
sub
and
xor
mov
cmpsl
mov
add
addl
dec
sub
xchg
push
push
lcall
nop
aad
sbb
xchg
push
mov
aam
sbb
inc
xchg
ret
xchg
cld
push
in
scas
hlt
mov
sbb
movsb
lret
mov
fwait
std
push
lcall
sub
scas
sub
flds
pop
cmp
hlt
xor
push
xor
pusha
insl
adc
xorb
cli
jl
lds
cmp
mov
loope
outsl
clc
mov
sahf
test
jb
jp
push
int
in
push
or
pop
cwtl
aaa
int3
negl
mov
mov
pop
pop
jecxz
cmp
mov
mov
mov
scas
lret
inc
sahf
sti
dec
xchg
ss
add
fs
pop
fnstenv
jo
cmpsb
and
pop
xchg
mov
jnp
add
ss
jns
cmpl
mov
cmp
lret
jb
jb
mov
aam
or
dec
push
rcl
dec
in
fsts
cmp
scas
aas
jmp
mov
into
sub
and
pop
es
push
push
mov
and
fwait
and
lea
aam
xchg
int
sbb
fistpl
mov
jnp
cmp
cld
pop
jae
int
and
dec
jns
push
push
scas
inc
pop
sahf
stos
movsb
pop
aam
test
jp
or
ret
clc
das
cmp
and
sub
mov
push
jne
test
ja
daa
mov
sub
sbb
mov
dec
dec
xchg
jg
pop
mov
xchg
test
das
pop
or
jl
xor
xchg
xorl
mov
lahf
mov
or
pop
jge
sub
int3
test
sti
dec
test
test
jecxz
insl
dec
sub
mov
pop
lods
pop
pop
int3
push
cmpsl
int
cld
push
pop
pop
add
rcrb
inc
pushf
inc
pop
imul
push
shrl
shl
add
popf
cwtl
cmp
shlb
adcl
sbb
or
scas
jge
mov
xor
insb
mov
mov
aad
je
out
fnstsw
mov
int
and
fs
jae
dec
repnz
fidivrl
sub
popf
push
in
push
movsl
mov
fsubp
lods
mov
mov
aam
aas
movsb
or
jae
icebp
sbbb
cmp
jge
push
js
push
movsb
stos
aam
add
sub
call
inc
stos
xchg
xor
shll
pushf
dec
mov
das
cmpb
mov
mov
lcall
jg
jnp
mov
adc
xchg
and
push
pop
xchg
adc
push
fabs
int3
lcall
cli
push
sbb
push
jnp
jnp
mov
pusha
loope
jle
and
or
data16
movsb
jae
and
mov
pop
mov
push
pop
push
mov
addr16
cmc
lahf
hlt
in
mov
or
shlb
sahf
or
push
into
sub
test
mov
popf
int3
cwtl
inc
lods
sbb
xchg
pop
cmp
sahf
out
call
loopne
pop
fcmovnb
cltd
mov
pop
push
pop
xor
rclb
les
push
mov
xchg
mov
cmp
lahf
jmp
cltd
dec
sub
dec
fldl
cmp
pushf
dec
dec
and
es
out
mov
and
out
inc
popf
popf
scas
push
mov
adc
mov
jnp
cmpw
lock
out
pop
cmpsl
jb
jp
hlt
lcall
dec
sahf
mov
in
push
pop
mov
aad
adc
inc
mov
lcall
sbb
mov
loope
add
mov
in
ret
mov
xchg
sahf
mov
fxch
push
lods
pop
xchg
jmp
cmp
mov
js
lds
shrb
or
loope
sbb
out
sub
or
repz
mov
shl
test
push
stos
test
cs
scas
cmpsb
scas
mov
sbb
xor
xchg
loope
sub
or
mov
cmp
add
dec
add
fmuls
inc
or
les
daa
out
xlat
inc
sub
popa
pushf
in
dec
cmp
dec
daa
mov
fs
orb
test
scas
adc
sub
add
daa
push
mov
push
inc
mov
mov
adc
and
jo
push
int3
popf
inc
aas
and
test
inc
and
sahf
cs
inc
mov
sahf
mov
lahf
dec
mov
movsl
inc
sub
mov
and
inc
mov
das
add
out
fisubrs
push
and
dec
imul
inc
insl
sub
push
mov
shrb
or
pop
sbb
push
sbb
add
mov
mov
mov
rcrb
mov
in
repnz
mov
mov
stos
add
push
mov
idivb
and
mov
xor
les
xor
movsl
andb
add
lds
cs
out
scas
xor
and
stos
lods
mov
aaa
mov
movsl
lods
int3
mov
pop
divb
pushf
mov
lret
inc
test
fsubrl
mov
test
inc
push
mov
fsts
sbb
lods
loope
hlt
test
mov
and
sahf
jge
adc
out
repnz
popa
fsubrl
aad
mov
pop
add
pop
cmp
push
jmp
xor
push
idivb
jge
test
mov
je
lcall
push
fsubl
ret
mov
cmp
in
int3
pop
repz
xchg
cld
cvtps2pd
fnstenv
jl
in
movsb
subl
je
pop
and
push
jne
popa
jae
xchg
cmp
jl
daa
sbb
push
inc
pop
push
cmc
pop
xchg
pop
es
mov
arpl
inc
pop
mov
mov
cltd
cmp
push
sti
int3
cmp
les
cmpsb
sbb
out
ret
lahf
mov
mov
ret
or
jo
lods
daa
pop
fsubrl
hlt
xor
mov
sbb
push
jecxz
in
test
out
aas
and
loope
mov
fsubs
push
pop
mov
into
mov
sbb
mov
and
jmp
int
xchg
sbb
inc
loop
push
or
lods
es
cmpsl
in
cmp
fs
mov
fs
cmp
mov
int3
ljmp
jnp
fwait
push
inc
repz
mov
pop
ss
ds
pop
hlt
pushf
shll
pop
sbb
cmp
out
and
ljmp
sub
mov
jecxz
std
ficoms
mov
push
sub
hlt
add
test
fstps
outsl
or
outsl
pop
lret
jp,pt
hlt
aas
push
mov
pop
sbb
lcall
adc
mov
lahf
fdivrs
dec
mov
sahf
sbb
in
inc
popf
mov
ja
sub
pop
dec
cmp
mov
fisubs
cmp
jo
and
and
dec
sbb
sti
scas
and
mov
xchg
dec
sub
pop
movsl
lods
sbb
pusha
test
into
cmp
js
push
movsl
ret
int3
sti
fstl
jp
dec
mov
sahf
leave
pop
cld
test
popf
inc
mov
add
pop
fidivrs
adc
or
and
mov
faddp
outsb
cmp
inc
fldt
and
ja
pop
int
pusha
lds
call
push
sbb
and
fcoml
test
test
sbb
movups
das
mov
and
fnstcw
add
dec
pushf
and
cmc
dec
fldenv
push
dec
pop
mov
or
add
and
sahf
test
cmp
sbb
das
push
bound
jno
xchg
sub
mov
movsl
jge
and
and
lods
inc
filds
addr16
and
sarl
cli
fld
insb
pop
and
xchg
mov
mov
test
xor
mov
sbb
or
and
cltd
cmpsb
jmp
int
rolb
mov
xor
add
pusha
jmp
dec
add
inc
fisttpll
jge
fs
sbb
pop
mov
mov
jne
das
in
and
dec
or
lahf
add
jle
stc
data16
int3
and
push
addr16
sahf
aam
pop
call
jne
popa
in
mov
aaa
sbb
mov
or
shlb
les
vmwrite
mov
hlt
jge
mov
scas
sbbb
imul
mov
dec
sarb
popa
dec
call
sahf
and
out
loope
dec
and
lods
add
pushf
inc
repz
repnz
mov
mov
stos
js
push
xchg
popf
arpl
std
fisttpl
enter
jle
mov
jmp
mov
lods
std
sbb
iret
andl
cmp
inc
jnp
mov
and
mov
adc
inc
push
test
ret
lret
movsl
jae
mov
mov
jbe
mov
popf
mov
push
and
cmpsl
fbstp
push
and
xor
and
out
dec
scas
jge
insl
scas
pop
jbe
int
dec
inc
xor
mov
jno
cmc
lret
pushf
jmp
xor
mov
mov
add
lods
jecxz
cld
cmpb
int
cmp
xor
iret
xchg
pushl
pop
cmpsl
jp
mov
push
pop
outsb
jp
dec
inc
add
adc
mov
fs
test
and
aad
or
cld
addr16
sub
lret
mov
es
or
pop
or
stos
daa
test
hlt
and
fldl
mov
mov
mov
pop
in
sbb
aaa
dec
cmp
jns
popf
das
mov
andb
inc
loop
bnd
xor
ficomps
test
lret
test
shrb
jge
bound
test
pushf
and
mov
into
push
pop
test
inc
scas
popf
and
sub
cmpsl
movsl
clc
int
inc
and
mov
adc
dec
inc
call
out
das
xor
std
iret
pop
scas
mov
mov
shll
pop
xlat
pushf
dec
cmpsl
or
sbb
push
mov
cmpsl
mov
mov
lods
shrb
mov
or
jl
xorb
and
mov
inc
push
das
sub
jne
js
in
pop
jbe
and
pop
in
push
push
jp
enter
dec
and
stc
xor
test
or
fwait
pusha
cmp
cmp
adc
pop
and
js
pop
repnz
sahf
pop
pop
push
pop
pop
pop
mov
mov
repz
cld
xor
mov
lds
and
fwait
cld
pop
jecxz
push
adc
sub
das
out
cltd
mov
xchg
cld
and
lods
mov
mov
repz
in
popa
addr16
and
push
mov
mov
and
fcmove
testb
shl
cmp
lock
and
sbb
add
jbe
mov
test
movb
or
mov
and
in
jg
sti
mov
push
in
and
xor
in
xchg
out
cmp
pop
movsl
movsl
dec
mov
xor
test
test
loopne
push
out
mov
divb
add
cmp
lret
lods
fwait
movsl
pcmpgtw
std
mov
jge
stos
leave
xor
mulb
cs
and
ss
inc
sbb
lods
incb
daa
fldenv
fbld
and
popf
cli
xor
sub
and
test
adc
sti
mov
mov
inc
lahf
mov
nop
scas
mov
pusha
test
push
mov
popf
cltd
adc
mov
fistpl
test
mov
in
fs
pop
cmc
mov
cmpl
scas
mov
xor
adc
into
popf
push
in
and
push
fwait
add
cltd
fcomps
mov
iret
pop
sbb
xchg
mov
xchg
jl
dec
mov
mov
daa
mov
mov
iret
mull
dec
aam
lahf
adc
cmpsl
inc
xchg
pop
das
jno
and
repnz
mov
sbb
and
clc
or
add
dec
cmp
add
cmc
sbb
daa
aam
and
rorb
xor
add
jne
lock
mov
rcrl
push
in
push
leave
xchg
movsl
mov
push
jbe
mov
inc
hlt
das
pop
fsubrl
mov
cmpsb
int3
cmc
mov
push
clc
adc
jmp
cld
movsb
xchg
mov
push
ss
xchg
mov
push
pop
cmpsb
cmp
pop
shrl
pop
cmp
inc
cmp
outsb
aam
gs
inc
mov
enter
repnz
or
add
adc
pop
aam
cmp
sbb
idivb
adc
rcrb
fimuls
mov
dec
pop
xchg
loope
pushf
xor
pop
dec
fs
sbb
mov
mov
push
mov
sbb
movsl
clc
and
cmp
out
test
cmp
in
push
mov
jns
cmc
sbb
xor
xchg
xchg
cs
cs
inc
xor
frstor
and
outsb
pop
arpl
pop
sub
movsl
xor
movsl
jl
xchg
daa
or
and
mov
int3
cltd
ljmp
stos
aam
push
lret
inc
cmpsb
adc
rorb
pop
lods
xchg
pop
mov
xor
sbb
push
enter
sbb
test
movsb
lods
mov
cwtl
xor
sahf
insb
lds
aam
fstpt
outsb
aas
flds
inc
cld
ss
dec
xor
dec
inc
mov
cli
mov
and
ljmp
mov
push
jne
cld
and
pusha
and
stc
test
sbb
fstl
into
add
sub
adc
jle
imul
mov
fmull
movsl
jl
pop
dec
fnsave
scas
test
stos
and
inc
pop
pop
push
test
movsl
data16
and
xchg
fwait
rolb
sub
mov
mov
ja
mov
lahf
int
je
sbb
repz
ds
pop
jge
push
test
sub
fcoml
cmpsb
fs
movsl
sbb
lods
jno
aad
mov
lds
and
mov
mov
cmpsl
xor
fstpt
hlt
loope
push
fadd
cmp
add
sbb
hlt
cltd
aaa
fsubrl
pop
aad
cmpsl
and
mov
or
cmp
jmp
push
jmp
inc
lcall
mov
pushf
lock
sub
dec
into
out
mov
sarb
cld
repnz
mov
push
mov
ljmp
mov
testb
std
lods
das
aam
mov
lods
lcall
loop
outsl
int3
sahf
repnz
das
mov
fsubl
test
fwait
inc
imulb
mov
out
inc
jo
imul
fsubs
int
xor
aam
and
mov
subl
jmp
aas
test
mov
sub
movsl
out
push
dec
sbb
dec
sub
or
test
shrl
mul
div
jp
lods
mov
lods
imull
and
rorl
negb
dec
out
cmpsb
sbb
leave
mov
xor
push
dec
mov
pushf
mov
inc
andb
and
mov
nop
xlat
ds
pop
ds
in
ja
testb
fbld
test
insb
je
jge
or
rcrb
mov
dec
pop
mov
pop
fcomi
int
fisubl
jl
xor
cs
int
mov
mov
or
push
dec
icebp
in
incl
arpl
je
vcvtps2pd
sbb
jg
gs
std
jp
loope
pop
scas
push
lahf
xchg
scas
pusha
mov
idiv
jnp
testl
in
inc
insl
popa
test
dec
xor
enter
push
clc
cmp
push
jns
out
mov
stc
popa
out
gs
push
push
and
cmpsb
fdiv
xor
das
call
mov
push
sub
nop
fstpl
fidivrl
rcll
inc
dec
loop
mov
das
iret
add
push
outsb
dec
mov
cmp
out
lcall
in
sub
das
xchg
int3
int
and
cmp
mov
push
ffreep
xchg
dec
and
mov
sbb
dec
icebp
adc
xchg
int3
mov
rcll
adc
aam
mov
and
push
or
cmp
rcr
in
adc
loop
subl
test
mov
fcmovne
hlt
and
cmp
mov
inc
fidivs
out
into
leave
push
js
pop
jp
add
out
aaa
cmp
fldl
fisubrs
outsb
int
clc
int3
ljmp
ss
imul
inc
addl
cli
scas
mov
push
push
arpl
idiv
in
cmp
pop
dec
sub
das
mov
xor
inc
pop
cld
sub
fnstenv
jle
jp
lods
adc
imulb
and
and
inc
fnstenv
test
test
mov
jmp
gs
fcompl
test
sarb
lahf
std
rorb
mov
negl
mov
jae
xor
insb
pop
inc
hlt
lock
adc
push
or
fildll
test
nop
pop
repnz
andb
sub
jp
cld
mov
shlb
sub
fsubs
jnp
and
mov
outsb
pop
ficompl
push
add
leavew
insb
shlb
in
mov
aam
jns
mov
jp
inc
mov
frstor
addb
pop
lahf
pop
jge
sbb
sbb
xor
sub
pop
add
ret
mov
inc
sahf
dec
mov
ja
pop
jg
faddl
data16
rclb
mov
or
cltd
jge
sbb
lsl
mov
into
sbb
push
lock
mov
into
repz
sbb
and
sub
add
inc
outsl
gs
in
sbb
mov
cmp
loopne
jp
mov
int
popa
fs
lods
hlt
dec
test
sbb
lcall
xchg
ds
inc
lods
aam
xchg
ret
mov
and
sub
pop
js
push
ds
shll
std
push
test
mov
or
fldcw
es
popf
mov
test
fbstp
push
stc
jecxz
xchg
sbb
call
insb
pop
flds
cld
shll
adc
xchg
adc
xchg
cli
jmp
fldcw
test
arpl
out
sub
cmp
jge
jae
jle
push
in
addr16
dec
cmpsb
fcmovnbe
xor
mov
es
adc
test
je
mov
push
cmpsl
dec
inc
loopne
sub
out
sbb
jne
and
push
in
cs
dec
pusha
push
mov
hlt
sbb
mov
int3
mov
xorl
sbb
mov
repnz
mov
mov
xchg
mov
dec
and
insb
addr16
cmpsb
js
inc
pop
fisttpll
std
out
jne
and
movsl
mov
daa
mov
cmp
xchg
cld
jg
clc
push
push
mov
and
fiadds
loop
aad
mov
and
push
arpl
fcomi
stos
cli
mov
rcrl
push
and
sbb
xlat
push
fsubs
je
add
adc
cmp
jae
frstor
lods
ficomps
pop
hlt
lds
pop
sub
mov
imul
dec
in
push
jp
xor
fadds
xor
mov
sub
xchg
inc
or
fldenv
pop
das
sbbl
inc
rcr
mov
jae
hlt
push
ss
jne
xor
test
scas
push
fld
repz
fisubs
inc
xlat
ret
add
pop
mov
jle
jecxz
rcr
mov
push
iret
add
ret
rcrl
fistl
mov
rcr
je
idivb
lcall
sbb
ds
popf
xor
leave
out
mov
mov
mov
bound
test
mov
stos
xchg
leave
xchg
fdivr
and
sbb
test
das
xor
test
scas
inc
dec
imul
push
aam
add
inc
mov
jae
popf
je
xor
jns
dec
mov
xor
sbb
ja
sub
mov
vmovdqa
mov
push
imul
std
shll
clc
ljmp
jge
pop
jb
cli
mov
ljmp
pusha
jge
cmpl
movsl
repnz
mov
fiadds
stc
out
jb
dec
popa
jb
leave
int3
xchg
or
adc
jmp
rcrl
std
cmpsb
inc
dec
jmp
stos
mov
call
test
inc
sbb
sahf
mov
cmpsl
ficomps
jge
lret
mov
mov
aam
std
cmp
xchg
cmp
sub
ret
jmp
pop
test
mov
sbb
sbb
xor
cmp
rcll
ficoms
int3
std
sbb
call
int
mov
jbe
fldcw
mov
jge
ja
fneni(8087
inc
mov
pop
push
ffreep
pop
mov
mov
pop
mov
sub
cmpsb
pop
mov
xchg
or
mov
push
xchg
mov
jnp
pop
add
pop
inc
std
jb
aad
repz
pop
scas
inc
pop
mov
pop
cmp
mov
mov
lods
mov
mov
popf
int
mov
lahf
cs
pop
arpl
mov
sbb
call
pop
pop
mov
xchg
sbb
into
ret
lret
mov
mov
pop
je
test
inc
insb
and
in
xor
mov
in
fdivrl
inc
lods
pop
xchg
jb
sbb
sub
push
pop
xchg
scas
mov
mov
cltd
aas
shll
cld
mov
insb
hlt
cmpb
loop
mov
add
mov
clc
lods
les
mov
out
jge
mov
sbb
stos
dec
jb
lods
dec
and
rcrl
cli
test
ljmp
jnp
test
mov
lret
out
add
mov
pusha
sub
shrl
mov
fsts
add
inc
enter
int
and
add
sti
and
test
jne
testl
mov
aaa
test
lret
outsb
fwait
out
mov
mov
mov
xchg
push
pop
cmpsb
mov
js
mov
jl
rcrl
mov
cmp
or
cmc
daa
xor
jno
das
lds
out
fmull
das
addr16
in
mov
push
dec
cmp
xor
subl
test
int
mov
cwtl
push
cmp
in
shll
mov
push
enter
sub
std
test
pop
sarb
dec
outsb
in
mov
int3
xchg
mov
mov
xor
push
cltd
dec
nop
cwtl
pop
sbb
mov
fstps
jnp
sbb
xchg
rorl
push
dec
mov
das
inc
mov
jbe
mov
adc
mov
xchg
mov
out
xchg
push
mov
and
imulb
mov
add
mov
mov
inc
sub
mov
mov
in
push
cmpsl
dec
addr16
mov
jp
bound
xchg
cmp
mov
and
das
leave
iret
lods
negl
lods
aad
xchg
test
xchg
xor
dec
pop
mov
loope
lret
xchg
fsts
add
lahf
daa
fs
rolb
mov
test
jle
sbb
push
jecxz
fsub
jp
mov
shll
cmpb
xor
fildll
add
cmp
mov
mov
pop
das
subw
adcb
mov
fistl
and
movsb
sub
and
hlt
mov
add
cld
test
mov
or
in
pushf
outsb
test
into
sub
das
adc
inc
xchg
int3
movsb
pop
das
rcrb
cmp
jle
cs
or
in
lods
outsb
fucomi
incb
dec
dec
ss
lds
sahf
inc
mov
sbb
and
scas
and
sub
sub
mov
jae
pop
xor
xchg
push
nop
into
and
loopne
jle
adc
testb
addr16
push
adc
mov
sub
cmc
popa
insb
mov
or
adc
xchg
dec
mov
scas
or
movsb
lret
lcall
lret
adc
dec
std
lods
mov
xchg
mov
mov
movsb
cmp
in
mov
imul
mov
inc
or
mov
mov
fstpt
imul
sbb
mov
fstpl
inc
out
repnz
movsl
inc
cmp
pop
pusha
ret
mov
fldt
pop
data16
xchg
jle
mov
scas
sub
shl
pop
scas
iret
int3
pop
test
sbb
pop
xchg
xchg
imul
mov
in
pop
pop
sbb
lret
jnp
scas
mov
inc
push
addb
std
aam
pop
popa
dec
je
mov
insb
jae
mov
or
rcll
sub
int3
sbb
mov
sub
push
pop
rorl
out
mov
in
sub
aad
push
daa
lcall
ret
lods
add
fdivl
or
jle
lods
mov
push
shll
adcl
and
notb
mov
mov
mov
inc
or
jo
shl
xor
dec
xor
out
fsubrs
pop
imul
adc
rclb
lods
ja
std
push
insl
repnz
and
call
mov
sbb
rcr
jo
mov
shl
xchg
sbb
xor
cwtl
pop
jbe
cmpsb
jge
xchg
clc
fsts
lahf
mov
xlat
mov
shrb
nop
int
cmpsb
and
cs
stc
fmull
or
adc
int3
jl
sub
lods
sbb
mov
and
add
out
pusha
inc
mov
data16
rolb
jo
sbbb
hlt
ljmp
or
fldenv
jl
sbbl
or
jge
and
lock
mov
cmc
dec
sub
sub
mov
mov
pop
xchg
push
mov
mov
xchg
dec
adc
jmp
andl
std
xchg
xor
pop
ret
cmc
xor
lods
jge
aam
and
mov
pusha
mov
and
mov
mov
repnz
sti
stos
repnz
ja
mov
subl
xor
out
and
repz
fdivrl
mov
notl
mov
fstps
pop
pop
pop
sbb
jge
cmpsb
leave
mov
jb
or
fadds
leave
mov
insb
movsl
jge
dec
xchg
sarb
andl
xchg
iret
addr16
fsub
insb
inc
push
lret
test
es
jns
add
push
xchg
push
mov
mov
fidivl
imul
incb
pop
lret
mov
adc
testb
sarl
fdivs
mov
mov
adc
jns
xor
mov
xor
add
and
jle
jp
inc
sub
lods
cmp
mov
mov
sbb
out
cmp
xor
push
adc
mull
mov
push
add
cmpsb
lods
adc
mov
es
mov
cmp
mov
mov
fnstenv
mov
jge
arpl
ss
int
test
arpl
test
lods
sbb
or
fisttpll
mov
out
mov
push
mov
sti
into
outsl
mov
or
sbb
cltd
jbe
pop
fcmovne
mov
scas
dec
repnz
cmc
sbb
push
cmp
ja
xchg
or
xchg
in
mov
repz
insl
mov
mov
jns
fcoml
mov
lods
adc
and
lcall
icebp
dec
jge
xchg
jbe
gs
cmpsb
sub
inc
lods
fldl
mov
test
sbb
xchg
jae
mov
xor
jl
flds
jecxz
mov
cmp
pop
int3
xchg
jb
cmc
sbb
les
pop
and
mov
cmp
mov
push
call
test
orb
fwait
xor
pushf
icebp
mov
lea
inc
or
jo
es
xor
cs
cmpsb
push
mov
mov
push
and
mov
mov
jp
movsb
cmp
out
and
and
ret
mov
cmc
xchg
mov
in
mov
xor
test
mov
sub
xchg
repnz
mov
lods
cmp
mov
cltd
add
lods
in
add
lods
push
pop
xor
sub
movsb
xchg
out
cmp
sarl
mov
das
xlat
add
les
mov
jge
in
xchg
cli
test
mov
outsl
mov
loope
cmp
xchg
jmp
jnp
leave
movsb
ret
movsl
out
mov
lret
dec
and
addr16
adc
test
fwait
and
fstps
add
jle
mov
add
mov
gs
mov
arpl
push
xor
cmc
repz
in
xor
scas
movsb
int
lods
jb
sub
aaa
xor
pop
or
and
and
movsl
jo
mov
mov
pop
jae
mov
mov
pop
inc
mov
mov
movl
ret
in
fidivs
ret
sbb
into
add
test
cld
les
scas
fsts
and
insb
enter
dec
xor
outsb
push
scas
outsl
jmp
cmpsl
test
dec
mov
mov
sbb
cmpsb
es
popf
cmp
mov
xor
mov
cmp
outsb
clc
or
mov
ret
xor
cmp
and
jnp
jmp
mov
mov
push
les
fs
or
or
std
pop
subl
xchg
cmp
adc
pusha
xor
mov
push
fnstcw
mov
int
cmp
in
adc
aas
test
cmp
aas
adc
aad
popf
jbe
sbb
mov
push
pop
fxch
lret
scas
movsl
jo
pop
or
test
jle
cmpl
ficoms
mov
and
or
and
mov
outsb
sub
shll
cmpsl
dec
es
xchg
dec
scas
adc
arpl
add
js
sbb
mov
jo
fcomp
mov
icebp
repz
sti
and
sub
leave
add
in
flds
lds
xchg
call
adc
loope
mov
push
mov
push
aam
mov
and
int
xlat
movsl
sbb
mov
pop
lock
add
lods
test
cmc
push
mov
xor
pop
out
or
stc
scas
inc
mov
es
push
scas
mov
es
test
jle
lds
mov
bound
scas
gs
sub
pusha
add
and
imul
out
mov
sbb
sbb
jmp
fwait
xchg
cwtl
ret
je
outsl
in
mov
mov
pushf
and
movsb
shll
mov
sub
lahf
mov
inc
fidivs
push
and
icebp
and
mov
insb
mov
push
lods
mov
lea
mov
pop
rorb
jp
mov
fstps
es
aam
rolb
mov
popf
clc
out
pop
popa
daa
hlt
mov
push
add
repz
hlt
and
lea
into
adc
loopne
push
insb
roll
mov
sub
or
js
cmp
push
int3
lods
repz
test
cmpsl
bswap
xchg
jge
push
cs
dec
inc
pusha
jb
ja
inc
in
cmpsb
mov
enter
fsubrl
xchg
jne
cmp
push
sub
faddp
sub
cmp
or
cmpsl
cmp
and
lcall
push
push
mov
es
imul
mov
adc
push
push
mov
sbb
xor
repnz
and
dec
sub
push
les
popf
scas
jg
scas
std
mov
aad
push
jo
rcrl
jecxz
sub
mov
rcrl
cmp
test
mov
xor
in
fs
lret
test
test
scas
mov
aad
cld
jmp
sahf
jp
cmpsl
push
fcomi
sbb
sarb
cmp
or
jb
mul
scas
loope
int
mov
inc
fcmovnu
dec
out
scas
outsb
xor
aam
pause
mov
jecxz
into
and
std
mov
sbb
push
mov
and
lahf
out
cmp
xchg
ds
insb
lds
imul
frstor
outsb
mov
add
adc
adc
mov
mov
mov
mov
jae
lahf
fnstenv
out
xor
rolb
mov
cmp
sub
out
lods
mov
daa
sbb
int3
test
cmc
mov
repnz
push
cmp
stos
loop
test
repnz
outsl
and
xchg
push
mov
daa
sahf
cli
xchg
fdivrl
lcall
jl
lods
push
cmp
adc
dec
mov
pop
addr16
cmpsb
mov
shll
aas
inc
and
mov
aad
sub
aas
and
into
addl
push
flds
psraw
mov
arpl
cli
mov
and
stos
adc
sahf
aaa
ds
mov
add
inc
mov
lods
jge
aam
inc
adc
pop
lea
pop
jge
mov
insl
and
inc
push
inc
and
push
mov
mov
and
mul
repz
ds
sar
mov
cmp
shll
hlt
daa
jns
sub
icebp
and
inc
loopne
test
jbe
fistpll
pusha
xchg
push
hlt
lods
je
clc
in
push
cmpsb
mov
sbb
fsts
cmp
call
push
mov
mov
mov
push
lahf
jl
mov
movsl
inc
loopne
or
es
and
scas
lods
scas
out
xchg
cmc
jge
and
repz
adc
sti
movb
mov
push
gs
outsb
cmc
and
xchg
insl
push
jo
dec
or
pop
dec
rsqrtps
imul
sbb
cmpsb
cld
fldt
icebp
sub
dec
repnz
xchg
cmp
je
jl
subl
xchg
int3
addr16
sub
sbb
mov
mov
loopne
cwtl
xchg
cmpsl
addb
shl
xchg
xchg
loopne
loop
or
aam
es
mov
lods
sbb
movsb
scas
cmpsb
das
mov
out
int3
clc
cli
add
frstor
jmp
pop
sbbb
imul
aam
sub
int3
hlt
test
sub
inc
scas
decb
xor
fdivs
aam
repz
lcall
fildl
xchg
jns
push
das
xchg
and
not
scas
sub
flds
pop
out
mov
out
push
shlb
adc
push
je
push
and
test
jae
pop
pushf
xchg
ret
in
and
push
cld
push
inc
insl
xchg
xchg
aam
out
loopne
or
push
jae
lcall
outsl
les
mov
mov
mov
enter
xor
cltd
test
scas
flds
cmp
imul
pushf
dec
sbb
sub
test
test
outsb
jmp
std
or
adc
out
jb
int
adc
xor
jno
movsl
xor
lahf
stos
es
inc
xchg
call
mov
movsl
jg
and
repz
inc
push
sub
lods
cmpsb
dec
and
ret
adc
push
dec
je
loopne
aad
jge
push
cld
jl
mov
mov
lahf
or
pop
pop
int
jle
lcall
sarl
sbb
lods
xlat
jae
mov
repnz
lret
aad
into
xor
mov
imul
sahf
daa
inc
ljmp
stos
imulb
sbb
aaa
dec
fistl
out
cmp
add
addr16
mov
divb
loope
aaa
sbb
mov
sbb
orl
cld
fwait
int3
fsts
pop
insb
rolb
rcrl
popf
mov
aad
mov
mov
mov
hlt
mov
mov
std
xchg
ljmp
repnz
jecxz
xchg
mov
iret
adc
or
dec
inc
scas
dec
jp
xchg
test
push
xlat
in
pop
push
jae
mov
add
das
dec
xor
sbb
mov
rcrb
lretw
and
lds
sbb
aad
nop
xor
lret
inc
dec
mov
and
in
sbb
outsb
pop
mov
push
jecxz
gs
pusha
mov
inc
jecxz
mov
sbb
loopne
mov
out
pop
mov
mov
lock
or
idivb
inc
ret
pop
cmpsb
xchg
sbb
pop
and
lods
and
mov
mov
mov
mov
adcl
add
sub
jo
in
xchg
mov
rcrl
and
pop
mov
sub
xchg
mov
out
lret
mov
scas
xor
push
cmpsl
fsts
fidivs
push
fdivp
xor
cmp
out
mov
sbb
inc
mov
out
popf
pushf
jge
scas
jp
mov
in
pop
dec
xchg
daa
mov
push
add
and
out
je
sar
les
mov
pop
es
cmp
lds
test
cli
int
lock
push
and
and
push
pop
cmp
mov
hlt
cmp
fisubl
rcll
jno
or
mov
jo
and
fimull
call
repnz
ljmp
xor
les
mov
das
inc
clc
cmpb
inc
mov
call
sarl
fstpl
and
dec
dec
adc
ja
test
jg
fstps
out
xor
cmpl
fmull
cltd
fmull
adc
pop
xchg
fcmovne
shlb
and
sub
mov
mov
and
push
mov
jno
jne
pushf
sub
stos
pop
xor
jns
xchg
sbb
leave
movsb
out
cmp
push
sub
pushf
xchg
das
cmp
flds
mov
mov
sub
sbb
test
bound
fnsetpm(287
mov
addr16
repnz
adc
daa
mov
mov
imul
xlat
lea
push
loopne
sbb
or
or
je
fistl
push
and
sahf
lock
lahf
mov
jge
mov
xchg
or
cld
push
mov
inc
fisubs
mov
outsl
pop
mov
mov
inc
mov
lahf
testl
loopne
movsb
js
mov
testb
call
mov
xchg
sbb
mov
scas
jae
dec
jb
shrb
fnstenv
mov
popa
sbb
mov
scas
out
cmpsb
dec
lahf
cmp
lods
frstor
xchg
jo
sub
inc
cld
add
pop
inc
dec
js
fsubrl
jns
cld
and
cmpsb
movsb
ds
jle,pn
sub
and
and
shrb
or
xor
and
sbb
in
lcall
addr16
push
dec
mov
andl
mov
rcl
sub
xor
xchg
pusha
test
jl
inc
cs
sbb
mov
fadd
and
in
mov
pop
pusha
nop
fdivl
inc
and
cmp
jae
or
out
and
xchg
ret
sub
sub
movsb
fimull
lret
in
and
xchg
mov
mov
aad
mov
ds
cmc
repz
and
enter
out
or
sbb
cmp
test
and
pop
pop
test
inc
les
pop
fxch
pop
mov
sbb
repnz
test
add
pop
mov
xor
fldcw
jne
je
jle
jmp
int
push
cmp
push
mov
addr16
aad
sub
push
mov
cld
cmpsb
and
out
clc
mov
mov
loopne
fcmove
int
or
inc
into
xchg
and
mov
mov
and
mov
cmc
jle
mov
test
fsubrl
popl
pop
sti
cmp
inc
xchg
cmp
xchg
pop
ror
lock
fxtract
mov
popf
sbb
mov
add
stos
mov
cmpsb
add
xor
pop
add
iret
lret
xchg
arpl
aam
xchg
mov
daa
das
movsl
mov
movsl
sub
fcompl
pop
inc
cmp
and
cmp
shlb
xchg
loopnew
dec
imul
es
pushf
adc
in
call
addr16
mov
fucomip
inc
push
xor
ret
repnz
int
out
pop
les
fucomi
inc
lock
js
mov
lahf
xchg
rcrl
ret
aaa
pusha
addr16
sbb
xchg
push
std
inc
insb
shlb
cld
dec
out
stos
rorl
push
cmp
dec
dec
pop
movsl
mov
mov
das
es
jns
aas
roll
mov
push
lea
movsl
mov
add
dec
rolb
jno
push
ljmp
out
das
adc
mov
cli
jae
inc
outsb
xchg
sbb
sarl
scas
mov
in
inc
out
xor
out
adcb
sub
mov
out
loop
sub
jg
test
imul
jns
mov
out
jmp
pop
arpl
lahf
mov
cli
stc
pop
iret
mov
mov
mov
lods
dec
insb
pusha
inc
mov
or
inc
test
xor
test
lods
mulb
sub
sbb
enter
clc
add
push
mov
mov
shlb
jae
je
sbb
mov
adc
cmp
add
les
sub
je
jge
cmp
out
je
jecxz
ljmp
mov
and
out
mov
dec
inc
push
or
xchg
movsb
in
std
cmpb
pop
int
out
jno
xor
mov
jp
mov
ret
mov
icebp
icebp
mov
add
mov
adc
orl
mov
scas
fldlg2
push
in
pop
rclb
out
mov
sahf
shlb
es
notrack
xchg
sbb
mov
popa
fldlg2
or
cmp
out
sarb
jmp
leave
adc
out
cmp
js
insb
mov
pop
lret
movsb
sarl
fsubl
add
sub
mov
add
mov
popf
out
or
stos
pop
rcr
adcb
inc
fadds
xchg
and
push
inc
push
clc
pop
xchg
out
ror
and
rolb
jns
mov
cmpsb
rol
push
pop
jmp
cwtl
and
loope
std
dec
imul
push
mov
mov
popf
inc
inc
or
sbb
filds
stos
lds
mov
loopne
test
stc
fmull
cmp
test
int
inc
hlt
icebp
push
ds
adc
nop
push
dec
push
aam
jl
fsub
mov
mov
and
jns
sbb
andl
dec
jge
fxch
sarl
leave
out
fidivrs
mov
mov
push
hlt
and
outsl
mov
lcall
push
sbb
mov
cmp
sub
mov
movsb
aaa
in
decb
cli
cltd
lahf
or
into
jecxz
stos
cmp
sub
mov
popf
stos
lds
cmpsb
push
push
into
scas
in
movsb
xchg
or
mov
push
jl
repnz
cmp
loopne
pushf
sbb
test
rclb
loope
mov
inc
cmp
in
and
out
dec
in
cmp
mov
jge
mov
or
int
daa
push
retw
lcall
push
adc
shr
loopne
cmp
fdivrl
xchg
int
je
push
sahf
dec
mov
fsts
sbb
mov
and
dec
cmp
decb
fxch
jge
cltd
mov
mov
out
mov
sub
mov
mov
dec
sahf
in
mov
inc
test
add
sbb
pushf
pop
hlt
dec
dec
out
inc
inc
push
pop
das
mov
scas
out
mov
inc
jge
mov
adc
test
loope
out
and
mov
aam
ret
pop
push
js
mov
sbb
pop
dec
jl
and
in
cmp
inc
mov
adc
jge
xorb
mov
adc
push
je
in
push
add
mov
xor
cmp
sbb
leave
pop
and
mov
and
and
ret
mov
mov
push
popf
int
mov
adc
xor
mov
test
stos
mov
je
and
or
movsb
jb
flds
push
loope
xchg
fnsave
testl
add
mov
mov
inc
sbb
loope
test
cmp
dec
xor
mov
add
fisubl
faddp
repz
xor
gs
iret
xor
xchg
mov
and
fisubrs
adc
fucomip
or
pop
aas
fdivl
aam
and
cmpb
mov
pop
dec
pop
imul
mov
add
out
cs
or
jb
cmp
sub
stos
je
ja
mov
testb
test
inc
sarl
xlat
cmp
xor
test
push
mov
xor
lods
pop
data16
and
popf
cmpsb
in
and
flds
push
cwtl
shrd
mov
lahf
jge
xchg
cld
push
out
lcall
es
in
and
add
mov
jmp
push
push
fisubrs
dec
jg
stos
cmp
add
int
xchg
mov
xchg
jae
cmp
int3
jp
push
adc
into
test
mov
pop
fsubs
mov
jnp
mov
jno
xchg
inc
and
clc
clc
mov
sub
or
fs
cmp
sahf
leave
push
and
out
scas
subl
lret
fidivrs
pop
int3
cmpsb
pop
push
mov
insl
mov
and
int3
insb
mov
sbb
mov
in
jmp
dec
sahf
pusha
test
mov
and
xor
xlat
std
push
push
jno
dec
push
jl
dec
jge
sub
push
add
bound
cmp
pusha
subb
adcl
es
xor
out
inc
out
sbb
xor
jge
cmpsb
push
inc
movsb
dec
and
cmp
jg
jecxz
cmp
push
scas
pushf
dec
or
push
aad
mov
xchg
loope
and
fstps
into
das
std
sbb
xor
jp
jns
stos
xor
popf
jecxz
adc
jns
inc
pushf
push
jle
push
pop
mov
movsb
lods
test
mov
xchg
daa
mov
cmp
ret
das
mov
or
test
inc
push
dec
and
outsl
mov
fwait
testb
cmpsb
movsb
push
ror
stc
decb
fnstsw
mov
sub
out
test
add
in
jo
test
lock
test
std
movsb
jbe
std
pushl
mov
push
cmp
dec
add
js
fisubrs
and
pop
mov
lret
sub
sbb
dec
in
dec
lds
jl
jge
es
adc
addl
outsl
gs
in
scas
stc
test
jp
in
subl
ja
fiadds
lods
out
jmp
mov
dec
sbb
int3
rcrl
or
inc
push
out
cld
ss
pop
mov
jb
sub
mov
fs
pusha
inc
mov
sahf
xor
iret
lret
pop
jg
jl
jle
ret
rcr
jno
lods
mov
mov
shll
faddp
jo
xor
sub
cmp
sbb
in
add
filds
mov
sarb
mov
pop
mov
lods
xchg
fwait
inc
sbb
dec
es
jle,pn
dec
jle
scas
mov
sbb
mov
add
js
cld
cmp
cmc
and
movsb
movsl
xchg
add
ja
dec
out
mov
dec
xchg
pop
jb
and
cld
jl
fsubrs
insl
in
faddp
dec
loope
loop
xor
dec
inc
insl
sub
cmp
cmpb
lcall
mov
push
lock
inc
outsl
xchg
scas
and
mov
jge
xor
scas
cmc
pop
mov
jge
test
jnp
mov
dec
pop
inc
mov
flds
pop
mov
mov
xor
int3
cmpsb
push
jp
push
std
and
int
push
out
inc
inc
jae
les
xor
or
lahf
and
push
add
sahf
je
mov
cmpsb
test
shl
push
cmp
cmp
testb
dec
cmpsb
stos
mov
ret
cmpsb
pop
in
xor
iret
pushf
test
test
lock
jecxz
mov
mov
ret
mov
test
in
pop
repnz
dec
mov
fs
shl
das
sti
mov
jp
js
mov
loopne
in
and
sbb
test
aaa
shrb
fstl
mov
pushf
adc
fmuls
sub
cwtl
cmp
inc
cmp
xchg
fidivs
cmp
or
jge
aad
shll
push
adc
aas
jge
cltd
ficompl
mov
push
cld
mov
loopne
push
aas
rcrl
jle
jb
movsb
dec
mov
lods
mov
add
ljmp
lock
mov
aad
fwait
nop
mov
movsl
cltd
flds
xor
adc
dec
mov
hlt
in
sbb
ds
jge
push
lods
or
dec
les
inc
adc
xlat
outsl
pop
cmp
mov
lcall
push
push
cmpl
pusha
rcll
gs
in
dec
data16
movsl
jb
inc
fucomp
xchg
fsubrl
push
cmpsb
jae
ret
scas
scas
jecxz
popa
cltd
daa
mov
xchg
cli
imul
idivb
pop
jl
sbb
scas
mov
xchg
push
dec
cmpb
jge
outsl
je
je
inc
test
nop
test
stos
jo
cmpsb
xchg
es
mov
jbe
xor
in
int3
push
mov
fsubs
lock
sub
rolb
cld
sub
mov
cmc
test
mov
loop
lods
test
cli
mov
fldenv
xor
cmp
xor
minps
xchg
cs
and
mull
adc
push
mov
mov
iret
movsl
imul
int
sti
bound
mov
push
lahf
sbb
adc
leave
dec
sbb
push
lds
xor
push
cld
add
call
test
xlat
mov
sub
fnstcw
jle
addr16
xchg
rcll
cli
imul
xor
add
pop
in
aam
and
jle
cmc
iret
or
sti
movsl
jns
inc
dec
jl
sbb
adc
scas
pop
mov
lods
cmp
mov
mov
mov
xchg
and
daa
repnz
and
pop
inc
or
push
in
das
push
fstps
out
pop
jge
aam
pop
add
pop
xchg
xlat
ss
addr16
adc
dec
test
out
clc
xlat
fwait
mov
imul
cmpsb
cmp
movsl
mov
insb
sub
dec
jge
sti
jae
repz
pop
mov
jnp
push
or
pop
mov
jecxz
outsl
inc
lea
push
jno
cmp
in
stc
sub
push
inc
mov
pop
jg
mov
mul
pop
cmp
stos
and
sub
mov
into
push
lds
insl
int3
scas
mov
stos
les
push
cld
pop
xchg
std
les
push
outsb
outsb
mov
test
or
lret
adc
xor
mov
cwtl
sub
xor
pop
sahf
jae
xlat
dec
loopne
sahf
out
jnp
sarb
movsb
mov
je
out
sub
loopne
mov
mov
cmp
push
and
in
xor
inc
jl
inc
inc
movsb
std
ss
test
jge
cmp
xor
test
repnz
mov
fisubs
repz
test
inc
cmp
push
xlat
inc
mov
dec
popf
pushf
cli
in
icebp
mov
pop
das
mov
jg
jmp
mov
sbb
and
cmp
or
sti
std
mov
pandn
push
sbb
jl
inc
inc
enter
fwait
mov
mov
test
mov
scas
push
cmp
jae
or
fcoml
ret
repz
lods
adc
xor
ljmp
inc
and
and
adc
push
js
clc
push
sub
popf
push
in
fmul
pop
scas
addb
imul
aad
jecxz
xor
out
fcom
push
je
or
xlat
mov
push
dec
pop
adc
xor
fists
or
inc
int3
shlb
xor
fcoml
in
int3
outsl
testl
mov
mov
repnz
sbb
out
sub
lock
pop
sbb
and
pop
add
fucomip
pushf
fsts
popa
cmp
scas
bound
lahf
fsubr
imull
cs
out
dec
xchg
mov
ss
imulb
lock
pop
std
std
inc
aad
mov
out
test
out
cmp
cmp
sbb
dec
xor
popf
out
xorl
scas
pop
xchg
and
sbb
movsl
xchg
lods
and
dec
je
imulb
inc
out
dec
loop
andl
int
loope
xchg
daa
lods
push
gs
and
mov
in
cmp
mov
mov
pop
ret
jp
mov
push
popa
adc
test
mov
lods
pusha
xor
out
jge
cmp
adc
inc
dec
cmc
mov
mov
repz
movsb
mov
cmpsl
out
lods
jo
out
cmp
in
push
mov
cmpsl
pop
and
mov
mov
js
cmp
aas
inc
les
test
test
repnz
push
xchg
scas
xchg
mov
jle
xor
leave
add
xor
repnz
and
in
push
cs
je
call
xchg
scas
jg
push
scas
jae
or
and
test
ret
xor
cmp
dec
push
repnz
lret
jmp
sbb
imul
xchg
repz
lret
add
out
jmp
xor
push
or
fsub
adc
mov
mov
pop
jmp
mov
cmp
add
dec
fwait
std
sarl
xor
sbb
xchg
pop
push
fidivrl
inc
and
repz
cmpsl
popf
pop
hlt
mov
mov
aam
test
nop
adc
jle
push
cld
scas
sbb
push
mov
pop
and
pop
lret
ror
cltd
sub
fnstcw
mov
gs
adc
xchg
adc
add
rclb
dec
xchg
lds
and
xlat
daa
xchg
lret
mov
push
dec
push
imulb
jmp
fsin
sbb
sbb
decb
lods
dec
movsl
pop
xchg
popf
xchg
in
jge
fptan
push
sbb
push
sti
xchg
shlb
push
and
mov
xor
or
add
push
subl
and
jl
rcrb
in
jbe
dec
add
push
sbb
push
shlb
cld
fisubrl
jp
fsub
mov
repz
fucomp
imul
xchg
dec
and
ds
sub
dec
inc
inc
dec
call
xor
lods
out
test
aam
fistpll
cld
lcall
add
inc
adc
fwait
lahf
movsb
test
imul
aas
or
rcl
jge
test
mov
dec
outsb
andl
aam
push
loop
pop
ja
xor
fucompp
mov
daa
pop
ss
lods
lods
dec
test
push
fcmovnbe
movsb
adc
scas
sbb
mov
xchg
in
xlat
insl
push
ss
push
rorb
rcrl
cmpsb
sti
fucom
das
scas
mov
add
scas
dec
loop
loope
clc
cs
sbb
stos
push
sub
pop
mov
and
ret
and
sti
adc
fdivrl
test
mov
cmp
loop
mov
mov
test
icebp
lret
lds
and
loope
adc
sar
mov
mov
shrl
dec
gs
data16
fadds
rolb
and
movsl
jns
aaa
pop
add
mov
cld
jge
ret
pop
jg
jno
and
sbbl
outsl
je
lds
push
mov
mov
ja
mov
sub
mov
int
lret
mov
sbb
push
jg
cmpsl
and
in
sub
mov
das
pop
out
lods
loope
inc
or
pop
repz
jle
idivl
inc
or
sti
fcmove
mov
pop
xchg
sbb
lods
scas
mov
mov
mov
adc
and
call
and
mov
adc
mov
rorb
stos
jg
test
dec
out
aam
int3
inc
jnp
fadd
stc
mov
dec
and
fidivrl
mov
cld
test
jo
jle
cmpsb
jb
ficoms
incb
mov
cmp
mov
clc
xor
and
jp
and
mov
scas
cmp
out
inc
mov
not
orl
push
les
adc
loopne
mov
cld
lock
das
mov
pop
push
cmp
cmpsl
pushf
mov
lock
frstor
loope
mov
enter
test
jne
clc
sbb
movsb
icebp
lahf
xchg
push
pop
imul
cmpsb
test
sbb
test
jne
pop
es
outsl
xor
int
dec
in
pop
adcb
jmp
push
jmp
fstpl
mov
ret
vunpckhps
mov
cmp
movsb
scas
movsl
gs
scas
loope
xchg
or
and
jge
inc
jmp
dec
hlt
lret
repnz
test
loop
inc
popf
ss
fisttps
scas
ss
movsl
clc
stos
inc
pusha
dec
or
jp
sbb
scas
sarl
add
fs
aam
sahf
fstps
adc
data16
mov
lret
inc
pusha
push
pop
insb
lds
idivb
stos
fnstcw
pop
xchg
xor
inc
popa
scas
arpl
cmpsb
popa
push
addr16
insb
fisttps
pop
pop
sbb
fmull
jmp
xor
and
scas
rcl
dec
out
iret
mov
xor
lret
cmp
enter
adc
imul
sbbb
mov
push
dec
das
je
scas
pushf
add
aam
sbb
inc
and
data16
cmc
cmpsb
jb
test
test
sti
mov
push
sub
adc
xchg
sub
aam
dec
jnp,pn
lcall
add
hlt
pusha
lods
inc
lahf
sbb
ljmp
std
fldcw
add
popa
push
fbld
hlt
test
jne
stos
push
out
lea
pop
and
mov
add
std
dec
jge
mov
mov
pop
ss
sub
mov
test
ss
std
adcl
lret
ljmp
gs
xchg
stos
push
sbb
xor
inc
xor
push
fldt
inc
mov
je
cmpb
push
jo
mov
nop
idiv
into
jge
bound
push
test
gs
insb
lock
jae
push
ja
and
and
add
mov
mov
test
jmp
xchg
push
inc
push
dec
sbb
cmp
iret
or
les
lods
loop
mov
roll
xchg
sbb
dec
cmp
jle
es
mov
iret
or
mov
jbe
outsb
and
mov
sti
sub
push
stos
xchg
jp
out
mov
lods
mov
inc
adc
inc
dec
cld
int3
cmp
add
mov
movsb
mov
pusha
jl
mov
and
xchg
add
pop
push
in
int
out
mov
out
mov
ret
inc
cld
scas
push
cmp
pop
movsb
dec
aad
mov
je
pop
imul
xchg
and
sub
cmp
push
movsb
xor
mov
or
dec
repz
outsl
adc
loop
idivb
aaa
mov
cs
scas
mov
les
in
push
ss
out
pop
in
ja
in
mov
dec
ja
inc
inc
pop
jge
sub
inc
loop
fiaddl
sub
push
cs
dec
sub
xchg
mov
cmp
jle
leave
test
jle
repnz
fsub
mov
pop
test
imul
scas
sbb
scas
mov
sub
mov
aad
or
mov
mov
mov
mov
data16
pop
push
mov
cmp
ds
mov
pop
dec
pop
mov
loopne
cmp
scas
dec
and
lods
cs
push
loop
stos
sbb
jecxz
addr16
flds
or
mov
sub
and
rcrl
and
in
add
sub
pusha
pop
jae
jl
mov
fdivrp
ss
adc
sbb
pusha
add
sti
mov
test
fiadds
mov
mov
idivb
jp
pop
aad
flds
insb
mov
mov
aad
jge
fs
lea
mov
es
cmp
adc
add
and
mov
in
xor
inc
shl
sub
aaa
inc
lods
mov
iret
push
mov
mov
gs
lds
in
lods
xchg
in
cmp
xlat
pop
call
repnz
mov
xlat
ss
mov
and
lret
sbb
mov
xor
mov
sub
lock
iret
sbb
fsubs
mov
add
inc
mov
or
in
xchg
sbb
mov
jbe
mov
mov
out
out
xchg
iret
gs
test
xchg
cmp
test
or
sub
scas
mov
cmp
stos
fsubrl
loopne
js
imul
or
sub
mov
mov
andl
cwtl
or
adc
popf
clc
cld
test
mov
jns
inc
bound
push
push
mov
fldt
jge
mov
popa
inc
pop
mov
fmul
pop
out
jbe
lds
lods
sbb
push
pusha
lcall
inc
dec
jl
dec
in
fldcw
fisubrl
mov
aaa
sbb
das
lods
push
test
lfs
push
les
mov
mov
sbb
imul
sub
cld
xor
mov
xchg
and
pop
mov
mov
mov
add
std
into
cmp
into
pushf
jb
pop
mov
test
add
mov
mov
jmp
mov
es
ret
mov
push
mov
in
sbb
cmpsl
mov
inc
pop
clc
mov
jmp
test
push
add
mov
test
fstps
cmp
aam
mov
and
and
sub
xorl
lahf
pop
addr16
incb
mov
adc
cmp
pusha
xor
jl
lahf
in
cmp
in
call
sbb
cld
out
cmp
data16
out
out
test
das
adc
inc
movsl
push
cmpsb
jmp
fsub
push
scas
dec
jbe
insl
movsl
lcall
push
call
or
addr16
iret
jl
int
add
jp
std
mov
popf
test
or
xchg
xor
out
mov
xor
enter
subb
and
insl
jmp
scas
outsl
inc
pop
and
push
jecxz
dec
rcll
lahf
jl
add
pop
sub
in
ret
insb
imul
xor
ja
fnstcw
or
and
dec
inc
jl
mov
fsubr
sti
mov
jbe
into
in
sub
rorb
fstpl
aam
std
xor
shrb
mov
popf
fsubp
fdivr
sub
in
int
int
cld
inc
jnp
mov
aam
jp
scas
push
mov
lahf
jle
pushf
mov
xchg
cmp
aas
dec
push
cld
jae
dec
fsubrl
mov
fcoms
loope
insb
cs
arpl
adc
addr16
std
flds
mov
adc
push
lahf
push
shll
adc
xor
dec
adc
cmp
fcoml
inc
jbe
cmp
scas
pop
xchg
nop
or
test
out
iret
mov
mov
popa
bound
std
out
out
outsb
repnz
incb
cmpsb
stos
test
daa
push
scas
and
fldenv
mov
fcoml
pop
mov
mov
mov
gs
imul
mov
enter
daa
mov
jle
pop
mov
ret
out
and
lds
cmpsb
mov
and
stc
fisubs
cmpsl
scas
dec
cmpsl
test
repnz
cld
inc
jb
leave
push
dec
mov
sub
loope
ljmp
enter
mov
jle
arpl
nop
xchg
mov
pop
popa
mov
mov
jae
cmp
sub
adc
sbb
test
dec
jge
in
and
push
sbb
mov
std
xchg
andl
dec
test
push
xor
inc
xchg
or
xchg
lahf
into
pop
faddp
xor
xchg
sbb
sbb
aam
pop
cmp
adc
mov
js
arpl
lods
sub
lock
sbb
pop
sub
ret
mov
shrb
ret
mov
jl
add
sub
inc
pusha
fisubs
test
cmp
add
pusha
stos
mov
das
push
iret
hlt
jnp
xor
mov
sub
and
scas
insl
jecxz
xchg
push
subb
loopne
enter
fisubl
flds
push
cmp
sahf
inc
lcall
test
paddsb
pop
les
and
mov
fstps
cmp
mov
imul
test
cmp
xchg
test
sub
out
cmc
mov
cmp
xlat
pusha
lods
jl
dec
movsb
mov
mov
out
fsts
imul
dec
jns
dec
in
mov
xchg
adc
adc
mov
sub
fstl
aas
mov
jae
inc
int
cld
ss
aas
scas
fstps
xchg
loopne
mov
test
and
das
cmp
mov
lcall
sub
frstor
outsl
inc
mov
dec
adc
fsin
sub
push
loope
jb
cmc
add
rcr
or
xlat
fsubrl
test
es
mov
add
push
in
in
cmpsl
data16
insl
outsl
sbb
jmp
cmp
fcmovnbe
fsubrl
push
lret
rclb
inc
dec
push
les
sbb
fstl
or
int3
jno
fistl
jp
push
pop
movsl
sbb
xchg
repz
jnp
xlat
dec
push
mov
inc
push
sarb
sub
ds
jne
sbb
inc
push
les
cmp
icebp
mov
mov
add
mov
das
xlat
out
jb
fyl2xp1
inc
mov
cs
clc
mov
xor
dec
fiadds
xchg
sbb
fstps
mov
sbb
cli
cmpb
daa
jbe
pop
mov
jl
insb
out
and
test
outsb
mov
shrl
pop
sahf
and
jbe
test
lret
inc
lea
sbb
sbb
mov
dec
xlat
out
cwtl
mov
mov
in
pop
or
inc
inc
and
jae
push
shr
dec
xchg
pop
bound
xor
pop
mov
push
ds
stos
addr16
pop
cld
lods
dec
call
pop
xchg
mov
jo
sub
mov
int
inc
negb
cmpsb
add
pop
popf
dec
std
jge
push
int3
cmpsl
mov
hlt
gs
xor
leave
pop
rorb
push
xchg
aad
sbb
jno
dec
stc
jle
lods
cmp
cltd
outsb
cmp
ret
or
sub
inc
andl
adc
in
xlat
scas
bound
and
mov
stos
and
xchg
xchg
ret
mov
pop
jp
test
xchg
add
test
enter
mov
inc
sbb
fnstcw
jge
pop
push
inc
repz
fisttpll
pop
cmp
xchg
pushf
adc
adc
sbb
stc
sub
aaa
insl
mov
add
xchg
lcall
push
mov
test
and
mov
lods
clc
scas
pop
xchg
data16
mov
insl
sbb
fnstenv
xor
jae
mov
xor
roll
test
push
fsubrs
mov
push
pop
mov
jle
ss
aam
fsts
cmp
mov
out
fcmovbe
inc
mov
test
std
mov
pop
lock
stc
dec
xchg
dec
test
sub
fcoms
arpl
call
dec
or
mov
add
jnp
inc
mov
or
in
imul
mov
push
negb
add
jle
adc
test
lds
testb
cmp
dec
cs
lret
adc
ds
sahf
outsl
incb
imul
sbb
xor
sbb
xor
das
in
std
inc
jb
fldenv
jmp
sub
ss
dec
adc
add
test
ficoml
inc
cmpb
sbb
daa
or
mov
push
cmpsl
adc
mov
mov
xor
mull
shll
push
adc
int
es
xor
xor
mov
int
adc
in
rcll
push
scas
in
jp
hlt
mov
fcoml
cmp
out
lods
push
jl
sbb
push
add
mov
lods
mov
xchg
pop
push
jp
mov
addr16
cmp
or
jl
fcomp
std
daa
push
xor
ftst
imul
push
jae
pop
xor
mov
mov
and
movsl
cwtl
call
arpl
jb
std
fnstenv
loopne
mov
xor
out
lods
gs
or
jle
lret
push
scas
cs
rclb
lods
test
popl
js
sub
repnz
inc
xchg
out
jp
out
jne
sub
mov
mov
test
mov
sbb
sub
mov
or
mov
lahf
mov
test
adc
mov
mov
xlat
fdivrl
and
cmpsl
mov
mov
jle
dec
mov
lret
popf
xor
in
lods
js
cmc
push
add
repnz
pusha
and
out
mov
clc
sahf
into
mov
pushf
das
sbb
shll
adc
out
push
mov
loop
out
jns
sub
popf
scas
iret
xchg
or
push
jmp
push
add
add
in
fidivrs
orb
icebp
out
mov
int3
std
inc
jmp
daa
dec
cmpsl
mov
push
icebp
jge
test
adcl
sub
out
pop
dec
cs
orb
xchg
mov
test
sbb
jl
bound
jbe
roll
das
cmc
push
xor
and
mov
pop
mov
jae
lcall
mov
fildll
in
test
jnp
or
xchg
movsl
push
add
cmp
pop
push
xchg
std
stc
sub
cmpb
imull
inc
xchg
or
sub
cwtl
mov
mov
repz
rcrl
in
int
push
mov
mov
and
repnz
dec
popf
std
pop
insb
adc
test
stos
lahf
mov
lea
daa
add
jmp
gs
cmp
aas
jl
mov
cmp
cmpsb
add
test
scas
in
and
mov
cmpsb
scas
push
fld
lcall
insb
mov
out
aad
cmp
sarb
xor
std
xor
adc
movsb
pop
mov
push
rcl
mov
jmp
in
jb
push
or
cmp
repz
dec
pop
in
cmp
mov
fidivs
cmp
mov
sarl
mov
mov
stos
sbb
cli
mov
mov
jg
out
jnp
in
jo,pt
leave
cmc
sbb
movsb
in
or
adc
jp
mov
lods
js
popf
xchg
sub
xchg
out
sbb
xor
xchg
mov
lret
repz
lods
inc
and
icebp
pop
or
loopne
gs
lock
mov
inc
add
push
hlt
mov
loop
jb
dec
fldt
mov
inc
push
cmc
mov
jl
popf
push
mov
aad
pop
popa
pop
lods
cmp
and
push
int3
aas
insl
lods
mov
xchg
fimuls
ret
faddl
stos
pop
ret
inc
pop
sbb
mov
into
mov
sahf
xchg
jbe
ds
ljmp
outsb
inc
mov
scas
test
loope
movsb
lods
and
push
jecxz
sbb
mov
aam
sub
xchg
mov
std
imul
outsb
stos
mov
wrmsr
xchg
out
insl
add
in
mov
dec
cltd
loop
mov
dec
insl
push
mulb
pop
cmp
or
rclb
leave
inc
insb
mov
scas
fsubl
test
insl
xor
mov
clc
iret
pop
sbb
pop
mov
packuswb
mov
dec
lea
leave
mov
in
push
aas
lea
sbb
sub
dec
cli
aam
scas
das
push
inc
mov
ljmp
in
mov
shll
aas
mov
loope
and
inc
rcrb
lods
jmp
mov
jbe
popa
xchg
cmp
imulb
in
and
mov
lea
sub
mov
xchg
xor
and
push
push
add
push
and
jo
fwait
jo
xchg
jne
ficomps
inc
add
jl
adc
jno
and
xor
inc
rolb
sbb
inc
test
sub
cwtl
sub
adc
in
lods
mov
lods
adc
push
std
mov
and
loop
rclb
sbb
shlb
rorl
out
cwtl
cs
icebp
or
mov
fldcw
pop
or
scas
pushf
test
pop
test
out
arpl
inc
add
clc
xchg
gs
lods
fnstenv
cmp
repnz
xor
shll
mov
dec
jo
or
mov
scas
and
mov
mov
push
into
js
jmp
pop
add
mov
inc
sbbl
flds
push
icebp
mov
pop
xchg
fistl
mov
scas
fdivl
lds
push
mov
cmp
sub
inc
cmpsb
dec
cmp
clc
sub
ficomps
scas
idiv
fidivrs
jle
mov
jmp
int3
add
push
pop
cmp
mov
std
clc
mov
xlat
mov
popf
mov
div
js
lds
pop
loope
lock
movsl
scas
hlt
add
push
sbb
stc
test
jbe
dec
dec
ds
sbb
dec
mov
push
pop
mov
out
fs
mov
cld
sub
and
ds
adc
mov
loope
out
sub
addl
xor
das
int3
pushf
int3
les
and
out
adc
pop
cmp
mov
imul
dec
shr
push
mov
adc
and
cmp
sbb
movsb
push
lret
in
fimuls
mov
mov
inc
aam
scas
mov
mov
repz
mov
jp
lds
test
rorb
mov
in
cmpsl
imul
add
mov
inc
rolb
loope
movsl
jg
push
outsb
jb
sti
subl
adc
cmp
adc
sahf
int
push
mov
mull
and
mov
push
cmp
pusha
jne
mov
inc
or
bound
mov
imul
repz
lods
mov
pushf
out
jns
and
sub
fdivrl
mov
sbb
in
test
inc
add
mov
ret
fsubrl
pusha
fisttpll
scas
push
bound
loop
das
mov
or
fcompl
out
adc
mov
rclb
jbe
pushf
inc
test
xchg
cmp
out
jnp
aad
sbb
sub
sbb
push
push
pop
jge
sub
nop
movsb
lods
fld
jo
loop
inc
in
cmpsl
mov
add
ret
jmp
leave
sub
mov
mov
pop
mov
jo
mov
push
inc
or
lods
ja
cli
sub
xor
mov
inc
mov
pop
addr16
repnz
jmp
insl
jb
mov
fmull
mov
push
sbb
mov
sbb
pop
ret
jecxz
fdivl
jae
nop
mov
sbb
sbb
pop
mov
dec
fwait
xor
xchg
mov
sti
sub
push
test
in
xchg
mov
or
dec
dec
hlt
cmp
ficoms
cmp
push
sub
lahf
pop
push
arpl
jl
mov
mul
pop
mov
add
add
and
fisubrs
clc
xchg
mov
mov
sbb
leave
sbb
fcoml
push
int
sbb
fs
lret
test
fsts
sbb
mov
sbb
mov
insb
das
sarb
ss
shrb
cmp
mov
out
loope
mov
repz
lods
mov
push
cmp
loope
push
mov
hlt
push
lods
add
lea
out
mov
xor
out
imul
jle
leave
mov
lds
scas
pop
fldcw
pop
in
lods
pop
lahf
jl
mov
lods
jle
jbe
jg
and
out
faddl
or
repnz
inc
rorb
add
clc
inc
ficomps
jl
add
xchg
ja
jbe
aaa
in
push
inc
pop
daa
xchg
leave
fdivrl
std
insl
in
adc
pop
mov
pop
scas
iret
mov
fldt
mov
cmpsl
movsl
cmc
in
adc
mov
or
mov
les
int
or
mov
and
data16
push
inc
ret
and
sbb
add
clc
push
rolb
inc
fimull
clc
jle
mov
and
les
dec
sub
in
loop
cwtl
out
push
sti
test
mov
push
negb
xchg
scas
rorb
push
adc
div
daa
rcl
and
cmpsb
push
dec
pushf
test
adc
cmp
jecxz
std
subl
push
pusha
mov
loop
scas
dec
popa
mov
adc
sbb
xchg
repnz
jge
cmpsl
mov
scas
movl
cltd
jae
and
std
rcl
insl
ss
aas
mov
in
in
sub
lods
cmp
iret
call
xchg
dec
xor
cmpsl
xchg
pop
popa
test
fnstcw
add
popa
fmull
call
or
adc
scas
jmp
dec
mov
push
lret
xor
xchg
gs
xchg
add
and
cmpsb
jae
icebp
push
xor
mov
sbb
sbb
push
sub
mov
shrl
fisttpl
mov
xchg
mov
xorl
push
fisubl
mov
cwtl
pop
push
jle
fiadds
orl
jg
addl
adc
pushf
sbb
adc
and
inc
pop
lret
cltd
sbb
mov
out
out
aam
repnz
jmp
dec
xchg
xchg
cmp
outsb
mov
inc
lock
dec
and
stc
icebp
push
adc
clc
push
jnp
mov
xchg
ficoms
mov
push
sub
jmp
pushf
stos
and
mov
mov
lds
push
rorb
into
cmpsb
push
inc
arpl
mov
cmp
xchg
andl
outsb
rorl
push
and
mov
sar
dec
test
dec
pop
lea
andl
adc
out
mov
xor
iret
or
in
fsts
test
and
mov
imul
cld
sub
add
movsb
lods
and
std
and
sbb
frstor
mov
test
fldcw
leave
push
hlt
fwait
sub
xlat
imul
addr16
jns
pop
and
mov
mov
ds
mov
rcrl
fs
dec
int3
dec
repz
mov
icebp
xchg
fcmovnb
int3
fstps
and
lock
lods
mov
mov
inc
sub
sub
push
sub
bnd
roll
pushf
out
repz
xor
xorb
aas
jle
sarb
test
inc
fisubrs
int3
push
mov
push
push
xor
and
xchg
dec
push
mov
cmp
movsl
addl
dec
loop
inc
out
mov
scas
out
push
and
inc
push
sbbl
cltd
dec
sbb
int
clc
and
inc
lret
push
cmp
mov
lret
push
sahf
xchg
hlt
sbb
call
mov
sub
xor
mov
aaa
scas
iret
cmp
mov
loop
mov
test
fidivrs
and
mov
mov
das
popa
sarb
mov
into
dec
inc
or
xchg
mov
dec
and
cmpsl
or
jp
outsb
cmpsb
in
jae
xor
pop
scas
daa
and
lods
inc
or
nop
add
inc
orb
and
and
xchg
mov
push
sub
xchg
mov
fdivl
jbe
sub
fmuls
jae
cmp
in
mov
mov
cwtl
xchg
xor
lds
roll
mov
and
fmull
je
push
mov
pop
cmp
call
mov
outsl
mov
add
fs
fmull
adc
pop
fstps
int
mov
mulb
mov
dec
xchg
sub
mov
in
je
mov
cmpsl
loope
dec
dec
repnz
xor
fidivs
mov
shlb
mov
outsl
out
pop
push
data16
xor
sub
jne
xchg
enter
mov
mov
sahf
stos
les
ret
test
popa
cmp
hlt
sub
mov
movsl
dec
sbb
psllw
shlb
mov
into
in
in
fdivrs
sbb
mov
addb
mov
sbb
shll
ss
sbb
movsl
jnp
jecxz
adc
cli
jne
fcmovnb
pop
jae
fadd
cmpsl
std
movsb
lods
lods
push
int3
push
mov
data16
jge
mov
test
sbb
xchg
cmp
dec
fcmovbe
int3
jae
fxch
insl
fldcw
cmpb
or
dec
jo
call
scas
push
pop
movsb
cld
jb
lahf
ret
dec
cltd
or
sahf
mov
das
sub
cmpsb
loop
out
sti
dec
mov
xor
jns
mov
cs
cmp
idivb
lock
sbb
orl
cmc
jge
push
dec
mov
daa
sahf
sbb
push
pop
xchg
subl
rolb
popf
popf
in
leave
sarl
mov
fcmovu
pop
adc
jle
sarb
xchg
out
xor
xchg
in
xchg
test
das
loope
shlb
xor
xchg
xlat
xor
out
mov
fldl
pop
or
and
cmp
fisubrl
mov
ja
outsb
pop
rcll
repz
cli
xchg
fiadds
sahf
push
cmc
mov
fdivl
cmpl
adc
or
ret
cwtl
ficomps
mov
jae
lds
push
xor
subl
fistl
movsb
enter
dec
mov
mov
lods
movsl
adc
iret
adc
lret
scas
mov
pop
add
repz
push
das
addb
mulb
int3
adc
and
cmp
popf
push
mov
inc
mov
jbe
sub
shl
repnz
mov
loope
mov
in
filds
cmp
cmp
dec
mov
in
repnz
pop
popa
sarl
and
xchg
clc
sbb
mov
jne
pop
xchg
and
gs
and
adc
inc
sub
jnp
inc
loope
repnz
pop
stos
addr16
inc
jecxz
fiadds
dec
cmc
lods
xor
xchg
stos
xchg
out
jae
test
jae
mov
imul
xchg
xchg
pop
cmpl
jmp
fldenv
test
pushf
ret
pop
jbe
fsubrl
mov
std
pop
xchg
loopne
and
loop
js
in
in
pop
sarl
jmp
push
mov
sbb
shrb
in
ljmp
pop
test
mov
pop
ret
sbb
je
mov
cmpsb
mov
mov
in
xchg
xchg
mov
mov
xchg
cmp
in
in
fidivs
mov
mov
ror
fstp
inc
inc
notb
pop
mov
ja,pt
xchg
push
fmul
pop
mov
mov
mov
es
das
cmp
cwtl
cmpsb
fsubl
mov
popf
jae
arpl
push
cmp
and
scas
push
jmp
std
shl
mov
inc
aam
add
andl
out
add
inc
push
pop
cmp
das
mov
sbb
cmpsb
fstps
jns
and
sbb
push
xor
cwtl
dec
dec
inc
arpl
xchg
and
adc
mov
mov
iret
stos
lds
mov
ljmp
es
jnp
gs
stos
lods
mov
adc
in
insl
push
cmpsb
cld
jmp
pop
movsb
cwtl
mov
sub
mov
scas
mov
jnp
jae
mov
dec
int
dec
pop
js
jb
repz
lods
add
iret
cmp
mov
subb
mov
outsb
adc
es
jbe
cltd
mov
cmp
push
loop
push
aad
sahf
xor
mov
dec
adc
add
adc
pop
std
xchg
clc
insb
mov
imul
test
outsb
xor
insl
cmpsb
xlat
aam
sbb
insb
mov
add
xor
test
shl
int
out
scas
or
not
popf
lock
andb
test
stos
movsl
inc
pushf
ficomps
bound
mov
int3
movsl
iret
out
outsl
into
and
adc
pop
push
addr16
scas
jne
push
dec
in
std
cmp
mov
mov
dec
rorb
push
sti
push
cmc
xlat
jmp
and
sub
in
in
mov
cld
ss
mov
jl
sbb
adc
mov
insb
pop
mov
pop
pop
push
xchg
jo
gs
or
sahf
mov
cmc
mov
push
mov
push
sbb
inc
inc
adc
gs
cmp
mov
movlps
mulb
xchg
mov
xchg
cmc
dec
test
add
sbb
in
test
int3
imul
inc
std
sub
test
add
jecxz
ret
dec
lods
jge
jbe
lock
cmpsb
ja
mov
mov
push
push
out
divl
xchg
pop
mov
push
loop
lock
or
imul
sbb
in
jae
pop
xor
and
movsl
and
add
test
mov
es
daa
fildll
pop
fnstenv
mov
jnp
and
cmp
movsb
rcrl
out
iret
lcall
push
sahf
cmpl
mov
add
push
movsb
lods
shl
pop
xchg
out
mov
in
cmc
std
mov
inc
mov
imul
popf
dec
fs
subl
fmulp
scas
cmpl
out
xchg
pop
jmp
lcall
cmpsb
nop
fisubs
pusha
add
test
adc
inc
frstor
xor
std
es
sbb
lret
jle
es
jge
iret
push
or
fdivl
push
inc
popf
test
cmp
xor
mov
push
or
ret
mov
xchg
sub
jl
loopne
push
sbb
sub
mov
xchg
add
sahf
push
xchg
and
or
test
mov
movsb
sbb
fs
not
cmpsl
xchg
push
bnd
sub
pop
popa
out
push
dec
lcall
inc
add
fdivrl
and
mov
das
sub
test
xchg
mov
test
dec
hlt
rcrb
loope
mov
test
inc
cmpl
fdivrl
mov
mov
repnz
jno
out
pop
jecxz
dec
sbb
cmp
out
inc
mov
sar
cmp
xlat
jle
ljmp
insl
lds
mov
outsl
scas
sbb
pop
lods
cwtl
dec
adc
std
jae
cmp
xchg
es
mov
mov
hlt
cmpsb
xchg
scas
xchg
inc
lock
pusha
fdivrl
ja
jg
out
xor
add
loop
fsubl
aas
loope
aam
mov
fisttpl
outsb
and
in
popf
std
outsl
and
fsts
je
pop
pop
data16
mov
adc
xorl
andb
lcall
or
mov
sbb
rcl
fsubrp
ja
out
data16
jno
aad
pop
hlt
lods
pop
je
pop
pop
fldenv
mov
cmp
pop
les
in
inc
or
inc
and
sub
stos
stc
push
inc
outsb
popf
or
xchg
sbb
or
adc
scas
movsb
or
push
mov
cli
sbb
add
rclb
push
fwait
hlt
fdivrl
in
pop
les
pop
test
shll
cmpsl
push
aaa
adc
cmpsl
in
xchg
leave
add
testl
repz
jb
or
int3
pop
clc
jmp
jns
ss
fdivl
faddp
sub
mov
adc
xlat
jbe
sub
in
jle
mov
adc
jb
mov
into
call
dec
sub
sbb
inc
not
popf
cmc
ljmp
fidivrs
sbb
dec
pushf
insb
stc
push
cmp
in
inc
dec
sub
xchg
mov
movsl
lock
mov
dec
adc
lret
ja
movsb
test
andb
pop
loope
gs
test
mov
jne
xor
pop
scas
jge
cmp
mov
daa
cs
in
cmpsb
jmp
aad
push
sahf
rcll
popa
ljmp
jae
ja
mov
jle
mov
sub
sbb
fcoml
dec
rolb
lods
lcall
arpl
daa
scas
in
pop
mov
pop
sbbb
ja
sbb
enter
sub
pop
cmc
mov
out
cmp
hlt
cmp
aad
or
pop
mov
ffreep
or
popa
adcl
test
mov
mov
and
pop
mov
fstpt
mov
xorl
xchg
ja
mov
mov
ret
mov
sub
and
mov
dec
mov
fstps
pop
dec
or
fcompl
lds
mov
inc
mov
jp
sub
mov
ljmp
xor
pop
lods
mov
xchg
movsb
add
gs
sbb
jmp
mov
push
add
ret
inc
cmpsb
mov
adc
cmpsb
sub
gs
pop
test
cli
test
int3
adc
cmp
arpl
inc
jge
pop
sbb
xorb
dec
jb
mov
xor
push
mov
or
xor
pushf
and
sbb
mov
sti
das
xchg
in
stc
jge
jo
aad
mov
jmp
cmpb
scas
aad
inc
movsl
cmpsb
adc
push
cmpsb
add
dec
scas
imul
xlat
out
jo
cmpsb
std
xor
cmp
add
test
gs
lods
inc
adc
movsb
rcll
stos
hlt
ficoms
and
subl
or
adc
rcl
xlat
inc
mov
dec
jbe
out
fmull
ljmp
jmp
cmp
inc
jmp
dec
testl
subl
push
push
cmp
bound
inc
push
mov
mov
mov
addr16
lods
in
dec
dec
or
addl
fwait
sub
lock
inc
jnp
jnp
gs
add
xchg
and
push
mov
popf
dec
mov
sbb
lret
pop
cmp
rcrl
push
movsb
fnstenv
add
mov
mov
sbb
jae
adc
ja
ret
adc
ss
xchg
notl
cmp
pop
mov
jnp
and
mov
in
pop
daa
adc
fbstp
cmc
mov
mov
adc
push
push
out
lahf
push
mov
pushf
inc
dec
push
ret
jo
in
filds
xchg
in
mov
ljmp
psubw
lds
push
cli
clc
mov
mov
lock
mov
je
or
jns
out
stos
stos
cli
adc
mov
fisttpll
xchg
mov
dec
cmc
xchg
and
sub
sbb
lds
leave
fiadds
in
repz
jns
test
out
pop
out
sbb
cltd
lods
xor
test
adc
addr16
add
adc
push
or
pop
pop
mov
inc
shlb
stos
dec
cmp
mov
xor
push
call
xchg
xor
scas
adc
pop
mov
cwtl
adc
jle
jno
mov
add
inc
jae
mov
cmpsb
fimull
or
imul
dec
fs
loop
cmc
aaa
inc
sbb
out
movsb
dec
out
pop
mov
adc
adc
sbb
lods
out
mov
inc
rolb
cmp
mov
pop
test
cmpsb
dec
cmp
andb
cmp
mov
add
repz
gs
fdivl
lds
sbb
fwait
sbb
push
sbb
mov
push
jl
jge
mull
jecxz
pushf
divb
mov
lret
and
mov
movsl
mov
leave
ja
les
inc
and
ss
movb
mov
or
scas
into
jmp
push
popf
or
and
mov
mov
mov
fists
nop
sbb
cmpsl
mov
adc
xchg
test
add
fs
xchg
lahf
mov
cmp
mov
out
push
mov
fs
jmp
popa
mov
dec
movb
cld
stc
fnstenv
pop
loop
mov
ja
int3
ja
jle
ds
pusha
mov
imul
pop
sbb
popa
sbb
ja
out
fcoml
mov
mov
jge
mov
dec
das
test
mov
fldenv
sahf
mov
sbbb
jg
mov
pop
mov
imulb
fldl
dec
fsubl
hlt
add
fcmovu
mov
ficoms
pop
movsl
dec
inc
subb
cmp
sti
mov
test
shll
mov
or
shlb
mov
cld
ficoms
or
fisubrl
loope
cmp
in
clc
sarl
in
mov
int
jl
out
in
or
cmpsb
xchg
std
roll
or
lock
mov
outsl
dec
fcompl
data16
scas
jp
mov
push
sbb
fldenv
fidivrl
out
dec
add
mov
int
std
dec
lea
mov
xchg
fldcw
mov
in
pop
lock
adc
out
push
shll
subb
push
push
repz
mov
jmp
mov
mov
enter
lods
jae
insl
mov
sbb
das
push
out
mov
cmp
test
jp
lods
sbb
pop
or
scas
clc
aam
test
xor
cmp
test
lods
andb
jge
mov
jle
test
xor
jo
jecxz
lret
and
lods
mov
xchg
cmp
stos
das
cltd
and
mov
push
push
stc
fucom
hlt
dec
in
lret
out
cmp
outsb
insl
test
mov
inc
push
push
push
pop
scas
cmp
adc
aaa
stc
mov
sub
push
push
pop
in
cmp
xchg
shl
fdivrl
das
sub
dec
push
aaa
sbb
sub
out
scas
hlt
repz
in
lcall
cmpsb
test
mov
fdivrp
pop
test
mov
pop
and
sbb
int
mov
mov
insl
and
scas
fstps
sub
aam
push
stc
movsb
sub
mov
clc
clc
lods
ret
jle
dec
pop
rcrl
mov
in
sub
ja
mov
xchg
mov
dec
iret
or
xchg
sbb
add
xchg
movsb
inc
mov
mov
push
pushf
pop
or
pop
jmp
dec
and
in
sbb
scas
into
lds
adc
daa
push
and
dec
das
shll
jno
int
popa
mov
test
iret
inc
push
movsb
aaa
sarb
pop
hlt
and
jle
or
pusha
cmc
in
stc
push
cwtl
pop
push
in
push
out
dec
add
mov
nop
int
fstps
movb
test
negl
dec
mov
aad
daa
loopne
flds
push
cld
lds
inc
inc
sub
mov
mov
fmul
arpl
and
addl
dec
adc
int3
mov
cmpsl
mov
sti
mov
fisubs
cltd
inc
xchg
and
popa
scas
pop
mov
or
addr16
dec
rclb
scas
roll
jg
movsl
xchg
cld
and
sub
sahf
stos
push
dec
psllq
hlt
sbb
cld
pop
aas
lds
xlat
mov
dec
push
push
test
repz
aas
inc
jns
in
in
das
movsl
sbb
mov
icebp
stos
sar
es
sub
cmp
sub
jne
xchg
imul
xchg
std
mov
sub
sbb
jp
int
add
mov
adc
xor
and
mov
stc
les
popf
pop
jb,pn
mov
sarl
or
out
adc
mov
sbb
jno
insl
cmpsb
loopne
xchg
mov
inc
mov
jbe
and
jns
test
cmp
rclb
cmpsb
mov
mov
test
in
jg
in
mov
std
or
scas
mov
out
pop
test
or
popa
scas
mov
or
clc
pop
in
lock
add
popa
loopne,pn
push
loopne
push
or
jnp
fcmovbe
clc
inc
or
stc
pop
add
scas
int3
flds
imul
lods
xchg
inc
mov
adc
jno
lahf
or
cmp
xor
icebp
andb
in
imul
xchg
or
and
fidivrl
xor
out
gs
iret
aaa
and
movsl
adc
test
into
shlb
and
fists
sbb
mov
aaa
jae
lret
inc
or
test
pop
pop
mov
fimuls
push
cmp
mov
int
dec
test
stc
jle
or
sarb
dec
sbb
movsl
sbb
fists
out
dec
ljmp
mov
insl
cmp
scas
das
cmc
in
or
and
inc
fisubs
insl
das
push
or
lea
pusha
ret
mov
and
lret
cli
add
dec
xchg
fisubl
in
sbb
loope
inc
cmpsl
sbb
lea
cltd
iret
int3
push
mov
gs
and
outsb
aam
or
sbb
jo
stc
nop
mov
dec
int
data16
sub
sub
jnp
ljmp
movsb
sbb
add
fnstsw
mov
mov
or
je
jne
out
lahf
push
lahf
in
ja
out
movsb
sbbb
push
fisubs
int3
test
jns
or
xchg
mov
push
mov
mov
fcmovne
xchg
dec
inc
xor
roll
ret
movsl
test
push
rcll
das
scas
fnsave
pop
sub
sub
xchg
cli
shlb
mov
pusha
dec
jb
sub
iret
std
jne
push
in
scas
inc
clc
or
sbb
lahf
mov
add
lods
into
push
jp
pop
add
mov
repz
inc
mov
adc
cli
lcall
jl
test
and
pop
cmp
pusha
test
xor
add
xor
add
cmpsb
aas
sbb
xor
fstpt
add
sub
fisttpll
pop
mov
icebp
add
test
or
dec
insb
icebp
mov
fdivrp
mov
out
inc
jp
out
mov
pushf
pop
test
scas
test
xlat
inc
mov
mov
das
imul
sbb
push
sub
xchg
mov
inc
js
pop
filds
cmp
push
push
mov
inc
in
sbb
stos
daa
loopne
repz
add
mov
dec
push
and
and
cmp
fisubrs
xchg
test
fldl
xor
xchg
mov
test
pop
fisubrs
jle
sbb
fldenv
cmpsb
push
mov
jle
cmp
sbb
fidivs
pop
sbb
test
int
xorl
popf
cmpsb
lods
test
scas
rcrb
sbb
and
in
adc
insl
cltd
mov
testb
pop
enter
cmp
ss
inc
icebp
cmp
jle
push
mov
jmp
push
das
mov
cmpl
rcll
test
mov
movl
fildl
addr16
or
xor
in
out
mov
mulw
cmpl
scas
stos
test
and
sbb
out
add
xchg
add
mul
and
lds
mov
shl
push
jae
nop
pop
xor
in
mov
pop
adc
movl
push
xchg
push
movsb
sti
shr
sbb
arpl
xor
out
repz
in
sbb
out
fdivr
scas
cli
mov
sub
xchg
mov
mov
in
jge
inc
dec
pop
into
movsb
test
inc
and
out
lahf
xorl
sub
aaa
data16
into
pop
pop
fisubs
fldenv
add
jo
jbe
shlb
gs
aaa
pop
es
js
lea
and
lcall
es
fldt
sbb
jge
cmc
cwtl
call
test
mov
mov
pop
fiaddl
sti
mov
xchg
loop
and
sub
cbtw
jno
add
cli
mov
cmp
stc
mov
xor
in
fxam
adc
pop
aas
push
imul
aad
mov
out
out
mov
in
or
jl
test
xchg
andl
out
inc
sub
jl
or
mov
mov
sub
lahf
clc
pop
gs
ljmp
fistpl
sahf
cmp
mov
add
mov
repz
sbb
out
fisttpl
sub
test
inc
out
dec
fdivl
subb
add
fcom
inc
push
mov
jo
in
cmp
insb
stos
push
pop
decb
mov
clc
in
and
adc
loopne
cmp
mov
sub
fcompl
insb
int
inc
rorb
and
add
aam
inc
aam
add
loop
sti
popf
mov
test
std
pop
lret
push
loop
sarl
adc
push
int
add
sbb
mov
les
pusha
mov
clc
out
cmp
leave
and
sub
push
repnz
test
aad
sbb
test
test
add
mov
adc
das
xchg
xchg
movsb
jle
sahf
stos
fs
ficomps
popf
sbb
outsb
int
cmp
hlt
push
jl
scas
jl
das
das
mov
loope
dec
aam
cmp
jb
mov
loopne
je
in
pop
loope
lods
push
bound
dec
test
pop
fwait
test
mov
std
popf
mov
inc
dec
sub
and
shll
xchg
lods
jge
lock
xchg
jl,pn
or
cmpsb
mov
jp
or
cmp
gs
jae
xor
inc
ror
sbb
xlat
leave
call
int
sub
fcompl
mov
imul
lret
sti
mov
push
push
sar
fisttps
dec
sahf
sub
xchg
jae
pop
mov
jne
es
out
mov
roll
loopne
xor
jne
cmp
popf
lahf
inc
or
std
lock
pop
add
sbb
sbb
jns
les
std
and
pushf
rol
pop
in
mov
aad
lea
adc
je
div
test
push
jmp
push
jbe
fstps
inc
pop
push
jae
dec
jns
dec
es
xchg
cld
bound
mov
lods
stc
sbb
cmp
es
sahf
in
mov
mov
int3
mov
push
scas
dec
aas
cwtl
dec
and
addl
sbbb
or
lret
ret
or
jno
jb
adc
fdivr
add
fs
les
cmpsb
scas
push
xor
pop
insl
mov
popa
inc
mov
lock
test
sbb
mov
cmp
push
popa
mov
ftst
cmc
jmp
mov
cmp
mov
fisubs
and
pop
sub
fistl
mov
sbb
ljmp
pop
es
int
cli
push
int
jl
mov
ss
das
dec
test
fldcw
xor
sub
or
fcomps
mov
lahf
jp
add
fmull
call
call
pop
popf
pop
sub
mov
mov
jns
sbb
and
test
arpl
scas
fcompl
stos
inc
hlt
movsb
jae
gs
pop
sbb
mov
fs
push
dec
sbb
cltd
inc
mov
sub
and
push
or
or
push
mov
ret
cltd
insb
pop
cmc
daa
loope
pop
xor
ljmp
fmul
or
push
mov
mov
mov
sbb
mov
jae
mov
mov
ds
clc
xchg
or
cmp
cmp
ja
cmp
mul
das
xchg
movsl
nop
movsl
dec
cmp
inc
pop
cwtl
bound
outsl
mov
fldenv
xor
rcrl
pop
or
mov
mov
sub
dec
dec
mov
cs
mov
sub
gs
sub
jp
rclb
adc
cmp
movb
add
and
nop
addr16
push
sbb
inc
mov
lahf
jns
fdivl
pop
xor
xchg
mov
push
fnstcw
dec
jns
push
mov
push
lcall
push
lock
and
test
jp
push
inc
es
mov
in
and
test
js
rcll
stos
pop
cmpsb
xchg
add
pushf
in
shl
inc
mov
push
inc
and
xchg
aaa
cmpsb
sub
adc
jo
imul
clc
ds
nop
fstpl
lds
mov
stc
and
xchg
sbb
mov
adc
and
fs
fcmovu
mov
or
jns
fst
mov
cmp
cmp
mov
sti
fdivp
cmp
repnz
push
out
fdivp
jge
cmpsl
out
jp
das
dec
add
cmp
aam
jge
sub
popa
add
aam
mov
testb
mov
scas
int3
data16
mov
shl
xchg
aaa
xor
mov
ja
and
mov
rcrb
pop
test
addr16
mov
adc
arpl
xorb
inc
inc
xor
scas
cmp
in
pop
and
mov
inc
sarb
loope
or
cmpsl
jl
in
jb
loope
xchg
and
ret
sbb
and
sbb
mov
pop
dec
std
loope
sahf
cmp
sarb
sbb
mov
jns
jmp
fiaddl
lret
add
cmp
movsb
jle
dec
dec
xor
lods
push
test
scas
mov
xorl
in
jae
ljmp
fcomip
mov
cwtl
ja
lahf
mov
fildl
call
loope
aad
lock
sub
and
pop
lods
mov
and
dec
xchg
lods
ret
inc
push
xor
addb
mov
leave
mov
mov
inc
es
cmp
xchg
hlt
pop
test
mov
and
aas
push
xchg
shlb
mov
gs
or
push
ja
or
fwait
pop
or
jmp
je
inc
add
cld
mov
jbe
and
add
scas
xor
loop
test
lgs
stc
cmpsl
xorl
and
out
gs
rcr
int
in
cld
add
int3
lret
inc
xor
movsl
mov
sarl
in
out
cmp
addl
pop
cmp
push
lahf
xchg
cld
push
lock
out
mov
pop
add
sub
and
cmpsl
mov
adc
lea
test
or
mov
adc
das
test
xor
sbb
test
fldenv
mov
dec
fsubrl
rolb
mov
sbb
sbb
push
or
std
mov
mov
and
fcmovnbe
cmp
add
sub
clc
cmc
enter
lahf
movsl
repz
inc
fxtract
stos
or
loop
mov
mov
repz
es
nop
mov
out
xchg
test
aaa
jo
mov
je
push
imul
fisttpl
std
icebp
mov
mov
ret
xor
sub
and
fnstenv
pop
mov
inc
or
sarb
std
dec
xor
xchg
mov
sbb
sbb
stos
jns
sub
and
jle
xchg
mov
jge
pop
call
rclb
mov
frstor
movsl
mov
hlt
push
out
mov
andb
out
sbb
jge
cmp
inc
stos
or
pusha
xchg
adc
out
add
rcr
lret
pop
jo
loop
jge
hlt
cltd
inc
push
sbb
xor
mov
fsubrs
mov
mov
notb
subb
sbb
sbb
sti
std
mov
pop
xlat
nop
sbb
add
lahf
popf
cmpsl
mov
aas
and
mov
xchg
cs
fsubs
scas
out
fs
in
pushf
dec
jno
test
das
shll
and
test
xchg
pop
mov
fs
xchg
cmp
xor
movsb
push
cmpsl
mov
imul
repz
adc
mov
outsl
inc
arpl
daa
pop
add
les
jnp
jae
xchg
jmp
loope
int3
push
and
int
adc
scas
icebp
xor
dec
and
mov
adc
xor
mov
mov
mov
in
shl
dec
mov
sbb
scas
and
cmp
mov
jge
addr16
dec
sub
xor
sub
jp
jae
cmpsb
sahf
mov
test
gs
cmp
sub
loop
int
cwtl
inc
inc
add
test
fsqrt
repz
sahf
les
and
stc
flds
sub
pop
mov
das
inc
and
push
and
in
mov
test
imul
jne
int
jns
mov
adc
jb
scas
mov
clc
mov
mov
sbb
xchg
fcompl
push
dec
add
mov
pop
pusha
scas
adc
gs
sbb
cmp
mov
call
mov
pop
mov
pop
clc
jno
jg
pop
pop
lods
pop
mov
outsl
mov
adc
or
mov
js
fnstsw
or
pop
inc
jo
test
xlat
cli
and
inc
cmpsb
mov
push
jp,pt
enter
and
mov
xchg
jb
mov
out
xor
dec
call
scas
fwait
mov
jmp
mov
mov
mov
mov
push
jl
out
pop
push
sar
repnz
int3
mov
pop
test
sbb
dec
fs
std
test
push
inc
xlat
add
inc
xchg
ss
xchg
dec
add
pop
and
mov
and
imulb
and
push
adc
and
test
xchg
inc
stc
shll
in
xor
scas
icebp
lds
xchg
jp
sti
sub
fnstenv
dec
call
pop
inc
fstpt
std
jl
xchg
loop
and
xlat
jbe
dec
movsb
inc
add
test
dec
fadds
xchg
imul
add
lock
sbb
pop
aaa
cmpb
mov
mov
insb
xchg
mov
addr16
add
pop
and
in
xchg
and
gs
outsl
xor
fldenv
push
jecxz
pop
dec
adc
mov
scas
lods
push
mov
jno
and
mov
mov
mov
adc
mov
stos
adc
mov
cmova
cwtl
fldenv
mov
outsl
out
out
outsl
cmpsl
icebp
sub
sub
fistpl
cmp
aam
xchg
pusha
mov
jb
and
inc
xchg
jge
arpl
ret
pop
xchg
movsb
push
jge
xor
mov
mov
xchg
mov
xchg
mov
mov
std
scas
fprem1
sub
iret
dec
mov
fwait
mov
das
fisttpll
mov
mov
push
push
repnz
xlat
push
andb
in
inc
inc
pushf
imul
and
xor
cmp
scas
push
out
push
mov
adc
and
dec
inc
xor
mov
push
repnz
xor
std
sarb
loope
js
ret
push
in
sub
jecxz
mov
aaa
mov
mov
fnstenv
les
icebp
outsb
add
mov
repnz
loopne
cmp
pushf
inc
dec
clc
xchg
test
cwtl
aas
adcb
and
in
out
inc
xchg
ret
fdivrl
ret
push
sbb
int
mov
ret
mov
test
push
nop
out
test
ja
fnstcw
leave
popf
cmp
pop
out
fsubrl
pop
jmp
mov
test
mov
test
lods
or
mov
push
test
aaa
rcrl
gs
xchg
xor
test
mov
ret
idivb
sub
jp
sbb
and
inc
pop
cmp
jg
jle
xchg
ret
fmulp
push
test
ljmp
incl
push
xlat
cmp
or
sbb
js
les
fstps
mov
fsubl
xchg
add
mov
adc
push
inc
stc
jae
dec
jmp
adc
inc
loop
aaa
xor
jle
sbb
adc
aam
test
push
fxch
xchg
sahf
std
sarb
sub
inc
sub
in
xor
int
cmp
xchg
lret
daa
div
sti
cli
pop
ficoms
add
lods
mov
sbb
insl
push
in
ljmp
pushf
lods
loopne
push
fnstenv
loopw
insb
xchg
push
pop
xchg
js
into
xor
data16
into
inc
arpl
leave
dec
push
scas
adc
cmp
std
or
push
pop
jae
dec
ljmp
jg
out
test
mov
cltd
adc
mov
mov
xchg
std
push
clc
mov
jns
shr
mov
int3
add
pop
adc
mov
scas
ja
test
out
out
andb
xor
add
notb
mov
cmp
mov
addr16
int
repnz
xchg
pop
js
pop
fdivl
ror
out
int3
xor
lea
out
mov
push
test
push
stc
mov
xchg
pop
mov
cli
cld
mov
stos
push
sahf
mul
mov
rcl
arpl
jae
movsl
cs
push
xor
sub
mov
or
pop
sahf
test
in
mov
cltd
jg
dec
jmp
cli
in
repz
and
pop
pop
aad
jl
dec
mov
stos
mov
xadd
movsl
fimuls
mov
out
pop
lods
aam
fxch
outsl
popa
lds
cltd
loope
mov
fldlg2
loopne
sub
mov
int
pop
nop
jns
mov
stc
inc
lods
lods
ret
test
mov
insl
jecxz
add
sbb
lods
mov
lds
jnp
mov
adc
jmp
cmp
insb
rcrb
and
pop
mov
int
int
xor
jbe
pusha
hlt
jecxz
test
or
in
sub
jl
mov
jecxz
jge
scas
mov
pop
ss
das
cmp
out
scas
xchg
inc
out
and
out
cltd
out
ficomps
cmpsb
insb
xchg
inc
jo
out
xchg
xchg
loop
leave
std
mov
insb
lock
out
test
lock
mov
xchg
lahf
add
inc
into
pop
push
pushf
testb
push
jmp
scas
ds
jl
mov
loop
xor
leave
stos
mov
repnz
add
es
pop
adcb
mov
mov
jno
movsb
nop
mov
fldcw
rcrb
scas
pop
fwait
add
loopne
inc
or
dec
push
sub
aam
jo
mov
call
mov
push
lret
ja
mov
dec
ficompl
mov
xchg
stos
dec
push
adc
pop
inc
push
scas
hlt
mov
sysret
pop
fsts
cmp
adc
sub
ss
scas
lock
test
cmp
leave
push
dec
xchg
shlb
mov
cmp
adc
and
sahf
or
cmp
shl
mov
out
call
jecxz
add
out
ret
inc
clc
add
mov
call
adc
adc
les
es
out
into
and
popa
inc
or
ljmp
cmp
and
sbb
cltd
fdivp
fistps
std
inc
mov
mov
lahf
das
ljmp
cmpsl
das
das
xchg
sub
add
push
add
in
and
popf
daa
sbb
cmp
xchg
movsl
add
movsb
inc
pop
pushf
mov
std
or
and
das
jnp
cmpsl
out
aad
cmp
into
sarl
pop
nop
inc
rolb
or
leave
push
dec
or
xor
mov
sbb
mov
pop
int
pop
lret
xor
int
pop
leave
arpl
sub
aad
mov
repz
and
pushw
fwait
xchg
test
jae
aam
pop
pop
loopne
mov
scas
sbb
and
call
xchg
mov
hlt
inc
dec
cmp
mov
movsl
out
jb
jmp
inc
lcall
mov
scas
pop
lret
xor
ret
push
mov
xor
jecxz
jae
sub
sub
mov
jno
rcll
mov
filds
movsb
dec
cmc
negb
loopne
mov
cs
xchg
mov
scas
test
notb
inc
sbb
mov
dec
in
leave
and
lea
fisttpl
divl
mov
mov
mov
jo
ja
call
cltd
push
sti
sub
notl
bound
xchg
arpl
xchg
mov
jp
out
in
enter
sub
out
add
fnstenv
xor
aaa
hlt
xchg
sbb
fsubrs
cmp
jne
mov
adc
popf
pop
std
adc
test
rcl
push
mov
ds
push
je
pop
xor
jnp
or
or
cmpsb
stc
mov
xchg
mov
pusha
scas
das
mov
mov
int
xor
pop
pop
rcll
cmova
dec
or
es
fsubrp
mov
insb
dec
pop
sbb
stos
push
movsb
push
test
cmp
gs
bound
mov
sbb
fcoms
aam
fdivrl
xor
ljmp
outsb
scas
sarb
mov
std
mov
jmp
pop
pop
imul
xchg
data16
repnz
out
sbb
sub
daa
dec
cmp
fnstsw
sbb
and
cmp
testl
push
mov
movsb
mov
xor
add
sti
dec
int3
rcrb
push
arpl
fstpl
je
orb
dec
xchg
add
mov
test
shl
mov
push
xchg
and
mov
push
dec
jl
dec
and
outsb
out
mov
and
mov
push
cmp
test
jnp
nop
mov
scas
lods
test
mov
mov
shl
adcl
popf
stc
lods
push
sbb
scas
sbb
inc
daa
fmull
mov
xorl
hlt
std
test
push
mov
xchg
pop
in
xchg
in
add
pop
fisttpll
lods
and
mov
sub
mov
push
mov
jbe
aaa
test
push
in
into
out
pop
push
out
sub
dec
sbb
cmp
adc
lds
mov
sbb
into
mov
mov
fsubr
lods
jp
xchg
sub
cmp
adc
push
iret
mov
xchg
fsubrl
jbe
nop
push
int
fcmovnbe
arpl
and
pushf
fsubrp
enter
mov
inc
push
inc
adc
push
push
sub
enter
push
sahf
mov
mov
mov
sub
popf
scas
fst
cld
lods
test
push
or
mov
mov
cmp
out
cmp
inc
cli
lea
orb
or
cmp
jl
iret
scas
xchg
push
lret
sbb
fstps
and
or
iret
aam
push
mov
int3
test
dec
xor
pop
lret
aas
push
cmp
pop
movl
fldenv
popa
ja
ret
sbb
movsl
in
xchg
mov
jbe
inc
mov
mov
inc
movsb
test
ss
cmp
popa
enter
stos
iretw
push
cmp
push
dec
sbb
push
inc
cmpsb
sti
inc
push
xchg
pushf
pop
pop
mov
imul
mov
imul
subb
push
mov
sub
inc
es
int3
mov
les
dec
in
lods
in
into
and
dec
sub
push
stc
inc
mov
inc
xchg
jg
mov
dec
out
fmull
out
stc
pop
cmovno
pop
lods
sbb
jecxz
pop
dec
push
push
sub
inc
xchg
cmp
subb
leave
faddp
inc
lds
xorl
test
jbe
js
test
xlat
pushf
jmp
pop
xchg
inc
dec
inc
xor
lods
clc
xor
cmp
ja,pn
inc
sbb
jnp
lds
sbb
out
mov
jnp
mov
and
sbb
test
cmpsb
fwait
push
mov
inc
in
movsl
mov
pop
jmp
test
out
cmp
loopne
xchg
jmp
fistps
mov
imul
js
mov
cmc
mov
add
or
andw
sbb
dec
or
lcall
xchg
add
push
loop
cmpb
cmp
mov
fwait
dec
push
int
popf
inc
jge
inc
lds
and
out
sbb
and
cli
and
fidivrs
into
xor
push
repnz
sub
push
scas
lcall
lcall
gs
mov
sub
rcll
das
jle
test
jmp
icebp
test
sub
adc
ret
mov
leave
pop
cmp
out
ret
ja
lods
ds
fwait
adc
inc
push
js
xor
mov
sbbl
mov
jg
iret
push
pop
xor
adc
mov
dec
ret
std
sub
cmp
fmuls
loopne
sbb
jno
je
les
pop
jbe
fwait
sub
std
fs
loope
call
cmpsl
lahf
popa
in
mov
and
call
std
xchg
xchg
dec
or
lahf
inc
mov
cmp
xor
call
inc
cs
scas
cmc
ret
mov
scas
jbe
repnz
and
lods
outsb
jl
add
inc
aam
in
push
xchg
call
mov
test
add
hlt
in
cmpl
cli
sub
mov
adc
xchg
pop
jl
aam
insl
andb
outsb
lea
jg
cmp
aas
frstor
mov
test
mov
mov
add
clc
mov
or
push
test
loope
lods
or
mov
cmpsb
pusha
fldenv
add
lea
shr
adc
fcomps
lret
and
add
das
mov
add
aad
rcrb
shll
mov
aam
scas
mov
lods
add
mov
pusha
mov
scas
add
test
cmp
insb
inc
mov
inc
and
int3
test
repnz
ficompl
jle
mov
push
jns
jne
push
orb
and
std
repz
out
mov
mov
and
fmull
sbb
adc
out
pusha
mov
js
testb
or
in
jno
jne
aas
lods
popa
outsl
push
jno
mov
je
jle
lods
mov
lea
loopne
dec
lods
sti
scas
adc
fcmovb
xchg
mov
push
and
mov
xchg
test
scas
scas
insb
addr16
loope
cmp
mov
test
mov
pop
xor
lret
inc
mov
sbb
rcrl
aam
jp
sub
inc
clc
dec
xchg
xchg
mov
out
or
std
in
test
cwtl
sti
push
cmp
xchg
lods
pop
jge
iret
ficomps
mov
scas
add
jmp
les
mov
mov
popa
fidivrs
cli
test
mov
dec
daa
or
sbb
mov
xor
pop
in
pop
dec
imul
int
push
test
das
xchg
mov
flds
add
xlat
cli
push
xor
and
stc
mov
movsb
xlat
test
xor
dec
cmp
inc
adc
aam
mov
xchg
or
jb
lret
addb
cmpsb
sbbl
aam
iret
and
cmp
ds
cli
sbb
sbb
sbb
push
repz
mov
mov
clc
sub
or
or
xorl
fsub
ficompl
lea
shlb
lods
pop
add
cld
mov
loope
and
pop
mov
ret
mov
xor
lret
popf
lahf
or
fsubrl
test
cmp
sbb
arpl
push
fstl
adc
and
mov
aad
mov
mov
inc
shlb
jecxz
and
mov
std
or
adc
and
fisttpll
test
les
into
dec
mov
popa
mov
pop
test
cltd
outsl
add
dec
lods
cmp
sbb
inc
xorps
mov
test
push
dec
mov
das
xorb
mov
sbb
push
nop
ficoms
cmpsl
mov
mov
ja
mov
inc
xor
adcl
xchg
inc
fistps
jmp
inc
xor
fisubrs
xchg
sbb
mov
fcoml
mov
sbb
mov
dec
pusha
movl
repz
arpl
jne
std
ss
mov
jmp
xchg
jmp
call
sub
dec
mov
test
inc
int3
int3
and
in
and
icebp
rcrb
dec
stos
mov
or
or
fnstcw
sbb
push
push
add
sbb
mov
dec
aaa
pop
jp
mov
inc
xchg
mov
mov
loope
adc
inc
inc
int3
imul
sbb
stc
data16
sub
pop
xchg
stos
add
dec
pop
pushf
dec
lahf
out
repnz
mov
jb
xchg
rolb
sbb
jecxz
jp,pn
sub
inc
cmp
push
xchg
aam
data16
adc
inc
into
mov
and
add
pop
lcall
fwait
adc
add
sub
pushf
test
mov
loope
jne
aam
imul
add
inc
hlt
push
std
jnp
add
fincstp
pop
pop
push
ljmp
pop
pusha
sbb
rcr
jl
outsb
clc
insl
test
das
push
iret
popf
mov
into
dec
cmpb
scas
das
mov
sub
lea
mov
mov
lret
mov
mov
fmull
and
cmp
cmp
xchg
nop
popa
gs
cmpsl
cmp
dec
jae
mov
sub
add
xor
xor
jne
arpl
lds
leave
lods
out
push
test
mov
in
pop
fstpt
sahf
pop
jno
mov
out
fisubs
aad
xor
xchg
inc
lods
movsb
mov
arpl
jle
aam
dec
lret
add
cmp
mov
cmpsb
sbb
movsb
adc
enter
out
es
push
mov
jbe
mov
cmp
adc
push
mov
into
mov
ficoms
push
out
pushf
aas
imul
mov
push
xchg
mov
push
mov
outsb
std
shl
jno
ret
or
mov
sbb
lds
pop
mov
fucomip
popa
ficomps
pop
cmp
out
not
adc
int3
lret
es
testl
addr16
das
xchg
test
frstor
cmpsl
pop
lods
inc
or
jo
rolb
sbbl
jp
pushl
jne
subl
lock
jmp
popa
sub
popf
into
jmp
sbb
out
jns
adcl
sub
add
lock
or
pop
mov
sbb
subb
adc
push
gs
in
pop
mov
lds
test
stos
and
data16
movsl
mov
add
lods
push
sub
out
mov
scas
cmpsl
add
xchg
jge
out
insl
hlt
test
sbbb
or
int
mov
aaa
lods
mov
dec
bound
ljmp
lcall
xchg
cmp
or
sub
loop
cmp
ja
cmp
mov
adc
iret
je
rolb
in
movsb
lahf
inc
mov
xor
hlt
sar
jnp
xor
insb
icebp
lods
icebp
lods
test
add
pop
aad
pop
fs
icebp
pop
lock
movsb
mov
mov
mov
orb
aas
sbb
mov
ret
repz
das
cmp
add
mov
aam
int3
or
mov
leave
push
cmc
mov
outsb
test
jo
pop
sub
cs
mov
daa
faddl
sbb
fnstsw
cmpsl
repz
js
xchg
and
dec
push
mov
js
mov
cmp
or
int3
and
sbb
aam
jecxz
sub
flds
gs
pop
adcb
scas
dec
es
repz
push
test
jmp
das
hlt
fdivrs
out
es
and
sti
inc
mov
leave
cltd
dec
orl
xchg
fisubs
bnd
in
outsb
xchg
xor
das
push
inc
fxtract
jecxz
mov
lahf
lea
add
jle
repnz
das
stc
ljmp
out
in
ret
in
lcall
dec
pop
dec
mov
movsb
sbb
adc
fcmovnb
pop
push
lds
push
xor
fs
je
xchg
je
fcmove
push
adc
mov
aaa
in
lods
dec
push
inc
jnp
mov
mov
cmp
push
cmp
mov
cmpsl
iret
in
jb
push
stos
sbb
cwtl
sbb
dec
or
mov
test
sbb
popf
mov
push
les
inc
scas
aad
cli
in
ss
lret
dec
sub
push
mov
out
xchg
scas
fnstcw
addb
cld
frstor
into
add
inc
xchg
insb
ret
ds
sbb
leave
push
enter
mov
pop
dec
push
push
scas
es
push
sahf
mov
adc
cmp
test
mov
fs
add
test
cmp
into
into
call
outsb
fldl
insl
lods
mov
fnstsw
arpl
fsubrl
lret
adc
cmpsl
mov
xor
sarl
sbb
repz
pop
jbe
sub
subps
sub
lcall
mov
bnd
or
aas
pop
dec
jo
loop
dec
sbb
mov
shlb
mov
mov
dec
mov
mov
add
or
scas
pop
lret
test
out
xchg
mov
pop
mov
inc
lahf
movsl
outsb
fimuls
push
sub
dec
loop
cmp
lahf
das
mov
nop
push
jge
adcb
inc
lods
mov
xchg
fdivl
inc
pop
mov
out
arpl
pop
addl
xor
into
leave
push
je
sbb
in
std
push
push
divb
adc
inc
push
sarl
das
cmp
ret
pop
fistl
je
xchg
push
adc
pop
mov
sub
and
add
fnstenv
sbb
ja
jle
je
fsubl
fwait
nop
mov
into
mov
push
fidivrs
inc
inc
int
pop
add
and
out
cmpsb
xchg
fst
stc
call
cmpsl
outsb
jle
push
dec
push
cmp
xchg
mov
or
sub
dec
pop
xchg
or
outsb
mov
xor
mov
mov
push
outsb
sbb
imul
dec
aas
lea
push
lahf
xor
push
rcrl
test
mov
in
sbb
mov
ret
and
rcll
sub
sbb
push
mov
xchg
adc
push
shl
jle
cwtl
cli
shll
sub
data16
fiadds
outsb
sahf
push
icebp
les
inc
jnp
imul
imul
mov
push
mov
pop
pop
adc
mov
cmpl
in
imul
mov
out
push
dec
add
mov
enter
xor
arpl
push
xchg
out
add
jo
pushf
in
cmp
int
loopne
pop
mov
dec
jp
lds
mov
adc
lods
les
mov
mov
sahf
inc
inc
jl
add
clc
push
fmul
lds
fldt
mov
les
test
cmpsl
dec
mov
jmp
faddl
imul
mov
cmpsb
stos
repz
mov
mov
jge
adcb
push
adc
xchg
roll
sub
xor
sbb
push
andl
leave
and
sbb
scas
xor
sahf
and
add
inc
es
or
cwtl
cli
in
pop
fistpl
mov
xchg
jmp
rcrb
adc
movsb
bound
push
out
jae
ret
mov
mov
fistpl
mov
sbb
daa
ss
aad
sub
sbb
outsb
hlt
push
test
repz
inc
leave
push
pusha
jns
inc
and
lock
push
mov
xchg
stc
and
pusha
adc
outsb
mov
push
lds
outsb
adc
jecxz
mov
xchg
push
pop
lret
jmp
hlt
mov
movsl
data16
jb
adc
cmp
sbb
and
mov
lock
cbtw
fucom
xchg
stc
xorb
loopne
add
int3
xor
les
andb
arpl
xchg
subb
mov
addr16
mov
xchg
lahf
adc
sub
mov
fisubrl
popf
imul
xchg
sbb
dec
jb
mov
mov
test
mov
in
jne
jge
adc
mov
movsb
push
dec
xor
fcompl
cmpsb
fs
aam
inc
xchg
jl
adc
add
hlt
test
mov
mov
mov
mov
addl
icebp
repz
jno,pt
fnstcw
popa
jbe
scas
mov
das
mov
lods
inc
cmp
pop
cmpsb
cmp
push
jle
xchg
pop
loope
test
sbbl
add
mov
dec
sbb
idivb
clc
add
jbe
inc
mov
adc
test
sub
dec
push
xchg
daa
ret
mov
xchg
dec
xlat
repz
mull
jg
inc
adc
les
xchg
sub
mov
or
and
xrelease
out
inc
adc
pushf
nop
jb
xor
xchg
shlb
jnp
xor
adc
cwtl
lret
pop
adc
mov
out
mov
or
xchg
stos
faddp
adc
mov
aaa
pop
neg
xlat
sub
js
je
dec
in
xchg
dec
ret
push
data16
out
mov
push
push
addr16
sbb
xchg
dec
sbbl
push
insl
shll
mov
test
sbb
mov
sahf
shr
ret
and
mov
das
add
shll
sbb
mov
sub
gs
dec
sbb
mov
aam
or
jecxz
jg
xor
and
and
jle
out
shl
sti
mov
mov
lahf
out
add
mov
div
inc
lret
fistps
inc
es
ds
fldenv
mov
cld
jb
outsl
gs
and
or
pusha
sbb
mov
push
xor
cmp
xor
mov
cld
lods
fxch
jl
idivl
gs
mov
pusha
es
in
cmc
fs
jmp
rcll
xchg
jnp
fs
fimuls
mov
testb
fisubrs
cltd
insl
sub
addr16
or
rcrb
ljmp
pop
movsl
popf
pop
mov
mov
mov
sub
xor
scas
jp
sti
or
ffree
add
ret
cmp
adc
mov
mov
fsubl
mov
mov
fistpll
in
repnz
sbb
inc
mov
ljmp
bnd
mov
gs
cmp
ret
and
cmpl
imul
arpl
decl
push
add
mov
mov
xchg
stos
out
gs
clc
ret
inc
daa
rorl
popf
sub
xchg
mov
shrl
xorb
out
and
std
fnstenv
and
into
fisubs
xor
faddp
out
popf
push
lods
in
mov
jl
es
and
lea
mov
pop
or
xchg
mov
inc
inc
popf
push
dec
sub
aad
sub
jbe
std
jns
mov
cltd
shr
jle
xor
or
push
outsb
pop
or
jl
fnstenv
out
inc
pop
lods
icebp
sahf
mov
inc
jecxz
sub
out
cmpsb
jnp
insb
sarb
lcall
add
mul
xor
cs
pop
fsubl
xor
test
insb
sbb
scas
xlat
and
fdivrl
mov
sbb
mov
std
out
ja
fstps
adc
lahf
push
imul
xchg
sbb
inc
call
jnp
cli
dec
and
fwait
mov
ds
lds
inc
fmul
cmp
lods
dec
adc
repz
and
mov
outsb
mov
sarl
mov
mov
aaa
or
xor
fcompp
mov
out
cmp
mov
out
cltd
and
and
adc
ficoms
shll
mov
xchg
jbe
adc
inc
jge
test
test
cmp
mov
in
mov
jle
mov
leave
ljmp
and
add
dec
je
fidivrs
cmpsb
repnz
fsubrl
mov
loopne
or
fsts
fnstsw
arpl
cld
xchg
sbb
mov
cmp
shll
fisubl
mov
aaa
stc
arpl
push
js
jmp
cmp
arpl
fstps
or
xor
xchg
dec
es
int3
cmpsl
mov
les
dec
inc
test
mov
sub
lds
jnp
mov
inc
xchg
in
or
int3
dec
mov
das
int3
ret
or
pop
out
lock
and
mov
jge
cmp
xchg
lcall
lods
mov
xchg
or
inc
push
mov
mov
pop
daa
les
int3
test
xorb
iret
sub
mov
pop
sbb
mov
flds
and
rcr
push
dec
es
cmpsb
or
dec
je
ja
cmp
xlat
imul
push
or
push
popf
ljmp
insl
inc
loope
mov
orb
sbb
aas
rclb
popf
sub
jecxz
ret
mov
shl
pop
pop
dec
dec
ljmp
fldenv
out
std
faddp
daa
sbb
or
mov
mov
or
aaa
scas
gs
cmpsb
aas
andl
push
popf
cltd
dec
inc
and
fisubs
aad
in
jmp
inc
adc
inc
mov
inc
cmp
inc
add
fldenv
and
sarb
gs
lds
adc
stos
and
aad
daa
push
jns
mov
dec
sub
inc
fnsave
push
cmp
fldcw
sbb
jne
addl
cmpsl
in
push
out
lret
cmp
adc
repnz
sub
or
popa
mov
insl
cmp
adc
add
divps
fdivl
ret
repz
sub
int
push
and
xchg
scas
push
fidivrs
neg
sub
dec
fldl
add
cmp
clc
dec
movsl
sarb
mov
mov
repnz
pop
push
pcmpeqb
out
lea
jg
xchg
fiaddl
mov
mov
int3
insl
scas
adc
mov
dec
push
les
idiv
push
mov
jns
pusha
and
push
pop
and
scas
lahf
nop
push
movsb
jp
jbe
enter
jmp
cmp
push
xor
faddl
scas
int
scas
into
push
lahf
and
cmp
stc
shrl
in
dec
ljmp
std
inc
cmpsb
std
mov
mov
es
cmp
bound
in
jne
js
mov
pushf
test
mov
cmp
daa
xchg
mov
std
mov
test
stos
les
test
sub
jp
push
test
dec
neg
data16
aam
push
xchg
int
lods
mov
call
pop
dec
inc
mov
pop
fdivr
and
jo
mov
out
sahf
mov
mov
dec
movsl
fwait
sub
leave
sbb
es
pop
mov
pop
sub
call
in
cs
fsubl
cmp
arpl
out
ja
adc
mov
mov
mov
lds
mov
pop
push
loope
cmc
fnsave
pop
dec
pop
add
inc
rcl
test
pop
xor
sub
jg
and
fwait
scas
dec
mov
dec
out
sbb
lods
pop
or
sbb
or
scas
mov
or
mov
js
mov
cmpsb
test
mov
pop
out
dec
adc
cs
test
psrad
and
out
dec
mov
mov
fdivs
dec
scas
jns
mov
addr16
out
movsl
loop
jg
xchg
mov
adcb
push
mov
arpl
test
lcall
cmp
xor
sbb
jmp
dec
aaa
lods
aas
stos
cltd
aam
or
loop
fs
fdivl
stc
cmp
data16
sbb
sbb
pop
jb
ficoms
jno
aad
dec
daa
or
pop
cmp
popl
sub
ljmp
jae
mov
fadd
test
ret
pop
or
lret
sti
push
pop
daa
fldl
xor
out
fstpl
mov
mov
push
pop
repz
mov
inc
inc
das
push
hlt
cmp
in
push
mov
popa
jecxz
mov
and
pop
sub
lods
icebp
xor
or
inc
fstpl
fsubrl
add
mov
cmp
dec
xlat
mov
cmp
push
jbe
filds
pop
fwait
ds
adc
test
xor
dec
arpl
add
add
int
cwtl
xchg
pop
repnz
loopne
mov
cmp
addr16
lods
fwait
and
sbb
mov
sbb
das
cmc
push
sbb
xchg
lock
xchg
and
mov
cmpsl
sub
mov
pop
in
fidivrs
xchg
lds
test
pop
imul
loop
pop
jl
cmpsl
jecxz
jge
push
test
test
and
xchg
insb
xchg
and
mov
hlt
lods
arpl
flds
mov
cmc
mov
loope
cs
sbbb
cmp
cmp
mov
and
xchg
scas
dec
sbb
int
pop
xchg
cli
cmpsb
sahf
jb
lds
push
pop
lcall
sbb
test
stc
jp
push
repz
adc
inc
mov
sbb
aam
and
dec
or
mov
scas
sbb
dec
roll
or
cltd
cmp
lcall
hlt
jno
pop
cld
pop
push
mov
cmp
rcll
insb
nop
or
cmc
push
in
inc
xchg
into
pop
sbb
mov
loope
cmpsb
adc
ret
imul
out
aam
push
cmp
xor
lods
inc
scas
adc
sub
push
outsb
test
xchg
repnz
mov
lahf
ja
test
cmp
movsb
and
cmp
loope
adcb
lahf
inc
push
mov
les
inc
movsb
mov
adc
fs
imul
shrb
ljmp
xorb
pop
out
push
movsb
cmp
mov
push
test
in
out
icebp
inc
xchg
adc
sbb
pop
test
inc
mov
aad
outsb
pop
movsb
pop
and
sarl
dec
fwait
les
movsl
mov
scas
pop
hlt
dec
fistpll
xchg
and
sbb
xchg
mov
fdivp
loop
les
add
cmp
and
test
mov
sbb
cmp
sbb
dec
push
movsb
dec
cmpsb
fisttps
add
fcom
jg
or
fs
in
fnsave
push
repz
and
repz
xor
add
cmp
mov
stc
pop
das
cmc
fnsave
lods
mov
scas
and
push
loopne
push
mov
xor
cmpsl
cmp
adc
add
lods
jp
sub
sarb
popf
addl
iret
dec
popa
jecxz
lock
jne
testb
mov
ret
push
scas
out
inc
inc
cli
jl
pop
pop
push
pop
repnz
loope
jb
test
scas
xor
pop
adc
mov
popa
fimuls
sbb
in
mov
in
cmpsb
sub
iret
call
das
imul
and
rcll
inc
xor
daa
out
inc
fldenv
movsb
mov
xchg
pop
popa
cmp
xchg
fcoml
subl
loop
je
std
cmpsl
mov
pop
stos
cld
sahf
sub
lcall
xor
xchg
popf
add
cmp
adc
mov
cmp
or
mov
aas
out
shlb
lahf
or
or
and
mov
sbb
and
or
cmpsb
jb
sarl
fsubrl
cmp
shl
adc
data16
faddp
cmp
xchg
test
nop
sbb
jge
sub
or
hlt
fs
addr16
cmp
jp
aad
push
cmp
lods
adc
add
inc
or
sub
push
popa
fimuls
fstpl
dec
imul
je
adcl
scas
mov
je
popf
lea
cmc
std
fldcw
or
mov
mov
stos
inc
test
int
cli
cmc
mov
mov
inc
icebp
xchg
sbb
sub
jmp
lea
mov
mov
out
imul
cli
inc
sub
insl
xchg
cmp
inc
push
movsb
out
push
xchg
js
insb
xor
movsl
mov
and
pop
je
sahf
push
jge
cmp
aam
test
jo
movsl
and
imul
xchg
xchg
fistpl
int
xor
int3
aam
add
movsl
mov
xchg
sbb
or
cmp
int
imul
jmp
movsb
inc
mov
push
inc
repnz
push
adc
push
aam
adc
xlat
bound
lret
fwait
or
dec
lahf
fnstenv
loop
mov
push
nop
cmp
push
inc
lock
sub
xchg
mov
addr16
adc
repz
sub
imull
std
les
jecxz
inc
cmp
sbb
pushf
jge
xchg
adc
in
hlt
stos
test
std
lret
and
mov
fs
add
mov
jae,pn
inc
loop
mov
test
add
mov
inc
sbb
in
xchg
inc
in
sbb
push
sar
popa
pop
jno
and
movsl
in
in
test
aas
in
fldenv
js
hlt
hlt
mov
in
out
fdivrp
or
dec
rcll
push
cmpsl
sbb
or
aaa
cmp
jbe
mov
mov
aad
insl
mov
pushf
sub
jmp
out
lahf
mov
mov
das
test
cltd
inc
jmp
outsl
and
jb
mov
fsubrl
xchg
out
xor
out
aam
fistpll
cmp
into
add
add
mov
pop
jge
int
mov
movsb
out
shlb
aam
jne
cmp
call
jno
and
jl
mov
daa
add
test
les
loope
push
pop
test
push
dec
icebp
inc
sub
lods
xor
ds
ret
xchg
testb
fpatan
jbe
outsl
xchg
cs
push
sub
popf
xor
mulb
pop
loope
jno
in
add
pop
hlt
dec
fists
test
int3
loopne
ja
push
jns
sbb
sbbb
aad
ljmp
lahf
mov
sbb
cmp
pop
rcll
cmpb
sbb
out
hlt
add
jg
pop
pop
lods
inc
fldcw
lods
jbe
cmp
lret
scas
push
add
bound
popf
adc
jl
jmp
xchg
pop
cmpsl
andl
sub
sub
in
or
mov
lods
fs
lahf
movl
ficomps
int3
pop
in
nop
call
dec
pushf
lcall
bound
in
inc
xor
mov
clc
into
std
and
dec
pushf
stc
pop
incb
enter
xlat
dec
movsb
mov
fisttpll
orl
or
pop
insb
jge
sbb
pop
loop
ficoms
xor
xchg
jae
xchg
jmp
pop
mov
fldenv
mov
push
imul
cmp
mov
pop
in
ljmp
int
mov
iret
lret
icebp
and
test
mov
std
pop
sub
sbb
icebp
dec
outsb
lahf
cs
movsb
fstps
mov
or
fadds
fwait
rorb
ljmp
sbb
shl
das
xchg
add
out
test
arpl
test
or
flds
cmp
cmp
in
mov
pop
sbb
jb
xlat
outsl
hlt
jge
in
pop
fisubrs
mov
dec
int
in
hlt
test
mov
xchg
daa
xchg
push
mov
inc
push
inc
fstp
enter
stos
mov
popa
cmpsb
pushf
sub
sbb
xchg
les
xchg
pandn
stc
pop
cmpsl
pop
xchg
mov
add
sub
fldcw
les
repnz
int
sbb
jb
testb
das
stos
push
insl
int
mov
mov
push
lret
and
cmp
fidivs
cmp
dec
shll
add
into
and
push
xsave
movsl
sti
sub
mov
mov
aaa
cltd
mov
cmp
ds
loopne
shrb
test
jecxz
jae
movsb
jo
and
xchg
out
das
add
jns
and
push
push
push
sbb
mov
gs
jne
aad
mov
add
and
mov
mov
dec
mov
xor
daa
outsl
call
adc
mov
and
fdivrp
enter
and
inc
and
push
mov
insb
pushf
mov
sbb
mov
flds
pop
movsl
mov
int3
adc
aas
pop
out
and
add
adc
sbb
int
push
mov
push
das
and
sarl
imul
pop
sbb
sbb
cmp
enter
loop
add
fwait
mov
add
push
pop
in
in
out
mov
cmpsl
scas
stos
fbstp
sbb
cmc
ss
adc
push
fld
jnp
cli
mov
sbb
jbe
clc
or
mov
push
cmpsb
pop
ljmp
faddl
cli
cmp
xor
cli
sub
jnp
sub
addl
out
pop
gs
mov
mov
sub
lahf
out
pop
inc
cmp
hlt
in
jge
hlt
clc
sub
sbb
mull
xor
imul
pop
test
push
push
icebp
cmp
and
adc
inc
lods
lret
movsl
test
das
jp
iret
popa
push
fcomps
subl
mov
in
and
lods
mov
add
mov
cmpsb
jp
sbb
and
filds
pop
and
jo
cmpsb
sbb
rcll
xor
push
sub
rclb
loop
or
out
cltd
in
rcrl
outsl
sbb
or
popa
clc
cmc
xlat
push
mov
dec
or
mov
icebp
movsb
and
in
cmpsl
sub
arpl
mov
jmp
add
cmp
test
lcall
push
mov
rcrb
addb
sbbb
dec
fsts
cmpl
mov
stc
and
adc
xchg
pop
push
add
dec
cs
imul
test
mov
mov
mov
popf
ljmp
adc
cmp
jg
fwait
mov
movsl
scas
adc
mov
ss
incb
stc
dec
pop
test
js
add
fsubl
xchg
leave
sbb
jmp
movsb
mov
ret
sbb
arpl
fs
cli
sahf
or
les
or
scas
pop
enter
loop
add
or
dec
cli
flds
inc
lahf
pop
aaa
in
xchg
icebp
rcll
aam
cmpsb
inc
push
sub
and
decb
mov
inc
mov
ficoml
test
pusha
icebp
hlt
int
cmp
mov
dec
mov
push
and
rclb
mov
jae
sbb
pop
pop
repz
push
les
out
in
movsb
movsb
lea
pop
and
add
inc
cmp
sti
or
lahf
mov
push
sbb
ficoms
jnp
js
xchg
cmp
repz
movsb
aam
cmp
loopne
xor
in
dec
movsl
les
push
test
adc
sti
scas
sbb
inc
mov
xchg
sahf
dec
es
cmp
pop
jbe
push
addr16
add
xor
jo
xor
cmpsb
lret
jg
and
inc
clc
cwtl
sbb
mov
lds
xchg
int3
and
test
mov
flds
cmp
xchg
adc
sub
jns
mov
lahf
push
pop
cmp
cli
mov
push
mov
dec
les
xlat
mov
jmp
sbb
mov
in
in
faddl
jae
das
gs
lods
pop
aaa
jecxz
testl
mov
popf
sbb
shrl
adc
or
mov
lods
xchg
mov
out
fldt
sbb
mov
jo
lods
adc
fs
stc
jno
mov
movsb
push
hlt
xchg
push
lods
je
push
sub
xor
fldcw
lret
test
cmc
pop
push
add
push
inc
mov
jae
icebp
sub
push
in
mov
add
mov
inc
adc
out
cmp
push
inc
mov
or
andb
and
or
inc
cld
jecxz
xor
scas
ja
push
mov
jle
movsl
mov
ror
out
jns
ss
std
int3
pop
xchg
mov
jle
jge
jno
fcomps
cmpsl
scas
mov
fcoms
mov
inc
iret
and
mov
push
or
icebp
sbb
and
add
andl
or
loopew
call
lcall
mov
add
and
into
dec
xchg
mov
pop
pop
push
fs
insl
push
fwait
push
out
jmp
jo
fisubrs
in
jae
sbb
aam
repnz
adc
push
add
xchg
xchg
sbb
cmpsl
in
inc
daa
lods
gs
in
mov
add
rcrl
sbb
fs
lock
sub
adc
cwtl
inc
jle
stos
push
xor
cmc
lea
dec
cld
and
dec
scas
mov
cmpsl
mov
jo
addr16
xor
mov
dec
out
cmp
mov
mov
sbb
mov
add
mov
or
scas
mov
out
and
inc
je
stos
inc
xor
dec
in
hlt
xor
out
dec
xor
fsub
cmp
fldenv
push
imul
scas
and
mov
sub
jno
cmp
xlat
lahf
in
das
push
pushf
sub
lret
or
xchg
out
ja
sub
cmp
xchg
pop
sbb
test
in
lahf
xchg
test
mov
mov
std
lds
aam
xchg
fwait
test
fiadds
cmp
stos
add
subl
dec
mov
imul
sbb
fldl
in
and
js
or
mov
sbb
loopne
sub
push
jae
xor
movsl
inc
mov
jg
mov
pop
fisttpll
jl
jle
adc
loop
pop
rcrl
mov
int3
sub
lock
mov
fwait
sbb
xchg
je
xlat
shll
xchg
jp
add
mov
xchg
mov
jmp
dec
fmull
mov
jl
sbb
imul
mov
fstl
scas
xchg
testl
sub
sbb
jae
mov
sbb
and
std
les
orb
in
mov
sub
int3
test
inc
jne
cltd
mov
cli
jmp
test
fcoml
add
mov
mov
popa
sbb
je
lea
das
stos
xor
push
mov
jmp
aam
push
cmp
stos
std
jno
es
imul
in
add
fisubrs
pop
xor
stos
scas
jp
mov
pusha
in
mov
pop
cmc
xchg
fwait
mov
and
xchg
stc
and
mov
sbb
addr16
mov
jae
cmp
adc
push
xchg
fdivl
push
es
movsl
cli
daa
pop
imul
std
cmp
xor
call
jl
cmp
mov
shlb
jge
das
repz
pop
and
mov
mov
insb
bnd
shl
jno
fisubs
stos
test
push
xor
xor
add
pusha
mov
pushf
xchg
sbb
cs
xor
int3
adc
dec
xor
aad
out
push
lods
mov
adc
and
push
cmpsl
popf
mov
sbb
pop
inc
les
faddl
fsts
jmp
push
lahf
adc
jl
and
call
xchg
popf
shrb
enter
or
pop
cmp
mov
inc
push
lahf
push
push
outsb
add
push
int
shll
test
ss
orb
lcall
mov
push
xorb
fsubl
pop
xchg
insb
push
cmp
mov
dec
xor
mov
in
das
in
enter
outsb
in
inc
xchg
ss
hlt
in
pop
or
mov
push
cmp
xchg
es
fdivrs
adc
cld
mov
aad
es
mov
daa
sbb
fdivl
into
jo
fnstenv
test
int
movsl
cmp
push
mov
adc
mov
dec
ds
pop
or
test
mov
lcall
hlt
int3
out
cmp
roll
mov
in
pop
scas
xor
mov
cmp
mulb
cli
xchg
inc
int
in
lods
int
sub
mov
mov
lods
inc
std
jecxz
xor
fdivrs
push
popa
dec
mov
arpl
xchg
pusha
xor
inc
fstpl
xor
js
std
popf
aaa
xchg
cmpsb
in
dec
fnstsw
test
and
pop
mov
xlat
gs
sub
mov
out
ret
mulb
adc
fcomp
or
sub
test
lods
and
inc
leave
outsb
xchg
inc
jmp
fdiv
sub
and
data16
repz
jge
add
rclb
xchg
cmpl
add
pop
adc
mov
jmp
mov
cli
dec
aam
mov
mov
sub
jae
test
xor
mov
push
cmp
shll
pop
subl
es
cmp
xor
int3
shll
inc
push
inc
mov
hlt
sbb
inc
and
or
lcall
push
fstps
mov
icebp
movsl
push
push
jmp
aaa
subl
inc
rolb
dec
out
xor
jnp
mov
ds
add
mov
xchg
hlt
xchg
int
pop
lcall
sahf
xchg
push
inc
call
add
dec
ljmp
inc
sub
repnz
adc
mov
mov
xor
ffreep
clc
xlat
cmp
and
test
xor
sbb
es
fcompl
test
ja
fmul
inc
adc
xchg
test
mov
das
xchg
daa
push
call
cmp
and
xchg
mov
or
fsubs
and
pop
or
stos
mov
popa
inc
add
incb
sub
out
cld
cmpsl
lahf
dec
in
stos
test
aaa
out
jb
les
jns
ljmp
mov
fcompl
fmull
movsl
test
das
mov
xchg
cltd
mov
jge
pop
repnz
adc
mov
inc
sbb
adc
andb
int
xchg
mov
lods
jnp
enter
out
mov
push
mov
mov
or
xchg
xor
push
add
call
inc
lods
stos
out
mov
push
pop
test
stos
push
outsb
push
inc
cmp
jle
sub
mov
mov
push
jg
and
add
pop
rcll
cmp
xchg
mov
fs
les
sahf
out
add
pop
mov
xchg
ljmp
lock
int3
push
ror
xor
movsb
mov
cmpsl
ja
fstps
dec
sti
ss
or
call
std
mov
push
mov
mov
pusha
leave
mov
insl
out
push
repnz
mov
sbbb
xor
xor
fmuls
mov
jb
xchg
fdivrl
inc
xchg
clc
and
push
cmp
ret
jbe
dec
jno
jo
inc
pop
cmpsl
jno
aas
mov
cmp
add
test
dec
mov
std
aad
and
insb
xor
xchg
inc
jmp
inc
push
xchg
imul
addr16
cmp
dec
cmp
test
lods
adc
push
lret
fs
roll
jmp
es
bound
mov
int
xor
xchg
xchg
pop
xor
psrad
cmpsl
pop
push
repz
nopl
jmp
inc
sbb
push
inc
enter
popf
inc
xor
push
mov
rep
add
loope
lahf
dec
pop
es
push
pop
sub
incb
inc
movsb
sbb
scas
sti
sar
int
mov
lcall
sub
cmp
popa
mov
test
xchg
adc
outsb
cmp
jl
lea
cld
addr16
xor
sahf
and
jbe
movsl
fistpll
mov
mov
rclb
adc
into
mov
jnp
je
cld
imul
arpl
ja
dec
jae
or
mov
sbb
cli
ret
xor
pop
cmp
call
or
sahf
sub
sbb
fcmovnu
lret
mov
cwtl
sub
xor
stos
pop
repnz
pop
stos
jno
sub
or
or
leave
mov
rol
push
and
fcomps
idiv
mov
pop
cmp
push
out
out
sbb
sti
enter
jns
jg
in
or
popf
jl
leave
popl
lds
adc
aam
fsubl
lcall
dec
popa
inc
jmp
int3
or
and
sbb
add
push
or
xor
out
pushf
inc
mov
sub
push
jnp
sub
lock
pop
jp
sarb
aam
hlt
or
sbb
fcomps
aad
sti
mov
cmpb
movsb
leave
dec
lret
adc
lods
jbe
cld
dec
push
mov
into
nop
sti
stos
pop
or
push
sbb
mov
cmp
mov
hlt
fdiv
sbb
xor
xor
jmp
add
mov
sbb
aas
mov
jg
lea
mov
jmp
dec
in
inc
push
sub
lods
std
lret
inc
xor
push
sti
and
movsl
mov
add
fsubl
push
rolb
mov
imul
sbb
mov
mov
push
fdivl
mov
mov
inc
jae
sahf
mov
das
data16
cli
inc
insl
into
mov
fldcw
mov
inc
stc
sub
movsb
ljmp
je
repz
pop
les
add
stos
push
or
xor
rclb
std
mov
dec
mov
and
add
push
sti
int3
stc
cmpsb
jl
push
inc
jbe
xlat
push
lcall
insb
rcr
clc
mov
dec
scas
hlt
enter
inc
push
pushf
into
xchg
xor
push
das
repz
ret
fldenv
jge
adc
int3
stos
jp
jne
mov
fnstenv
pop
fimull
pop
js
arpl
dec
jp
pop
mov
stc
hlt
xor
test
scas
cmp
outsl
inc
dec
leave
ss
mov
xchg
sti
sub
fwait
pop
sub
loop
inc
mov
scas
das
movq
xchg
sub
or
lock
cmp
sbbl
in
lahf
cmp
icebp
test
xor
inc
loope
test
xchg
add
add
ss
stos
sub
fcompl
test
repnz
ret
fistpll
mov
add
repz
sbb
push
mov
clc
jl
scas
pop
outsb
hlt
je
popl
add
test
in
mov
sub
cmp
lahf
xchg
fisubrl
push
scas
cmp
jo
mov
sahf
stos
out
pop
sbb
lcall
or
fdivrs
push
mov
pop
push
mov
stc
int
in
mov
and
scas
cmpsl
cmp
push
cmp
mov
lcall
and
std
rorb
fdivr
insl
subl
cmpsb
dec
popl
add
jecxz
dec
fcmove
adc
pop
call
leave
jle
rorb
jae
mov
pop
and
pop
mov
add
bnd
cmp
out
dec
pop
mov
fwait
pop
or
jbe
mov
cmp
or
sti
int3
int3
mov
pop
sbb
jne
js
cmp
and
dec
cli
shlb
xchg
sub
push
and
sub
ret
or
add
leave
cmp
jnp
xchg
dec
ja
inc
cwtl
nop
cmp
xor
push
nop
lahf
jl
mov
jo
outsb
mov
loope
in
cmpsl
jmp
imul
loop
and
addr16
sbb
sbb
jae
scas
adc
flds
shll
and
lret
mov
jne
xchg
xor
cmpsl
lds
inc
scas
aam
dec
or
daa
adc
shrl
mov
outsb
in
xor
cmp
nop
cmpsb
sbbb
mov
jae
mov
mov
lahf
sbb
push
jmp
shlb
push
pushf
jge
xor
inc
sti
in
adc
cmp
cmp
jbe
rolb
adc
loop
mov
repz
sti
dec
cmp
je
dec
call
arpl
dec
jmp
push
out
pushl
sbb
repnz
enter
cmp
adc
jno
mov
cmp
insl
loop
inc
mov
sbb
jp
mov
add
mov
dec
inc
cmpsl
sub
pop
scas
dec
lods
push
in
sub
xchg
adc
add
aam
mov
movb
imulb
sbb
push
adc
iret
cld
xor
cmp
mov
sbb
cmp
inc
cmp
pop
lret
fcmovnb
adc
gs
mov
adc
loopne
push
push
inc
stc
xorb
cmp
repnz
and
data16
push
aad
mov
xlat
jae
cwtl
sub
adc
fsts
mov
mov
xchg
fimuls
mov
cmp
inc
mov
into
add
add
sub
xchg
test
dec
fstpt
mov
std
mov
xchg
sbb
and
clc
jno
xor
sbb
fxtract
inc
lret
jbe
gs
imul
out
sbb
or
xchg
xlat
and
jb
test
rorl
and
sub
xchg
cmp
test
outsl
cmp
pop
pop
push
mov
aad
xchg
data16
or
push
push
add
add
fsubrs
scas
mov
in
mov
mov
int
inc
pop
mov
in
mov
adc
cld
cmp
scas
sbb
inc
aad
mov
insb
hlt
mov
ljmp
and
shll
ljmp
sub
cmp
fcomp
dec
lods
ja
push
cmp
lret
aaa
dec
push
jbe
fcomp
lea
push
dec
push
mov
mov
sahf
sbb
movsl
adc
out
aad
lods
inc
shrl
test
les
mov
fnstcw
rcl
das
mov
inc
mov
cmp
lods
xor
pop
loopne
fldt
fwait
cs
movsl
inc
outsb
loop
sub
imull
std
divl
clc
add
call
push
jno
pop
fnstenv
pop
xchg
mov
in
cmp
movsb
mov
mov
xchg
adc
inc
jnp
fcmove
xor
outsb
xchg
scas
je
repz
pop
xchg
mov
dec
adc
sub
enter
jbe
mov
in
or
cltd
in
adc
mov
adc
in
mov
xor
das
sbb
mov
das
mov
push
jae
mov
push
cmc
int
sahf
pop
adc
mov
lods
dec
mov
leave
sbb
aas
sub
cmp
inc
pushf
and
jge
xchg
jp
rorl
sub
aam
push
jnp
add
push
sbb
mov
push
xorl
mov
mov
push
mul
adc
idivl
fcompp
cli
or
add
xchg
xor
xor
lahf
fstps
pop
inc
pop
mov
cmp
clc
int3
fdivs
scas
insb
dec
test
xchg
sahf
xor
test
pusha
subb
push
in
dec
dec
xor
mov
popf
cs
inc
pop
out
fwait
movsb
jb
sbb
mov
jecxz
repz
jb
neg
inc
jmp
sub
jle
add
cld
call
inc
xor
nop
sub
push
or
mov
sub
push
sbb
dec
cmp
rorl
mov
subl
dec
enter
mov
int
sahf
sahf
movsb
fabs
lds
xor
test
xor
push
sbb
dec
andb
sahf
sub
cmp
es
repz
jp
fnstenv
test
les
add
inc
cmp
aam
mov
aaa
xchg
fmul
int
adc
movsl
aam
std
mov
adc
push
insl
xchg
sbb
notb
int
mov
mov
xor
mov
lods
sbb
test
dec
lahf
data16
mov
sti
iret
sub
mov
movsb
mov
jle
jne
dec
or
mov
nop
or
lret
test
and
pop
xor
dec
loope
cmp
xor
daa
cmp
push
mov
cli
fsubl
push
cmpsb
push
cmpsb
jae
fadd
sbb
ret
scas
jp
xor
jbe
test
das
repz
adc
lds
mov
out
decb
inc
add
pop
sbb
mov
push
stc
addr16
jno
fdivrl
orl
cs
sbb
addr16
insb
pop
mov
scas
hlt
jae
rclb
xorb
shll
mov
inc
fnstenv
xchg
sarl
test
shrb
and
or
sbb
mulb
sbb
mov
sahf
lds
outsb
pop
jecxz
rolb
movsb
insb
cmc
dec
lods
int
inc
movsl
lea
cmp
es
push
pop
xchg
xchg
mov
aad
xchg
sbbl
mov
sahf
loope
pushf
dec
repnz
lahf
aas
ja
ret
inc
fwait
pop
ss
sub
orb
aad
mov
add
hlt
rcl
sbb
fwait
and
popf
jo
in
mov
inc
adc
xchg
fldenv
xchg
scas
xchg
sbb
cs
int3
mov
fs
xchg
pop
jg
stc
inc
cmc
lds
jbe
filds
pop
sub
in
ficoms
ret
mov
les
push
stos
adc
cmpb
mov
and
sub
in
mov
shll
test
out
xor
ret
mov
mov
gs
push
dec
insl
jg
push
mov
stc
lods
mov
imul
fildl
cmp
dec
pop
std
fsubrs
adc
in
jle
and
xlat
lods
mov
push
adc
cmp
das
xor
shl
lcall
popa
repnz
add
fcomps
loope
push
jno
xor
clc
xor
test
mov
cmpsb
or
gs
mov
stos
mov
push
xchg
inc
aam
pop
and
jecxz
ret
fmuls
and
imul
cli
or
sub
fsubrs
je
scas
jnp
xchg
leave
out
inc
stc
scas
imulb
js
xchg
mov
dec
or
jp
movsl
mov
adcl
mov
gs
jp
push
push
cmp
out
mov
call
push
xor
sub
fidivrl
pusha
adc
mov
adc
or
sbb
das
in
cwtl
dec
lock
mov
lea
adc
dec
push
dec
sbb
xor
mov
imul
and
and
mov
lret
pop
jge
or
pusha
push
and
test
iret
jo
xor
or
sbb
sbb
in
or
sbb
cmpsb
jns
loope
out
mov
or
loopne
scas
pushf
mov
fsts
aaa
add
mov
in
lods
cmpsb
cmp
mov
aam
mov
or
ljmp
xchg
mov
outsl
push
inc
inc
jae
in
mov
cmp
unpcklps
push
movsl
aas
mov
daa
sahf
rcrl
and
xchg
lea
and
pushf
mov
out
call
xchg
aam
mov
nop
jns
ret
test
mov
cmp
stos
shlb
adc
repnz
sub
cmp
or
xchg
sub
dec
add
mov
sbb
fmul
mov
pop
sub
mov
inc
lods
sbb
jno
cmpsl
adc
in
cld
mov
push
lret
adc
scas
subl
jl
scas
adc
dec
mov
sbb
mov
or
and
mov
sahf
xor
push
int
sub
adc
or
orb
in
or
and
lea
mov
dec
mov
xchg
and
out
fs
loop
and
jle
xchg
out
or
or
jg
mov
xchg
lods
dec
jge
dec
adc
push
addr16
push
inc
addr16
test
outsb
es
lret
inc
stos
jle
xchg
or
xchg
push
adc
pop
inc
cmp
aaa
test
jo
in
cmp
or
jecxz
dec
ljmp
adc
mov
inc
fistps
mov
jb
xor
push
inc
push
add
push
clc
loope
fwait
pushf
mov
push
xor
xor
and
and
mov
or
mov
incb
and
mov
jno
xor
mov
ret
nop
sub
push
scas
mov
mov
mov
mov
sbb
mov
push
pop
mov
pushf
je
add
adc
pop
aad
mov
cli
std
mov
mov
push
es
out
mov
adc
aas
jge
mov
cmp
sbb
pop
push
jmp
xchg
test
adc
ror
mov
pop
add
fs
popa
mov
push
inc
pop
xchg
cmp
mov
sub
jmp
inc
out
nop
scas
or
mov
ja
aam
stos
cmp
push
cmpsb
push
pop
orps
das
xor
sbb
stos
push
mov
dec
cmp
push
jg
es
pop
addr16
mov
nop
lcall
cmp
xchg
ret
jp
shr
xorb
adc
pop
out
fsubl
xor
in
xchg
in
dec
dec
in
addr16
mov
mov
jae
int
insl
insl
xchg
xchg
add
lods
and
sbb
cltd
in
or
lea
sbb
sbb
mov
out
xchg
in
arpl
jb
mov
in
and
popf
xchg
pop
and
incl
cmc
sub
jno
lahf
jle
inc
and
jae
adc
inc
loope
cmp
inc
dec
aas
and
test
loopne
das
fnstenv
mov
push
mov
add
sbb
sbb
push
rorb
mov
and
pop
inc
pop
ds
mov
cmpsb
negb
test
mov
push
faddl
lods
fildll
push
add
jge
jecxz
sbb
lahf
sub
mov
cld
out
arpl
out
mov
fsin
jp
cmp
dec
cmpsb
dec
fchs
das
sbb
rclb
mov
sahf
jno,pt
mov
mov
sub
jmp
xorb
push
add
inc
pop
aam
jge
aad
shlb
adc
adcl
rcll
sbb
cmp
jae
mov
xchg
sub
ret
outsb
xchg
aas
mov
xchg
jp
in
mov
xchg
iret
stos
dec
push
test
repz
push
xchg
and
cmc
dec
cmp
stos
nop
push
test
loopne
jl
pop
out
pop
fsts
jb
in
out
cmp
jl
test
ds
fscale
data16
cmp
pop
xor
mov
and
xor
mov
pop
cld
xchg
jns
test
das
mov
lods
mov
or
jg
fimuls
fs
cmc
test
mov
and
lods
xor
in
mov
sbb
dec
xchg
add
mov
mov
mov
movsl
add
xor
push
rolb
mov
std
sbb
shll
mov
mov
out
adc
mov
add
xor
imull
xor
pushf
dec
push
dec
ss
scas
out
jno
in
sub
in
fxch
aad
lods
out
popf
lods
pop
out
pop
les
cltd
mov
rorl
sub
sbb
add
std
and
popa
jnp
pop
popf
xor
insb
test
fists
fwait
push
push
jmp
int3
inc
es
into
mov
dec
aad
pop
lock
cld
xchg
std
inc
fldt
push
in
shl
movsb
sbb
dec
std
mov
fs
inc
mov
test
mov
cltd
popa
push
enter
in
pop
fstps
insb
add
std
movsl
jge
in
getsec
insb
aam
fwait
lock
rcr
cmp
lahf
stc
and
or
rcl
pop
andl
cmp
lods
xchg
pop
xchg
rol
mov
aam
rdpmc
mov
pop
adc
sbb
lods
inc
stos
fnstsw
sub
scas
loop
inc
mov
and
imul
test
data16
sub
push
movsb
mov
mov
cli
sub
rcl
dec
mov
testb
cmp
mov
or
xchg
mov
test
jno
dec
jnp
xchg
sub
sub
int3
popf
pop
pop
shlb
sbb
aam
mov
push
int
test
fstpt
pop
fists
mov
ret
sbb
icebp
jbe
out
sub
daa
or
adc
mov
xchg
sbb
scas
andps
pop
out
lcall
jl
hlt
xlat
mov
stos
shll
int
mov
lds
ljmp
jp
ljmp
test
dec
roll
fcompl
cmp
and
cmp
dec
or
les
push
lds
push
adc
flds
push
cld
xchg
pop
neg
mov
dec
xor
mov
int3
mov
imul
ja
sub
mov
lock
mov
cmp
gs
inc
inc
jge
xor
fwait
cmpsl
dec
rcl
test
insb
mov
adc
popa
out
rorb
push
loopne
dec
mov
adc
push
ss
jge
cmp
pop
repz
addr16
dec
inc
shr
negb
nop
sub
adc
add
xor
pop
in
out
in
push
inc
push
pop
scas
mov
cmp
fwait
and
xor
pop
out
mov
adc
or
jge
add
cmp
lahf
insl
mov
and
inc
pop
mov
daa
fisttpl
mov
push
in
jb
insl
nop
pop
pop
push
pop
out
mov
xchg
xchg
push
inc
mov
or
inc
mov
xchg
movsb
mov
in
sarl
roll
sub
cs
fcmovb
mov
mov
insl
cmp
movsb
pop
je
inc
pop
push
call
mov
push
and
lret
mov
mov
test
xchg
jb
push
push
lahf
dec
push
add
pop
sti
and
scas
lods
test
push
push
push
or
int3
inc
insl
sti
addb
lcall
int
imul
xor
jns
cmpsl
mov
lahf
pop
nop
or
sub
test
movsb
das
push
mov
xchg
or
mov
jg
jl
dec
repz
and
stos
fwait
mov
fsubrl
push
xchg
clc
lock
scas
movsl
and
arpl
test
cli
repz
out
xor
fsubrl
push
pop
xchg
and
mov
sbb
mov
test
gs
cmp
popf
mov
test
xor
inc
pop
sub
ja
enter
or
xor
mov
gs
ljmp
imul
dec
or
jge
outsl
xorl
jnp
dec
out
ljmp
sub
int3
lods
sbb
rep
or
mov
movsb
mov
sar
nop
pop
lods
dec
push
lahf
movsb
test
sub
and
mov
les
int
loopne
idivb
xor
lret
jge
std
sti
fdivs
mov
cld
imul
flds
movsb
xchg
mov
mov
sti
addb
mov
je
movb
inc
in
and
xchg
cmpsl
cmp
out
fsin
mov
or
negb
mov
aaa
int3
adc
clc
std
ss
das
fwait
wrmsr
mov
je
xchg
mov
adc
xor
push
sbb
sub
les
fwait
jb
mov
test
dec
scas
lea
and
arpl
mov
imul
jp
popa
xorb
test
test
xchg
lea
inc
pop
sbb
xchg
repnz
dec
mov
fsts
vphadduwq
and
or
push
fnstsw
sti
lds
sbb
sub
test
outsb
mov
andb
or
cmp
lcall
iret
jecxz
scas
xor
xor
out
fidivl
xchg
jmp
pop
out
xor
sti
aad
cmp
rcrb
mov
cmpsb
mov
mov
xorl
jmp
jnp
sbb
xchg
repz
push
jg
test
lcall
gs
jmp
dec
pop
fiadds
scas
pop
add
xor
mov
inc
imul
aaa
fdivp
push
in
int3
test
adc
push
push
sbb
adc
push
testb
aaa
ljmp
mov
bswap
ja
das
ret
std
xor
jmp
push
pushf
mov
mov
xor
fcomip
repnz
jns
arpl
xchg
adc
sub
add
addr16
fsts
xor
inc
ficomps
xchg
mov
push
fidivrs
jge
push
jnp
adc
jns
xchg
in
jp
in
sbb
and
in
popf
push
es
test
scas
es
mov
inc
cli
xchg
sbb
popw
cmp
push
enter
testl
add
mov
dec
int
test
mov
dec
out
xor
aad
cmp
push
outsb
out
and
mov
add
rol
add
scas
xlat
fdivrs
lret
xor
add
cld
icebp
sub
pop
mov
andb
push
clc
cltd
add
mov
lahf
jo
add
js
loop
mov
sbbl
shrl
lods
mov
movsb
dec
pop
dec
in
fnstenv
cmp
xor
in
std
mov
test
loope
sti
ss
ss
sbb
lock
call
mov
lods
icebp
inc
and
fistpl
add
pushf
repnz
dec
ljmp
mov
scas
xchg
push
popf
mov
lret
and
cmp
xchg
cli
xor
sti
jmp
mov
leave
cmp
mov
arpl
pop
in
outsl
popf
mov
int3
mov
add
sbb
imul
leave
out
adc
xlat
add
loop
cmpsb
enter
inc
scas
jp
cltd
mov
popa
push
mov
sub
pop
jb
and
int
xchg
data16
das
xchg
or
mov
sub
fiadds
jp
sub
ljmp
adc
dec
mov
lds
sahf
push
addr16
push
mov
out
rcrb
pop
cs
xchg
out
sbb
and
sahf
jae
cmpsb
inc
mov
test
adc
dec
xor
sti
mov
dec
mov
mov
jg
pop
int3
inc
push
inc
push
mov
cmp
insb
fcompl
imul
mov
ficomps
in
cmp
nop
insb
ds
mov
sub
addr16
icebp
xchg
rol
popa
lcall
ja
sub
dec
xchg
mov
xchg
pushf
dec
rep
psubsw
push
out
aaa
in
adc
test
push
and
or
jne
popf
outsl
andb
mov
pusha
mov
lret
pop
cld
icebp
loop
test
dec
mov
xchg
xorb
adc
fisubs
xchg
cwtl
out
add
mov
insl
jne
loopne
das
mov
jle
jnp
out
out
jl
mov
aad
je
rcr
sub
and
ljmp
and
hlt
std
lock
inc
xlat
pop
jno
adcb
test
int
add
outsb
out
dec
sbbb
pushf
push
sub
mov
nop
hlt
xor
jne
cmp
push
movsl
data16
test
mov
cmpb
mov
xor
sarb
and
mov
dec
add
fs
fxtract
inc
rclb
or
xchg
mov
fwait
imulb
mov
hlt
out
mov
pusha
mov
ja
mov
aas
out
xchg
sub
jno
fnstenv
cmpsb
cld
loopne
dec
out
test
lcall
fidivs
inc
fstps
andl
adc
mov
in
jl
fdivrl
or
or
inc
filds
clc
fisubs
mov
inc
in
stos
out
sbb
inc
pop
mov
shll
ficoms
and
mov
fmul
loope
pop
dec
and
mov
icebp
mov
into
enter
mov
movsb
test
outsb
inc
scas
hlt
popa
fwait
dec
and
mov
ds
cmp
imul
sub
call
insb
push
mov
mov
test
das
mov
push
mov
mov
cmp
mov
mov
push
jnp
aam
fdiv
add
adc
inc
and
sbb
das
xchg
push
lea
jp
imul
and
xor
out
jno
aas
or
and
sti
mov
xor
push
push
lahf
push
leave
stos
or
pushf
ljmp
xor
loopne
inc
lcall
ljmp
pop
repz
scas
push
add
into
repz
xchg
push
push
sahf
jno
sbb
pop
adcb
inc
test
xchg
mov
incb
fsubrs
fsts
fbld
jl
mov
ja
pop
repz
fpatan
xor
xchg
jp
int3
mov
and
sar
movsl
icebp
sahf
imul
or
mov
out
cmp
xchg
int
or
int3
dec
int3
mov
das
movb
loope
push
lahf
shll
mov
inc
push
scas
in
push
add
in
cmpsl
mov
mov
andl
sbb
cwtl
mov
dec
push
dec
fwait
jmp
inc
lods
xor
sub
sbb
sbb
mov
nop
jae
mov
lret
test
mov
push
mov
mov
mov
add
add
mov
pop
dec
dec
mov
in
jno
dec
jge
icebp
push
imul
mov
xor
in
aam
jmp
insb
test
aam
inc
sbb
decb
js
subb
pop
and
pop
mov
mov
fxch
dec
cmp
or
sub
mov
or
mov
sub
aaa
dec
lods
push
in
jne
mov
cmpsb
aad
flds
push
and
in
jno
shlb
push
push
push
js
mov
add
pusha
adc
xchg
sub
xor
inc
gs
fsubrl
in
jb
sub
jnp
adc
push
stos
dec
inc
ja
cmp
sahf
addr16
repz
sbb
ret
cld
fucom
ret
lods
mov
ljmp
popf
jge
imul
stos
fistpll
mov
or
sbb
jecxz
jmp
sbb
test
leave
xorb
sub
stos
mov
inc
mov
xchg
adc
dec
cld
push
gs
fldenv
cmp
mov
jp
in
mov
iret
or
sub
mov
sbb
ds
loopne
aas
jne
dec
imulb
fld
out
xor
lcall
push
in
cmp
and
ret
adc
pop
inc
cmp
cmp
fwait
push
inc
pop
push
jecxz
je
in
hlt
in
inc
jmp
loope
clc
push
pop
test
roll
push
mov
cmp
mov
fistpl
repz
xor
xchg
or
test
mov
sbb
and
repz
cld
xor
sarl
popa
je
and
mov
pop
or
mov
and
pop
jnp
pop
jmp
in
test
repz
sub
mov
fcompl
inc
xor
pop
mov
push
sub
mov
jge
xor
xchg
inc
mov
sbb
enter
jae
ds
pop
insl
mov
jo
testb
mov
mov
fs
aam
add
sbb
ds
jnp
enter
cmpl
lods
das
and
scas
pop
push
and
imul
dec
inc
je
xchg
inc
sbb
mov
sbb
das
push
mov
mov
pop
adc
mov
lahf
aam
into
pop
jmp
cmpsb
mov
movsb
cmp
ljmp
mov
lcall
cmp
push
test
cltd
test
add
adc
mov
fiadds
cmp
pop
shl
sub
ret
pusha
push
mov
xlat
pusha
mov
lcall
push
sub
xchg
addr16
lods
sahf
test
pusha
movsl
xor
inc
int
mov
sti
push
xor
dec
inc
pop
loop
movsb
daa
stc
cltd
gs
into
or
xchg
fidivs
ret
sbb
jl
adc
mov
cltd
xlat
pop
sahf
mov
and
mov
ret
popa
test
rorb
popf
pushf
test
or
mov
loop
lods
inc
lds
pop
std
arpl
call
pop
lods
adc
lock
pushf
cmp
test
and
cmc
loopne
daa
lods
repz
les
mov
jmp
jg
cmp
sub
orb
fs
test
imul
int
push
imul
jo
cmp
sahf
das
mov
inc
stos
lds
inc
loopne
add
int
lcall
pop
jmp
jl
or
pop
mov
in
aam
orb
movsb
adc
mov
std
mov
cmpsb
fstps
add
add
mov
push
mov
push
dec
jp
cwtl
dec
sbb
sub
xchg
xor
mov
pushf
bnd
das
jae
mov
xor
jbe
pushf
lods
dec
fcoms
outsl
scas
mov
push
xchg
jbe
pop
repz
arpl
fimull
inc
add
adcb
xor
rcrl
adc
push
push
sbb
mov
fisubrs
dec
sub
int3
jnp
lock
popf
add
das
xchg
divb
add
push
push
scas
pop
jecxz
dec
mov
jmp
dec
std
cs
mov
fisttpll
fldenv
cmp
jecxz
dec
pop
lods
int
cmp
pusha
loop
push
shll
xchg
mov
adc
sti
xor
xor
mov
ds
jae
jle
sahf
out
pop
sub
addr16
test
sbb
xchg
out
nop
xchg
iret
jp
movsb
sbb
mov
test
mov
lcall
jno
inc
or
or
int3
add
mov
inc
mulb
out
into
push
adc
sub
jne
xlat
cmpsb
ljmp
les
movsl
xchg
sahf
and
sub
push
push
imull
out
fs
pushw
pop
fdivrl
cli
cmp
sahf
push
mov
lods
push
je
popa
or
lods
ret
dec
scas
push
enter
ret
push
dec
gs
das
lods
sub
mov
cmpl
fisubrs
loop
or
and
pop
adc
jae
push
ds
xchg
xchg
out
pop
lret
jle
loope
push
jecxz
cmc
fstpt
in
int
xchg
out
pushf
cmp
xchg
adc
mov
test
les
addr16
cmp
jno
in
xor
fstl
xlat
jl
scas
test
pop
xchg
into
arpl
and
push
aad
std
fwait
xor
sar
lods
stc
fcmovne
pop
pop
das
dec
jb
lds
cmp
fidivrl
pop
dec
sbb
cli
out
repz
pop
sti
ret
sahf
mov
sbb
and
pop
fstpt
or
fidivs
inc
push
xor
push
mov
pop
mov
das
or
and
mov
cmp
xchg
jge
mov
lcall
mov
fnop
iret
mov
movsl
je
loop
scas
mov
fildl
and
or
push
out
repnz
pop
cmp
adc
mov
cmpsl
and
icebp
and
sbb
xor
dec
into
mov
mov
sti
inc
jmp
int
inc
mov
ss
enter
push
pop
je
iret
jae
jne
stc
jo
add
cmp
sar
fisubs
and
std
pushf
mov
sub
xchg
ds
adc
mov
lcall
inc
mov
dec
lret
xchg
clc
test
fcom
ss
daa
addl
push
negb
fdivrl
js
sbb
mov
jb
mov
test
mov
testl
xor
pop
cmp
icebp
xlat
mov
iret
xchg
and
and
dec
jmp
mov
outsl
push
mov
cmpsb
test
in
sbb
test
scas
dec
or
add
sahf
std
stos
fldenv
cmpsb
push
mov
mov
sub
ljmp
roll
adc
cli
jle
jnp
lods
jp
mov
mov
adc
mov
ret
add
loop
aam
and
push
dec
cmp
mov
push
mov
sub
sub
lcall
nop
push
roll
std
sub
jecxz
mov
in
stos
add
addr16
pop
mov
push
in
push
neg
xchg
sub
push
jbe
out
out
or
or
sub
loopne
mov
jae
or
adc
test
cmp
xor
dec
xchg
inc
outsb
jae
lock
popf
js
and
push
mov
les
xchg
movsl
in
mov
into
push
or
pop
and
mov
fisttpl
mov
pop
enter
sbb
dec
jl
xchg
xchg
cli
pop
scas
mov
sbb
xor
inc
and
std
dec
push
in
insb
int
sbb
mov
xchg
push
outsl
shlb
jl
es
mov
shl
stc
pop
xchg
xchg
push
dec
mov
cmpsb
mov
push
hlt
inc
xchg
sete
mov
lods
out
xor
cmp
push
nop
dec
call
data16
inc
cmp
mov
out
fmuls
int3
mov
fistpl
test
push
add
lods
arpl
push
mov
xor
test
shlb
ficomps
lods
movsl
jnp
rcr
cmp
and
cmp
sub
and
sub
xchg
and
mov
inc
mov
jl
movsl
fnstcw
xor
mov
mov
add
mov
jecxz
mov
and
or
fldenv
mov
std
jne
or
or
adc
pop
icebp
mov
push
mov
pop
mov
xor
dec
mov
into
sbb
cmc
mov
push
test
mov
xchg
cmpsb
mov
popa
lds
jecxz
jl
icebp
mov
mov
pusha
or
jl
inc
push
pushf
sbb
daa
lock
mov
push
stos
inc
call
aam
imul
cmp
test
cmp
in
jo
es
clc
mov
out
jp
adcl
int3
sub
push
iret
cmp
jl
mov
lock
xor
fldenv
jg
les
in
mov
or
out
dec
repnz
or
mov
mov
gs
cmp
insl
movsb
inc
and
fadds
jp
sub
jg
adc
loopne
std
push
fstl
mov
and
repz
sti
mov
xchg
int
movl
in
ds
scas
mov
add
test
mov
out
repz
out
adc
inc
pop
rcr
mov
xor
pop
sahf
jb
push
mov
or
movsl
pop
rorb
arpl
cs
sahf
jge
xor
xchg
mov
scas
jge
mov
lods
cmp
sub
sub
movsb
mov
jb
in
das
inc
call
cmp
mov
mov
push
xchg
lret
push
or
aas
xor
sbb
xchg
jno
mov
mov
aad
jns
jl
aam
fsubp
xchg
out
cmp
test
or
loopne
dec
sub
lods
ret
pop
pushf
test
mov
pop
lahf
sbb
scas
push
mov
add
testl
inc
mov
mov
mov
test
push
inc
arpl
inc
and
mov
test
or
popa
scas
lahf
cmp
mov
outsb
pop
movsb
or
xchg
dec
es
insb
and
stos
jb
inc
adc
call
out
in
xchg
lahf
in
sbb
jecxz
lahf
xor
leave
mov
in
cmpsb
flds
testb
xchg
xchg
inc
in
cmc
ficomps
std
inc
je
mov
xchg
std
out
xchg
mov
jmp
sub
adc
cmp
jo
pop
sbb
jnp
cmp
jo
xor
or
ja
enter
int3
call
fbld
jns
jge
ret
pop
pop
fnstcw
fnsave
jnp
mov
cli
les
popf
adc
jle
addr16
adc
add
in
mov
int
mov
test
inc
fldenvs
bound
pop
mov
lahf
popa
sbb
add
je
mov
cmp
outsb
xor
lret
lahf
outsl
cli
fcmovbe
adc
or
in
outsb
es
lods
and
dec
roll
out
and
lods
notl
jl
mov
popf
mov
out
lods
testl
or
sub
int
jge
xchg
adc
jno
mov
mov
pop
xor
clc
push
andl
insl
das
in
pop
out
int
ret
orb
ficoms
sar
mov
lcall
sub
insl
push
test
ret
dec
ret
popa
lahf
mov
fxch
cmp
outsb
push
adcb
adc
and
sbb
sbb
je
push
fisubs
pop
inc
ret
add
fs
popf
mov
adc
push
xor
mov
ficoms
daa
loop
mov
mov
sbb
test
sbbl
out
in
cmpsb
xchg
iret
int
jge
xor
ficomps
lret
mov
popf
jge
jns
sbb
jge
addr16
xchg
push
enter
push
inc
adc
mov
push
pop
frstpm(287
cmp
inc
cltd
int
mov
imul
inc
orb
das
mov
cwtl
jne
mov
xchg
mov
test
jmp
rolb
test
mov
test
cmpsb
push
orb
push
sbb
out
and
test
fs
inc
jo
jo
and
push
jmp
addl
fldcw
imul
add
clc
outsl
inc
daa
lahf
xchg
and
or
insb
mulb
flds
popf
jecxz
sbb
xchg
pop
in
mov
mov
test
mov
pop
sbb
fiadds
cmp
or
loope
mov
add
inc
push
lock
pop
pop
ss
out
sub
mov
jbe
jecxz
mov
xchg
add
icebp
iret
pop
mov
sahf
xchg
cmpsb
movsl
ss
xor
jge
push
mov
xor
jns
sbb
je
mov
mov
lods
popf
into
lret
or
ds
mov
jge
inc
lret
test
fstps
pop
mov
clc
loope
add
mov
mov
les
lret
adc
mov
jge
mov
pop
les
pop
bound
or
gs
test
int
jmp
mov
mov
fistpll
and
xchg
gs
mov
pop
xor
ret
scas
imull
fsubrs
sarb
xor
arpl
test
test
mov
fld
jnp
jecxz
jge
pop
call
inc
xor
dec
es
sbb
fnstenv
mov
aas
call
pushf
scas
cmpsl
test
push
dec
insb
and
ret
loope
mov
jb
lods
add
xchg
mov
fsub
add
outsl
push
test
cmp
inc
and
data16
or
xor
je,pt
pop
stc
or
adc
xor
sbb
inc
cmp
shll
inc
and
dec
les
push
push
or
mov
xor
mov
xchg
sub
jae
push
adc
sbb
push
mov
fidivrl
sahf
mov
addr16
mov
loopne
fisubrs
sti
sbbb
jl
je
out
cmp
push
stc
dec
ror
or
and
mov
lcall
xor
mov
push
lods
shrb
jb
add
jo
sub
mov
jb
int
mov
fldl
ret
xchg
das
cmp
push
lret
mov
fwait
and
add
jnp
movsb
cli
dec
push
jmp
inc
mov
andb
ds
fcoms
les
lods
push
daa
cmpsb
scas
flds
adc
cwtl
out
sub
dec
test
popa
cmp
int
inc
lcall
adc
js,pt
jae
sbb
or
xor
xor
arpl
xchg
int3
adc
out
sub
movsb
in
int
xchg
jecxz
in
or
loop
inc
xchg
outsl
adc
jle
jbe
pop
cmp
mov
xor
popa
xor
inc
test
loop
sbb
mov
testl
xchg
shrl
fucompp
aaa
lods
shrb
cmpsb
hlt
sahf
test
add
jb
repz
shlb
orb
cmpsb
test
loope
mov
stos
arpl
mov
xchg
addr16
loop
pop
std
inc
int3
gs
gs
push
loope
pop
xor
jp
mov
outsb
insb
popa
out
es
ja
test
or
das
aaa
fstps
xchg
push
sub
shrl
aaa
sbb
shll
int3
imul
sbb
mov
orb
adc
jo
ss
roll
sar
add
xor
fldcw
popf
movsb
push
mov
insl
gs
jg
mov
jecxz
out
in
stos
sar
jle
push
daa
js
mov
cltd
mov
call
outsl
add
loopne
and
out
stos
call
repz
fbstp
shlb
jnp
mov
push
daa
sahf
test
das
xchg
xchg
fsin
lret
push
adc
push
js
inc
insl
xor
movsb
in
scas
gs
lock
push
mov
fildll
out
push
mov
scas
ja
mov
dec
out
mov
jp
push
pusha
xchg
and
outsl
inc
int
addr16
inc
add
mov
and
or
fnstsw
cld
movsb
push
mov
dec
in
stc
mov
aad
loop
popf
je
pop
mov
cmp
mov
out
mov
sahf
mov
push
jmp
mov
inc
aaa
outsb
dec
ja
lods
sbb
push
daa
jle
cmpsl
push
and
lret
andb
cli
inc
in
js
inc
xchg
sub
and
mov
mov
cmp
mov
cmp
outsl
cmp
mov
lcall
push
sahf
push
push
xchg
sbb
mov
aam
add
lock
cmc
rcrl
test
es
loop
adcb
push
dec
or
mov
xor
add
mov
gs
jmp
xchg
inc
mov
jmp
mov
int
xchg
adc
xor
or
or
test
into
cmpsb
mov
sahf
fcompl
lret
pop
ds
sbb
lds
jnp
inc
jbe
sbb
xchg
fucom
fwait
sub
xor
mov
je
mov
inc
cmpsb
or
out
stos
fs
jle
test
pop
xor
fdiv
lcall
pop
fmul
repnz
lahf
test
andb
pop
das
or
mov
pop
mov
adc
cmpl
es
imul
pusha
and
mov
cmpsl
pop
outsb
jno
mov
mov
push
jns
call
jb
nop
insl
pop
in
jl
cld
sbb
lcall
mov
pop
cltd
adcb
clc
mov
xchg
pop
xor
test
jecxz
aad
dec
mov
cmp
xchg
inc
mov
cltd
call
pop
loope
test
out
mov
arpl
mov
sbb
fs
mov
out
aas
in
aas
xor
xchg
test
or
sub
out
inc
mov
stos
insb
cmp
mov
scas
inc
dec
int
psubsw
aaa
jno
rcl
inc
lret
lods
out
int3
mov
jae
inc
imul
movsl
cmpsl
fildll
push
fsub
pop
test
sub
add
dec
sbb
xor
cmpsl
js
int
clc
mov
push
sub
data16
and
rcrb
or
inc
jecxz
adcl
addb
pop
dec
add
insb
repnz
dec
ljmp
inc
dec
sti
dec
mov
cmpsb
mov
sub
jp
pop
lcall
dec
or
or
rcrb
leave
lods
outsb
dec
repz
enter
inc
mov
out
sti
push
push
scas
outsb
cmp
pop
les
mov
mul
int3
repz
or
call
xor
and
ffree
jle
and
xor
jp
std
mov
rclb
ret
jecxz
inc
imul
in
lock
sahf
fimuls
adc
xor
inc
fucomip
lods
loop
out
shrl
int3
fnsave
fwait
push
push
lds
lods
mov
sbb
int3
sbb
mov
mov
out
stos
add
lods
arpl
ss
inc
xchg
fnstenv
test
sbb
push
inc
pushf
test
jae
aaa
test
adc
inc
dec
mov
sbb
js
cld
test
mov
cltd
outsb
scas
push
xor
clc
adc
bound
add
xor
aam
pop
dec
cmpsb
aam
mov
xchg
mov
iret
cmovo
scas
mov
jmp
popf
add
mov
lock
mov
test
loopne
in
mov
test
sub
dec
mov
and
mov
movl
and
movb
scas
xor
test
xchg
in
mov
push
test
rcrb
test
repz
xlat
lds
mov
mov
adc
mov
pop
push
outsl
xor
pop
addr16
aad
in
pop
shl
nop
jbe
test
movb
lods
fidivs
xchg
fs
mov
xor
mov
mov
xchg
jo
or
mov
and
lods
pop
sub
jns
icebp
mov
xchg
xor
inc
push
inc
add
cld
inc
fstps
cltd
popa
lods
std
mov
cmpsb
fnstcw
insl
pop
in
jns
jmp
cmp
fistpll
test
lcall
pop
add
es
push
push
int
push
adc
imul
mov
inc
jnp
mov
add
jns
flds
daa
sub
add
popf
adc
xor
inc
mov
fnstenv
push
test
ds
mov
xor
mov
out
push
mov
sarl
test
jns
cmp
push
sub
sub
std
mov
popf
jp
mov
adc
cli
jbe
roll
imul
mov
xor
pop
fnstcw
lods
in
and
inc
add
lods
int3
dec
fwait
sbb
push
pushf
sub
out
icebp
insl
dec
xchg
lret
adc
mov
repz
sub
movsl
mov
mov
std
xor
in
es
and
fistpl
fmul
loope
fsubrl
cmp
cmp
push
les
or
test
loopne
mov
and
dec
cmpsl
arpl
fwait
sub
movsb
sbb
out
mov
xchg
fs
test
xchg
arpl
jo
out
rcrl
bound
inc
mov
mov
xchg
inc
jns
std
push
int
icebp
cmc
inc
cmp
fnstenv
sbb
inc
pop
mov
cmpb
cs
sub
sub
dec
int
popa
int
mov
data16
push
inc
daa
call
inc
jns
lcall
sbb
add
popf
sub
in
jae
mov
and
jne
leave
pop
lods
pop
scas
xor
clc
xor
adc
and
ja
lods
xor
test
aad
loop
jp
sbb
das
stos
mov
xchg
sbb
loop
test
push
jmp
xor
in
test
push
fdivp
inc
mov
mov
es
imul
aaa
iret
dec
ds
cld
inc
sub
mov
xchg
mov
sub
add
mov
cmpsb
push
decb
and
in
mov
or
mov
enter
dec
cmp
rcll
daa
jp
les
ret
mov
sbb
sub
cmpsl
ja
aaa
ret
or
mov
mov
pop
arpl
repnz
and
fidivrs
xor
fs
addr16
push
mov
inc
cmpsb
mov
mov
ljmp
and
push
repnz
pop
idiv
cmp
aad
dec
enter
cmovp
mov
scas
call
sbb
daa
fwait
lahf
jp
jbe
repz
pusha
lds
jae
in
push
adc
daa
fwait
out
adc
leave
dec
in
pop
std
cmp
mov
jle
mov
int3
mov
pop
int3
jmp
push
add
or
mov
je
ror
das
mov
mov
dec
cmp
std
je
inc
push
xlat
movsl
repnz
aaa
arpl
fsubs
out
xchg
push
jnp
dec
movb
shrl
mov
pop
ror
sub
aas
std
mov
pushf
mov
jo
in
fwait
dec
push
aaa
fcmovbe
push
jecxz
push
push
mov
sbb
test
popl
sbb
mov
sbb
adcb
loopne
cmp
mov
outsb
and
test
and
mov
repz
std
imul
or
inc
mov
stc
test
push
cltd
aaa
cli
add
and
inc
lahf
inc
dec
rcll
dec
or
and
push
lea
sahf
mov
inc
mov
test
imul
add
scas
cmp
pop
in
inc
loope
in
mov
xchg
add
push
int
clc
mov
outsl
ljmp
inc
ds
sbb
add
mov
ficomps
out
insl
scas
daa
repz
pusha
in
inc
sbb
cmp
cmp
mov
and
xchg
mov
xlat
sbb
imul
pop
out
ficompl
popa
inc
fdivl
test
dec
xor
sub
xor
popa
movsl
into
push
and
or
rcll
mov
fnstcw
jcxz
out
mov
sbb
dec
sbb
xchg
sbb
faddp
std
lods
mov
fcomps
mov
jae
aas
cmc
stos
es
cmpsl
in
fadd
cmpsb
clc
cld
dec
jmp
push
mov
push
sub
les
inc
ficompl
mov
sbb
pop
and
int3
xchg
popf
sbb
add
mov
pop
push
jle
repz
add
adc
add
jg
lret
fidivrl
jno
push
aam
pusha
std
mov
in
cmp
adc
idivb
mov
mov
dec
dec
repz
flds
mov
jae
dec
shrb
adc
loope
dec
test
mov
dec
mov
es
sbb
inc
pop
adc
pop
dec
jae
mov
push
mov
clc
fldenv
push
mov
fstp
sarb
out
inc
jge
enter
push
rcr
xchg
pop
mov
lret
xor
or
sub
fs
test
lods
mov
icebp
jns
aam
sbb
adc
jecxz
dec
inc
add
movsl
fcoml
jl
and
mov
and
sbbl
mov
jp
dec
inc
mov
mov
scas
lret
test
pusha
xchg
and
fs
and
pop
cmpsb
jge
hlt
mov
adc
mov
dec
out
outsb
dec
mov
sub
add
xor
out
add
sbb
add
mov
jge
adc
loope
jecxz
push
das
xchg
sbb
jge
or
fcomps
pushf
jp
test
mov
add
xorl
int
xchg
jl
sub
add
pop
divb
mov
xchg
sub
and
add
push
mov
xor
mov
inc
shl
iret
popf
loope
cmp
cmpl
jae
mov
stos
push
mov
dec
mov
sbb
subl
daa
inc
push
jnp
sbbb
xchg
loope
das
jg
sub
sahf
mov
movsl
push
mov
out
fsub
mov
dec
inc
sub
in
into
push
ret
es
cli
rcrb
mov
sbbb
hlt
inc
imul
movsl
or
ljmp
repnz
sub
jle
dec
cmp
ss
dec
pushf
dec
lods
in
sub
popl
popf
out
push
mov
sub
mov
xor
fnsave
add
cmpb
inc
add
xchg
jae
rcll
jbe
dec
movsb
dec
mov
xchg
jne
test
das
psadbw
popf
mov
cmp
rdmsr
push
lods
or
add
xchg
lret
bound
jge
jb
lahf
scas
or
daa
in
in
mov
sbb
xchg
mov
shl
test
inc
cmc
mov
mov
adc
push
dec
in
cmc
out
jp
in
push
sub
addb
add
hlt
rcrl
push
maskmovq
imull
imul
adc
ja
sbb
div
das
mov
popf
int3
dec
scas
adc
loopne
int
adc
push
mov
shll
sahf
xchg
sbb
or
inc
mov
inc
mov
lcall
cmp
inc
adc
fists
and
test
icebp
ret
or
sbb
and
mov
xchg
test
sub
cli
mov
lods
xchg
xchg
sar
scas
cmp
test
imul
sub
js
adcl
cli
js
out
subb
cli
sti
test
loope
xor
push
das
mov
dec
pop
js
sbb
mov
jo
mov
hlt
insb
scas
hlt
mov
clc
sahf
fwait
mov
outsl
outsb
sbb
mov
les
cmp
lds
stc
xchg
inc
adc
xor
iret
inc
loope
insl
aaa
inc
mov
aam
pop
je
fstpl
lods
inc
mov
push
icebp
xor
pop
fidivrl
dec
repz
jns
add
sub
adc
out
sbb
dec
scas
insb
sbb
aas
cs
lahf
in
int
lret
stc
pop
stos
pop
xchg
xlat
loope
test
cli
mov
xor
popa
int
pop
dec
sub
movsb
subl
popf
loope
rolb
mov
mov
sbb
mov
xor
daa
push
lds
adcb
inc
pop
nopl
add
and
fdivrl
sub
inc
cli
sbb
jno
mov
push
lret
test
mov
sub
push
pop
out
sbb
pop
outsb
xchg
xchg
sarl
sbb
out
repz
jp
sbb
loopne
mov
and
dec
mov
inc
gs
inc
out
xlat
adc
in
icebp
orb
pop
fwait
std
nop
push
in
mov
jge
in
jle
add
aad
cmp
push
out
dec
mov
in
push
flds
fildll
leave
xor
std
jo
out
lock
pop
fstp
cmpsl
push
aam
ficompl
inc
sub
mov
sbb
sub
jle
pop
mov
in
cmc
int3
call
inc
mov
mov
test
test
dec
cmp
jmp
stc
lods
mov
test
iret
and
jle
adc
ret
ss
cmp
enter
test
add
sub
out
repz
pop
jg
stos
aam
fnstenv
aas
sbb
mov
jp
enter
push
jnp
add
test
jns
add
test
dec
push
inc
hlt
pop
jne
mov
iret
int
mov
inc
dec
lock
hlt
ret
mov
sub
sbb
je
ret
pop
pop
loopne
in
scas
cmp
out
mov
out
or
hlt
jp
dec
or
pop
add
sub
pushf
scas
scas
test
dec
fcompl
xor
movsl
sbb
cmp
dec
fidivrs
mov
fldl
xor
mov
ds
lcall
mov
add
jle
xchg
inc
rorb
xchg
mov
ret
in
int
pop
es
jl
mov
fstps
jae
std
mov
jmp
ret
out
push
out
lods
les
adc
ljmp
inc
scas
insb
aas
xchg
jae
jnp
hlt
test
inc
mov
push
andl
push
sub
addb
jnp
flds
test
ficomps
aaa
clc
push
xor
sbb
in
fldcw
negb
out
xlat
push
jmp
xchg
xlat
shrb
jecxz
push
es
movsl
mov
push
and
stc
mov
and
mov
enter
mov
dec
xor
jae
push
or
and
mulb
and
adc
xchg
mov
adc
add
cmpsb
data16
pop
mov
sbb
incb
or
jnp
arpl
dec
lahf
idivb
popa
mov
mov
fmuls
push
lcall
push
les
push
mov
or
mov
xor
call
test
inc
and
or
lahf
fnstenv
fs
jae,pt
mulb
stos
loopne
mov
pop
and
xchg
movsb
out
inc
jmp
lret
lahf
scas
adc
cld
xchg
fidivrs
pop
movsb
mov
std
lds
dec
mov
fnstenv
jae
jl
das
cmp
ljmp
dec
ss
or
movsb
cmp
js
movsb
insl
scas
mov
sub
outsl
repz
sbb
aaa
fldenv
insb
fsubrl
rcrl
lret
repz
add
dec
mov
mov
add
jo
ds
xchg
xlat
xchg
push
out
push
sub
dec
xor
subb
and
lods
arpl
mov
sbb
pop
xor
mov
sub
es
and
pop
dec
xor
dec
ss
fcos
add
fildl
inc
push
sub
cmp
mov
jo
jl
pop
mov
sarb
flds
lcall
pop
inc
xchg
cmp
inc
jae
addr16
sub
frstor
xor
es
mov
mov
insb
in
inc
inc
mov
sti
mov
sbb
inc
sub
sub
adc
in
jno
or
inc
cmp
cmp
mov
hlt
test
mov
xchg
pop
aam
sbb
or
cmc
jno
divb
mov
mov
nop
std
push
aam
add
mov
rcll
and
mov
jns
je
shll
sbb
pushf
dec
mov
loop
mov
sub
pusha
push
cmp
out
dec
fabs
xchg
mov
and
pop
cmp
xor
sahf
js
adc
lcall
in
ficomps
cld
cmp
sub
push
sbb
mov
xor
pop
mov
addb
mov
movsb
test
hlt
xor
cmp
mov
mov
test
pop
stc
push
or
cltd
xchg
pop
or
cli
mov
dec
dec
mov
push
and
cmpsb
mov
mov
test
mov
xor
call
out
inc
ds
cmp
mov
dec
adc
cmpb
lahf
cmpsb
scas
stos
ljmp
adc
mov
add
clc
pop
test
outsb
jge
test
jmp
and
cmp
xor
pop
inc
in
jns
mov
xchg
adc
inc
outsb
gs
ret
xor
stc
mov
hlt
in
inc
cmpl
jno
sbb
das
dec
inc
iret
out
add
or
pop
cmp
or
sbb
out
fdiv
ljmp
daa
jl
test
inc
gs
inc
lcall
mov
loop
ss
sbb
enter
add
jne
repnz
std
pop
mov
cld
flds
dec
stc
push
mov
ret
jns
jae
inc
or
aad
repnz
xchg
dec
mov
and
repnz
push
ss
mov
and
push
xchg
lcall
fidivrs
push
jp
mov
daa
arpl
test
xlat
in
mov
mov
dec
fmul
cwtl
xchg
sbb
mov
inc
lock
cmp
int3
test
xchg
out
xchg
loope
jo
popa
cli
addr16
aam
mov
add
inc
dec
in
popa
int
xchg
nop
mov
dec
xchg
and
jnp
dec
es
scas
fidivrl
push
ret
test
ja
mov
push
dec
mov
pop
xchg
inc
shlb
sub
js
xor
mov
xchg
sbb
sub
inc
lods
fldenv
and
mov
jp
inc
adc
and
cwtl
jle
insb
push
pop
cmp
dec
jge
test
pop
scas
mov
rcrl
lock
daa
adc
jmp
daa
mov
lods
inc
mov
add
mov
inc
xchg
sub
xchg
int
stc
push
sub
popf
das
stc
insl
xor
mov
dec
into
inc
mov
icebp
test
xchg
sbb
insb
mov
dec
rcrb
push
or
xchg
in
fsubl
sbb
or
fldcw
mov
ja
and
divb
sahf
in
adcb
test
push
cli
hlt
std
jno
xor
and
test
out
testl
adc
icebp
mov
jnp
cmp
ror
mov
dec
inc
test
sub
test
loopne
sbb
fldcw
jecxz
xor
push
lret
sti
cmp
cmc
push
das
sbbl
sbb
cmpsb
mov
faddp
sbb
pushf
add
in
cwtl
stos
jbe
ss
mov
jae
adcl
cmp
pop
jl
xor
dec
xchg
and
fdivrs
xchg
cmp
xor
push
dec
popf
cmp
push
inc
pop
and
xchg
add
sahf
inc
mov
cmp
andl
pmaddwd
mov
pusha
lock
pop
flds
mov
or
dec
fsts
pop
std
mov
mov
mov
test
mov
movsl
add
in
xor
jle
jae
pop
aas
mov
push
dec
lods
push
xchg
aaa
sbb
push
mov
push
add
inc
popf
out
out
lods
xchg
mov
test
imul
xchg
in
test
psrld
repnz
sub
in
out
mov
inc
pop
cmpsb
in
jmp
cs
fbld
rolb
movb
inc
js
sbb
sbb
sbb
fidivrl
popf
mov
mov
cmp
lds
pop
or
popf
test
jno
adc
xchg
dec
out
sub
pop
out
xor
add
repnz
mov
ret
mov
mov
jo
cmp
test
rcrb
xchg
scas
pop
jmp
pop
add
mov
mov
push
and
aas
pop
ss
lods
dec
sub
dec
xor
mov
xor
loope
or
sbb
push
rcr
ds
cli
fldenv
cmpsb
push
inc
and
cmpsl
arpl
pop
imul
push
adc
in
jb
cld
inc
mov
std
mov
lea
les
mov
or
inc
push
aaa
push
adc
jbe
es
pop
xor
jl
mov
bound
jnp
stc
add
sub
jg
fnsave
repz
fisttpl
movsl
arpl
ret
add
and
aam
addr16
loopne
jle
jbe
xchg
sub
add
jl
mov
mov
movsl
and
test
jo
leave
jmp
jnp
cmc
sub
xchg
rcrb
hlt
jp
inc
cmp
movsl
mov
jo
sbb
fnstenv
cmp
jl
adc
divb
pop
fdivl
fidivs
int
pop
xor
pop
idivl
ss
rorl
jg
push
cmp
cwtl
adc
and
inc
in
jb
xchg
sbb
and
scas
push
sub
mov
add
nop
push
jecxz
dec
loopne
into
inc
sarb
sbb
mov
jp
scas
or
mov
cmp
sub
pop
sbb
xor
pop
lret
dec
sub
movsb
xlat
test
jp
movsb
pop
repz
shrb
cmp
sub
push
push
in
mov
loope
sar
in
sbb
xor
in
mov
mov
in
test
jmp
rcrb
jne
pop
xor
xchg
loope
mov
or
pop
push
daa
cmp
xlat
hlt
cmpsb
fcoml
jno
jge
pop
and
and
push
pop
sub
and
xchg
sub
stc
dec
icebp
int
sub
or
sahf
dec
gs
in
cmc
adc
push
sar
jecxz
test
sbb
rcr
sub
mov
loope
in
xor
mov
inc
mov
cs
ljmp
jge
aam
adc
mov
xchg
add
into
pop
int
sub
loop
out
push
push
xchg
xchg
adc
cmp
out
dec
xor
mov
push
adc
lea
lcall
jl
in
xor
cmpsb
push
lock
add
out
push
xlat
mov
push
xchg
movsb
mov
fnstenv
mov
mov
pop
cmpsb
sub
adcb
out
push
addr16
mov
inc
jp
push
dec
js
xchg
mov
scas
aad
movsl
xchg
sub
stos
insb
mov
sbbl
fisttpll
mov
int
adc
outsb
popa
lds
or
xor
cmp
inc
mov
test
scas
adc
mov
mov
inc
cmp
mov
hlt
sti
xor
or
jae
fwait
xlat
daa
outsb
dec
movaps
inc
andb
jb
cmpb
test
mov
sti
dec
inc
fldl
into
add
mov
out
fstpl
imul
ss
pop
fxch
push
xchg
int
add
sbb
stos
rorl
in
push
jo
mov
mov
std
mov
xchg
mov
pushl
push
push
xchg
rol
pushf
push
test
stc
inc
mov
mov
mov
scas
mov
int3
in
mov
test
loope
inc
icebp
mov
dec
xor
sbb
imul
stc
call
test
sub
sbb
mov
xor
xor
push
std
sti
jo
fsubrl
push
adc
mov
insb
cmp
adc
test
push
lock
push
ffree
daa
mov
into
xchg
inc
jns
xor
call
je
popf
in
popa
inc
sbb
test
sub
cmp
cli
jnp
or
daa
mov
jle
push
sbb
inc
push
scas
jns
ds
add
nop
aaa
adc
cmp
rcrb
dec
pop
fisubrs
scas
sub
add
cmp
mov
mov
inc
cmp
sbb
mov
adc
inc
test
ffreep
sar
mov
aam
mov
cmp
in
repz
int
dec
lods
add
sbbb
cmpsl
test
hlt
jns
scas
das
mov
les
adc
cld
data16
mov
mov
pop
jecxz
xchg
aam
jle
sarl
jae
test
dec
int
pop
sub
sub
outsl
push
in
aad
dec
fsubl
les
out
add
or
sbb
xor
in
jno
dec
loopne
mov
movsb
and
sarl
in
xchg
xchg
add
int
jnp
sub
popf
cld
fwait
push
ja
xor
hlt
cli
sub
jae
lock
cmp
lods
adc
in
mov
ss
jbe
sbb
cmp
mov
xchg
mov
sbb
or
fstps
jecxz
inc
roll
inc
mov
lods
sbb
test
xor
dec
jl
sub
cs
inc
mov
mov
loopne
jl
iret
ficompl
push
into
in
mov
xchg
mov
inc
jl
inc
fcoml
int
out
mov
mov
aaa
daa
std
test
lods
insl
div
cs
sahf
xchg
hlt
cmc
mov
mov
mov
dec
sbb
insb
call
xchg
xchg
call
mov
js
scas
aas
mov
idivl
std
mov
scas
push
pop
stc
xchg
movsl
or
jo
movsb
neg
roll
aad
sbb
cmp
pushf
mov
pop
ss
mov
test
inc
sub
fmull
notb
mov
jmp
mov
push
mov
dec
inc
cmp
adc
iret
inc
scas
mov
xor
sbb
sbb
in
lret
frstor
push
xlat
mov
mov
ja
sub
inc
mov
test
fidivs
mov
pop
ficomps
jb
lock
mov
pop
les
sbb
or
movsb
and
sub
mov
test
push
jle
xor
mov
xrelease
push
loopne
in
pop
cmpl
sarl
icebp
lea
mov
jle
in
pop
inc
adc
and
pop
pop
cmpl
push
push
hlt
sub
es
mov
cmpl
mov
pop
cmp
xchg
fabs
and
jnp
loope
adcb
pop
adc
imul
sub
fstp
xchg
cmp
sbb
pop
adc
andb
cmpsb
int
sub
ja
fdecstp
mov
and
fidivrs
cmpsb
lods
jno
nop
jae
jmp
out
jns
aas
inc
roll
adc
xor
mov
fcmovu
ret
pop
push
mov
addl
aad
push
adc
flds
pop
insb
mov
or
dec
xchg
adc
std
repnz
movsb
pop
mov
inc
dec
hlt
out
les
test
jmp
fists
sub
inc
js
jp
xor
inc
data16
hlt
gs
and
cwtl
mov
orl
adc
xor
xor
mov
insb
lea
xchg
push
cmc
mov
sbb
test
mov
daa
inc
out
gs
fistpl
cmpsl
int
int
dec
lret
popa
sbb
mov
fnstenv
mov
fimuls
in
cmpsb
sub
popa
stos
xchg
sbb
jns
cmp
push
test
ss
and
dec
hlt
nop
fcoml
sti
test
and
sbb
insb
leave
fstl
ljmp
jle
jp
sbb
imul
xchg
stos
adc
cmp
fidivrl
movsb
es
dec
cmp
or
mov
adc
fs
outsl
lds
rcrb
inc
sti
aam
cltd
cmp
in
pop
in
out
mov
outsl
xchg
fdivrl
cmp
test
dec
mov
fmull
int
mov
mov
dec
shrl
stos
fists
int
enter
lcall
pop
xchg
xchg
outsb
cltd
push
je
mov
cltd
adc
fiadds
mov
lods
push
popf
fsubrl
pusha
inc
inc
sbb
mov
leave
repz
or
int3
rclb
xor
mov
cmp
sbb
movl
rcl
pop
sbb
enter
int3
and
ss
inc
leave
push
fstpl
je
xchg
xchg
adc
add
int
xor
cmpl
sub
push
mov
pusha
mov
cli
inc
stos
repnz
push
les
cli
xchg
ss
stos
xchg
in
cmpsl
orl
mov
hlt
inc
adc
jae
lods
sub
fdivrp
and
jb
scas
mov
loope
popf
xlat
out
cmp
xchg
cmp
add
in
add
mov
xor
mov
in
out
sbb
fs
dec
fidivs
test
in
push
incl
mov
out
mov
in
adc
sbb
push
cmp
xorl
iret
sbbb
pop
jb
mov
or
loopne
stc
orb
test
lcall
sbb
mov
or
xchg
push
fstp
pop
lret
mov
adc
loopne
test
sbbb
repz
cmp
xchg
ds
cwtl
jno
xchg
mov
mov
int3
sahf
fstps
add
mov
inc
loop
mov
movsb
pop
fmull
fs
dec
dec
xor
pop
xor
dec
inc
mov
pop
cmp
aaa
xor
lea
sbb
and
add
dec
rorl
scas
xchg
movsl
mov
lods
cmp
sbb
jl
cli
loop
xor
pop
push
push
fdivrl
inc
out
daa
repz
lods
jge
or
je
sub
outsl
movsb
mov
jns
fstpl
lret
das
lock
pop
out
jl
adc
xor
push
xchg
pop
cmp
jge
popf
push
into
pop
push
mov
inc
mov
es
movsb
mov
fwait
jo
enter
mov
push
and
mov
inc
xchg
jecxz
push
les
push
test
hlt
jae
mov
fdivrl
mov
lahf
xor
repz
jno
test
out
sysenter
lods
outsl
adc
iret
roll
sub
sub
lock
dec
and
xchg
ja
xchg
or
fmuls
pop
jnp
push
add
and
rorb
xor
lds
cltd
repnz
pcmpgtw
fisubrs
lahf
jle
inc
pop
adc
mov
into
insb
jg
push
out
iretw
jle
cmpsl
push
lret
inc
xor
cmp
mov
sbb
pop
add
inc
fcompl
popa
adc
mov
mov
popa
inc
and
inc
sti
movsb
jp
cmp
cmp
fnstcw
daa
add
sbb
push
mov
jns
mov
jecxz
sbb
dec
push
repz
jge
xor
in
cltd
inc
fidivs
fiadds
xchg
push
push
sbbl
pop
sti
call
jecxz
out
ljmp
std
and
int3
and
mov
jg
cmp
and
xor
fstps
lea
pop
mull
pop
push
mov
inc
inc
ds
xchg
add
inc
xchg
mov
or
stos
mov
mov
pop
xor
repz
int
xchg
in
fsts
inc
test
jecxz
mov
orb
out
ja
mov
ds
lds
xor
adc
gs
dec
xchg
fld
out
test
sub
popa
jb
push
mov
cmp
icebp
pop
int3
xor
fildl
jg
std
ljmp
push
push
inc
sbb
push
movsl
mov
dec
dec
fsts
int
ljmp
xchg
jmp
lahf
xor
stos
sbb
fsqrt
xor
les
test
inc
and
andb
movsl
xor
add
outsl
in
inc
sti
fwait
popa
clc
pop
int3
rorl
xchg
movsb
cmpsb
fdivl
out
test
ret
mov
mov
or
jns
aaa
ss
scas
dec
push
cmp
dec
mov
fidivrs
mov
mov
fldenv
cmp
pusha
fldcw
pushf
add
ret
das
and
dec
or
cmpb
add
or
repz
ss
jle
sbb
sbb
mov
mov
sub
xor
sbb
cmp
sub
int
hlt
ja
leave
xchg
mov
mov
sbb
ds
rorb
sahf
sbb
lock
dec
outsb
js
xchg
cs
adc
rclb
lods
pop
adc
inc
xchg
hlt
out
jbe
das
jp
lret
inc
jo
outsl
leave
scas
cmp
sub
aad
or
js
sbb
repnz
loop
int
stc
pop
fs
cmp
jge
add
jle
sbb
scas
push
jg
fwait
sbb
pop
xchg
std
orb
in
xorl
leave
int
dec
mov
hlt
push
lcall
push
std
mov
sbb
mov
incl
push
sti
sbb
insl
cmp
adc
mov
gs
xor
xchg
fldenv
das
push
inc
xchg
push
addr16
fwait
out
push
push
xor
pop
repz
shr
xchg
adc
jl
mov
cli
xchg
std
pop
es
mov
es
int
stos
mov
inc
lds
cmp
pushf
test
mov
mov
js
jno
clc
mov
mov
sbb
add
mov
aaa
pop
into
xchg
and
jle
xchg
pop
mul
scas
movb
out
mov
mov
xchg
and
in
jp
mov
sub
andl
inc
movsb
mov
aad
fnsave
or
add
jle
cmpsl
lods
xor
gs
pop
loope
mov
mov
rcrb
add
xor
mov
cmp
pop
xchg
add
push
push
loop
testl
adc
test
lods
dec
inc
leave
int
pop
jecxz
push
neg
mov
call
test
sbb
inc
xchg
cs
sti
xchg
shll
enter
or
adc
mov
adc
xor
popf
cwtl
cmpsl
xchg
sahf
mov
mov
repnz
dec
xor
mov
mov
clc
cmp
jo
mov
aam
inc
mov
mov
push
adc
push
pusha
cs
std
adc
int
jnp
and
jae
push
scas
cmp
movsb
xchg
cld
mov
ret
pop
ja
add
out
stc
rcrb
es
jns
fidivrs
adc
cmp
push
mov
push
mov
push
cmp
into
xchg
lea
and
adc
inc
seta
popa
sub
in
aam
cmp
mov
mov
adc
or
pushf
int
add
aas
sti
pop
push
daa
int3
je
xor
add
fidivs
in
dec
mov
aas
jnp
arpl
lahf
mov
add
nop
mov
arpl
outsb
cmp
jp
roll
push
into
std
jecxz
mov
jno
loope
inc
mov
add
dec
mov
pop
inc
imul
in
xor
add
xchg
icebp
insb
addr16
jge
imul
cs
mov
sbb
out
gs
and
pop
shl
test
fdivp
adc
test
adc
sbb
xor
test
mov
push
mov
cmp
push
lds
sub
test
mov
int
push
mov
dec
and
sar
aam
add
sub
mov
cmp
inc
fistpl
mov
and
and
test
lea
out
fnstsw
mov
movsb
jns
rcll
xor
sbb
mov
jnp
jne
into
lea
pop
jb
ds
fnstenv
int3
jo
sub
jne
push
nop
std
mov
xchg
mov
popa
and
cmp
icebp
dec
pop
adc
sti
loop
push
sbb
sub
repnz
sahf
fwait
mov
mov
lcall
jl
ficompl
mov
push
mov
cmp
lds
push
imul
mov
fwait
mov
cld
dec
repz
add
push
pop
stc
ficomps
scas
movsb
js
inc
sti
jo
loop
lods
xchg
shll
xor
sub
mov
test
sub
and
lds
icebp
mov
sub
sub
and
ja
in
fucomi
push
xchg
push
in
ds
lret
gs
cmp
pop
inc
ret
mov
pop
and
lahf
mov
sbb
xchg
pushf
cmpsl
dec
and
mov
in
xor
adc
test
add
lods
mov
adc
outsl
popf
fcomps
inc
cli
jg
xor
movsl
cmpsl
lret
xor
std
in
aaa
mov
test
push
fstps
inc
fisubs
pop
aaa
pusha
jmp
mov
mov
out
ret
mov
in
stc
jmp
push
scas
fstps
push
lret
adc
add
call
loopne
pusha
mov
jge
xor
mov
mov
dec
sub
fmull
dec
scas
push
xor
push
cmp
lds
or
mov
es
add
and
ffreep
fbld
test
mov
lahf
test
lock
and
push
test
mov
cltd
repz
mov
dec
aad
ret
push
sahf
shl
inc
push
pop
mov
imul
xor
into
mov
dec
mov
addl
in
mov
subl
dec
jae
or
dec
data16
outsb
data16
mov
adc
gs
pop
inc
les
jbe
addr16
es
addr16
fwait
std
lret
xor
mov
jb
test
fsin
clc
xor
mov
push
punpckldq
mov
imul
jle
pop
rcrl
mov
xor
add
int3
fisttps
sbbl
std
or
mov
mov
cli
gs
sti
mov
in
and
aam
xchg
daa
in
jne
fisubrl
scas
jp
call
mov
cld
mov
mov
fldenv
and
es
in
mov
push
xlat
mov
cmp
loopw
lds
sbb
pop
sbb
scas
dec
call
add
scas
sub
popf
sub
das
xchg
lret
es
cltd
xor
push
std
mov
xchg
push
xor
cs
sbb
or
fdivrl
add
ss
sub
mov
ljmp
andl
lea
in
int3
lahf
insb
mov
xor
jnp
cmpsl
cld
aam
dec
sub
lods
xchg
aam
mov
xchg
imul
leave
xchg
jbe
lods
and
idivl
aam
adcl
rep
xlat
mov
call
jnp
fwait
mov
faddl
sbb
insb
rcrl
shrl
cmp
and
adc
addr16
xor
mov
sub
repnz
iret
mov
xor
cwtl
sbb
jmp
cs
add
lods
mov
dec
mov
flds
cmpsl
arpl
adc
mov
std
mov
adc
mov
cmpsl
sub
xchg
jnp
out
bound
sub
mov
xor
mov
adc
in
gs
ss
enter
inc
sub
mov
push
and
out
ljmp
add
xchg
pop
sbb
xchg
outsl
inc
addl
shlb
jge
lcall
fldl
and
adc
andl
adc
sbb
xor
out
enter
fistpll
lea
fsubrl
jg
test
mov
mov
scas
loope
mov
cltd
dec
mov
clc
lods
icebp
loop
push
cmpsl
std
push
fimull
pop
mov
inc
or
mov
inc
out
lret
push
mov
push
lds
pop
mov
ja
flds
xor
inc
mov
pop
sub
sub
cmpsl
sbb
pop
jae
pop
push
cmp
std
or
inc
or
aam
int3
push
aad
mov
xor
cmp
inc
xchg
es
call
clc
jmp
movsl
cld
mov
sub
sbb
adc
jg
orb
cmpsb
outsl
lcall
and
test
imul
int3
push
mov
mov
fldcw
in
inc
pop
clc
inc
test
mov
and
mov
pop
andl
pushf
arpl
adc
pop
test
jns
iret
sahf
and
sbb
xchg
ljmp
insb
pop
cltd
or
xchg
daa
adc
stos
xchg
test
int
and
test
addr16
stos
stos
in
orb
xor
sbb
mov
loop
icebp
xor
mov
add
fsubl
or
fcoms
movsb
cmpsl
jnp
shrb
mov
jne
push
and
es
mov
gs
xor
mov
xor
ja
mull
inc
in
and
jle
jp
add
fscale
xlat
sbb
out
lcall
mov
xchg
mov
lds
xchg
dec
shlb
mov
push
pop
or
and
jge
je
push
mov
pop
pop
pop
jae
push
mov
addr16
in
dec
stos
cli
sbb
pop
push
addl
mov
pop
inc
xchg
jne
test
or
jecxz
pop
cmp
xor
cmp
fxch
add
addr16
mov
mov
ret
frstor
lods
ret
jb
int3
inc
aaa
mov
fcomps
cmc
test
mov
xor
std
scas
movsb
add
sub
jle
push
inc
repz
jge
pop
xchg
loopne
les
xor
mov
jbe
inc
enter
xchg
mov
imulb
xchg
gs
sub
jl
xchg
imul
lcall
mov
std
sbb
fidivrs
shll
cmp
xchg
and
xchg
mov
fidivl
pop
cmp
jns
stc
inc
fiaddl
cmpsb
mov
mov
cmp
push
popa
or
jp
ljmp
push
adc
cmp
call
mov
bound
jne
sahf
and
std
lahf
pop
scas
in
cmpsl
test
inc
mov
dec
push
aad
fwait
jge
mov
mov
imulb
push
xor
cmp
mov
xchg
movsb
loop
test
lret
ret
fwait
push
jmp
outsl
out
scas
jl
fsubrs
ss
aam
repnz
inc
lods
arpl
push
sub
imul
arpl
stos
dec
adc
out
imul
inc
jecxz
dec
mov
stos
push
jl
fcoml
dec
test
das
push
jecxz
jb
xor
int
cli
lret
add
test
dec
and
fnstcw
mov
lods
xor
out
sbb
je
mov
pop
mov
iret
addb
mov
das
xor
lock
pop
mov
std
mov
cmp
shl
sub
sub
xchg
mov
in
fldenv
mov
pusha
shl
dec
dec
jae
mov
mov
test
in
push
jns
mov
xor
sbb
movsb
sub
pusha
loope
inc
mov
jno
and
xchg
out
mov
fimuls
cmpsb
adc
jle
jmp
or
lahf
add
out
hlt
dec
xchg
sub
mov
cld
push
movaps
dec
popa
in
push
cmc
mov
cmc
movsl
in
mov
dec
leave
lods
aam
in
dec
mov
mov
lods
jb
dec
out
xorl
ret
ss
push
test
mov
popl
xchg
cmp
ficomps
pop
repnz
sbb
jp
aam
mov
sbb
shll
push
push
imul
orb
inc
ficomps
ret
pop
aaa
sti
xchg
fmull
cwtl
dec
mov
sub
lahf
xchg
data16
mov
and
mov
mov
mov
fiadds
in
ja
push
imul
cli
fsub
mov
lahf
and
dec
gs
push
cmp
jg
push
sub
mov
adc
pop
sahf
pop
std
int
jnp
aam
rcr
xorl
add
and
and
clc
outsb
in
std
inc
cmp
pop
inc
das
sub
imul
xor
das
push
and
cli
xorl
hlt
mov
pushf
jge
hlt
scas
mov
xchg
sub
cmp
std
and
inc
sahf
inc
xchg
adc
dec
jno
inc
cwtl
loop
adc
cmp
scas
je
sub
aad
aad
loopne
enter
pusha
stc
sub
sbb
stos
cmp
adcl
cmp
mov
movsb
cmp
aas
cmp
in
idivl
cmpb
adc
push
push
mov
out
jnp
pop
mov
mov
jo
sbb
shl
mov
push
out
inc
and
clc
push
xor
and
cli
dec
inc
or
pushf
mov
mov
sar
dec
popa
cmpsb
inc
addb
mov
mov
hlt
sbb
push
cs
pop
sahf
adc
fbld
cmp
mov
leave
scas
rcr
loop
jb
mov
and
mov
push
fbld
sub
pop
and
dec
cli
pushf
mov
pop
test
arpl
push
push
mov
jp
jne
and
or
xchg
scas
lock
notl
and
fistl
in
dec
xor
out
sub
mov
test
inc
repz
add
jo
cmp
mov
out
les
loopne
mov
js
mov
jecxz
push
jnp
movsb
mov
rcrb
cmp
fsub
mov
cmpsl
jge
mov
bnd
out
push
fsts
cli
loop
les
scas
jmp
xchg
push
mov
mov
sub
mov
leave
loope
imul
add
mov
out
movsl
mov
movsl
cmp
adc
fwait
xor
fsubrp
stc
fistpll
rcll
movsb
fildll
mov
sbb
js
mov
dec
pop
mov
stos
daa
mov
jmp
cmp
mov
mov
imul
xchg
jne
in
xchg
std
repz
xchg
jg
jecxz
xchg
adc
adc
dec
jns
out
in
les
mov
pop
inc
cmpsb
data16
aad
mov
inc
icebp
daa
pop
in
sub
ss
cmpsl
mov
movzwl
addl
sbb
sub
test
xor
mov
ret
push
mov
mov
imul
repnz
jbe
xchg
out
fnstcw
rol
outsb
cmp
cmp
sbb
sbb
ljmp
inc
push
cmp
mov
inc
xchg
shr
std
mov
xchg
dec
shl
cmpsl
inc
std
xchg
and
cli
jl
scas
xchg
xchg
dec
repz
icebp
xor
dec
lret
int
fmull
mov
push
call
and
add
push
cmp
cmpl
push
pop
add
mov
aad
scas
popa
cmp
mov
jns
mov
mov
lret
aad
es
cmpsl
xchg
adc
dec
sbb
jl
aas
inc
mov
pop
lods
pop
in
pusha
and
push
fcoml
mov
aas
sub
stos
cmp
lock
test
ja
xchg
in
aaa
fcomi
in
or
mov
cmp
mov
hlt
insl
bound
ja
fxch
inc
pushw
insl
add
data16
xor
int3
sahf
xchg
lods
daa
mov
lret
ret
sarl
inc
inc
fnstenv
icebp
mov
add
es
mov
adcl
mov
add
div
or
cmc
in
mov
cmp
inc
jae
mov
mov
dec
in
test
sub
lock
cmpsb
xchg
adc
pop
daa
adc
sub
mov
sahf
test
sub
ret
sbb
or
shll
cmpsb
stos
cmp
lret
int
in
cmp
sub
dec
push
xor
mov
je
std
test
scas
sbb
adc
outsb
cli
mov
mov
and
mov
addr16
out
push
lret
sti
mov
leave
adc
popa
mov
sub
insb
ficompl
cli
push
cmpsb
jmp
test
clc
ja
or
adc
xor
test
xor
mov
jp
scas
or
jle
sarb
ss
mov
mov
xor
mov
mov
mov
jne
repz
je
sbb
cmp
mov
fnsave
jmp
das
xchg
lahf
xchg
movsl
fistpl
xchg
jg
mov
pop
ljmp
cmp
mov
xchg
cli
nop
repz
xchg
test
stos
fidivrl
sub
pop
pop
sbb
mov
jne
mov
mov
shll
popa
mov
xorb
fwait
mov
flds
mov
dec
push
cmp
cli
fistl
pop
mov
clc
pop
repz
cltd
and
pop
xchg
lahf
das
mov
jo
inc
xchg
jne
lods
pop
xor
pop
or
cmp
jge
jb
xchg
movsl
call
adc
les
lods
mov
aas
test
sbb
add
lods
nop
out
mov
test
divl
inc
imul
add
mov
mov
pop
add
xchg
mov
scas
inc
fldcw
mov
dec
xchg
mov
imul
mov
daa
lods
sub
mov
es
dec
sub
imul
adc
xor
out
jp
fimuls
mov
shlb
jmp
pop
xchg
add
cmp
xlat
mov
mov
mov
pop
cld
scas
test
cld
ds
mov
stc
sbb
out
mov
add
fsts
mov
mov
in
lods
xor
mov
subb
fsubp
fisubl
and
fisttps
test
mov
pushf
out
sub
jne
repz
pop
pop
addb
mov
sub
push
stc
pop
js
inc
sahf
daa
lret
cmpsb
fldcw
fdivrs
mov
mov
mov
xchg
xchg
mov
sbb
pop
in
jnp
cld
es
popf
dec
push
and
mov
inc
idivl
mov
inc
lret
xlat
mov
jno
test
sub
and
sbb
ret
fstpt
int3
pop
jmp
pop
in
xor
xchg
in
into
out
sub
data16
sub
mov
sbb
mov
sub
xchg
dec
mov
addr16
adc
and
push
pop
clc
lea
push
scas
push
ss
inc
and
out
subl
dec
lret
cmpsl
hlt
xchg
cmp
or
mov
jg
cs
sbb
pop
xchg
cmc
inc
insb
pop
mov
fldt
pop
rorl
loopne
push
and
outsb
pop
and
sub
pminub
rolb
sar
sbb
test
jnp
mov
fstps
cwtl
mov
int
jmp
scas
cmp
out
int
adc
clc
jmp
cmpsb
data16
mov
in
dec
cmpsl
jno
sbb
fdivrs
lods
outsb
cmpsl
cwtl
mov
inc
jge
sti
add
mov
mov
mov
shlb
jmp
cmpsb
mov
int3
xor
xlat
mov
sub
test
test
xchg
ss
pop
lahf
sub
sti
or
testl
roll
inc
out
hlt
mov
popa
mulb
mov
mov
cmp
jno
push
mov
loop
add
decb
iret
in
popa
xor
lods
push
push
mov
ret
cmpsb
jecxz
subl
in
cmp
movsl
mov
sbb
loope
movsl
fxam
pop
sbb
push
cltd
add
enter
scas
arpl
fld
xor
jo
movsb
test
mov
push
scas
jle
dec
rolb
pop
cmpsl
inc
sti
cmp
enter
loope
pop
pop
push
daa
dec
test
cmp
and
gs
pop
xchg
pushl
xchg
mov
addr16
xor
int3
mov
pop
int3
push
pop
inc
or
mov
sahf
jnp
mov
movsb
xchg
shll
movsb
xchg
cmp
and
lock
loop
inc
cmp
iret
mov
das
sub
mov
pop
cmpsl
scas
loop
pop
cld
test
mov
jmp
pop
lock
mov
ds
mov
mov
lahf
inc
in
test
xchg
and
jne
adc
push
mov
sbb
mov
or
adc
aaa
mov
leave
inc
lods
push
or
std
sbb
das
mov
in
nop
fsts
cmc
movsb
sbb
cli
mov
dec
push
xor
rorb
fnstcw
mov
test
mov
add
dec
dec
adc
mov
fnstcw
mov
repnz
sahf
xor
mov
rcrb
jl
repz
cmp
repz
sub
sbb
imul
inc
scas
test
adc
jmp
cmp
jle
pop
push
mov
inc
ficoms
xchg
mov
mov
ss
jno
dec
and
adc
lds
xor
test
repz
xor
in
and
jbe
addr16
or
cmpsb
test
add
fdivs
leave
mov
in
mov
cli
push
shlb
mov
test
stos
mov
lahf
lds
rcrl
out
pop
enter
out
or
rorl
cltd
sub
adc
inc
movsl
dec
aad
mov
add
jno
mov
in
cltd
and
pop
mull
mov
mov
imul
jno
rorb
inc
outsl
subl
pop
mov
test
orb
pop
mov
mov
hlt
push
repnz
mov
cmpsl
pop
cmp
lret
pop
push
fmull
sbb
and
int3
cmc
sub
mov
shll
mov
adc
cli
aad
or
jp
ja
push
mov
fld
in
xchg
std
pushf
inc
and
ljmp
cld
adc
cmp
dec
mov
xorb
dec
fidivrs
movsl
es
jae
fstpl
loope
jg
das
adc
sub
sahf
xchg
sti
mov
sub
mov
add
xor
cld
jecxz
mov
push
lods
dec
lret
push
mov
daa
push
mov
mov
into
popf
popf
das
jae
push
fistps
push
aad
fiadds
mov
xor
sub
mov
pop
cmp
dec
lods
js
cmp
cmpsl
or
cmp
adc
leave
xor
jne
loop
int
xchg
cmc
and
and
test
mov
cmpsb
sbb
cmp
push
pop
sub
ret
nop
add
pop
int
mov
mov
leave
inc
add
pop
and
and
sub
nop
insb
fisubl
sbb
add
dec
jo
pop
pushf
cmp
sbb
jbe
aaa
adc
insl
cmp
mov
fnstenv
sub
lret
mov
sub
repnz
ljmp
mulb
fmull
hlt
repz
pushf
arpl
or
jge
fcompl
inc
sub
lea
jg
outsl
movsb
sbb
in
jbe
repnz
adc
or
jnp
out
cli
xor
adc
lahf
sbb
pop
dec
scas
enter
lock
dec
mov
cmc
fsubs
push
movsl
inc
sub
fwait
sahf
lret
dec
or
loope
cmpsb
repz
aam
pushf
fldcw
adcb
std
mov
mov
and
fadds
out
out
sub
out
mov
jecxz
jmp
sbb
push
flds
dec
dec
mov
pop
sbbl
jae
or
scas
test
sti
aad
cmp
fwait
sub
jno
mov
fs
int
dec
fidivrs
jmp
iret
or
popf
sub
pop
pop
xorl
or
mov
adc
out
enter
js
hlt
jge
add
cmpsl
xchg
cmpb
into
ss
imul
shr
adcl
popf
adc
es
mov
jb
cmp
xchg
push
aaa
mov
test
add
jl
push
sbb
ret
pop
xchg
test
inc
subb
mov
daa
stc
ficomps
flds
mov
es
aas
xchg
das
pop
inc
push
adc
mov
out
mov
or
fnstcw
and
xor
dec
std
cmp
scas
adc
mov
add
sbb
mov
test
cmpsb
cmp
subb
call
icebp
ja
out
mov
mov
xorl
ljmp
xchg
add
cmp
andl
push
inc
push
bound
mov
stc
push
lods
shlb
les
and
aam
jnp
jmp
xchg
pop
lahf
outsb
test
mov
pop
jae
sbb
popa
andb
repnz
fimuls
icebp
mov
push
mov
outsb
lds
dec
data16
ja
test
fistpl
lea
xchg
dec
cmp
sub
lret
fdivl
push
add
mov
sti
fs
ja
add
fildll
out
mov
lods
pop
inc
mov
rcll
adc
aam
dec
pop
jno
add
sub
stc
and
pop
ficoms
push
insb
loope
outsb
adc
hlt
adc
loop
mov
push
in
sub
mov
inc
subb
mov
and
push
ljmp
adc
adc
push
mov
push
cwtl
out
mov
repz
adc
sti
mov
int3
movsb
jge
adc
cltd
loop
and
pop
lcall
aam
pop
stos
and
fcompp
cmp
sub
dec
bound
xchg
pop
mov
out
cmp
je
stc
jb
mov
dec
loop
adc
aaa
out
cs
fstps
sar
imul
loop
or
mov
test
mov
fldcw
movsb
fsubrs
cmpb
cld
loop
pop
mov
xchg
adc
xchg
jle
or
push
fucom
rolb
add
push
add
mov
dec
enter
fidivrs
jmp
jae
repnz
pop
cli
dec
cmp
sbb
out
dec
fsubl
dec
adc
push
daa
xor
inc
lds
out
std
lods
xor
test
ja
sbb
loopne
repz
in
inc
or
sbbl
mov
inc
shr
xchg
xor
ficomps
stos
mov
sub
pushf
insb
mov
fxch
testl
addl
lods
or
dec
mov
je
or
or
pop
xchg
or
jmp
sub
sub
ljmp
notb
aam
push
icebp
cld
hlt
lcall
mov
xor
in
xchg
fldt
sti
and
xchg
sbb
les
lods
jae
xor
out
sbb
subb
mov
das
movsb
or
push
clc
out
jns
pop
xchg
sub
pop
push
mov
rcr
sub
pop
cmp
add
sbb
int3
ja
pop
jge
push
cmp
xchg
inc
es
ror
lcall
lods
sahf
dec
push
pop
xchg
xor
push
dec
mov
and
jnp
or
sub
jo
scas
sbb
push
and
xor
pushf
fs
mov
mov
out
adc
mov
and
into
aad
popa
test
dec
mov
test
clc
sub
cmpsb
adc
dec
cmp
push
xchg
mov
push
lods
xor
nop
movsl
xchg
mov
fcoml
pop
sub
sub
push
ds
subl
push
dec
push
in
in
xlat
nop
in
orl
push
xor
mov
out
imul
xchg
xor
imul
cmpsl
and
pop
scas
sub
test
xor
pop
and
std
add
sbb
mov
jae
shll
enter
push
orb
mov
pop
mov
xchg
jl
lret
cmp
out
mov
dec
scas
or
push
and
inc
mov
xor
mov
xor
cmp
sbb
mov
lret
cld
mov
jp
rorl
aaa
sbb
and
mov
ror
mov
cmp
nop
das
inc
movsl
pextrw
push
movsb
pushf
or
scas
dec
mov
enter
adc
sahf
xor
sub
cli
or
adc
imul
pop
dec
cli
dec
cmpsl
lods
iret
int
pop
lret
xlat
mov
xchg
test
xchg
or
inc
das
cmpsl
mov
pop
xchg
je
sub
and
sti
mov
in
xor
push
cmpb
dec
or
imulb
xor
sub
jnp
insb
loopne
sbbl
mov
mov
inc
mov
xchg
out
sbb
mov
mov
aad
lods
add
push
dec
pusha
inc
jne
mov
test
push
mov
movsb
outsb
lret
jo
sbb
sti
repnz
aas
out
push
cmpsb
mov
aam
das
sbb
fdivrs
adc
lods
out
push
mov
or
out
das
cltd
jp
std
sbb
push
and
push
push
jnp
pop
mov
data16
fsts
xor
fsubl
insl
fcomi
pop
inc
pop
ds
xchg
fcmovne
cli
in
mov
xchg
jb
icebp
cli
xor
fnop
inc
pop
cmp
sub
in
adc
pop
cmpsl
jno
push
in
mov
or
sbb
mov
push
lret
out
test
mov
xor
mov
imul
shll
push
fsubr
jle
pop
pop
out
mov
fptan
adc
add
mov
mull
mov
sbb
stos
jae
push
adc
or
stos
xchg
and
lock
fstpl
cmp
pop
and
jnp
aaa
push
or
mov
or
mov
and
testl
push
inc
jns
xchg
fisttpl
sbbl
inc
in
inc
fwait
js
out
incl
sub
adc
mov
fwait
pop
test
fwait
sub
sti
pop
dec
mov
hlt
repz
pop
adcb
fsts
pop
int
mov
or
cmp
sub
mov
dec
fldenv
mov
bound
mov
loope
mov
mov
stos
pop
xor
outsl
stos
or
cmp
int
jnp
add
mov
and
fld
lcall
scas
enter
lds
cmpsl
aas
jb
add
xor
and
daa
pop
aaa
add
aam
push
in
cmpsl
inc
and
test
das
cld
pop
fisubs
fstpt
push
cmpsl
movsl
into
nop
sub
sbb
lcall
movsb
mov
das
loope
mov
sub
dec
pop
scas
push
add
xchg
mov
push
and
loopne
jns
daa
inc
pop
aad
leave
arpl
inc
fcmovnu
in
xchg
xor
xchg
mov
jno
lods
fsubrp
and
xchg
adc
cmc
loope
sub
icebp
fwait
jp
rcrb
testl
lock
xchg
aas
xor
cmpsb
popf
xchg
push
mov
adc
shr
lock
inc
scas
fidivl
movsl
fstps
push
mov
xchg
or
sub
test
mov
dec
stos
inc
jnp
mov
inc
cmp
and
xchg
pop
mov
sahf
imul
scas
rorb
nop
xor
inc
pop
cmp
ds
sbb
and
jns
cmpsw
add
cmp
adc
cltd
stc
add
or
push
ds
test
std
mov
cmp
in
adc
loope
inc
pmulhuw
sbb
sbb
adc
ss
mov
inc
xchg
sbb
repnz
mov
lea
stos
in
cmp
jb
std
mov
and
icebp
cli
popf
mov
aaa
lcall
jno
pop
mov
pushf
test
sbb
dec
sbb
std
sbb
call
movsl
xchg
pop
xchg
out
mov
jo
nop
fst
scas
inc
icebp
inc
lcall
dec
ss
call
enter
jne
shlb
arpl
scas
inc
cld
dec
imul
loope
or
std
lret
xor
jnp
push
push
cmc
addr16
iret
xchg
mov
xchg
movsb
dec
cmp
inc
jmp
flds
enter
xor
push
cmp
repz
sbb
pop
mov
jge
xchg
test
in
mov
pop
icebp
sahf
cld
cld
lahf
sbb
jae
xchg
cmpsb
mov
pop
lret
mov
lcall
jo
push
cli
inc
cld
out
jbe
into
aad
mov
das
xrelease
out
and
out
xorl
mov
pop
mov
lock
stc
test
xchg
mov
fisubrs
fnstcw
and
sar
test
inc
outsb
int
sbb
xchg
mov
test
fwait
pop
dec
cmp
test
je
sbb
fsubr
fstps
or
pop
fstpl
ds
jp
or
gs
push
das
jbe
stc
loop
dec
xor
pop
fldenv
mov
repnz
loopne
adc
out
sbb
lods
fisttpl
push
pop
std
or
movsb
mov
movsb
aas
mov
dec
and
xorb
pop
sub
mov
and
sbb
rolb
fstps
movsb
faddl
jge
in
in
std
mov
pop
call
test
xchg
icebp
xchg
fs
std
dec
cmp
lds
sub
insl
popf
xor
pop
sub
rcl
inc
ss
repz
mov
adc
jecxz
inc
cmp
jbe
pushf
cmp
inc
sbb
sbb
std
fidivrl
pop
mov
fdivrl
fsubrl
nop
jb
jo
and
lcall
or
shll
dec
aam
les
jl
leave
popa
and
lds
pop
sbb
test
and
repz
jmp
in
test
fnstcw
jecxz
in
shll
inc
sub
leave
pop
das
jg
jg
test
push
cmp
ss
inc
jp
add
lahf
cmp
cmc
ljmp
fisttpl
das
sbb
movsb
mov
leave
ss
testb
in
int
cmp
or
adc
outsb
add
movsb
push
pop
xchg
mov
arpl
and
fnstenv
pop
mov
fldcw
dec
dec
fs
lods
dec
push
dec
faddp
sbbb
fwait
out
jo
aam
hlt
push
mov
data16
mov
bound
cs
xor
sbb
pop
sub
or
ja
pop
fdivs
test
push
enter
add
mov
mov
test
mov
shll
dec
ss
lret
dec
mov
stc
test
fistpll
test
add
sbb
adc
lret
lods
out
scas
dec
dec
mov
js
push
into
jne
call
popf
aas
arpl
sbb
xor
repz
lcall
xchg
xchg
fldcw
xor
leave
and
mov
mov
add
jno
stos
mov
test
jecxz
repz
fldt
dec
movsb
lods
gs
mov
sub
das
xchg
cmp
mov
subb
inc
jne
mov
mov
jo
lret
test
mov
push
add
inc
fadd
and
jne
push
fdivl
cmp
mov
mov
xor
jae
dec
xchg
or
xchg
push
adc
xor
push
pop
jl
cli
lods
jnp
sbb
push
lret
mov
jle
daa
cmpsb
cmp
fcompl
dec
repz
sbb
xchg
sbb
pop
divl
mov
fnsave
fcoml
mov
adc
xor
movsl
cmp
push
push
icebp
push
loope
push
in
mov
lahf
jnp
fmuls
mov
into
mov
fsts
inc
or
das
sbb
movups
mov
push
mov
test
or
sub
mov
pop
mov
popf
dec
push
or
into
ja
loope
fcomi
pop
xor
scas
xchg
lock
dec
es
movsl
std
mov
lahf
loope
aam
std
jns
loope
fidivrs
jl
cmpsb
fldenv
shrl
out
pop
dec
hlt
insl
and
aad
std
cli
or
pop
fwait
mov
mov
sbb
mov
cmp
scas
scas
push
cmpsl
pop
xchg
cmp
test
mov
cmp
test
fcomps
cmc
add
and
xchg
cmp
clc
addr16
and
cmp
sbb
sub
aam
pop
sbb
sbb
add
inc
sub
notb
sub
jne
jp
inc
fbstp
andb
push
push
dec
jmp
or
pop
std
xchg
mov
mov
pop
sahf
fs
test
push
fdivrl
jns
sub
push
sbb
cmp
insb
or
loope
daa
lods
out
aam
or
lods
arpl
xor
pop
icebp
xlat
lea
movsb
lods
sti
cwtl
iret
sbb
mov
nop
lret
scas
das
mov
dec
fisttpl
sub
adc
inc
insl
push
cmpsb
mov
dec
hlt
std
add
scas
das
es
adc
test
xchg
les
cmp
add
pop
aad
negl
fidivl
lods
fld
divb
adc
or
fldcw
fwait
into
push
push
xchg
ss
out
std
mov
lds
dec
lret
xchg
cmpl
adc
clc
inc
and
xor
xchg
sub
out
jb
cmc
ret
jl
jge
fwait
dec
mov
mov
jge
mov
xchg
adc
stos
in
mov
mov
jle
add
xor
test
mov
ljmp
in
mov
push
sbb
and
inc
roll
push
les
or
pop
fstps
icebp
rcl
add
or
push
fidivl
cmp
and
sbb
push
xor
mov
push
call
push
mov
loop
lods
lock
stos
cmp
pop
push
mov
out
movb
fmull
rclb
push
lret
and
xor
push
stc
push
sahf
sbb
xchg
mov
daa
mov
push
fwait
and
mov
fs
nop
das
sub
hlt
popf
dec
jne
pop
fnstenv
jae
xchg
repz
and
xor
and
stos
sub
test
imul
js
push
fsubr
fnop
addr16
stos
sahf
test
loopne
aas
xchg
pop
popa
inc
cs
cmp
mov
in
push
int3
arpl
fxch
pop
mov
mov
mov
fdivrp
out
lods
fs
fs
push
inc
ss
pop
dec
sub
test
cli
cltd
and
sti
and
cmpsb
jl
dec
scas
dec
inc
iret
lds
rcrl
sub
xchg
jge
inc
push
test
int
cmc
and
out
shlb
adc
hlt
inc
bswap
insl
cmpl
inc
jl
incb
cmp
fs
mov
push
fstl
ja
or
pop
jle
adc
test
pop
sub
mov
test
adc
loop
xchg
es
data16
and
addr16
fildll
iret
pop
mov
aaa
push
ja
or
fldenv
pushf
or
rcrl
adc
mov
popf
loop
xlat
pop
fnstenv
sarb
xchg
sahf
into
mov
aad
int
mov
testb
fisubs
adc
sub
test
inc
lret
testl
cld
push
jb
mov
fidivrl
inc
lahf
fistpl
pop
lcall
jbe
cmp
int3
mov
test
into
push
subb
dec
dec
jecxz
aam
mov
addr16
test
fnstsw
fwait
test
cmpsl
call
fstpl
and
lahf
mov
scas
mov
mov
das
out
popa
mov
shlb
push
jge
stos
popa
popf
cltd
cmc
fldl
lods
repnz
push
insb
test
ja
pop
fcompl
fildll
outsb
sahf
push
mov
lret
dec
add
sahf
scas
repz
fsts
mov
pop
or
pop
movsl
fadds
cld
int
imul
imull
popf
dec
jp
or
insb
shlb
jmp
stc
cmp
mov
pop
iret
movsb
or
jecxz
fistpl
mov
dec
inc
arpl
mov
cmpsb
pop
mov
test
sbb
cmc
mov
mov
popf
inc
pop
dec
hlt
mov
clc
out
jb
jge
out
movsl
mov
inc
mov
push
mov
mov
jo
pop
pop
test
shll
inc
sbb
test
das
lcall
fdiv
pop
adc
movsb
lock
pop
lock
movsb
mov
fiadds
ret
pop
hlt
ss
sub
mov
mov
jbe
xor
cmp
fisubrs
rcr
and
adc
stc
lods
adc
jle
cmpsb
dec
jl
aaa
pop
pop
sbb
pop
push
leave
mov
loope
std
data16
sbb
and
xor
fcomi
fmull
cmpsl
and
daa
pop
mov
faddl
bound
mov
adc
cmpsl
int
mov
add
subl
popf
dec
repnz
lcall
inc
sbb
clc
mov
neg
push
sti
in
popf
movsb
lret
mov
cmp
incl
and
xchg
test
xor
jmp
int
pusha
pop
movsb
cmp
mov
insb
inc
in
int3
fildll
xchg
mov
inc
in
loope
mov
fcomps
repz
inc
fstps
test
and
inc
lods
jl
xchg
rorl
mov
mov
mov
inc
insb
sub
mov
aad
mov
mov
jl
mov
fsubrl
dec
sbb
and
adc
pop
add
mov
adc
outsl
test
movsb
iret
adc
jne
inc
pop
xorl
scas
jbe
mov
sub
into
jne
leave
outsb
popf
lock
cmp
push
call
sbb
mov
push
in
cmp
sub
ss
int3
xchg
insl
cmp
cmpsl
imul
dec
lret
xchg
inc
fwait
and
pop
mov
and
dec
ret
sbb
mov
jne
insl
sbb
push
notl
outsb
xchg
lock
jmp
mov
pop
shrl
stos
push
xor
cmp
icebp
sbb
jl
dec
cmp
mov
push
addl
add
repz
jge
pop
inc
or
sahf
adcl
push
xchg
xor
clc
and
fdivs
mov
popa
push
imul
jle
xor
lods
mov
mov
cmp
mov
and
loop
dec
jnp
sti
repnz
movsl
das
fwait
jp
lret
push
inc
cmp
jns
inc
mov
jb
cmp
dec
sbb
movsl
shlb
int3
push
push
xchg
push
sti
fisubrs
das
push
mov
sbb
fnsave
mov
mov
jb
push
jo
movsb
jno
push
xor
sbb
inc
dec
aas
lock
test
loope
jbe
xchg
jp
out
xor
ret
aam
xlat
es
fidivrl
scas
mov
cmp
outsb
cmp
sbb
mov
mov
popa
cmpsl
jo
pusha
adc
les
mov
insb
lahf
lret
ljmp
in
decb
xchg
out
rcrl
repz
in
aaa
lret
lcall
xchg
out
xor
rorb
pushf
jecxz
test
push
push
das
sbb
and
test
popf
int3
sahf
jbe
cmova
scas
xor
sbb
push
mov
rclb
and
xchg
movsb
inc
dec
mov
adc
cmp
push
pusha
push
and
xor
int3
test
fistps
lcall
int3
push
roll
add
jbe
mov
scas
int
cmpsl
std
dec
push
jno
aas
aad
test
xchg
inc
orl
sub
mov
ficoml
out
cmp
shll
sub
mov
scas
jmp
mov
sub
xchg
jp
sbb
lahf
cmp
add
lods
cs
in
orl
mov
ret
mov
mov
cmpb
popf
or
sbb
adc
and
dec
lods
mov
mov
pop
ret
xor
flds
int
arpl
fs
popf
dec
pop
pop
fimuls
sub
test
mov
push
xor
sti
push
sub
jmp
pop
loope,pn
inc
imull
std
sbb
scas
aad
aam
xchg
mov
cwtl
push
int
inc
xor
mov
test
subb
mov
or
and
fcmovnb
mov
movsl
and
mov
jmp
push
ja
out
rol
int3
fdivrp
movsb
adc
leave
mov
lds
test
sub
fsubrl
ficoms
mov
sbb
push
stos
sub
and
mov
enter
cwtl
jo
push
mov
sbb
or
adc
data16
dec
iret
in
ss
hlt
push
adc
dec
std
push
negb
jg
inc
notl
test
je
mov
inc
test
xlat
repnz
repnz
int
lcall
cs
es
fisttps
scas
mov
or
cmp
fnstcw
xchg
data16
jno
popl
push
das
pushf
adc
mov
push
inc
out
data16
jae
loopne
popf
shl
and
outsb
orb
daa
xor
call
arpl
cld
mov
pop
adc
lods
inc
inc
sub
and
mov
inc
popf
sbb
rolb
mov
sti
xchg
mov
jb
lahf
or
dec
push
sub
or
ret
pop
push
ja
fstps
sahf
jnp
mov
subl
mov
dec
fwait
mov
add
dec
mov
push
fstps
lock
mov
mov
fs
xor
out
aas
imul
xchg
sbb
mov
cld
sub
cmp
pop
or
xor
mov
mov
add
fwait
or
xchg
mov
aas
idivl
sarl
push
jg
test
jge
paddq
lds
jnp
mov
inc
xchg
aaa
sbb
out
cmp
xlat
cmpsl
jle
cld
pop
jl
test
divb
decl
mov
jmp
in
fisubl
push
fs
aad
add
mov
dec
push
movsb
or
hlt
fmuls
js
sbb
test
stos
xorl
icebp
or
ja
push
pusha
lahf
dec
subb
cmc
cmp
push
aaa
repz
inc
pop
imul
mov
les
jge
test
movsb
jmp
push
dec
sti
jge
push
and
outsl
mulb
xchg
inc
enter
or
test
scas
dec
sbb
lock
daa
jns
ljmp
sti
mov
in
cltd
cmpsl
xor
mov
mov
lea
cmp
dec
lods
add
cmp
or
xchg
outsl
mov
scas
cmpsl
sbb
adc
addr16
push
push
lods
daa
dec
ljmp
inc
pop
imul
mov
mov
inc
jb
add
cmp
mov
pushf
loop
in
lds
jbe
test
stc
gs
mov
std
xchg
jecxz
inc
xchg
in
cmc
out
nopl
cmpsl
int3
ret
jmp
leave
sub
jb
and
fistpl
clc
push
sbb
xor
negb
cs
fs
jp
dec
push
lahf
pop
repz
and
or
negb
push
subl
out
push
repnz
mov
and
gs
xchg
and
rcrb
push
fnstsw
das
adc
vpsraw
cmp
out
and
mov
int
dec
in
loope
pop
xor
push
jne
dec
mov
inc
and
cli
add
sbb
sahf
push
fcmove
das
dec
pop
les
mov
pop
push
jge
add
and
push
cmpsb
dec
in
das
xchg
mov
mov
andl
dec
inc
lahf
or
mov
ret
movsl
xor
mov
dec
ret
in
jg
pop
ret
inc
add
fcmovb
subw
dec
cmp
test
out
aas
cmpsb
imul
mov
imulb
xor
lds
dec
cmp
fdivl
xor
flds
push
cld
xchg
adc
xchg
out
add
repnz
xor
nop
inc
sub
jo
pusha
call
js
mov
xor
adcb
add
idivl
mov
cmp
and
sbb
inc
sub
addr16
fstps
test
vdivps
das
in
jno
rcrl
or
cld
mov
fnstsw
xchg
xchg
mov
test
pop
cmp
sti
mov
xchg
sbb
addr16
divb
add
in
push
mov
ret
jl
dec
loope
cltd
adc
sbbb
mov
fsubs
test
fstl
pop
jge
rorb
mov
hlt
adc
xchg
cmp
faddp
aam
pop
adc
jp
xor
adc
std
cmp
or
xchg
push
lahf
fistl
imul
test
jno
push
cmpsl
or
xchg
sbb
ret
pop
clc
mov
mov
sbb
mov
mov
fnstenv
xor
daa
jb
or
aam
xor
dec
fisttpll
clc
xchg
mov
es
enter
add
dec
fcompl
pop
cs
add
sbb
js
popa
push
mov
sahf
loop
in
loope
jns
sub
cmp
jmp
hlt
ja
mov
movsl
push
pop
pop
scas
test
push
mov
test
scas
xchg
or
mov
cs
aad
and
movsb
je
fprem
jno
daa
orb
dec
ja
mov
test
cmpsb
hlt
push
fwait
jne
movsl
fldenv
xor
ret
xchg
cmp
js
mov
out
and
in
icebp
movsb
inc
xchg
xchg
js
sbb
das
popa
imul
cmp
imul
stos
popa
pop
sti
call
addr16
shl
inc
adc
xchg
scas
out
aaa
lock
mulb
movsb
fadds
mov
int
in
lods
add
fs
fwait
mov
out
cmp
push
cmp
clc
xchg
dec
outsl
mov
dec
sbb
mov
jae
pop
clc
adc
push
add
outsl
mov
lods
dec
test
int
fstl
cmc
and
pop
xchg
pop
shl
test
and
push
inc
test
icebp
mov
orb
scas
daa
in
shrl
fistl
cmpb
dec
mov
das
mov
hlt
xchg
es
aas
movsl
ljmp
dec
lret
push
mov
stos
fldl
mov
jae
test
inc
mov
add
xchg
in
cmp
mov
inc
out
outsl
and
nop
lret
add
or
add
dec
negb
mov
or
mov
repz
cli
ret
mov
addr16
and
push
mov
in
inc
insl
fisubrs
test
test
or
out
xchg
test
outsb
add
cmp
jbe
mov
jo
cld
dec
sub
inc
std
fstpt
test
push
jg
sbb
xchg
mov
and
or
das
xchg
adc
bnd
and
push
test
in
jmp
pop
xchg
push
push
outsb
and
jae
push
in
pop
test
xchg
xchg
pop
add
sbb
mov
rorb
and
push
cmp
adc
aas
jno
push
rcrl
mov
inc
fisubs
out
lahf
or
les
add
xchg
xchg
lret
pop
inc
mov
adc
fbld
add
mov
or
adc
in
sbb
icebp
in
std
mov
sub
movsl
and
shr
ds
mul
mov
or
test
xchg
mov
daa
les
xchg
jecxz
mov
xchg
mov
xchg
shll
add
aam
or
adc
and
test
adc
sbb
fadds
cmp
test
push
ret
sbb
fdivrl
les
fdivrl
pusha
std
mov
mov
andb
push
pop
das
lcall
mov
xor
rcr
jmp
in
sahf
fwait
xchg
sub
push
imulb
cli
in
repz
cmp
and
mov
loope
inc
lahf
pop
roll
mov
arpl
lret
lahf
fbstp
aas
outsl
test
fstps
test
mov
addr16
call
and
push
mov
xchg
push
stos
out
cmpsl
sahf
push
mov
leavew
sub
pop
in
lods
in
pop
jnp
cmp
jb
movb
jo
shlb
push
rol
inc
xchg
and
aas
js
mov
mov
pop
pop
insl
and
mov
cmpsb
pop
test
mov
das
or
mov
movb
jae
pop
push
jle
sbb
jnp
inc
jbe
or
movsl
fsubl
stc
mov
push
add
xorl
aam
jge
lahf
shrb
imul
divl
cmp
adc
jns
gs
adc
sbb
adc
add
aam
inc
ja
je
subl
jl
pushf
inc
scas
mov
dec
lods
mov
enter
sub
imul
int
sub
out
or
jecxz
and
gs
dec
je
scas
xlat
leave
mov
pop
mov
xchg
mov
enter
jae
test
adc
sahf
lret
adc
repnz
mov
mov
xchg
popf
dec
repnz
inc
add
lods
push
sbb
and
mov
clc
jl
lret
out
repnz
gs
push
aaa
pop
enter
shll
adc
jbe
xchg
or
sbb
outsl
adc
inc
popf
addr16
sbb
mov
inc
push
stc
mov
xchg
sbb
test
pop
sbb
in
jl
mov
cltd
lcall
std
xchg
push
rcrb
lock
arpl
or
movsb
push
jbe
lock
ljmp
fnstsw
push
mov
xchg
outsb
ret
sub
mov
outsl
add
mov
xchg
jge
fwait
aaa
or
popa
iret
and
lods
jbe
add
sbb
sbb
les
cmc
das
jp
and
push
movsb
fld
sti
sub
inc
dec
mov
adc
lds
jmp
mov
rcrb
adcl
outsb
imul
std
pop
inc
je
xchg
adc
dec
cmp
xchg
scas
inc
std
fs
mov
sub
mov
jmp
mov
add
push
mov
or
jnp
push
popa
and
shlb
iret
lds
mov
test
stc
das
xchg
push
cmc
mov
and
jecxz
dec
repz
out
out
outsl
aas
pop
jge
lds
push
stc
pushf
pop
or
jbe
dec
das
mov
add
lods
adc
push
in
shll
std
jg
incb
flds
popa
movsb
jae
push
outsb
popl
xor
xor
in
pop
out
pop
push
mov
sub
fdivl
push
mov
cmpsb
jecxz
clc
sub
cmpsl
xor
xchg
mov
mov
ds
adc
test
pop
and
xchg
outsl
xor
xchg
and
jge
mov
cmp
mov
mov
pop
and
nop
inc
jecxz
mov
xchg
mov
push
pop
and
push
fstl
dec
aam
xchg
xchg
and
push
clc
xchg
sub
pusha
xor
sarb
loope
aam
add
das
jmp
movsb
test
dec
imul
lcall
add
out
push
in
sbb
cmp
nop
sarb
pushf
push
mov
adc
inc
cmc
sbb
pop
xchg
stos
adc
lret
js
inc
test
out
cmp
call
lds
push
push
xchg
sbb
mov
mov
jecxz
inc
ficoms
sbb
ljmp
sbb
or
ret
jg
jbe
or
xchg
jae
cli
jp
add
mov
inc
mov
and
push
pop
mov
or
push
imul
inc
rcll
pop
dec
outsb
jo
jb
dec
pop
imul
xlat
xorb
mov
xor
loope
aam
add
std
push
mov
lods
sub
ret
cli
push
enter
or
lods
jmp
push
mov
push
mov
cmovbe
pop
cmp
out
inc
int
sub
lock
fidivl
orb
and
sar
mov
mov
movsb
imul
sarb
mov
mov
push
push
sbb
fcmovnu
jne
stc
sbb
mov
and
cmp
cmp
fdiv
fwait
jmp
movsb
and
inc
push
mov
fdivr
outsl
std
mov
pop
and
fidivs
jg
in
popl
inc
sub
out
in
ss
cmp
lds
sahf
mov
jnp
fidivl
jae
or
and
mov
test
addr16
xchg
mov
pop
add
lods
dec
in
jbe
sub
adc
pop
cmp
fnstsw
into
xchg
add
pushf
or
dec
mov
jae
out
cmp
lods
dec
jl
pop
xchg
shll
shrb
cwtl
flds
fdivs
sti
jo
mov
push
push
push
lds
mov
test
push
mov
inc
mov
outsb
lcall
repz
loop
shrl
inc
movsl
adc
stos
jl
push
scas
mov
adc
jo
inc
fwait
mov
and
fdivl
test
out
cmp
and
mov
test
cmpsl
int
add
sub
mov
push
incb
test
out
popa
jp
daa
mov
mov
add
std
dec
iret
cli
andl
inc
push
stc
mov
lcall
nop
insl
aas
fwait
sbbb
lahf
lret
addr16
adc
add
jb
push
and
aas
dec
mov
loopne
xchg
icebp
aam
mov
inc
lret
std
dec
int3
scas
mov
push
xchg
lock
mov
xor
sub
jae
jmp
cmpsb
sti
out
repz
xchg
mov
mov
pop
sbb
sbb
fcompl
push
aad
scas
movsl
or
vpaddusb
imul
es
std
out
int
jno
sbb
dec
push
gs
jno
add
lods
imul
cli
test
xlat
or
es
add
hlt
mov
aam
xor
sbb
fsubrs
fstl
mov
fstl
xchg
lret
mov
mov
jno
pop
mov
ja
sub
test
sbb
test
xchg
adc
stc
push
inc
cli
mov
lahf
out
cmp
cld
dec
adc
dec
or
mov
test
ljmp
cli
int
iret
mov
mov
roll
loopne
mov
addr16
lds
fnstenv
insb
lods
pop
popa
cmp
test
mov
push
repz
imul
jnp
repz
mov
cli
shll
std
out
and
mov
and
mov
notb
not
lahf
andl
inc
out
push
sbb
and
jl
sbb
sub
in
movsl
inc
std
pop
fnsave
mov
jmp
test
adc
add
sbb
cli
rcl
js
and
mov
push
lods
or
outsb
cs
mov
push
rcr
ret
enter
pop
ret
inc
mov
lods
int3
push
mov
mov
jle
mov
and
cmp
dec
loopne
jne
jae
xor
push
ficoms
test
dec
adc
inc
or
lahf
xchg
fistps
movsl
dec
int3
pop
pusha
push
shr
push
mov
adc
scas
jbe
inc
push
mov
and
mov
mov
out
inc
out
lock
xor
fldln2
out
fisubrs
mov
sbb
sarb
push
aaa
lcall
lods
jae
lahf
push
cli
outsb
popf
insl
leave
mov
rorl
imul
cmp
fxch
icebp
mov
faddl
or
sar
fnstsw
pop
ret
cmp
xchg
rcrl
sub
cmp
orb
xchg
mov
xlat
dec
sbb
sbb
jb
lods
push
jae
jbe
fdecstp
xchg
sbb
sub
xor
or
sbb
and
lds
mov
lahf
xchg
shlb
mov
or
fisttps
int
scas
xor
out
in
inc
push
ret
in
sub
mov
dec
dec
imul
les
fldcw
or
mov
add
cmpsl
call
imul
sbb
inc
scas
aam
cmp
xor
jo
push
cld
nop
sbb
stos
popl
push
out
jnp
lds
ret
out
fs
movsl
jmp
shll
or
es
sbb
or
cmp
repnz
daa
push
jno
movsb
test
or
and
scas
fstps
push
int3
scas
sub
rolb
mov
cmpsb
xchg
je
mov
pusha
sbb
or
pop
dec
mov
cmpsl
in
jl
iret
cld
std
out
int
addr16
push
sbb
sub
xchg
fcoms
sbb
inc
lods
add
and
int
jmp
fnstenv
bound
push
jmp
cmp
dec
push
inc
sbb
fimull
xchg
xor
or
icebp
push
into
mov
sub
jbe
fldenv
in
les
mul
ljmp
adc
les
sbb
adc
int3
aas
cmpb
ja
loope
mov
gs
mov
sbb
mov
cmc
pop
xchg
mov
clc
push
repz
test
clc
pop
mov
mov
nop
mov
test
movsl
mov
iret
push
or
xor
les
in
js
sub
sub
mov
add
ret
les
outsb
es
xchg
inc
mov
ja
in
cmp
insb
repnz
test
sbb
or
test
aaa
dec
and
push
les
xorl
insb
inc
adc
mov
lret
sub
adc
ds
scas
xlat
fists
inc
or
mov
inc
cmc
stos
jmp
mov
stos
sti
lds
jns
mov
jg
jbe
aam
scas
cmp
ficomps
aad
adc
sbb
jae
or
stc
xchg
add
jno
inc
cmp
jnp
adc
add
jbe
push
cmp
xchg
sbb
ljmp
pop
inc
inc
dec
dec
mov
mov
addr16
and
sti
inc
jno
lret
cld
push
xor
or
adc
daa
mov
xchg
fs
fldenv
and
push
jno
test
dec
fsts
mov
push
movsb
movsl
test
jmp
adc
jbe
imul
jb
scas
push
fprem
pop
dec
cmp
sbb
int
popa
jnp
pop
jge
aam
mov
dec
pushf
out
popa
mov
add
js
cmp
adc
jl
inc
cmp
push
mov
inc
xchg
rorb
fistpll
mov
mov
lahf
test
mov
addr16
movsl
gs
mov
dec
jno
imulb
call
int
dec
jmp
jmp
clc
xchg
popa
pop
xchg
movsl
inc
sbb
rclb
xchg
mov
push
push
fadd
push
add
sub
jno
pop
popf
xor
ficompl
jg
xor
pop
adc
lahf
fcos
and
inc
mov
adcb
rclb
jae
fwait
lcall
hlt
aas
loop
cs
in
or
add
ftst
jmp
mov
imul
nop/reserved
and
outsb
and
aam
int
mov
jbe
dec
and
lods
fidivrs
sbb
xchg
add
into
movsl
adc
int
mov
pushf
jge
mov
mov
cmc
in
lahf
cs
lds
xchg
mov
fsubl
ljmp
jge
push
xchg
jp
cmpsl
popf
std
adc
sbb
aas
out
or
add
mov
ss
dec
pop
and
mov
dec
outsb
ljmp
ret
movsb
hlt
addb
cmpsb
adc
dec
repz
inc
lea
mov
sub
jno
jp
call
inc
sub
insb
cmp
cmp
cs
push
add
cwtl
push
scas
test
inc
fwait
lods
test
mov
xor
lea
mov
icebp
fldenv
mov
jbe
xchg
xor
adc
pusha
std
stos
sbb
outsl
mov
mov
mov
push
fidivl
scas
or
inc
nop
sbb
mov
subb
ja
or
daa
or
push
stos
std
ret
push
inc
aam
xchg
mov
cmc
scas
popf
mov
mov
int
loope
inc
dec
popf
xchg
xor
cli
in
adc
lds
movb
or
push
mov
mov
lcall
mov
mov
cmpsb
int
pop
mov
dec
pop
mov
shrl
je
push
sbb
push
cmc
xchg
inc
in
loop
out
js
clc
adc
sar
xchg
aad
push
dec
sbb
mov
cmp
pop
adcl
fsin
push
insl
scas
addr16
add
sahf
jp
and
mov
jmp
mov
imul
adc
mov
into
inc
int3
sti
inc
add
sub
dec
push
in
stos
sti
mov
test
mov
fisubrl
je
pop
mov
in
pop
stc
in
scas
int3
fdivr
jp
int
and
push
sub
lea
push
lods
cld
cmc
mov
adc
mov
clc
stos
mov
in
ficomps
cmp
jnp
loope
jae
je
mov
movsb
into
out
push
push
mov
mov
push
scas
clc
mov
test
push
out
pop
or
cmpsb
addb
in
mov
loopne
jno
cmpsb
in
push
xor
pushf
push
cmpsl
mov
fiaddl
das
cld
test
mov
mov
fiadds
insl
jae
push
mov
mov
pop
je
xchg
loopne
fwait
nop
je
insb
fsubrl
or
mov
push
and
stos
call
adc
in
imul
adc
test
mov
rcll
sub
jp
shlb
xor
jecxz
pop
jp
mov
dec
dec
fsubr
insb
or
mov
stos
inc
jbe
sub
mov
fisttpl
imul
pop
daa
cmp
cmpsl
je
in
sbb
test
dec
inc
adc
fstps
xor
cmp
cli
push
repnz
gs
mov
movsl
mov
cmpsb
and
cmpsl
inc
or
push
jg
aad
mov
movsl
jnp
lahf
mov
bnd
mov
xchg
jae
dec
je
fsubrp
sub
inc
or
icebp
pop
push
or
mov
cmpsl
das
fs
or
and
jne
dec
cmp
cs
jo
lods
scas
dec
push
inc
inc
mov
mov
add
cmc
jb
gs
sbb
fxch
push
mov
xor
aam
fcoml
push
jl
test
ljmp
inc
cmc
inc
movsl
xchg
ss
fildl
mov
pop
sahf
test
push
jl
ror
loopne
adc
inc
out
inc
std
inc
out
pop
movsb
addl
mov
cld
sarl
test
push
mov
insb
pop
adc
xchg
mov
imul
mov
mov
mov
test
sub
xchg
push
dec
push
andb
shrl
or
push
sti
sbb
mov
movsl
jge
push
adc
movsl
jle
popa
incb
add
bnd
or
shlb
les
dec
dec
mov
sbb
int
loopne
push
sbb
inc
lods
cmp
outsb
clc
lods
and
xor
jmp
out
hlt
push
xchg
shlb
lcall
test
mov
leave
add
push
out
inc
das
push
addr16
lahf
movsb
iret
xor
mov
flds
inc
mov
jae
sbb
int3
aad
push
xor
dec
in
insl
int
into
mov
xchg
int3
mov
push
push
je
scas
push
lahf
xchg
pop
cmp
adc
cwtl
jno
inc
mov
in
sti
mov
jne
loopne
scas
scas
jmp
movsl
fbstp
mov
jb
out
test
mov
adc
dec
int
jbe
sbb
jg
nop
daa
lahf
scas
cmc
pop
add
fs
adc
or
dec
jb
sbb
jmp
imul
orb
cmpsl
or
cmpsl
mov
push
xchg
out
dec
stc
scas
push
loope
mov
lods
add
fstp
test
mov
jecxz
outsl
out
mov
lcall
in
sbb
lahf
scas
out
push
jmp
out
sbb
mov
inc
or
push
dec
les
mov
out
cs
and
int3
inc
xor
or
les
std
xchg
push
jns
add
sahf
xchg
dec
aaa
shr
popf
pop
fld
sub
mov
mov
aam
decl
inc
imul
add
in
or
mov
and
popf
add
call
push
stc
mov
xchg
in
xchg
repnz
mov
jnp
sbbl
add
push
inc
push
mov
and
or
dec
inc
push
lock
mov
addl
or
inc
push
sbb
jmp
mov
ja
in
mov
dec
bound
pop
repnz
scas
cmpsb
pop
jmp
fsubp
jmp
mov
pop
xor
xchg
out
cmpsb
out
sbb
xor
cmp
test
in
in
rcrb
or
aam
dec
push
repz
outsb
ficoms
shl
pop
out
frstor
inc
outsl
pop
mov
cmp
cld
push
inc
addr16
lahf
mov
or
imul
adc
movsb
dec
and
int
popf
mov
loopne
or
adc
or
out
mov
jnp
fildll
aam
push
jae
int
popf
mov
daa
inc
lock
fists
mov
jb
fcmovbe
cmp
daa
hlt
pop
insb
std
adc
frstor
mov
popa
sub
cli
loop
test
and
repnz
negb
pop
adc
loop
lods
mov
sub
mov
in
inc
push
pop
pop
cmp
mov
arpl
mov
adc
popf
push
fwait
negb
ljmp
pushl
cmp
jne
cmpsb
xchg
and
hlt
push
lcall
mov
aas
mov
mov
xor
fstps
push
cld
lock
pushf
jb
and
mov
das
stc
stos
pop
fsts
repnz
popf
mov
test
mov
outsb
loop
cmpb
fisubs
mulb
cmc
aaa
in
push
and
xor
cmp
jge
clc
and
add
push
jbe
inc
test
xchg
mov
xor
test
fcoml
or
sub
mov
out
lock
shrl
pop
cmp
popf
flds
mov
mov
and
es
mov
jle
push
ret
mov
jecxz
stos
cmp
jp
fcomi
sbbb
outsl
jne
xor
inc
hlt
xor
int
cmp
add
cltd
int
cld
and
jmp
mov
mov
adc
jae
inc
int3
jp
add
push
and
fcompl
test
pop
out
cld
repz
aaa
pop
inc
pusha
xchg
inc
mov
sub
xor
add
mov
scas
push
fbstp
cs
fisttpl
out
repz
jmp
jnp
mov
xchg
sub
int
in
mov
fnstenv
stos
add
pop
or
mov
cltd
sub
dec
sti
dec
jns
adc
fidivrs
int
cmc
or
test
mov
test
and
dec
lret
in
js
movsl
sbb
sbb
jmp
ret
imulb
subb
dec
popf
sub
ret
pop
pop
roll
cmpl
adc
and
movsl
cmp
jnp
jmp
dec
insb
mov
jnp,pn
mov
daa
jl
dec
inc
adc
cmpsb
sub
push
call
frstor
mov
test
jno
adc
push
xlat
shlb
pop
enter
movsl
mov
sub
stos
adc
cld
jb
xchg
push
hlt
inc
popf
mov
test
fsub
and
ja
mov
hlt
dec
insl
sbb
inc
inc
mov
mov
test
into
hlt
ret
lcall
mov
popf
push
mov
flds
arpl
dec
lahf
dec
shll
cs
mov
jl
mov
xchg
and
jecxz
adc
leave
rcrl
push
pushf
or
jns
addr16
in
inc
pop
push
xchg
inc
mov
sbb
mov
adc
xchg
fistpll
rolb
jbe
lods
or
cmp
dec
pop
xor
out
les
fs
and
adc
xchg
int
add
or
int3
push
sub
xor
adc
pop
push
outsl
add
xlat
in
cmpsl
cmp
inc
push
xlat
sti
aas
mov
dec
xchg
movsl
cmp
sbb
repnz
and
negl
push
jp
icebp
push
jp
hlt
aad
test
xor
and
and
dec
cmp
jnp
pop
cmp
das
xlat
mov
mov
push
scas
jl
cmc
and
int3
ljmp
jmp
insl
das
mov
adc
je
or
pushf
test
scas
fidivrs
rol
outsb
push
mov
sbb
xchg
adc
ja
mov
pop
fnstenv
push
fisttps
mov
jnp
je
mov
dec
xor
adc
std
stos
int
pop
mov
xchg
test
mov
pop
cmp
pop
mov
sub
dec
ss
and
push
aas
sbb
mov
mov
arpl
das
lret
sbb
mov
xchg
leave
push
packsswb
rcll
lahf
test
mov
xor
gs
jno
add
xor
xchg
in
cmpsb
je
and
jae
push
in
sub
bnd
xchg
jno
pop
fnstsw
popf
pop
and
push
dec
int3
inc
sbb
inc
add
sbb
xchg
xor
mov
pop
cmpsl
mov
fldcw
jno
fwait
inc
xlat
add
dec
lret
sahf
lahf
adc
pop
jne
adc
stos
in
cmp
adc
out
inc
test
jbe
inc
jbe
cld
mov
or
out
fwait
out
stc
cli
test
xchg
lock
cmpsb
clc
push
adc
lods
imul
movsb
push
add
mov
mov
in
testb
jp
lcall
rolb
push
mov
aaa
in
test
repz
xor
mov
mov
hlt
mov
jecxz
outsb
stos
pop
add
out
packuswb
xchg
lock
sub
into
xlat
add
mov
pop
mov
mov
mov
ljmp
xchg
sbbb
ret
imul
jmp
addr16
cmpsb
nop
jb
jae
sub
scas
mov
and
or
sahf
lret
dec
fcompl
fnstsw
shlb
or
shll
and
shll
xchg
adc
sub
icebp
mov
or
xchg
test
jl
fsts
xchg
int3
jge
sbb
push
mov
aad
call
das
lods
cmpsl
ret
jo
dec
or
fbld
mov
mov
adc
aaa
and
in
adc
out
xchg
sbb
cmp
sub
movsb
push
xchg
adc
dec
add
fldcw
xor
fnstsw
fsub
or
aam
lahf
mov
dec
xchg
aas
mov
insb
mov
mov
sbb
inc
sar
fldenv
add
fisubrs
xor
push
pusha
cld
mov
xlat
cmp
scas
dec
sbb
fdivrl
mov
push
mov
xchg
inc
mov
addr16
sub
ret
push
dec
ss
sti
add
aad
or
mov
arpl
push
sahf
pop
int3
clc
movsl
xchg
cmp
cs
fisttpl
in
cmp
sub
pop
les
mov
iret
mov
adc
rorb
pop
push
pop
in
aas
test
sbb
ret
xlat
mov
adc
mov
push
mov
mov
pop
push
mov
mov
xchg
sar
push
cmp
cmc
lret
jecxz
adc
dec
aaa
push
out
mov
movsl
pop
and
xor
pop
call
repnz
movsl
and
addl
jb
mov
inc
gs
shll
cli
jle
repz
dec
mov
mov
mov
fidivrl
aam
int3
xlat
mov
xchg
mov
ret
call
aas
das
lds
or
out
cmp
in
loopne
in
add
push
mov
daa
mov
fsts
sarl
xchg
in
jnp
enter
xor
mov
movsb
js
sub
mov
lcall
xchg
cmp
jae
adc
je
sub
test
in
mov
icebp
cmp
ss
push
out
ret
jae
sbb
sti
jl
pusha
cmpsb
arpl
in
fsts
mov
stos
push
add
cs
movl
xor
test
sbb
insb
cmp
aam
mov
pop
es
lods
sarl
mulb
sub
jmp
ss
in
pop
data16
pushf
cltd
adc
shlb
cmp
jno
cmc
popa
lods
sbb
popa
repnz
inc
lcall
mov
xchg
pop
mov
faddl
je
and
mov
filds
jp
and
or
push
xor
icebp
lea
test
ljmp
cmp
mov
jecxz
insl
flds
btr
xor
test
xlat
es
inc
or
stc
mov
sbb
add
mov
xor
popf
inc
imul
push
cmp
jb
xchg
mov
inc
rcrb
lea
dec
das
cmp
mov
jae
mov
sbb
outsb
shrl
mov
sub
mov
movsl
add
dec
cmp
sbb
lods
cmpsl
push
mov
sbb
je
sbb
xchg
xchg
pop
fxch
inc
pop
shlb
stc
imul
movsb
pop
addr16
add
movsb
aad
std
and
adc
mov
pop
imul
sti
xor
scas
mov
fcmovnu
xchg
adc
fsts
hlt
jp
xchg
loopne
std
cmp
add
addr16
inc
fstpl
stc
sbb
inc
int
mov
xchg
lret
or
dec
and
pop
outsl
cltd
popa
ret
loopne
pop
jmp
in
fldenv
xor
jp
push
mov
hlt
dec
rep
stos
mov
stos
push
mov
push
push
inc
mov
lods
sbb
sahf
repz
lret
and
or
mov
mov
loopne
inc
repnz
push
xor
mov
test
pop
lock
pop
mov
mov
pushf
xor
inc
fwait
mov
iret
pop
cmp
jo
dec
popa
loop
push
test
jg
adc
fiadds
loopne
iret
out
leave
jl
inc
fnsave
test
icebp
inc
xchg
pop
in
xchg
inc
das
lds
jnp
test
popa
mov
ss
out
mov
test
add
aad
inc
js
outsb
pop
movsb
sbb
mov
fdivrp
push
lahf
out
pop
in
shlb
test
jle
xor
jnp
andb
daa
mov
mov
mov
fnstcw
and
fiadds
mov
mov
out
and
dec
ficomps
addr16
outsb
jg
jae
cmpsb
push
sub
inc
inc
andb
xor
dec
push
pushf
imul
aad
in
sbb
arpl
or
pop
sti
lcall
in
arpl
or
leave
and
mov
xor
and
add
pop
lret
std
cmpsb
scas
cmp
inc
inc
fimuls
pop
pop
sbb
stc
mov
jae
add
out
loope
in
pop
push
xor
add
adc
lods
adc
or
sbb
cmp
cwtl
mov
inc
movsb
mov
test
adc
mov
cwtl
dec
lods
xchg
mov
mov
dec
leave
push
fs
int
test
sbb
add
lahf
test
enter
outsb
cmp
jns
gs
cmp
sbb
pop
loopne
xchg
out
dec
stos
xchg
and
or
stos
cli
test
ds
and
mov
sbb
sub
lods
pop
sbb
or
fiadds
xchg
hlt
add
lcall
loop
and
dec
dec
je
enter
int
cmc
mov
lock
addr16
insl
inc
test
clc
xchg
inc
adc
push
out
sbb
mov
adc
cltd
xchg
mov
dec
not
shlb
test
popa
jns
inc
cmp
stc
mov
scas
add
mov
mov
aaa
insb
mov
sbb
out
sbb
pop
push
xchg
sub
sti
sub
in
ret
scas
scas
mov
or
std
pop
push
sbb
jmp
lock
filds
insl
arpl
mov
pop
fsts
sbb
cwtl
repz
pop
sub
adc
pop
pushf
scas
push
jge
or
mov
mov
popa
call
das
scas
aaa
gs
faddl
into
xchg
mov
aaa
scas
icebp
inc
fcompp
repnz
sbb
mov
adc
mov
pop
inc
dec
in
into
adc
enter
dec
mov
xchg
aam
test
pop
fnstenv
inc
cmp
sbb
or
mov
leave
data16
pusha
test
pop
movsl
andl
dec
dec
or
inc
mov
orl
gs
adc
push
js
std
notl
jg
inc
inc
sub
mov
inc
rcr
or
sbb
pop
gs
mov
cmp
mov
cmp
xchg
in
aad
imul
test
inc
cmp
lahf
cmpsl
sub
ljmp
mov
xor
fwait
das
push
popf
iret
loop
and
push
jp
xlat
mov
push
sub
cmp
stc
fisubl
push
dec
jne
add
je
push
repnz
not
and
xchg
cmp
and
jle
push
xchg
scas
aaa
test
cmpsb
pop
ret
in
lods
mov
ret
lods
out
pop
stos
insl
test
insl
addb
movsl
cmp
push
scas
pop
and
pop
clc
pusha
cmp
xor
push
frstor
sbb
sbb
lods
xor
mov
mov
xchg
aaa
inc
sbb
mov
fnstenv
roll
roll
leave
adc
in
jno
test
push
push
popf
jns
adc
popf
cmp
xchg
lahf
mov
js
mov
and
notl
fnstsw
cmpsb
or
movsb
pop
mov
insb
les
test
rol
pop
pop
stc
shlb
movsb
test
jne
subb
push
inc
int
int
dec
sbb
fdivrs
lods
popf
xchg
mov
stc
xchg
je
movsl
xor
int
dec
push
ss
mov
int3
mov
lods
jns
cmpl
push
sub
dec
mov
scas
in
or
ljmp
out
sbb
insl
enter
sti
aad
repnz
mov
psraw
mov
out
adc
inc
clc
mov
mov
xchg
int
mov
loopne
in
adc
xchg
pop
leave
mov
imul
cmp
pop
mov
mov
in
arpl
cmp
out
mov
push
daa
popa
mov
push
push
mov
mov
scas
mov
push
cmp
in
maskmovq
testl
sub
scas
add
push
call
push
mov
mov
adc
div
adc
jae
push
and
test
fs
bound
inc
pop
int
mov
mov
mov
and
flds
sbb
stos
cmpsl
mov
dec
icebp
pop
and
leave
push
mov
test
sbb
sub
push
jns
rcrl
adc
js
std
cmpsb
int
xchg
out
leave
ja
daa
inc
flds
add
imul
cmp
cmpb
stc
aaa
mov
std
popf
fldz
push
sbb
xor
inc
out
add
mov
fs
jle
subl
loopne
scas
pop
adc
xchg
test
test
sub
flds
and
out
inc
cli
push
jo
das
push
adc
cwtl
xor
jmp
push
ficomps
pop
cmp
sub
push
mov
mov
scas
aam
rcll
cmp
arpl
jae
sub
cmpsl
mov
bound
fucom
push
mov
fadds
jno
xchg
inc
test
scas
insb
movsb
ds
stos
pop
mov
jp
mov
das
push
into
inc
xchg
or
movsb
int3
and
sbbl
imul
out
repnz
adc
push
fbld
fidivrs
cli
lods
jp
rorl
add
fisttpll
cmp
sub
out
sbb
jbe
lods
cld
imul
and
fsubl
test
mov
loope
data16
push
sub
loopne
mov
fsqrt
mov
scas
inc
dec
rcl
sub
fxch
sub
cmp
loop
testl
aad
inc
in
sahf
pop
js
mov
gs
mov
xchg
mov
mov
arpl
fwait
sub
out
in
into
movsw
mov
test
arpl
mov
jle
out
repnz
dec
jl
xchg
clc
lret
daa
enter
dec
mov
popa
mov
cmc
mov
add
add
jecxz
movsl
jp
pop
cmpsl
cmpsl
pop
or
cmp
dec
mov
movsb
psubusw
sbb
fisubs
cmpsl
xor
lcall
sahf
cmp
push
sahf
sbb
movsl
sbb
pop
neg
mov
dec
test
into
es
repz
testl
jnp
mov
fs
into
pop
test
fldenv
stos
mov
subl
in
inc
push
les
scas
test
repnz
repz
push
les
test
bound
adcb
imul
or
std
call
pop
icebp
insb
int
imul
cmp
add
mov
lock
mov
mov
fldcw
orl
xor
std
pop
sub
mov
sti
cwtl
xchg
cmp
cli
movsl
fsubl
push
mov
push
or
inc
cmpsl
jne
push
fmuls
push
adc
or
xchg
ja
scas
sbb
mov
pop
int
xchg
mov
dec
or
cmovnp
inc
addr16
mov
dec
adc
addr16
jno
inc
mov
mov
ss
scas
mov
jno
mov
adc
lods
scas
mov
adc
mov
and
adc
pop
adc
sbb
mov
lcall
jo
lods
adc
aad
and
fldt
lahf
mov
fdivr
inc
aas
dec
in
sub
mov
inc
push
mov
sbb
or
xchg
int
aaa
inc
mov
mov
fwait
jecxz
push
inc
and
push
pop
enter
es
push
sbb
fcompl
in
push
scas
out
fidivrs
mov
dec
sub
dec
push
mov
fstps
push
sub
sub
xor
pop
adc
jle
stc
into
adc
xchg
push
xchg
mov
and
lods
push
mov
subl
outsb
mov
cli
ror
mov
pop
fsubrl
pop
pop
xchg
jb
xchg
jle
test
fldenv
dec
adc
roll
sub
movsl
jp
std
push
jns
nop
mov
adc
scas
adc
sub
test
jae
scas
xchg
fcomip
lods
mov
mov
mov
lods
jecxz
adc
add
and
mov
jb
xor
dec
and
sub
adc
adc
mov
repz
lds
das
xchg
repnz
lret
sbbl
icebp
jle
lock
sbb
xchg
inc
push
mov
xor
lret
pop
mov
out
scas
adc
movsb
jg
mov
sbb
fbstp
ror
pop
fcmovb
incb
sahf
and
and
roll
or
cmp
xchg
call
je
test
data16
dec
add
and
inc
sub
test
adc
push
ret
push
mov
out
or
adc
dec
mov
push
mov
jae
mov
scas
cmp
cltd
mov
mov
push
lods
std
xchg
lahf
jp
subb
mov
fbld
xor
das
mov
ret
or
xchg
mov
loop
xchg
in
push
fisubl
movsb
dec
leave
pop
cltd
dec
loop
xchg
sub
loop
subb
ja
cmc
sub
dec
int3
inc
outsb
push
add
insb
mov
mov
sbb
push
cs
and
js
and
sbbl
mov
add
mov
jnp
cmp
xchg
lahf
mov
sarl
inc
push
dec
pop
xchg
iret
fucomi
scas
mov
cli
js
mov
sbb
es
repnz
fsts
fisubrs
xlat
rcr
call
jecxz
sbb
xchg
sbb
cs
mov
jecxz
pop
cmp
ja
cmp
out
sahf
nop
ss
mov
mov
sahf
andb
cli
frstor
loopne
pop
inc
sti
fsts
test
stc
cs
lods
mov
cmc
lahf
or
inc
fidivrs
testl
in
mov
jle
cmp
out
and
cmp
pop
pop
jae
mov
bound
mov
jg
push
das
vandnps
data16
mov
imul
lds
lods
std
sbb
mov
int3
mov
jns
adc
inc
jmp
fnsave
outsb
xchg
jle
adc
add
xor
cmp
flds
push
mov
fsubl
or
lods
mov
mov
mov
mov
sbb
loopne
cmpsl
imul
lods
jb
sub
test
and
inc
insb
sub
ss
cld
fwait
sti
scas
mov
cmp
add
sub
push
mov
pop
int3
icebp
mul
jp
out
addr16
pop
fsts
mov
out
cmp
pop
add
xchg
adc
fsubp
mov
fs
popa
mov
pop
pop
sbb
xor
in
push
mov
test
fldcw
inc
cld
xor
push
lea
jl
aad
iret
std
fidivrl
pusha
xchg
xchg
in
dec
scas
xor
pop
mov
lods
fucom
adc
sbb
inc
lea
sbb
or
movb
push
mov
add
lods
or
and
sub
jae
cs
pop
fimuls
out
push
dec
mov
xor
loop
fs
adc
push
fists
or
push
jae
lods
in
mov
arpl
filds
xchg
test
xchg
insb
dec
or
cwtl
mov
inc
xchg
cld
or
push
gs
sub
cltd
xor
sbb
jecxz
insb
or
cmpsl
cmpsl
iret
add
xor
popf
out
addr16
xchg
sbb
mov
adc
sub
pop
jle,pn
frstor
pop
lods
lcall
scas
ret
and
outsl
mov
xchg
xor
pop
movsb
cmpsb
fwait
mov
push
push
dec
aaa
lods
or
xchg
ficoml
mov
and
sbb
sbb
jmp
lds
lret
xor
inc
push
call
scas
lock
inc
xchg
nop
jbe
xor
or
sahf
hlt
sbb
mov
sbb
mov
repnz
mov
mov
fcomps
xor
mov
push
xor
lods
outsb
push
xor
test
pop
dec
cmp
and
sbb
es
xor
mov
test
mov
adc
lret
add
sub
aas
sahf
pusha
test
inc
add
jge
mov
imul
std
mov
fldcw
mov
fdivs
dec
gs
test
test
mov
sahf
nop
rorb
sbb
repnz
xchg
int3
adc
rolb
clc
xorb
mov
leave
aaa
xchg
inc
xor
ficoms
mov
sub
arpl
dec
cmpl
scas
and
into
jb
inc
fwait
das
push
test
inc
mov
shll
shrl
push
mov
imul
xchg
xchg
xchg
loopne
fistl
mov
loope
mov
inc
stos
push
jmp
test
mov
ss
lret
mov
inc
stc
sub
push
xor
popa
jp
shl
and
sbb
sbb
mov
rorl
sbbb
daa
cmc
in
stos
mov
mov
pusha
testl
andl
jge
leave
pop
shl
xchg
xor
ja
cmp
push
mov
fcoml
xchg
mov
mov
lods
sahf
cs
push
pop
aam
daa
mov
js
test
cmpsl
shrb
jp
push
mov
xchg
dec
outsl
mov
pop
and
adc
loope
movsl
push
jge
jl
imul
dec
lods
jl
decb
add
add
int
subl
and
sbb
scas
xchg
addr16
inc
fldcw
xchg
call
mov
lods
mov
shll
xchg
jno
data16
and
mov
cmp
xchg
nop
pushf
std
sti
aaa
icebp
push
xor
mov
or
pop
addr16
into
rcrl
dec
add
sub
jge
ffree
lret
push
das
add
sub
fldlg2
mov
cmp
aaa
je
test
pop
jg
outsl
inc
enter
jecxz
xor
add
repz
cmp
std
pcmpeqb
push
loopne
mov
cmp
push
adc
add
or
xchg
mov
stos
les
scas
adc
out
jb
addl
pop
xchg
inc
sti
mov
mov
add
std
adc
mov
cli
and
movsl
pop
jge
cmp
icebp
adc
out
xchg
adc
push
or
sbb
std
push
je
gs
in
pop
test
repnz
inc
jl
jle
scas
pop
out
and
lahf
dec
addb
fnsave
inc
sub
pop
shll
in
dec
jmp
aas
fst
std
in
sub
stos
lock
lret
xchg
fadds
lret
out
pop
sahf
xorb
es
repz
lods
mov
sub
xchg
xor
xor
mov
jno
inc
stc
mov
mov
clc
fiadds
int
movsl
or
fstps
sbb
push
into
jle
sbb
mov
xor
daa
sbb
in
fdivrl
xchg
push
outsl
push
inc
or
mov
jp
pop
sbb
test
leave
mov
mov
cli
adc
jge
push
dec
call
sti
add
stc
repnz
dec
and
ds
loope
sbb
pop
cmp
scas
inc
ljmp
subl
xchg
rclb
xchg
inc
movb
loope
mov
scas
inc
int3
gs
cmpb
mov
lods
lret
mov
or
mov
push
das
xchg
aad
jo
jae
mov
ret
and
aam
dec
cmp
es
and
xchg
cmp
push
mov
mov
pop
out
cmp
flds
mov
jne
imul
cmp
mov
in
jae
mov
int3
pop
daa
pop
lods
cmp
cli
loop
sbb
dec
loopne
mov
inc
and
add
xor
xor
cltd
fucomi
mov
pushl
mov
jbe
scas
fcompl
test
mov
mov
cmp
pop
and
hlt
in
jl
and
sbb
jmp
lds
mov
and
jnp
in
mov
iret
or
xchg
mov
dec
jg
js,pn
fcompp
push
dec
xchg
jp
int
sub
sub
pop
test
in
or
and
repz
jge
lea
sbb
pusha
mov
jb
adc
aad
int3
cmp
aam
je
cmovbe
mov
fistpll
mov
imul
sbb
xchg
movsb
mov
pop
pop
mov
push
hlt
mov
push
out
out
and
test
lods
test
das
jge
ljmp
jge
insl
and
test
popa
adc
cld
xchg
dec
push
clc
in
push
xchg
nop
pusha
push
test
xor
mov
mov
fsubrl
bswap
or
aad
scas
jmp
cltd
sub
dec
icebp
adc
gs
imul
push
xadd
and
mov
mov
jbe
cmp
add
mov
sub
lock
inc
lcall
ret
mov
les
neg
mov
jbe
out
adc
jecxz
bound
cmp
xor
mov
jns
pop
flds
mov
test
mov
jmp
and
add
and
xor
pop
clc
jo
scas
fisubs
mov
aad
jp
or
mov
or
or
fsubr
stos
jecxz
push
or
jbe
sbb
inc
out
in
fwait
jb
push
fdivrs
add
inc
adc
mov
je
add
pop
test
add
mov
mul
mov
or
mov
std
add
jnp
sbb
xchg
je
jle
fs
sbb
cmp
test
es
mov
test
inc
imul
aad
dec
sbb
sti
xor
imul
add
fsts
sbb
jecxz
daa
xchg
xchg
push
lea
in
out
aaa
cmpsb
imul
cwtl
push
pop
dec
shrb
sub
in
outsb
sbb
stc
mov
xchg
dec
test
int3
ret
jns
mov
push
data16
scas
cltd
flds
clc
or
cmp
pop
mov
or
lahf
mov
das
lods
dec
jns
cmp
dec
fdivrl
mov
call
or
test
jecxz
cmc
loopne
adc
mov
inc
mov
imul
mov
mov
push
adc
sub
flds
sub
cmp
mov
mov
jmp
push
add
arpl
lcall
dec
shll
andl
jne
dec
arpl
push
loop
push
cmp
fmuls
cld
popa
adc
sahf
cltd
push
fldenv
inc
ljmp
dec
orb
scas
xchg
mov
jne
addr16
ss
mov
js
mov
testl
inc
scas
fwait
xchg
adc
lock
jno
inc
mov
fildl
imul
mov
subb
cmp
jl
int3
xlat
and
xchg
pop
jb
pop
jecxz
roll
repz
aaa
adcl
pusha
les
mov
jne
pop
mov
add
sti
aam
sbb
jle
stc
mov
mov
xor
xor
cli
scas
ds
add
ret
inc
scas
adc
fdivrp
mov
fsubl
mov
out
loope
clc
fnstcw
pop
je
fidivs
lods
and
arpl
idivb
rclb
fisubl
inc
mov
dec
xor
pop
mov
aam
xchg
inc
icebp
imul
mov
or
pop
fs
lods
fnstsw
repz
cmp
stc
mov
fstl
pop
push
es
cs
loopne
stc
and
push
mov
mov
mov
push
out
loopne
push
and
fwait
movsl
mov
std
xor
adc
cmp
inc
in
fisubs
sub
test
mov
insl
enter
push
fdivrl
push
mov
sbb
pop
imul
std
sbb
cwtl
pusha
jl
mov
sub
insb
or
mov
cs
scas
jno
in
data16
mov
in
call
movsl
pop
cld
in
mov
stos
sbb
mov
pusha
cmc
int
mov
cmpsl
fdiv
outsb
mov
dec
imulb
add
jae
or
ss
fists
movsl
sbb
mov
push
sub
push
adc
sahf
push
cmpsb
xchg
enter
orl
insl
cmpl
mov
out
inc
mov
pop
jp
popf
cmp
inc
fstps
mov
push
stos
dec
sub
cmp
ja
lods
lds
pusha
and
xchg
push
dec
loop
xchg
adc
mov
jmp
jg
jecxz
enter
data16
push
gs
xor
je
dec
aaa
jne
out
lds
bound
dec
je
idivb
push
mov
sti
aaa
shl
es
outsb
and
fdecstp
es
mov
jl
nop
jmp
sahf
jp
bound
lcall
cmpsl
jmp
sub
in
dec
sti
cld
mulb
in
ss
shrl
in
cmpsl
insb
test
pop
cld
fsubrl
push
or
cltd
dec
push
call
jge
inc
int
xchg
add
push
sub
pop
push
mov
pop
cmp
call
loope
enter
inc
xchg
add
push
jns
ret
jmp
aas
scas
fldcw
inc
setl
std
and
sbb
cmpsb
cltd
inc
js
add
dec
inc
lea
js
rcr
les
push
mov
roll
int
mov
scas
test
test
xchg
cld
sub
int
daa
or
and
and
ds
andl
hlt
push
sbb
sbb
mov
push
inc
push
xchg
popa
cmp
out
jnp
hlt
pop
mov
push
sbb
mov
pop
inc
das
dec
or
sbb
xchg
add
stos
or
scas
cmp
push
add
loop
cmpsb
inc
pop
test
je
push
adc
stos
in
xor
adc
or
mov
cmp
test
mov
add
cmp
fnstcw
mov
lahf
add
mov
sbb
inc
cmpsl
mov
mov
inc
addr16
shlb
lahf
dec
add
and
xor
loopne
stc
call
imul
stos
pusha
mov
addr16
push
test
add
inc
insb
lret
xchg
out
cmp
aas
arpl
int
adc
xlat
pop
sbbl
push
ss
xor
scas
mov
int3
xchg
subb
sti
test
cltd
loop
stc
inc
pop
sub
scas
dec
fwait
mov
test
mov
mov
enter
scas
adc
lods
push
pop
scas
cmp
jne
es
cmp
push
pusha
stos
sub
data16
jns
or
or
push
outsb
imul
fbld
cmpsb
pop
gs
jno
add
ret
ud2
mov
and
cmp
fmuls
imulb
das
xchg
lea
jnp
jo
bound
push
add
jbe
or
jecxz
mov
test
fs
inc
loope
mov
stos
xacquire
out
pop
xchg
iret
mov
movsb
ss
jno
push
sub
dec
xchg
jecxz
inc
jne
dec
add
mov
js
cmp
jae
inc
mov
cld
push
andb
rolb
cmp
xlat
repnz
cltd
or
sbb
mov
aad
mov
nop
in
negl
movsb
jne
dec
in
mov
xchg
mov
add
cld
out
sahf
pop
xor
sub
shlb
fadds
inc
cmpsb
mov
jnp
xchg
push
pop
sbb
jmp
cs
test
lret
aaa
lods
mov
mov
mov
movsb
add
int
cli
dec
outsb
in
push
mov
cld
mov
adc
ret
sub
pop
ss
dec
cld
inc
mov
dec
adc
aas
jb
cmp
xchg
mov
pop
cmp
dec
pop
sarl
jl
push
mov
add
sub
push
std
lods
sub
fidivrs
mov
add
adc
lea
mov
mov
test
ja
hlt
test
xor
call
imul
stos
push
push
lret
les
jle
pop
in
pop
rol
roll
test
lret
adc
mov
pop
mov
mov
aas
ljmp
xor
sbbl
loope
cmp
push
std
fsts
cs
push
negl
cmp
xor
fisubs
js
xor
imull
sbb
test
mov
mov
mov
cmpsb
mov
pushf
xchg
mov
push
ss
shlb
jno
cli
push
ja
lds
push
mov
decb
mov
push
xchg
mov
es
dec
int
push
out
fadds
inc
pop
mov
loopne
aam
mov
mov
cmp
push
leave
notb
xchg
jb
fiadds
pusha
repz
mov
outsb
and
inc
pop
push
lcall
push
xlat
imul
mov
xchg
mov
cmp
sub
cmpsb
inc
rep
mov
loope
push
push
call
add
jb
andb
or
and
or
mov
movsb
into
test
adc
dec
scas
fdivl
cli
arpl
adcb
jle
mov
sahf
scas
movsb
movsl
popf
mov
jecxz
mov
and
jmp
push
daa
enter
pop
popf
cltd
loop
cmp
sbb
iret
dec
shl
sub
cs
sti
lock
inc
add
add
dec
xchg
pop
iret
mov
fldl
or
or
cmc
xchg
sbb
movsl
jl
test
test
cmp
xchg
sbb
mov
mov
push
or
arpl
or
jg
pop
cmp
sahf
pop
popf
rcll
mov
test
mov
mov
mov
call
cli
roll
push
pop
sahf
adc
loopne
movsl
push
xchg
inc
aas
fdiv
call
lahf
dec
std
mov
in
jl
adc
daa
adc
in
sbb
jbe
aas
stos
jg
shr
shrb
sti
sub
sub
das
pop
adc
cmp
lcall
add
inc
and
sub
aad
fisttpll
imul
fmull
icebp
mov
mov
scas
mov
pop
fcmove
pop
inc
xor
mov
insb
mov
pop
pop
outsl
stos
in
loopne
ss
mov
inc
stos
call
mov
in
pop
loop
fldcw
xchg
fwait
je
xor
mov
dec
scas
adc
test
or
fisubrs
sbb
pop
test
in
pop
mov
push
int
cwtl
out
daa
cli
cmp
pop
sti
stos
fcompl
add
stos
std
data16
test
fdiv
pop
in
pop
fs
fnstcw
pop
out
xlat
dec
mov
inc
jb
cltd
push
jno
xor
fsts
repnz
pop
or
pop
push
cmp
aas
jecxz
test
test
push
sub
adc
push
cmpsl
pushf
repnz
dec
outsb
pop
arpl
lds
and
and
popf
push
rclb
mov
xchg
and
inc
sub
xor
fs
fbld
out
pop
sbb
inc
lods
lahf
push
imul
daa
sbb
outsl
aad
sub
call
out
scas
lods
lcall
add
inc
xlat
sahf
xchg
andl
xchg
mov
ljmp
xchg
dec
pop
xchg
in
stc
mov
dec
fcompl
dec
ss
pop
dec
xor
inc
xchg
pop
imul
mov
movsl
fldenv
xor
push
mov
jae
stc
inc
adc
fstpl
mov
stos
es
xor
stc
push
daa
andb
stos
fwait
rclb
cmp
mov
aam
cli
jae
sbb
in
ficoml
dec
xchg
int3
jl
rclb
std
sahf
addr16
test
inc
test
mov
cmp
push
adc
scas
mov
insb
add
mov
lods
dec
inc
lods
pop
inc
mov
mov
and
fwait
repnz
jge
bnd
cmpsb
andl
inc
lahf
jns
mov
cmp
sub
mov
jns
add
shll
push
aaa
push
in
xlat
adc
jecxz
xchg
sub
nop
stc
scas
mov
andb
test
mov
aaa
fmul
jge
movsb
arpl
es
in
or
adc
stos
aas
or
push
jo
iret
add
adc
mov
pop
push
and
xor
xor
test
mov
dec
faddl
push
cmp
imul
fidivs
jecxz
lods
mov
xchg
add
icebp
es
out
cli
psrad
gs
repz
out
sub
mov
xor
pop
mov
xor
inc
idivb
out
mov
mov
test
fimull
add
mov
fsubl
lret
lea
cs
test
mov
ffreep
xchg
mov
mov
dec
gs
inc
push
stos
fdivrs
mov
xchg
stos
scas
mov
mov
cmc
add
lcall
mov
push
std
and
xchg
jno
notb
push
scas
pushf
popf
test
push
mov
cmpsb
sub
xchg
push
lret
mov
fs
iret
in
std
andl
shrb
cli
lods
sbb
jle
mov
rol
mov
jne
lods
jmp
gs
scas
repnz
add
and
mov
cmp
jp
cs
sbb
in
fcompl
sub
adc
test
sub
repnz
dec
ret
arpl
xor
scas
lret
add
mov
cmpsl
lods
mov
push
xor
sub
xchg
mov
std
ljmp
out
and
loope,pn
jle
pop
nop
aad
mov
adc
inc
cmp
test
aaa
pop
or
pop
lea
push
sub
scas
mov
repnz
mov
mov
mov
xor
jle
sub
jae
test
lahf
sbb
push
push
mov
iret
movl
incl
cmpb
aas
lock
popa
cli
orb
dec
pop
lret
ret
dec
movsl
lret
repz
test
jmp
dec
out
ljmp
mov
sub
add
inc
movsb
mov
movsb
std
mov
sub
push
jecxz
pushf
das
add
dec
out
and
mov
add
bnd
push
dec
lods
jecxz
or
xchg
mov
xchg
sahf
xchg
lds
jl
aas
pushf
test
push
pop
jns
pop
stos
out
scas
rcll
ror
test
sub
mov
lcall
test
ss
dec
pusha
sbb
sbb
dec
icebp
sub
jae
daa
dec
cmp
dec
dec
mov
fcom
in
clc
add
xchg
xchg
adc
jnp
sbb
jge
test
inc
mov
inc
xor
lods
imul
hlt
xor
pusha
push
xchg
push
mov
mov
mov
fld1
in
lods
mov
cltd
stos
adc
and
jb
ja
sbb
cmc
mov
cmp
rorl
cwtl
std
fcompp
test
push
sub
cmp
hlt
lahf
cs
pop
mov
cmc
cmp
les
xor
lods
push
jns
dec
pop
and
cs
push
pop
mov
out
fwait
out
mov
and
mov
push
cmc
mov
mov
or
dec
xor
dec
faddl
leave
mov
jecxz
outsb
mov
divb
in
and
fimuls
add
add
popf
ret
sub
xchg
inc
movsb
loop
sarb
push
xor
push
ja
mov
fldenv
pop
and
std
pop
inc
mov
jecxz
xor
push
xor
movsb
lahf
fmull
xchg
and
call
ficoms
xchg
jmp
jl
xchg
cmpl
push
out
pop
push
int
lods
push
xor
int
fsubrl
jmp
sbb
test
int
xchg
jecxz
lret
test
rol
sbb
dec
shr
int
inc
scas
cmp
out
xchg
jmp
mov
dec
inc
push
rorl
push
mov
adc
iret
pop
inc
mov
or
jb
lea
cmp
xor
fiadds
jae
xor
fisubl
neg
fsts
add
sub
popf
scas
das
adc
jae
cwtl
and
mov
sbbl
aaa
popf
pushf
test
xor
or
mov
lahf
jno
dec
test
repnz
fisubs
mov
mov
xchg
mov
insb
jp
cmp
xlat
xchg
adc
jno
dec
nop
mov
pop
jnp
sbb
into
test
shll
data16
mov
in
repnz
movsb
cmpsb
lret
push
sti
stos
stos
and
and
aad
xor
push
fidivl
mov
mov
paddw
loopne
fisubrs
mov
mov
subl
add
xchg
push
or
das
in
ljmp
imul
sbb
sub
xchg
shl
mov
sahf
push
push
jl
repnz
dec
mov
call
sub
and
mov
iret
and
lcall
hlt
mov
xchg
mov
push
jae
xor
leave
jg
ljmp
inc
andl
push
in
iret
dec
xor
sahf
xchg
int
es
int
popa
pop
adc
xor
into
fimuls
lock
sub
mov
sub
push
mov
fnstenv
mov
test
shrl
cld
scas
mov
fimull
fdivp
push
imul
cmp
dec
cmp
test
sbb
rorl
in
cwtl
inc
mov
xchg
pop
push
loopne
or
xchg
fstpl
mov
cmp
mov
mov
outsl
xor
outsb
sub
mov
push
enter
gs
push
mov
popf
add
addr16
ds
push
xchg
cmp
xchg
push
movsl
and
mov
sub
fstl
loopne
fwait
cmpsb
ds
daa
scas
pop
sbb
sbb
xchg
data16
xchg
decb
and
ret
es
movl
mov
lahf
or
addr16
jmp
push
or
and
icebp
pop
aas
lods
test
mov
pushf
pop
cmpsl
sbb
push
jb
mov
js
pusha
daa
cmp
jg
mov
mov
xlat
jl
ss
ret
movsl
mov
out
rcll
int
mov
pop
or
adc
addr16
mov
mov
inc
pop
mov
dec
push
cld
lock
fsubp
sbb
xlat
repnz
iret
cmpb
loopne
mov
int
std
sub
mov
fildll
fwait
sar
movsl
mov
xor
int3
das
mov
cmpsb
in
mov
adc
mov
mov
negb
dec
insl
imul
cs
mov
pop
das
out
cmp
in
mov
fyl2x
insl
out
dec
pop
and
mov
xor
ret
push
mov
mov
pop
xchg
gs
int3
sahf
cmp
test
jecxz
mov
mov
push
enter
hlt
int3
mov
out
xor
and
mov
outsb
xor
and
dec
jecxz
pop
cmp
test
mov
jl
fcmovu
dec
jge
jl
repnz
sub
xchg
push
inc
loop
fsubrs
push
sbb
into
mov
scas
or
iret
cmp
imul
iret
pop
mov
fstps
inc
xor
movsl
std
test
and
in
xchg
cli
jmp
pop
fsincos
sub
push
cltd
adc
jle
push
icebp
gs
xchg
scas
rol
push
js
inc
push
decb
aam
loopne
mov
push
sbb
jne
xchg
imul
popf
sbb
adcl
cmpsl
test
xor
fwait
scas
cltd
mov
fists
xchg
mov
gs
or
jns
sarl
enter
and
popf
or
pop
mov
or
add
adc
xchg
cmp
pop
inc
loopne
cmp
cmpsb
sarl
pop
xlat
sbb
test
xor
rcrb
in
clc
sti
mov
lods
sarl
mov
cwtl
lcall
mov
xchg
mov
mov
outsb
movl
imul
pop
mov
test
pop
das
xchg
sub
cltd
sbb
jns
dec
mov
add
cmp
lods
add
inc
insb
push
inc
repnz
cmpsb
add
frstor
enter
pushf
push
pop
mov
add
jl
sub
mov
jne
pop
lcall
test
mov
or
insb
cmp
addr16
push
arpl
lret
cmpsb
mov
jmp
ficoms
push
mov
test
mov
or
cmc
imul
mov
sub
ljmp
and
lahf
xor
das
jmp
jnp
xchg
pop
adc
sbb
mov
and
fsubrl
mov
fs
out
mov
cld
lea
movsl
mov
es
mov
addr16
ficomps
mov
dec
xchg
xor
flds
jne
mov
pop
mov
jae
pusha
repz
cmp
and
mov
psubd
mov
dec
imul
in
ret
mov
dec
sbb
jle
xchg
xor
push
nop
sahf
imull
inc
int3
cmp
ss
ljmp
ja
scas
xchg
test
mov
jbe
mov
jae
or
sbb
mov
dec
leave
test
jge
pop
ss
add
std
mov
imul
rorl
push
lea
jge
jecxz
imul
sbb
pop
cmp
outsb
push
rcrb
fisttpl
cli
jl
jle
cmp
ret
decl
sub
xchg
xor
hlt
les
inc
imul
adc
xchg
or
jnp
mov
out
popf
mov
adc
rcl
mov
and
scas
jp
orb
test
inc
pop
gs
push
stos
jecxz
fdivl
sub
mov
hlt
in
adc
iret
lcall
jecxz
lret
aaa
fisttpll
adc
shlb
test
js
stc
flds
test
fldt
xor
sub
xchg
je
sbbl
and
sbb
stc
fistpl
pop
cmp
jns
xor
mov
pop
loop
pop
gs
cli
fbld
loop
sbb
ja
fnstcw
pop
add
andl
push
hlt
insb
into
testb
lcall
lea
mov
mov
imul
rcrb
into
aad
mov
mov
mov
or
imul
jbe
cmp
and
loope
loope
dec
aas
or
sub
add
and
jecxz
repz
std
and
sub
xchg
loopne
pop
rol
xchg
lock
aas
pop
subl
push
jmp
sub
cs
int
xor
in
lods
sub
xchg
imul
xchg
mov
lahf
scas
std
ret
sbb
notl
and
mov
lods
push
lahf
fcompp
xchg
jecxz
mov
mov
cmp
lods
ret
imul
mov
lret
and
jns
test
roll
in
adc
pop
xchg
jae
ficoms
xchg
cmp
stos
popf
adc
bnd
jae
jg
das
in
stos
xchg
sbb
mov
mov
dec
pop
test
fistl
pop
stos
lods
push
je
mov
inc
sbb
jbe
pop
jecxz
std
push
sub
jae
cli
cmp
sbb
icebp
jo
push
cmpsb
inc
fisubs
scas
add
mov
int
or
subl
jge
dec
test
lds
daa
fsts
cli
movsl
stos
shrl
ret
dec
sbbl
fadds
mov
add
xchg
jl
sbb
arpl
push
and
cmp
sub
jne
test
mov
mov
jmp
jae
add
fldz
por
mov
scas
fmull
mov
push
and
stos
push
leave
in
arpl
and
es
les
out
enter
add
pushf
cmpsb
cltd
andl
call
sbb
pop
rcrb
inc
add
sub
out
clc
mov
xor
sbb
in
adc
insb
push
lcall
lds
repnz
xor
rcll
int
or
arpl
data16
ja
scas
pop
shll
loop
scas
sbb
pop
sbb
push
cld
inc
mov
xchg
sbb
mov
test
pop
dec
cmpl
xchg
repnz
and
and
and
sahf
mov
movsl
test
xchg
xor
jns
pop
xchg
push
je
stos
inc
lods
not
pop
and
adc
jmp
cmc
scas
xchg
pop
fld
add
fisubs
jecxz
leave
outsb
mov
daa
movsb
lcall
lods
or
add
xor
stc
sub
daa
mov
aam
mov
orb
sarb
int
in
pop
data16
dec
xchg
mov
xchg
mov
unpcklps
mov
fsub
pop
inc
das
pop
out
mov
cmpb
ds
adc
sbb
nop
and
mov
in
push
cmp
addr16
sub
jbe
fs
mov
push
pushf
fimull
fwait
jb
jae
mov
loop
movsl
stc
andb
scas
inc
je
scas
rorb
orb
jl
or
cmpsl
xor
mov
push
es
outsb
or
mov
cmpsl
jb
inc
scas
test
enter
mov
mov
aad
xor
sub
enter
mov
call
es
fldcw
fdivrs
out
hlt
scas
rclb
xchg
xchg
hlt
sbb
ss
test
xchg
js
stos
xchg
pop
sarl
pushf
ja
and
cld
mov
in
stos
inc
push
push
mov
mov
sbb
lods
cmp
inc
aad
pop
dec
std
pop
fstpt
inc
imulb
int3
dec
icebp
sub
inc
bound
push
inc
dec
cmc
fxch
mov
popa
push
jge
rclb
pop
scas
call
inc
inc
sub
out
mov
mov
adc
mov
cmp
fld
push
mov
push
xchg
aaa
jae
subb
cmp
sti
mov
sbb
sbb
sub
inc
rcrl
lret
int3
jmp
add
js
inc
repz
lods
test
stc
js
out
add
insl
jae
pop
insl
les
bound
mov
cmc
dec
fsubs
mov
adc
fistl
mov
sbb
pop
mov
shll
test
mov
cld
or
cld
sub
jb
xchg
add
sahf
ljmp
rcrl
xchg
std
sub
xor
xchg
icebp
xchg
mov
inc
iret
inc
mov
and
xchg
jge
or
mov
subb
adc
mov
push
es
xor
incb
mov
loopne
das
mov
dec
push
pushf
push
sti
mov
adc
stc
jge
sti
pop
xchg
sub
xchg
and
mov
adc
mov
sbb
leave
jecxz
sbbl
lahf
aas
ret
sti
jnp
lahf
or
add
mov
inc
psadbw
adc
mov
fstpt
push
je
or
fistps
inc
pop
mov
push
mov
setl
jnp
mov
xchg
js
inc
fs
and
loop
xor
call
test
mov
das
jo
sbb
cwtl
fwait
dec
es
fiadds
scas
shrl
xor
fcomi
inc
cmp
imul
addb
mov
dec
xlat
aas
mov
cmp
andl
aaa
outsl
sub
mov
cld
push
push
ss
std
sahf
jae
cmc
or
ficomps
push
mov
mov
out
loopne
mov
cmp
adc
inc
test
hlt
mov
rorb
subl
popa
pop
addr16
icebp
call
stos
mov
popa
mov
pop
push
mov
pop
mov
test
ss
inc
imul
imul
pop
push
std
xchg
xchg
adc
push
sbb
sub
mov
in
jmp
xchg
cmp
or
fiadds
xchg
ror
popf
cmpb
push
in
dec
sub
jae
pusha
mov
loope
adc
pop
cld
jl
dec
sub
sbb
sahf
sahf
test
std
and
jle
push
cld
jnp
mov
dec
addr16
mov
movsb
gs
ljmp
aam
arpl
popa
mov
xchg
nop
fcmovbe
mov
sti
sbb
fisubrs
pop
ret
jbe
fdivrs
cld
sbb
sbb
add
xchg
divb
test
adc
inc
shlb
mov
sbb
fists
sbb
mov
js
sbb
pop
out
fdivl
jecxz
xlat
ljmp
sbb
es
leave
xchg
fimuls
scas
mov
mov
test
sbb
mov
popa
std
repnz
and
jno
imul
mov
test
sbb
fdivrl
and
enter
sti
push
sbb
ljmp
iret
int3
in
ficompl
dec
xor
mov
test
jle
mov
roll
dec
and
dec
xor
mov
inc
push
jmp
fstps
dec
pushf
dec
test
sbb
dec
sbb
lcall
push
xchg
dec
mov
clc
lcall
and
hlt
mov
xchg
sbbb
imul
jmp
xlat
xor
decb
sbb
ja
sbb
sbb
popa
pop
cmp
out
xor
repz
test
add
push
popf
cmp
ret
push
xchg
fldenv
into
push
pop
mov
cmpsb
dec
ret
jp
sbb
sarl
daa
mov
mov
flds
mov
repz
sub
ja
jl
call
xor
dec
cwtl
adc
lock
mov
dec
mov
cld
cmc
push
repz
inc
shll
pop
push
add
mov
jle
xchg
lods
pushf
dec
daa
push
sbb
jo
push
pop
in
adc
ja
outsb
or
jmp
dec
pop
dec
add
outsl
pushf
push
dec
and
and
pop
push
adc
mov
cld
cmpsl
xor
andb
mov
inc
insl
ret
test
xchg
dec
roll
pusha
rolb
sbb
std
mov
inc
xchg
pop
imul
pusha
popf
fs
out
adc
jg
scas
js
movsb
xchg
shll
xchg
dec
cmp
fs
sbb
xchg
mov
add
int
mov
popf
push
imul
out
aam
cwtl
popa
and
push
stc
ja,pn
dec
mov
std
lods
push
push
sahf
xor
scas
cmp
fsts
adc
jo
push
mov
std
jecxz
pop
and
mov
jno
pop
pop
push
je
pop
enter
ret
jns
popf
push
mov
mov
jns
gs
and
mov
orl
and
jecxz
jle
mov
mov
fld
insl
push
jl
cmp
out
mov
sti
add
sub
scas
icebp
sahf
dec
xchg
fsts
into
xchg
mov
pop
xlat
push
cmp
in
mov
cmpl
lds
call
mov
cmp
cmp
shlb
mov
test
cmpsl
cli
shlb
sti
lods
rorl
js
pop
fldcw
gs
test
dec
icebp
out
icebp
lcall
mov
mov
fwait
dec
mov
cmp
sbb
sub
mov
mov
fdiv
jae
mov
mov
mov
test
sti
push
adc
cmpsb
jnp
out
roll
lods
cmc
jo
inc
das
iret
pop
dec
shlb
outsb
dec
push
mov
push
mov
int
cmp
or
call
jge
mov
cli
mov
fxch
push
cmp
mov
fmuls
jae
cltd
mov
xchg
mov
mov
pop
mov
aaa
clc
ret
and
arpl
jp
pop
jge
je
gs
dec
mov
call
jecxz
mov
js
mov
scas
dec
test
out
sub
arpl
repz
test
fld
cmp
repnz
and
push
xor
sbb
jae
in
movsb
xlat
rcrb
mov
fwait
xchg
inc
addr16
lds
daa
insl
leave
push
push
mov
scas
jo
adc
mov
imul
ret
sbb
and
popa
mov
pop
jle
cmc
out
and
dec
popf
sbb
lds
fadds
cmpsl
adc
ret
testb
std
xchg
adc
add
pusha
cmp
mov
mov
in
dec
hlt
rcrl
xor
mov
add
and
pusha
xor
push
cmpsb
fisttpll
and
xlat
sbb
fldcw
mov
mov
aam
js
or
jmp
xchg
mov
popa
nop
stos
ds
sbb
jle
and
test
add
push
movsl
fidivrs
mov
sub
xchg
dec
test
push
jns
jbe
imul
sbb
jns
into
jge
dec
pop
outsl
call
mov
ljmp
xchg
add
scas
lret
loope
cld
cmp
mov
cmp
hlt
pop
outsb
mov
push
stos
and
xor
mov
int
stos
sbb
adc
push
repnz
nop
dec
mov
mov
xor
mov
ljmp
out
outsl
add
in
add
cld
and
rclb
and
sarl
inc
pop
test
fldenv
jnp
and
push
mov
inc
pop
push
push
mov
fldcw
aaa
push
imul
mov
xchg
xchg
stc
and
add
outsb
mov
xchg
pop
fs
int
sbb
int3
or
pop
int
flds
into
mov
add
mov
cmpsb
stos
mov
sbb
or
cs
fnstsw
roll
loop
inc
mov
fs
mov
sbb
jl
xchg
scas
mov
mov
push
scas
test
pop
out
jns
pop
sbb
push
xchg
cltd
lods
fcmovu
jle
sbb
fsubl
kmovw
cmp
test
jmp
jp
mov
test
das
sub
push
mov
adc
cmp
adc
in
stos
and
push
lds
xor
dec
mov
adc
ror
daa
ds
ret
or
addb
mov
mov
dec
push
add
add
fcompp
js
pop
and
jg
mulb
fnstcw
push
movsb
imul
sub
cmp
lret
aas
cmp
cmp
pop
sub
dec
sbb
stos
leave
cld
jnp
mov
sub
pop
jns
xor
push
int
rcrl
dec
xchg
jbe
nop
call
movsl
ret
xchg
add
lcall
cmp
out
mov
add
je
mov
mov
mov
jns
mov
addl
icebp
lods
mov
flds
push
sbb
scas
cmp
cltd
hlt
lcall
repz
stos
or
ss
lds
pop
jns
add
mov
jg
xchg
cmpsb
xchg
adc
push
in
call
push
addr16
mov
enter
jle
lods
mov
cmp
mov
das
mov
loope
or
or
es
mov
mov
sbb
mul
loope
push
xor
sub
xchg
fnstcw
ffree
mov
rcr
sbb
inc
push
add
mov
push
pop
shl
xchg
pop
fstp
ja
dec
jmp
pop
sub
xchg
dec
jmp
add
mov
daa
inc
outsb
mov
push
dec
inc
inc
cmpsb
fwait
call
jns
addr16
xor
icebp
scas
and
cmpsl
pop
mov
in
daa
xlat
in
cmp
fdivr
fwait
mov
jmp
pop
cmpl
int
push
gs
test
fldcw
notl
pop
int
data16
insb
clc
lods
adc
jo
pop
xor
scas
lea
mov
in
icebp
fstps
pop
sbb
test
sahf
xchg
pop
cmp
popf
movsb
out
sub
movsl
lods
mov
cs
mov
mov
clc
xchg
das
xchg
loop
mov
mov
ja
pop
xchg
outsb
std
add
aad
rorl
adc
pop
nop
mov
cmp
gs
xor
mov
push
fwait
in
or
xchg
or
pusha
jp
jo
sub
test
test
in
pop
and
push
movsb
jno
xor
ja
lret
mov
add
std
or
sbb
lods
xchg
movsb
ss
sub
mov
mov
jae
sub
mov
sbb
jecxz
xchg
xor
add
mov
jmp
fsubrl
add
mov
jmp
mov
mov
mov
inc
inc
mov
out
scas
xchg
sbb
cmp
mov
jp
dec
pushf
pop
dec
pop
jg
loop
fwait
mov
lret
pushf
mov
scas
add
xchg
push
ds
gs
mov
repnz
es
lds
call
jp
dec
std
mov
fdivr
lock
cmp
cmp
jnp
in
in
or
out
push
pop
out
icebp
adc
ds
sub
stc
loopne
fs
fisubl
xor
cmp
mov
jmp
je
ljmp
jne
mov
jo
push
cmp
dec
mov
mov
inc
and
sbb
push
jo
clc
aad
cmp
lahf
repz
out
in
sub
xchg
push
sbb
test
pop
addr16
fucom
xor
clc
sti
mov
popf
lcall
dec
es
cwtl
jb
sub
push
addr16
xor
addr16
xor
or
lahf
std
or
decb
jecxz
pop
pop
add
xchg
outsb
jnp
adc
mov
sub
cmpl
sti
mov
push
inc
ja
xor
mov
les
cmp
nop
scas
mov
out
ds
jo
imul
jae
jle
cmp
test
pop
sub
jmp
and
clc
ficoms
jnp
dec
cmpsl
bound
inc
push
push
mov
lahf
es
jne
sbb
mov
jnp
dec
lods
inc
fiaddl
sub
mov
iret
ds
lcall
addr16
cmp
push
xchg
mov
or
sub
out
fcoms
mov
pop
sub
mov
aam
jge
adc
sahf
xchg
shl
shll
lret
adc
inc
pop
int3
scas
mov
mov
mov
fiadds
pop
cmp
test
imulb
scas
xchg
sbb
jp
out
mov
cmpsb
sti
dec
lods
lret
jo
stos
vprotq
mov
cmp
je
add
cmp
mov
in
faddp
sbb
shll
add
sub
movsb
xor
stos
mov
movb
xor
xchg
int3
iret
xor
or
testl
push
sub
fcompp
je
leave
ss
enter
and
and
cmp
cli
hlt
dec
int3
and
insl
jne
push
mov
push
adc
adc
stos
mov
mov
movsb
lods
fisttpl
pop
pop
lock
fcompl
jbe
mov
addr16
and
repz
mov
ds
sahf
in
pop
scas
into
xor
pop
movsb
jl
mov
mov
dec
xor
add
xlat
push
dec
inc
xchg
mov
stc
push
sahf
jl
jbe
repz
out
in
xor
bound
adc
ljmp
std
shll
fucomp
cld
cli
iret
in
mov
mov
cmp
int
cli
pop
sub
xchg
addr16
xchg
push
lods
cmp
dec
andb
test
loope
push
and
mov
mov
mov
ljmp
std
push
jne
jb
mov
int3
movsl
mov
jae
adc
sti
cmpsl
ret
mov
push
outsl
sub
aam
xchg
sti
pushf
pop
and
sub
jle
arpl
sub
imul
add
inc
int
xorb
int3
aad
xor
or
rorl
cmp
and
sub
sbb
std
adc
mov
dec
push
shll
adc
xor
mov
mov
test
jns
ljmp
pop
push
mov
sbb
push
lods
sbb
adc
hlt
fsubrl
mov
jmp
ljmp
mov
sub
jns
out
push
lahf
cbtw
fs
subl
sub
cmp
push
xchg
sbb
add
sti
sub
les
mov
sahf
fimuls
cmpsl
lret
or
test
cwtl
cs
in
lods
lock
cmpl
call
sbb
out
push
xchg
dec
add
and
faddl
test
outsb
pop
pop
mov
push
loopne
or
movsl
imul
cmc
bound
mov
xchg
jno
pusha
ret
push
dec
testl
es
cmpsl
jge
adc
adc
lods
mov
je
imul
mov
or
rcl
mov
ja
sahf
mov
movsb
push
inc
ficoms
test
jle
add
fwait
or
cmp
lds
xchg
sbbb
mov
cmpsb
test
jle
sub
int
jecxz
dec
iret
jns
push
out
jne
ss
push
xor
std
and
les
addr16
imul
mov
sti
fsubrl
mov
movsb
sbb
add
sahf
or
gs
ds
sbbb
adc
inc
test
in
in
jno
dec
push
cmpsl
repz
loopne
push
mov
ds
out
xchg
mov
xor
mov
jbe
stc
and
aam
xchg
or
inc
xor
into
movsb
jle
push
call
dec
sub
pop
cmc
xor
bswap
add
push
pop
pop
mov
jge
dec
and
jge
out
divb
adc
mov
sbb
push
orb
cmp
lock
ds
mov
cmp
mov
push
push
adc
jp
pop
push
fnstenv
fs
inc
mov
mov
cltd
aaa
jae
je
daa
popa
jle
test
aad
dec
out
outsb
mov
cmp
cld
inc
push
das
mov
cmp
pcmpgtw
mov
mov
cli
mov
sub
or
inc
rolb
jae
and
dec
test
mov
enter
xlat
mov
das
in
sbb
ja
mov
mov
lods
flds
lahf
push
mov
fstpl
outsl
aad
shll
loop
sbb
push
int
xchg
dec
pop
cs
mov
ja
mov
jge
mov
cmp
xchg
dec
adc
jae
xchg
cmpsb
outsb
xchg
jecxz
push
js
xchg
sbb
fisubrs
xorl
std
mov
repz
inc
lock
fdivrl
je
dec
sub
lahf
mov
and
xlat
and
mov
sub
into
sbb
scas
int
jnp
lods
int
rolb
xlat
imul
pop
in
mov
inc
cmpsb
scas
daa
cmp
xchg
das
fistpl
shrl
stc
mov
out
clc
sbb
sti
cmpsb
fidivrs
mov
cmp
jno
addb
pop
fistpll
hlt
cmp
outsl
jle
mov
or
out
dec
mov
inc
add
mov
mov
mov
stos
mov
add
push
repz
add
sbbl
pushf
outsb
mov
or
cmpsl
lods
movsb
and
pop
sbb
mov
push
and
mov
data16
out
adc
arpl
adc
sbb
popa
jle
daa
movb
inc
es
cwtl
mov
dec
dec
push
popf
popa
sbb
fsubp
xor
xor
mov
cld
std
lds
pop
loop
fs
push
inc
scas
inc
mov
sub
aaa
repnz
out
iret
and
sbb
pop
xchg
lahf
rclb
andl
std
inc
sar
pop
roll
mov
test
dec
hlt
adc
cmc
ficompl
popa
xor
out
pop
aam
lods
push
test
sbb
and
stos
fcmove
sbbl
aad
pop
adc
mov
jnp
imul
mov
sbb
cmp
push
icebp
adc
add
xor
cld
mov
popf
mov
jle
test
mov
nop
xchg
mov
mov
lds
jne
pop
out
lds
jge
push
shrb
lods
xchg
sbb
dec
adc
adcl
mov
cwtl
subb
scas
mov
xor
sbb
fscale
jnp
lret
out
int3
pop
scas
ret
addr16
add
jno
fstps
add
and
mov
dec
dec
sub
cli
jnp
test
add
shrb
dec
fimuls
cmp
pop
sbb
adc
fdivs
mov
adc
popf
out
repnz
mov
jns
in
adc
adc
mov
ret
push
fcoml
mov
rcrb
mov
sub
arpl
add
dec
add
sbb
cli
scas
andb
aad
gs
xor
pop
iret
push
adc
js
inc
das
xchg
imul
dec
orl
movsb
inc
mov
andb
dec
nop
jge
shl
std
xchg
sbb
pop
adc
fisubrs
pop
and
clc
jg
xchg
adc
daa
sahf
mov
add
push
jmp
fsts
negb
dec
hlt
negb
mov
lahf
subl
jmp
mov
repz
lods
out
es
fs
imul
pop
dec
pop
mov
loope
jae
dec
outsb
push
cmp
push
pop
push
jbe
das
pop
scas
xor
push
movsl
sbb
ljmp
push
movsl
mov
repnz
jne
push
jne
mov
mov
shlb
sub
or
inc
loopne
mov
fsubrs
adc
scas
test
les
test
dec
insl
cmp
xor
fstpt
ds
in
mov
fists
adc
pop
out
fwait
js
leave
dec
mov
dec
xchg
jae
push
xchg
jp
and
sbb
xchg
shlb
add
iret
mov
fisubrs
scas
mov
mov
sbb
fstps
or
jecxz
ret
mov
lret
and
mov
das
pop
inc
and
pop
or
jb
sahf
mov
mov
mov
mov
outsb
and
into
jno
or
dec
mov
and
mov
mov
je
dec
cmpb
mov
xchg
cmp
xchg
push
fld1
jns
mov
or
adc
ret
mov
add
jmp
pop
iret
adc
stos
mov
sbb
mov
cld
and
sub
mov
mov
jno
pop
fdivrp
testl
inc
dec
movsb
lret
test
pop
add
cltd
out
out
jnp
pop
mov
cmp
test
jns
push
lahf
jb
mov
nop
pop
je
mov
lcall
loopne
outsb
adc
jl
jecxz
mov
ljmp
lret
pushf
pop
cmp
mov
mov
push
lods
inc
sbb
incl
aad
mov
dec
stos
push
dec
xchg
mov
jl
test
mov
jno
lock
pop
adc
jbe
push
fprem1
add
push
loop
mov
fwait
xchg
and
inc
sbb
fs
or
dec
add
pop
fcmovnu
pushf
sbb
insl
dec
cmp
mov
addr16
xchg
push
mov
pop
jge
mov
dec
mov
inc
loopne
sbb
fimuls
mul
shlb
cwtl
outsb
pop
aaa
sbb
xor
mov
std
push
imulb
dec
pushf
cltd
in
jmp
fildll
lock
sub
jns
out
xchg
xchg
cmp
mov
out
and
mov
xor
stos
stos
xor
mov
test
pop
pop
rolb
out
data16
insb
mov
mov
roll
adc
fldenv
loope
pop
mov
jl
sbb
cmp
push
inc
jmp
lods
push
and
loope
inc
sbb
mov
popa
notb
scas
in
popa
sbb
dec
push
pop
push
enter
lea
out
xchg
out
fadds
jp
aas
clc
pop
lock
test
test
test
adc
iret
xchg
cmpl
xchg
jno
imul
fnstcw
mov
jl
push
cmp
test
fcomi
sbb
popa
into
sbb
into
aam
lods
add
pop
adc
jge
js
testl
jcxz
pushf
lds
jo
movsb
cmp
dec
sbb
and
es
or
sub
cwtl
sbb
and
mov
dec
xchg
aaa
mov
loope
rcrb
adc
and
dec
cld
sbb
mov
cld
jns
mov
or
in
pop
in
mov
outsb
mov
aas
xchg
mov
hlt
in
xor
inc
sub
adc
ficomps
cmp
fisttpll
push
out
test
popa
dec
mov
sub
mov
sar
std
and
inc
repz
aam
sarl
movsb
xor
xchg
mov
inc
fidivs
jg
xchg
insb
call
mov
jbe
or
mov
fnstenv
xor
and
decb
movsb
and
mov
jg
cwtl
adc
and
push
sub
test
mov
mov
mov
mov
mov
mov
movsl
stc
inc
loopne
pop
jl
dec
jle
add
stos
sti
xchg
ss
and
fs
push
repnz
cmp
addr16
add
fwait
ret
mov
je
out
sub
lock
inc
xchg
lea
cmp
rorl
sbb
mov
mov
rep
lods
dec
or
in
in
out
xor
add
jno
je
fistpll
icebp
das
sub
cmpsl
or
lahf
fldpi
xchg
lahf
adc
mull
adc
mov
xor
into
mov
jbe
and
scas
je
test
pop
push
test
cmp
fimull
mov
into
pusha
out
cmp
cmpsl
mov
repnz
mov
ret
ja
faddl
sub
xchg
test
stos
in
and
add
sbb
sub
and
jae
mov
inc
test
rolb
jp
cmp
in
sub
test
and
movsl
cmpsb
fcompp
dec
icebp
fwait
aad
cmp
adc
out
xor
push
popa
and
sub
shll
pop
adc
mov
das
das
xchg
push
std
repz
test
mov
push
dec
cmpsb
pop
mov
cmp
xor
inc
mov
lcall
arpl
jns
push
mov
imul
mov
fnstenv
dec
cmpsl
imul
dec
lds
sbb
scas
pop
repnz
aaa
lock
adc
icebp
xchg
out
sbb
xchg
lock
cmp
cli
inc
pop
cmp
pop
or
or
mov
test
add
push
pop
push
pop
push
jge
jns
out
test
push
jns
and
mov
or
mov
add
ds
and
shlb
mov
cltd
hlt
aad
mov
mov
sub
test
inc
or
bound
cld
scas
mov
addl
push
xchg
test
adc
addb
jbe
pop
xor
mov
gs
jmp
and
mov
popa
xlat
add
sbbl
aas
lods
outsb
sti
mov
iret
fisubs
fadd
dec
inc
mov
incl
lahf
insl
cld
les
repnz
in
scas
mov
xchg
lds
mov
mov
test
scas
xor
push
sub
push
and
movsb
mov
fisubrs
sub
clc
mov
sub
movsb
daa
dec
in
dec
pushf
xor
pop
cmpsl
fldcw
mov
mov
leave
jmp
jge
mov
sub
dec
inc
mov
repz
mov
add
dec
and
xor
pop
les
cli
adc
sub
jp
lods
dec
mov
xor
aam
inc
jnp
push
sti
stos
scas
stos
and
fwait
mov
es
sub
gs
int3
xchg
xchg
loope
fsubp
js
loop
add
xchg
mov
test
sub
inc
test
pop
jle
sub
inc
dec
pop
mov
lcall
lret
lds
mov
xchg
cmp
dec
sbb
movsb
inc
scas
cmpl
mov
mov
add
int
push
cwtl
mov
and
jmp
fadd
lea
clc
add
stos
scas
mov
fsubrp
inc
rol
call
mov
cmp
or
mov
push
std
imul
xor
inc
ret
ds
outsl
add
std
fwait
dec
jp
inc
and
add
test
push
es
inc
movsl
int
les
xor
push
and
sbb
ljmp
jo
test
lret
jno
hlt
xor
testl
mov
ss
sub
lret
and
add
jecxz
push
iret
and
cmp
lahf
push
mov
and
cmp
repnz
pop
push
mov
lods
cltd
scas
scas
push
or
dec
sub
inc
cld
test
mov
mov
and
xor
xchg
aam
sarb
cmpsl
int
inc
lret
mov
push
adc
or
ret
mov
flds
test
jl
mov
lock
mov
xlat
jno
jnp
in
mov
mov
push
cld
and
mov
ja
cmpl
cltd
aaa
lock
in
sahf
jge
movsb
jg
cmp
aaa
pop
mov
add
push
scas
pop
lcall
xor
in
or
push
pop
fnsave
lahf
inc
in
inc
mov
ret
es
test
xor
sbb
jge
cmp
adc
pop
gs
adc
sbb
push
iret
cltd
pop
push
jne
jp
jnp
test
je
fnclex
pop
cmp
flds
repz
lock
jmp
mov
std
mov
dec
int3
fs
mov
daa
mov
fiadds
lods
sbbb
sbb
or
xchg
loop
sub
scas
adc
scas
popf
add
jnp
inc
aad
das
jmp
out
push
sub
mov
jb
push
test
sbb
sahf
ss
test
imul
int3
mov
cmpsb
pop
test
scas
or
iret
inc
push
flds
lcall
xchg
sahf
inc
lahf
ss
push
inc
lcall
adc
mov
inc
out
sbb
repnz
inc
aam
scas
sbb
jo
sbb
test
movsb
fsts
pop
test
and
repz
pop
mov
mov
flds
sbb
lods
jle
and
lock
int3
lods
jb
das
jge
and
test
enter
lods
loop
icebp
call
fsts
fcoml
jbe
xchg
xor
aaa
dec
mov
xchg
inc
repz
int
popf
pop
pop
xchg
pop
adc
push
insl
jae
jno
daa
pop
out
bound
dec
mov
out
scas
xorl
or
lret
mov
add
iret
sbb
pop
test
mov
push
and
and
jb
mov
mov
movsl
ss
push
cli
xor
int3
mov
mov
loopne
sbb
scas
test
mov
sbb
pushf
xor
inc
pushf
dec
mov
cmp
xor
cmpsl
lock
bound
shlw
mov
cmc
fdivp
jle
adc
mov
icebp
xor
stos
lds
adc
pop
lods
in
ficoms
mov
je
gs
sub
mov
fdivrs
aam
aam
jge
je
cmp
or
sbb
jecxz
sti
jecxz
loop
xor
add
repnz
sub
out
lret
cmpsb
mov
pop
fiadds
cmpsl
pop
pop
pusha
mov
and
pop
dec
dec
mov
aas
jns
dec
mov
sub
cli
in
mov
xchg
push
mov
adc
xor
cmc
add
lcall
scas
lret
sbb
lret
mov
aad
mov
adc
loopne
mov
out
jle
hlt
popf
ror
outsb
ret
mov
aad
repz
movsb
jp
mov
fldcw
lods
jne
ljmp
cmpsl
scas
mov
movsl
cwtl
std
lahf
enter
aam
test
xor
ret
xchg
jbe
fldcw
inc
stc
lock
dec
test
mov
test
lahf
bound
movsb
cmp
mov
and
jg
push
or
out
cmpb
cmp
xlat
mov
sbb
mov
js
loopne
imul
int
add
lods
sti
inc
inc
cmp
jnp
sub
int3
adc
std
stos
add
mov
shll
pusha
lods
inc
inc
js
dec
fs
and
fwait
and
or
lcall
sahf
outsb
arpl
stc
inc
incb
and
insb
ret
andl
sbb
or
fucomip
mov
push
sarb
test
lret
dec
mov
and
sub
movsb
dec
in
xchg
in
int3
mov
lods
cmp
movsl
add
dec
cmp
addr16
push
movsl
mov
je
fidivs
mov
cmp
cmp
or
cmp
into
mov
stos
xor
lods
and
inc
pop
xchg
and
pop
sti
ljmp
inc
int3
fidivrl
std
std
repnz
das
push
mov
dec
mov
mov
or
jns
xor
xor
sbb
pop
xor
add
je
xor
in
pop
sbb
jae
test
jge
sbbl
jg
cld
xor
popf
fisubrl
ffreep
mov
repz
shrb
out
and
lcall
push
push
xor
aaa
xor
mov
flds
add
mov
cmpsb
lcall
in
jmp
ret
push
nop
pusha
mov
fdiv
sbb
xchg
test
call
aad
mov
ds
xchg
cli
lret
fsubp
movsl
cld
repnz
inc
cmp
cmp
push
jp
jle
push
lds
inc
cmp
fimull
dec
aas
pop
pop
jle
aam
inc
sahf
out
pop
movsb
pop
xchg
dec
sahf
sub
mov
xchg
cld
and
fnstcw
adc
icebp
lahf
bndldx
fiadds
leave
hlt
int
mov
das
adc
js
mov
jg
addr16
aaa
mov
sbb
sbb
shl
inc
xor
stos
add
mull
pop
mov
mov
jmp
mov
cmp
test
dec
mov
movsl
icebp
dec
or
push
adc
jle
addr16
in
pop
pop
mov
push
adc
push
ret
call
jmp
xchg
cli
loop
xchg
xchg
std
sbb
add
cmpsb
aad
jno
cmp
scas
in
lods
loopne
xor
inc
sarb
cmp
jg
loope
neg
in
std
mov
inc
out
mov
pop
popa
sbb
xchg
mov
test
inc
hlt
sti
sub
insb
jne
mov
xor
cli
into
and
jl
movsb
pop
in
fs
std
gs
arpl
or
incb
mov
sbb
dec
aam
call
lcall
sbb
imull
jmp
push
scas
fistps
mov
popa
roll
out
icebp
cli
mov
pop
mov
xor
mov
cmp
inc
add
xor
in
insl
hlt
push
fldcw
mov
jo
call
sti
mov
xchg
scas
repz
dec
pop
fisubrs
push
pop
push
push
lcall
roll
mov
stos
push
xor
jge
or
loopne
xchg
fistl
ret
fsts
out
mov
stc
mov
lcall
cmp
cmpsl
imul
sbb
mov
test
jecxz
test
das
mov
rolb
cmp
push
in
adc
inc
loop
xchg
mov
aaa
xchg
pop
jo
out
movsl
mov
and
cmpsl
xchg
mov
add
sbb
inc
js
sbb
xor
das
testb
xchg
popf
pop
add
sbb
jl
lds
ss
dec
push
movsb
repnz
add
scas
fldenv
aas
inc
leave
xchg
ja
xchg
fst
jl
jl
test
xchg
pop
inc
sub
orl
cmpb
hlt
and
ds
sbb
xor
adc
repz
jle
sbb
aad
add
mov
xor
mov
addr16
xor
xchg
xchg
enter
add
mov
inc
imul
adc
fisubrs
imul
sub
incb
dec
push
test
test
test
and
cmpsb
push
aaa
test
mov
addl
hlt
das
adc
std
stc
add
cli
lods
jbe
test
dec
push
and
add
fsubrl
test
dec
pushf
sub
and
lock
pop
addr16
es
cmp
pop
mov
and
or
lds
cmpsb
pop
int3
cmpsb
test
popa
cli
stos
in
xchg
or
adc
ja
dec
in
mov
mov
outsl
aam
test
jmp
mov
mov
xor
and
jge
xor
call
pop
and
cmp
push
lahf
test
out
jbe
mov
nop
mov
mov
daa
aad
xor
xchg
sbb
mov
addr16
cmp
test
mov
repnz
sbb
aam
into
mov
cs
inc
out
cs
jns
and
neg
scas
and
mov
mov
xor
adc
lods
sbb
jno
or
jns
xor
pop
pop
xor
jmp
in
and
dec
push
fidivrl
pushf
dec
test
mov
mov
lahf
mov
lods
xor
int3
cli
add
xor
inc
ds
sbb
movsl
dec
testb
je
getsec
addr16
loop
cmp
test
int3
xor
jae
or
repnz
mov
movsb
outsl
adc
imul
mov
inc
and
sar
dec
mov
xorb
addr16
push
xchg
push
out
lahf
push
lods
cmp
mov
scas
fdivrl
in
xor
cmpsl
in
xchg
lret
xchg
mov
incl
ds
or
insl
movsb
lods
je
scas
imul
in
mov
jp
cmp
movsb
in
mov
mov
inc
lret
sbb
int3
aas
fldenv
sbb
push
scas
js
repnz
fadd
mov
scas
mov
sub
jl
jns
mov
add
dec
inc
xchg
aaa
mov
ret
mov
scas
mov
or
jnp
lds
xchg
out
inc
cmpsb
in
pushf
jno
insl
add
lock
pop
rep
mov
lds
cs
sti
mov
in
je
ficoml
popa
add
sub
sbb
aaa
sbb
xchg
fsubp
icebp
ljmp
scas
cwtl
flds
mov
jp
push
not
aam
xlat
xchg
xor
mov
push
lods
mov
gs
cmc
fs
and
mov
loope
pop
into
ja
sbb
jb
mov
jecxz
loopne
fwait
out
imul
testl
inc
mov
std
das
push
push
movsb
pop
push
inc
addr16
or
bound
loope
sahf
in
data16
mov
push
jo
jbe
sbb
push
pusha
push
adc
aam
dec
iret
dec
movsl
movsl
push
divl
mov
cmp
push
sbb
addr16
cmc
adc
cmc
in
fstps
or
mov
ja
je
es
push
sbb
inc
or
mov
adc
cs
cmp
clc
aad
arpl
popf
xor
cmpsl
sub
cmpsb
inc
pop
gs
repz
dec
cmp
mov
adc
inc
out
faddp
in
adc
push
sahf
mov
sbb
add
imul
cwtl
cmp
pop
push
sbbb
add
insb
jbe
sti
and
imul
jmp
ljmp
xchg
test
mov
in
lcall
sti
movsl
fs
fldcw
rorl
loopne
hlt
and
cltd
xchg
in
xor
in
xchg
mov
adc
imul
push
dec
fwait
mov
adcb
or
fistpll
lahf
mov
or
es
sbb
fldt
rclb
fstpt
sahf
inc
ss
rclb
fs
pop
std
popf
stos
into
sub
popa
mov
stos
fsts
movsl
shlb
jmp
or
and
sub
daa
cmp
xchg
out
loopne
pushf
push
mov
imul
dec
mov
popf
xchg
sub
jns
dec
scas
test
jle
mov
movsb
cmpsb
test
fsts
mov
dec
jb
dec
mov
fisttpll
mov
filds
test
jp
enter
adcl
shlb
push
stc
and
jp
imul
mov
mov
bound
out
pop
test
inc
rorl
lahf
lret
mov
xchg
adc
xchg
cmp
fisttps
mov
out
scas
mov
or
push
jle
cmp
jecxz
dec
cmp
aaa
nop
inc
cmp
cmp
mov
mov
push
jb
push
cli
mov
jne
filds
xchg
shll
stc
inc
mov
into
es
jbe
loopne
cmp
pop
lds
popf
lcall
int
xchg
int
popf
mov
mov
dec
fimull
mov
push
sub
xchg
gs
xor
mov
std
into
adc
movsl
cli
jge
fucomp
xchg
fstpl
xor
xchg
xchg
and
push
test
stos
out
test
inc
mov
dec
les
mov
in
push
cmpsl
sbbl
bound
stos
rcrb
mov
lds
mov
lods
notb
add
push
gs
fisubs
ja
sbb
loop
out
push
and
pop
mov
xor
test
mov
test
xchg
lahf
test
rcll
push
icebp
dec
enter
push
outsb
movsb
inc
sbb
mov
icebp
xorb
pop
jecxz
mov
test
std
xchg
sar
inc
aad
sbb
shl
jg
dec
or
scas
jo
es
mov
add
roll
ss
scas
repz
or
cmpsb
mov
les
sbb
jb
ret
leave
mov
inc
pop
popf
pusha
popf
fstl
sub
mov
jne
aad
fwait
and
stc
std
fldcw
push
aad
mov
cmp
pop
push
sub
xchg
xor
cwtl
sti
mov
out
roll
cmp
pop
mov
fidivrl
shlb
sti
xchg
popa
dec
xorb
jmp
int
cwtl
jae
jl
cmc
repnz
cmpsl
dec
mov
clc
fimuls
push
gs
lea
stos
push
je
movsl
xchg
popa
mov
mov
sbb
push
sbb
xor
sbb
aam
xor
ljmp
lods
test
dec
add
es
dec
repz
sbb
clc
cs
xor
pusha
arpl
mov
fcomp
stos
cs
iret
scas
xor
jmp
popf
lret
sbb
push
incb
xor
mov
int
data16
bound
jae
cmpsb
and
add
adc
inc
and
inc
sbb
cmp
jmp
inc
jecxz
jne
insl
push
std
mov
movsb
movsb
fsts
stos
fiadds
std
sti
xlat
mov
pop
sub
inc
hlt
mov
cmp
repnz
mov
pop
test
pop
mov
scas
les
or
cmp
lcall
pushf
add
test
js
test
and
test
mov
pop
in
and
ds
hlt
mov
mov
cli
sbb
mov
in
jnp
sahf
lcall
jbe
rorb
popa
mov
xor
push
test
jp
ret
flds
dec
daa
test
faddp
cmp
int
mov
das
rcr
int
mov
jae
mov
push
les
shr
mov
test
fwait
lahf
stos
sbb
jle
enter
scas
sahf
push
rcrb
xor
jb
aad
popa
or
xchg
lock
sbb
inc
addr16
outsb
adc
mov
cmp
fidivrl
sub
movsl
jno
jge
xchg
xchg
les
jne
fsubrs
fisubrl
mov
in
mov
fnsave
or
arpl
stos
push
inc
push
mov
fsubl
sub
xchg
enter
loop
mov
std
xchg
push
mov
xchg
push
in
sbb
jl
js
or
sbb
das
repz
repnz
movsl
xchg
ljmp
and
jle
mov
cmc
enter
pop
ficompl
mov
dec
dec
test
fwait
mov
gs
mov
xlat
pop
loopne
dec
stos
int3
push
jnp
out
xor
cld
fwait
lods
outsb
xchg
pop
fimuls
lret
std
sbb
sub
push
int
mov
mov
sbb
imul
cmpl
mov
xlat
xchg
push
cmpsb
push
and
outsl
lret
and
shll
hlt
inc
in
movsl
pop
cmpsb
aad
aam
ficompl
mov
mov
mov
mov
mov
push
inc
sub
cmp
fildl
xchg
xor
sub
aad
cli
les
dec
icebp
mov
cmp
gs
cmp
jo
xchg
ljmp
enter
dec
sub
loopne
lods
movsb
sbb
pop
xchg
out
xor
std
lahf
mov
dec
jle
ret
mov
hlt
das
out
pushf
xchg
pop
ret
mov
adc
dec
sub
inc
insb
sti
jb
roll
out
mov
es
es
test
jbe
cmpsl
flds
ret
in
cmp
inc
jns
mov
mov
mov
cwtl
int3
mov
loopne
xor
jnp
in
inc
es
pop
nop
int3
mov
or
inc
jp
int
int3
push
in
lcall
mov
dec
mov
ficoms
jbe
push
jns
cmp
out
iret
ja
adc
inc
push
ficompl
sub
fidivl
ja
repnz
sbb
jno
mov
mov
jmp
insb
inc
mov
arpl
cli
roll
jl
mov
dec
mov
inc
sbb
loope
jb
push
push
mov
lea
cli
xor
pop
and
mov
fldenv
jmp
cli
cmpsb
iret
das
jecxz
inc
push
add
sbb
outsl
mov
sahf
movsl
cmp
mov
paddd
dec
clc
hlt
in
in
xchg
push
out
inc
hlt
xor
add
sub
lret
ss
mov
inc
add
orb
lods
mov
xchg
pusha
sbb
cltd
mov
pusha
ljmp
int
lret
in
sbb
xchg
test
lea
test
xchg
xchg
xchg
push
cmp
loop
xchg
mov
dec
sbb
push
adc
gs
pop
pop
or
xor
dec
jae
pop
sub
xchg
pop
cmp
ret
lods
shlb
mov
xor
mov
add
int3
mov
pop
ret
data16
jbe
icebp
andl
test
mov
sbb
xor
fidivrs
nop
movsb
into
out
or
or
mov
loop
clc
push
cmpsb
ficomps
flds
arpl
mov
xor
jle
test
pop
test
orb
push
rclb
mov
jns
dec
and
in
fistpl
fdivrl
iret
lcall
mov
pusha
shrl
addr16
cli
scas
add
repnz
jmp
pop
ror
mov
xchg
pop
xor
das
inc
cli
repz
push
das
loop
add
xchg
mov
movsb
adcl
push
xchg
jge
jne
gs
xchg
dec
outsl
sub
sub
mov
in
fnstsw
push
sub
aam
jae
dec
movsl
cs
pop
mov
sbb
jecxz
insb
test
and
pop
xchg
cmp
test
push
xorb
dec
inc
push
cltd
jb
and
inc
xchg
sub
adc
icebp
push
mov
fldt
lret
push
cmpsl
jne
jb
inc
cmp
mov
sbb
lds
or
add
push
test
test
dec
bound
sbb
xchg
dec
sti
ljmp
cltd
pop
push
mov
cmp
ret
dec
mov
fwait
mov
xchg
sub
mov
scas
lds
sbb
pop
xor
into
jmp
or
insl
lret
clc
inc
mov
testl
in
es
outsl
sub
popf
sbb
jo
adc
jbe
ret
mov
lock
in
jo
add
inc
mov
mov
or
mov
adc
fbld
ret
les
jb
sub
clc
sbbl
xor
sahf
add
and
movsb
jg
fldcw
ret
sbb
std
imul
push
ret
pop
sbb
lcall
bound
scas
arpl
mov
mov
cltd
mov
pop
add
sub
jnp
gs
sub
jb
add
int3
mov
orl
popf
pop
test
xor
cmp
push
fisubrs
push
shr
mov
or
int
adc
out
push
dec
sub
or
or
dec
add
inc
outsl
jl
push
pop
push
stc
ljmp
push
stc
idivb
add
gs
xor
sti
xchg
movsb
pop
xor
dec
inc
test
sbbl
std
cmp
mov
dec
out
gs
popf
test
in
dec
xlat
jns
int
sbb
test
dec
lahf
add
hlt
lods
cmpsl
mov
mov
xchg
xchg
jo
movsl
scas
mov
mov
mov
mov
in
xor
rcrb
mov
mov
cmpsb
cmp
int3
movsl
or
or
fxch
movsb
mov
mov
popf
jne
push
pop
scas
stc
out
cs
push
push
adc
sbb
cmp
out
fidivs
adc
imul
fcmove
out
movsb
loop
inc
popf
ja
cmp
push
sbb
arpl
sarb
inc
cmpsb
lcall
xchg
jl
data16
pop
iret
pop
lret
cmp
daa
pop
out
xchg
sar
lods
es
mov
xor
addr16
scas
fstps
cvtps2pi
cmpl
jmp
aad
push
push
lods
test
repnz
xchg
sub
inc
movsw
fld
imul
sbb
sub
testb
inc
leave
fdivl
je
and
repnz
lods
mov
rcrb
xlat
loopne
popf
arpl
sub
push
jp
popl
cmp
xchg
lds
imul
mov
sbb
lods
xchg
dec
js
fsts
xor
inc
pop
xchg
jns
inc
sub
cmpl
push
mov
jl
repnz
roll
mov
movsb
inc
fsts
adc
xchg
hlt
rcll
xchg
ss
jmp
mov
mov
cmpsb
iret
xchg
shll
mov
dec
mov
dec
flds
scas
push
imul
dec
push
or
fs
and
mov
out
sub
dec
scas
mov
test
push
mov
mov
mov
inc
lret
mov
xchg
out
dec
xchg
pop
cmp
insl
mov
pop
or
mov
daa
fidivl
jno
mov
outsl
insl
call
loopne
mov
push
cmp
xchg
test
scas
mov
sbb
fsubrs
cmpsl
and
daa
icebp
aad
loope
loopne
fnstenv
cmc
test
mov
jmp
ret
scas
fld
movsb
cmpsb
mov
test
adc
xor
mov
push
sti
cmp
jno
adc
add
fs
or
lcall
mov
xchg
push
mov
aad
sub
pop
add
cmp
push
stos
xor
fisubrs
cld
xchg
cmp
pop
jle
mov
mov
mov
sbb
in
sub
cmp
subb
cmp
gs
sub
mov
sub
fisubrs
mov
add
add
push
fmul
ret
data16
mov
aam
sbb
stos
dec
jbe
sub
sbb
or
sti
mov
fst
fldcw
aam
push
add
lods
inc
mov
and
xlat
pop
imul
stc
fscale
push
mov
sbb
jne
cmpsl
xchg
lock
xor
inc
or
mov
mov
cmp
push
ficomps
sub
test
sbb
lcall
in
inc
jmp
xchg
btc
lods
push
fldenv
enter
scas
scas
popl
sbb
leave
movsl
sbb
mov
gs
rcrb
jb
jno
imul
mov
fcomp
add
sbb
and
shlb
aaa
lahf
arpl
movb
js
or
or
nop
mov
jb
push
outsb
and
jle
xchg
sub
mov
gs
mov
mov
in
lcall
and
pop
in
cld
xchg
into
dec
add
int
leave
loopne
cs
sbb
dec
sub
or
sbb
pusha
push
mov
push
je
dec
xchg
or
mov
push
inc
leave
xchg
adc
mov
in
ret
sahf
dec
and
sub
mov
sahf
cmp
es
jmp
mov
push
sbbl
mov
cmp
xor
pop
adc
mov
arpl
or
hlt
sbb
xchg
and
mov
or
aas
or
jb
sbb
push
addr16
insl
push
xchg
sub
sub
adc
data16
in
jg
lret
aam
lods
fwait
jb
sbb
pop
adc
mov
mov
and
sub
xlat
fwait
addb
pop
push
mov
bound
xor
lods
push
rolb
or
scas
push
xor
xorl
or
lcall
mov
push
mov
xchg
loop
cmpsb
cmp
pand
mov
sti
cld
cld
mov
pop
ja
dec
jl
lahf
dec
lahf
rolb
jg
xchg
into
sbb
pop
sahf
sti
xor
test
xchg
and
jbe
mov
mov
inc
dec
mov
lahf
sbb
je
into
enter
test
inc
and
jle
inc
shlb
add
push
loopne
sbb
jecxz
mov
xchg
lock
lods
sbb
cmpl
dec
in
xchg
ficompl
sub
mov
cltd
enter
and
jae
cs
mov
sub
test
test
ret
xor
mov
je
rolb
and
test
push
mov
int
push
push
fwait
push
and
test
dec
lds
leave
mov
mov
xlat
in
cmp
les
sbb
cld
push
movsb
inc
xchg
add
lock
dec
insw
fisubrs
aaa
sbb
push
push
jae
cmpsl
cltd
mov
das
popa
jnp
insb
imul
mov
dec
lret
out
mov
scas
test
mov
mov
outsb
je
xchg
jbe
sub
and
xchg
add
daa
push
leave
out
dec
sub
fnstsw
hlt
lods
int3
adc
nop
and
adc
ja
cmp
jbe
in
push
sbb
in
fisubrl
xchg
pusha
stos
pop
cmp
pop
data16
enter
es
adc
daa
cmpsb
add
push
rcl
add
aad
icebp
push
mov
jg
enter
or
push
pop
and
daa
arpl
test
xor
stc
lcall
xchg
call
dec
xor
inc
xor
nop
xchg
into
dec
das
subl
pop
gs
push
cmp
shl
stos
fidivrs
or
xor
jmp
ret
xchg
cld
xchg
out
cli
leave
sti
mov
scas
ret
out
add
xchg
int
int3
sahf
out
add
and
test
sbb
xchg
or
rcrb
jo
pushf
les
xchg
fstps
in
pop
cmc
lods
loop
testb
in
stos
push
rcr
mov
loope
ficompl
jmp
cltd
sti
popf
jne
xchg
cmp
in
mov
jae
or
dec
and
push
js
rorb
std
adc
cmc
out
es
es
inc
int
inc
cltd
mov
pop
mov
inc
sahf
push
es
pop
es
cltd
addr16
int3
das
test
inc
shl
fldcw
mov
xor
scas
out
mov
mov
xchg
test
lods
and
pushf
sbb
dec
repnz
pop
jge
push
jnp
in
cmp
cmp
xrelease
mov
stos
xlat
loope
mov
lods
sbb
pushf
jno
push
mov
adc
mov
movsb
sbb
mov
mov
mov
mov
sahf
popf
test
sbb
mov
jp
sbb
in
in
sbb
bound
aaa
mov
clc
imul
pop
push
sbb
pop
inc
jp
xor
insb
dec
lret
gs
jmp
cmp
pop
cwtl
test
cmpsl
mov
testl
leave
mov
iret
dec
dec
mov
xor
js
mov
mov
mov
jbe
cli
nop
mov
fcmovnu
enter
loope
inc
cmpsl
aaa
jb
nop
adc
dec
jge
repz
push
nop
shll
sti
popl
cs
lods
hlt
insb
add
push
push
adc
or
mov
lods
jle
pop
gs
repnz
leave
jmp
add
daa
lock
push
jl
push
cmp
loopne
scas
orb
rcl
jbe
in
sub
adc
inc
jnp
repnz
pop
cmp
fsubrs
mov
and
sarb
repz
mov
inc
pop
inc
cmp
mov
mov
mov
cwtl
xchg
mov
mov
sti
movsl
hlt
call
xchg
fdivr
cmp
cmp
push
push
xchg
fsubrl
sbb
sbb
daa
bound
test
mov
cmp
test
fcomi
loopne
out
aaa
push
push
andb
mov
dec
jbe
fsubr
loope
mov
mov
lods
movsb
test
xchg
push
sub
andb
fimull
scas
jle
inc
cltd
sbb
mov
cmpsb
stc
aas
push
loop
xor
dec
push
in
popf
mov
insb
cli
dec
icebp
rolb
xor
fucomp
pop
mov
fisttpl
jge
cmpsb
mov
sbb
push
lods
call
loope
in
outsb
mov
xchg
and
das
push
out
call
es
mov
test
push
sahf
push
jle
push
lods
sbb
xchg
ficompl
in
mov
stc
fldl
es
or
lcall
xchg
jno
or
xchg
call
imul
pop
jnp
xor
mov
xchg
mov
and
data16
sbb
lods
sbb
xchg
inc
aas
lahf
cmp
add
dec
xchg
push
imul
std
stc
mov
xchg
in
int
xor
test
adc
jmp
xchg
outsl
sbbl
sub
sbb
push
mov
sbb
mov
inc
fs
scas
stos
push
das
push
daa
mulb
hlt
mov
fidivrl
jae
fldcw
decb
call
mulb
dec
lahf
push
and
sbb
pop
lods
cmpsl
stos
jns
pop
jae
stos
dec
flds
and
dec
fwait
push
pop
sahf
mov
sub
bound
mov
xchg
mov
mov
pop
sahf
jle
mov
lds
ret
test
int
adc
sub
insl
or
rolb
in
push
popf
push
jle
inc
jns
xchg
insb
icebp
sub
add
sarl
xor
sbb
rep
out
jns
inc
ljmp
mov
insb
stc
or
jge
jp
fwait
mov
test
add
outsb
mov
js
sbb
sbb
in
les
mov
jecxz
jo
sbb
sti
cmp
add
xor
dec
lret
pushw
test
pushf
xchg
xor
sub
or
fchs
sbb
std
fwait
xor
lods
dec
andl
push
adcl
sbb
add
mov
shrl
ret
sbb
pushf
fsts
adc
lock
mov
jmp
xchg
rorb
idivl
lods
fiadds
sub
shlb
sbb
dec
mov
pop
hlt
mov
mull
push
fldenv
or
pop
cld
inc
mov
and
push
movsl
pop
sbb
shl
fdivrs
sbb
mov
xchg
mov
mov
push
sub
mov
imul
sbb
popa
andl
xchg
cmp
cmpsb
mov
movsb
mov
test
pop
repnz
mov
std
pushf
push
in
adc
sti
mov
jne
rcrb
sbb
mov
xchg
in
fwait
xlat
push
add
inc
arpl
aad
push
cwtl
sahf
stc
js
addl
xor
lods
pop
cld
cmp
std
nop
sbb
enter
les
loopne
adc
enter
jmp
orb
test
rcrl
fldenv
mov
add
push
add
pop
fwait
imul
pop
mov
scas
lret
int
pop
add
mov
pushf
adc
push
jmp
mov
lahf
mov
dec
push
cmp
cmpsb
xlat
lds
pop
sbb
aad
lret
and
pinsrw
movsb
jp
fsts
cmp
aaa
mov
pop
adc
test
jecxz
loop
sbb
jp
nop
mov
shr
clc
shlb
daa
adc
fcmovnu
pop
ret
cmpsb
imul
movsb
cltd
dec
or
cmp
mov
sub
je
arpl
push
popa
pop
push
pop
ficoml
add
shrb
mov
cmpsb
es
addr16
and
test
jno
pusha
daa
jl
add
inc
stc
cmp
sub
lcall
push
ds
push
jbe
push
jmp
scas
in
lcall
push
stc
mov
js
iret
dec
pop
dec
fidivrs
sbb
dec
insl
cmpsb
loope
mov
movsb
out
stc
cmp
add
out
sbb
xor
push
or
sbb
in
lahf
iret
ljmp
fisttpll
mov
ret
lret
shl
ret
adc
dec
jle
mov
cmpsb
scas
mov
ljmp
pop
inc
scas
mov
add
mov
mov
ss
loope
leave
lods
pop
je
jg
sub
xchg
les
fxch
inc
cmp
fisubs
imulb
cmp
and
test
je
out
sbb
stos
daa
and
dec
mov
sub
xor
mov
add
xchg
add
lret
movsb
std
popf
pop
je
xor
add
or
sub
fxch
xor
and
mov
movsl
xchg
cmp
dec
out
icebp
aam
outsl
cmp
cld
pop
lret
mov
jnp
push
sub
shll
inc
sti
xor
push
mov
jecxz
mov
or
shlb
fdivrs
sbb
jb
adc
xor
enter
pushf
es
xchg
sub
cmpsb
lea
jne
mov
inc
sub
jo
cmpsl
xor
sbb
pop
mov
inc
xchg
jae
cmc
daa
stos
test
mov
push
das
sub
in
dec
pop
out
testb
shlb
shl
cmpsb
jbe
out
push
call
inc
fwait
jge
jae
push
adc
adc
cli
inc
mov
push
stos
out
jb
mov
test
lret
mov
es
cmc
daa
cld
insb
xor
scas
jae
push
mov
dec
sbbb
int
mov
mov
popa
push
int
std
fld1
xchg
mov
xchg
repz
add
jl
cmpsl
pop
lds
and
xchg
test
dec
stos
add
enter
mov
mov
sbbb
add
mov
fldt
pop
popf
fnstcw
dec
jge
mov
mov
scas
mov
in
fwait
js
cmp
inc
jae
xchg
leave
push
mov
mov
inc
lahf
div
outsl
loopne
sbb
fsub
mov
shlb
movsb
cmpsl
es
inc
addb
lods
or
pop
insb
pop
push
gs
inc
out
jp
mov
ds
mov
sub
loopne
sahf
inc
fcmovnu
xor
pop
icebp
clc
addr16
aaa
jecxz
xor
lcall
mov
outsb
push
fsub
sbb
in
insb
cmp
jle
pusha
jno
mov
mov
gs
dec
loope
cmc
mov
stc
and
test
jle
pop
or
mov
inc
inc
mov
xchg
xchg
push
sarl
ror
mov
inc
mov
insl
sub
dec
addb
es
pushf
mov
xchg
aam
push
shlb
out
ljmp
cltd
js
pop
cli
mov
outsb
jle
repz
roll
push
mov
jp
sbb
mov
or
dec
les
test
push
mov
gs
ret
movb
xor
rorb
xlat
loope
xor
daa
mov
nop
cmpsl
enter
out
icebp
push
push
push
cmp
cmc
push
je
nop
inc
scas
mov
data16
insl
sub
mov
push
int3
shll
or
in
mov
sub
fcoml
push
adc
imul
inc
mov
xor
dec
std
jns
movsb
imul
ss
out
mov
and
xchg
and
xchg
adc
das
sbb
mov
fnstenv
cli
movsl
ret
jno
xorb
jae
out
dec
add
push
in
add
jo
int
jno
mov
out
cmpsl
aad
fimuls
or
data16
icebp
fadd
dec
sbb
inc
repnz
xor
loopne
push
pusha
hlt
lret
sbb
in
xchg
mov
arpl
sbb
lahf
jno
cmp
and
pop
sub
jo
fdivl
mov
jp
fstps
pop
push
nop
stos
mov
test
cmp
aaa
or
push
pop
mov
mov
repz
inc
sbb
jns
fisubl
jno
jnp
lea
xor
out
clc
cmpsl
into
subl
mov
inc
xlat
jecxz
fstpt
leave
jmp
or
scas
movsb
addl
push
inc
out
mov
and
xchg
jo
cmc
popa
shrl
movsl
out
pop
pop
repnz
lods
in
mov
mov
leave
clc
adc
inc
mov
or
hlt
mov
and
clc
call
dec
imul
add
mov
mov
sub
cmpsl
aam
scas
repnz
cmp
mov
xor
sbb
xor
popf
jo
mov
pop
ss
xorl
and
mov
jmp
cwtl
pop
in
das
mov
pop
in
addb
sub
and
mov
out
xchg
mov
and
fdivp
sti
or
pop
hlt
xor
fnstcw
add
shr
lea
mov
jb
pushf
dec
int3
mov
mov
int
xchg
pop
lcall
inc
mov
or
icebp
dec
sbb
loopne
and
fisttpl
mov
mov
stc
stos
sarb
inc
jle
xchg
push
lock
and
push
pop
xchg
scas
fdivrl
xchg
fiadds
sbb
movsb
adc
pop
pusha
fsubp
sub
inc
xchg
dec
push
movsl
jecxz
dec
dec
test
dec
int
and
test
dec
pop
mov
mov
rolw
jmp
std
mov
cmp
mov
sbb
fidivrs
call
fwait
out
jnp
xchg
cmp
mov
inc
leave
mov
idivl
push
lret
mov
std
push
pop
stc
xor
xchg
lock
mov
adc
int
inc
mov
or
or
cmp
push
jae
js
fstpt
push
fisubrs
push
jnp
sub
sub
repz
push
push
or
cmp
mov
sbb
xchg
or
mov
inc
push
or
xlat
fyl2xp1
mov
fcompl
je
js
cwtl
ss
call
cmpb
jne
xchg
sahf
out
or
inc
pop
cs
xor
lea
shr
adc
je
fildl
dec
daa
stc
mov
mov
loop
cmp
stos
pop
cmp
fisubrs
lods
scas
mov
ja
movsl
test
xlat
pusha
lds
mov
dec
insb
shll
repz
out
push
movsb
test
push
push
call
add
pop
dec
mov
push
mov
or
mov
pop
and
push
out
cmp
nop
arpl
mov
sbb
jae
pop
add
sbb
xor
jmp
fcomps
jno
nop
pop
fnstcw
xchg
mov
mov
in
test
andb
movsb
xchg
out
imull
mov
sub
mov
mov
fnsave
dec
push
int3
lods
xchg
jne
inc
icebp
hlt
mov
in
xor
sbb
insl
mov
sub
lods
imul
es
data16
aas
dec
mov
aaa
in
xor
sbb
xchg
shr
mov
or
xchg
mov
cmc
cli
fsubl
rcr
jge
cmp
xor
mov
add
ss
fistps
push
jo
mov
int
mov
jle
mov
outsl
mov
cmpsb
push
lahf
xor
imul
inc
dec
push
add
inc
or
sub
jae
mov
xor
repz
mov
sub
aaa
mov
js
nop
push
dec
rcll
clc
lds
push
add
sbb
xchg
mov
sbb
xchg
inc
pop
mov
sbb
sbb
scas
pop
or
jge
mov
push
incb
add
mov
and
lcall
mov
or
push
jle
lahf
and
inc
scas
adc
hlt
inc
ret
fiadds
daa
je
imul
hlt
inc
inc
fildl
and
jmp
xor
repnz
jns
fs
mov
addr16
cwtl
push
sti
jmp
icebp
enter
adc
cs
idivl
and
fsts
inc
and
jb
push
fdivr
xchg
js
les
movsb
push
out
aam
xchg
mov
hlt
je
dec
lret
mov
dec
repnz
mov
je
cmp
out
das
lret
add
inc
pop
mov
lods
imul
mov
aam
movsb
mov
xchg
cmp
add
scas
sbb
sub
mov
movsb
out
sbb
ficoms
pop
mov
sub
mov
add
leave
sub
std
lret
adc
pop
sarb
pop
lahf
fcompp
pop
int3
or
xchg
or
pushf
mov
inc
pop
repz
or
lret
sbb
and
cmpsl
pushf
mov
and
fnstenv
sub
sti
jnp
pop
scas
jl
add
fldcw
int
fcmovnbe
push
xchg
mov
imul
mov
rcrl
dec
push
lret
fsts
stc
sbb
inc
and
fsubl
dec
xchg
sub
and
push
scas
pop
jmp
fsubl
xchg
mov
push
or
sahf
mov
imul
sbb
enter
push
fld
pop
out
inc
aaa
lods
pop
rcl
adc
scas
mov
mov
and
movsb
or
fsub
adc
dec
jae
dec
mov
mov
cmp
cmp
fsin
cld
mov
jecxz
jbe
sbb
or
aam
clc
or
dec
imul
repnz
adc
shrb
mov
add
jl
push
stos
jge
xchg
mov
dec
xor
xchg
push
outsl
lds
push
ss
cltd
dec
push
cmp
cwtl
push
out
pushf
mov
mov
push
push
push
jo
aas
push
cltd
les
aad
sub
sarl
jge
push
hlt
jae
leave
jecxz
cli
xchg
push
mov
data16
in
in
popf
mov
dec
stos
and
pop
inc
movsl
adc
inc
jl
addr16
frstor
inc
pop
sbb
sahf
mov
movsl
cmpb
cmpsb
push
fsubrl
sbb
cltd
inc
data16
jb
fwait
mov
out
pop
mov
push
and
dec
inc
pop
sti
shlb
pop
or
fbstp
add
mov
sbb
push
cli
add
rcr
dec
out
jns
jl
add
pusha
mov
sub
jp
mov
fsts
xchg
in
push
ss
popf
das
mov
dec
out
je
xlat
xchg
push
scas
loop
es
add
rorl
imul
repnz
fstpl
sub
into
sub
mov
std
popa
pop
mov
push
cmp
mov
std
inc
push
test
jnp
mov
cmc
arpl
and
inc
mov
data16
mov
jbe
lret
xchg
cmp
lcall
pop
es
mov
lods
pop
jb
int
das
cmpsb
fwait
enter
add
cmpsl
in
icebp
and
xor
mov
cld
sub
push
in
mov
mov
inc
cmp
lcall
mov
mov
mov
ret
mov
cld
and
leave
jbe
or
inc
inc
add
stos
lods
cmc
movsb
popf
mov
add
es
clc
cmp
or
mov
inc
xor
or
loopne
push
into
imul
test
mov
cmc
mov
adc
cmpsb
or
or
test
dec
xchg
mov
mov
test
dec
decb
pop
pushl
lods
pop
push
cmp
inc
cmp
rcrb
inc
dec
cmp
pop
cmp
aaa
in
jns
popa
adc
mov
mov
stos
fmull
pop
in
pop
fbld
jb
fsqrt
mov
mov
sub
outsl
sbb
mov
inc
imul
lea
adc
movsl
lret
push
ja
mov
aaa
gs
cmp
adc
shrb
inc
scas
icebp
mov
mov
mov
outsl
dec
int3
js
or
or
jl
js
and
sub
repnz
popf
dec
mov
push
mov
sahf
sub
jp
pop
popa
in
cmpsl
shl
adc
insl
pop
les
pop
push
add
xor
mov
sti
and
dec
lds
mov
jo
dec
cmp
cmp
cld
scas
mov
movsb
cmpsb
pop
jns
xchg
add
jecxz
sbb
jae
push
add
and
push
adc
push
cmp
add
or
maskmovq
iret
adc
push
jmp
push
jp
fsts
inc
inc
rcll
jl
sbb
ja
out
jne
sbb
or
lea
sti
mov
pop
adc
sub
fbld
cmpsl
adc
fdivrp
ss
sbb
inc
jp
mov
or
xchg
dec
bound
out
mov
inc
loope
xchg
repnz
lds
add
scas
adc
pop
adc
movsb
adc
push
mov
sbb
jo
xor
fldcw
lds
rclb
inc
stos
lea
gs
rcl
popf
hlt
pop
push
inc
fdivrl
jnp
inc
mov
dec
pusha
and
sbb
stos
std
mov
mov
sbb
pop
out
adc
jns
jmp
scas
and
and
cld
sub
mov
sub
icebp
shlb
sarl
lods
jns
inc
push
ret
mov
mov
cmpsb
fnstcw
cs
jne
mov
push
in
cmp
xor
mov
je
inc
into
dec
cmpsb
loopne
inc
push
pop
xchg
pop
sbb
das
scas
mov
fisttpl
addr16
mov
pop
in
ret
mov
inc
adc
mov
test
mov
and
test
stos
mov
mov
mov
int3
lahf
push
cli
fldl
adc
add
adc
mov
scas
scas
sti
inc
mov
mov
les
jbe
cmp
adcb
sbb
cltd
mov
pop
fs
inc
or
mov
mov
aad
int
cli
shr
pop
or
mov
mov
push
scas
fisubs
rcll
lods
pop
sub
push
or
jecxz
stc
dec
add
pushf
jl
jge
xor
fdivrl
add
jb
icebp
cmpsb
mov
int3
fistl
sbb
cli
mov
mov
cmp
sub
mov
iret
aam
pop
push
icebp
loop
aad
xchg
loopne
dec
adc
xlat
scas
pop
and
out
loopne
das
cmp
dec
xabort
and
push
outsb
ret
cmp
or
push
and
movsb
sbb
inc
test
push
pop
add
std
in
leave
imul
mov
dec
jle
sub
ss
pop
ret
std
popf
test
ficompl
popf
test
fisubs
cltd
jb
inc
inc
jbe
paddd
iret
mov
jnp
and
xchg
push
inc
movb
aam
movsb
adc
pop
scas
mov
test
adc
pop
int
mov
cmp
ret
mov
add
pop
fwait
and
insb
insb
dec
or
mov
xchg
repz
jmp
loopne
enter
adc
sub
cmp
fcoms
pop
pushf
jp
dec
in
adc
pop
das
jne
mov
lcall
xor
mov
sarb
push
jnp
mov
sbb
and
jno
push
sbb
push
repz
into
jecxz
outsb
push
test
ljmp
pop
adc
pop
enter
cli
cmp
and
sbb
jae
pusha
xchg
fldt
and
movb
push
jmp
fisubs
push
aam
xor
push
mov
lods
push
push
lret
jg
jl
push
sub
dec
mov
test
repz
cmpsb
subb
pop
xor
cmp
dec
cmpb
lahf
mov
movb
and
cmc
mov
lock
pop
add
addr16
xor
dec
imul
add
and
int3
mov
ret
push
fldl
push
out
adc
push
sbb
aad
dec
xchg
mov
fwait
cmp
jnp,pt
pop
js
lods
shrl
xchg
jne
aam
dec
fmull
cli
movsl
or
je
mov
es
les
mov
lcall
cltd
mov
stos
js
andb
mov
sahf
and
lret
dec
jecxz
jecxz
enter
lods
adcl
xorb
int
sahf
jae
cmovo
lahf
dec
mov
fnstenv
cmpsl
mov
mov
cli
and
dec
lahf
ficomps
adc
aaa
in
lcall
fwait
out
shll
loop
mov
sub
fsts
add
mov
cmp
test
mov
cmp
pop
and
xchg
sbb
mov
inc
mov
inc
cmp
test
jle
xor
add
sahf
sub
lock
mov
pop
ja
cli
fsubp
aad
add
scas
in
add
or
xor
inc
cmpsb
dec
mov
mov
pop
jo
out
mov
sub
push
clc
jp
sbb
sbb
or
dec
lods
insb
mov
mov
call
sub
stos
mov
mov
xchg
insb
cld
outsl
pop
jmp
sub
inc
in
jle
lcallw
inc
fisubs
fnstcw
inc
jns
subl
adc
sbb
mov
fisttpl
pop
in
mov
inc
fwait
out
adc
icebp
in
mov
jp
lods
lods
and
mov
push
int3
inc
aas
sbb
adc
aam
iret
xchg
jecxz
stos
push
imul
pushl
pop
xchg
push
rclb
pop
int
lahf
test
test
sbb
jne
js
xchg
mov
push
push
cmp
add
in
jg
push
mov
das
push
cmp
jae
and
loop
inc
adc
out
repz
test
fldcw
sbb
orb
cmpsb
cmp
xchg
fcmovnbe
fs
dec
lret
inc
icebp
mov
cmpsb
or
dec
fcmovnbe
addr16
xchg
push
push
je
cmpsl
push
pop
pop
test
or
add
push
sub
or
clc
lcall
xor
or
movsl
iret
dec
in
test
cmpl
xchg
dec
sbb
cmp
or
insl
addb
call
cmpsb
push
test
mov
mov
and
jge
insl
cli
shll
sub
das
sbb
xor
ljmp
mov
sub
mov
jnp
cmp
subl
push
push
push
sbb
mov
bound
in
arpl
cmp
psraw
push
imul
cmp
addr16
xor
sbb
cs
lods
cmp
adc
subl
pop
dec
push
pop
imul
sbb
pop
add
mov
shr
push
movsl
sub
mov
or
lret
push
and
repnz
dec
mov
xchg
add
test
enter
sub
inc
mov
inc
mov
push
test
in
lcall
dec
mov
sub
dec
xchg
lcall
ret
inc
test
push
scas
cmpl
mov
in
in
popa
mov
js
outsb
pop
les
notl
mov
repz
fmul
xchg
sti
add
aad
pop
nop
in
pop
insl
jecxz
push
aam
cmp
out
add
std
mov
fwait
add
leave
push
pop
test
pop
jmp
bound
pusha
repz
xchg
lods
dec
test
das
iret
mov
sub
lret
bsr
xchg
test
dec
xchg
movsl
pop
cltd
xchg
cmp
xchg
sbb
push
sbb
test
int
inc
cmpsb
adc
call
xor
xchg
clc
inc
test
dec
pusha
pop
scas
sbb
and
stos
sbb
sbb
pop
inc
idivl
cmp
jecxz
pop
loop
push
mov
jb
xor
xor
xor
rol
jg
dec
cmp
mov
push
jp
test
test
mov
lret
or
sbb
add
ficomps
je
push
rorl
cmpsl
inc
mov
data16
cmc
sbb
es
jae
dec
pop
pop
and
flds
and
lock
mov
xchg
push
dec
leave
aad
jp
outsb
jbe
das
adc
add
lea
fwait
inc
mov
push
into
mov
xchg
add
pushf
jae
test
iret
jno
stc
sahf
xchg
xchg
xchg
adc
in
or
call
add
pop
adc
cltd
jle
cli
cmp
aad
mov
out
jb
adc
sbb
and
dec
scas
mov
pusha
fstps
and
push
gs
int
add
das
shrl
sub
dec
sahf
jg
adc
cli
ss
cmp
aas
mov
add
rclb
pop
dec
scas
cwtl
roll
imul
xor
pop
inc
adc
int
int
cmc
mov
cltd
jge
je
fcompp
xchg
mov
mov
xchg
orb
es
jmp
scas
sbb
and
mov
sbb
shlb
jno
iret
rorl
gs
shll
add
bound
jae
cmp
es
jb
cmovae
gs
cmp
flds
sub
pop
divb
fnstcw
sahf
loopne
mov
xchg
pop
mov
leave
jle
jl
fcmove
mov
mov
dec
pusha
cmpsl
movsb
pop
ds
fisubrl
std
add
mov
pop
fucomp
adc
push
xchg
or
jmp
test
mov
dec
outsb
sub
lahf
addr16
mov
dec
ss
fildl
jae
stos
mov
cmc
xchg
mov
add
mov
gs
pop
cmp
ficomps
mov
fxam
pop
mov
outsl
test
adc
pop
cs
jle
sbb
rcrb
fisttpl
bound
jae
das
inc
movsb
rclb
lret
add
pop
int
mov
call
cmp
cmpl
das
xor
and
ss
dec
push
inc
dec
pop
lock
or
inc
insb
and
nop
cmp
leave
lds
test
jg
push
jne
mov
lcall
ss
dec
mov
sti
mov
movsb
icebp
js
pop
popa
mov
xchg
out
jo
cmpsl
sbb
fimuls
cmp
movsl
into
sbb
push
xchg
loop
fstps
imul
test
pop
ljmp
cmc
mov
test
mov
loopne
test
cmp
pop
aaa
inc
fwait
mov
gs
fstpt
std
ljmp
or
dec
mov
in
mov
cmp
pushf
mov
inc
ret
mov
icebp
mov
jno
mov
mov
loopne
es
sub
sbb
ret
add
dec
mov
int
pop
push
es
int
inc
test
adc
gs
dec
inc
fmul
and
mov
mov
pop
mov
xorl
cmp
test
std
stos
mov
fistps
lret
loop
push
mov
sub
imul
xor
mov
sbb
mov
push
shll
pusha
js
pop
popf
adc
mov
into
mov
cmp
outsb
and
out
js
test
aam
xor
push
fbld
inc
popf
arpl
loope
cmpsl
pop
dec
test
inc
insb
ret
lret
dec
adc
inc
sub
inc
addl
out
pop
mov
sahf
stc
xchg
test
fs
movsl
mov
mov
add
in
mov
ja
cmp
cmp
xchg
or
mov
fisubs
jns
in
jb
mov
repnz
or
xchg
clc
fwait
std
cmp
pop
sub
sbb
ljmp
push
push
mov
cltd
or
xchg
jb
cmp
int3
mov
aaa
add
xor
std
ja
call
or
mov
test
xor
outsb
clc
sbb
sub
outsl
sti
ja
scas
lret
push
mov
cld
in
xchg
mov
push
sub
jbe
popf
popf
jne
cmpl
sbb
pop
fdivrl
pop
cmpsb
mov
ror
pop
dec
xor
in
scas
xchg
sub
stc
mov
addl
sbb
hlt
je
cmc
mov
inc
outsl
mov
outsb
aam
jmp
pop
mov
test
popf
jge
subl
sbb
mov
mov
cmp
ljmp
lds
hlt
cmp
mov
cmp
pop
cmp
sbb
mov
test
push
lods
cs
imul
lods
pop
testl
lret
pop
push
fstps
mov
pop
or
inc
and
inc
in
test
out
fsts
mov
push
pop
sub
or
jmp
cmp
loope
dec
subb
test
fldl
test
jmp
inc
pop
jne
je
jl
addr16
mov
jmp
fdivl
mov
movsl
hlt
movsl
in
xchg
fbld
mov
mov
fwait
cmp
jae
aas
mov
or
nop
std
and
lcall
negb
lods
cmp
inc
addr16
scas
xor
mov
mov
outsb
data16
dec
cld
adc
mov
inc
mov
clc
push
xor
dec
inc
fs
sbb
out
sti
sub
int
imul
les
mov
lods
mov
cmp
sub
dec
dec
push
gs
fists
mov
out
std
xor
icebp
lods
divb
daa
in
popf
xchg
imul
push
pop
mov
stc
in
push
cli
sbb
add
jae
aam
aad
pop
pop
fistps
fiadds
test
shll
push
add
sub
jnp
test
inc
es
fisubrs
jmp
xchg
jmp
cmp
pop
jbe
mulb
jl
sub
inc
push
outsb
and
jne
sbb
xchg
mov
jb
mov
cmp
dec
mov
sbb
jmp
imul
mov
jmp
daa
mov
rclb
pushf
and
jbe
adc
shlb
pop
dec
shr
movsl
lcall
cmc
in
jo
test
je
mov
call
xchg
push
push
jae
lret
xchg
js
rcr
add
addr16
scas
ret
cmpsl
xchg
lcall
aas
mov
shl
sub
out
shrb
jae
mov
add
cmp
leave
lcall
push
sbb
sbb
ret
inc
pop
add
xchg
and
jae
aas
stos
xchg
and
shr
xchg
mov
popf
out
jmp
sbb
and
out
or
clc
xchg
adc
push
push
or
scas
test
clc
jae
addb
xchg
cmp
adc
inc
or
nop
mov
lds
lods
pushf
dec
and
mov
dec
sub
popf
cmpsl
das
repz
mov
pop
test
ret
mov
shll
xorl
loop
mov
push
pusha
sub
cmpl
inc
mov
sahf
and
ss
mov
jne
in
shrb
rcr
addb
jecxz
add
fnstenv
mov
sub
int3
test
ljmp
cmpsb
xchg
stos
sbb
mov
xor
push
xchg
cmp
lret
loopne
push
xorb
jl
popf
mov
cs
jp
push
pop
shl
mov
loope
scas
mov
sahf
mov
xchg
shlb
jns
xor
and
mov
and
xchg
jmp
rcl
cmpl
lods
fucomi
fldenv
sub
fwait
jg
or
aas
jecxz
data16
cmp
pop
and
xchg
push
push
jb
mov
repz
mov
mov
xchg
les
and
jl
xchg
dec
lret
adc
movsl
int3
test
ss
and
push
push
mov
xor
jae
xchg
dec
mov
lods
dec
mov
sti
mov
inc
or
mov
and
sbb
sbb
jp
faddl
jl
xchg
or
or
bound
xlat
jge
jne
jno
movsl
xor
ds
mov
jno
push
shrl
hlt
sbb
fs
push
scas
int
push
push
daa
sub
pop
inc
cmp
mov
arpl
mov
xchg
cmp
fstpl
adc
pusha
jmp
mov
cmpsl
in
sbb
test
or
fsubrp
cmp
lea
movsl
inc
rcrb
lret
fnstsw
sbb
sti
mov
ds
sub
imul
sub
push
imul
xchg
out
ss
mov
push
in
dec
sbb
dec
sbbl
xchg
sahf
dec
sbb
sbb
addl
xchg
outsl
adc
sbb
pop
bound
cmp
mov
mov
stc
mov
scas
push
jg
into
adc
daa
imulb
aad
sub
dec
mov
int
cmp
fnstsw
sub
fnstenv
pop
sub
pop
cmc
jmp
mov
pop
cmp
xchg
out
loope
push
xchg
cmpsl
push
aas
mov
gs
or
ss
andb
clc
sbbl
push
hlt
test
movsb
sbb
mov
test
cmp
dec
nop
cmpl
aas
ljmp
outsl
mov
mov
jns
push
pusha
cltd
jae
fisubrl
scas
aam
xchg
inc
mov
fists
fldt
sbb
fidivrs
pop
dec
push
testb
dec
aam
in
cmc
mov
adc
jo
push
pop
push
push
neg
lds
xor
xchg
cld
lock
inc
mov
push
hlt
leave
dec
addr16
lcall
lahf
testb
cmp
sbb
fcomps
inc
jae
push
mov
mov
lock
and
and
lahf
mov
cmp
pop
mov
lahf
dec
push
pop
inc
sbb
sbb
sbb
and
fwait
xor
leave
sbb
nop
lcall
cmp
pop
xor
cmp
dec
jae
and
jecxz
add
mov
stos
scas
ret
jne
push
pop
popa
and
fbstp
out
jns
scas
push
popf
fsubrl
lcall
pop
inc
imul
in
and
test
inc
pushf
mov
loope
in
sbb
out
lock
inc
mov
outsb
je
mov
int
push
clc
enter
xchg
push
jmp
repnz
std
js
dec
mov
mov
scas
mov
mov
push
mov
jns
sbb
cmp
mov
sbb
dec
or
repz
jle
mov
jne
push
push
int3
gs
sbb
sub
aas
lds
jno
pusha
and
or
and
in
vhsubps
sub
sub
and
dec
dec
cld
pop
add
mov
cmp
or
xchg
mov
and
and
xchg
xor
cltd
mov
dec
xor
les
fadds
cmp
or
cld
popa
aad
je
int
xchg
cs
dec
in
test
stc
sub
cmp
movsb
gs
jae
imul
xchg
scas
enter
dec
and
jae
fwait
imul
scas
cmpsb
xchg
leave
mov
cmp
insl
lods
test
into
pop
in
sub
mov
test
push
pop
dec
aam
inc
lcall
add
ret
cwtl
pop
fwait
jmp
lcall
inc
dec
test
push
leave
cmp
fisubs
jl
test
add
je
das
hlt
cmp
lea
mov
push
fnstcw
stos
jl
jmp
mov
std
add
rcr
pop
int
xchg
in
dec
push
dec
fldcw
mov
fidivrs
pusha
sbb
push
scas
mov
pusha
sub
jo
les
stos
jg
sbb
stos
rol
mov
popl
leave
pop
xor
mov
dec
roll
sahf
cwtl
adc
dec
cmp
gs
aad
repz
jp
sbb
icebp
nop
sbb
xor
iret
arpl
push
push
add
mov
dec
mov
scas
cmpsb
shlb
cmp
xchg
dec
sbb
pop
sbb
jp
ss
std
rorl
dec
mov
lcall
fsubl
or
sbb
sbb
hlt
dec
cmp
mov
cltd
das
push
jns,pn
push
xor
outsb
pop
inc
mov
mov
pop
loope
out
fadds
popa
push
fcompl
leave
jp
and
add
in
insb
mov
mov
add
xor
mov
fisttpl
call
lds
or
or
cmpsb
outsl
inc
xchg
fdivrp
inc
mov
adc
lods
fsubl
loopne
outsb
andb
pushl
fnstcw
out
jae
cmpsl
cmp
xchg
push
call
lahf
lcall
mov
hlt
push
dec
xor
sbbl
mov
pop
jo
incb
dec
sub
jnp
dec
imul
fstpl
push
mov
in
divl
mov
in
push
jno
push
fcom
add
and
adc
mov
push
mov
out
enter
pop
xor
mov
mov
adc
ja
jae
sbb
inc
scas
push
out
pop
lcall
loopne
and
ffree
stos
add
fidivrs
gs
mov
cwtl
lods
lret
mov
loopne
gs
pop
out
and
mov
add
xchg
xor
int3
jecxz,pn
test
and
mov
push
mov
dec
sbb
mov
inc
adc
hlt
sub
ds
cmp
push
jbe
mov
push
jns
sub
fsubr
pusha
push
incl
xchg
lcall
pop
inc
ss
ss
mov
popa
mov
jg
adc
das
scas
std
xchg
in
cld
mov
flds
xchg
sub
sbb
mov
cmp
pop
daa
fdecstp
mov
dec
or
cmp
and
bound
aaa
out
xchg
clc
dec
scas
pop
mov
ljmp
or
mov
popf
or
je
sahf
mov
test
stc
cmpsb
push
mov
test
fistl
inc
jo
jmp
gs
repz
lods
cmp
dec
dec
pushf
lahf
fldpi
fsubrs
fdivrp
fmull
sti
ss
std
ret
pop
sub
sbb
sbb
mov
loop
inc
jbe
fidivs
xor
mov
lea
fstpt
int3
and
push
dec
jl
fsts
mov
clc
jae
clc
cmp
cld
test
pop
dec
rcrb
jl
outsl
jne
popf
xchg
xchg
mov
mov
es
add
xorb
mov
std
in
dec
jne
push
imul
lock
cs
cmp
jb
dec
mov
sbb
js
push
movl
inc
lcall
test
or
daa
fildl
dec
xlat
sti
bound
fsubrl
das
xchg
shlb
push
jne
loopne
mov
dec
lret
mov
hlt
pop
cmp
das
pop
adc
inc
lds
mov
mov
pop
and
dec
push
xchg
in
test
push
jnp
lock
mov
push
fs
or
mov
and
pushf
pop
xor
jnp
mov
hlt
test
jge
scas
jnp
outsb
pusha
cwtl
jnp
test
jge
mov
xchg
scas
mov
out
pop
fnsave
popf
lods
or
ret
cmpl
lcall
pop
mov
popa
jno
or
int3
sbb
int
or
sbb
into
jmp
mov
adc
xchg
push
aam
xchg
movsb
add
das
fldenv
jns
add
fisttpll
mov
jne
daa
icebp
jmp
insb
lock
in
scas
sbb
mul
hlt
in
push
mov
add
mov
imul
fcmovnbe
popf
movsl
xor
imul
sbb
add
or
pop
cmpsl
aaa
cs
adc
ss
mov
out
adc
cmpl
fyl2x
fsubrs
and
insb
mov
hlt
push
sarb
ud2
jl
js
inc
jp
test
lcall
cs
popa
mov
add
pop
dec
jbe
dec
js
repnz
fisubs
mov
mov
mov
inc
pop
cwtl
sti
or
mov
jl
adc
xchg
dec
xchg
stc
inc
es
adc
pop
call
hlt
sub
push
popa
adcb
sub
add
fs
xlat
jo
repnz
jns
ja
or
push
jne,pn
ljmp
push
dec
inc
fidivl
dec
sbb
lods
sbb
flds
sbb
nop
mov
int3
test
je
gs
sbb
frstor
and
out
push
fidivrl
xchg
mov
aad
mov
push
sbb
or
insl
jno
push
jns
mov
inc
insb
int3
movsl
mov
xchg
adc
jle
jmp
mov
inc
sub
xor
jne
mov
sbb
push
fisubrs
mov
test
das
cmpsb
addr16
xchg
test
fldcw
xchg
sub
mov
repz
rcl
in
int3
adcl
imul
dec
adc
movsb
test
mov
gs
sahf
mov
xlat
cmp
in
mov
push
std
push
sbb
add
scas
lods
mov
push
sub
int
adcl
sbb
adc
inc
or
fldpi
push
xor
mov
sbb
jnp
jno
jecxz
sbb
sub
repnz
push
adc
test
ljmp
push
xchg
in
xor
sbb
push
sahf
std
or
loop
xor
cmp
orb
je
jecxz
fldcw
push
add
and
cmp
andb
lods
pop
fidivrs
outsb
push
loopne
push
xchg
lods
cmp
imul
push
lahf
cmp
cmpsb
imul
mov
clc
rcl
in
or
ja
movsb
ret
mov
xchg
mov
adc
dec
dec
sub
xchg
push
cli
popf
push
and
lock
sbb
mov
dec
sub
inc
xor
sub
xacquire
adc
xchg
xor
xor
sub
mov
and
sub
pop
sbb
push
mov
subl
inc
xchg
call
cltd
js
jge
dec
pop
scas
sub
inc
call
aad
ja
jg
push
and
mov
je
mov
add
clc
cmpsb
pop
or
shll
jp
sub
add
adc
sar
imul
xchg
xor
stc
cmpsb
dec
ja
mov
jmp
mov
fdivrl
popf
mov
fisubs
dec
orb
jg
jns
aaa
es
inc
jns
mov
mov
jno
notb
mov
fxch
adc
xor
popf
xchg
push
lret
mov
pushf
mov
into
aas
mov
frstor
push
shll
fcoml
insb
xchg
fisubrl
test
mov
addl
in
test
mov
shll
push
xchg
and
xchg
movsb
jge
decb
out
mov
insl
int
fxam
sti
mov
xchg
mov
aas
dec
add
xchg
and
xor
pushf
xchg
scas
dec
into
shufps
pop
adc
mov
clc
ja
sub
mov
xor
std
xchg
cli
mulb
mov
lea
xor
xchg
cmp
inc
pop
sbb
adc
pop
mov
ljmp
aaa
test
xchg
int
ss
data16
lods
xchg
or
jecxz
fcoml
inc
lahf
lds
xor
std
cli
fcomps
pushl
insb
inc
xor
jg
jns
mov
aam
mov
out
mov
sbb
cmc
pop
or
out
cli
cmp
xchg
mov
sub
push
stos
lock
sbb
sbb
xchg
fmull
int
push
dec
or
sbb
jns
fidivrs
sub
mov
fcmovnbe
pop
mov
jne
add
xchg
xor
loopne
sub
insl
ja
fldenv
mov
mov
cmp
imul
shl
mov
pop
test
lods
mov
fld
jne
add
ret
fdivs
clc
jo
lods
inc
push
popf
add
fwait
push
lahf
adc
dec
and
xor
mov
cmp
adc
mov
fidivs
jmp
push
push
adcl
xor
js
test
test
cmp
mov
sub
subb
cmp
cmp
sbb
inc
push
xorl
lea
mov
add
decl
push
jge
imul
sbb
or
lahf
lea
cmpsl
fsin
cmp
xlat
xlat
add
fwait
ds
mov
add
sbb
xor
push
por
jnp
fmull
adc
mov
adc
mov
je
pop
hlt
mov
das
in
sbb
aas
fcoml
jae
adc
rcrb
and
movsb
rcrl
jge
roll
jnp
sbb
ffreep
ficoml
add
cmpsl
add
mov
mov
fldenv
dec
push
cs
adc
jmp
into
imulb
movsl
adc
stos
mov
xchg
xchg
sbb
dec
inc
lock
and
mov
out
rcr
lret
cmp
cmpsl
jge
test
push
and
das
add
cmp
lret
ss
cmp
mulb
mov
faddl
shlb
push
sti
arpl
in
cli
icebp
inc
test
xorb
jnp
in
mov
mov
push
mov
arpl
mov
pop
das
jecxz
and
in
mov
jp
mov
mov
adc
movb
inc
mov
cmp
iret
and
dec
aas
mov
inc
cmp
pop
setbe
cli
mov
fdivp
mov
test
lods
push
popf
lret
jb
insb
sbb
in
mov
mov
div
lahf
fisubrl
je
pop
dec
inc
shll
pop
sub
cltd
clc
addr16
enter
mov
hlt
movsl
js
jl
ss
jae
xchg
adc
mov
mov
inc
xchg
leave
sub
mov
adc
jb
mov
or
jns
mov
shrl
in
ds
pop
cmpsb
inc
inc
or
stos
ficomps
das
shll
iret
mov
sbb
adc
and
pop
mov
jae
mov
in
sbb
lods
adc
imul
sbb
xchg
mov
in
fnstenv
sbb
adc
int
repnz
mov
loop
gs
scas
xchg
pop
jb
in
sub
push
inc
xor
mov
loopne
and
js
lahf
push
dec
icebp
jge
popa
add
mov
jns
mov
test
rcl
cmp
out
adc
xchg
jnp
lcall
ret
sti
adc
mov
rclb
push
mov
inc
inc
mov
push
xchg
andl
sbb
hlt
inc
sub
dec
and
pop
call
ffreep
add
jae
mov
mov
jl
movsb
addr16
cmpsb
jae
leave
in
push
dec
imull
pop
faddl
popf
pop
add
cmc
push
daa
es
idivb
and
cltd
scas
lods
mov
mov
jle
cli
mov
mov
rorl
test
stos
mov
jo
inc
andl
sub
stos
inc
adc
inc
pop
bound
mov
and
mov
jecxz
int
test
loope
add
aam
ja
cmp
sub
sbb
push
mov
ljmp
lret
sti
sub
or
sbb
mov
aad
lahf
xchg
lods
nop
inc
push
mov
rcll
mov
adc
std
and
sub
xchg
pop
orl
fldcw
popf
out
or
push
scas
lret
or
pop
pop
aad
cmp
dec
sahf
loope
sub
add
les
cmpsl
test
aam
iret
popa
cmp
ret
mov
cmpsb
lret
xchg
in
mul
out
jl
roll
mov
jb
movsl
lahf
lds
jae
std
inc
dec
xor
aad
xor
icebp
adc
icebp
in
add
out
cmp
in
mov
test
lcall
and
mov
mov
imul
push
adc
data16
sbb
scas
cmp
mov
xchg
dec
add
push
fwait
loopne
pop
push
test
pop
dec
inc
pop
mov
pop
mov
cmp
cltd
loop
sbb
push
sbb
aaa
popf
ficomps
jmp
mov
mov
or
das
lahf
adc
push
inc
mov
aam
test
stos
jo
test
scas
arpl
jb
pop
xchg
pop
orb
push
cmpl
mov
cmp
fdecstp
push
ret
or
lret
mov
andb
pop
mov
mov
pop
insl
adc
push
sbbl
inc
addr16
mov
stos
aam
out
adc
add
push
dec
push
or
inc
jnp
enter
hlt
cli
jmp
jp
or
sahf
flds
mov
call
cli
in
push
movsl
neg
cmpsb
mov
test
jnp
inc
sbbl
popa
mov
std
pushf
push
add
std
xchg
rol
xchg
mov
sub
fnstenvs
imul
mov
mov
and
push
jae
insl
fwait
dec
in
stc
add
mov
xchg
aad
jnp
pushf
and
cli
lock
adc
fscale
test
cli
cmp
and
pop
daa
mov
call
dec
fisubrs
push
repz
addr16
mov
or
je
mov
fbld
popf
mov
pop
gs
cmc
pop
mov
push
mov
fisubl
repz
mov
sub
mov
and
pop
cmp
out
mov
fnstcw
sub
adc
cmpsl
mov
ljmp
jnp
push
dec
cmp
je
repz
jge
aaa
xor
adc
scas
nop
push
int3
pop
sbb
aam
sti
movsl
shr
dec
gs
mov
mov
xchg
mov
jbe
sub
mov
jge
lahf
fs
fsin
sub
rcrl
and
mov
imul
dec
lods
push
inc
cld
test
and
loop
dec
mov
test
push
movsl
ret
loope
subb
ret
xchg
dec
push
push
inc
xchg
scas
add
scas
mov
call
addr16
cltd
ret
fdiv
xchg
push
mov
mov
subl
push
xchg
repz
adc
push
pop
pop
lock
dec
cmp
loope
cld
cmp
in
push
loopne
cmp
sbb
mov
aas
dec
xor
mov
sbb
inc
sbb
mov
daa
repnz
sub
test
mov
lock
xor
lret
call
mov
imul
das
pusha
repz
mov
fmull
sbbb
sbb
xchg
sbb
out
pop
xchg
es
and
jle
xchg
lahf
push
mov
mov
jnp
stc
sbb
decl
sti
dec
movb
cld
mov
jge
or
cmpsb
xor
shlb
push
add
push
gs
jle
js
lahf
call
jle
stos
lret
fnstenv
loop
mov
loopne
jmp
mov
out
mov
or
test
mov
sbb
push
cmc
pop
pop
jbe
dec
xchg
mov
repz
mov
movsb
in
stc
mov
mov
movsb
jnp
scas
sbb
fptan
mov
and
cmpsb
xlat
fsubrl
jnp
cmp
inc
and
xchg
mov
rolb
sti
subl
movsb
mov
lret
loopne
stos
leave
inc
sahf
sbb
mov
hlt
jmp
adc
scas
shll
gs
out
fdivr
mov
fisttpll
scas
adc
xchg
mov
faddl
fists
out
lock
rcll
stos
lret
jg
cmp
push
nop
hlt
lods
idiv
aaa
xchg
and
sbb
or
addb
jns
mov
add
scas
clc
add
adc
hlt
push
pop
cmp
outsl
popa
jle
cmp
rol
test
popa
adc
cltd
das
andl
sub
mov
ss
or
mov
push
and
push
push
mov
inc
movsl
pop
sub
fs
inc
jg
sbb
xchg
mov
aam
lods
pusha
test
dec
shrb
flds
pop
pushf
call
cmp
arpl
mov
dec
std
stos
fistl
pop
xor
outsl
sub
inc
xchg
hlt
inc
dec
insl
addr16
pop
sarb
inc
ret
sub
insb
sahf
out
aam
je
mulb
in
lods
fwait
out
loop
out
fcmovb
inc
mov
test
adc
imulb
fsubrl
sbb
cmp
xchg
ds
add
mov
shlb
int3
dec
aaa
or
lret
mov
jbe
xchg
xor
adc
mov
nop
jle
mov
pop
icebp
aad
dec
outsl
std
mov
icebp
popa
loope
dec
fsub
jl
mov
add
xchg
sahf
je
into
xchg
mov
jg
int3
pop
sub
or
mov
test
xchg
js
jg
sbb
mov
mov
aad
jae
aaa
mov
ret
jle
mov
pop
sub
das
mov
pop
and
mov
push
fcoml
push
mov
xchg
aad
jl
pushf
ret
sub
movsb
cmpsb
xchg
and
sub
stc
jp
sahf
inc
idiv
push
fwait
and
cmp
int3
in
shrl
std
lds
adc
aas
add
je
iret
or
add
mov
push
hlt
jo
or
push
lret
mov
mov
xchg
push
pop
fwait
or
out
int3
and
adc
int
push
pop
repz
push
hlt
test
or
mov
ret
test
lods
jae
adc
pushf
dec
jb
mov
dec
inc
mov
pop
push
insl
add
fdivrs
mov
call
stc
pop
pop
jl
jnp
test
outsb
lret
or
dec
mov
inc
pop
sbb
popa
imul
mov
mov
xlat
push
loope
sbb
into
sti
inc
push
jno
cmp
cmp
rclb
and
dec
xchg
dec
mov
mov
add
movsb
cli
mov
sub
lock
mov
mov
fst
sar
cltd
test
aam
setl
or
mov
inc
adc
pop
sbb
mov
mov
mov
scas
enter
add
bound
cwtl
pop
mov
idivb
jnp
out
jp
cmp
test
and
test
mov
inc
lock
cmp
jno
in
sub
cmpsb
xchg
mov
fstl
hlt
int3
es
loop
fs
je
or
or
mov
pop
insb
mov
test
push
mov
fidivrs
xchg
imulb
mov
jmp
sbb
adc
and
jnp
imul
fisttpll
sub
xor
push
cltd
sub
add
cld
test
sti
daa
sub
jl
adc
pop
test
and
mov
in
sbb
mov
mov
int3
cltd
mov
out
push
test
ja
xchg
and
iret
imul
fiadds
sbb
and
jl
test
rcrl
and
xchg
mov
push
fadd
cmp
xorl
pop
mov
cwtl
das
test
sub
aam
or
dec
pop
or
xchg
shrb
imul
xchg
push
sbb
xchg
out
clc
inc
les
and
hlt
mov
jl
dec
mov
fs
stos
mov
test
and
sahf
jg
xchg
sub
scas
lea
popl
lret
or
fidivs
xchg
or
or
in
test
into
int3
sub
icebp
push
mov
jl
fcomps
adc
loop
les
jne
adc
in
inc
dec
inc
mov
lea
push
cmc
stos
ljmp
flds
hlt
and
loop
lds
jp
jl
inc
adc
stos
mov
push
in
subl
mov
int3
testb
add
aaa
mov
adc
cltd
std
mov
ss
inc
jno
out
rorl
das
and
xor
icebp
push
pop
jae
jmp
mov
jo
mov
sbb
inc
push
repnz
mov
ds
iret
repz
scas
pop
stos
jb
mov
rorb
mov
push
cmp
or
mov
vmaxsd
push
pop
xchg
daa
pop
add
negb
ss
in
cmp
xorb
mov
cmovno
cmpsl
leave
int3
push
add
sbb
in
lds
std
call
adc
mov
addr16
xchg
shlb
add
push
adc
cmp
jl
mov
push
lods
into
jne
xchg
ds
mov
mov
imul
aam
int
mov
adc
ss
aad
repz
test
es
dec
xor
imull
out
cmp
push
adc
out
out
cmp
fstps
or
add
and
adc
psadbw
mov
sbb
aad
mov
fidivrs
cmp
cmp
dec
pop
jp
ds
fadd
aaa
jbe
push
xchg
mov
pop
int
mov
scas
push
mov
fsts
sub
dec
ret
popa
cli
xor
out
dec
ret
mov
loopw
fsubl
out
cld
adc
shl
out
out
pusha
lods
cltd
clc
or
xlat
stc
xchg
pop
data16
add
loopne
testb
cmp
jl
popa
out
popf
mov
push
iret
inc
xchg
and
xor
sbb
test
adcb
loopew
xchg
out
mov
out
jmp
mov
cmp
scas
mov
test
outsb
add
jmp
sti
fnsave
cmpsb
adc
test
mov
mov
pop
fs
and
leave
out
fwait
js
push
jne
mov
adc
insb
insl
and
rcrb
mov
or
jae
mov
lret
dec
mov
pop
inc
sbb
mov
sub
roll
sub
rclb
test
xorl
fxch
hlt
mov
or
mov
inc
cmp
orb
shrb
cmp
ja
mov
or
dec
sahf
inc
or
push
mov
jo
add
cmp
out
inc
xor
fmulp
fmuls
lods
pop
add
icebp
andb
sti
aad
imul
and
sahf
aaa
push
jle
mov
test
adc
outsl
jl
lret
pop
cli
mov
fisubrl
cmp
and
dec
aas
movsl
cmpsb
jecxz
jmp
push
jle
popl
hlt
fwait
dec
adc
scas
popa
pop
bound
aas
cmp
cmpsb
adc
sar
je
lcall
cwtl
movsb
jge
scas
mov
hlt
nop
lret
add
mov
popa
mov
push
adc
into
addr16
jge
and
clc
mov
pushf
jnp
cmp
repz
xchg
insl
sbb
jns
sub
test
rcrb
cs
stc
jp
into
cmc
rcr
mov
les
jb
mov
pop
jmp
pusha
sub
jno
sub
test
mov
cld
dec
add
xchg
mov
into
cld
mov
data16
mov
jbe
inc
sbb
pop
ror
in
outsb
jl
jne
int3
test
mov
scas
xchg
flds
enter
das
je
xlat
lea
scas
mov
jns
es
lods
data16
lods
idivb
mov
pop
movsb
pop
lahf
test
loop
sbb
xor
rcrl
sti
loope
fiadds
sahf
mov
scas
fsubrl
jmp
loopne
in
fistl
push
inc
sub
xchg
rorl
xchg
sbb
jae
ds
stc
cmpl
push
pop
int3
jo
inc
out
xlat
outsl
push
dec
xchg
ficomps
cmpsl
nop
mov
test
mov
xor
sbb
sub
shlb
jecxz
xor
inc
xchg
stos
fstpt
in
loopne
pop
jne
dec
mov
dec
fnstenv
jo
adc
aam
fwait
lods
cmp
subb
or
push
mov
xor
movsb
and
push
xchg
prefetcht0
or
popf
jp
test
movsb
aaa
xchg
enter
fdivrl
cmpsb
jo
shrb
cs
mov
pop
repz
faddl
adc
cmpsl
cmpsb
pop
scas
sbb
xor
xor
dec
cs
sbb
xchg
push
std
push
shrl
jl
mov
cmp
lahf
test
jge
call
sub
rolb
in
inc
sbb
mov
leave
sti
das
adc
mov
scas
in
jge
pushf
mov
sbb
xlat
and
mov
mov
sbb
jne
in
pop
jbe
dec
sbb
or
jle
pop
mov
dec
fcmovnbe
push
pop
loopne
push
xchg
lods
and
mov
cltd
mov
sbb
add
cld
jl
lods
xchg
fsts
jmp
and
add
lods
test
or
sahf
mov
rorb
add
xchg
push
fldenv
xchg
cmp
fnstenv
push
mov
and
addl
mov
jae
fstps
pop
test
mov
gs
cltd
in
lds
push
push
movsl
dec
lahf
adc
mov
std
fidivs
das
xchg
out
jbe
scas
sub
jle
push
mov
mov
jp
hlt
cs
mov
ret
bound
mov
lds
inc
dec
stc
xor
add
pop
mov
out
int
pop
mov
jb
jo
lret
push
sbbl
lcall
orl
outsb
bound
inc
pop
test
mov
jle
inc
xor
movsl
mov
in
mov
cmp
and
mov
insl
and
addr16
clc
pop
mov
cmpsb
pop
mov
mov
mov
jnp
xchg
sbbl
mov
out
lahf
cmp
mov
mov
fcompl
test
xchg
jns
mov
rclb
stc
inc
dec
jmp
bound
pop
cli
add
scas
leave
fsts
sbb
cltd
sub
lods
inc
dec
repnz
aam
test
mov
sbbl
iret
lods
fdivr
inc
xchg
jl
test
rclb
or
jp
gs
cwtl
notl
inc
shll
mov
cltd
stc
cli
adc
and
fldt
int
flds
icebp
es
fisubrs
test
mov
and
fsubp
ja
fwait
and
sub
dec
mov
mov
sahf
push
mov
inc
fs
in
fstps
popf
mov
hlt
or
test
pop
push
and
int3
or
adc
mov
pop
pop
sahf
shlb
ret
pop
adcb
enter
dec
mov
sarl
dec
aam
lods
out
imul
jnp
mov
xchg
pop
xor
icebp
enter
mov
and
sbb
pop
cmp
repz
sub
dec
mov
lods
dec
jg
mov
xor
std
mov
mov
cmpsb
push
repnz
mov
cmp
inc
jae
pusha
jno
sbb
push
pop
dec
mov
out
ja
lret
out
xor
xor
mov
daa
and
sub
mov
xchg
int3
popf
fldcw
sbb
scas
pop
push
mov
leave
cli
jp
sub
mov
les
hlt
mov
xor
fcmovnb
lret
lea
js
pop
lock
and
sbb
imul
push
aaa
mov
lahf
xchg
and
xchg
mov
lods
inc
jae
ja
sbb
add
mov
mov
jmp
out
and
scas
mov
jae
jp
mov
fs
push
adc
rclb
jno
or
in
sahf
cmp
jp
jle
cli
pusha
dec
lret
mov
and
xor
pop
andb
jl
jecxz
dec
fildll
mov
jo
mov
push
les
dec
xor
dec
mov
dec
int3
std
sarb
inc
aad
das
dec
faddl
sbb
imul
inc
lds
icebp
push
movsb
stc
int
test
pop
jecxz
jmp
std
inc
pop
std
cmp
or
push
dec
in
mov
inc
xchg
pop
cmpl
int
outsb
inc
rcrb
or
loope
mov
flds
push
sub
inc
pushf
mov
scas
dec
adc
xchg
inc
scas
add
outsb
je
or
sub
mov
scas
mov
sbb
xor
sbb
imul
int3
jne
mov
stc
jno
xlat
aaa
das
push
inc
jle
mov
cmpb
pop
idivl
dec
lods
in
fldz
xchg
fldl
xlat
mov
jle
repnz
fisttpll
pop
insl
aas
pop
mov
mov
push
movsl
ss
sbb
jmp
fdivl
hlt
shll
xor
push
daa
pop
xchg
out
arpl
out
add
xchg
mov
lods
inc
in
push
xchg
repnz
mov
mov
xchg
out
sub
jno
push
or
push
lods
loope
dec
mov
sbb
mov
sahf
add
std
fldenv
push
out
scas
sbb
sbb
andb
jp,pn
mov
movsb
inc
dec
ja
mov
inc
mov
fimuls
pop
int3
loope
mov
cmp
push
jbe
jmp
shlb
mov
push
cs
in
call
loope
data16
out
xchg
mov
jecxz
test
arpl
dec
cmp
gs
add
les
movsb
das
iret
dec
add
ret
push
sub
push
or
xlat
fiaddl
push
jge
dec
data16
clc
mov
jae
pop
pop
fs
rclb
xchg
xor
mov
pusha
movsb
mov
dec
scas
and
gs
push
jmp
in
inc
pop
lahf
adc
test
ja
aaa
int3
cmp
inc
int
sub
xchg
lods
mov
sbbb
xchg
pusha
mov
mov
std
fmul
mov
xchg
jge
mov
cld
jecxz
jns
cld
jecxz
xor
cmp
mov
rcl
or
adc
int3
mov
inc
cld
bound
jmp
cmp
jno
push
dec
lods
cmpsl
mov
mov
pop
xchg
sbb
sub
fmull
mov
cld
ror
jmp
in
in
shlb
inc
mov
fstpl
mov
and
cmc
xchg
cmp
cmp
fstps
jp
clc
shll
popf
and
movsl
inc
enter
jle
cmp
aas
arpl
mov
mov
subb
add
pushf
test
mov
cmp
es
flds
mov
xchg
aam
jge
push
fistpll
mov
test
mov
test
xor
push
xchg
aam
jge
jp
jae
jo
mov
das
mov
dec
push
into
cmp
outsb
inc
lahf
mov
jno
mov
xlat
add
and
inc
inc
mov
std
dec
decl
mov
or
push
add
popa
fnstcw
test
mov
inc
mov
push
ss
cmp
mov
cs
mov
pushf
call
or
pop
adc
jnp
jb
xchg
mov
lds
pop
adc
fisubrs
jno
ljmp
popf
in
push
pop
fdivrl
inc
add
rcr
sub
std
add
inc
movsl
mov
xor
jno
cmpsb
fldl
push
inc
fistl
test
dec
sbbb
inc
mov
and
mov
sbb
xchg
orb
mov
sbb
in
daa
sarl
dec
ret
cmp
pop
enter
leave
test
sbb
push
sub
mov
push
icebp
push
xchg
jecxz
jecxz
mov
mov
sbbb
gs
xchg
movsb
lods
mov
adcl
int
xchg
sbb
call
das
nop
fmull
xchg
out
jle
adc
push
mov
inc
fnstcw
jle
jp
enter
mov
insb
notl
in
xchg
inc
mov
sub
std
lds
int3
inc
add
leave
roll
sbb
dec
aaa
mov
mov
dec
dec
xor
cmp
dec
lcall
mov
mov
cs
pop
fld
pusha
mov
lahf
dec
jle
mov
fstl
andl
dec
in
xchg
test
mov
pop
test
add
fisubs
sbb
pop
push
pushf
pop
inc
scas
push
flds
popf
mov
mov
fdivrp
clc
popa
mov
pop
inc
fs
shrb
fistpll
imul
lcall
xchg
in
cld
add
test
out
test
mov
fsubp
xor
mov
daa
jbe
outsb
insl
xchg
pop
xor
sahf
add
or
outsl
int3
adc
sti
rcrl
in
mov
je
test
adc
mov
push
test
movsb
movsl
repz
rolb
cmpl
call
sub
ljmp
jnp
push
xchg
push
cmp
imul
jg
mov
scas
fnstenv
loop
into
lods
mov
xchg
pop
je
cmpsb
in
mov
xchg
adc
stos
lea
mov
popf
xor
jae
lods
and
iret
fdivrl
xlat
mov
jge
out
fs
aaa
std
fiadds
fsubrl
fsubrs
xchg
mov
inc
mov
ror
dec
pop
loopne
mov
es
mov
mov
enter
int
fwait
sbb
mov
and
sub
dec
dec
fst
dec
xchg
jecxz
insb
pushf
test
rcll
imul
ret
cmc
xorl
inc
and
mov
push
cwtl
cmpb
insl
mov
popa
mov
fstl
int3
negb
mov
lock
out
add
addr16
inc
imul
std
sub
aaa
les
adc
mov
div
dec
jbe
dec
data16
test
xchg
movsb
addl
fsts
movsl
cwtl
int3
inc
fdivrs
lea
fisttps
push
jo
push
push
or
scas
mov
cmp
xor
sbb
scas
test
cltd
adc
jnp
mov
mov
int
sub
lock
scas
jp
test
inc
scas
jge
push
push
dec
xchg
xor
push
jno
dec
out
rclb
aam
xorl
iret
push
xchg
mov
lfs
sbb
into
lret
jno
je
adc
sub
sub
push
jnp
test
sbb
or
inc
stos
mov
cld
fwait
and
jae
dec
dec
hlt
xor
cmc
xor
fwait
fs
cmpsb
in
scas
stos
lcall
outsl
test
enter
flds
or
lea
into
jne
adc
cmpsb
push
push
fstpt
push
xor
in
repz
dec
ja
jbe
jbe
dec
and
jbe
xor
cmp
pop
cmp
mov
in
sbb
loopne
clc
gs
xchg
mov
scas
addl
movsl
sub
fldenvs
sbb
mov
cld
div
icebp
aas
mov
stos
leave
cmpsb
test
sub
mov
mov
xor
movsl
inc
mov
loop
sbbb
dec
dec
into
cwtl
mov
sbb
or
sbb
negb
sbb
pop
inc
xor
push
add
ret
push
mov
mov
das
int
imul
mov
lahf
sbb
int
jnp
mov
mov
adc
gs
jb
dec
jne
ss
lahf
out
jg
loope
loopne
mov
xchg
in
icebp
enter
push
jmp
push
mov
inc
lods
xlat
sbb
adc
icebp
add
sti
test
cmp
stc
fsubs
push
jne
imul
jmp
rcll
dec
cld
rol
mov
insl
jno
js
inc
mov
loope
push
lcall
cli
sub
jbe
push
cmpsl
dec
dec
fwait
jb
loope
mov
popf
test
xchg
push
addr16
mov
out
pop
jl
mov
xor
gs
xor
xchg
sti
cmp
jecxz
add
cld
and
gs
out
clc
mov
jmp
shll
es
cmp
in
push
test
mov
mov
das
int3
sbb
hlt
jno
mov
mov
jnp
fincstp
lcall
adc
and
lret
mov
dec
fstp
add
push
mov
sub
cmp
cmpsb
shlb
inc
xchg
cmp
ds
xchg
aad
cli
cmp
ficoml
fstl
jge
ds
and
sbbb
into
add
scas
add
int
adcl
mov
push
cs
ffree
sbb
push
mov
mov
push
shll
dec
scas
push
dec
dec
xlat
lds
push
icebp
inc
and
dec
scas
cltd
push
call
lahf
mov
mov
inc
adc
add
pop
or
push
not
mov
test
sbb
jbe
aas
sar
cmc
scas
scas
push
fsub
sti
icebp
pop
jl
mov
imul
cltd
xchg
adc
das
inc
cmp
mov
addr16
adc
repz
decb
in
inc
test
push
and
mov
imul
jecxz
add
stos
test
mov
jl
popa
scas
jns
repz
xor
push
add
orb
xchg
call
das
mov
lcall
xor
adc
mov
sub
in
mov
jb
mov
mov
fcomi
mov
test
inc
mov
jne
jp
jb
popf
jns
jge
mov
mov
int
pop
or
lock
inc
and
daa
sbb
repz
gs
xchg
dec
xchg
jg
in
inc
cmpsb
cmp
mov
loopne
dec
pop
out
cmp
or
push
sub
loope
lahf
pop
sbbb
ss
push
pop
into
mov
sahf
out
stc
jmp
dec
fdivr
cmp
and
icebp
mov
dec
repz
sbb
push
orb
repnz
shrl
flds
icebp
aam
data16
imul
sarl
js
outsb
mov
or
das
mov
sti
and
cmp
xchg
inc
es
in
mov
mov
mov
fsubr
or
fs
gs
cmp
dec
shlb
addr16
mov
subb
dec
add
lahf
dec
xor
notl
or
mov
in
insb
mov
mov
pop
ret
movsb
xchg
in
into
adc
scas
mov
pusha
cmp
mov
dec
jp
jmp
xor
pop
rorl
fstpt
gs
jne
je
enter
fwait
cmp
mov
aam
cmpb
push
testb
jns
movsl
enter
outsl
aaa
mov
lods
adc
or
rclb
nop
cmp
inc
test
movsl
cld
mov
dec
test
sub
leave
push
mov
pop
loope
ret
fsin
jne
fcompl
jo
pusha
test
in
addb
loop
inc
xor
int
fistpll
push
mov
mov
test
push
and
clc
out
sahf
lret
pop
jne
stos
mov
or
scas
iret
push
and
sbb
mov
lret
jbe
jne
test
xchg
gs
mov
fsubrl
xchg
mov
dec
xor
mov
in
sahf
inc
das
mov
mov
mov
xor
push
std
cmpl
push
into
jg
mov
sbb
or
scas
sahf
test
jae
cmp
cmc
xchg
sub
sbb
nop
pusha
jo
andl
sbb
les
sub
cs
je
leave
std
xchg
mov
insb
cld
pcmpgtb
addb
inc
adc
out
or
xchg
adc
movsl
hlt
mov
loopne
mov
insb
pop
test
fcompl
adc
scas
jge
adc
popa
cwtl
es
sbb
push
jmp
push
inc
int
mov
inc
mov
xchg
mov
xchg
imul
hlt
arpl
sbbl
mov
inc
rorb
add
inc
jg
sbbl
js
xchg
dec
add
pop
popf
stos
pop
pushf
test
flds
lret
in
add
sub
notl
jbe
jge
adc
scas
cmp
leave
stos
les
dec
push
push
cmp
lret
sbb
data16
and
iret
out
add
mov
mov
loop
inc
dec
sub
js
lods
sub
adc
push
xor
dec
xor
stc
mov
je
dec
mov
lea
int3
pusha
fcoml
cltd
and
rolb
test
push
adc
repz
std
mov
gs
add
popf
icebp
aam
scas
test
mov
mov
adc
cmpsb
jmp
sub
cwtl
inc
inc
clc
andb
es
mov
mov
sahf
sub
mov
in
stos
shl
pop
minps
jns
push
pop
aam
adc
jl
aaa
aam
pop
pop
lods
mov
mov
xchg
and
out
dec
dec
arpl
icebp
out
jl
sahf
ja
mov
or
fsubl
or
mov
mov
insb
mov
add
popa
aaa
jo
fidivs
out
sbb
insb
mov
mov
or
in
mov
in
sbb
sti
push
mov
pop
aam
mov
outsb
ljmp
push
test
inc
cmp
loope
aam
leave
ja
cmp
out
sub
add
aaa
stos
jecxz
ja
ret
pop
loop
mov
cmp
lock
dec
fnsave
or
cmp
xor
xchg
jae
rolb
into
mov
sub
cmp
xor
xchg
icebp
out
pusha
out
aas
es
sbb
fcoml
mov
loopne
xor
inc
out
adcb
push
cmp
inc
cmpl
enter
fwait
pandn
push
mov
int
pop
popf
mov
add
jle
push
mov
loop
inc
or
mov
push
mov
lock
and
jae
inc
je
xor
arpl
loope
in
inc
mov
loop
test
loop
test
push
fstl
jo
adc
mov
test
stc
cmp
jne
mov
mov
stc
pop
jbe
or
rcll
and
cli
addl
repz
call
fldenv
or
pop
lods
lcall
enter
std
int3
lods
mov
daa
addr16
add
dec
jl
insb
inc
out
fcom
test
sbb
es
sub
addr16
add
and
inc
xor
sti
loope
or
xchg
inc
sbb
or
insb
es
mov
push
fcompl
lods
das
popf
test
pushf
add
dec
or
sbb
fiadds
mov
fcomip
sbb
cmp
out
push
das
addl
sub
jmp
cmp
rolb
xchg
std
mov
lcall
loope
test
imul
or
cmpsl
mov
adc
jl
xor
add
fnstenv
sbb
pop
mov
enter
popf
push
xchg
gs
cmpsl
dec
ret
stos
xchg
push
jbe
and
mov
inc
jmp
pop
pop
and
pop
or
fwait
add
cmp
mov
out
das
jno
fldt
sbb
lcall
or
sbb
dec
inc
popa
adc
and
cmpsl
pusha
fwait
ja
cs
dec
pop
lods
mov
call
inc
loope
jecxz
aam
dec
mov
imul
mov
mov
fsubrs
cwtl
ficomps
fisttps
sbb
xchg
out
into
ja
loopne
jge
dec
mov
sahf
hlt
mov
scas
es
sbb
in
pop
pop
xchg
div
xchg
add
sbb
hlt
std
mov
aad
out
jmp
jne
lods
push
dec
sub
rcrl
outsl
hlt
sub
inc
int
inc
pop
js
fnop
pop
cmp
ror
and
jmp
in
into
adc
and
and
lods
mov
xchg
sbb
out
push
mov
enter
xor
repz
sbb
cwtl
jb
pop
mov
repz
fidivrs
and
pushf
fsts
xchg
pop
jbe
push
jns
add
std
jno
lcall
or
lret
dec
lahf
scas
cltd
xchg
aaa
lcall
xor
nop
shll
add
jle
mov
rorl
push
fsubl
arpl
popa
mov
adc
jbe
call
jae
inc
push
daa
cmp
std
das
repz
mov
gs
xrelease
cmc
repz
stos
call
in
fsubrl
std
ljmp
jle
adc
jg
mov
mov
mov
jno
mov
pop
into
cs
or
sbb
pop
mov
fstl
adc
in
fsts
xchg
cltd
add
popa
jae
stc
outsb
lds
es
mov
xor
mov
shlb
jns
fistl
push
in
clc
addb
std
mov
sub
sub
xchg
fstps
js
ret
cmpsl
mov
cmp
fldl
fdivl
in
mov
push
fcompl
mov
outsl
adc
scas
inc
mov
insl
cmp
aad
aas
movsl
loope
mov
in
int
hlt
push
movsl
pop
arpl
dec
pop
sbbb
xchg
inc
testl
lock
mov
inc
mov
ret
jge
mov
and
and
fisubrs
sarl
mov
push
xchg
jle
dec
jmp
add
dec
jns
cmc
mov
cmp
xor
int
incb
lods
and
mov
outsb
out
xchg
aad
jo
pushf
andl
lea
ja
sbb
pop
repnz
repz
sbb
cmpsl
lods
shr
out
leave
fidivrs
and
inc
mul
data16
js
pushf
or
nop
fstps
fadds
xor
dec
sub
aam
xor
sar
out
aas
in
inc
shl
out
mov
adcl
scas
mov
adc
jo
pop
sub
push
jge,pt
inc
cmp
leave
jg
pop
movsl
add
int
cmp
out
dec
ss
rclb
fsub
sbb
in
loop
pop
loop
push
inc
out
jae
adc
mov
frstor
xchg
sub
xchg
icebp
mov
pop
sub
fnstenv
and
mov
mov
sbb
lahf
mov
mov
push
xchg
out
mov
stos
inc
mov
cmc
dec
sbb
xor
sbbb
sbb
repz
dec
add
std
imul
out
shrb
mov
sahf
js
cmp
jp
pop
fmul
sub
push
inc
aam
lods
xchg
jmp
dec
xlat
dec
pop
sahf
or
dec
fcompl
dec
cmp
into
cli
sub
mov
out
ret
mov
arpl
xorl
or
mov
mov
cmp
pop
sub
lea
cmp
jp
int
cmp
sarb
jge
cwtl
xchg
pop
outsb
adc
flds
lret
pop
mov
jmp
lcall
cs
sbb
mov
sbb
dec
scas
es
call
test
in
lods
fsub
and
ud2
mov
mov
std
fldcw
fstps
fisubl
sub
xor
fnstenv
arpl
into
shlb
mov
les
pop
sar
test
xchg
lds
pop
xchg
pop
pop
sbb
pop
or
xor
jo
or
daa
stc
fxch
inc
cmp
xchg
dec
adc
push
das
adc
loop
imull
mov
push
out
xchg
mov
inc
popf
mov
out
int3
fs
pop
jmp
icebp
add
test
or
in
sti
jle
rorl
roll
jge
js
mov
in
fwait
jmp
pop
lods
jae
pop
iret
pop
jnp
jbe
adc
sub
ret
inc
mov
add
fsubr
mov
test
mov
iret
mov
cmc
mov
xchg
loop
inc
lahf
aaa
mov
scas
fisubs
clc
sbb
inc
pushl
ret
andb
dec
repz
stos
mov
ds
sbb
mov
int3
dec
cmpsb
add
xor
ss
push
cmp
cmp
mov
jae
adc
jl
xor
add
das
stc
dec
les
ss
jae
sub
xchg
push
int3
iret
imulb
cmpsb
cs
push
sbb
push
shl
outsb
jns
jl
xor
jbe
dec
sub
repnz
aad
test
mov
and
or
hlt
jbe
inc
xlat
pop
or
lcall
cmpsl
ljmp
lea
mov
shl
das
test
lods
stos
pop
out
add
cld
imul
in
sbb
pop
lods
and
xor
cmc
fistl
sahf
cmpsl
push
pop
and
sbb
xor
fisubrs
scas
pop
mov
repz
in
dec
or
inc
lcall
push
fdiv
cmp
xchg
mov
in
lea
xchg
int
push
adc
adc
gs
and
scas
movsl
cmp
out
test
imul
ffree
mov
xlat
xor
jo
iret
mov
dec
sbb
mov
scas
gs
mov
sub
jecxz
aaa
dec
subb
jae
xlat
add
xor
mov
and
enter
add
in
or
push
int
mov
fistpl
pushf
cmp
cltd
jmp
sysret
es
add
lret
push
dec
pop
fdiv
mov
mov
mov
dec
lock
sub
adc
loope
stc
dec
leave
pushf
xor
roll
pop
mov
es
nop
mov
movsl
test
notb
xchg
xchg
es
iret
test
daa
mov
lods
mov
sub
mov
test
and
add
stos
mov
mov
pop
sbb
jns
ss
xor
repz
movsb
cld
push
sbb
adc
fwait
cli
inc
cmp
adc
std
sbb
loope
sbb
sbb
scas
int3
xchg
jns
lods
jae
push
dec
std
cltd
lods
mov
sbb
stos
sub
rcr
mov
sbb
rorb
lds
std
cmpsb
mov
xor
push
lds
mov
add
repnz
mov
cwtl
jecxz
cmp
xor
dec
xchg
repz
loop
aaa
mov
insb
inc
and
mov
mov
enter
inc
aam
sbb
add
sub
pusha
rcrb
dec
xchg
lock
in
mov
rol
addr16
adc
cmpl
inc
mov
mov
cmp
cmp
dec
pop
push
mov
xor
mov
lods
in
sbb
mov
shlb
cmp
lods
and
mov
jecxz
lahf
test
jnp
jne
jp
cmp
stos
lods
cld
push
dec
lods
leave
push
scas
mov
push
mull
orl
mov
mov
jae
inc
fiadds
pushf
or
lods
out
fxtract
dec
xchg
movsb
and
jo
in
xor
shll
or
sbbb
sti
push
les
popf
es
or
fwait
sbb
mov
sub
cli
mov
push
in
jae
cwtl
push
cs
cmp
adc
rcrl
test
dec
es
es
or
lods
and
fisttpl
std
jae
in
jp
jo
std
mov
sarb
sbb
jp
mov
arpl
stos
nop
mov
frstor
out
ror
sbb
clc
jo
fdivrl
xor
scas
popa
mov
test
lret
pop
jo
push
fidivrs
flds
cmpl
loop
jbe
ja
or
jne
stc
dec
xchg
xchg
push
fcmovnu
xchg
scas
pop
jb
mov
sbb
xor
fisubl
outsb
sbb
lock
jge
cmc
pop
dec
fdivl
mov
nop
inc
push
jb
es
xchg
inc
mov
xor
push
mov
jl
daa
outsb
and
push
in
mov
dec
call
xchg
pop
rcrb
shll
cmp
cmp
jae
addr16
shll
inc
fsubrl
inc
sub
int
dec
data16
mov
mov
test
or
fldt
mov
mov
dec
mov
xchg
xchg
mov
shll
pop
ss
pop
in
in
mov
sbb
vpmaxub
hlt
lods
mov
mov
pop
push
jnp
movsb
dec
add
mov
mov
push
arpl
cld
push
xchg
cs
adc
inc
mov
aaa
jbe
xchg
mov
ss
in
flds
fldl
jmp
cmp
or
push
dec
arpl
jns
inc
push
icebp
sbb
sbb
nop
jecxz
mov
and
push
stc
cmp
adc
and
mov
mov
popf
adc
aad
or
nop
rol
fs
popa
pop
adc
and
mov
ret
add
mov
repnz
sub
ret
stos
andb
inc
dec
add
push
push
mov
xchg
mov
pop
add
xlat
jmp
jno
cmpl
fnsave
repnz
scas
sbb
sbb
fnsave
out
aam
and
or
js
pop
imul
xchg
je
in
xchg
out
in
mov
push
sub
pop
leave
aam
xchg
loope
out
or
or
stos
sbb
adc
cmp
push
sub
dec
sti
mov
ret
sub
dec
out
test
inc
mov
mov
sbb
out
xchg
out
pop
es
dec
xchg
das
rcll
shlb
add
movsl
pop
mov
fsts
mov
xor
test
ss
repz
cmp
sahf
jmp
push
mov
push
les
nop
adcl
daa
cmpsl
mov
add
scas
add
sub
fdivr
ret
cli
mov
je
out
push
cmp
cmp
addl
mov
roll
ror
ljmp
jns
scas
push
jo
sub
shrb
pop
or
mov
movsb
and
jne
push
mov
test
daa
imul
jo
jno
arpl
sub
push
pushl
lods
cmpsl
dec
sbb
xchg
push
sbb
vmwrite
inc
fistps
das
lret
jae
sbb
sub
adc
jecxz
push
outsl
pop
test
xor
mov
cmp
pop
xchg
inc
stos
mov
repz
cli
test
loopne
push
nop
dec
and
ljmp
insb
js
xchg
or
pusha
movsl
xor
lcall
popf
cmpsb
mov
ss
and
jo
xor
sub
out
inc
ret
jl
inc
aaa
mov
jb
pusha
repnz
mov
leave
fsubrs
dec
test
lret
inc
adcl
std
out
out
jecxz
pop
mov
or
scas
push
lret
sbb
insl
xchg
dec
xchg
xor
push
xor
flds
mov
mov
divb
aaa
xchg
inc
cmpsl
cmpb
push
jo
cmp
inc
mov
test
and
lret
fisubs
or
mov
in
out
sbb
imul
dec
int3
mov
aam
mov
mov
out
or
repz
subl
adc
fs
add
mov
loop
sbbl
cmp
add
dec
cmp
xchg
mov
push
pushf
shr
mov
imul
es
inc
shlb
sahf
out
popa
jnp
mov
pop
mov
dec
add
ret
daa
mov
cmp
mov
stos
cmovno
es
inc
fildl
gs
sbb
cmc
xchg
jmp
pop
xor
scas
cmpsl
sbb
cli
pop
lods
shrl
fcomp
lahf
popa
out
push
push
mov
into
sub
int
lret
adc
sub
int
xchg
je
fldcw
push
test
mov
fldl
in
mov
int
popa
xchg
test
in
sub
stos
xchg
scas
inc
int3
xor
testl
lret
push
xchg
test
nop
adc
js
cmp
add
sub
push
sbb
mov
mulb
and
fnstenv
sbb
test
test
movsb
cmpsl
cmpsl
xchg
mov
fwait
jmp
xor
movsl
jge
inc
lods
fsubrs
insl
sarl
or
mov
clc
les
scas
movl
cmc
mov
in
pop
cli
mov
mov
loopne
mov
or
test
and
in
mov
das
aam
test
jmp
aad
js
movsb
and
movsl
out
sbb
in
xor
nop
inc
jle
repz
inc
push
pop
mov
xchg
jnp
nop
dec
fwait
push
mov
mov
jge
and
movsl
fsts
fists
shrl
xchg
cmc
xorb
or
shrb
aam
push
and
adc
dec
jecxz
ds
sub
xchg
lret
jb
in
test
mov
mov
mov
int3
mov
xchg
push
fstps
mov
dec
repz
mov
push
xchg
cmp
add
lods
mov
fwait
out
pop
pushf
push
fadds
stc
mov
scas
sub
and
push
imul
mov
and
cmpsb
inc
aas
rcll
rorl
adc
or
std
push
jb
es
movb
cmpsl
or
mov
test
ljmp
scas
addr16
inc
mov
adc
mov
lods
pop
mov
adc
mov
movsl
mov
xchg
jp
test
repnz
xchg
push
jp
push
fsubrs
inc
sub
insl
faddp
in
notb
mov
fisubrl
movsl
daa
inc
push
mov
ss
movsl
sub
or
cmp
test
pop
mov
sbb
mov
cmp
jecxz
mov
cmp
xchg
mov
test
or
adc
inc
or
adc
jmp
fsubl
push
jmp
push
testl
les
add
push
js
push
dec
enter
icebp
or
push
in
fisubrl
dec
and
jp
out
push
jecxz
shll
lods
cwtl
pop
fstps
outsb
inc
pushf
out
adcb
dec
jnp
add
lods
insl
mov
movq
in
fsincos
loopne
aad
out
call
push
push
lret
mov
les
out
or
mov
xor
mov
jo
pop
jae
xchg
rorb
add
jle
adc
adc
jge
cmp
fwait
fwait
or
lods
or
lea
and
hlt
dec
inc
mov
scas
sbb
adc
jne
jl
outsb
xchg
adc
xchg
mov
lret
fnstcw
popa
cmp
mov
test
shll
sahf
push
out
xchg
inc
lahf
imull
pushf
adc
in
jecxz
dec
add
inc
cmp
cmp
xor
out
adc
jp
sbb
mov
xchg
insl
jg
mov
hlt
push
jecxz
jno
push
jae
int3
mov
arpl
jnp
cmp
sub
sbb
inc
push
cli
clc
cmpsb
movsl
add
mov
add
xchg
int
cmc
stos
adc
int
fdivl
cmp
fwait
push
or
sub
and
es
cmp
int
sahf
dec
sbb
sarl
mov
cmp
into
adc
cmpsb
push
add
cld
push
sub
fldenv
xchg
or
fdivr
or
jns
repz
test
pushf
pop
in
ja
add
pop
xor
mov
std
cld
cmp
and
rorb
imul
cwtl
sub
mov
and
xor
imul
mov
mov
inc
imul
test
popf
pop
call
fs
data16
and
xor
cmp
mov
and
fsts
stos
repnz
adc
daa
sbb
xor
sub
push
call
movsb
or
lcall
leave
add
mov
dec
int3
and
dec
add
cmpsl
sbb
cs
nop
lea
lods
sub
outsl
icebp
test
adc
and
movsb
adc
lret
lods
out
out
lcall
push
sbb
subb
mov
fldcw
jae
fnsave
inc
mov
fwait
scas
sahf
repz
xchg
lods
cmpsb
scas
jb
dec
loopne
shrl
mov
or
daa
jge
dec
out
adc
addr16
pushf
mov
in
mov
sahf
mov
and
call
aad
push
xor
inc
aas
inc
insb
mov
sbb
ret
dec
out
es
aam
mov
jne
cmpsb
outsb
mov
jp
mov
mov
pop
dec
sahf
push
loope
loopne
rolb
test
out
in
mov
lcall
fcomp
or
sbb
cmpsl
in
jmp
dec
nop
jmp
jge
cmp
jl
fildl
inc
addr16
jge
js
lahf
or
shll
sbb
lea
flds
repnz
push
sub
ss
sbb
push
lods
stc
xchg
daa
decl
mov
jo
fiadds
jmp
mov
add
es
xchg
mov
mov
ret
jecxz
mov
sbb
mov
lods
and
out
add
rorl
fwait
loopne
aam
lock
nop
cmpsb
sbb
popf
lock
pop
popf
cmpsb
lods
push
lds
ljmp
out
adc
outsb
mov
mov
shrb
fwait
and
in
js
sbb
inc
sub
inc
ret
clc
scas
dec
ficoml
and
xor
and
push
cld
loopne
int
scas
mov
popf
sahf
in
jg
not
mov
jns
testb
xchg
fcoml
push
in
add
mov
loop
mov
hlt
rorl
insl
pop
shrb
mov
cmpsb
dec
sub
out
out
push
pop
cli
or
jecxz
fwait
sub
fisubrs
push
mov
das
fisubrs
adc
movsb
or
aas
mov
dec
push
lcall
push
cmp
roll
mov
and
mov
cmp
outsb
dec
mov
inc
mov
jae
jge
pop
imul
inc
mov
pop
inc
call
cli
pop
dec
pusha
call
imul
mov
aaa
jnp
push
jle
mov
mov
dec
sbb
or
push
pop
rcr
sub
jnp
mov
std
das
mov
mul
lahf
ja
jg
sahf
out
mov
push
cld
sbb
fnstcw
cmp
in
push
add
inc
xor
mov
add
daa
int3
test
add
xor
pushf
and
mov
aaa
add
outsb
mov
ja
into
push
jo
jo
jmp
pop
and
lret
faddl
mov
lret
rorb
mov
popf
mov
mov
pushf
loope
in
addr16
fnstenv
xchg
jo
sbb
mov
xor
sarb
xor
mov
pop
popa
adc
jp
ljmp
fcoms
fsts
push
test
jno
ljmp
pop
jbe
cltd
or
clc
or
fildl
push
pop
mov
jecxz
test
mov
push
mov
push
fstpt
lcall
sahf
sbb
jle
push
scas
mov
sub
mov
addr16
mov
sahf
xor
inc
in
xchg
sti
pop
sub
sbb
sub
in
in
jo
jecxz
mov
adc
adc
pop
scas
test
xor
adc
flds
aad
jae
imul
mov
jbe
pop
mov
jg
push
sub
cmpsl
jo
jne
jae
shlb
mov
push
or
data16
mov
test
daa
mov
or
gs
lea
or
pop
adc
jle
pop
loope
daa
sub
push
fcompl
int3
jmp
out
ret
jle
sbb
jge
hlt
xchg
xchg
in
xor
fidivs
or
call
mov
adc
pop
loope
lret
test
jl
xor
fwait
dec
pop
enter
push
gs
add
jge
stos
xchg
xor
pop
sbb
and
into
dec
popf
lods
and
movsl
mov
popf
push
adc
ret
xchg
lahf
in
adc
mov
stc
ja
mov
jmp
and
jae
push
or
pop
push
sbb
inc
sahf
jbe
mov
xchg
mov
lds
xorl
dec
or
mov
rorl
xor
xchg
sbb
std
hlt
fsubrs
es
pop
popf
jbe
or
mov
movsb
push
xchg
ss
iret
hlt
cli
test
mov
sti
imul
ds
call
out
jmp
ljmp
cmp
mov
pop
lahf
sub
add
mov
sub
nop
test
shlb
fst
push
mov
sbb
add
movsl
mov
scas
inc
hlt
inc
lods
sub
cmp
or
jae
out
fwait
dec
fdiv
mov
in
jecxz
divb
jb
fidivs
std
movsb
inc
cmpsl
sbb
popf
addb
std
jne
mov
leave
cmp
xor
inc
clc
stc
fisubrs
lock
cmc
and
in
repz
mov
mov
out
push
int3
test
push
and
sbb
into
mov
movsl
sub
out
sbbb
xor
inc
mov
jmp
in
xchg
dec
push
jecxz
mov
faddl
add
xchg
push
dec
inc
push
mov
int3
xchg
push
lods
scas
xchg
outsb
cmpsl
xchg
sbb
scas
xchg
mov
fsin
mov
fimuls
sbb
dec
fisubs
aam
sbb
mov
and
add
or
out
outsb
add
scas
pop
pusha
test
and
ljmp
stos
inc
and
in
test
jecxz
notb
pop
outsb
into
pop
inc
ret
sbb
mov
ret
pop
repnz
inc
imul
or
xchg
sub
mov
mov
repz
pop
adc
aaa
lcall
xor
out
int
or
push
sbb
mov
aas
add
hlt
sbb
in
mov
adc
xor
xor
ja
leave
scas
pop
mov
mov
faddp
call
add
daa
adc
pop
push
or
jmp
adc
mov
dec
mov
in
xor
jl
fxch
dec
call
pop
mov
mov
fistpll
mov
sti
sbb
push
mov
jmp
mov
jmp
sub
into
int
xor
insl
jo
out
orl
jae
cmp
gs
mov
subb
mulb
pushf
mov
xlat
fisubs
sbb
cmp
inc
xchg
test
stos
inc
sbb
add
mov
shrl
dec
jnp
incb
fdivrl
dec
add
mov
xlat
or
push
cmp
inc
fldcw
or
xchg
inc
cmp
mov
testl
jbe
mov
repnz
in
divb
mov
mov
pop
sti
lret
push
mov
mov
ret
aam
ret
imul
and
popf
mov
jl
lock
sub
lds
pop
pushf
jnp
fstl
lahf
orb
mov
pop
pop
lods
mov
inc
pop
ss
psubsb
pop
sub
mov
scas
dec
mov
sti
inc
push
xchg
dec
push
or
inc
mov
iret
fistpl
rorl
les
sbb
cmp
std
mov
and
xor
push
push
addr16
mov
scas
push
ficoms
scas
iret
test
add
pop
mov
lret
push
in
leave
dec
clc
addl
sbb
xchg
add
and
cmp
lahf
nop
cmp
cmp
arpl
mov
xlat
adc
push
jbe
cmp
add
xor
and
in
jl
ror
cmp
xchg
fld
cmp
and
fdiv
cs
xchg
scas
imul
fstps
ret
cs
pcmpeqw
fiadds
mov
push
adc
fstpl
cltd
mov
sbb
movsl
cmp
adc
ss
int
mov
scas
jle
fbld
and
inc
dec
inc
cld
jno
ret
in
mov
sbb
dec
mov
jbe
negb
popa
mov
adc
pop
cmpsl
pop
push
xor
aam
shrl
shrl
xor
mov
push
add
sub
movsl
in
cld
cmp
fwait
adc
cwtl
imul
adc
fstpt
in
sub
sub
outsb
cli
and
loopne
insb
cmp
push
iret
pop
xlat
cmp
jae
ljmp
dec
mov
stc
adc
das
cmp
mov
mov
sub
sub
xchg
pushf
push
pop
cmp
mov
mov
dec
icebp
mov
fstpl
xor
lea
cmpsb
sbb
jae
xor
pop
sub
int3
xchg
cmc
pushf
test
mov
jb
jnp
sub
xchg
sbb
cld
sbb
xchg
mov
lahf
addr16
mov
movsl
dec
sahf
jbe
push
sbbb
inc
inc
xchg
xor
push
lret
add
and
mov
xor
mov
mov
jge
je
pop
std
jl
pop
dec
or
push
and
cmp
lahf
rcll
adc
in
pop
mov
frstor
sbb
mov
int3
fiaddl
movsb
fdiv
out
and
jle
jge
dec
fsts
dec
or
in
dec
or
cmp
std
xor
fwait
push
popf
mov
dec
dec
mov
popa
cld
xchg
scas
push
sbb
mov
cli
ljmp
stos
lret
into
sub
fnstcw
in
int
jmp
sbb
cmpsb
loop
roll
les
es
sbb
mov
dec
test
mov
arpl
mov
xor
das
adc
cmc
mov
daa
push
add
push
mov
jl
fldt
cld
fsub
mov
xor
arpl
les
sbb
adc
mov
mov
jb
push
dec
test
faddl
lcall
scas
stos
popf
das
outsl
xlat
dec
imul
xorl
repnz
pop
hlt
jns
xchg
mov
adcl
cli
test
stos
xchg
sub
stc
ljmp
fwait
mov
xchg
les
jmp
adc
std
mov
jne
jp
movsl
push
mov
insl
mov
cmp
out
enter
mov
fscale
push
xchg
fimull
or
repz
mov
add
dec
les
repz
js
lock
fcomip
int
push
sub
sahf
mov
mov
fcomip
pop
lret
push
mull
cmp
pop
sti
pop
sahf
imul
xchg
xchg
dec
out
mov
push
scas
xchg
adc
pop
sbb
and
sub
adc
test
pushf
faddl
fnstcw
xor
jb
cmp
aaa
fimuls
inc
jle
les
mov
fisttps
repz
jbe
mov
xchg
mov
adc
cmp
mov
test
int
mov
and
push
std
mov
dec
jns
std
mov
cmp
into
mov
imulb
add
cmp
lods
popf
add
jge
test
loopne
aaa
jg
adc
push
ss
mov
sub
movsb
ficomps
fstps
neg
jp
or
scas
clc
push
mov
aaa
push
and
or
add
es
imul
jb
mull
push
mov
test
add
sahf
test
mov
adc
and
sub
or
xor
xchg
jns
inc
sub
or
mov
cmc
xchg
jno
sub
mov
jge
mov
jnp
cwtl
xchg
icebp
pop
lock
mov
push
add
outsb
fcmove
scas
and
stc
pop
mov
test
movsb
popl
fwait
dec
cmp
mov
fisubs
jnp
xor
sub
push
popf
test
scas
das
jmp
lock
sbb
jp
push
mov
jle
gs
stos
add
cmp
dec
pop
cmp
dec
mov
dec
je
scas
movsl
mov
negb
mov
int
xchg
xor
lods
dec
loop
stos
sti
mov
mov
push
jmp
popf
cmc
out
in
xchg
xor
push
stos
popl
mov
rcll
push
xor
or
add
dec
out
cmpl
movsb
mov
test
das
dec
xchg
das
and
adc
divl
xlat
push
cld
mov
into
pop
jae
mov
lock
mov
scas
imul
sahf
nop
sub
or
mov
mov
test
adc
mov
aam
mov
jl
xchg
add
sbb
inc
les
inc
stos
mov
test
int
pushf
jle
icebp
xchg
and
inc
ljmp
loopne
and
repz
cmp
fidivrs
test
mov
mov
scas
in
subb
add
xchg
inc
testl
jl
inc
je
adc
sbbl
pop
test
das
scas
xchg
lahf
cmpl
mov
or
fdivl
mov
pop
movl
stc
in
mov
arpl
cmp
stc
or
mov
aad
cmpsb
repnz
xchg
mov
add
mov
and
sbb
js
test
or
pop
xor
shll
in
mov
loop
jl
test
xchg
push
and
inc
sub
xchg
fstpt
gs
insb
mov
js
jmp
and
xchg
std
loop
aam
mov
popf
out
inc
shrl
ja,pt
imul
call
cmp
adc
movsb
stc
cmp
push
cmp
cli
adc
rcrb
cmc
inc
sbb
jno
gs
sbb
jnp
mov
dec
inc
jmp
adc
jge
in
adc
mov
sub
xchg
movsl
xchg
jg
jl
mov
jbe
sarl
bound
inc
jle
mov
xchg
cmpsb
mov
imulb
dec
test
fsqrt
push
adc
push
negb
mov
jp
iret
sub
xor
addl
sbb
mov
stc
xor
mov
fidivs
push
jae
cli
popf
and
jb
int3
adc
xchg
outsl
pop
test
sub
push
test
cmp
int3
test
jg
fxch
dec
mov
dec
adc
repnz
loop
add
in
pusha
mov
jl
lock
cwtl
js
lods
push
mov
dec
fsubl
dec
mov
popa
test
outsl
inc
fistps
std
mov
cmpsl
test
enter
sbb
mov
adc
jbe
out
inc
dec
dec
pop
jo
in
cmp
sbb
lcall
sbb
shll
push
and
stos
xor
jo
movsl
jmp
pop
shr
jne
addl
push
pop
decb
jno
inc
mov
ja
sub
ja
les
push
cld
sub
lea
icebp
push
cmc
addr16
sbb
rolb
and
mov
inc
dec
mov
and
jg
xor
lahf
push
in
cmp
mov
sbb
test
fstps
mov
mov
and
daa
jge
jg
dec
pop
cmpsb
xchg
das
icebp
jmp
ds
movsb
pop
or
pusha
cld
pop
sbb
push
mov
mov
fstl
add
in
add
andl
mov
popf
and
or
xchg
jg
sbb
lret
imul
jge
mov
xchg
sbb
and
inc
mov
fdivrl
mov
gs
sbb
sub
jno
loop
push
shrb
pop
pushf
je
mov
add
sbb
idivb
or
and
lods
xchg
sub
mov
jle
cmpsb
mov
in
and
mov
lret
inc
or
jns
cmpsl
inc
xchg
pop
mov
sbb
sbb
jecxz
pop
sub
pop
mul
repz
jno
inc
add
and
push
cmp
lea
movsl
shlb
sbb
or
push
mov
jmp
orb
mov
data16
js
inc
lods
pop
and
dec
clc
daa
push
lods
out
mov
repz
aad
xorb
mov
mov
push
inc
sbb
lods
adc
popa
sahf
mov
mov
out
mov
jo
out
sar
cmp
stos
jns
sub
and
push
jl
movsl
jno
add
stc
clc
fdivrs
cmp
xchg
push
push
outsb
mov
push
movsb
jmp
out
adc
mov
fisttpll
adc
outsb
pop
adc
add
in
nop
repz
loope
mov
sbb
je
cmpsl
out
outsb
sarb
pop
popa
subl
cltd
ficoms
loop
orl
aam
sbb
xor
add
add
jle
loopne
mov
jge
or
test
into
add
data16
es
pop
dec
cmp
daa
out
add
cmp
scas
push
fstps
fst
lcall
imul
rcr
scas
and
adc
hlt
mov
movsl
sub
addr16
and
xlat
jb
icebp
clc
imul
in
xchg
imul
fsubs
lock
repnz
sub
sbb
lea
repnz
push
std
push
aad
pop
int
xor
aam
jmp
jnp
and
and
cltd
jns
cld
loopne
movsb
scas
cmp
test
out
das
icebp
xchg
popa
cwtl
or
adc
mov
cmp
movsb
push
sub
pusha
sbb
mov
adc
mov
leave
mov
xchg
jl
outsb
mov
sahf
mov
and
adc
sub
movsl
leave
dec
in
scas
mov
mov
mov
xchg
push
jno
cmp
mov
adc
pop
mov
pop
inc
sbb
in
cmpsb
mov
inc
jbe
scas
sbb
dec
negl
pop
rcrb
int
es
jns
out
enter
stos
aad
push
outsb
pop
pusha
in
push
or
int
aam
stos
xchg
cmp
movsb
mov
orl
data16
stos
les
pop
arpl
mov
push
gs
fisttpl
pop
out
rol
scas
mov
jne
ss
mov
mov
pusha
imul
fsubs
imul
cmp
adc
lea
xor
test
jle
inc
popf
int3
test
test
cmp
shll
out
stos
jp
xor
push
and
xor
mov
xorb
lods
sub
test
add
gs
inc
out
xor
or
gs
lahf
std
jg
or
inc
es
cmp
mov
ret
push
jl
mov
mov
jae
iret
aad
mov
jno
aaa
dec
outsb
std
dec
dec
js
mov
xchg
dec
ficomps
addr16
shrl
sub
sub
or
jle
dec
enter
mov
test
mov
jne
adcb
inc
in
mov
repz
popf
repnz
lret
fwait
jns
mov
in
adc
lea
test
psllw
push
mov
sbb
fcoml
stc
repz
pushl
xchg
xlat
jp
mov
or
add
mov
jne
jle
sbb
test
loopne
push
pop
imul
mov
jge
mov
fmul
adcl
lret
mov
mov
mov
add
xlat
dec
mov
adc
ss
hlt
loop
rcr
jmp
adc
int3
out
and
push
loop
inc
dec
mov
inc
scas
paddd
sahf
cmp
mov
and
push
cmc
es
push
mov
jle
xchg
in
mov
add
inc
mull
int
arpl
cmpsb
test
repz
adc
int3
fildl
and
and
and
adc
loope
push
aas
mov
xchg
fadd
push
mov
adc
sahf
mov
in
lods
fimuls
pop
add
into
imulb
cs
imul
subl
sbb
lods
dec
cwtl
adc
lret
test
ret
xchg
sub
loop
xlat
inc
mov
jle
sub
inc
adc
pop
in
fstps
imul
push
fidivs
into
sbb
test
int
jno
testb
lods
int3
adc
xor
std
mov
mov
push
stc
pop
js
jle
lcall
push
test
clc
mov
addb
xchg
int3
test
call
mov
sti
popf
sbb
mov
aaa
lods
cwtl
sbb
into
fwait
inc
add
jecxz
shl
and
ret
or
jae
out
mov
daa
mov
rolb
push
mov
xchg
negl
fldcw
lret
mov
and
jge
mov
loopne
add
sub
xchg
std
rcrb
xchg
nop
lret
orb
jae
xor
jbe
lods
push
jl
sahf
int3
mov
jmp
mov
int
push
test
pop
lods
pop
dec
sub
enter
fsubr
adc
sbb
inc
daa
mov
mov
ret
scas
and
sub
test
adc
mov
and
movsb
jecxz
cmp
pop
mov
jecxz
and
int
inc
rcll
into
and
dec
cmpsl
loope
cmp
jle
fwait
sub
repz
jns
cmc
xor
or
or
in
ja
pop
es
inc
cmp
das
test
push
cmp
mov
sbb
stc
sub
outsl
test
pop
notb
inc
rol
fisubrl
movl
cld
ret
sbb
lock
loope
ret
push
ja
adc
sahf
mov
fs
arpl
imul
insl
sbb
pop
inc
mov
jp
cmpsb
sbb
cmp
push
stc
xlat
mov
cmp
push
fsts
scas
xchg
fwait
or
in
mov
push
mov
movsl
je
mov
ljmp
mov
mov
push
loop
loopne
add
mov
jae
addr16
aad
or
lret
shrb
sbb
imul
dec
aad
loopne
lock
fwait
lahf
mov
cld
cmpb
popa
and
mov
call
push
dec
idivl
pusha
mov
popa
loop
imul
hlt
cmc
push
iret
outsb
int
xchg
mov
repz
fisubrs
mov
pop
das
lahf
mov
push
repz
dec
cmp
ja
jmp
sub
lret
fwait
mov
cmc
out
rcrb
xchg
sub
push
inc
sub
mov
in
inc
std
loop
mov
and
cltd
push
xor
aaa
xor
loop
mov
dec
je
test
push
call
cmp
test
cmp
in
pop
mov
cmc
jne
in
outsl
test
pop
pop
jmp
jl
nop
sub
call
xor
push
add
rclb
sbb
adc
les
cmp
into
inc
jl
fisttpll
pop
fnstcw
les
push
divb
sti
repz
xorb
mov
jb
and
int
pushf
flds
jns
push
pusha
and
ss
adc
add
xlat
xchg
test
jb
sbb
cltd
sbbb
jg
inc
stos
lahf
addr16
es
or
sti
movsl
push
mov
mov
or
lahf
mov
xchg
aas
flds
cwtl
mov
push
add
and
push
pop
xchg
out
scas
or
push
mov
push
push
adc
sbb
push
pop
cmp
and
adc
cs
out
int
icebp
sub
inc
lret
out
mov
mov
loopne
xchg
aad
and
add
inc
sbb
push
leave
or
in
dec
addl
std
leave
xchg
pop
mov
adc
hlt
push
scas
adc
fisubrs
lds
fwait
dec
mov
or
cmp
cmp
gs
sbb
jnp
or
repz
in
out
lock
sub
insb
mov
and
mov
pop
fsts
ds
lds
shll
push
or
js
insb
cmpb
mov
sbb
cmp
lods
and
ss
xchg
jnp
add
pop
not
pushf
jg
push
and
add
adc
push
push
std
lods
push
cmp
bound
pop
shrl
jb
push
imul
lret
pop
jae
inc
scas
cmp
es
jae
fiadds
xchg
repnz
inc
mov
out
dec
mov
push
push
test
pop
aas
fnstcw
mov
icebp
test
and
cmp
mov
mov
dec
cltd
and
pop
mov
cmpsl
leave
mulb
or
pop
test
data16
push
icebp
xor
mov
int
loope
jecxz
adcb
lret
call
in
sub
push
shll
jmp
call
pop
aad
fidivs
insl
fwait
push
mov
repnz
jp
repnz
shlb
das
imul
mov
and
xchg
xchg
push
fdivl
in
or
pushf
loopne
fisubrs
and
fsubl
enter
pop
adc
mov
sbb
not
aaa
jmp
aam
cmpsb
arpl
test
fsts
mov
fadds
repz
jg
cmp
xchg
std
imul
stos
cmp
orl
mov
or
mov
test
mov
fnstsw
enter
inc
fimuls
stc
pop
lret
and
rorb
sbb
mov
mov
subb
ret
dec
fldenv
mov
jge
scas
scas
dec
std
repnz
sub
lahf
aaa
pop
adc
leave
sbb
movswl
push
stos
sbb
movsl
xchg
andl
mov
test
ret
filds
ficomps
mov
pop
hlt
fnstenv
sub
idiv
in
dec
xor
xchg
cmp
sbb
or
loope
pop
mov
and
scas
jae
adc
testb
push
cmp
out
xchg
xchg
fimull
sar
lret
test
xor
fiadds
hlt
out
cmp
mov
cld
sti
and
cli
shlb
xchg
push
push
mov
pop
scas
mov
hlt
cmpsl
test
cmp
or
mov
pop
sbb
in
inc
jo
fistpl
jbe
into
cld
adc
loope
inc
outsl
iret
cmpsb
xor
loope
ds
inc
adc
stos
push
or
xchg
out
mov
std
stos
ret
push
stos
mov
js
inc
push
imul
fxch
cmp
repnz
scas
loop
mov
filds
inc
sbb
loopne
sub
cltd
and
adc
mov
loopne
movsb
dec
mov
movsb
mov
sbb
in
jno
in
or
push
je
popa
orps
fldcw
inc
adc
loopne
aam
fstpl
aas
shlb
jnp
aad
out
out
scas
jae
jbe
and
inc
push
hlt
mov
inc
mov
ficoms
add
nop
ret
add
fdivl
repz
in
xor
lods
sub
fildl
sub
and
push
stos
test
fnstcw
cltd
pusha
cld
sbb
pop
add
stc
add
and
std
push
movsl
repz
pop
in
cmpsl
jg
lcall
xchg
repnz
repz
or
int
sbb
mov
pop
out
pop
mov
adc
lret
push
in
fwait
pop
les
mov
mov
test
pop
rorl
push
lock
fcmovu
insl
sti
adc
loope
addr16
add
out
push
cmp
lock
dec
daa
dec
push
pop
lock
xchg
push
dec
xchg
mov
and
add
push
push
cwtl
aas
addr16
xchg
sbbl
ds
xchg
mov
ss
sub
repnz
add
jnp
sbb
inc
clc
adc
jns
stc
aaa
mov
pop
and
xor
ret
push
sub
sub
adc
cld
test
sbb
leave
mov
adc
jae
leave
xchg
das
lock
lahf
stc
jae
jb
mov
pop
loope
leave
mov
cmpsb
mov
mov
cli
pop
mov
out
jno
mov
cmp
fxch
test
cmp
jle
cltd
mov
lds
scas
inc
push
je
fidivs
dec
flds
insl
add
push
stos
loopne
adc
sub
mov
jae
push
repnz
nop
out
inc
lret
mov
fs
and
cmc
movsl
jae
orb
and
repnz
in
jl
adc
add
mov
pop
mov
and
call
mov
inc
lret
sbb
cmpsl
pop
lahf
aas
out
sub
and
cmp
pop
lods
pop
repz
out
pop
movsl
add
sbb
out
mov
adc
jb
idivl
adc
hlt
outsb
mov
ficomps
mov
sub
mov
pushf
imul
xor
push
push
and
mov
sbb
push
sti
out
mov
cmp
mov
in
ss
sub
adc
scas
cmp
mov
jl
fcoml
inc
or
push
mov
jae
int
xor
aad
mov
and
fcompl
int
xchg
xlat
out
lods
fsubrl
mov
sub
in
jg
cmc
sti
cmp
dec
pop
es
sbb
pop
xor
xchg
mov
lahf
push
int3
clc
jg
hlt
in
sbb
pop
sub
insl
mov
pop
mov
repz
leave
jae
test
or
jno
jmp
cmpb
leave
std
jecxz
inc
lods
add
test
xorb
sbb
mov
es
int
lahf
or
stos
push
xor
xor
push
jno
inc
cld
mov
jbe
dec
mov
aas
jle
push
jno
ret
rolb
lods
fstpt
push
mov
sarb
outsl
jl
add
inc
xchg
sbb
cmpsb
out
xor
dec
jbe
pop
test
ja
lret
scas
and
lock
mov
and
cmp
js
xchg
cmpsl
adc
jmp
bound
aad
xchg
insl
mov
xor
sbb
test
push
lahf
fidivl
jbe
inc
out
push
jmp
adc
lahf
popa
mov
flds
pop
mov
insb
mov
add
jno
mov
add
cmp
mov
int
ja
and
xchg
lahf
cmpsl
pop
add
mov
mov
les
test
out
sbb
out
stos
jp
inc
fstps
movsb
xchg
push
data16
lahf
sub
ss
push
add
mov
int3
mov
das
adc
out
mov
out
ficomps
fcoml
scas
cmc
jle
fcomps
sahf
fdivl
movsb
dec
adc
adc
cmp
not
cmp
jb
pop
clc
loop
fxch
pop
popf
adcl
jae
pop
stos
dec
repz
adc
fs
addl
mov
pop
jecxz
sahf
fmuls
lret
inc
repz
sbb
sub
pop
pop
fcmovnb
jnp
xchg
int
loope
in
mov
sbb
movsl
push
mov
sahf
shrl
js
and
xor
outsb
sbb
dec
jo
cmp
inc
jns
lds
lret
scas
lahf
or
lods
mov
add
mov
std
pop
cmp
dec
mov
in
fs
std
ret
daa
test
mov
mov
cmp
mov
xchg
mov
lahf
jecxz
and
in
das
pop
mov
fld1
std
std
rcrb
insb
mov
les
push
and
xor
int3
in
mov
mov
inc
popf
enter
stos
sub
xchg
push
and
cmp
jb
pusha
jle
xchg
hlt
fnstenv
addb
dec
int
aam
cmpsl
sbbl
xor
addr16
dec
sub
mov
fwait
out
popa
jae
scas
inc
push
sub
pop
pushf
dec
and
nop
int
ficoml
jae
shll
fidivrs
cs
pop
mov
push
xor
test
std
daa
or
mov
mov
jecxz
mov
sub
inc
dec
cltd
push
mov
aam
or
daa
pop
push
xchg
dec
pushf
or
xchg
adc
jnp
sbbb
push
jae
cs
mov
and
div
sbb
ficomps
mov
cmp
push
jo
dec
addr16
lods
sbb
jb
push
jnp
mov
and
hlt
fwait
adc
and
push
shld
sub
jbe
lods
push
sti
adc
popl
mov
fisubs
xchg
lcall
mov
dec
fisttpl
sahf
test
or
cmc
scas
mov
jb
data16
sti
int
addl
xchg
or
sti
add
stc
fsub
push
or
dec
xor
sahf
sub
jno
add
xor
nop
mov
pop
push
clc
lahf
ficoms
inc
lock
dec
and
xchg
in
aaa
xchg
and
push
mov
test
push
cmc
jmp
stos
lahf
int3
cmc
lods
push
jl
inc
xor
fnstcw
push
les
lcall
mov
push
push
mov
fwait
lods
icebp
adcl
lea
cmpsl
push
mov
sub
mov
in
notb
into
cmp
adc
insb
addr16
pop
cmp
or
dec
shl
mov
pop
lret
mov
xchg
icebp
and
stos
fwait
jb
test
cwtl
jo
xor
rcrb
loopw
dec
dec
jmp
push
dec
pusha
sar
shrb
add
jbe
jg
push
mov
or
adc
mov
fldenv
mov
pop
mov
adc
roll
push
in
cmp
cmp
sub
lahf
out
cmp
jbe
loopne
jge
stos
mov
ja
add
xchg
xor
mov
xchg
mov
sub
lret
push
mov
inc
mov
lret
push
aaa
out
cld
cmpsl
mov
bound
stos
adc
sub
les
sbb
mov
jge
lock
scas
sub
es
add
dec
rcl
in
mov
mov
push
test
test
imul
pop
mov
shll
push
inc
mov
add
fisubs
fstps
std
dec
pop
mov
or
fadd
test
inc
pcmpgtd
pop
ljmp
fs
adc
psllq
cltd
cli
rorl
jns
movsb
mov
xchg
push
mov
test
pop
inc
outsl
sub
gs
sbb
fwait
lods
xor
and
test
fnstcw
popa
jne
icebp
insb
aam
sub
push
loop
pop
inc
f2xm1
cmp
push
es
ror
into
mov
dec
hlt
in
pop
out
xchg
inc
ljmp
mov
pop
mov
mov
repz
fucom
loop
insl
lods
out
icebp
dec
mov
in
mov
mov
dec
stos
inc
scas
clc
js
test
mov
out
test
mov
mov
lret
les
fcoml
xchg
loopne
lods
pop
rcll
dec
movsl
jne
pop
call
or
mov
inc
pop
and
outsb
cmp
popa
out
sti
into
je
dec
xor
jle
push
in
mov
mov
mov
std
in
push
daa
enter
inc
fwait
sbb
pop
sub
pushf
cmc
popa
inc
mov
hlt
std
dec
int3
cmp
dec
jnp
pop
mov
lock
xchg
push
xor
jae
cmpsb
mov
aas
sbbl
imul
enter
add
es
mov
adc
add
xor
jne
lods
out
cmp
push
loope
int
mov
repnz
cmp
rorb
lods
popa
pop
sti
clc
outsl
jb
out
popa
fbld
pop
aas
jl
test
mov
push
hlt
xchg
es
push
add
out
in
in
test
sub
out
dec
data16
movsb
xor
fldl2e
stc
mov
popa
sahf
xorb
push
fstpl
in
lahf
data16
in
mov
adc
roll
leave
nop
xchg
cmp
sbb
in
jbe
inc
inc
daa
js
cmp
mov
lock
inc
lods
xchg
sub
pop
adc
lret
jnp
subl
push
mov
lea
cmpsb
stc
jno
fcmovne
mov
and
scas
add
test
adc
push
lret
decl
popa
xor
hlt
notb
push
fnstenv
sub
sbb
cmp
dec
fwait
mov
xchg
cwtd
lods
popa
add
rclb
ljmp
push
scas
inc
pop
cmp
fstl
into
mov
jno
mov
into
xor
mov
cmp
lcall
jo
mov
mov
sub
push
sub
stc
sub
push
push
or
and
sub
test
daa
mov
fmul
mov
push
movsb
sahf
dec
mov
mov
out
cmpsl
jo
dec
popf
sub
push
sbb
cmp
call
jg
bound
sbb
mov
mov
add
mov
imul
ret
cmc
stc
inc
sub
aad
xlat
addr16
mov
pop
xor
into
addr16
imul
fstps
add
mov
pop
mov
add
add
add
fcmovnbe
inc
stos
cltd
inc
fldenv
test
gs
jnp
test
scas
push
push
push
push
fdivl
dec
or
imul
insb
mov
arpl
das
aam
xchg
fsubl
adc
outsb
and
lahf
fcmovb
scas
das
arpl
mov
scas
test
xor
or
pop
mov
orl
adc
jno
mov
les
lock
mov
pop
sbb
test
sbb
leave
cmp
inc
mov
mov
push
inc
dec
xlat
inc
mov
and
and
push
scas
xchg
jge
arpl
xchg
or
mov
cmp
cmc
rolb
in
flds
sub
adc
insl
jo
and
lods
loop
jg
gs
lods
inc
jmp
stos
jae
clc
push
inc
mov
int3
jno
nop
data16
inc
pop
dec
sahf
xor
add
testb
add
sahf
out
mov
addl
scas
xorl
mov
lea
ret
pop
cmp
adc
cli
adc
mov
cmp
in
lods
cmpsl
sbb
int3
out
cmp
test
xchg
and
out
aas
dec
and
mov
xor
lahf
push
roll
movsl
inc
xor
fcoms
es
outsb
lods
push
dec
into
push
mov
jmp
iret
in
cmc
inc
cmp
int
and
in
movsb
xor
jae
subb
in
scas
rcrb
sbb
fimull
fucomi
or
add
flds
sub
jge
jp
pusha
push
fstpt
mov
scas
push
push
cmc
jp
scas
fs
sarb
test
xchg
insl
jb
test
adc
aad
push
cmp
fstpl
int
mov
inc
lds
popa
mov
stos
lret
sub
mov
xor
stos
mov
insb
add
imul
and
or
lods
mov
cs
fnstenv
movsl
xchg
movsb
mov
lahf
sub
daa
jl
dec
scas
pusha
mov
push
aad
xchg
dec
mov
mov
mov
lret
sti
push
call
pop
negb
add
push
add
jge
outsb
pop
cmpsl
cwtl
out
jmp
addr16
mov
xor
mov
xchg
mov
shll
les
xor
adc
dec
popf
lods
and
fisubs
adc
arpl
inc
mov
rcrl
xchg
in
in
push
rcll
jae
xor
mov
nop
in
xchg
sahf
or
mov
mov
pop
xchg
lods
mov
adc
fsubrs
dec
jge
xchg
mov
mov
mov
sub
scas
mov
adc
sbb
mov
push
lret
jl
sbb
cmp
push
pop
jbe
test
test
xchg
es
cmp
push
faddl
in
in
inc
and
or
cmp
popf
push
push
in
sub
movsl
dec
insb
int3
cmpb
jnp
in
fdivp
fisubrl
test
push
lods
sub
fisubs
fsubrs
jmp
xchg
inc
pop
in
in
jmp
enter
scas
int
xor
mov
fldcw
dec
out
mov
ds
fcompl
sbb
fistpl
xchg
mov
pop
mov
addb
movsb
scas
mov
popa
fisubs
pusha
sbb
aas
gs
addr16
and
test
cmp
fidivrl
sbb
xchg
adc
xchg
subl
rcr
ficoms
std
mov
mov
mov
jg
scas
mov
push
mov
push
xor
pop
std
push
out
push
ret
pop
dec
sbb
xchg
shlb
lret
mov
sahf
cmp
and
jae
mov
leave
stos
in
dec
cli
jle
add
popl
lcall
popa
mov
push
or
subl
daa
out
inc
mov
jge
sti
ret
out
mov
and
sbb
repnz
and
push
jae
mov
test
pop
mov
sbb
dec
in
mov
cmp
pop
inc
mov
adc
push
and
pop
test
adc
enter
xchg
push
xchg
add
mov
test
std
addr16
xchg
or
mull
dec
push
xchg
cmp
fbstp
test
xchg
mov
mov
sbb
scas
out
test
shl
mov
out
pop
pop
lods
pop
sbb
cwtl
mov
int
lods
test
pusha
int3
orl
faddl
int
pop
mov
cwtl
or
in
xchg
jle
sub
cli
movsl
shll
inc
push
xorb
imul
cmp
sbb
push
inc
bound
cmpsb
sbb
xor
subl
pushf
pop
inc
ds
and
mov
xchg
out
fstps
addb
lcall
loopne
daa
int3
aam
faddl
mov
aam
dec
and
cmp
adc
mov
xchg
pop
fcomip
push
imul
addr16
gs
mov
andb
stc
shrl
insb
ss
mov
sub
jns
pop
mov
mov
xlat
fdivrl
jmp
and
mov
ljmp
mov
jp
push
rcrl
mov
add
mov
lock
insb
adc
ds
and
shll
mov
adc
lret
mov
inc
cwtl
adc
add
ds
decl
inc
test
fistpl
sbb
addr16
hlt
jno
xchg
sub
push
mov
data16
ljmp
negb
mov
clc
xor
and
and
adc
mov
fsts
and
dec
or
mov
or
es
fldenv
push
mov
sti
sub
adc
or
dec
and
lock
data16
jno
dec
andl
out
sbb
and
adc
lahf
ljmp
mov
sahf
xacquire
mov
insl
nop
sub
mov
fadd
push
jp
or
jnp
adc
lock
inc
movsl
icebp
sahf
push
mov
aam
das
xchg
lods
jb
cmc
sbb
repz
mov
out
enter
pusha
rcrl
mov
lret
out
out
ja
addb
and
fnstcw
add
ret
out
call
sbb
jg
rcll
push
sbb
cmpsb
scas
inc
jno
mov
das
popa
push
clc
mov
icebp
pop
mov
mov
std
mov
jg
out
daa
jnp
imul
divl
sarl
mov
sub
shrb
cmp
lea
outsb
or
xchg
aad
mov
push
pop
cmpsb
dec
fisttpll
lea
aas
fs
popf
adc
pop
dec
std
cs
fmull
into
cmp
repz
rcll
add
test
xchg
sbb
test
pop
xor
and
popf
jnp
call
inc
hlt
ret
test
repz
cmp
mov
fs
rcr
mov
adcl
in
sub
daa
jo
mov
mov
loop
aaa
cmp
xor
adc
pop
push
movsb
xor
int3
sub
aam
repz
mov
scas
sub
jl
add
int
or
out
sub
sbb
push
mov
adc
test
into
shlb
add
cmpsb
outsb
insl
xchg
xor
leave
inc
pop
in
xor
or
xor
lods
fsubl
in
outsl
inc
fstps
out
pop
popa
clc
mov
push
add
mov
mov
scas
mov
sti
leave
add
sub
lcall
adc
lret
mov
pop
jne
je
or
mov
je
add
cmp
push
xchg
mov
cmpsl
pop
aas
leave
sbb
aad
jl
into
scas
jl
or
and
xor
push
push
fwait
loop
jecxz
int
xchg
xlat
sbbb
pop
imul
cld
movsl
sar
xchg
sarb
pop
and
lcall
and
pop
daa
xchg
mov
dec
mov
sub
mov
cmp
xorb
inc
jne
mov
fsubrl
fwait
scas
mov
std
push
push
movsb
dec
and
xchg
movsb
mov
stos
lcall
scas
mov
int
rcrl
sahf
orb
jge
dec
mov
fcomp
lret
fucomip
js
push
jno
xlat
inc
jg
adc
add
gs
lahf
fs
lds
adc
test
mov
outsl
pusha
jg
xlat
push
cld
pop
dec
scas
xchg
adc
js
mov
xor
nop
ds
rcrl
adc
mov
loop
inc
cmp
sbb
jge
dec
cmpsb
pop
out
mov
aas
pop
xorb
pop
mov
inc
push
js
and
fisubl
in
adcb
jmp
jae
mov
fwait
push
dec
scas
rclb
test
mov
sbb
sbb
dec
rcll
int
pushf
inc
daa
mov
and
push
aaa
addr16
fwait
iret
dec
popf
inc
jb
adc
and
rclb
xor
pop
adc
stc
lcall
scas
out
cmp
pop
movsb
lds
sbb
xor
xchg
add
int3
iret
dec
fwait
push
jo
jmp
mov
and
sahf
mov
or
js
std
mov
fisubrs
mov
pop
push
add
mov
push
adc
fcmovb
pop
pop
xchg
push
fdiv
sub
fsubrl
jl
push
arpl
cmpl
pop
mov
ss
jns
mov
push
pop
popf
sti
and
fbld
daa
lahf
sbb
cmp
popa
in
sbb
inc
lret
add
pop
or
out
dec
or
push
pop
inc
fs
pop
rcr
ret
push
test
ret
popf
pushf
pop
push
cmpsl
mov
dec
dec
outsb
cmp
pop
cltd
pop
cld
jp
movsb
dec
push
loope
cmpb
mov
lcall
push
cld
lcall
pop
push
cli
cmp
adc
popf
add
jnp
dec
in
push
cmpb
dec
xor
movsb
dec
daa
sahf
out
cmp
sbb
cmp
cmpsl
popa
repz
ret
mov
jnp
or
outsl
hlt
mov
pop
popl
and
shll
adc
and
or
jnp
mov
cmp
cmc
mov
inc
mov
jp
insb
mull
add
or
push
xor
sub
imul
jl
dec
adc
inc
cld
out
mov
cwtl
inc
shll
pop
lret
jo
cmp
mov
cmp
sbbl
add
into
loope
pop
test
push
mov
jmp
jno
fistpll
jne
lods
jg
aaa
xchg
sub
sub
aam
loop
rcrl
pop
test
and
pop
aas
int
pop
js
and
sbb
insb
in
fidivs
test
dec
and
pop
imul
iret
mov
mov
outsb
xchg
push
xchg
clc
push
mov
neg
adc
jle
mov
mov
push
xor
ret
lock
sub
mov
cld
mov
jbe
sti
fidivrs
push
cmpsl
push
int
jnp
jp
les
push
xchg
fwait
je
fdivr
xchg
add
inc
int3
ror
pop
sbbl
push
dec
push
sti
inc
inc
inc
ja
or
push
hlt
std
mov
dec
iret
inc
and
dec
mov
lock
loopne
cmp
loop
les
ja
fld
pop
jp
nop
punpcklwd
mov
sbb
data16
daa
mov
mov
xchg
cmp
test
cli
push
dec
xlat
sub
push
pop
mov
and
rcll
mov
add
lods
popa
pop
cmp
jp
scas
or
xor
sbb
test
dec
cmovb
adc
imul
pop
and
aad
cmpsb
addr16
or
mov
movsl
add
in
loope
fstl
fmull
test
test
push
fsubrl
movsb
mov
sub
fnsetpm(287
int
adc
mov
sbb
adc
repnz
push
xor
inc
pop
xor
cmp
pop
scas
xchg
xchg
in
jne
push
push
sbb
iret
int3
addl
lods
loopne
aad
das
imul
addr16
dec
and
jmp
aam
pop
or
xor
sbb
outsb
sub
mov
jecxz
test
lods
insl
fnstcw
mov
mulb
cmp
int3
cld
push
flds
mov
hlt
jl
mov
lods
mov
mov
cmp
mov
stc
cmc
loop
repnz
test
push
test
loopne
mov
fldcw
dec
push
in
in
push
into
stos
and
jecxz
push
movsl
jb
cmp
cs
movsb
inc
movsl
mov
mov
push
mov
ds
mov
jb
cmc
popf
xchg
sbb
inc
inc
int3
pop
mov
sbb
sub
fs
movsb
jnp
repnz
inc
data16
add
and
xchg
pusha
sbb
cli
or
ss
sub
sbb
cmpsl
sbb
push
jp
mov
cmp
iret
mov
adc
bswap
inc
fisubl
lods
mov
ds
repnz
jp
in
cmp
adc
out
add
add
push
cld
ret
push
cmpsb
lods
pop
in
adc
or
movsl
into
mov
mov
repnz
fs
cmpsl
adc
cmp
int
jb
je
jmp
cmpsb
jecxz
mov
xchg
hlt
jp
pop
mov
mov
ret
inc
das
out
out
or
test
xchg
mov
xchg
out
cli
aad
and
and
sub
lea
jle
fiadds
pushf
sbb
mov
loope
dec
daa
repz
movsb
jns
cmp
mov
jae
adc
dec
mov
xor
gs
xchg
mov
scas
movsb
sbb
psrlq
test
sbb
fnstenv
aam
jge
mov
outsl
stc
xchg
jmp
lods
lods
sbb
clc
cmp
add
rclb
popf
lahf
dec
scas
cmpsb
jle
scas
sub
xchg
popf
xchg
out
fcmovb
sub
nop
ja
push
and
or
fidivs
cwtl
insb
aaa
push
std
std
repnz
cld
inc
mov
cmpxchg
frstor
fwait
mov
jnp
fadds
mov
mov
xorl
in
cmc
cmpsl
cmpl
mov
subb
and
mov
shlb
or
in
aam
lret
or
xor
out
icebp
add
cmpsl
out
add
and
in
mov
sbb
sbb
sbb
mov
fstps
ficoms
scas
xchg
mov
flds
lea
sub
enter
mov
mov
fwait
addr16
mov
and
pop
addl
leave
fs
xchg
fidivl
cli
test
aam
dec
xchg
dec
sarl
aam
dec
in
test
inc
sbb
mov
fsubp
and
stos
xchg
mov
cmc
push
push
fwait
mov
addr16
addr16
stc
icebp
popf
mov
mov
sbb
mov
leave
imul
sub
shll
pop
in
jbe
pop
std
out
sub
fucomp
push
xlat
xor
lods
dec
xor
jl
sbb
xchg
into
adc
push
orb
lret
mov
mov
lods
loopne
push
das
and
sub
lahf
je
dec
es
xchg
fwait
hlt
mov
fiaddl
dec
and
mov
add
push
mov
mov
cmpsb
loope
subb
roll
std
mov
sbb
stc
cmp
xor
dec
lahf
lahf
fld
inc
adc
push
lods
ja
mov
mov
test
jns
sarl
add
pop
ret
mov
lcall
sbb
fldl
outsb
mov
adc
sbb
negb
out
mov
stos
jle
adc
sahf
mov
jmp
mov
sarl
lods
xchg
cld
sbb
daa
inc
mov
call
jge
push
out
add
mov
les
je
inc
adc
inc
xlat
fsubs
xor
lock
dec
and
cmpb
mov
ret
loopne
sbb
push
xchg
adc
push
adc
xor
lods
jae
inc
or
fldenv
cmp
jl
push
sahf
rclb
sbb
popf
out
lds
lds
pop
das
sti
or
in
push
jnp
adc
mov
and
out
dec
cmc
fistps
push
icebp
enter
sbb
cmc
test
cmp
test
mov
pushw
aad
das
in
pop
cmpsl
insb
xchg
push
and
mov
mov
ljmp
repz
pop
in
scas
add
cmpsl
add
dec
lds
stos
out
int
imul
fnstenv
jb
lods
out
xchg
mov
movsb
pop
fiaddl
popf
js
mov
das
mov
mov
jl
xchg
dec
inc
int3
pop
mov
jecxz
enter
mov
or
sbbb
clc
or
mov
add
aad
sbb
test
cld
clc
jnp
mov
push
mov
sti
cmp
sti
mov
mov
cmpsb
pop
push
pushf
nop
xor
or
sbb
jbe
adc
mov
jo
in
adc
fnstsw
inc
cmp
imul
push
sub
int3
clc
das
rolb
dec
fdivr
sbb
cmp
sbb
mov
mov
jmp
mov
in
addr16
sbb
rcr
lahf
fs
cmp
pop
out
pop
test
test
xlat
fsubs
ja
jnp
jmp
mov
fdivrl
adc
xchg
out
mov
mov
inc
in
fnstcw
imul
push
int3
loope
and
inc
mov
lds
mov
das
push
jno
f2xm1
mov
sub
ds
mov
dec
scas
mov
adc
jecxz
mov
aam
imul
iret
add
and
stos
rorl
and
mov
jno
or
xchg
mov
cwtl
loope
jae
mov
sbb
and
sub
movsb
notl
cmp
in
xchg
mov
mov
add
lods
adc
jbe
movsl
xor
popa
insl
lcall
and
mov
mov
mov
mov
xlat
inc
mov
pop
mov
sahf
int
lret
test
ret
pop
mov
sub
cmc
mov
test
dec
mov
fs
sub
clc
pusha
add
sbb
aaa
inc
mov
out
sbbb
test
xchg
mov
in
shl
daa
pop
or
adc
loop
xor
dec
scas
add
xchg
push
pop
xchg
ret
adc
scas
fcompl
mov
lods
ficoms
push
shll
es
adc
cld
mov
test
mov
mov
mov
inc
jno
stos
jns
icebp
out
rcr
push
sbb
imul
xchg
push
jle
mov
adc
out
in
jecxz
adc
cmp
sahf
cli
jle
es
add
inc
jb
scas
lea
lods
xchg
dec
adc
xchg
mov
sub
cld
jmp
lret
popf
inc
push
inc
dec
nop
movsl
sub
aas
sbb
movsl
sbb
pop
mov
mov
jnp
hlt
imulb
pop
xchg
pusha
xor
mov
sbb
sbb
in
mov
dec
mov
cmp
jmp
push
flds
aas
or
xchg
pop
leave
cmpb
gs
dec
sub
data16
repnz
push
ret
data16
stos
fcomps
movsb
mov
dec
std
gs
mov
mov
dec
aaa
in
lods
jle
fisubrs
pop
fstps
pop
lods
ficomps
xchg
jb
in
xor
mov
xor
out
ret
movsl
lcall
into
xchg
into
mov
mov
in
pop
or
xchg
in
push
aas
in
outsb
clc
pop
lea
dec
subb
sarb
int
lcall
hlt
das
pop
mov
push
rcll
ja
pop
sbbb
xor
mov
pop
add
mov
fnstcw
xchg
jb
cmpsl
fsin
mov
out
mov
std
ss
push
cld
mov
int3
mov
gs
and
sbb
and
insl
subl
test
inc
nop
shl
xchg
or
sbb
sbb
iret
adc
cwtl
add
loop
out
scas
cmp
mov
aad
lods
rolb
sub
ja
std
xchg
add
lock
jbe
ss
scas
fs
inc
push
sub
in
fwait
inc
jmp
push
push
jp
addb
cld
pmaxsw
jl
xchg
into
mov
jns
rcrb
ret
test
das
aad
mov
cld
pop
jo
test
test
fistpll
lahf
sub
dec
sub
repz
jno
push
shl
ret
or
adc
pop
lea
iret
fsubs
mov
iret
xor
sahf
mov
not
and
and
pop
into
ja
or
lods
ja
cmp
mov
mov
pop
adc
test
dec
push
test
cmp
cmp
into
int3
sub
fnstenv
hlt
in
push
jnp
push
test
add
xchg
adc
les
jb
xchg
cmp
add
mov
jecxz
jno
test
je
push
sbb
mov
das
dec
iret
mov
push
push
push
mov
insl
add
adc
adc
mov
mov
daa
lds
and
jno
das
mov
mov
clc
bswap
and
aam
les
sbb
pop
sub
xor
lret
mov
sarb
andb
lgs
testl
movsl
fisttps
dec
xchg
sahf
xlat
movsb
and
sub
jo
enter
or
and
insl
push
cmp
call
dec
mov
stos
cld
mov
ja
aad
movsb
push
xchg
mov
or
fisubrs
xor
std
add
lods
sub
or
pop
adc
int
and
xor
arpl
cwtl
repz
imul
mov
inc
scas
fcompl
dec
push
sbb
push
out
add
movsl
add
sub
and
mov
pop
lea
jno
xor
sub
pop
cmpl
into
aaa
or
ljmp
adc
jbe
xlat
lret
jno
addr16
mov
mov
mov
push
inc
pop
lods
inc
in
fwait
test
mov
xchg
jae
mov
push
and
adc
jl
int
adc
inc
jne
nop
test
mov
test
lret
scas
popf
and
std
mov
sbb
xchg
addr16
mov
jmp
jo
jl
push
data16
in
data16
push
push
push
or
bound
dec
adc
test
rcll
xchg
pop
out
shlb
aaa
sub
mov
adc
scas
sub
jbe
push
lods
mov
mov
jns
insl
fidivrs
and
mov
xchg
and
lods
and
adc
mov
aad
cmp
push
sbb
sub
jne
push
mov
lods
mov
iret
xchg
test
mov
int
out
and
scas
push
in
into
mov
mov
iret
cli
loop
or
pop
xchg
mov
stc
mov
sbb
jne
inc
xchg
lock
fstl
xchg
mov
lcall
adc
jge
testb
adc
rorl
shr
inc
imul
std
mov
add
jne
sbb
and
fidivl
out
push
popf
mov
fsts
xchg
push
jne
push
sbb
insb
mov
pop
jae
pop
rolb
pop
lret
mov
cmp
inc
add
pop
shrl
mov
test
test
jno
sbb
ret
lods
or
imul
or
lds
ljmp
mov
movsl
lods
mov
dec
push
cwtl
push
jnp
jl
mov
insl
mov
hlt
or
addl
pop
fmull
inc
push
lods
push
cmpsb
push
mov
push
test
loop
pusha
std
push
sub
mov
xor
mov
xchg
mov
in
std
sub
sub
mov
mov
sbb
xchg
and
mov
sub
inc
data16
daa
add
in
cmp
add
cmp
pop
mov
jle
xchg
inc
lret
scas
xchg
mov
pop
or
sbb
xchg
stos
sahf
testb
xchg
fstpl
fldenv
add
mov
sbb
pop
xor
add
out
nop
push
fsub
mov
jmp
mov
test
pop
gs
sbb
pop
std
mov
arpl
jne
ljmp
mov
xlat
ss
leave
nop
or
lds
clc
xchg
jl
or
test
sbb
lods
or
stos
lock
xchg
mov
jecxz
mov
int
mov
in
addr16
pop
cmp
sbb
adc
sub
movsb
test
fyl2x
mov
push
xor
mov
pushf
mov
add
pop
imul
inc
xor
pop
int3
xor
xchg
jnp
pop
arpl
mov
lcall
add
jnp
out
and
aas
rorb
mov
push
test
scas
cmp
sub
cs
mov
xchg
gs
cmp
inc
xchg
cmp
mov
subl
add
popw
mov
add
mov
jnp
repz
xchg
mov
lret
out
inc
or
cmp
cmp
sub
les
mov
fidivl
and
int
std
and
xchg
ret
fnstcw
pop
fucom
adc
iret
push
mov
sbb
cmp
sub
pop
sub
roll
pop
xchg
sahf
cmp
int
mov
insb
leave
push
popf
frstor
add
and
sub
adc
mov
movsl
mov
popa
push
fnstsw
iret
in
xchg
or
sub
inc
imul
shlw
inc
insb
push
cmp
loope
fiadds
jnp
pop
sub
cmp
std
xchg
in
sarb
mov
sete
repnz
fdivs
mov
mov
mov
clc
inc
xlat
movsl
lds
testl
and
cld
sti
sahf
mov
jno
fcomip
inc
jl
lcall
pop
inc
push
mov
fdivp
push
mov
xor
mov
sub
lcall
cmpsl
scas
jp
out
mov
out
inc
cmp
dec
lock
js
sarb
add
je
mov
pop
fsubl
imul
or
adc
inc
mov
test
cltd
mov
adc
jp
lcall
add
lods
imul
in
pop
iret
imul
out
mov
dec
xlat
sub
mov
cmp
test
mov
sbb
andl
lock
mov
jecxz
mov
and
stc
cmpb
out
inc
dec
testl
dec
or
ds
cmp
cmp
mov
outsb
inc
sbb
cli
jp,pn
push
inc
call
dec
dec
mov
adc
xor
test
cmp
xchg
andb
sub
pop
mov
inc
cmc
xor
in
sbb
sarb
sti
insl
xchg
ljmp
fldenv
dec
dec
sahf
mov
cli
dec
jnp
popa
adc
add
mov
test
imul
clc
add
lods
mov
jp
xor
mov
fsubl
andb
xor
and
lods
pop
adc
out
scas
and
mov
xor
xchg
and
iret
jle
xchg
xchg
inc
mov
cmp
gs
sbb
xor
std
dec
mov
push
pop
sbb
dec
mov
fmull
hlt
fwait
jl
jp
repz
gs
push
lahf
mov
or
fldl
fildl
jbe
fs
xor
cli
fcomi
xchg
lret
mov
mov
shrb
out
and
dec
fildll
arpl
adc
add
lahf
inc
push
sbb
scas
lods
mov
dec
mov
add
out
jno
sbb
stos
fwait
jnp
dec
test
sub
fdivl
pushl
push
daa
aam
pop
adc
xchg
scas
pusha
push
or
jge
sub
jl
xchg
xlat
adcl
xor
ja
fimuls
mov
subb
fbstp
mov
call
and
aad
sbb
incl
xchg
sbb
je
and
pop
scas
mov
adc
adc
jle
jae
mov
and
xchg
lahf
imulb
scas
ja
mov
iretw
nop
lcall
ljmp
cmp
lahf
test
jo
pop
fsts
xor
aas
fdivl
or
mov
sub
push
mov
jns
xchg
jp
je
push
ret
and
out
mov
add
mov
xor
stc
push
dec
sub
cltd
xor
and
outsb
stc
cmp
rolb
push
mov
in
leave
xchg
dec
push
inc
dec
mov
daa
movb
fdivrl
xlat
push
sub
mov
cmp
cmpsb
les
sarb
pop
adc
test
mov
insl
popa
xchg
sub
int
fwait
dec
stc
mov
cmp
xor
cs
mov
sub
mov
pop
aas
fdivl
into
sub
mov
jbe
fldt
or
mov
in
push
and
mov
sub
fucom
ficomps
push
insb
adcb
cmp
xchg
fldcw
outsb
pop
sbbb
jecxz
and
dec
mov
mov
icebp
pop
xor
mov
xchg
xor
fnsave
notb
ret
scas
movsb
out
mov
inc
xchg
cmp
mov
inc
movsl
mov
cltd
pmulhw
movsb
xor
sahf
and
mov
xor
loope
sbb
fbld
push
rcll
cmc
into
cmp
add
sbb
xchg
adc
adc
sbb
xchg
jl
and
sbb
cmp
or
xlat
stos
add
sarb
push
xchg
mov
inc
jns
in
das
xor
dec
in
mov
addr16
xor
cmp
sbb
xchg
jno
mov
jle
jnp
mov
pop
test
mov
ja
pop
lret
leave
scas
push
and
pop
mov
push
inc
mov
mov
dec
cmp
and
pop
mov
xchg
push
pop
push
call
dec
gs
jns
and
mov
pop
aam
xor
mov
jo
mov
adc
adcl
cmc
mov
fdivl
int3
in
sahf
cmpsl
jg
mov
scas
in
cmpsb
sbb
lods
clc
xchg
loope
jnp
cmp
ljmp
outsb
mov
xchg
fnstenv
pop
mov
lods
and
push
sbb
ficoms
adc
outsb
cmpsb
push
lock
push
xchg
dec
mov
inc
iret
out
and
jge
pop
lock
lds
inc
adc
pushf
dec
pop
dec
lods
fimull
or
sub
or
push
das
add
sub
scas
fsubl
dec
add
sub
loop
ss
mov
mov
ret
cmp
pop
xchg
dec
inc
outsb
add
js
andb
mov
mov
clc
dec
loope
lods
mov
pop
shll
mov
or
lret
ljmp
xchg
cmpsl
sub
sub
cmp
ss
xchg
cs
fidivrl
data16
and
out
jg
out
lds
xchg
fstpl
cmp
push
mov
sub
xchg
out
fcomi
jmp
clc
sbb
js
xor
movsb
jno
adc
into
test
fisubrs
imul
out
test
mov
jno
aas
imul
repz
in
lret
test
add
test
dec
out
ret
cmp
mov
loope
daa
adc
jno
aas
mov
mov
lds
addl
sub
jno
cmpsl
ret
push
andb
mov
rorl
test
jae
icebp
cmc
jno
sbb
add
rcl
stos
push
cs
mov
mov
inc
int
and
cmpsl
sbb
cmp
imul
faddl
out
out
dec
jno
lods
jne
lods
mov
sbb
add
cmp
adc
jl
jne
leave
fldcw
xor
cld
jp
push
das
xchg
or
fimull
out
mov
cmp
pusha
mov
popa
and
call
mov
ljmp
inc
jb
cmpsb
aad
cmpb
ficomps
pop
push
rolb
pop
popf
test
pop
mov
mov
data16
fcomps
mov
mov
and
aad
andb
xchg
push
or
enter
inc
addr16
sti
push
je
lods
cmp
pop
mov
mov
sbb
aad
add
aas
xorl
pusha
leave
loope
test
mov
repz
daa
outsb
inc
dec
test
mov
add
sub
rcrl
bound
mov
int
xlat
jmp
hlt
jg
scas
inc
mov
mov
daa
cmp
gs
push
stos
ret
test
push
adc
mov
fildll
lods
cmpsb
mov
or
mov
incb
das
jne
inc
mov
call
mov
iret
insb
fldcw
in
add
mov
dec
fisubrs
cmpsb
mov
bound
or
clc
imul
jecxz,pt
add
mov
mov
scas
jnp
data16
mov
in
cmp
out
push
xchg
es
fprem1
add
sbb
fcompl
xor
enter
mov
lods
test
int
incb
adc
lods
pop
das
xor
cmp
shlb
aad
add
cmp
in
push
jg
data16
mov
jle
dec
inc
xor
mov
adc
int3
xchg
subl
movsb
push
popf
fistpll
cmp
ret
add
dec
and
popf
cs
jl
les
daa
es
cmp
fcomi
fiadds
mov
inc
mov
aad
xchg
jecxz
xchg
xor
mov
flds
lods
push
mov
dec
jle
pop
mov
test
jp
scas
imul
pop
push
movsb
sti
fxam
mov
shl
push
fisubrs
mov
cmp
sti
add
nop
pop
jecxz
mov
or
call
pusha
xlat
sti
imul
mov
inc
xor
loop
adc
clc
mov
ljmp
ret
hlt
mov
out
sbb
mov
repz
je
and
lahf
scas
outsb
sub
std
jae
xchg
sub
and
mov
loopne
std
stos
mov
cmpl
mov
adc
js
mov
loop
inc
pop
test
or
leave
stc
movsl
or
insl
mov
in
int
dec
and
inc
repnz
out
push
gs
mov
pop
mov
out
xchg
add
push
adc
xor
test
lds
pop
xor
pop
call
xchg
add
and
lock
mov
xor
int
stos
popa
push
in
or
test
sbb
in
shll
in
mov
cmovbe
push
jecxz
test
scas
push
mov
insl
mov
jg
mov
addr16
rcll
pop
fs
popa
addr16
xchg
sbb
jg
lcall
push
mov
cmpl
stos
fidivrl
test
out
fmull
or
std
pop
mov
repnz
mov
xchg
or
ret
subb
mov
xchg
or
popa
add
sbb
ret
scas
lahf
inc
push
pop
jnp
test
sahf
int3
xor
pop
dec
adc
add
incl
or
push
lret
aas
add
gs
jle
dec
repnz
xchg
arpl
xor
out
and
or
pop
or
jnp
xlat
xor
mov
test
scas
add
repnz
leave
out
sbb
sahf
ret
test
mov
movsb
mov
xor
mov
nop
mov
sub
mov
mov
daa
mov
sbb
mov
push
fldenv
loope
insb
jae
sti
gs
int3
lods
sbb
fcompl
xor
lock
aam
icebp
mov
cli
dec
pop
push
fiadds
hlt
jbe
popf
push
imul
repz
fwait
push
and
imul
test
xchg
test
push
dec
pop
aam
add
ret
or
xchg
das
adc
push
lods
hlt
push
arpl
pushf
inc
cwtl
movsl
mov
jle
insl
std
xchg
mov
mov
and
xchg
insb
hlt
pop
andl
mov
dec
fimuls
subb
mov
push
inc
mov
mov
pop
pop
bound
mov
enter
inc
sub
cmp
mov
je
mov
jbe
sub
fsin
jg
mov
push
lock
insb
lahf
push
mov
pusha
outsl
repnz
fsubl
xchg
mov
dec
mov
mov
inc
jae
mov
sub
les
jbe
pop
cltd
inc
stos
mov
test
jmp
cltd
mov
int3
jae
shll
int
xlat
fdivl
inc
push
int3
repz
sub
adc
jge
loop
sbb
jno
mov
scas
test
int
inc
push
adcl
adc
xor
out
and
mov
test
xchg
movsb
push
jle
jo
mov
add
sbb
cmp
int
jecxz
fiadds
xchg
stc
xor
imul
xchg
dec
adc
jb
inc
testl
js
cmpsb
inc
push
stos
leave
push
loopne
or
out
push
lods
out
test
scas
inc
out
dec
push
inc
popf
xchg
xor
scas
in
cmp
mov
mov
jns
test
sub
adc
in
or
std
imul
lods
lret
xor
iret
jb
daa
inc
enter
arpl
in
dec
mov
lds
stos
cld
shl
and
sub
mov
pop
iret
mov
notb
mov
push
add
push
adc
in
dec
mov
xchg
bound
cmp
add
or
sbb
popl
add
xchg
push
push
fldt
andb
mov
sarl
ss
push
xchg
mov
push
mov
push
and
sub
xchg
mov
mov
std
movl
test
jbe
stos
fisttpll
inc
pop
out
push
mov
jp
jnp
push
cmpsb
subb
sarb
ds
shlb
jmp
sti
pop
rcr
popa
addr16
mov
test
cs
cmp
test
clc
shll
sbb
test
test
clc
or
jbe
xor
jae
mov
inc
hlt
mov
leave
add
xchg
adc
add
and
adc
out
push
jmp
rorl
cli
icebp
inc
test
xor
mov
push
cwtl
test
stos
and
flds
xor
lock
test
xchg
mov
aam
mov
fcompl
test
mov
imul
mov
scas
ja
push
and
rorb
jl
aam
cmp
mov
xchg
dec
fndisi(8087
cli
jg
mov
ret
ret
or
gs
mov
mov
fmuls
pop
or
sbb
test
cmpsl
hlt
pop
int
iret
loopne
sub
adc
lahf
mov
sbb
mov
loopne
adc
ja
dec
daa
cltd
out
push
out
mov
scas
outsl
imul
or
mov
pop
sbb
xchg
lock
icebp
cmp
adc
jae
in
and
stc
shr
fcoml
mov
and
out
bound
push
out
fcomps
cmpsb
sbb
inc
mov
push
mov
jecxz
push
mov
jecxz
int
push
fxch
jb
fisubrs
out
inc
dec
mov
push
movsl
mov
xor
popf
add
mov
lods
xor
sbb
and
sbb
or
repz
int3
push
inc
cmp
fcompl
dec
mov
das
pop
mov
mov
bound
sbb
fistps
testl
dec
pop
push
pop
mov
arpl
or
xchg
add
pop
mov
pop
dec
pop
pop
cmpsb
mov
int3
insl
sbb
fsubrl
xor
inc
out
scas
push
repnz
lcall
data16
mov
jns
inc
lods
dec
repnz
addr16
inc
test
in
mov
dec
xor
fdivrs
push
dec
mov
lods
mov
sbb
repz
outsl
in
inc
inc
pop
lods
jle
xchg
iret
mov
or
jmp
insl
pop
or
fisubs
loop
sbb
int3
mov
aaa
hlt
mov
mov
push
into
outsl
pop
xchg
movsl
mov
cs
mov
imul
rcrb
sbb
xchg
jl
xor
add
repnz
es
mov
or
pop
mov
out
loop
scas
push
fs
sti
cmp
lcall
push
test
movsb
inc
cmpsl
imul
ja
mov
clc
in
mov
lahf
push
mov
xor
dec
adc
mov
pusha
ret
mov
mov
ds
hlt
fisttpll
cmp
adc
movsl
in
dec
cltd
jge
sub
mov
mov
sti
jbe
inc
pop
and
adc
dec
call
lock
inc
int
fisubl
inc
add
dec
xor
int
mov
xor
mov
push
mov
mov
int
std
lds
pop
add
sar
pop
and
pushf
insb
and
or
lods
or
fisubs
mov
scas
movsl
insb
push
out
out
sbb
inc
bound
divl
dec
pop
mov
popf
push
lahf
icebp
or
sub
jnp
cmp
cmp
fistps
push
fnstenv
rcrl
sub
in
fdivp
das
cmpsb
in
out
iret
lea
movsb
outsb
lret
lahf
mov
jle
popf
icebp
pusha
inc
arpl
adcl
or
inc
adc
mov
repz
dec
pop
ffreep
test
mov
out
loop
sahf
sbb
xchg
mov
cmp
fdivrs
mov
and
mov
repz
cmp
repnz
adc
fwait
push
mov
out
inc
inc
ljmp
and
pop
loopne
aam
xchg
gs
dec
inc
sti
cli
push
sti
and
dec
pop
pop
cld
push
mov
dec
rol
sbb
iret
push
mov
sub
adc
jle
cmpsl
and
pusha
cmc
mov
xor
sarl
xchg
test
sbb
lahf
fstl
cmp
aam
xchg
xchg
pop
fsts
sbbl
cmpsb
ret
in
frstor
and
icebp
adc
pop
rclb
jmp
iret
in
out
mov
lcall
sbb
imul
inc
sub
ret
lods
pop
xchg
sub
hlt
fnstenv
fwait
pop
out
mov
ljmp
xor
mov
dec
sub
andl
pop
adc
sbb
imul
push
jae
aam
or
sbb
es
mov
push
lcall
jp
xchg
int
ror
popa
xor
push
repnz
jbe
sub
and
pop
scas
push
and
or
lret
cmpsl
jae
cmp
bnd
jb
adc
push
enter
hlt
js
je
std
mov
movsb
cltd
mov
lret
ficomps
inc
dec
mov
out
and
cmpsb
fnstenv
mov
pop
mov
flds
xor
scas
mov
mov
add
dec
mov
int
es
push
dec
inc
push
or
insb
in
scas
fldenv
mov
movsl
int
cmpl
add
sub
adc
inc
mov
jecxz
push
pop
test
xchg
lret
mov
std
dec
mov
push
mov
mov
mov
mov
xchg
aaa
inc
and
jmp
movsb
in
loope
orl
sub
arpl
mov
push
dec
fstp
sbb
fisubs
pop
movsb
or
fcompl
icebp
leave
xor
adc
add
mov
outsl
into
daa
ljmp
or
in
inc
mov
inc
in
out
fcompl
mov
push
mov
fldenv
xchg
xor
incb
into
xchg
ficompl
test
jae
aad
sti
fldcw
pop
adc
cmpsl
cmp
add
sbb
jl
sbb
cld
in
fistl
loopne
popa
test
les
lods
ret
popa
jno
cld
mov
cmp
mov
jae
andb
repz
fdivr
jnp
mov
add
sbb
rorb
mov
pop
adc
xchg
popf
insl
lods
pop
cmp
mov
cld
adc
jae
or
cmp
lods
cltd
jmp
rolb
scas
in
push
popa
fcompl
scas
scas
sub
mov
cmpsl
jmp
adc
xchg
call
add
test
mov
mov
sub
mov
adc
mov
sbb
push
jg
out
nop
icebp
cld
fcom
dec
in
fdiv
pop
jl
inc
fcmovbe
and
std
sub
in
jns
insb
iret
push
push
outsb
add
in
int
ret
cmpsl
xlat
pop
ret
mov
inc
es
lret
movsb
push
outsb
test
std
jo
cmp
imul
pop
fidivs
hlt
xchg
lock
ja
mov
test
mov
std
lods
negb
mov
inc
daa
dec
adc
xor
aaa
jmp
pop
faddl
push
dec
mov
mov
orl
pushf
pop
push
and
popa
repz
test
sbb
inc
sahf
mov
cmp
pop
incb
test
gs
leave
jbe
cmp
pop
sbb
fisubl
pop
xchg
enter
sahf
jle
jle
dec
mov
popa
push
adc
push
std
sahf
xchg
pop
sahf
jnp
test
cli
push
adc
loope
lock
scas
mov
stos
cmpsl
mov
sbb
mov
xor
icebp
ficompl
int
add
aas
xchg
test
cmp
sub
fdivl
repz
insb
in
out
add
cmp
add
inc
lods
mov
mov
inc
cwtl
push
sbb
mov
imul
pop
mov
and
pop
jge
stos
jb
stos
fcoml
and
push
mov
inc
cs
mov
cld
sub
lret
dec
jecxz
stos
je
jmp
fsubl
dec
lahf
pop
iret
xor
movb
sbb
xlat
xlat
lods
adc
mov
sbb
lock
and
jnp
xor
push
dec
sub
jb
jns
addr16
sub
fcomp
dec
leave
mov
or
outsl
mov
mov
mov
mov
mov
add
fs
cmp
dec
inc
pop
push
jnp
cli
popf
ret
mov
cmpl
lods
mov
into
je
add
fadd
test
jne
out
xchg
mov
xchg
and
popf
xchg
aad
mov
push
enter
fldcw
mov
mov
jmp
minps
fwait
dec
and
jg
ss
ja
out
fdivl
cli
mov
jecxz
cltd
xor
xchg
push
in
mov
fadd
test
pop
es
sarb
mov
inc
std
out
cs
ds
es
cltd
movsb
lock
loop
or
inc
push
call
push
scas
mov
test
ljmp
dec
imul
push
int3
call
cmp
andl
sbb
push
mov
jnp
lcall
pusha
and
cmp
mov
out
pop
jecxz
inc
sahf
push
mov
test
xchg
faddp
std
push
fcmovnbe
je
cmpb
lods
pop
es
aad
popf
cli
push
mov
mov
ja
imul
outsb
pop
jmp
lret
pop
sahf
push
jg
lock
mov
movsl
push
sbb
xor
shll
stos
xchg
std
loop
and
sahf
filds
pop
cmpsl
jg
and
xor
in
pop
xchg
xchg
repnz
and
xor
or
cmp
mov
incb
jns
mov
ret
mov
setno
sub
cmpsl
aas
jge
and
hlt
adc
mov
add
jle
xchg
fnsave
aad
mov
aad
cltd
lods
pop
hlt
sbb
add
ss
test
roll
mov
std
dec
jae
jecxz
sahf
fwait
lcall
std
idiv
stos
dec
fimuls
icebp
aas
add
mov
in
ficomps
data16
jae
in
or
inc
or
jb
xchg
push
test
mov
daa
xor
aam
popf
inc
shl
sti
cs
jnp
sahf
sbb
test
sbb
iret
and
lcall
movsb
mov
xor
mov
dec
roll
push
jae
xor
inc
or
cwtl
mov
dec
inc
mov
sahf
pop
scas
test
mov
jle
cmp
or
xchg
and
loopne
into
mov
aaa
push
inc
sarb
xchg
adc
jle
add
cmp
movsb
push
mov
mov
or
addr16
nop
xchg
push
mov
out
pop
jle
pop
push
or
push
out
mov
out
sbb
xlat
jl
sbb
frstor
imul
xchg
mov
movsb
pusha
daa
aaa
lret
nop
xchg
rorl
push
sbb
mov
jmp
or
test
imul
das
push
push
sbb
pop
push
cmc
mov
fldcw
test
enter
mov
mov
dec
sbb
lods
and
jecxz
icebp
pop
cmp
nop
inc
xchg
xchg
or
jg
in
stc
movsb
xor
movsb
je
add
data16
cmovne
out
mov
xor
dec
mov
and
cmpsl
mov
stos
addl
or
jo
sub
xor
adc
repz
sbb
pop
cmp
pop
cmpsb
xor
loopne
sahf
adc
incb
mov
mov
mov
test
dec
xor
int
lahf
or
std
sub
shll
inc
int
shrl
dec
aaa
lods
repz
out
pop
out
cmp
scas
dec
scas
sbb
ja
repz
xchg
sub
stos
sub
xor
mov
fs
inc
add
int
fcomi
xor
movsb
push
les
fldenv
pop
scas
jno
dec
inc
add
ss
test
fsts
jae
jae
adc
ffreep
sbb
fdivl
add
dec
nop
or
lcall
xor
xchg
mov
sahf
movsb
popa
repz
aas
and
cltd
jno
mov
sbb
mov
inc
mov
loopne
fadds
inc
add
dec
cltd
call
xchg
stos
in
sbb
pop
pop
mov
mov
dec
mov
sub
in
and
sbb
jecxz
fucomp
fdivl
test
test
xorl
adc
lds
fcoml
cmp
faddp
pop
sbb
jb
cmp
xchg
mov
insl
cmpsb
int3
sti
jge
je
jbe
mov
std
les
cmp
sub
loope
push
test
out
cmp
test
sarl
pop
dec
sti
loopne
movsl
dec
xchg
dec
in
cld
mov
adc
push
scas
js
pop
cmpsl
xor
test
cmpsb
and
push
cmpl
popa
sbb
fbld
adc
jno
pop
sbb
scas
mov
inc
out
pop
xor
jae
inc
push
movsb
sub
je
mov
fidivs
arpl
insb
mov
inc
or
bnd
pusha
jbe
cmp
pop
ds
sbb
adc
jnp
push
notb
js
mov
xchg
repnz
or
mov
mov
in
in
xor
rcll
and
enter
call
je
mov
jl
mov
sbb
push
aad
scas
cmp
out
mov
lret
mov
test
int
jecxz
jecxz
sbb
jbe
inc
out
push
mov
mov
out
dec
dec
out
add
gs
cmp
pusha
mov
mov
push
movsb
jge
mov
jbe
das
pop
faddl
in
mov
and
cli
mov
mov
outsb
cld
or
xchg
sub
lea
cld
icebp
xchg
jl
adc
pop
sahf
cmp
mov
std
cli
cwtl
inc
outsb
mov
mov
xor
mov
cmpsl
cmpsb
je
sub
push
inc
mov
out
idivl
xchg
int
movsl
outsl
mov
dec
push
push
out
pop
scas
in
int3
pop
mov
dec
inc
mov
push
inc
xor
cmpsb
sbb
fwait
sbb
cld
sti
sarl
lods
xchg
sub
flds
loop
adc
cld
testb
aad
xchg
mov
push
dec
rolb
pushf
popf
test
pop
fld
pop
sbb
pusha
cmp
jl
out
test
movsl
fldenv
sahf
fldt
and
inc
movl
pop
xor
in
aad
and
addr16
add
loope
add
test
shll
lds
sbbb
cmpsb
add
xchg
loop
inc
int
fwait
and
lock
push
test
mov
int3
push
hlt
out
mov
loope
icebp
pop
add
imul
andb
inc
push
inc
mov
sbb
xlat
aaa
push
aam
push
or
jmp
repnz
test
fcmovnu
jge
scas
gs
cltd
mov
jno
push
pop
mov
mov
adc
movsb
test
jno
movsb
or
fcmovne
in
xor
cmpl
sbb
xor
ret
test
pcmpgtw
ja
push
loopne
inc
scas
pop
mov
rorb
mov
sbb
lods
cmp
jle
sub
adc
ss
sbb
test
add
fwait
push
sbb
xchg
icebp
shll
pop
push
test
fmull
and
xchg
inc
or
dec
fisttps
add
lds
xor
xchg
pusha
jle
test
mov
int
scas
jp
cltd
cwtl
das
cmpsb
adc
lret
push
cmp
jl
xchg
das
jae
xor
daa
pop
jp
dec
rcr
pop
test
mov
jge
jbe
pushf
mov
sub
mov
test
scas
cmp
ja
movsb
shll
notl
clc
scas
fdivp
into
xor
repz
lcall
mov
sarl
cs
adc
mov
lods
xlat
js
cmpsl
mov
and
pusha
sbb
test
xor
push
frstor
push
add
mov
adc
mov
test
sub
int3
mov
push
jbe
lods
push
ds
push
fldl2t
and
cmp
outsl
movsl
lds
inc
into
mulb
loop
lds
stos
insl
pop
xchg
data16
mov
push
xchg
out
mov
jecxz
mov
dec
popf
fimuls
test
dec
mov
mov
ret
sti
enter
mov
dec
movsb
aaa
gs
inc
popa
xor
fisubrl
in
xor
movsb
sbb
mov
cld
xchg
push
mov
subb
push
nop
ja
pop
sub
aam
adc
jl
pop
xor
stc
mov
fisubs
push
pop
fimuls
sti
dec
icebp
repnz
dec
add
daa
test
jp
or
xchg
mov
inc
mov
bound
mov
pop
adc
and
imul
outsl
pop
jge
xchg
sbb
jp
mov
pop
inc
std
sbb
pop
mov
stc
loopne
and
xor
ss
lock
pusha
xchg
incb
lods
mov
pop
sti
mov
and
push
jno
jno
or
or
cs
mov
cli
jl
hlt
mov
inc
xor
ds
clc
fwait
adcl
lret
popf
std
xchg
daa
dec
pop
call
addr16
cmc
add
xchg
inc
pop
jbe
pop
add
push
sti
popl
sahf
add
sar
sub
xchg
sahf
xchg
xor
gs
adc
sahf
fs
js
pop
lods
pusha
pop
inc
mov
es
mov
test
loop
inc
pop
inc
ja
cmpsb
fldenv
mov
pop
dec
popf
jl
fstl
sbb
addr16
xchg
cli
or
out
xorl
stc
fidivs
pop
push
jecxz
sbb
sbb
dec
push
sbb
xor
and
int3
pushf
repnz
stos
jecxz
andb
xor
sbb
jl
icebp
mov
in
lods
les
xchg
aam
loop
cmpsb
dec
xchg
sbb
movsl
rorl
scas
in
outsb
xchg
test
sub
es
int
sub
test
jne
std
push
scas
cs
scas
pop
dec
in
fdiv
and
imul
mov
dec
jns
sbb
int3
roll
loope
lret
je
mov
adc
mov
loope
loopne
fnstenv
dec
fsubl
lock
out
out
sbb
adc
cmpsb
test
lods
dec
push
enter
adc
fstl
aam
out
movb
cmpsb
mov
mov
push
push
pushf
repnz
popf
fsubs
and
xchg
mov
mov
push
jmp
movsb
push
jl
ret
or
addr16
and
and
jmp
sub
jne
dec
sub
jmp
jp
sbb
sbb
push
orb
in
adc
rorl
into
js
test
fcomp
sub
jp
shl
adc
repz
sub
fwait
jbe
les
jg
jge
mov
sti
mov
leave
xor
ljmp
xchg
xlat
cmp
mov
popa
fucomp
xor
test
sbb
testb
es
sarl
jl
jp
sub
pop
rcrb
stos
inc
enter
test
cs
sub
push
cmpl
mov
mov
int
lods
sbbl
fildl
mov
ss
leave
mov
iret
imul
jge
pop
cs
jne
repnz
jge
lods
mov
xchg
and
inc
insl
jns
push
cld
and
in
testb
cmpsb
dec
dec
or
outsb
fldenv
scas
insb
daa
not
dec
inc
pop
fucom
jmp
scas
pop
pop
out
test
dec
cmp
int3
mov
jns
add
fsub
push
and
xchg
mov
mov
outsb
fs
cmc
movsl
jae
out
mov
lods
fcompl
jo
das
mov
mov
insl
mov
add
mov
faddl
mov
pop
fdiv
mov
mov
push
mov
test
icebp
jb
pop
cmpsb
iret
test
dec
movsl
out
push
ss
xlat
cwtl
fdivrl
sti
cltd
dec
aad
jae
scas
jae
cli
test
push
cmp
flds
and
or
mov
cmpsl
sub
add
icebp
popf
fdivrl
or
adc
into
stos
inc
xor
js
mov
pushf
fsub
es
aaa
call
lock
cmc
mov
sbb
pop
into
hlt
xor
lret
sarb
into
pop
imul
lahf
in
movsb
scas
test
shll
mov
pop
push
mov
test
dec
int3
push
and
mov
and
xor
jno
inc
fldcw
fs
inc
ljmp
pop
mov
mov
xor
movsb
lcall
fnstenv
stc
sbb
clc
in
scas
lret
inc
dec
adc
jl
fs
pop
fistl
adc
dec
mov
pop
cld
inc
ficompl
popa
in
orb
movsl
mov
push
pop
xchg
jl
cmp
in
xchg
lods
add
cmpsl
data16
divb
aam
add
out
arpl
push
fdivrl
repz
inc
and
jp
mov
fdivl
in
pop
inc
xlat
and
mov
sarb
push
xor
shrb
loope
cmp
fldcw
lods
test
std
or
pop
ja
bound
rcll
frstor
ret
adc
subb
and
or
cli
mov
dec
push
or
clc
cmc
jl
mov
repz
hlt
jmp
mov
jp
dec
mov
xor
les
xchg
lret
jp
into
sbb
std
js
xor
mov
inc
jge
jne
aad
es
sti
jbe
jle
lahf
mov
mov
push
cmp
adc
xlat
jle
sbb
pop
or
jno
push
add
test
leave
test
adc
or
nop
das
movsl
push
lret
dec
hlt
std
cltd
dec
pop
fimull
out
mov
lods
xchg
lret
jmp
out
mov
subb
leave
jbe
or
mov
add
fwait
lahf
ret
and
out
fstps
fmul
es
or
cmp
leave
xchg
sbb
ss
push
lret
pop
add
pop
xchg
cmpl
push
and
mov
pop
fdivl
int3
outsl
jno
inc
lret
sbb
pop
cmp
insb
ret
sti
clc
jecxz
cwtl
sbb
lcall
fsubrl
fidivrs
insb
jle
lcall
sbb
pop
rcrl
xchg
lock
or
bsr
xor
pop
fwait
mov
mov
sbb
das
push
and
dec
jecxz
sub
sub
cmp
mov
jle
xor
ljmp
mov
imul
mov
ret
xor
scas
testl
movsb
fxch
movsb
or
lods
sub
pop
or
and
or
lods
ret
addl
add
into
mov
bound
addb
jbe
jmp
sub
mov
aam
jg
sub
sbb
adc
mov
sbb
cmpsl
mov
or
int
jbe
push
int3
cmp
jae
cld
xor
repnz
jbe
lods
in
lods
sub
sahf
lods
and
out
icebp
mov
mov
les
iret
xchg
and
out
mov
mov
mov
fabs
in
addr16
mul
mov
hlt
rolb
and
mov
rorb
int
test
dec
jbe
or
dec
lret
push
inc
sub
xchg
fnstenv
mov
cmp
in
push
lahf
ret
sub
in
add
mov
push
out
aad
dec
test
jl
inc
sbb
fsubs
fwait
cs
test
mov
daa
scas
mov
pusha
aam
mulb
cmc
or
push
fisttpll
adc
movsb
mov
adc
lods
clc
fwait
test
inc
loope
stc
push
mov
inc
jmp
mov
outsl
lock
dec
jns
add
sub
test
jns
test
test
daa
imul
aad
rcrl
add
adc
out
cmp
sub
add
pop
gs
jae
adc
inc
insb
scas
xchg
test
aam
fmull
sti
jnp
pop
push
cs
jo
pop
mov
pop
mov
push
leave
and
shl
jae
outsb
adcl
pusha
fwait
mov
stos
pushf
push
adcb
test
jg
ja
setg
outsb
xchg
adc
sbb
cmp
shlb
mov
xchg
xor
mov
popf
shlb
iret
and
push
test
fst
imul
pop
adc
pop
enter
cmpsl
mov
adc
dec
shll
scas
test
adc
cmp
mov
negb
jl
ret
std
push
out
jecxz
push
mov
sub
mov
mov
xor
cmp
je
incb
mov
lds
in
cmp
cmp
push
push
push
mov
adc
addl
dec
add
outsb
cltd
mov
or
xor
pop
rorl
mov
jl
mov
jp
ljmp
je
imul
jb
mov
in
push
cmp
and
mov
push
dec
popf
lret
sbb
andb
adc
inc
xchg
shll
popf
push
testl
mov
jns
add
cld
fwait
js
inc
movsb
das
push
pusha
nop
mov
out
mov
lock
mov
loop
sarb
test
xchg
cmp
jns
xor
or
jb
ljmp
lcall
and
jle
test
addr16
sbb
test
jl
mov
std
in
xchg
pop
mov
inc
lods
pop
cmpsb
std
fimuls
insl
mov
outsb
loope
xchg
mov
scas
lret
or
xchg
sbb
pop
pop
xchg
mov
and
scas
std
aaa
int3
cmpsl
loopnew
mov
popa
adc
cmp
div
pop
loop
lds
rcrl
rcl
out
xor
int3
movsl
fcom
sbb
dec
dec
and
out
push
mov
mov
and
hlt
mov
mov
sub
mov
push
pop
pop
jb
out
sti
adc
inc
popf
mov
pop
sbb
orb
lea
sub
push
ss
movsl
stc
add
stos
sbb
test
xor
jbe
lock
loope
fstp
xchg
lret
subb
cmp
mov
lret
sarb
sub
jno
dec
sbb
mov
mov
mov
loopne
cmpsb
call
xchg
imul
fdivrp
mov
pushf
pusha
jge
mov
xor
test
jecxz
inc
nop
or
hlt
ftst
and
push
or
sbb
mov
dec
mov
int
es
mov
xchg
insl
fcoml
mov
dec
push
in
in
mov
xchg
int3
and
inc
sbb
cmp
popf
push
push
cmp
sub
mov
push
repnz
call
xchg
and
or
icebp
mov
gs
in
std
dec
adc
ja
or
push
stc
dec
jp
aam
jnp
mov
cmc
hlt
or
pushf
jae
mov
xor
lods
cmpsb
mov
xor
mov
test
cmpsb
or
dec
mov
hlt
sbb
adcb
mov
jge
ja
mov
xchg
ret
xor
in
lods
cmp
pop
lock
xchg
xchg
dec
mov
outsl
mov
pop
pop
notb
dec
push
movsb
push
push
jg
std
std
inc
mov
ss
mov
mov
mov
imul
pop
dec
jl
lods
and
gs
fwait
xlat
mov
lods
call
movsb
mov
ret
in
fnstenv
clc
adc
inc
int3
xchg
mov
push
dec
add
and
fwait
mov
mov
test
cmp
sbb
push
imul
aaa
or
mov
jmp
inc
xor
inc
int3
mov
movsb
lock
cli
andl
lcall
fs
push
cmc
sub
stc
popf
lods
cmpsl
dec
pop
dec
pop
cwtl
cmp
mov
ljmp
fisubs
jne
ss
sub
out
cmp
push
data16
nop
cwtl
jo
xor
fsubl
jne
leave
inc
loop
andb
stos
cs
mov
xor
cmp
add
mov
lods
jno
call
ds
sahf
mov
lcall
stc
jnp
pushf
mov
xor
idivl
rcr
mov
mov
push
cld
dec
sbb
sahf
mov
dec
sub
adc
mov
sbb
xchg
sub
mov
cs
jb
flds
adc
mov
jge
repz
inc
or
dec
mov
cltd
mov
pop
insl
mov
sub
jnp
shr
lret
inc
insb
pop
jno
inc
jno
and
jge
out
cmp
test
mov
lret
xchg
sbb
xlat
jmp
push
push
fnsave
lods
cmpsl
mov
pop
ret
push
repz
sub
scas
cld
cs
cmp
repz
repz
out
imul
dec
xor
pop
cmovno
jmpw
jns
insl
add
dec
mov
sub
cld
inc
es
movsb
push
mov
pop
sbb
xchg
pusha
fwait
test
aad
pop
mov
cli
jnp
push
lret
and
stos
sbb
pushl
and
lods
lret
mov
adc
fisubrs
inc
fwait
scas
aam
ljmp
sub
cmp
cli
cli
mov
sub
adc
scas
fisubrs
or
sub
imul
movl
imull
loop
out
sbb
std
mov
lods
mov
lahf
add
mov
vsubss
dec
sbb
add
xor
sbb
fldcw
mov
into
lds
adcb
scas
cld
test
data16
adc
negb
test
js
fcompl
adc
xchg
in
push
incl
daa
adc
or
xor
repz
int3
clc
std
movsl
data16
inc
es
and
xor
push
outsb
test
fmull
out
pop
daa
outsl
aad
adc
mov
mov
fstl
mov
ljmp
dec
adcl
and
sbb
mov
mov
sub
or
inc
in
sub
cli
pop
test
push
push
dec
les
repz
adc
mov
push
cmp
popl
stos
jb
push
mov
sub
ja
xor
inc
sbb
push
xchg
dec
mov
mov
adc
lods
xchg
test
fnsave
lret
adc
shl
hlt
scas
and
pusha
mov
pop
lret
ret
cmp
add
mov
mov
jl
lret
insb
in
je
clc
mov
sub
cmp
ret
jl
imul
iret
jnp
inc
es
cmp
push
ds
pop
cmc
add
pop
cmpb
xor
sbb
in
dec
jg
mov
pusha
add
aam
out
test
or
pop
jp
scas
dec
push
xchg
in
mov
pop
xchg
xchg
jnp
fninit
mov
mov
leave
mov
icebp
push
push
sarl
nop
cmpsb
push
xor
cmpsb
lds
pushl
sub
in
shll
pop
or
xor
jne
addr16
mov
inc
push
mov
mov
das
fbld
push
lret
jp
test
and
push
nop
int
inc
add
inc
and
dec
negb
shrl
jle
fstp
jns
jns
xchg
jl
mov
scas
test
dec
cmp
mov
lods
das
lcall
hlt
jl
insl
add
test
movl
sbb
mov
dec
insl
xchg
in
int
cmp
jge
lods
sbbb
dec
lock
cmp
adc
cmpsb
sbb
jmp
adc
in
flds
decb
and
fdivrs
inc
std
adc
mov
les
and
push
pop
stos
std
mov
xchg
inc
mov
ds
jecxz
fmull
scas
mov
insl
mov
jp
add
out
repz
mov
addr16
icebp
xor
sbbb
pop
shlb
pop
cmpsl
cmp
jl
lea
std
mov
inc
sarl
clc
and
sti
push
add
xchg
jle
es
add
cmp
in
fwait
sub
lods
jecxz
pop
out
pusha
add
divb
sub
add
loop
inc
mov
push
or
jne
mov
sbb
aaa
jl
sub
add
sbb
mov
or
hlt
sahf
jp
inc
out
lods
jle
in
insb
fstpl
mov
add
out
ficompl
stos
sti
imul
iret
orl
sbb
mov
xchg
sub
stos
call
mov
cld
xchg
repz
inc
ja
in
mov
add
in
or
pop
insb
cmp
inc
popa
push
sbb
sub
mov
fidivl
jo
xchg
js
scas
ret
jmp
inc
jbe
sub
jg
in
xchg
cli
faddl
cmp
pop
mov
adc
push
rclb
daa
jne
testl
mov
loopne
mov
lahf
shrl
push
jmp
cs
nop
or
loop
movsl
lahf
pop
mov
rolb
xchg
addr16
or
fldenv
imul
mov
push
lods
mov
mov
test
sub
sbb
sub
push
mov
jge
out
daa
popf
loope
in
aam
fisubrl
or
pop
psrlw
cwtl
mov
push
mov
dec
in
in
ss
cmp
std
sbb
push
mov
dec
xchg
fimull
lcall
popa
fimull
stc
das
xorl
xlat
push
xor
xor
stos
mov
mov
mov
and
cmc
sub
je
scas
jb
add
int
cld
sub
jle
push
sbb
mov
and
mov
jae
orl
frndint
subl
mov
scas
inc
outsl
push
outsb
lcall
inc
dec
sub
mov
aam
ljmp
stc
mov
imul
xorl
inc
inc
out
mov
daa
jno
mov
and
mov
mov
inc
cmp
lods
cmpsl
inc
jge
movsw
movsb
sbb
icebp
std
out
nop
cmp
pop
pop
mov
xchg
or
test
scas
fnstenv
bnd
sub
gs
jno
push
pop
inc
pop
pop
pop
int
sbb
jmp
clc
mov
push
mov
pushl
pop
daa
out
ss
bound
sbb
adcb
stos
sarl
sub
xor
js
xchg
xchg
inc
adc
dec
sub
pop
pop
jmp
xchg
jns
rclb
jle
jo
inc
popf
out
scas
inc
push
inc
pop
out
nop
jb
xchg
dec
cs
loopne
cmp
mov
in
in
in
dec
std
fsubrs
inc
sahf
cli
and
mov
mov
xchg
scas
fildll
jle
movsb
pusha
lahf
and
push
test
mov
call
push
mov
repnz
sbb
shr
jle
std
inc
inc
addr16
pop
fsts
push
add
jns
aaa
arpl
aam
cmc
stos
push
inc
bound
test
or
jg
or
mov
adc
sti
frstor
jl
lds
into
scas
loope
std
mov
pop
jp
leave
mov
or
mov
repz
mov
dec
jne
fcomi
int3
mov
push
int
popf
adc
lret
nop
mov
ret
xchg
mov
push
hlt
sbb
loope
test
jnp
stc
sti
aad
imul
dec
push
xchg
jl
push
xchg
mov
xlat
lock
sub
adc
aam
jg
mov
or
xor
or
mov
in
sub
rcrl
lcall
dec
jno
stos
xor
pop
dec
sub
fdivr
into
aas
xlat
mov
adc
les
inc
and
dec
jmp
xchg
leave
inc
daa
cmp
mov
lahf
push
add
mull
or
xchg
je
enter
lods
and
xchg
scas
enter
mov
or
lret
fcmovnb
jno
movsb
in
mov
mov
sub
je
and
dec
push
adc
adc
out
test
add
stos
frstor
xchg
jecxz
sbb
out
jge
mov
push
lret
add
mov
inc
cmpsb
dec
movsb
in
xchg
cs
adc
pop
push
stc
test
adc
cmp
sub
pushf
or
test
push
repnz
test
in
and
jb
sbb
mov
dec
xchg
dec
sbb
adc
andl
lods
pop
std
scas
rcr
iret
xlat
pop
aad
add
mov
mov
ljmp
popf
sub
dec
dec
loope
and
in
ss
loop
in
add
pushf
test
mov
negb
scas
mov
sub
push
stos
add
mov
xchg
jl
or
movsb
loop
leave
dec
jp
test
pop
jae
gs
adc
push
pop
jle
in
mov
lret
cmp
and
scas
inc
out
rep
cmpsb
dec
adc
pop
adc
loopne
lcall
jmp
std
xchg
sbb
adc
outsb
adc
mov
fldpi
add
inc
push
popa
push
dec
lahf
sahf
and
xchg
shll
jns
mov
addr16
addr16
xchg
jmp
pop
sahf
int
stc
inc
nop
icebp
loopne
das
mov
dec
test
dec
enter
lret
jbe
loop
xchg
divb
inc
sbb
js
leave
fisubrl
in
flds
stos
cld
push
popf
and
sub
and
repnz
scas
pop
hlt
int3
lret
mov
ret
mov
popf
dec
popf
lahf
mov
test
daa
icebp
xor
daa
inc
xor
xchg
leave
jo
pop
sub
sub
mov
xor
je
pop
lods
rcrb
jg
inc
mov
fadds
fnstcw
in
std
and
push
je
scas
push
add
out
sbb
fwait
mov
push
dec
push
iret
shlb
inc
outsl
xlat
and
dec
push
lret
mov
mov
ds
jo
push
pop
in
push
daa
push
mov
lods
push
cmc
pusha
lea
pop
sub
imul
mov
test
das
outsb
pop
mov
fsubp
sbb
mov
adc
push
js
mov
cmpsb
les
daa
sbb
push
mov
push
xchg
mov
add
or
jp
mov
or
out
cmp
or
sub
out
jns
push
outsl
call
jns
adc
outsl
jmp
sub
dec
pushf
shrb
fisttpl
idivb
enter
or
xchg
bnd
test
xor
cmpsl
mov
dec
sub
faddp
dec
out
and
pop
adc
adc
push
xor
in
adc
add
fwait
ret
sub
repnz
push
lds
mov
addb
cmc
cwtl
cmp
mov
lcall
and
jnp
sbb
aam
cmp
or
inc
mov
dec
insb
dec
out
icebp
test
jb
dec
mov
movsb
or
inc
or
shll
xchg
filds
jmp
roll
and
inc
add
pusha
jl
stc
iret
dec
mov
jmp
jae
xor
mov
mov
and
jb
mov
pop
inc
cmpsb
popf
std
sbb
lret
test
call
or
roll
cmp
out
in
out
ret
mov
jle
fmull
xchg
lret
movsl
int3
and
divb
add
push
inc
and
xor
int3
xchg
cmp
jmp
and
mov
fnstenv
test
lock
test
lcall
loope
push
aam
es
hlt
adc
sbb
std
push
sbb
inc
aad
sub
scas
test
mov
sub
and
mov
cwtl
push
pop
fisttpll
fwait
test
test
mov
sub
fs
je
xor
mov
dec
test
dec
cmp
aad
or
sbb
sti
and
xor
hlt
sub
lods
subb
cmpsl
mov
lds
sbb
scas
jp
daa
sbb
cmp
jae
xchg
xor
cmp
ja
mov
sbb
mov
push
lahf
stc
pop
mul
aad
les
jecxz
ror
hlt
faddl
xlat
ljmp
and
sbb
loope
sahf
cmp
push
repnz
or
mov
lret
mov
mov
int3
popf
mov
loope
je
notl
icebp
std
call
aam
mov
fcompl
test
scas
or
jo
xchg
inc
jle
es
popf
push
cmp
popf
mov
je
jae
das
push
mov
iret
mov
js
out
mov
dec
in
js
add
fwait
decb
out
cld
out
inc
pop
jbe
pop
jg
jae
sbb
lods
test
lds
pop
sub
mov
das
and
inc
lods
and
inc
mov
ja
in
xchg
fs
mov
mov
add
cmp
xchg
clc
js
and
jno
fildl
call
scas
xchg
mov
xorl
decl
inc
xor
test
leave
adc
jb
mov
ret
sahf
imul
std
mov
cmpsl
popa
inc
leave
scas
mov
pushf
loopne
cltd
mov
adc
adc
test
and
xchg
mov
push
sbb
ficompl
sub
mov
or
out
jb
out
sbb
inc
sub
xchg
lods
mov
icebp
bnd
mov
add
dec
add
in
mov
mov
scas
movsl
setg
test
sahf
clc
and
shr
das
ret
mov
jecxz
repnz
and
pop
cmpsb
test
test
es
push
cmpsl
add
jb
in
mov
lahf
mov
lds
adc
xchg
cmp
in
jns
mov
and
in
jns
mov
sub
push
das
pop
cmp
or
cmp
xor
sti
sub
push
flds
mov
aas
out
in
sahf
mov
stc
cmp
js
dec
fdivl
and
mov
xchg
mov
data16
leave
dec
xor
adc
mov
jp
pop
jbe
mov
mov
psrld
mov
sbb
cmc
dec
shl
jns
call
pop
mov
inc
addr16
mov
stc
addl
mov
pop
pop
cmp
in
lcall
ja
push
xchg
nop
inc
lock
sbb
fldcw
mov
leave
out
out
mov
inc
adc
inc
pop
ret
adc
ja
out
push
jl
dec
pop
testl
push
xchg
cltd
sar
sti
test
stc
mov
or
int
popf
lods
leave
pop
imul
xchg
adc
jo
fisubrs
lock
loopne
cmp
adcb
or
popf
xchg
jp
cltd
cli
mov
cmpsl
mov
add
bound
ds
out
mov
inc
pop
mov
push
mov
es
sbb
sbb
adc
mov
fcompl
cmp
dec
mov
sub
adc
add
scas
loopne
inc
in
out
xchg
movsb
outsb
fisubl
jle
xor
pop
fiadds
pop
xorb
adc
call
cltd
inc
cmp
xchg
rcrl
dec
pop
int
sbb
fisttpl
hlt
insl
mov
cli
outsb
cmp
cmpsb
fstps
test
mov
mov
jmp
inc
stc
enter
push
sub
ret
and
xor
adc
sbb
pusha
mov
dec
sub
rcrb
int3
jb
mov
jecxz
mov
lods
jne
push
mov
push
popa
xchg
mov
dec
xor
fimuls
pushf
test
mov
fsts
imul
cmp
in
mov
outsb
sbb
sub
sub
std
jmp
sub
sbb
gs
scas
push
cmp
dec
insb
mov
scas
mov
je
adc
testb
xchg
xchg
repz
push
and
and
mov
xorl
in
fstps
add
rcll
and
in
data16
cmp
lds
sbbb
xor
ficoms
mov
test
xchg
ret
cmp
lods
lds
lds
push
pop
mov
mov
xchg
aas
mov
mov
and
jno
call
xchg
test
cli
and
lods
lods
subb
scas
add
sbbb
mov
dec
push
cmp
mov
lock
cs
jnp
fs
mov
push
push
nop
mov
loope
pop
movsl
fdivp
xchg
xor
std
popf
push
xchg
pop
sahf
sti
xchg
xchg
orl
sbb
sub
or
cmpsl
lods
sub
dec
sahf
and
fwait
imul
aad
cmp
scas
pushf
jle
jnp
leave
and
sbb
mov
in
int
mov
inc
je
jae
scas
jb
scas
xchg
addr16
mov
ret
fstpt
or
mov
stos
fsub
test
xor
gs
push
mov
movsl
sub
mov
aaa
mov
jae
mov
mov
add
inc
xchg
stos
cmp
daa
fdivrl
or
push
hlt
lock
lock
jno
and
mov
sub
out
aaa
nop
mov
sub
jp
mov
stc
mov
mov
aam
dec
int3
hlt
ds
arpl
shrl
mov
mov
mov
dec
jge
add
mov
push
mov
orl
xchg
popf
push
sub
jae
fsubrs
sub
int
xchg
push
dec
lods
mov
fadds
repnz
pop
xor
jg
les
add
fs
std
pop
test
sti
out
sub
fisttpl
or
push
push
jno
add
pop
sbb
int
out
cltd
jns
ret
aam
jcxz
add
xor
pushf
test
repz
int
inc
imul
or
push
jbe
jge
push
xchg
sub
sub
mov
adc
or
fwait
inc
scas
icebp
xchg
sbb
sub
mov
into
xor
imul
scas
fwait
mov
mov
pop
inc
pop
addr16
sbb
dec
inc
xchg
push
subl
lea
out
push
push
mov
in
lds
fsubrl
pop
leave
mov
cmpsl
lret
lds
adc
in
out
pop
test
inc
inc
gs
xor
outsl
pop
push
sub
aad
mov
pop
dec
iret
fstps
popa
cmp
push
cmpb
imul
pushf
or
pop
adc
imul
sub
inc
clc
lods
arpl
les
test
scas
push
jecxz
sub
fs
inc
mov
mov
repz
imul
lea
fxch
inc
cmp
jle
adc
aam
mov
scas
sub
enter
inc
fildl
arpl
loopne,pn
mov
mov
inc
pop
addr16
lock
mov
test
inc
xchg
push
mov
ret
sbb
push
popa
in
jb
xchg
lods
or
inc
mov
sti
out
das
adc
pop
cmpsl
cmc
out
push
xor
repnz
shl
ficomps
orl
fwait
lods
cmpsl
mov
imul
out
xor
incb
sub
aam
aad
nop
enter
mov
mov
adc
dec
fmulp
xchg
dec
repz
int
test
cmc
testl
test
mov
lods
cmc
int3
out
arpl
imul
retw
pop
les
push
out
or
mov
loopne
call
arpl
push
and
rorb
add
pop
outsb
stos
and
popa
xchg
push
and
push
and
lods
add
mov
jno
jle
pop
or
into
insl
cld
xchg
ss
es
aas
mov
lret
sti
xchg
fprem1
jns
xchg
inc
jno
sahf
inc
cmpsl
jp
dec
sbb
xlat
in
mov
xchg
lods
mov
pop
dec
cmp
fcompl
out
in
mov
mov
inc
and
pop
ret
cmp
std
mov
pop
lock
or
popf
js
into
cmp
cli
inc
outsl
arpl
es
push
call
xor
loop
inc
lods
push
push
mov
movsl
cmp
sar
fisttpll
push
fsubr
jbe
call
and
jns
fcomp
arpl
fs
xchg
je
sbb
pop
sbb
ja
popa
xchg
jp
vmovaps
pop
mov
int3
xchg
aad
movb
pop
xor
shlb
push
out
clc
popa
xor
lods
adc
lods
fdivrl
mov
cmp
fcoml
xchg
push
mov
outsb
sti
sbb
sarb
fdiv
mov
ret
aad
sbb
xchg
jg
xchg
and
mov
mov
or
cmp
scas
xlat
sahf
scas
and
jbe
je
jno
popf
xor
test
int
dec
add
les
pmaxub
loope
scas
mov
cmp
fidivrs
fmul
fxch
mov
nop
bound
mov
mov
mov
lods
pop
inc
fisubs
pop
jmp
xor
push
sub
movsl
fnstsw
dec
cmp
jmp
ljmp
dec
aad
mov
pop
jl
clc
pop
out
cwtl
push
cmp
ja
sbb
mov
jae
xchg
dec
fnstcw
mov
scas
xchg
jmp
into
jg
sub
popf
pushf
add
jae
test
enter
sbb
rcll
or
or
xor
and
adcb
push
jecxz
sbb
mov
test
or
aaa
jns
test
adc
and
call
mov
imul
pop
adc
es
in
sub
nop
pop
lahf
xchg
test
lock
lods
pop
xor
push
stc
int
sbb
popf
mov
jnp
jae
lcall
in
mov
fyl2xp1
xchg
mov
mov
rcll
xchg
fs
inc
fdivrs
imul
mov
xchg
lea
mov
sbb
mov
test
cmp
adcl
inc
xchg
mov
inc
adc
push
pop
cmpsb
scas
aam
jg
repz
cmp
mov
out
add
jmp
test
inc
pop
repz
cmpl
jl
fnstcw
rcrl
mov
mov
sbb
cli
xor
xchg
mov
push
les
aas
sbb
movsb
add
dec
sub
cmpb
xchg
mov
push
pop
mov
pop
push
push
in
dec
iret
in
mov
fstl
xchg
xor
rcrl
jp
xor
push
gs
pop
and
adc
xorl
dec
pop
adc
or
cld
dec
dec
sub
out
fmull
fmul
adc
pop
jae
push
stos
cmp
sub
and
jle
or
mov
push
xchg
or
xor
scas
in
iret
add
fnstsw
hlt
mov
pop
jl
cmp
test
or
bound
mov
in
fs
cli
data16
pop
repnz
inc
ret
xorl
jmp
mov
jp
das
shrl
xchg
cld
add
shl
add
into
push
mov
cmp
repnz
rcrl
cmp
inc
outsb
sti
clc
adc
mov
jp
adc
sub
cmp
cmp
lahf
test
in
repnz
daa
xor
inc
dec
je
sbb
add
xchg
in
or
adc
inc
and
test
xor
mov
mov
mov
adc
sub
xor
pop
imul
addr16
mov
in
into
lret
lds
aaa
mov
jle
lods
lret
xchg
lds
jo
mov
sahf
mov
push
pop
fbstp
imul
cmp
adc
int3
jp
add
push
mov
sbb
std
lods
test
dec
xchg
cwtl
sub
popa
add
cmpb
pop
pop
out
and
ret
into
stos
xchg
jmp
cmp
mov
push
lods
xchg
es
rorl
pop
add
inc
sub
lret
jne
mov
fstps
pop
lds
andl
xchg
push
cli
fidivrs
in
lret
fs
mov
aas
mov
jno
shl
xchg
out
js
cmp
aas
es
dec
sub
popf
mov
test
ret
sbb
lahf
fdivr
lock
rolb
push
or
xor
pop
out
loop
jb
cmpsb
cmpb
incl
cmp
xchg
ja
mov
and
in
loopne
test
cs
popa
dec
stos
pushf
sbb
out
xchg
in
mov
mov
test
push
cmp
cli
in
nop
mov
in
cli
sbb
fabs
mov
movsb
insl
repz
pop
ret
push
int3
mov
movb
int3
test
mov
xchg
sub
jns
mov
push
pop
pop
lods
das
cwtl
aam
mov
pop
ret
jle
movsb
flds
daa
jl
cltd
rolb
out
in
adc
stc
xor
xchg
js
in
mov
and
and
or
cmp
and
xchg
xor
or
std
aad
lahf
push
stos
push
mov
lcall
test
dec
nop
repz
insl
decl
and
std
or
js
stc
cmp
incb
leave
inc
enter
cmp
dec
sbb
sbb
bound
jg
lods
ja
lret
pop
fs
push
push
xor
mov
mov
inc
mov
stos
cmp
imul
inc
popf
jge
mov
and
mov
lret
and
pop
repz
xchg
mov
xchg
jae
inc
dec
push
pop
lods
fldenv
xor
adcb
adc
mov
sbb
shl
jl
push
imul
mov
or
mov
push
or
fnop
and
inc
ljmp
iret
rcrb
enter
js
and
test
out
insl
dec
or
loop
xor
int
sub
mov
cmpsb
lret
lahf
scas
inc
and
fisttps
add
dec
cmp
lcall
test
pop
inc
std
pop
add
mov
jmp
testb
jo
clc
mov
and
mov
xchg
test
test
adc
mov
std
repz
into
in
movsl
lods
fcmovne
fstpl
das
dec
push
in
mov
jae
add
sbb
mov
in
das
insl
lods
adc
scas
fwait
out
sub
sbb
xchg
cmc
inc
fcmovnu
out
out
sbb
xchg
popf
pop
clc
sbb
repz
jl
test
es
ja
test
orl
xor
cli
cmp
jl
dec
pop
les
enter
insb
in
jg
jg
fisubl
lahf
sbb
mov
das
mov
cmp
sub
stos
inc
mov
xor
fnstsw
fisubs
es
popf
dec
dec
mov
xchg
add
sahf
inc
pop
test
hlt
cmp
sbb
add
and
pushf
in
imul
sti
sub
xchg
sub
cmp
jge
addb
loope
dec
adc
pop
pop
aas
mov
mov
fists
imul
mov
repz
or
ret
les
ds
jge
adc
popf
inc
jmp
out
sbb
lahf
xor
cmp
flds
adc
scas
mov
out
and
sbb
xchg
movsl
push
inc
pop
xchg
movsb
hlt
nop
test
jl
rorl
push
cmc
mov
pop
jl
loopne
mov
jl
pusha
mov
cld
xor
add
mov
inc
sbb
mov
insb
int3
push
in
arpl
pop
sub
adc
out
sbb
lahf
sub
cld
insl
and
sub
sahf
movsb
test
punpckhdq
sub
inc
je
mov
mov
loopne
sti
and
pushf
rorl
test
insb
out
sbb
push
lret
cmpl
andl
pop
adc
shlb
fstpl
test
arpl
sbb
lret
mov
mov
add
xchg
test
pop
mov
mov
jbe
and
stos
sbb
sub
shll
sub
out
cmpsb
lea
scas
add
aaa
xor
addl
push
xor
mov
es
ret
addr16
or
or
pushf
dec
push
push
fidivs
in
xchg
sbb
leave
pop
mov
sbb
sbb
or
pop
cmp
gs
lds
jns
jb
xchg
jb
dec
jns
xchg
lea
mov
push
jge
jle
adc
and
jno
out
xchg
push
fcompp
xlat
and
mov
pusha
or
in
sbb
sti
fimuls
xchg
cmp
mov
dec
dec
jbe
lods
dec
pop
fs
sbbb
test
mov
add
ret
data16
push
cmp
mov
sbb
cmp
xchg
or
loopne
and
mov
les
push
subb
daa
aas
addr16
aad
cld
pop
lds
repz
int
dec
nop
test
in
lods
das
repz
fbld
cmpsb
sbb
call
push
inc
push
enter
push
mov
lahf
dec
out
test
dec
sub
fstps
outsl
cli
or
add
das
aaa
nop
inc
movsl
les
sub
mov
mov
fimull
mov
push
std
sbb
mov
jmp
cs
in
xchg
aas
inc
in
xor
mov
hlt
imul
ret
das
inc
mov
mov
push
mov
xchg
hlt
pop
mov
out
add
dec
icebp
fsubl
cmc
xchg
mov
jbe
lock
jp
fwait
mov
or
cmpsl
dec
or
jle
mov
mov
xor
mov
jb
test
mov
js
and
iret
and
mov
addl
add
shl
fldcw
dec
dec
mov
pusha
sbb
pop
nop
mov
sub
stc
test
sbb
fwait
pop
out
jl
mov
cs
mov
mov
cmp
xchg
xchg
jge
movsl
xor
jbe
xchg
pop
lret
mov
add
xlat
cs
dec
out
fldcw
jae
sub
rol
in
scas
jp
inc
sahf
push
and
fcompl
mov
pushf
lret
push
jo
mov
xor
lods
xchg
and
enter
sub
bound
mov
lahf
adc
cld
push
rorl
push
add
push
pop
icebp
add
fxch
dec
mov
sub
mov
push
push
jae
hlt
mov
dec
fnstcw
cltd
fnstsw
mov
adcb
cmpsl
daa
mov
jp
or
iret
sub
pop
sti
inc
fsubp
cmp
add
mov
ja
jle
mov
mov
sub
inc
jp
loopne
popf
mov
push
int3
js
popa
adc
mov
xchg
inc
dec
and
scas
cmpsb
clc
movsb
pushf
pusha
inc
test
dec
mov
js
push
jbe
adc
sbb
lods
push
push
stc
adc
mov
adc
lods
push
push
aad
pop
mov
cmpsl
inc
or
mov
loop
cmp
adc
fbld
add
mov
cmc
mov
mov
fldl
jmp
or
lret
int3
pop
adc
stos
inc
add
push
and
mov
idivl
addr16
mov
mov
xlat
xchg
test
xor
in
in
fdivl
stc
shrb
mov
in
cmp
mov
imul
insb
xchg
sbb
mov
insl
dec
xchg
pushw
xchg
leave
repnz
in
cmp
xchg
mov
fstl
adc
sub
xor
lret
lock
cmpsl
mov
gs
mov
jnp
inc
lret
cmp
cmc
push
int
mov
scas
mov
or
loopne
push
mov
mov
inc
dec
or
sub
dec
mov
push
imul
or
in
pop
mov
mov
sbb
cs
fwait
les
je
dec
idivl
out
andb
cs
fstps
adcl
xchg
int
lds
cmp
leave
xchg
or
xorl
call
xchg
cmpsl
cltd
add
loope
adc
jmp
test
adc
cmp
pop
push
test
lods
mov
imul
rcrb
cld
divb
movsb
sbb
enter
rcrl
repz
subb
mov
push
pop
inc
out
jl
xor
mov
mov
cmp
data16
push
es
mov
insl
mov
inc
out
aaa
adc
xlat
dec
mov
adc
icebp
clc
inc
dec
mov
dec
test
lods
xor
nop
dec
jmp
mov
pop
push
xor
sub
dec
pop
mov
mov
xchg
cli
and
int3
and
dec
and
out
pop
dec
fistpll
pop
lds
cmp
xchg
push
cmpsb
hlt
pusha
mov
adc
scas
pop
shll
stc
cmp
inc
sbb
loop
pop
mov
rclb
in
pop
adc
out
clc
jno
lahf
aas
xchg
out
std
jae
inc
cld
test
hlt
lret
pushf
gs
icebp
movsl
lds
mov
flds
sahf
dec
shlb
pop
pop
int
xchg
mov
dec
jo
shlb
jge
inc
sub
xor
or
mov
rclb
popa
inc
xchg
imul
dec
daa
in
jne
lods
movsb
stos
mov
mov
cmp
scas
mov
xor
push
in
outsl
ljmp
or
add
jge
dec
arpl
fsubrl
in
ja
test
aad
cmp
test
xchg
dec
cld
xchg
cmpsb
mov
lock
bound
xor
xorl
test
int
jle
mov
jae
pop
mov
into
mov
jnp
jnp
cmp
pop
fstpl
ds
addl
aad
sahf
arpl
std
test
out
and
aaa
adc
addr16
mov
out
xchg
out
std
lcall
xchg
add
sub
inc
insb
subb
inc
lcall
fsts
enter
sahf
test
or
rorb
arpl
shll
add
or
mov
in
cltd
fsts
rcl
sub
dec
stos
mov
inc
sbb
push
cli
sub
xor
cmp
adc
push
pop
fwait
dec
sti
stc
fs
xchg
movsb
jmp
rcrb
sub
out
ljmp
and
rorb
pop
pushf
xchg
xchg
cmp
scas
aaa
mov
ss
jge
jne
inc
lcall
fwait
lds
pop
sub
mov
lea
mov
je
sub
mov
pushf
sbb
jg
ret
jle
iret
cmp
add
mov
leave
mov
mov
mov
std
push
pop
rolb
in
mov
xchg
dec
jae
test
mov
push
icebp
lods
test
ss
or
insl
movsl
sbb
in
imul
jne
xchg
xchg
cmp
ss
fcoml
sub
and
dec
cmp
adc
sub
mov
movsl
in
loop
out
mov
fwait
scas
mov
enter
jmp
adc
mov
xchg
cli
add
mov
and
fidivrs
dec
inc
cmc
sbb
cmp
mov
lods
xor
jb
test
mov
xor
and
jo
stos
sbb
or
mov
hlt
or
fsubs
inc
adcl
cwtl
loop
daa
out
mov
pop
pop
cmp
sbb
dec
scas
scas
loopne
sub
xchg
mov
inc
cld
popa
push
fbld
mov
repnz
inc
lret
gs
popa
mov
adc
dec
add
lret
es
xor
add
sub
cwtl
scas
mov
inc
cmp
subl
and
scas
mov
or
aam
dec
inc
or
pop
fwait
jnp
mov
mov
mov
adc
jbe
gs
push
in
jbe
sub
push
call
mov
mov
fldlg2
shlb
outsb
int3
test
jecxz
mov
outsl
out
jns
adc
jp
jbe
or
out
cwtl
fnstcw
fstl
test
sub
jns
xorb
mov
dec
pushf
add
std
sbb
pushf
mov
fidivrs
sbb
adc
mov
sbb
push
cld
push
movsl
xor
push
mov
jae
ret
push
push
dec
fwait
or
repz
pop
dec
cmpsb
jns
jo
imul
std
mov
mov
fldcw
int
xchg
scas
jnp
mulb
inc
pop
add
mov
ljmp
fdivrl
int
inc
jmp
pop
sbb
cmpsl
aam
add
and
sahf
push
fisubrs
jo
test
mov
ret
insl
jp
sub
mov
lods
push
lcall
enter
faddl
xor
adc
stos
mov
imulb
sbb
jne
pop
sbb
scas
mov
mov
lods
ficoms
mov
movsb
icebp
sub
push
lea
mov
rol
nop
orl
add
out
stos
jmp
pop
adc
jne
fidivl
pop
and
sbb
cmp
fnstenv
es
sbb
xlat
push
fndisi(8087
xchg
rcr
dec
pop
xchg
mov
sub
inc
call
sub
mov
test
sahf
in
pop
fldpi
jle
lock
int
or
mov
dec
xchg
sub
add
xchg
sub
dec
movsb
push
or
mov
push
mov
mov
push
sti
aad
xchg
faddp
icebp
sub
xor
ret
lock
packuswb
and
dec
repz
fisubs
jnp
es
or
xor
loop
xchg
sahf
jle
mov
ss
mov
mov
lahf
cmp
cmp
in
test
dec
out
call
inc
adc
shll
and
enter
fisubs
out
call
jg
test
jne
or
mov
mov
and
xor
jns
cmp
hlt
pop
lods
mov
push
inc
ror
movsb
outsb
and
adc
mov
cmpsb
fbld
movsl
stos
push
sbb
sti
mov
test
mov
dec
or
pop
stc
pop
popl
xchg
xor
or
mov
dec
pop
addr16
mov
lods
xchg
pop
mov
mov
dec
and
mov
mov
sbb
cld
mov
xchg
out
push
cmpsl
lods
jae
rorl
into
inc
dec
xor
inc
mov
mov
and
xorb
xor
aad
add
sbb
sbb
xchg
jl
lret
or
arpl
dec
lods
push
jp
mov
pusha
testl
cmpsb
test
fsubs
icebp
push
add
cmc
in
mov
mov
jge
inc
je
pusha
push
aas
mov
xlat
jne
dec
inc
xor
dec
xchg
cli
xor
mov
nop
scas
andb
cmpsl
std
add
ret
dec
push
cli
test
icebp
mov
insl
add
jns
int
test
or
lea
push
ss
fwait
cmc
or
push
fsubl
addl
xchg
in
std
test
ja
sub
fldl
imul
pushf
cs
arpl
push
std
adc
fcompl
and
dec
mov
mov
aaa
aam
data16
mov
scas
mov
and
push
lds
cmpsb
fsub
and
jecxz
and
ror
or
popf
mov
push
inc
js
inc
lods
dec
push
outsb
popf
lds
es
pop
mov
repnz
inc
sub
in
inc
xchg
jne
dec
fdivl
gs
xor
sbb
inc
xchg
mov
fnstcw
push
std
jae
mov
mov
sub
or
dec
mov
push
int3
outsb
hlt
jmp
sahf
dec
xchg
mov
jge
fisubs
push
fucom
loop
mov
mov
mov
movsb
cmpsb
out
inc
mov
push
add
rorb
fwait
sub
lods
in
outsb
dec
test
mov
mov
es
loop
scas
aad
imul
sbb
xor
jae
push
les
push
inc
in
pop
jp
leave
xor
mov
sub
into
ds
mov
std
in
mov
push
mov
aam
push
jno
pop
mov
ret
iret
hlt
flds
imul
je
in
stc
enter
pushf
test
mov
add
sbb
fistpll
mov
jmp
test
fsubr
andl
xchg
iret
in
scas
jge
loop
out
decl
xor
sti
pop
pop
in
pop
enter
enter
sbb
cltd
mov
pop
data16
cmpl
cmp
mov
fcmovb
xchg
aam
into
dec
cld
add
loopne
sbb
push
movsb
jle
wrmsr
xchg
das
fdivrl
sahf
jg
fsubrp
xchg
inc
xchg
mov
insl
sbb
xchg
mov
sub
dec
xchg
pop
xor
out
mov
push
sbb
inc
mov
add
ret
clc
sti
fsubrl
xchg
and
adc
call
sub
jbe
sbb
adc
mov
pop
loope
inc
and
xchg
xor
mov
mov
jmp
cmp
push
or
push
sub
cltd
fsubrs
xor
daa
mov
xchg
lock
lahf
mov
and
inc
inc
data16
iret
or
aaa
mov
sahf
add
cmp
gs
lahf
push
out
jge
loope
add
test
std
aaa
add
lret
fldlg2
sub
lret
cmpsl
xchg
das
pop
push
push
jp
fidivrs
es
pushf
fdivrs
repnz
sub
jle
and
xor
dec
test
mov
fstps
gs
rcrl
or
cmpsb
shr
pop
pushf
fistl
insl
mov
in
insl
mov
test
push
lds
mov
jge,pt
dec
aam
mov
test
mov
xchg
jnp
repnz
sub
lahf
cld
add
sbb
loopne
aas
shll
rcr
cmpsb
xchg
lahf
lods
dec
mov
fcompl
xor
add
mov
cmp
addl
inc
dec
jbe
fisubs
gs
les
gs
jo
mov
out
adc
test
outsl
imul
fidivs
mov
mov
lcall
test
ret
shr
hlt
jg
pop
fwait
imul
shll
loope
repz
jo
inc
sbb
push
cld
mov
insl
ficoml
inc
pop
fistpl
rcrb
xchg
popa
sbb
addb
stc
out
sbb
sarl
jne
lods
in
and
leave
push
out
shr
cmpsl
hlt
fiadds
mov
das
mov
in
sahf
jge
fwait
sahf
nop
popa
sub
sub
jmp
rol
mov
mov
sbb
cmc
sub
loope
sub
fldenv
arpl
add
xchg
push
sbb
jecxz
jb
fnsave
adc
jae
repnz
arpl
outsl
pop
shlb
fwait
loopne
mov
filds
scas
xor
stos
popf
push
and
cwtl
addb
lds
dec
in
lea
dec
in
ficompl
pop
scas
xchg
xor
inc
or
sub
inc
test
xchg
scas
xchg
stos
imul
mov
cmp
or
inc
movsb
mov
xchg
lods
pop
jge
and
jns
aas
cmpsb
jno
push
cmpsl
test
popl
add
les
mov
push
rolb
cwtl
ja
mov
cmp
subb
lret
push
inc
lret
xchg
lock
popa
cs
dec
jne
mov
mov
adc
mov
jnp
movsb
mov
movsl
test
sub
into
inc
push
jo
xor
pusha
fwait
sbb
mov
into
mov
out
xchg
stos
and
in
out
mov
pop
int
in
stc
movsb
pop
das
repz
jnp
add
and
mov
mov
popf
xchg
inc
gs
mov
adc
inc
and
xchg
mov
dec
pop
insb
cwtl
popf
jle
shl
cwtl
xchg
jecxz
in
xchg
cmp
xor
and
icebp
lock
sub
mov
dec
jo
in
cmp
ret
std
gs
cmc
mov
adc
mov
mov
mov
insl
fdivl
sbb
adc
ss
das
arpl
enter
aas
mov
loop
jmp
cmp
out
xor
jae
mov
fwait
or
sbb
sarl
pushf
and
outsl
je
dec
les
sub
inc
jle
xor
cmp
push
mov
add
fcmovnu
cmp
shll
cmp
outsb
mov
fsubr
push
sahf
scas
dec
sbb
pop
insb
js
add
mov
loopne
and
and
mov
sbb
mov
bound
inc
mov
inc
les
mov
outsl
push
fmull
jl
pop
sbb
mov
xchg
aad
scas
sti
xor
cmc
daa
decb
lods
repz
sti
sbb
inc
sbb
pop
jl
rol
pop
loop
imul
sahf
or
insb
pop
fidivrs
test
pop
fnstsw
in
in
mov
cmpl
stos
cmpsl
js
or
in
pop
pop
push
aaa
push
inc
std
jo
xchg
sub
push
jp
out
cmp
fidivrs
test
jl
cmp
loope
cmp
xor
ret
and
adc
out
arpl
xor
lock
and
or
addr16
lods
das
jg
sub
aad
shlb
aam
push
mov
rcrl
xchg
fmull
fmuls
add
xor
push
std
push
popf
push
push
aas
mov
repz
sbb
mov
std
cmpsb
sub
xchg
inc
sbb
or
mov
insb
xchg
mov
popa
dec
sub
gs
sti
stos
dec
mov
or
lahf
mov
push
cmp
adc
cli
ja
fisubs
cmp
imul
aam
push
and
jmp
sbb
les
fwait
in
jnp
lahf
sub
xchg
das
sub
pop
loopne
fsubl
xchg
fisttpl
mov
mov
jb
das
and
stos
nop
stc
xor
add
pop
add
fisttpl
js
sub
jb
jge
push
popa
out
or
xor
push
jmp
gs
loope
push
fistl
popa
add
mov
int
mov
loopne
mov
sbb
movsl
dec
test
inc
stc
cwtl
mov
xor
dec
scas
icebp
dec
or
cmpl
cltd
fidivs
and
mov
push
mov
xorl
inc
pop
sub
add
mov
test
out
push
movsl
out
shlb
xchg
test
jae
sbb
dec
jnp
xor
into
jno
popa
mov
sbb
inc
mov
pop
mov
aas
add
bound
int3
fildll
iret
lahf
fisubs
dec
mov
push
add
sub
jne
mov
xor
jne
mov
es
icebp
lods
mov
les
int3
xchg
popf
push
push
push
cmp
fsts
int
pop
mov
xor
mov
and
and
mov
push
rcrb
pop
sti
dec
jae
xchg
lods
into
add
ret
mov
cld
mov
fmull
push
push
fisubl
ficoms
cwtl
push
loope
pop
scas
push
and
dec
fs
in
insb
xchg
data16
int3
test
or
inc
or
fidivrl
in
les
inc
arpl
inc
fdiv
repz
inc
fisttpl
sahf
cltd
mov
cmp
mov
jnp
sub
and
mov
mov
push
push
ja
nop
jle
aaa
adc
sbb
es
dec
shl
pop
leave
sub
ja
push
js
mov
xchg
aas
and
cmp
cmc
dec
roll
insb
mov
addr16
sub
decl
fistpll
out
lock
xchg
pop
or
popf
imul
in
xchg
mov
mov
mov
and
fyl2xp1
pusha
or
jg
fsub
cld
xchg
push
push
cmp
jg
sbb
subb
mov
fnstenv
cld
jecxz
loop
or
je
mov
and
clc
xor
push
fdivl
out
jl
lcall
lods
loopne
mov
test
adc
dec
sahf
cmpsb
test
jb
or
cli
xchg
jmp
xacquire
mov
cmp
pop
or
lahf
adc
addr16
jo
inc
push
and
jbe
mov
clc
jge
push
out
cmp
inc
fidivs
xchg
dec
and
mov
js
adc
dec
arpl
out
sti
shll
rol
mov
inc
jmp
and
pop
sbb
pop
jl
xor
fsts
sbb
adc
aad
mov
and
push
scas
arpl
jno
push
inc
jno
mov
adc
mov
loop
dec
outsb
dec
jmp
int
cli
push
sub
inc
cmc
cs
mov
dec
xor
push
mov
inc
sahf
subb
mov
mov
int3
fstl
fistps
int
mov
repz
pop
pop
jae
lcall
sbb
enter
call
loop
sti
into
aas
jl
dec
xchg
jle
rolb
dec
cli
fnstsw
cli
pop
xchg
je
in
ret
xor
jle
add
lods
cmp
mov
stc
lock
out
hlt
jp
icebp
into
test
pop
pop
jg
inc
rorb
ss
and
test
xchg
les
cmp
or
js
fcoml
cli
pop
les
cli
or
repnz
jno
int3
push
mov
roll
movsl
jns
sar
shr
mov
or
jno
xor
inc
sahf
dec
scas
or
inc
add
or
adc
fisubrs
rorb
mov
cmc
das
cmp
sub
dec
lahf
test
insl
xor
popf
testl
add
mov
fidivrs
push
xor
xlat
scas
ret
addr16
daa
popa
jnp
mov
pop
mov
loope
mov
add
ljmp
and
aad
ds
daa
std
test
insb
xor
push
push
sbb
inc
bound
mov
mov
shrb
push
mov
aad
fcoml
pop
je
es
aaa
in
decb
jle
fidivrl
test
test
fldt
arpl
jge
pop
mov
mov
hlt
fsubr
lcall
push
bnd
sbb
in
xchg
fwait
lret
mov
pusha
cmp
inc
dec
cmpsb
xor
mov
insl
hlt
sbb
aam
aas
adcl
mov
in
pop
xchg
xchg
fs
pop
sub
cmp
inc
add
int
mov
push
cmpsb
cmp
adc
sub
insb
dec
call
sbb
flds
cmp
mov
fldenv
inc
lret
lea
aaa
xchg
outsb
mov
lea
inc
test
inc
lods
sbb
rorl
faddp
mov
add
iret
fidivrl
stc
in
lods
stc
movsb
adc
and
gs
xchg
pop
enter
jb
add
push
dec
and
push
gs
sahf
and
sbb
cmpsb
sub
inc
pop
das
inc
add
pop
pop
std
sbb
stc
inc
jle
and
xlat
decb
ret
in
or
mov
lcall
push
jmp
in
sub
push
repz
sbb
ss
or
fimuls
mov
ss
mov
inc
call
enter
mov
repz
out
sub
mov
xchg
mov
jge
and
rcrb
add
mov
mov
ljmp
mov
inc
mov
into
xchg
aad
mov
add
pop
inc
jo
adc
sbb
lcall
pop
test
scas
testl
arpl
push
lods
rol
fucomi
test
adc
les
fistl
mov
push
cmp
stos
popa
and
push
es
sbb
adc
inc
add
pop
lahf
jo
mov
shlb
stos
ficoms
lcall
fadds
popa
lods
fst
cmpsl
or
test
repz
filds
orb
sbb
mov
pop
mov
cmp
or
sub
push
dec
cmp
popf
push
push
sub
adc
pop
cmpsb
cld
bound
arpl
cltd
in
mov
inc
mov
aad
test
dec
mov
mov
les
cmp
aad
cli
lahf
dec
loope
das
or
test
outsl
sar
aas
pop
outsb
enter
mov
jns
inc
push
mov
mov
stc
mov
je
jnp
jg
adc
sbb
js
aad
lcall
outsb
push
rclb
and
aas
ja
out
mov
int
and
lds
inc
push
sbb
cmpsl
mov
mov
push
out
cmpsb
lahf
addl
and
dec
dec
iret
mov
mov
ljmp
adc
movsb
addr16
in
inc
cmc
cltd
and
lret
mov
cmp
cmpsl
mov
enter
mov
inc
and
cmc
gs
push
adc
and
push
fstps
cld
int
in
jg
ljmp
ds
cmp
jno
pusha
xchg
push
movsl
sbb
inc
stc
mov
or
fnstsw
out
inc
mov
mov
repnz
cmp
outsb
out
mov
dec
fwait
inc
jmp
roll
into
mov
adc
mov
in
mov
dec
cmpsb
mov
push
lahf
push
mov
jns
and
jp
jge
mov
add
cmpsl
fisttpll
outsl
cmp
mov
in
fsts
stos
ds
mov
sub
pop
mov
xchg
sti
out
scas
mov
jno
inc
mov
ficompl
xchg
mov
xor
or
divl
mov
pop
jno
movsb
jp
cmpsl
scas
jge
outsb
mov
leave
loopne
dec
shlb
sahf
adc
jle
pop
adc
inc
movb
and
stos
enter
hlt
xor
xor
push
repz
stos
and
push
ss
pop
std
push
les
mov
fbstp
push
std
sbb
and
mov
sbb
dec
sub
adc
int
sbb
rcll
xchg
jnp
call
insl
pop
pop
jmp
movsb
dec
mov
scas
lahf
pop
leave
cld
fisttps
pop
sahf
cmp
fldenv
xchg
jne
dec
mov
sbb
jmp
xor
add
das
mov
insb
mov
out
mov
jge
negb
push
add
fldl
push
mov
mov
movsl
std
sub
and
dec
push
inc
ja
hlt
xchg
lcall
dec
dec
fdivl
push
and
pop
dec
inc
dec
cmp
faddl
xor
or
jns
pop
ja
pop
xchg
adc
dec
mov
inc
adc
and
test
xchg
xchg
icebp
cltd
sub
sahf
add
mov
nop
lret
push
pop
cmp
lahf
mov
dec
inc
inc
pop
test
std
mov
icebp
mov
push
and
enter
sbb
and
push
jae
std
test
fs
addb
lcall
mov
test
dec
enter
clc
jecxz
lods
scas
hlt
jae
test
inc
lods
test
loope
xor
pop
pop
cmp
in
int
jo
jecxz
push
inc
mov
pop
movl
rcll
out
loopne
adc
scas
imul
sub
into
arpl
add
push
pop
mov
je
cli
xchg
mov
int
int3
call
lds
addr16
sbb
cli
stc
cmp
fldl2t
mov
std
push
aas
mov
mov
adc
loop
mov
out
int3
sbbb
push
mov
xor
cmp
mov
sub
xor
jle
int3
add
add
push
popf
pop
ds
sahf
std
xor
sbb
adc
jo
push
adc
mov
movsl
and
jns
out
xor
shrl
orl
xchg
pcmpgtd
pop
fisubrl
jmp
aas
and
popa
cwtl
fmul
sub
push
add
add
int
ret
push
and
outsl
cli
shll
fwait
and
lret
aam
and
sbb
insl
jp
rcr
mov
and
addr16
mov
popa
cmp
xchg
push
pop
mov
mov
movsb
mov
inc
push
jge
scas
cmpsl
pop
cmpsl
cmp
dec
pusha
add
nop
shll
lea
inc
lds
fiadds
jmp
xor
nop
xor
pop
xchg
out
sbb
add
scas
cmpsl
xchg
lea
mov
cmp
add
dec
pop
fidivrs
cmpb
cli
call
test
add
mov
popf
gs
cmp
inc
fwait
mov
cmp
jnp
mov
rorb
out
mov
roll
inc
ss
or
test
push
fimuls
adcb
xchg
sub
scas
add
scas
arpl
or
sbb
lods
dec
push
cwtl
push
mov
cltd
push
stc
dec
xor
call
fsub
popf
les
es
and
shll
lcall
push
adc
xchg
cmp
fwait
dec
daa
push
test
push
jp
inc
xchg
jle
xor
in
jo
idivl
push
xor
aam
mov
cltd
test
hlt
cmp
inc
and
pop
scas
mov
sbb
or
mov
das
add
rclb
cld
lcall
fstps
pop
and
ret
imul
leave
mov
push
xlat
and
sbb
and
xchg
inc
inc
mov
fstps
sbb
rorl
movsb
xchg
push
push
fdivrp
shll
push
pop
repz
inc
jle
and
xor
cmp
lret
sbb
pop
jmp
test
faddl
sahf
push
daa
xchg
jns
out
pop
stos
flds
lds
cmp
dec
or
jecxz
shlb
mov
lods
or
sbb
aas
fwait
xor
dec
jecxz
and
fimuls
xor
gs
xchg
sbb
pop
adc
dec
push
jg
in
push
lahf
jae
out
or
cmc
cli
cmp
aad
scas
jg
dec
flds
sub
in
jmp
imul
pop
jmp
push
pushf
inc
popa
dec
test
repz
test
cmpsl
mov
and
pop
std
jne
and
xor
pop
dec
push
xor
int
push
aam
fnstenv
outsb
adc
inc
popf
lahf
jne
stos
mov
inc
sub
std
out
pop
xor
insb
mov
fldcw
xchg
es
pop
push
mov
rorb
imul
add
mov
jns
add
movsl
flds
push
mov
mov
sbb
inc
scas
jecxz
adc
fmull
sub
jne
ja
dec
push
mov
inc
adc
lods
pop
xchg
adc
sub
xlat
mov
ja
mov
idivb
faddl
sub
xchg
fsub
daa
add
bswap
cmpsl
in
dec
imul
pop
push
testl
fs
push
pop
js
xor
xchg
inc
fidivrs
fnstenv
jp
pushf
test
jecxz
jno
mov
jbe
adc
aaa
mov
pop
add
fldcw
mov
jnp
sub
in
stc
in
cli
dec
sti
xchg
cmpsl
cmpsl
pop
int3
int
jp
call
ficoms
repnz
jno
mov
inc
out
aad
call
aam
les
adc
inc
inc
out
and
add
mov
fmull
dec
mov
jno
aad
hlt
mov
test
mov
mov
std
inc
adc
ja
div
pushf
lcall
xchg
lret
xchg
inc
cli
rcl
lods
lods
stc
dec
cs
jae
add
sbb
push
mov
movsb
lret
enter
repz
outsl
or
add
cmp
mov
mulb
sub
jle
cmp
arpl
mov
jmp
push
pop
movsb
jmp
xchg
ret
sub
out
in
mov
es
or
stos
mov
mul
mov
push
fiadds
add
cli
loopne
mov
push
and
inc
std
xchg
push
stos
xchg
pop
insb
mov
addl
inc
icebp
mov
push
inc
pop
lcall
ss
jge
pop
cmp
fwait
jmp
loope
jo
ljmp
fidivrs
je
or
xor
fmull
add
push
jno
mov
mov
sbb
adc
mov
lds
addb
movsb
sbb
out
ret
xor
add
pusha
add
mov
jle
adc
ss
movsb
lds
outsl
popa
out
push
ja
and
movsl
lods
xchg
jge
xchg
mov
mov
jmp
mov
fnstenv
or
dec
adc
xchg
sbb
dec
out
adc
push
jbe
cld
les
decb
mov
mov
in
rorb
sbb
cmp
sub
scas
cmpsl
mov
inc
into
fisubrs
ficomps
xor
aas
movsl
popf
sbb
cs
sbb
xchg
ret
inc
sbbl
cs
test
in
mov
imul
mov
push
cmp
mov
imul
movsb
xchg
faddl
pop
loopne
shll
fildl
out
mov
ret
pop
pop
pop
int3
sbb
mov
repnz
or
push
pop
inc
or
shrb
jbe
mov
es
lahf
int3
mov
dec
cltd
movsb
push
fucomp
sub
and
mov
mov
test
pop
in
sbb
mov
aad
das
popa
int
imul
daa
mov
popf
imul
lods
pop
push
dec
pushl
les
in
mov
adc
jbe
std
xor
imul
push
inc
fimull
mov
mov
inc
mov
mov
ljmp
mov
adc
mov
in
mov
add
js
lret
cmp
or
push
outsl
lret
cmp
test
sub
pushf
or
fsts
dec
mov
push
cli
mov
lret
aaa
cld
mov
jle
sub
ljmp
js
push
outsb
movsb
mov
sbb
mov
adc
or
and
inc
push
js
pop
push
mov
sbb
lds
addl
popa
sub
cmpsl
fldl2t
push
test
mov
jle
fnstenv
push
cs
sub
adc
aam
popl
fnstcw
mov
fcoml
jns
shrl
pop
cmpsb
mov
xor
std
add
stos
sti
std
add
jb
sti
testb
and
sbb
call
dec
cmp
stos
sbb
daa
pop
lods
daa
sbb
mov
inc
mov
fcomp
inc
xor
push
cmp
enter
mov
jnp
or
out
sbb
adc
cmpsb
movsl
inc
aas
fs
imul
sbb
mov
push
pop
das
mov
lea
gs
mov
inc
repz
movsl
and
pop
dec
xor
sbb
and
popa
push
lods
push
loopne
cmp
sti
lods
mov
lret
pop
mov
mov
add
lods
add
aad
fisubrs
jge
sub
sbb
dec
ss
fmull
cmp
scas
je
jnp
mov
in
pusha
mov
xor
jns
push
pushf
adc
idiv
hlt
cltd
and
mov
test
sbb
cs
inc
fistl
popf
test
scas
mov
inc
mov
dec
pop
xor
fsts
pop
sub
std
jae
xor
andl
movsl
and
and
or
mov
adc
add
mov
lods
cmp
add
sbb
arpl
cmpsl
add
flds
hlt
lret
aaa
dec
addr16
movsb
inc
mov
cmp
adc
in
add
hlt
push
enter
jae
sbb
cmpsl
inc
lods
jb
and
lret
lods
sub
fnstsw
fcompl
sahf
cmp
ljmp
push
out
inc
into
pop
cmc
clc
mov
jnp
leave
mov
popa
jmp
add
cmp
in
mov
sbb
push
jns
movsb
sbb
cmpsb
ss
pop
pop
fnstcw
xchg
pop
push
push
popa
in
adc
test
call
mov
sub
pop
and
push
xor
rolb
mov
rclb
enter
jecxz
mov
loope
mov
sub
mov
aam
out
or
popf
push
imul
aas
or
in
in
xchg
stc
fs
mov
jno
js
es
cmpsb
mov
sub
lahf
sbb
mov
xlat
mov
cmpsb
mov
cs
xor
scas
fistl
push
and
bound
leave
sbb
lods
jno
mov
scas
shll
stos
jmp
arpl
out
mov
mov
push
loope
push
int
inc
stc
xorb
sub
scas
xchg
data16
inc
jne
outsb
mov
jle
lock
mov
dec
sbb
mov
repz
pusha
test
repz
cmpsl
push
setne
or
pop
addr16
pop
incb
mov
adc
fdivrl
out
insl
movsb
test
jbe
ljmp
and
lods
hlt
repz
xchg
inc
xchg
faddl
jge
jnp
ss
jne
mov
push
and
cld
xor
push
sub
dec
ja
inc
pop
mov
xchg
lock
and
and
xchg
lods
xor
fstpt
aam
xlat
mov
dec
cld
push
mul
test
ljmp
push
out
sbb
mov
nop
inc
pop
mov
int
push
push
or
push
pop
sti
push
std
jmp
and
or
sbb
repnz
mov
adc
inc
push
dec
fdivrs
fnstenv
inc
dec
fistpl
cld
loopne
and
int3
mov
shrb
xchg
scas
andb
push
mov
push
pop
jmp
repz
lcall
test
cmp
les
cmp
push
addr16
jle
lret
ja
cwtl
lea
mov
lods
sbb
mov
sub
fsubrp
xchg
pop
push
fdivrs
fldl2t
dec
stos
shlb
push
mov
call
sbb
movb
xor
or
sahf
jle
dec
lock
jns
jae
dec
sbb
lds
mov
pop
sbb
test
icebp
pop
fsts
int3
dec
mov
adc
pop
dec
xchg
adc
mov
sub
mov
fnsave
les
push
fimuls
push
add
mov
inc
scas
fsubl
dec
mov
xor
cmp
loopne
scas
js
js
pop
mov
and
fwait
dec
out
movsl
inc
mov
lret
leave
out
jp
xchg
push
aam
cmp
cs
fisubl
inc
push
cli
push
in
js
test
test
and
xchg
mov
jno
test
std
out
stc
and
sbb
lods
xchg
mov
push
fsts
fldcw
aas
sbb
jnp
test
loopne
cmpsl
xor
mov
lret
out
fxam
jo
push
int
mov
shld
sbb
mov
sbb
movsl
ss
mov
fs
repnz
pop
mov
in
jmp
mov
add
jmp
xchg
flds
push
push
xlat
and
test
inc
xchg
push
cmp
mov
neg
test
sub
lods
lret
outsl
mov
cmc
out
mov
sahf
je
jl
mov
cmc
mov
mov
scas
dec
mov
movsl
mov
out
data16
inc
pop
xchg
inc
jle
cmp
mov
test
lret
js
xor
xchg
aad
test
and
jecxz
inc
lret
mov
mov
adc
inc
jl
cmpsl
xlat
std
outsb
ja
and
jno
divl
dec
into
std
fildl
push
test
mov
jae
mov
push
fldl2e
dec
push
imulb
cs
fimuls
cmp
sbb
dec
rcll
sbb
push
cmpsb
repz
mov
dec
lods
jge
add
mov
lds
test
rcl
dec
mov
mov
test
divl
mov
movnti
ret
mov
cwtl
jno
adc
push
fdivrp
dec
adc
fstps
sbb
cmp
and
fstl
cwtl
jo
movsb
jl
pusha
push
mov
out
jp
lahf
shlb
cmpsb
adc
lods
notl
mov
mov
pop
mov
out
lret
test
xor
mov
lods
cli
mov
pop
in
stos
out
xor
loop
pop
scas
jo
cmpsl
dec
mov
add
test
fimull
sub
je
imul
pop
push
repz
sbb
rolb
sbb
inc
flds
cmp
cmp
inc
addr16
imul
add
test
imul
xchg
cmp
jp
xchg
pop
or
xchg
lahf
xor
ret
std
popa
repnz
dec
push
jae
cmp
movsl
cmp
lcall
fmul
es
lods
dec
fdivrl
mov
xchg
add
mov
jnp
mov
insb
test
add
pushf
jg
inc
pop
nop
mov
out
sub
cld
or
mov
mov
cmp
lret
jge
xchg
adc
xor
adc
push
das
sub
xor
adc
jmp
sub
jne
mov
sbb
repnz
mov
test
in
add
push
sub
sbb
test
adc
incb
xchg
cld
inc
pop
clc
in
and
roll
push
imul
repz
sub
outsb
xchg
clc
xor
leave
push
mov
xchg
mov
mov
cmpb
xchg
test
leave
jae
mov
sbb
popf
lods
lds
cmp
aas
fldl
mov
push
cmp
adc
dec
dec
fwait
test
clc
inc
dec
lret
fwait
cmp
imul
dec
loop
pop
add
jl
sbb
dec
sbb
neg
movsb
add
ja
push
out
push
pop
clc
sub
fidivrs
inc
mov
sub
push
cmp
out
mov
push
in
lods
movsb
movsb
test
xchg
jnp
sub
push
cmp
sub
lret
lods
icebp
inc
push
mov
cmp
pop
rolb
sbb
ja
push
ficomps
lcall
rolb
and
mov
push
mov
and
popf
xchg
pushf
ja
test
mov
xchg
lcall
dec
mov
pop
or
cmpsb
jnp
sbb
repnz
inc
out
xor
xor
dec
adcw
lock
repz
jae
mov
idivl
fprem
xor
shll
cmpsl
mov
mov
xchg
aam
rorb
out
cltd
mov
fs
jns
sub
adc
inc
repz
jbe
add
mov
mov
fstpt
mov
adc
xchg
push
or
and
add
mov
mov
fidivrs
cld
xchg
enter
dec
cs
xor
jl
sub
mov
mov
cld
nop
xchg
sahf
aam
cltd
mov
lret
in
ficoms
dec
cld
mov
cmp
jbe
fidivrs
stos
sub
xchg
push
inc
inc
mov
mov
mov
gs
enter
imul
pop
jle
or
arpl
das
test
jmp
pop
fldcw
sub
cmpsl
test
stos
mov
pop
ret
cmpl
lret
push
scas
pmulhuw
or
jmp
sbb
xchg
push
ss
mov
mov
mov
out
jge
pop
push
cmp
aas
mov
sbbl
sarl
movsb
pop
lods
das
sbb
orl
es
leave
cmp
rclb
aam
dec
nop
inc
cmp
add
lods
pop
cmpsb
or
push
int
lahf
int3
and
lcall
fdivrs
inc
out
out
mov
lcall
cmp
mov
mov
pop
jo,pt
dec
std
lret
dec
addr16
push
hlt
les
mov
es
lods
aas
add
daa
popf
dec
mov
cltd
mov
jl
dec
lods
sub
jp
mov
cmpl
inc
dec
and
or
push
repnz
aas
aam
neg
outsb
and
sbb
sbb
add
dec
dec
loop
inc
mov
test
cmpsb
mov
mov
push
lret
cmp
dec
xlat
loope
xor
sahf
xor
sbb
add
push
xchg
icebp
mov
or
lcall
icebp
fnstsw
mov
pop
aad
loope
mov
and
test
flds
xchg
fstl
andl
dec
in
int
and
mov
jl
data16
jae
and
add
mov
fistpll
adc
fs
or
dec
xchg
jbe
fldenv
sbb
sub
push
addl
pop
out
aad
cmp
test
addr16
pusha
das
pop
mov
repz
in
insb
test
sbb
movl
cmc
pushf
add
cmp
stos
fdivp
movsl
sub
divw
cmp
js
es
inc
cmpsb
cmp
gs
sar
iret
mov
fldenv
hlt
fchs
loope
arpl
xchg
lock
test
and
js
and
popa
cmp
inc
jg
adc
sbb
out
rcrl
fsubrs
and
movsb
je
lret
test
xchg
test
mov
or
push
sarb
and
adc
subb
cmp
or
std
inc
adc
or
fs
pusha
mov
fstps
mov
push
dec
sti
sbb
mov
int
or
xchg
mov
push
dec
data16
xchg
aad
and
pop
mov
fldcw
jb
shr
rorb
aad
add
je
mov
int
and
mov
and
pushf
dec
inc
repnz
shrl
loope
add
jbe
pop
in
mov
outsb
adc
in
inc
push
out
dec
sub
loop
outsb
enter
mov
mov
inc
in
repz
sub
cmp
lret
push
cmp
mov
and
arpl
jae
lock
fistl
pop
fldlg2
notb
ss
mov
xchg
and
sbb
subl
sub
flds
pop
insl
mov
pop
add
sub
mov
and
push
push
orl
sarl
test
imul
imul
add
testb
xchg
sub
icebp
in
rorb
bound
add
sti
es
fs
aaa
inc
pop
in
xor
jmp
add
inc
dec
sub
sti
movsb
repz
jl
repz
pop
xor
pop
inc
pop
jecxz
xlat
into
mov
sbb
pushf
pop
dec
jg
jmp
pop
push
sbb
sbb
jae
dec
and
dec
fdivrl
xchg
jmp
pushf
enter
repz
fwait
test
test
dec
pop
push
daa
cmpsw
test
jecxz
xchg
or
cmp
shll
lods
and
mov
pop
btr
pop
mov
xchg
addb
icebp
jne
mov
cmpsl
sbb
shlb
rorl
mov
in
and
test
fists
xor
test
stos
pop
dec
pushf
mov
stc
cmc
out
mov
jnp
xchg
movsb
and
repz
hlt
mov
xlat
cmc
pause
sub
mov
pop
dec
dec
mov
out
pop
add
in
jo
xchg
imulb
int3
push
jno
fwait
xchg
rcll
jno
push
inc
stos
sub
stc
xchg
gs
in
lods
dec
repz
loopne
lods
xchg
ror
rcr
xchg
stos
fldenv
mov
ds
out
loopne
outsl
js
mov
sti
fsubl
mov
pop
and
shrl
jo
push
rcll
pop
test
sub
pusha
dec
mov
lcall
ds
popa
dec
addr16
push
xor
into
inc
aam
loope
movsb
out
fwait
sbb
fiadds
mov
in
sti
mov
cld
in
mov
adc
fldenv
sub
jp
movsb
rorb
insb
xchg
dec
xor
push
jl
mov
sub
idivb
add
mov
mov
lods
andl
int
jp
and
sarb
imul
sbb
scas
sbbb
cmp
pop
fdiv
sbb
jge
cmc
and
mov
mov
stos
mov
push
mov
outsw
pop
mov
jmp
push
leave
jnp
int
dec
jge
sbb
cli
jno
mov
aam
scas
dec
outsl
lret
xor
add
divl
movsl
mov
sbb
fistpl
and
aam
mov
popa
ret
and
out
inc
xchg
push
je
lock
sbb
int3
test
int
in
mov
pop
add
cmp
aam
rcrb
add
outsb
jl
xchg
mov
imul
pop
cmpsl
ret
lods
test
js
out
and
out
jo
sbb
shll
mov
cmpb
daa
or
out
fcmovne
mov
add
movsl
xor
fwait
je
lret
dec
inc
shrb
sub
xchg
sub
inc
lret
pop
fcoml
into
xor
jmp
test
add
nop
adc
jae
loope
xchg
add
int
sub
cmp
adc
loop
push
int3
dec
sub
lahf
int
stos
fisubrs
pop
xchg
fistps
ds
xchg
pop
packssdw
lret
out
int
lods
mov
pop
fsts
mov
inc
mov
push
cmp
mov
stos
in
scas
push
out
push
cmpsl
sub
aad
cld
stos
mov
fistpll
mov
mov
movsl
add
mov
mov
icebp
fidivrs
jbe
pop
pop
repnz
gs
mov
push
inc
xchg
movsb
sbb
mov
leave
jmp
mov
out
std
pop
push
mov
or
outsl
lahf
into
sub
out
arpl
fisttpll
lods
or
fsubrs
loope
rcr
add
and
outsb
ds
push
xor
addl
iret
mov
scas
sahf
mov
fxch
sub
xlat
inc
mov
nop
jo
scas
push
loop
add
addl
or
out
cmpsb
dec
orl
fcmove
adc
sbb
inc
cltd
pop
into
cmp
inc
push
cmp
les
flds
lock
pop
inc
clc
pop
in
and
aad
loop
dec
fistpll
pop
or
loop
cmpsb
into
jmp
adc
mov
test
sbbl
test
push
push
stos
pop
pushf
dec
gs
xchg
push
dec
loope
in
or
sub
fidivs
fs
sub
cmp
fsubs
add
add
adc
sbb
cmp
inc
in
xchg
mov
sahf
sbb
push
std
mov
sbb
mov
push
rcl
cmpb
les
mov
and
test
inc
add
mov
test
rorl
dec
mov
push
shlb
dec
lahf
and
ljmp
mov
adc
mov
in
dec
push
repnz
xchg
mov
mov
dec
dec
loopne
mov
mov
lret
into
dec
lea
cs
iret
jmp
and
sub
das
aad
dec
push
sbb
int3
int3
repnz
negb
mov
call
sahf
adc
sarb
repz
jge
xorl
out
xor
lods
mov
mov
sahf
cltd
jnp
out
xor
dec
mov
shrl
mov
test
adc
fistpl
cmp
mov
fsubrl
bound
popa
push
out
repnz
xlat
sbb
push
in
bnd
scas
jmp
xchg
mov
test
cmp
in
stc
sub
or
inc
sbb
hlt
jo
dec
push
mov
mov
lock
outsl
sbb
cmpsl
lods
mov
xchg
in
cmp
push
xor
lret
inc
sub
or
inc
mov
mov
cmp
inc
push
fistpll
fdivrl
xchg
inc
and
jp
mov
sahf
das
test
std
or
dec
and
push
xorb
cld
shrl
in
dec
out
es
xchg
add
mov
pop
out
repnz
sbbl
push
mov
mov
push
mov
and
inc
gs
pop
in
out
fcomps
dec
ss
pushf
push
inc
test
dec
pop
scas
imulb
jae
and
test
lahf
or
mov
inc
je
xchg
lods
adc
jo
xchg
std
jno
pop
rorl
shl
gs
sbb
inc
loope
add
out
mov
popf
test
jno
lods
push
testl
je
jp
daa
inc
mov
pop
stc
nop
or
inc
aam
sarb
jnp
adc
test
mov
and
aam
in
cmp
repnz
mov
mov
and
inc
jbe
enter
push
es
mov
int
movsl
popf
outsb
mov
xchg
mov
fwait
out
and
mov
cmp
call
cmp
loope
mov
daa
repz
mov
in
lods
into
mov
sub
push
dec
insl
cmpsl
inc
pop
pop
push
mov
lahf
rol
mov
jmp
orl
sbb
and
fldl2e
aas
jbe
fmul
xchg
out
test
sbb
mov
lods
sub
outsl
inc
xorl
das
lock
mov
addl
test
iret
xchg
mov
mov
add
or
adc
out
inc
cs
je
xor
xchg
pop
mov
push
loop
fadds
mov
stos
inc
into
xchg
dec
out
jl
arpl
in
out
mov
and
push
cwtl
sub
popf
sbb
push
jmp
cmp
and
stos
fnstcw
into
push
pop
pushf
scas
mov
ret
fld
inc
std
sub
cld
mov
xchg
mov
mov
dec
rcrb
xchg
and
hlt
sub
movsb
cmp
iret
mov
and
dec
push
push
loop
fsubp
repnz
pop
sbb
loop
mov
addr16
data16
out
popf
jl
enter
lret
dec
mov
or
mov
rep
imul
sub
push
out
test
in
dec
xor
data16
mov
shll
mov
inc
xchg
or
and
in
dec
fcmovnb
cmc
sub
lods
int
and
dec
inc
cmp
js
sbb
in
dec
je
and
out
add
movsb
sahf
insl
cmp
stc
mov
popf
std
out
ss
test
addr16
test
inc
adc
add
mov
test
ds
jge
mov
push
insb
sub
pop
adc
push
jns
mov
movsl
shll
xchg
aad
imul
iret
rcrb
loop
and
jne
mov
push
lret
dec
movb
test
push
out
xchg
movsb
cmp
mov
outsl
nop
mov
mov
out
cs
mov
push
ljmp
and
imul
jbe
adc
mov
xor
sub
or
jl
sbb
imul
inc
in
xchg
pop
movsb
inc
pop
fnsave
in
inc
cmp
cs
or
jae
ficoms
outsb
stc
and
fnstsw
repz
fcmovnb
cmp
and
cmpb
out
sbb
scas
push
popl
add
push
neg
dec
imul
jg
data16
jp
xor
std
mov
rorl
and
jecxz
inc
xor
scas
mov
jp
fstps
jmp
xchg
push
scas
jge
push
test
inc
inc
push
or
stc
jle
mov
add
clc
mov
daa
es
mov
jmp
cmpsl
jns
sbb
push
jnp
dec
cmp
sub
int3
ret
and
or
or
sub
data16
mov
or
je
or
mov
sub
sbb
push
jp
aas
test
xor
mov
mov
jge
xchg
in
xchg
fs
lahf
sub
stc
js
out
sbb
sbb
out
loope
test
fdivrs
add
sub
mov
ja
int
or
test
sbb
sub
add
out
fs
pop
inc
fsubrl
jp
xlat
outsl
pop
push
mov
lods
fwait
pop
cmp
mov
scas
jecxz
aad
xor
subl
jp
add
cmp
lret
jle
cmp
in
out
mov
inc
leave
cmpb
jmp
sbb
es
push
cmpb
dec
dec
jno
fprem
stos
in
inc
scas
out
cli
into
in
es
std
ror
adc
inc
xchg
push
dec
jp
xor
icebp
movsb
popf
mov
scas
push
pop
inc
lahf
fwait
inc
aad
sub
into
std
push
xchg
daa
inc
imul
test
iret
ss
jne
xchg
mov
hlt
cs
xor
fsubl
xchg
push
out
sbb
mov
inc
jle
sbb
push
mov
shll
cltd
mov
mov
scas
jnp
in
lret
enter
in
int
xchg
fiadds
add
inc
scas
stos
inc
cmp
sub
pop
je
test
insb
cmpsb
mov
cmpsb
test
jge
mov
aad
scas
push
xchg
int
sub
sti
lock
mov
jge
cld
inc
adc
xlat
out
cli
pop
or
fsts
sbb
push
cli
shr
outsb
or
mov
cmpsb
inc
nop
repz
jns
mov
flds
and
clc
jp
jbe
shl
fsts
lret
rorb
mov
loop
sbb
and
or
inc
mov
push
sbb
push
mov
xor
outsb
pop
mov
adcl
movsl
pop
or
fisubl
sub
add
inc
mov
ljmp
push
outsl
gs
sub
jle
fwait
ret
cmp
mov
cmp
subb
pop
or
test
lahf
std
jge
test
mov
mov
outsb
out
or
push
pop
or
and
sub
xor
dec
in
or
or
mov
jne
jae
mov
je
cmpb
cmp
mov
pop
rolb
dec
clc
mov
std
mov
lahf
pop
mov
test
mov
fisttpl
aam
jmp
shll
popf
rcll
int
lods
mov
subl
cld
test
xchg
mov
add
cltd
or
push
pop
fidivs
jbe
and
lods
push
popf
mov
lods
outsb
popf
pop
inc
mov
mov
movsl
inc
stos
lea
xchg
je
xorb
inc
sbb
cmp
and
jne
inc
fcmovb
pushf
jae
scas
int
inc
out
mov
mov
cli
mov
stos
enter
repnz
lods
lods
mov
fyl2x
lret
jb
sbbb
ret
data16
repnz
jp
adcl
push
jmp
cmpsb
sti
dec
cmp
lods
ja
cmpl
in
das
jecxz
mov
imul
mov
inc
arpl
cmp
mov
or
mov
xor
jns
cld
xchg
ljmp
scas
adc
fcoml
jl
in
mov
fsubrl
xchg
aam
xchg
shl
int
or
mov
shll
mov
sub
and
fwait
xchg
sarb
lret
sbb
or
adc
or
xchg
mov
xchg
inc
mov
pusha
and
adc
ja
mov
lds
mov
mov
cmp
xchg
test
mov
cmpsb
fwait
out
adc
mov
mov
jnp
add
test
dec
out
adc
fnstcw
pop
jns
xor
fwait
push
inc
mov
fsts
js
cmpsb
je
insb
cmp
pop
adc
gs
dec
push
jnp
stos
jae
mov
out
test
or
nop
or
sub
cltd
jle
int3
sbb
cmp
xor
lods
test
pop
or
mov
mov
inc
pop
aad
mov
push
es
fidivrs
cmp
imul
insb
inc
mov
mov
shrb
test
jmp
add
js
aas
lods
jge
push
mov
out
push
mov
mov
das
test
shll
int
mov
jbe
xchg
loopne
adc
rorl
fs
push
lea
and
sti
xor
mov
or
fdivrl
fsts
daa
mov
or
inc
fcoms
repz
out
mov
sahf
das
jecxz
leave
mov
sbb
mov
leave
lock
mov
int
xchg
fstps
xchg
cli
adc
mov
pop
test
jl
dec
xchg
sbb
loop
sub
rolb
sti
inc
loopne
lahf
dec
lock
mov
push
adc
ret
dec
dec
icebp
das
hlt
nop
xchg
pop
add
popa
in
sub
sbb
imul
outsl
mov
pop
test
mov
and
jg
xor
movsl
nop
mov
cs
dec
mov
sbb
xchg
jle
movsb
in
dec
lods
clc
mov
mov
push
bound
addb
mov
inc
jmp
lret
cmpsb
cmp
inc
sub
int3
sub
adc
xor
adc
popf
stc
or
dec
lods
fiadds
mov
aam
and
mov
mov
das
arpl
add
push
jbe
shr
fld
lds
cmp
pushf
mov
xor
inc
shlb
imul
sub
addb
jnp
push
test
mov
adc
jl
pop
imul
int3
mov
mov
add
imul
insl
mov
rcrb
out
jmp
xchg
adc
xor
enter
sub
cmp
sbb
sbb
push
lds
cmp
push
xchg
sbb
shrl
test
clc
lods
adc
addr16
in
adc
mov
lea
sub
push
adc
mov
mov
movsb
mov
fstpt
mov
mov
xor
xchg
out
mov
ret
rcrb
ret
xor
inc
lret
aad
inc
add
das
sbb
loopne
cld
jl
xlat
test
adc
push
shl
int3
lock
sarl
adc
hlt
sub
call
add
or
aad
popf
xor
and
faddl
sbb
in
fs
lea
mov
pop
or
mov
stc
mov
loopne
test
fwait
xlat
mov
jle
addr16
movsb
test
scas
fdivrs
testb
or
dec
inc
jl
dec
scas
push
push
enter
jns
sub
std
sbb
mov
mov
mov
loope
cltd
dec
jl
js
in
dec
sub
add
test
vpshuflw
xchg
adc
movsl
dec
add
nop
adc
in
cmp
addb
cmp
ja
push
sbb
dec
in
lock
std
mov
call
cmpsb
and
insb
fdivr
fwait
push
pop
mov
daa
pusha
sbb
outsb
jb
mov
test
je
xchg
les
sbb
scas
in
jnp
pop
dec
lcall
gs
cmp
and
test
mov
xor
pop
mov
mov
mov
add
mov
jae
je
sub
in
xor
les
and
outsb
sub
xchg
loopne
mov
sub
inc
sbb
or
test
pop
push
inc
repnz
addr16
loop
push
pop
lds
sub
add
xor
add
ret
xor
adc
cld
fisubrl
dec
cmpsl
push
lret
out
mov
mov
std
pop
in
fwait
mov
cmp
sbb
lock
fcomp
imul
data16
xor
dec
into
fcomip
jne
push
adc
movsb
call
shlb
test
lcall
add
xlat
out
sbb
sub
mov
addr16
xor
sub
lods
cmp
mov
mov
insl
loop
mov
mov
icebp
xchg
cmp
std
aad
sub
mov
std
lcall
stos
in
fidivrl
insb
icebp
mov
mov
pop
mov
xor
lock
ja
sbb
or
rcll
clc
or
pop
lret
mov
bsr
repnz
ficomps
and
mov
sbb
pop
stos
popa
fadds
push
dec
leave
or
leave
mov
and
mov
mov
cmp
push
popa
add
in
and
pop
sub
clc
inc
add
inc
mov
fwait
mov
test
add
dec
mov
call
cmp
push
dec
push
xor
movsb
les
int
cld
jbe
test
testb
push
aad
jl
dec
jmp
int
subb
push
test
mov
cmp
jmp
movsl
jle
insb
cmc
shlb
ljmp
dec
push
and
mov
xor
fstp
call
jg
lcall
add
and
int3
or
out
repz
push
add
int3
lea
jae
imull
test
cmp
scas
xchg
test
pop
and
mov
jmp
hlt
into
xlat
addr16
push
je
adc
cmp
xor
and
testl
pop
mov
es
lahf
inc
repz
xorl
mov
adc
scas
dec
lea
ljmp
mov
jg
lds
sub
dec
insb
jge
fidivrl
stos
in
testb
gs
cs
sbbb
add
shlb
test
and
cmp
add
in
xchg
ret
cmpsb
mov
es
sub
lret
mov
cli
inc
movsb
jo
addr16
pop
jns
cmpsl
push
mov
jmp
or
cmp
sbb
leave
pop
dec
add
lods
cmpsl
outsl
test
sahf
mov
lods
test
into
sbb
dec
scas
imul
nop
cmp
dec
mov
jge
nop
imul
cltd
pop
leave
insl
je
imul
ret
pop
sub
jecxz
mov
cli
decl
mov
andb
in
push
push
xchg
jp
cmpb
out
jecxz
push
pop
dec
out
push
out
js
mov
aas
addr16
movsl
mov
push
aad
mov
out
fdivrp
inc
push
and
xor
fucomip
out
out
test
cmpsb
inc
test
sahf
lea
mov
imul
fldl
lahf
repnz
outsb
clc
cmp
mov
gs
jmp
mov
mov
mov
and
call
fnstenv
jns
mov
dec
scas
dec
test
filds
test
loopne
mov
sbb
repz
js
xchg
inc
dec
gs
and
dec
mov
pop
xchg
stos
mov
pop
push
cmovge
dec
push
test
inc
dec
pop
sbb
sti
mov
lds
sbb
adc
aaa
ljmp
addr16
addr16
std
aam
das
cmpsl
xor
cmp
pop
mov
gs
scas
ljmp
cmpsl
test
mov
sub
sub
xchg
repz
scas
test
jns
iret
in
mov
addr16
sahf
in
ret
push
push
jne
pop
dec
cld
test
adc
cmp
xlat
lods
adc
xchg
xchg
mov
outsl
pop
std
xchg
int3
cmp
sub
test
sbb
jmp
test
call
dec
cli
scas
push
sub
xchg
mov
fld
fisttpl
push
and
adcl
fsts
mov
hlt
sub
jmp
add
add
inc
les
sub
insb
xorb
shrl
ja
scas
das
sbb
or
test
cmp
test
mov
sti
or
shrb
nop
popf
and
stc
ja
outsl
nop
sbb
pop
aam
push
mov
jne
test
pop
sbb
sbb
arpl
addr16
fnstsw
aas
cli
aad
push
sbb
mov
pop
and
inc
dec
mov
sbb
add
fwait
and
mov
sahf
mov
cmp
jo
pushf
test
fnstenv
in
test
test
mov
movsb
cmp
add
mov
sbb
outsl
inc
fidivrs
notl
ret
sbb
jmp
xlat
push
pop
mov
data16
pop
xchg
mov
fwait
sub
imul
jbe
test
pop
push
test
addr16
hlt
pop
imulb
push
stos
daa
sub
outsb
sbb
push
enter
pop
mov
or
mov
xor
out
int3
addr16
js
ljmp
or
jecxz
inc
sub
int
aas
into
mov
pop
movsb
test
test
mov
test
fistps
enter
fsubl
fcompl
push
xor
mov
fsubrs
and
lods
cmpb
cmpsl
mov
lds
mov
pop
orl
fldcw
xchg
fiaddl
and
inc
mov
addr16
sub
mov
inc
and
test
sbb
jo
shll
addl
mov
leave
push
pop
cmp
popf
into
cmpsb
mov
mov
lods
out
mov
in
loop
repz
cmp
push
jge
je
dec
or
cli
ror
mov
rorl
mov
nop
stos
mov
fimuls
adc
repz
push
mov
mov
cmp
jp
cmp
inc
sbb
inc
xchg
adc
sub
sbb
or
fcompl
aam
sub
aas
sbb
xchg
scas
cmp
cmp
pop
mov
fdivs
fldcw
hlt
and
inc
lret
dec
das
xor
lds
mov
mov
adc
pop
in
xor
fisubs
clc
or
mulb
xor
lods
sti
mov
jmp
fistps
xchg
insl
xchg
mov
pop
mov
mov
outsl
xchg
cmp
fsub
and
es
fs
pushf
xchg
xlat
and
mov
mov
lret
cmpb
xor
inc
push
mov
jae
ficompl
outsb
loopne
sbb
or
repnz
cmp
jbe
daa
xrelease
mov
daa
mov
insb
inc
mov
mov
lcall
inc
rol
push
dec
loope
jmp
repnz
jl
idivb
push
test
das
fdivp
or
pop
ret
sahf
out
sahf
lods
gs
inc
push
pusha
lods
mov
jecxz
outsl
jmp
popa
pop
cld
add
jl
cmc
adc
xchg
enter
or
ffreep
and
test
popa
or
sub
fimuls
sbb
or
add
inc
mov
sbb
cmp
mov
and
out
adc
sbb
mov
mov
mov
and
jl
push
test
divb
xchg
inc
mov
pop
xchg
cmpl
sbb
mov
and
mov
push
cmpsl
mov
lds
inc
pop
mov
adc
lret
cmp
lock
fimuls
cmpsb
out
cs
daa
in
lea
stos
sub
lock
clc
sarb
xchg
xchg
daa
stc
pause
fidivl
into
mov
sarl
aaa
lret
imulb
pop
std
pushf
add
test
fldenv
mov
pop
mov
dec
mov
out
jle
cmpsl
cmp
push
push
repz
mov
or
cmp
jnp
cmp
mov
mov
fs
push
pop
fwait
call
mov
sahf
xchg
hlt
scas
cmpsb
test
daa
decb
sub
add
repnz
leave
push
and
aaa
push
out
adc
mov
lret
inc
xor
cmp
movsl
arpl
jns
xchg
or
flds
fisttps
inc
leave
gs
dec
jb
sarl
mov
pop
sub
and
cmpsb
xchg
das
jae
int3
cmpsl
test
pop
movsl
jecxz
pop
push
shrl
xchg
mov
mov
es
and
jb
rcll
xlat
in
fsubrl
sub
leave
sub
inc
int
int3
add
dec
xchg
jp
ds
cltd
andb
xchg
aaa
insl
mov
cmp
xchg
mov
cmp
jecxz
lea
push
adc
flds
add
dec
jo
and
movsl
mov
cli
imul
xchg
roll
push
lods
mov
and
adc
ror
jns
fnstenv
pop
lods
bound
inc
bound
add
xor
inc
enter
jae
cmp
lods
mov
sahf
movsb
test
enter
ss
add
sub
arpl
inc
dec
or
mov
push
stc
mov
sub
pop
and
ficompl
shll
stos
pop
popa
jne
lods
in
js
and
ffree
mov
pop
mov
sbb
stc
sahf
xor
mov
jns
pop
les
cmpsb
mov
popa
scas
lods
hlt
fnstenv
add
push
fidivrs
or
shl
sbb
jl
addb
fsubrp
pop
cmpsb
mov
add
inc
out
std
xchg
std
pop
jg
stos
mov
andb
pop
icebp
mov
stc
les
inc
ds
es
fisttps
push
jae
push
xchg
lods
lds
xchg
push
popa
cmp
xor
pop
adc
fbld
xchg
aaa
test
nop
rol
popf
xchg
fldenv
cmp
repnz
ret
fsts
push
xor
scas
push
dec
xchg
push
mov
fcoml
test
dec
mov
fsubp
jne
sub
aam
push
xor
aam
lods
pop
jno
push
test
insb
pop
xchg
mov
imul
imul
inc
fwait
loop
das
inc
fisubrl
mov
inc
mov
shrb
in
mov
sahf
dec
out
in
bound
push
and
test
sub
jb
inc
sbb
rol
arpl
sub
gs
sub
sahf
sub
xchg
inc
push
jle
int
outsb
in
sub
cmpsb
push
cwtl
pusha
enter
js
mov
pop
cmp
inc
movsl
sti
dec
dec
incl
pop
fisttpll
faddp
adc
pusha
cmpsb
xor
mov
jge
cltd
sub
push
loope
adc
pop
imul
xchg
out
inc
mov
jp
pop
cmp
cmp
xchg
test
leave
bound
jl
jle
push
cmp
sbbl
jbe
in
shll
sub
dec
cmpsl
mov
inc
xchg
lock
inc
and
sub
inc
mov
mov
sub
sub
ret
push
movsl
mov
adc
repnz
dec
and
mov
cmp
pop
xor
sti
and
cmc
jbe
aas
cmpsb
test
jae
push
jp
imul
xchg
into
sbb
add
stc
shr
jle
out
fwait
inc
clc
mov
out
mov
lods
fsubl
push
cwtl
hlt
aaa
and
test
cmpsl
mov
jns
fistps
cwtl
adc
add
fcmovbe
mov
call
daa
mov
push
mov
out
inc
jge
pop
mov
test
jmp
fsub
adc
mov
stc
lods
or
or
pushf
sub
cld
cmp
mov
jbe
xchg
hlt
or
inc
movsb
mov
loope
std
sub
mov
dec
cmp
addr16
leave
jae
sub
ja
cmp
inc
adcb
xchg
jnp
xchg
xchg
mov
fnstcw
pop
xchg
sub
push
daa
jbe
mov
cld
adcl
repnz
push
inc
in
cli
mov
push
mov
jno
push
in
test
xor
aam
cmpsb
mov
dec
mov
sub
in
cs
mov
sbb
push
mov
sub
pop
cmp
sub
loop
sbb
out
cmp
mov
sbb
shl
sarl
leave
std
popf
sub
pop
mov
sbb
cmpsb
rcll
cltd
data16
mov
enter
loop
popf
sahf
outsb
flds
test
sbb
hlt
xchg
ljmp
mov
loope
push
outsl
stos
xor
xchg
sub
and
fadd
lods
in
shll
enter
decl
mov
cs
pop
mov
test
mov
mov
mov
push
inc
sti
and
cld
push
mov
inc
bound
hlt
jle
inc
ret
out
mov
clc
pop
inc
mov
sbb
mov
sub
movsl
pop
xchg
sbb
in
das
inc
push
push
fidivrs
or
clc
or
cmp
fstps
testb
dec
dec
int3
fsubrl
jg
sbb
int
pop
sbb
push
add
mov
cmpsb
in
out
cmp
in
xchg
pop
repz
or
daa
imul
test
xchg
inc
mov
pop
sbb
filds
adc
lods
pop
xchg
bndldx
and
mov
dec
fst
cltd
cld
roll
movsl
fbld
push
cmpsl
mov
dec
fimull
inc
out
xor
mov
aas
sarb
popa
or
fwait
mov
cli
dec
fidivrs
pop
lea
mov
mov
shrb
adc
popf
popf
mov
sbb
and
mov
push
sbb
adc
aam
mov
add
and
mov
scas
cmp
jbe
fmuls
mov
in
cmp
movsb
or
jmp
mov
or
mov
mov
aad
sub
aaa
std
xor
add
xchg
push
sub
sahf
lock
mov
jno
jb
fstpl
les
sbb
aas
and
dec
mov
adc
cmp
xlat
test
jno
pop
scas
adc
in
fsts
test
in
sti
inc
test
sbb
mov
aad
pop
in
pop
movsl
or
and
mov
sbb
dec
sbb
jp
inc
and
andl
sbb
test
out
sbb
add
loopne
xchg
adc
popf
mov
test
dec
adc
cld
inc
pop
xchg
jo
popa
sti
loopne
dec
cmp
xor
pushf
dec
push
loopne
xor
mov
insb
icebp
xchg
stos
xchg
in
jnp
ret
pop
addl
popf
sbb
mov
fimuls
fs
pop
mov
sahf
sbb
mov
addr16
int
inc
flds
fnstcw
mov
push
cmp
negb
mov
jnp
xlat
ljmp
cmpb
sub
lock
lds
and
cmpsl
dec
xor
jbe
sbb
or
lock
aam
daa
mov
loopne
mov
mov
jp
inc
sbb
and
lds
adc
mov
pop
push
std
aad
aas
dec
mov
shrb
mov
fsubl
out
jge
sbb
jbe
sub
pusha
push
pop
mov
pop
pop
clc
sbb
in
popa
jmp
int
dec
rep
mov
in
jnp
xor
mov
jp
cmp
cmp
push
in
pop
stc
cmp
inc
inc
mov
mov
scas
roll
gs
mov
mov
mov
dec
inc
test
stc
cmp
jbe
ret
int
pop
xor
fstps
add
jae
mov
mov
in
or
sub
jmp
int
mov
stc
lcall
das
and
sbb
mov
mov
mov
aas
addr16
mov
std
or
lds
mov
stos
pop
push
mov
mov
jbe
adc
adc
movsl
les
or
int3
pop
xor
jmp
dec
inc
lds
fcom
push
mov
mov
xchg
das
mov
data16
mov
jno
xor
cmpsl
cltd
lods
jmp
dec
add
inc
jnp
cmp
sub
fld
div
scas
shl
jge
or
mov
into
sbb
push
fmulp
cmpsb
lea
flds
cli
push
jl
shl
pop
cli
std
mov
xchg
psraw
out
fscale
mov
outsl
xchg
cmp
in
xchg
call
or
cmpb
out
fadd
test
cmp
and
nop
jno
repnz
sub
jns
xchg
clc
mov
mov
in
pop
xchg
or
int3
mov
push
out
mov
test
aaa
xchg
cmp
loope
jl
movsl
rep
adc
repnz
xlat
aam
fisubrl
or
pop
sahf
repz
mov
leave
icebp
push
in
xchg
imul
es
test
fdivl
sahf
out
lahf
les
xchg
std
adc
fsubr
ljmp
popl
mov
fdivr
stos
dec
lock
sub
out
or
adc
push
shll
push
outsl
pusha
push
iret
and
lds
out
scas
roll
call
pop
jo
sub
pop
mov
fcmovbe
clc
mov
pop
in
je
push
movsl
dec
add
pop
dec
mov
fisttps
add
push
inc
out
int
popf
push
aaa
in
jg
bnd
inc
lods
inc
je
dec
or
jg
stos
imul
cltd
inc
cs
icebp
mov
lea
test
gs
dec
xor
idivb
mov
push
adc
in
cld
out
scas
fisubrs
cmpsl
cmpsb
lret
test
pop
les
mov
cld
pop
sbb
test
insb
xlat
leave
and
es
xlat
sbbb
loope
repz
jg
or
dec
fstpl
sbbl
out
jle
sbb
xor
mov
mov
jle
clflush
ja
push
aas
sbb
dec
sub
mov
dec
adc
push
jecxz
sbb
mov
cmc
aad
sti
faddl
inc
xchg
jl
cmp
jp
dec
mulb
sahf
in
test
iret
loopne
sbb
xchg
push
test
push
sub
inc
mov
aaa
enter
sub
sbb
sbb
int
mov
stos
movsl
div
in
mov
mov
mov
push
ret
fld
stos
into
into
in
testb
cmpsb
pop
lods
out
add
ud0
mov
lahf
test
cmp
xlat
dec
pop
enter
xchg
jbe
mov
in
add
pop
dec
call
cmp
mov
sbb
or
pop
mov
pop
fisubrs
and
or
lret
js
popa
pop
and
stos
cmp
mov
push
inc
mov
xchg
inc
pop
fidivs
lcall
xchg
or
scas
repz
fdiv
test
lock
cmp
lea
test
mov
and
aam
dec
mov
jp
outsb
int3
nop
add
scas
pop
cli
and
mov
mov
data16
cmp
push
mov
or
das
xlat
jecxz
sahf
pop
aaa
push
in
enter
pop
mov
sarl
pop
out
mov
jae
in
dec
xchg
adc
sahf
and
aaa
lods
lds
pop
add
pop
in
outsl
jecxz
jnp
movsb
aad
or
test
adc
push
aad
mov
fidivrs
aas
push
and
sti
rorb
xor
repz
std
mov
sahf
dec
ret
mov
xchg
stos
sub
ljmp
xor
pop
out
gs
xchg
adc
fs
push
es
hlt
subl
pop
xor
insl
movsb
inc
loop
lret
mov
inc
add
pop
rcrb
je
pop
or
addr16
xchg
mov
cmp
xchg
sbbb
imul
and
ret
fildll
sbb
and
cmpb
mov
jnp
out
push
addr16
aam
leave
add
xchg
pop
popa
loopne
sahf
mov
or
mov
push
mov
cli
dec
sub
ret
cmpsl
test
sub
mov
movsb
fisubl
shll
jns
push
sub
xor
inc
cmp
pop
imul
popf
add
fisubrs
loope
pop
inc
xchg
aad
and
int3
dec
adc
movsb
lret
sahf
fdivrs
cmc
or
mov
notl
add
add
inc
test
movsl
jae
inc
xor
aaa
setne
insl
xor
push
test
xchg
aad
aaa
daa
sbb
xor
cli
pop
gs
ljmp
inc
xchg
add
mov
and
addl
mov
mov
dec
shl
jno
stc
pop
gs
pop
and
mov
sbb
mov
mov
lret
pop
aad
cmpsb
xor
popf
or
inc
je
ret
push
ds
mov
mov
sbb
mov
fadd
mov
fiadds
dec
pop
pop
fldt
repnz
je
or
fcmove
into
or
jae
out
fisubs
iret
stos
add
cld
add
push
mov
jo
xchg
or
push
cmp
mov
shrl
mov
cmp
mov
lret
jae
sbb
xchg
data16
and
mov
lret
sub
jbe
xchg
and
sbb
mov
aas
cmp
inc
sub
push
pop
lods
push
push
out
clc
imul
icebp
xchg
enter
pop
aas
stos
xor
push
adc
stos
aad
cld
push
dec
xchg
shl
popf
jmp
sub
mov
adc
push
dec
jle
movsb
cs
test
fists
jl
es
push
dec
xchg
jecxz
xchg
push
call
fbstp
sub
xchg
cmpb
mov
xrelease
out
mov
frstor
sar
push
and
inc
push
mov
push
fdiv
or
sub
cli
mov
and
cmp
aas
pop
xor
andl
mov
adc
test
mov
push
push
xor
lret
push
insl
daa
mov
xor
jmp
movsl
imul
jnp
mov
push
cmp
inc
int
aam
inc
popa
mov
les
or
push
inc
or
adcb
mov
inc
out
adc
lds
cld
add
lret
sarl
pop
mov
fyl2xp1
imul
mov
cmp
push
sbb
cmp
outsl
adc
and
jb
faddp
scas
jp
cmc
jl
or
mov
and
test
jae
xchg
cmp
dec
test
sbb
xchg
inc
popf
adc
mov
movsb
testb
sbb
adc
mov
sub
pop
push
into
push
ficomps
leave
jge
enter
cmp
push
pop
and
out
test
mov
jp
jmp
cmp
xor
movsl
pushf
enter
xchg
fidivl
icebp
cmp
cmp
xor
xchg
and
pusha
icebp
les
cli
xor
jnp
mov
out
orb
gs
daa
ficompl
pushf
push
or
mov
popf
lcall
fcompl
fsubr
fidivrs
jmp
mov
cli
jae
addr16
test
jne
cmpsb
sub
insb
cmp
xchg
es
xchg
or
les
cmpb
fnstenv
test
scas
add
call
pop
cmpsb
add
pop
sbb
dec
movsb
lds
mov
in
sahf
in
out
lahf
gs
pushl
repnz
lret
repz
aam
mov
les
cmc
sub
add
dec
movsb
adc
adc
xlat
and
xchg
jne
pop
jp
test
mov
out
fmul
fstps
movsl
sarl
mov
xchg
arpl
jle
lds
fldcw
outsb
out
mov
and
cwtl
mov
mov
stos
dec
jbe
enter
add
shrl
lods
in
dec
lea
movsb
add
add
or
mov
movsl
out
stos
mov
dec
jp
ljmp
inc
mov
mov
push
push
das
imul
fucomi
lahf
movsl
adc
bound
pop
jne
sub
or
test
add
mov
repnz
lds
lcall
dec
in
xor
mov
scas
pusha
not
mov
inc
inc
push
mov
data16
and
in
jl
hlt
lea
fwait
pop
mov
clc
aam
xor
ret
jnp
inc
mov
cmpsb
add
daa
fadds
sbb
es
and
mov
pop
sub
mov
mov
dec
add
inc
imul
das
mov
ss
xor
mov
inc
test
icebp
mov
fs
mov
mov
add
repz
out
fstpt
mov
sahf
or
pop
pop
pcmpgtb
cld
mov
inc
mov
dec
dec
inc
mov
mov
fldenv
jmp
pop
sub
sahf
dec
jne
enter
push
fwait
call
lods
in
pusha
mov
cmp
adc
repz
inc
data16
sub
dec
inc
xor
xlat
cmpb
or
or
mov
adc
in
movsb
mov
std
mov
mov
lcall
mov
stos
das
push
jmp
je
scas
jns
mov
iret
imulb
into
stos
inc
mov
mov
negb
les
clc
inc
repz
pushf
test
repz
mov
jns
sbb
lods
cli
shl
in
lcall
inc
cmc
inc
sbb
lods
xchg
xor
and
das
outsl
js
and
je
push
push
adc
push
xor
xchg
lods
and
fxch
loope
inc
mov
int
pop
ss
push
enter
daa
sbb
std
jb
lret
xor
mov
mov
test
push
int
lahf
jae
mov
insb
lods
xor
clc
idivl
pop
mov
xchg
push
fsubrs
int
xor
cltd
sbb
test
lods
lahf
inc
xlat
pop
nop
mov
cli
sbb
out
roll
addr16
test
inc
inc
scas
xchg
or
or
pop
cltd
inc
inc
jns
push
shlb
aad
and
adc
loop
lock
das
test
jo
lods
cwtl
ret
pop
sub
icebp
mov
insb
add
sbb
push
lods
mov
decl
leave
mov
loope
test
mov
cltd
xchg
imul
mov
sbb
pusha
xchg
fldcw
dec
scas
bnd
pop
aad
cmpsb
pop
mov
mov
mov
and
push
pop
jg
mov
sbb
movsb
cwtl
inc
cwtl
adc
sub
pop
jns
mov
xor
fmull
mov
movsl
mov
jg
bswap
xchg
fldl
mov
int
jbe
cld
std
sbbl
mov
out
sub
pop
mov
aas
jmp
cltd
xchg
ja
mov
loop
jecxz
addr16
fmuls
repnz
push
sub
inc
inc
xchg
xorl
cmp
xor
pop
sahf
test
cmp
lock
mov
mov
test
stc
sbb
ds
sbb
jecxz
in
dec
fisttpll
mov
test
jmp
mov
or
popf
cmp
adc
ljmp
add
cltd
add
add
lock
push
push
cmp
stc
daa
inc
in
out
std
jbe
sub
mov
xchg
cmpsb
insb
rorl
mov
out
jl
fimuls
in
filds
mov
add
out
add
arpl
fcomps
adc
or
sbb
jle
icebp
mov
arpl
mov
xchg
in
jecxz
gs
inc
and
lcall
test
xchg
mov
and
or
repnz
movsl
in
or
jl
dec
addr16
scas
pop
sbb
rorl
std
scas
add
scas
addr16
les
add
xor
das
sbb
push
hlt
fldcw
mov
mov
cmp
mov
push
xchg
sub
push
out
mov
pop
cs
push
rcll
fildl
sbb
rolb
and
loop
cmpsb
iret
xorl
cmp
xor
cmp
sbb
xchg
cltd
mov
mov
mov
hlt
test
inc
imul
ffree
out
out
mov
jle
mov
cmc
test
scas
xchg
test
cmp
scas
fsts
mov
sbb
sub
imul
ret
dec
inc
push
sbb
insb
mov
push
sub
aaa
std
mov
pop
mov
xchg
pop
sub
data16
pop
jbe
incl
hlt
adc
cmpsb
std
fistps
sbb
dec
mov
lds
ss
or
popf
into
mov
pop
dec
dec
inc
cs
loop
out
lds
ja
fmull
pop
mov
mov
movsl
fmull
mov
mov
adc
push
es
jae
mov
mov
or
mov
cmpsl
je
xor
sub
faddl
mov
test
xor
in
mov
xor
fwait
jp
adc
lret
bt
pop
mov
fidivrs
outsl
cmp
cmc
xchg
sub
scas
jp
xor
outsb
sbb
ljmp
test
rcrl
push
test
movsb
jbe
dec
inc
mov
aam
nop
jl
sub
sbb
stos
jne
dec
sub
lahf
sub
std
sahf
sti
pop
fsubrs
jae
mov
in
out
add
fistps
xor
sbb
out
je
repnz
shll
jne
mov
mov
int3
mov
ja
xchg
push
aad
cld
out
les
mov
xlat
push
mov
movsb
stos
test
add
aam
or
cs
jmp
push
inc
push
push
push
rcrl
mov
inc
call
test
lods
ficompl
pmulhw
rcll
fcmovnbe
ret
divl
cmp
out
xor
popf
sub
aam
inc
repz
int
lret
fdivl
cmpl
pop
xor
pop
xchg
sbb
fimull
popf
aas
and
mov
cmpsl
cwtl
push
divb
dec
cmp
xchg
stos
in
sub
jp
push
xor
mov
add
inc
aam
clc
cwtl
dec
sbb
fisttps
jle
sbb
outsb
mov
dec
lea
das
pop
inc
and
ret
flds
ss
in
mov
daa
imul
and
in
into
scas
lahf
cmp
pop
mov
pop
mov
out
sar
icebp
mov
xor
orb
jle
push
imul
push
stos
std
fidivrs
sbb
dec
and
je
mov
sub
andl
in
and
lods
movsb
outsl
mov
pushf
jae
dec
outsb
rclb
aam
repz
xlat
loope
inc
mov
ds
cmp
ljmp
pop
pop
mov
push
cltd
into
iret
xchg
mov
lcall
sbb
movsb
sbb
push
lds
xchg
pushf
push
test
into
pop
sbb
mov
icebp
roll
push
mov
jecxz
sub
xchg
stc
test
lock
jecxz
dec
cmp
sbb
popf
push
xor
cmp
mov
xorl
popf
adc
sbb
into
cmp
fs
inc
mov
arpl
sub
and
rorl
cmp
add
frstor
sbb
aas
int3
pop
out
out
push
daa
movsl
cld
xor
xor
icebp
enter
inc
jns
aaa
xor
out
data16
divb
out
das
lock
mov
sbb
scas
testb
movsl
mov
cmc
mov
loop
popa
xor
scas
xchg
xchg
cmp
mov
jmp
jl
aam
mov
std
lods
loop
mov
inc
popa
lds
fmuls
and
lock
fstpt
loopne
nop
add
dec
scas
movsl
xlat
adc
mov
lods
xor
mov
push
dec
mov
ds
sahf
or
mov
sti
push
je
aad
js
out
add
cmp
std
add
fsubl
inc
int3
out
pusha
push
add
and
adc
popa
cmpb
mov
xchg
test
xchg
mov
sub
in
test
xchg
js
lret
xor
repz
jmp
push
jp
sub
mov
data16
sbbb
sub
mov
jp
sub
test
bound
lock
popf
loope
cld
push
and
pop
imul
into
in
jmp
jnp
faddl
pop
fdivs
xor
sub
jae
lock
faddl
sub
in
xchg
jne
std
mov
jnp
test
lods
mov
cmp
cwtl
int
fsts
mov
pshufw
mov
inc
aad
or
pop
rcll
mov
scas
aad
out
push
sbb
scas
cmp
jecxz
test
jb
xor
fdecstp
push
dec
bound
rol
roll
ret
fwait
mov
jge
xchg
adc
scas
in
xrelease
mov
push
mov
add
addr16
std
test
je
lcall
out
int3
lcall
and
inc
ljmp
pop
jnp
and
pop
jecxz
xchg
hlt
mov
out
jmp
pop
testb
pop
aad
mov
jmp
sub
cld
gs
fisubrs
mov
adc
test
pop
add
mov
inc
pop
pop
ja
mov
push
lods
mov
ss
repz
cmp
outsl
popf
sbb
xor
mov
pop
dec
adc
pushf
mov
mov
xchg
mov
jmp
pop
inc
jnp
push
mov
call
mov
dec
push
inc
push
mov
jbe
sbb
mov
out
pop
insl
cmp
or
mov
std
fnstcw
insl
retw
fsub
test
dec
es
out
out
jmp
xchg
xor
pop
jbe
leave
lcall
mov
test
or
movsl
in
add
mov
adc
push
jl
push
mov
mov
negb
mov
cmp
sbb
nop
repnz
int3
ljmp
jae
cmpsl
out
sbb
repz
xchg
xor
pop
mov
mov
popf
mov
sti
fistpl
cmp
jae
cmp
xchg
psubusw
mov
inc
insl
mov
inc
mov
addr16
fwait
lahf
cmp
fidivrs
jns
ds
sbb
xchg
jno
sub
addr16
sub
clc
stc
fisubrs
mov
outsl
daa
sub
icebp
outsb
jb
sub
sbb
rorl
lds
lcall
scas
jno
jg
xor
mov
cmp
cwtl
jno
adc
test
std
mov
fsubrs
cmpsb
cli
stos
jge
sbb
addr16
sub
adc
ss
jecxz
test
out
mulb
dec
mov
push
iret
inc
sbb
in
or
sub
pop
sub
repz
pusha
movsl
int
lods
or
out
pop
mov
ret
pop
push
add
push
sub
xor
ljmp
rcrb
cli
and
adc
rcll
in
add
movsb
mov
mov
add
dec
inc
into
xchg
flds
fwait
arpl
in
ljmp
mov
andl
cld
pushf
test
push
mov
jp
mov
dec
sbb
pop
ljmp
mov
test
es
and
pop
out
in
nop
cli
data16
pop
cltd
jbe
test
loope
aaa
add
fld
xchg
jle
mov
jb
movsb
mov
cmp
adcb
push
dec
mov
pop
stos
dec
repz
stc
add
push
mov
xchg
out
sbb
push
sbb
dec
stc
cld
test
test
repz
inc
enter
mov
dec
push
adc
sub
xor
xchg
lods
into
jle
xchg
out
orb
in
movsl
lds
test
je
daa
or
sbb
shrl
ja
out
jg
stc
sbb
sbb
add
stc
sub
mov
les
xor
arpl
aam
jns
and
and
call
clc
xchg
js
sbb
xchg
mov
cmp
scas
test
jg
ficomps
cmp
in
sahf
cwtl
mov
fisttpl
mov
cmp
jecxz
lcall
cmp
and
xor
cltd
push
mov
adc
or
shl
mov
pop
push
pop
rol
pop
ret
inc
imul
std
push
mov
out
lahf
mov
imul
cmp
loope
jle
sub
icebp
xor
inc
cmp
jge
push
mov
test
cli
pop
adcb
cmp
repz
nop
loop
call
sub
outsl
in
jecxz
pop
mov
or
adc
and
fldt
std
xchg
imul
mov
or
lods
and
jno
popf
mov
rolb
aas
mov
mov
sub
out
aad
pop
mov
cltd
mov
jne
clc
pop
popa
dec
js
inc
xchg
clc
adc
pop
lds
lods
stc
aad
jbe
dec
dec
xor
in
loop
sub
aad
imul
xlat
push
mov
pop
mov
ficompl
test
sbb
mov
inc
cmp
fnstsw
paddd
mov
pop
in
push
cmpsb
lahf
pop
scas
popf
pop
inc
mov
movsl
jno
inc
xor
mov
sti
decb
test
cwtl
cli
mov
and
inc
mov
pop
movsb
sar
sbb
inc
inc
add
mov
pop
iret
shlb
lods
dec
xor
dec
push
aas
sbb
cmpsl
jg
push
pop
jns
dec
mov
and
push
push
mov
clc
add
pop
scas
dec
sahf
xchg
push
fstps
push
adc
pop
adc
movsb
jno
and
jge
xchg
adc
mov
xor
mov
std
pop
and
lcall
aam
mov
scas
mov
mov
fisttps
inc
mov
xchg
gs
inc
ficoms
or
insl
jl
or
sub
pop
aaa
and
aam
int
mov
cmpsl
cmp
int3
test
sbb
push
orl
dec
sbb
roll
dec
jge
jmp
and
nop
in
inc
push
pop
into
fimuls
mov
and
sbb
cld
test
cmp
xchg
fcoml
inc
out
daa
push
dec
sbb
jle
fcompl
int3
dec
mov
mov
cli
adc
xor
das
test
ffreep
inc
lret
push
xor
iret
push
add
enter
push
dec
stc
or
das
mov
fs
jp
sbb
repz
lock
adc
jp
mov
mov
dec
out
jno
add
outsb
sarb
fistl
dec
push
loop
es
lods
test
stc
jmp
lret
mov
mov
jb
jge
fnstcw
sbb
dec
daa
fldcw
adc
lcall
jns,pn
jo
inc
mov
scas
lcall
lods
mov
dec
mov
sub
sub
xlat
shrl
xor
fisubrs
mov
je
mov
inc
dec
das
inc
es
push
es
scas
inc
xor
jae
jne
mov
mov
jb
xor
mov
sbb
or
negl
adc
clc
adc
adc
scas
xchg
xchg
les
xor
xor
pop
hlt
xchg
push
cmp
add
sarl
cs
cmp
push
pop
push
jo
and
sbb
push
les
sub
imul
jnp
mov
test
dec
in
inc
ja
out
cwtl
icebp
orb
jae
pop
push
and
dec
sub
sbb
push
mov
orl
movsb
lahf
popa
inc
jb
int3
xor
cwtl
cld
pop
mov
leave
adc
cmc
dec
js
and
adc
cmc
lahf
mov
cmp
push
push
lea
les
push
loop
int3
xchg
push
lods
imull
das
test
xor
cmpb
push
scas
push
out
dec
xchg
inc
cld
fwait
and
fistl
je
std
dec
adc
mov
or
ret
or
cmp
xor
add
test
xchg
push
rcl
ljmp
and
loope
fnstenv
out
xlat
js
pop
rol
sub
loopne
jl
sub
jns
sysenter
std
das
cmpsb
jmp
lahf
mov
inc
into
cmp
jl
ffreep
sub
gs
aad
test
lahf
cltd
and
or
sub
mov
jge
jmp
mov
fwait
mov
lret
push
and
xor
cli
fidivrs
cmp
int
xchg
loop
cmpsb
inc
cwtl
sti
inc
mov
pop
les
daa
insl
clc
lahf
pusha
push
mov
dec
sbb
jl
mov
pop
cmpsb
std
fwait
sbb
in
pop
xchg
sbb
cld
data16
in
in
cmpsb
jnp
les
fiadds
sbb
movb
cmp
mov
sbb
or
sub
addl
pop
sub
dec
mov
sub
mov
lds
sbb
xchg
lcall
ja
jbe
jge
mov
mov
xor
jecxz
into
mov
leave
cld
cmp
push
xor
out
and
fstpl
push
scas
loop
fldcw
call
lcall
mov
in
pop
fsubl
cli
xchg
scas
lea
mov
shlb
scas
scas
pop
and
dec
lock
jg
add
cmpsb
shlb
mov
jns
xor
jmp
cmp
movsl
notl
adc
ljmp
jae
scas
test
mov
leave
mov
icebp
push
insb
out
dec
jmp
push
mov
jg
inc
test
mov
mov
mov
out
stc
repnz
sub
popl
inc
shl
fdecstp
add
cmpsb
jl
fld
jle
jnp
or
and
sub
xor
push
in
xchg
cmc
cmp
adc
imul
les
sub
movsl
sbb
push
mov
inc
aad
jl
scas
lods
dec
test
xorb
jge
lret
fdivrl
jns
addr16
fiadds
cmc
mov
repz
lds
xchg
push
xchg
jg
fldenv
insl
dec
jbe
insl
mov
dec
push
push
imul
adc
xchg
jmp
stos
out
arpl
jo
mov
sahf
cmp
icebp
enter
mov
pop
dec
cmp
mov
mov
dec
nop
cmp
inc
scas
adc
scas
test
stc
aad
repz
test
sub
cltd
xor
scas
push
inc
iret
jge,pn
mov
dec
sub
ljmp
icebp
rclb
xor
decb
cmp
push
xchg
addb
fnstsw
mov
pop
sti
push
cmpsl
inc
mov
pop
add
jbe
cmpsl
movsb
adc
pop
scas
std
jne
jnp
adc
sbb
out
cltd
les
movb
and
cmp
inc
xchg
mov
mov
scas
test
pop
inc
jae
inc
cmpsl
int3
cmp
xchg
mov
in
ja
mov
mov
xor
rorb
add
out
sbb
lahf
inc
fld
and
mov
sbb
dec
cld
ljmp
mov
test
sbb
movsl
cltd
mov
or
push
mov
push
popf
mov
sarl
shrl
loopne
mov
pushf
sub
sbb
movsb
fdivp
mov
jb
cmp
mov
push
mov
sarl
addr16
scas
inc
mov
sbb
push
iret
mov
orl
scas
in
clc
sub
cld
test
jns
sbb
int3
jge
shll
imul
sub
inc
mov
mov
lds
xchg
sub
loop
pop
movsb
repz
cmp
sbb
adc
jl
adc
inc
mov
fildl
and
clc
test
mov
adc
sbb
rcrb
mov
lock
std
stos
fldcw
or
movntq
or
mov
mov
mov
push
leave
mov
mov
ret
flds
mov
adc
cltd
xor
xor
fildll
sub
adc
in
jno
inc
es
inc
int
rep
int
lret
jle
icebp
cli
fwait
in
xchg
sub
jne
jae
scas
cmp
mov
dec
dec
sar
sarl
scas
jmp
test
orb
lret
lret
dec
mov
inc
int3
jb
or
out
sub
xor
lods
xor
ficomps
xorb
fdivrp
lock
ss
sub
mov
popa
xor
rolb
sbb
sbb
push
adc
std
das
lods
cmc
and
and
pop
xor
pushf
pop
mov
fimuls
jle
test
test
out
cltd
mov
pop
sti
mov
sbb
dec
push
mov
rorl
test
repz
cmp
stc
bnd
lret
push
xor
fcomps
gs
xor
cs
sbb
push
movsl
sbb
xchg
inc
das
push
jp
jne
flds
cmpsb
jg
mov
cmpsb
scas
shrb
repz
adc
xlat
fs
leave
imul
test
push
pop
in
mov
movsl
inc
das
add
lds
xchg
aad
ss
int3
mov
mov
icebp
test
pop
aas
dec
pop
aad
cmp
lahf
out
cmp
xor
adc
mov
xchg
imull
adc
pop
or
in
jmp
movsl
test
nop
inc
clc
rcr
cmp
stos
enter
sub
lcall
rcll
inc
cs
xor
repz
cmp
sbbl
gs
mov
daa
lahf
push
ss
js
xor
stos
fs
ss
addr16
popa
mov
adc
test
cmp
out
loopne
mov
xchg
mov
test
inc
icebp
movsb
loopne
mov
mov
mov
outsl
add
fcompp
sbb
mov
test
mov
xchg
sub
pop
sub
loop
jo
or
mov
adc
insl
push
test
jns
pop
and
mov
int3
daa
push
int3
pop
arpl
mov
and
aam
out
mov
dec
mov
or
adc
sub
test
inc
adc
ljmp
in
stc
test
sub
xor
mov
std
test
push
mov
movsl
or
fbld
test
dec
and
mov
cltd
loop
fwait
jns
jge
jg
cmp
dec
jne
mov
out
lret
pop
loop
mov
adc
sub
dec
adc
xchg
or
mov
in
fdivl
or
popa
push
xchg
mov
test
dec
aaa
adc
mov
jge
xor
dec
dec
jge
mov
or
in
out
pop
mov
ljmp
or
mov
sahf
and
push
iret
inc
loop
mov
int
add
mov
mov
and
jmp
dec
cwtl
sbb
adc
or
xchg
inc
cmp
jbe
rcll
imul
pushf
fildll
sarb
xlat
xchg
or
push
fldenv
mov
mov
addl
ret
fwait
ret
loope
mov
insl
xchg
mov
or
incb
int
add
std
aad
gs
lcall
sub
inc
cwtl
icebp
jle
int
add
testb
cmp
movsl
mov
xor
pop
sbb
lds
mov
mov
jecxz
inc
movb
pop
push
mov
mov
mov
fnstenv
int
xor
sub
lods
sbb
dec
push
sbb
inc
int3
jns
popf
lods
and
arpl
scas
or
push
mov
nop
cmp
xorl
sbb
pop
jp
das
adc
mov
and
int
jge
inc
test
cmp
fistl
negl
sbb
mov
xchg
cmp
xchg
pop
xchg
mov
xor
sbb
ds
sub
mov
les
xchg
repz
inc
loopne
roll
cmp
scas
sub
and
xor
inc
mov
push
add
test
call
push
xor
fildl
popa
mov
xchg
add
cmpsb
das
xchg
scas
or
xorl
or
scas
add
hlt
sub
or
mov
mov
popl
pop
nop
bnd
js
in
xor
cmp
scas
jg
xchg
dec
xlat
lods
and
mov
out
xchg
clc
lock
in
in
pop
sub
mov
cs
add
idivb
mov
gs
shlb
add
lods
sbb
jl
xor
fcmove
ret
in
pop
in
leave
xchg
and
mov
xchg
fs
dec
or
es
adc
sahf
fimuls
jmp
xlat
call
cmp
gs
mov
adc
and
cmpl
dec
std
aam
xchg
ds
jno
stos
stos
adc
push
icebp
cmc
xchg
sbb
pop
cltd
cmp
fldenv
lcall
cltd
mov
sub
movsb
popf
out
scas
pop
add
sub
gs
adc
push
testl
mov
fstpl
mov
negl
aad
mov
and
fisubrs
mov
mov
test
mov
movsl
xchg
or
and
mov
mov
scas
hlt
adc
pop
sub
scas
inc
je
mov
loope
movsb
pop
hlt
sub
das
out
jne
mov
ja
jnp
xchg
dec
sti
mov
das
aas
ret
js
flds
mov
jecxz
pop
pop
in
ljmp
or
mov
pop
sbb
cmp
rol
jnp
mov
test
cmpsl
or
movsl
f2xm1
mov
mov
enter
jg
dec
loope
pop
aad
cmpsb
push
jg
mov
or
jns
xor
ret
mov
imull
shrb
daa
xor
push
mov
mov
pushf
test
mov
inc
mov
scas
cmp
xchg
fdivp
int3
cltd
insl
dec
sbb
ljmp
test
dec
mov
mov
loop
pop
fldt
inc
gs
inc
add
fwait
aaa
mov
flds
lods
xchg
mov
mov
in
divl
jle
dec
popf
xchg
xor
test
das
xchg
mov
mov
jmp
ljmp
dec
dec
pusha
cld
test
adc
jge
in
bound
pop
add
sbb
movsl
shr
mov
mov
cli
aas
aam
cmpsl
and
jbe
ficomps
mov
sarb
sbb
jge
fcmovbe
push
or
dec
pushf
fnstcw
xchg
rclb
int
fwait
mov
sbbl
int
xchg
inc
lret
das
in
jo
jmp
sub
neg
pop
into
push
movsb
enter
xor
cmp
push
inc
mov
mov
repnz
push
cltd
xor
sbb
sbb
in
sbb
jp
push
sbb
dec
inc
push
stos
adc
pop
sbb
ret
sub
fsubrp
addr16
scas
jnp
xchg
fisttpll
jno
repz
xchg
sti
mov
out
xor
add
sub
cmp
xchg
cmpsl
test
into
in
xor
push
sbb
push
add
out
loopne
shl
out
sub
cli
adc
lea
lods
btr
jmp
gs
testl
pop
shlb
les
out
sub
sahf
push
shll
adc
xchg
or
shll
mov
inc
jmp
cwtl
or
xchg
adc
cld
cmpsb
mov
nop
test
fwait
pusha
sbb
cmpsl
mov
cmp
xchg
shll
jno
adc
jbe
push
fimuls
lods
add
push
lods
mov
and
shlb
dec
cmpl
scas
jl
insb
push
fs
in
xchg
mov
mov
jbe
lods
test
mov
xchg
fsubp
in
fnstenv
movsl
push
pop
addb
cmpsl
inc
loop
or
mov
repz
je
jle
gs
push
cmp
push
sub
test
out
mov
in
jae
inc
cmpsb
js
pop
jle
ror
xor
call
push
xor
mov
or
incb
jb
xchg
or
test
mov
mov
cltd
lea
stc
mov
das
pushf
call
or
cmp
mov
outsb
repz
adc
pop
popa
je
jp
aaa
pop
sub
and
sub
dec
repz
roll
sub
test
out
adc
add
add
fcomps
not
repz
push
insb
insl
add
mov
movsb
pop
fwait
adc
add
cmp
push
sbb
xor
xor
shl
pop
dec
into
dec
mov
sahf
mov
mov
push
sbb
cmpsl
arpl
pop
hlt
repz
sbb
hlt
mov
std
and
xor
pushf
push
push
jl
cld
mov
inc
shrb
mov
popf
lahf
test
push
sub
adcb
mov
and
sbb
repz
mov
int
mov
add
scas
in
fldenv
ja
mov
test
xchg
cli
ret
xchg
mov
in
outsb
or
mov
movsb
adc
shlb
mov
inc
ret
test
sbb
popf
jle
popf
jge
dec
push
jnp
pop
inc
aad
aaa
lods
repz
jecxz
cmp
or
push
lcall
ficomps
roll
lods
jmp
xchg
add
lods
out
pusha
icebp
jno
xor
scas
and
inc
mov
repz
inc
adc
fldcw
sub
pop
shlb
mov
xor
shlb
testb
cmpsl
and
insb
int3
push
mov
out
fisubs
fsubl
sub
lahf
adc
sbb
lcall
xchg
repz
pop
shrl
flds
inc
fdivrl
repz
mov
mov
mov
in
out
out
push
push
mov
and
cmpl
sbb
fistl
xor
fnstenv
mov
scas
aas
and
adc
subl
cmp
jmp
subb
icebp
jp
jnp
out
pop
mov
sbb
stc
pop
aam
inc
subb
gs
dec
popf
shl
sub
sub
dec
outsl
xor
fwait
cli
aad
push
bound
lods
loope
or
out
insb
jecxz
ret
imul
and
and
repnz
ds
test
icebp
mov
mov
mov
push
mov
dec
jp
dec
sbb
or
sub
in
xchg
test
les
cli
mov
mov
fldenv
das
pop
je
rorl
rclb
lods
icebp
aam
mov
mov
into
pushf
mov
inc
xchg
pop
inc
or
lahf
pop
inc
mov
cmp
nop
cld
lods
outsb
lods
and
inc
std
jp
fwait
or
mov
int3
cmp
mov
pop
xor
jno
mov
xor
outsl
mov
dec
xchg
mov
mov
sbb
sub
insb
push
jmp
icebp
aam
xchg
jnp
pop
cmc
mov
push
out
mov
adc
je
out
cmp
push
jae
fistpll
cmp
sbb
lock
sub
arpl
pop
fwait
mov
hlt
mov
xor
aas
pusha
dec
aam
push
sub
or
dec
sarl
add
cmp
sub
xchg
fwait
aaa
mov
gs
icebp
repz
lcall
nop
sub
cltd
shlb
jmp
lea
push
rolb
int
daa
bound
shll
mov
lods
enter
mov
xor
inc
sbb
lret
mov
add
in
mov
ficoml
in
daa
add
shr
call
loop
cmpsl
fisttpll
cmp
out
xchg
inc
pop
push
test
scas
adc
xchg
in
mov
repz
push
push
ss
aad
lds
mov
sbb
push
mov
bound
ret
cmp
jo
mov
repz
sub
jb
loopne
jns
jle
pop
popf
mov
push
shl
xchg
pop
jg
adc
pop
mov
test
repz
das
cmpb
adc
out
pop
jmp
xchg
jp
clc
mov
fs
mov
jp
std
push
xlat
mov
sarl
fs
int
loop
mov
repz
mov
js
jle
std
cld
cmp
cs
popf
xchg
mov
aam
mov
pop
or
idivl
xlat
push
push
dec
push
fcmovb
mov
jae
xchg
xorb
je
pop
and
scas
mov
mov
pushf
push
call
xchg
inc
mov
mov
mov
xor
ljmp
shld
rcrl
imul
lahf
in
lret
aaa
ficoml
icebp
adc
iret
stc
repz
sbb
int3
pop
pop
or
mov
xor
int3
in
add
adc
fldenv
iret
repz
hlt
sub
xor
xchg
ror
xchg
inc
scas
dec
gs
repnz
test
jl
test
scas
dec
jae
call
mov
fdecstp
pop
movsb
cltd
xchg
push
inc
das
mov
xchg
out
scas
bnd
dec
out
mov
inc
repz
rcll
das
cmpsb
sub
mov
inc
cmp
test
push
or
mov
loopne
adc
xchg
insb
xchg
add
jp
mov
push
daa
push
cmpsb
sub
pop
les
cmp
cmp
dec
xorb
pop
ss
mov
fucomp
sub
stc
adc
test
and
stos
cmp
add
dec
xor
mov
fs
dec
xchg
sub
decb
es
jp
lods
dec
je
mov
mov
out
cltd
inc
mov
fwait
test
sbb
outsb
popf
sbb
std
cmpsl
test
mov
ja
test
ds
aaa
ja
and
sbb
mov
cld
adc
call
adc
push
cmp
mov
cmp
fstpl
push
lods
rcrb
lahf
sbb
clc
pusha
sbbl
ljmp
inc
fidivs
jge
pop
push
cli
mov
push
adc
adc
jecxz
push
les
in
cmpsb
sbb
and
test
xchg
shl
pop
sahf
jae
inc
xchg
es
sub
lds
cmp
gs
add
xor
sahf
sbb
outsb
outsl
popf
push
dec
es
sbb
ss
stc
int
lret
xchg
push
cmpsl
xor
stos
xchg
jb
cmp
jae
in
mov
fstpl
gs
sub
pop
leave
lock
pushf
scas
mov
push
cs
addl
popf
imul
fidivrs
fdivr
mov
imul
jbe
aad
push
in
mov
pop
icebp
pusha
mov
mov
cmp
int3
lcall
mov
cmpsb
jns
lahf
fsts
xchg
adc
cli
fdivrl
and
mov
or
nop
jg
imul
jns
loopne
scas
push
out
cmp
inc
xor
mov
fldenv
jns
cmp
sub
mov
xchg
xchg
xchg
push
cld
dec
cmp
push
lret
and
in
lock
popf
push
scas
fstpl
inc
jnp
or
repz
jge
cmp
add
xchg
cli
sbb
stos
cmc
xor
jae
outsl
lds
fsubl
lcall
mov
mov
outsb
mov
cs
sub
or
cmp
out
fld
cmc
fsubs
lret
iret
xor
pop
idivb
imul
in
jl
sarl
adc
insb
nop
sub
mov
sub
mov
and
outsb
jb
or
mov
lea
push
jb
mov
inc
xchg
stc
mov
fs
fbstp
pushf
or
or
repz
sub
add
addr16
push
mov
mov
push
push
loopne
into
inc
xchg
or
outsl
ficoml
popf
pop
andb
cltd
cli
repnz
sub
push
int3
xchg
pop
out
xor
push
in
dec
into
push
mov
cmpsl
mov
xchg
xor
filds
cmpsl
clc
jnp
test
andb
mov
test
in
mov
test
out
call
fsts
inc
lock
scas
stos
mov
jns
lret
popf
push
adc
dec
cmpsl
mov
dec
fstps
mov
cwtl
pop
mov
adc
inc
cli
stc
popf
fwait
push
aas
and
push
hlt
sbb
loop
cmp
pop
push
mov
adc
lock
fwait
out
push
cmp
gs
cli
ljmp
leave
mov
push
fsubrl
lds
jle
pop
or
pop
call
out
mov
fiaddl
mov
mov
pop
xor
mov
int3
or
cltd
lds
lret
insl
fimuls
mov
fistps
sub
fnsave
and
cmp
dec
mov
inc
jg
in
adc
mov
mov
mov
das
dec
shrb
mov
hlt
pop
scas
jl
test
test
adc
js
mov
out
je
inc
mov
fsubrl
aas
xor
jo
test
xchg
or
scas
ja
fwait
das
inc
hlt
sub
cld
ss
jp
mov
xchg
test
pop
cmc
mov
push
cmpsl
dec
pop
xor
pop
call
pop
push
and
in
sbb
mov
mov
mov
xor
cmp
fidivrs
movsl
xchg
shlb
jge
fcompl
push
repnz
dec
fsubl
aaa
popa
push
cmpsb
pusha
shrb
leave
test
sbb
lahf
pusha
push
imul
xlat
cmpl
lret
ja
movsb
fyl2xp1
movsl
cltd
add
xor
ljmp
dec
in
arpl
setge
mov
jae
jg
inc
sub
sti
addr16
cltd
clc
inc
or
inc
dec
imul
push
scas
fmull
jae
test
imul
sub
add
jo
mov
xchg
arpl
sbb
push
mov
or
mov
mov
in
test
and
mov
jne
dec
into
mov
or
nop
lcall
xor
and
sarl
fnstcw
outsb
jnp
std
add
inc
out
adc
insl
pop
dec
mov
das
lds
cmpsl
mov
cs
jns
dec
movsl
loopne
pop
adc
push
push
ror
fwait
sub
lea
adc
repnz
sbb
or
pop
cld
cmp
push
mov
dec
sqrtps
ret
xor
repz
das
xchg
xchg
pop
fsubl
fnstsw
stos
push
add
and
movsb
out
icebp
adc
xchg
dec
jns
mov
movsb
or
faddl
fsts
mov
es
outsb
xor
mov
sbb
jmp
loopne
sbb
and
dec
in
fwait
dec
sbb
mov
jecxz
mov
dec
add
push
pusha
push
xchg
mov
push
adcl
lret
mov
fnstcw
js
mov
pop
flds
les
cltd
xor
test
inc
mov
pop
movsl
jecxz
lahf
lea
enter
out
cmpsl
push
hlt
lock
daa
mov
out
sub
sbb
dec
jle
gs
sti
and
xor
fstps
fstps
nopl
fimuls
pusha
es
push
add
sbb
fadds
adc
pushf
les
pop
mov
subb
xchg
inc
xchg
cmpsl
mov
sbb
xor
dec
movsl
and
pushf
scas
adc
mov
sbb
in
pop
hlt
daa
out
adc
scas
std
fisubs
fisttpll
shl
sahf
hlt
into
xchg
push
sbb
fs
xor
jnp
inc
add
test
imul
jns
leave
xchg
mov
in
test
inc
les
lock
xchg
sbb
sbb
sub
sub
jl
loop
jl
iret
mov
dec
call
shll
leave
mov
inc
les
movsb
notl
cmp
cmpsb
shll
or
mov
aad
test
dec
add
xchg
pop
test
lods
int
mov
sbb
adcl
mov
fsubl
fdivl
or
int
pusha
lock
fsts
push
mov
lods
push
cmpsl
xchg
sbb
cmpsb
fs
pop
xchg
stc
loopne
movsl
xchg
and
pop
mov
popf
and
fisubrs
cmp
dec
hlt
mov
fisttps
push
adc
imul
mov
mov
fstpl
dec
sahf
jae
sti
adc
test
imul
jnp
inc
push
out
cmpsl
ret
in
mov
jg
adc
sub
call
inc
mov
dec
nop
push
call
scas
jp
jne
int3
lods
daa
cmpsb
push
aam
mov
test
jge
pop
leave
cmp
into
jmp
icebp
mov
ljmp
je
out
leave
int3
addr16
xor
pop
jno
and
test
lods
std
mov
outsb
scas
inc
ljmp
push
pop
stc
xor
int
sarl
mov
lcall
jle
xor
sub
lds
xchg
lret
dec
call
push
mov
sarb
nop
out
mov
in
dec
scas
mov
mov
mov
repz
repnz
push
das
add
push
out
fmull
fistpll
lods
jae
test
xchg
shl
mov
xor
mov
dec
jl
sub
ss
xor
movb
cs
sub
popa
pop
imul
js
lahf
sbb
dec
or
jo
test
jl
xor
fistl
mov
addr16
push
jbe
das
mov
fstps
add
test
xchg
in
xchg
pushf
jl
ljmp
add
sbb
out
push
xchg
mov
xor
std
xchg
je
and
pop
orb
scas
xchg
insl
movsb
scas
js
test
mov
jno
popf
lods
pop
iret
mov
sbb
into
jg
cmc
adcl
into
sub
icebp
shlb
scas
fdivrl
rolb
push
jne
cmp
in
jns
pushf
cmp
aam
adc
xor
in
sti
das
and
test
inc
fbld
adc
cmp
in
xchg
aaa
or
add
aad
inc
pop
fcoms
imul
or
jmp
test
dec
fsub
mov
test
mov
sahf
std
das
test
mov
out
jp
mov
sbb
popa
xchg
mov
lahf
xchg
sarb
pop
pop
lret
xchg
lods
notl
xchg
repz
jp
fwait
jae
fcoms
cltd
in
sti
cmpsb
and
pop
addb
and
ljmp
mov
out
mov
std
or
pop
jecxz
jno
jge
xlat
mov
mov
xchg
and
or
test
pop
push
rclb
jecxz
mov
jmp
std
push
push
enter
inc
lods
jno
jb
mov
jne
popf
xchg
in
cmp
add
lret
daa
js
mov
inc
xor
lock
jbe
les
mov
scas
mov
rorl
jae
movsl
mov
inc
imul
inc
jnp
inc
hlt
in
imul
lcall
mov
mov
pop
push
gs
dec
sub
add
jns
pop
popf
ss
in
xor
adc
into
push
xlat
out
mov
cmpsb
mov
mov
and
mov
mov
add
jbe
lret
ret
insb
dec
cmpsl
sbb
sbb
bound
sahf
sti
and
inc
out
mov
sarb
pop
push
test
fsqrt
test
lock
sbb
sti
jl
fldcw
arpl
std
sbb
dec
stos
movsb
imull
int3
cmpsl
mov
cltd
add
pop
xor
dec
push
test
push
jg
and
and
imulb
cmp
lahf
add
repnz
into
jecxz
mov
fs
scas
mov
out
cmp
mov
adc
fnstenv
out
daa
rcll
jl
dec
scas
ret
push
iret
inc
fld
mov
mov
int
out
lret
jb
sbb
sbb
and
jp
loop
pop
movsl
out
rolb
movsl
aad
jl
lea
test
int
cmpsl
mov
mov
andl
or
xchg
loop
iret
out
mov
iret
daa
xor
cmpsb
pushf
push
dec
into
mov
inc
ljmp
or
cmp
mov
adc
pop
adcl
cld
fldt
dec
xchg
pop
xchg
mov
scas
fabs
mov
test
cmp
int
lods
cmp
insl
fstl
rcrl
mov
xor
and
mov
in
mov
call
js
fldenv
mov
push
pusha
xlat
sahf
andl
nop
clc
sbb
pop
cltd
jl
fld
mov
imul
mov
mov
cmp
dec
cwtl
nop
and
adc
add
mull
das
std
and
test
push
es
sbb
into
idiv
sbb
pop
iret
jl
shll
inc
cmpb
lock
loop
es
cwtl
insb
and
adc
jnp
ss
imul
sbb
call
in
xchg
add
sbb
mov
roll
test
cmpl
fprem1
adc
mov
js
mov
loopne
and
add
inc
mov
lcall
loop
enter
mov
enter
enter
xor
fidivs
clc
data16
add
rcrl
std
xchg
jle
enter
das
dec
movsl
jbe
xor
sahf
aad
fstp
out
jecxz
dec
cmp
lahf
test
inc
push
dec
pop
in
and
inc
lcall
inc
cld
ds
int
aaa
fsts
sbb
jo
push
xor
out
lds
xchg
movsl
sub
adc
inc
sbb
std
push
fdivs
lret
push
inc
out
hlt
and
je
push
sbb
test
insb
fsts
lods
hlt
mov
lahf
lds
fsubs
xchg
testb
mov
stos
es
je
dec
out
rcll
mov
cmp
lods
into
xchg
xor
test
mov
in
mov
cmp
mov
mov
sub
xor
ss
es
dec
outsb
pop
xor
dec
mov
fldenv
cmp
and
cmp
lds
les
adc
push
xchg
ss
mov
push
push
mov
jno
adc
stos
lds
pusha
sti
cmp
fldenv
sbb
popf
repnz
aad
mov
or
cld
fnstcw
jl
cmc
imul
cli
and
gs
lea
dec
pop
cmp
mov
lds
loope
in
emms
sarl
cmpsb
cmpsl
orb
sub
test
jae
addb
mov
push
jnp
mov
adc
lea
xlat
add
out
lock
xor
xlat
jle
lahf
jg
sub
lock
flds
fs
inc
test
fldcw
cmp
xor
inc
xchg
das
data16
mov
and
sub
sbb
out
mov
fidivrs
arpl
push
xor
inc
inc
loopne
push
loop
jno
sub
cmp
das
fsubl
outsl
pushf
and
lock
jae
sub
lds
adc
int3
or
cmpsl
test
fldl2t
xor
or
rcrl
inc
push
and
xchg
cmpsl
fsub
adc
in
add
std
fstl
sbbl
je
test
mov
xchg
adc
inc
ret
test
enter
and
mov
sub
sarl
out
shrb
or
or
fidivs
jmp
sbb
cs
fsubr
popa
mov
cmp
adc
std
es
nop
pushf
xor
mov
sbb
inc
push
fsubrl
in
aam
mov
mov
fisubrl
dec
inc
xchg
push
add
mov
out
test
mov
scas
std
jae
lret
cmp
adc
sbb
pop
jp
jae
dec
ret
mov
adc
lock
sbb
data16
cwtl
testb
lods
cmp
sbb
pop
jo
inc
outsb
cli
jecxz
aaa
pop
rcrl
test
cmp
lods
and
xchg
shrl
xor
test
int
jne
jns
adc
cmp
imul
and
bnd
dec
test
xor
mov
stos
fnstcw
rcrl
subl
mov
test
sbb
or
or
xchg
push
and
out
out
lahf
inc
leave
adc
ret
sub
inc
sub
lcall
fsubp
fmull
xchg
divl
xorb
cmp
mov
push
repz
fwait
lret
fdivrl
imul
fdivp
scas
xlat
and
jl
repz
push
repnz
mov
mov
push
dec
and
jle
rol
xchg
jle
xor
xlat
push
in
in
mov
ror
sahf
jnp
add
cmpsb
mov
mov
rcll
sbb
arpl
in
cmp
ljmp
xchg
xor
xor
in
fxch
jne
std
fistl
jmp
scas
pop
push
mov
adc
xchg
mov
dec
stc
das
mov
mov
fmul
shlb
push
dec
in
dec
mov
int3
add
sub
jnp
push
test
and
mov
repz
jno
dec
out
sub
sub
pop
sub
cs
sub
adc
mov
adc
scas
xchg
out
push
fnstsw
and
lods
shlb
insl
xorl
arpl
adc
test
out
jne
int
dec
sbb
and
push
lcall
fildl
push
fnstenv
mov
cmpsl
adc
jmp
pop
stos
jns
ljmp
jp
mov
sbb
sarb
add
pop
push
jp
mov
pop
cld
dec
out
lret
cmp
les
mov
mov
cmc
aas
test
sbb
mov
mov
andb
test
jae
jl
imul
and
pop
gs
xchg
aam
push
out
leave
fsts
or
jle
inc
cmp
adc
dec
ja
dec
mov
jo
test
cltd
scas
repz
scas
mov
jno
and
ficoml
mov
mov
cmp
jno
jmp
test
inc
fstps
mov
lahf
add
xchg
paddd
xchg
popf
lea
jae
inc
pop
iret
mov
fisttpl
jbe
or
push
ljmp
jmp
add
dec
and
pop
or
sbb
pop
dec
inc
addb
jno
leave
mov
pop
fsts
loopne
test
cmpsl
shll
lds
mov
adc
push
cmp
push
je
jae
adc
out
data16
and
sub
mov
pop
bound
or
cmpsl
push
mov
cmc
xchg
pop
ret
lret
leave
test
push
mov
addl
inc
lret
jmp
and
xchg
adc
fistpll
and
ja
adc
ficompl
notl
in
notl
inc
sbb
das
xchg
xlat
sahf
gs
test
inc
ja
inc
mov
sub
gs
fwait
scas
inc
test
add
jge
mov
mov
fsubrl
sbb
sahf
inc
lods
daa
lret
and
inc
sub
iret
dec
push
iret
sbb
aad
sbb
mov
dec
rorb
sbb
cmpsb
xor
or
pop
sbb
mov
mov
lods
aaa
int
xchg
jp
xchg
xor
mov
pop
cld
xor
fiadds
xchg
cmc
pop
in
mov
push
into
std
mov
lock
fnstcw
aad
stos
lods
mov
andb
jne
inc
loope
lea
jno
mov
fdivrp
push
push
sbb
cwtl
jnp
push
mov
mov
mov
clc
jnp
mov
in
and
cmp
mov
mov
pop
movl
and
fnstcw
lods
push
test
xor
sbb
mov
mov
mov
ss
data16
movsb
mov
xchg
push
inc
pop
sti
mov
bound
std
fldl
jnp
cmp
cmp
cli
jns
nop
fnstcw
jecxz
mov
fstpl
sbb
mov
mov
clc
inc
popf
dec
hlt
jl
sub
fnstenv
dec
das
xchg
pop
push
ret
dec
and
and
push
imul
gs
cmp
and
stos
movsb
js
mov
in
lahf
out
in
in
dec
and
inc
sub
clc
mov
popa
dec
jp
test
sub
fsub
fs
cmp
rolb
std
outsb
jne
je
mov
dec
in
or
dec
push
stos
mov
sbb
enter
pop
lahf
xor
mov
mov
scas
jg
jg
add
dec
filds
xchg
test
mov
sbb
pop
dec
dec
jae
dec
ja
adc
jns
xor
push
fsub
jns
cwtl
scas
xor
mov
lods
sub
pop
add
mov
repz
fmuls
push
xchg
fsubs
push
sbb
rcrb
pop
mov
inc
mov
es
push
idivb
push
push
in
jp
mov
rclb
gs
mov
xor
ljmp
subb
mov
es
mov
jns
sub
adc
mov
sbb
lock
push
dec
cli
add
and
out
cmp
or
test
cwtl
xlat
sub
and
loopne
movsb
das
lret
daa
loope
sbb
std
cli
jae
insb
in
rorb
xchg
mov
sub
gs
lock
das
mov
sbb
stc
fdivr
rol
into
sti
movsl
jge
pop
jmp
xchg
mov
mov
xchg
and
jnp
int
jmp
mov
aaa
add
adc
int
jnp
popa
clc
imul
je
dec
sbb
sbb
mov
mul
pop
cmp
das
xor
and
add
cmpsb
push
rorl
jb
out
and
fidivrs
xchg
jo
sbb
xor
mov
fnstcw
movsl
adc
pushf
xchg
and
cmpsb
jg
or
adc
inc
fs
mov
std
fstpl
mov
lcall
nop
adc
xlat
test
sbb
push
jle
xor
or
pusha
sub
rorl
mov
or
cli
scas
mov
push
rcr
mov
js
cmc
lock
je
or
inc
sbb
dec
hlt
or
sub
sub
cs
in
aad
repz
fucomp
out
mov
pop
xor
mov
es
xchg
pop
add
cmp
stc
pop
mov
out
jle
xor
test
ss
mov
gs
fidivrs
lea
pop
sahf
test
pop
cmp
sarb
pop
pop
fisubs
add
ja
mov
push
push
add
dec
lcall
std
xchg
push
mov
fs
into
push
pop
scas
sub
out
xor
mov
add
jb
xor
call
out
mov
out
scas
inc
test
mov
inc
mov
mov
out
jmp
cmp
nop
popa
inc
in
cld
sbb
lahf
movsl
mov
xchg
sbbb
stos
in
add
adc
and
stos
adc
mov
adcl
mov
je
addr16
sub
inc
xchg
mov
lret
dec
aaa
inc
das
and
fnstsw
adc
mov
add
loopne
xchg
jmp
addb
xchg
push
mov
sti
pop
adc
inc
div
popf
cmpps
pop
inc
xchg
mov
push
pop
or
es
rclb
sub
xor
lods
lods
adc
lds
cltd
jg
lock
mov
adc
movsb
dec
add
xchg
popf
aas
imul
lds
fwait
cmp
mov
inc
fists
mov
flds
pop
cmp
inc
push
aas
cli
pop
sahf
and
mov
in
out
addr16
sub
mov
mov
pop
add
pushf
jl
js
mov
mov
insl
nop
push
int3
xor
xor
xor
mov
fwait
pushf
mov
dec
mov
xchg
adc
in
push
add
lahf
pop
subl
aaa
test
das
jmp
fistpll
push
lods
ds
in
iret
mov
lods
pop
and
pusha
pop
lock
adc
das
shlb
out
leave
out
jnp
fwait
cmp
sbb
out
jl
gs
and
lods
add
mov
sarb
scas
add
lods
mov
and
loope
push
jle
sbb
mov
xor
fwait
out
jp
popa
push
fs
jns
push
xor
cltd
mov
int3
roll
adc
mov
hlt
rcll
xor
and
dec
xchg
les
mov
cli
dec
mov
inc
iret
in
in
xlat
xor
inc
inc
mov
sbb
movsb
jmp
jmp
mov
cmp
pushf
cmpsl
test
lods
and
das
mov
cmp
sub
inc
cmc
adc
rcrb
cs
jo
scas
stc
sub
pop
shrl
push
jge
pop
iret
pop
std
push
fsubrp
enter
arpl
fsubrl
sahf
inc
mov
imul
das
data16
outsb
xchg
ss
outsb
inc
or
xor
dec
hlt
jmp
hlt
push
mov
and
in
rcl
cmp
fsts
and
xchg
push
mov
bound
es
inc
mov
pushf
lods
test
dec
or
mov
decb
xchg
repz
popf
xchg
outsb
das
loop
scas
push
cmp
out
add
mov
inc
out
addb
je
sub
stc
jno
mov
add
push
les
cmp
push
mov
ss
cmp
popf
inc
sub
and
insb
sarl
gs
and
in
mov
les
and
jle
jnp
lcall
gs
add
mov
lods
fidivs
jno
movsb
cmp
xlat
pop
adc
mov
jno
shlb
push
test
adc
mov
mov
fnstcw
xor
cmp
cmp
data16
lret
ds
es
cmp
push
push
jbe
es
sahf
das
inc
mov
add
iret
cmpsb
decl
xchg
inc
bound
int
out
pusha
add
mov
fsubrp
sub
push
xchg
push
cltd
int3
push
mov
imul
pop
inc
andb
xor
mov
dec
pushf
insb
add
cmpsl
mov
push
in
outsb
mov
and
mov
adc
cmp
pop
gs
imul
mov
scas
cli
scas
cmpsl
mov
lahf
lcall
aad
fstps
mov
aas
shll
sahf
pop
push
xor
sbb
ret
cmp
test
sbb
jp
outsb
lret
out
cmp
mov
xor
sub
and
in
loope
ret
or
xor
js
leave
arpl
inc
lahf
pusha
jecxz
inc
lods
push
sub
xchg
mov
clc
mov
mov
ror
addb
mov
sbb
xor
jge
data16
cmc
mov
test
sbb
add
xor
xchg
cli
aad
mov
out
andl
cmp
push
mov
addl
aas
xchg
dec
lods
ret
push
mov
xchg
and
cmp
outsl
ljmp
mov
fchs
mov
lds
jle
das
icebp
lods
sbb
inc
lock
xchg
out
and
inc
jl
ljmp
jbe
or
jb
sti
and
dec
repz
inc
mov
divb
andl
movsb
shrl
lock
pop
adc
jnp
orb
mov
and
mov
repnz
jg
test
jb
test
jbe
fwait
repnz
jge
cmp
sarb
mov
xor
pop
cmp
jecxz
xchg
xchg
and
mov
test
aaa
push
and
and
push
andl
mov
test
arpl
sub
cmp
mov
mov
push
out
call
in
xlat
sbb
pop
mov
pop
mov
and
fiadds
jnp
out
add
shl
mov
enter
int
xlat
mov
js
pop
sahf
jnp
xchg
fldenv
cmpsb
push
push
mov
bnd
pop
fsubrl
movsb
imul
push
inc
in
fwait
scas
sbb
mov
dec
push
pop
repnz
cmp
cwtl
incl
sbb
push
cld
xor
sub
add
push
mov
in
jne
cmpsl
gs
lret
push
insb
scas
cs
jecxz
lretw
and
sbb
push
xchg
in
sbb
xor
cmpsl
out
int3
roll
mov
sub
and
cwtl
insl
jns
xor
mov
xchg
or
fsubl
mov
pushf
fucomip
mov
or
aaa
int
fadds
mov
test
dec
jecxz
pushf
lods
xrstor
pushf
jge
aam
lea
popa
scas
dec
cmp
cmpsl
jnp
dec
sahf
pop
jmp
int3
mov
cmpl
ljmp
int
in
or
xor
and
cmp
xchg
dec
pop
or
xchg
in
inc
pop
xor
lcall
sub
cmp
mov
lret
fnstcw
and
in
jmp
xchg
pushf
mov
incb
loope
xchg
popa
mov
pop
les
or
test
sub
mov
xchg
jmp
into
pop
inc
ror
xor
repz
movb
sbb
inc
cli
and
sti
xor
cmp
lahf
push
jns
push
xor
movsb
in
insb
lods
xor
push
gs
mov
sbb
jp
sub
lahf
jae
add
es
das
xchg
mov
mov
aad
adcl
push
pop
jmp
adc
adc
add
mov
pop
sbb
mov
sbb
popf
addr16
and
jae
lods
into
sbb
enter
repz
out
lock
xchg
mov
mov
inc
inc
shl
cwtl
mov
push
scas
xchg
sub
mov
std
jnp
mov
push
sahf
xchg
and
adc
jle
aaa
cmpsb
cli
sub
mov
mov
test
add
ret
cli
fistpll
insl
mov
flds
ja
dec
add
fildl
cmpsb
mov
ret
xchg
mov
into
cld
lahf
xchg
mov
loop
mov
flds
push
xor
lret
and
cmp
fld
mov
lcall
jl
repz
pop
cmpsb
fimuls
movsl
cli
lds
dec
jnp
test
cmp
and
xchg
fnstenv
les
cltd
jmp
lods
and
scas
inc
popf
push
pop
test
and
in
push
scas
mov
insl
andl
sub
mov
jo
add
lock
int
int
inc
je
cmp
aaa
xchg
adc
push
mov
popa
ss
push
xchg
stos
subl
adc
outsb
or
stc
inc
mov
mov
and
lods
xor
ret
or
lods
or
testb
xchg
daa
repnz
lea
and
mov
pop
scas
movsb
das
cmpsl
mov
mov
scas
aas
inc
in
cld
adc
push
inc
sbb
mov
lods
xor
cltd
adc
cld
mov
daa
push
or
xchg
jo
mov
aas
push
xchg
addr16
fldenv
jle
sbb
nop
xchg
imul
iret
das
and
insl
and
mov
mov
jnp
mov
and
jmp
leave
sbb
sub
mov
pop
inc
mov
and
jae
hlt
xchg
or
lods
sti
pop
xchg
lcall
mov
popa
pop
xchg
inc
mov
sbb
ficomps
mov
adc
mov
out
sub
lcall
xor
shrl
outsb
out
int
cli
sahf
in
add
testb
fnstsw
loopne
int3
lock
stos
xor
insb
icebp
jo
test
mov
cmpsb
imul
daa
sbb
mov
out
mov
pop
add
sub
fidivs
jecxz
cmpb
jo
pop
or
pop
imul
mulb
ret
in
pop
fbstp
pop
iret
adc
lret
mov
test
dec
daa
mov
fiaddl
sbb
dec
xchg
imul
mov
lods
xor
mov
push
mov
ja
cmpsb
jge
lock
mov
sarl
xlat
mov
xchg
movsb
cmp
pop
shrl
ss
nop
jo
xchg
movsb
das
fiadds
arpl
gs
and
pop
mov
mov
mov
mov
mov
mov
jecxz
sub
sti
flds
dec
dec
sbb
cmp
mov
mov
push
mov
sbb
jb
xchg
mov
cmp
xchg
or
cmp
out
jecxz
lret
pop
fildll
push
pop
pushf
subl
out
mov
mov
mov
push
sarl
mov
in
mov
fnstenv
jle
imul
push
cmp
aas
mov
jnp
sbb
mov
mov
stos
dec
sti
inc
lock
cmpsb
mov
aas
cmp
push
gs
push
fnstsw
int3
mov
sbb
rep
push
test
in
addb
push
xchg
xchg
lea
push
mov
fistl
cmp
out
mov
mov
mov
mov
jae
mov
cwtl
mov
dec
addr16
dec
in
scas
in
fcmovu
jmp
xchg
in
in
call
jp
xchg
xor
add
sbb
popa
outsl
pop
test
jne
shlb
nop
out
cmp
and
push
push
sub
in
movsb
in
mov
mov
mov
mov
mov
out
stc
jne
ficoms
pop
hlt
mov
xor
repnz
sbb
sahf
fisubrs
cmp
pop
test
sbb
fld
fsub
loopne
mov
mov
ret
jl
out
or
icebp
or
shlb
push
pop
push
inc
pop
xor
loopne
and
hlt
test
insl
inc
outsl
jns
bound
xchg
stc
xor
notb
insl
adc
mov
xchg
inc
movsl
das
pop
divl
add
mov
xchg
sarl
fcompl
cltd
les
rolb
pop
add
stc
jb
add
xchg
in
cwtl
push
fdivrl
in
mov
pushf
push
jns
scas
dec
mov
fs
loopne
pop
lcall
push
scas
lods
out
pop
test
push
mov
xchg
int3
arpl
cwtl
fucomp
loope
stos
mov
dec
std
popf
cmp
std
lret
clc
fstps
shrb
cmp
and
and
xchg
xchg
pop
insb
int
sbb
jge
popf
rolb
lcall
lods
popf
ljmp
pop
mov
add
add
xchg
push
sahf
and
adc
sti
lock
jno
xchg
sub
or
popa
pop
in
and
ss
out
pop
mov
and
add
sub
xor
cmpsb
mov
pop
and
arpl
add
mov
movd
jmp
scas
push
bound
cwtl
cmp
shlb
cmp
pop
xchg
repz
out
movsl
insb
jecxz
and
mull
or
movb
enter
call
sub
insl
stc
fldcw
fnsave
push
jmp
cmpsb
inc
jbe
bound
mov
into
sbb
out
sahf
scas
push
stos
inc
jns
add
xchg
jne
stc
das
inc
sub
lock
and
scas
push
pop
mov
dec
movsb
popa
ret
xor
xchg
mov
mov
xchg
scas
dec
fnstcw
gs
mov
pop
lods
pushl
sbb
mov
movsb
xor
mov
out
addr16
mov
daa
rcl
xchg
push
orl
mov
mov
push
push
rcr
popf
mov
rorl
xorl
popf
and
dec
sbb
jno
mov
sub
dec
sbb
pop
nop
out
mov
adc
push
xor
xor
jmp
fnsave
ret
inc
popf
data16
jmp
mov
mov
mov
mov
cmpsl
int3
into
push
jp
into
outsl
add
mov
inc
lret
fldenv
outsl
push
jbe
out
push
mov
jns
push
bound
shll
ljmp
inc
jns
aad
fmulp
xchg
es
ffreep
xor
cmp
fldcw
mov
xchg
mov
sahf
shlb
andb
and
fdivrl
lea
sti
mov
mov
stc
subb
sahf
and
insl
xchg
addr16
iret
xchg
mov
cwtl
adc
fldt
xor
adc
push
in
mov
das
inc
push
ror
test
popa
jg
pop
sub
mov
push
adc
xchg
dec
jp
push
push
das
jns
lcall
jb
cmpl
cs
loop
mov
rol
xchg
cltd
rcll
rorl
pop
sbb
fucomp
cmp
inc
sub
sub
push
stos
inc
rolb
iret
mov
sbb
mov
mov
dec
and
testb
shl
sub
ret
cmp
cli
iret
cmp
in
xchg
pop
mov
es
lds
add
out
and
adc
imul
jae
dec
lods
cmc
test
stos
push
sub
pop
pop
std
and
mov
lahf
xchg
in
push
jo
stc
sahf
aaa
loope
in
lret
mov
xchg
cmpsb
or
inc
mov
lcall
jbe
inc
divb
pop
stos
std
adc
cs
movsb
mov
icebp
fdivrs
and
es
in
cmp
out
orl
lea
xor
pop
xor
fistpl
xchg
sbbl
addb
push
xchg
enter
dec
je
lret
adc
push
push
mov
pop
mov
flds
shrb
sbb
add
adc
xchg
push
int
or
mov
out
adc
cmp
in
and
dec
fucom
xchg
je
stos
insb
dec
sahf
out
adc
cmpsl
cmp
xor
fwait
rolb
sbb
xchg
adc
test
sbb
xchg
gs
out
pop
aad
lret
mov
out
pop
add
aam
dec
pop
sub
xchg
push
push
push
sub
lds
push
jmp
push
jp
push
cmpsl
mov
movsb
outsl
fidivl
and
cs
lods
outsb
mov
test
xchg
ror
cld
mov
mov
xlat
pop
movsb
test
ja
xchg
bound
out
mov
pop
jg
push
test
movsb
aaa
pop
in
fiaddl
rolb
sbb
out
pop
and
lcall
mov
lea
scas
push
push
lock
int3
mov
push
enter
mov
mov
sbb
hlt
rcrl
hlt
mov
mov
inc
int
mov
out
add
mov
sub
inc
pop
cmp
in
or
lahf
popa
fadd
add
pop
push
mov
int
inc
test
push
aam
sub
xor
addr16
dec
shl
test
add
and
pusha
fistps
lock
stc
inc
jbe
inc
daa
fcmovne
lea
and
xchg
jnp
test
jns
push
dec
add
inc
mov
out
xchg
inc
mov
lea
pop
and
fldl
jge
arpl
arpl
add
loop
jmp
inc
sub
xchg
ret
jecxz
mov
inc
and
pmulhuw
imul
popa
loopne
movsb
cmp
andl
mov
mov
xor
push
faddl
outsl
cli
cmp
aad
sub
and
mov
fnstenv
js
cmp
jl
cmpsl
gs
mov
pop
mov
fcmovnu
cmp
cpuid
ljmp
xchg
mov
adc
cmp
loopne
xor
cmp
test
jp
js
jp
sti
test
inc
pop
popf
or
adc
cltd
adc
or
std
lea
mov
out
in
aaa
test
scas
dec
push
push
dec
movsl
and
test
rcll
sbb
or
cs
pop
lods
imul
push
aad
cwtl
jl
xchg
add
pop
outsl
into
add
lods
add
test
cli
ja
inc
lds
lock
loope
sbb
mov
movsb
test
xchg
adc
mov
ret
inc
inc
out
and
pop
mov
pop
arpl
sbb
dec
decb
lods
mov
sahf
dec
fdivrs
idivl
faddl
xchg
push
mov
adc
sub
sbb
adc
mov
out
das
inc
sub
aas
mov
xor
and
testl
sub
dec
inc
mov
stc
add
call
in
push
pop
xor
ja
adc
pop
or
push
stc
cli
jbe
ret
cmp
cmc
fidivl
xor
arpl
inc
mov
adc
iret
and
inc
inc
mov
xor
jp
push
aaa
aas
cs
test
dec
shlb
xlat
jno
addl
ret
inc
repz
cmp
out
mov
jb
cs
ss
cmp
push
jae
and
add
mov
fmulp
sbb
xor
push
mov
leave
and
test
flds
repnz
jbe
mov
aad
clc
inc
xchg
sbb
rcrl
lea
dec
addr16
cmp
scas
gs
cmpsl
push
incb
pop
scas
or
xchg
pop
mov
cwtl
pop
arpl
inc
mov
das
fcomps
shl
fs
mov
ljmp
pop
arpl
pop
scas
loope
orb
sbb
jns
es
mov
lods
push
cltd
lock
mov
cmp
es
sbb
sbb
cmp
dec
sahf
lahf
cmpsb
jge
or
iret
out
lret
call
xlat
popf
inc
adc
push
movsl
pop
fldenv
ret
xchg
xchg
xor
out
sbb
loop
out
out
stos
xchg
xchg
mov
dec
shlb
jnp
hlt
and
ficompl
push
lret
jnp
cli
jmp
sub
inc
push
xchg
test
addr16
push
inc
or
inc
mov
xor
add
inc
jl
mov
push
pop
and
dec
ret
xchg
cmpsb
je
cmpsb
xchg
dec
sub
fnstenv
fdivp
xchg
bound
sbb
add
loopne
pop
xor
xor
rsqrtps
xor
and
and
fiadds
dec
and
enter
scas
inc
dec
js
fcompl
and
test
dec
test
std
inc
push
pop
sbb
xchg
lcall
xor
in
jmp
outsl
outsb
sbb
xor
js
and
xor
mov
negl
xorl
test
mov
cwtl
and
xchg
or
rcl
jecxz
or
daa
imul
inc
xor
mov
int
push
add
and
lods
les
test
test
inc
pop
sbb
cmp
cmc
mov
test
lret
lahf
sub
add
mov
cmp
iret
fidivs
clc
and
popf
xor
add
mov
sbb
mov
mov
mov
and
push
mov
dec
notl
jecxz
mov
inc
or
jb
lea
mov
xor
pusha
lods
dec
out
cli
lahf
dec
test
dec
mov
repz
jge
addr16
xchg
xor
scas
pop
icebp
mov
pop
xchg
bsr
fld
dec
sub
movsl
lods
sbb
fsub
mov
mov
stos
dec
test
jb
mov
jecxz
inc
push
dec
and
mov
test
inc
cmp
push
in
xchg
sbb
dec
lahf
loop
dec
outsb
xchg
std
repz
mov
sbb
mov
or
daa
fbld
std
push
mov
pop
lret
cmpsb
fsubs
orb
test
mov
cmpl
push
dec
mov
in
mov
mov
jae
mov
inc
mov
mov
int
ljmp
test
or
mov
jg
pop
test
addr16
shll
fidivrs
dec
sbb
cs
in
mov
sarl
out
test
lcall
or
inc
sub
scas
jle
xchg
xor
push
mov
aaa
inc
pusha
cmpsl
fcoms
ret
add
push
mov
mov
aad
xchg
scas
ret
inc
pop
add
fdivrl
loop
int
push
int
imul
popf
fwait
add
dec
mov
in
xor
popa
in
mov
fwait
into
jmp
daa
cmpl
jo
and
mov
insl
out
in
mov
push
or
inc
jo
lds
in
negb
lds
movsl
cmpsl
test
mov
mov
or
pop
or
fs
repz
push
pop
cld
mov
imul
inc
mov
pusha
popf
push
inc
aaa
dec
push
std
mov
pop
out
and
fs
mov
test
mov
push
dec
ja
out
and
orb
addr16
mov
pop
sbb
loopne
inc
and
lds
inc
jae
pop
std
xchg
ja
jmp
mov
pop
xchg
xor
sahf
mov
xor
xor
fsubl
pop
cltd
clc
shrl
and
and
std
test
jp
inc
dec
sti
les
mov
imul
jbe
shr
pop
outsl
jmp
stos
and
mov
movsl
das
cs
and
shll
les
mov
pop
ficoms
jne
xchg
out
pop
dec
push
pushf
jge
je
add
jbe
mov
mov
addb
mov
jle
lods
pop
test
into
or
fidivs
repz
in
ljmp
sbb
mov
es
sahf
cmp
fisubrs
sub
lods
sbb
outsl
and
sub
movsb
add
pop
int
fs
idivl
inc
jns
fprem1
or
jp
cs
aam
sbb
inc
and
push
daa
cmp
test
imul
jp
out
push
insl
cmp
mov
jb
es
push
test
dec
shrb
push
fsubrl
hlt
outsb
mov
test
ffree
sub
out
inc
dec
adcl
sub
mov
flds
push
push
ret
cmc
les
fldcw
jge
jns
call
inc
inc
pop
cmp
test
aas
lods
out
push
cs
xor
cmp
cmpl
jecxz
mov
in
jge
pop
jp
and
jmp
jno
lods
scas
cvttps2pi
add
out
fstl
mov
std
fs
imul
mov
ficomps
xchg
insb
popa
jl
add
add
daa
fistl
jmp
mov
jmp
cmp
push
cmp
outsb
push
push
adc
movsl
in
int
mov
test
xchg
sbb
lock
sub
jne
sbb
out
lds
ds
xchg
out
dec
sub
movsb
std
nop
cmp
mov
mov
mov
std
add
xorl
stc
mov
int3
ds
fisttpl
gs
aaa
stc
fisttpl
jp
std
enter
stc
mov
jg
scas
xchg
stos
xchg
jl
xchg
ljmp
fdivrl
cmp
fstl
push
fcom
push
mov
mov
jne
adc
push
fcmovu
mov
fcmovu
out
in
mov
mov
shll
stos
ret
int
fnstenv
xchg
push
xor
mov
sub
push
stos
scas
out
test
in
subb
and
decb
cmp
aad
cmp
je
cmp
ss
inc
out
sbb
clc
push
ljmp
and
outsb
in
xchg
sub
out
stc
int
mov
neg
aam
lcall
mov
ret
fwait
out
and
xchg
sbb
and
cld
push
pop
xlat
push
stc
dec
aaa
ror
pop
and
in
mov
sub
loopne,pn
push
lret
xchg
jle
dec
arpl
xchg
out
test
cs
cld
lods
cwtl
mov
push
cld
int
incb
mov
ret
test
imul
dec
xor
clc
mov
sub
cmp
adc
mov
lcall
push
dec
sbb
inc
inc
mov
or
jne
lret
lds
gs
test
lcall
lods
pop
loope
inc
inc
xchg
jecxz
mov
pusha
shll
push
xchg
cmp
jns
or
sbb
adc
mov
xorb
scas
shld
mov
and
movsb
add
enter
mov
test
dec
shlb
dec
inc
sub
out
in
jno
xorb
mov
ret
and
loop
push
mov
lret
scas
sub
clc
xchg
pop
sbb
push
push
xchg
clc
xchg
int
std
jb
lahf
mov
sbb
incb
sbb
mov
das
dec
ss
cmpsb
cltd
test
flds
xchg
daa
outsl
lds
ss
loope
cmp
xchg
xor
cmpsl
fstps
mov
jge
movsb
push
add
sub
cwtl
dec
push
pop
pushf
adc
cmc
mov
mov
xchg
andl
dec
jmp
and
repz
mov
stc
mov
sbb
and
sbb
push
adc
dec
ss
mul
mov
jmp
lods
dec
pop
popa
jle
clc
push
pop
fld
sub
cs
cmp
cmp
sbb
lahf
fnstcw
call
push
in
xchg
push
popf
fldenv
call
outsb
cmp
repnz
fxch
mov
in
faddl
cmp
and
add
xor
cmp
jge
inc
ret
mov
mov
adc
fidivrl
mov
sbb
cmc
push
ss
jge
cmc
fcompl
push
mov
lock
sub
mov
mov
dec
push
dec
out
lock
cmpsb
jp
repz
lcall
out
aam
or
mov
icebp
jle
xor
jb
pop
lds
jl
pop
rorb
adc
or
roll
enter
pop
add
gs
adc
pop
daa
cmp
pop
aam
mov
adc
xchg
add
int3
inc
cmp
lods
test
push
scas
movsb
cltd
adc
ds
mov
test
hlt
or
scas
rcrl
fstpl
repz
outsb
pop
movsb
lahf
mov
or
adc
jns
or
arpl
out
loopne
in
dec
push
hlt
cmp
push
orl
mov
lods
mov
pop
mov
sbbb
icebp
mov
daa
or
scas
mov
sub
sti
ljmp
js
dec
ret
push
test
add
in
popf
int
shlb
adc
cmp
fldt
mov
lahf
fnstenv
mov
pop
int
jl
pop
pushf
nop
es
sbb
out
in
pop
aam
sbb
test
shrl
leave
in
fsubrl
mov
sub
int
add
fdiv
mov
fcoml
imul
dec
aad
push
pushf
inc
and
pop
push
jle
push
int
mov
dec
inc
pop
icebp
js
pusha
pop
pop
lods
les
or
mov
in
jns
mov
cmpsl
xor
mov
pop
aaa
test
mov
test
div
sbb
and
pop
jecxz
das
int3
mov
push
inc
imul
fsubl
pop
minps
loopne
mov
xchg
loope
out
cmp
cmp
out
fimull
pusha
sbb
test
lahf
mov
push
icebp
es
pop
imul
in
inc
lret
scas
xor
test
scas
pop
push
rcr
xchg
outsl
jns
adcl
pop
in
add
cmc
inc
aas
sub
fnstenv
rorl
pop
or
mov
and
sbb
pop
scas
lret
cmpsb
sbb
ljmp
mov
or
pop
std
flds
pop
pushf
int
test
pop
das
dec
test
clc
stos
push
scas
mov
mov
xor
push
aaa
jno
es
adc
mov
shll
mov
enter
pushf
xlat
pop
test
xor
imul
xchg
aaa
imull
dec
mov
mov
fwait
xlat
xor
ror
push
mulb
or
cld
mov
int
jecxz
mov
add
rcl
mov
or
mov
xor
test
out
scas
movsb
adc
sti
les
or
dec
mov
cs
xchg
insl
cmc
dec
and
fwait
enter
outsb
outsb
das
push
mov
add
push
push
scas
mov
pop
ficomps
jle
lock
or
cmpl
cmpsb
cmc
sub
jb
jp
fwait
loop
sub
jecxz
in
pop
fimull
xchg
aad
jp
mov
jnp
out
push
out
mov
inc
movsl
daa
icebp
les
hlt
xchg
repnz
popf
jns
andb
inc
sbb
imul
jbe
and
pop
fldenv
mov
fcmovnu
cmp
jb
imull
cmpsl
nop
pop
insb
mov
popa
pop
fnstenv
push
lods
xchg
rolb
pop
or
or
leave
adc
insl
jb
push
inc
std
int3
jne
jl
scas
fisttps
out
cwtl
jge
mov
sbb
pop
xchg
fcmovnu
mov
cli
inc
or
clc
add
add
inc
or
cli
fsubs
lahf
sbb
out
out
inc
sub
test
or
sub
dec
mov
push
inc
les
imul
pop
jae
cmp
mov
mov
sub
in
xor
repz
mov
notb
mov
add
mov
pop
adc
sub
push
dec
push
imul
pop
push
lods
repnz
data16
in
imul
mov
dec
xlat
scas
inc
push
mov
adc
cmp
jae
xchg
add
dec
pop
mov
jl
pop
andb
cmpl
sub
push
sub
pop
and
in
stc
lods
stc
test
mov
push
or
lods
loopne
cmp
xchg
add
in
stc
push
es
mov
xor
lods
mov
add
sbb
inc
or
jbe
mov
aam
add
cmp
mov
jle
sub
aad
mov
mov
lock
push
int
divb
in
inc
jmp
test
loope
inc
cltd
clc
xchg
scas
mov
xor
icebp
and
mov
int
dec
pop
test
xor
dec
xchg
and
inc
aaa
popl
jecxz
outsl
sbb
pop
push
and
mov
addr16
cs
sub
cmp
and
inc
sub
dec
int3
mov
push
inc
hlt
push
xor
cs
add
sub
dec
cld
stos
fs
roll
mov
and
jno
in
dec
mov
clc
lods
mov
and
adc
gs
fld
and
lea
push
test
hlt
dec
jne
xchg
fidivs
mov
add
fbld
push
clc
negb
jge
lods
or
jle
xor
xor
xchg
int
cmpsl
stc
pop
hlt
push
cmp
in
inc
lret
adc
mov
mov
in
push
test
aam
out
cli
ret
das
iret
push
sub
or
jge
adc
adc
mov
pop
add
loop
mov
cmc
cmp
cmp
fmull
mov
shrb
pushf
fildll
or
mov
push
mov
and
aad
push
clc
xor
imul
hlt
orl
mov
sarb
xor
mov
cmp
cltd
inc
scas
data16
inc
test
fsubrl
push
sbb
pop
outsl
jae
andb
scas
outsl
mov
mov
cmp
jp
and
sbb
lock
ficoms
popf
jge
xlat
pop
add
test
rcrl
test
cli
sbb
cli
popf
in
mov
leave
es
in
xchg
sub
mov
dec
lods
popf
lods
xchg
and
iret
dec
adc
stos
xor
pop
mov
adc
adc
andl
pop
hlt
mov
xchg
clc
mov
test
push
pop
mov
pop
and
cmp
imul
push
and
inc
les
cmp
repz
or
mov
std
jge
mov
loope
dec
dec
fstps
pop
sub
dec
cmpsb
mov
and
movsb
mov
fwait
inc
mov
pop
and
in
mov
push
mov
pop
add
mov
xchg
cld
lahf
pop
sub
push
xor
cmc
lock
int
cmpsb
sub
xor
cmp
sub
sbb
dec
jmp
jno
pop
pop
test
mov
orl
std
mov
flds
addr16
std
data16
daa
cmp
mov
int
mov
popf
adc
repnz
xchg
sub
xorps
in
scas
cmp
jg
test
iret
and
push
dec
notb
jo
inc
ret
out
cmpsb
pushf
push
testl
xchg
bnd
sbb
arpl
pop
in
lods
adc
mov
out
jg
test
mov
ja
js
mov
mov
test
adcl
inc
jne
sbb
fldenv
in
mov
movsb
scas
enter
inc
mov
mov
jb
pusha
mov
fs
or
dec
ficompl
cmp
mov
cmp
mov
adc
aas
cld
push
cmc
std
test
mov
mov
lods
jae
shll
fxch
jp
adc
inc
int
int3
pop
mov
cmp
shl
fisubs
xor
pop
pop
jns
fmuls
xchg
dec
jl
cmp
jmp
dec
sub
stos
xchg
out
ret
mov
lds
add
push
cmpsb
mov
insl
jno
inc
fwait
gs
mov
daa
les
rcrl
push
addr16
mov
mov
sbb
adc
mov
test
addb
test
xchg
lcall
push
fcompp
js
and
mov
mov
pop
jnp
adc
sub
xchg
xor
xchg
stos
int
push
mov
xor
insb
sbb
cwtl
xor
and
inc
xlat
inc
fisubrs
jle
sbb
pushf
test
mov
loop
int
je
sbb
idivb
stos
fsub
cmp
fldl
add
aad
mov
dec
or
mov
mov
jl
adc
mov
enter
movsb
push
test
rclb
sarb
jecxz
sub
aas
xlat
inc
xor
cmp
xchg
int
dec
jmp
jnp
addr16
mov
sbb
popf
and
cltd
mov
hlt
cmpsb
sbb
andb
sub
cmp
xchg
sub
call
pop
sbb
fbld
je
pushf
mov
mov
cmp
icebp
out
sbb
jno
adc
xor
sbb
sub
mov
cmc
out
pushf
cmpsl
repnz
mov
sub
out
clc
inc
movsl
push
inc
or
flds
rorl
push
dec
sbb
push
cltd
xchg
rcrb
les
scas
mov
add
pop
test
std
mov
into
cld
dec
int
sarl
ss
dec
js
add
addl
test
jp
jb
mov
aad
xchg
sub
mov
jbe
pop
inc
out
cld
cltd
test
dec
jne
movsb
fsubrl
push
popf
shl
call
jp
enter
dec
pushl
pop
cmp
mov
fdivrs
or
adc
fldln2
sahf
xchg
aaa
es
pop
sub
inc
sbb
mov
test
add
insb
jb
adc
addb
inc
pop
cmpsl
adc
dec
fldenv
add
xor
and
cld
dec
mov
std
push
std
fidivrs
sahf
mov
jae
and
es
cmpsb
stc
dec
dec
or
push
popf
popa
or
dec
loopne
sbb
and
or
jmp
xchg
inc
xchg
fbstp
push
shrb
inc
cmp
cmpb
int
xchg
out
rorl
jl
jb
in
js
xor
ss
push
cld
dec
pop
pop
cmp
sbb
outsb
jae
mov
out
lods
cmp
pop
inc
mov
mov
mov
fstl
jge
and
sbb
int
js
push
cmp
push
adc
xchg
mov
mov
inc
push
arpl
subl
popa
xchg
mov
adcl
and
mov
std
cmp
mov
aam
data16
pop
add
cwtl
rcll
sbb
inc
lods
xchg
or
int
out
int
loope,pt
mov
repnz
inc
sbb
push
ss
pushf
mov
add
push
inc
stos
movsl
xor
cld
push
or
subl
adc
scas
add
lods
mov
das
fiadds
jmp
dec
sbb
mov
jns
or
inc
imulb
jle
mov
repz
hlt
jmp
jg
imul
int3
jge
scas
push
leave
test
mov
movsl
fisttps
cltd
mov
push
fldcw
daa
mov
int3
andb
mov
xchg
lods
add
in
scas
pushf
imul
jns
fwait
popf
insl
lret
addr16
scas
jge
mov
cmp
addr16
inc
cmp
mov
incb
sbb
push
jns
sahf
popa
xchg
ficoms
aam
nop
aad
mov
sub
sarl
pop
in
imul
fsubrl
push
jg
lret
out
arpl
test
lcall
out
jno
jge
out
cmp
clc
mov
or
cltd
andb
adcl
pop
pop
mov
cs
out
and
inc
jg
sbb
scas
ret
subb
and
inc
jo
loopne
xchg
mov
jg
mov
sub
sub
cmpsb
mov
xor
xor
and
clc
dec
cmp
inc
pop
js
pop
cmp
mov
rclb
nop
push
xor
sbb
xchg
roll
lds
dec
scas
and
in
cld
jmp
inc
cmpsl
jmp
xchg
jp
push
or
xor
mov
mov
stc
mov
movsb
movsb
adc
sbb
shrl
lock
stos
push
pop
cmp
leave
xchg
cli
pop
cmpl
popa
pop
jns
test
cmp
into
fsubs
xor
fistps
pop
pop
mov
je
in
sub
stc
add
sub
mov
ja
sti
jno
insl
jecxz
out
dec
sbb
pop
lcall
popa
dec
dec
loop
sub
aad
inc
push
sti
sbb
dec
pushf
jecxz
pop
or
xor
cwtd
cmp
scas
ficoms
mov
mov
addr16
ficomps
sub
xchg
fstps
test
cmp
add
push
shrl
sbb
inc
push
das
inc
mov
mov
lcall
mov
xchg
inc
sbb
pop
out
mov
xchg
jae
mov
insb
ret
hlt
pop
push
sub
lds
fimull
jns
pop
add
hlt
in
mov
mov
repnz
push
xchg
push
pop
pop
bound
pushl
leave
outsb
in
xor
push
int
jp
adc
add
insb
cmpps
hlt
lret
or
mov
andl
inc
and
mov
jnp,pn
jae
loopne
sti
jp
popf
adc
push
mov
test
imull
xchg
sbbl
jmp
sbb
dec
addl
movsl
xchg
add
das
rcrb
jmp
mov
adc
outsb
fmulp
push
aam
mov
sub
mov
jmp
hlt
pop
lcall
stc
cs
xchg
add
inc
or
push
shlb
icebp
jge
jge
arpl
lock
iret
gs
xor
adc
sbb
sbb
loopne
out
incl
cwtl
into
es
aad
scas
aaa
fsubl
aam
outsl
add
adc
movsl
out
sbbb
mov
std
stc
lock
leave
cmpsl
cmc
jo
es
roll
popa
loop
test
mov
int3
mov
and
aas
int3
pop
push
test
mov
jl
mov
jp
push
int
packsswb
lods
daa
outsl
gs
notb
sub
mov
lods
sarl
lahf
inc
repz
jnp
fstps
rorb
mov
jp
sti
xor
es
bound
aad
mul
loope
daa
aam
adc
mov
movsb
mulb
insb
and
mov
pop
adc
jbe
push
jle
or
out
sti
leave
gs
sarb
addl
jno
shlb
push
jns
iret
sti
and
adc
test
test
mov
push
sbb
adc
push
inc
jnp
clc
fldenv
push
enter
mov
inc
or
in
subl
out
cmp
mov
xchg
ficoml
inc
ja
mov
xlat
shl
daa
xchg
fld
out
es
lret
cmp
les
mov
dec
test
adc
mov
xor
popf
test
mov
or
clc
cmpsb
pop
mov
inc
mov
pop
mov
jle
mov
jnp
fwait
mov
xchg
inc
cmp
pop
xchg
lahf
jne
and
dec
push
push
lock
mov
jmp
inc
out
sub
or
push
mov
lods
or
mov
mov
lahf
xor
shlb
std
adc
push
scas
jns
xchg
inc
push
mov
call
insl
loope
pop
fcompp
or
adc
aaa
inc
cmc
jp
into
cmc
mov
xchg
push
aam
jns
int3
mov
jbe
sbb
pop
mov
lock
push
sbb
popf
adc
xchg
jbe
mov
pop
mov
xchg
mov
xchg
mov
lea
gs
inc
pop
sahf
lods
lea
jp
fyl2xp1
repnz
lods
jle
addl
loope
fwait
dec
inc
iret
mov
cmpsl
or
adc
sbb
daa
push
gs
xlat
outsb
xchg
push
iret
sbb
shll
sbb
stos
in
out
aad
xor
insb
mov
lcall
lea
cli
int
fildl
xchg
push
inc
or
scas
loopne
xchg
std
iret
imul
jge
aad
mov
scas
cmp
dec
pop
xchg
mov
jae
scas
out
pop
xchg
jg
fadd
andl
sbb
lcall
movsl
push
enter
mov
test
pop
into
push
ja
sbbb
jl
loop
push
lods
mov
mov
popf
push
dec
add
push
mov
mov
cmp
fmuls
pop
mov
stos
add
pop
jnp
rclb
mov
xor
pop
fstps
jbe
loop
lds
cmp
les
das
loopne
push
add
sbb
outsb
inc
lcall
mov
mov
adc
and
das
cmpsb
rcl
inc
mov
add
lcall
popf
or
call
pop
mov
inc
pop
hlt
inc
popf
cmpsb
in
mov
jmp
xchg
lcall
mov
ss
sbb
mov
sti
and
xchg
lds
mov
movsb
popf
jae
test
fdivrl
inc
mov
ljmp
decb
jb
pavgb
ss
leave
movsb
iret
pusha
push
mov
outsb
mov
ljmp
adc
add
dec
out
add
dec
and
in
int
icebp
push
fimull
fwait
add
cmp
push
lods
or
jle
fs
inc
and
mov
insb
add
jg
mov
mov
enter
adcb
lods
into
xchg
sbb
roll
dec
inc
lcall
fildl
jge
xor
mov
cmpsb
push
mov
movb
mov
repz
fdivrl
mov
or
aas
addr16
filds
shlb
in
pop
hlt
and
arpl
outsl
inc
test
push
ja
mov
xchg
fs
jge
sbb
jae
mov
movsl
mov
add
add
jnp
mov
xchg
fucomp
jb
movsl
loope
pop
mov
inc
jae
jmp
lock
imul
pop
xor
aad
daa
add
bound
enter
jle
aaa
or
and
and
les
test
imul
andl
cli
in
xor
mov
shll
movsl
ficoms
ror
dec
adc
push
mov
int
pop
mov
mov
shlb
stos
inc
movsl
into
jl
xchg
pop
stc
in
out
dec
sbb
adc
jge
mov
rcrl
jle
pop
mov
inc
das
lret
mov
cltd
mov
inc
mov
mov
sti
scas
mov
and
pop
sahf
andl
rol
mov
mov
sbb
mov
les
cld
cmp
push
inc
push
pop
pop
xor
stos
xchg
cld
inc
xchg
insl
push
mov
xchg
call
lods
sti
dec
push
iret
add
jmp
adc
movsb
mov
popf
dec
data16
lods
push
lods
mov
xor
add
bound
xchg
pop
lods
cmc
test
scas
xchg
mov
push
jbe
xchg
pushf
inc
test
sbb
in
or
lahf
cli
test
mov
inc
sub
in
inc
in
inc
popa
sahf
cmpsb
test
cmp
lret
jae
adc
add
inc
xchg
cli
push
ret
xchg
lea
pop
xor
cmp
jl
repnz
fsubrl
sub
mov
xor
or
mov
jno
cmp
repnz
lods
test
lds
cmp
and
push
inc
lea
jne
push
adc
ja
sub
icebp
mov
pop
pop
or
scas
fwait
jecxz
or
dec
popf
mov
test
ljmp
fcompl
add
push
xchg
push
pop
mov
nop
sahf
and
dec
cmpb
jl
repz
cwtl
fstpt
cwtl
movsb
xchg
aas
mov
dec
jg
sub
fmull
rcrl
mov
adc
xchg
pop
fsubrl
lds
mov
jb
lock
sbb
ja
pop
stc
xor
fidivs
dec
repz
jae
jns
or
push
mov
mov
mov
push
shll
ja
movsb
ds
mov
stos
sbb
mov
ret
in
andl
lahf
inc
dec
jge
mov
cmp
cli
dec
cmpsl
mov
cld
cmp
jle
lock
mov
mov
mov
fnstcw
sbbl
cmp
ret
inc
fildll
xchg
and
hlt
popf
or
jge
cmpsb
loop
cmp
sbb
filds
stos
lods
pop
dec
pop
dec
sbb
pop
or
subl
mov
incl
inc
mov
js
or
sbbb
subl
cmpsl
leave
jmp
mov
stos
dec
sbbl
out
jp
mov
cli
push
xorb
gs
out
fwait
push
mov
mov
ficomps
lahf
add
push
aaa
outsb
mov
stos
test
fstpl
jl
xchg
shll
ds
lret
and
cmpsb
addb
add
movsb
aaa
mov
and
es
lods
scas
adc
pop
data16
xor
les
arpl
std
les
xor
xor
in
dec
cmp
jns
pushf
xor
or
sbb
movsb
in
jae
inc
test
xchg
ffree
hlt
lods
jl
dec
dec
stc
xchg
xor
adc
je
sub
pusha
push
fdivrs
fsubl
xchg
fwait
loopne
mov
sub
or
dec
sbb
scas
repz
ljmp
cmp
pusha
adc
inc
icebp
inc
cmp
outsb
push
mov
add
xchg
sbb
aad
inc
xchg
and
mov
or
ljmp
xchg
sbb
je
sbb
mov
mov
xor
test
pop
lock
sbb
test
setb
pop
lods
imul
sti
inc
and
dec
sbb
mov
mov
int3
stc
sub
jp
mov
lds
popf
pop
pop
ret
cld
test
mov
adc
lods
and
ret
cmpsl
mov
in
push
jne
test
push
es
leave
in
lea
adc
push
jecxz
or
ds
bound
leave
out
arpl
movsl
pop
in
paddq
lock
int3
sbb
cmpsb
cmp
in
fdiv
mov
lcall
int3
push
push
inc
xchg
pop
xchg
push
or
pop
aad
add
aam
cmp
imul
mov
xchg
sbb
les
int
jae
data16
sbb
xchg
sbb
mov
ret
cmc
xor
sbb
sahf
sbb
fdivrp
icebp
mov
outsl
aam
loope
push
add
mov
push
movsb
cmp
int
cmp
cmp
js
or
test
cli
sbb
stc
ret
scas
test
rorb
or
out
pop
pop
mov
sbb
mov
stos
or
dec
je
mov
subl
ret
fldenv
data16
gs
push
mov
mov
push
mov
mov
test
inc
dec
lahf
out
cmp
aad
dec
adc
pushf
test
dec
movl
push
lods
sub
mov
inc
adc
sbb
dec
ljmp
mov
scas
mov
push
pop
pop
outsb
into
push
test
jl
fistps
ja
sbb
pop
cld
repz
stos
test
mov
and
test
scas
lods
lods
iret
fists
jmp
decb
sahf
cs
cmp
push
or
sbb
pop
rep
add
mov
scas
sti
pop
outsl
sub
jle
jae
and
pushf
mov
xchg
mov
jno
icebp
test
rorl
sbb
lret
fsubr
mov
mov
sub
rcl
icebp
fsqrt
daa
pushf
int
xchg
test
ds
scas
das
outsb
cmp
inc
std
mov
scas
loope
mov
pop
xor
sbb
cmpsb
out
jae
lods
test
mov
andl
shll
xor
xlat
rorl
mov
sarl
push
mov
pop
iret
sbb
sbb
pop
scas
cmp
sub
sbbl
xor
sarl
lahf
test
jle
cmp
push
mov
fnstenv
addr16
mov
mov
in
dec
jmp
fcomip
xchg
inc
jb
js
xchg
jne
adc
lds
loop
mov
sbb
lods
or
jb
inc
add
mov
cwtl
fcomp
in
cmpsl
stos
int
cltd
mov
sbb
popa
ret
fldcw
out
jmp
std
cmpsl
fs
lcall
push
mov
xchg
push
sub
lock
rclb
mov
mov
inc
test
out
push
lcall
dec
mov
cmp
adc
xchg
pop
lahf
pop
pop
aaa
push
sub
loopne
imul
cmp
ds
insl
test
pushw
push
aaa
xchg
fnstenv
shr
sahf
pop
in
mov
sbb
xchg
es
pushf
inc
cld
xor
mov
jbe
and
test
data16
sbb
in
xlat
in
pushw
ljmp
sbb
into
mov
lret
push
test
mov
or
cmp
xlat
lods
pushf
cmp
in
call
or
icebp
notb
sbb
scas
flds
sahf
xor
enter
or
out
fwait
clc
loopne
cwtl
jp
push
test
icebp
jo
loop
test
cmc
and
jae
and
fsubrl
and
jb
cmpb
sbb
push
rcrl
push
repz
push
in
out
mov
xchg
fs
cmpsl
lretw
rorb
or
ss
cli
rcr
xlat
lods
push
stc
mov
mov
cs
loope
lea
stos
icebp
and
fisubl
inc
arpl
jle
adc
data16
inc
mov
int3
xchg
inc
inc
xchg
fdiv
test
sbb
jb
repnz
repz
int
jecxz
add
jb
adc
es
mov
movsb
sub
mov
int
xor
mov
pop
jb
push
cmpsl
add
pop
nop
out
cmp
sub
inc
xchg
jecxz
mov
mov
scas
xchg
scas
out
mov
pop
xchg
sbb
adc
stos
sahf
out
not
shrl
int
mov
push
mov
fdivl
or
repz
mov
xchg
loope
cs
int
test
push
aas
in
es
xor
ljmp
jmp
pop
xchg
mov
push
mov
sti
cmp
ja
int3
les
mov
jne
enter
pushl
test
imul
divl
movsl
inc
and
int
loop
xor
addl
cmpb
in
push
xchg
jbe
xchg
xchg
push
add
lds
xchg
mov
fimull
loopne
fdivrl
cli
xchg
out
out
jmp
lds
sub
faddl
sbb
shrb
lods
push
xchg
and
stc
dec
pop
lret
ror
lds
rclb
addl
adc
mov
out
mov
and
cli
xor
scas
fldt
jo
lret
movsl
into
pop
movsb
fld
roll
repz
test
cli
hlt
push
stc
pop
adc
fwait
movsl
dec
andl
jl
out
iret
xchg
jle
test
fdivr
push
cltd
cmp
mov
jg
popa
mov
aam
dec
aad
sub
test
int
mov
lret
pop
sbb
jo
or
push
fnstcw
cmp
mov
mov
sub
sbb
cwtl
xor
out
mov
ljmp
jge
or
push
das
jp
stc
in
dec
in
jnp
add
jl
sub
fnstsw
idivl
je
mov
iret
mov
movsb
mov
mov
xchg
mov
mov
test
add
mov
mov
inc
jl
popa
aad
ljmp
inc
mov
clc
jmp
add
push
scas
or
in
scas
aad
sub
lds
sbb
mov
in
flds
cmp
add
mov
aas
movsl
and
in
pop
push
pop
or
fsts
mov
cmp
loope
mov
inc
fildl
or
movsb
push
jge
inc
fsts
negb
or
stos
insb
lods
neg
rcll
pop
movsb
xorl
subl
push
mov
es
sbb
std
orb
sub
das
les
xchg
arpl
xchg
xor
and
in
sbb
cmp
mov
adc
das
xorl
adc
sbb
clc
leave
dec
stos
mov
adc
sbb
dec
hlt
and
roll
faddl
sahf
aas
fmul
addr16
push
push
jmp
push
add
dec
fsubrl
in
sbb
jecxz
push
cld
inc
xor
scas
xor
lret
and
mov
jl
sbb
sbb
mov
pop
push
fsubs
dec
ss
push
pop
lds
addl
cmp
dec
sbb
mov
imulb
lret
sbb
arpl
lods
xchg
jno
and
adc
push
sahf
pop
test
shrl
add
cltd
into
into
inc
int
adc
jle
jecxz
sub
repz
or
in
or
and
icebp
dec
scas
imul
dec
call
mov
sbb
loope
cs
sbb
jb
mov
imul
pop
jne
loope
pop
aad
cmp
lahf
and
lock
mov
dec
and
aad
cltd
mov
cmp
arpl
inc
ffree
jbe
jl
idivl
loop
dec
mov
push
lea
jge
xchg
shl
mov
setp
fldenv
adc
sub
sub
push
push
std
mov
nop
mov
inc
cmp
pop
das
insl
and
xchg
scas
inc
sbb
adc
sub
xchg
jns
and
mov
xor
daa
popa
pop
iret
hlt
mov
hlt
cmp
std
mov
into
std
fmuls
mov
shlb
mov
cmpsb
test
scas
xchg
sub
shr
das
or
inc
lahf
insl
test
fsubp
mov
mov
inc
inc
fisubl
icebp
lcall
dec
movsl
xchg
mov
and
sbb
sub
int3
imul
and
stos
cwtl
xchg
mov
mov
mov
test
sbb
popa
out
addr16
jb
call
jge
idivb
daa
sbb
test
scas
jo
out
pushf
dec
lahf
xlat
unpckhps
mov
movsl
mov
jecxz
cmp
icebp
mov
mov
sti
xlat
aas
jecxz
insl
in
subl
push
sub
jg
mov
loopne
sahf
dec
sub
fsubp
and
cmp
mov
ja
xchg
fxch
sarl
xlat
pushf
sub
dec
nop
call
cmc
inc
cmp
or
dec
fildl
push
xchg
lahf
jg
push
in
jns
sbb
lahf
std
mov
scas
in
scas
stos
decl
cld
mov
gs
sub
jp
adc
mov
jmp
lahf
das
push
xchg
out
add
sbb
jle
test
addr16
test
test
in
jbe
and
ret
pop
loope
and
push
fdivl
std
fwait
lock
add
dec
mov
popf
mov
ret
vxorps
and
cmc
aam
mov
cs
mov
push
sub
xlat
cmp
call
movsb
adc
loop
sbb
mov
mov
repz
mov
cmovg
adcb
int3
and
popf
jmp
push
jle
push
test
mov
push
daa
fwait
imul
pusha
mov
cmc
or
pop
cld
sub
adc
inc
shl
shlb
and
pop
popf
scas
mov
mov
push
sbb
push
insl
mov
cmp
filds
xchg
cmpb
out
mov
in
jl
xchg
cmp
mov
and
in
and
scas
popf
bound
scas
sub
negb
inc
out
cmpsl
xlat
hlt
jmp
out
das
mov
fs
stos
or
ja
int3
arpl
popf
pop
js
into
cmp
sahf
fcoms
cmp
test
je
mov
jmp
mov
push
pusha
cmp
jns
xor
int3
mov
shlb
lods
fsubrl
or
push
xchg
cli
jns
jecxz
repz
mov
jge
inc
leave
mov
mov
gs
xchg
int3
mov
int
stos
sub
out
cs
fucomip
aad
test
sbb
xor
mov
adc
cmp
xor
xlat
jnp
mov
movsb
lods
sahf
movsl
pusha
das
cmpsb
test
mov
popa
and
mov
roll
jne
cmp
arpl
sbb
or
cmp
iret
fcomi
gs
call
push
rolb
lret
jnp
fs
xchg
movsb
pop
hlt
push
mov
cmp
les
movsb
add
arpl
and
mov
inc
cmp
add
cmp
aam
and
xchg
leave
add
mov
aam
repz
mov
pop
jg
adc
mov
cmp
push
mov
xchg
push
jecxz
sub
fimull
into
add
push
aaa
adcl
pop
push
idivl
mov
lret
das
mov
fimuls
mov
aad
xchg
loopne
int3
inc
test
into
jle
mov
sahf
fnstsw
loop
testb
test
push
mov
int3
push
or
gs
cli
inc
fsubrl
mov
bound
pop
sbb
std
inc
not
movsl
bound
out
push
fwait
xor
sbb
mov
inc
sbb
les
fidivrs
popf
lods
and
dec
out
pop
insb
add
push
insb
fnstcw
push
int
movsl
pop
and
fcomi
pop
lock
cmpsl
xchg
sbb
cmp
push
pop
sub
pop
pop
add
addl
pop
sbb
push
ss
or
cmp
in
fsts
or
push
sbb
cmp
sub
xor
pmulhuw
test
repz
sbb
stos
sub
std
test
stc
jecxz
mov
dec
sbb
xor
rorl
vpmulhw
scas
ljmp
mov
sub
movsb
push
fidivs
call
outsl
mov
xor
cmc
pop
iret
aas
inc
xchg
ja
sbb
jge
repnz
iret
sub
lods
pop
loopne
push
push
lds
cli
in
fwait
in
mov
sysenter
xchg
sub
mov
std
fldcw
es
push
fsubrl
ds
cmp
js
incb
shl
mov
xchg
adc
aam
scas
or
pop
fldenv
addr16
dec
and
pop
sbb
sarl
mov
and
add
ss
mov
dec
jge
ja
add
iret
stos
in
xabort
fiadds
sahf
fcompl
inc
int
xchg
popf
sbb
prefetch
or
inc
fisttps
lcall
pop
xlat
in
xchg
sub
cmp
mov
movsb
bound
in
xor
mov
sub
fdivrs
xchg
mov
rcrb
mov
mov
pop
lahf
lods
int3
leave
into
push
mov
mov
jge
fcmovne
test
sub
call
fcoms
and
fnstcw
xor
xor
out
icebp
nop
push
in
inc
aad
lcall
mov
push
fcoms
push
out
movsb
shlb
flds
add
inc
ja
xchg
push
negl
mov
inc
add
inc
cmp
gs
clc
fcmovu
in
inc
stc
mov
sbb
lods
and
mov
fldenv
mov
mov
std
repz
mov
lods
push
out
lock
mov
in
ss
add
cmp
fsubrp
push
sbb
mov
inc
lea
dec
jl
jae
mov
dec
adc
sbb
sbb
xchg
mov
and
sahf
dec
fnstsw
jle
rorb
les
fs
inc
scas
or
inc
hlt
jp
lods
cmp
cmp
mov
push
aam
mov
scas
movsb
cmp
and
je
ss
stos
mov
add
outsb
sbb
cli
xchg
jle
lock
pop
sahf
mov
and
shrb
scas
fnstenv
clc
mov
hlt
subl
in
repz
movsl
mov
aam
mov
nop
and
test
inc
loope
pop
inc
or
jmp
mov
push
xchg
les
or
iret
mov
push
push
aas
pop
adc
insl
rcl
push
and
in
leave
pop
cmpsb
jno
pop
jg
and
pusha
scas
mov
sahf
in
push
out
mov
xor
roll
mov
and
insb
imulb
ja
sub
xchg
loopne
es
xlat
mov
dec
jp
aad
ja
adc
shll
stc
loopne
mov
or
repnz
xchg
js
xchg
sbb
hlt
push
xor
lods
mov
je
fadd
subl
das
cmp
pop
xchg
jns
mov
xchg
int3
sub
sbb
lods
into
aas
inc
sub
cmovo
jecxz
sub
add
ficomps
scas
outsl
notl
dec
push
into
push
mov
push
iret
imul
xor
iret
inc
mov
sbb
cmp
ljmp
sbb
adc
test
dec
ret
xchg
pop
mov
xchg
rorb
andb
std
ljmp
push
mov
xor
sub
cli
jge
dec
or
mov
testb
mov
xchg
mov
lret
or
inc
negb
xchg
cmp
ficompl
jle
jnp
fistpl
hlt
inc
or
movsb
dec
ret
and
mov
push
pop
mov
lods
aas
int3
or
jecxz
lods
call
icebp
cmpsb
jg
mov
push
scas
push
test
std
repnz
inc
jmp
mov
add
fmull
sbb
mov
push
cmp
adc
je
add
inc
xchg
push
notb
pushw
mov
inc
adc
pop
fsubl
data16
out
push
mov
lods
push
mov
pushf
test
scas
mov
sbb
sub
pop
out
dec
cmp
xchg
or
int
pop
notl
mov
fucomp
inc
cmp
cmp
bound
mov
enter
xchg
cmpsl
xchg
jle
pop
dec
push
cmp
das
js
and
fs
cmpsb
push
mov
mov
xchg
repz
dec
sbb
aas
mov
lods
cmp
push
mov
stc
jecxz
addr16
in
in
test
fldcw
pop
push
test
lock
loopne
fcoms
addr16
pop
xchg
pop
dec
daa
in
sti
in
xchg
pop
xchg
jg
pop
cmc
dec
jmp
inc
xchg
scas
add
outsl
mov
mov
pop
push
sti
bnd
pop
cmp
xchg
cmp
ss
in
pop
cld
pop
adc
das
xchg
aam
cmpsb
cmp
xchg
and
or
in
aam
pop
jmp
test
mov
mov
pop
aaa
jbe
out
lahf
dec
mov
mov
jge
dec
hlt
fcoms
shrl
jecxz
mov
mov
sub
push
shlb
bound
xchg
jno
rolb
pop
pop
call
inc
popf
jnp
mov
aad
pusha
inc
sbb
faddl
mov
mov
cmp
imul
idivb
jb
xchg
mov
in
test
movsb
test
mov
xchg
xchg
movsl
scas
lret
jp
mov
cmp
mov
mov
int
leave
mov
cmp
mov
xorl
repz
fldenv
sub
fidivrl
jmp
xor
pop
adc
sbb
mov
push
ret
loope
pop
jmp
mov
adc
mov
out
fneni(8087
int
dec
jecxz
std
flds
test
xchg
mov
mov
xchg
jb
int
lret
aad
popa
pop
cmp
aas
int3
and
sub
push
jae
loopne
rorb
jno
xor
call
js
or
and
mov
imul
lret
push
fistps
and
out
in
sub
test
add
or
sub
clc
mov
push
in
add
jl
mov
lea
inc
mov
inc
mov
mov
idivb
cmp
mov
js
push
fmul
sub
lock
lods
and
dec
cmp
movb
pop
xchg
and
out
mov
cwtl
popf
inc
pop
scas
pusha
dec
insb
mov
fwait
and
add
test
adcl
aaa
pop
orb
cmpsl
in
movsl
movsb
js
fsubr
call
cld
mov
shrl
and
in
adc
xchg
insb
inc
test
jnp
out
shll
dec
jnp
js
mov
out
xchg
test
xchg
scas
cltd
xor
shlb
js
and
cltd
xlat
dec
movsb
adc
mov
test
fstps
add
loop
cltd
xchg
mov
sahf
loopne
out
fimull
and
mov
push
test
cmpsb
imul
rorb
in
ret
pusha
das
ret
jae
call
mov
sbb
mov
jnp
int
or
popa
pop
sahf
movsb
clc
rolb
mov
or
mov
xor
les
mov
or
push
push
orb
loope
jl
inc
std
mov
shrb
lods
imul
cmp
push
in
loop
aam
call
mov
scas
ret
lcall
xchg
jns
addr16
fidivrl
sub
shll
pop
lds
mov
aad
rclb
add
dec
mov
lods
jne
in
lock
fmull
popa
push
scas
xor
or
imulb
das
xchg
shlb
lods
mov
xchg
cmp
sub
sbb
std
fcos
dec
movsb
mov
mov
jbe
pop
xor
mov
sbb
sarb
ja
jne
xchg
add
jle
inc
loopne
lods
xchg
push
or
jmp
es
xchg
rcr
mov
xchg
clc
jecxz
xor
dec
imulb
mov
test
push
imul
inc
repz
lea
in
iret
or
mov
sarl
scas
xor
xorb
jge
repz
dec
jns
fwait
push
xor
idivl
push
enter
add
inc
adc
lret
divb
xchg
mov
test
xchg
lods
sub
icebp
push
mov
xchg
lods
test
stc
repnz
out
add
test
pop
nop
stc
adc
lods
lods
fwait
lret
insb
adc
inc
int
movsl
xor
cmc
pop
xchg
cmpsb
fsts
movsb
lods
xchg
dec
cwtl
stos
cmpsb
xor
ja
jb
loope
jns
xchg
add
fwait
je
scas
iret
lahf
xor
jnp
pop
add
loopne
scas
subl
dec
data16
mov
dec
mov
rclb
adc
andl
or
lods
jo
xchg
push
sbb
add
fcompp
aad
int3
dec
cmp
popa
lock
inc
sahf
cmp
sub
jb
cmp
fnstenv
xor
push
test
cmpsl
xor
test
lods
mov
pop
jle
loop
and
jno
pushf
add
or
test
sti
mov
les
rcr
or
out
stos
pop
and
pop
cmp
mov
pop
ds
sbb
and
outsb
subb
jb
cmp
aaa
xchg
cmc
stos
inc
inc
xchg
xorb
add
imul
jnp
xchg
nop
inc
imul
push
pop
icebp
xor
pop
mov
cmp
push
imul
pushf
and
inc
cltd
adc
sub
ja
mov
pop
fldcw
lcall
pusha
xor
mov
aas
aas
mov
lods
push
popw
xchg
inc
cmp
in
negb
aad
inc
arpl
fs
sub
and
push
inc
dec
cld
sahf
adc
pushf
fs
adc
insl
mov
in
xchg
in
out
rcl
int3
adc
jecxz
imul
rcr
dec
pop
pop
mov
fneni(8087
dec
in
and
xor
mov
mov
leave
es
shlb
adc
test
sub
fisubs
push
jge
dec
shlb
sub
pop
fmulp
xor
data16
inc
es
leave
lcall
add
test
in
cmpsl
fldt
cmpsb
out
sahf
sti
add
xchg
mov
jns
inc
lods
mov
push
mov
push
sub
jg
mov
mov
mov
cmpb
das
cmpsl
push
fistpll
adc
scas
cmpsb
test
adc
aas
int
and
idivl
cmc
jmp
sbb
jnp
cwtl
xchg
scas
mov
add
arpl
test
int3
aad
addr16
cmp
and
xchg
pop
mov
jno
cmp
mov
and
xor
aam
cmc
sub
clc
jne
jge
sbb
mov
xor
fldcw
out
mov
pop
push
ret
dec
es
stos
dec
gs
mov
xor
mov
xchg
aad
sahf
sahf
std
xor
jae
int
cmp
rclb
ja
add
xchg
pop
sub
outsb
sbb
sahf
movsb
mov
popa
std
scas
fsts
sub
and
ror
add
and
mov
test
xchg
fidivrs
je
jp
mov
popf
or
mov
push
insl
notb
fwait
push
jmp
push
shll
add
mov
scas
mov
in
dec
pop
and
and
xor
leave
mov
mov
repz
and
push
mov
cmc
mov
outsb
dec
pop
push
icebp
lret
out
push
mov
sahf
je
push
in
add
movsl
mov
mov
inc
sub
je
sub
das
sbb
std
add
pop
mov
jl
daa
roll
push
gs
push
ror
scas
xchg
pop
cmpl
xor
je
jecxz
mov
js
mov
cmp
mov
addr16
sbbl
rorl
enter
imul
pop
cmp
into
push
outsl
out
mov
in
in
adc
ret
sbb
mov
int
or
sub
aam
dec
scas
dec
int3
outsb
lcall
sub
out
shl
fdiv
test
sbb
and
fstps
fstpt
mov
xor
shrl
into
jno
orb
xchg
out
stc
mov
mov
cmp
fsub
push
gs
scas
test
mov
pop
cmp
mov
mov
loope
adc
lods
mov
loop
add
gs
lods
addr16
outsb
loop
mov
pop
sub
fiadds
ss
scas
inc
mov
arpl
lods
or
dec
adc
adc
ret
inc
arpl
ret
jb
fcompl
mov
jmp
cs
sti
addl
xchg
imul
fdivrs
mov
add
test
sub
add
inc
imul
dec
mov
mov
add
daa
repz
aaa
adcl
pusha
out
jg
cld
dec
xlat
pop
pop
cmp
inc
or
xor
pop
rcr
mov
dec
jl
aas
popl
or
sub
inc
pop
clc
mov
mov
cltd
xchg
fimull
test
mov
scas
cmp
inc
mov
shrb
cmp
jne
icebp
rcrb
lds
fsubrp
shlb
stos
cmp
in
fnsave
or
dec
movsl
inc
dec
push
sbb
sti
out
ds
fnstcw
mov
ljmp
sahf
xchg
xchg
iret
xor
sub
mov
mov
pop
mov
push
sahf
movsb
push
clc
jno
addr16
jl
test
sbb
mov
addr16
clc
push
or
pop
xchg
jno
fisttpll
lahf
sub
and
int
jle
dec
loop
jnp
das
inc
bound
repnz
subl
loope
mull
mov
pcmpeqb
push
lcall
call
aad
push
cmp
inc
pop
adc
add
out
fcoml
setle
mov
pop
inc
and
out
testb
popa
scas
fists
dec
repz
sbb
dec
or
nop
divl
sub
jae
cltd
inc
xor
imulb
ret
and
das
fwait
mov
nop
cmp
add
pop
data16
dec
inc
sub
dec
out
inc
mov
test
mov
sti
xor
std
jb
daa
es
inc
mov
and
jae
pop
sahf
cmpsl
popf
lods
mov
mov
cmpsb
popf
daa
and
inc
pop
or
sub
sbb
sbb
hlt
or
sbb
clc
outsb
cmc
repnz
pop
popf
jns
dec
movsb
pop
mov
mov
and
add
shll
sub
xlat
fisubrs
aad
in
jb
jno
push
mov
add
mov
dec
movsl
and
and
fdivrl
cmpsb
cmp
push
sti
and
fnsave
pop
mov
mov
push
dec
push
mov
inc
mov
loopne
mov
in
mov
mov
fidivl
mov
ret
inc
in
push
loope
fisttpll
xor
lods
xchg
cmpsb
adc
cmp
movb
jmp
stos
inc
pop
hlt
int3
test
imul
push
insl
popf
sbb
call
sahf
dec
insl
sub
lea
and
fstl
xchg
int3
pop
test
mov
mov
mov
adc
mov
les
pop
jecxz
enter
mov
push
jne
add
mov
mov
imul
fcomip
shrl
ficoms
fimuls
aad
loope
sarl
adc
adc
mov
lods
mov
test
push
sbb
das
mov
out
out
pop
insl
stos
jae
sub
cmpsl
sti
inc
pop
xor
push
out
lahf
pushf
sub
mov
adc
xchg
cmp
fcoms
add
or
or
in
inc
xchg
pop
push
inc
push
testl
push
test
je
fdivl
or
sub
aas
mov
scas
cli
jle
int
cmp
out
mov
int3
lcall
xchg
enter
jp
adc
cmc
leave
popa
mov
iret
lea
mov
and
ss
cmp
arpl
fsubrl
mov
sbb
sarb
inc
out
inc
les
sbbb
test
std
fld
enter
xchg
jno
xorl
aam
aam
sbb
xchg
fwait
sbb
or
cli
test
sbb
imul
scas
shll
xchg
in
inc
push
inc
lea
fstps
cmp
call
lcall
testb
popf
flds
inc
stos
xor
scas
inc
stc
inc
xchg
mov
ret
iret
imul
dec
popa
lods
cmpsl
jb
mov
pop
adc
cmp
adc
xor
jmp
sbb
sti
loop
out
out
push
arpl
int
imul
xor
push
sub
lock
addr16
pop
and
out
std
mov
mov
out
sbb
jp
cmpsb
jp
pushf
dec
push
inc
movsl
cltd
iret
or
sbb
idivb
arpl
out
cmp
mov
xor
and
pop
test
cmp
jp
mov
out
std
inc
sub
ret
in
repz
cmp
int
cmp
sub
jge
lahf
aaa
stc
out
xlat
ja
jmp
gs
mov
pop
and
or
neg
mov
jmp
es
cmc
inc
sbb
mov
xchg
and
add
imul
cwtl
sub
in
cwtl
cmc
cmpsb
int3
dec
cmpsb
cmp
jle
and
xor
sub
faddl
frstor
in
and
push
mov
jge
test
repz
cmpsb
test
addl
popf
test
jecxz
pop
cmc
out
cltd
int
arpl
out
aad
mov
pushf
sahf
jnp
cli
addr16
fnstenv
fisttpl
mov
push
jnp
cmp
and
nop
repz
pop
popf
cmc
inc
mov
pop
fxch
or
push
mov
pop
scas
mov
cld
divl
repz
addr16
popf
pop
iret
inc
popaw
lds
pop
sahf
loope
popf
mov
dec
mov
rcrl
mov
xchg
movsl
mov
and
sub
lret
add
int
push
cmp
lods
sub
int
mov
pop
outsl
clc
mov
daa
mov
pop
fwait
dec
and
fcoml
in
cltd
inc
cwtl
mov
jno
sub
jmp
mov
into
rclb
mov
jnp
je
in
cmpsb
push
movsl
cmc
pop
mov
mov
push
lods
icebp
outsl
mov
fs
lock
std
mov
mov
pop
aad
jbe
adcl
push
test
pop
test
pop
jp
je
jecxz
jbe
mov
aam
jae
imul
fsts
call
lods
sbb
sahf
out
int3
popf
imul
mov
and
lock
fidivrl
mov
aas
test
xchg
imul
push
test
shlb
xchg
cwtl
mov
ret
test
mov
daa
repnz
and
flds
jle
mov
xchg
push
xchg
std
jg
add
shrl
sbb
lret
lock
movsl
dec
jns
push
or
lods
mov
xchg
sar
roll
push
ror
movsb
icebp
sub
cmpsl
test
pop
mov
hlt
pushf
sbb
mov
sti
jg
push
cltd
lods
cmp
pop
les
jnp
ljmp
jo
mov
test
fbstp
jecxz
fidivrl
mov
xchg
jae
and
lret
push
js
xor
cmp
xor
dec
adc
clc
and
out
or
popa
ja
in
xor
push
pushf
les
outsb
aad
les
cmp
pop
xlat
add
fs
mov
dec
xchg
loopne
movsb
mov
bound
ficomps
sbb
out
shlb
les
shr
ficomps
movsl
fisttpll
pop
mov
mov
or
inc
mov
xor
sbb
int
add
inc
in
rep
stos
xlat
inc
int
push
push
je
fndisi(8087
aad
cmpsb
shl
rdpmc
in
lods
les
rolb
mov
mov
test
inc
lock
cmp
es
cli
lock
jno
cmp
xlat
push
dec
shll
mov
fcomp
bound
jo
mov
ljmp
push
xor
cwtl
and
inc
adc
aaa
popa
jb
or
sahf
fadds
stc
xor
xchg
std
fbld
test
mov
stos
fwait
xor
lret
repz
cmp
in
stc
data16
mov
fptan
inc
stos
mov
jge
dec
mov
jmp
sub
pop
pop
cmp
fwait
shll
xor
cmp
and
xor
or
test
idivb
sbbl
and
xchg
int
imull
xchg
mov
sub
insl
lds
inc
flds
mov
fst
jg
adcl
int3
mov
in
sbb
push
mov
mov
aad
mov
fsin
and
pusha
test
inc
sbb
sbb
fsts
or
jno
pop
pusha
mov
sub
fdivrp
divl
xchg
in
xchg
es
fsubrs
shlb
xchg
lahf
fcmovb
mov
je
jl
jle
lret
cmp
iret
mov
mov
test
push
mov
add
or
lods
push
sbb
and
add
jae
add
fmull
in
sti
leave
lahf
mov
out
or
mov
dec
shlb
and
mov
sbb
int
outsl
arpl
mov
sbb
push
dec
inc
cmpb
sbb
ja
push
adc
jbe
pop
pop
mov
inc
call
movsb
jge
pop
sbb
repnz
xchg
push
mov
cld
imul
movsb
jb
cmpsb
xor
sbb
jns
adc
xchg
or
or
int3
jb
popf
ljmp
xchg
hlt
mov
into
mov
cmp
mov
mov
fbld
stos
mov
or
jp
inc
aad
mov
dec
out
or
jo
fwait
mov
dec
cmpsb
addr16
mov
fstps
scas
pusha
in
lock
and
int
stc
cmp
iret
add
lahf
je
pop
subb
push
enter
pop
mov
jg
add
pop
cli
mov
xchg
inc
mov
lahf
inc
mov
dec
sbb
cld
mov
mov
inc
push
dec
dec
inc
mov
mov
xor
jmp
mov
into
ljmp
mov
cli
mov
pop
mov
sub
add
popf
xchg
mov
incl
out
test
adc
inc
lods
mov
push
repz
cmp
in
mov
and
xchg
mov
fcmovb
or
test
sbb
or
xchg
lret
aaa
or
dec
addl
fcoml
and
stos
cmp
popf
cmp
mov
mov
sub
fwait
in
xlat
dec
cs
movsl
es
inc
ret
cmp
lock
lods
stos
lahf
aam
mov
loop
imul
jae
mov
and
push
lahf
pop
mov
scas
cmpsl
aad
push
push
cmpsb
inc
repnz
push
int3
sahf
daa
movb
pushf
imulb
cmpsb
test
jp
iret
dec
mov
dec
negb
xchg
jb
jle
push
cltd
int
pushf
out
test
xor
cwtl
test
cmpsb
sbb
cmc
dec
mov
jns
xchg
lret
fsts
xor
stos
inc
test
dec
pop
ljmp
mov
inc
cmp
repnz
rolb
stc
lock
scas
mov
adc
cmpb
adc
out
xchg
jl
loope
cmpsl
dec
add
jge
insb
mov
lahf
stos
push
jle
mov
dec
xor
mov
xchg
jnp
xchg
and
ret
dec
movsb
outsl
test
insb
cmp
outsl
in
and
test
pop
mov
lods
std
add
mov
fcompl
arpl
scas
clc
mov
and
sbb
push
dec
cmp
sbb
test
loop
test
pushl
mov
int3
mov
scas
inc
pushf
dec
rol
mov
scas
cmpsl
mov
mov
pushf
std
xor
dec
mov
ror
in
sbb
mov
out
popa
cld
cli
test
fstps
pop
xchg
jmp
mov
xchg
mov
es
pop
xchg
out
out
mov
stos
popf
test
jno
dec
mov
and
pmulhw
sti
aad
push
dec
aad
ja
inc
movsl
cmp
xor
mov
cld
jge
adc
addr16
pop
sbb
in
push
loope
ret
mov
pop
aam
xor
push
jecxz
adc
xchg
mov
arpl
sbb
push
jp
out
subb
movsb
jnp
push
cli
mov
lea
sub
add
fisubrl
lea
cld
pushf
inc
dec
in
fucom
cmp
outsb
subb
popa
ficoms
add
jb
push
inc
mov
fsubl
pop
and
xchg
movsb
xor
ja
add
inc
xor
daa
mov
dec
loopne
sti
jl
enter
xorl
sub
push
test
roll
in
pop
inc
mov
movsl
adcb
xchg
clc
scas
int3
stos
ret
cli
mov
inc
test
outsl
fld
sbb
or
pop
bound
adc
test
test
inc
mov
sub
test
add
add
dec
mov
xchg
scas
push
call
lea
push
mov
jnp
hlt
fisubrs
fldt
jle
sti
push
push
js
and
and
data16
pop
subl
cmpsb
mov
lcall
inc
mov
adc
mov
lods
adc
dec
sti
mov
sbb
inc
pop
lock
out
lods
ss
sbb
dec
sub
inc
mov
mov
mov
jg
mov
dec
addr16
pop
mov
sbb
cmc
mov
sub
or
push
inc
fnstenv
in
in
loope
push
stc
mov
fists
lret
mov
bnd
push
divb
adc
ret
xchg
pop
xchg
inc
es
push
shrb
jmp
mov
testb
inc
sti
xchg
jb
mov
sub
inc
hlt
sbb
xchg
and
test
xlat
adc
xchg
mov
pop
dec
dec
cmp
dec
lret
mov
xchg
xchg
xlat
fmul
test
lret
repnz
outsl
out
les
push
add
add
sub
mov
and
mov
sahf
jmp
adc
popf
fsubrs
sbb
cmp
fnstcw
dec
movsl
ljmp
push
outsl
add
mov
jne
inc
dec
js
gs
jmp
test
fs
movsl
pop
mov
popa
mov
fnstcw
lret
sbb
movsl
aas
stos
push
in
sub
data16
push
and
add
jae
lret
mov
xchg
mov
mov
outsl
out
xlat
das
push
lret
push
jno
lret
dec
addr16
cmp
and
pop
adc
ljmp
jnp
mov
test
js
mov
jne
push
jnp
outsl
push
mov
adc
jmp
stos
add
pop
ds
addr16
push
pop
jb
arpl
aam
mov
pop
pop
lods
scas
sbb
sbb
and
dec
cmp
pop
xchg
in
int
adc
sbb
sub
fidivrs
je
xlat
movsl
cmp
fnstenv
cmc
test
pop
sub
push
enter
aad
popa
mov
fistl
loop
xchg
adc
frndint
sbb
popa
and
mov
cmc
movsb
mov
and
add
test
dec
cli
dec
lods
cli
cmc
bound
cmp
scas
xchg
lret
repz
add
or
les
sti
add
loopne
dec
rcll
xor
repnz
cmc
shl
movsb
push
pop
js
pop
mov
test
sub
inc
xchg
int
add
ds
in
ficomps
hlt
mov
and
rorl
cmp
data16
movsb
cmc
mov
fcomps
test
cmpb
add
push
test
cmp
jmp
aas
mov
mov
xchg
lods
clc
jmp
sbb
call
inc
leave
sub
lds
addr16
jp
cs
or
add
dec
mov
add
outsb
dec
bound
add
sub
lods
xchg
mov
xchg
inc
jp
pop
sub
jl
sti
rorb
mov
ljmp
scas
movsl
cmpsb
mov
or
add
shl
cmp
xor
aaa
pushf
test
dec
mov
popa
inc
push
cmp
push
mov
dec
test
push
mov
shl
mov
out
cmpsl
jge
mulb
in
jae
cmp
lods
and
push
jge
adc
jle
and
out
mov
lret
xlat
in
jl
push
mov
sbb
or
icebp
cmpsb
inc
push
jg
ja
movsb
jle
lods
mov
pop
cmp
movsb
int3
push
push
stos
jb
or
adc
adc
pop
int
push
mov
jg
loop
mov
mov
call
addr16
lcall
pusha
inc
popf
out
jp
cmpsb
fistps
out
or
rcll
mov
push
lcall
inc
div
fisubrl
roll
add
mov
fdivp
jae
sbb
xor
movsl
into
cmp
mov
cs
fisttpl
in
cmp
xchg
shrl
test
andb
scas
fistl
mov
test
mov
sbb
cmp
inc
pushf
mov
scas
roll
test
push
xchg
mov
mov
cltd
sbb
pop
mov
enter
jge
hlt
rep
das
das
into
lds
jae
imul
inc
imul
mov
ss
movsb
mov
test
cs
mov
insb
mov
xchg
xor
xchg
jb
or
aas
xor
test
jge
push
scas
jnp
das
jae
push
push
add
sti
imul
out
cmp
pop
fldcw
sub
xchg
sub
out
in
leave
nop
cmpsb
scas
in
xor
ret
aas
push
mov
and
and
es
clc
ss
mov
jne
dec
mov
adc
adc
pop
enter
shrl
mov
mov
insl
mov
mov
xchg
mov
iret
fbld
mov
pop
cmp
adc
lret
xchg
addb
dec
in
repnz
sbb
or
add
dec
andb
inc
loop
subl
jnp
jnp
fcomp
add
mov
fiadds
jmp
andl
dec
mov
jb
mov
setge
lock
pop
in
into
rolb
je
scas
pop
jb
jle
inc
adc
xchg
in
movsb
insb
adc
jbe
cmpsl
mov
call
in
lock
stos
es
stc
and
mov
xor
push
xchg
push
imul
and
mov
sbb
out
mov
xor
add
xchg
testb
and
gs
push
xchg
fdivr
cmpsb
lock
mov
mov
jns
data16
hlt
xchg
mov
cltd
mov
mov
inc
test
stc
push
dec
int
lods
jne
mov
fiaddl
sbb
inc
lret
mov
mov
sbb
lds
and
enter
mov
mov
ljmp
out
pop
call
sbb
mov
xor
mov
mov
pop
imull
adc
insb
or
fnsave
cmp
pop
out
fstps
popf
mov
sbb
mov
out
jg
jl
push
iret
and
out
pushf
outsb
dec
into
add
popf
dec
mov
mov
mov
lock
jno
fistpl
xchg
pop
sbb
and
xor
inc
lods
jnp
scas
rcr
mov
xchg
lock
scas
data16
jbe
in
mov
jne
test
mov
stos
add
imul
ss
je
pop
cmp
test
push
fdivrl
in
movsb
push
mov
int
dec
or
xchg
sbb
push
pop
xor
xor
add
aam
add
aad
movsb
sahf
test
xor
mov
stos
lock
jmp
xchg
shr
fsubl
xchg
mov
movsb
movsb
push
in
inc
ljmp
pop
leave
nop
adc
pop
ficomps
data16
cmpsb
gs
ljmp
mov
push
or
jae
cld
repz
test
push
notl
repz
mov
loop
cltd
lret
pop
and
rep
adcb
cmpsb
test
ret
pop
subl
mov
movsl
mov
outsb
out
xlat
sub
fwait
sub
movsl
xchg
sbb
add
adc
xchg
mov
roll
add
rcrb
std
out
imul
push
mov
test
xor
arpl
mov
out
outsl
loop
inc
fwait
pop
inc
push
pop
rcll
adc
aas
push
cmpsl
sti
inc
outsb
cld
imul
dec
scas
in
sub
mov
icebp
cmp
ja
ficomps
jp
in
out
fiadds
lret
fs
ret
dec
xlat
enter
fs
dec
cmp
test
cmc
outsb
mov
pop
cwtl
push
adc
stos
in
push
xchg
pop
ds
roll
mov
idivb
push
jl
enter
push
mov
fstps
xchg
hlt
frstor
enter
xor
cmp
es
int
mov
push
mov
inc
addr16
cmp
cmp
jl
cmp
mov
mov
add
mov
iret
push
jp
sub
push
sbbb
test
out
and
lea
test
jmp
jmp
sbb
mov
sub
push
je
fists
mov
xor
ret
xor
jae
adc
fidivs
mov
xchg
dec
cmp
in
sahf
sbb
out
fldenv
cli
sarl
xchg
outsb
std
push
aad
fimuls
ss
repz
gs
jns
xchg
xlat
mov
pushf
push
out
xchg
scas
dec
aas
dec
and
addb
out
mov
add
jmp
adc
icebp
add
pop
adcl
cmp
fldcw
mov
loopne
mov
dec
fstpt
sub
cmp
sub
add
call
enter
fs
fidivs
shrl
addr16
push
lods
pop
lret
cmpb
or
push
es
out
fdivs
ja
cli
daa
fimull
jnp
ud0
mov
out
faddl
sbb
xchg
jle
mov
mov
mov
fsubs
sbb
jns
push
out
mov
or
adc
xchg
ljmp
int3
mov
aaa
jae
repnz
addl
fcoms
push
ss
fnsave
cmc
jmp
loopne
or
jmp
xchg
in
jno
mov
or
lods
mov
ja
and
mov
ret
pop
lods
aas
int
sbb
ss
xchg
push
adc
mov
push
sbbb
addb
dec
pop
das
lahf
pop
or
mov
scas
scas
das
fwait
push
rol
test
sub
lds
pop
andb
mov
and
and
jge
rcll
mov
cwtl
and
mov
push
jmp
clc
mov
test
sbb
mov
jb
inc
popf
inc
test
fcmove
jl
push
das
fsts
mov
jge
imul
sub
inc
pop
mov
pop
fcos
cmp
add
fcompl
lret
mov
mov
or
mov
int
mov
int3
scas
sub
xor
inc
sbb
sbb
sub
insb
push
jne
cmpsb
ss
sti
mov
cmpsl
sahf
adc
or
adc
popf
pop
mov
shll
mov
and
and
adc
sahf
mov
dec
rorl
push
and
aad
insl
lret
scas
test
mov
mulb
pop
inc
jl
cmp
jnp
js
leave
out
cmpsb
sahf
cmpsl
popf
inc
mov
shrl
fistpll
scas
out
add
jns
hlt
sub
pop
xlat
jg
out
or
adc
pop
pusha
lods
out
leave
daa
cli
out
test
in
ja
sbb
cwtl
pop
mov
add
cmpsl
sub
push
jno
inc
dec
add
orl
popa
pop
sub
dec
stc
cmp
push
mov
xor
hlt
push
jns
add
push
cwtl
jecxz
insl
pushf
push
add
ja
add
stos
dec
test
in
out
cli
nop
mov
out
jnp
imul
push
mov
cwtl
test
and
aad
shrl
xchg
sbb
or
xor
push
ficoms
add
adc
and
and
in
lcall
daa
xchg
add
jg
out
in
mov
pop
pop
mov
sub
sub
cli
mov
inc
andl
push
mov
mov
ds
xchg
int
imul
mov
fisttpll
sub
jge
fdivrl
and
and
cld
push
sbb
or
into
insl
jle
adc
dec
mov
cltd
mov
mov
sub
mov
xor
das
push
jnp
cmpsb
mov
cmp
enter
movsb
icebp
cmpsb
jp
xchg
sub
test
dec
dec
add
jle
or
inc
cltd
pop
push
cmpsb
cmpsl
scas
popa
test
mov
test
lods
fldenv
cld
divl
push
js
xor
rcll
or
pop
out
mov
js
pop
test
fwait
out
das
mov
insb
mov
xchg
pop
add
mov
gs
add
xchg
mov
das
dec
fcmovnu
sub
and
bswap
inc
add
push
enter
pop
mov
xchg
dec
mov
ret
mov
inc
into
lea
pusha
paddb
es
fistl
test
adc
add
nop
xchg
data16
add
xchg
ljmp
test
xchg
lret
clc
or
dec
iret
mov
push
test
sahf
cltd
clc
in
mov
lahf
ljmp
sti
lods
mov
cs
imul
jne
fptan
je
test
aad
fiaddl
mov
aad
mov
repz
add
pushf
cwtl
and
mov
inc
inc
xchg
or
fsts
in
shl
sub
mov
or
push
lods
out
and
jne
rcrb
cmp
popa
cltd
popa
sbb
sbb
mov
pop
lcall
das
aam
jo
adc
lds
inc
pop
xor
lods
fistl
push
pop
cs
cmp
xchg
ljmp
mov
repz
idiv
out
and
fwait
push
sbb
dec
jns
and
jae
jge
cmp
stos
pop
stc
mov
pop
jns
jle
push
add
sbb
mov
aad
adc
mov
mov
mov
enter
dec
dec
movsl
fcomps
cwtl
fadds
repz
mov
sarl
add
sub
mov
popf
test
mov
enter
sbb
sub
lea
mov
sbb
addr16
mov
mov
adc
push
push
lea
subl
dec
pop
sbb
jno
or
add
ret
icebp
loopne
mov
out
cmp
jge
pop
popf
int3
pop
pop
addb
das
mov
adc
outsb
mov
jp
imul
push
mov
fwait
cmp
sub
int
cmp
out
push
daa
mov
xchg
add
das
add
and
sbb
push
addr16
stos
lahf
mov
add
jmp
fldz
int3
clc
xchg
ja
fdivrs
xchg
popf
push
int
out
adc
out
loop
jno
cmp
out
cmp
aaa
sub
push
sbb
daa
fwait
cmc
jne
mov
inc
xor
pop
ds
push
subl
das
hlt
pop
test
sbbb
mov
dec
scas
insb
pushf
xor
lds
enter
cmpsb
cmpsb
push
mov
cmp
mov
xor
out
jns
aad
pop
int3
popf
mov
sbb
xorl
inc
sub
sbb
push
mov
sbb
cmp
adc
daa
and
push
xor
pop
idivl
xchg
pop
icebp
sarb
loopne
mov
aad
or
jle
in
push
scas
fisttpll
arpl
push
loop
ss
lahf
int
and
inc
cmp
xchg
cwtl
movsb
aad
mov
xor
cs
mov
pop
xor
mov
sub
sahf
test
shlb
test
popa
out
mov
shrl
add
inc
jne
xor
fldcw
mov
movups
add
ja
leave
jb
imul
fdiv
xchg
sub
scas
int
xchg
sbb
mov
or
inc
es
cmp
out
mov
or
and
or
mov
mov
sbb
repnz
mov
enter
xor
fsubrs
dec
test
icebp
jnp
fcmovb
sub
aad
cmp
fsubrl
stc
sbbb
fdivrs
mov
inc
adc
in
jo
lret
mov
test
mov
lods
push
out
or
dec
call
nop
mov
xchg
pop
add
in
mov
ret
pop
sbb
ljmp
sbb
cmp
dec
repz
shl
cmp
daa
in
out
push
cwtl
lods
pop
pop
test
cmc
and
mov
test
and
int
adc
pop
in
sbb
stc
add
js
push
fldenv
sub
push
inc
je
mov
xchg
lea
mov
fidivs
cltd
adc
sbb
cltd
in
aam
push
out
cli
and
cs
lods
mov
fsubrp
jmp
lods
cmp
and
jnp
inc
int
push
mov
sbb
sti
push
mov
movsl
inc
mov
push
cmpsb
push
js
mov
or
int
sbb
adc
fisubrs
mov
fwait
adc
test
jne
loop
icebp
scas
int
or
out
jae
aad
jl
fildl
pop
bound
dec
mov
cmpsb
cmpsl
mov
stos
mov
jle
push
lods
fiadds
repnz
lcall
mov
frstor
sub
movsb
arpl
out
jae
dec
xchg
jae
fs
mov
outsb
call
lock
push
mov
mov
test
sti
push
out
xchg
or
sbb
push
mov
aas
movsl
push
movsl
test
mov
mov
aad
test
xor
jae
les
mov
movsb
and
sbb
dec
lds
std
inc
xchg
dec
xor
nop
test
jo
scas
mov
xchg
mov
int
mov
inc
out
jae
test
sub
push
adc
mov
decb
jbe
ret
je
jp
cmp
repz
mov
int
fwait
arpl
adc
loopne
movsl
xor
int3
and
popa
arpl
mov
sbb
cld
loopne
loop
mov
cld
in
test
sub
out
mov
fldenv
dec
cmp
test
movsl
or
mov
clc
mov
shrb
mov
fsubrl
inc
jbe
pop
mov
mov
push
xchg
loopne
or
push
xor
push
jno
jo
adc
mov
and
mov
les
dec
cmp
int
popf
imul
adc
xchg
sbb
mov
sub
and
jbe,pn
sbb
aas
test
xor
jnp
mov
mov
add
adc
bnd
fs
pop
andb
dec
shrl
fcomi
mov
out
movsb
lods
sbb
push
ljmp
es
lahf
scas
in
and
sbb
fistl
jle
rcl
jnp
mov
cld
daa
mov
dec
and
imul
mov
ds
dec
mov
mov
mov
inc
es
adc
lahf
push
push
fnstcw
pop
pop
sti
mov
push
and
call
cmp
cs
cli
jno
sahf
adc
jge
ret
pop
loope
clc
ss
cmp
lcall
xchg
out
sub
inc
movsb
mov
std
xor
xor
nop
mov
mov
push
or
popf
mov
sbb
mov
daa
mov
dec
jl
leave
sbb
pop
movsb
sbb
or
mov
push
lret
push
pop
adc
adc
gs
mov
inc
stos
pop
roll
or
mov
and
mov
mov
fists
repnz
dec
mov
fnsave
sbb
xor
mov
pop
sti
adc
jp
ljmp
push
jge
mov
test
lcall
mov
aaa
pusha
cmp
inc
push
sbbb
adc
outsl
aad
shll
mov
mov
fdivs
mov
test
enter
outsb
xor
push
cmp
cmpl
insl
cs
aam
shlb
cmp
cld
mov
or
into
mov
sub
aad
mov
push
inc
incb
mov
pop
das
imul
sbb
mov
cli
jl
call
mov
xchg
ret
cmpsl
and
scas
push
scas
lcall
lret
pusha
mov
xor
mov
mov
xchg
push
cmpsl
outsb
push
cmp
jbe
mov
and
push
add
xor
stos
test
test
outsl
lds
pop
dec
cmp
mov
cld
push
lds
mov
cmp
sbb
inc
fisubrs
inc
loopne
in
mov
jmp
cmp
inc
int
std
xlat
sbb
rcrb
inc
and
out
push
arpl
aam
imulb
jo
sub
sbb
pop
mov
sub
repz
mov
fwait
cli
xchg
add
out
sahf
popf
dec
add
add
test
sti
jle
jnp
mov
bound
fisubs
outsb
test
loopne
cli
push
aaa
jnp
fwait
scas
push
inc
out
out
cs
xchg
rcr
sub
mov
imul
fisttpl
xchg
dec
outsl
xchg
cli
fildl
adc
imul
enter
ror
cmp
test
push
inc
out
mov
sbb
test
xlat
adc
negb
scas
push
call
xor
push
hlt
sbbl
das
out
mov
mov
out
adc
adcb
inc
sub
pop
and
sub
movsl
xor
test
inc
push
push
mov
hlt
sarb
sbb
inc
mov
mov
in
jmp
repz
cmp
test
scas
int3
mov
roll
daa
mov
inc
fwait
add
movsl
push
movb
sahf
sti
dec
loope
dec
cmp
andb
mov
and
out
mov
mov
xchg
pop
and
or
loope
cmpsb
xchg
mov
xor
inc
xor
out
dec
andb
mov
cltd
cli
fiaddl
mov
push
call
xchg
jl
and
aaa
jecxz
ret
xor
add
movsb
lret
jge
add
fs
aam
cmp
scas
cmpsb
jb
sarl
push
sti
xor
test
mov
test
sahf
or
idivb
inc
cmovo
aam
test
dec
mov
daa
jl
inc
outsl
jl
push
rcl
mov
mov
cmpsb
xchg
int
add
test
daa
movsb
js
sbb
sub
pop
inc
scas
jno
cli
pop
gs
in
inc
xlat
sahf
xchg
push
xchg
adc
scas
pop
mov
stos
popf
xchg
push
inc
in
jo
movsl
sub
fldl
das
int3
pop
frstor
sbb
lret
xchg
ljmp
cli
mov
jae
out
inc
add
jb
jecxz
mov
mov
hlt
test
movsb
cmpsb
push
mov
xor
push
and
push
dec
jns
das
hlt
fs
jp
fsubrs
push
sti
stos
ror
sub
xor
mov
das
ds
xchg
sbb
std
and
fidivrs
stc
mov
dec
xchg
fistpll
imul
pop
orl
mov
xor
push
dec
push
mov
into
mov
cmp
mov
test
cmp
dec
les
fdiv
xor
jno
or
leave
mov
mov
arpl
jg
rol
shll
ljmp
jl
pop
xchg
mov
sbb
cmp
inc
dec
pop
imul
fldcw
mov
dec
nop
aam
xor
dec
testl
sub
ss
push
mov
out
xor
loopne
mov
sub
pop
rorl
mov
pop
pop
sbb
hlt
into
into
jmp
popa
xor
rcll
xlat
test
pushl
mov
popa
push
jecxz
stos
out
fcmovbe
jnp
and
jno
jmp
pop
fnstcw
jmp
sbb
movsb
push
ljmp
add
mov
mov
cmp
in
xchg
cmpsb
pop
push
outsl
scas
pop
pop
or
enter
jnp
mov
clc
fnstenv
popa
jl
pop
and
inc
jae
fwait
jl,pn
sbbl
mov
cmp
xchg
mov
adc
sbb
push
fildl
in
cmpsl
int
xchg
push
mov
cmp
fnstsw
out
sub
rolb
xchg
jbe
jmp
stos
fadds
scas
mov
add
sbb
mov
ja
test
popf
xor
xchg
ficompl
xchg
or
or
pop
pop
mov
aam
ljmp
popa
rcrl
dec
and
xchg
je
mov
outsl
push
mov
ret
or
idivb
xchg
imul
arpl
out
in
mov
out
xor
pop
xchg
and
sub
dec
mov
aad
fsts
mov
cmp
out
adc
nop
adc
clc
sub
mov
fcmovnbe
enter
test
sbb
ds
es
nop
testb
in
xor
xor
adc
mov
add
pop
fdivs
jae
pop
add
xchg
int
cmp
data16
mov
in
rcr
movsl
inc
mov
sub
sub
and
mov
movsb
addl
add
push
insl
jmp
mov
mov
test
mov
mov
hlt
aas
test
hlt
lcall
add
xor
ret
mov
fbstp
jp
cmp
adc
adc
in
dec
mov
cmpl
mov
dec
dec
pop
or
jmp
sbb
popa
clc
push
sub
and
push
cmpsl
jne
sub
mov
cltd
xchg
rol
popa
test
jno
in
scas
orb
mov
mov
xchg
xchg
xchg
xchg
ss
cmpsb
cmp
mov
xor
imul
inc
and
cmp
push
mov
data16
push
jmp
sbb
int
ret
cmp
or
dec
cmp
mov
or
cltd
movsb
aaa
test
mov
add
mov
shl
push
movsb
adc
cld
xchg
movsb
test
stos
or
add
inc
addr16
jle
sti
std
and
pop
scas
in
jg
push
movsl
pushf
mov
sti
push
cli
subb
mov
sub
jbe
stos
xor
mov
sub
jmp
pop
enter
orl
jne
mov
scas
mov
xchg
add
mov
je
mov
inc
test
push
and
movsb
sbb
movsl
in
std
int3
cmp
cmc
cmp
jnp
or
mov
sarb
fdivs
adc
mov
pusha
jnp
jae
pop
lods
mov
cmp
adc
and
mov
adc
jp
adc
stc
inc
in
add
in
aaa
pop
lds
lock
bound
and
adc
roll
pushf
mov
adc
sub
and
mov
lods
sub
mov
test
xchg
dec
in
inc
dec
sub
or
sub
pop
mov
adc
mov
or
mov
outsl
inc
dec
addl
mov
out
mov
inc
cltd
rorb
mov
xlat
sub
imul
shlb
popa
shlb
jle
and
hlt
rcll
xchg
and
scas
mov
add
push
loop
xchg
mov
and
mov
push
js
jmp
cmp
push
js
mov
jne
aaa
xchg
xchg
cmpsb
repz
or
inc
inc
sbb
int3
jl
jle
mov
cltd
or
int
mov
sbb
pushf
test
mov
mov
cmc
call
aam
popf
cmp
add
ror
cmp
cmp
add
inc
decl
das
sti
fistpll
inc
test
scas
lods
scas
repnz
push
add
cmpsl
inc
push
add
imul
mov
mov
pop
inc
stos
xor
popf
push
inc
jne
call
xchg
fsubs
mov
mov
sbb
pop
popf
inc
jns
inc
or
mov
pop
pop
sub
mov
mov
flds
leave
dec
and
loope
jbe
xchg
mov
gs
leave
fimuls
and
mov
fisubs
ja
out
mov
jae
adc
sbbb
mov
cmc
outsl
shrb
scas
shrl
sbb
repnz
xor
mov
sub
sub
and
mov
pop
dec
adc
lods
mov
xorb
push
dec
mov
inc
cli
cmpsb
mov
or
out
sbb
test
gs
sbb
xchg
push
repz
daa
mov
fwait
jno
std
dec
mov
jl
sub
mov
jne
inc
xchg
jae
cmpsb
jnp
enter
or
shrl
pop
int
scas
and
in
int3
imulb
cmpsb
xchg
mov
mov
xor
dec
scas
fwait
pop
lods
addr16
inc
hlt
xchg
jnp
push
dec
scas
outsb
push
flds
mov
out
mov
mov
mov
mov
leave
sub
inc
pop
mov
fdiv
aam
inc
fstps
rcrb
jmp
ds
mov
pop
sahf
mov
jb
mov
lods
push
dec
fsubr
in
and
out
pop
stc
push
jmp
movsl
outsb
sti
push
cmp
mov
mov
js
into
pop
lret
adc
andb
adc
push
in
enter
outsl
out
mov
mov
push
popw
mov
and
or
mov
jae
sub
movsb
xchg
xchg
jae
cmpsl
mov
fdivrs
fcomip
mov
push
scas
scas
jne
gs
xacquire
dec
data16
aad
push
inc
ja
jbe
inc
lret
jle
pop
popa
sub
mov
sub
sub
fsubrl
aad
sahf
sbb
dec
and
fsubr
xchg
out
xchg
mov
dec
lods
pop
ja
shr
push
cmpsl
cmp
dec
xor
rorl
inc
adc
and
adc
std
jmp
dec
sub
or
out
jnp
scas
xor
push
ja
lfs
out
add
push
stos
popf
xor
out
hlt
adc
mov
xor
push
pushf
call
ljmp
sahf
or
adc
xor
pushf
popf
shll
repz
insb
stc
fwait
mov
fstps
scas
mov
call
lret
fstp
or
fisubrs
jns
pop
and
repnz
std
xchg
mov
test
mov
roll
mov
xchg
popf
mov
mov
je
repz
inc
cld
movsl
test
int
mov
add
out
mov
lcall
out
cmp
scas
mov
push
sti
xchg
cs
jecxz
aaa
in
dec
adc
inc
nop
imul
mov
mov
dec
xchg
jp
dec
popf
mov
and
cwtl
inc
leave
mov
int3
xchg
add
push
ja
out
sub
repnz
pusha
inc
or
stc
adc
fnsave
sbb
and
adc
lahf
out
pop
out
rolb
movsb
xor
jl
gs
xchg
add
ss
mov
test
jns
bound
adc
test
adc
mov
fnsave
aas
mov
push
dec
mov
in
dec
push
push
mov
in
or
and
jae
add
das
push
outsl
lods
test
jno
jp
xorb
in
sti
mov
sahf
imul
movsb
dec
inc
fcoml
inc
mov
enter
inc
icebp
adcl
nop
dec
xorl
loope
loopne
dec
sub
outsl
or
bound
movb
sahf
sub
cld
dec
movsl
mov
pop
xchg
ret
cmp
sbb
icebp
xchg
leave
jmp
push
in
fisttpl
test
mov
icebp
cmpsb
gs
mov
cmp
insl
out
mov
loop
scas
movl
into
rcrl
xor
popf
daa
lods
jne
pop
mov
sbb
mov
xchg
test
add
lret
jge
cmc
loopne
sti
fwait
rcll
les
mov
lea
das
es
push
addb
in
add
mov
jbe
std
ljmp
fxtract
movsb
jle
push
leave
mov
mov
test
mov
and
sahf
outsl
sbb
imul
xor
and
rcll
jno
push
push
inc
inc
pop
mov
inc
add
cmp
sbb
dec
mov
or
in
mov
lret
out
sub
int3
pop
push
sbb
js
popf
das
imul
push
add
clc
test
xor
dec
into
std
adc
inc
stos
sarl
inc
test
cmpsl
mov
mov
xor
push
adc
push
and
jmp
in
push
int
test
pop
push
pop
out
mov
mov
loope
add
xchg
xchg
push
rolb
pop
je
xchg
lds
and
or
and
jmp
jge
jns
hlt
add
dec
insl
pop
lret
sub
sub
std
sbb
mov
cld
cs
test
push
xchg
mov
mov
mov
fidivrs
cmp
out
add
fidivrs
push
cmp
test
mov
push
lret
mov
lret
les
cmp
dec
xchg
sbb
in
dec
cmpsl
cmp
bound
jge
fidivrs
sbb
in
mov
cmp
dec
pop
mov
test
addr16
and
adc
cli
pop
sbb
vmulsd
pushf
jmp
sub
imul
movsl
inc
test
into
pop
cld
jnp
sub
cli
push
lods
out
mov
add
es
test
dec
mov
pop
push
add
inc
mov
xchg
xor
iret
scas
ss
cmp
repz
sti
push
adc
loope
cmp
push
ljmp
sbb
fwait
in
nop
xor
data16
and
add
jp
inc
xor
adc
jmp
test
jb
inc
mov
iret
inc
flds
je
sub
xchg
lcall
leave
jo
jmp
pop
scas
mov
stos
mov
notb
sub
aam
push
dec
cmp
call
push
sub
add
sbb
adc
xor
in
test
mov
fdivl
shl
and
jecxz
push
sbb
jge
jae
fistpl
mov
cld
cmp
fwait
mov
lods
dec
adc
mov
int
sbb
add
loope
or
xchg
and
mov
jns
sub
push
loopne
sub
loopne
and
movsl
out
adc
sbb
fiadds
xchg
mov
mov
pop
mov
sbb
add
js
arpl
mov
data16
xchg
or
in
cmpsl
lds
add
stos
out
fldcw
pop
stc
test
add
xor
mov
jns
sbb
push
dec
popa
int3
cmp
add
push
adc
jno
adc
pop
sbb
jb
std
ret
gs
test
sbb
xor
lods
mov
lret
pop
mov
mov
flds
sbb
cmpsl
jo
push
out
mov
movl
push
scas
add
push
ds
scas
sti
inc
movsb
dec
jp
insb
jge,pt
and
ret
xchg
jg
mov
xor
sbb
stos
cmpsb
or
sub
std
pop
cli
fwait
mov
lahf
outsb
push
sbb
mov
cmpnleps
fstp
cmp
xor
jno
pop
scas
movsb
or
xor
jnp
call
fcmovu
subb
adc
jg
test
imul
xchg
aam
es
shrl
and
das
je
outsb
cmpsb
orl
xchg
test
xor
cmpsb
flds
mov
mov
rorb
daa
dec
inc
or
das
cmp
je
popf
lods
xchg
fdivrs
xchg
adc
xor
lods
mov
adc
popf
nop
lret
cmpsl
sahf
or
and
sarb
inc
push
cmp
gs
call
in
xor
sti
inc
outsl
outsb
xchg
cwtl
and
xchg
mov
fsts
fnstcw
or
mov
lcall
mov
mov
jo
mov
pushf
sbb
stos
iret
roll
mov
mov
xor
jbe
fimuls
cmp
mov
pop
clc
jg
test
les
scas
in
out
sbb
xchg
loop
xor
sub
outsb
or
mov
lret
mov
das
cld
aam
jmp
dec
adc
inc
pop
fldcw
scas
aad
std
sub
push
test
cmpsb
cmp
jmp
outsb
fadds
mov
outsl
fs
inc
push
cmp
adc
mov
cmpsl
iret
loope
test
and
repz
fsts
mov
shl
mov
cld
movsb
test
mov
sbb
orl
xor
xchg
in
aas
fwait
mov
jns
push
mov
jnp
jb
addr16
dec
sub
mov
and
orl
jl
aaa
ds
xor
jg
cli
aaa
and
mov
rcr
iret
ret
fnsave
std
rol
es
mov
insb
in
ljmp
xorl
scas
sbb
mov
jmp
addb
in
std
outsl
shlb
jmp
ret
mov
movsb
mov
mov
mov
inc
je
push
push
lahf
mov
pusha
icebp
lods
push
adc
test
jle
jno
inc
stos
in
out
lret
adc
mov
lret
in
pushf
sub
out
xor
loope
cld
insl
addr16
addr16
imul
xchg
sti
cltd
cmp
mov
test
mov
xchg
popa
mov
jp
push
push
pusha
outsl
hlt
stos
lret
or
mov
flds
or
movsl
mov
inc
inc
cmpsb
in
mov
sub
pop
out
mov
and
js
lret
mov
xchg
mov
lds
ret
cmp
push
inc
sbb
icebp
imul
int
sbb
mov
jl
aaa
push
xor
pop
and
add
dec
lods
push
xlat
push
push
gs
mov
sbb
cs
sub
repz
icebp
lahf
test
int
mov
and
inc
mov
pushf
jae
push
mov
dec
adc
sub
das
scas
outsb
fidivl
andl
mov
mov
lahf
mov
mov
loopne
les
ljmp
and
push
mov
in
aaa
hlt
call
test
mov
gs
adc
loope
xchg
or
fwait
jle
mov
push
xchg
fstl
mov
xor
mov
jle
icebp
fnstenv
adc
mov
aaa
enter
gs
inc
adc
in
fsts
scas
pop
fistl
mov
fldl2t
enter
push
jmp
push
repnz
push
in
imul
xchg
addr16
dec
fisttpl
mov
int
sub
adc
adc
push
jns
add
cld
insb
xor
mov
in
jecxz
lds
inc
hlt
push
push
hlt
jl
jmp
xchg
jl
jne
shlb
outsl
cld
pop
and
dec
imul
dec
stos
sbb
add
int3
push
testb
and
cmp
popa
jp
call
and
jge
adc
cmp
and
pop
mov
xchg
in
in
inc
pop
sahf
fstps
movsl
mov
shll
adc
inc
push
sbb
xor
xor
out
mov
loopne
adcl
int
add
xchg
lods
out
xchg
cmp
test
jae
adc
shlb
int3
out
movsl
iret
bound
pop
lcall
and
imul
pushf
push
fsubrp
cli
imul
push
sub
and
jae
xor
cli
push
and
ror
imul
in
jno
ret
or
daa
out
jmp
das
call
pop
jo
sbb
fs
je
loopne
out
sbb
dec
gs
stc
movsb
popf
jge
aam
mov
in
mov
sub
push
xor
call
loopne
push
movsb
test
pop
repz
pop
subl
xchg
ljmp
jge
dec
out
sbb
test
inc
std
stc
jge
mov
scas
std
mov
cmpl
or
test
stc
mov
sbb
jno
sbb
rol
scas
dec
or
test
xchg
das
fwait
scas
xchg
out
rcll
and
add
dec
out
xchg
repz
xchg
dec
test
and
add
push
daa
movsb
push
or
subl
mov
cli
repz
gs
mov
mov
fwait
cmp
cwtl
mov
pop
ret
vmread
jge
scas
push
push
xor
mov
mov
out
out
jge
cmp
pop
inc
lods
jge
mov
sti
out
out
out
xchg
mov
popf
outsb
inc
lods
and
sbb
mov
xor
insb
jle
pop
cwtl
cmp
or
or
negb
jle
outsl
rolb
mov
dec
inc
mov
dec
fidivrs
scas
std
xchg
cltd
inc
imul
xchg
js
and
inc
scas
xor
xchg
lods
inc
lds
cmp
mov
inc
movzbl
jae
lods
fnsave
mov
inc
add
repz
cs
outsl
repz
xchg
push
clc
lods
lret
cmpsl
mov
lock
sub
cs
mov
and
jae
jl
jnp
rol
xor
mov
dec
or
test
sbb
in
mov
aas
and
sbb
mov
shl
mov
pop
lret
dec
mov
mov
fisubrs
dec
pop
notb
add
lcall
jle
adc
imul
lahf
dec
xchg
int3
or
mov
popa
rcr
lods
test
hlt
repz
sbb
xchg
xor
xor
mov
scas
lods
push
adc
roll
call
mov
push
das
mov
rcll
imul
sahf
pop
mov
jnp
or
int
in
push
mov
loop
push
xor
and
inc
jns
fldenv
shr
jbe
mov
mov
dec
or
aam
sbb
cmp
jae
dec
pusha
mov
xchg
jnp
out
pop
cmp
fidivl
addr16
test
sbb
push
inc
or
mov
fldenv
mov
rcl
pop
repnz
or
lret
and
outsl
and
sub
idivb
push
sbb
sub
pop
inc
mov
inc
psubsw
pop
out
roll
fistpl
les
cltd
push
pop
push
pop
pop
in
or
sbb
loop
dec
lahf
pop
popf
into
sbb
xchg
push
mov
icebp
sub
mov
adc
insb
mov
flds
fwait
jl
test
dec
ror
lret
cmpsl
lds
xor
mov
sbbb
sahf
in
incl
sar
leave
in
out
cmp
scas
repnz
insb
loope
fistpll
pop
mov
loop
sbb
push
daa
or
jnp
push
test
flds
popf
sub
dec
das
data16
inc
sub
jmp
xor
mov
cli
scas
pop
xor
jnp
bound
iret
or
scas
adc
out
js
inc
cmp
mov
cmpsl
ror
pop
jb
mov
mov
push
push
xchg
int
gs
inc
xorl
sub
push
push
arpl
adc
icebp
cli
nop
add
lods
mov
popf
lret
sbb
dec
out
mov
mov
add
xchg
adc
negl
shlb
aam
ja
in
push
or
ja
js
mov
mov
inc
ljmp
mov
lods
sbb
cmp
scas
fldenv
in
out
xchg
dec
in
cmp
test
pop
xchg
js
xor
popf
sbb
icebp
mov
pop
xor
scas
loope
mov
cmpsl
cmpsl
fnstenv
jecxz,pn
sbb
jmp
sbb
jnp
mov
xchg
mov
add
fs
and
pop
int3
xchg
lret
sbb
in
fidivrs
in
sbb
out
int
pop
icebp
mov
fnstenv
into
int
mov
jmp
gs
xchg
sub
mov
or
int3
fmuls
loopne
sbb
out
out
and
es
sbb
in
lods
sti
rcll
pop
cmc
cmpsl
mov
shll
outsl
das
fs
dec
arpl
add
movsb
push
add
jbe
mov
rcrb
jp
stc
clc
pinsrw
mov
jle
dec
push
mov
test
test
iret
fstp
xor
ret
bound
mov
xchg
xor
int
push
ror
sub
out
jp
mov
icebp
inc
xor
mov
pop
and
cmp
lds
sub
dec
xor
outsb
pmaddwd
in
pop
imul
inc
cmp
mov
mov
lods
inc
push
dec
pusha
es
xchg
cmp
lcall
adc
aaa
rol
subl
sbb
test
vmovq
mov
mov
enter
jno
out
mov
push
dec
pop
ret
stc
test
std
repz
in
scas
jmp
out
loope
addr16
mov
ror
adc
test
sbb
int
popa
lock
cmpb
adc
fnstenv
icebp
mov
hlt
jae
movsb
test
cmp
xchg
loopne
stc
jge
das
aam
sbb
aas
ss
cltd
test
jbe
gs
mov
mov
dec
cmc
and
repz
sar
fxch
aas
push
jno
pushf
jbe
jae
testl
cmp
adc
fnstenv
ret
in
pop
pop
je
fimuls
notb
scas
cmp
cld
test
scas
popa
pop
adc
scas
and
cmp
out
in
jg
inc
fbstp
pushf
jmp
outsl
inc
bound
es
mov
adc
mov
mov
xchg
stos
lahf
dec
add
invlpg
ss
js
andb
add
lods
mov
ljmp
cmpsb
xchg
jl
pop
mov
push
xchg
test
mov
out
dec
mov
int3
xchg
or
fildll
mov
and
push
mov
js
cmp
stos
ja
sbbb
fdivrs
jg
fisubrl
adc
std
fdivrs
repz
mov
pop
dec
mov
data16
popf
pop
sbb
add
rcll
daa
inc
mov
cli
xor
push
imul
std
out
out
sbb
xor
fsubp
adc
leave
mov
xor
out
dec
push
in
xchg
mov
popf
fndisi(8087
int
daa
sub
jnp
sub
es
scas
mov
pusha
push
roll
clc
dec
fsubrl
mov
jns
out
jmp
jo
addr16
dec
sbb
ljmp
and
fwait
xorl
loopne
cmp
dec
mov
xchg
rorb
push
jmp
dec
imul
and
and
jb
dec
lods
dec
jecxz
pop
add
dec
xor
cltd
cli
fistpll
adc
xchg
int
jmp
ja
movsb
sbb
aad
imul
mov
flds
cli
cmp
fs
imul
rorb
jnp
rcrl
jns
push
test
xchg
cmpxchg
pop
push
je,pn
mov
test
or
xchg
jmp
flds
mov
and
push
pusha
push
mov
mov
push
ficompl
push
test
xor
int
xlat
sub
cmp
sbb
mov
mov
in
jns
int
stc
mov
dec
test
xor
xchg
cmp
cwtl
icebp
mov
add
mov
mov
sbb
std
pushf
loopne
jl
xchg
cmp
lret
push
sbbl
cltd
flds
nop
in
push
shll
repz
ljmp
add
test
sub
sub
enter
scas
xchg
jmp
fsts
lcall
lock
mov
lret
inc
test
mov
push
cwtl
roll
and
aam
xchg
repz
jb
cld
pop
je
and
je
ljmp
mov
pop
xchg
es
rcr
sub
add
adc
pop
cwtl
cmp
mov
insb
sbb
sub
test
mov
movsl
pusha
jp
mov
shrl
test
cmp
out
fnstcw
or
jl,pn
loope
jmp
cli
data16
test
xor
sub
sbb
and
or
jle
fwait
outsl
jbe
in
cmp
pushl
xlat
mov
in
xor
lods
add
hlt
in
adc
or
fisttps
insl
cmp
inc
pop
jnp
cmp
cld
add
adc
arpl
jno
sbb
jmp
int3
push
pop
popa
loope
add
or
lret
popf
ds
cld
push
push
jmp
jnp
adc
sbb
mov
fcomps
xor
mov
jl
pop
sbb
inc
pop
cmovg
dec
mov
or
outsb
jno
in
cmpsl
mov
mov
ret
mov
insb
inc
mov
sub
sbbb
jecxz
lret
jbe
dec
push
push
adc
pop
mov
inc
xlat
inc
adc
fcoml
mov
mov
or
adc
xchg
sbb
cmp
mov
movsb
stos
xlat
popa
decl
pop
xchg
fsts
pop
fdivs
mov
cmp
mov
outsb
sbb
mov
sub
jae
mov
pushf
xchg
outsl
fimull
push
loope
pop
testb
test
inc
and
sahf
in
lods
shrb
mov
addr16
add
pop
jne
dec
faddl
jns
mov
xchg
outsb
push
sbb
test
sub
adcb
imul
aam
add
in
xor
push
je
and
sbb
in
inc
andw
outsb
jmp
es
jl
int
addr16
push
call
test
fcom
test
mov
inc
or
sbb
jbe
sarb
aas
daa
sub
xor
xorl
pop
inc
xor
sub
jbe
push
std
sub
in
dec
push
loop
sbb
movsb
pop
adc
push
pop
or
ds
jo
mov
mov
dec
cmp
ljmp
enter
cmpsb
fdivrp
nop
jno
mov
fwait
mov
or
jb
and
fldl
hlt
jl
rorl
sub
in
in
push
scas
mov
dec
mov
inc
fcomps
dec
cmp
and
dec
push
stc
outsb
add
jb
std
addr16
arpl
test
mov
inc
popa
loope
cmp
gs
aam
cltd
adc
mov
jmp
push
mov
int3
sahf
mov
ja
call
cmpsl
sbb
test
xor
xorl
int
ds
clc
pop
and
mov
pop
mov
sbb
mov
push
int
jnp
fisttps
inc
push
enter
lock
cld
hlt
jp
adc
test
xor
dec
aad
xchg
out
mov
ja
mov
aam
outsb
or
or
outsl
clc
int
lods
popf
fwait
cltd
fnstenv
mov
cmp
jp
mov
lods
xor
adc
pop
and
ret
and
jmp
data16
movsb
fsts
fimull
cmp
pop
sti
aam
paddq
into
sub
out
dec
pop
imul
popf
cmp
call
stos
xor
sbb
aad
push
data16
test
sti
mov
mov
push
in
call
pop
add
cs
mov
pop
mov
scas
sbb
pop
je
xchg
jns
rorl
in
mov
cmp
outsb
cmp
xor
xor
fisubs
lret
mov
test
stc
cwtl
sbbl
mov
repz
pop
cltd
add
push
les
jmp
scas
adc
and
pop
push
daa
in
cmpsb
cmp
rorl
mov
or
push
fisubs
and
adc
daa
adc
push
mov
fwait
out
mov
sbb
outsb
fdiv
push
sub
rolb
dec
call
mov
sahf
push
mov
inc
xor
stc
nop
and
adc
mov
cld
lds
adc
fildl
mov
xor
shrl
sub
lahf
rorl
stc
sti
cld
jno
add
cwtl
pusha
sbb
jge
xchg
xchg
test
test
cmp
fcmovu
add
add
jp
adc
sbb
fnstcw
lahf
jl
dec
dec
mov
sbb
pop
shrb
int3
in
cmp
sbb
imul
jecxz
dec
and
rolb
test
sti
fdivrl
pop
mov
daa
not
inc
repz
int
sbb
sub
add
aad
push
jmp
fsubl
pop
lahf
pop
fldenv
lcall
adc
dec
adc
aas
pop
test
imul
in
adc
mov
sti
lods
loope
repnz
and
mov
fabs
iret
adc
dec
adcl
inc
xor
arpl
xchg
lret
pop
std
popa
push
lahf
mov
fldenv
adc
pusha
mov
loop
lods
xchg
mov
push
dec
outsb
inc
xchg
cmp
mov
inc
out
dec
ss
mov
push
in
in
push
xor
data16
out
scas
inc
mov
ror
pusha
xor
imul
mov
mov
dec
xchg
xlat
lahf
out
and
push
fisubs
push
out
inc
mov
inc
fistl
in
mov
lea
nop
sub
fs
loopne
xor
xchg
fldenv
lods
pop
ljmp
fcoml
fld
shll
inc
bound
je
dec
and
sarl
rcll
scas
mov
loop
lcall
mov
out
xchg
mov
repz
xchg
add
lcall
mov
inc
push
adc
mov
out
sub
movsb
cmc
shrl
fs
and
imul
orl
sub
cmp
xchg
dec
sbb
adc
hlt
int
sbb
dec
adc
xchg
mov
cmp
jmp
mov
jge
mov
std
out
and
mov
cltd
aaa
cmp
lods
test
xchg
rcll
or
xor
or
cmp
sti
pop
test
les
fdivrs
loope
testb
int
push
fwait
cmp
jecxz
aaa
xor
xchg
dec
xor
sub
and
sbb
fnstenv
adc
cmp
add
std
pop
rorb
and
push
inc
fidivl
mov
aam
push
or
inc
fsubrl
pusha
nop
scas
scas
push
xor
enter
hlt
cld
add
mov
jb
mov
imul
dec
mov
mov
sbb
in
lods
cmp
lds
fldcw
mov
mov
mov
adc
and
int
std
mov
mov
popa
mov
fwait
loope
or
mov
add
inc
lret
inc
lcall
leave
roll
mulb
push
cmp
mov
ljmp
lea
cltd
and
fimuls
data16
shlb
mov
cmp
sub
inc
mov
and
in
lret
jl
lods
call
fsts
jge
scas
iret
sbb
pop
hlt
cs
pop
pop
xchg
je
adcb
or
outsl
lret
mov
sub
adc
ljmp
aam
add
mov
aam
cli
scas
cmp
fiadds
or
jae
gs
xchg
sahf
mov
push
push
pop
or
lock
mov
mov
pop
into
cmp
fldenv
xor
rolb
sbb
mov
inc
clts
cmp
mov
rcl
shlb
aaa
pop
test
cmpsl
scas
mov
idivb
xchg
call
imull
and
gs
add
or
das
jne
xchg
rorl
xor
sub
imul
ss
movsb
jnp
cmp
cmpsb
lods
stc
mov
fcoml
jns
push
mov
lock
pand
shrb
mov
fimull
faddl
mov
or
fnstenv
inc
push
mov
stc
push
hlt
add
das
imul
push
xchg
xchg
mov
in
decl
sub
cmp
insb
int3
mov
or
cmp
mov
sbb
int
cmp
dec
mov
das
jae
in
push
xchg
mov
pusha
popa
lret
cs
jle
inc
mov
sti
or
mov
push
xchg
sbb
pop
arpl
mov
repz
out
cmpl
pushf
adc
cmc
and
sub
outsl
add
test
mov
scas
sbb
jbe
mov
ljmp
movsb
es
outsl
inc
adc
push
daa
sub
sbb
mov
daa
cmp
push
pushf
pop
outsb
adc
or
gs
insl
iret
dec
sub
mov
jno
xor
mov
std
data16
sahf
cli
pop
and
int3
lods
fst
popf
ljmp
mov
nop
push
loope
mov
int3
and
test
xchg
das
arpl
mov
pop
jno
jnp
loopne
and
adc
sti
cmc
iret
add
push
movsb
ss
ljmp
test
lea
in
cli
dec
adc
mov
or
loope
insb
pop
lahf
fisubs
dec
mov
sub
inc
mov
fisubs
xor
sub
scas
pushw
test
int
divb
test
sarl
bound
scas
cmpsb
cltd
pop
adc
jne
ret
jno
inc
mov
jge
sahf
out
test
inc
repz
in
lret
mov
jp
jbe
lahf
fadds
pop
push
pop
test
xor
sub
data16
mov
push
popa
in
arpl
push
hlt
lods
sbb
pop
std
pop
jmp
outsb
pop
enter
clc
lret
push
daa
or
cwtl
jmp
cmp
cmp
mov
cs
insl
les
dec
add
or
inc
xorl
leave
xchg
out
mov
jp
mov
shlb
jnp
dec
mov
ja
insl
addr16
fadd
stos
mov
and
inc
mov
cmp
icebp
outsl
imul
cld
sub
inc
add
sahf
dec
push
push
mov
sti
cmp
andl
mov
popf
jecxz
mov
gs
sahf
xchg
insl
sbb
xchg
mov
push
sbb
mov
fsts
mov
add
addb
out
sub
jb
in
mov
mov
sarl
fimuls
pop
jns
scas
icebp
dec
dec
lds
jo
and
lods
testl
sbb
cmp
jp
cmc
xlat
dec
pop
cmp
pop
adc
ds
mov
jo
sbb
addr16
sub
and
jp
andl
push
mov
push
ja
cmpsb
xchg
fdivr
mov
and
mov
shl
int
outsl
sbb
adc
cmp
stos
pop
test
sar
out
pop
push
push
pop
insb
int
dec
jne
xorb
or
movsl
xor
rcrb
inc
lods
mov
call
xlat
fdiv
mov
fwait
out
mov
sub
mov
mov
mov
mov
lahf
push
pusha
sub
sar
lcall
inc
sti
repnz
std
test
popf
js
jle
pop
jno
push
xchg
pop
cli
in
sahf
xor
dec
loope
je
ret
jge
test
ss
movsl
test
fimull
out
das
xor
fidivrl
daa
push
out
mov
add
bnd
cli
xchg
adc
or
mov
sarb
in
mov
cs
cmp
lret
test
in
xchg
cmp
cmp
out
gs
mov
mov
ja
xor
out
scas
inc
or
mov
mov
insb
xor
mov
fidivl
mov
in
mov
push
pop
movsb
clc
out
repz
and
push
repnz
pushf
test
jle
add
cli
fwait
cmpsl
pop
jg
mov
cmpsl
cld
lahf
test
lcall
cmp
adc
and
push
lock
jo
xor
cmp
jmp
fldenv
stc
mov
adc
add
mov
xor
mov
out
faddl
inc
arpl
fcom
lcall
fcom
daa
or
sarl
pop
stos
fsubrs
or
jo
mov
inc
xor
cmc
push
xchg
cmp
dec
mov
push
add
je,pn
mov
jo
dec
push
pop
clc
mov
adc
mov
fstps
xchg
aad
shll
lds
dec
xchg
fmulp
xchg
lahf
movsl
dec
jmp
repz
mov
xchg
xlat
mov
popf
xchg
xchg
das
pop
negb
cs
notb
enter
jecxz
lret
aad
sbb
mov
or
push
scas
jecxz
dec
jne
pop
sbb
mov
pop
icebp
add
add
push
add
pop
xlat
inc
rcrb
add
adc
jmp
test
imul
fnstcw
jbe
dec
rorb
scas
lods
jge
dec
repnz
xchg
mov
idivb
into
scas
imul
fsub
mov
pop
sbb
frstor
adc
std
pop
inc
pop
rcrb
cmp
aad
mov
enter
dec
in
or
push
cwtl
add
and
nop
add
out
and
repnz
cli
dec
lahf
call
out
scas
inc
inc
xchg
add
test
jmp
test
das
cmp
in
sahf
stc
sub
mov
aad
mov
rorl
fadds
mov
test
cmp
and
lods
jmp
lods
scas
xchg
mov
aad
push
outsl
xchg
inc
mov
clc
mov
cmpl
repnz
inc
sarl
and
icebp
and
mov
xchg
mov
std
mov
data16
xor
push
insb
mov
push
xlat
test
push
inc
insb
aaa
push
lock
inc
iret
fistpl
xlat
icebp
stc
lret
add
mov
push
lahf
movsb
imul
hlt
cli
sbb
and
mov
or
push
lods
orl
or
pop
dec
inc
repz
inc
outsl
sti
inc
lret
sub
rcrb
dec
dec
stc
std
mov
sbb
pushf
jge
aam
test
scas
or
jmp
sub
fsubr
and
orl
add
fsub
add
xor
mov
sub
mov
mov
mov
dec
gs
test
into
sbbl
push
and
jno
pop
flds
add
dec
xor
or
sbb
mov
mov
xchg
lahf
lret
inc
roll
mov
pop
loope
jo
inc
or
jge
leave
hlt
jmp
movsb
fnstcw
je
icebp
pop
sub
cmp
mov
jo
adc
adc
mov
jp
or
imul
xor
and
out
jno
int3
lods
fcmovu
mov
sahf
xchg
popf
flds
xchg
sbb
mov
ljmp
push
or
lods
push
gs
fidivs
sub
aam
push
sub
jno
sub
inc
stos
fisttpl
arpl
inc
cltd
sbb
inc
loopne
mov
mov
dec
cmpsl
lret
movsl
fidivs
in
gs
xchg
xor
pushf
mov
jle
pop
xchg
lcall
aad
or
aam
scas
movsb
dec
sub
test
das
sbb
jp
cmc
mov
mov
inc
or
pcmpeqw
in
mov
repz
das
inc
mov
lock
pop
mov
repnz
pushf
mov
daa
cmp
and
sbb
or
stos
fmuls
xchg
jecxz
add
adc
mov
aam
addb
into
mov
fxch
mov
push
adc
cld
shlb
pop
sarl
sarl
aad
aad
mov
sub
arpl
xchg
push
call
repnz
mov
std
rolb
jle
jb
pop
adc
lcall
sbb
lds
pop
mov
mov
sbb
out
and
cwtl
and
mov
mov
cmp
cltd
stos
js
aam
push
cmp
cmp
pop
scas
sti
stos
sahf
add
jae
and
dec
mov
inc
fldenv
rcr
mov
xor
in
pop
inc
decl
xor
insl
leave
inc
and
push
push
pop
test
jle
mov
mov
repz
push
ja
add
cmpsl
jae
or
fwait
dec
int3
movsb
xor
mov
ror
outsb
push
push
mov
shl
js
fsubp
dec
inc
xor
scas
dec
rcrl
xchg
lods
lock
out
fisubrs
xchg
addl
out
inc
adc
popl
out
fldenv
faddl
mov
jo
addl
lock
addl
xchg
and
pop
dec
fdivrl
gs
and
lods
cwtl
cmc
sbb
test
les
ret
out
adc
inc
add
push
xchg
xchg
mov
pop
jle
ds
jp
popf
imul
inc
add
mov
jb
cmpsb
std
test
flds
fbstp
jno
adc
iret
mov
xor
outsl
fiadds
mov
clc
push
dec
mov
xchg
cld
jno
pop
fstps
aaa
cmpsl
sub
in
mov
out
fsubrl
jge
lcall
mov
mov
imul
andb
push
push
addr16
std
jbe
enter
add
test
or
xchg
inc
das
imul
jg
or
ss
sbb
cmp
sbb
lods
adc
inc
jle
subb
xlat
leave
mov
lret
loop
xor
and
lea
mov
or
push
out
or
decb
popf
mov
das
gs
cmpsl
lds
sahf
dec
sti
adc
xor
xchg
and
mov
das
push
mov
jno
push
jns
pop
push
jp
pop
in
adc
mov
test
push
pop
pop
cmp
or
mov
mov
or
int3
cmpsl
and
int3
mov
pop
fnstcw
mov
jbe
call
mov
movsl
lret
add
and
mov
mov
dec
or
mov
lcall
mov
cmp
stos
lods
mov
repz
and
shl
aam
adc
mov
mov
rcr
test
inc
ss
aaa
push
push
adc
cmp
js
jg
inc
push
fwait
mov
xor
jle
popf
ret
cs
arpl
add
and
imul
jg
push
test
test
push
xchg
iret
cmpsb
mov
scas
pop
xchg
into
addb
iret
and
and
mov
or
insl
cmpsl
mov
test
and
stc
mov
mov
lock
mov
lcall
push
rcll
gs
faddl
jle
and
fcoml
fwait
popf
scas
xlat
pop
test
int
out
adc
les
out
xor
fucomp
mov
add
sbb
test
mov
clc
lds
insb
repnz
adc
int3
popf
inc
out
inc
and
and
in
enter
push
pop
mov
flds
xchg
fcoml
test
or
div
mov
aad
test
pop
sbb
lcall
popf
sbb
cmpsb
cmp
xchg
pop
sbb
xor
lds
push
push
test
fld
dec
sbb
push
sub
xor
xchg
sub
js
lds
sbb
mov
push
int
movsb
cli
mov
fs
lock
sub
xchg
stc
jg
js
push
clc
jne
fs
and
mov
call
insb
inc
mov
xchg
iret
out
cmpsl
hlt
lods
lcall
jne
test
xchg
cmpl
lea
mov
jnp
fwait
cmp
fistl
add
lods
test
xchg
mov
push
test
mov
pop
add
xor
ss
jle
push
into
mov
inc
icebp
out
loop
pop
inc
aaa
sbb
jnp
lock
jo
jmp
xchg
test
stos
lock
inc
fwait
push
xor
inc
fmulp
into
dec
lret
loope
gs
sub
sbb
jno
repz
cmpsl
hlt
addb
dec
bound
or
call
test
jbe
lds
ud2
push
push
jbe
xor
jae
rorb
out
mov
mov
sbb
lret
sub
cltd
mov
lock
xchg
push
int3
jl
mov
cmp
ljmp
aam
out
popa
inc
xchg
cmp
xchg
sbb
lahf
pusha
insb
xchg
mov
push
add
ret
in
mov
out
add
sbb
ror
jbe
fidivrs
xchg
dec
out
xchg
inc
pop
xchg
sbb
sahf
adc
arpl
sub
stc
pop
loopne
xchg
and
ret
scas
in
insb
scas
call
xchg
push
mov
pusha
icebp
mov
mov
mov
pop
subb
mov
xchg
notb
stc
xor
jge
mov
out
cmpsl
fnsave
test
xchg
stc
loopne
and
sub
dec
adc
std
jecxz
jo
popa
jbe
mov
fldenv
outsl
stos
cmp
lds
fisubs
hlt
cmpsl
fcmove
in
jnp
xor
adc
cmpsl
movb
or
leave
xor
mov
outsl
pop
test
aad
fsubrl
int
or
stos
sahf
mov
adc
xor
mov
push
imul
hlt
loopne
mov
add
pop
fsubp
mov
fidivs
jae
mov
arpl
xchg
lea
mov
mov
mov
push
test
mov
and
push
ja
sub
and
mov
cs
sub
enter
outsb
inc
cltd
shll
or
es
dec
mov
mov
out
repz
loope
inc
inc
popl
ja
out
ds
xor
mov
jl
sub
jecxz
mov
loope
lock
push
xlat
dec
mov
add
in
pop
lods
dec
add
push
ja
nop
aaa
clc
nop
pop
xor
aad
and
lock
adc
imul
int
cs
test
insb
fcompp
xchg
fs
aad
push
aad
out
dec
jmp
pop
movsb
fldenv
xchg
xchg
cmpsl
rcr
ja
inc
lahf
or
je
pop
cld
stc
add
aam
jnp
mov
jmp
clc
lea
mov
ljmp
cmp
cmpsl
rcll
das
movq
mov
sbb
mov
pusha
and
mov
lods
out
cmp
cmp
ds
ss
inc
fdivrl
test
scas
or
sbbb
test
and
cmp
adc
cmp
ficoml
jno
aad
add
lret
cmp
shr
ja
sbb
sbb
cmp
mov
lahf
lret
hlt
jmp
rclb
adc
enter
ficompl
mov
jnp
inc
out
and
aam
test
flds
fcmove
sub
es
sub
fldenv
hlt
lret
test
movsl
icebp
test
imul
inc
push
mov
les
leave
push
jp
and
cmc
scas
sti
xor
mov
sbb
jnp
add
repnz
loop
out
cmp
ret
mov
shrl
inc
fdivrl
out
push
js
inc
or
mov
pushf
sti
test
es
repnz
jo
pop
ss
mov
pop
jg
test
add
scas
xor
loopne
adc
xchg
xor
iret
add
in
inc
add
adcb
adc
sbb
ret
rep
ss
cmp
in
sti
ret
lretw
dec
cmpsb
dec
pop
les
and
pushf
lcall
mov
sarl
std
xchg
fsts
cmpsb
rorb
gs
adcb
pusha
add
sarl
mov
xor
mov
xor
mov
xor
imul
movsb
test
inc
inc
jge
in
pop
fidivl
fidivl
sub
movsb
mov
insb
out
lcall
rcr
rcrl
into
sbb
add
movsb
pop
std
cltd
les
sbb
lds
in
cli
stc
add
out
xchg
sbb
jle
mov
push
and
nop
shr
xchg
mov
jne
xchg
out
xchg
xor
std
ja
aas
leave
addr16
or
and
rcll
pop
xchg
in
orb
movsb
lea
sub
push
inc
sub
lods
cmp
fs
dec
cmp
push
test
fidivrs
mov
xchg
push
xchg
push
pop
in
xor
cmpl
dec
andb
pop
adcb
sbb
mov
movzbl
out
gs
mov
dec
data16
mov
mov
adc
lods
sbb
jmp
jae
add
orl
and
int
into
scas
or
sub
leave
int
push
jp
aam
mov
add
test
xchg
and
pop
jg
mov
cmpl
sahf
and
pop
mov
adc
cmpsb
pop
jle
lcall
call
pop
add
cmp
sti
loopne
mov
cld
sbb
popa
fsub
cltd
jle
insb
mov
and
ss
dec
lea
or
fdivs
inc
mov
scas
hlt
xor
cwtl
mov
add
xchg
aaa
ss
mov
daa
rolb
xor
pop
push
repnz
loop
mov
repz
mov
xchg
mov
lods
xchg
fstl
push
inc
inc
dec
dec
push
into
mov
in
mov
jnp
fldenv
imul
lock
xor
addr16
imul
faddp
cmp
fstps
cmp
nop
sahf
movsl
pavgb
call
in
stc
or
pusha
jb
sbb
lods
out
jno
jl
inc
push
out
js
mov
repz
jecxz
subb
insl
push
das
sub
les
jns
lods
lea
inc
sub
fs
inc
adc
jmp
jae
popf
sbb
cmp
or
addl
push
shlb
cmp
cmpsl
cmp
push
sbb
mov
lods
xchg
fwait
loope
jmp
dec
cmp
mov
int
cmp
sti
xor
sub
aam
add
sti
mov
icebp
in
and
fdivr
idivb
es
les
mov
xor
pop
mov
popa
mov
loopne
mov
sti
adc
add
or
in
cmp
add
lds
rcr
fstpt
cmp
lods
jae
arpl
loopne
shrl
loope
xorl
jl
out
mov
mov
iret
clc
call
sarl
rolb
addr16
push
sbb
mov
inc
add
dec
out
inc
cmc
lret
sbb
std
outsl
cli
test
sarl
sub
mov
test
jmp
fs
xor
insl
ljmp
mov
mov
idivb
jge
enter
jne
jmp
mov
fs
cmc
dec
mov
add
cmpl
mov
cmp
lods
lods
pop
lret
jge
dec
loope
ja
mov
fidivs
xor
mov
sub
inc
sahf
andl
fcmovne
fimuls
icebp
cli
int
xchg
ljmp
cmc
push
xor
nop
aas
andl
xlat
mov
xchg
ja
out
and
test
fdiv
in
add
mov
mov
fs
mov
and
mov
lods
js
pop
movsb
lock
jne
push
push
sub
mov
fnstenv
out
mov
inc
sbb
int
cmp
mov
xchg
sahf
call
mov
popf
cmp
idiv
pop
lcall
enter
flds
push
mov
cmp
dec
in
cmp
js
cmpsb
xchg
xchg
and
lret
and
int3
stos
mov
add
loopne
xor
sbb
mov
pop
mov
xchg
mov
cmp
shrl
and
mov
jmp
dec
push
xor
jae
add
ss
sbb
fistpl
add
xlat
inc
sahf
mov
mov
and
mov
test
or
jae
incl
mov
pop
vrcpps
and
dec
dec
dec
pop
pop
add
in
or
shrb
mov
mov
cmc
std
data16
in
push
enter
inc
push
sub
and
pop
popf
pushf
aas
cmpsl
sti
dec
mov
pop
jne
mov
sub
scas
xlat
std
repz
ljmp
sbb
jle
test
lahf
and
pop
test
adc
add
cmp
dec
sub
cld
mov
fildll
std
mov
jb
sahf
pop
mov
lds
mov
add
adc
rcll
es
das
stos
test
mov
data16
sub
xorl
fcmove
sbb
shr
es
mov
mov
cmp
cmp
inc
not
pushf
sahf
and
inc
or
cmpsl
lret
adc
sti
test
pop
js
in
out
fimuls
cmp
push
jbe
jno
jbe
aad
jmp
std
and
push
jne
scas
cwtl
inc
adc
inc
stc
andb
nop
clc
incb
fadd
fnstsw
jnp
jecxz
fxch
inc
lcall
into
ljmp
sbb
in
jecxz
in
push
pop
cmpsb
ret
mov
scas
pop
push
xor
adc
add
test
xchg
or
add
xchg
pop
fmul
cmpsl
mov
lods
jb
rolb
clc
movsb
je
jp
mov
dec
and
int
push
or
pop
pop
aad
mov
movsl
test
loop
in
nop
stc
and
jge
lods
aam
and
mov
adc
cmp
or
jmp
jp
adc
mov
dec
pop
rcrb
jl
mov
shrl
sbb
rep
scas
sub
jae
mov
enter
jg
out
sbb
pop
add
xchg
nop
popf
jnp
and
pop
test
adcl
ss
pop
cmp
cmp
push
ss
out
lds
xchg
fisubrl
inc
int
mov
setno
dec
push
ret
add
add
int
test
int3
inc
insl
faddl
test
out
inc
movsb
ss
lds
mov
sub
mov
repnz
fsts
dec
sti
push
sbb
arpl
out
cmp
push
jae
jp
mov
mov
and
iret
xchg
in
jmp
sub
cmp
sub
and
pop
mov
cmp
leave
mov
repz
xlat
xchg
adc
aad
out
mov
fldt
cwtl
sub
in
sub
mov
test
std
xor
mov
iret
aam
mov
push
xchg
sub
mov
sti
mov
xchg
testb
cmp
jns
sbb
fistpll
sub
sbbl
sarl
push
lds
pushf
sahf
test
hlt
int
fldcw
mov
xchg
xor
cs
sbb
test
in
mov
dec
lods
sbb
add
cmc
inc
test
fsts
jle
ds
add
xor
dec
jp
sub
xchg
xchg
jnp
les
cmp
mov
int
and
scas
mov
xchg
test
jbe
and
lret
test
fbld
lahf
mov
pop
data16
cli
inc
dec
and
fcompl
ja
outsl
push
xchg
xchg
pop
std
ja
jle
jmp
jmp
ret
test
fcomi
pusha
mov
aaa
iret
out
mov
stc
mov
and
aam
jle
mov
xor
mov
dec
ficoms
xchg
mov
sar
mov
xchg
inc
inc
mov
pusha
mov
movsl
add
pusha
pop
lods
add
fs
stos
pushl
sbb
inc
lahf
mov
add
das
jmp
call
mov
outsl
mov
cmpsb
jl
loope
sbb
mov
cmp
insb
jmp
xorl
hlt
inc
ss
neg
dec
add
mov
inc
mov
dec
test
mov
xchg
push
jnp
clc
mov
cld
sbb
xor
or
mov
in
dec
jne
push
cmp
std
fildl
or
inc
mov
scas
int
xchg
test
adc
aam
mov
xor
gs
cs
lahf
fxch
insb
xor
int3
and
out
pop
sbb
scas
hlt
mov
pop
out
push
push
int3
cld
and
test
inc
jl
lahf
dec
into
in
xchg
fdivrl
iret
fadds
fadd
pop
dec
fdivl
enter
je
test
loope
leave
pushf
out
jmp
push
push
sti
shlb
sub
jns
lahf
inc
cmpl
and
pop
cli
gs
xor
je
cs
clc
insb
mov
cmp
les
mov
sahf
cmp
push
fdivl
lock
or
mov
push
adc
add
es
mov
dec
cmpl
xchg
or
xor
or
xor
es
mov
js
popa
movsl
push
pop
pop
xor
test
sbb
mov
mov
in
push
mov
int
pop
or
rclb
adcl
inc
inc
pop
mov
ror
xor
sbb
or
jecxz
mov
out
dec
rolb
and
scas
xor
xor
fiadds
sbb
sub
sub
out
mov
imull
push
fldt
jo
sub
mov
add
mov
dec
or
hlt
and
jo
dec
mov
das
icebp
sbb
xor
iret
and
push
test
dec
data16
add
adc
mov
cwtl
xor
jae
flds
jp
jmp
js
iret
jle
aaa
sti
inc
sar
push
mov
push
jmp
ds
jp
mov
or
pop
mov
or
std
cs
sbb
ret
jbe
add
jl
lods
inc
ss
roll
and
mov
sub
pop
flds
lods
das
icebp
xchg
jl
jl
outsb
iret
aad
in
inc
mov
xchg
sahf
inc
test
test
es
fldenv
repz
mov
and
lods
ret
rolb
xor
lods
divl
out
sbb
in
mov
add
loop
mov
inc
imul
pusha
out
or
mov
mov
fwait
jb
dec
addr16
fimull
cs
rorl
jae
lds
pop
adc
jmp
in
jge
pop
dec
inc
xchg
dec
and
inc
sbbb
div
sub
rcl
popf
xor
or
sub
cld
clc
fwait
jns
mov
lds
xlat
hlt
xor
out
add
xchg
xchg
jmp
pushf
dec
mov
outsl
std
je
cltd
xor
jp
into
inc
movsb
cmp
cmp
frstpm(287
xchg
inc
out
mov
out
mov
test
movl
jg
xchg
in
pop
cmpsb
cmp
add
xor
hlt
scas
jbe
shrb
adc
adc
lods
incb
cli
and
add
aam
xchg
cmp
ficoml
std
mov
mov
in
enter
pusha
and
sbb
push
mov
out
jnp
xchg
sarb
bound
insb
xorl
and
pop
das
repz
dec
jecxz
xchg
out
xlat
mov
add
mov
hlt
xchg
add
in
add
int3
lods
flds
out
mov
mov
jno
jb
sub
sti
cmp
loope
sbb
push
inc
xchg
arpl
jae
lret
js
mov
fxch
push
loopne
mov
mov
xchg
cld
rorb
and
int3
pop
bound
adcl
sahf
jp
aad
stc
pop
xchg
and
fnsave
mov
je
pop
push
sub
pop
mov
cwtl
es
xchg
sbb
cmp
js
sbb
mov
add
inc
mov
test
daa
ja
cmp
in
hlt
fsts
dec
mov
push
xchg
mov
and
das
fldenv
lods
call
push
mov
sbb
dec
push
int3
imul
fidivrl
add
push
repz
int3
es
test
pop
int
test
stos
pop
das
push
cmpsb
adcl
mov
add
pop
ljmp
in
sbb
xchg
mov
repz
push
or
jne
xor
sbb
mov
mov
test
dec
and
cmpb
cld
ret
mov
pop
push
test
pop
inc
and
jbe
sub
dec
out
pop
and
jle
xlat
loope
lock
push
fidivrl
pushf
mov
out
stc
adc
mov
cs
dec
int3
test
lods
mov
mov
mov
mov
add
mov
adc
clc
fsubrl
shrb
in
sub
frstor
out
fstl
sahf
adc
inc
mov
faddp
jmp
loopne
iret
xlat
iret
cmp
fdiv
jle
cmp
ds
lahf
flds
loope
pop
sub
dec
or
out
push
mov
gs
xor
mov
data16
mov
nop
in
in
dec
int
scas
or
jmp
and
jo
pop
push
lods
out
dec
fisubs
push
out
dec
shrl
scas
inc
test
xor
mov
hlt
jp
divb
sahf
test
aam
jecxz
das
es
xchg
pop
das
shll
adc
mov
in
test
in
std
push
loop
fwait
mov
jne
lods
jo
shlw
out
or
cmp
es
nop
jne
pusha
cmp
popa
xor
jbe
sub
lods
test
stos
fxam
mov
and
sti
cld
movsl
iret
mov
fs
jp
in
sbb
aam
pushf
pop
test
into
dec
mov
and
gs
popa
dec
mov
outsb
jge
and
xchg
lock
pop
in
sub
or
ficompl
sub
rclb
in
xchg
push
scas
imul
sub
sarl
mov
cli
inc
sbb
test
popf
push
add
inc
adc
stos
sarb
call
orl
clc
ficomps
push
xchg
xchg
mov
movsb
sub
subb
push
sbbb
or
jge
jne
and
jmp
xchg
sbb
iret
dec
cli
or
jle
jbe
cmp
push
mov
mov
fsts
es
insb
mov
cltd
int
pop
std
out
into
jne
ja
je
into
or
mov
and
cs
xor
inc
bnd
imul
into
add
dec
mov
scas
pop
pop
out
int3
into
push
xchg
lcall
std
addr16
in
push
jg
enter
imul
mov
mov
repz
mov
daa
mov
loop
hlt
jmp
or
push
cs
cmpsb
fnstcw
in
ljmp
cmpsl
dec
aaa
or
push
mov
or
mov
inc
sub
pop
in
inc
and
sbb
cmp
stos
mov
idivl
incb
sbb
int
cmpsl
testl
lea
xchg
test
or
inc
je
movl
jg
push
mov
mov
pop
in
or
ficompl
sub
lock
mov
sub
sbb
push
mov
jge
push
mov
lcall
test
push
xor
ficomps
data16
mov
cmpsl
mov
std
xchg
xor
shrl
lret
loope
popw
sub
nop
cmp
inc
outsl
push
xchg
repnz
sbb
fists
in
call
add
mov
cmpsl
sahf
mov
pop
ljmp
mov
cmp
fldl
jns
push
and
dec
jg
lea
mov
sub
loope
xor
mul
test
loop
ljmp
jns
and
inc
imulb
mov
addr16
lahf
out
and
sbb
arpl
pop
pushf
dec
ja
in
jge
adc
adc
popa
push
cmp
mov
packssdw
ret
sbbl
shl
inc
mov
mov
xchg
mov
int
mov
test
xor
mov
scas
imul
cmp
aas
add
xchg
mov
mov
bswap
andl
add
push
lret
pop
jnp
pop
pop
push
fstps
push
lahf
out
dec
mov
test
jl
cmp
adc
cmpsb
mov
mov
adc
xchg
das
xchg
incb
add
ds
cmpsl
jb
sarb
lcall
in
cmp
stc
cmp
jnp
pop
in
and
mov
xchg
nopl
jnp
xchg
cmpsl
add
fnstenvs
ds
dec
dec
push
sti
sti
int
cmp
cld
cmp
in
mov
jp
inc
es
test
fs
cmpsl
fs
mov
mov
nop
test
iret
and
push
insb
inc
daa
pushf
out
adc
roll
pop
push
insl
stc
scas
jns
push
fs
mov
test
push
scas
pusha
jb
pushf
dec
mov
xor
mov
fdivrs
push
shll
pop
shl
mov
aam
out
jae
test
fwait
in
shrl
inc
cmp
je
sbb
adc
cwtl
mov
in
mov
adc
mov
xchg
or
pop
hlt
or
or
int
jnp
movsb
test
push
in
jae
xor
pop
fcmovnb
std
or
in
cmpsl
push
fcomi
sub
test
lods
and
jbe
mov
jmp
not
popf
and
xchg
inc
dec
das
cmp
push
push
outsl
mov
xchg
mov
imul
mov
pushf
das
dec
sbb
jne
jp
sub
jl
inc
js
push
clc
cmpsb
cld
orb
cmp
pop
shrl
subb
adc
insb
fidivrl
fs
cli
aam
jo
and
inc
outsl
jns
lea
mov
mov
add
push
sbb
adc
adc
adc
lahf
or
or
cmc
pop
dec
mov
xor
mov
ds
sbb
dec
ret
add
inc
lret
xchg
flds
dec
into
mov
push
or
xlat
lods
inc
add
mov
int3
mov
sub
mov
mov
mov
adc
movsb
sub
mov
sub
add
jp
stos
xor
pop
jnp
jl
mov
sub
cmc
mov
clc
std
aam
rolb
jl
inc
xlat
in
stc
out
pop
mov
jne
adcb
cmpsb
mov
addr16
fwait
cmc
scas
jl
jge
loop
mov
es
ficoms
xlat
je
dec
jmp
jg
pop
lcall
dec
nop
jl
inc
dec
rorb
sbb
out
cmp
xchg
sbb
mov
pop
int
pushf
xor
lret
push
and
xchg
test
pop
mov
outsl
dec
cmp
int
xor
test
mov
mov
test
mov
les
and
cmpsl
cmp
and
jns
add
ror
pusha
ds
out
fwait
test
xor
repnz
adc
mov
cmp
push
dec
les
aaa
pop
arpl
lods
std
test
mov
je
mov
negb
jp
lods
scas
push
pop
push
ja
xor
push
dec
aad
or
int
clc
xor
xchg
add
sub
inc
psubusw
add
repz
repz
das
sbb
dec
adc
hlt
push
inc
bound
hlt
sahf
test
push
lcall
pushf
mov
mov
add
sahf
and
mov
call
call
jecxz
test
movsb
add
in
mov
fidivrl
fsts
lock
sbb
scas
sbb
sbb
xor
mov
push
inc
lahf
shl
dec
nop
test
clc
dec
mov
stos
pop
out
push
add
mov
adc
fidivrs
insl
es
xchg
inc
cli
fwait
and
pushf
and
push
mov
mov
icebp
dec
push
flds
sbb
test
adc
pop
add
sahf
andb
and
jecxz
lcall
jmp
xor
mov
mov
xor
jae
je
cwtl
addr16
xchg
mov
xor
mov
adc
sbb
test
es
inc
adc
mov
pop
adc
mov
push
jb
int3
mov
inc
ret
sti
add
lds
mov
fs
xor
pop
cmp
xor
xchg
rcll
out
push
sub
ret
test
jo
mov
push
jl
cltd
and
in
fildl
in
flds
inc
mov
jp
cmp
inc
repz
adc
sbb
mov
mov
dec
mov
push
scas
inc
rorl
test
mov
rorb
lock
add
xor
mov
pop
mov
jl
popa
sub
xor
ffree
mov
inc
into
cmp
xchg
xchg
scas
femms
in
push
cmp
cltd
scas
addr16
shlb
sarl
fnstcw
out
fldenv
sbb
jle
mov
shl
test
arpl
inc
mov
mov
and
in
jns
ljmp
in
mov
ficomps
enter
insb
xor
icebp
ret
or
scas
call
and
add
sub
jle
jb
aad
sti
xchg
or
xchg
jo
es
addr16
ror
mov
pop
cmp
cmp
pop
mov
int3
outsb
cmp
test
into
mov
mov
cmpsb
add
call
shrl
mov
call
xor
cmp
loop
xor
add
std
sbb
adc
icebp
push
popa
jno
ficoms
mov
push
pop
lcall
addr16
scas
es
mov
pop
jl
mov
sbb
int
ret
jmp
or
and
ss
in
dec
xchg
xorb
mov
xlat
sbbb
cwtl
jp
test
in
mov
jno
hlt
xrelease
xchg
or
xor
pop
fnstcw
mov
xchg
scas
dec
mov
popa
mov
arpl
rorb
or
mov
jb
mov
sahf
sbb
dec
cwtl
and
push
jecxz
or
jge
cmp
adc
or
jge
aad
mov
loope
xor
flds
inc
test
inc
adc
ja
ljmp
sub
pop
xchg
aad
fmul
mov
inc
jb
lods
dec
icebp
int3
subl
int3
push
mov
pop
rorb
mov
sbb
incl
push
sub
je
inc
mov
or
sbb
add
mov
flds
or
je
mov
mov
int
mov
lods
imul
push
jle
sub
scas
imul
pusha
inc
into
shl
mov
hlt
sub
jno
popa
out
sbb
mov
es
ret
xchg
fldenv
and
mov
fistpll
push
fnstenv
cmp
test
imul
inc
sbb
outsl
jecxz
pop
and
mov
pop
fadd
orl
cmpsl
popa
std
add
or
vpacksswb
out
and
push
leave
test
out
mov
in
jno
rep
mov
mov
lahf
repnz
jecxz
cmp
cli
mov
lahf
int3
cmp
popa
push
outsb
nop
mov
lock
lea
mov
sahf
mov
add
fsubrl
inc
outsb
jo
pop
int
jle
push
cmpsl
push
mov
mov
jmp
scas
movsl
sub
jne
cmpsb
mov
les
enter
sbb
pop
test
mov
ficomps
gs
pop
pop
inc
in
inc
rclb
cld
int3
sub
arpl
pop
pusha
lods
cmp
stos
notl
push
push
mov
fldl2e
add
adc
add
mov
xchg
gs
sbb
orb
popf
sub
cli
jle
ja
out
inc
or
push
pop
shlb
repz
and
mov
mov
pop
loope
data16
dec
leave
sahf
lock
add
sbb
scas
das
fwait
sahf
dec
xchg
adc
push
or
mov
fisttpll
movsb
sbb
movsl
daa
fiadds
add
shl
adc
jge
int3
out
fsubr
es
fldcw
cld
jmp
xchg
mov
mov
shrb
ret
sub
out
scas
or
xor
push
dec
add
xchg
insl
cmpsl
mov
cmp
shlb
dec
arpl
ret
or
dec
in
bound
or
dec
shlb
mov
xor
push
das
test
sbb
ja
stos
sbb
fbld
sbb
and
xor
jne
jae
aaa
mov
div
and
pop
inc
scas
int
out
mov
xchg
dec
loop
mov
dec
jp
pop
out
shl
and
dec
xchg
pop
mov
idivb
sbb
je
dec
mov
sub
push
out
adc
push
sbb
xchg
pop
push
mov
push
lcall
jae
xlat
dec
mov
add
mov
add
mov
or
fsts
shrb
popa
sbb
pop
lock
mov
jns
sbb
in
and
dec
sbb
andb
add
mov
push
mov
jp
int
adc
xchg
and
fmull
pop
rcrb
cld
mov
xlat
loop
pop
fsubrp
add
inc
out
ret
fmull
push
push
cmp
and
mov
insb
add
cmpsb
popa
gs
notl
orb
mov
mov
outsl
inc
lds
loope
jns
repz
cmp
push
push
sbb
sti
lcall
iret
xchg
fucomi
mov
insb
int
fsubrp
xlat
lahf
pop
lods
icebp
test
or
sub
jbe
inc
int3
sbb
push
int3
dec
or
lods
add
and
and
sbb
mov
cmp
adc
test
adc
scas
jne
or
inc
inc
popf
add
fstps
insb
repz
hlt
jne
aaa
mov
push
mov
enter
mov
out
and
mov
in
test
cmpsb
mov
inc
jmp
pop
aad
jnp
and
fidivl
cmp
pop
pop
fwait
jae
in
jo
cmpsl
jnp
cmp
outsl
jbe
daa
outsl
int
mov
push
sti
xchg
sub
out
cld
sbb
pusha
ret
sub
movsl
add
sbb
pop
mov
mov
dec
movsl
sbb
cmpsb
sbb
mov
inc
and
test
neg
push
mov
mov
arpl
std
inc
data16
movsl
loop
pop
mov
pop
mov
popf
inc
cmp
sub
xchg
jnp
inc
in
daa
dec
add
jle
cmp
inc
xor
jmp
jl
jb
fnstsw
test
stc
aad
loopne
xor
imul
pcmpeqd
orb
in
cmp
adc
ljmp
xchg
fistps
xchg
rclb
push
ljmp
pop
cmp
fnstsw
mov
and
int3
test
int3
movsb
div
repz
stos
out
mov
fwait
pop
or
int
addr16
ret
stos
push
add
jmp
imulb
in
push
lods
jle
fs
pusha
push
test
repz
enter
jo
into
adc
jl
xchg
lock
xor
nop
xchg
lret
mov
pop
filds
pop
decb
aam
in
sub
dec
stc
call
cmp
mov
std
lret
and
mov
mov
adc
lcall
lock
or
dec
xchg
mov
and
int
lods
jecxz
push
sub
push
mov
pop
popf
jo
adc
jns
je
add
lods
shll
and
and
ret
pusha
sbb
xor
jle
add
hlt
jnp
mov
movsb
or
push
pop
cs
pop
jmp
xor
icebp
and
scas
cmpl
xor
fwait
lods
scas
lahf
jae
cmp
into
lcall
push
mov
or
imul
mov
test
popl
mov
rcrl
test
inc
mov
insl
orl
fldcw
dec
add
add
and
leave
cmp
aam
lock
pop
in
inc
jne
mov
dec
dec
fs
sbb
test
or
xchg
push
push
das
scas
lods
and
ficomps
mov
jge
mov
test
jmp
jle
pop
jnp
fimuls
repz
jb
mov
daa
mov
sti
xor
int
jbe
in
loopne
enter
or
pusha
pop
movsb
cmc
sbb
mull
inc
pop
ljmp
cld
add
jge
mov
and
loopne
pop
xchg
lea
mov
stc
lock
addl
mov
es
lret
stc
adc
pop
in
lcall
mov
and
mul
jno
add
jmp
aaa
xchg
jmp
and
clc
fsubrl
js
es
and
stos
in
inc
fwait
iret
cli
es
and
les
xchg
jo
xor
pop
xchg
mov
inc
jle
push
out
mov
xor
in
pop
int
data16
xchg
mov
xchg
cmp
add
imul
cmp
push
push
popf
adc
fcompl
xor
pop
xchg
stos
mov
xchg
sbb
inc
je
test
lcall
jbe
xor
push
pop
and
mov
mov
push
hlt
fwait
mov
loope
pop
shrb
and
jecxz
adc
sbb
into
xor
out
rcrb
addb
fdiv
push
scas
jno
xchg
push
stc
test
or
dec
ljmp
mov
jl
rcrb
dec
cmp
mov
push
xchg
shlb
lods
jnp
or
hlt
xchg
and
aam
fnsave
and
sbb
lret
loop
mov
pop
scas
cmpsl
test
xchg
fdivp
mov
push
mov
mov
iret
push
pop
arpl
test
test
sub
add
sti
mov
mov
xor
sahf
mov
add
jns
scas
cmp
xchg
rclb
add
xlat
xchg
push
xchg
or
add
shlb
sti
xchg
leave
cmp
jmp
mov
or
sbb
xor
push
pop
jbe
cmp
jmp
or
int3
push
cli
scas
cmpsb
pop
dec
std
js
push
add
xchg
push
test
je
inc
pop
mov
jo
add
mov
and
mov
jnp
clc
sbbl
mov
xchg
cmp
jae
movsb
xor
push
into
fsubrl
dec
out
scas
aas
add
cltd
mov
lret
xlat
cmp
scas
mov
in
mov
idivl
pop
sub
pop
fildll
cmpsb
cmp
and
or
or
test
movsb
mov
dec
out
pop
mov
test
add
add
mov
mov
jae
mov
addl
addr16
fimuls
sub
popa
push
scas
xchg
mov
xchg
out
daa
je
popf
push
sahf
enter
cmpsl
mov
lock
sbb
push
mov
pop
rorl
xchg
aaa
xor
pop
mov
cmp
scas
xchg
pop
cmpsl
out
sbb
mov
mov
cwtl
inc
movsl
dec
and
fsubl
push
sbb
dec
xchg
dec
movsb
mov
lods
dec
jecxz
stc
out
mov
mov
inc
inc
push
hlt
jnp
xor
test
add
mov
cmp
outsl
shl
test
hlt
push
fwait
call
mov
sbbb
sbb
arpl
cmc
test
loopne
movsb
into
shrl
sbb
imul
push
xor
mov
mov
mov
xchg
in
mov
je
mov
imul
xchg
push
popa
and
adc
je
inc
mov
mov
xchg
sub
mov
dec
sbb
or
scas
dec
xor
xlat
pop
xchg
mov
pop
test
insl
mov
mov
sub
lret
sbb
cmpl
cmp
dec
mov
and
lret
adc
pop
pusha
int3
mov
sti
cmp
xchg
jo
inc
mov
mov
inc
div
out
rcl
outsb
js
and
mov
das
push
and
lods
mov
dec
push
lret
in
lods
sub
shr
addl
add
cs
mov
jmp
and
icebp
and
pop
dec
ss
lahf
popf
outsb
adc
stc
mov
in
add
adc
mov
aad
ret
fiadds
sub
inc
fimull
mov
test
in
mov
in
repz
jecxz
mov
or
jno
pushf
push
outsl
icebp
xchg
pop
mov
xchg
pop
inc
cmc
or
inc
sub
cmp
aam
fdiv
inc
mov
pop
mov
fcoml
or
cmpsb
loope
ret
sub
xlat
test
test
les
fs
xchg
out
test
in
cmpsl
lods
cmp
or
fldcw
dec
adc
jbe
cmp
sti
mov
imulb
sbb
mov
mov
mov
stc
inc
leave
mov
mov
inc
dec
mov
mov
xchg
jecxz
js
dec
rolb
push
pop
and
mov
cs
lds
jge
inc
test
int
push
push
fsubrl
mov
mov
mov
push
inc
push
stos
mov
mov
adc
in
fld
push
movsl
mov
int
cmp
mov
pop
xor
les
mov
sbb
cmpsl
into
sbb
mov
and
pop
and
cmp
loope
lods
adc
add
in
mov
lock
xchg
out
cmp
movsb
lods
das
jae
mov
out
pop
das
testb
and
gs
es
mov
shr
pop
or
jp
addr16
cli
xchg
mov
jae
inc
or
test
xchg
test
scas
lret
mov
aas
arpl
addb
xchg
mov
pushf
jge
mov
mov
hlt
sbb
movsb
jnp
std
mov
inc
push
add
jecxz
mov
jp
push
mov
inc
dec
pop
es
cmpb
fstps
jns
scas
mov
rcll
pop
jo
in
out
sub
cmp
popf
inc
dec
cmp
mulb
outsl
mov
fisubs
mov
scas
scas
bound
lock
addb
scas
hlt
repnz
xor
out
scas
cltd
test
push
int
shll
or
in
mov
pop
lds
inc
movsl
icebp
jb
dec
jp
stc
cmp
pop
repz
ja
xor
mov
jns
insb
cmp
orl
sub
jae
mov
test
mov
cmp
aas
jbe
xor
dec
lcall
test
dec
out
mulb
mov
adc
push
movsl
ret
pop
xchg
nop
stc
sbb
jns
xchg
es
dec
pop
jle
loopne
das
js
cmp
pop
ss
mov
or
xor
fnstcw
mov
sarl
int3
mull
jle
out
arpl
mov
push
andb
xchg
shlb
push
loope
imul
ret
mov
lret
mov
push
int
repz
mov
popa
jo
pop
sub
jmp
nop
push
mov
scas
jle
adc
cltd
cmpsb
inc
cmp
sub
ss
cmpsl
jge
push
xor
call
lret
xchg
mov
mov
addr16
or
push
outsb
out
pop
fs
push
stc
inc
outsl
aaa
inc
mov
filds
imul
ds
inc
inc
testl
push
pop
lds
lods
mov
xor
flds
test
fstps
pop
inc
and
pop
and
movsb
inc
fistl
push
sbb
jnp
mov
inc
sbb
pop
lret
mov
mov
dec
fs
cs
fcoml
loope
fnstcw
push
jecxz
movsb
xchg
cmp
mov
fstps
jl
pop
push
mov
or
mov
inc
fnstenv
push
outsb
cwtl
nop
clc
out
inc
jnp
and
push
popf
nop
xchg
mov
sbb
jae
jbe
mov
movsb
out
std
mov
insl
lea
cld
fsubrl
cmpl
shlb
jmp
xor
fcmovu
fldl2e
test
jp
dec
jmp
add
sbb
mov
jb
and
test
or
push
mov
mov
mov
movsl
dec
sbb
lods
pop
aad
push
inc
mov
jge
fs
push
stos
cld
xchg
push
push
insb
lcall
fwait
stc
and
sbb
and
mov
and
add
xchg
sub
inc
jbe
jmp
enter
cli
xchg
sbb
test
adcl
fisttpll
scas
addr16
cmp
xor
mulb
inc
lret
addr16
push
and
fwait
nop
icebp
pushf
js
jl
add
rolb
adc
mov
daa
lods
and
xor
dec
pop
cltd
test
popf
cmp
das
lods
cmp
mov
rcll
sub
fdivrp
add
imul
xchg
andb
inc
mov
mov
fidivs
in
dec
jp
mov
and
inc
fmuls
mov
sbb
fwait
int
lret
daa
add
sub
xor
dec
pusha
jg
mov
test
xchg
jbe
mov
jmp
inc
arpl
das
cmpsb
pop
int3
hlt
fisttpl
cli
sub
sti
mov
leave
and
jecxz
int
and
daa
jne
jmp
sbb
adc
cli
mov
jno
fwait
push
push
cld
mov
mov
and
mov
popf
cmc
jecxz
andl
mov
out
loope
push
mov
push
xchg
sbb
xchg
lret
outsb
sbb
and
out
adc
mov
jb
push
sub
test
cmp
mov
scas
cwtl
jmp
mov
int
cmpl
mov
test
pop
int3
mov
xor
mov
sub
popf
dec
std
loop
je
in
cli
in
jno
or
fiadds
mov
int
adc
xor
fcomp
or
out
int
cmp
mov
dec
aaa
sub
std
cmp
in
inc
stos
int3
inc
or
shll
push
and
rorl
cwtl
out
js
sbb
mov
jge
xor
fmuls
cmpsb
pop
sbb
out
mov
jle
mov
fld
in
lods
call
mov
push
adc
lahf
add
scas
imul
scas
mov
adc
mov
jecxz
lds
pop
pop
xchg
mov
sbb
jmp
mov
cmp
xchg
mov
xchg
hlt
lods
fimuls
stc
add
iret
and
les
les
sbb
mov
ss
jbe
cmp
and
cmpb
mov
rorb
adc
xlat
or
xchg
fsubrl
mov
imul
xchg
jmp
outsl
in
pop
movsl
aaa
lds
push
inc
pusha
je
fwait
out
das
mov
aad
js
aad
sub
outsl
xchg
mov
popf
xchg
bound
out
sarl
lcall
push
subl
sub
movsl
sbb
pop
sbbl
stos
jne
lock
mov
push
push
test
cmp
push
in
ds
pop
outsl
jmp
cmp
fdivrl
pop
xchg
dec
lcall
in
aam
push
movsl
fldenv
add
or
popf
out
cmp
popl
mov
mov
inc
repnz
or
cmp
lock
das
shll
push
div
bound
inc
mov
int3
lret
jecxz
cmc
int
fidivrl
mov
enter
hlt
les
fmul
push
add
inc
pop
ljmp
xor
pop
push
push
sahf
pop
insl
mov
sub
mov
movsl
les
repnz
aad
sbb
push
movsb
cmp
jo
movsb
pop
hlt
outsb
and
sub
loope
add
sarl
das
xlat
adc
jnp
fsub
cmpb
leave
inc
addr16
mov
jle
jmp
push
jl
adc
shr
xchg
in
call
scas
cli
dec
test
jp
fisubrs
xor
sub
sbb
adc
mov
repz
int
or
or
cmp
push
ret
repz
adc
cs
lret
loop
cmp
jg
out
test
inc
dec
fldt
or
cli
mov
dec
in
mov
movsl
dec
loopne
cmp
rorb
pop
push
cmp
dec
scas
push
and
sbb
mov
adc
mov
pop
cmp
jle
xor
movntq
out
test
testb
pop
cli
test
fimuls
test
in
push
arpl
inc
arpl
sbb
fsubrl
mov
incb
push
repz
je
nop
stc
dec
pushw
pop
push
mov
cmpsl
add
cli
and
mov
int3
inc
sbb
sbb
pop
jl
lock
icebp
int
fwait
test
ror
sub
push
test
loop
mov
js
xchg
mov
sbbb
popl
fisubs
pop
sbbb
push
cmp
jl
in
push
pop
lea
push
jmp
ficoms
insb
lret
jnp
out
movsb
mov
popa
inc
dec
pop
out
jno
and
movsb
scas
dec
test
addr16
mov
test
mov
cmp
lret
lret
xor
leave
and
pop
data16
cltd
dec
fmuls
aam
sub
cld
cmp
ret
push
test
xor
inc
outsl
push
data16
sub
bound
dec
xchg
fstl
push
xchg
aam
jnp
adc
shl
imul
pop
sbb
or
sub
and
out
or
inc
xchg
lds
test
loope
pop
fsubrp
lods
aam
dec
std
lods
stos
mov
scas
rol
das
fnstenv
mov
mov
in
fs
mov
mov
imul
and
inc
mov
pop
sar
push
cwtl
fiadds
xorb
int
loopne
cld
test
mov
xchg
loope
inc
imul
xchg
pop
lods
jmp
test
xor
mov
mov
sbb
and
sbbb
mov
cmp
test
ljmp
movsb
sub
nop
dec
sub
fucomip
jge
std
sub
sbb
stc
int
sbb
inc
pop
divb
adc
loop
xchg
push
dec
or
jae
xor
fisubrs
inc
xchg
mov
push
lret
scas
out
lods
sbb
test
rcrb
push
loope,pn
mov
mov
fsts
mov
call
push
dec
push
sbb
pop
shlb
push
into
sbb
mov
ss
xor
imul
xlat
test
cmp
iret
iret
out
pop
je
sbb
loope
sbb
leave
rorl
arpl
push
fisttpl
jl
dec
nop
xchg
je
push
pusha
fisubl
roll
sbb
or
push
into
and
enter
lret
cmp
flds
xchg
xchg
ss
xchg
out
out
sbb
mov
aam
sbb
or
cmc
mov
xor
sub
and
inc
or
inc
sub
adc
shl
in
mov
or
push
imul
mov
dec
arpl
repnz
pop
rorb
jmp
mov
xchg
cmp
in
mov
push
pop
mov
inc
sbb
loop
push
fisttpl
fsubrl
gs
mov
ja
mov
mov
xchg
int
xchg
jg
mov
test
sub
sbb
cmp
xchg
dec
mov
xor
std
xchg
outsl
test
inc
lea
jns
adc
add
in
mov
lods
mov
and
push
movsb
test
push
mov
in
push
mov
flds
and
cmp
cmpsb
dec
pop
add
sub
xchg
outsl
mov
lahf
mov
cmpsl
mov
dec
or
mov
cmp
adc
add
or
test
into
iret
popf
xor
mov
or
mov
fwait
jecxz
add
mov
fyl2x
scas
fsubrl
mov
add
mov
pop
adc
cmp
fld
sub
aad
outsb
cmp
out
test
dec
subl
insl
xchg
std
loopne
xchg
jmp
xor
ljmp
mov
ret
jmp
shrl
lea
pop
pusha
cs
dec
cltd
pop
loope
addr16
or
rorl
lcall
xchg
adc
and
and
jns
rorb
adc
inc
jp
stos
sub
movsb
push
popf
mov
lcall
test
mov
sbb
fldcw
add
adc
fstp
adc
fsubp
mov
dec
mov
inc
inc
sahf
sbb
mov
xor
lods
addl
test
pop
xchg
mov
pushf
dec
repz
lret
mov
xchg
shr
sarb
and
sbb
orl
scas
jecxz
dec
mov
rcl
loope
scas
xchg
movsl
xchg
mov
sub
cmp
popf
test
mov
mov
sub
cmp
mov
cli
cmp
mov
pusha
lret
push
lahf
xchg
lock
test
dec
sbb
pop
pop
xchg
mov
and
loope
in
ja
jp
mov
push
and
test
addr16
in
scas
and
pop
sub
pop
fmulp
xchg
js
jecxz
in
mov
gs
mov
scas
push
test
sbb
les
adc
mov
cli
aad
fdiv
lcall
xchg
cmpb
pop
lret
cmp
nop
lds
or
dec
pop
push
stc
call
lods
hlt
repz
cld
lea
or
xor
mov
in
arpl
push
push
shll
rcr
fildl
dec
out
xchg
cmpsb
push
mov
ret
sbb
xchg
lods
dec
or
popa
cmp
cwtl
mov
data16
rcl
cs
sub
jnp
test
lods
adc
test
add
icebp
mov
mov
mov
fisubs
mov
repz
fldt
and
add
jp
cmpsl
scas
mov
mov
cmpsl
pushf
cmp
inc
pop
out
movsb
xor
into
insb
mov
mov
enter
xor
mov
jle
ss
gs
mov
dec
push
dec
xor
lods
lcall
inc
pop
addr16
xchg
fld1
jae
xor
lds
xchg
icebp
fxch
imull
call
mov
jbe
add
cmpsl
mul
pop
cmp
shr
bsf
mov
xor
add
arpl
dec
adc
pop
cmp
in
ljmp
push
or
dec
iret
ja
es
cltd
cmp
repz
inc
les
dec
mov
sahf
es
or
adc
cmp
mov
push
fdivl
jnp
call
icebp
lcall
andl
fnsave
popf
dec
dec
sub
pop
pushl
mov
movsb
sbb
and
adc
inc
repnz
orl
lock
mov
sbb
xchg
jns
jmp
mov
xor
call
in
pop
sbb
xchg
repz
xor
cmp
aad
insl
shrb
into
fcompl
addr16
or
inc
mov
dec
cs
mov
test
xchg
jo
xchg
fsubrl
jp
pop
adc
mov
jno
mov
roll
mov
daa
cmp
nop
gs
sbb
push
movsb
sbb
movsl
in
push
std
flds
pop
fcomps
pop
ficompl
in
clc
xlat
inc
push
xchg
sub
ret
test
mov
add
mov
mov
fs
jg
mov
aaa
sbb
popa
into
mov
insb
pop
xlat
inc
js
cmp
add
test
fcoml
addr16
fnstenv
aas
sbb
loop
ficoms
call
xchg
cmovle
in
lods
and
fnstcw
lock
scas
sub
pop
daa
jge
push
stos
add
test
push
addr16
cli
aad
cmpsl
pop
pop
mov
sbb
push
adc
pop
fiaddl
in
data16
or
xchg
push
cmp
out
adc
jno
mov
arpl
fldt
sbb
fxch
daa
icebp
loop
das
push
push
in
sbb
adc
mov
xchg
mov
mul
fcmovne
lret
out
out
xchg
call
loope
pop
sub
fwait
dec
in
sub
arpl
inc
scas
incb
mov
push
add
mov
rclb
data16
lret
or
repz
sbb
or
mov
or
pop
and
shrb
xchg
dec
or
adc
test
pushf
adc
dec
cli
out
lret
pop
inc
mov
pop
rorb
cmp
mov
cmp
sbb
mov
into
inc
cmp
xor
dec
pop
stc
das
pop
repnz
int
xchg
mov
mov
inc
ss
movsb
hlt
push
xor
lods
je
rcl
pop
cld
dec
cmp
nop
es
divb
fwait
mov
cmpsb
lock
lcall
mov
iret
or
sbb
push
and
mov
jecxz
les
xor
sub
jle
repz
insl
mov
arpl
lahf
test
popa
jne
test
mov
es
jne
imul
or
inc
or
sbbb
and
mov
xchg
inc
je
int
cmp
fwait
adc
popf
mov
lods
xchg
mov
dec
das
out
rep
jmp
jle
rcrl
mov
mov
push
inc
clc
lahf
out
pop
vandpd
out
or
es
mov
inc
fucomip
fiaddl
shrl
mov
mov
xchg
cmpsl
fnstsw
push
mov
pop
cmc
into
pop
inc
sub
js
fsubrl
or
or
cld
pop
mov
out
xor
jmp
xor
xor
xor
and
or
sbb
cwtl
mov
mov
xchg
pop
test
or
lcall
cmpb
add
das
flds
out
out
lds
xchg
out
pop
xlat
mov
std
lods
xchg
push
xchg
cmc
call
xor
mov
mov
xchg
test
adc
adc
sbb
cmpsb
and
dec
pop
scas
push
mov
sub
lock
or
mov
inc
cmp
cmpsb
cmpsb
push
inc
jge
mov
fidivs
mov
or
mov
or
jnp
or
out
stc
insb
push
push
loop
pop
ljmp
into
sub
xchg
adc
int
mov
sti
adcl
mov
push
popf
adc
mov
aad
pop
popa
xchg
test
adc
mov
xor
test
scas
movsl
scas
push
jge
dec
lock
popa
mov
mov
pavgw
dec
mull
testl
cli
and
sub
icebp
rorl
mov
bound
je
pop
mov
sbb
subb
or
jb
aam
sbb
sarb
arpl
xor
mov
push
cmp
int3
test
pop
push
mov
in
lea
dec
test
orb
mov
adc
mov
mov
xchg
and
xor
movsb
sbb
jle
sub
xor
add
hlt
fstps
in
es
cmp
xchg
orb
push
add
cmpsb
push
dec
test
popf
jmp
ret
dec
fstl
xchg
imul
js
adc
xchg
inc
and
pop
icebp
das
call
adc
mov
xchg
dec
jnp
adc
jae
inc
sbb
loope
mov
inc
jnp
lds
or
jo
movsl
out
sbbb
inc
aam
rcrl
outsb
fisubs
stc
fcoml
xor
push
popf
jmp
add
pop
data16
sbb
in
mov
mov
lods
xrelease
into
rorl
and
outsl
inc
test
push
adc
out
ficomps
mov
test
fldt
fwait
mov
call
mov
roll
inc
popa
fisubrs
mov
jl
test
subl
lods
mov
and
imul
out
test
into
in
xchg
sbb
sbb
mov
iret
pop
dec
fisubs
xor
test
decl
enter
mov
loop
sahf
or
mov
divl
popf
test
cli
mov
xor
addr16
lock
fsubl
out
cli
adcb
lock
pop
movsl
divb
jns
inc
in
lods
dec
mov
fisttpll
mov
mov
sti
mov
insb
pusha
inc
sbb
xor
adc
pop
sub
scas
xchg
aad
test
ficomps
flds
inc
dec
sbb
mov
pushf
hlt
repz
add
imul
dec
and
fidivs
jle
mov
ds
cli
sarb
cs
and
sbb
lods
xor
adc
push
loopne
lods
lcall
pop
mov
aam
leave
rorl
push
or
push
and
push
jg
out
and
fdivp
clc
jg
imul
sbb
scas
cmpsl
push
mov
lret
inc
lods
adc
or
fistl
je
pop
mov
repz
push
scas
add
jl
cs
outsl
ja
jae
test
fnstcw
mov
cmp
jge
je
fsts
bound
xlat
sub
push
popf
pop
out
jae
and
mov
mov
fsubrl
sub
or
int
jb
jae
out
cmp
scas
aam
mov
pop
icebp
sti
es
push
adc
jae
lods
jno
stc
jb
clc
xchg
lock
jg
xchg
jbe
sbb
push
lods
scas
add
xchg
sbb
xchg
lahf
push
lds
das
out
in
mov
frstor
jae
lods
dec
inc
push
xor
mov
into
or
inc
sahf
and
and
jae
shr
sub
std
pop
scas
and
fdivr
mov
lcall
fldenv
addr16
push
mov
push
mov
mov
fsubl
cmpsl
mov
movsl
repnz
xchg
or
pop
jnp
sbb
add
sahf
lods
jbe
inc
inc
repz
jge
jbe
cmp
push
mov
jae
mov
cs
mov
mov
push
mov
repnz
pop
lret
mov
lds
jmp
push
int
mov
popa
mov
movsb
fnstsw
fisttps
insb
mov
icebp
inc
lods
mov
in
or
inc
loope
mov
cmp
fnstcw
jbe
int3
cmp
or
hlt
jnp
jo
neg
arpl
dec
mov
pop
loope
sti
arpl
mov
es
cmp
push
rcll
lock
and
mov
rorl
sub
mov
test
add
mov
or
movsb
pusha
push
arpl
cmpsb
inc
and
cmpsl
jnp
inc
les
mov
mov
fcmovu
cmp
cli
rorl
mov
orb
in
icebp
mov
xcrypt-cbc
cmpsl
xchg
sbb
inc
mov
mov
neg
pusha
enter
mov
shrl
dec
xlat
cmp
and
mov
pushl
movsb
mov
popl
xchg
mov
add
lods
scas
adc
fcompl
pop
mov
mov
idivb
push
mov
cmp
out
xlat
fisttpll
adc
scas
sbb
adc
jecxz
pop
stos
xchg
lods
sbb
xchg
push
cmp
mov
gs
scas
push
jge
insl
lods
jne
cmpsb
out
inc
pop
sub
int
mov
repz
inc
aam
xor
shll
jge
dec
mov
cmpsb
pop
je
dec
cmc
lret
sub
add
cmpsb
cltd
leave
inc
movsl
int
pop
or
sti
mov
test
fisubrl
mov
pop
jg
lods
xor
and
out
xchg
cwtl
cmp
cmpl
mov
adc
pop
adc
orb
aaa
inc
in
roll
mov
lods
cmp
not
jns
test
fstps
testl
sbbb
jnp
movsb
sahf
outsl
xor
loopne
das
mov
sub
mulb
test
jno
inc
mov
or
pop
fdiv
fsubrs
daa
test
sub
jge
jg
sub
push
scas
cmp
icebp
cld
jle
stos
out
leave
push
xchg
mov
test
xchg
push
repnz
dec
ss
mov
inc
pop
inc
cld
mov
and
push
in
sub
or
out
in
jb
mov
test
or
pop
fnstcw
or
jb
das
sbb
jp
dec
scas
or
pop
mov
into
mov
loopne
mov
icebp
into
inc
loop
fisubrs
shll
xchg
adc
mov
test
stos
push
into
rcll
and
xchg
dec
call
mov
nop
cld
fidivrs
mov
pop
stos
lods
push
and
adc
in
or
das
dec
cmp
outsl
cmp
shl
xchg
daa
adc
cld
test
clc
jo
or
push
negl
sub
pop
aad
sub
pop
inc
xchg
adc
add
sar
mov
daa
ret
out
mov
jae
popa
sub
imul
pop
imul
cmc
or
in
push
mov
stos
scas
repnz
fldcw
xchg
icebp
pusha
repz
std
enter
test
cmpsb
hlt
scas
mov
out
scas
pop
nop
inc
sbb
aaa
repnz
or
movsb
faddl
cmp
mov
fdivrs
fadds
mov
mov
fsts
test
ljmp
add
jl
mov
movb
xorb
cmpsl
lcall
fldcw
pop
push
xor
lret
adc
jecxz
pop
inc
stc
mov
push
not
cld
lds
mov
mov
xchg
loop
sarl
test
sti
stc
xlat
js
into
inc
push
adc
stos
int3
dec
std
insb
lcall
popa
push
imul
or
enter
cmp
scas
add
xchg
dec
push
fistpl
xchg
xor
jne
push
cltd
cmp
nop
inc
mov
pusha
sbb
loopne
and
out
les
xorl
xchg
cmpsl
mov
pop
mov
popf
loope
push
inc
imul
daa
sbb
jno
mov
sub
outsb
ficomps
or
jg
clc
fldenv
das
xchg
and
lods
inc
fs
add
cmp
cmp
jl
fnstcw
dec
rcll
test
mov
pop
fsubs
push
sbb
adc
mov
jae
push
sub
aaa
int
xor
mov
jle
loope
push
std
dec
lret
aaa
cmpsb
out
mov
sbb
jae
js
sub
inc
mov
xorl
es
gs
pop
push
push
xchg
stos
and
aaa
std
andb
push
mov
xchg
push
cmpsb
xchg
xor
repnz
pop
int
sbb
sub
mov
mov
mov
xor
sub
ret
and
lods
inc
scas
pop
sbb
adc
test
cltd
test
mov
ss
mov
mov
push
adc
push
pop
sbb
xchg
std
into
lea
popa
or
cld
lods
loopne
fwait
jmp
js
jp
ficoms
punpckhdq
jge
insl
cwtl
mov
sbb
xchg
pop
insl
pushf
sahf
mov
mov
xchg
jb
push
pop
inc
xor
push
mov
cmp
insl
lods
ficomps
xchg
fcompl
jbe
imul
out
jnp
mov
out
pop
dec
dec
inc
sub
bound
aaa
mov
pop
sahf
outsl
mov
mov
lahf
mov
fwait
sbb
push
int3
ret
lods
add
and
pop
mov
add
jne
cmp
js
movb
xor
xchg
mov
loope,pn
or
filds
jp
scas
inc
test
ss
int
imul
xrelease
pop
jbe
pop
cmpb
jo
jl
mov
sub
adcl
mov
mov
in
pop
repnz
cmp
pop
fstpt
and
insl
out
mov
push
mov
lods
xchg
jbe
dec
push
jmp
or
push
sti
or
pop
shl
push
lret
das
decb
pop
int
out
push
pop
mov
mov
je
insb
cmpsl
repz
cmc
stc
bnd
cmc
int3
into
je
fldenv
into
mov
sub
mov
mov
bndstx
jae
push
mov
mov
jns
aam
scas
jb
mov
mov
int3
fwait
mov
pop
das
push
and
xchg
jg
lret
lahf
fldcw
and
aam
mov
push
or
push
jbe
dec
push
scas
and
fs
iret
xor
sbb
ljmp
jno
pop
and
and
inc
stc
jae
or
sub
ret
outsb
popf
outsb
andb
inc
or
push
adc
mov
mov
movsb
pop
mov
test
jns
jnp
rcll
fdivrl
leave
jp
incb
inc
and
sbb
shl
rdpmc
pop
mov
aad
daa
push
por
ds
sub
jbe
mov
fsts
arpl
std
push
pushf
adc
jnp
jmp
lods
mov
sub
xor
xchg
mov
ja
imul
inc
mov
adc
in
dec
mov
dec
jne
mov
and
xor
add
jecxz
add
mov
test
les
ss
sub
or
daa
mov
and
mov
out
mov
pusha
dec
cs
inc
jle
gs
and
into
dec
jl
psraw
lahf
fcompl
aaa
mov
mov
insl
mov
push
dec
les
stc
rcrl
lcall
pop
popa
push
call
jecxz
push
mov
fldenv
cmp
in
cmp
daa
flds
xchg
xchg
aad
xchg
sarl
popf
sbb
add
test
out
outsb
aad
lret
hlt
push
pop
cmpsl
mov
movb
pop
fidivs
xchg
vsubps
push
push
pop
fcoml
icebp
aad
clc
daa
mov
or
add
push
adc
scas
cli
push
inc
fxch
daa
mov
xchg
fmull
daa
pop
test
stc
popf
dec
xchg
fistpll
mov
dec
cs
scas
pop
and
lds
jl
xchg
mov
call
sarb
sub
sar
sbb
js
pop
xor
add
out
mov
rcrb
nop
pop
shll
pop
adc
cs
jnp
fwait
add
mov
inc
adc
data16
mov
scas
mov
fsubrp
jge
sbb
jge
pop
loop
mov
cs
xchg
stos
pop
sahf
xlat
inc
std
jle
jb
jno
mov
sub
and
into
jg
cmp
lods
rcrl
mov
test
ret
cmpsl
sub
mov
loop
lods
xor
mov
popf
sahf
cmc
dec
loopne
jl
xchg
lret
and
push
push
add
sarb
pop
lahf
leave
xchg
lea
push
push
mov
sbb
jno
ficomps
subb
or
push
xor
adc
data16
push
and
test
mov
ss
jmp
mov
push
fidivl
inc
pop
pop
ret
mov
int
loopne
lods
inc
lcall
fwait
test
clc
fsub
leave
inc
popf
dec
out
sahf
lcall
mov
mov
sbb
jp
pushf
adc
movsl
push
xchg
dec
enter
int3
add
xchg
test
call
sub
xchg
cs
adc
fisubl
xchg
inc
push
stc
sahf
loopne
mov
cltd
mov
adcl
shrb
cmp
jb
test
mov
mov
mov
dec
push
lock
popa
mov
jp
out
push
fld
out
shl
fisttps
mov
stc
adc
filds
jp
data16
cmp
dec
dec
adc
xor
add
lods
push
aaa
dec
and
jns
pop
sarb
xchg
jne
movsl
or
scas
scas
pop
sahf
shlb
cmp
sub
xor
bound
push
outsl
inc
int3
mov
xchg
rolb
aam
lcall
mov
mov
xlat
pusha
fsubl
popl
scas
pop
lds
jecxz
repz
cmpsl
adc
jp
mov
cli
pop
addr16
lods
lcall
fldenv
fdivl
mov
popf
shr
loopnew
out
xchg
jmp
sbb
stos
mov
hlt
sbb
adc
adc
scas
ss
push
jae
pop
flds
fnstsw
loop
push
fistpll
outsl
inc
mov
xor
push
pushw
push
pop
dec
dec
jecxz
ss
fldcw
fimuls
xor
cmc
xor
fucomip
repnz
lock
int3
push
xchg
jmp
les
pop
mov
mov
fnstcw
clc
arpl
jmp
sbb
sub
iret
pop
mov
dec
sub
pushf
and
stc
clc
jne
push
call
or
insl
adc
jp
call
cmpsl
jle
sbb
sub
sub
rcll
js
jle
cmp
sub
repz
int3
out
test
push
es
inc
sub
fs
std
cmpsb
repnz
pop
repz
ret
movsl
jle
lret
mov
pop
dec
sbb
fwait
enter
add
imul
ss
push
test
hlt
pop
fisubl
mov
outsl
pop
xor
sub
ljmp
push
mov
sub
mov
push
sbb
jns
sbb
mov
xor
sti
sbbb
jbe
mov
std
add
dec
pop
js
mov
and
cld
jns
sbb
jae
push
shl
popa
ss
push
out
pop
popf
jp
movsb
jbe
inc
or
aam
subl
jo
arpl
addr16
clc
sbb
pop
add
inc
cmp
xchg
cmp
fsts
aad
out
jecxz
push
inc
cltd
ss
mov
and
dec
leave
in
lahf
cmp
icebp
pop
push
lahf
cmpsb
inc
sahf
out
cmpsl
in
js
push
or
push
fnstsw
or
les
dec
js
dec
pop
nop
sub
mov
in
test
loopne
inc
jge
inc
and
fistps
test
sbb
xchg
inc
ljmp
sahf
lods
and
icebp
push
into
xorl
pop
jmp
test
mov
mov
les
or
push
movsl
xchg
mov
mov
adcl
xor
repnz
cmp
mov
rolb
popf
frstor
or
fs
fcomps
sub
mov
xchg
inc
jmp
xor
popa
enter
lret
les
mov
pop
and
jmp
icebp
or
dec
dec
movsb
fnstenv
or
scas
push
ret
call
test
xlat
les
mov
mov
out
mov
adc
subl
fisttpl
adc
sbb
adc
mov
mov
mov
fsts
filds
insb
or
adc
dec
cmp
je
pop
lods
ss
jmp
fyl2xp1
movsb
in
test
cltd
sub
repnz
mov
xchg
lods
cmpsb
inc
mov
test
mov
cmp
mov
ja
cmp
mov
mov
dec
and
cli
jae
mov
rol
gs
xor
cmp
fcompl
aaa
push
jl
test
repnz
data16
xor
pop
mov
sub
push
inc
mov
es
movsl
jnp
push
test
xchg
sarb
into
mov
gs
and
xor
cmp
bound
mov
sub
lods
dec
push
xchg
add
test
push
xor
in
inc
add
adc
dec
xor
stc
jbe
loope
sbbb
fidivl
sbb
fsubs
fisttpl
movsb
mov
inc
insl
mov
fimull
rcll
out
test
subl
iret
sbb
xor
and
out
xor
out
push
scas
lcall
inc
or
mov
fisttpll
in
orl
mov
and
mov
flds
mov
pushf
jae
push
mov
addr16
lret
int
mov
push
pop
xchg
iret
data16
xlat
xor
or
cmpsb
cmp
sub
aas
mov
push
out
jl
mov
std
mov
jo
mov
and
adc
xor
sbb
iret
shl
jl
xchg
repz
push
mov
pop
jae
fld
and
pop
xchg
add
popa
repnz
adc
sub
mov
mov
int
repnz
sub
mov
test
std
movsl
fldenv
fidivl
pop
lret
adc
sub
pop
lcall
aad
loop
movsl
stos
out
mov
call
iret
add
scas
sub
pop
std
push
imul
fsubrl
pop
pushf
test
or
xor
sbb
cmp
cmpsb
jae
sahf
in
lods
push
stc
pop
sub
test
push
mov
xor
gs
test
loop
int
adc
adc
adc
jae
sbb
arpl
xor
xor
scas
push
test
jbe
shll
cmp
mov
xor
das
shrl
mov
in
and
sbb
hlt
fdiv
sub
inc
xlat
repnz
mov
jmp
pop
and
push
ret
inc
pop
xor
mov
mov
jmp
out
in
xchg
mov
scas
cli
popf
push
cmp
cmpl
and
pop
and
lods
in
sti
int
shrb
hlt
lcall
mov
sbb
xchg
push
xlat
adc
mov
shlb
mov
sbb
xchg
ja
push
sub
push
or
das
mov
fbstp
int3
dec
dec
pop
dec
mov
ljmp
test
cmc
fld
mov
xchg
mov
xchg
jb
push
mov
mov
mov
sub
clc
fcompl
jge
je
aaa
in
in
mov
inc
dec
in
xchg
shl
push
inc
jno
lods
arpl
fbld
push
mov
cmp
xor
xchg
push
je
jle
mov
icebp
jle
xchg
cmc
mov
add
popf
hlt
cltd
adc
mov
jb
es
dec
ficoms
or
mov
in
pusha
cwtl
fwait
xchg
je
ret
lea
fcompl
repnz
inc
test
push
bound
xor
mov
adc
cmp
xchg
push
xchg
sub
inc
adc
inc
xchg
dec
cmp
fcmovu
inc
sub
leave
mov
mov
flds
and
dec
pop
sbb
fimuls
xchg
clc
mov
jle
popf
std
xor
movsl
push
out
mov
mov
imul
test
test
mov
cli
dec
test
dec
fdivl
mov
xchg
cmpsb
pop
xchg
adc
mov
loope
les
xchg
ret
lods
repnz
stos
fldcw
jno
cmp
xchg
scas
mov
data16
pop
lea
adc
add
and
ljmp
adc
mov
sub
sbbb
out
push
pop
lods
dec
push
ficomps
test
out
js
int
or
xor
xchg
mov
dec
mov
out
inc
mov
adc
and
pop
popf
mov
mov
add
aad
push
clc
pop
pause
hlt
pop
xchg
scas
add
adc
shl
and
sbb
fildll
icebp
xchg
fisttpl
fs
mov
les
dec
test
fldl
je
pop
pushf
dec
mov
mov
add
inc
popa
cmp
outsb
jp
aas
sbb
or
cld
push
mov
push
imul
mov
mov
push
subl
imul
in
aad
in
lahf
hlt
xchg
repnz
jbe
push
mov
andb
aam
dec
jp
mov
dec
and
cli
xchg
in
pop
adc
push
push
addr16
jno
dec
pop
mov
in
pop
and
icebp
sub
and
xor
push
jns
add
ret
adc
in
pop
movsl
fldenv
out
sub
sbb
cmpl
pop
mov
test
mov
cmp
gs
pop
addl
mov
lods
lea
adc
mov
ret
mov
loop
loope
dec
inc
mov
mov
and
ret
das
xchg
sbb
mov
mov
or
test
aad
xor
fnstenv
fsubrs
fbld
jae
push
cs
mov
not
scas
sti
adc
jl
dec
add
sbb
pushf
call
ja
data16
mull
fdivrl
cmp
add
xchg
les
xchg
stc
push
sub
adc
pop
mov
test
sbb
subb
jle
xchg
lds
in
jl
sahf
mov
fcoms
mov
ficompl
aam
xor
out
mov
std
fcoms
jne
jbe
and
jg
lods
jnp
mov
imul
jo
movsb
nop
xchg
lret
jb
mul
pop
pop
push
or
inc
mov
mov
pushf
pop
pop
inc
in
pop
test
pop
push
cmp
xchg
fbld
push
int3
adc
out
test
mov
jbe
xor
sbb
lock
or
mov
xor
scas
ret
outsb
or
cmp
shlb
inc
test
dec
jno
lcall
sbb
test
push
dec
mov
std
mov
sbb
hlt
sbb
xchg
jmp
iret
out
fcoml
dec
pop
xor
mov
aaa
les
jne
xor
and
push
shll
data16
std
jae
dec
sbb
sbb
fiadds
dec
pop
movsl
push
adc
int3
push
stc
stc
mov
xchg
loop
cli
inc
aad
add
jns
imul
stos
pop
aam
pop
mov
mov
mov
stc
xchg
xor
pop
and
or
out
fisubs
loopne
mov
pusha
ficomps
push
sbb
mov
mov
cmp
push
pushf
test
flds
outsb
mov
out
cmp
push
out
rcrl
mov
cmp
ret
mov
pushf
sbb
lahf
out
xchg
outsb
push
hlt
mov
int
pop
mov
sbb
sub
adc
or
push
inc
leave
adc
pop
cli
sahf
gs
mov
call
or
outsb
data16
xchg
lock
mov
je
fldenv
cmpl
and
fimull
adcb
add
jno
scas
jae
imul
mov
inc
sti
or
fiadds
and
loope
and
and
push
stc
mov
lahf
sub
push
jnp
xor
jae
pop
test
test
mov
push
scas
cs
xchg
test
sbbl
dec
pop
in
adc
xor
setge
in
insb
sub
mov
fldenv
iret
cli
xchg
sbb
lods
fstpl
jp
adc
mov
in
push
in
pop
scas
jo
sbb
push
push
into
mov
push
addr16
popa
jne
sub
pop
into
push
jl
or
bnd
sbb
fadds
out
mov
into
xchg
sub
cmpsb
xchg
loop
lcall
mov
leave
mov
and
xor
xacquire
mov
rclb
pushf
dec
test
xor
inc
dec
cmp
out
stos
mov
addl
inc
mov
test
cmp
push
mov
pop
xchg
jle
jl
iret
xchg
cwtl
and
pusha
int
rcrb
in
jb
sub
fcoml
pop
mov
das
push
mov
push
pop
stc
push
push
iret
fdivl
scas
pusha
negb
sbb
into
fnstcw
sbbl
inc
fwait
loope
push
add
repz
mov
dec
pop
push
adc
inc
inc
sti
fwait
and
pop
arpl
mov
sub
jmp
lds
xor
addl
adc
sub
scas
xchg
mov
loopne
subl
dec
stc
cltd
lods
cmp
cmpsl
std
ret
das
inc
imul
lcall
and
xchg
lret
or
mov
cmp
loop
xor
xchg
and
cmpsl
mov
inc
pop
scas
push
js
fcompp
outsl
stc
std
sub
xchg
cld
dec
fiadds
sbbb
cmp
outsb
jnp
int
ljmp
mov
mov
jge
xchg
cmp
imul
sub
mov
fistpll
lds
add
mov
pop
lret
or
in
xor
inc
clc
push
mov
push
rolb
xor
sub
mov
adc
add
sub
jmp
mov
jmp
ja
xchg
jp
xlat
repnz
cmp
sbb
and
jp
cld
sbb
cmpsl
push
adc
call
dec
pushf
jno
test
push
stos
sahf
dec
mov
adc
jns
ds
pop
cmpsl
xor
icebp
add
fistpl
mov
jns
and
mov
adc
cli
push
sti
lods
ret
push
xchg
cmpsl
dec
subb
inc
imul
pusha
pop
loop
aam
jae
jp
je
stos
push
scas
cmp
mov
in
push
nop
std
aaa
fisubl
daa
cltd
adc
xor
int
mov
popf
mov
clc
movsb
out
insb
ss
in
adc
inc
and
shl
pushf
jmp
cmpsl
das
ficoml
jo
pop
test
adc
sub
sbb
stc
sbb
divb
mov
adcb
xor
fists
jp
pop
inc
push
shlb
pop
cltd
lahf
pop
lods
outsl
leave
subl
fistpll
insb
das
test
dec
inc
popa
lret
mov
imul
xor
inc
sahf
fwait
popf
iret
std
stos
lea
lahf
into
lcall
add
and
or
stc
and
mov
test
xchg
push
push
add
pop
stc
cli
add
mov
repnz
fcmovu
repnz
jne
lds
inc
addr16
sub
das
adc
out
mov
jns
shrb
xor
jp
cmp
mov
gs
mov
popf
fistpl
test
repz
icebp
lea
andb
movsb
mov
cmp
inc
xor
repnz
test
in
and
cwtl
mov
repnz
ss
mov
ss
cld
daa
mov
enter
int3
in
or
mov
adc
mov
pop
cmp
sahf
mov
jns
push
xor
gs
out
cmp
fistpll
jle
clc
ljmp
orb
int
stc
nop
aad
sahf
and
test
sub
mov
test
out
lock
cmp
push
out
insb
jg
fdivrl
insl
dec
pop
xchg
js
inc
imul
call
pop
int
repnz
sub
mov
xchg
push
mov
push
pop
cmp
pop
add
inc
sub
dec
repnz
lcall
xchg
dec
mov
repz
dec
sbb
ljmp
and
lea
mov
cs
sbb
cmp
repz
jbe
enter
scas
sub
jp
fimuls
mov
or
scas
dec
test
movsb
jmp
lret
test
sub
xor
arpl
sbb
xchg
aam
pop
mov
clc
lods
jns
dec
enter
std
mov
inc
push
cmp
clc
pop
sbb
mov
sbb
cmp
pushf
pop
or
adc
sub
and
push
daa
or
pop
in
std
pop
mov
mov
inc
pop
push
sub
sbb
pop
adc
imul
scas
sbb
loopne
xchg
aam
push
repz
outsl
mov
ljmp
lcall
dec
aaa
test
fidivrl
cld
lods
mov
and
xchg
push
push
cld
popf
lret
rcr
test
or
mov
xchg
stc
test
loopne
imull
cmpsb
mov
xor
cmp
stos
mov
cli
fsts
inc
mov
incb
dec
cli
popf
xorb
std
rol
or
xchg
cmp
stc
sti
cmp
mov
and
inc
out
test
movsb
or
fistpll
inc
fs
clc
es
int3
outsb
icebp
fdiv
loope
je
nop
mov
imul
cwtl
mov
fwait
xor
sbb
cltd
int
pop
adc
inc
iret
mov
and
sti
cli
adc
fcmovb
int3
push
mov
xchg
mov
mov
add
popf
inc
mov
sub
nop
xchg
clc
jle
xor
sbb
xlat
pop
jo
inc
mov
lods
mov
xor
data16
mov
fsts
cmp
xchg
arpl
mov
test
push
mov
adc
mov
mov
and
mov
xor
pop
add
out
mov
stc
ret
add
jecxz
test
and
xor
sbb
lcall
pop
cltd
int
pop
jbe
test
cwtl
insb
gs
pop
dec
addr16
sbb
pop
notl
or
inc
xor
dec
cmp
sub
aam
pop
cmpw
jne
aad
popf
adc
insb
inc
fs
pop
sbb
cmp
xchg
aas
fiadds
sbb
movsb
addr16
jae
fcmovnb
in
inc
movsl
adc
hlt
fdivl
in
es
xchg
pop
cmp
aad
inc
in
dec
scas
jmp
and
lds
movsb
lea
in
inc
daa
add
jle
xchg
aas
fidivrl
out
test
xchg
mov
pop
cmp
int3
sub
dec
mov
notl
shrb
repz
iret
cld
pop
repnz
es
cmp
push
xor
mov
xchg
and
cltd
pop
sbb
fistpll
mov
adc
mov
mov
pushf
inc
loope
aad
xchg
pop
and
pushf
push
imul
inc
popf
rorl
out
sub
dec
jne
pop
add
sub
inc
sbb
mov
and
dec
jp
sub
test
jbe
push
jmp
jno
sbb
fildll
or
and
dec
xchg
cwtl
mov
xor
test
xchg
ja
xorb
lock
stos
daa
push
sbb
sub
out
in
imul
inc
in
sarl
aam
les
pusha
mov
mov
push
or
push
cmpsb
jmp
xchg
jae
popa
inc
xchg
sbb
shr
push
and
repnz
ficomps
cld
add
flds
scas
jno
test
inc
or
add
pop
clc
dec
push
push
adc
sbb
mov
fidivrl
xchg
jbe
mov
xchg
pop
dec
fs
jnp
movsl
cmp
xor
or
insl
les
data16
mov
call
movsl
daa
ja
push
mov
lock
sbb
jg
mov
xchg
cmpsb
dec
xchg
test
inc
out
int3
or
push
pop
sub
mov
popf
aam
js
inc
test
mov
push
test
sti
call
ret
mov
xchg
push
out
pop
or
dec
fmull
xchg
jnp
movsl
xchg
andl
xchg
cltd
xchg
pop
out
in
cmp
sub
push
leave
mov
lret
mov
pop
lea
mov
fs
out
addr16
imul
popf
lcall
test
and
and
pop
add
inc
fcomp
push
imul
and
aam
shlb
mov
lock
inc
popf
add
in
mov
fidivrs
test
aam
jg
sub
int3
pop
adc
in
adc
sbb
test
test
mov
push
jns
lds
or
movsb
test
or
jle
cmp
sub
addb
pusha
sbb
push
xor
std
and
mov
int3
inc
cs
pop
cmp
pop
or
movsb
shrb
sbb
fadd
mov
loopne
jecxz
cmp
xchg
lret
gs
mov
push
pop
adc
lods
or
adc
es
xchg
nop
mov
pushf
scas
addr16
out
fwait
aad
cmp
testb
fs
lock
fwait
push
cld
sub
mov
pop
pop
test
es
ss
xor
fwait
adc
sbb
loope
fdivl
push
jmp
jmp
test
sarb
jp
lcall
test
call
faddl
scas
je
xchg
scas
sub
mov
mov
pop
cmp
scas
loope
jl
stos
mov
out
repnz
movsb
mov
push
cmp
mov
mov
cs
fsts
call
mov
dec
xchg
lahf
lods
sub
and
or
adc
and
lods
and
sub
inc
cmp
aad
ret
movsb
mov
inc
mov
imul
push
cmp
daa
inc
cmp
in
cld
rcrb
adc
in
js
dec
and
popa
lahf
mov
cltd
inc
sbb
lock
dec
mov
jae
or
mov
stc
mov
mov
outsl
andb
test
fadd
mov
cmp
mov
test
sbb
pop
ds
cmp
loopne
sahf
test
push
pop
lahf
popf
add
fldenv
out
xlat
in
inc
sub
pushf
dec
mov
inc
pushf
int3
js
flds
or
mov
jge
mov
lret
iret
cmp
sub
dec
pushf
adc
adc
das
out
jge
rep
mov
xor
pause
jl
and
std
int
push
test
test
and
pop
fsts
cmpl
jns
mov
cmp
inc
lahf
jnp
mov
push
xor
out
subl
fdivp
je
mov
test
xor
mov
and
pop
cltd
int
dec
sbb
lods
and
cmp
in
mov
int
movb
inc
xor
subb
test
pop
dec
daa
cmp
lock
inc
cmpsl
mov
hlt
call
mov
fsts
cmp
or
imul
popa
ja
jae
aad
mov
scas
push
addr16
jp
jle
sub
sti
inc
das
out
add
pop
push
and
inc
add
fldt
sbb
mov
or
loopne
dec
test
push
inc
jb
add
jecxz
movsl
lret
jnp
jge
sbb
es
in
int
inc
in
xchg
and
mov
jae
test
int
pop
jp
and
xor
scas
mov
dec
pop
xor
jl
jae
ss
decb
roll
cmpsl
inc
out
pushf
fdivs
jmp
mov
or
xor
test
inc
fldcw
mov
xor
xor
xorl
push
mov
and
inc
fs
cmpsb
insl
sub
ds
xchg
sbb
test
sar
mov
inc
pusha
loope
inc
stos
xchg
add
data16
test
adc
scas
imul
dec
lods
and
mov
repz
jmp
in
jp
xor
mov
push
add
addr16
int
push
lea
jle
xor
stos
ljmp
xlat
sahf
fldcw
lock
sbb
inc
cmp
pop
pop
cld
and
and
jne
inc
xor
in
fsubrl
mov
mov
sbb
xchg
ds
add
fdivl
sti
or
and
call
daa
mov
cli
ljmp
mov
test
xchg
and
test
addb
jnp
xchg
loopne
repz
imul
test
cltd
xchg
xchg
out
xor
gs
xor
shl
sbb
mov
in
ret
movsl
pop
pop
sbb
incb
pusha
xlat
lea
hlt
sub
jnp
dec
int
pop
scas
add
xor
push
fs
cli
movb
mov
mov
sub
es
mov
xor
push
sbb
xor
mov
popf
mov
leave
jmp
data16
out
jns
add
push
mov
adc
push
fisubrs
repz
subl
mov
adc
pop
mov
in
jnp
jbe
lret
inc
cmp
movsb
outsb
adc
movsb
mov
and
stc
notb
mov
inc
mov
jne
sti
dec
pop
or
mov
cmpsb
or
lret
pop
pushf
sahf
jge
lea
lods
jle
inc
cmp
xchg
test
out
xorl
add
fdivr
scas
std
sbb
dec
mov
sub
fisubs
pop
repz
inc
out
dec
mov
sub
mov
in
mov
mov
xor
add
cmpsb
adc
jp
clc
push
xor
adc
dec
lret
ss
xchg
dec
adc
pop
rolb
scas
adc
rorb
test
shl
add
pop
sbb
rclb
cli
daa
lods
mov
sbb
add
mov
les
pop
xlat
mov
pop
subl
xchg
jbe
rcll
pop
xchg
shr
call
repz
outsb
mov
aam
mov
mov
subl
ja
fstps
jge
jg
xchg
int3
push
jns
xchg
sub
xchg
fistpl
push
push
scas
mov
xchg
js
inc
icebp
outsb
adcl
sti
popf
sub
sub
lds
mov
mov
and
sbb
xorb
lea
lods
mov
and
or
fdivr
std
clc
adc
stos
xchg
in
icebp
mov
dec
pusha
in
mov
mov
and
jnp
and
sub
fsubl
test
mov
fmul
push
int
mov
mov
mov
cld
jl
add
xor
aam
pusha
push
push
fstpl
test
cmpsl
push
aad
jg
adc
in
test
or
or
and
inc
mov
push
es
dec
or
negb
jb
mov
xchg
and
lods
sub
pop
xorl
mov
in
int
mov
adc
mov
push
ja
sub
mov
cmpsb
test
insb
and
mov
or
jne
pop
mov
xor
mov
push
dec
adc
sbb
js
in
xchg
push
scas
movsb
dec
mov
int
test
add
push
jns
inc
fldenv
push
push
mov
scas
mov
jae
dec
push
cmp
das
jle
add
lods
sbb
mov
ljmp
or
push
jns
loop
mov
lods
sub
xor
push
test
test
inc
std
xlat
pop
inc
sub
test
gs
mov
adc
adc
sbb
loopne
mov
and
pop
adc
in
pop
mov
repnz
mov
mov
leave
mov
bound
in
addr16
jp
mov
xchg
in
out
dec
imul
xor
popa
insb
fcoml
mov
sub
pop
jle
test
sub
lock
fcomi
and
mov
movsl
es
or
in
rcr
jae
or
repz
pop
mov
pushf
inc
test
out
clc
out
push
mov
adc
mov
inc
adc
fst
xchg
popf
push
fldln2
loope
test
fbld
fisubrs
lret
jae
es
ret
addb
dec
je
scas
inc
and
pop
sbb
mov
xchg
sbb
int
push
cmpsb
add
lods
jmp
ss
std
arpl
fiadds
out
es
scas
arpl
mov
and
mov
add
inc
sbb
imul
movsb
dec
into
cmpsb
mov
push
mov
or
fcoml
push
cmp
sbb
ss
sub
pop
and
call
test
insb
dec
int
imul
std
mov
fsincos
outsl
mov
xor
gs
aam
xchg
xchg
mov
cmp
mov
mov
andb
mov
dec
movsl
andb
jae
mov
dec
mov
rolb
stc
inc
les
out
push
push
xor
sub
leave
loopne
or
xchg
clc
js
mov
dec
inc
jmp
push
cld
mov
scas
mov
xchg
mov
mov
popa
sbb
xchg
insb
out
pop
data16
addb
mov
movsb
dec
mov
cltd
mov
fisubrs
and
jp
lcall
xchg
cmp
inc
jmp
test
rcll
lods
insl
test
andb
xchg
xchg
gs
mov
mov
mov
fwait
shrl
movsl
std
test
mov
xor
in
jae
pop
push
mull
cli
mov
loopne
shrl
roll
mov
in
xchg
and
negb
fadd
out
cmp
inc
movsb
int3
push
jbe
enter
jmp
stc
xchg
daa
mov
lea
and
dec
aam
fcoml
cs
das
mov
lea
mov
sbb
mov
lret
lods
repz
mulb
sbb
pop
mov
std
gs
aam
mov
int
xor
orl
incb
lods
mov
push
fcoml
push
push
pop
in
pop
xchg
mov
cmpsb
cld
gs
rcll
test
pop
dec
xchg
scas
sbb
and
or
aaa
mov
mov
popa
adc
pop
mov
and
xor
popl
inc
cmp
mov
pop
out
xchg
lret
cltd
pushf
test
inc
incb
xor
add
mov
mov
jp
pop
push
scas
mov
dec
aas
loope
push
mov
pop
inc
or
fisubrl
shrb
sbb
jb
cmp
sub
mov
push
scas
movl
insb
fldenv
add
jns
fs
sti
fcomi
inc
hlt
scas
out
repz
test
lahf
mov
or
cmpsl
cmp
push
jl
mov
cmp
xor
cmc
mov
sbb
mov
inc
rcrl
f2xm1
adcb
sahf
out
push
in
inc
and
mov
inc
loop
fisubrs
pop
stc
nop
loope
push
loope
add
aam
loopne
cmovp
fcompp
es
lock
test
push
cmp
push
sbb
aas
or
mov
cmc
int
out
cli
mov
sbb
call
popa
and
xchg
movsb
data16
mov
pop
push
sub
and
addr16
jns
sbb
push
push
xchg
mov
scas
flds
add
out
dec
inc
or
mov
mov
loopne
dec
pop
jp
mov
ret
push
sbb
jns
jnp
pop
fisttpl
inc
jp
fsubrl
mov
xchg
and
sbb
div
cmpsb
mov
mov
jl
ljmp
into
repnz
xor
movsb
xchg
in
xlat
dec
fistpll
pop
test
lret
ret
cltd
jp
push
loop
into
inc
jmp
es
in
fnstcw
xor
hlt
xchg
enter
out
jl
adc
cmp
adc
pop
in
and
mov
movsb
xor
sti
or
mov
fsubrs
outsb
push
inc
jmp
lock
cmp
std
fldenv
mov
push
xchg
dec
xor
test
popa
jp
sahf
add
gs
mov
mov
dec
inc
pop
fsubrs
mov
das
shrb
xor
nop
mov
les
mov
push
pusha
push
cmc
sbb
sbb
sbb
and
int
cmc
or
or
int3
imul
jnp
jecxz
or
leave
daa
popl
jb
mov
inc
es
je
inc
jae
push
outsb
cwtl
mov
push
dec
pop
in
pushf
ja
out
stc
flds
add
lea
push
fcompp
cmp
lods
mov
mov
subl
addr16
loope
outsb
xor
mov
sahf
jge
xchg
adc
pop
inc
out
outsl
int3
lods
mov
mov
and
push
xlat
negl
js
or
jns
pop
pop
icebp
lods
sbb
adc
int
mov
push
ss
pop
in
adc
and
sbbl
or
jbe
popf
in
adc
add
adc
and
rcrb
sub
into
cmc
pop
mov
xchg
data16
jnp
inc
add
out
dec
repnz
icebp
inc
jns
xchg
sub
jle
adc
cld
test
cmpsb
and
shl
cmp
xchg
adc
out
cmp
dec
pop
sub
or
inc
adc
leave
call
xor
push
mov
sbb
or
pop
push
mov
mov
push
dec
outsb
jle
add
push
xchg
or
and
out
push
dec
xor
popa
outsb
mov
andb
sub
push
out
out
xchg
xchg
ds
stc
and
leave
ds
or
popf
je
fisubs
sbb
lret
out
rclb
inc
sub
decb
sub
loopne
cmpsl
call
mov
aam
mov
add
mov
daa
ss
sub
ja
inc
das
outsl
sub
ds
mov
and
lea
or
sbb
loope
stos
sbb
push
lods
cmp
test
adc
flds
gs
or
scas
pop
das
xchg
pushf
adc
cmp
mov
mov
jbe
inc
or
in
in
xor
adc
dec
in
imul
out
fwait
sub
cmpsb
jmp
mov
add
adcb
xor
icebp
cmc
jbe
shll
mov
inc
add
jbe
imul
fs
push
out
xor
shll
sub
fld
sahf
jl
lcall
jns
cmp
mov
lods
push
dec
pushf
push
dec
in
mov
test
jno
lret
xchg
icebp
push
push
xor
lods
pop
mov
inc
mov
mov
mov
fdivl
xchg
mov
dec
imul
dec
add
into
filds
stos
sub
stos
jle
sbb
dec
imulb
lock
or
lahf
xchg
push
push
mov
test
or
testl
push
mov
enter
xchg
dec
push
and
add
outsb
jno
push
fcompl
dec
in
sub
xor
test
out
mov
sbb
mov
test
xchg
ds
jo
orb
dec
inc
mov
mov
jno
test
pop
adc
loopne
hlt
das
mov
push
inc
and
loopne
mov
cmp
and
imulb
jg
jbe
shll
bound
xchg
mov
push
shlb
dec
mov
lahf
pop
jo
jnp
pop
jae
aaa
pop
pop
sbb
cs
inc
cmp
xchg
fucomi
dec
xchg
xchg
cmp
lods
push
cmp
in
sub
insl
in
fld
stos
sbb
in
mov
dec
dec
int
aam
lret
inc
push
mov
mov
shr
cwtl
cmpsl
pop
andps
hlt
into
lods
pop
int
mov
ds
leave
icebp
pop
pop
icebp
or
lahf
mov
and
jae
jl
sbb
clc
mov
sbb
fnsave
push
aaa
inc
fmull
dec
scas
jnp
dec
fldt
adcb
cmpl
mov
lds
add
or
mov
cmp
push
mov
in
xchg
xlat
mov
lock
ret
xchg
jo
sbb
clc
mov
sub
xor
inc
aaa
test
pop
mov
inc
add
das
scas
add
ret
movsb
imul
mov
push
int
fwait
imul
sub
rcr
inc
aad
or
jp
addr16
jnp
xchg
jae
into
mov
fldenv
ja
dec
xchg
mov
fmull
jle
pop
aam
dec
fiadds
add
xor
and
cs
dec
and
stos
add
jmp
flds
pushw
push
nop
stos
inc
bound
iret
ds
or
push
mov
imul
insl
dec
mov
aad
push
push
subb
xchg
and
mov
push
fstpt
pop
test
jo
mov
push
sub
add
mov
push
loop
ror
inc
cmpsb
lods
jmp
xchg
out
mov
bnd
xchg
fidivrl
mov
enter
rclb
fcoml
ret
addb
xor
or
jmp
mov
clc
pop
out
push
jo
xchg
enter
ret
out
jnp
ffree
fnstsw
sti
lea
inc
mov
inc
mov
mov
jecxz
lahf
pushf
sahf
daa
pop
pop
mov
xchg
pop
lahf
popf
jae
fisttps
jl
jg
testl
test
int3
pop
cmp
ljmp
inc
in
stos
inc
bound
mov
std
push
mov
fs
out
push
aas
fsqrt
dec
sti
andb
gs
mov
gs
adcb
ds
or
das
je
inc
pop
in
or
xchg
push
scas
out
insb
fs
pushf
test
icebp
insb
out
outsl
ficompl
jmp
mov
loop
rcl
and
mov
aad
stos
jb
mov
or
or
and
fiadds
xor
mov
sub
aam
sub
push
addr16
inc
push
scas
xchg
inc
popf
and
jmp
inc
lods
jmp
pushf
std
rorl
lcall
sbb
add
roll
fistpl
lods
stos
test
add
add
inc
int3
fwait
xor
fidivs
push
mov
dec
sub
out
rorb
imul
repz
sub
call
dec
add
pop
test
repnz
jnp
lret
popa
jnp
rcrl
dec
stc
xor
leave
stos
cld
push
and
pushf
pop
mov
cmp
mov
lea
push
mov
imul
xor
push
inc
push
in
push
ljmp
xor
popf
loop
pop
dec
es
out
dec
fs
and
mov
loopne
xor
cmp
cmp
mov
cmp
icebp
jns
jnp
jl
mov
or
push
cmp
incb
xlat
adc
adc
mov
mov
adc
aas
fs
push
mov
or
in
or
sub
push
dec
mov
or
cmpsb
movsl
repz
sbb
outsl
sbb
lods
cmp
add
xchg
jp
int
jl,pt
fisttpl
mov
das
inc
push
adc
pop
ret
mov
cmp
sub
pop
cmp
data16
cltd
fadds
mov
sbb
lahf
popa
mov
xor
add
jne
xor
mov
test
mov
cmp
mov
popf
add
daa
jb
test
pop
pop
push
or
orb
inc
movsl
inc
in
fldenv
cmp
sbb
out
add
xchg
push
sarb
pusha
adc
cmpl
pop
push
stc
inc
dec
loop
ret
test
repz
inc
cmp
push
cmp
je
in
xchg
mov
jo
jbe
and
shl
mov
and
inc
das
and
and
xor
loope
lret
cmp
lock
std
cld
daa
sbb
cmp
dec
mov
jb
out
lret
pop
cwtl
mov
cmp
lret
int
int3
sti
jge
lret
imul
insl
sub
adcl
mov
flds
lods
test
scas
sti
adc
cmp
stc
out
out
adc
shl
incl
imulb
hlt
inc
xlat
loop
sahf
sub
or
addr16
sub
lods
xchg
cli
loope
or
adc
adc
inc
dec
sbb
mov
mov
mov
cmp
push
xchg
and
lret
xlat
fisttpl
xchg
cmp
rcll
add
mov
mov
in
push
data16
fxch
or
add
mov
decl
fs
ljmp
outsb
sar
flds
repz
out
or
cld
flds
aaa
xlat
xorb
xchg
cs
cmp
int
jnp
in
push
mov
sbbl
fsts
ljmp
jae
pop
mov
gs
ret
inc
imul
lcall
add
sub
popf
or
mov
xchg
jmp
mov
inc
fs
test
pop
test
mov
xchg
aad
mov
xchg
and
dec
fdivr
add
iret
push
les
mov
mov
test
data16
xchg
out
cmpb
pop
pop
mov
sbb
sarb
push
jl
jg
fisttpl
iret
das
mov
repz
stos
out
xchg
pop
xlat
imul
call
jno
adc
pop
mov
mov
sub
mov
push
scas
pop
pop
imul
push
jbe
inc
rorb
es
mov
xor
gs
pop
scas
stos
add
inc
and
mov
shll
dec
test
adc
mov
aad
mov
and
sbb
sbb
je
fldcw
adc
jbe
adc
ret
sub
and
pop
xchg
std
mov
pop
inc
in
sub
sbbl
dec
push
jns
inc
in
dec
and
cmp
jo
mov
push
lds
fstpl
sarb
test
xchg
xor
repz
test
push
mov
sub
out
adc
les
negb
sbb
and
pushf
repz
sbb
inc
inc
iret
add
add
pop
rol
cmpsb
stos
adc
mov
adc
test
insb
popa
clc
faddl
outsl
lcall
mov
cmp
jle
scas
xor
jo
xchg
cld
in
outsb
jno
mov
loopne
cmpsb
nop
popf
into
cmpsw
popl
repz
pop
jo
subl
mov
ret
hlt
subb
pop
inc
mov
js
popf
mov
faddl
mov
movsb
jns
jge
lock
lea
mov
lret
adc
adc
out
mov
out
xchg
ss
sub
cmpsb
or
xchg
testl
imul
fsubrl
pusha
mov
lds
addr16
add
pop
mov
fwait
add
pop
imul
scas
cmpsb
cmpl
rcr
mov
mulb
hlt
sbb
pop
fsubp
sti
clc
dec
pop
sbb
cmp
cli
adc
mov
jo
jle
enter
dec
test
in
setb
hlt
dec
bound
dec
sbb
jmp
sbb
pop
aas
pop
movsb
cli
inc
inc
rcrb
push
pop
mov
mov
mov
fmull
mov
push
arpl
test
xchg
das
out
sbbl
dec
sbb
faddl
or
dec
mov
iret
aam
add
addr16
sbb
hlt
les
xacquire
subl
sbb
sarb
sti
or
mov
and
into
mov
fwait
fwait
cli
inc
jbe
adc
adc
cmp
sahf
mov
addb
sbb
outsb
lock
mov
xor
xchg
ja
enter
aad
test
inc
jo
push
cwtl
dec
pop
popf
push
xorb
ljmp
scas
adc
or
push
jle
nop
jge
xchg
mov
sub
push
subb
sahf
test
mov
jg
mov
je
sbbb
fdivs
call
push
jmp
dec
sarl
inc
push
cltd
popf
push
aaa
dec
sbb
test
int
mov
xor
mov
mov
dec
dec
lock
push
add
jae
xchg
out
aam
mov
jb
jl
or
add
fwait
loopne
and
popf
jecxz
frstor
sub
addr16
ss
push
popw
mov
dec
rorb
movsb
and
mov
out
sar
and
or
mov
fidivrl
push
mov
jge
fistps
aad
test
add
mov
mov
std
sarb
mov
sahf
mov
into
imul
mov
scas
flds
and
setge
mov
ja
mov
ret
out
int3
sbb
inc
imulb
inc
fsubr
adcl
mov
adc
loopne
pop
outsl
inc
adc
inc
add
xor
fcomi
arpl
add
sbbl
sbb
dec
call
aas
js
imull
leave
add
xor
mov
pop
int3
cmpsb
xchg
cli
dec
addl
fidivl
es
decb
pop
out
inc
call
das
mov
loope
icebp
add
out
mov
mov
scas
dec
ret
dec
ja
mov
mov
xlat
mov
inc
cmpsl
inc
push
aad
xorb
jns
gs
add
into
cltd
fmull
mov
cmpsl
popa
jo
sbb
sbb
jl
shlb
add
flds
and
test
sub
fs
insb
and
test
xor
mov
xor
mov
sub
test
sbb
decl
arpl
jle
negb
adc
and
mov
or
loopne
ficompl
dec
sub
dec
mov
clc
adc
push
mov
out
add
les
sahf
lcall
fcoml
leave
sub
xor
loopne
and
mov
mov
fs
movsb
xchg
and
sub
sbb
mov
or
test
cmp
orl
mov
das
push
inc
fcoml
sbb
fnstenv
adc
out
fcmovne
stc
rclb
ret
out
mov
mov
pop
movsb
lds
xor
sub
nop
jl
xor
dec
stos
shl
mov
xor
scas
mov
cmpsl
inc
fwait
lock
imul
adc
stc
xor
cmp
jbe
cld
popa
adc
frstor
inc
dec
cld
out
lds
out
cwtl
sahf
jmp
test
xchg
mov
imul
cltd
add
fnstenv
cmpsb
les
out
push
imul
cmp
and
rcrl
mov
dec
aam
mov
test
add
rcl
push
cltd
leave
sbb
dec
pop
rorb
fidivs
or
push
int
cmc
iret
jge
mov
lds
outsb
mov
pop
lods
adc
sarl
repz
imul
fstps
xchg
ja
jnp
in
movsb
sarl
jl
aam
xchg
icebp
jo
and
orl
jg
daa
popl
push
mov
mov
inc
in
cwtl
ret
outsl
popf
sbb
jmp
xchg
fmull
mov
movsb
and
jecxz
inc
data16
in
fsts
iret
and
subl
iret
mov
es
lods
loope
jne
cmpb
cs
into
mov
test
movsl
inc
sub
scas
push
das
or
fadds
sub
jge
mov
jo
or
mov
scas
mov
fimuls
adc
cmp
in
in
mov
lcall
std
or
and
push
sbbl
xor
xchg
scas
lcall
addr16
cmp
subps
push
cmp
repnz
mov
xchg
dec
cmp
push
mov
adc
jecxz
out
mov
pop
fldcw
inc
dec
pop
rorl
test
sbb
and
mov
pop
jmp
jb
xor
push
push
jp
jbe
push
hlt
scas
mov
aam
jbe
repnz
mov
push
lods
repz
jns
daa
jecxz
xchg
loop
pop
loopne
fdivrs
jns
movl
mov
out
addl
mov
xor
pop
test
hlt
stc
mov
mov
dec
std
call
lods
adc
roll
mov
inc
mov
add
fildll
add
jb
addr16
stc
jp
popf
mov
sbb
xchg
ss
gs
xchg
add
arpl
jmp
das
repz
lods
sub
adc
inc
int3
add
fimuls
aam
stc
out
push
mov
or
pop
pop
pushf
ss
das
add
es
in
sub
xchg
lea
push
jmp
xor
or
xor
cmpsb
test
adc
outsb
or
subb
xor
mov
lret
sub
scas
aaa
int
test
cli
sbb
mov
mov
addr16
repz
jne
or
bound
lock
sub
mov
xchg
aas
lds
aas
aam
mov
jno
xchg
ficoml
dec
out
push
xor
inc
scas
test
neg
inc
mov
rol
push
pushf
cmpsl
test
mov
inc
adc
lods
dec
push
jns
mov
mov
mov
imul
lods
fcoml
pop
test
int3
sti
ret
cmp
adc
je
fwait
loope
jmp
insb
rol
push
stc
push
sahf
test
jl
pop
shlb
cmc
sbb
lahf
mov
xchg
add
inc
and
iret
sar
rcrb
popf
dec
dec
lods
sub
cmc
movsb
xchg
xchg
add
mov
pusha
jl
sub
adc
jno
leave
mov
push
mov
pop
push
sbb
lret
jl
sbb
xchg
xlat
inc
cmp
int
in
js
cli
data16
ficomps
push
inc
jo,pt
inc
xlat
mov
imull
int3
pop
mov
adc
xchg
test
jmp
std
sti
fistpll
push
push
dec
push
pop
loop
icebp
jbe
cld
cld
and
aaa
fnstcw
sbb
ss
pusha
push
insl
adc
adc
fs
aam
fildll
stc
cmpsl
scas
push
mov
shrb
lret
arpl
add
ljmp
adc
in
push
mov
aad
cs
in
mov
mov
popf
lods
cmpsl
push
mov
lods
jne
cmpsl
scas
pop
cld
insb
cmp
mov
add
xchg
daa
leave
cmp
test
xchg
int3
xor
out
mov
fildl
dec
pop
push
ja
adc
sbb
imulb
inc
pop
push
mov
push
mov
mov
addb
add
xchg
fisubrs
loope
pop
icebp
cwtl
inc
inc
pop
xchg
addr16
sbb
jmp
stos
shl
cmp
dec
pop
cltd
or
fst
xchg
or
test
push
xchg
jb
pop
sbb
js
in
mov
sub
or
xchg
out
test
dec
push
mov
sti
cmp
push
nop
jl
xor
xchg
in
pop
lods
push
sub
imulb
xor
fisttpll
repz
cmpsb
aam
and
decb
pop
cwtl
jns
or
out
popa
call
mov
xchg
in
lds
std
cli
imul
jge
adc
out
mov
sbb
sbb
out
insl
inc
leave
pop
inc
imul
mov
adcb
or
dec
mov
pop
mov
repz
cmpsl
and
jb
cltd
jb
test
xor
stc
ss
repz
lret
dec
rorl
xlat
nop
rol
and
xor
repz
xor
sub
mov
xor
or
push
push
inc
jnp
fldt
or
mov
jl
add
and
add
mov
fwait
xor
lods
ljmp
int3
into
ret
mov
cmpsb
xor
add
xor
int
ss
push
movsl
js
cmp
ss
out
popa
mov
pop
inc
nop
jp
inc
jle
mov
add
out
int3
mov
cmp
jb
pop
stc
jecxz
push
mov
scas
lds
jb
faddl
mov
icebp
lret
hlt
jecxz
in
movsl
imul
fsin
push
dec
push
data16
sbb
push
repnz
mov
adc
out
dec
xor
dec
sub
push
cltd
push
lods
xor
push
sbb
lea
dec
adc
push
fisttpll
pop
out
insb
mov
xlat
pop
jl
or
fisubs
lock
mov
cmpsb
sbbb
jbe
mov
inc
lea
in
mov
adc
outsl
scas
dec
cmp
icebp
ret
push
adc
xor
mov
testl
mov
repz
movsb
push
or
sbb
in
scas
leave
das
cmpsl
lods
sbb
repz
arpl
inc
dec
ss
repz
sbb
cwtl
xor
cli
aam
mov
orl
outsl
jno
fnstcw
idivl
cmpb
ret
jge
jmp
in
std
mov
xor
push
mov
mov
loopne
sbb
cli
mov
and
xchg
mov
imul
out
ret
scas
je
mov
mov
sbb
inc
andb
int
push
gs
fbld
cli
and
ret
jae
xor
aaa
hlt
or
loope
jns
movsl
call
add
cmpsl
out
test
jo
fmul
rcr
es
mov
std
bound
out
push
repnz
xchg
jp
int3
test
stos
xchg
out
push
les
mov
sbb
rol
jge
outsb
xor
in
push
testl
mov
push
fdivp
gs
negl
fnstcw
out
push
sbb
addr16
gs
adc
xchg
inc
shr
sub
popl
pop
adc
and
cmp
fld
mov
mov
add
aaa
imul
addr16
call
lods
push
xchg
sti
cltd
mov
jne
inc
mov
test
cmp
push
lods
push
test
outsb
int
fldenv
bound
cmpsl
incl
mov
fnstcw
or
ss
nop
adc
cmp
ss
gs
sub
xchg
rcrl
add
mov
adc
aaa
xchg
inc
jnp
daa
sub
into
out
stos
cmpsb
add
push
xchg
loop
cmp
bound
outsl
add
jle
jg
xor
sarb
fldt
out
add
or
insl
sbb
add
jb
aam
mov
hlt
inc
popf
lcall
add
cmpsb
out
rol
imul
rorb
sub
and
test
mov
jg
testl
mov
mov
ds
jle
fcomps
mov
jp
xchg
or
clc
test
stos
push
adc
inc
lods
arpl
into
push
mov
add
add
add
mov
jns
cs
in
test
jb
jl
sub
lcall
movsb
mov
and
imul
aaa
and
test
adc
pop
pop
and
sahf
fidivrs
or
mov
jp
ja
sbb
int
add
mov
add
test
or
aam
mov
mov
mov
std
shlb
cmp
mov
xchg
daa
call
outsl
popa
xchg
xchg
push
fstl
pop
pop
std
jmp
mov
and
lods
inc
jae
scas
addr16
push
jge
cwtl
stos
test
loopne
repz
pop
pushw
and
std
pop
xlat
aas
add
jnp
sbb
test
stc
fwait
mov
mov
fld
pop
fwait
adc
popf
insb
rcrl
stos
sbb
outsl
push
scas
pushf
dec
sbb
add
mov
push
xlat
ficomps
jns
cmp
fnstsw
inc
cld
jae
jl
sbb
add
inc
out
jle
lods
and
cmc
repnz
in
popl
pop
js
cmp
mov
lcall
test
int3
jp
push
add
pop
mov
sub
cli
jecxz
xchg
imul
jbe
cwtl
and
popf
sub
addr16
dec
mov
icebp
pop
push
lock
xchg
daa
fs
lea
test
fldpi
add
stos
sti
jle
jno
outsl
out
test
int
cmp
ss
dec
mov
imul
jp
fcoml
scas
scas
es
loop
in
jb
cmpsl
aam
mov
add
xchg
fdivl
pop
hlt
mov
mov
cld
mov
sub
lcall
pop
in
xor
xor
mov
fs
jns
xchg
pop
xor
icebp
mov
add
adc
movsl
std
jp
inc
add
lea
aas
push
popa
jae
shlb
dec
add
adc
dec
inc
popa
fstpt
lea
mov
sarb
mov
ljmp
fldln2
fs
jno
sbb
sub
std
cli
gs
inc
mov
lods
icebp
cmpsb
dec
jns
out
lret
jb
pop
mov
jge
sbb
in
push
in
dec
sub
xor
lods
cmpsl
pop
dec
mov
xor
jecxz
popa
inc
adc
jmp
subl
mov
mov
dec
cld
call
inc
mov
daa
push
in
adc
mov
test
shll
mov
adc
add
and
pop
leave
cmp
test
jno
sahf
cltd
and
mov
sub
mov
pop
and
push
mov
mov
cmp
or
push
fisubrl
or
pop
push
icebp
aad
mov
cmp
sbb
jne
rcr
test
push
cli
add
stos
adc
xor
shlb
xor
push
sub
scas
bound
jecxz
sub
mov
jne
stc
arpl
cmp
sbbl
mov
out
test
sbb
subl
cs
shlb
enter
adc
mov
aam
lods
daa
sbb
inc
xor
daa
out
testb
test
sbb
fadd
shll
mov
and
cmp
adc
cltd
out
dec
shrl
int
or
add
jmp
dec
int
pop
stos
jecxz
out
test
inc
fimuls
fs
push
call
xchg
in
incl
push
push
pop
jne
cld
jo
pop
mov
or
dec
push
pop
test
xor
movsb
dec
js
mov
push
lds
cmp
mov
mov
test
add
mov
subl
pop
sbb
scas
ret
clc
shll
in
pop
lods
and
fs
popf
push
cmp
or
sub
pop
enter
orl
out
test
mov
mov
rcr
adc
push
ror
out
imul
xchg
mov
int
xchg
and
mov
jne
add
ljmp
ror
xchg
adc
sahf
scas
das
mov
mov
sub
data16
js
sbb
fsts
out
cmp
mov
cmpsb
or
cmp
inc
and
test
add
mov
js
sub
mov
dec
lods
mov
jecxz
into
mov
mov
aas
loope
cmpsl
sub
shr
cltd
sbbb
mov
mov
fadds
sub
testb
shl
iret
mov
push
call
cld
adc
ds
xchg
cli
cmpsb
scas
popa
pop
xchg
stos
into
mov
mov
add
push
rclb
mov
imul
cmc
mov
mov
or
and
dec
mov
inc
cs
sbb
leave
xchg
in
scas
xchg
fdiv
cmpb
sub
mov
and
popa
adc
scas
ljmp
xchg
lock
cwtl
sub
add
xchg
dec
and
adc
lahf
xchg
sub
outsl
pop
das
ret
out
dec
loopne
pop
xor
fsubrs
mov
stc
jecxz
sub
ss
out
mov
incb
int3
cli
dec
and
sbb
adc
add
sahf
imul
aam
dec
adc
fldenv
cmp
loopne
dec
cli
mov
pop
sahf
test
aad
movsb
cmpb
mov
pop
cmpsl
xchg
jae
mov
mov
inc
push
push
sarb
cld
push
pop
mov
fistps
dec
jb
mov
xchg
sbb
ja
insb
mov
loope
cltd
jmp
lods
sub
out
rol
xchg
mov
add
jl
out
fistpl
mov
mov
mov
ret
std
enter
pop
hlt
pop
sub
cmp
scas
outsb
and
dec
aaa
inc
inc
pop
dec
mov
mov
test
mov
inc
in
pop
sbb
mov
fyl2x
sbb
xchg
clc
lret
negl
scas
cs
int3
jmp
push
jecxz
mov
sbb
push
test
inc
sub
inc
mov
iret
add
iret
push
stos
inc
imull
sub
fdiv
je
dec
cmp
fnstenv
fdiv
cmpsl
and
sbb
gs
jbe
pop
imul
nop
sbb
sub
jae
test
mov
adc
lock
mov
loop
cmp
test
int
sahf
idiv
dec
mov
rcrb
movsl
dec
pop
mov
out
sub
aaa
shlb
in
fildl
shrl
shlb
adc
movsb
test
pop
rcrb
adc
outsb
add
push
pop
dec
sbb
fldenv
cltd
aad
popf
mov
daa
cmc
aam
shlb
sti
xor
lock
hlt
mov
push
lock
or
push
jnp
adc
addr16
adc
popa
cmp
push
repz
inc
outsl
jge
out
xchg
cmpsl
fisubrs
test
std
push
or
push
sub
in
and
xchg
imul
add
aam
cmp
lods
movsb
test
stc
cmpb
mov
mov
jmp
mov
sbb
cmpsl
push
gs
neg
dec
pop
sahf
into
mov
push
test
mov
sub
mov
scas
aaa
lods
xchg
cmp
mov
cmp
iret
lcall
loopne
mov
hlt
adcl
mov
cmpsb
jbe
lds
loopne
int
movsl
mov
arpl
xchg
int3
jae
fucom
lods
gs
fwait
pop
scas
sbb
xor
sbbl
pop
hlt
xchg
and
imul
dec
cmp
pop
adc
movsb
mov
sbb
shrb
fstps
fsubrl
xchg
xor
inc
repnz
sarw
mov
push
shll
and
xchg
adc
pop
in
ret
xchg
out
adc
and
xchg
lret
jmp
into
arpl
add
shrl
mov
mov
jno
in
enter
xchg
xor
addr16
aaa
mov
mov
popa
dec
add
ret
cli
cmp
js
popw
arpl
or
mov
pop
add
rolb
and
and
or
jp
and
mov
dec
rcr
js
sub
mov
rcrb
mov
xchg
stos
pop
int3
mov
out
dec
imul
dec
pop
mov
jp
xchg
test
shr
test
push
fwait
xor
sbbl
pop
int3
lcall
and
inc
cwtl
arpl
ja
in
mov
lods
popf
xchg
stc
movsb
std
jbe
fucomp
inc
arpl
and
jno
mov
and
mov
fbstp
aas
add
in
jmp
cltd
mov
popa
xchg
loope
mov
nop
test
out
jno
ret
xor
adc
push
jecxz
ja
inc
or
push
stos
dec
or
push
jp
clc
xchg
mov
dec
jp
inc
das
fistl
add
sahf
and
fisubs
or
pop
jo
out
mov
inc
gs
icebp
ljmp
xchg
arpl
dec
cmpsl
hlt
aaa
lds
mov
jb
movsb
sbb
scas
fidivrs
insb
add
mov
mov
dec
and
cmp
shl
dec
dec
fistpll
push
mov
mov
cmp
test
jnp
in
xchg
pop
mov
outsb
and
cmpsl
cmpsl
inc
mov
sbb
sahf
cmp
leave
and
push
fildl
jle
adc
xchg
mov
ja
mov
inc
lods
rorb
jo
push
call
xchg
fwait
test
gs
mov
push
pop
inc
fcomi
scas
cmp
in
aam
shr
mov
adc
in
xor
test
pop
cmp
cmp
jge
fldcw
mov
jbe
ljmp
cld
or
ficomps
outsl
cmp
int
jae
das
dec
dec
push
ljmp
or
and
sbb
mov
fsubl
fincstp
cmpsb
dec
setge
outsl
dec
mov
sbb
push
mov
dec
sti
int3
fidivrs
fbld
sbbl
aaa
je
out
cltd
loopne
or
mov
ja
outsl
lock
jl
xchg
inc
cmc
dec
int
dec
jne
mov
push
popf
in
sub
inc
and
xchg
jl
out
fdivrs
xchg
pop
and
popf
sbb
sbb
mov
into
mov
dec
lea
mov
and
movsb
in
mov
sub
inc
sahf
and
mov
push
cmc
les
hlt
repz
xlat
cld
movsl
dec
jecxz
test
jae
mov
jns
pop
mov
call
fxch
mov
mov
mov
pushf
jns
jp
fprem1
rolb
adc
je
xlat
pop
repz
fwait
outsb
hlt
sbbb
lds
or
xor
push
sub
mov
mov
jnp
out
fmull
sub
sub
sub
sbb
xchg
lods
mov
pop
ss
push
dec
mov
mov
cli
push
mov
fisttpl
xorl
ret
fsubrl
jns
imul
push
adc
xorl
xor
jbe
aam
je
fs
xor
pop
mov
cwtl
cli
repz
call
cwtl
out
outsb
adc
push
pop
jmp
inc
insl
cmp
adc
popa
popa
es
test
stos
test
nop
loop
xor
shl
xchg
adc
xchg
lods
jecxz
test
lock
les
dec
cmpsb
pop
jp
addr16
int3
mov
imul
daa
dec
pop
sub
fdivs
pop
mov
daa
cmpsl
push
inc
pop
sub
mov
das
mov
decb
sti
and
inc
push
mov
jp
xor
jmp
mov
push
mov
sbb
pop
dec
fcmovne
pop
jo
nop
fs
and
sahf
jle
mov
shrb
aas
lods
xorl
add
mov
bound
sub
and
mov
pop
lock
scas
sbb
sbb
andl
jnp
repz
roll
sahf
push
imul
hlt
lods
int3
cmp
or
cmp
mov
adc
xchg
loop
es
sbb
pusha
inc
pop
jno
mov
test
or
mov
dec
lods
cmpsb
dec
insb
scas
mov
sub
stos
pushf
or
test
mov
push
enter
sbb
loope
xor
int
mov
mov
mov
and
sbb
inc
fldcw
js
and
xchg
outsb
adc
push
and
push
adc
test
pop
inc
loopne
stos
inc
ja
insb
shrb
mov
sbb
popf
stc
lret
jno
sbb
fsubl
mov
and
in
sub
ret
ds
andl
pop
add
scas
rcrl
stc
add
cmpb
clc
ret
fbstp
dec
mov
imul
push
stos
xchg
adc
pop
lock
push
push
pop
loop
rcrl
xor
insb
mov
xor
jecxz
mov
cmp
dec
ret
aad
imul
inc
xchg
or
jle
test
push
arpl
fidivrs
lds
and
fstpl
pusha
ja
arpl
and
xchg
movb
movsb
mov
aas
push
fmull
outsb
push
pop
int
mov
or
cs
adc
add
mov
mov
jle
mov
xchg
xchg
push
fsubr
mov
lret
sub
fsts
push
mov
xor
test
dec
mov
pop
out
icebp
lret
testb
jbe
test
pop
jae
scas
add
mov
in
repnz
mov
xor
add
sub
fimull
jecxz
mov
mov
add
dec
movsb
sarb
roll
out
in
or
xchg
jle
mov
mov
lock
push
movsl
adc
and
and
sti
cmp
mov
or
scas
inc
pop
mov
out
or
shrl
data16
stc
push
jl
aas
insl
std
mov
push
scas
cmc
xchg
enter
in
bound
mov
lock
inc
rep
and
out
in
data16
xchg
jb
jae
sbb
and
cli
mov
and
jge
xor
sub
bound
cmp
test
pop
popf
ds
xchg
pop
cs
mov
inc
dec
in
stc
jg
aaa
les
lret
sbb
mov
test
adc
stos
int3
lahf
jnp
push
mov
mov
inc
mov
pop
adc
sub
in
xchg
fwait
stc
lcall
cli
rcrb
xchg
call
lea
mov
mov
out
or
cmp
rorb
mov
fsts
fcom
vprotb
fmulp
dec
cmp
cmpsb
sbb
test
cmp
pop
mov
mov
sub
xor
mov
jmp
out
sbb
mov
dec
iret
in
scas
es
pop
dec
sbb
adc
sarl
cld
cmp
push
cmp
mov
les
std
pop
and
cmp
add
jmp
in
rolb
imul
jl
mov
push
sahf
pop
es
insb
jb
les
mov
jnp
dec
push
fdivrs
movsb
jne
inc
or
leave
dec
mov
fnstenv
mov
dec
mov
cmpsl
fisubrs
mov
mov
test
xor
popf
daa
push
mov
fstpl
addr16
mov
lret
test
out
shlb
adc
sbbl
jne
push
movsb
dec
mul
adc
stos
xchg
fisubs
lret
popa
scas
xchg
dec
xor
xor
mov
fiaddl
jns
mov
dec
push
imul
mov
stos
xor
movsl
cmp
aas
leave
ds
adc
pop
outsl
movsl
out
mov
dec
in
mov
jp,pn
mov
adc
fwait
pushf
test
pop
cltd
inc
push
std
mov
push
or
jl
fcoms
pushf
lods
test
out
dec
in
push
cmpsl
mov
rorl
fstp
mov
stc
iret
xchg
shrb
das
imul
mov
cmp
pop
adc
repz
pop
test
popf
push
push
dec
sbb
jge
adc
movsl
test
in
sti
adc
pop
lcall
add
int
push
xlat
fxch
lods
lahf
mov
scas
scas
xchg
lahf
aas
outsl
test
js
inc
stc
sbb
xorl
mov
call
cmpb
sahf
mov
idivl
fsts
add
push
push
popf
pop
mov
movsl
xchg
xor
pop
mov
cmp
mov
movsb
mov
inc
mov
es
add
push
mov
loop
in
inc
mov
es
cld
aaa
enter
arpl
aaa
pushf
and
mov
das
faddl
pushf
test
or
cmp
jae
call
mov
mov
lods
mul
jl
push
xchg
fwait
lahf
lcall
sbb
pop
fstpt
add
test
lods
jl
test
sub
dec
fcompl
in
ficoml
insb
cmp
addl
xchg
popf
jge
and
mov
jae
jle
jl
test
sahf
in
lcall
xchg
mov
pop
decl
sub
jge
rcr
cld
sub
test
mov
pop
and
scas
push
xor
mov
test
lahf
xchg
ret
or
lods
dec
mov
aam
pop
sbb
mov
stc
cli
sub
cli
push
xor
mov
sub
test
adc
inc
jnp
push
jle
popa
test
in
in
std
inc
into
fs
jmp
stc
dec
jae
pop
adc
int3
and
cld
imul
cmp
xor
int
negb
xor
push
fld
icebp
jecxz
fs
xor
stos
jle
stc
lahf
int
mov
sbb
leave
inc
flds
push
lahf
jmp
jmp
mov
push
test
inc
cmpsb
add
mov
inc
push
jnp
xorl
sub
mov
cmp
push
mov
jae
stos
test
sub
mov
mov
nop
inc
lds
jnp
xchg
sbb
int
shl
in
das
repz
addr16
sub
adc
inc
xchg
lds
add
ficoms
movsl
fnsave
sbb
xor
stos
dec
call
jecxz
and
push
and
mov
and
out
adcl
repz
dec
push
push
jp
push
and
nop
shrl
sbb
shrl
andl
aaa
cmp
or
leave
aas
mov
cmp
testb
loopne
mov
push
xor
daa
dec
outsb
sbb
popf
xchg
adc
sub
mov
cmp
jnp
faddl
xchg
adc
pop
sahf
test
adc
sub
mov
xchg
loopne
cld
addr16
pop
subl
mov
cmpsl
ja
fildll
mov
adc
andl
xchg
xchg
push
jb
jnp
fmuls
lods
sbb
mov
mov
xchg
test
adc
xor
push
dec
mov
dec
push
jnp
mov
inc
test
cmpsb
fmul
adc
xlat
ljmp
mov
out
addr16
push
sub
aaa
push
or
jmp
lret
out
jnp
ljmp
dec
and
inc
rcrb
mov
subl
jl
adc
scas
pop
cmp
in
adc
jae
sub
jg
jns
adc
out
sbb
jno
dec
xor
sub
dec
mov
jnp
push
mov
les
cmp
movsb
mov
or
cmpsb
nop
push
sti
rorl
mov
cmp
mov
lahf
and
es
pop
lock
jae
lahf
mov
iret
cmp
push
inc
movsl
lods
sub
jmp
outsl
cmp
repnz
rcll
scas
jb
hlt
movsl
lods
dec
test
adc
mov
stos
hlt
insl
jae
outsb
mov
sbb
sbb
iret
das
cmpsb
cmp
cmpl
dec
push
lods
jp
and
in
mov
in
or
lods
dec
std
xchg
fsts
sbb
lods
test
fisubs
sbb
aaa
inc
scas
cmpsb
sub
popf
into
rorl
xchg
test
sub
mov
push
int
cmc
inc
fwait
sbb
lds
mov
jbe
addl
repz
call
pop
inc
lock
test
rcll
inc
mov
test
and
jno
pop
mov
jno
std
ret
xchg
ds
inc
leave
push
and
jno
stos
es
lahf
pop
and
lea
movsb
adc
or
call
mov
lahf
out
and
jnp
outsl
out
jnp
mov
icebp
lahf
dec
bound
stos
scas
fmull
das
repz
push
out
mov
sub
int3
mov
es
jmp
mov
xor
add
bnd
pushf
iret
sarl
test
ftst
leave
int3
cs
mov
das
push
dec
imul
std
mov
sbb
jne
cld
sub
xor
out
pop
mov
data16
mov
cmc
and
sbb
xchg
jl
push
repz
mov
shl
push
mov
out
sbb
rorb
xor
popf
xchg
lgdtl
dec
sub
nop
inc
or
jne
xchg
mov
test
add
out
andb
or
outsb
pusha
cmp
cli
cmp
xchg
icebp
cmc
dec
mov
xchg
fstpt
nop
xchg
fldenv
or
pop
ss
mov
test
fisubrs
mov
xchg
cmp
mov
jmp
lahf
cmpsb
sbb
sub
outsl
sub
mov
sahf
add
push
xor
pop
mov
jae
lods
mov
sbb
int3
mov
jge
out
cmp
sbb
loopne
daa
loopne
adc
mov
jne
cltd
mov
fcoml
out
popf
out
mov
cmp
movsl
je
or
xchg
dec
gs
dec
mov
inc
and
mov
lock
mov
cmp
stos
das
cmp
mov
aas
add
les
add
enter
hlt
scas
jns
scas
xchg
mov
stos
or
adc
or
or
lret
out
xchg
ss
test
inc
addr16
adc
cmpsl
or
push
jecxz
sub
xchg
mov
xor
cli
sahf
and
in
movsb
cmpsl
add
out
xor
sti
nop
or
cs
stc
cmp
dec
dec
fs
and
lds
outsl
in
mov
loope
out
repnz
scas
or
int3
add
arpl
jo
inc
cs
insl
mulb
mov
mov
jbe
out
mov
dec
fstpt
pop
loop
pop
addr16
loope
jp
insb
pop
xor
dec
mov
jns
xchg
jo
adc
mov
adc
test
loopne
inc
jnp
or
les
xchg
into
add
and
test
adc
and
fst
shll
pop
jno
sbb
jp
jo
loop
mov
imul
cmp
movsb
sbb
mov
outsl
out
iret
stos
push
aad
addr16
or
loopw
movsl
xchg
cmp
dec
fsub
mov
mov
mov
inc
sbb
add
pop
push
lret
sbb
sarl
call
mov
fldenv
testb
frstor
xchg
imul
fstps
repz
jl
hlt
inc
pushf
inc
mov
lds
sub
cmp
xchg
cmp
sub
out
xchg
out
cmp
xchg
shlb
and
rcrl
xchg
int3
pop
test
mov
aam
adc
loope
sub
cmp
fcompl
jp
inc
or
dec
out
lods
jne
imul
dec
sub
sbb
mov
pop
push
nop
push
loop
jnp
das
mov
mov
pop
aas
or
adc
mov
xchg
jp
out
scas
xchg
imul
rorl
ret
cmp
jns
rcrl
xchg
xor
faddl
repz
xchg
sbb
std
dec
mov
data16
add
scas
xchg
jb
or
mov
xchg
push
inc
xor
pop
subb
and
cmpsl
mov
mov
and
mov
ret
das
or
mov
mov
in
dec
sbb
cwtl
xchg
fwait
pop
push
lcall
stos
inc
or
fistl
pop
mov
inc
inc
bnd
sti
and
sub
mov
mov
popw
jge
dec
sti
push
mov
sub
push
in
mov
xchg
xchg
xor
inc
sub
sbb
dec
sub
dec
pushf
pop
lock
mov
mov
mov
cmp
mov
rol
jge
popf
arpl
sbb
sbb
cmpsb
mov
lds
xor
inc
imul
mov
data16
dec
ret
mov
shlb
outsb
xchg
cs
cmp
or
das
xchg
icebp
inc
cmp
lock
das
xchg
nop
xchg
inc
mov
ficoml
orb
scas
or
cmpsl
arpl
int
jbe
insb
sbb
gs
pop
dec
xor
push
and
sub
add
dec
aam
sbb
dec
push
pop
and
mov
or
imul
scas
xchg
sbb
dec
and
mov
cld
cmp
fdivl
mov
inc
dec
inc
stos
movb
stos
push
cmpsl
xchg
shrb
std
sbb
rcr
mov
sbb
mov
fldenv
sbb
mov
jns
icebp
fldcw
sub
in
or
sbb
mov
sbb
ljmp
xchg
mov
sub
mov
push
insb
popf
jbe
push
sub
xlat
jno,pt
dec
push
loope
inc
enterw
das
push
jecxz
cld
sti
scas
push
test
ret
repnz
jb
or
leave
std
cs
data16
xchg
add
imul
stc
clc
pop
into
mov
aaa
and
movsl
add
test
mov
sbb
dec
test
jnp
call
pop
inc
int
push
jbe
sub
je
mov
in
and
xchg
xor
enter
lds
fwait
mov
inc
inc
mov
outsl
icebp
adc
mov
out
jo
mov
scas
es
std
test
sbb
int
or
adc
fsubl
dec
scas
inc
cmpsb
flds
push
cmc
xchg
jl
sbb
cli
mov
das
jno
pop
out
mov
sub
movb
fisttpll
movsb
enter
cmp
hlt
loope
pop
adc
fidivrl
mov
out
push
cld
mov
or
loope
jecxz
lods
test
or
arpl
daa
fdivrl
movl
sbb
adc
jle
movsb
jno
lods
cmp
test
xchg
xlat
mov
test
inc
gs
test
sbb
ss
andl
sub
es
xchg
jo
decb
dec
addr16
mov
gs
cltd
sti
aam
xchg
andb
push
arpl
cmp
fbstp
in
mov
inc
lret
sahf
adc
push
inc
shrd
fsubrl
outsb
test
sub
pushf
daa
out
test
dec
inc
loope
mov
pushf
dec
std
xor
push
test
icebp
scas
in
mov
jae
andl
fmuls
in
mov
jl
push
jl
test
ss
in
inc
daa
dec
pop
imul
push
sbb
test
cmp
dec
lea
lods
test
mov
mov
mov
lods
push
push
in
das
ja
movsl
arpl
repz
fdivrp
and
xchg
adc
fisubs
outsb
in
pusha
fisubrs
clc
mov
addl
push
in
loope,pt
push
ljmp
xchg
insb
int
sbb
mov
cmp
into
push
add
or
lds
loope
cld
stos
test
sarb
cltd
jle
clc
lret
movsl
mov
movhps
pop
pop
in
xor
sbb
or
ljmp
clc
sub
mov
enter
xor
int
pop
jl
mov
add
dec
into
sub
push
movl
fld
pop
loope
in
cmp
xor
mov
jae
xchg
cmp
fdivs
cmp
inc
dec
test
mov
cli
in
pop
incl
lcall
mov
test
ja
sub
or
das
pushf
test
mov
popa
call
lea
sub
aad
stc
jmp
js
dec
push
flds
movl
lods
outsb
lcall
jmp
fldenv
out
jno
inc
pop
push
sub
pop
pop
fistpl
and
jno
mov
xchg
add
pushf
mov
aam
push
ret
dec
sbb
and
xor
or
negl
jp
mov
cld
mov
pop
push
jo
sbb
outsb
repz
adc
popf
loop
test
pop
mov
sbb
xor
repnz
test
jb
call
dec
ljmp
sub
cli
push
aaa
push
lods
and
retw
mov
dec
movsl
ss
inc
add
fstps
dec
hlt
incb
std
xor
mov
mov
adc
jle
push
adc
pop
fwait
int
mov
mov
outsl
inc
mov
outsl
mov
xchg
cltd
inc
and
lcall
ds
sbb
xchg
mov
mov
mov
ret
mov
js
mov
ds
loopne
push
or
aad
mov
xor
push
fidivl
js
jmp
loop
or
sub
mov
cwtl
push
ror
fchs
adc
push
popf
mov
fildl
add
ret
jae
andb
xor
sahf
stc
push
mov
jl
mov
pop
push
push
mov
inc
mov
scas
mov
fidivrs
dec
pusha
mov
dec
push
shll
movsb
xchg
or
mov
jl
dec
lret
insl
sub
jnp
enter
xchg
push
dec
popf
push
outsl
out
xchg
and
popf
mov
scas
scas
rorl
int3
scas
cld
fstps
xor
inc
xchg
psadbw
loope
xchg
loop
pop
mov
loopne
mov
scas
pop
cld
arpl
jl
frstor
adc
xchg
repnz
push
imull
cmp
pop
adc
jb
sbb
cwtl
stos
jle
mov
inc
es
xchg
pop
repnz
mov
mov
cmp
inc
dec
cmp
ss
lcall
fcmovbe
idiv
add
mov
pop
mov
jmp
idivb
sub
jbe
out
pop
fildl
mov
jge
sarl
dec
or
push
ret
mov
rclb
mov
jne
pop
jle
popf
sub
inc
adc
cmpsb
cld
cmp
mov
mov
xlat
push
pop
add
les
mov
outsb
xchg
jge
out
dec
fsubrs
xchg
inc
mov
pop
push
js
repz
rorl
mov
ljmp
push
pop
fwait
push
mov
dec
jb
ljmp
and
xor
sbb
mov
sti
rcrl
sbb
jo
sbb
adc
fldcw
xlat
cli
and
pop
dec
add
data16
or
add
call
fcompp
push
mov
dec
cmpsl
xchg
jne
test
lock
je
into
mov
repnz
mov
or
outsb
or
or
cmp
adc
jl
dec
cmp
into
xor
fstps
jo
subb
repnz
mov
and
cmp
sbb
enter
cs
xor
scas
test
and
scas
stos
mov
sub
frstor
and
test
or
mov
fdivs
sar
call
mov
sbb
pop
push
xchg
mov
decl
mov
sbb
mov
dec
xchg
je
mov
add
popa
sbb
jae
mov
xchg
or
push
test
or
pusha
stos
arpl
ljmp
int3
repz
flds
xchg
mov
pushf
xor
push
inc
push
cld
sahf
jle
test
rcrl
les
aam
jnp
sbb
xor
int
mov
pop
test
stos
mov
push
jecxz
cmp
xorb
sar
adc
dec
shl
mov
inc
fnstenv
imull
push
pop
filds
sbb
inc
push
aam
xchg
in
out
lods
or
lahf
inc
push
mov
pop
jmp
add
data16
jl
sub
insb
cmp
push
sbb
and
xor
test
lcall
jae
orb
pop
cs
inc
fdivs
test
fsts
mov
repnz
idivb
or
inc
inc
imul
in
imul
hlt
jnp
insl
fsts
out
scas
leave
jb
mov
loopne
test
adc
shl
cld
xchg
jne
mov
scas
in
scas
cmp
gs
jae
add
jno
stos
fmull
push
sub
xchg
xor
test
rcrb
jbe
das
cwtl
rcrb
push
mov
and
movsl
or
xchg
es
sbb
mov
ret
sbb
fwait
in
pop
mov
test
in
enter
stos
pop
and
pushf
movsb
stos
int
enter
orb
clc
or
jp
cmc
nop
xor
sbb
mov
inc
in
sub
pop
sub
xchg
repz
vpmovmskb
shrl
cmc
cld
out
mov
aas
mov
cmp
jae
repz
and
dec
or
test
fmuls
dec
sub
and
and
test
das
cmp
jo
mov
popa
scas
in
xchg
push
jae
loope
jmp
mov
imul
pop
pop
jns
sti
scas
xchg
cmp
mov
test
sub
push
cmp
pop
mov
sbb
repnz
cmpsl
mov
adc
pop
xor
and
xchg
std
adc
adc
jl
xchg
xor
jne
das
adc
popf
test
movsb
test
dec
ret
andb
scas
ret
mov
mov
std
and
cmpsl
jno
cs
sarl
scas
mov
fyl2xp1
daa
scas
ljmp
add
sub
push
ljmp
das
clc
push
jle
loope
push
fldl
mov
imul
in
cmp
out
ficoms
fldenv
in
roll
inc
xor
dec
sub
lods
cmc
jbe
mov
xchg
inc
cltd
mov
fcmovne
sub
fstps
inc
lahf
movsl
push
repz
add
pop
adc
xchg
jnp
inc
scas
dec
popf
jge
jne
sbb
int3
sahf
std
dec
pop
lret
push
or
inc
cli
pushf
and
rcrl
jne
push
push
jle
inc
int
or
and
aam
scas
ss
mov
xchg
adc
mov
sbb
out
mov
outsl
xor
insl
cltd
cmp
lcall
outsl
mov
or
cli
xchg
push
cs
sub
rorb
jecxz
dec
and
repnz
pop
fsubrl
mov
jp
xchg
fld1
mov
mov
ftst
add
mov
ja
outsl
lods
push
lret
dec
inc
inc
hlt
es
and
jnp
add
addr16
sub
xchg
fistl
add
dec
xlat
xchg
xlat
xchg
and
cltd
push
notl
aad
aam
pushf
test
pop
inc
sarb
rcrl
test
fnstsw
pop
movsb
sbb
adc
push
call
push
imul
jg
xchg
imul
jle
push
lods
inc
sbb
imul
es
fs
cmpsl
mov
movsb
dec
and
int3
fsubrs
insl
std
xchg
and
push
sub
daa
stc
scas
das
fldenv
ja
dec
xchg
pop
sbb
dec
pop
dec
in
orl
xchg
enter
aad
pop
xchg
cmp
mov
movsb
leave
pop
rcll
cs
mov
lods
or
dec
cmp
aad
push
jb
dec
repz
xchg
leave
movsl
in
adc
cmp
pop
bswap
push
mov
pop
popf
gs
cli
ds
aaa
jl
mov
stc
jno
mov
insb
call
into
jp
psrld
not
not
pop
cmpsb
repz
cmpb
sub
mov
cld
and
and
pop
neg
cmp
and
mov
cmp
std
fld1
lret
hlt
inc
jnp
and
fcompl
test
repz
inc
sub
cli
int
mov
jns
xor
std
flds
aad
pop
jbe
fsubrs
mov
sbb
sbb
movsb
and
jno
ja
int3
mov
loope
lods
lods
and
outsb
and
iret
dec
lock
lret
pop
xchg
out
adc
data16
movsb
movsl
inc
loop
scas
test
bound
and
jnp
pop
cs
lods
push
scas
pop
lret
lds
pop
adc
mov
cmp
or
mov
mov
and
ljmp
adc
mov
int3
ret
push
jmp
cltd
test
dec
inc
pop
test
ret
push
pop
inc
ljmp
mov
and
dec
scas
shlb
dec
mov
add
jge
push
rcr
add
fldenv
movsl
fwait
lahf
cli
movsl
out
pop
pop
push
mov
jle
ja
lock
stos
xor
pop
lods
out
jb
sub
pusha
xor
and
call
pop
mov
into
cld
repnz
jnp
jno
pop
imul
xchg
int
sub
push
icebp
repnz
mov
adc
es
rorb
ds
lea
loop
in
enter
dec
push
mov
out
sbb
ds
insl
jns
ds
sti
push
xor
cli
cmp
mov
aam
push
inc
repz
scas
xor
mov
int3
lcall
sahf
mov
inc
out
and
fucomp
scas
enter
sbb
out
cwtl
mov
outsb
inc
push
ficompl
mov
xor
imul
mov
xchg
cmp
cmp
test
dec
loope
jns
xlat
fwait
enter
out
and
repz
xchg
movsb
fmul
int3
push
das
loopne
loop
add
inc
sub
aad
xchg
mov
repnz
pop
xchg
xor
push
sub
addb
xlat
push
cltd
mov
in
push
test
popa
test
call
std
mov
sbb
iret
in
test
test
xor
cmp
xchg
mov
mov
lahf
sub
enter
hlt
mulb
adc
daa
xchg
into
movsl
movsl
cmp
jmp
fstpt
jno
mov
sub
xchg
lods
push
push
in
push
xor
mov
xor
int3
lret
jl
add
sti
dec
roll
rorb
inc
imul
inc
leave
flds
xchg
jl
fsts
inc
daa
je
jp
dec
pop
repz
lock
scas
sbb
mov
xchg
push
sub
jg
cmp
scas
pop
lods
and
repz
inc
pop
push
jbe
std
hlt
inc
mov
mov
sbbb
pushf
movsl
mov
rorl
push
out
flds
daa
movsb
out
xor
push
das
and
pop
jecxz
and
idivb
clc
push
fistpl
pop
mov
pop
flds
fdivs
leave
mov
or
sti
cmpsb
rcr
xor
popf
xchg
mov
imulb
jne
mov
dec
subb
test
pusha
mov
enter
xchg
mov
rcr
and
jb
repnz
xchg
jbe
mov
push
test
loope
cmp
fwait
int
mov
sahf
int
mov
test
mov
out
inc
inc
sub
sbb
int
rorl
cmc
push
sbb
push
sbb
out
repnz
es
inc
mov
xchg
jbe
xchg
test
mov
andl
cs
xchg
push
aas
lds
lret
adc
les
movsl
rorb
popa
push
cwtl
ret
testl
inc
lods
mov
ljmp
aad
pop
arpl
fsubrl
iret
movsb
idivb
outsl
push
fdiv
lods
adc
pop
insb
sahf
pop
std
inc
popf
cmp
cmpsl
loopne
or
pushf
fcos
dec
rcll
mov
lea
pushf
lahf
ds
push
xor
or
stc
add
xlat
xchg
or
addr16
push
hlt
cmc
add
aam
xchg
imul
outsl
mov
pop
fprem1
mov
in
js
ds
sarb
cli
mov
test
mov
loopne
push
ljmp
sub
xchg
jl
fildl
aad
gs
mov
mov
ja
sub
sbb
shlb
pop
sub
and
jg
das
mov
clc
fdivrl
test
or
xor
cld
dec
mov
xchg
mov
cmp
gs
mov
in
adc
push
jecxz
push
xor
sbbl
push
in
xchg
je
mov
inc
imul
mov
out
repnz
xchg
imul
aad
pusha
xchg
out
dec
mov
mov
scas
ljmp
push
out
cmp
push
jae
mov
sbb
in
push
outsb
or
mov
test
es
push
mov
push
add
in
mov
cmc
xor
call
mov
or
or
mov
lods
sahf
pop
add
sbb
cld
das
mov
cmp
popa
scas
mov
push
jle
cli
inc
icebp
mov
jne
cmp
mov
fs
rcl
in
mov
jle
cmp
out
jnp
movsl
scas
ss
hlt
add
popl
mov
xor
les
movsl
jmp
add
pop
sbb
dec
sbb
scas
dec
movb
inc
cmp
dec
arpl
mov
dec
pushf
add
shl
in
iret
add
pop
pop
fsubr
idiv
test
jbe
mov
js
jg
scas
sub
rcr
stc
adc
and
cmp
dec
daa
sub
cmpsb
dec
and
jno
pop
insl
inc
imul
jp
fisttpll
dec
lcall
imul
sbbb
adc
stos
popf
dec
inc
scas
lds
dec
jge
jo
inc
test
test
pop
or
sahf
adcl
add
xor
in
out
sbb
xor
push
sub
rcr
adc
loopne
jle
fstps
out
nop
pop
mov
sub
sbb
jo
and
dec
inc
into
xchg
xchg
into
mov
sti
mov
jl
mov
xchg
imul
mov
push
mov
push
or
push
dec
jns
ret
adc
arpl
les
sahf
xorl
movsb
dec
ss
mov
pusha
dec
cmp
jle
lcall
fmull
negl
push
movsb
sarl
lods
int3
cltd
aam
xchg
shlb
fdivs
xor
xchg
or
nop
dec
sahf
lea
mov
iret
int3
add
pop
cmp
sbb
cmc
pop
fistps
inc
xchg
add
push
repz
lret
jmp
sub
lods
jmp
arpl
and
fsubs
es
lods
inc
push
add
xorb
data16
pcmpgtd
mov
fdivrl
lret
inc
cmp
push
scas
cmp
repnz
push
pop
push
mov
stos
pop
adc
movsb
test
mov
dec
dec
sahf
sbb
cmc
clc
pop
flds
sti
js
sbb
scas
rorb
pop
cmp
mov
scas
pop
outsb
in
dec
and
addl
insl
mov
xor
dec
push
adc
stc
fbld
xor
sti
jnp
sbb
mov
lock
fisubrs
xchg
shll
mov
mov
ss
int
dec
xchg
loopne
xor
movsl
movsb
lss
lods
mov
fcompp
xchg
mov
adc
inc
lds
fmull
add
pop
mov
push
mov
mov
dec
ret
cltd
mov
mov
xor
jg
inc
aaa
shlb
push
out
push
push
ret
sub
ret
mov
cmpl
pop
addr16
jb
test
sbb
fcmovu
mov
sub
sti
xchg
mov
dec
and
mov
push
xchg
cmp
test
mov
or
sub
push
mov
ficoms
test
inc
pusha
mov
mov
jecxz
lock
mov
popa
mov
mov
push
jmp
int
popl
sub
jge
imul
ja
ror
in
out
lods
jns
leave
sbb
xchg
lahf
pop
sbb
mov
iret
mov
roll
xchg
and
jns
lahf
jp
push
in
and
sbb
aas
popa
jae
inc
jae
xchg
and
jns
lods
sbb
pop
and
add
mov
jecxz
std
out
xchg
cmc
jl
ss
movsl
loopne
push
sub
shll
stos
movsb
mov
add
xor
test
rcll
ljmp
scas
icebp
aam
fstps
mov
xor
pop
popf
jg
imul
xorl
push
pop
mov
lods
jmp
or
int
push
nop
aam
pop
inc
popf
stos
pushf
inc
sbb
lods
mov
adc
add
inc
idivl
cli
into
inc
es
cli
push
hlt
rolb
xor
dec
cld
cmpsl
and
xchg
aad
mov
inc
popf
push
leave
scas
sbb
nop
inc
mov
push
or
in
in
hlt
xchg
mov
mov
popf
push
hlt
push
push
inc
inc
jne
movsb
sbb
adc
jle
add
add
cmp
add
in
scas
pop
stos
mov
jle
aad
pop
jge
jne
cmp
sbbb
xchg
repnz
in
xchg
add
mov
mov
mov
aam
scas
jb
inc
popa
cwtl
sub
andl
add
sub
push
insl
xchg
sub
dec
push
cmp
adc
xor
add
mov
and
ret
mov
dec
mov
call
ficomps
mov
push
movsl
jmp
add
inc
pop
roll
cmp
int
pushf
sahf
test
sbb
out
mov
andl
pop
push
xor
jg
int
mov
fstps
mov
fwait
sub
lods
push
sub
xchg
sti
inc
hlt
aad
int
and
js
jmp
repz
jae
adc
lea
jle
loopne
mov
sbb
aam
pop
cmp
jg
imul
xchg
xchg
jmp
out
sbbb
cmpsl
test
std
mov
xor
fdivrs
cltd
in
fwait
mov
rcrb
push
jbe
das
mov
mov
test
jne
cmpl
rclb
popf
xchg
test
jo
mov
push
leave
cs
fidivrs
sti
cmp
sbb
mov
cmc
stc
sbb
fdivs
cli
mov
sbb
loope
xchg
rcl
shll
xchg
xchg
repnz
sub
sub
push
pop
gs
fisubl
addl
orl
mov
sub
sbb
xor
sbb
inc
fmull
out
shll
cli
mov
out
xchg
cmp
repnz
rorl
cltd
mov
outsb
lret
adc
scas
mov
leave
sub
jmp
leave
das
test
xchg
in
scas
cltd
call
push
jns
call
or
divl
fcomip
fistpl
and
in
xchg
scas
mov
and
inc
test
xchg
sub
mov
je
sub
and
imul
ds
or
repz
fsubl
adc
leave
lods
adc
push
movsl
add
scas
enter
mov
mov
fistpll
insb
pop
dec
ljmp
leave
divb
sbb
mov
adc
mov
jae
repz
sbb
cmpsl
dec
inc
cld
ret
jp
repz
movsb
divb
pop
sarb
fistpll
mov
popa
mov
out
lods
cmp
in
sub
dec
arpl
and
or
jmp
inc
xor
inc
push
lea
push
xchg
fidivrs
and
idivl
cmp
inc
cmp
addr16
pop
push
push
xchg
imul
jmp
scas
or
adc
mov
adcl
in
es
es
push
sub
mov
test
cli
or
xchg
in
rcrl
std
loop
scas
xchg
mov
jbe
fadds
fdiv
sub
scas
and
dec
mov
sbb
jb
cmp
orl
scas
loope
adc
and
xchg
enter
in
xchg
lahf
sub
xor
jo
outsb
notb
cmpsl
jge
sub
das
fdivs
pop
push
add
pop
and
sub
mov
mov
cmp
movsb
cmp
mov
push
mov
push
movsb
imul
cmp
xor
int3
out
mov
cli
mov
xchg
scas
adc
imul
adcl
inc
jp
mov
mov
or
xor
push
push
pop
fiadds
repnz
fdivl
push
sbb
std
adc
in
mov
loopne
adc
sbb
xchg
fucomi
sbbl
int3
out
lods
lods
and
or
sbb
fnstcw
fidivs
shrl
jmp
out
aaa
js
shrl
aad
cmp
adc
ljmp
sbb
push
test
call
fstps
pop
sbb
and
dec
or
in
lcall
mov
aad
mov
dec
je
out
scas
add
jmp
test
dec
xor
pushf
sub
cs
shll
xchg
sbb
popa
jl
cltd
adc
push
mov
sub
sti
int
cmp
es
test
movsl
mov
leave
or
pop
lcall
mov
fptan
sbb
mov
test
out
cmpsl
out
push
sbb
push
loope
pushl
push
hlt
mov
movsb
or
leave
pop
fnstenv
pusha
push
idivl
or
addb
and
lods
into
push
push
adc
dec
xlat
cli
sbb
frstor
std
aad
jge
enter
aas
imul
fwait
hlt
imul
mov
lcall
xlat
xchg
daa
pop
inc
movsl
pop
nop
mov
js
std
sub
inc
jle
add
sbb
cwtl
aad
movsb
mov
int3
xor
mov
cli
sbb
mov
and
insb
mov
ret
test
mov
mov
or
xchg
loopne
push
push
add
cld
xchg
fcompl
pop
mov
fwait
mov
mov
adc
jbe
push
movsl
pop
jb
int
and
ret
gs
push
xlat
std
inc
push
push
out
pusha
pusha
push
rcrb
lods
js
pop
fdivl
movsb
out
aaa
xlat
outsb
out
push
xor
das
icebp
lock
mov
pusha
dec
sarb
mov
mov
mov
out
out
in
addl
aam
or
mov
pop
push
icebp
jo
mov
int3
pop
mov
mov
mov
addb
push
add
adc
cmp
fdivrp
lock
push
in
in
dec
lods
sbb
rcr
mov
pop
icebp
into
in
shrb
clc
mulb
in
imull
adc
test
fcmovnu
cmp
in
xor
inc
mov
sub
add
push
xor
scas
std
call
xchg
rcll
rorb
in
sbb
xchg
sub
fucomi
and
push
cltd
jns
jp
push
test
mov
std
movb
pusha
fistl
pop
sbb
in
addr16
in
mov
cwtl
mov
dec
inc
fcoms
scas
out
in
xchg
repz
mov
out
jmp
adc
push
jg
jle
addb
stc
std
mov
mov
dec
fistpl
mov
fldenv
fs
cwtl
push
arpl
fistl
stos
hlt
test
xchg
lret
sub
push
fstps
lahf
dec
sahf
sub
test
mov
out
sub
xchg
mov
pop
roll
mov
xchg
sub
imul
push
out
pusha
mov
push
sbb
popf
mov
pop
lcall
scas
insb
sbb
cmpsb
xlat
and
leave
repz
jno
shl
mov
push
sub
popf
push
mov
fldenv
in
lods
stc
pop
icebp
fsubrl
inc
aaa
addb
lret
inc
xor
jle
jae
dec
sbb
pop
mov
inc
das
sbb
push
and
pop
movsl
data16
fisubs
fstps
and
cmc
push
pop
xor
inc
mov
xchg
lahf
in
inc
xchg
sub
sahf
push
gs
cmc
sbb
sbbl
dec
and
repz
iret
sub
js
repz
cmc
xor
mov
mov
dec
and
and
stos
xchg
stos
add
sbb
mov
pop
jnp
xor
das
stc
inc
inc
jnp
cltd
xchg
ljmp
sub
cmpsb
andb
inc
into
pop
nop
push
stos
insb
inc
and
sub
mov
mov
push
pop
pop
rcrl
xchg
jb
adc
jbe
sbb
arpl
xor
leave
fdivs
add
jp
jmp
and
pop
nop
nop
sub
push
ja
lds
jle
cs
inc
mov
in
mov
xchg
dec
fstps
pop
add
fisubrs
stos
pop
add
adc
lahf
popa
cmp
scas
push
lret
sti
int
cmp
jb
dec
xchg
sti
daa
into
cmpl
add
insl
or
push
repnz
sbb
mov
nop
pushf
inc
pop
xor
fistpll
lret
test
popa
subl
push
adc
pop
test
rcr
inc
aad
mov
fbld
out
fwait
rep
aaa
mov
sub
fimuls
mov
jae
inc
cmp
xchg
jle,pt
lret
pop
xchg
out
fnstcw
jns
jge
arpl
cmp
and
test
fnstenv
push
sbb
dec
xchg
and
sbb
mov
or
lods
push
pop
add
arpl
in
inc
push
push
add
mov
jno
xor
stc
inc
sahf
xchg
pop
popa
sarl
or
xchg
cs
xchg
fsubr
es
sbb
and
mov
jg
mov
cmp
test
xchg
imul
test
pop
or
push
sbb
mov
mov
mov
jno
mov
jae
sub
pushf
cli
dec
punpcklwd
outsb
out
push
out
ja
push
data16
mov
or
faddl
ss
mov
pop
sbb
and
xchg
inc
stos
repz
and
rcl
dec
out
aam
in
fstpl
xor
dec
lods
mov
and
scas
push
jecxz
fsubs
cltd
cmpl
push
stc
mov
fimuls
push
mov
mov
inc
stos
or
dec
jge
adc
mov
cmp
xchg
adcl
movsl
push
mov
cltd
ret
jno
sbb
and
movsb
and
dec
daa
dec
hlt
push
push
lcall
adc
sahf
lahf
pop
test
out
cmpsl
stc
add
fisubs
in
lods
lea
addr16
cmp
mov
mov
fs
test
movsl
mov
push
xor
cmp
jl
sbb
sub
pushf
das
push
push
mov
addr16
fildl
lret
adc
int3
aam
andl
adc
push
out
test
fwait
mov
dec
fstl
mov
in
push
lds
pop
mov
jae
pop
mov
xor
xlat
rcl
push
dec
loopne
mov
in
mov
ss
popa
test
mov
jae
scas
sub
pop
test
test
loopne
and
push
lret
mov
dec
movsl
fstps
mov
pop
daa
mov
fwait
clc
dec
adc
sysenter
mov
sarl
mov
ret
cli
in
cld
loope
xlat
adc
movsb
xorb
mov
sahf
mov
cmp
fdiv
sub
mov
jae
or
scas
sub
fabs
sbb
mov
in
int
mov
in
fisttpll
jb
and
pop
or
jmp
sbb
sub
ror
lock
aam
and
mov
cmp
rcrl
gs
sahf
dec
sbbb
testb
leave
xor
add
mov
sbb
divl
pop
pop
mov
cmp
shll
and
xchg
mov
out
xor
adc
loopne
mov
loopne
cltd
jp
pop
addr16
fwait
mov
hlt
lods
stc
xchg
popa
into
cmpsb
push
and
xlat
and
fldln2
lds
jb
sbb
mov
dec
iret
repnz
pop
adcb
aam
mov
es
and
and
imul
mov
mov
push
push
xchg
adc
aam
or
xor
aad
push
inc
jo
inc
mov
fs
popf
jae
jle
loope
pop
ljmp
rolb
movsl
adc
lret
push
cmpsb
add
testb
negl
and
xchg
fimuls
jnp
cwtl
test
pop
into
push
scas
add
stc
xchg
xor
dec
mov
clc
testb
jp
sbb
xor
pop
and
mov
push
sbb
test
mov
adc
repz
int
lret
orl
les
jns
cmp
mov
mov
movsb
mov
cmp
jae
xchg
lcall
add
sbb
mov
dec
std
cwtl
add
repz
xchg
in
ftst
mov
das
test
fisubl
mov
jge
test
mov
sbb
mov
test
fnstcw
jne
adc
cmpsl
cmpsl
push
mov
repz
shrb
xchg
fsubrl
mov
mov
outsb
es
fwait
pop
cmp
sti
add
pop
xchg
push
sahf
push
mov
fwait
mov
push
lock
daa
sub
imul
dec
jecxz
out
std
mov
lock
and
out
cs
je
std
xchg
subl
jbe
xchg
scas
add
mov
shrl
sub
out
icebp
cwtl
stc
mov
testb
dec
in
cli
xchg
fs
mov
mov
test
sub
loop
popf
sub
mov
pop
fidivs
pop
cmpsb
rcr
sbb
sbb
push
mov
insl
jmp
or
sbb
std
test
lods
xchg
inc
inc
jb
xchg
xor
adc
std
lods
cmp
into
dec
negb
jge
xor
stc
dec
inc
loop
jmp
mov
cmp
lahf
scas
jno
imul
insl
sub
add
ja
pop
addl
sub
in
aam
sbb
pop
mov
scas
in
loop
fldenv
rorb
cld
dec
pop
push
and
test
movsb
inc
out
scas
mov
int
mov
jae
mov
push
icebp
jno
mov
mov
and
xor
sub
sahf
jae
and
ja
cmp
dec
pushf
add
add
cld
dec
imul
xlat
add
adc
or
aam
mov
adc
sti
popa
mov
lds
sarl
cmpsb
repnz
inc
cli
ficoms
mov
sub
adc
xchg
in
lds
adc
push
rorl
inc
sti
xor
push
xchg
add
lcall
shrb
jle
mov
fildl
fs
or
mov
xor
test
stos
jae
in
iret
xchg
out
and
or
hlt
xor
mov
mov
imul
sbb
sub
and
mulb
inc
sbb
mov
push
comiss
dec
push
mov
push
pop
jnp
sub
das
into
push
mov
mov
iret
fwait
sbbb
add
pop
xlat
jnp
mov
mov
xorb
cmp
and
gs
xor
in
rclb
sbb
and
xor
idivl
out
pop
das
adc
add
fimuls
cli
outsl
std
inc
mov
add
or
inc
adc
fldenv
loopne
nop
add
aam
and
cmp
imul
jbe
fnsave
subb
mov
in
jb
lea
movsl
andb
add
arpl
lret
cltd
out
sub
mov
outsb
bound
or
pusha
sti
scas
sbbl
shl
push
xlat
test
lret
inc
xor
pop
dec
push
mov
dec
xor
sbb
mov
loopne
mov
xor
xchg
mov
cmp
aam
xchg
xchg
mov
xchg
les
inc
mov
js
lock
dec
mov
std
xor
xor
lret
sbbl
mov
rorl
ret
movsb
ret
test
int3
mov
mov
push
sub
mov
jbe
jae
cmp
xor
jb
rep
in
pop
or
dec
cmp
lods
sbb
mov
cmp
push
jg
mov
mov
inc
jge
or
in
test
push
aad
inc
movsl
scas
stos
test
cli
fidivrs
in
and
sbb
ficoms
out
jmp
popl
mov
jb
out
or
cmp
inc
jmp
xor
inc
cli
inc
add
dec
andb
and
mov
inc
lods
and
cmpsl
iret
xor
and
arpl
test
mov
sahf
popl
jge
lret
movsb
dec
dec
movsl
jg
outsb
cld
imul
push
xor
mov
jg
adc
sbb
imul
add
cmp
sbb
dec
and
pop
lahf
bound
mov
mov
adc
fcompp
sarl
mov
aas
cmc
movsl
sbb
dec
xlat
and
jae
pushf
scas
shlb
popa
repnz
fwait
xor
mov
movsl
push
lods
std
jae
leave
jnp
xchg
int
xorl
popa
jo
gs
xor
lds
pop
inc
mov
and
cli
cmp
sub
idiv
in
pop
sarb
gs
test
pop
xchg
sub
cmp
xchg
mov
scas
adc
ret
ds
dec
iret
call
pop
mov
jnp
and
mov
or
add
pop
fistpl
xchg
xlat
xor
sbb
mov
add
dec
adc
es
mov
fs
cmp
dec
cltd
push
push
outsb
jno
cmp
into
dec
push
mov
movsl
xor
mov
fcoml
add
shlb
sub
xchg
scas
sahf
sub
sbb
and
les
lods
jns
js
cli
int3
mov
dec
ret
cld
loopne
int
mov
fidivs
cmpsb
inc
fidivrs
inc
lret
xor
cmc
inc
push
dec
xor
lods
cld
int
mov
sarl
lods
imul
push
adc
sbb
push
push
or
cmp
cwtl
cmpsb
les
dec
sbb
aas
push
cmp
and
movsl
jne
sub
je
adc
clc
xchg
inc
push
ss
in
dec
xor
xorl
clc
fsubs
sbb
lret
inc
or
xor
les
xchg
cs
xchg
shrb
cli
aas
fs
test
fldenv
call
pop
ficomps
int
pop
and
jbe
loop
hlt
dec
out
pop
cmpl
popa
stos
mov
test
push
loopne
mov
adc
int
daa
inc
fstp
jmp
loop
xchg
rolb
and
fsubl
shr
sub
jne
mov
cmpsb
test
insb
in
adc
adc
inc
out
pop
addr16
mov
cmc
mov
xor
xor
cld
cwtl
in
lret
mov
pop
fildll
out
fld
xchg
jns
insl
pop
jne
sbbb
jo
dec
cli
dec
jg
mov
mov
fiaddl
lcall
xchg
push
adc
fisubrl
aad
pop
jl
push
test
dec
lods
aas
jo
gs
mov
xor
pop
aam
xchg
shrl
adc
jge
fldenv
aad
add
imul
arpl
cmp
jecxz
mov
sub
ror
cli
jl
scas
sub
inc
mov
flds
jmp
stos
ret
data16
stos
into
dec
imul
pop
cmp
das
add
jecxz
fisubs
lret
xchg
mov
lods
push
add
out
and
stos
popf
jo
cmp
out
sub
lahf
cltd
test
test
adc
mov
pop
loope
push
sbb
mov
mov
sub
add
mov
or
in
dec
iret
xor
enter
or
scas
xor
decb
pop
pop
xchg
mov
sub
lods
push
jp
and
pop
mov
xchg
add
or
cs
and
jb
mov
mov
pusha
clc
jne
cmp
and
jae
xchg
mov
rorb
pusha
jae
sarb
les
jecxz
insl
add
cmp
hlt
or
xlat
adc
jns
in
xor
fisubrs
aaa
fildll
add
push
out
outsb
test
inc
mov
adcb
dec
lret
or
inc
sti
push
pop
test
pop
ret
add
inc
mov
ljmp
and
sub
dec
cltd
mov
cmpsl
bound
push
in
rorl
repz
idivb
pop
and
push
imul
and
push
lods
test
stc
gs
add
mov
mov
mov
push
mov
mov
into
jge
cmp
hlt
les
mov
ss
or
pop
leave
clc
xchg
dec
add
xchg
ret
and
loopne
jae
jae
sbb
rep
cs
fld
mov
iret
pop
mov
es
dec
lcall
sub
pop
adc
mov
mov
xor
mov
idivl
adcl
int3
fistpll
call
adc
mov
dec
xor
aas
xlat
lcall
jecxz
xchg
jne
dec
adc
lret
jg
sub
pop
out
sti
shl
dec
arpl
xchg
push
push
addb
rolb
dec
xor
pop
mov
mov
xchg
mov
dec
movsl
das
and
shll
and
cs
xchg
stc
sbb
outsl
hlt
sbb
adc
fistpll
mov
mov
pop
xchg
adc
cltd
in
test
lods
mov
sub
addr16
jae
arpl
pop
or
or
pop
loope
int3
test
jb
cmp
out
xchg
push
lcall
jnp
je
jge
je
out
lret
jbe
pop
push
fadds
movsb
mov
mov
icebp
aad
mov
pusha
and
daa
sahf
cs
stc
mov
xor
push
dec
pop
pushf
dec
add
fdiv
adc
out
and
xchg
cmp
xor
xor
mov
pop
sbb
mov
add
ds
or
daa
push
jae
outsl
outsl
push
jle
cltd
cld
push
mov
pusha
out
mov
dec
mov
aas
lds
sub
lock
andl
in
mov
sbbb
pop
out
jb
andb
sub
and
jge
mov
sub
mov
push
out
movsl
sub
push
pop
cmp
repnz
and
sbb
fxch
aad
rolb
add
stc
or
push
je
pop
mov
ds
pop
leave
sar
mov
shr
cld
xchg
cmp
out
movsb
dec
les
fdivr
aam
push
lret
shll
nop
pop
jle
mov
jno
mov
out
je
and
ficompl
and
lcall
inc
jle
adc
or
mov
fnstcw
mov
dec
xchg
adc
popa
mov
sbb
sub
jmp
jle
dec
movsl
and
sub
decb
leave
push
stc
nop
push
or
sbb
out
and
cld
and
and
xchg
movl
and
jbe
subb
js
in
cltd
dec
pop
filds
xchg
inc
xor
push
mov
mov
ja
out
mov
xchg
mov
outsb
xor
mov
xor
in
es
mov
xor
sub
loopne
fidivs
mov
sbb
ja
cmc
js
gs
cld
push
cli
xchg
add
in
scas
test
movsb
or
icebp
add
fsqrt
cmp
sub
sub
xor
in
movsl
insb
xchg
lds
movsb
movsb
push
fld
xchg
aad
test
xchg
popf
pop
or
xchg
dec
rorl
sbb
or
sbb
xchg
movsl
jnp
dec
mov
jnp
inc
lahf
add
xor
xchg
or
fs
jnp
sub
or
xor
sub
xchg
jl
sbb
lahf
sahf
sbb
xchg
dec
mov
call
xor
cmp
dec
mov
flds
pop
leave
add
push
leave
and
cmp
jmp
xchg
xor
push
jl
ret
push
fdecstp
xchg
lods
push
push
jmp
adc
repnz
fiadds
cmp
mov
push
push
jns
ret
pop
pop
or
mov
push
cld
pop
cmpsl
test
enter
imul
add
lahf
fisubs
xor
mov
test
jmp
mov
dec
xchg
sbb
das
movsl
mov
and
daa
pop
sbb
mov
pop
aas
push
lods
cmp
je
stos
imul
inc
fidivs
mov
dec
cmp
xor
dec
add
scas
mov
xor
inc
mov
push
sbbb
sbb
lods
pop
je
push
mov
or
push
push
adc
lods
repz
test
fistl
sub
inc
int
push
fbld
pop
lods
xor
push
sub
and
xchg
xchg
and
mov
mov
es
mov
loope
enter
or
pop
lret
in
scas
test
push
mov
push
sub
add
push
lahf
mov
pop
add
cmp
mov
leave
pushf
nop
test
mov
dec
bswap
mov
jne
sti
leave
js
aam
gs
fidivrs
mov
ljmp
pop
and
popa
in
push
divl
mov
fldenv
sbbb
cltd
stos
dec
les
repnz
popa
pshufw
mov
std
mov
sub
sbb
inc
sbb
jmp
testb
push
mov
fs
sub
outsb
add
out
fdivr
ficomps
sbb
sbb
sub
inc
mulb
pop
je
in
lods
xor
shlb
adc
fisubl
jp
push
push
add
out
ja
pop
add
mov
adc
fwait
jmp
mov
and
xchg
leave
in
sbb
enter
pop
adc
or
mov
push
inc
cmp
jg
dec
sahf
inc
push
xor
cmp
leave
mov
leave
sub
inc
jmp
adc
cwtl
ljmp
add
leave
pop
sub
adc
and
push
aad
stc
mov
and
push
jne
sbb
sti
push
push
mov
adc
mov
roll
fiadds
push
test
ret
hlt
jge
aam
je
jle
adc
push
jae
shrb
mov
and
jmp
and
mov
pop
mov
bound
out
xlat
mov
push
mov
test
jno
push
andl
jno
jnp
mov
adc
test
out
fisubrs
xchg
cmp
add
mov
or
je
popf
sbb
jno
lods
sub
popa
das
pop
popf
add
lahf
popa
mov
or
sub
mov
repz
xor
mov
test
jmp
jge
mov
test
test
mov
popf
ljmp
mov
repnz
xchg
push
mul
mov
dec
fisubs
mov
dec
call
sbb
jge
xor
mov
inc
push
outsb
popl
adc
inc
pop
mov
repz
xor
xchg
xchg
cmpsl
ljmp
mov
jge
mov
enter
adc
cmc
add
pop
arpl
pop
stc
push
adc
jle
adc
or
hlt
outsl
fnstsw
xorl
jle
popf
int
fsubr
pushw
dec
xchg
xchg
das
test
data16
mov
pop
cmp
je
dec
int3
cmp
pop
and
es
mov
inc
dec
cmpsb
pop
stos
insb
ror
mov
and
cltd
mov
arpl
mov
inc
push
test
mov
cmp
aam
roll
sbb
sub
jp
pop
lock
frstor
inc
pop
and
fstpt
mov
pop
push
jge
fwait
into
mov
sarb
pop
fwait
and
xorl
and
inc
es
test
enter
jno
fwait
scas
jle
sub
inc
cs
scas
jns
xlat
gs
mov
dec
div
arpl
movsl
mov
aam
mov
jns
ds
jle
inc
mov
inc
push
loopne
jg
pop
jo
lahf
scas
fcos
add
aas
and
sub
fsts
lret
adc
jmp
mov
sub
push
adc
cmp
mov
and
mov
mov
dec
jnp
pop
leave
popf
lahf
jb
nop
inc
adc
xor
lods
out
scas
jge
mov
orb
sbb
repnz
imul
orl
jge
push
lret
outsl
in
mov
movsl
fimuls
addr16
jb
mov
mov
repz
sbb
addl
test
pop
cli
inc
out
enter
add
lods
jmp
xchg
js
cmp
mov
dec
xor
mov
sub
xchg
cmp
sbb
adc
icebp
mov
test
inc
xchg
out
ja
inc
xchg
lret
sbb
jne
jbe
insl
into
xor
cmp
mov
addr16
test
jb
cltd
scas
stc
xor
mov
aas
movsb
jmp
outsb
repz
mov
xor
add
popf
or
and
mov
aam
call
cmp
push
mov
packssdw
mov
aam
push
aam
add
adc
cli
sbb
cli
pop
sti
popf
aaa
pop
cld
test
adc
popa
mov
pop
jle
flds
mov
leave
div
subb
fldenv
daa
push
push
test
or
clc
lds
xchg
or
inc
bound
pop
add
aaa
lods
jns
add
xor
cmp
in
lods
addr16
nop
inc
daa
adc
test
mov
fsubrl
movsb
sbb
test
mov
cmp
test
pop
jg
out
and
jg
mov
fs
cltd
aaa
cmp
adc
jmp
outsl
mov
xchg
rcrb
mov
imul
call
push
mov
mov
out
shrb
adc
mov
mov
push
aaa
mov
ss
movsb
cld
push
imul
xchg
sub
mov
add
mov
pusha
cmp
enter
mov
aaa
xchg
jne
pop
scas
pushf
xor
les
fistpll
mov
popf
faddl
cli
bound
push
push
inc
sub
outsb
aad
or
shlb
out
xchg
fsubl
inc
sbb
jg
clc
mov
lret
jns
out
sub
mov
lcall
stc
sub
push
add
cmpsl
mov
fldl
loope
or
or
sub
mov
push
std
mov
mov
loop
decb
push
xor
sbb
nop
push
mov
scas
mov
lahf
mov
scas
mov
mov
add
push
lret
mov
es
ss
clc
pop
xchg
xchg
out
repnz
mov
out
int
imul
sbb
int
and
push
pop
mov
sub
in
leave
loopne
sbb
xchg
fsubrp
mov
pusha
stos
int
jae
add
pop
ficomps
xor
mov
inc
inc
mov
or
adc
lock
into
xchg
sbb
daa
movsl
pop
in
dec
call
cmpsb
jle,pt
test
jge
mov
sbb
sahf
aas
push
sti
rorb
nop
cmc
int3
cmp
push
aaa
push
aaa
dec
into
insb
pop
add
mov
sbb
xchg
sub
sub
test
loope
add
rclb
inc
pop
cmpsl
xchg
pop
and
fwait
mov
nop
packuswb
mov
pop
loope
shlb
jl
xchg
xor
repnz
into
bound
imul
call
jo
lock
pop
lock
aad
xchg
xchg
scas
push
outsb
push
in
fadds
ror
pop
and
jg
add
data16
daa
jnp
xchg
pop
out
sbb
shrb
test
cs
sub
loope
test
fcompl
mov
inc
inc
movsl
adc
dec
out
and
cmc
jae
sub
jae
mov
jp
cli
int3
inc
outsb
add
lret
mov
clc
lods
mov
dec
cmp
or
call
lds
sbb
cli
ds
scas
sub
mov
xchg
xor
addr16
or
xchg
jge
lods
scas
loopne,pn
mov
flds
mov
mov
adc
mov
and
js
add
popf
fiaddl
add
jge
nop
cmpsl
add
xlat
mov
jl
es
jae
out
subb
dec
lods
dec
mov
sub
fldcw
jle
and
or
ja
std
or
xchg
sub
mov
mov
and
add
sub
cltd
sbb
jno
pop
mov
push
cmc
fisubrl
inc
das
icebp
xchg
and
cld
inc
loope
out
jp
loopne
loope
data16
in
call
mov
jp
les
nop
out
mov
nop
out
push
add
jge
mov
adc
pop
mov
mov
mov
notl
push
test
lret
mov
lcall
call
dec
and
out
mov
cmp
xor
lahf
pop
adc
insb
push
lock
xchg
cmpl
cmp
pop
fmul
fldcw
cs
dec
push
lds
aas
sahf
mov
adc
scas
jmp
jecxz
pop
mov
sub
lcall
scas
and
pop
push
cli
xlat
jle
or
imulb
mov
push
sub
push
jg
jg
xor
jno
sti
mov
inc
fdivl
inc
xchg
mov
mov
loope
lahf
mov
mov
into
icebp
sub
or
mov
pop
pop
mov
push
adc
cli
xor
out
mov
adcb
mov
das
ret
adc
adc
fstps
outsl
cltd
in
cmc
mov
push
mov
aad
fwait
clc
movb
push
sbb
gs
loope
mov
shrb
arpl
pop
push
call
mov
es
and
int3
icebp
xor
popa
push
je
mov
and
adc
adc
test
or
jle
push
int3
push
inc
xor
lods
sbb
outsb
les
lea
data16
xchg
es
add
jae
and
clc
dec
shll
inc
lea
cmpsl
je
fdiv
jmp
nop
mov
cs
movsb
cld
loope
pop
push
lods
sub
jb
lods
adcb
jge
ret
push
mov
mov
fnstenv
mov
mov
repz
sbb
fstps
dec
sbb
mov
inc
cmp
jae
pop
inc
xchg
idivb
das
adc
inc
scas
mov
push
rolb
push
pusha
add
push
loop
mov
scas
rcrl
xor
mov
fcmovbe
push
clc
cmp
ss
repz
int
mov
pop
fistpll
lods
addr16
or
outsb
dec
test
mov
push
ss
cwtl
repnz
pusha
xor
dec
or
fisubs
test
mov
or
lods
insb
mov
dec
cmp
pop
cmovo
pop
jae
or
cmpsl
int
pop
xlat
repz
push
incb
mov
test
xor
mov
cli
in
sub
xor
xchg
cld
xchg
mov
xor
mov
popa
mov
gs
jmp
mov
nop
and
insl
popf
pop
call
lods
fsubrl
shrb
cwtl
call
sarl
sub
fwait
outsl
adc
and
jl
ljmp
pop
and
mov
add
popf
fldcw
and
sub
insl
xchg
sarl
lods
add
adc
sarb
sbb
data16
sbb
dec
stc
pop
pop
sti
xchg
push
xor
fstps
sbb
or
es
mov
addr16
or
push
scas
inc
aam
mov
stos
sbb
add
sbb
int
and
repnz
mov
push
jns
subl
push
push
clc
mov
jae
enter
xor
or
sti
sbb
inc
xchg
mov
shrl
scas
rcrb
jnp
insl
pusha
fstps
cs
fildl
push
cmp
fidivs
frstor
mov
sahf
mov
inc
daa
dec
aam
sub
adc
pop
inc
imul
std
mov
pop
adc
clc
cmpsb
mov
cltd
add
test
sbb
lods
sub
add
and
stc
sub
mov
add
sbb
inc
sbb
popf
mov
jbe
mov
push
jbe
mov
pushl
adcl
in
mov
fcoml
jns
xchg
mov
leave
or
fsubp
pushf
add
scas
pop
in
pop
movsb
aaa
xchg
aam
faddl
xchg
cmp
mov
cmp
inc
aam
fidivrs
mov
imul
mov
movsb
popf
sbb
cli
push
adc
in
lock
movsb
push
xchg
data16
arpl
jnp
imul
sti
repz
sub
pop
stc
lahf
jnp
je
ret
push
fwait
in
push
mov
pop
mov
into
movsl
ret
fdivl
loopne
cmp
inc
sub
adc
xor
pop
sahf
fucom
hlt
movsl
mov
mov
stos
mov
or
cmc
int3
daa
sahf
test
jno
loopne
cld
outsl
aas
dec
and
mov
cltd
in
inc
sub
mov
mov
hlt
xor
loop
insl
mov
mov
test
cld
sbb
pop
jo
push
stc
outsl
movsl
and
int
mov
std
push
les
and
mov
mov
sub
lock
jmp
mov
lods
sahf
scas
push
mov
lds
test
mov
popf
mov
sub
xchg
push
mov
in
mov
mov
test
mov
out
rcrb
lock
mov
push
pop
in
out
scas
xchg
and
stos
ss
aam
lahf
and
pop
stos
mov
imul
push
mov
data16
arpl
mov
push
loop
movsl
adc
cmc
mov
fmull
mov
mov
icebp
int3
mov
mov
loopne
sub
rclb
loopne
dec
jge
stos
sbb
imul
cmp
or
mov
mov
sti
movsb
dec
and
xchg
push
cwtl
repnz
pop
je
mov
jb
ljmp
mov
or
enter
xor
cmp
movsb
sbb
mov
scas
sub
sub
pop
lods
popa
mov
stos
jno
push
sbb
lahf
ror
push
sub
add
push
iret
mov
lock
movsb
repz
sbbb
cmpsb
bound
test
mov
mov
repnz
lret
loop
push
lahf
xor
xchg
gs
sahf
cmpsb
jmp
shlb
add
icebp
movsb
fnstsw
dec
sbb
xchg
movsb
jmp
int
mov
loope
je
and
cmp
or
shrl
and
dec
lods
js
mov
lcall
and
pop
pop
adc
push
mov
movsl
lods
fmuls
movsl
push
adc
inc
pop
iret
repz
fdiv
mov
mov
pop
scas
dec
adc
mov
push
fnstcw
push
push
dec
jnp
stos
cld
mov
or
lods
inc
mov
mov
lret
in
dec
js
out
rorb
mov
mov
add
loope
js
popa
movsb
dec
test
lods
cmp
std
jo
stc
and
adc
and
imul
mov
pusha
test
mov
loop
jle
sub
loop
shlb
or
aam
xchg
pop
sarl
ss
mov
jge
daa
jno
cmpsl
out
sub
dec
pop
iret
cmpsb
aad
lods
and
sub
mov
stc
cmpb
nopl
pop
mov
call
and
push
loopne
loop
ljmp
jecxz
into
jbe
cltd
sub
mov
jnp
loop
aaa
mov
fdivrp
pusha
outsb
mov
xor
popf
fildll
push
ret
sbb
mov
adc
fmul
repnz
xor
sbb
cli
cmpsl
mov
loopne
sti
sub
aam
and
mov
sub
xor
mov
out
test
pop
je
stc
mov
mov
sbb
lods
stos
shlb
xchg
cmpsl
ds
sub
lahf
adc
sub
mov
ja
movsb
popf
mov
inc
mov
or
xchg
jle
dec
movsb
repz
pop
cwtl
fimull
lods
movsl
ljmp
sub
jl
adc
je
scas
and
cmp
adc
fstps
loopne
lret
adc
in
pop
push
mov
fsub
adc
jo
test
movsb
ljmp
cmpsb
lods
lds
mov
ret
adc
jg
dec
sahf
sbb
lods
xchg
into
cmpsl
in
es
mov
mov
arpl
and
inc
push
xor
xchg
cmp
cld
test
test
stos
rorb
insl
cmpsl
fsubrl
in
mov
xor
adc
or
xlat
jecxz
mov
mov
push
shll
lahf
test
ret
lods
andb
cmp
addr16
sbb
cs
stc
push
inc
xchg
insb
es
fdivl
pop
mov
sbb
cld
insl
add
in
daa
ljmp
inc
aad
mov
sbb
jg
es
push
push
ljmp
test
adc
mov
int3
cmp
add
jg
in
fiaddl
add
add
adc
addb
xchg
push
cmp
scas
inc
fdivrl
sbb
push
xor
or
or
cmpb
mov
mov
lods
imul
hlt
or
jns
sub
mov
add
sti
sbb
jne
xchg
xor
sub
pushf
mov
jbe
jae
push
sub
lcall
mov
sbb
je
cmpsl
mov
mov
xchg
insl
sbbl
adc
insl
xchg
shrb
push
add
pop
mov
mov
int3
jb
lea
test
mov
hlt
or
lahf
jo
mov
dec
jnp
mov
cmpsb
stc
sbb
scas
jo
xchg
xor
sub
mov
outsb
lds
jp
fcmovu
xor
mov
ljmp
lahf
and
xor
and
sarl
or
push
inc
jnp
push
cld
xor
in
sahf
jno
loopne
xchg
lret
movsb
inc
lret
mov
mov
or
popa
dec
jl
mov
pop
mov
das
sbb
flds
in
aas
mov
stos
xchg
pushf
scas
dec
push
inc
pusha
xchg
mov
inc
xchg
adc
push
push
cmp
negb
cmpl
jp
test
inc
jnp
inc
push
sbb
pop
mov
cmpsl
xchg
mov
or
sbb
pop
mov
movl
aad
jecxz
add
cmp
movntq
out
mov
lcall
mov
push
jle
lods
pop
add
mov
fwait
cmpsb
scas
xor
sbb
cmp
stc
xchg
or
mov
rol
cmp
dec
xor
aas
mov
dec
out
sbb
cmp
pop
loope
lods
cmc
divl
sarb
push
dec
bound
push
scas
js
add
test
adc
adc
push
dec
sub
insl
orb
sbb
sub
mov
sbbl
mov
pushf
mov
sub
out
aam
ljmp
sbb
mov
mov
int
nop
xor
repnz
inc
ss
shlb
ss
sahf
lods
dec
or
adc
cmc
mov
int
add
push
lcall
fldcw
aad
sahf
dec
mov
or
lahf
test
fisubs
adc
add
xor
bound
hlt
out
push
mov
int
scas
pushf
test
cmp
std
sub
rclb
push
jno
mov
aam
pop
xchg
push
jb
push
fnstsw
movsl
mov
das
inc
dec
in
lods
pop
imul
xchg
sti
jnp
sbb
xor
jmp
adc
insb
push
pushf
das
test
push
pop
xchg
loopne
and
sbb
loopne
and
cltd
ficoms
iret
cmp
xorb
das
or
or
mov
mov
dec
js
mov
cmp
and
jp
adcb
lcall
adcb
lret
push
mov
out
fucomp
push
into
xor
stc
cmp
cmpsb
cld
repz
cmp
flds
test
lds
mov
out
int3
ret
stos
fidivl
dec
imul
push
sub
xchg
or
inc
in
and
cltd
into
push
in
adc
pop
inc
fwait
and
dec
scas
inc
rcrl
mov
int
mov
movb
xlat
or
das
fldz
fnstsw
shrb
lods
cmpsb
push
mov
jo
and
lods
mov
jge
clc
sub
daa
test
mov
cltd
cmp
add
stos
sub
mov
inc
fsts
mov
ja
out
test
lcall
mov
adc
inc
sbb
notl
dec
lods
stc
mov
inc
cmp
dec
addr16
sub
mov
mov
lahf
mov
pop
mov
push
add
mov
jp
inc
cs
stc
xchg
xor
lock
fiadds
mov
test
pop
jb
and
out
push
sbb
cmp
daa
push
and
push
fmull
xchg
adc
lods
fdivrp
mov
push
and
daa
sahf
stos
inc
xchg
lock
scas
lcall
mov
push
mov
sub
or
lods
push
xchg
push
iret
dec
jae
out
push
incl
test
loopne
sbb
and
shrb
loopne
call
aam
push
cmp
in
aam
xchg
adc
and
stc
enter
icebp
fsub
into
sti
or
cmp
es
out
or
and
mov
scas
sahf
subl
int3
aam
test
ss
inc
push
jns
xlat
andl
mov
push
or
fdivl
dec
push
subb
aaa
movsl
cld
mov
cmpsb
push
dec
dec
pop
xchg
lods
dec
push
mov
mov
fnstcw
jmp
subb
stc
sbb
insl
fnstsw
outsb
sbb
addb
and
mov
dec
lret
lret
dec
mov
aad
lcall
inc
leave
pop
roll
dec
dec
iret
jl
lods
mov
add
push
xchg
sar
repz
mov
mov
push
push
push
add
inc
loopne,pn
sub
fstpt
pop
and
icebp
add
in
mov
xchg
pop
mov
inc
mov
xchg
gs
lcall
mov
stos
push
adc
scas
lods
je
jns
arpl
std
and
pop
mov
in
lret
add
cmp
pop
mov
and
fdivrs
mov
dec
enter
lcall
mov
jmp
aam
rclb
stos
xchg
mov
test
push
sub
pop
mov
movsb
mov
mov
dec
or
xor
mov
fsin
orl
jae
test
sbb
xchg
adc
cs
jp
imul
aas
fimuls
xchg
movsl
xchg
cmp
jne
jo
xor
fs
jne
pop
pop
xchg
mov
cmp
sbb
push
pop
jno
enter
flds
push
dec
push
repnz
movsb
push
leave
jp
mov
je
test
xor
mov
and
pop
scas
daa
jecxz
sbb
xchg
lahf
and
and
popa
fsqrt
add
xchg
je
mov
nop
std
lahf
cmpsl
inc
pushf
or
push
pop
mov
inc
gs
outsb
int
scas
rorl
stc
sub
mov
addr16
ret
fadd
ja
std
add
in
jno
rorb
jo
and
dec
das
push
mov
test
cli
or
sbb
sbb
sahf
mov
outsl
shrb
or
leave
sbbl
xlat
movsb
sbb
loope
dec
in
jne
ret
sub
mov
imul
mov
pop
jnp
lret
mov
jmp
jae
push
mov
mov
ret
lods
pop
shll
inc
and
scas
xchg
mov
fcmovu
dec
insb
test
sarb
or
in
and
fstpt
jecxz
cmp
cmp
pop
das
mov
sub
rclb
ret
xchg
push
push
les
and
xchg
xchg
call
and
dec
jge
shrb
adc
fistpll
sbb
add
or
rorb
popa
inc
jl
int
mov
pop
fdivr
adc
out
mov
fdivr
sbb
inc
sbb
pusha
in
test
fxch
push
out
inc
lods
shrb
cld
mov
rcrb
inc
imull
sahf
xchg
movsb
pop
fcmovnbe
andb
mov
xchg
xor
jmp
test
mov
push
pop
jle
and
in
movsl
cltd
push
ja
fmulp
cltd
or
loopne
cmpsb
cltd
or
sub
push
ret
mov
orl
mov
and
dec
lret
addr16
outsl
call
std
repz
cmpsl
push
int
gs
sbb
adc
daa
or
rorl
mov
std
mov
cmpb
add
xchg
pop
gs
sub
and
data16
test
sub
dec
xchg
mov
add
dec
clc
mov
and
inc
mov
cld
test
jl
adc
pop
loopne
lahf
leave
fdivl
xchg
lea
loope
es
mov
fcmove
dec
shrl
psubusw
cs
out
mov
xchg
and
mov
xchg
jl
or
jecxz
lock
ja
mov
dec
push
dec
inc
add
xlat
xchg
in
add
mov
xchg
aaa
jns
and
lods
jbe
push
or
jl
sahf
movsl
outsl
jecxz
add
sub
xchg
pop
push
fwait
push
mov
hlt
cmp
enter
out
imul
inc
filds
cmp
fidivrs
movsl
loopne
les
mov
ficomps
das
inc
test
out
dec
xchg
xchg
pushf
push
test
std
adc
insl
and
xchg
mull
jbe
nop
mov
scas
xchg
lret
mov
stos
push
xchg
std
les
push
lcall
sbb
push
mov
loopne
jmp
pop
mov
jge
hlt
movsb
addr16
je
into
cltd
cmpl
fimull
fsubs
cltd
mov
movl
cmpsb
and
mov
in
lods
cmp
shll
bswap
dec
std
outsb
mov
adcl
sub
cmp
mul
aad
test
insb
jnp
imul
shll
jp
repz
lds
in
mov
push
pushf
js
test
sti
mov
dec
mov
inc
scas
pop
inc
ret
ja
data16
flds
jno
jp
mov
repnz
inc
jae
out
fildl
lods
add
mov
push
out
pop
mov
dec
out
out
xchg
fstl
test
stc
inc
fidivrs
fnstcw
in
mov
sahf
sub
and
int
inc
mov
cmp
lock
movsl
xor
mov
dec
cmpsb
decb
movsb
pop
fucomip
dec
leave
inc
dec
in
inc
inc
xor
push
jp
cmpsb
dec
iret
std
mov
jge
leave
or
outsl
adc
lahf
lcall
test
push
xlat
std
mov
jns
lret
mov
push
sbb
push
and
jno
cmc
push
mov
test
fldpi
mov
mov
es
push
daa
or
adc
dec
mov
xor
cmp
hlt
xor
arpl
or
xchg
jnp
mov
fldenv
and
jl
rolb
ret
dec
push
es
xchg
xchg
aas
clc
fstpl
clc
dec
out
mov
test
rorb
jmp
pop
popa
sub
jl
sbb
mov
cmp
inc
xchg
sbb
repnz
addr16
jg,pt
dec
or
mov
push
pop
inc
fstps
xorl
add
das
adc
adc
and
xchg
mov
ss
fdiv
or
dec
pop
inc
inc
pop
push
jb
in
shrl
pop
inc
and
mov
outsl
add
xor
sub
cmpsb
sbb
jne
push
jle
lret
imul
icebp
dec
test
aas
mov
lods
pop
or
inc
inc
lcall
jecxz
xor
test
mov
sub
pop
push
enter
test
sub
push
and
outsl
rcrl
cwtl
mov
jp
fisubrs
add
push
in
sbb
xchg
imul
std
pop
mov
lods
or
xchg
fldt
mov
jae
sub
dec
sub
push
es
lret
cli
sub
fsubrl
insb
mov
xchg
decl
sub
test
lea
or
or
jge
jns
dec
loope
sub
decb
out
adc
shr
add
faddl
in
pop
aam
xchg
dec
mov
loopne
ret
lods
dec
mov
mov
push
pop
outsl
push
and
rcrl
out
cmp
flds
cmp
pop
sbb
imul
mov
add
sbb
fwait
mov
pop
int
inc
out
scas
daa
outsl
xchg
daa
ret
out
push
cmp
mov
or
daa
mov
shr
push
call
insl
notb
mov
cs
push
pop
arpl
mov
sti
lds
and
leave
mov
fsubl
in
test
nop
out
rcrl
cmp
dec
pop
or
xchg
stc
and
inc
sarb
jae
mov
jb
and
mov
push
addr16
test
icebp
aad
and
outsl
or
rclb
stos
shrl
outsb
rolb
xchg
push
xor
pop
inc
mov
mov
test
jae
std
add
mov
repz
adc
jmp
mov
push
jg
mov
in
fcompl
xlat
pop
fnstcw
jl
mov
jmp
test
dec
sbb
pushf
cld
push
int
scas
mov
movsl
dec
cld
adc
sbbb
push
ja
or
dec
fadds
mov
fcompl
fwait
adc
jne
das
sti
adc
imulb
jbe
jmp
mov
or
lds
lahf
xchg
pop
push
adc
inc
repnz
ds
and
addr16
or
into
addl
lock
adcb
clc
push
fwait
mov
das
push
sub
dec
mov
in
addr16
mov
push
push
lret
aaa
mov
inc
dec
icebp
adc
inc
xchg
mov
gs
adc
or
mov
mov
stos
bound
sub
mov
call
in
sbb
cmp
push
fs
jmp
xchg
or
std
mov
daa
cltd
sub
adc
jl
jb
pop
movsb
cmp
clc
xor
xchg
cmp
mov
nop
dec
push
sahf
jle
ds
lods
test
and
ljmp
out
adc
inc
popa
icebp
fisubrs
in
movsb
adc
addr16
xchg
xor
cmpsl
ds
push
fisttpl
mov
xlat
pop
sbb
fimuls
mov
dec
pop
lahf
mov
sbb
sbb
mov
mov
scas
or
mov
xchg
iret
jne
cmp
pop
inc
xlat
and
sar
cwtl
jg
ss
or
xchg
mov
mov
or
push
or
push
adc
std
pop
xchg
mov
lds
test
test
daa
jae
in
mov
pusha
cwtl
jno
and
dec
jp
movsb
or
dec
mov
lahf
cmp
out
lods
sti
test
arpl
jp
mov
pop
push
sbb
or
mov
push
xchg
ja
xor
or
jmp
enter
stos
lds
movsb
pop
xor
popa
loopne
data16
xchg
jnp
mov
mov
test
mov
dec
mull
into
fstps
je
pop
orl
icebp
jp
inc
mov
and
sub
mov
xchg
pop
repz
jnp
push
idivb
lock
vpminsb
push
fdivp
pop
and
mov
sub
and
cltd
stos
fstl
je
pusha
loopne
jl
mov
dec
jl
fnstcw
mov
addb
arpl
in
push
stos
mov
daa
test
sub
mov
hlt
insl
repnz
push
jno
data16
shrl
push
pop
xor
gs
loopne
push
lret
cmpb
es
mov
cltd
sbb
stc
sub
cmp
lods
mov
xchg
pop
pop
fdecstp
xor
inc
scas
test
std
adc
mov
fidivs
lret
xor
in
lods
cmpsl
xchg
sbb
into
ds
cmpsb
adc
mov
and
cld
stc
lods
pop
scas
imul
mov
movsl
push
cmp
xchg
pop
push
imul
dec
push
sahf
sahf
jns
test
jns
or
pop
mov
gs
fs
int
cmpl
movsb
ljmp
aas
nop
cwtl
and
stc
lcall
xor
addb
in
sbb
xchg
je
movsl
inc
add
cmp
add
pop
sbb
mov
test
ja
xchg
jb
cli
add
and
arpl
or
sbbl
addr16
incb
mov
mov
pop
stc
loop
or
test
cmpl
mov
fscale
mov
adc
mov
test
dec
daa
mov
dec
icebp
xor
out
lock
and
subb
push
mov
mov
mov
pop
data16
pop
jns
pop
mov
jae
and
push
repz
mov
sahf
xchg
cmp
outsb
xor
xor
xchg
jne
lcall
mov
rcrb
adc
adc
sbb
iret
xchg
fsubrs
xchg
addr16
pop
scas
dec
inc
lahf
cmp
dec
test
int3
data16
sub
jecxz
mov
insb
das
push
mov
sub
pop
push
es
add
cmpb
jb
movsb
aad
mov
jno
xchg
clc
mov
jnp
ss
sub
jns
iret
test
xor
pop
sbb
mov
jge
into
xchg
sti
das
push
add
adc
sti
push
fwait
out
xor
xor
loopne
repnz
in
mov
xchg
int
push
fucomp
adc
scas
xor
lret
lea
aas
int3
push
xchg
inc
fidivs
mov
mov
shlb
data16
xor
xor
mov
push
and
push
ja
int
divl
jg
int3
fisttpll
sub
push
mov
les
pop
aad
push
lods
mov
and
and
insl
dec
inc
movsl
or
in
mov
int3
jb
push
out
negl
loop
cmc
cmpsb
gs
jb
std
fpatan
mov
lods
mov
or
mov
movsb
mov
pop
push
push
xchg
dec
add
es
hlt
fsubl
and
addr16
clc
movsb
lods
in
es
dec
outsb
adc
or
js
popf
lea
pop
and
int
add
sbb
test
nop
mov
pop
arpl
outsb
cmp
mov
scas
negb
adc
xchg
das
cmpsl
out
scas
pop
mov
cld
xor
fnstcw
xchg
repz
mov
cmp
fidivs
fwait
mov
test
popa
lds
push
jl
cmp
nop
cmp
pop
fistl
pusha
das
arpl
push
inc
xor
mov
or
dec
test
xchg
lahf
xchg
add
xlat
jb
outsb
mov
jae
or
push
push
test
dec
std
popa
adc
dec
in
fisubrs
dec
sbb
sahf
mov
clc
int
mov
cmp
and
sbb
stos
push
mov
aam
shll
push
mov
xchg
es
sbb
push
mov
dec
dec
jbe
push
fcoml
add
or
mov
push
mov
cmpb
cmp
out
ret
shlb
or
fxtract
jge
je
aaa
sbb
adc
divl
insb
push
mov
or
rolb
lahf
popf
mov
movsb
addr16
and
loopne
out
pop
cmpsl
test
add
mov
jae
fcmovnu
idivb
js
rol
idivl
sbb
fsubl
test
jge
pusha
add
push
sbbl
ret
out
test
lret
xor
nop
out
and
cli
test
into
roll
vmovmskpd
sahf
mov
je
pop
clc
push
ds
fidivs
lret
shll
push
ds
jmp
std
xchg
add
or
mov
add
jo
inc
mov
sbb
and
dec
test
imul
pop
outsl
and
mov
dec
call
or
xor
mov
jl
jns
scas
mov
inc
mov
jl
int3
fcmovnu
fwait
and
flds
push
lods
jbe
sbb
xchg
divb
sbb
mov
mov
push
scas
or
fistps
mov
mov
lock
mov
fdivl
push
stos
sti
and
mov
sbb
xor
les
in
add
jecxz
sub
jnp
imul
xchg
mov
scas
mov
gs
fwait
lods
ja
mov
mov
add
in
arpl
sub
lahf
mov
sbb
xchg
or
test
push
pop
mov
mov
sahf
pop
cmp
mov
es
rcrl
jmp
mov
aad
lods
mov
mov
in
jnp
inc
sub
repz
test
fs
fstps
cld
add
subb
scas
inc
popa
ja
mov
and
mov
inc
mov
fdivrl
pop
aad
fwait
lock
sbb
jp
outsl
mov
inc
xchg
pop
inc
sub
xchg
das
adc
adc
out
and
stos
inc
lahf
or
movsb
test
cltd
loop
test
jbe
enter
push
mov
in
xor
xchg
cmp
add
cmp
and
sbb
sbb
cmp
adc
icebp
lahf
mov
mov
movsl
fsts
and
clc
fstps
xor
fimuls
lahf
and
push
mov
xorb
in
mov
and
push
loope
lods
aas
and
lea
adc
sbb
and
in
dec
adc
jne
jbe
inc
and
mov
sar
std
mov
repz
xchg
out
mov
inc
mov
movsl
data16
jae
jae
inc
popa
sub
shlb
fdivs
adc
inc
imul
imul
mov
imull
out
pop
leave
cmpsb
mov
loope
fucom
mov
jb
mov
test
clc
scas
sub
mov
arpl
or
shll
insl
mov
movsb
mov
cmpsb
cmpsb
cmp
jnp
mov
loop
push
or
add
aam
cmp
mov
hlt
int
push
ljmp
dec
push
inc
popa
mov
add
and
scas
jns
mov
test
xchg
cmpsb
mov
in
mov
mov
sarl
mov
and
lds
out
xchg
sub
adc
mov
cmpsl
pop
mov
outsl
sbb
imul
push
cltd
cltd
int
mov
pop
xchg
arpl
out
mov
dec
cwtl
repnz
mov
mov
lret
mov
repz
shlb
dec
cmpsb
mov
popf
mov
loope
mov
pop
fcom
pop
imul
lret
mov
mov
add
into
jae
fmulp
adc
dec
repz
dec
lods
inc
xchg
jge
sbb
dec
fwait
dec
or
dec
mov
xlat
cmp
push
nop
or
mov
push
add
ret
push
lods
and
gs
mov
fstpl
cltd
mov
mov
and
pusha
mov
jmp
sub
push
jl
fxam
insl
popf
bound
inc
ret
cmpsb
mov
adc
push
mov
rorl
add
fcomi
mov
std
adc
aad
test
xchg
es
lea
push
sub
push
pop
push
xchg
ds
cwtl
dec
in
push
mov
bnd
int
lods
insb
dec
sbb
inc
mov
lock
jg
test
clc
mov
push
into
inc
mov
pop
arpl
fsubrl
in
mov
xchg
test
pop
and
out
inc
movsl
fs
mov
or
sub
arpl
pop
mov
mov
inc
mov
das
add
clc
cmpsl
pop
test
in
pop
outsb
movsb
push
insb
mov
sub
pop
or
mov
out
xor
test
lods
sarl
inc
sub
sbb
sub
xchg
sbb
cmpl
clc
push
cmpsl
mov
fimull
in
lcall
into
insb
and
mov
and
sbb
and
xchg
mov
loopne
mov
in
loope
call
ficomps
frstor
mov
mov
xchg
add
pop
pop
cmc
cmp
data16
fwait
movsl
mov
add
test
inc
sbb
mov
dec
ds
cwtl
jae
sti
repz
cwtl
enter
jmp
cmp
scas
adc
xchg
mov
xchg
mov
mov
pop
pop
sbbb
xchg
ljmp
sbb
mov
pop
decl
inc
xor
xor
push
push
shr
jp
test
jb
leave
mov
push
jae
cltd
xchg
cmpl
adc
fisubs
adc
adc
and
xor
adc
repz
loop
pop
jbe
add
pop
and
scas
pusha
xchg
out
cld
lods
xor
in
fdivl
out
jnp
leave
push
mov
sub
cmp
out
cli
cmp
test
call
aam
mov
mov
xor
iret
or
popa
mov
adc
mov
dec
and
pop
jg
das
pop
cld
jns
dec
cmp
aad
xchg
out
sbb
jecxz
push
cmpsb
push
pop
xchg
dec
mov
fildl
xor
xchg
mov
and
rorb
jmp
out
addr16
mov
xchg
popf
movsl
push
pop
addr16
loope
xor
mov
fld
aas
fnstsw
repz
outsb
addl
mov
scas
cmp
mov
inc
ljmp
lods
mov
or
push
inc
jl
and
fists
cmp
test
leave
xchg
jns
push
insl
inc
xchg
mov
test
out
jle
adc
inc
xchg
clc
ret
shll
xchg
das
test
sub
jbe
punpcklwd
inc
fbld
repnz
movsb
cmpsb
movsb
jge
mov
sub
inc
push
and
push
mov
sbb
mov
xchg
dec
imul
inc
addr16
loopne
xchg
add
or
push
mov
stc
mov
pop
jns
mov
add
out
mulb
sub
int3
scas
cmc
repz
xchg
sub
xor
inc
ss
insl
mov
repnz
inc
iret
xchg
lret
jb
lds
ljmp
jge
xor
mov
cmpsb
xchg
cmc
lods
mov
add
xlat
push
mov
jo
lea
call
pop
pop
adc
add
stos
int
fidivrl
add
pop
pop
arpl
rclb
pusha
add
ret
sub
test
sarb
daa
icebp
pop
xchg
in
mov
mov
in
mov
lods
cwtl
pop
jl
andl
test
jp
adc
add
movsl
jb
adc
pop
sub
push
ljmp
dec
in
lea
mov
mov
insb
andb
rorl
fstl
jb
flds
lea
scas
xor
js
xchg
sbb
mov
cmpl
pop
inc
sub
aaa
push
jl
or
push
xor
mov
xlat
sbb
pusha
jge
sbb
movsb
lods
jns
xchg
es
ficoms
stc
jno
xchg
mov
mov
sub
test
push
in
repnz
sub
cmp
mov
ffree
cs
loopne
mov
sbb
mov
data16
mov
aas
imul
pop
sub
push
mov
jns
imul
test
adc
pop
adc
bnd
mov
xchg
xchg
inc
mov
das
cltd
xor
xor
xor
movsb
mov
xchg
fsubs
mov
pop
xor
daa
dec
movsl
and
int
dec
xor
test
push
mov
andb
jp
fchs
sbb
pop
pop
mov
lock
sti
inc
movsb
mov
shl
or
push
pop
push
fidivl
out
add
xor
imul
aad
mov
test
inc
adc
shll
xchg
sub
aam
push
xorl
push
pop
int
push
jns
incb
fidivs
cmp
cmp
dec
xchg
mov
int3
push
imulb
pop
cmpsb
loope
mov
and
and
mov
or
cld
xor
fisubs
add
jp
and
push
jnp
inc
cwtl
scas
sbb
jecxz
outsl
sti
xchg
mov
shll
les
xchg
insb
mov
and
cmpl
adc
xor
jns
lock
sub
mov
xchg
sbbl
mov
sbb
arpl
add
shrb
fldt
les
lods
out
int3
imul
mov
mov
shll
lock
push
arpl
xchg
dec
cmova
jp
int
repz
mov
data16
mov
aam
fistl
out
jle
xchg
int
aaa
test
push
lods
out
or
fstps
mov
das
inc
xor
xor
cmp
push
adc
mov
cmp
js
mov
cmpsl
es
ret
push
mov
mov
xchg
dec
ja
out
enter
rcrb
dec
movsl
hlt
shlb
pop
idivb
jmp
incb
mov
arpl
test
in
test
imul
in
xchg
sbb
mov
adc
jg
int
mov
out
repz
popf
fwait
loop
test
dec
sub
iret
sub
in
xor
imul
push
xor
xor
out
fmull
jp
addr16
cmp
jb
add
dec
and
mov
mov
mov
xchg
fs
sahf
fmuls
push
mov
xor
dec
cmp
repz
mov
mov
in
mov
scas
orl
test
subl
adc
out
jg
and
pop
sub
in
je
test
loope
pushf
xchg
hlt
adc
sub
sub
cmp
dec
leave
and
sub
mov
push
aam
popf
dec
or
push
mov
stos
cld
lock
adc
jle
sbb
lret
dec
sub
push
jo
add
jo
pusha
out
mov
and
xchg
inc
mov
or
ds
jb
sahf
lahf
lcall
int3
test
mov
pop
mov
test
loope
mov
xor
test
mov
lods
rcr
mov
sbb
mov
loopne
jle
mov
mov
sub
stc
aam
inc
cmp
je
movsl
push
addr16
pop
xor
stc
movsb
hlt
test
stc
xchg
jle
add
fldcw
ljmp
nop
jnp
cmp
aas
jne
xchg
pop
cs
sbb
pop
jns
mov
cmc
xchg
mov
lock
mov
mov
sub
shll
push
mov
mov
fxch
movsb
mov
scas
test
mov
shrl
xchg
stc
int3
dec
cmp
icebp
mov
xchg
lds
shll
mov
xchg
pop
out
inc
loop
orb
cmp
mov
jnp
lret
movsb
out
movsl
inc
and
push
jmp
xchg
cmp
mov
and
hlt
pop
push
sub
inc
cmp
mov
dec
rcrl
and
xor
add
push
in
adc
movsl
popf
ficomps
lahf
pop
jae
scas
or
mov
rorl
dec
loope
enter
push
rcr
cltd
mov
and
arpl
adc
or
dec
adc
cmp
pop
out
mov
incl
fdivs
sbb
scas
sub
inc
jp
jns
mov
adc
lret
lods
hlt
push
mov
inc
ss
leave
push
sub
icebp
push
ficoml
inc
out
pusha
fsubrl
loop
in
xor
into
adc
pop
shlb
mov
in
notb
shlb
shl
mov
jmp
jb
fwait
aam
sbb
repnz
fldenv
imul
lcall
jg
outsl
shlb
imul
mov
lcall
mov
adc
dec
int
lcall
cmp
clc
mov
inc
aad
cmovge
cmpsb
mov
sub
pop
mov
jb
jle
sub
bnd
gs
adc
sahf
push
mov
push
and
outsl
fwait
xor
leave
sbb
jmp
arpl
mov
xor
iret
xchg
loopne
xchg
popa
lcall
sysenter
scas
in
sbb
rcll
int
sbb
sbb
or
sub
push
mov
fbld
sub
sbbb
out
mov
js
les
push
or
and
mov
sbb
cmp
jle
lahf
jno
ds
ret
call
dec
pop
xor
call
jl
pop
int
cltd
shll
and
ficoms
test
lcall
mov
mov
lods
fistpl
pop
inc
sti
inc
inc
jg
lret
andb
push
in
sahf
dec
flds
mov
test
arpl
fdivrp
mov
cmpsb
mov
jmp
repz
rcr
jne
scas
fwait
bswap
fwait
lea
pop
jae
das
arpl
shld
xor
sbb
mov
lods
pop
test
cmp
fnstcw
or
jb
xchg
shlb
out
jo
sbb
sbb
cmp
scas
sbb
push
out
out
or
cwtl
in
mov
scas
cwtl
jns
test
fiaddl
mov
ds
arpl
or
fdivrl
shl
mov
mov
mov
jbe
pop
test
mov
inc
xor
out
add
pop
incb
or
out
outsl
xchg
out
sti
mov
pop
pop
sbb
fs
mov
leave
sub
cmp
fldcw
jne
xchg
mov
outsb
sahf
xchg
and
xorl
xor
shll
or
fisttps
sub
pop
fcompl
cmc
es
mov
test
xchg
lds
xor
mov
pusha
sbb
jnp
push
push
dec
inc
cmp
adc
stc
jl
inc
pop
add
pop
mov
movsb
mov
mov
mov
dec
movsl
sbb
shrb
cmp
dec
lahf
mov
pushf
xchg
std
mov
pop
sub
push
sti
lahf
repz
test
inc
push
lahf
aam
xor
xlat
in
pop
test
roll
xor
bound
push
test
orb
mov
jge
dec
and
dec
and
pop
xlat
xchg
mov
sub
and
mov
int3
arpl
mov
imul
jp
out
imul
cmp
pop
jecxz
push
aam
or
lahf
pop
add
xor
jae
push
xor
mov
mov
mov
adc
in
int
lret
lds
fidivrl
je
pop
cmp
and
cli
xchg
jbe
outsb
sahf
test
sbbl
mov
and
cltd
pop
adc
setge
cmp
sbb
notb
outsl
popf
pop
pop
repnz
popf
pop
mov
lods
xor
out
pop
mov
jge
pusha
loopne
mov
cmp
inc
jge
mov
jmp
jle
cmpb
fistpll
and
mov
shl
inc
fwait
sahf
lds
ficomps
out
xchg
mov
clc
popa
pop
pop
jno
lcall
test
xor
mov
xor
dec
fld
mov
lcall
mov
xchg
push
push
cmp
sbb
push
xchg
cld
in
xchg
mov
add
mov
pop
dec
gs
dec
fisubrs
xor
mov
div
aam
in
inc
mov
push
inc
movsl
jne
test
mov
lods
loop
sahf
cmp
es
or
ret
sahf
push
cmpsb
ficoms
cmp
sbb
test
xor
je
mov
push
cwtl
aaa
andl
push
mov
fimuls
sbb
movsl
sbb
inc
inc
in
xchg
flds
xchg
xlat
lahf
movsb
popf
test
and
xor
xchg
mov
dec
fwait
xor
jle
and
test
pop
mov
movsl
call
cmp
or
pop
icebp
xor
fwait
or
and
loopne
mov
push
dec
jmp
sbb
aad
xor
stos
scas
scas
jl
pop
lods
adcb
in
mov
gs
stc
pop
cmp
fcoml
data16
mov
mov
int3
fistpl
arpl
insl
jnp
mov
xor
push
sarb
jno
add
mov
in
sub
negl
sbb
daa
and
daa
repz
bound
repz
nop
pop
add
lahf
iret
xor
inc
ret
int
fsubrl
lds
pop
std
inc
inc
and
push
adc
push
cs
adc
inc
imul
sbb
sbb
push
into
int
pop
mov
mov
into
imul
sarl
ret
lcall
adc
cmpl
rcrb
cmpsb
ds
jmp
scas
adc
and
cmp
inc
sub
xchg
sahf
dec
pop
ret
mov
mov
push
fsub
out
cmp
xchg
push
andl
fstps
stos
xor
out
sahf
into
mov
cmpsl
mulb
out
mov
pushf
test
fdecstp
out
aam
fidivrl
std
sbb
out
adc
dec
mov
sub
push
xchg
adc
mov
in
mov
imul
xor
andl
shl
out
inc
jle
or
sbb
popa
fcompl
pop
in
daa
mov
lds
cmp
adc
adc
leave
dec
lahf
cmpsb
ss
push
leave
mov
or
cmp
enter
mov
scas
dec
mov
dec
dec
jmp
cmp
fidivs
mov
pop
mov
test
inc
add
dec
jns
ret
imul
or
cli
pop
pop
push
cmp
into
inc
dec
sbb
jnp
scas
inc
test
movsb
xorl
lds
test
add
or
inc
xchg
push
xor
in
fsubrl
int
mov
pop
push
xor
icebp
loope
jo
pusha
movsl
stc
add
xor
outsl
inc
call
jae
aas
mov
mov
inc
sbb
add
fisttpl
jo
leave
push
mov
mov
cli
push
pop
imull
and
xchg
cmp
mov
adc
icebp
test
imul
movsl
ds
push
dec
int3
les
xchg
inc
movsb
mov
stos
add
fwait
in
and
or
lock
mov
aam
int3
orb
test
push
jmp
fld
jno
int
sub
imul
dec
bound
cli
movsl
rcll
aad
or
mov
sub
ficoms
push
popf
popa
js
jle
in
sub
adc
jns
popl
daa
in
adc
in
mov
and
cmp
stc
jg
es
pop
mov
cmp
data16
jge
dec
xchg
int
out
adc
fcompp
xchg
sub
mov
popf
fisubs
sti
adc
mov
mov
enter
sub
cmp
xor
inc
and
mov
scas
mov
mov
pop
sbb
jecxz
mov
sbb
xchg
cmp
test
dec
ficomps
lock
jle
push
sarl
nop
je
inc
mov
ret
sbb
out
push
js
loope
imul
jb
or
mov
mov
icebp
pop
or
and
hlt
imul
adc
out
xor
das
jno
in
pop
xchg
pop
sbb
cmc
mov
pop
xchg
movsl
test
cmp
xchg
sarl
loopne
fsubrl
dec
lret
push
pop
ss
cmpsb
pop
push
out
iret
idivl
and
jnp
rorb
fdivs
insb
lock
aas
jmp
xorl
pop
out
int3
std
pop
loope
les
frstor
sbb
fwait
sub
hlt
dec
movsb
aad
ret
mov
xorb
jecxz
xor
mov
xor
cltd
int3
xchg
fdivs
je
aad
sahf
xchg
out
lahf
scas
or
cld
push
cmp
xchg
xor
cs
insl
xlat
lds
pop
clc
sub
add
cmc
dec
add
out
pop
mov
mov
popa
das
mov
cmp
xor
sbb
dec
nop
jmp
fldenv
mov
sub
mov
fidivl
scas
int3
jl
adc
fldcw
mov
lods
inc
movsb
cmp
mov
xchg
js
cmp
je
or
xor
or
cld
fs
test
pop
fiaddl
movsb
push
sarb
mov
test
mov
mov
xor
mov
jge
add
sub
test
xchg
or
xchg
out
stos
xchg
repnz
adc
dec
inc
xchg
and
shll
pusha
sbb
test
pop
jb
jp
stos
cmp
cmc
lods
jns
das
fnstenv
hlt
adc
inc
imul
xor
dec
mov
lods
ret
xor
gs
fcompl
shl
in
stc
mov
pop
mov
mov
ret
test
push
push
mov
and
xchg
mov
push
mov
shl
cld
popf
sub
xlat
sub
sub
test
scas
inc
sbb
mov
stc
inc
test
jge
movsb
pop
mov
int3
adc
ficoms
outsb
mov
xchg
mov
push
push
in
sbb
inc
xor
movsb
inc
test
xor
dec
dec
or
sub
dec
pop
mov
int
repz
pop
jmp
imul
mov
fistl
shlb
leave
inc
push
push
mov
and
push
add
mov
sbb
push
ljmp
xor
xor
fsubrl
push
xchg
ss
mov
adc
gs
add
cmp
scas
scas
repz
xchg
ja
lds
jne
subps
inc
fwait
mov
aad
stos
mov
outsb
sbb
push
jle
xchg
jbe
jns
xor
fsubl
pop
or
fdivs
loopne
and
cld
loop
cmp
adc
jnp
nop
xor
pop
xchg
adcb
cmpsb
faddl
or
push
mov
push
lock
frstor
mov
cltd
cmp
leave
scas
cmp
jecxz
je
lds
xchg
push
gs
lahf
mov
pop
pusha
xchg
aam
popf
sbb
dec
repnz
push
and
xchg
lds
lahf
int
inc
scas
cmp
dec
dec
xchg
mov
ds
sti
outsb
jb
or
bound
fistpl
lods
jecxz
sub
jp
fldenv
loope
sub
xchg
pop
dec
les
stos
test
cmp
dec
jns
mov
pop
test
inc
and
filds
mov
int3
push
js
mov
add
scas
sti
insb
xor
stc
bound
pop
rcrl
xchg
std
sbb
cs
ret
adc
test
addr16
dec
mov
lods
sub
push
test
sub
js
ficomps
dec
fiadds
push
mov
mov
aad
pop
jmp
dec
imul
rclb
jb
std
sub
dec
dec
and
lods
repnz
jp
fmuls
adc
mov
push
dec
xor
or
sub
sbb
mov
and
xorl
mov
std
jl
icebp
mov
sbb
loopne
adcl
jae
xor
fsubp
cmp
mov
inc
jnp
pop
jmp
rorl
xchg
test
push
jmp
dec
and
mov
insl
mov
hlt
xchg
movsl
sbb
cmp
adc
push
stos
in
call
pop
mov
dec
mov
shll
xor
add
test
adc
sarl
xor
xor
stos
pop
fmull
aaa
dec
in
ret
and
sub
sbbb
mov
paddb
movl
push
push
xor
cmp
test
repnz
stos
icebp
clc
movsl
leave
mov
movsl
imul
loopne
mov
test
scas
fstpl
sahf
push
mov
out
cmp
cs
cs
fstps
dec
jmp
lret
xchg
sbb
fnstcw
repnz
push
cmc
rolb
test
or
hlt
mov
mov
adc
or
cltd
dec
xchg
mov
movsb
mov
mov
jmp
mov
iret
fisttps
incb
insb
inc
pop
jecxz
xchg
sub
mov
cmp
cmp
inc
imul
mulb
pop
or
in
cmp
scas
es
and
push
jge
aam
jl
jb
outsb
mov
lea
popa
dec
jne
sbb
arpl
fwait
int3
push
cli
add
mov
mov
push
lods
or
jle
xchg
aaa
and
push
pop
mov
or
movsl
xchg
lahf
imul
cwtl
adc
or
mov
mov
cmc
in
xchg
push
fsubrl
sbb
das
out
fcmovb
sbbl
lock
les
and
dec
and
jae
pusha
lods
out
repz
bsr
xchg
sti
pop
movsl
ss
outsb
xor
clc
dec
inc
jl
jmp
mov
bound
imul
push
outsl
mov
adc
xchg
rep
push
fdivl
orb
mov
addr16
fstps
inc
xor
push
icebp
mov
ficompl
jns
lods
jno
out
push
ret
pop
push
cmpsb
or
mov
dec
and
cwtl
arpl
sub
sbb
jle
lret
mov
mov
jb
cwtl
xor
xor
fdivrl
repz
into
fiaddl
jmp
jb
fwait
push
adc
push
inc
sbb
mov
pop
sbb
ficoml
lcall
pop
lcall
stos
dec
add
cmp
or
add
mov
test
adc
or
mov
adc
cmp
movsl
outsb
inc
in
add
add
push
lahf
xchg
out
push
sub
test
push
scas
loopne
addr16
add
mov
xchg
mul
icebp
bound
cli
adc
mov
mov
jo
mov
mov
addr16
mov
xchg
inc
xor
xchg
or
lods
inc
xor
rcr
push
sti
mov
xchg
sub
leave
icebp
or
push
and
popl
or
adc
jns
aas
xor
xor
mov
cmp
mov
es
aad
fwait
add
mov
and
pop
pop
adc
fidivrl
jae
mov
mov
stos
or
call
add
inc
subb
cmp
pop
jl
test
shrb
dec
int3
flds
pop
jae
dec
adc
in
bound
push
pop
add
pop
and
outsb
adc
arpl
test
pusha
xchg
xor
mov
lock
push
iret
insb
lahf
loope
clc
mov
out
mov
mov
mov
mov
ljmp
sub
cmp
add
mov
pop
or
test
mov
mov
popf
xchg
int3
into
push
cmpsb
dec
call
cmp
mov
das
out
in
push
loop
pop
hlt
out
push
aas
fadd
popa
int
push
les
push
popa
xor
dec
pop
outsb
pop
fld
leave
out
mov
shrl
sbb
inc
dec
out
loopne
sarl
sub
loopne
test
sti
js
mov
mov
push
or
mov
in
lcall
pop
lcall
data16
push
xor
xchg
mov
pop
mov
in
jl
rolb
mov
push
and
aaa
cli
aad
pop
xor
loop
test
xchg
mov
push
test
jae
sub
and
mov
fiaddl
insb
push
pop
movsl
int
cld
inc
test
adc
mov
cmpsb
mov
lahf
mov
insl
xchg
daa
inc
and
pop
xor
push
jae
mov
pushf
push
test
or
cmp
ss
and
sti
sbb
fmull
fdivs
jbe
jle
cmp
inc
pop
xlat
aad
xchg
pop
xchg
mov
nop
andb
jne
popa
or
inc
dec
data16
pusha
es
sub
stc
adc
outsl
ficomps
push
shrb
mov
push
push
repz
jae
mov
and
xchg
mov
dec
shll
xchg
jge
add
add
add
mov
sub
push
outsl
fsubp
imul
lea
popf
daa
js
jae
push
inc
push
push
add
loop
lds
mul
mov
or
jno
mov
dec
hlt
sub
stc
pop
adc
sbb
xchg
and
sbb
test
dec
pop
icebp
inc
mov
ds
movsb
cmp
pushf
dec
hlt
iret
shl
or
fsubrp
dec
add
cmp
add
mov
or
sbb
mov
repz
int3
sbb
pop
push
aaa
ret
sub
test
mov
mov
ret
xor
mov
js
stc
inc
inc
outsb
fidivl
cmpsb
insb
lods
lds
fsubrl
ss
cmc
add
cmp
rcrl
xor
test
mov
std
leave
lahf
mov
jp
fdivl
or
sbb
add
lahf
mov
mov
lods
sub
imul
test
mov
jns
je
mov
test
test
mov
xor
sahf
icebp
push
nop
push
stos
mov
inc
pop
jo
pop
cltd
rclb
jp
xor
xor
test
pop
hlt
mov
cwtl
mov
or
or
jbe
cmp
das
mov
dec
rolb
jnp
fidivrl
out
outsl
stc
dec
or
scas
jae
add
and
xor
mov
push
jle
sbb
scas
lods
push
scas
ror
mov
out
or
int
icebp
cmpsl
mov
or
out
mov
mov
jle
mov
adc
and
pop
aas
out
hlt
out
adc
push
mov
ja
mov
pop
push
dec
lock
jo
or
cmc
repz
lret
addr16
bound
fildl
lret
sub
test
and
adc
and
popa
xchg
mov
cmp
adc
pop
cmpsb
and
out
scas
addr16
mov
pop
push
cmpsb
mov
sub
sbb
sti
jp
imulb
push
iret
sub
fadd
push
fbld
std
test
test
lea
popa
adc
movsb
pop
fsubs
mov
sbb
and
xor
xorl
scas
mov
in
adc
mov
jae
mov
xchg
or
mov
dec
pusha
or
lods
jg
cltd
mov
std
fsubl
shrl
enter
hlt
fists
daa
int3
cwtl
or
std
movsb
mov
lds
sbb
xor
or
in
mov
fldcw
mov
bound
popf
cmp
iret
inc
pop
test
inc
mov
repz
mov
std
enter
aad
pop
ss
dec
iret
xor
lods
mov
mov
ljmp
cltd
mov
test
adc
call
lock
sbb
repz
adcb
andl
mov
sub
inc
and
flds
cmp
ror
inc
jl
cmp
out
sti
dec
int3
push
fsub
sbb
addr16
int3
test
idivl
cmp
dec
push
dec
mov
stc
lret
jecxz
and
or
pop
popa
adc
and
dec
scas
mov
jae
push
movsl
push
push
out
clc
test
js
movsb
je
pop
and
jmp
pop
jb
iret
mov
lahf
xchg
mov
inc
imul
aas
flds
je
xor
inc
adc
rcll
xor
pop
lcall
lods
rclb
adc
sub
sub
mov
push
pop
addb
mov
shrl
or
in
call
into
and
pop
cmp
xor
sbb
icebp
adc
inc
aaa
mov
mov
pop
ljmp
cmp
lods
pop
aam
pop
sti
stos
movsl
mov
adc
out
mov
mov
pop
test
fwait
add
mov
daa
adc
mov
imul
in
mov
cmp
inc
rcll
add
call
push
in
in
xchg
inc
sahf
and
or
mov
mov
test
test
ja
mov
mov
aad
mov
stos
in
jns
jmp
xor
adc
ss
imul
loop
pop
outsl
and
add
push
lods
push
mov
lahf
lret
mov
xlat
xlat
mov
dec
mov
jo
fsubp
fimuls
xchg
xchg
push
mov
fldenv
jae
scas
test
cmp
jo
jmp
add
aam
push
ret
sahf
and
cmp
sbb
mov
sarb
mov
mov
sub
arpl
push
add
sbb
repnz
inc
push
fwait
out
xchg
mov
mov
jge
mov
gs
inc
and
pop
or
lods
clc
repz
ret
fs
mov
test
dec
roll
dec
das
jae
aas
gs
xchg
jb
rcll
xor
sub
dec
outsl
das
flds
or
into
sti
push
push
push
out
ret
mov
push
jno
insb
adc
cmp
pop
cmp
pushf
sbb
xchg
mov
popa
xchg
outsl
push
push
repz
cmpl
outsb
call
jp
movsl
rcrl
mov
cmpsb
adc
orps
out
stos
movsl
outsl
rep
fnstenv
shrl
mov
jl
push
int
out
stos
enter
cmpl
sbb
cld
dec
test
fwait
adc
imul
cmp
fidivrs
mov
cmpsl
ret
addr16
lret
or
or
fnstsw
sbb
inc
xchg
aas
rcrl
in
adc
je
fimuls
pop
mov
loopne
mov
jg
xor
adcl
push
push
fsts
jnp
movsb
and
std
mov
mov
scas
cmp
imul
pop
xor
fdivl
stos
or
cmp
xor
inc
mov
call
dec
pop
fidivs
nop
mov
movsl
cmp
or
push
mov
mov
lret
dec
xor
push
aaa
and
pop
out
xchg
sbb
repnz
mov
mov
lret
test
fcompp
mul
jbe
inc
loop
scas
add
xchg
mov
shlb
xor
int
xor
addl
fldt
in
fstpl
push
pop
fs
aad
mov
hlt
mov
cmp
inc
mov
push
dec
push
ja
add
jmp
out
movsb
data16
mov
inc
push
mov
scas
mov
mov
fdivrp
push
js
jnp
div
mov
imul
add
sbbl
aad
movsb
movsb
int
inc
mov
test
lods
mov
ret
mov
jmp
imul
loope
mov
roll
subw
cmpsb
inc
js
dec
xor
mov
xchg
sbb
inc
out
mov
fs
dec
adcb
mov
cs
rorl
movsb
test
movsl
sbb
shlb
int3
dec
adc
adc
or
outsb
test
mov
xchg
es
hlt
and
inc
les
pop
mov
aaa
xor
scas
out
fmuls
xor
lret
cmpb
scas
int3
test
loopne
in
out
fnstcw
lea
fdivp
pop
sbb
ss
fmulp
ljmp
in
push
leave
jnp
xchg
subl
popa
scas
movsb
and
push
cli
mov
popf
test
xchg
out
mov
fldenv
ficomps
push
nop
repnz
lock
in
xchg
out
adc
jo
push
out
movl
cmp
enter
mov
aam
push
enter
push
mov
jbe
mov
les
jmp
mov
test
dec
aad
sbb
mov
mov
and
jge
ljmp
or
sub
fldt
mov
mov
push
cmp
pop
loope
cmp
movq
inc
mov
sub
outsl
sahf
xor
pop
sti
rolb
call
insb
and
inc
adc
add
popf
dec
push
sbb
mov
mov
xchg
fistps
adc
sub
movsb
and
in
xchg
in
cmp
add
out
lret
lods
lahf
mov
xor
cmp
mov
adc
lcall
mov
mov
fcompl
pop
xor
hlt
inc
pop
lods
and
xor
clc
jnp
push
pop
mov
mov
fwait
divb
ds
lock
inc
jl
mov
inc
gs
out
adc
mov
fcoms
dec
rclb
fisubrs
pop
jle
add
popa
popf
mov
loope
xchg
xchg
sub
inc
mov
cmpb
sahf
cmp
mov
push
sbb
mov
hlt
loopne
out
int
pop
arpl
ret
lret
in
sub
scas
in
mov
popf
adc
mov
cmc
sbb
jns
pop
jmp
pop
ror
fmull
mov
add
mov
leave
jge
pop
mov
push
xchg
inc
std
lods
push
xchg
std
test
inc
aas
lcall
movsl
xchg
enter
loope
mov
sbb
ljmp
outsb
mov
jle
cmp
inc
flds
rolb
lds
xor
adc
fucomi
jge
jnp
or
sub
sub
mov
jecxz
and
loope
lahf
popl
inc
arpl
mov
push
cmp
addl
fisubrs
jmp
push
movsb
mov
add
dec
mov
xchg
inc
repz
pop
pop
jno
jle
or
sbb
jo
std
mov
sbb
mov
jns
adc
cmp
or
mov
gs
pop
dec
out
jae
into
cltd
dec
inc
js
sub
mov
xor
dec
jg
inc
jle
aam
mov
int
or
call
mov
dec
pushf
aam
dec
std
pop
jecxz
dec
mov
inc
rclb
call
xchg
sti
and
fmull
lcall
or
out
test
mov
imul
adc
test
sbb
mov
pop
outsb
pushf
jo
push
cld
xchg
fs
mov
pop
sub
mov
jge
jecxz
sbb
fildl
jne
sbb
int3
lahf
sar
dec
sub
inc
popa
xor
adc
mov
cmp
mov
fs
repz
sub
inc
xchg
push
push
iret
jl
imul
adc
xchg
mov
push
inc
and
add
lds
and
cmp
add
push
js
lods
into
jge
aad
cmpsb
add
push
ja
lock
xlat
jge
mov
push
scas
inc
pop
jne
jae
test
push
xor
adc
mov
mov
mov
add
jl
daa
cltd
movsb
scas
data16
es
cmpsb
jp
inc
xchg
mov
icebp
les
mov
add
out
jle
cmc
ret
push
lret
mov
int3
sbb
andl
push
sub
test
loopne
gs
rcrb
jp
lret
mov
xorb
mov
fsubrl
test
jecxz
inc
jne
sahf
mov
cmp
pop
outsb
enter
sbb
cmp
pop
push
ja
hlt
ret
imul
xor
out
xchg
lock
stos
ljmp
pop
xchg
cmp
pop
fwait
je
test
mov
lock
dec
cmpsl
mov
cmc
mov
pop
rorb
inc
int
cwtl
jmp
neg
sbb
and
das
sub
xchg
and
cmp
or
hlt
inc
push
outsb
dec
xchg
inc
xchg
loope
popf
pop
fxam
push
and
xor
xchg
cli
std
adc
inc
add
fiadds
roll
insb
clc
enter
out
and
sbb
push
push
mov
mov
scas
adc
and
mov
or
lds
rolb
jnp
fimuls
insb
pop
push
pop
cmpsl
mov
mov
jbe
jle
sbb
test
adc
std
push
fchs
xchg
out
popa
push
in
sub
lock
sub
sbb
mov
lret
je
mov
cld
mov
push
fnstenv
insb
aaa
pop
mov
rcrb
cmpsb
aas
dec
mov
cmp
jo
pop
dec
rcrb
jb
xor
sub
pop
mov
push
bound
sarl
push
mov
addb
cltd
jb
scas
cmp
mov
in
sbb
mov
dec
js
sbb
in
adc
dec
xchg
push
fldt
cltd
fisttpll
hlt
jle
jae
popf
or
sahf
mov
loopne
and
arpl
mov
mov
pop
mov
ret
les
cmp
cmp
lods
mov
mov
xlat
bound
inc
xchg
mov
movsb
arpl
inc
xchg
add
insl
lods
sbb
aaa
mov
and
addr16
test
insl
push
ja
stos
mov
xchg
jno
fwait
mov
std
adc
xor
sbb
adc
fnstcw
xor
mov
cmpsl
adc
adc
jecxz
cmpsl
xchg
nop
lcall
inc
push
gs
scas
ret
enter
loopne
inc
sbb
mov
mov
out
push
in
les
push
int3
stos
sti
push
mov
stos
and
lahf
sbb
pusha
mov
or
adc
xlat
sub
lret
or
sbb
xor
mov
ds
cmpsb
lret
mov
aaa
jae
lods
add
jne
mov
and
es
mov
push
testl
repz
sub
mov
inc
mov
add
test
or
clc
loope
loopne
imul
int3
rcll
mov
movsb
and
jne
jb
add
movb
inc
pop
int
add
push
fcomps
imul
mov
mov
adc
lcall
movl
xchg
repnz
in
addr16
fldenv
xor
mov
lock
out
mov
sub
hlt
outsb
inc
lock
gs
movsb
sahf
test
jge
xor
jae
jmp
std
lret
add
rcrb
xchg
js
mov
aas
inc
movsb
int
xchg
inc
mov
push
dec
sub
mov
call
cmp
cwtl
cmc
icebp
repnz
mov
pop
inc
cmp
or
into
pusha
leave
mov
add
push
mov
stos
js
and
lods
or
jb
movsb
mov
arpl
dec
out
addl
sbb
adc
out
mov
lcall
sub
or
rol
cmp
das
repz
jbe
in
adc
xor
into
inc
push
mov
scas
filds
xchg
pop
js
pop
in
jb
jle
js
pop
fldcw
cmpsl
in
out
mov
call
sub
adc
fcomip
and
dec
cli
insl
dec
and
adc
cmp
fistps
jp
ja
cmpsb
xchg
fsubs
mov
pop
dec
mov
mov
in
cltd
dec
add
push
push
into
jbe
pop
or
lods
mov
les
push
jbe,pn
jmp
sub
and
jmp
mov
jae
mov
int
mov
orb
ja
das
jo
pop
out
and
in
mov
cmp
movsl
jne
addr16
adc
dec
pop
in
mov
fidivrl
aad
aam
sub
pop
flds
or
pop
jno
fisubs
dec
popa
scas
aas
sti
cmp
leave
nop
pushf
push
mov
sub
and
popa
cli
or
sub
in
or
xchg
mov
fcoml
sub
fnstcw
xchg
mov
mov
mov
xchg
ror
fldl
sbb
cltd
sahf
mov
arpl
cmpsl
mov
mov
dec
repnz
dec
loop
les
cmpl
cmp
stos
loop
jle
test
cmp
sub
mov
dec
push
dec
shrb
or
iret
loop
and
sbb
sbbb
fwait
cmp
adc
gs
lret
std
in
push
jo
hlt
in
cs
sub
xchg
out
pop
call
test
loopne
inc
push
mov
and
and
dec
mov
js
outsl
pop
out
je
cmp
mov
mov
repnz
pop
cwtl
lahf
loop
sahf
mull
sbb
mov
xlat
jae
dec
scas
inc
fld
out
pop
sbb
jmp
dec
rcrl
lods
push
movsb
xchg
mov
mov
dec
in
hlt
shlb
mov
dec
test
outsb
lods
test
or
lcall
dec
and
clc
cmpsb
fimuls
or
xchg
mov
sti
mov
inc
outsb
lods
movsl
cli
dec
pop
aam
add
and
xor
gs
cs
xlat
push
stc
mov
test
inc
dec
mov
mov
rclb
pop
adc
xchg
or
push
mov
xchg
xchg
clc
inc
aad
movsl
jp
in
mov
fildl
cmp
and
adc
cmp
or
cmp
xorl
mov
inc
mov
xchg
mov
fdivl
xor
push
cli
inc
cmp
movsl
mov
adc
mov
test
ret
dec
stos
insb
scas
dec
loop
jnp
adc
mov
aaa
sub
xor
std
movsb
arpl
dec
jae
xchg
mov
aas
scas
adc
and
inc
xchg
xor
popf
je
dec
xchg
ja
dec
inc
sub
clc
pop
inc
push
mov
rcll
incb
xlat
call
stos
popl
mov
or
cmp
shrl
push
movsb
rcrl
adc
push
or
add
dec
mov
mov
xchg
ja
cmp
push
mov
fs
js
push
out
dec
stos
ret
xchg
in
dec
movsl
test
mov
mov
mov
mov
imul
push
lret
std
jae
cmp
mov
pop
and
or
pop
pop
in
pop
cmp
lahf
std
sbb
or
mov
stos
cmc
dec
test
out
lret
addr16
lods
sub
enter
popf
scas
pop
mov
sub
std
sub
mov
jp
cmc
xor
hlt
std
cli
fildl
mov
sahf
imul
mov
aaa
call
call
fpatan
cli
jp
and
add
dec
mov
lcall
jge
repnz
pop
sbb
push
push
js
jb
repz
prefetch
cld
or
xchg
mov
and
in
push
popa
stc
test
mov
or
inc
push
repz
inc
scas
pop
or
cmp
in
insl
cwtl
pop
or
fnstcw
xchg
adc
sbb
cli
sahf
jle
clc
mov
mov
addr16
ja
es
test
mov
aam
imul
push
push
lds
pop
sbb
pusha
sarl
test
sahf
xchg
cmp
fs
jle
xor
loopne
pushf
ret
sub
scas
insb
in
cmp
mov
dec
subl
fldenv
cwtl
repz
sahf
imul
fstpt
cmp
fsts
mov
add
and
aas
or
push
cld
add
jge
push
add
call
pop
iret
and
mov
mov
ss
dec
mov
fmulp
arpl
dec
into
stos
mov
adc
cmpsb
repz
xchg
or
loopne
cld
or
imul
or
std
leave
jns
jmp
ljmp
test
mov
sbbl
in
std
dec
push
shrb
pop
test
pushf
jge
push
rorl
or
imul
movsb
mov
lcall
scas
mov
push
pop
or
cmpsb
sub
sarl
dec
push
jb
call
faddp
mov
test
insb
jle
xor
fcmovnu
scas
mov
xlat
and
inc
mov
cmpsl
aam
mov
lods
add
push
xchg
sbb
sbb
rcrl
add
orb
cmp
decl
movsb
dec
and
pop
push
dec
sbb
jle
out
jno
ficompl
pop
js
or
cmpsb
or
jecxz
add
cmp
add
cmp
and
inc
mov
xchg
stos
and
repz
aad
jge
out
and
ss
jne
push
sahf
mov
rcl
div
xchg
add
dec
xchg
cmp
pusha
jbe
sarb
inc
xchg
loop
xchg
pop
cwtl
int
push
pmaxub
mov
add
test
pop
push
pushf
mov
mov
push
clc
fistl
dec
push
push
cmp
ret
into
sahf
cld
push
jmp
loope
adc
mov
xor
xor
repz
inc
inc
pop
bnd
xorl
gs
fnsave
inc
push
pop
push
pusha
jo
popa
inc
cwtl
clc
pop
insb
cmp
xchg
fxch
insl
scas
pop
testl
add
jno
or
out
loope
jmp
mov
bound
fxch
andl
xor
cmp
dec
negb
cs
scas
test
sub
subl
dec
fmulp
es
mov
test
or
hlt
sbb
inc
cmpsl
negl
push
pop
lds
inc
or
push
shrl
pop
xchg
nop
add
fnstcw
addr16
aaa
pop
mov
pop
lret
sub
and
aas
sahf
outsb
sahf
and
adc
das
xchg
out
xor
mov
mov
jp
call
push
lret
call
or
popf
mov
leave
out
mov
push
xchg
repnz
cld
icebp
int
add
or
mov
out
inc
enter
cld
xchg
test
in
push
inc
movb
push
mov
cmc
in
fisttpl
sbb
mov
std
dec
sub
lcall
sbb
sti
mov
xchg
sub
gs
outsl
xchg
xchg
dec
lahf
in
push
push
mov
std
les
add
imul
jmp
mov
inc
mov
pop
icebp
cmp
jb
or
aaa
mov
ss
repz
cld
jbe
pop
mov
out
out
jno
mov
in
pop
push
mov
flds
movsl
jno
mov
ljmp
inc
pop
xchg
out
icebp
adc
lahf
fnstcw
inc
jg
outsb
mov
cmp
inc
int3
scas
hlt
or
popf
adc
loop
sub
sbb
and
jle
repz
movsb
rorl
stc
add
mov
mov
imull
dec
inc
enter
call
jecxz
scas
cmpsl
fnstcw
jnp
add
mov
dec
mov
js
sub
inc
pop
pop
dec
cld
xor
clc
jno
jbe
jae
push
mov
ffree
sti
add
and
adcl
daa
and
fwait
out
dec
mov
pop
jo
mov
mov
cmp
cmp
or
arpl
lods
xchg
fs
leave
dec
aam
pop
inc
arpl
movsb
test
aas
pop
scas
outsl
xor
and
add
push
push
mov
cwtl
into
jns
mov
mov
imul
cmp
pop
sahf
xor
sub
hlt
loopne
leave
push
aad
test
cmp
and
cmpsb
cltd
jle
nop
push
roll
repz
pop
jmp
pop
cmpsl
cmp
rorl
fbstp
ds
sbb
xor
jecxz
ret
jp
loope
insb
in
add
sbb
mov
xor
sub
cwtl
jg
iret
fabs
push
lods
test
and
daa
mov
sbb
dec
int
popa
lods
cli
adc
test
mov
xchg
scas
loope
inc
stos
std
icebp
xchg
push
mov
adc
test
imul
shl
cmp
in
xor
stc
xchg
xchg
dec
pop
jno
xchg
leave
xchg
lret
scas
movsl
sbb
xchg
mov
inc
dec
popa
push
xchg
push
fs
sbb
jp
test
repnz
popa
fistpll
add
into
push
push
mov
ja
xchg
cli
xor
test
sbb
dec
movsb
inc
pop
stos
mov
dec
mov
mov
int
xchg
lret
inc
scas
and
jnp
push
scas
lds
pop
inc
mov
jp
sub
jle
cmp
mov
jns
fimuls
jns
addb
add
idivb
test
mov
mov
mov
dec
push
or
mov
cmpsl
inc
inc
movsl
fdivrl
andb
xchg
mov
mov
sbbb
test
and
inc
mov
lock
mov
das
sbb
inc
sbb
je
push
cmp
xor
sbb
fisttps
sti
int
rcr
mov
dec
xchg
pushf
movsb
test
mov
sahf
out
scas
jne
cmp
xor
fmuls
lock
out
sub
scas
xchg
cmp
xor
int
xchg
movsb
adc
stos
std
pop
mov
imul
jle
mov
mov
lock
cld
push
movsb
fistpl
into
out
inc
hlt
clc
ljmp
pop
cltd
repz
popf
shl
push
cmp
es
rcr
dec
inc
adcl
sub
add
xchg
mov
and
and
fwait
insl
jnp
mov
imul
push
sub
jmp
sub
inc
inc
sub
test
and
icebp
scas
xchg
jmp
adcb
adc
subl
cmpsl
xor
adc
xor
add
add
mov
lcall
pop
cmpsl
mov
js
xchg
cmp
inc
mov
sub
shll
stc
dec
or
lds
adc
int
call
daa
cmpsl
jecxz
aam
pop
test
fsts
pop
outsb
xor
lods
dec
aad
pop
pop
pop
and
push
adcb
inc
sbb
data16
call
es
and
movsl
dec
cmpsl
and
adc
sti
cmp
scas
cld
mov
and
and
inc
xchg
xchg
int
punpcklbw
pushw
dec
ficoml
out
stc
scas
mov
stos
ficoms
cmpsl
mov
mov
clc
fsubrp
xchg
mov
in
xchg
imul
mov
mov
mov
cmp
test
jb
dec
push
into
rcrb
mov
pop
aam
sarl
sbb
fdivp
out
lods
sbb
insl
test
cld
test
or
int3
outsb
push
dec
mov
or
js
push
mov
ret
scas
movsl
push
lock
adc
stos
pushf
pop
mov
pop
stc
in
and
add
gs
mov
fabs
popa
scas
adc
dec
mov
mov
lret
xorb
xchg
pushf
cmp
bound
adc
jmp
rcrb
mov
js
add
lods
mov
xchg
add
stc
loop
sti
push
jns
arpl
repz
shrb
or
in
cmp
or
sub
cltd
cld
xchg
xor
inc
jl
scas
ljmp
les
hlt
xor
scas
addr16
mov
call
pop
lds
and
gs
inc
stos
sub
fldcw
sbb
loop
inc
iret
mov
mov
sbb
ja
ljmp
mov
int
dec
in
setae
mov
popf
jae
imul
xlat
cli
test
scas
into
js
shlb
jmp
add
int3
pop
test
imul
jp
cs
or
xchg
repz
adc
dec
mov
xlat
subb
pop
xchg
inc
nop
rcrb
int3
loope
mov
jge
aam
gs
fstps
imul
in
cli
cmp
dec
or
arpl
into
sbb
inc
scas
adc
jl
mov
mov
pop
fldcw
stc
orb
push
fidivs
loop
sti
movsl
cmp
in
xchg
ja
cmp
mov
insb
sti
add
jmp
ljmp
test
xchg
mov
repnz
push
in
loopne
and
mov
lods
fisttpll
jo
push
mov
xchg
scas
and
lods
cmp
fisubrs
inc
mov
inc
int
cs
fldcw
js
stos
test
dec
push
inc
in
mov
jb
sbbb
js
fildll
adc
and
xor
ja
fsubrs
mov
int
and
cmpsb
dec
test
adc
shll
test
inc
dec
fsubrl
mov
daa
mov
pop
xchg
lcall
mov
dec
jno
or
push
and
mov
mov
pop
imul
jns
movsb
std
add
sub
out
pop
mov
ret
sbb
lea
frstor
pusha
divl
mov
pop
adc
and
and
sbb
cmp
pop
jae
in
pop
xchg
sbb
hlt
dec
sbb
loopne
mov
mov
mov
out
clc
aad
subl
in
mov
sbb
jno
mov
mov
mov
lods
movsb
dec
pop
push
mov
stc
mov
fincstp
mov
insl
adcl
inc
add
addr16
stos
sub
xor
out
into
add
pop
int
mov
stc
ret
jecxz
lcall
pop
into
adc
inc
mov
mov
mov
shr
js
loopne
fildll
xor
fcmovne
leave
test
cld
pushf
mov
xor
xchg
lcall
fidivl
mov
stc
lahf
cmpsb
sbb
push
ret
pusha
fimull
pop
repnz
dec
fcompl
xor
add
xchg
cmc
in
add
xor
push
add
add
dec
int
dec
cmp
mov
adc
mov
out
inc
mov
fsts
dec
mov
or
shlb
sarb
sbb
mov
jecxz
mov
lods
cs
inc
push
outsb
sub
mov
mov
mov
cmpsw
add
sbb
js
aas
sti
repnz
ljmp
sbb
mov
insb
push
sub
lahf
lret
xchg
xor
push
inc
sbb
mov
sbb
add
xorl
movsl
pop
repnz
or
sub
mov
cmpl
lods
sub
ds
addr16
xchg
cli
xchg
aas
push
jg
xor
sbb
push
sbb
mov
dec
scas
sti
dec
sbb
inc
jle
insl
pop
pop
pop
scas
and
fdivr
xchg
lcall
cmp
cmpl
adc
push
test
inc
mov
push
out
in
dec
ja
mov
movsl
push
test
xchg
xchg
fimuls
push
or
stos
cmpsb
push
daa
mov
lods
mov
dec
mov
push
push
test
sub
dec
push
push
repnz
mov
pop
loop
adc
pop
test
and
gs
adcb
dec
in
cmp
test
imul
popa
adc
enter
test
xor
syscall
fmuls
or
in
xchg
push
shr
int
inc
shr
cmpsb
bound
adc
lds
test
sbb
mov
into
pop
pop
sbb
iret
ja
or
xchg
sub
fmuls
fsub
and
sub
pop
and
jp
inc
aaa
dec
sbb
jne
adc
and
and
xchg
data16
lcall
leave
and
mov
cli
dec
and
imul
in
pop
jno
std
inc
nop
fcompl
test
jp
sbb
adc
test
call
xchg
data16
pop
pop
fmull
mov
push
jp
in
mov
mov
pop
cmp
incl
lods
ficomps
mov
sbb
cmpsb
mov
push
daa
inc
add
xchg
std
imul
int
push
subl
push
pop
inc
js
test
insb
xor
addl
xchg
adc
in
jmp
lods
out
pop
ficoms
bswap
popf
filds
subb
and
ds
jecxz
movntq
out
rorb
cld
jno
add
scas
cmpsl
fnstenv
std
xor
adc
hlt
ljmp
xor
imul
fnstcw
ret
sbb
stc
popf
push
dec
mov
dec
mov
mov
fxam
popf
fdivl
cmpsb
test
xchg
std
stos
je
inc
jae
das
push
dec
popf
push
fistpll
ss
and
arpl
jmp
ja
push
pop
inc
out
mov
stc
cmp
in
sub
push
mov
mov
movsb
cs
xor
out
scas
xor
fldenv
fstp
insb
shlb
dec
ja
mov
push
cmp
lods
sub
pusha
or
pop
sbb
or
outsl
addr16
mov
add
in
and
push
ficoms
out
jae
aam
mov
loop
faddl
sbb
sub
stos
inc
jmp
fsubl
orl
icebp
dec
xchg
es
leave
dec
je
jl
jp
in
sbb
add
out
or
pop
sbb
dec
or
or
testb
cld
xchg
mov
fdivp
xchg
pop
ss
xchg
addl
fadd
call
and
loope
or
push
leave
xchg
hlt
cmp
xor
scas
fwait
push
or
fucomi
sarb
loope
lea
lods
pop
mov
in
loopne
mov
hlt
add
daa
cmp
stc
mov
push
insl
cmpsl
call
dec
sbb
jmp
jle
push
xchg
dec
cmp
inc
ja
sub
leave
cld
shl
cmp
xor
in
psllw
jmp
xlat
movsb
mov
and
jns
pop
jae
jne
out
fcompp
jg
shl
lahf
leave
and
nop
ffreep
ljmp
mov
stos
movsb
sbb
lret
enter
cmpsb
cs
jo
add
lret
imul
sub
mov
sub
lea
loop
lock
das
mov
leave
pop
lods
xchg
xchg
mov
sub
sbb
jae
lret
or
sbb
test
mov
push
lret
push
sti
mov
cltd
sti
mov
xchg
mov
lcall
pushf
pop
dec
dec
test
and
das
xchg
addr16
xor
sub
repz
inc
arpl
cmp
push
add
xor
inc
sahf
arpl
xchg
insl
push
test
mov
scas
pop
and
cwtl
push
icebp
pop
sar
or
mov
rcll
fnstenv
stos
mov
mov
jae
rcrb
cmp
and
xchg
in
pushl
mov
subl
fwait
push
pop
fdivrl
fnstenv
fwait
xlat
fbld
mov
arpl
cmp
cltd
jb
jp
pop
ficoml
cld
rcrl
push
std
push
mov
sbb
jae
xchg
add
ds
int3
adcl
out
stc
and
cmp
ss
add
andl
lcall
std
mov
ret
shrl
aad
popa
jbe
and
sbb
ror
lret
and
sbb
loope
push
sub
sbb
sbb
jbe
mov
test
insb
movsb
mov
mov
imul
mov
add
xchg
cmp
xor
mov
inc
int
inc
add
inc
mov
jle
mov
sbb
es
sbb
dec
inc
in
lods
mov
out
xchg
aam
add
pop
test
in
dec
inc
mov
xchg
mov
inc
sbb
pusha
test
in
dec
stos
fwait
mov
mov
xchg
pop
daa
add
fcmovnbe
int3
pop
dec
jne
test
mov
fisubs
xor
cmc
push
push
insb
lock
and
or
mov
rcr
or
jns
gs
negb
das
xchg
test
xchg
push
imul
popa
filds
dec
pop
out
jno
and
stos
les
sub
shll
sbb
adc
sbb
sbb
clc
incb
sbb
jns
test
inc
xchg
pusha
xchg
xchg
sub
push
ret
hlt
movsb
push
xchg
cmp
adc
cmpsb
testb
mov
test
push
and
shrl
ret
mov
jbe
int
mov
in
sub
jl
mov
mov
loopne
leave
cmp
jg
popa
push
sahf
pop
mov
pop
imul
adc
test
jecxz
not
lahf
addr16
push
mov
and
xchg
jmp
and
mov
cmpsl
mov
add
xchg
push
adcb
push
sbb
mov
negb
aam
jno
std
mov
sbb
bound
insl
popa
cmpsl
cltd
scas
xor
gs
clc
fsubl
cmp
ret
adc
fldl
fdivrl
sub
movsb
and
mov
adc
mov
mov
pop
nop
hlt
lods
fldcw
push
sbb
adc
subb
mov
leave
fs
loop
jge
sbb
into
cmp
pop
inc
mov
jmp
xor
mov
cmp
jp
testl
push
push
lcall
out
lret
cmp
int
mov
xor
int
test
push
inc
sub
nop
repz
pop
mov
xor
nop
inc
faddp
xor
nop
cld
push
sbb
push
pop
adcl
mov
push
pop
lret
adcl
push
sbb
mov
rclb
adc
leave
sbbl
jns
push
fbld
out
add
pop
jae
xor
push
subb
pop
sbb
xlat
mov
shlb
and
cli
sbb
test
push
adc
push
popl
jge
cmpsb
scas
mov
imul
mov
or
loop
rcrb
mov
mov
stos
test
lock
sbb
mov
test
test
xor
mov
and
xor
push
cmp
out
jnp
je
adc
cli
mov
jne
gs
jg
insb
outsl
xchg
das
popf
movsl
adc
pushf
sub
sbb
dec
sbb
fxam
fdivrl
das
inc
fcompl
clc
mov
dec
lods
mov
cmpsl
mov
and
mov
test
push
pop
sbb
stos
push
stc
int3
jp
push
mov
sar
fcoml
dec
int3
repnz
out
sub
pop
cltd
mov
fdiv
mov
adc
jecxz
mov
gs
rcrl
sarb
data16
jg
sbb
push
in
mov
es
cmpsl
sbb
filds
add
adc
xchg
mov
in
in
sub
fisubs
frstor
mov
or
jno
inc
adc
sbb
xchg
jb
mov
mov
add
mov
adc
leave
adc
jmp
loopne
lods
jne
mov
das
sub
fiadds
mov
popf
add
mov
mov
dec
pusha
mov
out
dec
add
adc
mov
adc
dec
lods
test
cld
pop
add
dec
jae
stc
mov
fmull
lock
ficomps
mov
push
push
push
xchg
cli
inc
pop
cmp
data16
sbb
and
pop
popf
insb
jae
jnp
popf
aas
mov
sbb
movsl
in
es
mov
dec
sbb
ret
das
subl
vandnps
mov
pop
push
cmp
outsl
stos
fcompl
lret
push
add
push
movsb
sahf
sbb
and
into
cmp
adc
xchg
cmp
enter
aad
lods
xchg
cld
mov
inc
lds
bound
lock
neg
subb
out
std
lds
insl
push
notb
and
jge
dec
clc
adc
cmpsl
into
jbe
test
test
jp
dec
mov
xlat
inc
mov
fsub
mov
dec
sub
and
lock
std
mov
int3
inc
lods
and
inc
in
inc
mov
sub
cwtl
into
and
push
jnp
cltd
push
mov
aam
mov
lahf
shlb
test
popl
mov
in
sub
pop
push
pusha
mov
add
std
mov
pop
jmp
cwtl
cmp
jbe
fldcw
lods
add
or
xchg
and
rcr
mov
push
push
lods
inc
or
repnz
out
jecxz
xorb
sti
jns
fadd
adc
jp
mov
enter
sahf
fucompp
clc
xchg
pop
pop
shll
jae
pop
cmp
out
fwait
test
mov
aaa
push
mov
mov
shl
int
jmp
xchg
add
and
adc
xor
push
es
insb
dec
jl
jae
mov
ficompl
int
movsl
lret
lret
cmp
jnp
aad
sbb
add
dec
jp
and
mov
shrl
sub
cmpsb
xor
in
inc
setbe
out
mov
add
pushf
and
cmpsb
loopne
jo
mov
cmpsl
es
jp
cld
hlt
mov
push
call
push
cmpsl
mov
lahf
dec
fbstp
in
xchg
mov
xor
pop
mov
mov
xchg
std
es
repnz
in
cmp
xchg
mov
das
je
cmp
inc
xor
xchg
xor
aam
dec
stos
insl
jae
das
xor
inc
jb
cmp
shr
dec
mov
add
dec
mov
gs
xchg
mov
call
xchg
in
adc
test
push
fs
cli
jnp
xor
mov
das
shll
sub
jle
mov
push
flds
into
aaa
mov
imul
ficomps
and
out
repz
push
cmpsb
aaa
mov
xchg
push
push
arpl
xor
push
aam
push
cmpsl
mov
repz
mov
sub
scas
jge
ficoml
jnp
mov
mov
lcall
ret
inc
stos
mov
adc
dec
xchg
scas
mov
jmp
sub
fucomi
leave
ss
xor
mov
lock
pop
scas
or
fcoml
cld
adcb
xor
cmp
int
pop
jne
ljmp
pop
movsl
add
js
inc
xor
cmp
fisttps
cmp
lds
mov
mov
sbbb
fwait
mov
xorl
add
pop
shlb
leave
aam
out
mov
ljmp
dec
lock
inc
xchg
sbb
lea
fucomi
jmp
pop
jg
int3
aam
cs
test
in
xchg
pop
faddl
incb
dec
xor
outsb
loop
in
out
fdiv
inc
fwait
dec
out
adc
ds
lcall
mov
pop
hlt
jne
lcall
inc
xchg
sbb
fsubr
mov
cwtl
inc
ss
mov
jb
mov
and
mov
rol
inc
in
jl
xchg
clc
insb
out
stc
out
push
lret
out
mov
iret
dec
pushf
jp
cvttps2pi
add
push
xchg
or
or
mov
cmp
sub
add
jp
jle
scas
push
in
cmp
pop
fwait
repnz
dec
lods
sub
lret
jp
les
stos
repnz
mov
fldcw
fsubrs
loop
and
in
in
mov
lods
sub
fstpl
test
fabs
jl
or
sbb
cmp
ficoms
jp
cmp
sub
addb
jnp
mov
cltd
gs
int3
xchg
dec
xor
cs
sub
and
push
movsb
mov
xchg
pop
mov
adc
lret
aad
scas
mull
xor
mov
inc
mov
int3
inc
movsl
data16
movsl
xchg
jmp
adc
rorl
mov
mov
xor
inc
fldz
cmp
cmp
sbb
cmp
pop
jmp
aam
stos
cmpsb
cmp
popf
mov
xchg
gs
inc
jbe
int3
mov
imul
and
nop
inc
rcr
adc
popf
fscale
push
loopne
add
out
xlat
loopne
mov
and
cli
jnp
adc
mov
fwait
lret
mov
push
mov
test
sbb
rol
decl
jecxz
xchg
jns
les
sbb
in
xor
mov
pop
mov
sti
sub
or
mov
cli
mov
dec
sbb
leave
adc
dec
push
rcll
jge
cmp
xchg
mov
xor
das
sbb
xchg
xor
jecxz
jae
push
adc
andl
hlt
shl
addr16
int
inc
popa
std
or
out
jne
lock
cmpsl
mov
iret
pop
mov
clc
sub
out
cmp
loop
aaa
xor
pop
lds
iret
movsl
xor
xor
dec
data16
pop
out
inc
inc
mov
sub
icebp
shlb
sbb
ret
out
cwtl
pop
lcall
aaa
lods
call
sbb
jge
xchg
je
and
les
int
or
inc
pusha
mov
pop
popf
mov
xlat
sbb
mov
fxch
inc
xchg
xor
orb
dec
mov
mov
adc
ret
dec
inc
mov
pop
and
xlat
inc
sbb
nop
adc
jmp
and
mov
mov
stos
fstp
jp
mov
push
mov
push
out
and
push
popf
fistl
jle
mov
mov
mov
dec
lcall
sub
push
scas
ret
dec
xchg
xchg
je
addr16
mov
out
enter
jmp
xor
or
popa
sub
add
dec
sub
mov
scas
pushf
fimuls
int3
sbb
push
test
mov
mov
ret
call
mov
lods
lods
jbe
fcoml
or
push
jmp
cmp
ret
std
test
sti
loope
fcompl
test
dec
mov
in
sbb
bound
das
fwait
pop
ficomps
movsb
jnp
mov
mov
test
jl
cmpsb
dec
and
clc
mov
stos
and
cld
jno
xchg
mov
lahf
jle
inc
outsl
pop
loopne
es
movsb
sub
jno
cs
cmp
out
sti
repnz
pop
movsl
or
clc
test
jp
aad
lods
loop
adc
out
out
les
lods
xchg
shl
addr16
stos
insl
inc
and
mov
cmp
aad
mov
push
cmpb
mov
sbb
sub
and
jle
adc
push
lahf
std
outsl
push
add
xchg
das
inc
or
mov
push
int3
pop
pop
out
mulb
lds
int3
or
addl
xor
mov
xor
mov
mov
test
pop
mov
pusha
stc
mov
jns
das
push
sbb
adc
nop
cmp
and
movsb
push
shrb
test
pop
sub
mov
sbb
shlb
adc
sbb
ljmp
push
adc
add
xchg
je
pop
push
sbb
push
sub
rolb
aad
jmp
icebp
xchg
mov
pop
mov
pop
cmpsl
sub
out
in
mov
cmpsb
mov
dec
mov
fld
in
mov
mov
gs
std
out
mov
clc
cmp
mov
sbb
mov
and
lret
int
lock
xchg
adc
mov
sahf
jle
jl
xchg
push
enter
pushf
sub
cs
xchg
pusha
dec
scas
or
stc
cmp
mov
cld
pop
sahf
xchg
add
xor
dec
imul
push
ja
mov
add
loop
mov
leave
test
mov
cld
in
adcb
add
sub
pop
cmp
repnz
loopne
les
std
push
mov
scas
inc
xor
xor
jmp
xchg
clc
ret
nop
or
or
add
and
int3
xor
sbbb
andl
sub
adc
jo
lock
jle
add
testb
testb
push
and
adc
test
or
sbb
gs
inc
std
mov
ret
in
clc
imul
sbb
aam
arpl
and
jmp
dec
je
andl
cmp
imul
xchg
xchg
sbb
dec
sarl
gs
arpl
inc
push
mov
add
inc
sbb
sbb
or
dec
mov
fsubr
loop
mov
adc
nop
pop
sbb
adc
jnp
xchg
xchg
jp
xor
inc
sar
dec
cmp
test
add
outsb
mov
jecxz
jno
mov
insl
jmp
dec
sti
jge
or
dec
push
xor
loop
repz
xor
roll
outsl
int
xchg
iret
gs
lods
mov
mov
jnp
or
inc
cld
pop
jno
mov
xchg
xor
inc
aad
pop
pop
pop
or
push
pop
lods
test
iret
or
add
repnz
in
cmpsb
subl
roll
xchg
push
jp
add
jnp
movl
mov
mov
cs
push
sub
inc
popf
lcall
dec
bound
in
in
adc
mov
pop
push
pop
inc
mov
icebp
mov
pop
jp
dec
pushf
inc
into
mov
rorl
icebp
repnz
adc
inc
mov
cmp
leave
xor
push
or
leave
mov
fs
xor
mov
shlb
rcrl
repnz
lret
stc
mov
fsin
dec
movsb
mov
loop
pop
adc
xor
xchg
push
cli
pusha
movsl
mov
setg
jns
ds
jno
lret
test
mov
jle
mov
inc
imull
jl
inc
popf
xlat
cmp
test
xor
and
add
test
cmpsb
das
jmp
jo
xchg
fcmovnu
sub
jae
cs
pushf
stos
repz
pop
or
adc
add
mov
pop
dec
test
mov
cmp
push
jecxz
scas
and
and
movsl
mov
fstl
les
or
cmp
jns
insb
inc
shrb
pusha
xchg
cli
addl
cltd
out
ljmp
sbbl
out
scas
ret
inc
sbb
lods
add
fldcw
clc
mov
addl
fstpt
xchg
repz
xchg
dec
xchg
and
xor
jae
mov
fsubrl
inc
push
add
dec
mov
cmp
pop
mov
test
sahf
pop
les
fistpll
push
xor
lea
fcomps
sbb
scas
fstps
out
repnz
fmulp
xchg
cli
mov
fstps
cmp
lds
lds
jo
dec
lret
push
cs
out
mov
dec
aad
pop
push
fstpl
rol
and
fistpl
xchg
xlat
push
mov
mov
clc
and
mov
push
int
ljmp
xchg
mov
sbb
inc
rcl
loopne
lods
data16
mov
xchg
scas
aas
adc
out
clc
push
xchg
aaa
mov
gs
xor
jle
jae
sar
dec
lods
stos
bound
inc
je
pop
sbb
add
or
cmpsl
mov
jp
rcr
mov
test
leave
sub
cmp
add
lods
ret
test
fsubrl
and
pop
cltd
loope
ficomps
test
push
int3
push
xor
xchg
cwtl
outsl
std
stc
es
xor
fcmovnbe
and
imul
ljmp
mov
repz
xor
sub
pop
sub
and
aad
cmp
adcl
sahf
movsl
dec
imul
inc
mov
call
cmpsb
std
sarb
ret
xor
sbb
pusha
fsubrl
mov
sahf
jb
mov
cmpsl
add
call
inc
and
ret
adcl
in
mov
cmp
mov
push
stc
push
addb
inc
mov
sub
sti
add
pop
and
out
stc
xor
dec
dec
cmp
dec
push
add
pop
add
pop
adc
call
flds
jmp
xchg
sub
dec
sbb
jne
cmp
dec
jmp
jbe
push
data16
popa
daa
int3
xor
icebp
push
mov
add
cmp
test
pop
je
jg
jge
dec
mov
in
sar
jmp
inc
or
dec
add
and
and
xchg
jbe
insl
push
scas
and
jns
cmp
jno
test
lods
test
adc
ret
add
movsbl
sbb
xor
add
xchg
and
or
lea
sahf
mov
lcall
pop
das
sbb
idivb
clc
jg
push
push
cltd
mov
jmp
inc
cmp
fnstcw
push
sub
mov
adc
cli
mov
dec
int
ja
arpl
fidivs
inc
movsb
push
and
divb
rclb
inc
scas
mov
cmp
push
pop
xchg
cmp
fstpl
xchg
pop
push
addr16
push
test
sbb
or
adc
out
or
push
mov
jp
scas
mov
xchg
add
imul
int
mov
or
call
sub
loopne
scas
fists
loopne
out
jnp
inc
imul
popf
fldenv
loope
push
xchg
dec
insl
out
dec
jecxz
pop
lahf
xor
in
xchg
repz
cs
cs
dec
out
js
pushf
test
fldcw
xchg
lret
jnp
les
data16
and
hlt
push
sti
pop
and
or
fsubrl
lods
fwait
test
jo
scas
pop
cmc
cltd
sbb
ljmp
fdiv
aaa
int
sahf
inc
je
std
push
mov
inc
mov
xchg
xchg
adc
movsb
xchg
cmpl
xor
mov
loope
push
icebp
pop
xchg
mov
pop
pop
add
sbbb
ret
movsl
lahf
data16
dec
je
or
xchg
roll
aad
cmp
and
arpl
ja
push
mov
scas
in
std
push
fldenv
out
leave
sub
mov
xor
gs
fcompl
stos
mov
in
roll
mov
sbb
mov
int
dec
adc
mov
mov
sub
test
lods
lods
ret
or
push
loopne
fwait
sbb
scas
test
ljmp
dec
cmp
shl
inc
inc
mov
adc
pop
pop
fchs
and
test
ficoms
sub
lea
dec
jno
pop
jo
aad
iret
cli
mov
es
xchg
cmp
sub
dec
in
cld
inc
in
pop
ror
test
cwtl
outsb
jecxz
outsl
mov
mov
mov
mov
jecxz
les
xorb
test
or
push
push
les
push
call
jbe
jbe,pn
or
stc
iret
mov
cs
int3
popf
in
fistl
mov
dec
lods
jmp
xchg
jnp
mov
inc
test
sbb
lret
cmp
cltd
cmp
hlt
fsts
daa
jge
push
pop
mov
popa
jns
ss
lock
mov
push
jb
mov
add
adc
mov
fisubl
mov
cwtl
addr16
adc
ds
or
and
push
cwtl
dec
xlat
addps
cmp
bound
fisubrl
gs
mov
cmpsb
out
bound
out
out
hlt
dec
into
sbb
xlat
inc
dec
or
pop
xorl
es
cwtl
lods
ds
xchg
pop
xor
push
or
pop
fwait
xor
jno
adc
and
in
inc
sahf
xchg
add
lret
adc
lock
mov
out
mov
lods
insl
lcall
pusha
test
cmc
mov
jl
test
xor
test
fwait
cmpsl
and
sbb
pop
push
fnstcw
out
cmp
xor
adc
mov
mov
cmc
test
sub
xchg
sbb
popf
jb
mov
or
pop
mov
and
jle
jno
ja
and
jnp
rcrl
add
pop
out
dec
jb
jne
mov
push
lret
popa
lods
lods
and
push
rep
sbb
or
dec
add
add
xor
adc
lock
cltd
sbbl
cld
les
dec
mov
mov
int
jno
pop
pop
in
mov
inc
lret
jb
mov
in
lock
lcall
loop
cmp
mov
jp
hlt
sbb
pop
mov
mov
loop
pop
loop,pn
ja
lahf
in
js
and
test
cli
add
or
call
adc
pop
cmp
jns
cmpsb
pop
mov
mov
arpl
das
xchg
sub
jle
sub
push
dec
bnd
push
mov
call
popf
clc
std
xor
std
lcall
mov
pusha
mov
data16
fldenv
inc
and
push
ljmp
jl
int3
test
mov
in
lret
xor
jmp
inc
mov
xchg
pushl
sarl
ret
outsb
mov
pop
out
call
nop
mov
xor
push
sahf
sarl
mov
inc
adc
adc
and
pop
xor
jbe
imul
cmp
jmp
pushf
test
int
pop
push
fnstcw
or
incb
sub
adc
js
dec
xchg
outsl
mov
or
inc
add
inc
fcom
mov
loopne
xchg
les
nop
popa
sti
jl
imul
gs
xchg
and
mov
addr16
mov
push
mov
xchg
jns
pop
or
movsb
je
jge
mov
flds
sbb
jae
icebp
aad
or
into
xor
push
cmp
pop
nop
and
mov
jle
inc
cmpsl
cmp
loop
xchg
lods
mov
cmpb
dec
loopne
clc
flds
mov
inc
sahf
mov
sbb
jb
in
xchg
inc
sub
xchg
jo
mov
inc
dec
adc
jp
mov
mov
stos
jge
in
mov
mov
inc
mov
nop
imul
sbb
cmp
shrl
cmp
lock
push
inc
ss
push
test
iret
and
loope
orb
cmp
adc
add
test
mov
fidivrl
popa
jbe
mov
pusha
sbb
mov
sbb
popf
fsubl
fst
jge
mov
or
fistl
sbb
shr
inc
jp
enter
leave
popa
icebp
loopne
cmpsb
fwait
cmp
push
add
dec
icebp
repnz
sahf
cmpsb
cmp
lds
loop
sbb
aad
mov
in
push
fxch
fsubrl
mov
xlat
je
fs
push
pop
lds
loopne
xchg
cmp
cmpsb
std
sahf
jecxz
mov
push
push
cmp
xchg
xchg
int
mov
fldenv
adc
or
pop
or
jnp
mov
mov
repnz
push
pop
aaa
mov
add
mov
xchg
lods
movsl
test
cmp
push
popa
fs
push
lods
inc
push
adcb
js
in
and
and
pop
jbe
lds
into
daa
scas
pop
mov
lds
lods
outsl
fnstsw
flds
hlt
sub
out
popf
loop
jge
lods
dec
lret
test
pop
cmp
nop
mov
in
xchg
fldcw
movsl
repnz
mov
or
add
stc
loopne
pop
sub
nop
mov
or
movsb
outsl
pop
mov
pop
int
and
or
es
pop
fisttps
cs
js
cs
ss
and
lock
adc
insl
inc
loopne
fcmovne
jle
xchg
adc
xchg
push
lods
xchg
jae
jae
aad
add
fwait
ss
adc
push
push
jns
mov
scas
popa
mov
xchg
sbb
in
mov
cld
mov
sbb
andb
loop
es
in
pop
daa
or
dec
pop
stc
inc
test
or
ss
test
icebp
test
pushf
pop
rcpps
cmpsb
sub
dec
jnp
xor
arpl
jb
fisubrs
pop
test
mov
cmpsb
outsb
stos
mov
xchg
or
dec
xor
jns
mov
pop
adc
push
aad
jo
pop
adc
aas
por
jp
jbe
mov
pop
mov
push
cltd
push
add
xchg
push
push
fisubrs
push
sub
xchg
repz
punpckhdq
xchg
aam
xor
cmp
mov
cmp
mov
fldenv
ss
dec
ret
adc
jne
cmc
pop
mov
icebp
jb
and
lret
xlat
adc
movsb
hlt
ljmp
aaa
add
mov
xchg
mul
mov
in
popa
in
lods
cmpsl
jp
dec
mov
xor
mov
mov
imul
sbb
cmpsl
ss
dec
fs
mov
iret
insb
and
test
fsubrl
push
mov
bound
int
sbb
or
daa
test
sbb
push
dec
addr16
mov
sbb
sub
sub
gs
push
cltd
sahf
mov
lods
fildll
rolb
mov
in
rcrb
adc
outsb
mov
jmp
rclb
leave
cmp
jnp
scas
sbb
icebp
test
pusha
int3
out
push
sbb
mov
and
mov
js
xor
push
inc
push
insl
sar
fwait
mov
cltd
dec
inc
cld
shll
cmpsb
adc
or
and
sbb
sub
in
mov
push
mov
scas
test
cmp
lock
mov
sti
or
in
inc
test
xchg
push
jmp
adc
mov
pusha
cmpb
or
sar
das
push
xchg
xor
mov
iret
dec
jmp
mov
test
call
in
push
xchg
mov
or
cmp
lods
int3
inc
call
cmp
roll
jb
movsl
pop
pop
out
mov
pop
pushf
popf
and
pusha
cltd
aam
test
loope
mov
mov
fcmovb
nop
mov
sbb
mov
xor
fists
pop
pop
mov
sbb
ds
lea
mov
lods
cmpsb
push
idivl
or
sub
roll
aam
insl
aad
daa
push
inc
mov
sti
mulb
sub
call
mov
sub
jne
pushf
test
or
fbstp
mov
scas
add
aam
lods
sub
push
jmp
repnz
pusha
jbe
dec
cs
or
test
scas
negb
int3
xlat
push
aaa
adc
out
je
jbe
enter
movsb
scas
test
sbb
imul
inc
in
jae
ljmp
in
out
lods
and
or
mov
lret
push
ss
lods
add
mov
stos
sbb
mov
mov
cld
ret
adc
pop
xchg
jb
push
mov
fwait
inc
dec
pop
mov
in
inc
fldt
aad
mov
imul
decb
sbb
mov
js
dec
mov
int
ret
add
call
mov
xor
out
cmpsl
pop
or
popf
es
lcall
cmp
dec
daa
fdivr
xchg
aam
mov
mov
or
cmp
loopne
inc
out
xchg
mov
add
push
daa
in
call
xor
inc
pop
lods
ljmp
cmpb
gs
xchg
mov
mov
cmp
mov
push
pop
add
push
add
cmpsl
or
std
mov
cmp
push
fldenv
push
test
int
ljmp
test
dec
inc
jnp
mov
jns
out
adc
mov
mov
dec
hlt
fnstenv
mov
mov
push
int
idivl
out
jns
das
movsb
jge
hlt
test
xchg
xor
out
xor
mov
xchg
jnp
dec
bound
fwait
add
xor
orl
sub
aad
push
xor
inc
gs
mov
mov
push
xchg
sahf
sarb
sbb
cwtl
int3
inc
in
push
mov
push
xor
xchg
sahf
push
mov
rcrb
roll
mov
sub
pop
sbb
mov
repz
adc
scas
sub
data16
sti
ss
inc
testb
popf
pop
loop
jl
mov
addr16
add
sub
mov
cltd
ret
test
notb
xchg
negl
adc
sbb
mov
ret
cmpsb
xchg
aad
mov
and
xor
jns
sub
out
ja
int
and
faddl
bound
lea
xor
std
cmp
jg
push
push
xchg
lods
test
mov
lods
push
add
popa
fbstp
insb
gs
pusha
movsb
lds
les
xchg
or
xchg
std
mov
xor
cmc
xchg
xor
daa
out
stos
add
repz
adc
dec
imul
fcoml
and
out
xchg
mov
data16
fidivrs
add
fwait
movsl
fisubs
jb
scas
movl
fldcw
jo
popa
lods
cltd
pop
inc
sub
fwait
adc
xchg
test
std
fnstenv
push
inc
leave
scas
mov
data16
sbb
clc
add
push
and
fsubs
add
cmp
and
std
loope
into
fcoms
xor
cmp
movsl
xchg
cmp
lahf
jno
addr16
cltd
push
lds
repz
stos
xor
addr16
cmc
mov
test
scas
or
sbb
lds
xchg
pop
fisubrl
aam
jp
addr16
cli
or
data16
psllq
sbb
sub
inc
inc
test
and
or
roll
pop
push
rolb
jp
clc
sbb
int
xor
cmp
jns
push
mov
sbb
mov
movsb
jb
inc
cli
sbb
jno
loope
pop
mov
mov
std
paddusw
adc
inc
dec
aad
movsb
cmc
xchg
pushf
dec
sbb
lahf
xchg
ror
push
mov
rorl
sub
loope
pop
sbb
lahf
or
mov
cmp
adc
adc
fsubs
sub
pushf
or
cmp
fxch
mov
mov
push
call
les
movsb
mov
jns
push
ror
in
ss
xchg
sbbl
outsb
cmpsl
and
push
mov
fidivrs
sbb
add
adc
movsl
repz
sbbb
bnd
adc
dec
scas
jae
mov
dec
or
mov
sbbb
add
mov
fwait
or
pop
push
sbb
mov
sub
gs
repnz
xchg
dec
aam
adc
add
orl
je
and
sti
sub
and
cmp
push
hlt
mov
std
and
mov
mov
icebp
adc
and
fdivr
outsl
cli
mov
addb
es
enter
push
roll
aaa
inc
ret
out
pushf
mov
imul
push
sub
or
aad
rcr
in
mov
int
movsb
mov
sbb
push
loopne
lock
add
test
mov
jb
repnz
scas
mov
sub
mov
xor
cmpsb
fsubl
mov
scas
jge
fnsave
or
mov
aaa
pop
iret
push
fstl
adc
sub
xchg
mov
shlb
mov
imul
test
jge
push
inc
popf
sbb
lods
fwait
push
and
mov
adc
daa
push
pop
xchg
cmp
sub
push
pusha
ja
dec
notb
iret
aam
mov
andb
dec
outsl
lods
mov
mov
pop
mov
add
shrl
loopne
inc
outsl
adc
ss
arpl
sbb
cmp
adc
inc
pop
jno
mov
jl
adc
stos
aas
jae
movsl
push
movsb
test
xor
out
dec
stc
adc
lods
sbb
mov
push
lret
mov
mov
adc
orb
cmp
das
push
push
in
aam
pushf
and
test
mov
pop
movsb
int
cs
adc
add
scas
mov
cmp
push
push
dec
push
mov
pop
xchg
xor
ret
in
fldcw
popa
cmp
sbb
lods
fsubs
and
and
push
dec
sub
dec
icebp
xchg
xor
push
and
test
fcom
xor
imul
jecxz
mov
out
xchg
sub
xor
orl
gs
or
push
fstpl
unpckhps
hlt
mov
xlat
inc
and
ja
test
sbb
loop
jl
fcomip
test
popa
fldenv
or
xor
jne
jo
cmp
jge
fs
adc
test
mov
mov
pop
mov
int
sbb
mov
jae
add
faddl
mov
lahf
jg
mov
mov
sar
adc
int
xchg
lea
and
xchg
fnsave
test
ret
cmp
into
outsb
and
xchg
fisubrl
int
fists
pop
test
push
les
addb
fiaddl
repz
or
aaa
mov
cmp
fidivrs
movsl
push
test
scas
mov
jae
out
in
das
xchg
add
dec
outsb
xchg
ficomps
xor
jle
jmp
in
addr16
pop
push
int
sahf
shll
mov
mov
ljmp
dec
cmp
dec
or
fnsave
fstpt
sti
sub
and
dec
xor
insb
mov
mov
daa
mov
mov
adc
addr16
int
int
ljmp
mov
loop
jne
int3
fdiv
imull
mov
mov
xchg
enter
fsubl
adc
movsl
out
push
ss
dec
not
push
mov
test
aaa
pop
in
sbb
jnp
dec
ss
jo
adcb
sub
clc
leave
xchg
jae
or
lcall
in
fadds
aam
cmpsb
and
ret
in
jge
andl
inc
inc
inc
inc
xchg
or
inc
cli
sub
mov
jge
jno
test
insb
sub
pop
adc
mov
ss
jecxz
outsl
mov
loop
jle
rcrb
arpl
ljmp
ja
rol
mov
mov
icebp
dec
push
jg
outsb
mov
lretw
jns
pushf
push
mov
in
andl
pusha
in
add
xchg
sahf
subb
xchg
in
test
ss
int3
test
leave
mov
xchg
dec
mov
adc
mov
insb
js
lock
mov
adc
dec
cwtl
in
cmc
dec
sub
pop
rorl
mov
icebp
pop
mov
punpckldq
inc
loope
dec
mov
shrb
insl
hlt
loopne
movsb
cmp
fstpt
into
inc
mov
pop
sahf
xchg
in
push
jg
push
or
cmpsl
pushf
xor
cmp
js
pop
jg
sti
in
mov
out
inc
daa
lods
xchg
data16
xor
sub
gs
cmp
xor
movsb
test
stc
cmpsb
scas
cmpsl
clc
xchg
pusha
fstps
cld
out
in
popf
xchg
push
in
or
cmc
jmp
fisubrl
sub
clc
mov
sbb
pop
mov
fwait
push
jae
sti
test
push
cli
shl
and
sbb
arpl
push
mov
cmp
inc
jbe
cmpsb
subl
into
das
arpl
cli
outsl
sbb
adc
lahf
cli
mov
test
movsl
es
cltd
lret
jmp
out
popf
adc
or
add
mov
popf
mov
xlat
ja
jle
pop
push
sbb
sub
movsb
es
test
inc
cmp
pop
mov
fnstenv
cwtl
cld
movsl
nop
insb
cmc
test
test
xchg
into
int
xlat
push
shlb
adc
and
scas
sub
in
stos
dec
pop
mov
gs
inc
mov
xchg
ds
cmpsb
sub
jns
push
xchg
mov
shr
mov
jae
mov
lods
rorb
int
adc
mov
mov
shlb
into
fld
dec
push
mov
es
mov
clc
cmp
xchg
xlat
dec
mov
int
lods
loope
loop
subb
fstps
inc
ret
popa
clc
and
sub
pop
cmp
sti
fldenv
aad
scas
and
push
cmp
xor
cmpsl
dec
xor
jne
stc
inc
fimull
push
xor
inc
cmp
fstpl
ficomps
test
idivl
jae
mov
lods
int3
and
stos
mov
or
jg
popf
xor
mov
shlb
mov
add
xlat
stc
pop
stgi
cmpsl
jne
push
fcompl
push
lcall
inc
xchg
ss
sub
jno
aam
cmpsl
cmp
fisubrs
lods
jns
dec
and
fdivl
int3
xor
ss
xchg
movsl
push
test
outsl
adc
dec
test
pushf
pop
add
fldl2e
dec
cmpsl
insb
out
adc
add
jb
jl
hlt
mov
pop
xor
leave
xchg
pop
shr
dec
mov
sub
cmp
and
jp
roll
negb
pop
pushf
das
rcr
dec
xchg
lret
sbb
ret
fnstcw
adc
ja
ficomps
in
sbb
adc
xchg
inc
bound
cmpsb
jae
pop
xchg
xchg
sahf
and
pop
loope
fnstcw
call
inc
cmpsb
imul
xor
pusha
test
lock
cli
stos
inc
pop
pop
xchg
and
jnp
call
cmpsb
mov
fstps
or
mov
test
outsl
mov
scas
push
sets
mov
cmp
jmp
div
and
xchg
mov
cmc
mov
loope
adc
movsl
jg
add
and
fnstcw
push
inc
stc
mov
sbb
into
cwtl
stc
pop
lods
dec
push
mov
rcrb
int
fcoml
sahf
mov
mov
ja
lods
and
popf
mov
orl
mov
add
fisubs
and
imul
aam
xor
and
jl
shll
popa
xor
in
xchg
lahf
out
push
mov
scas
insl
sbbb
dec
int3
cmp
adc
or
jecxz
xchg
vcmpsd
sbb
dec
je
popa
and
lcall
sbb
or
add
adc
and
dec
push
cmpsl
scas
loopne
mov
dec
fldcw
or
jp
int
loopne
jmp
sub
inc
imul
imul
pop
ljmp
pop
xchg
in
stos
add
dec
addr16
mov
xchg
or
stos
mov
jnp
xorl
fabs
lahf
mov
jns
into
sbb
jnp
sbb
pusha
dec
xor
out
cld
xchg
and
jno
test
or
mov
push
out
jl
mov
push
xor
jge
dec
shrb
lahf
mov
stos
das
popl
icebp
inc
jo
cmc
loopne
jge
fimull
leave
and
push
sbb
daa
mov
push
getsec
pop
sbb
adc
push
pop
ljmp
lret
insb
cli
jle
add
adc
mov
test
rcl
in
xchg
xorb
add
xchg
aad
or
and
jno
push
scas
or
mov
insb
dec
popf
in
pop
cs
cmp
jp
or
out
xchg
mov
xchg
mov
mov
mov
je
and
pop
popf
cmp
dec
push
dec
mov
cmpsl
xchg
jns
pop
push
push
push
push
jmp
int
and
pop
mov
dec
dec
or
test
fnstenv
cmp
sub
cmp
movsl
shl
xor
pop
push
and
insb
in
lret
pop
cmp
fcoml
scas
pop
repnz
sub
dec
int
popa
dec
into
es
sub
jle
mov
jmp
xor
lret
movsb
std
and
xchg
stos
mov
jmp
mov
xor
dec
fistpl
xchg
repz
and
xor
jp
dec
test
dec
in
dec
jb
sub
jne
and
sub
scas
hlt
inc
test
push
shrl
inc
fcompl
push
jg
stc
sbb
mov
lods
push
test
dec
hlt
imul
jmp
sub
mov
iret
test
inc
popf
into
cmp
sbb
xchg
in
mov
jae
repnz
flds
lods
dec
test
dec
jns
out
repz
lods
jns
xchg
cmc
lock
pusha
mov
lods
out
clc
inc
or
in
fcmovnbe
mov
cld
jecxz
stos
adc
add
mov
push
nop
or
jle
lcall
and
sbb
nop
xor
mov
insl
mov
sbb
push
mov
pop
sbb
hlt
mov
test
xor
sbb
leave
into
add
mov
cmp
mov
sub
adc
cmpsb
lcall
dec
enter
gs
and
push
push
mov
lods
int
mov
and
into
or
into
push
xchg
in
dec
in
pop
and
gs
mov
cmp
fisubs
push
xor
push
mov
sahf
in
inc
imul
xor
xor
es
shrl
mov
or
das
sarl
sbb
out
adc
out
jnp
sahf
inc
out
dec
push
lahf
decb
adc
loopne
inc
xchg
jmp
fldcw
sbb
mov
test
faddl
das
push
movsb
jo
fiaddl
mov
add
inc
push
mov
and
mov
xchg
ficoms
inc
lock
jno
push
xchg
int3
outsl
inc
jge
fisubl
insl
cld
and
in
fsts
lods
je
das
test
push
cli
iret
cmp
decb
mov
push
jmp
sbb
movsl
dec
imul
sbb
icebp
dec
loopne
xchg
cmp
push
aam
add
idivb
jo
jle
push
stc
mov
inc
iret
clc
push
sub
inc
lods
xchg
aad
and
mov
movsb
js
es
push
push
lods
mov
sbb
push
gs
popa
sub
enter
cmp
and
mov
sarl
jmp
xchg
add
cmp
jo
pop
jae
push
cs
iret
sahf
mov
lcall
push
mov
jns
xor
pop
sbb
arpl
jl
add
test
xchg
sbb
mov
loopne
mov
out
jecxz
daa
jb
xchg
and
push
test
xchg
out
andl
inc
int3
xchg
add
xchg
scas
inc
sbb
sub
lret
bnd
and
std
popf
fsts
pop
dec
ljmp
xchg
mov
cmp
xchg
jle
mov
daa
lock
aas
xor
int
cmpsb
jne
std
popf
fidivrs
std
flds
dec
out
aaa
inc
addr16
int3
outsb
mov
xchg
cmc
in
cmp
add
aaa
out
sbb
ja
js
in
in
jge,pn
add
jl
sarl
test
xor
popf
out
sbb
pop
adc
cltd
loop
daa
jbe
outsb
mov
rorb
cmpsb
adc
roll
mov
sbb
std
push
mov
fsts
nop
mov
jecxz
lcall
inc
data16
pop
fbstp
ret
mov
sub
nop
inc
push
jb
inc
mov
in
stos
jae
out
es
sbbl
sahf
movsb
mov
jp
jbe
mov
imul
loope
push
in
cs
bound
lahf
add
xchg
push
lahf
jecxz
gs
out
dec
in
sahf
jmp
mov
inc
jmp
les
mov
call
neg
movsb
mov
cld
stc
or
fildll
cmc
sub
jl
gs
mov
divl
int
and
cmpsb
push
fldl
int
adc
push
std
lods
mov
sub
push
icebp
push
call
add
sbb
and
sti
popf
repnz
pusha
mov
sub
ret
cmp
fidivrl
pushf
flds
aad
sahf
daa
bnd
mov
and
mov
test
scas
ljmp
mov
push
mov
lds
test
js
mov
into
jle
in
cmp
jp
sti
sbb
fisubs
adc
aad
fwait
ret
or
aam
mov
jbe
stos
les
outsb
es
mov
shl
ss
and
faddl
das
in
pop
xchg
lahf
sbb
cmpsb
fistpll
subb
arpl
mov
mov
xor
inc
pushl
repz
push
clc
out
faddl
add
mov
into
pop
or
pop
xchg
pusha
fwait
ds
mov
daa
pop
cmp
cli
popa
xchg
std
popf
dec
lods
and
dec
adc
repz
aad
cmp
addr16
lods
push
pop
and
cmp
daa
pmulhw
stc
das
jge
add
aad
jbe
sub
fsubl
push
mov
pop
mov
addr16
push
mulb
in
fldenv
ss
cwtl
jno
pushf
push
mov
int
mov
mov
lods
call
inc
outsl
sub
cs
mov
jne
mov
dec
sub
pop
aad
mov
cmp
dec
stos
xchg
cmp
pop
lods
scas
lods
in
xchg
rcll
lahf
sbb
fstpl
dec
mov
subb
fsqrt
out
push
movsb
mov
rcr
fnstsw
jecxz
and
fidivrl
je
out
test
and
jno
pop
sahf
int3
mov
into
out
jae
leave
add
jnp
pop
or
std
dec
std
ja
aam
sub
push
push
and
cmp
imul
push
cltd
enter
add
int
test
pop
cmp
mov
push
mov
sbb
inc
mov
cmpb
clc
xchg
adc
dec
inc
push
adc
mov
in
cltd
aad
imul
jp
mov
pop
sbb
adc
loop
stc
inc
fisubl
push
loopne
es
pop
mov
adc
in
sub
mov
inc
data16
ret
repnz
gs
mov
sub
jmp
ficomps
pop
pop
sub
mov
and
mov
hlt
lds
hlt
push
xchg
push
fisubl
add
stos
and
fld
mov
das
jp
mov
xor
and
cmp
mov
xchg
out
ja
je
cmpsb
lcall
pop
ret
add
loop
mov
jae
xchg
or
mov
jle
call
mov
cmp
cld
and
jae
andl
mov
out
test
enter
stos
pusha
push
pop
push
out
js
ficoms
mov
cmpsb
sub
or
je
out
jmp
ret
inc
arpl
test
dec
dec
mov
outsl
pop
rclb
scas
push
sub
jno
loope
push
mov
mov
jnp
fnstsw
sub
or
dec
clc
adc
mov
testl
jle
lods
and
int3
dec
xor
lods
shll
xor
mov
and
xor
sahf
inc
sbb
cwtl
in
push
mov
inc
sarb
jge
xor
dec
aaa
in
or
sti
movsb
pop
adc
adc
pop
lods
xchg
pushf
push
lret
ret
mov
xor
mov
imul
aam
frstor
repz
outsb
xor
sub
dec
lods
insb
xorb
into
mov
push
mov
mov
std
sahf
inc
loop
xchg
fmuls
lret
sahf
inc
aaa
in
or
out
aas
cs
lods
movsl
rclb
mov
xor
pusha
repnz
xchg
mov
ja
mov
out
cltd
sub
pop
push
xor
jp
enter
or
aam
out
xchg
or
inc
sub
int
or
out
fcoml
and
lahf
add
in
inc
mov
xlat
or
pop
ret
cld
xor
fadds
xchg
or
addr16
mov
cli
jmp
push
or
fwait
sub
mov
outsb
and
jae
out
mov
fsubrl
in
sti
lret
inc
loopne
in
sub
jle
popf
mov
cmpsl
mov
mov
push
mov
xor
fsubs
mov
jo
daa
lds
and
mov
jb
cmpsl
rsqrtps
out
fdiv
inc
mov
pop
leave
dec
sbb
cmp
mov
jmp
pop
outsb
aam
std
jb
cmp
jnp
pop
mov
dec
fstpl
in
imul
cmp
mov
xor
pop
imul
cwtl
jno
xor
repz
or
negb
push
mov
cwtl
loopne
push
imul
adc
int
add
addr16
sahf
cmp
jmp
mov
mov
push
or
fadd
in
jns
xor
mov
movsb
fs
cmpsb
shll
shl
mov
lahf
adc
xchg
mov
in
push
test
js
mov
mov
pop
sbb
mov
js
scas
subb
dec
xchg
out
jns
and
rcrb
inc
jecxz
xchg
sbb
into
sbb
fwait
inc
add
cmp
mov
movsb
pop
xor
and
xor
hlt
jbe
dec
push
loope,pt
popa
out
mov
sub
movsl
or
pop
fld
adc
adc
ds
jl
add
icebp
test
subl
add
std
or
inc
fidivs
dec
dec
in
sub
orl
mov
sub
adc
push
es
lock
sbb
fsts
sub
jno
pop
cld
sub
xchg
jle
jno
loopne
and
xchg
xor
cmp
fstps
xchg
aad
ret
js
sbb
sbbb
aaa
stos
out
mov
jb
push
push
jge
mov
test
jb
push
mov
mov
enter
adc
aad
mov
shlb
mov
xchg
mov
mov
loopne
lret
or
shrl
aaa
mov
pop
mov
pop
pushf
shld
mov
dec
mov
pop
fnstenv
or
add
jb
and
adc
call
lret
add
push
loope
in
xchg
clc
or
test
les
movl
dec
mulb
fwait
add
out
repnz
aam
js
jecxz
and
daa
movsl
je
dec
sub
test
xchg
mov
out
jns
xor
mov
fldenv
outsb
push
loop
sbb
popa
std
mov
fcomps
ljmp
pop
sub
jae
or
xchg
xchg
push
mov
mov
cld
and
lret
mov
mov
mov
jle
gs
mov
ja
ja
into
andl
fwait
in
jnp
and
scas
jne
cwtl
cmp
incb
lock
push
jb
popf
add
jmp
lods
xor
sbb
out
lahf
lret
pop
rcr
dec
outsb
xor
mov
icebp
cmpsb
ljmp
cmpsl
lret
jns
cmp
aaa
jmp
cltd
lock
push
adc
jecxz
push
inc
lret
push
xchg
cmp
decl
add
in
xchg
das
rclb
test
fchs
rorb
out
stos
xchg
ret
push
lods
inc
nop
fstpl
adc
je
fnstcw
lea
iret
mov
sub
ja
push
sbb
jns
mov
clc
movsb
inc
sahf
cli
je
lock
loop
push
fiadds
cwtl
mov
mov
fsin
pop
cmp
sbb
add
test
hlt
dec
stos
ss
adc
dec
mov
or
mov
mov
dec
lahf
stc
bound
inc
test
lcall
sub
adc
fwait
loopne
das
lcall
cmp
mov
in
add
jns
dec
fiadds
adc
test
shr
xchg
mov
int
jbe
xchg
clc
es
inc
mov
mov
mov
fabs
xchg
cmp
or
sub
aaa
mov
jle
or
inc
movsl
inc
test
jl
and
int3
inc
adc
loopne
pop
fisubrs
int3
fs
cmp
cs
jge
std
mov
and
lret
mov
and
sbb
icebp
aam
addr16
sub
jmp
fiadds
fistpll
pop
inc
add
adc
daa
sbbl
push
adc
mov
adc
sub
jb
inc
jae
cs
jmp
pop
imul
sbb
adc
xor
hlt
xchg
in
xchg
call
mov
xchg
and
mov
lods
jo
cmp
jnp
add
sbb
movsl
mov
lock
incb
xor
ja
call
std
and
psubusb
cmp
cmpl
std
stc
mov
sbb
ja
dec
cwtl
push
add
pop
test
add
popf
inc
aaa
xlat
inc
sub
mov
repz
jb
adc
int3
ret
icebp
and
pop
ja
xchg
in
in
dec
das
mov
xchg
push
lret
popa
pop
push
sub
cmpsb
rcrl
into
hlt
lods
popa
aad
mov
mov
pop
enter
je
test
data16
push
fadds
out
test
shlb
lea
lods
and
dec
jbe
lods
fldt
xchg
negb
and
xor
pop
idiv
movsb
iret
lret
dec
cmp
sub
scas
cmp
pop
sub
cmp
push
dec
iret
scas
popl
xlat
mov
adc
cmpsb
mov
unpcklps
loope
sarb
cmp
outsb
cmp
ds
mov
mov
dec
mov
cld
call
sbb
pop
or
aad
aas
adc
mov
test
cli
fdivr
imul
jp
mov
mov
das
xchg
je
or
cmpsl
lcall
mov
iret
sbb
push
and
aad
pop
cmpsb
sbb
pop
movsb
test
pop
xchg
cmc
imul
lds
push
lods
xchg
adc
test
ja
adc
add
test
mov
pop
ret
push
lods
adc
push
sub
mov
or
jae
or
sahf
or
outsb
sbb
sub
mov
iret
adc
cmp
dec
mov
adc
sub
sbb
outsl
adc
sub
test
out
jbe
lret
xor
test
push
test
mov
pop
jb
adc
clc
mov
stos
xchg
jo
jg
insl
push
lock
xor
sar
repz
scas
vpminsw
outsb
mov
push
cmp
aam
mov
sbb
andl
cmpb
sbb
sub
add
cmp
pop
sahf
pop
dec
les
rorb
imul
ret
push
movsb
imulb
cmp
push
roll
xor
pop
or
and
popa
rcrl
add
lahf
test
lods
stos
movsb
pop
mov
cmpsl
pushf
dec
int3
loopne
insl
xchg
mov
xchg
faddl
outsl
sarl
test
dec
sub
int3
out
das
sub
sbb
enter
push
jecxz
idivb
xchg
das
repz
add
out
flds
xchg
fnstsw
jno
dec
mov
mov
ficomps
in
mov
sbb
fimull
adc
adc
fisttps
pop
cmp
sbb
add
jbe
adc
xchg
hlt
out
idivl
or
inc
jp
cmp
mov
insb
test
call
les
jno
mov
out
inc
lods
cmpsb
pushf
xchg
ret
setne
popf
into
sbb
jp
out
xchg
mov
imulb
ljmp
test
out
sbb
pop
movsb
pop
or
in
mov
push
dec
jge
mov
ficompl
mov
loopne
cmp
push
cmp
inc
sahf
out
push
pop
hlt
xchg
jno
fdivl
xor
in
mov
mov
lods
xor
icebp
mov
jns
frstor
cmp
loope
adc
mov
mov
mov
fcompp
mov
push
and
cmpsb
outsl
jns
mov
mov
aam
int
enter
xorb
ljmp
xchg
jle
mov
xchg
das
jmp
add
out
xchg
fwait
and
nop
fwait
push
mov
ja
leave
mov
add
int3
cmpsb
mov
fadds
ds
add
sbb
dec
cmp
mov
adc
pop
mov
jmp
cmc
frstor
add
stos
dec
mov
xchg
push
test
scas
pop
std
jmp
cmp
mov
sar
repnz
push
pop
aas
pushf
aad
dec
lea
jle
xor
popa
xor
shrb
out
sub
vpsrlw
std
in
pop
inc
das
imul
cmp
push
or
add
mov
pop
loope
aas
adc
out
add
adc
mov
sub
inc
sahf
jg
roll
shr
inc
push
mov
jns
es
xchg
xor
lret
les
inc
movsb
or
test
cmp
xor
dec
and
xchg
inc
sub
mov
jbe
lock
ja
cld
fwait
xor
pop
movsl
or
fldenv
dec
lcall
xchg
and
or
xchg
xor
and
jns
adc
fwait
inc
out
adc
xor
fsincos
jne
jmp
add
mov
cmpl
mov
imul
in
pusha
cmp
aad
adc
pop
xor
cmpsb
fldcw
xchg
nop
test
into
aam
pop
push
mov
test
sbb
scas
add
jle
jl
dec
jb
mov
in
or
xor
shll
mov
test
mov
xor
nop
mov
jno
outsl
mov
sbb
add
es
sbb
fiaddl
movsb
fbstp
jmp
aad
cmc
push
push
out
mov
xchg
jp
mov
out
divl
das
add
or
and
dec
fistl
fstpt
addr16
into
sbb
add
add
in
jno
lret
hlt
xchg
sbb
popf
lea
idivl
dec
mov
or
cld
and
mov
lods
mov
fldenv
fsubrl
call
lcall
xchg
inc
fldcw
popf
es
int3
stc
xchg
sbb
aad
mov
push
mov
pop
dec
pushf
dec
and
fwait
popf
mov
mov
jo
movsb
sbb
xchg
and
stc
push
inc
mov
lahf
push
aam
ret
shll
pop
add
mov
dec
inc
int
and
jp
fmulp
mov
jb
or
sbb
jle
sbb
jns
subb
mov
and
shlb
adc
jno
jne
int
test
out
je
cltd
and
mov
fwait
es
outsl
sbb
loopne
movsl
push
rcrb
rcr
xchg
ljmp
add
iret
in
add
aas
or
test
jmp
and
mov
popf
xor
mov
addb
out
xchg
cmpsl
stos
pop
out
dec
cld
addb
jge
stc
ja
fcompl
mov
inc
int3
dec
sahf
lock
mov
aam
cmp
fs
addr16
and
pusha
cltd
add
jle
cwtl
sbb
inc
scas
jp
test
mov
inc
xchg
xchg
adc
lret
out
les
inc
inc
cmpsw
sti
pushf
ret
pop
in
cmp
add
xchg
out
stos
cmp
xor
js
xchg
adc
pop
outsb
mov
lcall
add
or
in
mov
mov
push
mov
add
sbb
mov
mov
test
jle
pusha
add
mov
sahf
stc
push
xchg
jne
cmp
adc
or
cmc
or
and
and
add
or
in
test
mov
or
test
adc
pop
mov
pop
pop
ret
push
fwait
lods
add
rclb
mov
xchg
pop
dec
cltd
mov
cmpsl
inc
push
jne
fsubrl
cli
icebp
test
stc
mov
or
pop
in
lahf
mov
jae
pop
fs
sub
test
ljmp
mov
dec
into
lock
ds
loopne
cmp
cmp
inc
pop
fstps
hlt
int
mov
test
lret
jp
insb
das
in
add
adc
std
xor
cmpsl
je
sub
adc
pop
sbb
mov
gs
scas
dec
mov
push
cwtl
data16
imul
shl
repz
test
pop
mov
add
mov
fwait
mov
adc
cmp
rclb
pop
sub
jecxz
dec
mov
pop
loopne
pop
inc
cmpsl
mov
mov
lcall
sbb
push
in
in
push
insl
inc
adc
and
ljmp
adc
std
frstor
pusha
cld
xchg
add
fwait
mov
loop
loope
scas
inc
xor
inc
push
mov
cs
xchg
mov
mov
push
mov
pop
pushf
lret
push
scas
out
xor
jg
out
pop
in
fdivrl
xchg
sbb
stc
outsl
pop
mov
fldcw
sub
sub
addl
or
push
int
es
mov
hlt
mov
sahf
movsb
mov
sub
mov
xchg
mov
test
cmpsb
xchg
js
scas
std
pop
lock
fiadds
test
shrb
and
push
jmp
stc
jns
rcrb
hlt
inc
pop
mov
mov
popa
scas
addr16
int3
xchg
test
imul
pop
push
push
les
jae
dec
inc
and
mov
popa
out
pop
aas
popa
sbb
sub
lea
into
incb
sti
ret
popa
mov
mov
popa
inc
arpl
adc
pop
xor
out
pop
stos
outsl
adc
lods
push
jl
scas
add
iret
xchg
jno
imul
test
ficomps
fistl
xor
int3
sahf
mov
adc
pop
in
fistpll
hlt
sbb
inc
sti
orb
std
mov
xchg
mov
xchg
hlt
mov
pusha
inc
loopne
loope
cmp
sti
ficomps
pop
jns
cld
pop
dec
mov
fldcw
jnp
mov
lds
out
and
mov
cwtl
scas
subl
lock
lret
lret
insb
push
mov
hlt
mov
jo
stc
xor
mov
dec
push
pop
pop
pop
jecxz
js
pop
mov
dec
jo
mov
or
and
sbb
adc
push
inc
mov
pop
lret
dec
aaa
stc
mov
jp
sbb
sbb
loopne
shlb
hlt
fadds
sarb
int
ret
jmp
fisubrl
push
xchg
push
stos
addr16
push
orl
sbb
nop
dec
into
sbb
mov
movsl
or
std
push
xlat
std
mov
scas
cmpsb
mov
xor
mov
fldenv
push
gs
les
test
lods
xchg
aad
fnstenv
sbb
sub
aas
jo
xchg
jle
aaa
sti
fwait
mov
sbb
lret
test
loope
mov
shr
ficoms
fdivrs
test
mov
and
pop
jecxz
add
test
cmpsl
fldenv
sub
xchg
ret
shlb
and
mov
fnstsw
imul
adc
mov
sahf
js
pop
es
scas
or
pop
call
sbb
push
and
cmc
fstpt
jbe
sahf
roll
mov
out
mov
mov
clc
std
xor
movsb
xchg
fidivs
inc
fnsave
cmp
fstl
loope
cmc
daa
lret
sub
dec
mov
xchg
push
push
pop
pop
and
inc
jne
divl
xor
scas
data16
xchg
stc
lods
xchg
sub
pop
cltd
sbb
lods
push
int3
popf
xor
fsubrs
pop
and
push
mov
loope
and
inc
push
fisttpl
stos
hlt
add
fiaddl
aam
mov
and
aaa
pop
pushf
jae
mov
mov
decb
jle
fld
xchg
mov
insl
xchg
test
xor
int3
cltd
nop
pop
stos
fildll
mov
fs
or
lods
lds
imul
jecxz
sbb
pop
push
stos
push
je
xchg
shll
sub
xchg
xchg
cmp
dec
jp
sbb
sbb
mov
mov
mov
and
sarl
cmpsl
adc
cltd
jle
push
mov
mov
in
nop
add
dec
stc
arpl
nop
pop
inc
inc
dec
out
adc
jno
lock
mov
aaa
pop
mov
pop
or
aam
mov
sbb
dec
pop
push
faddl
addr16
mov
jle
test
fsubl
lcall
pop
dec
adc
xchg
sbbb
shll
notl
iret
mov
xchg
xor
ret
out
sub
jg
mov
xor
jecxz
daa
inc
lret
into
push
add
xchg
sub
mov
pop
push
stc
das
jo
mov
jb
lods
xor
mov
fsts
sarb
bound
mov
mov
lahf
add
pop
insb
cmp
int
jge
dec
out
mov
and
pushf
push
insl
jp
jae
xchg
out
fisubs
fs
xchg
cmp
mov
mov
inc
mov
mov
ficoml
rclb
sub
imul
loope
loopne
sbb
mov
and
lods
push
xchg
xorb
push
std
jno
xchg
mov
popf
fcmovnb
in
and
pop
fbld
shl
mov
imul
mov
xchg
adc
fidivrl
mov
pusha
int
push
or
popa
cmp
int
aaa
and
sbb
out
jb
sub
mov
fldenv
push
cmp
mov
xor
xchg
pop
sbb
fimuls
jg
pop
push
and
fsts
orb
push
mov
jle
jg
xchg
and
xchg
int3
or
out
lret
jns
gs
sbb
sub
rolb
push
or
jae
das
push
sahf
sub
rcl
leave
sahf
pop
pop
loope
scas
test
push
sbb
ss
mov
vaddsubpd
fs
out
repnz
add
mov
stos
test
stos
das
mov
jb
fmull
loop
scas
dec
out
adc
inc
sub
push
inc
mov
sub
pop
jno
and
push
xorl
mov
pop
gs
jae
outsb
clc
std
cli
stos
addr16
pusha
ds
inc
ss
cmpsb
test
cmp
and
sub
jno
cmp
xchg
fsub
fcmovnb
test
scas
fldenv
out
test
lods
mov
loope
std
mov
mov
ret
loope
push
dec
sbb
push
xchg
cmpb
lods
addr16
mov
or
pop
std
jnp
loopne
mov
andl
mov
rcrl
mov
scas
jl
mov
test
test
jo
insl
mov
inc
mov
push
aas
arpl
cmc
cltd
repnz
and
xor
imul
and
call
cmp
inc
repz
scas
jmp
into
jb
call
or
scas
dec
int
cwtl
nop
in
jnp
mov
mov
sbb
ss
cmpsb
and
fcomp
and
daa
jmp
sub
push
in
xor
stc
and
imul
dec
mov
aas
cmp
cmp
sbb
scas
adc
loop
in
jp
orl
gs
mov
mov
sbb
lods
in
xchg
and
pop
mov
js
cmpsl
test
int
icebp
test
inc
mov
ja
pop
xchg
scas
inc
sub
push
jno
movsl
dec
inc
sub
out
jo
push
dec
std
fcom
sub
aaa
lcall
in
test
or
popf
cmc
push
xor
movsl
and
out
adc
mov
mov
sbb
mov
mov
lahf
adc
lcall
lods
out
jb
mov
xchg
inc
mov
scas
jae
lea
adc
add
and
add
test
jge
adc
sbb
bound
aam
cmp
or
scas
fwait
int3
cmc
mov
arpl
dec
stos
jns
sarb
xchg
adc
lcall
jnp
pop
inc
mov
pop
ret
adc
push
out
adc
jp
adc
sbb
mov
xchg
sbb
fsubl
adc
sbb
mov
test
mov
adc
inc
fs
dec
sbb
sbb
popa
push
fisubrs
and
scas
and
pop
sahf
pop
cmp
movsb
add
sahf
jbe
mov
mov
inc
mov
inc
mov
pop
inc
push
push
xchg
adc
mov
jp
inc
mov
aas
movsl
or
xchg
out
test
data16
or
mov
mov
xchg
addr16
xor
jg
out
mov
das
push
adc
in
dec
dec
and
cmp
and
fidivrl
fnsave
pop
and
add
outsb
pop
jb
sbb
fidivrs
scas
lods
sub
and
mov
or
scas
mov
leave
movsl
lahf
ficoms
call
dec
dec
mov
inc
cwtl
sbb
repz
fsubl
loope
mov
push
sub
mov
idivb
ljmp
pop
sbb
add
nop
sub
push
inc
test
mov
xchg
push
sbb
lcall
leave
bnd
mov
flds
test
fcompl
mov
jb
test
orb
mov
mov
lret
jle
mov
sbb
dec
mov
aam
cmp
js
lret
sti
pushf
outsl
dec
rolb
cmpsl
adc
loope
cmp
lods
andl
rcll
test
addr16
aad
testl
orb
push
xor
push
cld
test
jo
lds
sbb
sahf
push
pop
inc
xorl
and
ss
sub
add
jp
xor
xchg
fistl
shlb
int3
mov
shrl
data16
mov
movsb
jge
test
and
sbb
adc
in
xor
sbb
inc
dec
cld
fstps
push
movsl
data16
rclb
inc
fwait
dec
or
adc
out
dec
sbb
mov
push
or
push
test
adc
jle
cmp
or
cmpsb
in
sub
mov
cmpsb
psubb
dec
aad
rcrl
mov
pop
std
mov
pop
and
and
icebp
loopne
jo
mov
test
into
push
jg
sub
inc
xlat
jl
int3
or
mov
sbb
sbb
test
test
mov
hlt
iret
loope
movb
lods
and
xlat
mov
call
dec
in
pop
mov
cmp
rolb
xchg
xor
mov
sbb
ds
repz
inc
fldcw
stc
pop
jo
lods
into
test
mov
mov
adc
repnz
les
shll
test
pop
dec
pusha
and
scas
xchg
fsts
and
adc
xor
adc
int3
ret
jno
and
out
test
mov
xchg
mov
ljmp
ss
adc
pop
inc
faddl
mov
xor
movsb
flds
js
lods
fs
das
lock
pop
sbb
xor
cld
or
cltd
push
lcall
mov
sbb
jmp
sub
fmul
add
pop
fwait
cwtl
test
in
pop
pop
es
cmp
lea
fwait
mov
dec
jle
add
sub
mov
add
sub
mov
xchg
cmpsb
mov
pop
test
negb
stc
add
jmp
loopne
jns
or
pop
add
mov
je
jae
adc
in
xor
pop
fstpl
fbld
adcl
inc
mov
xor
dec
cmp
movsb
addr16
cld
jno
aas
and
add
sub
and
pop
dec
cmc
add
bound
insl
icebp
mov
cli
sbb
xor
add
mov
addr16
out
ds
add
mov
pop
mov
mov
add
ljmp
fidivs
cmpsl
cmp
hlt
mov
inc
mov
and
mov
mulb
in
xor
xchg
xchg
xor
scas
addr16
pushf
pop
mov
mov
xchg
insb
ss
or
xchg
xlat
jg
dec
fwait
pushf
adc
std
adc
lods
pop
ss
out
sub
add
lret
xor
cmp
mull
add
push
push
cmp
jb
or
popf
imul
xchg
cltd
pop
sbb
mov
inc
lock
rcr
jmp
cmp
adc
flds
cmp
push
mov
cmp
cmp
push
sahf
sbbl
inc
test
adc
decb
cmpsl
inc
lcall
lahf
cmp
cmp
cmpsb
adc
mov
scas
push
daa
push
test
inc
flds
lret
jo
scas
test
scas
mov
scas
fisubs
mov
clc
imul
pop
mov
xchg
pop
xor
pop
sbb
sub
testb
gs
iret
mov
ljmp
mov
test
aad
movsl
mov
mov
daa
add
mov
test
xor
test
movsl
repz
sub
leave
inc
jnp
add
and
orl
inc
push
dec
test
stc
lock
aam
adc
sbb
gs
mov
mov
adc
fstp
and
or
les
cmp
and
lahf
pop
push
mov
mov
addb
aas
dec
cs
or
ficoms
add
lcall
mov
mov
aaa
cmp
fistl
cmp
loope
jnp
out
sarb
cmc
fnstcw
mov
and
jae
pop
sbb
ljmp
mov
out
adc
fxch
mov
jne
pusha
add
sub
pop
repnz
cmpsl
dec
cmpsb
arpl
dec
lcall
push
shrb
in
flds
inc
icebp
mov
pop
sbb
into
rcl
leave
mov
and
xor
pushf
test
iret
xchg
je
mov
test
cld
loop
push
xor
inc
push
fidivrs
adc
xchg
xor
xchg
cli
pop
pop
mov
pop
mov
add
stc
xor
imul
mov
add
in
das
jg
lcall
mov
bound
sti
push
push
jmp
sub
ja
mov
xchg
inc
mov
dec
or
ret
sub
cwtl
dec
sub
das
push
mov
insl
lahf
addr16
push
jle
xor
mov
in
fwait
push
fs
int3
cmp
jns
sub
mov
sbb
pop
xor
and
adc
popl
fsubrs
pop
scas
imul
xor
shlb
ficomps
out
add
lods
std
dec
mov
cmpb
fldenv
enter
int
fstpt
aaa
jno
int
xchg
out
lods
mov
nop
mov
fidivrl
ljmp
jnp
icebp
mov
imul
sar
fwait
mov
add
sbb
or
lret
or
pusha
cmpsb
js
addr16
repz
imul
xor
mov
test
fs
xchg
sarl
fdivrl
negl
add
cmp
test
xchg
test
add
cmp
mov
fidivs
std
rcl
jns
in
loopne
pop
inc
lret
lea
xor
addb
jecxz
fcoms
in
mov
mov
out
stc
cmp
mov
jns
shlb
jae
mov
cmpsl
repz
loope
jmp
push
mov
add
push
xchg
mov
mov
dec
xor
inc
mov
push
movsl
jnp
push
xor
adc
xor
mov
cmpb
and
sbb
out
xor
push
out
outsl
fidivrl
mov
jmp
fdiv
dec
fs
and
adc
xchg
or
lods
fidivl
inc
pop
push
pop
scas
pop
mov
ret
jmp
lods
adc
mov
pop
or
or
incb
push
lret
jg
push
mov
lret
cwtl
and
sub
stos
cs
mov
ret
jb
lods
mov
dec
pusha
daa
cmp
cmp
sarl
inc
push
clc
data16
lret
cmpsb
add
psllw
idivb
fsub
test
xchg
cmp
xchg
sti
pop
in
fisubrl
xor
repnz
out
pop
mov
test
jno
imul
mov
bnd
jnp
lds
aam
fiadds
data16
jb
jb
scas
shrl
and
stos
xchg
pushl
test
imul
fnstcw
icebp
mov
call
sbb
lds
add
in
inc
clc
or
addr16
xor
mov
aam
fnstcw
jae
scas
mov
inc
xchg
jnp
mov
fidivrs
pop
in
push
jle
ljmp
idivl
mov
jnp
sbb
inc
jno
pop
mov
mov
cmp
pop
mov
rcll
jge
cs
jge
das
push
leave
sub
adc
pop
sub
nop
xchg
sub
mov
rcrb
adc
xor
add
shr
mov
orl
xor
ja
inc
fistpll
leave
cwtl
pop
mov
sbb
repz
sarb
scas
dec
lods
mov
xor
mov
or
dec
pop
in
jp
cmp
push
adc
daa
mov
push
mov
paddusb
push
daa
jno
pop
inc
stc
imul
xor
mov
and
dec
outsl
insl
cwtl
mov
lds
inc
or
xchg
in
movsb
push
lods
pop
mov
je
adc
pusha
xchg
adc
inc
push
lret
pop
in
dec
mov
out
add
fisubrl
push
or
test
jae
xor
adc
mov
inc
icebp
xchg
fidivl
icebp
and
push
mov
adc
lods
xor
in
cltd
aaa
push
scas
xchg
push
shlb
xor
in
dec
pop
mov
jnp
fdivrs
in
pop
and
outsb
test
add
mov
out
mov
repz
inc
insb
inc
push
sahf
pop
or
test
cmp
jne
cmp
lahf
ss
in
or
inc
cmp
inc
mov
lea
pop
shlb
xor
subl
xor
rcll
dec
das
mov
test
mov
and
rcrb
dec
mov
cmp
push
sti
pop
inc
push
sub
xchg
testb
mov
addr16
inc
lods
insl
xor
std
xor
adc
adc
out
pop
xor
xchg
or
lods
jbe
dec
pop
jmp
pop
std
scas
ficompl
and
mov
hlt
jns
jge
int
xchg
sbb
inc
mov
fld1
sbb
out
cld
ret
sahf
lcall
cs
sahf
sbb
test
push
gs
outsl
imul
mov
icebp
cmp
sub
mov
cld
sub
arpl
mov
cld
imul
mov
sbb
fwait
ret
add
dec
and
test
mov
fsubrp
lock
xchg
cli
loopne
add
cli
cli
cmpsl
xchg
cld
dec
roll
cs
jae
test
push
or
imul
gs
test
sbb
repnz
lods
negl
loopne
pop
mov
push
push
mov
addr16
jge
mov
cwtl
std
insl
add
mov
fmull
stc
xor
fs
in
out
adc
push
mov
aaa
addr16
jo
xor
mov
fildl
scas
fs
in
push
ret
sahf
les
pop
test
icebp
adc
int3
cmp
sbb
outsb
and
aam
xchg
push
jns
sbb
sbb
push
mov
mov
push
sbb
fists
mov
mov
cmp
mov
gs
jno
adc
test
add
dec
out
lcall
push
fcmovnbe
outsb
and
movsb
fisubrl
lret
imul
pop
andl
cmpsl
mov
fmulp
or
mov
inc
les
dec
xlat
lcall
ljmp
sub
mov
push
aaa
adc
push
push
xchg
inc
pop
mov
call
add
and
sbb
les
sbb
repz
push
cli
sarb
jle
jnp
arpl
sub
sarl
call
enter
ljmp
mov
mov
mov
xchg
insl
adc
jnp
sub
sub
jbe
iret
sbb
mov
cs
push
lds
icebp
loope
xor
lcall
fstps
inc
int
das
mov
sub
xor
stos
fptan
data16
repnz
dec
testb
inc
idiv
in
std
mov
jno
mov
mov
xor
mov
adc
into
aas
mov
out
mov
jo
and
incl
cmc
leave
add
xchg
or
inc
push
jbe
movsb
and
pusha
push
jg
or
out
inc
push
and
insb
faddl
fnstcw
jge
xor
mov
fldenv
out
loopne
sahf
sbb
icebp
push
cld
icebp
call
arpl
jns
push
mov
inc
nop
fldlg2
add
cmp
fldt
int
mov
sub
lods
jno
aam
test
or
pop
jg
mov
lcall
sub
mov
jbe
imul
mov
std
scas
push
mov
mov
cmpsb
es
jae
test
pop
outsb
mov
ja
mov
outsl
in
std
test
int
mov
cmp
dec
xlat
and
int
scas
pop
inc
cmp
stc
mov
out
mov
mov
sti
ret
sub
or
sbb
mov
in
iret
xorl
cmp
jno
sahf
jb
cmpsb
fstps
xor
cmp
or
jns
daa
or
pop
fnsave
push
stc
loopne
or
mov
mov
xor
jmp
gs
push
out
adc
in
pop
pushf
rcl
sub
mov
sbb
faddl
cmpsb
test
mov
pop
sti
mov
cmp
mov
inc
jp
fnstenv
fwait
add
mov
sub
inc
icebp
into
loop
push
and
jne
add
loop
out
and
and
push
lods
pop
mov
mov
dec
push
loopne
sahf
les
imul
mov
mov
stos
push
push
movsb
stos
jle
sub
test
or
mov
in
pop
push
cld
pusha
xchg
sub
pop
stc
adcl
mov
cmp
jo
push
pop
cmp
int3
in
jno
fildl
out
jae
inc
lods
iret
jb
pop
or
decb
lods
adc
scas
mov
ret
iret
inc
and
jecxz
jle
flds
xchg
flds
cs
jle
lock
mov
sbb
pop
fwait
and
test
fldln2
jns
scas
outsb
adc
xchg
mov
xor
dec
call
fistps
into
sbb
out
das
inc
jnp
push
sub
xchg
sub
pop
fwait
add
mov
sub
pop
enter
pop
fldenv
cmp
xor
mov
mov
fldenv
roll
push
mov
movsl
gs
shll
mov
add
xchg
jmp
add
push
mov
push
sub
dec
jecxz
test
xchg
cmovg
mov
clc
cmp
insl
inc
popf
lods
outsb
adc
addb
popa
jns
pop
mov
test
sbb
mov
jmp
push
mov
jbe
test
fwait
int3
add
push
scas
inc
xor
or
cmp
mov
aad
and
cmp
jne
mov
mov
imul
faddl
xchg
rcll
mov
add
into
push
push
mov
test
mov
repnz
push
or
int
lahf
cmp
pop
lock
scas
xchg
xchg
cmp
xor
cmp
mov
mov
xlat
jns
lods
cmp
gs
hlt
adc
or
xchg
mov
lods
xchg
addr16
testb
xlat
jge
das
xchg
shll
mov
adc
lods
js
push
inc
push
daa
fst
flds
and
test
pop
negb
push
imul
movsl
jne
mov
mov
or
adc
mov
cmp
pop
mov
cmc
nop
xchg
cmpsb
enter
repz
fimuls
aad
int
jns
xchg
lret
lahf
mov
mov
flds
and
aam
out
hlt
ret
lahf
aas
in
pusha
addr16
stc
and
dec
aad
mulb
push
adc
sti
adc
cmp
fcompp
jecxz
cmpsb
sti
mov
cmp
xor
popf
sbb
andl
adc
sub
incl
jbe
jmp
pop
mov
insl
aad
push
das
mov
ss
sbb
jne
daa
movsl
test
pop
cmc
repz
xchg
inc
loop
cld
test
inc
sub
fdivs
push
ret
repz
pop
mov
scas
out
mov
sub
and
fsts
pop
adc
cmp
or
hlt
mov
mov
xchg
ret
fs
add
cld
push
xor
cmpsb
mov
push
dec
insb
nop
add
mov
flds
inc
stos
fwait
or
or
in
push
mov
lahf
jge
mov
cmp
ror
les
mov
sub
lock
iret
lods
sti
arpl
jne
aaa
int
add
imul
scas
out
fwait
and
cmp
jge
cmp
mov
int
flds
xorb
cs
insl
jmp
mov
les
ret
xchg
jnp
jae
das
lods
sbb
cmpsb
pop
shr
jmp
push
repz
xor
fcomp
insb
call
sbb
jle
sti
loop
imul
das
lock
subb
fadds
push
std
sub
out
and
cltd
xor
call
pop
inc
subb
int
subl
int3
or
std
je
xlat
bound
add
mov
mov
lahf
sbb
insb
inc
les
aas
cmp
test
movsl
jge
sub
insl
dec
xchg
inc
cmp
adc
roll
int
pop
lods
lcall
mov
icebp
enter
and
xchg
movsb
fimull
nop
sub
outsb
lods
inc
pop
insb
or
in
mov
cmp
movsl
mov
insb
push
add
jmp
push
loopne
xor
movsl
xchg
lods
inc
pop
dec
stc
hlt
in
and
mov
out
mov
popa
mov
scas
sbb
aas
mov
mov
outsb
mov
inc
jns
mov
lds
stc
cli
mov
push
sbb
mov
iret
je
in
sub
mov
lahf
xchg
out
or
lret
push
push
cltd
and
xchg
out
push
mov
xor
jg
mov
push
movsl
test
pop
test
cs
sub
pushf
dec
sbb
push
lcall
sub
cmpsl
mov
lods
sub
mov
sahf
loopne
ljmp
mov
cmp
shrl
mov
mov
ja
loop
enter
push
repnz
call
test
add
pop
in
movsl
inc
mov
inc
cmp
mov
sbb
test
aas
inc
jle
mov
mov
dec
clc
stc
cmp
add
jo
insb
les
out
sub
push
pop
cmpsw
rcrl
das
xchg
mov
mov
lret
std
lods
xchg
loopne
lods
mov
pop
adc
rol
or
sub
ss
stos
and
lods
cs
cltd
xor
imul
test
outsl
test
es
and
xchg
jge
xchg
std
ds
loope
test
inc
test
sub
inc
mov
dec
push
pop
pop
loopne
into
inc
mov
test
push
pop
xor
pop
pop
pop
popa
adc
loop
ss
adc
js
leave
imul
sub
flds
mov
jmp
jmp
imul
stos
in
adcl
daa
aas
daa
mov
cmp
scas
popf
mov
fcompl
xor
pop
mov
loopne
or
push
mov
sbb
fbstp
mov
fcompp
add
shrb
jp
sub
loope
adc
push
lret
mov
push
jp
jg
xor
jbe
jns,pn
xchg
xchg
dec
mov
int
pushf
adc
mov
mov
ljmp
sbb
jmp
lcall
xchg
push
in
mov
sub
xrelease
filds
inc
cmp
outsl
test
add
in
lds
push
test
pop
dec
insl
sub
cmp
adc
out
movsb
js
orb
jb
and
dec
xor
jp
inc
je
xchg
stos
std
jno
xor
jle
adcl
mov
mov
mov
out
push
fsubrp
sbb
jnp
lods
jae
test
stc
or
lret
mov
sbb
and
cmpsl
dec
and
aad
or
xor
loope
sti
adc
dec
inc
push
mov
push
xchg
push
cs
imul
test
cmc
push
into
push
or
and
mov
insb
mov
sub
cltd
loopne
inc
xchg
scas
out
sbb
mov
test
sbb
sahf
int3
and
pushf
push
and
sbb
push
fsin
test
lds
xchg
push
pop
lahf
xor
add
or
xlat
or
and
sub
les
mov
std
mov
jge
loopne
jmp
xor
push
push
test
sub
call
shr
lret
int3
push
sub
xchg
mov
test
inc
jmp
xchg
lret
sbb
in
mov
in
ret
aad
das
aam
sub
in
mov
enter
lret
pop
mov
xor
and
cmc
dec
into
lock
int
cmpsb
push
ret
ljmp
out
fnstcw
add
rcrl
cmpsl
mov
out
sub
cmp
push
push
jnp
xchg
cmc
mov
and
lock
jno
jmp
repz
pop
call
inc
inc
mov
jne
lahf
push
cs
add
mov
out
div
lahf
lods
vpmaddwd
xor
jb
mov
fwait
clc
andl
icebp
rcr
mov
arpl
ret
mov
repz
ret
mov
out
pop
js
clc
xor
sub
movsb
loopne,pt
repnz
push
mov
loop
test
add
sbb
insb
push
data16
inc
push
jns
add
call
lret
sub
mov
sbb
pop
lods
pop
lcall
xchg
cli
and
sub
push
sub
add
stos
sbb
stc
xor
dec
das
fsubs
pop
push
iret
add
lret
std
mov
mov
mov
fnstcw
cwtl
repz
adc
and
dec
out
in
pop
mov
rcrw
inc
cmpsb
mov
inc
lret
sub
aas
jno
mov
test
adc
push
sub
add
xchg
sub
pop
lods
stc
stos
lock
inc
mov
out
sbb
dec
js
push
call
jge,pn
cmp
dec
fbstp
scas
cmp
push
cmp
mov
int
jne
mov
sbbl
mov
mov
hlt
mov
es
inc
dec
mov
or
dec
in
int3
movsb
mov
add
pusha
mov
jae
xchg
test
sub
sbb
inc
int
mov
xchg
xchg
mov
orl
in
mov
mov
xor
orb
sub
and
sub
fwait
decb
pop
cmpsb
or
xor
sbb
push
push
xchg
push
cmp
xchg
ret
in
movsl
addr16
pop
repz
arpl
iret
lods
rclb
xchg
sti
inc
mov
pop
push
or
cmc
push
mov
outsb
jp
stc
loop
fstps
repz
inc
in
jae
and
cmpsl
sbb
loop
and
xchg
add
sbb
and
test
andl
and
bound
and
and
fsubr
xor
add
cli
mov
adc
subb
dec
popa
dec
cmp
sbb
jns
pop
mov
test
ja
pop
int3
dec
and
jmp
sub
std
xchg
sti
sub
test
xchg
pop
inc
shrb
imul
test
stc
call
xor
jns
ret
mov
mov
dec
cmp
inc
bound
dec
lds
in
fldcw
in
in
lods
push
and
dec
mov
cmp
pop
mov
jnp
sbb
adc
mov
sbb
fsts
mov
jne
scas
hlt
xor
lcall
js
mov
inc
test
adc
fsubrs
cmp
je
scas
dec
and
mov
xor
addr16
rcrb
ds
jge
mov
inc
mov
std
incb
cmp
dec
and
dec
iret
cltd
sahf
imul
xor
pop
mov
fnop
mov
push
jbe
mov
xchg
not
gs
and
movsb
push
fwait
outsl
imull
lds
push
lret
rorb
mov
repnz
lods
movsl
dec
jge
jne
ret
ljmp
fisubrs
pop
sbb
mov
scas
mov
push
movsb
mov
pop
push
xor
shlb
repz
cmp
pop
jnp
mov
stc
xor
xchg
dec
sbb
pop
loop
mov
rclb
arpl
fdiv
push
mov
add
push
rorl
fcomps
addr16
dec
jnp
push
mov
pushl
push
xor
push
fstps
mov
test
pop
xchg
xchg
xor
in
jne
repnz
fucomp
xchg
push
sti
in
sahf
mov
aad
jb
popa
gs
les
repz
mov
xchg
mov
and
mov
js
fidivrs
mov
cmp
adc
lock
outsl
mov
xorb
scas
jno
mov
gs
pop
sbb
mov
lods
dec
push
test
rcrb
and
stos
push
push
jp
cmp
push
fdivrl
mov
es
lcall
inc
mov
int
or
adc
sbb
mov
lahf
jae
mov
mov
in
xorl
push
mov
test
sbb
dec
lods
pop
jle
cmp
test
mov
out
clc
add
jae
ret
pusha
xchg
fisubs
addl
lret
int
xchg
xchg
push
xchg
or
test
push
push
data16
sahf
movsl
dec
aaa
dec
lods
lahf
or
pop
pop
stc
push
cmp
test
fidivrl
mov
push
adc
jnp
dec
aas
add
cmp
std
pop
xchg
push
xchg
inc
fwait
out
aad
out
push
dec
movsl
aaa
xchg
mov
and
cmc
fnstcw
adc
adc
xchg
push
sti
mov
int3
js
adc
popa
in
cmp
pop
pop
xchg
std
push
push
scas
xchg
mov
add
xchg
in
sahf
push
or
mov
and
les
push
pop
out
adc
cmp
jae
and
xor
jg
and
add
enter
imul
gs
scas
jle
out
rcl
xlat
jg
lahf
dec
dec
sbb
addr16
loope
sahf
enter
or
adc
imul
mov
outsb
andl
mov
push
push
cmpsb
xchg
outsl
xor
adc
and
mov
xor
jo
addr16
sbb
out
lea
aam
repz
test
mov
insl
inc
and
push
mov
test
xchg
aaa
les
mov
push
add
imul
aam
and
stos
xchg
vcmpps
stos
repnz
pusha
int3
mov
jp
mov
adc
inc
pop
mov
sbb
cmp
fs
loope
pushf
test
iret
rolb
imul
pusha
push
jnp
jns
out
mov
dec
loope
repz
dec
dec
push
out
stc
adc
std
inc
mov
aam
or
pop
out
movsl
dec
fidivrl
sbbl
outsl
jge
push
cld
xchg
lcall
daa
add
and
and
mov
mov
lahf
jmp
pop
clc
std
mov
vmovd
adc
das
test
jecxz
mov
fsubl
xchg
push
test
jmp
scas
je
into
in
sti
jl
mov
cs
pop
clc
push
cmp
les
test
sti
mov
xchg
lret
mov
add
add
popf
xor
cltd
mov
mov
add
inc
jp
mov
push
mov
fcoml
cli
or
dec
mov
dec
adc
shrd
adc
dec
inc
inc
mov
mov
pop
int3
mov
fiaddl
hlt
sbb
jle
jle
inc
sahf
outsb
aad
rorb
pop
or
lock
in
jp
mov
mov
daa
movsl
mov
in
enter
loopne
test
scas
pop
rcrl
inc
inc
xor
xlat
add
test
pop
xor
mov
leave
xchg
in
rcrl
pop
cmp
std
jle
cmp
adc
xor
dec
call
addl
cmpsl
gs
into
jo
push
jns
int3
jp
fsubl
mov
jne
push
and
pop
roll
rcl
cmp
pop
push
xchg
jl
dec
shrl
lret
lret
add
push
popf
mov
cs
mov
jle
or
jmp
adcl
pop
sbb
arpl
out
jb
pop
mov
cld
mov
push
fidivl
ret
mov
call
cmc
push
push
add
mov
jp
mov
test
in
inc
and
das
sub
dec
pop
xor
adc
mov
fdivrl
dec
add
cld
je
mov
or
cmp
test
fcom
and
popa
adc
aaa
mov
mov
dec
lret
stc
add
or
popf
stc
and
sub
movntq
ljmp
mov
push
xchg
pop
adc
pop
stos
mov
fimuls
inc
mov
je
jecxz
sub
imull
xor
or
xchg
je
push
mov
or
in
cmp
mov
fisubs
mov
ss
jbe
mov
dec
mov
jae
movsl
ss
xchg
cmc
pop
push
cli
decb
push
pop
mov
pop
and
sbb
lods
dec
rcrb
xchg
subb
int
adc
cmpsb
or
f2xm1
cmp
xor
push
dec
lods
adcb
xchg
ja
into
and
clc
leave
sbb
dec
sbb
jae
test
das
adc
jnp
mov
cmpl
idivb
dec
xor
out
adc
das
sub
sbb
mov
jno
or
fnstcw
jmp
pop
mov
enter
jb
out
aam
mov
in
cltd
xchg
xor
cmp
dec
test
shll
in
scas
cmp
mov
jle
lahf
adc
sbb
sub
and
ret
mov
inc
insl
rcr
jo
es
mov
xorl
out
fisubs
mov
aas
xchg
or
jns
xchg
cmpsl
jle
sbb
xor
adc
popa
cmpsb
dec
and
sti
fwait
scas
mov
pushf
xchg
fsts
repz
and
pop
lahf
pop
das
jae
insl
xchg
lret
stos
adc
ret
pop
adc
dec
xchg
cmp
aam
mov
test
and
push
scas
out
mov
jne
sbb
fmull
mov
sbb
aaa
out
push
xchg
mov
mov
mov
push
mov
pop
stos
fsts
add
cmp
mov
cmp
sub
sub
push
sbb
clc
ja
sub
cmp
jne
mov
xchg
ja
pop
and
jmp
mov
nop
mov
rcrl
test
and
mov
cmp
cmpb
pop
fsubr
in
scas
push
mov
push
sub
mov
xchg
jle
jae
pop
add
sbb
aas
fisubl
mov
fnstenv
fcoml
dec
arpl
cmp
les
adc
aam
adc
xchg
ror
push
xchg
rcl
xchg
lcall
sbb
inc
jns
adc
movsb
shrl
cmp
aaa
cmp
xor
in
and
cld
subb
in
jae
lcall
pop
unpcklps
lret
lock
fists
icebp
inc
xchg
mov
daa
push
test
adc
shrl
mov
push
jbe
push
pop
scas
mov
xor
out
sbb
test
mov
int
mov
or
adc
movsb
sbb
jno
mov
das
addr16
mov
pop
sub
and
jbe
mov
jmp
add
mov
call
dec
sbb
xchg
or
stc
rclb
adc
ret
jecxz
cmc
fldcw
or
test
aam
enter
mov
arpl
inc
cmp
cld
xchg
xor
mulb
and
aam
pop
mulb
imul
outsb
out
sub
stos
or
aam
call
icebp
int
mov
adc
mov
mov
repz
nop
inc
fnstcw
adc
aam
test
jmp
xchg
aad
fisubrl
scas
mov
scas
hlt
add
mov
std
int3
popf
mov
push
mov
push
fisubrs
adc
pop
mov
cwtl
xor
aaa
imul
outsb
and
cmp
int3
adc
adc
push
daa
cs
mov
or
mov
pop
push
mov
jns
add
mov
dec
cmp
dec
inc
and
xor
mov
out
in
sub
adc
rcll
cmp
flds
sbb
fwait
jno
sub
out
lahf
inc
sbb
xor
cmpb
dec
out
jp
scas
sub
ljmp
xchg
push
ret
shlb
pop
pop
aam
cmpsl
stc
and
xlat
lcall
push
lret
xor
test
loop
pop
iret
mov
mov
pop
adc
sub
mov
dec
add
dec
test
mov
adc
jbe
mov
roll
sub
rcr
cmpsb
das
cmp
fisubrs
int
popf
das
dec
mov
movsl
mov
out
cmp
mov
jg
mov
inc
mov
shll
mov
adc
ja
stc
test
pop
jle
inc
xchg
fstps
dec
iret
sbb
stos
aas
push
daa
cmp
int3
jge
push
rcl
dec
adc
mov
lods
push
or
lret
std
data16
fldcw
icebp
test
xchg
out
or
addr16
adc
lcall
int
and
xchg
je
add
testb
xor
pop
flds
inc
add
dec
mov
jge
std
es
scas
add
aas
xchg
std
int
mov
sbb
mov
int
popf
jbe
mov
test
sbb
mov
dec
inc
mov
mov
outsl
xor
cmp
inc
scas
in
sbb
cmp
xor
dec
and
dec
cli
pushf
dec
std
test
sub
repz
mov
popa
adc
je
std
mov
lret
add
pop
or
xor
dec
daa
cmp
jae
mov
mov
lret
test
dec
sbb
pop
fimuls
mov
mov
pushf
inc
lods
sbb
mov
inc
fwait
cmp
mov
mov
push
lret
mov
jl
pop
pop
out
lods
cmpsb
xchg
push
xchg
iret
sahf
insl
add
pop
and
rcrl
aam
jns
or
add
sub
push
sub
into
xchg
std
sbb
mov
add
loopne
xchg
dec
sti
push
mov
lret
sarb
es
rcrb
jo
sub
rclb
das
push
and
mov
push
mov
std
fnstcw
inc
fiaddl
arpl
cmpsb
cmpsb
cmpsb
push
inc
shrd
and
imul
popa
lcall
push
sbb
movsb
jno
mov
pop
jecxz
xlat
pusha
pop
jge
xor
pop
aam
repz
int
shlb
repz
mov
leave
in
dec
mov
aad
std
mov
fnstcw
mov
adc
pop
sarl
adc
out
adc
test
sbb
jg
jne
sub
mov
mulb
cmp
pop
vmread
push
flds
cmp
roll
sbb
xchg
xor
js
add
je
int3
and
cmpsl
mov
dec
cld
jae
mov
test
ret
push
fucom
fisttpl
pop
pop
stc
cmp
push
aad
inc
sub
and
mov
aaa
hlt
inc
mov
imul
xlat
imull
push
je
ds
loope
test
xchg
sbbl
clc
fstps
aam
inc
std
pop
lods
pop
fsts
cli
repz
imul
std
int
enter
xor
dec
cld
out
imul
mov
int
fidivrl
in
push
sbb
dec
lock
push
and
xor
fcompl
xor
rorb
jg
dec
sti
clc
ficompl
mov
dec
adc
leave
cmpsb
out
add
dec
lock
cmp
dec
clc
mov
test
sti
stc
mov
mov
test
jo
movsb
call
pop
adc
mov
das
stos
test
mov
insb
cmp
or
clc
repz
push
lret
nop
push
sbb
les
and
icebp
mov
jle
test
les
and
imul
xor
pop
push
push
test
jae
je
pop
pusha
sbb
repz
add
push
test
in
cwtl
jae
add
mov
out
sbb
pop
adc
inc
mov
shrl
mov
xchg
das
mov
mov
mov
jns
inc
rorl
stc
sbb
add
adc
adc
mov
add
or
hlt
fstps
inc
fcmove
lahf
test
movsb
out
ret
stos
mov
jmp
test
rorl
fmulp
out
popa
mov
hlt
inc
sbb
out
xor
lcall
xchg
dec
aad
jg
mov
adc
push
xlat
mov
pop
testl
add
orb
push
and
mov
mov
push
sbb
cmp
sub
test
int
cmpsl
cmp
das
aad
stos
dec
fsubrl
inc
and
dec
cs
sub
sti
push
push
push
inc
cmp
dec
std
fsts
fmuls
out
jno
sbb
mov
cmc
push
addr16
mov
lock
inc
scas
adc
push
xor
aam
xchg
xchg
movsb
jp
and
les
push
pop
dec
sbb
push
je
gs
mov
test
add
mov
repz
pop
das
imul
in
mov
fisubs
ss
dec
pop
jns
jno
test
and
das
sub
mov
xchg
data16
out
stc
fistpl
in
mov
test
jecxz
sub
aaa
inc
addr16
cmc
adc
rcrl
ret
les
and
test
xchg
add
popaw
dec
adcl
lea
lods
mov
sub
or
inc
inc
je
movb
loop
sbb
test
data16
ret
out
pusha
lret
out
lock
test
mov
jae
fcmovb
fldcw
divl
out
lcall
adc
xchg
test
xor
sarl
std
flds
xor
cltd
cmpsb
dec
ljmp
adc
cmp
lods
sbb
inc
lods
cltd
mov
xor
sub
sbb
out
outsb
xchg
pop
lea
aam
mov
or
aaa
push
or
sbb
inc
das
cmpsb
ss
add
enter
inc
pop
gs
push
mov
dec
iret
jo
add
std
popf
lcall
hlt
ret
add
test
xchg
insb
adc
jnp
cmp
adc
test
arpl
xor
fs
mov
int
mov
jno
xor
inc
or
jmp
mov
inc
test
loop
inc
sub
jmp
or
lods
inc
or
mov
shl
mov
js
fs
mov
int
repz
sahf
sbb
mov
mov
jo
or
scas
loope
push
in
shll
mov
mov
mov
stos
xor
lds
out
sub
sbb
repnz
rcrb
sti
jae
adc
sbb
inc
sub
in
inc
test
cmp
dec
mov
pushf
call
jbe
jne
repz
stos
inc
mov
daa
push
sub
adc
jl
mov
imul
int
fiadds
and
stc
out
sbb
enter
nop
push
clc
jne
test
push
les
fidivrs
mov
mov
outsl
pop
outsl
call
cmp
mov
gs
jo
jmp
inc
movsb
aas
sbb
cmpsl
dec
dec
test
xchg
loopne
cmpsl
pop
out
cltd
enter
jae
lods
jmp
mov
push
mov
pmullw
and
js
lods
mov
shrl
and
cmp
mov
xor
lcall
addr16
notl
cli
fchs
fdivr
sbb
sti
xor
adc
pop
jecxz
xor
dec
rolb
fnstcw
aad
lods
out
cmp
or
lret
fnstcw
inc
popf
or
cmp
cltd
ret
xor
fimuls
icebp
pop
scas
js
mov
pop
xchg
int3
std
jns
je
icebp
jo
cld
sub
cmp
sbb
inc
lods
call
cld
push
lods
dec
mov
add
add
ret
pop
leave
add
and
pusha
mov
mov
cmp
dec
sahf
in
cld
xor
mov
sbb
aam
xchg
dec
fdivrl
out
sti
sti
add
in
cmp
popf
push
aaa
aad
xchg
jge
xor
sti
lods
jae
xchg
in
xchg
lods
mov
jmp
cli
loop
adc
movsb
mov
sbb
push
mov
stos
sahf
cmp
scas
sub
addr16
sbb
lea
mov
scas
mov
jg
mov
inc
lds
out
xchg
jmp
mov
sahf
and
pop
sbb
in
inc
test
lcall
ret
lret
in
insl
mov
inc
call
xor
popa
xor
xchg
loope
or
jnp
xchg
inc
iret
add
hlt
mov
rol
adcl
out
popf
or
sub
movsb
scas
sub
fimuls
mov
rep
push
addl
jb
mov
clc
cmpsl
scas
aaa
addr16
test
and
push
repz
add
fmull
sysenter
fcmovnu
jmp
into
jb
or
mov
push
int
test
int
cmpsl
or
aad
xor
addb
push
mov
rclb
lock
popa
xchg
sarl
or
repz
aam
in
cld
dec
dec
jae
mov
mov
mov
dec
cmpsb
inc
fidivrs
sti
shrb
lock
xchg
icebp
dec
test
in
pushf
sbbl
push
xor
mov
das
push
inc
xlat
inc
out
dec
ds
adc
cmp
mov
mov
mov
subl
test
addr16
xchg
or
dec
mov
es
cld
ss
fldenv
xchg
or
fdivrl
ljmp
out
lret
cmp
push
jge
push
push
leave
icebp
sub
jmp
into
push
mov
scas
dec
lahf
out
and
push
faddl
int
or
test
push
je
jl
outsb
or
das
or
pop
out
leave
subl
pushf
mov
jbe
fdiv
pusha
jmp
xor
les
xlat
aad
lods
sub
push
in
out
lods
int3
mov
xor
inc
mov
aam
xchg
xchg
outsl
int
cmc
dec
movsl
lods
or
insb
lret
fisubrl
xchg
mov
std
mov
out
mov
cmp
dec
mov
fisubrs
outsl
popa
aad
hlt
sbbl
mov
add
cmp
jae
mov
cli
xor
fstps
lcall
popa
or
cmp
or
inc
popl
lock
out
xchg
xchg
cmp
mov
imul
stos
jp
gs
add
and
mov
inc
and
pop
sbb
cs
mulb
sbb
fidivs
imul
ljmp
push
rcrl
add
test
sbb
xchg
dec
in
adc
or
int3
test
jmp
loopne
pop
daa
popf
jge
mov
testl
popf
add
sbb
mov
flds
xchg
inc
scas
or
cld
pop
mov
scas
lods
dec
sbb
inc
inc
je
sub
or
pop
inc
mov
mov
loopne
mov
dec
jge
mov
std
enter
pushf
gs
and
scas
or
adc
xchg
jns
subl
fmulp
and
xchg
and
xchg
shr
popf
fnstsw
scas
xor
lds
cmp
rcrl
outsb
mov
jp
mov
flds
xchg
and
lods
and
pop
push
sub
sub
lock
fdivrl
je
gs
shrl
rolb
jecxz
mov
inc
clc
mov
xor
fidivrs
or
sbbl
outsl
mov
les
lcall
test
or
cmc
mov
aaa
cmpsb
mov
cmc
adc
ds
dec
addr16
lahf
clc
mov
push
test
mov
pop
imul
js
add
shr
xor
out
xchg
imul
push
push
jl
test
fldenv
push
ds
testb
sbb
or
imul
mov
cmpsl
or
insb
sbb
push
rolb
cmp
inc
icebp
xchg
fisubrs
ss
je
jmp
addr16
shl
inc
test
lcall
sbb
push
fbld
int3
mov
cmp
repz
push
iret
push
and
add
push
sbb
inc
sahf
frstor
stos
xchg
gs
outsl
ss
fisubs
in
push
mov
dec
inc
lret
inc
test
adc
loope
mov
fld1
push
jbe
fdivr
inc
cmp
out
sbbb
lds
loop
adcl
imul
sub
xorb
addr16
fsubrp
daa
and
repnz
mov
pop
in
cmp
in
xor
cmpsb
out
mov
imul
pop
mov
cld
mov
sti
xor
or
fbld
int
je
jmp
imul
cmpsb
pop
push
outsl
mov
out
ret
mov
add
jg
arpl
xor
in
mov
pop
inc
add
out
add
lock
dec
scas
pop
mov
loopne
lock
lock
cmc
cmp
inc
test
jge
or
cmp
jns
and
aam
or
sub
mull
movsl
call
int3
mov
add
repz
cltd
aad
shlb
jnp
push
cld
test
mov
sbb
out
dec
xor
add
icebp
ljmp
push
xor
push
cmpsl
cld
jle
adc
in
mov
popa
sbb
sbbb
ljmp
adc
ja
jp
imul
lds
jno
dec
push
movsl
add
cld
mov
mov
xor
aam
push
fdivp
pop
jno
out
int
lds
int
fwait
es
sbb
push
out
add
adc
sbb
inc
cli
mov
pushf
iret
in
sub
or
dec
and
ret
icebp
inc
movsb
mov
dec
movsb
out
xor
mov
dec
mov
pop
add
iret
les
mov
xor
test
fwait
out
sti
aad
mov
mov
clc
push
subl
popf
pop
lea
jb
inc
jge
orb
pop
cmp
fisttpll
test
xchg
jae
hlt
cmp
xchg
stos
dec
ret
enter
lods
and
or
in
addr16
ret
aas
mov
repz
adc
out
imul
xchg
imul
jnp
cmpsb
xor
pop
lcall
int3
lods
mov
outsb
daa
or
fildll
mov
aad
movsl
shld
add
inc
jbe
sbb
outsl
mov
adc
fcmovnu
test
ret
mov
loop,pt
lds
sar
stos
stos
dec
sbb
mov
jb
and
ret
add
pusha
out
movsb
pop
ret
fcompp
push
jae
iret
test
clts
sub
cld
sub
inc
ds
push
iret
adcl
clc
or
sub
jae
xchg
sub
inc
ja
dec
mov
popf
xchg
icebp
inc
rclb
push
push
jecxz
push
popa
faddp
xorb
das
jmp
int
dec
xchg
mov
scas
mov
aaa
mov
xor
int
lret
loop
jnp
sub
scas
das
mov
mov
dec
movsb
into
dec
and
add
xchg
sub
sbb
shl
pop
in
fiadds
cmc
and
adcb
cmp
push
mov
enter
aam
fsubrl
xlat
and
js
arpl
repnz
xchg
test
loopne
scas
or
cmpsb
fs
aam
mov
sub
xchg
ret
sub
mov
fisubs
repnz
fmull
xchg
pop
cmp
xchg
sub
addr16
fstps
int
add
in
out
jno
stos
jno
dec
xor
lret
mov
ret
mov
push
add
std
push
and
aas
or
adc
incb
repnz
rcrb
es
nop
adc
dec
popf
inc
or
sub
mov
ja
inc
xor
dec
int3
push
sahf
mov
or
mov
push
dec
je
jnp
es
cmp
push
jl
mov
sahf
popa
stos
jg
jo
cmp
test
into
adc
sbb
out
or
mov
aas
cmp
ss
dec
aaa
or
and
cmpsl
shlb
fnstenv
xchg
icebp
adc
mov
pop
push
jae
test
mov
xor
mov
adc
sti
in
pusha
add
in
pop
testl
inc
sub
data16
fiadds
mov
es
fdivrl
jns
push
out
push
out
mov
scas
mov
lods
mov
subl
xchg
and
cltd
mov
pusha
iret
scas
int
mov
cmpsb
aas
fnstcw
mov
test
pop
mov
mov
mov
fmul
lea
sub
das
xchg
xor
stos
test
cmpsl
mov
ds
in
ss
mov
push
pop
jecxz
sub
xchg
jl
dec
lret
das
xchg
and
iret
jns
pop
pushf
xchg
jecxz
jle
fsubrs
scas
mov
in
sbb
enter
cld
or
out
mov
fcomp
icebp
pop
cmp
dec
mov
movsl
pop
mov
movsb
dec
loopne
fcompl
lea
fisttpl
jle
dec
movsb
pop
jg
push
outsb
or
cmp
ljmp
or
fisubrs
jae
mov
into
push
fildl
and
dec
jbe
and
mov
dec
dec
addr16
jnp,pt
iret
das
mov
fidivs
fwait
xchg
fnstsw
add
push
out
mov
pushf
rcrl
sahf
xor
das
jns
cmpsb
pop
xchg
test
hlt
sbb
aas
stc
cmp
in
sub
cld
lds
scas
add
loopne
sbb
aad
mov
lcall
out
push
test
test
stos
and
push
fabs
inc
jecxz
in
stos
fwait
xchg
xorl
inc
jns
add
test
push
lret
sub
sub
mov
cmp
and
add
sub
popa
mov
sti
in
push
sbb
subb
hlt
xor
leave
stc
mov
out
inc
mov
dec
lret
and
out
sub
push
insl
aad
inc
fs
pop
mov
sti
stc
inc
ud1
cli
shrl
fstpl
xor
mov
or
xchg
dec
adc
add
mov
xor
jne
adc
mov
ss
mov
hlt
int
or
adc
insb
cmc
test
mov
xchg
call
add
fmull
loope
lock
sub
adc
loopne
mov
xorl
ljmp
sub
sub
xchg
lods
push
mov
xchg
xchg
shr
outsl
pushf
mov
movsb
imul
cmp
js
xor
pop
pop
mov
xor
data16
repnz
dec
pop
sahf
inc
pop
inc
push
mov
mov
das
js
test
jns
mov
mov
out
mov
clc
cmp
mov
loop
test
or
push
jbe
aad
enter
jp
repnz
mov
lcall
cli
jmp
sbb
sbb
loopne
fisubl
divl
adc
and
mov
cmp
in
movups
pop
in
xchg
out
push
js
fnsave
mov
mov
test
popa
arpl
arpl
and
fwait
jb
addr16
jno
cmpsb
data16
mov
andl
int3
repz
test
jno
outsb
mov
nop
int3
stos
rol
loope
outsl
flds
push
or
xor
loope
lods
shll
enter
xor
filds
add
inc
out
mov
sub
ret
mov
loop
pop
clc
xchg
movsl
sar
repnz
sbb
and
shrl
dec
push
xchg
inc
in
push
push
fsubrs
pop
xor
dec
fsubrp
jl
mov
add
xor
sbb
and
xchg
xor
mov
and
jae
out
lds
sub
lret
repnz
inc
cmpsl
jle
fisubs
in
sar
inc
daa
movsb
fsubrl
pop
rclb
lods
rcll
pushf
test
insl
fimuls
add
xchg
mov
iret
jae
jl
adc
in
push
sbb
jbe
cmp
pusha
fdivrl
lds
xchg
fimull
shlb
stos
and
and
xor
sbb
je
sbb
sbb
mov
insb
or
cmp
imul
and
stc
pop
xor
and
hlt
lock
pop
fnstenv
jle
inc
mov
and
add
inc
movsl
ds
inc
xor
ficomps
jbe
and
mov
sub
ror
into
rcll
add
sarl
jb
add
int
mov
addr16
cmc
leave
and
fisttpl
or
scas
ss
pop
rcll
xorl
out
test
cmp
or
sub
sbbl
lods
xor
lock
div
xor
or
stc
mov
jb
rolb
and
insl
stos
mov
or
pop
push
aad
es
div
or
pop
jp
lods
mov
mov
psubb
jg
mov
outsl
scas
test
jge
sub
jbe
sbb
mov
mov
add
dec
jp
lret
sbb
mov
aam
xor
cmp
in
push
sbb
push
ds
adc
cmp
add
insb
cmp
mov
pop
xchg
insb
mov
jmp
sub
inc
mov
sti
mov
xor
xchg
das
jnp
push
daa
inc
js
xor
mov
leave
xchg
daa
clc
nop
sbb
imul
cld
lods
xor
pop
inc
int3
mov
cmp
sub
mov
lea
std
fnstcw
mov
inc
and
scas
xchg
negl
scas
adc
in
shl
and
enter
int
adc
xor
cltd
cmp
jl
and
xorl
add
sub
popa
icebp
mov
xchg
mov
jl
xchg
cwtl
pop
out
jno
jnp
cltd
sub
inc
adc
shll
jns
sti
int
mov
insl
cmp
testl
cwtl
push
in
push
mov
cmpsb
and
andb
rcr
mov
nop
stos
lret
mov
jge
and
in
pop
xchg
adc
leave
movsl
and
and
je
xchg
addr16
jecxz
adc
add
jg
xchg
icebp
mov
dec
in
jno
lock
nop
adcb
xor
pop
ds
xor
cli
pop
mov
xchg
lcall
mov
das
xchg
sub
insl
mov
shl
mov
pop
enter
and
dec
movsb
std
push
es
cmp
or
mov
or
dec
repnz
jl
clc
imull
xchg
pcmpeqd
mov
xor
ret
flds
mov
add
testl
push
xorb
push
repz
xor
inc
jbe
xchg
push
loop
testb
incl
shll
movsb
pop
mov
and
pop
lods
testb
adc
sarb
push
and
xor
incl
sbb
imul
fwait
push
loope
mov
dec
ficompl
iret
mov
sub
pop
popa
xor
bound
loopne
dec
cli
les
push
inc
gs
mov
daa
in
test
mov
and
jb
jmp
mov
jmp
cld
push
sbb
repnz
fdivrl
fsubrl
pop
xor
and
add
adc
cmp
xchg
mov
ss
jno
cli
notl
cmp
sbb
ss
mov
dec
mov
leave
xor
pop
xchg
cmp
std
mov
shr
sub
icebp
xlat
mov
push
add
andb
scas
das
sbb
mov
xlat
icebp
imul
cmp
xchg
and
fucom
mov
sub
popf
mov
inc
adc
cmp
fwait
cmpsb
aam
mov
jns
pop
cltd
fnsave
xorb
push
add
lods
jbe
pop
insl
jmp
xor
int
mov
xchg
sub
int
push
jno
push
adc
and
in
mov
inc
xchg
inc
arpl
mov
xchg
gs
movsb
push
cmp
mov
popa
xchg
and
jp
or
pop
ret
cmp
mov
orl
sbb
addr16
enter
jns
cmp
lock
jae
pop
lret
aad
mov
test
jmp
pop
sub
aaa
push
leave
imul
cmpsl
inc
or
mov
push
test
jecxz
fidivs
fwait
mov
xchg
lea
loope
gs
test
popf
bound
rol
jmp
in
insl
pop
jb
sbb
pushf
rcr
xor
ss
hlt
jmp
pop
pop
sbb
xchg
lods
mov
test
inc
data16
and
sub
daa
lods
dec
scas
inc
dec
fistpll
dec
xchg
or
jae
push
adc
jge
pop
xor
xchg
mov
jnp
movsb
add
ficomps
mov
add
push
scas
sub
dec
sbb
cld
xor
mov
addr16
dec
out
pop
in
fstp
mov
sbb
inc
cmpsb
cld
jl
pop
enter
jl,pt
pop
std
cmp
dec
outsl
xor
fsqrt
pop
aad
cmc
mov
adc
inc
sahf
addr16
mov
outsl
stc
mov
add
jmp
mov
pop
mov
sub
cmp
dec
fnsave
das
cmpsl
pushf
dec
or
loopne
xchg
sbb
mov
push
inc
repnz
mov
sbb
mov
aaa
pop
sub
cwtl
fsts
mov
sbb
subb
or
and
cltd
sbb
add
pop
clc
ljmp
je
ret
cmpb
cmp
mov
or
lods
test
mov
add
lret
adc
jns
movb
ss
lock
add
dec
in
pop
dec
enter
sahf
jae
pop
and
mov
int
jmp
out
lcall
fnstcw
mov
inc
jg
jo
std
jle
cwtl
xchg
test
xor
dec
insb
dec
fisubrs
push
xor
cmp
mov
mov
pop
imul
xlat
out
lock
or
aaa
fimull
adc
dec
in
int
mov
push
xchg
es
daa
sarb
sbb
outsb
fadd
lock
cld
in
test
add
fisttpl
xor
cs
mov
cmpsl
notl
mov
aam
es
push
mov
mov
push
push
mov
repnz
or
dec
jp
push
and
cmp
loope
inc
test
popf
mov
int
loope
pop
movsb
movsb
stos
movsl
dec
sbb
sarl
insb
sub
add
or
dec
xor
xchg
aam
arpl
popa
repnz
loope
mov
pop
sub
stc
aad
or
jbe
jno
sbb
or
mov
pop
cld
scas
mov
inc
fsubrs
sub
inc
movsb
les
jno
mov
lahf
jecxz
popa
popa
inc
dec
mov
jmp
dec
and
push
test
xor
sbb
add
sti
jno
loope
mov
cs
rclb
pop
push
bound
imul
lock
fiadds
push
xlat
pop
mov
test
mov
fisttpll
enter
movsb
loope
ss
or
pop
dec
add
and
stc
int
inc
xor
fnstenv
test
pop
jp
or
cmp
loopne
ja
fs
inc
jno
jbe
enter
repz
ljmp
mov
fninit
xchg
jle
pop
jbe
fsubs
adc
stos
test
jnp
sbb
mov
sub
jb
sbb
pusha
cmpsb
fstpt
xchg
int
js
fsubl
fldlg2
outsl
pop
inc
movl
mov
inc
shll
adc
push
sub
push
lods
cmp
jnp
push
sbb
daa
imul
cmpsb
flds
sub
and
pop
test
push
or
movnti
jp
xor
pushf
xchg
scas
lods
cltd
dec
scas
mov
pop
push
es
in
fstps
movsb
cmp
mov
or
xor
in
and
jl
dec
or
roll
popa
xor
pop
in
stc
mov
stos
lds
imul
leave
cmc
mov
jns
push
mov
out
inc
rcrl
or
xlat
int
mov
push
inc
xor
jns
cmp
mov
std
add
pop
sbb
test
sbbb
inc
or
mov
out
xchg
adc
jle
das
jae
add
lret
addr16
lret
dec
or
mov
and
dec
scas
jns
pop
sub
outsl
xor
jge
push
icebp
jl
bound
and
xchg
jnp
aam
int3
adc
popa
jmp
sahf
cmpsb
ret
push
mov
xchg
daa
mov
mov
cmpsl
mov
dec
in
and
push
and
mov
sbb
mov
mov
cmpl
xor
pop
cmp
and
mov
out
mov
jge,pt
jle
out
jno
cli
push
lods
xchg
aas
xor
mov
push
fucomp
push
sub
sub
jbe
testb
or
jge
addr16
cmp
sbb
call
dec
in
inc
pop
inc
mov
aad
inc
loop
dec
cmp
push
jle
add
xor
pushf
fisttps
stc
fldenv
jne
out
repz
inc
inc
ss
mov
mov
imul
push
xchg
movsl
cli
or
loope
xor
jbe
ficoml
sbb
loopne
sbb
pop
xor
popf
xor
fsubrs
mov
sahf
imul
jl
mov
mov
sub
imul
mov
ja
mov
movsb
pop
popf
jne
mov
std
and
scas
incl
mov
fs
cmpsb
in
es
mov
push
mov
test
cmp
fwait
cmp
imul
mov
into
ljmp
rcll
pop
in
and
and
bound
decl
fildll
xchg
mov
mov
outsb
mov
hlt
scas
pop
cmp
out
fwait
loopne
sbb
sub
vaddsubpd
xchg
mov
or
sbb
lret
inc
mov
push
mov
mov
loopne
call
inc
push
mov
sub
popa
push
mov
jbe
mov
jecxz
add
mov
jno
xchg
jnp
push
lahf
sub
jns
dec
sbb
or
ljmp
xorl
cmp
mov
test
lcall
xchg
movsb
je
jecxz
test
jo
pop
gs
sub
push
mov
inc
pop
xchg
fucomip
out
xor
cmpsb
fmull
cmc
mov
stos
inc
mov
xchg
mov
lcall
xorl
mov
test
loope
std
out
ficoms
xchg
icebp
sub
mov
mov
pusha
ja
fnstsw
insl
sbb
mov
jns
mov
or
cli
xchg
mov
jo
cli
push
stos
cmpsb
sub
sti
notb
pop
xor
mov
xchg
iret
fwait
dec
cmp
dec
add
dec
inc
mov
mov
mov
hlt
popf
test
jnp
aad
push
sub
dec
push
sbb
xor
sub
fstl
xor
cmp
movb
lods
les
bswap
adc
hlt
fwait
adc
cmp
loopne
fwait
js
jne
sbb
cld
aaa
jne
sub
xor
aaa
lods
sti
sbb
mov
xor
sub
xchg
mov
mov
sbb
repz
inc
popf
cmp
xor
cmpsl
sahf
outsl
pusha
sbb
mov
cmp
cmpsb
add
nop
in
rorb
sti
mov
jbe
test
imul
mov
stc
movsl
mov
xchg
into
mov
repnz
jg
stc
adc
std
rclb
mov
and
jecxz
icebp
flds
ljmp
mov
dec
lret
mov
mov
dec
lea
clc
add
and
hlt
scas
test
repnz
ja
mov
dec
scas
or
pop
push
andl
inc
in
mov
add
pop
in
push
push
mov
popf
sbb
inc
and
daa
int
jmp
add
nop
and
xchg
iret
mov
adc
in
jae
cmp
mov
jge
movsl
aad
test
push
fprem1
call
pop
int3
lock
pop
mov
int
cmpsb
outsb
jge
test
mov
adcl
cmp
in
fwait
dec
pusha
mov
repz
je
popf
lods
jle
fildl
cmpsl
and
je
nop
push
pop
sbb
adc
pop
stc
push
or
pop
xchg
push
scas
std
mov
sbb
sbb
cmp
inc
out
nop
cmpsb
test
cmp
xchg
shl
inc
xchg
movsl
dec
mov
mov
rorl
mov
sahf
inc
sbb
scas
or
mov
xlat
pop
std
sbb
xchg
scas
mov
mov
movsl
mov
dec
pushf
adc
gs
jge
jmp
push
mov
adc
jbe
gs
dec
fdivs
test
cmp
fs
aad
outsb
cwtl
lret
pop
out
xor
push
scas
outsw
test
add
out
mov
aam
fnsave
lds
stos
cmp
ja
lock
fdivl
pop
ja
stos
lds
les
xorb
mov
andb
push
sbb
sub
pop
jg
push
adc
jmp
insl
in
inc
adc
xchg
jns
xchg
aam
pop
xor
adc
xchg
imul
out
stos
xchg
daa
add
jno
add
push
mov
fwait
outsb
add
gs
es
cmpb
dec
nop
clc
notb
lret
icebp
in
fimull
mov
mov
mov
test
dec
sbb
mov
call
loop
rclb
dec
jmp
popf
test
mov
mov
fidivrs
push
mov
scas
xlat
loop
dec
jne
sub
movsb
cld
fdiv
ss
xor
push
cmpsb
out
idivb
outsl
or
cmp
xlat
xchg
sub
pushf
mov
fsts
faddp
fwait
inc
faddl
pop
pop
adc
or
and
cld
std
adcb
sub
pop
and
xlat
sbb
shrl
dec
mov
cmp
stos
sub
flds
mov
fs
mov
mov
sbb
or
ret
aam
jb
ds
cmp
dec
and
adcb
push
stos
fwait
aad
jmp
aaa
jmp
jae
mov
jl
cs
xor
jns
xchg
sub
push
nop
test
inc
cld
xchg
in
ja
les
mov
pop
jmp
mov
flds
mov
sub
mov
mov
xor
lds
adc
jecxz
mov
push
cmp
fldcw
adc
lods
pop
dec
cmp
sub
jo
or
xchg
lods
adc
outsl
scas
mov
sahf
fsts
add
cmp
repnz
jns
push
lea
js
xchg
lods
fwait
daa
fwait
sti
mov
das
outsb
dec
sub
fsts
inc
adc
push
pop
fcoms
mov
push
movsb
movsb
orb
test
adc
lods
jle
dec
fstps
adc
dec
insl
sbb
cmp
mov
aam
repz
add
fcomps
jns
aad
xchg
mov
mov
aam
mov
fnstenv
fwait
dec
mov
cwtl
test
mov
xor
inc
or
daa
filds
out
push
fmulp
jmp
push
jbe
mov
out
mov
mov
xor
cmp
fadd
stos
sbb
iret
adc
setle
inc
popf
cmp
sbb
lods
push
scas
test
dec
repz
incl
dec
sti
sarl
pop
neg
xchg
in
aaa
xor
mov
mov
div
pop
test
mov
insb
test
movb
mov
mov
pop
lcall
jg
cmp
xchg
cmpsl
mov
sbb
mov
or
std
das
sarl
or
lock
test
lret
jg
pop
pop
ficoml
cs
fwait
jge
cli
mov
adc
push
adc
lcall
mov
fsts
mov
dec
mov
xlat
pop
add
push
rol
mov
divb
filds
push
sahf
mov
mov
clc
lods
sbb
lods
inc
xorb
jnp
or
mov
out
mov
push
jg
jnp
push
icebp
add
je
or
scas
lret
mov
dec
loopne
sti
inc
scas
mov
cmp
adc
xor
paddusw
cmpsb
sub
xchg
lahf
in
adc
and
or
xor
adc
test
sbb
jmp
pop
sbb
pop
nop
test
adc
push
outsb
mov
sbb
mov
inc
xchg
mov
jns
sbb
push
mov
test
push
ficoml
fwait
mov
cmpsl
and
push
inc
push
pop
mov
xor
gs
les
xchg
loopne
jnp
lret
lea
mov
pop
xorb
aam
fstps
scas
cmp
or
std
or
dec
mov
cmp
sub
jo
test
mov
fdivr
jo
imul
sbb
inc
dec
scas
push
in
dec
nop
xchg
scas
mov
push
int3
pop
sbb
xchg
add
data16
das
in
mov
add
add
pushf
pushl
cmp
or
out
pop
add
xchg
cmp
add
push
adc
popa
and
xor
bound
xchg
fmull
xchg
xchg
push
fistl
je
or
dec
les
and
mov
mov
out
mov
push
xchg
mov
andl
adc
imul
data16
xchg
leave
mov
ret
dec
inc
xchg
icebp
pop
mov
xchg
out
mov
jne
mov
dec
mov
cmp
mov
das
sarb
das
lcall
repnz
xor
xlat
pop
sti
mov
dec
mov
dec
xor
inc
clc
pop
es
jmp
xor
and
cmp
out
mov
mov
and
rcr
in
xchg
pop
std
bound
or
fcompl
sub
cmpsl
and
sub
not
lret
mov
int
ret
cmp
call
push
sub
cs
and
or
adc
loop
mov
loop
out
popf
and
sbb
adc
push
data16
out
and
jb
movsb
adc
inc
push
subb
dec
mov
adc
inc
or
int3
outsb
add
sub
shrb
mov
pop
popa
mov
and
das
push
cmp
pushf
jl
stos
test
fstl
pop
in
pop
cld
cmp
mov
cmpsb
int3
clc
mov
je
sbb
xchg
loopne
xchg
xor
hlt
cmpsb
inc
inc
rcrb
adc
and
sub
push
sub
mov
dec
cltd
loope
je
rcrl
xor
sub
inc
jnp
sub
test
xor
hlt
cmc
inc
push
js
fsubl
inc
dec
cmp
lock
cmp
lods
and
imul
and
push
jmp
out
mov
lods
mov
pop
push
jae
outsl
or
in
pop
xchg
mov
cmp
and
xchg
jg
fdivrl
mov
cmp
iret
in
bnd
pop
push
sbb
xorl
les
mov
cmpsb
xchg
sub
aad
hlt
in
inc
push
sub
xchg
jecxz
xchg
insb
or
mov
pop
mov
mov
mov
mov
xchg
aaa
enter
cld
sbb
push
cltd
inc
jl
outsb
sub
mov
or
dec
aaa
or
or
in
stos
jle
sub
sbb
into
adc
mov
aad
js
pop
data16
cmpsb
cs
insl
push
adc
stc
jno
outsb
and
jp
out
mov
mov
in
sbb
adc
out
sbb
ss
jbe
dec
and
sti
test
jle
inc
cmpsb
mov
mov
rolb
sbb
rcl
add
fimuls
and
mov
dec
mov
xchg
cmp
fnstenv
mov
aam
xchg
nop
and
jle
jbe
out
das
jmp
sub
leave
int3
sub
aad
jb
ret
adc
cmp
clc
pop
or
xlat
sahf
int3
data16
cmpsb
adc
mov
add
xor
or
jae
pop
lock
fisubrs
movsb
sti
and
jge
cmpsb
push
fadds
mov
and
xchg
push
or
push
loope
cmp
decb
cld
jae
fwait
sub
pop
ftst
inc
aam
add
ds
clc
pusha
cmpsl
dec
mov
pop
push
xchg
scas
daa
int3
and
mov
leave
imul
out
sti
push
mov
int3
lods
shrb
repnz
out
xor
shl
ror
inc
cmpsl
mov
clc
xchg
lds
cli
add
push
mov
pop
sbb
insb
cmp
shr
mov
adc
nop
cmp
sbb
add
lahf
mov
push
shll
dec
xlat
xor
out
jle
jg
dec
cmp
push
mov
lods
outsl
inc
jecxz
addr16
in
mov
mov
xchg
nop
pop
pop
fdivr
xchg
scas
icebp
xchg
stos
or
or
jp
aad
push
jl
mov
scas
and
enter
js
push
test
test
mov
les
push
cmp
mov
push
fnsave
inc
sbb
mov
mov
jecxz
push
mov
xor
mov
jp
add
scas
outsb
das
or
std
adc
mov
sub
add
sbb
in
push
ret
xchg
fimuls
sbb
inc
cs
xor
popa
xchg
imul
cmp
cmp
or
or
in
rorl
imul
sub
out
scas
jg
lods
incb
daa
in
xchg
mov
popf
dec
aam
pop
stos
push
in
inc
jp
mov
or
fsubl
test
inc
cmp
lea
imulb
cmp
mov
call
inc
in
icebp
push
lret
cmpsl
mov
cld
hlt
pop
and
push
cmpsl
jmp
lret
inc
mov
dec
push
dec
sahf
or
sti
mov
sbb
push
frstor
adc
nop
test
sbb
arpl
in
fwait
xchg
mov
pop
cmp
jl
pop
mov
inc
xchg
jge
xor
mov
push
ja
push
in
jmp
push
cmp
or
daa
pop
loop
popf
xchg
mov
fs
mov
les
mov
inc
js
clc
fisttpl
mov
jae
fnsave
xchg
lods
xchg
pop
shlb
add
out
pop
lods
sarl
mov
push
and
and
outsl
inc
arpl
push
je
mov
adc
sbb
jle
jae
pop
adc
cmpsb
je
pop
or
pop
addb
mov
jae
dec
loopne
inc
idivb
inc
sub
loopne
mov
rorb
xor
das
fsubrl
movsb
jle
mov
push
mov
add
xchg
sbb
nop
cs
sti
inc
add
divb
sti
and
repz
es
mov
clc
in
dec
addr16
mov
inc
push
daa
xor
push
cmpsl
loope
test
push
lock
add
mov
adcb
decb
or
and
mov
dec
icebp
ret
xor
jnp
push
mov
sbb
aaa
dec
fwait
iret
mov
out
enter
stos
dec
fmulp
das
fwait
out
cmpsb
sbb
daa
into
test
xchg
repz
movsl
fldenv
mov
mov
xchg
fs
jp
popf
ljmp
fidivrs
fiadds
jns
std
fnstenv
jmp
sub
int3
and
fcmove
mov
ret
xchg
mov
or
mov
loopne
cmpsb
imul
ret
loop
and
adc
clc
and
scas
roll
xor
flds
out
lea
stc
xor
mov
lcall
pop
sub
cli
sbb
lock
loopne
insb
aaa
cltd
push
enter
mov
aam
outsl
and
xor
mov
push
mov
inc
sub
sbb
mov
lods
imul
add
sbb
dec
sbb
sar
popa
pop
lret
mov
push
jbe
fs
xor
xchg
lret
lds
mov
xchg
in
cmp
jb
insl
adc
cltd
pop
fmull
xor
pop
in
cmpsl
lds
and
andl
in
lret
mov
sub
xchg
or
andl
rorl
jbe
shl
in
xor
and
push
cmp
push
aad
fnstcw
mov
repnz
and
push
mov
jle
pop
or
stos
hlt
aas
xor
xlat
xchg
xor
ret
lods
stc
mov
scas
sbb
pop
jae
xchg
jae
pop
std
fnstcw
and
jecxz
sub
adc
inc
mov
iret
inc
out
pop
out
cwtl
jb
push
out
movsb
mov
aam
xchg
sbb
push
repz
xchg
arpl
repz
jns
sub
xchg
int
rclb
call
movsl
cmp
add
and
stc
xor
mov
mov
std
stos
push
and
jae
pop
inc
jns
inc
and
or
xor
jecxz
insl
pop
cmp
movsl
push
cltd
jmp
xor
mov
pushf
movsb
sbb
mov
push
daa
push
test
xchg
xchg
clc
fstps
mov
xchg
loop
pusha
dec
sub
jge
or
ror
int
pop
add
mov
cmpsl
mov
push
adc
ds
int3
add
dec
movsl
or
pop
pop
cltd
shlb
jmp
jno
mov
lcall
das
leave
lods
mov
mov
mov
push
jle
sahf
aaa
das
push
push
mov
xchg
jmp
mov
in
les
or
aad
repnz
xor
call
inc
jmp
int3
mov
dec
mov
mov
inc
xor
push
popf
add
movsb
movsl
fldcw
out
dec
bnd
adc
xchg
lcall
adc
cld
jne
lods
mov
int3
adc
dec
out
test
jae
aad
dec
mov
in
in
cmpsb
int3
mov
xor
cmp
scas
fwait
dec
push
mov
and
nop
xchg
jle
das
cmp
xor
cmp
sub
imul
adc
mov
dec
push
lock
cwtl
or
push
daa
adc
cmp
pop
lods
ljmp
cltd
incb
push
jbe
and
pop
popa
js
test
adc
sbb
scas
fwait
lahf
scas
push
mov
mov
xchg
imul
push
push
add
fnstcw
insb
cmp
shll
xor
inc
sbb
mov
flds
inc
dec
pop
mov
push
out
jnp
or
push
pusha
and
add
lcall
cmpsb
enter
ss
inc
fs
inc
push
sub
xor
jne
jecxz
sub
es
xchg
push
mov
aad
lcall
inc
daa
mov
cld
addr16
aas
vpcmpeqb
shr
sub
mov
fcmovu
inc
out
xchg
mov
lret
sub
pop
or
pop
jp
dec
cmp
and
pop
and
xlat
int
inc
testl
cmp
arpl
aam
jmp
or
inc
xor
mov
inc
aad
add
out
mov
inc
sub
or
and
test
jns
popf
jp
test
insl
dec
popl
inc
mov
push
fadd
sbb
lds
sbb
push
xor
cmp
xor
gs
js
shlb
cmpb
dec
add
add
xor
popa
push
xor
push
fldenv
mov
and
xchg
sub
pop
movsb
mov
movsb
in
adc
in
sbb
cmp
ss
xor
sbb
mov
xchg
push
or
push
xchg
test
mov
das
sub
stos
mov
dec
sahf
lret
sbb
divps
lret
in
xchg
outsl
inc
mov
mov
jle
adc
mov
cmc
sub
je
sbb
popa
lcall
shll
daa
sub
lock
push
lods
call
lock
adc
push
mov
in
adc
in
and
mov
jo
inc
pop
test
jle
mov
cli
push
pop
sbb
mov
and
mov
stc
fadd
xor
jge
imul
popf
push
imul
mov
or
mov
jbe
addb
popa
fildll
mov
dec
outsb
es
xor
pop
push
add
arpl
loop
mov
push
and
mov
cmovno
or
adc
mov
xor
pop
mov
pop
out
fcomi
inc
mov
dec
int
cmpsl
movsb
popf
mov
sub
sahf
pop
enter
std
pop
xor
fwait
out
incl
add
add
aaa
xchg
cmp
push
aad
test
pop
mov
out
gs
bound
adc
and
xor
lods
cs
jg
mov
add
xchg
rcrb
scas
jo
int3
movsl
sub
pop
xchg
xor
inc
cmpsb
pop
push
pop
sbb
mov
and
sub
mov
cmpsb
les
mov
fs
cmp
sbb
pop
pop
lahf
ret
dec
fnstenv
mov
xchg
vcvtss2sd
in
inc
xchg
fdivl
int3
add
sub
jnp
push
std
fs
fs
pop
cmc
adc
mov
into
and
mov
mov
xchg
cmp
in
push
fistpll
sub
fdivrp
inc
mov
add
lods
and
cmpsl
dec
push
jb
inc
cmpsl
add
out
inc
xchg
mov
pop
in
popa
mov
lods
mov
aas
pop
mov
push
dec
mov
xor
mov
cmp
inc
inc
cmp
mov
repz
xchg
cmpsl
test
xor
popf
arpl
mov
mov
sbb
mov
mov
or
jae
push
cmp
cli
jbe
fidivrs
xchg
inc
sbb
ret
mov
or
and
imulb
and
pop
out
out
dec
push
fsubrl
ss
hlt
fucomi
enter
inc
inc
xchg
out
loope
mov
and
sub
mov
adc
pop
aad
pusha
mov
inc
cld
ds
fs
imul
mov
fnstenv
mov
ffree
mov
sbb
pop
pop
cmp
adc
pop
sbb
dec
test
pop
push
pop
adc
mov
lcall
sbb
xor
lcall
insl
in
fisubs
rcrb
dec
out
cli
loope
or
or
xor
addr16
push
xchg
lcall
xor
mov
or
add
jne
ja
sbbb
sahf
inc
adc
cmp
setnp
cmp
mov
data16
ret
loop
popa
adc
xchg
xor
fdivrl
into
addl
in
scas
cmp
mov
in
lods
cli
das
xor
cmpsb
flds
repnz
mov
imul
mov
pop
xchg
nop
jbe
les
jge
jnp
cmp
pop
test
push
in
daa
in
or
mov
outsb
xor
movsl
push
lods
cmp
xchg
insb
or
push
test
ljmp
int
shrl
jno
ja
roll
mov
mov
jne
movsb
dec
cmp
fisubl
lahf
es
shll
dec
rolb
cmp
pop
int3
mov
outsb
jmp
mov
push
push
inc
lds
cmc
add
fstps
and
ljmp
push
dec
int
xlat
mov
pop
das
in
xor
mov
push
pop
mov
les
lahf
lods
stc
dec
lock
push
inc
mov
fisubrs
pop
aad
inc
and
in
sbb
stc
pop
fidivrs
fwait
push
inc
test
mov
fdivrl
loop
test
test
shrb
out
mov
nop
mov
sub
ljmp
or
adc
mov
cmovo
lcall
push
cmp
insl
push
mov
pop
stc
subl
mov
pop
jecxz
jnp
mov
jbe
testl
cmp
fsubl
loopne
jne
rolb
sbb
movsl
int3
movsb
int3
cmpsl
push
fldenv
icebp
mov
xchg
subl
inc
inc
rcrb
xchg
and
sub
and
inc
enter
imul
mov
pop
cmp
jae
xlat
xor
iret
repnz
into
or
sub
jmp
in
xor
faddl
aad
lcall
push
xor
or
insl
mov
sub
mov
lret
iret
inc
xor
cld
mov
push
repz
ret
push
fs
jae
mov
out
cli
mov
inc
in
mov
shlb
lods
mov
fadds
mov
or
mov
shl
adc
mov
inc
icebp
and
cld
mov
scas
mov
xor
fiadds
and
or
xchg
pop
imul
cld
sub
pusha
jl
std
fmuls
push
movsb
mov
xchg
push
mov
push
ret
ret
add
cmp
aaa
adc
mov
pop
inc
out
movsb
popf
out
mov
dec
push
pusha
dec
jbe
in
mov
cmp
mov
fnstcw
xor
es
jl
or
sbb
and
inc
xchg
clc
dec
fnstsw
adc
sbb
stos
cmpsl
xor
enter
and
jno
test
inc
fldenv
mov
and
ret
adc
mov
movsl
js
xchg
ja
sub
dec
mov
lods
les
xchg
jo
hlt
popf
add
sbb
cltd
fcompl
or
stos
outsb
lahf
int
pop
push
or
loop
sub
xchg
shlb
iret
jae
out
xchg
rclb
lea
ja
and
xor
mov
js,pn
jb
pop
enter
mov
mov
xchg
inc
outsb
stos
cmp
aaa
aam
popa
mov
adc
cmp
mov
imul
adc
push
pushf
lock
aaa
out
pop
pop
jae
jl
adc
sub
mov
out
stos
cmp
cmp
adc
loop
cmp
lahf
cmp
cmp
cli
pop
mov
jnp
or
fs
and
fcmovnbe
jge
dec
mov
push
stc
and
sti
and
rol
pusha
out
lds
dec
int3
icebp
cli
out
pop
cmp
mov
test
cmp
xchg
xchg
pop
in
gs
cmpsl
sub
sahf
ficomps
adc
add
cwtl
push
pop
ret
loop
cmp
adc
dec
inc
loopne
scas
xor
cs
les
sbb
mov
cli
push
sub
jno
mov
clc
pop
ja
sbb
inc
std
rorl
movl
pop
jae
cmpsb
add
mov
repnz
arpl
js
in
movsb
xor
mov
notb
xchg
leave
sub
mov
mov
scas
push
insb
mov
xchg
loop
inc
inc
or
or
jmp
insl
inc
pop
scas
roll
sbb
pop
xchg
mov
cmp
aaa
inc
sub
mov
inc
jmp
push
mov
pop
scas
inc
int
push
push
ds
aaa
aad
mov
hlt
xor
xchg
sub
dec
dec
cmp
mov
mov
jp
mov
add
out
loop
inc
add
das
xchg
push
push
or
sub
pop
shrl
mulb
test
cmpsl
mov
mov
test
test
setno
xor
sub
fwait
lock
imul
in
inc
jle
push
cmp
inc
mov
lea
mov
xchg
cmp
sbb
jnp
mov
cltd
in
pop
or
nop
rolb
or
and
in
faddl
test
lods
rcll
fs
out
mov
sbb
lods
fisttpll
sbb
mov
jecxz
and
stc
pop
adcb
cmpsl
xchg
or
js
mov
and
xorb
add
mov
andb
es
daa
jge
jnp
cmc
popf
sub
es
jb
out
lods
inc
int
push
xchg
in
pushf
loop
xor
scas
inc
and
mov
xlat
test
xor
cmpsb
or
dec
int
out
mov
ss
add
jnp
add
sti
pop
aas
xchg
push
aam
test
ljmp
shrb
std
stc
sub
mov
dec
push
jbe
jb
lds
pop
fldenv
std
arpl
jl
scas
dec
or
loop
sahf
mov
into
test
mov
adc
in
adc
pop
data16
mov
adc
sbb
cli
leave
pop
out
adc
mov
adc
out
and
jno
push
popf
mov
mov
data16
jle
das
scas
lock
mov
xor
scas
cwtl
mov
scas
mov
les
lock
xchg
pop
cmpsb
out
dec
stc
lods
test
jecxz
les
sbb
sti
push
xor
xlat
lods
cmp
mov
popf
fwait
and
xor
fcoml
mov
inc
jbe
enter
in
jno
xorb
mov
test
fnstenv
mov
mov
inc
mov
dec
dec
das
push
xor
out
adc
ljmp
test
add
aam
sub
lds
ret
add
movsb
jge
loopne
es
add
std
xchg
lock
das
xchg
inc
mov
add
mov
jb
repnz
xchg
repz
fincstp
adc
cmpsl
mov
flds
mov
gs
popf
adc
insb
mov
mov
sub
ja
scas
sbb
popf
or
sub
insl
mov
jp
shrl
xor
ss
rcrb
xchg
addr16
repnz
mov
mov
lea
jmp
sahf
je
pop
lahf
out
mov
fstps
inc
cmp
call
int3
mov
aam
add
mov
test
ds
sub
stc
push
shl
and
xchg
lahf
subb
dec
dec
repnz
pusha
pusha
mov
cmp
push
repz
mov
cmp
orl
mov
xor
mov
push
cmp
in
ret
out
fwait
mov
js
mov
sahf
xchg
repnz
pop
fucomi
lods
test
fldl2e
test
aaa
cmp
movl
add
mov
lods
adc
rcrl
test
and
jnp
xchg
es
pushf
dec
push
jb
pop
insl
repz
clc
mov
fwait
mov
xchg
pop
cltd
in
clc
bound
int
sub
push
rcl
jg
pop
into
pop
fcomip
int
fadds
or
aam
js
sti
arpl
mov
movsl
out
jl
ret
cwtl
fxch
jp
jecxz
es
push
mov
sti
rcrb
push
sub
cmp
fsts
and
xchg
lock
mov
cmp
loope
scas
and
adc
into
outsl
sbb
mov
iret
cmp
in
inc
pop
jnp
dec
mov
xlat
inc
push
fdivrp
in
mov
into
pop
in
fisubl
and
jno
push
cmpsb
cli
jecxz
in
idivb
pushf
mov
repz
pop
add
xlat
push
sub
in
stos
insb
pop
xor
cld
mov
or
call
and
xchg
sbb
mov
mov
jge
outsl
mov
jns
mov
pop
mov
cmp
jmp
popf
scas
cli
cmp
mov
out
scas
jl
ja
fisubrl
fcompl
insb
push
int3
mov
push
fldt
pop
sbbl
clc
jge
int
addr16
inc
dec
mov
insb
jo
mov
les
pop
and
mov
push
adc
and
mov
sbb
lods
pop
push
sub
inc
js
mov
shlb
and
popf
inc
std
fnstenv
idivb
lds
add
xchg
lods
shll
mov
rorb
jle
xor
dec
pop
inc
sub
negb
cmp
and
dec
in
fwait
pop
lods
fmulp
mov
mov
loopne
jae
mov
lcall
jae
and
mov
icebp
loop
jge
das
and
pusha
scas
decl
shlb
sbb
push
xor
jp
pusha
hlt
push
fdivr
lret
dec
decb
call
jae
fnstcw
jbe
inc
test
xor
fdivr
out
scas
cltd
sbb
dec
loope
jg
mov
test
dec
fldcw
mov
mov
rcrl
pop
fincstp
incb
dec
inc
addl
mov
scas
shlb
call
xor
or
xchg
in
mov
call
cld
add
test
addb
sub
outsl
daa
aam
stc
dec
rolb
lea
rclb
ja
add
mov
mov
data16
pop
out
sti
adc
cmpsl
sub
xchg
sub
aad
add
mov
cmpb
push
outsl
movsb
inc
cmpsb
push
pop
fadds
cmpsl
pop
pop
and
das
mov
pop
dec
inc
sbb
lods
and
test
pop
aad
das
push
and
push
fstps
outsb
mov
pusha
add
gs
das
or
push
pushf
rcrb
sbb
mov
arpl
gs
mov
mov
test
aam
add
adc
fwait
sub
fmul
pop
arpl
aaa
jno
xchg
sub
xchg
fwait
int
popa
lods
test
les
loope
add
cmp
cmp
pop
sbb
es
sub
popa
mov
mov
lods
pop
xor
lcall
sarb
fisubs
js
repz
and
mov
mov
pusha
mov
in
fld
lock
mov
int3
test
xchg
test
test
rorl
add
ja
inc
ficomps
cmpsl
call
insb
jae
inc
mov
aam
rorb
scas
xor
push
xor
mov
imul
ljmp
lea
and
fsubl
shll
sbb
imul
adc
jae
enter
dec
and
add
cltd
jle
xor
push
sbb
test
lahf
dec
and
cld
cmp
fs
dec
mov
push
mov
dec
mov
in
jns
outsl
dec
daa
add
fsubs
inc
roll
or
gs
dec
sbb
sbb
jno
add
xor
xor
mov
pop
or
in
mov
call
inc
or
mov
xchg
dec
lret
mov
lcall
mov
adc
pop
fdivl
mov
mov
jge
fldl2t
inc
out
stc
sbb
add
ja
repz
les
das
in
mov
jmp
lods
xorb
add
pop
xor
movsb
mov
shrb
js
std
fnstcw
pop
xchg
cmp
or
adc
mov
pop
out
cmp
mov
pop
les
xchg
fnsave
mov
stc
sub
outsb
fistl
fsubs
push
and
xor
stos
imul
or
addr16
lds
nop
sbbw
sub
cmp
scas
out
or
cld
mov
popa
or
test
and
xlat
daa
scas
leave
test
xor
pop
or
fsubrs
mov
inc
sub
sbb
test
pop
pop
scas
cltd
leave
and
int3
or
aad
test
sub
mov
sbb
xor
clc
or
dec
in
lcall
or
int
ficoml
sub
jp
push
sbb
rcll
fdivl
pop
lods
stos
xchg
jle
repz
ss
rcll
cmp
mov
sarb
clc
scas
xor
inc
in
out
add
xchg
and
insb
stos
xchg
out
xor
xchg
push
dec
insl
and
sub
imul
xchg
adc
and
lock
psubusb
adc
les
outsl
inc
cmp
das
inc
shr
dec
push
dec
mov
stos
and
adcb
mov
cld
xor
and
outsl
mov
push
icebp
mov
sub
scas
lds
es
xor
xor
aad
add
leave
fmull
data16
test
stos
movsl
andl
mov
test
inc
push
mov
pop
iret
fmul
arpl
loop
insl
jae
xchg
mov
cmp
xlat
gs
aas
and
addl
movsb
jns
jp
mov
shll
faddp
jl,pn
xor
mov
divl
inc
push
dec
mov
add
test
mov
sti
cmp
fwait
and
dec
mov
adc
mov
test
push
sahf
mov
std
mov
dec
bswap
mov
out
or
xchg
sub
cmp
in
out
mov
sbb
push
in
inc
and
repnz
mov
add
xchg
in
cmc
xchg
rcr
mov
fldenv
fsubl
inc
jp
dec
xchg
enter
rcrb
cli
push
mov
mov
ss
enter
rcll
scas
test
es
adc
daa
cmp
in
add
pop
stos
sub
mov
notb
mov
sarl
fisubrs
shrb
loop
mov
int3
pushf
sub
std
or
xchg
rcr
sbb
ss
xchg
pop
and
mov
popf
xorb
inc
test
out
cmp
mov
repnz
inc
lret
scas
fsubrl
pop
std
mov
push
xor
adc
iret
xor
cld
sub
and
jecxz
popf
cmp
cltd
cs
mov
outsb
fcmovb
aaa
push
inc
pop
pop
cltd
ficoms
cmp
cmp
int3
cmpsb
mov
sbb
pop
ljmp
fimull
xorl
push
inc
mov
iret
adc
adc
xor
mov
push
mov
daa
out
mov
inc
scas
popf
fidivs
jne
inc
aad
pop
mov
mov
add
and
mov
test
imulb
das
sbb
jnp
sbb
sub
sub
dec
adc
sbb
dec
data16
shlb
xchg
pop
pop
xchg
sub
cmp
test
or
add
jno
ret
cmc
jnp
sbb
sbb
pushf
mov
inc
jnp
call
and
push
daa
jae
insb
mov
xchg
sarl
cmp
js
mov
or
fs
xor
loopne
cmp
xchg
jmp
scas
pop
and
mov
test
push
in
xor
push
xchg
je
bound
movl
lret
into
outsb
xor
cmp
leave
inc
mov
jg
mov
add
mov
cmpsb
sbb
loope
ja
xchg
push
fsubl
mov
adc
lret
pop
les
ss
xor
xchg
test
sbb
inc
les
cmpsl
mov
arpl
pop
sub
int
or
lret
pusha
insb
pop
xchg
std
sub
cmp
mov
mov
ljmp
data16
jb
addl
nop
sub
lods
jbe
subb
pop
cmp
out
iret
and
sub
test
sub
lds
jge
cmpl
push
lret
repz
stc
sbb
cli
ret
mov
dec
scas
mov
mov
fnstsw
test
jns
or
arpl
xchg
mov
popf
mov
mov
enter
mov
lock
pop
jp
lcall
inc
mov
mov
aad
cwtl
ss
jae
fdivrl
test
imulb
xor
jae
mov
add
test
ja
ss
sub
mov
inc
in
fcmovnbe
pushf
lret
xchg
add
push
or
sub
cld
xchg
jp
aam
ja
test
inc
xchg
andb
mov
aam
pop
add
sub
pop
jl
jns
inc
mov
fisttpll
mov
push
out
xor
mov
mov
dec
leave
jnp
dec
imul
mov
iret
lahf
pop
movsb
mov
or
mov
mov
lods
jns
sub
xor
enter
or
repz
mov
fldenv
pusha
dec
sahf
push
inc
repnz
lret
iret
cmp
or
lahf
call
jne
jnp
mov
jae
xchg
cli
add
jmp
pop
mov
hlt
pop
jno
pop
or
out
hlt
dec
insb
dec
addr16
shrb
sbb
filds
scas
jne
mov
pop
pop
adc
fsubp
inc
sbb
rep
sbb
aam
push
jnp
add
push
insl
jle
jnp
mov
jp
inc
mov
mov
movsl
movsl
and
push
jno
inc
mov
jns
sbb
out
xchg
aad
mov
push
mov
mov
mov
sbb
push
out
sbbb
dec
mov
mov
inc
cmp
jmp
mov
nop
pusha
inc
add
or
mov
sti
enter
add
mov
in
loop
test
call
push
mov
lods
ficoml
cmp
sbb
lret
sbb
fimull
mov
out
inc
mov
rcrb
sub
inc
push
bound
jle
cmp
outsb
aas
mov
out
insb
hlt
jecxz
sbb
rol
fwait
sti
or
mov
pop
test
jge
xchg
lds
push
aas
jnp
cltd
jecxz
dec
inc
or
xor
movsb
sub
sbb
sbb
xorb
mov
mov
mov
outsb
stos
inc
fnsave
js
add
loop
xlat
pop
push
scas
and
js
enter
inc
mov
push
rolb
xor
mov
push
sub
jae
mov
in
scas
cmp
sbb
scas
sub
xchg
std
mov
aad
pop
out
add
scas
jno
fs
or
push
ficoms
out
jnp
sbb
jle
jno
lods
adc
cs
fistps
xchg
sub
sbbb
pop
sub
and
cmp
inc
insl
repz
and
call
inc
mov
arpl
push
xor
or
loope
dec
insl
mov
pusha
mov
xchg
xchg
cmp
lahf
loopne
and
mov
repnz
inc
movsl
testb
sbb
fcomps
push
sbb
nop
sub
nop
cmpsb
fsts
sbb
lds
lods
mov
mov
sbb
inc
addr16
mov
push
in
or
pop
mov
rcr
xchg
inc
aas
ret
push
cmp
gs
mov
push
fcomp
mov
adc
sbb
mov
xchg
dec
fstpl
sarl
fwait
jle
stos
sbb
add
mov
mov
mov
xchg
mov
or
or
hlt
inc
scas
out
and
filds
add
mov
xor
shlb
pop
mov
push
mov
xlat
fs
fistpll
jp
mov
pop
pop
outsb
xor
and
sbbl
stos
pop
jb
add
aas
mov
add
xchg
jecxz
xchg
loop
mov
cltd
mov
mov
xor
test
push
fisubl
in
fmul
mov
pop
pop
cwtl
mov
movsl
xchg
ret
popf
sub
jae
mov
or
cmpsb
inc
movsl
dec
push
iret
repz
loope
mov
xor
insl
dec
int
dec
mov
jo
sub
stos
icebp
pushw
xlat
push
add
ftst
cmpsl
dec
pop
mov
and
lret
mov
sti
ss
fists
std
subl
mov
cmpsb
repz
or
scas
adc
insl
fdivl
jae
or
adc
xor
xchg
hlt
fwait
xor
sub
pop
xchg
push
movsb
mov
jbe
mov
fidivrs
inc
adc
dec
out
sbb
mov
xor
inc
popa
ss
xor
int3
xchg
push
xor
cbtw
jbe
cmc
fwait
repz
and
jae
sti
in
dec
popa
call
fwait
stc
test
stc
jg
movsl
je
mov
lret
push
ficoml
mov
jo
and
outsl
jmp
movsl
out
jle
sti
les
xor
add
stos
sbb
mov
push
sub
mov
add
subb
call
or
test
leave
xchg
and
sbb
mov
and
out
rorl
jmp
cmp
call
inc
sub
sti
mov
adc
push
or
loope
mov
mov
lods
fiadds
push
push
cmp
repz
jne
push
dec
mov
rolb
jge
aam
repnz
fwait
pop
and
rcr
int
lcall
test
pop
jbe
in
push
mov
shrl
movsl
test
sbb
cmpsb
xchg
cmp
enter
fwait
popa
neg
jb
or
inc
pop
push
sti
hlt
sbb
and
fidivrs
mov
xor
and
frndint
and
das
insb
and
rorl
ficomps
or
lahf
pushf
test
mov
push
into
mov
dec
outsl
sbb
test
inc
ret
roll
cmp
rcll
and
lcall
frstors
push
jo
mov
push
mov
dec
lods
popa
pop
xchg
jnp
out
xlat
js
fstp
xor
xchg
push
xchg
dec
pop
pushf
fldt
sub
call
test
out
outsl
aas
cmp
jecxz
imul
sub
lods
or
xor
or
jbe
call
aam
pop
les
cmpsl
push
loope
or
mov
loopne
xchg
in
mov
push
lahf
fwait
int
adc
mov
xor
pop
pushl
ret
mov
inc
in
aam
dec
cmp
push
jl
xchg
cmpsb
or
repnz
mov
scas
fsts
push
push
mov
ret
mov
fmulp
jbe
pop
scas
es
adc
hlt
xor
mov
test
loop
lds
mov
add
xor
and
inc
fcmovne
inc
std
pusha
stc
mov
push
jnp
or
sub
andb
cmp
nop
dec
rcrl
dec
xchg
push
in
lock
cmc
call
push
xchg
push
sahf
icebp
shr
or
jg
xor
ljmp
push
inc
out
mov
pop
jae
jb
lods
nop
mov
addr16
push
ret
testl
cmp
xchg
xchg
mov
mov
xchg
cltd
lods
outsl
mov
pop
cmp
lahf
je
in
test
inc
mov
aad
cmp
pusha
mov
mov
lods
es
adc
pop
cmp
scas
aad
adc
in
repnz
sahf
fildl
cmpsb
and
test
fmull
cmp
cs
in
sub
lret
xchg
in
addr16
fisubrs
cmp
pop
mov
in
gs
dec
or
jmp
js
mov
xchg
xchg
xor
pop
lret
adc
stos
daa
jg
sub
mov
mov
fldcw
cmpsb
shl
sbbb
mov
pop
flds
dec
repz
cmp
cmpsl
sbb
dec
push
or
movsb
lea
movsl
int
lds
pop
test
mov
hlt
jmp
push
cmp
shlb
jmp
dec
add
dec
jo
sar
xchg
sub
test
push
sub
mov
jno
es
xchg
rol
sbb
mov
int
xchg
adc
jae
add
cmp
sub
lock
movsb
jnp
mov
inc
mov
mov
lods
sub
pop
mov
mov
and
outsb
out
and
jno
and
or
sbb
subb
idivb
or
xchg
imul
andps
ds
mov
and
xor
fsts
mov
fldcw
dec
xchg
btr
cmp
add
mov
movsb
out
dec
pushf
mov
aad
scas
jmp
mov
and
hlt
mov
or
aas
cli
pop
sub
push
sti
jmp
and
xchg
lods
and
xor
in
cmpsb
int
mov
outsb
pop
push
mov
mov
mov
fstl
repnz
cltd
js
movsl
cmp
add
mov
pop
add
add
subl
lret
mov
das
ss
inc
jnp
jp
sbb
mov
push
add
add
inc
and
mov
ja
or
jg
xor
imul
jge
xor
inc
fimuls
push
push
jno
add
lea
jns
loop
hlt
shl
jmp
mov
xlat
and
jg
push
adc
lods
push
test
push
xor
lods
pop
repz
inc
add
inc
mov
inc
push
popa
aaa
aam
mov
aad
shll
push
daa
dec
mov
pop
test
sub
scas
fwait
jb
pushf
dec
lods
jne
enter
mov
xchg
inc
daa
xchg
xchg
das
jno
cmp
mov
les
jae
das
push
inc
lret
test
lods
mov
lods
std
andb
pusha
mov
scas
and
test
pop
mov
cs
mov
repz
test
mov
aam
fs
inc
and
into
rorl
mov
dec
xchg
sbb
hlt
xchg
xor
dec
inc
int
mov
sbb
xchg
mov
xchg
enter
push
aam
stos
popf
add
adc
test
mov
push
jg
hlt
mov
inc
push
mov
jb
scas
fnsave
cmpxchg
mov
jbe
xchg
in
xchg
jb
loope
cmp
mov
mov
fisubl
scas
lods
gs
xchg
scas
sbb
pushl
inc
mov
fnstcw
mov
lods
xchg
fidivs
sbb
jns
testb
fcompp
fdivrl
pushf
adc
cmp
and
aas
and
fsubrs
jnp
fisttps
push
lcall
rcll
sbb
mov
mov
jmp
movsl
fucomp
stc
cmp
xchg
jp
call
or
in
rcrl
add
dec
jnp
sbb
xchg
mov
ret
out
sbb
cmp
pop
inc
popa
std
sub
inc
pop
cmp
sub
adc
imul
loopne
sar
lock
dec
pop
ss
xchg
ret
int
fldenv
xchg
repnz
push
in
fldt
out
lds
scas
push
push
xchg
movsb
pop
js
xor
or
xchg
outsb
fs
mov
mov
inc
out
fmull
ja
fidivs
sti
shrb
xchg
mov
push
aas
jae
ja
shll
mov
adc
cmp
in
fnstenv
ficoml
sub
cmpsb
leave
in
jb
mov
sub
out
adc
js
sbb
inc
pop
mov
xbegin
out
mov
arpl
std
dec
pop
out
adc
mov
testb
mov
testb
icebp
repnz
xor
mov
cmp
pop
xchg
and
mov
out
cmp
sub
mov
push
mov
and
inc
xorl
mov
test
and
jle
mov
sbb
ret
aaa
inc
lcall
mov
inc
sub
sub
pop
jno
call
ljmp
cmpl
pop
mov
cltd
xor
int
sub
mov
mov
fdivs
std
repnz
sbb
ss
inc
bnd
jae
sbb
loopne
xchg
movsb
xor
sbb
jns
sub
inc
out
pop
test
jae
pop
es
shl
out
cli
push
lds
jns
movsl
push
mov
xchg
leave
jl
dec
pop
andb
les
mov
movsl
xchg
add
jge
hlt
or
sti
in
pop
test
lret
sbb
pop
xchg
stos
pop
sbb
add
out
outsl
movsb
mov
push
sbb
mov
mov
dec
fsubp
mov
nop
xchg
cli
repz
jae
sarb
fsubrl
loopne
cmp
gs
xchg
adc
std
scas
jg
xor
cli
pop
sub
hlt
mov
shl
push
dec
out
add
out
out
push
and
je
push
sub
imul
loopne
outsl
jg
shll
out
sbbl
fcoml
xor
pop
fcmovne
push
out
mov
aad
jb
jp
and
test
pop
outsb
xor
xor
add
mov
dec
add
xchg
add
subb
add
xchg
cmpsl
cmpsb
or
pop
lret
sbb
mov
xor
ja
hlt
pcmpeqb
and
ret
loope
inc
aaa
pop
out
pushf
mov
push
jbe
les
or
mov
andb
aas
or
repz
mov
popf
cmp
pop
add
idivb
bound
inc
decb
cs
into
shll
xchg
mov
std
sti
pop
and
pop
mov
dec
negb
xor
sbb
jo
je
or
idiv
jmp
jmp
jo
jae
lock
scas
cmp
je
mov
lods
xchg
scas
jl
sub
xchg
hlt
ficoml
adc
pusha
mov
cmp
and
in
pop
rcrb
lea
add
pop
mov
inc
cli
mov
lods
pop
sahf
and
repnz
mov
jno
inc
add
pusha
inc
pushf
add
les
pop
push
cmp
lods
scas
fabs
lret
rcl
inc
add
mov
inc
test
insl
in
out
mov
xchg
scas
mov
sbb
sahf
int
mov
mov
in
mov
pop
mov
ficomps
push
sbb
adc
xorl
xchg
mulb
sbb
mov
jle
nop
mov
fstps
adc
dec
mov
or
mov
jae
jecxz
lds
sbb
repnz
popf
outsb
mov
out
scas
loop
enter
popa
fisubs
jns
jbe
icebp
sub
test
ss
insb
adc
cmp
jg
mov
hlt
stc
out
jge
sub
test
mov
xchg
lret
jnp
sbb
test
fidivrl
sub
repnz
xorb
push
xchg
mov
push
idivl
and
shlb
jp
jl
xchg
inc
push
lahf
fdivrl
cmpsl
mov
and
imul
adcb
lcall
xchg
es
daa
jae
sub
pop
adc
cmc
add
fiadds
dec
jo
jmp
jmp
std
filds
cmp
mov
fldcw
sub
add
in
push
cmp
shrl
test
in
fucom
and
in
jge
push
inc
dec
bound
xor
mov
or
push
lds
cmp
divb
jp
out
mov
aam
subb
repz
popa
xor
push
cmp
mov
jo
sub
aad
xchg
and
cmp
sahf
pop
sahf
test
inc
mov
pop
ficoml
test
lret
sub
cmp
out
fwait
xchg
lret
test
pusha
add
cmp
jo
mov
xchg
cmp
sti
dec
ss
mov
mov
in
push
mov
inc
daa
xor
inc
pop
inc
int
pop
leave
adc
mov
repz
addr16
fwait
sbb
adc
cmp
loop
test
adc
mov
push
stos
inc
addl
lcall
nop
inc
xor
into
inc
pop
inc
xchg
sub
aad
and
test
es
clc
fldenv
clc
mov
lds
jge
mov
xchg
dec
mov
mov
cmp
shlb
dec
add
mov
fldenv
shlb
push
sub
sbb
add
and
repnz
cmpsl
sbb
and
xor
insl
arpl
int
push
in
mov
mov
cld
push
sti
pop
cmp
lcall
inc
sti
int3
jae
inc
add
mov
sbb
lock
fisubl
movsb
repnz
push
lock
dec
mov
adc
clc
mov
pop
repnz
inc
inc
movsb
cmp
test
inc
ficoml
mov
push
jmp
hlt
or
jge
dec
pushf
or
push
jns
inc
mov
inc
int
loopne
popf
mov
cmpsl
cltd
push
pop
add
int3
or
pop
test
dec
fwait
adc
mov
inc
movsl
lahf
test
movsl
rol
push
mov
mov
lahf
pop
int3
aaa
cmpsl
sbb
fdivrl
out
idivl
xor
dec
push
nop
sbb
stos
jmp
inc
repz
pop
xchg
into
fs
inc
in
jns
ja
adc
mov
pop
xor
out
jle
mov
leavew
mov
cmpsb
fmull
lcall
gs
es
clc
test
int3
popa
cmp
adcl
and
mov
mov
xchg
fsubr
ss
or
cmp
sbb
lahf
xor
and
imul
xlat
icebp
subb
jbe
or
cmpsb
into
pop
test
into
cmp
cs
pop
movsb
dec
sbb
push
lods
lahf
add
inc
loopne
pop
scas
nop
jmp
mov
test
and
gs
mul
rcr
std
inc
adc
inc
push
dec
and
gs
data16
jmp
jno
test
mov
fistpl
mov
outsl
ret
into
mov
inc
and
insb
in
sahf
sub
adc
xchg
movsl
mov
cmp
jns
mov
jbe
dec
dec
cmpsb
xor
inc
es
flds
xor
lock
addr16
sbb
add
cs
insl
mov
cmc
stc
test
ret
jo
jp
stos
sub
sarl
jmp
push
push
hlt
fidivs
push
xchg
mov
fisubs
subl
lret
movsb
int
test
pop
xorl
jnp
cmp
sahf
xchg
or
mov
jnp
ljmp
xchg
jo
fdivrs
or
test
fcom
out
out
pop
adc
icebp
es
repz
mov
je
adc
dec
and
ja
hlt
test
stos
cmp
data16
fstpt
loope
xor
jmp
movq
jno
loope
mov
sub
sbb
dec
mov
sub
or
iret
popf
sbb
aam
jbe
mov
dec
push
stc
mov
pop
dec
push
mov
push
ret
lock
sub
std
jge
dec
out
clc
and
push
push
js
aad
subl
ror
mov
sub
cmp
lods
sub
xor
inc
sub
int
dec
jg
push
icebp
lock
mov
out
push
std
popf
sub
into
push
mov
dec
mov
mov
jnp
iret
xchg
fidivs
jns
push
in
adc
adc
icebp
fldenv
mov
push
addr16
xor
scas
repz
daa
push
aam
dec
loope
xor
neg
mov
scas
jl
popw
pop
jmp
repz
loopne
int
adc
enter
movsb
je
mov
inc
sub
addb
mov
sbbl
mov
sub
out
sahf
push
xchg
pushf
aas
inc
mov
inc
push
mov
or
mov
pop
add
mov
cmp
aam
mov
xor
ljmp
shl
mov
fs
mov
jg
repz
lds
fnstcw
xor
mov
outsl
icebp
jo
fdivl
cmpsb
jle
push
fchs
loop
movsl
adc
outsb
cwtl
sbb
fs
mov
test
fdivr
int
fstps
mov
pop
or
mov
push
pop
repnz
and
test
and
insb
aad
mov
and
xchg
jno
xchg
sub
and
cmpsb
ljmp
icebp
stos
in
and
add
xchg
mov
push
nop
sub
sbb
fsubrl
xor
cs
ficomps
mov
xchg
lcall
and
cmp
jae
scas
inc
sahf
mov
cmp
sbb
or
xor
add
mov
dec
out
lods
rorl
xchg
into
subl
lods
ss
xor
xchg
ss
outsb
fwait
mov
lods
data16
mull
push
addr16
push
jmp
hlt
stos
sub
jbe
add
cmp
cmp
push
sbb
enter
aaa
pop
testl
insb
scas
cmp
jle
cmp
gs
stos
dec
in
mov
sbb
cli
jae
mov
mov
pusha
xchg
inc
pop
lcall
mov
testl
out
jl
fnstenv
scas
aam
test
mov
mov
les
pop
adcl
xor
sbb
repz
adc
aas
out
and
cmp
mov
jb
or
aas
dec
add
fucompp
cli
mov
mov
jns
cmc
pop
push
fstps
cmpsl
stos
push
daa
aaa
lods
popf
test
push
imul
xchg
loop
mov
test
mov
jno
cmc
loopne
xchg
int3
xlat
adc
xor
cmpsb
lods
cmove
in
dec
xor
pop
ret
push
addr16
xor
pop
lods
dec
test
push
decl
mov
stos
hlt
hlt
loope
xchg
rolb
lods
fwait
int3
xchg
mov
out
mov
fldenv
mov
ja
cmp
mov
mov
std
pop
testl
push
subl
sub
sub
push
cmp
sbb
mov
test
fldt
pop
inc
loopne
stc
mov
cmp
xchg
scas
dec
jecxz
into
pop
sbb
pop
push
cmp
int
sub
lea
xchg
cmp
xchg
mov
fxam
xor
cmp
sbb
jno
movsb
sti
in
rcl
and
dec
mov
push
out
xor
shll
sahf
mov
cmp
push
cmp
and
push
mov
outsl
sbb
pop
sbb
rcr
jmp
andb
gs
sbb
aas
fsts
sti
dec
outsl
test
xlat
pop
jnp
enter
test
inc
sbb
aam
arpl
jl
std
mov
sbb
mov
outsb
pop
cld
ja
rcrl
mov
std
movsl
mov
insb
enter
inc
push
inc
push
fld
lcall
xor
int
adcb
mov
xchg
sahf
out
cmc
dec
sbb
icebp
push
xor
aas
iret
jecxz
push
lock
decl
jmp
stos
jnp
fs
inc
pop
sbb
xlat
movsl
xorb
mov
mov
cs
xchg
xchg
into
dec
gs
mov
mov
int3
mov
lahf
stos
lock
pusha
aad
mov
inc
adc
adc
jle
mov
int3
mov
sbb
dec
push
push
dec
add
pop
cmp
adc
mov
fstps
inc
and
test
aas
out
ss
mov
adc
gs
jo
lahf
sbb
mov
sbb
sbb
or
int
and
mov
into
xchg
in
adc
xchg
std
das
adc
cmpsb
mov
aad
fiadds
inc
mov
push
push
xor
in
imul
fwait
cmp
subb
in
testb
sub
push
aad
rcrl
loopne
sub
and
sahf
addr16
cmp
enter
inc
shrl
push
sbb
pop
mov
call
ret
adcb
jecxz
popf
jge
lock
imul
mov
jmp
lahf
cmp
stc
xchg
sub
daa
mov
fcoms
repz
shl
nop
into
adc
mov
jle
pop
in
test
fldenv
out
inc
out
repz
das
adc
jmp
mov
adc
cmp
pop
cmp
scas
mov
xor
dec
test
std
test
mov
xchg
scas
out
adc
addr16
dec
pushf
icebp
fld
xchg
push
cmpsb
stc
ret
mov
stc
ljmp
mov
add
es
cmp
lret
out
out
dec
push
mov
xchg
scas
pop
movsl
stc
jns
push
push
pop
lret
idivl
movsb
pop
adc
push
inc
es
xor
test
push
lods
sbb
lret
sbb
or
sub
xor
jno
push
jecxz
mov
std
dec
cmc
push
mov
jbe
cmp
pop
js
addr16
aaa
add
divl
and
push
lret
loop
push
call
stos
loope
stos
xor
cwtl
dec
inc
mov
jecxz
test
mov
insb
paddw
ficoms
fidivs
mov
push
xor
sti
adc
pop
sbb
daa
push
test
mov
jle
jb
add
repnz
dec
mov
xchg
xlat
out
sub
out
and
inc
scas
das
test
jns
mov
das
vprotd
pushf
xchg
enter
push
cmpsl
int
xchg
inc
mov
cwtl
lcall
cmp
jecxz
xor
or
inc
mov
test
int
jmp
lret
mov
rclb
fcompl
pop
lret
popa
and
aam
jb
sbb
sub
aam
mov
std
xchg
cmpsl
xchg
mov
sub
pop
ss
faddl
inc
ss
pop
mov
into
imul
and
inc
in
mov
fidivrs
xchg
jecxz
outsl
xor
pop
push
inc
xor
mov
push
sbb
in
call
jl
test
push
sub
or
dec
addl
test
sub
jne
dec
lock
push
mov
or
mov
data16
jbe
pop
push
xchg
and
inc
pushf
jge
add
adc
in
loopne
push
enter
scas
pop
cli
jmp
scas
pop
rcll
loope
out
cmp
imul
mov
scas
jl
push
xor
aam
adc
push
loopne
pop
mov
das
shrb
push
ficompl
push
xor
lcall
xlat
adc
dec
add
mov
nop
adc
pop
and
xchg
inc
int3
pop
push
stos
roll
in
add
in
out
push
ror
es
xor
jle
sbb
sub
es
sbb
in
or
xor
mov
jnp
mov
jecxz
test
inc
sbb
into
cltd
push
fistps
jns
lea
das
insl
sub
mov
loope
inc
test
negl
das
scas
pop
and
imulb
xlat
pop
add
push
movsl
or
mov
andl
repz
icebp
enter
or
out
xor
pop
push
test
mov
loopne
xchg
cmp
enter
ljmp
lret
std
les
push
lods
or
push
test
mov
movsb
fmull
adc
test
test
nop
sti
cs
es
push
ror
inc
call
push
xlat
pop
pushf
and
iret
mov
xor
dec
fnstcw
sbb
pop
arpl
out
daa
in
xchg
mov
xorl
or
mov
outsb
test
lcall
pop
test
add
daa
jae
jle
push
aam
jns
outsb
std
adc
xchg
sbb
out
sbb
fldl
mov
push
or
mov
outsb
jae
loop
jp
movsl
dec
adcl
cmp
lcall
pop
xchg
mov
dec
movsb
dec
xchg
lods
and
mov
xor
push
inc
std
das
xchg
imul
cmp
jbe
out
int3
or
in
das
inc
lret
xchg
outsl
pop
jge
mov
dec
cmpsb
push
data16
ficoms
push
and
dec
adc
iret
jl
stc
and
in
xchg
addr16
mov
fisttpl
adc
xor
inc
inc
repz
push
fidivl
movsb
xchg
scas
or
cmp
shrl
icebp
pop
fisubrl
imul
insb
lods
xchg
out
mov
fnsave
jp
xchg
adc
push
movsb
push
mov
or
sub
dec
mov
mov
out
mov
push
loop
shrl
dec
out
int3
setl
xor
arpl
into
mov
stos
dec
int3
jg
aaa
aas
in
sti
test
sbb
aaa
sub
in
xor
inc
add
xchg
push
sbbb
cmpsl
movsb
xorl
xor
cmp
rep
adc
and
xor
into
daa
sbb
xor
sbb
mov
ftst
fsubp
int
pop
pop
pop
int3
insb
push
and
push
lds
and
ret
movsb
pop
adc
jno
adc
mov
xor
nop
pop
pop
mov
adc
lods
mov
popf
das
dec
sub
imul
jnp
fxch
shl
push
pop
push
stc
imul
mov
mov
add
out
mov
test
lds
xor
jle
mov
gs
insb
xacquire
lahf
xchg
maxps
addb
aam
out
or
dec
jno
clc
out
mov
pop
outsl
sub
fdivrp
jo
or
test
mov
push
popf
mov
sbb
push
ficomps
sbb
scas
jle
les
pop
movsl
mov
int
movsb
testb
and
sbb
cmpsb
jmp
sbb
jg
mov
out
add
les
xchg
sbb
in
fimull
sbb
inc
cwtl
dec
xor
inc
int
fidivrl
inc
and
pop
mov
mov
jge
xor
dec
movsl
dec
movsl
or
cmp
adc
jle
repz
jnp
pop
jo
gs
xor
movsb
mov
cmp
jge
pushw
jno
add
cmp
mov
into
cmp
test
jbe
shlb
subl
jle
mov
push
inc
pop
jmp
stc
mov
mov
xchg
mull
ja
stos
test
test
mov
stos
adc
or
addr16
pop
nop
out
repz
add
inc
mov
notb
out
pop
xchg
fbstp
add
mov
push
cmpsb
cmp
inc
in
dec
sbb
daa
sbb
sbb
aaa
jns
xor
repz
mov
js
and
scas
pop
mov
dec
loopne
mov
pop
fwait
cwtl
sbb
ja
dec
repz
jnp
mov
iret
into
std
xchg
shll
sbb
cmp
cmp
sahf
out
insb
stos
dec
mov
jle
dec
cmp
or
sbb
sarl
mov
daa
in
push
push
and
cmc
cmp
mov
sub
mov
xchg
stos
sub
xor
test
jbe
fnstenv
cmp
mov
cltd
sub
xlat
mov
xor
push
iret
push
mov
inc
fwait
or
push
subl
xchg
loopne
and
test
into
xchg
add
je
sbb
or
out
movsl
xchg
std
jb
mov
lods
and
lds
lea
sub
and
sub
mov
mov
out
mov
mov
rorb
enter
cmpb
fadds
jecxz
mov
stos
dec
jae
fldl
in
outsb
orb
scas
cwtl
addr16
cmp
lods
ja
divb
and
in
xchg
es
sbb
and
scas
in
in
out
pop
mov
push
lretw
push
pop
mov
fldenv
add
xchg
and
mov
xorl
repz
idivb
lods
xor
jmp
jge
popa
pop
push
push
nop
jmp
nop
mov
jbe
push
cmp
mov
pop
fildl
mov
inc
btr
lcall
scas
mov
dec
jae
jg
hlt
jmp
dec
scas
add
dec
inc
mov
pop
mov
cmp
in
mov
cs
push
sahf
ds
push
mov
mov
push
xor
adc
adc
mov
loope
cmp
hlt
jae
fwait
and
cmp
pop
cli
rorb
jns
ret
add
xchg
scas
cmp
icebp
mov
or
xor
jg
in
in
mov
and
sub
icebp
mov
xchg
in
add
nop
fcomi
xor
sub
xchg
sbb
cld
lods
jno
lds
faddl
mov
sbb
das
shll
cmp
xlat
fistl
jbe
subb
push
mov
bound
stos
push
mov
repz
imul
int3
push
into
or
add
dec
das
push
xchg
rolb
or
test
and
mov
imul
repz
pop
jns
push
icebp
mov
out
mov
xchg
and
sub
xor
xor
sahf
test
popf
sub
out
xor
cmpsb
enter
push
sub
test
fld
js
cld
das
in
cmp
or
pop
insl
pop
adc
movsb
flds
ret
jo
aad
push
inc
in
xchg
jg
pop
dec
adc
or
dec
daa
mov
or
sub
mov
hlt
lods
loope
jl
sahf
jns
sbb
int
cltd
mov
xchg
filds
movsl
xchg
xlat
xor
sub
sub
jbe
dec
push
outsb
mov
mov
faddp
mov
pop
pop
jbe
rcrl
inc
inc
jae
jbe
scas
cli
pop
mov
push
in
ret
sub
mov
add
lcall
hlt
and
in
sbb
out
pop
scas
mov
jmp
pop
je
add
xorb
add
mov
cmc
scas
ja
jl
sbbb
mov
fnstenv
gs
les
push
jecxz
mov
mov
in
jae
scas
inc
data16
jmp
scas
mov
cmp
cli
sarb
jmp
icebp
push
mov
xchg
flds
or
fsubl
dec
ficoms
or
inc
sub
test
mov
iret
mov
bound
pop
pop
push
sub
jae
out
dec
arpl
xchg
test
in
stos
rorb
cld
gs
pusha
es
dec
xchg
lahf
mov
ss
std
movsl
sbb
xor
pop
pop
fiaddl
pop
mov
or
out
xorl
cwtl
frstor
inc
mov
cmpsl
out
cwtl
fsub
fistpll
cmpsl
sti
sti
xor
pop
mov
inc
xor
xchg
lret
loop
divl
xchg
adc
test
inc
std
push
scas
lock
sub
dec
sub
xor
adc
scas
mov
imul
in
fmull
sar
xchg
cmp
xchg
jb
xchg
sub
loop
mov
test
in
push
and
mov
xlat
jbe
jmp
icebp
pop
mov
lcall
push
fucom
mov
inc
jle
jno
jo
and
push
ds
sbb
pop
add
bound
inc
scas
xor
addr16
mov
aam
xlat
mov
jecxz
arpl
setae
push
sbb
shrl
add
inc
mov
push
cmp
mov
jno
xor
test
and
popf
fs
in
data16
mov
pushf
jecxz
or
cmpsl
mov
scas
xchg
jb
std
jnp
mov
adc
test
jae
sbb
sub
lret
in
mov
fcoms
lcall
jge
out
aam
mov
xchg
xchg
ror
add
cmpsb
mov
in
test
icebp
fstps
sahf
fdivp
add
sub
test
and
push
rcrl
cmpsb
jns
scas
and
lods
enter
dec
fucomi
dec
inc
fucomip
adc
mov
loope
sbb
jnp
repnz
xchg
sarb
mov
out
and
imull
mov
jo
test
jnp
imul
push
stos
shufps
test
mov
push
rep
sub
jae
out
mov
ja
fsubrl
into
mov
fdivrp
fs
pop
or
dec
int
and
pop
bound
sbb
cmp
sbb
movsl
xchg
pop
cltd
push
sub
xlat
add
and
mov
xor
addr16
lret
and
scas
test
xchg
out
inc
scas
jmp
jnp
push
inc
scas
inc
pop
addl
jmp
popf
jae
inc
neg
or
or
rcrb
sbb
divb
and
sar
or
int3
jle
or
fcompl
and
cmp
out
jno
pop
loop
pushf
test
out
enter
ret
jge
out
inc
adc
cltd
add
mov
es
clc
push
mov
push
arpl
lods
fcmovu
xchg
xchg
dec
mov
lea
ss
popf
inc
ljmp
mov
lds
mov
sbb
vpunpckhwd
cwtl
and
out
xchg
test
xor
lahf
mov
test
pop
fs
cmp
and
inc
into
mov
js
pop
and
movsl
mov
aas
scas
xor
stos
pop
jo
inc
lea
fwait
or
xor
je
cmp
push
ret
or
cld
ljmp
test
fwait
sub
stc
mov
mov
mov
addr16
test
jle
and
xchg
mov
fldlg2
fnstcw
daa
mov
stos
push
out
jae
int
mov
in
mov
xchg
into
fucomi
fnstcw
out
popf
loopne
cwtl
push
test
dec
ja
and
adc
pop
xlat
test
popf
mov
mov
test
jo
ficomps
cmp
addr16
movsb
fsts
xor
movsb
test
mov
divb
jge
cmpsb
and
cmpsl
fwait
shrb
push
and
or
imul
scas
or
jge
pop
mov
std
cs
std
adc
movsl
stos
mov
sarl
cs
pop
dec
push
push
jmp
push
jge
mov
sbb
aas
mov
jb
lds
in
and
insb
xor
add
inc
xor
movb
aam
sbb
es
mov
or
out
mov
adc
out
xor
mov
test
mov
xchg
in
xchg
mov
imul
jnp
movsb
mov
mov
movsb
mov
in
ljmp
mov
test
mov
xchg
mov
dec
fldenv
stc
call
enter
loop
sbb
push
dec
sbb
pop
cli
fnstsw
in
repnz
fidivrl
push
xor
xchg
repz
in
push
xchg
mov
jb
cmp
ss
or
mov
mov
sbb
xchg
faddp
sub
ljmp
or
inc
xor
stc
mov
mov
testb
jns
pop
flds
sbb
mov
sbb
cli
ds
sbbl
mov
mov
cltd
jb
shlb
pushf
pop
mov
addr16
sahf
ja
lcall
mov
xchg
in
lods
pop
add
lods
xor
fnstcw
xor
jo
dec
fiadds
sbb
mov
fwait
push
mov
lock
add
inc
mov
imul
lret
fstps
sti
sti
dec
and
sub
mov
mov
jno
pop
cmp
pop
popa
int
lcall
sarl
lret
fs
jne
scas
roll
leave
lods
stos
or
test
mov
pop
iret
xchg
insl
mov
sti
mov
mov
adc
push
mov
flds
inc
xor
sahf
test
fldl
ret
push
mov
xor
scas
rclb
movb
add
pushf
psubsw
sbb
cmp
xchg
in
mov
cli
fldl
fsubr
push
mov
loop
dec
xacquire
or
jmp
in
pop
dec
aam
jb
rol
or
in
cmp
loope
lahf
or
fs
stos
ret
fsqrt
mov
mov
mov
cld
cmp
xchg
addr16
stc
cmpsb
fwait
in
imul
sub
fcoms
test
adc
test
loope
sbb
sbb
outsb
mov
or
lods
xchg
and
xor
fsincos
xchg
mov
test
int3
scas
popa
mov
sbb
mov
sti
dec
fwait
lcall
xlat
mov
sbb
add
out
xchg
inc
fidivrs
loop
bound
cmpsl
push
lahf
shlb
repz
fidivrs
xchg
sbb
adc
cmp
push
dec
mov
ror
or
hlt
out
or
and
in
mov
push
adc
sub
sub
imul
notb
call
leave
int3
cltd
mov
out
xor
call
push
add
inc
aam
mov
inc
dec
sub
fidivrs
add
ljmp
jae
inc
mov
popf
std
mov
sarb
pop
sbb
sbb
and
std
cmp
adc
inc
insb
ljmp
mov
dec
scas
cltd
push
pushf
test
mov
pop
adc
outsl
clc
cmpsb
cmpsb
rorl
xchg
stos
imul
fisubs
xorl
adc
fildll
inc
sahf
pusha
shll
dec
xchg
mov
loopne
mov
jge
rcr
and
adcb
cmp
sbb
mov
loope
cmpsb
mov
shll
lcall
roll
xchg
ja
cmpsl
ja
adc
pop
dec
cmp
jmp
insl
push
adc
sbb
and
inc
std
mov
xor
nop
shl
cli
xchg
cmpsl
xlat
inc
mov
lods
shrb
aas
test
fdivrl
pop
cmp
divb
decl
js
jno
test
test
lea
sbb
mov
addr16
sbb
stc
pop
insl
inc
mov
adc
dec
stos
cmp
or
sub
jle
xchg
jns
in
arpl
mov
jbe
pop
das
test
and
lods
dec
mov
mov
mov
aad
sbb
pop
inc
adc
outsb
cmp
fcom
mov
subl
sub
and
add
dec
mov
or
out
cmp
scas
jecxz
jp
movsb
push
push
cmp
loopne
jp
inc
sub
pop
inc
mov
leave
insb
xchg
sbb
jnp
scas
cmpsb
dec
sbb
orb
dec
lahf
arpl
insb
fstps
pop
xchg
stos
sbb
push
dec
daa
mov
adc
xor
pop
push
mov
enter
adc
pushf
mov
test
mov
faddl
cmp
mov
dec
push
daa
and
sbb
mov
cmp
lcall
fisttpll
movsb
movsb
mov
pop
inc
mov
xchg
lods
scas
test
mov
sbb
mov
jg
nop
es
out
call
enter
dec
add
or
data16
inc
add
pop
test
lods
rcr
mov
scas
es
fnstsw
xchg
loopne
cmpsl
cmp
mov
sbb
mov
pop
test
mov
mov
mov
stos
cmpsb
test
test
bound
push
aaa
popa
cmp
vpmacssww
fisttpll
mov
stc
and
pop
inc
push
jno
cmp
loope
add
adc
sbb
cmp
lea
push
out
cmpsl
pushf
mov
sbbb
mov
or
xchg
mov
arpl
das
push
repz
rcll
add
pusha
insb
sub
sti
test
scas
sbb
mov
in
mov
std
popf
cmp
mov
jp
fstpt
inc
fiaddl
dec
push
jno
jbe
ds
xchg
ds
mov
clc
fsubl
pop
sub
pop
mov
sub
jns
cmpsl
dec
mov
dec
mov
or
mov
mov
mov
lds
ja
pop
pop
out
fnstcw
insb
idivb
pusha
fidivrs
jp
mov
jns
xchg
lock
pop
cmp
xchg
push
and
sub
mov
sub
jb
inc
lods
pop
and
repnz
xchg
inc
aad
push
stc
mov
xchg
jle
mov
jno
cmp
lock
mov
add
inc
mov
mov
xchg
rolb
cld
test
jnp
stc
fldenv
leave
jp
mov
adc
out
rcrb
test
cmp
jnp
add
and
add
fs
fldt
or
and
push
fsubrp
jecxz
or
xchg
jnp
daa
xchg
mov
and
cwtl
lcall
and
int3
lret
stos
jp
addr16
lods
in
scas
mov
clc
inc
jo
mov
xor
pop
js
in
lahf
adc
inc
xor
fldenv
sahf
xor
and
loopne
cmpsb
or
dec
lret
shl
mov
fisttpll
cltd
iret
lret
cmp
or
xchg
pop
arpl
andb
test
jae
xor
sub
das
pusha
cmp
jp
mov
dec
sub
inc
xchg
or
das
sbb
xlat
xchg
add
jge
cmp
loop
jo
push
test
mov
xor
inc
mov
sub
int3
xchg
mov
popf
add
test
movsb
inc
flds
push
mov
jp
mov
and
xor
jne
fnstenv
cld
jno
aas
in
mov
jp
pop
inc
flds
addr16
lcall
data16
test
dec
jne
rorb
mov
mov
orl
imul
mov
jp
ret
ret
cmp
test
aam
test
push
in
fsubrl
cmpsl
loopne
addr16
in
push
pushf
jae
dec
pop
dec
mov
pop
xchg
add
cld
inc
push
sbb
push
into
xor
mov
mov
insl
mov
mov
dec
jecxz
pop
shrb
test
xchg
and
push
mov
loop
sbb
mov
mov
jnp
int
pop
cmp
imul
cld
xchg
mov
xor
mov
bound
lds
dec
add
repz
mov
outsb
cmp
ret
outsl
and
out
movsb
add
and
fiaddl
fnstsw
inc
aam
inc
sbb
repnz
fadd
fldcw
inc
or
dec
inc
jmp
inc
fcompl
jnp
cli
fwait
mov
lds
sbb
and
and
sub
jl
and
lods
mov
daa
adc
pop
movsl
sbb
xor
sti
xor
int3
xchg
data16
mov
ss
test
ljmp
sti
and
sahf
bound
sub
mov
pop
sub
adc
hlt
fisubrs
gs
sbb
and
subl
mov
jl
imul
cli
cmp
mov
mov
int
dec
pushf
into
cli
insl
stos
jns
pop
cld
xchg
aaa
xchg
movsb
push
cmp
cmpl
push
jbe
jno
in
in
cmp
xchg
mov
test
push
flds
push
into
jecxz
sbb
flds
inc
pop
push
outsl
mov
cmc
shll
jle
in
ret
std
rcl
stos
je
repnz
mov
mov
sbb
test
mov
inc
sub
mov
jl
pop
fadds
stos
in
sbb
mov
jae
sub
inc
xor
rclb
cmpsl
adc
cwtl
or
and
or
outsb
rorb
mov
insb
aad
and
mov
dec
sbb
mov
clc
nop
inc
mov
sbb
rcl
cmp
pop
inc
es
mov
test
fidivs
lods
ds
movsb
imul
pop
bnd
jp
mov
mov
add
popf
jno
stos
inc
fld1
xor
adc
xchg
lock
push
es
iret
jns
sbb
jb
jecxz
xchg
leave
or
pop
test
dec
jnp
cmp
lods
inc
ret
jno
xchg
dec
leave
arpl
jmp
std
xor
mov
mov
or
scas
sub
call
pushf
test
mov
popf
addr16
scas
mov
into
jp
cmpsl
mov
ffreep
insb
out
idivb
shl
jle
cmpl
jge
cs
inc
mov
push
sbb
sub
in
fwait
movsb
xchg
sbb
pusha
xor
enter
test
push
loop
scas
lcall
data16
filds
scas
imul
xchg
aad
add
sahf
add
xchg
sti
lds
fcmovnbe
movsl
test
lahf
jns
js
je
mov
fcoml
add
iret
jnp
lahf
and
ds
ret
rcr
mov
ficoms
sbb
repnz
cli
sbb
js
adc
sbb
pop
and
cmpsl
cmp
cs
je
ja
xor
jl
mov
or
repz
xor
pop
push
xor
ret
and
push
arpl
dec
jnp
add
stc
das
into
push
sub
es
movsb
mov
push
ds
aas
fcompp
andl
lods
sub
stos
out
dec
imul
pushf
mov
loopne
test
cmp
and
scas
adc
push
inc
inc
negb
xchg
mov
pushf
clc
inc
pop
mov
aam
mov
and
fldl
in
mov
cltd
jbe
in
and
add
int
xchg
mov
or
mov
sbb
pusha
insl
mov
inc
jmp
jb
push
jns
testl
mov
in
pop
mov
ds
inc
fnstcw
enter
cmpsb
andl
dec
into
dec
push
in
insb
movsl
inc
jnp
cmp
addb
push
data16
and
js
dec
pop
xor
sbb
lock
ficoml
int3
fadd
arpl
in
inc
jl
cmpsb
fisubs
inc
sbb
movl
jbe
out
clc
fsubrl
out
push
lods
dec
mov
jmp
inc
fstp
fnstenv
jl
lret
pop
ljmp
bnd
sub
cli
lahf
fnstsw
push
cli
pop
std
in
sub
gs
in
hlt
cmp
fldcw
jle
push
pop
pop
lret
mov
aad
pushf
fstp
ret
clc
push
sub
add
dec
jnp
jb
mov
std
jns
cmp
and
scas
mov
sub
popa
cmp
sub
push
das
enter
sub
in
mov
shrl
cmpl
movsb
mov
mov
push
in
sub
cmp
push
test
nop
mov
insl
push
mov
mov
shlb
das
gs
bound
mov
imul
out
icebp
mov
push
add
and
mov
mov
iret
insl
push
repz
shrb
xor
add
popa
icebp
mov
aad
jb
sub
int
add
int3
fld
and
je
sti
sub
push
cs
mov
and
jne
push
add
sarb
cmp
int3
fstl
int
mov
push
xor
mov
mov
push
mov
or
fcomps
xor
mov
shlb
push
lock
outsb
stc
xor
push
call
inc
call
dec
mov
push
mov
test
pop
xchg
ds
add
rcl
and
iret
push
andl
cmp
xor
testl
inc
cltd
add
mov
inc
and
mov
cmpl
gs
je
jmp
pop
jge
mov
cmp
lea
sub
sub
out
xchg
sub
shll
pop
adc
jecxz
dec
and
mov
mov
insb
popf
int
and
icebp
movsb
cld
xchg
sbb
fsts
or
stc
addr16
sarb
xchg
sbb
mov
pop
pop
jmp
pop
ljmp
fmull
xchg
pop
mov
mov
dec
in
xchg
enter
mov
push
dec
mov
inc
test
repnz
stc
test
pusha
add
int3
sti
pop
pop
cltd
push
add
loopne
sti
scas
push
int
inc
test
mov
push
movsb
inc
out
mov
sbb
mov
rcrb
sub
sub
and
dec
push
mov
xchg
xchg
test
xchg
pusha
pop
cmp
jae
or
mov
xchg
fidivrl
push
lods
xor
push
mov
data16
inc
xchg
or
movsb
adc
or
int
mov
cmp
lds
mov
jge
aam
dec
fldt
fcompl
push
cmpsl
sti
aad
cmp
jmp
sti
inc
mov
cltd
int
jl
cmp
scas
jg
jbe
jbe
out
push
loopne
sahf
xchg
aad
lret
fmull
sub
cmp
mov
mov
mov
mov
push
dec
ljmp
in
daa
repnz
push
push
sti
sub
test
mov
es
test
iret
xor
repnz
mov
cmp
rclb
jmp
ljmp
inc
scas
out
mov
sbb
icebp
dec
mov
jg
or
inc
loopne
and
test
push
stc
and
and
fstpt
push
push
gs
mov
jo
fists
adc
xchg
shrb
call
in
xchg
fisubrl
mov
ja
cmpsl
mov
sti
push
rcrb
xor
int
cwtl
cld
fldl
mov
xchg
fs
lret
clc
and
jp
mov
push
pop
and
fwait
js
mov
cmpsl
jl
jp
cltd
xor
mov
cltd
or
mov
cs
sbb
les
sbb
dec
outsl
and
jmp
push
fwait
int3
mov
lds
inc
mov
leave
dec
mov
out
ja
lods
insl
push
push
add
js
loopne
sub
sub
out
in
cmpsl
leave
pop
fisubl
ret
cmp
sbb
das
lcall
aas
hlt
xlat
mov
inc
dec
cmpsb
and
xchg
repnz
jge
setge
xor
jb
stos
js
scas
push
aam
mov
call
mov
inc
mov
call
sti
xchg
lret
int
inc
es
pop
sub
dec
lds
and
adcl
cmp
xor
dec
movsb
fsubl
dec
pop
test
or
mov
mov
insb
aam
cmc
sub
test
or
std
enter
sbb
setp
insb
cltd
and
cli
cmp
dec
cmp
scas
inc
jb
cmp
mov
in
jl
mov
mov
cmpsl
stos
adc
ds
fsts
mov
addl
sbb
out
xchg
jno
or
add
cmp
add
pushf
dec
shrl
mov
dec
inc
ljmp
cli
xchg
aaa
fnstenv
shll
aas
addr16
dec
idivb
lods
out
sarb
dec
std
dec
push
xchg
pushf
mov
push
cwtl
jl
xchg
ret
xor
xchg
in
sub
fxch
js
bound
adc
in
pop
dec
ja
shrl
pop
cld
sbb
and
fsubrl
adc
mov
and
in
push
into
test
clc
xchg
xchg
xor
xchg
xor
aad
or
scas
push
add
test
adcb
xchg
mov
test
test
xchg
das
cmp
mov
jp
push
mov
popa
vmovdqa
push
subb
mov
or
sbb
xchg
xchg
cli
scas
das
xchg
je
xchg
mov
lcall
stc
rcrl
imul
push
mov
nop
jne
inc
xor
add
sbbb
push
push
xor
push
movsl
shll
jns
gs
sub
jp
fsubrs
jns
mov
mov
inc
aas
lcall
cs
in
sub
xchg
int
jle
sbb
push
push
jle
cmp
stc
mov
fldcw
xor
inc
sahf
jmp
sbb
loope
mov
addl
inc
jae
xchg
inc
out
xor
movsl
cmpsb
fnstenv
xor
daa
xchg
cmpsb
cs
pop
and
sbb
mov
sahf
inc
xor
int
sbb
and
xor
in
lret
cld
inc
or
fsts
xor
loopne
jae
mov
inc
sbb
lahf
rcll
mov
in
ror
imul
pop
and
cmpsb
mov
lahf
cmp
fsubrl
lods
cmpsb
addr16
mov
dec
inc
sahf
pop
in
fstps
mov
test
add
dec
lods
jmp
shrb
pop
adc
mov
dec
sbb
jnp
rolb
scas
flds
arpl
movsb
mov
scas
lcall
sti
daa
cmpsl
fisttpl
out
adc
xor
fyl2xp1
cs
cmpsl
adc
mov
fstpt
mov
xchg
add
push
push
inc
test
xchg
fwait
bnd
push
enter
rclb
leave
pop
cmpsb
shll
lahf
int3
out
ss
dec
pop
add
mov
push
roll
sahf
cmp
sbb
xchg
xlat
push
xor
xchg
push
test
movsb
sti
cmp
popa
rolb
jp
sbb
sbb
fsubr
cmp
inc
ja
xor
in
jnp
or
nop
rcrw
and
sbb
mov
lret
jmp
pushf
and
mov
repz
jmp
lods
cld
daa
repnz
mov
ret
daa
xchg
lret
push
sarb
mov
jge
outsl
outsb
stos
loop
imul
es
lret
sub
inc
addr16
lahf
jmp
mov
dec
xlat
dec
int
lahf
mov
popf
inc
mov
or
mov
lcall
lcall
flds
pop
dec
jl
pop
sbb
sub
mov
daa
popa
mov
loopne
adc
outsl
ret
cld
cmpsb
and
jae
out
out
mov
out
cltd
in
fsts
mov
out
jge
jp
dec
push
xor
cli
loopne
test
push
adc
xchg
fs
cmpsb
test
push
dec
jnp
les
add
add
dec
ljmp
insb
test
jae
inc
in
cmp
popa
and
fincstp
into
clc
push
mov
jnp
mov
in
movsb
lock
pop
test
roll
out
push
adc
push
dec
adc
pop
mov
sahf
cmc
xlat
fnstsw
mov
pop
cld
sarl
fadd
mov
gs
std
test
push
jnp
in
pop
in
test
divb
scas
fldenv
popf
cmp
hlt
popa
leave
bound
int
das
xchg
mov
or
mov
adc
insl
mov
test
mov
push
push
and
sbb
loopne
sbbb
mov
jo
dec
mov
push
xchg
dec
lahf
pushl
jmp
sub
fcompp
jge
cmp
outsl
insl
scas
mov
dec
inc
xchg
or
dec
adc
clc
sbb
inc
sti
cli
daa
push
fldenv
xchg
pushf
test
or
das
jo
call
mul
dec
or
dec
cmp
jmp
test
or
xchg
subl
bnd
adc
sbb
push
mov
mov
leave
fstpl
pop
jne
ret
pop
cli
loopne
ret
or
add
test
xor
cmp
push
inc
pop
test
push
sbbb
jns
jge
scas
and
fisttps
xor
inc
cmp
sbb
mov
fstp
jb
jmp
push
mov
xchg
std
popf
push
leave
scas
push
int
adc
in
cltd
out
lret
lock
push
pop
cmpl
cltd
ss
sar
jns
jmp
adc
sbb
loope
scas
mov
mov
loopne
aad
sbb
xor
hlt
and
mov
fnop
xor
out
dec
jnp
test
adc
daa
test
flds
adcl
cld
movsl
jmp
cmp
ficoms
lods
push
fildl
mov
lret
dec
xchg
jnp
in
pop
test
push
in
dec
aad
jbe
repz
fwait
jge
int
jb
in
lret
shrb
mov
popa
and
add
lock
test
adc
mov
push
stos
sti
repz
jae
shlb
mov
outsb
mov
push
mov
push
or
fstpt
stc
std
testb
mov
cmpsl
stos
mov
int
lea
mov
sub
or
out
sbb
inc
xor
xchg
xor
ret
mov
add
cs
in
idiv
xor
jecxz
call
test
mov
sahf
inc
bound
inc
jo
jo
sbb
inc
pop
mov
sub
orl
iret
and
jg
mov
int
lcall
push
jo
aas
xchg
aad
leave
mov
loopne
lea
sbb
jmp
mov
mov
xor
pop
addr16
fcoml
notb
sti
das
xchg
mov
xchg
jg
shrb
mov
mov
mov
xchg
std
popf
fscale
sbb
inc
adc
loop
fidivrs
out
movsb
test
out
add
or
pop
dec
mov
dec
cmc
int3
inc
daa
push
aad
out
push
enter
sbb
inc
push
mov
lret
mov
mov
out
adc
shll
cli
xchg
std
fldcw
sti
sub
dec
or
lahf
in
test
popf
and
test
lahf
mov
or
and
mov
mov
push
and
pop
mov
scas
push
ss
or
mov
jo
jge
dec
out
in
push
pop
jae
sbb
mov
f2xm1
repz
inc
pop
adc
pusha
std
pop
dec
sub
das
push
mov
ljmp
xchg
mov
movsb
sbb
adcl
push
stc
lds
dec
mov
test
mov
add
imul
adc
andl
in
or
cmp
into
dec
js
rorl
divl
sub
movsb
das
or
ja
jnp
inc
add
mov
fsts
add
cmp
movsb
xlat
mov
dec
inc
pop
movsl
mov
out
xor
dec
or
mov
push
push
out
lods
dec
in
sbb
mov
mov
jne
lods
jb
sbb
std
popa
ds
and
cmp
dec
sahf
das
mov
jg
xchg
bound
dec
repnz
jb
pop
pop
push
adc
mov
repz
cmpsb
sbb
sbb
cmp
cmp
adc
notb
cmp
mov
imul
fstpt
test
flds
mov
in
adc
sub
mov
xor
add
cltd
lods
inc
mov
push
inc
movsl
sti
or
int
and
pop
push
scas
mov
mov
je
shl
mov
aam
loopne
add
jbe
sub
mov
icebp
clc
jle
repz
add
push
dec
cmpsl
test
jmp
adc
sbb
into
and
and
addr16
out
add
jb
cld
sub
mov
addr16
out
and
lods
push
fstpt
arpl
push
sti
xchg
in
push
adc
dec
es
cmp
xchg
sarb
push
push
or
jle
ret
pop
sub
andb
sahf
mov
and
data16
or
sti
mov
xchg
sub
mov
pop
imul
fcoml
and
fmull
aam
das
push
test
test
call
dec
into
sbb
out
aad
arpl
in
scas
mov
inc
gs
aaa
mov
sbb
push
pop
pop
test
sbb
mov
inc
scas
imul
jg
ret
pop
sbb
or
mov
flds
mov
mov
fcoml
mov
in
mov
xchg
jle
ret
sarl
call
lahf
flds
mov
inc
xchg
pop
mov
adc
loopne
cmp
test
orl
loop
scas
jmp
xchg
addr16
pop
sbb
cmp
push
lds
mov
mov
push
jns
sbb
loope
push
sbb
pop
jns
sbbl
push
cmpsb
pop
dec
inc
mov
scas
cwtl
inc
shlb
pop
push
mov
popa
sub
sarl
das
test
int3
and
jle
bound
out
cmp
iret
or
xchg
jae
adc
mov
inc
scas
push
mov
pop
push
inc
xor
mov
cs
fldl
jmp
xchg
out
sbb
adc
in
mov
mov
testb
mov
fbstp
out
cmp
shlb
dec
les
or
add
jmp
sub
mov
es
jae
dec
sti
rorl
sub
in
sbb
lock
dec
pop
aam
ljmp
jp
dec
outsb
andb
push
je
fisttpl
in
sahf
mov
mov
inc
xor
and
test
js
fldenv
neg
leave
sbbl
fldcw
pop
sbb
and
pop
dec
out
jge
mov
and
pop
jo
xor
rcl
in
mov
fdivrp
test
fildl
flds
xor
add
xchg
adc
mov
jl
jbe
xchg
les
jns
xchg
or
movsb
mov
mov
inc
rol
ss
push
insl
jno
mov
xchg
cwtl
daa
sbb
push
outsb
pusha
lahf
cmc
xchg
mov
cmpsl
mov
cmp
sbb
pop
sti
and
xchg
lcall
pusha
popa
scas
aam
mov
adc
lahf
add
loop
push
dec
sbb
das
mov
push
mov
cmp
fcompp
cmp
pop
sbb
cmpsb
push
test
pop
push
mov
test
mov
les
push
mov
mov
inc
xchg
nop
mov
gs
mov
pop
inc
add
insl
mov
cltd
sbb
xchg
out
mov
and
pushf
test
shll
or
in
push
lret
add
jg
jae
or
stos
lcall
in
addl
mov
sbbl
push
jae
add
shrb
sbb
cmpsl
in
repz
in
push
notl
mov
call
mov
cmpsb
push
add
es
mov
outsl
or
in
cmpsl
push
inc
and
lods
and
mov
push
mov
lock
jbe
mov
dec
cmpsb
subl
fstp
and
inc
roll
dec
push
fcoms
loopne
mov
leave
cmp
push
in
sbb
rorb
inc
pop
orl
mov
cltd
bound
mov
jge
test
leave
mov
movsl
inc
popf
cmpsb
lds
dec
add
sub
cmp
push
pusha
sbb
sbb
aaa
lea
adc
sub
movsl
cmp
or
push
aas
jp
lods
js
inc
stos
addl
cmpb
cmpsl
adc
and
rcll
nop
jmp
fistpll
mov
rol
rorl
cmp
mov
fcoml
inc
push
and
xchg
inc
into
and
or
ss
and
or
add
jp
sbb
rolb
cmp
mov
push
or
xchg
out
in
add
es
std
arpl
lea
push
pop
jae
jmp
repnz
mov
mov
xchg
xchg
js
adc
cmpsb
push
repz
or
cmp
lock
mov
imul
lods
jne
mov
xchg
mov
sbb
xchg
sahf
push
push
std
fld
mov
pushf
test
dec
in
inc
test
xchg
test
mov
mov
mov
test
insl
pushf
movl
movsb
xor
arpl
and
cmpsl
mov
sub
dec
mov
pusha
je
inc
or
jb
repz
test
pop
jno
cmpsb
pop
imul
pop
push
sub
popf
push
mov
sub
inc
pop
mov
gs
push
jae
mov
lea
cmpsl
lock
add
sub
sbb
dec
xor
jae
mov
xor
adcl
dec
arpl
loope
flds
mov
addr16
cmp
cmpsb
sub
mov
fstl
cmc
xor
cmp
xor
fisubrs
sahf
adc
pop
dec
subb
xor
std
pop
and
in
lods
push
fildl
xchg
mov
mov
test
mov
lods
lock
mov
cmp
stos
or
add
xchg
divb
iret
push
jp
out
out
aam
imul
push
fcmovnb
in
mov
push
sbb
popf
fdivrl
jne
cld
mov
fstpt
cmp
jp
inc
pop
js
sahf
lcall
enter
sbb
mov
daa
push
mov
mov
mov
mov
sbb
pop
xchg
sub
addr16
push
and
es
inc
add
mov
cmpsb
pop
adc
scas
sbb
jb
mov
jge
out
inc
cmp
imul
ret
jecxz
mov
sub
pop
mov
flds
or
sahf
aam
push
adc
dec
jle
dec
movsb
pop
test
test
mov
mov
loope
jno
mov
mov
ficoms
lds
cli
mov
cltd
mov
xchg
cmc
mov
jb
mov
nop
mov
xchg
xchg
nop
inc
les
pop
addl
mov
popa
fsubrl
cmpsb
jns
xchg
fs
push
mov
jno
xchg
in
mul
pop
data16
fsubl
inc
push
lahf
xor
xchg
mov
rcrl
rorl
nop
inc
daa
mov
lcall
test
imul
test
in
movb
and
aas
pop
push
lds
xchg
movsl
cmp
or
cmc
pop
inc
mov
sbb
je
inc
adc
pop
or
jno
pushf
pop
dec
jno
inc
sti
fnstsw
push
scas
fptan
add
aad
jnp
sub
and
daa
lods
pop
cmp
xor
in
mov
mov
fimuls
fwait
clc
in
ja
xchg
testl
cmpsl
loopne
mov
ret
nop
pop
ret
jp
fiadds
mov
dec
pushl
pop
dec
fstps
cltd
rol
jb
clc
mov
xor
xor
inc
movl
scas
imulb
in
xchg
cmp
inc
inc
and
pushf
inc
pop
lock
ficomps
popf
fisttpll
sti
les
jp
cmp
inc
push
shll
xorl
adc
das
repnz
cli
lods
das
inc
test
xchg
movsl
mov
xor
pop
inc
lcall
out
cmp
cld
pop
mov
data16
lds
lcall
inc
sarb
scas
mov
neg
js
into
mov
push
xor
fwait
scas
sarb
shrl
fnstcw
loope
pop
repz
test
test
cmpsb
jnp
inc
inc
sbb
push
repnz
out
dec
addr16
out
and
movsl
repz
push
ss
test
in
add
sub
fbld
shlb
repnz
loop
fwait
daa
inc
movb
push
scas
sbb
sub
mov
push
into
xor
lods
mov
mov
pop
fidivs
popf
pusha
cltd
mov
adc
push
ret
repz
pop
jns
dec
pusha
adc
shrb
clc
jp
xchg
dec
cmpsl
mov
imul
adc
lret
ficoms
cmpsl
movl
fdivrl
daa
push
lret
sahf
pop
jge
dec
andb
scas
dec
cmp
mov
leave
push
fists
int3
sarb
inc
mov
mov
orb
mov
inc
fistpl
cmp
jns
movsb
mov
jne
mov
dec
xor
mov
pushf
and
in
cmpsb
mov
jbe
sbb
inc
xchg
gs
rcl
xor
aas
xchg
xchg
sti
lods
cmpl
fcoml
mov
std
test
dec
iret
lock
orb
inc
hlt
sub
inc
xor
and
xor
adc
inc
mov
push
mov
pop
inc
push
jne
fldenv
popa
int
pop
dec
sbb
es
pop
das
mov
jle
rolb
dec
es
cld
fidivs
jb
pop
notb
repnz
inc
cld
xor
xchg
into
insb
adc
add
cmp
sbb
jbe
or
xchg
mov
das
xchg
popf
inc
xchg
pusha
mov
mov
sbb
dec
jo
dec
in
jbe
sbb
mov
pop
dec
and
jge
fsubl
lds
sub
sti
stos
inc
fsts
orl
lcall
jl
push
fdivr
xchg
repnz
movsb
sub
out
dec
mov
test
cmp
cli
xchg
lcall
pop
push
lods
or
jnp
dec
jo
repnz
in
shll
movsb
mov
mov
xchg
jge
or
pop
leave
and
sti
xchg
notl
in
and
rcrb
sub
ret
into
jge
mov
sbb
cmc
inc
in
mov
mov
mov
xchg
push
arpl
lfs
push
pusha
and
sub
shlb
ret
mov
push
mov
cmpb
mov
aaa
pop
or
and
sub
out
cmpsb
mov
outsl
xchg
fsts
fcoml
loope
cmp
cmpb
in
repnz
sbb
sub
loope
jb
pop
mov
incb
dec
cltd
cli
sbb
xchg
xchg
imul
and
movsb
pop
add
mov
mov
or
cmp
xor
xor
addr16
inc
sbbl
pushf
loopne
inc
jns
or
pop
cmp
mov
sub
sbb
push
xor
test
mov
je
test
jno
jmp
mov
and
out
jbe
fwait
xchg
jp
mov
jo
push
cmp
add
es
in
test
and
push
mov
fcoml
movsb
sbb
sub
xchg
hlt
repnz
inc
mov
sbb
enter
lret
xchg
mov
jle
xlat
stos
jb
mov
cld
sub
in
cmpsb
lods
push
and
mov
mov
jae
jb
popa
pop
dec
sub
mov
scas
cmp
adc
mov
idivl
aad
out
mov
shr
data16
dec
outsl
std
fnstsw
push
sbb
cmc
repnz
mov
dec
test
mov
test
jns
jno
pop
and
jl
fsts
pop
nop
cmp
mov
mov
les
out
cltd
ret
shrb
fcoml
xlat
mov
inc
mov
push
movsl
lock
icebp
mov
mov
inc
fwait
je
cmpsb
mov
enter
pop
pop
cmp
mov
jg
testl
fnstenv
gs
dec
mov
js
lds
js
mov
adc
push
add
sub
test
sahf
fsts
xchg
aam
addr16
inc
pop
icebp
sti
xor
movsl
scas
adc
fnstenv
jmp
adc
jecxz
fcomps
rclb
cmp
jl
imul
pop
cli
sbb
sbb
add
jp
or
mov
mov
sub
lods
imull
test
fidivrs
scas
int3
adc
mov
or
push
imul
xor
push
addl
cmp
test
out
jmp
mov
out
and
jae
add
into
bound
in
les
mov
std
jecxz
sbb
and
xchg
xlat
stos
repnz
dec
pop
and
inc
sub
aas
sub
clc
mov
cmpsb
mov
mov
fxch
cmp
cmc
push
inc
ljmp
es
addr16
addr16
sbb
loopne
fsubr
cmc
pop
movsl
dec
adc
imul
dec
jb
xchg
xor
cli
xchg
dec
mov
xor
test
fiaddl
stc
std
sbb
stos
fstpt
rcr
and
adc
sarb
mov
imul
inc
push
jmp
scas
das
int
cli
lcall
mov
cli
fiaddl
loopne
clc
add
lcall
gs
movb
add
testb
sbb
mov
ljmp
or
jbe
mov
aaa
cmp
pusha
jo
mov
test
add
imul
addb
push
leave
push
hlt
add
jne
xor
repnz
xor
orb
jp
inc
aad
fisubrs
sarl
push
jb
and
xchg
lret
movsb
jae
jle
fsubr
mov
fsubs
push
add
pop
inc
adc
inc
out
xchg
xchg
sti
sbb
pop
mov
xor
push
inc
sbb
fmulp
xorb
jne
and
xlat
aaa
or
fs
xchg
int3
jbe
testl
fs
jge
out
addr16
lods
mov
sub
inc
icebp
cmp
mov
mov
shlb
push
sbb
mov
jns
nop
jae
or
sub
mov
mov
push
push
inc
arpl
xchg
adc
add
mov
jnp
daa
mov
les
and
xchg
xchg
xor
adc
and
sub
jl
push
rorb
scas
test
cwtl
sbb
jl
pop
push
pop
fidivrs
aas
popa
pop
jmp
xor
lods
test
lahf
mov
xor
pop
test
fstpt
vpaddb
and
rorb
test
xorb
out
out
lock
and
ret
xor
pop
cmp
into
inc
in
movsl
cs
push
and
pop
adc
xchg
aaa
mov
js
xchg
mov
jno
jle
xor
fwait
das
loope
push
mov
repz
andl
lods
dec
mov
ret
std
sbb
orb
mov
xchg
sahf
or
test
xor
lock
push
shlb
jb
push
int
bound
or
pop
push
addb
test
das
dec
outsb
inc
std
mov
roll
arpl
ja
scas
pop
scas
cmpsl
das
dec
js
in
xor
sysenter
fadds
ss
sbb
jnp
xor
jecxz
popf
mov
dec
jne
out
iret
movsb
jno
inc
xor
push
lods
das
test
shl
pop
nop
ja
filds
push
roll
out
mov
mov
jo
mov
or
or
pop
mov
lret
sbb
push
fsts
movsb
and
aam
test
push
push
mov
aas
divl
lods
ret
xchg
dec
fs
std
mov
insb
push
ror
inc
data16
js
xor
inc
push
adc
sbb
xor
mov
and
adc
test
xchg
mov
lods
data16
iret
sbb
sbb
xchg
sbb
jp
fistpll
xchg
popa
inc
sub
mov
cmp
inc
cmp
push
push
lret
shrb
mov
fisubs
movsl
lahf
mov
push
stos
adc
add
pop
jae
push
movsb
mov
es
jge
lock
sbbb
push
inc
icebp
es
std
xor
lods
jae
jns
mov
int3
lds
into
int3
test
add
mov
cli
into
mov
push
std
cmp
xor
lret
pusha
lret
int
jno
jmp
jnp
cmc
xchg
lods
test
mov
sub
inc
pop
imul
cmp
xchg
repz
popa
daa
pop
xchg
pop
test
loopne
push
loopne
loopne
adc
data16
xchg
movsb
cmp
out
mov
test
shll
out
int
fstpt
subl
mov
in
and
mov
aad
call
fptan
ss
rcl
jno
push
mov
mov
in
iret
sbb
mov
stos
imul
gs
inc
or
lods
sarl
test
xchg
arpl
inc
pop
mov
imul
mov
push
fsubrs
insl
out
push
mov
or
test
ja
pop
jae
and
mov
cmp
xor
icebp
mov
lretw
mov
push
xchg
int3
jg
jne
arpl
movsb
push
lds
inc
push
push
lods
insl
sbb
fnstenv
les
mov
lahf
inc
jmp
fsubrs
push
add
data16
mov
sbb
or
jns
leave
fldl2e
popa
iret
dec
mov
aam
dec
xchg
cltd
int
push
int
push
xchg
fcomp
mov
and
xchg
or
sbb
clc
xchg
jge
dec
sub
ss
aad
out
daa
nop
sub
xchg
mov
mov
xchg
xchg
dec
mov
sub
xchg
enter
in
scas
cmp
and
inc
gs
movsl
lret
jmp
dec
mov
dec
es
cmp
arpl
ds
fsubp
mov
jle
bound
ss
sub
sahf
lcall
or
xor
repz
out
sub
mov
cltd
sbb
fs
iret
dec
or
push
aad
and
loop
movsb
lods
lea
inc
adc
mov
repnz
out
and
push
testb
fnstcw
jns
fwait
sbb
sub
jnp
mov
in
scas
cmp
mov
mov
xchg
push
inc
dec
mov
in
addr16
xchg
mov
or
lock
movsb
mov
aad
cld
cmpb
fsts
inc
lds
push
adc
mov
mov
inc
pop
xor
flds
pop
movsl
and
xchg
test
cli
xor
clc
and
push
std
shl
loop
out
aad
xorl
mov
push
and
lods
jl
jmp
dec
xor
pop
sbb
sub
inc
out
int
loope
fimuls
adc
lcall
test
mov
add
leave
sbb
clc
add
dec
mov
call
sbb
dec
cmp
jmp
lds
in
and
mov
xchg
out
bound
push
sbbl
cli
jle
lock
hlt
test
push
hlt
outsl
mov
pushf
xor
inc
lods
xchg
shll
sub
out
mov
int
fmull
insb
icebp
xchg
fwait
sub
adc
imull
pop
mov
lret
stos
loop
push
lods
cltd
jge
xchg
inc
faddp
add
daa
pop
shl
mov
aad
stos
sbb
pop
rcll
pop
sahf
and
dec
and
cmp
cld
push
out
in
pop
pop
add
push
fdivr
call
inc
les
jp
jg
lcall
iret
in
jle
icebp
and
push
notl
scas
push
mov
mov
xchg
mov
out
pusha
mov
daa
sti
aaa
inc
inc
cmp
jle
in
sti
iret
stos
jmp
call
jmp
mov
jnp
aad
xchg
add
mov
shlb
pop
push
popa
jns
test
push
xor
lods
mov
sbb
enter
insl
lcall
mov
pop
cmp
adc
testl
cmc
es
xor
dec
mov
fchs
scas
lds
cwtl
pop
movsb
call
adc
cmp
ja
jb
sbbb
xchg
pop
test
jo
inc
sub
stc
sub
xor
scas
push
push
cmp
dec
lcall
pop
mov
add
jl
mov
dec
loop
test
enter
scas
xchg
add
push
fimuls
sar
mov
pop
adc
xchg
mov
jb
jb
jmp
popl
mov
xchg
mov
mov
popf
or
jo
and
push
pop
adc
xchg
stc
lods
sub
mov
ljmp
dec
test
imul
fldt
pop
loopne
sbb
imul
lahf
cmp
add
in
xor
scas
xchg
pop
jne
imul
xchg
sub
dec
sbb
gs
das
in
cmpsb
and
in
or
stc
xor
addb
fsubrs
in
cmp
sub
shll
mov
sub
cs
pop
out
mov
pushf
in
fwait
testl
pop
test
mov
int
jg
push
shl
push
in
adc
ss
xor
fsubrs
xchg
adc
push
add
popa
ret
les
lods
add
rolb
sub
mov
rorb
sbb
push
jnp
and
cmpl
scas
mov
aad
or
and
out
mov
and
scas
or
xor
jne
movsb
sbb
mov
mov
es
sbb
cmp
mov
jle
sbb
mov
push
and
xchg
push
sub
jo
fistpll
mov
gs
push
pop
pushf
stos
aad
add
and
jo
out
icebp
sub
out
movb
aaa
xlat
test
mov
es
lods
push
inc
adc
lret
pusha
andl
shrb
cld
test
pop
jns
push
push
xor
or
inc
lret
dec
daa
pop
fimull
roll
in
movsl
sti
push
jbe
xchg
push
lcall
cld
cmc
sbb
pop
dec
cwtl
fsts
mov
jbe
ljmp
aam
lahf
jmp
imul
xchg
cmpb
pushf
or
fbld
cmpl
sbb
jle
push
cltd
incb
imul
push
repz
mov
push
orl
sahf
test
mov
mov
push
adc
inc
xchg
jge
xor
and
in
setns
lahf
mov
cs
pop
imul
or
out
leave
ja
push
mulb
test
mov
dec
nop
clc
pop
les
roll
and
rcll
push
pop
int
mulb
xchg
hlt
or
cmc
pop
mov
add
cmp
int3
es
pop
dec
add
jbe
mov
outsl
jle
aad
cltd
xchg
jp
jno
fldt
lcall
sbb
jns
mulb
dec
hlt
pop
fsubr
add
add
mov
mov
cmpsb
mov
lret
sub
imul
cltd
push
jns
add
sub
insl
xor
rorl
add
lcall
loopne
dec
push
xor
xlat
fstps
lcall
or
test
gs
mov
fnstcw
push
mov
jns
and
outsb
pop
mov
shlb
pop
loopne
popf
es
and
int3
adc
sarb
or
inc
jge
xchg
leave
lds
mov
dec
sbb
in
les
sbb
addr16
mov
add
ss
jo
fstp
out
icebp
nop
stc
sarb
arpl
mov
shll
mov
pop
pop
hlt
and
fsts
sbb
lods
mov
mov
mov
inc
inc
fisttpl
push
mov
xchg
gs
jl
pop
fadds
sbb
ret
mov
xchg
test
and
ret
aas
xchg
adc
sbb
ret
pop
sahf
cmp
pop
adc
lock
inc
push
int3
lods
rclb
dec
sahf
dec
mov
mov
insb
push
andl
sbb
pop
test
mov
and
jne
sbb
xor
push
sub
or
push
pop
xor
cmc
mov
out
push
mov
test
add
pop
aas
push
movsb
movsl
test
test
jnp
icebp
or
mov
pushf
in
popf
mov
stos
int
ljmp
daa
and
fldenv
stc
clc
stc
jge
mov
push
sbb
int
test
cmp
mov
je
daa
std
sbb
stos
add
mov
lods
arpl
adc
imul
add
sti
in
push
test
xchg
or
and
mov
mov
and
sahf
xor
outsb
notb
sbb
or
jge
xchg
or
jnp
cmp
mov
sbb
movsb
lcall
sbb
xchg
imull
insb
out
jl
mov
int
mov
mov
mov
jae
xchg
cmp
movsl
in
mov
imul
jmp
push
lcall
mov
into
xchg
je
imul
cmc
mov
mov
mov
cmp
jmp
mov
pop
and
icebp
lock
popl
add
push
xchg
mov
push
aam
mov
jp
mul
sbb
pop
out
push
jmp
dec
sub
fdivrs
jmp
test
pop
flds
fsubl
fldenv
cmp
cli
ss
sbb
push
lea
jns
push
aad
cmc
decb
loope
insl
dec
dec
imul
jnp
inc
xorb
aam
sbb
stos
dec
fcmovne
jne
mov
or
sub
dec
xlat
mov
push
rorw
shll
adc
into
mov
in
sbbl
xchg
push
add
push
insb
jbe
push
js
ret
in
sti
push
mov
jecxz
popa
lret
mov
mov
mov
dec
pushf
stos
int
dec
fmulp
pop
pushf
gs
jae
flds
inc
popf
int3
out
pop
rep
xchg
mov
fstpl
loop
ljmp
mov
adc
pop
dec
xor
fsubp
fmull
jo
int
adc
jecxz
insl
mov
inc
or
xchg
stc
xchg
ret
cmp
adc
test
dec
jge
es
aaa
jmp
lahf
push
hlt
pop
aaa
xchg
jbe
pop
sbb
jno
mov
inc
scas
cmpsb
mov
inc
sbb
lcall
sbb
das
pop
out
or
movsl
adc
cmpsl
cmc
push
push
das
jae
push
sbbl
dec
xchg
sbb
lret
add
pop
mov
scas
and
cmp
mov
inc
cmpl
scas
je
mov
mov
xor
pop
movsb
dec
daa
loop
add
and
test
test
mov
xor
call
incl
adc
and
sbb
lods
mov
das
scas
mov
jg
inc
mov
js
in
sub
out
dec
push
jnp
pop
jmp
mov
cli
loope
sub
jo
nop
addr16
or
pop
cmpsb
jecxz
adc
sub
sub
movsb
call
es
xor
push
clc
adc
mov
sti
push
movsb
outsl
xchg
cltd
add
int
jecxz
stc
fistpl
inc
movsl
xchg
cmovae
mov
sbb
cltd
jb
mov
repnz
dec
sbb
mov
mov
cld
f2xm1
sbb
fnstsw
mov
xor
inc
mov
xor
push
lcall
sti
scas
push
jae
pop
fcmovnbe
push
jmp
adc
lods
pop
mov
mov
stos
add
cs
cmp
adc
mov
mov
aam
inc
xchg
sbbl
dec
repz
pushf
push
repnz
lock
inc
mov
fstl
pusha
insb
and
mov
and
test
sub
mov
ficomps
shrl
andl
out
mov
xchg
mov
cmp
pusha
dec
enter
movsl
in
push
iret
fmul
cmc
inc
sub
push
out
mov
faddl
int3
mov
insb
inc
cmp
orl
jne
jo
cmpsl
jbe
and
hlt
adc
gs
test
cwtl
inc
std
jge
loopne
loopne
inc
fwait
out
bound
sub
das
push
test
dec
mov
adc
sub
jl
sbb
cltd
pop
jmp
test
add
mov
icebp
mov
int
add
testl
fnstenv
mov
lahf
xor
inc
xchg
jp
cmpsl
cli
or
and
mov
mov
dec
pop
and
xor
pusha
inc
ficoml
sti
cli
movd
jno
test
test
stc
test
test
data16
repz
cmp
sbb
frstor
mov
lds
push
aas
or
lcall
sti
scas
movsl
xchg
pop
dec
xchg
or
xchg
sarb
xor
xor
lods
lods
scas
shrl
cmp
mov
scas
xchg
lods
and
div
imul
sub
fwait
mov
loop
mov
inc
push
lret
int
fiaddl
jmp
pop
sti
out
cmp
inc
sbb
jge
jo
sahf
inc
xchg
in
test
dec
enter
and
dec
or
out
mov
fcmovnu
decb
in
int3
fsubp
gs
sub
icebp
sbb
inc
sbb
aad
loope
cmp
xchg
lahf
data16
xor
fs
dec
les
inc
sbb
orb
mov
decb
cld
in
pop
sbb
xchg
popa
pop
cltd
shlb
push
sbb
pop
add
and
bound
test
fstps
push
cmp
jge
pop
xor
fisubrs
jno
lahf
insl
push
pop
cmpsl
outsl
adc
filds
sbb
inc
jmp
lahf
in
inc
pop
mov
cmpb
jecxz
and
andl
pusha
mov
sbb
mov
cltd
inc
xchg
and
popa
in
inc
push
sbb
rolb
cmpb
sbb
push
mov
pop
jae
fsubs
test
test
mov
gs
jnp
cwtl
cmpl
dec
aaa
mov
icebp
test
push
push
mov
add
das
pusha
fld
inc
fisubl
sbb
inc
adc
pop
sub
mov
jmp
push
cmpsl
xor
cmpsb
push
sub
sti
fldenv
and
jmp
pop
lahf
dec
lcall
dec
test
jecxz
cmpl
fsub
fdivl
jg
sbb
fnstenv
sti
int
or
das
lret
xchg
es
and
pop
sti
lret
pop
hlt
pop
out
pusha
repnz
and
lahf
cmpsl
jb
aam
aad
or
sbbl
sbb
call
mov
dec
mov
in
jns
lea
jbe
xor
dec
and
and
sub
test
outsb
jnp
sbb
pop
cmp
ja
movsl
cltd
movsb
dec
sbb
jne
inc
push
hlt
je
jecxz
pop
lock
mov
mov
jne
cmpsb
xor
pop
sub
in
sub
and
aad
dec
inc
int
std
mov
nop
mov
sbb
add
outsl
mov
pop
sarb
test
xchg
lea
in
push
cmp
sti
cmp
in
pop
cli
popf
fsubl
jp
mov
cld
sbb
loop
inc
and
es
aas
addb
dec
and
jecxz
cmp
test
gs
cld
cs
shl
push
das
scas
inc
pop
mov
dec
xchg
xchg
les
ss
mov
sbb
sbbb
xchg
xor
jnp
mov
fwait
in
push
sub
add
push
or
mov
test
fbstp
movsl
int3
roll
inc
cmc
xchg
cltd
jl
dec
sbb
aad
cmpsl
xor
mov
orl
push
sbb
jle
cmp
lahf
inc
ljmp
push
cwtl
jno
sbb
test
jns
xchg
out
idiv
int3
jne
jle
jne
and
ss
sbb
loop
or
scas
iret
xchg
jne
subl
mov
flds
std
cli
aam
mov
out
jp
and
test
or
add
fxch
dec
outsb
stc
jne
lods
clc
sbb
or
xchg
aad
sbb
xor
pop
cld
mov
sbbb
ret
mov
mov
sti
movsl
cmpsb
sbb
jno
pop
mov
fsubp
neg
lods
mov
leave
ret
mov
cmp
clc
sbb
je
mov
push
loope
ljmp
pop
push
mov
jnp
pop
mov
cmp
notl
clc
jbe
jnp
xchg
leave
add
aas
sbb
sbb
and
dec
repnz
pop
leave
addr16
fldenv
mov
ljmp
xchg
orl
test
mov
fucomi
push
adc
mov
jae
stc
jmp
lock
mov
sub
enter
loopne
movsb
xor
cmp
mov
xchg
add
int
mov
aas
mov
mov
cmp
je
repnz
push
xor
mov
inc
inc
xor
daa
mov
loop
in
nop
push
or
ret
cmc
adc
cmovnp
sti
xchg
mov
dec
mov
or
push
fsubl
out
xchg
insb
mov
mov
dec
fimuls
out
repz
and
jae
mov
and
nop
dec
jbe
and
mov
movsl
pop
inc
outsl
hlt
mov
clc
mov
std
mov
lahf
lahf
fildl
insl
and
hlt
jp
es
pop
out
scas
cld
cmp
dec
push
inc
nop
xchg
fld
jle
xchg
mov
test
inc
sti
in
cmp
fldcw
into
daa
and
sbb
push
adc
aad
loop
into
adc
jo
fwait
mov
jae
and
sbb
inc
pop
mov
mov
sub
and
pop
mov
imul
jp
shrb
movsb
ficoml
pop
cltd
add
push
or
pop
mov
fimull
push
mov
or
sahf
jnp
jp
addr16
fstpt
stc
int
test
cli
pusha
icebp
lcall
cmp
hlt
aaa
push
lahf
int3
xor
cmp
cmp
adc
into
leave
inc
push
cmp
js
das
cmp
idivl
divb
mov
test
xchg
cmpsb
xchg
mov
test
dec
scas
das
inc
clc
dec
cmp
fdivl
daa
sbb
jge
fxtract
lods
sub
arpl
jle
dec
dec
jno
jle
xor
mov
mov
push
add
mov
in
std
jecxz
cmp
sub
iret
xchg
lods
push
push
sbb
sbb
dec
je
inc
adc
insb
sarl
and
sbb
negb
stos
arpl
aad
xor
sbbb
scas
out
pop
dec
sti
mov
xchg
clc
loop
out
lahf
jmp
scas
sbbb
data16
xchg
ds
lahf
push
insl
shlb
xchg
sub
rcrl
fsubr
jmp
and
mov
imul
push
loop
sub
shl
sbb
inc
lods
push
push
ds
mov
ficompl
mov
cmp
mov
or
idiv
add
fldcw
jno
test
xchg
cmpb
fadd
paddq
sub
fidivrl
in
faddl
and
xchg
loopne
push
sarb
jge
xor
pusha
jns
subl
inc
dec
mov
gs
roll
push
lods
popf
test
xor
aad
pop
clc
test
test
int3
sti
and
cmp
cmp
add
icebp
js
mov
adc
push
stc
pop
sbb
cmpb
out
push
or
movsb
mov
ja
arpl
negl
test
mov
fidivs
icebp
sub
outsb
cmpsl
divb
repnz
out
lock
and
xchg
mov
inc
dec
sub
sub
movsl
sbb
and
lcall
lret
inc
loop
mov
push
stc
inc
xchg
xchg
pop
mov
shl
ljmp
xor
mov
roll
arpl
push
aad
mov
add
mov
pop
cld
hlt
ljmp
jge
das
cmp
fwait
out
mov
dec
clc
jecxz
or
dec
mov
push
gs
ja
pop
test
xchg
inc
cmp
xchg
test
pushf
push
out
sbb
pop
or
dec
sbb
xchg
pop
sub
js
fsubrl
data16
das
sbb
add
jns
hlt
jecxz
pop
mov
repnz
nop
and
mov
in
sub
fisubrs
lods
mov
xor
xchg
std
std
insl
inc
sub
push
jmp
xor
repz
xchg
das
xchg
imul
adc
mov
inc
xchg
inc
sub
inc
stc
aad
popa
adc
xchg
inc
pop
mov
scas
adc
mov
sbb
adc
and
stos
mov
pop
mov
mov
mov
imul
in
popf
sub
scas
rcrb
xchg
add
pop
push
mov
inc
mov
loop
stos
std
subl
mov
std
dec
ja
mov
lret
cmpsb
cmp
jnp
es
aad
mov
xchg
enter
les
adc
cs
repz
mov
jb
push
mov
xchg
push
sahf
dec
adc
lock
push
mov
cmc
ljmp
stc
sti
pop
xchg
jecxz
je
fldenv
pop
fsubl
pusha
inc
jl
fs
or
mov
jge
mov
fdivrl
pop
add
fsts
clc
mov
mov
push
and
imul
xchg
xor
xor
sbb
push
pop
cltd
xor
out
jmp
lret
dec
push
sbb
out
adc
imull
mov
jnp
lcall
loopne
lahf
adc
std
push
pop
dec
scas
xchg
cmp
mov
mov
idivl
sbb
test
sti
mov
adc
aad
pop
ficompl
sbb
pop
insb
adc
or
cmp
xchg
mov
fsincos
lds
adc
push
in
imul
rcl
cmp
outsb
inc
outsl
fsubrl
adc
push
fs
decb
sub
dec
dec
jmp
mov
sub
cwtl
loope
das
addl
test
and
cwtl
addr16
cld
add
addr16
lea
dec
sub
jae
mov
mov
in
and
dec
inc
stos
adc
popa
aad
pushf
jbe
mov
push
repz
sub
xchg
push
push
mov
clc
mov
cmp
jp
cmpsb
rcr
cld
dec
int
xchg
out
test
lds
fimull
jae
cli
sub
sub
cld
sbb
xor
jo
cwtl
and
fnstcw
xchg
idivb
rcrb
ss
test
insl
int
aam
fidivs
fcomp
lods
pushf
xchg
mov
xchg
or
mov
cld
push
loop
popf
jmp
stc
repnz
test
mov
xchg
inc
jle
int3
incb
pop
dec
testl
mov
das
push
fnstenv
shlb
movsb
and
adc
aaa
mov
adc
in
inc
jle
and
pop
adc
cs
push
pusha
in
sub
cld
inc
xor
dec
cmp
fnstcw
sbb
dec
and
imul
jae
dec
ljmp
pop
sahf
scas
mov
sub
xchg
clc
and
lahf
cmp
jge
xor
dec
lods
xchg
clc
cmc
add
out
pop
xchg
sub
lock
dec
fstpt
cmpsb
cmpl
jae
es
inc
sub
or
int
pop
pop
and
sub
add
mov
test
cmp
add
pop
test
mov
xor
mov
paddw
push
ja
pushf
test
cmpsb
xchg
pop
lahf
xchg
fldcw
popa
mov
mov
fdivrl
mov
in
clc
push
pop
push
adc
cmpl
out
xor
xchg
jecxz
test
lahf
pop
dec
lods
ficoml
hlt
mov
cmp
push
test
mov
and
sub
daa
repz
push
cmpsb
addr16
inc
mov
dec
push
ficomps
loope
lcall
dec
cwtl
pop
sbb
mov
mov
sbb
jl
shl
xor
pop
mov
sar
mov
sahf
ljmp
add
out
cs
jmp
cs
jg
dec
outsl
in
addr16
cmpsb
fldln2
cmc
shrd
les
fs
mov
cmc
clc
sub
les
enter
inc
mov
xchg
or
jae
in
push
xor
popf
stos
test
andb
pop
cmp
cmpsb
xchg
call
idivl
adc
fstpt
jge
imulb
xor
xor
outsl
inc
ljmp
mov
imul
ret
in
js
leave
je
icebp
sub
xchg
push
addb
dec
fcmovnb
outsb
xchg
lods
adc
lcall
mov
mov
std
hlt
int3
cmpb
xchg
lods
je
cwtl
mov
mov
rcrb
test
pop
fildll
popa
push
xor
mov
iret
mov
inc
mov
mov
pop
aam
mov
jns
adc
lods
subl
inc
stc
push
into
push
push
loope
mov
lock
rcll
cld
mov
inc
and
xchg
mov
scas
dec
mov
add
mov
stos
idiv
sti
xor
lret
and
inc
mov
imul
sahf
pop
fdivrl
push
mov
and
stos
xorl
sub
das
xchg
cld
ret
scas
xchg
jno
mov
sti
or
sbb
shrl
cltd
and
adc
fiadds
mov
into
mov
jmp
inc
fldenv
sbb
sbb
mov
stos
add
into
mov
xlat
cmpsl
mov
jmp
jle
mov
out
cmp
es
cli
sahf
push
and
addb
jge
das
jp
pop
shll
and
mov
sub
inc
cld
mov
into
xor
lock
fisubs
mov
dec
lahf
xchg
pop
adc
jge
divb
sbb
int
and
sbbb
fldenv
lcall
add
jo
test
or
addr16
ret
fmuls
jecxz
mov
aad
cmp
mov
adc
arpl
mov
mov
mov
cmc
jae
inc
and
push
or
inc
jne
fstps
mov
rcrb
jns
cli
adc
popa
and
aaa
jmp
iret
insb
int
test
sbb
test
jno
data16
test
or
sub
adc
dec
xchg
enter
xlat
mov
test
add
xor
mov
adcb
or
out
lds
mov
lds
pop
mov
loopne
mov
cmpl
imul
push
sub
pop
pop
cltd
sbb
repz
xchg
mov
std
loope
ficomps
adc
xlat
mov
xor
adc
les
adc
or
outsb
xchg
int
out
popa
mov
out
iret
or
int
pop
mov
mov
push
imul
xchg
mov
mov
or
psrlw
bound
iret
sti
sub
sbbb
mov
repz
arpl
cmp
ret
and
cmp
insl
in
cmp
pop
into
add
mov
sbb
push
xor
subb
xor
aaa
push
cwtl
sub
adc
test
cmp
ja
daa
inc
pop
jg
scas
mov
cmp
aaa
aad
cmp
pop
outsl
pop
pop
jbe
frstor
mov
mov
cmp
pop
ja
jmp
fnstcw
cld
outsb
adcl
pusha
add
mov
clc
movsl
js
mov
mov
js
or
pop
out
push
sar
stos
fcmovbe
inc
fsts
and
jae
in
jne
shlb
popa
add
mov
xor
sbb
jo
js
add
push
ret
popa
scas
inc
dec
in
hlt
inc
pop
push
and
scas
stc
mov
and
inc
gs
ret
dec
jle
dec
mov
sbb
sti
test
subl
xchg
scas
in
scas
in
inc
sub
ret
in
popf
mov
cmp
xchg
out
stos
std
flds
mov
movsl
imul
in
ljmp
and
sbb
fldenv
scas
repz
and
imul
enter
jp
xchg
and
cs
js
mov
xor
dec
sbbb
jp
mov
pop
iret
hlt
mov
stos
call
push
fcoml
sbb
daa
push
int
arpl
out
mov
xchg
sub
dec
push
add
xchg
movsb
inc
notb
cmp
mov
sbb
push
pop
test
mov
inc
mov
setb
adc
lock
push
xor
test
in
mov
shrb
rcrl
int
jnp
inc
leavew
mov
add
xchg
inc
push
cmp
xchg
inc
mov
scas
mov
pop
leave
dec
out
push
cmpsb
cmp
xchg
les
pop
pop
movsl
and
jmp
ret
cs
pop
cmp
and
xchg
leave
and
hlt
lods
sbb
popf
out
pop
and
adc
add
adc
mov
mov
cmp
sub
shlb
mov
test
out
mov
data16
repz
pop
les
shlb
test
popa
adc
pop
movb
je
sbb
jns
jle
ret
sub
stc
dec
stc
enter
cs
mov
and
fprem
and
pushf
push
xor
data16
addr16
insb
sbb
xchg
jmp
rcll
cmpsb
xor
mov
int3
fsubs
stc
ss
popa
jno
add
mov
xchg
out
sbb
imul
jnp
pop
fldenv
push
mov
int
aas
les
cmpsb
push
fisubrl
jl
xchg
jbe
mov
ja
sbb
and
int
mov
pop
push
jb
rol
test
adc
lods
mov
pop
mov
fmuls
scas
mov
xchg
lret
int3
fnstsw
jmp
stos
insb
jle
xor
lea
inc
sbb
push
jecxz
inc
mov
inc
aaa
jb
cmp
loop
lods
and
jae
inc
les
cmc
cmpsb
iret
push
in
mov
push
mov
aad
stc
sub
sub
loop
cmp
pop
inc
sti
in
fldcw
addr16
jecxz
pop
pop
clc
inc
enter
jnp
mov
test
ret
jecxz
cmpsb
sub
pop
sbb
leave
cmp
mov
imul
fcompl
push
mov
es
mov
jnp
movsl
sti
mov
std
sarb
hlt
mov
mov
cmp
call
repz
push
pop
mov
lcall
es
adc
movsl
mov
push
call
sbbb
ficoml
sub
je
outsb
mov
divb
clc
jmp
daa
ljmp
int3
pop
cmpsb
ss
adc
cmp
outsb
stc
or
addl
scas
xchg
xchg
enter
jnp
mov
sbb
sbb
jo
push
mov
in
push
jno
mov
mov
data16
loope
test
int3
pusha
pop
inc
xchg
inc
mov
push
out
cmovnp
stc
repz
mov
daa
push
loope
inc
std
sub
and
ret
out
pop
dec
hlt
cmp
loop
xlat
addr16
loope
dec
lods
xor
xchg
mov
mov
into
out
aas
and
fdivl
dec
inc
inc
repz
jns
mov
mov
inc
cmp
dec
cmp
addr16
push
dec
add
push
mov
scas
cltd
fxch
xchg
jae
rorl
orb
int3
insb
enter
fstps
mov
lods
pop
sbb
or
fiaddl
fbld
and
out
incl
pop
sbb
xchg
pushfw
mov
test
xchg
and
mov
dec
in
movsl
out
mov
fmull
jne
lods
adc
xchg
dec
aas
outsl
xchg
or
mov
sbb
pop
mov
pop
inc
pop
scas
dec
and
in
xchg
fsubp
addl
mov
mov
cmpb
mov
out
mov
movsl
and
cmp
in
sub
in
das
lods
ret
mov
dec
mov
and
sub
jae
mov
fnsave
and
in
imul
out
mov
pop
mov
dec
mov
std
nop
mov
cmpl
push
loope
fnstcw
icebp
in
mov
pop
sub
cs
mov
lcall
out
cmp
mov
xchg
pop
popa
add
shll
fxch
xor
mov
pop
mov
ja
xchg
adc
mov
fiadds
jp
inc
push
push
dec
or
ficomps
xor
jne
mov
and
xor
push
and
jnp
fistpll
rorb
mov
pop
lahf
repz
mov
pop
loopne
pushf
pop
push
nop
out
add
ficomps
lahf
inc
push
mov
in
leave
je
fwait
add
push
in
or
add
push
in
add
jecxz
pop
cmp
das
pop
sbb
mov
call
mov
push
mov
cltd
mov
mov
pop
jnp
mov
jg
inc
fldt
mov
lahf
push
out
in
cli
bound
in
mov
or
lock
dec
fldcw
sub
jmp
inc
pop
fnstenv
jle
lods
outsb
das
inc
adc
jle
repnz
popf
test
clc
push
adc
inc
mov
sbb
jge
lock
add
jmp
test
dec
movsb
mov
jle
push
mov
mov
push
cli
imul
jmp
cmp
push
dec
and
adc
add
cmpsb
xor
js
push
fwait
int
dec
dec
fcoml
xchg
mov
sahf
mov
dec
and
cmp
jecxz
mov
mov
inc
out
lods
and
push
das
les
je
lcall
xchg
fwait
repz
and
jge
jnp
and
adc
adc
adc
and
jae
and
adcl
gs
or
nop
in
mov
in
jmp
and
ja
fcmovnu
test
mov
ljmp
pusha
dec
lret
add
and
sahf
scas
rclb
arpl
in
icebp
inc
add
adc
cmc
xchg
pop
lds
mov
mov
movsl
cli
divb
mov
xor
and
xchg
movb
outsb
jnp
fs
jle
lds
xchg
jle
les
inc
cmpl
lret
cmp
pushf
jbe
insl
mov
scas
addr16
jg
mov
pusha
das
pop
jbe
sbb
imul
fmulp
jg
sub
mov
adc
add
push
int
cmc
adc
push
loopne
mov
and
rorl
cld
lock
ds
orb
lds
or
and
pop
test
inc
cmp
ss
aam
scas
mov
imul
sbb
je
mov
insb
cmp
push
jno
jns
imul
jge
push
pop
lcall
jecxz
mov
cmp
shl
into
xor
imul
out
lods
repz
cmp
fisubrl
rcr
in
xchg
sbb
jnp
push
jns
mov
aad
imull
xor
sub
mov
inc
inc
testb
dec
popf
fdivl
test
ret
cmpl
sub
xchg
cli
xchg
int
repnz
into
dec
shlb
cmpl
lods
test
and
sbb
dec
xchg
inc
fstl
fcompl
mov
jp
es
mov
cli
les
mov
in
mov
push
jp
out
jmp
or
dec
mov
mov
inc
inc
inc
repnz
mov
sti
adc
ss
test
std
and
sbb
and
shl
ja
loope
sub
cmp
repnz
mov
push
jg
sti
mov
xchg
jnp
bound
lcall
lods
clc
dec
and
addr16
out
or
cmp
imul
sub
sub
push
testb
jle
out
dec
ljmp
and
mov
out
cs
popf
cmp
and
mov
arpl
jnp
hlt
scas
xlat
int
cmpsb
fwait
push
ljmp
insb
mov
pushf
test
movsb
sbb
push
and
std
out
repnz
ljmp
push
xchg
repnz
fwait
and
loope
lcall
add
gs
andb
jecxz
lahf
lea
int
mov
lret
xor
push
das
push
push
sbb
push
int3
lock
ret
xor
pop
pop
adc
xchg
jp
gs
and
push
add
imul
adc
int
xchg
sub
and
ret
mov
mov
or
fmull
and
adc
push
addr16
cmc
popa
scas
stc
mov
gs
cmpsl
mov
jle
shlb
icebp
mov
xchg
test
icebp
ja
lahf
xchg
stos
cmpsb
or
pop
xor
cmp
test
or
in
mov
in
jg
mov
sti
fsubrs
xor
and
cmp
mov
rolb
cmp
pushf
ja
dec
into
and
pop
scas
sbbl
sbb
test
jl
pop
mov
jbe
stos
xchg
jge
sub
sbb
fimuls
cmp
orb
cmc
mov
mov
insb
stc
sbb
neg
xchg
dec
lret
addr16
movsl
ret
lods
popf
test
dec
mov
sar
or
or
xor
rcl
addr16
popf
iret
cltd
jle
inc
pop
push
cmp
test
inc
in
lods
gs
orb
stos
jle
loope
inc
mov
mov
data16
shlb
mov
xchg
outsb
into
loope
cmpsl
arpl
push
add
and
sub
ljmp
cmp
aad
in
jle
enter
add
in
cmpsl
mov
or
jge
es
arpl
stos
mov
loopne
pop
addr16
xchg
push
mov
mov
sub
inc
lods
mov
popf
lahf
fnstcw
pop
int
mov
ja
inc
out
fstpl
sub
jecxz
add
sub
mov
fnstenv
in
push
and
push
and
mov
add
fldenv
nop
mov
sub
rolb
lcall
nop
and
inc
push
or
aaa
push
and
stc
mov
mov
pop
pop
push
mov
adc
iret
push
ss
push
into
stos
adc
lret
xchg
out
or
xchg
test
loop
pusha
int3
fsubs
imul
fldcw
add
jl
in
xchg
or
xlat
and
scas
mov
pop
mov
cmpsb
lods
xor
mov
sbbb
test
cmpsl
mov
movsl
xor
or
adcl
shrl
xchg
xchg
ret
test
add
je
inc
int3
xlat
fcom
push
iret
mov
int
xchg
imul
xchg
cmp
xchg
inc
adc
mov
popf
dec
scas
mov
outsb
add
push
push
mov
rcl
addr16
std
js
pushf
repnz
xor
das
sbb
les
sub
outsb
pop
dec
cmp
lods
pop
adc
test
or
gs
aad
popa
clc
mov
push
fnstcw
push
mov
mov
mov
or
mov
jge
xor
cmpsb
lock
and
sub
pop
xchg
mov
cmp
or
mov
test
scas
fwait
mov
xchg
mov
stc
int3
pushf
sti
test
in
lds
sub
mov
in
jl
test
mov
in
pop
mov
inc
add
xor
push
movsl
mov
xchg
flds
cmc
fcoml
into
mov
les
pop
and
addl
inc
xor
push
stos
rolb
xchg
int3
sahf
fcompp
mov
inc
add
add
fnstcw
cmp
mov
test
shrb
jbe
push
lock
pop
ljmp
cld
cs
push
pop
enter
insl
or
inc
jbe
aad
add
push
loopne
inc
sbb
push
add
in
sub
cmp
bound
imul
negl
sti
std
xchg
jnp
lcall
clc
sbb
insb
sbb
sahf
fs
push
aas
jmp
sahf
push
add
jae
mov
dec
add
test
dec
jnp
dec
pop
lods
xor
mov
outsb
cmc
and
cvtps2pi
cmp
out
aad
lret
push
imul
mov
sub
add
inc
mov
mov
lcall
inc
sbbb
add
test
and
popa
fimuls
sub
adc
stos
movsb
stc
loopne
imul
fisubrs
push
mov
mov
cld
push
xor
pop
lahf
mov
or
pop
xor
and
or
sub
dec
mov
pop
lcall
jge
into
add
push
jl
adc
inc
mov
mov
mov
les
pop
cmp
popf
or
sbb
movsb
or
in
sbbl
out
pop
mov
and
xchg
lcall
add
push
fsqrt
shlb
push
push
cmp
add
test
sbb
fstp
jge
mov
mov
add
std
mov
cmpsb
sbb
negb
fxch
push
js
aaa
dec
dec
xlat
popf
cmp
fstps
xchg
pop
loope
mov
inc
out
insb
icebp
lods
hlt
stc
loop
mov
mov
xorb
lahf
mov
lret
cmpsb
xchg
clc
ljmp
ja
mov
cmpsb
fsub
je
std
mov
or
out
jns
push
xor
inc
xor
test
es
movsb
jp
mov
pop
push
jl
in
adc
loopne
in
mov
mov
or
or
in
jg
sti
scas
inc
mov
fimull
and
cs
mov
popa
xor
jnp
sub
sahf
push
push
sub
push
aad
sub
out
push
mov
lds
mov
push
and
addb
mov
mov
push
rorl
add
sub
out
sbbb
xchg
adc
pop
in
inc
js
loopne,pn
lock
jae
mov
cltd
aam
test
xchg
sahf
cmp
fsubs
sbb
lods
imul
lds
jecxz
push
cltd
cmpsl
dec
int3
mov
sbb
sti
clc
arpl
repnz
fldt
cmc
xchg
cli
scas
xchg
cld
test
dec
aaa
adc
and
shr
cltd
mov
sub
jne
mov
push
aam
pop
mov
sbb
sub
cltd
mov
fiaddl
mov
mov
andb
push
pop
pop
and
loopne
xor
cmpsb
or
inc
mov
pop
or
cmp
imul
out
stc
cmp
mov
xchg
mov
and
jns
pop
in
dec
std
cmpsb
push
ret
cmp
push
dec
testl
sbb
push
decl
xchg
mov
testl
daa
jbe
fld
test
push
xor
xorb
shl
mov
lds
xchg
fistps
push
pop
sub
popf
mov
mov
loop
mov
and
mov
repz
pop
mov
push
xchg
sub
inc
xchg
ds
out
std
lock
or
insb
cmp
cltd
fisubs
pop
jmp
cmp
out
xchg
push
pop
push
dec
insb
flds
sbb
stos
lea
and
or
mov
xchg
sbb
mov
scas
rcrb
xor
mov
ljmp
mov
iret
push
cs
pop
push
es
push
stos
lret
fsubrl
push
sbb
hlt
mov
cli
dec
pop
mov
and
cmp
hlt
popf
adc
dec
push
aaa
or
lods
cld
loop
movsb
pop
cli
mov
lods
add
sbb
inc
bnd
int
leave
js
push
cmpsl
jbe
les
mov
das
pop
cmp
cmp
cmp
iret
mov
add
jecxz
dec
outsb
adc
imul
dec
pop
dec
push
pop
leave
lcall
stos
push
test
cltd
mov
sub
ss
pop
rcrb
out
mov
loopne
xorl
mov
das
pushf
push
stc
imul
cmpsl
fsts
pop
sub
jp
jb
fldcw
and
lods
fimuls
sbb
int3
scas
sahf
out
inc
int
int3
add
test
loope
cmp
jecxz
test
or
les
add
cmpsl
jge
pusha
mov
ret
out
and
and
faddl
dec
push
iret
mov
repz
cmpsb
lock
xchg
push
nop
data16
movsl
andl
fwait
xor
mov
or
mov
sbb
repz
std
shlb
repz
je
pop
popa
cmpsl
das
out
lock
inc
es
shl
flds
jns
pop
pop
stos
in
faddp
mov
aad
mov
js
lret
es
cmp
jno
in
push
scas
mov
clc
dec
aas
or
sub
dec
je
xchg
or
fprem
addr16
int
negl
xchg
aad
and
inc
sbb
in
sub
outsl
rorb
popa
mov
inc
jp
test
inc
into
shll
std
std
xlat
xchg
imul
popf
imull
inc
repnz
mov
loop
cmp
jns
scas
rolb
icebp
dec
fsts
repnz
lcall
std
fstps
sti
and
lea
cld
popa
fsts
mov
lret
mov
out
mov
fsubrl
push
int3
das
mov
mov
test
push
sbb
pop
adc
in
mov
js
and
jp
jne
dec
fs
lods
xchg
cli
jae
cmpsl
mov
fldln2
push
jle
pop
popf
xchg
xchg
jge
aas
out
out
subl
mov
insb
cmp
push
add
es
sbb
int3
inc
mov
out
mov
mov
fbstp
fistl
enter
cmp
jae
push
data16
push
fcmovb
outsb
ret
icebp
dec
dec
imul
push
cwtl
push
mov
pop
and
xor
or
aad
nop
inc
in
sbb
test
adc
jbe
sub
xchg
adc
std
add
stos
fwait
mov
push
or
mov
std
loop
xlat
dec
mov
push
lods
call
xor
mov
popf
pop
mov
je
xchg
bound
mov
push
jae
insb
aad
pop
jne
rclb
pop
lcall
aam
pop
jbe
mov
addr16
inc
xchg
data16
jg
jbe
stos
push
test
into
mov
pop
pop
shlb
hlt
cmpsl
test
mov
enter
fdivl
inc
les
ret
xchg
cld
test
incb
xchg
insl
xchg
imul
pop
cs
inc
xchg
leave
daa
sti
sub
icebp
jecxz
sbb
rorl
cs
and
xchg
nop
pop
loope
or
mov
and
es
push
inc
vcvttsd2si
test
jae
call
xchg
push
fcom
test
xchg
dec
add
adc
fisttps
dec
cmpsl
iret
mov
pop
adc
leave
scas
aam
movsb
std
lods
push
fstps
gs
xor
sbb
into
lahf
mov
insb
aad
push
or
fwait
push
fstps
sub
movsb
imul
int
testl
and
in
mov
test
cmp
lret
fcompl
daa
push
mov
rolb
incb
push
call
cld
fdivl
call
xor
outsb
xor
mov
shlb
rcr
dec
lret
mov
addr16
out
xor
mov
cltd
push
lds
loope
shlb
and
adc
pop
xchg
lea
push
mov
js
xchg
loopne
icebp
xor
mov
dec
rorb
movsb
jle
pop
dec
hlt
sub
mov
mov
jns
stos
cmpsl
int
enter
fsubrl
dec
pop
pop
and
movsb
pushf
scas
push
repz
add
ficoml
jno
pop
xchg
fwait
loopne
cmpsb
adc
jge
push
aam
or
flds
sti
dec
imul
cli
out
data16
cmp
dec
and
pop
nop
xchg
ss
sbb
adc
sti
lcall
xorl
out
mov
mov
or
pop
gs
imul
call
fmulp
mov
and
ja
out
lcall
jge
adc
push
adcl
dec
and
test
jne
and
fisttpll
mov
fldenv
scas
scas
movl
jbe
lea
xor
scas
or
fcompl
icebp
dec
cmp
jmp
out
xchg
sub
sub
push
movsl
dec
jno
and
das
mov
dec
shll
ja
ss
insb
clc
loop
imul
mov
xchg
dec
std
les
push
out
pop
fisttpl
sbb
mov
mov
inc
adc
std
mov
push
pop
shrb
je
pop
cmp
dec
jns
push
scas
into
test
sbb
mov
cmpsl
cmpsb
fisttps
fnsave
jl
jecxz
or
mov
imul
pop
pop
jmp
inc
mov
push
cmp
mov
push
dec
out
push
xorb
nop
dec
ss
fdivp
mov
hlt
sbb
insl
inc
cli
add
into
pop
aad
imul
sbb
in
daa
cwtl
leave
mov
mov
inc
ds
jmp
popa
aas
into
inc
fnstcw
test
mov
stos
mov
adc
or
ficoms
push
jmp
dec
movsb
cs
inc
mov
xchg
jge
pop
fistpl
xor
sbb
mov
pop
mov
xchg
addr16
xlat
out
pop
sbb
adc
mov
mov
data16
daa
cli
movsb
pop
mov
push
cmc
outsl
stc
and
loope
mov
jae
mov
loope
push
out
jecxz
pop
clc
jmp
or
sub
les
xchg
in
mov
dec
and
cmp
aam
in
scas
push
or
sub
fcmove
jp
loope
jmp
movsb
fstpt
test
outsl
jmp
xchg
xlat
and
popf
es
jbe
cmp
into
js
pop
cmp
shrl
mov
jbe
addb
sub
mov
scas
hlt
mov
xchg
add
mov
xor
out
lcall
mov
fld
xchg
cmpsl
scas
std
push
xchg
imul
cmp
or
jnp
and
bswap
mov
xor
push
cmp
jl
pusha
gs
or
in
mov
xchg
cwtl
test
fistl
sbb
sarb
cmp
loop
cmp
rcrl
aam
xor
mov
vmulsd
loope
add
int
movsl
pop
sarb
mov
mov
in
cmc
cmp
cmpsb
or
das
add
hlt
addl
dec
into
cld
or
push
repz
cmp
and
sahf
and
out
lock
pushf
pop
and
pop
std
push
das
and
push
gs
fucomp
nop
fcmovnu
jecxz
fwait
scas
mov
das
gs
sbb
sahf
icebp
enter
imul
jno
jecxz
ficoms
test
mov
addr16
dec
into
fwait
clc
sub
inc
xchg
and
test
outsb
cmp
cmp
jnp
mov
xchg
out
xchg
mov
cmpsl
jp
leave
clc
pop
xor
add
insb
out
or
cmp
int
cmp
sbb
fnstenv
inc
jp
cld
dec
hlt
std
cmp
test
iret
sbb
sar
sahf
adc
or
pop
sar
mov
dec
mov
sbb
and
shll
cmc
add
mov
push
fs
int3
repz
data16
mov
aam
test
cmpsl
xchg
pop
scas
jae
ss
enter
fdivl
mov
movsb
notb
ds
inc
jns
push
adc
xchg
xchg
incb
sub
test
div
push
add
pop
jae
pop
test
js
movsl
cli
sahf
and
fadd
pop
cmp
fsts
lock
daa
repz
stos
xor
mov
mov
xor
ret
test
xchg
in
sub
lods
jo
pop
mov
jbe
mov
and
sbb
mov
decb
sbb
inc
stos
inc
xorl
dec
shlb
add
sub
mov
mov
notb
mov
push
cwtl
adc
imul
outsb
popf
xchg
jbe
popf
cmovno
inc
sub
outsb
test
js
jle
inc
repz
aad
outsb
fwait
mov
xchg
add
lods
cli
dec
pop
scas
test
daa
or
sbb
scas
mov
test
repnz
adc
sub
mov
sbbl
push
push
ss
test
test
and
mov
adc
push
fimull
fildll
enter
push
mov
mov
push
jae
in
in
jo
shll
pop
sti
dec
fs
or
sahf
mov
mov
mov
dec
inc
int3
pop
inc
ds
mov
xchg
int
push
ss
jno
fsubr
mov
notl
js
cmc
fbstp
xor
fwait
add
xchg
pop
lret
cmp
adc
push
or
loop
divb
ja
dec
lret
add
testb
xchg
mov
sbb
mov
lcall
sub
clc
mov
ja
cmpsl
cmpsl
xchg
xor
repnz
nop
aam
incl
imul
out
icebp
clc
sti
lret
dec
dec
ret
enter
stc
std
fnstcw
mov
test
dec
inc
add
jle
or
mov
adc
fldenv
pop
test
mov
dec
push
add
adc
push
xor
and
xchg
jns
mov
stc
or
push
xor
inc
imul
insl
ret
push
inc
jecxz
jg
mov
sbb
scas
fstps
xor
lea
pop
cltd
cmp
sub
inc
push
loope
push
add
outsl
out
sbb
inc
cmp
pop
cmp
mov
es
test
data16
cltd
in
sub
jle
data16
in
lods
inc
mov
shrl
adcb
fmul
sbb
xor
pop
dec
jp
cmp
xchg
sbb
or
dec
inc
pop
add
push
add
add
dec
sbb
mov
pop
outsl
ds
movsb
xor
fldenv
mov
scas
push
sub
push
sub
sub
andl
xchg
int
add
hlt
lds
xchg
sbb
push
ds
fs
push
bound
fsubr
jae
mov
pop
mov
or
pop
sbb
cli
icebp
aaa
sbb
cmp
adc
pop
pop
vpminub
xchg
inc
dec
mov
jne
aam
mov
dec
ja
ljmp
lock
or
push
cmp
and
iret
popf
clc
call
lcall
rcl
sarb
fidivs
or
int
std
scas
fnstcw
jae
jg
sub
loope
jnp
xchg
mov
hlt
stos
repz
test
push
jb
cli
in
std
int3
xchg
push
mov
in
jecxz
ficoms
dec
cwtl
push
sti
jno
jno
xchg
loope
sti
pushf
mov
mov
push
jecxz
into
pop
popa
aam
and
pop
mov
ljmp
add
repnz
add
and
sti
lock
cmc
outsl
int
pop
dec
ljmp
test
scas
loope
data16
cmpsl
pop
or
js
arpl
xchg
adc
and
mov
scas
test
sti
and
mov
mov
and
pop
arpl
aam
jns
jle
repz
xchg
ss
sti
lcall
push
mov
xchg
jns
hlt
pop
sbb
sbb
xchg
xchg
cmp
lret
mov
jno
fldcw
inc
cmove
add
inc
xor
xchg
cmpsl
jl
push
sti
inc
xchg
fisttpll
pop
sub
mov
inc
adc
cltd
fwait
lahf
daa
mov
test
scas
out
mov
jnp
ljmp
ds
and
push
and
ja
xchg
xchg
fwait
scas
rcrl
xchg
insl
push
xor
xchg
mov
cmpsb
push
pop
xor
mov
jae
xor
out
mov
jmp
mov
dec
mov
out
xor
int
jnp
pop
call
mov
sbb
cmpsl
or
xlat
jb
imul
adc
lret
rcrb
cmpsl
sbb
int
ja
cmpsb
icebp
inc
call
fidivl
pop
xchg
jmp
iret
inc
mov
pop
add
mov
jp
mov
and
mov
icebp
mov
out
sbb
push
fsts
xchg
imul
sub
std
mov
or
jg
test
ficompl
test
lahf
mov
enter
pop
bound
pop
mov
inc
push
and
xchg
arpl
xchg
pusha
cmpsb
clc
pop
adc
frstor
ret
lods
movsl
add
out
xchg
in
push
icebp
jp
test
cs
mov
pop
xchg
fnstsw
lods
mov
lcall
cmp
or
out
test
icebp
push
sub
pop
cmp
mov
aad
pop
xor
movsl
dec
add
sub
and
outsb
xor
pop
shrl
daa
sub
push
mov
lods
movsl
jl
jo
movsl
cmc
test
adc
inc
sbb
lock
mov
sbb
aaa
aad
add
repnz
or
sbb
fisubs
into
mov
sub
push
ljmp
popa
push
lock
fsubl
movsb
jp
cmpsl
mov
fisubl
jnp
test
repnz
pop
addr16
mov
int3
call
test
inc
stc
mov
push
es
adc
sahf
mov
cmp
adcl
fsubl
mov
or
les
das
cmpsb
fidivrs
test
jb
xchg
cmp
test
mov
push
bound
adc
cmp
les
loopne
add
scas
sbb
and
mov
and
std
sbb
jle
fwait
sahf
or
push
and
pop
sbb
jmp
jle
mov
insb
cmp
stos
add
test
adc
cmpsb
pop
inc
mov
push
adcl
mov
pop
sbb
mov
cmp
cs
or
in
jbe
cld
inc
daa
push
or
test
xor
jl
out
mov
mov
lahf
push
push
adc
nop
popa
mov
fistpl
or
jnp
pop
inc
jecxz
mov
mov
loopne
ret
ljmp
daa
inc
mov
scas
out
stos
popf
xor
mov
ficomps
jae
inc
push
scas
or
pop
shrb
jl
scas
roll
sbb
rorb
mov
mov
inc
mov
and
imul
xchg
cmp
xlat
imul
or
push
push
mov
jge
incb
pop
fs
and
call
fisttpll
add
sbb
imul
das
cs
jle
into
mov
sub
lcall
mov
xorb
mov
fsubrp
pop
push
sbb
push
in
leave
cmpl
leave
pushf
int3
xchg
mov
mov
hlt
testb
xchg
sti
mov
push
int
pop
jecxz
sahf
xor
mov
aaa
es
clc
cli
cmpsl
ret
out
ret
arpl
mov
pop
imul
cmp
clc
mov
leave
pop
mov
test
or
pop
scas
jle
jne
ljmp
std
test
mov
into
xchg
and
int3
int
imul
lret
lahf
and
cwtl
ss
mov
popf
shl
adc
push
xchg
jge
mov
push
fstpt
aad
mov
xchg
fcmovnb
stc
out
mov
mov
and
fwait
cli
pop
fcompl
out
loopne
incl
dec
fs
aad
cmp
dec
aad
fisubl
push
jge
xchg
add
das
xchg
xchg
sbb
push
sti
dec
and
mov
pusha
dec
sbb
or
xlat
es
fcoml
jmp
push
addr16
dec
push
mov
inc
mov
mov
pop
fsubp
popa
push
cli
leave
sti
xchg
pop
ficomps
xor
scas
fcmovne
and
clc
adc
inc
ror
xchg
jge
adc
cltd
out
add
jle
jno
stc
jl
es
pop
jne
lock
int
sahf
push
and
out
cvtps2pd
jb
jno
mov
test
ljmp
adc
gs
pop
mov
adc
inc
gs
cmp
es
stos
mov
mov
xor
mov
test
repz
arpl
jo
cmp
in
in
lret
and
mov
lods
pop
stos
sbb
push
inc
mov
clc
inc
mov
pushf
lods
xchg
dec
pop
dec
sti
lods
cmpsl
add
das
and
fdivr
ljmp
mov
or
lods
mov
mov
cmp
mov
push
mov
jnp
repz
mov
inc
cld
dec
out
shlb
xchg
es
pusha
repnz
icebp
inc
pop
add
movsb
mov
enter
test
lcall
out
lods
daa
xchg
int
stos
fisubrl
ret
rolb
insl
dec
mov
in
push
loop
int3
out
jno
mov
aaa
add
fdivrs
cmp
loope
aas
mov
test
in
fwait
and
flds
mov
repz
push
or
pop
sbb
cmpsb
cmp
loopne
aad
subl
stos
mov
mov
enter
jecxz
xchg
cli
aaa
pop
ss
sbb
dec
cli
sbb
jmp
cmp
cmp
xor
sbb
inc
or
xor
out
xchg
xchg
in
in
repnz
cmp
test
fidivrs
sbb
lods
jl
sbb
rcrb
stc
sbb
mulb
dec
xchg
adc
mov
sbb
roll
pop
push
cmp
cmp
cmp
fwait
dec
imul
xor
push
jl
lcall
in
stc
inc
pop
lds
add
movsb
es
dec
int
roll
subl
mov
fnstcw
int3
adc
ljmp
push
mov
lret
cmc
adc
jl
mov
cwtl
repnz
mov
sub
cs
inc
cmp
add
xor
jge
adc
icebp
idivb
mov
pop
xchg
lret
call
cmpsb
or
pushl
clc
cmpsb
inc
daa
jno
sub
addb
or
ja
out
nop
outsb
jns
fcompl
ficompl
mov
test
test
ja
shrl
insb
into
push
push
xchg
and
mov
iret
sahf
push
cmp
jle
scas
jp
fcompl
fldcw
inc
paddsb
hlt
cwtl
mov
in
lods
dec
es
test
add
xchg
fildl
xchg
add
cs
pop
fsts
cmp
sbb
sbb
xchg
sub
sbb
pop
cli
js
cmp
add
test
mov
add
xchg
xchg
test
rcr
inc
cmp
rorl
sbb
loop
shr
pop
ret
push
pop
pop
cmp
pop
cwtl
mov
pop
mov
mov
fldenv
mov
and
nop
movb
push
dec
shl
sbbb
sbb
mov
pop
adc
fldenv
popf
lcall
inc
mov
push
fs
test
mov
lcall
sbbb
scas
fnstsw
fisttpll
call
pop
ret
fisubs
aam
xchg
sahf
js
shrb
test
enter
roll
and
xchg
mov
and
fcmovbe
mov
call
and
mov
stos
sub
inc
jno
xchg
mov
popf
imul
mov
add
fldcw
cmp
cmp
das
push
test
and
je
pop
sbb
rcr
jae
rcr
jb
inc
jecxz
or
push
pop
adc
cmp
daa
fidivrl
jnp
lds
mov
mov
xchg
cmp
mov
pop
lea
and
xchg
push
sbb
out
vpshld
hlt
inc
dec
dec
ss
xor
mov
pop
mov
mov
mov
in
xchg
test
jnp
test
xchg
sbb
cmp
cmp
lds
and
and
jmp
notb
xchg
adc
push
xchg
ss
imul
jns
inc
popf
popf
and
loopne
mov
inc
xor
test
sub
dec
daa
data16
fnstcw
aas
hlt
pop
out
movsb
pop
cmp
jo
xchg
mov
gs
ja
mov
mov
jnp
arpl
in
cs
sbb
movsl
repnz
sub
push
insl
mov
jge
fcomip
fldcw
push
imul
xorl
shrl
fwait
ss
mov
aam
loope
loope
pop
xchg
mov
gs
stc
ret
xor
adc
pop
cwtl
es
dec
in
xor
mov
repz
mov
fs
aad
insl
mov
or
clc
lods
into
sahf
cli
mov
mov
mov
xchg
inc
aaa
mov
ret
rep
fld
add
scas
jno
mov
lock
imul
xchg
enter
and
xchg
xor
mov
int
lret
jl
jae
mov
cmpsb
nop
add
lahf
cs
jnp
jnp
lret
inc
xchg
out
andb
fnstcw
adc
aad
int3
push
or
arpl
and
and
mov
loopne
and
scas
xchg
cs
adc
sbb
push
in
adc
push
js
pusha
xor
movsb
or
outsb
test
ja
out
fldcw
pushf
dec
and
inc
or
pop
loopne
jne
xchg
mov
sub
cmpsb
inc
int
pop
stc
mov
scas
je
in
aam
add
jecxz
push
xchg
std
xchg
jle
inc
xchg
pop
adc
insb
or
push
pop
jbe
mov
sub
mov
jl
jns
push
outsb
dec
pop
lret
in
pop
xchg
stc
adc
out
cmp
inc
lock
xchg
insl
scas
jae
jmp
aam
cmp
vpavgb
cs
outsb
arpl
mov
push
out
sub
xor
out
or
lret
aaa
out
mov
add
cmp
push
push
test
pusha
sbb
test
daa
jp
xchg
fs
pop
and
in
scas
mov
gs
idivl
sbb
xchg
test
mov
xor
lcall
in
inc
pusha
bound
inc
mov
data16
sub
or
jb
sbbb
sbb
mov
pushf
mov
xlat
push
das
into
das
jle
jnp
jp
sbb
sbb
xor
fldl
pop
scas
aaa
cmpsb
dec
mov
repz
adc
out
or
xlat
or
adc
addr16
cmp
mov
pop
pop
pop
and
mov
negb
inc
cmp
hlt
cli
pop
sub
jae
add
jg
sbb
jne
out
cmp
add
jle
jge
mov
and
mov
and
sub
mov
adc
lea
xchg
and
pop
jge
dec
xor
stc
mov
pushf
push
pop
shrl
xchg
push
and
out
mov
stc
fcmove
rcr
inc
mov
jmp
fwait
gs
and
jmp
out
mov
popa
jns
loop
test
sbb
insb
cli
les
mov
cmp
outsl
out
outsl
pusha
push
imul
add
xchg
movsb
cmc
xor
jg
lock
ja
xor
lds
xor
xchg
adc
dec
mov
sub
push
adc
sbb
aam
mov
push
xchg
cmpb
pop
xor
sub
fs
xchg
sub
mov
repz
cmpsl
or
imul
cmp
les
lods
stos
mov
aaa
movsb
cmp
mov
out
out
dec
ja
out
cmp
xchg
and
es
repnz
sti
dec
add
stos
and
push
cli
xor
movsb
jnp
fisubrl
vpxor
inc
push
adc
sahf
scas
loop
mov
rcrl
cld
xchg
sub
jnp
jbe
aas
mov
xor
fs
jl
mov
cmovo
xchg
cmpsb
shll
scas
xchg
inc
shrl
adc
int3
mov
outsl
sub
fnstenv
push
sub
sub
xchg
inc
data16
int
jg
pop
je
add
out
cmpsb
xchg
mov
mov
push
dec
loopne
jae
cs
aam
adc
and
and
jno
scas
je
aaa
std
sbbb
sbb
ss
movsl
out
sbb
fwait
adc
and
sti
dec
ja
repnz
sbb
mov
call
sbb
mov
inc
mov
pop
mov
out
add
mov
xlat
call
xchg
std
fisubrl
fnsave
movsl
rcl
mov
sub
out
fildll
fnstenv
cmpsb
jge
xor
jae
push
cld
sbb
aaa
es
into
stos
mov
mov
gs
ficomps
leave
mov
adc
and
outsb
mov
sub
in
test
add
pop
sub
mov
sub
movsl
fistl
aaa
push
xorl
mul
pop
xchg
les
gs
jmp
in
ja
scas
dec
pop
inc
cmc
push
cld
loope
hlt
imul
adc
sbb
jns
fistps
test
push
adc
gs
arpl
add
stc
push
mov
jg
divb
jle
test
scas
jbe
shlb
std
sbb
outsb
xchg
dec
pop
fwait
push
jmp
pop
shlb
outsl
push
lods
cmp
sbb
test
adc
sub
push
mov
mov
jb
or
cltd
gs
fsubp
adc
repz
lcall
stos
sbb
sarl
mov
inc
daa
popf
adc
mov
inc
imul
fsubrs
mov
add
jp
cmpsb
out
mov
cmpsl
std
mov
int3
fs
sbb
repnz
and
sahf
lods
pop
popf
std
pop
add
push
repnz
int3
testb
sbb
lret
mov
jae
lock
repnz
dec
jbe
out
repz
sbbl
in
loopne
xchg
shll
sbb
mov
push
adc
mov
mov
dec
mov
jbe
mov
sbb
ret
test
test
jecxz
out
mov
aaa
mov
mov
add
test
int
inc
and
add
lcall
adc
sahf
fnstenv
add
lea
xorl
mov
dec
cmp
mov
dec
add
adc
sub
out
inc
add
push
movsb
fstpt
in
lods
cmp
iret
fcoml
mov
sub
ret
cmp
in
pop
sahf
mov
movsb
mov
test
stc
icebp
sbb
inc
dec
sub
out
jg
add
jge
daa
jp
push
jbe
in
test
lret
fnstenv
fcmovnu
loope
push
add
sbb
sbb
fisttpll
adc
adcl
jne
jp
push
mov
ds
and
dec
pop
add
jbe
test
je
or
mov
inc
and
lahf
insb
setp
insl
out
mov
andb
fsubrl
int
inc
hlt
mov
mull
test
or
pop
aam
adc
pop
cmp
pushf
or
dec
push
push
mov
fldenv
xchg
leave
fwait
hlt
xchg
ja
push
movsl
aam
mov
adc
aas
std
xor
mov
repz
fcom
mov
enter
cmp
xchg
in
fdivrl
testb
dec
jecxz
incl
mov
dec
push
jl
mov
cmpsb
sbb
and
js
addl
push
mov
arpl
inc
mov
pop
cmpsb
mov
mov
aad
pop
lods
or
stc
inc
cmpsl
jmp
loopne
inc
push
sbb
jge
rcrb
or
cmpsl
mov
repz
icebp
js
sbb
fnstenv
mov
ficompl
pusha
push
mov
dec
fisttpl
push
jno
test
push
mov
mov
xchg
adc
push
aam
fs
cmp
pusha
repnz
mov
sti
xchg
dec
pop
std
fisubrl
jle
sbb
sar
fnstenv
cwtl
movsb
cld
movsb
popa
xchg
mov
test
mov
xor
out
or
xchg
cmp
scas
mov
mov
or
ficomps
sbb
mov
std
mov
push
mov
sbb
mov
pop
mov
das
inc
and
adc
hlt
sub
mov
mov
xor
dec
mov
cli
popf
cmpsl
scas
mov
sarb
xlat
pop
pop
arpl
dec
lea
dec
pushf
jle
fcmovb
sub
ja
shrb
jmp
cld
dec
mov
leave
dec
mov
xchg
in
rcrb
or
mov
jnp
cli
sub
into
insl
mov
push
int
rolb
push
inc
jo
wrmsr
mov
rcll
pop
je
mov
out
cmp
popa
fidivrs
mov
jp
dec
lods
sub
mov
jle
mov
sub
scas
mov
stos
and
shl
std
hlt
jnp
mov
sti
int
adc
sbb
jmp
push
pop
and
and
in
fs
xchg
lret
insl
mov
jns
fbld
push
adc
push
enter
sbb
sbb
mov
outsb
js
addr16
inc
jns
pushf
xchg
hlt
xor
or
or
add
andb
xor
aas
adc
inc
pop
inc
and
add
scas
fnstenv
sub
icebp
jp
insl
pop
lods
test
movsb
daa
test
dec
sub
xor
mov
outsl
xchg
mov
out
in
insb
mov
pop
mov
in
sbb
das
inc
gs
mov
inc
out
push
into
loope
mov
shl
out
std
push
add
sbb
pop
mov
mov
adc
fs
test
loop
es
call
sbb
dec
pusha
test
cwtl
push
mov
inc
mov
shlb
stos
cmp
and
sub
xchg
dec
sbb
mov
push
je
lds
std
dec
inc
lahf
jnp
or
dec
sub
inc
sarl
cmp
mov
in
out
out
push
push
jae
popa
scas
in
push
fsub
aaa
inc
lock
mov
xchg
add
jl
inc
pop
mov
pusha
xor
in
aad
in
jle
mov
add
mov
xor
sub
xor
and
std
cmp
rcr
les
rolb
fistpll
rcrl
int
ret
add
mov
mov
scas
cmpsb
dec
cld
or
jno
jnp
dec
subl
pop
rcr
push
paddsb
jno
sti
pop
test
test
xchg
jae
outsb
xchg
jg
jo
xor
int3
pop
pop
jns
xor
and
jmp
push
popf
mov
mov
repnz
mov
dec
int
mov
mov
cmp
xchg
out
sub
fwait
int3
jne
add
loop
scas
lret
roll
push
outsl
cmpsb
pop
xchg
mov
int3
repz
call
call
sbbl
es
fwait
mov
mov
adc
push
pushf
outsl
mov
inc
jg
jle
mov
cmpsb
sub
repnz
mov
and
and
add
std
mov
xchg
mov
mov
pop
in
out
mov
int
scas
inc
sbb
inc
scas
xor
aaa
jae
out
fimull
pop
jns
fstps
inc
out
scas
ja
pop
mov
inc
das
adc
in
push
cmpsb
mov
aad
push
scas
push
outsl
lods
jae
xchg
and
stos
inc
hlt
adc
fstp
ljmp
or
sub
xchg
adc
stc
dec
fsubl
inc
jne
cwtl
jg
fiaddl
and
mov
push
inc
or
fsubl
addr16
pop
jge
scas
mov
push
jle
jnp
outsl
add
adc
jle
and
mov
mov
gs
call
test
mov
in
jle
stc
sub
and
add
inc
sarl
hlt
int
roll
pop
lret
outsb
lock
xchg
dec
aad
in
dec
icebp
mov
pop
scas
scas
aam
test
xlat
mov
rorl
sbb
dec
ret
lea
mov
cld
scas
lahf
sahf
test
mov
dec
pop
pop
sbb
stos
lret
dec
or
fcompp
cli
icebp
movsb
or
repnz
or
xchg
test
sbb
lea
les
stos
xorl
fwait
jge
test
mov
jae
mov
fwait
ss
je
fldenv
cmpsb
mov
insb
pusha
cmp
mov
jo
mov
movsl
push
outsl
mov
add
enter
out
lock
subl
test
fnstcw
sbb
pop
mov
jl
pop
lret
mov
cltd
xor
xor
jb
test
cltd
aaa
loopne
in
fidivs
sub
push
sbb
or
pushf
jb
mov
pop
add
mov
jae
sbb
data16
cld
mov
test
mov
xchg
in
or
stos
ds
and
pusha
fcomps
sub
and
mov
nop
dec
je
cmp
jmp
iret
jb
xor
mov
sbb
push
fxch
insl
mov
lods
inc
jns
push
pop
out
mov
cvtdq2ps
push
adc
lcall
das
repz
outsb
mov
dec
push
cmp
jge
popf
or
xchg
scas
cld
lret
test
test
mov
lods
fisttpl
cmp
out
pop
out
pop
mov
or
imul
jp
mov
in
push
mov
add
hlt
cmpsl
add
inc
mov
cmp
fisubrs
mov
inc
jbe
cmp
cmpsb
and
out
bound
mov
cmp
inc
mov
jg
mov
ds
cmp
arpl
es
mov
xor
xor
xchg
aad
sti
in
scas
mov
mov
or
sub
jecxz
stos
jl
arpl
mov
test
std
aam
adc
daa
testl
xlat
mov
jbe
cmpsb
push
fldenv
sub
cmc
sbb
dec
outsl
loopne
mov
push
mov
js
jbe
fnstcw
imull
xor
sbb
mov
les
repz
ret
addl
in
lcall
xor
dec
and
repz
mov
and
xor
jns
int
rol
addr16
insl
pop
cld
pop
dec
sub
out
mov
sub
jmp
sbbl
leave
mov
addr16
mov
es
addr16
sub
dec
sub
out
sbb
jb
cwtl
arpl
std
inc
ljmp
jp
lock
out
in
mov
in
adc
xchg
loopne
xchg
mov
push
xchg
dec
mov
mov
cs
std
and
jae
subl
ss
aam
mov
test
test
mov
in
in
inc
shll
lock
push
lahf
mov
mov
pop
xchg
fldcw
jae
fsubp
and
jns
addr16
xor
add
test
jae
mov
cmpb
adc
test
inc
mov
xor
or
sti
xor
push
mov
aad
pop
mov
xchg
out
xor
ljmpw
add
movsl
add
or
mov
dec
imul
jmp
test
in
push
mov
cmp
push
dec
mov
pop
mov
sbb
xlat
fidivs
xor
push
jecxz
lods
cli
mov
pop
sbb
xor
test
mov
ret
fldt
in
push
add
push
xchg
pop
test
xchg
mov
neg
xor
push
jecxz
cmpsb
call
aas
cmp
int
scas
idivb
aad
pop
mov
cmp
mov
mov
mov
aaa
das
push
popl
sbb
cmp
test
lods
les
cmpsl
mov
data16
inc
je
push
outsb
insl
in
js
mov
or
cmp
aad
mov
lcall
mov
ds
jno
mov
std
xchg
jge
dec
mov
mov
lods
dec
cltd
mov
mov
fdiv
sub
xchg
mov
rcll
mov
aam
adc
adc
sub
push
popf
mov
repz
pop
loopne
addr16
lahf
fs
dec
jno
or
push
rcrl
fldenv
test
mov
sarl
roll
sbbl
icebp
dec
dec
sbb
jle
or
inc
scas
shl
test
push
insl
push
cmp
mov
push
mov
pop
out
add
rcll
pop
fnstenv
filds
mov
sub
lds
mov
mov
out
mov
jg
inc
les
sbb
xchg
in
dec
sbb
ss
xor
int3
push
data16
inc
fbstp
loop
inc
lea
ss
jle
or
push
and
lods
sub
push
adc
fsubl
inc
int
lret
mov
fldcw
stos
hlt
fisttps
or
dec
gs
xor
mov
mov
imul
in
sbb
int3
in
mov
cmp
sbb
sarb
xchg
cmp
cmp
mov
stos
iret
xchg
dec
pop
xor
arpl
inc
inc
sti
incb
xlat
fwait
ret
dec
lahf
sbb
rcll
stos
roll
sub
rcrb
dec
inc
shl
or
test
pop
out
pop
out
icebp
inc
std
clc
sbb
das
fsubrl
es
mov
out
xor
mov
sahf
flds
cld
test
cmpsb
shlb
cld
sub
es
sarl
rcrl
push
pop
daa
push
jle
xchg
int
pop
test
popa
or
jno
fisubrs
shrb
jno
mov
jle
es
sahf
cmpsb
flds
into
dec
push
pop
mov
jmp
clc
sti
push
incb
mov
es
adc
and
push
scas
fnstcw
ljmp
add
mov
xlat
sub
das
popa
repnz
jb
fs
jg
fdivrp
fnstenvs
aad
shrl
jbe
mov
pop
sbb
sbb
fsubrl
ljmp
scas
or
daa
jnp
pop
mov
fwait
iret
jno
mov
sbb
and
repz
hlt
int
add
flds
sarb
lret
add
xor
sahf
jge
test
nop
dec
arpl
or
sbb
jg
mov
lea
sbb
push
addr16
loopne
mov
imul
scas
popa
mov
fsubs
and
jnp
cli
push
dec
addr16
lds
mov
ret
ret
sbb
in
add
push
xlat
outsb
test
in
dec
xchg
push
mov
push
fists
leave
xor
sbb
jno
and
aas
push
xchg
in
and
push
jp
or
movsb
push
jae
inc
xor
das
fstps
je
sbb
rorw
cs
jbe
inc
dec
repz
or
and
rol
fimull
jbe
pusha
fisttpll
sub
or
test
jp
cmc
test
std
mov
pop
sub
movsl
xchg
mov
in
out
decl
sub
xor
aad
in
push
fisubl
push
subl
add
ret
jg
insb
arpl
leave
inc
scas
and
dec
imul
cmp
popf
sti
mov
mov
iret
pop
movsb
rcrl
push
fs
fxam
outsl
sti
in
mov
inc
jae
js
cmpsb
sbb
mov
xchg
out
mov
add
and
pop
dec
or
aaa
out
add
mov
push
hlt
inc
sub
enter
push
push
je
fldl
in
jle
outsb
setns
sahf
jle
lods
cmpsb
push
jg
xorl
lods
or
inc
mov
les
mov
cs
pop
fwait
mov
test
out
js
cli
fimuls
jno
test
mov
lahf
or
clc
ja
inc
roll
aad
and
inc
test
lock
jmp
out
cmp
mov
mov
xchg
stc
and
scas
repnz
ds
mov
sbb
mov
xchg
sub
subl
xor
fsub
cmpsb
mov
int
loop
fstps
xchg
subb
sub
mov
mov
pop
jns
in
mov
fnstenv
scas
int
test
cmp
cmc
mov
daa
mov
dec
sub
test
imul
addr16
cwtl
out
fdivs
mov
test
dec
jp
push
flds
adc
pusha
jo
or
xchg
addl
fnstsw
jne
adc
testb
out
push
in
push
xchg
out
xlat
fdivrs
fwait
and
stc
cmp
lods
mov
push
push
sbb
andb
out
mov
xlat
out
jmp
add
stos
push
jae
loope
loop
test
jnp
push
out
enter
pop
dec
scas
add
adc
fildl
enter
jle
mov
push
loope
scas
in
hlt
les
sbb
push
push
in
and
inc
push
inc
ss
jmp
in
adc
rorl
mov
add
fistpl
in
sbb
nop
cmp
stc
pop
aaa
notb
sbb
fistps
jge
repz
mov
adc
xchg
cmpl
and
mov
dec
xor
push
and
jle
out
loop
outsb
dec
loopne
aam
push
pop
push
push
rcll
xchg
out
jp
mov
std
mov
lret
in
jo
jmp
mov
in
mov
orl
mov
scas
push
idiv
mov
into
and
subb
orb
js
jb
inc
xor
test
into
push
and
out
jae
dec
and
cld
shr
xorb
lahf
pop
lea
jl
add
lods
mov
shll
mov
mov
out
mov
sbb
mov
out
in
lock
mov
in
sub
out
and
popf
pop
jns
and
adc
jg
in
mov
pop
lock
js
fsubl
test
lcall
cmpsl
cli
sbb
data16
jmp
or
push
cwtl
addr16
enter
sub
mov
call
dec
jnp
fcoms
shll
push
xor
fwait
inc
dec
or
mov
dec
fisubl
out
jb
adc
mov
mov
xchg
or
repz
mov
pop
cmp
and
adc
jns
sub
jecxz
clc
test
push
fstl
xchg
repnz
fdivrl
movsb
or
mov
mov
xor
loop
dec
jmp
out
shrb
xor
fwait
lret
test
test
pop
mov
mov
jp
adc
sub
inc
push
mov
sahf
jge
lods
pop
xor
xchg
es
aas
loope
cmp
sbb
pop
or
nop
dec
lret
push
data16
jo
add
adc
ret
enter
aam
or
loop
mov
cmc
jns
xchg
adc
cld
test
ss
xor
aas
xor
push
push
gs
sub
sti
scas
pushf
mov
ret
cli
cmpb
sbb
hlt
fsts
test
scas
xor
sub
out
cmp
out
cmpsl
push
or
out
xchg
mov
sarl
mov
mov
idivb
popa
cmp
push
movsb
push
test
stc
pop
pop
imul
cmp
repz
mov
lods
lcall
lods
and
dec
sbb
pusha
aam
popa
lods
sub
sbb
in
push
sahf
iret
fldenv
inc
std
cmp
xor
outsl
mov
or
push
int
repnz
jb
pop
xchg
lock
mov
std
clc
xor
pop
imul
pop
cld
fisttps
icebp
sarb
mov
adc
jp
inc
or
nop
mov
pop
hlt
enter
gs
pop
jne
test
push
pop
pop
mov
test
es
push
xchg
lds
cmp
xor
subl
sbb
jae
std
cmp
mov
jge
adc
shl
scas
jecxz
inc
cmp
cli
pop
into
adc
mov
lcall
inc
push
ret
sbb
mov
and
aam
outsb
cmp
lret
mov
mov
or
pushf
or
aam
scas
add
test
fistpl
inc
push
cld
inc
lahf
ret
sbb
sbbb
lret
repz
fdivrp
mov
cmp
or
sbb
jb
or
stc
mov
jbe
adc
push
int
mov
das
fstps
adc
cmpsb
test
sbb
mov
js
pop
add
sar
mov
stc
mov
aaa
mov
mov
xor
xchg
sbb
addl
mov
mov
mov
mov
std
xor
jnp
adc
out
scas
add
ffree
xlat
test
icebp
sbb
dec
sbb
mov
fcompl
add
inc
adc
js
sub
cmc
ss
push
cmp
shrb
dec
mov
sbb
cs
add
and
loop
shr
and
cmp
mov
sub
or
ror
mov
mov
out
push
std
mov
sbb
jns
jb
fldt
aam
insl
mov
sub
jns
adc
xchg
std
je
lock
xor
out
and
nop
aad
xlat
dec
loope
fmuls
jae
scas
add
scas
gs
mov
adc
dec
and
xchg
in
insl
cmc
mov
shrl
roll
loop
lods
frstor
in
inc
pop
fmulp
mov
stos
int
lds
sbb
fs
in
push
sahf
mov
cmp
adc
and
push
pop
jnp
movsb
loopne
xchg
mov
cmp
aam
push
cwtl
sbb
ljmp
std
dec
push
in
inc
dec
js
cli
and
ret
ret
xchg
xchg
loopne
dec
loop
xchg
sbb
dec
loop
and
xor
xorl
movsb
and
int
leave
aas
sub
mov
pop
jae
fwait
pop
and
dec
into
inc
sahf
test
jbe
sbb
fistl
lcall
pop
xchg
pop
int
leave
fnstenv
mov
jp
cmpl
in
mov
into
aaa
xchg
popf
mov
pop
inc
adc
ljmp
and
push
mov
je
add
int
xchg
dec
mov
mov
rcrl
ljmp
pop
pop
sahf
xor
mov
test
std
loope
pusha
data16
loope
add
adc
mov
mov
sbb
sbb
inc
fisubrl
sub
inc
in
mov
mov
xor
inc
mov
test
sub
mov
jae
cli
inc
or
jge
sub
push
pop
out
mov
adc
pop
addr16
fcoml
sbb
xchg
sub
out
xlat
pop
sbb
cmpsl
pop
cs
fidivrs
outsb
lods
les
sbb
loope
jge
repnz
cltd
lods
js
andb
insl
pop
pop
shlb
cmpsl
xchg
mov
lods
jl
lcall
mov
xor
mov
cmp
movsb
jge
je
jae
xor
arpl
lock
andl
and
add
mov
inc
insl
lret
xchg
add
mov
sbb
push
jl
and
mov
jle
xchg
adc
in
sti
loopne
test
imul
dec
jns
push
adcb
daa
fldenv
shlb
dec
push
cmp
sub
and
add
faddp
push
mov
mov
cmp
mov
sub
je
or
mov
fcomps
fcmovnu
mov
jns
clc
cmovno
mov
jmp
cmpsl
pushw
aam
push
mov
mov
xor
repz
sbb
aad
jns
pop
mov
insb
inc
aas
cmp
mov
pop
mov
mov
xor
mov
mov
cli
lds
mov
and
fstpl
lret
mov
pop
pop
mov
sub
push
lret
sbb
mov
int3
dec
jp
push
mov
in
mov
adc
pop
lret
jo
jb
movsb
in
mov
xor
pop
dec
scas
mov
xchg
mov
popf
pop
jge
jb
fcompl
daa
cltd
clc
test
ss
out
cmc
cmp
xlat
xlat
shrb
lods
pop
imul
test
mov
mov
sbb
push
je
dec
xchg
les
mov
stos
fcompl
iret
add
les
xchg
inc
addb
cmp
jae
xchg
cmp
aaa
lods
and
cli
in
dec
push
cltd
shlb
sub
scas
icebp
sub
xchg
cmp
inc
sub
or
inc
movsb
and
scas
mov
lods
mov
jp
push
xor
test
fcomps
inc
mov
das
jnp
dec
pushaw
adc
push
aad
icebp
mov
xchg
sbb
sbb
iret
int3
push
sbb
clc
add
xchg
cld
push
cmp
test
fstpt
ficoms
mov
inc
ror
fsts
and
lahf
jecxz
ret
aaa
pop
fprem
xchg
jnp
fisubs
in
inc
lods
lcall
sbb
xor
in
adc
xlat
lret
fwait
xor
pop
fidivs
pop
cltd
aad
das
lcall
mov
or
cmp
ret
jae
incl
xor
push
xchg
jg
lods
mov
scas
test
push
flds
mov
jle
clc
cltd
mov
cmc
mov
in
xchg
xchg
cmpsb
lfs
pop
scas
pop
mov
cmp
sub
and
mov
popa
scas
out
enter
out
xchg
fiaddl
push
xchg
push
xor
push
mov
and
in
pop
fdivl
in
xchg
bound
cmpsb
mov
cmp
inc
mov
add
les
loop
cmpb
mov
fld
mov
mov
cmpsb
rorl
ja
and
faddl
lock
repnz
mov
xchg
or
jno
dec
inc
insb
push
push
dec
out
pop
jns
dec
jl
ret
fwait
aas
push
or
pop
aam
xor
mov
xchg
sub
das
sar
xchg
cmpsb
and
bound
inc
jle
in
mov
scas
pop
arpl
pop
pop
inc
push
pushf
movsb
xchg
jb
cmc
sar
aaa
loope
mov
mov
add
sbb
cld
push
enter
pop
cmp
std
inc
push
aam
mov
cmp
jno
sbb
adc
mov
adc
aas
fsts
jne
or
mov
flds
mov
jae
sbb
enter
fldl
add
push
outsb
mov
mov
in
push
push
xlat
enter
aaa
xchg
sarb
gs
and
aam
nop
ret
mov
outsl
xchg
cmp
push
dec
pop
sti
rorl
mov
xchg
xor
mov
push
lods
and
loopne
or
jmp
inc
movsl
mov
push
mov
inc
inc
cmpsb
xor
outsl
scas
je
xchg
fildll
xchg
cmc
fldcw
lock
bnd
xor
or
int3
xlat
test
mov
fimuls
pop
in
and
aad
xchg
scas
jmp
push
fidivs
test
aaa
movsb
mov
ljmp
daa
cmpl
sarb
mov
inc
add
mov
inc
mov
adc
in
mov
jmp
sbb
loop
mov
sbb
in
popa
addr16
jnp
push
inc
jne
or
cmp
xchg
call
popf
jbe
hlt
out
adc
pop
data16
test
inc
mov
and
xchg
arpl
xchg
fabs
sbbb
dec
mov
sarb
add
xchg
lods
add
jb
cmpsb
adc
push
push
pop
mov
pop
mov
out
push
scas
xchg
dec
sub
xchg
mov
pop
test
sub
notb
inc
popa
xchg
mov
inc
xor
pop
shlb
das
cmc
fistpl
in
xchg
mov
cltd
sbb
jne
stos
ds
pop
fildl
cmp
fstps
mov
outsb
stos
dec
outsb
add
stc
sahf
scas
daa
jge
lods
sti
cwtl
out
je
into
mov
xchg
jle
inc
mov
and
mov
xchg
dec
xor
cli
xchg
add
adc
mov
push
jbe
leave
rcrb
fsub
sbb
mov
mov
mov
mov
or
test
lahf
xor
scas
ret
jp
xorl
push
insl
dec
sbb
es
imulb
inc
lret
je
ss
shll
and
jmp
lds
cmpsb
mov
jg
imul
imul
jp
xlat
mov
inc
lods
test
fldenv
idivl
into
mov
jbe
hlt
cli
mov
inc
and
addr16
addl
bound
xchg
cli
popa
xchg
test
mov
imul
mov
dec
cmp
in
mov
ficoml
ljmp
loope
sbb
push
mov
loope
inc
lods
xor
fdivrs
lcall
sahf
mov
aad
out
cmp
and
ficomps
aad
pop
adc
fwait
into
pop
and
jl
pop
mov
leave
jmp
pop
xlat
adc
sahf
in
lret
xchg
ss
es
gs
adc
or
ret
inc
add
pop
adcl
fdivrl
sbb
stc
mov
stos
cli
dec
inc
movsb
int
inc
imul
push
aaa
mov
xchg
repnz
cmp
fimuls
dec
xor
push
jmp
mov
push
int
pop
test
pop
push
and
popf
arpl
jb
fcoml
mov
push
mov
lea
les
cmp
aad
pushf
out
fcoms
mov
mov
mov
xor
mov
lret
mov
xor
sbb
jle
repz
xchg
jmp
jp
addb
pop
xor
push
pop
loope
push
mov
gs
fmul
jnp
aad
sub
into
fldt
iret
test
mov
fwait
and
mov
mov
jno
inc
xor
or
movsl
mov
pop
out
and
xchg
fimull
cltd
and
das
sub
dec
adc
cmc
int
dec
cmpsl
daa
repnz
repz
sbb
dec
xchg
into
or
aas
cmpsl
sbb
cwtl
ret
fcmovu
xor
xchg
outsl
cmpsb
xchg
xchg
mov
out
dec
and
imul
ss
das
in
fisubrl
mov
mov
pusha
cmp
in
int
mov
mov
jb
push
nop
je
sub
cmp
cli
test
mov
addr16
mov
dec
push
inc
xchg
addb
lds
dec
insb
repnz
nop
cmp
lret
ljmp
sti
out
and
and
and
sbb
inc
xor
pushf
dec
xor
push
movsb
outsl
mov
pusha
push
push
mov
cltd
sbb
outsl
stos
mov
inc
cld
pop
scas
jecxz
shll
clc
ljmp
mov
mov
xchg
test
inc
cld
aam
popa
sbb
je
mov
push
pop
dec
lahf
in
push
adc
ja
or
lds
es
cli
push
xchg
jl
fsubr
sti
lcall
mov
orb
cmp
or
cwtl
mov
int
jmp
out
and
pop
rcrb
stc
imul
and
mov
push
inc
lods
cmp
hlt
lods
sub
push
or
add
dec
inc
sub
and
std
mov
jecxz
mov
mov
pop
in
test
ljmp
imul
xchg
jnp
mull
cmp
pop
into
jae
mov
in
std
std
repz
cld
adc
mov
mov
cmpsb
out
add
sarl
dec
enter
in
mov
push
out
jge
jnp
out
and
outsb
mov
gs
out
fisubs
test
mov
mov
lcall
xchg
scas
mov
adc
push
cltd
lods
or
sbb
test
jne
enter
movsl
sub
cmc
test
cmpsb
mov
push
out
lret
jo
xor
shrl
lods
popf
fnstenv
adc
aad
push
imul
dec
sub
sahf
xchg
std
mov
cld
icebp
xchg
push
push
test
push
mov
sbbb
push
testb
fstl
cmp
cmp
push
loope
fnstenv
cmc
jp
int3
scas
rcr
test
rclb
movsl
pop
in
dec
and
addr16
adc
popf
xor
jae
popf
add
fs
adc
test
adc
scas
clc
jg
test
js
and
dec
imul
stc
repz
ret
inc
aad
mov
ds
sbb
xchg
lret
and
loopne
push
test
addr16
pop
push
add
shlb
int
les
out
xlat
xor
shl
xchg
int3
pop
lods
lcall
imul
fwait
cmp
pop
cmp
mov
cmp
or
test
lahf
fbld
cmpsl
sbb
xor
dec
add
push
cmp
rcrb
pop
lcall
xchg
mov
sbb
mov
adc
lahf
xchg
popf
pop
mov
iret
mov
dec
sbb
sbb
out
cmp
outsl
or
dec
data16
cmp
xchg
ret
in
popf
or
mov
adc
jp
and
mov
aam
shrb
ja
pop
and
jle
jmp
lcall
and
mov
les
mov
jl
mov
movsb
enter
into
ss
popa
scas
adc
cmpsl
mov
inc
xchg
sbb
push
cli
jle
lods
add
pmaddwd
ficoms
adc
movsb
jno
push
out
inc
js
mov
testl
pop
jno
repnz
and
inc
sbb
scas
fnstcw
mov
pusha
and
inc
movsl
cmpl
out
stos
cmp
xlat
mov
addr16
sbb
iret
ret
cld
in
cs
jg
xchg
add
push
mov
fidivs
dec
fwait
call
fcmovb
inc
mov
lds
add
das
rorl
jg
inc
sub
loopne
adc
cmp
sbb
mov
pop
stc
push
mov
dec
jmp
jle
scas
jl
iret
mov
es
fiadds
jne
sbb
cmp
jns
dec
xor
test
xchg
stos
or
mov
aad
and
leave
mov
stos
loopne
inc
xor
leave
sbb
insl
dec
loope
dec
adc
repnz
out
cli
xor
push
movsl
push
sarb
adc
push
xor
mov
sbb
out
xchg
shlb
popf
sbb
aam
inc
cmpsb
fcomps
movsl
adc
data16
js
lahf
subb
int
mov
cmp
jns
jae
dec
xchg
sahf
sbb
push
adc
lods
ret
push
js
push
out
cmp
jle
add
out
adc
push
push
addr16
adc
xchg
xor
mov
mul
xchg
mov
cmp
repz
movsb
in
mov
pop
hlt
lret
es
fwait
pop
mov
xor
adc
mov
ret
sub
inc
push
out
mov
add
insb
jo
std
pop
fsubl
xchg
cmp
mul
cmp
mov
popl
adc
mov
out
hlt
out
sti
in
and
push
pushf
lock
inc
lret
xchg
inc
mov
xlat
cmpsl
sub
xor
test
adc
inc
fldenv
cmovg
insb
int
jle,pn
aam
stc
mov
cmp
mov
cld
jns
or
push
ljmp
popa
xor
adc
mov
jne
fldenv
mov
mov
std
int3
leave
and
js
push
rclb
repz
lock
cs
dec
cmp
and
mov
je
inc
mov
xor
xchg
js
cmp
lods
test
icebp
shlb
fstps
mov
mov
lock
or
movsl
add
mov
or
dec
gs
stc
call
lcall
cmpsl
adc
out
cltd
mov
rolb
push
sub
adc
stos
pop
mov
jp
filds
mov
dec
test
dec
cmp
jno
xchg
out
add
popf
repz
sbb
int
xor
inc
imul
js
jmp
lods
leave
fcos
xchg
pop
shr
arpl
int
and
cmc
popl
es
mov
mov
push
cmpsb
loopne
or
call
and
lods
dec
addr16
scas
dec
lods
inc
inc
into
shl
scas
sbbb
loopne
dec
out
sahf
fsin
mov
in
out
jge
push
jl
adc
inc
lcall
or
scas
aam
ret
mov
test
adcl
push
movsb
mov
pop
andb
ret
es
adc
mov
arpl
dec
push
cmpsb
mov
in
xchg
aam
jbe
mov
call
in
pop
mov
xchg
test
rol
loopne
or
rcll
mov
les
repz
mov
push
xchg
add
in
lods
insl
int
mov
sub
push
lock
addb
scas
lds
movl
loopne
mov
rorl
sub
std
clc
call
push
je
fsin
fidivrl
mov
in
xchg
lods
xchg
imul
js
cmp
int
sbb
loopne
dec
push
or
cs
stos
mov
adc
or
push
pop
insb
jle
aaa
add
jns
or
fstpl
xchg
jecxz
lcall
push
and
push
fisubrs
jl
fs
push
mov
and
sti
cltd
gs
jns
jecxz
fwait
mov
sbb
fcompl
mov
jle,pt
sub
js
add
xchg
push
test
mov
push
rcrb
inc
lret
mov
sub
mov
lret
inc
jecxz
inc
mov
les
xchg
aam
push
cmp
enter
cli
add
xor
or
sbb
inc
rorb
negl
sahf
cmpsb
fpatan
mov
sahf
icebp
gs
dec
or
mov
movsl
test
mov
std
mov
dec
movsb
pop
and
dec
jl
inc
dec
sbb
inc
pop
es
sbbl
fcoml
push
push
push
addr16
xor
adc
test
cmpsb
arpl
enter
xorl
hlt
out
mov
jb
shll
sbbl
and
mov
push
js
jge
mov
in
cmp
mov
loopne
in
aas
jge
dec
mov
push
shl
test
add
or
xor
jp
mov
hlt
xchg
push
call
cmp
jmp
add
pop
fcomp
movsb
cmpsl
and
clc
sub
cmp
cltd
and
pop
jmp
and
and
sbb
es
lock
shrl
cld
fsubrs
fwait
imul
and
or
aas
pop
out
in
xchg
rclb
orl
mov
xchg
dec
insl
mov
out
or
mov
pop
and
out
jno
lods
jno
xor
addr16
mov
xor
mov
cli
mov
test
add
fcoms
mov
mov
or
popf
imul
pop
cmp
loopne
movsb
inc
test
roll
mov
popf
out
aad
sbb
out
mov
lock
sub
jecxz
aad
stos
popa
inc
cs
push
xchg
rolb
test
fiaddl
call
data16
dec
in
pop
jmp
insl
push
xchg
push
push
scas
les
or
lea
dec
xchg
xchg
and
test
shlb
sub
sub
insb
jne
cmp
rcrl
jp
inc
fists
test
cmp
mov
mov
xor
test
and
leave
lods
pop
lret
ljmp
enter
mov
inc
inc
in
inc
dec
sahf
jae
and
flds
cmp
es
jns
test
mov
sarl
repz
and
cmp
pop
or
and
call
stos
sbb
jno
mov
stc
xor
pop
ss
cmp
pop
jae
in
cli
pop
andb
xchg
test
xchg
mov
adc
jmp
and
popa
icebp
repnz
out
lods
iret
push
lret
aam
std
sahf
dec
das
fbld
cmp
mov
cmp
sarb
add
out
into
cmp
sbb
cmp
mov
or
jbe
mov
mov
jo
sar
mov
and
push
cmp
pop
adc
xor
popl
cmp
in
push
mov
sub
fisubrl
incb
clc
push
add
je
test
mov
dec
dec
jbe
cmp
xlat
fisubs
adc
fstl
aas
out
fdivl
lods
ficomps
fbstp
fs
idivb
cmp
mov
mov
shr
bound
mov
jle
lahf
es
jle
rcr
fwait
dec
xchg
imul
cmpsl
enter
inc
mov
push
sub
repz
push
test
mov
fsubrs
cmp
xlat
adc
clc
inc
jbe
adc
adc
pslld
pop
lcall
mov
repnz
sahf
push
mov
testl
dec
cmp
stc
pushf
mov
sbb
fidivs
adc
test
popf
sbb
pcmpgtb
xor
sbb
and
pop
inc
or
imul
stc
int3
mov
and
mov
aam
cltd
loope
iret
pop
popf
outsl
xchg
movsb
add
lods
xchg
sub
pop
mov
and
cmpb
sub
mov
jl
mov
mov
jg
cli
xorl
or
mov
scas
inc
in
iret
push
ret
push
ss
add
insl
or
pop
lds
clc
enter
mov
inc
cwtl
sti
push
jecxz
int
xchg
pop
pop
sbb
mov
sbb
fsts
xor
mov
test
sub
xchg
in
adc
push
or
fidivs
bnd
andl
je
fnstcw
mov
jnp
rcrb
jp
push
xor
xchg
and
jno
in
pop
addl
fsts
push
sbb
mov
fdivl
xor
sbb
push
dec
cltd
push
xor
fcmovbe
loope
repz
movsl
int
andl
jp
pop
das
adc
push
jno
stc
test
fnsave
cmpsl
lret
cmc
inc
sahf
icebp
aad
cmc
imul
and
push
jbe
arpl
add
out
movsb
lret
dec
fidivrs
dec
inc
xchg
xchg
push
mov
rcrl
push
mov
fsubl
xlat
or
cmp
pop
pop
dec
sub
adc
mov
mov
push
hlt
imul
sub
int
and
lods
lods
xor
pop
fsubrs
loopne
pusha
das
sbb
scas
in
and
orb
loopne
jle
add
out
out
push
mov
dec
adc
jp
xchg
mov
jle
push
mov
sbb
xchg
sub
cmpsl
adc
lods
pushf
or
test
xchg
loope
orl
sub
sbb
lods
outsl
out
adc
stos
mov
cmc
movsb
xchg
pusha
imul
push
xchg
or
pop
xchg
mov
mov
pop
les
stos
dec
lds
cld
add
adc
test
shlb
lea
pop
xor
mov
and
cs
cmp
mov
xchg
pop
and
into
jmp
jp
mov
sbb
xlat
xor
stos
or
jg
outsb
mov
xlat
sbb
out
pop
hlt
fldt
cld
imul
adc
mov
pop
js
ds
jg
xchg
mov
int
idivl
shrl
xlat
scas
mov
inc
jl
out
lret
lods
repz
mov
into
mov
push
sarb
fcmovne
push
push
call
cmp
in
rorb
popa
pop
inc
and
aas
xlat
xor
mov
test
and
and
pop
shrb
aam
das
adc
mov
and
inc
jno
fimull
adc
test
jae
add
and
test
xchg
inc
lea
shlb
and
mov
cmp
sub
pop
push
stc
mov
sbb
pop
jmp
inc
mov
sub
mov
int3
jbe
dec
popl
mov
pop
gs
sbb
jmp
push
gs
and
or
cli
les
out
cmpsl
es
jecxz
test
push
notb
push
add
adc
ret
sbb
adc
repz
inc
daa
stos
in
sbb
pop
jl
dec
test
sbb
dec
inc
push
and
mov
fld
fisubs
adc
aam
mov
loopne
ret
lcall
xchg
sub
popf
pop
sbb
into
jnp
std
mov
push
xor
lret
jae
in
mov
test
ret
jb
fldz
fisubrs
clc
adc
insb
fldcw
push
and
fcomps
in
push
and
cmp
xchg
sahf
mov
mov
loop
mov
or
push
test
mov
movsb
test
enter
mov
jnp
ja
popa
jl
add
mov
mov
add
shll
stos
insl
push
mov
dec
inc
cld
mov
pop
push
adc
mov
add
mov
jmp
sub
push
pusha
xchg
mov
lds
sbb
insl
mov
add
push
ficomps
sbb
mov
mov
cwtl
popa
mov
pop
aaa
mov
mov
push
lods
xchg
in
out
fnstcw
add
ss
push
xor
clc
cmp
and
mulb
mov
pop
mov
jae
mov
push
push
enter
sbb
push
and
in
loope,pn
sbb
jne
and
int3
sub
aam
mov
cmp
cmp
pop
sbb
leave
mov
xchg
popf
pusha
add
pop
lret
add
clc
cli
push
xchg
out
xchg
nop
pop
rcrl
dec
mov
movsl
sub
and
dec
shrl
fldcw
enter
aam
pop
imul
lods
loope
lahf
jns
inc
cmpsb
dec
sbb
mov
sti
pop
dec
jne
push
out
lods
out
adc
xor
sbb
stc
pop
popa
stos
out
insb
jl
lcall
repnz
sbb
pop
arpl
int3
aam
int
pop
inc
pop
jae
icebp
and
outsb
icebp
test
inc
outsl
and
subl
add
dec
into
sub
or
cmp
pop
fs
stos
jmp
fnstenv
xchg
mov
jnp
sub
inc
or
xlat
cmp
imul
sbb
sbb
mov
jbe
sbb
pop
insb
cmp
shlb
mov
or
jae
les
ret
pop
fistpl
sbb
add
in
rorl
cmpsb
mov
lahf
shr
jge
fadds
jp
in
scas
xchg
cli
fwait
xor
jge
cmpsb
mov
idiv
cli
and
in
mov
hlt
cmpsl
outsl
cmp
fsubr
pop
xchg
add
int
repz
jnp
and
xor
sbb
in
repnz
fsts
lret
inc
push
inc
fwait
ljmp
test
pop
mov
inc
and
jns
xor
int3
mov
scas
jnp
popa
mov
jne
test
inc
mov
xchg
mov
xlat
push
cli
stos
aaa
dec
push
repz
and
lods
sbb
dec
in
test
mov
pushf
sahf
pop
add
cmc
sbb
jne
dec
loop
dec
mulb
repz
mov
repnz
xchg
cmp
mov
or
fldcw
sub
lcall
rorl
mov
leave
test
adc
mov
stos
aad
pop
roll
adcl
adc
lds
cmp
cmpsb
jns
xor
cli
adc
les
push
scas
lds
fxch
pop
arpl
in
ss
sub
out
mov
subb
mov
insl
and
sbb
sub
mov
into
lahf
enter
dec
pop
iret
subl
pop
popa
es
sub
rcrb
lods
lcall
fcompp
aas
in
sbb
call
xchg
lock
movsl
jo
adc
les
add
in
insb
dec
mov
fcomip
daa
or
inc
mov
pop
sub
sar
scas
inc
je
dec
sub
scas
push
cwtl
and
std
or
add
xlat
mov
fwait
sub
pop
fxch
pop
inc
sub
mov
sub
stc
scas
in
pushf
adc
inc
push
fldcw
dec
mov
dec
sub
add
mov
add
cmp
xor
adc
or
cmp
ljmp
std
cltd
sti
movsb
cmpb
mov
lcall
mov
push
repnz
mov
sti
std
mov
sbb
push
sbb
es
and
mull
mov
inc
adc
imull
mov
mov
stos
popf
test
stc
adc
and
and
cmp
sbb
pop
jge
fnstenv
loop
leave
sbb
pop
mov
sahf
dec
jns
sub
rep
jb
sbb
add
gs
loop
dec
sbbl
bound
fldcw
cmp
pop
lods
xchg
add
add
arpl
stc
lret
mov
jp
mov
sub
std
dec
and
int
mov
mov
das
xchg
dec
mov
negb
cmp
mov
push
mov
neg
js
andb
test
xor
imul
in
add
das
out
jno
add
insb
xor
xchg
arpl
jne
inc
sbbb
jae
call
test
xor
sbb
sti
and
inc
mov
test
loopne
push
daa
repz
out
jbe
add
in
push
jae
cmpsl
jmp
mov
xchg
fldenv
push
mov
or
inc
imul
sub
xchg
cmp
out
push
outsb
fimuls
xlat
xor
and
sub
sub
sbbl
and
leave
push
cli
lods
popf
call
xor
cmp
cld
int
loopne
sbb
out
idivb
scas
jnp
mov
xor
test
data16
add
mov
or
mov
sub
xchg
xor
sub
lahf
fldcw
imul
scas
mov
lret
lret
adcl
je
arpl
imul
movsb
lahf
lods
imul
popf
pop
mov
sbb
test
cmp
iret
and
std
mov
xchg
and
out
push
cmpb
xchg
rorb
popa
xor
xchg
push
add
and
push
jns
push
xchg
ss
sbb
fimuls
subb
cmpsb
pushf
dec
or
fadds
mov
ss
xor
fwait
rcll
lahf
or
push
lea
mov
mov
dec
and
cwtl
mov
dec
insl
scas
sub
mov
mov
sahf
pusha
pop
rcll
sub
popf
mov
sbb
movsl
push
pop
movsb
jb
rcr
dec
data16
iret
sbb
or
cmp
jle
adc
or
scas
cmp
lods
pop
imul
std
xchg
mov
pop
pop
xor
mov
rclb
mov
add
mov
sub
sbb
inc
jl
pop
lds
pop
fs
imul
ljmp
cmpsb
push
xorl
filds
mov
lock
cltd
stos
dec
fxch
scas
lock
push
fcmove
mov
inc
movsl
leave
and
dec
jl
jo
pop
sahf
inc
test
xor
mov
icebp
enter
sub
xor
lods
push
sahf
pop
decl
push
pop
rcll
add
sbb
inc
jmp
dec
das
mov
push
xchg
dec
in
cmp
into
stos
int
repz
lret
les
dec
imul
enter
xor
adc
xor
int3
test
push
imul
mov
in
fisubrs
lahf
mov
lahf
jecxz
movl
scas
mov
adc
sub
jo
gs
aad
test
fisttpll
adc
lods
popf
push
dec
dec
push
jo
fucomp
or
sub
lahf
sub
movsl
adc
mov
push
testb
xor
xchg
add
inc
mov
and
decl
jle
xchg
test
push
dec
ret
fcompl
mov
pop
pop
push
adc
or
xor
xor
or
mov
inc
mov
mov
stos
add
add
cmp
stos
out
faddl
daa
pop
repnz
fwait
lret
mov
cmp
sub
movsl
jne
fisttpll
and
test
stos
outsb
fnsave
sub
pshufw
cmp
or
sub
test
jp
fsubrl
dec
out
jl
loope
inc
scas
shlb
ja
push
stc
insl
popf
aas
pop
xchg
cmp
push
jns
fidivrs
test
scas
add
inc
lahf
push
daa
dec
les
add
or
mov
fwait
int
flds
je
mov
cmpsb
mov
push
addb
lea
data16
and
cmpl
mov
orl
xlat
int
dec
rclb
icebp
xor
add
frndint
movsb
in
dec
mov
fs
test
cmp
jge
loop
adc
js
loope
idivb
mov
sub
lahf
mov
out
loopne
adc
jmp
lret
testl
sub
mov
jecxz
pushf
int3
je
xor
inc
jae
movsb
std
jns
xchg
mov
cvtps2pd
cltd
cli
push
mov
mov
test
popf
jge
in
xor
das
push
sbb
xorl
add
shlb
outsl
popl
das
xchg
repnz
mov
push
cld
pusha
mov
fstps
and
jl
je
out
xor
and
sbb
jnp
ja
outsl
add
jle
lock
in
mov
test
mov
or
push
scas
js
fldenv
cmpsl
mov
test
subb
jmp
mov
lea
pop
repz
xor
and
dec
or
jae
lret
out
push
jb
inc
test
punpckldq
inc
dec
xchg
mov
mov
xchg
cli
popa
aad
mov
sti
inc
addr16
push
inc
sarl
int
sbb
pop
jg
cmp
lds
mov
pop
cmpsl
mov
movsl
add
sub
je
lea
ror
pop
xor
fistpll
andb
inc
xchg
cmpsb
sahf
mov
clc
out
sti
in
or
jg
stc
out
lods
test
jle
dec
cmp
pop
xchg
fdivp
mov
pop
jmp
incl
ss
mov
in
jecxz
jns
test
pop
pop
xor
cmp
and
jnp
push
orb
aas
dec
out
movsl
lock
dec
jae
les
int
decb
fnstsw
inc
mov
pop
jl
inc
dec
shrb
popa
hlt
pop
cmp
inc
and
push
pop
in
lods
xlat
repz
hlt
mov
lea
xchg
cs
push
mov
scas
sbb
inc
ljmp
pop
mov
sahf
pop
test
rcr
push
mov
mov
mov
nop
sbb
lock
xor
pop
jmp
jl
clc
lods
call
cmc
std
mov
push
add
std
into
fnstenv
loopne
stos
or
pmaxsw
sub
mov
test
call
sahf
xor
xchg
xor
mov
mov
inc
les
rclb
mov
mov
movsb
lds
push
scas
sub
adc
mov
call
jp
cmp
rorl
inc
xchg
les
aaa
dec
xlat
jl
scas
popa
test
inc
test
inc
xchg
mov
in
stos
push
dec
out
shll
cld
or
jl
pop
popf
mov
in
cmp
dec
ret
push
pop
dec
inc
pop
fimuls
aam
xchg
jmp
ss
aam
mov
pop
sub
repnz
xlat
add
cmp
and
xor
mov
dec
cmpsl
push
gs
adc
insb
mov
pop
lock
dec
scas
addr16
popa
cmc
loope
fwait
pop
and
scas
mov
or
inc
outsl
lods
jne
pop
rcr
and
jo
in
push
sbb
inc
ret
pop
in
stos
push
scas
jp
testb
sahf
xlat
add
idivl
std
scas
scas
in
or
xchg
jge
icebp
test
mov
out
jnp
sbb
mov
xor
jb,pt
sbb
testb
and
mov
in
pop
cmp
test
lret
lods
int3
xchg
add
les
xor
pushl
mov
adc
mov
xor
stc
pushf
sbb
jns
push
test
adc
scas
es
lret
jl
inc
jmp
mov
mov
mov
insb
stos
movsb
imul
enter
mov
insl
add
xlat
ja
mov
lahf
stc
cmp
fdivrl
mov
and
shll
lds
push
cltd
sbb
jge
sub
andl
mov
jl
sbb
mov
xor
xchg
add
outsl
and
sbb
xor
adc
pop
jmp
incb
lods
fs
jmp
std
leave
mov
fisubrl
sub
test
data16
xchg
leave
stos
adc
jns
popf
or
sub
jo
mov
xchg
cmp
mov
inc
int3
add
lcall
xor
fcoml
cmpsb
mov
xor
cmp
jmp
scas
pop
adc
cmp
push
out
hlt
xchg
pop
dec
jno
adc
push
jg
jbe
adc
xchg
cli
sub
pop
inc
pop
adcl
fidivrl
in
cmp
push
icebp
xrelease
add
fldenv
cmpsb
mov
in
and
fwait
mov
test
inc
mov
cmc
outsl
adc
ret
fstpl
push
fldenv
sti
das
mov
movsl
inc
stos
andl
ss
gs
mov
sar
fidivrl
xor
mov
mov
test
push
lock
adc
mov
xlat
adc
pop
sbb
addb
lock
xchg
xor
xchg
ljmp
and
fcomi
jle
xor
sub
jno
xor
sub
cmp
in
jo
in
sbb
jnp
stc
or
neg
in
cmp
dec
inc
ficomps
fdivs
xchg
dec
sahf
dec
mov
push
rol
leave
add
push
movsb
aad
sbb
or
mov
add
in
repnz
or
sub
imul
flds
mov
mov
dec
gs
test
mov
inc
dec
lea
adc
mov
pop
je
jnp
std
xor
mov
and
xor
mov
test
das
mov
sahf
mov
inc
sbb
lock
jl
cmp
sbb
xchg
fldenv
or
out
scas
mov
out
jae
push
out
xchg
in
loope
push
mov
cld
adc
push
jge
cmpsb
or
mov
push
js
in
and
push
jmp
fbld
push
fidivrs
stc
mov
test
fnstcw
hlt
fs
inc
mov
sbb
in
push
loop
cmp
mov
lahf
jecxz
cltd
pop
xchg
fdivrl
jnp
lock
out
sbb
dec
cmp
lods
jle
inc
inc
mov
push
jmp
repz
aad
push
popf
lahf
lret
lods
pop
mov
dec
push
lock
aas
xchg
test
lahf
test
push
movsb
and
pusha
movsl
adc
cmpsb
mov
mov
sbb
sbb
and
xchg
aam
gs
test
mov
push
mov
pusha
cmp
or
and
clc
push
and
or
rolb
add
fiaddl
mov
sbb
insb
cs
cmp
jae
push
or
xchg
subb
clc
push
imul
xchg
call
sbb
fcoml
ret
subb
jle
scas
cwtl
and
mov
fmulp
jg
jno
aam
mov
stos
addr16
or
mov
mov
sub
je
add
mov
ret
cld
fisubs
lock
shrl
cwtl
movsb
std
jecxz
mov
ret
inc
mov
mov
popf
mov
xor
shrl
pop
hlt
aaa
jne
test
outsb
push
and
test
shrd
mov
fsubl
dec
mov
test
outsb
fnstenv
inc
mov
gs
das
test
fdivrl
repz
inc
mov
sti
cmp
ror
and
inc
inc
cmp
and
add
inc
rclb
loop
int3
lock
fldl
adc
in
jmp
xor
fidivrl
notl
or
adcb
popa
sbb
test
pop
cli
int
dec
aaa
and
and
mov
mov
fnstenv
testb
and
mov
fcompp
add
das
inc
popf
test
xchg
mov
or
scas
ss
push
push
xchg
fistps
les
lock
xor
pop
mov
je
xchg
mov
push
leave
and
jnp
cld
and
xchg
mov
bound
in
inc
push
push
nop
lcall
jb
xor
lods
cwtl
add
sahf
out
data16
orb
mov
dec
mov
adc
mov
cli
imul
xor
daa
mov
stos
inc
mov
ficomps
mov
fsin
call
pop
cmpsb
lahf
mov
cmp
inc
fdiv
adc
shl
out
scas
clc
or
ja
mov
pop
lock
lods
mov
xor
add
adc
mov
add
scas
test
sub
addr16
out
scas
inc
inc
sbb
add
sub
push
inc
push
adc
fld1
dec
stos
xchg
and
sub
push
sub
pusha
lcall
jmp
adc
cltd
outsb
inc
enter
or
sti
sbbl
dec
shr
adc
js
push
fstpt
xchg
and
sahf
test
jno
inc
popf
push
gs
and
arpl
scas
push
adc
cmp
add
xor
js
fistpll
pop
push
imul
mov
cld
mov
repz
movsb
inc
push
in
ja
pop
sub
mov
cmp
add
adc
repnz
push
and
loope
fwait
dec
lret
mov
out
out
movsb
cmp
or
addl
sbb
mov
test
loope
gs
test
jbe
cwtl
pop
inc
cmp
mov
pop
jmp
pop
or
aad
fsts
addr16
fsubp
movsl
dec
inc
mov
mov
or
in
mov
not
mov
push
ret
mov
scas
imul
jnp
adc
xchg
fmull
int3
enter
push
mov
xor
push
xchg
fnstcw
push
push
popa
aad
cmp
push
inc
dec
mov
sbb
add
cmpsb
ja
mov
sub
inc
pop
fstl
ja
xor
mov
dec
int
xlat
sub
notb
lock
out
sbb
mov
inc
shrl
nop
and
pop
out
cmp
neg
inc
mov
cmpsl
pop
add
jns
jne
jp
mov
les
scas
cwtl
xchg
inc
mov
jle
mov
mov
les
sbb
addr16
dec
inc
test
push
imul
lcall
add
imul
negb
push
add
test
dec
test
je
daa
mov
testl
movsl
mov
fisubs
ss
stc
pop
scas
inc
mov
stos
repz
pop
and
fnstenv
aad
xchg
xlat
pop
cld
sti
fldcw
sub
mov
ljmp
popf
addl
lea
sbb
and
fdivl
inc
xor
test
and
subl
jae
in
es
sub
push
adc
cmp
sub
mov
loopne
es
gs
and
jne
push
sahf
cmc
sub
call
mov
data16
jb
shrb
movsb
sbb
int3
or
add
lcall
in
fstps
lahf
int3
and
movsl
fcompl
cli
scas
xchg
mov
xchg
push
sub
mov
nop
lods
cltd
jecxz
sub
fwait
in
push
test
cmp
mov
mov
sub
arpl
mov
test
gs
ficoms
icebp
cmp
and
lahf
dec
fistps
push
in
push
pmaxsw
fstpl
xor
in
adc
enter
xor
sbb
mov
mov
fldenv
enter
movsl
repnz
fidivrs
xchg
jb
mov
out
loopne
fwait
ret
ljmp
dec
pop
add
insl
cs
xchg
pop
out
test
xor
mov
scas
imull
loopne
in
ljmp
cmp
out
pop
mov
shrb
cmpsb
push
or
or
int
adc
jnp
add
cmpsl
mov
pusha
push
dec
ret
lea
addr16
aad
mov
mov
cmpsl
in
cmp
scas
into
cld
das
inc
push
out
mov
out
cmp
sbb
mov
in
lods
mov
mov
sbbl
loop
xchg
dec
iret
sub
popa
pop
cwtl
xchg
dec
mov
js
test
dec
outsb
jl
mov
leave
divb
mov
dec
sub
xchg
sub
lods
sti
push
pop
paddd
inc
movsl
xchg
in
rclb
pop
mov
in
push
popa
mov
and
iret
out
dec
pushf
xchg
nop
sbb
push
fwait
into
jno
mov
stos
out
or
fstp
fnsave
subb
or
mov
dec
cmc
mov
cltd
jl
sti
adc
cmp
push
leave
jmp
sub
pop
jns
mov
stc
in
sub
sbb
sub
flds
inc
in
cmc
xlat
pop
mov
sbb
xchg
arpl
lods
pop
icebp
dec
in
loope
daa
xlat
sbb
jmp
inc
mov
mov
cmp
test
jb
pop
adc
mov
jno
xchg
cltd
mov
sbb
cmp
negl
mov
fnstcw
lret
test
xor
pop
jbe
mov
rolb
les
or
and
jo
subb
or
in
sti
es
subl
cmp
or
push
push
int
pop
ss
sbb
and
data16
mov
or
je
into
inc
pushf
sbb
xchg
lds
mov
dec
mov
sti
insl
jmp
xchg
cmc
jno
test
jo
cmpsb
push
add
fisubl
out
mov
lock
icebp
mov
inc
std
repnz
push
in
dec
jb
aaa
xor
adc
jp
faddl
outsl
cli
les
das
pop
fsubrl
inc
add
lods
hlt
test
outsl
add
ficompl
fcoml
or
jl
or
test
scas
test
jns
ljmp
cmp
push
es
es
mov
ficomps
test
inc
push
mov
mov
shl
sub
arpl
jno
lcall
cli
xchg
dec
adc
xchg
mov
fs
cmp
xor
adc
dec
loop
jl
scas
addr16
stos
ret
mov
int
pop
daa
adc
or
test
or
loope
push
enter
jecxz
push
mov
push
adc
divl
sahf
mov
and
adc
or
enter
insb
and
fsubrl
mov
aaa
out
jle
mov
fdecstp
and
and
js
fsts
icebp
mov
push
xchg
cmc
mov
adc
divb
xor
std
loopne
sub
xchg
xor
sub
lea
dec
in
mov
fnsetpm(287
push
sti
fwait
imul
dec
and
jp
fisubrl
nop
adc
mov
xlat
adc
sub
nop
mov
imul
out
cs
mov
xchg
pusha
addb
fsts
push
repz
push
std
mov
test
out
xor
cmpsl
push
dec
lds
pop
stos
ret
xchg
sbb
inc
mov
cmc
push
xchg
scas
gs
push
jge
pop
sti
dec
cmp
xchg
mov
push
iret
decl
jne
jo
jmp
data16
add
xor
out
out
sub
or
movsb
ficomps
mov
outsl
xchg
call
loope
xchg
mov
mov
mov
xlat
mov
add
mov
mov
repz
cmp
pop
fidivrs
xor
fcompp
out
push
push
andl
cltd
clc
dec
pushf
test
adc
es
loope
mov
out
cltd
add
das
imul
dec
pop
cmp
adc
and
imul
xor
jnp
dec
dec
fld
pop
xchg
and
sub
xchg
fcmovnu
dec
mov
lahf
push
mov
xor
fsubs
push
xchg
cmp
mov
inc
out
inc
jnp
cmpsl
das
inc
push
daa
clc
lods
mov
fs
cwtl
mov
adcb
cmp
sbb
pop
adcl
jno
ds
lods
mov
pop
cmpsl
add
adc
movsb
icebp
mov
pushf
and
daa
pop
ds
jl
imul
jae
imul
movsb
jecxz
scas
leave
test
xor
cmp
dec
jle
rolb
lods
ret
jl
xor
xorl
pop
andb
cld
out
ss
or
das
and
pusha
xor
xorl
stos
in
xchg
test
outsl
out
shl
das
in
shrl
jge
push
mov
repz
jp
xchg
ficompl
jecxz
inc
test
mov
cmp
jp
test
test
and
out
cltd
push
adcl
sub
xor
addr16
cmp
repz
mov
cmp
inc
pusha
add
test
pop
movl
test
push
inc
pushf
fs
scas
dec
sub
clc
cmp
out
push
and
je
jbe
lahf
and
add
jl
test
hlt
enter
outsb
pop
and
call
popf
dec
sub
in
cmpsb
ja
in
imull
add
out
cmp
sbb
jp
cmp
sub
lock
or
mov
pop
inc
and
and
out
mov
push
dec
inc
adc
sbb
int3
push
mov
inc
mov
aaa
repnz
loop
lcall
sbb
jae
jne
push
add
push
jmp
pop
out
sub
pop
mov
lahf
mov
das
data16
mov
std
cmpsl
fucom
in
es
and
cmp
fwait
dec
cld
and
repz
mov
mov
or
pop
out
sbb
and
outsl
push
mov
jo
test
out
jnp
movsb
fs
movsb
cmp
mov
dec
mov
push
test
mov
push
test
xchg
out
or
scas
fidivrs
push
and
test
clc
movsl
pop
xor
shrb
inc
js
sbb
sub
lock
dec
push
shrb
xchg
mov
sub
sub
push
out
inc
movsl
and
cmpsl
jge
xor
ljmp
dec
aaa
loopne
dec
xlat
imul
mov
test
sub
xchg
popa
sub
cmp
loop
xor
cmpb
inc
xchg
andb
enter
and
fs
aaa
aam
cmp
xlat
xchg
ret
mov
rolw
lock
shl
ja
push
sahf
xchg
test
cmc
fstps
push
cmp
mov
div
hlt
js
andl
mov
into
jbe
scas
xchg
jno
or
test
pop
sbb
xor
das
adc
push
pop
lcall
cmpsl
push
mov
je
xor
mov
or
or
push
cmpsb
andb
aas
vmaxpd
popf
mov
xor
fldenv
sub
mov
xchg
pop
inc
rolb
arpl
inc
orl
sbb
aaa
mov
jbe
out
sub
out
nop
push
push
lds
es
movsb
jno
fistps
mov
les
adc
out
mov
cmp
dec
inc
int
add
fcoms
test
mov
jle
adc
adc
xchg
loope
jbe
xchg
mov
les
lcall
arpl
push
inc
jnp
ror
dec
mov
cmp
sbb
adc
jne
xlat
andb
inc
mov
inc
dec
jns
into
ja
and
scas
xor
roll
and
sbb
xchg
push
sub
mov
push
mov
xchg
jp
les
jg
fcmovb
stc
iret
lret
jl
movsl
jge
sbb
jecxz
movb
call
mov
xchg
jbe
jecxz
lods
subb
adc
xchg
adc
sub
mov
int
xchg
iret
xchg
negl
movsl
mov
test
fistps
mov
lcall
ljmp
sbb
pop
test
dec
inc
jno
push
inc
test
ljmp
out
cwtl
out
pop
mov
int
fstpl
aaa
dec
lcall
sti
outsw
push
sub
and
mov
js
arpl
in
pop
jno
scas
enter
cmpsl
cld
inc
push
mov
mov
les
mov
mov
jl
enter
jl
sti
fldcw
dec
sbb
add
sub
xchg
rclb
and
clc
int3
in
data16
insl
sahf
mov
lock
mov
ja
mov
mov
and
push
sbb
inc
push
cmpsl
mov
and
das
or
iret
sarl
dec
movsb
push
daa
mov
sbb
jl
jecxz
xlat
xchg
pop
jno
cld
int
and
je
and
das
addb
push
pop
lret
rcr
lods
popa
inc
push
insl
push
push
mov
into
add
in
repz
and
jno
inc
xchg
std
push
mov
cmpsb
mov
sbb
adc
or
fdivl
aaa
inc
mov
lods
xor
and
popa
add
inc
mov
dec
mov
lods
test
sar
stos
test
push
sub
in
pusha
adc
mov
cmpsb
sbb
cmpb
jle
sub
cmp
xor
sub
ljmp
lcall
xchg
sti
mov
mov
adc
xchg
ds
jl
add
in
mov
popf
cs
ror
sub
or
fstps
and
sbbb
cmp
mov
push
sub
jecxz
into
mov
outsl
int
jge
ljmp
flds
lds
and
and
adc
lret
sub
fisubs
sbb
adc
mov
xlat
fcompl
push
fdivp
xor
jb
movb
inc
jb
cmp
arpl
into
andb
dec
pop
jp,pn
stc
mov
out
out
mov
push
test
ficomps
pop
cmp
mov
and
fucom
cwtl
mov
fstpt
and
and
sbb
out
adc
in
sahf
std
dec
fcmovu
and
mov
mov
and
scas
sub
sbb
ret
push
sbb
mov
nop
enter
ljmp
adc
inc
fwait
adc
comiss
nop
push
pop
lods
cli
push
and
cmp
sub
jns
cmp
inc
sahf
mov
int3
pop
in
das
movb
adc
and
sbb
mov
mov
popf
in
inc
lret
cvtps2pd
data16
arpl
ficompl
xchg
stos
mov
xor
mov
pusha
mov
inc
mov
cmpsl
xchg
jp
movsb
sti
mov
pop
jmp
shr
sbb
movsb
rcrb
jle
jmp
popf
lret
mov
sub
aad
div
inc
mov
push
pop
jb
mov
sahf
cmpl
xor
imulb
adc
cwtl
sub
add
cli
in
cmpsl
or
ds
xchg
mov
in
jnp
mov
leave
int3
mov
xchg
mulb
pop
sub
sbb
push
mov
fldenv
test
inc
pop
mov
cmp
cli
jle
xchg
pop
jp
inc
xchg
daa
jb
or
rcrl
pop
in
repnz
lcall
rclb
or
push
inc
mov
flds
inc
jge
adc
xor
and
pop
in
and
cmp
jle
jp
shlb
sbb
test
mov
mov
cmc
aad
lods
sub
xor
xchg
pop
je
adc
out
inc
dec
sbb
push
in
movsb
imul
xchg
out
test
call
add
stos
sbb
dec
test
lcall
lds
in
adcb
jp
and
xchg
repnz
out
gs
jns
xchg
ljmp
sub
stc
aas
xor
cmp
or
lods
sahf
push
dec
subb
pop
xchg
adcl
mov
sub
mov
lahf
pop
cmp
mov
xchg
cmp
cmpsl
test
mov
mov
inc
popf
movsl
inc
push
inc
scas
jecxz
cmp
mov
or
inc
jp
xchg
or
cmp
notb
test
stos
pushf
insb
lret
cld
jnp
cld
arpl
jbe
mov
out
jecxz
scas
stos
out
sbb
es
or
jg
pop
or
adc
jnp
mov
mov
xlat
movsl
adc
push
test
outsb
loopne
inc
das
sbb
mov
int3
xlat
mov
jo
nop
out
push
test
mov
rorl
loopne
push
mov
fists
mov
std
xor
mov
xor
mov
scas
nop
lret
mov
mov
cmpsb
test
add
jnp
aaa
jnp
loope
jno
sbb
and
out
xor
or
sbb
and
mov
ror
in
jnp
mov
daa
sbb
mov
mov
data16
in
sbb
popa
pop
jge
scas
cld
and
pop
jns
push
add
sahf
fdivl
mov
ret
xor
adc
sti
sub
adc
push
xchg
pop
sbb
xchg
inc
dec
sbb
sub
das
test
mov
sub
into
cmp
fsubrl
lds
mov
cltd
sbb
dec
add
out
scas
adc
add
pop
mov
push
movb
mov
pop
popa
jno
mov
sbb
mov
scas
mov
loop
add
sarb
rcll
pop
test
mov
fld
int3
mov
cmpsb
push
jbe
mov
xchg
inc
ret
jge
test
imul
out
sbb
add
fmul
cmp
jge
test
shl
insb
mov
cmpsb
repnz
nop
arpl
mov
mov
popf
daa
adcl
mov
sahf
test
aad
sbb
mov
dec
jl
mov
jns
scas
or
push
int3
pop
cli
orl
das
nop
ss
xchg
ljmp
xor
js
in
sub
mov
andl
add
lcall
mov
dec
outsb
orb
and
add
pop
sub
js
fisubl
fisubs
imul
aam
ficomps
dec
pop
imul
lcall
fwait
shrb
fdiv
inc
pop
mov
pop
pop
push
cltd
repnz
mov
sti
fcoml
and
je
mov
iret
mov
sub
mov
faddl
mov
mov
add
pop
cmpsb
scas
mov
gs
mov
cmc
lods
jb
jne
sbb
sti
mov
fs
xchg
shlb
cmpsl
and
xor
dec
fdivrs
lret
test
xlat
in
push
iret
mov
xor
pop
lcall
inc
mov
sbb
rcrb
sti
pop
jne
mov
int3
push
in
out
movsl
cmp
cmp
ja
mov
and
add
lock
add
or
cmp
out
sub
mov
out
push
jno
fcomps
fisubs
shlb
xchg
call
xchg
data16
pop
fiadds
and
pop
loope
flds
cmpsb
adc
sbb
dec
test
fldenv
int
lret
cli
inc
sahf
das
add
mov
dec
cmpsl
dec
loopne
aad
jbe
out
arpl
mov
mov
loope
sbb
cmp
pop
adc
add
aam
push
repz
lods
inc
cs
ror
mov
pop
pop
mov
cmp
inc
jl
inc
push
push
outsl
pop
fldl
xor
mov
adc
daa
sub
std
call
cli
int
sbb
cmp
in
scas
xor
js
or
mov
std
cmpsl
lahf
sti
sarl
mov
jmp
andb
jge
test
testb
fstps
fwait
in
insb
mov
and
mov
cmpsb
or
and
int3
sar
xchg
mov
cmc
mov
dec
scas
stos
icebp
push
xor
mov
push
pop
pop
test
jnp
lcall
adc
pusha
pop
cmp
cmp
xchg
loope
xor
push
sbb
pop
jo
xor
lcall
jae
fs
cmp
mov
es
fwait
loop
popf
sub
push
fwait
xchg
dec
inc
addb
inc
adc
ret
ret
rcrb
ljmp
push
mov
mov
push
jno
add
inc
les
lret
gs
jns
loopne
sbb
scas
jmp
push
jmp
out
dec
arpl
sarb
dec
cmp
mulb
insb
fwait
sub
sub
push
shll
scas
inc
fiaddl
inc
sti
test
int3
push
bound
test
mov
xchg
in
es
call
mov
leave
out
clc
mov
xchg
xor
inc
test
adc
jecxz
mov
pusha
dec
and
and
sub
and
mov
mov
and
push
mov
rcr
popa
sti
lret
xchg
test
mov
dec
sbb
addr16
or
or
std
fsts
sbb
mov
jnp
xchg
jae
xchg
inc
lret
and
lods
dec
push
mov
fucomi
jo
daa
lret
shll
sbb
mov
sub
std
icebp
sub
loope
or
push
idivb
xlat
insb
arpl
in
sub
mov
test
add
xchg
fs
cmp
fnstenv
nop
mov
shl
push
nop
outsb
fldln2
xor
mov
xor
sbb
push
cs
fucomp
call
adc
sbb
or
subb
jmp
cltd
push
pop
xchg
sub
jbe
jne
cmp
in
notb
inc
enter
test
xor
mov
mov
int
lock
add
cmp
out
mov
fistl
push
lahf
or
mov
push
dec
sub
lock
mov
int
or
imul
lock
adc
outsb
aam
push
sarl
mov
daa
ret
sbb
xchg
fstpt
pop
out
or
aas
lods
test
in
mov
cmp
mov
aam
mov
sbb
add
mov
dec
mov
call
sbb
xor
push
sbb
cs
mov
lahf
xchg
cmp
out
xchg
rcrl
push
call
inc
leave
mov
mov
push
push
fistpll
xchg
hlt
dec
mov
pop
sub
mov
adc
mov
pop
cltd
repnz
pop
jge
xchg
push
mov
outsb
mov
jnp
inc
or
popa
pop
sti
sbb
cltd
sarl
clc
popf
pushf
mov
dec
outsl
or
pop
shlb
pop
sub
inc
fldcw
rclb
jae
xor
int3
stc
call
hlt
pop
lods
push
js
outsl
dec
and
stc
aaa
xor
and
lods
mov
pusha
adc
pop
and
push
sub
sub
push
jmp
mov
fisttpll
das
sbb
add
jp
imul
cmp
sbb
jno
mull
dec
inc
mov
xor
addr16
lods
sti
roll
push
cli
clc
aas
dec
push
cld
sbb
loop
in
in
jnp
xchg
cmc
jno
add
inc
xor
mov
mov
adc
das
mov
push
int
movsb
call
inc
push
push
inc
test
lds
lcall
pop
popf
cmp
adc
xchg
mov
outsl
shlb
jle
sbb
jns
lret
fldenv
xchg
into
sub
jl
xchg
outsb
adc
pop
scas
and
in
scas
jns
test
jmp
loop
dec
mov
std
push
lahf
cld
xchg
scas
les
sbb
rcl
fs
loope
lahf
jo
mov
fcmovne
inc
xchg
add
sahf
and
pop
add
leave
std
scas
lret
test
and
cs
imul
fmulp
mov
pop
sti
movsb
lods
repz
inc
xlat
inc
ficompl
movsb
std
pop
push
out
jmp
xlat
mov
fimuls
inc
pop
dec
xchg
and
pop
sub
das
lahf
popf
enter
xor
mov
mov
imul
adc
cmpsl
mov
sbb
inc
pop
or
and
xor
cltd
mov
sub
out
inc
sbb
adc
cmpsl
icebp
int3
movsb
fdecstp
sub
aad
jnp
or
andb
xchg
mov
insb
sbb
pop
lea
rolb
cmp
inc
insb
inc
imul
and
push
clc
pop
das
test
fiaddl
xchg
pop
leave
pop
rolb
shrl
mov
mov
pop
icebp
and
fidivrs
sti
dec
pop
xor
in
sub
jmp
idiv
push
int3
jnp
hlt
imul
jecxz
dec
cmp
adc
loop
std
mov
cltd
mov
mov
stos
sbb
sub
shufps
cmc
add
enter
daa
or
pop
scas
or
cmp
mov
in
xchg
sbb
mov
sbb
call
fadd
test
inc
ret
push
int
pop
pop
or
in
fcmovb
sub
jmp
add
ja,pt
movsb
test
push
aas
icebp
dec
mov
dec
arpl
hlt
xor
mov
inc
inc
sbb
push
jge
xor
add
mov
cmp
mov
adc
fisubl
mov
repz
xchg
jns
iret
pop
test
add
xchg
int
ja
fsubl
dec
cmp
mov
jno
lea
pop
into
outsl
out
and
xor
jle
xchg
fwait
ljmp
sti
repz
addr16
sbb
test
mov
test
cltd
out
mov
out
ss
cwtl
lods
jae
sbb
pop
std
sbb
and
inc
imul
mov
mov
pop
sahf
jae
lret
test
sbbb
les
and
lods
push
jae
lods
push
lods
mov
fstl
mov
js
test
repz
scas
stos
lods
add
fistpl
pop
push
shl
int
pop
sub
enter
int3
jns
xchg
push
pop
repz
adc
out
mov
mov
rcrl
lea
test
scas
pop
enter
inc
cld
in
sti
add
fimuls
test
xchg
out
repnz
bound
out
shrb
fiadds
jp
or
imul
mov
ss
or
push
jb
test
xor
dec
sub
mov
mov
movsb
in
insl
push
lcall
xchg
cmp
les
add
lods
and
stc
mov
repz
pop
fnop
test
sarb
jns
pop
ret
mov
test
mov
jnp
je
add
scas
lret
xchg
mov
out
mov
cmpsb
sbb
fsubrl
xchg
subb
out
mov
cmp
call
cmpsb
test
scas
into
fld
loop
xor
push
adc
icebp
ss
js
push
dec
dec
lahf
inc
push
mov
std
mov
xor
xor
mov
mov
mov
stos
int
mov
xchg
shlb
sti
xorl
dec
fwait
lds
in
mov
dec
mov
lods
ja
mov
mov
lahf
insl
jno
decl
mov
sbb
outsl
scas
xchg
adc
dec
xor
in
pop
ftst
mov
rcll
loop
inc
add
insb
add
fldcw
or
mov
ret
sbb
push
lahf
out
dec
filds
fiadds
jmp
shll
test
inc
fdivr
xor
scas
in
inc
push
mov
adc
and
iret
ja
jb
addb
hlt
fidivs
iret
aaa
add
mov
ljmp
scas
xchg
sbb
xor
sbbl
adc
push
out
cmc
push
test
fidivrs
test
mov
xchg
int
lret
or
push
fstl
sub
sar
lret
imul
fstps
fisttpl
sub
movsb
dec
adc
push
test
xchg
sub
sbb
lods
sbb
push
aaa
sahf
repz
xlat
andb
sub
mov
pop
mov
pop
mov
rorb
sub
add
xor
cltd
dec
cwtl
mov
push
repz
inc
test
push
jle
inc
cmp
mov
int
ret
mov
pop
mov
pop
cwtl
je
mov
lret
scas
mov
cmp
hlt
lods
call
repz
cwtl
lea
lea
xchg
scas
ds
inc
push
mov
mov
push
repnz
in
addr16
mov
flds
movsl
mov
mov
jle
xchg
jo
sahf
std
mov
test
scas
xchg
aaa
sbb
ds
cmp
sbb
add
and
jp
push
out
fsubrl
xchg
jp
and
sub
sbb
cli
popf
insb
out
add
les
das
fisubs
xchg
cmc
xchg
fiadds
push
add
dec
mov
sbb
push
out
push
mov
into
cmp
push
mov
das
mov
out
aad
pop
cmp
jnp
or
cmp
and
sub
cmp
push
out
pop
lea
aad
pop
cmp
mov
cwtl
stos
in
jmp
js
scas
mov
mov
mov
ss
mov
ss
push
push
and
fnstcw
lds
jle
ret
fwait
cs
negb
jge
dec
jbe
dec
mov
lock
cmpsb
flds
popf
cmpsl
mov
xchg
icebp
in
xchg
pop
fdiv
scas
fsts
inc
aas
faddl
popf
mov
jmp
cld
mov
daa
xor
mov
adc
fnstsw
sbb
mov
scas
cli
out
jno
out
mov
mov
stc
push
rcll
rcll
test
clc
int
fwait
mov
jle
xor
repz
test
filds
test
ljmp
fld
mov
test
pushf
cmpl
cmpsb
in
int3
int
scas
pop
mov
mov
sub
mov
adc
cmpsb
and
jmp
addr16
cmp
test
mov
jnp
loope
adc
mov
mov
xchg
bound
aas
mov
fidivs
xchg
in
scas
push
cmp
dec
lcall
xlat
and
mov
movsb
xchg
out
pop
or
scas
mov
push
sbb
movsl
inc
faddl
ficomps
lock
and
fwait
sbb
sarb
and
sub
push
cmp
imulb
testb
add
add
jg
and
out
and
lahf
mov
fldenv
add
lods
test
aaa
imul
mov
sub
xchg
movsb
dec
mov
sub
cmp
mov
mov
inc
mov
or
stos
cmp
sti
mov
inc
gs
roll
mov
imul
jg
fstps
xor
cmp
loope
pop
sub
shrl
ljmp
xor
inc
inc
and
ds
jns
lods
repz
cmpsb
mov
in
lcall
arpl
and
jecxz
or
ss
lock
mov
mov
xchg
test
repz
mov
imulb
xchg
mov
stos
fstp
leave
add
jo
jge
sub
rcrb
pop
jne
sub
inc
ret
xchg
jmp
push
adc
fcoml
rolb
and
sti
mov
cmpsb
lods
add
scas
jge
mov
addr16
repnz
cli
inc
jmp
push
bsr
mov
or
push
scas
fmuls
scas
test
addr16
aam
push
fld
test
aad
dec
gs
cmp
xor
into
push
fisubrs
insb
daa
mov
sub
test
sbb
rcrb
mov
out
ds
subl
jecxz
cltd
mov
push
cmp
fincstp
ja
push
pop
repz
adc
cwtl
dec
dec
push
push
lock
mov
mov
mov
cmp
into
sub
lock
jns
mov
xchg
gs
or
mov
jp
in
mov
testl
std
pop
out
xchg
pushf
sbb
mov
jg
pusha
nop
pop
iret
adc
sbb
test
xchg
subb
test
mov
push
add
mov
mov
aas
sub
mov
imul
icebp
lods
adc
cmp
jp
jns
add
sub
shrl
mov
sub
hlt
sbb
add
gs
push
das
or
mov
push
bound
jg
xor
and
mov
or
fiadds
mov
mov
jae
shll
fs
fstps
mov
pop
inc
mov
or
add
dec
push
push
mov
flds
scas
mov
test
or
jmp
xchg
dec
push
jmp
stos
in
sub
push
in
insb
sti
xchg
fisttps
mov
mov
fisubs
int3
xchg
lcall
repnz
js
pop
dec
mov
iret
push
lcall
add
test
xchg
sbb
mov
ror
in
and
dec
out
fnstcw
icebp
dec
cmp
std
lods
test
cs
xchg
hlt
andb
xchg
fisttpl
jp
adc
int
xchg
mov
in
adc
jne
movsb
sbb
dec
xchg
lahf
push
nop
addb
test
pop
aam
inc
loop
mov
jge
in
subb
xchg
scas
movsl
or
cmpsb
jmp
movsb
nopl
mov
inc
pop
pop
adc
std
sahf
mov
mov
out
mov
xor
movsl
rcrb
sub
mov
or
adc
cmc
dec
enter
sti
mov
lds
mov
cmp
aaa
adc
pusha
cmc
xchg
ffree
pop
popf
jb
aaa
mov
pusha
loope
lds
dec
pushf
and
dec
sti
pop
jl
and
lock
inc
inc
mov
jae
leave
xchg
mov
dec
sub
jae
scas
mov
sbb
push
push
mov
add
cmp
bound
pushf
xor
push
popf
mov
shrl
loope
bound
movsb
pop
jl
pop
pushf
test
or
push
jmp
jnp
mov
hlt
or
and
mov
loope
cmp
push
pop
iret
in
lods
adc
lret
cmpl
ljmp
aad
cmpsl
test
scas
ljmp
adc
scas
fstps
in
pop
test
dec
mov
lret
subb
ja
xorl
outsl
and
mov
das
add
dec
out
out
cmp
mov
faddl
xlat
pushf
movsl
test
test
cltd
shll
and
jne
mov
push
lods
sti
ret
pop
movsl
lods
sub
xchg
std
jmp
fwait
data16
fcom
jne
and
stc
sub
mov
cmp
rolb
cwtl
sbb
or
mov
inc
ss
fstps
imul
or
pusha
xlat
pop
scas
aaa
aam
sub
mov
imul
sarl
out
xchg
cmp
cli
push
and
out
mov
arpl
xor
test
iret
fsubrl
push
ljmp
inc
sbbl
fdivrl
mov
stos
scas
add
out
dec
inc
imul
out
mov
inc
out
rcr
je
push
in
sub
xchg
das
push
add
out
or
fcomi
inc
hlt
mov
aam
dec
pop
dec
xchg
inc
fwait
pop
gs
fs
test
adc
adc
inc
dec
jp
out
xchg
je
cmpsl
pop
sahf
loopne
cmp
xor
xor
sub
adc
movsb
das
xchg
jne
inc
cmpsb
add
mov
sub
jb
xchg
dec
mov
mov
push
clc
and
int
mov
icebp
add
jp
dec
lcall
sbb
jl
test
aas
dec
push
mov
mov
stos
jg
inc
mov
add
and
negb
nop
fsubrp
mov
test
repnz
clc
mov
push
push
mov
mov
cmpsb
out
dec
push
xchg
stos
or
mov
xchg
lcall
cwtl
sbb
rolb
jnp
test
add
mov
mov
repz
mov
addr16
outsb
push
sbb
dec
test
repnz
scas
mov
scas
xor
movsb
aaa
dec
lods
adcl
mov
mov
add
sbb
inc
cmp
mov
inc
jo
in
pushf
imulb
jp
scas
mov
nopl
lret
push
inc
or
jae
mov
and
cld
popl
inc
cmp
jne
sub
mov
xchg
adc
push
jl
arpl
flds
insb
jns
sbb
repnz
pop
mov
jge
int3
inc
sbb
xchg
inc
pop
aad
jmp
and
push
out
jbe
push
mov
popf
add
fs
frstor
dec
add
cmp
sbb
mov
and
rol
jmp
enter
fnstenv
loope
loopne
movsb
pop
scas
jecxz
paddsb
in
mov
add
jae
or
into
or
xrelease
fwait
std
and
jnp
test
add
xchg
push
mov
outsl
mov
repz
flds
fcompl
insb
cmc
insl
xchg
jns
and
xor
mov
mov
sbb
setno
add
loop
mov
popf
test
sbb
and
or
repnz
xor
ljmp
outsl
test
lret
mov
stos
pop
in
mov
push
leave
andl
cmp
addl
push
in
decb
jnp
cli
cmpsb
addr16
fstpt
mov
mov
je
pop
lea
icebp
push
pop
sub
jnp
and
test
sarl
int
es
mov
nop
cmpl
stos
lahf
jge
xchg
xor
loope
mov
not
sub
cmp
cmp
outsb
ds
sub
pop
test
loopne
scas
mov
arpl
jns
sbb
fisubrs
fnstcw
outsb
dec
cmp
cmp
or
das
mov
sub
out
aad
enter
mov
push
and
adc
dec
mov
mov
leave
mov
mov
adc
xchg
push
and
xchg
pop
cltd
mov
mov
mov
das
adc
and
ljmp
inc
lock
cmp
jb
out
mov
add
inc
xor
jecxz
sub
fldenv
data16
mov
popa
pop
mov
outsl
mov
mov
push
xchg
repz
lods
cmp
ficomps
xlat
cmp
movsb
mov
in
icebp
lret
pop
in
pop
lahf
arpl
in
andl
rcrl
ret
cs
mov
in
das
jns
js
mov
fdiv
and
pop
movsl
fcompp
jg
shll
addb
inc
push
xchg
sub
test
dec
jno
clc
shr
mov
andb
ret
addr16
push
lret
test
negb
pusha
or
or
es
xchg
xchg
inc
shlb
jbe
and
mov
inc
lahf
or
mov
dec
fdivrl
cmp
push
xchg
or
mov
fnstsw
xchg
rcll
mov
mov
fadds
lahf
push
xchg
or
int
xor
insb
lahf
mov
cmp
inc
sti
pushf
dec
pop
sbb
cmc
aad
pop
jl
mov
mov
leave
cmpb
icebp
inc
jno
xor
addr16
cmpb
mov
stc
movsb
add
out
mov
iret
xor
mov
jecxz
hlt
sub
jbe
and
or
cli
sbb
loop
std
xchg
cmc
fwait
sbb
test
pop
movntq
xchg
add
push
add
mov
pop
and
or
pop
push
wrmsr
cmc
xor
pop
push
mov
add
jb
xor
push
cli
push
lahf
mov
pop
cmpsb
outsl
adc
sub
fidivrs
bound
fsts
aas
test
imul
ja
movsb
ds
fwait
xor
and
scas
mov
sbb
xchg
adc
xor
add
adc
jb
cwtl
js
fcoml
div
and
sbb
push
pop
mov
scas
jp
neg
adc
cmpsl
adc
xor
pop
adc
mov
xchg
jmp
xchg
data16
push
mov
pop
xchg
push
clc
mov
lcall
sarl
ja
shl
fldcw
cmp
lahf
out
add
hlt
out
mov
je
cmpsb
fstpl
push
in
push
push
out
mov
add
inc
cmc
inc
enter
cmp
mov
cmp
mov
xchg
push
fidivs
jns
mov
push
pop
inc
inc
jne
call
push
dec
fnstcw
insb
lods
xchg
pop
mov
mov
mov
inc
out
dec
int3
aad
jno
sub
push
fwait
jne
sbbb
pop
dec
out
ja
mov
inc
fstpl
add
out
inc
mov
add
fyl2xp1
test
lahf
sub
test
mov
xchg
icebp
or
mov
cmp
divl
pop
fidivl
xlat
cmpb
out
fldenv
lds
imul
int3
faddl
mov
sti
das
xchg
xlat
popf
test
xchg
shr
and
inc
mov
add
pop
repz
inc
sub
sahf
test
inc
xchg
and
xchg
sarl
or
sahf
xchg
lret
das
jae
mov
movsb
mov
push
addr16
loopnew
xacquire
dec
enter
outsl
cmpb
push
outsl
push
insb
dec
push
incl
scas
mov
mov
ret
pop
sbb
lret
mov
or
ss
lret
sahf
addb
xor
sbbl
aam
popf
jo
leave
std
lods
push
mov
incb
fcmovnbe
dec
or
mov
test
inc
inc
in
jns,pn
cmpsb
sbb
push
movsl
das
nop
mov
scas
cmp
mov
sbb
sbb
xchg
js
call
addb
sub
test
mov
or
pop
insb
insb
cmpsl
xor
loop
mov
mov
mov
in
lds
mov
gs
jb
call
dec
es
cmp
test
and
pop
lods
sub
int3
test
lcall
ja
ret
dec
jge
inc
xchg
cmpsb
scas
and
mov
jns
cmpb
and
pop
pop
and
pop
repnz
jae
or
ss
leave
cmp
sbb
adc
fidivrs
repz
inc
es
in
ss
sbb
xor
lahf
out
push
pop
push
jo
jo
and
xor
add
das
fsubrl
jb
xchg
dec
in
jge
stos
cmp
cmp
out
xchg
adc
push
mov
xchg
into
jb
or
scas
dec
add
mov
pushf
fidivs
xor
pop
dec
sbb
dec
mov
ljmp
mov
and
and
jp
inc
sahf
int3
out
cmpsb
xchg
adcl
lahf
or
xor
xchg
cmc
clc
in
stc
push
es
pop
cmpsb
fsts
xchg
dec
push
cmpl
mov
sub
pushf
dec
and
shrb
mov
movsl
pushf
aas
mov
dec
or
mov
movsl
std
jge
or
stc
xor
sbb
mov
lahf
lods
popa
mov
test
mov
das
fs
out
dec
cld
popf
mov
shlb
loope
popa
pop
test
mov
add
popa
sub
mov
mov
sub
popa
cli
inc
int3
sbbl
xchg
lahf
jmp
test
sar
loope
mov
cmpsl
mov
mov
sbb
cmpsb
xor
jnp
fwait
rcll
push
out
jae
add
cli
popa
sbb
out
data16
mov
mov
sub
sbb
js
int
inc
mov
push
xor
jbe
sbbb
add
mov
sub
movsb
mov
ror
jl
adc
inc
xchg
mov
sbb
cmp
jno
mov
test
fldenv
push
setg
lods
jge
fnstcw
inc
fcmovnb
aam
adc
iret
popf
push
jmp
lret
pop
cmp
pop
popf
loope
bnd
into
fwait
cld
lods
mov
inc
outsb
in
pop
mov
adc
int3
shlb
or
mov
pop
mov
ret
xor
push
leave
test
scas
mov
in
sbb
sbb
inc
pop
mov
mov
cmp
cld
rolb
jl
test
clc
dec
sbb
int
lahf
sub
mov
bound
push
scas
xchg
fs
stc
lcall
or
outsl
cmp
hlt
inc
lret
lods
enter
sub
pusha
mov
sahf
jb
pushf
test
int
mov
inc
popa
lahf
jge
add
xchg
in
lret
stos
cmp
xchg
jge
push
stos
iret
cmc
pop
mov
out
mov
mov
pop
aam
lret
aaa
call
fsubrl
std
les
popa
sbb
rorb
addb
mov
js
fdivr
clc
out
movsb
push
notb
std
popf
fnstcw
stc
shrb
pop
roll
pop
cmpsl
push
cld
loope
mov
mov
mov
std
nop
xchg
cltd
mov
imul
inc
popf
cmp
das
jb
add
mov
scas
loop
jle
scas
sti
push
mov
nop
in
popa
aas
xchg
fidivrs
lcall
xor
mov
add
jnp
jno
and
aam
dec
scas
test
adc
push
pop
es
inc
xchg
sbb
ds
xchg
cmpsb
sub
je
or
fdivrs
test
xor
sbb
dec
cmp
sbb
orb
mov
sub
jle
inc
cli
sbb
stos
adc
xchg
and
cmp
nop
xchg
pop
mov
fistpl
xor
push
rcl
or
addl
std
sahf
jno
lret
out
jb
nop
rcr
shrl
inc
dec
push
mov
sbb
fnsave
pusha
or
lods
adc
and
jno
faddp
mov
lret
jne
mov
cmp
sbb
push
mov
lret
hlt
mov
and
sub
lahf
lcall
xlat
fadds
ja
loopne
jecxz
fldt
jp
add
pop
imulb
lods
xor
cs
mov
push
sbb
enter
popf
in
mov
cmc
es
dec
roll
int
rcrl
daa
out
std
xor
les
stos
aad
or
in
fidivs
test
jno
leave
mov
dec
mov
push
xor
cmpsl
mov
scas
sar
dec
or
fisubrs
das
outsl
push
out
test
in
fmuls
out
int
mov
lcall
push
add
sbb
xchg
test
shlb
or
cwtl
sbb
jno
sti
orb
mov
mov
sahf
adc
jp
dec
dec
mov
popa
fstpt
fs
out
adc
sete
inc
inc
jbe
clc
imul
popa
mov
dec
int3
test
dec
sub
repz
jo
andl
in
mov
sub
rcr
mov
test
das
cli
test
imul
jg
push
fs
inc
push
popa
das
inc
enter
adc
cmpsb
jl
push
inc
aam
repz
imul
mov
dec
jbe
leave
cmp
test
mov
inc
dec
lret
inc
enter
out
lcall
add
leave
ja
inc
dec
sbb
lods
cmp
stc
fmull
push
push
push
icebp
cmpsb
scas
fldcw
adc
sub
add
jl
adc
lds
lcall
lds
mov
test
pop
leave
mov
xor
insb
fs
sub
push
push
fs
and
adc
cmp
or
out
xor
mov
mov
push
cmp
scas
mov
movsb
int
and
js
jae
xor
mov
jb
lret
fdivrp
ror
clc
popa
int
clc
fs
fmulp
orb
push
jo
cmp
das
sbbl
mov
inc
jbe
jl
sbb
aaa
mov
adc
cmpl
mov
jmp
lods
in
gs
ror
sub
push
sub
mov
cmp
and
mov
mov
dec
int3
inc
idivl
movsb
jp
mov
mov
pop
jb
enter
ss
push
das
pop
push
loope
pop
push
mov
mov
jo
cmp
fcompp
lret
xchg
int
mov
push
push
sahf
jmp
test
fstp
loopne
mov
push
adc
stos
lock
mov
clc
mov
lods
fisttpll
inc
test
int
push
dec
sub
das
fwait
into
std
cmc
test
movsl
mov
out
sub
hlt
fadds
mov
jecxz
xchg
xor
xchg
sbb
addr16
push
mov
pop
enter
or
dec
out
test
mov
push
lret
pop
sbb
xchg
xlat
pop
pushf
lahf
test
test
mov
rorl
xor
test
stc
lods
dec
inc
mov
push
outsb
fcoml
dec
fs
jne
and
jo
fidivrs
mov
mov
aas
jmp
int
mov
scas
cmp
push
pop
push
in
icebp
scas
pop
test
pop
sbb
iret
jae
mov
clc
nop
fisubrs
jne
pop
nop
es
inc
and
cmp
lods
or
mov
lods
pop
inc
lds
sub
push
imul
or
cli
mov
pop
add
jl
mov
xchg
sbb
test
fcompp
push
rol
cmp
imul
cmp
inc
jp
mov
movsb
test
dec
inc
xor
and
jmp
push
pop
aam
sarl
gs
push
cltd
sbb
mov
xor
inc
sub
xor
ds
jne
sub
clc
dec
andl
test
mov
cmc
das
popf
cs
pusha
nop
inc
scas
pop
stos
mov
xchg
lds
mov
jne
mov
fwait
sti
call
outsl
and
push
fstp
add
and
movsb
daa
sbb
outsl
flds
stc
pop
xchg
mov
test
cli
and
sti
pop
fimuls
xchg
push
sti
fiaddl
scas
cmp
and
mov
jne
inc
push
jge
mov
pop
mov
sbb
sarb
insl
and
mov
pop
dec
fists
dec
rol
int
dec
std
loop
out
arpl
mov
push
mov
xlat
cmp
test
inc
mov
out
das
dec
or
cltd
and
jbe
lods
mov
dec
xchg
and
popf
fldcw
nop
fcomi
xchg
jno
adc
cld
xchg
stc
shlb
mov
or
fwait
les
loopne
test
mov
push
and
lea
inc
xor
inc
das
dec
outsb
test
add
or
jp
xor
cmp
xor
rorl
addb
or
fwait
pushf
xchg
jae
mov
xor
hlt
push
repnz
sbbb
pop
mov
dec
pop
pushf
cmp
add
aaa
mov
mov
cmpsb
and
std
int
pop
pusha
stc
inc
mov
repz
into
pushf
lock
push
mov
lods
and
xchg
and
adc
pop
adc
xchg
enter
in
jno
jne
mov
lock
pop
cld
mov
ficomps
cmpsb
jb
cmp
jns
daa
mov
pop
mov
mov
adc
inc
pop
in
inc
ret
outsl
adc
sbb
int
mov
repnz
inc
pop
ljmp
int
orps
inc
arpl
or
xchg
movb
loop
xchg
push
or
clc
mov
jnp
sub
test
mov
inc
sub
fldz
jo
cmp
pushf
popf
test
sub
cmp
sub
jecxz
cmp
fldenv
imul
cs
icebp
mov
out
lods
add
or
pusha
gs
cwtl
das
out
mov
imul
fs
test
fcoml
or
pushf
dec
xchg
fisubl
dec
js
xor
fnstcw
jnp
lds
mov
cld
sbb
or
add
mov
xchg
add
out
cmp
aaa
lds
pop
pop
loopne
jl
roll
or
jmp
xchg
xor
ss
jl
mov
and
sbb
int3
lahf
sbb
cmp
xor
sbb
mov
scas
sub
and
imul
lock
add
loopne
sbb
mov
inc
xchg
jnp
mov
mov
mov
es
cmp
popf
push
fwait
push
std
pop
repnz
icebp
iret
adc
jne
add
stc
adc
fidivs
mov
add
push
imul
mov
addl
ss
sub
mov
adc
ficomps
push
and
testl
aas
xchg
lahf
inc
outsl
inc
scas
lcall
stos
xchg
stc
xor
mov
sub
pop
test
mov
and
sbb
sub
idivb
xor
or
jg
mov
pop
cmp
jge,pt
mov
test
mov
scas
lds
jb
in
pushf
int3
xchg
mov
push
push
mov
cmpsl
or
mov
rcl
stc
dec
jbe
clc
int3
ljmp
mov
negl
lret
add
push
scas
stc
cmp
adc
inc
xchg
int
xchg
jnp
jp
fsubs
sbbl
rorb
bound
dec
cmp
xchg
scas
outsb
dec
movsb
mov
int3
fs
pop
in
fwait
scas
sbb
jle
shlb
and
and
sub
xor
es
mov
mov
test
cmpsb
push
into
int3
cs
lea
int
popa
ds
cld
fistps
cld
ret
xchg
push
dec
push
sbb
pop
fwait
inc
pop
stc
lcall
iret
cmp
scas
addl
fstl
icebp
add
insb
push
stos
scas
cs
enter
jle
pop
cmpsl
vdivpd
je
ds
xchg
adc
fisttpll
movsl
outsl
stos
mov
mov
jge
insl
lahf
jecxz
lods
xchg
repz
sbb
test
sarb
mov
adc
into
hlt
push
aam
flds
cli
cmpsl
dec
in
lea
scas
arpl
movsl
js
inc
stc
mov
lods
mov
daa
add
jo
test
xor
icebp
dec
aam
fs
jl
push
stos
pop
arpl
lea
cmp
lods
mov
test
mov
rclb
fistpll
pop
lock
xchg
pop
mov
and
push
sbb
lret
sub
and
cmpsb
inc
movsb
mov
pop
mov
popa
test
jbe
cmp
add
push
jo
stc
lods
dec
xorb
add
rolb
pushw
xor
or
ret
test
cmpsb
mov
in
push
sub
or
outsb
popa
insb
jp
popf
loop
sbb
cltd
test
test
in
test
mov
fldcw
mov
das
pusha
inc
cmp
mov
out
sub
sbbl
repz
pop
js
cmp
mov
popa
lods
sbb
scas
mov
pop
jno
je
ljmp
or
pop
ret
incb
ret
ljmp
or
call
adc
inc
int
iret
mov
jecxz
loop
popf
xchg
cli
out
in
push
data16
and
loopne
adc
icebp
mov
aam
mov
cmp
lods
cwtl
jecxz
push
scas
out
out
iret
cwtl
popa
mov
dec
cmp
popa
movb
outsb
cmovo
push
popf
hlt
pop
fbstp
std
and
enter
fwait
loope
jecxz
xor
inc
pop
xor
addr16
pushf
rcl
jp
fidivrl
in
ret
ljmp
loop
repnz
pushf
xchg
test
dec
cmp
out
into
insl
popa
icebp
xchg
fmull
cmp
je
pusha
pusha
mov
inc
push
sbb
jo
fsubl
das
lcall
pushf
aad
enter
xchg
lret
mov
add
sub
std
popa
cmpsl
pop
lock
in
ret
jl
js
ljmp
fistl
dec
push
out
hlt
sbb
gs
icebp
dec
fsubs
test
popf
gs
lcall
pop
cmpsb
and
sub
push
lahf
xchg
mov
xchg
adcl
xor
das
fsin
or
jne
dec
xchg
rclb
xor
std
adc
shlb
pop
shl
jg
test
jmp
fsts
std
mov
jecxz
fsubs
sub
ja
jmp
cld
into
jle
and
mov
push
dec
push
xor
mov
ret
sbb
or
cmp
outsb
mov
pop
pop
dec
inc
lret
mov
seta
sub
fcmovnb
sbb
or
cmp
sbb
mov
add
test
and
xchg
jne
fldt
xchg
test
icebp
jmp
fidivs
shr
cmpsb
lcall
pop
bound
scas
ds
test
js
loope
ss
xlat
test
push
cmpsb
xor
insb
cmpsl
icebp
mov
jbe
push
xchg
out
leave
cld
mov
movsl
test
scas
test
fs
mov
test
das
inc
or
rcrl
popf
mov
jo
mov
mov
mov
sub
mov
fmull
xor
xchg
imull
in
xchg
mov
aas
mov
push
pusha
pop
xchg
les
fucompp
loope
lcall
in
repnz
aam
cmpsb
shrb
mov
repz
mov
mov
je
pop
add
aaa
scas
imul
movq
ja
clc
push
mov
fistps
ss
adc
push
or
mov
pop
lahf
in
push
movsl
and
inc
test
pop
mov
fsub
sbb
and
jge
xchg
lods
mov
dec
jnp
call
mov
mov
push
sub
into
adc
xchg
sbb
push
or
call
lock
addr16
cmp
lret
or
mov
inc
int3
insl
cmpsl
pop
mov
fnstcw
jp
sbb
icebp
cmp
sbb
sub
jle
sub
stc
clc
jnp
mov
mov
mov
jb
lret
popa
jl
mov
jae
es
sbb
hlt
xor
sarl
imul
imul
icebp
mov
mov
lods
sbb
or
pop
and
mov
adc
adc
dec
dec
hlt
mov
xchg
test
daa
mov
popf
jae
pushf
loope
fiadds
xchg
pop
sub
jp
sbb
js
out
and
lahf
std
fldcw
cmp
mov
lret
or
push
das
mov
inc
sbb
cld
mov
arpl
test
cli
xchg
popa
xchg
out
push
mov
xor
dec
or
push
jle
filds
jae
cmpb
jo
cmpsb
cmc
push
ss
pop
dec
jp
add
adcb
cmp
lods
out
pop
jno
ficoms
sbb
sahf
xor
les
imul
sbb
xchg
push
mov
adc
pop
or
aam
lods
sub
movsl
cmp
adc
mov
jae
push
test
hlt
gs
clc
inc
mov
dec
lcall
in
mov
ret
xor
fcoml
and
or
sub
in
movsb
xchg
push
iretw
pop
dec
test
popa
data16
shll
in
jno
sub
or
fnstsw
push
and
jg
add
loope
lret
mov
and
popa
cmc
and
call
cli
mov
ljmp
push
test
popa
jecxz
lods
inc
mov
enter
push
js
mov
icebp
add
cmc
out
or
sbb
xchg
adc
add
cmp
xor
adc
cmpb
mov
jp
mov
fldenv
stos
sbb
les
jmp
daa
inc
pop
jne
jle
andl
add
std
sti
call
cmpsb
movsb
add
loopne
sbb
mov
mov
xchg
mov
jae
sbbl
adc
push
stc
inc
fcoms
es
xchg
cmp
cmp
jp
cmp
add
add
mov
mov
scas
popa
nop
loop
jb
fldenv
into
xor
sub
and
mov
jg
jbe
pop
cs
push
push
or
and
xchg
inc
gs
sbb
add
sarl
xsaves
popf
aaa
sbb
push
pop
push
ds
sti
jge
notb
loope
pop
or
push
aas
fdivr
pop
mov
pop
fwait
gs
jnp
jg
mov
mov
jle
int
push
xlat
dec
mov
xchg
xchg
cs
xchg
sbb
nop
cmc
pop
adc
mov
sub
jne
pop
xor
pop
cmpsl
and
mov
nop
jae
or
inc
xlat
cli
push
pop
mov
test
jg
cmp
push
data16
push
das
sbb
xchg
lea
sbb
popf
dec
jnp
daa
scas
push
ffree
adc
mov
jle
scas
cmp
leave
and
pop
dec
or
adc
sbb
lods
and
fneni(8087
xchg
push
out
inc
xchg
rol
mov
jge
insb
add
iret
repnz
lret
cmp
mov
outsb
and
rcrl
xchg
mov
adc
or
inc
gs
sub
ss
sub
sarb
pop
jae
lahf
lds
cmpsb
outsl
cwtl
add
jnp
mov
std
mov
or
inc
inc
cmp
sbb
dec
xchg
loope
or
mov
fwait
lret
inc
sahf
sub
lds
inc
xlat
dec
cmc
out
jae
jo
push
xlat
cmc
cmp
je
fdivl
push
lret
je
add
jp
and
sub
jno
int
inc
mov
mov
pop
pop
mov
mov
lcall
test
sti
sub
movsb
clc
cli
mov
imull
pop
sub
stos
rorl
cli
or
cmp
mov
push
and
aaa
dec
or
add
mov
rcrl
add
sbb
add
xor
mov
ret
popa
js
sahf
fisttpl
adc
add
cmpsl
je
adc
ja
in
mov
mov
movsl
sub
jmp
imul
fidivrs
divl
or
int3
xchg
fdivr
test
test
out
test
xor
outsl
adc
inc
push
cmp
mov
mov
push
pop
mov
cltd
test
mov
es
or
mov
out
cltd
cmp
dec
rcrl
fldenv
repz
cmp
cmpsl
jae
shll
inc
in
sbb
insb
add
mov
jge
insl
sub
jp
lods
sub
mov
push
inc
cmc
push
pop
cmp
and
fmuls
addr16
sbb
sbb
or
adcl
sbb
mov
sbb
and
les
sub
mov
dec
dec
lahf
or
push
or
push
xchg
mov
lahf
mov
shrl
in
movsl
xchg
pop
movsb
addr16
js
out
int3
sub
addr16
clc
mov
aad
or
testl
lcall
pushf
push
cmp
test
sbb
sub
xchg
cmp
pop
mov
jmp
cmp
sbb
icebp
cmc
mov
jge
xchg
lods
cmp
adc
call
jg
cwtl
xchg
fdivrs
fstpt
inc
jmp
pop
pushf
test
push
cli
mov
popf
into
or
ret
scas
fcompl
sbb
out
cmpsb
pop
lods
popa
push
and
jae
sub
out
out
push
clc
push
mov
push
stc
lcall
cmp
daa
adc
insl
sahf
xor
test
or
pop
rcrl
ret
inc
or
gs
imul
outsb
sahf
out
testb
jbe
lods
shl
mov
jecxz
adc
dec
bound
test
rcrl
in
xor
lods
adc
adc
push
mov
dec
je
mov
pop
sbb
mov
out
scas
add
pop
and
je
cmpsl
mov
aam
enter
sbb
mov
in
movsl
jp
pushf
scas
dec
dec
mov
ja
mov
xchg
std
stc
std
js
jg
sar
pushf
mov
adc
pop
test
sub
gs
or
xlat
addr16
adc
repnz
clc
dec
sbb
xor
jle
loop
mov
mov
mov
call
in
push
jno
icebp
fidivrs
repz
idivb
or
pop
pop
mov
fiaddl
push
test
mov
mov
mov
data16
and
mov
sbb
add
add
cs
stc
out
jae
inc
test
into
in
scas
popa
es
out
jbe
leave
dec
sub
xor
int
cmpsb
addr16
les
sbb
or
les
out
xchg
push
mov
fsubr
call
aas
push
inc
sbb
pop
sub
adcw
jae
out
das
popf
repz
in
fisttpl
inc
out
test
push
sbb
pusha
cmpl
arpl
pop
fmull
rcll
test
adc
ja
inc
or
aam
mov
mov
cltd
shr
inc
adc
cmpsb
fwait
mov
loop
jle
xchg
push
ja
push
outsl
imul
popa
test
push
mov
push
xor
pop
cmc
cltd
dec
test
int3
cmpsl
cli
imul
dec
in
js
std
fld
loop
mov
test
subl
out
sub
add
scas
in
popa
in
adc
pop
sahf
out
dec
sbb
mov
xchg
mov
adc
add
inc
push
and
pop
cmp
mov
inc
push
jo
mov
mov
repnz
test
push
loop
push
dec
js
sub
std
push
aaa
add
adcl
int
pop
add
ficomps
cmp
int3
inc
fmul
mov
cld
mov
mov
imul
popa
xchg
sub
adc
loop
push
pushf
dec
lods
call
pop
cmp
idivb
aas
stos
daa
scas
out
aad
test
frstpm(287
sbb
test
lods
dec
push
rep
ret
popa
sub
andl
stc
rep
fmuls
mov
flds
mov
cmp
sarl
adcl
sbb
pop
inc
jg
sub
inc
fimuls
dec
mov
mov
jnp
jns
xor
pop
push
int3
pop
sub
jns
ficompl
adc
xchg
fnstenv
add
mov
clc
add
dec
sub
insb
cmpsb
sti
cwtl
popa
cmpsb
add
pop
cmp
adc
shrl
jmp
and
mov
adc
or
jmp
or
dec
mov
pop
xor
neg
ret
lahf
lea
aaa
cmp
test
aas
or
jns
sbb
jnp
mov
mov
pop
sbb
aaa
inc
outsb
jbe
andl
sbbl
cmp
or
mov
aad
std
mov
incb
or
icebp
cli
add
cmp
pop
stc
and
scas
push
jae
add
sti
push
out
cltd
mov
push
add
repz
push
fcoms
dec
cmpl
dec
mov
mov
add
mov
mov
aad
dec
ret
add
add
xchg
aad
pop
movsl
add
push
mov
cli
loopne
jmp
les
dec
mov
stos
inc
js
xchg
xchg
cmp
popf
mov
xchg
add
aas
nop
enter
mov
shlb
scas
jb
add
scas
xchg
mov
jno
mov
add
xor
stos
sub
cmp
lret
dec
jae
jg
int3
push
out
ljmp
xchg
test
js
mov
in
xrelease
lods
daa
inc
sbb
add
pushl
hlt
bound
shll
movsb
xchg
shll
test
xor
push
jl
cli
or
sbb
test
pop
test
shlb
push
dec
shll
jge
xchg
pop
in
aad
mov
dec
fisttpll
mov
subl
outsb
cmp
out
sub
icebp
push
stos
icebp
or
subb
fyl2xp1
sub
add
test
popa
cmp
mov
sub
idivl
or
int3
jae
add
gs
inc
mov
jge
xor
jo
movsl
xchg
jp
dec
fsubl
push
cmp
sahf
mov
adc
xchg
out
add
push
jmp
mov
std
movsl
xor
pushf
test
shl
mov
lods
jbe
fs
fstp
mov
xchg
push
pop
mov
jnp
movsb
mov
jp
xchg
adc
and
mov
jb
inc
sub
dec
mov
addr16
repz
std
sub
jle
xchg
jl
mov
sbb
adc
mov
xorb
mov
inc
jbe
push
and
lods
fldenv
jo
scas
mov
enter
lock
or
ret
test
imul
cs
mov
mov
rcll
loope
shll
jg
dec
iret
push
ror
mov
mov
sbb
mov
movsl
fldcw
sti
out
mov
addl
cmp
lret
jbe
insb
lcall
cs
fs
mov
fsts
push
out
in
xchg
cwtl
fnstcw
xlat
andl
add
rol
fwait
out
outsb
and
mov
add
fnstenv
mov
sbb
and
mov
mov
inc
mov
mov
loope
mov
shl
cld
dec
iret
in
sub
iret
inc
sbb
mov
push
insb
fistpl
lods
int3
inc
fcoms
inc
movsb
shll
inc
int
mov
push
std
enter
adc
mov
jle
pusha
popa
aad
cli
fwait
scas
rorl
mov
xchg
pop
cmp
add
iret
inc
and
adc
pop
in
int3
push
push
leave
xchg
loop
movsb
dec
outsb
stc
enter
jo
jle
or
popa
bnd
stos
cld
inc
lcall
imul
jecxz
mov
jmp
inc
xchg
and
test
lret
mov
mov
daa
mov
pop
out
clc
jle
repnz
xchg
aaa
imul
imul
adc
out
fstps
adc
clc
stc
cmp
mov
mov
dec
jns
add
in
mov
push
fwait
mov
inc
rorl
push
mov
notb
mov
sarb
lret
mov
js
pusha
int3
rorb
pop
out
pop
sti
dec
arpl
mov
cs
jae
pop
push
orb
addr16
jns
inc
cltd
dec
sub
dec
and
and
cmpsb
push
in
add
cmpsl
das
fsubs
or
jb
pop
rcll
outsb
int3
pop
jge
sub
ret
stos
mov
mov
pop
std
addr16
into
pushf
imul
dec
jle
cli
xor
xchg
testb
mov
and
lgs
ljmp
mov
jnp
fxch
dec
add
xorb
sar
jp
and
repz
adc
into
arpl
pushf
out
xor
jle
popa
in
into
fisubl
or
aaa
test
test
push
push
stos
fsts
pop
add
xchg
and
push
into
cltd
pop
nop
loope
mov
test
je
push
lods
adc
bound
outsb
sub
inc
data16
std
lods
push
sub
jle
repz
bnd
cmp
fwait
out
pop
popa
pusha
int3
add
jne
fnstsw
pushl
scas
test
xor
scas
sbb
mov
mov
dec
and
std
cld
jp
movsl
xor
leave
cmp
inc
xlat
mov
mov
out
pop
pop
je
fnstenv
or
jl
cwtl
loope
es
push
test
mov
jmp
imul
fnstsw
sahf
dec
repz
jo
lcall
out
jnp
inc
add
push
divb
dec
cmp
push
ret
dec
xchg
sub
in
fwait
rcrb
cmp
xchg
cli
dec
mov
push
lea
xor
fwait
rcrl
sarl
gs
fnstcw
xor
je
push
push
mov
cmp
aas
xor
dec
fmuls
mov
sbb
std
lcall
aam
sbb
push
jbe
repnz
clc
aas
or
mov
fnop
jb
sub
hlt
jns
rcrb
jns
clc
shlb
sbb
es
sub
fstps
pop
adc
out
xchg
mov
cwtl
shl
push
push
and
into
jl
jp
dec
movsl
stos
in
shll
sbb
mov
andl
or
xor
xchg
stos
sbb
sbb
push
sub
xorl
or
sbb
imul
xor
data16
cmpb
cwtl
adc
mov
fwait
pusha
int3
test
fxch
popa
pop
dec
pop
push
push
or
xchg
movsl
out
aam
cmpsl
adc
sbb
dec
data16
mov
loopne
mov
shr
cmp
xor
and
movsl
pop
nop
mov
das
aaa
mov
jnp
jno
jae
jle
ja
sbb
mov
xor
push
xchg
push
push
xchg
stos
push
jbe
out
jle
int
imul
fyl2x
jl
cmp
mov
mov
mov
dec
pushf
or
adc
dec
mov
out
es
lcall
sbb
and
adc
mov
cmpsb
ret
lock
sub
jecxz
rcrl
inc
lahf
das
push
xor
cmp
push
fdivl
push
xchg
dec
jbe
inc
pop
dec
mov
push
mov
int3
fistl
std
repz
sub
hlt
filds
push
int
sbb
lds
mov
insb
fldcw
push
stc
dec
movsl
das
pop
leave
jae
jmp
add
lds
and
mov
sub
stos
sbb
mov
pop
jbe
ds
fcoml
mov
lcall
mov
mov
and
inc
xchg
pop
and
mov
rclb
cs
cmp
cld
push
fisubs
or
in
inc
xlat
or
push
push
dec
addr16
xchg
inc
das
add
hlt
xlat
pop
mov
mov
loopne
xor
xchg
mov
and
xor
sarl
jge
negb
dec
arpl
arpl
xchg
fwait
cmp
es
lea
ljmp
fwait
adc
popf
sub
sub
push
pop
movsb
pop
out
xor
lret
pop
mov
mov
adc
js
mov
test
test
mov
mov
insb
ret
cmp
jae
mov
xor
inc
test
jns
xor
cmp
sbb
cltd
push
daa
lods
pop
dec
jb
cmp
inc
xor
fcompp
imul
in
popf
sarl
push
dec
daa
sbb
fdiv
flds
add
std
jb
ds
jno
or
in
sub
mov
mov
adc
mov
and
pop
es
jb
push
movsl
andl
repnz
enter
and
mov
mov
outsb
add
pop
or
lcall
in
scas
xchg
test
sbb
das
xor
xchg
je
xchg
jge
or
add
dec
fsts
sub
or
cli
sbb
inc
push
mov
scas
inc
cmp
inc
add
push
fs
insl
pusha
addr16
pop
les
loope
repnz
in
cmc
jp
scas
loopne
lds
fldl
scas
mov
repz
and
or
andb
fs
rcrl
fsubrs
and
mov
fs
push
stos
xchg
lret
out
enter
stc
roll
int
sub
adc
mov
inc
dec
cmp
mov
mov
adc
push
lods
inc
test
jp
cmc
fwait
js
and
iret
loopne
test
mov
cmc
stc
and
out
popa
fsubrl
out
add
adc
ret
mov
jp
loopne
mov
loope
cwtl
leave
jnp
xchg
pop
pop
and
mov
in
xor
or
popf
dec
jle
mov
mov
shld
adc
stos
lret
movd
inc
outsl
pop
ja
mov
xchg
loopne
shl
addb
orl
arpl
mov
aaa
jne
push
je
popf
jnp
pop
xor
sbb
pop
iret
lods
sub
gs
in
xor
dec
cmp
dec
mov
mov
aam
outsb
push
push
and
lcall
adc
lods
mov
inc
xchg
jp
lock
ficomps
fstp
scas
data16
std
shl
addr16
mov
lret
jb
xlat
mov
fimuls
cld
xchg
mov
mov
pop
lcall
xchg
es
mov
rolb
adc
xor
std
xor
rolb
mov
test
cmp
icebp
dec
lcall
or
clc
lret
and
cmpsb
nop
cmp
dec
cmp
outsb
popf
mov
pushf
hlt
scas
test
mov
fadds
adc
popa
xor
rolb
and
cmpsb
push
sbb
out
popa
clc
mov
cmp
lcall
mov
sbb
das
sarl
or
sbb
mov
cmp
mov
mov
mov
xchg
and
mov
rol
incl
int
add
sub
pop
cmpsl
std
mov
stos
fsubr
mov
mov
ds
jg
shll
das
jae
fstpt
lret
or
lods
test
xchg
mov
jae
das
fsts
sub
gs
adc
lahf
out
mov
push
push
in
sbb
mov
rorl
fiaddl
int
push
xor
and
or
push
xor
ja
pop
fdivrs
out
and
ja
loop
sbb
aaa
inc
ja
call
add
push
dec
adc
sbb
inc
jae
mov
mov
jge
ret
xor
cmp
lcall
sub
pushf
lcall
test
sbb
jns
ret
int
adc
push
insl
mov
cmc
mov
or
movsl
rcrl
and
jb
int3
lods
lea
xor
push
mov
lahf
lods
cmp
mov
inc
pop
aam
sbb
test
test
cli
fcomi
push
cmpsb
sbb
mov
pop
shlb
in
mov
jg
push
dec
xchg
cmp
out
clc
ret
ret
fldcw
xchg
push
mov
push
sub
insb
xor
pop
sbb
xor
jo
xor
lock
sbb
xchg
lods
lea
mov
in
inc
hlt
pop
lods
test
arpl
in
in
ffreep
int3
or
cmp
pushf
fnstenv
jp
mov
iret
xor
mov
addr16
lret
mov
xor
movsb
aaa
and
jnp
dec
cmp
mov
sub
jns
push
sub
xor
mov
sub
out
jmp
pop
js
out
nop
rolb
aaa
dec
cmpsl
and
jmp
pusha
fsubrl
mov
mov
movsb
mov
dec
push
cmpsl
cmpsb
fldenv
lods
mov
pop
lea
and
sub
xchg
dec
lods
jns
jne
movsb
fcomps
pop
adc
jnp
jmp
jb
repnz
inc
ja
jns
and
or
push
scas
call
icebp
mov
mov
cmc
add
cwtl
dec
inc
nop
cld
xchg
leave
movsl
in
sbb
ss
xor
es
int3
scas
push
pop
test
lock
test
movsb
dec
pop
mov
fdivs
lods
jbe
mov
cmp
push
xor
scas
sbb
daa
xorl
std
stc
stos
sbb
or
sti
xlat
sub
mov
jecxz
aad
out
fmull
repnz
popa
push
push
or
mov
cmpsl
outsl
jle
std
out
cmp
cmp
xor
cltd
movsb
pop
es
adc
in
fbld
xchg
xor
push
subl
jmp
pop
fnstenv
sbb
lea
es
pusha
je
rcr
std
xchg
lods
push
mov
dec
mov
cmp
xchg
fistpl
push
test
scas
pop
mov
loopne
pop
in
cltd
jns
push
ret
jmp
fwait
push
pushf
cmp
inc
xchg
cltd
and
aad
popf
cs
cmp
mov
iret
jg
and
mov
movsl
lea
gs
lds
push
dec
in
data16
test
enter
inc
imul
mov
in
jbe
and
fwait
repnz
mov
cmp
ljmp
mov
xor
outsl
or
fldenv
xchg
xlat
popa
mov
in
leave
sub
test
jo
push
jae
lods
mov
bswap
stc
aam
in
and
cmp
xchg
sti
mov
lcall
rorl
scas
jnp
add
mov
in
dec
jp
fcos
cmp
clc
add
push
jle
or
lods
push
popa
mov
sub
clc
jo
sub
mov
in
and
cmp
pop
out
cli
hlt
add
pop
pop
sbb
push
lds
or
xor
jae
cmc
mov
push
jp
into
stos
pop
stos
jecxz
loopne
push
mov
aad
fwait
gs
sub
xchg
cmc
inc
fdivl
out
adc
and
dec
xor
ss
test
mov
add
push
lods
das
pop
scas
xchg
xchg
lods
push
into
outsb
xchg
or
mov
mov
mov
jmp
sarb
jae
or
cltd
cld
shr
mov
repnz
fmull
or
fisttps
popf
jnp
cmpsb
movb
xor
xchg
rcrb
imul
insb
inc
cltd
ficomps
jle
sbb
pop
cli
cmc
add
or
mov
scas
lock
arpl
mov
sbb
xchg
jno
das
jmp
xchg
mov
sti
mov
lods
dec
imul
sbb
lds
pop
and
sub
mov
fwait
outsb
mov
cwtl
mov
mov
xor
or
pop
push
sbb
adc
mov
xor
inc
pop
ss
mov
test
mov
inc
pop
cs
and
pop
push
data16
sub
out
lods
gs
sbb
hlt
stos
mov
pop
je
sub
cmpl
inc
xor
scas
aaa
inc
cmpsb
cs
sbb
inc
jle
rorl
int
xlat
out
js
pop
xor
int
repz
out
sbb
push
nop
jge
into
test
js
add
xchg
cmp
jle
jp
pushf
test
in
xor
je
scas
cs
les
mov
std
inc
stos
xchg
mov
push
das
aam
out
lods
jecxz
ret
inc
out
xor
in
out
je
call
jae
and
dec
aas
mov
fnstcw
sbbb
je
das
hlt
pop
repz
mov
mov
aad
mov
rcll
shrb
repnz
inc
pusha
faddl
sbb
fiadds
jle
xchg
xlat
int3
sbbb
test
aam
fwait
mov
insl
adc
adc
call
popf
sbbl
mov
sub
int3
xor
mov
jnp
inc
inc
mov
popa
sahf
test
push
sbb
imul
jge
enter
daa
fsubrl
mov
fdivrs
pushf
clc
repnz
jge
je
dec
sbb
test
scas
inc
mov
in
cmp
adc
cld
push
das
adc
cmpsb
sub
mov
test
mov
rolb
mov
stc
jne
jge
cmpsb
faddl
dec
mov
jp
mov
out
movsl
out
cmpsl
in
addr16
in
popf
jno
daa
je
in
loope
add
daa
push
sub
sbb
jno
pop
icebp
pop
fistpl
dec
pop
mov
cs
fistl
sbb
loop
jge
mov
mulb
push
addr16
out
push
cmp
mov
inc
adcl
inc
movsb
or
jle
je
and
sbb
sub
sub
pop
or
jge
sbb
or
mov
frstor
dec
jae
lods
jne
lods
aad
mov
mov
sbb
xchg
inc
lret
leave
popa
cmp
mov
push
out
xor
sub
push
inc
out
cli
push
or
or
out
jno
lock
sub
xchg
fs
jg
push
mov
test
mov
out
jge
and
cli
sbb
out
mov
fmul
dec
lds
lock
movsb
das
xchg
push
pop
mov
imul
mov
push
xchg
pop
adcl
cmpsl
inc
test
jle
icebp
mov
jl
hlt
mov
inc
sbb
mov
cwtl
mov
mov
or
fldcw
sarl
or
lock
mov
jns
pop
outsb
mov
xor
fwait
dec
jmp
add
out
ljmp
jp
dec
rclb
mov
dec
sub
push
xorb
cld
hlt
data16
fstps
push
xchg
ficomps
icebp
repnz
mov
cld
jp
jae
mov
mov
mov
addr16
jp
fidivs
stc
fs
fwait
and
mov
push
lods
and
fdivl
shll
rorl
sbb
mov
in
fidivrs
cmp
mov
hlt
in
xchg
dec
cmp
nop
jg
insl
sbb
shl
or
mov
push
jae
cwtl
test
inc
pushf
ljmp
test
inc
in
and
insl
fcomi
lock
in
aaa
cwtl
in
nop
xchg
mov
das
test
xlat
ja
inc
add
mov
mov
fistpll
or
adc
fsubl
movsl
push
lods
lods
jbe
scas
flds
in
fwait
mov
and
sbb
cmc
aas
adc
pop
and
inc
call
mov
fdivl
scas
scas
mov
js
ja
stos
adc
dec
notb
adc
pop
push
int3
pop
mov
push
out
jo
mov
jne
les
jmp
roll
lock
xor
sbb
lret
ret
mov
xchg
xchg
cmp
push
aam
mov
leave
xchg
dec
mov
cmp
scas
dec
xor
es
rclb
fsubs
pop
arpl
cs
cmc
jnp
scas
lcall
aam
scas
pop
loopne
cmp
pop
jb
sbb
mov
lret
imul
sahf
test
mov
or
cli
iret
or
fldenv
pop
cld
or
mov
inc
data16
fdivl
cld
jl
into
mov
scas
dec
int3
mov
push
mov
rcll
and
stc
pop
pushf
xchg
push
test
adc
lret
cld
dec
stc
clc
add
jecxz
xor
fstl
sub
and
push
mov
lret
jl
es
ficoms
mov
cmp
mov
pop
and
lock
sub
mov
faddl
daa
insl
mov
xor
jno
xchg
into
test
push
sub
out
notl
mov
rep
add
in
cmp
pop
shll
push
mov
xchg
dec
flds
loopne
sbb
gs
cmp
out
stos
jb
fdivrl
xchg
sbb
jo
inc
in
shlb
jbe
stc
es
push
or
xor
data16
cs
and
in
loope
dec
mov
pop
insl
dec
ss
cs
mov
cld
inc
adc
dec
mov
adc
cli
and
mov
xchg
test
xlat
add
push
fmulp
cltd
in
int3
add
arpl
cmpsb
adc
mov
pop
das
jne
pop
fwait
xor
mov
movsb
flds
xchg
mov
lds
fmul
popf
mov
push
imul
push
es
mov
mov
or
mov
jae
addb
sti
fwait
lret
cmp
lfs
js
fimuls
clc
add
xchg
mov
adc
and
jg
mov
mov
mov
es
mov
mov
cmp
ret
inc
icebp
fwait
packsswb
inc
dec
insl
add
mov
mov
out
orl
mov
pusha
pop
adc
fdivrs
xchg
push
ss
inc
add
movsb
movsb
ljmp
inc
stos
mov
or
jecxz
lods
sub
movsb
sbb
dec
xor
mov
push
test
inc
and
jae
test
cmp
push
cmpsl
jge
out
lods
cmp
scas
xchg
pop
mov
outsb
inc
cwtl
clc
sub
and
pop
pop
andl
mov
scas
mov
dec
adc
or
out
or
outsb
sub
test
lcall
call
xchg
xor
pop
pop
imulb
mov
scas
push
pushf
test
fstps
test
inc
or
pop
and
or
daa
inc
xchg
mov
mov
cmc
adc
and
in
lods
xlat
mov
hlt
adc
xchg
pop
mov
xchg
mov
cld
dec
mov
adc
pop
xchg
call
in
adc
add
jecxz
sbb
jp
sub
and
cmpsl
jnp
sbb
fs
in
jno
xchg
lret
and
sbb
push
or
repz
out
mov
mov
mov
cmpsb
push
mov
sbb
js
ficoms
sbb
sbb
mov
je
rcrb
out
pop
dec
xchg
push
cmp
sahf
push
jo
mov
mov
lods
test
sbb
add
mov
fs
mov
sbb
push
insl
ret
mov
mov
push
adc
addr16
mov
div
popa
dec
push
xor
dec
xchg
out
xor
xchg
insl
jg
jo
stc
movsb
fs
movsb
mov
test
fsts
icebp
add
push
call
xchg
test
in
push
mov
out
int
test
stc
cmp
inc
jnp
jge
push
sbb
inc
xor
cmp
sbb
test
pop
jns
xor
sbb
sbb
sub
test
ret
mov
fnstenv
subb
lcall
mov
enter
cmp
dec
outsb
shr
push
les
mov
js
scas
and
fnstcw
add
sub
push
dec
xor
and
cltd
xlat
in
cli
push
pop
sbb
xlat
xor
mov
xchg
int3
mov
mov
in
xchg
clc
rcrl
stc
pop
dec
or
jbe
xchg
scas
and
mov
mov
mov
inc
clc
nop
fsub
loop
push
shrb
jnp
mov
out
sub
loopne
and
out
popl
pop
pop
jns
and
xor
mov
add
sbb
cs
fsub
pushf
movsl
sub
mov
lcall
arpl
inc
cmp
sub
mov
inc
into
clc
std
stos
lret
mov
mov
mov
sbb
dec
push
mov
into
jb
cmp
daa
cmpsb
mov
xchg
pop
xchg
xor
or
mov
adc
push
cmc
addb
shrl
gs
sub
dec
sub
movsb
es
sti
sahf
lcall
push
push
cmp
jae
std
mov
mov
dec
jecxz
loopne
fsts
pop
jmp
pop
out
fwait
gs
adc
cmp
jmp
inc
lret
mov
push
mov
scas
dec
add
les
inc
xchg
daa
xchg
mov
lods
jbe
cmpb
lahf
pop
lahf
lods
mov
cld
scas
mov
xchg
mov
add
jmp
daa
xor
and
mov
jns
in
add
out
inc
adc
and
incl
jmp
xchg
shl
rcll
and
or
mov
hlt
inc
fistl
sbb
pop
rcrl
movsb
jno
mov
or
jmp
lods
in
dec
addr16
and
mov
sahf
sbbb
mov
jle
sarl
xor
push
sahf
and
ds
dec
cli
dec
jl
mov
mov
xor
pop
and
pop
faddl
jno
xor
sbb
mov
cmpsl
ficoml
inc
daa
mov
mov
dec
gs
mov
subl
jmp
notl
pop
in
call
pop
mov
xchg
push
or
aaa
xchg
push
push
sbb
push
mov
push
sub
lcall
mov
push
pop
pop
mov
negl
fsin
xor
fdivrl
and
cld
pop
pusha
push
jae
adc
outsb
repz
pushf
sub
xchg
fwait
sti
adcb
je
mov
fs
arpl
les
scas
addb
test
jnp
test
jge
or
mov
mov
xchg
test
lock
repnz
int3
flds
ret
cmpsl
jo
pop
and
mov
mov
jp
sbb
sub
xchg
lret
loopne
or
fisubrs
sarl
xor
les
scas
cmc
mov
jne
popf
int
sbb
xchg
adc
dec
mov
and
les
inc
jmp
je
inc
out
jno
std
xchg
pop
rcr
mov
xor
lods
dec
test
dec
sub
ss
push
loopne
stc
stos
out
shrl
rorl
adc
cmp
sub
das
dec
or
sti
in
test
fs
aas
mov
inc
mov
xchg
movsb
mov
in
jb
and
cmpsb
xchg
aad
cmpsl
mov
mov
lcall
xor
sarb
lods
sbb
in
mov
adc
insb
sub
pop
out
icebp
into
stos
rcr
jae
lods
mov
pop
dec
add
lock
outsl
xchg
dec
pop
imul
lcall
inc
adc
pop
sub
stos
pop
dec
cs
fidivrs
push
add
mov
movsb
or
jmp
std
adcl
adc
pop
and
push
sub
mov
xor
mov
enter
cmpsb
pop
stc
mov
test
fcmovnu
andb
jle
xor
or
sub
jb
push
dec
xchg
notl
movsl
xchg
cmp
sbb
adc
dec
imul
enter
negl
test
inc
andps
pop
les
jmp
mov
sarb
mov
shlb
dec
hlt
pop
ret
jmp
push
stos
adc
subb
pushl
int
mov
cmc
cmpsb
sub
mov
sbb
add
jmp
sub
test
mov
sub
mov
mov
add
xor
sti
jle
cmpsb
mov
fstl
negl
ljmp
push
pop
ss
pop
adc
inc
outsb
and
sbb
push
ds
in
fsubl
hlt
mov
dec
add
mov
push
test
bound
jmp
enter
pinsrw
es
cs
loop
mov
cwtl
cmpsb
subb
xchg
cmpl
loopne
sarb
dec
xchg
mov
push
dec
jecxz
sbb
test
push
push
jne
jl
popa
scas
jmp
and
aad
cld
cmpsb
jp
sub
std
mov
inc
arpl
jo
xchg
in
arpl
aad
lock
xchg
push
lret
sbb
jnp
or
clc
inc
push
or
dec
dec
vmwrite
xor
sbbb
add
lea
in
shr
pop
fstp
cmp
loop
fists
add
jl
add
push
dec
cmpsl
ficomps
mov
push
push
adc
enter
jge
mov
rcll
cmpb
xchg
std
sub
sub
and
gs
test
xchg
dec
sbb
dec
or
ja
adc
inc
ss
xchg
sub
and
hlt
xchg
or
jne
scas
js
jno
fisubrs
cmpsl
cmpsb
pop
in
mov
ja
test
js
xchg
int
fs
xchg
jbe
pushf
mov
mov
hlt
xor
out
jle
adc
stos
lds
add
syscall
mov
gs
xchg
xchg
loope
in
mov
scas
lds
dec
mov
mov
mov
sub
pop
xchg
push
mov
jge
xchg
mov
ss
sbb
sbb
mov
repz
and
lods
stos
lods
cmpsl
jp
or
fcompl
push
dec
xchg
ljmp
in
mov
pop
push
ss
add
inc
lret
dec
sahf
inc
mov
xor
sub
iret
adc
dec
into
jle
adc
jnp
in
sahf
idivb
sub
flds
iret
xchg
push
lea
test
ds
sti
fwait
cmp
mov
sub
push
or
pop
jp
in
iret
dec
lds
insl
movsb
pop
out
xchg
push
test
rcll
imul
stos
lods
repz
xchg
loope
dec
cltd
or
jae
lock
cmp
jle
lret
fidivrl
mov
loope
pushf
pop
lods
inc
sbb
sub
repnz
movsl
ucomiss
mov
pusha
adc
shrb
and
clc
mov
jns
push
sub
dec
inc
and
lcall
or
in
sti
xchg
dec
subb
mov
out
in
jecxz
and
mov
aas
daa
imul
and
test
sub
mov
mov
rcrb
mov
mov
popa
orl
sbb
mov
addr16
leave
call
test
popa
mov
inc
in
jg
shlb
cmp
nop
add
scas
aad
outsl
nop
inc
xor
fidivrs
mov
fwait
into
shrb
scas
cmpsl
mov
bswap
fsts
dec
scas
cld
xchg
subl
jno
sahf
pop
push
pusha
repz
jmp
scas
icebp
loopne
sbb
and
in
int3
fstpt
sub
movsl
adc
or
mov
nop
bsr
fcompp
addr16
mov
jne
gs
lea
cmp
js
xorb
int3
fsubrs
mov
out
popf
push
stos
fidivs
and
lods
dec
sub
out
cmpl
add
cltd
inc
in
push
inc
jmp
popf
jb
mov
xchg
in
call
mov
jbe
lds
loop
and
lahf
gs
stos
cltd
dec
pop
lahf
mov
adc
push
jns
add
jle
inc
pop
inc
and
sub
mov
pop
and
mov
lock
stos
jno
mov
mov
daa
lret
lods
addr16
leave
cmp
push
pop
data16
sbb
and
and
pop
lahf
cmp
cld
inc
pusha
dec
jbe
push
out
push
xchg
rcrb
mov
push
int3
pop
call
lret
add
in
lock
xlat
aas
inc
inc
mov
in
and
cmp
mov
and
pop
ljmp
mov
fcoms
rclb
xchg
inc
xchg
cmpl
outsb
push
inc
jmp
pop
and
xchg
mov
psrad
pop
lret
test
daa
jmp
fildll
inc
jno
test
ficomps
mov
pop
push
pop
into
pop
pushf
jecxz
es
inc
cmp
jnp
fcoml
aaa
and
subb
mov
aas
mov
sub
adc
loopne
cmpsb
into
es
jnp
add
jnp
in
fdivrl
push
pop
mov
mov
adc
fsts
sub
mov
aaa
sahf
out
mov
movsb
dec
test
out
int3
hlt
xor
pop
roll
mov
movsb
jle
xchg
ss
fcoml
push
cltd
jmp
adc
pop
add
in
mov
andl
mov
jbe
sahf
dec
outsb
popf
push
dec
add
pop
dec
or
sbb
adcb
jbe
cltd
call
repnz
andl
fildl
fistl
pop
cmpl
mov
shll
repnz
and
add
xor
lret
xchg
jnp
mov
sbb
cs
ret
movsl
lock
sub
data16
mov
je
xlat
push
test
inc
lods
add
dec
inc
or
mov
test
mov
mov
clc
xchg
in
pop
jmp
xchg
fldcw
out
adc
xchg
je
movsb
roll
pop
mov
or
mov
mov
or
cmp
ret
pop
pop
push
jne
out
inc
push
adcb
das
fstl
push
cli
int3
mov
cmpsl
fldcw
loopne
inc
mov
stc
scas
xlat
pushf
test
mov
jns
dec
lock
dec
jp
xor
mov
adc
adc
adc
lahf
aam
dec
pop
or
test
jl
mov
cmp
addr16
push
aam
cmpsb
mov
jb
mov
out
in
ljmp
mov
popa
sti
mov
in
les
xchg
rcrb
cmpsb
mov
or
gs
fmull
mov
test
mov
dec
sarb
push
in
std
arpl
mov
jge
pop
or
cli
fsts
aad
shll
in
ljmp
fdivrp
pushf
add
xor
inc
les
sbb
clc
jo
push
push
pop
jae
js
jle
xchg
aaa
ja
sahf
fidivrs
sbb
aas
test
jno
rcl
cmp
mov
fcoms
add
and
add
inc
or
lds
dec
out
sub
xchg
sahf
es
flds
cwtl
test
fsts
cmp
and
loopne
xchg
call
les
or
mov
jecxz
xchg
dec
mov
jae
add
adc
hlt
nop
popaw
in
outsb
mov
lahf
popf
mov
gs
jae
and
sbb
mov
mov
mov
test
out
sbb
sub
aam
sbb
gs
xor
dec
and
mov
sbb
movsl
mov
lods
or
push
sbb
int
xchg
or
cmpsb
mov
mov
icebp
int
test
sbb
iret
xchg
mov
rcl
adc
add
xchg
pushf
filds
jo
jle
leave
mov
cli
aas
add
sbbl
ds
lds
sbb
xor
ret
sbb
adc
inc
cmpl
and
lret
arpl
clc
xchg
test
cmp
xchg
jle
adc
or
repnz
and
push
or
std
cmp
scas
cltd
push
jl
sahf
out
fs
lahf
int
jnp
inc
add
sbb
hlt
notl
and
jp
inc
int
jbe
xchg
test
sbb
mov
repz
cmc
jle
into
and
cmpsb
insb
in
aas
int3
clc
xchg
outsb
push
lcall
movsl
sub
inc
test
std
push
xchg
cmpxchg
jnp
jae
iret
gs
xchg
and
sbb
aam
les
mov
pop
int
or
sub
dec
repnz
fwait
xlat
dec
in
push
or
mov
and
jne
pop
inc
fisubrl
cmp
dec
in
ret
pop
pop
lahf
loopne
enter
arpl
jmp
scas
lods
outsl
ss
xchg
fdivrs
hlt
dec
lahf
repnz
test
shll
lods
sub
push
adc
popa
pop
mov
repnz
cmp
mov
cltd
inc
dec
repz
into
jno
inc
loope
data16
adc
and
xchg
outsl
lds
mov
dec
xchg
scas
setae
int
out
dec
xchg
scas
cmp
in
xchg
into
or
xchg
adc
out
daa
mov
test
ljmp
fnstsw
inc
xor
xchg
push
ret
daa
arpl
aas
pop
push
mov
loope
in
lods
inc
std
stos
incl
int
enter
or
lods
mov
aam
adc
or
pop
adc
sti
add
mov
fwait
mov
in
cmpsb
push
lret
jle
scas
cmpsl
stc
and
lret
xchg
dec
lret
test
subb
jae
pop
pop
cli
test
adc
call
jmp
sub
inc
jmp
movsb
jno
lret
movsb
and
scas
inc
sti
lods
fsubrl
test
imul
insb
scas
or
nop
outsl
les
stos
cmp
sbbb
ret
add
push
or
lods
cmp
rcr
popf
push
dec
push
jae
loop
nop
addb
cmp
test
data16
ficomps
lea
mov
jmp
pop
jne
std
inc
test
imul
add
stc
pop
inc
test
xchg
xor
push
inc
addl
ss
into
nop
cmp
test
sub
cltd
js
std
mov
xchg
add
sub
mov
out
inc
xchg
dec
sbb
cmp
mov
push
mov
cs
mov
sbb
ja
mull
dec
mov
or
push
xor
jp
fucomp
sbb
jnp
arpl
popa
add
jnp
out
jge
cmp
shlb
ret
xor
mov
jle
sti
pushf
mov
push
push
stc
stos
shrl
mov
add
dec
lods
insb
sub
cs
inc
pop
xchg
mov
and
mov
hlt
push
lcall
movsb
outsb
sub
xor
nop
fsubrp
push
mov
das
push
add
inc
ja
out
ret
xchg
jle
xor
xchg
fsubs
scas
addr16
xchg
fwait
and
inc
push
mov
mov
adc
jbe
lods
test
xchg
insl
add
int
fistpl
mov
jp
dec
jnp
adc
sbbb
fnstcw
add
in
or
rcll
and
faddl
inc
xchg
jge
jmp
cwtl
lock
fdivrs
cmp
push
out
fldenv
add
cmp
sarl
les
xchg
aad
inc
sbb
jg
cmp
aaa
mov
push
inc
in
and
sbb
repz
femms
rcll
and
pop
fnstenv
inc
loop
and
add
lods
shll
fimuls
clc
fmuls
test
nop
jae
roll
int
js
pop
push
test
jp
mov
data16
fisttpll
sbb
mov
clc
push
fadds
sarl
push
mov
and
dec
stos
fdivr
jge
cld
insb
fstps
ret
adc
and
xchg
movsb
arpl
or
xchg
pusha
enter
cltd
mov
lcall
test
inc
pop
mov
insl
ja
jmp
in
adc
sub
cmpl
std
sbb
testb
inc
aas
movsl
inc
adc
push
mov
mov
sbb
and
xchg
pop
cmp
lods
loopne
std
add
inc
mov
inc
mov
int
fmul
cli
aad
sub
nop
mov
movsb
sbb
in
int3
test
jns
cmpsb
aam
inc
dec
lds
test
sbb
nop
mov
outsb
mov
push
mov
mov
test
pop
push
xchg
stos
mov
cmpsl
fnstcw
int
lods
xchg
xchg
cmp
scas
scas
pop
into
and
mov
fldenv
ficoms
testb
sar
mov
adc
push
and
movsb
jae
jp
xchg
movsb
mov
mov
xchg
pop
mov
inc
lods
sbb
xor
aam
add
bound
mov
repz
mov
in
mov
pushf
inc
test
push
in
lods
mov
scas
or
jle
dec
dec
mov
divl
pop
push
loope
push
imul
fdivl
fldcw
pusha
or
add
addr16
sbb
fsubrl
xchg
jmp
xchg
testl
scas
mov
pop
mov
pop
jne
rclb
mov
int
int
mov
rclb
mov
xchg
and
mov
sahf
repz
je
xor
inc
mov
shl
pop
add
fimuls
fmull
fldenv
cli
imul
push
mov
mov
adc
scas
cltd
insl
rcl
inc
fdivrl
jle
xor
sbb
out
xor
adc
push
movsb
outsl
jnp
or
in
enter
int3
mov
xchg
mov
fwait
ret
sbb
mov
jb
sbb
adc
sub
pop
cmp
jae
call
sbb
xchg
ss
push
or
fwait
in
pop
enter
jmp
ljmp
jge
repz
xor
and
jge
fcmove
mov
lds
and
ds
loopne
cmpsb
xchg
xor
cmp
lret
adc
repnz
mov
mov
out
test
push
movb
clc
fimuls
mov
mov
ss
jo
nop
dec
pushf
cmpsl
movsl
test
dec
mov
imul
inc
xchg
mov
dec
rcrb
lcall
ss
cmp
cmpsb
dec
add
arpl
pop
mov
adc
adc
mov
sub
xor
adc
cmp
popf
inc
fdiv
dec
push
inc
shl
jle
add
movsb
ss
xchg
cli
call
aam
mov
call
mov
out
fcompl
xor
flds
daa
or
incb
shrl
adc
jnp
mov
loop
sbb
out
ds
std
xchg
xchg
dec
push
fbld
fnsave
cmp
dec
mov
jle
lea
fwait
jecxz
add
mov
fiadds
lock
jecxz
out
or
mov
xchg
mov
and
fnstsw
sti
scas
je
sarb
mov
fcoms
cmp
test
sub
daa
push
in
sbb
popf
mov
push
mov
popa
or
arpl
rcll
ret
outsb
lret
xlat
jo
or
pop
jle
aad
mov
mov
sahf
add
pop
aad
inc
jmp
push
ja
and
repz
int
xchg
clc
add
mov
stc
mov
sbb
or
dec
jae
ss
pop
fcomp
or
in
jnp
mov
adc
dec
cmp
daa
test
std
mov
bnd
dec
sub
push
das
push
enter
popa
mov
pop
cmp
fdivr
shll
xchg
pop
in
xchg
xchg
adc
test
bound
mov
mov
pop
sbb
and
xor
dec
out
push
mov
sbb
test
imull
mov
repnz
xchg
jno
and
add
mov
imul
mov
lahf
mov
xchg
dec
push
and
inc
or
mov
mov
addr16
push
jmp
adc
movsb
or
fisttpl
test
mov
mov
fbstp
adc
iret
imul
je
loop
std
clc
xchg
adc
jo
sub
in
sarl
cmp
gs
in
cwtl
xor
mov
movb
cmp
pop
or
push
or
sub
roll
push
mov
sysret
fcompl
fistpll
pop
cmpsl
js
cs
cmpsb
sti
lock
inc
pop
jecxz
mov
xchg
jmp
pop
cmp
lret
ret
mov
jns
adc
pusha
iret
stc
pop
inc
jnp
mov
outsb
jnp
fbstp
mov
add
jecxz
mov
cli
mov
pop
pusha
dec
out
popa
jns
ljmp
call
cld
pop
enter
pop
push
fstpl
out
mov
jb
pop
dec
push
adc
xor
repnz
les
cmpb
fsts
lahf
insb
dec
int3
sbb
je
jnp
lods
sbb
jle
add
test
sbb
fiaddl
rcl
in
xchg
sbb
mov
pop
fwait
fs
sbb
mov
std
jl
xchg
jmp
sbb
cltd
push
pop
mov
sbb
flds
mov
add
cmpsb
mov
imul
jbe
fistl
ss
or
cld
ret
and
flds
jno
scas
mov
lahf
adc
dec
ljmp
sahf
int3
cmpsb
out
int3
ret
jno
je
aaa
test
ret
mov
pusha
rcrl
xchg
sbb
inc
jo
out
mov
add
mov
js
or
movsb
mov
mov
add
adc
and
sahf
flds
ret
fwait
mov
jp
data16
mov
shrb
aad
push
mov
jns
mov
push
lahf
rclb
xchg
pop
sbb
inc
pop
lcall
push
hlt
pop
fnstenv
cli
sbb
fsubs
ljmp
stc
enter
jmp
xor
xlat
jmp
xchg
ror
mov
fldenv
sub
jge
and
dec
dec
aam
adc
gs
popl
mov
mov
jmp
out
int3
shl
jmp
inc
pop
in
mov
xchg
scas
cmp
les
pop
mov
addl
addr16
sbb
mov
pop
jne
ljmp
mov
ja
and
xor
mov
pop
icebp
mov
inc
fyl2xp1
in
loopne
and
rolb
movsl
pop
dec
ljmp
mov
mov
loop
fadds
sub
dec
popa
dec
sbb
fwait
mov
mov
jle
mov
aaa
dec
je
movsl
out
test
lahf
mov
test
insb
cmpsl
xchg
or
test
stos
add
cltd
int3
das
push
neg
pop
adc
imul
cmp
xchg
pop
cmp
mov
cmp
into
xor
push
mov
int
jge
adc
out
cltd
pop
mov
fisttps
jl
sub
dec
adc
std
and
aad
jnp
stos
aaa
into
inc
mov
fldl2e
repnz
inc
mov
and
xchg
stc
stos
jnp
out
add
xor
out
xor
adc
add
adc
push
negb
mov
sub
inc
jp
das
pop
mov
stos
mov
mov
and
mov
xor
call
inc
imul
dec
mov
pop
pop
or
cltd
xor
cmp
or
ret
test
repz
sbb
inc
mov
cmc
mov
pop
enter
fbstp
cmc
xchg
xor
jno
cmp
test
push
mov
outsl
xlat
jl
ja
xchg
or
or
mov
and
mov
std
movsb
call
adc
aad
mov
mov
divl
andl
dec
test
cmp
mov
pop
in
and
sbb
jge
inc
fidivl
pop
std
mov
pop
mov
stc
popa
lcall
rcll
dec
sub
cmp
ss
repz
xchg
daa
movsb
cli
mov
in
mov
arpl
sbb
xor
scas
jo
xchg
ljmp
xor
xor
ficoms
movsb
mov
pop
jb
mov
ficoms
mov
ret
push
mov
push
repz
hlt
pop
scas
fnstenv
fists
mov
sub
and
mov
or
rorl
mov
mov
fdivp
mov
lcall
fdivrl
adc
cmp
insb
dec
inc
pop
sti
lret
inc
int
jnp
xchg
push
mov
dec
inc
scas
call
sub
lret
mov
in
sahf
jmp
mov
fbstp
add
cli
dec
xchg
xchg
inc
inc
out
sti
cmp
aas
mov
lods
mov
push
and
sbb
xchg
xorl
in
hlt
rorb
popa
clc
daa
or
ds
out
test
scas
push
in
and
add
popa
jmp
jmp
cld
dec
pop
test
mov
sbb
pop
lea
cltd
mov
frndint
or
rcr
dec
mov
add
add
out
inc
ja
and
xor
test
mov
cmc
inc
outsl
mov
add
pop
jp
jo
gs
ja
jp
mov
jne
push
adc
and
imul
dec
sub
divl
xor
cmp
inc
inc
rcll
out
in
or
pop
pop
out
shll
xchg
sbb
xlat
imul
mov
subl
addr16
shrl
xchg
sub
enter
arpl
add
cmc
aad
out
xor
out
mov
bound
inc
stos
pop
gs
lcall
popf
daa
ficomps
and
rep
jle
sub
inc
xchg
fwait
pusha
jb
scas
pop
pop
pop
mov
mov
pop
out
push
add
test
out
sub
mov
cs
mov
lock
fwait
and
inc
stos
inc
test
adc
inc
mov
adc
jnp
jne
dec
js
lret
push
pop
sub
lcall
testb
sbb
daa
cli
and
sbb
js
xor
les
xlat
lds
in
xor
out
sbb
scas
popf
lods
mov
fsubrl
shll
fndisi(8087
mov
mov
or
negb
sub
cli
add
mov
jnp
dec
imul
jmp
leave
lret
jnp
ss
lahf
xchg
popf
sbb
jbe
repnz
mov
shl
push
pop
adc
repnz
sbb
or
inc
xor
leave
mov
aas
out
sbb
jecxz
stc
out
shll
jl
lods
jmp
sbb
test
adc
int3
sub
out
inc
cmpsb
or
sub
hlt
mov
dec
data16
out
ss
lcall
xchg
xchg
mov
xchg
mov
xor
out
into
ss
sub
call
sbb
xorb
or
fwait
pushf
cmpsb
jne
push
ret
adc
jae
mov
push
inc
jb
jnp
movsb
pop
test
push
data16
lds
xor
fidivl
xchg
int3
sbb
test
es
jle
jnp
sti
inc
xchg
sub
sbb
mov
sub
cmp
rorl
inc
and
mov
in
cmpsl
xor
adc
scas
jmp
xchg
adc
je
adc
lahf
call
mov
fsincos
fwait
push
sub
mov
xchg
xlat
xor
jnp
add
push
xchg
inc
push
or
xor
aaa
push
movsb
inc
mov
mov
add
aad
lahf
loop
mov
push
mov
mov
stc
mov
fistpl
xchg
gs
movsb
fxch
sub
mov
orl
mov
add
jmp
add
jnp
inc
mov
or
filds
or
repz
rorb
test
push
andb
jno
pop
inc
mov
mov
das
stos
test
rol
jae
push
mov
inc
pop
xchg
rcr
inc
mov
rcrb
fcomi
mov
jle
jge
lods
sbb
call
cmp
int3
sub
and
repz
cmp
jne
sbb
inc
lret
shr
popf
in
dec
aad
pop
jne
push
mov
popf
stc
sbb
ret
lcall
jge
mov
jne
stos
out
inc
loop
inc
fidivrs
scas
sbb
push
out
mov
xor
jp
or
andb
jbe
pop
fldl2e
rorl
mov
or
mov
adc
cmp
cmp
mov
inc
xor
icebp
ds
movsl
push
pop
mov
jno
xchg
arpl
lret
add
push
int3
sbb
ds
or
and
gs
sbb
data16
sbb
mov
mov
and
scas
push
insl
jmp
push
pop
adc
rcl
cmpsb
add
es
repz
cmp
sbb
ljmp
jbe
pop
insl
fcom
scas
push
xchg
mov
pop
ret
mov
jae
scas
subb
sub
stos
cs
xor
ficomps
xor
dec
cmpsb
push
popf
pop
cmc
pop
cli
dec
xor
mov
cmp
flds
scas
push
lods
fdivrs
mull
fwait
loop
sub
cmp
adcl
mov
out
stc
daa
jge
xchg
jns
sub
in
leave
sti
xlat
addr16
mov
sbb
jl
fldenv
xlat
xchg
lds
cmpsl
mov
lret
lods
imulb
popa
shll
or
mov
pop
or
call
stos
xchg
and
cmp
in
push
mov
xchg
push
mov
jle
jno
cmp
add
dec
or
mov
scas
loope
xchg
or
adc
sub
and
outsb
adc
das
cmp
aam
xor
dec
mov
xchg
mov
pop
push
mov
xor
inc
adc
adc
jmp
sbb
fnstsw
mov
dec
dec
movsl
fldcw
lock
ss
mov
cli
push
aas
push
int3
faddl
push
inc
icebp
fsubl
mov
movsb
fxch
xchg
pop
sti
mov
das
xchg
aaa
subl
cli
repnz
xor
xchg
push
insb
sti
lods
xchg
out
pop
xchg
inc
push
mov
xlat
lods
iret
adc
cmp
mov
lcall
cmp
out
xchg
xchg
es
mov
or
cs
add
repz
jnp
push
pop
out
ss
mov
das
jge
jl
adc
scas
shr
in
lret
sbb
rolb
movsl
sub
inc
adc
cmpsb
dec
jl
fldenv
jnp
lret
push
pop
ja
addb
lods
and
xchg
fmull
ja
test
pop
lcall
sbbb
sbb
mov
dec
scas
call
jb
and
insb
jnp
mov
add
push
pop
mov
aaa
icebp
or
int
popf
mov
fldenv
pop
in
mov
inc
sbb
cmc
popa
inc
pop
mov
into
nop
or
mov
xchg
xchg
pop
test
mov
dec
fsub
test
sub
or
popa
xor
mov
xor
fdivrs
or
faddp
das
dec
lcall
in
jge
sub
out
xor
fdivrl
jnp
ss
sub
sbb
sahf
push
mov
cmp
xor
mov
jl
push
lds
sbb
jl
loope
fcomi
xchg
mov
mov
fisubrs
int3
mov
out
fisttpl
push
rorl
xchg
jmp
loopne
in
outsl
cmpsb
add
jle
mov
cwtl
dec
sbb
push
adc
mov
dec
in
les
lea
orl
mov
test
pop
std
sbb
pop
sub
xor
mov
insb
std
mov
pop
xchg
adcb
cli
decl
cmp
jle
fldcw
popf
cmp
jbe
push
dec
pop
mov
mov
std
mov
xor
icebp
pop
pop
fldenv
mov
jbe
lds
cmp
sbb
jnp
pop
push
clc
adc
rcrb
in
in
inc
pop
dec
loop
inc
out
cmp
pop
dec
fldl2e
out
mov
dec
in
lcall
mov
sbb
mov
xchg
xchg
shl
adc
aam
outsl
mov
push
cmp
dec
std
adc
mov
inc
cltd
jp
jmp
jbe
or
inc
and
sbb
sahf
lods
jg
fidivs
mov
int3
fsubrl
push
fidivs
jae
sti
dec
fsubr
jno
ss
aad
out
add
int3
fwait
movsb
fcoml
xchg
scas
ja
pop
mov
fs
dec
scas
xor
sti
das
cmpsb
push
daa
test
push
inc
hlt
push
cltd
aad
cmp
loopne
movsb
fnstenv
lods
popf
cmpsl
mov
xchg
hlt
and
pusha
xchg
mov
mov
scas
mov
popa
xchg
scas
loope
mov
jno
ret
scas
mov
insb
int
adc
dec
sbb
cltd
sbb
pop
mov
mov
sub
xor
and
mov
scas
test
stos
enter
xorl
aam
mov
test
xchg
gs
mov
cmp
in
xchg
ljmp
xorl
dec
in
arpl
fmuls
lret
ljmp
cmp
iret
addr16
lods
sbbl
sbbb
sarl
leave
xchg
loop
inc
arpl
adc
or
repnz
mul
xchg
jg
jp
push
xor
add
mov
sub
pop
and
mov
call
es
incb
jecxz
pop
jae
out
fadds
sbb
mov
mov
enter
dec
cli
mov
or
scas
sbb
mov
dec
add
mov
sub
sahf
and
fwait
mov
daa
test
xchg
push
xchg
jns
out
push
sahf
sub
cmp
movsb
sahf
dec
xchg
inc
inc
mov
push
mov
stos
aaa
sbb
stos
push
fsubrs
outsb
or
popa
fucom
int3
jb
sbbb
and
adc
imul
fnstenv
adc
dec
call
sbb
repz
sahf
mov
scas
cmp
repz
mov
inc
std
fldenv
push
add
inc
dec
sub
xchg
xlat
pop
imul
call
cld
int
sbb
lods
xchg
in
xchg
xlat
add
mov
mov
test
adcl
pop
xchg
cmc
jnp
add
mov
popa
push
xor
inc
dec
mov
mov
dec
outsl
xchg
mov
xor
cmp
mov
lahf
jnp
push
mov
scas
xor
pop
mov
lock
fsqrt
sbb
pop
imul
or
and
hlt
pop
scas
jnp
xchg
push
sub
call
jmp
push
dec
xlat
fistl
push
call
int
push
mov
dec
rcrl
aas
lds
mov
sub
mov
dec
inc
sbb
imul
jg
jae
add
sbb
add
xor
and
push
test
xor
jge
jp
mov
aam
clc
inc
aas
test
lods
sbb
cmp
jp
mov
scas
cmpsl
dec
jnp
out
lret
stc
lods
xchg
dec
fsubr
mov
sub
pop
stc
cmp
add
push
inc
out
call
cs
sti
ret
push
aam
pop
sub
adc
mov
rolb
mov
jge
cmp
lret
lods
jecxz
or
cld
loopne
sub
in
ffreep
popf
mov
jo
cs
inc
and
subl
mov
adc
notb
inc
sbb
cs
cmp
mov
ficoms
std
sbb
shlb
sbb
dec
cmp
cltd
pushf
sbb
test
dec
xor
jno
fcoms
idivb
push
adc
push
jg
sti
sbb
out
or
or
outsb
sbb
mov
mov
mov
mov
mov
jge
inc
inc
mov
sbb
xchg
mov
adc
test
xchg
movsl
jne
fsts
flds
xor
xchg
inc
cld
sti
adc
fcomi
cmc
jp
inc
cmpsb
pushf
imul
in
cmp
mov
mov
dec
mov
insb
sahf
bound
scas
test
scas
or
sti
inc
jne
insl
sbb
andb
imul
cwtl
outsb
mov
jae
adc
pop
fnstcw
sbb
mov
sbb
sub
xor
or
mov
loop
pop
in
mov
xchg
dec
pusha
popa
sub
push
aas
or
std
test
inc
inc
popf
add
je
fldenv
cmpsb
xor
sahf
mov
lahf
sbb
xchg
pop
sbb
mov
jno
int
lret
pop
jecxz
jge
adc
sub
pop
sbb
les
push
lret
or
mov
xchg
adc
sbb
enter
fsts
adc
imul
shl
out
ss
jno
insb
sbb
aad
push
fldcw
cmc
rorl
aam
int
jl,pn
shrb
popa
cmp
outsl
out
adc
and
inc
sbb
data16
mov
cmpsl
xchg
jae
imul
sbb
xor
add
add
xorl
xor
repnz
dec
aam
xchg
mov
push
jnp
fadds
jae
outsl
cmp
jne
fsts
adc
pusha
faddp
xchg
shrl
push
fisttps
test
cmp
arpl
shlb
or
dec
in
out
sub
arpl
in
das
rep
mov
fwait
std
push
leave
pop
dec
cmpl
mov
dec
cli
jno
sub
xchg
push
ret
inc
mov
jg
mov
xchg
sbb
repz
data16
mov
jge
pop
leave
xor
stc
mov
lcall
mov
cmpsb
mov
xchg
pop
int3
imul
add
mov
or
inc
jl
mov
in
mov
clc
daa
mov
shl
jnp
in
fdivl
dec
aaa
fsubrl
pop
cmpl
sub
sbb
or
inc
mov
mov
iret
dec
dec
pop
arpl
mov
sub
or
js
pop
xlat
sbb
and
sbb
out
xor
inc
lret
xor
flds
dec
cmp
mov
mov
xchg
pop
cs
jge
push
jle
inc
inc
mov
push
mov
in
inc
imul
stc
inc
and
pop
aam
hlt
sbb
in
fstps
pop
notb
out
int
add
fucomi
and
dec
repnz
dec
xchg
mov
out
mov
jmp
mov
mov
leave
daa
addb
lret
call
enter
inc
int
je
mov
jg
cld
test
cmpl
lea
lahf
mov
xchg
inc
les
jne
fs
stc
dec
mov
nop
fsubp
add
rcrb
mov
jae
and
jbe
sub
cmp
cmp
jle
in
and
test
nop
add
in
xor
pop
jb
aas
mov
gs
arpl
ds
repnz
sbb
dec
sbbl
inc
stc
sarl
out
xor
add
pushf
pop
xchg
test
xchg
div
lahf
movsb
fs
inc
roll
inc
lret
cmpsl
dec
adc
dec
mov
cli
test
loopne
jecxz
cmp
notb
ja
out
dec
cmc
es
cs
xor
lcall
push
ss
add
popf
xchg
jg
cmp
fbstp
scas
test
cmp
push
push
fstpt
das
mov
pop
ja
enter
sub
dec
mov
pop
sbb
enter
mov
scas
adc
gs
arpl
add
dec
pop
cmp
test
jae
add
mov
aaa
fwait
clc
arpl
pop
in
push
push
mov
pop
and
repnz
outsb
push
in
xchg
ljmp
clc
ja
fistl
loope
pop
imul
cmc
ss
popa
inc
cmpsb
pop
xlat
les
sub
lods
movsb
loopne
repz
scas
iret
mov
cmp
xchg
aam
loopne
movsb
push
mov
outsb
sahf
jge
stos
xchg
sbb
xchg
jns
jecxz
outsl
or
icebp
arpl
dec
push
pop
aad
xor
shrd
popf
adc
pop
inc
xor
dec
mov
cltd
mov
mov
mul
nop
or
fsub
lods
movsl
lahf
popa
cld
mov
dec
or
sbb
test
xchg
out
sbb
mov
outsb
scas
jnp
sub
sub
mov
fwait
xorb
sub
test
insb
cmp
push
stos
mov
dec
mov
test
xor
in
les
fcomps
loop
mov
insl
mov
push
dec
sbb
cwtl
xor
pop
jns
es
fsubrl
cs
rcl
xchg
pop
mov
jns
outsb
nop
out
in
xor
arpl
dec
jnp
add
js
loop
pop
push
ficomps
divb
fwait
mov
jle
cmp
dec
xor
or
mov
xor
das
jno
in
out
mov
sub
les
xor
mov
cld
sahf
dec
ss
pop
dec
push
in
insb
gs
adcl
inc
cmpsb
test
fcompp
imul
mov
lods
loopne
lds
jl
lds
push
pop
pop
stc
mov
jmp
js
jge
js
popa
and
clc
out
out
aam
sub
fdivr
mov
bnd
sbb
jnp
cmp
dec
fildll
jno
xchg
push
jle
div
push
mov
add
dec
mov
js
xchg
dec
push
ret
sub
push
nop
ss
shl
lds
mov
lahf
xchg
push
pop
movsl
aam
pushf
rcl
xchg
es
cli
inc
xor
insl
fstpt
push
push
imul
jge
fs
in
and
fdivrs
hlt
sub
and
stc
dec
jmp
fsubrl
mov
push
cmpsl
lock
cli
fnstsw
aaa
notb
jle
cmp
ret
jp
cli
mov
fcompl
xchg
ffree
movsb
fcmovnu
ds
inc
out
int3
mov
and
clc
xchg
sti
add
arpl
mov
outsb
pop
mov
in
dec
push
fnstenv
push
cwtl
sbb
mov
fstps
adc
sbb
cmpsb
ljmp
xchg
adc
xchg
mov
in
jp
fisttps
sub
stos
sub
adc
mov
pop
out
das
xchg
ret
mov
shlb
lock
jae
push
inc
fstps
and
mov
or
lock
add
jns,pn
adc
int3
cwtl
jae
xchg
imul
out
inc
cmp
in
in
aad
xchg
push
push
mov
bnd
ja
push
mov
add
and
scas
and
inc
xchg
out
es
mov
inc
adc
mov
mov
xor
scas
repz
sti
mov
cmp
mov
scas
in
lods
mov
xor
cmp
dec
sti
sti
sbb
data16
fcoms
das
pushf
adc
dec
xchg
addr16
jmp
sbb
subb
pushf
ljmp
push
xor
sti
jl
testl
imul
or
lods
enter
popa
cmp
xchg
loopne
inc
test
in
push
out
fnsave
scas
mov
sbb
sbb
jae
leave
dec
mov
pushf
test
jne
shrb
dec
adc
pop
cmp
imul
ljmp
les
dec
push
jae
cltd
aad
sbb
addr16
jae
or
iret
xorb
dec
mov
push
push
or
pop
stc
or
nop
cmp
inc
ror
bound
push
xchg
dec
sub
pushf
xchg
xorb
loop
mov
test
scas
cltd
mov
mull
mov
push
fidivs
data16
fnstcw
cmpsb
bound
mov
push
mov
pusha
jle
in
shrl
pop
fistps
lahf
add
push
fldl
jns
fildll
jl
or
cmp
mov
push
lret
inc
fildl
mov
ret
dec
mov
jle
repnz
andb
test
fldcw
dec
pushf
pop
mov
stc
dec
fwait
push
sbb
push
and
pop
pop
and
pop
jecxz
out
mov
inc
in
insb
jne
jnp
mov
jl
inc
fldcw
sarl
mov
scas
push
mov
cltd
loopne
sub
mov
mov
shl
insb
push
cmpsl
stc
push
xor
mov
rorb
xchg
inc
push
cmp
dec
add
mov
mov
sbb
in
cmc
adc
fnstenv
movsl
cs
negb
mov
outsb
dec
xor
gs
stos
lret
push
stos
jo
jo
inc
push
repnz
stc
js
cs
sub
cmp
jge
mov
mov
test
mov
cmp
aad
sub
lods
repz
outsb
clc
jns
rcrl
dec
repnz
in
cmc
lret
imulb
push
shll
xor
xlat
sub
addr16
sub
push
vlddqu
mov
sbb
das
ss
jge
push
and
push
fwait
scas
stos
jne
les
inc
adc
ss
mov
mov
inc
mov
and
mov
sahf
adc
cmp
das
cli
push
mov
mulb
fdivrp
lods
movsb
jb
test
aaa
dec
data16
scas
les
and
shr
cmc
popf
mov
jns
push
dec
hlt
mov
dec
push
mov
dec
or
popl
shl
fstps
cmpl
sbb
sbb
adc
rclb
das
jb
fdivp
sub
in
mov
and
scas
pop
mov
xchg
mov
mov
sub
cmp
fdivl
mov
sub
insb
cltd
inc
mul
push
cmp
pushl
enter
or
adc
pop
in
mov
pop
ja
mov
gs
inc
inc
mov
loop
fmull
add
popf
pop
push
std
and
add
cli
push
sub
add
sub
test
les
inc
mov
mov
mov
out
jl
arpl
jns
imul
rcrl
out
ja
mov
pop
mov
or
jg
jl
cmp
push
std
add
clc
fwait
sbb
rep
sar
ljmp
fidivs
xchg
cmc
addr16
add
addr16
js
ror
xor
mov
dec
mov
pop
push
inc
je
xchg
xor
mov
push
mov
jb
mov
mov
mov
adc
inc
xor
xor
cmp
sbb
fcoms
cmc
shrl
sub
mov
sub
sub
orb
and
mov
sarb
add
call
jo
xchg
mov
cmp
gs
daa
pop
and
enter
push
fildll
xor
cmp
pop
inc
scas
jmp
enter
jbe
jmp
inc
mov
push
inc
mov
pop
inc
outsl
push
jno
or
and
push
sbb
xlat
adc
dec
mov
iret
shl
jns
mov
fcompp
or
mov
movsb
lock
movsb
pop
xchg
sbb
sub
or
ja
leave
dec
fimull
xchg
xchg
test
repz
pop
jle
inc
dec
js
sbb
pushf
out
ljmp
or
mov
jl
out
cmp
flds
cmp
xchg
ficomps
cld
push
and
pusha
nop
loopne
inc
lret
sti
push
fwait
rcrl
jb
xchg
jg
sub
mov
fcmovbe
pop
jbe
aad
mov
adc
daa
xor
ljmp
push
scas
std
movsl
loop
mov
dec
adc
inc
push
popa
xchg
mov
scas
add
lret
lock
mov
dec
js
add
mov
scas
cmc
jnp
add
xor
test
and
adc
inc
cmp
pop
int3
add
ret
dec
push
mov
mov
loopne
push
adc
xor
js
sbb
xlat
jge
sbbb
shll
push
and
dec
sub
and
add
sbb
shrb
mov
inc
mov
int
lds
push
test
out
jns
mov
mov
cwtl
movsl
mov
pop
out
sti
pop
arpl
jmp
jp
enter
subl
dec
jae
push
imul
imul
mov
pop
cltd
pop
sbb
mov
movsb
mov
xchg
loope
adc
into
sahf
jae
int3
xlat
flds
mov
or
test
and
jmp
sub
jbe
push
lcall
movhps
repz
cli
dec
std
sub
ja
cmp
mov
pop
mov
push
out
loopne
pop
jb
jbe
stos
lea
pusha
loope
inc
adc
xchg
fidivrs
cwtl
xchg
xor
test
xchg
flds
push
jnp
pop
enter
jb
inc
xor
scas
pop
pop
mov
mul
sti
mov
movsb
repz
test
mov
sbb
and
lds
popa
ja
jle
adc
dec
mov
xchg
test
mov
int3
xchg
pop
jecxz,pn
mov
ljmp
cmc
sti
cmp
cwtl
xor
outsb
xor
inc
lods
sub
repz
int
push
cmp
aam
and
dec
test
test
xchg
or
pop
adc
cmpsb
adc
xchg
jbe
jmp
aaa
or
mov
test
jecxz
mov
mov
xchg
jb
xchg
xor
lds
mov
scas
push
dec
mov
imul
leave
mov
vshufps
push
test
add
push
lcall
dec
scas
dec
lods
pop
sub
and
fldt
mov
add
xor
lahf
ljmp
dec
pop
add
dec
sbb
jle
scas
jl
lods
fmull
fstpl
imul
dec
xchg
sub
out
or
mov
aam
repz
out
jl
xchg
pop
scas
pushf
insb
mov
push
xor
outsb
mov
test
pop
adc
mov
xchg
pop
fists
pusha
jo
sbb
adc
cmpsl
repnz
test
leave
push
mov
pop
or
int
cs
and
push
and
push
xchg
sbb
jae
iret
mov
xor
mov
inc
and
test
mov
mov
jo
or
adc
addr16
call
push
cmpsl
sub
addr16
addl
sarl
mov
out
repz
add
lea
push
ficomps
std
jnp
fcmovne
outsl
xchg
out
test
xchg
gs
loopne
push
jmp
push
mov
lds
pop
repz
ret
mov
adc
lods
lcall
xor
sub
push
ljmp
push
mov
negl
push
push
cmp
aam
jae
mov
mov
loopne
xchg
lods
jne
mov
dec
mov
xchg
fadds
sub
in
addr16
cmp
scas
jns
enter
inc
push
mov
adc
jno
mov
inc
push
movsb
fisubrs
sbbb
lret
mov
lods
pop
dec
outsl
lahf
adc
or
jns
popf
pop
fcompl
test
xchg
inc
jle
mov
aam
add
ja
jecxz
mov
dec
cmp
inc
push
adc
fucomp
cs
xlat
out
negb
push
pop
in
xchg
addr16
dec
pushf
adc
inc
jae
pop
mov
pushf
test
icebp
xor
aad
mov
xlat
insl
and
aaa
fdivl
nop
movsl
pusha
mov
ficoms
cmc
sahf
addr16
test
and
jg
dec
js
movsl
sbb
jle
scas
mov
outsl
pop
jbe
pcmpeqb
mov
cmp
mov
fstps
mov
ret
movsb
inc
test
cmp
repz
xor
pop
cmp
jo
sbb
jnp
popa
dec
icebp
lret
inc
sbb
jecxz
mov
adc
adc
dec
cmpsb
mov
mov
outsb
or
repnz
hlt
test
or
and
xor
hlt
push
aam
daa
xorl
icebp
data16
lcall
or
loopne
leave
mov
int3
popf
and
adc
mov
ja
fcomip
lcall
ficoms
dec
je
jnp
sbb
cs
pop
loope
lds
out
cmp
mov
mov
pop
mov
pop
mov
xchg
pop
into
and
mov
sbb
fwait
add
dec
sti
jmp
xor
cmpsb
sbb
push
mov
call
ficoms
popf
in
or
int
and
or
adc
hlt
xor
pop
outsb
cwtl
xor
adc
movsl
repnz
push
mov
pop
mov
mov
ficompl
sti
dec
andb
shll
and
mov
lods
cmc
daa
xchg
ret
push
repz
sbb
outsb
int3
mov
loopne
fiadds
loope
fwait
ljmp
jno
insb
addl
mov
out
adc
mov
push
gs
sarl
jmp
cmc
and
jg
mov
mov
push
push
cmpps
add
ja
addr16
mov
movsb
out
sbb
xchg
faddl
repnz
cmp
xorl
jae
xchg
insb
int
cmp
pop
test
pop
adc
test
popa
gs
lods
lcall
fsub
jb
pop
push
push
or
or
add
mov
sbb
or
xchg
jg
fs
mov
xlat
fdivl
mov
jnp
or
and
jns
and
and
out
cmc
loope
mov
cs
add
out
fiaddl
push
inc
mov
std
pop
sbb
mov
in
add
and
or
or
cmp
scas
xchg
test
pop
xchg
fistl
mov
jecxz
pop
mov
push
scas
mov
mov
jae
fsubr
stos
xchg
or
mov
push
gs
mov
scas
mov
aad
test
dec
mov
cmp
in
add
and
jb
xchg
cwtl
mov
sbb
and
mov
addr16
jnp
inc
into
leave
fmul
jl
rcl
movsl
mov
mov
sub
push
mov
notl
adc
jecxz
dec
sbb
int
cs
cmp
mov
addr16
je
fyl2x
repnz
pop
jle
sub
sbb
push
jecxz
inc
mov
mov
fnstenv
xchg
xchg
testb
push
adc
sub
jns
movsb
push
and
inc
sub
clc
test
xlat
iret
cmpl
jge
scas
je
sahf
mov
add
outsb
std
aaa
inc
and
movsb
push
inc
in
cli
stos
hlt
xchg
hlt
mov
mov
inc
popf
aas
adc
cmp
dec
mov
xchg
jl
loope
sbbb
sbb
xchg
test
fdivr
jb
outsl
xchg
ret
mov
fsubrp
or
cs
test
mov
data16
cld
mov
xlat
int3
sbb
or
loope
xor
sbb
movsl
pusha
std
dec
out
push
loope
lods
dec
rcrl
cld
mov
aam
mov
insb
les
out
fisubl
adc
in
sub
xorl
iret
lahf
sub
aam
mov
sarl
add
lock
mov
or
dec
outsl
ljmp
shr
movsl
jno
sbb
mov
sbb
popa
das
aam
out
lcall
fsubl
xchg
mov
ret
mov
and
in
shlb
mov
sub
arpl
outsb
cmp
pop
adc
addr16
push
fsubrl
movsb
and
xor
sbb
mov
stc
int
enter
or
push
pop
mov
add
xchg
mov
and
dec
jg
cmp
sub
sub
testb
std
inc
jl
outsb
add
inc
mov
pop
mov
aad
mov
cltd
xor
sbb
hlt
adc
sub
in
cs
lods
sbb
xor
mov
ljmp
movsb
ret
fnop
out
outsb
loopne
mov
mov
popf
add
mov
push
fldz
icebp
test
xchg
pushf
test
mov
sarb
fxch
dec
and
mov
jle
adc
and
mov
test
daa
outsb
cmp
cmp
aas
or
pusha
xchg
dec
pop
mov
stos
jae
cmp
das
add
fwait
addr16
fsub
sub
cmpsb
test
xchg
sbb
inc
adc
test
sub
mov
fldcw
sub
pop
and
out
jbe
xor
int3
mov
dec
sub
lods
cltd
mov
push
mov
flds
std
push
push
test
cmc
cmc
jg
rcr
xchg
bound
ja
cltd
mov
jecxz
xchg
sub
pop
sbb
cld
mov
cmpsb
pop
mov
xor
dec
mov
gs
in
mov
inc
sub
or
jecxz
or
or
push
jecxz
sbb
in
add
adcb
sbb
xor
sbb
xchg
sarl
mov
sarl
jbe
out
and
mov
fdivrl
push
pushl
pop
mov
pop
pop
outsb
add
popf
jo
fsin
pop
and
aam
sahf
push
cld
fwait
popf
test
inc
push
lahf
xchg
dec
push
pushf
jno,pn
stos
loope
bnd
in
xor
rcrl
or
dec
out
adc
out
adc
inc
call
dec
push
in
adcb
pop
out
stos
xchg
sub
and
push
push
std
dec
aam
mov
mov
hlt
pop
push
pop
mov
mov
and
mov
fstpt
mov
sbb
les
jnp
pop
jecxz
jge
aaa
xor
jp
cmp
inc
sbb
push
ja
sbb
test
insl
fdecstp
sbb
xor
in
mov
test
adc
mov
cmp
lods
pop
xchg
pop
mov
shll
lea
mov
pop
mov
mov
in
add
push
mov
repnz
mov
xchg
xor
subl
adc
mov
popa
roll
jo
jl
lcall
mov
lret
pop
gs
mov
dec
jp
lds
sub
cli
push
ds
std
fcmovbe
pop
aaa
lock
jbe
nop
jle
dec
data16
faddl
fxch
in
cmp
dec
cmpsl
xchg
lds
aaa
lock
mov
mov
imul
inc
movzbl
pop
test
js
sbb
cmpsb
ja
add
test
lock
pop
lahf
pop
test
std
sub
sub
sti
arpl
inc
jo
and
push
dec
adc
fsubp
jnp
inc
test
sbb
xchg
mov
outsb
sub
cmp
adc
cltd
push
fcmovbe
popa
or
jno
and
test
mov
mov
cmp
in
std
mov
sub
fstpt
addr16
stos
push
scas
mov
std
pusha
insb
mov
sbb
and
mov
scas
flds
inc
pop
call
pushf
adc
stc
insb
push
mov
cmpsb
push
dec
mov
or
jmp
stos
sub
adc
cltd
mov
inc
mov
mov
cmp
mov
repz
adc
pop
out
pop
adc
jne
rep
xchg
in
rcl
ja
pop
jecxz
out
jb
mov
xor
scas
mov
and
pushf
test
fnstcw
mov
pusha
repnz
sub
sub
inc
ljmp
mov
or
push
jbe
in
dec
stos
push
mov
daa
jb
pop
dec
inc
loope
dec
fisubs
jb
fidivl
movsb
popa
mov
push
rorb
mov
in
or
loop
dec
mov
sub
dec
fistpl
insb
xchg
ljmp
push
lods
daa
fildl
and
jp
add
lahf
mov
test
push
ds
jmp
and
adc
xchg
or
aaa
jle
daa
fsts
adc
and
inc
scas
pop
outsl
mov
sub
and
lret
mov
popf
inc
les
push
sub
xor
test
lcall
in
lds
push
add
fs
fstl
mov
out
push
push
stc
jne
lahf
scas
fdivrs
ret
jle
xchg
push
enter
icebp
pop
inc
inc
ret
mov
std
mov
pop
sbb
cmpsb
cltd
pop
imull
fdivrl
inc
add
mov
jnp
inc
test
js
inc
rclb
dec
cld
mov
dec
jg
test
cmp
sbb
aaa
not
ret
cmp
mov
adc
das
jae
cmp
pop
sub
jno
enter
adc
xor
jge
imul
ret
push
jmp
int3
sbb
mov
and
push
lods
cs
and
add
push
icebp
xor
jmp
movsb
addr16
fidivrs
adc
imul
ret
mov
mov
clc
mov
sbb
flds
dec
mov
sbb
lcall
mov
cli
dec
push
sti
dec
scas
icebp
nop
orb
hlt
xor
dec
out
inc
pusha
xor
adcl
inc
mov
scas
shl
mov
out
push
mov
push
ret
cwtl
fdivrp
or
pop
push
mov
push
popa
cmp
cmove
in
jnp
shrb
inc
ds
out
popl
aaa
and
scas
inc
addl
les
push
test
arpl
pop
fnstcw
mov
int3
insb
and
enter
jl
sbb
pusha
adc
mov
mov
jmp
dec
mov
mov
dec
mov
add
xor
jmp
mov
mov
cmp
out
lods
xor
aas
cmp
scas
mov
out
xor
cs
jne
cmpsb
leave
pop
mov
jnp
mov
cmp
xchg
mov
cmp
xor
loop
sbb
stc
mov
lock
jp
inc
jb
adc
mov
test
cmp
push
inc
in
lcall
push
std
insl
and
pop
jae
pop
aas
mov
sub
out
sub
mov
or
test
in
and
jb
jbe
aad
cmpsb
mov
xor
jbe
lcall
xchg
jne
lods
cmp
movsb
in
and
cmpsb
adc
mov
popf
test
mov
sbb
mov
mov
imul
lds
inc
xchg
ss
add
test
cs
popf
adc
inc
mov
ljmp
sbb
pop
jno
ret
lods
je
jecxz
pop
jae
int3
in
cltd
jle
jmp
mov
jge
lds
xchg
push
dec
cmp
mov
in
outsb
cli
and
jb
mov
push
cltd
insb
sub
cli
pop
in
sub
in
int
jno
ja
aaa
insl
adcl
and
adc
cmpsl
and
pop
xchg
pop
cwtl
and
xor
and
scas
inc
and
add
icebp
and
and
pop
fdivrs
cmp
iret
inc
jne
lock
sbb
jbe
outsb
and
inc
adc
jo
xor
test
inc
push
pop
dec
push
les
in
lds
xchg
or
cli
jnp
mov
fsubl
dec
movsb
cltd
adc
insb
push
test
stc
in
movsb
jmp
jae
xor
xchg
dec
adc
roll
xor
sub
std
mov
test
rorl
cmp
mov
and
cli
stos
fimuls
push
enter
dec
mov
rep
sbb
aam
lods
sub
mov
scas
cwtl
pop
mov
stc
adc
inc
sbb
leave
bound
jno
lds
repz
adc
xchg
mov
iret
add
aam
cli
jmp
fistpl
andb
mov
lods
dec
or
and
xchg
mov
test
outsb
cltd
push
call
repnz
flds
cmp
in
push
push
or
out
jp
cmpl
aaa
or
jmp
ficompl
add
outsb
stc
clc
les
movsl
popf
jg
sbbl
and
flds
cli
inc
arpl
outsb
cmp
dec
sbb
pop
push
in
xchg
and
lret
fsubl
sub
inc
movsl
subl
adc
mov
inc
verw
or
std
mov
out
enter
xchg
fiadds
push
loope
jp
xchg
sub
cmp
stos
aaa
fcompp
icebp
je
jbe
jo
test
pop
scas
dec
lret
or
es
imul
fcomp
outsl
fisubl
add
xlat
popa
dec
cmp
add
out
test
inc
fidivl
cmp
and
jnp
mov
and
push
mov
inc
lds
out
mov
scas
adc
xchg
dec
mov
das
mov
dec
mov
out
aad
add
outsb
dec
mov
stc
mov
cmp
inc
addr16
test
fnstenv
lcall
call
xchg
sahf
sub
mov
test
xchg
lret
incl
out
popf
pop
lret
pop
jecxz
in
sub
and
pop
jno
ss
out
cmp
push
mov
mov
xchg
fdivs
fnstcw
sahf
mov
lret
aad
out
xchg
jle
mov
push
and
cmp
xchg
add
test
jnp
sub
lock
bound
popf
pop
mov
jp
xchg
mov
cs
mov
in
mov
or
loope
js
inc
aad
inc
mov
jle
lods
adc
cs
lods
xchg
sbb
enter
add
loop
pop
aas
xor
sub
fwait
lcall
xchg
inc
aaa
fwait
xorl
jg
js
push
leave
scas
dec
lds
loop
inc
adc
sbbb
inc
cmpsl
test
arpl
mov
repz
data16
fsubrp
sbb
fs
inc
pop
out
addr16
test
xchg
jb
push
inc
mov
jb
push
pop
dec
stos
imul
sbb
iret
xchg
popa
xchg
call
dec
fmull
call
xchg
divl
das
sbb
add
aas
in
push
jecxz
call
xlat
stos
cmp
jmp
cmp
shrb
dec
push
push
xchg
jnp
fldenv
andb
ss
mov
ret
pop
pop
cmc
or
sbb
popa
inc
mov
push
cmp
in
in
mov
mov
mov
data16
xchg
xchg
and
test
mov
inc
and
rorb
loopne
jmp
dec
xchg
pop
mov
movsb
aaa
dec
pushf
pusha
sbb
cmpsb
hlt
add
mov
mov
shll
inc
mov
jae
in
add
sub
mov
push
lcall
dec
loopne
in
push
mov
mov
xchg
mov
and
mov
shrb
lds
pop
gs
ljmp
inc
mov
sti
addr16
jbe
int3
es
xchg
push
fnstcw
adc
pop
js
cli
inc
std
mov
call
sbb
push
adc
dec
mov
mov
in
mov
adc
jnp
xchg
xlat
int
push
fwait
mov
out
loopne
out
cli
std
sub
inc
fstps
lret
roll
sub
mov
sbb
jb
xchg
fwait
jle
stc
iret
pop
fsubs
mov
pop
adc
push
sar
mov
lahf
add
and
scas
adc
xor
fldt
scas
mov
scas
stos
mov
xor
mov
das
dec
int3
shll
mov
jg
push
sbb
in
xor
rolb
imul
jp
in
aad
imul
xchg
cwtl
push
cmp
jp
mov
test
mov
mov
js
call
or
sub
jae
sti
inc
mov
stc
push
cld
out
add
mov
pop
es
hlt
mov
and
jno
lret
in
adc
or
xchg
loopne
andl
dec
push
mov
mov
xlat
aad
cmp
scas
mov
fwait
in
sbbl
cmp
fld
push
jnp
xchg
pop
lret
and
adc
arpl
das
cmpl
aad
jmp
lock
movsl
pop
jle
or
pop
mov
xchg
fisubs
push
inc
outsb
mov
sbb
xchg
cs
icebp
push
dec
adc
xchg
mov
xor
mov
divb
les
xchg
insl
dec
jnp
dec
int
xchg
lcall
bnd
jnp
int
xchg
pop
lea
int
sub
pop
push
mov
das
test
xor
xchg
out
and
inc
xchg
push
sub
mov
mov
insl
sbb
jecxz
call
lahf
inc
jle
ss
stos
or
xchg
inc
push
mov
cmp
xchg
loopne
cmp
xchg
sar
int3
test
arpl
icebp
cmpsl
cmp
xor
iret
aaa
leave
testb
test
das
ficomps
mov
repz
icebp
test
movsb
or
add
lahf
fdivrs
iret
in
out
stc
mov
sti
ret
dec
or
in
sbb
test
dec
push
cltd
ret
jbe
push
or
or
cmpsb
pop
pop
shll
mov
imul
imul
mov
jmp
xor
mov
inc
ficoms
cmp
mov
frstor
cld
inc
test
popa
iret
in
ret
pop
jo
hlt
scas
dec
mov
cltd
sbb
mov
or
popf
inc
push
fucomip
stc
int
test
ret
fisubrs
mov
cmp
sub
push
dec
jmpw
xchg
or
sbb
lock
lahf
and
jb
cmp
outsb
and
call
scas
push
popf
lret
lock
xor
and
lods
cmp
mov
mov
pop
jmp
push
adc
adc
jp
fcompp
movsl
sub
add
mov
das
imul
pushf
mov
sub
mov
push
dec
cwtl
cmp
js
push
sub
test
test
jno
repz
cmc
dec
pop
or
addb
mov
xchg
aas
in
mov
fildl
negb
jl
cld
push
jne
cmpsb
dec
aaa
mov
adc
je
scas
lea
push
scas
data16
push
sarb
cmp
ss
cmpsb
cmp
jno
push
mov
inc
into
andb
push
lret
in
leave
or
inc
iret
sbb
pop
inc
cmpsb
aaa
pop
out
sbb
xchg
scas
fldenv
lods
jmp
or
mov
and
sbbb
fbstp
sbb
cmpsb
sahf
lods
fldenv
push
loop
and
adc
jo
mov
inc
pop
imul
push
push
fs
jnp
scas
test
aaa
pop
push
xchg
fcmovu
stc
cli
pop
mov
mov
mov
test
fincstp
jge
jae
xchg
or
loope
xchg
mov
out
arpl
in
fwait
scas
cmp
addr16
shl
sub
jno
pop
scas
pop
xchg
icebp
and
mov
testl
insl
push
push
mov
cmpsl
and
inc
hlt
inc
es
js
xor
test
outsb
test
cmc
test
sbb
shl
mov
sub
mov
xor
daa
orl
jmp
sub
mov
loopne
jle
mov
jo
xchg
mov
int
lcall
pop
imul
add
mov
mov
aad
mov
xor
iret
orb
aad
ljmp
fnstenv
fiadds
jp,pn
std
in
aaa
fxam
and
xchg
and
xchg
ret
popa
xor
push
out
cld
cmc
imul
cmpsl
movsl
test
sahf
lret
inc
rorl
mov
jb
jmp
inc
hlt
scas
pop
sbb
call
popf
scas
repz
movsb
xchg
scas
mov
push
sahf
dec
dec
enter
or
push
push
cmpsb
adc
sub
out
or
roll
out
sbb
js
gs
fdivrl
mov
lret
sbb
in
push
movsl
fildl
dec
subb
icebp
and
jmp
ret
aad
sbb
lods
pushf
cmpsl
dec
in
pop
imul
jp
aaa
sbb
imul
sbb
repz
dec
pop
scas
mov
push
nop
idivb
pop
jo
cmpsb
sbb
mov
sbb
add
out
insl
hlt
fstps
mov
clc
sub
test
pop
mov
push
sbb
or
or
insb
int3
jl
movsl
push
mov
xchg
and
das
fwait
cwtl
dec
mov
cwtl
cltd
pop
sbb
repz
in
clc
test
push
xor
dec
inc
fiadds
cs
int
lods
icebp
xlat
fisttpll
mov
push
mov
mov
sbb
addr16
push
aaa
adc
fcoml
dec
mov
add
inc
mov
sub
cmp
fs
lods
xchg
push
mov
cmc
sub
sub
pop
fildll
cmp
push
pop
out
inc
sub
out
fadd
sbb
fs
ss
std
or
aam
insl
cli
aam
jp
out
test
cli
mov
test
push
cmp
mov
sbb
data16
jo
jmp
mov
dec
sub
leave
in
in
int
aam
inc
mov
scas
mov
out
push
out
push
mov
mov
addb
pop
repz
pop
and
sbb
das
adc
cmp
ret
sbbb
and
lahf
mov
mov
inc
test
mov
adc
into
test
roll
sbb
mov
stos
mov
int3
jae
aad
or
test
test
inc
sub
jb
push
pop
ljmp
cmpsl
lret
mov
add
daa
and
pop
pusha
xchg
xchg
push
sub
push
mov
lods
adc
lods
jno
jg
adc
fwait
rcll
lds
dec
adc
das
adc
mov
jo
xchg
xchg
lahf
pop
pop
mov
or
dec
fisttpll
mov
xchg
pop
push
lods
inc
sahf
fwait
push
sbb
push
or
out
pop
je
cmp
dec
in
mov
adc
js
push
lods
xor
xchg
addb
fcomps
bound
repnz
mov
xchg
push
dec
jno
mov
test
out
jne
jg
inc
or
mov
xchg
dec
jbe
xchg
push
cwtl
cmp
insl
push
cmpsb
mov
xchg
sbb
filds
jbe
loop
inc
das
xor
inc
aad
sahf
push
adc
daa
repz
pop
add
push
mov
xchg
mov
fcmovnb
dec
dec
iret
das
and
fptan
add
test
and
or
mov
loope
subb
xor
cmp
frstor
outsb
push
icebp
mov
shl
adc
xchg
jae
gs
jns
sub
aaa
adc
out
in
loop
hlt
or
xchg
incb
dec
xchg
clc
xchg
pop
cmp
lahf
adc
dec
jno
push
stos
repz
repnz
pushf
insb
mov
sub
loopne
sbb
adc
mov
xchg
jne
mov
push
pop
push
je
mov
jp
pusha
movsl
js
inc
adc
jns
inc
dec
cmpsl
xchg
lret
mov
call
push
pop
or
les
ss
cmp
pop
xor
inc
mov
imul
scas
mov
movsl
popl
mov
pop
inc
mov
cmc
jnp
xchg
rclb
mov
arpl
mov
flds
outsl
pushf
test
inc
mov
xor
leave
insb
ja
nop
lret
push
jmp
insb
xor
xchg
dec
lcall
mov
in
scas
subb
xchg
cmpb
incb
jb
rol
cmpsl
je
push
rol
inc
xchg
xor
mov
aam
fsts
mov
repz
xchg
mov
fwait
add
xor
fxam
fstpl
xchg
mov
inc
lods
jns
gs
das
out
movsb
rcll
stc
sbb
int
and
jge
adc
lcall
dec
or
int
sub
dec
subb
mov
dec
and
lods
mov
mov
imul
in
hlt
mov
outsb
es
dec
lea
add
jecxz
mov
out
lahf
js
repz
mov
iret
gs
repnz
dec
ficomps
push
and
push
fdivr
mov
mov
sub
mov
cltd
adc
sar
faddp
cmp
jae
es
add
and
mov
mov
inc
fcompp
and
xor
cmpsb
mov
pop
mov
jae
fcomps
lahf
or
out
js
inc
and
mov
lock
data16
movsb
adc
xchg
fisttpl
call
dec
fisttpl
mov
xchg
mov
insb
stos
mov
sarb
shll
sub
cmpsb
fsubr
int3
pop
cmp
mov
or
sbb
cmp
test
fidivs
arpl
pop
dec
xor
mov
fsin
or
clc
mov
ficompl
inc
xor
push
pusha
mov
fmul
and
lods
inc
sub
scas
sbb
jge
dec
adc
enter
add
loope
loopne
jecxz
mov
adc
iret
out
push
xchg
xchg
dec
inc
xchg
into
stc
sbb
jns
test
push
imul
fsub
inc
mov
out
lret
fldcw
movsl
sahf
or
pop
xchg
jl
mov
fistpl
es
mov
add
ss
xchg
push
pop
test
daa
cmp
push
leave
mov
jbe
roll
xchg
sar
inc
jp
sbb
mov
adc
mov
inc
test
and
push
inc
mov
int
repnz
test
jge
mov
out
lcall
jae
out
sbb
pop
hlt
mov
xchg
xchg
int
scas
push
cmp
andb
mov
std
test
push
pop
mov
data16
out
repz
and
inc
imul
addr16
es
aaa
shlb
mov
mov
mov
mov
das
call
mov
mov
pop
test
mov
cmc
popf
leave
pop
cmpsl
out
adc
hlt
daa
int3
int
aas
in
sbb
inc
inc
sar
and
mov
push
popa
jae
jl
out
push
stc
fs
andl
je
jp
inc
and
push
sbb
push
inc
fcmovnbe
mov
sub
les
imul
addr16
adc
push
mov
jmp
divb
cmpb
mov
data16
lods
and
xor
ficoml
mov
scas
in
leave
jmp
or
gs
mov
inc
cwtl
ficompl
mov
xchg
int3
test
in
pop
mov
pop
jle
sti
jbe
test
lods
mov
sub
pop
out
xor
stos
icebp
xlat
fisubrl
cmp
lcall
filds
in
aaa
mov
lret
sahf
push
inc
inc
cmp
std
fldlg2
nop
orb
or
sahf
enter
push
mulb
outsl
and
cmp
lcall
xor
jg
pushf
pop
lret
test
cmp
pusha
jmp
push
or
mov
xchg
fstps
insl
js
xlat
or
mov
fadds
iret
pop
lods
rcrb
cltd
push
mov
add
scas
test
and
xchg
dec
movsl
jle
xchg
gs
push
sbb
mov
ds
push
cmp
push
ror
add
mov
sbbl
mov
mov
pop
pop
sbb
insb
mov
loop
jns
jg
mov
jae
sbbl
cld
sahf
jbe
and
push
mov
adc
sub
adc
mov
dec
jg
mov
out
les
in
adc
andb
arpl
fmull
mov
rol
and
dec
in
xchg
mov
aaa
mov
xchg
push
mov
fwait
inc
cld
lret
mov
jo
in
fldl
mov
xchg
sub
pop
mov
cmp
shrb
repz
pop
jo
idivl
daa
add
ret
in
adc
pusha
sarl
xchg
scas
imul
cmp
mov
add
sarl
hlt
inc
fxch
jp
mov
dec
push
leave
fsubr
test
push
push
adc
gs
push
mov
mov
sub
test
cmp
cmp
ffree
jle
inc
test
xchg
cltd
inc
and
addr16
int3
call
pusha
ds
mov
mov
movsl
or
data16
test
or
or
cwtl
jnp
mov
sub
out
out
pop
inc
pushf
in
rorb
add
dec
inc
fucomip
jbe
inc
ja
dec
mov
hlt
mov
sub
lods
sbb
js
cmp
stc
loopne
mov
cmp
test
sub
sti
ret
stc
gs
sti
aas
lods
inc
cwtl
outsb
mov
fsincos
out
jnp
jb
call
lods
dec
mov
bound
sub
inc
and
js
mov
jle
pop
pushf
scas
dec
insb
js
or
mov
fstpt
xlat
cmp
inc
popf
adc
push
dec
xchg
lret
inc
jge
push
les
cmp
insl
fnstenv
fwait
and
stos
sub
lods
loop
push
sub
push
mov
scas
shrb
testb
push
inc
and
adc
jge
adcb
cmp
test
jne
dec
into
mov
cs
sahf
repz
sahf
call
push
sub
adc
add
je
sub
cmp
mov
cmpsl
dec
sub
sbb
popf
int3
enter
fxch
icebp
mov
into
push
push
test
in
mov
movsl
les
ror
fiaddl
arpl
insl
push
mov
mov
gs
test
gs
dec
xor
mov
xor
movsl
and
out
cmc
je
ja
and
cmpsb
or
sub
test
jne
enter
fisttps
cmp
xchg
adc
into
pop
in
les
repnz
push
mov
jg
neg
lds
pop
pop
das
pop
xchg
fisttpll
arpl
lods
jnp
ret
sahf
int
or
lcall
jle
stos
push
xchg
bound
scas
add
dec
and
xchg
and
jb
sbb
and
jb
scas
and
sti
pushf
xchg
cmp
flds
push
jno
repz
stos
stc
xor
in
mov
inc
lods
ss
std
ja
xchg
jns
or
jne
jne
enter
pusha
push
or
fisttpl
pop
out
mov
jae
mov
fstps
mov
and
out
sti
inc
sarl
xchg
mov
in
dec
cs
ljmp
dec
adc
andb
sbb
cmpsb
hlt
imul
pop
fisubrl
and
cs
cmpsl
add
adc
push
mov
out
and
add
test
popa
dec
ret
xor
mov
pop
inc
int
push
cmp
sub
aas
mov
cld
sub
mov
jmp
push
add
jae
cltd
aaa
xor
add
adc
jecxz
jmp
movsl
lock
xlat
flds
pop
ljmp
jno
mov
js
das
or
bound
sahf
fwait
sub
dec
mov
roll
and
push
adc
les
je
dec
or
sbb
lock
cld
es
mov
sub
test
mov
mov
mov
mov
addl
xchg
pop
mov
fisubrl
stos
sbb
jae
sub
or
push
push
out
stc
call
push
xchg
fistl
xchg
cmp
mov
imulb
dec
je
dec
aam
aas
mov
xchg
movsl
push
movsb
or
dec
scas
int
jl
insl
movsb
test
js
sti
xchg
mov
mov
ret
pusha
and
pop
ret
fs
aaa
add
dec
pop
fcompl
cs
roll
gs
pop
mov
test
or
pop
and
test
cmp
push
adc
ror
xor
mov
imul
call
jge
imul
shl
jp
fwait
mov
dec
and
addr16
sahf
setg
movsb
xor
out
lock
sbb
les
stc
dec
pop
pop
inc
sbbb
test
sub
add
repz
imul
xor
aam
les
lcall
push
imul
test
sbb
rorl
xor
addr16
in
aam
mov
jae
or
lret
pop
cmpsb
add
sbb
lret
ja,pn
add
xlat
movsb
aaa
cmpsl
jl
repz
outsb
inc
ss
je
pop
scas
push
fwait
xor
sbb
idiv
cltd
and
sahf
jle
add
pop
aaa
lods
sbb
icebp
push
inc
ss
and
arpl
xchg
xchg
jp
fs
scas
push
les
pop
mov
mov
mov
jge
xchg
es
xchg
aaa
fucom
dec
sub
push
mov
mov
jle
test
add
icebp
ds
and
out
mov
scas
sbb
push
mov
adc
adc
xchg
test
fwait
inc
cmpsb
mov
push
pusha
inc
fisttpl
or
jle
push
cmp
loop
dec
mov
pop
repz
cmpl
fnstenv
aas
in
mov
mov
enter
adc
setg
out
cmp
mov
mov
jb
inc
or
mov
pop
test
pop
inc
mov
dec
fildl
cmp
aam
jp
jmp
push
xor
outsl
cld
jecxz
jle
repnz
xchg
mov
mov
outsb
fdivrl
repz
les
dec
hlt
push
sub
push
mov
cmp
mov
sar
test
jecxz
mov
mov
out
dec
scas
cmpsb
or
cmp
push
mov
push
in
inc
or
sbb
mov
lcall
sbb
incb
js
xchg
pop
adc
loopne
enter
in
scas
call
imul
jp
or
test
xor
cmpsb
jne
sbb
or
lret
sbb
fnstcw
ja
imul
cwtd
imul
sub
xchg
es
add
or
xchg
test
imul
adc
xor
mov
and
pop
adc
jae
dec
pop
movsl
add
sub
jg,pn
cmp
cli
test
cltd
and
jle
ftst
lds
xchg
stos
mov
or
inc
xchg
fmul
jne
loopne
test
mov
pop
out
xor
add
mov
jb
push
jae
xchg
das
dec
dec
push
add
sahf
dec
idivl
test
daa
test
inc
mov
dec
sub
mov
test
push
sub
je
lcall
mov
mov
scas
rcr
lods
mov
or
sbbb
in
inc
sahf
lods
adc
in
add
stos
out
aas
addr16
dec
mov
push
dec
adc
mov
cmp
std
stos
dec
cld
cmp
movsb
out
xor
mov
fwait
mov
je
fldl
mov
jp
aaa
sahf
sbb
in
jp
push
test
test
aaa
jne
inc
mov
mov
add
xchg
insl
pop
imul
and
pop
cmpsl
arpl
and
add
inc
lock
test
es
xchg
xchg
mov
adc
mov
mov
stos
sahf
inc
int
rcll
faddl
adc
shrb
das
jno
test
jp
cmpsb
adc
mov
sbb
adcl
sti
mov
out
sbb
fwait
push
inc
cmc
sbb
repnz
sahf
jae
xchg
aas
adc
ss
loop
in
push
in
fsubrp
mov
aam
fldcw
sub
test
mov
dec
sub
mov
imul
push
and
repz
jmp
jmp
stc
scas
sub
pop
cmp
lods
pop
popf
fldenv
testl
jg
cs
inc
adc
int3
xor
mov
jnp
sub
lock
cmp
lret
mov
mov
mov
scas
repnz
xchg
jbe
aad
in
clc
xchg
sbbl
pop
mov
cmpsb
cli
jbe
in
in
jnp
push
mov
sub
cli
ss
stc
jge
ljmp
add
adc
sti
push
push
xor
scas
cmp
out
pushf
sbb
scas
push
repz
stc
xor
sbb
mov
lea
in
cmp
int
xchg
jge
lcall
cli
mov
and
stos
flds
inc
sbb
push
stc
dec
add
inc
xchg
gs
cmp
push
jecxz
push
loope
mul
xchg
out
sbb
dec
scas
pop
inc
adcl
test
pusha
adc
std
ss
fsubl
adc
add
mov
das
call
imul
fld
jo
pop
int3
jge
mov
scas
in
scas
test
in
mov
mov
cmp
das
data16
push
fwait
sbb
xchg
lds
cmp
int3
dec
repnz
clc
add
push
mov
es
mov
sar
fcoms
mov
and
int
scas
out
xlat
test
jae
sbb
inc
das
aad
xor
popa
push
mov
ds
fldenv
popa
test
jnp
xchg
in
inc
add
cmp
divb
out
sub
shrl
xor
sti
in
out
cli
cmc
addr16
push
les
ss
push
mov
mov
cmp
sahf
dec
cmp
and
sub
arpl
jnp
sub
stos
test
call
mov
mov
mov
mov
cmp
lods
jbe
or
push
mov
hlt
sbb
bound
call
clc
xchg
or
jo
out
cmp
sahf
sti
mov
popf
xchg
add
flds
add
add
lret
and
push
test
push
test
mov
int
int3
pushf
jle
fisttps
dec
gs
icebp
cmp
inc
xchg
out
int
and
mov
jnp
sahf
jbe
mov
mov
out
xchg
cmpsl
pop
or
xor
push
fildl
xchg
lahf
xchg
push
adc
push
push
xor
jo
arpl
push
xchg
fdivp
xchg
xchg
out
cmc
pop
xchg
loopne
mov
cld
or
sub
sti
icebp
adc
pop
hlt
mov
clc
data16
int
shl
adc
jecxz
mov
fnstenv
cmp
das
pop
rolb
push
lea
pushf
stc
jge
mov
xor
scas
out
outsl
in
push
xor
clc
insb
inc
outsl
out
mov
and
pop
scas
push
jle
scas
fstl
scas
dec
in
jne
ds
mov
in
mov
inc
not
jns
imul
pop
pop
dec
mov
cmpb
dec
in
adc
ljmp
test
push
pop
ljmp
popf
inc
cmpsb
stc
rcll
xchg
sub
nop
fwait
lods
jmp
idivl
out
xchg
fsubs
add
ror
loope
mov
out
jnp
ret
sti
inc
pushf
test
sbb
add
sbb
jge
cmp
repz
xchg
mov
test
inc
mov
scas
ja
lods
test
jl
dec
lods
inc
sub
mov
js
out
incb
xor
notl
andl
fsubp
loopne
or
insb
popf
jle
xor
sbb
and
push
movl
sbb
adc
or
xchg
or
add
faddl
sub
and
jp
nop
cmp
rcll
sbb
jle
xchg
pop
movsl
sbbl
jg
inc
xchg
daa
xchg
xchg
cld
stc
add
ljmp
stos
push
cmpsb
xchg
mov
sarl
add
xor
xchg
dec
push
pop
adc
lock
pusha
lea
inc
mov
dec
popf
sbb
push
mov
mov
pop
pop
test
repz
iret
int3
cmp
push
scas
or
bound
sti
aad
stc
mov
sbb
xchg
dec
pop
shlb
jp
xchg
jno
or
jno
lods
popf
in
aam
in
jbe
mov
ja
mov
scas
movsb
loopne
inc
movsl
psrlw
movsl
addr16
das
scas
cmp
cmp
cmp
out
push
push
test
add
xchg
mov
outsl
ret
enter
daa
ljmp
fsin
data16
cld
mov
sbb
mov
lret
mov
xchg
roll
and
lods
sub
cmpsl
mov
fnstsw
pop
out
push
xchg
mov
test
loope
scas
bound
xor
cli
scas
in
cmp
pop
mov
dec
and
pop
popa
mov
pop
adc
xor
into
lret
scas
dec
lret
out
insb
adc
cltd
int
cmp
call
pop
mov
dec
sbb
pop
mov
push
adc
lcall
adc
mov
mov
lds
loop
and
test
loope
pop
inc
ja
pop
pop
shll
arpl
lods
mov
dec
and
inc
jp
pushf
je
push
add
nop
adc
lahf
sti
cld
es
and
push
mov
shll
sbb
imulb
sub
sbb
mov
cmpsb
aam
ror
out
sub
mov
das
fwait
sahf
dec
or
test
adc
aam
sbb
test
es
ja
mov
pop
leave
and
push
out
fldcw
mov
fmull
repz
cmp
push
or
aam
popf
loope
lds
cld
mov
sbb
push
push
mulb
xlat
imul
fdecstp
jbe
sarb
pop
mov
int3
dec
adc
test
outsb
into
movsl
mov
hlt
mov
sbb
in
xchg
mov
xchg
cmpsb
ljmp
push
bound
dec
icebp
ja
pushf
xchg
push
add
mov
or
outsl
sub
lods
sarb
mov
pusha
lods
mov
and
inc
inc
rcrl
cwtl
inc
in
add
mov
cmp
lcall
popf
ret
arpl
cmp
xchg
adc
pop
shl
ror
lret
mov
scas
or
xlat
cmp
int3
and
cmp
mov
repnz
ret
sbb
int
cmp
lea
and
pop
fidivl
xchg
das
stos
mov
sub
sub
dec
cmpsl
or
std
addr16
mov
push
sbb
and
lds
mov
sbb
pushf
sub
xchg
mov
andb
cli
test
addr16
mov
and
inc
jle
std
push
cmp
test
es
xor
lret
adc
inc
jbe
and
icebp
enter
imul
cli
sbb
ljmp
xchg
aas
nop
cmpsl
ljmp
sbb
xor
loopne
jae
shlb
repnz
mov
jge
ss
test
sub
icebp
and
lret
clc
xor
mov
pop
movsl
pop
jno
add
adc
addr16
dec
jae
cmpsb
lret
sarb
into
in
mov
cli
cmp
movsl
lcall
fnstcw
jle
inc
sub
jle
xchg
sub
xchg
and
mov
das
int
imul
sub
cwtl
sbb
icebp
test
push
nop
sub
ss
movsb
add
push
ljmp
mov
and
icebp
pop
pop
out
outsb
test
mov
loop
mov
pop
lods
mov
out
mov
inc
jno
data16
jns
xor
test
and
adc
test
inc
mov
dec
int3
mov
inc
cmpb
hlt
jmp
out
mov
fstl
sbb
pop
test
xlat
sbb
sbb
js
push
xchg
lahf
adc
ljmp
cmp
mov
sbb
imul
adc
in
inc
imul
push
stos
cmpsl
jg
fsubs
jmp
pop
mov
xchg
imul
push
in
lret
lock
xchg
sti
add
mov
out
mov
sbb
or
test
dec
mov
xchg
jge
aas
inc
idiv
pop
mov
mov
pop
hlt
adc
pop
xchg
mov
xchg
ss
dec
out
into
ljmp
inc
cmpsb
xchg
and
nop
push
xor
pop
jae
mov
das
push
out
mov
adc
or
or
mov
mov
fdivs
inc
fcomip
sahf
dec
leave
loopne
ss
adc
inc
fdivl
jmp
mov
fisubl
gs
dec
cmpsl
xor
shrl
lcall
popf
push
xorl
bound
outsl
daa
nop
dec
and
and
fcmove
aas
and
fists
fucom
or
es
mov
nop
dec
add
mov
add
push
sbb
cmp
das
je
imul
int
scas
and
out
ljmp
jb
jno
loope
sub
test
or
fisubrs
repz
test
adc
add
out
fdiv
imul
cmp
and
push
out
nop
imul
insb
lods
int
cmpsb
mov
or
pop
push
dec
lods
mov
add
fiadds
push
push
fsubrl
leave
scas
dec
mov
jge
hlt
lcall
outsb
mov
aaa
and
mov
sbb
test
xchg
mov
sbb
addl
xchg
in
ss
inc
mov
jo
pop
xor
int3
sbb
sub
in
test
sbb
cld
mov
int3
jae
xchg
add
out
ret
sub
and
imul
mov
test
cmpsb
cmc
push
scas
and
pusha
test
mov
std
mov
jl
gs
mov
or
mov
pop
and
mov
mov
test
dec
in
and
push
aam
movsb
mov
test
lods
lcall
arpl
in
sub
push
mov
xor
dec
insb
adc
movsl
fldenv
adc
aam
das
test
cmp
mov
es
aaa
into
sti
jno
rcrb
push
addr16
sbb
inc
xlat
sub
in
cwtl
and
arpl
jns
xchg
jns
imul
xorl
test
mov
adcb
mov
sbb
inc
adc
cmpsb
or
mov
pop
inc
mov
xor
bswap
mov
mov
jns
sbb
ficoms
ffree
fwait
aaa
cmp
sbb
pop
mov
inc
mov
bound
fdiv
hlt
jmp
xor
sub
jns
jg
sarl
dec
enter
sbb
mov
scas
adc
int3
and
mov
scas
repz
popl
arpl
push
jae
cmp
ds
adc
addl
push
mov
dec
pop
movsl
into
movsb
inc
int
cli
or
add
xor
xor
sub
int
frstor
mov
adc
mov
in
test
popf
popa
mov
mov
or
inc
inc
sbb
imul
jmp
mov
sahf
xchg
cmpsb
out
out
push
ret
fldt
jge
inc
loop
shr
add
xor
mov
mov
add
into
push
push
jo
push
adc
xor
ficoml
pop
mov
fimull
mov
dec
and
insl
push
pop
std
pop
sar
jno
subl
jecxz
sub
test
test
stc
mov
and
repnz
or
pop
push
mov
in
and
push
xchg
cmpsl
popa
fsubp
sbb
popf
jno
xchg
push
lods
xchg
mov
je
lea
jg
repnz
hlt
cs
in
sub
sub
dec
dec
jecxz
cmp
add
cmp
mov
outsb
pop
and
sbb
push
cmp
lods
fdivrs
sub
jp
out
leave
cmpsl
loop
or
movsb
mov
sbb
stc
aad
sub
pop
das
xor
add
out
mov
dec
lods
out
outsl
jno
sbb
mov
test
mov
and
pop
stc
test
cld
and
imul
inc
mov
cmp
sbb
out
in
test
and
sub
xor
repz
pop
into
jp
sub
fcmovnu
test
jns
xor
push
or
scas
ds
sub
cmp
xor
sbb
stc
push
xor
loope
mov
pop
cmpsl
scas
mov
xchg
shll
or
add
mov
mov
out
test
insb
fnstenv
movl
stos
cld
popf
test
daa
fdiv
push
dec
push
clc
repz
das
xchg
scas
jmp
jb
int
mov
les
xor
push
loope
aas
pop
mov
enter
and
mov
lock
inc
mov
and
cli
lods
push
and
pop
push
repnz
mov
pmovmskb
xor
popf
pop
aam
ljmp
ret
mov
dec
cmp
out
push
int
add
mov
ficoms
in
in
and
dec
push
dec
push
stc
dec
dec
lahf
push
mov
gs
push
pop
test
push
aam
mov
and
int3
lds
mov
negl
pop
inc
clc
test
rorb
loop
add
int
fidivrl
jp
pushf
jmp
in
adc
sub
mov
scas
push
ret
xchg
in
stc
push
fdivrs
push
outsl
dec
repnz
jg
scas
push
cld
mov
adc
test
or
push
inc
sbb
mov
mov
adc
and
jae
or
sub
repnz
mov
or
push
pop
out
and
rcrl
mov
push
test
xorb
push
adc
mov
mov
std
xorb
sti
sbb
in
xchg
lds
xorl
pushf
mov
pop
test
xchg
js
add
or
ficomps
scas
inc
push
adc
sbb
adcb
jb
jle
es
fisttpll
out
int3
sub
inc
js
push
and
mov
sub
fistl
ss
mov
lahf
mov
sub
or
xor
cmp
sub
inc
sahf
data16
push
test
jo
xchg
cmp
cmp
in
ja
inc
test
int
imul
push
out
js
js
sbb
sarb
push
data16
lahf
jg
lods
pop
add
lock
scas
or
dec
jo
and
pop
jl
and
xchg
push
repz
aas
sbb
inc
mov
add
lahf
mov
icebp
cmp
iret
fstpl
push
jl
dec
faddp
adc
pusha
inc
shlb
xchg
aaa
inc
das
xchg
mov
lahf
dec
cmp
test
mov
inc
addr16
xor
xchg
shlb
cmp
lods
mov
or
test
xlat
jp
adc
push
sub
pmaxub
stos
arpl
inc
dec
jecxz
mov
test
push
mov
mov
pop
out
mov
fldenv
dec
jbe
cmp
loopne
in
mov
testl
out
aad
arpl
mov
andl
jns
outsb
cmpl
fnstenv
sti
mov
push
and
insl
mov
push
repz
movsb
test
out
mov
sti
jp
and
dec
adc
lods
push
data16
test
flds
xor
scas
arpl
inc
mov
fwait
dec
cmp
or
mov
pop
or
add
jae
mov
mov
xlat
inc
push
pop
rcl
imul
pop
add
shl
loop
lea
or
jns
mov
bound
int
or
out
imul
dec
ss
pop
sti
scas
xchg
sbb
mov
popa
out
dec
xor
jno
sub
cwtl
jo
push
mov
pop
clc
movsl
gs
ud2
mov
push
xor
pusha
jp
jl
idivb
imulb
scas
and
lahf
and
sbb
es
mov
in
xor
xor
xor
mov
movsb
push
xor
scas
add
xor
add
pop
aad
test
dec
jnp
dec
xor
or
je
scas
cmpsl
inc
pop
dec
inc
int
fwait
dec
das
inc
out
push
push
cwtl
pushl
sbb
push
sti
repz
xor
lds
rcr
pushf
loop
xor
mov
movsl
inc
cmpsb
cmp
adc
lcall
int3
pop
dec
pop
lods
imul
xchg
jp
cmp
popf
mov
test
icebp
inc
cs
pop
outsb
shrb
out
js
xchg
leave
pop
es
movsb
cmp
enter
dec
cmc
mov
sbb
pop
mov
dec
lds
cmp
jp
scas
xlat
pop
insl
cld
cmpsb
shrl
inc
out
dec
push
fwait
sti
push
cwtl
xchg
repnz
xor
xchg
cltd
and
icebp
in
mov
stos
push
pop
jo
pop
cmp
cmp
mov
adc
repz
mov
cmpsb
dec
in
xor
mov
lcall
pop
and
xor
sbb
jmp
sti
sub
fbstp
xlat
sti
lods
add
sbb
gs
out
adc
test
mov
push
les
sbb
inc
push
hlt
add
inc
mov
mov
and
call
sbb
dec
sbb
out
push
add
jno
fcompp
mov
into
sbb
out
cmp
jp
scas
das
jbe
stc
add
pop
push
repz
cmp
mov
paddd
pop
mov
aam
in
into
add
push
push
xlat
pushf
adcl
pop
adc
rcll
test
or
inc
inc
xchg
xlat
lods
inc
cld
test
adc
lcall
or
adc
pop
fstl
jle
das
data16
jle
push
icebp
ljmp
dec
test
mov
mov
fstpt
push
neg
out
repz
cmp
inc
pop
xchg
push
ss
loopne
pop
pop
or
xor
inc
xchg
push
dec
lods
shlb
enter
xchg
push
mov
les
lods
push
and
sbb
adc
lods
jae
xor
mov
mov
into
movsl
repz
inc
sarb
outsb
dec
daa
and
adc
mov
out
fwait
xchg
icebp
scas
and
mov
jp
adc
pushf
inc
push
es
test
mov
pop
movsl
int
lds
cmpsb
pop
test
sub
jns
std
cmc
into
jns
dec
out
push
pop
loopne
or
and
dec
leave
fisttpll
ss
mov
jo
imul
mov
jp
in
or
adc
call
jnp
addr16
cmp
push
test
mov
inc
cmpsl
cmp
out
mov
jb
enter
inc
inc
xor
add
cmp
cmp
jb
jnp
mov
jmp
lods
push
rcr
push
fs
mov
push
jns
dec
inc
pop
fildll
dec
ss
jge
sub
test
xchg
pop
js
sti
fisubrs
and
pop
std
fdivl
mov
jge
test
dec
out
faddl
test
addr16
jl
sbb
xchg
ss
push
leave
cmp
cmp
popa
movswl
pop
enter
push
sub
dec
mov
fldenv
scas
addr16
adc
loopne
fistpll
mov
jp
sub
fwait
sub
loope
mov
inc
mov
sbb
scas
jmp
xchg
test
flds
cs
push
daa
or
cmpsl
xor
cmp
movsb
fdivrs
popf
aam
xchg
add
fbstp
in
fwait
movsb
mov
mov
jnp
test
cmpsl
test
sahf
ss
mov
lds
outsl
dec
sti
mov
mov
lods
xchg
orb
cwtl
jnp
adc
imul
rcrb
xor
inc
imul
lret
int
loop
mov
aad
data16
scas
inc
jne
lods
stos
xchg
aaa
popf
or
lret
jae
mov
mov
cmp
out
sbb
pop
add
xchg
mov
push
icebp
cmpsb
mov
mov
pop
rolb
in
mov
fadd
int
loopne
fidivl
push
mov
jno
negl
clc
dec
lret
push
lret
jo
bts
mov
or
sbb
mov
dec
outsl
mov
into
and
mov
das
jno
or
and
lret
lods
xlat
mov
mov
add
adc
cmpsl
jecxz
jg
cld
lcall
movsb
pop
aas
inc
lods
xchg
es
sub
mov
out
out
adc
repz
mov
int
cmp
orl
mov
lods
and
xchg
stc
es
pop
lahf
iret
mov
fnstenv
xchg
pop
out
adc
clc
adc
push
ficomps
inc
push
fsubl
mov
shl
lahf
mov
scas
adc
jecxz
sbbb
adc
mov
xor
dec
clc
jl
roll
adc
push
mov
mov
xchg
pop
push
adc
push
bnd
push
lret
adc
stos
sbb
adc
jb
cmp
les
dec
test
mov
push
scas
xor
popf
lods
sub
fs
divb
jmp
loope
int
xor
stc
std
and
test
fs
or
stc
add
mov
mov
inc
add
mov
sbb
fsubl
jns
dec
sbb
in
mov
jmp
test
inc
jnp
loopne
imul
repz
mov
or
negb
xchg
mov
push
movsb
out
sahf
mov
push
mov
ret
inc
sbb
xor
das
pop
jmp
mov
push
mov
sbb
fwait
outsb
mov
dec
push
and
cmp
decb
lock
inc
xchg
xchg
stos
dec
sub
pop
repnz
dec
lds
sbb
fisubrs
test
xorb
inc
nop
xlat
popf
into
mov
pop
inc
repnz
xchg
mov
int
jo
cmp
add
scas
jg
ret
scas
and
adc
insb
adc
pushf
dec
sbb
sub
shll
popa
mov
dec
jnp
fs
jne
popa
pop
test
lahf
push
cmp
sbb
xchg
repnz
xor
les
pop
repnz
push
mov
das
pop
push
pop
cltd
test
sbb
std
ss
lods
add
jge
clc
fnsave
inc
or
adc
cmpsl
adc
aaa
aad
mov
cmp
mov
fs
out
cli
xchg
scas
mov
stos
jmp
push
mov
mov
test
fiaddl
cmp
cltd
iret
icebp
popa
pop
fiadds
daa
mov
push
movsl
movsl
xor
xor
mov
or
inc
xor
jnp
xchg
mov
cld
test
das
dec
lcall
idivl
push
daa
cmp
jg
push
std
pop
pop
mov
cmc
sbb
cmpsb
aas
pusha
xchg
jp
fnstenv
xor
loop
addr16
imulb
and
dec
adc
xchg
loopne
out
aam
push
mov
lock
fsub
filds
iret
adc
mov
repnz
sub
mov
loope,pn
mov
xor
fwait
rorl
daa
into
mov
cmp
iret
rolb
adc
sbb
repnz
sub
movsb
dec
adc
clc
outsb
dec
push
sbb
mov
clc
jg
xchg
scas
inc
or
in
shrl
fimuls
push
add
jne
mov
and
fsts
aam
jp
push
std
mov
out
mov
movsb
fsubrl
in
add
std
insl
mov
leave
cmpsb
jne
cmc
out
scas
mov
test
cmpsb
push
roll
test
mov
test
mov
and
or
mov
jge
add
sbb
mov
gs
dec
mov
cmp
add
incb
sbb
out
jl
rclb
fsubs
fxch
jnp
mov
ja
xchg
cmpsl
push
enter
scas
cli
test
mov
mov
mov
mov
dec
mov
sahf
enter
mov
loope
jge
xchg
ror
cmp
idivb
shrl
pushf
fcmovbe
xor
int
inc
sahf
out
pop
dec
xchg
imul
dec
ss
inc
jmp
scas
cmpsl
fldcw
imul
mov
add
lcall
sbb
dec
xlat
jge
jb
das
mov
push
dec
xchg
mov
fstps
stos
repz
addr16
gs
adc
mov
mov
push
sti
mov
out
cs
mov
gs
xchg
xor
or
cmpsb
out
in
lahf
daa
fstps
sbb
mov
std
loope
sbb
test
adc
xlat
in
flds
gs
js
cli
nop
pop
xor
inc
mov
push
cmp
stos
in
sbb
insl
fldenv
push
jl
leave
adc
ljmp
and
sbb
jmp
dec
lret
fisubrl
dec
movsb
lods
jb
mov
in
cs
mov
pop
out
pusha
jo
pop
adcb
lods
mov
es
dec
mov
repz
cltd
mov
inc
add
xchg
shr
mov
lahf
loop
mov
hlt
xlat
es
lret
cmp
jmp
dec
insb
mov
sti
test
sub
roll
xchg
push
hlt
mov
das
pop
pop
repnz
lret
movsl
pop
cmp
cmpsb
or
inc
mov
cmp
mov
mov
shl
jnp
aaa
and
inc
mov
mov
mov
pop
mov
fcmovnb
scas
mov
push
xchg
dec
pop
ds
std
sahf
mov
mov
xor
inc
and
sahf
cli
out
or
dec
sub
clc
imul
fucomi
pop
and
pusha
faddl
add
pop
push
mov
or
cmp
leave
or
inc
xchg
gs
dec
pop
push
std
add
xchg
inc
jmp
mov
adc
pop
xlat
and
sbb
xchg
pop
shrb
sub
mov
jge
lcall
inc
iret
pop
aam
roll
les
loop
sahf
lret
sub
fimuls
pop
pushf
jne
scas
mov
add
pop
cmp
aad
out
mov
leave
lcall
hlt
pop
leave
dec
aad
xchg
cmp
xchg
dec
pushf
lret
mov
mov
test
cmp
mov
inc
cmp
cmp
shlb
adc
sbb
rclb
mov
ljmp
lret
loopne
lcall
test
dec
pop
jnp
mov
imul
fcomps
scas
movl
es
push
mov
cmp
rorb
mov
or
mov
repz
movsb
leave
fimuls
cwtl
int3
icebp
out
xchg
outsl
andl
addb
cmp
insb
sbb
in
jne
lds
xchg
lock
rorb
jecxz
mov
xchg
lods
mov
or
fmuls
out
iret
mov
jge
dec
insl
mov
roll
in
mov
inc
jp
mov
fld
push
pusha
stc
ja
push
ss
push
inc
push
data16
xlat
cmp
inc
call
out
push
fstps
loop
add
lcall
mov
popa
gs
call
insl
scas
cmc
lahf
xor
jae
cmp
mov
int
sub
mov
mov
sarb
xchg
ss
stos
and
je
mov
mov
rcr
out
sub
xchg
inc
cmp
sbb
dec
mov
imul
push
push
sub
and
mov
jne
dec
mov
gs
scas
out
inc
xor
les
jb
inc
mov
push
test
fisubrl
dec
push
push
loopne
hlt
popf
sahf
sbb
lods
scas
mov
leave
in
fsts
xor
roll
sub
mov
dec
push
pusha
sub
nop
mov
ret
aas
aad
xchg
sahf
out
lods
sub
or
insb
pop
mov
add
iret
sub
pop
mov
movsb
fxch
in
push
xor
xor
add
add
test
push
orb
repz
pop
xor
cmc
andl
shl
aam
push
mov
mov
cmp
push
popa
dec
insb
in
mov
xor
stos
das
pop
aam
xchg
and
dec
scas
mov
dec
lock
lock
jae
mov
das
mov
nop
icebp
clc
js
mov
not
daa
mov
scas
cs
mov
aad
nop
imul
sub
test
adc
lret
and
icebp
inc
je
iret
add
add
lahf
add
inc
int
lret
jp
test
jnp
mov
addr16
mov
popf
scas
scas
out
scas
enter
adc
mov
pop
xchg
sub
cwtl
stc
aaa
bnd
rcrb
sbb
fdivrl
jle
int
cmp
scas
lcall
mov
mov
roll
lock
data16
out
enter
lret
in
inc
lods
test
cmp
dec
in
popa
mov
lcall
insb
data16
mov
pop
and
shlb
sub
xor
inc
sub
pop
in
sub
inc
or
push
sbb
dec
das
fdivrl
pop
cld
mov
lret
dec
data16
lea
and
sbb
adc
xchg
imul
test
sbb
ljmp
xchg
pop
or
sbb
out
cmp
xlat
jg
aas
sbb
push
and
push
fistpll
stos
outsl
adc
cmp
xchg
in
mov
or
mov
xchg
mov
int3
lds
test
sarb
mov
jns
out
sbb
sti
pop
cmc
jmp
das
addr16
mov
in
lret
daa
jg
out
jno
xlat
jmp
push
xor
insb
mov
cwtl
leave
fsubl
push
jmp
cmp
addr16
mov
cmpsl
popa
lea
hlt
and
es
sbb
push
xorb
dec
mov
dec
int3
lods
cmpsl
cmpsb
xor
sbb
nop
xlat
jae
push
or
stos
dec
inc
inc
mov
mov
in
mov
pop
inc
adc
sub
loop
popf
cli
icebp
mov
push
roll
sahf
xor
popf
add
inc
mov
stc
cmp
cmp
aaa
fsubl
push
xchg
clc
dec
addr16
mov
mov
out
pop
outsb
dec
sbb
loopne
cmp
int3
lds
nop
jecxz
rcrl
hlt
fs
inc
loope
cmpsb
divb
xchg
lahf
sub
leave
and
imul
lock
or
mov
jae
lods
pop
adc
movl
pop
xchg
dec
lods
popa
nop
xchg
pop
not
repz
mov
in
das
push
in
add
push
cmp
sbb
mov
sub
adc
push
cmp
mov
and
or
das
push
iret
or
fnstenv
pop
lcall
xor
jae
scas
das
notb
cmpsb
mov
pop
bound
mov
out
push
pop
sub
dec
add
push
jecxz
xchg
xor
iret
adc
fsubrl
movsb
out
cmp
test
and
inc
fld
lret
add
jge
mov
xor
sbb
jge
pop
gs
shufps
sti
jb
aam
test
jae
mov
lods
jg
fildl
push
adc
mov
mov
loope
sbbl
je
mov
dec
sub
fildl
pusha
imul
inc
push
cltd
lods
mov
shll
xchg
ss
or
cmp
sbb
xchg
sbb
and
out
pop
lea
push
out
mov
push
es
or
fxch
adc
mov
cmp
jle
inc
mull
push
inc
lahf
push
mov
hlt
mov
push
add
in
fiaddl
pop
cmp
loopne
adc
fwait
int3
and
add
xor
in
push
mull
push
and
mov
not
cmpsl
xchg
call
dec
xor
jp
leave
cmc
lret
mov
test
cmp
mov
lods
mov
mov
into
cmp
xchg
ljmp
test
lahf
mov
xor
je
fpatan
push
pop
jp
out
add
pop
sahf
dec
lods
mov
jle
jl
mov
lods
jb
push
popf
push
lahf
bound
ret
mov
jnp
rcll
sub
daa
push
mov
aas
xchg
xchg
push
dec
lds
pop
pop
das
inc
jnp
ljmp
push
ljmp
fs
addr16
mov
xchg
xor
mov
aad
sbb
int
mov
pop
repz
jge
je
mov
sub
sub
adc
or
decb
fstpt
loop
dec
inc
je
mov
xor
das
pop
xchg
jbe
or
push
mov
and
ret
std
nop
xor
mov
lret
fidivrs
adc
mov
test
xor
lods
stos
into
sahf
int3
clc
cmp
imul
aaa
adcb
fwait
je
fistpll
loop
xchg
inc
or
pop
push
int3
sbb
aad
add
test
imul
xchg
cmpsb
sub
je
gs
clc
pushf
add
fsts
movsb
dec
dec
fsubl
push
insl
xchg
movsl
sub
xchg
add
xchg
dec
jle
xor
mov
fwait
inc
push
pushf
mov
mov
jge
xor
adc
rorb
mov
scas
sti
lock
cmpsl
das
sahf
sub
shlb
es
roll
pop
ljmp
mov
and
imul
jnp
push
mov
idivb
and
jns
pop
dec
gs
mov
pop
pop
int3
shl
ss
xlat
xlat
mov
inc
popa
clc
out
add
gs
je
push
pop
dec
and
cmp
std
ret
push
sub
fnstsw
fisubl
lock
jns
mov
mov
sbb
dec
mov
cmp
fcomi
rorb
cwtl
call
mov
mov
fs
inc
xor
push
cmpsl
inc
add
fwait
das
jnp
gs
addr16
imul
gs
mov
in
mov
mov
dec
inc
int
popa
aam
scas
dec
call
call
adc
push
dec
sbb
adc
mov
js
sub
dec
jne
clc
jle
mov
ljmp
cld
pop
mov
xchg
cltd
xchg
jnp
xchg
and
mov
in
imul
ret
sub
into
and
mov
mov
add
pusha
jb
lds
popa
add
ja
push
into
shrl
test
push
insl
push
or
test
xchg
flds
sbb
xchg
xor
mov
ficoms
sbb
cmp
in
and
adc
inc
lds
sbb
xor
add
mov
test
aaa
mov
xor
jns
and
stc
clc
movsl
pop
incb
cld
insl
inc
sti
mov
and
in
dec
ss
inc
xchg
hlt
dec
inc
test
shll
in
sbb
push
int
xor
rclb
push
test
mov
out
push
xor
popa
scas
sbbb
add
lods
xchg
out
add
pop
addr16
pop
mov
hlt
cli
xchg
xchg
inc
loop
push
std
mov
inc
jbe
xchg
lock
scas
dec
cmpsb
push
scas
fcoml
cwtl
push
out
cmpsb
lds
ret
fcmovnb
pop
sahf
idivb
xchg
cmp
imul
ds
fisubl
xlat
mov
sbb
dec
mov
mov
or
mov
mov
xor
imulb
cmc
xchg
scas
lods
mov
mov
lahf
popa
push
jnp
mov
jmp
cld
das
push
sti
es
test
xchg
cmc
sbb
ss
stc
inc
pop
divb
and
filds
mov
test
mov
xor
cmp
aad
pop
pop
or
rolb
push
dec
mov
movsl
fsubrl
mov
inc
stc
dec
mov
imull
xor
test
daa
sub
jp
fistpll
fistps
test
mov
mov
int3
mov
adc
xchg
pop
ret
jg
mov
inc
cmp
inc
movsb
or
or
jge
jbe
cltd
or
or
xchg
insl
leave
leave
dec
push
out
inc
pushf
push
and
test
shl
pop
xor
insl
imul
mov
nop
mov
popa
lds
sbbl
or
and
orb
mov
push
lods
repnz
aad
stos
and
sub
mov
cmp
pop
outsl
xor
or
lcall
mov
inc
mov
lret
insl
orl
arpl
push
scas
test
popf
lock
mov
shl
cmpb
scas
pop
push
cmp
outsl
and
cmp
xchg
xchg
and
pop
mov
and
nop
xor
adc
xor
sti
out
sbb
sbb
inc
pcmpeqd
int3
ds
shll
inc
or
jbe
dec
mov
insb
enter
sub
mov
inc
mov
addl
xchg
lods
mov
push
lods
cmp
and
sahf
mov
fwait
lahf
pop
test
cmp
notb
pop
jo
ret
dec
push
fiadds
sbb
cmp
das
cmpsb
nop
sarl
jg
jle
mov
push
mov
dec
or
sub
mov
int
f2xm1
out
sti
inc
xor
in
adc
mov
or
insb
enter
fsubrl
inc
dec
mov
xor
xchg
sub
out
sbb
jge
pop
xchg
mov
add
aad
inc
test
scas
movsl
test
lods
dec
movsb
inc
adc
pop
in
mov
add
leave
mov
adc
jnp
xor
test
aaa
pushf
sbb
sahf
dec
jns
test
inc
sub
dec
in
lahf
aad
push
insb
mov
jmp
cld
imul
movsl
test
es
and
push
mov
mov
cmp
xor
adc
rolb
cmp
inc
or
xchg
imul
es
inc
mov
mov
dec
pop
shrb
cli
xchg
jne
bound
fsts
fcmovne
and
mov
scas
scas
cltd
inc
lcall
mov
ja
shl
pop
mov
movsl
pop
jle
sarl
add
fsubrp
out
xchg
lahf
notb
xchg
lret
pop
roll
push
mov
popf
xchg
sarb
jb
xor
scas
xchg
fldenv
fidivl
loope
fwait
cwtl
dec
fsubrl
imul
inc
pop
shlb
loope
and
outsb
stc
push
mov
inc
loopne
mov
int
sub
inc
jb
xor
fnsave
add
enter
fsubrl
out
inc
subl
pusha
jcxz
rclb
jo
cmp
mov
data16
pop
test
jno
imul
xchg
and
mov
lcall
insb
mov
gs
adc
and
cld
and
int3
or
cmp
xchg
sarl
test
stc
scas
inc
pop
insl
lods
xchg
test
pop
dec
imul
xchg
pop
in
fistpll
mov
xchg
cmp
cmp
sub
mov
jae
dec
sti
xor
push
xchg
mov
dec
dec
xchg
cmp
xor
mov
or
roll
mov
sbb
xlat
mov
sub
movsb
mov
mov
or
icebp
cmp
fdivrl
fwait
add
xchg
mov
and
lods
dec
into
jae
addr16
cmp
mov
mov
imul
cmp
test
xchg
out
jge
daa
jae
aam
mov
jmp
inc
paddb
mov
lock
jecxz
jnp
xchg
sti
pop
mov
fsubp
icebp
dec
and
pop
rorb
into
add
movsb
les
mov
movsl
dec
pop
cmp
in
jl
test
mov
clc
mov
int3
lea
nop
ds
ror
fwait
loop
jbe
cmp
xchg
int
int
mov
test
dec
sbb
fstpt
pusha
mov
imul
push
popf
mov
mov
cmp
jne
add
loop
into
test
fucomip
mov
inc
sbb
test
sub
aaa
jnp
or
pop
cmp
jne
std
add
std
les
push
inc
mov
mov
and
lock
push
lods
mov
add
adc
mov
faddl
mov
sub
xchg
xor
fcomip
cmc
lods
shrl
sti
xor
mov
xchg
jae
xor
add
mov
fldt
add
xchg
ja
aam
xchg
jae
sahf
jl
test
pop
lods
dec
mov
push
push
out
lds
sbb
loopne
es
mov
mov
push
pop
xchg
sahf
ljmp
mov
sbb
mov
jl
inc
or
loopne
mov
inc
xorl
jmp
mov
test
or
jnp
xchg
or
pop
ffree
imul
lret
nop
or
xrelease
in
mov
push
mov
imul
inc
sahf
leave
movsl
data16
push
cmpsl
cmp
movsl
jnp
movsl
int3
sub
mov
xor
hlt
sub
inc
xchg
leave
pop
xor
lods
inc
jmp
mov
push
sbb
jae
loope
xor
push
dec
js
gs
stc
mov
lods
and
clc
in
sti
push
mov
xchg
cmp
repz
cld
pop
test
xchg
loop
and
cmp
mov
int
pop
imul
fs
pusha
or
mov
sub
push
in
pop
out
inc
pop
lahf
xchg
mov
scas
jg
sbb
cmp
sbb
cli
jo
inc
test
push
mov
sbb
mov
jmp
sbb
dec
mov
aad
jp
es
pop
xchg
push
push
insb
repnz
dec
pop
cmp
push
jns
test
int
lods
scas
sub
xchg
jl
sahf
push
push
stos
and
cmp
int
jle
ja
fnstcw
and
mov
mov
daa
movsb
mov
pusha
ss
dec
jl
mov
fstps
int3
mov
inc
subb
jge
popl
push
divb
mov
addr16
lds
mov
sbb
lret
es
push
stos
pop
dec
mov
adc
fwait
dec
es
lods
pusha
cltd
int
inc
js
inc
xchg
xor
xchg
adc
jns
sub
test
push
push
xor
jne
fcoml
lret
daa
inc
mov
mov
lret
push
sti
lcall
or
js
cld
jb
or
shll
or
popf
push
mov
jp
pop
es
pop
jns
adc
push
cmp
movsl
hlt
cmpsb
push
aaa
popa
movsl
lods
pop
into
xchg
shr
shll
pop
sbb
sti
xchg
int
inc
imul
and
jl
sbb
push
xchg
lahf
or
stc
lods
hlt
out
jo
das
cmp
fnstcw
mov
cmp
addr16
xchg
push
pop
pop
add
sub
fcoms
mov
cs
sbbl
les
divb
and
adc
mov
fsubrl
ljmp
pusha
repnz
xchg
push
repz
pop
push
jg
aad
xchg
enter
std
mov
add
pop
xchg
sahf
add
mov
jne,pt
mov
mov
sahf
sahf
mov
xchg
into
pop
lods
and
dec
push
in
sub
fsts
cmp
jmp
subl
cmpsb
icebp
addr16
cld
outsb
outsb
mov
ja
or
xor
arpl
sbb
mov
test
or
cld
xchg
xor
lcall
or
les
dec
xor
xchg
ja
adc
out
push
in
mov
mov
sbb
fstps
or
or
ret
sub
lods
rclb
mov
out
mov
push
lret
push
test
mov
in
xchg
popf
mov
fidivrs
mov
das
gs
xor
scas
lcall
mov
cmp
int3
pop
fs
lods
int
or
dec
int
xor
inc
sub
ja
adc
mov
mov
iret
int3
sbb
neg
sub
mov
cmpsb
jg
jle
mov
xchg
lods
jae
cltd
xor
lahf
mov
xor
mov
inc
push
cmp
sub
mov
pop
fdivl
or
cs
lock
popa
aam
mov
dec
out
push
mov
mov
addr16
inc
cmpsb
fwait
push
inc
andb
addr16
xor
incb
fnstsw
fiaddl
rcl
xor
lock
cmp
sti
mov
dec
into
xchg
sbb
sbb
and
das
or
mov
lcall
push
lea
insb
out
cmpsl
mov
mov
xor
ficoms
lcall
pop
xor
fabs
lock
aas
dec
xchg
data16
cmpb
xchg
out
ret
xor
loope
xchg
jl
flds
cld
mov
pop
sbb
dec
jmp
push
stc
lods
hlt
sbb
push
addb
sub
pop
fsts
bound
lahf
mov
es
mov
rorb
ret
jl
lods
add
mov
jnp
leave
mov
std
pop
call
mov
out
and
sub
insl
cltd
aas
out
mov
fsin
fnstenv
cli
xchg
inc
out
xor
add
loope
adc
fldenv
fimuls
xor
movsb
lahf
in
loope
out
outsl
xor
out
int
mov
sbb
mov
int
xchg
or
in
push
fnstenv
mov
and
adc
sti
lds
scas
stc
sbb
lret
sbb
push
sbb
in
mov
test
cmp
mov
lods
test
popw
mov
dec
cltd
pop
mov
jp
cmp
push
jno
out
or
popa
inc
cmp
jae
cmpsl
scas
or
fisubs
xor
pusha
push
adc
adc
inc
loopne
jge
loope
test
aad
lds
mov
xor
pop
stc
push
mov
mov
gs
xchg
test
fmull
sbb
fcoml
lods
js
inc
sbb
enter
mov
jbe
movsb
jl
mov
mov
xor
out
mov
sbb
cmp
sub
or
jle
das
pop
iret
test
sub
push
jp
push
push
mov
shll
data16
jle
loope
and
mov
loop
cmp
adc
add
sbb
mov
nop
mov
sahf
cmp
pop
mov
push
push
scas
loope
into
cmp
in
in
out
data16
mov
icebp
adc
mov
outsl
xor
sbb
or
add
lahf
lods
mov
jo
xchg
mov
dec
fsubr
test
mov
push
pop
sbb
fstpl
aaa
xlat
inc
dec
push
testb
leave
negl
cmpsl
stos
sub
mov
ds
dec
popf
std
mov
xchg
pop
mov
jp
popl
cmp
mov
sbbb
test
mov
dec
push
sahf
ficompl
xor
test
pop
pop
inc
inc
lcall
hlt
out
lahf
fldlg2
dec
jmp
pusha
stos
inc
dec
scas
shl
in
lcall
jno
xchg
xchg
fmulp
popa
test
mov
adc
push
out
add
xchg
mov
ljmp
iret
sbb
or
jle
mov
xor
and
inc
or
pop
add
int
hlt
mov
or
pop
rcrb
cmpsl
andl
or
jae
sub
or
fld
pop
push
sbb
test
mov
jnp
jmp
in
and
int
pop
jmp
cltd
xchg
push
lods
mov
inc
daa
sbb
div
sub
xchg
inc
mov
xchg
mov
pop
push
adc
inc
out
push
xor
push
mov
inc
xchg
scas
inc
push
loope
lret
push
xchg
mov
icebp
add
mov
test
mov
repz
stos
in
out
lods
cmpl
hlt
mov
pop
int3
rclb
mov
mov
vunpcklps
loop
mov
dec
xor
mov
and
je
lods
and
insb
mov
adc
aas
loope
scas
int
mov
mov
syscall
xor
pop
iret
add
repz
loope
test
inc
mov
push
test
add
or
xor
mov
mov
icebp
inc
outsl
push
dec
mov
push
ja
jne
cmp
adc
pop
xchg
pop
add
imul
lods
inc
popf
negb
dec
mov
adc
pop
dec
push
insb
mov
daa
iret
dec
negl
pop
lods
inc
mov
sub
or
lock
jg
dec
repnz
lods
notl
mov
out
or
data16
add
mov
pop
jle
mov
in
sbb
adc
cwtl
cltd
mov
test
out
inc
push
testl
cmp
and
cmpsl
and
es
jle
push
int
fcomps
pop
loopne
mov
mov
lahf
fcmovnb
frstor
sbb
stc
fistpl
test
mov
jmp
and
gs
repnz
sbbl
or
call
add
push
insb
pop
stos
jnp
xor
addr16
and
pop
inc
pop
xchg
stc
push
gs
clc
fxch
je
jge
fs
mov
mov
and
mov
push
mov
mov
test
push
clc
xlat
cmp
mov
adc
sbb
loope
shrb
int
xchg
push
cmpsb
sub
jns
dec
push
push
sub
adc
xchg
xorb
xor
clc
mov
addl
adc
fcompl
adc
cld
in
jmp
or
xchg
inc
fstpt
lcall
xor
sahf
inc
push
gs
jb
and
pop
fldenv
movsl
data16
psubq
aas
jl
mov
inc
sarb
cmpsb
cmp
lock
push
rcrb
sub
fwait
jl
or
shll
push
mov
int
sub
outsl
repz
jbe
les
mov
out
cmp
adc
sti
stc
clc
ds
movsl
cmp
cmp
jbe
enter
jecxz
mov
xchg
mov
jbe
pop
jae
xor
inc
ja
fsubrs
repz
les
push
hlt
cmpsl
jg
popa
repz
jne
data16
dec
rcrl
mov
lret
mov
cmp
test
imul
lods
std
and
mov
test
jg
sbb
aam
lahf
icebp
mov
push
mov
mov
fldenv
mov
jb
or
jle
cli
cmp
hlt
pop
fld
js
push
sub
and
push
mov
arpl
adc
jle
addr16
out
push
dec
stc
ja
mov
mov
shlb
push
clc
test
inc
test
sbb
dec
jno
jle
ds
push
imul
std
fstps
sbb
leave
pop
incl
jl
push
mov
stos
xor
sub
mov
cs
or
inc
fsts
jno
push
mov
movsb
inc
mov
adc
int3
je
test
add
fstpl
jno
movsl
push
lods
xchg
bound
or
pop
movsl
int
loope
mov
daa
fbld
ret
mov
jge
testl
rcr
jg
and
inc
in
mov
cmp
in
lcall
lods
xchg
fnstcw
out
mov
xor
aaa
push
sbbl
loopne
addb
scas
rclb
in
xchg
stc
and
in
inc
lret
ja
cmpsl
mov
es
test
cltd
jp
dec
add
sub
xchg
ss
adc
and
ret
adc
and
push
jecxz
icebp
sub
dec
scas
icebp
add
into
jb
sub
xchg
mov
mov
scas
jo
inc
test
sbb
sbb
in
repz
movsb
stc
lods
imul
lods
sarb
add
test
subl
subl
fisubs
or
lods
push
pop
push
sub
push
pop
lds
cli
idivb
ror
cmp
sbb
jo
push
mov
jo
cmpsl
dec
cmc
movsb
aaa
fisttpll
fldenv
add
dec
pop
inc
dec
fs
xchg
cmpsb
pop
xchg
and
mov
or
imul
and
mov
push
sbb
in
aas
inc
inc
mov
xchg
mov
sbb
sub
insb
adc
int
mov
jmp
push
mov
mov
dec
push
repz
push
xsaveopt
cmc
inc
jecxz
mov
pop
loop
cmp
lods
loopne
data16
dec
addr16
enter
imul
push
test
sbb
mov
xchg
add
adcb
iret
inc
jge
add
cmp
push
mov
mov
push
aam
xchg
sub
jns
in
and
stos
ds
jle
hlt
jle
les
sbb
cs
in
and
movsl
aam
push
jge
push
and
test
pusha
fsubl
cwtl
ret
jmp
js
scas
dec
mov
jnp
and
int
add
shlb
fsts
fwait
mov
dec
lock
and
adc
inc
test
pop
int
js
sbb
mov
mov
pop
push
xchg
sbb
addr16
jae
jmp
in
sbb
repz
xchg
cld
and
adcl
add
pop
repnz
pop
out
xchg
sbb
test
add
jae
into
add
and
icebp
jo
mov
dec
cmp
shll
sub
loop
and
fchs
pop
adc
test
dec
mov
leave
icebp
outsb
push
test
int3
or
mov
push
hlt
mov
es
lods
and
fldenv
shlb
push
sahf
and
mov
sbb
jne
jnp
in
daa
inc
pop
cmpb
add
fists
jo
dec
fcmovnbe
call
sub
repnz
xchg
sbb
mov
or
cli
mov
cmp
lret
or
xchg
int
movb
mov
outsb
mov
dec
test
xchg
pop
aam
mov
fbstp
lods
fidivl
hlt
or
push
icebp
adc
jb
sub
ljmp
ds
arpl
call
pop
adc
cld
aam
psadbw
ss
fsubs
xlat
mov
push
cmc
push
push
jnp
repz
rolb
sarb
mov
sahf
in
pop
pop
fstps
lea
test
stos
push
dec
adc
inc
repnz
pop
loopne
in
xor
mov
fmul
cmp
out
pop
or
test
sti
int3
mov
sbb
mov
movsb
push
and
fsts
mov
movsl
cmpsb
cmpsl
jne
mov
inc
in
adc
out
ret
aas
push
push
mov
cmp
mov
ffreep
fldt
lods
pop
mov
dec
jne
scas
jns
sub
dec
jg
jp
ret
out
das
aam
pop
scas
cltd
sbb
xor
sbb
pop
xchg
addb
daa
adc
jae
add
push
out
stos
popf
xor
xor
test
xor
stc
push
xchg
shrl
jbe
shl
lods
sub
xor
cmpsb
mov
inc
add
cmp
lea
outsl
enter
pop
sbb
repnz
pop
mul
mov
jne
data16
or
add
push
inc
std
icebp
addr16
mov
mov
push
sbb
xor
sbb
lods
mov
jp
cmpsl
mov
push
mov
rcrl
fxch
movsb
sub
test
filds
int3
fwait
scas
cli
daa
cmp
sub
dec
cs
jl
xchg
cmp
cmpsb
lahf
cmc
jo
jb
aam
sarb
jmp
incl
lahf
jecxz
mov
pop
jbe
clc
jle
xor
jb
jnp
negb
imul
lahf
mov
mov
lods
scas
test
mov
lds
adc
fnstcw
xor
jns
les
cmp
repz
mov
mov
pop
cmp
ss
mov
pop
int
pop
lds
fcompl
jmp
xor
lds
sub
mov
addr16
jae
push
add
and
sub
inc
adc
push
test
pop
xor
divl
fldenv
add
mov
sti
sub
mov
mov
stos
cld
xor
fidivrs
push
pop
xlat
add
scas
mov
fwait
mov
xchg
hlt
dec
sub
ftst
mov
out
mulb
mov
popf
jge
sbb
mov
js
jl
imul
mov
fnstcw
xchg
inc
cli
mov
adc
loope
loope
xchg
lret
test
pop
mov
jle
dec
pop
or
mov
cmpsl
jb
cmc
mov
cltd
loop
fnstenv
std
mov
fnstcw
inc
add
or
imul
mov
mov
into
sbb
push
inc
and
pop
jge
jmp
loopne
cmc
cmpsb
cs
lds
jne
mov
pop
mov
rcrl
push
push
in
cmpl
mov
sbb
mov
shrl
into
pushf
dec
cmpsl
cmp
cmpsb
xor
cmpsl
mov
mov
push
int3
pop
cs
jle
lods
setge
xor
adc
push
outsl
ss
xlat
test
hlt
pop
push
aaa
sbb
inc
mov
fsubrl
cmp
xor
std
shll
xchg
inc
mov
repnz
push
loope
sbb
ljmp
or
in
add
xchg
add
xor
push
hlt
les
test
jle
adc
xchg
andb
dec
icebp
dec
xor
and
jns
insb
ret
aad
push
test
mov
scas
xor
shrl
lahf
inc
std
std
jo
addr16
pop
mov
pop
sbb
and
js
mov
fwait
jne
push
inc
jnp
aad
dec
adc
dec
jge
adc
rorl
enter
xor
adc
add
sbb
push
ret
xor
push
push
test
in
icebp
dec
add
rcll
and
xlat
mov
mov
int
imul
mov
mov
sbb
jmp
or
pop
test
sbb
push
mov
xchg
jns
sbb
nop
adc
iret
cmpsb
cwtl
mul
cltd
out
std
movsl
sbb
dec
push
mov
jno
test
mov
mov
test
dec
mov
mov
pop
pusha
in
or
mov
jo
jle
daa
xchg
mov
in
lahf
insb
das
xchg
xchg
or
test
pop
lds
or
dec
mov
idivb
pushf
and
xchg
js
les
movsl
lcall
mov
es
test
xor
xchg
push
mov
enter
std
inc
pop
xchg
ret
jecxz
les
enter
icebp
lods
clc
jae
ss
faddl
sub
adcl
push
rol
or
ss
das
aas
aas
es
lds
mov
mov
mov
jbe
test
fidivs
jnp
int
lret
sub
add
mov
inc
cmp
bndstx
lret
xchg
sahf
jl
jne
sti
sti
inc
jb
ja
fs
xchg
movsb
dec
inc
sti
repz
jo
cmp
rorl
cmp
test
out
inc
cmpsl
rcr
mov
rclb
cmp
mov
add
or
out
mov
sbbl
sbb
dec
fldt
xchg
cmpsb
xchg
add
sahf
mov
jle
out
gs
jae
daa
adc
mov
bound
mov
pop
jae
lock
mov
aas
mov
sti
cs
int3
mov
mov
xchg
lahf
adc
fsubs
cltd
test
icebp
cmp
jo
sub
push
push
stos
mov
cmp
shrb
stos
jne
bound
loopne
or
add
std
xor
ret
sub
push
test
pop
stos
mov
push
stos
imul
mov
loopne
mov
adc
pop
sbb
movsb
test
mov
xor
jnp
jecxz
scas
inc
scas
cmp
push
xchg
jae
bound
push
sub
cmp
push
mov
aad
cmpl
xchg
lahf
pop
push
test
xchg
and
dec
or
fwait
mov
int
and
inc
xchg
add
push
cmc
cmp
adc
fisubrs
cli
fisubs
es
movsb
jno
ret
and
js
orl
jp
stc
xor
pop
inc
cmpsl
out
jp
flds
mov
loop
mov
stc
mov
inc
cmpsl
int
sub
pop
push
cmc
sbb
lds
mov
int
pushf
hlt
daa
test
push
and
mov
iret
mov
push
sahf
mov
mov
or
mov
cs
xchg
movsb
in
pusha
pop
icebp
inc
xor
and
and
clc
jns
out
insb
push
sub
mov
inc
push
xchg
imul
outsl
push
sub
pop
in
push
jae
dec
xor
add
fxch
xor
mov
xchg
jae
dec
and
sbb
jl
push
aas
mov
mov
jecxz
aas
mov
mov
adcb
in
xorl
fcompl
and
push
fidivrl
aam
inc
and
xchg
movsl
cmp
jne
xchg
std
mov
sbb
add
mov
mov
cmp
cmp
test
das
jmp
push
jb
add
push
out
sub
cmp
das
shll
outsb
cmpsb
sub
mov
int3
mov
outsl
pushf
sbb
cmp
daa
sbb
mov
pop
xor
inc
in
mov
hlt
jle
xlat
mov
mov
aam
imul
xlat
and
flds
mov
andb
inc
xor
aam
jp
or
nop
inc
frstor
sub
cmpsl
mov
lock
and
pop
ficoms
repz
mov
rcrl
ljmp
mov
push
add
popa
mov
out
xchg
scas
in
xchg
and
dec
lret
fs
cmpsl
repz
fsubrl
testb
test
pop
hlt
mov
int
gs
adc
mov
xor
test
sbb
mov
fisubrl
dec
mov
push
pop
sahf
mov
mov
push
std
arpl
leave
mov
sub
push
stos
nop
push
ja
clc
fdivs
sti
bound
flds
sub
push
in
xor
pop
daa
nop
xchg
inc
out
jp
inc
cmp
pop
push
xchg
lahf
movsl
dec
mov
push
mov
and
cmc
fdivrp
sbb
cld
xchg
jno
sti
mov
mov
sbb
cmpl
fsubrl
and
sarb
outsb
addr16
mov
pusha
adc
popa
pusha
jmp
mov
pop
imul
mov
icebp
ljmp
push
test
pop
std
lock
test
inc
xchg
adc
out
mov
hlt
movsl
sub
nop
loop
clc
cmp
fwait
and
dec
lods
mov
rolb
adc
das
and
sbb
pushf
cmpsb
inc
ficompl
mov
mov
mov
mov
shrl
daa
scas
into
inc
pop
sbb
imul
mov
xchg
mov
hlt
add
fldz
jl
pop
push
inc
or
leave
in
test
mov
jns
sub
test
icebp
mov
les
mov
shl
scas
jbe
mov
js
and
adc
adc
mov
pop
sub
pop
cmc
pop
mov
and
mov
push
fucompp
test
std
out
andb
adc
jecxz
aaa
ds
leave
mov
xor
lcall
cld
lcall
ficoms
imul
jle
lcall
xor
insb
fnstenv
sub
insb
fcmovbe
and
jl
bnd
fchs
gs
and
js
std
adc
aaa
push
xchg
push
push
xchg
mov
and
test
jns
dec
iret
mov
cld
rorb
repnz
lods
int
gs
sbb
inc
sbb
out
mov
lds
mov
sbb
js
sbb
idivb
bound
push
cli
arpl
mov
stos
dec
mov
js
daa
xchg
test
stos
cmc
jno
or
mov
sbb
and
push
sbb
dec
insl
inc
xchg
push
mov
fdivl
imul
push
dec
bound
test
test
xlat
jnp
ret
aad
pop
aam
and
cmp
arpl
cli
xor
sbb
and
push
lock
jno
sarl
lock
nop
and
push
adc
mov
popf
xor
sbb
mov
adc
mov
sub
mov
imul
dec
sahf
fldcw
test
cmp
inc
scas
mov
xchg
cmp
outsb
mov
cmpsl
aad
pop
jmp
push
pop
dec
aas
sub
aam
or
repz
or
es
mov
push
je
dec
mov
pop
arpl
sbb
stos
repz
sahf
mov
repnz
mov
icebp
mov
dec
movsl
inc
subl
push
fs
js
cmp
popa
inc
add
sub
or
pusha
mov
es
jbe
test
fwait
and
dec
mov
test
cmp
fadds
mov
xor
inc
add
lods
and
push
xor
imul
xchg
xor
aad
imul
mov
dec
sub
inc
loopne
in
sahf
add
mov
dec
push
cmpsl
adc
fdivrl
or
out
out
jae
adc
push
repz
add
popa
js
loopne
xchg
inc
cmpsb
mov
dec
xchg
repnz
int
and
pop
repz
cmp
push
leave
mov
int3
xchg
aaa
mov
lcall
sub
int
sub
xor
std
sub
cmpb
pop
mov
sti
imul
flds
cmp
mov
dec
sti
std
stos
xchg
jp
dec
repz
sahf
out
pop
mov
mov
xchg
cmp
jne
jecxz
shrl
pop
ss
push
or
mov
xchg
inc
iret
les
jae
sub
push
push
mov
scas
jnp
and
mov
jmp
cmp
mov
xchg
gs
mov
sbb
popa
sub
rcrb
int
push
mov
mov
clc
sub
outsl
lahf
stc
adc
jmp
mov
hlt
lret
test
add
jne
push
or
adc
cs
sbb
mov
cmp
add
mov
mov
lods
lcall
aad
xor
lock
popf
lods
lret
out
in
movsl
or
rcrl
ss
jmp
xchg
test
push
sahf
lods
dec
out
xor
sbb
ffree
rcl
aaa
cmp
cmp
je
lcall
ds
loop
jl
hlt
bound
jno
mov
xchg
mov
inc
fldl
test
out
in
push
js
aad
cmp
imul
inc
rorb
push
jae
mov
int3
call
xchg
inc
ret
inc
xchg
and
and
ret
das
add
out
dec
das
add
push
mov
or
pushf
scas
mov
mov
js
inc
out
imul
adcb
shll
xchg
adc
push
std
into
fnstcw
push
in
push
pop
loopne
int
adc
sbb
int3
iret
in
pop
mov
xlat
dec
out
pop
fsubrl
dec
push
push
adc
jmp
cmp
pushf
repnz
mov
jae
stos
out
inc
jo
das
mov
pop
outsl
mov
cld
hlt
dec
out
scas
daa
push
lret
cmc
sbb
ss
daa
stos
cld
cs
mov
test
xchg
jl
pop
inc
jp
cs
mov
cmp
lea
pop
test
mov
dec
lcall
push
scas
daa
loope
test
xchg
scas
in
stc
and
inc
out
or
jge
xor
jne
mov
and
and
pop
jne
cltd
mov
mov
sub
sbb
hlt
and
adc
add
in
xchg
ror
push
test
lcall
pusha
mov
xor
mov
fldenv
dec
mov
xlat
in
fcoml
sbb
movb
xchg
es
jns
xor
ja
push
sahf
mov
add
ljmp
icebp
cmp
push
jmp
lcall
popa
mov
mov
push
in
int
and
out
dec
out
mov
mov
arpl
icebp
pop
mov
xor
aad
mov
sub
jge
mov
inc
je
es
cmp
test
stos
mov
in
sub
push
dec
das
imul
and
pop
ss
mov
sub
testb
pop
pop
or
stos
loope
dec
data16
out
dec
arpl
lds
mov
sub
sub
in
mov
std
mov
imul
fwait
in
imul
test
fnsave
dec
outsl
mov
cmp
int
mull
and
dec
push
push
sub
enter
popa
fwait
cmp
daa
and
jmp
pusha
test
std
popf
sbb
mov
notl
sbb
lods
cmpl
movsb
push
mov
mov
add
sub
dec
fistl
sahf
lcall
mov
testl
add
scas
jb
dec
gs
push
pusha
icebp
mov
negb
insl
push
cld
and
sbb
in
lods
je
pop
pop
mov
call
pusha
shll
push
test
mov
lods
adc
mov
mov
or
mov
mov
std
lods
sbb
jmp
push
cmpsb
jno
fsubr
push
mov
jge
fldt
scas
pop
mov
daa
aaa
fstpl
xor
cmp
xchg
pop
gs
sub
int
shlb
jnp
xchg
sub
pop
push
fxch
dec
pop
incb
mov
inc
out
fwait
sbb
in
or
repz
test
out
scas
mov
sbb
mov
enter
or
xchg
push
or
mov
mov
push
mov
xchg
sbb
sti
adc
mov
mov
mov
mov
xchg
cmp
inc
arpl
loope
push
mov
xchg
ret
sub
push
cmp
jb
sbb
das
hlt
test
je
adc
outsl
ja
aam
dec
jp
ret
sub
sti
jecxz
inc
stc
imul
cmp
mov
jle
repnz
in
mov
xor
lock
les
mov
scas
fldenv
inc
mov
rol
popa
scas
sbb
out
push
and
pop
cmp
loop
hlt
ret
aad
sti
jno
loopne
ds
cwtl
stos
imul
mov
nop
fidivs
arpl
push
aam
es
addr16
xor
in
sbb
pop
sub
mov
lds
lock
pop
sbb
jb
sbb
mov
sub
out
popf
mov
pop
xlat
adc
testb
jecxz
mov
sbb
mov
jecxz
fwait
or
inc
push
jo
push
jp
sub
lret
push
in
push
cmp
test
dec
push
xor
mov
iret
fsub
xchg
jecxz
jae
clc
jae
imul
movsl
jo
pop
mov
push
push
js
jle
push
or
pop
out
cvttps2pi
mov
pop
aad
stos
imull
cmp
mov
pop
mov
ljmp
sub
mov
inc
push
adc
clc
mov
ss
roll
faddl
sbb
mov
sbb
in
insb
pop
and
cltd
cmpl
push
cmp
jnp
in
pop
sbb
mov
jnp
subl
sub
cmp
daa
fsubl
aaa
stos
jge
jbe
adc
sub
sub
pop
bound
repnz
dec
sbb
fdivs
test
daa
scas
sarb
inc
inc
mov
out
lcall
cmp
sbb
xchg
mov
and
lcall
push
jae
gs
jmp
lret
es
clc
gs
jl
int
sub
aas
and
das
push
in
gs
xchg
fcomip
fs
cmp
xchg
pop
hlt
mov
dec
fstp
xchg
adc
xor
test
addb
dec
std
mov
ret
mov
scas
cmpsb
dec
dec
xor
arpl
mov
roll
sbb
cs
sub
push
cmp
sti
flds
push
sbb
test
cmp
fistps
call
fmulp
push
push
cmp
fnstcw
dec
mov
or
scas
dec
cmp
cld
fsub
stos
sub
jo
xor
dec
aam
sbb
repnz
dec
pusha
lods
xchg
mov
ja
adc
addr16
pop
rcrl
dec
inc
sarl
jle
xchg
imul
and
sub
mov
sbb
xlat
in
add
pushf
pusha
sbb
or
or
mov
bt
inc
mov
mov
fsub
xchg
or
adc
sbb
and
rorl
jle
pop
gs
jmp
or
dec
jne
ja
jnp
mov
fcmovne
jmp
jae
test
and
fcomps
push
mov
inc
add
testb
pop
cmp
pop
bnd
test
pop
popa
inc
stos
pop
cwtl
mov
mov
push
loope,pn
je
add
fmull
xor
add
dec
sub
mov
loope
data16
mov
mov
dec
pop
sti
push
lahf
mov
push
fsts
punpckhdq
decl
out
test
mov
mov
fs
js
out
pushf
aam
daa
mov
rol
scas
rcr
mov
das
lcall
loope
mov
mov
mov
mov
test
pop
lods
in
sub
inc
inc
adc
add
outsl
test
inc
scas
scas
xor
sti
xchg
xlat
cmc
in
jns
mov
scas
mov
mov
repz
sub
xlat
adc
ret
mov
cmpsl
adc
inc
xchg
cmp
nopl
jno
scas
lret
gs
mov
out
jge
mov
cmp
mov
xchg
and
sbbb
inc
je
xor
jns
lahf
dec
addl
xchg
ss
push
mov
std
mov
paddw
mov
dec
je
or
lods
loope
mov
fadds
adc
jbe
push
cmpsl
sahf
mov
sub
inc
mov
test
pop
in
xchg
push
push
rolb
fsubp
subl
std
aaa
loopne
pop
pop
data16
xor
sti
sub
adc
push
iret
lods
and
dec
idivb
lret
or
fadds
adc
push
test
pop
jle
popa
cmp
or
push
ljmp
adc
fisubs
inc
movsl
and
push
jp
or
mov
in
or
das
mov
sub
mov
cmp
int
je
cmp
pushf
je
lahf
pusha
fs
mov
test
adc
dec
test
subb
dec
add
pushf
out
dec
dec
jno
fld
mov
sbb
std
sub
pop
xor
mov
sbb
popf
jno
cli
jb
xor
push
push
inc
sbb
mov
call
popa
mov
ljmp
addb
jns
in
adc
jo
pop
fnstcw
shlb
outsl
fidivrs
and
lds
mov
mov
stos
add
dec
xorl
hlt
jno
inc
jp
and
lods
pop
jbe
jne
rcr
sub
mov
lea
pusha
xor
sub
insb
imul
frstor
adc
jnp
fwait
mov
stos
fdiv
fwait
in
jmp
dec
and
scas
divl
adcl
mov
inc
test
pop
imul
fildl
shlb
dec
dec
push
xchg
mov
test
fnstenv
loopne
xor
sbb
pop
mov
aam
icebp
loop
mov
mulb
inc
mov
xchg
pop
mov
fxam
das
rcrl
mov
pop
outsl
int3
sahf
jge
sbb
arpl
out
cmp
or
std
sub
outsb
in
push
out
jns
mov
test
lock
inc
loope
push
insb
stc
imul
cmp
jae
dec
test
xchg
mov
pop
aad
test
xchg
push
int3
sbb
jmp
xchg
cmp
xchg
xor
xor
repz
stc
sub
imul
lret
rcrl
imul
jbe
mov
xchg
dec
cli
cwtl
mov
sbb
xchg
push
sub
or
inc
out
pop
loop
dec
rolb
add
dec
inc
mov
lock
mov
test
mov
pop
into
xlat
scas
dec
xor
pop
ja
adc
push
inc
das
jne
orb
imul
mov
jg
mov
mov
pop
or
lods
mov
sbb
xchg
iret
and
out
cmpb
mov
cmpsl
test
mov
jnp
xchg
addr16
fmull
fstps
mov
pop
rcr
sbb
mov
lds
add
lret
push
int
test
aam
test
test
or
mov
rcll
ja
xchg
push
jb
fimuls
sarl
xchg
mov
cmpsb
es
jg
sbb
ret
call
mov
out
xor
aam
xchg
loopne
hlt
or
cltd
mov
sub
mov
pop
xchg
lods
add
ret
insb
jb
cmp
mov
popf
xor
imul
mov
xchg
xor
pop
cmp
mov
aad
mov
in
fsubrs
nop
pop
test
cltd
pop
cmc
xor
das
cli
mov
shll
test
add
lods
inc
cmpsl
jbe
mov
sub
test
pop
pushf
movsb
dec
insb
fisttpll
cmp
push
dec
jmp
movsb
out
lahf
lcall
les
push
cwtl
mov
lods
push
sbb
inc
pop
sbb
mov
ljmp
and
and
lahf
mov
cwtl
add
dec
mov
lds
or
pop
inc
std
or
cmpsb
dec
and
inc
fxch
int
mov
add
jns
add
dec
ror
xchg
mov
dec
fisubrl
inc
out
lods
fsts
jb
std
lea
mov
test
lea
cmp
test
in
sbb
vpcmpgtd
jle
push
rcr
aad
dec
mov
es
stc
mov
inc
dec
push
mov
inc
test
ret
gs
and
loopne
fstpt
pushf
aam
das
xor
enter
addr16
mov
sbb
jp
gs
int
dec
push
scas
outsb
lods
adc
mov
adc
sbb
not
cmp
xchg
push
int3
loop
std
pop
cmp
pop
adcl
push
mov
mov
cmp
mov
xor
scas
stc
shrl
fsubl
xchg
ficompl
push
xchg
xorb
xlat
or
pusha
and
repnz
dec
cltd
xlat
scas
imul
adc
roll
jg
cmp
incb
popa
sbb
out
scas
dec
popf
in
sub
repz
adc
movsb
fnstenv
mov
mov
js
ret
imul
cmc
dec
enter
mov
mov
pop
push
and
ds
sub
out
cmp
push
popf
orb
jb
clc
jg
sarb
jp
dec
pop
fildll
lret
or
xor
cmp
xchg
movsb
fs
xor
fnstcw
icebp
hlt
dec
xchg
fbld
mov
pop
aas
push
lahf
mov
jns
fidivrs
in
and
addr16
sbb
scas
aam
push
adc
jle
int3
sbbb
outsb
pop
lahf
fstps
scas
mov
outsb
es
stos
ljmp
fxch
test
pop
mov
mov
dec
push
stos
shrb
jg
insb
pushf
pushf
push
das
xchg
cmp
mov
les
cmp
sbb
mov
sbb
inc
out
rcrl
dec
xchg
loopne
dec
scas
xchg
js
ud0
add
mov
repz
insb
aam
pop
in
aam
mulb
dec
cmp
sbb
or
dec
iret
rcrl
data16
mov
pop
scas
mov
cmpsl
dec
jnp
add
pop
test
cmpsb
lods
in
icebp
scas
inc
test
ja
pop
cmp
add
inc
es
enter
cmpl
sti
negb
xchg
inc
in
aad
xchg
mov
mov
xchg
sbb
fdivl
cmp
out
test
rolb
pop
loope
xlat
push
into
pusha
cli
insb
jl
mov
aad
add
sbb
in
ds
faddp
ficomps
xchg
mov
call
adc
push
inc
stc
mov
pop
imul
add
sub
xor
out
xor
pushf
test
jae
push
mov
dec
jnp
dec
fnstenv
jge
dec
jp
insb
push
imul
shlb
add
mov
std
jnp
push
jbe
enter
test
std
dec
nop
cmp
dec
jp
out
cmpsb
sbb
xor
sbb
loope
es
sub
mov
flds
aam
das
test
out
mov
mov
xor
call
out
imul
out
xchg
cmp
mov
jmp
test
pusha
mov
sbb
lock
iret
push
jle
lea
stc
data16
inc
lret
sarl
cmpsl
movsl
dec
cmp
mov
mov
mov
sub
or
jns
stos
std
in
test
push
cltd
add
fabs
stos
dec
fldcw
lods
fisubl
push
js
mov
icebp
sbb
icebp
mov
jp
cs
clc
fldl
adc
push
cmp
not
mov
fmull
adc
xchg
clc
scas
aaa
xchg
dec
and
call
xchg
sub
jbe
dec
flds
push
out
popa
rol
rcrb
pop
xchg
ja
aad
xchg
xor
insb
fsubl
push
in
cli
xchg
ror
lcall
dec
cmc
ss
push
gs
push
dec
sub
fdivrs
push
addr16
xchg
call
and
add
cmp
leave
pop
clc
xchg
test
cmp
and
imul
or
mov
test
or
or
loop
mov
mov
fsubl
ja
std
or
or
sub
clc
test
xor
addr16
in
lods
dec
push
enter
out
cmp
jge
dec
jnp
loopne
mov
pop
jae
cli
xchg
int
and
push
pop
pop
mov
sub
gs
and
std
inc
pop
hlt
out
sbb
pop
cmpsl
mov
cmc
in
pop
lods
enter
lret
adc
mov
sbb
push
loop
cld
scas
enter
insb
pop
xchg
int3
cmc
testl
adc
xor
fbld
push
dec
andl
sub
fwait
rcll
push
jp
push
mov
sbb
mov
mov
test
or
lcall
mov
and
icebp
ret
mov
mov
cwtl
xor
push
and
push
stc
mov
xor
pop
flds
mov
lock
mov
mov
inc
popf
xor
decb
and
jl
fisubrs
nop
push
mov
icebp
mov
mov
pop
dec
out
out
and
stos
fidivl
mov
mov
lcall
scas
inc
out
dec
xchg
sub
lds
ja
repz
xchg
pop
cmc
dec
lret
pop
aad
dec
hlt
sub
movsl
and
xor
int
push
not
repz
pop
insb
cmp
push
cltd
mov
mov
lds
mov
mov
mov
mov
xor
mov
stos
mov
jno
cmp
push
pushf
jg
dec
cli
movsl
hlt
arpl
xor
fdivrl
pop
dec
mov
mov
popl
cmp
mov
pop
xor
lahf
popf
mov
cli
xor
mov
dec
addb
adcl
sub
xchg
addr16
jbe
add
in
jle
sti
mov
fsub
scas
sahf
xor
and
and
roll
xor
sbbl
fnstcw
and
les
mov
add
xor
push
inc
ja
movsb
mov
xchg
imulb
inc
imul
inc
test
add
or
cltd
adc
fsubs
inc
popa
pop
jnp
jno
lods
int3
add
adc
mov
push
cmpl
inc
int
daa
jo
cmp
mov
or
adc
cmp
push
jp
push
cmp
mov
rcr
out
test
mov
inc
shl
sub
loope
mov
in
in
sub
jne
arpl
popa
std
andb
arpl
mov
not
outsb
push
and
mov
add
sarl
mov
jnp
adc
movsb
outsl
rcll
sbb
mov
xor
stc
xor
dec
mov
push
xlat
fadds
jne
pop
dec
inc
cmpsb
loopne
std
jp
aaa
adc
popf
sbb
std
cld
pop
fmull
xchg
pop
movsl
pop
add
data16
xchg
pmaxub
fdivr
into
shll
jo
addb
adc
adc
orl
lods
out
mov
sub
cmp
adc
mov
sbbl
test
fiadds
xor
mov
scas
std
mov
xchg
les
adc
jmp
pop
pop
fildl
popf
jns
sarb
xchg
test
sti
sub
adc
inc
push
mov
jbe
push
mov
inc
sti
xchg
pop
jge
jne
in
xor
or
fsubs
scas
stc
xchg
pop
pop
repnz
pop
push
sarb
call
jo
push
iret
inc
and
shl
sub
orl
mov
test
nop
mov
pop
cmp
std
fsts
sbb
push
insb
xchg
jl
lock
xchg
repz
int
add
and
cwtl
loopne
pushf
out
jb
aaa
fnstcw
lods
scas
adc
jmp
cmp
jl
sub
lcall
or
dec
jp
sbb
jnp
adc
jnp
pushf
xchg
xorl
sub
mov
fdivp
mov
cmp
push
cmp
cmp
lcall
std
mov
jb
cltd
sbbb
pop
pop
in
fwait
aam
and
in
aam
test
cld
lret
cmp
in
in
pop
loope
sub
add
mov
mov
or
jns
loop
pop
test
mov
dec
imul
mov
cmp
mov
js
adc
mov
aaa
mov
dec
xor
push
xlat
xchg
outsb
sbb
jb
ficomps
mov
call
xchg
clc
sub
in
iret
and
clc
leave
add
in
jb
mov
in
pop
test
leave
and
cmpsl
adc
and
mov
cltd
cmpsb
fldenv
dec
xchg
daa
xor
mov
ljmp
mov
cli
mov
dec
adc
scas
ja
popf
sbb
pop
sahf
cmp
hlt
lods
sub
mov
inc
sahf
jno
dec
mov
in
pop
pusha
mov
cltd
pop
fldenv
sub
mov
std
dec
mov
es
mov
insb
push
adc
pop
stc
mov
aaa
test
pusha
popf
push
adc
das
mov
shrl
gs
sti
int
ja
daa
in
int3
test
movsl
cs
out
lea
push
cmp
addl
fwait
adc
jl
xchg
mov
sbb
orb
insb
mov
icebp
pop
daa
adc
cmp
jbe
xchg
sub
mov
sbb
test
aas
xor
test
jecxz
pmulhw
out
aaa
and
inc
cmpb
test
fildll
std
mov
mov
xchg
test
iret
cmpsb
out
or
repz
in
mov
mov
stos
lods
mov
lahf
movsl
jmp
mov
les
ret
bound
pop
into
jecxz
shrl
adc
flds
pop
std
popf
sahf
jp
and
dec
xchg
jb
and
xchg
dec
mov
test
xor
sub
jmp
add
jge
lcall
xchg
push
mov
ja
sub
es
jecxz
scas
rcrl
lods
aam
test
shlb
push
mov
sub
sbb
jecxz
lcall
inc
std
imul
fsts
sub
mov
pop
flds
fwait
loop
hlt
jmp
mov
jle
pop
fsubrl
in
mov
cmp
lret
jbe
or
imulb
testl
ljmp
pop
cltd
adc
mov
adc
dec
fxch
push
pop
sub
repz
sbb
cmpsb
fldcw
js
scas
out
das
cmp
inc
sahf
dec
push
lods
mov
test
out
and
scas
pop
or
cwtl
cli
push
loopne
test
cmpsb
sti
mov
cmp
mov
xlat
and
sub
addr16
out
cs
jae
pop
in
cmp
addr16
fdiv
xchg
out
loope
hlt
in
hlt
xchg
adc
sub
movnti
and
stos
imul
popf
mov
pop
scas
add
mov
fistl
jnp
dec
sub
lods
push
es
dec
and
cmp
xchg
pop
cmp
negb
mov
mov
pop
cld
mov
pop
into
sti
pushf
sbb
into
stc
lret
shll
test
adc
test
ficomps
mov
fdivrl
mov
dec
mov
pushf
lahf
test
jp
inc
out
and
hlt
xor
cs
pusha
lret
inc
je
xchg
ror
popa
sahf
int
push
mov
and
std
mov
xor
mov
jge
movsl
push
popl
jle
pop
xor
mov
std
lods
ss
scas
es
cmpsl
cmpsb
mov
pusha
test
imul
movsb
sbb
rclb
push
add
push
in
jg
lods
call
data16
mov
std
stos
lods
mov
sbb
xor
xor
dec
or
cs
in
pop
aam
dec
push
sbb
xchg
into
sbb
dec
cmpsl
lds
dec
imul
inc
mov
push
cmp
mov
mov
pop
cmp
pushf
dec
icebp
pop
mov
movsl
push
inc
shlb
push
pop
mov
addr16
gs
std
dec
dec
dec
mov
inc
lods
aas
add
xor
sbb
push
cmpsl
sbb
testl
dec
hlt
repz
test
mov
jnp
test
jmp
mov
fstl
dec
add
pop
xchg
sbb
fninit
xchg
movsb
jbe
mov
mov
shl
and
ja
cmp
jmp
enter
std
xor
fnsave
stc
mov
pop
inc
jb
jb
xchg
cmp
rorb
dec
hlt
xchg
cmp
sbb
and
aaa
andl
mov
jno
xor
push
fsts
xchg
mov
fcoml
jnp
mov
xor
inc
mov
mov
jle
jmp
leave
lahf
pop
dec
ljmp
cmp
push
xchg
mov
lods
sub
lahf
xchg
in
les
stos
scas
jno
rolb
sub
negl
inc
daa
fldenv
pushf
hlt
jo
pop
push
mov
jp
and
add
xrelease
push
int
xor
adc
or
mov
fcmovnb
cs
popa
mov
frstor
into
add
push
sbb
jno
mov
cmpsb
jb
sub
xor
hlt
fldcw
mov
test
jne
scas
push
jns
jp
out
std
mov
cmc
or
frndint
mov
rcrl
sbb
mov
mov
mov
xor
out
negb
repz
mov
sbbl
push
cmpl
or
pop
gs
shll
cmp
in
xor
test
xor
mov
sbb
imul
xor
xor
fwait
xorb
test
repnz
stos
cmpsb
mov
data16
jp
flds
pushf
test
mov
push
mov
arpl
cli
jns
add
cli
push
out
jmp
dec
fcoml
push
jns
sub
pop
stos
adc
and
push
push
ss
sbb
pop
pop
and
mov
cmp
push
xor
std
es
xor
clc
mov
aam
popf
jge
mov
mov
fsts
mov
test
arpl
cld
sbb
xchg
test
jl
dec
fstps
je
and
es
ja
inc
movsb
shlb
inc
add
cmpsl
popf
out
pop
mov
cltd
xchg
test
xor
in
aam
fs
rcll
add
jns
mov
loopne
mov
inc
cmp
jns
je
std
fbstp
sbb
std
mov
ljmp
aam
ss
cmp
or
adc
fucom
in
inc
and
mov
mov
and
mov
mov
ja
and
mov
xor
sbb
roll
xor
lock
pushf
scas
dec
and
jecxz
and
sub
mov
and
sbb
mov
cli
lahf
test
push
testb
test
xorb
jecxz
gs
jo
ljmp
imul
sbb
inc
add
inc
in
std
pop
scas
add
stos
mov
test
adc
lcall
sbb
cld
xchg
inc
xchg
lock
popa
cmp
mov
xchg
mov
rcrl
fxch
add
mov
cmp
jmp
fidivs
sti
and
and
mov
push
stc
adc
jmp
xchg
or
imul
inc
das
fistl
and
fsubl
mov
outsb
jl
cmp
ljmp
fs
adc
pop
imulb
jbe
test
fdivrp
jno
outsb
mov
in
pop
jae
cltd
lods
mov
xor
push
sub
xor
cld
aaa
or
mov
cs
sbb
enter
sarl
pop
mov
sub
jns
into
jecxz
mov
push
xchg
or
or
and
out
aaa
jb
sbb
push
push
stc
mov
lret
pop
mov
mov
gs
pushf
mov
int
mov
xor
or
adc
stos
xchg
test
or
test
inc
ja
in
pop
ja
sbb
shlb
cmp
std
sbb
mov
xor
movsl
pop
jmp
cld
fadds
fwait
inc
loopne
push
loope
stos
xor
movsb
xchg
cmp
and
sub
and
rclb
sbbb
push
cli
pop
movsb
or
mov
int
mov
in
or
jns
add
fs
and
mov
mov
dec
mov
jb
push
lret
mov
sub
shlb
pop
inc
adc
dec
rcrl
lds
popa
inc
imul
jge
rcrb
lret
and
pop
mov
mov
cltd
movsb
int
lods
in
enter
xchg
mov
xchg
add
push
movsl
addr16
sub
icebp
shlb
pop
popf
psubusw
hlt
dec
and
test
das
xchg
dec
jbe
inc
ret
fnstsw
test
das
or
jno
mov
adc
out
push
mov
daa
sbb
or
sbb
mov
lcall
mov
xchg
xor
ficomps
sbb
aad
mov
imul
inc
movsb
mov
insb
push
fstp
mov
inc
pop
inc
jmp
xor
sahf
inc
or
das
mov
jno
test
xchg
ret
inc
int3
rcrb
fiaddl
sti
ret
into
loope
and
rcr
add
fsts
cmpl
subl
adcb
dec
sub
xchg
mov
rcrb
pop
adc
xchg
cs
dec
out
in
sub
push
mov
push
mov
xor
lret
pop
and
xchg
cmp
add
push
dec
fldcw
outsl
inc
imul
jno
aaa
and
mov
mov
adc
movsb
lds
movsl
cltd
shll
out
mov
jnp
dec
push
das
push
loopne
outsb
out
out
jns
shr
mov
xchg
sarb
mov
les
fistl
test
dec
addr16
hlt
bswap
leave
cmp
aas
sbb
and
add
cmp
repz
arpl
movsb
pop
outsl
jle
jmp
mov
mov
adc
mov
push
push
insb
out
mov
and
mov
pop
lret
sub
out
xchg
mov
into
test
test
fneni(8087
pusha
cmpsb
xchg
fwait
mov
sub
mov
sahf
sbb
out
loop
sub
test
or
flds
lret
push
inc
gs
cmp
mov
sbb
pop
hlt
mov
ds
lcall
add
xchg
popf
push
pop
push
hlt
jo
cmp
jl
mul
jge
cmp
xchg
adc
lahf
dec
mov
leave
out
jecxz
push
addr16
xchg
movsl
push
pop
roll
xor
inc
xlat
xlat
lea
cmpsl
addr16
je
push
pop
andl
inc
dec
push
add
add
ret
and
and
mov
pop
adc
mov
xchg
mov
lahf
test
bound
and
cld
fwait
cmp
iret
lret
popf
dec
xchg
xor
in
imul
mov
jecxz
pop
or
sbb
das
sbb
sahf
shl
repnz
xor
dec
adc
into
xor
repz
xchg
decb
sub
rolb
mov
fdivr
jae
pop
sti
lds
or
adc
jnp
or
pop
mov
jns
mov
frstor
xor
mov
jle
rclb
aad
jecxz
stos
and
dec
int
lods
or
jp
xchg
cli
cmp
push
push
push
push
loopne
and
dec
ja
cltd
jp
ss
ret
push
dec
sub
dec
lock
fstps
addr16
jecxz
jne
cmpsb
push
mov
mov
pop
js
andl
fsub
jmp
cld
sbb
popa
pushf
xchg
dec
lods
in
in
fistps
jle
jmp
cmp
int
sub
jmp
xchg
dec
mov
pop
jae
push
mov
movsl
adc
cmpsl
or
daa
mov
jecxz
sub
call
je
fistl
cmp
xor
fstps
mov
jno
jo
cmp
mov
outsl
inc
sub
loopne
sahf
ret
in
jecxz
mov
mov
xor
or
icebp
or
fbld
xchg
add
jecxz
cld
mov
mov
clc
scas
pop
mov
pop
lds
lods
xor
or
fnsave
push
sub
movsb
sub
imul
sub
scas
imul
in
inc
fiaddl
out
dec
je
and
cmpsb
sbb
mov
iret
ss
pop
xchg
dec
sti
adc
jmp
pop
mov
pushf
repnz
cmp
inc
mov
push
ds
push
fsubrl
xor
add
push
cmp
xor
gs
mov
push
movsb
jo
subl
icebp
dec
add
stos
jl
push
lock
push
sbb
cmp
ss
push
mov
fsts
into
stc
mov
inc
inc
and
mov
dec
js
addr16
pop
mov
and
insb
outsl
push
pushf
dec
stc
rolb
xchg
push
inc
mov
ficoml
in
or
push
sbb
jge
movsl
pop
pop
sbb
add
out
out
ja
movsl
punpcklbw
call
in
repz
push
stos
or
lahf
inc
mov
out
std
sub
outsb
jp
sbb
shll
aam
sub
cld
inc
xor
add
or
cli
js
cli
pop
pop
inc
mov
filds
gs
mov
test
pop
sbb
dec
xor
pop
xchg
lret
cmp
adc
rcrb
jo
sbb
movsl
int
stc
pop
incb
loop
mov
jnp
mov
repz
aaa
xor
sbb
insl
loope
or
out
cmp
std
mov
fisubrl
cmp
xor
movsb
sbb
cmp
push
nop
arpl
jp
aam
push
xor
sub
movsb
in
repz
mov
xchg
inc
dec
fdivr
mov
mov
fimull
and
mov
push
ret
cmp
dec
negb
or
movsb
iret
adc
jnp
cmp
das
rcll
jo
xchg
movsl
das
cmc
mov
popf
jbe
mov
daa
adcb
pop
xlat
ret
movb
sti
mov
adc
inc
push
jne
mov
adc
pop
adc
dec
mov
movsb
mov
enter
ret
or
in
and
jae
in
aad
pop
shl
out
ds
adc
hlt
cmp
inc
int
pop
xchg
push
cmp
cmpsl
cmp
or
vfmsubadd213pd
rclb
mov
fisubs
cld
sbb
out
in
ja
sbb
les
nop
setno
repnz
out
inc
pop
xor
inc
gs
dec
aaa
pushf
ja
call
pop
test
add
sub
sti
or
aad
sub
imulb
dec
push
lods
std
jg
leave
add
mov
dec
mov
and
fildll
jle
je
repnz
pop
fsts
mov
sub
sub
movsl
sub
sbbb
sti
int
or
push
dec
pop
pusha
sbb
fnstsw
and
mov
popf
jle
inc
popf
inc
push
out
fstps
dec
inc
scas
lret
push
cmpsl
test
cli
mov
mov
pop
aad
inc
je
mov
xchg
jne
mov
push
fcoml
mov
mov
mov
inc
lods
fdivr
mov
xchg
pop
cmp
xchg
adc
aaa
das
jo
enter
jmp
bound
xchg
sub
mov
mov
sbb
cmp
gs
call
jl
mov
pushf
push
out
das
xchg
lods
cmpb
imul
mov
arpl
jle
sbb
negb
test
jns
and
fistps
addr16
loopne
mov
push
jno
inc
xchg
inc
repz
mov
out
int3
sbb
cmp
xchg
repnz
jnp
out
lret
mov
jb
fstps
loope
xchg
test
mov
mov
cmpsl
gs
mov
pop
xor
in
adc
add
ds
and
mov
scas
xchg
adc
push
addr16
dec
std
mov
mov
sti
lcall
xchg
push
mov
xor
orl
cmp
inc
ret
cld
sar
jnp
stc
xchg
loop
fstpl
iret
cmc
dec
and
xchg
dec
int
pop
jle
jns
xor
ljmp
xor
push
jno
es
das
dec
out
sti
je
popf
insb
roll
fildl
and
mov
mov
xor
pop
pushf
push
xchg
cmp
cmp
cmp
loopne
jle
jno
jno
lea
cmpsb
sbb
daa
cmp
outsl
xor
mov
sbb
shrb
cmp
mov
sbb
loop
test
mov
out
sbb
std
mov
repnz
loopne
movsb
dec
es
sti
pop
pop
mov
sub
xchg
jb
pop
inc
pop
imul
mov
cmpsb
mov
pop
sub
adc
mov
aaa
xchg
fldcw
fisubs
push
cli
outsl
mov
xlat
push
les
int
test
push
sub
aas
cmp
pop
or
repz
int
out
push
jbe
out
aam
fldenv
inc
xor
jecxz
out
mov
loopne
xchg
push
lods
and
mov
daa
in
lahf
and
test
aas
push
lds
imul
mov
lods
mov
fadd
clc
nop
flds
mov
sbb
les
je
jnp
add
adc
mov
jl
jl
cmp
scas
test
ja
fisttpl
stos
xchg
add
cmpsl
dec
pop
dec
xor
mov
dec
mov
dec
nop
adc
outsb
jnp
sub
cmp
mov
inc
daa
sbbb
popf
dec
or
fimuls
or
adc
fcmovnu
jg
test
nop
pop
rcrl
mov
scas
into
pop
in
out
movsl
jle
fsubrp
pop
push
mov
jmp
add
jo
xor
inc
lock
sbbl
dec
sub
lods
cwtl
push
sahf
aam
decl
mov
dec
sbb
lret
scas
std
mov
sub
push
inc
fmul
nop
aad
inc
cmp
mov
jns
cmp
jns
dec
xchg
pushf
icebp
test
int3
cmp
dec
sbb
inc
iret
lods
movsl
mov
fnstcw
jl
sub
movsl
mov
mov
lds
incb
mov
repnz
cmp
test
xor
sbb
and
lock
push
scas
add
or
lret
mov
popa
push
jne
stos
ja
loopne,pn
mov
idiv
push
pop
dec
sbb
inc
andb
repz
mov
jg
push
mov
mov
movsb
mov
adc
adc
mov
sahf
mov
mov
or
mov
mov
mov
push
sbb
jno
push
and
push
mov
pop
aam
add
mov
jb
fmull
js
mov
test
test
dec
or
rolb
mov
mov
les
push
pop
pushf
jae
mov
push
fs
pop
mov
cmpsb
scas
into
arpl
mov
xor
adc
cmp
outsb
mov
and
ss
iret
enter
mov
shr
lods
mov
mov
jmp
jg
or
cmpsb
push
mov
inc
stos
test
cld
sahf
adc
mov
fsubrl
test
popf
push
cmp
jle
lods
es
aas
push
xchg
lcall
xchg
lods
aas
push
pop
inc
cltd
add
fdivrl
xchg
mov
sahf
sbb
inc
shl
mov
out
fmull
ljmp
mov
sbb
mov
int
mov
in
push
test
and
outsb
dec
pop
flds
test
mov
test
aaa
mov
sbb
mov
xor
cld
xchg
nop
test
pop
repnz
jne
rolb
cmp
mov
inc
int
jle
cmpl
ret
mov
test
in
dec
mov
lods
and
iret
adc
mov
and
or
test
insl
inc
jecxz
clc
jl
pop
std
inc
cmp
mov
mov
iret
or
sub
mov
xchg
sub
jmp
xchg
push
jecxz
sbb
test
push
xor
scas
sbb
jae
sbb
jl
mov
jle
jns
or
mov
addr16
and
mov
jae
arpl
fstpl
lahf
add
inc
inc
lods
pop
das
adc
push
cld
jp
xchg
add
or
sarl
clc
cltd
mov
adc
dec
push
mov
push
mov
sbb
rorl
fsubl
xchg
enter
mov
hlt
andb
push
cmp
inc
test
js
dec
xor
dec
inc
mov
mov
xchg
mov
test
inc
dec
fisubrl
dec
sbb
push
add
pop
sub
dec
push
fucomp
cli
pop
mov
inc
xchg
pop
data16
and
cmp
add
popf
mov
cmp
test
movsb
sub
sub
jecxz
jle
pop
xchg
imul
mov
fcompp
jnp
fwait
mov
enter
inc
jnp
mov
test
mov
xor
testb
and
sbb
inc
pop
dec
push
pop
dec
int
call
lret
addr16
and
je
rclb
push
and
adc
ror
int
inc
pushf
shlb
jmp
or
dec
arpl
cmp
enter
daa
loope
add
mov
pop
fstl
jbe
sub
mov
and
xchg
pop
pop
lret
popa
adc
mov
and
xchg
or
add
add
inc
addr16
mov
jno
xchg
mov
pushf
sahf
cld
das
test
mov
jge
fisttpll
and
jo
jnp
xchg
filds
jg
adc
jns
mov
mov
std
or
test
into
movsb
xor
rcr
mov
in
outsb
fnstenv
das
adc
mov
dec
and
push
scas
xor
test
dec
dec
les
ljmp
sub
push
mov
lds
scas
lea
std
xchg
mov
pop
stc
cmp
lea
clc
xchg
adc
and
shll
test
mov
addr16
sbb
xor
je
je
xchg
jmp
mov
inc
mov
inc
and
and
insl
ja
call
jbe
movsl
mov
or
pop
mov
or
imul
pushf
and
arpl
stos
into
mov
je
aam
repz
lcall
notb
std
jb
movsl
ds
in
fdivrs
out
push
movsb
test
aam
mov
lret
xchg
por
add
aad
mov
push
and
shlb
xchg
and
dec
mov
cmp
mov
fsts
cmpsl
jg
fdivrp
mov
movsl
iret
in
push
pop
push
mov
pop
cli
mov
sub
xchg
lock
fmull
inc
rorb
fisubrs
int3
sar
mov
ljmp
pop
movsb
out
push
test
xor
push
repz
cmp
adc
ret
test
rcrb
cld
sub
jp
and
lods
daa
mov
and
mov
pop
pop
jmp
dec
ficoms
cli
mov
xor
xor
addr16
cmc
add
sarl
out
dec
sub
popa
push
sbb
xlat
ficoms
popa
nop
mov
outsb
pop
xchg
scas
das
insb
fsubr
aam
mov
mov
ljmp
xchg
or
push
pop
and
mov
mov
mov
in
fnstcw
push
insl
aas
xchg
dec
popa
imul
ja
fsts
dec
add
mov
cmpsb
jl
mov
imul
ret
push
imul
push
les
mov
mov
in
mov
test
push
mov
pop
sbb
mov
push
or
adc
or
flds
and
push
out
mov
data16
lret
xchg
adc
xchg
dec
mov
paddsb
imul
xorl
xchg
test
xchg
jbe
cld
je
pop
or
int
scas
int3
ret
sbb
xor
mov
int
mov
std
lock
jno
outsl
ljmp
sbb
add
and
pop
loopne
cmpsl
and
jp
sbb
hlt
scas
xor
xchg
aad
inc
sbb
xchg
fldenv
ljmp
in
inc
lret
mov
adc
popfw
loope
icebp
push
icebp
lods
dec
push
cs
lock
pop
les
scas
add
or
lds
push
fnstcw
xchg
lret
cmp
scas
jns
inc
orb
into
shll
daa
sahf
jl
jo
int
pop
push
mov
lods
push
testb
popl
fs
les
mov
cmpsl
insb
sbbb
xchg
jl
mov
lcall
fimuls
pop
scas
sbb
inc
and
stc
push
mov
add
jbe
mov
adc
mov
xchg
fnstsw
movb
and
dec
popf
dec
jp
pop
test
push
mov
cmc
orl
dec
cmpsl
iret
popw
shlb
jle
adc
push
push
xchg
xor
cli
cmp
outsb
cmpsb
pop
cmpsb
addb
or
std
mov
cmp
stc
in
inc
mov
clc
in
xlat
jb
jg
mov
ror
cmpl
cmpsb
push
in
jbe
xor
mov
movsl
jle
ljmp
lret
jmp
cmp
stos
jns
cmp
mov
or
push
in
pop
or
adc
out
fwait
ret
repnz
int3
push
lcall
sbb
mov
scas
dec
pop
les
sti
jecxz
inc
inc
sahf
sahf
pop
fld
inc
fistpll
sbb
out
mov
mov
push
rclb
xchg
dec
test
popf
xchg
ljmp
ror
and
std
outsl
jne
push
icebp
lcall
push
sahf
mov
leave
jp
aas
mov
cwtl
das
idivl
xchg
icebp
xchg
sti
adc
jle
jbe
test
loop
sub
scas
inc
sahf
fwait
cli
movsb
or
mov
add
mov
inc
pop
fisttpl
cmc
aam
push
leave
jns
or
inc
in
shrl
mov
out
lods
in
les
sub
fstps
sbb
pop
mov
push
cmp
dec
das
into
ja
cs
out
mov
imul
push
repz
pusha
or
add
in
or
cmpsb
cmp
cmp
sbb
dec
jge
jns
fwait
xchg
jne
imul
aas
cld
pop
test
mov
fcompl
mov
dec
sahf
js
mov
cmp
pop
mov
jl
dec
lods
pop
enter
shlb
cmp
or
dec
sti
jae,pt
or
pop
fwait
roll
cmpl
push
in
push
cmpsb
mov
sub
int
xchg
mov
popf
cld
test
xchg
mov
aaa
add
jae
add
adc
push
xor
mov
mov
add
test
add
jne
sbb
es
cmp
imul
mov
imulb
subb
lahf
notl
mov
jae
xor
xchg
popf
hlt
cmpsb
xchg
or
or
mov
xchg
sbb
xchg
adc
dec
addr16
je
vphadddq
dec
mov
cli
or
test
xor
shrb
nop
mov
push
into
sti
rcll
out
pop
jae
filds
shll
repz
fldt
adc
popf
inc
sbb
nopl
arpl
cmc
lock
push
movsb
mov
inc
inc
push
fsubr
out
cmpsb
pop
push
std
adc
xchg
xchg
xor
or
test
arpl
aas
cmp
in
and
pop
add
loop
fs
jae
movsl
loope
jle
sub
scas
movzwl
or
repnz
std
mov
xchg
pop
adc
jge
lods
push
pop
les
repnz
dec
pop
test
lea
xor
out
and
into
adc
jl
aaa
mov
addr16
jb
and
push
daa
or
out
mov
int3
pop
leave
cmp
mov
mov
cmpsl
push
inc
add
mov
add
jns
pop
scas
sbb
mov
hlt
movsl
dec
push
mov
cmp
or
test
mov
lret
jmp
mov
imul
sbb
add
arpl
jns
jns
out
mov
dec
add
push
cmp
scas
lods
sub
push
std
data16
xchg
aaa
arpl
xor
popf
pop
or
adc
mov
lock
rcll
pop
fiaddl
cmpsb
jno
cmp
jge
das
mov
scas
dec
movsb
xor
in
aaa
xor
jle
pop
jp
dec
or
repnz
xchg
cmp
add
adc
mov
lcall
int3
or
and
fisubs
and
mov
loopne
cmp
or
sub
fdivrl
mov
or
jb
cmpsl
pop
test
xchg
adc
adc
jns
cmc
rcrl
add
int
scas
cmp
xchg
mov
and
aad
lds
and
mov
push
test
inc
mov
xchg
out
ds
into
and
jae
inc
jns
sub
push
push
sti
pop
test
fistl
add
stc
push
push
sbb
adc
pop
jg
fnstenv
stos
out
mov
aad
xchg
scas
inc
sbb
subl
dec
xchg
and
sub
xor
cmpsb
add
test
add
add
sbb
aam
int
lods
add
inc
stos
sub
cltd
jp
or
push
xchg
dec
jno
and
rcrb
jae
aas
lock
daa
test
inc
inc
mov
fdivrl
fstps
jle
xchg
xchg
sub
sbb
shlb
push
xchg
pop
jle
es
in
jae
push
lret
inc
and
loop
aas
test
dec
rcrl
lods
add
add
mov
ficomps
mov
bsr
ljmp
push
insl
jae
hlt
andl
je
xchg
scas
dec
popf
mov
lods
mov
push
jle
mov
mov
in
movsb
mov
jmp
aam
pop
and
out
es
push
sub
movsb
int3
cmpl
dec
stos
pushf
test
js
and
mov
push
and
push
cmp
dec
jbe
mov
xor
cltd
push
inc
addr16
jno
in
pop
les
inc
pop
inc
mov
sbb
lret
sbb
mov
xchg
int3
in
inc
add
add
cmp
pop
mov
xchg
mov
or
fisttpl
adc
sub
push
sti
mov
nop
aas
insl
cmp
leave
sub
inc
es
stos
push
push
inc
mov
repz
fcompl
xchg
lods
bound
dec
pop
ficoml
sbb
scas
fs
mov
fs
aad
xchg
jle
adc
lods
sub
mov
sub
rorl
and
fldenv
lods
gs
lods
nop
add
clc
jns
mov
mov
jno
dec
or
outsb
shlb
mov
sub
lcall
mov
das
data16
in
sbb
push
mov
dec
inc
out
test
shl
jl
test
lahf
outsl
cmp
int
dec
cmp
bound
jecxz
dec
or
jb
cmp
std
mov
cmp
leave
jp
push
sub
xchg
pop
imul
scas
nop
mov
pop
fbstp
mov
in
bound
icebp
scas
test
mov
or
test
or
ljmp
dec
sti
rolb
xor
icebp
out
fcompl
mov
cmp
xchg
jns
xchg
adc
mov
inc
test
jg
jecxz
inc
pop
sahf
imul
pop
in
cld
lock
outsl
pop
sub
sbb
gs
addr16
jge
push
daa
outsb
xor
mov
adc
mov
dec
or
aad
cli
in
scas
call
mov
xchg
xchg
cmp
pop
jl
xor
pop
fldcw
imul
mov
mov
scas
dec
fiadds
call
mov
lcall
movsb
pop
repnz
jmp
mov
pop
stos
repnz
ja
cld
test
repz
int
fidivl
and
inc
stos
fdivrs
mov
test
mov
test
imul
gs
push
icebp
leave
mov
scas
and
mov
xchg
fildl
jno
scas
xchg
dec
ja
xor
adc
fiadds
loop
pop
faddl
insl
sub
fstps
mov
insl
test
sahf
inc
add
mov
imul
push
lahf
inc
test
lods
pop
xchg
out
xchg
fcoms
mov
push
insl
sbb
das
repz
jns
popf
test
pop
rol
adc
xor
or
nop
mov
lock
xor
dec
daa
cmpsl
sub
pushw
mov
pop
jae
sub
inc
cmpb
lea
jnp
mov
pop
jl
hlt
scas
pop
lahf
test
ljmp
xor
in
dec
adc
cmpsl
mov
mov
jge
cmpsb
loope
jp
test
bound
imul
in
and
xchg
shlb
pushf
in
xchg
lds
mov
bound
out
sbb
cwtl
paddq
aas
sbb
xchg
call
inc
mov
jle
inc
mov
jo
dec
gs
int
gs
std
pop
roll
xchg
push
movb
push
sub
mov
adc
mov
dec
or
int3
mov
mov
outsb
clc
test
movb
pop
fstps
and
pop
fistpll
lret
and
fsubl
lret
mov
fdivp
or
mov
arpl
or
aaa
icebp
inc
popf
sub
int3
pop
int
mov
mov
out
lret
mov
jmp
cmp
push
xchg
mov
fldenv
lret
int
jp
lods
cwtl
negb
xchg
sahf
lock
out
jns
dec
pushf
pop
jnp
shrl
pop
out
inc
fwait
loopne
push
jmp
mov
cmp
jae
movsl
int
pop
mov
lret
sti
int3
sahf
pop
mov
std
imul
or
xor
imull
fnstcw
icebp
addb
sbb
adc
into
xchg
dec
jp
sbb
push
fs
cmpsl
push
xor
mov
pop
cmp
in
inc
fcmovnu
fcompl
adc
insb
mov
aas
mov
pop
test
sbbb
pop
sub
cmp
out
push
mov
enter
and
adc
shrl
shl
xchg
aad
aam
shll
sti
cs
xor
or
aam
pop
pop
jae
subl
or
test
scas
jl
mov
adc
xor
mov
pop
pusha
ds
inc
adc
insb
or
in
inc
xor
lods
insl
lret
add
pop
fwait
stos
fwait
push
add
push
mov
in
jge
enter
mov
outsl
loop
xchg
test
sub
mov
mov
ret
lahf
sarb
les
mov
cli
scas
sbb
sbb
iret
popa
and
mov
jge
das
fidivrl
stc
sbb
int3
fstps
ljmp
out
ficoms
mov
xor
cmpsb
mov
ja
mov
adcl
rolb
dec
and
jae
mov
stc
sub
inc
pop
das
and
push
push
add
in
push
jge
outsb
je
sub
dec
dec
outsb
jl
xlat
pop
test
mov
pushf
adc
and
add
aad
push
pop
pushf
mov
jnp
xchg
mov
cmp
lods
stc
xchg
adc
mov
scas
jae
cmp
add
jp
xor
jl
inc
inc
cmpsb
sti
or
and
jg
lcall
mov
xor
sub
mov
mov
push
jge
inc
mov
pop
mov
mov
test
out
ljmp
fildl
inc
mov
dec
xor
pop
loopne
cmpsl
xor
cmp
push
je
lret
sahf
cmp
sub
jno
lock
push
fcomps
rorb
out
pop
mov
cmp
sbbb
and
xor
js
repnz
push
fnstenv
int3
lods
or
dec
inc
or
push
cmp
jbe
jno
jb
mov
rorl
test
idivb
fadds
test
fldenv
lahf
xor
xchg
mov
xchg
inc
fs
xlat
xor
addb
fildl
in
hlt
mov
imul
test
dec
jmp
fcompl
jns
popa
mov
sub
xor
cmp
sub
stos
or
sub
inc
scas
sti
xlat
ret
mov
inc
push
sbb
inc
mov
cwtl
xchg
jmp
movsb
jle
fidivs
adc
xchg
cmp
fucomip
adc
mov
push
mov
lock
dec
les
int
dec
xor
out
xor
aas
jle
push
or
and
cmpsb
mov
and
adc
cmpb
jae
lds
cmp
dec
addb
sahf
push
sub
daa
lahf
stos
mov
mov
mulb
aaa
push
out
fidivrl
fadd
inc
hlt
sub
xchg
xchg
in
mov
cltd
mov
mov
mov
add
xlat
mov
mov
lods
and
mov
rclb
inc
nop
adc
fidivs
sub
scas
jp
mov
push
jnp
outsl
sbb
inc
js
dec
mov
mov
cltd
outsb
jbe
ljmp
cmpsb
mov
ja
inc
test
out
jo
xchg
jecxz
mov
jne
xchg
lock
inc
push
fs
mov
xor
xchg
xchg
andb
dec
out
xor
cli
out
sub
dec
xchg
out
or
cmp
inc
or
fidivrs
mov
idivb
sub
lds
mov
pop
or
mov
xor
mov
adc
scas
sti
aad
andl
iret
int3
inc
push
jmp
xchg
or
daa
out
mov
iret
mov
test
sub
icebp
and
dec
into
or
dec
aam
xchg
xchg
je
daa
aad
fildl
icebp
and
icebp
mov
pop
cmpsl
mov
popa
xor
fpatan
inc
aam
sub
hlt
xchg
mov
cmp
sbb
push
cwtl
dec
xchg
mov
add
mov
xlat
push
jge
mov
cmp
inc
pop
cmp
mov
dec
ret
dec
js
sbb
je
jg
pop
xor
scas
and
fildll
cmpsb
gs
mov
aad
out
xor
pusha
jge
or
dec
sub
stc
rcrl
sbb
mov
mov
mov
adc
dec
repz
mulb
cmc
rep
test
in
arpl
dec
in
and
shll
push
mov
je
mov
xor
xorl
shll
mov
insb
aam
inc
mov
dec
fcompl
mov
sub
sub
into
jbe
jmp
data16
dec
push
mov
mov
add
sbb
cli
dec
lods
push
mov
data16
sbb
sub
stc
mov
mov
inc
mov
sahf
jge
insb
test
pop
es
jns
pop
sahf
repnz
pop
cmp
pop
les
in
adc
mov
cmp
mov
xor
mov
jo
cmpb
popa
fidivrs
leave
int3
ficompl
jne
ljmp
inc
daa
fmull
es
xor
adc
idivb
dec
addr16
out
scas
pop
jge
jecxz
push
dec
hlt
xor
jp
fstps
mov
popf
lock
loopne
test
pop
jno
lcall
dec
mov
pushf
test
out
sub
int3
lock
push
push
inc
in
test
xchg
incb
xorb
ja
xor
cmp
jp
adcl
mov
es
push
fsubr
mov
or
mov
push
es
fcomi
fsubrs
lds
clc
aas
sub
loope
es
jecxz
les
fnstcw
xor
xor
sbb
out
and
lods
inc
jecxz
pop
jecxz
sbb
js
jle
and
cld
js
and
and
or
and
add
stos
std
sub
push
mov
idivl
in
jae
xor
adc
mov
xor
ljmp
mov
xchg
out
in
sbb
jno
cli
xchg
lret
and
jle
mov
cmp
mov
sub
test
lods
aam
pop
pop
shll
int
jmp
repnz
adc
mov
loope
test
int
in
xchg
inc
push
dec
adc
cli
jg
movsl
inc
jle
into
xchg
push
repnz
jecxz
add
dec
pop
sbb
xor
cmp
jbe
dec
and
in
mov
mov
sbb
aad
dec
out
fldz
or
faddp
cmpb
cmpsl
and
mov
sbb
dec
cmp
cld
out
fldenv
orl
lahf
sub
fsubrs
std
mov
push
fisubs
add
insb
andb
mov
inc
xor
and
dec
jnp
mov
je
jbe
sbb
aaa
sti
push
and
xchg
fsubrs
mov
pop
inc
sahf
jo
jle
push
push
mov
sub
ficompl
dec
mov
test
or
loopne
fistpll
mov
adc
inc
or
pop
and
mov
jb
movsb
sbb
subb
and
mov
clc
mov
iret
sub
nop
ja
mulb
mov
clc
jg
arpl
repnz
mov
mov
iret
mov
imul
or
inc
lret
flds
clc
push
ss
jo
fucomp
ret
lahf
jbe
sub
mov
pop
xchg
out
jmp
cmp
mov
sub
je
hlt
or
cmpsb
jnp
pushf
das
add
sub
push
xorb
test
mov
daa
jne
daa
mov
jo
imul
enter
mov
jle
sbb
test
mov
xchg
jmp
add
ret
gs
scas
adc
hlt
mov
jmp
dec
ss
inc
scas
xchg
movb
xor
nop
imul
insb
mov
and
mov
inc
xor
pop
xchg
stos
jge
loope
mov
ficoml
jae
cs
xor
push
mov
xchg
or
xchg
movsl
mov
jmp
mov
jmp
ss
popf
mov
xchg
adc
xchg
fpatan
dec
fdivrl
xor
pop
and
inc
mov
sahf
shll
mov
je
out
sbb
shlb
andps
mov
test
lods
out
push
inc
mov
jge
loop
loope
scas
dec
icebp
std
push
dec
aas
addl
sub
scas
iret
mov
mov
and
jae
push
loop
xchg
mov
dec
adcl
iret
std
lret
into
inc
fldenv
mov
lods
push
stos
loopne
movsl
negb
jl
negl
dec
movsb
test
leave
push
dec
xchg
adc
xchg
pop
sbb
sti
xchg
imul
test
sbb
fxch
sub
fucomi
and
das
mov
out
mov
xchg
dec
mov
mov
test
ret
or
test
jno
loope
repz
push
daa
fwait
iret
cmc
dec
mov
shll
dec
mov
or
jecxz
cmp
fistl
fwait
in
cwtl
jmp
cmp
push
filds
mov
pop
stos
mov
in
sbb
push
test
jnp
pop
xchg
clc
xlat
sub
adc
adc
js
fnstenv
sti
loopne
and
adc
mov
sbb
aam
sbbb
cmc
xchg
fidivl
and
adc
mov
test
fsubs
flds
jb
push
cs
into
push
insb
mov
fsubrl
das
ss
in
ja
cmpsl
test
leave
mov
bound
pop
lods
inc
outsb
sub
mov
int
pusha
fiadds
les
pop
movsb
inc
bound
fbld
mov
dec
xor
lds
jbe
jo
loop
mov
lds
adc
stc
push
mov
cs
ds
negl
out
shrb
adc
cmpsb
xor
inc
mov
sbb
outsl
repz
xchg
in
jo
and
add
test
cmp
mov
or
mov
mov
imul
or
pop
or
dec
mov
out
or
sbb
into
nop
lahf
push
mov
mov
xor
pop
std
jns
popa
xchg
repz
andl
pusha
out
inc
andb
orl
icebp
pushf
scas
incl
pop
out
repz
std
cmpsb
test
xchg
mov
jl
sub
loop
icebp
cmp
jge
test
jecxz
pop
jnp
test
push
adc
push
sub
das
inc
sti
bound
repnz
adc
and
and
leave
push
rcl
dec
add
mov
in
dec
sub
in
and
out
sbb
inc
or
mov
test
cwtl
mov
push
data16
popf
jnp
stc
dec
sub
sub
xchg
shrb
pop
mov
adc
lds
mov
sbb
lahf
adc
add
or
std
fbld
jb
popa
xor
scas
fnstcw
scas
repz
push
adc
mov
push
pop
mov
dec
arpl
into
mov
jne
jg
in
mov
lret
addr16
cmp
jecxz
mov
lock
sub
and
fmuls
adc
addr16
sub
xchg
mov
rcrb
add
and
dec
fdivl
cmp
popf
and
iret
mov
inc
jmp
stos
outsl
cmc
push
into
pusha
jnp
ljmp
sti
inc
dec
xor
add
test
mov
mov
test
repz
xchg
insb
je
outsl
pop
loope
imulb
outsb
xor
dec
xchg
sub
repnz
adc
fistps
cli
inc
inc
test
lahf
out
out
and
and
or
aam
add
lods
notl
out
mov
jle
mov
adc
aas
movsb
xor
movsb
fnstcw
cli
inc
mov
ret
call
test
gs
fsubrp
pop
pop
stos
popf
stos
push
popa
sub
test
scas
ficompl
cltd
fldenv
add
in
lods
mov
int
scas
cmp
imul
pop
inc
pop
movsb
notb
test
dec
dec
pop
cli
imul
outsb
mov
xchg
stc
add
aas
jg
cmpsb
pop
gs
add
pop
mov
cmc
push
stos
mov
pop
pop
sbb
call
add
jmp
stc
cmp
mov
les
inc
jne
mov
jae
cs
les
jnp
call
mov
xor
or
int3
push
adc
fcmovbe
in
inc
div
push
or
and
test
repz
sti
popa
addb
lock
movsb
call
jnp
push
fwait
movsl
data16
int3
push
mov
sbb
fnstcw
jo
push
sbb
jl
ljmp
xchg
sbb
test
dec
fcmovnu
orb
and
fidivrl
push
push
stos
fcompl
les
shlb
inc
dec
xor
jbe
lea
mov
xlat
sub
pop
and
out
push
sbbl
xor
enter
test
das
mov
jno
divl
mov
jnp
shr
and
fisttps
ret
in
add
call
or
mov
into
lea
jmp
dec
sub
shrl
pusha
and
aam
cmpsb
cmpsl
mov
shl
adc
popa
cmp
pop
add
dec
test
xor
mov
aas
mov
shl
std
pop
lock
add
sub
mov
aad
xchg
scas
and
cmpl
outsb
xchg
cmpsl
fnstcw
jno
popa
lds
imul
cmpsl
sahf
movl
mov
jno
add
sbb
mov
repnz
cld
jne
out
pop
jo
dec
or
push
xor
fcmovnbe
cmp
xchg
mov
dec
fiadds
imul
push
gs
adc
icebp
cmpsl
push
jns
test
push
fldenv
and
test
push
test
icebp
es
shrl
incb
mov
jae
push
rclb
push
xchg
xor
in
out
movsb
sub
cmpb
dec
scas
mov
js
xlat
int3
sbb
je
mov
mov
jo
sbb
xchg
mov
pop
mov
dec
testl
push
in
cmp
xchg
or
clc
fiaddl
mov
fldcw
ja
cmpsb
fsubp
dec
jp
sbbl
sub
mov
inc
pop
pop
fsubl
scas
fnstenv
xchg
jo
and
mov
fisttpl
movsl
add
sbb
mov
jg
in
out
xor
push
push
inc
lods
xchg
dec
dec
or
aad
jl
mov
sub
cmp
jle
stos
cmp
inc
and
xor
das
adc
dec
mov
sbb
mov
jl
out
cli
lcall
and
shl
jl
arpl
mov
xchg
lcall
mov
movsl
rorl
fnsave
fstps
push
pop
rcr
into
mov
adc
in
xchg
int3
mov
pusha
cld
dec
imul
mov
add
shlb
into
add
jge
fiadds
aaa
dec
iret
movsl
inc
or
daa
pop
call
fiadds
pop
je
pop
shl
in
and
mov
into
adc
mov
lods
insl
push
outsb
call
fisttpl
sbb
cmp
sub
jne
in
sbb
addr16
jae
sub
sub
mov
sti
mov
dec
mov
mov
pushf
pop
push
out
loop
or
cmp
add
inc
jge
lock
arpl
push
jne
fsubl
test
in
fnstcw
cmp
and
aaa
cltd
das
dec
mov
orb
pop
pop
xor
push
sub
push
sti
leave
xor
mov
sti
add
cs
push
faddp
cltd
mov
rcr
jp
jp
addr16
add
mov
fisubrs
pop
pushf
jno
adc
xor
push
pop
jle
ljmp
push
mov
iret
pop
and
xchg
pop
mov
push
pop
and
shlb
stos
daa
repnz
js
sahf
jge
mov
mov
daa
mov
out
lahf
out
scas
rcll
adc
ret
cmp
mov
loop
mov
sti
out
push
out
push
xchg
or
mov
arpl
sub
lods
into
xchg
or
jge
or
ret
in
inc
jge
xor
jmp
xor
cwtl
ss
jl
vpextrw
lds
fistpl
inc
inc
lock
or
cmpsl
pop
arpl
sub
sub
sti
inc
jmp
mov
and
out
xor
adc
push
jns
and
sub
out
and
jbe
xor
xchg
xor
cmp
sub
popa
lock
jbe
inc
jnp
fisubrs
fwait
lea
lock
pop
xchg
mov
inc
sbb
ret
cmp
cmc
pop
fimuls
push
lahf
shrb
dec
call
mov
test
and
leave
lea
xchg
pop
lock
lcall
out
rcrl
mov
xchg
cld
flds
xchg
sub
cmp
push
fistpl
sbb
addr16
clc
or
das
nop
push
dec
mov
xchg
cld
lcall
ja
lock
loope
cli
pop
test
mov
sub
aam
imul
data16
movsb
inc
jbe
dec
cmpsb
xor
dec
dec
fiadds
cmp
mov
xchg
xchg
sbb
fstps
lret
and
test
pop
mov
inc
fistps
outsl
aaa
insl
leave
inc
or
gs
xlat
adc
mov
ljmp
add
inc
push
stos
mov
xor
jge
lods
roll
cltd
sbb
jno
in
push
add
andl
pop
mov
and
ret
jle
stc
ljmp
enter
fwait
inc
add
mov
fidivrs
jl
cmp
and
sti
jno
in
iret
xchg
neg
cmp
mov
push
push
cs
push
sar
cli
push
rep
mov
fdiv
stos
into
lahf
outsl
mov
jg
lret
xchg
inc
daa
das
mov
std
scas
mov
and
bnd
test
push
xlat
je
mov
inc
push
pop
xorl
in
pushf
cmpsb
dec
shr
xchg
jg
aas
xchg
dec
enter
xchg
sub
fsts
push
jae
lahf
sbbb
sub
in
stc
ret
imul
mov
xor
mov
mov
popa
dec
mov
mov
add
mov
jp
out
pop
in
cmp
in
fldcw
dec
adc
test
jae
dec
out
idivb
dec
mov
cmp
sbb
int
dec
outsb
aad
imul
mov
adc
jb
mov
jmp
cmpl
mov
jecxz
dec
and
add
mov
xchg
into
lods
gs
xchg
mov
repz
cmp
cmp
or
mov
jae
and
frstor
lcall
imul
cmp
test
jnp
mov
pop
xchg
in
aas
mov
xor
xchg
jb
pop
mov
mov
push
dec
mov
pop
push
lret
ss
cmpsl
mov
repnz
mov
out
inc
mov
xchg
mov
bound
test
imull
or
push
lahf
sbb
push
push
lods
mov
inc
pop
cmp
in
jbe
push
fstpl
inc
out
in
mov
cmp
xchg
shl
lods
test
test
sub
addb
cmp
fdivrl
mov
push
mov
mov
dec
fists
mov
mov
and
ds
jecxz
jl
jnp
jge
push
repz
pop
jg
pop
push
ljmp
out
fwait
push
daa
cli
xchg
inc
mov
orb
xchg
imul
andb
test
rorb
push
adc
lods
adc
sarb
mov
adc
sbb
xor
out
hlt
out
fisubl
in
pop
ficomps
mov
clc
xchg
leave
lods
adc
mov
mov
mov
sahf
test
dec
pop
imul
call
inc
lcall
push
push
inc
sbb
mov
xchg
jbe
adc
fldcw
sbb
mov
inc
inc
sub
dec
in
cmp
fadd
outsb
jmp
cmp
adc
in
movsl
cltd
pop
lock
xchg
sbb
sbb
mov
jnp
movsl
test
push
adc
mov
sahf
and
call
ljmp
mov
xlat
movsb
or
jl
and
pop
adc
xchg
scas
mov
mov
and
test
xor
cmpsl
es
jno
cmpsb
stos
pop
mov
aam
cmpsl
leave
arpl
inc
lea
add
repz
add
lock
xchg
gs
cwtl
jmp
data16
out
cmp
dec
lahf
in
jp
packsswb
std
insl
jge
mov
gs
xchg
sub
fisubrs
sarl
test
add
pop
mov
test
stos
inc
cmp
jae
push
test
push
mov
add
or
adc
pop
lods
fiadds
mov
daa
ficomps
mov
inc
std
pop
loop
pusha
outsl
popa
enter
add
movsb
es
adc
sti
xchg
jbe
push
movsl
adc
mov
cmp
out
or
fstpl
data16
jnp
ret
lea
mov
mov
mov
xchg
test
sbb
in
flds
mov
pop
and
push
pop
add
pop
or
gs
jnp
pusha
mov
push
add
pop
push
pop
outsb
and
cli
pop
data16
xor
ss
das
scas
sbb
out
mov
jo
fstpt
mov
dec
ljmp
jne
ljmp
sbb
cld
scas
lods
sbb
loopne
mov
or
push
out
mov
and
add
cmp
mov
mov
cmpsl
mov
or
pop
mov
add
negl
mov
push
lcall
sbb
dec
mov
mov
mov
pusha
jne
fwait
or
sbb
fwait
subb
and
dec
fsubrs
imul
adc
adc
add
lods
sbb
mov
pop
xchg
push
test
xchg
repz
dec
add
pusha
popf
arpl
xor
aas
sti
inc
xor
outsb
dec
mov
fwait
push
inc
inc
cwtl
pop
flds
cmpb
xchg
dec
ret
stos
filds
int
scas
mov
movsl
jmp
push
mov
in
pop
ud2
sbb
addb
sub
ds
popl
sub
shlb
and
xchg
cmp
push
nop
popa
xor
mov
or
test
mov
jae
std
mov
push
cwtl
in
sub
lods
mov
pop
fnstenv
out
loope
adc
mov
sbb
clc
jg
xor
pop
jae
lods
jae
shl
inc
or
cmp
call
and
pusha
jb
inc
out
mov
cmp
mov
cmpsb
adc
fs
sub
gs
scas
loope
test
sbb
movsl
aas
leave
hlt
inc
in
inc
sbb
movl
xor
sbb
arpl
dec
mov
sbb
int3
rcrl
out
cmp
xchg
xor
shrb
push
jnp
xor
outsb
cmp
jp
push
mov
pushf
lret
and
fstps
repz
mov
cwtl
mov
roll
pop
out
std
xchg
adc
ss
out
popa
std
cmp
mov
push
shrb
mov
cmc
fmull
push
hlt
pop
jae
or
push
and
and
popa
lret
jmp
xor
jae
cmp
scas
cmp
push
jnp
aaa
jle
fcompp
outsb
popa
repz
scas
test
pop
push
popa
xchg
xor
cli
mov
and
jnp
sub
cmp
jge
inc
in
sub
sbb
cmp
loopne
dec
jp
arpl
and
shrl
sti
test
mov
or
pop
into
lds
popf
int
xor
sub
testb
xchg
xor
mov
adc
inc
jmp
xor
mov
jp
jns
mov
sbb
dec
push
sub
test
out
js
push
jb
mov
es
fsubs
popf
push
pusha
inc
pop
inc
in
repnz
adc
xchg
lods
jmp
inc
mov
mov
xor
mov
sub
insl
push
mov
jne
std
jecxz
in
pop
adc
push
fiadds
mov
xchg
icebp
cmp
jo
and
push
cmpsb
cmpsl
cmp
and
xchg
xor
test
dec
lret
aam
ret
lds
inc
fisttpl
in
loope
mov
pop
push
xor
adc
push
xchg
mov
jae
fstpl
lret
ficomps
hlt
scas
or
inc
test
mov
mov
inc
pop
fnstcw
mov
outsl
loop
mov
pusha
inc
sbb
mov
xlat
adc
push
addl
es
mov
es
inc
mov
mov
mov
sbb
sub
adc
pushf
sbb
cmc
pop
scas
mov
js
mov
sub
xlat
and
or
ss
ret
inc
fisubs
lahf
lret
pop
pop
enter
cmp
sti
scas
cltd
paddd
enter
ret
std
orb
jge
push
mov
xchg
cmpsl
iret
xchg
test
sub
and
popa
popf
les
ret
mov
test
ret
mov
xchg
jnp
les
int
pop
sti
jbe
outsl
xchg
pop
pop
lods
dec
int
ja
inc
mov
ljmp
test
into
pop
clc
cld
icebp
cmp
in
mov
mov
lods
cmpl
lahf
mov
lods
fiadds
sbb
sbb
jp
mov
adc
mov
aam
test
dec
lcall
sub
vmovq
pop
push
push
arpl
pop
add
and
outsb
popa
movsb
mov
out
push
mov
adc
pop
scas
cmpsb
pusha
lock
pushf
and
dec
jno
hlt
push
jo
xor
shrb
mov
or
fld
ja
jecxz
dec
rcrl
rclb
push
sub
sbb
mov
icebp
pop
push
icebp
and
inc
push
add
fcomps
jge
insb
cs
cmp
je
dec
add
ficomps
popf
mov
int3
pushf
pusha
xor
mov
lahf
icebp
outsl
jbe
mov
ds
or
lret
dec
adc
mov
lcall
scas
jne
mov
imul
pop
sbb
add
cmp
or
dec
scas
xor
stos
shrl
testb
int3
nop
dec
iret
cmp
mov
xchg
stc
sbb
mov
les
adc
add
arpl
sub
int3
test
cmpl
add
xor
xchg
sbb
cmp
out
mov
cmc
int3
leave
fdivp
fcompl
jp
test
pop
fsts
fld
pusha
repz
mov
xchg
mov
jnp
ss
scas
cmp
mov
movsl
jmp
int
xchg
push
ds
cmp
and
xor
out
inc
cmpsl
xchg
shlb
inc
jg
repz
sbb
mov
std
ja
adc
mov
out
fidivl
sub
jns
mov
sbbb
jle
inc
jmp
repnz
loope
xchg
xchg
lahf
fwait
outsb
std
fdivl
xchg
xor
scas
pushf
lahf
or
sti
mov
daa
jbe
stc
iret
cmp
lock
lods
divb
popa
iret
insb
lds
repnz
xchg
into
arpl
movsb
mov
mov
scas
aam
pop
jae
inc
cmp
mov
data16
cli
pop
sub
cwtl
mov
repnz
mov
int
or
out
test
push
add
stos
pop
push
xchg
mov
pop
pop
pop
push
mov
xlat
push
pop
mov
iret
fwait
inc
mov
sbb
cli
sbb
stos
mov
mov
and
push
in
mov
adc
push
adc
jg
pop
xchg
cmp
fisttpl
clc
xchg
adc
test
mov
repnz
lods
or
push
sub
imul
xor
es
xor
mov
mov
jne
movsb
inc
ret
mov
ss
inc
and
dec
mov
jno
mov
push
push
mov
cmc
sbb
lcall
add
lods
and
and
mov
sar
inc
push
repz
and
ror
pop
mov
xlat
aam
fsts
xchg
sbb
mov
test
movl
ss
lods
xor
popa
mov
sbb
test
push
addr16
nop
rol
orl
xchg
aas
aas
inc
sahf
sub
adcl
or
pop
xor
fisubrs
or
pop
cmpsl
out
cmp
jnp
sti
pop
out
loopne
fisubrs
adc
or
scas
sbb
jnp
dec
and
xor
lods
jmp
in
lcall
push
fstp
les
cmp
or
aam
xor
or
mov
mov
lods
mov
mov
add
cmp
adc
fdivr
dec
popf
aad
and
pop
xchg
jge
mov
into
repz
rorl
fcoms
sub
adc
pop
inc
fsub
rclb
xchg
scas
jbe
sbb
mov
push
xchg
inc
out
mov
xor
sub
pushf
dec
push
lods
and
mov
std
mov
mov
mov
mov
fldcw
test
or
mov
pop
or
xor
mov
cmp
sub
es
shll
mov
mov
shl
in
fldenv
je,pt
cmpsb
es
popa
lret
icebp
sub
test
sub
or
ret
data16
push
lods
fwait
sahf
cmpsl
in
in
xchg
or
mov
mov
mov
das
xorl
jno
or
out
mov
cmpsl
fimuls
pop
fsubrl
pop
cld
and
xor
lret
mov
mov
sub
cs
pop
and
data16
mov
scas
dec
pop
pop
and
ljmp
jns
jno
shll
sbb
cltd
rclb
xchg
pop
or
scas
sti
mov
outsl
dec
pop
pushf
mov
jge
mov
scas
xor
gs
je
mov
jle
ret
push
mov
cmc
cmp
add
test
mov
paddd
into
sub
cmpsl
mov
nop
movsl
xchg
cmp
sahf
mov
xchg
int3
movsb
mov
or
stc
mov
into
dec
pop
mov
fcoml
push
je
ja
shlb
push
cltd
cmp
push
jmp
adc
dec
push
xchg
ss
stc
push
mov
inc
dec
lods
xchg
add
and
clc
mov
sbb
iret
xchg
je
shlb
pop
aaa
imul
scas
sub
lock
dec
pop
pop
mov
push
mov
jge
out
cmp
test
xlat
mov
add
fldt
dec
aad
test
sahf
outsb
test
pop
fwait
stos
pop
jbe
mov
subl
dec
add
loopne
and
xchg
mov
add
sub
cli
lcall
mov
jge
mov
addr16
jno
xor
or
jle
dec
fdivr
add
push
ret
nop
add
leave
or
mov
xchg
adc
inc
dec
maskmovq
testl
cmp
lods
sub
adc
insl
cmc
test
pop
repz
inc
mov
lds
sbb
xor
andb
xchg
out
fsubl
fs
sahf
sti
mov
rcll
pop
jp
fwait
daa
mov
dec
adc
jg
decb
sbb
or
pop
fs
pop
dec
xchg
sbb
aaa
addr16
xchg
adc
je
mov
xlat
mov
mov
repnz
xchg
pop
fcompl
mov
sahf
push
into
mov
call
xor
cwtl
addl
mov
mov
addr16
cltd
shrl
aam
cmpsb
je
in
push
out
std
and
jae
mov
lds
in
xchg
cmp
lea
mov
sbb
sub
xor
pusha
ss
lods
mov
mov
sbb
inc
pop
lods
aad
xchg
sarb
orl
repnz
add
fldt
jb
cmp
jp
ja
or
fildll
jne
xor
ret
mov
lahf
inc
fcomp
lea
gs
sbb
pusha
dec
ja
cmp
scas
outsb
stc
mov
int
test
rcrb
ret
pop
lods
cmp
fldenv
pop
mov
cs
mov
mov
arpl
sbb
out
mov
fsubrl
int
xchg
stos
bound
dec
or
test
test
lods
sbb
arpl
sub
pop
pop
pop
sahf
mov
loop
or
std
xlat
mov
pop
in
repnz
fimuls
mov
mov
movsl
clc
mov
testb
in
sti
and
in
xor
fisubs
js
scas
aaa
int
jbe
xor
pusha
test
push
aad
pop
pop
xchg
mov
out
mov
xor
fstps
jno
xchg
mov
mov
ret
sbb
jne
test
dec
add
sub
lock
push
dec
push
stos
loopne
loope
cmp
jno
daa
push
dec
insb
jle
aad
stos
dec
mov
lds
ss
jmp
mov
cmpsl
stc
cmp
lock
add
fmuls
repnz
xchg
lret
mov
inc
push
adc
and
cmp
cmpsl
mov
aam
fwait
adc
add
cmpsl
shll
fcompl
jnp
xchg
das
cmp
mov
mov
inc
adc
sub
mov
adc
jb
push
leave
std
pop
movsb
xchg
out
decl
rorb
rcl
pop
or
cmp
inc
flds
xchg
test
negb
std
push
mov
icebp
sub
ret
sbb
fldenv
adc
sbb
mov
subb
testb
mov
mov
iret
add
sahf
cltd
test
lods
mov
add
mov
ficomps
cmp
mov
and
jmp
ret
pop
jo
pop
orb
inc
loope
pop
push
sbb
or
and
lahf
add
testb
movsl
mov
leave
cmp
rep
xchg
mov
cmp
lds
jle
sub
mov
stos
pop
sub
mov
movsb
add
addr16
or
pop
cmp
or
jecxz
addb
popf
int3
and
sub
loope
and
in
arpl
xchg
test
pop
mov
std
test
and
sub
or
push
lds
enter
jno
std
adc
jp
push
into
out
mov
xor
sbb
push
in
test
andps
jl
and
adc
test
pop
xchg
xor
clc
les
test
jno
inc
test
sti
xor
xchg
sti
out
push
leave
mov
test
int
jle
aaa
xchg
nop
mov
ret
push
add
jne
sub
add
cmp
test
in
ds
push
mov
cmc
iret
aad
xchg
sbb
push
push
mov
ret
mov
in
push
stos
sub
xorl
lds
cltd
cmp
pop
les
mov
cmpsl
in
lods
dec
push
popa
pop
jle
cmpsw
mov
jge
sub
jl
popf
adc
aaa
mov
inc
jno
inc
mov
sbb
mov
dec
out
std
push
jae
ja
or
jno
incb
out
pop
and
lods
mov
or
push
nop
inc
ror
fcompl
jae
cmpsl
inc
mov
imul
xchg
fld
xchg
pop
add
loopne
es
and
std
popl
push
std
test
in
sbb
fcmove
xchg
push
cli
push
pop
fisttpll
mov
int
xchg
iret
sti
fucom
mov
cmpsl
pop
mov
movsb
cmp
mov
jnp
les
mov
ret
outsl
sti
dec
adc
lds
adc
incl
faddl
and
mov
push
sub
inc
or
xchg
lret
and
inc
shrl
cs
flds
add
mov
rorb
mov
mov
pop
dec
add
jp
push
scas
out
les
pop
mov
andl
std
pop
push
scas
mov
and
xor
pop
icebp
mov
enter
das
mov
mov
stc
rol
in
lock
or
dec
cld
test
cmp
xchg
mov
and
xchg
cmp
push
imul
mov
mov
insl
popf
int
cmp
cmpsb
fldenv
mov
test
mov
sti
mov
cmp
test
sbb
sub
aam
mov
out
inc
xlat
call
test
adc
loope
inc
or
sbb
xchg
sbb
sbb
and
movsl
addb
push
xor
add
cs
mov
sbb
and
sub
test
andb
lds
cmp
sti
dec
call
mov
test
pop
test
push
popa
dec
xchg
or
ret
nop
ja
and
xlat
sub
dec
pop
jg
fimuls
xchg
mov
add
add
daa
jge
xchg
xchg
int
push
pop
out
mov
cli
mov
cmpsl
inc
dec
xchg
stos
rcr
mov
jmp
hlt
movsl
jge
loope
sbb
flds
aad
das
movsb
sarl
inc
cmp
pop
dec
pop
jno
or
lods
inc
cld
fbld
fcompl
mov
in
loopne
or
cmp
xchg
in
cmp
clc
leave
cmp
mov
test
mov
test
mov
lock
xchg
sub
movsb
lahf
adc
stos
icebp
adc
mov
push
push
xchg
and
fadd
push
pushf
movsl
dec
and
leave
mov
inc
push
xchg
xor
sti
cmp
iret
fcmovne
xlat
mov
scas
idivb
mov
lcall
mov
stos
xchg
movsl
pop
push
xchg
adc
push
cmovge
jge
xchg
fsub
xor
cmpsl
mov
sbb
adc
mov
andb
ljmp
pop
fwait
loopne
xchg
push
mov
int
aam
lods
push
adc
xor
lods
sarb
mov
push
mov
or
lahf
ja
add
shl
arpl
cmp
fldcw
push
loope
dec
pushf
fistpl
xchg
mov
inc
leave
xchg
jecxz
and
xchg
mov
cwtl
std
lods
push
push
fistl
inc
rsqrtps
mov
addr16
mov
ficompl
push
shl
mov
notb
scas
flds
pop
test
dec
mov
sbb
ss
pop
push
hlt
mov
dec
fstps
mov
lcall
ljmp
sbb
push
jns
mov
imul
ljmp
stos
fwait
popf
test
test
fstps
pusha
jp
sub
jns
outsl
mov
mov
adc
movsl
mov
lcall
mov
xor
xchg
add
and
add
or
adc
fidivs
jb
mov
pop
repz
inc
pop
dec
push
jns
inc
mov
leave
dec
or
sbb
lods
add
scas
cmp
xor
mov
fildl
mov
pop
xchg
sbb
rorl
sbb
dec
sarl
or
sbb
pop
mov
into
repz
jmp
push
js
jge
dec
add
mov
iret
cmp
clc
cmp
movsb
aam
lods
mov
push
dec
pop
pushf
dec
cmc
add
mov
mov
adc
jnp
mov
mov
xchg
push
movb
mov
jns
push
xor
push
jne
xchg
outsb
sti
call
push
out
xchg
mov
test
fcompl
xchg
sbb
add
sti
icebp
sub
loop
adcb
push
adc
sub
jp
stos
in
fnstcw
and
adc
xorl
lock
aaa
out
push
mov
mov
cmp
jns
sub
imul
mov
mov
or
lret
push
inc
shll
out
test
pop
pop
sub
mov
mov
mov
pop
in
int3
pop
or
dec
hlt
pop
push
xor
fiadds
loop
loop
das
pop
pop
mov
sbbl
es
and
ds
adc
add
lahf
stc
iret
outsb
enter
fcoml
in
pop
scas
data16
dec
scas
sti
lcall
push
inc
lret
ficoms
add
jmp
sahf
lods
pop
and
seta
in
repnz
lods
mov
test
loop
arpl
lahf
add
dec
lods
add
mov
xchg
dec
xchg
out
xor
fldt
inc
push
xchg
int
xchg
cmp
roll
int3
mov
mov
fs
ja
mov
stc
fdivrp
xchg
aam
push
and
out
xor
lea
mov
out
and
cli
sbb
mov
das
and
in
push
xchg
cmpsb
pop
and
jmp
mov
cli
call
repnz
jmp
test
shl
mov
add
dec
xlat
xor
xor
mov
subb
xor
mov
cmp
push
xchg
call
xor
sbb
inc
mov
mov
test
mov
mov
mov
jp
fstps
aad
aam
lcall
mov
adc
std
xchg
push
inc
lods
ja
pop
mov
ljmp
cmp
lods
cmpsl
mov
lods
mov
xor
es
shl
and
imul
aam
cmp
inc
or
lea
mov
xchg
out
mov
dec
jmp
decb
or
add
pop
movb
out
data16
mov
scas
dec
mov
fisttpll
sar
test
popa
int3
fnstcw
mov
sti
jno
dec
xlat
mov
push
sub
lcall
pop
ret
adcl
xchg
lcall
inc
ljmp
push
ss
lahf
or
push
push
flds
nop
sub
lods
lcall
sub
sbb
jae
cwtl
pop
cmpsb
scas
pop
or
mov
into
pop
sahf
jno
popf
ret
adc
inc
sub
rcrl
sbb
xchg
or
xor
or
fabs
cmp
lock
ficomps
repz
xchg
fistpll
in
out
adc
popf
pusha
and
jp
sub
push
jns
mov
imul
pushf
mov
rcl
dec
cmpsl
jno
cmpsb
mov
rsm
add
inc
fdivrs
pop
mov
roll
or
cld
lds
adc
loopne
cmpsb
das
xchg
mov
inc
mov
lds
mov
dec
mov
clc
cltd
das
imul
sub
mov
gs
outsl
shll
jecxz
inc
and
in
adc
xchg
dec
push
mov
ljmp
out
xor
mov
mov
mov
popf
xchg
outsl
mov
inc
cmp
cmp
int3
into
cmpl
cli
jnp
dec
int
mov
test
std
xchg
push
nop
loope
test
or
or
sbbl
jae
jl
les
mov
sub
xor
cmp
cmp
vpshad
add
out
test
jns
mov
pop
and
sbbb
add
push
jno
popa
mov
push
dec
repz
fistl
mov
cmp
dec
test
xchg
cltd
in
movsl
xor
sbb
out
add
add
int
lea
fdiv
push
pop
leave
or
scas
pushf
test
mov
pop
stos
insl
xor
sub
and
flds
mov
dec
loop
mov
mov
sbb
and
xor
sub
sbb
cmp
xor
inc
in
cs
loop
mov
jne
jno
sub
pop
add
mov
mov
es
insb
fld
xchg
cmp
mov
leave
sbb
inc
insl
mov
fisttps
shrb
nop
mov
fidivrl
dec
dec
mov
testb
mov
sbb
mov
sub
fsts
mov
and
adc
xchg
fnsave
scas
xor
sbb
mov
sahf
sbb
arpl
dec
cmp
into
jne
xchg
mov
sub
xchg
mov
mov
add
arpl
sbb
stos
movsb
insl
add
and
xor
sub
inc
stos
jp
leave
loope
movsl
push
pop
or
lret
out
cmp
lcall
stos
lcall
popa
repz
ficoml
push
mov
mov
lret
add
addr16
unpcklps
mov
mov
mov
into
add
jecxz
adc
fsubrs
pushf
mov
cwtl
sbb
pop
roll
add
sub
push
jg
les
les
negb
cmpsl
sub
divb
xor
cld
dec
loop
bound
scas
inc
clc
xchg
int3
mov
jnp
sahf
push
repnz
jbe
lcall
pop
jbe
std
mov
lret
adc
repnz
mov
out
xchg
scas
inc
bound
fimull
int
pop
mov
aad
push
push
mov
shll
xor
jnp
xor
cmp
addl
int
jb
test
int
mov
fwait
lods
mov
test
lahf
and
sbb
das
or
mov
insl
sub
loope
ja
dec
imull
pop
jae,pn
fxch
mov
negb
or
pop
nop
fistl
bnd
mov
xor
add
mov
pop
pop
dec
mov
pop
jno
xchg
ljmp
push
mov
mov
pop
dec
pop
xchg
lret
mov
push
mov
jns
sbb
pop
cmpsb
into
mov
dec
sbb
sub
out
pop
std
insl
cmpl
push
sbb
lea
je
jnp
inc
test
inc
dec
loope
stc
push
fstpt
imul
scas
sbb
cmp
aas
cs
arpl
inc
fwait
call
into
flds
lock
or
pop
gs
lcall
add
scas
push
push
insb
std
lods
sti
inc
inc
mov
sub
ljmp
out
loop
mov
aaa
fucomp
cmp
mov
lods
rorl
popa
add
iret
movsl
shrl
sbbb
jb
jbe
mov
push
mov
dec
scas
xor
mov
push
sar
lods
imul
out
mov
sub
mov
popa
mov
or
je
not
dec
into
leave
or
cli
and
in
ljmp
jnp
jge
sbbb
mov
mov
or
in
jnp
nop
inc
rolb
flds
adc
mov
repnz
sbb
add
dec
inc
loope
test
lahf
mov
es
dec
adc
mull
mov
mov
jo
sbb
scas
xchg
repz
pop
adc
mov
mov
jg
lods
or
push
xchg
fidivrl
jo
inc
inc
xchg
xor
dec
repz
mov
popa
movsl
repz
adc
popf
lds
data16
xchg
adc
pop
pop
jle
test
ja
flds
int3
imul
jno
int3
testl
faddp
or
or
dec
js
mov
movsl
mov
nop
popa
mov
pop
imul
inc
mov
fs
lahf
rcrl
or
sarl
sub
mov
xchg
in
jo
pop
lea
fsubl
call
or
movsl
movsl
sahf
mov
fwait
xchg
mov
aas
sub
jg
and
addr16
add
pop
pop
cld
ret
lcall
or
and
shlb
xchg
sbb
imul
inc
cmpsb
test
fwait
iret
lods
xlat
loope
inc
adc
xchg
enter
imul
fldt
mov
jae
or
xchg
std
push
mov
les
xchg
fnstenv
movsb
aam
hlt
mov
xor
inc
inc
mov
or
cmpsb
add
or
fcomi
popa
sbb
inc
cld
mov
stos
in
jo
mov
inc
test
dec
adc
xor
adc
pop
in
sbb
popf
fidivrs
adc
gs
in
pop
jnp
and
cmc
loop
aas
mov
fsubrl
xchg
scas
mov
orb
andl
or
loop
fsubrl
out
imul
xchg
mov
jecxz
div
mov
cwtl
ljmp
outsb
inc
mov
add
sbb
arpl
hlt
sub
daa
adc
push
ret
pop
into
pop
es
and
cmp
shr
aam
and
sti
xor
sbb
lods
dec
rolb
push
hlt
rolb
sbb
pushf
lahf
cmp
mov
mov
cmp
stc
mov
jno
pop
sub
xchg
bound
stos
push
sub
jns
jnp
xchg
clc
repz
mov
lcall
out
and
jnp
cmp
mov
dec
cmp
fwait
mov
repz
das
xlat
test
movsb
test
push
mov
jbe
xchg
add
scas
sbb
sti
sbbl
gs
sbbl
into
loopne
loop
sub
xchg
mov
test
xchg
pop
or
into
sub
lcall
enter
loope
sub
lods
jb
xchg
data16
icebp
das
in
xchg
mov
fnstenv
fstps
xchg
std
adc
adc
or
sar
outsl
dec
mov
pop
pusha
out
fldenv
xchg
adc
lahf
sub
test
outsb
or
sub
jl
stos
pop
jecxz
stc
lret
mov
js
cmpsb
test
scas
int
cmp
out
push
mov
xchg
sbb
sarb
mov
push
in
xor
adc
rcl
dec
mov
scas
mov
cmc
mov
test
xor
dec
leave
xchg
cmp
jae
fstps
iret
icebp
test
jle
dec
mov
push
leave
ret
pushf
mov
fidivrs
icebp
lods
fistl
popf
out
ja
cmc
mov
push
hlt
push
addr16
mov
xchg
rcrb
mov
test
inc
in
mov
movsl
pop
add
inc
in
movsl
pop
sbb
jge
sbb
lret
out
outsl
inc
sahf
fxch
shll
out
lahf
mov
fists
mov
loope
popf
repz
and
push
add
mov
mov
dec
add
add
rorb
les
out
sbb
pop
pop
gs
cli
repz
in
fdivrl
mov
cmp
jge
aaa
iret
bound
repnz
jmp
xchg
mov
pop
inc
xor
imul
mov
push
pusha
push
aas
lods
add
mov
dec
mov
scas
mov
in
out
xchg
mov
pop
int
jmp
cltd
xchg
cmpsb
ret
and
cmp
imul
subb
sub
aam
push
out
inc
scas
shlb
jp
mul
lods
clc
mov
and
leave
fwait
xchg
dec
movsb
sahf
pop
jae
js
cmp
cmc
mov
dec
cmc
lret
mov
xor
xchg
xor
jle
xchg
fildl
or
mov
rorb
push
pushf
lcall
mov
xchg
loopne
mov
mov
and
dec
sbb
xor
aad
repz
or
sahf
and
cltd
cmp
ds
repnz
adc
jae
fcmove
jae
repz
idivb
sti
out
xchg
and
out
push
xchg
lret
cmpsl
jne
jae
or
cmp
sahf
inc
pop
push
int
pop
mov
incb
and
cltd
fstps
jmp
dec
pop
ficomps
jmp
xchg
xorb
inc
mov
cmp
push
sbb
scas
dec
sbb
lahf
pop
inc
pop
sti
leave
sub
gs
adc
fnstsw
fwait
push
ficoml
push
out
mov
push
cwtl
or
sbb
cltd
cmp
in
mov
dec
sub
mov
and
popf
xchg
out
addr16
enter
jmp
int
add
fcomps
and
test
sub
fwait
sbb
cmp
push
add
or
roll
sti
xchg
xor
jg
stos
and
xlat
mov
fstps
int
inc
inc
adcl
loop
lods
dec
sbb
stos
inc
mov
int3
jp
lods
cmp
xchg
std
lret
lods
sbb
stc
ljmp
or
adc
xchg
pop
idivb
sbb
sub
js
dec
aam
imul
popa
ds
jnp
loope
push
cmp
mov
pop
and
test
mov
jl
lods
int3
popf
fldenv
pop
mov
jl
repnz
xor
out
mov
mov
and
or
fists
dec
scas
sbb
add
movb
mov
add
mov
outsb
mov
pop
push
sub
or
xchg
hlt
inc
fwait
and
lret
or
call
mov
cmp
and
insl
pop
adc
adc
stos
jp
cmpsb
fisubl
mov
orb
sti
in
mov
and
pop
sti
sub
fsubrs
jg
jecxz
loop
in
dec
in
loopne
rcll
mov
loop
ja
aad
push
push
mov
nop
fcomp
jb
push
push
in
std
je
adc
push
push
repz
cmpsl
xchg
sbbl
inc
flds
mov
mov
push
and
out
xchg
jns
pop
test
ja
lock
fs
mov
sbb
stos
jae
dec
roll
roll
or
gs
repz
sti
roll
mov
pop
mov
pop
jle
ds
test
scas
pushf
movsb
test
outsb
das
aam
and
mov
scas
or
fcoml
mov
sbb
pop
inc
pop
stos
in
mul
lret
sarb
jbe
xor
lret
sub
inc
jmp
and
jno
aaa
ljmp
mov
imul
sbb
xchg
fldl
and
xchg
movsb
sbb
cmp
lret
add
cmp
gs
dec
cmp
cmp
out
int
mov
cmpsb
icebp
test
mov
ss
mov
mov
iret
jmp
fldenv
add
insb
or
cmp
aaa
and
sbb
sarb
lret
lret
inc
and
fiaddl
pop
dec
jo
movsl
jle
icebp
push
jbe
imul
mov
xchg
and
pop
xchg
dec
jne
cli
sbb
dec
add
sarl
dec
mov
test
lds
mov
push
lods
and
dec
pop
push
adc
es
mov
subl
add
mov
push
xchg
mov
call
ljmp
daa
in
bound
fdivrs
add
clc
sbb
xor
add
cld
test
inc
jle
daa
lea
insl
out
xchg
jno
outsb
testb
roll
fistpll
enter
sub
pop
and
scas
xchg
lods
mov
pop
push
add
lcall
inc
fistps
dec
es
int3
sti
xchg
or
cmpsb
or
fstpl
leave
sbb
ret
mov
sbb
fdivl
mov
cmp
loopne
sub
xchg
xor
mov
ja
inc
and
je
xor
jmp
mov
lock
jnp
mov
pop
test
int3
push
je
or
xchg
add
jns
ss
roll
in
int3
lret
sbb
sub
jmp
rorb
mov
loopne
iret
or
mov
pop
xchg
lea
and
and
sbb
xchg
gs
adc
mov
pop
or
fsubl
lcall
out
shll
lret
push
das
std
lcall
cmp
bound
loope
imul
push
jns
out
dec
ficomps
push
mov
lds
or
fdivrp
dec
cmc
int
test
pushf
mov
ficoms
adc
pop
imul
movsl
xor
lcall
lds
pop
sbb
pop
mov
fsts
mov
mov
xor
out
sbb
shlb
aad
movsl
imul
mov
lods
outsl
dec
mov
sbbl
negl
dec
cmp
popa
mov
pop
xchg
ljmp
shll
pop
cmp
xor
cmp
adc
cmp
div
lea
pop
fldt
je
mov
lret
std
add
stos
ret
mov
mov
xor
cli
lcall
test
fld
std
pop
dec
inc
push
push
arpl
and
inc
and
fdivrl
cld
ret
dec
in
ror
or
mov
jle
mov
xor
xchg
fildl
mov
fninit
aam
repnz
subl
pop
rcrl
mov
int3
out
imul
loopne
test
adc
jmp
push
mov
das
xchg
inc
and
ds
sbb
add
out
add
icebp
jns
lahf
aam
subl
push
pusha
repz
hlt
add
fwait
gs
fabs
gs
mov
sbb
sub
sub
sbb
loopne
ja
lods
stc
lcall
and
dec
add
scas
cmp
inc
imul
es
aas
push
clc
mov
insb
mov
pop
sub
sbbl
mov
das
xchg
or
mov
xchg
mov
jbe
int
into
int
xchg
js
push
or
ljmp
in
data16
mov
loop
cmp
pop
mov
scas
sbb
push
and
pop
cmp
jmp
iret
aas
pop
and
mov
mov
fldl
hlt
call
fisttpll
iret
mov
inc
cmpsl
inc
and
mov
cli
movl
aam
cld
dec
mov
sti
push
loopne
aaa
push
ret
clc
fsubrl
cmpsl
sbb
fiaddl
sub
lea
fld
inc
dec
add
mov
cs
push
push
iret
stos
aam
in
mov
out
cmp
lea
mov
push
sub
lret
jle,pt
pop
xchg
jp,pt
subb
push
cmp
push
out
xor
cltd
jne
add
in
add
fsubr
and
lods
je
add
mov
cltd
mov
add
jnp
clc
aad
bound
mov
add
mov
dec
movsb
add
sti
ds
ss
inc
divl
sbb
cmc
pop
cmp
mov
std
aad
jbe
test
or
out
jnp
rcl
je
inc
mov
pop
mov
jne
movsl
adc
cmpsb
mov
test
mov
and
sbb
mov
testb
outsb
add
pop
daa
and
cmpsl
lods
pop
movsl
sub
movsl
push
mov
cmp
pop
or
add
sbb
inc
jmp
jae
pop
add
dec
int
in
lods
pop
test
inc
aam
mov
or
ds
aam
test
lds
cs
xchg
aam
cmp
mov
or
push
xor
insb
fadds
lock
mov
movsb
rol
pop
test
jns
or
pop
adc
popa
adc
ja
push
lds
push
pop
int
inc
jmp
sbbl
add
in
jg
int
xor
cmp
mov
push
movsb
mov
cmp
jb
fdivrp
filds
mov
and
out
or
call
jge
dec
cmpsl
pop
es
or
cmp
and
and
call
push
lret
aam
cmp
jae
out
xor
ja
and
repz
adc
out
aas
push
cmp
daa
mov
mov
sub
mov
sub
add
sti
les
and
xor
push
add
push
fbstp
mov
das
sub
push
in
lret
xchg
fsubl
fsubrs
imul
or
xlat
repz
push
pop
cmp
in
jp
lods
jl
das
aam
int3
jae
out
loope
mov
mov
fsts
jmp
dec
push
push
dec
sub
sub
flds
sbb
out
jnp
mov
xchg
lods
in
rcr
incb
insb
jnp
lcall
das
jae
mov
out
jp
mov
cltd
push
jp
sub
mov
adc
test
jmp
xor
dec
mov
les
cmc
mov
jae
jbe
das
gs
in
mov
push
imul
data16
in
sti
pop
push
pop
fidivs
xchg
adc
mov
xlat
push
pop
push
test
test
dec
sti
jno
das
jae
dec
rep
push
xchg
mov
xchg
pop
int
fwait
pop
in
stc
mov
clc
fpatan
and
xchg
lods
popa
cltd
dec
pop
sub
mov
sbb
or
fisubs
aad
dec
mov
jecxz
mov
cld
std
xchg
and
in
jp
ss
cmp
push
lds
pop
in
icebp
add
push
fldenv
and
mov
es
fildll
sub
inc
jno
xchg
fs
test
es
fnstcw
addb
sbb
scas
cmp
push
jecxz
xchg
mov
mov
lcall
lahf
fcmovu
es
xor
mov
nop
rcr
cmpsb
adc
fcoml
sub
test
xor
lods
std
mov
add
arpl
inc
mov
mov
lret
imulb
pop
sub
fcomi
and
inc
addr16
sub
dec
pop
sub
int3
push
and
loope
jecxz
test
push
mov
cmpsb
out
rcl
lret
pushf
jl
xchg
pop
jne
xor
pop
pop
mov
movsl
decl
mov
push
cld
xchg
fisttps
add
out
bound
loope
test
inc
dec
mov
mov
lcall
dec
and
push
das
sbb
sbb
cmpb
cmp
popa
xlat
int3
shlb
xchg
add
dec
jecxz
pop
sarl
push
testb
int
xchg
and
hlt
xchg
cmpsb
mov
ret
push
push
sub
popf
movntq
rorb
lahf
testb
in
insb
jg
fsubl
pop
cmpsb
int
popf
adc
mov
out
stc
inc
and
dec
icebp
rorl
loop
stc
mov
jae
enter
xor
cmp
mov
outsb
rorb
push
lock
je
cmp
and
adc
cmp
aam
fwait
int
loope
xchg
test
decl
in
int3
sbb
andl
into
idivl
mov
decl
sbb
pop
lret
sub
xchg
xor
mov
insl
mov
inc
pop
add
pop
cs
cmp
mov
mov
repnz
stos
add
mov
movsl
push
dec
xor
aam
mov
and
pop
lock
cltd
jle
stc
orb
mov
inc
nop
add
scas
stos
decb
dec
push
cltd
scas
pusha
inc
aaa
cld
fidivs
push
fldenv
ja
aaa
hlt
dec
imul
xor
xchg
aad
cmpsb
jecxz
dec
jg
data16
cmpsb
lea
cmp
stc
ljmp
cmpsl
test
xchg
stc
xor
and
dec
sahf
mov
sbb
popa
pusha
stos
jno
movl
sub
or
inc
dec
test
sub
jb
jle
ja
pop
mov
popf
inc
sahf
and
test
cmpsb
lods
sub
jecxz
add
xor
es
xchg
mov
ret
fdivs
lods
cli
xchg
stos
in
ficompl
sub
fptan
push
adc
icebp
pop
inc
clc
shrb
cmpsl
mov
lahf
mov
imul
cli
icebp
jl
imul
push
push
mov
lock
in
dec
jp
jle
mov
sub
sub
push
rorl
inc
mov
flds
jb
add
jl
loopne
sbb
lretw
jle
fcoml
in
and
push
out
mov
mov
movsb
xchg
push
jle
dec
addr16
push
dec
in
int
adc
in
cmp
add
int
xor
add
sahf
shufps
flds
inc
dec
lahf
dec
sahf
lret
imul
mov
mov
sub
dec
cmpsb
js
adc
pop
inc
jnp
frstor
xchg
push
mov
std
cmp
mov
mov
andb
sti
cltd
fildll
lods
sahf
scas
fldenv
orl
test
fstpl
rcr
push
pusha
push
out
pop
and
mov
lret
and
adc
stc
mov
jns
out
jmp
sub
lea
pop
stos
sub
mov
out
jns
cli
cltd
lods
jae
scas
jecxz
dec
sub
int
xchg
scas
pop
jge
and
pop
jge
scas
test
mov
jl
fistpll
dec
cli
in
add
in
ds
je
hlt
popf
xchg
push
pop
inc
in
in
dec
cmp
loope
popf
sub
mov
hlt
inc
sub
test
mov
sub
div
repnz
jle
add
xchg
mov
fmull
mov
out
mov
int3
ss
or
push
popf
add
aaa
out
jnp
out
sbb
in
mov
test
adc
movsl
pop
int3
jne
jge
mov
pop
fsub
imul
add
sbbb
push
mov
sbb
add
mov
mov
bound
fdivl
in
dec
pop
sub
pop
push
push
adc
inc
or
aas
and
pusha
mov
jg
shrb
push
sbb
sbb
mov
xchg
sbb
arpl
or
inc
mov
test
clc
jecxz
data16
lock
inc
fidivs
cmp
xor
xlat
in
mov
jo
faddp
clc
pop
lods
mov
push
scas
inc
add
outsw
lret
insb
sub
push
test
rcl
movsb
das
test
call
mov
jbe
mov
in
popa
ficomps
stc
push
sbb
loop
bound
sbbl
sbb
das
outsb
mov
pop
jl
and
mov
lret
push
lds
fwait
jle
fwait
loop
pop
push
mov
or
adcl
insl
pushl
pop
aaa
test
in
jp
leave
xchg
popa
mov
dec
int
ret
adc
shl
pop
or
out
xchg
mov
pop
cmc
push
sub
cmpsl
mov
mov
add
repz
sti
mov
push
jb
xchg
xchg
and
or
test
repz
in
xchg
lods
xchg
das
jo
jg
rcrb
fwait
adc
xchg
xor
out
aam
test
pop
push
sbb
aaa
fcmovne
and
enter
inc
popa
inc
cmp
iret
mov
xchg
int
pop
pop
mov
mov
jmp
xchg
xor
or
rorl
cwtl
sahf
cmp
or
rol
sbb
int
clc
jl
xchg
mov
add
js
pop
jmp
sbb
in
gs
in
push
cmp
push
cmc
fs
fs
and
mov
and
les
jno
cmc
repz
in
gs
push
push
daa
repnz
sbb
sub
mov
xchg
call
lds
xor
outsb
push
das
nop
lods
mov
sbb
adc
ja
sbb
popa
xor
neg
es
pop
ja
lahf
repz
pop
sbb
fcmovne
or
mov
or
lock
jo
xchg
lret
cmc
inc
out
and
jb
xchg
pop
cmp
mov
mov
pop
fnstenv
fsubrl
flds
mov
mov
out
rol
push
adc
in
jae
cmc
std
xchg
xchg
int3
inc
inc
jp
andl
popa
or
push
cmc
in
out
mov
test
ret
data16
push
cmpsl
scas
xchg
mov
ja
or
mov
test
sbb
mov
cmpsb
mov
dec
jle
add
mov
push
sbb
fstps
push
cmp
adc
sub
lcall
cmp
loopne
sub
fldenv
mov
int
mov
mov
bound
mov
pop
in
mov
stos
xlat
shrl
fsubl
sub
mov
jp
sub
xchg
jb
cld
cs
xchg
pushf
xchg
add
aad
rorl
jge
mov
int3
in
pop
fldenv
and
stos
mov
jmp
add
das
inc
fldlg2
and
flds
lock
inc
ja
fisubs
leave
mov
out
in
loope
cmpsb
outsb
lret
dec
or
push
in
mov
in
gs
mov
fldenv
test
push
bound
cmp
pop
mov
movsl
xor
lret
push
inc
mov
pop
test
jb
pop
lods
push
sub
lock
inc
or
outsl
test
push
movsb
mov
out
adc
fsubrl
fldcw
inc
push
cmp
test
test
pop
add
incb
jp
aam
jge
dec
fdivr
cmp
jecxz
int3
mov
int3
mov
pop
push
adcl
pop
pop
xchg
and
dec
adc
scas
ss
test
xchg
push
jae
xchg
push
fwait
jecxz
fisttpl
fnstcw
cmp
adc
stos
int3
ljmp
dec
cmp
xor
sbb
push
stc
iret
xchg
gs
cmp
push
adc
sub
sub
mov
xchg
pop
lods
cmovne
in
and
popa
jns
push
hlt
add
stos
jecxz
push
mov
jge
fsub
push
mov
mov
lods
sbb
jmp
stos
push
es
dec
inc
aas
mov
shlb
sub
repz
xchg
faddp
nop
cltd
dec
xchg
sti
pushf
icebp
push
adc
xor
xor
addr16
dec
daa
in
mov
out
or
dec
xchg
paddusw
sub
push
test
mov
cwtl
sub
mov
fsub
pop
xchg
idivl
fnstenv
xchg
mov
mov
xor
jae
cli
sub
es
fs
sahf
mov
jl
pop
xorl
and
les
pop
out
jo
push
or
sbb
lret
mov
insb
mov
popf
pop
adc
fdivl
aas
and
test
out
pop
ljmp
cmpsl
or
sub
add
filds
fwait
into
xchg
and
mov
or
xchg
push
fisubs
dec
jp
sbb
adc
scas
cltd
cmp
adc
jae
in
cs
sub
stos
repz
and
sbb
push
pushf
test
mov
mulb
movsb
jp
sub
scas
stos
nopl
repz
in
pop
test
mov
sub
aam
je
jecxz
cmp
push
shlb
cmp
dec
sbb
xor
int
shrb
sub
sbb
jnp
leave
cmp
mov
mov
mov
jp
iret
in
nop
xchg
mov
push
push
insb
mov
sub
jnp
lret
push
out
add
mov
mov
in
imul
xor
les
lods
fldt
sub
repz
dec
popa
mov
mov
adc
subb
dec
xor
mov
dec
int3
pop
xbegin
pusha
fbld
or
js
test
mov
inc
lret
repz
mov
fldt
addl
fcmovne
pop
jb
xchg
stos
mov
cmp
icebp
lods
adc
dec
ret
sbb
test
mov
lods
lret
cld
dec
push
fildll
and
jbe
jle
cwtl
loop
or
movsb
push
sbb
adc
push
mov
popf
xacquire
dec
adc
and
movsl
repnz
test
push
adc
mov
jae
add
outsl
das
loop
mov
mov
shlb
nop
inc
rcrl
xchg
adc
jmp
mov
out
push
decb
movsb
popf
mov
mov
arpl
push
add
jns
pusha
and
sahf
subl
fldl
test
std
addr16
inc
ret
imul
call
movsb
out
sub
cmp
mov
test
cmpsb
insb
and
or
xor
push
add
aam
sbb
mov
jbe
loope
jecxz
sbbl
repnz
imul
xor
xchg
sub
mov
aaa
dec
sbb
jge
rorl
mov
rclb
push
mov
cmpsb
pop
or
addl
mov
pop
outsl
pop
sub
cmp
ds
dec
cmp
imul
movsl
fldenv
push
mov
cli
jp
mov
xchg
jnp
mov
and
mov
jnp
std
mov
or
ret
cmpsb
inc
ret
icebp
mov
movsl
jg
pop
mov
loopew
data16
icebp
mov
in
push
cmp
inc
and
out
sbb
cmp
test
push
mov
rcrl
mov
pop
sub
pop
pushf
test
fnstcw
dec
xlat
mov
cmp
jnp
or
xchg
mov
lds
jle
aam
cltd
and
fldl
shll
sub
xlat
in
xor
add
test
test
adc
pop
and
ret
pop
inc
mov
mov
popl
lea
pop
movzbl
jge
stc
sbb
cwtl
es
push
jp
enter
imul
dec
mov
fnstenv
mov
fucomp
pusha
outsb
pop
xchg
pushf
sub
data16
dec
xchg
aas
fldenv
mov
stos
fstpt
mov
mov
inc
push
xchg
jae
xchg
hlt
fcoms
les
lcall
and
std
test
sub
jg
xchg
stos
inc
inc
lahf
test
imul
mov
and
loopne
aaa
in
mov
pop
imul
lods
or
clc
push
xor
xor
cltd
test
push
jne
xchg
outsb
push
jl
cmp
mov
int
pop
jecxz
ja
ja
movsb
test
mulb
jecxz
js
cmp
cmp
lea
mov
out
je
push
xor
mov
sub
and
cli
mov
movsb
cld
movw
lds
sbb
js
sub
cmp
ja
ss
cmc
aas
pop
sbb
sbb
in
fcoml
in
leave
or
lahf
lcall
jmp
mov
mov
push
mov
mov
in
fsubrs
xor
scas
stc
inc
adc
mov
jl
out
idivb
dec
fs
mov
outsl
adc
mov
test
xchg
rcr
push
pop
cmp
arpl
sbb
cmpsl
or
push
mov
clc
inc
cmpl
paddsb
xchg
test
test
out
inc
xchg
sub
inc
adc
lods
test
mov
add
movsb
xchg
outsb
jae
pop
movsl
push
cmpl
test
sub
cmp
xchg
cmp
dec
sbb
mov
jecxz
mov
movsl
test
jo
stos
aad
out
xchg
cmpsl
fidivs
lods
mov
loopne
outsb
cmc
jne
mov
bound
test
call
shlb
jle
jb
test
jae
fs
cmpsl
mov
aam
mov
stc
fsubrs
push
dec
stc
loopne
jbe
lcall
repz
repz
shrl
adc
hlt
scas
jl
inc
loop
mov
push
into
mov
int3
mov
add
pop
add
sbb
ljmp
lods
call
ret
push
addr16
xchg
scas
js
cmp
mov
aad
dec
mov
push
or
pop
inc
icebp
mov
out
orb
jne
imul
dec
fndisi(8087
sti
add
xor
stc
insl
insl
out
loop
jns
xor
push
dec
es
cmp
cmp
imul
cmp
dec
ss
lcall
or
sub
xor
dec
pop
and
push
cmp
in
adc
std
shlb
leave
fldenv
push
test
lock
xchg
aas
xlat
hlt
dec
cmpsb
mov
lea
scas
push
xchg
lret
or
sub
xchg
in
cmp
aas
dec
mov
sbb
or
push
sar
testb
sub
jl
shll
mov
int
inc
movsb
cwtl
call
dec
imul
scas
adcb
xchg
add
xchg
inc
sbb
nop
mov
iret
push
jnp
cmpl
fistl
mov
int3
sbb
mov
popf
xor
out
std
lahf
gs
icebp
and
fwait
clc
insl
sub
or
mov
ds
lods
nop
pop
fnstenv
in
addr16
cld
int
cmc
push
and
sahf
dec
lret
inc
sbb
xor
test
outsb
sub
mov
aaa
incb
lods
jg
cmp
or
pop
imul
in
cmp
call
xor
lahf
push
mov
popf
mov
or
in
inc
les
fstps
lods
push
jg
sub
pop
hlt
add
into
ss
xor
icebp
cmp
mov
inc
mov
aam
je
cmp
mov
push
mov
pop
push
cmp
adc
dec
clc
push
pop
fs
mov
addr16
add
jne
ss
dec
cwtl
sub
fld
inc
jae
stos
sbb
std
dec
sub
add
sti
out
fildl
ffree
sbb
stc
mov
push
loopne
inc
xor
leave
sub
push
ds
popf
push
xchg
into
cmp
scas
sti
sub
sub
mov
dec
lcall
sbbb
or
and
pushf
jb
dec
dec
adc
inc
or
outsl
xchg
ficoml
hlt
das
lahf
jmp
orb
sub
xlat
int
pushf
sbb
push
call
flds
jecxz
pusha
ret
mov
pop
incb
fdivl
sbb
xchg
in
in
in
mov
push
out
jle
xchg
dec
cmp
sub
xor
jae
in
xchg
scas
mov
ret
jnp
pop
or
cmpsl
in
fldl
sti
cmpsb
push
ss
sbb
data16
in
fs
and
in
xchg
adc
jge
outsb
mov
dec
and
pusha
loopne
pusha
int
loope
mov
shrl
cld
adc
xchg
xor
out
dec
jle
push
lods
xchg
int3
imul
dec
jge
mov
bnd
adc
jno
and
jmp
scas
nop
cmp
pop
mov
xchg
aam
xchg
fincstp
insl
lcall
and
loopne
lret
test
dec
fsts
push
aad
push
xorl
mov
mov
ds
jne
imul
xchg
xchg
and
sub
sbb
lret
das
jne
sbb
imul
in
jns
jno
fdivrs
mov
fs
mov
test
int3
add
cmp
sub
sti
lods
loop
scas
in
inc
xor
outsb
fwait
pop
lret
pop
mov
das
sahf
sbb
sbb
mov
mov
int3
in
cli
sub
adcl
mov
gs
call
xor
push
ljmp
mov
adc
and
or
cmpsl
mov
adc
ror
dec
jmp
sub
xchg
add
mov
xor
pop
mov
cs
dec
lret
push
test
pop
lret
aam
lahf
repz
inc
mov
pop
lds
add
dec
lods
scas
enter
or
imul
repnz
push
data16
xor
jbe
outsb
push
cmp
stc
inc
jb
xor
aad
fwait
and
lock
xchg
fcmovu
sub
fldenv
movsb
pop
mov
sub
test
dec
jbe
aam
cmp
mov
dec
jg
jno
xchg
int
jnp
sahf
sbbb
es
pop
mov
add
inc
das
cmpsl
ja
sbb
xchg
push
dec
sar
mov
stc
adc
out
pop
sbb
test
movsb
adc
add
mov
les
insl
enter
sbb
rol
dec
faddp
int
jno
cmp
mov
stc
jge
enter
in
and
xchg
inc
movsl
fwait
ret
cmp
jnp
rolb
mov
test
sbb
and
sub
cli
pop
mov
in
xchg
mov
adc
jno
pop
in
addr16
das
xchg
add
or
mov
xor
inc
mov
and
sahf
fnstenv
lods
daa
cmp
icebp
push
pop
daa
and
ror
ja
inc
mov
ret
ja
jno
pop
cmpsb
pop
or
push
clc
push
sub
les
cli
iret
cs
enter
sub
fiadds
jb
fisubrs
in
jecxz
jo
xchg
insl
fstpt
mov
sbb
int3
mov
es
xchg
jae
int
jmp
stc
lea
mov
rcrl
mov
add
jno
es
or
cwtl
pushf
sub
in
sub
movsb
add
hlt
frstor
hlt
push
mov
jecxz
clc
sbb
jp
int
lret
je
push
mov
sub
push
outsb
js
ficomps
push
sbb
dec
mov
sbb
repnz
mov
loopne
mov
push
jae
repz
jecxz
sub
not
ljmp
add
pop
sbb
jge
idivb
pushf
dec
cmp
mov
mov
incb
jp
gs
mulb
or
out
cld
mov
xchg
int3
std
cmp
lret
pop
test
fcmovu
mov
inc
lods
mov
std
xchg
mov
gs
or
dec
push
mov
in
and
dec
and
dec
jae
jne
loop
in
testb
xor
repz
ljmp
test
out
out
pop
and
cld
push
xorw
mov
fbld
daa
jmp
in
xchg
fidivrs
jmp
mov
push
adcl
push
add
aaa
sub
dec
movsb
mov
dec
das
dec
or
iret
mov
stc
xchg
mov
lock
cmp
sbb
loope
cli
xor
ficoms
cmpb
xchg
in
cmp
fdivl
roll
xchg
mov
pop
mov
pop
inc
cwtl
in
cs
inc
jmp
test
test
paddusb
and
scas
arpl
mov
dec
ds
outsb
push
inc
bound
adc
and
stc
inc
loop
cmp
cmp
xchg
cmp
fwait
loop
scas
testl
mov
cmpsb
pop
mov
ficomps
pop
cmp
outsl
dec
fdivr
cld
push
add
test
inc
out
pop
lods
scas
inc
stos
movsb
cmp
and
or
test
pop
movl
add
into
stos
or
jl
lahf
mov
push
insl
adc
xchg
ret
adc
sub
pusha
mov
sti
mov
lcall
ficompl
add
imulb
out
test
ret
sub
add
lar
pop
mov
scas
lea
mov
lahf
xor
mov
sub
leave
fdivrl
outsb
pop
pop
inc
call
adc
cmp
sbb
iret
shr
lahf
fimuls
sub
push
push
out
xor
nop
fsubrl
cli
lret
sarb
lods
pop
xorl
xor
aam
jp
mov
mov
inc
fcmovb
jecxz
imul
xchg
fsubrl
cmc
cld
cmp
push
popf
fidivs
mov
out
cli
jno
leave
testl
mov
jbe
in
test
in
inc
scas
lret
mov
rcll
enter
shrb
idivb
jae
nop
cld
addl
out
add
xlat
test
inc
int3
aad
mov
pusha
cwtl
push
dec
fistps
mov
jns
test
cld
mov
loope
sub
mov
inc
cmpsl
xchg
dec
aaa
pop
cmp
push
dec
ljmp
enter
imul
push
mov
pop
xchg
mov
add
sub
lods
jae
mov
fwait
call
adc
repnz
cmp
jl
xchg
xchg
lret
cli
aad
test
stos
and
and
cmp
jl
sahf
lahf
loop
loopne
lret
mov
addb
sbb
add
sar
xchg
decb
aaa
int3
xor
mov
push
cmp
scas
bound
cltd
out
gs
loop
push
dec
pop
add
pop
push
mov
icebp
dec
pop
inc
sahf
xchg
imulb
jle
mov
mov
adc
popf
es
and
mov
xor
cmp
in
push
ja
mov
sbb
les
inc
shll
sbb
lret
mov
mov
push
pop
xchg
inc
in
in
popf
xor
ljmp
jb
push
pop
in
lea
mov
loopne
mov
pop
out
adc
std
pusha
xchg
mov
mov
sbb
mov
jns
cld
sarb
adc
ret
xchg
inc
mov
fiaddl
cmp
jg
mov
xor
popf
out
out
dec
xchg
jae
sub
mov
scas
lock
flds
div
insb
jnp
les
cmpsl
push
sbb
adcl
mov
xor
cmp
cmp
or
movsb
sub
sub
jae
mov
aas
arpl
mov
mov
sti
mov
adc
mov
roll
shlb
sbbl
ds
xor
and
jo
mov
sarl
push
xor
mov
jb
fnstenv
lcall
test
xchg
repz
into
jle
push
pop
mov
cwtl
or
das
add
les
sbb
inc
cmpsb
in
xchg
repz
pop
icebp
fmull
xchg
push
out
sbbl
sbb
imul
mov
das
mov
cs
mov
sbb
push
fsubrs
mov
lcall
mov
or
add
pop
in
jmp
adc
inc
jnp
insl
popa
dec
mov
dec
fimull
cmp
mov
cmp
bound
xchg
xchg
cmp
fwait
inc
mov
xchg
sub
push
in
xorb
sbb
pop
dec
cmpsb
jnp
jae
punpckhdq
xor
fsubrp
daa
sbb
sbb
data16
test
and
dec
fwait
repnz
sbb
out
shrl
push
popa
out
sbb
push
sbb
jmp
dec
in
out
push
mov
xor
dec
stos
lods
jb
enter
push
dec
add
cmp
inc
and
lods
sbb
push
and
mov
mov
in
mov
ss
lcall
push
mov
test
xor
aad
nop
dec
mov
pushf
mov
loope
lock
mov
inc
popf
lds
cmpsl
cmc
fwait
mov
rcrl
adc
sbb
addr16
mov
jmp
push
in
test
test
cmp
mov
cmp
sbb
fistpl
insb
imul
sub
pop
jl
lods
push
enter
mov
js
mov
loope
pop
movsb
pop
jg
popa
fnstcw
or
mov
fsub
repz
mov
mov
inc
pop
xchg
stos
jp
rolb
leave
mulb
sbb
mov
imul
cmp
inc
xchg
mov
sub
movsb
jb
dec
fnstenv
cli
sub
inc
pushf
repz
pop
test
stc
insl
cmp
mov
fnstcw
jmp
push
pop
mov
jge
bound
adc
xchg
push
mov
mov
aam
and
sbbb
cmpsl
mov
test
lods
and
imul
cmp
mov
stos
mov
sti
sbb
mov
mov
popa
adc
jle
rol
dec
jecxz
adc
aaa
pop
fldenv
adc
dec
xchg
popf
into
adc
mov
scas
xor
xchg
adc
sub
clc
clc
into
add
or
dec
out
xchg
cmp
movsl
adc
jae,pt
xor
addr16
sub
xchg
scas
mov
cld
sub
xchg
popf
sub
mov
movsb
xchg
fstps
out
push
mov
cmpsb
mov
in
pop
sti
enter
add
push
jbe
mov
fwait
sub
push
jle
xchg
sbb
add
test
mov
das
sti
mov
and
inc
cwtl
mov
out
pop
scas
frstor
es
and
stos
ficoms
inc
and
fnstcw
repnz
sub
jp
outsl
push
push
or
mov
mov
fldcw
lds
xchg
out
sbb
cmc
je
xchg
inc
call
adc
pop
fdivp
cmp
dec
xchg
mov
sub
repnz
xchg
arpl
push
mov
stos
mov
dec
pop
cmp
dec
pop
mov
lods
int3
ret
or
sbb
mov
das
movsb
lods
push
mov
icebp
aad
inc
dec
int3
push
sbb
push
push
lahf
loope
mov
imul
ljmp
mov
pop
and
xchg
movsb
pop
sbb
test
dec
addr16
mov
je
enter
dec
cmp
daa
repz
test
xchg
mov
in
cld
push
push
js
mov
and
cmp
cmp
cmp
fdivl
dec
pop
xlat
stc
mov
cmp
and
inc
lods
es
inc
cs
gs
aaa
mov
mov
cmp
fimull
cmpsb
add
mov
leave
movsb
lret
cld
fcomi
pop
jg
andnps
sbb
dec
add
cmp
aam
ljmp
out
scas
aas
mov
outsb
scas
mov
andl
out
and
clc
fs
push
jo
jo
fbld
mov
fmuls
ret
and
adc
int
inc
int3
in
into
pop
adc
pop
mov
jbe
aam
ret
addr16
lret
out
add
mov
rcrl
hlt
iret
daa
loopne
and
push
adc
jmp
ss
nop
cmp
fcoml
sbb
test
rcrl
and
cmp
addr16
int3
loop
cmp
adc
aaa
sub
xor
mov
mov
sbb
mov
pop
inc
xor
rclb
je
mov
imul
sar
sbbl
dec
mov
or
pop
repz
gs
test
push
jno
rcll
inc
movsl
mov
das
sbb
push
rolb
cmp
cmp
xchg
cmp
fnstcw
cmp
pop
lods
jno
hlt
test
xor
jle
call
cmpsl
or
popl
or
insb
ss
or
mov
mov
cwtl
dec
inc
push
movsb
inc
adc
and
lods
mov
and
sahf
dec
and
push
int
pop
jmp
inc
mov
out
sub
mov
xor
mov
cmpsl
xor
cmp
pop
xchg
cltd
mov
mov
data16
push
add
pop
add
lods
mov
and
popa
sbb
faddl
mov
mov
fstpt
xchg
enter
mov
cmp
loop
icebp
push
xor
sbb
sbb
mov
pop
xor
pop
incl
push
jecxz
xchg
subb
mov
push
out
cmp
ss
scas
push
mov
lods
movsl
test
cmpsb
fwait
or
inc
sbb
scas
test
xlat
nop
mov
jns
xor
sub
out
and
ljmp
mov
jb
movsb
adc
fcoml
cli
in
and
fadds
push
jge
cmp
xor
xor
dec
in
mov
fdivl
test
or
mov
xchg
ja
lds
push
cltd
cwtl
mov
fiaddl
or
cmp
test
test
adc
std
pop
stos
xchg
jp
mov
repz
faddl
push
push
sbb
jb
out
mov
addr16
lcall
mov
lahf
jae
cmp
xchg
pop
inc
jp
je
jp
pop
dec
mov
stc
sub
mov
hlt
fstpl
test
inc
gs
cs
mov
nop
gs
xchg
mov
xorb
inc
pop
push
enter
and
xor
sar
cmp
mov
sbb
pop
sbb
pop
xchg
cmp
movsl
lret
in
push
in
aas
scas
das
jbe
in
fstpt
cltd
sbb
cmpsb
lret
repz
pushf
int
scas
jp
pop
mov
jne
inc
mov
leave
adc
aam
sub
xchg
mov
jae
ret
mov
lods
xchg
pop
lret
xchg
and
js
mov
xchg
cmc
loope
loop
inc
xor
cli
cmp
pop
loopne
mov
test
aaa
repnz
sahf
and
cmpsl
stos
mov
je
add
dec
mov
mov
subb
into
inc
pop
mov
xchg
mov
test
insb
lds
fstps
sbb
in
bound
loop
div
cmp
xchg
cbtw
faddl
out
jae,pn
mov
pushl
dec
xlat
rorl
push
sbb
es
fimull
xchg
in
push
xchg
fisttpl
pop
insl
push
data16
push
mov
cltd
adcb
hlt
fincstp
mov
xchg
mov
or
jp
lds
test
adc
scas
ljmp
jge
icebp
xchg
sbb
mov
and
mov
adc
jae
test
adc
xlat
cld
sub
dec
pxor
sahf
and
les
adc
loop
or
out
es
lcall
mov
mov
cmp
cs
mov
out
gs
adc
sahf
jb
xchg
aaa
mov
int
sub
jle
dec
pop
cld
cmp
lret
and
popa
orl
test
jno
mov
shll
push
repz
mov
in
sahf
mov
mov
add
leave
sub
mov
cmpsb
xchg
cmp
hlt
mov
idiv
inc
fs
pusha
or
jl
shrb
or
subb
xchg
and
es
inc
cmp
xor
in
mov
fidivs
rcrb
hlt
mov
fdivp
inc
sub
hlt
les
mov
ja
nop
inc
jecxz
dec
xor
adc
xchg
cmpsb
dec
or
and
pop
mov
fsts
sub
add
shrl
sbb
sti
mov
jb
test
fimuls
gs
fcmovnbe
hlt
dec
jp
push
fldcw
mov
mov
push
hlt
push
sub
dec
add
mov
out
and
cmp
es
rcrb
and
adc
outsb
popf
jbe
jecxz
inc
sbb
negl
popa
cltd
call
nop
mov
es
xorb
ja
sbb
inc
hlt
fsubrl
clc
xchg
xchg
gs
in
mov
mov
test
jnp
imul
push
mov
sbb
pop
lods
or
mov
cmovl
inc
hlt
pop
scas
test
xchg
inc
mov
cmp
or
in
mov
jg
sub
test
push
cmpsl
jae
nop
mov
xchg
pop
pop
sahf
pusha
test
aad
or
jne
mov
enter
sbb
mov
sti
test
in
mov
and
cwtl
cmp
xchg
xchg
roll
or
pop
ret
xchg
ret
test
mov
push
mov
sahf
inc
test
add
or
fsubrp
pinsrw
adc
add
loop
aaa
decl
stc
or
daa
xchg
mov
xchg
sahf
lea
addr16
lods
mov
sbb
jmp
jno
lret
outsb
popf
xchg
mov
add
sbb
scas
fnsave
push
jp
leave
pop
imul
lds
push
test
insb
xor
into
pop
push
xchg
leave
fldcw
mov
adc
xchg
loop
lds
jl
aas
dec
lods
in
fwait
mov
push
mov
inc
inc
lods
neg
inc
in
lahf
jo
std
inc
add
std
out
mov
in
or
fs
imul
sahf
stos
popf
adc
mov
cmpl
inc
daa
test
xor
pop
dec
mov
pop
sbb
fnstenv
cmp
sub
cli
jecxz
jne
or
cmp
insl
lds
mov
mov
and
adc
lret
clc
mov
cmp
sahf
iret
je
inc
mov
sub
jecxz
pushf
dec
xchg
mulb
mov
sbb
std
das
test
jp
mov
and
push
xchg
lahf
pop
mov
pop
sbb
sub
dec
mov
pusha
jno
fxch
push
stc
and
adc
push
aad
push
pushf
xchg
aam
mov
lcall
fisttpl
mov
shlb
sub
mov
mov
cmp
sbb
mov
shl
shlb
mov
loope
loopne
cmpsb
xchg
mov
sbb
lds
sbb
outsb
test
push
outsb
cmpl
pushf
iret
enter
fpatan
leave
aaa
jb
lret
xchg
int3
sbb
mov
xor
xchg
sbb
nop
and
arpl
jp
decb
xchg
outsb
add
jp
pminsw
mov
loop
out
lods
mov
dec
pop
mov
sti
lods
ss
icebp
pop
push
in
xchg
pop
test
test
fnstenv
jae
inc
lahf
test
insb
inc
rcr
jb
nop
ret
test
inc
pop
and
fstps
jb
mov
pop
das
xlat
cmp
and
dec
sahf
pop
push
rclb
aad
loopne
mov
fistpl
cmpsl
test
fld
or
jns
movsb
daa
ror
jmp
orb
mov
cmp
std
push
test
push
mov
push
mov
inc
mov
mul
adc
cld
cmpl
ja
into
pusha
lcall
jno
cwtl
lea
sbbb
jnp
jno
hlt
cmp
xchg
and
mov
pop
cmpsb
sub
xchg
and
sbb
jb
popf
adc
mov
test
test
mov
dec
test
out
xor
xor
inc
pop
fnstcw
sar
out
jae
insb
jecxz
das
or
andb
test
out
int
push
jle
cmp
adc
inc
dec
mov
mov
fdivs
and
inc
aas
cmc
pop
mov
sahf
test
into
mov
jb
lahf
clc
out
imul
fstpt
inc
push
ficompl
sub
insb
es
popf
dec
xchg
orb
dec
pop
out
ja
sbb
or
repz
cs
cmp
rcrb
cmpsb
shrb
mov
pop
orl
mov
xchg
and
jg
imul
ss
add
cmp
mov
repz
jmp
cmp
int3
xchg
stc
arpl
and
push
xchg
xchg
lods
inc
xor
aas
sub
xlat
sbb
jmp
cltd
les
or
in
cmc
rorl
mov
inc
out
lret
sbb
pop
jns
movsb
aad
jnp
rep
movsb
jnp
pop
cmp
aam
scas
xchg
int
scas
test
imul
sbb
es
cmp
lods
jbe
push
call
int
pop
jl
jbe
imul
inc
and
movsl
fildll
ja
adc
mov
push
lods
sbb
rorl
cltd
hlt
sbb
ja
xchg
scas
negl
arpl
mov
mov
lods
mov
or
sub
stc
pop
sub
sbb
mov
mov
imul
sbb
or
divps
push
decl
fdivrp
jo
ss
xor
out
jae
mov
andl
das
rcrb
xchg
ficoms
repnz
scas
jno
mov
enter
mov
sbb
mov
push
andb
inc
enter
je
arpl
popf
mov
mov
bound
xchg
cmp
pop
push
xchg
inc
mov
push
cltd
insb
pop
das
pop
cmp
loope
adc
dec
in
cmp
lahf
bound
call
popf
scas
imul
rorb
mov
cs
jns
sub
lret
and
bnd
xchg
dec
push
sbb
fnstenv
xchg
mov
incl
popf
inc
add
dec
int
xor
std
sahf
xchg
std
inc
daa
mov
inc
fildl
mov
pop
xor
lods
insl
push
or
fidivs
jmp
fwait
and
or
sub
xchg
shlb
or
cmp
inc
in
push
sahf
cltd
fldcw
and
adc
mov
cld
mov
fmull
insl
pop
mov
lcall
icebp
push
sub
into
mov
jmp
cmc
sub
fxtract
sub
and
inc
or
xor
sbb
sbb
popf
inc
xchg
cli
adc
cmp
andb
mov
das
sub
sti
repnz
flds
pop
mov
out
xchg
xchg
add
cmp
sub
cmp
mov
cmpsb
mov
inc
dec
add
cltd
shrl
in
ret
cmp
divl
xchg
stos
cmc
dec
cmp
leave
xor
dec
adc
test
fsubp
add
sbb
inc
notb
mov
xchg
or
cmpb
pop
fisubs
pop
aaa
std
in
cmp
je
cmp
imul
cmp
inc
vmread
mov
mov
scas
inc
jge
push
adc
add
and
or
sbb
inc
loope
outsl
mov
add
sub
inc
daa
xchg
out
cli
out
stc
dec
or
and
pop
or
mov
out
lcall
movsl
cmp
xor
jp
xor
and
jns
mov
add
mov
pop
out
ja
movsb
test
dec
cld
repz
into
dec
push
and
maxps
loopne
mov
movsw
cmpsb
push
mov
jg
push
cld
inc
jb
loop
fisubs
js
mov
test
sub
mov
mov
cmp
fwait
sbb
in
flds
mov
mov
mov
mov
lcall
push
mov
lods
and
mov
ret
sub
lcall
jmp
pop
mov
fiadds
push
fildl
dec
mov
dec
adc
icebp
mov
dec
ret
lods
pop
or
scas
and
mov
test
push
flds
fwait
mov
sbb
jno
outsb
push
les
sbb
gs
ret
mov
mov
popf
fnstenv
push
push
pop
jecxz
jl
cmc
pop
je
or
sbb
dec
adc
fisubrl
and
inc
mov
adc
out
addr16
xchg
arpl
fldpi
sahf
pop
jo
gs
aad
jecxz
add
pop
mov
inc
dec
les
les
lret
fistps
sbb
enter
mov
jbe
xlat
xor
aam
adc
imul
push
out
xor
dec
lds
int3
cmpsl
test
mov
fstps
aad
les
jne
jg
jo
inc
lods
imul
lret
mov
insb
cmp
pand
in
pop
mov
xchg
jecxz
xchg
cmp
aas
and
pop
xchg
repz
pop
jns
and
imul
into
hlt
testb
mov
inc
and
sub
xchg
repnz
shlb
add
mov
mov
mov
enter
popf
outsb
hlt
in
pop
popa
jb
inc
popa
lds
push
cmc
addr16
fwait
add
dec
call
out
dec
mov
pop
lock
sbb
push
sub
xor
xor
inc
es
int3
test
leave
xchg
mov
fisubrs
xchg
daa
cmp
call
fldenv
cmpsl
cs
in
xor
jle
outsb
int
lahf
sarb
mov
mov
mov
test
jl
lods
xor
dec
jno
loop
stc
and
mov
scas
xor
xchg
cmp
lods
pop
movsb
subl
mov
movsl
aaa
andb
mov
xchg
mov
pusha
aam
in
repz
cmp
pop
in
cmp
decb
jp
std
mov
scas
jae
xchg
aaa
cwtl
in
enter
js
lahf
in
jge
xchg
mov
inc
pop
sbb
ficoms
cmp
jle
mov
aad
les
xchg
dec
testl
xchg
push
mov
mov
outsb
dec
lret
mov
fsincos
test
xchg
xorl
test
inc
or
sub
hlt
hlt
xor
std
icebp
sub
clc
scas
hlt
sub
test
jae
inc
push
add
subb
cmp
xor
and
inc
stos
fldcw
pop
push
sbb
pushf
test
mov
pusha
or
mov
imul
mov
stos
mov
sub
pop
stos
mov
xor
nop
dec
jmp
pop
xchg
popf
int3
in
hlt
jmp
cmc
lahf
ja
cwtl
loope
cld
std
cmpsl
fldcw
jmp
cmpsb
lods
lret
out
inc
sarl
dec
test
call
and
in
cmp
or
scas
inc
sahf
pxor
push
push
in
dec
push
sti
pop
sbb
xor
mov
cmp
dec
cs
stc
xchg
pop
adc
jns
gs
xor
jno
mov
pop
sbb
stc
sahf
addr16
clc
test
js
addl
pushf
sahf
rcrb
scas
mov
sbb
xor
fwait
pop
cmp
add
addr16
leave
cmp
std
int3
fisubrl
in
xlat
xchg
test
std
int3
mov
or
push
xchg
sub
xor
pop
mov
shll
or
pop
sbb
out
mov
movsb
jmp
icebp
or
int3
mov
and
repnz
and
or
shrl
push
sub
test
jns
dec
sub
add
outsl
lods
outsb
movsl
testb
stc
xor
dec
sub
fs
adc
clc
mov
and
xlat
xchg
addr16
adc
mov
in
mov
adc
fistps
or
push
mov
out
arpl
mov
ljmp
out
sbb
hlt
fwait
in
xchg
dec
pop
sub
outsl
clc
mov
adc
cmpsl
leave
ret
imul
cmp
mov
add
sti
or
jno
cmp
mov
pop
jle
lods
sti
repz
out
shrl
xor
mov
jmp
xlat
mov
mov
hlt
pop
mov
jno
das
fcompl
pop
out
push
test
test
xor
mov
pop
bswap
std
push
or
mov
mov
push
mov
sub
sbb
sub
int
out
out
icebp
movsl
sar
in
sbb
andb
jae
cmpsl
or
test
mov
push
lds
in
lods
or
adcb
repz
push
scas
shrl
mov
mov
dec
add
dec
into
dec
or
push
pop
sub
sbb
add
mov
jmp
jno
lret
xchg
push
and
test
gs
dec
sbb
cmc
scas
out
and
dec
js
push
mov
mov
insb
adc
sub
add
push
xchg
pusha
sbb
push
daa
popa
push
aad
js
aam
mov
inc
stos
mov
mov
ds
mov
repz
cmc
mov
add
dec
int3
cmpl
mov
movsl
jg
std
jb
inc
push
fcoml
mov
adc
jge
sub
cwtd
mov
inc
leave
fs
mov
int
imul
adc
lcall
jnp
fistl
jbe
cltd
mov
je
into
test
test
sbb
cmpsb
scas
mov
push
lods
sbb
es
mov
mov
pop
sub
arpl
or
push
test
jne
scas
repnz
lods
sahf
cmp
mov
mov
inc
in
frstor
cmpsl
dec
cmp
push
pop
int3
test
sbb
mov
lahf
jns
fnstsw
mov
dec
fnstenv
fnsave
call
out
xchg
sahf
movsb
popf
cmpsb
push
ja
or
arpl
jnp
jmp
clc
mov
cmpsl
sub
enter
ret
jno
inc
inc
rclb
or
int3
aad
mov
fs
mov
scas
cmp
popa
mov
pop
push
jmp
cmp
loop
jle
sbb
jl
mov
mov
and
les
lds
lahf
lret
out
test
xchg
pop
add
loopne
sbbl
into
inc
mov
or
das
pop
test
fnstenv
clc
cmp
scas
and
pop
cs
in
xchg
cmp
xchg
sbb
mov
add
dec
stc
inc
mov
push
add
out
xor
int3
cmp
dec
in
fdivrl
lods
ja
add
dec
cltd
aaa
aam
xlat
sub
push
fimuls
movsb
fwait
fwait
nop
lds
mov
mov
call
andl
jns
and
hlt
mov
cmpsb
stc
lea
cmp
movsl
or
data16
add
jp
xchg
lock
mov
testl
or
aad
fsubl
push
sbb
jl
rorl
test
xchg
scas
test
xor
xchg
mov
push
imul
lret
mov
cld
push
mov
mov
fnstcw
inc
push
fists
xchg
push
dec
aaa
xchg
or
addr16
sub
js
jo
shrl
and
in
vpunpcklbw
push
lahf
andl
sbb
test
movsl
dec
sahf
mov
in
insl
cmc
fndisi(8087
fcmovnu
loop
xchg
ss
sub
cmp
fstps
pop
dec
outsl
push
flds
and
lods
int3
int
cmp
sbb
test
dec
lds
mov
push
and
jno
pop
push
xor
and
dec
das
jmp
fisubs
ljmp
inc
hlt
cli
icebp
mov
jecxz
jl
mov
pop
fdivp
sti
lock
or
js
fdivrs
mov
call
cmp
sub
sbb
cli
and
rorb
sub
int3
sbb
or
adc
loope
sub
xchg
and
and
out
inc
test
push
pop
push
movsb
mov
push
arpl
aaa
lods
mov
movsl
push
iret
aad
jno
fstpt
xor
test
pop
push
rolb
adcl
icebp
or
cmp
movsb
jle
xchg
inc
stc
mov
sbb
shll
fmull
pop
and
mov
aaa
mov
arpl
divl
aaa
sti
int3
mov
push
in
inc
inc
cmp
stc
mov
faddp
es
xchg
scas
xchg
or
scas
add
das
ds
cld
gs
push
pop
sbb
faddp
pop
or
data16
js
push
ljmp
jae
popf
enter
outsb
adc
in
jge
push
hlt
imul
notl
rcr
and
xor
movsb
xchg
dec
sbb
dec
or
pushf
cmp
pand
fldt
jne
mov
mov
jae
mov
bound
mov
inc
leave
mov
std
mov
jp
das
ret
sbb
or
xchg
or
popf
aaa
mov
mov
dec
mov
out
jg
rep
mov
xlat
imul
je
push
xor
and
out
inc
xchg
push
sbb
push
xchg
aad
ss
dec
test
sbb
les
inc
icebp
popa
adc
adc
xor
sub
fs
inc
xor
jnp
cmp
or
sub
sub
scas
cmpl
mov
out
xchg
lods
mov
pop
lret
mul
loopne
xlat
rcl
cli
das
imul
lds
and
jae
mov
or
insb
into
fdivl
sbbl
hlt
add
fs
mov
lock
sbb
xor
sbbl
mov
pop
les
or
scas
or
fstps
divb
rcl
jnp
and
fistpl
xor
loopne
movsl
enter
cs
jae
ss
jg
xchg
pop
push
push
ret
pop
sbb
mov
mov
aam
incl
repnz
pop
movsb
sahf
je
mov
sub
dec
mov
es
xchg
sbb
iret
ficoms
clc
jnp
mov
insl
clc
lods
test
sub
movsb
cmp
pop
dec
roll
sahf
mov
imul
mov
dec
or
mov
mov
movsl
loop
test
mov
mov
mov
lods
push
push
jnp
clc
in
or
sti
mov
mov
popa
sahf
mov
iret
mov
cmp
outsb
fldcw
sahf
int3
loop
mov
add
or
jmp
ljmp
cmp
pop
pop
sbb
test
push
cmp
pushf
aas
mov
lret
lcall
fisubs
rcll
scas
fwait
repz
pop
dec
inc
dec
sbb
sarb
es
cmp
inc
clc
dec
pop
adc
in
add
clc
mov
int3
les
test
mov
mov
mov
mov
or
xor
xor
mov
cmpsb
scas
inc
jecxz
sti
jne
int3
enter
rclb
mov
pop
fcomps
insb
in
int
ficompl
lcall
int
mov
lret
aad
push
mov
test
sarb
pop
fiadds
cmp
call
adc
ret
jnp
or
loop
scas
or
in
adcb
dec
xchg
in
push
dec
mov
fcompp
xor
push
mov
mov
jecxz
mov
rorl
mov
mov
mov
add
sub
pop
adc
stc
add
hlt
lsl
pushf
lret
test
cltd
lcall
sub
fidivrl
lret
inc
push
mov
loope
xor
icebp
inc
ret
aam
or
addl
test
pushf
and
cmc
enter
addr16
adc
and
pop
sbb
xchg
mov
add
imul
in
cmp
ficomps
subb
fstps
cmc
test
repz
test
loope
iret
out
fiaddl
icebp
sub
mov
and
ja
call
push
fiaddl
je
push
cs
out
leave
mov
scas
int
mov
jo
jbe
fistl
test
xor
test
mov
jp
mov
mov
sub
fisttpll
aaa
lea
jmp
shll
cltd
icebp
jecxz
imul
jle
mov
cmpsb
add
xor
rclb
pop
imul
test
mov
filds
leave
sti
mov
add
out
andb
shrl
pop
test
jns
xor
inc
mov
pop
out
cmp
pop
push
fildl
lcall
stc
inc
sbb
mov
cmpsl
mov
bnd
xchg
shlb
xchg
fstpl
mov
inc
mov
xrelease
xchg
movsb
test
or
outsb
aam
rol
loopne
xor
mov
les
insl
sub
push
xchg
adc
inc
icebp
cmp
jb
mov
les
push
and
xchg
aad
and
mov
xor
or
sub
cmp
out
hlt
dec
mov
pop
bound
add
popf
dec
cmp
xor
cli
in
mov
inc
cmpsb
or
jae
repz
cmpsb
inc
imul
test
or
mov
sub
mov
inc
sub
xchg
loop
scas
adc
jg
pop
mov
pop
shr
test
lock
cmpsl
cmc
sub
outsb
inc
test
aaa
loope
cmp
jge,pt
push
mov
sub
test
rcrb
fidivrs
mov
push
push
divl
movsb
ljmp
mov
mov
or
xorb
pop
dec
fnclex
cmp
push
sbb
imulb
ret
int
mov
filds
xchg
cmpsl
dec
js
jp
and
mov
sbb
cmp
sti
out
fnsetpm(287
insb
cmp
test
jmp
in
mov
push
pop
movsb
repnz
pop
mov
fidivs
and
push
pop
pop
int
gs
mov
xchg
pop
mov
test
call
mov
jg
sbb
sub
loopne
dec
mov
sbb
jecxz
decb
mov
cmpsb
jmp
dec
dec
mov
cmp
repz
js
into
gs
push
mov
xor
dec
sub
enter
push
scas
gs
out
cmp
push
scas
fcomp
mov
enter
jbe
mov
sub
push
lods
adc
flds
and
add
mov
jb
faddl
mov
inc
cli
test
or
out
jnp
cmpsl
jno
adc
pop
and
cwtl
inc
sti
das
pop
mov
lods
jns
mov
sbb
les
out
fwait
and
mov
jmp
cmp
call
dec
cli
adc
and
les
outsb
aad
pop
or
sbb
jne
xchg
inc
inc
jae
sarl
or
sbb
push
xor
dec
divps
push
dec
stos
out
fdivp
out
jns
fists
mov
mov
mov
push
imul
dec
and
inc
adc
mov
lret
add
push
les
mov
and
fistl
flds
dec
mov
repnz
clc
inc
scas
jp
enter
xor
outsb
xchg
pop
xor
std
mov
dec
or
sbb
cmp
xchg
mov
sbb
lods
pop
fisubl
sbb
ret
pushf
add
es
push
rorl
sub
fcoms
fldenv
call
leave
add
add
into
inc
push
loopne
mov
lea
dec
pop
je
cmp
sbb
fsubs
scas
pop
mov
ficomps
adc
mov
and
mov
mov
bound
add
jb
out
test
mov
cmp
pop
and
cld
mov
dec
cmp
push
repz
and
jo
imulb
jae
xchg
push
jle
lods
scas
push
outsl
xchg
arpl
mov
test
fldl
adc
push
push
mov
or
pop
fnstcw
arpl
cmp
mov
outsl
std
lea
sbb
faddl
dec
dec
mov
pop
inc
lock
inc
push
out
imul
scas
cmp
cmp
cli
mov
sbb
inc
cmp
jmp
fwait
add
addr16
iret
outsb
push
fidivs
sbb
pop
dec
repz
mov
shlb
xchg
sub
cmp
and
jecxz
cli
sub
in
pushf
and
clc
mov
cmpsl
xchg
daa
out
stc
in
lods
les
xchg
shld
mov
in
xchg
push
cmp
mov
mov
inc
sbb
push
ss
mov
repnz
pop
cld
vpcomw
mov
xchg
shll
stc
inc
ret
fstl
xchg
popa
push
cmp
cmpsb
aam
loope
sarb
fnstcw
jecxz
jo
popf
or
test
mov
sahf
inc
loope
xor
mov
out
pop
out
rclb
cltd
fs
lods
xor
lret
mov
insb
sub
sbb
and
out
mov
movsb
add
mov
mov
insl
dec
inc
adc
cmp
push
aaa
scas
fs
sti
dec
je
les
int3
inc
gs
sub
inc
sti
sbb
leave
mov
xchg
mov
cmpsl
das
pop
mov
int
jle
mov
fnsave
fidivs
pop
add
test
test
jecxz
or
out
out
addr16
data16
in
mulb
loop
or
loop
ret
xor
mov
push
and
pushf
mov
gs
cmpsl
dec
pop
mov
jl
dec
and
mov
fisubrs
iret
mov
imul
pop
or
xchg
or
lods
pop
cmc
dec
out
and
cmp
movsl
pusha
mov
cmpsb
or
lods
pop
adc
cli
mov
pop
xor
sbb
cmp
popa
jno
mov
push
lret
repnz
lcall
hlt
cmp
push
inc
sbb
call
scas
in
dec
dec
sti
jb
testl
and
andb
dec
ja
dec
movsb
or
mov
xchg
dec
push
into
mov
lahf
xchg
imul
cmp
lret
mov
mov
aas
es
ja
mov
scas
pop
cmp
int3
xchg
out
adc
cmp
idivb
popf
inc
pop
adc
stc
loopne
and
xchg
mov
gs
popf
fnstenv
imul
int
inc
cmp
fnstsw
push
fdivl
and
pop
lea
mov
loope
test
sbb
fsubr
xchg
sbb
mov
shrl
insb
std
pop
icebp
sub
cltd
aam
cwtl
imul
push
fcompl
xlat
ss
or
fdivrp
cmp
mov
xchg
les
xor
mov
mov
daa
mov
add
sbb
idivl
xchg
bound
cmpsb
xlat
mov
xor
pop
push
loopne
jle
lock
test
fbld
mov
xor
les
or
idivl
fsts
push
das
cmp
jl
mov
loop
fiaddl
mov
cmc
mov
mov
cmpl
jnp
push
sarl
sbb
sub
and
lods
cs
into
xchg
adc
inc
sbb
fstl
sub
rorb
clc
in
pop
jnp
mov
pop
jp
dec
popa
sbb
aam
pop
jno
xchg
movsl
dec
mov
xor
adc
cld
divb
push
mull
fbld
out
pop
outsl
or
lock
loop
or
sbb
imul
xchg
jnp
fisttpl
mov
out
loope
aam
movsl
mov
test
adc
push
lods
adc
out
shrb
and
adc
leave
ja
sub
adc
outsb
mov
xor
repz
adc
xchg
in
pop
sub
andb
push
std
xchg
push
scas
fwait
movsb
jge
lods
int
mov
ss
fwait
movsl
sub
aas
and
mov
push
push
mov
div
pop
mov
fstps
in
xchg
mov
xchg
adc
pop
push
mov
xchg
jp
push
ret
xchg
cmp
ret
movsl
out
outsl
mov
movsl
pop
adc
or
pop
mov
adc
mov
fs
fwait
add
pop
addl
leave
or
fcoml
sbb
std
fmull
adc
gs
out
lods
xor
loop
push
test
icebp
pop
adc
dec
mov
test
jnp
jecxz
xor
movsb
adc
sub
ljmp
icebp
xor
cmp
fidivl
jnp
and
cmpsb
cmp
sub
pop
sbb
adc
dec
jl
daa
inc
push
fcoms
push
dec
lret
stos
aam
scas
sub
add
das
push
push
add
nop
fs
les
lret
je
xchg
push
sbb
xchg
push
mov
popa
out
push
jmp
cmp
scas
int
pop
std
xorl
mov
inc
jae
push
int3
pushf
das
xchg
aaa
xor
mov
clc
add
mov
sub
dec
jbe
movsb
and
iret
pop
loop
pop
add
and
pushf
dec
shlb
xor
inc
inc
and
jge
xlat
dec
mov
mov
aas
inc
in
in
push
sahf
xor
add
cltd
push
test
shrl
mulb
fsubrs
jns
sub
add
mov
std
imull
xchg
loope
sbb
mov
or
and
mov
scas
pop
lock
pop
addl
lea
hlt
fnop
mov
mov
test
cld
scas
cmp
mov
xchg
stc
mov
aam
xchg
adc
sahf
adc
push
inc
dec
in
fnstenv
leave
pop
scas
sti
and
mov
sahf
cs
cmp
cmp
sbb
adc
lea
imull
lods
sti
mov
add
push
ds
cmp
test
dec
out
add
mov
sbb
rol
test
stc
and
mov
pop
popa
or
icebp
or
jl
das
mov
sub
jae
sbb
pop
jne
lea
mov
lock
lods
ficoml
fisttps
iret
mov
cmp
pop
push
out
inc
dec
es
pop
cmpsb
ror
mov
hlt
jg
addb
push
lcall
test
xor
sbb
inc
addr16
jae
test
mov
mov
pop
jb
xchg
jbe
hlt
mov
or
sub
rcll
adc
jle
add
movsb
in
mov
sub
lds
fdivrs
fnstenv
repz
subl
stos
in
sub
mov
jmp
xchg
mov
cltd
dec
addr16
sub
dec
inc
sbb
das
cltd
shl
stc
mov
push
test
push
les
sbb
mov
imul
dec
dec
out
popf
repz
std
adc
inc
push
cmp
cmp
jnp
pop
push
xor
mov
lea
and
add
sub
jnp
aad
sbb
pop
or
shll
call
cmc
stos
jmp
mov
xchg
fmull
pop
fisttpl
cwtl
aaa
and
jne
jae
ja
sahf
xchg
scas
jne
test
mov
decl
mov
lahf
fstl
cmpsb
sti
ret
push
push
std
fxch
cmc
jnp
xor
mov
adc
xchg
shll
mov
xchg
into
xor
sbb
pop
mov
stos
rcr
out
mov
fsubs
adc
sbb
mov
das
mull
xor
sbb
arpl
sbb
mov
outsb
mov
packssdw
test
fsts
int
lret
cmp
cmp
mov
mov
fmul
les
sub
dec
cmpsb
nop
test
push
lods
std
test
daa
and
inc
sbb
sbb
mov
sbb
dec
mov
test
iret
xchg
xchg
and
fiaddl
mov
pop
mov
mov
int
pushf
sbb
dec
pop
jmp
xchg
scas
test
subl
bound
scas
push
jo
mov
es
mov
sbb
xchg
sub
fadds
inc
sbb
shl
mov
repz
cmp
repnz
push
mov
int3
call
add
cmp
xchg
add
or
or
fcompp
jo
jno
sub
loop
fdivrl
xchg
mov
jb
mov
push
xorb
inc
xchg
testb
mov
je
mov
mov
or
movsl
sbb
popf
push
cmc
mov
add
or
sub
or
add
mov
call
scas
test
xlat
stc
in
add
dec
jp
inc
aaa
imul
mov
jnp
and
mov
mov
imul
jne
sbb
sub
pusha
cltd
inc
dec
push
aas
fwait
mov
mov
push
ret
shrb
dec
sarb
mov
ret
repz
push
inc
stc
cmp
cmpsb
xor
jle
insb
jae
in
or
repnz
es
fcomi
inc
mov
int
cmp
xchg
push
jns
mov
jl
js
mov
inc
add
sbb
lock
in
push
imul
push
repz
inc
pop
ret
test
scas
add
addr16
pop
adcb
xor
push
pushl
out
sbbb
push
sarb
mov
sbb
jae
mov
aad
test
xor
je
xchg
sub
daa
jno
lock
dec
call
addr16
sarl
push
lret
dec
test
test
lods
cmpsb
adc
mov
xrelease
pop
xchg
fldcw
sub
mov
mov
mov
daa
scas
out
pop
mov
jle
mov
xor
test
ret
cmpsb
and
ret
in
cld
sbb
sub
sbb
test
mov
add
ljmp
xchg
push
lcall
sub
cmpl
pop
cmp
imul
adcb
lret
cmpsb
subl
es
adc
std
pop
addr16
in
inc
fidivl
std
fstps
jmp
int
scas
xorb
mov
ljmp
mov
and
inc
sub
roll
arpl
sub
mov
push
mov
xchg
xchg
adc
faddl
xrelease
popa
adc
cltd
cmp
bound
or
rorl
jecxz
mov
es
stos
adc
cmp
loop
test
js
or
sbb
push
sbb
int
cmc
mov
xchg
cmp
out
sub
xchg
mov
inc
int
jae
sbb
stc
fmull
sub
into
insb
movsb
inc
xor
xor
and
or
push
insl
pop
inc
roll
inc
fxch
cmp
cmpsb
test
and
jge
pop
pushf
in
inc
fsubr
or
lahf
cmp
lods
xchg
push
inc
or
loope
jg
pop
mov
mov
dec
shlb
aam
and
pop
lods
push
repnz
mov
pop
xchg
aaa
dec
push
mov
adcb
out
in
jp
outsb
mov
dec
out
mov
das
pop
adc
sti
pop
mov
pop
cltd
daa
mov
addb
into
sbb
pop
adc
flds
jl
push
push
dec
or
mov
mov
or
jno
stos
sub
jp
mov
and
mov
test
dec
into
fstpt
fsubl
xlat
je
mov
dec
in
mov
sbb
mov
mov
movsb
fsubl
jge
in
sbb
loop
pop
mov
leave
out
addr16
adc
nop
enter
popa
ss
dec
in
dec
stos
xor
mov
imul
mov
jbe
xor
jge
dec
not
dec
das
cmp
fnstenv
or
cmpsb
iret
push
mov
push
les
mov
cmpsb
cmp
mov
ss
add
loop
and
sub
jge
sbb
lret
mov
int
movsb
push
enter
and
cmc
adc
imul
or
inc
pop
jae
jbe
das
and
jb
mov
cmp
mov
xor
flds
xor
push
pop
cmp
movsb
dec
mov
mov
mov
inc
lods
cltd
inc
fdivr
xchg
mov
cmova
add
cmp
lcall
xchg
mov
mov
decb
sbb
jnp
rcrb
leave
scas
pop
mov
adc
out
popf
sbb
xchg
clc
pop
cmp
lahf
and
pop
lret
pop
mov
add
xlat
ret
lods
inc
push
mov
jae
push
push
arpl
es
call
pop
fiaddl
outsb
inc
xor
int
es
xlat
repnz
test
notl
push
mov
jp
roll
imul
out
jnp
pop
in
fisttpll
data16
fists
mov
fisubrl
aaa
addr16
stos
xchg
mov
sbb
xchg
data16
mov
xchg
jne
int3
imul
movswl
jbe
push
das
setle
daa
push
lock
or
or
pop
pusha
mov
or
fs
fdivp
xchg
out
or
jae
pop
fnstcw
repz
aad
jb
dec
aas
test
scas
lahf
iret
xchg
push
sub
aam
cmp
push
sub
ja
mov
push
sub
jl
aad
pushf
or
cmp
mov
mov
scas
negl
sbb
int
jne
rolb
mov
into
and
pop
dec
mov
test
pop
fimuls
fcomp
sbb
js
out
xchg
test
xchg
or
out
add
scas
xchg
out
jns
nop
jmp
xor
mov
mov
imul
mov
fdivl
and
cmp
fstpl
nop
mov
xchg
mov
sti
xlat
frstor
into
mov
jns
and
sbb
inc
fsubrp
scas
aam
aaa
inc
inc
push
data16
dec
test
daa
pop
stos
jge
jl
jmp
xor
movsb
jg
in
adc
sbb
lret
and
loop
icebp
je
pop
mov
in
clc
test
jo
push
jle
pop
mov
cli
js
mov
mov
jns
scas
in
dec
aam
popa
xchg
test
inc
and
pop
movsl
mov
insl
std
test
lahf
xor
push
arpl
andl
sahf
movsl
add
aad
jle
xchg
xor
push
push
jp
fnstcw
push
mov
test
enter
in
adc
adc
sub
in
ficoms
pushf
push
movsl
ret
inc
mov
inc
sahf
leave
insb
push
and
lods
xchg
xlat
mov
xchg
and
or
mov
int
push
mov
scas
ss
cmpsb
clc
add
das
cmpl
fsubs
xchg
hlt
sub
jnp
inc
xor
dec
cmpsb
push
pop
xor
jg
mov
test
stc
out
adc
negb
lds
jle
pop
je
ss
sbb
fwait
sbb
in
shll
mov
xchg
iret
mov
jne
and
cmp
int3
mov
jmp
mov
dec
mov
bound
scas
insb
xchg
or
data16
jg
xchg
in
adc
or
test
in
dec
and
push
mov
sub
jae
das
loope
and
inc
mov
cwtl
add
clc
sbbb
enter
push
loopne
jl
mov
mov
clc
repz
push
fcoml
xchg
dec
aad
mov
jbe
xchg
pusha
aaa
adc
mov
push
push
test
xlat
inc
dec
ja
cmpsb
mov
mov
aaa
scas
add
xor
cld
push
sub
mov
mov
fbstp
mov
mov
cmp
push
lods
cmpsl
or
sub
das
or
lods
xor
mov
popa
pop
xor
sub
or
mov
mov
lahf
sbb
push
jns
or
xchg
stos
sub
adc
out
aam
cmp
xor
lock
aad
mov
shrb
mov
jle
mov
movsb
addr16
jae
pop
test
mov
mov
out
outsl
pop
mov
mov
xchg
ss
imul
ss
push
xchg
cmp
or
out
stc
aad
sbbl
fwait
into
test
cmp
lcall
xor
test
ret
shl
testl
or
jae
icebp
in
rcr
out
xor
fwait
adc
ljmp
mov
inc
dec
jno
and
mov
cwtl
mov
cmp
push
inc
jl
push
sbb
cmpsb
fsts
jb
mov
mov
and
cli
cltd
out
and
outsb
and
fstps
mov
out
adc
fs
sub
xlat
pusha
leave
lret
iret
cld
sbb
xchg
mov
jmp
sub
sbb
push
mov
pop
mov
aaa
lret
inc
and
sbb
incb
cmc
push
pop
jle,pt
movsb
aas
or
xor
fwait
icebp
xor
sbb
ss
ss
xchg
gs
mov
insl
mov
int3
test
push
icebp
add
dec
jmp
incb
pop
stc
cmpsl
mov
push
inc
mov
cld
inc
test
mov
ds
sbb
mov
dec
pop
add
fsubl
aas
dec
aam
push
and
cmp
sbb
pushf
xchg
push
dec
sub
lea
sub
sbb
mov
sbbl
mov
fisttpl
test
mov
sub
ret
mov
jp
inc
sbb
ss
cmpsb
xor
mov
push
mov
mov
adc
mov
fldcw
stos
rolb
aad
ds
std
cmc
fwait
xchg
test
in
ljmp
imul
sbbb
es
sahf
xchg
lahf
ficoms
outsb
test
bound
out
inc
add
std
js
add
movsl
xchg
xor
cmp
add
loop
orb
addr16
in
mov
andl
adc
test
andl
mov
jle
add
dec
or
cmp
pusha
in
scas
outsb
std
and
test
mov
in
jns
lcall
inc
mov
pop
push
sub
xchg
adc
xchg
sub
dec
call
cmp
dec
mov
aad
movsl
dec
cld
sbb
cmp
mov
subb
adc
popa
cwtl
cmc
push
loopne
scas
cmp
loope
and
fadds
in
jle
rcrl
shl
fwait
sub
inc
movsb
push
fistl
jl
int
fwait
mov
test
xchg
idivl
push
push
pop
aam
test
fnstcw
pop
push
fcmovnb
idivb
pop
gs
aad
jecxz
jecxz
les
or
cmp
push
xor
and
xchg
addr16
jae
cmp
xor
mov
fists
pushf
adc
imul
mov
xchg
cs
mov
test
mov
in
out
pop
add
push
aaa
movsb
cmp
ficoms
pusha
fstpl
mov
and
filds
stos
fldcw
inc
ss
dec
sahf
in
pushf
jbe
cmpsb
pop
test
inc
xor
ficompl
adc
roll
jp
inc
cmp
jge
inc
in
data16
dec
shl
jo
leave
loopne
xor
fisttpll
mov
and
mov
push
lods
shll
cmp
dec
sub
sub
xchg
in
movsb
inc
clc
jnp
call
or
jle
mov
data16
lret
add
mov
pop
jle
repz
adc
inc
bound
fnstcw
pop
jp
mov
fnstenv
push
call
cli
fiaddl
das
jb
or
inc
andl
jbe
xor
jmp
pop
sbb
jbe
inc
or
repz
push
mov
cmpxchg
add
cmp
fisubs
mov
xor
push
gs
mov
push
dec
sbb
popf
sti
mulb
popf
pop
cmp
js
cmpl
jns
out
fsubrl
push
dec
stc
adc
push
pop
iret
es
dec
out
mov
scas
stos
aaa
or
push
rcr
imul
mov
fcomi
push
movsb
sbb
ljmp
fisttpl
orl
mov
push
scas
jmp
inc
in
xlat
std
mov
fadds
ja
cs
jnp
xchg
add
cmp
leave
stc
je
fstp
pop
out
jnp
xorl
andb
pop
push
xchg
stos
fisubrs
or
nopl
cmp
fisubrs
mov
movsl
std
mov
lret
fld
mov
sbb
pushf
out
sti
adc
fsubs
lods
or
neg
add
popa
fld
dec
fstp
ret
test
in
push
inc
popf
and
jns
fsubrl
adc
or
dec
int
popa
jge
jecxz
dec
stos
xchg
lcall
lds
lret
mov
mov
push
pushf
scas
dec
sbb
jecxz
in
test
mov
push
mov
lret
addr16
mov
add
pop
lcall
mov
dec
or
addr16
loopne
pop
jmp
push
pop
icebp
adc
ficomps
xchg
mov
fs
jb
fsubrl
std
out
inc
roll
loopne
test
hlt
pushf
or
adc
mov
sub
in
lods
xlat
shr
add
test
aaa
xchg
in
mov
in
mov
inc
push
shlb
xchg
push
mov
scas
ret
std
sbb
xchg
xor
inc
cmp
or
xchg
in
push
pop
in
mov
dec
dec
or
pop
in
outsb
cmpsb
xchg
popf
cmpsb
test
push
xorb
je
mov
cmpsl
or
ss
es
into
mov
mov
loop
mov
cmp
popf
fisubs
pop
std
fnstcw
inc
bswap
fiaddl
bound
add
xchg
stos
jl
or
std
sbb
in
and
cmp
out
cmp
mov
dec
pop
es
cmpsb
push
loope
fsts
aad
jmp
mov
shll
nop
es
fidivs
fadd
out
sub
repnz
push
mov
aaa
xchg
in
xchg
shll
addr16
popa
mov
icebp
repnz
les
cli
test
jge
stos
cli
push
fbld
imul
xchg
shrl
mov
fisubs
ss
test
bound
push
lret
ds
dec
sbb
sbb
jno
jns,pn
std
add
xchg
je
arpl
inc
out
xorb
lahf
aam
sbb
jecxz
call
dec
adc
pop
fxch
rorl
push
sahf
cmp
xchg
push
lods
ljmp
xchg
out
sub
and
fcompl
pusha
cmpsb
xor
mov
xor
insl
test
cmpsb
adc
dec
ficoml
add
dec
xchg
jnp
inc
xchg
cltd
test
test
sub
fiadds
dec
jbe
hlt
in
into
mov
out
push
inc
inc
mov
shr
enter
ret
inc
lds
out
test
inc
or
imul
jecxz
sar
sahf
aas
add
nop
stos
sub
jno
je
js
sub
push
popf
pop
push
push
dec
mov
push
cmpsb
or
ljmp
sbb
repz
sub
sbb
aas
pushf
test
xor
in
jmp
cmp
pushf
push
test
fstps
cmpsb
push
or
aaa
pop
sub
push
and
add
loope
dec
mov
push
andb
mov
pop
cmpsl
dec
int3
fwait
sub
fisubrl
gs
pop
push
das
xchg
aad
add
add
cmp
xor
js
cmp
and
or
xchg
push
xchg
inc
cmp
pop
minps
mov
pop
arpl
in
stc
js
arpl
ja
repnz
mov
test
ror
mov
cwtl
ret
mov
leave
in
cmp
scas
imul
repnz
ret
cmp
and
inc
mov
test
jg
aam
sub
rcrl
aad
sbb
push
in
jle
mov
lock
and
je
cli
cltd
stos
stc
fadds
hlt
jns
js
daa
xchg
fwait
dec
adc
jecxz
push
les
dec
xor
fnstcw
cltd
sbb
xchg
mov
cmp
cltd
and
xor
pop
mov
jo
out
outsb
push
mov
es
jae
fcompp
sbb
mov
sarb
popf
push
mov
aam
pop
fdivrp
xchg
jbe
sbb
pop
or
fsubs
sub
das
into
mov
movsb
arpl
jp
inc
sub
lret
jo
mov
inc
add
fbld
push
pop
cld
push
push
jno
and
cmpsl
cmpsl
iret
inc
int
incb
mov
cmp
ret
push
pop
out
xchg
mov
js
adc
pop
in
fstl
and
repz
cmp
ret
inc
inc
xchg
sbb
dec
pop
pop
movsb
cmpsl
loop
dec
sub
xchg
jo
adc
inc
movsl
cmp
pusha
std
mov
aad
jp
sub
push
mov
pop
sbb
and
lahf
test
sbb
sub
cs
dec
lahf
movsb
xchg
or
lret
addl
fcoml
sbbb
or
or
pushf
xor
mov
mov
mov
mov
cld
add
mov
aaa
push
inc
sbb
mov
sti
pop
sub
fnstenv
scas
sbb
sbb
leave
pushf
sbb
test
sub
sahf
dec
pop
filds
xlat
outsb
sbb
pushf
cltd
mov
inc
cmpsb
fdivrs
lret
fcmovnu
adc
cmp
std
xchg
scas
inc
out
fnsave
push
sbb
cmp
mov
aaa
mov
test
aad
test
mov
push
ja
enter
imul
mov
movsl
and
sub
scas
add
orb
xor
test
fcmovnbe
nop
xchg
mov
xor
inc
jno
push
xor
scas
mov
jge
fwait
push
idivb
jb
mov
clc
stc
call
test
lods
dec
or
xchg
dec
xchg
push
outsl
nop
popf
in
cs
in
test
enter
push
push
bound
jne
cmp
sub
mov
test
mov
das
testl
dec
out
orl
popf
incb
ret
mov
loope
inc
or
mov
inc
sbb
shlb
in
addb
sub
in
js
mov
cmp
pop
mov
push
pop
int
js
js
push
push
insb
push
dec
and
cmp
insb
mov
inc
dec
in
mov
sar
addr16
lds
in
xchg
pop
movq
insb
pop
dec
insb
jb
mov
insl
mov
lods
leave
cs
or
ljmp
lods
lods
fprem1
sub
mov
sbb
sarb
jb
fdivp
shld
test
shl
mov
adc
idivb
mov
cmp
add
sarl
push
shl
mov
and
sbb
std
mov
mov
out
xchg
and
push
lds
out
jbe
mov
imul
or
sbb
push
sub
or
fsub
daa
or
fdivl
sar
fwait
call
movsb
fildl
iret
mov
test
pop
gs
push
cmpb
repz
xlat
push
xlat
xor
jle
jae
jno
mov
fwait
fwait
mov
pop
sub
push
aaa
mov
xor
push
xchg
and
fcmovu
and
adc
jle
mov
mov
jecxz
cmc
dec
outsl
dec
push
loopne
lods
test
int3
mov
fsts
das
jge
int
out
addb
out
xor
add
aad
out
ret
jnp
imul
push
cwtl
adc
addr16
les
adc
push
jnp
fldl2t
fisubrs
sbb
cmp
les
cmp
out
clc
xorb
js
mov
test
in
inc
jp
adc
ds
data16
jae
lahf
sbb
jecxz
dec
rolb
gs
les
scas
add
test
hlt
je
mov
sub
outsb
fistl
push
adc
aas
mov
mov
mov
inc
lret
popf
andl
ret
test
jb
pusha
loopne
sbb
subb
aam
test
test
outsl
mov
mov
pop
aas
jns
addr16
mov
faddp
pop
movswl
divl
data16
lahf
movsb
mov
mov
ja
xchg
push
test
or
add
xor
int
ljmp
lcall
dec
fcomip
cmp
mov
xchg
cs
fnstenv
xor
push
mov
xchg
fnstenv
jno
pop
pop
pop
fs
sti
inc
jb
fldenv
xor
es
scas
mov
int3
sti
xchg
jnp
outsb
and
scas
add
cmp
sub
inc
mov
idivl
mov
or
lcall
sub
call
mov
dec
xor
push
sbb
ret
loopne
aam
subl
push
sbb
mov
lds
leave
out
loope
stos
into
sbb
or
push
push
mov
xor
push
fdiv
icebp
insl
fldln2
mov
cmp
stos
out
mov
xor
bswap
xor
int
js
sub
xchg
and
lcall
adc
cmpsb
enter
sub
adc
sub
push
fcmove
repz
inc
in
enter
xchg
fidivrl
inc
and
lods
cmp
scas
sub
out
adc
pop
dec
xchg
ret
adcl
outsl
jecxz
xor
jns
leave
cmpsb
ror
lods
push
ds
jle
adc
xor
inc
sbb
lock
cmc
xchg
in
movsb
mov
test
or
inc
rcr
into
orl
sub
mov
jg
xchg
mov
das
jecxz
data16
mov
repz
imul
adc
test
popa
data16
dec
mov
imul
sahf
gs
jno
sbb
xor
sbb
scas
inc
pop
dec
add
dec
fldcw
mov
mov
movsb
rorl
sbb
or
pop
mov
ret
fildl
mov
fidivrs
mov
clc
scas
push
inc
or
lret
fistpll
mov
test
jns
test
fldt
cmpsb
ljmp
and
xchg
add
cwtl
sub
cmp
cltd
cmp
js,pn
or
jl
xor
push
add
jns
push
int
xchg
jne
in
mov
push
ja
shll
aad
loope
pop
mov
pop
pop
fwait
sub
adc
pop
jle
push
ret
and
push
mov
test
lods
ljmp
pop
into
mov
daa
repnz
add
xor
jne
jno
mov
jnp
inc
test
mov
dec
mov
push
jns
dec
cs
out
jae
mov
movsb
cli
jae
int
add
ret
pop
mov
xchg
mov
cmp
repnz
jb
pusha
mov
and
or
loope
add
sarl
and
dec
sub
mov
pop
mov
lock
and
xchg
cld
push
cld
and
jg
xchg
sbb
push
mov
or
ret
andb
mov
fcoml
scas
fldenv
lds
aas
jb
inc
or
in
mov
pushf
dec
and
fidivrs
insb
shl
ss
mov
xchg
shrl
mov
dec
testl
in
cmp
arpl
gs
pop
mov
cs
adc
testl
out
and
push
and
dec
lcall
bswap
mov
xor
lock
inc
sbb
sub
stc
jo
sbb
push
aaa
mov
jp
mov
movsb
ljmp
pop
lea
push
xchg
xlat
das
adc
push
mov
jno
sub
push
jne
adc
std
imul
xor
int3
pop
push
push
cmpsb
lcall
idivb
xor
adc
sbb
jns
sub
dec
out
pop
aam
push
mov
movsb
adc
or
gs
xorb
mov
imul
mov
out
push
mov
adc
es
add
add
xlat
cltd
fisubs
scas
xchg
movsb
int3
jge
adc
xor
xchg
and
push
enter
sub
sub
xor
inc
call
imulb
loopne
push
test
push
sbb
cmp
es
std
fcoml
rorl
mov
mov
jl
mov
mov
insb
sahf
push
mov
and
inc
mov
std
xchg
xor
sub
mov
rcll
jl
mov
mov
frstor
or
test
sti
fnstenv
pushf
test
sahf
sub
lds
add
lahf
test
xor
out
mov
adc
and
in
lock
rclb
out
pop
pop
fcmovu
data16
inc
jnp
lods
jle
adc
xchg
outsb
fdivp
repz
mov
jp
repz
int3
xchg
icebp
data16
or
cmp
sbb
lock
xchg
scas
scas
lods
enter
add
mov
andb
inc
pusha
stc
dec
or
pusha
mov
iret
fistpl
add
mov
aam
fnsave
dec
ja
push
mov
cmc
in
push
out
adc
sbb
test
jno
xor
cltd
fstpl
jmp
iret
mov
gs
icebp
pop
xor
push
cmp
jne
xor
dec
test
out
add
and
cmp
clts
mov
jno
in
and
dec
mov
inc
mov
pmaxsw
xor
in
hlt
xchg
inc
lret
and
fistl
and
adc
popf
mov
out
addl
mov
cmc
loope
lcall
mov
jecxz
pop
xacquire
stos
inc
push
frstpm(287
adc
movsb
xchg
fldenv
lahf
jecxz
cltd
dec
jmp
lea
fmul
cli
negb
mov
jg
xlat
leave
add
mov
or
outsl
orb
dec
mov
add
and
rep
stc
dec
int3
jecxz
sti
mov
mov
pop
addb
imull
rcl
push
pop
xlat
cld
mov
jmp
mov
bnd
add
enter
shrl
gs
lret
cmp
fdivr
mov
cld
lock
cmpsb
jo
push
mov
mov
es
enter
cmpsb
xchg
push
push
call
or
lcall
pop
xchg
push
push
loopne
mov
mov
push
pushaw
fdivrs
jle
xchg
shr
pop
stc
mov
mov
jne
lock
inc
arpl
mov
outsl
fidivrl
push
and
mov
nop
ficoms
jns
and
adc
in
jb
cwtl
pop
cmp
dec
ss
test
lret
repnz
pop
jle
mov
shlb
jno
mov
mov
or
adc
cmc
orb
leave
insl
and
js
mov
sub
sbb
push
ds
bound
enter
add
in
mov
pushf
and
xor
add
repnz
mov
fldenv
mov
jl
test
adc
scas
mov
sub
mov
and
adc
sbb
and
cmc
rcrl
push
push
and
pop
inc
inc
push
mov
push
cli
mov
mov
push
notl
jns
lods
xor
push
dec
sar
lea
dec
pop
popa
mov
arpl
jmp
push
xchg
lret
jge
imul
and
xchg
push
sbbl
mov
cltd
cmc
sbb
mov
push
sbb
mov
push
aaa
lret
inc
and
pop
fdiv
cmc
test
repnz
cmp
mov
adc
subb
sti
fldenv
test
mov
lods
jae
je
std
pop
or
pop
mov
movsl
mov
adc
xchg
mov
mulb
sbb
mov
jb
jle
mov
gs
in
xor
sub
pop
fistps
jl
scas
cmp
pop
mov
movsl
in
or
pop
std
sub
push
leave
popa
push
test
cltd
fidivs
nop
movsb
push
ja
sbb
and
ds
cmpsb
adc
inc
jmp
in
movsl
loopne
lock
mov
loope
in
inc
mov
in
add
mov
mov
or
mov
inc
movsb
mov
scas
sbb
mov
add
inc
shll
inc
dec
push
nop
dec
push
mov
loopne
fsts
int3
cmp
cli
sbb
out
lahf
mov
mov
hlt
mov
clc
jae
mov
xchg
push
int3
in
cmp
mov
jb
sub
daa
sahf
mov
pop
mov
rorb
movsb
out
xor
pop
sub
nop
mov
mov
cmpl
push
and
cmp
lret
jmp
jg
fwait
jnp
jne
and
inc
push
mov
frstor
fildll
lods
test
scas
jns
iret
mov
xchg
cli
and
stc
pushf
les
mov
fs
jns
mov
sbb
incb
movsb
dec
es
cmc
sbb
sub
shr
gs
flds
pop
xchg
jle
sbb
mov
dec
mov
pop
fldt
fsub
jnp
in
push
in
mov
inc
cmp
enter
cmc
rorl
les
push
lock
or
fistpl
jb
push
push
js
add
out
loop
rcrb
aam
jns
fdivl
mov
inc
es
lods
mov
std
aas
sub
mov
das
testb
int3
fstpt
neg
jno
jno
add
test
int3
insl
or
sarb
sar
scas
test
add
in
loopne
mov
test
or
mov
je
cli
pop
cld
mov
sub
fsts
fnstenv
inc
or
aad
or
xchg
inc
cs
dec
rcr
faddl
pop
push
xchg
mov
mov
push
fidivrl
test
mov
in
jb
pusha
fdivrl
xchg
out
jp
rcl
shll
jns
mov
cmpsb
das
xor
sub
pop
xor
sub
mov
xor
mov
les
jge
aam
push
pop
inc
sbb
cmp
sbb
pop
add
dec
sbb
inc
pop
mov
pop
loopne
add
mov
dec
cmpsl
outsb
cmp
popf
xchg
sbb
jnp
adc
popa
addr16
sub
and
dec
pop
sbb
out
or
inc
mov
mov
ret
and
das
inc
mov
mov
hlt
xor
fstpt
adc
jb
inc
scas
pop
jae
idivb
test
outsb
lds
dec
lahf
icebp
sti
push
cmpsb
add
jecxz
sbb
mov
xchg
mov
mov
lods
pop
fstps
sbb
negl
xchg
xchg
cmp
xchg
addr16
sub
lods
popf
lock
xchg
js
fimuls
pop
xor
addr16
jae
pop
sbb
aas
out
test
and
divb
popf
jbe
pop
clc
push
xchg
dec
negb
xor
add
mov
out
dec
mov
pop
pop
inc
add
mov
and
adcb
aam
dec
gs
inc
repnz
lods
sbb
aad
pusha
dec
aam
rep
jne
or
lods
loop
es
lret
cmp
int
sub
aaa
loop
mov
flds
and
shll
and
cmp
mov
cmpsb
adcb
inc
pop
rorb
mov
es
mov
rorl
mov
xlat
cmp
xlat
shll
insl
lahf
add
sub
inc
fcmovnbe
fs
test
pushf
jo
push
cs
test
test
mov
in
inc
lock
sub
mov
cmp
and
pusha
sub
inc
movsb
jp
or
int
mov
stos
pop
scas
cmp
stos
push
sbb
mov
cmp
loopne
fdivrl
popl
insb
loopne
fdivrl
xor
scas
dec
and
es
daa
dec
sbb
cmp
push
lds
loop
and
fsubrl
test
adc
mov
aaa
in
repnz
inc
arpl
inc
pop
ljmp
mov
clc
xor
mov
mov
mov
push
cs
out
mov
mov
xchg
pop
mov
cmp
movsl
mov
sbb
ja
mov
xchg
adc
stc
xor
lods
rcrb
icebp
test
sbb
scas
ja
pop
inc
or
push
sub
xor
mov
leave
iret
into
mov
outsl
gs
test
jae
enter
outsb
arpl
out
xchg
adc
movsl
xchg
inc
or
mov
mov
pop
fs
xor
leave
mov
stos
gs
imul
dec
mov
jne
pop
sbb
mov
xor
sbb
lahf
enter
jb
lods
xor
cld
mov
fisubrs
loop
cmpsl
lods
jo
out
sbb
rcll
test
leave
loop
lcall
sbb
repz
mov
fimuls
or
sbb
adc
adc
and
push
or
add
mulb
push
rolb
fsts
sub
inc
sbb
ret
js
lods
dec
fistpll
mov
sbb
stos
fstps
add
idiv
lds
in
jns
cmp
lahf
leave
daa
xchg
in
add
mul
jns
stc
adc
pop
movsl
aam
mov
mov
push
sbb
jecxz
fstps
fidivrs
pop
cmpsl
arpl
pop
ljmp
xor
pop
mov
fsubrl
loopne
xchg
ficomps
lds
or
dec
ds
enter
mov
mov
sub
lds
sahf
test
inc
cmpsl
scas
xor
sub
test
icebp
and
mov
or
xchg
pop
xor
sub
xchg
xor
hlt
jae
stc
add
in
adc
mov
push
test
jle
call
movsl
mov
xor
test
lahf
loope
pop
mov
mov
mov
adc
jb
movsb
test
sbb
inc
ficompl
cmp
call
sti
dec
jne
cmp
push
stos
mov
jns
js
adc
data16
cld
cmp
mov
mov
push
stos
js
cmp
int3
and
out
in
arpl
adc
es
dec
lods
xor
in
daa
push
pop
addr16
lret
mov
outsl
xchg
mov
xchg
sbb
out
and
lods
push
dec
aam
pop
ja
repz
stos
inc
pop
mov
popl
inc
jnp
mov
sbb
nop
icebp
lret
cmpb
pop
incb
lods
inc
jg
jp
and
jl
sarl
jecxz
mov
push
sbb
or
sbb
repnz
icebp
push
das
out
shlb
out
jb
addr16
xchg
mov
shll
push
jb
jae
mov
negl
or
pushf
scas
loopne
pinsrw
push
rsm
repz
pop
cmc
pop
dec
cltd
sarl
push
ret
xor
test
dec
and
and
fs
inc
xor
inc
popa
mov
or
cmp
sbb
mov
xchg
mov
xor
stos
pop
fs
cmpsl
stc
adc
pop
cmp
mov
jne
push
mov
dec
sbb
pop
or
out
adc
fidivs
mov
dec
and
aam
inc
clc
xor
xchg
jb
dec
sahf
mov
inc
movsb
aam
xchg
sbb
jns
sahf
scas
clc
sahf
std
ficoms
sub
xorb
shrb
das
in
daa
push
loop
gs
mov
in
repnz
and
and
jle
mov
xor
lcall
lock
and
outsb
inc
cltd
imul
pop
rcrl
inc
add
gs
ja
in
dec
insb
sti
inc
in
xor
into
add
movsl
cmp
outsl
mulb
int
mov
shld
fsts
jb
mov
push
rep
cmp
aas
pop
movsl
scas
pop
mov
xor
sbb
in
int3
pusha
iret
insb
and
mov
pop
xchg
scas
mov
movsb
sbb
cmp
and
mov
lods
lods
insl
pop
aas
dec
mov
shll
push
test
push
popa
leave
pusha
movsb
jl
cmp
std
and
mov
xchg
int
jl
fwait
adcb
pushf
popf
dec
into
stc
orb
sub
mov
jno
adc
call
test
push
jnp
es
test
daa
das
in
sub
test
mov
cltd
cmp
add
xor
mov
or
int
lods
sbb
add
call
movsb
ret
mov
mov
jae
outsl
add
adcl
mov
jbe
xlat
andb
push
push
fisttpl
in
arpl
and
in
sbb
stc
shr
sahf
adc
fdivrl
test
inc
add
in
lock
sub
cmp
pushf
sub
das
scas
test
mov
std
sarb
bound
popf
and
adc
fildll
jg
push
je
insb
shll
test
or
fdivl
cmp
push
inc
shrb
pop
fmul
in
adc
mov
mov
scas
mov
pop
fmulp
mov
jno
je
dec
jns
sbb
adc
enter
mov
adc
fldz
sbb
test
jge
hlt
sbb
ficomps
adc
lods
fldcw
insb
jp
gs
jmp
adc
aaa
ja
flds
mov
rclb
mov
mov
mov
xor
cmp
stc
lock
cmpsb
inc
adc
movsl
jl
or
daa
sbb
sbbb
jnp
inc
gs
sbb
das
rcrl
xor
dec
sbb
rcrl
or
test
push
sub
in
jb
mov
lahf
lret
out
cmp
call
pop
sub
mov
lcall
push
test
cmp
fchs
sub
scas
mov
test
ss
sti
ja
mov
in
fiaddl
sbb
ficomps
xor
out
pusha
or
popa
mov
repz
cmpsb
out
cwtl
sbb
test
jbe
and
sub
cmp
stos
xor
mov
movsl
xor
dec
xchg
cmpl
loope
test
arpl
popa
mov
jg
cld
jae
cmp
xchg
in
dec
rorb
loope
sub
or
cmp
pop
mov
shrb
test
push
out
aas
mov
test
or
jmp
pop
push
fsub
mov
popa
ss
lods
outsb
jo
dec
fildll
es
cmpb
dec
jmp
xchg
jno
and
jae
stos
cmpsb
jbe
ret
sub
cmp
xchg
xchg
test
cli
xrelease
xor
jb
popf
jnp
push
push
shlb
jb
or
or
pop
mov
sbb
cmp
adc
mov
or
subb
jo
xchg
inc
scas
mov
xor
dec
mov
mov
mov
sub
scas
xchg
and
xorl
mov
cmp
push
cs
xorb
or
lock
sbb
sti
ret
out
in
pop
lods
push
das
push
jnp
je
or
mov
cmc
loop
add
faddl
pop
mov
sub
nop
pop
fwait
das
pop
jle
imul
lret
adc
sub
call
mov
movsb
mov
dec
dec
jbe
sub
cwtl
jbe
nop
fwait
or
pop
test
movsb
cmpsb
mov
cmc
aad
gs
push
jp
ljmp
add
popf
call
cmp
mov
xor
mov
mov
jb
jnp
xchg
inc
mov
imul
jg
lcall
xor
adc
jecxz
mov
add
lcall
push
int
pop
jae
and
xchg
ja
in
cmpb
pop
je
sub
sti
xchg
loope
loope
pop
cwtl
outsb
jno
sbb
imul
test
xchg
xor
dec
mov
je
pop
mov
xor
xchg
sub
out
xchg
loop
das
dec
and
inc
idivb
es
arpl
xor
xorps
add
movsb
nop
cli
cwtl
fcompl
xchg
ss
lods
or
insl
les
mov
popf
pusha
ds
pop
das
jnp
xchg
cwtl
jno
add
inc
sbb
pop
mov
cwtl
xchg
sub
sti
lods
jp
push
jnp
scas
movsl
mov
out
push
test
cmpl
scas
les
push
lret
sbb
aam
mov
inc
xor
adc
xchg
leave
aaa
nop
test
into
fldenv
iret
mov
lods
dec
lcall
nopl
push
mov
xor
aad
sub
jle
lret
hlt
mov
fmull
cmp
xor
mov
test
dec
sub
repnz
clc
and
jno
aaa
int
dec
cli
jae
dec
in
cmc
dec
popf
cmp
out
xchg
xor
test
adc
into
rcll
push
mov
sbb
rcr
mov
mov
adc
lahf
jle
pop
mov
test
sub
imul
inc
xchg
sub
test
iret
enter
push
es
mov
dec
lret
xchg
out
iret
lock
repz
cmc
das
dec
in
out
iret
or
jecxz
in
inc
mov
scas
xchg
mov
fldcw
add
jno
movsl
movsl
lock
xorl
scas
inc
push
jecxz
mov
jp
ljmp
scas
cmpsl
decb
jl
and
jo
mov
xchg
or
das
out
inc
out
push
cmp
pop
insb
adc
lcall
mov
fwait
push
pop
fs
sahf
adc
adc
pop
xor
mov
dec
cmp
imul
in
mov
pop
dec
or
outsl
cmp
adc
mov
jp
push
nop
pop
dec
xor
ret
jge
xor
dec
movsl
callw
stos
xchg
mov
scas
cmp
xchg
dec
aam
xor
pop
test
mov
cli
push
add
dec
and
xchg
mov
scas
or
in
pop
and
sahf
daa
std
dec
mov
rclb
add
mov
dec
jbe
ficoml
out
fisubrl
push
loopne
mov
inc
fldenv
cmp
sbb
aad
stos
arpl
xor
popa
mov
jb
inc
sub
cmp
adc
jns
hlt
aas
test
idivl
pop
xor
sbb
pop
sub
out
cmp
mov
pusha
cmp
out
cli
or
je
orb
pop
aad
fldcw
mov
imul
stos
push
sahf
repnz
stc
aad
mov
test
mov
sahf
test
ret
push
sbb
or
inc
stc
lods
push
cmp
push
mov
or
std
mov
inc
pop
pop
sub
inc
das
ss
dec
cmpl
aaa
test
in
add
loop
std
sbb
inc
push
sub
inc
mov
sbb
cs
jae
push
in
pop
mov
cld
test
pop
in
add
repz
out
jno
aaa
mov
and
inc
sbb
lock
mov
pop
adc
mov
std
iret
pop
cmp
xchg
add
jge
flds
leave
and
push
sub
jl
xor
jge
ret
loop
daa
sub
in
movsb
sbb
add
add
pop
frstor
arpl
jg
test
roll
fwait
out
fistps
inc
push
jnp
push
adc
insl
jne
gs
dec
mov
xchg
js
icebp
ss
outsl
pop
movsb
dec
mov
mov
cmp
fsubl
pop
mov
sub
insl
es
imul
mov
mov
cmpsb
xchg
add
mov
xchg
movsl
cmp
cwtl
mov
int3
jnp
push
push
aam
les
jne
add
out
jecxz
lock
push
mov
add
xor
sar
sub
xchg
repnz
es
stc
std
push
inc
in
fsqrt
dec
fdivrl
test
lock
aas
rcl
arpl
cmpsb
jns
cwtl
out
addr16
add
inc
mov
out
lods
push
ret
inc
mov
test
das
fwait
xor
xchg
fadd
inc
in
sbb
jle
popf
imul
xor
scas
mov
addr16
in
cmpsb
sbb
cmp
adc
inc
orb
mov
mov
adc
or
out
cmpsb
inc
push
das
pop
mov
pop
out
popa
stos
repz
in
xchg
rorb
add
test
sbb
data16
xchg
and
cmp
popf
and
adc
mov
mov
and
ss
mov
cltd
out
das
lret
fmull
mov
ret
adc
dec
pop
nop
cmp
insl
sub
adc
xchg
aam
outsl
repz
ss
cli
inc
mov
or
fsubl
roll
jp
rcrl
cmp
or
dec
mov
jb
popf
aas
movsb
ss
lcall
cltd
orb
mov
jp
jo
daa
jns
mov
shll
addr16
fsts
mov
fnsave
jo
aad
fdivr
or
fdiv
jnp
inc
fnsave
test
insl
sti
daa
mov
fnstenv
loop
cli
jnp
ret
pop
sbb
mov
daa
pop
into
push
mov
sub
mov
das
int
into
test
sbbl
cmp
sbb
pop
inc
xor
add
mov
mov
std
popf
out
inc
sub
mov
adc
xchg
mov
jns
mov
push
addl
mov
mov
jne
aam
inc
dec
pop
pavgb
add
sbbl
sub
fidivrs
sbb
jle
cmc
jnp
cmpsb
push
addb
xor
pop
xchg
mov
cmpsb
test
lcall
and
add
insb
push
scas
adc
mov
push
push
shrb
ss
inc
fsubrl
aam
push
mov
addb
push
cli
dec
loop
movsb
ret
std
mov
clc
int
pop
dec
lret
sub
add
xor
sub
movsb
cltd
daa
arpl
das
lods
jp
data16
fadd
jae
jge
je
xor
jne
lds
ficomps
cmc
test
cmp
out
xchg
call
jge
rclb
adc
je
xchg
push
movb
out
jp
and
add
jg
sarl
fmull
mov
adc
mov
pop
insb
out
lods
fldenv
mov
adc
icebp
sub
rorb
mov
push
mov
jne
in
scas
repnz
jmp
xchg
cli
in
test
fnstenv
scas
fsubrl
fcmovu
loopne
adc
inc
stc
aam
scas
xor
test
scas
pop
push
mulb
sahf
dec
out
rcrl
cmp
xchg
jp
mov
jle
icebp
test
dec
and
int3
mov
push
loope
mov
mov
jge
jnp
pushf
cmp
out
xchg
sbb
fsubrs
pop
xchg
push
nop
pushf
out
test
das
adc
mov
sbb
movsb
into
jae
insl
xor
in
xor
sbb
lea
xor
int3
fnstenv
or
or
and
sahf
lret
xchg
imul
push
push
imul
aad
lcall
outsl
xchg
or
jge
and
inc
xchg
mov
lret
aam
mov
test
cmc
sub
lods
scas
addr16
lea
pop
pop
rolb
les
xor
iret
arpl
popa
ficompl
dec
movsb
scas
xor
popf
jno
jge
xchg
rcrb
sub
leave
cwtl
aaa
mov
loop
cwtl
les
dec
jge
sti
jge
imul
lock
cmp
out
cmp
jl
in
or
cmp
push
cmc
pop
mov
sub
lret
ret
add
popa
jle
out
pop
aaa
sbb
fmull
jmp
sti
lcall
dec
mov
daa
push
pop
imul
pop
nop
push
outsb
gs
sbb
pop
and
jae
pop
fimuls
add
dec
ds
inc
das
mov
dec
xchg
pop
cs
cmc
cmp
popf
cmp
sbb
gs
pop
lcall
stos
adc
rcrl
pusha
lcall
sub
pop
mov
daa
ds
cwtl
ss
aad
fs
cmp
psllq
fnstsw
rclb
push
mov
ret
cmp
jle
and
mov
rclb
lods
test
mov
adc
adc
and
pop
in
leave
aad
xchg
movsb
adc
test
push
mov
and
or
and
ret
add
add
mov
imul
jl
lret
sub
popf
adc
cmc
loope
cs
pop
pop
mov
inc
mov
adc
scas
notl
ret
imul
int3
add
push
in
cmp
inc
push
outsl
hlt
mov
jecxz
mov
sub
push
out
xchg
inc
ret
imul
loop
movsl
mov
mov
flds
and
inc
aas
add
repz
sbb
cli
testb
icebp
data16
mov
mov
repz
push
sub
pop
adc
nop
mov
into
aad
rorl
js
ss
mov
mov
outsl
das
int
outsb
mov
xchg
mov
fcmovb
fsubrp
repz
adc
cmpsl
jle
out
ficoml
xchg
out
cmpsl
enter
jg
pushf
sahf
dec
int3
cld
adc
rorl
fmulp
repnz
dec
sbb
mov
fldcw
push
imul
adc
inc
dec
add
hlt
xchg
pop
or
mov
add
cmp
xchg
addb
dec
adc
mov
fcmovne
or
sbb
lret
or
leave
sub
cmpsl
insb
movntps
mov
cmp
fcomps
mov
imulb
clc
loopne
sti
xchg
cwtl
pop
add
in
sti
mov
and
sti
insl
jnp
cmp
mov
fsts
and
push
mov
jp
addr16
cmp
jae
mov
mov
sub
push
popa
lahf
cmp
xchg
mov
divb
movsl
xchg
xchg
repz
ret
cmpsb
mov
push
inc
xor
mov
mov
push
mov
inc
ss
push
mov
pushf
mov
dec
iret
pop
dec
cmpsl
aam
test
mov
and
stos
scas
mov
xchg
and
jge
inc
cld
add
shll
sub
jns
adc
jbe
pop
sub
add
pop
fnstcw
mov
sbb
in
cmpsb
rorl
jecxz
xlat
mov
add
xchg
pop
fsubrl
data16
mov
mov
aam
or
push
jne
add
test
sub
cmp
mov
cmp
or
lahf
mov
cmp
mov
fs
loopne
addr16
insl
lods
mov
push
push
les
pop
and
mov
stos
jle
das
pop
lds
adc
jl
test
mov
leave
sbb
sbb
xor
nop
mov
sti
inc
mov
sbb
inc
pushf
dec
hlt
test
pop
xchg
inc
or
scas
jno
divl
push
bound
jecxz
test
dec
hlt
mov
in
add
cli
loope
das
leave
mov
lods
xchg
test
insl
leave
sbb
arpl
scas
sub
dec
fnstcw
inc
xchg
sbb
shll
add
inc
mov
mov
add
sbb
daa
jg
mov
fsubp
mov
mov
xchg
push
sub
cmpsl
and
shll
fsubrs
xchg
mov
cmpsl
dec
or
cmp
inc
dec
loopne
popf
jecxz
test
mov
out
and
push
mov
mov
push
and
out
mov
inc
xor
pop
cltd
and
fsubs
movsb
lret
xchg
mov
xchg
stos
out
rolb
int3
into
out
mov
jecxz
push
mov
mov
inc
hlt
mov
sti
xchg
stc
or
dec
mov
repnz
sub
subb
jae
cmp
test
arpl
icebp
inc
jne
das
xorb
lock
sbb
sbb
jge
dec
push
adc
cltd
jno
fcoms
push
movsb
jp
lods
push
or
mov
mov
xchg
add
iret
lods
ss
mov
fldenv
insl
mov
pop
rcll
add
xchg
pop
mov
dec
das
out
jae
aad
xchg
sbb
insl
cmp
bnd
cmpsb
loope
pusha
fnstcw
adc
dec
into
out
lds
add
fstps
cmp
cltd
pop
mov
arpl
clc
mov
mov
and
enter
lock
pop
dec
inc
mov
mov
mov
sbb
sub
mov
lret
push
jmp
xchg
mov
stos
enter
mov
ss
cmp
push
inc
xchg
dec
push
pop
pop
jae
cwtl
int3
jne
push
sbb
mov
leave
stos
loope
sbb
xor
vunpckhps
push
jne
sub
sbb
jns
mov
pop
test
cli
mov
pop
xchg
iret
mov
mov
mov
int
out
gs
mov
xchg
popf
push
mov
loop
sub
ds
jne
mov
sahf
aaa
dec
push
es
pop
mov
dec
xor
and
fs
and
aad
shll
pop
push
cs
cwtl
sahf
xlat
jb
in
push
daa
xor
mov
xor
inc
mov
ja
test
dec
and
outsl
mov
cwtl
xor
sub
dec
fsubs
mov
add
mov
cmpsb
inc
mov
mov
flds
dec
push
imul
add
dec
and
xchg
mov
out
hlt
mov
das
xchg
or
sbb
cmpsl
popf
cs
inc
adc
xor
or
cmpl
loopne
ss
stc
repnz
push
leave
inc
outsb
mov
mov
jge
adc
mov
pop
or
out
xor
imul
adc
push
jmp
inc
xchg
add
test
inc
lret
pop
mov
lods
dec
mov
mov
lahf
or
imul
fptan
imul
aam
cwtl
mov
lods
incb
mov
popf
ds
rolb
sub
adc
xor
jno
shl
pop
test
xchg
bound
ret
mov
jne,pn
jp
dec
mov
sbb
pushf
scas
test
jge
mov
sub
mov
xor
jecxz
sbb
lds
mov
dec
or
repnz
push
ss
js
add
xchg
and
test
sub
or
inc
pushf
push
sub
cmc
das
inc
fstps
fs
pop
into
lods
test
mov
ljmp
xchg
and
repz
enter
pop
jp
inc
push
sti
test
clc
aad
flds
movsl
and
jle
repnz
xchg
les
jp
ja
adc
sbb
sub
mov
divl
mov
push
add
movsb
int3
pusha
inc
dec
pop
sbb
pushl
shll
mov
repnz
cmp
pop
xchg
add
faddl
pop
jbe
lds
add
pop
mov
es
push
mov
das
bnd
subb
push
fdivl
out
lcall
mov
mov
push
iret
sbb
jbe
out
sub
xchg
jns
sbb
jle
jmp
pop
sahf
sbb
sbbl
clc
dec
cmp
add
aaa
cmp
lcall
add
notb
or
and
mov
lahf
sahf
mov
and
dec
jns
cmp
out
jl
aaa
pop
jo
push
int
int
lret
movsb
dec
mov
inc
mov
xor
lock
cltd
mov
sahf
aad
test
lods
inc
dec
js
lcall
inc
mov
lret
mov
leave
test
jg
xchg
std
mov
push
arpl
mov
and
dec
jb
sti
xor
xchg
jae
ljmp
mov
mov
or
test
cltd
add
and
jne
in
stc
sub
ret
sbb
push
out
push
div
cmc
sub
cmpsl
pop
mov
inc
xchg
fsubs
mov
sbb
movsl
sub
aaa
ficomps
mov
repz
clc
sub
fimuls
out
push
xchg
pavgb
dec
lret
push
mov
jno
sbb
in
ss
mov
stc
das
test
adc
push
or
stos
es
mov
mov
shl
out
hlt
mov
and
stc
movsb
push
xor
cmc
sbb
stos
cltd
addb
cmpb
jle
xchg
mov
stos
fs
sub
xor
push
xor
shr
sahf
sub
inc
jge
sub
stos
cltd
adc
mov
mov
shlb
fidivl
jae
negb
push
lret
in
push
movsl
push
mov
mov
lock
js
int
lock
ja
fisubrs
int
dec
out
sbb
push
cmpsb
mov
sbb
lcall
dec
je
std
int3
lret
lcall
ja
mov
and
in
pop
out
loop
push
cmp
mov
xor
and
add
nop
mov
and
mov
aas
ljmp
push
gs
push
push
cmp
mov
add
cmp
insl
jle
add
test
test
pop
inc
loop
jae
cmp
xchg
jns
cwtl
add
mov
paddsb
sub
cmpsl
roll
mov
push
pushf
or
sbb
outsb
or
ret
out
popa
nop
add
xlat
out
bound
out
inc
das
mov
mov
xchg
pop
daa
fdivl
scas
call
test
mov
inc
in
fcomps
lods
sbb
dec
mov
movsl
mov
mov
cmc
inc
cmpsb
repz
cs
in
mov
jp
sti
push
push
stos
xchg
out
add
fcomps
int3
cmp
movsl
or
cli
cmpsb
aas
xchg
pop
xchg
js
sub
test
sbb
ss
aaa
ds
addr16
mov
dec
je
mov
jmp
dec
sub
mov
push
xchg
stos
ret
shrl
add
test
in
jns
adc
xor
enter
scas
fisubrl
push
add
das
into
pop
leave
push
mov
push
std
cld
fldcw
xorb
in
xor
hlt
ljmp
sub
mov
iret
clc
cmp
mov
cmp
imulb
ss
mov
lahf
adc
ret
lock
jge
push
and
aaa
xchg
jle
sub
je
outsl
nop
push
adc
xchg
jge
lods
adc
mov
pop
scas
outsb
mov
inc
faddp
mov
inc
testl
fdivrs
mov
push
stos
dec
inc
test
or
lahf
adc
fs
dec
sti
test
test
push
cmp
test
inc
int3
test
inc
mov
inc
loop
push
lahf
imul
xchg
mov
dec
fisttps
xchg
xchg
adc
mov
inc
mov
cli
cwtl
sbb
xchg
mov
icebp
adc
pop
sbbl
sbb
scas
insl
test
pop
rcr
mov
aam
lret
cmpsb
sahf
insb
pop
add
xor
sti
mov
sbb
xchg
xor
inc
repz
popf
cli
mov
sub
mov
jo
cwtl
mov
pop
xchg
sub
jp
jl
out
sbb
mov
or
sti
push
or
or
xchg
popf
adcb
cli
arpl
dec
orl
and
sbb
lcall
pop
andb
sbb
pop
jnp
out
mov
cwtl
mov
mov
aaa
sbb
cmpsb
mov
cmpsl
movsl
and
xlat
fstl
adc
in
push
mov
sbb
test
and
and
jecxz
jmp
jp
jle
fildl
adc
xor
les
xor
xchg
leave
push
add
outsb
sub
cmp
push
mov
stc
push
stc
push
mov
xchg
mov
insl
sbb
mov
arpl
sbb
sub
in
dec
jmp
popf
cmp
sbb
sbb
rorl
cmp
pop
lcall
jmp
sbb
inc
adcl
pop
and
adc
test
dec
pop
inc
mov
fdivrs
out
mov
xchg
jnp
sub
xchg
rcr
out
pop
push
mov
inc
sub
test
push
sbb
neg
sub
inc
enter
repz
lea
fs
push
jae
fnstsw
mov
xacquire
lret
sbb
jno
call
xor
test
fnstcw
jns
icebp
mov
mov
xchg
xlat
cmp
sbb
jb
xlat
mov
pushf
xor
push
jl
scas
outsb
push
pop
jle
repz
stc
fisttpl
jne
idivb
jae
nop
fidivl
stos
push
movsb
pop
pop
cmpsb
or
out
test
mov
ret
add
data16
push
and
xchg
sbb
mov
clc
or
cmp
sub
xchg
movsl
int3
pop
mov
cmpb
loope
inc
jl
mov
adc
dec
pop
cmpsl
xorb
xor
popf
out
mov
or
mov
pop
inc
cmp
mov
inc
movsb
outsb
mov
mov
mov
adc
pop
sub
adc
repz
popf
sti
mov
dec
push
fcoms
dec
sbb
popf
cmp
aas
les
jnp
inc
push
fidivl
pop
mov
mov
mov
adc
jne
daa
loopne
sbb
sarb
rcrb
movsl
inc
and
lods
push
mov
clc
popa
fucomi
test
fbld
pop
addr16
xchg
test
flds
cmpsb
cmp
das
xchg
adc
inc
repz
or
addb
popa
in
lods
test
js
int3
push
xchg
test
lods
jmp
stos
mov
and
dec
andl
mov
and
cmp
and
jnp
cmpl
mov
popa
mov
inc
xlat
aas
es
add
and
adc
or
lds
xor
lcall
ja
mov
inc
mov
mov
sbb
mov
inc
adc
shlb
mov
inc
add
jb
sub
test
mov
adc
or
mov
clc
and
fisubrs
in
cmp
mov
scas
jnp
add
xor
xor
cmp
cmpsl
cmp
testb
xchg
test
outsb
pusha
xor
fldenv
pop
xor
adc
inc
xchg
adc
out
push
pop
jo
cmp
cmp
int
pop
xor
mov
jecxz
stc
mov
sub
or
add
fyl2xp1
inc
inc
iret
or
jle
sbb
mov
mov
push
dec
mov
or
mov
arpl
data16
aaa
add
sub
xlat
dec
in
shrb
int3
xchg
mov
jl
aam
adc
int3
imul
cwtl
les
pop
add
lcall
adc
mov
iret
push
mov
mov
adc
ficomps
inc
cmpsl
pop
jmp
out
xor
cld
cmp
or
popa
pop
jmp
std
mov
ds
int
lods
lea
mov
cmpsb
aad
iret
ficoms
lods
std
cmp
das
jae
bnd
mov
sbbl
sarl
shlb
jnp
push
es
sbb
outsl
mov
xchg
lcall
mov
xchg
sbb
mov
mov
popf
in
jne
pop
add
mov
dec
xor
sbb
xchg
fimuls
push
or
pop
cmpl
push
popw
pop
xchg
in
add
pushf
in
add
jnp
je
mov
dec
call
mov
addr16
cmp
mov
call
in
lcall
add
or
sbb
out
repz
fcmovb
xchg
mov
dec
repnz
adc
int3
push
xor
push
stos
sahf
test
xchg
mov
ljmp
push
and
rcr
xchg
pop
stos
aam
sahf
test
arpl
ss
mov
addb
lcall
xchg
jle
cmp
andb
fsts
pop
movsb
stc
test
add
xor
push
jno
mov
es
push
movb
sbb
jbe
fs
pop
xor
shrl
mov
out
fsubrl
inc
cwtl
lock
push
inc
fwait
push
xor
xchg
test
jge
hlt
out
cmp
fcmovu
fchs
or
scas
add
iret
stos
lods
cltd
and
push
mov
scas
gs
adc
scas
out
push
mov
push
mov
repnz
dec
rcrl
dec
into
lods
sbb
add
or
add
adc
mov
int3
jb
test
cs
mov
ja
cmp
scas
jns
and
out
mov
into
outsb
and
adc
jb
and
pushf
mov
loop
ss
stos
data16
arpl
mov
out
rcll
iret
sbb
xlat
jo
or
pushf
cli
insb
jb
sbb
fidivs
out
jno
fstp
xor
inc
pushf
pop
dec
sub
fwait
add
sbb
xlat
int
scas
repz
or
xchg
out
sbb
jne
xor
enter
lods
imulb
lods
xor
cld
clc
mov
fs
test
sbb
sub
orl
xor
adc
mov
test
jae
xchg
lods
mov
dec
iret
data16
ja
sbb
fcompl
xchg
and
fwait
sub
jmp
or
mov
lahf
cmp
sub
jae
adc
fsts
mov
sub
sub
and
push
pop
mov
clc
das
push
mov
fcompl
sbbl
pop
sti
and
jbe
jnp
popw
jnp
or
add
mov
mov
in
scas
push
and
adc
and
lods
pop
pop
dec
inc
sbb
xchg
push
out
pop
enter
cmpl
test
or
push
leave
out
popa
push
push
sbb
cmp
pushf
cltd
aad
fcmovnbe
inc
mov
push
sti
push
fninit
or
enter
sahf
lret
mov
mov
mov
mov
sbb
rol
cmp
inc
aas
arpl
cwtl
add
pop
lock
lds
std
lods
es
movb
rcl
aas
pop
test
xor
jnp
push
and
cmp
xchg
add
mov
dec
and
test
insb
mov
daa
or
push
test
sbb
clc
lret
or
rcrl
insb
mov
test
mov
enter
or
add
push
lret
insl
aad
mov
movsl
ja
fsubrl
mov
jle
xchg
sbb
pop
jp
lods
or
test
fdivl
or
inc
mov
sub
les
mov
push
je
mov
adc
push
mul
inc
push
lret
fs
loope
fs
mov
addr16
xor
dec
xchg
dec
bound
mov
test
movsb
dec
cmpsl
lcall
in
xchg
xor
stos
push
decb
stc
mov
xchg
pop
mov
and
pop
cltd
mov
std
pop
pop
lret
rorl
push
sbb
imul
push
jno
xchg
add
test
jmp
and
test
mov
lcall
cmp
mov
cmp
ljmp
sbb
mov
xor
hlt
xorl
out
adc
xchg
ret
mov
gs
sti
xchg
inc
and
jnp
pushf
cmpsl
test
sub
cmp
in
movsb
aas
sbb
mov
sbb
xor
imul
cltd
xchg
cmp
adc
cmpsl
test
xor
add
mov
clc
cmp
pop
cld
cmc
sbb
rcr
movsl
cmp
int
cmpsl
fwait
add
push
es
in
test
and
mov
out
roll
movsb
and
mov
pop
mull
push
inc
ss
push
push
les
out
loope
push
push
push
jl
add
xor
jnp
and
jno
xlat
cld
stc
in
sbb
inc
in
arpl
fsin
out
sbb
and
or
flds
movsl
and
jae
mov
xchg
adc
add
test
sti
xor
inc
or
xchg
push
mov
test
repz
xchg
aam
out
cli
lds
popf
mov
fidivs
push
mov
mov
pop
jge
hlt
out
jb
pop
mov
mov
jmp
and
sbb
mov
dec
popf
lds
mov
sub
fadd
push
push
roll
jnp
sbb
out
insb
xor
cmp
mov
mov
push
test
pop
test
sarb
into
movsb
repz
push
movsl
inc
loope
icebp
dec
cwtl
sub
lock
and
orl
movl
pushf
adc
scas
cmpsb
inc
mov
or
movsb
out
repz
in
jns
das
mov
pusha
push
push
les
pop
stos
cmp
call
jbe
pop
mul
lret
jnp
enter
jmp
rolb
neg
test
cmp
popa
andl
mov
std
lods
cmp
fisubrs
ficomps
aad
mov
aam
pop
sbbl
push
and
rcll
fwait
sub
fidivrs
pop
aas
sub
sbb
sahf
cmpsb
test
jne
inc
loope
xlat
bswap
mov
mov
push
outsb
call
mov
and
test
lods
xchg
in
xor
add
aam
dec
xchg
sub
mov
sub
mov
insb
or
testb
sub
call
shrl
ja
aam
je
loopne
pushf
and
pop
jbe
out
and
xor
push
gs
std
mov
sarb
inc
lock
les
bound
push
test
xlat
ja
jb
fyl2x
shlb
popa
adc
ds
aaa
mov
cmp
aad
insb
mov
or
lret
mov
push
cmp
hlt
mov
jns
repz
cmpsl
outsb
in
test
imul
lods
fsubl
test
dec
or
push
or
fstps
cmp
daa
mov
das
dec
clc
in
test
mov
inc
hlt
cld
ret
add
or
lods
outsb
sbb
sub
or
or
mov
cs
sub
and
xchg
dec
movl
push
daa
inc
xchg
in
iret
fisubl
popf
jo
jle
cmp
nop
xor
lahf
loop
jge
mov
inc
lret
adc
pop
fcomi
push
dec
repz
cmp
mov
subb
mov
shlb
dec
cmp
int3
into
lret
push
int
roll
sub
mov
int
xorl
mov
inc
or
mov
cmp
int
sub
adc
aam
test
pop
leave
andl
cmp
sub
mov
pop
popf
rclb
lcall
fadd
test
xchg
or
mov
xchg
pop
sarl
mov
test
mov
repz
test
in
test
lods
inc
mov
fcomp
sbb
jo
pop
loopne
ret
and
mov
push
loopne
lods
gs
sub
data16
std
in
mov
inc
mov
mov
pop
je
stc
xchg
add
sbb
lcall
xchg
fidivrs
fsubrl
inc
jns
and
popa
jno
adc
mov
mov
loopne
pop
movsl
dec
mov
mov
jns
movsb
mov
mov
fcomp
add
out
pop
movsl
test
loop
outsb
cltd
push
rorb
rorl
fxch
rcr
mov
push
sbb
lds
inc
mov
dec
xchg
mov
movsb
fbstp
lods
imul
pop
and
and
test
mov
movsb
test
ds
push
lock
add
or
jge
push
fcos
sub
jae
jns
lret
sbb
pop
fsubrl
mov
jbe
sub
in
push
sub
jb
or
aam
push
in
pop
xor
jnp
inc
sbb
xchg
cmp
pop
pop
adcl
add
adc
loop
push
dec
pop
mov
jnp
or
pop
xor
mov
xchg
bnd
pop
push
xchg
and
mov
mov
sar
push
push
push
mov
mov
dec
shrl
imul
dec
out
jle
mov
mov
jl
mov
inc
dec
rcrl
jl
jmp
push
push
mov
mov
negl
sbb
dec
mov
push
inc
cmp
push
pop
add
sbb
lret
jg
in
shlb
xchg
add
dec
xor
subl
inc
dec
sti
idivl
popf
push
jnp
pop
xchg
mov
push
sub
adc
movsl
jbe
dec
cs
ficomps
mov
lcall
or
cmp
add
es
mov
and
jge
push
imulb
and
jbe
or
xchg
mov
pop
push
pop
loope
push
jns
fwait
and
xchg
push
xor
pop
iret
ret
mov
cmp
xchg
jno
mov
dec
gs
icebp
sti
jp
popa
sbb
jg
js
inc
pop
jl
push
imull
jno
jo
sti
sbb
outsl
xchg
stos
mov
lcall
shrl
sbb
in
fsub
cmpsb
pop
xchg
loopne
add
adc
sbb
jecxz
fldcw
stos
enter
movsb
dec
shl
or
popa
cs
mov
add
test
push
inc
sub
lock
cmpb
cmp
mov
in
in
pop
jbe
mov
lcall
jne
ss
dec
mov
xchg
repnz
xchg
xor
sbb
add
inc
daa
aam
test
std
pop
outsl
test
sahf
mov
mov
cmp
xor
adc
mov
mov
push
mov
std
sti
movsl
inc
sub
xor
in
sahf
insl
sbb
testl
inc
inc
sbb
stc
cli
in
pushf
test
inc
fldenv
and
adc
push
and
xchg
imul
idivb
mov
pop
lock
aam
dec
mov
sbb
xchg
cs
mov
xchg
and
add
cli
mov
subb
fs
std
or
xchg
mov
mov
test
push
sbb
rcrb
jnp
cmpsb
and
push
lahf
mov
shrb
std
mov
fxam
imul
lcall
adc
popf
mov
mov
scas
mov
push
es
imull
or
jnp,pt
call
jmp
mov
mov
mov
jp
ret
andb
fcmove
leave
dec
xchg
mov
mov
add
mov
sbb
nop
cmpsl
pop
lods
pop
xor
cld
dec
shrb
scas
jge
mov
insl
pop
mov
out
mov
repz
mov
hlt
scas
inc
cmp
push
call
pop
push
std
push
fldpi
loopne
outsb
xor
or
fdivr
mov
mov
mov
pop
loope
js
scas
adc
outsb
push
mov
out
push
mov
clc
mov
pop
shr
xchg
std
xchg
and
call
in
mov
pop
arpl
inc
dec
pop
lods
icebp
in
mov
mov
jno
mov
mov
mov
sbb
mov
stos
leave
lcall
dec
leave
pop
add
hlt
or
loope
dec
int
test
jae
adc
mov
je
fs
sbb
in
aam
adc
loopne
mov
mulb
lahf
mov
sbbb
mov
or
out
xlat
pushf
xchg
dec
fnstenv
sbb
ret
repz
pop
int
pop
cmpsl
pop
out
fstps
es
mov
mov
test
jmp
sbb
mov
fucomi
or
std
inc
in
xor
sbb
addb
jle
mov
lods
popa
jle
in
in
inc
ljmp
xor
ss
sbb
mov
jns
sbb
fwait
inc
test
in
test
cmpsb
xor
cmpsb
xor
out
sti
mov
pop
mov
gs
int
mov
inc
cltd
push
cmp
cmp
sbb
push
jmp
push
test
fchs
imul
add
movsb
mov
test
aad
scas
mov
push
pop
daa
jge
mov
fildl
lods
pop
or
sub
sbb
test
xchg
inc
or
test
xor
aaa
adc
clc
push
movl
pshufw
inc
sub
push
out
negl
lahf
clc
mov
mov
ss
cmp
inc
jae
cmp
imul
lret
inc
inc
and
cmp
nop
mov
fstp
rol
stos
pop
cltd
clc
push
lods
pusha
mov
test
cltd
jb
sbb
shrb
add
mov
inc
xlat
sahf
loopne
sbb
imul
iret
test
scas
dec
movsb
sbb
dec
iret
push
xor
test
jb
mov
mov
in
pop
idiv
sbb
push
adc
push
aam
scas
pop
pop
add
add
xor
dec
jmp
inc
mov
push
pop
cmpsl
adc
mov
movsb
sahf
je
loopne
fcmovnu
xchg
and
into
out
cmc
inc
cmp
fnstcw
mov
aad
sbb
sub
addr16
sbb
add
cmc
mov
bnd
jns
mov
mov
es
imul
and
add
test
sbb
imul
and
mov
push
addr16
fcompl
pop
jmp
ss
mov
inc
mov
sbb
sub
std
arpl
mov
sti
cmpl
sbb
xor
and
test
inc
adc
ja
hlt
lahf
jge
xor
xchg
into
dec
test
ret
dec
push
pop
mov
daa
lods
ds
add
cltd
adcb
nop
inc
mov
sbb
mov
stc
xor
jne
pusha
rclb
das
fnstcw
pop
sub
mov
adc
push
inc
push
and
sub
xchg
das
aam
lds
movsb
stc
testl
mov
xchg
movsl
cmp
sahf
mov
xchg
addr16
sub
push
mov
and
mov
int
imul
mov
lahf
jle
cltd
adc
daa
sub
push
and
fisttpl
push
inc
std
cmpsl
into
sbb
sbb
xchg
jl
scas
dec
in
cltd
mov
int
sbb
jno
pop
dec
mov
mov
roll
mov
mov
aad
or
in
sub
mov
fstpl
fabs
pop
out
das
pop
mov
xor
test
lcall
mov
je
js
je
outsb
pop
outsb
fisubrs
int3
fs
sbb
repz
xchg
sbb
xor
fidivl
inc
xchg
mov
adc
sub
mov
data16
adc
jb
test
aas
dec
or
push
mov
setle
outsb
cld
inc
adc
dec
insl
mov
inc
scas
int
dec
shr
lcall
push
div
cmp
push
sub
sbb
pop
push
sub
movsb
or
pop
pop
xchg
je
loop
roll
xchg
test
leave
xchg
sub
sbb
nop
pop
cltd
cli
jbe
lea
cmp
and
mov
sub
sahf
dec
sbb
cs
mov
shr
subl
arpl
icebp
es
push
pop
or
adc
ss
jge
sub
adc
stos
push
stc
mov
push
sbbb
shrl
sahf
mov
loop
push
pop
push
int
dec
cwtl
test
fcomps
or
add
clc
cmpsl
and
pop
xlat
push
jl
sbbl
scas
mov
mov
test
mov
xor
repnz
stc
mov
and
test
and
cmp
cmp
xchg
sub
xor
jno
repz
mov
call
mov
das
inc
inc
jle
sub
daa
add
ss
mov
movsl
mov
fdivp
sub
in
call
xchg
push
push
mov
mov
cmpsl
or
xor
lds
aam
in
loop
dec
loopne
daa
fildl
rcrb
mov
mov
sbb
mov
sbbl
int
push
push
in
cwtl
cmpsl
test
dec
fidivrl
adc
imulb
and
test
add
sbb
jo
shr
scas
push
repnz
cli
xor
orb
test
es
mov
sarl
mov
movsb
pop
push
jecxz
xor
pop
add
dec
push
pop
sub
les
mov
out
jbe
lret
out
mov
push
and
lds
ficompl
dec
xor
subl
dec
je
jecxz
test
lcall
icebp
mov
push
in
lock
cmp
mov
push
cli
scas
sbb
jno
lock
fstpl
popa
mov
adc
fidivrs
stc
int
jmp
je
into
xor
adc
add
xor
xchg
sbb
xchg
ss
and
stos
in
mov
jns
inc
mov
out
imul
dec
jo
mov
and
sub
xchg
xchg
cltd
stos
es
inc
push
pusha
popf
mov
shrb
idivb
mov
arpl
add
jl
mov
jmp
mov
sbb
movsl
mov
sub
cmp
xchg
xor
repz
cmpsb
jp
xchg
xor
mov
push
xor
lods
sbb
jnp
clc
mov
jb
in
lods
mov
repnz
cmc
loope
or
fsts
cli
xchg
out
iret
out
pop
out
scas
pop
inc
shrl
xchg
and
in
xlat
pop
clc
xchg
dec
cmp
xchg
mov
test
inc
test
mov
mov
xor
dec
gs
mov
ljmp
add
cmp
xor
flds
pop
in
mov
mov
xchg
inc
ret
adc
repz
mov
cmp
mov
cmc
inc
out
lods
fbld
push
loope
orw
adc
in
les
sbbl
sbb
jmp
xor
mov
jae
hlt
ss
mov
pop
jecxz
loop
aas
add
repz
mov
push
repz
mov
stos
mov
jbe
jge
and
and
out
push
mov
leave
lods
mov
inc
loop
test
mov
mov
push
xlat
xchg
pop
mov
scas
lea
cmp
or
cmpl
mov
sbb
add
sbb
sbb
das
das
or
imul
or
int3
test
ret
insb
sbbb
lock
in
mov
shll
js
daa
leave
jp
push
push
sub
dec
pusha
mov
and
and
in
in
jecxz
test
adc
add
mov
in
mov
cs
lret
add
enter
mov
aam
lods
cmc
negb
lret
inc
push
pop
sbb
or
dec
pop
mov
xchg
ficoms
mov
cmp
hlt
dec
mov
sbb
mov
mov
push
xor
aam
scas
xchg
add
shll
pushf
je
imul
aad
es
mov
or
mov
mov
xchg
pop
dec
jp
int
jge
rclb
fdivrl
and
mov
add
sarl
push
in
jle
jns
mov
xchg
jp
push
dec
cmp
std
sar
gs
iret
mov
ret
insl
enter
sahf
push
mov
sub
mov
adc
stos
cmp
mov
cld
flds
jo
dec
cmpsb
lods
add
mov
inc
pop
lahf
mov
gs
xchg
test
mov
or
loopne
subl
xor
push
lea
imul
lods
je
jnp
sub
mov
in
popf
cmp
xchg
sub
push
ss
mov
jg
inc
mov
pop
out
gs
add
push
cs
push
icebp
and
xor
popf
in
lods
das
pop
lahf
or
lock
add
jnp
addb
cmpsb
scas
mov
in
push
adc
push
les
ss
clc
aaa
fnstsw
stos
popa
jbe
nop
int
enter
or
js
cmp
fsincos
inc
mov
in
xorb
lock
push
dec
cmp
mov
dec
lock
or
cmp
outsl
xchg
fwait
cmp
int
cld
fpatan
ret
das
mov
scas
dec
jp
test
fiadds
lods
movsl
test
xor
jecxz
stc
xchg
and
jg
mov
cmp
and
mov
std
jp
aad
insl
or
stos
mov
jns
xlat
jp
adc
mov
out
fiaddl
mov
clc
movsl
ljmp
loopne
cmpsb
or
int
mov
test
pop
dec
in
or
pop
out
pop
jge
cmp
out
xor
std
mov
ret
into
out
test
gs
out
sbb
fsubrs
jp
iret
aas
test
mov
int3
int
pop
push
lods
and
imul
push
inc
sahf
cmp
lods
stos
xor
lds
cmp
sub
fistpl
and
popf
test
imul
fsubp
cmp
push
je
mov
mov
fwait
sub
icebp
mov
push
repz
andl
fisubs
and
and
out
xchg
push
jmp
pop
inc
pusha
pop
adc
jl
stos
test
scas
shl
lahf
inc
addr16
cmpsl
pop
push
xor
lods
in
push
add
sbb
push
fwait
shll
sbb
sub
push
in
aam
in
inc
push
lock
adc
jge
sub
test
icebp
mov
push
pop
inc
loopne
push
cmp
push
xchg
cli
into
idiv
movsl
popf
dec
mov
mov
fldt
xchg
lock
gs
and
pop
dec
ja
pop
popf
fwait
mov
loop
pop
mov
inc
clc
addb
enter
aad
cmp
fsub
repz
sti
mov
jnp
xor
es
dec
imul
sti
into
sbb
addr16
sub
pop
xchg
mov
test
aas
jmp
imul
fcmovnb
fsubl
jge
mov
test
jmp
and
lods
mov
jle
mov
mov
das
adc
mov
cltd
jle
dec
movsb
inc
test
shrl
xchg
es
xor
push
sub
test
stc
dec
lock
mov
stos
mov
out
je,pn
and
stos
adc
inc
fwait
add
es
aad
add
dec
push
sbb
test
xchg
gs
add
add
dec
andl
adc
sti
lds
je
addl
mov
push
push
insb
cli
fwait
mov
movsb
scas
push
sub
cmpsl
das
xchg
int
add
cli
lds
mov
jbe
aam
stos
jg
xchg
add
std
repnz
fistl
fstps
and
mov
out
pop
daa
das
fdivl
mov
mov
mov
add
lods
fdivl
mov
mov
fld
aas
rcrl
xchg
pop
inc
add
cmp
lods
push
pop
std
sbb
push
sar
repz
sbb
addr16
mov
std
or
enter
cmp
movsb
xchg
es
popa
nop
and
aad
fmul
and
aas
fsts
roll
pop
sub
pop
stc
fadds
js
adc
push
pop
cli
xchg
dec
sbb
and
out
mov
sbb
std
scas
adcl
inc
movsb
mov
fcoml
lret
adc
sub
cmp
xchg
repz
add
test
mov
mov
mov
ret
in
add
and
jmp
fdivp
sbb
mov
jge
cmp
sub
lret
jbe
fldcw
scas
mov
into
mov
xchg
cmp
mov
loope
cmp
loopne
jns
push
inc
xchg
pop
inc
sbb
mov
mov
pop
test
lock
lock
scas
jge
pop
inc
shlb
xor
mov
clc
sub
mov
dec
sahf
aad
mov
inc
push
fs
imul
fldenv
jnp
push
adc
xor
pushf
daa
in
and
int
pop
mov
lea
xchg
fwait
dec
fdivl
pop
push
push
inc
loop
add
mov
xor
and
enter
inc
test
div
and
and
lods
mov
lock
adc
aas
mov
sub
pop
adc
xchg
es
jne
push
inc
mov
and
test
ret
adc
cmpsl
mov
mov
test
cmp
jmp
mov
sar
popf
mov
mov
movsl
loope
inc
mov
ljmp
adc
mov
scas
test
popf
jne
pushf
push
test
scas
das
inc
icebp
test
and
xchg
mov
xor
sbb
pop
mov
inc
int
mov
imul
add
pop
jecxz
cs
cwtl
movsb
imul
cld
mov
sbb
pushf
aaa
adc
notb
pushf
outsl
inc
adc
or
jmp
shll
push
pop
add
test
inc
mov
or
mov
jno
xor
add
test
push
inc
cltd
adc
repz
push
leave
xchg
cltd
jp
mov
out
out
xchg
leave
js
outsb
cmc
sbb
fiadds
imul
or
cmp
lock
aad
les
jmp
aad
leave
in
aam
sub
mov
jecxz
dec
xor
mov
div
ss
movsb
and
xor
outsb
mov
xlat
inc
lret
mov
nop
xchg
hlt
mov
out
and
jae
cli
subl
shlb
dec
add
push
and
jge
loop
mov
inc
adc
aaa
xor
sbb
push
cmpsl
adcl
loope
lret
push
std
call
loop
dec
sub
out
mov
mov
lods
add
push
sub
pusha
and
enter
pushf
pop
hlt
add
sub
jae
pop
sbb
inc
mov
std
inc
sub
jnp
repz
jno
add
mov
stc
or
fxch
push
xchg
rcr
movsl
mov
pop
test
sbb
shrb
push
jnp
cmp
ret
adc
push
or
lret
call
adc
flds
jp
sbb
sub
mov
mov
xchg
popa
jp
adc
in
pop
icebp
pop
mov
hlt
cmpsb
push
mov
cmp
scas
mov
xchg
xchg
sub
fnstcw
aas
pop
jle
in
cmp
and
insl
mov
rep
les
shrl
jmp
repz
dec
push
movsl
mov
jp
or
and
mov
mov
in
push
sub
sub
mov
iret
into
sbb
stc
cmp
pop
dec
and
ficoms
adc
adc
sbb
push
fldenv
push
scas
or
add
xchg
fucomi
arpl
popa
test
add
fidivs
ficoms
jnp
ljmp
loopne
sbb
test
jo
movsl
movl
imul
xor
inc
test
or
pop
lods
mov
orl
dec
or
sbbl
leave
mov
in
dec
adc
movsb
push
push
sbbl
and
adc
in
sub
xchg
popl
jle
xor
xchg
cmpsl
or
pop
lds
jge
flds
cmc
and
xchg
test
mov
push
out
cmp
adc
sub
nop
add
outsb
outsl
cmp
and
sbb
mov
movsl
call
clc
jmp
mov
sbb
aam
adc
outsl
xor
and
hlt
jge
dec
aam
iret
sub
imul
int3
xchg
fiadds
in
pop
mov
popf
jmp
addr16
add
icebp
in
lcall
das
sbb
inc
sbb
mov
mov
lock
mov
imul
xlat
mov
push
rcrl
dec
xchg
rol
movsb
into
pop
mov
imul
arpl
mul
movsl
sub
fidivrs
cmp
mov
aam
data16
fs
xchg
push
repz
pop
cmp
leave
int3
push
test
jae
or
or
mov
inc
lea
mov
lahf
das
jae
bound
xor
shlb
leave
movsl
insb
jnp
pop
stc
out
sbb
mov
das
xchg
cmp
popf
mov
jmp
lods
add
fstp
pop
ja
rep
mov
xchg
inc
sub
cmpsb
fld
pop
int3
pusha
scas
cmpsl
mov
out
inc
lret
xchg
sbb
fidivl
or
lods
xchg
push
mov
mov
jns
push
sbb
mov
mov
frstor
clc
scas
adcb
adc
or
test
xchg
insb
fchs
call
dec
sbb
repz
je
scas
nop
xchg
push
mov
mov
ja
or
push
addr16
cmpsb
jno
testl
sbb
xor
std
xchg
push
jmp
sahf
lahf
jmp
inc
jge
insl
out
test
int
lcall
rcr
mov
cmc
dec
and
fisubrs
pop
sti
sub
fdivrl
shl
cmp
std
mov
hlt
push
sub
push
push
pop
pop
inc
fldl
cmp
pop
std
mov
test
or
pusha
loope
ljmp
fs
xchg
push
xchg
cmp
enter
jmp
pop
je
push
xchg
leave
and
mov
imul
add
out
lcall
mov
pop
daa
mov
xchg
push
popa
sbb
psubw
neg
inc
mov
pushf
dec
mov
fiaddl
xchg
les
dec
lods
clc
add
inc
cmpsb
mov
int3
xor
xor
in
sub
enter
jl
insb
push
jae
ja
inc
push
push
push
and
inc
push
xchg
fcomps
mov
enter
add
and
cmpsl
stc
and
callw
push
lret
xor
int
ret
inc
and
cmp
in
sbb
mov
fsubr
flds
dec
out
mov
add
je
sti
push
pop
cmpsb
test
mov
cmpl
test
mov
hlt
outsl
cli
ljmp
jle
add
bound
xor
xor
gs
mov
shll
scas
mov
fnstcw
lret
lock
movsb
pop
add
push
push
dec
inc
adc
xchg
push
xlat
cmpsl
fs
adc
jno
mulb
pop
dec
ja
out
adc
xor
add
fucomp
flds
test
mov
out
and
sbb
or
lahf
push
dec
jne
rcrl
repnz
in
in
push
xor
cmp
xchg
out
pop
imul
movsl
enter
mov
lahf
pop
pop
xor
inc
mov
dec
and
mov
dec
add
sbb
aas
movsl
jle
push
inc
pop
xorb
mov
imul
cmpsb
imul
ret
mov
int
add
lods
test
std
mov
flds
sbb
psubd
mov
into
xchg
aad
dec
jle
inc
test
popa
sarl
inc
mov
lret
jg
pop
cs
pushf
test
fiaddl
iret
xchg
sbb
mov
jnp
mov
in
sti
cld
jae
fdivl
cmpl
inc
push
cmp
call
jl
mov
insb
mov
sbb
stc
dec
inc
pop
add
sti
incb
fdivrl
adc
gs
fidivrs
pushf
mulb
loope
out
dec
popf
out
xchg
insb
fnstsw
push
adc
xor
popf
out
loope
stos
testb
jne
xor
jae
loope
sbb
dec
dec
filds
push
fs
inc
adc
loopne
out
dec
fld1
sbb
out
cltd
out
test
xchg
mov
pop
mov
mov
mov
popa
mov
sub
push
cmpsl
mov
in
dec
pop
iret
dec
in
shl
scas
mov
test
adc
test
push
fidivs
sbb
xchg
push
pop
xor
sub
mov
xchg
push
pusha
dec
mov
mov
mov
cs
test
xchg
mov
outsb
out
in
in
out
movsb
cmpsb
dec
sub
cmp
outsl
aam
cmp
and
jb
cwtl
scas
cmp
mov
inc
jle
jno
mov
insl
lcall
sub
push
sbb
lret
movsb
sbb
pop
add
lret
mov
aaa
mov
push
loop
adc
cltd
std
sbb
test
stos
inc
outsb
jg
les
or
lock
mov
sbb
jns
and
cmpsl
in
mov
mov
xchg
std
adc
repz
scas
scas
sarb
sbb
mov
push
in
pop
and
scas
jnp
xlat
sbb
xchg
test
push
loopne
sbb
xchg
push
pushf
cmp
mov
arpl
cmp
pop
jecxz
inc
push
mov
lods
test
das
test
pop
jg
push
pop
nop
in
inc
cmp
bound
jmp
sub
int
das
pop
sbb
push
pop
mov
adc
data16
jbe
sahf
jns
shlb
imul
mov
hlt
gs
inc
test
pop
push
xor
jnp
movsl
lcall
mov
mov
nop
pop
scas
lods
insl
gs
cwtl
push
test
outsl
inc
mov
ljmp
sbb
data16
cs
loop
stos
and
lods
in
addl
xchg
add
cmp
dec
lods
mov
ret
sbb
push
enter
cmpl
gs
jmp
dec
cmp
mov
adc
push
xchg
pop
insb
pop
xchg
dec
xchg
mov
test
add
leave
mov
jge
pop
dec
scas
stos
fnstcw
mov
ret
out
repz
jg
xor
gs
repnz
movsb
lock
test
mov
arpl
out
andb
lods
add
mov
pop
and
mov
jp
enter
inc
sbb
push
mov
je
arpl
sti
dec
and
sahf
mov
decl
iret
xor
xchg
cmpsl
fwait
aad
add
pop
mov
cli
loopne
call
cltd
out
or
dec
stc
int
dec
jp
push
repz
pop
sarl
add
int
pop
movsb
mov
cmp
xchg
pop
les
icebp
and
aas
xchg
int
inc
push
imul
lcall
sarb
je
push
scas
scas
push
dec
sub
cmp
and
jno
outsb
testb
mov
sub
xor
call
sbb
jle
push
cmovl
sti
xchg
sub
adc
loopne
sbb
filds
cmp
idivl
stc
in
movsb
push
js
mov
lahf
stc
add
lods
push
test
mov
cld
jb
outsl
jl
aaa
pop
mov
pop
repz
mov
dec
push
mov
sub
sbb
cmpsb
or
sbb
pop
push
dec
push
add
lret
fnstcw
mov
inc
xchg
inc
cmp
test
fimull
lods
inc
fbstp
lret
dec
adc
lock
sub
hlt
icebp
test
mov
das
pop
test
xor
adc
shll
lahf
gs
das
xor
inc
and
mov
mov
sub
push
int3
arpl
push
mov
jg
adc
cli
and
jp
leave
mov
mov
outsl
or
fbld
inc
cmp
in
popa
cmp
out
cmp
das
lods
das
test
dec
sub
push
cmp
addr16
arpl
in
sbb
ss
fiaddl
push
adcb
dec
sbb
mov
mov
adc
push
lret
int
fildl
call
test
sahf
mov
cmc
xchg
pop
aam
cmc
push
in
lds
push
ja
add
sbb
andl
pop
xchg
loopne
int
xor
clc
out
imul
xchg
fstpt
xchg
iret
pinsrw
mov
ret
or
push
mov
mov
fistpll
subb
lea
dec
mov
push
jbe
lods
dec
push
push
xor
repz
test
mov
lods
in
mov
aaa
lcall
fisubs
scas
pop
test
inc
jne
mov
test
pop
test
xor
popf
imul
ret
mov
add
loop
insl
dec
out
lods
mov
outsb
add
into
clc
mulb
and
mov
cltd
and
add
int
scas
jl
and
pop
out
dec
stos
mulb
cwtl
cmp
inc
lds
pop
orb
loopne
int
push
lret
pusha
or
mov
sbb
jb
mov
xchg
mov
int
inc
xchg
or
subl
fisubl
lods
repz
mov
cmp
rcll
adc
pop
sbb
std
scas
fldenv
aam
xchg
mov
or
xor
div
push
rorl
mov
jle
jb
hlt
out
pop
push
int3
fstl
jae
or
idiv
testb
lahf
mov
das
push
in
pop
or
mov
sub
in
jge
in
das
push
mov
mov
jo
cld
test
mov
movsl
mov
push
push
push
push
xchg
mov
jge
adc
stc
sub
cmc
loop
pop
fisttpl
pop
pop
inc
into
mov
xchg
fnstcw
sub
pop
repz
mov
jnp
inc
add
pushf
mov
hlt
cmp
movl
or
adc
outsl
pop
lahf
cltd
push
dec
sub
punpckhdq
jae
pop
inc
xchg
loopne
out
and
adc
sbb
in
fisubs
out
mov
outsl
lea
loope
les
lods
sub
pop
jg
fbstp
jecxz
in
rolb
xchg
inc
mov
dec
loopne
pop
pop
shll
fnstcw
xor
mov
push
mov
dec
iret
adc
repnz
mov
sarl
bound
cmp
mov
add
int
aad
mov
add
pop
xchg
xor
or
add
mov
icebp
pop
cmc
pop
shrb
fcmovne
or
sbbl
push
jl
xlat
adc
daa
out
mov
add
sub
mov
fmull
mov
xchg
movl
inc
movsl
sub
jae
jl
or
dec
jmp
inc
adc
ret
mov
mov
inc
dec
mov
pusha
mov
or
push
cmpsl
aam
adc
es
jns
jnp
and
mov
mov
push
lods
sbb
and
xchg
and
mov
mov
call
xchg
mov
and
jle
cmp
adc
in
xor
out
movsl
push
mov
out
cmp
outsl
bound
and
cltd
mov
fstps
int
fidivl
push
enter
inc
cltd
repz
mov
pop
push
jno
idivb
push
arpl
cmp
imul
sub
test
jne
test
adc
cmp
fiadds
sahf
push
xchg
aas
dec
xchg
mov
mov
xor
and
scas
push
cmp
nop
jecxz
sbb
sbb
pushf
mov
das
xchg
scas
inc
fnstenv
xchg
or
aaa
add
push
jmp
ds
inc
jp
add
inc
xor
xor
pop
inc
mov
mov
or
das
xchg
add
jle
dec
scas
rcr
mov
cld
sti
and
orl
dec
shrb
inc
or
xchg
shlb
adc
jnp
pop
scas
push
push
mov
insl
ja
repz
push
mov
sbb
add
or
je
shrb
push
push
sub
xchg
shr
popa
aam
cmp
push
stc
pop
outsb
mov
jne
mov
sub
xchg
fstpl
lds
xor
out
mov
sub
insb
enter
mov
loop
fistl
jp
enter
subl
mov
ds
loopne
sahf
movsb
repz
pop
mov
les
xor
inc
out
cmpsb
lods
fsubs
test
fimuls
sar
icebp
adc
daa
add
cmp
cld
dec
inc
mov
jo
int3
idivb
call
cmp
and
movsb
cmp
push
repnz
dec
es
jns
inc
int
xorl
cmpsb
xchg
jns
rorb
in
fisttps
inc
mov
psubusw
lock
mov
push
or
ret
inc
push
mov
and
aaa
dec
test
adc
aam
repz
out
outsb
jbe
mov
stc
jno
mov
or
xchg
cmp
cltd
pop
shr
cs
fcoml
cwtl
and
jl
sbb
inc
fildll
pop
rclb
out
jbe
inc
xlat
daa
test
in
fsts
int
int3
mov
mov
xchg
call
gs
das
adc
mov
fidivrs
pop
adc
fidivrs
adc
or
add
and
mov
mov
xor
fcoml
fidivrl
movsl
idivl
sub
mov
mov
jle
adc
push
dec
mov
fcmovnbe
hlt
je
add
pop
je
mov
dec
stc
dec
and
popf
mov
rclb
repz
loopne
adc
mov
cmp
jnp
and
xchg
movsb
lods
xchg
lret
ret
inc
mov
mov
sub
push
push
int
shll
ljmp
sbb
and
xchg
rorl
mov
jae,pn
mov
sub
mov
sub
mov
mov
clc
cmp
fprem
xor
jbe
xchg
sub
and
cmp
add
imul
sbb
mov
mov
in
cmovnp
and
mov
sbb
das
cmp
push
mov
leave
fnstenv
lods
add
jmp
mov
cmpsb
mov
in
pop
cmc
mov
push
pop
push
jecxz
or
xchg
iret
inc
aam
mov
xchg
add
faddl
hlt
xlat
je
fucomip
mov
test
sub
and
mov
movsl
into
or
sbb
push
sbb
dec
inc
sbb
lcall
shrl
fldenv
mov
dec
sub
orb
sti
fsubp
xor
addr16
push
cmp
sbb
test
scas
scas
ret
adc
je
insb
pop
cmc
repz
cmpsb
test
mov
or
sub
fcmovnu
mov
push
dec
fstps
cltd
repnz
fldl
mov
imul
aaa
pop
loop
lahf
push
mov
adc
cs
filds
sub
jns
cmpsb
jl
jp
les
outsl
add
inc
or
mov
fsubrp
xchg
fidivl
mov
xor
dec
int
ror
fcoml
inc
les
movb
stc
lret
push
shrl
aad
push
aaa
mov
cli
push
fwait
cmpl
into
repz
pusha
lea
mov
push
pop
pop
mov
int3
into
pop
movsl
int3
and
sarl
adc
je
sti
sbb
outsl
inc
popf
pop
add
xchg
xor
jp
in
stos
sub
jge
xchg
inc
hlt
inc
inc
cmp
aad
mov
leave
loopne
sarb
sub
inc
dec
jp
clc
inc
mov
push
xchg
js
jbe
xor
xor
cmpsb
repz
test
insb
sysret
dec
js
mov
roll
inc
shrb
int
lahf
pop
dec
xlat
or
push
jbe
nop
push
fiaddl
add
insl
mov
mov
cmp
sub
xor
out
shlb
outsl
lahf
pop
inc
cmp
mov
cmp
in
dec
rorb
cli
testl
dec
cmpsb
iret
imul
pushf
std
subl
sti
dec
mov
dec
or
push
and
popf
push
jbe
scas
shl
bnd
scas
mov
mov
sti
test
lods
adc
add
test
cmpsb
dec
fwait
leave
and
xchg
jge
push
lret
jno
mov
mov
daa
and
and
sub
insl
lret
ss
out
popf
and
or
jne
int
sub
lods
fistl
and
or
xlat
mov
mov
mov
dec
push
push
pushf
mov
sbb
fyl2xp1
lods
gs
mov
cli
cld
push
inc
push
add
sub
fxch
push
or
cmpsb
dec
and
dec
lret
or
int3
sbb
mov
jl
push
push
incb
mov
mov
repnz
jnp
leave
sub
adc
dec
nop
push
xor
dec
inc
scas
fistpl
dec
inc
cs
mov
pop
xchg
jp
lods
xchg
pop
subl
inc
lods
stos
sahf
hlt
addb
mov
or
scas
out
or
ret
cmpsl
jno
stc
je
shl
pop
aad
cmp
jecxz
and
jae
push
nop
cmp
sub
and
sarb
xchg
cmpsl
xchg
mov
popa
adc
and
cmp
in
out
test
xor
jge
jbe
cmpb
and
adc
xchg
mov
rcrl
sub
sub
add
cmpsl
cmc
aad
popa
mov
sti
ret
out
jo
shlb
mov
inc
leave
shlb
shrb
adc
ret
fiaddl
das
stos
mov
pusha
test
test
mov
das
and
scas
repz
testl
jnp
xor
add
out
sub
stc
push
aad
pop
sub
jns
movsb
sbb
popa
lock
inc
dec
or
out
bound
mov
or
jl
leave
bnd
xor
add
mov
roll
pop
jmp
outsb
mov
xchg
nop
jecxz
fs
adc
xchg
in
flds
fcomip
and
out
sti
mov
addr16
jg
movsl
fwait
sbb
mov
sahf
repnz
mov
sub
movsl
xor
ret
push
aaa
stos
cmp
clc
add
push
xchg
sti
aaa
ljmp
jae
repz
in
iret
sbb
loopne
movsb
test
push
mov
pop
fldt
rolb
test
push
adc
sub
jge
sbb
ret
and
mov
das
jb
inc
jb
lahf
and
repnz
xor
fsts
mov
loope
adc
in
mov
fcomi
push
push
lret
xchg
xor
outsl
dec
mov
stc
jb
inc
cmpsb
ss
push
sti
cmp
xchg
mov
and
mov
lock
or
xchg
movsl
jb
adc
jp
sub
mov
leave
cs
pop
enter
xorl
fildl
mov
subl
test
sbb
cmpsb
and
fdivrl
and
mov
adc
jmp
mov
xchg
xchg
and
mov
and
stc
scas
repz
inc
int
out
aas
arpl
adc
cmp
popl
sbb
xorl
push
jecxz
mov
sub
or
adc
inc
sub
sti
mov
mov
jge
pop
jnp
aad
repz
sbb
pop
push
sub
mov
daa
mov
in
data16
mov
mov
mov
push
push
ja
jnp
es
aaa
pop
popa
cmp
xlat
adc
fsts
pop
lahf
jge
sbb
sub
sub
test
xor
xor
int
add
inc
cs
mov
pop
test
pop
mov
mov
jg
cwtl
scas
xor
and
add
ljmp
lock
std
ret
push
addr16
push
fcoms
imul
aam
fs
cmp
or
mov
fmulp
add
and
sub
ret
xchg
and
push
stos
nop
outsl
aas
pop
fstps
ficoml
loope
cwtl
movsb
jl
test
test
sub
pushf
dec
js
pop
flds
xchg
mov
es
xchg
sub
loop
lds
pop
mov
inc
ret
pop
movsb
sbb
jge
sbb
sarl
scas
add
outsl
pop
in
add
scas
je
add
jmp
outsb
adc
jmp
push
pop
jge
cmp
pop
shll
jle
icebp
mov
adc
dec
and
sbb
jno
dec
in
mov
xchg
cmp
fsubs
jecxz
cli
xchg
or
cs
repz
fsubrs
add
cmp
fsubrl
cmp
jbe
test
mov
lds
insl
lret
mov
sti
test
push
dec
mov
mov
xchg
scas
xor
mov
jae
mov
xor
lods
and
aam
daa
cmp
add
mov
pop
sub
aaa
sbb
xchg
adc
std
imul
add
mov
mov
mov
mov
sub
push
xor
lret
sub
or
or
frndint
mov
push
in
jo
jbe
daa
outsl
ds
pop
mov
cmp
pop
in
les
dec
push
stc
mov
in
inc
adc
in
js
mov
pop
cmpsl
dec
add
imul
inc
jnp
mov
pop
test
lcall
out
push
loopne
into
xchg
xor
jle
cmp
cmp
cmp
fstpl
inc
sub
sbbl
sub
leave
xchg
fistpll
adcb
in
stos
fstp
cld
push
test
mov
aas
outsb
push
call
enter
or
rcrb
cld
add
push
lock
jnp
mov
mov
mov
mov
mov
incl
sbb
repz
or
loope
subb
xchg
or
movsb
jp
addl
mov
sbb
fimuls
aam
sub
sub
negl
xchg
fsubrl
aam
push
in
loope
fstps
push
mov
push
loopne
and
jle
mov
cltd
push
lods
or
push
cmpsb
sbb
stos
jp
dec
insb
mov
jnp
push
and
mov
unpckhps
andl
arpl
mov
cli
and
add
mov
aad
std
pop
fimuls
sub
stos
push
addr16
jg
int3
test
cli
pop
cld
lds
cmpsl
mov
es
or
outsb
and
shll
mov
xlat
mov
and
fnsave
lds
adc
mov
test
sbb
arpl
ljmp
imul
mov
sub
jp
test
or
xlat
push
sub
jns
repnz
lods
cmp
rclb
fsubl
dec
jle
scas
add
mov
xchg
fs
or
popf
jno
fstpt
sbb
inc
fcmovb
das
pop
scas
mov
mov
and
pop
or
sti
and
xchg
mov
and
das
in
in
mov
sarb
xchg
fwait
ret
loopne
scas
xchg
fimuls
mov
lcall
fldenv
daa
lea
mov
cmpsl
scas
fsubrl
out
push
cmpsl
inc
jle
jae
mov
sub
cwtl
mov
fwait
repz
or
fnstenv
aad
xchg
cmp
lods
sbb
idiv
std
mov
mov
jns
leave
mov
lret
inc
mov
int
repz
and
jb
movsb
in
in
mov
xchg
jecxz
je
fs
mov
push
test
sub
sub
std
ficoms
xchg
jne
inc
fiaddl
mov
popf
out
mov
mov
xor
and
jbe
das
push
pop
mov
lret
roll
mov
xchg
jl
out
mov
nop
adc
xor
pushw
lock
cmpsl
movsb
repz
fadds
sahf
fidivs
movzbl
adc
sub
add
sub
sub
pushf
mov
imul
scas
rcr
popf
clc
push
loop
scas
push
mov
dec
mov
aas
cmpb
imulb
mov
mov
ljmp
mov
sbb
or
scas
in
subl
jno
mov
mov
pop
scas
cmp
jnp
xchg
mov
xchg
sbb
mov
shrb
movsb
stc
adc
outsl
cltd
movsl
popa
pop
insl
fnsave
xchg
jbe
sub
out
mov
aam
pop
cmp
xlat
mov
sbb
out
mov
or
dec
insl
fstpl
sbb
movsl
test
sarl
sbb
pop
mov
lahf
sahf
test
outsl
dec
ja
xor
jae
cli
fidivrs
test
sub
mull
lcall
cmpsb
push
adc
fiadds
je
sub
cmp
inc
sahf
repz
inc
cmp
cmp
sti
shlb
pushf
push
sbb
inc
jl
mov
sbb
scas
adc
fldt
iret
add
sbb
enter
fldenv
inc
xor
fsts
aaa
inc
jo
lahf
adc
sub
repz
sbb
lock
mov
jns
enter
xor
dec
and
test
mov
xor
test
and
test
sbb
cmpsl
addb
mov
xchg
test
xchg
gs
and
pop
push
gs
jnp
mov
or
test
inc
cmp
mov
sbb
jno
inc
dec
cmc
mov
repnz
int3
stc
push
mov
or
mov
push
and
movsl
sub
ret
lods
add
loopne
rolb
ds
lock
lods
int
pop
mov
mulb
dec
fsubs
inc
cld
repz
add
shr
xchg
push
pop
sahf
fisubrl
flds
shlb
sub
repnz
mov
pusha
jns
iret
sti
loop
movsb
push
into
stos
popf
cmpl
aam
fsubp
mov
mov
subb
xor
popf
fldcw
imul
adc
mov
and
daa
lahf
leave
xchg
pop
inc
pop
xchg
jns
in
mov
push
adc
cwtl
lcall
lods
mov
icebp
pushf
test
mov
pop
aaa
insl
cmp
addr16
cmpsl
fiadds
mov
popa
pop
add
or
or
cmpsb
mov
mov
xchg
mov
lcall
dec
add
sbb
xor
mov
fimuls
fdiv
fstp
into
enter
add
pop
insl
gs
cmp
sbb
ficoms
xchg
in
mov
mov
dec
jae
mov
xchg
lds
sahf
adc
in
jo
movsb
xchg
fs
push
hlt
inc
adc
lock
xchg
mov
out
mov
or
dec
test
fdivrs
rorb
int
and
sbb
push
sbb
in
flds
mov
jmp
fcmove
lcall
inc
xchg
in
repz
fisttpl
mov
xchg
in
dec
imul
push
cmp
xchg
aad
sbb
cmp
sub
ss
ds
aad
jbe
jg
jae
mov
jecxz
popf
cmp
sbb
mov
adc
push
xchg
js
inc
cld
mov
into
xor
lods
sti
dec
int
xchg
jecxz
mov
addl
loope
mov
mov
out
inc
push
cwtl
fmul
xchg
mov
pop
out
fadd
es
mov
mov
adc
push
mov
repnz
outsl
xchg
pusha
stc
rcrl
fxch
push
subb
fstl
in
fcoml
or
jp
inc
and
mov
jo
cmp
jle
lret
cltd
xchg
jb
and
mov
sti
mov
ficompl
cmp
xorl
xor
sti
dec
int
push
in
pop
out
aam
das
xchg
jns
jb
or
test
lock
mov
pop
in
jnp
lcall
mov
test
sub
mov
fldt
jge
addb
ljmp
xor
mov
jo
mov
sbb
ficoms
jnp
inc
daa
inc
fsts
adc
movsb
ds
pop
insl
insb
mov
das
mov
push
ret
repz
js
push
movsb
inc
lahf
inc
cmpsl
adc
jge
nop
or
fadds
fldcw
inc
pop
int
cwtl
in
popl
mov
dec
xchg
lret
test
xchg
call
cld
andl
mov
pop
shr
fdivl
enter
xchg
cmp
fsubrl
enter
mov
adc
ss
insl
mov
jo
cmp
test
mov
movsb
hlt
sar
push
or
aaa
mov
mov
mov
sbb
in
popa
add
sbb
push
jae
push
push
push
xchg
cmpsb
dec
aad
addr16
or
cmp
andl
jg
sub
sarb
cld
mov
sbb
loop
push
cmpsb
inc
push
cmc
jg
scas
pop
pop
inc
scas
jno
les
test
inc
clc
jmp
sbb
xor
inc
push
aam
adc
aaa
jb
test
repnz
addb
pop
cmpsb
push
orl
mov
sbb
testb
adc
fsubrl
imul
test
sti
sbb
out
mov
inc
push
fidivl
daa
mov
fstpt
adc
test
mov
inc
loop
fidivrl
push
lahf
fcomps
xchg
push
std
pop
fimull
repnz
xor
imul
xchg
jmp
inc
cli
stos
orb
ret
hlt
mov
mulb
push
sti
sahf
flds
lods
popf
mov
into
mov
adc
jnp
mov
pop
and
sub
std
jno
push
fisttpll
lcall
stos
and
and
popf
inc
daa
and
mov
lock
pop
fldcw
scas
lcall
lahf
lret
je
rolb
adc
hlt
or
stc
cmc
out
mov
fdivrl
mov
mov
inc
and
repz
mov
cltd
lds
ret
or
mov
xchg
stc
je
in
aam
adc
xchg
out
jno
xor
fstpt
fstps
xor
loop
cmp
xchg
sahf
xor
sub
xchg
addr16
mov
popa
test
mov
pop
dec
adc
push
xor
xor
rclb
stos
scas
sub
mov
jge
dec
push
out
ret
or
inc
sahf
int
inc
pop
mov
les
in
sbb
inc
xchg
fs
mov
mov
es
mov
sbb
in
shlb
test
std
cs
jns
rcrb
orl
test
sahf
sarb
lds
inc
push
jecxz
pop
mov
adc
mov
push
sbb
cli
or
jb
nop
xchg
enter
or
test
xchg
or
out
ret
push
aas
fisubrs
insb
mov
mov
mov
dec
push
mov
arpl
fildll
test
add
dec
fidivs
daa
cmpsl
lcall
leave
sub
enter
push
xrelease
movsl
ret
ja
orb
xorl
cmpsl
or
daa
icebp
pusha
xchg
popf
pusha
aad
icebp
or
ret
sub
or
cmp
mov
sbb
or
xchg
and
fsubrl
add
ja
fisttpl
fcmovnbe
mov
add
sti
jecxz
movsb
das
inc
faddl
dec
fists
xor
es
fs
xor
jnp
out
mov
add
add
mov
and
out
out
iret
xchg
xor
and
xorl
cmp
cmpsb
mov
pop
add
jns
jno
sub
test
ror
jg
int
mov
int
jecxz
dec
push
xchg
xchg
and
add
mov
add
and
inc
add
out
fsubrl
test
and
sbb
pop
mov
das
les
jae
sub
or
repnz
sbbl
cmpsl
loopne
push
pushf
ret
pop
pop
int
imull
mov
shrb
test
or
adc
daa
mov
mov
mov
jb
loope
std
xchg
bound
imul
daa
out
out
add
cltd
jae
bound
arpl
mov
inc
les
push
mov
repz
out
cmp
pop
clc
mov
push
xorb
dec
xchg
mov
xor
dec
movl
jge
mov
iret
inc
fcmovne
test
es
test
sbb
test
mov
int3
sti
jnp
shll
fdiv
flds
push
mov
inc
mov
mov
ss
test
fnstenv
push
xchg
sub
pop
repz
imul
add
dec
mov
loope
inc
inc
sbb
mov
dec
int3
push
test
call
lret
flds
mov
int3
std
add
int3
movsb
adc
push
adc
adc
push
add
sbb
mov
xor
test
or
mov
xchg
mov
adc
flds
icebp
cltd
dec
inc
scas
imul
sub
popf
js
push
pushf
and
andl
rorb
xchg
mov
imul
xor
rcl
pop
mov
loop
mov
mov
test
lcall
xchg
lds
lahf
mov
std
and
insb
adc
cmc
pop
lahf
in
mov
mov
add
out
pop
test
scas
sub
mov
mov
mov
test
cmp
mov
xchg
xlat
jg
shrb
xor
rol
imul
pop
std
adc
dec
mov
fdiv
dec
push
mov
and
inc
adc
pop
sub
test
cmpsb
inc
jg
adc
lods
dec
ljmp
inc
mov
rolb
jle
int3
out
sar
popa
fstpt
lret
or
xor
or
push
or
jbe
cli
int
fistl
popf
mov
inc
add
into
fisttps
or
leave
cs
mov
mov
imul
out
inc
imull
nop
push
movsl
mov
dec
in
andl
gs
outsb
fucomp
mov
pop
jg
push
andb
xchg
int
mov
enter
imul
aad
inc
sahf
and
lret
data16
rcll
dec
or
lds
mov
out
inc
js
mov
sbb
sbb
mov
fistl
enter
movsb
mov
xchg
sub
orb
aad
jmp
sarl
loop
lcall
inc
pop
hlt
jl
stc
test
fbld
outsb
cli
inc
mov
mov
push
and
pushf
jge
hlt
repnz
std
sbb
mov
out
dec
or
sbb
sbb
cmp
push
out
sbb
jns
cmc
movb
aaa
imul
sub
xor
out
pop
ss
add
mov
adc
lods
pop
jp
mov
sbb
lds
mov
cmp
pop
mov
insl
rol
add
adc
in
inc
xchg
push
inc
into
push
mov
test
fnstsw
adc
xchg
iret
movsb
scas
adc
arpl
pop
scas
lock
cmp
jnp
sbb
jmp
and
sbb
push
pop
imul
aad
dec
mov
lret
sti
mov
test
in
mov
scas
negb
jnp
sub
mov
and
dec
stos
incb
inc
icebp
in
movl
and
push
fstpl
out
js
and
repz
test
push
adc
ret
loopne
sti
bound
std
jae
mov
and
cmp
xor
mov
push
pop
scas
sbb
sahf
addl
loop
sahf
ror
xchg
stc
jle
jb
gs
or
test
shrl
push
iret
gs
adc
or
popa
adc
gs
in
flds
push
lds
arpl
lods
jbe
sub
mov
out
pop
shrb
sti
rolb
insb
jecxz
jp
and
mov
mov
xor
pop
fiadds
fstps
int
dec
out
adc
mov
pushf
adcl
push
jbe
dec
mov
push
je
cmp
adc
pop
cmp
lds
loopne
ja
mov
or
dec
addr16
or
ja
aad
scas
jecxz
dec
test
inc
dec
int
push
scas
and
ret
mov
lcall
pop
jmp
cli
insl
inc
mov
xchg
add
ret
lcall
out
outsl
fldenv
scas
arpl
ss
mov
movsb
dec
lcall
inc
es
mov
mov
adc
cmp
sbb
scas
jns
xchg
mov
mov
ficoms
and
dec
add
ljmp
sub
mov
mov
sti
sar
cmpsb
sbbl
sarl
mov
cmp
adc
mov
out
insb
ss
and
hlt
shr
pop
fcompl
add
xchg
push
inc
pop
es
dec
and
test
push
xchg
mov
out
xor
jae
mov
sbb
ficomps
stc
xlat
mov
test
push
mov
xchg
popa
std
jmp
pop
jnp
into
or
ljmp
enter
dec
filds
movsl
pop
fildl
pop
fldenv
cmp
fdivl
lock
jmp
pop
pop
mov
fsubl
into
in
mov
out
inc
mov
faddl
pop
jnp
hlt
pop
lretw
es
cmpsl
mov
jecxz
lds
enter
and
std
mov
lahf
in
mov
add
fldenv
inc
movsl
sub
mov
sbb
push
xchg
iret
sub
fcoml
sub
lret
xchg
fiadds
jnp
mov
nop
sub
xchg
outsb
xlat
sub
incb
cmp
hlt
mov
scas
insb
test
stc
loop
cmpsb
push
scas
imul
clc
push
sti
sub
shl
jno
in
test
xor
and
mov
das
popl
inc
movsb
jge
mov
enter
iret
xlat
sbb
test
lret
mov
loop
dec
xchg
pop
cmp
fldl
test
xor
sbb
in
jns
arpl
mov
sbb
in
out
flds
out
inc
sbb
mov
dec
les
adc
aad
mov
out
out
mov
jae
push
xchg
outsb
or
loop
or
sub
pushf
les
mov
dec
xor
dec
mov
pop
popf
imul
rcll
hlt
sbb
ds
arpl
push
les
ds
push
sub
or
cmp
int
adc
push
js
movsb
pop
cli
push
hlt
mov
pop
sbb
into
fistpl
repz
jmp
jle
cmp
cld
xchg
test
repz
mov
inc
inc
xorl
add
push
mov
or
sub
movsl
dec
aad
fnstsw
fisttpl
repnz
mov
hlt
mov
inc
scas
dec
test
fidivrs
pop
mov
sti
cmp
cmp
pop
sahf
lea
addr16
sbb
add
imul
lcall
adc
mov
xchg
adc
int3
lret
mov
popa
dec
push
sbb
sub
lcall
cmp
inc
xchg
fs
arpl
test
fwait
xor
enter
scas
in
leave
loop
and
fstpl
add
sbb
dec
les
adc
ret
cmp
dec
or
cmpsb
dec
jbe
push
incb
movsb
das
adc
lds
shll
orl
mov
mov
adc
mov
push
std
xchg
outsl
subl
push
test
sbb
addr16
popf
dec
testl
int3
pusha
mov
popa
or
lea
test
xor
int
mov
data16
push
push
sbbb
fcompl
add
fdiv
addb
mov
mov
data16
dec
fsubl
inc
or
sarl
test
pop
mov
rcrb
xor
xchg
adc
pop
stos
sbb
and
inc
lods
in
outsb
rcr
std
out
fiaddl
xchg
in
out
adc
dec
xchg
into
lds
mov
push
fnstcw
xchg
cmpsl
xchg
test
shlb
addr16
mov
jnp
add
sbb
outsb
dec
lret
jp
ss
pop
lods
jp
leave
clc
in
mov
lods
push
hlt
xor
jecxz
and
sbb
out
mov
push
cli
idivb
mov
push
fiadds
pop
cmpsb
out
mov
test
outsl
add
std
xorb
jnp
add
mov
or
bound
sub
adc
jbe
movsb
mov
mov
data16
fnstcw
mov
scas
das
imul
pop
pslld
mov
push
dec
stos
roll
mov
xchg
mov
jge
cmpsl
test
in
mov
loope
cmp
pop
lods
inc
cmpsb
sbb
xchg
jmp
mov
mov
out
jle
rcrb
inc
sbb
adc
or
mov
lods
xchg
xor
sti
mov
aam
mov
ficompl
fimull
xchg
lods
icebp
stos
in
xor
cmp
sahf
lret
inc
shrw
shlw
xor
inc
sub
movl
xor
sbb
sarb
fadds
pop
xchg
test
jl
test
int
pop
movsl
ror
dec
dec
and
sbb
test
data16
xchg
scas
jg
pop
dec
cmp
sti
cmpsb
sub
clc
arpl
xlat
and
lods
mov
or
arpl
mov
or
fsts
lock
cmp
mov
jmp
inc
mov
jns
mov
testl
jbe
and
xchg
xlat
hlt
scas
lods
inc
fincstp
test
cli
push
les
jmp
addr16
jle
dec
shll
cmpsb
inc
mov
pop
sti
sbbb
xor
xor
lods
aaa
scas
stos
cmpsl
inc
dec
setae
in
mov
inc
push
ljmp
into
xor
ja
mov
fadd
dec
push
insl
js
pop
lds
dec
dec
mov
cmp
stos
test
lock
icebp
add
mov
insl
adc
inc
fadds
push
stc
std
fldcw
fistl
mov
pop
leave
add
add
int3
leave
fists
stos
aaa
outsl
or
push
fcmovnbe
ss
in
xchg
adc
scas
out
mov
rorb
aaa
mov
push
lods
int
mov
cmpsl
jns
out
inc
or
outsb
out
sbb
sub
push
cs
cmp
scas
sbb
sti
jbe
dec
scas
adc
dec
aad
repnz
add
mov
dec
sbb
test
popf
hlt
ja
fwait
out
and
aad
lahf
arpl
fidivrl
push
scas
inc
jns
std
push
jmp
dec
js
sbb
push
ljmp
xlat
mov
xchg
add
adc
scas
shl
mov
jnp
cltd
jecxz
rcl
je
pop
pop
adc
mov
test
jp
scas
jbe
insl
dec
inc
dec
movsb
cli
jno
lods
mov
mov
push
cmp
xchg
fs
inc
xor
xchg
fwait
adcb
iret
aad
push
jnp
jg
test
movsl
lock
push
jno
xor
adc
push
jae
leave
lret
lahf
fstps
or
stc
jo
dec
fidivrs
sbb
lahf
movsl
test
outsb
ljmp
jl
push
jno
pusha
push
bsf
jae
sbb
lock
add
jle
mov
mov
add
int3
repnz
ds
or
popa
jp
inc
cmp
jp
xchg
lods
push
shrl
mov
jge
add
mov
in
std
in
dec
shr
test
dec
jl
inc
movsl
xchg
dec
test
pop
adc
imul
sbb
fldenv
jb
in
lods
jmp
mov
xor
loope
push
sahf
out
mov
xor
add
mov
mov
mov
mov
loopne
das
pop
shr
mov
enter
and
cltd
lret
jmp
sub
test
dec
dec
adc
adc
jle
push
repnz
repnz
and
pop
cmpb
mov
aaa
shlb
mov
ret
cwtl
and
stc
and
push
dec
popa
movsb
push
jp
mov
dec
cmp
sbb
lds
stc
std
or
cmc
cmpl
mov
shlb
mov
movsl
mov
dec
inc
arpl
in
cmp
sub
jae
adc
inc
jns
fistpll
aam
fnstenv
into
dec
and
test
add
scas
sub
mov
pop
ja
mov
repz
mov
push
mov
addr16
xchg
flds
int3
stos
mov
hlt
sahf
repz
dec
loopne
dec
lret
es
sbb
popf
mov
add
cld
push
pop
jae
stc
or
test
inc
xor
cmpsb
cltd
mov
mov
mov
cmp
std
sbb
push
fwait
mov
lods
add
mov
fadds
sub
cmp
dec
roll
imul
cmp
adc
pop
and
inc
xor
xchg
lret
jne
sarb
mov
std
xor
in
push
sbb
push
sub
mul
scas
mov
bound
repz
mov
inc
movsb
js,pn
mov
enter
push
cli
mov
shrl
cmp
add
xchg
or
inc
les
cmpsb
mov
cld
gs
ljmp
test
unpcklps
xchg
pop
out
cwtl
mov
repz
nop
mov
push
pusha
mov
lcall
mov
xor
outsl
test
test
test
inc
jns
inc
enter
sbb
sbb
mov
sarl
ljmp
cmpsb
fldcw
out
sub
cmp
notb
shr
int3
sub
in
mov
cmp
out
and
sbb
adc
sbb
sarb
aaa
cmp
mov
test
nop
mov
dec
faddp
lods
push
fsubr
popa
addr16
push
repz
push
data16
pop
bound
push
xor
fisttpl
dec
or
sub
pop
repnz
int
jo
mulb
pop
in
mov
cmp
daa
pop
mov
cli
movsl
or
jne
hlt
cmp
mov
fstpl
mov
xchg
mov
add
outsb
stos
stos
xor
mov
xchg
push
in
int3
adc
aaa
cmp
sahf
rcll
fsts
loop
ror
inc
mov
inc
cmp
sub
test
cmpsb
xor
pop
adc
fisubrs
pushf
mov
call
outsl
xor
sub
inc
cmp
aad
das
sti
stc
in
aad
mov
mov
add
sahf
bswap
xchg
mov
dec
push
loope
adc
mov
mov
jnp
mov
popf
push
cwtl
pop
std
or
pop
clc
mov
add
jp
aad
or
mov
in
pushf
test
cmp
add
fisttps
adc
jae
inc
sbb
sbb
xchg
popf
fldl
es
cmc
push
xchg
xorb
mov
push
fisttpl
aad
loop
out
jns
imul
in
sbb
mov
adc
add
and
cmc
pop
mov
enter
jl
xor
and
repz
add
rcl
in
daa
lds
adcb
fwait
iret
xchg
aad
lea
test
mulps
mov
jp
enter
or
mov
fwait
mov
sub
fnstcw
aad
fwait
jne
inc
mov
jnp
out
jle
out
pusha
mov
pusha
xchg
jl
and
adc
adc
add
in
aas
aas
ss
jle
mov
shrl
fbld
std
mov
sbb
mov
loope
and
xchg
mov
mov
es
rorl
cmp
and
repnz
jb
add
jmp
outsb
mov
dec
mov
cmp
test
test
jo
or
out
mov
lahf
fcmovu
sub
adc
xchg
mov
adc
aas
out
cmp
xchg
push
mov
mov
test
xlat
push
mov
flds
movsl
mov
repnz
xor
jle
leave
cmp
add
push
inc
aad
ja
aad
mul
mov
push
mov
cmp
cmp
inc
add
out
adc
insl
bound
stc
rcrl
fcomps
ficoms
push
pushf
inc
jno
mov
ja
jp
push
mov
scas
jbe
cmp
call
cmp
ffreep
addr16
and
jne
subb
fwait
or
and
push
mov
or
cmpsb
enter
or
or
inc
xchg
sbb
in
lcall
pop
inc
pop
repz
fdivr
xchg
sub
cld
fidivrs
jp
mov
mov
bound
ds
cmpsl
adc
je
cmc
jle
lods
js
sub
jbe
aam
lahf
popf
mov
add
sets
fisubl
in
mov
push
cmpsb
sbb
popa
call
scas
fsubs
or
mov
hlt
mov
dec
faddl
sbb
adc
pushf
jmp
xor
xchg
das
cmp
inc
sti
into
push
cwtl
aaa
or
lds
stos
in
bound
int3
scas
mov
gs
push
sbb
popa
les
outsb
push
sahf
xchg
sub
add
lods
push
lahf
inc
das
out
fdivs
sbb
push
adc
jle
fnstenv
xchg
mov
aaa
int
dec
push
or
mov
repz
cmp
push
sarl
lock
es
add
jl
sub
or
lock
lcall
ss
cmpsb
or
mov
leave
adc
test
loope
jg
mov
push
out
pop
ror
sub
in
movsl
lea
adcb
iret
movsl
lahf
mov
mov
cmp
mov
fnsetpm(287
mov
orb
test
lods
fnsave
das
cmp
pushf
mov
shll
in
jns
hlt
popa
pop
mov
addr16
sbb
repnz
mov
stc
pop
xchg
lahf
cltd
into
fs
outsl
push
jg
scas
shll
xor
xor
pop
cs
fadds
mov
call
add
fdiv
inc
dec
jbe
push
bound
dec
adc
popf
push
cmp
repnz
popf
inc
out
pop
add
dec
sub
xchg
sti
sbbl
sub
jge
jg
in
sbb
ficomps
in
dec
inc
push
inc
jnp
stos
push
push
aas
and
flds
xor
jp
sbb
lock
lea
jmp
mov
pop
sub
repz
inc
out
mov
stos
popf
inc
push
das
xchg
mov
xchg
mov
imulb
pop
pushf
pop
dec
dec
js
cld
sbb
pop
xor
lds
lds
aam
daa
push
sbb
or
pop
imul
cmp
mov
xor
jb
test
imul
adc
jg
mov
ret
rclb
out
adc
jbe
sbb
stc
ret
dec
rcrl
fstps
stos
aas
mov
cmp
mov
xor
adc
clc
test
jle
fisttpl
add
mov
lods
cmp
pop
cld
out
roll
mov
mov
dec
cwtl
or
or
xchg
movb
test
int3
scas
mov
push
inc
xchg
je
movsl
repz
lds
xchg
scas
adc
aad
and
lods
xchg
pop
movsl
leave
jmp
or
cmp
push
inc
inc
jo
and
fstpl
mov
fiadds
inc
les
lock
into
jmp
and
push
mov
xor
in
mov
int3
or
cmp
mov
push
jp
movsb
cmpsl
jge
cmpsb
xchg
mov
cs
inc
xchg
adc
gs
pop
xor
lahf
test
addr16
push
arpl
adc
insl
cmpb
sahf
and
repz
idivb
jle
clc
mov
pop
fnstenvs
jmp
and
movsl
mov
je
hlt
cld
jge
mov
add
and
ret
cmp
sbb
or
sbb
jp
adc
mov
dec
sub
cs
mov
es
inc
pusha
cmpsl
pop
push
aaa
out
inc
cltd
sti
or
in
adc
mov
dec
insl
or
dec
into
das
mov
jb
ret
ljmp
xchg
or
adc
and
add
adc
orb
ljmp
iret
into
rol
and
jbe
mov
pop
out
xchg
add
mov
inc
mov
lds
and
hlt
fwait
movsl
imul
stos
in
jnp
int3
cld
pop
and
cltd
and
fdivr
mov
inc
xchg
sahf
mov
cltd
xchg
xchg
sub
imul
imul
aam
popa
mov
and
repnz
jae
mov
xchg
or
ret
lock
stc
ret
imul
adc
dec
push
xchg
xchg
mov
fisttpl
mov
mov
push
out
push
mov
jg
adc
mov
fadds
xchg
scas
popf
push
imul
mov
dec
or
out
mov
fistpl
int
int3
and
mov
cwtl
std
jle
or
ror
push
and
sbb
popl
rol
push
cltd
cs
pushf
sti
dec
and
push
and
ds
adc
imul
cmp
pop
inc
pop
lods
into
xchg
mov
inc
jg
imulb
xorl
mov
mov
into
or
push
cmp
stos
cmpsb
test
fsts
xor
mov
sub
mov
xchg
mov
cmp
add
das
mov
add
out
cli
add
test
imul
sub
mov
test
xchg
mov
sti
in
shrb
push
subl
lods
push
sahf
push
mov
and
lea
outsl
cmp
jbe
sbb
arpl
cmpsb
repz
addb
adc
mov
adc
xchg
sbb
and
xchg
shlb
jle
hlt
xchg
repz
push
loop
push
xor
add
pop
sbb
mov
mov
mov
xchg
pop
fsts
lret
pop
shll
mov
gs
sti
scas
xchg
mov
insl
sbb
push
sbbl
push
dec
mov
cmp
xor
stc
lods
out
mov
push
scas
pop
addb
jle
loop
hlt
loopne
cmpsl
push
lret
mov
sahf
ficomps
or
dec
ret
fsubs
movsl
inc
scas
lahf
sub
call
mov
test
and
addr16
aaa
xchg
daa
inc
cltd
jp
xchg
mov
dec
in
xchg
paddq
icebp
insb
es
fwait
xlat
xlat
popf
call
fs
push
mov
xor
mov
iret
sbb
test
pop
cmc
popf
sahf
push
add
dec
add
pop
dec
and
in
sub
test
fwait
mov
ss
and
jle
xchg
cmp
mov
inc
outsl
jnp
js
and
dec
into
xlat
push
xor
mov
xchg
sbbl
nop
cmp
insl
out
fcoms
and
push
test
int
xor
scas
fnstcw
std
mov
aam
add
gs
xlat
pop
clc
cmp
jns
xor
int3
pop
lds
pop
inc
rcll
sub
movsb
mov
sbb
cmc
add
add
ja
jae
in
ficomps
ficomps
int3
mov
mov
mov
mov
pop
add
xor
mov
in
inc
addr16
pop
add
inc
int
push
push
lahf
dec
stc
xchg
loop
adc
mov
mov
mov
xchg
lret
cmp
fisubrs
or
jnp
sub
stos
mov
push
into
add
sbb
jbe
enter
sbb
mov
lods
xchg
cmp
sub
mov
arpl
jg
out
mov
xchg
xor
inc
shr
aaa
lahf
mov
push
pop
int3
fsts
imul
xor
mov
mov
pop
jbe
icebp
inc
mov
fldenv
mov
xor
test
movsl
call
inc
mov
cmp
inc
repz
neg
jnp
xor
out
lods
push
jno
push
and
xchg
pop
cmpsl
xor
int3
lahf
das
mov
dec
sbb
jae
push
inc
xchg
jle
aam
pop
mov
out
push
ss
adc
jb
shrd
test
dec
fsts
idivb
aam
xor
pop
push
out
mov
es
int3
and
movsb
jge
jb
mov
repz
inc
inc
mov
push
inc
icebp
adc
insl
sub
movl
cmp
pop
add
imul
addr16
loop
fsubrp
mov
push
xchg
mov
loope
je
xchg
sbb
call
enter
jns
sar
push
sahf
mov
jae
xor
hlt
pop
mov
hlt
in
int
out
pop
xchg
fimull
jno
repz
push
pop
das
push
inc
xor
mov
loope
rorb
lods
mov
push
jae
mov
sbb
or
jno
sbb
adc
sbb
lahf
mov
jg
lock
mov
jb
jp
pop
les
dec
popa
xlat
dec
push
lods
scas
mov
fmull
cmp
les
mov
mov
cmp
movsb
cs
mov
xor
out
xchg
inc
sarb
pusha
je
stc
adc
adc
repz
xor
and
jne
push
jo
das
or
dec
aam
in
or
lds
xchg
test
and
es
mov
fidivrs
fadd
pushf
ss
xchg
xor
cmp
aas
pop
mov
push
push
or
mov
negl
stc
push
mov
jns
sbb
pusha
mov
mov
outsl
int
test
test
stos
add
jne
mov
xor
mov
mov
cmp
push
shlb
fstps
loop
dec
repnz
out
aad
into
push
mov
adc
mov
push
dec
sahf
outsl
dec
js
outsl
cltd
or
stc
inc
cmp
mov
adc
ficomps
xchg
in
sub
cmc
jg
int3
mov
mov
push
dec
jnp
fcmove
int
int
stc
cwtl
std
cmp
stc
loope
cmp
sbb
aad
or
dec
xor
jns
mov
fdivl
das
shr
addr16
push
aas
mov
mov
cmp
dec
mov
sarl
and
inc
es
mov
xchg
fbstp
movsl
jmp
pop
push
add
addr16
pop
jbe
or
adc
test
das
jno
jg
cli
imul
cmp
int
cmp
inc
lods
fstl
push
add
add
add
in
addr16
das
movsl
int3
pop
lods
lock
lahf
xlat
mov
movsl
push
int
and
repz
dec
mov
fstps
lds
mov
cmp
movsb
pop
mov
addl
push
cwtl
cli
ficoml
and
sahf
xchg
cmpl
test
test
cmpsb
shlb
cmpl
xchg
dec
addb
xor
gs
mov
pop
out
out
dec
mov
bound
insl
jae
ficomps
cli
xchg
adc
add
pop
in
ds
cld
jmp
cmpsl
outsl
or
adc
repz
in
mov
sub
cmc
add
ljmp
mov
inc
sbb
mov
lahf
es
jne
push
idivl
push
dec
push
inc
and
xor
fdivs
pop
inc
push
mov
lahf
leave
mov
cmp
daa
shld
and
dec
pop
mov
fsubrs
std
outsl
inc
lds
movsl
mov
ss
scas
pop
shl
mov
push
mov
add
push
scas
mov
call
xor
pop
mov
movsl
add
mov
dec
jecxz
pop
and
dec
dec
add
mov
or
adc
lds
mov
ret
jae
push
outsl
test
xor
fcoms
xor
xor
push
insl
adc
shll
scas
mov
in
xor
pop
pop
push
pop
dec
or
xor
lea
jmp
dec
out
out
lahf
shl
pop
das
sub
mov
mov
jbe
lea
mov
in
lret
ja
sbb
sub
xor
xchg
and
out
mov
xchg
inc
or
imul
adc
int3
cmp
scas
mov
push
xchg
dec
mov
jmp
mov
add
stos
dec
loop
jle
sub
fistl
inc
sti
icebp
xor
scas
adc
mov
leave
xchg
adc
in
sub
addr16
push
or
out
dec
data16
cmp
stc
push
push
aaa
in
xor
mov
fyl2x
addr16
clc
loop
lahf
mov
rolb
ret
sub
mov
inc
movsb
xor
scas
add
frstor
mov
add
jp
mov
out
sbb
adc
add
scas
add
std
mov
insl
jo
pop
jne
mov
push
sub
mov
movb
sub
imul
out
addb
test
lret
sbb
jno
ss
shl
aad
cmp
andb
outsb
sbb
pop
add
push
test
and
jge
mov
fldenv
mov
pop
sub
pop
inc
int
mov
es
cmc
test
data16
adc
adc
cmp
sysret
loope
mov
cmp
sbb
rol
jl,pn
xorb
jp
push
add
fisubrs
enter
pop
push
xor
test
popf
push
hlt
out
sub
adc
inc
sbb
cmp
clc
idiv
or
test
and
aad
inc
outsl
orl
daa
negl
jne
pop
lock
loope,pt
sub
push
xchg
lds
jl
pushf
sbbb
std
les
xor
adc
sub
andb
not
rcrl
adc
pop
xor
out
das
jle
cvttps2pi
pop
in
popf
fwait
mov
nop
mov
dec
lds
push
xor
int
mov
lods
push
push
aam
sbb
loope
inc
flds
mov
xor
lods
lock
iret
push
lahf
and
adc
int3
inc
jns
cmpsb
test
mov
xchg
sub
sub
cmp
push
icebp
cmp
sbb
in
mov
lods
out
das
fiadds
mov
call
out
jbe
fldenv
jne
in
inc
insb
mov
shlb
sbb
mov
adc
mov
lret
jae
outsl
out
fnstcw
lods
inc
adc
movsl
out
mov
adcb
pushf
test
fldenv
or
aas
int
cmc
mov
icebp
push
pop
lods
xsha256
cmpsb
adc
rcrb
mov
mov
dec
cmp
mov
fabs
jecxz
sbb
and
fidivrs
jl
imul
std
fwait
sahf
das
xchg
pop
out
call
daa
push
inc
mov
push
lods
out
dec
pop
rorb
popf
add
and
and
push
cmc
mov
pop
push
lock
xchg
js
mov
test
cmp
repnz
mov
and
ret
out
test
adc
imul
outsb
data16
cli
test
mov
inc
xor
sub
lods
add
dec
mov
in
inc
dec
dec
or
cmpsb
cmp
mov
dec
push
dec
insl
movsl
fwait
fdivp
xchg
loop
xor
sbb
in
pop
sbb
lods
in
push
push
call
mov
xchg
ss
xchg
adc
inc
pop
push
push
cld
cmpsl
pop
lcall
cmc
in
mov
pusha
subl
data16
leave
stos
addb
push
cs
std
int
sbb
dec
imul
test
movsl
shr
icebp
ja
or
xor
into
test
loopne
jno
lahf
inc
lods
cs
les
sbb
or
icebp
mov
fcmovnb
insb
cltd
inc
arpl
movsb
fists
in
xchg
xor
cmp
mov
xchg
jae
push
imul
imul
test
enter
cmpl
inc
cmpsb
jne
or
out
sub
repz
fidivs
inc
sbb
cmp
cmovl
jecxz
loope
stos
push
and
bound
int3
test
cmp
test
ljmp
fisttpll
mov
js
jmp
adc
dec
mov
ds
sbb
pop
and
es
ret
lds
cld
scas
lock
addr16
cmpsl
test
lret
push
lock
imul
sbb
scas
mov
adc
inc
jae
scas
push
fnstcw
in
mov
mov
testb
push
cmp
in
push
push
mov
mov
inc
stos
out
jle
inc
pop
adc
pop
mov
inc
test
jle
pop
push
add
mov
mov
push
xchg
mov
cmp
iret
in
ljmp
and
cmp
xchg
seta
push
cmpsb
cmp
sti
jo
inc
sbb
adc
and
mov
adc
pop
out
outsb
fadd
fiadds
cmp
jns
inc
fldenv
test
inc
fstpt
adc
jmp
outsl
dec
out
inc
sbb
imul
push
xor
dec
into
dec
sahf
sub
fdivl
lret
xchg
adc
cmp
cmp
xchg
sbb
dec
jp
push
movsl
fsubrl
das
dec
mov
push
mov
xchg
xor
add
dec
fcomps
sbb
mov
cmpsb
sbb
jg
std
cmpsl
flds
cmp
cmp
fiadds
cmpsb
jo
sbb
inc
cmp
xor
sub
push
pop
lock
xchg
mov
sbb
cli
mov
das
adc
sub
sbbl
xor
pop
ficoml
movsb
push
mov
outsb
mov
out
sub
adc
xor
jecxz
cli
adc
scas
adc
sub
inc
out
push
ljmp
ret
fs
dec
mov
test
xchg
das
xor
aam
mov
cmp
push
lcall
into
ss
xlat
bound
dec
jnp
xor
cli
mov
movsl
push
jb
sbb
cmc
pop
jmp
test
push
repz
and
fistpl
dec
and
jb
pusha
sub
test
daa
xchg
movsl
insl
aas
jl
shlb
jp
arpl
sbb
fldcw
divl
fiadds
mov
mov
xor
cmp
ja
mov
mov
pusha
inc
loopne
mov
fsubrs
mov
inc
jl
mov
das
int
sub
mov
xor
fs
sub
push
aam
lods
pop
mov
mov
mov
fnsave
sub
loop
out
cmp
js
xchg
sahf
cltd
mov
inc
lods
adc
add
pop
ss
or
cmp
mov
adc
jge
aad
mov
int
mov
inc
xor
popf
cli
jo
sti
lcall
mov
in
adc
movsl
sub
push
dec
xor
jnp
int
mov
insb
mov
pop
roll
mov
cli
paddusb
aaa
jl
xchg
scas
jne
popa
push
in
jge
mov
pusha
ljmp
jnp
sub
dec
mov
mov
mov
or
dec
sbb
and
sti
int
cld
test
fistpl
mov
movsb
and
add
mov
jge
push
div
push
mul
add
add
repz
cmp
cmp
sti
sub
inc
in
push
push
test
icebp
mov
jbe
les
clc
inc
cmp
enter
je
or
pop
fwait
je
xlat
insl
not
xlat
dec
pop
test
add
hlt
in
xchg
pop
aaa
cmp
jmpw
dec
dec
inc
cli
xchg
mov
cmc
mov
std
jns
pop
fwait
inc
mov
loopne
stos
push
in
sub
jne
mov
idivl
and
cs
gs
orl
push
xor
pushf
outsb
xchg
fnstenv
fldlg2
or
outsl
mov
mov
loope
inc
hlt
pop
les
lock
mov
lods
add
movsl
cli
dec
xor
shrl
fsts
and
aas
enter
mov
xchg
lcall
imul
mov
sahf
popa
pop
adc
insb
ficoms
adc
aaa
pusha
es
xlat
pop
test
loopne
scas
aad
divl
lds
in
mov
xchg
scas
inc
mov
push
outsb
jg
mov
int
fptan
in
or
movsl
push
pop
loope
xor
popa
fwait
mov
fidivl
pop
cmc
jmp
inc
sbb
clc
cmpsb
add
jne
xchg
or
xor
jns
scas
xchg
std
jb
pop
jecxz
test
in
in
mov
out
sbb
dec
in
mov
cmpsb
or
dec
cli
inc
cmpsb
in
push
xor
cmp
aaa
sbb
pop
jp
aad
sbb
push
mov
pop
cmc
call
lods
clc
lret
cmpl
nop
jle
mov
data16
jle
not
mov
hlt
sbb
mov
mov
push
incb
cs
inc
repnz
push
xchg
in
icebp
cmp
shll
in
cmp
popf
test
das
jne
dec
push
pop
mov
pop
mov
inc
mov
in
mov
inc
gs
mov
cmp
and
lahf
mov
hlt
call
sbb
mov
add
int
jnp
stos
inc
add
repz
mov
dec
dec
push
fildll
fldenv
jl
pop
movsb
xchg
push
lahf
xchg
test
cmpsb
jne
imul
pop
out
cmp
test
ror
mov
add
mov
movsb
test
aaa
inc
stc
pushf
jno
dec
fisubrl
adc
mov
mov
sbb
push
mov
inc
repz
lea
lock
pushf
mov
xlat
cmp
push
dec
test
dec
stc
push
ss
fnstcw
mov
cltd
xor
ret
movsb
jmp
pop
int
insb
movsl
daa
cmpsb
cmp
fcompl
xchg
xchg
cmp
loope
mov
das
lea
xchg
mov
or
mov
push
mov
xchg
into
mov
sarb
inc
mov
int3
test
jmp
sub
scas
pop
jecxz
sti
cmp
clc
mov
inc
sarb
xor
sahf
mov
popf
fnstcw
scas
in
push
popa
push
repz
push
xlat
dec
mov
lods
mov
test
addr16
lret
or
mov
mov
test
scas
jge
int3
mov
test
pusha
jnp
push
mov
in
xor
pop
pop
cltd
sub
and
std
int
lahf
stos
in
inc
adcb
cltd
push
dec
sub
cmp
xlat
push
outsb
repnz
rcrb
stos
jb
clc
fwait
div
daa
cld
push
jns
cmpsb
lret
addr16
and
sub
lods
sub
mov
xlat
jnp
xchg
xor
mov
pop
inc
or
sub
aaa
lcall
jno
pop
pop
insb
push
jo
mov
inc
xor
mov
mov
mov
inc
and
dec
jp
pop
jns
jl
push
mov
mov
pop
mov
jge
push
out
pop
mov
das
push
mov
inc
jge
push
fdivs
push
test
sbb
pushf
movsl
dec
cmp
test
in
imul
mov
test
addb
cmc
loopne
subl
cli
pop
jge
movsl
lcall
gs
imull
sbb
ficoms
mov
outsl
lods
pop
add
jg
mov
lods
shll
cmc
sbb
int
out
pusha
mov
mov
cmpsb
dec
loop
dec
pop
mov
rcrl
xor
mov
imul
dec
and
addl
into
dec
cmpsl
stos
sbb
jo
xchg
mov
dec
fstps
mov
pop
jle
jp
push
dec
aad
xchg
mov
leave
addr16
mov
mov
fisttpl
push
pop
inc
add
mov
aam
fldenv
jl
insl
xor
jnp
enter
add
push
call
fldenv
push
hlt
sub
je
mov
jae
sub
dec
cmp
in
push
movsl
mov
fdivl
pop
and
pop
jmp
jo
out
xor
loope
mov
fsts
js
xchg
mov
push
mov
fstps
mov
loopne
xchg
pushf
dec
pop
test
adc
int
mov
mov
or
xchg
adc
jg
dec
andb
push
mov
sbb
jecxz
nop
clc
test
mov
mov
and
mov
lock
lock
xor
sub
mov
pop
ficoms
imul
stc
cmp
push
push
lods
movsl
mov
sarl
mov
cmp
mov
cltd
push
cmp
xchg
repz
pop
xor
sub
addr16
sti
push
jge
out
fisttpl
mov
cmovg
ss
cmpsb
or
cli
das
pop
cs
sbb
add
jg
push
aad
aaa
inc
add
push
dec
cmp
push
push
stc
js
dec
xor
adc
push
and
add
stos
scas
push
mov
mov
cmp
fldlg2
movsl
mov
bound
das
jecxz
inc
scas
push
inc
outsl
jo
push
test
mov
iret
iret
dec
push
ljmp
push
fistpl
sahf
cwtl
or
dec
aaa
arpl
out
sbb
pop
fnstcw
aad
cmp
jp
test
mov
mov
mov
scas
lds
mov
xchg
lods
negl
mov
xchg
sub
js
or
push
jp
or
aaa
and
jnp
fdivr
cmc
lods
stc
sbb
cltd
xor
fwait
add
mov
pop
jmp
ds
pop
out
xor
add
fildll
fsubrl
push
out
xchg
push
or
push
in
mov
mov
dec
out
push
sarl
sbb
loopne
mov
xchg
push
loopw
cmpsb
xchg
mov
mov
and
fstpl
sub
ret
and
stc
cmc
test
inc
enter
xchg
fs
cmp
popf
cmp
push
int3
roll
adc
stos
push
mov
je
inc
jae
test
je
std
push
mov
add
mov
pop
xchg
movsb
test
and
xchg
fs
lods
and
sub
pop
inc
inc
ret
fstpl
xchg
and
fwait
add
adc
sbb
imul
bound
inc
test
push
jl
cmp
pop
cmp
pop
sbbb
jo
nop
adc
sbb
loopne
push
fcomps
and
jmp
bound
lods
xchg
push
nop
inc
in
pop
adcl
lcall
and
jb
cmpsb
dec
mov
sbb
jo
repnz
daa
adc
and
cmp
add
mov
enter
push
dec
in
cmpsl
dec
mov
mov
jg
jg
sub
lods
loopne
dec
loopne
frstor
mov
mov
rolb
clc
es
and
cmp
cmp
shl
push
and
mov
and
cmp
rol
das
dec
repz
dec
sub
test
stos
lret
mov
jp
xor
sahf
mov
mov
aam
sbb
fisubrs
pop
cmp
pop
sahf
cmp
outsl
popa
sub
fsts
jl
stc
inc
adc
test
test
nop
sti
dec
xchg
add
jnp
mov
jp
sbb
fucom
mov
dec
scas
push
scas
push
movsl
xchg
iret
dec
jp
and
dec
lods
sbb
inc
mov
and
test
mov
inc
xor
rcl
pop
sbb
cmp
aad
inc
lock
mov
inc
roll
mov
sbb
imul
adc
lcall
out
xchg
mov
sbb
imul
inc
xor
and
jl
test
mov
scas
mov
insb
outsl
mov
js
push
in
inc
mov
cmp
add
stos
hlt
imul
hlt
fbld
jle
inc
xchg
mov
fldcw
leave
fadd
fdivrs
fistpl
jmp
or
pop
or
mov
sahf
icebp
dec
pop
fidivs
mov
loop
pop
xchg
fucomip
jl
xor
pop
lds
push
testb
push
fdivr
push
push
sbb
xor
out
adcb
test
into
push
jp
scas
add
inc
mov
mov
lods
sti
cmp
test
and
test
rolb
mov
lret
packuswb
clc
push
mov
jp
sub
lods
sbb
in
sub
test
test
and
mov
lea
movsl
imul
es
mov
pop
add
movsl
lock
dec
xchg
or
mov
loopne
mov
int
dec
out
and
cmp
lea
or
jno
lcall
mov
xchg
outsl
imul
loop
mov
dec
cld
sub
daa
test
cmpsl
mov
mov
cmp
call
addb
mov
cmp
loop
das
movsb
les
std
jbe
sub
out
and
pop
cmp
xchg
add
popa
xor
addr16
ficoml
pop
lret
incl
decb
xchg
inc
jp
bound
popf
xchg
mov
add
pop
loop
dec
dec
add
mov
and
xchg
xlat
shrl
pop
outsl
pop
sub
push
dec
dec
jns
jne
push
add
inc
fs
dec
mov
int
push
aad
dec
cs
mov
xor
and
mov
lods
or
iret
call
cmpsb
test
idivl
mov
mov
loope
lea
lods
je
mov
lret
sbb
jae
sub
adc
adc
arpl
adc
frstor
pop
es
lret
push
mov
mov
pop
scas
inc
imul
test
dec
fidivrs
scas
fs
cld
pop
push
add
mov
mov
scas
jle
xorb
mov
icebp
cmp
cmp
push
fistps
jbe
adc
sub
pop
int
insb
stos
pushf
push
adc
or
push
scas
pop
out
pop
int
roll
xor
inc
push
cli
or
xchg
cmp
rol
adc
fiaddl
xchg
fisubrs
mov
dec
push
inc
int
div
pop
mov
aam
cwtl
sbb
out
push
push
add
adc
in
dec
in
lret
push
pop
dec
aam
movsl
aas
or
loope
stc
pop
sub
add
icebp
das
stc
mov
fadd
js
add
loop
inc
sbb
in
pop
in
mov
in
xchg
hlt
outsb
mov
xor
pop
dec
mov
add
mov
add
ficoms
pop
repz
movsl
mov
dec
xchg
xchg
sub
jno
fsubp
sarl
daa
pinsrw
ret
cmp
inc
out
stos
scas
ljmp
ds
jns
add
push
xorl
out
jnp
loope
out
dec
hlt
add
jbe
lock
leave
popf
pop
sbb
sti
xor
cli
imul
lret
cmc
mov
out
adcb
call
aaa
mov
test
gs
icebp
clc
mov
sbb
cmc
outsl
pop
insb
or
adcl
xchg
lods
cli
fwait
or
dec
or
mov
or
out
mov
clc
push
dec
xchg
pop
mov
pop
xchg
js
outsl
loop
sub
inc
sbb
pop
pop
popa
push
push
add
mov
jbe
xor
fnstcw
fmulp
hlt
or
xchg
test
test
iret
jne
inc
cltd
mov
mov
out
sub
test
lcall
dec
mov
fisubs
ret
ror
dec
addr16
and
dec
test
cli
mov
es
mov
lods
and
ss
add
jp
leave
mov
test
fcmovne
dec
sub
cltd
mov
cltd
ret
or
adc
and
cltd
inc
fidivl
xor
mov
jb
xor
sbb
cltd
lock
sbb
jno
aas
scas
testl
test
fwait
stos
cmp
sbb
mov
inc
or
adc
pop
mov
jle
mov
scas
gs
ss
in
std
inc
pop
sahf
sbb
mov
jno
cmpsb
and
imul
push
adc
scas
sti
iret
jge
out
or
push
lock
shl
cmp
pop
das
repz
mov
icebp
cmp
aam
and
pusha
out
pop
cs
xlat
lods
in
idivl
xchg
rcrb
hlt
mov
and
mov
xor
inc
test
and
mov
dec
sbb
cmpb
shr
icebp
xorl
stos
lahf
mov
pop
xchg
adc
dec
inc
lahf
mov
xchg
sbb
add
in
int3
fildl
les
out
sti
cmp
int
pop
jnp
cmpsl
daa
pusha
mov
test
adc
lcall
sbb
sbb
clc
xor
add
xchg
ret
call
fadds
test
mov
push
and
and
nop
xor
jns
std
int3
mov
test
mov
or
aaa
pop
in
fldl2e
jle
dec
out
std
repz
push
test
lcall
stc
xorb
xor
sub
jge
cmp
xchg
sti
inc
pop
pop
jb
out
outsl
or
test
div
les
pop
aas
cli
xchg
cmp
dec
and
sub
int
xorl
in
push
pop
cmp
ret
xlat
adc
or
sbb
repnz
cmpsb
mov
add
jb
inc
add
or
popa
pop
outsb
xchg
jnp
xor
push
jne
jo
cli
dec
lock
push
mov
rcrb
cld
arpl
andl
leave
addr16
and
out
lods
sti
sar
pushf
lea
je
das
sbb
test
push
lods
lods
adc
cmp
ja
jno
push
lods
test
mov
pop
ret
fs
xchg
movsb
mov
insb
push
add
lods
sbb
iret
push
shll
mov
lds
sti
pop
mov
mov
pop
jnp
push
xor
xchg
popf
pop
mov
addr16
fisubrs
push
dec
into
mov
and
cwtl
out
sbb
out
arpl
outsb
or
rsm
jge
jb
sahf
cs
lahf
push
cltd
sbb
xor
push
pop
pop
jp
in
loop
shr
xrelease
popf
test
xor
sub
xchg
mov
clc
jbe
in
mov
mov
xor
mov
scas
xchg
push
popw
jmp
inc
pop
shlb
sbb
xor
je
into
push
iret
ja
imul
cmp
and
or
sub
inc
jns
sub
sahf
in
push
cmp
lods
xlat
test
sub
mov
add
add
mov
jns
pop
gs
add
je
hlt
out
test
imul
dec
adc
into
movsl
repz
out
mov
imul
arpl
stos
add
test
neg
cmp
pushf
sbb
lods
in
jno
ret
cli
mov
lret
sbb
inc
repz
loopne
mov
stos
push
test
inc
test
xor
pushaw
pop
mov
inc
cli
and
push
fidivl
sbb
xor
mov
mov
cli
jb
mov
xlat
pop
push
loop
or
inc
sbb
xchg
and
xor
loop
mov
cmp
sbb
xor
out
xor
add
cmpsl
xchg
shl
repz
cmp
ds
or
and
iret
mov
repnz
push
unpcklps
aam
sbbb
roll
xor
inc
clc
in
xchg
iret
mov
xor
lds
dec
mov
loopne
xor
aad
pop
scas
jecxz
enter
add
jg
adc
adc
fwait
xor
pop
jnp
mov
mov
jp
call
outsb
xchg
add
mov
in
or
xor
pop
or
dec
in
mov
rol
fwait
sbb
add
xor
and
fidivs
into
nop
add
out
xor
dec
scas
mov
sbb
lods
test
adc
mov
and
mov
les
bound
mov
pop
scas
xor
xchg
in
cmp
aam
cmp
lret
movsb
scas
sahf
or
mov
mov
outsb
insb
xchg
lret
mov
iret
cmpl
mov
cmc
enter
addr16
stos
or
scas
push
sub
dec
movsl
mov
fld
jecxz
addb
lods
rol
xchg
cmpb
sbbl
sbb
loop
mov
lret
movsl
sbb
mov
mov
sub
insl
push
cwtl
and
inc
nop
pop
and
cli
movsb
pop
jae
pop
mov
fisttpl
scas
mov
into
pop
fldt
inc
inc
jl
lahf
lret
add
or
pop
mov
or
pop
or
pop
scas
mov
mov
shlb
int
mov
xchg
mov
sub
in
int
jecxz
insb
aaa
insl
jno
and
sbb
ret
lods
cmp
xor
and
cmp
xlat
jmp
fidivrs
fbstp
jle
xchg
mov
mov
fsin
scas
push
mov
adc
xor
dec
in
xor
jns
pop
mov
mov
jb
addr16
mov
cmpsb
mov
cmp
ja
jnp
xchg
dec
add
adc
imul
lods
sbb
sub
add
mov
pop
pop
ss
xorl
sbb
push
mov
cwtl
or
insl
out
push
pop
in
ret
pop
add
js
ja
andb
and
test
mov
mov
popf
push
add
cmp
xchg
or
and
pop
dec
je
mov
xlat
jge
xor
scas
sbb
aam
int
sbb
mov
mov
gs
mov
sti
jo
cmp
lds
scas
mov
scas
adc
xchg
inc
jp
out
out
push
pusha
xchg
leave
in
lods
dec
adc
mov
scas
xlat
sti
mov
fld
mov
dec
mov
sbb
shll
jb
mov
inc
lods
movsl
ja
and
inc
mov
nop
xchg
daa
cmp
jns
lods
inc
push
cmp
mov
fldenv
popa
push
sti
or
inc
mov
sbb
imul
cmc
pop
push
jnp
loope
sbb
pop
push
mov
jge
adc
pop
int
jecxz
cmp
out
inc
pop
rcl
pop
es
and
lret
mov
clc
test
push
pop
jbe
lret
or
sbb
lret
fidivl
cmp
mov
lret
gs
mov
add
popf
subl
pop
sub
jle
lret
lret
mov
daa
inc
push
inc
sub
push
cmp
cs
pushf
adc
xchg
jb
sarl
cmp
mov
scas
add
jnp
mov
int3
mov
dec
fidivrs
sub
std
lods
mov
jecxz
push
add
fmuls
mov
pop
push
jmp
inc
adc
xchg
mul
into
das
aaa
stc
mov
cmp
fsts
cmp
push
adc
inc
mov
enter
push
rcr
mov
repnz
xchg
aad
mov
jnp
loope
mov
xor
lods
sbb
dec
pop
cmpsb
imulb
pop
mov
insb
or
cmp
and
test
sbb
sahf
lahf
fistpll
and
and
divb
push
push
cmp
xchg
aad
out
shlb
out
scas
inc
addr16
mov
adc
push
inc
pop
xchg
mov
push
inc
sbb
cmp
scas
mov
xchg
jge
xchg
mov
and
les
popf
int3
dec
insl
and
movsb
outsb
cmpsb
repz
lods
test
outsb
cmpsb
cwtl
sub
stc
cmc
push
pop
daa
add
movsl
lods
cmp
stos
cld
inc
adcl
xchg
in
sub
shlb
cli
repz
cmp
inc
ret
lods
xor
pushf
int3
mov
movsb
pop
bound
lret
addr16
add
mov
addr16
leave
ljmp
push
scas
ja
popf
or
jnp
vpaddw
lods
lods
mov
lahf
xor
dec
inc
dec
mov
lahf
cltd
sub
cmp
outsl
aad
adc
push
lock
jb
movsb
loope
and
dec
dec
fisubs
leave
fiadds
push
outsb
xchg
pop
outsb
negl
push
xor
ja
xchg
jns
adc
in
pop
sbb
jb
subl
sub
nop
jae
jnp
pop
stc
shll
mov
adc
push
aad
lret
aas
enter
mov
mov
jae
test
ret
cmpsb
adc
jbe
mov
jle
mov
loop
and
testb
lods
aam
ficomps
push
lods
dec
repz
lcall
mov
sub
insl
gs
mov
sbb
imul
scas
mov
cmp
inc
sbb
mov
loopw
pop
sbb
or
and
pop
out
out
scas
test
into
loopne
mov
mov
mov
xchg
js
dec
xor
loope
int3
jle
sbb
int
jmp
mov
mov
jp
fnstcw
sbb
iret
push
add
dec
jae
je
pop
roll
arpl
mov
and
lods
js
cmp
shlb
test
ja
mov
and
sub
mov
in
and
gs
add
and
push
jb
push
std
test
or
adc
rcrl
ret
xlat
inc
je
mov
inc
inc
iret
push
sub
enter
sti
adc
jle
mov
mov
fs
push
sbb
push
push
dec
popl
xchg
mov
cmp
jp
mov
scas
outsl
mov
imul
sbb
mov
push
mov
mov
dec
add
pop
cmc
jo
in
or
arpl
cwtl
aaa
aad
out
scas
aam
push
test
fcomps
add
inc
push
jno
mov
outsl
jmp
icebp
insb
orb
mov
hlt
or
jle
mov
scas
jle
fnstenv
xchg
xor
pop
lock
cs
inc
adc
cmp
pushf
sub
mov
loopne
movsl
jl
insl
imul
cmp
or
adc
xorl
and
dec
repz
adc
push
fcompl
sbb
adc
and
int
sti
sbbl
orb
lcall
xchg
dec
in
jge
in
inc
stos
jae
sbb
out
cmp
mov
insb
addr16
loope
mov
push
test
test
mov
in
out
xor
mov
sti
xchg
and
mov
jp
xabort
loopew
scas
into
fbstp
cmpsl
mov
jl
addr16
sub
mov
jae
aad
lahf
push
fs
out
mov
mov
test
mov
ljmp
xchg
sub
out
pop
clc
jae
mov
lcall
ss
cmp
cmp
adc
test
in
in
adc
inc
push
cmpsb
int
push
sti
iret
xchg
mov
dec
pushf
iret
pop
pop
xchg
mov
pop
or
add
pop
flds
add
lods
jnp,pn
fcompl
push
sbbb
push
dec
sbb
mov
fldt
lock
jbe
in
faddl
cmp
xchg
and
cli
inc
inc
mov
addr16
enter
cmp
es
lods
sub
mov
and
push
xchg
sbbb
movsb
mov
pop
mov
insb
inc
aam
adc
pusha
lret
and
push
adc
insl
jecxz
and
cli
xchg
in
and
fucomi
dec
sbbb
push
fs
std
mov
fdivl
pusha
rcrb
inc
movsb
mov
fldenv
adc
dec
fildll
pop
aad
xchg
add
pushf
lcall
fdivrl
cmp
push
dec
repz
movl
xlat
inc
sbb
xchg
add
pop
push
imul
push
jae
dec
sti
ljmp
push
sarl
jge
mov
mov
out
jmp
ret
xlat
pop
pop
scas
xlat
jb
test
daa
scas
rclb
dec
jg
dec
and
imul
out
leave
push
cmpsb
lret
or
push
sbb
sbb
cmp
pop
mov
dec
cwtl
repnz
dec
movsb
mov
cmp
leave
fldenv
mov
sbb
dec
popa
clc
scas
push
fimuls
mov
and
fldenv
imul
stos
push
pop
cltd
xor
sbb
sbb
nopl
and
jnp
out
fld
stos
xchg
decb
and
ljmp
sbb
and
ds
dec
or
adc
sub
jns
divl
xchg
lret
fnstcw
pop
cli
fwait
xor
mov
xchg
sub
xchg
pop
cltd
xor
mov
xor
cmp
fstps
adc
pop
lret
jg
jmp
mov
xchg
fsubr
jbe
std
sub
cmp
and
dec
sub
inc
mov
xchg
test
flds
repz
push
stos
or
int3
dec
negb
fidivl
sbb
jmp
pop
lds
push
sub
adc
mov
cmp
sbb
mov
sbb
hlt
test
int3
jl
lds
rcr
jmp
mov
mov
push
test
push
dec
in
push
ret
rclb
stc
and
sub
xchg
lods
out
loop
in
xchg
pop
arpl
inc
inc
jnp
movsb
jb
fnstenv
fisubl
add
lahf
push
pushf
pop
pop
dec
dec
fidivrs
push
hlt
repz
ljmp
pop
sahf
cwtl
shlb
ret
scas
cmpsl
push
arpl
ret
mov
mov
xchg
xchg
gs
aad
dec
out
std
adc
fcos
sahf
aam
mov
mov
pop
fldcw
inc
std
add
dec
iret
push
jmp
jae
gs
fimuls
sub
aas
dec
push
rorl
repz
lods
fcomps
das
int
jp
jge
aad
aas
inc
movsl
cmc
xchg
test
xchg
js
outsb
xchg
lods
loopne
fsts
leave
mov
jno
push
lret
mov
out
aam
xchg
adc
jno
xor
inc
cli
popf
inc
mov
mov
pop
dec
data16
jmp
in
jae
in
fimuls
test
jnp
mov
jp
fsts
es
and
push
push
jb
or
sub
imul
push
lret
jmp
insb
fdecstp
inc
cmp
gs
dec
sub
dec
sbb
stos
jg
repnz
mov
fdivrl
stos
sub
or
dec
shrl
fdivrl
in
mov
gs
jle
pop
pop
lods
test
adc
adc
or
add
push
dec
cmp
popa
mov
push
cli
test
out
cld
and
es
lds
cmp
mov
dec
pusha
mov
mov
test
shll
les
mov
loopne
push
mov
mov
or
leave
stos
pmaxub
lahf
loope
decb
inc
mov
lahf
lods
icebp
or
pop
push
sub
lds
lds
fmull
mov
or
jae
ds
pop
outsb
add
inc
jecxz
fwait
pop
aaa
inc
es
add
sahf
mov
mov
movsb
and
bound
jl
scas
xor
sub
mov
pop
in
xchg
xchg
mov
adc
jbe,pn
mov
jnp
sbb
test
pushf
jmp
dec
iret
data16
jl
mov
nop
nop
fs
out
mov
pop
gs
add
cwtl
ficoms
ret
aad
cmp
pop
mov
mov
and
mov
mul
push
mov
sbb
mov
cmc
xchg
rcl
pushf
test
mov
pop
aaa
rcll
nop
and
or
cmp
cmp
mov
jge
not
xchg
lea
xor
cmp
mov
aad
mov
xchg
subb
imulb
xor
mov
movb
xchg
cmpb
and
push
mov
and
shl
sbb
and
pop
adc
clc
mov
scas
jnp
mov
dec
push
xchg
mov
ljmp
les
xchg
mov
xchg
das
in
addb
xchg
cmc
das
jmp
call
xchg
push
push
stc
xor
adc
movsl
clc
sbb
orb
mov
nop
scas
mov
sbb
mov
mov
jp
outsb
mov
test
and
push
movsb
popf
das
adc
int
or
mov
adc
or
push
cwtl
in
adc
pop
jp
out
lods
ret
mov
add
cltd
test
imull
into
xor
fdivrs
lahf
test
jno
stos
and
sbb
dec
lcall
sarl
add
fwait
dec
cmp
fnstenv
inc
out
subl
jb
jmp
push
or
jg
xchg
inc
in
leave
out
loop
mov
add
bound
sbb
pop
daa
mov
add
pushf
push
loope
inc
test
movsb
sbb
mov
in
arpl
cmp
sub
scas
push
loopne
push
jne
out
mov
cmp
out
cmp
loopne
into
out
loop
sbb
cmp
adc
mov
fiadds
fsubl
sbb
mov
adc
sub
loopne
movsb
pop
ljmp
cmpl
int
sbb
andb
shrb
call
mov
pop
dec
fsubl
push
lea
into
mov
mov
jnp
loop
hlt
lret
movsb
in
mov
pop
hlt
sbb
xchg
out
adc
xlat
in
ror
aad
pushw
cmp
inc
cmp
ss
rorb
jge
int
xchg
in
ds
jl
inc
or
popf
mov
push
lahf
cmp
test
mov
mov
sti
jns
jb
pushw
or
test
adc
fnstcw
mov
mov
mov
int3
fprem
popa
sbb
cmp
imul
cld
pushf
outsl
lcall
sbb
pop
adc
fsubs
cs
fnsave
pop
mov
icebp
jmp
fwait
add
jle
fsts
mov
jl
arpl
jle
sti
leave
xor
mov
das
push
ret
jns
subb
je
cmp
popf
test
mov
cmp
test
movsl
jnp
dec
cmp
das
mov
push
repnz
incb
mov
adc
out
push
inc
leave
adc
mov
cwtl
fsts
cli
out
mov
mov
nop
lea
pop
mov
adc
bound
push
inc
jle
addr16
add
icebp
xor
or
xchg
pushf
xchg
inc
mov
adc
cs
aad
lret
lds
call
cltd
push
jle
mov
mov
or
mov
cmpl
xor
sbb
pop
sbb
mov
xor
jle
sbb
fimull
hlt
orb
fisubrl
mov
arpl
push
adc
push
cmp
out
fcomp
xchg
mov
xor
fnstsw
mov
test
jle
enter
and
pop
or
scas
mov
ja
pop
aam
add
or
popa
or
ficompl
adc
frstpm(287
mov
shrl
in
sbb
xor
pushf
or
lods
in
fldcw
pop
out
cmp
and
cld
pop
clc
in
xor
out
movsb
movsl
frstor
sbb
push
js
xlat
or
cli
imul
mov
inc
dec
mov
mov
inc
and
or
sahf
stc
jge
xchg
mov
inc
jmp
pop
test
pusha
sahf
jo
std
test
repnz
jmp
ja
sbb
dec
dec
dec
xchg
loope
gs
or
out
divl
movsl
es
xor
mov
in
subb
sbb
push
inc
mov
out
inc
adc
mov
in
mov
std
icebp
andl
jmp
in
sub
mov
test
and
mov
rolb
sahf
jp
mov
lahf
outsl
jne
mov
mov
out
push
fldenv
pop
in
sub
repz
daa
gs
inc
lahf
lds
test
fcomps
or
cmp
pop
scas
outsb
pop
rcll
jae
xchg
adc
push
pop
sbb
mov
inc
stos
scas
sti
sbb
mov
cmpsb
outsb
adcl
lret
popf
xchg
adc
repz
lods
mov
mov
movsl
sub
sahf
in
int3
incl
fdivrp
mov
xchg
leave
test
mov
dec
inc
xchg
stc
jae
mov
jmp
pop
aas
js
push
lea
int3
fidivrs
iret
ss
inc
xorl
loope
sbb
std
shll
movsb
xchg
sub
gs
mov
mov
js
jnp
out
push
mov
lea
out
cld
mov
fcoml
adc
cmc
jno
testl
leave
jge
jl
or
mov
mov
int
mov
in
popf
in
cmp
int
orb
in
lea
pusha
sub
bound
mov
scas
scas
popl
flds
ja
in
in
lds
call
addr16
sbb
aaa
outsl
cmp
leave
popf
xchg
popl
sbb
mov
xchg
cmp
js
pop
cmpl
mov
lods
jge
dec
cli
cs
lds
xchg
add
fcomi
aaa
fisubrs
scas
add
lcall
gs
mov
imul
xchg
dec
pop
fs
data16
fisubl
and
clc
push
pop
inc
xor
adc
xchg
or
mov
or
push
popf
into
cli
jle
fsubrs
les
add
adc
mov
or
sahf
loope
int
pushl
test
mov
test
pop
fsubrl
lcall
mov
test
in
mov
mov
jp
mov
and
push
cmp
cmp
js
rorb
test
mov
add
inc
xchg
push
rclb
fcmovnbe
mov
stc
sub
int
in
fmull
inc
incb
sub
or
test
mov
push
jbe
mov
pop
adc
and
mov
sbb
jae
in
adc
xor
or
xor
insb
cmp
outsl
adc
pushf
or
add
adc
push
imul
imul
xor
addl
out
int
push
add
push
jnp
out
test
jmp
es
jae
out
cwtl
cmc
cmc
imul
jge
jno
out
mov
pop
jns
test
int3
inc
push
xchg
into
es
out
sbb
in
fiadds
repz
mov
hlt
push
les
and
cwtl
hlt
fwait
jmp
pop
and
dec
sti
lods
in
lret
dec
daa
sbb
sbb
fmuls
mov
mov
pop
imul
aad
data16
out
out
out
mov
ljmp
stos
jp
shll
les
or
mov
jl
xchg
lret
inc
fwait
mov
fmul
push
jbe
in
out
push
flds
adc
and
mov
mov
sub
adc
flds
sarb
dec
sti
arpl
std
cmpsl
push
ret
sbb
sub
sbb
jne
subb
int3
movsl
pop
mov
xchg
jmp
mov
movsl
jbe
out
cltd
movsb
sub
out
sahf
jl
lea
add
cli
inc
adc
or
cld
push
or
and
inc
adc
cmpl
and
es
outsl
gs
jne
xchg
sub
sbb
aad
popf
inc
push
icebp
hlt
aad
ss
add
sub
movsl
int3
insl
arpl
lcall
fcoml
test
inc
mov
inc
mov
pop
scas
add
pop
pop
adc
xor
shrl
mov
xchg
xchg
ficompl
nop
lcall
scas
outsl
push
mov
mov
cmpsl
jle
fsubrl
in
icebp
sti
std
or
mov
xchg
lret
aam
and
pop
mov
call
movsl
sbb
mov
outsb
sub
sbb
pop
xchg
add
pop
mov
outsl
mov
mov
xchg
cwtl
jle
test
std
or
popa
xor
sarl
test
inc
mov
pop
push
repz
mov
xchg
jnp
das
xchg
sbb
in
mov
mov
or
mov
cmovg
xchg
and
dec
xchg
lcall
jle
test
cmp
fxch
mov
outsb
mov
dec
push
lret
mov
dec
cmp
les
fdivl
call
call
cmp
inc
test
jns
rol
push
dec
je
enter
mov
in
mov
daa
test
das
pop
pop
pop
dec
ds
pusha
cmpb
jae
rcll
mov
arpl
in
inc
iret
mov
mov
lahf
test
mov
cmp
in
push
mov
lods
cmc
stos
push
pop
aaa
xchg
cltd
mov
aam
adc
in
clc
or
mov
fwait
test
fprem
aam
pop
mov
lea
mov
jl
push
push
aaa
xor
dec
daa
jge
dec
cli
jp
mov
rcrl
test
sti
or
test
movsl
lret
push
out
push
icebp
jne
pop
mov
cmc
and
xlat
test
sbbl
test
scas
mov
dec
mov
xchg
scas
jp
fstps
xor
cmc
movsb
cmp
filds
in
mov
sub
pop
int3
cmp
popf
and
gs
nop
repnz
inc
mov
inc
std
and
int3
mov
rcl
pop
mov
das
pushf
jne
xchg
dec
les
sub
xchg
repnz
xor
dec
cmp
std
popa
test
sbb
addr16
xchg
pop
in
xchg
xchg
lahf
jp
gs
cltd
aad
fldcw
fld
mov
sbb
int3
xchg
test
aad
or
mov
xor
fcoms
lcall
adc
add
ret
jae
outsl
inc
mov
jp
sbb
mov
xor
or
push
test
into
test
add
inc
xlat
or
leave
fsubr
mov
fildl
scas
out
stos
bound
add
pop
push
and
dec
es
stc
mov
adc
add
cmpsb
int3
pop
mov
or
mov
pop
in
clc
cmp
pop
mov
mov
sbb
jb
lock
dec
fs
aam
fs
test
push
sub
repnz
add
incb
mov
xchg
arpl
fbstp
pop
daa
out
mov
sbb
inc
xor
imul
pushf
push
push
mov
push
movsl
int3
pop
add
xchg
jne
push
or
dec
jae
incl
das
mov
gs
sbb
arpl
negb
pmulhw
std
leave
cli
inc
pop
push
aam
mov
dec
pop
push
fiaddl
into
sbbb
cmp
inc
inc
js
and
fiadds
lcall
lahf
xchg
fbld
inc
idiv
sti
clc
rorb
dec
je
mov
lods
int
add
mov
jnp
enter
fwait
int
lods
out
dec
arpl
mov
aaa
out
mov
lods
stos
xchg
stos
mov
adc
adc
imul
mov
add
mov
mov
sbb
jnp
loop
add
add
hlt
fisttps
ss
loope
ret
adc
aad
mov
xchg
xchg
cmp
stos
pop
sub
ds
pop
in
cmpsb
cmc
movsl
mov
into
xorl
cmp
mov
mov
cmp
mov
and
ret
sub
cwtl
out
sbb
sbb
push
jp
fisubs
shl
fsub
xor
lds
inc
pop
pop
scas
jmp
lcall
std
adc
jp
fwait
in
mov
and
fsin
pop
nop
stos
addb
mov
sbb
movsb
and
mov
aam
cmp
push
test
fstps
jbe
and
lods
mov
test
in
mov
arpl
fwait
or
push
pusha
xchg
pop
xor
imul
gs
xchg
mov
push
aad
cmp
sbb
inc
inc
test
lret
jo
fsts
jp
xor
int
ss
or
sub
sarl
sub
mov
push
addb
incb
adc
cmc
es
fbld
jnp
test
inc
add
in
sub
cmp
cmp
in
mov
int
jp
fcmovbe
pop
push
int
sub
aam
jb
adc
loopne
fisubs
out
sbb
adc
cmp
clc
jnp
fdecstp
sbb
push
sahf
mov
inc
adc
ja
dec
fwait
mov
mov
jne
xchg
jno
test
xchg
cmp
test
sub
cmp
rorl
sbb
aam
push
and
adc
cmc
test
jecxz
mov
popf
pop
cwtl
enter
lahf
lds
leave
scas
xchg
xchg
or
mov
push
cltd
push
push
popf
mov
jle
jge
sbb
inc
sti
lret
out
mov
mov
push
movsl
mov
movsl
outsb
pusha
call
aad
int
rcll
dec
jbe
cmpsb
cs
test
cmp
scas
repz
and
in
int
leave
inc
cmpsl
jge
xchg
sahf
std
xchg
ficomps
xchg
mov
mov
test
mov
addr16
xor
cmp
push
xor
testl
xor
add
and
out
mov
mov
sub
xchg
sbb
pop
cmp
pop
out
add
test
or
loopne
cmovge
sub
out
push
cltd
sub
fsubl
test
mov
jnp
les
add
das
dec
scas
sarl
fxch
jl
inc
mov
or
lahf
fldenv
test
sub
push
repnz
pop
in
cmpsb
pop
cmp
cli
ffree
and
cmpsb
mov
ret
xchg
xor
xor
xor
pop
xchg
pop
imul
addr16
sub
es
and
xchg
push
iret
mov
fsts
decb
insb
outsb
data16
inc
lea
mov
cmp
bound
mov
add
xchg
mov
icebp
mov
pop
pop
adc
movsb
xlat
fldcw
aaa
and
or
movsb
aas
js
out
call
mov
out
pop
xchg
ss
xchg
cmp
lcall
addr16
test
or
jno
test
add
lods
sbb
gs
xor
jmp
ftst
sbb
test
clc
fldenv
xchg
sbb
shll
loopne
jae
mov
inc
xlat
incb
mov
aad
cmp
cmpsl
mov
xchg
xchg
in
cltd
push
popa
push
or
adc
dec
mov
iret
lcall
mov
aas
or
addb
mov
fwait
cs
cmp
aad
push
xchg
mov
cmpsb
enter
int
cmc
rcrl
lea
fwait
push
mov
pop
jl
inc
pop
loopne
sti
pusha
pop
loopne
setb
stc
insl
add
test
push
xor
xchg
addr16
mov
aam
scas
cmc
fadd
add
inc
lock
pushf
out
xchg
stos
adc
sub
and
push
idivb
mov
scas
int3
lods
jmp
adc
clc
xchg
adc
xor
push
into
daa
dec
pop
nop
mov
cld
cmpsl
fcomp
int
mov
xchg
push
and
push
into
sub
arpl
cmpsl
mov
fildl
sub
jg
mov
and
add
push
fdivr
jae
jmp
pop
outsb
push
cmp
popf
enter
mov
sub
lods
cmc
repz
add
mov
add
dec
add
and
jb
pop
or
in
pop
repz
push
adc
push
std
test
cmp
pop
cmp
loop
enter
ss
sbb
jmp
imul
xchg
sti
mov
mov
pop
pop
jp
xchg
ret
xlat
mov
cmp
sbb
pop
sbb
repnz
xor
push
xchg
pop
pop
jge
std
and
loope
lcall
fmuls
adc
lcall
rolb
mov
xor
push
mov
xor
imul
mov
add
jne
data16
ljmp
in
arpl
adcl
int3
test
das
scas
out
lods
inc
mov
std
mov
pushf
cmpsb
or
int
cltd
xor
jae
addr16
mov
xor
xchg
jnp
cmp
std
popa
stc
loop
mov
imul
cltd
mov
mov
jg
js
loope
shl
dec
daa
and
lods
scas
xchg
into
outsl
int3
test
or
or
popf
and
xchg
cmpsb
push
jnp
cmp
int
movsb
xor
jo
scas
push
out
lret
ds
jns
lods
aas
fisttpll
lods
xchg
inc
xchg
sub
inc
mov
jp
addb
mov
dec
jecxz
jg
inc
pusha
jge
outsb
and
and
fistps
cli
jnp
pop
stos
fwait
ljmp
fcompp
cs
bound
xor
pop
sbb
cmpsb
adc
push
lret
mov
or
jae
jno
mov
lahf
inc
mov
xchg
ds
popf
sbb
mov
popf
mov
and
das
mov
cltd
in
add
inc
idivl
pop
je
jmp
cmc
sbb
test
fstps
pop
cli
das
adc
sarl
test
mov
faddp
mov
movl
inc
nop
xchg
jnp
mov
cmp
stc
adc
movsb
xchg
and
fcmovnb
pop
cmpsl
dec
fwait
xorb
jne
sbb
pop
std
insl
push
cmp
xor
loop
and
arpl
lods
fisttps
aam
push
popa
push
and
in
inc
mov
sub
xchg
and
addb
dec
sti
jmp
lret
lods
and
iret
data16
lods
out
xchg
in
sbb
or
pop
neg
add
xchg
movswl
lock
subb
and
or
mov
cmp
inc
imull
cmp
out
int
js
rcrl
outsl
fisubs
lcall
sbb
lods
push
jge
jbe
ja
inc
pop
add
xor
and
mov
and
and
aam
test
or
pushf
mov
pop
and
or
xchg
sbb
fidivrs
xor
popl
scas
fcmovb
insb
and
pop
mov
or
jg
repz
mov
push
xor
jle
cmpl
jae
or
xchg
loope
inc
mov
sub
cmp
xor
int3
dec
inc
sbb
push
lods
out
xchg
cmove
enter
in
std
or
jge
mov
out
int3
movsl
lcall
fidivs
push
xchg
cmpsb
scas
dec
loop
cmp
xor
pushf
mov
int
mul
mov
js
popl
xor
pop
pop
adc
add
sub
mov
or
int3
shrl
lods
pop
das
gs
inc
mov
jmp
cwtl
cltd
push
fstps
scas
dec
dec
mov
add
loop
pop
xchg
mov
and
rcll
jns
mov
add
cld
negl
jecxz
fldz
push
cmp
inc
aam
jle
jnp
adc
int
mov
out
hlt
repz
or
fwait
lret
test
pop
or
pop
push
xchg
push
cmp
int3
dec
sub
fbld
push
mov
enter
imul
mov
or
adc
aad
dec
call
lret
push
xchg
mov
sbb
mov
outsl
out
pop
aam
push
pushf
jae
lcall
dec
mov
stc
mov
sub
lahf
je
dec
adc
rcpps
mov
icebp
mov
xchg
lar
fdecstp
cltd
cmpsl
cmp
sub
xchg
cmp
push
mov
dec
fld
and
pop
xor
rorl
dec
push
mov
jg
push
cmp
dec
adc
pop
fwait
fs
inc
jns
repz
test
mov
xchg
sbb
xchg
xchg
dec
in
sub
adc
scas
mov
jecxz
mov
cmp
xorb
clc
jle
push
mov
sbb
mov
jnp
cmp
xchg
js
mov
pop
fdivl
loopne
adc
test
fists
lods
gs
test
loope
sbb
xchg
xchg
jg
jl
in
inc
sbb
movsb
mov
push
mov
push
iret
mov
and
add
pop
sbb
dec
push
in
fimull
insl
mov
inc
dec
xchg
mov
hlt
adc
add
mov
inc
jns
dec
inc
imul
mov
lods
and
inc
push
pop
mov
xlat
iret
js
xor
stc
mov
fcomip
jge
jo
fistpll
gs
cli
mov
add
movsb
popf
push
jns
aad
es
inc
sahf
mov
xchg
dec
fcmovu
sbb
aad
pop
pop
jg
test
ds
stos
mov
push
imul
mov
xchg
fs
loop
test
aad
pop
data16
sub
push
jl
push
mov
cmp
fs
mov
inc
ret
fldpi
push
stc
pop
mov
decb
aam
xor
mov
pop
jmp
cmp
loope
pop
push
dec
cmpsb
add
push
ljmp
ficoml
mov
in
jb
das
out
push
fsubl
inc
test
push
sbb
pop
sub
movsb
mov
js
cmpb
cmpsl
sbb
adc
movsl
lods
mov
cli
fidivrl
mov
sbb
lret
mov
xchg
adc
aas
mov
sub
pop
dec
popf
cmp
mov
and
push
mov
xor
inc
and
fcmovbe
int3
inc
push
adc
in
push
lods
xchg
rcr
out
push
fildll
clc
enter
xchg
and
test
push
pop
in
call
adc
mov
jp
jbe
hlt
lock
test
fcmovbe
out
adc
add
lret
push
sbb
icebp
xor
cmp
orl
adc
mov
insb
clc
nop
in
mov
loop
jmp
mov
stos
leave
mov
add
scas
mov
mov
loopne
ja
jne
mov
imul
arpl
test
daa
pop
fstps
push
outsb
and
pop
daa
jl
dec
sarb
lea
mov
clc
inc
icebp
sub
into
mov
xchg
jge
ja
xchg
lcall
xchg
add
movsb
fldl2t
std
sbb
out
sbb
jnp
out
inc
add
into
mov
dec
and
push
jp
push
fildl
xor
inc
popa
jno
pop
adc
jno
lahf
xchg
mov
dec
jp
test
in
fbld
in
and
push
loopne
cmp
addr16
xchg
loop
pop
jb
jge
jge
pop
push
int3
hlt
mov
lods
xchg
scas
bound
dec
lret
ds
in
scas
jo
cmp
mov
andb
scas
cltd
cli
mov
lock
inc
lret
cmp
mov
sbb
mov
inc
adc
leave
sub
and
jle
fs
adc
and
mov
xor
fsubrl
sbb
mov
cmp
xchg
mov
mov
and
pop
lods
sub
inc
jle
sub
stc
dec
pminsw
test
dec
lds
ljmp
fsub
xchg
pushf
in
lahf
push
mulb
jge
sub
int3
sahf
mov
movsb
and
das
jno
dec
fsubrl
sub
in
ret
int
shll
loop
imul
sub
jns
inc
data16
add
xor
arpl
lret
iret
add
movsl
xchg
lods
xchg
cmp
adc
cmpsb
push
hlt
sbb
push
jle
xchg
cmp
es
xchg
lea
pop
ja
in
jge
sti
sarl
flds
add
lds
sbb
pop
sbb
lsl
icebp
mov
aad
es
out
test
jle
cmpb
push
push
mov
movb
enter
add
sbb
iret
and
dec
test
out
jecxz
loopne
test
mov
test
sbb
out
adc
push
das
pusha
cs
fldln2
inc
ret
inc
stc
push
add
pop
jae
test
into
cmpsb
mov
add
mov
push
xlat
fistpll
cld
pop
lock
mov
xchg
adcl
test
mov
imul
xlat
mov
fmul
push
repz
fs
mov
cmp
jp
sbb
cmp
stc
ror
int3
dec
sbb
sti
scas
cltd
pop
shl
jae
lahf
bound
sub
test
jb
push
stc
push
jns
sbb
cld
icebp
ja
ds
addr16
addr16
sub
mov
push
mov
scas
and
pop
jnp
push
sarl
push
jno
mov
jnp
out
mov
mov
pop
jb
mov
fld1
inc
push
jae
adc
lcall
in
inc
lods
mov
cmc
ret
imul
ljmp
sbb
mov
aas
cmpsl
adc
rcl
xlat
insl
pop
test
ficoms
xchg
loopne
test
lret
jo
inc
mov
mov
push
lahf
mov
sbb
xchg
cli
or
adc
shrl
lret
loope
sub
mov
mov
cmp
pop
jns
jns
orl
fstps
mov
fsubrl
cmp
insl
xchg
imul
fdiv
repz
aam
jp
inc
dec
mov
xor
stos
inc
sahf
jo
rorl
inc
sbb
aad
ljmp
in
mov
inc
or
nop
ret
inc
enter
jae
dec
cmp
fisttpl
jmp
fists
inc
inc
daa
push
lods
dec
and
pusha
push
out
pop
push
sbb
cmp
and
fsubrl
mov
inc
pop
insb
adc
push
repz
inc
push
xchg
lcall
add
test
enter
push
xor
adcl
ljmp
fwait
jmp
cld
mov
cmp
mov
mov
sbb
and
imul
cmp
sbbb
test
test
orl
in
sbb
xchg
xchg
mov
mov
sbb
fnstcw
push
push
dec
mov
jle
inc
lock
sbb
dec
and
mov
sti
int3
mov
mov
dec
sbb
fldenv
or
xlat
inc
test
and
dec
push
xor
sbb
shlb
out
loop
enterw
inc
mov
mov
xor
mov
dec
dec
in
fmull
mov
mov
lret
test
rorl
fnstsw
jae
adc
adc
cmpsb
xchg
sbb
outsl
jmp
inc
lods
sbb
out
dec
jnp
add
das
mov
inc
in
loope
or
pop
std
jmp
xor
jns
jg
std
fmulp
cmp
lahf
test
arpl
jns
push
imul
jp
mov
pop
adc
jl
adc
ss
out
les
repnz
dec
je
gs
adc
std
push
inc
sbb
pop
mov
rcr
lcall
dec
aaa
jg
fcoml
xor
fldenv
std
int3
fldl
jmp
jmp
mov
subl
push
mov
sub
iret
pop
push
mov
call
pop
mov
ret
mov
test
xor
inc
aad
out
adc
lret
popf
push
jmp
mov
pop
mov
stc
or
cli
faddp
mov
push
xor
and
pop
mov
jbe
mov
dec
pop
dec
lea
iret
roll
ret
mov
or
shl
sbb
scas
lods
mov
pop
bnd
loop
xchg
bound
cmp
rcrl
pop
pop
in
lret
stc
lock
ss
push
gs
inc
xchg
insb
pop
push
mov
pop
sbb
pop
push
jbe
fstpt
xor
cli
js
mov
cltd
xor
xchg
enter
arpl
mov
push
fisubs
mov
loop
cmpsb
xchg
or
clc
cmp
cmc
push
cmp
mov
shl
out
pop
mov
inc
or
scas
jbe
dec
and
jmp
jl
enter
pop
dec
int
and
aam
mov
add
hlt
lret
add
jb
mov
or
jnp
jmp
test
dec
adc
outsb
lret
in
test
lea
test
jns
cwtl
jae
icebp
sbb
sbb
test
fnstcw
and
lods
int
outsb
pop
and
inc
rcll
sub
ffreep
xchg
xor
push
stos
cmp
dec
xchg
and
das
mov
jg
shrb
or
xor
int
mov
mov
pop
dec
outsb
pushw
mov
fsts
pop
push
sahf
mov
scas
leave
or
jns
push
in
and
testl
loopne
pop
cmp
jns
xchg
popf
aad
push
shlb
popa
jbe
movsb
jecxz
and
sbb
pop
stc
in
cltd
cmpb
test
and
jmp
fdivl
cmp
fsubrs
jp
adc
pop
push
mov
or
lahf
and
andl
mov
jmp
sbb
movsl
pop
arpl
into
arpl
push
add
in
mov
pop
xlat
imul
sub
lock
mov
and
adc
inc
ja
shrb
cmp
mov
mov
scas
cmpsl
fsqrt
jns
fidivl
jne
adc
pop
in
sbb
lea
das
fstp
imul
test
test
and
std
std
fdivs
dec
jbe
int
mov
and
lret
and
jmp
in
lcall
jb
xchg
jle
push
jg
jmp
mov
dec
inc
xlat
push
pop
mov
mov
xchg
push
leave
shll
roll
loop
sub
cmp
mov
sub
inc
mov
cltd
test
push
cmp
popa
mov
mov
sub
sbb
fsubl
inc
out
imul
mov
sbb
mov
cs
rcrl
outsb
fsin
sub
sti
loop
adc
in
sub
sbb
int3
pop
arpl
mov
loop
out
punpckhdq
xchg
pushf
xchg
inc
out
lock
push
pop
xor
fnstenv
push
sti
mov
int3
movsl
jge
inc
push
mov
mov
jno
movsl
push
test
aad
les
xor
jae
mov
daa
int3
and
icebp
loop
pop
ljmp
arpl
mov
lods
sahf
call
das
lock
sbb
xchg
cmp
jbe
push
push
in
std
jae
dec
decb
shr
push
cli
xor
lds
lds
inc
add
out
adcb
jmp
jl
aad
and
pop
mov
pusha
sub
lock
jbe
push
cmp
mov
outsb
pop
push
pop
sbb
fldcw
lods
loope
sub
mov
sbb
fdivrs
imul
adc
push
cld
imul
jmp
dec
add
int
dec
cvttps2pi
test
test
scas
fstl
js
and
lods
scas
out
aaa
cmp
mov
fstpl
adc
nop
into
sahf
inc
test
mov
fadd
mov
and
or
mov
lock
dec
ret
inc
adc
or
pop
mov
cmp
test
es
and
xchg
xchg
test
fs
scas
push
and
fisttpl
adc
test
pop
orb
mov
gs
sub
sbb
and
or
mov
test
inc
xor
lods
sahf
hlt
imull
jp
adc
sbb
scas
or
cld
das
test
test
shrl
divl
mov
mov
jmp
addr16
mov
addr16
add
rclb
sbb
fldt
add
leave
pop
jbe
aad
lahf
dec
ret
out
movsb
ss
add
popf
sub
adc
mov
fistpll
mov
mov
popa
inc
pop
imul
xchg
out
iret
jmp
sub
push
lcall
das
out
mov
in
mov
clc
inc
dec
lcall
inc
and
std
push
outsb
sbb
xchg
repz
jl
adc
xor
scas
cmp
scas
inc
mov
cwtl
mov
xor
scas
sti
notl
mov
dec
out
mov
movsl
pop
cmc
cmpsl
inc
mov
or
negb
sub
sub
jnp
fmull
push
repz
mov
aaa
loope
lahf
lods
bnd
js
arpl
xor
int3
mov
push
mov
mov
neg
mov
insl
pop
mov
repz
lcall
inc
ret
iret
mov
inc
mov
in
stc
lret
mov
in
and
jnp
sbb
jmp
out
cmp
adc
xchg
je
cmp
adc
and
aas
addr16
movsl
jne
leave
jp
cmpsl
bound
mov
cwtl
int
popf
rcrb
sbb
sub
std
xchg
les
jp
push
mov
jns
dec
mov
popf
test
adc
test
cmp
mov
lahf
lock
in
mov
subb
andb
pop
ficompl
xor
inc
add
adc
nop
sbb
mov
clc
and
dec
dec
ss
fsts
scas
lcall
sub
movsb
aad
fsincos
jns
outsb
mov
call
xchg
mov
insb
push
mov
cld
jno
or
push
fbstp
mov
pop
jmp
sub
cltd
and
in
cmp
jnp
cmc
js
dec
leave
inc
roll
sahf
push
push
mov
std
icebp
clc
cwtl
xchg
in
mov
dec
mov
jmp
popf
mov
inc
insb
mov
gs
sbb
test
pop
mov
jmp
mov
repz
inc
call
clc
mov
push
imul
lods
add
and
popw
and
cld
pop
scas
cmp
js
lret
xchg
inc
push
popa
shlb
gs
sbb
sti
pop
fs
dec
divb
sub
gs
pop
call
mov
push
or
jo
into
jle
jnp
lods
shll
adc
jecxz
loopne
mov
mov
repnz
arpl
jmp
push
mov
fldt
popa
das
pop
add
popf
jmp
cmpsl
ret
xor
pop
sub
stc
and
fldenv
and
iret
scas
fmulp
cmp
fldcw
test
cmp
in
std
test
push
addr16
fisubs
js
stos
outsb
sbb
jno
cs
mov
push
xor
xchg
xchg
mov
pushf
shll
fnstcw
mulb
lds
push
jne
in
daa
sub
push
xlat
std
lds
inc
cmp
xchg
dec
fmull
push
xlat
dec
fs
mov
sub
scas
data16
or
inc
mov
pop
clc
sub
adc
cld
jb
bound
out
push
sub
add
push
xchg
xchg
xchg
int
mov
test
cmp
pop
jge
cmpsb
aad
lret
in
in
xchg
pusha
ds
ss
cmp
mov
out
pop
scas
jg
aad
add
cmp
mov
std
into
fstpt
loop
fiadds
clc
adc
push
out
sub
sbb
mov
xchg
mov
jecxz
pop
push
int
cmpsl
dec
das
insb
dec
mov
push
mov
jno
mov
data16
sbb
in
push
inc
test
inc
jg
mov
mov
mov
xor
push
mov
aam
clc
scas
sbb
push
cmp
or
lods
mov
xor
mov
in
mov
filds
mov
mov
fldenv
jmp
xchg
mov
xchg
cwtl
adc
ss
mov
and
outsb
or
xchg
insl
cmpsl
push
mov
lret
cmp
add
icebp
dec
push
hlt
std
xchg
inc
jge
sub
sti
push
cmpsl
popf
aad
flds
mov
fmulp
sbb
xchg
in
ret
push
test
inc
push
jbe
mov
dec
sbb
jns
xchg
pop
int
mov
inc
mov
in
lods
fprem
xor
push
pop
sti
stos
mov
jmp
imul
lret
push
push
xor
ljmp
jns
cmp
ss
sbb
outsb
aad
ljmp
jg
hlt
mov
test
jnp
xor
inc
sbb
out
and
mov
mov
push
rolb
pop
fnstcw
xchg
pop
push
xor
dec
daa
jae
arpl
nop
sub
roll
dec
mov
xor
cmp
pop
push
out
pop
pop
jp
lods
xlat
pushf
outsl
roll
in
sbb
xor
std
daa
adc
inc
mov
mov
xchg
pop
fsubl
outsl
lea
test
inc
mov
ret
mov
mov
mov
scas
inc
jne
mov
or
mov
mov
mov
in
mov
flds
shll
adc
inc
add
int3
test
push
imul
adc
fwait
xchg
sub
sti
and
adc
lcall
dec
inc
inc
sahf
xlat
and
jle
mov
or
xchg
mov
stc
divb
lcall
push
xor
andl
mov
test
testl
aam
xor
repz
and
aaa
test
inc
xor
cwtl
jmp
aaa
addr16
cmp
lcall
hlt
mov
out
or
xor
mov
or
test
in
shl
gs
lock
jmp
mov
adc
pop
xchg
adc
movsb
xor
fs
test
xchg
adc
pop
cli
jbe
lock
sahf
popa
popa
shrb
imul
out
aas
pop
xchg
mov
ja
jae
mov
and
jns
add
int
jl
inc
orb
cmp
xlat
gs
fmull
adc
push
cmpsb
cmovb
cmp
mov
subl
lcall
pop
push
mov
stos
js
je
mov
cli
test
xor
addl
dec
cwtl
mov
mov
jmp
sub
sub
scas
pusha
mov
xchg
xchg
js
test
adc
cli
xchg
daa
add
mov
repz
mov
cmp
adc
loopne
mov
push
std
adc
jmp
jp
sub
mov
test
dec
imul
insb
mov
pop
xor
push
mov
popa
mov
pop
dec
std
push
and
mov
cld
test
mov
or
mov
in
cmp
hlt
je
mov
rcr
fidivrs
jecxz
ret
pusha
sub
int
adc
loop
test
xchg
sbb
mov
lahf
cmpsb
insb
mov
xor
fidivrs
out
jne
mov
and
pushf
or
ds
outsl
push
out
test
mov
je
dec
jns
and
cli
gs
movsl
xchg
mov
xor
das
cli
dec
scas
xchg
es
dec
stc
rcrl
adc
dec
clc
addr16
arpl
push
jbe
sub
sbb
into
dec
popf
inc
or
rorl
add
xchg
push
in
loope
mov
mov
mov
inc
ds
push
mov
mov
mov
cmp
cmp
ret
or
lds
mov
dec
push
mov
dec
inc
xor
hlt
jae
sub
pop
test
imul
stos
dec
filds
add
cs
iret
aas
push
mov
cmp
jo
pop
mov
neg
push
pop
cwtl
pop
and
mov
add
movsl
jle
add
ret
xchg
clc
mov
lahf
push
shr
push
sbb
mov
aad
stc
ljmp
in
in
std
int3
gs
sti
test
ljmp
les
push
rcr
xchg
addl
lcall
notl
out
cmp
pop
add
xchg
fldt
mov
xchg
cmc
mov
inc
add
sbb
adc
jecxz
inc
aad
sti
xchg
pop
mov
std
sarl
and
sar
mov
lret
lock
mov
push
je
cmp
lds
lahf
fstl
cmp
inc
sub
lods
pop
mov
outsl
inc
fs
and
ja
ret
cmp
lock
popf
adc
xchg
aam
xor
insl
in
test
mov
enter
push
mov
es
lods
push
and
xchg
mov
out
dec
inc
adc
pop
lret
es
and
mov
xor
pop
mov
dec
lret
adcb
loop
movsb
jno
mov
sbb
test
xchg
mov
ljmp
lds
fstpt
movsb
dec
prefetch
or
ficomps
add
push
sarb
jae
sub
dec
shlb
pop
push
pop
add
mov
push
mov
incb
repz
cmpsb
jecxz
das
push
in
inc
jg
jns
add
test
push
push
xchg
das
loope
pop
add
jnp
mov
test
push
subb
sbb
fdivr
jae
sub
pop
add
test
sbb
movsb
pop
pop
pop
lds
xlat
lahf
and
inc
cmpsb
add
jbe
fidivl
sub
xor
xchg
popf
mov
in
daa
and
and
mov
sbb
sahf
lds
xchg
xorl
inc
rolb
fs
or
test
cltd
icebp
les
repnz
sub
mov
and
test
mov
jecxz
add
pushf
insl
cmp
nop
es
addb
es
lods
lds
inc
ret
loop
jae
adc
fwait
and
popa
add
push
jnp
outsb
sbb
aas
fs
sti
sub
adc
mov
adc
inc
out
outsb
lock
xchg
push
push
outsl
adcb
adc
inc
jle
out
idivb
bound
mov
mov
test
mov
out
std
or
mov
pusha
sub
int3
pop
sbb
jns
lods
mulb
jne
xlat
rcrb
adc
sbb
data16
xchg
mov
lret
sti
sarl
xchg
mov
idivl
sbbl
mov
xchg
sub
insb
scas
dec
loop
nop
sbb
fildl
es
mov
mov
dec
lret
inc
fsubrl
out
out
xchg
mov
xchg
addr16
es
imul
pop
ret
les
imul
mov
jne
loop
mov
in
or
mov
or
mov
movsb
sti
pop
hlt
sbb
out
sahf
mov
shll
xchg
repz
daa
pop
clc
inc
scas
cmp
mov
jp
into
pop
out
cmp
clc
sub
repnz
sub
pop
stc
test
insl
pop
jmp
pop
sarl
popa
mov
je
stos
lret
sbb
mov
dec
mov
jecxz
mov
dec
mov
dec
jmp
pop
adc
push
repz
lret
cmpsb
test
test
les
inc
sub
out
ds
pop
cmp
dec
orb
mov
sbb
xor
cmp
inc
sti
mov
xor
leave
mov
cs
inc
test
add
jg
mov
lcall
int
scas
ds
inc
and
dec
jmp
dec
fdivrl
cmp
cmp
inc
cwtl
push
in
mov
fstps
rorl
mov
das
push
insb
mov
push
das
ljmp
sarl
or
cmp
fstps
cmpsb
xchg
mov
testl
add
sub
roll
mov
hlt
test
cli
mov
aam
or
movl
dec
lahf
ret
repz
push
jne
outsl
popf
andl
or
mull
gs
sahf
icebp
and
ret
push
jns
arpl
cld
scas
test
std
inc
popf
lods
and
dec
dec
insb
xchg
mov
lock
int3
jge
mov
cmpsl
pop
int
popl
scas
adc
addr16
pop
loopne
and
sbb
adc
adc
and
cmpsl
das
es
outsb
mov
int
out
mov
or
and
jne
jae
in
lods
outsl
popf
test
mov
test
popl
mov
mov
dec
sub
int3
imul
mov
fnclex
or
mov
fldenv
sbb
sbb
es
sarb
mov
push
int3
push
adc
inc
and
pop
add
push
inc
mov
fdivl
mov
mov
jp
fdivrs
scas
mov
std
je
mov
push
add
das
mov
inc
and
inc
lret
ficoms
test
mov
movsb
cmp
add
xchg
mov
call
movsb
mov
pushf
aad
lock
hlt
flds
jnp
iret
not
in
imul
xor
lcall
jge
scas
pop
mov
pop
xor
daa
mov
jbe
dec
inc
mov
mov
mov
andb
jecxz
xchg
out
int
xor
loope
scas
mov
out
pop
pushf
repz
jae
test
cli
jp
fwait
sub
das
fwait
or
dec
shrb
mov
or
sbb
jb
dec
sbb
sbb
repz
or
xchg
stos
shl
and
push
dec
hlt
dec
add
pop
pop
fisubs
js
repz
imul
xor
pop
insb
push
jno
dec
cmpsl
push
inc
mov
movsl
fcoml
es
cmp
add
fcmovnbe
into
push
and
and
test
bound
mov
mull
pop
sub
shrb
adc
push
cli
pusha
repz
aad
rcrl
fcomi
push
add
push
mov
ds
cmp
push
scas
in
add
dec
rorb
dec
inc
mov
mov
cmp
sbb
adc
dec
icebp
and
mov
aad
mov
mov
cwtl
inc
aam
jmp
imul
jle
lds
das
int3
popf
mov
xor
pop
mov
mov
pop
inc
test
adc
sbb
adc
lcall
outsb
jecxz
std
mov
dec
jge
mov
lds
xorb
lods
push
and
pop
stos
mov
int
inc
cmp
data16
mov
jmp
xlat
mov
fcmovb
shrb
call
mov
in
sbb
push
cmp
test
sbb
imul
je
scas
lods
int3
fs
fdivl
nop
or
jnp
or
inc
test
outsl
std
xchg
mov
and
push
mov
mov
stc
leave
pop
roll
mov
popf
test
xchg
and
adc
or
dec
pop
add
ficomps
mov
mov
lods
dec
and
mov
dec
adc
fcom
es
jno
je
enter
xchg
add
outsb
pop
sarl
xlat
das
mov
mov
das
lods
test
outsb
mov
cmp
stc
addl
stos
xor
dec
sbb
loope
and
clc
cmpsb
rcl
out
adc
fdivl
lret
inc
fildll
jb
aam
pop
adc
movsb
adc
outsb
adc
xchg
pop
mov
pusha
les
fdivrl
push
ljmp
movsb
fiadds
and
mov
push
aam
adc
fstps
aas
dec
xchg
ljmpw
fidivrs
js
pop
xchg
add
mov
in
mov
mov
mov
xor
cmp
inc
mov
or
addr16
xchg
mov
dec
test
or
insl
dec
dec
int
sub
xchg
in
shr
mov
out
pushf
xchg
test
es
shlb
aam
xor
fists
sarb
sbbb
int
xchg
lahf
sti
add
mov
ss
hlt
mov
lods
je
mov
or
adc
inc
pop
test
pop
std
out
ds
lock
adc
jb
inc
mov
mov
jne
lods
cmp
dec
movsl
scas
sub
adc
mov
and
cwtl
fdivrl
fcomps
rcll
pop
aad
jge
cltd
addr16
mulb
sub
jne
or
pop
mov
out
je
addr16
jecxz
xlat
jnp
sbb
fcmovu
dec
push
mov
std
test
sbbb
int
leave
mov
sahf
je
repz
push
aas
and
dec
gs
xchg
in
mov
fnsave
data16
inc
dec
jp
fisubrs
sub
test
cmp
mov
mov
aad
in
int
mov
jle
aam
cli
lret
jge
roll
loop
sub
mov
idiv
lahf
incb
fildll
out
push
pop
xor
in
sbb
iret
clc
es
cmc
sub
pop
xlat
sbb
xchg
out
enter
out
cmpsl
fxch
and
clc
sub
mov
aam
fnstcw
popf
insb
int3
pop
out
push
mov
mov
add
cmp
mov
cli
and
push
mov
dec
fisubl
shrb
test
and
mov
outsb
dec
mov
scas
xchg
icebp
cmpsb
popf
std
mov
sti
cmp
mov
outsb
enter
inc
xchg
lahf
mov
into
mov
add
xor
in
and
shll
jp
pop
scas
movb
mov
in
in
and
sub
adc
outsb
sub
adc
pushf
das
test
mov
push
imul
add
in
inc
fwait
in
xchg
add
out
jecxz
push
xor
test
imul
scas
push
std
adc
sbb
int3
int
mov
or
ja
push
negl
out
pop
inc
aaa
cmc
out
jg
test
movsl
cmpsb
jge
push
lahf
xchg
aam
sub
or
andb
inc
xlat
dec
xchg
xlat
cwtl
xor
lcall
jb
mov
xor
and
mov
mov
je
mov
fdivrl
add
sub
lahf
mov
loopw
nop
mov
pop
pop
mov
dec
pop
ljmp
fisttpl
lea
loop
pop
mov
std
xor
push
fsin
xor
ror
mov
push
pop
test
fsubrl
push
lahf
into
inc
pop
notl
aas
pop
fdiv
mov
and
insb
fidivs
mov
cmp
fisubs
add
les
ret
xor
fcompp
push
aam
imull
fisubs
mov
lahf
mov
repz
stos
jae
mov
sti
fstps
das
dec
lods
push
aaa
bound
push
jl
jne
popa
lcall
push
sbb
shl
es
fs
push
mov
adc
subl
cmp
int
xchg
push
sti
xor
cld
pop
cmpsl
mov
mov
xchg
sbb
clc
cld
outsl
and
pop
mov
or
insb
dec
pop
das
mov
clc
sbb
mov
iret
push
cmp
sbb
arpl
sub
xchg
test
scas
cltd
sbb
dec
pop
pop
mov
mov
cmpl
stc
adc
mov
jnp
push
clc
popf
pop
lods
and
in
mov
popf
fldcw
xor
movsb
cli
xchg
dec
push
out
jne
fwait
dec
lock
adc
popa
push
aam
call
sahf
lock
imul
fidivrs
pushf
mov
jge
mov
jmp
movsb
or
fsubrl
cmp
int3
pop
out
pop
mov
or
faddp
movsl
jnp
sarl
xchg
lock
pop
les
xlat
jmp
pop
push
je
xchg
inc
sub
mov
mov
scas
loop
adc
cmp
xor
ds
in
lret
aaa
jns
test
dec
fidivl
nop
in
lock
lea
or
in
xchg
push
lcall
mov
rcrl
enter
dec
cmp
int
popf
mov
in
repz
in
daa
mov
jae
sub
xor
adc
aaa
push
das
inc
add
mov
or
lahf
cmp
popf
inc
jle
lods
mov
xchg
test
pop
sbb
mov
loopne
dec
and
shlb
divb
pop
int
rclb
sub
daa
or
push
sbb
or
cmp
vpcomud
push
fisttpl
enter
pop
pop
fcoml
sub
adc
xchg
mov
inc
mov
nop
in
lods
out
clc
aaa
mov
cmp
popa
adc
push
mov
push
das
cmp
cmp
cs
jbe
sub
rcll
outsl
cltd
xor
out
insb
and
rcrb
loop
adc
cmp
pop
subl
jmp
cli
fs
in
jp
lds
mul
xchg
in
stc
adc
inc
out
sbb
mov
divb
lods
jns
bnd
mov
shl
push
inc
leave
sahf
mov
test
loop
jg
das
xchg
xor
jns
mov
mov
jle
mov
inc
subb
iret
jmp
sub
mov
addl
in
cltd
mov
lea
mov
mov
sti
and
fidivs
sbb
inc
icebp
test
mov
sbb
test
add
push
test
sbb
push
lahf
pop
adc
jbe
mov
mov
insb
nop
shl
xor
out
in
popa
add
clc
push
push
jle
repz
cld
adc
mov
int3
and
int
iret
add
repz
push
cmp
vpmaxsw
in
pop
popf
or
and
mov
dec
or
xchg
xchg
leave
aam
mov
jle
in
arpl
mov
and
xchg
push
decl
lods
pxor
xor
idiv
fcompl
sub
sub
or
mov
or
lret
pusha
mov
sbb
in
lock
cmp
fimuls
test
jnp
jmp
mov
adc
cli
mov
cltd
lods
mov
mov
mov
mov
xchg
fldt
mov
mov
mov
push
xchg
sti
leave
xchg
jmp
subl
loop
adc
mov
xchg
jp
add
dec
inc
fisubrs
push
addr16
push
jl
clc
into
pop
pop
xchg
push
fistpl
cmp
ja
icebp
mov
mov
sbb
test
fldcw
adc
andb
mov
mov
push
sbb
jns
mov
test
adc
mov
test
dec
icebp
jmp
ret
fcmovnu
sbb
ret
scas
jbe
cmp
xchg
movl
xchg
test
flds
mov
cs
sub
ficompl
sarl
sbb
pop
cwtl
fs
pop
das
xorl
inc
sbb
mov
or
lods
pop
xchg
dec
shrb
sbb
jle
mov
jae
subl
mov
push
pop
daa
cmp
sbbb
pop
push
adc
popf
out
fstl
bound
push
xor
cmp
cmp
xchg
loope
call
dec
in
arpl
lcall
mov
fstps
xor
lods
ljmp
arpl
test
nop
cwtl
xor
push
fiadds
pusha
les
les
jg
mov
pop
inc
adc
popf
xchg
shrl
addl
dec
xor
fimuls
adc
cmp
test
add
lock
and
pop
shlb
movsb
addr16
xor
arpl
fisubrs
push
cmpsb
nop
out
mov
dec
scas
ds
sahf
mov
or
fsts
imul
and
mov
aaa
xchg
es
test
cmp
fmull
lock
add
push
jns
stos
and
mov
xor
dec
cmp
sub
dec
pusha
dec
out
out
cmpl
scas
adc
mov
push
int
xchg
sbb
lods
mov
jo
or
adc
and
pushf
cmpsb
jge
xchg
test
rclb
lods
add
or
inc
addr16
mov
jne
ja
dec
es
sbb
enter
jbe
in
xchg
xchg
mov
loope
xchg
pop
inc
mov
std
aaa
xchg
cmp
std
rorl
test
ds
bound
and
mov
mov
jb
ret
push
cltd
add
pop
addl
repnz
cmp
xchg
fldl
icebp
aam
jp
jnp
cwtl
aaa
in
das
inc
adc
dec
cltd
pop
push
arpl
call
sbb
in
mov
cmpb
ret
fsts
cmc
test
scas
aad
pop
cli
jp
leave
ljmp
inc
dec
mov
mov
cld
mov
cltd
sbb
push
mov
in
ja
lods
sub
sub
test
jo
std
mov
fsubp
imul
jmp
int
dec
es
mov
pop
addb
scas
cmp
jp
add
jge
movsb
mov
hlt
lods
imul
movsl
test
pop
push
adc
adc
mov
jge
inc
std
sub
push
scas
pop
std
adc
and
cli
subb
jmp
dec
dec
divl
xor
das
mov
jnp
pusha
mov
test
adc
outsb
pop
sbb
or
test
cmp
mov
cmp
or
dec
lds
test
jno
lcall
xchg
xchg
jmp
das
or
int
xchg
leave
mov
test
into
add
push
mov
xchg
xchg
repnz
push
imul
xchg
cmp
scas
cmp
push
lret
lods
cmpsb
test
inc
jge
mov
add
fistpl
cmpsb
pop
xor
mov
inc
mov
inc
sbb
loop
jo
daa
adc
scas
mov
mov
pop
loopne
pop
int3
shrl
inc
jl
mov
xchg
mov
xchg
or
mov
cmpsb
loop
push
test
pusha
scas
cltd
add
stos
add
loope
jae
cmp
loopne
mov
xor
loop
pop
ret
dec
sub
je
add
mov
pop
js
cltd
iret
push
movsl
xchg
xchg
dec
cmp
stos
jp
xchg
scas
aam
testb
inc
daa
mov
mov
sbb
adc
cmpsb
fcompl
addb
ljmp
and
xchg
in
pop
sbb
mov
fs
or
into
cmp
jecxz
lea
in
jle
sub
icebp
and
popa
dec
mov
push
xor
dec
inc
mov
mov
out
cltd
test
flds
mov
test
push
mov
repz
test
push
movsl
xchg
fdivl
cmp
xchg
cmp
in
test
push
adc
push
cmp
lods
sbb
ret
sbb
mov
pop
sub
mov
adc
mov
lock
dec
repz
test
jnp
cltd
push
fstps
xlat
bound
dec
std
cmpsb
push
sbb
scas
xchg
ja
aaa
rolb
jmp
sbbl
fldt
mov
rcrl
xchg
jmp
lods
xchg
cmp
sahf
lods
mov
cmpsb
mov
popa
xchg
cmp
imul
mov
clc
ds
fcmove
ficomps
not
movsb
lret
addr16
lods
xorb
dec
push
xor
xchg
pop
push
in
mov
pop
pop
pop
sahf
or
addr16
ret
addr16
mov
lock
movsb
loop
jl
cmc
pop
mov
xor
or
sarb
mov
mov
popa
addr16
xchg
dec
sub
jge
int3
movsb
outsb
scas
mov
mov
push
outsl
leave
push
les
std
mov
fisttpll
imul
mov
test
jo
dec
xchg
aad
mov
mov
mov
cmc
cmpsl
in
inc
lock
sub
adc
and
xor
cmpsb
xor
ljmp
roll
lret
xchg
push
xchg
pop
xor
and
in
xchg
dec
stos
rolb
es
push
mov
inc
test
outsl
mov
sbbb
mov
or
xchg
popa
inc
mov
mov
jp
cs
add
out
jg
out
aad
and
sbb
repnz
test
inc
shrb
cs
sbb
sub
iret
and
inc
inc
fisttpll
push
fdivrl
outsl
gs
test
repnz
dec
mov
dec
imulb
outsb
popa
data16
call
mov
push
faddl
mov
cld
adc
mov
push
sub
and
imul
fsubp
ficomps
xchg
popa
ljmp
mov
fcomps
inc
and
cmpsb
testl
test
ret
fsts
pop
xor
insb
cmp
pop
ds
push
push
cmp
mov
jl
jno
push
dec
out
cmp
in
dec
sbb
push
cld
shr
mov
dec
pushf
xchg
cmp
push
scas
test
dec
mov
aad
inc
icebp
loopne
arpl
mov
sbb
mov
ss
fiadds
test
pop
mov
lods
inc
ret
jno
mov
lock
movsl
cld
out
cmc
and
cli
cmp
dec
bnd
pop
fidivrs
pusha
xlat
jg
sub
cmp
pop
adc
rolb
std
les
mov
and
enter
xchg
pop
cltd
daa
scas
sub
in
jmp
movsl
mov
sbb
mov
pop
mov
sahf
and
inc
mov
cmp
stos
pop
aam
lods
movsl
rcr
loope
in
add
sbb
cmp
push
xchg
test
push
mov
pop
fldenv
aaa
cmp
push
test
adc
pop
fists
stos
cmp
inc
mov
lahf
pop
pop
rcrb
mov
movsb
inc
lods
mov
and
mov
cmpl
inc
loopne
outsb
ss
jns
es
and
pusha
mov
cmp
mov
ja
aam
inc
fcompl
test
sar
jns
lock
iret
and
insb
adc
cs
sbb
or
popa
jle
cmp
mov
cmp
aam
rcll
in
fwait
xchg
jae
pop
lret
movsb
aas
in
jge
inc
mov
orl
mov
pop
test
adc
mov
and
dec
push
inc
mov
pushf
das
insl
popa
jae
push
push
and
bound
outsb
jl
xor
fwait
loop
dec
fidivrs
scas
jge
lcall
repnz
mov
addr16
imul
test
jmp
std
jnp
shl
xchg
inc
cmc
fmulp
dec
xlat
sbb
adc
icebp
std
mov
cmc
cmpsb
data16
imul
xor
out
rolb
sub
in
dec
out
xchg
loopne
dec
push
mov
cmpsl
in
push
xor
lahf
gs
adc
stos
sub
fstpt
dec
jb
test
add
push
or
fsubp
mov
pop
cmpsl
mov
adc
fmull
scas
push
mov
ficomps
jnp
std
sarb
test
sub
out
sbb
mov
cmp
mov
int
or
es
sbb
or
cmpb
xor
ret
cmc
mov
out
add
cmpsb
mov
mov
mov
fldenv
dec
xchg
mov
mov
vphaddubd
sub
push
jne
nop
cmpsb
cmc
add
jge
and
mov
inc
outsb
push
nop
adc
jne
repnz
test
mov
fs
pop
jge
dec
inc
or
fdivrs
fsubrs
mov
jg
dec
mov
mov
inc
scas
inc
push
test
adc
dec
outsb
push
lods
scas
dec
push
fdivp
mov
jae
daa
arpl
jno
mov
mul
and
es
lds
xchg
jns
sub
cld
add
adc
inc
lcall
mov
into
mov
stc
lods
popf
sahf
out
stc
out
jno
hlt
cmp
add
and
int3
roll
mov
cltd
sbb
in
sbb
sbb
fldcw
jg
jmp
pop
mov
scas
cmpsb
popa
jp
and
popf
mov
mov
test
clc
fwait
movsl
jge
sub
enter
jge
mov
adc
loopne
push
push
push
shlb
ja
pop
mov
movsl
repnz
sbb
jle
lock
in
mov
mov
ret
pop
inc
xchg
dec
mov
adc
dec
adc
mov
xchg
mov
jp
mov
jecxz
lcall
inc
fldenv
mov
fcoml
movsl
jns
test
cmp
cmp
mov
sahf
cmp
mov
xchg
loop
cmpsb
stos
mov
fisttpll
dec
call
loopne
ror
scas
test
jns
mov
loop
jl
int
movsb
sahf
fnsave
mov
ss
dec
sbb
xor
cmp
sti
aad
mov
mov
leave
mov
scas
mov
and
jg
jae
mov
push
scas
mov
lahf
mov
and
pop
sub
mov
in
das
push
dec
lock
jmp
imul
inc
pop
stc
sbb
movsb
and
push
lds
mov
xor
sbb
in
aaa
enter
lcall
push
cmp
fisubs
test
push
push
bound
push
ss
mov
ret
mov
bound
sbb
lcall
dec
xchg
test
fists
loope
and
mov
stc
cmpb
push
adc
xchg
add
lock
cmp
adc
xchg
test
aas
ficoms
inc
ds
test
popf
pop
push
scas
cmp
repnz
xchg
fldt
mov
push
sbb
loop
mov
mul
test
and
dec
jns
repnz
or
pop
jmp
js
addr16
leave
repz
out
inc
cmp
dec
cmp
pop
mov
push
mov
add
dec
adc
pop
out
inc
out
fiadds
fdivp
das
sbb
out
cli
les
loopne
gs
test
aaa
sbb
jae
push
cmp
cltd
xor
pop
cmp
add
stc
pop
inc
pop
fs
mov
adc
arpl
fld
adc
sub
push
sti
cltd
mov
pusha
cmp
jmp
out
sahf
pop
das
cmp
inc
add
and
mov
xchg
gs
int
out
mov
push
cmovle
cmp
mov
inc
cmp
jb
fisubrs
dec
push
lahf
sbb
pop
mov
lea
sbb
mov
pushf
test
out
sti
mov
mov
add
out
stc
mov
mov
and
inc
pop
and
sub
dec
add
sbbb
hlt
fbstp
dec
ja
int
les
lock
and
cltd
rcll
inc
mov
scas
and
pop
mov
in
or
inc
lahf
add
inc
pop
push
sub
test
adcl
flds
lods
jno
rcl
addr16
cmp
xchg
roll
loope
pop
mov
jmp
sbb
and
mov
adc
cmc
push
dec
mov
mov
arpl
shrb
mov
not
xchg
push
fnstcw
or
repz
pop
sub
jae
cmp
sbb
fisubs
test
xor
add
das
dec
mov
fimuls
lds
out
fwait
and
ficompl
popf
jne
test
hlt
dec
pop
inc
mov
fcomp
insl
or
into
addr16
add
jnp
push
ljmp
xor
push
fidivl
xor
pop
and
bound
movsl
popf
cmp
sar
sbb
fidivs
int3
pop
jno
cmpsb
sub
insl
pop
or
sub
clc
lcall
xchg
and
sub
jno
movsl
test
push
sbb
test
add
out
shlb
mov
jb
push
or
popf
mov
push
movsl
mov
jae
sbb
bound
cmpsb
hlt
lock
test
mov
fisttpl
movsb
push
push
sbb
addr16
sbb
adc
cmpl
push
out
jo
test
fildl
mov
sbb
xor
and
xchg
jmp
inc
lods
cmp
xchg
mov
test
lea
push
mov
pop
xchg
sti
sub
fldcw
sbb
xchg
push
pop
and
xchg
sahf
ja
test
es
in
jne
and
sti
xor
cmp
mov
std
mov
xchg
push
loopne
mov
mov
pop
xchg
lret
out
mov
add
mov
and
sbb
mov
jg
cld
mov
sbb
in
add
int3
mov
movl
jns
dec
fdivp
adc
icebp
xchg
push
sub
test
adc
jl
push
mov
je
add
in
mov
lret
imul
arpl
dec
scas
xor
inc
les
mov
outsb
xlat
addl
xchg
mov
lods
loop
int
sbb
sbb
sti
adc
sub
pop
adc
mov
sti
xchg
jns
mov
sbb
inc
jp
lds
cli
add
test
loope
pop
imul
popw
icebp
inc
xchg
sub
fcoms
and
jno
sbb
xor
or
dec
das
and
inc
mov
test
in
xchg
test
jge
faddl
jnp
or
enter
jge
aam
pop
lret
dec
insl
jg
fldcw
ror
xchg
movsl
fdivp
mov
sti
sub
xchg
repnz
bnd
icebp
pushf
dec
and
xchg
movsb
shll
sbb
xchg
mov
push
xor
stc
xchg
add
xchg
mov
xor
dec
mov
scas
aam
cmpsl
push
add
in
mov
push
cmp
out
or
ljmp
movsl
mov
imul
sti
outsb
adc
div
es
imul
mov
sbb
dec
lahf
mov
std
insl
cmp
jecxz
mov
rorb
jecxz
or
inc
scas
insb
clc
xor
dec
push
call
inc
xchg
pop
pop
mov
ds
mov
jne
pop
pop
andl
and
xchg
dec
test
and
sbb
pop
inc
mov
out
orl
fadds
sbb
jae
sub
enter
adcb
mov
dec
orb
lods
insl
dec
fisubrs
fldcw
aam
or
xor
std
int
pop
movl
jb
addr16
push
xchg
jecxz
mov
pop
jp
pushf
and
add
xchg
sahf
out
mov
fidivrl
filds
stos
imul
or
cwtl
inc
mov
pop
test
jmp
fucomip
cmp
scas
fstps
inc
cli
xchg
cmp
xor
aad
pushw
pop
sbb
clc
sti
sub
mov
or
mov
push
fdivrs
test
or
dec
shrl
js
lahf
js
cld
das
cli
outsb
jecxz
xor
pop
cmp
fidivrs
mov
ficoml
cmp
lds
push
inc
pop
sbbl
lock
scas
inc
ret
jl
xor
mov
lret
inc
fsubs
push
push
movsb
cmp
lods
push
in
das
xchg
add
addr16
mov
or
cmpsb
roll
pushf
cmp
mov
adc
sub
addr16
imul
xchg
leave
xor
scas
mov
aad
cmpsl
clc
pop
push
shr
stos
in
inc
gs
jne
shrl
fstpt
or
cmp
scas
repz
fistpll
out
imul
fnstcw
lcall
xor
cltd
das
jnp
inc
lods
and
sub
lock
std
sub
shl
mov
fcmovnu
xchg
push
in
dec
xchg
mov
xlat
js
fiaddl
xchg
pop
int
mov
popf
std
in
aad
cmp
adc
mov
push
mov
jns
sti
cmp
shlb
mov
sbb
jbe
jge
xchg
mov
push
push
xchg
into
and
cmp
push
faddl
test
repnz
sub
mov
jae
cmc
jns
mov
pop
sub
mov
std
sub
nop
rclb
cmpb
dec
or
insl
dec
push
fldt
xchg
and
test
rclb
sbb
cmc
cmp
movsl
push
inc
inc
mov
mov
je
mov
outsb
push
fisttpll
pop
dec
outsl
roll
lock
xchg
das
adc
xchg
xchg
xor
testl
adc
mov
pop
stc
mov
flds
jo
inc
jle
mov
aaa
imul
fld
sbb
test
pop
fmull
repz
movsl
iret
jmp
or
ja
ljmp
and
addr16
aam
cmp
arpl
bound
daa
mov
and
addr16
sub
int3
lahf
pop
mov
push
fnstsw
dec
out
cltd
sbbb
jb
pop
arpl
subb
push
mov
cmpsb
aaa
mov
sub
mov
mov
inc
or
mov
jo
dec
inc
jle
push
push
add
cli
movsl
jl
pushf
enter
fldcw
test
push
push
mov
call
divb
fsubp
es
lretw
fsubs
cltd
cmpsl
test
dec
mov
sub
out
les
dec
test
xor
sahf
mov
inc
lret
data16
call
mov
dec
mov
sbb
repnz
test
inc
ds
mov
inc
data16
ds
inc
outsl
clc
or
in
cmpsb
xor
push
mov
inc
mov
push
pop
arpl
pop
fcmovnb
stos
outsl
or
pop
js
cld
xchg
lahf
jge
sub
ljmp
das
repz
xchg
inc
rcrl
lds
int3
xchg
jbe
push
dec
call
and
xor
loope
or
in
bound
lods
lret
add
push
outsl
adc
test
aaa
mov
insl
adc
mov
push
push
fsubrl
lds
push
adc
cmp
ds
xor
mov
and
xorl
inc
dec
cmpsb
push
adc
push
or
cmp
jecxz
push
add
mov
mov
dec
lahf
cwtl
ficoms
xchg
in
repz
jp
mov
es
int
and
sub
mov
cmp
inc
add
jle
mov
test
lcall
subl
cwtl
add
mov
ret
nop
ret
pop
cmpsb
in
ljmp
mov
andb
mov
pushf
lock
sbb
push
jno
fldenv
xchg
mov
test
and
mov
loopne
push
testb
xchg
int
inc
inc
stc
adc
popa
push
jmp
sbb
jbe
imul
mov
inc
aaa
pop
jne
or
in
mov
xchg
jmp
loope
scas
std
pop
push
mov
lods
outsl
adc
movsl
mov
vpsubd
push
add
push
fstps
scas
in
int3
jno
jp
test
push
sbb
inc
mov
das
push
scas
pop
bound
inc
sahf
adc
ss
std
mov
popf
xchg
aaa
rorl
out
fwait
test
repnz
dec
jns
xchg
in
xchg
inc
push
jae
andl
cld
mov
stc
and
test
test
imul
jge
push
mov
cmp
push
ds
pop
xchg
lcall
call
mov
push
scas
sti
xorl
pop
mov
test
cltd
data16
mov
sbb
mov
xchg
lods
loop
lret
or
out
es
int3
jnp
cmc
xlat
inc
sub
lods
out
cmp
enter
nop
and
mov
xor
scas
cmpsl
mov
push
xchg
aad
jecxz
and
xchg
sub
sti
fldcw
lods
pop
cmpsl
mov
jge
sbb
jmp
pop
fisubl
add
ret
scas
xlat
jg
dec
and
sbb
aam
dec
mov
fld
dec
lahf
sub
loope
fcompp
subb
inc
mov
int
test
stc
dec
mov
out
xor
test
repz
adc
mov
push
mov
sub
or
mov
sub
sahf
jle
dec
gs
and
add
xor
mov
jb
aas
dec
andb
mov
and
aas
fcmovnbe
inc
loop
inc
insb
ss
cmp
scas
sub
out
mov
repz
xchg
imul
jnp
cmpsb
push
xorl
mov
fisubrs
add
sub
popa
sbb
icebp
xchg
mov
push
adc
insl
rolb
adc
xor
sbb
mov
mov
insl
sub
mov
iret
inc
pop
arpl
or
mov
fidivs
psubq
push
std
xchg
ret
jne
out
andb
imul
sbb
iret
gs
hlt
popf
mov
inc
dec
mov
pop
int
mov
out
stos
push
ret
test
lods
xor
add
lods
dec
push
imul
push
sub
mov
mov
dec
mov
movsb
test
std
in
int3
mov
cmp
shlb
inc
cmp
stos
das
inc
jnp
daa
pop
dec
movsl
mov
das
inc
xchg
dec
stos
xlat
jae
call
cmp
jae
insl
and
cwtl
pop
sbb
out
or
aam
cmp
es
aad
mov
dec
iret
adc
pop
fldcw
leave
cmp
repz
int3
mov
shll
in
jg
not
dec
daa
lods
mov
cmp
outsl
sahf
inc
pop
push
and
and
stos
clc
jmp
dec
xchg
out
fs
clc
mov
imul
mov
out
cmpsl
xchg
mov
outsb
mov
mov
sub
adc
mov
sub
and
mov
scas
jp
sub
gs
hlt
movsl
xchg
inc
aaa
and
hlt
leave
fwait
loop,pn
mov
idivl
or
fbstp
shll
inc
xchg
mov
jns
pop
jae
inc
mov
out
pop
outsl
sahf
lcall
mov
xor
jp
inc
adc
loopne
arpl
scas
mov
aad
lret
js
lods
mov
popf
scas
out
add
gs
clc
inc
cmpsb
mov
cmc
mov
mov
push
inc
pop
and
cmp
out
mov
adc
data16
pushf
xlat
es
pop
inc
xor
bound
jle
jno
push
mov
fldenv
mov
fldl
popf
push
shl
ficoms
call
faddl
addl
lahf
adc
es
out
fwait
xchg
jno
xchg
or
movsl
xchg
pop
xorb
insb
jns
inc
inc
fcmovu
pushf
std
add
movsl
cmp
push
lods
in
aad
out
mov
ret
flds
push
jns
popa
js
popa
call
pop
rcrl
xchg
adc
jne
dec
mov
sub
mov
inc
pop
das
xchg
cmp
addr16
movsb
pop
jno
inc
mov
or
pop
subb
enter
jns
adc
mov
add
popa
test
sbb
lock
ret
mov
mov
loop
adc
inc
fidivl
imul
cmp
and
jae
pop
ja
add
iret
push
and
push
clc
pop
mov
nop
pop
fidivrs
jp
test
mov
mov
mov
lods
sub
push
mov
cld
add
add
repz
sbb
scas
hlt
xor
in
enter
or
aad
sbb
mov
jbe
outsb
int
je
xlat
or
fsubs
ljmp
push
fisubl
sub
pushl
mov
jb
pop
add
push
inc
xor
cmp
adc
mov
stos
fdivrs
inc
imul
inc
xchg
dec
stos
cltd
mov
test
add
mov
inc
addr16
sti
out
xor
inc
repz
cmc
test
ja
cmp
xor
push
repnz
push
cmp
push
sbb
daa
test
xor
mov
mov
inc
sbb
push
sbbl
cmp
mov
mov
movsl
lock
fsubrl
je
mov
in
and
jmp
jns
test
cli
adc
add
sbb
mov
xchg
ljmp
and
btc
jae
inc
sbb
negl
mov
and
lret
fucomi
in
movsb
mov
cmp
lods
dec
mov
dec
scas
mov
sbb
ficoml
jle
sbb
inc
jl
out
push
scas
aad
mov
adc
rcl
add
xchg
test
lahf
mov
insl
loope
jmp
inc
mov
mov
call
inc
push
cmp
lods
jnp
push
xchg
incb
add
fnstenv
popf
mov
jb
loopne
lds
jmp
icebp
cli
adc
in
sub
lods
xor
mov
cs
test
jne
sub
fsubs
nop
inc
mov
fldcw
add
scas
dec
cs
mov
mov
mov
test
scas
dec
dec
dec
fisubl
fnstsw
aad
test
cmp
rclb
sbb
test
js
and
jmp
push
outsb
cmp
fisubs
scas
test
push
ficoml
cld
push
push
fld
dec
inc
pop
push
cmc
test
dec
stc
mov
lea
out
cmp
and
pop
inc
insl
fucom
xchg
xchg
push
leave
popa
cmp
nop
inc
rep
xchg
inc
mov
or
clc
test
std
cmp
mov
push
mov
outsl
mov
aas
and
fnstenv
dec
push
push
and
mov
mov
add
inc
imul
mov
dec
iret
pusha
fists
mov
ljmp
aaa
aad
sub
mov
lahf
insl
rolb
xchg
sub
in
dec
scas
stos
shl
mov
fistpl
jmp
pop
cltd
push
lahf
insb
xchg
hlt
scas
lock
inc
mov
mov
cli
lcall
test
fisubs
movsl
sub
and
jmp
mov
flds
mov
das
fcmovnu
pop
enter
mov
dec
xchg
fsubl
nop
orb
mov
outsb
mov
mov
enter
add
clc
jns
cltd
and
loope
lods
mov
mov
outsb
mov
fsubrl
shll
mov
adcb
pop
cmp
mov
loopne
scas
or
inc
push
push
mov
rorl
ss
sahf
les
in
push
iret
adc
sbb
pop
mov
cmpsb
cltd
inc
pop
jl
jo
daa
jo
xchg
and
jb
movsb
das
fildll
fldenv
pop
sbb
adc
outsl
inc
cmp
jb
call
sbb
xor
jle
mov
int
cmp
xor
fstpl
fsts
out
or
addb
nop
std
fldt
sti
leave
xchg
addl
xchg
int3
and
hlt
mov
jae
or
out
inc
ficompl
sti
stos
mov
adc
dec
fists
out
clc
dec
cli
cmp
pop
mov
dec
and
fstpt
test
push
mov
loopne
sbb
nop
cmc
push
fistps
mov
dec
rolb
inc
pop
out
popa
out
lret
fsubl
jae
xor
xchg
jo
scas
push
lahf
push
add
cmpsl
popa
fmul
sub
pop
js
les
sub
adc
fldenv
push
xchg
add
mov
in
mov
imul
cmp
mov
jle
imul
cli
lea
push
xlat
xchg
test
test
out
lret
scas
adc
and
ljmpw
fisubs
mov
push
sub
mov
aam
je
and
mov
cmp
ss
aas
xchg
mov
pop
loope
int
cmp
mov
and
sti
xor
icebp
rcr
mov
test
dec
fwait
inc
sahf
mov
pop
adcb
fidivrl
mov
xchg
mov
addr16
fstpl
stos
push
fcoms
pop
xorl
js,pn
jmp
mov
ret
push
aas
xorl
jne
mov
jecxz
pop
jae
fldl2t
xor
xchg
xchg
xchg
test
mov
iret
ret
dec
mov
in
jle
push
or
repnz
daa
mov
fstps
add
ficomps
fstps
xchg
adc
and
cmp
pusha
adc
cli
xrelease
cld
xor
pop
and
std
sar
outsl
inc
fwait
xor
jg
icebp
ljmp
fxch
lcall
cmp
pop
iret
pushf
mov
add
dec
mov
lock
lea
jnp
xchg
mov
enter
mov
add
pushf
jmp
pop
xchg
aad
sbb
rcll
mov
pop
mov
cltd
dec
sub
pushl
inc
jne
std
xchg
mov
int
mov
or
cltd
movsb
xchg
mov
pop
loope
mov
mov
test
jmp
cmp
cmp
cmpsb
scas
arpl
xchg
sbb
sti
movsb
cld
sbb
cmp
jnp
fistpll
cmc
inc
xchg
scas
push
clc
out
mov
pop
jge
mov
scas
pop
xchg
mul
call
lds
gs
dec
dec
arpl
std
in
xchg
xor
pop
shll
in
jns
out
xchg
enter
loop
cmc
ja
sbb
mov
jnp
out
lods
fldt
movb
pop
ficompl
mov
cli
xchg
push
mov
mov
subl
aad
std
or
adc
into
pop
sub
mov
sub
in
adc
das
mov
or
pop
push
push
stc
cwtl
cmp
mov
ficompl
repnz
out
xchg
cmp
cs
sub
cmp
dec
push
lods
imull
not
in
adc
test
fcmovb
mov
movsb
sbb
hlt
movsl
mov
sti
inc
pop
cmp
cltd
cmp
test
dec
pop
inc
pop
gs
and
sar
or
pop
jge
inc
outsb
pop
stc
loopne
aaa
xchg
in
int
mov
sbb
inc
push
fs
add
movsb
clc
test
stos
lods
push
aas
sub
leave
push
test
outsb
mov
test
pushf
push
idivb
cmpsl
scas
fcomp
lcall
repnz
inc
repz
enter
out
sbb
lcall
jge
movsb
mov
dec
and
cli
lods
add
mov
test
pop
mov
rclb
inc
mov
jb
jnp
mov
data16
mov
sub
movsb
and
ds
adc
push
fwait
mov
and
adc
pop
fstps
mov
lcall
cmp
loopne
mov
push
addr16
nop
add
enter
inc
rcr
test
pop
push
mov
pop
or
data16
lods
jg,pt
mov
jp
addr16
aaa
in
test
cmp
js
jmp
mov
lahf
push
mov
data16
push
adc
fwait
iret
xchg
popf
out
incb
lock
or
lods
and
mov
std
xchg
fld1
aaa
out
or
inc
push
mov
in
sbb
lahf
xchg
mov
xchg
and
xchg
popf
jecxz
adc
cmp
pusha
arpl
jle
mov
clc
loope
test
add
inc
inc
xor
repnz
movsb
pop
adc
xchg
dec
pop
adc
cmp
cmpsl
and
sti
cmp
addl
and
cmp
mov
adc
add
lods
lds
into
inc
stos
int3
pop
lea
adc
loope
dec
std
push
in
cmp
rcl
repnz
sti
mov
or
dec
iret
movsl
push
lods
xor
test
inc
lods
ja
sahf
mov
mov
mov
xchg
adc
dec
test
lds
outsw
in
mov
ret
mov
and
or
cmpsl
movsb
out
mov
jmp
sbb
sbb
in
std
mov
xor
sbb
or
pop
and
dec
pop
push
loop
ds
mov
xor
and
xchg
rcrb
rclb
lods
dec
jbe
out
movsb
aad
xor
inc
ret
dec
hlt
lock
into
mov
shll
lock
push
cmp
push
test
outsl
out
shlb
out
fldcw
push
push
mov
sbb
shl
test
in
sbb
es
mov
push
out
sbb
aaa
nop
out
sbb
xchg
imul
jl
ds
adc
adc
jecxz
test
xchg
xorb
into
fsubl
and
sbb
nop
mov
mov
ret
pop
and
into
push
adc
or
fadds
xor
repnz
lods
sti
out
fs
adc
add
mov
jmp
lret
pop
pop
iret
idivb
sbb
mov
shl
mov
arpl
movsb
cmp
xor
xchg
notb
rep
aas
out
popl
in
lds
or
jno
or
or
das
jns
shlb
pop
in
sub
pop
cmp
xor
outsb
es
mov
test
imul
pop
mov
pushf
mov
dec
and
mov
out
inc
pop
movsb
dec
xchg
adc
mov
nop
jmp
fwait
mov
mov
lds
loopne
push
lret
pushf
test
fdivrs
cmp
jnp
add
jbe
jno
xchg
test
repz
inc
cmp
mov
sahf
int3
sbb
inc
inc
popa
in
imul
mov
inc
dec
xor
xor
pop
scas
cmc
sub
push
xor
mov
jp
sbb
in
and
mov
or
sub
xchg
mov
jno
js
fnsave
jle
pop
sbb
adc
mov
jns
mov
fsubrl
cmp
jecxz
into
fsubrl
xchg
mov
mov
sub
cs
inc
push
add
ficomps
sbb
cli
adc
push
jp
fmulp
and
push
xchg
in
xor
fldenv
pop
das
out
adcb
jns
sahf
cld
mov
and
or
pop
out
loope
test
xchg
xchg
mov
jecxz
sub
lcall
jo
dec
std
in
pop
inc
fs
sarb
xchg
lods
sbb
sti
clc
out
cmp
repz
hlt
ds
jno
push
sbb
pushf
lods
dec
mov
jo
or
inc
inc
fldl
les
or
pop
inc
clc
sub
pop
leave
aam
arpl
push
jnp
mov
out
cmp
mulb
jno
jp
push
sub
fsts
mov
mov
dec
xlat
lahf
cli
or
inc
mov
sbb
out
mov
shlb
ss
test
test
pop
mov
mov
leave
pop
test
xchg
fdivrl
fdivrs
cmc
sahf
dec
jnp
push
addr16
mov
xchg
xchg
dec
xchg
mov
fisttpll
adc
sub
ljmp
mov
pop
add
mov
or
jmp
or
or
mov
push
aaa
addr16
dec
pop
mov
jmp
inc
out
fwait
cld
loopne
push
jg
push
ss
les
mov
sub
push
js
push
mov
pop
psraw
jne
scas
jge
adc
test
or
sti
and
lods
sub
sbb
and
ss
dec
jle
sbb
popf
scas
lock
rclb
adc
pop
inc
lcall
in
push
jp
add
sub
out
xor
or
mov
test
std
jnp
cmp
lods
adc
ret
loopne
dec
cs
fcompp
outsl
std
jns
or
xchg
iret
xor
jns
cmp
loope
adc
cli
inc
or
lcall
mov
xchg
sbbb
mov
in
push
cmc
xorl
mov
push
scas
adc
mov
ds
rorb
jl
pusha
xchg
push
mov
dec
daa
adc
inc
es
mov
pop
ljmp
aas
pop
and
outsl
mov
cmpsl
mov
mov
std
mov
pop
lods
popa
shll
fistpll
dec
xor
cmc
jb
inc
sbb
xchg
mov
pop
test
bnd
sarl
leave
shrl
xor
repz
jnp
cmp
xor
test
shlb
cmp
sbbl
mov
lret
mov
push
push
shrb
mov
jo
dec
mov
das
mov
xor
inc
push
sub
pop
mov
inc
or
jae
cmp
xchg
lock
pop
jb
pop
jns
gs
lcall
cld
jnp
jp
push
out
mov
jb
gs
imulb
xchg
out
mov
sbb
ja
ljmp
into
idivl
cmp
repz
popa
out
test
mov
lods
dec
cmp
mov
or
sbb
sbb
mov
sub
fisubrl
into
lcall
dec
cmpsl
int
pop
mov
mov
fstl
mov
fidivs
pop
push
cmp
mov
fldcw
and
push
orb
xchg
cli
mov
add
jae
fstpl
mov
inc
push
cltd
lods
xchg
mov
ret
int3
inc
add
sahf
ss
xchg
cld
sub
mov
out
lods
sub
push
addb
stc
jnp
mov
outsb
jmp
cmpsw
mov
test
mov
lds
jb
mov
je
fucomp
mov
mov
loope
or
int
mov
and
push
dec
jne
jmp
xchg
dec
pop
out
mov
mov
cmp
gs
icebp
dec
loope
xchg
int3
mov
in
popa
mov
fidivrl
outsb
and
cmp
repz
xchg
xchg
inc
cld
lods
push
xchg
pop
jmp
or
sub
mov
jbe
dec
jle
fidivrs
cmp
add
fbld
fldl
push
sub
shlb
push
sbb
stos
xor
pop
add
mov
push
mov
pop
repz
pop
inc
mov
bound
outsb
sbb
xchg
cli
jno
sub
mov
daa
sub
bound
sub
hlt
dec
or
mov
cmp
sahf
jl
int
add
fsub
xor
imul
in
loope
or
fnsave
enter
roll
shrl
in
iret
mov
out
mov
mov
jnp
cmp
fwait
jb
sbbb
mov
cmp
dec
and
lds
fidivl
std
scas
fnstenv
ja
lahf
test
rorl
das
lods
outsl
mov
or
mov
add
cmpsl
jge
ss
leave
repnz
jmp
lods
aad
cmp
push
ja
sub
xor
sub
cmp
fucomi
rcl
iret
nop
mov
ret
or
sbb
and
push
mov
sbb
stc
stos
xchg
xchg
cltd
lret
cltd
push
jmp
or
xchg
cmp
sub
lods
rcrl
pop
std
hlt
pop
jge
xlat
mov
test
push
insl
pop
mov
adc
sbb
rcll
pop
pop
xchg
test
int3
xchg
mov
pushf
aas
loop
out
movsb
mov
mov
fcoms
lea
jecxz
inc
mov
push
mov
hlt
shr
jg
les
shrl
jle
jl
jo
arpl
icebp
cmp
push
sar
imulb
xor
sub
mov
lock
mov
jmp
and
mov
out
loop
fcoml
ljmp
xor
mov
loop
mov
pop
adc
jmp
lods
mov
adc
test
shll
call
sbb
int
fisttpl
sbb
or
xor
in
inc
cs
cld
mov
out
jecxz
pop
dec
stos
add
mov
pushf
cmp
pop
inc
repnz
xchg
dec
push
or
fnstenv
mov
sbb
repz
outsl
in
sbbb
mov
inc
std
sbb
sub
outsl
mov
and
leave
xor
sahf
lds
push
fdivrp
cmp
jno
and
push
daa
sbb
push
fwait
xchg
icebp
stos
jge
je
cmp
outsb
or
movsb
mov
jb
ret
sbbb
push
xor
pop
rcl
hlt
dec
push
fisubrl
test
mov
sbb
add
mov
sahf
stos
insl
pop
push
ljmp
jne
jae
sub
mov
cmp
int
movsl
scas
dec
pop
sbb
sbb
sti
mov
in
adc
mov
inc
out
cmpsw
mov
mov
scas
sbb
sti
in
in
cli
jg
mov
sbb
jl
adc
fcmove
jg
clc
addl
sbb
out
adc
sub
mov
sbb
scas
sub
cmp
int
push
mov
addr16
add
lods
xor
popf
add
sahf
adc
jp
aaa
ljmp
ljmp
lods
loopne
cmp
leave
xchg
push
aaa
sbb
mov
pop
cwtl
sbb
sbb
cmp
push
cs
cmp
lods
dec
out
mov
pop
xor
out
in
sub
cmp
loope
adc
mov
xchg
jg
fwait
std
dec
jp
cmp
cmp
sub
push
jb
in
push
lahf
cmp
icebp
out
cmp
lds
sbb
adc
es
cltd
cmc
mov
adc
cmp
pushf
sub
aad
pop
mov
xchg
jne
jge
mov
and
into
fdivrl
jbe
out
rclb
jmp
bndstx
aaa
andl
insb
cmp
cltd
push
sub
push
mov
lret
sub
sti
cmp
dec
cmp
mov
out
mov
mov
pop
push
mov
cmp
pop
and
movsb
aas
jmp
mov
ds
cmp
aam
xchg
in
cmp
push
push
mov
push
mov
sahf
repnz
fstl
stos
fildl
out
icebp
cmpb
out
cli
repz
scas
add
add
mov
jne
xor
xchg
cltd
push
lret
jecxz
inc
repnz
scas
shrl
xchg
fidivs
inc
inc
push
mov
inc
inc
push
push
xchg
adc
loope
sub
push
call
hlt
std
sub
fwait
and
jae
into
push
mov
mov
fnstsw
test
repz
shl
js
fldcw
pop
adc
and
cmp
pop
test
shrl
add
sbb
loope
out
sub
inc
mov
sub
gs
movsl
and
into
and
scas
mov
sub
aaa
sub
mov
or
dec
and
xchg
xchg
enter
test
push
cmc
push
pop
and
int
int
mov
mulb
sbb
mov
mov
ret
in
or
push
push
adc
add
push
daa
movsb
sbb
data16
fsubl
inc
ljmp
fnstcw
pushf
xchg
out
or
je
pop
sub
movb
mov
jno
popa
fildl
arpl
push
mov
mov
cmpsl
push
fbstp
dec
pop
push
cs
std
and
stos
xor
sbb
mov
jmp
xchg
stc
push
mov
fdivrs
cs
push
add
addr16
pop
xchg
stos
cwtl
dec
mull
pop
mov
mov
inc
stos
test
int3
test
jbe
mov
sub
xchg
push
filds
sahf
ficomps
adc
mov
push
cld
mov
js
add
sub
mov
fdivrl
daa
fbstp
mov
scas
jge
cld
fmul
lret
out
dec
pop
loope
sub
sbb
push
push
loopne
shlb
add
mov
jecxz
and
and
rcrl
rolb
inc
pop
data16
in
xchg
ret
cmpsl
xor
cmpsb
dec
rclb
xor
fdivl
gs
mov
pop
mov
and
mov
lret
repz
lret
std
mov
dec
iret
pushf
dec
xor
lret
xlat
imul
repnz
jnp
fwait
out
cmp
adc
sub
xor
lea
cmp
inc
mov
xor
mov
mov
inc
add
xchg
das
call
inc
jae
xor
decb
sti
add
fbstp
or
lock
out
sub
ljmp
movb
push
cli
nop
inc
popf
data16
stc
mov
test
andb
testl
sti
es
cmp
add
sti
imul
scas
cmp
adc
test
es
xor
mov
movsb
hlt
dec
cld
sbb
mov
popf
cmp
mov
es
sub
lods
mov
out
jp
je
sbb
sbb
shrl
mov
cmp
lahf
mov
addr16
cmpsl
xchg
pop
idivl
add
orl
jmp
fcompl
pop
xor
testl
cmp
out
xlat
push
pop
fsts
iret
pop
or
pop
jge
bound
stos
scas
mul
int
sub
push
inc
jo
jg
mov
lcall
ret
js
cmp
mov
adc
jo
insl
aas
sbb
dec
test
mulb
movsb
jp
mov
inc
js
xorl
push
dec
scas
mov
movsb
jmp
nop
insb
mov
fstpl
dec
push
push
out
sub
add
jge
jecxz
test
push
jne
push
es
in
outsb
daa
xchg
fs
cmp
mov
mov
ficoms
jno
daa
movsb
lds
push
loope
into
in
es
test
stc
adc
and
push
pop
mov
and
fdivrl
scas
inc
insl
lcall
pop
daa
repz
push
sub
inc
pushf
movsl
test
jle
cwtl
clc
fidivrs
mov
pop
fidivs
lahf
popf
fnstenv
fimuls
sbb
jl,pn
jae
shl
das
jecxz
cli
xchg
mov
mov
push
add
imul
adc
sub
test
notb
in
mov
test
fsubrs
lods
mov
push
sbb
mov
mov
sbb
aaa
mov
sub
jnp
bswap
je
addr16
dec
and
push
shlb
ja
push
pop
scas
sti
push
fistps
xchg
out
gs
scas
pusha
fnstcw
sbb
stos
push
xchg
aam
sahf
jl
pop
adc
sub
mov
push
push
adc
es
mov
leave
adcl
out
push
enter
pop
bound
test
and
test
int
lret
ds
xor
popf
xor
es
cmpb
jno
push
inc
add
or
pop
mov
or
sarl
push
mov
add
mov
adc
sbbl
push
jp
add
fsubl
out
mov
mov
popa
pop
adc
jnp
stc
in
test
xor
test
pusha
inc
int
xchg
sub
mov
outsb
test
adc
repz
gs
movsb
bound
and
push
outsl
or
xchg
test
jge
xor
xor
enter
mov
out
pop
lret
in
inc
lret
cli
xchg
repnz
dec
fisubrl
incb
negb
mov
sbb
xchg
jmp
dec
fldz
outsb
xor
sbb
repnz
mov
ffreep
js
std
mov
pop
movsb
cmpsb
mov
dec
rcll
push
rol
pop
out
jmp
popa
dec
jnp
push
test
mov
out
hlt
ret
inc
test
lcall
xchg
out
sub
out
cltd
inc
dec
fisttpl
movsl
jns
outsl
adc
mov
mov
test
sbb
loope
mov
or
std
sbb
xchg
sbb
cltd
xor
jns
mov
mov
fstps
aaa
jae
dec
and
jo
jle
movsl
cmpsb
xlat
dec
dec
mov
sbb
xor
les
lods
and
mov
inc
mov
xorl
xor
xor
out
sub
push
int3
fcompl
popf
mov
adc
adc
mov
imul
scas
dec
xor
sahf
lcall
push
cmpsl
gs
sbb
add
int
jecxz
rcrl
call
insb
js
xchg
test
or
test
lcall
leave
negb
outsb
jnp
dec
xchg
outsl
adc
out
adc
sarb
cmp
in
cmp
mov
test
scas
add
lock
pop
popf
test
test
rolb
out
xchg
dec
jmp
push
mov
rclb
push
sbb
and
mov
es
xchg
mov
mov
leave
cltd
xchg
jle
out
mov
add
fsubs
xchg
pop
lock
dec
mov
push
lret
shll
inc
or
orb
adcb
inc
xchg
cs
insl
mov
mov
lret
sub
mov
inc
fucomip
cmp
lea
jo
jle
inc
js
sbb
xor
sti
mov
sahf
outsl
dec
add
jle
pop
pop
xchg
fidivrs
push
sbb
ss
cmp
pusha
std
mov
scas
lds
adc
fsubrl
pop
das
cmovg
sarl
daa
loopne
int
lret
or
ret
xchg
jge
mov
sbb
movsl
push
cmpsb
adc
gs
into
push
dec
push
adc
fwait
cmp
push
jnp
mov
adc
push
or
in
inc
inc
cmp
inc
mov
rcll
stc
jl
xlat
cs
loop
mov
lock
push
scas
rcrl
shll
in
inc
imul
lods
test
cmp
inc
mov
pop
xor
hlt
gs
adc
flds
dec
push
and
mov
or
out
mov
rol
outsb
loopne
push
inc
jl
xchg
mov
or
push
es
jge
inc
cmp
sbb
clc
mov
loope
dec
test
decb
addl
sbbl
jbe
pop
repz
jbe
leave
pop
scas
loope
aad
fld
fmull
sbb
in
fdivp
int
lods
ja
fnstenv
pusha
jno
rorb
test
adcl
sub
pop
push
fstp
adc
cwtl
fmull
sbb
jae
fwait
mov
std
jecxz
pop
fwait
lahf
xor
popf
and
and
pop
cmp
addr16
mov
and
jb
sbb
push
insl
addr16
mov
mov
jo
add
and
dec
xor
and
mov
les
imulb
ficomps
mov
fildl
xchg
xchg
insl
test
stc
ds
sub
int
xor
cmp
and
jbe
jnp
gs
daa
pop
mov
jae
add
and
addr16
cmpsl
or
out
xchg
dec
push
and
and
arpl
lds
jg
out
fimull
adc
add
pop
add
loope
popa
imull
fistpl
stc
mov
fwait
lods
add
pop
or
dec
pop
fsubrl
sarb
ljmp
fbld
faddp
fwait
out
fcmovu
dec
imul
pop
in
sbb
test
cli
and
dec
popa
xchg
add
orl
test
cmpsl
subl
and
pop
pop
idivb
hlt
mov
test
rcrl
std
rclb
adc
addb
jle
loope
mov
mov
dec
fsubrl
push
push
int
and
dec
movsl
sub
mov
inc
xlat
sbb
jnp
mov
push
movsl
fnstenv
cli
ret
jb
mov
mov
inc
push
pop
cmpsl
fistps
fildll
lret
aam
jge
mov
jecxz
push
pop
pushf
sub
jb
push
sub
les
lea
lods
xor
inc
in
fists
std
lea
addr16
fisubs
cmc
jle
test
cmpsl
dec
push
ss
sbb
mov
sti
push
push
add
bsr
outsl
xchg
mov
pop
pop
ror
push
lahf
movsl
fsubp
cmp
adcb
mov
and
cld
gs
mov
inc
mov
mov
dec
icebp
xchg
fsubp
fadd
push
mov
mov
hlt
int3
test
sub
cmp
movsl
and
loop
xor
in
out
inc
daa
pop
sub
sbb
and
testb
lret
jle
sbb
lods
and
xchg
push
xchg
out
scas
mov
les
sbb
jns
push
mov
xor
dec
push
add
cmpsl
adc
pop
ficomps
jae
outsb
pop
cmpsl
inc
cmpsl
lods
lock
aaa
pushf
data16
out
test
sbb
mov
in
add
or
dec
jmp
aas
add
scas
les
mov
andl
cmpsl
mov
fwait
sbb
xor
notl
add
adc
subl
dec
inc
repnz
jnp
mov
mov
jne
test
popa
dec
add
das
pop
sbb
inc
mov
insl
movsb
lods
dec
into
xor
xor
aad
rclb
in
mov
loop
dec
lcall
clc
mov
inc
xor
add
adc
xchg
inc
xlat
dec
mov
loope
push
popf
ret
jg
jne
inc
inc
inc
pushf
stc
push
fisubl
mov
pop
mov
sub
xchg
sbb
mov
xchg
fadds
jg
lock
push
mov
pop
test
mov
stos
fstpt
push
out
mov
sbb
dec
ror
or
sbb
imul
mov
mov
mov
imul
jge
int
mov
adc
fstps
sti
jle
repz
arpl
add
stc
xchg
push
leave
call
add
aad
jnp
xchg
dec
in
loopne
test
inc
pop
xchg
push
fsubp
test
or
shll
pop
mov
push
fcompp
sbb
push
sub
test
dec
ret
xor
roll
adc
xchg
pusha
into
push
nop
and
sub
pop
std
es
dec
inc
xor
out
sub
test
je
in
jno
xchg
cltd
push
aad
mov
cltd
mov
inc
lret
xchg
inc
test
pop
aam
std
jl
sub
xchg
fldenv
inc
idiv
in
dec
mov
push
pop
jns
fstpl
sub
rcrl
cmp
cmpsb
xlat
sub
call
addb
arpl
in
inc
sbb
jne
sub
test
fnstsw
inc
sub
push
ss
enter
cmpsb
adc
mov
xor
inc
mov
insl
mov
mov
leave
pusha
scas
mov
pop
daa
sbb
jl
inc
xor
pop
mov
ss
pop
xchg
jp
lods
popf
dec
outsb
and
inc
test
xchg
lods
test
mov
sarb
inc
or
sbbb
cmp
imul
in
xor
and
test
xchg
mov
mov
pop
call
andb
sbb
stos
scas
adcl
movsl
sti
test
loope
xchg
out
cmpb
out
sbb
mov
mov
xchg
mov
sar
pop
cmp
push
idiv
mov
das
xor
and
and
pop
mov
and
sub
out
push
movsb
mov
add
push
jbe
push
loopne
xadd
mov
mov
push
cmpsl
pop
mov
lds
mov
test
bsr
bound
test
push
scas
jno
mov
hlt
std
mov
and
decb
xor
lds
dec
cmp
inc
fcomps
and
mov
cltd
push
addr16
xor
sub
lds
mov
xchg
repnz
add
stos
loop
pop
es
cli
addl
xlat
or
mov
out
sarl
fistpl
hlt
loope
es
lcall
jnp
mov
mov
enter
mov
dec
lahf
xchg
in
mov
and
inc
out
mov
push
xchg
daa
inc
hlt
popf
out
jo
fnop
fcoml
cmp
decb
mov
fcmovnb
hlt
scas
and
stos
mov
lock
orb
movsb
jecxz
std
lods
push
mov
in
pop
cmp
aam
push
insb
lds
idiv
bound
push
xchg
push
mov
sub
out
sbb
adc
ficoms
mov
lock
fnstenv
pop
popa
fs
outsl
mov
adc
inc
push
pop
push
imul
movsb
push
test
sbb
data16
inc
popf
mov
lods
or
cmp
loope
sbb
or
mov
mov
loop
in
ljmp
jbe
aam
insl
sbb
pop
and
test
mov
cmp
add
aam
call
inc
mov
or
out
aas
mov
mov
add
icebp
fmul
add
cmp
scas
das
jp
test
testb
jle
cli
inc
test
mov
andb
jo
imul
cli
jg
push
js
or
xor
push
sbb
and
es
adc
ljmp
repz
iret
mov
cmp
ficoms
lods
sub
pop
jae
shlb
fcomi
cmp
and
mov
ljmp
leave
rolb
fld
dec
fsubrl
mov
pop
leave
dec
lods
and
orl
es
xchg
divb
xlat
xchg
xchg
subb
imul
lods
dec
mov
mov
and
push
inc
jbe
dec
jo
jle
dec
xor
mov
or
adc
jp
lcall
cmc
xor
in
mov
cmp
das
push
imul
sti
icebp
int
dec
cmp
das
es
mov
fstps
jbe
adc
or
add
sbb
cli
outsl
popf
lds
pop
mov
movsl
test
das
or
mov
repz
and
in
decb
fs
jmp
inc
lahf
fwait
gs
pop
jmp
test
and
xchg
sbb
push
mov
leave
inc
fldcw
test
push
mov
mov
mov
mov
lods
cli
clc
xor
in
mov
and
xchg
and
cmp
popa
mov
and
insb
mov
xchg
inc
mov
push
xchg
jb
mov
dec
xor
mov
fwait
in
sub
loopne
xchg
mov
jg
xlat
jecxz
loopne
and
inc
cli
xor
or
lods
push
lahf
pop
in
into
xchg
pushf
mov
loop
mov
push
xor
fildl
lods
adc
inc
jmp
mov
fs
cmp
faddp
out
fdivrl
add
pop
push
lret
jmp
inc
fisttpll
popf
cld
je
cltd
mov
mov
sbb
cli
and
adc
lcall
gs
cmp
mov
push
lret
adcb
fadds
fsin
add
jecxz
jbe
add
mov
xchg
icebp
or
leave
es
mov
lcall
into
inc
adc
ror
inc
mov
in
lods
rorl
cmp
inc
or
icebp
insb
ss
inc
push
lea
into
sbb
js
jp
out
es
arpl
push
test
int
lcall
xchg
mov
mov
lods
sub
outsb
cmp
stos
outsl
stc
push
and
adc
jp
mov
inc
mov
test
lret
ret
pop
mov
pop
out
hlt
sub
orb
flds
mov
std
sub
js
enter
adc
popa
sbb
adc
and
sbb
and
xor
adc
mov
inc
das
out
pop
cmp
sarl
ret
inc
cmp
push
fprem1
test
stos
ret
cli
mov
mov
sbb
mov
lock
or
sbb
inc
add
push
test
arpl
adc
loope
inc
rcrb
imul
or
leave
dec
movsb
mov
mov
ljmp
inc
mov
sub
sub
xor
mov
mov
and
sbbb
jb
cmpsb
mov
clc
mov
push
and
jge
push
pop
popa
addb
push
mov
sarl
jnp
cli
or
pop
mov
inc
xor
dec
std
fldenv
pop
fmulp
cmpsb
jg
or
push
andps
mov
mov
and
outsl
sti
int3
lods
inc
hlt
ss
inc
ret
jl
insl
mov
and
pop
inc
sti
dec
pushf
je
aaa
sbb
or
jle
aad
fldcw
filds
add
jbe
xchg
repz
cltd
out
lcall
data16
mov
cmp
xorb
dec
cmp
sub
mov
and
sbb
clc
daa
sbb
jnp
scas
aaa
and
and
arpl
mov
out
je
out
xor
aas
dec
cmpsb
dec
mov
testb
sahf
dec
fldenv
ja
jne
pop
lods
xchg
xchg
inc
push
test
pop
repnz
outsl
aad
fnstenv
or
nop
mov
sub
aam
xchg
imul
mov
ficompl
jecxz
cmp
cmp
mov
mov
imul
orl
fisubrl
test
dec
mov
aam
testl
out
pushf
xchg
test
gs
fwait
mov
movsl
jnp
xor
je
sbb
dec
rolb
xchg
movsl
outsb
jnp
jp
shl
repz
mov
mov
lock
mov
ret
test
shll
mov
or
mov
stos
js
std
jnp
lds
sub
stos
adc
addr16
push
movsb
cltd
movsb
mov
mov
and
shll
in
jnp
into
out
fs
aaa
insb
push
sbb
lds
in
pop
inc
rcll
or
movsb
test
adc
lret
add
jae
sub
pop
cld
fisubrs
int3
cli
inc
out
jbe
lods
lds
or
movsl
jae
andl
sti
sbb
jp
jecxz
push
cs
fimull
sbb
shll
xor
adc
mov
mov
mov
jne
cmp
cmp
aad
dec
pop
mov
sub
lock
pop
rorl
mov
stc
inc
test
mov
push
lods
popf
jb
or
mov
inc
adc
in
addr16
inc
out
imul
push
inc
sub
adc
hlt
dec
pop
and
mov
out
mov
imul
test
call
mov
fcmovnb
fcoml
mov
push
or
std
xchg
cmp
out
adc
mov
mov
pop
popl
mov
cmp
daa
mov
movd
mov
mov
cwtl
fsts
push
pop
test
jmp
arpl
lods
stos
pop
dec
xchg
push
mov
mov
fwait
adc
das
mov
sti
dec
int3
adc
ret
cmpl
pop
sub
mov
sbb
mov
ret
pop
mov
mov
std
xor
inc
inc
add
addr16
pop
jmp
and
stos
loope
movb
fisttpl
pop
xor
sahf
aam
hlt
mov
jmp
ficoms
dec
clc
adc
movsb
sahf
push
test
lret
data16
cwtl
jb
pop
lock
add
jge
cmp
jg
aad
ret
xchg
mov
into
inc
sbb
xor
lock
inc
cmc
jp
push
aad
repz
int3
push
sub
lds
mov
imul
pop
jmp
test
imul
or
sbb
jge
daa
pusha
es
add
test
add
adc
mov
daa
cmpsl
xchg
add
rcrb
jnp
stos
enter
arpl
insb
cmp
leave
mov
js
sbb
fidivrs
pushf
loope
into
mov
add
addr16
sahf
push
sahf
shrl
xor
test
mov
sub
push
pop
scas
in
mov
inc
pop
das
cld
jnp
inc
outsl
inc
leave
and
fisubs
pop
les
ret
loope
popa
in
mov
jne
scas
sarl
jecxz
xchg
int
add
sub
and
lock
mov
mov
mov
cmp
add
cmp
mov
sbb
fisttpl
cmp
jbe
and
pop
icebp
jne
mov
cmp
imul
fnstenv
inc
xlat
arpl
outsb
std
sub
sti
nop
in
jnp
pop
testl
inc
xchg
jbe
mov
xlat
gs
dec
cmp
push
pop
xlat
or
out
test
nop
repnz
cmp
fnstcw
out
mov
icebp
leave
ret
fidivs
dec
dec
sub
lea
bound
hlt
mov
in
lds
movsb
add
xor
inc
fiadds
sti
add
mov
mov
add
hlt
scas
lret
mov
ljmp
scas
sub
mov
fsubl
mov
dec
sbb
or
and
das
xor
int3
cli
mov
rorl
sub
cltd
mov
jne
and
or
jns
hlt
mov
inc
mov
inc
push
out
cwtl
cmpl
enter
cmpl
sub
dec
scas
and
addb
lahf
repz
mov
out
inc
xchg
mov
loop
add
xorl
fildl
ja
mov
xchg
pushf
sbb
xor
lret
sbb
repz
int
lret
mov
mov
sub
icebp
and
sbb
or
lods
es
xor
cltd
outsb
adc
adc
and
repnz
inc
mov
sub
in
xlat
testl
xor
dec
xor
jae
xchg
cmp
mov
mov
mov
es
xchg
mov
push
xor
ds
adc
sahf
lret
and
jmp
jno
jp
jmp
xlat
repnz
xchg
ljmp
clc
enter
cmp
sbb
std
mov
inc
std
clc
mov
dec
adc
add
pusha
ret
and
shll
jmp
sbb
cld
lret
shl
cmp
pop
stc
inc
lret
xchg
aad
fldenv
push
xor
test
jne
dec
scas
pushf
int
push
dec
mov
jno
insb
loop
mov
xlat
mov
push
jno
inc
mov
xor
loop,pn
mov
dec
lods
popl
mov
adc
shll
xchg
andb
sti
aam
inc
fdivl
xor
fwait
push
in
repz
mov
jp
lcall
fidivs
fldl
int
fisttpl
add
mov
out
in
repz
js
je
flds
or
adc
mov
push
fdivr
pop
mov
pushl
push
out
xchg
mov
xor
add
cmpsb
scas
das
push
lret
cmpsb
inc
test
iret
in
sbb
and
cli
lcall
mov
jb
push
js
fsubrl
xchg
out
aam
scas
xor
mov
pop
imul
dec
push
cli
xchg
inc
push
cld
popa
rorb
in
rclb
mov
sbbl
xchg
lds
and
xor
sbb
xlat
cmp
arpl
sub
sub
movsb
push
popa
push
pop
mov
mov
popa
push
fwait
sbb
sub
jle
enter
fcom
sub
fsubp
iret
mov
cmp
std
inc
add
movsl
into
sbb
inc
das
outsl
mov
mov
mov
in
dec
sbb
cmp
pop
in
mov
and
adc
mov
fnstsw
enter
lahf
jb
out
mov
out
jno
repz
xchg
mov
outsl
pop
mov
jno
int
xlat
outsb
leave
xor
out
push
or
pop
movsl
add
aaa
adc
pushf
and
outsb
outsl
shll
or
lea
jp
lret
sub
repz
cld
pop
test
add
xchg
aam
aam
pop
lods
or
and
mov
and
mov
inc
mov
std
les
movsl
jmp
fcmove
test
movsb
outsb
mov
out
icebp
adc
ja
and
push
nop
sarb
movsb
call
and
nop
in
cltd
xor
inc
loopne
xchg
int3
mov
mov
sub
jnp
or
negl
sbb
and
lods
sbb
xchg
adc
lods
sbb
setle
ss
popf
mov
fstpt
popf
lods
and
mov
popf
int3
pop
and
mov
sub
pop
cmp
cmc
sti
pop
inc
dec
mov
sahf
mov
mov
jecxz
lret
sbbb
popf
lods
pop
repz
std
movsl
es
inc
inc
icebp
mull
les
mov
ret
sarl
das
xchg
pop
dec
pushf
sbb
ficoms
and
sub
mov
pop
xchg
push
or
jecxz
gs
dec
popf
cmp
das
movsb
cmp
mov
pop
add
pop
aad
js
outsb
mov
fnstenv
inc
ret
jmp
shrl
rolb
loop
mov
jecxz
push
call
pop
jae
cmpsl
jp
scas
movsb
xchg
mov
add
sbb
mov
jae
mov
mov
xor
test
and
cmp
mov
dec
jmp
xchg
pop
sbb
push
cs
std
test
aaa
fcompl
and
push
xchg
loopne
es
add
lds
or
push
mov
xchg
jmp
out
push
hlt
sbb
lods
push
mov
dec
add
gs
daa
std
pop
push
pop
ficoms
iret
cmp
inc
and
mov
lret
ds
aaa
xchg
cmc
mov
fadds
mov
insl
inc
mov
pop
dec
dec
dec
jb
mov
cmp
test
icebp
pop
sub
sbb
mov
adc
cmpsl
fcmovne
xlat
bnd
ret
lods
xchg
push
and
xchg
pop
pop
mov
clc
out
adc
xchg
cmp
rcrl
mov
scas
add
cmp
scas
or
mov
js
arpl
in
pop
clc
jmp
fld
ret
sbb
xorb
or
pop
lret
add
sarl
xchg
lock
sahf
cmpsl
mov
jle
pusha
pusha
stc
shlb
lret
psllw
xchg
sahf
fmull
fld
cmp
addr16
or
ss
and
lods
mov
fdivs
popl
std
lods
jle
fwait
xchg
or
in
dec
adc
lcall
pop
jmp
es
xchg
cmc
mov
loop
dec
mov
stos
cmp
nop
push
inc
data16
lods
mov
lock
std
aad
mov
int3
leave
jg
fisttpl
mov
push
repnz
xchg
nop
lcall
stc
push
pushf
push
repz
and
js
clc
pop
pop
addr16
mov
xchg
cmpsb
and
lea
push
shlb
pop
pop
fsubl
xchg
mov
lahf
adc
add
or
adc
mov
fabs
insl
mov
pop
xlat
mov
mov
xchg
fwait
push
int3
lahf
lods
fcompp
fildl
in
pop
mov
mov
rep
push
mov
mov
imul
or
dec
js
jp
ja
dec
jb
hlt
sbb
stos
xor
repnz
arpl
add
and
lock
mov
inc
mov
push
mov
clc
mov
sbb
imul
sub
xchg
mov
jp
sub
sbb
mov
adc
scas
dec
aas
iret
cld
push
mov
mull
push
aaa
out
cltd
in
stos
sub
fwait
and
in
push
cmpsl
stc
mov
repz
fnsave
call
pop
mov
pop
xchg
adc
xchg
jnp
add
sarb
popa
cld
adcb
test
fbstp
jnp,pn
in
sbb
inc
cmpsb
arpl
repz
sahf
jmp
imul
jbe
mov
and
in
mov
dec
pop
jns
xor
jbe
jle
jnp
xor
aam
push
movsb
inc
cs
scas
mov
outsl
adc
mov
jg
test
or
dec
ss
shlb
out
sub
fidivs
mov
sub
pop
bound
dec
add
fcmovb
add
popa
jns
sbb
xor
jge
cmp
mov
pop
mov
fistpll
scas
loope
xor
icebp
fs
lahf
push
fs
mov
dec
sub
add
xchg
lcall
mov
mov
mov
adc
sub
in
xchg
cld
insb
out
pop
mov
dec
sbb
mov
adc
clc
flds
sbbb
xchg
out
out
les
rcll
fs
inc
enter
jnp
xchg
jecxz
andb
pop
and
push
xor
fldenv
mov
dec
lods
inc
and
sti
xchg
and
cli
push
int3
daa
jge
cmpsl
jns
stc
dec
int3
mov
xchg
imul
pop
jge
push
push
adc
adc
jns
test
or
dec
ja
int3
test
int
sbb
shlb
cmc
mov
je
ds
inc
in
lds
fidivs
xchg
mov
pop
cs
or
cmp
addl
cmpsb
jecxz
imul
inc
add
or
test
pop
popf
movsl
xlat
addr16
dec
imul
cld
sbb
or
push
out
icebp
iret
bound
fnstenv
push
lcall
mov
mov
add
jae
mov
push
dec
out
sub
mov
loop
mov
jl
data16
xchg
cmp
ret
sub
leave
fcomip
mov
out
fidivrl
outsl
gs
cs
movsl
mov
aaa
and
bnd
aad
sub
imul
jecxz
leave
pop
sub
inc
adc
adc
adc
xlat
and
scas
retw
les
std
fstps
push
sti
mov
cmp
fisubl
inc
jno
int
in
dec
aaa
or
mov
dec
fistl
cmp
int3
in
pop
jnp
or
mov
sbb
loop
pop
ret
pop
dec
dec
lcall
xor
fidivl
les
pop
push
popf
roll
stos
sbb
stc
cmp
pop
mov
pusha
mov
mov
xchg
ret
add
adc
lcall
loopne
pop
dec
and
popf
pop
xor
or
cmp
xor
xchg
stc
cmp
or
xor
clc
add
cmp
add
xor
enter
mov
nop
adc
scas
and
into
xor
or
sbb
ret
lods
lock
jns
fnsave
sbb
andb
or
rcr
and
jno
sete
and
js
pop
dec
imul
movsl
add
inc
ret
cmpsb
data16
clc
dec
and
ss
inc
test
mov
adc
rcrb
repz
movsl
sbb
lret
lock
aam
and
cmp
or
aam
je
stc
in
xchg
aaa
push
xchg
test
inc
and
aaa
insb
xchg
sbb
test
nop
imul
aaa
outsl
enter
jno
jns
out
outsb
xchg
inc
xchg
jnp
cltd
mov
fs
in
dec
sub
mov
test
jmp
inc
imul
std
movsl
jnp
cmp
adc
mov
pop
lods
xlat
mov
rcll
xor
dec
stos
pop
fstl
inc
les
cld
sti
dec
subb
cvtps2pd
fsubrl
leave
adc
gs
push
inc
cld
rclb
mov
mov
push
pop
cmp
dec
dec
lock
lret
movsb
fsubl
shl
jne
inc
icebp
push
pop
std
push
push
mov
mov
repz
sbbb
jg
scas
test
adc
test
sarl
lds
lock
mov
jl
add
pop
pop
loop
push
fiaddl
mov
xchg
sbb
stc
sub
das
sbb
push
and
lret
sahf
jp
mov
ret
pop
jmp
mov
roll
shl
aam
xor
and
add
mov
sarl
xchg
cmp
jns
adc
jecxz
xor
jnp
cltd
cmpsb
clc
dec
bnd
fldcw
lods
and
ror
test
push
hlt
pop
in
test
stos
fldenv
cli
repnz
fmuls
test
hlt
sub
mov
ret
push
inc
jp
xchg
je
sbb
fldenv
cmp
divb
dec
test
lcall
adc
xchg
mov
cltd
daa
inc
cmp
ljmp
mov
sbb
add
add
xchg
sti
shr
sub
sub
in
cwtl
cmp
fsts
sbb
pushf
imulb
test
shll
es
jb
add
adc
or
dec
push
iret
sti
dec
je
ljmp
out
inc
lea
adc
stc
test
add
pop
mov
jnp
dec
movsb
pop
cltd
and
ficoms
jg
cwtl
jmp
sbb
push
add
call
cltd
sti
pop
mov
pop
pop
pop
mov
cmc
test
mov
cmp
fisttps
loope
and
es
cli
dec
and
jle
movsl
dec
adc
inc
and
push
in
je
cmp
mov
movsb
mov
or
stos
xchg
gs
faddp
clc
js
inc
ds
in
mov
xor
subb
mov
xchg
les
cmp
int
and
jne
add
sub
mov
xor
inc
cmp
inc
das
lcall
dec
test
cmp
mov
pop
fistpl
mov
dec
mov
or
jge
lods
and
pop
outsb
stc
mov
fsts
adc
xchg
jbe
jb
sbb
sbb
int
jmp
mov
cs
mov
imul
push
mov
pop
outsl
jae
popf
jns
sub
mov
mov
int
push
jmp
xchg
in
jnp
cpuid
shlb
aaa
test
stc
inc
fimuls
rcr
sub
cmp
inc
jae
test
xchg
dec
rcr
mov
loope
mov
pop
mov
cltd
dec
popf
lods
jno
push
repz
in
and
mov
push
scas
in
pop
jno
mov
mov
push
das
in
sub
mov
rcrl
inc
push
or
rolb
mov
inc
jge
je
mov
mov
clc
pop
out
push
hlt
jg
xchg
lods
hlt
in
xchg
dec
or
pop
jbe
sbb
pop
mov
push
mov
push
sbb
jo
in
jne
and
xor
cs
jp
inc
sub
or
push
inc
in
fcompp
pop
mov
mov
sbb
dec
addr16
push
out
and
cltd
mov
xor
and
rep
adcb
sti
lods
xchg
pop
add
dec
xor
fnstcw
ja
xchg
test
scas
daa
movsl
mov
inc
out
popf
xchg
call
dec
push
in
out
cmp
std
push
aad
in
mov
lock
cmp
xlat
xchg
in
push
xor
scas
fstps
mov
xchg
aam
lds
imul
adc
mov
pop
pop
xor
sbb
loopne
cmpsl
clc
dec
xchg
int3
dec
adc
xor
xor
pop
popf
in
cmp
mov
ljmp
cmpsb
inc
mov
sbb
into
sub
cmp
jle
aas
sub
inc
dec
hlt
push
mov
fsubrl
ss
jge
test
stc
inc
add
or
xor
fidivrs
fcomi
into
call
mov
decb
sub
lods
push
push
jb
lods
pop
and
and
push
dec
xchg
int3
test
inc
ret
push
dec
arpl
pop
pop
repz
mov
divb
pop
fwait
mov
shrb
pushf
scas
es
add
enter
dec
mov
pop
jns
push
xchg
loopne
movsb
pop
xlat
clc
push
add
add
jb
mov
lds
loop
mulb
repz
in
pushf
test
xchg
in
icebp
xchg
push
sbb
sbbb
or
sti
dec
les
jl
dec
call
rcll
repz
scas
ret
xor
mov
dec
inc
lahf
sub
sbb
rorl
repnz
jle
push
fisubl
popa
adc
mov
or
outsb
fs
jns
jo
je
insb
mov
loopne
test
and
repnz
std
lods
jnp
fwait
imul
pop
jp
mov
or
lods
mov
movb
sahf
ret
dec
iret
pop
scas
sti
bound
mov
xor
les
add
shll
jecxz
enter
enter
push
mov
jecxz
test
sbb
adc
jnp
arpl
fcmovnbe
pusha
and
imul
sub
sub
sbb
sbb
mov
test
out
out
js
pop
in
mov
loope
and
push
andb
movsb
out
cli
fstpt
scas
scas
push
mov
ror
cmpsb
cmp
push
cs
lcall
or
loope
repz
xchg
movsb
testb
aaa
xchg
test
fs
mov
hlt
pushf
xchg
pop
addr16
ficoml
add
flds
cmp
xchg
xor
inc
scas
stos
arpl
cmp
and
data16
hlt
sbb
sbb
bswap
pop
jns
pop
ret
mov
push
cmp
jle
les
lea
jg
inc
cmpsl
jge
adc
push
loope
test
jmp
jmp
mov
out
dec
div
push
inc
movsl
mov
pop
xor
dec
scas
aam
repnz
sbb
mov
test
dec
insb
jae
mov
insl
lahf
imul
incb
shl
inc
cmp
loop
inc
jb
movsb
test
mov
int3
int
mov
fs
lods
mov
mov
popl
jl
cmpsb
xchg
and
out
and
inc
fcoms
mov
lods
dec
push
mul
fnsave
adc
pop
sbbl
pop
sti
xor
sti
jo
movsl
push
out
push
push
push
test
fsts
mov
sbb
test
mov
jnp
jnp
aad
push
push
scas
fnsave
add
cwtl
lcall
inc
imul
jns
popa
dec
mov
outsb
aaa
adc
and
mov
mov
or
rolb
add
imul
push
mov
pop
test
lods
dec
into
lahf
dec
int
flds
insl
cmpsb
push
inc
aad
in
push
adc
pop
sbb
and
jp
inc
xchg
fistps
xor
std
xor
repz
loope
mov
outsb
sbb
add
mov
or
adc
lds
sahf
loopne
pop
adc
mov
mov
lret
mov
lcall
test
push
fs
xor
out
pop
sysexit
les
pop
sub
and
mov
mull
repz
enter
xchg
lods
pop
mov
ret
fists
popf
dec
hlt
mov
scas
xchg
fistpl
inc
add
mov
inc
hlt
xor
cmp
movsb
outsl
mov
xor
pop
lods
sub
push
jmp
jbe
and
mov
gs
and
repz
cmp
sti
pop
test
fiadds
ret
xchg
imul
mov
call
dec
int3
sbb
aas
lahf
dec
fwait
into
jmp
inc
adc
inc
sahf
lea
movsl
sub
jl
adc
out
adc
pop
ss
jp
loope
daa
repnz
add
arpl
mov
pop
and
scas
in
fstpt
scas
std
xor
scas
xchg
test
adc
ficompl
push
fwait
loopne
lods
and
cmp
mov
das
mov
sbb
cs
jns
sarl
ja
adc
pop
jb
xchg
inc
icebp
push
test
inc
ret
inc
into
mov
xchg
sahf
push
mov
xchg
xchg
and
mov
rorb
in
dec
pop
sbb
int
clc
mov
lcall
sub
ret
std
mov
sbb
sahf
jge
cli
stc
sub
icebp
in
outsb
push
pop
cmp
mov
fldcw
lea
stos
sarl
inc
pop
xorl
enterw
cmpsb
mov
dec
cmp
rclb
inc
imul
int
cld
loope
mov
and
pop
mov
ror
fwait
jmp
mov
lcall
sbb
repz
aam
jp
int3
out
test
or
into
push
mov
jnp
repnz
lahf
add
pop
cmp
xchg
ss
mov
pop
adc
mov
adc
jmp
in
sbb
cmp
xor
sbb
out
and
pop
ret
dec
lcall
jmp
add
push
cld
or
mov
pop
push
dec
fnstenv
pushf
push
hlt
test
mov
cmc
stos
outsb
dec
outsl
movsl
inc
bnd
xchg
sub
andl
dec
add
imul
cs
repnz
cmp
rclb
add
inc
pop
mov
cmp
sub
dec
nop
test
dec
push
ret
ret
pop
aam
xchg
lods
or
test
jne
aaa
aad
pop
pop
cmp
mov
sub
jnp
ss
out
xchg
mov
mov
inc
push
aas
jecxz
jnp
test
dec
inc
mov
je
in
jo
sbb
in
and
cli
gs
test
sbb
inc
sub
push
adc
jne
mov
out
stos
cld
xchg
pop
push
fsts
adc
jno
jl
fbld
add
lcall
lret
sbb
and
or
adc
scas
mov
ja
fld
enter
pop
popf
scas
pop
cmp
rol
or
out
xor
icebp
mov
pop
hlt
cli
cmp
daa
mov
std
mov
fistpl
icebp
mov
and
fnstsw
aas
jno
sub
repnz
cltd
repnz
and
ss
flds
pop
mov
leave
enter
xor
setg
add
out
mov
mov
xor
stc
jp
in
dec
inc
and
sbb
lock
mov
pop
pop
sbb
pop
push
nop
add
arpl
push
ficoml
adc
enter
cmp
call
jns
sub
roll
cmp
and
mov
mov
das
test
mov
push
daa
sbb
flds
jle
repnz
insb
in
xor
mov
jae
push
pop
int
das
dec
add
sti
popa
test
sub
mov
and
mov
inc
or
clc
orb
imul
lock
push
mov
jmp
sbb
adc
sbb
mov
dec
mov
out
mov
cmpsl
stos
sub
or
push
out
andb
xchg
push
push
movsb
jecxz
pusha
inc
mov
in
pushf
and
xchg
pop
add
inc
and
leave
imull
mov
inc
mov
lds
mov
xchg
cmp
or
outsb
out
ret
mov
dec
and
cmp
or
inc
in
mov
std
pop
mov
sbbb
popf
shl
idivb
push
incb
jo
cmpsb
sub
rorl
inc
pop
nop
les
xor
sar
mov
ficoms
inc
lods
fisttpl
pop
cmpsl
sub
popf
ret
int3
xchg
pushf
jg
or
idivb
sti
out
inc
sub
xorl
jno
popf
push
in
int3
notl
or
insl
xchg
jecxz
sarb
pop
pop
cmpsb
pusha
sar
out
fistpll
and
aad
or
aad
xchg
cmp
cli
jg
imul
jae
mov
mov
cli
icebp
xor
mov
add
stc
insl
in
hlt
lods
sub
cmpsl
out
xchg
call
xor
sub
into
sahf
push
jle
sub
or
fnstenv
jae
mov
xor
cld
pop
mov
mov
sub
pop
clc
rorl
inc
les
and
lods
shrb
mov
aad
inc
popa
adc
icebp
cmc
mov
cmp
jo
fcomps
jmp
add
lods
add
in
jno
add
push
mov
scas
out
subb
das
sbb
ds
jb
std
lods
fcomps
fldcw
icebp
xor
adc
loope
cmp
dec
or
je
inc
test
stc
xchg
push
jno
cmp
cmp
push
daa
cmp
movsl
mov
push
push
movl
out
cmp
inc
faddl
inc
sub
movsl
loope
rcr
ja
movhps
cmp
insl
std
mov
lds
inc
push
push
loop
shl
andb
push
pop
fnstenv
mov
popa
add
sbb
mov
lret
inc
adc
js
xchg
clc
ret
sarl
jp
dec
jecxz
in
push
les
adc
xchg
or
shll
sbb
js
jg
lcall
mov
dec
xlat
xchg
test
fdivrs
push
push
jbe
mov
push
daa
jl
mov
mov
jmp
aam
ret
xor
ficoms
pop
enter
mov
andl
jge
adc
xchg
mov
movsb
cmp
aas
ljmp
fcompl
xor
arpl
pop
xchg
jo
cmp
xor
ret
fstl
aam
int
int3
sbb
ret
sub
jne
imul
mov
mov
or
lods
sbb
push
cmp
stc
add
mov
das
cld
pop
ja
fsubr
es
repnz
inc
js
pop
push
mov
push
les
imul
mov
scas
sub
das
xchg
or
hlt
lock
loope
mov
out
out
je
test
shll
push
sub
icebp
push
push
jbe
jecxz
into
aas
sbb
lock
stos
add
out
test
mov
das
adc
and
subb
push
fbstp
dec
cmp
cmc
repz
and
cmp
inc
outsl
mov
mov
fisubrl
shlb
addr16
add
scas
mov
adc
or
mov
scas
mov
cmpsb
or
xor
xchg
loop
and
sbb
xchg
int
jge
scas
cmp
and
inc
sbb
in
mov
ljmp
inc
cmp
insb
loope
cmp
push
fcomps
mov
call
in
pop
lea
xor
or
gs
shlb
jecxz
dec
aad
pop
in
repnz
sbb
dec
mov
inc
ficompl
jg
inc
mov
lret
pop
rorl
bsr
loope
sub
es
je
in
scas
aad
sbb
mov
inc
cs
fisubrs
sbb
stos
pop
rcrb
jp
ljmp
test
cmp
sub
pop
rcll
mov
cld
rcl
daa
sahf
add
xor
or
pop
fwait
addr16
jnp
and
test
test
inc
jbe
test
push
movsb
scas
iret
lock
shll
and
inc
pop
inc
mov
dec
mov
cmc
xchg
xchg
fsubrs
mov
gs
mov
in
push
xor
in
das
fwait
inc
imul
push
pop
adc
loope
les
xchg
jbe
mov
xor
jo
pop
imul
cmpsl
inc
insl
lahf
test
push
adc
cmp
pop
aam
js
dec
jae
adc
std
dec
mov
fmull
mov
insb
jo
lcall
jmp
sbb
ret
sbb
std
push
inc
lds
dec
mov
test
fldenv
mov
push
pushf
clc
test
cmovg
jge
insb
xor
jbe
lret
xchg
jp
xchg
dec
das
in
imul
xchg
int
or
inc
inc
push
jae
mov
jbe
in
xor
add
adc
in
mov
xlat
mov
xchg
mov
mov
lret
and
fldt
add
test
aas
insb
cmp
test
sbb
push
stos
stos
cld
je
fs
xlat
or
cli
dec
push
idiv
sub
and
push
and
xlat
sbb
xchg
loop
push
mov
mov
aad
nop
lds
mov
popf
or
fistpll
add
xchg
pop
ret
push
fldcw
out
sbbb
movsb
mov
mov
xor
xchg
pop
into
fs
jle
dec
add
sbb
sub
cmp
push
into
fidivl
das
scas
scas
mov
pop
mov
xchg
mov
aaa
adc
mov
std
cmp
xlat
das
cli
pop
fidivl
movsl
aam
iret
inc
cmpsb
int3
pop
inc
mov
lods
and
dec
jae
in
sub
cmp
lea
sti
out
cmp
scas
arpl
iret
inc
cltd
pop
inc
mov
clc
ret
mov
addr16
adc
xchg
sub
fwait
out
lcall
fs
sahf
lds
call
adc
adc
push
negb
jl
pop
dec
push
filds
int3
lock
mov
adc
ret
or
stos
jae
mov
cld
leave
cmc
push
scas
popl
adc
push
fwait
mov
outsb
jns
cli
movsl
cmpsb
mov
adc
or
add
cmp
sbb
lcall
xchg
push
hlt
xchg
inc
sbb
fldcw
fstl
pop
cmp
xchg
fidivl
mov
loopne
bnd
cmp
jae
jnp
in
in
push
inc
int
dec
repnz
mov
pop
mov
add
int3
test
imul
dec
inc
out
test
mov
adc
xor
mov
pusha
add
xchg
dec
sub
jae
or
aam
mov
pop
sub
xchg
jbe
nop
xor
test
scas
clc
das
xchg
inc
inc
and
out
mov
push
mov
mov
ja
movl
and
push
aas
and
fdivrl
jp
iret
aaa
cltd
mov
mov
test
popa
mov
push
fwait
leave
jle
loope
loopne
sbb
repz
mov
jnp
mov
popa
or
je
push
pop
xchg
fnstenv
mov
cmp
fistpl
mov
int
lret
add
jae
mov
jp
inc
pop
sub
cli
mov
shrl
rclb
js
push
lods
push
iret
push
fbld
xchg
mov
mov
inc
sub
lock
movsb
mov
bswap
in
stos
testb
ljmp
push
cmp
cmovge
fisubs
mov
xchg
lret
adc
mov
sbb
inc
aad
sbb
out
mov
ja
repnz
lods
xchg
pop
or
cmpsb
das
mov
je
cld
sub
inc
mov
fsubr
pop
mov
fiaddl
fdiv
mov
and
icebp
sahf
mov
push
shl
mov
lea
cmp
loope
stos
arpl
sub
faddp
adc
es
repnz
inc
fld
movsl
xchg
scas
jp
mov
xchg
movsb
sub
call
lahf
test
or
push
ficompl
jge
pop
inc
test
adc
pop
stc
hlt
stc
push
and
shr
lahf
mov
insb
cmp
fstps
jg
pushf
lods
stos
add
xor
xchg
and
and
dec
fidivs
insb
aam
mov
mov
pusha
mov
cli
subl
push
repz
fmull
mov
add
xchg
jns
ret
test
fucomip
inc
lret
popf
inc
cld
cmp
repz
mov
pusha
jns
dec
xor
jae
mov
outsb
mov
add
lea
out
fimuls
insl
push
dec
lahf
or
orb
inc
xor
push
push
mov
pushf
jecxz
jp
fsts
mov
testb
ja
incb
ja
inc
js
inc
cmp
pushf
or
repz
jl
xor
cmpsb
sti
inc
pop
pop
cmp
test
mov
lcall
sub
mov
lods
lods
les
jge
sub
scas
fcmovne
and
lock
jmp
xorb
or
fsubrp
xchg
pusha
aas
adc
adc
cmc
mov
mov
jbe
pop
in
mov
mov
cmp
mov
daa
fwait
xchg
std
jg
mov
sub
cmp
mov
dec
or
in
and
jl
test
clc
lods
pop
or
xchg
imul
push
mov
test
stc
je
inc
mov
pop
xor
mov
mov
leave
daa
andl
lret
lods
test
and
js
subb
dec
addr16
adc
clc
loope
in
fstps
gs
mov
mov
ja
jno
shrl
mov
pop
loope
fisubrs
scas
and
scas
jg
pop
jns
enter
fs
fistpl
sub
adc
jno
shrl
cmp
cmp
ss
xor
scas
mov
jmp
fildl
out
pop
arpl
xchg
in
jecxz
insl
inc
sbb
jl
xchg
sub
dec
and
adc
or
or
out
and
inc
fiaddl
test
mov
add
push
addb
sub
sbb
subl
in
push
movsb
push
inc
cmp
and
cld
mov
push
push
xchg
or
xchg
xor
pop
icebp
pop
dec
jns
stos
lods
mov
stos
repz
decb
xor
add
aas
inc
cmpsb
inc
cs
std
sahf
flds
sbb
fildl
sub
out
das
fldenv
add
cmpsb
and
xchg
xchg
inc
mov
je
ss
int
sti
fisubrs
inc
rorb
int
sbb
addb
ficompl
mov
push
pop
adc
addr16
mov
sbb
xchg
mov
mov
repnz
sbb
add
jge
js
mov
add
jb
mov
xchg
movsl
addr16
std
je
jp
test
cmp
or
test
popf
loopne
add
cmpsl
cmp
pop
inc
mov
test
test
in
cmp
mov
cmp
push
inc
lcall
scas
xchg
mov
xchg
orl
aad
pop
fisttpl
and
cmp
or
pop
mov
jmp
icebp
fildll
mov
adc
cmp
xlat
adc
fsubrl
mov
in
rclb
and
cli
sti
inc
dec
lock
pop
lcall
scas
arpl
dec
push
int
rcrl
mov
gs
sbb
push
and
in
mov
out
inc
test
jmp
fnop
pop
pop
arpl
dec
pop
outsb
mov
sti
jmp
xchg
daa
cld
movsb
and
fwait
push
mov
iret
adc
push
popf
mov
xchg
out
jb
xlat
outsb
popa
pop
mulb
cli
cmp
aad
sbbl
adc
std
inc
mov
movsb
lret
push
mov
pop
lcall
mov
jg
inc
stos
fsubs
sub
ss
push
fsub
dec
ja
sub
cs
push
dec
jns
mov
fmull
or
sub
cmp
inc
push
cmpsb
ss
pop
shrl
xchg
or
data16
cmp
mov
out
ds
dec
jns
push
jp
pushf
adcb
jecxz
aam
sarl
int3
jb
bound
and
fnstsw
into
xchg
and
stc
out
sbb
dec
xchg
rolb
in
popf
test
sbb
out
call
popf
movsb
stc
imull
mov
cmp
cld
test
cmpsb
addr16
lock
push
js
pop
pushf
test
mov
out
jecxz
mov
stc
inc
in
in
inc
inc
bound
adc
add
add
repz
jecxz
xor
lret
push
cmpl
push
push
add
sahf
hlt
addl
cmpsl
nop
std
mov
jno
out
mov
mov
cmp
in
push
loope
imul
rorb
adc
push
test
out
mov
push
pop
movsl
aas
mov
add
xchg
sbb
cli
hlt
ss
jmp
mov
rcr
and
xchg
push
mov
jo
and
xchg
inc
data16
mov
daa
test
movsl
mov
mov
or
pushf
adc
test
jmp
sub
push
and
movl
js
inc
adc
add
fnstcw
cmc
arpl
repz
xor
add
icebp
sub
in
pusha
jle
scas
lret
data16
mov
stos
add
sahf
iret
mov
push
xlat
sub
test
mov
mov
loopne
inc
mov
cmp
cmpl
hlt
inc
test
test
pusha
rcl
dec
push
es
cmpsb
ret
sahf
add
es
int3
cli
test
xlat
and
cmp
push
lods
xlat
mov
test
pop
xchg
pop
add
movsl
outsb
je
sti
inc
cmp
sbb
shlb
fisubs
data16
shrb
xor
nop
lret
ficoml
sub
or
mov
jp
pop
rcrb
inc
call
imul
jns
push
mov
mov
push
inc
dec
fbstp
adc
lea
cmp
imull
xor
lahf
mov
and
mov
mov
das
mov
pop
inc
inc
jmp
push
mov
flds
data16
add
jle
inc
clc
sbb
loop
xchg
push
mov
fldl
stos
xor
in
je
mov
lcall
popf
stc
shll
adcb
push
rcrb
test
xor
scas
pop
xchg
popa
xchg
aaa
xorb
pop
push
sub
push
pop
xlat
lcall
mov
fldt
and
fidivrs
adc
scas
enter
stos
sub
repz
lret
xor
xor
fdivs
pop
cmp
pop
mov
mov
mov
test
cmp
inc
outsb
test
and
xor
test
popf
scas
and
fldenv
mov
or
js
sbb
and
pop
or
cmp
lahf
das
lahf
cmp
sbb
cmp
dec
and
pop
sub
stc
lahf
sbb
adc
fwait
inc
sahf
pop
call
lret
int3
rolb
cmp
mov
sbb
scas
jg
or
leave
mov
jnp
cs
lea
xchg
inc
add
adc
push
jp
push
repz
mov
push
jge
test
dec
sub
clc
in
push
pop
pop
scas
dec
ja
in
es
mov
cmp
fdivrl
fs
jae
xor
pop
xor
test
mov
arpl
test
or
fisttpl
adc
scas
stos
test
mov
fildll
test
and
stos
fidivrs
or
cmp
test
mov
test
jae
push
or
push
xchg
rcrl
test
jae
testl
cmp
xchg
stos
scas
dec
dec
jg
aas
add
dec
push
pop
pusha
ss
lea
cmp
mov
sarl
lds
jmp
loope
mov
rcrb
jae
xchg
and
lock
loop
or
cmp
sub
and
aad
sti
push
cmp
inc
in
sbb
xorb
hlt
mov
stos
scas
push
add
xlat
jle
push
add
imul
in
inc
and
loop
clc
repz
leave
adc
cmp
scas
scas
fisubs
mov
ret
imul
xor
push
fwait
push
xchg
movsl
in
test
sbb
sub
xchg
out
mov
jno
mov
out
in
sub
inc
cs
flds
fsubrl
pop
roll
shl
scas
pop
loopne
out
cmp
adc
mov
ljmp
xor
jbe
movsl
aad
mov
cs
icebp
cmp
inc
jbe
aam
in
and
mov
jae
fiadds
cld
cmpl
or
test
and
or
mov
sti
fwait
fs
push
lods
cltd
dec
xchg
and
dec
out
insb
out
cmpsb
leave
xchg
inc
pop
pushf
fdivrl
jecxz
jp
fisubs
cwtl
push
sbb
test
ret
fisubs
mov
xchg
add
mov
xor
outsb
sbb
loop
js
sbb
xchg
mov
int
andb
lcall
stc
sub
in
int3
jge
in
dec
loop
cli
andb
testl
fadd
sti
jecxz
pop
and
jae
pop
push
mov
mov
fwait
popa
cmp
xor
dec
adc
xchg
dec
push
sub
pop
xchg
push
call
into
cmp
int
stos
repnz
mov
hlt
daa
pop
out
or
cmpsb
stos
add
or
je
mov
sbb
mov
imul
pusha
js
insb
sub
mov
aam
jge
loop
mov
mov
lcall
mov
cmpsl
jae
cs
jmp
and
cmp
rorl
inc
fidivrs
rcl
stc
xlat
fsub
xor
je
push
pushf
icebp
sub
iret
or
repnz
xchg
or
hlt
test
xor
dec
jae
scas
add
pop
pop
mov
adc
mov
mov
xchg
sub
mov
out
or
jnp
call
or
sahf
subb
mov
sti
jbe
cmc
adc
js
lds
xor
test
ficoms
xchg
mov
mov
fldcw
dec
popa
push
jns
stc
lock
mov
ffreep
call
sahf
das
pop
je
sub
test
xor
jno
or
std
xchg
push
popf
es
fstp
movsb
shrb
pop
mov
test
addr16
pop
inc
imul
push
or
push
fsubrl
test
jno
sbb
scas
iret
mov
loope
mulb
movsl
aam
mov
and
fiadds
mov
add
cmp
mov
xchg
cmp
xchg
xlat
int3
mov
sbb
inc
ss
push
aas
faddp
jnp
iret
dec
cltd
in
pushf
cld
push
je
or
sarl
xor
xchg
pop
sarl
mov
dec
leave
adc
sub
arpl
leave
in
mov
cli
cld
sbb
scas
push
jbe
in
inc
jp
jecxz
inc
movsl
fldt
mov
enter
ljmp
xchg
and
or
or
js
mov
outsl
lods
add
adc
pop
pop
sti
and
xchg
xchg
icebp
in
leave
sbb
jmp
cltd
or
pop
out
fwait
mov
lret
add
lods
pop
sbb
cmp
pop
sti
or
popa
iret
mull
call
out
jae
ss
popa
sbb
cmpsb
fld
movsl
in
xchg
in
jl
fisubl
aam
add
xlat
stc
rclb
fwait
cmp
mov
nop
andl
jo
adc
out
int
test
jbe
pop
push
sbb
jle
fldcw
iret
movsb
sbb
insw
jb
pop
insl
negl
fwait
clc
adc
sbb
pop
sub
inc
mov
jp
mov
xor
out
xor
out
ljmp
sub
push
jb
sub
mov
das
or
es
out
sbb
pop
cltd
mov
jmp
mov
sub
jge
cmp
adc
sbbl
mov
dec
stc
addr16
mov
push
mov
xchg
or
movsb
loope
rcll
lock
mov
dec
mov
pushf
std
xor
mov
fisubs
pop
push
jecxz
dec
xchg
inc
mov
je
jg
sub
dec
sbb
sbb
xor
aad
fucomip
popa
jp
jns
fdivr
dec
movsl
cli
jl
or
mov
arpl
or
adc
mov
dec
mov
sete
jecxz
adc
lret
fucom
xchg
ds
cmpsb
adc
adc
ficoml
scas
insb
inc
ret
inc
mov
cmp
movsl
aad
adc
mov
sarl
movsb
fsts
sbb
nop
xchg
xchg
jnp
mov
and
stos
fcmovnu
dec
lret
sbb
scas
lea
lods
inc
data16
cmp
jb
pop
push
inc
jp
adc
cmp
push
bound
mov
ss
cld
and
and
sub
in
xchg
adc
clc
mov
mov
ss
inc
ds
rol
dec
jecxz
jae
cmpsl
pop
out
test
mov
sbb
pop
int
cmpsb
fwait
push
mov
out
dec
xchg
stos
iret
addl
roll
lret
ja
sahf
test
out
cwtl
add
les
push
sub
adc
lods
pop
or
fdivl
inc
xchg
inc
dec
lret
mov
push
push
jge
sarb
sub
or
mulb
mov
cmpsb
sbb
pop
sbb
dec
cmp
push
dec
ss
int
push
in
popf
xchg
push
mov
mov
ret
cmpsb
clc
jae
jge
mov
mov
andb
push
rcrb
push
std
pop
data16
dec
jo
dec
lock
mov
mov
imulb
es
xchg
xchg
cmp
add
add
call
enter
scas
dec
and
and
outsl
mov
mov
sbb
inc
and
sbb
adc
pop
add
push
adc
testb
cmp
pop
movsl
mov
jae
iret
xchg
cmp
je
push
sbb
idivb
in
or
in
ja
push
sarl
add
in
notb
adc
adc
stos
push
xchg
jbe
je
push
pop
pop
mov
cs
in
sbb
mov
cmp
sub
aaa
mov
add
jbe
das
jae
outsl
test
xchg
and
sub
push
push
popf
mov
ds
sti
mov
nop
push
fsubrp
and
fwait
mov
cmpsl
aas
mov
hlt
arpl
lods
pop
imulb
js
inc
sahf
jb
std
test
xor
stc
xor
jecxz
sbb
add
into
popf
loope
and
cltd
mov
mov
gs
xor
out
test
lods
jne
mov
adc
mov
popa
or
cmpsb
mov
dec
mov
mov
cmc
fsts
stos
bnd
pop
and
xor
xchg
add
or
in
sbb
cmc
mov
fwait
inc
movsl
scas
pop
pop
out
mov
scas
mov
add
sbb
inc
push
push
push
sbb
mov
cmp
loopne
out
les
mov
mulb
xchg
enter
push
call
xchg
rolb
cmp
cmp
mov
into
mov
xchg
mov
cs
outsl
xchg
sti
push
sti
shl
in
out
lcall
sub
xor
in
lods
cmp
xchg
js
add
and
daa
popa
and
or
cmp
imul
xchg
adc
push
mov
jnp
jge
ret
in
insb
mov
lea
sbb
and
xor
repz
cmp
enter
xor
adc
sbb
in
cmpsl
cli
hlt
mov
rcrb
cltd
repnz
std
adc
test
test
lret
imul
aam
movsb
addr16
shlb
pop
out
push
in
jnp
cmp
xchg
orb
mov
addr16
popf
shr
inc
leave
dec
push
jnp
lods
xlat
test
xor
outsl
or
cmpsb
xor
xchg
aad
test
add
dec
fidivrs
pop
neg
std
data16
call
add
repnz
mov
sbb
inc
leave
fstps
push
dec
xchg
sbb
adc
sbb
leave
cmp
jp
xchg
ja
std
or
repz
in
cmpsl
fstps
mov
imul
ljmp
int
mov
xor
ficomps
xor
mov
pop
das
push
flds
xchg
xor
xchg
jecxz
push
jp
adcb
bound
mov
adc
xor
and
test
sub
out
sbb
dec
xchg
mov
cli
and
jnp
pop
and
loop
mov
jns
pop
sub
ret
outsb
sbb
in
jo
nop
jae
test
les
jp
push
sbb
cmp
inc
mov
and
push
push
sbb
dec
scas
fisubs
lea
push
ljmp
mov
lods
push
fcompl
dec
jl
push
or
jl
or
stc
lock
cmpsb
and
shll
xchg
xchg
fisttpl
push
jbe
in
loop,pn
mov
fnstcw
or
fdivrl
xor
test
scas
rclb
ret
imul
aas
jnp
sbb
xchg
outsb
iret
mov
mov
es
shlb
and
sbb
sahf
dec
jno
pop
hlt
dec
push
mov
roll
pop
jae
mov
jmp
mov
test
mov
xchg
ds
inc
pushf
out
sbb
mov
jnp
lcall
adc
imul
pop
inc
fcompl
push
stos
enter
gs
fwait
js
flds
and
mov
push
mov
pop
imul
xor
jle
stc
ds
sti
test
ljmp
sub
cld
push
adc
push
jns
in
icebp
and
cltd
dec
sub
jb
addb
mov
mov
sub
scas
mov
jp
fmull
sahf
sbb
or
dec
outsl
adc
inc
lods
and
jmp
mul
lods
sbb
lock
gs
repz
lcall
ja
mov
cmpsb
into
xor
push
int
test
jecxz
inc
lahf
js
push
pop
js
negl
cmpsb
push
cmp
nopl
adc
mov
adc
xchg
push
jl
mov
clc
cmp
jl
insb
push
iret
adc
mov
sbbl
push
push
dec
push
pushf
mov
scas
ret
das
out
repnz
xchg
cmp
sti
add
ret
or
mov
adc
inc
sarb
mov
ds
push
std
cmpb
mov
fldenv
rep
cmp
sbbb
fstl
xor
mov
test
gs
or
icebp
sub
mov
inc
sbb
mov
stos
push
mov
fwait
idiv
mov
mov
sub
iret
jnp
in
dec
mov
adc
out
cs
js
stc
das
mov
mov
jmp
mov
aad
inc
inc
lods
ja
out
mov
in
inc
adc
scas
cmp
int
xor
inc
shll
pop
add
and
jge
push
loope
mov
push
jecxz
scas
pop
cld
pop
jecxz
mov
int
sub
or
sub
add
xor
fnstenv
fstpl
pop
mov
sbb
and
mov
enter
cs
jne
push
in
fsts
in
inc
mov
dec
adc
push
mov
shll
shrb
add
jne
decl
lods
cmc
insl
lret
push
dec
mov
test
add
clc
inc
mov
int
add
mov
push
lcall
lea
push
jae
xlat
mov
pop
test
test
pusha
adc
cmpsb
loopne
imul
cmp
mov
xchg
sbb
lahf
and
repz
jb
repz
popa
mov
push
arpl
xor
sbb
mov
dec
xchg
jns
in
add
loop
mov
inc
bswap
adc
jb
enter
jmp
mov
cmp
outsb
pop
jge
loope
add
fidivs
push
cli
orl
mov
or
sub
fabs
push
lret
daa
push
je
mov
jnp
mov
pop
inc
sub
mov
repz
in
xabort
mov
sahf
and
sbb
rcr
sub
jns
and
in
insl
addb
lds
push
jg
mov
outsb
dec
cmp
pop
dec
mov
push
ds
rolb
shll
sub
lods
lods
fimull
in
xchg
stc
pop
mov
sub
pop
push
bnd
repnz
or
dec
repnz
xor
inc
push
in
sbb
nop
gs
loop
out
mov
pop
out
and
out
xchg
and
cmp
pop
mov
mov
xor
insb
mov
mov
sti
daa
test
xor
lods
movsb
je
mov
inc
adc
or
test
or
mov
add
test
mov
push
cmp
stos
mov
and
mov
push
push
xchg
nop
lret
push
cmpsl
cli
and
adc
int
cmpsb
mov
test
sbb
in
mov
sub
jns
adcl
jne
cltd
xchg
dec
andb
je
mov
mov
orl
mov
enter
data16
gs
mov
int
inc
adc
jo
cli
or
push
les
aam
lock
andl
fwait
adc
clc
cmpsb
inc
lcall
mov
mov
adc
lds
loop
test
mov
or
adc
pop
mov
jp
pop
fisttpl
pop
jp
movsb
orb
ret
xchg
mov
decb
fwait
loopne
scas
lret
hlt
dec
sbb
iret
lret
out
jle
cmpsl
mov
inc
cmc
pop
jb
icebp
incb
frstor
sub
sti
pop
pop
and
mov
into
mov
movsl
repz
ret
jecxz
dec
mov
movsl
mov
sbb
jbe
mov
mov
push
pop
hlt
pop
push
fnstcw
arpl
cli
jne
push
ja
pusha
jo
add
pushf
fisttpl
sbb
add
das
enter
xchg
dec
xor
nop
frstor
xchg
mov
push
in
sbb
jmp
xor
push
push
push
nop
inc
dec
clc
mov
loopne
push
push
cs
stc
das
sbb
lods
in
jp
out
cmp
mov
mov
add
loop
aam
adc
andb
mov
loope
adc
int
sub
sbb
xchg
loopne
sahf
dec
lret
sbb
mov
cltd
dec
cmp
aam
cmp
dec
and
mov
pop
daa
xchg
int3
arpl
jno
add
cmp
push
mov
jg
push
lahf
sub
ljmp
cli
inc
test
loop
test
dec
lds
adc
lock
sahf
fstpt
dec
inc
enter
sub
dec
wbinvd
repnz
movsl
mov
test
cmpl
cmpsb
sub
cs
sbb
mov
js
add
cmc
sbb
test
shr
rcr
jae
xchg
jb
test
adc
fnstcw
out
pop
xchg
repnz
sarb
sahf
imul
xorl
add
add
test
xchg
mov
lret
or
jno
adc
int
test
or
add
ret
and
mov
or
cli
ljmp
rcr
push
stos
nop
inc
or
inc
or
sti
adc
daa
ss
repnz
gs
pushf
or
adc
std
sub
mov
pop
stos
fwait
mov
mov
std
test
xchg
repz
jle
pop
inc
add
mov
sbb
test
outsb
dec
outsb
cmp
fucomi
adc
mov
std
xor
jle
lods
and
cs
icebp
clc
into
lods
add
cmp
pop
lock
outsl
sbbb
nop
xchg
jae
call
int
sbb
add
es
adc
jae
jne
mov
push
and
test
imul
lret
sub
aas
push
and
inc
cli
inc
icebp
xor
adc
and
jae
sarb
imul
lds
cmp
out
cltd
test
push
pop
sub
add
dec
mov
subb
inc
insb
sbb
lret
mov
aam
aas
xchg
int
lcall
loope
and
cmp
std
mov
mov
inc
cltd
xchg
sahf
and
gs
mov
fyl2x
ljmp
rorb
fdivrp
mov
cli
mov
nop
mov
inc
jno
int3
das
pop
fidivrl
dec
in
mov
inc
dec
pop
cmp
daa
cltd
in
and
push
repnz
daa
mov
lock
pop
fimuls
scas
icebp
push
test
pop
cli
stos
cld
insb
test
out
xchg
fsts
cmp
test
ficompl
adcl
inc
inc
and
fdivl
jg
sub
daa
mov
lahf
arpl
les
fsubp
es
inc
dec
jmp
movhps
mov
add
std
aam
lods
test
inc
cmp
inc
sbb
movsb
pop
and
dec
xchg
ret
movsl
mul
add
movsl
mov
lcall
hlt
xchg
sub
mov
fnstcw
pop
das
imul
adc
push
aad
and
inc
ljmp
mov
rcrl
jecxz
in
or
sbb
mov
cld
orl
xlat
jecxz
out
ret
mov
fadd
subl
into
subb
rcrb
clc
or
scas
jle
outsl
and
mov
cltd
or
in
adc
out
stc
test
divb
inc
xor
test
dec
testb
ficomps
call
jle
shl
push
add
add
inc
adc
data16
outsl
out
mov
mov
dec
pop
scas
enter
cmp
mov
mov
jge
cltd
icebp
dec
adc
pushf
fildll
test
dec
fwait
mov
and
cmpsb
mov
cmp
imul
andl
rorl
sti
jg
and
faddp
fcompl
add
adc
adcl
sahf
outsb
and
sbb
int3
les
pop
lcall
xor
sbb
sahf
mov
test
scas
adc
pop
or
scas
je
out
cmp
repnz
cmp
pop
jge
hlt
out
cmp
push
push
shrl
mov
jge
cmc
sbb
in
xchg
xchg
orb
push
pop
push
enter
test
fxch
cltd
jp
sub
sub
lret
gs
icebp
int
les
inc
or
pop
cmp
inc
lods
rorl
loopne
xchg
insl
out
cli
int
adc
inc
popw
ficomps
aaa
jno
icebp
jnp
push
xor
pop
mov
and
adc
popf
dec
xlat
cld
test
mov
xor
push
sahf
mov
mov
ret
sti
gs
test
add
fildl
iret
push
shr
sbb
repnz
jno
fs
mov
fld
or
mov
jbe
iret
lret
aad
mov
jb
pop
out
stc
push
xchg
mov
das
mov
js
out
mov
mov
scas
sub
sbb
enter
mov
mov
fwait
out
cmp
mov
out
xchg
or
test
jge
cmp
popf
lods
jl
mov
fildll
repz
movsb
lret
cmpsl
mov
jae
jae
pop
inc
inc
sbbl
pop
shll
roll
sub
leave
mov
insb
mov
mov
jnp
jb
out
int3
cmpsb
fisttps
sahf
mov
sub
inc
mov
adcl
mov
insb
gs
inc
pusha
fstl
xchg
ss
pushf
jg
out
mov
adc
stos
cmpsb
and
and
pushf
popa
and
les
push
stc
scas
xchg
and
inc
clc
std
gs
jbe
or
sub
in
fisttpl
in
cmp
js
test
fdivrl
std
lret
and
lahf
xor
lea
repz
inc
lock
jnp
cmpsl
fadds
in
dec
jge
notb
rorb
jae
sub
scas
lods
bound
lcall
movsb
testb
jl
daa
lahf
mov
daa
test
sbb
adc
push
repz
repnz
ss
inc
data16
jns
test
jle
jb
mov
int
jecxz
sub
jns
test
mov
sbb
push
out
xchg
cmovo
stos
cwtl
mov
xchg
push
xor
insb
shll
insb
or
sbb
fdivrl
xchg
stos
test
pusha
add
pop
movsl
jne
sub
mov
cli
jnp
outsl
jae
mov
add
std
sub
dec
mov
fsubl
push
inc
push
push
je
outsb
loope
add
inc
std
ds
fwait
cli
repz
jge
cwtl
icebp
rcr
pop
inc
adc
or
out
adc
int
mov
loopne
data16
popa
mov
loopne
add
xorb
push
lods
push
push
pop
outsb
ffree
mov
fsubrs
cmp
lahf
jbe
cli
roll
ret
nop
jb
dec
push
xchg
aad
cmpsl
in
fiaddl
jge
gs
fwait
pop
inc
stos
pop
sub
push
and
outsl
mov
push
arpl
icebp
and
arpl
js
jle
int
pop
inc
rcr
push
test
and
jae
mov
es
sub
push
stos
jmp
stos
lds
std
add
jns
insl
in
sub
nop
push
pusha
mov
lods
xchg
pushf
pop
jb
lods
rcrl
in
mov
nop
jnp
adc
les
or
test
dec
das
jnp
cmp
shll
lcall
cmp
cmp
in
jns
and
and
loopne
lods
sbb
test
movsb
repz
sbb
dec
cmp
scas
adc
xchg
loopne
add
ja
std
xorb
and
popa
cltd
es
fnstenv
push
movsl
and
ret
bound
mov
or
mov
movsb
xchg
movsb
das
rcl
test
sbb
inc
and
jb
ja
cwtl
call
push
js
in
sbb
stos
jmp
gs
divl
aad
xor
icebp
xchg
xor
fldenv
test
lock
inc
lock
mov
ss
fsubl
add
scas
scas
ja
inc
mov
lock
pop
sahf
mov
fildl
xchg
es
test
das
inc
mov
xlat
cmp
push
fiadds
test
dec
fsubp
lcall
ljmp
fldcw
push
loope
enter
or
sub
dec
lea
and
mov
aam
pop
enter
mov
dec
and
addr16
push
cltd
aaa
lahf
jmp
mov
mov
adc
es
lods
mov
xchg
cld
iret
test
sar
into
jmp
push
lds
xchg
testl
dec
mov
and
adc
inc
dec
lahf
xor
bound
ja
mov
ljmp
inc
fstps
sar
jo
add
mov
lods
dec
lds
scas
sbb
aaa
mov
xor
test
int3
stc
jns
mov
in
out
cmp
jecxz
cmp
cs
mul
lock
push
push
inc
inc
js
addl
out
inc
testb
mov
lock
daa
out
jp
adc
and
mov
int3
inc
lods
mov
push
stos
mov
jo
stos
int
iret
movsl
and
adc
pop
fmull
cmp
sti
xchg
mov
rclb
lods
or
xchg
push
repz
mov
xchg
pop
mov
mov
loopne
xchg
xchg
cmp
or
aad
addr16
xor
dec
mov
fcmovne
xchg
adc
push
mov
mov
adc
shrl
in
adc
out
push
iret
dec
pushf
movsl
test
lock
mov
mov
mov
mov
dec
add
fadd
mov
lods
and
lcall
xchg
das
mov
adc
enter
cmc
mov
js
mov
imul
es
int
lods
mov
pop
fimuls
xor
mov
lods
out
and
adc
adc
lret
add
movsb
mov
sbb
movsb
push
cmpsb
xor
popf
in
fildl
test
ss
mov
and
pop
aas
push
out
push
sbb
mov
push
pop
push
mov
shrl
lock
sbb
loop
sub
xchg
addr16
or
lret
push
sbb
out
pushf
sub
dec
pop
cli
lcall
jle
loope
pop
xchg
add
and
add
cmp
inc
mov
out
mov
test
les
fsts
loope
movsb
movsl
cltd
pop
es
add
xor
and
push
int
lcall
sbb
daa
add
mov
adc
cmpsb
dec
push
out
call
mov
out
inc
imul
enter
add
jecxz
adc
pop
or
mov
addr16
add
push
mov
les
xor
data16
lret
jb
fwait
pushf
into
psubq
test
stc
dec
jae
add
jmp
popa
data16
aad
fwait
enter
imul
fnstcw
cmpsb
cwtl
sahf
stos
scas
aad
daa
adc
mov
xchg
mov
sbb
push
jnp
push
xchg
test
xchg
int3
aas
add
cmp
insl
cmpsb
call
mov
pop
dec
mov
in
sbb
inc
pop
adc
fmull
or
fcomip
mov
outsl
scas
test
fwait
out
pop
in
mov
lods
dec
jb
repz
push
movsl
mov
or
in
cmpsb
fldenv
mov
aas
push
mov
popl
std
movsb
je
sbb
mov
sbb
inc
cmp
leave
push
popa
mov
sahf
adc
pop
add
ficoms
sbb
jl
nop
ret
lods
popf
cmp
and
xor
cmpsb
dec
xor
aam
push
lahf
adc
pop
cmp
mov
js
fsubl
movsl
xor
push
fs
sbb
dec
push
adc
mov
mov
push
outsb
jne
fdivrl
aad
inc
out
xchg
imul
out
inc
in
pop
jnp
mov
xchg
fisubrl
xorl
inc
push
pop
cmp
fsubl
pop
mov
add
loope
jle
mov
cmp
xor
test
loop
cli
inc
and
int
xchg
repnz
push
outsl
adc
gs
mov
inc
scas
daa
mov
test
and
loope
pop
into
mov
add
mov
cmp
mov
roll
dec
test
testb
sub
mov
xchg
push
imul
orl
addr16
and
fnstenv
push
outsl
arpl
sahf
mov
mov
setno
stos
lahf
out
lock
mov
sub
pop
stos
mov
add
pop
test
sbb
xor
repz
mov
jle
out
das
adc
andl
and
in
insl
mov
filds
ljmp
je
sbb
jbe
les
sub
ret
xor
push
movl
jl
out
ljmp
jmp
jns
je
fnstcw
lcall
mov
fnstenv
in
dec
popa
jo
mov
nop
sbb
jp
andb
mov
xlat
int3
xchg
jbe
add
lods
lods
sub
fsubrl
push
scas
scas
inc
or
pop
jb
inc
xor
jle
adc
jg
subl
cld
mov
mov
aaa
sub
fsubs
adc
pushf
test
fs
mulb
cmp
into
add
jne
jne
or
popf
daa
mov
cmpsb
das
into
lods
mov
ds
fistpl
push
mov
mov
and
ja
negb
ss
inc
shr
daa
int
mov
repz
idivb
inc
mov
jmp
sbb
sub
inc
mov
cmpsl
in
xchg
mov
and
aaa
sarb
or
imul
jo
les
sbb
enter
sub
out
aad
sbb
loopne
test
mov
pop
popf
inc
aam
fisttps
icebp
es
data16
adc
aad
lcall
or
insl
in
sub
orb
add
push
aad
sub
test
and
xchg
insl
fidivs
repnz
test
mov
ss
out
outsl
push
mov
xor
cmp
lods
xlat
jp
pop
scas
dec
je
pop
lock
push
xchg
addr16
jle
into
out
es
cmpsb
int
dec
out
out
cmp
popf
or
push
gs
add
cmpb
add
pushf
sbb
ret
pop
stos
cmp
mov
into
jecxz
int
imul
sahf
fs
jp
sbb
repz
push
pop
int
or
sub
orl
add
int3
pushf
push
fnstcw
lds
jno
cwtl
hlt
add
cltd
std
and
mov
xor
cmp
inc
les
in
xor
mov
repz
or
sbb
mov
icebp
cmp
gs
pop
jge
mov
inc
loop
xchg
movsb
add
sbb
daa
aas
repnz
repnz
adc
test
and
xchg
dec
push
cmp
outsb
mov
idivl
sbb
push
mov
addr16
xor
cmp
adc
fwait
scas
mov
mov
inc
push
sbb
adc
push
cld
xchg
inc
lods
lock
xor
repnz
jecxz
push
push
push
and
mov
push
out
sahf
in
shl
cmp
fnstcw
cli
push
loope
fmull
mov
int
fiaddl
bndldx
hlt
xchg
xchg
andps
cmpsb
fsts
fldt
in
cmpsl
lcall
jo
mov
outsb
cmp
add
xchg
xor
and
mov
sub
sub
mov
jne
pop
int3
mov
jmp
daa
out
push
test
jl
dec
pop
or
cmpl
cs
cmp
imul
enter
adc
daa
jecxz
xor
sbb
fcompp
fs
cmp
int3
hlt
cltd
sbb
dec
pop
mov
jbe
inc
adc
movsb
push
and
push
das
ret
rep
xchg
push
lds
mov
xchg
sbb
out
jae
mov
lea
bound
push
mov
xchg
out
mov
xchg
pop
xchg
mov
sahf
and
scas
lret
fnstcw
lret
fwait
pop
fcmovnu
inc
dec
mov
call
sub
std
lods
in
fisubs
sahf
lret
decb
pop
movsb
movsb
or
loopne
lahf
scas
jb
test
jno
mov
mov
mov
push
addr16
rcl
in
lods
lret
mov
inc
insb
mov
pop
mov
xchg
loop
mov
and
movsl
ja
int3
cmpsb
test
in
sbb
clc
insl
inc
jns
or
lret
popf
xor
mov
idivb
inc
das
push
std
xchg
je
std
rcrl
xchg
mov
hlt
mov
mov
adc
scas
inc
test
loope
jg
cs
sub
subl
cmp
mov
scas
jne
mov
test
or
ljmp
sahf
nop
jo
lcall
or
cmp
mov
es
mov
std
mov
imul
mov
pop
xchg
xchg
mov
jecxz
adc
jns
push
jecxz
push
ret
push
je
int
pop
mov
pop
jecxz
push
stc
loop
lea
pop
leave
stc
ljmp
jp
mov
repz
gs
addr16
out
mov
movsb
shlb
xchg
es
imul
shrb
mov
jge
jae
shrb
lods
clc
roll
dec
lcall
fsts
jle
stc
mov
xchg
mov
mov
sbb
pop
orl
into
add
cmc
inc
fnstenv
repz
aas
lods
clc
dec
dec
lret
ret
repz
fstl
and
out
addr16
push
cmp
push
inc
test
lock
loope
cmp
lcall
mov
adc
and
xchg
stos
jle
jns
int3
jecxz
cld
add
out
inc
icebp
test
and
sbb
cltd
sub
mov
sti
dec
gs
cmp
add
jmp
push
mov
repz
cmpsl
stos
pop
aam
mov
dec
adc
cs
xchg
mov
xchg
push
sbb
xchg
cmpsl
jecxz
mov
ret
lahf
mov
xor
leave
gs
xor
jns
pushf
inc
push
out
out
scas
push
es
mov
mov
jge
mov
fimuls
fnstenv
mov
adc
out
mov
lret
mov
adc
dec
inc
dec
hlt
jb
pop
fsubrp
xor
fldl
dec
lret
mov
mov
popa
xchg
inc
jno,pn
shlb
cmp
aas
mov
mov
pusha
enter
mov
mov
xor
jp
dec
cmp
xor
test
or
inc
loope
js
in
cmp
das
ds
mov
jp
adc
int
mov
fcmovnb
dec
dec
sbb
jbe
mov
fiadds
xor
cmp
xorl
enter
inc
dec
dec
je
xor
test
repnz
std
out
mov
cs
popf
xchg
mov
test
lods
repnz
lret
in
test
cmpb
jbe
sti
lahf
push
out
sub
mov
mov
push
mov
test
mov
and
inc
in
popa
test
stos
jmp
fnstenv
and
mov
inc
sbb
outsl
dec
lret
mov
push
sbb
idivl
stc
pop
movsl
lods
push
out
mov
or
mov
pop
pop
sti
cmc
cltd
jmp
sub
xchg
pop
or
ds
pusha
inc
jb
mov
fadd
jno
iret
jge
cmp
aas
test
xorl
sbb
sub
jno
mov
sti
pop
mov
xchg
jmp
push
das
mov
mov
pop
jge
xlat
scas
fnstcw
icebp
loopne
movsb
loopne
int3
movsb
cld
add
in
fldenv
cmp
lahf
sbb
das
dec
popf
mov
out
inc
mov
sahf
jle
mov
call
pop
and
mov
in
fldcw
es
push
cli
leave
fimuls
aas
inc
adc
push
jae
dec
jae
jge
dec
imul
inc
lahf
push
lock
xchg
fsubs
mov
add
mov
mov
mov
push
cmpsl
and
sbb
aam
aam
test
inc
add
shl
mov
inc
int
outsb
arpl
dec
arpl
push
dec
and
and
xchg
xchg
push
mov
sub
imul
pop
fstps
fwait
mov
sbb
mov
shlb
lods
int
scas
loop
sbb
sbb
shrl
aam
ja
mov
mov
sbb
xor
lahf
mov
popa
subb
xlat
dec
int
inc
imul
xchg
pop
jae
flds
mov
pop
cmp
xchg
aas
cli
cmp
test
cmp
dec
push
pop
ljmp
icebp
pop
or
sub
out
adc
fxch
push
into
pop
ds
xor
lret
inc
mov
jp
lret
loop
sti
fsubr
aad
int3
test
fldenvs
rclb
jecxz
or
fcomps
sub
ljmp
mov
test
cmp
les
jmp
arpl
sub
mov
cmpsl
xor
cmp
mov
aad
das
sti
xchg
and
icebp
std
cmp
mov
pop
pop
inc
mov
add
imull
fisubs
insl
pusha
and
je
test
cmpsb
cmp
cmp
sub
cld
lahf
frndint
js
and
leave
int
cmpsl
inc
and
sarl
and
aas
fimull
inc
loopne
jmp
pop
cmp
int3
mov
xorb
dec
adc
sti
add
and
or
cmpb
out
loopne
sbb
arpl
or
int
loopne
cld
jno
lods
pop
icebp
aad
loope
lock
fcoms
cs
pop
mov
lds
xor
sbb
jmp
xor
ljmp
flds
aaa
mov
sarb
lods
pop
and
mov
aaa
in
push
mov
fistpll
push
cmp
fimuls
pusha
daa
les
and
lods
jmp
lods
scas
hlt
jb
nop
dec
fsubl
mov
pop
push
je
shrl
fldenv
fcoml
push
pop
mov
push
mov
sbb
mov
sar
imulb
insl
inc
stc
insb
inc
or
iret
sbb
add
popa
or
faddl
mov
mov
mov
add
repnz
mov
inc
and
jbe,pn
mov
cltd
or
sti
sarl
jno
xchg
stc
xor
mov
cmp
inc
je
push
push
test
mov
mov
ss
shrl
clc
in
out
fidivl
test
mov
jb
pop
jle
cmpsl
add
jno
lods
inc
adc
outsb
and
repz
push
sbb
pusha
shr
popl
xor
mov
into
push
jbe
mov
scas
and
pop
xchg
inc
call
into
out
iret
dec
shrl
dec
xor
mov
mov
hlt
mov
flds
gs
jae
or
imul
lea
cmp
test
sbb
inc
movsl
mov
pop
cmc
mov
repz
ja
shrl
mov
mov
push
and
in
add
cmpsb
int
and
outsl
rcrl
aad
jnp
dec
shrb
inc
das
fildl
out
clc
cmp
cmp
mov
stc
jbe
sub
pop
xor
push
data16
in
movl
xor
fs
dec
xchg
xchg
add
enter
in
mov
pop
movsb
cmp
in
lods
imul
inc
dec
outsb
add
call
shrb
sub
andl
cmc
mov
call
mov
mov
cmp
jge
fidivrs
pop
test
sbb
stos
and
pop
push
call
dec
aad
pop
xchg
lods
xlat
adc
inc
push
dec
or
aad
jl
dec
clc
mov
cld
inc
data16
shll
and
xchg
push
out
sbb
mov
ret
and
push
push
jecxz
cli
mov
or
imul
mov
aam
xlat
ds
sub
stc
les
mov
mov
mov
loop
xor
mov
sbb
mov
and
aaa
adc
lcall
cmpsb
pop
cmpb
enter
int
repnz
sub
xchg
in
cmp
and
cmpb
mov
outsb
scas
sbb
mov
shll
or
mov
jg
js
sahf
lods
xchg
mov
jnp
xchg
es
dec
leave
rclb
mov
leave
sbb
sti
xchg
pop
xor
data16
fidivrs
mov
addb
or
adc
imul
out
push
sub
adc
test
sub
fsts
sbb
xchg
sub
mov
cmpsl
jo
mov
hlt
inc
test
mov
rorl
sti
scas
inc
scas
push
push
pop
push
xor
das
dec
fstps
iret
repnz
scas
mov
push
js
imul
pushl
nop
xor
andb
push
rorb
dec
sbbb
xchg
outsb
mov
lock
inc
and
loop
mov
ret
fldt
push
test
fwait
roll
mov
int
lods
dec
es
jbe
ret
dec
xchg
xchg
loope
jo
clc
test
sub
push
fstps
int3
mov
sbb
push
pushf
dec
mov
mov
jb
jne
lods
mov
fidivs
xchg
test
pop
adc
lds
dec
addr16
xchg
and
cli
jp
test
out
and
roll
and
push
aas
xchg
mov
sti
lcall
sbb
cli
xlat
aas
fmull
scas
add
xor
jge
xchg
or
cmp
lret
add
inc
stos
dec
pop
out
push
mov
pop
idivl
mov
and
addb
xchg
sahf
popa
jb
fsubrl
mov
aas
ss
push
fidivl
and
xor
jns
add
stc
cmc
aad
loope
xchg
pop
mov
jle
mov
test
gs
icebp
stos
sbb
xor
mov
cmp
xor
mov
pop
fistl
lds
aad
cmpsl
xorl
popa
xchg
and
mov
xorl
push
cmpsl
add
inc
push
jae
pusha
daa
test
or
enter
repz
sbb
push
mov
ret
sbb
pop
inc
inc
cmc
add
lock
in
les
mov
push
jbe
inc
pop
or
pop
and
out
xchg
xchg
stos
push
inc
rorl
jge
pusha
bound
or
mov
fcoml
pushf
adc
push
jnp
sub
sub
mov
pop
jl
inc
test
xor
sub
xchg
loopne
sub
movsl
add
ret
mov
fnsave
lahf
push
or
add
in
leave
loope
arpl
fnstsw
into
sbbl
adc
dec
sbb
fcmovbe
adc
loop
fcompp
lods
sbb
jg
mov
adc
in
mov
addr16
jmp
ss
sub
sbb
lret
insb
push
mov
dec
test
sti
xchg
clc
dec
fmulp
sbb
subb
inc
lret
popf
pop
mov
jle
dec
inc
cmp
push
cmp
test
xchg
inc
imul
hlt
and
xchg
mov
in
out
cmpsb
je
sub
fldenv
lret
xor
mov
rclb
mov
cmpsb
sbb
sub
and
fistpl
sarb
arpl
fwait
loop
mov
mov
and
insb
and
xchg
test
fdivs
sbb
cmpsb
push
cmpsb
inc
sub
or
sub
jns
jmp
test
sbb
pop
es
cmp
mov
das
inc
sub
nop
inc
popf
xchg
loopne
test
outsb
fstp
scas
xor
mov
es
imul
xorl
ror
addr16
jae
push
add
in
pop
pop
lds
jecxz
loope
mov
movsb
int
mov
insb
out
scas
cmp
mov
mov
sbb
jo
xor
arpl
imul
pop
filds
mov
xchg
mov
mov
stc
mov
shll
push
scas
inc
dec
push
mov
fcoml
sahf
inc
out
movsl
sub
pop
or
sub
jns
daa
adc
ret
scas
outsb
xor
mov
xchg
das
addb
and
add
mov
or
pop
fldcw
pop
xchg
sbbb
xchg
and
hlt
sahf
aaa
xchg
insl
cmc
sarl
dec
data16
imulb
fsub
cmpsb
pop
aas
decb
cmp
mov
pushf
les
or
in
xor
or
dec
and
in
in
lods
pop
xchg
scas
std
jmp
addb
add
fsts
in
inc
out
cmp
daa
jl
inc
dec
jae
mov
xor
push
sbb
inc
sub
fcoms
xor
shrl
es
jo
popa
rorb
lcall
push
ja
pop
jo
inc
inc
movl
cmpsb
adc
and
dec
and
bound
lahf
int3
and
in
dec
movsb
sbb
es
dec
or
pushf
test
flds
cmp
mov
jae
daa
xchg
lahf
in
mov
and
stos
ss
cmp
cmp
fsts
sbb
pushf
sub
mov
xchg
ss
mov
push
mov
inc
push
cmp
sbb
lods
dec
sbb
loope
sbb
inc
test
orb
cli
fisubrs
pusha
cmp
push
jns,pn
jp
sub
xchg
sahf
fs
hlt
fwait
xchg
mov
xor
inc
push
push
stos
hlt
dec
add
out
mov
mov
xchg
adcb
repz
jle
jecxz
ss
shlb
loope
test
mov
and
fwait
and
lret
data16
out
jnp
aam
xlat
or
lods
sub
in
or
cli
mov
ss
pop
lods
push
push
pop
scas
mov
in
test
insl
jp
and
out
fsubs
insb
imul
lds
sub
shll
jmp
sub
in
sub
mov
push
ss
les
pop
sti
loope
hlt
mov
xchg
push
push
arpl
shll
push
movsb
mov
add
lods
ret
and
test
mov
lock
or
dec
cmpsl
hlt
xchg
pop
out
jns
cmpb
jo
daa
out
lcall
adc
push
add
test
rorb
pop
inc
mov
sbb
mov
repz
inc
test
outsl
mov
mov
mov
cmpsb
imul
shr
mov
insb
repnz
popa
mov
jl
jne
addr16
push
ret
dec
imul
xor
aad
jmp
sbb
fnstcw
jmp
or
ja
push
and
ficomps
mov
mov
js
sub
ss
adc
inc
aam
sub
or
enter
out
out
cmp
push
leave
add
push
and
sarb
jle
repnz
pop
flds
mov
loopne
mov
cmp
insb
pop
faddl
aam
mov
xchg
je
arpl
adc
lahf
test
inc
jbe
mov
ljmp
lret
push
shlb
ja
inc
jl
sub
sbbb
push
scas
push
mov
iret
push
mov
stos
jnp
out
fidivs
sub
jb
lock
mov
pop
push
push
mov
stos
repz
mov
cmovne
mov
mov
sbb
pop
aas
js
adc
mov
add
jle
xor
ret
mov
inc
or
mov
and
inc
data16
adc
sbb
xchg
lret
into
jp
xor
sub
pop
iret
cwtl
movsl
aad
push
mov
popa
add
mov
pop
lock
pop
repz
pop
pop
lock
out
loopne
aas
jmp
insl
or
sar
xor
inc
sahf
fstps
xchg
loop
and
les
or
push
pop
sbb
jmp
mov
xchg
xchg
cmp
adc
test
mov
inc
and
in
mov
lods
sbb
dec
pop
stc
cmp
and
cltd
push
fwait
mov
xchg
cli
dec
xchg
mov
push
int3
jae
or
mov
jl
push
mov
sub
xchg
movsb
jge
scas
scas
cmp
mov
sarl
dec
mov
xor
or
jae
sub
in
rcll
sub
sub
push
or
adc
pusha
test
and
or
push
call
sub
add
repnz
mov
test
gs
mov
sbbl
mov
jg
in
mov
push
mov
sbb
mov
add
fstpt
or
lods
push
mov
fstps
pop
add
push
pop
xchg
inc
out
inc
sbbb
js
in
add
test
jmp
movsl
xchg
js
and
lahf
in
xchg
negb
dec
popf
jl
data16
add
je
ficoms
xor
mov
jg
loopne
mov
xor
das
ja
imul
pop
sub
jo
pop
jge
insl
jecxz
jo
mov
pop
inc
ja
shlb
mov
ja
push
mov
push
fs
dec
adc
xchg
mov
mov
lods
scas
lret
jle
sbb
jae
xor
dec
dec
pushf
jmp
ljmp
mov
sarb
addr16
xchg
mov
jge
mov
mov
sub
into
mov
xchg
cmc
lock
jecxz
xchg
fwait
pushf
and
fldcw
push
pop
jp
mov
scas
addr16
out
cmp
push
cmp
or
mov
sub
imul
mov
push
push
push
adc
shrl
mov
test
sbb
adc
and
xchg
mov
cmpl
popf
repz
int
test
push
dec
dec
loop
sahf
adc
out
cmp
lcall
hlt
icebp
xor
notb
stc
mov
xchg
pop
and
or
xchg
in
hlt
mov
xchg
cmp
incb
sahf
xor
sbb
sub
mov
push
pop
out
iret
xor
std
cmc
scas
shll
cli
dec
fisubs
lods
ja
aad
push
xor
fsubr
test
sub
sbb
and
insl
lcall
cmpsb
fidivrl
fimull
inc
or
dec
xchg
es
add
test
and
xor
adc
test
flds
sti
pop
sahf
stos
lods
and
cmp
jno
iret
sbb
mov
nop
jno
cmpsb
dec
xchg
dec
fdivl
fmul
mov
hlt
repz
mov
pushf
xchg
jb
lds
jp
push
push
or
jecxz
mov
stc
and
adc
aas
loope
test
xor
scas
adc
xlat
xchg
ds
cs
mov
mov
in
lods
push
and
movsl
xchg
mov
loope
fndisi(8087
jp
lock
sub
push
fcomi
pop
std
mov
adc
lods
out
pop
xchg
xchg
or
dec
pop
dec
and
or
hlt
ss
mov
fnstcw
dec
dec
xor
jecxz
pop
mov
mov
icebp
stos
cmp
les
loop
mov
and
push
fcompl
out
pop
sti
or
mov
pushf
inc
ret
adc
jmp
mov
rcrb
jae,pn
fisttpll
insb
inc
xchg
pop
add
lods
xchg
mov
mov
dec
shlb
pop
mov
aaa
dec
int3
lret
mov
push
inc
push
and
repz
dec
repz
add
push
push
sbb
fnstenv
inc
lahf
fimull
mov
lds
mov
mov
outsl
gs
call
or
jno
push
mov
rcl
popf
jne
fidivrl
sti
adc
insl
repnz
sub
dec
sbb
cmp
mov
push
mov
int3
push
mov
push
popf
repz
in
mov
mov
jl
mov
adc
les
push
dec
or
test
scas
jns
sbb
bound
mov
cld
push
and
stos
xor
outsb
push
out
cmp
popl
sbb
pop
lock
test
lcall
push
jno
sbb
loope
test
test
pop
push
sbb
sbbb
xchg
inc
lret
pop
in
xchg
test
jae
xchg
xor
jp
inc
mov
je
imul
orl
cmp
dec
testl
dec
cmp
int3
repz
and
xor
rolb
icebp
movb
inc
sbbb
sub
inc
jne
enter
inc
pop
mov
cwtl
mov
inc
mov
dec
fadds
cmc
and
lods
sbb
adc
pusha
xlat
cltd
mov
sub
adc
test
add
mov
movsb
cmp
out
fcmovb
mov
iret
xlat
mov
sbb
sub
mov
in
lcall
and
xorl
lods
fnstenv
cmpsl
jge
shl
fimull
inc
mov
mov
sbb
scas
and
jle
fsubrl
mov
test
push
push
cs
das
inc
clc
scas
mov
push
xchg
adc
push
cmp
mov
scas
fwait
push
out
jbe
scas
dec
mov
ficomps
cltd
int
or
mov
mov
lahf
test
flds
sub
ljmp
mov
push
adc
inc
or
xlat
jl
fincstp
std
in
out
adc
cmp
cmp
shr
push
mov
xor
fmulp
xor
jnp
mov
push
adc
mov
xor
mov
shll
out
icebp
cli
push
mov
rorl
xlat
push
xchg
cs
jne
outsl
popa
inc
and
pop
rorb
jo
add
push
cmp
imul
test
cmp
jle
jae
xor
mov
cmp
jle
inc
cmp
outsl
popf
cmp
mov
test
mov
jbe
and
les
std
and
mov
fmuls
ss
sti
sahf
inc
jnp
push
and
icebp
sbb
xor
call
sub
cld
mov
or
mov
inc
sbb
mov
call
inc
and
stos
sub
jno
es
fcompp
pop
dec
test
mov
jge
adcb
into
data16
popa
scas
stos
add
or
inc
or
mov
rclb
stos
scas
bswap
jge
cmp
pop
xchg
cli
repz
cmpsl
jge
shrb
lea
out
push
mov
mov
and
adc
sbb
inc
out
cwtl
xchg
jp
inc
mov
add
fcomip
out
mov
movsl
xchg
push
sbb
mov
int
push
in
pop
xchg
xor
jge
mov
movsl
dec
in
lds
clc
out
mov
xchg
jge
mov
adc
pop
lcall
cmp
inc
ss
pushf
orb
lahf
jg
iret
sbb
push
movsb
mov
loope
jnp
xlat
iret
jo
jge
jge
je
shlb
or
fstps
push
cmp
fnsave
cmp
repz
mov
xchg
dec
roll
push
sarb
fucomp
mov
adc
jno
addr16
adc
ss
movsb
popf
xchg
test
scas
pop
cs
pop
imul
insl
aad
adc
mov
dec
push
out
xchg
arpl
addr16
inc
shl
divb
fstps
xlat
aaa
fcmovu
adc
cld
mov
inc
out
pushf
test
jae
jbe
add
xchg
test
pop
gs
xchg
sub
sub
out
pushf
test
fnstenv
lds
out
pop
les
jle
imul
push
inc
shlb
pop
xor
sbb
pop
sub
cmp
popf
xchg
gs
pusha
lods
cmp
int3
mov
cltd
jbe
mov
adc
aaa
bound
or
jbe
sahf
mov
mov
add
lret
lret
inc
jp
mov
fsts
ret
mov
insl
std
inc
sbbl
scas
andb
push
mov
mov
int
push
stos
jg
push
gs
cmp
xchg
cli
add
es
cmp
test
std
shlb
cs
mov
mov
jo
pushf
dec
sbb
push
or
dec
mov
mov
push
ret
xor
es
lods
test
pop
shld
test
movsl
stc
lods
sub
sahf
dec
adc
mov
lcall
addr16
and
data16
xchg
xchg
std
jno
mov
xor
aaa
dec
jo
call
push
leave
sti
inc
mov
xor
popa
scas
adc
mov
gs
xchg
js
lods
push
lods
in
je
lret
jnp
adc
lcall
adc
popf
mov
mov
sub
push
mov
mov
mov
out
jne
sahf
ret
sbb
test
sbb
mov
adc
mov
cmp
fs
mov
adc
xlat
test
sub
aad
mov
ficompl
inc
sbb
mov
xor
xchg
mov
in
fxch
sarl
cmp
frstor
lds
or
sub
cmp
or
pop
mov
and
lods
dec
xlat
inc
rol
lock
call
out
pusha
scas
stos
sbb
fldcw
fistpl
cmp
int
outsb
jle
jle
shr
cmp
imul
sbb
negb
dec
pop
pop
inc
mov
pop
ss
movsb
push
xchg
mov
lcall
mov
xchg
in
adc
test
adc
inc
rcl
sub
pop
or
in
cmp
es
mov
sbb
mov
lods
mov
fldt
mov
xor
mov
fildll
xor
or
push
inc
mov
and
inc
fxch
pop
mov
in
push
mov
mov
fsubl
fs
sbb
jge
mov
inc
fldt
scas
sahf
mov
adc
xchg
outsb
cltd
outsb
sub
adc
xchg
cmpsb
push
pop
mov
adc
mov
jbe
je
popf
rorb
in
vpsrlq
inc
hlt
fildl
std
mov
rcrb
jecxz
imul
inc
es
sbb
loopne
jae
orb
mull
add
test
dec
inc
sub
fwait
sub
jmp
cli
xor
out
pop
adc
fwait
or
dec
ja
mov
jne
loop
sarb
pop
testl
dec
scas
cmpsl
cmp
dec
fidivrs
xor
or
in
pop
sbb
fwait
pusha
add
fldl
mov
or
pop
rorb
mov
loopne
add
push
scas
in
ds
call
mov
inc
sub
mov
lods
and
cmp
iret
sbb
incb
repz
fidivrs
add
mov
add
leave
das
push
jp
sbb
mov
pop
jmp
dec
pop
cmp
fcompl
and
out
inc
pushf
cltd
jbe
sti
cmp
imul
add
pop
inc
xchg
imul
outsb
xchg
popf
add
bound
jnp
data16
pop
mov
push
ror
xchg
test
sub
dec
adc
inc
mov
test
mov
mov
rcr
fidivs
dec
jns
add
decl
fcompl
mov
mov
mov
divb
mov
jo
decb
cltd
xchg
inc
out
cmp
pop
std
mov
mov
add
cli
daa
decb
mov
repnz
adc
sbb
add
sub
popa
push
enter
rcrl
mov
ret
add
mov
push
mov
test
lret
add
in
lods
sbb
dec
in
popa
xor
std
flds
and
scas
push
mov
movsb
rclb
mov
not
xchg
sbb
xchg
inc
add
stc
push
sahf
add
pusha
arpl
lahf
dec
xlat
pop
and
sbb
jle
mov
subl
lock
dec
es
xchg
stc
push
mov
pop
mov
inc
dec
into
lds
pop
js
std
and
xor
xchg
data16
push
filds
jns
push
mov
mov
mov
out
mov
test
push
mov
sbb
pop
jno
sub
jnp
test
popfw
jecxz
das
pusha
inc
push
pop
mov
mov
adc
out
adc
in
jns
or
mov
stos
lcall
sbb
jnp
lret
jmp
inc
sbbl
sub
or
push
fstp
popa
shll
sbbb
test
cmp
stos
xchg
mov
mov
fcompl
cwtl
cs
push
lahf
imul
fldt
xlat
mov
sub
iret
mov
xchg
sub
xchg
add
sbb
ja
movsb
mov
loopne
daa
nop
dec
cmc
or
test
inc
jne
idivb
je
sub
orb
and
mov
out
inc
cmc
sahf
popa
cwtl
pop
in
inc
push
ret
outsl
mov
ret
daa
imul
pusha
scas
dec
enter
push
out
xor
fwait
push
add
mov
aad
jp
hlt
xor
pop
inc
push
ret
dec
lock
out
add
js
sbb
test
rcr
test
stos
test
mov
pop
mov
sbb
ljmp
mov
lcall
hlt
inc
xchg
paddusb
mov
sti
mov
enter
sbbb
inc
inc
pusha
push
data16
jns
cmp
imul
mov
sub
sbb
or
adc
xor
addb
imul
pop
pop
xchg
out
xchg
cmp
dec
push
aas
mov
add
idivb
sbb
inc
mov
aas
mov
cmp
xchg
fsts
jp
js
inc
and
in
ja
in
ss
lahf
out
and
ss
test
scas
pop
push
mov
lods
int
sbb
cmp
arpl
xchg
mov
sub
push
mov
movsb
dec
movsb
loope
jns
cld
rorl
adc
cmpl
sbb
test
test
pavgb
std
jmp
sbb
das
jae
mov
fidivs
lods
jecxz
lahf
nop
out
fldcw
and
xchg
les
and
mov
fldcw
dec
data16
out
aad
scas
leave
cmp
stos
adc
es
jmp
push
in
clc
sub
movsl
cmp
lahf
push
in
out
lret
adc
mov
cmp
negb
xor
xchg
subb
shrl
xchg
push
and
movsb
add
add
lods
cmpsb
fldcw
push
and
inc
jge
test
popa
movsb
jbe
je
fsubrp
lret
in
sub
faddl
or
and
outsl
dec
out
hlt
rcrb
ja
test
cmp
in
jmp
mov
andl
inc
pop
subb
dec
adc
dec
sti
into
push
ljmp
ds
sbb
cmp
cmp
out
jnp
and
dec
pop
add
xchg
push
xor
and
dec
out
or
roll
inc
movsb
xchg
jb
ret
ja
inc
and
push
loopne
stos
adc
mov
dec
leave
outsl
into
adc
cmp
icebp
loopne
adc
aas
insb
popa
inc
fs
test
or
mov
push
call
cs
out
pop
push
mov
pop
and
cmc
fstpt
cmp
push
mov
iret
lds
rclb
mov
es
popf
dec
sbb
and
or
xor
andl
xchg
fisttpl
rolb
call
fstps
repnz
fstpl
mov
mov
paddq
outsl
movsl
es
jnp
imul
in
fistps
iret
and
add
mov
pusha
ficompl
sti
mov
xchg
push
test
scas
xor
fsubrp
call
inc
testb
xlat
push
bound
jmp
sub
push
jg
sbbl
stc
in
ss
xacquire
dec
out
xchg
sti
add
fidivrs
mov
int
mov
adc
mov
adc
inc
cmc
stos
mov
test
and
lock
mov
mov
fbstp
out
ja
clc
sbb
adc
out
fnstcw
pop
clc
iret
inc
cmp
outsl
jns
mov
les
repnz
stos
lds
mov
addr16
shrl
and
xchg
xor
loope
cmpsb
in
fidivs
in
mov
sbb
sub
or
out
es
insb
cmp
mov
xchg
lock
mov
out
sbb
lea
push
push
lret
pop
sarl
es
adc
push
es
xchg
nop
scas
sub
sub
xchg
adc
or
push
mov
mov
xchg
call
jp
jno
add
je
pop
rcll
int
int3
ds
fiaddl
inc
cmp
mov
int3
out
xor
out
adc
mov
push
data16
push
loope
cwtl
and
xor
push
mov
cmp
repnz
mov
sti
mov
cmpb
or
jl
pop
add
cmc
cmc
scas
fcomps
cmpsl
scas
cmpsb
stc
mov
sub
mov
fcmovbe
les
jne
out
lods
xchg
cli
jns
xchg
dec
fsts
mov
int3
mov
inc
data16
aaa
out
dec
outsl
mov
ficomps
push
lret
sahf
push
and
xor
mov
mov
fnstsw
jle
inc
xchg
imul
adc
fstps
cli
sbb
aas
stos
std
fsubs
dec
jnp
mov
sbb
lds
pop
out
notl
sub
out
cltd
ret
xchg
arpl
fsts
icebp
push
test
mov
sub
loop
lock
jge
out
xchg
push
inc
xor
adc
mov
xor
or
push
fdiv
dec
jbe
lock
jle
xchg
mov
xchg
dec
or
ret
fcomi
inc
popf
push
scas
stos
and
out
push
pop
out
movsl
sahf
sbb
cltd
cli
sbb
cmp
xor
or
inc
lock
pop
iret
jle
lods
lret
mov
mov
dec
inc
repnz
push
test
mov
fcmovnu
test
xchg
shrb
mov
arpl
fcoms
inc
dec
dec
movsl
mov
xor
std
inc
mov
mov
mov
pop
rcll
mov
push
test
jo
orl
cmpsl
sar
pop
js
mov
aas
cmpsl
push
lret
pop
sbb
cli
mov
add
cmp
xchg
repz
test
outsb
mov
mov
xchg
ja
mov
jnp
sbb
fisubs
aad
cli
ds
push
mov
insl
mov
xor
fildl
je
cmp
mov
jno
pop
sub
mov
inc
mov
pop
mov
push
ret
fsubrp
std
test
mov
stc
stos
mov
cld
or
frstpm(287
cmp
int
pop
mov
xchg
xchg
mov
push
dec
sbb
push
push
cli
outsl
sbb
mov
notb
iret
sbb
aas
loopne
xchg
mov
or
add
and
adc
leave
sbb
and
rcr
movsb
movsb
lea
scas
jp
outsl
pop
cmp
unpcklps
lret
mov
push
xor
xchg
lods
jnp
sbb
lret
fsts
or
or
mov
pusha
icebp
cmp
fstps
sarl
fsubrs
mov
subl
mov
cmp
inc
insb
cli
pop
jecxz
ret
loop
test
mov
xor
lcall
das
lcall
cmpsl
sub
je
shlb
cmp
stos
sbb
or
mov
push
pop
dec
scas
fldenvs
add
int3
mov
js
cmpsl
adc
cmp
loopne
add
xor
shrl
aas
ljmp
push
out
out
inc
mov
aas
popa
adc
sub
sahf
add
ljmp
cwtl
push
in
pop
jge
fiadds
sub
and
je
rep
dec
test
sarb
and
sbb
shl
push
les
and
xor
call
mov
stos
in
fxch
mov
ss
lds
and
aam
jmp
adc
xor
pop
cmp
enter
mov
pop
cmp
std
das
cmpsb
xchg
xchg
mov
inc
lahf
cmpl
jae
nop
mov
sti
jbe
test
loope
cltd
xchg
mov
mov
leave
cli
push
and
int
mov
icebp
adc
xchg
sar
outsl
inc
lock
push
pop
scas
fildll
xor
mov
rclb
fimull
mov
call
pop
fdivrs
xchg
lahf
xchg
inc
or
cmp
sub
mov
inc
testb
lods
test
das
mov
aas
mov
lahf
sti
iret
cmp
xchg
inc
dec
popa
movsl
jb
and
sahf
mov
sahf
pushf
xchg
test
fldenv
lcall
mov
test
mov
sti
mov
cmp
imul
xchg
jnp
xchg
jp
xor
cld
rcr
and
ficoms
icebp
sbb
fcoms
jne
pop
jno
pop
jo
cmp
xchg
add
sub
cmpsl
stc
std
fsubrs
fldl
cmp
sub
sbb
jnp
and
in
sahf
outsb
das
push
hlt
inc
mov
pop
sbb
xchg
add
fsubl
fstpt
xor
xor
lock
add
fisttpll
lahf
pop
andnps
in
fadds
xchg
mov
iret
stc
mov
push
sub
shrl
push
movsb
out
imul
inc
jmp
lret
fisubs
mov
outsb
push
xor
jle
push
ret
mov
dec
mov
jecxz
roll
int
jnp
xor
inc
xor
arpl
adc
xchg
cmp
pop
jbe
mov
fxch
mov
or
bnd
push
cmp
ficoms
sbb
push
and
ss
mov
xchg
aad
ss
jmp
dec
mov
xor
push
mov
inc
fsts
pop
mov
dec
fdivrl
fimull
in
jl
lea
std
sub
popf
xor
sub
jns
ss
fstps
rcrl
repz
sbb
pop
repz
or
in
add
mov
pop
mov
cmp
inc
aad
push
mov
mov
mov
aam
cmpsb
rolb
test
lret
xor
loopne
scas
out
repnz
pop
push
add
xchg
xlat
xchg
ret
cmc
ds
fnstcw
mov
push
xchg
scas
lock
sbb
test
xor
push
fisubl
sub
aad
mov
xor
jae
ss
movsl
sub
lods
jae
xchg
or
call
xchg
addb
jno
xor
shlb
or
das
std
ffreep
arpl
out
outsl
mov
cmp
inc
or
cmp
sub
test
add
inc
or
push
adc
xchg
mov
push
dec
popf
mov
je
mov
popa
iret
cmp
frstor
cs
mov
inc
xor
sub
xlat
sub
pusha
mov
push
fdivrl
pop
adc
and
cmp
ret
les
adc
push
push
xor
inc
icebp
cmp
adc
jnp
test
popa
scas
mov
aaa
leave
fsts
int
scas
sti
mov
xor
jo
add
push
cmp
stos
in
scas
enter
or
addl
xchg
dec
xchg
jg
out
xor
scas
mov
fdivp
dec
negb
sahf
jge
ret
test
sbb
cmpsl
outsl
mov
mov
inc
pop
cmpsl
adc
je
dec
sub
mov
inc
pushf
adc
sub
lds
es
add
and
adc
repnz
pop
mov
popf
sbb
cmp
add
fdivr
fmull
jne
gs
dec
test
cli
jae
in
icebp
fstl
es
or
jl
gs
cmp
jge
cwtl
jo
lcall
pop
int
ret
sbb
adc
testb
addr16
fldt
mov
dec
es
or
fs
cmpl
flds
ret
int
or
jno
test
sbb
sub
add
mov
pusha
lahf
fs
pop
jmp
pop
push
call
mov
ret
gs
out
pop
aad
in
addr16
test
and
cmp
aad
int3
rcrl
imul
scas
addr16
mov
fldcw
fnstcw
xchg
mov
insb
jmp
adc
sub
sbb
aaa
fmul
xor
pusha
mov
int3
mov
sahf
les
stc
and
pop
push
scas
lock
mov
mov
out
fldenv
xlat
mov
xchg
xor
scas
sub
dec
lahf
jae
cmp
mov
rcrl
out
jno
lods
push
push
xlat
shrl
shll
cmp
jl
das
xchg
mov
into
std
repz
cmp
and
dec
mov
sub
cs
dec
inc
adcb
cmp
ss
add
push
sub
dec
push
scas
fnstcw
cmp
push
mov
mov
pop
pop
push
loope
rcll
stos
into
cmp
mov
cmp
sbb
je
repnz
jle
movb
push
lahf
stos
es
andl
mov
xchg
ja
mov
aas
ss
out
sub
mov
roll
pop
in
out
xchg
or
ds
popf
in
stc
mov
std
mov
fisubs
jo
repz
push
into
mov
pop
or
lahf
lods
sbb
xor
enter
bound
xor
mov
push
or
repz
dec
roll
stos
out
xor
int3
jns
adc
insl
and
int
sbb
mov
jge
jno
jae
loopne
mov
leave
dec
cli
imul
or
inc
cld
and
std
jge
sub
dec
in
ds
pop
adc
clc
mov
test
jle
test
fs
jmp
pop
jno,pn
or
fiaddl
std
xchg
gs
stc
and
pop
mov
popl
jns
lahf
andl
das
ss
flds
scas
cli
cltd
fwait
dec
jno
adc
dec
lcall
jge
sbb
pop
fwait
xchg
sbb
aas
sahf
int3
test
and
jbe
and
mov
ss
inc
scas
repnz
mov
jae
insb
repnz
aad
add
aaa
ficoms
or
jns
xchg
lods
test
push
movsl
mov
test
in
out
dec
fidivl
add
and
dec
inc
xchg
mov
repnz
push
pop
mov
pop
mov
sbb
mov
inc
jge
mov
push
das
test
es
stos
or
or
xchg
xchg
lea
insb
lds
jae
test
push
pop
mov
jge
dec
mov
popf
and
inc
mov
dec
sub
inc
jmp
and
popf
xchg
mov
push
std
aas
lcall
dec
scas
cmpsb
int
push
scas
xor
jo
jnp
shrl
movsb
inc
fldln2
shl
mov
in
out
lods
out
cmpsl
cmp
movsl
sahf
or
pop
test
sub
inc
lods
adc
mov
aaa
mov
xorl
lds
sti
mov
add
int
push
popf
jae
scas
fnstcw
inc
cmp
push
iret
sbb
rorb
das
cmpsb
jne
mov
outsb
dec
in
or
fldl
imul
notl
nop
sahf
cmpsb
dec
mov
inc
std
mov
cltd
add
imul
pop
dec
add
dec
mov
movsb
and
xchg
cld
push
and
ljmp
daa
test
sti
out
dec
xchg
mov
int
jnp
test
xor
push
ljmp
out
adc
insb
push
cmpsb
dec
adc
fadd
mov
inc
ret
jl
mov
int3
adc
test
mov
sahf
test
andl
push
adc
mov
jnp
movsb
jno
mov
push
adc
imul
mov
and
dec
scas
scas
dec
adc
mov
push
scas
mov
mov
clc
xor
dec
jnp
aad
fstpt
jp
mulb
jnp
insl
mov
jnp
mov
mul
adc
faddl
popa
cmpsb
and
or
out
int
xor
mov
xchg
hlt
sbb
mov
outsl
push
es
push
pop
mov
adc
cmpsl
and
sbb
mov
pop
popf
aad
pop
jge
adc
dec
inc
jno
push
aas
adc
mov
sahf
jnp
in
pop
cmp
sbb
test
mov
dec
xlat
in
sahf
es
scas
push
pop
inc
rorb
xchg
and
or
test
sub
clc
scas
sbbl
lcall
xchg
sub
cmp
jge
jmp
adc
and
in
mov
push
movl
or
jb
mov
mov
cmpsb
hlt
sarb
jae
decb
xor
xor
jns
jae
cwtl
loope
pop
out
mov
cmp
pop
mov
fnstcw
aas
mov
cmpsl
inc
scas
add
mov
push
in
pop
aaa
movsl
cmp
das
jecxz
pop
out
dec
inc
repnz
std
add
cs
cmpsb
movswl
jecxz
popa
mov
out
test
dec
pop
fidivrs
jae
test
out
icebp
not
js
sbb
inc
std
xor
adc
inc
mov
mov
sub
pop
adc
clc
aas
pop
mov
stos
cltd
pop
or
sbb
add
iret
push
cli
xor
jg
fistpl
push
cmp
fstps
out
cmp
movsb
add
xor
in
test
xchg
add
lcall
cmp
lock
sbb
sbb
mov
lods
xorb
cmpsb
dec
and
rclb
xor
mov
fnstenv
cmpsb
mov
scas
mov
movsb
test
ss
fdivl
xchg
jne
fidivs
stc
pop
aad
jnp
cmpsl
shlb
lods
std
sahf
daa
mov
cld
pop
pusha
sahf
fimuls
push
dec
aam
xchg
jno
into
shll
cmp
std
inc
gs
push
mov
jmp
ficomps
or
inc
pop
sbb
shlb
mov
lods
add
xor
insl
dec
pushf
or
add
jno
in
out
add
sti
andl
das
incl
movsb
push
pop
xchg
test
aad
test
aas
or
mov
es
pop
aaa
sub
push
push
jmp
mov
xchg
mov
pop
adcl
xor
in
cs
movsl
fimull
xor
in
and
insb
mov
and
mov
jmp
std
in
adc
and
mov
cld
push
jbe
clc
call
xchg
movsl
sahf
outsl
stos
cs
enter
out
je
dec
sub
fdivrs
sti
pop
push
test
and
call
push
inc
repz
and
sbb
inc
pop
adc
mov
sub
aaa
xor
sbbb
scas
pop
sbb
mov
push
mov
scas
sub
push
shrb
popf
and
aad
inc
sbb
dec
in
stc
ret
mov
push
std
inc
ret
mov
add
dec
lret
mov
popa
push
out
xor
add
sub
stos
or
or
out
retw
add
push
js
mov
sub
in
sub
mov
leave
subl
dec
cmp
inc
out
cmp
in
xchg
push
fsubr
dec
scas
fstps
sbb
mov
sbb
daa
jle
shl
dec
jb
cmp
xchg
clc
fdivrp
lods
pop
sbb
imul
jb
movsl
into
dec
subb
add
add
cmp
and
dec
push
sub
jae
xchg
out
sahf
stos
push
inc
std
fld
dec
sbb
fmul
sbb
pop
cmp
push
cmpsb
das
push
xchg
inc
xor
inc
add
test
jbe
out
cbtw
repnz
pushf
jle
mov
scas
dec
and
popf
xor
in
mov
lahf
mov
xor
adc
pop
sbb
jmp
lea
push
aad
xchg
or
and
jg
popa
gs
fnsave
mov
int3
movsb
sbb
add
in
pop
push
frstor
nop
mov
push
dec
sbb
jnp
ss
inc
or
add
or
and
push
insl
scas
inc
jge
pop
mov
outsb
lret
gs
adc
gs
xchg
add
jo
pop
pop
lock
pop
cli
test
data16
dec
adcl
cmc
sbb
adcl
adc
pop
popa
dec
fs
pop
lcall
cwtl
adc
lret
scas
adc
sub
sub
cmp
cmp
das
ret
cmpsl
or
xor
dec
mov
fdivp
mov
dec
outsl
xchg
jmp
pop
xchg
lods
popa
cmc
test
or
repz
mov
adc
loopne
fldenv
pop
dec
push
cmp
mov
jle
push
imul
add
leave
jnp
outsb
pop
pop
icebp
neg
dec
stos
and
push
movsb
aaa
add
pop
inc
std
dec
subl
lea
outsb
fstpt
mov
cmp
push
and
sbb
push
dec
or
push
stos
hlt
xchg
in
cmp
or
fcoml
dec
es
sub
test
bound
ficoms
das
sbb
sti
dec
cmp
add
cltd
xor
cmp
jb
jae
mov
rcll
adc
push
cmp
es
sbb
pop
adc
and
in
pop
lock
gs
mov
adc
addr16
enter
shll
sbb
dec
icebp
aad
cmp
nop
push
mov
jns
mov
cld
ss
and
adc
cmp
mov
imulb
fwait
scas
sbb
jb
outsb
es
mov
sbb
jno
iret
fstps
xor
shll
mov
and
xchg
movsl
xorl
cmp
dec
aad
push
cs
fbstp
ss
xlat
jo
and
sbb
sahf
xchg
imul
and
mov
mov
sub
pop
mov
int
xchg
out
movsb
xor
xchg
adc
imul
jle
in
rorb
jmp
and
sub
jns
inc
and
outsl
lds
fmull
mov
test
hlt
stc
add
pop
xor
cwtl
inc
pusha
mov
xor
lods
sub
ret
das
inc
mov
mov
xchg
popf
ljmp
pop
and
lret
in
mov
fisttpl
cmp
and
sub
pop
or
fidivrs
xchg
cmp
xchg
insb
aaa
mov
lahf
cltd
mov
jae
insb
xchg
nop
xchg
push
jne
test
test
push
pop
lds
in
pop
loope
mov
gs
push
ja
pop
repz
outsb
xor
xor
xor
mov
sbb
shll
and
sub
mull
inc
jmp
int3
les
fimuls
mov
cmpsb
or
call
mov
inc
and
lods
js
sbb
or
faddl
mov
ds
jle
aas
aam
pop
inc
iret
sbb
pop
jae
fabs
repz
addr16
iret
sub
xchg
inc
adc
and
mov
ss
sbb
sbb
push
xchg
shrl
cltd
adc
div
lock
dec
fcmovne
and
sub
jns
inc
pop
pop
out
jae
clc
mov
movsb
mov
pop
inc
hlt
in
sahf
push
xchg
xchg
fnstenv
jo
in
inc
fcoms
mov
jl
jmp
ds
sahf
push
js
loopne
popf
repz
sti
or
adc
mov
cltd
pop
xor
or
popf
jo
fstpt
mov
leave
sbb
imul
push
ss
dec
push
scas
jne
cmp
sbb
prefetcht2
mov
mov
inc
std
xor
cmc
or
addr16
ds
mov
add
loop
dec
xchg
jnp
sbb
testb
les
pop
imul
in
fldenv
push
push
mov
cmpsb
or
pop
cmp
insl
sar
popa
sub
or
js
cmp
or
fnclex
stc
dec
scas
shlb
sbb
das
les
and
rcr
ljmp
imul
je
sub
pop
lods
sbb
pop
out
sbb
aad
mov
mov
adc
jle
pop
mov
push
add
inc
mov
mov
icebp
and
and
add
dec
in
js
nop
cmp
inc
popa
pop
sub
test
xchg
lods
popa
cli
or
ljmp
mov
push
mov
inc
mov
mov
pop
adc
push
call
push
push
popf
test
push
out
mov
add
fsts
fsub
rorl
cmpsl
mov
fidivrs
in
add
testb
fwait
test
mov
cmp
sti
int
cmpl
pop
xchg
jbe
std
xchg
in
fwait
test
mov
lock
adc
fldcw
arpl
sbb
inc
movsb
cmp
xchg
sub
rorl
sub
xor
add
int3
cmp
sti
dec
dec
jle
cltd
stos
cmp
cmpsb
dec
mov
lods
lcall
mov
rcrl
push
test
fs
cmp
test
sbb
sbb
in
movsb
and
outsb
leave
cmp
jnp
lea
neg
aad
gs
inc
push
fsin
dec
jnp
test
mov
push
pop
outsl
jne
jo
sti
push
arpl
lock
cli
mov
stc
lret
pop
test
sub
aad
loope
sub
mov
sbb
cmp
adc
hlt
xor
jge
lea
sbb
xor
jle
dec
xorl
pop
cmc
jl
nop
xor
jle
shlb
xchg
iret
push
jle
cwtl
ds
sub
scas
add
dec
loope
aaa
xchg
out
fistpll
cmp
mov
dec
std
popf
in
in
push
mov
addr16
call
cmpb
repz
fld
inc
push
ds
and
ljmp
and
push
cltd
pop
mov
das
mov
jp
sub
repnz
add
pop
daa
add
pop
loop
mov
je
xchg
mov
fcoml
add
es
mov
fidivs
mov
add
imul
call
scas
das
sti
incb
or
cmp
pushf
ljmp
je
xchg
pop
jge
pop
insl
lea
pop
mov
mov
inc
repz
dec
add
mov
jno
pop
jae
cmpsl
fwait
dec
cld
stc
mov
sbb
in
xchg
ss
std
mov
dec
insl
imul
imul
sbb
insb
mov
scas
dec
and
les
inc
cmpsb
mov
pop
scas
dec
sub
mov
sub
ficomps
mov
adc
cltd
lods
xor
adc
dec
dec
movsl
int3
ljmp
shlb
ja
imul
push
and
imul
das
adc
xor
stos
into
xor
loopne
cmp
fsts
shlb
mov
inc
mov
push
scas
jge
adc
sti
pop
dec
cmp
mov
cwtl
movsb
and
fucomip
inc
mov
stos
movsb
inc
scas
call
mov
lcall
das
int3
icebp
sbb
adc
mov
sbb
fld
xchg
es
ret
gs
sub
push
xor
pop
lods
dec
mov
mov
test
jecxz
loopne
and
pop
ds
and
andl
inc
push
ss
and
mov
movsl
jbe
ret
dec
iret
or
sbb
insl
pop
andb
and
ljmp
xchg
lds
sbb
pop
in
xchg
mov
jae
lahf
fiaddl
pop
sbbb
or
scas
fsubl
pop
lock
mov
and
lods
pop
imul
mov
mov
cmc
cmpsb
inc
sub
scas
lds
jle
mov
mov
cld
scas
test
sub
lcall
movsl
shrb
shrl
fcomps
xchg
in
add
mov
in
push
mov
xor
pop
cmp
ljmp
jnp
mov
and
sbb
hlt
in
pop
popf
xchg
pushf
addl
and
fcoml
lods
sbb
hlt
push
mov
lahf
add
or
mov
xchg
in
mov
pop
add
mov
jle
in
mov
jno
push
pop
loop
lods
xchg
icebp
stc
jnp
fdivl
sub
and
out
out
mov
mov
fisubl
sub
xchg
pusha
mov
inc
mov
andl
mov
xor
daa
lahf
mov
jge
cmp
movsl
pop
mov
add
mov
mov
push
mov
pop
mov
push
xchg
cs
lods
pushf
sysexit
push
xchg
inc
mov
idivl
lret
rorb
dec
inc
mov
std
pop
fdivrl
fdivl
sub
xor
daa
cld
test
fxch
inc
inc
cmp
adc
and
lock
adc
mov
dec
push
pop
jle
dec
in
push
adc
add
mov
push
mov
lods
pop
int
push
addr16
inc
xchg
out
mov
cwtl
out
add
mov
int
ss
jg
ja
ficoms
cmp
inc
outsl
pusha
or
insb
sbb
xchg
test
pop
sbb
int
xchg
or
mov
push
mov
movl
dec
out
mov
push
pop
add
pusha
jnp
pushf
mov
mov
and
arpl
jg
adc
add
mov
mov
test
out
pop
add
or
movsl
inc
int
jge
cmp
pop
xchg
mov
dec
clc
test
loop
xchg
icebp
inc
enter
mov
sbb
sub
cmp
fcompl
sbb
inc
orb
movsb
clc
test
fiadds
or
outsb
insb
hlt
sub
sahf
out
movsb
mov
movsb
push
test
dec
fistpl
mov
sbb
fistl
xchg
mov
dec
dec
pop
add
jp
jle
nop
iret
xchg
scas
or
rorb
dec
lods
dec
sbb
mov
add
or
jp
xor
mov
dec
ret
outsl
add
dec
or
or
addr16
xchg
aas
and
sub
test
in
jae
and
flds
inc
lds
mov
cmp
lock
or
mov
inc
mov
pushf
popf
or
or
pop
sub
sbb
and
pop
xchg
pop
arpl
into
jb
in
inc
imul
loope
mov
xchg
xor
lock
stos
test
cmp
cli
mov
pushf
cmpsl
fs
adc
and
hlt
sbb
in
push
xchg
loopne
mov
jb
dec
push
push
xor
dec
test
push
out
inc
cmpsb
or
mov
mov
fstps
out
cmpsl
les
aad
rcl
inc
fisttpl
ljmp
mov
sbb
or
stos
jnp
addr16
mov
jp
adc
push
lods
inc
and
xchg
inc
cmp
fildl
pop
sti
testb
pop
sbb
icebp
fcompp
push
int
mov
cmp
or
fmul
push
mov
std
mov
dec
movsl
movb
or
int3
jbe
pop
mov
xchg
test
repnz
mov
mov
imul
in
sbb
ds
mov
mov
insb
repz
mov
loop
xchg
fsubl
add
pop
xor
repz
inc
mov
jae
lret
mov
push
test
pusha
adc
mov
sarl
in
xor
sub
inc
das
aad
cmpsl
mov
sbb
addr16
sbb
data16
shrl
add
sahf
and
mov
loope
inc
cmp
mov
mov
pop
push
or
mov
stos
add
cmp
lahf
fnstcw
lea
je
mov
mov
jae
jl
movsl
cmpsb
add
mov
iret
cmpsb
and
mov
cmpsb
sub
test
fs
mov
pop
xor
cmp
mov
sbb
lods
cmp
adc
cmpsb
imul
xchg
jle
repnz
mov
lods
push
call
dec
loopne
fistpll
js
jp
or
sub
xchg
jno
in
popf
bound
xor
gs
dec
mov
shrb
outsb
test
int3
test
movsb
mov
test
mov
jge
or
dec
cmp
pop
fcompp
cmc
in
int3
test
sbb
mov
pop
xchg
les
scas
adc
loop
ficomps
icebp
iret
fwait
lahf
leave
sbb
test
dec
dec
lds
push
dec
mov
fadds
mov
addr16
popf
test
push
test
or
cmp
sahf
add
jae
adcb
and
mov
in
data16
sti
cmc
adc
mov
xchg
push
stc
es
fxam
fbstp
out
loope
mov
test
imul
or
lods
mov
lock
ja
enter
out
jg
jns
jle
and
incl
and
inc
pop
call
addr16
pop
incb
and
add
mov
sbb
mov
sbb
and
std
sbb
aaa
xchg
inc
jns
cmp
daa
push
pop
in
sbb
mov
iret
aam
pop
aad
repz
cmp
std
jnp
mov
mov
aam
jmp
imul
insl
pop
jns
push
out
mov
sbb
nop
mov
sbb
scas
mov
lahf
jns
jns
popa
jg
movsl
pop
xor
push
pop
xor
scas
sbb
jnp
enter
cmp
adc
mov
jno
bound
add
lret
cmpsb
test
add
test
test
rolb
out
loope
pop
lods
mov
movsl
xlat
dec
pop
icebp
or
das
orl
cli
test
and
popf
rorb
or
stos
ficomps
sbb
and
or
fsubrs
les
scas
jmp
leave
mov
in
fnstsw
push
mov
mov
arpl
or
cltd
pop
jbe
nop
negl
scas
xchg
test
sbb
cli
cmp
outsb
pop
xor
out
dec
mov
addr16
and
loop
inc
push
xchg
iret
pavgb
out
div
sbb
lret
push
sbbl
int3
outsb
or
sbb
mov
and
add
mov
dec
mov
mov
mov
rolb
lods
filds
int3
mov
out
and
bnd
add
xchg
pop
aad
sbb
repz
mov
stc
push
movsb
jmp
divb
lock
in
ret
jg
or
pop
mov
adc
int
jae
and
inc
push
cmp
add
xchg
xchg
mov
sub
fwait
into
mov
inc
push
loopne
insb
sub
jge
notl
lock
out
sahf
inc
push
cmp
into
dec
rcr
jne
sub
push
mov
repz
push
jns
jae
adc
mov
add
fdivs
push
scas
mov
in
lea
int
and
mov
mov
imul
mov
sub
test
nop
mov
sti
inc
roll
adc
xchg
mov
popa
sbb
inc
insb
push
xchg
push
pop
in
and
and
mov
or
clc
incl
jns
mov
loope
sub
mov
mov
and
and
stos
int
test
xchg
lods
xchg
jge
mov
hlt
push
fwait
sub
cmp
ljmp
sub
push
shl
mov
sahf
stos
cmp
mov
mov
inc
mov
xchg
xchg
mov
call
mov
dec
addr16
cltd
das
jecxz
inc
adc
xor
push
and
aam
xchg
jp
adc
sub
and
mov
pop
adc
mov
das
jne
dec
fcoms
in
lret
pop
jl
add
fdivs
inc
inc
dec
xchg
iret
push
cmp
stos
rcrb
ja
shrl
push
lods
insl
inc
in
cs
xchg
lret
mov
int3
mov
mov
mov
int
rcrb
pop
std
rorl
and
mov
pop
xor
mov
mov
test
dec
push
in
flds
sti
mov
pop
fimuls
xor
sbb
push
aas
xchg
add
push
arpl
test
sti
sbb
out
ret
int
das
out
and
pop
scas
hlt
fld
pop
mov
sbb
and
aam
mov
test
lock
jnp
sti
xor
mov
adc
sahf
scas
sub
fsincos
xchg
aad
dec
add
and
ss
sbb
inc
inc
subb
rclb
cmp
mov
jne
sti
jno
subl
std
sbbl
sbb
test
mov
mov
mov
ja
fldt
cltd
and
lods
mov
mov
sbbb
sub
add
mov
roll
add
or
test
pop
sbb
cmpb
and
jecxz
fidivrs
idivb
xor
mov
push
jp
das
cld
test
mov
adcb
mov
or
test
vpshab
jno
inc
adc
mov
fstps
shll
cmp
imul
repz
bnd
mov
sub
mov
cmp
jp
lcall
lret
fldenv
outsl
pop
jl
mov
cmp
jae
sub
push
out
cwtl
loop
outsb
mov
hlt
clc
lods
xchg
gs
inc
push
into
cmpsb
pop
movsb
cli
adc
js
add
in
xchg
nop
push
mov
jbe
int3
or
stos
sub
sahf
test
xchg
jmp
push
ljmp
xor
enter
inc
pop
fcmovnu
push
pop
data16
jecxz
mov
ficoms
mov
mov
dec
pop
sbb
jns
and
mov
mov
mov
fstl
pop
jb
mov
cmpsb
mov
dec
lcall
ret
mov
or
cmc
adc
shrb
ficomps
cmc
in
xchg
cld
scas
or
mov
gs
xchg
fs
sbb
jge
ds
pop
loope
mov
jbe
fcmovbe
and
jp
cld
add
cs
push
push
inc
mov
sbb
pushf
insl
push
mov
loop
sahf
mov
sbb
jg
movsb
imul
daa
xor
mov
aad
mov
inc
aaa
int3
fcompl
loopne
pop
lods
cwtl
xor
or
test
push
jg
push
cmpb
lods
xchg
subb
jnp
mov
cld
xchg
cmp
pop
aad
movsb
push
stos
sbbl
jge
lods
aaa
push
rcl
lods
lea
jg
hlt
dec
lods
or
sbb
push
rorb
aaa
mov
sub
cwtl
sahf
pop
andl
pop
aam
gs
mov
cmpsb
mov
fsts
pushf
loopne
mov
xchg
fsubl
dec
cs
idivl
inc
test
push
bound
pop
cld
or
adc
lock
fdivrs
sub
aaa
sub
and
mov
xchg
cld
jne
inc
inc
test
mov
in
pushf
xchg
mov
fwait
pop
push
dec
mov
pushf
in
test
iret
popf
ss
xchg
jge
xlat
cmpsb
aas
out
je
sub
insl
pop
mov
cld
sahf
dec
jnp
shlb
adc
dec
mov
pushf
outsl
jnp
mov
add
out
pushf
aaa
mov
insb
mov
enter
hlt
mov
inc
xor
xchg
push
popa
call
jle
cmpsb
mov
xorl
pop
fsubrs
and
ss
inc
hlt
lods
fsts
cmpl
aaa
out
or
int3
jne
cld
mov
sahf
jo
and
lods
xchg
movsl
popf
or
cmpb
enter
mov
and
sahf
lods
and
stc
adc
subb
sti
push
sahf
lcall
in
pushf
mov
mov
in
and
out
adc
mov
add
mov
mov
frstor
adc
nop
cmp
gs
mov
ljmp
inc
fisubrs
xor
hlt
xchg
popa
movsb
imul
sahf
mov
lea
lds
fisubl
fimuls
iret
pushf
mov
gs
mov
push
out
mov
push
push
fisubrs
stos
cld
mov
ret
jge
int3
fs
push
sahf
pop
push
sub
std
mov
in
enter
pop
push
cmpsl
aaa
sub
mov
or
xor
hlt
cmp
mov
jge
aas
inc
or
push
sub
movsb
popf
push
xchg
mov
pop
cmpsb
pop
xor
aaa
sbb
lods
je
dec
pop
cld
pusha
scas
and
push
aaa
mov
pushf
inc
fwait
call
mov
cli
loopne
cmpsb
pushf
xor
jbe
xor
inc
mov
lret
jmp
push
cmp
in
mov
add
xor
push
scas
fstpt
mov
mov
jne
icebp
filds
clc
add
aas
jg
int3
cmpb
test
push
pushf
stos
mov
adc
outsb
sbb
test
cwtl
mov
clc
daa
or
push
loope
rcrl
movsl
pop
pushf
pop
mov
popf
push
pushf
xor
addl
pushf
xor
imul
loop
mov
das
push
test
xchg
and
inc
jl
lods
mov
lods
cmpsb
fistpl
cli
pushf
cs
jno
out
push
cmp
mov
pop
xchg
test
mov
andl
cwtl
lds
in
xchg
cmp
loop
stos
dec
xchg
mov
out
cmc
lods
jnp
testb
in
pushf
xchg
jp
jae
and
pushf
cmpsl
dec
pusha
push
inc
cltd
rcrl
ja
jns
inc
pushf
xchg
jne
mov
pushf
cmp
stos
pop
or
pushf
jle
in
mov
add
xchg
adc
sbb
ficomps
pushf
xchg
outsl
pop
cltd
or
js
sbb
mov
jo
subb
jne
pushf
adcl
int
loopne
pushf
push
idivb
xor
pop
jecxz
sbb
push
pushf
leave
enter
loope
lret
pop
sub
es
mov
movsb
fisubs
mov
shr
sub
loope
pushf
shll
dec
push
das
out
mov
dec
pop
inc
mov
arpl
jmp
add
dec
fisubl
nop
daa
pop
cmp
mov
pushf
lds
dec
pop
test
mov
ja
fidivl
rcrl
cmp
std
insb
cmpsb
pushf
lahf
or
pop
sar
add
lret
mov
jge
push
imull
pushf
sbb
xchg
cmpsl
mov
gs
cmp
loop
scas
cmp
pop
push
mov
jno
and
pushf
inc
popf
cs
dec
loop
xchg
outsl
mov
and
sbb
data16
pushf
push
pop
adc
mov
pushf
fsub
aas
xchg
loope
push
cli
rcrb
or
sahf
roll
daa
popa
inc
push
orb
and
in
mov
insb
test
xchg
push
dec
pushf
pop
cs
jge
push
fs
jge
ljmp
push
fistl
pushf
rorb
pushf
jecxz
mov
loopne,pn
xchg
lret
xchg
fdivr
push
xchg
mov
or
jne
cs
pushf
cmpsl
sbb
mov
movsl
xchg
popf
push
xor
mov
fiaddl
daa
imul
jl
or
xchg
cld
sub
cmpsb
push
in
mov
sub
pushf
dec
xchg
fistpl
mov
cmp
scas
or
dec
rcrb
in
in
mov
pushf
addl
fs
sub
je
mov
mov
pop
mov
ret
pushf
lods
arpl
adc
movsl
or
pop
cmp
andb
add
mov
mov
pushf
outsl
adc
jns
mov
in
adc
adc
fisubrl
pop
in
nop
add
pushf
bound
sahf
xor
sbb
sub
adc
push
pop
sbb
ds
mov
fsubrl
xchg
test
pop
xchg
pushf
scas
leave
jge
push
push
ljmp
xorl
jge
push
imul
jmp
sub
in
pushf
jl
fmull
sub
fdivl
push
movsb
fidivrs
mov
mov
sti
int3
mov
add
hlt
xor
mov
cmp
movsl
lcall
fidivrs
pushf
roll
dec
xor
cmpsl
push
pop
push
xchg
ja
lea
mov
insl
movsl
jmp
mov
mov
mov
aam
fsubl
in
or
enter
js
aaa
jbe
into
mov
in
scas
xor
dec
sub
and
jne
lds
fs
test
dec
push
shl
outsl
sbb
add
sbbl
out
mov
in
push
xchg
loopne
cmp
fsubrl
mov
sahf
xor
pop
and
mov
mov
mov
popa
sbb
dec
and
and
push
xchg
nop
pushf
cmpl
xchg
pushf
negb
out
loopne
pop
jge
mov
popf
and
lods
mov
xchg
fcomp
mov
cmp
sbb
push
fwait
aas
xor
notl
push
push
popf
xor
jbe
push
sub
sbbb
and
movsb
inc
pop
push
daa
das
cmp
pushf
mov
lods
popf
insl
rclb
xlat
pushf
inc
jnp
int3
pop
pushf
mov
xchg
pop
loopne
enter
mov
scas
movsl
ss
bound
pop
mov
xchg
sbb
dec
mov
adc
test
pushf
mov
mov
mov
test
leave
mov
xor
inc
cmp
fiadds
in
xchg
mov
mov
mov
outsb
dec
addr16
pushf
push
stc
sub
fdivr
mov
test
je,pt
sbb
jmp
mov
aam
clc
mov
dec
lods
fadds
xlat
push
mov
into
pushf
les
and
adc
sub
cs
sub
test
mov
cmp
call
mov
xlat
jmp
mov
cwtl
ficoms
pushf
bound
pop
insl
cmp
jge
leave
das
aad
gs
inc
sub
scas
adc
ja,pn
jge
mov
pushf
sbb
sbb
inc
mov
cmp
loop
loopne
fcomps
mov
and
push
idivb
pop
pushf
jo
xchg
mov
adc
test
dec
adcl
testb
ljmp
pop
gs
lds
dec
xor
out
mov
dec
pop
jge
jns
cmp
xor
scas
ficomps
stos
mov
pushf
movsl
lcall
fldenv
mov
bnd
hlt
jns
add
jg
loop
loopne
and
ss
cs
dec
ror
fstpt
loope
jbe
mov
jne
xchg
fisttps
js
fildl
into
cld
cwtl
lods
pop
movsl
loop
mov
sub
pushl
mov
mov
xchg
pushf
enter
or
leave
cmp
adc
mov
out
lahf
ficoml
mov
cs
int3
and
lods
or
pushf
movsb
push
pop
arpl
jecxz
pushf
outsb
je
and
out
push
cmp
les
in
int3
aam
loopne
fistpl
pushf
enter
adc
push
xor
rcr
lea
mov
in
xchg
stos
movsl
mov
push
mov
mov
ret
pushf
jge
sub
movsl
mov
imul
xchg
pushf
dec
mov
adc
push
or
and
jns
sbb
xchg
mov
sub
mov
jl
dec
mov
movsb
jne
shlb
shl
pop
pushf
and
sti
mov
sub
test
and
dec
adc
into
and
or
jne
fisttps
pushf
jns
aad
mov
cwtl
lret
jp
dec
push
cld
jle
adc
movsl
xchg
mov
mov
test
aaa
xchg
jns
xchg
dec
pushf
movsl
xor
out
dec
cld
xor
mov
ja
pushf
mov
jne
cmc
sbbl
sahf
aas
jle,pt
or
add
mov
add
das
cmc
movsb
fsubp
xchg
cmpsl
shll
int
ficompl
xchg
pushf
cmp
dec
and
cltd
inc
xchg
xor
mov
in
add
dec
in
add
cld
fs
jbe
scas
hlt
lea
or
loop
sbb
call
mov
or
das
popa
movb
jb
adc
movsl
or
xor
movsl
sbb
lcall
mov
mov
sub
pop
in
mov
fldenv
or
mov
add
or
std
stos
pop
mov
and
push
pop
mov
ret
arpl
loop
sub
push
jl
sbbb
adcb
mov
cmpsl
mov
add
and
bound
pop
cmp
push
aas
fmuls
ret
pop
jecxz
mov
and
rorb
push
fwait
sahf
xor
pop
add
stos
gs
or
subb
push
ret
ret
xor
jecxz
add
add
push
adc
sbb
mov
out
sbb
mov
es
mov
dec
ret
cmp
add
gs
lods
jbe
cld
inc
inc
cmp
cmp
sbb
ret
mov
repz
or
jecxz
push
mov
cmp
pop
inc
push
adc
xor
mov
mov
or
insl
repz
aad
fadd
add
add
cmp
fld
idivb
inc
sbb
scas
adc
andb
flds
sub
mov
movnti
jecxz
add
into
test
arpl
cmp
mov
xorl
and
popf
movsb
mov
ret
ljmp
int3
dec
mov
aas
and
pop
inc
inc
ljmp
push
movsb
jns
jecxz
add
lods
inc
movsb
jg
mov
mov
lods
mov
mov
pop
add
jnp
lahf
and
lods
ds
scas
and
pop
in
mov
scas
mov
pop
cmp
cld
int3
jecxz
and
or
cmp
movsb
mov
ljmp
stos
ret
das
loop
add
nop
mov
and
push
sub
pop
add
lea
aas
jno
sub
adc
mov
mov
ljmp
sti
mov
mov
jnp
sub
mov
pop
mov
jecxz
add
pop
add
movsb
aaa
and
pop
bound
mov
push
xchg
mov
jecxz
cmp
ret
add
arpl
cmp
shrl
add
ret
scas
mov
loop
ret
add
loope
mov
insb
jnp
pushw
dec
adc
adc
cmp
mov
jne
movsl
ret
jecxz
jecxz
add
pop
add
xor
jbe
sbb
leave
jecxz
add
sbb
mov
and
ljmp
adc
test
fisubs
mov
sbb
std
and
mov
sbbb
jg
cmp
fwait
ret
pop
ja
outsl
lods
push
add
mov
loop
js
arpl
imul
push
cmpsb
mov
sub
pop
add
jno
loop
das
push
pop
inc
and
out
jmp
bound
ret
mov
jl
xor
jecxz
adc
hlt
addb
shrb
inc
xor
stc
and
in
cmp
das
loop
jae
mov
adc
ret
pop
mov
pushf
aas
add
and
ljmp
stos
ds
bound
cmp
pop
cld
inc
mov
jl
ja
xchg
or
add
scas
dec
and
pop
pop
inc
andb
mov
aas
xorl
mov
mov
and
es
mov
and
cmp
outsl
jl
add
das
sbbb
xchg
pop
sbb
bound
mov
mov
sub
push
jl
jecxz
and
adcb
sub
out
cmp
cmpsb
movsl
cmp
mov
ret
aam
cld
ret
add
stos
mov
mov
sub
jl
lret
shrb
scas
pop
pop
cmp
jl
and
inc
mov
aas
fmuls
mov
and
ljmp
loop
add
add
xchg
and
xor
fwait
movsl
pop
ret
hlt
pop
imul
fstps
xchg
sub
mov
mov
and
idivb
and
push
and
ret
add
pusha
and
inc
push
sbb
sti
cwtl
mov
mov
cmp
xchg
and
pop
outsb
add
sub
jns
pop
inc
fldenv
sub
jbe
sub
ss
mov
loop
mov
xor
fsubl
std
inc
cli
or
mov
inc
push
test
add
imul
cmpsl
jl
and
inc
xorb
enter
ret
lods
scas
sub
jl
ret
popl
daa
aad
testb
lods
inc
lods
sub
or
xchg
lock
fyl2x
ror
aad
push
shlb
mov
gs
pop
scas
arpl
mov
xor
add
loop
push
xorb
ret
inc
push
jle
bound
sahf
jns
gs
int
pop
stc
imull
cmp
ret
add
movsb
or
arpl
sbb
adc
lds
jo
push
dec
and
loope
ret
and
movsb
inc
gs
xchg
hlt
mov
jge
pop
loope
xchg
add
adc
cmpsb
and
pop
aad
mov
sbb
ret
loop
stos
repnz
ljmp
sub
inc
pop
hlt
mov
fdivs
ljmp
xor
in
std
add
xlat
lock
aas
inc
aam
not
and
jle
stos
mov
push
add
loop
add
cmp
out
lock
and
pushf
push
inc
aas
bound
test
cwtl
add
test
enter
aad
mov
and
adc
dec
mov
push
outsl
mov
shlb
adcl
push
pop
in
insb
add
ret
inc
loop
sub
insl
cmp
fldenv
mulb
sti
jle
negl
push
jno
push
call
adc
std
add
and
inc
inc
mov
arpl
sub
cld
adcl
inc
das
and
mov
add
mov
mov
cld
and
cmpsl
ret
repnz
popl
rcrl
jecxz
gs
push
add
push
mov
mov
jmp
or
lahf
add
pusha
loop
dec
out
mov
add
adc
bound
xchg
aas
stc
mov
mov
stos
aad
mov
jecxz
sub
shlb
pop
add
mov
inc
push
aad
loope
mov
mov
scas
sahf
and
call
add
cmp
inc
bound
sbb
scas
scas
mov
mov
sub
pop
and
inc
dec
rorb
aad
lahf
and
lods
mov
repnz
inc
push
mov
loope
scas
jmp
pop
pusha
adcb
cmp
cmc
enter
inc
add
mov
repz
lea
in
iret
es
mov
ret
add
jecxz
mov
movsl
int3
push
lock
repnz
shll
jecxz
scas
sub
pusha
ret
and
mov
arpl
adc
scas
stos
sbbb
stc
ret
jbe
insl
inc
jp
push
test
mov
test
and
popa
movsl
ret
and
repnz
lock
sbb
or
cmp
stos
addr16
cs
xchg
push
sti
subb
mov
xchg
ss
lahf
ret
adc
idivl
mov
jecxz
cmp
lock
mov
enter
sub
pop
loopne
pop
or
push
ljmp
aad
in
mov
call
outsb
add
scas
cmpsl
and
sub
jns
jbe
jl
arpl
mov
adc
clc
into
lods
stos
or
mov
ffreep
loop
inc
cs
lret
inc
and
lahf
inc
cmpsl
mov
add
js
imul
and
sarl
addr16
subl
mov
ret
add
pop
ret
and
xchg
sub
add
or
cmpsl
mov
add
insl
mov
arpl
cmp
mov
movsl
loop
scas
mov
imul
mov
add
pop
daa
loope
ljmp
pushf
pop
rcrl
ret
jecxz
pop
sbb
or
arpl
jnp
stc
stc
test
and
mov
ret
in
push
or
mov
xor
fdivr
and
pop
sub
out
sbb
addr16
inc
jecxz
std
mov
push
in
mov
mov
mov
mov
aas
pop
outsb
mov
outsb
fwait
mov
sub
sbb
cmp
mov
test
mov
mov
jecxz
cmp
sbb
cmp
cmp
pop
ret
arpl
sbb
stos
scas
lahf
outsl
pusha
jmp
out
fcomp
and
push
dec
lock
cmpsl
clc
mov
push
push
cs
ret
mov
ja
divl
or
pop
mov
ljmp
dec
mov
movsl
stos
lahf
enter
mov
ret
sub
jl
loop
add
xchg
mov
inc
xchg
cmp
inc
bound
and
sarb
aad
sbb
sub
cmp
jecxz
add
mov
mov
test
div
js
xor
outsb
or
xor
hlt
lock
mov
jnp
call
xchg
jb
pop
stos
outsb
lock
jecxz
rolb
aad
sub
test
orl
shlb
fsubl
shlb
das
out
ret
add
inc
and
xor
push
into
xor
cmpb
add
and
xchg
jecxz
movsl
sti
ret
enter
mov
ret
push
lods
jns
mov
push
aaa
ret
nop
jecxz
pusha
movsb
push
fsubr
xchg
jmp
and
mov
andb
mov
subb
arpl
and
test
scas
and
inc
mov
add
xlat
mov
mov
cmp
and
mov
shlb
add
push
and
cmp
mov
sbb
arpl
ss
mov
mov
or
jbe
fdivrs
and
sub
push
mov
add
shlb
add
push
push
and
xor
mov
pop
push
sbb
popa
loop
cmp
mov
sub
add
and
scas
int3
cmp
bound
aad
and
and
mov
das
add
out
pop
gs
xor
enter
jbe
lods
movsl
lods
movsb
int3
and
cmp
das
imul
sub
pop
mov
cmpb
mov
inc
ret
sub
mov
lahf
mov
out
xchg
mov
pop
jae
test
test
imul
fs
cmpsb
mov
imull
and
jp
and
js
push
inc
das
xor
bound
sub
sbb
mov
add
sub
loop
leave
dec
gs
ja
mov
mov
enter
ret
xchg
or
loop
push
xor
btr
jb
sub
shl
pop
faddl
xchg
add
ret
xor
jnp
inc
jecxz
cmp
sbb
add
jnp
and
cli
aaa
cmp
popf
push
cmp
jb
xchg
repnz
mov
cmpb
in
std
fisttpll
icebp
mov
divb
pop
add
dec
aad
sbb
pop
sti
mov
int
enter
and
xor
and
repz
xor
aaa
in
mov
mov
lret
mov
pop
cmpsl
jecxz
cmp
add
fwait
enter
aam
clc
daa
cmpsl
sub
add
sub
mov
ja
arpl
or
loop
mov
cmp
ljmp
cmpsl
frstor
stos
mov
pop
mov
jecxz
xorb
add
mov
push
mov
jcxz
loopne
mov
sahf
jle
mov
scas
sub
xor
mov
orb
in
les
call
jecxz
add
sub
cmp
sahf
cmpsb
loopne
lock
jg
shll
das
outsl
sti
decb
sbb
mov
mov
pop
and
mov
sbb
or
out
sub
pop
imul
and
jecxz
gs
jl
mov
or
adc
cmp
fistpll
cmp
xorl
scas
xor
ret
ret
or
mov
mov
aad
mov
and
out
dec
jne
test
sahf
bound
test
leave
mov
jmp
mov
mov
call
sub
xchg
mov
divb
adc
mov
pop
add
int3
fiadds
cmpsl
xchg
mov
cmp
mov
jb
and
mov
pop
in
dec
xor
test
iret
cmp
pop
sub
shlb
popa
push
pusha
out
inc
arpl
sahf
cmp
stos
xor
les
rcl
add
pop
cs
push
nop
adc
js
mov
popa
and
xor
pop
jp
bound
test
push
ret
cld
ret
jecxz
jecxz
cmpb
or
xchg
mov
fsubs
mov
scas
dec
outsl
pusha
push
mov
and
aas
mov
jecxz
ret
jle
pop
and
lods
or
scas
cmp
jle
out
loopne
jp
ret
add
mov
test
in
in
lods
stos
fbstp
mov
dec
ret
jl
loop
add
mov
das
mov
subb
inc
ret
inc
out
outsl
adc
push
push
mov
add
popa
and
lods
das
hlt
mov
bound
mov
lret
fdivr
cli
mov
add
add
enter
lret
jns
mov
sub
hlt
ret
jmp
mov
sahf
jl
ljmp
inc
sub
in
loop
stos
ja
jmp
lea
fcmovbe
cmp
mov
sub
loop
outsb
stos
call
nop
aad
jle
cwtl
test
mov
push
mov
popa
arpl
mov
cmp
lods
ret
ret
mov
test
loopw
in
jecxz
pop
mov
or
inc
sahf
in
add
addr16
fcmovu
shlb
jne
fbld
insl
sub
or
inc
add
lods
or
mov
add
jecxz
lahf
cli
in
and
aad
ja
lds
in
push
jns
and
pop
inc
jecxz
add
mov
pop
and
test
shlb
sub
mov
test
mov
add
pop
ret
mov
add
mov
cmp
cmc
push
repnz
pushf
mov
jl
lods
dec
pushf
cmpsl
shlb
push
pop
pop
arpl
call
mov
pop
cmp
out
dec
lods
out
and
testl
mov
fsubs
mov
or
mov
ss
adc
cli
sbb
inc
lret
mov
mov
add
stos
mov
jecxz
add
xchg
js
and
daa
sbb
loop
mov
inc
bound
and
subb
jecxz
dec
sti
arpl
and
aam
test
inc
movsl
sub
fildll
hlt
ja
sub
enter
and
cmp
jb
pop
xor
mov
xor
loop
jbe
push
fcomi
out
rolb
sub
add
cmp
test
sbb
fsubrs
mov
push
test
loope
ljmp
out
bound
scas
nop
ret
inc
jecxz
jecxz
and
jmp
cmp
xor
pop
mov
sbb
rcrb
ret
nop
lock
xor
push
pop
sbb
popf
in
mov
sbb
or
lea
cltd
aam
lock
mov
add
pop
pop
xor
cmp
inc
mov
and
sub
sbb
das
xor
dec
mov
out
mov
aam
mov
sbb
arpl
popa
mov
insb
xlat
scas
fdivs
loop
ljmp
jecxz
ja
enter
cmc
push
iret
js
imul
mov
mov
aas
imul
stos
adcb
ljmp
xorb
adc
repnz
gs
xchg
mov
loope
and
mov
mov
in
das
sub
sahf
cltd
sarl
xorb
dec
and
nop
in
pop
stc
push
insl
cltd
mov
bound
jae
cmp
mov
mov
jecxz
mov
adcl
and
gs
popa
das
test
push
cmp
pop
sub
jbe
sbb
adc
mov
enter
aad
arpl
push
mov
ret
ret
gs
add
frstor
push
addr16
lock
fucom
add
xchg
mov
lds
push
pop
cltd
ret
dec
loop
add
aad
je
mov
sub
outsb
int
push
mov
out
outsb
dec
fstps
fsubp
inc
nop
or
sub
inc
adc
sbb
fsubl
pop
std
ret
js
and
push
and
xor
xchg
addr16
icebp
add
imulb
lret
ret
adc
mov
ss
mov
sahf
ret
mov
and
cmp
xor
bound
mov
sbbb
sub
add
sbb
inc
xor
gs
mov
lea
ret
sar
add
gs
int
mov
ljmp
inc
dec
push
cmp
add
pop
pop
jle
test
insl
push
push
mov
jecxz
sbb
push
test
push
mov
mov
cli
fwait
sub
movsb
xor
test
in
das
jmp
js
mov
lahf
add
pop
push
mov
loope
aaa
ljmp
ljmp
pop
roll
xchg
rcrb
orl
lahf
mov
movsb
out
ret
mov
jno
sub
cmp
andb
sub
std
xchg
mov
les
jo
mov
ret
lahf
les
outsl
stos
loop
movsl
mov
mov
xor
jge
js
add
aaa
cmp
popa
bound
gs
pop
adc
cmpb
mov
stos
ret
pop
aad
and
ljmp
scas
out
loop
arpl
out
test
pop
out
dec
fidivrl
and
imulb
movsl
je
loop
lods
lds
jecxz
pop
test
daa
add
inc
imul
enter
sub
or
jne
add
add
inc
jbe
cmpsb
and
scas
gs
hlt
es
into
mov
add
inc
and
sbb
imul
cs
ret
mov
sbb
insl
fcmovbe
add
popf
sub
sub
movsb
sub
push
nop
cs
add
cmpsl
and
iret
xor
adc
gs
cwtl
xchg
nop
dec
mov
arpl
xor
mov
pop
test
adc
pop
and
lock
test
ret
mov
lds
enter
imul
call
lock
mov
mov
mov
sub
sahf
inc
fisubs
daa
gs
or
fisubrl
sbb
dec
ss
sub
hlt
pop
sbb
aam
mov
stos
and
push
push
or
popf
ret
in
mov
xlat
int3
ret
inc
scas
bound
outsl
sub
push
jp
jl
mov
mov
jb
jl
inc
ret
cmp
aam
sub
xor
pop
jmp
in
add
hlt
pop
cmpsb
mulb
fsubl
in
bound
sub
inc
ret
or
movsl
cmpsb
jnp
add
cmp
repz
dec
inc
xor
lahf
jle
inc
stos
lods
or
mov
imul
adc
push
or
imull
hlt
mov
mov
sbbb
pop
inc
add
sbb
and
mov
lock
repnz
mov
add
pop
pop
leave
gs
mov
and
pop
cmp
lods
xor
add
std
mov
mov
arpl
lds
mov
enter
stos
mov
mov
cwtl
cmpsb
insl
scas
imul
mov
xchg
cld
cmpsb
in
xorb
testl
aad
mov
jecxz
or
je
pop
mov
cmp
lods
and
adc
or
xlat
and
pop
jge
cs
in
xor
jne
xchg
in
mov
ret
sbb
xchg
das
pusha
sub
arpl
pop
loop
add
pop
jle
dec
outsb
sarl
or
dec
cld
jnp
dec
inc
lock
hlt
lock
and
mov
das
hlt
fidivrs
and
repz
repz
push
in
pop
xor
pop
rorl
inc
iret
mov
add
and
sbb
mov
dec
stos
cs
js
adcb
shr
movsb
js
and
push
cmp
les
push
repnz
mov
aad
shrb
push
scas
sub
jbe
mov
rorb
and
mov
jnp
subb
cmc
dec
cmp
cmp
sbb
pop
push
test
lods
cs
arpl
mov
imul
xor
add
in
add
inc
adc
cld
ret
bound
fdivrs
sub
mov
push
pop
movsl
ret
lret
lds
bound
xchg
insl
add
and
push
push
lock
imul
es
imul
jle
mov
lahf
dec
ret
push
mov
mov
add
and
movsb
das
pop
jae
call
enter
movsb
ret
ret
cmp
jecxz
gs
in
sbb
xor
jo
scas
mov
jge
arpl
popa
xor
test
xor
test
sub
scas
xchg
mov
push
add
repz
scas
das
test
sbb
es
xor
jecxz
dec
push
inc
xchg
test
and
xor
inc
arpl
adc
add
mov
pusha
cld
lret
xor
mov
push
es
cmp
add
loope
in
pushf
jecxz
add
and
int
lahf
movsb
out
imul
mov
and
divb
stos
pop
in
loop
les
cmp
inc
addr16
mov
mov
mulb
stos
imul
ret
push
dec
insl
fnstenv
xchg
sub
out
push
pop
repz
sub
or
xor
inc
mov
jo
scas
jecxz
sbb
fstl
cmp
ljmp
pop
add
adcb
popa
mov
mov
and
adc
in
cmp
sub
pop
jmp
sahf
ret
mov
icebp
aad
and
sub
jle
mov
adc
pop
mov
cmp
ret
jge
call
cld
and
ds
loop
test
stos
rolb
sub
pop
and
pop
hlt
pop
mov
out
outsb
xchg
sub
sub
fdivs
xchg
push
jl
scas
pusha
je
scas
pusha
or
cli
sub
call
mov
pop
in
cmp
adc
das
lahf
inc
out
mov
imul
jecxz
push
hlt
lahf
add
dec
movsb
sub
std
cmp
daa
aaa
mov
and
jl
loop
mov
in
std
xor
pop
aas
inc
or
mov
out
je
sub
rorb
jno
cmp
insb
lods
ret
pop
and
call
loope
cmp
xor
mov
inc
loop
pop
add
dec
test
mov
xor
mov
pop
jl
jecxz
add
and
in
fsubl
sub
pop
mov
mov
in
add
in
push
xchg
mov
loop
cmp
mov
jp
add
jl
push
shrb
imul
inc
cmpsb
daa
mov
ds
jecxz
insb
ret
mov
das
jl
nop
and
jge
mul
cmp
mov
and
jp
pop
bound
mov
pop
jae
fisubrs
in
mov
aam
push
add
movaps
les
test
in
mov
lahf
xchg
cmp
gs
movsb
les
fdivrs
mov
lods
xchg
ret
das
fdivs
sbbl
add
addb
pop
insl
aaa
aad
push
hlt
loope
mov
add
mov
jnp
outsb
ret
in
and
scas
inc
mov
cmc
jle
or
mov
push
adc
sarb
mov
inc
fsubs
stos
mov
mov
inc
popa
orl
sub
xchg
repnz
push
mov
dec
aad
test
mov
jecxz
xchg
sti
cmp
stc
out
loop
cmpsb
into
mov
loopw
cmp
mov
xor
pop
jle
or
or
loopne
pushw
iret
lock
ja
pop
daa
mov
mov
mov
scas
sub
pop
mov
aam
int
les
fdivrl
addb
ss
mov
add
sub
and
std
imul
enter
mov
test
jge
sti
mov
loope
mov
stos
cmp
cld
inc
mov
cmp
decb
mov
lret
inc
add
das
sub
aas
mov
pusha
push
push
pop
ret
nop
inc
mov
scas
hlt
add
cld
andl
pop
or
insb
cltd
or
hlt
rcl
clc
out
iret
mov
and
push
jecxz
inc
cli
pop
out
pop
subl
sub
stos
cmp
inc
ret
jns
outsl
loop
push
mov
stos
add
sub
sbb
mov
pop
add
mov
inc
popf
stos
hlt
enter
add
or
in
gs
in
sub
jb
and
dec
out
pop
mov
fisttpll
shrb
dec
les
in
nop
push
aam
aad
std
insb
xchg
icebp
mov
lcall
fldenv
and
dec
mov
inc
bound
mov
daa
push
orb
and
xchg
insl
sbb
mov
pop
roll
fsubrl
loop
into
mov
outsl
jmp
mov
or
and
sub
bound
cmp
sbb
repnz
mov
fdivrl
mov
pop
add
hlt
mov
mov
jp
scas
mov
sub
arpl
mov
bound
mov
mov
inc
xchg
or
push
pop
mov
std
mov
loop
cmpsl
rcrb
mov
addb
aad
mov
and
inc
call
scas
sbb
out
loopne
mov
aas
mov
cmp
addl
mov
jns
adc
daa
mov
sbbl
mov
adc
sti
push
stc
pop
out
daa
ljmp
sub
pop
scas
mov
xchg
jbe
cmp
je
sbbl
cmp
std
jecxz
add
xor
inc
call
mov
pop
push
shlb
mov
das
jp
and
rcrb
lods
call
sub
stc
les
divb
lds
jmp
loopne
jmp
push
cmp
inc
and
fdivrp
inc
pop
mov
jle
xorl
shlb
mov
xlat
jl
add
and
rcrb
adc
in
and
test
mov
xchg
sbb
jb
cmpsl
mov
pop
pop
jmp
mov
cwtl
push
jl
sub
out
loopne
mov
push
sub
jecxz
mov
pop
outsb
cmc
jle
add
divb
jle
sbbl
lods
and
xchg
hlt
fwait
daa
scas
pop
adc
mov
test
flds
bound
mov
inc
push
and
imul
ljmp
addb
jae
or
movsb
loopne
movsl
out
or
in
mov
mov
add
cmp
and
mov
in
ret
jae
or
dec
fdivrs
and
jnp
arpl
js
inc
pop
sub
arpl
scas
gs
in
incl
inc
ja
aas
xor
pop
mov
ffreep
xor
cmp
adc
jo
mov
clc
dec
jle,pn
or
adc
lahf
sub
cmp
in
mov
popa
ret
inc
sub
sarb
cmp
fdivrl
inc
push
cmpsl
cmpsb
scas
mov
mov
jecxz
mov
or
sbb
sbb
sahf
pop
aad
ret
jmp
stos
mov
lods
cmc
stos
das
aam
mov
mov
sahf
inc
mov
mov
jae
and
mov
and
push
stos
js
inc
ss
pop
add
fsubr
cmp
subl
in
mov
lods
bound
xchg
ret
loop
das
add
adc
push
das
add
pop
stos
jb
cmp
mov
mov
mov
addr16
sub
in
in
in
pushf
repnz
inc
addr16
lods
cmpb
push
xchg
aad
lods
les
ret
xor
pop
sbb
add
out
mov
dec
cmc
mov
sub
addr16
mov
ljmp
jecxz
cmp
and
inc
lods
mov
stc
arpl
dec
sub
in
xor
mov
pop
mov
add
mov
bound
xchg
insb
call
stos
enter
mov
stos
cmp
mov
jg
inc
iret
fldl
loop
pusha
mov
addr16
or
fwait
scas
je
cmpsb
jnp
push
sub
or
pop
lret
pushf
inc
dec
out
lds
cmp
mov
jl
hlt
jecxz
inc
test
arpl
pop
ss
gs
int
test
movsl
andb
rep
push
fdivp
ret
push
gs
add
jg
test
sbb
in
xor
lret
aaa
shlb
lock
loope
gs
mov
js
ss
inc
bound
js
dec
add
inc
sub
lock
out
push
cmc
test
insb
inc
mov
xor
mov
arpl
ret
mov
lds
mov
cs
mov
push
cwtl
jl
ret
sbb
data16
cmpsb
aaa
mov
push
stos
fwait
test
aam
stos
arpl
dec
shll
leave
popa
lods
push
add
cmp
inc
dec
mov
jl
or
ss
jmp
jne
ret
in
push
hlt
lock
gs
mov
fsubrs
mov
adc
lcall
xchg
jae
pop
mov
sub
sbb
arpl
test
mov
repnz
mov
imul
shrl
lcall
and
out
cli
in
mov
sahf
jg
mov
icebp
inc
and
xchg
xorb
repnz
inc
bound
mov
gs
lds
mov
addb
out
jecxz
ss
and
loop
mov
mov
add
and
pop
std
and
inc
outsb
xor
xchg
sub
mov
push
mov
sbb
add
jne
push
inc
add
hlt
and
stc
scas
ret
mov
hlt
stc
lock
pop
movsb
and
in
out
outsb
negl
inc
jne
lahf
imul
xor
xlat
inc
fisubl
insl
movsl
mov
movsb
lods
and
mov
lea
jo
mov
lods
pop
stos
loop
inc
add
js
mov
lods
cmc
sbb
cmp
and
pop
sub
imul
cmc
stos
negb
push
imul
out
paddusw
push
push
lock
stos
pop
sub
jns
mov
inc
arpl
lods
in
subl
js
subl
jle
sarl
jmp
xor
jbe
loope
stos
jecxz
mov
pushf
sbb
pop
mov
mov
cmp
add
mov
mov
nop
inc
adc
jmp
cmpb
daa
subl
sar
stos
fsubs
inc
add
mov
jbe
sbb
outsl
addr16
subb
daa
movsl
pop
lock
test
je
out
das
cmp
and
mov
popa
dec
dec
hlt
and
and
cmp
ret
pop
int3
add
inc
idivl
leave
ret
bound
movsl
pushf
loope
xor
jecxz
aas
jae
adc
arpl
mov
aaa
addr16
jg
cmp
ficomps
das
add
inc
sub
adcb
mov
mov
xlat
cmp
add
jp
int3
fsubs
das
jg
lahf
fisubrs
jl
mov
addb
ret
adc
adc
orl
add
stos
fisubs
adc
mov
cmpsl
cmp
or
das
xor
push
add
imul
pop
add
lahf
scas
std
bound
dec
dec
lock
mov
cs
xor
cmp
aad
je
fldt
test
mov
inc
cmp
xor
imul
cmp
bound
sbb
fcomps
in
push
lea
dec
add
sbb
sub
ja
fnstenv
cmpsb
mov
mov
lods
ret
pop
gs
int
cmpsl
cmpsb
scas
data16
orb
sub
cmp
lods
pop
insl
mov
mov
xor
out
mov
ret
cwtl
mov
scas
sub
dec
mov
lahf
sub
mov
popa
inc
int3
sbb
mov
repz
mov
mov
dec
and
loop
sub
mov
inc
enter
mov
sti
iret
stos
pop
pop
add
mov
lds
pop
pop
ret
lret
or
add
out
fs
cmp
xor
in
push
and
pop
mov
mov
mov
mov
xor
insb
and
sub
jp
mov
movsl
inc
mov
sti
add
arpl
cmpsl
mov
scas
pop
ret
popa
dec
lea
pusha
mov
stc
lds
cmp
movsl
cld
gs
add
jmp
sbb
xor
repnz
push
int3
adc
mov
cs
xchg
mov
and
test
or
inc
xorb
inc
std
cld
pop
out
lcall
ret
fwait
movsb
push
jecxz
add
mov
fs
mov
inc
add
pop
jmp
sahf
shlb
ret
pop
aam
mov
cmp
leave
inc
dec
in
enter
mov
inc
fcomps
pushw
dec
adc
in
pop
xor
lods
jmp
inc
inc
insb
cmp
pop
xor
popa
hlt
sub
scas
mov
cs
sub
mov
mov
jg
adc
jne
lret
adc
aad
fdivs
sti
popa
mov
sub
enter
add
dec
cmpsb
stc
mulb
mov
sub
loope
add
scas
xor
mov
and
jecxz
scas
fildl
dec
xchg
mov
pop
add
lret
cmpsb
mov
mov
shlb
push
mov
das
mov
addr16
xor
subb
fs
ret
in
lods
and
inc
inc
fsubr
test
pop
mov
jbe
out
aam
dec
arpl
mov
fstpt
mov
push
loop
mov
jl
inc
inc
das
push
cmp
loopne
and
es
fldcw
lods
push
push
inc
or
add
jg
mov
cltd
push
xlat
addr16
pusha
and
aam
mov
sub
aad
cmpsl
cmc
in
pop
in
add
bound
scas
or
pop
mov
sbb
les
scas
xlat
fcomp
sbb
sub
pop
inc
arpl
cmp
loopne
mov
out
fs
stos
sbb
idivl
scas
pop
adc
decl
push
in
pop
aam
mov
aas
mov
jbe
jae
jecxz
ret
add
xorl
es
lods
cmpsb
add
mov
jne
loope
pushf
xlat
mov
loop
xchg
mov
mov
and
cmc
addr16
pop
adc
mov
mov
cmp
hlt
mov
fisttps
push
mov
and
mov
and
lock
stos
mov
pop
popa
ret
mov
xor
daa
cmpsl
pop
cmp
jecxz
fisubs
hlt
movsb
xorl
sub
fdivl
mov
mov
int3
repnz
jnp
lds
insl
scas
mov
leave
ret
js
lods
pop
push
outsb
mov
repz
push
dec
mov
sub
out
movsl
out
mov
add
pop
dec
jl
xchg
add
inc
nop
inc
mov
dec
adcb
mov
enter
jae
pop
daa
inc
xchg
dec
mov
add
arpl
loop
mov
inc
and
dec
mov
cmp
pop
pop
ret
pop
dec
jmp
mov
push
cmp
mov
stos
mov
lods
das
jo
pop
sbb
pusha
mov
icebp
out
sub
sbb
add
and
lahf
lods
cmp
lods
ret
sub
lret
cs
mov
out
movsb
pop
mov
hlt
cmc
sbb
cmc
es
and
mov
cmpsl
ficoms
movsl
pop
xor
mov
and
mov
mov
and
sub
pop
mov
sub
stos
out
mov
arpl
and
and
out
imul
xchg
mov
imul
test
mov
pop
notb
in
in
xor
mov
outsl
in
or
sbb
popf
cmp
pop
scas
ret
cmc
add
add
mov
mov
jp
push
cs
movsl
insl
mov
in
jecxz
mov
push
sub
inc
mov
shll
hlt
mov
imul
das
xor
pop
in
mov
addr16
jae
and
aad
mov
sub
lock
mov
cmpb
cmp
loop
xor
ret
das
loope
aaa
add
inc
clc
mov
ret
mov
jge
xor
xchg
clc
push
xchg
enter
mov
mov
mov
mov
add
mov
imul
fdiv
sbb
dec
stc
pop
jno
jmp
iret
mov
ja
ja
icebp
mov
or
add
sub
or
jno
push
sbb
arpl
mov
lods
jmp
divb
iret
push
sbb
sbb
shl
testl
stos
xor
add
push
mov
jae
movsl
cmpsb
fsubl
and
mov
nop
or
cmpsl
mov
xchg
dec
divl
mov
sub
stos
clc
test
iret
and
repz
cmp
es
fidivrs
in
imul
xor
and
lods
insl
inc
mov
jp
dec
sbb
int
sahf
and
inc
mov
mov
jo
pop
scas
and
sub
test
hlt
sbb
lock
outsl
mov
cmpsb
and
repz
in
lds
add
push
xor
inc
cmp
outsb
in
std
push
pop
enter
mov
mov
push
ret
gs
mov
fisubrs
push
push
mov
cmpsl
arpl
pushf
pop
push
out
lods
test
xchg
mov
rclb
push
ss
iret
xor
pop
xor
imul
dec
sub
popf
ret
bound
inc
mov
fidivs
cmp
jecxz
mov
fdivp
xor
daa
xor
shlb
in
cmp
jg
mov
jl
out
insl
imulb
aam
popf
ret
dec
aad
push
sub
sbb
nop
mov
test
jmp
pop
stos
mov
lods
movsb
jae
int3
ret
and
add
dec
enter
sbb
out
sti
pop
sub
pop
andb
pop
decl
adc
sbb
pop
push
pop
and
add
pusha
mov
aad
scas
cmp
addl
inc
mov
jecxz
in
pop
in
inc
loop
sbb
xor
daa
addr16
jl
popf
mov
sub
xor
out
jge
loopne
and
or
das
lds
shlb
ret
cld
pop
and
mov
jns
lods
mov
xor
mov
mov
xor
push
lahf
inc
sub
pop
outsb
xor
dec
mov
movsl
test
int
lret
lods
mov
mov
sub
xchg
and
xor
movsb
jbe
xor
outsl
fisubl
jecxz
cmp
mov
xorl
jns
inc
fisubs
pop
das
ss
enter
jmp
in
in
aam
push
shlb
mov
int3
jp
mov
add
and
out
jecxz
clc
cmp
push
aaa
es
fidivs
and
sarl
jecxz
lock
adc
arpl
sub
dec
mov
hlt
bound
ret
arpl
add
pop
mov
mov
out
adc
loop
and
out
stc
cmpsb
icebp
scas
in
or
dec
loope
stos
pop
in
mov
sarb
out
sarl
std
jecxz
adc
xor
sbb
idivl
mov
arpl
or
sahf
lahf
pop
ret
mov
imul
loop
or
add
ljmp
xchg
aas
cli
out
enter
cmpsb
mov
popa
add
and
mov
jecxz
and
mov
mov
xchg
cmp
push
dec
lock
mov
fstps
repnz
ja
pop
test
adc
outsl
xchg
movsb
loop
sbbb
mov
mov
data16
cmp
sub
sub
mov
shlb
pop
ret
sub
dec
loop
mov
shll
and
bound
mov
jmp
and
hlt
mov
test
adc
xchg
sub
adc
mov
mov
mov
inc
ret
out
sub
inc
and
es
int3
mov
push
sub
mov
out
mov
pop
repz
mov
cmp
adc
in
loope
mov
pushf
leave
ret
inc
std
repnz
std
jmp
mov
mov
inc
pop
sub
testb
js
jae
and
and
pop
ret
xorb
sti
add
cmc
pop
mov
adc
xchg
sub
addl
sbb
xchg
mov
in
or
loopne
push
daa
in
jle
shrb
fsubrl
addr16
jp
mov
arpl
arpl
dec
psadbw
push
mov
gs
cmp
mov
and
in
mov
jno
mov
push
sub
idivb
pushf
ja
mov
cmp
test
and
xor
lods
xor
lods
pushf
and
mov
mov
jg
jbe
cmp
inc
je
cs
out
pop
lods
fs
in
and
pop
jmp
in
arpl
jne
jecxz
xor
std
daa
adc
jmp
add
jnp
lahf
inc
xchg
cmp
cmc
inc
clc
lods
test
repz
xchg
sub
leave
mov
loop
pop
mov
out
mov
sub
jmp
inc
sub
jmp
sub
inc
scas
lods
pop
idivb
or
ret
or
into
ss
popa
movzbl
jle
arpl
pushf
and
jp
mov
and
stos
popa
sbb
mov
cmc
mov
into
mov
cmpsb
clc
push
jl
inc
push
scas
inc
adc
lds
xchg
ret
gs
loope
outsl
shrb
cmp
sti
movsb
jnp
jb
cltd
or
xor
mov
inc
call
fs
incb
mov
and
je
cwtl
add
sbb
fldenv
mov
pop
daa
and
add
inc
aam
frstor
xchg
fcomp
sub
xchg
ffreep
leave
popa
pop
arpl
hlt
in
ja,pn
aas
inc
mov
aad
mov
mov
outsb
mov
idivl
mov
in
mov
fs
fisubrs
cmp
addb
inc
mov
clc
and
pop
js
and
mov
movsb
mov
sub
add
mov
sub
sub
mov
ret
movsl
icebp
mov
test
je
add
lock
jne
arpl
push
scas
stos
pop
add
xor
aaa
test
cmp
mov
std
mull
push
jecxz
mov
sahf
dec
xchg
imul
pop
pop
mov
or
add
sub
jae
mov
aad
loope
std
mov
pusha
cmp
mov
stc
cmp
ret
out
mov
cwtl
in
stos
add
aad
push
mov
inc
ljmp
push
scas
pop
insl
dec
mov
outsb
mov
and
daa
ret
mov
filds
jecxz
jns
ja
shll
or
mov
and
mov
or
cmp
pop
xor
jl
push
out
push
shl
mov
das
fidivrs
out
pop
inc
mov
or
jb
or
cmpsl
out
add
mov
inc
imul
imul
adc
mov
mov
cmpsl
int
popa
mov
jp
jecxz
out
gs
repz
notl
arpl
sub
gs
and
les
outsl
cmp
push
cwtl
into
or
aad
and
enter
and
lds
sub
xor
pusha
in
fstl
sub
and
stos
scas
ret
fadds
jl
scas
inc
stc
mov
das
popf
pop
add
pop
mov
mov
sbb
pop
in
jb
scas
xor
push
shr
jo
mov
dec
test
test
pop
cmp
dec
mov
jb
pop
int3
outsl
mov
mov
fdivs
in
aas
fisubrl
pop
pop
add
add
xchg
dec
gs
pop
orl
lahf
xor
pop
xor
fisttpl
sub
cmp
aaa
jmp
mov
mov
and
cmp
daa
xchg
imul
sti
push
ja
movsl
std
aas
arpl
sub
lahf
jecxz
inc
js
mov
xchg
push
and
push
jo
pusha
cmpb
cld
adc
in
add
rcrl
mov
arpl
add
pusha
sub
ret
fmuls
hlt
clc
outsb
push
pop
mov
shlb
sub
mov
jae
mov
test
inc
inc
arpl
xor
call
mov
cmp
std
lahf
add
icebp
adc
pop
fmuls
insl
dec
lock
mov
aam
xor
ja
mov
xor
ret
scas
add
and
inc
enter
arpl
in
pop
lock
cld
es
loop
mov
sahf
hlt
les
jmp
xchg
fnstsw
cmp
ret
mov
and
sahf
dec
icebp
inc
xor
mov
stos
and
xor
ja
pop
adc
loop
out
cmc
ss
mov
mov
jmp
add
xor
cli
in
xchg
sub
les
insl
ds
or
or
scas
xor
adc
cmp
mov
jp
pop
in
cmpsb
iret
fnstcw
mov
cmpsl
mov
and
mov
add
sbb
push
sub
jns
mov
cmpsl
sub
repz
sub
jno
mov
cmp
xor
ljmp
cmpsl
mov
imul
cld
xor
push
cmpsl
jecxz
or
adc
gs
shlb
dec
cmp
rcrb
mov
jb
aas
int
push
test
or
scas
push
xlat
cs
bound
dec
xchg
lods
cmp
and
pop
inc
jne
inc
lahf
mov
stos
and
pop
popa
lods
push
repz
sub
sbb
pop
cmpsl
xchg
pop
incb
jge
sarl
and
loop
jle
add
mov
das
mov
xor
sahf
scas
cmpsb
loopne
loop
popa
gs
jae
out
mov
cmc
stos
pop
pop
test
in
test
cmpsl
in
popa
sbb
movsl
ret
das
ret
jmp
jb
in
mov
ss
out
jle
bound
push
push
lock
je
mov
movsb
or
sub
ret
add
pop
outsb
clc
mov
pop
loop
jmp
xchg
xchg
adc
and
jp
cmp
lods
scas
in
arpl
scas
dec
push
pushf
mov
inc
mov
jae
mov
push
stos
cmc
pop
insb
inc
dec
mov
pop
mov
addr16
out
inc
push
movsb
movsb
stos
jecxz
lods
add
adc
and
fsubrs
shlb
xor
mov
fdivrl
xor
mov
ret
push
andb
shr
lods
and
inc
dec
cmp
out
mov
sar
repz
lock
aad
mov
jl
mov
mov
sbb
sbb
and
test
mov
aad
popf
movsb
daa
dec
fsubs
xchg
mov
mov
dec
pop
mov
addr16
mov
xor
std
xor
aaa
push
std
xor
mov
sub
std
mov
iret
stos
and
mov
cmp
loop
inc
cmpb
fidivl
ret
jbe
incb
popaw
std
xor
jp
or
daa
out
iret
ja
pop
js
popf
fcompl
fsubrl
movsl
add
aad
push
test
arpl
dec
cmp
mov
jb
fiadds
in
stc
leave
stos
jecxz
xor
xlat
xor
inc
aam
pop
in
mov
adc
mov
pop
mov
lods
ljmp
and
xor
shlb
test
bound
outsb
negl
xor
sub
pop
stos
mov
or
pushf
sbb
arpl
into
andl
pop
push
sahf
mov
mov
mov
jno
and
sub
and
mov
dec
cmpsl
lods
ljmp
testb
je
lock
mov
int
test
ja
out
xchg
fnstenv
stos
push
sbb
jge
js
and
jmp
cmp
mov
popf
sub
adc
add
or
dec
cmp
and
mov
mov
insl
imul
es
shll
test
mov
test
inc
cmp
pop
xchg
loope
lods
mov
fisubs
mov
push
add
mov
pop
xlat
xor
fdivl
das
iret
mov
movsl
fisubs
pop
pop
fdivr
notb
adc
pop
cmpsb
fwait
adc
lds
dec
sbb
popf
cmp
repz
adc
outsb
mov
inc
outsl
sbb
js
mov
shll
in
xor
ret
dec
inc
push
mov
pop
arpl
xor
in
mov
out
test
ss
or
fildll
mov
ret
inc
jp
and
jns
dec
fisttpll
push
outsb
lret
hlt
xor
leave
out
adc
outsl
daa
dec
mov
cltd
inc
sbb
mov
jmp
and
out
cltd
xor
jp
add
imulb
pop
out
mov
xchg
lods
mov
fsub
cmp
inc
lret
mov
add
sbb
outsl
xor
frstor
hlt
mov
xchg
rcrl
bound
sbb
ret
sarb
aaa
add
pop
pop
cmpsb
push
in
xor
pop
dec
inc
cmp
addl
inc
xchg
ret
stos
pop
add
in
jecxz
mov
mov
shl
ret
and
jmp
fcmovbe
push
mov
pop
lret
add
jmp
lods
mov
jl
rolb
aad
mov
cmpsb
lds
icebp
call
push
lds
sbb
imulb
xor
cmp
mov
jecxz
mov
movsb
pop
mov
sahf
xor
cmp
arpl
mov
xlat
xchg
mov
xor
dec
ljmp
mov
andl
jbe
jne
out
xchg
test
xor
aam
pop
inc
pop
in
data16
push
loop
and
and
imul
and
aam
call
dec
mov
arpl
aas
addr16
add
mov
das
cmpsb
mov
mov
lret
inc
and
inc
imul
bound
mull
mov
and
lock
jl
inc
mov
aam
arpl
into
scas
and
test
clc
popf
les
or
and
les
add
pop
or
push
mov
inc
ret
ljmp
ficomps
or
push
mov
inc
stos
shrl
stos
shrb
out
sub
mov
add
pushfw
aas
sbb
inc
mov
out
pop
cli
and
cmp
pop
cmc
xchg
pop
std
sub
sbb
test
dec
xchg
xor
lods
setl
add
pushf
popa
sti
jp
loopne
pop
decb
push
push
lock
sub
mov
jo
testb
or
dec
push
repnz
sub
mov
xchg
sbb
mov
mov
fsubrs
or
mov
jno
sbb
xchg
inc
stos
xor
xchg
add
int
adc
mov
jo
shrb
lods
xor
movsl
rcrb
sti
mov
mov
ret
xor
mov
xchg
std
je
clc
out
lods
inc
rorb
das
xchg
je
adc
add
and
mov
ljmp
xor
mov
and
push
roll
fidivs
mov
inc
sbb
jo
lds
mov
repz
add
addb
enter
outsl
and
fidivrs
out
loopne
cmpsb
and
cmc
out
stos
daa
pop
mov
shrb
fidivrs
hlt
mov
jae
pop
in
inc
repz
in
inc
add
cmpsb
push
sub
add
stos
outsb
push
aad
mov
fs
test
sub
mov
aad
mov
les
insl
out
adc
shrl
out
dec
pop
in
out
js
push
movsb
and
fiadds
mov
outsl
aas
pop
jle
add
cmp
xor
mov
inc
mov
dec
inc
add
mov
lock
mov
push
sub
mov
mov
in
mov
and
inc
dec
ja
lds
lock
jns
push
adc
or
inc
add
mov
inc
das
stos
pop
lds
jmp
pusha
pop
cli
and
push
or
repnz
in
pop
mov
sarl
ror
push
rol
push
clc
push
xadd
push
shr
bsr
not
mov
mov
rol
mov
xchg
adc
mov
stc
rcl
mov
xor
not
not
push
lods
push
neg
rol
neg
adc
setbe
shl
bt
sub
cmp
inc
neg
not
ror
pushf
push
pushf
stos
not
mov
lea
push
pushl
jmp
xchg
ljmp
pop
mov
sarl
cwtl
popa
sbb
mov
in
scas
sub
cmpsb
xchg
mov
mov
sub
pop
das
push
cmc
aaa
add
adc
or
jbe
add
div
dec
inc
ja
jmp
ss
imull
pop
pop
loop
iret
ss
enter
jmp
mov
xor
into
and
sbb
movsb
cli
int
cmp
xchg
adc
rorb
push
mov
iret
sub
push
in
adc
xchg
fstpt
sbb
sub
ficomps
inc
in
xchg
jge
pop
hlt
adc
mov
sbb
movsl
add
xor
cmp
pusha
filds
jmp
pop
icebp
mov
test
sahf
aam
xor
jnp
jge
sub
in
jg
iret
and
sbb
out
movl
jmp
push
pushf
movl
call
call
neg
btc
xadd
cmc
lea
test
rol
sub
movsbl
lea
mov
pusha
pushl
pushf
pushf
lea
jmp
pushf
call
pushl
popl
movb
mov
mov
lea
jmp
lea
jo
pushf
mov
push
pushf
popl
pushf
mov
mov
push
pushl
popl
pushf
push
push
lea
jmp
jmp
pusha
mov
push
pusha
pushf
movb
lea
jmp
test
sub
mov
call
cmc
add
pusha
lea
jmp
lea
jne
push
pusha
pushf
movb
pushf
pushl
ret
movsbl
call
mov
pushf
jmp
jbe
shrd
not
bt
mov
sbb
jmp
aad
shl
pushf
mov
shl
mov
push
cmp
add
pushf
pushf
push
mov
push
pusha
pushf
mov
lea
jmp
pushf
jmp
mov
neg
shl
push
push
shl
lea
btr
mov
movsbw
cmp
shr
shl
pushl
cmp
cmc
pusha
movl
sbb
mov
xchg
shl
shl
clc
not
pusha
bswap
btc
btr
and
neg
stc
lea
bsr
xor
shrd
sub
pushf
movzbw
lea
movb
lea
jmp
xchg
call
ror
xchg
add
jae
rol
push
shl
xor
shld
mov
pushl
bts
push
clc
mov
xchg
shr
movsbw
rcr
not
sbb
call
not
ror
btc
ror
bt
bswap
sub
neg
shrd
shl
shr
lea
bswap
sub
jmp
pushf
pop
cwtl
push
not
mov
push
mov
push
push
lea
cpuid
push
push
test
sub
stc
pusha
cmpl
movw
call
jmp
pushf
jmp
cmp
cltd
aas
mov
and
jle
btr
bswap
mov
cmp
clc
bt
add
jb
pushf
pusha
mov
movw
lea
jmp
mov
call
mov
pusha
lea
jmp
mov
lea
jne
bsr
sub
mov
call
pushf
popl
push
pushl
popl
pushf
pushf
lea
jmp
pushf
repz
popl
bswap
mov
xadd
shr
bts
xchg
rcl
inc
mov
add
dec
pusha
pushl
popl
movsbw
shr
movl
add
mov
ror
rcr
not
clc
mov
bswap
inc
shl
pushf
neg
add
dec
bts
adc
lea
bswap
rcr
shrd
adc
sub
call
clc
cmc
lea
jbe
sub
pushf
push
test
sub
push
add
mov
jmp
pushf
jmp
cmc
call
mov
mov
mov
call
push
movl
xchg
bswap
not
not
push
pusha
not
repz
popl
cmp
mov
sub
jo
sub
shl
shld
push
xadd
shl
sbb
cmc
push
lea
pushl
mov
push
test
and
mov
ror
not
sar
sub
bswap
movsbl
clc
not
neg
bt
lea
ror
mov
sar
xor
lea
movsbl
sub
bswap
mov
pushf
pusha
lea
jmp
sub
call
mov
clc
clc
cmc
sub
test
clc
add
jmp
sar
or
not
call
cmc
xor
pushl
movl
movw
push
not
mov
sub
clc
mov
cmc
movb
cmp
add
jne
sub
push
lea
jl
push
push
mov
pusha
lea
jmp
pushl
sub
push
call
pusha
xchg
test
jmp
jmp
pushf
pushf
popl
lea
jno
popl
push
pushf
lea
jmp
not
pushf
xchg
not
bswap
pushl
repz
popl
sar
mov
test
btc
shl
movsbl
mov
bts
push
movsbw
inc
pushl
rcr
push
btr
mov
not
cmp
pushf
not
inc
shl
rcl
cmc
bswap
bts
pusha
neg
call
rol
rol
mov
rol
and
mov
pushf
call
mov
call
stc
cmc
not
pushf
clc
pushl
stc
sub
cmp
call
mov
movl
movw
push
pushf
mov
movsbw
bswap
mov
xchg
push
repz
popl
neg
bt
and
rcl
mov
mov
lea
xchg
shld
bsr
rol
clc
mov
bswap
pushl
popl
pushf
not
movl
stc
bsf
mov
call
lea
pushf
shld
mov
and
shr
not
sete
add
inc
xor
sbb
xor
add
movzbw
mov
test
cmc
pushf
bt
shl
jmp
push
pushf
movb
mov
call
shld
movzbl
mov
mov
xor
add
jmp
lea
not
mov
mov
pusha
push
pushf
pushl
lea
jmp
mov
movl
lea
jmp
jmp
pushf
lea
jne
test
sub
rcr
and
xorb
bswap
jmp
dec
shr
clc
call
movzbw
mov
push
call
and
clc
jmp
pushf
std
mov
movsbw
movzbw
movw
lea
cld
pushf
jmp
mov
pusha
call
mov
movb
movb
pushl
pushf
popl
push
pushl
popl
pushf
lea
jmp
add
mov
add
not
xor
sub
adc
sub
clc
mov
stc
add
pushf
mov
push
lea
jmp
pushf
push
call
call
pusha
movb
pushl
popl
pushf
lea
jmp
mov
cmc
clc
sub
jmp
jmp
mov
jmp
pusha
mov
mov
pushf
mov
call
call
pusha
mov
push
pushf
pushf
lea
jmp
add
pushf
sub
cmc
jmp
bswap
jmp
rcl
bt
mov
stc
bt
cmp
mov
pusha
test
sub
pusha
jmp
push
movw
pusha
jmp
mov
jmp
pusha
pushf
mov
pushf
push
lea
jmp
mov
sub
stc
cmp
and
pushf
pushl
push
pushf
pushf
popl
pushf
push
push
push
pushl
popl
push
movb
lea
jmp
stc
sub
call
bswap
call
push
not
stc
stc
sub
test
sub
clc
stc
mov
pushf
mov
jmp
pusha
mov
jmp
jmp
pushf
popl
jmp
pusha
pushf
popl
lea
jp
popl
pusha
lea
jmp
pushl
pushf
pushf
popl
jmp
lea
mov
movsbw
lea
jbe
lea
repz
call
aas
aas
aas
movzww
pusha
sub
jle
xchg
call
push
pushf
pushl
ret
pushl
popl
movw
pushf
lea
jmp
pushf
mov
pusha
call
pushf
pusha
pushl
popl
pushf
movb
lea
jmp
mov
mov
mov
call
rcr
ror
mov
test
sub
push
mov
push
pusha
lea
jmp
call
pushf
mov
jmp
sbb
and
push
mov
sbb
lea
dec
push
bt
sbb
pushl
cmp
push
cmc
mov
bsr
stc
shr
not
xor
not
bswap
or
neg
add
mov
dec
clc
shl
pushf
sub
movsbw
mov
pusha
pushf
pusha
pushf
lea
jmp
das
aaa
aad
mov
rol
stc
xor
mov
pusha
pusha
clc
add
call
repz
popl
bsf
xadd
movsbl
mov
cmc
bsr
cmp
bts
mov
and
push
bswap
pushl
shl
sub
adc
ror
push
cmp
mov
dec
not
bt
btr
bswap
bts
shr
test
neg
adc
mov
shr
sub
mov
call
not
xchg
bswap
not
lea
repz
popl
sbb
pushf
bt
mov
sar
dec
cmp
xchg
neg
or
sub
bts
mov
btc
pushl
popl
pushf
bts
movl
shrd
sub
mov
sar
adc
xadd
not
movsbw
movzbl
bswap
movw
inc
neg
btr
pop
lea
bsf
sar
and
sub
push
movsbl
lea
pushf
pushf
pushf
pusha
lea
jmp
movzbw
btr
aam
jmp
push
pushf
pushl
popl
pusha
pushf
lea
jmp
stc
sub
push
call
pushl
jmp
movzbw
movzbl
jmp
mov
cmp
cmc
jmp
mov
jmp
mov
push
pusha
lea
ja
push
mov
movb
push
lea
jmp
movsbw
or
shl
mov
ror
mov
stc
stc
call
bswap
shrd
xadd
neg
shl
lea
dec
sub
not
mov
pusha
lea
jmp
pushl
sub
pushl
pushf
push
mov
push
lea
jmp
and
shl
shl
mov
call
movl
push
movb
mov
lea
jns
pushf
pushf
pusha
mov
pusha
pushf
lea
jae
pushf
mov
jmp
push
push
mov
pusha
call
pushl
popl
pushf
push
movb
mov
lea
jmp
pusha
mov
call
call
call
bt
add
jmp
and
add
stc
xor
movzbw
add
not
stc
bt
mov
btr
sub
bsr
not
neg
rcr
mov
bt
pushf
sub
cmp
add
mov
pushf
mov
pusha
pushf
mov
lea
jmp
push
mov
mov
pusha
lea
jmp
mov
mov
pushl
call
mov
pusha
mov
lea
jmp
movsbw
mov
pushf
pusha
movb
push
lea
pushf
call
mov
setnp
pushf
mov
pushl
pusha
jmp
pushl
jmp
add
clc
stc
sub
push
movw
mov
pushf
pushf
mov
push
lea
jmp
jmp
call
not
stc
bt
sub
push
cmc
call
pushf
movb
pushl
popl
movw
pusha
lea
jmp
shl
sar
shl
sbb
mov
shl
test
xor
mov
jmp
pushf
sub
bt
call
call
jmp
pushf
push
mov
push
pushf
mov
push
pushf
jmp
mov
call
push
mov
pusha
pushl
pusha
mov
pushl
mov
push
push
pushl
jmp
pusha
jmp
sub
pushf
mov
movb
movb
movb
pushf
lea
jmp
cmc
cmc
cmp
push
pushf
jmp
pushf
pushf
push
xchg
mov
pusha
xchg
movl
not
movsbw
repz
popl
not
or
mov
bsf
neg
xchg
cmc
test
or
mov
shld
and
sbb
pushl
popl
shrd
movl
shl
cmp
bts
xchg
mov
inc
sbb
xadd
add
not
call
setl
movzbl
rcr
btc
sub
rcl
sub
shl
add
bt
not
rcl
jmp
push
jmp
call
mov
pushf
pushf
call
aad
push
mov
rcr
xadd
rcr
call
clc
add
pushl
jmp
mov
pushl
lea
jmp
jmp
jmp
call
push
mov
push
movb
pusha
movw
lea
jmp
jmp
movw
jmp
shl
sub
and
ror
movsbw
movzbl
bsr
mov
call
mov
repz
popl
adc
movl
btr
mov
sub
adc
ror
xchg
movsbw
sub
shr
mov
sub
pushf
or
pushl
popl
shrd
xadd
movl
add
cmp
bsf
mov
movzbl
not
add
shl
bts
not
bswap
stc
sub
neg
rcr
sbb
lea
rol
sub
sub
not
mov
mov
push
pushf
pushf
lea
jmp
movw
xchg
jmp
stc
rdtsc
push
movb
sub
pushf
jmp
push
push
pushl
popl
pushf
pushl
lea
jmp
add
call
call
xchg
std
movw
lea
movzbw
mov
push
call
pushf
xchg
not
pushf
mov
call
shl
rcl
and
test
mov
pushl
movb
jmp
sub
bswap
adc
pusha
ror
neg
pop
adc
lea
sar
sub
movzbw
mov
pusha
movl
movw
lea
jmp
pushf
mov
pushf
mov
pushf
pushf
mov
pop
movsbl
pushf
xchg
lea
pusha
not
bswap
repz
popl
shld
pushf
stc
adc
mov
rcr
sub
bswap
xchg
sbb
cmc
shr
clc
mov
btr
bts
bsf
not
pushl
popl
neg
movl
movw
xchg
bsr
sar
mov
rcl
cmc
inc
movzbw
not
btr
bsr
ror
pushf
bswap
shl
neg
adc
call
pusha
jmp
call
test
jmp
xchg
aas
mov
call
mov
call
mov
push
push
mov
push
pushf
popl
mov
push
mov
lea
jae
popl
push
lea
jmp
pushf
pushf
jmp
pushf
lea
movw
clc
pushl
pushf
ror
sub
js
cmp
pusha
pusha
xchg
cmc
clc
not
bt
movb
add
bt
cwtl
call
jmp
daa
rdtsc
rcl
mov
bswap
pop
aad
pop
aaa
cwtl
pop
cltd
pop
cmc
add
movzbw
std
pop
cwtl
dec
aad
test
popf
not
pop
not
lea
pop
push
cwtl
bswap
pushf
mov
pushl
setl
mov
push
mov
not
bswap
mov
pusha
movw
pushl
mov
pushl
ret
sbb
call
dec
mov
fwait
xor
call
mov
aaa
inc
mov
dec
inc
mov
fwait
pop
mov
sbb
pushl
mov
push
mov
in
dec
mov
pop
das
mov
and
mov
fwait
pop
mov
and
mov
jl
mov
and
mov
or
ds
call
pop
mov
pop
cmp
jmp
mov
call
cmp
lcall
mov
xchg
inc
mov
inc
pop
mov
call
inc
mov
or
pop
mov
jl
mov
sbb
jmp
mov
pop
das
mov
push
pop
mov
pop
push
mov
sbb
incl
dec
mov
dec
inc
mov
sub
mov
or
dec
mov
mov
mov
roll
pushl
mov
imul
roll
jmp
ss
fwait
pop
mov
mov
mov
aaa
inc
mov
aaa
inc
mov
push
mov
shlb
lcall
mov
std
pop
mov
orb
faddl
call
pop
mov
popf
pop
mov
push
ss
sub
mov
fcoml
lcall
mov
push
dec
mov
pop
push
mov
push
dec
mov
mov
mov
sarl
ljmp
ss
inc
pop
mov
xchg
push
mov
imul
aaa
inc
mov
fwait
pop
mov
and
mov
faddl
incl
cmp
mov
inc
mov
popf
pop
mov
sbb
call
decl
mov
call
ss
push
dec
mov
pop
cmp
push
inc
mov
pop
das
mov
test
mov
shlb
mov
in
dec
mov
fwait
pop
mov
pop
das
mov
test
mov
shlb
pushl
mov
shlb
mov
xchg
push
mov
sarl
decl
pop
mov
popf
pop
mov
faddl
lcall
pop
mov
lds
mov
popa
cs
xchg
push
mov
popa
cs
xchg
push
mov
popa
cs
and
mov
popa
cs
xchg
push
mov
popa
cs
mov
mov
popa
cs
roll
jmp
mov
dec
inc
mov
popa
cs
fwait
xor
pushl
inc
mov
popa
cs
jno
mov
popa
cs
and
mov
popa
cs
fwait
pop
mov
popa
cs
xchg
push
mov
popa
cs
or
cs
jno
mov
stc
inc
mov
test
mov
repnz
mov
jl
mov
shlb
mov
imul
pop
push
mov
stc
inc
mov
lds
mov
in
dec
mov
push
pop
mov
cmp
call
cmp
call
push
mov
faddl
call
cmp
lcall
pop
mov
xchg
push
mov
mov
inc
mov
imul
jmp
dec
mov
xchg
inc
mov
pop
push
mov
faddl
jl
mov
pop
push
mov
jl
mov
sub
mov
roll
cmp
inc
ss
roll
ss
roll
push
mov
roll
pop
mov
roll
inc
mov
roll
cmp
inc
inc
mov
sarl
inc
inc
mov
jl
mov
roll
ss
roll
cmp
inc
inc
mov
push
pop
mov
roll
inc
mov
roll
inc
mov
roll
inc
mov
roll
ds
dec
inc
mov
inc
pop
mov
jno
mov
cmp
lcall
push
mov
sbb
pushl
pop
mov
std
pop
mov
pop
cmp
pushl
mov
shlb
mov
jl
mov
ja
mov
faddl
push
inc
mov
and
mov
mov
mov
cmp
lcall
inc
mov
xchg
push
mov
jl
mov
dec
inc
mov
jl
mov
popf
pop
mov
push
pop
mov
and
mov
aaa
inc
mov
ja
mov
popa
cs
mov
mov
sarl
incl
mov
fwait
pop
mov
dec
inc
mov
repnz
mov
xchg
inc
mov
stc
inc
mov
and
mov
or
pop
mov
cld
ds
push
pop
mov
dec
inc
mov
shlb
mov
pushf
cmp
movw
not
clc
test
stc
add
mov
jmp
pusha
pusha
mov
mov
pushf
pushf
popl
mov
pushf
push
pushl
popl
pushf
mov
movb
movl
lea
jmp
cmp
or
shr
sar
movzbl
or
mov
sub
btc
rcl
cmp
jnp
add
jmp
stc
lahf
rol
mov
push
xchg
mov
stc
bt
pusha
add
call
pushf
call
call
mov
pusha
bt
pushf
mov
clc
cmp
pushf
test
sub
clc
pushf
mov
shl
movb
call
add
bt
push
ror
stc
clc
bt
xchg
cmc
call
pushl
popl
push
pushf
lea
jmp
stc
cmp
sub
stc
movb
cbtw
stc
cwtl
stc
cmp
test
sub
jmp
pusha
pushf
push
mov
call
movb
mov
pushf
push
movb
lea
jmp
test
jmp
bswap
shr
sar
sbb
push
cmc
bts
shl
pushl
cmp
lea
xor
pusha
movl
bts
xchg
bt
mov
jmp
movzbw
ror
mov
xor
rcl
add
not
shl
shr
sub
sar
shrd
shl
mov
cmc
test
call
movzbl
mov
pop
pushf
push
mov
lea
jmp
pusha
pushf
mov
pushf
push
mov
push
jmp
pushf
popl
jmp
jmp
clc
cmp
mov
cmp
cmc
pushl
popl
call
mov
jmp
or
add
lea
xor
sub
call
call
add
pushf
ror
stc
xchg
pushf
pushf
test
not
movb
sub
call
sbb
mov
neg
sbb
call
stc
add
push
pusha
dec
cmc
cmp
jmp
push
mov
movzbl
mov
jmp
mov
call
pushf
mov
not
mov
movzbw
lea
mov
push
pushf
std
cld
pushf
rep
xor
xchg
sbb
mov
test
add
jl
pop
bt
popf
pusha
mov
mov
lea
jmp
mov
push
pusha
call
bswap
pushl
setbe
dec
movzbw
sete
adc
lea
movzbl
bt
cmc
mov
stc
bt
call
cwtl
stc
call
push
lea
js
pusha
mov
push
movb
lea
jmp
call
pusha
push
xchg
bt
pusha
not
stc
clc
bt
pushf
add
jmp
or
pusha
push
call
call
mov
jmp
pushf
pushl
pushl
popl
pushl
pushf
push
lea
jmp
bswap
lea
movb
pusha
lea
jmp
rol
mov
setnp
mov
add
rol
movsbw
stc
rol
pusha
movsbw
inc
bsf
call
aad
sar
pusha
mov
cmc
clc
add
mov
pushf
pushl
mov
jmp
push
jmp
call
pusha
push
pushl
popl
movb
pushl
push
mov
lea
jmp
movb
mov
jmp
mov
clc
add
mov
mov
pushf
pushl
pushf
movb
lea
jmp
jmp
pushf
shl
jmp
shrd
cmp
bsr
lea
sar
movsbw
rcl
sub
push
bswap
lea
push
pushf
lea
jmp
das
push
mov
cmp
mov
cmp
jmp
mov
push
lea
jmp
pushf
pushf
jmp
mov
lea
jne
mov
not
lea
pusha
std
xchg
pushf
not
mov
movw
cld
pushf
jmp
pusha
mov
call
lea
jne
push
pusha
sub
push
xchg
lea
jnp
push
pusha
jmp
call
sub
shr
rcl
movzbl
pushf
sub
jmp
shrd
bt
mov
sub
movsbw
mov
rol
adc
mov
clc
stc
add
bt
je
pushf
shld
movw
pushf
jmp
pushf
pushf
jmp
mov
pusha
lea
jmp
pusha
pushf
pushf
mov
jmp
jmp
mov
pushf
movw
mov
lea
jne
push
mov
push
pushf
call
pusha
mov
mov
pushf
pusha
pushf
lea
jmp
call
pusha
mov
pushf
pusha
movl
mov
push
call
xchg
not
bswap
movzbl
movzbw
mov
pop
lea
pushf
repz
popl
inc
cmp
mov
bt
movzbw
push
mov
clc
and
pop
sub
mov
shl
pushl
popl
ror
movl
call
jmp
pushf
popl
push
push
mov
movb
pushl
popl
mov
movw
lea
jmp
jmp
pusha
mov
mov
pusha
pushf
movb
lea
jmp
setp
pushf
mov
call
pushf
call
inc
btc
mov
test
test
stc
add
pusha
mov
pushl
pushf
push
lea
jmp
movzbl
btr
add
mov
stc
bt
call
clc
cmc
cmp
sub
cmp
call
btc
neg
notl
test
sar
btr
mov
cmc
call
movzbw
lahf
not
mov
push
mov
jmp
sbb
mov
and
mov
stc
lea
test
call
pusha
call
mov
movb
jmp
neg
mov
and
mov
pusha
pusha
jmp
pusha
call
mov
call
add
mov
jmp
cmc
pushf
test
pushf
shld
call
mov
jmp
call
stc
cmc
stc
sub
movw
call
mov
call
mov
pushl
xchg
jmp
movl
rcr
mov
cmp
pushl
not
shl
bswap
sar
shr
xchg
neg
jmp
pusha
jmp
lea
xchg
pop
repz
popl
shrd
mov
and
shl
xor
mov
push
xadd
xchg
mov
rcl
bt
bts
pushf
pushl
popl
stc
pusha
movl
shrd
mov
mov
stc
sub
xadd
not
sub
xadd
call
mov
mov
lea
jmp
setp
not
pushf
mov
jmp
clc
sub
push
shr
jmp
pusha
mov
add
pushf
pushf
popl
jmp
pushl
popl
mov
push
mov
movb
lea
jmp
pushf
mov
call
mov
mov
xchg
push
pushf
pop
movsbw
xchg
not
repz
popl
bt
mov
rol
xchg
mov
rol
call
sub
pushf
mov
movl
mov
mov
mov
lea
jmp
pushf
popl
movb
jmp
pushf
jmp
call
add
jmp
push
mov
pusha
mov
push
push
call
ror
ror
mov
pushf
sub
push
test
add
pusha
movl
pushf
pushl
not
push
push
push
pushf
dec
jmp
call
push
mov
movb
push
pushf
lea
jmp
movl
call
cmp
pushf
lea
jne
rcl
rcl
sbb
xorb
lea
not
pop
pusha
pushl
pushf
lea
jmp
call
jmp
lahf
mov
setle
lea
mov
pusha
push
divl
mov
jmp
test
cmc
pushl
jmp
mov
movsbw
mov
push
pusha
pusha
lea
jmp
dec
mov
neg
bswap
rcr
mov
movw
add
pushf
mov
movb
lea
jmp
dec
rcr
ror
rol
inc
mov
movzbw
dec
pushf
inc
call
jmp
bt
call
stc
test
sub
bt
pusha
add
cmc
call
lea
ja
pusha
mov
push
pushf
popl
pusha
mov
pushf
call
jmp
call
pushf
shr
push
stc
push
bt
or
stc
cmc
xor
movb
push
pushf
inc
push
decl
lea
jo
push
pushl
lea
jne
jmp
mov
lea
jnp
pusha
pushf
mov
call
pushf
popl
pusha
pushf
movw
push
pushl
popl
movb
pushf
pushf
lea
jmp
mov
mov
lea
jmp
lea
pusha
push
lea
jmp
pushf
cld
pushf
call
movb
movl
pushl
mov
pushf
pushf
pushl
ret
btr
cmp
mov
pushf
dec
sub
mov
stc
call
call
sub
clc
cmc
cmp
add
jmp
pusha
and
pusha
call
movb
jmp
push
pushl
pusha
mov
movw
pushf
mov
movb
mov
call
lea
mov
lea
jmp
jmp
rep
xor
bt
sub
cmc
mov
bswap
push
mov
clc
pushf
call
cmc
add
stc
clc
push
call
push
pushl
lea
mov
pushf
jmp
jmp
mov
btc
adc
pushl
popl
adc
ror
movsbw
movl
inc
shr
bsf
mov
ror
bsr
not
sar
sar
bswap
xor
neg
btr
lea
bt
shld
bsr
sub
mov
mov
mov
push
pushl
lea
jmp
call
not
movw
add
push
cmp
sub
pushf
sub
call
clc
test
add
bt
test
not
cmc
sub
bt
sub
lea
jb
stc
push
sub
jmp
call
jmp
pushf
call
bt
sub
pusha
push
pusha
pushf
mov
pushf
movw
lea
jmp
add
movb
bt
jmp
pushf
mov
movb
pushl
movb
mov
movzbw
movzbw
mov
movzbl
repz
popl
inc
not
mov
shl
movzbl
not
xadd
xchg
adc
movzbw
bt
mov
sar
pushl
popl
rcr
pop
movl
shr
movzbw
test
neg
mov
rol
btc
shl
xor
not
dec
bswap
neg
btc
not
movsbw
neg
shl
movw
movsbw
shrd
lea
add
jge
bts
sub
push
call
pusha
mov
push
jmp
push
add
clc
jmp
call
movb
mov
movw
pusha
movw
lea
jmp
movw
call
mov
pusha
pusha
push
pushf
lea
jmp
movb
mov
lea
jmp
jmp
mov
mov
jmp
bsf
mov
and
rcl
rcl
mov
bt
sub
jmp
mov
jmp
mov
pushf
lea
jmp
not
mov
lea
movw
pushf
movb
lea
jmp
lea
je
bt
jmp
sub
jge
clc
sub
call
call
btc
lea
pusha
stc
push
test
cmp
pushl
pushf
movb
lea
ja
setl
not
ror
mov
neg
bsr
lea
rcl
cmp
aaa
sub
rcr
lea
or
movzbw
cmc
and
test
push
sub
movsbw
call
add
pushf
test
clc
test
pushl
popf
pushf
pushf
lea
jmp
cmc
not
stc
stc
cmc
add
movb
mov
pusha
movb
pushf
pushl
ret
bt
mov
call
jmp
add
jmp
mov
pushf
mov
push
jmp
call
pusha
jmp
mov
cmp
shl
pusha
mov
movb
mov
add
pushf
test
shrd
call
call
test
pushf
add
pusha
pushf
pushl
mov
mov
push
movb
push
lea
jmp
jmp
pusha
mov
pusha
pushf
pushl
lea
jmp
call
push
mov
call
pushf
lea
jo
push
call
sbb
xor
rcr
mov
stc
stc
test
add
pushf
movb
lea
jmp
pushl
call
push
mov
mov
push
pushf
mov
lea
jmp
jmp
push
movb
call
pushf
pushf
push
push
mov
pusha
mov
pushf
mov
pushf
pushl
jmp
sub
jmp
xchg
pushf
mov
bswap
mov
movsbw
repz
popl
and
btc
sbb
rol
mov
bsf
stc
xor
cmp
xchg
call
bt
clc
pushf
pusha
sub
jmp
sub
call
jge
sub
pusha
pusha
stc
shr
call
lea
movsbw
sub
call
adc
shr
cmp
mov
bt
sub
clc
jmp
sub
lea
pusha
lea
movb
pushf
lea
jmp
push
mov
push
dec
bswap
not
movzbw
inc
sbb
sub
bsr
sub
test
not
movzbl
pop
mov
call
movzbw
pushf
mov
movsbw
stc
neg
lea
adc
sub
sub
inc
sub
ror
movzbw
call
cwtl
pusha
call
jmp
jmp
lea
add
shl
cmp
rcr
sub
jmp
mov
push
push
movw
lea
jmp
call
adc
lea
push
sub
cmc
clc
mov
sar
mov
add
shl
rcl
add
rol
bswap
mov
add
sub
jmp
not
push
call
pushf
lea
call
mov
movsbw
xchg
pushf
pushf
not
repz
popl
movzbw
bt
bswap
mov
xadd
movzbw
bsf
btc
mov
rcr
sar
jmp
jmp
stc
pushl
popf
mov
lea
jmp
cmp
shr
movb
mov
push
mov
pushf
popl
call
jmp
mov
pushf
lea
jmp
jmp
not
cmc
call
stc
not
test
cmp
test
and
lea
jo
mov
call
lea
jne
jmp
not
xchg
xchg
jmp
bsr
mov
adc
pushl
popl
bsf
push
shl
ror
add
mov
ror
and
lea
sbb
not
lea
bswap
shrd
rol
cmp
neg
btc
rcr
jp
neg
mov
ror
ror
sub
jmp
not
rcl
not
sar
bswap
xchg
shr
neg
push
cmc
lea
neg
lea
rol
test
inc
mov
sub
not
mov
pushf
lea
jmp
movl
push
pushl
popl
push
lea
jmp
pusha
pop
repz
popl
clc
mov
adc
dec
stc
and
xchg
mov
shld
movw
sub
mov
add
pushl
popl
and
rol
ror
push
movl
shr
stc
mov
btr
not
mov
add
mov
bswap
cmc
pushl
add
cmp
neg
btc
xchg
lea
mov
add
sub
lea
bswap
not
mov
pushf
pushf
lea
jmp
movsbw
mov
lea
jg
repz
cmp
neg
ror
btc
push
or
btc
neg
test
push
sar
rcr
push
shld
clc
cmp
rcl
pushl
bsf
push
bsf
pushf
shl
mov
pushf
bswap
not
rol
jmp
cwtl
cwtl
lahf
mov
pusha
cmp
bswap
call
bts
mov
bt
jmp
test
shl
pusha
jmp
test
call
xchg
mov
shl
and
add
call
or
movzbl
call
mov
mov
pushf
pusha
pushf
lea
jmp
not
push
not
clc
pusha
sub
movl
bt
cmp
and
jmp
sub
stc
pushf
xchg
jmp
add
add
mov
call
pushf
popl
call
call
mov
pushf
mov
jmp
pushf
mov
mov
mov
lea
jmp
xchg
setnp
movzbw
pusha
lea
repz
popl
shl
cmc
setb
pop
mov
and
shl
call
pushf
pushf
mov
jmp
bsf
neg
bswap
ror
lea
sub
ror
neg
xchg
sete
bts
lea
shr
sub
ror
add
mov
sub
mov
dec
not
mov
setge
mov
test
bts
add
bsr
lea
shl
push
mov
stc
sub
inc
not
pusha
dec
setb
cmc
setl
rol
jmp
mov
pusha
pushf
lea
jmp
mov
pushf
call
dec
and
call
not
bswap
movzbl
xchg
mov
repz
popl
neg
adc
mov
add
not
btr
sub
xchg
shr
xor
bsr
add
mov
cmc
test
movsbw
pushl
popl
stc
movl
pushl
bswap
mov
dec
not
test
rcr
shl
xor
bswap
and
bsf
dec
stc
neg
rcr
pushf
inc
jmp
push
call
jmp
movb
pushf
popl
jmp
push
jmp
jmp
stc
jmp
pushf
mov
movb
lea
jmp
mov
pushf
call
sub
pushf
call
jmp
pusha
rep
push
mov
shl
shl
cmc
mov
test
cmp
pushl
popf
mov
mov
lea
jmp
push
repz
popl
bswap
cmc
push
lea
push
dec
push
pushf
add
btc
rol
pushl
popl
xor
push
bswap
xor
sar
mov
rcr
bsf
cmc
btc
not
cmp
shld
lea
cmc
bswap
adc
pushf
add
neg
bsf
neg
shld
lea
btc
sub
pushf
lea
pushl
pusha
push
mov
lea
jmp
inc
daa
neg
mov
push
stc
shld
bt
mov
cmc
movb
stc
bt
add
push
jmp
cmp
sub
cmp
pusha
shr
call
rcr
sub
jmp
pusha
movzbl
movw
pushf
mov
push
not
lea
pop
pushf
pushf
pushf
lea
mov
call
mov
mov
jmp
shl
bswap
bsf
shrd
mov
neg
ror
jmp
sub
clc
shr
pusha
pushf
mov
mov
pusha
call
jmp
mov
pushf
lea
jmp
call
pushf
popl
mov
movb
lea
jle
pushf
pushl
popl
push
pushf
lea
jmp
and
lea
rcl
cmp
add
cmc
pusha
rol
inc
not
not
pushf
inc
sar
and
shl
clc
and
mov
btc
mov
cmc
pushf
jmp
call
bswap
pop
bt
pusha
pushl
popf
pusha
movb
pushl
lea
jmp
xchg
not
call
mov
push
movb
pusha
pushl
ret
call
mov
movb
movl
lea
jmp
