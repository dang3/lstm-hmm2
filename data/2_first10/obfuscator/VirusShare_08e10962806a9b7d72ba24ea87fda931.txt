pusha
add
movb
and
xor
adc
decl
add
push
lahf
pop
jmp
push
mov
adc
sbb
adc
add
adc
push
cld
pop
inc
movl
push
xchg
pop
xor
jmp
les
mov
adc
push
sahf
pop
dec
movw
sbb
or
jmp
sub
or
xor
push
dec
pop
jbe
sub
movb
push
inc
pop
sbb
push
xchg
pop
js
and
ja
movw
or
or
rcr
jmp
das
cmp
aad
or
rcl
xor
push
xchg
pop
ror
sbb
jae
movb
or
ror
or
add
push
cwtl
pop
jle
jmp
push
out
push
sbb
or
movw
and
jmp
fwait
sub
jmp
mov
inc
and
cmovns
pop
xor
add
push
cld
pop
imul
and
jo
and
sbb
jns
dec
movb
sbb
xor
push
inc
pop
or
shl
adc
jb
and
or
sbb
cld
movw
jge
sbb
jmp
pop
jbe
cmpb
xchg
pop
sub
movb
jmp
sahf
cmpsw
bound
lods
sub
add
in
lea
or
inc
jge
ror
repz
inc
mov
lds
add
lock
jp
sbb
jmp
sub
push
xchg
pop
jno
push
xchg
pop
or
and
and
jbe
movl
jmp
jle
ja
jl
fisubl
mov
in
jg
add
mov
loope
push
jno
cmpl
jne
xor
push
ret
pop
ret
aad
jle
cmc
inc
mov
pop
mov
cs
mov
daa
sahf
lcall
mov
dec
in
ja
mov
pop
addr16
lods
shll
inc
fists
add
mov
aaa
sub
dec
add
or
inc
cmpsl
push
mov
shll
inc
cmp
xor
movsl
nop
aaa
adc
mov
das
enter
ja
pop
cwtl
xor
mov
mov
lods
adc
inc
adc
and
not
addr16
imul
inc
dec
loopne
push
push
lds
out
push
testl
push
mov
xchg
aaa
pushl
call
int
xchg
aaa
xor
shlb
iret
lods
call
das
pop
imul
divb
push
rcr
fwait
mov
aaa
sub
out
cli
inc
mov
pop
add
mov
aaa
or
enter
pop
iret
les
daa
inc
mov
mov
shll
sti
mov
ja
inc
notb
inc
mov
orps
rorb
into
lret
hlt
aas
jo
mov
inc
mov
adc
mov
popa
mov
or
insl
mov
and
dec
das
enter
aaa
inc
mov
insb
pop
out
xchg
daa
into
mov
aaa
inc
not
pop
mov
xor
or
mov
adc
addr16
cmc
adc
xor
xor
mov
ja
mov
aaa
inc
in
enter
push
in
shlb
inc
xor
aas
int3
mov
push
notb
cmp
mov
mov
je
into
lret
hlt
xor
mov
or
shlb
sbb
cmpl
cmpsl
roll
inc
notb
inc
mov
popa
mov
inc
dec
xor
pop
jnp
in
adc
movsb
adc
or
into
lret
hlt
and
movsb
adc
cmp
jb
mov
mov
mov
dec
xor
mov
cli
into
out
fdivl
cmp
cmp
andl
mov
daa
inc
ret
mov
adc
shl
adc
xor
xor
aaa
xor
andl
cmp
sahf
inc
mov
mov
mov
shlb
xchg
shl
ja
scas
lods
pop
xor
jo
sahf
inc
mov
mov
mov
shlb
mov
repnz
ja
addr16
dec
push
insl
sbb
adc
shlb
xor
and
into
fdivl
xor
mov
mov
test
clc
mov
subl
hlt
jmp
ljmp
push
not
fistpll
dec
mov
pusha
lods
pop
shlb
inc
ds
mov
mov
or
not
pusha
lods
insb
shlb
inc
ds
mov
mov
jg
not
pusha
lods
jl
aaa
inc
ds
mov
mov
pop
adc
push
inc
mov
xor
jno
addr16
pop
pusha
aaa
inc
mov
iret
sub
loopne
stos
inc
mov
mov
adc
aaa
fnstenv
push
sub
shlb
lds
and
shlb
lds
sub
mov
or
mov
or
mov
and
test
inc
adc
shll
sub
mov
sub
sahf
inc
adc
mov
push
xor
mov
and
movsb
pop
sub
sarb
ret
mov
push
xor
addl
mov
inc
adc
mov
cmp
mov
push
xor
mov
push
and
mov
dec
mov
shlb
mov
adc
xchg
aaa
inc
add
add
inc
inc
add
add
rolb
add
and
add
addb
add
add
add
add
add
add
add
or
sahf
add
dec
lret
rorl
or
xchg
adc
sub
or
sub
clc
ja
out
add
dec
cmp
cmp
inc
std
arpl
add
add
add
daa
sub
push
inc
loop
cmp
mov
hlt
addr16
popf
int
repnz
in
mov
and
testb
std
xor
jb
insl
sbb
roll
and
outsb
jle
cmp
popa
jno
add
jno
ret
sub
add
add
add
clc
add
xor
jne
add
sbb
add
icebp
add
add
add
cmp
add
add
add
add
and
add
add
add
add
pop
add
add
add
add
add
add
add
add
jne
add
add
add
add
add
add
add
add
add
pop
add
add
push
add
xor
add
add
add
add
adc
add
jp
add
flds
add
sbb
add
sahf
add
inc
add
cmp
mov
add
sub
add
ja
add
incl
add
push
add
xor
add
add
add
cmp
add
dec
add
add
add
add
add
add
cltd
push
mov
adcb
or
insb
call
cmp
loopne
scas
pop
add
sub
out
cmpl
xchg
adc
push
xor
inc
dec
mov
xchg
pop
mov
add
add
jge
fdiv
sub
loopne
sti
repnz
out
into
push
sbb
loopne
inc
mov
push
mov
les
mov
push
ljmp
and
push
jecxz
dec
rolb
add
push
sub
add
add
subb
jmp
sarl
adc
dec
fisubl
std
jp
je
adc
clc
cwtl
shrb
push
mov
xchg
push
cmp
fildl
insb
or
sub
mov
mov
sbb
lahf
sub
xchg
ds
push
xchg
adc
in
mov
jae
sti
push
loopne
add
in
add
add
leave
push
sbb
add
pop
add
sub
pop
in
add
cli
pop
movsb
sub
push
out
sbb
imul
ja
xchg
out
mov
out
rclb
or
add
adc
lods
in
fldt
dec
add
loopne
jg
ss
add
in
adc
add
adc
and
add
push
aas
jg
lret
roll
pop
addr16
and
push
aas
je
mov
fcoml
push
add
out
fdivrs
and
add
jne
mov
xchg
call
sub
add
sbbl
sub
pushf
xor
add
ficomps
dec
mov
add
add
adc
mov
mov
mov
sti
add
insb
repnz
mov
xor
sti
inc
mov
add
movsl
insb
cwtl
sarb
ret
aas
inc
add
add
sbb
add
or
jge
daa
aam
add
popf
inc
lret
orb
add
popl
add
imul
add
mov
pop
push
lods
jae
jae
roll
insb
push
jg
and
pop
loopne
add
das
pop
push
movsl
pop
xor
add
pop
mov
xchg
add
lock
add
shlb
popf
negb
icebp
add
mov
es
mov
or
mov
rolb
add
pop
pop
movb
push
aam
add
lea
sbb
test
pop
add
cmpsb
jns
stos
fiadds
sbb
lods
int3
jmp
orb
add
jge
jbe
push
add
or
std
stos
popf
xchg
jecxz
add
mov
sbb
dec
jbe
xlat
push
out
mov
add
cmpsb
pop
cmp
add
push
or
mov
aam
mov
pop
and
sbbb
add
fs
cltd
imul
add
add
clc
test
add
mov
mov
sti
pop
jl
cmp
jg
cs
mov
gs
dec
mov
add
sub
popa
pop
dec
add
pusha
lahf
sub
fwait
add
add
popa
xlat
out
mov
out
mov
lahf
mov
or
pop
xor
xchg
dec
bound
add
gs
adc
out
pusha
sbb
imul
inc
dec
sbb
mov
pop
mov
mov
sldt
sub
jno
add
sbb
js
inc
in
out
pop
xchg
mov
shlb
fcmovb
cmp
xor
add
push
fsubl
mov
test
push
add
pop
mov
mov
mov
sahf
out
inc
push
test
add
aam
pop
add
or
mov
popf
add
ja
fstps
sub
ret
divl
in
fisubs
sahf
mov
inc
and
inc
add
adc
test
enter
add
call
mov
cmp
in
mov
add
push
rolb
loop
or
push
mov
call
das
xor
fs
mov
add
push
ja
dec
sub
jl
add
inc
inc
add
sbb
stc
or
add
and
mov
jg
sti
mov
cltd
add
xchg
lret
pop
pop
cmpsb
pop
xor
add
pop
imul
add
xlat
arpl
ret
jb
add
add
mov
popf
adc
add
scas
or
or
orl
testb
jmp
sub
dec
mov
std
rol
add
stos
loopne
cld
mov
add
add
test
and
es
pop
addl
sub
pop
and
call
add
add
lret
mov
lods
jl
stc
sub
dec
sbb
mov
icebp
sub
mov
add
in
push
test
addl
mov
mov
enter
adc
adc
push
add
loop
test
push
xor
and
insl
or
rolb
add
xor
cs
into
inc
test
ret
aad
add
fmuls
mov
mov
pop
mov
mov
popa
jno
imul
add
fld
insb
push
pop
sub
and
ss
rcrb
mov
pop
inc
add
dec
imul
sbb
inc
add
add
imul
mov
jmp
mov
inc
sahf
sbb
xchg
into
jle
add
mov
push
nop
outsb
in
dec
in
pop
jp
gs
mov
jp
adc
insb
jmp
jo
dec
pop
sub
pop
sub
lret
pushf
xchg
jecxz
shr
or
cli
ja
mov
add
rol
push
adc
dec
dec
mov
aad
push
in
pop
insb
pusha
lea
jbe
popa
cmp
fadd
jg
xor
inc
jmp
cmp
jp
sahf
mov
inc
push
repz
pop
sbb
mov
dec
lods
das
mov
stos
and
push
xchg
aam
lret
jne
je
adc
pop
fistl
pop
sahf
or
xor
jb
mov
subl
subb
inc
test
cmp
pop
pop
in
pop
xor
add
loop
stc
mov
mov
adc
add
cld
and
popf
subb
mov
and
stc
jns
std
ljmp
cmp
test
push
leave
rcrb
add
add
or
loop
imul
add
iret
add
mov
push
add
insb
mov
adc
adcb
test
inc
test
mov
mov
pop
std
add
add
fstpt
out
mov
xchg
mov
lods
push
sub
dec
shlb
add
add
sbb
call
sub
cli
inc
fdivr
inc
sub
push
aam
xlat
cmp
add
out
sub
imul
insl
add
and
xor
add
mov
stc
jge
inc
lods
ret
add
fldl
int3
fnstsw
and
add
sbb
jns
jo
loope
into
mov
pop
std
cltd
jnp
das
or
int
popf
inc
mov
addl
dec
je
scas
inc
pop
push
int
sub
popf
inc
inc
enter
stos
xchg
inc
lcall
jmp
mov
pop
xor
jmp
lods
lret
std
rcrl
lea
jns
movsb
ret
ds
and
mov
push
xchg
lods
adc
sub
cli
sbbb
sub
sbb
xchg
sbb
aam
jb
test
xor
in
mov
fnstsw
bound
push
inc
or
push
fidivrs
aaa
sbb
add
mov
out
pusha
cmc
pop
fnstcw
sub
add
pushf
jecxz
fwait
pusha
ja
sub
sarb
lods
out
mov
mov
int3
pop
adc
aaa
adc
lea
push
outsl
and
arpl
inc
hlt
and
push
stc
sbb
daa
pop
clc
mov
icebp
in
movsl
pop
mov
pop
or
std
dec
aas
insl
xchg
sahf
pop
xchg
lret
mov
fidivs
es
jmp
add
ficompl
mov
jmp
test
dec
xor
add
inc
jl
mov
jle
pop
mov
inc
xor
js
push
repz
push
xor
add
aam
loope
push
ret
push
int
dec
ret
stc
insl
mov
cmp
pop
add
std
fnstenv
pop
add
add
inc
sub
pop
and
cmp
cmp
adc
addr16
mov
pop
push
ljmp
push
push
xchg
push
pushf
les
rorl
jo
xchg
sbb
rcl
repz
divb
xchg
mov
aaa
lahf
jecxz
dec
dec
adc
pop
add
cmp
mov
xchg
mov
les
push
repnz
jne
gs
scas
add
hlt
lea
add
add
jae
jmp
cmc
rolb
mov
mov
jl
fnstsw
fiaddl
fdivl
adc
add
xchg
pop
insb
sbb
daa
jmp
mov
out
hlt
push
add
jp
push
mov
push
jb
addb
dec
pop
cmp
mov
test
outsl
aaa
imul
dec
push
inc
out
and
xlat
mov
cmpsb
jns
push
dec
pop
sub
repnz
flds
ror
jo
push
or
pop
jmp
cwtl
repnz
mov
rclb
adc
cwtl
test
add
sbb
pop
jp
add
and
push
sub
mov
addr16
fldl
lods
mov
or
ja
push
inc
rorl
in
adc
nop
sub
add
std
out
add
add
pop
push
dec
mov
add
popa
ret
inc
test
arpl
add
pop
sub
sub
cwtl
shrb
outsl
rcrb
mov
add
xchg
xor
add
dec
out
iret
pop
lret
lret
jae
jne
xchg
insb
adc
lods
roll
dec
pushf
sub
add
and
pop
stc
repnz
adc
inc
sub
add
ss
int3
lahf
sub
ret
xor
mov
loop
shll
out
xchg
mov
lock
testb
dec
shlb
xchg
xor
add
mov
xlat
or
add
jle
mov
mov
cmp
fildl
cmp
das
add
stc
cmp
out
dec
xlat
and
add
xchg
jns
mov
add
hlt
dec
subb
fistl
popf
add
lret
pop
and
add
popf
xchg
add
lea
and
dec
jle
sbb
jle
sub
add
push
dec
push
xchg
imul
mov
jno
pusha
std
mov
mov
sub
cmp
pop
insl
mov
add
lea
outsb
add
outsb
push
mov
add
and
or
lret
lret
jecxz
lret
cmp
jne
int3
add
sbb
fdivrp
mov
add
add
dec
inc
pushf
jnp
testb
pop
jo
outsb
inc
add
and
xor
int3
inc
add
add
mov
cltd
add
out
arpl
imul
pop
mov
add
push
push
xor
fldt
js
xchg
or
orl
cs
jb
add
push
jmp
mov
ljmp
add
imul
repnz
inc
out
add
cmc
mov
push
mov
add
lret
std
push
mov
xor
add
push
fldl
sbb
mov
dec
insl
jnp
rorb
push
fstps
std
scas
adc
mov
sbb
push
add
mov
aad
inc
mov
in
xor
movsl
xor
add
ret
pushf
scas
or
add
insl
cwtl
pop
outsb
shl
sub
add
sbb
jns
or
enter
bsr
dec
add
sub
add
xchg
in
xchg
fisttps
jbe
mov
lcall
push
sbb
add
mov
je
loopew
adc
lret
cmp
aam
sub
mov
addr16
cld
and
pop
xchg
inc
ret
add
lock
loopne
and
pop
xchg
push
xchg
add
cmp
add
mov
jg
enter
push
add
add
xor
inc
xlat
mov
inc
fcoml
aaa
out
adc
lods
and
add
sbb
sbb
add
add
xchg
cmp
add
push
call
in
jbe
and
mov
iret
mov
movsb
lahf
rcrl
push
sub
add
cmp
insl
ljmp
bound
push
and
roll
aaa
sub
add
cmpsb
add
adc
push
adc
xchg
push
mov
jne
or
loop
mov
outsl
aas
fiaddl
add
xchg
xchg
dec
stc
or
test
xor
fcompl
add
movsl
jne
xor
mov
dec
sbb
add
add
fisubrs
iret
add
rolb
and
hlt
and
add
icebp
imul
pushf
mov
and
or
movsb
ja
lods
data16
cmp
fwait
jmp
pop
and
sub
mov
lret
push
add
icebp
push
fdivrl
xchg
lea
mov
fiaddl
add
into
sbb
shr
sbb
add
dec
es
rcr
rorl
add
add
movsl
insb
lea
enter
mov
add
or
mov
mov
xchg
mov
add
pop
idiv
sbb
in
sbb
mov
data16
rcrb
add
add
mov
xor
gs
pop
inc
add
mov
cli
imul
jle
insl
cwtl
jg
mov
inc
enter
pop
mov
fs
enter
sbb
pop
xchg
test
orl
add
fwait
sahf
add
mov
outsb
and
add
adc
jg
ret
test
mov
add
mov
outsl
out
dec
dec
gs
mov
icebp
add
pop
into
pop
sub
mov
in
add
pushf
cmp
sti
mov
shlb
dec
or
jnp
mov
popa
xchg
mov
cs
je
pop
xchg
aas
jg
cwtl
xchg
push
mov
lods
add
adc
dec
and
sub
outsb
repnz
push
and
jbe
dec
add
xchg
add
jecxz
pop
adc
in
pop
pop
or
or
xchg
add
jle
sbb
sub
add
shr
scas
fisubrl
repz
pop
movsl
add
add
test
and
inc
cmp
xor
pop
and
lods
add
les
add
je
pop
aas
add
mov
cmpsl
jge
add
xchg
push
cmp
add
addr16
cwtl
add
movswl
sbb
mov
mov
xlat
std
sbb
xchg
push
sub
and
data16
js
in
add
xlat
sbb
lcall
add
mov
test
add
xor
loope
inc
and
jae
add
add
add
pop
xchg
add
add
dec
or
sti
shl
jb
or
or
sbbl
hlt
dec
test
xchg
lahf
test
pop
push
movsb
jmp
add
add
dec
mul
cmpsb
xchg
adc
dec
add
bound
popf
mov
add
pop
mov
mov
sbb
pushf
add
push
idivb
fwait
mov
xor
xorb
ret
ror
ret
xlat
xchg
nop
inc
cmp
mov
mov
pop
xchg
cmp
push
xor
addr16
cmp
pop
pusha
lock
add
data16
add
xlat
orl
add
stos
xchg
jne
xchg
add
icebp
std
dec
in
ficoml
lea
add
hlt
dec
add
add
sub
jne
add
pushf
mov
add
dec
jl
insb
mov
add
in
inc
addl
pop
stos
stc
mov
in
mov
pushf
lods
xlat
add
cmp
in
add
dec
stos
mov
mov
enter
or
and
add
add
in
or
and
fstpl
add
imul
push
xchg
adc
andnps
inc
fs
inc
dec
add
push
call
das
daa
add
rolb
mov
jne
xlat
push
and
pop
fcoml
mov
and
inc
pop
test
add
int3
xor
add
mov
movsb
xchg
loopne
add
addl
add
sbb
ficompl
inc
mov
sbb
inc
pop
push
out
outsl
xlat
jge
je
add
in
cld
hlt
getsec
jnp
xchg
add
aaa
adcl
inc
mov
rclb
add
xchg
add
add
push
pop
test
jle
add
push
pop
pop
ss
push
add
jmp
pop
add
sbb
cmp
inc
pusha
and
test
xchg
lds
add
mov
jl
add
and
mov
add
pusha
movsl
popl
push
ja
pop
push
xchg
test
add
aam
xor
mov
mov
sub
imul
push
add
and
rolb
jno
test
add
pushf
mov
dec
test
add
mov
sbb
pop
cmp
add
call
clc
jecxz
push
pop
add
inc
jmp
add
sldt
mov
mov
jae
pop
jmp
add
xor
pop
pushf
cltd
daa
add
stos
test
xchg
subb
jnp,pn
add
and
lods
rorl
and
int
js
add
mov
xchg
aas
add
add
sub
jmp
xor
fwait
sub
sahf
sub
lcall
ds
push
sbb
fsubr
xchg
mov
pop
dec
test
lret
cltd
cmpsl
cmc
xor
and
out
mov
js
int
arpl
add
out
sbb
jb
mov
call
dec
jge
or
cli
mov
movl
and
add
fs
int3
int
bnd
iret
rolb
sahf
add
aas
enter
mov
ja
rorb
les
f2xm1
add
loopne
mov
gs
or
repz
xchg
add
dec
mov
cs
push
test
or
lds
rolb
mov
xchg
lods
imul
out
mov
int
xor
and
xchg
xor
sarb
add
cmp
add
push
push
mov
sbb
leave
xor
add
xor
sub
xor
sub
and
pushf
movsl
and
bound
aad
lret
clc
popa
mov
xor
pop
cmp
add
cmc
cmpsl
push
loope
add
test
lock
add
cmpsb
and
or
xchg
mov
popa
xor
add
les
hlt
popf
jo
adc
ljmp
fnsave
add
jl
fadds
mov
int3
seto
add
aaa
mov
enter
sub
pushf
mov
add
add
adc
inc
cmp
scas
add
bound
lahf
fs
movzwl
adc
mov
pop
add
add
mov
add
ret
jne
in
pop
scas
stc
shlb
or
sub
dec
add
insl
gs
add
cli
add
add
adc
add
push
xlat
cmpl
ja
mov
push
add
add
movsb
fiadds
or
movsb
inc
pop
mov
sub
and
int
jb
dec
je
fwait
push
mov
pop
cmpsl
mov
add
add
sbb
testl
push
fcomps
ret
cmp
pop
mov
inc
add
and
imul
mov
adc
shl
lock
push
pop
inc
jg
jge
or
push
add
mov
lret
push
add
cmp
dec
fildll
bound
dec
enter
negb
and
hlt
scas
rolb
mov
add
xorl
add
push
pop
loopew
push
xlat
pop
adc
pop
out
push
sbb
jnp
add
mov
sbb
ljmp
jg
push
arpl
add
cmp
mov
js
push
sti
or
xchg
push
pop
add
pop
fdivrl
and
add
inc
dec
mov
js
ss
push
das
cltd
test
jp
add
xchg
sub
mov
dec
jnp,pn
pop
xchg
fdivrp
cmp
ror
dec
add
sbb
lods
icebp
popa
addb
aaa
xchg
xor
fcmovnu
hlt
dec
add
lods
push
movl
loopne
rorb
cltd
out
sbb
add
add
jge
inc
add
out
inc
sarb
inc
mov
add
push
lds
shl
add
inc
cwtl
sbb
add
add
test
add
mov
addl
cmpsl
add
fcoml
pop
xchg
inc
test
add
push
out
bound
cmp
mov
outsl
add
rdtsc
pop
inc
add
stos
xor
add
popf
mov
ret
sahf
cli
add
xor
stc
daa
pusha
dec
js
add
daa
xchg
push
cwtl
mov
and
mov
sbb
cmp
jecxz
dec
xchg
fisubl
stc
sub
ljmp
mov
sub
adc
add
xor
xor
lock
mov
xchg
clc
cmp
loopne
xor
add
push
adc
pop
in
sbb
xchg
dec
cmp
push
push
pop
mov
add
das
lahf
in
out
aaa
and
add
mov
lods
jge
inc
add
in
hlt
sub
jle
scas
imul
cld
inc
jbe
and
add
out
daa
addr16
mov
cmp
lods
sahf
jg
cs
into
xor
out
or
add
adc
test
repnz
cmc
je
inc
add
shll
test
add
add
xor
testl
insb
outsl
mov
mov
add
pop
add
das
pop
pushf
mov
fcomps
clc
add
or
sub
lret
out
sbb
push
and
subl
push
mov
ss
mov
sub
jae
aas
add
jns
hlt
hlt
and
add
xchg
add
mov
push
pop
add
mov
hlt
call
mov
cmp
aas
icebp
inc
add
or
or
xchg
loopne
jnp
add
add
mov
xlat
jne
cmp
rorb
add
sbb
mov
unpckhps
pop
add
pusha
mov
dec
bound
add
sbb
aas
scas
ss
add
fildll
outsl
mov
add
add
push
add
add
roll
pxor
add
add
jge
add
add
fs
jp
add
push
mov
dec
sub
xorb
inc
or
push
xor
jg
and
lcall
add
fwait
call
dec
jge
or
cli
mov
add
cwtl
mov
les
inc
add
pop
lods
add
xor
sbb
push
and
subl
test
or
insb
adc
xor
add
and
add
cmp
lds
add
out
lea
rclb
movsl
push
adc
add
sbb
dec
xor
cli
call
pop
outsl
add
inc
mov
and
jg
add
ljmp
or
xor
cld
pop
or
stc
or
sub
in
imul
xchg
add
enter
fidivrs
inc
popa
repz
add
pop
mov
aam
scas
jmp
imul
fnsave
add
pusha
add
push
push
fwait
add
in
and
cmp
add
sbb
xor
inc
fldenv
add
cmp
add
inc
cmp
and
lcall
sbb
mov
mov
xchg
xlat
testb
out
mov
jne
add
cmp
or
out
in
sbb
add
inc
daa
data16
mov
testb
icebp
rcrl
outsb
mov
lds
add
xchg
imul
add
out
lock
movsl
outsb
and
add
or
in
jns
pop
add
mov
mov
add
call
fdiv
add
add
incb
push
add
xchg
sbb
shl
adc
call
add
pop
inc
loope
mov
add
clc
jbe
loopne
or
or
add
jno
pop
push
add
mov
or
and
add
daa
outsl
pop
jne
sbbl
or
xor
xchg
scas
pop
lea
pop
add
cli
or
rcrb
sub
push
xchg
and
aam
aas
add
mov
or
sbb
add
cld
fadds
inc
sub
into
fs
divb
add
push
fwait
stc
xor
jnp
fwait
dec
add
dec
ret
fcoml
in
jbe
jnp
je
and
add
inc
add
add
call
add
and
ficomps
test
add
adc
clc
test
das
add
fbld
lock
or
cmpsb
dec
inc
mov
push
add
push
cmp
mov
popa
add
lock
stos
cmp
mov
jo
xchg
into
jns
cmp
orl
call
add
arpl
push
jp
pop
outsl
adc
add
cmp
pop
popa
mov
add
lock
sbb
push
inc
add
fsubr
dec
clc
add
xor
jecxz
insb
cmp
pop
aam
push
jle
mov
movsl
lds
sub
add
cwtl
sub
mov
add
pop
pop
rorb
cmpsb
jne
add
les
add
pop
add
and
shr
js
add
mov
pop
pop
loop
test
jge
cmp
add
add
ds
push
xchg
fsubrl
fs
addb
cltd
jmp
cmp
pop
and
lock
push
sahf
add
add
dec
add
add
shlb
adc
ss
dec
mov
sub
add
loop
popa
mov
icebp
and
xchg
mov
add
mov
dec
fiaddl
inc
xor
hlt
or
or
adc
or
cwtl
inc
fsubrs
or
cmpsb
call
rcr
pop
insl
aaa
add
adc
lea
mov
mov
imul
test
pop
push
push
mov
out
cwtl
push
cmp
xchg
mov
add
add
rcrl
pusha
push
fidivrl
push
nop
fsubs
mov
adc
adc
add
push
pop
fcom
rcl
add
jmp
call
rcrb
add
jnp
repnz
pop
push
adc
and
lret
outsb
jmp
mov
add
bound
fsts
inc
pop
inc
daa
add
call
nop
add
pop
xchg
mov
push
add
jb
insl
xchg
loop
add
sub
jbe
ljmp
and
cmpsl
inc
pop
pop
xchg
add
stos
pop
dec
inc
xchg
imul
mov
ss
mov
dec
add
fsub
sbb
mov
in
add
jmp
mov
inc
jnp
add
cmp
mov
pop
pushf
xlat
in
lahf
mov
mov
andl
loopne
shlb
nop
add
sarb
mov
add
iret
std
and
jg
add
adc
xor
in
dec
out
inc
mov
idivb
add
push
dec
cmp
int3
dec
add
mov
mov
add
or
aad
or
add
sbb
jg
xchg
and
add
sub
xor
sbb
pop
in
mov
test
add
sar
lds
popa
outsl
std
mov
push
mov
add
popf
std
inc
fwait
add
mov
xchg
out
lcall
cmpl
lret
aas
xchg
addl
xchg
test
or
xlat
cwtl
sbb
sub
in
fstps
and
add
and
or
mov
inc
cli
and
jmp
fs
fdiv
inc
add
fstl
roll
dec
fnstenv
xchg
mov
stc
adc
cmpsb
rolb
push
je
mov
add
test
add
leave
int
in
adc
ljmp
add
adc
movb
aas
mov
mov
sub
insb
fbstp
add
sbb
dec
adc
hlt
pop
sahf
push
and
roll
mov
lret
add
loopne
stos
movsl
push
inc
add
adc
xchg
mov
add
push
add
xchg
lods
inc
xor
cmp
cmp
das
xlat
or
add
rorb
add
divl
std
aaa
and
movsb
lahf
sbb
mov
add
sub
sarb
inc
adc
adc
cli
lret
add
add
add
add
ljmp
testl
dec
sti
adc
add
leave
fimull
add
sub
lahf
mov
xor
jnp
add
cld
mov
or
inc
add
shll
mov
mov
ljmp
mov
in
in
jbe
add
nop
daa
pop
cmp
mov
dec
fwait
movsl
pop
adc
sbb
fiaddl
out
xlat
sbb
push
sbb
mov
add
mov
sti
add
loope
jp
dec
sbb
stc
jb
cmpsb
xorl
fisubrs
inc
add
ljmp
es
jno
adc
push
scas
xchg
add
aad
addl
add
or
jge
add
fld1
sbb
out
push
mov
mov
add
xchg
push
add
pop
jecxz
inc
cmc
xor
cmpsb
and
lea
cld
push
add
imul
add
adc
mov
add
add
sub
cmp
add
stc
pop
add
cli
push
inc
ret
push
xchg
mov
sbb
inc
mov
add
fsubr
inc
or
lahf
popa
ret
adc
aam
dec
mov
jmp
popf
addr16
push
add
test
mov
xchg
push
movl
cld
outsb
xchg
add
out
mov
and
and
insb
insb
mov
cmp
into
imul
adc
adc
add
popf
sbb
test
jmp
daa
pusha
call
dec
mov
testb
nop
jbe
or
outsl
inc
pop
adc
lods
movb
push
pop
sub
ficoml
cwtl
add
addl
sbb
imul
add
leave
add
loopne
mov
add
add
clc
mov
cmp
add
cmp
sub
incl
add
pusha
xchg
rcll
add
add
cwtl
adc
lahf
inc
add
pop
test
sahf
or
aas
lcall
mov
jnp
sub
popf
cltd
push
mov
stos
out
mov
repnz
push
cltd
mov
sub
mulb
in
push
add
sbb
fldl
xor
jno
mov
lods
xor
and
cld
dec
add
mov
ficompl
pop
mov
jp
xlat
roll
push
lcall
mov
lret
xchg
add
dec
test
add
mov
pushf
inc
mov
daa
mov
or
sbb
add
sahf
rcrl
dec
out
movsl
fildl
jl
lcall
das
repnz
std
ret
add
push
pusha
rol
pop
test
and
sbb
xchg
sbbb
ljmp
xlat
orl
mov
inc
mov
iret
xchg
pop
sbb
jge
or
filds
add
xlat
push
add
add
iret
outsb
mov
pusha
hlt
cmp
repz
and
add
dec
mov
outsl
xor
aas
add
add
push
pop
add
push
ror
rcll
inc
mov
rol
sahf
ret
flds
xchg
lods
es
scas
cmp
add
daa
into
psubsb
mov
lock
dec
jb
dec
orb
adc
mov
mov
jbe
xor
xor
mov
jo
xchg
cmc
lods
sbb
cli
test
cmovo
and
mov
adc
inc
or
sub
sbb
imul
jbe
add
pop
jo
add
dec
cmpsb
pop
test
lcall
xchg
outsb
cmp
and
add
adc
repnz
test
leave
cmp
ljmp
add
inc
jno
jecxz
add
xchg
add
sub
and
add
cmp
sarl
xor
add
adc
pushf
xchg
dec
divb
fmuls
lds
mov
mov
add
bound
fisubrl
sbb
fwait
add
inc
push
jb
jnp
out
pop
add
mov
and
js
adc
cld
int3
ret
mov
es
add
pop
pop
leave
cmpsl
push
in
add
ss
mov
add
scas
sbb
add
jmp
inc
add
mov
push
or
pop
push
push
iret
sbb
ja
add
mov
repz
add
scas
call
shll
leave
mov
jg
adc
add
adc
movsl
sbb
adcl
jb
std
jae
push
inc
add
and
test
jmp
insl
rcrl
add
popf
adc
sub
and
or
push
xchg
in
or
andl
xor
adc
outsb
add
les
movsl
aaa
iret
sahf
clc
dec
jns
jecxz
loope
xor
movsl
add
call
aas
insb
push
pusha
dec
add
mov
jmp
ret
add
call
push
aaa
jecxz
rcrl
inc
add
decl
pop
jl
push
xchg
clc
std
clc
lods
test
add
or
data16
insb
push
and
in
dec
add
sub
lcall
out
lcall
outsb
aas
jmp
sahf
ret
popa
insb
in
add
in
dec
sbb
add
mov
add
mov
loop
add
cmpsl
xor
add
pop
push
mov
jb
push
mov
lea
mov
add
cld
outsb
test
dec
dec
add
test
add
cmp
adc
scas
sbb
push
scas
filds
add
fsubl
dec
and
or
inc
jnp
add
mov
add
push
sub
fldl
add
cli
mov
add
mov
jp
add
les
jmp
in
aad
add
add
or
add
xchg
push
xlat
xchg
xchg
lret
orb
mov
and
add
ds
pop
push
shrb
pop
mov
jge
mov
clc
push
addr16
mov
push
xchg
xor
pop
rcl
lea
aad
sbb
dec
int
in
pop
dec
push
jae
ficoml
mov
movb
jmp
pushf
jg
add
cld
stos
jnp
add
pop
jmp
into
and
sub
iret
mov
jge
roll
popa
and
lret
andl
ret
jbe
cwtl
addb
xor
add
add
sahf
rorb
cs
je
in
jnp
add
bound
dec
add
icebp
mov
js
xor
push
das
iret
add
dec
out
and
insl
imul
mov
jg
push
enter
bswap
or
and
mov
cmpsb
stc
xor
loop
stc
shlb
xchg
call
mov
insl
add
dec
mov
inc
jl
mov
jo
add
lock
ds
pop
arpl
pop
shrl
and
lret
cmp
add
push
les
mov
fcomp
xlat
scas
xchg
lds
movsl
add
xlat
mov
mov
mov
jp
or
insb
fsub
add
pop
jecxz
push
push
sbb
jae
xlat
test
xor
push
in
imul
sub
cmp
add
mov
add
in
push
scas
and
faddl
add
lea
add
push
fidivrs
sahf
lea
add
and
pop
jbe
and
push
stos
repz
add
ljmp
add
fistpll
adc
mov
jo
std
imul
in
xchg
rorl
int3
test
imul
pop
jl
adc
in
test
lret
add
lea
sub
mov
imul
pop
out
test
add
fbld
int3
jg
mov
dec
aam
inc
pushf
mov
mov
icebp
sbb
sbb
jbe
jl
inc
sbb
mov
pop
js
add
add
lds
add
adc
or
in
loopne
lods
jecxz
jg
push
bound
add
leave
add
add
ljmp
dec
xchg
or
dec
dec
add
mov
int
mov
or
mov
insb
pop
sub
jl
in
add
fsubs
mov
cmp
sub
sbb
aas
push
push
lret
pop
lcall
add
push
sbb
pop
bound
xor
add
push
add
mov
into
lret
jb
push
gs
cmp
in
ret
jmp
add
add
add
add
cli
fdivs
and
loopne
push
add
test
aam
inc
add
stc
pop
gs
xor
mov
jmp
add
and
dec
idiv
js
fiaddl
out
xlat
sbb
push
sbb
mov
add
mov
loop
add
andl
shrl
add
std
ds
push
push
add
popa
add
add
adc
sub
pushf
add
shrb
adc
lcall
lods
sub
xor
adc
push
into
add
mov
fsubp
pop
lock
pushf
push
repz
cmp
fsubrl
shll
test
and
add
les
add
adc
in
add
jg
incb
add
loope
sbb
cmp
inc
mov
and
fdivl
add
add
pop
xrelease
test
add
stc
mov
xchg
add
inc
test
push
add
pop
outsb
xor
pop
push
add
pop
jo
push
pusha
add
adc
outsb
push
repnz
gs
enter
inc
cs
into
add
call
pop
sahf
pop
add
clc
add
xchg
outsl
push
mov
add
pop
cmovne
les
mov
sbb
mov
add
shrl
or
jecxz
stos
xlat
xchg
sarw
add
cmc
bound
sbb
loop
or
fucomi
xor
test
inc
sbb
shrl
fisubrs
sub
mov
dec
mov
or
xchg
mov
arpl
push
int
add
lret
aas
and
and
dec
insb
mov
sub
test
sahf
jge
jne
jne
adcb
fcompl
fnstsw
popf
lahf
rorb
pop
cmp
push
gs
insl
and
addr16
outsb
push
in
shrl
push
es
mov
lea
ret
push
test
xor
cmc
xchg
xor
insl
xadd
inc
lret
hlt
mov
cs
or
jbe
pop
fdivs
les
mov
test
iret
addl
sub
roll
or
mov
fld
inc
std
pop
sub
arpl
pop
push
pushf
out
stos
mov
and
jg
cmp
int3
adc
pop
inc
fimuls
mov
cmp
inc
cmp
jbe
cmc
dec
popf
pop
outsl
testl
xchg
adc
add
imul
outsb
lea
mov
mov
xlat
mov
or
dec
nop
mov
mov
inc
mov
cli
pop
inc
or
rcl
pop
sub
cmpsl
scas
cmp
dec
dec
lea
icebp
mov
xor
push
bound
xor
xchg
dec
scas
outsl
int
jno
test
loopne
lret
sbb
inc
daa
cmp
xchg
lret
ljmp
inc
idivb
push
and
sub
cmpsb
pop
lea
xchg
sub
pop
pop
das
jp
or
scas
push
ret
int
sahf
enter
sti
stc
adc
jne
dec
xchg
data16
mov
xchg
fwait
inc
inc
xchg
lock
sub
lcall
inc
fists
lret
mov
sbb
jb
lcall
sbb
and
es
shlb
xlat
fdivrl
add
mov
xchg
dec
aad
clc
andb
mov
add
push
aam
mov
adc
pop
scas
in
stos
adc
aaa
push
inc
add
movsl
mov
pop
aad
and
xchg
fucom
nop
and
aam
mov
jle
jl
mov
sbb
cli
pop
push
fidivrl
xchg
test
mov
jmp
mov
mov
xchg
outsb
imul
ljmp
out
call
aas
xchg
push
out
mov
xor
mov
xchg
xchg
fs
adc
cmp
pop
aam
adc
push
and
les
scas
xchg
rclb
mov
push
or
cwtl
mov
inc
mov
mov
test
in
loope
pop
iret
xchg
js
and
sub
popf
inc
inc
jnp
cmpsb
xlat
fcompl
xor
ss
les
iret
cmpb
rorl
or
pop
scas
insb
aam
and
push
bound
gs
cltd
xchg
xor
jp
loop
jl
inc
pop
or
test
xor
roll
mov
xchg
lcall
push
fnop
out
shrl
mov
lock
js
std
add
movsb
xchg
push
push
jmp
iret
adc
ds
fs
call
jecxz
hlt
jl
and
sub
ljmp
dec
add
scas
or
dec
inc
fnstcw
adc
or
pop
pop
ret
orb
outsb
test
mov
dec
xor
cmp
mov
xchg
xor
dec
push
mov
mov
sub
mov
push
push
mov
enter
loop
mov
imul
repnz
insb
adc
dec
test
cld
stos
bnd
leave
fdivr
pop
subb
popa
ret
les
stos
inc
fnstsw
dec
push
stc
loopne
cld
lret
add
loop
andb
lods
lock
xchg
fiadds
ficompl
rclb
outsb
mov
adc
or
std
fcom
jns
movsb
push
test
mov
int
cmpsb
or
add
mov
dec
sub
pop
pop
les
xor
xchg
stc
out
stos
lcall
sahf
sti
aas
aas
sbb
mov
push
xchg
jbe
sahf
shufps
rcr
jno
xchg
pop
rcrl
xlat
xor
xchg
data16
nop
aam
imul
mov
in
inc
cwtl
push
mov
int
int
loop
std
push
push
add
dec
mov
add
pop
push
cmp
mov
cmp
inc
and
xorb
adcl
lea
aas
mov
into
mov
repz
or
test
aam
neg
sbb
xor
es
pop
loop
pushf
xchg
subl
jle
adcl
shl
mov
gs
xchg
xor
orl
addr16
fsubp
adc
mov
aam
jmp
scas
jb
cmp
mov
sti
pushf
ds
and
mov
bound
sbbl
jo
in
xchg
mov
mov
outsl
sub
or
inc
mov
cmp
push
xlat
push
cwtl
xchg
mov
mov
jge
loopne
pop
pop
adc
adc
pop
jmp
mov
mov
sbb
mov
out
cmp
call
cmc
mov
shlb
sub
push
fwait
jl
mov
xchg
push
inc
push
cmp
xor
bound
aad
test
cld
lret
and
or
xchg
lds
scas
addr16
pop
das
aam
mov
adc
push
fisubrl
movsb
stos
popf
les
push
aam
movsl
sbb
inc
jbe
add
dec
mov
inc
add
or
xchg
or
jp
rolb
xor
popf
pusha
fnstsw
push
sarb
mov
hlt
sbb
nop
mov
aaa
dec
jbe
loopne
out
cmp
xor
adc
jb
xor
push
subl
sar
mov
jbe
movsb
xor
push
cmp
and
ja
inc
jmp
mov
push
fiadds
inc
pop
push
js
push
pop
jne
pusha
push
add
xchg
stos
adc
mov
sub
jno
adc
xor
jbe
mov
mov
dec
insl
xchg
orb
sbbb
jo
or
mov
or
popa
test
in
xlat
and
es
or
out
add
pushf
mov
push
inc
or
dec
pushl
divb
lock
mov
push
fcmovnu
imul
cwtl
inc
les
aam
arpl
notl
xor
cmpsl
push
xchg
sub
fdivl
jl
xchg
inc
inc
sub
gs
push
les
xor
mov
xchg
fldenv
test
roll
cmp
push
and
test
inc
call
aam
shl
and
or
pop
lock
cs
pushf
rcrb
inc
lcall
push
xor
stos
cpuid
popf
mov
xor
addr16
pop
mov
enter
add
mov
test
adc
insl
and
and
cmp
rcrl
xchg
adc
cmp
in
nop
fisubrl
sahf
mov
mov
mov
sub
gs
pushf
adc
push
mov
hlt
fwait
outsb
popa
in
jge
or
pop
lahf
push
lea
push
mov
outsb
and
rcl
fdiv
shll
outsb
mov
cli
fcmovne
in
mov
mov
dec
jp
dec
pop
mov
in
out
sub
mov
std
push
sbb
sbb
call
or
dec
shll
imul
jg
ss
xchg
mov
push
stc
out
insl
int3
push
fnstenv
test
inc
jnp
dec
cmp
mov
int
xchg
inc
arpl
sbb
fstl
sub
push
sahf
jbe
mov
xor
je
pop
inc
mov
push
lcall
imul
jns
xor
or
jmp
es
fsub
in
xlat
cwtl
icebp
mov
xlat
push
movsl
mov
bound
cmpsl
pop
pop
lahf
out
js
data16
out
xchg
push
sbb
cmp
dec
mov
xchg
adc
pop
fucomp
xchg
and
shrl
adcb
dec
test
sub
push
aam
scas
xchg
and
mov
jle
test
sahf
mov
lds
rcrb
fcoml
cmp
in
sbb
adc
mov
dec
rclb
stc
sbb
lahf
pop
mov
sub
fistl
pop
mov
pop
mov
andb
insb
add
and
lods
into
mov
xchg
mov
ficoml
cwtl
push
mov
cmp
adc
insl
mov
ss
pop
es
stc
movsb
inc
add
sub
fs
sbb
and
mov
outsl
leave
ljmp
fwait
pop
out
sbb
cli
ss
sbb
jbe
and
pop
cmc
xchg
rorl
mov
out
frstor
jp
xchg
imul
fwait
or
sub
repnz
call
add
aam
add
or
fdivr
cmp
dec
adc
rorl
add
add
pop
jecxz
fwait
xchg
sbb
sub
lods
jmp
sbb
push
mov
pop
insl
push
sub
nop
push
fcmovb
mov
lcall
and
cmpsl
in
cltd
pop
add
jg
and
mov
and
sbb
movsl
add
pushf
ja
hlt
add
lea
shrb
rcll
mov
repnz
inc
mov
jb
lret
push
add
inc
test
and
adc
addr16
sbb
sub
xor
jne
popl
add
ret
rcrl
mov
pop
mov
mov
es
add
add
sub
xchg
xor
add
shll
stos
scas
add
cwtl
xchg
mov
imul
mov
xchg
mov
mov
jmp
and
addl
mov
add
add
stc
flds
pop
pop
rol
gs
and
sbb
add
divb
lods
jecxz
cmp
inc
dec
add
adc
fsubr
movsb
dec
push
add
and
ret
mov
mov
cmpsb
and
mov
pop
aas
imul
sarb
add
lea
shl
lret
lods
or
dec
rorl
and
pop
jbe
add
pusha
add
lcall
enter
addb
repnz
sahf
push
xchg
call
push
leave
jnp
add
add
cmp
rcl
cli
dec
add
lretw
cwtl
mov
fiaddl
ficoml
inc
xchg
inc
lret
xchg
and
or
or
test
xor
add
jbe
fisttpl
pop
xor
xchg
dec
out
inc
mov
add
mov
adcb
hlt
xchg
xor
add
mov
xchg
mov
in
fbld
xor
xchg
enter
loopne
out
pop
pop
adc
dec
xor
add
ffree
gs
sarb
inc
mov
xchg
loope
add
mov
aaa
imul
xchg
xor
add
xor
out
cmp
add
add
sub
push
sub
pop
xchg
add
xlat
aad
add
mov
fwait
mov
ss
cltd
lret
clc
xchg
lea
sub
add
xchg
sub
outsb
mulb
adc
insl
mov
mov
cmpsl
mov
roll
bound
add
out
mov
popf
into
out
aad
jae
sub
and
fsts
add
repnz
dec
and
jecxz
add
mov
lods
stc
or
pushf
jg
lahf
test
out
add
xor
sbb
mov
divl
xor
pop
rcrb
ljmp
sub
or
add
mov
dec
mov
aad
add
enter
or
ret
add
mov
ds
pop
jns
dec
add
add
cs
outsl
movsl
rcpps
outsb
add
cltd
sbb
test
mov
add
add
je
push
rcrl
inc
mov
mov
add
sbb
fidivl
inc
dec
into
mov
pop
push
ds
ja
jo
lcall
sub
add
and
xchg
mov
sub
in
sub
addr16
mov
mov
sub
add
fs
pop
sub
das
xor
call
lret
out
jb
inc
pusha
mov
rcrb
lock
je
fnstsw
push
mov
xchg
lock
add
jmp
les
pop
mov
inc
bound
push
jmp
add
jne
lea
cld
daa
in
lods
mov
pusha
inc
mov
add
adc
inc
add
add
dec
jecxz
add
push
aaa
mov
mov
das
dec
ja
cmpsb
stos
add
add
enter
or
xchg
sub
add
jnp,pt
add
pop
add
sbb
aas
cli
cmpsb
xchg
cs
jae
int3
jle
and
sub
mov
add
pop
push
or
popa
cmp
int3
add
lahf
jecxz
add
ficoml
mov
mov
pushf
adc
add
add
sub
mov
add
and
dec
div
mov
add
sbb
test
daa
aas
jmp
push
add
fistpll
jno
inc
dec
outsl
roll
mov
arpl
and
loope
ss
jns
fisubrl
rolb
push
add
add
adc
sbb
pop
xchg
inc
fldcw
shrl
fldl
outsl
gs
call
jg
ret
imul
add
lahf
and
and
inc
add
add
movsb
inc
sub
pop
inc
je
jnp
pop
xchg
scas
xor
popaw
add
add
xchg
jnp
mov
jne
push
addr16
jmp
and
add
cmp
jae
push
add
cld
add
insb
xor
pop
repnz
push
xor
and
jecxz
in
pop
test
sub
sbb
out
inc
fidivl
add
add
jbe
imul
std
mov
add
fadd
add
and
or
add
sarb
jmp
movsb
lock
aad
in
imul
mov
sti
cmp
fwait
aad
sti
add
add
cmp
ficompl
xchg
push
insb
aad
add
xchg
rcl
dec
add
pop
sub
dec
sbb
or
and
inc
mov
xor
xchg
push
or
mov
add
add
jb
pop
or
in
mov
icebp
jo
mov
inc
nop
icebp
lahf
sub
popl
add
and
popa
jg
mov
pop
fucomip
lods
jae
dec
mov
cmp
lcall
lret
sbb
xchg
add
out
and
or
sub
test
jmp
pop
dec
pop
dec
add
pop
mov
add
push
xchg
rolb
add
add
lods
inc
mov
sub
xchg
inc
js
fistpll
cld
and
xchg
nop
add
xchg
movb
lock
xlat
fsubrl
mov
add
add
add
jle
mov
and
mov
add
add
push
iret
packuswb
and
addb
add
or
sti
add
add
sbb
cmp
pop
out
pusha
sub
sub
push
test
testb
add
sbb
cmp
mov
addr16
jl
add
add
and
shrb
mov
jbe
and
fadds
add
jb
scas
jle
ljmp
cmpl
jno
addr16
xchg
add
pusha
int3
in
ret
in
bound
add
mov
pop
cli
popa
lods
jae
ret
outsb
insb
mov
add
in
mov
add
dec
xchg
in
fldenv
loope
mov
add
shll
mov
cmpsl
add
xchg
mov
add
in
mov
push
insb
add
dec
sbb
popf
cmc
sbb
testb
dec
xlat
sub
jne
xchg
add
mov
call
and
sub
rolb
hlt
clc
fnclex
pop
jle
cmp
or
aad
dec
xchg
mov
or
add
and
adc
imul
push
inc
or
xchg
add
mov
lods
add
add
jmp
out
mov
iret
xor
add
and
mov
dec
cs
loopne
mov
jmp
clc
in
imull
mov
ret
pushf
rorl
hlt
add
jns
cwtl
shrb
mov
inc
cmp
call
sub
into
pop
dec
add
mov
pop
add
fwait
lds
mov
rolb
in
sti
in
add
fdivrl
rol
lds
iret
mov
jmp
pop
gs
xor
loope
in
outsb
sub
incl
add
pop
loope
stc
or
or
add
loope
jp
add
jo
iret
or
subl
xchg
add
add
fmuls
out
adc
add
sbb
xchg
sbb
roll
adc
jecxz
sbb
outsb
sbb
scas
pop
dec
add
aam
pop
cli
add
rcrb
sbbb
loopne
loop
jnp
aaa
mov
cmpsl
or
stos
cmc
pusha
lds
add
sbb
add
pusha
jg
mov
and
clc
jp
lds
mov
outsb
jmp
sbb
gs
jge
pop
push
add
sub
and
inc
ret
adc
mov
loope
std
add
jae
jp
lahf
es
cmp
sti
push
in
int
cld
add
cmpl
add
jo
in
in
mov
add
mov
loopne
arpl
push
aas
insl
stc
mov
js
pop
add
movsl
lods
test
fmul
loop
sbb
leave
add
jnp
pop
add
shlw
imul
add
ja
mov
xchg
popf
movsl
mov
int
xchg
jae
int3
aas
add
iret
pop
add
xchg
mov
js
xchg
mov
add
cmpsb
decb
pusha
movsl
jecxz
sbb
cmpsb
xor
lcall
sub
jne
mov
dec
pop
pop
add
out
call
cwtl
xor
divl
add
lret
fwait
xlat
mov
mov
push
push
mov
xchg
pop
mov
add
lcall
mov
jl
ret
push
mov
push
adc
mov
mov
xor
roll
add
sub
xor
stos
jns
mov
fnstsw
xor
push
and
insb
hlt
xor
pop
cmp
shll
sub
in
fimuls
add
fsubl
add
add
lahf
push
push
movb
aas
and
popl
add
sbbl
sbb
inc
add
dec
bnd
push
add
pusha
stos
jno
cltd
lahf
add
scas
add
int3
add
mov
cwtl
add
mov
fistl
or
dec
into
fs
int
add
js
ljmp
icebp
add
outsb
rcrl
adc
ret
ficoml
jo
pop
jmp
dec
add
add
lock
add
pop
mov
mov
inc
xchg
stos
sbb
add
mov
cmp
lock
mov
shl
iret
xor
jae
push
cltd
jle
add
add
push
cmc
jecxz
add
xor
add
jne
lods
shr
add
add
in
cmpsb
xchg
imul
push
movsb
pop
add
add
data16
sub
add
mov
cld
ja
or
add
and
orl
add
and
faddl
add
icebp
pop
ja
insl
add
cmp
js
loope
push
jle
jl
pop
dec
shll
jae
inc
and
lea
add
scas
xor
lret
cmp
mov
add
cmpsl
pop
and
pop
or
lea
lcall
repz
mov
fcompl
mov
dec
or
add
stc
insb
call
loop
jbe
subl
cs
xlat
xchg
push
pop
sub
fisubrl
push
xchg
ljmp
inc
adc
add
dec
hlt
inc
cmp
cmpsl
in
stc
pop
pop
sbb
and
or
add
inc
and
inc
cmp
fcoml
xor
add
fcomps
mov
stos
fnstsw
das
test
push
out
into
mov
jo
nop
push
rol
mov
or
add
popa
jge
test
push
jl
aad
inc
mov
mov
imul
imul
mov
add
in
arpl
add
shlb
test
ret
lock
mov
fnstsw
jecxz
sbb
sub
jge
add
mov
mov
cmpb
pop
sbb
daa
test
add
lds
scas
xor
add
inc
pop
pop
in
pop
xor
mov
outsb
pop
insl
add
jae
dec
add
or
imul
add
popf
adc
and
fistps
jmp
xchg
in
xchg
xchg
sbb
add
xchg
lret
jle
cmp
sub
mov
sub
pop
adc
jmp
andb
mov
in
subb
movsl
sub
add
pop
or
fsts
xchg
loopne
jmp
dec
push
out
loop
or
add
in
jne
push
jbe
mov
notl
push
inc
gs
mov
test
in
mov
dec
xchg
cmp
sarb
repz
std
add
imul
rolb
dec
and
add
jnp
mov
jns
adc
sahf
pop
les
push
sub
enter
mov
cmpsl
cs
bound
push
movsb
cmp
mov
and
or
mov
movsb
add
push
xor
call
cwtl
or
mov
add
loopne
lods
cli
add
sti
ljmp
fs
adc
add
add
popf
mov
adcb
inc
xchg
xchg
cs
aas
dec
sbb
popf
cmc
sbb
pop
js
xchg
shlb
pop
mov
ljmp
add
lock
fistps
cmp
push
jle
pandn
sbb
add
add
pop
mov
mov
and
xchg
xchg
inc
add
and
add
aad
je
mov
pop
sbb
pusha
imul
xchg
sub
movsb
icebp
sub
dec
shlb
add
add
mov
xorl
pop
add
mov
imul
sbb
mov
push
mov
jb
scas
jle
ret
jns
mov
add
enter
cvtps2pd
adc
and
add
sbb
mov
mull
idivb
mov
adc
jo
ret
rcrb
xor
add
mov
and
aad
enter
into
test
lcall
jmp
pop
add
add
mov
xor
pushl
or
adcb
add
mov
and
cmp
add
sti
jp
out
push
mov
sti
mov
pop
pop
sbb
pop
mov
sti
les
int
pop
sbb
pop
andb
add
cmp
int
add
adc
fsubrs
xchg
xor
rcll
sbb
add
mov
rcrb
test
repz
loope
xor
ficompl
fisubrl
stc
push
mov
add
int3
add
add
cmp
and
mull
push
fsubr
mov
das
xor
lret
cwtl
arpl
mov
adc
lods
xor
das
gs
mov
shlb
and
jmp
and
int
and
movl
int
add
pop
fstpt
testl
shl
outsb
inc
int3
sub
mov
push
imul
cmp
cwtl
mov
nop
mov
or
add
jbe
int3
loopne
lret
dec
cmp
pop
sbb
cmc
aad
js
push
scas
jmp
add
int
adc
iret
ret
mov
and
roll
pop
bound
mov
rorl
enter
add
mov
xor
dec
arpl
in
jmp
mov
loop
sbb
imul
fidivrl
mov
and
bound
add
add
add
add
add
and
mov
xor
cwtl
xchg
lret
add
cmc
in
jl
mov
scas
xchg
pop
and
cs
pop
xchg
mov
mov
popf
mov
gs
add
add
sub
add
jmp
add
add
int3
mov
xor
push
lock
add
jl
xor
adc
jmp
sub
push
mov
xchg
add
ds
xchg
inc
out
xor
movsl
insb
imul
adc
add
xor
lahf
movsl
mov
jbe
loopne
sub
mov
cmp
pop
stos
enter
lret
fstps
addb
lock
popa
pusha
adc
or
movsb
add
lcall
inc
mov
mov
inc
idivl
dec
mov
mov
setge
inc
mov
loop
movsb
int3
add
gs
or
int
add
mov
xchg
mov
mov
sub
xor
xor
lcall
enter
mov
fs
aam
push
cmp
jecxz
and
or
add
adc
add
pop
xor
adc
or
cmp
incb
pushf
lret
add
push
repz
and
jno
adc
popf
add
add
mov
mov
pop
out
adc
movb
xor
add
and
fs
add
push
mov
mov
sti
xchg
add
inc
add
pop
lcall
nop
sbb
jbe
cmc
xchg
pop
mov
cld
xlat
sub
add
in
jecxz
jle
pop
mov
push
xchg
push
xchg
add
sbb
xlat
subb
add
push
sahf
insb
mov
add
sahf
cmp
push
push
shlb
and
mov
or
pop
lds
jns
movsb
dec
pop
iret
xor
ret
xor
add
out
mull
fistps
inc
and
add
push
outsl
adc
nop
pop
add
sbb
add
sbb
jbe
and
lcall
push
sub
sbb
fstpt
lcall
mov
les
pop
add
repnz
cmp
xor
xor
or
cvtps2pi
popf
in
pop
cmpsl
or
in
fwait
hlt
cmp
push
and
aaa
xlat
fsubr
push
or
push
push
or
lods
ss
les
xor
xor
dec
out
mov
add
imul
and
outsl
stc
ret
insl
sarb
mov
in
aas
and
mov
cmpb
loopne
cmp
cmp
or
dec
mov
sbb
sub
ja
mov
push
out
sub
pop
insb
pop
ret
pop
jecxz
push
push
pop
es
fs
add
dec
sub
add
pop
insl
or
inc
aad
add
mov
or
ret
pop
jge
add
popa
mov
dec
movsl
mov
mov
adc
xchg
push
sahf
and
mov
xchg
add
adc
mov
xor
mov
xchg
outsl
outsl
inc
adc
jbe
test
dec
push
pop
jp
test
imul
out
mov
data16
add
add
les
lods
cmc
psubsb
repnz
pop
sbb
add
dec
ja
push
int
sti
mov
jae
mov
push
popa
fsubl
xchg
mov
xor
les
cwtl
xor
adc
into
popa
add
mov
shrl
and
push
jae
adc
jo
or
pop
add
and
lods
dec
mov
imul
sub
lds
add
or
sub
loope
pushf
out
fcomps
rcrl
push
daa
imul
es
sub
test
clc
sub
jp
xlat
fcom
push
or
mov
mov
addr16
pop
inc
sub
cmp
leave
push
outsl
jno,pn
lret
or
xchg
mov
xor
sub
and
add
add
insl
sti
icebp
clc
fidivs
and
sub
rorl
stc
int
imul
xchg
xchg
add
imul
dec
lods
pop
xor
pushf
sti
and
dec
data16
mov
xchg
push
mov
adc
xor
les
outsl
mov
mov
dec
ret
out
add
orl
add
or
push
jns
mov
rolb
outsb
shll
das
and
sub
test
leave
cmp
sub
mov
push
add
mov
mov
fdivl
jmp
cmp
inc
lods
lret
shll
xchg
xor
fmull
into
out
pusha
inc
add
dec
in
and
das
std
cmpsb
sbb
std
cld
inc
sbb
add
pop
add
mov
add
adc
stos
add
pop
daa
jmp
ror
shll
mov
out
enter
loop
add
mov
cmp
stc
addl
mov
gs
inc
dec
andb
mov
adc
add
add
jae
ja
popf
or
popf
pminub
add
lcall
xor
into
add
and
out
add
jno
mov
add
add
add
push
int
outsb
popa
mov
pop
pop
sbb
dec
cmp
add
pop
dec
xchg
push
or
and
xor
add
sbb
int3
or
loope
out
or
hlt
insl
sbb
pop
stos
mov
push
cltd
ljmp
push
cmp
inc
mov
andl
cld
adc
sbb
jle
push
ja
inc
sub
inc
mov
add
insb
lea
cmpsl
cmp
or
pop
stc
leave
loope
jo
inc
add
add
xlat
mov
add
pop
enter
lcall
sub
call
or
and
jo
add
xchg
cmp
cmc
jns
inc
jnp
montmul
cmpsb
inc
push
daa
push
adc
push
sbb
add
mov
popf
push
pop
jbe
rclb
addb
dec
idivl
filds
jns
add
sbb
ljmp
imulb
xor
lods
lret
repnz
ja
and
and
sahf
lock
cltd
add
out
cmc
mov
mov
xor
ja
push
fiaddl
add
jo
lahf
insl
dec
or
hlt
sti
adc
pop
pop
cwtl
shll
mov
cmpsl
clc
adc
pushf
stos
pop
js
call
addl
out
mov
mov
lahf
lret
add
test
add
call
mov
mov
push
xlat
and
add
adc
insl
xchg
add
cld
mov
stc
push
sbb
clc
fcmovne
repz
test
mov
push
xor
xchg
add
in
bound
add
loopne
fdivrl
add
xor
fadds
add
dec
mov
outsb
outsb
jge
ds
mov
shll
add
lds
sbb
sub
add
insl
ss
sahf
insb
xchg
and
pop
add
inc
add
test
mov
ret
xchg
pop
gs
add
and
icebp
ss
adc
cmp
mov
sbb
sbb
sub
cmpsb
outsl
inc
out
xchg
mov
cmpsl
push
insb
jo
push
or
loope
in
jecxz
subb
add
sti
stos
adc
mov
pop
xchg
sbb
shrb
inc
test
popf
pusha
adc
add
mov
sbb
stos
inc
adc
pmulhuw
or
das
push
pop
popf
mov
jnp
cltd
sub
add
mov
jno
inc
add
sarb
add
sbbl
mov
sbb
jle
and
aad
jmp
add
paddusw
add
or
mov
add
add
rcll
xor
jno
pop
jmp
xchg
add
push
jecxz
xor
add
mov
je
roll
add
sbb
and
add
mov
jae
int3
jl
dec
add
jge
xchg
mov
cltd
pop
out
pushf
mov
aaa
mov
shll
adc
adc
enter
out
dec
push
push
or
pop
mov
mov
cmp
in
into
cmp
leave
dec
push
xor
cmp
pop
bound
in
mov
dec
sub
jp
sbb
lret
aas
in
out
pop
xchg
xchg
xchg
cmp
dec
loop
mov
sbb
dec
xor
inc
add
ljmp
xchg
into
cmp
gs
push
adc
sbb
pop
arpl
xchg
jecxz
xchg
aad
call
inc
scas
push
iret
cmp
repnz
pop
outsb
scas
mov
add
push
imul
pop
mov
sahf
dec
jne
orl
or
add
cmc
add
inc
xchg
xor
add
clc
das
out
mov
add
pushf
add
add
ret
jmp
jno
add
mov
lret
outsl
insb
sub
xchg
adc
repz
cmp
call
and
add
add
shll
dec
add
int
mov
add
arpl
and
push
pop
jle
aaa
pop
dec
xchg
or
imul
out
daa
xchg
into
xchg
iret
pop
xchg
lea
sub
rcll
mov
sub
cltd
mov
add
pusha
test
leave
and
cmp
add
mov
sbb
cmp
bound
fadds
ds
add
push
push
dec
jg
int
and
jo
loopne
jns
add
call
jno
leave
adc
sub
push
and
xor
jae
xchg
pop
pop
pop
sub
sub
or
cmp
in
leave
jmp
lock
jno
fwait
mov
pop
mov
test
rcl
inc
aam
insb
or
nop
cmp
mov
pop
mov
push
push
jno
in
outsb
and
aam
sub
push
ret
icebp
push
les
xor
sahf
cltd
std
and
movsl
xlat
pop
xchg
mov
loopne
imul
int3
or
xchg
jo
and
out
jle
outsl
add
shlb
nop
add
add
jle
xor
je
imul
in
rcrb
enter
cmp
sbb
push
jg
add
daa
inc
push
jns
push
and
cmpsl
jmp
mov
ret
xorl
sbb
xlat
out
jge
add
call
inc
inc
xchg
jl
add
mov
ret
inc
cltd
test
push
lcall
cld
push
mov
in
push
or
movsl
pop
mov
mov
incl
inc
pop
aaa
pop
cmp
fdivl
cld
idivl
mov
sti
inc
sbb
mov
push
push
fadd
cmp
es
push
cmp
adc
xchg
sub
mov
adc
mov
inc
cmp
out
or
shrl
mov
mov
dec
scas
cmp
jae
sub
notl
cs
cmp
aam
cwtl
xor
stos
inc
adcl
add
jecxz
push
lods
call
pop
js
push
ja
int3
and
cmp
popa
pushf
sub
sbb
and
add
add
xor
push
xchg
add
add
jg
hlt
loope
dec
outsl
sbb
in
sbb
and
and
inc
xor
ret
and
add
insb
add
add
lret
mov
js
sahf
sbb
lcall
add
movsb
xchg
mov
pop
adc
ret
push
pop
mov
mov
mov
add
add
pop
in
cmp
sub
es
lea
cmp
or
add
dec
js
jae
push
xchg
loope
pop
mov
dec
mov
sbbb
lcall
lahf
nop
sub
arpl
out
std
sub
sbb
insl
sarl
add
add
daa
movsl
xchg
xor
mov
fistl
add
cwtl
xor
adcl
pop
jecxz
lahf
testl
fcmove
mov
add
leave
mov
xor
xchg
mov
shl
sub
int
sahf
dec
push
fwait
or
xor
dec
daa
dec
adc
prefetcht0
and
lock
iret
push
inc
je
cmpsl
mov
inc
rorb
test
je
fcompl
xchg
jecxz
pushf
push
mov
dec
rcll
and
inc
out
loopne
scas
inc
jp
imul
mov
pop
out
mov
push
mov
add
cmp
outsb
mov
jmp
cli
mov
dec
ret
adc
lret
inc
lahf
cmpsb
cld
xchg
lock
mov
push
pop
loopne
mov
add
xchg
sub
not
lock
pop
decl
sbb
mov
xorb
iret
push
and
in
jo,pn
xlat
cmp
cld
test
mov
jmp
cmp
jge
js
rorb
mov
add
pop
fdivs
cli
adc
dec
insl
xor
mov
test
scas
mov
xchg
mov
shll
pop
movsb
shr
negl
jecxz
outsb
out
push
xchg
add
mov
or
inc
out
adcl
xor
pop
inc
mov
or
xor
cwtl
jl
outsl
shrb
das
hlt
inc
stc
addl
cltd
cs
ss
jle
mov
ret
or
cmp
sbb
pusha
fnstcw
add
or
cs
push
dec
pop
mov
add
mov
inc
pop
jl
cmpb
push
xchg
enter
testl
push
lods
add
xor
popf
or
sbb
add
pop
adc
push
cwtl
movb
inc
or
movsl
dec
mov
mov
adc
cmp
mov
add
xchg
xor
cmp
cmp
pop
mov
out
icebp
std
pushf
mov
mov
mull
xchg
hlt
cmpb
sbb
xor
add
add
xor
fdiv
iret
gs
xchg
pop
dec
xchg
sbb
call
add
pop
call
pop
cmp
cmp
outsl
xchg
icebp
rcrl
mov
and
add
mov
mov
in
dec
mov
cmp
and
je
movsl
add
add
shr
pop
lcall
mulb
push
sub
mov
mov
lcall
add
pop
jo
pop
sbb
jnp
enter
aaa
imul
enter
loope
xchg
insb
decb
push
xchg
jmp
sbb
int3
pusha
mov
movsl
faddl
add
add
les
jae
loopne
pop
xchg
or
aam
jl
mov
jg
faddl
sbb
and
xor
aaa
and
add
sbb
xorl
inc
pop
mov
pop
icebp
addl
add
imul
dec
das
jo
mov
imul
cmp
cmp
add
inc
push
adc
loopne
add
out
outsl
js
test
sbb
imul
repz
add
push
jp
mov
out
push
inc
xchg
dec
mov
push
push
fs
cmp
lods
xor
aaa
jns
insl
cmc
shl
xlat
add
insb
popf
xchg
aaa
icebp
cmpw
inc
and
mov
mov
pop
add
sbb
add
add
add
cli
sbb
into
sbb
shl
rol
arpl
outsb
and
cmc
and
mov
inc
out
adc
int
mov
add
xchg
mov
push
cltd
mov
sbb
and
mov
add
int3
seto
lret
sub
cld
in
xchg
adc
pushl
shr
inc
sub
call
fcomps
adc
add
mov
push
pop
push
ja
jb
mov
jo
or
mov
push
pop
stos
xchg
mov
ja
roll
adc
imul
mov
daa
loopne
sub
movsl
push
add
lea
lods
rolb
loopne
sahf
inc
pop
xor
loopne
lcall
sarl
add
add
jle
inc
dec
hlt
adc
xchg
pusha
ret
and
add
sbb
push
lds
frstor
in
xor
xchg
jp
adc
add
add
mov
sahf
inc
out
lcall
mov
mov
mov
movsb
add
mov
jp
add
in
nop
inc
mov
das
push
scas
sbb
cmc
or
test
and
addr16
enter
xor
jge
add
lods
movsb
shlb
mov
popa
sbbb
ficomps
add
out
sub
dec
fsubrs
xlat
xchg
sbb
out
orb
jns
push
mov
inc
repz
mov
das
repnz
push
and
adc
add
lea
js
jns
lea
push
jae
orl
cmp
cmpsl
lcall
pushf
adc
jb
leave
lods
sbb
cmp
xchg
inc
jbe
mov
add
or
and
pop
jae
push
sub
mov
or
jne
enter
jg
add
stos
inc
stos
push
rcrl
pop
fcoms
test
xchg
fsubl
cltd
mul
fsubr
andl
shrb
lahf
fsubs
jns
scas
pop
or
inc
pop
dec
test
enter
jecxz
imul
popa
mov
fs
xchg
xchg
xor
mov
or
mov
inc
lds
add
leave
adc
or
movsb
movsl
add
out
clc
push
pop
test
xchg
jmp
pop
sbb
sub
and
lds
fldenv
ss
xor
push
cmp
sti
in
fidivl
fdivs
rolb
dec
sub
push
lret
pop
xor
dec
inc
and
ljmp
fcomp
ud1
xchg
ret
add
cwtl
cmp
xchg
in
fmul
xor
jmp
adc
test
sbb
mov
push
icebp
mov
mov
add
add
sahf
jmp
aaa
mov
add
mov
add
add
push
in
mov
outsl
sbb
push
dec
add
pusha
mov
xor
out
stos
lcall
add
in
add
add
inc
jo
push
fwait
push
sahf
je
mov
cmp
fcompl
mov
and
aad
mov
mov
dec
pop
pop
mov
jae
aam
mov
arpl
add
sub
xchg
pop
addr16
mov
or
add
mov
pusha
cmpsb
arpl
pop
pop
fs
pop
cmp
cmpl
jbe
pop
jmp
cmp
mov
aaa
outsl
pop
push
fcmove
pop
rolb
add
cltd
add
xchg
xchg
leave
mov
xchg
push
add
add
cmp
adc
push
pop
adc
into
xchg
sub
adc
enter
lea
mov
mov
mov
add
adc
inc
aas
fisubl
rclb
push
loop
neg
stc
mov
or
pop
out
daa
mov
lds
push
add
add
inc
add
mov
and
ret
std
pop
ret
mov
xor
add
bswap
xchg
mov
fs
or
push
lcall
or
ljmp
cld
jae
and
jmp
or
mov
jge
cli
adc
lret
mov
jo
add
rcll
pop
stos
out
in
out
outsb
fldenv
xchg
mov
mov
inc
lcall
pop
add
ja
fwait
aam
aaa
hlt
push
cwtl
xor
jge
mov
ljmp
leave
add
movl
lods
push
test
add
lock
testb
dec
cpuid
gs
incl
add
xchg
jecxz
lock
inc
fldt
dec
xor
cwtl
andl
insb
repz
mov
idivl
stos
push
daa
ret
cld
mov
xchg
push
aad
cmc
mov
mov
out
cmp
fidivrs
out
jo
push
xorl
add
inc
mov
push
mov
adc
fldt
out
ret
cmp
or
outsb
pop
pushf
add
jmp
mov
lods
push
out
pop
popa
adc
je
inc
push
sbb
cmp
mov
push
imul
jp
sar
sub
ja
mov
push
xchg
pop
pop
sbb
inc
fwait
mov
cld
leave
mov
jbe
add
fsts
add
jno
or
sbb
jle
xchg
addb
add
dec
pop
jns
and
add
add
xor
add
add
ss
mov
sbb
lods
mov
xor
pop
in
or
ret
mov
loopne
push
test
and
test
outsb
or
int3
cmp
sbb
jmp
xorb
in
pop
mov
push
jge
inc
add
fldl
jae
add
fwait
xor
aas
loop
movsl
insl
test
mov
gs
mov
popf
lods
inc
lahf
in
sbb
cmp
inc
dec
faddp
mov
mov
mov
mov
outsb
mov
dec
cs
popl
fildll
or
dec
and
xchg
shll
cmp
add
xor
inc
add
add
xchg
ss
xor
inc
fsubrl
test
add
xlat
mov
cld
mov
ret
inc
and
test
adc
mulb
icebp
sbb
xor
add
jg
insb
rclb
add
sub
push
push
adc
mov
xchg
and
add
push
outsb
push
ja
sub
or
xchg
add
pop
dec
cmp
adc
loopne
xchg
add
int3
add
add
pop
es
add
or
int3
mov
mov
adc
sub
sub
popa
icebp
mov
jns
add
add
mov
mov
add
jb
jo
xor
add
cltd
sbb
jae
push
adc
sahf
cmp
jbe
sbb
cmp
decw
push
and
popf
add
jb
mov
add
mov
ret
xchg
in
stos
lock
or
outsb
outsb
xchg
popl
add
adcl
mov
in
out
repnz
mov
mov
xchg
fs
ja
sbb
mov
add
leave
jecxz
pop
arpl
mov
xor
add
add
add
or
sbbb
orb
scas
jle
fldcw
push
jo
iret
adc
gs
inc
lcall
jbe
outsl
xor
and
dec
sbb
add
lcall
data16
subb
daa
rcr
add
mov
add
xor
mov
pop
lret
leave
test
mul
or
js
push
push
mov
fcmovu
dec
adcb
add
lods
cwtl
int
enter
lods
sahf
add
test
and
jmp
sbb
pop
stos
jecxz
repnz
das
dec
jo
dec
add
je
mov
addr16
push
stc
out
jnp
mov
add
dec
pop
outsb
pop
call
jb
cld
jl
test
fdivrl
add
js
push
cmp
lret
ljmp
popa
iret
jnp
lcall
mov
mov
add
ret
iret
and
add
add
add
inc
sbb
sbb
jge
cmp
jmp
push
repz
orb
loop
shll
lea
imul
mov
insl
sbb
push
in
ljmp
dec
cmp
mov
add
xor
imul
cmpsb
mov
insb
pop
sbb
cmc
outsb
lcall
add
subl
inc
xor
pop
subl
cmpsb
loopne
mulb
push
inc
add
sbb
pop
inc
addr16
ss
fucom
subl
fldenv
test
jp
inc
inc
push
add
mov
test
add
enter
ss
xor
cmp
push
mov
shlb
arpl
add
push
ljmp
iret
adc
xchg
add
sbb
push
test
add
jmp
mov
push
cld
testl
addr16
sub
shrb
js
loope
insl
ret
jbe
jecxz
push
fistpl
push
int3
sar
addl
adc
orl
push
bound
sbb
out
xchg
mov
push
or
lods
cmp
hlt
jecxz
add
mov
mov
lret
out
xchg
jb
ds
mov
pop
pop
sub
or
sbb
test
addl
adc
and
add
adc
imul
mov
js
shll
int
xchg
ret
push
add
mov
adc
into
into
in
gs
test
xchg
sti
jno
sbb
int
and
mov
and
add
add
ror
mov
mov
jg
fiaddl
out
mov
jne
lods
je
add
fcompl
pop
add
jae
xchg
adc
or
mov
inc
xchg
sbb
jae
clc
loope
adc
adc
cmpsl
inc
pop
mov
out
fsubp
in
sbb
outsb
adc
push
mov
add
push
jl
mov
icebp
add
add
jle
xor
adc
in
hlt
das
in
loope
movl
and
mov
movsb
lods
add
dec
mov
mov
xor
mov
mov
adc
add
addl
add
ja
add
outsb
aas
fmuls
lret
xchg
out
fistps
mov
xor
mov
push
xchg
add
push
mulb
xor
arpl
faddl
jne
dec
xchg
lds
dec
lret
pop
les
call
inc
call
cmp
add
fnstcw
mov
insl
aad
movsl
cmp
inc
or
mov
inc
push
mov
fistpll
add
fmuls
icebp
push
add
sub
aaa
jbe
add
dec
mov
and
flds
push
cli
mov
inc
mov
inc
add
mov
sbb
inc
mov
inc
add
fidivl
adc
shl
imul
xlat
xor
lret
cmc
jl
rcrl
es
jbe
mov
mov
adc
or
mov
gs
fiaddl
cltd
fwait
push
add
out
add
test
inc
nop
scas
pop
icebp
fcoms
xor
out
ret
or
sarl
mov
jmp
push
add
xchg
xchg
fwait
dec
sahf
mov
dec
addr16
mov
jns
movsb
inc
mov
and
or
iret
pop
adc
insl
lret
cmp
out
push
sub
adc
test
add
sub
push
add
pop
jge
add
popa
cmp
mov
and
outsl
jg
jnp
mov
aam
pop
add
inc
mov
or
pop
xchg
mov
add
mov
dec
inc
nop
in
add
test
pop
inc
add
popa
shll
push
or
and
insb
mov
xor
mov
mov
xor
jl
add
push
add
add
icebp
addb
add
insb
jge
aas
int
aad
or
cmp
add
inc
mov
jnp
leave
mov
jmp
fisttps
add
add
lea
add
adc
jge
mov
add
dec
xchg
mov
out
shrl
loop
add
movsl
sti
shll
jo
add
sbb
imul
clc
push
add
adc
out
clc
add
shrb
or
add
bound
sub
add
sbb
add
jl
cmpsl
enter
add
std
inc
add
add
daa
and
lahf
mov
inc
push
mov
pushf
rorl
aaa
add
dec
sub
lcall
pop
add
push
push
in
loopw
jnp
in
pop
mov
cltd
sldt
shlb
sbb
stos
xor
out
and
add
add
outsb
inc
push
add
push
adc
add
into
inc
test
add
mov
out
add
cld
mov
mov
jbe
pushf
adc
add
imul
add
add
adcl
test
jmp
mov
ret
xchg
push
add
add
adc
push
add
add
insl
out
jl
and
or
add
add
jno
inc
mov
insb
rcrl
movsl
adc
add
sbb
jl
cwtl
sbb
shll
pushf
add
sbb
or
add
or
cmp
mov
ficoms
jge
pop
jnp
dec
and
mov
ret
leave
call
push
inc
xchg
and
int
mov
pop
add
mov
cmp
cmpsb
sub
xchg
ficomps
decb
sub
add
mov
push
outsl
push
add
pop
movsb
pop
loope
xchg
or
and
popf
fldl
add
xor
push
xchg
mov
mov
adc
out
setbe
ror
push
or
loopne
jecxz
add
add
xchg
insb
repz
or
int3
fldenv
mov
ret
lds
dec
test
dec
pop
orl
mov
mov
push
jmp
pushf
test
mov
imul
std
pushw
icebp
aaa
test
add
loopne
jle
cmpb
mov
dec
add
sahf
in
rorb
cwtl
fimuls
sub
and
jecxz
dec
xchg
add
xor
mov
add
cmpsb
dec
adc
push
roll
mov
cld
lret
movb
lds
xchg
xchg
mov
add
js
das
data16
hlt
xor
lea
xor
dec
lahf
daa
aaa
push
shl
sub
add
jb
sti
jmp
pop
or
push
ret
add
enter
xchg
pop
ja
add
adc
dec
add
push
arpl
outsl
icebp
lret
mov
outsl
mov
add
pusha
push
cmpsb
cmp
lea
cmp
add
inc
je
shll
adc
aaa
inc
cmpsb
lret
hlt
xchg
loope
push
insb
cld
adc
and
divb
add
push
dec
rclb
mov
fs
dec
add
dec
inc
leave
sbb
mov
ss
push
add
shll
call
test
outsl
add
fcompl
loopne
hlt
jae
sub
sbb
or
push
fisttpl
xchg
add
jge
into
std
orb
and
test
add
sti
pushf
pop
cmpsl
notb
add
push
loop
dec
mov
adc
in
mov
in
ds
test
jle
add
frstor
add
dec
dec
or
xchg
orb
jbe
ja
mov
push
je
js
in
push
dec
sbb
add
cmpsb
and
ret
cmp
divl
in
sti
inc
add
movsb
call
sbb
add
out
xor
roll
add
and
int
arpl
add
add
dec
stos
add
insb
loop
aaa
in
add
add
aaa
scas
les
jb
pop
or
add
pop
loopne
mov
dec
jl
test
fsubrl
mov
add
orb
inc
jne
add
gs
xor
jae
inc
adc
jno
lret
add
cmc
pop
jecxz
add
popa
add
add
popa
inc
xchg
xor
shlb
add
div
push
add
mov
repz
add
add
gs
or
out
insb
add
stc
jl
jecxz
dec
mov
add
fnstenv
add
add
test
push
ret
daa
mov
sti
sub
xor
add
negb
sub
call
add
mov
int
into
dec
leave
pop
xor
dec
inc
mov
inc
lahf
loope
xchg
cli
pop
iret
push
test
scas
jne
add
sub
add
mov
mov
imul
add
add
and
insb
loop
add
add
loopne
push
xchg
jne
add
lahf
xor
adc
adc
add
xchg
push
stc
aaa
push
mov
aas
add
add
rolb
mov
lret
inc
fidivs
fcoms
dec
mov
add
loopne
fdiv
add
add
adc
pop
and
add
repnz
sbb
or
cmp
fsubrs
mov
mov
mov
xor
and
icebp
adc
mov
sub
xlat
xchg
sbb
outsb
pusha
or
add
add
loope
sahf
add
mov
es
inc
test
add
add
fisubrl
into
call
sub
pop
mov
rclb
insl
sbb
daa
insb
repnz
sahf
cltd
leave
loop
sarl
rclb
add
lret
or
add
test
push
test
add
add
add
adc
dec
lock
xlat
mov
xchg
add
add
icebp
jae
aam
add
jne
mov
add
test
loop
push
jbe
add
insb
loopne
imulb
inc
push
add
lahf
cmp
xor
xchg
cmp
xlat
js
sbb
fildl
add
xlat
xchg
daa
add
add
add
xor
jmp
xchg
ret
dec
roll
add
mov
mov
dec
dec
jo
jbe
add
xchg
loopne
sub
push
les
addl
sti
jae
fisttps
pop
and
add
mov
push
mov
movsl
inc
or
ds
add
add
outsb
add
sbb
mov
jle
add
jle
movsb
mov
push
loope
lea
add
inc
rorb
mov
aad
cmp
test
pop
or
dec
dec
sbb
imul
pop
add
sub
test
jl
setbe
sub
add
xchg
jbe
or
mov
pushl
shlb
pop
imul
shrl
mov
inc
sbb
pop
test
or
inc
test
mov
lcall
icebp
das
pusha
adc
mov
mov
popf
test
push
mov
cmp
mov
outsb
xlat
xchg
mov
outsb
aad
dec
jns
int3
push
xchg
outsb
xor
add
xor
psllw
sub
fcoms
xchg
jae
add
es
or
push
lcall
int3
mov
out
mov
loopne
push
and
mov
and
jno
mov
jnp
stos
adc
mov
daa
movsb
and
movsb
and
jl
and
add
out
add
add
sbb
sub
repz
pop
pop
in
xchg
or
rorb
jg
pop
jecxz
xor
and
daa
dec
xchg
pop
test
push
push
xchg
pop
mov
push
and
clc
jb
arpl
lcall
xchg
or
add
mov
xor
pop
jecxz
xchg
shlb
mov
add
je
fs
and
lock
push
shll
mov
mov
cmpb
push
aas
add
or
call
cli
adc
in
jmp
popa
bound
gs
mov
pop
je
movsb
xlat
pop
sub
das
shl
xchg
mov
lea
add
and
sub
movsb
or
jecxz
inc
cmp
loope
adc
add
testl
push
mov
leave
sbb
xor
cwtl
lds
out
adc
add
jae
adc
test
fdivrs
cmp
mov
adc
xor
and
xor
dec
iret
sbb
fbstp
inc
add
lret
mov
or
push
add
jmp
mov
cmp
sbb
adc
pop
jbe
mov
pop
fbld
sub
push
push
and
sti
push
in
aas
mov
push
sub
in
mov
leave
lock
xor
pop
testb
pop
sbb
stc
sahf
daa
push
jl
jmp
push
lcall
fisubl
cwtl
adc
sub
push
sbb
sbb
inc
cli
sub
int3
aam
test
push
in
ss
fmul
push
mov
adc
jbe
pop
jo
pop
fisubrl
sub
std
leave
data16
sbb
fnstsw
mov
stc
add
pop
sub
add
inc
dec
in
push
xor
rclb
cmp
mov
cmp
int
pop
xor
mov
add
xchg
test
dec
fstpt
jp
scas
lds
insb
test
add
add
mov
sub
aas
mov
icebp
add
add
jbe
repnz
jns
sbb
adc
out
cmc
cmc
push
pop
addr16
in
xlat
sub
adc
mov
std
add
push
push
xorb
mov
mov
or
add
mov
sub
mov
cmp
fstl
adc
cmpl
lods
xor
jo
or
cmp
pop
popf
mov
mov
add
cmp
or
mov
pop
imul
mov
mov
mov
aaa
imul
mov
add
std
mov
and
lret
mov
inc
sub
add
aam
sbb
jno
jo
shll
xchg
outsl
lcall
inc
je
or
popf
fwait
daa
lcall
add
inc
dec
adc
pop
out
nop
xchg
mov
clc
add
sbb
dec
mov
test
add
add
jg
aaa
mov
mov
jo
add
inc
call
add
mov
sbb
add
lods
sub
icebp
cli
pop
mov
faddp
add
fcom
xchg
lods
pushf
add
add
mov
das
lret
adc
lret
icebp
out
jecxz
ss
jns
call
cld
sarl
add
mov
dec
pop
xchg
shr
adc
ret
sbb
test
xor
lea
leave
lds
add
stos
or
mov
scas
push
sahf
xor
in
repz
mov
sahf
and
push
pushf
or
inc
addr16
inc
jle
jae
andl
fcoms
aas
not
dec
jp
into
imul
fiaddl
out
add
add
imul
out
iret
js
cmp
outsb
mov
lea
dec
cmp
pop
xchg
add
add
test
xchg
adc
add
stos
inc
xor
xor
mov
or
cltd
adc
adc
sub
into
out
mov
xchg
xor
add
ret
jo
fisubs
mov
loop
xchg
imul
add
lods
mov
adc
jg
lds
cmp
and
and
add
nop
sbb
ja
out
int
xor
adc
add
fsub
pop
fnstenv
test
push
add
std
setne
push
push
add
insb
sarl
sbb
adc
sbb
inc
scas
fmul
or
add
xchg
test
lea
std
cli
mov
aas
shll
dec
lock
add
dec
pop
or
mov
jnp
inc
add
add
inc
imul
lahf
pop
dec
out
les
jae
scas
dec
adc
jo
or
or
bound
cli
cmc
sbb
lret
mov
xchg
and
push
pop
inc
jg
outsb
push
adc
movsb
push
js
mov
mov
add
int
push
fwait
movsl
mov
int3
rcrl
fldcw
jg
repz
push
xchg
adc
mov
push
jle
xchg
jecxz
out
aas
lret
bound
add
test
and
pop
fwait
push
ss
jge
imul
add
fistpll
add
add
xchg
sbb
sbb
mov
pop
push
push
sub
ljmp
xor
mov
aam
dec
mov
mov
imul
aad
jge
fldl
add
sbb
cmp
dec
test
lahf
mov
jecxz
add
and
subb
dec
add
add
adcb
jo
fistps
ret
int3
cmp
add
add
push
lahf
mov
mov
lea
pop
mov
imul
inc
push
sbbb
pop
cmc
or
jmp
test
sub
or
jbe
add
cmc
push
xor
repz
icebp
inc
ret
or
or
and
out
xchg
mov
mov
xchg
mov
std
mov
jg
pop
dec
lds
jns
add
ljmp
lods
pop
fcmovb
out
cmpsb
xchg
push
xchg
jnp
mov
jge
stos
push
dec
add
clc
pop
out
loopne
or
or
add
imul
xchg
lds
lock
add
add
int
sarb
lods
mov
xchg
push
loop
mov
and
js
gs
iret
push
ret
movsb
aam
adc
enter
adcb
jne
inc
and
loop
test
sbb
push
pusha
inc
mov
adc
jmp
rolb
add
mov
sub
dec
lock
js
mov
repz
pop
popa
out
bound
mov
add
loopne
ljmp
or
pop
xor
cmp
bnd
sbbl
rorl
rcrl
push
repz
enter
rclb
dec
out
jns
xchg
inc
xchg
mov
jno
xchg
testb
hlt
sti
adc
pop
leave
pop
fnstsw
out
leave
outsb
in
jae
ret
jle
xchg
and
fldcw
cwtl
enter
and
sbb
push
add
test
mov
les
or
aad
add
movsb
fs
inc
xor
pop
adc
push
fiadds
jg
add
add
mov
testl
inc
adc
add
mov
mov
out
pop
add
mov
sbb
add
test
cmc
aad
in
jge
jbe
xchg
add
xor
andl
jo
inc
mov
add
add
lock
je
xchg
inc
add
mov
pop
cwtl
faddl
jo
add
mov
mov
divb
dec
jl
adc
add
stc
lock
jecxz
lret
xchg
fsubl
out
or
add
flds
rcrb
test
fisttps
jge
out
bound
mov
loope
dec
cmpsb
push
mov
loope
xchg
imul
mov
xchg
cmp
testl
test
add
xor
xchg
fistpl
cmp
add
outsb
mov
and
sarb
arpl
sbb
fs
cltd
mov
dec
mov
sbb
sub
inc
pop
sbb
stos
cmp
add
add
das
lahf
sbb
cmp
pop
outsl
pop
fcmovnu
pop
loope
hlt
stos
aam
jle
mov
cli
icebp
cmpsb
scas
jne
push
inc
loopew
mov
add
test
jp
xor
leave
and
jno
hlt
mov
fcomi
xchg
xor
aad
arpl
test
mov
mov
dec
mov
dec
push
and
cwtl
push
loopne
std
aam
je
pop
add
add
pop
popa
or
lods
leave
mov
cs
test
stos
les
cltd
sub
lds
inc
push
in
aam
add
mov
and
test
dec
sbb
dec
rclb
inc
loopne
add
sub
ss
add
loopne
adc
jle
pop
jmp
ds
lret
push
outsb
fisubl
add
push
ds
test
inc
add
mov
imul
or
add
lcall
imul
add
xchg
les
and
sbbb
add
xor
daa
les
add
add
stc
div
mov
std
mov
mov
inc
fildl
sub
aas
mov
mov
bound
loop
adc
or
aad
rol
add
add
lods
cld
xchg
mov
jmp
and
outsb
cmp
mov
fisubrs
jbe
xor
add
ds
push
add
add
adc
ficompl
stc
ret
xchg
roll
add
ljmp
inc
lds
dec
mov
sub
shrl
std
inc
inc
inc
add
dec
mov
add
stos
xor
mov
ja
mov
add
push
aas
mov
shr
add
sbb
add
add
jmp
push
nop
cmc
xchg
repz
pop
add
pop
xorl
xor
sbb
popa
movsl
fistps
shlb
sti
out
add
xchg
test
stos
jmp
addb
repz
mov
std
outsl
lret
pushf
mov
add
test
xor
and
adc
mov
mov
add
jg
xchg
add
xor
movsl
mov
icebp
test
adc
cmp
push
add
scas
cmpsw
hlt
sbb
imul
add
in
push
shl
adc
add
mov
add
cld
mov
fstpt
pop
add
xchg
js
or
add
mov
sub
add
sbb
aad
sub
add
stc
adc
add
and
add
daa
xchg
fcomi
or
adcl
xchg
xor
xchg
inc
xor
xor
stos
cs
sub
sbbb
dec
cmp
inc
mov
add
andb
mov
push
icebp
dec
inc
cmp
jae
rorl
fnstenv
dec
int
xchg
out
sti
cltd
fildl
pop
xor
xchg
xchg
xor
lea
data16
cmp
inc
push
ja
cld
ds
outsl
sbb
lcall
adc
mov
rcrl
in
mov
data16
cmp
xor
mov
jg
outsl
and
add
dec
ret
cmpsb
in
sub
sub
adc
in
xchg
add
dec
addr16
xor
lods
sbb
adc
mov
add
push
clc
jb
outsb
add
jge
push
inc
movsl
fnstcw
add
stc
out
xchg
insb
push
stc
push
cmpl
js
pop
roll
add
push
adc
add
out
rcll
xchg
les
push
jl
add
lcall
arpl
dec
pop
ret
dec
xor
pop
fs
inc
xchg
repnz
insl
sbb
aas
adc
inc
cs
arpl
insl
rcl
cmp
add
xchg
rclb
mov
add
loopne
dec
loopne
pop
jmp
xchg
adc
push
das
adc
and
sti
xor
cmp
pop
push
test
movsl
data16
aam
xor
leave
push
ljmp
add
add
xchg
inc
js
mov
and
aam
cld
enter
sar
fsubs
sbb
loope
hlt
mov
mov
cli
icebp
mov
lods
inc
lock
add
lcall
cmc
out
lods
aam
ja
xchg
fnstcw
xchg
shrb
outsl
movsb
add
add
inc
fmulp
mov
hlt
fistpll
lret
add
add
mov
jo
test
adc
fisttpl
jg
popf
aad
rcll
mov
filds
jnp
shlb
dec
xlat
mov
and
mov
mov
add
add
fs
cmpsl
adcl
imul
add
movsl
ss
add
daa
push
add
testb
push
adc
dec
ficomps
jo
repz
pop
or
add
lds
add
movsb
pop
lret
enter
jge
nop
popf
sbb
pushf
xchg
test
ljmp
or
adc
loopne
or
inc
cmp
int3
cmp
and
mov
jg
add
daa
push
sub
aaa
stc
mov
add
or
or
cs
sahf
lock
daa
push
mov
sbb
mov
adc
or
and
imul
cmp
mov
add
testb
add
add
adc
ret
imul
adc
dec
inc
js
imul
cmc
jbe
daa
out
mov
out
adc
andl
add
sub
add
add
pushf
add
push
sub
insb
sub
mov
popa
xor
sub
outsl
daa
or
rolb
inc
sbb
xchg
inc
pop
jg
add
sbb
xor
inc
ss
cmc
repnz
lcall
outsb
movsb
xchg
aad
loope
adc
sbb
stos
jle
fcompl
add
int
sbb
sahf
mov
cmpsl
andl
mov
stc
jne
mov
in
mov
dec
add
add
mov
lock
pop
add
dec
adc
ret
pop
stc
rolb
add
add
xchg
and
das
idivl
lds
pushl
push
adcl
fsubrs
mov
loopne
add
out
add
cmp
mov
loope
mov
mov
ret
add
push
push
sbb
into
mov
rclb
push
sbb
push
jecxz
add
add
or
std
dec
ds
xchg
and
push
test
add
xor
inc
mov
xchg
stc
push
mov
leave
add
out
add
lcall
mov
mov
ja
lods
mov
add
add
fildll
add
mov
add
add
jns
add
popa
add
sub
push
or
add
dec
and
add
add
and
das
es
jl
out
add
add
push
dec
sub
mov
divl
add
shrd
add
xchg
add
cmp
sub
xchg
mov
lods
fistpl
popf
rorb
add
xor
add
inc
add
mov
outsb
out
ljmp
stc
aam
dec
sbb
xchg
adc
add
inc
cltd
es
sbb
mov
loop
cmp
add
pushf
push
add
xchg
sub
and
cmp
andl
aad
inc
add
add
inc
jbe
add
mov
pop
daa
add
add
filds
adc
add
mov
scas
add
add
jg
lret
lret
xor
or
test
jae
mov
xchg
push
mov
pop
sbbl
roll
loop
dec
xlat
stos
stos
mov
inc
xor
push
scas
add
add
adc
jecxz
es
lock
sbb
movsb
pop
add
repz
xor
mov
and
ret
popf
add
sbb
mov
xor
outsl
mov
out
out
xchg
adc
insb
and
cmp
jmp
or
add
mov
add
lcall
add
mov
add
add
call
add
xchg
add
or
add
mov
ret
jp
dec
push
xchg
add
mov
ljmp
sbb
inc
rcrl
add
repnz
test
imul
inc
lods
fwait
arpl
ret
cld
pop
mov
inc
fwait
pop
orl
les
sarl
lret
add
add
clc
shlb
jb
mov
xor
push
add
adc
sub
in
xlat
das
mov
inc
cltd
inc
popf
call
popf
or
add
mov
adc
stos
sub
aam
fists
add
fs
addr16
push
test
push
mov
inc
push
in
xlat
jae
add
fyl2x
stos
test
icebp
dec
cmp
cmp
cmp
adc
cwtl
stc
sub
in
jle
xchg
cmp
pop
stos
dec
insl
xchg
mov
add
add
movsb
jno
add
add
rol
fcomi
sti
add
ljmp
iret
or
lods
jp
aaa
and
sbb
or
lea
std
clc
xor
add
xchg
stos
mov
add
sbb
cltd
ret
sti
mov
cmpsb
push
cmpsb
jno
mov
cmpsb
mov
pop
inc
scas
lahf
jecxz
cmp
push
arpl
dec
pushf
sub
in
arpl
add
adc
xchg
dec
jns
int3
or
mov
ja
mov
add
pop
std
inc
mov
pop
cs
or
xchg
jmp
adc
mull
mov
mov
cmpsl
popa
xchg
pop
jb
pop
add
and
dec
or
clc
jmp
xor
jmp
push
push
pop
pop
pop
mov
push
pop
jnp
lcall
mov
cs
repnz
add
cs
jne
xchg
stc
cmpsl
add
aas
push
les
pop
and
cltd
adc
out
faddl
xchg
pop
cwtl
mov
add
xchg
rcrl
xchg
lea
fwait
xchg
push
jl
bound
xchg
and
minps
xor
lea
adc
add
mov
or
dec
push
xchg
imul
repz
add
add
test
cltd
lds
imul
insl
jle
mov
sbbl
add
add
cs
add
add
sahf
push
xchg
mov
enter
add
mov
pop
dec
xor
out
add
in
jno
mov
aad
out
adcb
sbb
dec
dec
mov
cmc
sahf
in
adc
mov
add
mov
xchg
pop
movsl
xchg
fs
pushf
xchg
leave
pop
loop
mov
mov
out
jae
add
loopne
add
add
cli
fcoml
adc
add
or
stc
flds
adcl
sahf
daa
addb
lret
rclb
in
icebp
mov
js
mov
ja
cmp
adc
xchg
xchg
mov
in
inc
cltd
das
rcr
cltd
mov
add
ja
in
add
ret
adc
pxor
ret
sbbl
inc
stos
fadds
add
shrl
adc
popf
popf
out
mov
fucom
xor
add
add
cmpsl
dec
inc
sbb
xchg
push
outsb
imulb
xor
mov
ret
test
or
jb
divl
cmp
rcrb
dec
add
push
cmp
sub
test
test
mov
fidivs
hlt
push
or
cmpsl
int
das
jmp
aad
inc
push
or
push
bound
data16
out
jnp
divl
jle
inc
sahf
stos
push
jg
dec
gs
fwait
mov
sbb
loopne
jl
jp
cmp
nop
scas
push
push
pop
cmp
sub
cmc
jbe
adc
mov
or
lcall
jg
rcll
dec
add
mov
mov
rcrb
adc
das
rclb
dec
inc
ja
add
sbb
sub
add
bound
mov
call
sahf
enter
fsubs
add
movsl
repnz
or
aam
push
cld
sahf
and
fnsave
outsl
dec
xchg
aaa
aad
arpl
add
jecxz
outsb
push
add
pop
ret
add
add
test
add
adc
pop
add
add
ljmp
inc
dec
push
jbe
and
negl
sbb
add
add
sub
push
add
inc
xor
test
ss
gs
ret
rol
cmp
popf
pop
sbb
and
jnp
fwait
popf
mov
adc
cld
add
add
or
in
sub
into
out
xor
movsb
mov
pop
das
add
add
add
add
mov
push
adc
pop
lods
jecxz
in
pop
sti
ja
repnz
call
add
jp
nop
pushf
mov
mov
testb
xlat
pop
cmpsb
popa
or
lods
sbb
mov
add
cld
imul
stos
pusha
and
das
cmp
lret
test
js
cmpsb
mov
movsl
dec
orb
sbb
sub
imul
cmc
into
and
or
shl
dec
sbb
xchg
aad
push
fidivrs
icebp
or
ss
adc
std
sbb
add
pop
aam
out
insb
add
loope
inc
jae
and
or
lahf
leave
test
imul
paddw
cmp
add
and
jnp
add
loopne
add
add
sbb
push
sbb
push
add
and
lods
roll
add
ret
jne
mov
push
out
fneni(8087
add
add
add
je
out
jg
je
mov
fcmovnu
in
xorl
insb
xor
in
or
dec
jnp
push
into
int3
sbb
cmp
outsb
cs
dec
add
int
push
or
ljmp
push
xor
ret
dec
add
and
movsb
add
jp
mov
push
adcl
daa
sub
jno
test
loopne
mov
add
leave
pop
add
xchg
or
dec
mov
and
pop
mov
add
inc
ja
jge
add
add
cmc
xchg
sbb
mov
jnp
cmc
add
iret
xor
add
push
sub
jno
into
faddl
mov
mov
mov
fsubs
mov
mov
sbb
imul
mov
add
prefetch
add
adc
add
jnp
or
add
fbstp
inc
add
mov
push
add
enter
lret
sub
mov
or
mov
sbbl
dec
cs
popa
adc
or
jg
push
ret
lea
xchg
xchg
daa
pop
subb
cmp
xchg
pop
cltd
add
mov
jb
int3
pop
loopne
insl
std
add
popf
rcrb
in
and
add
sbb
sbb
add
repnz
lret
xchg
mov
out
in
icebp
out
outsb
bound
mov
xorl
jmp
testl
mov
inc
add
pop
push
mov
add
add
add
daa
lods
add
cwtl
jp
push
ds
movsb
outsb
pusha
mov
stos
and
insl
fistps
loope
xor
push
clc
sub
rcr
fwait
xor
dec
mov
and
movsb
cmpsl
dec
mov
jl
ret
outsb
jbe
mov
mov
inc
addl
pop
pop
mov
xor
cmp
leave
adc
add
sub
xor
and
jge
fisttps
adc
push
mov
shl
inc
es
data16
je
xchg
xlat
fsqrt
les
enter
add
std
mov
mov
loop
add
inc
xchg
sti
int
ja
in
or
std
push
add
out
jae
xchg
xchg
scas
sbb
add
mov
popa
mov
adcb
pushf
xchg
jecxz
fisttpll
push
sub
out
push
add
cli
aaa
int
int
enter
mov
movsl
icebp
jmp
push
stc
add
mov
mov
push
xor
lds
repnz
push
mov
mov
fstl
or
loope
lods
jo
insl
movl
add
dec
xchg
add
pop
in
lds
ja
cmp
lret
or
add
movb
and
push
dec
dec
outsl
gs
sbb
or
or
pop
cmp
and
mov
push
or
mov
ljmp
mov
ljmp
outsl
xchg
sbb
insl
nop
sub
int3
cmc
mov
ret
dec
mov
adc
fadds
ljmp
pop
jg
sti
sub
repnz
push
ss
mov
pop
adc
ret
jecxz
mov
adc
add
fsubrl
inc
or
mov
imul
xchg
imul
lea
int3
push
and
mov
mov
mov
dec
sub
pop
and
daa
jbe
push
loop
xor
add
push
stos
push
mov
mull
push
inc
hlt
and
pop
ret
jecxz
jno
add
mov
inc
mov
adc
mov
xchg
push
insl
mov
mov
popa
sbb
mov
pop
in
mov
jecxz
pop
pop
sub
int3
out
inc
imul
js
xchg
in
xchg
decl
cmp
add
and
and
xchg
lods
leave
or
leave
sbb
cli
in
iret
lock
outsl
fdivrs
add
jbe
scas
xor
movsl
add
loopne
jle
add
sbb
add
divl
push
mov
dec
loopne
mov
add
cmp
fwait
inc
out
ljmp
add
xchg
jbe
add
lods
pop
mov
cmc
fiaddl
add
les
stc
icebp
imul
adc
add
add
sbb
add
ret
jge
pushf
sub
mov
hlt
add
mov
pop
mov
cmp
jecxz
xor
mov
mov
mov
or
pusha
fnsave
inc
xchg
add
je
add
push
in
push
push
enter
pop
or
cmp
popf
lret
loope
cltd
adc
enter
in
dec
cmp
pop
cmpsl
pop
pop
mov
pop
cmp
repnz
cs
mov
mov
add
mov
mov
loopne
inc
add
add
pop
subl
or
aaa
xlat
js
inc
add
dec
and
jo
inc
add
sub
mov
and
cmp
lds
jmp
pushf
jbe
xchg
mov
aad
test
add
inc
xor
adc
aad
add
test
cli
mov
sub
add
movsb
or
lods
addr16
push
xchg
pcmpeqb
fbstp
add
add
mov
sub
add
dec
fucomp
test
pop
pop
gs
cld
mov
mov
leave
sbb
add
lahf
repnz
pop
push
adc
cmpsl
adc
lret
shl
sub
rcll
xchg
pop
and
mov
das
add
xchg
repz
jnp
push
xor
push
and
sub
pop
adc
in
nop
or
add
lret
pop
and
lret
ss
clc
xor
insb
xlat
mov
xor
add
or
add
push
leave
add
cwtl
add
loopne
icebp
add
les
add
out
sbb
jb
mov
cs
mov
lea
sahf
lock
sbb
add
pop
stos
gs
jnp
add
add
lcall
pop
pop
adcb
add
jns
fnstenv
xor
add
sbb
inc
xchg
add
add
push
popf
jp
add
test
push
in
sub
fidivrl
jge
ror
incb
add
loop
xchg
push
insb
add
add
and
popl
add
xor
aaa
jns
inc
cmc
call
pushf
les
push
rclb
xor
or
mov
insb
sub
faddl
add
cmp
push
outsl
and
mov
std
inc
add
idivb
les
lcall
pop
cmp
jbe
add
mov
es
dec
mov
mov
test
leave
inc
ret
adc
add
add
ds
add
mov
leave
cs
and
add
push
lahf
in
and
add
in
orl
fsts
daa
ljmp
add
enter
sbb
ja
xorl
rcrl
cwtl
sub
dec
int
xor
sbb
dec
add
mov
icebp
mov
std
and
push
aaa
es
ljmp
out
das
mov
xchg
sbb
arpl
mov
test
dec
mov
dec
mov
out
sub
xchg
mov
mov
push
clc
clc
icebp
mov
adc
shl
and
shl
dec
nop
xchg
mov
jl
add
pop
jnp
es
sub
add
hlt
ss
out
xor
or
aam
dec
sub
jmp
push
lea
data16
shlb
cmp
add
es
leave
das
add
xorl
flds
add
stos
ret
inc
xchg
push
das
ret
xchg
mov
push
sbb
sbb
cmp
inc
mov
cmp
into
mov
lock
jo
out
add
push
sbb
xchg
popa
dec
adc
out
adc
ficoms
add
repz
int
cmpsb
or
jns
in
pop
pushf
stc
jnp
roll
add
sub
jbe
jb
mov
shrb
sbbl
fcmovb
gs
fwait
int3
das
or
xchg
ds
add
cli
outsl
add
into
and
int3
jbe
add
ja
add
inc
sbb
add
inc
or
lret
jmp
add
in
popa
jecxz
shld
ds
xor
or
cmc
add
push
add
sub
add
js
stos
or
sbb
not
jne
in
fisubs
scas
cmpl
push
cmp
sbb
inc
dec
es
in
and
fnsave
imul
popa
gs
cmpsl
fs
pop
ljmp
add
pop
jecxz
add
pusha
cmp
bound
mov
xor
mov
leave
mov
mov
lahf
adc
cmc
movb
cltd
cmp
addl
add
add
add
mov
icebp
push
and
add
ror
and
movsl
arpl
mov
jp
jmp
or
cmpsb
xchg
popf
push
push
pop
imul
arpl
add
push
xor
fistps
pop
cmpb
add
push
roll
inc
aas
mov
sub
lock
pusha
scas
outsl
movsl
sub
test
mov
ret
aam
movsb
push
xor
lahf
dec
xlat
aas
xchg
mov
mov
imul
sbb
rcrl
roll
scas
pop
jae
xlat
mov
flds
add
inc
push
iret
add
xor
fwait
pushf
mov
enter
add
loop
add
add
outsl
roll
add
icebp
lret
rcrb
dec
mov
out
cli
fwait
add
in
imul
push
xor
call
jo
add
pop
shrl
sbb
inc
decb
jl
loopne
adc
sbb
sbb
mov
jp
add
add
add
and
sub
popl
lret
mov
test
add
add
addr16
cmpsb
daa
lods
jl
mov
loope
add
jb
add
mov
lea
cmp
jg
sub
xchg
outsb
std
ds
add
andb
jae
and
adc
ret
cmp
sub
mov
dec
clc
pusha
xlat
js
xchg
adcl
add
add
mov
iret
into
pushf
mov
add
inc
xchg
call
aad
test
jle
jo
jne
cmp
xchg
mov
pop
mov
xor
push
sbb
iret
pop
push
shlb
pushf
add
add
test
out
push
popf
mov
call
sub
xchg
sbb
fwait
in
adc
cmpl
add
dec
dec
jecxz
sti
ljmp
adc
int3
gs
lret
pushf
fwait
push
lret
insb
push
jnp
sbb
xor
into
inc
pop
pop
or
mov
mov
and
popf
test
out
clc
push
inc
pop
mov
pop
add
add
pushf
sti
add
add
test
and
lock
sbb
jbe
xor
daa
std
dec
fcoml
call
scas
std
sahf
push
mov
cltd
mov
lods
jecxz
pop
mov
sbb
mov
movsl
add
lcall
iret
dec
push
scas
mov
movsl
xor
adc
int3
daa
insl
pop
movsl
sbb
jne
in
and
add
jl
stos
mov
loop
mov
push
sub
dec
rorl
add
mov
xor
es
sbb
xor
adc
pop
scas
incb
add
cld
rorb
cmp
push
xor
sub
jnp
add
add
mov
inc
fildl
sub
jl
ljmp
add
sub
or
js
shll
push
shll
add
ret
int
jge
mov
add
mov
icebp
jb
lahf
pop
xor
dec
out
sub
push
cltd
jecxz
out
imul
dec
in
cmp
ret
jnp
icebp
setp
adc
and
in
push
mov
movsl
iret
sahf
push
mov
add
push
push
jecxz
jno
add
mov
add
repz
mov
btr
xor
aaa
cmpl
add
jbe
nop
mov
mov
jnp
mov
add
aaa
add
inc
mov
or
and
or
or
add
mov
rcll
and
xor
xor
push
out
sahf
mov
add
mov
adc
ud1
dec
icebp
adc
push
jbe
jg
push
add
scas
int
nop
push
add
sahf
outsl
mov
xchg
jg
insb
mov
jl
mov
hlt
xchg
push
xorb
sbb
jo
loope
mov
je
push
mov
adc
jecxz
add
sub
or
mov
add
shr
call
add
add
jmp
add
fwait
negl
pop
cmp
add
jns
jnp
test
insb
jb
jecxz
add
pop
mov
in
aas
aaa
dec
jecxz
fs
add
add
push
mov
mov
or
mov
jmp
or
lahf
pop
fisubs
lea
inc
imull
mov
adc
test
out
jns
cmp
cmp
mov
aas
test
lret
imul
inc
add
add
mov
fistpl
sbb
imul
xchg
aas
cmpsb
jp
add
add
xchg
xchg
push
in
pushf
jmp
popf
dec
inc
ds
mov
popf
fidivs
fdivl
lret
dec
mov
ss
jbe
and
add
loope
push
add
pop
xor
sub
push
push
data16
cmpb
sub
add
cmp
out
sahf
lock
imul
div
cmpsb
add
lock
les
mov
ss
arpl
xor
mov
sahf
cmpsl
inc
pop
das
add
add
cltd
adc
loope
add
pop
lock
sbb
mov
ret
stos
fiadds
adc
pop
sub
dec
add
mov
cmp
mov
jp
add
add
add
pusha
fdivl
add
neg
add
movsb
mov
aaa
scas
inc
lea
add
add
jne
add
pop
sub
pop
sbb
dec
mov
ret
in
xlat
lcall
mov
add
and
je
dec
pop
sub
dec
movsb
fcoml
stc
jo
fs
sbb
loope
inc
xchg
sbb
add
cmc
jnp
imul
sti
add
add
xor
sub
mov
push
and
insb
xchg
loopne
xchg
sub
pop
mov
and
cmp
lds
adc
mov
mov
cltd
sub
push
fsubl
add
xchg
shl
outsb
popa
nop
dec
sub
fldenv
xchg
shrl
or
sbb
stc
xchg
sbb
testl
jne
push
loopne
ljmp
and
dec
lahf
pop
ljmp
xchg
mov
add
out
push
ja
in
repnz
mov
pop
dec
movsl
mov
lret
cmp
loopne
jae
pop
test
ror
push
and
popf
popa
loope
cmc
iret
jb
sbb
ljmp
jno
insb
gs
add
jne
enter
push
add
add
inc
jne
mov
xor
push
aas
add
add
pop
pop
enter
mov
test
test
or
ret
jbe
push
subl
popl
jg
mov
inc
add
es
cmp
cmp
xor
push
jbe
fs
add
movsb
add
movsb
and
push
mov
and
add
add
add
out
les
add
add
shlb
fdivrs
roll
cltd
push
inc
mov
mov
fisubrl
aas
push
sbb
add
jl
lret
fdivr
xchg
push
jge
inc
adc
scas
push
jne
repz
or
add
jp
popf
cmp
int
jge
sub
push
sbb
and
add
jle
sub
dec
movsl
jo
cli
add
enter
sub
adc
add
adc
push
push
outsl
jbe
repnz
imul
movb
cmp
mov
cmp
mov
pop
out
ret
lahf
and
cmp
pop
sbb
push
repz
xchg
add
pop
mov
mov
fldcw
fmuls
fadd
or
lahf
pop
mov
in
repz
jmp
xchg
cmp
sarb
or
adc
out
std
ja
cmp
add
inc
lcall
add
jecxz
add
sub
inc
jg
call
xor
jnp
iret
test
sbb
std
movsb
iret
or
adc
inc
add
and
jmp
gs
jo
add
ljmp
xor
cmp
inc
jmp
lds
mov
inc
xchg
test
xlat
bound
xorl
das
xor
cmp
mov
add
std
lahf
insl
xchg
push
add
add
jnp
or
dec
imul
cmp
outsb
push
inc
dec
add
jg
rcl
lahf
pop
cli
add
ret
xor
fisttpll
call
and
mov
add
jmp
addl
add
test
add
add
testl
sbb
inc
dec
mov
movsl
sub
push
inc
add
sub
xchg
aaa
in
addr16
add
adc
xchg
xor
pop
addl
xlat
in
add
pushf
jno,pn
je
add
push
add
lret
mov
cmpb
add
lahf
dec
fwait
clc
cmp
add
cs
mov
push
jne
cmp
ja
and
mov
out
lods
sbb
mov
fiadds
out
mov
test
scas
int3
fs
repz
add
dec
ret
push
or
rolb
testl
push
int3
add
daa
xchg
cwtl
insl
jno
mov
add
aas
js
add
add
cmpsl
pop
repnz
rolb
jns
add
sbb
cli
add
fildl
sub
mov
add
xchg
out
or
add
mov
add
add
add
push
xor
add
adc
jns
add
jge
jmp
pop
out
adc
filds
addb
add
sbb
lret
inc
sub
jmp
add
loop
bound
push
dec
outsb
or
in
cmc
and
stos
mov
fisubrs
jl
add
int
push
dec
andl
arpl
dec
dec
push
add
sub
xchg
jle
and
pop
xor
mov
jecxz
es
gs
ret
xchg
mov
push
ret
add
add
jl
repnz
mov
fildl
add
shlb
arpl
inc
loopne
push
add
mov
jne
dec
pop
dec
fstps
in
inc
addl
push
lds
mov
aas
inc
testl
cmpsl
std
aam
iret
out
out
out
pushf
xchg
in
mov
popa
cmp
jbe
jns
cmp
sbb
or
out
sbb
out
add
loop
push
mov
fwait
or
mov
mov
cmpsl
and
adc
repnz
test
cld
push
add
add
sub
jo
pop
cld
stos
out
ja
add
addb
adc
xchg
icebp
lea
mov
scas
sub
jecxz
cmpb
outsl
inc
pop
mov
jl
loopne
data16
in
mov
jge
cmp
cmp
mov
and
add
lret
lock
ret
shl
adc
cmp
cmp
addl
add
add
fisubrs
sbbb
pop
push
add
pop
outsl
add
mov
out
adc
push
nop
pop
xor
fcmovb
inc
pushf
add
lods
cmpsb
hlt
mov
les
dec
clc
jne
or
mov
aaa
mov
add
add
jo
in
inc
fldenv
and
outsb
insb
mov
sub
mov
dec
or
ret
jo
iret
movsl
loop
or
popa
inc
pop
jecxz
add
add
jnp
adc
pushf
push
adc
loop
add
mov
loopne
mov
lret
adc
sbb
mov
pop
stos
add
gs
xorl
add
mov
mov
sub
mov
mov
or
push
gs
xor
mov
gs
mov
movsl
cmpsl
push
push
mov
js
adc
mov
addb
pop
imul
push
loope
divl
inc
sbb
mov
adc
cwtl
out
loope
add
xlat
sub
sbb
cmp
push
xor
stos
mov
xor
pop
test
mov
mov
repz
mov
or
mov
mov
test
cmc
mov
add
add
pop
add
add
sbb
jb
aam
adc
push
adc
pop
mov
sbb
pop
mov
outsb
into
cmp
cmpsl
pop
push
test
add
mov
sbb
mov
xchg
jmp
push
daa
xchg
sbb
in
and
fsubrl
jae
pop
mov
cmpl
jecxz
ds
cs
xchg
sahf
int
xchg
jnp
push
movl
test
fwait
push
sahf
fcomps
popa
push
out
cmpsb
clc
das
stos
cmp
rcr
repz
int
push
adc
mov
pop
mov
add
cmp
push
xlat
sub
loopne
xchg
sahf
cld
bound
fisubs
jecxz
repnz
ror
sbb
ficompl
cmpb
rorb
add
mov
cwtl
fsubr
add
mov
repz
lock
dec
adc
fisubl
mov
ret
inc
rclb
repnz
out
insb
fwait
movsl
sarb
leave
add
xchg
stos
mov
inc
xor
out
push
cmpsl
call
add
xchg
int3
sbb
cmp
in
add
add
xchg
inc
mov
add
fcompl
push
call
add
js
jo
jns
aaa
mov
call
push
js
pop
mov
dec
or
sub
pop
jp
mov
movsl
sub
into
jle
mov
cld
mov
icebp
mov
inc
sbb
shll
fbstp
xlat
xchg
adc
mov
loop
scas
fsubrs
dec
data16
scas
int
push
sbb
jae
aad
int
mov
aam
cmp
in
or
popa
loopne
je
in
add
ret
adc
sbb
mov
aam
push
lcall
outsb
call
jb
add
and
sbb
ret
xchg
jg
repnz
lock
lahf
push
pop
and
inc
out
mov
push
movsb
jb
mov
lret
lret
lods
out
sbb
push
mov
repnz
xor
pop
andl
test
pop
xor
add
add
add
jns
jle
and
add
cmpsb
aas
dec
jle
pop
push
popa
jnp
arpl
out
jecxz
loop
add
add
clc
add
add
scas
jle
icebp
dec
jp
mov
mov
imul
movsl
jnp
sbb
shrb
pop
cmpsl
mov
call
add
loop
push
add
dec
daa
ficoms
les
add
push
pushf
imul
push
jo
dec
add
add
je
js
cmp
movsb
mov
sub
add
add
imulb
add
bound
sarb
adc
iret
dec
add
add
pop
aad
push
add
sub
add
jp
jecxz
andl
xorl
and
dec
rcl
imul
pop
das
xchg
aam
inc
out
inc
xor
add
jnp
daa
add
add
cmpl
jo
inc
out
int3
mov
jge
push
adc
xor
lret
mov
mov
add
test
lahf
notl
or
into
mov
pushl
or
adc
loope
out
mov
add
int3
out
jle,pn
loop
mov
cmp
mov
dec
cmp
xchg
sub
fsubs
jno
xchg
pop
xchg
sbb
loop
popa
stc
add
add
mov
add
xchg
inc
call
cmc
lock
add
add
add
cli
lcall
inc
icebp
lods
sbb
inc
outsb
or
fwait
xlat
mov
out
add
sahf
sub
sub
hlt
adc
cmp
std
mov
jge
add
shlb
jg
push
and
cmp
lea
add
leave
mov
lea
add
lcall
jg
mov
test
addb
cmp
and
adc
push
movl
and
push
sti
sbb
pushf
add
add
mov
lahf
mov
dec
les
add
add
mov
mul
add
add
xor
repnz
add
lock
add
add
addr16
sbb
fcomps
xorl
sbb
int
scas
sahf
movsl
mov
outsl
or
loope
push
push
mov
push
jae
and
push
push
pop
ljmp
lea
mov
xchg
js
stc
jns
push
add
roll
fwait
aaa
leave
mov
xorb
adc
add
aaa
push
mov
sbb
xlat
int
data16
add
cmc
fimuls
rorb
add
cmc
jge
lcall
sub
adc
add
add
clc
movsl
and
xchg
inc
lahf
in
pop
shr
inc
jg
call
decl
loop
inc
mov
lea
dec
and
pop
add
xchg
xchg
add
or
add
push
cs
mov
hlt
insl
aaa
sbb
sub
pop
sub
test
add
add
xor
add
push
and
lods
mov
cmp
add
sbb
xorb
rcll
lret
pop
js
add
mov
xor
inc
dec
pop
ret
pop
cwtl
sub
dec
mov
in
mov
shlb
fsts
or
andb
xor
push
insb
jge
push
int3
mov
inc
add
jle
xchg
xor
pop
add
pop
pop
add
and
mov
popa
mov
push
jb
rcrb
add
test
adc
cmp
pop
sahf
adc
push
push
scas
push
xor
cmp
test
cmpsb
sbb
ljmp
leave
ljmp
xchg
xchg
jnp
or
test
cmp
aas
inc
mov
mov
call
cs
xchg
loop
arpl
jno
dec
fstl
dec
les
stc
cmp
into
mov
xor
add
repz
add
and
adc
js
roll
test
bnd
aas
xchg
into
lods
jae
sbb
rcll
mov
test
loopne
fcmovbe
test
push
pop
and
mov
mov
add
xchg
lahf
jge
adc
pop
daa
or
jecxz
adc
jge
add
in
nop
out
push
or
inc
popa
jmp
jae
dec
add
jl
int
lahf
test
add
add
call
fstp
lock
rorb
pop
hlt
mov
loop
mov
add
add
add
stos
add
into
dec
jmp
test
add
adc
or
jae
popfw
roll
outsl
add
add
stc
xchg
jge
add
add
xchg
shr
push
push
into
pop
jb
test
ljmp
test
or
xor
std
inc
adcw
mov
aad
pop
push
jns
xor
enter
cwtl
inc
add
ret
pop
inc
fstpl
cmp
add
fs
pop
sbb
out
add
pushf
xchg
sub
fiadds
mov
inc
mov
inc
enter
mov
add
into
add
leave
icebp
xchg
xchg
lds
std
push
into
xlat
dec
push
jb
mov
sub
ss
jge
lretw
adc
gs
dec
bound
push
filds
jle
pushf
sub
outsb
lret
imulb
inc
test
lret
add
stc
call
push
mov
pop
movsb
add
int3
sub
out
add
mov
inc
aam
mov
jp
fstpl
pop
jne
add
jp
insl
insb
sbb
and
xor
and
add
add
add
add
sbb
cmp
les
inc
ret
add
ja
sub
mov
xchg
pop
dec
pop
ljmp
divb
arpl
push
push
cmp
je
or
sub
xchg
fiadds
dec
mov
aaa
into
cltd
enter
lock
mov
mov
sub
adc
fs
pushf
or
pop
mov
testl
sbb
add
add
jns
aas
add
and
fdecstp
or
leave
data16
mov
xchg
stc
xchg
jmp
mov
pop
sarl
aad
cwtl
jbe
movsb
lock
scas
lock
sub
add
add
loope
daa
fisubrl
or
add
ljmp
data16
push
paddsw
pop
sbb
sub
dec
divb
push
fmull
mov
fcmovb
dec
and
sub
mov
cmp
fisubrl
push
ds
mov
add
add
and
push
and
lods
mov
sub
xor
sub
ja
add
or
dec
in
adc
outsb
js
fdecstp
leave
cmp
scas
jae
add
aam
add
cmp
fdivrl
cmpsb
int3
aas
addr16
jbe
aas
loope
into
cmp
mov
addr16
add
add
mov
pusha
xchg
nop
mov
fsub
lock
incl
cli
clc
dec
and
fiaddl
lock
testl
add
fildl
dec
lea
sbb
dec
mov
js
call
lock
jno
imul
loop
mov
in
xchg
out
das
sahf
mov
push
add
pop
fldt
aam
xchg
pop
mov
out
mov
ret
ficoml
test
xor
and
add
xor
mov
pop
nop
cli
and
in
dec
jmp
popf
add
pop
add
ss
add
imul
mov
add
sbb
mov
movntps
cmp
cltd
fcompl
mov
sub
clc
scas
out
cmpb
enter
cs
mov
and
ds
lret
mov
add
shll
sub
xchg
add
add
pop
cmp
xchg
add
mov
pop
push
adc
mov
xchg
fistps
rorb
in
divl
mov
xchg
mov
call
call
sub
and
mov
mov
cmpsb
rcl
stos
add
add
xor
jl
rcll
mov
jo
stos
jp
jb
sub
mov
es
add
test
xlat
ss
iret
addb
sbb
xchg
sahf
xchg
add
add
addr16
jg
xchg
add
mov
lock
cli
add
inc
add
mov
les
xor
add
les
sub
adc
fbld
xchg
fistl
push
cmp
xorl
mov
or
mov
xchg
xchg
test
outsl
adc
dec
pop
dec
negb
sbb
dec
xor
mov
movb
jge
adc
cmp
mov
cltd
fdivrl
dec
fwait
clc
cmp
mov
jp
cmp
xor
divb
call
out
int3
add
repz
mov
jnp
add
dec
incl
push
pusha
xchg
scas
push
fiaddl
jmp
cs
int3
cmp
sbb
jecxz
loope
imul
cmp
add
push
cmp
sbb
jns
jnp
xchg
mov
jbe
jne
jb
sbb
add
add
lds
add
das
jae
sub
add
mov
cmp
adc
sub
sub
or
pop
and
xchg
mov
jmp
loop
sahf
and
or
sbb
inc
cmpsb
mov
adc
pop
outsb
lock
jmp
pop
hlt
ds
mov
fwait
dec
ja
loop
and
dec
push
stos
popa
out
cmp
or
pushf
test
xchg
mov
add
add
mov
xchg
xor
popa
gs
out
adc
rolb
mov
add
jp
mov
and
cmp
rclb
loopne
add
std
push
pop
mov
cmpsl
cs
je
shll
jo
and
popl
add
fistl
imul
add
xor
add
mov
cmpsl
sbb
add
int
and
ror
adc
shl
mov
test
mov
push
jbe
nop
pop
add
add
xor
add
push
push
test
les
sbb
add
sub
movl
dec
pusha
loop
cli
out
dec
mov
and
adc
add
add
iret
push
repnz
inc
add
pop
cltd
aaa
xchg
push
sub
add
cld
shll
add
incb
dec
test
popl
add
inc
lcall
xor
xor
cmpsl
and
and
cmovb
add
lahf
mov
add
lea
add
lods
xor
jbe
xor
xchg
push
stos
xchg
je
movsb
lret
out
cmp
add
add
in
rcll
pop
inc
sub
add
scas
jecxz
test
xchg
adc
sbb
mov
lcall
test
or
add
cwtl
shl
pusha
inc
add
dec
jbe
repz
jg
fadds
add
mov
mov
les
mov
pop
jo
outsl
inc
add
mov
cmp
add
ja
pop
imul
pop
sti
mov
or
add
sub
popf
add
arpl
pop
sub
add
cmpsb
sbbl
push
hlt
push
repz
sub
pop
test
ljmp
mov
inc
fsts
pushf
xor
aad
sub
jle
fadds
dec
pop
jne
testl
fcom
cwtl
in
inc
jbe
mov
and
stos
add
add
in
call
movsl
mov
sbb
loope
or
push
mov
jmp
popa
lret
fadds
and
add
int3
xchg
adc
cmp
daa
ret
add
into
mov
jbe
push
mov
imul
sbb
gs
lea
cmp
inc
pushf
and
xchg
push
mov
xor
ret
adc
mov
dec
and
shlb
int3
add
hlt
xor
add
add
mov
add
jae
sbb
mov
idivl
loopne
into
adc
mov
add
xor
add
and
dec
dec
push
sbb
add
scas
xor
jnp
jb
call
cmpsb
add
dec
into
add
fstpt
add
fwait
cmc
add
adc
or
add
add
push
into
jns
mov
mov
xor
lods
add
add
data16
ds
xchg
inc
cmp
mov
sahf
std
push
pushf
sbb
div
jmp
popf
add
cmp
add
iret
cmovbe
mov
add
adc
popa
test
mov
dec
dec
pusha
or
dec
push
add
enter
sub
sub
ja
push
int3
gs
dec
ljmp
imul
je
sbb
lahf
add
ror
adc
pushf
xor
fistps
pop
sub
xor
hlt
or
add
js
rolb
mov
loop
test
data16
pushf
lahf
dec
xor
mov
push
jmp
and
xchg
xchg
sahf
icebp
gs
ja
test
roll
lcall
loopne
or
pop
dec
mov
jb
xor
pop
das
inc
lea
xchg
or
cmpsb
ds
into
fs
hlt
or
pop
outsl
add
sub
loop
cwtl
pop
pop
pop
mov
add
add
push
or
nop
scas
push
bound
sub
cs
dec
int3
je
lds
inc
daa
loopne
loopne
outsl
repz
jno
jg
je
movaps
mov
cli
cmpsl
pushf
movsb
das
push
push
or
push
and
and
mov
xor
pop
or
or
movsb
pusha
ret
adc
negl
inc
add
jbe
cli
dec
xor
inc
leave
lea
ret
call
mov
adcl
xchg
imul
sub
push
pop
cmp
pop
sub
mov
cmp
dec
in
cmp
push
cmpsl
mov
iret
inc
sbb
xchg
jae
lcall
lret
sbb
les
add
add
in
test
add
add
mov
in
cmp
lcall
sub
inc
daa
mov
ss
jl
add
pop
add
or
mov
xchg
inc
xlat
dec
mov
jae
les
adc
aas
mov
ret
push
and
in
mov
jg
cmc
sbb
add
ret
mov
lcall
pop
jnp
movsb
or
mov
add
add
loopne
add
mov
xor
add
ljmp
add
bound
mov
add
pusha
xchg
inc
in
mov
jae
pop
add
jb
das
das
sahf
add
push
imul
cld
mov
pop
shlb
dec
xchg
mov
push
loopne
push
add
jb
into
mov
fistpl
fisttpl
xchg
mov
pop
and
mov
xchg
sub
in
pop
out
mov
cwtl
outsl
xchg
add
lret
adc
int3
lahf
sub
loope
push
push
xchg
das
sbb
mov
imul
lcall
push
andl
in
or
inc
fldl
dec
jo
gs
cmpsb
int3
out
in
rorl
add
jle
lea
xlat
sub
push
imul
out
movsl
int3
adc
mov
pop
and
dec
and
imull
inc
inc
pop
jne
cwtl
xchg
push
add
cmpsb
and
xchg
mov
push
dec
repnz
imul
jle
add
fildl
and
inc
push
shr
push
sbb
add
add
add
daa
cmc
or
mov
adc
adc
aam
lret
ret
and
das
movl
je
or
jge
sub
dec
pusha
nop
push
add
stc
sbb
push
popa
sahf
scas
shll
cmp
enter
loopne
add
dec
cld
and
pop
or
push
lods
nop
insb
add
daa
mov
push
stc
and
pop
test
mov
popf
cli
sbb
in
mov
xchg
inc
xor
push
xchg
xchg
xchg
cwtl
movsb
ret
xchg
or
add
xor
lods
cmp
imul
orl
xchg
into
pop
sub
mov
pop
mov
sub
aaa
xchg
sbb
jg
dec
imul
pop
and
outsb
imull
sub
add
pop
fisubs
js
or
and
pop
jne
hlt
adc
push
mov
adc
mov
pop
cmp
mov
jnp
inc
fwait
add
fs
fs
jmp
cmp
enter
xchg
andl
mov
dec
fisubs
in
cmp
mov
add
dec
mov
cmp
jle
xchg
add
xchg
insl
jp
ss
mov
add
les
test
imul
je
cmp
pushf
sbb
adc
cld
scas
mov
aaa
pop
dec
add
pop
pop
push
shlb
hlt
stos
aaa
inc
ss
xchg
repnz
loopne
cs
test
jno
call
scas
test
add
shlb
jbe
jns
mov
sbb
data16
push
pop
shlb
pop
stos
pop
fsubrl
jg
add
push
xor
aaa
jns
and
push
mov
jmp
pop
xchg
jp
jmp
js
add
mov
add
add
rolb
jae
jmp
lock
add
and
sbb
cwtl
in
lds
in
xchg
cmp
adcl
aas
fisubl
xchg
mov
mov
into
inc
test
cli
fwait
add
aam
push
and
pop
xor
leave
add
add
push
or
call
add
or
adc
mov
cmp
cli
and
add
hlt
push
andl
int3
lahf
dec
aam
add
or
mov
sub
add
xor
pop
xor
addr16
aad
sub
pusha
mov
or
sbb
fisubs
call
add
add
jno
add
add
push
ficomps
and
add
add
popa
outsb
sub
xchg
call
loope
add
adc
shrb
subb
and
adc
add
dec
clc
stos
pop
xchg
mov
xlat
test
add
cmpsb
push
pop
cmc
sub
sbb
clc
icebp
mov
push
sub
mov
adc
scas
repz
xor
test
add
aaa
mov
pop
push
test
or
pop
dec
xchg
jb
shr
xchg
sbb
add
add
clc
dec
outsb
lcall
add
mov
add
mov
push
adc
cmp
mov
sub
cwtl
mov
jb
add
add
in
mov
add
pop
mov
mov
add
mov
cli
roll
mov
mov
adc
ja
les
add
add
dec
or
add
addr16
mull
push
and
lods
mov
sbb
in
mov
pop
stc
jmp
add
int3
rclb
xchg
inc
add
push
sub
add
loopne
push
add
add
mov
ljmp
addl
xchg
xchg
sbb
xchg
add
jns
xchg
or
ljmp
repnz
jp
dec
mov
mov
add
int3
rolb
add
loopne
adc
add
sbb
xchg
shr
add
loopne
dec
or
pop
add
inc
xor
lahf
add
lods
pushw
dec
fsub
cli
push
adc
mov
mov
lret
ret
inc
adc
add
cli
jle
js
loop
mov
mov
and
add
cmp
hlt
dec
pop
mov
repnz
mov
test
and
pop
xchg
adc
fiaddl
xchg
pop
mov
jo
mov
jae
imul
mov
cmp
dec
inc
cltd
xchg
mul
mov
lret
jnp
ja
lret
loope
xchg
lock
testl
add
ds
push
sahf
movsl
mov
fcomi
nop
in
stos
add
fucomp
hlt
hlt
xchg
ret
add
les
mov
ja
sub
fwait
push
mov
jecxz
add
adc
and
pop
mov
mov
sbb
std
sub
sub
hlt
gs
aaa
pop
jecxz
out
aam
rcrl
mov
mov
daa
xor
jae
in
add
push
push
mov
push
or
addr16
xor
stc
and
add
mov
sahf
cltd
sub
lcall
inc
sbb
jo
lods
mov
add
mov
xchg
mov
inc
mov
int3
add
clc
push
fists
outsl
nop
mov
mov
mov
sub
jp
cld
cli
inc
lea
std
call
movsb
sub
add
xchg
mov
add
sbb
sub
lea
pop
mov
jno
push
sub
pop
add
add
cmpsl
jno
xchg
loop
jle
sahf
xor
daa
and
movsl
dec
addl
xchg
outsl
xchg
dec
dec
cmp
push
add
lods
xchg
add
js
push
out
ja
pop
jnp
out
addl
iret
adc
add
add
add
in
add
push
bswap
cmpsb
decb
fwait
sbb
cltd
leave
lock
daa
not
add
mov
pop
fs
push
sub
test
neg
out
aam
cltd
jmp
inc
jmp
and
dec
sub
xchg
cmp
test
insl
int3
std
aas
ret
daa
sbb
jl
dec
jmp
cmp
add
incl
mov
dec
lret
in
sub
sahf
mov
inc
push
mov
sub
add
cmpsl
xor
aas
sarl
sub
fmull
loopne
leave
add
add
add
bound
mov
lods
xorl
add
pushf
or
lahf
imul
lcall
add
add
lahf
or
es
adc
roll
aam
add
pop
daa
add
add
test
jecxz
jmp
add
mov
clc
cwtl
out
rolb
mov
push
adc
idiv
ljmp
xchg
hlt
jne
cmp
and
push
xchg
add
push
xor
push
insl
xor
popf
add
add
inc
xchg
push
int3
adc
pop
pop
mov
ljmp
inc
or
inc
cmc
lock
shlb
push
lea
std
or
mov
add
rolb
adcb
fsts
add
ret
xchg
add
ja
sub
aaa
daa
sbb
and
mov
dec
cwtl
cmpl
add
add
popa
and
cmovo
add
hlt
adc
das
lds
bound
add
icebp
adc
cmc
mov
add
add
cmp
or
push
adc
dec
inc
pushw
insl
push
jg
js
leave
add
add
add
dec
jge
lods
movsl
add
xchg
jge
add
add
add
test
gs
popl
dec
add
add
jg
in
pop
lret
sub
fs
and
mov
pop
testb
sbb
es
add
xchg
add
inc
addl
dec
jo
add
jmp
add
sub
add
inc
call
add
ret
aad
add
js
add
icebp
add
addb
add
in
add
lret
add
pusha
dec
add
sub
add
mov
add
dec
lea
add
add
jne
add
stos
movsb
add
rorb
add
add
jnp
add
add
add
add
pusha
sbb
add
xchg
add
sbb
add
add
lds
add
pop
add
pop
adc
add
std
add
jp
add
and
add
or
add
in
mov
add
sbb
add
jno
add
cltd
or
add
sub
add
sldt
inc
in
add
add
icebp
xchg
add
lahf
add
pop
roll
test
nop
add
lret
dec
add
cmp
add
cmc
test
add
in
add
jae
add
push
xor
add
add
and
iret
add
shl
add
and
add
shll
add
mov
dec
add
ret
repz
mov
add
es
push
loope
add
pop
add
fisttpl
add
add
add
add
and
add
add
xchg
add
sub
add
add
add
dec
movsb
add
lds
add
xchg
add
add
add
rolb
add
sbb
add
or
add
or
add
or
add
add
mov
add
xchg
add
add
dec
xchg
add
adc
add
js
add
jo
add
test
add
inc
lret
add
and
add
and
add
add
add
add
pop
inc
xchg
scas
add
sub
popf
add
insb
add
add
add
xchg
add
lea
imul
push
add
add
add
jle
stos
lods
stos
xor
add
lds
adc
add
add
add
sbb
add
pop
movsb
movsl
pop
inc
loop
ljmp
fdivr
add
mov
add
add
imul
xor
add
add
add
sub
add
mov
bound
mov
cmp
inc
pop
xchg
sub
add
leave
mov
fwait
jne
sbbb
sbb
leave
sub
ret
add
add
je
cmp
pop
leave
outsl
cmpsl
fisttpll
add
jecxz
add
xchg
or
or
dec
ja
add
cmp
sbb
and
inc
cli
data16
add
add
and
inc
rcrb
out
xlat
mov
aad
pop
and
xchg
lods
pop
jne
xor
pop
in
sbb
xor
sbb
add
add
or
push
out
nopl
in
cmp
loope
mulb
xchg
pop
rcl
push
scas
cmpsb
xor
xor
fisubl
into
cmp
data16
add
leave
pop
insb
aad
cltd
mov
dec
call
lcall
rclb
sbb
xchg
bound
movsl
iret
out
mov
push
hlt
fsub
add
add
inc
inc
mov
pop
loopne
daa
outsb
cmp
loope
in
in
dec
jnp
adc
fs
pop
test
in
das
mov
adc
dec
icebp
push
pop
sub
int3
call
jno
and
pop
and
arpl
xor
adc
js
fisttpl
xchg
popf
cmp
adcb
add
add
push
inc
data16
pop
loopne
lea
subb
dec
add
test
mov
testl
cmpsl
xor
pop
arpl
sbb
cmpsl
sub
push
sbb
cs
jo
adc
add
fildl
psubq
push
sub
mov
imul
sub
xor
popf
incb
popa
xchg
add
add
cmp
shll
aaa
push
mov
xor
cs
push
lcall
push
jne
outsl
sbb
fisubl
call
loopne
pushf
fcompl
adc
add
adc
jns
jg
add
add
cmp
push
clc
outsb
adcl
push
or
xchg
test
jnp
insb
xchg
sub
in
inc
cs
arpl
jp
dec
pushf
and
popf
xchg
and
pop
test
imul
daa
push
gs
pop
cmp
loopne
mov
add
mov
xor
mov
out
inc
sbb
repnz
jmp
push
jmp
add
add
lcall
jp
outsl
nop
out
callw
and
mov
test
mov
loope
add
add
int
add
aaa
test
jno
stos
lods
sbb
cs
mov
leave
cmp
popf
lock
add
add
add
in
sbb
les
push
call
xchg
xchg
xor
in
int3
add
int3
or
add
xchg
in
pop
add
fcmovb
gs
das
push
add
ficomps
aas
mov
sbb
or
bound
dec
dec
mov
std
fistps
mov
add
adc
jge
loope
cmpsl
mov
jno
jg
imul
add
add
adc
add
inc
addb
flds
add
add
test
add
fsubp
add
add
add
pop
add
sar
add
std
add
pop
stos
add
addr16
add
mov
add
pop
xchg
add
add
aam
add
add
fidivl
add
inc
stos
add
and
add
roll
add
add
and
add
push
add
xchg
add
add
add
add
dec
add
add
add
or
add
inc
fwait
add
mov
sldt
jmp
push
add
shrl
add
xchg
add
adc
add
sub
add
cltd
nop
add
mov
add
add
or
add
jne
add
ss
add
cmp
add
pop
mov
add
xor
add
icebp
adc
add
add
add
sub
add
fwait
sub
add
sbb
add
js
add
mov
add
scas
fwait
add
cli
insl
add
das
popa
add
bnd
add
add
mov
add
dec
mov
add
dec
add
test
add
nop
insl
add
ja
add
idivb
add
push
push
add
add
cmp
add
add
xchg
add
mov
sbb
add
add
pop
xlat
add
pop
or
add
pop
or
add
add
mov
inc
add
pop
xor
add
or
add
add
sti
scas
add
inc
pushf
add
and
add
aas
mov
add
cmpsb
add
add
add
push
dec
add
add
add
push
add
add
add
sbb
add
imul
rolb
add
add
add
add
push
add
xor
add
add
add
roll
leave
jno
add
or
add
add
pushf
sldt
add
add
dec
stos
add
cmpsl
dec
add
pop
pop
add
gs
add
ja
add
hlt
pushf
add
in
add
rcrb
add
xor
add
add
jb
add
sub
add
push
movb
mov
and
pop
jle
popl
add
add
in
shlb
or
push
cmp
pop
xor
lods
add
mov
fdivrl
into
pop
or
ds
or
rclb
xor
fsubs
loop
sbb
das
xchg
adc
sbb
add
push
add
sbb
dec
mov
fcomps
add
adc
jbe
lea
lds
fidivrl
rorb
add
push
addb
cmp
lods
sbb
das
add
add
mov
add
sub
push
outsb
addr16
mov
sarb
enter
pop
cmc
mov
mov
pop
sbb
add
inc
pop
jb
ds
jae
push
addb
iret
in
or
movsb
data16
add
stc
add
jge
xchg
cmpsb
mov
orl
add
add
xor
je
ss
pushf
pop
xchg
adc
outsl
mov
add
sub
xchg
adc
xor
adc
adc
int3
pop
add
adc
jge
subl
into
sbb
testl
andb
adc
shll
mov
mov
sub
inc
push
je
jne
sub
push
clc
or
ja
xor
sbb
jg
aad
xor
es
scas
shl
xor
jbe
add
cwtl
lret
adc
leave
mov
leave
cmp
mov
pop
add
ljmp
fcomps
jmp
sub
popa
sub
sub
call
inc
lcall
jg
jae
add
shl
cmc
jo
dec
cmpsl
scas
push
or
mov
add
add
movsl
adc
repnz
out
mov
add
add
xor
fistpll
andb
out
insl
push
insb
out
cmpsl
stos
pop
sbb
add
or
shrl
ss
cmpsl
inc
addb
push
adc
fwait
cmp
outsb
jnp
sbb
shl
add
add
add
ds
and
inc
cli
ja
cltd
adc
add
popl
in
xchg
arpl
mov
mov
sub
xchg
inc
adc
leave
pushf
mov
xor
xor
cmp
add
pop
repnz
repz
repnz
adc
cmpsb
mov
add
xchg
stos
hlt
cmc
fidivs
add
stos
push
mov
xor
subl
rolb
add
adc
fwait
lds
xchg
mov
add
jg
iret
shrl
ds
lcall
testb
xchg
jp
push
jns
sbb
dec
mov
dec
dec
jecxz
add
add
xor
pop
jae
scas
das
pop
sbb
xor
jns
add
pop
addr16
movsb
add
add
add
scas
cmp
pop
test
ljmp
data16
nop
xor
add
outsl
and
inc
xchg
pop
xchg
lds
pop
pop
mov
add
push
inc
xchg
daa
rcr
adc
sbb
lcall
lods
or
push
add
add
iret
push
mov
mov
cltd
add
push
out
xchg
xor
in
mov
mov
pop
jmp
dec
push
outsb
push
sbb
jne
cmp
add
adc
std
sbb
testb
icebp
loope
pop
les
imul
stos
xor
push
cmp
jbe
decb
sub
sbb
lods
add
pop
das
filds
add
and
mov
or
xchg
sbb
js
add
pop
shr
jmp
mov
inc
call
mov
xlat
ds
mov
sub
fs
push
mov
ljmp
push
fisttps
movsl
and
jecxz
jle
xor
jg
in
mov
xchg
push
test
loopne
add
push
add
jmp
pop
dec
movsb
dec
cmpb
loopne
inc
fisttpll
dec
add
pop
mov
xlat
in
adc
add
push
add
add
jns
aam
cld
js
mov
movl
cmp
divl
dec
or
jmp
lods
jne
and
aad
stos
test
add
test
rcll
cltd
popa
jl
pop
add
push
shrb
jns
cmpxchg
adc
or
mov
push
lret
nop
cmp
mov
sub
fldcw
add
enter
pop
iret
mov
idivl
pushf
insl
fmull
sub
out
add
add
popl
xor
cs
fwait
adc
xchg
sbb
mov
add
ret
jp
pop
cmpsb
mov
add
cwtl
cltd
mov
mov
add
inc
inc
add
sub
loop
repnz
jg
jb
gs
arpl
mov
out
and
nop
add
cmpsb
adc
jns
call
xchg
pop
jno
sub
add
adc
jb
xor
inc
xchg
aas
ret
push
xchg
mov
lea
dec
push
dec
lea
daa
rolb
repz
cmp
aaa
xor
flds
add
out
mov
subl
or
sbb
mov
push
inc
sbb
xchg
repnz
mov
pop
call
xchg
cmp
add
and
xorb
out
or
cmp
fwait
adc
aaa
leave
fwait
cmp
mov
ja
test
ror
add
pop
mull
fisubl
repz
insb
sbb
sub
stos
xor
ret
mov
fcoml
loope
pushf
push
xchg
sbb
bound
mov
jl
scas
dec
push
std
mov
jo
movsb
lahf
out
add
das
add
pop
aas
repnz
in
popa
jbe
adc
outsl
add
loope
push
or
jns
push
pop
outsl
add
dec
xchg
mov
and
add
addr16
cmpsl
push
daa
push
mov
add
sbb
xlat
dec
daa
xchg
arpl
add
mulb
and
dec
in
mov
xor
test
je
cmp
add
add
sbb
cmpsb
jg
add
push
push
aad
movsl
mov
ret
repz
inc
mov
xor
test
sldt
add
add
push
add
cwtl
xchg
add
xor
loope
cmp
bound
add
or
rolb
mov
popf
mov
cmpsl
std
pushf
add
xor
add
sbb
push
cmp
add
loope
outsl
mov
xor
aam
sub
lock
add
inc
sbb
mov
cltd
inc
add
inc
mov
cmp
push
add
fs
add
mov
in
mov
sub
xchg
add
fsts
inc
daa
lods
add
test
add
add
addb
movsb
pop
add
lcall
test
push
add
stc
outsb
add
mov
lret
jmp
pop
add
jb
add
add
push
add
mov
int3
add
bound
pop
cmpsb
add
mov
aam
pop
add
jg
clc
push
test
add
imul
orb
std
pusha
push
add
stos
jle
imul
mov
lods
add
xchg
xor
leave
pop
scas
add
adc
add
cs
add
movsl
add
xchg
outsl
add
lret
inc
ss
xchg
xchg
add
and
add
stos
xchg
add
in
inc
add
mov
cmp
add
jae
add
out
xor
jno
cmp
sarb
popf
add
push
str
jae
add
mov
add
add
negb
push
xchg
sbb
fdivrl
loope
xor
sub
add
add
sbb
aaa
cmp
add
inc
mov
subb
add
shll
insl
mov
xchg
jecxz
add
jne
add
xlat
jp
and
add
addb
mov
xlat
add
roll
add
push
add
xchg
add
outsb
add
xchg
lret
add
xchg
add
out
xchg
cmpsl
pushf
pop
add
sub
cld
sub
add
mov
iret
test
add
inc
add
fnstenv
add
add
add
xchg
add
push
aad
mov
and
add
mov
add
gs
add
sbb
add
inc
cli
mov
add
lcall
bound
add
jle
ficoml
addb
out
add
cmp
xchg
add
pop
add
mov
cmp
add
jb
add
in
pop
add
data16
mov
dec
flds
arpl
add
jl
add
mov
add
xchg
std
dec
fiaddl
dec
mov
add
scas
enter
sti
add
mov
xor
mov
add
inc
xor
xor
add
addb
pop
mov
loopne
push
add
jge
add
cmc
mov
xchg
nop
pop
add
dec
add
xchg
xchg
add
rcll
aas
lods
add
lahf
rolb
cmp
sti
add
mov
xlat
add
jae
add
cwtl
fiadds
lcall
add
mov
lret
xacquire
cmp
mov
add
add
mov
int3
add
inc
add
mov
mov
test
pop
add
pop
jg
rcrb
add
xor
mov
imul
fwait
or
and
mov
add
mov
add
dec
ja
sar
add
inc
scas
add
or
add
leave
add
hlt
add
and
add
xchg
jle
pop
or
add
insl
std
add
jno
nop
xchg
add
jno
add
pop
add
cmp
add
sub
and
xchg
call
xor
pop
aad
add
mov
add
mov
add
add
sbb
add
xchg
jne
fiaddl
int3
mov
add
enter
sti
add
dec
scas
add
sahf
sub
repz
or
add
sahf
enter
jg
clc
mov
add
mov
add
roll
add
sbbb
sub
add
fcoms
mov
cmp
popa
dec
movl
inc
xor
add
cld
xor
clc
cmp
add
sub
mov
in
add
or
dec
add
movb
cwtl
aas
or
mov
inc
add
hlt
dec
add
or
add
movsl
add
pop
add
and
add
adc
sbb
xchg
in
add
cmp
mov
in
mov
add
aaa
add
lcall
xchg
push
add
and
loop
call
add
jl
in
lcall
jne
add
jle
mov
addb
lock
add
lea
add
xchg
fiaddl
xorl
add
out
add
add
add
repz
cld
xor
leave
add
popf
jle
mov
and
cmc
mov
add
jbe
add
mov
add
inc
fiaddl
jo
loopne
add
add
js
loope
pop
mov
add
jge
add
mov
cwtl
cmp
lods
add
xor
fisubrl
jmp
add
add
xchg
jo
lock
xor
add
add
pop
cmp
add
into
out
pop
and
mov
sub
and
sub
dec
add
add
jp
nop
jne
scas
and
push
movsb
add
adc
into
sub
jp
push
add
add
aas
pop
dec
shrb
test
xchg
sub
push
and
sbb
xchg
js
cmp
push
add
pop
jg
xchg
ds
sti
das
adc
add
add
add
enter
xchg
popl
add
inc
les
pop
icebp
sbb
add
add
testb
pop
add
jecxz
mov
jecxz
mov
add
pop
add
jmp
jne
sbb
cmp
mov
jmpw
jo
pop
ljmp
adc
and
repz
cmp
add
scas
mov
fucomi
or
shl
xor
lds
add
add
enter
loopne
or
add
add
aam
inc
out
es
add
add
ret
and
int3
loope
adcl
sbb
movsl
sbb
bound
add
sub
mov
inc
dec
mov
mov
add
mov
movsl
outsl
and
add
add
insb
add
adc
mov
add
movsl
ficompl
dec
out
adc
enter
mov
or
push
add
add
imul
cmp
cmp
sbb
jle
add
add
and
mov
xchg
adc
xor
orb
dec
fwait
adc
cmp
imulb
or
or
inc
and
xlat
inc
cld
pusha
mov
add
push
add
add
lahf
fs
push
cmovg
push
mov
add
lods
xchg
repz
xchg
and
lds
add
jp
push
add
iret
cmp
stos
data16
insb
sbb
loop
sbb
add
and
out
ljmp
andb
add
adc
out
loop
add
sub
mov
xchg
xor
mov
out
add
add
iret
or
add
add
shll
mov
lahf
xchg
sbb
add
add
or
fnstsw
xor
add
add
jg
arpl
movsl
mov
addr16
pop
mov
mov
cmp
call
add
xor
or
push
add
add
jmp
lret
outsl
add
add
test
repz
cmp
addr16
add
add
imul
add
mov
add
add
adc
imulb
ss
mov
add
pop
xchg
push
lds
xlat
dec
pop
xchg
xchg
cmp
add
add
nop
push
das
mov
sbb
add
add
add
into
sbb
insb
mov
lahf
adc
pop
fstpl
pop
add
add
cld
or
les
dec
push
pop
add
add
notl
ds
mov
push
add
add
inc
mov
sbb
mov
add
add
or
jns
popa
mov
add
call
or
add
or
mov
nop
aaa
scas
add
add
cmc
ljmp
mov
pusha
movsb
mov
mov
lds
add
add
and
pushf
stc
add
incl
sbbb
fiadds
jecxz
xor
or
add
xchg
or
cmp
dec
nop
add
add
sbb
jns
jne
outsb
js
add
add
movsl
aad
jo
add
add
mov
jo
push
cmpsb
xchg
ret
or
add
add
mov
xor
sbb
jns
jbe
adc
jp
cs
mov
add
aad
movsl
cmp
jmp
imul
adc
jge
mov
jno
sub
subl
clc
push
dec
xor
sub
add
cmpsl
inc
pushf
or
jns
fcoml
adc
add
mov
fwait
adc
add
add
sar
sbb
pop
xor
pop
add
xor
inc
out
cltd
dec
pop
dec
int
fwait
imul
mov
xchg
repz
adc
int
inc
jb
xor
sbb
scas
pop
add
movsb
and
push
add
add
mov
data16
outsl
ja
in
or
add
add
dec
mov
push
jmp
cmc
fldt
mov
add
ljmp
arpl
add
adc
rcl
xchg
xor
mov
add
add
or
leave
test
iret
add
pop
icebp
lds
mov
aam
sbbl
fcoml
or
push
inc
gs
mov
add
add
mov
je
divl
add
add
mov
cmp
add
add
bound
dec
mov
add
lret
cmp
clc
jbe
mov
add
outsl
jns
mov
addb
xchg
add
or
mov
add
add
inc
fwait
psubusw
pushf
pop
or
add
add
lcall
xchg
add
cli
xor
dec
adc
cmp
add
add
int3
sbb
insb
mov
cltd
movhps
cmpl
push
add
in
add
add
or
sarb
add
inc
out
add
add
xor
fadds
add
add
movsb
add
jno
aaa
jge
add
add
pop
sbb
loop
clc
add
mov
adc
pop
add
add
pushf
sub
in
testb
add
xor
jb
call
add
add
xor
mov
fisubrs
add
sub
add
add
sti
fidivrs
dec
lods
dec
and
and
lcall
mov
add
push
jnp
inc
je
jge
mov
add
pop
mov
push
dec
mov
xchg
jo
add
add
movsb
fadds
mov
and
pop
cli
sbb
mov
xchg
adc
jl
dec
movsb
adc
add
add
sbb
addr16
pop
inc
jns
loope
xchg
lods
mov
lret
sub
or
movsb
jge
stos
dec
add
add
sbbl
dec
push
fisttpll
add
dec
xor
fwait
adc
add
adc
jno
aas
lds
add
add
jge
cltd
adc
outsl
add
sbb
lcall
inc
sbb
shl
adc
xor
add
add
enter
sbb
scas
pop
add
add
or
cmp
add
xlat
cmp
mov
jle
in
add
add
push
or
repz
loope
add
add
incb
cld
ss
add
add
jbe
test
jb
mov
add
add
cli
int3
into
cmp
add
add
call
incl
dec
movsl
dec
and
and
je
shl
add
jbe
scas
push
jnp
je
add
add
or
scas
dec
add
add
decl
add
mov
ficomps
pop
movsl
cmp
add
add
sbb
sbb
hlt
and
add
sti
pushaw
dec
out
push
repz
add
ds
or
js
mov
outsb
insb
jecxz
mov
jno
sub
add
add
inc
outsb
bnd
add
and
dec
xchg
or
adc
add
add
push
adc
add
add
out
sbb
das
cmp
dec
and
pop
out
mov
jb
push
cltd
outsl
xchg
push
add
in
add
xchg
out
dec
push
pop
add
xchg
call
add
add
inc
jmp
cmpsl
popa
jge
push
add
pop
insb
mov
mov
or
adc
pop
add
jecxz
sub
in
testb
add
xor
imul
call
xor
sub
add
add
sahf
out
add
push
cmp
add
lods
adc
inc
and
add
adc
cs
popl
test
insl
insb
push
mov
loop
add
add
inc
movsl
test
dec
sti
decl
add
loopne
pushf
fsubrl
sbb
add
push
adc
jb
add
xchg
sbb
outsl
jge
cmpsl
add
fbstp
add
add
cmp
gs
push
adc
jns
scas
testb
add
add
cmpb
sub
loop
dec
cmp
add
cmp
sbb
js
add
xorb
push
bound
add
add
and
pop
pop
xor
pop
add
add
sub
inc
sti
jge
cltd
adc
add
add
gs
push
dec
pop
icebp
sbb
mov
stos
mov
sti
or
adc
fwait
cmpsl
add
add
daa
ss
mov
mov
add
add
jl
pop
push
adc
add
add
mov
jbe
or
adc
add
add
cld
sub
add
add
fwait
cmp
mov
or
movl
adc
shll
fisubrs
add
add
and
sub
into
icebp
rclb
add
add
out
cmp
or
push
outsb
aam
add
xor
cltd
inc
test
lea
jno
je
push
inc
jp
mov
push
stc
decl
mov
enter
outsl
aaa
fs
add
paddsw
and
add
add
sti
jle
dec
mov
sti
xchg
sub
add
out
jbe
mov
loope
add
mov
add
and
dec
add
bnd
adc
dec
cltd
push
leave
gs
add
fcompl
xchg
mov
push
xchg
add
add
sub
out
sbb
pop
xor
pop
add
roll
cwtl
test
pop
push
rorb
addr16
dec
adc
sbb
mov
inc
or
out
cmpsl
add
ss
aad
jecxz
dec
call
ds
add
mov
mov
jle
sbb
sbb
pop
loop
sbb
add
add
lcall
loopne
mov
add
or
lods
add
jmp
and
rolb
add
int3
enter
jmp
and
add
add
lods
pop
in
into
cmp
push
mov
lahf
xchg
sbb
add
xor
out
addl
add
outsl
inc
addr16
add
add
outsb
mov
mov
mov
add
lcall
add
add
jno
insb
or
push
sbb
fs
scas
shld
xor
add
add
and
call
dec
or
jmp
cs
add
sbb
dec
dec
cmp
add
xor
movsb
dec
fcompl
aam
add
mov
xchg
cmp
mov
inc
jg
adcb
adc
cmp
pop
mov
jno
sbbb
xchg
outsl
add
add
mov
lret
negl
dec
add
push
in
lods
dec
jle
xor
fadds
mov
mov
jmp
mov
add
ja
pop
sbb
xor
aaa
mov
cli
add
or
add
add
push
mov
mov
add
push
and
jge
add
sub
loopne
lock
int
xor
fwait
loop
or
sldt
xor
in
into
cmp
add
push
mov
xchg
add
in
xchg
inc
fisttpl
nop
add
add
insb
jns
mov
loop
jne
pop
mov
push
adc
test
adc
mov
xchg
or
movsl
add
add
xor
inc
repnz
add
add
clc
jge
mov
sti
and
push
movsb
add
add
or
int3
jp
sub
out
add
add
imul
push
sub
loope
lods
add
mov
cmp
imul
add
or
and
outsl
stc
ss
mov
add
inc
xchg
add
outsl
mov
dec
pop
xchg
xchg
cmp
add
add
lea
aas
mov
sbb
add
add
es
mov
add
add
pop
pop
fadd
outsl
cwtl
pop
add
add
push
dec
stc
sbb
fidivrl
add
dec
xacquire
fadds
add
add
mov
aaa
jge
add
add
or
jge
popa
mov
cli
add
sub
adc
or
in
push
mov
out
nop
add
sub
mov
lret
insb
mov
lods
add
push
das
sarl
fisubrs
add
wrmsr
mov
icebp
rclb
add
add
out
fldcw
pop
lods
push
sub
add
add
cmp
out
fwait
push
addb
movsb
add
add
sbb
pop
push
add
add
jbe
inc
mov
dec
adc
test
mov
leave
inc
push
mov
jne
or
paddsb
sbbb
and
push
add
add
in
fldenv
xor
add
in
arpl
sbb
mov
add
add
inc
and
jne
jmp
add
and
inc
std
dec
mov
add
leave
gs
pop
sbb
and
dec
insb
dec
lea
cmp
sbb
add
sub
aam
out
mov
int
outsl
add
add
sbb
shrl
push
sbb
pop
testl
test
add
add
mov
popa
jge
push
add
add
sbb
jo
and
loop
clc
add
add
addr16
out
pop
push
inc
test
out
cmp
fldt
mov
add
add
in
mov
add
lods
add
add
in
add
int3
scas
cmp
xor
and
or
inc
cmp
add
lds
or
dec
and
and
aad
pop
cmp
xchg
fcoml
or
add
add
test
jnp
pusha
jle
or
add
stos
push
pop
out
movsb
popf
cmp
call
add
mov
aaa
fs
add
out
call
adc
outsl
add
add
imul
movsl
fbstp
add
add
sub
mov
add
loopne
mov
jno
sub
add
loope
dec
sub
pop
mov
dec
sahf
adc
outsb
mov
xchg
cmp
add
add
nop
add
in
and
sbb
cmp
pop
xor
mov
add
add
mov
push
add
in
add
add
sbb
mov
add
xchg
movsl
push
arpl
es
test
add
pushl
sub
add
adc
sub
loop
clc
add
add
popa
outsb
adc
add
test
pop
ljmp
call
add
xchg
or
lods
add
add
add
mov
ret
xor
add
pushf
jecxz
pop
mov
and
add
add
sub
add
sub
xchg
test
outsl
xchg
outsb
add
mov
dec
lods
mov
mull
mov
fiadds
push
sbb
xor
or
add
add
push
in
in
pop
jb
adc
add
std
bound
push
mov
add
out
jae
push
inc
jns
loope
add
movsl
jno
xchg
test
adc
out
arpl
mov
dec
mov
js
xlat
add
cltd
aas
lods
and
jg
xchg
adc
int3
imulb
adc
push
jns
inc
and
add
add
pop
lock
xchg
jb
push
rorb
imul
add
lods
mov
in
add
inc
out
add
subb
fsubrs
pop
jmp
mov
add
add
push
sbb
lret
cmp
mov
pusha
jae
in
pop
adc
test
fidivrl
iret
xchg
sub
in
testb
add
scas
cltd
pop
popf
fidivs
mov
add
ret
loopne
lock
add
add
fidivl
lret
pushf
mov
add
or
mov
cmp
lods
add
add
bound
faddl
lret
cld
xchg
xchg
push
xor
jl
jo
jg
mov
dec
add
add
mov
push
push
divb
mov
xchg
into
sbb
sub
xor
repnz
jmp
bound
mov
mov
ja
add
add
mov
mov
jp
cmpsb
push
or
icebp
xchg
mov
add
add
jne
cmp
sbb
jecxz
mov
dec
std
dec
mov
add
in
imul
add
add
jnp
mov
shr
ds
gs
add
sub
and
push
add
hlt
addr16
mov
adc
xchg
adc
adc
testl
in
mov
jb
xor
out
mov
add
sub
fs
sbb
add
pushl
cld
or
adc
add
add
pop
mov
jmp
add
add
icebp
lock
jge
add
jecxz
mov
push
iret
mov
xlat
xor
iret
lock
mov
loop
adc
dec
xor
inc
ja,pt
add
add
pushf
pushf
adc
sbb
outsb
xor
aad
aaa
cmpsl
inc
mov
add
add
add
jb
loop
xchg
pop
push
test
add
inc
mov
xchg
sbb
xor
or
add
jmp
jmp
mov
sbb
loope
lods
add
add
lcall
xchg
xor
and
push
mov
xchg
enter
add
shll
add
add
sbb
add
add
add
shlb
sub
mov
dec
adc
add
out
add
add
add
add
sbb
leave
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
incb
add
jle
add
mov
add
add
add
add
add
add
add
aad
add
movb
add
add
add
add
add
add
add
mov
iret
pop
adc
cmp
push
add
daa
mov
leave
adc
jbe
inc
push
sbb
dec
lcall
pop
shl
pusha
int3
mov
clc
fcmovu
scas
sahf
jnp
stos
int
mov
loope
gs
jge
cld
cld
cltd
mov
pop
and
addr16
addr16
mov
cmpsb
xchg
out
aas
hlt
inc
sub
in
sub
cmp
pop
decb
loopne
or
mov
jae
add
add
add
roll
idivl
inc
push
sbb
add
add
add
or
adc
je
add
add
or
add
add
add
dec
roll
add
dec
jns
add
mov
add
sbb
movb
insb
add
sbb
add
add
fldenv
pop
add
adc
in
dec
add
testb
jne
add
add
add
add
xchg
add
add
add
push
add
and
xlat
sub
jge
add
add
add
add
add
add
add
add
add
add
add
sbb
add
loop
jae
add
mov
add
inc
jns
fs
pop
add
inc
mov
add
add
jmp
jbe
xor
add
out
push
in
add
jle
mov
add
add
add
add
add
sub
jg
add
addl
add
add
add
cmp
add
add
adc
add
add
mov
cwtl
add
push
pushf
mov
add
xchg
add
add
add
adc
cmp
add
push
add
add
add
add
add
add
add
add
add
jne
add
nop
add
add
add
add
in
add
add
jo
add
inc
fldenv
add
mov
jl
add
add
add
out
rcrl
add
inc
add
add
sbb
add
add
add
adc
sub
hlt
test
add
xchg
fldcw
dec
inc
lds
pusha
add
add
xor
add
add
jb
fiaddl
add
fidivrs
add
add
mov
add
cmp
inc
pop
add
sahf
adc
add
add
add
add
add
pop
add
add
add
std
movsl
sub
add
add
xchg
sar
add
add
mov
outsl
jnp
ret
add
add
pop
push
pop
add
outsb
add
cltd
add
add
add
out
jge
or
es
add
add
mov
add
add
add
inc
add
add
jg
or
sbb
popa
add
add
add
xchg
rcr
add
add
out
add
add
add
add
inc
xchg
push
add
add
add
add
daa
shll
add
add
je
scas
add
add
sti
add
add
add
add
faddl
add
add
sub
jg
dec
add
add
add
add
add
jae
push
cmp
dec
add
mov
aas
popf
push
out
loop
add
add
stos
add
in
or
call
add
cmpl
add
add
in
lcall
add
add
add
gs
pop
popf
add
push
in
add
mov
add
mov
push
add
add
add
push
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
add
add
add
mov
or
hlt
add
add
jmp
add
mov
rolb
fsub
add
add
aas
add
add
jmp
faddl
and
add
add
roll
xchg
add
and
cmp
aad
daa
add
add
add
dec
add
ffree
add
pusha
add
add
add
add
jns
add
add
arpl
add
pusha
xor
jae
loopne
pop
jle
add
mov
add
add
repz
jmp
add
add
sahf
add
xor
add
adc
or
add
add
pop
add
add
add
add
add
filds
and
fiaddl
add
add
in
add
add
nop
add
add
add
xor
rorl
add
adc
add
push
add
push
sub
add
add
lahf
add
add
push
add
jge
add
add
add
lret
add
add
add
add
add
dec
add
add
add
enter
add
add
add
bound
das
add
add
add
add
add
jmp
add
push
add
add
add
mov
add
add
lahf
inc
add
add
add
add
add
add
add
add
sti
jmp
add
add
add
add
add
add
adc
add
add
add
or
add
add
add
jae
push
add
add
add
loopne
add
add
add
stos
inc
add
xor
decl
sbb
add
add
jl
test
add
popl
lret
lds
outsl
add
add
push
xchg
mov
add
rolb
jl
pop
add
add
add
xchg
add
jno
adc
add
add
add
mov
add
add
or
add
cmp
add
add
fldl
add
repz
cmp
add
jle
add
and
jb
add
add
sldt
fildl
add
add
add
add
out
and
add
add
fiaddl
add
and
add
add
testl
incl
add
add
add
add
xor
mov
sbb
add
aam
mov
add
add
negb
pop
add
add
jb
add
pusha
add
xchg
add
add
pop
mov
add
add
add
lock
icebp
imul
add
leave
pop
sbb
sbb
sldt
pop
add
add
add
add
mov
add
add
aad
fildll
add
jo
mov
add
add
mov
add
add
sbb
dec
add
add
add
pop
les
xchg
sub
or
add
sub
leave
inc
add
add
popl
mov
add
add
add
add
lds
inc
imul
add
add
add
add
add
and
push
add
add
xor
add
insb
repz
jl
add
dec
mov
aad
add
daa
add
xlat
sub
pop
test
add
add
add
add
add
icebp
loope
fiaddl
add
add
cmp
add
or
add
add
add
add
add
push
add
dec
add
add
add
add
add
add
and
and
add
add
dec
add
add
add
jl
jnp
add
andb
jp
add
add
ret
add
add
sarb
pop
add
inc
lods
add
add
leave
add
xor
int
shll
mov
invd
add
inc
add
insl
xor
add
mov
pop
xchg
cltd
add
ret
pop
add
add
add
lea
add
jle
add
mov
fnstenv
mov
add
pushf
icebp
add
pop
add
rolb
add
add
addl
inc
xlat
mov
add
scas
add
add
pushf
add
add
add
loop
fs
loopne
lret
add
cwtl
add
mov
add
add
xor
lahf
jp
dec
jecxz
add
nop
add
add
enter
sbb
cmp
add
add
add
jle
fiadds
notl
pushf
lods
sbb
add
bound
ret
mov
cmp
mov
mov
lcall
jb
add
inc
mov
cmpsb
pop
add
add
fsubs
dec
loope
aam
mov
cmp
movsb
cmpsl
scas
pop
sub
sub
add
add
or
sti
imul
xchg
pushf
add
add
add
test
ds
jbe
sbbb
movsl
push
push
push
cmp
pop
xor
push
stc
jno
add
add
ficoms
adc
dec
inc
push
stc
sbb
inc
dec
adc
xchg
test
fildl
add
sahf
push
pop
stc
in
push
mov
outsb
inc
sbb
test
test
daa
scas
push
repz
imul
jl
incl
add
loope
out
test
fs
scas
call
popa
lods
les
popa
xchg
iret
fiadds
cmc
add
add
jecxz
leave
in
jns
cmpsl
push
and
rolb
std
xchg
xchg
push
subl
add
sub
and
inc
pop
mov
jmp
lea
cmpsb
andb
mov
mov
xor
popa
popf
add
dec
lods
mov
pop
xchg
or
add
addr16
add
add
push
mov
adc
arpl
inc
and
movsb
mov
test
aaa
scas
pusha
subb
dec
jle
add
add
xor
add
add
lds
add
add
add
jecxz
shrb
dec
adcl
imul
and
or
push
add
sbb
adc
cmp
cltd
dec
push
inc
add
add
add
pop
out
xchg
idivb
adc
iret
out
dec
imul
sbb
les
arpl
add
xchg
add
add
mov
test
xchg
sub
and
dec
test
mov
add
cwtl
fld
movl
test
cltd
out
sarl
inc
adc
call
add
add
sub
add
pop
outsl
xlat
rol
adc
xchg
jl
call
aam
inc
xor
xchg
add
add
add
lock
dec
push
bound
pop
mov
pop
mov
icebp
mov
push
mov
fnsave
add
add
add
ja
jns
in
add
dec
lods
mov
sbb
sub
and
add
add
mov
dec
xchg
daa
dec
je
ljmp
pusha
lea
xchg
adc
add
add
add
jae
and
push
fldenv
add
add
fwait
sub
xchg
add
add
add
add
cmp
add
add
add
std
pop
push
add
loope
pop
fildl
add
add
add
jp
add
add
add
xor
add
add
add
add
cmp
fwait
add
add
add
add
add
mov
mov
add
add
cmp
pop
add
add
mov
pop
inc
mov
add
add
sub
cmp
push
adc
leavew
sub
add
in
jnp
add
add
inc
cmpsl
jno
sbb
adc
dec
add
add
stos
or
add
add
jno
fwait
sub
add
add
dec
les
faddl
add
int3
ficoml
sub
mov
fnstsw
rorl
add
add
add
add
add
add
add
add
add
and
stos
int
push
int3
pop
sub
icebp
sbb
add
cmp
loope
out
add
add
sbb
jmp
fildll
fisttpll
inc
mov
pop
mov
dec
das
faddl
add
add
mov
fwait
jl
add
add
xor
add
fldcw
add
add
movsl
mov
add
lret
mov
imul
sub
add
inc
repz
testb
add
shlb
add
jecxz
mov
add
add
call
add
add
add
add
or
inc
push
pop
xlat
mov
sahf
jp
leave
and
fdiv
repz
cmc
fwait
aam
mov
cmpl
js
jae
test
gs
add
adcb
inc
xchg
mov
push
pop
stos
scas
sub
add
movsb
mov
in
mov
lret
push
and
mov
and
clc
mov
ficomps
addr16
dec
push
or
daa
xorb
cmp
add
nop
jl
repnz
xor
add
add
add
arpl
stos
adc
sbb
repnz
enter
push
pop
xchg
lahf
pop
cld
mov
loope
or
mov
add
mov
ret
rcll
inc
fs
add
rcll
pushf
mov
add
add
push
imul
sbb
faddl
add
add
ds
hlt
push
in
cs
push
mov
pop
jge
mov
lock
xlat
das
iret
es
add
add
call
arpl
fcoml
ret
je
pushf
push
push
xchg
add
add
test
mov
dec
jae
xchg
sbb
or
and
push
rcrb
lock
add
mov
andb
andnps
push
mov
add
pop
or
xchg
mov
add
ss
xchg
mov
stc
pop
jmp
jp
push
and
add
add
add
push
outsl
test
cmpsl
aaa
sti
psadbw
sbb
je
pop
sbb
mov
mov
mov
add
add
mov
inc
xorl
add
add
add
cld
jae
lods
les
loop
data16
mov
adcb
xlat
xor
push
sbb
xchg
adcl
lcall
xchg
sbb
gs
jmp
mov
mov
mov
sar
cmp
cli
popa
ja
ja
add
hlt
sbb
jmp
ficoms
jns
push
in
stos
into
and
sub
out
jno
out
push
jne
jecxz
mov
add
inc
xchg
add
pusha
mov
sti
jae
inc
repz
lcall
push
mov
inc
je
ret
and
add
add
or
ja
pop
sub
pop
loope
sahf
popa
add
add
add
add
test
inc
pop
cmpsl
pop
hlt
int3
add
add
mov
dec
adc
add
add
pop
cmp
test
mov
adc
add
mov
and
inc
push
adc
loopne
jmp
adc
push
or
mov
xchg
popa
add
add
mov
loop
and
fs
mov
add
das
ret
scas
das
add
add
into
enter
iret
in
dec
call
mov
sbb
fnsave
push
movsb
pop
aaa
dec
xor
addb
add
xchg
xchg
add
jg
arpl
sbb
xchg
push
inc
mov
add
mov
mov
mov
es
or
pop
in
mov
inc
bound
pusha
pop
stos
or
sub
outsl
mov
or
add
data16
add
add
add
add
add
xor
adc
lods
repnz
repz
popf
push
fsubs
cmc
xchg
pop
pop
rcrl
push
nop
pop
imul
xor
sub
addr16
pop
stc
jno
lret
sbb
add
add
mov
pop
adc
mov
test
inc
pop
or
in
nop
movsb
pop
gs
cmpsb
cwtl
mov
add
add
inc
pop
stc
mov
add
add
mov
add
pop
pop
jg
and
repz
add
out
sbb
push
test
add
xor
xor
aad
out
in
mov
scas
mov
xchg
int3
and
ljmp
and
iret
cmp
add
add
test
incl
adcb
fadds
add
sub
add
sbb
add
sbb
add
gs
ds
xchg
pushf
pop
nop
or
scas
sbb
cmp
jne
add
jge
add
dec
sbb
pop
mov
mov
lock
pop
push
mov
cmp
dec
in
sti
jmp
add
ficoms
add
add
add
and
add
add
add
lcall
adc
add
add
add
add
add
sub
rcll
sub
xor
add
pop
stc
pop
pop
and
inc
mov
int
mov
add
push
sbb
cs
fwait
add
stc
aas
push
adc
add
add
imul
add
add
add
mov
movsl
jnp
jg
cmp
add
dec
sbb
mov
test
mov
or
and
add
sub
sarb
jg
or
add
lods
pop
pop
pop
add
add
loop
add
clc
inc
cli
cmp
jecxz
mov
call
and
add
mov
stc
or
andb
es
adc
orb
xor
or
dec
and
jle
mov
ret
adc
push
je
scas
pop
insb
push
popa
outsb
push
fsubrl
clc
push
sbb
mov
mov
add
dec
jae
mov
outsl
aas
bswap
adc
mov
add
jge,pn
xor
sbb
push
jne
ljmp
add
sub
jbe
sarb
and
in
dec
xor
pop
mov
fmull
aad
add
add
test
dec
pop
fwait
xorb
fs
jns
mov
gs
in
xor
add
lea
add
adc
add
pop
add
add
add
add
add
add
add
add
cmp
scas
mov
dec
test
call
dec
add
cmpsl
nop
loop
inc
xor
notl
adc
mov
add
add
aad
xchg
add
add
outsl
push
xchg
popa
mov
add
adc
add
add
jno
mov
cmpsl
sub
fwait
scas
or
jmp
add
add
fildl
in
dec
loope
dec
push
leave
add
mov
add
mov
add
fs
add
fs
add
dec
jle
mov
add
lock
jo
add
rolb
aad
jb
sarl
add
aas
add
and
pop
sbb
add
mov
add
outsb
add
shlb
xchg
nop
add
sbb
add
add
xor
sbb
add
push
sub
add
jmp
add
add
and
pop
mov
add
inc
cmp
push
or
sub
pushf
push
lds
cltd
cltd
add
pushf
add
add
push
add
inc
add
daa
mov
inc
mov
jle
pop
cld
test
jns
add
add
js
add
push
add
repnz
xchg
aaa
mov
fimuls
jp
dec
sldt
add
dec
call
add
test
jmp
add
pop
out
popl
add
add
hlt
add
sarb
add
out
mov
add
xor
and
add
arpl
add
add
je
and
testl
adc
sbb
mov
adc
add
add
jl
mov
add
add
mulb
add
mov
lods
add
add
ret
decb
add
add
ret
add
cmp
add
add
pmuludq
sub
xchg
icebp
fadds
add
add
loopne
aaa
pop
lods
add
add
or
add
int3
loopne
add
add
xchg
sbb
or
outsb
jae
add
add
stos
fsubp
imul
add
add
mov
add
mov
add
or
pop
cmpsb
add
add
imul
add
add
mull
add
xchg
add
js
push
add
lock
add
jmp
add
sub
jmp
add
arpl
push
pop
add
das
cmp
push
add
add
outsb
call
add
jo
mov
add
loopne
adc
sbb
dec
add
add
popf
das
out
or
roll
add
add
sbb
inc
jns
mov
push
inc
imul
add
jbe
add
add
add
and
add
outsl
lea
push
std
pop
xchg
mov
xchg
testl
mov
add
add
repz
call
push
mov
jb
push
push
inc
jmp
xchg
out
out
pop
mov
add
cmp
sbb
test
jecxz
insl
out
push
add
add
mov
jno
stos
mov
cmpb
xor
iret
in
push
mov
mov
jmp
pop
call
xchg
addl
xchg
adc
mov
inc
add
xor
add
inc
dec
dec
pop
hlt
xchg
mov
stc
or
out
inc
xor
add
mov
lock
ficomps
push
mov
cmp
adc
les
scas
add
ljmp
mov
aas
test
or
jp
sub
push
cmp
sub
clc
push
inc
pusha
icebp
outsl
movsl
ss
mov
sahf
pop
fistpll
xchg
push
add
xchg
mov
adcb
adc
sub
sbbb
pushf
add
int
bound
adc
xchg
mov
adc
cli
ret
in
je
cmp
adc
movsb
push
mov
and
push
cmp
sub
call
and
pop
test
movsl
inc
mov
jmp
jmp
inc
lahf
and
mov
aaa
test
rolb
adc
testl
pop
test
cmp
mov
sbb
add
cmp
int
rclb
aad
or
xor
dec
push
movsl
iret
shll
je
mov
mov
loopne
jge,pt
pop
sbb
adcb
popa
dec
mov
jecxz
sub
jae
inc
push
jns
movsb
mov
xor
and
gs
push
bnd
and
pop
rclb
int
cmpsb
les
mov
mov
or
xchg
imul
imul
ja
test
inc
int
sub
dec
inc
sbb
pop
in
out
mov
mov
dec
sbb
push
jns
daa
lcall
cmc
notl
mov
or
outsl
clc
mov
and
pop
pop
mov
inc
cmpsl
insb
lods
lcall
out
or
xchg
jae
jmp
cwtl
cmc
sbb
and
xchg
into
ret
je
lret
dec
adc
add
add
loope
add
fdivs
xor
mov
add
fimuls
add
add
add
add
mov
pop
add
cmpb
in
ds
add
cli
add
add
ret
addr16
add
lods
sbb
add
add
add
add
add
add
add
add
jp
cmp
jns
dec
add
add
add
add
add
mov
add
add
add
ret
add
add
insl
add
add
add
jge
or
sbb
xchg
add
add
add
add
add
ret
add
add
cmp
push
add
add
add
jae
jge
lods
add
aam
mov
add
repnz
add
add
sub
sbb
sub
loop
jbe
dec
add
insl
add
popa
add
dec
add
mov
pop
add
add
jo
aaa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
dec
js
loopne
add
mov
add
add
add
or
add
add
xor
fwait
pop
add
add
add
dec
add
add
add
add
add
add
add
add
inc
add
ret
add
inc
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
pop
add
add
add
add
add
add
add
pop
add
inc
cwtl
add
add
add
add
add
or
add
add
add
imul
movsl
clc
add
add
add
add
add
add
add
add
jmp
add
add
add
movsb
sbb
add
jne
add
add
or
roll
jle
add
in
sub
dec
add
add
add
add
testb
add
add
sbb
add
add
mov
icebp
add
add
add
mov
add
cs
sub
add
mov
pop
add
add
add
lods
pop
add
js
add
lods
add
add
add
add
add
add
imul
add
popa
aas
push
add
add
add
xchg
sub
mov
add
imul
lahf
add
add
add
or
add
add
add
add
add
popl
add
mov
add
add
add
add
add
je
add
lea
add
push
add
add
add
add
add
add
add
popa
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
rolb
add
push
add
add
add
add
add
out
add
push
add
add
add
mov
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jg
add
lahf
add
add
add
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
lret
add
add
add
add
add
add
add
add
add
add
add
fildl
add
xor
add
add
add
add
add
add
add
add
add
add
push
add
aad
add
cmp
add
pop
add
add
add
add
add
add
add
add
add
add
add
and
add
jae
add
add
inc
xchg
add
pop
lods
pop
mov
add
add
inc
sbb
add
popf
mov
add
add
add
lret
add
add
xchg
mov
enter
add
cmp
add
add
add
add
add
add
rcrl
add
and
add
add
add
add
add
xchg
std
add
add
add
lods
ja
add
lahf
pushf
add
shlb
add
add
add
add
add
add
ret
test
add
add
js
mov
fistpll
stos
