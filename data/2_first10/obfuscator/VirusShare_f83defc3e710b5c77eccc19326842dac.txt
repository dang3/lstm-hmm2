add
add
push
add
add
add
adcb
add
pusha
add
addb
add
aas
add
add
add
addb
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
lock
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
les
add
add
push
add
add
outsb
add
inc
add
insb
add
dec
add
data16
add
mov
add
add
xor
cmp
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
inc
add
jo
insb
add
jns
push
add
jp
popa
add
add
add
add
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
aaa
add
add
add
add
add
add
add
add
add
add
adc
add
dec
add
je
add
outsb
add
insb
add
popa
add
add
add
push
add
add
insb
add
jns
push
add
jp
popa
add
add
add
add
add
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
test
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
adc
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
inc
add
jo
insb
add
jns
push
add
jp
popa
add
add
add
add
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
scas
add
add
imul
popa
add
add
je
jne
add
outsl
add
add
add
inc
add
add
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
aaa
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
jo
std
ljmp
mov
sbb
mov
stos
cmpsl
inc
je
push
xor
outsl
sbbb
pop
cwtl
mov
into
ds
out
in
mov
mov
fsub
adcb
je,pn
jle
and
sti
into
aas
addr16
jge
mov
sub
iret
nop
xor
loope
push
daa
cmp
in
mov
outsb
imulb
push
mov
iret
or
cmp
repz
push
fdivrp
sub
xor
jbe
insb
mov
inc
cwtl
je
ret
push
push
pop
sub
ljmp
mov
sub
gs
pusha
fldt
fwait
popa
dec
and
inc
sub
or
or
add
or
pop
scas
or
ret
add
inc
stos
jno
xchg
jg
jp
mov
jmp
mov
out
mov
pop
cmc
adc
int
inc
aad
out
fsub
jl
test
clc
cmp
push
jno
lea
aas
push
gs
shll
dec
adc
xchg
xchg
jmp
sub
fistl
lcall
data16
insb
out
mov
mov
sbb
jmp
and
outsb
js
xchg
cmp
testb
push
xchg
mov
fldl
xchg
sub
xor
or
mov
inc
pop
out
cmc
loope
add
mov
xor
add
fcmovbe
jo
add
and
mov
sub
aad
or
jl
sti
jmp
add
fsubp
jne
mov
iret
xchg
pcmpgtb
jge
adc
xlat
pop
sarl
adc
sahf
and
std
ljmp
imul
jp
adc
and
and
inc
filds
mov
xor
out
aad
arpl
cmc
cmp
push
inc
inc
jmp
push
jle
adc
out
test
cmp
pushf
movsb
daa
and
test
pop
push
mov
je
lock
adc
ds
jle
mov
inc
and
hlt
pop
jb
out
out
fildl
and
and
xor
negb
out
or
pushl
mov
push
stc
or
repnz
and
dec
jno
mov
dec
xchg
dec
and
xchg
pop
jl
or
jns
adc
std
out
xor
test
push
jne
sub
push
xor
and
ret
add
rorl
mov
fst
fisttpl
inc
aas
sbb
jle
jbe
std
bound
xchg
pushf
test
mov
movsb
les
xor
aad
lret
js
ljmp
je
mov
jne
or
ret
bnd
sub
mov
cmp
ss
pop
and
popf
loop
pop
movsb
mov
cmpl
jbe
lret
aas
pop
push
add
xchg
in
or
jg
push
mov
xlat
jns
cmp
jmp
ja
push
pop
xchg
movsl
lock
sbb
nop
jne
test
and
fistpl
leave
mov
lret
push
cli
sti
ss
imul
movsl
lar
out
daa
push
insb
sti
subb
push
xchg
mov
cmpsb
sbb
fisttpl
or
mov
mov
xor
nop
push
dec
gs
jae
js
pusha
pop
imul
push
sub
test
fcompl
jl
mov
dec
mov
mov
orb
push
int
mov
and
jb
icebp
xchg
icebp
inc
sbb
cmpsb
cmpsb
fidivl
ret
mov
jb
mov
aaa
inc
enter
cmp
repnz
jae
mov
dec
addr16
mov
push
and
xchg
jo
test
inc
dec
mov
push
out
jle
inc
and
cltd
xchg
fiadds
cmpsl
aad
cmp
and
mov
add
in
jns
test
mov
jb
or
shll
cmp
add
add
mov
loopne
inc
sbb
cmc
inc
das
test
push
cmp
imul
xor
push
in
call
loopne
push
dec
pop
loop
or
dec
iret
and
enter
insl
rcrl
lods
movsl
and
cmpsl
loopne
mov
test
lret
push
outsl
push
sbb
dec
push
xor
jnp
hlt
in
divb
data16
das
popa
cmp
pop
sbb
dec
divl
mov
or
mov
pop
out
mov
test
adc
lods
js
push
movsl
call
mov
dec
push
loop
cmp
add
call
into
mov
xchg
das
cmp
insb
pop
sub
in
push
daa
jo
push
push
pop
push
cmp
xor
insl
popf
roll
pop
stc
adc
jge
les
fimuls
sbb
jbe
ret
dec
in
jne
push
lret
xlat
cmp
sbbb
dec
sbb
lahf
lahf
push
scas
ss
mov
ss
pusha
adc
ljmp
test
test
popf
sub
pop
out
enter
jp
jbe
cltd
fsubs
ljmp
fnsave
xchg
fadd
aas
dec
or
pop
mov
sahf
sbb
pop
loope
mov
add
enter
fcomps
in
inc
add
jg
mov
push
daa
mov
sub
in
divb
cmp
push
fstpt
clc
cmp
mov
xchg
sarl
mov
hlt
leave
call
inc
and
sbb
insb
dec
fcmovne
jp
testl
or
inc
sub
in
push
inc
jns
repz
int3
int3
or
ret
jmp
cmp
sarl
orl
jle
push
stos
mov
pop
std
out
dec
pop
int3
inc
test
cmp
shll
ljmp
jae
push
xchg
mov
add
pusha
lahf
jmp
push
mov
adc
jle
adc
push
mov
push
call
subb
and
notb
lods
lea
lods
notl
push
push
aad
xor
lods
dec
adcb
push
push
pusha
push
or
in
push
mov
in
nop
loope
loop
sub
negl
push
sub
outsl
jle
imul
fistpl
sbb
fldt
clc
clc
std
ret
cmp
ds
pop
popf
fsubrs
inc
xchg
mov
popa
jns
cmpsb
xlat
movsb
pop
mov
pop
popf
popa
mov
and
push
and
or
lock
mov
hlt
aaa
pop
push
das
dec
cmp
jl
xchg
iret
push
ret
inc
in
rcrb
sti
movsb
out
dec
shrl
out
xchg
xchg
je
negl
sub
or
inc
cmp
test
inc
cs
mov
jnp
and
jmp
adc
push
dec
dec
outsl
in
cmp
loope
xchg
loop
movsb
inc
pop
in
mov
lock
cmpl
push
test
push
jmp
subl
jmp
adc
add
daa
loopne
sbb
lods
jbe
mov
jb
popf
fwait
pop
loopne
mov
inc
imul
push
pop
dec
jnp
bound
adc
sub
push
jbe
push
ret
icebp
fcoms
mov
leave
push
push
sub
rclb
sub
jle
adc
divb
push
ljmp
mov
adc
jno
xor
stc
xchg
xchg
test
gs
xchg
mov
cmp
sbb
sar
pop
or
push
les
std
aam
outsb
sbb
outsb
je
stc
jl
cli
jl
out
mov
loope
or
movsl
icebp
push
dec
lahf
ss
pop
popf
and
sahf
push
sub
or
aaa
add
icebp
adcl
gs
mov
jbe
mov
push
icebp
cmc
outsb
pop
addl
xchg
idivl
inc
jmp
inc
push
gs
add
or
xchg
add
cmpsl
pop
data16
push
rcll
jg
push
and
jno
mov
add
sub
daa
xlat
fcom
pop
push
js
orb
dec
mov
xor
leave
rsm
lock
cmp
sub
mov
and
iret
sub
xor
icebp
inc
fs
imul
adc
fwait
out
pop
repnz
fstps
xor
cltd
mov
gs
aaa
push
and
sbb
fisubrl
adc
hlt
imul
mov
mov
aam
lds
lods
cmp
pop
mov
inc
inc
ficoml
insl
nop
or
fildl
ret
popf
orb
mov
mov
inc
imul
jp
fwait
add
sbb
add
mov
mov
push
and
xchg
and
jno
jno
xchg
shrb
sbb
or
cltd
mov
pop
adc
sub
fidivl
cbtw
movsl
mov
or
nop
jb
jbe
inc
mov
dec
nop
pop
pop
stos
or
shll
xchg
adc
lcall
jne
js
js
fs
xor
fwait
xchg
test
mov
cmc
inc
cmpsb
mov
cwtl
mov
outsb
insb
negb
dec
scas
sub
sbb
xchg
popf
mov
movb
jecxz
js
insl
xchg
sbb
orb
xchg
shrb
ja
out
orb
push
mov
fistps
roll
mov
in
aaa
pop
or
fisubrs
outsb
popf
into
mov
sahf
int3
add
mov
insb
inc
fimull
sbb
push
insb
mov
jmp
mov
jmp
xchg
outsb
push
dec
adc
mov
push
mov
sub
aaa
xchg
push
cmp
pop
shlb
stc
lods
pop
ret
insb
in
lret
std
outsl
out
repz
jmp
xor
fcomps
mov
ja
lcall
fadd
pop
mov
mov
mov
movsl
xchg
mov
js
int3
lret
out
add
cmp
xchg
push
adc
pop
jbe
push
pop
out
nop
xor
push
xorb
out
scas
test
js
arpl
loop
jg,pt
int3
mov
jmp
test
fidivrl
out
cmp
pop
mov
sbb
std
rcrl
andb
add
std
gs
das
enter
xor
fmul
fstpt
aaa
ret
mov
dec
loope
cmp
mov
scas
pop
xchg
mov
sub
testb
in
imul
xchg
pop
pusha
xchg
dec
daa
stos
sar
ljmp
and
sub
ss
insl
out
xor
and
push
inc
popf
xor
jno
xor
jno
push
fisttps
inc
out
dec
cmp
stos
insb
mov
add
sbb
cltd
mov
sub
push
or
dec
movsl
aam
push
ret
mov
cs
imul
sbb
ret
movsb
bound
cmp
lcall
hlt
imul
pop
push
dec
push
xchg
shll
lret
neg
jmp
xchg
inc
push
in
mov
fwait
xor
jns
das
jnp
loope
icebp
xchg
mov
cmpsl
movsl
fcomip
sub
cmp
xchg
sub
scas
leave
push
ret
mov
pop
mov
shl
lret
dec
pop
inc
ja
lahf
push
pop
or
int
adc
xor
mov
dec
popf
dec
popf
in
or
adc
mov
inc
sbb
orb
repnz
outsb
test
or
iret
ja
and
inc
insl
xchg
out
mov
cwtl
push
shlb
mov
cpuid
lret
xchg
sub
inc
clc
cltd
adc
add
insl
push
dec
fnsave
pusha
ret
ja
movsl
notl
fwait
or
mov
cld
and
addr16
push
stos
es
leave
aam
cmp
dec
and
js
mov
ret
push
mov
cltd
inc
into
cltd
pop
mov
xchg
dec
cmp
adc
test
cmpsb
mov
fldt
push
dec
stc
sbb
daa
out
inc
scas
adc
ja
ret
fucomi
mov
imulb
imul
pop
jno
orb
mov
mov
xchg
outsl
push
shl
push
icebp
insb
out
out
ss
stos
andl
in
cltd
out
pop
sbb
ficomps
icebp
jg
xor
faddp
xor
dec
adc
lcall
mov
jne
pushf
pop
or
mov
add
add
insb
push
repz
jno
sub
inc
pop
aad
cmovne
jg
sub
js
fadds
in
jp
xor
hlt
cs
in
jo
cmp
popl
inc
ja
out
xchg
jns
in
cmp
or
div
mov
pop
xor
mov
scas
mov
into
lods
mov
sbb
cmc
pop
add
cmp
stc
jmp
cmp
std
push
cmp
jns
test
xchg
cmp
mov
fistps
or
in
dec
pushf
mov
pusha
pusha
mov
pop
xchg
adc
add
mov
and
fs
dec
jecxz
fdivrs
or
jmp
sbb
dec
sti
mov
adc
jle
aas
mov
xor
int3
push
leave
sti
inc
pop
loopne
fucomp
adc
neg
sbb
test
dec
mov
mov
inc
xchg
xchg
in
int3
std
roll
pop
dec
lcall
cmp
push
pop
repnz
dec
add
jbe
inc
xchg
add
sub
divb
imul
pop
or
dec
cld
cmp
pop
popf
pop
pushf
sub
adc
aad
sub
mov
sti
mov
mov
adc
ss
mov
jg
paddw
out
cmp
test
and
pop
out
add
orl
mov
add
les
pop
outsb
pop
lahf
xchg
jae
xchg
or
adc
and
and
sbb
cmp
or
pop
add
adc
and
pushf
scas
pushf
jne
jmp
jg
mov
sbb
inc
lret
adc
push
lock
fwait
int3
dec
pop
mov
sub
cwtl
js
cli
jmp
out
inc
sbb
add
sub
adcl
xor
movsl
outsl
xor
or
xchg
inc
mov
rclb
imul
push
nop
call
sub
repnz
sti
fucomi
mov
adc
pop
les
xchg
xchg
sbb
fisubrl
xchg
addr16
inc
in
scas
loopne
sub
add
and
popa
lret
in
adc
and
inc
pop
mov
mov
je
mov
aaa
mov
scas
xor
lds
aam
jp
or
pop
shl
pushf
sahf
std
sub
jb
fstpl
sub
cmpsl
mov
das
inc
into
mov
lea
outsb
out
stos
or
mov
test
push
pushf
pusha
outsl
enter
loopne
outsl
pop
mov
push
shl
pop
jno
xor
xor
adc
aaa
sbb
js
mov
loopnew
xchg
gs
fdivrl
sub
iret
mov
jnp
dec
inc
repz
cs
pop
and
cmp
leave
adcb
pop
jle
cltd
push
lea
in
fldcw
loopne
push
push
pushf
xchg
adc
push
stc
and
stos
inc
mov
ljmp
push
cmp
lds
sbb
add
notl
xchg
and
sub
jb
cmp
adc
ret
arpl
out
jecxz
iret
out
in
add
xchg
dec
cmp
inc
pop
cmp
cld
push
in
xchg
mov
push
cmpsb
jbe
jp
xchg
push
pop
and
subl
es
lock
movsb
out
fdivl
jge
loope
fcmovb
in
push
popf
lret
cmp
xchg
fsubp
jo
xor
fiadds
popa
scas
das
sub
dec
out
ja
mov
pop
js
fisubrl
xor
mov
jns
jecxz
jne
ret
popf
ud2
imul
jnp
lret
push
testl
stos
movsb
add
jle
fadds
outsl
push
ret
aas
push
xchg
push
dec
fistpll
cmp
mov
jg
push
cmpsb
dec
mov
xchg
pop
adc
xor
adcb
mov
hlt
push
xchg
fsub
jge
repnz
xchg
loope
stos
leave
cmpsl
add
mov
aam
scas
sbb
andl
or
mov
rolb
outsb
cmp
or
adc
xchg
out
xorb
enter
dec
dec
add
mov
sahf
push
leave
pop
sbb
sti
in
inc
pop
and
pop
xor
lret
xchg
shlb
pop
xor
aas
cmpsb
jb
jle
push
arpl
call
js
xchg
aaa
push
or
or
dec
push
and
add
jae
mov
cwtl
fcoms
fadds
push
shl
rcrb
xor
nop
dec
lret
mov
add
js
or
mov
in
jp
std
in
rcll
loopne
dec
mov
pop
scas
inc
test
iret
sbb
subb
push
out
daa
mov
insl
pop
stos
fmull
mov
adc
pop
lock
sub
sub
shlb
insb
leave
jl
sbb
xor
daa
jl
push
inc
inc
addb
lods
jl
repz
lock
int3
adc
lcall
pop
xchg
push
xchg
stc
rcll
sti
addr16
fimull
push
mov
divb
or
inc
test
push
or
cmc
pop
fcmovnbe
jb
dec
xchg
pop
xlat
mov
xchg
lea
mov
push
jp
mov
scas
sbb
rcrb
rorb
sbb
repnz
aaa
lahf
xlat
nop
add
inc
movsb
mov
and
dec
xchg
icebp
push
adc
sub
subl
push
jae
sub
xchg
cmp
add
or
aam
cwtl
rcll
dec
out
adc
in
bound
xor
int
aad
lahf
bound
sub
stos
pusha
adc
or
and
mov
jecxz
sti
repnz
dec
nop
push
or
push
xchg
sarl
jns
addl
clc
mov
cmpsl
and
push
mov
hlt
jle
in
inc
into
xchg
push
rcrb
popf
cwtl
test
pop
mov
and
jecxz
sbb
idivb
xchg
push
hlt
or
ljmp
mov
push
outsb
insb
push
insl
cmpsl
daa
fstpt
es
mov
lret
aas
cmp
inc
fs
mov
sub
xor
add
movsl
push
popa
push
pop
sti
xchg
fsubr
mov
mov
imul
stc
mov
sub
mov
adc
xor
mov
sub
lret
cmp
jb
cmp
mov
cmpsb
jnp
mov
adc
addr16
adc
pusha
popa
xchg
inc
mov
in
ss
shlb
je,pn
push
je
mov
push
ljmp
out
mov
pop
inc
leave
repz
pusha
loop
fsubrs
mov
jbe
popf
mov
into
test
add
in
dec
das
out
out
dec
and
shlb
push
sti
imul
fistpll
inc
cmpsb
xor
sbb
mov
sbbb
cmp
rcrb
mov
in
outsl
cmpsl
mov
or
push
sub
fsubrl
call
cmp
sbb
mov
jbe
es
and
mov
inc
and
adc
popf
push
jb
mov
xor
in
mov
mov
xor
jle
and
in
repz
adc
sub
subb
inc
cmp
push
sbb
mov
mov
inc
dec
push
xchg
jae
sbb
adc
js
dec
test
shrl
mov
xor
mov
pusha
les
nop
pushf
push
ds
mov
lahf
xor
cmp
pop
repnz
rol
aas
adc
xchg
or
xor
jnp
jge
out
xchg
mov
push
jge
mov
pushf
mov
inc
push
movsb
lret
dec
fdivrs
mov
aad
gs
fcoml
movsb
jmp
cwtl
adc
dec
push
pop
dec
insl
rcrl
lret
or
es
add
sti
test
data16
fisubrl
or
inc
push
lret
sbb
aad
push
sahf
pop
sbb
fidivs
xchg
mov
xchg
xchg
stc
ljmp
mov
mov
hlt
cmp
mov
adc
lds
loopne
repnz
sub
insl
sbb
leave
push
xchg
mov
push
fstpt
inc
decb
int3
push
addr16
das
enter
pop
call
imul
addb
push
sarl
add
jmp
push
cmp
mov
andl
scas
scas
push
pop
stos
cmovno
sbb
xchg
clc
aad
jp
add
loopne
arpl
scas
and
faddp
in
movl
out
leave
adc
movsl
xchg
out
aaa
push
lods
leave
push
lret
cmp
jns
push
int3
mov
fsts
outsl
push
cld
mov
mov
mov
sub
enter
cmp
movsl
fwait
sbbl
icebp
movsl
inc
in
jbe
mov
hlt
pusha
rcrb
cmp
loopne
and
add
adc
fists
into
sbb
insl
in
cmpsb
push
xor
lahf
sbb
add
adc
test
inc
arpl
cld
jp
jmp
in
lea
push
dec
lret
and
inc
fwait
mov
cltd
inc
cmpl
jmp
int3
out
inc
movsb
shlb
scas
push
bound
loope
xchg
cmpsb
je
fiadds
out
bound
gs
jne
mov
movsl
push
aaa
jg
lds
mov
inc
inc
add
jg
addl
mov
movsl
out
and
adc
fldl
lret
aam
repz
outsl
push
aas
inc
mov
aas
inc
cli
push
ja
enter
mov
or
shll
aad
mov
rcrb
dec
ljmp
xchg
and
pushf
out
cltd
inc
out
cltd
loop
jl
sti
das
add
mov
inc
xor
out
cmp
xor
sub
pop
movsb
stos
test
dec
push
fs
ficomps
push
cmp
sarl
xor
jne
and
mov
mov
xchg
add
adc
push
cli
cmc
jg
mov
popa
daa
in
daa
or
xor
jne
dec
xchg
cmp
mov
mov
xchg
or
idiv
mov
aad
inc
inc
sbbl
and
mov
adc
pop
mov
loopne
dec
and
pushf
fucom
mov
movsl
repnz
pop
int
pop
dec
mov
push
outsl
inc
cs
sub
fistpll
mov
mov
in
testl
movsb
jge
cmpsb
xor
cmpsl
divl
lods
pop
addr16
scas
mov
fidivrs
das
outsl
push
mov
cmp
sbb
je
mov
jge
in
mov
js
mov
in
fcoms
push
movsb
mov
add
mov
lahf
cmp
pop
das
fistpll
add
insb
add
xlat
push
leave
push
push
sub
insl
in
pop
sbb
psllq
push
sbb
ss
and
jns
stos
jp
and
or
push
dec
lods
and
cmp
xchg
xchg
gs
mov
iret
int3
pop
je
xor
sub
in
pop
shrl
pop
repnz
push
push
mov
outsl
lret
movsl
jo
int3
subl
inc
fs
sub
xor
jge
pop
pop
fadds
pushf
add
push
sbb
jp
jle
aaa
jmp
clc
or
aas
gs
cmp
sub
jmp
xchg
jge
add
into
lcall
sub
fnstsw
or
push
ret
or
outsl
stos
lahf
lds
or
out
lret
cmp
xor
stc
in
jns
rep
push
repnz
rcrb
data16
faddl
lahf
outsb
not
pop
sub
fxch
add
push
and
pop
paddb
movsb
cmp
sbb
xor
mov
add
das
jbe
ja
int3
sbb
xorl
fisttpll
cld
adc
add
mov
sahf
add
jl
adc
mov
data16
mul
xor
cwtl
dec
cmp
lods
cli
data16
jecxz
jecxz
pop
loope
xchg
imul
jmp
cmpsl
mov
repz
adc
dec
push
and
fdivl
dec
mov
dec
or
idiv
jb
and
sahf
jge
pop
jge
ljmp
xchg
lahf
mov
and
cltd
push
shr
mov
push
outsb
push
mov
push
popf
int
pop
pop
mov
into
cmp
xor
or
imul
lock
mov
int
aaa
jbe
mov
loopne
int
dec
mov
mov
imull
call
and
cmp
lret
loop
mov
fsts
sahf
out
and
cwtl
xchg
push
cmp
stc
push
cwtl
fs
fld
rcr
lahf
fmuls
in
cmpsb
shll
ds
daa
jmp
push
fidivrl
scas
outsl
lea
stc
test
mov
fcmovnu
loop
add
adc
fstpl
addb
adc
xchg
dec
sub
fwait
mov
mov
andl
sbb
cmp
in
mov
pushf
mov
pop
icebp
fwait
lock
push
inc
push
push
push
and
pop
xorb
mov
fnstenv
dec
sub
jl
sub
jp
mov
pop
es
add
sub
adc
push
or
popf
xacquire
leave
sti
pop
gs
adc
arpl
in
inc
lahf
jecxz
push
pop
push
frstor
aam
pop
adc
push
inc
aad
cli
sbb
pop
dec
or
shrl
xlat
push
sarl
int
fcompl
lds
nop
and
ds
mov
shr
test
pop
les
addb
out
jae
cmp
jns
bound
pushf
mov
or
popa
pushf
stos
cmp
mov
cmp
xlat
aam
mov
scas
je
pop
ficomps
fidivrl
xor
aad
mov
call
cmp
push
scas
sbb
mov
pop
cwtl
mov
xchg
mov
ret
insl
addr16
and
mov
jg
lods
mov
movsb
mov
scas
xor
hlt
aad
cli
ret
stc
aaa
in
test
jne
insl
or
test
hlt
mov
add
xchg
cltd
shl
pop
jecxz
insb
cmp
popf
push
jo
in
mov
xchg
add
js
sub
add
inc
jle
test
loope
call
clc
rcr
mov
inc
movsl
inc
pop
fadds
popaw
mov
lods
sarb
outsb
jnp
clc
push
dec
sbb
clc
testl
int
adc
jecxz
stos
loop
cmc
repz
cmp
fs
mov
mov
lcall
mov
das
dec
imul
subb
push
push
stos
gs
insb
fnstcw
lret
aas
lods
notb
call
xchg
or
cmp
mov
lret
and
sbb
mov
sub
lret
cld
adc
push
pop
lea
mov
xchg
pop
lcall
mov
pop
dec
cli
xor
lods
test
sbb
push
lods
hlt
mov
test
gs
or
gs
nop
pop
out
insb
mov
idivl
in
cwtl
adc
xor
scas
mov
lea
inc
jne
sbb
or
dec
insb
jmp
fcomps
dec
pop
jl
sti
loope
mov
outsb
or
cmp
sbb
sbb
leave
push
sbb
sbbb
mov
and
test
mov
add
icebp
mov
push
fidivl
in
add
in
faddl
test
adc
inc
ret
push
mov
xor
pusha
jo
jb
pop
popa
ljmp
mov
or
imull
jge
sbb
mov
in
xchg
adc
arpl
sub
or
mov
aad
jns
movsl
mulps
lea
fmuls
mov
sti
loop
pop
les
pop
mov
xchg
icebp
and
lds
aad
jg
pmuludq
and
xchg
cwtl
outsl
adc
mov
popf
add
adc
cmp
jns
inc
subl
mov
dec
push
std
and
or
pushf
cmc
jns
popf
push
out
scas
mov
pop
mov
rcrl
sbb
cmp
lods
cmp
mov
aas
xor
push
push
fwait
and
jne
pop
aaa
inc
icebp
or
sub
push
popf
xchg
sub
add
imul
lea
mov
popf
or
add
cmp
dec
jbe
mov
pop
pop
adc
jno
adc
dec
test
scas
xlat
and
add
add
pop
and
and
insb
push
insb
push
stos
insl
dec
fldenv
cltd
mov
cmp
xchg
xchg
pop
inc
and
mov
test
ss
cmp
xchg
ja
cmp
push
pop
loopne
jg
dec
cmp
xchg
shlb
mov
out
add
out
jb
adc
ja
rcrb
fcomps
inc
mov
or
inc
cmp
xor
dec
hlt
cmc
xchg
xchg
mov
jg
stos
leave
or
movsb
jp
sub
jo
popf
rclb
mov
fwait
pop
pusha
cmp
inc
and
loope
scas
push
ret
rcrb
in
xchg
sbb
fcomps
pop
dec
mov
in
inc
data16
fucom
pop
cmp
jg
insb
leave
es
rol
les
pop
jo
mov
jl
cmc
out
sub
and
or
fmul
sub
or
clc
rcrb
rol
int
mov
adc
xor
and
std
sub
add
insl
rcr
shll
sbb
mov
mov
fcoms
into
std
xchg
jno
out
add
filds
pop
cmc
jbe
popa
cmpsl
lret
xchg
pop
andb
stos
adcb
gs
lods
mov
xchg
popa
add
sub
mul
imul
inc
scas
fldt
popf
ja
mov
pop
fcomp
lds
xchg
repnz
pop
jbe
sub
inc
add
in
dec
insb
xchg
nop
dec
inc
icebp
loope
adc
jg
cmpb
int3
filds
movsl
leave
add
xor
hlt
call
push
xor
cmp
dec
fsubl
xchg
sbb
dec
ret
nop
mov
imul
xchg
jb
or
sub
mov
sbb
mov
push
stos
call
enter
mov
cmc
sahf
aaa
adc
cmp
repnz
push
push
fldenv
xchg
outsb
mov
lcall
dec
xor
xor
inc
xor
dec
lea
mov
push
mov
push
fstps
and
xchg
push
test
sbb
dec
test
aas
test
mov
fidivs
cmp
loopne
sub
sub
adc
inc
mov
cld
jp
or
lods
xlat
lock
mov
cmp
clc
movsl
iret
jle
mov
push
in
decb
and
ret
iret
dec
cwtl
fstps
inc
mov
roll
lock
fsub
ljmp
sbb
sub
loop
js
das
sti
inc
and
mov
inc
mov
jne
add
push
or
daa
add
inc
flds
ja
mov
jne
aas
dec
xchg
jnp
mov
mov
mov
movsl
popf
popf
xchg
roll
cwtl
dec
jbe
fadds
xchg
shlb
mov
or
inc
shrb
movsl
int
inc
cmp
fisttpl
sti
out
xorb
mov
arpl
enter
call
dec
dec
xchg
sbb
and
jns
push
ret
pop
inc
xor
ret
aaa
repnz
or
testl
adc
das
push
jb
dec
shll
addl
mov
pop
das
out
repnz
pop
push
adc
push
mov
cmp
sub
scas
movsb
jl
std
jns
adc
push
mov
pop
movsb
mov
mov
cmp
jmp
shrb
das
and
or
or
jle
test
sbb
mov
add
xchg
xchg
stos
inc
and
and
movsl
pop
xchg
mov
in
sub
repz
and
sbb
push
out
inc
and
mov
or
cs
adcl
adcb
mov
addr16
xchg
lea
mov
sub
repz
and
sbb
mov
mov
popf
mov
repz
fdivrs
push
and
pop
pop
add
inc
into
stos
faddp
push
in
cmp
push
test
mov
sbb
stos
lea
dec
mov
push
notl
loop
xor
xor
pop
lea
mov
push
add
sbb
mov
lods
push
shrb
jecxz
es
or
mov
cltd
push
popf
subl
sbb
adc
xchg
sbb
sahf
lds
loopne
xchg
test
enter
icebp
mov
psubusw
fninit
mov
repz
push
outsl
inc
adc
push
sbb
lea
push
cwtl
test
pop
add
mov
dec
loop
jb
fadds
cmp
fimuls
push
cmp
mov
test
sbb
mov
jg
pop
sarb
pop
in
sub
pushf
push
inc
jl
inc
lret
xor
sbb
lret
sub
jbe
lret
push
add
mov
arpl
jmp
loope
dec
sbb
push
mov
sub
daa
nop
js
rcrb
mov
sahf
iret
sbb
call
ljmp
clc
out
cltd
jl
shr
xchg
jge
push
or
add
and
arpl
ret
dec
adcb
mov
sbb
arpl
xchg
and
xor
aam
rcll
out
addr16
addr16
mov
inc
subb
jg
dec
arpl
stc
push
mov
stc
insb
rol
lcall
pop
adc
cmp
stos
sti
popa
sub
sbb
outsb
sub
pop
pop
lret
inc
test
or
loopne
mov
dec
outsb
nop
movsb
dec
orb
jbe
jno
jns
sar
test
rcrb
mov
sti
fmull
sbb
insl
push
mov
adc
movsb
dec
mov
aad
or
xchg
mov
aad
jge
xchg
xchg
lahf
sub
es
xor
add
mov
xchg
sub
mov
push
add
xor
pop
push
mov
jno
add
gs
cmp
subl
xor
in
cmp
dec
sarb
xchg
cmp
push
pop
and
xchg
inc
sub
ss
push
jns
adc
xchg
jmp
pop
cld
test
pop
add
out
cs
or
or
jbe
and
xchg
cmc
js
insb
das
test
mov
push
fwait
stc
pushf
add
pop
add
dec
out
and
cmp
lcall
mov
adc
gs
xor
and
dec
fildl
icebp
lcall
adc
ret
ja
jmp
mov
adc
and
pop
subb
popf
out
push
cmpsl
sbb
cwtl
adc
pop
mov
test
out
mov
loope
inc
mov
push
popa
movsb
jo
nop
jl
stos
fists
mov
mov
mov
lods
andb
inc
push
sbb
icebp
jl
add
push
and
sahf
hlt
test
scas
jecxz
pushf
jne
stos
jbe
cli
repz
xor
xchg
cli
inc
fs
gs
and
jmp
mov
shrb
addr16
dec
jle
mov
cmp
adc
scas
nop
dec
or
sub
movsl
fwait
add
push
or
pop
dec
mov
loop
xorl
into
jne
add
loopne
mov
add
push
fs
jecxz
push
loope
pop
mov
xor
in
ds
cs
jl
and
mov
sbb
dec
xchg
js
fsubrs
test
cli
imul
jp
std
or
cwtl
xor
lret
mov
push
sbbl
clc
daa
pop
add
xchg
popa
sub
xchg
out
sbb
and
or
pop
ss
push
icebp
lea
jg
clc
jmp
scas
sbb
rcrl
adc
les
add
out
scas
cmp
push
add
and
mov
sub
call
sbb
inc
mov
xchg
test
mov
cmp
sbb
mov
cs
mov
xor
loopne
insb
mov
mov
push
sub
fdivrl
mov
mov
mov
testl
mov
faddl
sub
mov
inc
sub
orb
mov
inc
mov
jl
push
bound
push
rorl
dec
mov
jle
add
std
add
mov
fs
pop
jno
dec
xor
sbb
int3
mov
fdiv
jnp
sbb
jmp
xchg
loop
or
pop
xor
mov
push
push
ret
cld
aad
push
add
cmp
rcl
dec
mov
dec
and
arpl
pop
scas
adc
dec
jb
mov
mov
hlt
movsb
rorl
cmp
mov
ljmp
mov
movsb
xor
push
ljmp
mov
jp
mov
adc
jnp
popf
arpl
mov
call
jo
loopne
jp
movsl
pop
sub
movsb
dec
push
fildl
jnp
push
inc
mov
jnp
fs
xor
scas
xor
xchg
fldcw
and
jge
and
xorb
iret
cmp
mov
push
popf
stos
inc
pushf
scas
add
bound
out
push
nop
scas
jle
in
jmp
jbe
xchg
mov
adc
adc
lds
int
sbb
inc
fcom
adcb
mov
shlb
mov
jmp
addr16
lock
ret
je
jmp
jnp
leave
jl
in
movsl
mov
and
fwait
sub
js
mov
stos
imul
shrl
cltd
lahf
cmpsl
and
in
and
loopne
loope
mov
mov
pop
xchg
cmp
xor
and
fxch
aas
add
push
jae
cltd
aam
pop
popa
jnp
mov
sbb
jmp
mov
movl
std
lock
and
xchg
mov
add
movsb
push
xchg
enter
mov
sbb
call
in
push
fs
push
orb
cld
push
aam
aam
gs
pop
jo
add
xor
push
ret
mov
out
into
dec
lea
dec
cmpsl
movsl
in
gs
lock
aas
pop
push
xchg
xor
sarl
jp
icebp
and
call
clc
gs
sbb
ds
bound
mov
pusha
cmp
fidivs
lock
dec
jp
outsb
dec
cmp
into
and
sti
aaa
shlb
cmpl
lret
xor
fsts
popf
iret
fsubs
fidivl
add
dec
mov
cwtl
mov
pop
add
jo
inc
or
out
out
xlat
pushf
mov
pusha
bound
std
popa
lret
sub
out
lods
lds
and
push
fcmovu
add
xchg
stc
rol
cmp
xor
mov
mov
push
stos
mov
dec
ja
mov
push
jle
pop
fs
call
or
mov
mov
jg
dec
and
mov
fidivl
int3
mov
test
fmull
xchg
cmpsb
adc
pushf
fldcw
fldenv
push
cmp
loopne
inc
inc
lds
and
in
push
mov
icebp
cmc
fs
sbb
arpl
or
adc
scas
xchg
lcall
lea
inc
jecxz
jnp
or
lahf
sub
outsl
xchg
test
pusha
and
pusha
inc
xchg
je
pop
xor
inc
xor
fisubrs
idivb
xchg
enter
mov
popf
or
jle
adc
or
mov
xchg
ds
and
fs
mov
scas
notb
hlt
push
lea
fdiv
xchg
jg
ss
mov
inc
dec
sub
adcb
push
lret
mov
dec
sub
pop
xor
mov
pop
out
inc
mov
dec
mov
js
jno
mov
adcb
jb
pushf
lock
push
xchg
call
cmp
push
into
loope
pop
testl
loope
scas
mov
repnz
out
or
aad
add
imul
fsub
dec
and
outsl
mov
into
add
xor
pushf
mov
pop
xchg
jl
cli
and
rcrl
sub
out
fsubr
jp,pn
mov
push
lcall
dec
outsl
dec
es
lret
xchg
xchg
pop
cmpsb
xchg
push
mov
xchg
push
push
shld
sbb
ret
mov
xor
ret
stc
das
inc
stc
andb
icebp
imul
popa
xlat
stc
rorl
fadds
test
out
inc
je
jns
cmp
rcrl
sbb
mov
sub
outsl
in
aaa
xchg
arpl
out
push
mov
inc
xchg
scas
or
and
shrb
mov
bound
dec
ret
mov
andl
cli
cld
adc
in
adc
mov
pop
fcomip
jmp
js
fmull
adc
hlt
ror
inc
in
cltd
pop
dec
jb
adc
stc
or
xor
dec
pop
insb
lahf
cmp
repnz
fdivs
sbb
clc
lret
scas
sub
push
jl
dec
ud0
mov
test
jo
ret
or
push
cwtl
or
dec
dec
je
pop
loope
popa
movsb
aaa
out
test
lahf
nop
cli
roll
add
sbb
in
mov
ret
add
bound
hlt
aaa
inc
pop
cmpsl
outsb
xchg
add
push
lahf
lret
pop
inc
nop
mov
stc
shll
push
addl
sbb
adc
dec
lods
cmpsb
pop
ds
pop
push
ret
inc
jnp
les
mov
rorl
and
jne
test
mov
ljmp
mov
jmp
xor
pop
out
cmpl
mov
in
stos
or
pop
push
loopne
cmp
rorl
or
jae
adc
push
mov
sub
add
sahf
imul
mov
dec
mov
and
orb
push
iret
sub
stos
sbb
add
jo
orb
pop
push
sub
inc
popf
cli
and
stos
mov
mov
and
pop
bnd
mov
jb
shll
sub
push
data16
orl
adc
xchg
mov
inc
clc
push
sbb
mov
fbld
pop
sbbl
xchg
jae
cmp
fiaddl
loop
pop
adcb
cmp
sub
mov
dec
ljmp
ljmp
dec
or
xor
mov
repnz
dec
mov
pop
adc
sbb
jp
mov
cmpsb
dec
sti
dec
or
xchg
adc
ficoms
push
and
mov
out
sahf
cmp
push
dec
push
inc
mov
cs
pop
cmpsl
shld
ss
sub
jnp
ds
add
scas
movsb
ret
movsl
outsb
movsb
sbb
xchg
mov
adcb
fwait
pop
jae
jecxz
mov
inc
cmpsb
scas
inc
test
cltd
pushf
sbb
push
adc
adcl
inc
adcb
cmp
ss
inc
pop
daa
fisubrs
cmp
xchg
mov
out
xchg
gs
data16
cwtl
ds
pop
mov
mov
test
test
and
test
and
xlat
out
pusha
adc
dec
aaa
in
add
and
push
pop
cmp
inc
mov
fstps
or
outsb
xor
mov
xlat
jb
lods
xchg
inc
call
lcall
push
jg
jl
cmp
dec
mov
add
mov
mov
and
shlb
pop
in
adc
mov
sbb
lcall
inc
mov
popf
sarl
jb
call
pushf
lods
repz
cmp
xchg
enter
lock
or
ds
in
push
das
in
js
pop
dec
das
xchg
sbb
push
cs
call
and
cmp
loop
cmp
std
add
adc
pop
bound
add
push
mov
arpl
sarb
and
in
les
cmpl
addr16
adc
inc
pushf
mov
pusha
adc
cli
push
or
test
sarb
cmp
addr16
call
xchg
mov
in
push
fcompl
jecxz
mov
int
lods
fwait
lret
cmp
shll
mov
insl
jbe
iret
ja
cli
add
cli
les
mov
sub
adc
in
xchg
daa
call
mov
testb
leave
jb
ret
mov
sbb
add
lds
out
jl
pop
adc
push
andb
aas
mov
test
xchg
jbe
push
push
or
add
orl
jle
out
testl
imul
pop
test
sub
test
enter
test
pop
cli
iret
add
jne
bound
adc
push
sub
leave
icebp
orb
subl
and
lods
sub
stos
jecxz
cmpsl
pop
mov
lahf
inc
mov
push
push
mov
sub
and
jbe
int3
push
movsl
mov
sbb
xchg
sahf
clc
mov
fsts
mov
or
dec
fcomi
popf
cwtl
mov
mov
jle
daa
movsl
and
cs
mov
fwait
in
stos
bound
arpl
iret
divb
in
xchg
hlt
pop
and
sbb
mov
outsl
mov
stc
sbb
clc
jp
push
in
cmp
into
stos
cli
fsubrp
in
aas
sahf
int3
xchg
xchg
sub
mov
xor
rolb
push
sbb
pop
sbb
popf
ja
out
or
repnz
inc
lods
test
cmp
sub
mov
pop
mov
fs
sub
jmp
xor
and
push
int3
inc
stos
push
mov
sbb
adc
ret
popf
mov
call
inc
aas
xor
gs
push
rcrb
ja
xor
mov
in
clc
xchg
cli
or
add
pop
in
rcrl
stc
call
out
addr16
outsb
jns
shrb
jno
sub
jmp
push
and
or
dec
inc
dec
mov
fistps
jle
xchg
push
jo
ret
xor
mov
xchg
inc
push
test
adc
ret
aaa
movd
xor
jb
pop
jmp
pop
int
jae
push
lret
jb
xor
cli
pop
cmp
pushf
sub
mov
inc
addb
mov
out
lods
mov
mov
scas
enter
push
mov
push
push
or
push
and
daa
aam
adc
movb
cmpsl
cmp
test
xorb
mov
imul
in
loopne
mov
push
mov
cmp
pop
xchg
dec
push
jmp
jae
shlb
mov
mov
and
sbb
subps
pop
push
mov
adc
mov
pop
mov
jo
ja
pop
pop
xchg
scas
sub
sub
cmp
dec
dec
in
std
fwait
icebp
cmp
pop
add
mov
fsubrs
mov
inc
mov
enter
xchg
or
mov
leave
imul
xlat
int3
and
add
inc
ja
pop
xorl
push
iret
mov
adc
movsb
test
into
lcall
mov
sub
test
rol
in
fists
pop
xchg
es
sarb
mov
xchg
dec
pop
shll
inc
jno
jg,pn
test
imul
dec
xchg
es
pop
lea
mov
popa
or
push
imul
jmp
adc
jge
xor
xor
test
sub
icebp
xlat
lods
jp
test
and
inc
mov
outsl
testb
dec
sbb
xchg
add
and
dec
mov
loope
sub
fwait
outsl
mov
xchg
jns
adc
mov
mov
loop
stc
mov
pop
mov
mov
out
sti
insb
pushf
es
xchg
lds
xchg
adc
and
cmpsb
icebp
int3
clc
and
mov
fcom
cmp
sti
push
push
fisubrs
hlt
repnz
mov
dec
clc
divb
sahf
pop
ffreep
mov
push
pop
stos
adc
add
test
xchg
addl
push
je
pop
pop
int
popa
cltd
mov
subb
dec
sahf
addl
imul
iret
shrb
dec
sub
es
and
inc
dec
hlt
cmp
popf
and
and
int3
stos
sub
out
or
roll
pop
push
fcompl
or
or
out
jmp
cmp
pushf
fs
inc
xor
imul
or
mulb
mov
std
push
fcmovu
push
xchg
xor
daa
push
ret
and
push
inc
push
adcl
dec
pop
mov
adc
mov
mov
jl
repz
mov
subl
bound
push
push
xlat
rclb
sbb
sub
lock
mov
or
in
pop
mov
pusha
and
mov
cmp
jbe
push
mov
push
ds
sahf
popf
fsubrs
or
push
push
jns
or
jbe
cltd
sbb
pop
mov
mov
pop
mov
addr16
inc
sbb
sbb
sub
inc
xchg
call
rorb
mov
cwtl
int3
dec
xchg
fldl
in
or
lods
jecxz
add
xchg
sub
sbb
cmp
jns
jns
push
out
loop
repz
cmpsl
pop
lods
adc
loope
mov
sbb
cmpl
add
ss
inc
out
shlb
icebp
insl
hlt
pop
movsb
notl
inc
pop
push
loop
adc
mov
pop
movsl
imul
sahf
cmp
gs
cmc
in
sub
push
cwtl
dec
inc
dec
pop
push
int
cmp
and
mov
jbe
mov
pushf
daa
out
dec
cmp
movsl
and
adc
loope
leave
or
scas
mov
test
test
into
hlt
push
and
sbb
jle
ljmp
adc
lea
and
xchg
jb
sub
push
mov
incl
dec
adc
leave
cmc
lds
cmp
cmc
push
out
mov
rcr
dec
imul
std
movsb
mov
xchg
adc
pop
ds
gs
stos
cwtl
or
cmpsb
aaa
movsl
add
fsubs
push
sbb
sarl
mov
in
xchg
add
cs
in
inc
ret
rcr
push
lock
outsl
das
jnp
or
es
xchg
je
cmpsb
cwtl
hlt
xchg
pop
jge
mov
gs
pop
mov
push
scas
push
jmp
pushf
inc
mov
scas
daa
mov
xor
scas
jge
xor
xchg
and
add
movsb
arpl
scas
inc
sahf
std
enter
icebp
into
push
rcrb
push
mov
je
adc
pop
adc
es
aad
dec
in
cmp
fsubrl
jp
jmp
test
mov
shll
and
add
mov
icebp
and
imul
mov
sub
das
stc
mov
scas
shr
add
xchg
sub
cmpsb
dec
in
pop
inc
enter
cltd
cmp
push
xchg
sub
fcom
cmp
sbb
pop
mov
das
daa
loope
cmpsl
inc
jo
cmp
popf
xor
iret
adc
mov
test
add
add
adc
inc
rolb
adc
shlb
push
xchg
scas
mov
ret
repz
cli
insl
scas
pusha
int3
push
push
movsb
stc
fdivr
cltd
push
push
les
imul
sub
scas
adc
fisttpll
add
mov
lods
fs
repnz
lods
mov
stos
bound
xchg
mov
je
xor
jp,pn
test
xchg
clc
stos
pop
test
push
popf
enter
xchg
pop
adc
pushf
fcomp
mov
and
cmpsb
xchg
mov
push
loope
jp
mov
sub
sbb
cld
mov
jae
xor
in
cmp
and
jg
adc
outsb
xlat
pop
jmp
enter
int3
lahf
lea
ja
pop
fwait
pop
insb
xchg
pop
out
or
in
mov
or
sbb
push
jbe
mov
nop
loop
pop
cmpb
inc
leave
loopne
sbb
xor
mov
xchg
and
adc
int3
add
inc
and
scas
les
xor
mov
ljmp
jne
aad
cmpsl
jge
cmp
pusha
repz
in
iret
mov
mov
mov
test
adc
jge
enter
sub
cwtl
xchg
imul
pop
rolb
bnd
cmp
add
inc
adc
cmpsl
pop
dec
push
pushf
bound
movsb
addr16
insb
sbb
inc
push
ja
cwtl
rol
pop
and
test
dec
mov
inc
ljmp
out
cmp
ljmp
dec
jns
push
xchg
decl
out
es
js
jmp
popf
pop
adc
das
lods
popf
sbb
xchg
xor
mov
jno
ja
mov
daa
das
mov
mov
inc
scas
es
mov
jmp
lods
sbb
mov
push
repnz
mov
mov
cmp
int
loope
lds
inc
mov
sbb
pop
mov
adc
lahf
repnz
mov
inc
scas
aaa
cltd
or
or
pop
xor
imul
sbb
std
mov
pop
dec
addr16
cmp
dec
loop
xchg
repz
jnp
stos
pop
push
imull
adc
push
sbb
cmc
pop
ret
xchg
clc
jae
add
and
dec
xor
fbstp
bound
fdivs
imul
addr16
test
or
adc
in
push
cwtl
or
mov
aad
sbb
je
jnp
sti
push
popf
psubusw
mov
pop
int
enter
xchg
push
scas
ret
pop
aad
mov
pop
add
incb
fistl
adc
out
in
xchg
xlat
popf
cltd
imul
jle
std
sbb
cmp
scas
inc
sub
ljmp
push
mov
out
stos
and
outsb
adc
mov
push
sub
out
in
out
pop
xchg
add
jp
sbb
or
sub
jns
fs
and
je
mov
jecxz
in
mov
sub
sbb
cmp
pop
mov
test
cmp
mov
mov
popl
and
cltd
ja
xor
in
mov
and
ffree
mov
out
scas
and
cltd
mov
mov
mov
mov
scas
test
inc
movl
out
arpl
js
lret
lods
lret
in
jmp
ljmp
fidivrl
dec
add
dec
jb
aas
adc
add
movsb
sub
add
or
jge
and
sbb
adc
lods
xor
divb
mov
mov
daa
jecxz
idivb
insl
outsl
bound
jno
sub
cmp
nop
push
sbb
xchg
mov
out
add
pop
cmp
push
sub
jae
imul
test
mov
adc
mov
inc
movl
sti
loope
jb
add
jle
push
and
gs
inc
les
lods
mov
int
ret
cmp
inc
mov
dec
cmp
push
xchg
int3
adc
call
jns
xchg
pusha
cwtl
xchg
mov
dec
push
test
pop
mov
std
out
notb
pop
jnp
sub
xlat
cltd
cli
fmull
jb
mov
sbb
xor
lahf
push
stos
faddp
jp
jge
sub
jb
push
icebp
js
aad
jmp
and
shrl
cmp
jnp
mov
push
shrl
in
aam
stc
or
fmul
scas
inc
push
push
hlt
clc
scas
add
inc
add
pop
scas
iret
xchg
xchg
push
adc
mov
push
fldl
js
leave
lret
cmp
or
or
adc
mov
and
push
dec
dec
cmp
mov
ds
out
icebp
jg
cs
push
push
mov
les
add
cltd
cli
nop
iret
pop
dec
pop
sub
and
lods
fmuls
xchg
mov
mov
cmp
aas
mov
push
jp
shl
sbb
dec
pop
sbb
cmp
lahf
sub
push
lret
adc
les
add
out
inc
sbb
cs
and
lret
jl
notb
or
xor
pushf
push
jne
es
cmpsb
pop
sbb
jle
loope
xor
dec
in
or
jle
shll
mov
xchg
cmp
sub
dec
cltd
mov
and
jmp
sub
push
cwtl
test
xchg
add
stc
xchg
jb
hlt
aam
fdivrs
cs
lds
data16
cmp
xchg
push
push
adc
js
repz
fcomip
add
imul
xlat
gs
lahf
jb
jae
pop
insb
mov
jp
xchg
loop
jnp
fcomi
stos
out
out
inc
fisttpl
dec
ret
mov
sbb
mov
xor
std
outsl
loope
mov
outsl
into
push
into
shll
cmpsb
rol
ret
sbbb
stos
add
sub
icebp
movsl
filds
mov
inc
mov
dec
inc
dec
inc
lcall
fwait
xchg
iret
cmc
movsl
inc
aad
fcoms
ret
pop
mov
xlat
adc
ret
mov
mov
leave
sub
mov
imul
lret
mov
sbb
mov
sub
mov
nop
lret
sub
add
stos
dec
in
xor
mov
fxch
jo
hlt
push
dec
jg
dec
pop
mov
dec
loope
mov
and
insb
mov
vmovaps
outsl
push
push
mov
jbe
push
loop
out
daa
sbb
or
fwait
sub
jp
mov
sbb
sbb
pop
addb
sbb
mov
dec
fnstcw
jge
push
xor
inc
and
adc
mov
xchg
shrl
negb
add
jns
cmp
adc
popa
cmp
icebp
imul
xor
push
xchg
leave
push
push
pop
lds
in
mov
lcall
jae
mov
in
jb
jmp
add
aam
leave
inc
gs
shrb
inc
inc
mov
sub
add
and
xchg
cmpl
adcb
mov
fwait
mov
mov
test
xor
out
xchg
les
jo
mov
dec
addb
push
int3
dec
push
stc
mov
cmc
sarb
mov
ljmp
xchg
inc
mov
das
mov
pop
aad
add
bound
xchg
inc
push
xchg
and
jecxz
cmc
sbb
dec
testl
mov
lods
inc
dec
and
ss
dec
icebp
dec
dec
mov
aam
cs
lcall
jae
out
sahf
stos
adcl
call
leave
dec
inc
addr16
scas
shll
pop
loopne
mov
stc
inc
adc
mov
insl
push
mov
pop
imul
in
addr16
and
push
test
jb
mov
orl
or
mov
dec
rolb
mov
cmp
and
sub
mov
and
call
sbb
mov
je
xor
test
sbb
xchg
pop
cltd
int3
icebp
lret
scas
add
insb
and
mov
es
mov
mov
stos
cmp
jg
or
aas
mull
dec
ret
aas
mov
mov
and
sub
das
cmpsb
rorl
pop
repnz
pop
cmp
hlt
sti
loope
ret
mov
out
int
mov
pop
in
xchg
and
mov
repnz
pop
int
dec
imulb
pushf
mov
jae
ljmp
popf
lea
push
call
repnz
dec
adc
xsha256
cmpsb
adc
xchg
aaa
xchg
adc
int
sti
adc
push
jns
sbb
sbb
push
pusha
or
dec
push
inc
cli
fisttpl
les
insl
sbb
sahf
mov
xchg
mov
insb
xchg
js
pop
clc
jns
fcompl
ljmp
sub
mov
je
xchg
cmc
xchg
xchg
push
push
sub
mov
push
add
push
jbe
pop
jbe
nop
push
sub
stc
ffreep
sub
popf
xchg
dec
jle
arpl
inc
pop
stos
and
pop
pop
stos
cld
enter
insb
add
pop
mov
lahf
or
cli
andl
arpl
jnp
subb
std
xor
cmc
ficomps
jp
jmp
xchg
faddl
fistpl
dec
movsb
jb
mov
je
xchg
jge
jne
and
push
in
add
aam
adc
sti
mov
les
mov
outsb
sbb
subl
lods
pop
adc
adcb
mov
ret
xor
adc
js
push
dec
or
inc
pop
mov
aaa
mov
inc
mov
dec
inc
test
jns
faddl
ret
mov
or
sbb
ss
out
repz
dec
cld
add
push
pop
andb
cli
push
add
mov
push
cmc
mov
xchg
or
out
xor
fidivs
in
cs
adc
push
adc
out
aaa
hlt
dec
and
pop
pop
and
cmpb
test
shll
inc
mov
mov
push
mov
lods
mov
or
push
jno
jecxz
jb
jae
sbb
adc
mov
mov
jb
cltd
xor
jbe
xchg
mov
call
jno
mov
pop
push
mov
pop
mov
sar
push
rorl
cltd
in
add
sub
shl
inc
pushf
ret
cli
push
sbb
jnp
push
dec
adc
dec
bnd
cld
xchg
mov
cwtl
push
mov
mov
mov
out
sti
sti
enter
xor
outsb
repnz
scas
fisubrs
xchg
out
popf
xchg
cli
xchg
std
insl
mov
stos
test
or
xlat
divl
pop
orl
loope
mov
call
jno
fildl
inc
pop
stc
scas
jo
stc
sub
aaa
push
cmpsb
lea
subb
xchg
ret
fsts
xchg
repz
pop
mov
and
add
rorl
pusha
movsb
xchg
bound
dec
sub
sahf
sub
ja
or
xor
xlat
incb
push
dec
jge
add
test
sub
and
mov
jmp
into
jl
mov
xor
fidivrs
cmpsb
aas
jae
bound
xor
sahf
dec
out
cmp
dec
fxch
push
aad
hlt
xchg
jne
ds
cmpsl
jp
cmpsb
std
stos
pop
jb
mov
adc
cli
in
loop
xchg
cmpl
xor
sub
push
dec
or
xchg
cwtl
das
popa
shlb
jnp
imul
adc
jl
hlt
pop
dec
mov
push
fdivrs
rcr
jo
subl
icebp
push
jg
ret
mov
daa
js
push
xchg
adc
push
mov
mov
push
fisttpll
mov
dec
mov
sbb
adc
in
inc
and
loope
sahf
or
jnp
xlat
arpl
scas
jno
dec
adc
std
push
enter
mov
and
gs
pop
adc
in
loope
mov
lods
addr16
sbb
mov
sub
mov
inc
jno
xlat
insb
mov
ror
inc
mov
mov
in
aad
cmc
movsb
pop
cmpsb
add
and
cmpsl
jne
lods
push
adc
scas
xchg
pop
insl
testb
inc
add
mov
push
mov
rclb
mov
or
lods
pop
mov
jno
jle
pusha
lock
cmpsl
int3
arpl
or
and
stos
cmp
jp
std
xlat
jmp
adc
rol
pop
mov
add
repz
icebp
subl
lret
insb
adcl
iret
or
shll
fdivrs
jg
inc
xor
jp
in
pop
inc
mov
nop
jnp
push
int3
sub
aad
sbb
sub
ljmp
sbb
add
pop
mov
cmc
fidivs
inc
add
je
push
jnp
mov
cmpsl
jb
in
sbb
mov
rolb
lret
add
scas
popa
gs
mov
fs
hlt
xor
or
pop
jp
adc
notl
cmpsl
cmp
mov
sub
mov
mov
pop
inc
push
mov
cltd
adcl
movsl
je
fbstp
and
jmp
shll
leave
std
arpl
pop
jmp
in
xchg
push
sub
mov
pop
add
push
jmp
test
iret
or
scas
icebp
sbb
jns
cmpsl
mov
xor
test
add
pop
fsubrs
adc
pop
xor
inc
xchg
inc
push
dec
js
shl
fs
scas
dec
jnp
das
in
cmp
push
add
in
xchg
ja
test
inc
xor
xorl
cwtl
aaa
sbb
pop
xor
outsl
stos
add
push
or
and
sub
test
mov
dec
sbb
add
sub
xchg
jp
aad
fldt
mov
testl
mov
fildl
jne
mov
scas
push
xor
imul
outsb
xor
push
mov
mov
inc
adc
fsubrl
mov
test
mov
cmc
fildl
subl
and
sti
cmc
xor
je
sarl
cmc
arpl
out
sub
push
mov
insl
mov
clc
fmull
imul
xchg
popl
lret
or
sbb
xor
rcll
mov
filds
inc
aam
pop
sar
sbbl
addr16
xor
faddl
dec
clc
cwtl
lcall
stos
outsb
jae
adc
scas
inc
outsl
sbb
cmpsb
fildll
xchg
add
jg
mov
dec
ljmp
shl
dec
push
fucomi
hlt
cmp
pusha
sbb
jns
movsb
roll
xlat
sti
dec
sub
xchg
push
scas
mov
data16
sub
test
xorl
mov
adc
dec
and
sbb
aad
repnz
fistpl
adc
std
aad
sbb
push
int3
stos
mov
adc
fs
sbb
lds
push
nop
push
ret
nop
adc
lds
sub
insl
lock
pusha
jecxz
dec
sti
pushf
std
mov
cmp
pop
movsl
lods
mov
xor
cltd
mov
das
jmp
or
ret
cmp
mov
pop
xchg
push
cmpsb
sub
outsl
inc
xchg
cmpsb
adc
data16
mov
insl
nop
pop
neg
push
and
jae
mov
ljmp
mov
and
cmpsb
jle
cs
divb
das
lcall
cmp
repz
adc
sbb
shl
fwait
stos
xchg
mov
outsl
jae
mov
or
pop
jae
push
and
out
push
add
add
std
je
push
aad
xor
sub
dec
stos
push
aam
ja
push
or
cmp
repnz
fldcw
adc
popa
mov
dec
lret
lret
mov
nop
mov
fucomip
pushf
enter
inc
call
jl
mov
push
aad
push
and
inc
jmp
jae
pop
jne
jge
dec
das
inc
js
out
in
xor
lsl
xchg
stos
mov
cmp
repz
xchg
sub
call
mov
mov
or
fwait
sarl
outsl
sub
mov
xor
insl
loop
rorb
cli
lods
orb
jnp
imul
cld
add
int
or
icebp
imul
cmp
cs
repz
in
cmc
in
dec
push
mov
dec
test
lcall
push
and
push
imul
std
pop
pop
lds
insb
fcoms
int
repz
dec
test
or
shrb
pop
inc
sbb
add
test
lret
add
aaa
pushf
push
xchg
jp
das
lods
add
and
sbb
bound
adc
test
stos
test
popa
enter
rcll
pusha
das
adc
data16
mov
jae
jp
xchg
push
pop
out
xor
jns
lcall
mov
lcall
pop
add
sbb
les
dec
push
push
enter
in
dec
jne
inc
cmp
mov
xlat
adc
pop
movsb
fcmovu
shll
or
inc
scas
xor
sbb
or
ljmp
push
fsubs
jne
sti
and
sahf
or
jns
into
jmp
stos
xchg
mov
ja
pop
in
and
cmp
jb
arpl
xchg
push
lock
mov
sbb
icebp
dec
movsl
addl
adc
das
adcl
push
mov
cmp
repz
sbb
shll
fcomp
aad
movsb
inc
data16
sbb
aam
gs
mov
les
fucomi
pop
ja
adc
add
sbb
pop
mov
cmp
fcoms
cmc
repnz
inc
sahf
pusha
push
out
dec
aad
jle
push
dec
adc
das
out
sti
push
cs
pop
dec
mov
scas
js
outsb
imul
test
sbb
cltd
lock
je
jmp
inc
stos
popa
ret
xor
lods
pusha
sbb
cmpsl
mov
lret
cmp
or
dec
imul
jbe
adc
rolb
outsl
xor
and
xlat
test
sbb
xlat
orb
scas
sbb
cmpsl
push
popf
ja
push
jbe
add
push
sarl
xor
cs
ret
add
jmp
ds
aaa
pop
xor
repz
jae
mov
insb
inc
pop
out
fidivs
sbb
and
or
stos
mov
xor
inc
xchg
or
adc
jnp
mov
aaa
xor
jg
lretw
lods
or
lahf
call
jo
pop
arpl
cmpsl
mov
and
lret
enter
add
mov
push
or
ret
mov
fdivr
push
outsb
mov
add
cmc
xchg
aas
test
movsb
mov
xchg
xor
push
cmp
sbb
mov
repz
in
adc
cwtl
push
adc
pop
mov
jnp
stos
cmpsl
push
mov
mov
jae
push
xor
int3
movsl
iret
or
je
std
and
daa
fists
jl
and
xchg
mov
add
mov
fcomps
lcall
lret
test
mov
sbbl
sbb
enter
jle
dec
hlt
stos
dec
push
sbb
mov
std
test
loope
add
je
test
jnp
adc
int
dec
imul
inc
dec
jb
in
scas
jae
outsb
dec
ja
sbb
xor
ds
fcomip
add
lret
sbb
xchg
ret
cmc
cli
pop
mov
out
lock
xchg
xchg
mov
gs
jns
in
je
jg
cwtl
and
jo
xor
addl
data16
inc
ljmp
add
mov
cli
push
cli
cmpsb
cld
sbbl
or
stos
cmpsb
xchg
add
mov
cwtl
sub
mov
movsl
push
push
jp
sti
add
fwait
and
loop
cmp
pop
lcall
add
sub
pop
repz
add
push
hlt
mov
fimuls
mov
sub
xchg
add
call
rcrl
arpl
jg
mov
push
pop
into
cmpb
js
sbb
lahf
sbb
and
sbbl
pop
jmp
js
and
cmpsb
popa
inc
adc
in
mov
pushf
cmp
xor
mov
xor
notb
mov
mov
ficoml
and
repz
push
cs
outsl
scas
jp
lahf
xchg
inc
and
pop
cmpb
mov
es
mov
cmp
icebp
mov
fsubrl
adc
fimull
cmp
dec
pop
incb
movsb
sub
push
in
add
sbb
sbb
mov
bound
adc
popf
repnz
mov
iret
filds
scas
mov
mov
dec
call
ret
sub
lods
sbb
sub
jl
outsl
ret
lds
adc
xchg
jl
shlb
inc
into
fldl
fdivr
stc
adc
test
fisubl
or
test
movsl
mov
adc
popa
pushf
sub
mov
sub
je
add
test
xor
out
pop
or
sub
arpl
pop
movsb
add
push
adc
call
in
stos
dec
push
cmpsb
insl
fsub
inc
or
jne
jge
aam
jns
push
repnz
cltd
int
xlat
inc
imul
lods
rcrb
push
daa
pushf
xor
push
dec
je
arpl
gs
mov
or
dec
sub
mov
gs
push
dec
test
aad
int
int3
repz
cmpsb
iret
mov
out
jne
sbb
stc
jecxz
jecxz
push
jo
adc
mov
lcall
mov
xchg
mov
push
xchg
xor
outsl
mov
cmp
ljmp
out
popfw
mov
cwtl
pop
mov
cwtl
mov
inc
pushf
fisubl
push
xor
add
lcall
or
jb
push
pop
iret
addl
adc
mov
sbb
mov
out
enter
pop
hlt
jle
sti
out
adc
dec
adc
pop
dec
insl
push
test
loope
or
loopne
xor
shll
pop
fsubl
sbb
push
lods
inc
or
stos
repz
lds
pop
imul
adc
movsb
xchg
fcompl
loop
inc
inc
push
ss
cld
push
jno
sahf
and
in
int
cmpsb
jecxz
push
push
shlb
pop
sti
adc
inc
loopne,pn
sub
dec
fsub
pop
lahf
xor
js
not
or
mov
rcrl
jmp
adc
movb
push
iret
xor
xchg
lcall
inc
sub
jle
mov
mov
adc
jno
stos
ljmp
inc
dec
cmp
lret
aam
imulb
mov
scas
ljmp
mov
outsb
push
aaa
pop
jmp
fsubl
cli
idiv
cmp
jmp
cmp
and
lock
movsl
and
in
xor
sbb
ss
jne
mov
dec
sub
push
jecxz
in
sbb
xor
adc
test
out
push
fmull
movl
pop
jp
cmp
loopne
pop
push
mov
ss
pop
push
push
sub
xor
inc
sub
repnz
cmp
ret
aaa
sbb
mov
jns
mov
mov
xor
sbb
stc
cltd
or
mov
mulb
xor
push
mov
xor
gs
fwait
cli
lcall
xchg
cmpsb
inc
out
mov
or
mov
sub
adc
fidivrs
push
dec
xor
jb
clc
pop
jne
mov
pop
or
and
xlat
fwait
divb
mov
shrl
lahf
ds
icebp
inc
push
pop
lahf
jno
adc
jle
shl
pop
adc
sbb
mov
mov
and
mov
sarb
or
loope
adc
fs
repz
mov
test
mov
pop
int3
lea
pusha
xchg
in
in
jb
mov
repz
cmp
lds
xor
fldpi
repnz
mov
int3
sub
pop
sub
adc
loope
aam
sbb
ja
lahf
mov
pop
cmp
jle
es
xor
lods
ficomps
inc
pop
aad
push
xchg
loopne
test
xor
pop
cmp
xor
lock
dec
jae
push
mov
enter
adc
icebp
ret
cld
pushf
pop
mov
out
nop
into
pop
mov
sub
sbb
xor
xor
cs
xchg
aam
push
lds
test
ret
jmp
pop
fnclex
scas
jns
mov
pop
fisubrs
adcl
jns
xor
fsts
mov
add
or
dec
jno
mov
scas
jne
je
mov
cmp
inc
add
outsl
add
mov
pusha
call
add
push
add
add
leave
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
dec
add
