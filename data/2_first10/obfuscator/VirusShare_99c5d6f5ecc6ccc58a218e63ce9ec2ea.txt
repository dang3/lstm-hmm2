pop
jne
icebp
xchg
fistpll
data16
xchg
and
and
loope
jge
mov
or
loope
jo
lods
cmp
movsl
gs
int3
add
ror
bound
mov
sub
iret
mov
cmp
cmpsb
sbb
push
outsl
xor
pop
xchg
inc
cmpsl
inc
push
or
xchg
add
int3
add
aam
adcl
in
inc
aas
ret
or
xor
inc
cmp
bound
xchg
dec
mov
jmp
clc
sbb
das
das
jbe
js
in
or
push
jge
jb
cmpsl
inc
push
jb
and
pop
push
fstps
xchg
push
mov
push
test
outsb
mov
imul
dec
in
mov
xor
or
mov
les
mov
repz
jb
gs
inc
in
loopne
cmp
stc
mov
loop
cmp
mov
inc
cmp
adc
xchg
xor
add
pop
dec
xorb
icebp
aam
lret
ljmp
and
inc
xchg
push
mov
mov
in
xchg
cmp
add
out
inc
pushl
and
pop
add
fwait
out
lret
js
out
cltd
cmp
scas
xor
arpl
push
pop
pop
pop
xchg
and
xor
out
fisubrl
pop
xlat
push
repz
lods
sbb
mov
mov
fistps
cmp
fistpll
cmp
mov
cmp
fistpll
mov
fistpll
cmp
cmp
mov
mov
fistps
mov
xchg
dec
icebp
jbe
mov
push
pop
mov
out
insl
fsubr
aaa
lret
inc
jg
push
daa
xchg
aad
xor
outsb
jmp
pusha
fwait
jecxz
sub
test
jns
sbb
loop
cmpsb
insl
pop
jge
jb
cmp
jb
xor
ret
negb
push
push
pop
rcll
cltd
mov
imul
dec
lods
mull
sub
xchg
std
jns
or
sbb
imul
popf
nop
pop
jne,pn
neg
bts
sub
shl
bswap
neg
mov
not
add
call
movb
push
pusha
mov
movsbw
mov
call
call
adc
or
loope
jbe
push
inc
imul
jb
addr16
int
mov
addl
insb
xor
mov
xor
js
jl
inc
leave
loopne
cmp
sarb
push
daa
xor
cld
das
xchg
aam
insb
sub
pop
es
int3
idivb
mov
rcrl
jmp
fldenv
mov
dec
or
cs
jns,pt
in
add
hlt
jp
fidivrs
jo
mov
inc
inc
cmpsb
jp
call
fs
jne
stos
mov
ret
mov
bt
call
pop
inc
jmp
or
into
pop
and
arpl
pop
xchg
sbb
sbb
mov
ret
pop
sub
ja
jle
mov
dec
cmp
pop
sbb
and
cmpsl
push
adc
in
out
mov
repnz
sub
jecxz
movsl
sub
js
pop
inc
outsl
lds
sub
ret
jge
dec
push
or
jae
arpl
dec
imul
je
pop
jb
loopne
mov
mov
push
xchg
or
lret
sub
movzbw
mov
cmp
cmpb
jmp
mov
call
bswap
movzbw
pop
pushf
movsbw
mov
pushf
mov
bswap
call
jg
addb
bound
andb
js
mov
es
sbb
insl
push
push
xor
sub
or
push
test
xor
btr
and
cmpsl
lods
hlt
lcall
inc
inc
add
adcb
andl
ror
hlt
aad
jne
sub
movsb
mov
jmp
push
xchg
cmp
dec
fidivrl
jns
lcall
decl
dec
lahf
not
call
dec
pop
or
xchg
aaa
lea
push
and
cmpsl
sahf
sub
jecxz
cmp
in
inc
or
pop
imul
loope
pop
xor
xor
jnp
xchg
xor
sbb
clc
inc
fidivrl
sbb
stos
pusha
ret
aaa
ds
mov
add
negl
pusha
mov
mov
int3
fwait
mov
sahf
and
jecxz
sub
cs
pop
dec
outsl
inc
das
adc
jg
sahf
dec
mov
inc
adc
dec
scas
icebp
jp
cmpsl
fisubl
adc
cmp
addr16
jle
in
lcall
les
or
mov
adc
cli
rcll
and
mov
sbb
bound
lock
add
and
cmp
jecxz
push
xor
adc
es
mov
pop
jl
jno
stc
sbb
out
cmpsl
add
sub
mov
push
insl
dec
add
xchg
xchg
sub
pushf
out
inc
add
or
mov
mov
fdivl
mov
sub
bnd
pop
imul
cwtl
mov
jge
das
add
js
cmc
into
aam
cmpsl
push
in
add
mov
and
sbb
mov
inc
mov
xchg
lahf
jmp
mov
out
dec
addb
jp
and
out
testb
rcrb
in
movsb
push
lret
enter
mov
mov
ds
xchg
mov
loop
lods
jo
loop
out
mov
lods
push
mov
mov
or
cs
xchg
pop
inc
adc
stos
sbb
mov
cltd
int3
and
or
push
movsb
lods
dec
mov
pop
ficoml
add
pop
clc
lea
jge
stos
cs
jmp
push
imul
nop
enter
pop
imul
jne
inc
mov
xor
xlat
bound
movsb
imul
xchg
mov
mov
cmc
subl
pop
push
lret
pop
and
fld
in
pop
bound
mov
adc
popf
icebp
adc
cmpsl
fmul
jnp
xor
xor
out
fidivl
lods
jle
pop
loop
xchg
and
fisttpll
push
int
in
mov
in
push
sti
mov
test
insl
bound
mov
jmp
sub
xchg
mov
or
jle
jnp
ret
push
push
mov
xor
adc
fdivs
xchg
xchg
out
adc
outsb
sbb
or
out
mov
js
pop
scas
pop
adc
mov
adc
mov
mov
cmpsl
cmc
sbb
mov
push
mov
aas
push
push
rclb
paddb
imul
ret
iret
imul
cmp
cltd
aaa
loopne
shr
or
sti
xor
lds
inc
or
lods
fdiv
sar
jbe
mov
bound
inc
xor
dec
lods
lock
aas
push
ror
and
out
add
dec
push
cmp
jl
mov
or
jg
insb
jae
lds
bnd
cmc
jp
fldt
xchg
pop
and
jp
test
cmp
cmp
insb
shrl
out
mov
or
mov
mov
and
jns
dec
test
ljmp
inc
and
adc
in
das
jae
test
lods
in
xor
jecxz
jo
mull
js
push
cmpb
and
fcompl
pusha
repnz
or
and
inc
pop
sbb
in
push
int
bnd
pushf
scas
add
out
repnz
adc
cmp
cmp
rorb
lahf
repz
je
mov
out
ljmp
sbb
push
or
js
fcoms
outsl
cs
jmp
add
and
cmp
shl
call
add
out
jmp
int3
or
inc
or
fisttpl
dec
cmp
cmp
pop
adc
dec
loope
adc
xor
xchg
ret
jo
test
dec
into
mov
into
push
pop
mov
mov
sbb
xor
add
loopne
cmpsl
cmp
lds
push
rcrb
mov
arpl
mov
push
jle
pop
clc
mov
dec
or
adc
and
lahf
aam
xchg
shrl
sbb
out
aam
mov
inc
leave
mov
cmp
stos
js
orb
mov
push
xor
fisttpll
aam
pop
fwait
xchg
push
or
fidivl
xchg
push
inc
sbb
outsl
push
insl
aad
int
cmp
sarl
xor
and
test
xchg
sbb
pop
aam
mov
shrb
jg
jmp
jmp
lret
dec
or
jbe
stos
mov
inc
fs
das
pop
dec
shll
xor
and
cmp
sub
push
stos
mov
sahf
jl
mov
cmp
add
sbb
xchg
lea
xor
sahf
clc
sub
stc
ds
sbb
sub
je
cld
push
lahf
xchg
mov
xchg
cltd
adc
lahf
mov
and
jecxz
cmp
fcmovne
inc
mov
rorl
mov
xchg
cs
icebp
pop
inc
stos
dec
or
out
lcall
shl
rorl
xchg
stos
addb
pop
xchg
push
cmp
pop
insl
cld
xchg
jp
sbb
cmp
insb
push
inc
cmp
stos
add
mov
iret
sbb
aas
adc
test
leave
or
sbb
out
scas
sub
imul
popf
movl
fwait
mov
sub
or
cmpsl
inc
inc
push
jg
xlat
daa
inc
mov
inc
fcmovne
dec
jae
xchg
jne
and
xchg
test
int
scas
mov
dec
or
add
out
and
push
dec
or
add
insb
cmpsb
xlat
fs
inc
pop
orl
cmpsb
dec
jle
loop
lds
stos
jecxz
jp
jmp
jbe
xchg
mov
cmp
pop
pop
stos
fisttps
mov
lret
cltd
sahf
out
push
and
and
lcall
mov
sbb
outsl
fsubp
dec
jge
mov
mov
subb
push
xor
setnp
inc
pusha
setl
inc
neg
not
jmp
mov
xchg
push
push
mov
loop
inc
jp
adc
je
loope
call
in
testl
adc
out
sub
fildl
dec
cltd
xchg
push
cmp
iret
mov
clc
xchg
paddusw
push
mov
bnd
repz
int3
push
xchg
and
scas
add
sub
in
or
jl
movsb
jae
scas
fucompp
cli
jno
add
iret
aaa
mov
cwtl
fs
or
movsl
xchg
adc
fcompl
insl
mov
mov
inc
pop
leave
lods
xchg
jmp
pushf
mov
sbb
arpl
and
and
stos
pusha
popf
sbb
pop
inc
sbb
dec
dec
cltd
pop
gs
into
dec
movb
call
shrl
into
ret
ljmp
push
bound
stc
ljmp
add
cmp
cmp
imull
mov
adc
mov
cmc
cmpsb
shr
mov
cmp
ja
pushl
mov
cmp
mov
cmp
mov
aaa
mov
pop
xor
out
jmp
jle
push
dec
or
sub
xchg
movsl
in
stos
adcl
rcrl
mov
int
popf
cli
dec
inc
sahf
mov
imul
iret
stos
ds
orb
mov
in
pop
loop
pop
inc
repnz
push
and
ds
lahf
mov
jne
push
jae
pop
shl
lods
jae
dec
xor
pusha
out
or
add
incb
jecxz
lea
call
jmp
clc
paddsw
xchg
rcrl
gs
xlat
push
xor
stos
in
xchg
adc
out
push
sub
mov
cmc
mov
jne
nop
push
sbbl
pop
pop
movntq
repnz
mov
fisubl
dec
cmovl
roll
xor
push
lods
fldl
jbe
jle
jnp
push
aas
xchg
pop
fldl
pop
notb
cmpsb
jmp
and
out
jae
cmp
setnp
pusha
mov
not
inc
inc
setg
push
setnp
mov
pusha
mov
pushf
jmp
mov
lea
call
push
pusha
push
mov
lea
jmp
mov
or
leave
jp
test
xchg
jl
iret
sbb
stos
jo
push
test
inc
ljmp
add
add
dec
incl
pop
shl
in
push
sub
pop
mov
sbbl
push
sti
movsb
mov
ret
adc
call
cwtl
jl
add
jge
iret
cmc
dec
in
pop
loopne
mov
popf
sahf
fnsave
fldenv
inc
sbb
movsb
inc
inc
mov
inc
ljmp
sbb
mov
dec
xchg
subl
in
inc
adc
orb
fldl
enter
out
mov
xchg
inc
jns,pn
flds
adc
je
sarb
push
fsts
mov
push
and
fistpll
push
xchg
ret
nop
cmp
mov
xor
adc
mov
push
mov
jnp
mov
and
and
adcl
or
xorl
push
jge
xor
mov
loope
bound
mov
loopne
push
xchg
into
or
xor
rcrl
mov
push
jae
call
xor
std
mov
daa
push
aad
aad
and
imul
lcall
jp
mov
in
lahf
ljmp
cmc
xor
sub
repz
pop
push
fisttps
xchg
out
scas
jo
rcl
imul
test
sbb
adc
xor
ret
enter
lret
pop
push
outsl
xchg
adc
xchg
jbe
pop
insb
adc
fdivl
inc
jg
mov
ds
jle
mov
pop
iret
cld
cmpsl
and
sbb
aam
pushf
iret
jl
and
lods
aaa
push
rcrb
sub
lret
xor
sub
imul
mov
jge
pushf
jmp
pushf
movl
jmp
sbb
xchg
iret
hlt
addr16
mov
dec
fdivrp
dec
mov
or
mov
cli
mull
dec
orl
sbb
lcall
push
addb
dec
push
sti
push
and
add
mov
fisubrs
adc
pop
cmp
aas
arpl
andb
in
push
das
push
fsts
fisubrl
cmp
pop
xchg
in
dec
dec
dec
dec
inc
push
cs
insb
add
xchg
movsl
out
popf
push
out
push
mov
js
mov
lods
cmp
push
or
les
mov
stos
aam
xchg
jle
mov
dec
sbb
in
ret
in
in
dec
adc
mov
jp
dec
xchg
rcl
xorb
hlt
sbb
inc
insl
loopne
pop
mov
and
imull
psubsb
jne
push
neg
bt
test
add
cmc
neg
bt
rol
call
outsb
jne
dec
or
sub
mov
and
movsl
rorb
sar
popf
sbb
xor
adc
mov
lods
insb
cmpsl
fwait
xchg
or
mov
cld
mov
adc
dec
mov
scas
sub
bound
dec
mov
shll
or
je
xchg
popf
and
test
repz
nop
cli
and
ficomps
into
cmp
xchg
stos
push
icebp
subl
outsb
int
mov
fdivs
push
jmp
xchg
cmp
neg
sub
neg
mov
cmp
cmc
sub
pusha
call
stos
sbb
push
or
call
dec
cmp
adc
cmp
mov
in
addr16
iret
sbb
mov
or
imul
xor
inc
sbb
shll
insl
mov
mov
mov
xor
or
cmpb
mov
shr
insl
rolb
xchg
test
sub
lea
pop
pop
into
fstpl
fcmovnbe
push
shlb
insl
cmp
cmp
adcl
jb
fistps
and
mov
and
repnz
cmc
sbbb
push
or
jg
bound
popf
sub
mov
jbe
cwtl
lods
fucomi
pop
sbb
xchg
adc
xor
push
mov
out
test
pop
bound
jb
jae
and
mov
jnp
cli
add
bt
and
xor
add
and
cld
sub
add
mov
lret
sbb
or
sti
dec
pop
sbb
mov
sbb
outsb
aad
pop
call
jno
inc
jbe
call
or
adcb
scas
ss
dec
in
loope
mov
mov
adc
mov
test
shlb
lcall
sbb
insl
push
stc
mov
inc
std
dec
cmp
xor
cmp
dec
loop
lcall
add
stc
push
int3
daa
clc
inc
ss
sub
sub
xchg
inc
imul
adc
jns
lret
loop
inc
lds
mov
int3
mov
daa
out
test
or
sti
push
test
divl
jne
cmp
je
or
ljmp
icebp
sbb
arpl
sbb
loopne
fnstcw
jl
jmp
push
cmp
loopne
out
jb
nop
xlat
add
lret
ret
adc
dec
sbb
popf
mov
push
mov
js
in
or
pop
aas
pop
xchg
xor
mov
repnz
gs
or
pop
add
imul
dec
or
xor
jo
pop
push
ficoms
sub
or
xchg
pop
and
adc
xchg
or
daa
xchg
pop
pmullw
sti
mov
shl
inc
mov
fwait
test
nop
movsb
lds
insb
xor
xor
mov
mov
stc
movzwl
mov
jns
pop
sub
outsl
inc
popa
cmpsb
or
imul
cmpsb
pop
xor
xor
stos
add
or
pop
jnp
test
imul
adc
mov
jns
xor
imul
shll
mov
push
jecxz
in
pop
cmp
mov
cmc
popa
sub
xchg
das
cltd
out
flds
sub
movb
adc
pop
sub
fadd
das
out
adc
enter
sbb
jmp
jle
outsl
lea
das
adc
pop
inc
mov
sahf
fiadds
pop
push
add
fidivrs
clc
inc
repnz
xchg
divl
mov
xchg
add
call
pop
or
xchg
adc
dec
mov
movsb
jge
loope
out
das
xchg
scas
popf
lods
xchg
add
lret
mov
lods
shl
lea
mov
adc
js
in
mov
sbb
jne
stos
sti
mov
mov
mov
pusha
mov
pop
jl
mov
add
clc
adc
add
cmc
adc
jo
imul
push
sub
das
xor
jecxz
adc
popf
xor
or
cmp
insb
sub
sarb
adc
mov
mov
mov
ret
add
ljmp
dec
sbb
faddl
arpl
mov
sahf
insb
sub
sbb
xchg
divl
divl
xchg
pushf
jne
xchg
repnz
add
fwait
aaa
add
jecxz
push
loop
inc
in
nop
xor
jno
and
sub
fwait
mov
add
and
push
or
cmp
hlt
cmpl
xlat
push
pop
fdiv
inc
sbb
ljmp
or
xor
adc
sub
sti
ror
xchg
movsb
fs
cmp
pop
push
sub
xchg
sub
cmpsb
lahf
movsl
cs
jbe
and
mov
jecxz
je
pop
add
repz
or
shlb
mov
addl
out
test
sbb
rcl
mov
ja
push
inc
cmp
mov
cwtl
dec
and
and
mov
arpl
addb
popa
leave
jnp
jecxz
inc
dec
mov
cmp
xchg
dec
imul
or
shl
jp
mov
divl
sti
push
mov
mov
movl
call
pusha
add
bt
push
cmp
pushf
lea
jb
jmp
not
rol
sub
add
mov
and
sar
bt
xor
pushf
dec
cmc
ror
pusha
call
lea
jne
shl
neg
shld
mov
pushf
add
cmp
stc
jmp
sbb
xchg
arpl
iret
neg
and
xchg
push
insb
jg
push
lods
push
adc
out
push
sbb
xlat
insb
cmc
mov
addl
mov
xor
pop
nop
aaa
clc
es
int3
jb
sub
cmpsb
sbb
popa
dec
mov
or
es
loope
notl
bound
add
fwait
pop
xchg
xor
mov
mov
push
xor
sbb
sub
inc
movsb
xchg
jnp
aad
add
xchg
push
cmpsb
mov
lcall
jno
test
add
in
dec
call
jmp
sub
xchg
scas
xor
bt
cmp
cmp
push
movb
pushf
lea
je
cmp
cmp
call
movl
call
or
xor
or
loop
loopne
in
ds
movsl
clc
inc
lcall
jecxz
and
loope
lret
dec
shl
add
ja
add
leave
sti
arpl
stos
jne
push
sub
xchg
or
imul
jns
pop
ret
jnp
xchg
lods
les
mov
push
xchg
or
push
adc
shrb
fs
pop
mov
pushf
adc
xchg
sub
mov
sub
dec
push
xor
ds
dec
cli
test
jae
popa
cmp
mov
add
mov
push
push
and
pusha
lea
ja
cmc
imul
clc
cmp
push
add
movb
push
movw
pushf
lea
jmp
lea
jb
call
das
cli
add
xchg
inc
pop
cmp
dec
sti
outsl
and
ljmp
mov
jae
cmc
insb
jb
movsb
xchg
dec
shll
cmp
cwtl
fisttpll
mov
mov
fwait
jbe
outsl
jns
or
adc
mov
push
cmc
loop
xchg
daa
leave
outsb
stos
xchg
mov
mov
jge
adc
dec
mov
mov
push
sub
add
and
or
push
adcl
jne
clc
stos
into
jae
outsb
inc
cwtl
pop
xchg
xchg
aas
cli
insl
pop
add
and
or
pushf
movl
movl
pushf
mov
movl
mov
push
pushl
pushl
ret
stc
bsf
mov
clc
cmpb
jmp
movb
push
jmp
ret
insl
pop
or
sbb
push
mov
outsb
aad
add
dec
outsl
rcll
cvtps2pd
lods
and
popa
ljmp
mov
mov
pop
or
mov
fwait
insl
inc
sub
clc
xchg
fwait
and
dec
test
jecxz
push
fnsave
fwait
mov
sbb
fisttpll
stos
xchg
adc
sbb
adc
icebp
out
xchg
or
in
push
call
xchg
sarb
inc
out
dec
or
pop
or
jl
jnp
sub
pushf
or
cmp
jmp
add
push
outsb
or
add
sub
inc
es
inc
addb
jns
pushf
pop
sbb
mov
inc
push
push
or
aad
push
divb
adc
popf
pop
pushf
dec
cwtl
mov
sti
sub
push
sub
sbb
or
movsl
xor
pop
rcrb
adc
fnsave
mov
adc
mov
jne
inc
in
out
inc
pop
xchg
roll
jecxz
dec
xchg
push
adc
sub
sbb
add
push
aaa
pop
or
sub
popa
inc
push
and
mov
sbb
jle
in
pusha
movsb
xor
adc
aam
clc
loop
xor
incb
loope
mov
xor
pop
fsubrl
std
push
mov
pop
and
out
pop
lea
xchg
sbb
xchg
jp
pop
insb
in
adc
and
pop
mov
push
sbb
arpl
jbe
dec
in
jecxz
icebp
mov
mov
mov
jne
jnp
dec
rorb
test
add
add
addb
mov
jg
add
adcb
add
test
add
jmp
call
xchg
xchg
inc
pop
mov
iret
xor
arpl
mov
data16
jbe
adc
jmp
push
mov
in
mov
lods
sbb
jecxz
add
mov
sbbl
mov
outsb
jmp
bsf
std
pop
lahf
shll
cmc
add
or
adcb
sti
loope
fs
enter
decb
clc
outsb
enter
xor
popa
movsb
adc
adc
sti
daa
movsb
or
cmpsb
mov
ds
sar
push
into
cmc
negl
xchg
jmp
and
sbb
or
iret
pop
mov
in
movsb
mov
addr16
scas
sub
cmpsb
dec
jno
and
or
jo
test
mov
mov
fbstp
loope
lret
pop
sub
dec
pop
jns
add
mov
aaa
jle
or
cmp
std
push
ds
lahf
mov
rclb
mov
pop
jo
cwtl
test
stos
fnstsw
js
ljmp
push
sub
dec
or
adc
andb
xchg
lods
outsb
jl
xchg
sbb
mov
push
les
movsl
jne
mov
movb
stos
or
lea
mov
movl
pushf
push
mov
pushf
pushl
ret
gs
pop
or
lret
dec
jl
xor
cmpsb
pushf
test
insb
inc
adc
or
sbb
call
rolb
mov
shrb
cwtl
xor
rol
lods
sub
push
xor
dec
outsb
mov
rclb
mov
stos
ja
sbb
cmc
xor
adc
shr
fnstsw
rcrl
cwtl
and
or
and
xor
add
xor
mov
faddp
xchg
sahf
cmc
mov
xchg
loope
mov
mov
out
int3
ljmp
sbb
sub
cmc
lahf
adc
push
popf
dec
cmp
ret
pop
fistpll
cmp
xchg
stc
rorb
pop
push
fdivs
add
sbb
out
dec
ss
test
mov
mov
jecxz
insb
out
pop
or
inc
lcall
inc
mov
out
or
clc
jne
inc
fdivs
imul
es
gs
lcall
sub
sbb
stos
les
pop
push
fcoml
inc
cmp
mov
add
in
inc
scas
cmp
shlb
dec
out
jnp
imul
xchg
imul
xchg
mov
pusha
xchg
or
pop
dec
dec
out
mov
fwait
xchg
jnp
mov
fistpl
nop
mov
add
shll
scas
jae
cmc
test
stos
add
pop
adc
int
popf
xor
fcomip
cltd
into
jne
mov
mov
jp
push
push
lds
fists
push
dec
test
adc
xchg
lret
bound
push
cltd
jge
pop
faddl
sbb
in
jle
or
xchg
sbb
mov
adc
add
lock
sbb
aad
sbb
pop
outsb
out
xor
or
pop
jne
je
jl
dec
jp
cltd
cmpsl
cmpsl
push
pushl
mov
pop
pop
xor
hlt
dec
fildl
pop
lock
inc
mov
adc
push
pop
cltd
xchg
pushf
sbb
mov
dec
scas
pop
es
dec
cmc
imul
dec
xchg
test
pop
pop
aad
ret
ja
inc
mov
ret
das
add
jbe
pushf
or
inc
push
inc
push
dec
xor
cs
insb
add
test
add
cmp
jmp
pop
pop
in
or
xchg
xor
leave
movsb
jl
xor
or
or
push
dec
or
cld
fistpl
adc
adc
pop
fistl
lock
or
lods
inc
fsubs
xchg
cs
sub
insl
push
adcb
out
xlat
xor
or
push
into
movsb
jo
in
ret
bound
xorb
insl
loope
movb
rcr
lds
test
jnp
mov
jp
enter
or
mov
stos
mov
add
sub
imul
fs
imul
add
xchg
lds
std
leave
test
in
fistl
sti
adc
int
mov
xchg
lret
mov
fsts
iret
jp
insb
aam
pop
mov
shrb
adc
data16
jns
pop
push
scas
insl
test
push
hlt
pop
sti
ds
mov
fnsave
pop
push
fwait
imul
cmp
gs
jns
sub
int3
dec
inc
dec
sub
xchg
xor
push
dec
inc
xchg
int3
shlb
ja
push
lea
sbb
inc
out
ja
mov
xor
dec
xchg
int3
insl
xchg
jne
stc
sub
pusha
or
mov
aad
add
imul
and
shrb
or
cmp
fmuls
test
push
push
test
jg
fimull
subl
sub
jb
pop
jle
jbe
pop
cmpsb
incl
aam
add
sbbl
mov
sbb
lret
lret
ret
sbb
sbb
or
scas
and
lret
mov
add
pop
add
test
pop
out
mov
dec
repz
mov
mov
cmpsl
js
and
jp
mov
push
mov
xchg
insb
jmp
mov
mov
add
out
jo
repnz
inc
mov
push
in
movsb
sub
mov
xchg
jle
shrb
out
fwait
dec
stos
jmp
fld
mov
pop
lods
out
mov
mov
mov
pop
sub
movsb
mov
jo
inc
cli
sbb
inc
loop
out
jl
inc
sti
pop
loopne
dec
jae
popa
or
pop
mov
cmc
cld
inc
lea
mov
or
into
cmp
inc
repz
sbb
mov
outsb
jo
loope
jbe
pop
dec
jns
xor
movsb
lahf
add
or
jns
add
movsb
pop
cmp
push
pop
jnp
mov
mov
out
inc
add
je
add
pop
push
sub
xchg
inc
loop
dec
inc
cmpsl
mov
jae
jbe
fs
je
pusha
clc
cmc
sub
cmp
pushl
pusha
test
cmp
push
call
mov
xchg
mov
jne
sub
sub
pop
cmp
lods
pop
adc
dec
mov
cmp
ds
loopne
xor
pop
mov
cmpsl
sbb
aam
cmp
mov
jp
mov
cli
call
hlt
jns
scas
fildl
add
push
add
sbb
dec
jge
xchg
repnz
push
push
test
jl
mov
addr16
mov
andb
addr16
pop
pushf
bound
cs
mov
dec
jmp
jae
sub
mov
inc
pusha
popf
and
icebp
hlt
addb
bound
xchg
sub
mov
aaa
call
das
ret
fdivr
repnz
and
dec
jnp
add
jmp
mov
adc
enter
loop
je
repnz
mov
sti
adc
xchg
ret
mov
push
xchg
bound
mov
mov
sbb
negb
scas
push
adc
aad
mov
pop
dec
mov
addr16
test
mov
mov
lcall
pop
imul
mov
insb
inc
xor
frstor
jge
cmpsl
gs
jg
pop
push
lret
xor
xchg
sub
scas
dec
stc
imul
and
and
jb
ror
popa
pop
add
mov
push
lret
leave
js
inc
jno
dec
pop
dec
imul
stos
and
and
jmp
in
test
cltd
lods
sbb
mov
outsl
inc
sub
sub
insl
aam
scas
rcl
push
into
push
mov
mov
push
leave
loop
outsb
test
mov
jge
mov
xchg
xor
mov
andl
mov
mov
ljmp
push
mov
or
jmp
xchg
adc
jnp
xor
lods
sti
fsubr
repnz
iret
xchg
xlat
inc
xchg
sbb
iret
add
push
cltd
lods
js
in
nop
mov
fisttps
jmp
sbb
jns
loopne
not
mov
or
sarb
in
push
xchg
jle
lods
mov
lret
and
in
push
push
add
dec
cltd
arpl
or
aad
in
inc
push
pushf
mov
lea
jne
shl
rol
aas
bts
xor
shld
mov
cmp
add
test
rcr
shr
adc
mov
bt
push
test
pusha
movb
pushf
lea
je
stc
stc
stc
test
sub
stc
call
jmp
xchg
mov
or
xor
ficomps
push
fnsave
xchg
std
and
clc
mov
in
mov
pop
lahf
mov
jno
lret
stc
test
or
cmp
sbb
pop
shlb
mov
nop
mov
dec
sbb
sbb
sbb
fwait
aam
mov
pop
xor
enter
dec
and
les
or
pop
xchg
jns
mov
test
aad
pop
aam
iret
clc
or
gs
cwtl
fsubp
cwtl
std
negb
imul
jl
cmpsb
loop
in
push
dec
pushf
cmp
stc
cmp
jmp
mov
lret
inc
arpl
shll
arpl
aad
xchg
mov
arpl
fnstsw
lock
jge
adc
and
push
pop
adc
adc
mov
int
mov
mov
add
jno
lods
cmp
cmp
jmp
arpl
fdivp
push
cmp
mov
xchg
lret
mov
xor
adc
inc
jmp
out
int3
scas
jo
mov
mov
add
xorl
adc
sbb
add
jne
mov
cs
adc
shlb
insl
xchg
pop
and
arpl
add
sub
push
shlb
insl
push
lock
add
rcrb
xchg
mov
dec
adc
mov
or
arpl
and
cld
shlb
adc
arpl
fnsave
lcall
arpl
loopne
sbbl
jns
jmp
and
in
adc
sbb
shll
xor
add
cmpsl
das
mov
add
leave
jae
repnz
mov
pop
inc
arpl
rcl
popf
popa
aas
int3
inc
adc
pusha
arpl
fmuls
cmpsl
in
aaa
inc
adc
insl
xchg
shll
sub
push
mov
cmp
les
inc
adc
and
inc
adc
arpl
push
mov
in
scas
not
scas
add
adc
sbb
adc
or
inc
adc
arpl
rorl
arpl
loope
int3
lret
inc
adc
arpl
aad
rcr
adc
arpl
fxch
jb
dec
jmp
arpl
ss
inc
adc
les
lret
data16
mov
add
push
jp
or
mov
add
aas
pop
adc
push
mov
jge
sub
adc
xor
and
inc
adc
insl
imulb
aas
adc
andb
mov
sbb
repz
add
mov
je
data16
arpl
fidivs
addr16
dec
pushf
inc
adc
arpl
pop
orl
mov
xchg
mov
arpl
pop
int
mov
add
mov
inc
adc
mov
int
jecxz
inc
adc
ret
push
pusha
and
adc
jo
inc
test
inc
adc
adc
fimuls
sbb
and
jae
arpl
jmp
mov
arpl
jmp
daa
jmp
stos
sbb
or
dec
cwtl
push
insb
sub
iret
and
testb
sti
fsubs
cli
mov
mov
bound
into
ja
or
jns
arpl
data16
inc
loope
lahf
dec
mov
mov
push
xchg
rclb
sub
jp
inc
fistps
mov
dec
leave
arpl
pop
and
movsl
mov
cwtl
sbb
jmp
popf
inc
pop
add
stc
adc
fisttpl
add
xchg
add
xor
loopne
lret
mov
insb
dec
mov
test
add
shlb
inc
xchg
add
in
or
sbb
inc
loope
data16
inc
loope
shlb
aad
xor
xor
push
int3
loop
pop
jle
movsl
cwtl
fistps
xchg
aad
jns
fisubl
idivl
inc
cmp
test
adc
iret
test
mov
pushf
mov
mov
xlat
bound
mov
jo
sub
or
add
lock
cmp
and
fildll
aas
sub
push
lcall
cmp
cwtl
cmp
cmp
cmp
cmp
pop
leave
xor
lock
shll
sbb
fsubl
push
pop
mov
js
ss
mov
cmp
push
mov
stc
int3
mov
xor
or
mov
les
push
lods
movsb
xor
adc
pushf
js
lods
sub
pop
pusha
mov
inc
xor
fidivl
sbb
jg
lods
imul
add
adc
mov
add
pop
lea
dec
dec
outsb
inc
clc
cmp
or
lods
sahf
mov
js
jo
pusha
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
scas
or
sub
std
push
xor
jo
push
arpl
push
jbe
in
and
pusha
popf
out
xor
sub
gs
mov
sbb
xor
ljmp
mov
sub
sbb
lret
pop
rclb
or
jmp
cmp
clc
bound
sub
pop
mov
sub
ss
imul
add
lahf
mov
lds
movsl
fstl
rorb
lcall
repz
test
pop
jno
mov
popf
xorl
xor
inc
mov
ret
adc
pop
adc
xchg
and
jb
clc
push
mov
jge
adc
pop
xor
push
push
mov
fbld
leave
pushl
push
outsl
lahf
pop
push
cmpsl
stos
adc
dec
push
imull
rorb
mov
dec
xchg
orl
sbb
mov
xchg
es
xchg
outsl
aas
inc
ss
xor
cmp
aas
xchg
sahf
mov
ljmp
sub
push
cmovge
les
das
cmp
and
cmp
lahf
cmp
decl
mov
mov
xchg
mov
ss
inc
adc
aad
cmp
dec
nop
jno
xlat
add
mov
inc
xchg
nop
jg
cli
sbb
clc
insb
push
push
test
out
inc
aaa
and
cmp
mov
lret
xchg
jb
fdivs
mov
sub
push
pop
insb
jns
adc
sub
xor
xor
mov
sub
dec
aad
or
fwait
inc
mov
xor
dec
inc
jno
inc
cwtl
jno
jns
jmp
cwtl
jb
jecxz
sbb
cwtl
jno
jns
std
push
jbe
jle
sbb
xor
push
cwtl
jae
cwtl
xor
loop
cwtl
cmp
cwtl
jns
sahf
rcrl
cmp
push
pop
cmp
stos
xor
rclb
mov
pop
adcb
ss
jo
je
cwtl
cmpsl
test
xchg
mov
cwtl
pop
dec
adc
cmp
sbb
dec
xchg
sub
xchg
dec
sub
in
je
or
xchg
xchg
imull
push
pop
jl
xchg
sbbl
dec
jo
mov
and
dec
xorl
mov
pushf
sbb
cwtl
ja
cwtl
sti
movsb
pop
out
mov
xchg
imul
inc
xor
out
fmuls
xor
iret
popa
mov
ja
xor
xor
pop
cmp
data16
pop
xchg
and
cwtl
xlat
cmpsb
mov
dec
outsl
je
xchg
insb
push
ficoms
and
push
push
inc
cwtl
sub
mov
mov
gs
jmp
fnstenv
xlat
xchg
xlat
test
js
dec
pop
test
je
addr16
sbb
aaa
cmp
lcall
dec
movsl
aam
pusha
cwtl
jmp
pop
insl
imul
jb
mov
sete
inc
dec
cltd
mov
inc
pop
inc
xchg
mov
push
mov
out
xor
jae
gs
cwtl
in
fsts
push
fxch
lahf
aad
push
sub
cwtl
lea
xor
xchg
and
mov
mov
int
dec
push
andl
cmpl
dec
sbb
xor
mov
imul
sarb
mov
cmpsl
js
int
or
into
dec
adc
mov
xchg
sbb
cmp
cmp
xchg
cmp
cmp
mov
push
fldl
jge
jne
sub
lret
push
mov
inc
sbb
push
sahf
mov
cmp
or
sub
js
sub
jo
pop
js
insb
xor
js
adc
jae
jg
js
mov
push
xor
xor
push
mov
repz
mov
mov
mov
mov
aas
leave
push
out
shrb
popa
sbb
sub
cmpsb
mov
fisubrs
ja
sbb
in
fisubrs
cmpsb
xchg
lods
js
xchg
push
movw
pop
sahf
mov
test
sub
shlb
in
adc
push
movsl
add
pop
mov
cmpsl
sbb
and
sbb
adc
cwtl
jge
js
add
sbb
mov
jge
cmp
lock
ret
xchg
sub
mov
mov
mov
sub
mov
jns
sbb
ffree
or
push
sti
inc
out
sbb
js
xchg
int3
or
adc
ljmp
sub
sahf
mov
mov
inc
mov
std
sub
mull
push
pop
xchg
sub
mov
sbb
nop
cmp
lock
jl
frndint
sarb
sub
ret
shll
push
je
mov
xchg
insl
pusha
xor
pushf
popf
cmp
loope
in
sti
pop
int
inc
push
mov
cmpsl
rcrl
and
jo
jbe
lods
xchg
jg
dec
cmc
mov
jecxz
sbb
adc
push
mov
repz
mov
jg
pop
pop
mov
fistps
jg
lret
pop
push
jb
sub
jge
js
lods
xor
frstor
mov
jo
aad
xor
mov
cwtl
bound
push
inc
mov
pop
jne
aam
push
lods
adc
mull
ja
push
xchg
sahf
sub
cmpsl
sahf
js
imul
ja
mov
decl
ds
pop
jmp
sub
insl
mov
mov
arpl
fnstsw
in
pop
mov
sub
test
or
cli
imul
sbb
sub
inc
push
mov
test
lods
repnz
xchg
fwait
mov
jecxz
or
jl
dec
aaa
bnd
xor
mov
stos
sub
mov
mov
stc
dec
popf
push
subl
mov
dec
loope
test
idiv
in
mov
lcall
sbb
inc
cmp
mov
cmp
mov
aaa
xchg
jge
sbb
cmp
mov
jp
sbb
popf
mov
lods
lds
in
js
xor
push
push
push
ja
cmp
fwait
jge
mov
mov
xchg
dec
inc
cmp
cmp
or
aaa
sbb
jb
idivl
sbb
mov
cs
push
sbb
or
cwtl
fwait
xchg
push
in
or
rclb
mov
lds
lcall
scas
and
test
mov
cwtl
xor
xchg
or
jne
xchg
or
cltd
adc
imul
xchg
mov
adc
js
lods
mov
jp
ss
ds
mov
xchg
or
mov
dec
es
or
cmp
push
lahf
pushf
shrd
mov
inc
dec
pop
ljmp
dec
ja
cltd
fsubrs
nop
or
shrb
jmp
mov
imul
push
int
movsl
call
out
push
das
cmpsl
xchg
xchg
daa
hlt
lods
xor
push
push
ja
test
out
xor
ficompl
fstpl
and
int3
lahf
xor
mov
loop
cld
popf
push
mov
jb
mov
inc
inc
ret
enter
ss
das
lea
mov
in
and
and
aad
cmp
cmpsl
cwtl
cmp
mov
mov
xchg
test
shlb
push
sbb
movsb
cmp
and
jbe
mov
andb
fwait
adc
mov
jge
das
sbb
xor
cli
xor
loop
adc
cmpsb
adc
push
inc
and
and
xchg
pop
scas
mov
pop
adc
xchg
xor
push
mov
sbb
jl
push
sahf
or
outsl
test
sub
push
push
mov
xchg
mov
mov
sub
lcall
or
dec
mov
inc
push
or
mov
bound
stc
push
mov
ja
jecxz
enter
fsubrs
clc
rcr
cli
fldl
lahf
mov
mov
in
mov
das
out
xchg
mov
cld
jo
fsts
in
adc
popa
cwtl
lcall
mov
mov
int
adc
jb
not
add
shll
sbb
lds
xorl
ja
dec
jb
dec
sub
dec
jno
imul
inc
sbb
adc
mov
xadd
daa
push
push
rolb
daa
mov
fdivr
or
sbb
test
mov
xor
dec
add
ds
lock
sbbb
pop
loopne
scas
idivb
pop
pop
mov
imul
stc
pop
push
scas
push
push
xchg
pop
mov
sbb
push
rorb
mov
xchg
incl
jmp
pop
jno
out
sbbl
imul
rclb
xchg
push
mov
sarb
cmp
cwtl
xchg
or
adc
mov
xchg
pop
stc
adc
sbb
cs
sbb
iret
mov
mov
pop
sub
xor
cmp
dec
shrl
fimull
mul
sbb
mov
or
xor
or
cwtl
push
fmull
xchg
loopne
enter
aam
xor
inc
add
stos
js
cltd
pop
mov
jmp
xor
hlt
scas
out
movsb
sbb
sub
push
das
sbb
push
push
rorb
jo
xchg
test
pop
push
rcrl
cmp
and
test
lds
jp
mov
inc
dec
cmp
cs
pop
pop
inc
popa
movsb
int
inc
mov
lods
cmc
aas
fcoml
adc
imul
push
imulb
enter
cmp
leavew
mov
pop
dec
adc
aaa
sbb
in
test
mov
cmpsb
pop
scas
leave
sbb
or
js
sbb
js
jne
sbb
pop
sub
xor
mov
or
sbb
or
adc
push
daa
cmp
jns
sbb
ja
dec
cs
test
test
dec
mov
add
scas
ja
pop
js
loope
inc
hlt
inc
out
add
and
aas
cmpsl
dec
mov
xchg
sar
xchg
and
aas
mov
pop
mov
loope
ja
aaa
fnstenv
hlt
mov
jo
jge
lods
sbb
and
mov
in
nop
xor
and
insb
sub
je
add
sbb
or
insb
adc
sbb
insb
push
inc
jg
fmuls
imul
rcr
mov
js
js
orb
mov
js
aad
xchg
cmp
xor
scas
movsl
xor
adc
aad
or
xchg
lods
js
mov
jo
insb
push
jbe
lods
pop
sub
dec
test
sbb
xchg
lods
mov
push
insb
test
je
mov
sub
nop
xlat
insb
mov
xchg
lods
clc
sub
call
jbe
lods
fsubrs
aaa
push
rcl
insb
enter
shlb
cmp
mov
xor
sub
push
lods
sbb
fsts
adc
sbb
jbe
in
sbb
cmp
sub
push
popa
clc
insb
pop
test
sbb
mov
push
inc
js
mov
sub
test
insb
repz
sbb
sub
jae
adc
cmp
pop
ja
addr16
push
cmp
mov
cmpsl
lahf
xchg
imul
out
cmp
sub
cmp
push
jo
and
xorb
pop
jle
mov
push
or
loope
mov
shlb
adc
cmp
lock
mov
fsub
pop
cmp
imul
adcl
lret
adc
addr16
pop
daa
cmpsl
pop
out
das
aas
psubb
call
enter
sub
inc
pop
cmpsb
dec
shrl
call
pop
fmuls
sub
xor
xchg
pusha
sub
clc
jno
pop
call
xor
loope
sahf
mov
add
imul
push
ret
xor
adc
jmp
mov
sub
dec
xlat
cmp
inc
adc
sub
cwtl
inc
xor
and
lret
sub
cwtl
xor
xor
inc
sub
clc
test
sub
clc
and
and
xor
xor
adc
jb
call
clc
sub
pop
xchg
loopne
and
xor
sbb
cwtl
and
adc
inc
shl
push
xchg
sub
mov
mov
sub
sbb
or
jns
jns
sub
rorb
xor
js
adc
xor
or
ds
sbb
add
clc
sub
push
jb
repnz
jns
fstps
enter
xorl
test
xor
xor
xor
shl
std
pop
call
ja
jo
scas
inc
es
inc
jb
lock
and
or
out
pop
sub
popa
xchg
sub
xchg
flds
sub
ljmp
xor
mov
shrb
add
jns
subl
sub
adc
push
fstps
push
insl
sub
fwait
rcrl
xchg
enter
or
es
and
out
shrb
fisubrs
mov
xor
sti
ja
push
nop
cmp
mov
push
cmp
adc
fbstp
lock
xor
pop
cmp
jbe
lock
outsb
dec
dec
sub
xor
sbb
jno
call
jb
mov
xor
js
imulb
push
mov
or
push
inc
sub
adc
pop
jns
xor
out
addl
cltd
or
imul
add
sahf
push
test
dec
xor
loopne
mov
in
xchg
xor
clc
xor
scas
mov
mov
sub
push
out
dec
sub
shr
lock
and
ficoms
shrb
jb
xchg
popa
xor
je
into
jmp
push
lcall
sub
mov
sub
sbb
and
daa
xor
pop
mov
lock
clc
xchg
sub
xor
adc
pop
push
jmp
rolb
mov
outsl
imul
sbb
pop
daa
push
push
xor
js
rol
sub
adc
stc
mov
xor
xor
popa
or
mov
lods
js
sub
xchg
mov
inc
cmp
dec
scas
jg
notl
cld
mov
jno
sub
movntq
sub
es
fwait
or
adc
incl
int3
sub
sub
mov
js
nop
test
ret
sbb
sbb
and
ss
pop
or
clc
cwtl
adc
js
xchg
fsubrs
jb
mov
xor
add
test
shrb
lock
mov
shrb
jno
imul
je
sub
lods
sub
xchg
sub
inc
push
mov
loopne
cmovl
call
pop
fdivrs
cmp
cmp
mov
lods
mov
sub
pop
pop
lock
pop
xorl
dec
or
sub
dec
or
test
jle
sub
out
andl
stc
mov
aad
std
lods
mov
xor
push
xchg
sub
fdivl
xor
sub
loopne
int3
fld1
adc
cmp
or
jbe
and
cltd
sbb
add
lock
cmp
test
loopne
adc
insl
xor
js
push
sub
mov
xor
jnp
adc
xor
or
push
nop
dec
sub
jns
mov
push
pop
loope
mov
lods
shl
push
sub
movsl
fsubr
adc
clc
fcoms
cmp
jb
setne
pop
fldcw
adc
js
xor
jno
inc
sub
adc
es
jge
xor
stos
mov
sub
shl
adc
std
mov
sub
shlb
lock
fmul
sbb
in
mov
sub
popa
sub
push
lock
xor
or
sub
inc
test
mov
add
lret
sub
mov
xor
sub
inc
sub
xor
mov
adc
mov
jp
jo
push
jb
push
cwtl
ja
shrl
mov
xor
push
mov
mov
dec
dec
stc
and
nop/reserved
bound
sub
popa
sub
cmp
lcall
mov
mov
xchg
lods
or
dec
sbb
sub
imul
repnz
pop
sub
mov
test
clc
or
fdivs
mov
aad
insb
mov
jns
jb
pop
addl
test
xchg
nop
xor
loopne
push
call
fsub
and
stc
cld
jnp
sbb
lret
xor
sbb
push
icebp
sub
test
or
jns
sub
mov
xor
sub
fsubs
sub
call
shrb
xor
mov
adc
imul
mov
or
jae
js
sub
arpl
pop
push
shrb
xchg
subl
test
mov
adc
clc
imul
jb
add
nop
es
mov
fwait
xor
cwtl
push
jns
sub
inc
subl
loope
test
and
sti
xor
shll
adc
popa
push
repz
cld
sub
xchg
sub
xor
and
loopne
mov
pop
adc
inc
add
add
jb
xchg
imul
test
xchg
sub
arpl
cmp
xorb
sub
insb
call
push
clc
fcompl
xor
std
mov
sub
test
and
xchg
lock
sub
sub
ja
cmp
insl
sub
and
sub
int3
jo
mov
mov
mov
js
sub
dec
lock
adc
nop
inc
sub
bound
push
mov
sub
test
mov
mov
jo
movsl
mov
mov
jne
cmpsb
sub
bound
sub
dec
push
imul
adcb
sahf
clc
test
imul
lock
test
lock
call
fadds
sub
clc
or
fmul
jb
fcom
sub
insl
pop
xchg
mov
jne
cmp
insl
sub
ja
scas
sub
ja
int3
sub
jns
sub
push
orl
sub
sbb
imul
mov
mov
ja
push
sub
test
jb
mov
sub
imul
fsubrs
fnstsw
cmpsb
sub
adc
jnp
adc
push
push
fsubr
dec
stos
inc
repnz
or
mov
icebp
loopne
sub
call
shrl
clc
ljmp
ja
jo
ljmp
mov
xchg
cmp
inc
sbb
scas
stc
mov
pop
rclb
aas
jmp
adc
jbe
cwtl
cmp
pop
imul
push
rcrl
sub
cmpsb
sub
xor
movsb
es
push
out
jno
sub
sub
xchg
shrb
jb
loopne
sbb
push
cmpsl
test
notl
adc
sub
inc
mov
pop
nop
shll
adc
int
xchg
ljmp
fsubs
sub
pop
cmp
adc
mov
jb
xor
adc
mov
repnz
push
pushf
pop
pop
add
mov
jbe
loopne
add
mov
nop
and
hlt
xchg
das
cwtl
call
push
sbb
adc
pop
mov
sbbl
add
cmp
xchg
rolb
addl
inc
push
rolb
adc
xchg
mov
push
mov
clc
js
add
inc
dec
adc
subl
shlb
push
enter
adc
xchg
adc
add
gs
mov
enter
hlt
mov
fnstcw
loopne
cs
pop
add
pusha
and
aaa
mov
inc
ds
lock
xchg
or
pop
xor
pusha
js
sub
movl
inc
mov
pop
mov
sub
sbb
hlt
mov
push
dec
mov
repz
add
cs
dec
jns
ss
jb
insl
mov
dec
clc
bound
xor
or
push
inc
pusha
imul
adc
xchg
inc
mov
inc
jns
cwtl
or
add
inc
sbb
call
push
jns
imul
call
stc
scas
sub
push
jns
rclb
push
shl
jo
mov
push
inc
and
cmp
repnz
pause
push
imul
add
inc
push
test
jns
push
mov
sub
push
outsb
and
push
test
jae
dec
mov
inc
mov
rcrb
add
call
mov
mov
xor
xchg
sub
xchg
cmc
loopne
sbb
mov
clc
testb
cwtl
inc
add
jo
daa
mov
lds
test
out
xlat
dec
arpl
sbb
mov
inc
outsl
imul
cmp
adc
xor
dec
imul
mov
and
imul
gs
inc
nop
sarb
int3
push
inc
and
cmp
mov
dec
mov
add
xor
gs
movsl
test
xorb
mov
js
or
pop
movb
js
push
test
notb
xor
out
adc
and
push
sub
xor
out
call
sub
lock
fdivrs
loopne
push
aaa
jbe
mov
push
rcl
or
movsb
mov
fs
enter
loopne
test
insb
js
mov
push
mov
cmpsb
jae
addr16
js
xor
push
ja
push
adc
xor
cwtl
jns
mov
dec
push
repz
xchg
les
leave
ss
es
push
add
push
imul
aad
mov
cmp
lcall
out
jae
popf
pop
cltd
popa
jbe
andl
aad
cmp
mov
xor
dec
jb
xor
nop
xchg
xor
jecxz
mov
ja
pop
hlt
cmp
sub
getsec
push
push
push
clc
js
shl
scas
movsl
inc
mov
inc
mov
mov
xchg
cwtl
sbb
roll
mov
sub
mov
pop
push
add
cltd
outsl
sete
mov
adc
mov
loop
dec
inc
ret
adc
fcoms
xor
ss
push
cmp
shrl
test
cmp
call
add
add
lock
mov
pop
mov
jecxz
mov
aas
push
clc
adc
adc
hlt
aaa
in
add
movsl
sub
test
xchg
xchg
mov
loop
push
jo
push
cmpsb
adc
outsl
scas
add
or
pop
mov
pop
js
and
fcoms
pop
cmp
push
or
jo
hlt
repnz
inc
sub
aas
jge
test
mov
xchg
test
fsub
subb
inc
pop
sbb
add
inc
jbe
aad
inc
xor
in
ja
inc
sbb
pop
loop
jbe
ss
sub
xor
nop
clc
cs
arpl
mov
add
mov
sti
push
adc
sbbb
mov
sub
js
push
xchg
adcb
and
mov
jne
push
xor
sub
dec
or
cmpsl
ljmp
js
push
pop
push
negl
adc
aad
xor
xchg
sbb
imul
addr16
cmp
sub
leave
sbb
shlb
mov
nop
push
je
testl
sbb
xor
mov
hlt
ja
xor
sbb
pop
cltd
jb
fdiv
sub
test
orb
mov
sbb
xchg
or
mov
xchg
push
das
mov
adc
test
rol
aam
hlt
aad
outsl
adc
iret
sub
jo
hlt
js
cs
pop
out
mov
adc
cwtl
hlt
test
popa
mov
in
cmp
jns
push
orl
xchg
insl
adc
mov
nop
loopne
test
and
mov
xchg
mov
adc
inc
sbbb
jo
or
test
xchg
xchg
lea
pop
xchg
or
enter
cwtl
cwtl
shlb
mov
push
data16
cwtl
imul
mov
push
add
std
mov
push
xor
and
das
imul
cmpsb
hlt
cmc
adc
mov
cwtl
std
add
mov
lock
call
jne
sbb
adc
sub
je
cwtl
pop
xor
clc
sbb
notl
sub
sbb
adc
and
adc
push
mov
xchg
mov
sbb
jb
jbe
div
data16
xor
hlt
cmp
les
push
lea
xchg
lcall
or
mov
cs
movsb
jne
mov
xchg
or
test
ja
call
sbb
ficoml
xchg
mov
dec
ret
and
push
mov
mov
mov
stos
sub
push
mov
sbb
and
js
jb
clc
mov
fcomp
movsb
xchg
jo
pop
cwtl
and
push
loop
movsl
cwtl
clc
mov
push
sub
inc
xchg
sahf
sub
push
add
subb
pushf
out
push
fnstenv
jo
lock
mov
mov
andnps
cmc
and
loop
notl
jbe
cmp
and
das
jecxz
fcoms
xor
les
repnz
repnz
sub
ss
mov
xchg
xor
inc
cmc
test
sub
xor
or
hlt
and
add
mov
mov
sub
imul
dec
inc
cmpsl
les
shlb
movsb
bound
xchg
pusha
or
call
mov
add
mov
mov
idivb
call
xchg
sub
xchg
mov
lret
stc
xlat
cltd
imul
mov
test
cmp
pop
sbb
xchg
sub
sbb
jecxz
imul
arpl
push
sbb
add
leave
outsb
insb
and
inc
insb
pop
and
sub
mov
inc
fiadds
adc
inc
mov
push
inc
push
xor
pop
sub
pop
push
cli
hlt
xchg
ja
inc
xor
mov
mov
lods
xchg
das
or
inc
not
hlt
divb
out
pop
dec
bound
cmp
cmpsl
idivl
or
enter
dec
test
mov
ds
adc
jb
test
mov
jno
fsubs
pop
cmp
sub
stos
flds
jo
mov
jecxz
in
ds
push
push
aam
movsl
pop
shll
xchg
outsb
cmp
test
es
inc
jo
jne
mov
rolb
push
test
js
aam
test
daa
cltd
jb
loop
orb
aaa
ss
mov
data16
divl
imul
or
add
cmovnp
movsb
sub
sbb
divb
jmp
aaa
cmp
or
test
imul
adc
data16
fmuls
aas
cmp
fdivl
inc
dec
cltd
adc
and
xor
mov
xor
push
adc
add
xor
sbb
in
jno
mov
mov
test
les
clc
lret
inc
adc
add
hlt
dec
dec
push
mov
jmp
mov
xchg
xor
idivl
xchg
cmc
xor
mov
aad
xor
mov
or
mov
sub
call
mov
add
sub
mov
rcll
pop
sub
mov
aad
push
xor
fsts
pop
xchg
inc
lea
repz
leave
pusha
push
andb
insb
hlt
insb
sbb
out
stc
js
adc
cmpsl
outsb
dec
and
and
push
dec
pop
sbb
les
jecxz
std
pop
cmp
adc
or
xchg
push
and
push
inc
test
sbb
mov
xor
pop
push
dec
pop
mov
scas
test
push
mov
sbb
pop
mov
dec
or
add
inc
cmp
adc
jns
xchg
jne
call
sbb
lock
out
shl
adc
mov
lds
js
sbb
movsl
mov
push
out
jbe
test
push
mov
xor
pop
pop
push
test
pop
fistl
ss
and
or
aam
out
inc
xchg
add
nop
test
adc
cmp
xor
repz
addb
push
cltd
scas
add
je
test
insl
insl
movsl
and
sub
adc
push
cwtl
mov
ds
push
sbb
stos
pop
sbb
push
inc
leave
rorl
xchg
cwtl
sbb
jno
push
es
cwtl
mov
cmpsb
mov
xchg
call
cmpsl
sub
call
cmp
xor
or
inc
sarl
add
sub
xlat
data16
rol
lods
in
ret
pop
and
and
push
add
or
inc
or
test
mov
sub
and
push
sahf
add
loopnew
and
jae
test
test
dec
movsb
aam
repnz
arpl
imulb
scas
inc
mov
hlt
push
jbe
cmp
cmpsb
add
mov
nop
call
mov
jae
outsl
js
add
pop
jns
push
adc
xchg
idiv
ficomps
mov
pusha
xchg
push
or
loope
inc
or
les
xor
pop
cmp
and
and
xor
mov
les
dec
mov
xlat
add
nop
repz
sbb
negb
mov
push
add
andl
popf
sub
jne
in
or
cmp
sbb
xor
xchg
addr16
mov
gs
mov
dec
mov
jno
repnz
hlt
push
hlt
and
jbe
dec
notb
xchg
ret
stc
rcrl
adc
addr16
xchg
adc
jge
and
xor
cld
fadds
sub
js
cmp
movsl
leave
movsb
mov
jno
inc
or
cmc
outsb
sub
out
jb
push
imul
jo
ja
or
in
mov
nop
jo
inc
mov
sub
in
xchg
aam
inc
or
outsl
stc
jns
out
bound
fstl
cwtl
mov
dec
aad
cwtl
cltd
in
fdivrp
adc
or
jo
mov
pop
shlb
pop
add
lea
clc
lods
xchg
lds
inc
sbb
mov
scas
push
xor
jbe
add
adc
add
mov
mov
add
clc
test
adc
xor
mov
fsub
xor
add
sbb
or
imul
mov
repz
adc
std
jecxz
insb
sub
dec
mov
repz
cltd
push
es
cmc
and
push
adc
push
mov
and
pop
jno
ja
xlat
imul
mov
cmc
test
adc
jns
jbe
adc
clc
push
push
mov
and
push
bound
cltd
repz
or
or
lods
aad
mov
popa
jo
adc
jl
pop
loopne
test
xchg
dec
repnz
pop
gs
jo
dec
xchg
sbb
add
in
adc
dec
mov
cwtl
lods
aam
add
push
and
ret
sub
cmp
push
mov
dec
popa
aad
lds
jle
or
aad
jp
hlt
nop
stc
jns
divb
cmp
aam
pop
stos
push
ja
sbb
divl
hlt
or
xchg
testb
cmpsb
mov
mov
and
and
nop
jo
jae
dec
imul
cltd
and
adc
ja
je
mov
push
mov
jb
insb
fldenv
enter
cltd
mov
mov
sbb
xchg
mulb
testl
push
adc
scas
inc
xchg
dec
clc
push
test
mov
cmpsl
cmp
push
das
mov
and
inc
sbb
adc
and
test
mov
lock
pusha
cltd
sub
ret
dec
inc
add
cmp
cmp
mov
sub
out
mov
pop
mov
popa
inc
out
and
jl
and
aad
inc
insl
and
aad
movl
ror
mov
push
pusha
lods
push
or
pop
cmp
xor
cmpsb
pop
sbb
and
dec
rcrb
push
pop
push
test
xchg
push
aad
in
mov
insb
loopne
lds
push
sarb
in
jo
arpl
xchg
push
sbb
xchg
hlt
mov
shl
insb
orl
xor
push
popa
push
cmpl
movsb
test
imul
scas
repz
adc
aaa
popa
mov
stos
mov
cmp
mov
push
push
jno
sbb
inc
cmp
mov
xchg
fcoms
jo
les
push
add
rorl
pop
xor
push
fadd
xchg
test
xchg
xchg
clc
test
sub
sub
fdivrs
mov
jbe
inc
push
es
xlat
dec
insl
insb
jne
add
insb
push
cmpsl
bound
jns
push
pop
pusha
in
inc
mov
ss
mov
xor
mov
and
pop
adc
xorl
xchg
mov
notl
or
cltd
and
neg
push
mov
movsl
mov
out
xchg
sbb
push
xchg
pusha
div
mov
imulb
push
or
pop
out
cli
ret
push
addb
xor
xor
dec
mov
adc
mov
adc
xchg
pop
sbb
jbe
sbb
shll
mov
divl
xor
pop
push
es
jo
hlt
inc
into
mov
idivl
push
xchg
movsb
arpl
dec
rclb
inc
sbb
push
fcoml
fdivs
add
mov
add
pop
push
xchg
jns
popa
int3
adc
test
stos
mull
xor
mov
imul
movsb
aad
and
fmuls
adc
into
and
call
cli
xchg
sbb
adc
push
hlt
sub
jmp
scas
aad
xchg
cltd
jecxz
and
mov
sbb
pop
clc
mov
into
cmc
fs
ret
loopne
repnz
mov
pop
packuswb
mov
adcl
mov
into
orl
ljmp
inc
push
inc
pusha
inc
je
xchg
add
adc
leave
pop
mov
add
xchg
mov
cltd
jns
sub
mov
push
or
or
sbb
popa
mov
push
xchg
std
testb
loop
jo
pop
push
push
or
aam
int3
sub
scas
pop
inc
addr16
insl
inc
adc
adc
in
rcr
dec
sub
pop
adc
jno
jns
dec
adc
test
sub
testb
and
jne
cmc
inc
pop
jb
js
popa
mov
ja
orb
repnz
jbe
in
jmp
out
test
in
and
add
repnz
and
mov
aam
pop
arpl
repnz
dec
push
pop
sbb
in
adc
mov
es
inc
fs
int
ret
add
adcb
hlt
test
inc
sarl
or
adc
adc
push
xchg
ja
sarb
aam
adc
xor
in
push
add
xchg
outsb
and
js
push
jne
dec
mov
jne
push
imul
inc
and
out
insb
ja
test
pop
and
aam
sbb
and
test
test
rcl
adc
xchg
movsb
mov
jne
sbb
cmp
mov
mov
das
adc
sbb
xchg
popa
mov
in
push
clc
jo
fsub
xor
jmp
cmp
mov
or
pop
aaa
and
fsubrs
or
mov
xlat
dec
xor
addr16
mov
jmp
pusha
cmpsb
inc
fdiv
mul
and
mov
mov
fdivrs
mulb
push
ret
pop
jbe
xchg
outsl
push
jne
or
adc
shrl
sub
bound
cmp
adc
jbe
mov
or
pop
rorb
clc
mov
mov
or
xor
inc
dec
cwtl
lock
lock
or
decl
jbe
pop
stos
xchg
jge
push
and
insl
test
push
in
sub
mov
aas
call
test
lret
int3
or
les
cmpsb
fisubrl
stos
incl
jo
rcll
ja
adc
fsubr
or
add
or
test
mov
or
ja
or
push
jns
or
jo
sbb
pop
xchg
mov
xorb
or
mov
rclb
mov
sbbl
cli
js
fs
sub
int
xor
xchg
add
mov
add
dec
sbb
adc
loopne
push
adc
sbb
mov
mov
addr16
cli
adc
and
js
mov
das
test
push
cli
adc
adc
mov
loopne
push
cld
adc
or
push
push
jae
push
test
pop
xchg
mov
adc
sub
push
lock
mov
or
or
or
or
xor
js
xchg
es
adc
or
subl
jl
mov
aaa
pop
push
and
push
mov
js
shll
xor
push
mov
ret
div
push
jmp
fcoms
cmc
mov
lock
clc
xchg
mov
or
adc
pusha
lds
mov
cld
push
push
and
not
or
cmp
mov
fs
or
fadd
test
dec
push
sbbl
pop
and
cmp
push
call
pop
add
adc
data16
jne
cmp
nop
cmp
lock
les
or
sbb
pop
cmpsb
sub
mov
lea
lret
int3
sub
or
pop
or
xchg
call
in
mov
pop
in
js
or
xor
mov
dec
adc
mov
clc
push
mov
pop
repnz
mov
lcall
pop
movsl
cmp
rorl
pop
lock
je
or
and
inc
jmp
mov
adc
jb
mov
inc
pop
or
rcll
or
cmpsb
out
lret
cwtl
push
cmp
int3
test
leave
add
mov
shrb
cwtl
cmp
pop
es
cmpsb
repz
lods
push
add
cld
and
adc
shr
movb
int3
daa
aad
or
popa
popa
and
push
lock
adc
and
xlat
ficoms
mov
pause
add
xor
lcall
subl
or
xchg
enter
push
int
dec
mov
in
xchg
mov
pop
cwtl
xor
dec
push
xchg
lret
jl
jo
call
cltd
push
cltd
test
mov
inc
cmpb
xor
loop
es
dec
push
clc
in
xchg
push
je
or
mov
xchg
jns
sbb
add
test
sbb
test
mov
cmpsl
sbb
je
or
fdivs
rolb
je
or
and
add
repz
jns
jbe
jbe
sub
pop
inc
sahf
mov
mov
das
bound
jle
jb
ja
or
jno
test
or
mov
sub
push
mov
inc
add
js
in
imul
dec
add
push
cwtl
xor
mov
imul
and
insb
cwtl
mov
lcall
or
dec
sbb
add
mov
in
push
shl
outsl
stos
bound
xchg
mov
rolb
adc
mov
or
or
outsl
push
push
adc
aam
sahf
nop
loop
pop
js
xchg
jns
lcall
or
bound
or
shrl
mov
icebp
scas
sbb
test
insl
mov
mov
adc
idivb
cli
mov
mov
shl
clc
dec
imul
pop
xchg
aaa
daa
insb
sub
in
pop
movsl
push
xchg
inc
add
push
cmpsl
sbb
dec
push
mov
mov
test
pop
dec
mov
sub
loop
out
or
adc
clc
sbb
sti
jns
sbb
push
test
dec
cmpsl
push
insl
mov
aam
push
enter
push
ja
adc
lea
jg
push
adc
mov
les
rclb
xor
jno
inc
insb
and
and
sub
sub
outsl
pop
enter
or
xchg
sub
cwtl
push
pop
push
js
sub
js
ja
adc
xchg
ret
push
mov
mov
and
arpl
jns
shll
push
push
ds
sahf
jmp
jns
sbb
push
and
cmp
and
jns
mov
hlt
xor
and
push
arpl
xchg
or
mov
popa
insb
pop
les
push
or
mov
in
xor
add
sbb
cmpsb
test
loope
inc
ljmp
jns
lret
push
sahf
test
test
add
jns
or
xor
mov
pop
xor
nop
xor
jecxz
mov
push
in
aaa
movsb
mov
and
sub
xchg
xchg
test
push
or
stos
xchg
xchg
cwtl
mov
gs
jbe
js
sbbb
push
js,pt
mov
ficoml
adc
dec
fstps
fdivl
aaa
push
test
test
dec
xchg
mov
imull
adc
cwtl
dec
and
jns
adc
adc
sub
add
outsl
xchg
call
das
mov
mov
fs
outsl
mov
subl
mov
jbe
xor
push
stc
inc
jo
ret
jo
mov
sbb
cmp
js
xchg
cmc
cmp
dec
insl
sub
mov
mov
mov
sub
push
pop
out
cmpsl
test
sbb
sub
das
push
lods
jo
sub
dec
test
sbb
push
lahf
ficomps
jb
out
jno
js
cwtl
sub
je
stc
cmp
xorb
pop
lret
adc
cmp
dec
rcl
inc
cmp
into
mov
xor
popf
lret
ret
in
jns
ss
xor
es
adc
mov
notl
sbb
adc
sbb
mov
cmp
jl
test
push
xchg
adc
adc
mov
and
mov
push
sub
push
mov
jle
xchg
pop
call
mov
sub
inc
ficoml
mov
dec
lods
xchg
idivl
inc
loop
std
or
add
scas
sub
xor
je
xor
divl
lods
ja
aaa
push
divb
sbb
jbe
lods
jns
cmp
clc
mov
je
mov
push
adc
insb
shrb
mov
push
sub
adc
insb
aad
cmc
sbb
sub
push
mov
insb
xor
negl
mov
pop
lods
imulb
push
push
ss
insb
jns
fcomps
mov
inc
mov
sub
push
xchg
jb
aad
push
sbb
jbe
lods
xlat
sub
push
insb
fldcw
pop
dec
rorl
lods
jo
push
xor
js
jo,pn
sbb
jbe
lods
push
sub
push
pushl
outsb
test
sbb
push
lods
dec
sub
ds
scas
test
sbb
sub
out
test
inc
inc
out
scas
gs
lahf
icebp
inc
jg
pop
jg
or
aam
fists
mov
scas
insb
cmpsl
test
sbb
sub
imul
insb
out
aaa
push
sbb
adc
lds
mov
pop
xorb
mov
adc
lds
mov
jo
clc
cltd
push
pmaddwd
push
xchg
cmpsl
mov
outsl
pop
sar
push
mov
push
mov
adc
xlat
cmpl
lcall
shrb
std
sahf
jge
jno
inc
cwtl
cmp
or
cld
and
sbb
cld
fdiv
sahf
jl
jno
inc
cwtl
cmp
pop
xor
repnz
mov
lods
stc
jb
adc
fsubs
inc
cmp
test
test
test
test
test
test
mov
jno
js
out
jb
adc
xchg
mov
xchg
inc
lcall
jb
adc
cmpsl
inc
icebp
dec
fcoms
lcall
data16
outsb
jb
adc
cmpsl
push
icebp
push
fcoms
inc
fcmovnu
es
ss
fsubrs
adc
xchg
cmpsb
cwtl
data16
xor
ret
outsb
push
cld
xchg
xchg
jno
dec
rolb
icebp
and
call
out
push
mov
sbbb
loop
mov
add
daa
or
or
bound
mov
push
adc
ljmp
icebp
jb
inc
aas
adc
sub
pop
mov
stos
dec
mov
sub
test
or
xor
lods
jo
sub
push
xor
or
cmpsb
jbe
insb
dec
call
lret
scas
in
loopne
loop
mov
mov
pop
pushf
mov
lock
mov
lret
jbe
lods
shrl
fsts
fistpl
jecxz
clc
sbb
jbe
lods
repz
push
xor
sbb
sub
xlat
test
sbb
mov
imulb
mov
mov
sub
test
sbb
push
lods
pop
sub
push
arpl
imul
jmp
sub
push
xor
insb
push
test
sbb
sub
push
xlat
sub
xor
mov
sub
cmp
icebp
push
lret
shrb
xchg
lods
loop
xlat
push
ljmp
cli
jbe
lods
subb
push
mov
adc
mov
push
mov
insb
aam
mov
lods
push
sub
notb
push
test
sbb
jbe
je
xorl
test
sbb
jbe
lods
or
adc
adc
sbb
mov
xor
insb
lods
mov
sub
mov
sbb
int
mov
mov
fstl
push
in
shrb
cmc
lods
aam
jge
ja
insb
ss
sbb
sub
movsl
adc
xor
cld
gs
adc
shlb
pop
xchg
cmpsb
cld
sbb
ret
jecxz
mov
test
lods
dec
shll
and
or
mov
inc
xchg
jecxz
cmpsl
clc
lods
pop
or
mov
arpl
sarb
shlb
lods
xor
pop
sbb
push
mov
fnsave
xlat
or
lret
mov
and
mov
jmp
dec
xchg
mov
ror
scas
lds
cwtl
outsb
mov
cmp
std
in
movsl
mov
int
shll
inc
sub
sub
sub
mov
cld
lods
adcl
imul
mov
jp
lret
insl
lretw
clc
mov
orb
and
mov
cltd
into
stos
lds
sbb
fcmovnu
adc
rorl
and
cmp
pop
push
sbbb
cmpsl
xor
inc
cltd
push
into
xor
jns
sub
idivl
adc
mov
hlt
lea
or
int3
ss
jmp
xchg
xchg
xchg
jbe
cmc
jne
jecxz
push
dec
adc
mov
stos
pop
cli
mov
mov
nop
sbbl
test
sbb
aad
stc
cli
sbb
mov
movsl
xchg
mov
mov
or
pop
mov
je
cmc
mov
lcall
aad
flds
adc
and
js
addr16
movsl
xor
and
cmpsb
imulb
cmp
out
mull
cmpsb
mov
sbb
adc
mov
xor
cwtl
mov
gs
and
cmpsb
stc
pushl
cmpsl
adc
jo
enter
pop
cwtl
xor
adc
adc
lods
lock
sbb
dec
inc
out
cs
xchg
mov
mov
mov
add
jno
push
cwtl
push
dec
xor
sahf
notl
push
adc
and
cwtl
add
and
cltd
les
inc
jbe
xchg
push
mov
or
sub
aaa
repz
jbe
pop
cmpsb
pop
test
push
or
aam
int
movsl
stc
adc
xchg
mov
push
in
aaa
xor
mov
fldt
mov
or
pop
mov
int
jp
je
jne
in
mov
adc
cmp
sub
aad
jo
mov
inc
cmpsb
cmp
push
jae
jbe
adc
cwtl
jp
push
out
rorl
push
pop
jmp
dec
mov
push
lds
push
cmp
jno
add
jbe
cmpsl
js
adc
or
xchg
adc
adc
out
fdivrs
mov
jae
std
testl
daa
rorl
mov
clc
xchg
mov
mov
or
jne
rcr
in
adc
pop
divb
sbb
movsl
jecxz
xchg
xchg
daa
popf
cwtl
or
clc
sub
orl
or
dec
xchg
cmp
mov
out
in
push
fcomps
es
add
in
movsl
push
cmp
shlb
lds
outsb
movsl
rorl
pop
cwtl
mov
test
mov
cmpsl
mov
outsl
pop
pop
gs
ss
stos
mov
int3
or
jle
sbb
dec
insb
ljmp
js
outsb
push
sbb
or
adc
push
repz
je
int3
mov
scas
adc
mov
add
js
sub
mov
out
rcrl
xor
cmp
mov
jb
xchg
cmp
pop
cmc
xor
lods
cmp
fwait
mov
mov
add
lcall
ret
jae
jbe
aaa
andb
cs
add
push
mov
push
cmp
int
dec
repz
es
jmp
pop
push
add
std
and
adc
pop
dec
mov
js
test
sbb
jbe
lods
mov
daa
insb
sub
shll
sub
stc
test
sbb
dec
pop
or
push
adc
mov
adc
xor
jo
lock
or
repz
inc
adc
pusha
mov
sbb
sub
mov
das
jae
ja
adc
lret
test
xor
cmp
mov
mov
out
pop
jae
cmc
jb
dec
clc
mov
mov
cmp
mov
test
data16
lods
jne
dec
jmp
imul
add
test
mov
js
sbb
lock
repnz
push
mov
sbb
jns,pn
cmc
dec
imul
mov
out
js
xor
hlt
js
test
ss
mov
xor
clc
mov
ss
mov
mov
getsec
mov
mov
sbb
lock
mov
lods
jbe
fs
jb
stc
xchg
out
xor
sub
mov
test
mov
aaa
sub
mov
push
inc
js
stos
sub
jb
add
mov
push
and
cmp
mov
xor
repz
and
adc
lods
mov
neg
cmpsb
xorb
stc
ja
js
movsl
repnz
ss
divl
jbe
aaa
jo
lret
ss
ret
mov
mov
jb
and
pushf
jbe
shlb
cs
lock
xor
adc
xor
mov
sub
aas
decb
packsswb
fwait
cli
sbb
fwait
pop
push
push
bound
jb
xor
cli
sbb
jns
mov
iret
mov
mov
data16
decl
jl
sub
out
push
adc
inc
or
add
dec
mov
xor
push
psraw
push
test
dec
cli
xchg
inc
xchg
adcl
mov
add
imul
fiadds
push
xchg
mov
xchg
mov
mov
ja
daa
test
xor
outsl
sbb
fadd
roll
leave
xchg
call
xor
push
push
lds
pop
pushl
pop
cmp
inc
ds
cmpsb
sahf
xor
out
out
sub
lcall
mov
pusha
stc
icebp
popa
inc
call
js
leave
movaps
invd
inc
push
xchg
cmpsl
das
add
push
pop
push
dec
and
test
and
dec
outsb
ss
push
xchg
lahf
arpl
cld
sahf
out
mov
or
test
test
mov
stc
xchg
leave
xchg
out
shl
pop
daa
sbb
mov
cmp
cmp
and
mov
fldenv
sub
sete
out
cld
cltd
aas
addr16
cmpsl
mov
sub
daa
addr16
sub
stos
ret
mov
fs
pop
cltd
sarl
pop
jo
das
lcall
out
shlb
dec
rcrl
mov
mov
outsb
scas
mov
xchg
mov
jbe
repnz
inc
stos
add
inc
mov
lret
adc
sub
xchg
cmp
mov
stc
mov
and
or
sub
data16
adc
mov
push
inc
sbb
into
xchg
push
aad
mov
pop
push
pop
push
insb
xor
push
stc
lock
popf
fsts
cltd
imul
pop
push
jns
adc
xor
add
push
in
or
xor
jns
bound
jbe
ljmp
push
xor
xchg
push
outsb
sub
pop
cwtl
push
xor
push
pop
imul
push
xor
dec
cwtl
lods
mov
jbe
ss
jmp
test
icebp
dec
fcomps
insb
fcomp
pop
inc
push
cwtl
pop
cmp
push
mov
jbe
cmc
popf
adc
or
xor
push
mov
jo
insb
mov
push
jb
xchg
lock
jo
mov
sbb
pop
xchg
mov
jo
xlat
xchg
adc
lock
bound
cwtl
out
dec
or
xchg
fsubp
cmc
mov
stc
cmp
lea
cli
je
arpl
jmp
push
das
or
cmp
push
push
adc
xchg
test
xchg
mov
clc
in
pop
pushf
dec
or
fwait
addr16
xchg
pushf
mov
jne
push
jno
xlat
dec
aam
adc
lcall
je
sbb
inc
mov
jecxz
mov
cwtl
repnz
cmpsl
pop
mov
xchg
mov
jb
in
xor
inc
mov
sbb
popf
or
mov
fldl
xchg
rcl
in
xchg
test
fnsave
sahf
outsl
push
in
sub
data16
dec
cmp
jge
xchg
lcall
mov
inc
add
push
or
scas
pop
push
push
outsl
ss
xor
mov
push
inc
xor
pusha
repz
dec
nop
xchg
fwait
jno
push
lods
and
adc
jne
push
es
mov
cmovge
cld
push
hlt
jne
aas
mov
jmp
xchg
fisttpll
addr16
aam
fldcw
lahf
das
dec
xor
mov
mov
xchg
cmp
aad
ja,pn
outsl
sti
or
test
jg
pop
shll
mov
dec
add
and
mov
je
movsb
mov
aad
inc
int
sub
and
dec
int3
jns
xchg
addb
mov
xchg
mov
je
or
add
lcall
pushf
mov
es
test
mov
mov
psubsb
ja
lcall
repz
mov
fwait
dec
pop
jns
jge
xorb
je
jae
sub
jge
pop
dec
data16
daa
cmc
mov
xor
mov
pushf
dec
ret
adc
scas
and
push
xor
out
xchg
jbe
outsb
xchg
test
push
jbe
lahf
sti
jae
or
xchg
push
sbb
sbb
cmp
lea
andb
and
xor
pop
pushf
icebp
out
pop
adc
dec
push
mov
es
mov
adc
aas
mov
mov
inc
jbe
ja
push
out
or
lcall
lcall
not
repz
xor
xchg
pop
sub
xchg
jo
push
movsb
cli
stos
mov
arpl
cltd
push
push
test
movsb
popf
jae
xchg
xchg
cmpsl
outsl
mov
out
es
or
xchg
push
mov
outsl
xchg
pusha
inc
cmp
inc
mov
inc
js
daa
outsb
sahf
jne
or
pop
mov
adc
ja
add
movsl
mov
inc
jbe
sub
sti
dec
jne
sbb
cmp
nop
pop
out
sub
sub
scas
in
pushf
mov
jecxz
push
jecxz
cmp
mov
stc
sahf
adc
mov
jmp
pop
or
test
mov
push
cmpsb
and
ret
jns
std
cmpsl
cmpsb
cwtl
inc
adc
xor
xchg
xchg
adcb
and
push
idiv
testb
leave
scas
mov
dec
pop
es
test
sbb
mov
push
inc
xor
mov
mov
fldenv
adc
testb
xor
out
adc
movsl
xchg
xchg
test
ljmp
cltd
clc
dec
pusha
add
outsb
pop
js
jo
xor
xchg
popa
pop
stc
rorl
outsl
xchg
shrl
jo
push
lcall
fwait
cmc
fisubs
sub
aaa
stc
xchg
cld
pop
pop
adc
mov
ds
js
push
movsl
imul
sti
ljmp
outsb
pop
cmp
xor
loope
out
test
jl
lea
mov
test
dec
bound
sti
leave
insl
xchg
stc
cmp
or
stos
xchg
clc
xor
pop
mov
mov
cmpsl
out
cld
cmp
shl
add
mov
mov
shl
rorl
scas
mov
inc
ja
clc
dec
stc
jb
sbb
push
push
or
aam
push
outsl
es
jns
clc
out
leave
ja
xchg
cwtl
mov
outsl
inc
stos
clc
or
sahf
push
sub
cmpsl
cwtl
lahf
ja
aad
sub
push
decb
push
push
mov
mov
setg
mov
xor
or
scas
shrl
dec
pop
xchg
das
test
decb
addr16
sbb
jno
repnz
outsl
push
das
push
aas
decb
outsb
inc
mov
fadds
loop
push
mov
mov
sbb
pop
mov
inc
cs
out
shll
mov
cmp
cmpsl
inc
out
adc
test
outsl
cmpsb
pop
xor
es
xchg
sbb
jno
repnz
dec
daa
fsubl
gs
jbe
push
push
es
hlt
sub
push
pop
push
scas
outsb
in
dec
aam
aaa
in
or
dec
das
mov
mov
cmpsb
dec
mov
je
in
inc
add
sub
shll
icebp
cmp
rorb
mov
push
mov
pusha
cmp
push
mov
push
es
jle
inc
repnz
lea
cwtl
inc
mov
lock
mov
jl,pt
cmp
cmpsb
fnstcw
jbe
fwait
sub
comiss
lret
pop
fs
shll
add
ja
cmp
outsb
inc
dec
xor
pop
fdivrl
sahf
xchg
jbe
xor
mov
cmpsl
and
inc
lahf
lock
lea
mov
dec
mov
and
sbb
loop
call
mov
std
ss
sbb
pop
and
out
aaa
arpl
setns
jns
xor
fsubrs
lods
push
adc
cmpsl
pop
mov
jb
xchg
or
jbe
repz
inc
popw
out
jmp
xor
out
and
xchg
aas
pusha
mov
cltd
or
outsl
mov
jp
jl
inc
ds
pop
cmpsb
mov
cmpsl
lods
lods
ss
sahf
ds
add
add
and
int3
mov
mov
insl
push
push
stc
jne
movsl
clc
test
addr16
inc
lret
and
push
addl
push
push
mov
inc
dec
imul
pushf
mov
sti
cld
add
cmp
ret
jnp
mov
sbb
cmpsl
pop
and
mov
mov
inc
lods
ja
xchg
xor
inc
pop
lds
or
cmp
cmp
rcrb
pop
xchg
addb
cmpsl
shlb
sahf
cmpsb
fnstenv
inc
repz
mov
sbb
mov
push
or
prefetch
sub
scas
ja
outsb
stos
and
mov
or
and
shrb
pop
adc
xor
xor
adc
cmpsb
int
sbb
xchg
repnz
push
cmp
jl
pop
fdivr
mov
jb
xor
fnstenv
es
xchg
xchg
mov
in
test
es
pushf
popa
js
cmp
es
das
orb
js
cmp
jb
cltd
fs
mov
pop
pusha
je
sub
xchg
out
push
jns
out
scas
js
mulb
stos
sub
inc
stc
lahf
sbb
dec
jbe
mov
mov
sbb
ret
and
sahf
sbb
add
jns
cmp
lahf
pop
fsubrs
mov
pop
or
out
jg
in
ljmp
xor
mov
testb
stc
js
dec
mov
es
push
es
or
shlb
jbe
lods
repz
sti
jbe
repz
jno
out
sbb
je
sbb
jo
jne
out
jb
hlt
clc
lahf
jo
pop
bound
push
sbb
mov
rcl
and
sbb
dec
mov
mov
xchg
pop
inc
mov
push
sub
stos
mov
pop
out
jno
sbb
cmp
adc
xor
adc
fs
call
push
mov
in
xchg
xor
inc
inc
jo
dec
outsb
adc
loopne
mov
sarl
adc
mov
mov
sub
push
xchg
mov
push
test
sbb
sub
divl
sbb
jbe
lods
xchg
sub
push
test
sbb
jbe
lods
cltd
sub
cmp
insb
mov
adc
repz
insb
repnz
sbb
adc
negb
rcll
clc
sub
push
push
or
add
pop
jbe
adc
push
jno
fnstenv
jno
cwtl
lods
mov
test
xor
xchg
mov
or
clc
sahf
push
js
add
jno
clc
lods
dec
sub
push
mov
insb
cmpsl
push
or
jno
js
and
jb
or
jbe
sbb
les
adc
jge
xor
cli
insb
clc
add
sbb
adc
and
or
and
or
xor
cs
xor
jne
das
sub
xor
sub
lods
js
fmuls
fadds
adc
jae
ficoms
push
scas
adc
cmpsl
movb
mov
sbb
adc
jno
pusha
fsubr
shl
sbb
test
lods
dec
and
inc
mov
jb
out
movsb
inc
xor
pushf
xor
push
adc
mov
lcall
push
fdivs
mov
push
jb
jae
push
fprem1
testl
ja
clc
sub
call
loopne
hlt
jbe
lods
mov
notl
aaa
out
insb
mov
out
ss
test
push
jb
cmp
xor
outsb
jl
sub
mov
cld
cli
in
sub
scas
lods
push
ss
repnz
hlt
sbb
orl
maskmovq
divl
cwtl
fsubrs
and
sub
mov
adc
loopne
xor
xchg
and
and
push
es
js
lcall
dec
and
xlat
cwtl
xchg
mov
xchg
fsts
test
fnstenv
lods
cltd
sub
push
pop
dec
insb
sbb
inc
lods
cwtl
sub
sbb
test
rcll
pop
test
sbb
jae
nop
sub
push
fdiv
insb
lock
sbb
sub
push
mov
insb
subb
lods
and
jne
sbb
pop
repz
das
out
mov
loope
mov
jns
mov
sbb
pop
push
add
scas
or
jbe
test
jns
push
add
bound
adc
shl
test
mov
lods
xor
movsl
insb
inc
test
sbb
inc
je
lret
sub
leave
insb
pop
test
sbb
and
push
and
ss
xor
out
cmpsl
sub
add
bound
arpl
je
cmp
outsl
insb
inc
test
sbb
sub
fwait
push
xor
sbb
jbe
lods
movsb
sub
test
arpl
sub
setne
ja
sahf
les
hlt
cmp
mov
mov
cmp
mov
mov
xchg
mov
push
jecxz
push
hlt
mov
inc
push
sub
out
xor
stc
ss
sub
cmp
dec
fwait
jb
xor
adc
cwtl
push
mov
stos
sub
gs
mov
xchg
outsl
jo
push
in
hlt
pop
push
nop
cmp
or
jo
push
into
mov
push
mov
xor
mov
xchg
int
and
fnstcw
aad
and
js
mov
cmpsb
inc
loope
stos
cltd
je
lods
out
sub
test
sbb
leave
push
sahf
dec
sbb
cmp
shl
xchg
test
sbb
mov
pop
sub
clc
jbe
lods
cmp
mov
or
js
dec
sub
push
out
mov
dec
hlt
das
inc
xor
sub
pop
and
fdivs
jecxz
aas
sbb
pop
pop
mov
sbb
sbb
test
mov
mov
sbb
cltd
add
and
cmp
lea
int3
xlat
outsl
cmp
call
pop
sbb
scas
test
mov
dec
add
dec
jno
les
jmp
xor
test
and
mov
mov
mul
xor
add
cmp
push
in
jne
cs
pop
mov
icebp
dec
add
mov
xlat
es
inc
ret
int3
fistpl
gs
push
sub
push
mov
sub
push
jns
andb
inc
inc
sbb
adc
xor
cld
xchg
fwait
sti
arpl
cmp
mov
cmp
sbb
sbbb
add
xchg
cmp
es
pushf
icebp
loope
xchg
cmc
movsl
dec
sahf
cmp
or
rorl
mov
shl
cmp
add
xchg
or
stos
lret
pop
out
repnz
into
insb
jmp
gs
add
mov
xor
push
cmp
jl
sub
fildl
push
sbb
cmp
shrl
sub
pop
cmp
cmp
dec
jl
test
xlat
mov
sbb
testb
mov
and
loopne
push
rorb
inc
cmp
add
add
int
add
xor
out
mov
lret
and
das
adc
jg
pop
adc
sub
lds
movsb
and
cwtl
stos
in
mov
cmp
xchg
icebp
push
dec
enter
mov
and
add
aad
loope
das
pop
out
xor
lods
sahf
xlat
test
mov
inc
dec
or
movsb
or
fstpt
push
jbe
or
arpl
iret
push
sub
cmp
mov
mov
pop
fisttps
cmp
xchg
jg
cmp
jmp
push
mov
xor
xor
and
jl
cmp
cli
loope
je
cmp
lods
jae
add
and
add
adc
add
fimull
mov
mov
cmp
mov
icebp
add
jle
or
test
mov
cmpsb
mov
mov
push
mov
cltd
ds
inc
inc
pop
repnz
sbb
adc
cmp
les
out
lods
fnstcw
mov
inc
pop
psubusw
lret
xor
xor
ret
mov
add
fcoms
adc
js
fmuls
out
aaa
sbb
jbe
cwtl
fwait
adc
outsb
in
cwtl
jnp
add
in
pop
lahf
cwtl
inc
adc
jnp
adc
mov
inc
mov
out
adc
or
xchg
adc
cwtl
fsts
pushf
xor
sahf
sub
mov
xor
imull
out
mov
out
cltd
mov
fists
mov
mov
or
push
mov
es
or
mov
fistl
mov
shll
sbb
sbb
std
popa
mov
dec
jo
js
push
adc
sub
lret
xchg
jns
or
jle
push
dec
cvtpi2ps
shrl
movsb
push
mov
fsqrt
out
push
inc
lock
shrl
fsubrs
loopne
pushf
sub
mov
mov
lods
inc
lock
sbb
push
fadd
push
adc
das
xor
xchg
jb
enter
ret
push
inc
rclb
push
mov
cmp
xor
lea
xor
xor
mov
jge
push
cmp
mov
mov
sbb
std
adc
push
cmp
xchg
or
and
xor
sbb
jno
ja
and
out
out
call
idivb
and
mov
inc
daa
mov
dec
xchg
fdivrs
push
fdivs
test
jmp
js
fcompl
cmpsb
inc
adc
inc
xor
icebp
mov
ja
cmp
imul
or
adc
jecxz
adc
out
lock
mov
push
inc
cmp
push
sub
cwtl
sbb
pop
mov
pop
scas
imul
jbe
stc
dec
je
icebp
sub
cwtl
mov
cltd
push
mov
popa
mov
ds
mov
test
mov
mov
dec
mov
or
std
inc
insb
pop
pop
inc
push
push
outsl
cmc
ret
dec
sbb
jl
into
xchg
cmp
cmp
or
add
xor
inc
and
sbb
lea
ja
bt
pusha
imul
cmc
add
movb
pusha
pushf
pushl
lea
jmp
mov
mov
jmp
addl
xor
and
fidivs
adc
out
rorl
sbb
push
pusha
pop
jg
mov
xchg
mov
push
data16
fildl
dec
mov
in
xor
pop
lock
ljmp
lcall
mov
inc
je
adc
push
les
es
pushf
movb
dec
pushl
movb
ror
pushf
test
stc
cmc
shr
push
pushf
pushf
lea
je
pusha
mov
call
adc
adc
or
arpl
dec
pop
out
lea
inc
lods
mov
xchg
add
xchg
int
cmp
outsl
cmp
inc
jo
cs
dec
xor
fldl
pop
xor
xchg
xchg
adc
xchg
mov
mov
push
mov
push
push
pop
loope
pop
mov
pushl
mov
xchg
inc
pop
rcrl
push
or
ljmp
lret
push
outsl
stos
cmp
push
cs
sti
ror
mov
and
push
mov
test
add
sahf
mov
scas
lret
lock
fucompp
hlt
dec
add
dec
out
push
mov
fistl
popa
add
test
loopne
call
mov
cmpsb
cmp
loopne
push
std
outsb
sahf
dec
mov
jge
sub
adc
mov
pop
test
cmp
pop
push
mov
movsl
mov
scas
jnp
sti
mov
and
push
lahf
push
push
push
jno
outsb
push
and
scas
cli
dec
stos
je
aaa
mov
and
xchg
or
sub
mov
fsub
adc
adc
rcrb
and
movw
pushl
lea
call
call
jmp
cmp
mov
arpl
add
adcl
mov
sbb
inc
shl
aaa
pop
xor
mov
xor
sub
les
cmp
mul
fcompl
lock
and
cmp
push
mov
icebp
movsb
into
loope
sbb
popa
push
sub
jl
ja
mov
adc
lret
lock
cmp
in
ds
add
and
repz
jns
cmpsb
pusha
mov
lea
jne
pusha
push
call
fs
mov
aad
into
imul
inc
dec
sbb
sbb
ja
add
test
jno
mov
out
jns
pop
mov
or
mov
test
pop
pushf
cmpsl
cwtl
lds
fnstenv
cmp
std
inc
lret
cmp
fwait
daa
jle
push
xchg
clc
cld
insl
push
popf
fdiv
stos
cmp
xor
xor
add
sbb
and
mov
sub
dec
jns
mov
jmp
xor
jbe
cmpsl
scas
mov
repz
test
rolb
push
fisubs
fnstcw
jae
cmpsb
adc
sub
or
xor
aas
mov
nop
sbb
sbb
test
push
movsb
cmpsb
or
ss
mov
stc
pop
jno
ret
sti
lock
push
mov
loope
push
adc
push
xchg
sahf
mov
and
dec
inc
sbb
insb
sub
mov
mov
sub
adc
bound
cltd
sti
sahf
mov
pushf
xchg
pop
xchg
push
xor
das
inc
adc
adc
insl
pop
insl
not
lea
sets
lea
pushf
mov
call
mov
xchg
cli
inc
jl
cmp
popa
in
and
icebp
jmp
icebp
fisubl
jb
sar
popf
push
testb
adcl
push
fistps
cmpsb
sbb
mov
movsb
sbb
mov
jmp
repnz
loope
ds
andl
and
or
jnp
push
incb
adc
in
out
and
ret
adc
lods
sbb
bound
lret
inc
cmc
lods
and
add
stos
mov
mov
call
jb
cld
inc
scas
stos
rol
push
push
pop
ss
mov
cmp
or
cltd
movsb
mov
lea
addr16
cmp
jne
push
mov
aad
pop
bound
fs
mov
sbb
cmp
std
fs
stc
aaa
orl
or
push
jmp
push
jo
fldcw
mov
lea
jne
push
pusha
jmp
jmp
xchg
outsb
aad
int3
inc
into
call
push
ret
das
adc
cld
dec
cmp
aas
inc
cmp
mov
add
cmpsl
cmp
outsl
adc
fdivs
dec
testb
mov
leave
dec
cmp
addb
inc
cmpsb
adc
mov
push
cltd
xchg
cmpsb
lods
mov
push
lahf
or
cmp
out
out
mov
cmp
push
pop
and
popf
iret
lret
push
mov
cwtl
xchg
aas
les
sbb
xchg
and
mov
inc
sbb
cmpsb
inc
insl
mov
int
mov
iret
cmp
addb
nop
in
pop
popa
pop
test
es
cmpsb
adc
in
ss
jae
xor
push
sub
or
add
sarl
testb
add
mov
bound
mov
inc
mov
cmc
stos
cmp
and
aad
cwtl
dec
push
xchg
je
jo
aad
dec
loope
mov
icebp
push
add
or
xchg
cmc
icebp
pop
mov
das
xchg
mov
cmp
cmc
test
cltd
insb
cmp
xchg
push
mov
jne
add
int
test
cmpsb
fldl
xor
int3
fbld
push
push
call
add
push
push
js
arpl
gs
add
aaa
popl
clc
clc
cmc
cmp
pushl
jmp
jl
fidivrl
and
xor
push
mov
popf
mov
pushf
push
leave
and
repz
jl
and
xchg
cmpsb
int3
cmp
lcall
cmp
add
out
movsl
pop
pop
cmp
adc
mov
mov
mov
outsb
aas
popa
sbb
addb
jp
add
cli
mov
test
lds
std
or
mov
ficompl
stos
push
sbb
cltd
gs
or
call
mov
jb
xchg
lret
pop
push
mov
jnp
test
ss
cwtl
shr
push
mov
add
adc
negl
bt
stc
sub
cmc
call
sub
clc
cmp
pushf
call
push
movb
lea
call
push
movb
pushl
movl
lea
jae
bt
bt
bt
pusha
sub
call
pushl
mov
call
lea
jne
call
sub
int3
rorb
repnz
pop
dec
pop
cmp
insl
inc
inc
mov
icebp
cmpsl
lret
mov
sub
pop
mov
lret
push
or
rep
or
sub
pop
push
cmp
or
adc
push
cs
push
xchg
stos
rorb
in
and
mov
push
lods
ss
jmp
shlb
jmp
xchg
jmp
je
mov
aad
or
stos
pop
inc
loop
dec
mov
adc
mov
jp
or
rcll
int
mov
jmp
js
in
cmp
sahf
xchg
xlat
sub
and
popf
push
push
push
pop
enter
in
pop
es
pop
push
sbb
xchg
mov
adc
or
jge
neg
aas
push
aaa
sub
pop
cmp
fisubl
rclb
into
jne
xchg
pop
xor
xor
ljmp
mov
js
rorl
leave
jb
mov
push
jns
cltd
sbb
sbb
mov
ljmp
push
cwtl
outsl
rorl
jno
fwait
jae
sbb
js
cmpsb
cmp
and
dec
data16
ljmp
addr16
aam
xor
jl
inc
jbe
scas
movsl
sub
push
push
dec
loop
and
xchg
mov
sbb
movsb
or
loope
adc
adc
xor
jb
stos
inc
pop
xor
jmp
in
ljmp
push
repnz
xchg
cwtl
jmp
xchg
lcall
and
inc
xor
sbb
sub
leave
and
into
imul
jbe
sti
or
ret
adc
das
cld
add
lret
xchg
cltd
sub
popf
inc
aaa
cmpsb
cld
pop
sbb
pop
imul
loop
push
fmulp
and
sub
scas
lret
stos
pop
jns
inc
push
mov
cld
or
sbb
jns
fcmovnb
ljmp
sbb
mov
jae
rcll
or
xchg
push
jp
lcall
pop
xor
dec
popa
mov
out
pop
pop
inc
sbb
test
add
push
call
into
in
les
xchg
cmp
inc
adc
push
je
lahf
fisttps
jo
sar
out
loopne
mov
pop
arpl
std
lcall
aad
ljmp
push
jp
daa
pop
mov
adcb
cmp
popf
mov
mov
push
push
push
pop
jno
addr16
mov
and
push
imul
rcrb
stc
loopne
in
mov
add
icebp
cmp
dec
pusha
sub
divl
nop
and
jb
stc
les
std
movsb
lret
add
das
or
pop
les
xchg
hlt
jmp
jge
aas
or
pop
lret
popf
lahf
and
out
ficoml
fldlg2
and
cmp
jl
or
push
out
cmpsb
mov
out
dec
sbb
insl
mov
lods
jb
imul
in
fisttpl
mov
iret
pusha
aad
scas
xor
adc
jbe
nop
test
xchg
sti
mov
xor
cmp
sahf
in
jmp
dec
inc
pop
sub
lret
mov
stos
les
xchg
push
jmp
aam
ljmp
inc
shlb
jbe
mov
shr
mov
mov
std
cmc
pusha
adc
loopne
and
int3
jae
cwtl
xor
pop
sub
jecxz
xchg
addl
sub
les
ret
ret
iret
jnp
dec
xchg
inc
dec
lods
aad
add
test
in
inc
dec
bound
cmpsl
inc
aas
mov
xor
xchg
pop
es
loopne
mov
xchg
jg
cmp
jmp
loopne
dec
push
jecxz
pop
lock
out
std
aam
cmp
rcr
sarb
mov
dec
adc
inc
jo
xor
mov
xor
adcb
cmp
fsubl
xor
cmp
divps
testl
or
jns
adc
loop
push
hlt
mov
add
xchg
fs
pop
outsb
push
cmp
pop
and
mov
mov
mov
popf
push
sbb
push
pushf
imul
leave
fcompl
xchg
inc
int3
enter
stos
cmova
jl
roll
sub
rcrl
cmp
dec
add
in
and
out
jae
lock
xchg
insb
std
insb
jl
jne
ss
test
inc
jp
stos
cmova
push
test
fidivrl
add
leave
cmp
iret
mov
out
bound
xor
adc
sub
orb
or
insl
mov
mov
gs
inc
cmp
addr16
lcall
cs
ret
int3
test
push
jmp
lcall
dec
xchg
mov
decl
in
subl
push
cmpsb
jne
xor
inc
or
or
sbb
jae
add
pop
fiaddl
dec
jb
fadd
xor
and
adc
fisttps
jb
dec
movsl
mov
and
inc
cmp
mov
enter
rcrl
dec
lods
sub
jge
aaa
jo
and
dec
addr16
lea
xchg
xor
rcll
fwait
pop
test
push
cltd
or
jb
cmp
cmp
and
movsl
enter
scas
sbb
jne
lcall
rorb
push
pop
xchg
push
hlt
cmp
mov
cmpsb
adc
repz
stos
subl
cltd
xor
add
dec
mov
jno
dec
bound
fisubs
jb
xchg
imul
sbb
mov
repz
mov
gs
xlat
stc
and
aaa
xor
cmp
das
and
repnz
in
sbb
sbb
stos
lods
inc
pop
cwtl
mov
sbb
loopne
icebp
imul
sub
pop
xor
sarl
jmp
sbb
push
pop
xchg
and
lea
ja
setne
ror
sub
not
btc
shl
shr
add
dec
mov
or
shr
shl
mov
test
bt
repnz
pushf
lea
jne
push
pusha
movzbw
movb
lahf
mov
pushf
cwtl
movsbl
lea
jmp
clc
mov
jmp
ss
movsb
or
mov
sarb
int3
mov
pop
jmp
fmull
and
shrl
in
jne
andb
push
jecxz
jmp
pop
cwtl
jno
mov
sbb
jmp
cmpsl
outsb
std
in
fisttpll
cwtl
xor
js
roll
mov
jnp
push
imull
aas
inc
dec
jbe
dec
lods
xchg
out
or
sbb
jg
icebp
gs
inc
cwtl
mov
pushf
in
movsl
jns
and
testl
or
lcall
scas
mov
iret
in
cmpsl
xchg
ffree
mov
xchg
xor
sahf
call
xor
jbe
jb
fcoms
dec
push
pop
sbb
int3
mov
jge
cmp
nop
adc
arpl
xor
jmp
fnstsw
aas
adc
in
jl
and
int
jmp
gs
cmp
fs
out
push
xlat
push
jne
add
fildll
shll
fnsave
jno
and
adc
jnp
or
lea
je
cmc
pushf
push
clc
add
call
leave
sbb
leave
or
mull
push
scas
insb
push
push
stos
mov
cs
clc
dec
add
ds
dec
xchg
mov
sbb
iret
stos
jns
test
pop
loope
jno
xor
je
cmpsb
shlb
fimuls
fbld
loope
sub
shl
jno
dec
test
dec
xchg
adc
cmc
push
or
inc
lods
hlt
mov
cli
ror
pop
and
in
rcll
loopne
push
or
or
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
pop
movsb
leave
or
shll
inc
subb
inc
mov
sti
cmp
and
icebp
hlt
inc
dec
cmp
aad
stos
mov
in
adc
stc
movsb
jbe
scas
dec
xchg
and
adc
inc
imul
inc
jge
into
mov
out
jo
xor
cmc
cli
js
cld
lcall
cltd
cmp
pop
sub
insl
mov
inc
cwtl
push
sub
out
pop
inc
adc
out
stos
jns
adc
pushf
jo
xor
jns
xor
div
mov
jmp
pop
xor
scas
mov
arpl
inc
test
add
lock
cmp
mov
jmp
xor
pop
lods
push
lret
or
lock
or
fsubrl
popa
out
loop
fsub
pop
jecxz
cwtl
mov
jl
ret
xor
mov
push
shll
arpl
imul
sub
mov
outsb
mov
faddl
xlat
cltd
add
insb
push
sysret
add
lahf
mov
loope
xor
inc
cmp
xchg
xor
fldt
out
push
jge
in
out
fwait
cmpsl
clc
lock
out
mov
daa
cmpsb
scas
mov
dec
aam
bound
push
mov
pop
fcoms
mov
sbb
xor
insl
push
pusha
call
cmp
cmp
call
push
xchg
or
popa
in
mov
jle
test
iret
sub
jmp
leave
pushf
nop
ljmp
scas
xor
inc
xchg
hlt
push
sub
incl
adc
pop
fistps
mov
add
rolb
sbb
fwait
aad
and
xlat
xchg
arpl
setle
mov
pop
data16
aaa
pop
mov
loopne
mov
add
push
push
icebp
inc
jmp
dec
js
mov
sub
or
mov
mov
mov
rcr
call
stos
sbb
lret
or
jmp
test
stc
ret
pop
dec
mov
mov
lcall
int3
sbb
jo
movsl
adc
ljmp
sub
fisubs
stos
and
and
mov
cmp
sbbb
test
inc
add
sti
dec
je
insl
mov
push
aad
sub
or
pushl
aam
cmp
or
mov
dec
shlb
aam
xor
imulb
xchg
inc
stc
les
outsl
popf
gs
ret
xor
inc
andl
xor
mov
mov
popf
push
cmpsb
adcb
mov
stc
insl
pop
sub
push
mov
mov
cs
add
sub
pop
int3
lcall
fists
adc
pop
arpl
pop
rclb
mov
pop
fisttpl
adc
xor
movsl
aas
adc
push
jns
or
xor
jnp
sub
icebp
ja
je
imulb
dec
cmp
xchg
cmpsb
xchg
push
mov
push
xor
leave
aaa
or
mov
xchg
and
add
xchg
fwait
inc
jecxz
xchg
sbb
stos
into
pop
push
and
inc
sub
in
cmp
sbb
jmp
cmpsb
push
pop
test
mov
popf
jmp
jbe
enter
aas
push
jne
xabort
dec
and
pop
popw
push
jns
roll
jo
pop
std
or
fdivr
lods
ljmp
gs
rcrl
sahf
lret
or
loope
aas
jo
pushf
xor
mov
adc
or
mov
icebp
ljmp
jp
cmp
mov
imul
cmp
add
arpl
xchg
popa
daa
adc
das
xchg
xor
pop
hlt
and
dec
lcall
cltd
cmpsl
jecxz
add
sbb
outsb
pop
in
xchg
xor
leave
add
mov
sbb
adc
xchg
arpl
push
cmp
xlat
mov
jnp
ret
sahf
and
adc
xchg
popa
rolb
mov
xchg
imul
mov
pusha
push
mov
dec
dec
xor
add
daa
jns
push
mov
pushf
pushf
pushl
ret
xor
xor
arpl
and
xchg
push
jne
pop
sbb
push
inc
cmp
scas
test
push
xchg
push
push
int3
dec
sahf
cmp
aas
jge
stos
aam
enter
mov
js
addr16
aas
dec
or
ret
and
inc
xor
or
push
add
inc
daa
sbb
lea
lcall
mov
ficompl
out
sbb
cmp
cltd
xchg
xchg
imul
stc
inc
adc
pusha
push
xchg
pop
gs
fbstp
aas
ljmp
push
push
adc
movb
dec
adc
adc
xchg
and
xchg
cmpl
cmp
adc
jae
push
imul
jo
aaa
ja
lea
je
bsf
sub
mov
shl
dec
pushf
add
lea
mov
pushf
cmc
bt
test
jmp
mov
xchg
cmc
dec
xchg
das
and
in
cmp
pop
mov
sahf
fnstenv
ja
fisubl
cwtl
ret
push
sub
mov
test
dec
fbstp
movsl
test
stos
mov
xchg
jge
mov
movb
ss
add
lods
cmc
and
movsb
add
ljmp
jl
movsl
dec
sub
xor
test
adc
iret
or
mov
shld
inc
incb
sti
push
mov
testl
mov
mov
lock
jbe
and
mov
aam
sub
pop
out
rcrb
mov
pop
mov
push
stc
pop
mov
pop
inc
sub
clc
and
jne
mov
or
and
int3
cmc
lds
out
dec
inc
incb
lahf
int
xor
movups
jnp
aaa
pop
xchg
sub
pusha
xor
sub
sarb
sbb
xor
pop
and
les
mov
dec
arpl
imul
movsl
jmp
or
mov
add
nop
sbb
pop
div
test
scas
sub
and
adc
lock
jbe
nop
push
lea
rorl
xchg
std
cmp
je
ja
jmp
pop
add
js
outsl
sbb
stos
cltd
sbb
popf
test
cs
cld
loopne
ret
cmp
sub
push
or
ljmp
xlat
lods
movsl
xor
mov
mov
aam
sbb
lds
lret
les
inc
nop
push
jp
sub
fcoml
add
rcll
roll
and
jl
ljmp
jno
ds
lahf
lcall
push
pop
xor
xchg
sub
mov
repnz
mov
xchg
xchg
sub
sahf
lea
mov
add
fisubrs
sahf
inc
xchg
clc
lret
iret
mov
in
mov
mov
sub
rclb
imul
cmp
arpl
movsl
add
decb
cmpsb
adc
sub
jge
push
outsl
fmuls
insb
insl
sub
sub
sbbb
call
jns
lea
mov
scas
pop
aaa
adc
loop
in
add
movb
movl
pusha
pusha
push
lea
jmp
outsb
and
rorb
xchg
ja
add
xor
mov
repz
aam
add
adc
sbb
and
mov
inc
add
scas
inc
dec
dec
jb
jb
rorb
mov
lcall
imul
adc
fstpt
pushf
xlat
clc
xchg
mov
xchg
push
mov
pop
push
mov
out
cmp
clc
sarl
fstpt
mov
loopne
pushf
in
imul
mov
pop
and
cmpsb
repz
sbb
push
mov
sub
mov
cmp
shll
pusha
add
add
push
lcall
lock
cmp
mov
in
jbe
sbb
push
xchg
xchg
mov
xor
inc
cmp
mov
cmp
add
sub
gs
add
jne
mov
add
mov
testb
cmpsb
adc
stos
movb
jmp
xchg
cmpsb
jp
into
pop
lcall
rorl
xchg
lcall
push
insb
inc
mov
mov
and
in
pop
mov
data16
inc
and
cwtl
movsb
lcall
ss
cmp
imul
pop
shrb
cmp
xchg
lahf
repz
rcll
js
enter
es
xchg
push
mov
out
mov
addr16
sub
in
mov
aaa
mov
cld
das
inc
scas
xchg
push
push
xor
jle
mov
jnp
jl
push
mov
icebp
sub
cli
cmpsb
sub
cs
jmp
pop
daa
jns
add
push
gs
imul
js
inc
add
xchg
aam
lret
xchg
roll
push
or
xchg
insb
pop
dec
movsb
xchg
in
pop
pusha
fisubs
mov
pop
cld
jmp
sbb
sbb
adc
xchg
movsb
mov
lcall
pop
xchg
and
cs
sub
sbb
add
mov
and
jmp
sub
lcall
add
inc
scas
inc
jmp
in
in
gs
add
out
ljmp
mov
dec
mov
or
test
pusha
or
call
jae
or
push
sub
fmulp
cwtl
jecxz
mov
cmc
jns
xchg
sub
movsb
sub
lcall
xlat
adc
nop
movsb
add
pop
push
das
add
fistpl
push
stos
fcmovbe
inc
cmp
push
repz
in
aas
inc
push
shl
add
xchg
dec
faddl
andl
and
add
mov
inc
and
pop
sub
xchg
lea
jmp
jmp
xor
xchg
sbb
sbb
shrd
mov
sete
cmc
mov
call
test
pushf
mov
mov
call
mov
xchg
jl
stc
fldl
xor
cmpsl
lock
or
out
dec
daa
insl
push
in
fsubrl
push
std
mov
lret
jg
fwait
cmpsl
lock
mov
and
lock
mov
lea
or
stos
sub
mov
or
scas
xchg
pushf
pop
testl
mov
and
int3
jns
cmp
adc
daa
push
loopne
or
sub
push
inc
push
in
sub
cli
push
je
in
sbb
mov
jae
aad
xchg
gs
js
cld
dec
imul
or
mov
adc
cmp
int
xchg
cltd
pop
cmpsl
jns
std
mov
movsl
das
sbbb
test
out
push
cmc
adc
mov
movsb
fstps
xor
or
sub
push
out
or
rcr
std
mov
ja
pop
fs
mov
sub
push
and
pop
xor
flds
mov
mov
mov
loopne
cmpsl
push
sub
out
addb
test
ja
xchg
arpl
xlat
or
insl
enter
pushf
outsb
adc
adc
insb
inc
cmc
mov
and
leave
cmpsl
push
lea
jb
add
push
mov
jg
mov
lahf
das
aad
xchg
mov
lea
je
cmc
add
test
sub
xor
btr
mov
xchg
shr
dec
mov
sub
jmp
lea
jb
pusha
push
mov
push
pushl
ret
lea
jae
test
bsf
bsf
mov
call
das
mov
jecxz
or
rcl
lahf
js
xor
rcrl
adc
mov
out
dec
push
notl
sbb
inc
dec
outsl
lahf
adc
or
sub
dec
push
inc
push
in
ljmp
push
inc
insb
loopne
lahf
mov
jns
inc
jg
push
imul
mov
sub
add
inc
in
cmpb
mov
xor
fnstenv
xchg
fbld
fmuls
xchg
lods
mov
in
and
cmp
in
or
mov
and
int
xor
imul
xchg
fcmovnbe
mov
sub
sub
imul
xchg
jl
push
sbb
flds
enter
jp
movsb
xchg
in
push
aaa
xchg
call
xlat
mov
jge
jmp
in
or
push
call
or
popf
xlat
and
bound
push
inc
jmp
push
jns
lret
bnd
jecxz
addl
jno
add
mov
adc
dec
add
leave
adc
fildl
adc
push
cld
addr16
push
fidivl
dec
pusha
pop
xchg
dec
call
jl
jbe
cs
sbb
in
inc
hlt
cmp
mov
jge
aas
jl
mov
inc
jmp
loop
sbb
iret
push
sbb
sbb
pop
push
lret
outsb
push
int
add
scas
push
jb
dec
scas
fmuls
xchg
push
push
ds
adc
or
cmp
mov
xchg
lret
xchg
sahf
inc
inc
xchg
xchg
out
adc
lahf
into
adc
cmp
jg
les
xor
shrb
dec
xor
jge
addr16
cs
mov
fnsetpm(287
clc
lock
ret
xchg
imul
repz
add
jecxz
mov
sarb
jl
xor
icebp
or
rclb
mov
lds
setno
mov
dec
mov
xchg
push
mov
lea
inc
pushf
pusha
mov
mov
pushf
jmp
jmp
imul
xchg
js
sbb
push
sub
inc
cwtl
push
lea
push
cmp
enter
dec
sti
repz
fisubrl
and
pop
jb
cmp
ja
jno
cmc
xchg
lds
dec
dec
lods
or
jl
push
xchg
xchg
cli
ret
dec
addr16
push
int
subl
cmpsb
cmp
xchg
mov
fstpt
stos
clc
push
add
dec
dec
stos
mov
iret
jo
lahf
not
cwtl
movb
movsbw
not
not
mov
pusha
movzbw
lea
ja
setne
lea
call
and
jbe
or
jnp
dec
in
ja
lods
push
adcb
sti
mov
stos
xchg
mov
push
fsubr
ret
push
bnd
nop
xchg
loopne
pop
and
push
cli
clc
push
pop
sub
loopne
inc
and
pop
ret
je
pop
jne
mov
out
xchg
jns
scas
xor
or
jmp
inc
mov
arpl
sbb
ljmp
lcall
pop
jp
dec
cmp
mov
sbb
pop
xor
adc
jmp
insl
fisttpl
xchg
adc
arpl
les
cmp
jbe
mov
mov
shlb
mov
lea
sti
sbb
jle
nop
aas
cwtl
out
dec
movsb
lret
int
xor
out
lods
sub
shr
int
loope
lret
lock
stos
xchg
adc
mov
cmp
frstor
mov
or
mov
mov
jp
and
add
add
push
jp
incl
ret
and
pop
and
pusha
lea
jmp
mov
mov
push
pushf
pushl
ret
adc
push
inc
shl
sub
shr
mov
bswap
pusha
mov
inc
or
xchg
call
pop
cld
add
or
push
push
mov
inc
inc
loopne
push
movsl
adc
test
and
jecxz
ret
test
jmp
pop
das
and
pop
xlat
movsl
cmp
les
stos
rcrb
addr16
ficoms
cmp
sub
mov
pop
jle
test
add
testl
mov
fdivrs
hlt
dec
int
push
in
fcom
aaa
lock
add
inc
js
je
jb
arpl
jae
bswap
pop
call
cmpb
jmp
mov
xchg
fbld
add
je
flds
decl
push
daa
lods
push
mov
dec
jno
out
test
pushf
daa
ds
dec
inc
xchg
lock
test
add
int3
adc
adc
incl
lret
addr16
popf
sbb
sar
imul
pop
dec
xor
pop
lods
f2xm1
sbb
xor
stc
sbb
addr16
mov
and
test
and
fmull
xchg
or
pop
out
sbb
subb
mov
xor
mov
lds
aad
scas
mov
mov
sub
mov
push
xchg
xor
or
fadds
cmc
push
cmc
mov
and
insb
fs
jmp
pop
xor
jecxz
sub
push
jg
or
cwtl
inc
inc
ficoml
das
add
dec
jne
imul
and
clc
mov
sub
add
pop
jno
and
call
movsb
repz
repnz
add
push
lea
jmp
lea
ja
call
neg
call
push
mov
or
sub
in
xchg
jecxz
add
pop
ljmp
rolb
push
popa
insl
xchg
cwtl
dec
ss
cmp
ljmp
cwtl
mov
insb
mov
gs
out
es
pop
cmp
mov
sub
sub
xor
rol
fs
push
fcos
stos
stos
cmp
pop
loopne
in
cmp
imul
lret
jb
add
sbbb
mov
pop
dec
or
jg
or
dec
adc
or
and
sahf
push
lds
scas
xchg
dec
mov
jp
push
pusha
mov
jb
jge
subb
mov
pop
pop
and
mov
mov
cmp
pop
loope
popa
loop
sub
xchg
or
loope
inc
int
leave
adc
pop
cmc
push
mov
cmc
pop
sub
cmp
lret
or
imul
fwait
mov
bt
sub
call
lea
je
call
call
pop
mov
popf
movsl
sbb
jp
xchg
aam
mov
aam
jle
sbb
repnz
nop
test
pop
xchg
not
pusha
cli
mov
inc
or
js
imul
cld
cs
sahf
sbb
inc
add
or
cmp
loopne
adc
ret
push
or
sbb
jecxz
leave
scas
les
dec
rcrl
adc
cli
sbb
pop
or
in
or
mov
mov
fs
and
lcall
mov
pop
dec
cmc
mov
sub
inc
cmpsl
fisttps
xchg
pop
loop
fwait
add
xor
add
mov
fdivr
fildl
cmp
mov
lock
mov
lahf
or
inc
shll
mov
int
jnp
jae
xchg
or
out
nop
rorw
sub
andb
and
sbb
and
or
js,pt
icebp
push
fstpt
subl
call
jbe
pop
rorw
ret
enterw
imul
pushf
stos
mov
add
test
mov
jns,pn
jns
jb
jb
add
sbb
mov
sti
jecxz
or
pop
sub
jl
cmc
es
movsl
fwait
jo
pop
sbb
dec
cld
jns
aaa
push
repz
push
sub
mov
sub
xor
mov
in
sbb
xor
xlat
jecxz
test
mov
and
or
xorl
fmuls
hlt
or
mov
xor
loopne
js
iret
jle
pusha
out
lcall
popa
aas
adc
out
push
fcomi
imul
jmp
arpl
push
outsl
int
loope
mov
lods
add
cmpsb
push
inc
cli
cmp
shll
push
bound
and
sahf
aaa
lods
sbb
push
out
push
mov
js
pop
xorb
mov
sbb
movsl
push
dec
push
shll
sbb
cmp
pushf
dec
addl
jge
or
add
jmp
sbb
sahf
push
hlt
ds
imul
fimull
cltd
fstpt
sahf
cwtl
andl
pop
hlt
mov
mov
ss
and
fldcw
aad
das
jmp
push
cld
rclb
mov
cmpsl
add
sbb
and
in
addr16
fwait
pop
pop
scas
xchg
cmp
popa
mov
jae
mov
sub
pop
or
cmp
mov
outsl
inc
cmp
out
dec
sbb
lods
add
test
cld
loopne
ret
mov
addb
jnp
in
push
ret
add
cwtl
imul
aas
clc
xchg
push
imul
or
les
jne
lds
or
or
adc
add
rorb
ja
inc
and
cli
rorb
add
xchg
xor
adc
pop
push
mov
mov
lret
jae
jae,pn
insl
notl
and
aam
or
pop
push
push
cli
inc
jae
fisubs
out
mov
dec
mov
lods
sti
je
insl
cs
jecxz
push
push
mov
pop
add
xchg
or
xor
pop
dec
jp
movsb
pop
or
insl
es
shlb
pop
rcl
xlat
mov
aad
clc
push
push
mov
xor
cmpsb
and
test
jp
not
jnp
lahf
xchg
or
cmpsb
ror
xchg
xlat
movsl
push
cmpsl
icebp
cmp
loope
outsb
fld
jle
mov
xchg
mov
aam
sub
lahf
cmpsb
fsubl
mov
cmpsb
pop
pusha
cmp
sub
mov
cmc
pop
imul
adcb
ret
je
test
lahf
and
mov
imul
cmp
jp
or
cld
mov
xor
aad
aad
scas
mov
loop
dec
add
adc
pusha
leave
sti
jg
filds
dec
cmc
pushl
ror
jmp
shrl
cli
xchg
mov
inc
lea
shrl
inc
sbb
enter
ja
loope
xor
inc
mov
arpl
inc
mov
sbb
jge
push
jge
mov
pop
add
pop
xchg
push
mov
dec
test
cmp
je
sbb
cmpsb
shll
sarl
sub
lods
pop
pop
dec
lods
ret
fnstsw
and
add
cmp
test
test
in
push
leave
sti
sti
in
aaa
std
or
stc
jmp
ds
or
sub
mov
lea
pop
movsbw
not
mov
movb
call
movl
pushf
pushf
jmp
pusha
pushl
pushf
jmp
xchg
push
aaa
in
xchg
call
divb
cmp
jmp
push
dec
aaa
adc
enter
cs
push
jg
fdivrs
push
adc
pop
and
push
pop
xor
out
jge
shrl
add
mov
aad
icebp
pop
fmuls
ss
push
rcll
jne
cmpsl
mov
dec
pushf
jbe
stos
jg
std
les
push
mov
cmp
pop
cs
insl
jbe
cmpsb
push
push
pop
imul
in
xchg
cmpl
test
xor
mov
into
imul
mov
shll
into
loope
shlw
into
mov
mov
push
adc
push
and
push
mov
dec
adc
rorl
add
outsb
pop
jp
or
jo
jecxz
mov
int
fisubrs
cmpsl
mov
mov
add
js
pushf
pushl
movl
call
lcall
mov
sub
jl
adc
mov
jecxz
inc
pop
jg
ds
mov
pop
arpl
cs
bound
subl
or
inc
sbb
stos
std
jbe
cmp
ja
ja
push
inc
addb
xor
lods
lds
mov
xchg
xchg
inc
sub
mov
popf
call
pop
mov
std
jl
add
fcompl
mov
sub
in
mov
add
call
inc
lahf
movsl
mov
inc
jl
popf
aam
push
add
aas
jmp
lret
sub
mov
pop
aas
and
adc
sarl
push
aas
xor
xchg
or
rorl
mov
in
gs
mov
xchg
dec
xchg
rcrb
add
insl
mov
mov
push
cmc
mov
movb
or
into
sub
fildll
ret
and
cmp
arpl
and
push
mov
aaa
mov
stos
nop
xor
mov
jge
scas
push
les
pushl
xchg
mov
push
subb
sub
test
repnz
out
xchg
daa
sbb
push
sub
or
aaa
jl
je
data16
xchg
addb
pop
stc
adc
mov
push
mov
mov
fsubrp
movsl
push
ret
mov
bound
push
sbb
emms
sahf
in
sbb
out
cmp
cmc
les
fstl
icebp
notb
in
and
mov
in
mov
bswap
mov
not
bswap
mov
pusha
pushl
ret
mov
test
or
dec
popa
add
repz
out
jecxz
mov
jne
ljmp
loope
sbb
cmp
test
cmpsl
inc
cmp
sub
mov
outsl
adc
sbb
inc
adc
test
sbb
and
aad
mov
dec
in
mov
out
jnp
fcom
push
enter
add
xchg
mov
in
cmpsb
int
xchg
xchg
cmpsb
adc
sub
insb
cmc
in
popa
sub
inc
push
pop
xorl
pop
pop
jno
push
jecxz
js
jmp
imul
xor
add
ds
xchg
mov
hlt
in
arpl
jo
mov
dec
mov
imul
movsb
jne
xor
push
or
or
out
xchg
adc
icebp
enter
push
mov
push
in
cwtl
popf
push
fdivr
lcall
lods
xor
mov
xchg
mov
push
cmpsl
or
outsl
or
movsb
mov
xor
std
pop
lret
xchg
daa
pop
aam
push
xchg
mov
lock
lods
jle
sbb
in
cmp
testl
mov
call
pop
scas
aas
mov
sub
xchg
push
out
inc
pop
insl
sbb
mov
in
lock
inc
cmp
cwtl
movsb
dec
cmp
pop
jp
ljmp
adc
adc
mov
sub
xorl
shll
and
hlt
xchg
mov
jb
sbb
js
mov
icebp
popf
psrld
pop
sub
scas
neg
mov
in
jge
daa
imul
repnz
daa
data16
sub
pushf
imul
gs
gs
js
out
int3
ret
pop
sub
mov
push
adc
cmp
sub
push
pushl
popl
jmp
fsubrs
int
or
push
jmp
mov
rorl
ja
jnp
lfs
mov
fimuls
fs
je
arpl
xchg
pusha
mov
divb
sbb
jnp
into
mov
jp
cltd
popa
mov
iret
popf
subb
mov
jno
sarb
mov
out
rclb
jb
data16
dec
movsl
mov
daa
mulb
cld
mov
jle
cli
dec
push
mov
aad
ljmp
mov
jae
nop
inc
jnp
inc
push
sti
mov
sbbb
int3
adc
lcall
int
or
push
pop
dec
cmp
push
mov
xchg
xor
out
add
or
mov
add
mov
nop
loope
pop
hlt
dec
cmp
pop
add
clc
jle
mov
cmp
enter
cld
movsb
out
jmp
pop
inc
shrb
mov
repz
stc
repnz
movb
movb
push
lea
jne
xadd
cmp
mov
bsf
rol
dec
sub
clc
and
stc
bts
mov
cmc
ja
cmc
sub
jmp
in
cwtl
leave
ljmp
shr
ljmp
or
test
out
daa
xlat
mov
sbbb
jns
mov
jmp
add
movsl
lret
outsb
adc
xchg
mov
pushf
mov
xchg
jmp
mov
xchg
xchg
sub
call
jl
add
jge
add
mov
cmpl
add
pop
int
cmpxchg
push
fs
pushf
fdivs
dec
out
add
div
movsl
enter
loope
inc
mov
mov
stos
aas
aaa
xor
ds
xor
inc
mov
mov
xor
dec
cmp
ss
js
push
popf
cmpsl
test
lahf
xor
lock
sub
daa
dec
aas
ljmp
push
or
lock
addl
mov
mov
clc
push
push
inc
push
xor
cs
insb
add
stc
add
or
hlt
int
jl
xor
mov
mov
or
dec
push
pop
and
out
fucomi
xor
and
outsl
xadd
repz
mov
ret
pop
cli
mov
xchg
scas
outsb
pop
add
cld
into
jne
fwait
mov
dec
jnp
jge
adc
hlt
nop
inc
push
pop
hlt
addb
or
test
into
xchg
mov
sub
in
xchg
outsb
fwait
inc
andl
test
and
push
xor
leave
mov
pop
daa
lock
mov
mov
or
int3
daa
in
mov
add
es
pop
pushf
cmp
or
xor
mov
push
scas
lret
lock
pop
arpl
test
loope
movsb
aas
jp
lahf
mov
xor
jo
xchg
or
pop
xor
xchg
sbb
in
dec
pop
test
xchg
daa
popa
gs
and
cmp
es
lds
inc
outsl
mov
push
dec
or
lea
xor
rorl
out
pusha
xchg
inc
mov
add
and
cmp
mov
stc
not
push
call
cmp
cmc
cmp
call
xor
and
out
add
popa
insl
cmp
scas
dec
test
xlat
gs
pop
dec
push
sbb
jecxz
int
sahf
push
call
test
fdivrl
jae
and
jo
stos
je
cli
scas
sbbl
xchg
sbb
rcrl
dec
lcall
xor
xor
mov
neg
pusha
test
xor
add
rol
adc
mov
bt
mov
stc
test
pusha
movw
mov
mov
lea
je
clc
cmc
call
jmp
lea
ja
neg
mov
sub
or
rcl
not
add
shrd
neg
mov
call
imul
out
or
and
xor
or
imull
jp
test
lods
push
sbb
ljmp
xor
xchg
cmc
scas
repnz
data16
push
mov
lret
xlat
fistpll
jp
mov
fstpt
dec
mov
push
jae
cmp
int
imul
push
hlt
lea
mov
add
filds
call
xor
icebp
cmp
addr16
push
pop
lcall
out
or
lock
mov
daa
lahf
mov
lea
call
dec
add
sbb
xchg
jb
dec
and
add
rol
dec
out
imul
xlat
cmc
arpl
jno
sarb
cld
sar
arpl
mov
aad
sahf
push
outsl
pop
jmp
mov
jecxz
gs
lods
ficoms
cwtl
mov
adc
xchg
aaa
push
outsb
decl
je
mov
xchg
sub
stc
out
inc
add
ret
mov
cmc
movb
test
cmpb
jmp
fstps
out
or
fsts
mov
jecxz
out
dec
jae
jne
insb
fiaddl
daa
loopne
xchg
adc
mov
cs
lea
cltd
and
in
xchg
jnp
jge
mov
ret
ljmp
inc
pop
negb
jg
imul
pusha
adc
das
sahf
fwait
adc
movsb
mov
insl
jmp
sbb
xchg
sbb
sub
bnd
push
aad
test
mov
movw
movb
lea
ja
pushf
lea
jno
clc
imul
clc
stc
cmp
add
pusha
pusha
lea
jmp
add
push
popa
jae
popa
outsb
addr16
jo
add
jl
sbb
sahf
rcrb
add
xchg
pop
add
add
add
add
dec
stc
and
cld
xchg
pop
add
add
add
add
negl
add
pop
add
add
add
add
dec
inc
sub
or
pop
add
add
add
add
jb
and
add
add
add
add
sahf
sub
add
pop
add
add
add
add
add
add
add
add
add
xchg
pop
sub
sub
pop
add
add
add
add
and
xchg
pop
add
ja
add
xchg
pop
add
ja
add
xchg
pop
add
ja
add
and
dec
xchg
pop
add
ja
add
xchg
pop
add
ja
add
rcrb
pop
xchg
pop
add
ja
add
bound
add
add
ja
add
pop
sbb
insb
xchg
pop
add
ja
add
and
je
pop
add
add
cmp
mov
jmp
pushl
lea
call
jbe
cmp
push
mov
sub
pushl
lea
jne
push
pushf
pusha
lea
call
pushf
push
lea
jmp
bt
rol
clc
add
cmc
push
xor
movl
call
arpl
fs
xor
cs
insb
add
gs
mov
add
push
imul
pop
sti
into
andps
push
and
gs
xchg
outsb
arpl
aaa
mov
cmc
mov
roll
orb
insl
sub
sub
outsl
cmpl
iret
icebp
in
stos
ja
or
test
and
in
xchg
cwtl
cmc
fadd
pop
hlt
or
add
insb
sbb
cmpsl
andb
mov
push
cld
push
test
add
pushf
bt
xor
push
call
in
push
repnz
movsb
sahf
lahf
push
mov
cmp
data16
mov
lret
lock
rorl
mov
lea
jne
rsqrtps
xor
arpl
jp
adc
jmp
pop
mov
add
mov
outsb
outsb
dec
ret
pop
jns
adc
mov
add
push
mov
js
pushf
pusha
lea
je
pusha
clc
jmp
in
add
or
movsb
dec
xchg
pop
push
fsubrl
mov
imul
shll
and
xorl
lea
xchg
fcmovnbe
adc
xchg
add
adcb
rolb
dec
push
lret
adc
icebp
sahf
add
lea
xorb
repnz
mov
mov
test
aaa
xchg
das
dec
mov
cwtl
lds
add
andl
mov
outsl
popa
sbb
adc
and
jae
jmp
jp
xor
or
jae
imul
pop
xor
xchg
cmp
mov
cmp
cmp
pop
pop
popf
jl
mov
inc
pop
je
mov
inc
incb
cmp
cmc
cwtl
adc
adc
jmp
sbb
stc
push
xchg
push
jmp
push
test
xchg
jae
out
es
test
or
lock
jp
xor
jbe
jno
mov
sti
jno
jbe
dec
mov
imul
cli
out
sbb
mov
inc
sbb
and
pop
or
xor
aaa
or
aaa
lods
test
pop
and
pop
inc
push
inc
fstpl
outsb
xchg
pop
cmp
sahf
movsb
add
adc
push
icebp
dec
adc
out
pop
inc
mov
inc
pop
fbstp
and
add
iret
std
push
or
aaa
test
cmpsl
or
sub
cmpsb
outsb
xchg
imul
mov
dec
mov
lods
iret
jns
jns
ret
cltd
sub
insb
repnz
and
jmp
xchg
mov
cs
ljmp
aad
xor
pop
mov
fwait
clc
dec
and
or
sbb
hlt
ret
iret
out
cmc
leave
shlb
pop
ds
dec
and
fsubrl
and
push
cmp
xor
mov
repz
add
pop
shll
pushf
pusha
lea
jmp
sub
decb
cld
negl
jmp
sub
mov
xor
xchg
pop
push
cwtl
fisubrs
add
or
sarl
xchg
push
popa
dec
daa
jo
adc
adc
pushf
orl
xor
or
mov
notw
xchg
dec
lret
ja
dec
popa
imul
lods
andb
idivl
loopne
cli
aaa
or
push
sub
mov
repnz
mov
pushf
mov
lea
ja
push
bt
imul
bt
pusha
add
pushl
mov
movw
lea
jmp
push
popa
mov
or
sbb
push
hlt
shrb
sbb
imul
ret
stc
mov
lods
ss
sar
sar
mov
in
test
in
ret
dec
stos
lock
popf
pop
mov
add
shlb
aad
cmpsl
mov
add
push
xchg
mov
adc
fbld
and
cs
push
mov
xchg
push
mov
push
aaa
inc
xchg
mov
pop
loopne
shlb
adc
jno
dec
testb
repnz
push
aam
leave
pop
out
pop
jecxz
jmp
loop
jae
xlat
je
imulb
js
push
sbb
mov
xor
out
andl
sbb
xor
dec
push
lret
call
sbb
arpl
xlat
jb
subl
push
pop
pop
ljmp
xchg
jno
shlb
jbe,pt
aam
sti
aas
cli
aam
je
sahf
je
arpl
std
or
pushl
testl
jecxz
cmp
mov
sub
loope
push
pop
out
jbe
fcoms
or
mov
int
adc
sbb
shl
jbe
adc
mov
mov
fstl
sub
push
mov
sbb
shll
or
and
and
jmp
xor
cmp
push
push
sub
or
testl
scas
push
stos
or
xchg
fidivrs
inc
leave
out
mov
inc
imul
fs
sahf
jg
pop
push
sbb
push
add
xchg
cmp
repnz
cli
leave
mov
outsl
mov
subb
fwait
insl
aad
ja
bound
mov
dec
stos
into
in
je
xor
cld
adc
inc
xchg
xor
add
lahf
stos
pop
ja
dec
das
and
sbb
loopne
adc
push
jl
fstpl
out
mov
movsl
insl
cmovo
add
mov
in
inc
sub
outsl
aaa
mov
out
fistl
negl
pop
imul
jns
mov
sub
cld
jge
div
daa
out
pushf
or
jae
push
loop
jns
jmp
imul
ret
mov
dec
push
mov
into
cmpsl
inc
cmp
inc
nop
or
fisubl
gs
loop
and
push
add
out
pop
lods
sbb
jbe
in
call
jle
cmp
shrl
cli
sbb
scas
call
push
pop
mov
hlt
mov
cmp
pop
mov
roll
stos
pusha
test
lahf
mov
jle
addr16
xchg
push
mov
sarl
push
jno
push
mov
out
fdivr
and
repnz
stos
dec
loop
jecxz
aam
inc
lock
mov
aad
sbb
clc
pop
mov
jns
inc
sbb
lahf
popf
cli
pusha
inc
adc
push
mov
inc
sbb
jge
add
xchg
pop
xchg
or
xor
orl
or
clc
hlt
and
in
sub
push
lcall
rcll
and
insl
test
ja
nop
xor
pop
cmc
es
jg
mov
out
inc
cld
popa
xchg
sarb
into
sbb
add
lret
cmpb
pop
xchg
push
mov
pop
into
mov
arpl
mov
xchg
adc
imul
adc
cli
mov
into
add
es
sub
test
mov
inc
cwtl
mov
add
enter
add
sub
or
xor
pop
lods
fldenv
fwait
inc
push
and
adc
and
ret
mov
out
out
push
in
pop
cmc
pop
lahf
cs
adc
push
xlat
inc
mov
mov
test
dec
mov
lock
in
imul
xchg
dec
lods
lret
xchg
cld
addb
push
flds
hlt
into
mov
add
xchg
ds
pop
fsubrl
fwait
xor
jecxz
push
dec
jecxz
pop
int
scas
cmpsl
mov
shrl
or
loop
test
stc
or
repnz
pop
movsb
sub
jle
insb
aam
push
outsb
sti
loopne
adc
xlat
xchg
leave
fcomi
ljmp
cmp
or
popa
cltd
je
mov
push
lcall
cli
adc
sub
insb
aam
push
push
cmpsb
fxch
jle
and
lea
push
jmp
pop
xlat
mov
enter
sub
lret
arpl
lahf
ret
out
lods
pop
shl
in
xchg
test
ja
or
repz
fcom
in
fsubs
clc
push
sbb
aad
inc
inc
mov
aas
sub
jmp
ljmp
sub
sbb
cmp
adc
adc
mov
adc
outsb
inc
xchg
sub
out
out
mov
lds
mov
in
std
sbb
add
lods
xor
or
adc
push
arpl
sti
das
fsubrl
fisubs
fdivs
cltd
push
xor
jnp
mov
cmp
cmc
sbb
xchg
push
sub
cld
xchg
incb
add
xchg
imul
and
jg
clc
mov
scas
or
inc
xchg
pop
sti
or
lock
addr16
xor
and
xor
loopne
push
jns
xor
mov
mov
imulb
ror
clc
xor
mov
fistpl
mov
adc
cli
shl
fcomip
hlt
mov
jle
adc
or
outsb
mov
inc
call
push
push
addl
cs
stc
push
lret
js
jo
out
outsb
xchg
pop
xor
push
fimull
cmp
imul
pusha
lea
jne
rcr
mov
adc
rol
xor
sbb
pushf
movsbl
bts
mov
sub
and
call
test
push
sub
mov
cmc
cmp
pusha
jmp
add
dec
outsl
arpl
inc
jb
gs
cmp
sti
or
dec
sahf
cmpsl
xchg
je
in
mov
scas
push
mov
jmp
push
push
arpl
adc
and
or
xchg
fsts
pop
hlt
mov
sbb
pop
notl
cmp
add
lea
or
hlt
xchg
inc
gs
mov
cmp
idiv
adc
jns
out
dec
dec
loop
xchg
sub
jo
cmp
jb
pop
push
push
addb
sub
in
ja
test
roll
mov
test
mov
xor
push
add
arpl
push
test
fstpt
shrw
test
dec
fwait
subb
mov
shlb
add
pushf
lea
jmp
xchg
enter
xchg
in
pop
and
shrb
je
cltd
cli
and
incl
loop
imul
push
jb
clc
cmp
cwtl
sbb
pop
adcb
push
fstl
mov
pop
stc
popf
test
xchg
mov
jb
cli
ret
mov
sub
or
cltd
cltd
sub
pop
sub
rclb
es
popf
mov
sub
cwtl
aas
divb
outsb
cmpsb
jl
push
flds
cwtl
or
push
pushf
lea
call
call
loope
lcall
out
out
lret
in
inc
or
mov
sbb
and
inc
sbb
adc
dec
stos
or
in
aaa
add
ret
sbb
mov
addb
es
push
mov
mov
and
xchg
popa
inc
cltd
sub
cli
inc
mov
jnp
cmp
sbb
out
jnp
clc
popf
dec
es
neg
out
adc
cld
push
pop
hlt
pop
aas
xchg
inc
cs
rorl
sbb
inc
push
fldcw
push
ret
mov
int3
jg
std
or
int3
lcall
sbb
jnp
sbb
jns
mov
hlt
into
ja
test
adc
mov
dec
cwtl
pop
mov
int
push
and
inc
pop
adcb
aas
aad
pop
repz
dec
push
push
sbb
imul
jb
xor
mov
lahf
and
inc
and
add
stos
in
iret
into
icebp
mov
ds
inc
add
pop
jl
fs
call
call
push
or
adc
andl
push
pop
imul
js
xchg
lods
pushf
push
push
sbb
xor
and
push
sarl
lret
out
inc
jp
in
add
lahf
or
arpl
mov
xor
sbb
inc
pop
hlt
sbb
in
ljmp
lock
inc
cld
or
and
and
xchg
jmp
mov
pop
mov
out
call
pusha
pushf
mov
pusha
lea
jmp
cmp
or
inc
jb
push
lret
add
imul
cmpl
xchg
call
lahf
into
jge
enter
test
jle
cmp
ficompl
out
adcb
jecxz
jl
fldl
fst
pop
clc
fimull
scas
popa
out
push
outsb
push
push
stos
shll
dec
daa
stc
push
lret
shlb
imul
or
mov
mov
dec
xchg
push
sub
xchg
addl
adc
pop
mov
xchg
jle
sub
arpl
outsl
aam
mov
imul
pop
push
add
dec
ljmp
dec
inc
sbb
ficomps
pop
cmp
test
or
cmp
xchg
insl
stos
lea
notb
pop
shll
in
dec
pop
test
cld
xor
in
or
adc
lcall
mov
negl
pop
add
sub
xor
jne
adc
out
jbe
test
or
jmp
xchg
out
aaa
outsl
loop,pn
adc
call
adc
and
cmpl
or
ror
loope
lods
push
movsb
lahf
mov
jae
inc
or
add
xor
xchg
mov
dec
adc
and
add
and
mov
dec
repz
mov
mov
lds
sbb
adc
cwtl
xchg
lcall
sbb
adc
pushl
dec
add
xchg
repz
test
inc
test
pop
sub
pop
mov
call
sub
ffreep
push
push
xchg
in
mov
cmp
jmp
in
xchg
xchg
ret
jle,pt
inc
add
mov
pop
popa
inc
sbb
pop
sbb
cmc
adc
pop
add
mov
sbb
cmc
enter
add
shlb
fldl
xchg
mov
iret
sbb
lea
ja
call
jo
cld
add
xchg
mov
sbb
sub
aas
xor
std
sarb
lods
cmc
mov
push
jp
mov
lods
inc
jle
addr16
nop
jae
pop
ja
inc
orl
pop
pop
loop
mov
repnz
xlat
in
push
cli
rolb
flds
add
iret
stc
mov
cvtps2pi
int3
dec
adc
loope
add
into
popa
lea
jbe
xor
shrd
sub
clc
mov
mov
bswap
shr
mov
mov
btr
add
rcl
and
btr
clc
shr
mov
btc
rol
sub
mov
shrd
add
pushf
pushf
lea
mov
lea
jae
push
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
int3
mov
add
xchg
and
stos
mov
negb
mov
scas
dec
icebp
rcr
mov
or
mov
cmp
sar
sbb
and
hlt
ret
adc
fwait
jle
mov
pop
movsb
je
sub
push
push
and
xor
out
sub
cmpsl
push
pop
pop
lods
push
push
mov
sbb
js
inc
xlat
jae
in
or
lahf
ret
lret
sti
sti
push
mov
dec
je
adc
add
xchg
sub
mov
cmp
lret
or
ffreep
cld
ja
call
inc
out
pop
dec
insl
add
ret
shl
push
lcall
jns
adc
int3
add
popl
out
gs
pop
aam
stos
dec
or
lds
ret
push
or
adc
dec
imul
cmp
in
pop
js
xorb
and
push
scas
xchg
int
push
sub
jg
and
add
xchg
aas
mov
inc
lock
loop
leave
imul
in
fsubs
or
jbe
or
and
bound
pop
ljmp
fcomps
clc
out
cmp
adc
sar
cli
cmp
sbb
aad
mov
out
sub
je
jge
faddl
mov
cld
inc
or
popf
ljmp
xor
dec
das
adcl
jnp
lods
frstor
xchg
push
pop
insb
or
data16
jl
ljmp
std
xchg
xchg
shlb
mov
out
into
aas
lea
imul
mov
pop
push
ss
mov
cmp
jge
pop
in
cmp
xor
aam
push
ret
add
loopne
sub
test
popf
xchg
xor
lods
add
add
int3
add
xchg
push
push
movsl
je
pop
add
add
je
mov
enter
roll
aad
add
sbb
xchg
cwtl
aas
sti
out
sub
insb
add
sbb
inc
mov
lods
xchg
frstor
ret
incl
sbb
and
cmp
jge
in
dec
aam
aaa
dec
or
popf
xchg
fdivp
adc
adc
repz
arpl
adc
mov
shrl
xchg
mov
mov
mov
pop
mov
push
inc
mov
cmp
lods
nop
int
push
aas
cmp
imul
mov
insl
cs
lret
mov
scas
sbb
add
xchg
mov
stos
adc
push
clc
sub
popa
sbb
sarl
jb
ja
and
sbb
adc
xchg
pop
xor
imul
sahf
fidivrs
iret
xorb
or
out
js
mov
sbb
pop
loopne
pop
cld
inc
loope
add
jbe
arpl
rorl
mov
imul
inc
aad
sti
xor
in
push
cld
insl
xor
sbb
or
notl
jb
icebp
fisttpl
jb
mov
in
mov
fcmovnbe
push
mov
mov
or
add
mov
clc
pushf
call
pusha
sbb
add
add
pop
cmp
add
add
add
inc
sbb
add
add
and
add
pop
cmpsb
pop
add
add
add
add
add
and
add
add
jp
sbb
add
add
stos
sub
add
add
add
add
addb
add
adc
add
or
add
or
add
out
and
add
add
dec
das
sub
add
add
xlat
and
add
add
add
rcrl
add
jae
add
mov
add
dec
sbb
add
add
jnp
jo
or
xchg
add
scas
pop
pusha
out
mov
jns
les
jb
das
mov
fnstsw
insl
push
test
mov
fucomi
xchg
sti
and
popf
xor
sbb
mov
pop
or
into
std
loope
add
nop
mov
pop
mov
xchg
int
aas
enter
mov
mov
test
repnz
mov
enter
jge
push
test
add
loop
cmc
mov
mov
dec
mov
lret
inc
cmp
shrb
add
xor
jno
and
jnp
add
inc
daa
rcrl
pop
insb
cmp
adc
xor
dec
divb
xchg
loopne
cmp
mov
mov
lds
lahf
pop
cmc
lods
divb
dec
stc
jge
lahf
ret
fbstp
sar
out
xor
mov
dec
mov
insb
add
movsl
jmp
add
adc
push
xor
icebp
mov
jg
xchg
sub
icebp
testl
inc
ljmp
fs
lods
jb
inc
xorb
xchg
and
stos
fildl
or
sbb
sbb
stos
and
iret
ljmp
adc
pop
cmc
mov
xor
or
adc
in
and
call
ss
add
pop
or
rolb
jp
sbb
mov
and
ljmp
add
inc
sbb
or
loop
ret
repz
and
test
pop
div
stos
sti
mov
push
ret
mov
mov
js
mov
mov
jl
js
nop
pop
mov
leave
mov
ret
sub
in
push
jae
scas
xchg
movsl
add
mov
mov
or
mov
cmp
xchg
add
addb
aam
in
xchg
cmp
rcrl
or
xchg
inc
test
inc
data16
jmp
fwait
shlb
mov
in
xlat
clc
mov
mov
hlt
adc
andb
sub
lss
aad
or
iret
mov
es
push
cwtl
cmp
mov
inc
inc
shr
push
jl
push
cmp
pop
aas
sub
sbb
dec
popa
testb
push
rclb
mov
je
dec
mov
js
xchg
scas
imul
mov
push
lcall
cwtl
or
push
mov
inc
int3
in
in
pop
push
sub
add
hlt
lret
pop
cmp
add
ret
mov
out
out
daa
dec
popa
daa
pop
lods
ljmp
push
cmp
and
push
mov
stc
add
movsb
jno
subb
bound
mov
arpl
mov
fmull
lea
pop
inc
mov
dec
cmp
sub
shr
ja
sbb
in
popa
sahf
call
mov
mov
mov
repnz
les
adc
paddsb
jl
add
xchg
mov
sbb
jge
ss
cmp
loope
pop
shr
hlt
fidivrs
cmpsl
jnp
cmpsb
movsb
in
imul
rcll
add
idivl
mov
test
ljmp
mov
xchg
mov
mov
mov
mov
lds
push
call
pusha
pop
repz
mov
pop
adc
sbb
andb
sbb
pushl
ror
push
mov
jmp
mov
lea
pushf
call
dec
out
push
or
xchg
lock
or
scas
andb
cmpsl
adc
mov
xor
pop
in
inc
ficomps
xchg
adc
orl
mov
mov
jge
sub
sub
pop
push
cmpsb
insb
test
add
arpl
aad
loop
and
int
icebp
mov
pop
lahf
mov
cli
or
lret
cli
push
sub
rclb
mov
mov
push
mov
xchg
sbb
or
leave
cmp
gs
push
sbb
cmc
xor
int3
das
add
adc
lahf
add
arpl
enter
lds
rol
movsb
mov
and
or
les
cmp
jno
pop
sahf
fisttps
lea
pusha
loop
cmp
mov
pop
xor
pop
jbe
mov
jge
push
hlt
add
mov
ret
xchg
cltd
xchg
xchg
ss
xor
out
add
adc
xchg
pop
pop
mov
lahf
sub
mov
outsb
inc
mov
xor
adc
push
xchg
or
cmp
sar
stos
sbb
or
mov
xchg
lods
aam
loop
dec
imul
andb
sub
das
stc
jbe
incb
or
call
movzbw
adc
add
pushf
add
sub
rcl
mov
pusha
call
jmp
cmc
pushf
cmp
movb
pusha
jmp
jmp
rol
pushf
jmp
push
stos
mov
lea
jmp
mov
setbe
lahf
setl
cwtl
lea
push
jmp
adc
xchg
mov
roll
outsb
insl
and
xchg
test
jge
pop
cltd
fidivrs
xchg
xchg
jnp
cmp
cmpsl
sahf
inc
push
out
push
inc
and
sub
lret
push
insb
cwtl
and
pop
pop
mov
jno
fs
jecxz
jmp
repz
movb
gs
stos
int3
mov
sub
pop
mov
cmp
lds
or
call
or
jge
jae
jle
shll
xlat
jnp
int
nop
jge
mov
iret
int
sub
les
cmp
mul
lret
xchg
cmp
pop
lods
push
push
adc
stos
xchg
mov
push
pop
xchg
scas
stc
jbe
push
lret
mov
lret
cmpb
dec
jmp
mov
imul
div
and
push
mov
dec
nopl
inc
mov
pop
and
or
xchg
jns
sahf
pop
call
jle
hlt
dec
mov
pop
add
test
lock
cmp
add
add
lret
inc
add
dec
xchg
fidivs
jo
jns
scas
pop
das
mov
adc
or
loope
int
pop
mov
sbb
sbb
in
pop
mov
jne
js
rcrb
insb
pushf
negb
cmp
cwtl
sub
jns
aas
test
mov
cmc
push
movsb
xchg
push
arpl
pop
sbbl
xchg
lret
fists
xlat
xchg
cmc
int3
jbe
add
fs
ja
jmp
dec
cmp
xchg
adc
or
push
pushf
and
cwtl
inc
mov
push
mov
mov
in
push
mov
adc
loopew
push
pop
inc
sbb
fbld
out
inc
into
ja
dec
cli
or
mov
pusha
movsb
sub
lret
iret
movsb
mov
das
add
movsl
adc
sbb
cli
xor
lret
lret
mov
push
addr16
add
inc
imul
dec
mov
fildll
xchg
cmp
mov
das
add
hlt
dec
out
popa
clc
insl
xor
aad
jp
clc
inc
cmc
cmp
inc
xchg
bound
ud2
xchg
fsubl
xlat
inc
or
xchg
fdivr
fldenv
scas
lahf
and
cmc
ficompl
negb
pop
jp
pushf
aas
pop
arpl
and
jno
rolb
push
outsb
or
daa
xor
push
xchg
sub
rorl
add
inc
cltd
dec
push
inc
dec
xchg
pop
out
jle
xlat
out
gs
sub
jle
out
fwait
inc
aam
test
add
out
outsb
call
in
push
xor
dec
fcompl
outsl
cmpsl
sub
orl
fistps
mull
mov
rcrb
ret
dec
ljmp
repnz
sbb
ss
push
out
idivl
scas
mov
push
pushl
pop
add
dec
int
subb
adc
pusha
fcomps
shl
push
pop
addr16
and
movsb
dec
jmp
and
jmp
push
mov
add
fs
mov
mov
inc
pusha
in
testb
cli
pop
mov
std
adc
out
cmp
pop
mov
push
add
popf
add
push
fstl
inc
xchg
sbb
mov
sahf
xchg
into
xchg
push
mov
inc
rcr
fsts
cmc
repnz
xor
sub
nop
pop
sbb
ljmp
sub
inc
pop
mov
sbb
leave
fwait
fs
mov
jge
mov
or
pop
pushf
sbb
movsb
mov
adc
mov
cmp
fcoms
ret
sti
out
pushf
addr16
pop
in
mov
and
pop
stos
inc
mov
jecxz
int3
jge
jecxz
inc
push
cmp
add
neg
mov
lahf
loop
jae
imul
test
mov
and
loop
pushf
mov
pusha
adc
xchg
inc
adcb
adc
push
out
loop
pop
leave
notb
mov
mov
cmc
daa
cmp
and
mov
mov
adc
repnz
cmp
clc
movsb
icebp
imul
and
push
je
and
fistpl
leave
daa
sbb
sbb
popf
imul
pop
ss
movsl
stc
fisubrl
shlb
pop
in
ja
xchg
popa
dec
popa
mov
das
xor
xchg
pop
lods
lret
loop
push
pop
sbb
out
divl
fdivl
sbb
mov
je
cmp
and
mov
mov
dec
adc
scas
lock
cltd
mov
jne
daa
mov
adc
xchg
ret
stc
sti
inc
fcompl
sti
dec
pop
lock
mov
loope
push
imul
js
pop
adc
fwait
sub
adc
pop
add
gs
aad
gs
data16
loop
mov
shr
divl
pop
push
incl
pop
cmp
xchg
add
adc
push
inc
pop
cmpsl
jb
dec
mov
fstpl
jno
or
jg
idivl
pop
lcall
pop
jecxz
jb
mov
rol
insb
jb
sbb
jecxz
sbbb
das
mov
leave
push
mov
shlb
sub
lret
aas
mov
pop
xlat
cmp
push
pushf
dec
rorb
mov
add
sarl
xchg
adc
or
add
jnp
cwtl
xor
jbe
or
shll
das
mov
ficoms
fiaddl
andb
stos
push
push
scas
int
add
inc
xor
mov
push
jne
or
pushf
popf
or
and
shr
jo
incl
add
test
jmp
xor
test
inc
or
sub
dec
xor
cmpsl
or
jo
jg
adc
or
sbb
push
mov
inc
leave
push
fs
cmpsl
data16
cmp
testl
outsl
mov
pop
lods
addr16
jl
inc
mov
rcrl
fwait
mov
rcll
mov
fmull
pop
and
int
pop
pop
dec
jecxz
dec
clc
mov
sar
popf
out
mov
dec
sub
int3
xchg
jmp
rorb
popa
push
pop
pusha
mov
or
dec
in
ljmp
outsb
and
jnp
xchg
stos
lock
popa
sahf
or
jp
adc
int
fs
xchg
dec
mov
mov
xchg
lcall
fcomps
sub
jnp
pop
mov
mov
out
out
add
xchg
lea
jne
jmp
lea
jae
call
bt
repnz
jmp
popa
dec
mov
or
or
cwtl
xor
xor
out
test
inc
test
add
add
in
add
mov
jbe
cmpsl
pop
in
or
mov
adcl
and
ret
aam
pop
sbb
sbb
or
sub
aad
jb
and
outsl
jl
sub
push
fisttpl
dec
popa
add
cs
mov
mov
mov
leave
jge
add
hlt
fwait
inc
shrb
jge
cmp
push
push
addr16
mov
aas
pop
push
jge
mov
inc
test
hlt
mov
das
call
push
or
or
shlb
roll
inc
push
sar
fisttpll
in
dec
loope
test
repnz
pop
adc
mov
ret
sub
sbb
lahf
rcr
bts
mov
mov
cmc
test
clc
cmpb
pusha
mov
pushf
mov
lea
jmp
js
mov
xchg
mov
imul
xor
adcl
fs
sbb
pop
mov
push
jp
lea
inc
sbb
sarl
and
and
add
cmp
push
mov
into
repnz
xor
leave
mov
lahf
repnz
arpl
dec
lods
or
mov
cmp
loope
ret
pop
adc
aad
pop
int3
pop
pop
sbb
pop
and
pusha
lea
pusha
jmp
pop
add
adc
add
add
and
fmuls
mov
and
fcoms
inc
sbb
mov
xchg
push
lock
popa
je
shlb
dec
lea
push
mov
sar
push
rorl
cltd
in
sti
push
or
add
sbb
aaa
aam
xchg
les
lods
adc
mov
mov
stos
or
dec
les
mov
or
mov
and
fs
lahf
inc
sti
in
cltd
ss
rcll
xchg
mov
cmp
push
in
or
bt
bsr
xor
not
not
not
pop
lea
movzbw
pop
jo
push
mov
mov
movsbw
pusha
pushf
mov
jmp
push
lock
std
std
mov
xchg
push
sub
jnp
sub
and
pushf
mov
pop
pop
ss
or
jge
pop
in
sub
in
add
pop
push
ret
out
sub
test
xchg
mov
in
andps
iret
mov
xchg
push
push
stos
add
xchg
jno
adc
repnz
and
jmp
adc
inc
clc
not
and
sar
mov
stc
cmp
repnz
pushf
call
jge
mov
or
daa
cmp
cmp
movb
dec
loopne
mov
inc
jns
cmp
popa
fsubrs
js
mov
movsl
mov
add
test
push
xchg
mov
andl
fisubrl
iret
hlt
pop
ja
jge
add
addr16
fwait
push
test
aaa
push
jo
imul
pushf
les
mov
pop
stc
push
xchg
xchg
mov
out
jmp
xchg
mov
loopne
dec
push
test
jbe
out
cld
gs
outsl
sbb
jge
fimuls
cmpsl
pop
sbb
adc
mov
outsb
xlat
mov
testb
and
repnz
sub
sbb
cwtl
and
repz
push
cmp
pop
push
dec
xchg
mov
xchg
inc
mov
shrb
js
fwait
movsl
loopne
subl
nop
aam
jae
jb
add
nop
cmp
jmp
mov
insl
xchg
icebp
shl
push
jg
pop
movb
xor
pop
lcall
xchg
mov
loop
scas
and
in
repz
out
mov
xchg
scas
push
aaa
push
out
cmpsl
out
ret
rorl
jo
test
mov
lret
mov
mov
push
push
dec
lods
insb
es
pop
int
xorps
mov
sub
rorl
roll
jns
lcall
cld
lret
cmc
repnz
push
push
cmp
xchg
mov
and
int
js
imul
fwait
lds
push
sbb
push
cs
sub
mov
push
lret
add
mov
stos
mov
lea
jmp
xor
push
sbb
xchg
cmp
mov
xor
pop
nop
sbb
insl
fcoms
into
cmc
shlb
andb
std
or
gs
fdivs
or
popa
test
jo
jge
jb
je
lahf
mov
mov
rcl
in
add
lcall
shll
pop
cld
inc
or
mov
rcl
sar
mov
sub
shr
pushf
test
xor
mov
movw
test
or
pushf
lea
je
rcl
add
movsbw
adc
bswap
sub
shl
shr
bts
mov
rcl
adc
call
idiv
std
sbb
xchg
and
mov
mov
push
ret
inc
adc
jnp
aaa
lods
sbb
sbb
pop
gs
add
call
cmp
push
mov
ret
cmp
cli
and
cmp
psrlq
add
movsl
or
pop
xorb
jmp
shrl
cli
mov
push
jp
fisubs
sbb
je
sbb
outsl
cltd
popf
xchg
cld
inc
imul
insl
mov
mov
rcl
cld
pop
jecxz
mov
mov
push
addr16
dec
cmp
xor
fldcw
sbb
xchg
iret
sti
xchg
lret
fcomps
movsl
adc
push
dec
sub
data16
xchg
or
into
adc
pusha
pop
andb
lods
out
cmc
sahf
mov
xchg
fisubs
mov
cmp
fidivrs
push
cltd
inc
sub
inc
insl
push
sub
call
imul
jno
icebp
fisttps
fcompl
pop
lret
in
sub
mov
or
fisubrl
es
add
add
push
in
and
dec
push
fs
test
fstps
rorb
popl
ss
sti
add
xor
mov
add
insl
cmp
ficomps
imul
shlb
orl
outsb
push
mov
fnstcw
push
push
inc
fsubs
lret
pop
xchg
popa
ds
lds
stc
aas
add
out
or
pushf
pushf
push
jmp
mov
xchg
jmp
pop
cmpsl
test
bound
and
jecxz
out
cmp
and
pop
arpl
cltd
into
gs
gs
ja
mov
xor
dec
imulb
in
sbb
mov
dec
pusha
xchg
ja
pop
test
xor
loope
and
or
jb
ret
inc
sahf
cmpsl
cwtl
inc
jecxz
fs
call
pusha
adc
call
jae
pushf
cmc
cmc
sub
lea
jnp
pusha
lea
call
jmp
xchg
cld
add
xchg
loop
push
ffreep
idiv
std
dec
mov
xor
fiadds
inc
lock
dec
pushf
jp
in
into
sbb
iret
clc
jge
cmp
pop
fs
mov
pop
mov
push
push
xchg
insb
in
popf
dec
xchg
loope
and
xor
or
bound
cwtl
pop
pushf
aad
and
jo
icebp
fdivs
xor
inc
cmp
fstl
js
xor
in
addr16
push
push
sub
push
or
cmp
xchg
dec
ljmp
push
xor
lods
adc
or
or
push
or
fwait
roll
push
inc
xor
aad
sub
call
scas
add
push
pop
pushf
in
and
and
ja
jge
sub
stc
xchg
adc
lret
pop
push
jp
push
addl
les
testl
insb
nop
ss
fildl
mov
mov
push
add
inc
gs
outsl
fs
gs
imul
add
aaa
mov
or
xchg
jns
scas
stos
in
cmp
cvttps2pi
xor
testl
inc
cwtl
mov
cs
or
mov
fwait
js
fsubrl
hlt
cld
jmp
sbb
xor
imulb
lea
ss
mov
jmp
aaa
lds
mov
mov
sahf
cmp
lods
lret
push
outsl
shll
push
mov
mov
jno
fmul
clc
mov
addr16
bound
mov
push
or
sub
lods
lahf
xchg
dec
adc
iret
ja
jg
arpl
mov
daa
mov
cmp
sbb
shlb
pusha
adc
movzbw
call
adc
xchg
sti
into
ds
subb
pop
push
insb
or
inc
imul
push
int
ds
insb
jo
aam
cld
inc
jecxz
adc
push
inc
lahf
xor
je,pt
ret
sub
outsb
cmpsl
lahf
jno
std
mov
out
mov
test
out
pop
push
insb
pushf
je
xor
sbb
jo
or
mov
int3
xchg
dec
fidivl
shl
xor
rorb
popf
pushf
lea
jae
pushf
pusha
lea
jmp
loope
push
or
aam
scas
push
mov
sti
cwtl
std
and
movsb
sub
sbb
xlat
cmp
movsb
and
inc
addb
aaa
mov
cmc
nop
and
mov
test
cmc
jbe
ds
sbb
push
sbb
cmp
data16
inc
cmpb
leave
sub
fsubrs
notl
insl
in
stos
or
shll
push
or
cmp
imul
and
in
fisttps
xchg
xchg
cs
es
pop
cmpsl
add
push
or
nop
shrb
roll
aad
sbb
mov
add
into
or
mov
bound
addl
test
enter
xor
xchg
inc
imul
into
scas
js
xchg
imul
sub
cmp
mov
cmp
sti
insb
inc
rcr
ss
hlt
movsb
sub
mov
sbb
out
or
lss
ds
sbb
push
push
loopne
out
js
cmp
jmp
and
adc
pusha
xchg
rcll
push
nop
mov
loopne
mov
cmp
mov
or
jle
data16
mov
push
out
sbb
addr16
jmp
or
mov
mov
or
pop
lods
dec
pop
das
pop
jmp
jg
sbb
push
and
out
or
mov
pop
int3
jnp
add
ds
jb
shlb
and
add
fstps
or
fwait
jns
enter
icebp
scas
mov
and
aas
dec
or
clc
es
push
into
or
hlt
pop
in
in
mov
push
popa
scas
inc
out
or
inc
popa
popa
sub
loop
xchg
cltd
push
xchg
jae
adc
and
mov
and
mov
jg
and
das
xchg
rorb
lcall
repnz
xor
lret
fstps
roll
xchg
inc
lods
xchg
pop
pop
clc
clc
sub
jg
clc
cmp
jmp
xor
and
xchg
pop
popf
sub
divl
mov
pop
xchg
xor
loopne
lods
cmc
xchg
mov
mov
xor
push
cli
into
movsl
insb
cmpsb
adc
sbb
dec
xor
cli
ret
je
jl
cmp
or
js
push
jge
mov
jecxz
nop
jae
in
in
jp
mov
lea
xor
insb
xchg
movsl
add
lods
imul
ljmp
es
outsl
stc
incl
mov
jbe
push
xchg
and
push
mov
xchg
xchg
push
mov
outsl
and
int3
mov
popa
das
out
and
xchg
insl
js
in
jl
fstl
enter
fwait
push
sahf
aas
enter
adc
das
inc
repnz
mov
test
fimuls
popa
push
adc
in
fsubrl
mov
xor
into
jmp
xchg
std
dec
ss
fisttpl
jmp
mov
or
adc
rclb
sbb
jmp
into
ret
jmp
test
mov
popf
push
jecxz
movsb
inc
aas
mov
pop
bound
imul
shll
cwtl
pop
ss
add
push
push
pop
mov
out
jo
add
ret
je
xor
push
xrelease
lods
mov
out
pop
idivb
sbb
decb
pop
or
mov
xor
adc
dec
pop
movsb
loop
stos
jns
add
sbb
sbb
je
les
aas
in
addr16
mov
scas
cmp
pop
sbb
push
jns
repnz
dec
fldenv
jno
cmp
jmp
inc
loop
in
rcll
dec
pop
mov
mov
cs
cmp
pop
out
sub
dec
stc
test
mov
adc
lea
test
add
push
pusha
push
call
lea
je
stc
call
imul
pop
insb
movsl
shll
push
in
pop
xchg
je
insb
mov
daa
bound
mov
push
test
imul
sbb
ror
faddl
dec
adc
test
push
or
sbb
cmp
lahf
fisubrs
jmp
test
pushf
mov
cmpsl
adc
inc
leave
in
imul
out
shlb
pop
sbb
shrl
rorb
sbb
pop
pop
popf
jnp
sub
mov
cmp
inc
call
xchg
addr16
aad
cld
cs
lahf
dec
mov
idivl
loop
adc
sbb
dec
jo
popa
mov
fimull
mov
imul
aaa
lret
sub
dec
inc
sahf
sub
call
ja
sbb
or
insb
xchg
push
pop
jae
push
fwait
imul
fdecstp
mov
pop
cli
aad
mov
cwtl
inc
xchg
data16
add
test
and
std
loopne
push
and
xchg
mov
insb
js
sub
fcomps
bound
push
jge
jne
jbe
push
fwait
sub
push
or
int
cmp
xor
jl
xchg
cmpsb
xor
push
loopne
push
cmp
movsl
sub
movsl
jno
lock
in
scas
adc
movsl
das
cmp
jae
mov
pop
push
mov
push
jmp
lds
pop
pusha
movsl
jne
test
inc
mov
lods
push
subl
leave
lods
inc
adc
arpl
aam
sti
xchg
push
and
pop
jl
pop
in
sbb
and
scas
inc
fs
js
outsb
adc
lret
or
aam
pushf
cmp
lcall
lods
loop
cmpsl
pop
ficoms
and
mov
pop
jg
mov
push
ds
jbe
inc
or
jge
pop
dec
subb
mov
out
xchg
ja
ss
push
les
mov
lds
mov
ja
and
xchg
imul
push
sbb
fstps
in
cmp
je
xchg
imul
nop
cmp
jmp
fstps
cld
sub
push
cmp
jge
fnsave
jne
cmp
mov
adc
adc
jne
sub
push
mov
pushf
ljmp
inc
xchg
pushf
pop
add
mov
iret
and
lahf
inc
mov
sti
loope
aas
jl
nop
mov
push
lcall
mov
and
stc
jle
jecxz
dec
loop
push
in
mov
sti
mov
cmp
mov
sub
cltd
stos
fisttpl
xchg
shll
movsl
or
cld
dec
sub
cmp
test
push
out
or
xchg
movsb
sub
xor
xchg
add
mov
xchg
mov
cmp
stos
sahf
mov
add
cmp
mov
out
jge
pop
faddl
pop
movsb
icebp
push
pop
sahf
pop
or
into
into
push
shrb
inc
push
mov
in
scas
fs
push
mov
inc
cld
jo
mov
out
sbb
cmp
sub
inc
imul
xchg
jb
dec
shlb
mov
pop
cltd
inc
adc
or
or
jnp
hlt
lock
add
inc
xor
xchg
sub
xor
outsb
int
arpl
dec
ret
cmpb
pop
dec
push
or
or
mov
test
loopne
inc
mov
adc
mov
imul
pop
scas
or
iret
insb
nop
aad
or
and
jo
push
ljmp
xchg
shrl
xchg
sarb
addr16
inc
aaa
movsb
fs
test
aam
xchg
push
test
sahf
xchg
aaa
sbb
adc
inc
inc
je
jl
sti
adc
add
sbb
mov
mov
outsb
cli
leave
add
shrd
shr
lea
jmp
pushf
jmp
mov
xchg
cltd
or
sub
ljmp
adcb
lcall
lds
mov
pop
push
mov
xchg
sahf
jge
mov
jecxz
lea
mov
pop
stos
and
push
jns
fdivl
push
xor
xlat
xchg
arpl
sbb
mov
jmp
movzbl
jge
sbb
add
sub
inc
imul
inc
scas
jmp
outsl
push
fnstenv
icebp
js
scas
shlb
scas
inc
orb
jae
shlb
or
or
iret
push
hlt
xor
pop
sahf
xchg
int
test
test
movb
lea
je
test
test
pusha
push
sub
add
jo
bt
pusha
cmc
cmp
movw
jmp
push
mov
mov
pushf
push
pushl
pushl
ret
sub
or
jo
push
adc
mov
or
data16
inc
rcll
sti
add
pop
outsl
fs
mov
mov
add
andl
popa
scas
or
mov
stc
mov
jno
in
movsl
push
sub
hlt
xor
xchg
dec
scas
sbb
fcoms
fbstp
cmc
or
push
xchg
pushf
and
and
jns
ljmp
fdiv
in
push
and
xchg
fldl
mov
mov
mov
mov
add
ds
pop
movsb
out
xchg
cmp
or
out
fs
test
push
movb
cmp
pushf
lea
ja
call
std
dec
scas
sub
xchg
push
data16
mov
sahf
jecxz
xchg
iret
push
loop
inc
adc
ficoms
inc
out
cwtl
or
sbb
loopne
lss
test
xchg
fbld
lock
aaa
iret
sbb
xor
imul
jg
dec
xchg
fsubrs
inc
arpl
in
xchg
loop
imul
insb
nop
xor
imul
sbb
lret
cld
shlb
mov
in
jno
enter
aaa
test
imul
les
sub
xchg
adc
lcall
scas
divl
push
xor
test
pop
jno
insl
aam
loop
sbb
adc
repnz
xchg
rcll
cld
mov
mov
and
push
pop
test
shr
adc
out
pop
mov
xor
jo
orl
sub
aam
pop
cwtl
push
bound
jb
std
jge
lock
jnp
nop
dec
jmp
in
jno
push
or
mov
or
xchg
mov
pop
or
or
inc
mov
xchg
mov
stos
lods
fucomi
ds
jb
xchg
inc
jg
jno
jae
jg
ffree
in
shl
daa
mov
out
push
mov
cwtl
jns
ss
mov
loope
mov
popf
popf
std
adc
or
pop
ret
les
pop
xorb
adc
loope
repnz
out
cs
imul
popf
mov
or
repz
inc
mov
adc
pusha
les
pop
xor
xchg
ss
inc
orb
dec
cmp
xchg
xchg
dec
add
jno
add
xchg
pop
sub
xchg
test
idivl
test
xchg
mov
xchg
push
xchg
jo
cld
dec
hlt
add
sub
push
pop
cld
stos
inc
add
xchg
inc
out
xchg
mov
dec
or
xchg
push
mov
scas
sub
test
hlt
dec
sub
in
mov
ljmp
outsl
fadds
leave
adc
mov
sahf
fwait
push
cltd
inc
ljmp
lret
add
xchg
mov
jno
in
pop
lds
xor
jge
sbb
sbbb
iret
pop
stos
pop
xchg
xchg
in
fiaddl
ljmp
add
xchg
mov
inc
dec
inc
xchg
arpl
mov
das
ss
push
dec
jp
idivl
movsb
or
call
xchg
icebp
shll
mov
jmp
jl
imul
pop
cmp
adc
cmp
repz
adc
mov
mov
loop
xchg
push
lods
xor
mov
adc
mov
scas
mov
ret
sub
dec
rcr
sub
xadd
push
stc
btc
push
btr
cmp
or
push
bts
sub
mov
adc
sub
bsf
setg
mov
adc
pushf
mov
bt
lea
ja
pusha
xor
lea
setnp
lods
rcl
not
not
bt
call
lea
jae
call
outsb
xchg
shrl
xchg
iret
pmaxub
leave
jmp
sahf
dec
and
fnstcw
xor
add
inc
cmp
adc
ret
insl
adc
jge
inc
sub
pop
dec
filds
dec
push
push
jl
cmp
mov
push
repz
mov
xchg
push
jl
xchg
shlb
outsl
xchg
xorl
pop
fwait
push
mov
jae
mov
xchg
mov
inc
movlps
rcll
pushf
mov
sbb
pop
lret
push
xor
icebp
leave
cmc
fidivl
xor
ror
je
out
pushf
cmp
dec
mov
inc
movsb
call
imul
call
sub
nop
mov
sbb
out
jnp
in
paddsw
xchg
adc
cmp
in
push
out
or
cmp
leave
loope
enter
jl
mov
repz
cmp
ja
mov
and
add
jge
js
jo
mov
jae
cld
lds
rorl
scas
or
mov
popf
mov
inc
jo
aas
arpl
pop
xlat
xchg
mov
divl
sub
lock
cmc
mov
adc
xlat
add
pop
in
adc
pop
inc
fsub
lret
gs
lods
inc
mov
int
or
ret
rolw
xchg
pop
xchg
jne
pop
neg
pop
or
pushl
mov
in
popf
jmp
xor
mov
lret
xor
mov
sti
ror
mov
inc
jnp
rcr
sahf
push
rcrb
aas
js
xor
es
shrb
push
ror
push
in
dec
pushf
xor
mov
and
xchg
insl
cmp
je
xchg
jnp
lret
in
jbe
inc
sbb
xchg
mov
test
popa
mov
pop
mov
mov
gs
xor
outsb
test
int
jge
shl
xor
jbe
xchg
inc
shlb
out
jmp
imul
les
add
push
dec
fsubl
mov
mov
mov
ja
cltd
in
push
push
adc
sbb
stc
pop
pushf
push
imul
cwtl
jo
adc
add
xor
js
lods
push
shrl
mov
and
mov
insb
cmp
push
out
das
or
inc
dec
jb
orb
pop
xchg
xor
cmp
clc
cmpsb
cmp
xchg
add
push
div
or
mov
pop
dec
dec
loope
dec
loop
mov
rcrb
add
sbb
push
sarb
loopne
jo
test
xchg
loopne
mov
jns
and
mov
out
xchg
mov
ds
mov
add
xor
adc
xor
pusha
mov
pushf
inc
xor
push
out
sbb
std
mov
into
pop
jno
cmpsl
jp
fwait
lcall
insl
aam
push
lret
xor
into
out
jl
stc
mov
outsb
mov
into
push
dec
xchg
cmpsb
or
xor
mov
shlb
add
pop
and
ds
ret
jmp
movb
jmp
inc
sbb
das
or
dec
mov
sbb
popa
mov
sbb
fldcw
mulb
dec
sbb
cmp
sbb
mov
sbb
xchg
ds
mov
jle
lods
jg
sub
iret
mov
jmp
adc
mov
pushf
add
sti
mov
push
scas
cs
sbb
out
jecxz
scas
sahf
xchg
mov
pop
test
xlat
testl
xchg
lea
addr16
or
loopne
cmp
ret
push
fidivl
or
scas
xchg
and
jno
rclb
push
rolb
out
into
outsl
test
or
movsl
int
popa
dec
push
cmp
aad
pop
repz
rolb
ljmp
stos
inc
sar
stc
xor
popf
pop
sbb
add
sub
inc
stos
fidivrl
sbb
jmp
out
ljmp
ror
loopne
gs
mov
stos
test
roll
jns
or
into
iret
dec
negb
pop
or
mov
arpl
xor
mov
out
push
scas
jne
mov
iret
shll
mov
xor
xchg
jecxz
sbb
fmul
jno
dec
adc
nop
pop
cmp
mov
std
cmp
and
enter
iret
aam
int
cwtl
xchg
mov
jmp
inc
adc
daa
inc
push
inc
mov
xchg
fsubs
pop
into
jae
inc
add
addr16
and
jg
mov
xchg
xchg
mov
cmp
mov
imull
call
sbb
mov
call
aam
xchg
inc
push
and
rcrl
xor
xchg
sub
mov
outsl
mov
jmp
pop
sub
sub
xor
je
je
addb
sbb
cwtl
shrb
outsb
mov
jo
push
jg
pop
sub
lods
scas
push
mov
rcll
pshufw
mov
sbb
add
sub
in
xor
loopne
mov
sub
lods
xor
jo
jle
test
ret
pop
sbb
ret
pushw
movsl
mov
into
jmp
pushf
add
rol
stc
xor
rcl
mov
stc
call
imul
cmp
pop
jo
aas
mov
stos
arpl
das
push
add
pop
test
inc
jo
ret
mov
jb
jmp
push
pusha
xchg
negl
in
es
jbe
mov
inc
xor
xor
dec
mov
mov
adc
ljmp
push
mov
jno
sbb
mov
pop
xor
loopne
sbb
iret
stos
xor
and
aad
arpl
mov
pop
mov
pop
loope
inc
outsl
out
cld
in
enter
pushf
lea
jae
jmp
add
call
stos
xchg
pop
xor
xchg
test
gs
push
mov
push
xchg
filds
xchg
mov
xor
pop
stos
xchg
xchg
pop
cwtl
in
in
data16
icebp
les
pop
or
xor
fmull
add
push
loope
mov
add
dec
sub
push
int3
sub
push
cwtl
dec
xchg
lret
adc
daa
jecxz
ret
inc
out
fs
pop
iret
icebp
ret
sarl
movsl
sbb
sub
xchg
cmp
sub
push
ret
inc
inc
lahf
cli
push
mov
insl
mov
insl
sub
pmulhuw
xchg
popf
add
in
lcall
inc
mov
sbb
std
xor
int
push
ficomps
leave
das
cmp
shl
adc
aad
shrl
into
ds
dec
inc
add
in
lcall
mov
push
ret
arpl
and
fnstcw
mov
int
clc
push
mov
or
pop
int
mov
mov
add
xchg
in
in
jbe
adc
and
mov
add
fdivs
insb
movw
lea
ja
neg
cmp
mov
or
sub
setno
add
movsbl
mov
clc
clc
mov
jmp
inc
sbb
xor
xchg
pop
push
cld
push
mov
mov
stos
loopne
add
jle
xor
decl
test
or
sarb
dec
js
es
adc
inc
jmp
ja
pop
push
sub
xchg
xchg
mov
repnz
sbb
icebp
inc
in
jnp
subb
popf
xor
daa
fstpl
push
loopne
fimuls
cs
aas
inc
loop
ret
mov
jns
xor
xchg
mov
or
inc
pop
aas
xchg
sbb
arpl
inc
inc
shll
in
sub
inc
cmp
out
js
and
inc
xchg
xchg
repnz
aad
int3
adcl
mov
loop
popf
jb
imul
jle
test
sub
jl
imul
xchg
repnz
je
and
adc
cmp
sub
push
lret
loope
cmp
add
addr16
xor
repnz
pop
enter
jb
fcomps
jle
out
jecxz
repz
in
loope
lea
je
pusha
cmp
pusha
pushf
movb
movb
lea
je
bt
pushf
stc
cmp
pusha
jmp
pop
and
addl
adc
dec
dec
jnp
outsb
cmp
and
lret
cmp
mov
xchg
neg
adc
jecxz
lock
or
sbb
lods
test
push
jns
clc
lock
arpl
ret
adc
mov
fcoml
jg
repnz
mov
mov
push
dec
xchg
xchg
inc
inc
cmpsb
and
hlt
addr16
aad
stc
bound
or
pop
inc
clc
insb
jbe
call
sbb
and
xor
adc
inc
and
xor
and
enter
mov
jecxz
pusha
call
lcall
push
aaa
or
cs
jnp
repz
adc
mov
push
sbb
out
mov
pop
insb
push
lds
ss
adc
xchg
mov
cmp
push
push
jae
nop
cwtl
jmp
cltd
rol
loopne
scas
inc
jle
mov
popa
mov
or
adc
xor
cmp
sbb
mov
rcrb
imul
je
lods
inc
xchg
inc
ss
xchg
pop
mov
mov
aaa
jp
sbb
pop
pop
inc
push
cwtl
js
cmp
push
mov
pop
push
out
std
std
insb
cltd
in
daa
repnz
hlt
xorl
xchg
mov
insb
xor
repz
in
sub
fcoml
in
stos
or
xchg
mov
xor
aaa
ja
lahf
rolb
mov
cmpsb
sub
imul
jae
cmp
ljmp
mov
iret
jns
cwtl
fbstp
add
dec
insb
je
clc
jae
inc
fwait
icebp
js
mov
call
arpl
hlt
mov
ljmp
sbb
or
xchg
hlt
ss
mov
ja
sbb
pop
sbb
pushf
xor
inc
insl
push
xorb
mov
call
fnstsw
xchg
mov
js
jp
push
or
loopne
cli
add
jne
ret
lret
sbb
stos
test
ljmp
ret
xor
mov
movsb
out
or
pop
add
cmp
leave
fstl
push
adc
andb
fwait
jo
int
jns
mov
mov
fdivrs
push
push
sub
mov
lock
lret
mov
xor
inc
popf
cmc
in
fbstp
js
inc
add
cmp
sub
les
rorb
cmp
andl
aaa
out
xchg
cmp
lcall
jge
mov
aam
pop
mov
out
jne
add
and
mov
xor
inc
inc
std
and
and
add
xchg
xchg
push
inc
and
jae
cmp
and
cltd
inc
sbb
gs
xchg
xor
pop
xor
sbb
sbb
pop
inc
or
dec
xor
jecxz
sbb
ss
mov
imulb
lcall
into
enter
cmp
sbb
imul
xor
aaa
je
and
insb
hlt
lcall
sub
pop
aaa
aam
jp
jmp
mov
push
pop
imul
xchg
adc
mov
subl
or
sbb
in
jae
out
push
inc
out
sub
stos
xchg
aaa
pop
or
or
cmp
add
jne
dec
jmp
adc
repz
jo
mov
add
or
mov
sub
xor
mov
aaa
js
and
je
inc
pop
and
pop
jae
call
hlt
aaa
push
inc
jb
mov
add
jbe
std
inc
mov
dec
xor
add
mov
mov
not
hlt
mov
ds
xor
xor
xchg
inc
adc
cmpsl
add
jmp
jns
push
loope
ljmp
aam
mov
jg
out
mov
cmc
ret
sbbl
mov
out
pop
mov
mov
mov
mov
repnz
in
add
call
or
mov
cmp
fildl
pop
sbb
cmpsb
sbb
movsb
mov
xchg
daa
mov
hlt
mov
scas
cmp
lds
cmp
cmpsb
int3
cmp
mov
mov
mov
ss
movsb
cmp
fs
mov
es
fsubrl
test
sub
lods
cmp
hlt
in
nop
jno
dec
xor
aam
sbb
in
aaa
es
xor
mov
ss
fs
arpl
in
iret
sub
pushf
adc
or
lods
and
adc
aam
mov
adc
or
adc
adc
daa
push
icebp
rclb
adc
fdivs
and
mov
ja
mov
mov
pushf
cwtl
xor
adc
stos
ss
xor
add
xor
jg
jp
xor
push
rclb
arpl
push
sti
imul
cltd
mov
push
ss
pop
adc
sahf
jmp
ja
jb
nop
cmp
push
push
xchg
adc
lock
xchg
je
adc
cmp
sahf
sti
clc
scas
xchg
lock
sbb
sbb
test
je
je
mov
popa
dec
cmp
pushf
hlt
adc
int3
mov
xor
push
test
xchg
jae
cmp
mov
adc
cmp
adc
cmp
and
mov
push
xchg
adc
mov
sub
and
iret
or
sub
jno
js
adc
and
test
push
xchg
and
test
xchg
lods
stc
push
xor
jns
or
nop
jp
xchg
xacquire
cs
inc
inc
aaa
mov
pop
pop
inc
jmp
outsb
push
xchg
xchg
push
aam
xor
fsubs
notl
and
ss
cmp
aam
cmp
xchg
cmp
xor
xchg
mov
aaa
push
stos
icebp
aam
add
lods
nop
ss
or
pop
xor
fbstp
cmp
push
mov
subl
scas
pop
cmp
les
aam
xor
mov
pop
sub
loope
sbb
out
push
dec
sub
jo
dec
mov
xchg
repz
aad
sub
fstps
repz
icebp
xor
jmp
push
xor
clc
test
ret
sbb
out
stc
stos
imul
pop
push
and
jo
jae
sub
mov
sbb
mov
mov
insb
add
imul
push
sub
mov
ja
in
cmp
fidivl
mov
mov
and
aam
mov
mov
push
pushf
imul
inc
ret
push
hlt
pop
shll
sti
sbb
lcall
mov
mov
test
clc
fwait
and
mov
xor
jecxz
loop
xchg
mov
ja
adc
aaa
sub
stc
inc
and
outsb
cwtl
enter
mov
and
insl
pop
cmp
inc
push
idiv
ds
shlb
lods
jae
sbb
aaa
pushf
adc
and
dec
push
add
push
aam
ficompl
push
je
push
icebp
pop
push
mov
inc
inc
mov
imul
leave
xchg
sbb
aaa
lods
lcall
jl
xchg
test
fwait
lea
sub
cli
mov
sbb
add
rcrb
test
adc
cltd
pop
mov
lret
pop
gs
sbb
outsl
add
je
add
mov
or
clc
imul
mov
adc
xor
std
or
mov
xor
mov
lcall
and
adc
sbb
and
push
aaa
xor
imul
sbb
aam
int3
aaa
or
mov
mov
rolb
xor
sub
add
les
lret
xchg
jbe
xor
inc
sbb
dec
jp
jno
insb
sbb
pushf
fdivrp
sbb
sbbb
sub
mov
loopne
aam
in
loop
in
mov
fidivrs
fsts
fstpl
mov
imul
stc
inc
push
ljmp
inc
repz
and
mov
cmp
es
xor
push
jle
lret
ja
aaa
adc
clc
sbb
sub
xor
ljmp
call
mov
mov
add
es
imul
mov
cmpsb
cmc
xchg
aad
mov
and
pop
je
push
aas
cmp
movsl
mov
test
fcomps
sub
dec
das
cli
dec
xlat
xor
aad
jle
xchg
push
in
sbb
pop
push
scas
pop
test
mov
imul
lods
mov
clc
sub
push
lods
cwtl
lret
sbb
inc
pop
arpl
mov
rcrl
outsb
inc
stc
sbb
push
adc
cmp
fs
adc
mov
loope
imul
popf
xor
ljmp
mov
mov
subb
out
push
pop
imul
mov
push
xchg
jne
fsubrp
add
ss
mov
xor
cmp
push
mov
movsl
xchg
jo
in
pop
pusha
cwtl
stc
adc
das
cmp
xchg
xor
pop
cmp
xor
stos
push
aad
dec
and
inc
push
addl
or
push
jne
outsb
out
int
or
repz
or
lcall
inc
cmp
rep
rol
and
xchg
pop
pop
inc
hlt
pushf
ja
cmp
adc
test
jns
stos
lret
xchg
mov
insl
js
das
adc
sub
mov
cmp
shll
lret
mov
lret
insb
xlat
std
bound
mov
dec
sub
jo
in
insl
inc
cltd
mov
lret
std
mov
or
or
push
add
mov
mov
jp
outsl
or
push
dec
pop
jns
es
mov
adc
push
xchg
je
fldt
pop
cmp
cmp
idivb
hlt
pop
std
cmp
xor
jns
inc
inc
cmp
ret
or
or
mov
or
jp
pop
mov
test
pop
sbb
int
pop
fcompl
outsb
rcrl
jae
aam
add
jb
jno
cld
and
into
push
imul
js
mov
push
in
lea
adcb
stos
ja
ja
xchg
daa
test
push
add
mov
sbb
xorl
aaa
or
push
adc
and
mov
pop
aaa
adc
jae
and
repz
repz
mov
add
fs
test
pop
cmp
ja
mov
push
pop
sub
xor
inc
mov
sbb
outsb
iret
sub
and
dec
sti
sub
jb
jmp
sbb
mov
sub
jno
test
add
andb
or
xor
repnz
or
outsl
mov
fistl
xchg
cmpsb
sub
mov
lcall
mov
jp
pop
hlt
es
xchg
push
xor
adc
stc
sbb
add
jmp
es
sub
sbb
push
aaa
pop
and
mov
pop
ret
mov
ss
ds
sbb
je
int3
pop
aam
cmc
scas
lock
pop
push
outsl
mov
scas
jno
repnz
mov
adc
stos
je
jle
jo
jl
push
repnz
call
mulb
js
cltd
and
or
fstpl
mov
popf
aam
xor
fnstsw
in
mov
ror
or
rcll
pop
fistl
and
repz
dec
jmp
jno
aam
adc
dec
sub
mov
outsl
mov
insb
push
cltd
push
iret
jo
and
and
mov
jo
aaa
add
rorb
stc
xchg
adc
cmc
sti
push
jbe
jae
mov
pop
jecxz
adc
sbb
sbb
xor
and
and
das
cmp
adc
xor
push
aad
cmp
push
lcall
xor
lahf
xor
jmp
je
xchg
scas
push
xrelease
in
in
shll
jge
fs
mov
cmpsl
cld
mov
mov
jmp
shr
sbb
adc
sbb
sbb
sub
test
add
mov
cmp
insb
inc
movsl
aaa
out
stc
xor
cli
stos
xor
xor
xor
or
repz
cmpsl
cld
jo
data16
or
and
push
add
cmp
sbb
push
cwtl
test
bound
pop
ds
dec
cmp
dec
sahf
sti
fsubl
push
or
jae
js
iret
xchg
dec
imul
xor
dec
lods
sbb
or
adc
jo
mov
insl
adc
bnd
aam
outsb
hlt
dec
das
pop
cld
imul
mov
pushf
lock
jo
adc
jbe
dec
adc
sub
lea
je
or
push
leave
pop
stos
mov
mov
mov
add
subl
popf
ljmpw
and
push
xor
or
scas
call
std
sbb
aaa
sahf
repz
gs
xor
data16
lcall
jne
jae
xchg
cltd
add
mov
and
or
mov
mov
jecxz
lods
test
sbb
ja
mov
imul
jmp
jno
adc
mov
pop
xchg
idivl
adc
jae
int3
pushf
push
push
xchg
jmp
shll
push
mov
dec
pushl
imul
movsb
or
fmuls
pop
pop
or
nop
adc
js
jg
push
shrl
push
aaa
push
out
je
push
test
or
mov
hlt
sub
jbe
std
lods
mov
add
or
inc
push
je
mull
jmp
inc
fistps
sub
pop
fimuls
sub
pop
js
xchg
dec
sub
imul
xchg
xchg
add
data16
pop
in
fidivs
int
or
and
stc
push
and
into
jnp
loope
mov
inc
jl
stc
lret
sub
loope
cmc
jb
loop
jecxz
inc
or
and
push
shlb
mov
xor
xor
out
jnp
pop
inc
cmpsl
xchg
or
xor
imul
lds
pop
push
pop
scas
fwait
pop
jle
add
daa
jl
push
push
call
out
jbe
movsb
mov
mov
inc
aam
das
mov
xor
call
pusha
push
mov
mov
sub
pushl
mov
repz
fs
push
dec
sub
pop
pop
sub
fiadds
scas
je
sub
adc
and
bound
or
in
popa
fldcw
dec
fistl
ss
frstor
jmp
jbe
and
dec
test
addr16
jae
push
fldl
jmp
xor
sbb
push
fadds
movsb
int
ja
shlb
xchg
xchg
das
xchg
mov
push
xchg
mov
push
pop
jae
popa
mov
cmp
jmp
ja
jo
dec
push
sbb
xor
and
stc
mov
pusha
xorb
mov
aam
std
inc
push
or
adc
inc
and
jmp
mov
push
pusha
stc
lcall
dec
shrl
xor
testb
mov
jno
dec
ds
mov
xlat
mov
ljmp
inc
add
notl
fs
arpl
ljmp
sbb
pop
sub
rcrb
xchg
add
imul
mov
cs
jmp
cltd
in
push
mov
mov
aaa
jle
mov
sar
cld
inc
jg
fsts
ficomps
pop
push
gs
dec
std
xchg
fcomi
pushf
mov
into
sahf
ja
int3
sahf
aaa
sti
mov
mov
js
jns
fs
test
test
pop
or
sub
imul
push
outsb
jno
inc
stc
dec
into
je
dec
in
cld
jnp
data16
cmc
sahf
dec
addr16
aam
sub
push
iret
adc
bound
cmp
mov
shll
faddl
loopne
push
enter
test
outsl
mov
dec
push
aam
in
je
xchg
lahf
jae
lods
mov
xchg
or
jno
sbb
pop
mov
in
xchg
shll
xor
jns
adc
mov
pop
lcall
lock
mov
fbld
mov
xor
jne
jo
imul
mov
sbb
lea
dec
ja
cmpsl
mov
je
out
cmp
sbb
add
add
add
mov
das
adc
xor
add
movsb
adc
sbb
mov
mov
cs
mov
jmp
xchg
imul
mov
ja
clc
push
push
pop
mov
aad
mov
adc
jae
mov
push
mov
jns
sbb
repz
cmp
sti
jp
cmpsb
and
jae
jnp
push
lcall
test
stc
and
les
push
sub
mov
pushf
mov
xchg
jae
test
mov
lahf
cltd
shlb
ret
dec
mov
xor
outsb
aaa
mov
xor
mov
data16
lret
punpckhwd
inc
or
insb
scas
mov
es
das
adc
inc
jns
sbb
mov
push
mov
pop
ja
push
aaa
fdivp
and
cmp
arpl
test
outsl
or
add
jmp
xor
mov
cli
pop
xor
mov
repnz
mov
scas
cmc
movsb
filds
xor
cli
ret
and
lret
cmp
fstpl
ret
cmp
adc
jae
insb
inc
cltd
sahf
aad
xchg
mov
push
mov
imul
aaa
cltd
repz
jl
add
aam
out
sbb
and
sub
add
leave
mov
shll
or
adc
adc
aaa
push
and
lods
cli
outsl
jae
and
hlt
dec
jge
pushf
xor
pop
cmpsl
lods
or
xor
add
push
xchg
push
mov
daa
in
jbe
aaa
push
inc
cltd
push
adc
xchg
jo
mov
adc
jns
ljmp
fs
ja
wbinvd
aas
push
adc
add
gs
ret
insb
lods
and
imul
xor
sti
mov
xor
call
lret
xchg
dec
jb
jae
gs
lds
jecxz
or
mov
cmpsb
lea
hlt
pop
imul
out
and
jle
ljmp
push
mul
sub
lods
cmp
icebp
lret
adc
psubsw
test
cld
sbb
ja
sub
fisttps
push
imul
adc
aaa
mov
push
mov
dec
cmp
pop
pop
mov
inc
pop
jbe
jo
adc
sti
pop
push
imul
lea
push
insb
es
mov
xor
add
fnstenv
sbb
jbe
movsb
push
and
iret
ds
dec
ja
scas
popa
mov
fstpt
cltd
bndstx
loopne
rcll
ds
push
sbb
stos
dec
das
jmp
cltd
jmp
push
dec
sub
or
jmp
stos
xchg
or
adc
lods
jno
movsb
loope
push
sbb
dec
rorl
call
flds
imul
cmpsb
cwtl
dec
push
push
or
hlt
push
pusha
into
and
outsl
pop
pop
lds
jb
sub
sub
icebp
int3
andb
loop
aaa
or
dec
xchg
in
pusha
ljmp
xlat
dec
outsb
aaa
xchg
das
cmp
loopne
sbb
adc
xchg
pop
pusha
jmp
adc
add
jae
mov
jg
fstp
mov
adc
jmp
jb
aaa
jne
aaa
mov
rcll
xchg
adc
adc
movsl
mov
adc
and
jecxz
dec
jle
insb
cmp
je
js
les
addb
inc
sahf
pop
dec
inc
push
movsl
mov
xor
sbb
and
sub
add
aad
pop
aad
or
adc
add
adc
cmp
pop
push
jns
sbb
sub
call
mov
ret
push
mov
dec
sbb
jae
imul
insb
jae
test
or
mov
std
jl
cwtl
sub
insb
and
push
xor
andl
loope
mov
jno
clc
add
push
push
xor
pop
lcall
shrl
jb
dec
lahf
jo
xchg
jae
pop
clc
jae
dec
jmp
orl
sbb
sub
cmpsb
out
xchg
fstpl
addb
push
mov
ret
adc
dec
add
and
movsb
sub
bound
mov
dec
loopne
mov
mov
push
adc
dec
repz
dec
test
hlt
mov
cmpsb
sub
jo
sahf
test
std
cmp
mov
ds
xchg
sbb
sti
push
sub
or
lds
inc
xor
hlt
xchg
cmp
and
cmp
push
cltd
xor
hlt
mov
mov
loopne
pop
adc
dec
repnz
imul
sub
mov
ss
add
and
push
mov
mov
jmp
mov
xchg
test
popa
stc
pop
jp
cmp
mov
fs
sub
mov
lcall
jecxz
les
mov
ja
sbb
cmc
and
adc
jbe
mov
mov
xor
aam
push
mov
js
aam
scas
jbe
push
insb
jns
or
test
repnz
pop
adc
pop
std
call
mov
stc
and
js
jae
shll
out
xor
stc
cmc
cltd
cmp
test
xor
rclb
jbe
mov
add
and
xor
sub
divl
pop
jae
inc
mov
and
push
pop
sub
add
inc
add
mov
pop
dec
daa
jecxz
xor
dec
cwtl
add
dec
arpl
int
mov
es
gs
stc
and
xor
xor
divl
loopne
jae
sbb
iret
pop
test
push
push
shlb
inc
pop
mov
push
mov
jae
sub
imul
xlat
sbb
jge
cmp
sub
cmc
outsl
rcl
pop
jno
mov
mov
adc
add
leave
aaa
push
imul
jne
insb
or
aam
add
sbb
test
push
mov
std
stos
mov
mov
sbb
jb
adc
cmc
and
mulb
aaa
ja
and
scas
std
scas
scas
adc
mov
test
xor
cwtl
sbb
roll
test
mov
xor
in
sub
imul
incl
sahf
or
out
test
mov
out
jl
pop
ret
mov
jns
sub
sub
add
xchg
jne
mov
sbb
push
cmp
mov
dec
inc
test
fs
push
fidivs
and
das
jae
ljmp
repnz
stos
inc
icebp
dec
cltd
or
insb
inc
cwtl
and
leave
mov
adc
call
add
imul
lods
nop
hlt
sub
fistl
pop
mov
dec
xor
jl
mov
pusha
pop
add
mov
rolb
ja
leave
sub
loope
sbb
imul
or
fstp
push
push
cwtl
andl
push
jne
sbb
out
fs
mov
das
xlat
cld
mov
sub
and
ljmp
out
push
mov
pop
push
mov
adc
jae
pop
aad
sbb
data16
cmp
and
xor
insl
in
scas
sbb
aaa
in
push
sbb
pop
test
cwtl
in
push
xlat
push
lock
movsb
ficoms
pusha
mov
and
leave
xor
nopl
mov
div
jb
mov
clc
or
sti
cli
push
in
jecxz
ja
inc
pop
lds
std
or
add
xor
imul
in
or
pop
scas
lods
addr16
adc
sbb
dec
jnp
push
lods
dec
jp
or
clc
repz
imul
xor
or
add
cltd
xchg
inc
mov
fldcw
mov
imul
or
cwtl
int3
jno
aam
inc
scas
jae
sbb
cmpsb
mov
inc
or
out
outsb
sbb
jae
icebp
mov
adc
pusha
xlat
xchg
stos
xchg
sbb
imull
lret
jne
pushf
inc
add
lods
push
adc
add
push
cmp
sbb
cmp
jbe
push
lods
sbb
ljmp
repz
xchg
sbb
outsb
pop
imul
hlt
cmpsl
andb
pop
sbbl
stos
push
xor
jb
ds
mov
adc
adcl
out
mov
jae
jo
and
cmpb
cmp
lds
divl
or
daa
mov
inc
clc
imul
loope
sbb
pushf
xchg
sbb
jge
adc
pop
jns
add
gs
out
mov
xchg
xchg
iret
rcrl
dec
fwait
push
push
pushf
stc
clc
mov
mulb
insb
sub
sub
fcoml
sub
inc
adc
int3
fnstenv
dec
mov
cmpsl
sbb
addr16
pop
and
inc
dec
pop
in
mov
mulb
mov
and
aad
fcomps
inc
sbb
cmp
mov
pop
push
lods
cmc
fs
jecxz
sub
movsl
cmc
xor
mov
ja
push
mov
ficompl
push
rorb
xorb
jmp
or
dec
jbe
in
and
cmpsl
shlb
and
push
or
shl
lods
xor
dec
mov
xor
dec
movsl
inc
adc
test
inc
in
mov
mov
mov
ja
outsl
in
mov
shrd
or
adc
push
sub
dec
xor
mov
aas
roll
push
fwait
adc
jo
mov
jle
or
ja
fsubrl
dec
and
dec
dec
mov
sbb
fsubrl
xchg
imul
pop
pusha
push
cmp
mov
outsb
sub
pop
dec
int3
imul
fisubs
jge
adc
inc
mov
shrl
fcoms
lods
test
int
cmp
push
pop
repnz
loope
aam
push
jne
adc
mov
sub
enter
out
insl
cmpsl
adc
rcrl
ret
icebp
cld
mov
loope
xor
adc
jmp
mov
js
xor
xor
fbld
sub
sbb
pop
mov
hlt
push
ja
mov
sub
sub
sbb
push
mov
inc
dec
es
pop
adc
xor
int
lds
jmp
push
movsb
push
ja
push
out
sub
sahf
adcl
jmp
push
mov
int
mov
pop
add
push
add
mov
shrl
xchg
mov
outsl
in
cmp
mov
ja
loope
and
dec
cwtl
push
sbb
adc
in
bnd
push
lock
pop
stc
scas
push
cmp
insb
jns
and
mov
in
jns
mov
and
and
adc
jbe
mov
and
ret
in
roll
sbb
push
in
test
and
lahf
mov
sbb
mov
lcall
mov
dec
mov
js
pop
subl
arpl
sub
leave
insb
cmpsw
push
xchg
mov
or
or
aam
ja
or
leave
popa
inc
movsb
icebp
aam
jbe
inc
mov
das
add
xchg
inc
mov
adc
or
out
pop
wrmsr
ja
test
scas
inc
cmp
imul
int3
adc
mov
insb
js
xchg
cmp
cmp
cltd
sub
cld
push
pop
aas
gs
inc
jae
in
cmp
clc
mov
cltd
mov
inc
cmpsb
mov
daa
mov
inc
stos
jl
mov
push
cmp
lea
mov
divb
loop
dec
aam
inc
clc
adc
pop
test
pop
outsb
xorl
js
xor
pop
xchg
xchg
xor
inc
ljmp
mov
push
movsb
ss
push
ja
and
adc
movsb
pusha
adc
stc
clc
or
jae
add
addr16
popa
mov
daa
push
xlat
loopne
mov
jnp,pt
sub
rcr
sbb
or
sbb
lds
imul
idivl
mov
inc
and
loope
out
or
dec
cmp
scas
ja
movsl
adc
inc
push
jns
mov
pop
clc
mov
adc
cmc
scas
and
sbb
int
pop
and
aaa
push
and
mov
out
adc
jae
hlt
sub
sbb
mov
jmp
sub
jae
pop
inc
iret
sbb
fidivl
test
dec
cmp
mov
int
jecxz
pop
sbb
dec
xor
jb
sarb
fsubrp
roll
ds
in
ss
das
cmp
mov
jle
xor
fidivs
hlt
rcr
stos
lock
insb
pop
shlb
pop
test
jns
and
pop
mov
jo
add
outsb
std
xchg
dec
das
pushf
mov
in
push
out
ret
idivb
add
mov
xchg
shl
pop
mov
or
mov
ja
inc
push
pop
popa
dec
mov
or
insb
jl
imul
push
jb
fdivrs
cli
out
mov
ret
outsb
push
sub
ret
loop
mov
add
xor
push
movsl
xchg
jmp
mov
aas
addr16
ljmp
aaa
xor
out
xchg
jae
adc
lods
and
daa
fcmove
mov
iret
pop
bound
jo
add
pusha
insb
cmp
adc
inc
cld
hlt
cmp
test
aaa
or
mov
lret
xlat
mov
fistpll
dec
sbb
cmpb
jp
fwait
push
cmp
inc
pushf
adc
xor
shrb
subb
imulb
adc
mov
adc
je
hlt
cs
xor
and
pop
mov
xor
cs
xor
lods
sub
dec
jae
into
or
fistpll
aad
or
jmp
hlt
mov
mov
imul
pop
add
adc
pop
hlt
cltd
jmp
clc
inc
mov
sbb
ss
pop
mov
int
pop
and
inc
pop
pop
mov
push
pushf
bound
jne
out
jae
cmpsb
lahf
cwtl
hlt
mov
sbb
cmp
add
lret
int3
ja
mov
icebp
aaa
lods
pushf
mov
fucom
dec
xor
shlb
mov
icebp
dec
dec
cmp
mov
mov
nop
iret
loopne
repz
mov
aam
xor
das
xchg
divb
ret
ja
push
ret
jp
push
ss
sbb
sub
ret
ljmp
lds
outsb
or
cwtl
nop
imul
cwtl
lods
mov
jo
js
std
adc
and
jns
mov
sub
jp
pop
imul
stos
fdivrl
sbb
test
mov
adc
pop
push
imul
inc
sbb
je
and
push
cmp
and
mov
pushw
les
add
jg
imul
xor
lea
fs
mov
stc
ja
mov
lahf
xchg
hlt
xchg
or
imul
stos
int3
aad
outsl
or
test
jbe
pop
aaa
xchg
or
mov
ficoml
int3
jp
sub
test
push
xor
stos
adc
movsl
ja
dec
inc
and
mov
adc
jbe
mov
stos
add
lcall
jae
clc
iret
jg
mov
mov
mov
or
pop
push
xchg
lcall
or
movsb
xchg
xor
ja
mov
push
xor
inc
loope
out
scas
and
stos
sbb
mov
xchg
lea
mov
test
adc
jo
jae
mov
hlt
lea
jnp
popf
lods
mov
je
int
pop
jle
xor
mov
rclb
dec
and
hlt
outsl
test
test
mov
push
fidivl
sbb
int3
mov
aaa
movsl
ja
push
sbb
cltd
and
bound
pop
xchg
sub
cmpsb
sbb
pusha
mov
scas
lret
cmp
jae
sbb
out
aaa
mov
repnz
jo
outsb
dec
loope
mov
stos
dec
lcall
pushf
and
jo
shlb
lcall
jns
movsb
cmp
cmc
cwtl
or
dec
jge
movsl
inc
outsb
pop
clc
insb
xor
hlt
push
mov
push
leave
mov
test
pusha
pusha
cmovle
push
mov
jb
inc
sahf
push
mov
popa
adc
insb
and
ret
cmpsb
fs
xchg
mov
scas
add
sarb
sbb
adc
ljmp
cli
sahf
push
jo
test
adc
jl
mov
sbb
js
lods
sarl
xor
and
mov
pop
xchg
jecxz
and
lock
lret
mov
sbb
mulb
ds
std
add
inc
add
jbe
ret
popa
loopne
clc
lea
push
add
sub
jns
int3
jo
aaa
stos
mov
popf
xchg
pop
stos
cmp
aaa
sub
out
inc
sbb
pop
test
data16
les
cmpsb
ljmp
mov
xchg
aaa
sbb
data16
into
or
js
mov
xchg
in
push
xor
dec
xor
and
clc
sti
stos
push
jns
push
push
out
push
in
sbb
fsub
xor
mov
mov
push
and
adc
xchg
jno
pop
mov
push
push
pusha
inc
pusha
push
aaa
cmp
inc
and
in
pop
jmp
cwtl
outsl
and
pop
mov
popf
or
out
inc
movsl
inc
test
sahf
dec
pop
mov
fisttpl
ds
sub
aad
mov
int3
ss
sarl
mov
aam
sbb
imul
xor
jecxz
imul
xor
hlt
sbb
les
inc
jmp
cmp
or
adc
mov
ss
mov
add
push
jecxz
and
and
cwtl
out
dec
or
lret
jo
adc
lods
push
inc
fdivl
enter
push
xchg
push
jmp
ja
enter
push
push
daa
xor
imul
jno
sahf
mov
daa
dec
jne
add
add
pop
lock
and
or
popw
adc
rcll
inc
jg
pop
inc
pop
cmp
lea
sti
ja
push
rolb
stos
sbb
mov
add
sbb
push
arpl
nop
fnstenv
inc
shlb
xchg
roll
xorl
jo
cmc
mov
mov
mov
lds
mov
jns
sti
movsb
jg
out
lock
and
fistpll
nop
mov
sbb
in
and
dec
mov
dec
pop
and
or
and
fdivrs
incb
xor
aaa
aad
imul
and
ja
mov
ss
in
add
pop
mov
lea
cwtl
pop
and
aaa
movsb
roll
jae
ret
insb
pushf
scas
adcl
push
lcall
das
nop
bound
loop
movsl
imul
mov
mov
test
sub
imul
shrb
pushf
pop
mov
insb
rcrl
mov
imul
jns
test
cmp
jae
out
and
mov
ja
jmp
dec
xchg
div
mov
imul
imul
pop
jae
jbe
in
fidivrs
inc
xlat
lcall
ja
adc
adc
add
inc
push
push
cmc
into
mov
in
inc
roll
add
andb
mov
or
mov
mov
je
fs
imul
int3
sub
shlb
repz
add
shll
rclb
inc
pop
les
lahf
cmp
push
nop
movsb
pusha
fcom
insb
inc
out
adcb
sahf
mov
test
mov
jns
in
cmp
jae
test
mov
or
push
cwtl
daa
cmpsb
sub
jle
jmp
sbb
jg
sahf
cmp
dec
lods
outsb
sub
inc
sbb
sub
and
dec
cmpsb
xchg
jl
addr16
sbb
imul
lods
or
lahf
jo
dec
cltd
rclb
inc
arpl
in
inc
xor
jp
pop
cmp
sub
jae
std
sub
mov
jecxz
pop
rcll
insl
xchg
iret
add
jno
js
jecxz
cmc
push
jl
push
dec
repz
imul
xor
aaa
cmpsb
jnp
jae
and
sub
push
clc
ret
mov
ja
jae
xchg
jecxz
idivb
push
lret
dec
arpl
fidivs
mov
imul
jae
arpl
add
fistps
push
imul
hlt
jp
stos
mov
mov
xor
insl
out
jo
push
pop
sub
ficomps
or
cmc
into
in
in
js
shll
mov
insl
mov
pop
imul
adc
pop
inc
mov
loope
mov
or
shl
mov
dec
jmp
sahf
imul
jl
or
insb
cltd
imul
pusha
adc
addr16
pop
call
xor
sub
fldl
out
jb
lea
mov
mov
aas
lret
and
push
bndstx
push
fdivl
mov
dec
mov
pop
add
inc
mov
mov
mov
mov
jae
ja
cwtl
lods
lcall
repnz
adc
test
and
dec
or
pushf
je
imul
fsubs
test
ljmp
add
cmpsl
mov
ja
cmpsl
je
adcb
data16
or
inc
les
movntps
lods
and
mov
lea
imul
vmwrite
andb
clc
or
sahf
push
jae
loop
fisubrl
jae
loope
pop
inc
mov
int3
sub
je
repz
in
mov
sbb
mov
imul
es
and
jb
xor
add
imul
scas
xor
enter
inc
mov
xor
rolb
mov
mov
stc
stos
out
jo
sahf
and
add
push
not
insl
adc
call
test
push
jmp
jbe
jo
dec
xchg
fsubrs
adc
xor
inc
imul
jl
dec
mov
jne
jle
mov
adc
insl
push
jecxz
dec
mov
imul
push
int
cmp
fcomi
pop
mov
inc
shlb
stc
rcll
out
xor
ja
cli
and
dec
jo
jnp
pop
sub
scas
cmp
mov
adc
les
insb
pop
fdivp
jmp
and
cli
sub
jge
movsl
test
add
or
mov
jb
imul
sub
mov
mov
ds
sbb
sub
mov
daa
test
je
fcmove
pop
cmp
xchg
mov
cmpl
push
rclb
mov
dec
aaa
mov
dec
push
dec
sbb
dec
es
mov
out
sbb
lods
in
pop
mov
imul
cmp
push
pop
cmc
pop
pop
ds
adc
outsb
cmp
mov
dec
jle
inc
ss
dec
cltd
dec
jo
sbb
mov
iret
repz
aam
aaa
inc
lds
stc
hlt
cmc
cld
push
outsb
addr16
sbb
je
in
fldcw
and
fildl
loop
mov
cmp
scas
jl
sbb
adc
lahf
xchg
adc
arpl
cld
pop
push
test
icebp
mov
sti
inc
rclb
aaa
aam
cmp
cmp
fidivl
and
mov
nop
xlat
iret
mov
xchg
add
adc
jae
sbb
cs
shl
or
in
mov
xchg
mov
xor
push
ljmp
dec
mov
pop
pusha
psrld
mov
sub
ja
sbb
xchg
dec
inc
jo
fldenv
int3
push
cltd
nop
jge,pn
icebp
outsb
push
jp
push
jnp
cmc
out
loope
sbb
jmp
cmpsl
jmp
lock
into
inc
das
sarl
dec
lds
adc
inc
leave
jb
imul
dec
xchg
es
ja
aaa
push
arpl
and
pusha
xor
jmp
repnz
addr16
sti
call
rorb
push
cltd
or
nop
scas
or
and
movsb
scas
call
pusha
mov
mov
pop
pop
imul
mov
movsb
test
sub
pusha
aaa
adc
adc
out
push
or
mov
call
out
arpl
lods
sbb
mov
clc
enter
call
pop
clc
inc
sti
pop
les
scas
ja
add
sub
cwtl
inc
add
pop
jl
xchg
mov
outsb
insb
andl
xor
jo
nop
and
add
cmpsb
lret
aaa
jo
lds
out
add
rolb
xchg
dec
mov
mov
das
dec
sub
jge
fisubrl
pop
push
ss
push
jl
xchg
repnz
aam
mov
xchg
test
test
push
xlat
cmp
cwtl
cmp
sbb
xor
arpl
xchg
xor
push
mov
ret
test
outsl
inc
lods
mov
or
divl
adc
lock
lret
xor
ja
add
imul
or
cmpsb
rorb
xor
outsb
mov
mov
push
and
push
ds
ss
ljmp
xlat
xchg
xlat
adc
insl
dec
std
ja
mov
xchg
xchg
je
push
push
mov
mov
mov
pop
mov
call
aaa
shrb
dec
inc
sub
mov
dec
cmp
lock
dec
push
pop
jge
inc
call
or
xchg
pop
jb
mov
cmpsb
ret
mov
push
mov
test
test
jo
cmp
ja
test
add
aaa
xchg
scas
pusha
mov
cli
mov
out
xor
repz
jns
mov
jp
xchg
or
xchg
jge
inc
sahf
mov
cmp
lods
ret
lods
sbb
in
fisubs
sbb
mov
adc
icebp
cld
pop
inc
xchg
jp
inc
nop
fldl
mov
int3
pop
add
enter
mov
sbb
ja
and
dec
dec
test
mov
outsl
jmp
mov
test
mov
dec
clc
xor
fidivs
xchg
push
push
pusha
push
cs
lds
and
mov
lds
push
sbb
jecxz
mov
pop
mov
movsb
sbb
ret
outsb
and
out
inc
adc
insb
pop
jne
std
mov
and
xchg
xchg
imul
imul
push
data16
xor
in
adc
dec
sbb
and
inc
sub
push
or
pop
push
mov
pop
mov
test
pop
daa
xchg
daa
mov
add
out
push
lds
icebp
cli
cmp
ljmp
sub
xchg
cmpsb
mov
test
adc
insb
aad
insl
mov
fcomps
and
jle
rolb
adc
jg
stc
add
sbb
mov
shr
subps
adc
fisubs
inc
push
aam
fstps
out
in
mov
imul
test
cmp
push
mov
jl
inc
push
mov
push
repz
mov
out
in
arpl
xchg
insb
adc
jmp
sub
movsb
lods
sub
or
loopne
arpl
daa
pop
out
mov
dec
xchg
adc
sub
test
adc
jo
stc
xchg
stos
fucom
adc
push
sbb
cmc
cmp
arpl
mov
jge
jo
pop
rorb
dec
cmp
adc
jp
pop
jne
sar
mov
outsb
sbb
add
add
sub
lods
outsb
dec
mov
in
leave
popa
stc
test
js
xlat
adc
in
outsb
movsb
xchg
fadds
popf
xchg
mov
adc
fldt
xorb
andb
insb
stos
xchg
daa
cs
mov
lret
out
push
xchg
mov
imul
inc
cmp
imul
ljmp
push
push
sbb
adcl
and
cmpsl
xchg
cmp
cmp
arpl
fistl
rolb
cwtl
mov
shrb
mov
xchg
mov
mov
xchg
xor
adc
add
mov
movsl
hlt
adc
pop
xlat
pop
aam
test
sti
xchg
mov
rclb
jns
fwait
cli
int
ss
in
sbb
xor
sub
inc
jae
cmp
mov
or
xchg
lock
jb
jae
shlb
mov
lcall
push
fisubrs
pop
dec
cmp
int3
fidivrs
adc
scas
mov
jae
jg
dec
mov
inc
cld
sub
movsb
or
out
stc
loopne
dec
inc
scas
imul
leave
xor
clc
pop
test
movsl
ds
mov
jmp
or
or
mov
mov
jne
movsl
sub
mov
mov
cmpsb
jne
test
push
cmpsb
fiadds
stc
mov
pop
pusha
rcrb
push
jbe
mov
fidivrs
sbb
jl
jo
xor
push
mov
ds
or
ret
and
adc
mov
jae
mov
shl
or
add
pop
pop
xchg
and
lods
xchg
ljmp
hlt
ds
subb
das
imul
adc
mov
ja
add
out
ljmp
push
and
cmp
cmp
adc
pushf
mov
xor
ja
mov
cmpsl
adcl
cmp
push
iret
movsl
insb
cmpb
adc
mov
and
jae
popf
cmp
jno
jmp
pop
push
js
or
dec
jns
xor
jnp
std
dec
push
jbe
mov
imul
or
adc
imul
nop
cli
mov
mov
movsb
iret
fidivl
jp
ret
fldcw
mov
mov
adc
push
imul
imul
hlt
jb
add
sbb
subb
xor
sub
vmxoff
adc
xchg
pop
std
fstps
inc
fwait
mov
mov
daa
stos
ret
jnp
and
outsl
fmul
ja
enter
dec
clc
cmp
mov
mov
or
in
ds
sbb
dec
ja
jle
scas
int3
mov
clc
loope
insl
or
jg
mov
mov
int
adc
and
ffreep
or
mov
fs
xchg
adc
jg
mov
push
and
imul
cmpsl
std
aaa
jle
inc
xchg
push
xlat
sbb
mov
aaa
push
inc
mov
rorl
jo
out
imulb
sbb
pop
jne
clc
xchg
add
cmpsb
mov
cmp
push
mov
xchg
lea
hlt
or
cmp
movl
int3
sub
sbb
pop
xor
aam
mov
movsl
pop
or
sub
push
add
cmpsb
mov
int3
or
push
imul
mov
clc
jge
repnz
ds
add
pop
push
jecxz
std
outsb
and
shll
shll
xchg
into
and
mov
clc
cmp
dec
mov
in
test
ret
push
mov
out
mov
sbb
cmp
pop
outsb
rcll
cmp
jb
mov
inc
mov
or
iret
cmp
sub
testl
pop
xchg
mov
arpl
xor
xchg
lock
lcall
out
add
and
packsswb
or
nop
mov
imul
sub
cmp
cmp
out
movsl
jo
cld
lcall
mov
push
xchg
mov
xchg
and
fistpll
mov
mov
cmpsb
lea
jo
popa
xchg
imul
and
mov
mov
mov
lds
call
pop
jae
bnd
sbb
lcall
lock
pusha
leave
push
clc
or
outsb
cmc
mov
dec
jo
aam
loop
inc
shlb
mov
mov
add
pop
push
imul
ss
test
mov
mov
inc
pop
popf
adc
les
sub
and
jle
aad
jl
sbb
aad
inc
popf
adc
adc
sub
cmc
mov
test
xor
out
je
data16
xchg
adc
outsb
loopne
xchg
das
insb
jae
test
fildll
ljmp
xchg
insb
test
sbb
adc
push
shll
inc
adc
push
jbe
add
testb
ficoml
imul
adc
mov
mov
in
push
hlt
inc
add
in
pop
mov
sbb
int3
xchg
mov
mov
in
ds
pushl
repnz
pop
push
jae
aaa
inc
ja
mov
fwait
xor
cs
or
xor
rorb
sub
bound
mov
aas
ja
jne
and
add
sbb
sbb
cmp
jne
adc
cmc
push
loope
data16
call
jle
aaa
pop
aam
fs
lds
sbb
push
mov
sbb
cmpsl
add
cmp
cmpsb
jp
xchg
cmp
pop
data16
mov
cmp
sub
repz
sti
cli
in
loope
jo
imul
stos
and
lock
xchg
divb
cmpsb
jge
adc
scas
mov
mov
clc
in
sbb
sahf
aaa
out
shll
and
sbb
fsub
lea
pushf
lcall
fsubs
push
out
sti
pop
imul
mov
mov
jae
es
and
rclb
stc
pushf
lcall
hlt
add
cli
iret
ret
out
push
push
jmp
cld
pop
add
adc
dec
xchg
pop
les
or
mov
jne
faddl
jl
repz
movsl
sub
data16
pop
daa
roll
cmp
jae
out
mov
mov
dec
jns
push
xchg
jl
jbe
xor
and
out
mov
dec
cmp
push
fld
or
xor
lret
fiadds
mov
adc
jmp
xchg
inc
sbb
popa
mov
loope
lods
test
or
adc
in
mov
popl
mov
and
cmc
xchg
sub
and
jle
mov
mov
pop
jae
shrb
fisubl
sbb
xchg
push
push
push
mov
adc
scas
dec
les
adc
push
test
pop
push
cmp
dec
cltd
mov
jl
mov
jo
shlb
inc
mov
push
jns
cmp
fmuls
fidivs
in
adcb
je
dec
insl
jne
adc
pop
sub
insb
test
jb
sbb
jne
mov
popa
pop
mov
lcall
jns
shrl
sbb
test
mov
inc
jae
fistpll
test
inc
pop
cs
jae
in
cmp
jle
xor
imul
bound
push
jb
or
jecxz
sahf
ret
dec
mov
dec
cmc
adc
andb
push
sahf
sbb
test
and
pop
jp
mov
add
add
pop
les
adc
jge
movsl
xchg
daa
push
ja
add
or
and
daa
repz
jns
push
aam
pop
pop
lods
xlat
imul
loopne
jle
sub
pop
pop
repnz
outsb
popa
xor
fucomp
jnp
jmp
ja
sbb
scas
dec
sub
fstpt
or
nop
xor
pop
dec
out
jae
jbe
push
add
les
mov
cmc
xchg
mov
pop
xchg
out
xor
and
push
pop
xor
cwtl
sbb
xchg
test
in
lods
int3
sub
mov
and
or
adc
ficomps
jb
lahf
or
add
scas
loope
add
sbb
xchg
jmp
inc
jecxz
iret
jne
add
xchg
je
sbb
jl
jae
lods
in
mov
dec
sub
jecxz
popa
adc
push
xchg
adc
arpl
ja
cmpxchg
test
xchg
cmpsb
repz
insb
pop
lods
push
sub
xchg
mov
loopne
aaa
mov
dec
rcrb
insb
sarb
push
lahf
and
dec
cwtl
lret
cmpsb
push
pop
mov
cmc
mov
fildll
mov
sbb
std
repnz
leave
jo
xchg
xor
popa
push
jbe
daa
jbe
int
mov
ja
into
jp
daa
push
cwtl
push
push
gs
xlat
movsl
cmpsb
sub
mov
test
ret
aam
out
jecxz
sbb
mov
scas
mov
jne
repz
jae
cmc
sub
cmp
add
lret
data16
xor
outsl
insb
pusha
mov
imul
jns
push
int
jbe
cld
adc
shll
pop
add
ret
repnz
out
xor
les
xchg
mov
xlat
jae
or
push
add
fmuls
mov
sub
pop
push
cld
mov
xor
in
add
data16
popf
jo
jae
and
scas
mov
test
cwtl
scas
xchg
lods
dec
push
mov
add
pop
aam
mov
jae
cli
pusha
mov
xorl
pop
pop
repnz
pop
pop
sbb
and
inc
cmp
add
sub
mov
and
xor
enter
add
or
inc
add
dec
stc
adc
jae
xlat
xchg
jns
outsb
cli
loope
mov
dec
pusha
and
xor
negb
cmpsb
adc
fidivs
mov
inc
mov
sbb
je
mov
mov
fxch
pop
pop
push
sarl
pop
inc
mov
xchg
inc
pop
ja
test
jno
jle
clc
xchg
fstpt
jmp
sbb
fmull
ret
movsl
adc
sti
xchg
enter
int
cld
pop
ljmp
cmp
int
push
jo
mov
jae
insl
push
lods
iret
xchg
jmp
mov
out
push
ret
jmp
jne
imul
cmp
mov
cmp
dec
mov
dec
scas
int
sbb
cwtl
push
mov
mov
fadds
imul
push
pushf
jbe
push
mov
cmp
dec
mov
push
lcall
int
emms
enter
cld
sahf
pusha
pusha
fstps
mov
cld
inc
cmpsb
sarb
dec
movsb
mov
push
inc
addr16
adc
pop
jg
dec
fwait
jae
jle
imul
sbb
push
int3
jge
or
adc
push
int3
xchg
movsl
mov
in
cmp
pusha
push
mov
mov
mov
repnz
faddl
or
ss
pusha
aaa
out
push
jp
cmpsb
mov
add
orl
dec
push
int
outsl
adc
scas
push
mov
xor
int
lret
ret
in
ja
movsb
lahf
mov
mov
pop
sbb
jae
xor
adc
out
fistl
inc
cmpsl
int3
dec
cmp
popl
imul
sub
cs
repnz
fmuls
rclw
mov
xchg
jmp
sub
dec
jae
pop
outsl
std
adc
push
adc
mov
inc
ss
pop
dec
jmp
adc
or
sub
push
mov
xor
insb
xor
imul
fsubr
and
out
sub
int
mov
pop
notb
aas
stc
in
popfw
lea
adc
insb
inc
sti
lock
jae
or
dec
sbb
inc
dec
xor
shll
aaa
push
lods
std
pop
lea
cmp
je
ja
sbb
int3
in
mov
mov
jae
ljmp
imul
mov
hlt
jg
lds
ret
stos
mov
aaa
divb
cs
sub
mov
or
jns
lods
fiaddl
mov
xor
dec
jl
lods
pusha
pop
aam
lds
stc
mov
into
int
ret
fwait
cmp
lcall
cmc
adc
mov
add
mov
frstor
sub
in
adc
cltd
je
dec
pop
es
jno
sub
jbe
scas
jo
inc
nop
cld
js
xor
jae
aas
lods
add
cmpsl
push
push
imul
jno
test
loopne
stos
sti
iret
fnstcw
insl
mov
cmp
adc
and
push
pop
xor
jmp
pop
ja
adc
dec
cli
ss
scas
sbb
aas
sub
inc
sbb
lock
xchg
rcl
imul
je
fidivrs
adc
orl
shll
imul
test
sbb
jne
push
pop
jo
test
push
or
xchg
cmpsb
mulb
jae
lods
xor
mov
cwtl
xchg
scas
push
stc
cmp
and
popa
stc
push
pop
push
fldenv
enter
add
ror
aam
xor
outsb
cmp
mov
mov
add
into
sbb
dec
adc
push
leave
sbb
pop
xor
mov
lea
ja
push
stc
sbb
jbe
dec
fxch
pop
jo
bsr
or
cs
insl
sub
jecxz
cltd
std
jo
out
fldpi
or
add
loope
jg
cs
mov
pop
jmp
fstps
pop
scas
mov
cltd
pop
or
call
dec
or
clc
inc
cmp
adc
outsb
je
insb
in
hlt
sbb
ret
repz
test
shlb
push
xchg
sbb
das
in
mov
push
sbb
in
test
pop
aam
jg
loop
jns
fcoml
adcb
and
mov
test
sbb
daa
push
mov
dec
push
cmp
fsub
adc
add
lcall
sahf
ffree
icebp
push
into
testb
dec
lret
jle
push
pop
pop
pop
and
push
jo
xlat
mov
adc
add
dec
test
xor
mov
jmp
sub
cwtl
es
sbb
push
dec
adc
rcrl
sbb
scas
mov
imul
or
xor
std
stc
mov
in
outsb
xchg
shl
push
and
popf
jmp
push
es
push
sub
packuswb
mov
subb
dec
sbb
gs
mov
test
inc
cmp
push
jo
jne
fs
fists
sbb
lea
jb
sbb
xchg
mov
push
sub
xor
adc
ja
add
fadds
jne
pop
cmp
cmp
push
int3
adc
mov
push
xor
dec
stos
mov
mov
call
sub
dec
out
fistpll
pop
cwtl
aaa
mov
jae
iret
test
xor
jle
add
pop
ds
je
cwtl
dec
mov
pusha
push
dec
sahf
xor
add
add
inc
pop
and
xchg
lret
sbb
mov
dec
adc
mov
sub
mov
adc
es
insb
ret
fdivrs
sbb
and
loope
hlt
or
jl
add
test
hlt
aam
jge
push
ds
and
imul
and
pop
mov
mov
daa
adc
mov
imul
xor
xor
push
mov
pop
push
push
adc
push
and
dec
lods
and
sbbl
pop
jae
rcrl
xchg
leave
sbb
stc
sbbb
je
and
hlt
lret
sbb
inc
lods
mov
mov
fisttps
jo
xchg
mov
int
adc
mov
cmp
mov
pop
xor
imul
add
mov
cmc
or
sbb
icebp
jo
in
cmpsb
pushf
adc
subb
dec
imul
sub
jbe
lods
cmp
mov
aaa
inc
inc
ja
lret
xchg
cmp
mov
sahf
outsl
jae
andb
and
jno
iret
mov
add
xchg
jg
adc
mov
xchg
imul
iret
mov
mov
or
cmpb
and
sub
mov
cmp
jae
fimuls
cmp
daa
jg
pusha
cmpsb
lds
mov
sahf
mov
imul
xchg
mov
pop
jg
out
pusha
mov
fwait
xor
nop
jae
ret
jae
insb
sub
divb
add
imul
mov
fwait
stos
push
test
pop
imul
mov
push
jecxz
in
cltd
test
sarl
push
cmp
imul
incl
sub
add
cmp
add
stc
les
fdivl
mov
insb
xchg
push
pop
xor
or
lret
dec
xor
movsl
aaa
or
jbe
jbe
xlat
and
inc
popa
cmpsl
pop
mov
sbb
pop
cmp
bound
xor
dec
stc
sbb
mov
mov
fnsave
and
stos
outsb
imul
dec
push
mov
test
jo
pop
iret
test
inc
fiaddl
mov
cltd
std
jbe
push
insb
jne
shr
rorb
das
mov
lods
xchg
loope
jmp
jns
ret
aam
sub
imul
dec
jae
mov
sub
pop
sub
in
mov
sahf
stc
or
xor
push
aaa
dec
inc
ffree
mov
xchg
and
or
inc
mov
pop
inc
test
es
xchg
mov
jae
pushl
fnsave
enter
sbb
in
mov
fld
jae
jl
jne
cmp
pop
and
sub
xchg
cmp
mov
sbb
js
pop
xchg
xchg
cmp
sbb
jecxz
xor
out
mov
mov
subb
cld
jmp
lret
lret
negb
fcoml
adc
lds
mov
push
dec
xor
jo
xor
int
pop
loop
adc
aas
stos
enterw
jb
mov
sbb
push
adc
xor
mov
push
or
push
mov
icebp
mov
cmp
xor
jbe
in
imul
xchg
mov
inc
fildll
lods
gs
shl
mov
clc
sub
or
jae
push
dec
bound
push
fwait
mov
pushl
adc
test
sbb
fbstp
mov
sbb
push
out
in
push
cwtl
mov
jae
sbb
jo
jecxz
push
add
cmc
cmp
cwtl
sarb
ds
aas
add
cmpsb
xchg
mov
mov
xchg
sub
fucomip
pop
ret
mov
or
adc
aad
fcoms
inc
mov
mov
jae
and
inc
dec
or
repz
lret
out
negl
repnz
aam
mov
cltd
fs
jns
imul
push
xchg
push
repz
movsl
cld
ja
fnsave
adc
out
cmp
push
filds
jbe
test
jb
es
and
rcll
jbe
int
push
sar
mov
xlat
jae
xor
mov
xor
jmp
jecxz
sbb
cmp
test
outsb
sbb
jle
adc
cmc
inc
push
ds
push
je
push
add
in
popf
repz
add
mov
into
xor
sub
and
sub
arpl
sub
lret
int
out
fs
rcl
dec
xor
cwtl
jns
outsb
cmp
movsl
rolb
xchg
ja
jp
or
femms
repz
aam
jno
and
movsb
scas
pop
sub
arpl
frstor
fidivl
xchg
data16
cli
je
ljmp
gs
notl
adc
lock
fsts
add
sub
adc
dec
into
sbb
arpl
mov
ja
in
shl
or
imul
xchg
loop
sbb
adc
add
mov
mov
and
clc
stos
and
ds
mov
fs
arpl
orb
mov
dec
mov
jle
adc
xchg
fisubl
jg
outsl
iret
iret
outsb
mov
mov
push
out
dec
push
sbb
or
mov
dec
mov
xchg
jno
arpl
shrl
adc
mov
idivb
mov
dec
sbb
jae
insb
loopne
int3
in
xchg
dec
jb
sti
pop
xorb
mov
cmp
push
mov
lcall
add
call
pop
pusha
test
push
xor
sbb
inc
pop
fdivr
pop
xchg
addr16
push
fidivs
je
aad
outsb
mov
movsl
sub
mov
adc
aaa
mov
jae
mov
sub
push
xchg
mov
cmp
xor
xchg
sbb
mov
jg
test
outsb
mov
test
pop
stos
xor
jl
in
int
xchg
xchg
icebp
outsb
sbb
mov
jae
inc
push
adc
in
pusha
shrb
mov
fld
mov
in
jmp
loopne
aas
mov
push
pop
stos
cltd
mov
sti
cld
hlt
adc
xchg
into
fsubs
lcall
movsb
sar
out
je
in
pop
inc
pusha
aam
and
mov
stos
stc
push
fimuls
or
mov
push
jb
pop
clc
insb
add
cmpsb
sbb
ss
mov
ret
jbe
jl
aad
dec
test
loop
xor
sbbb
sub
jns
js
aam
push
cmpsl
lret
push
aaa
mov
xlat
repnz
jo
xor
test
sub
xchg
loop
sub
inc
cmc
mov
inc
mov
sub
or
popa
mov
lea
mov
pusha
mov
xor
shll
cmp
out
inc
mov
pop
xchg
sub
enter
cmp
mov
mov
sbb
fiaddl
andb
cmp
and
mov
aaa
sahf
in
adc
jae
lahf
xlat
mov
push
pop
es
mov
out
sbb
sti
cli
in
jae
imul
xchg
adc
jns
xor
insb
fisubrs
pop
add
call
into
mov
jae
aaa
test
dec
testb
xchg
fs
mov
and
push
outsb
fdivrp
addb
pushf
adc
mov
fcoms
leave
adc
outsb
xchg
imul
cmp
mov
test
iret
xor
xchg
lods
movlps
xchg
adc
std
rcrb
sub
nop
jae
add
sub
adc
pushf
aaa
adc
iret
jb
mov
jo
jl
arpl
imul
gs
sbb
test
and
fcompl
push
daa
shrb
and
fisttps
repnz
dec
dec
add
imul
iret
out
push
push
ljmp
pcmpeqb
and
mov
ret
jmp
test
push
inc
push
cmp
jle
inc
lds
jno
rcrl
ja
popa
mov
scas
popa
jg
mov
cli
mov
aam
pop
ss
inc
and
imul
cmpsl
pop
dec
push
aas
sbb
mov
xchg
cmp
and
cmp
jne
inc
mov
cmpb
adc
std
push
sub
mov
add
imul
xor
mov
jne
cmpsl
repz
pop
daa
clc
out
hlt
stc
fsubr
lcall
repnz
int3
xor
cld
addr16
mov
icebp
rorb
xor
mov
sbb
pop
jbe
jne
add
and
push
mov
cmp
or
cs
imul
xor
push
add
aam
sub
cmp
sub
inc
add
test
pop
ljmp
dec
mov
into
imul
jle
xor
sahf
mov
mov
dec
shrb
cwtl
push
sub
scas
sbb
mov
jp
shlb
int
pop
in
xor
stc
mov
rcr
sbb
mov
and
outsb
pop
add
stos
repnz
sub
xchg
insb
cmp
or
ficoms
fnsave
mov
imul
xchg
outsl
int3
xorb
sub
mov
push
cmp
mov
fistpl
cmpsb
adc
fs
add
xchg
or
loope
adc
mov
data16
xor
push
xor
cmpb
mov
test
insb
int
insb
in
loop
mov
cmp
dec
mov
lahf
xor
arpl
dec
cmp
push
imul
pop
pop
mov
lret
adc
les
mov
jl
repz
insb
xor
dec
xchg
movsl
push
test
jle
inc
je
int
inc
sbb
iret
stos
sub
mov
lcall
aam
clc
adc
jbe
jae
shlb
pusha
or
fwait
mov
jb
xchg
jno
xchg
push
xchg
subl
xchg
xor
sub
add
pop
icebp
xchg
pop
xchg
loop
fs
or
lods
add
or
mov
jecxz
lret
dec
xchg
xor
xor
dec
push
or
test
cmpl
sub
dec
jns
movsl
pusha
mov
in
push
or
into
sbb
fiadds
mov
test
fs
out
push
imul
sub
popf
xchg
sbb
fidivrl
add
mov
inc
aaa
icebp
lahf
cmpb
pusha
jo
cmc
daa
sub
and
sub
dec
add
lea
pop
mov
loop
inc
xchg
repz
repnz
cmp
shll
scas
inc
pop
cmpsl
stos
mov
pushf
mov
ret
daa
pop
pop
popf
popa
xor
push
das
adc
lock
cmp
mov
hlt
addb
cli
cmp
xchg
jmp
jg
cmp
add
js
andb
xlat
jbe
insb
pop
mov
jno
and
pop
adc
es
ja
pop
js
cmp
mov
cmp
cltd
xor
imul
adc
in
jae
pusha
and
push
dec
in
aaa
mov
jnp
sub
mov
sbb
xor
xchg
add
sub
insl
ret
ss
push
xchg
inc
sbb
push
sbb
mov
bound
cmpsb
outsb
fidivrs
xchg
mov
imul
je
xchg
sbb
xchg
or
cmp
jbe
fimuls
test
pop
lods
nop
jb
jne
rcl
pushaw
push
pop
inc
or
xor
mov
repnz
pop
sbb
xchg
xchg
outsb
adc
int
loop
stos
pop
in
add
pop
mov
mov
movsb
fidivs
incl
pop
jl
and
sub
popw
mov
iret
gs
ljmp
int3
lods
xor
enter
jbe
pop
cmp
jno
xor
jns
inc
arpl
lret
dec
pop
push
xchg
cli
icebp
aam
jae
jp
cs
and
iret
fnstenv
sub
cld
adc
sti
lcall
adc
sbb
aam
idivb
xor
std
or
rolb
loopne
sub
pop
push
ja
pushf
xchg
lods
xor
aam
es
ret
push
mov
and
decl
inc
ret
sarl
ja
stos
adcl
dec
sbb
packsswb
das
daa
leave
jb
pop
mov
jge
mov
adc
jge
sbb
addb
dec
and
xchg
cmpl
je
inc
xor
jae
leave
sti
in
stos
xchg
push
and
addb
loope
sbbl
out
fstpt
cltd
ja
jno
in
xchg
repz
loop
mov
push
outsb
into
lods
jns
adc
mulb
mov
aaa
xor
rolb
mov
mov
sbb
cmp
xchg
sub
repz
jecxz
leave
inc
and
mov
mov
addr16
xor
mov
stos
mov
imull
pop
mov
lret
repz
ss
cmpsl
rclb
xor
int3
mov
inc
popf
dec
xlat
les
jo
out
out
shl
mov
fs
cmp
adc
fpatan
lea
stos
cltd
mov
mov
loope
repnz
repz
daa
pop
test
addr16
mov
xor
mov
xor
inc
adc
clc
movsb
jmp
jne
mov
ljmp
or
sbb
or
and
test
mov
out
fbld
xor
scas
jne
cmp
xchg
ja
pusha
fsts
jne
add
sbb
pusha
cmp
popa
mov
aaa
jb
jecxz
mov
sub
lock
dec
mov
getsec
xchg
rcrl
addr16
fisubrs
push
adc
add
movsb
cmp
xor
mov
push
push
pop
das
xchg
lret
mov
xlat
aaa
das
out
add
cmp
subl
push
icebp
retw
dec
jbe
jne
xchg
fistpll
jae
xlat
cmpsl
aaa
iret
das
fnstenv
pushl
or
xor
and
andb
mov
clc
bts
lock
out
cmp
fildl
and
push
sahf
or
sbb
adc
clc
push
loopne
repnz
and
xor
push
adc
std
lcall
les
in
rolb
mov
fs
adc
das
arpl
jp
jbe
xor
das
mov
mov
stos
xchg
sbb
push
xchg
and
mov
mov
jle
add
notl
clc
and
outsb
fnstsw
sbb
push
cwtl
dec
mov
test
pop
ss
add
jo
push
into
adc
sar
insl
lcall
xchg
clc
repz
cld
leave
jge
rclb
push
jo
aam
or
lods
cmp
shl
jbe
js
loope
call
sub
mov
aaa
adc
aad
shr
inc
xchg
pushf
mov
ss
sbb
sub
pop
js
fildll
sti
test
sbb
adc
fsts
lods
ja
inc
push
movsb
push
sub
mov
or
mov
fcomip
adc
loop,pn
sahf
std
fwait
sub
inc
sub
sub
mov
sbb
mov
dec
jne
repz
ss
pop
cs
mov
aam
jo
hlt
push
movsl
dec
push
mov
mov
or
add
push
repnz
enter
sub
das
stos
mov
das
lahf
mov
cwtl
sbb
xchg
add
mov
mov
arpl
add
sub
mov
xor
inc
jbe
test
lahf
lods
mov
mov
ljmp
mov
pop
jp
fnstsw
cs
push
ret
fisubrs
jne
gs
lods
add
fbstp
je
or
out
ja
js,pt
pop
and
test
xor
xlat
push
mov
outsb
mov
jo
movsb
push
pop
ljmp
aaa
pop
xchg
pusha
dec
adc
clc
mov
push
mov
xor
pop
cwtl
mov
rcrb
inc
imul
push
pop
adc
aaa
mov
jno
cmp
sbb
mov
mov
out
sbb
pop
xor
stos
into
mov
cmp
fs
jg
jg
or
ja
push
aam
add
pop
mov
or
push
lahf
sarb
mov
jge
pop
sbb
jle
mov
xlat
or
or
xor
lahf
sbb
cwtl
mov
xlat
mov
aaa
sub
xchg
mov
pop
adc
mov
mov
lods
repnz
sub
mov
cmp
mov
test
adc
push
jne
je
sarb
scas
xchg
mov
inc
pusha
adc
xor
sbb
addr16
ss
xor
xor
scas
out
push
jl
cmc
xchg
pop
js
addr16
das
mov
repnz
sahf
stos
pop
std
daa
sbb
jg
cmp
std
into
or
mov
xchg
scas
testb
mov
inc
mov
js
mov
jg
mov
cmp
add
and
ficompl
adc
shll
mov
dec
mov
jne
mov
aaa
lock
add
sub
pusha
xor
xchg
insb
push
push
scas
and
and
sub
or
inc
hlt
mov
mov
addb
inc
data16
pop
sub
fwait
jne
sub
pushf
mov
enter
adc
jns
and
outsb
jo
pop
js
adc
pop
sub
repnz
jmp
push
leave
fiaddl
repnz
xor
mov
in
push
clc
hlt
lock
leave
dec
pusha
jns
stos
jmp
das
inc
and
jnp
inc
fs
orl
xlat
inc
and
lcall
sub
pop
ror
xchg
pusha
mov
in
jbe
repz
push
jb
test
add
pop
daa
lahf
clc
pop
xor
rcrb
ds
jl
cmpl
pop
pop
sbb
leave
aaa
cwtl
mov
and
sub
stos
cs
jne
leave
or
ss
outsb
inc
lods
mov
cltd
sbb
aad
xchg
lock
mov
arpl
pop
xchg
iret
std
push
or
pop
lock
jne
shrl
repz
jae
jno
jmp
add
cmp
jecxz
adc
xor
sbb
js
xchg
mov
imul
xor
xlat
sub
mov
xchg
dec
sub
cmp
jnp
cmp
je
jne
rolb
pop
xchg
sub
insb
or
mov
mov
lahf
mov
mov
jbe
lret
and
pop
cmpsb
adc
xor
xchg
repz
pop
xor
fsts
mov
mov
sub
imul
and
jae
jno
adc
sbb
and
sbb
cmp
div
adc
pop
addr16
mov
inc
neg
mov
push
ss
pop
sbb
repz
xor
ss
cmp
and
adc
xor
jae
cld
repnz
idivl
add
shrb
jnp
and
push
enter
add
xor
push
mov
fstps
rcrb
mov
imulb
mov
jbe
inc
mov
clc
repnz
mov
adc
dec
jge
xchg
mov
push
xor
cltd
push
xor
test
pop
aad
mov
inc
xor
mov
inc
mov
dec
push
push
push
sbb
addb
adc
imul
fildl
sub
mov
data16
xor
cmp
mov
js
mov
fdiv
iret
mov
pop
cmp
adc
hlt
je
lods
pop
mov
dec
cmp
negb
dec
xor
adc
inc
xchg
inc
mov
add
dec
repnz
jb
cmp
sub
cmpsb
xor
mov
movsl
loopne
xor
push
push
negb
or
and
je
or
repnz
and
insb
cs
and
movsl
jp
sbb
jns
inc
addr16
lock
jo
addr16
imull
icebp
sbbb
dec
push
aaa
push
cmpsb
shlb
popa
jo
std
in
shlb
cs
fidivs
lock
cmp
fnstcw
out
jb
and
mov
jbe
push
push
add
push
adc
or
jae
jo
push
sbb
mov
cmp
imul
xchg
jno
das
adc
int
pop
sti
testl
arpl
mov
imul
mov
mov
cmc
push
pop
dec
mov
rol
mov
out
insb
sbb
aam
adc
stc
mov
sub
pushf
test
je
push
imul
clc
jns
repnz
mov
mov
inc
insb
hlt
sbbl
adc
fisubrs
es
cmp
mov
xor
mov
mov
daa
sbb
xchg
clc
popa
leave
dec
mov
add
imull
stos
in
mov
jbe
mov
or
sbb
inc
adc
jne
or
aas
inc
xor
adc
mov
jne
in
mov
jmp
mov
stos
xlat
std
imul
pop
out
push
insb
nop
or
xchg
adc
notl
sahf
ja,pn
inc
stos
jge
adc
add
sbb
sub
push
mov
aaa
pusha
testl
mov
jae
jge
adc
xor
or
cmp
mov
pop
movsb
negl
pop
imul
and
push
jbe
ds
daa
rclb
xor
add
jg
jbe
xchg
fnstenv
sbb
addl
sub
inc
push
cmpb
mov
push
cs
cmp
idivl
mov
cs
sbb
sahf
fsts
and
es
inc
es
xchg
lods
js
jmp
mov
cwtl
imul
mov
push
fisttps
pop
sti
ret
dec
push
addr16
cmp
repz
cmp
loop
out
mov
sbb
xor
xor
jae
cmpsb
lret
and
mov
sbb
inc
lods
xor
fbstp
jnp
mov
sub
jne
adc
xchg
out
jecxz
mov
out
push
adc
aam
mov
xlat
push
outsb
jae
jae
fistpl
push
inc
ja
jno
fnstenv
aam
mov
inc
ja
repz
push
pushf
in
ss
cs
data16
pop
and
sbb
in
rclb
mov
add
mov
fs
aas
out
repnz
mov
pop
pop
jae
mov
mov
adc
xor
cmc
ljmp
out
jmp
add
jp
push
and
pushf
sbb
stos
notb
lahf
xor
dec
or
pcmpeqd
js
push
mov
inc
xlat
adc
mov
push
shl
pop
mov
je
cmpsl
aas
xor
popf
cwtl
cmpsl
and
in
stc
add
movsb
jp
sbb
adc
aaa
cs
xchg
repz
xchg
jns
sti
adc
push
adc
mov
inc
and
jbe
xor
pop
test
and
dec
cmpsb
js
loopne
jne
outsb
aam
push
sub
pop
xchg
adc
in
insb
imul
ret
jge
es
lea
xlat
into
shll
scas
gs
clc
or
clc
jmp
mov
lret
pop
rcrb
mov
inc
inc
fs
pop
add
outsl
and
xchg
push
scas
cltd
sub
jb
stos
ja
lods
xor
repnz
nop
pop
push
idivb
leave
mov
push
iret
lds
push
add
mov
leave
push
mov
pop
mov
jo
adc
ja
or
jmp
test
subl
or
sbb
call
stos
rclb
xlat
jne
cli
dec
iret
mov
mov
xchg
and
pop
mov
sub
enter
out
adc
mov
push
sbb
iret
in
cmp
pop
inc
stc
stc
sub
push
sub
aaa
xor
dec
mov
or
jbe
cmpsb
fsubs
mov
push
clc
jle
fnstcw
insb
mov
mov
add
test
das
testb
cmp
lods
add
out
push
and
xor
repz
jle
sbb
das
xchg
cmp
jmp
xlat
fcom
fdivrl
jns
cwtl
pop
scas
adc
push
push
mov
push
bound
add
js
mov
notl
xlat
lea
test
inc
adc
shr
xor
sahf
xchg
xlat
scas
inc
push
iret
adc
je
scas
pop
scas
cwtl
dec
cli
cmp
or
dec
movd
xor
add
leave
inc
pop
push
rolb
mov
mov
xor
ljmp
cmp
jo
jae
push
sbb
imul
lcall
mov
jns
aaa
aas
mov
jne
jns
out
xor
pop
fcom
and
jno
stos
mov
repz
xchg
adc
loope
jg
aad
test
repnz
aaa
xor
cmp
leave
call
adc
pusha
push
mov
imul
mov
addr16
sub
mov
fmuls
stos
outsb
push
adc
stos
xor
or
push
mov
lret
idiv
negl
rcrl
ds
mov
sbb
stos
cmc
xor
and
mov
xchg
lcall
sub
ret
aaa
mov
jp
mov
repz
ja
sub
xor
sub
addr16
stos
enter
pusha
mov
shlb
jo
test
adc
xchg
int
mov
xlat
push
or
adc
sub
ja
and
xchg
sbb
xchg
imul
jno
fistps
mov
cmp
jb
insb
pop
stc
mov
xchg
pop
mov
shl
push
xor
sbb
inc
inc
sub
dec
sbb
aam
dec
test
xchg
lock
scas
push
js
sarb
jo
mov
daa
jge
pusha
cld
jmp
sub
pushf
gs
xlat
jne,pn
xchg
lea
es
hlt
mov
in
arpl
ror
mov
cwtl
cltd
pusha
xchg
outsb
pop
repz
mov
aam
cwtl
jo
and
repz
sub
je
pop
rorb
pop
inc
fs
mov
or
js
aaa
jo
nop
fildll
pop
sub
mov
push
push
outsb
out
dec
shrb
push
sbb
pop
js
adc
sbb
jo
cmpsl
xchg
shlb
or
mov
lock
ja
adc
test
dec
xlat
cmp
cmp
xor
lods
and
cli
xor
push
inc
mov
inc
push
cmp
xor
ljmp
pop
mov
and
and
imul
repz
xlat
js
dec
inc
nop
ss
loopne
xchg
clc
mov
pop
mov
out
sub
cs
mov
lock
outsl
fwait
out
cmp
test
xchg
or
adc
mov
push
jo
mov
mov
cmp
js
or
xor
jae
mov
dec
mov
inc
leave
xor
or
repz
adc
mov
push
cwtl
inc
or
pop
inc
pusha
push
xor
gs
sbb
xchg
dec
mov
repz
add
mov
and
jae
sub
mov
out
mov
jp
divl
leave
outsb
jo
adc
pop
outsb
cli
sbb
iret
js
jno
xchg
sub
in
out
adc
or
xor
and
mov
aad
jg
sub
mov
movsl
add
sub
mov
scas
dec
fnstsw
mov
cmp
pop
push
jb
mov
repnz
xlat
movsb
push
jge
cs
lods
jo
mov
cmpsl
hlt
mov
insl
or
inc
xchg
mov
loop
aam
sub
dec
push
mov
cmp
daa
xor
rcrl
jo
adc
roll
mov
cmc
dec
movsl
pop
add
popf
das
xor
cmp
sub
mov
adc
repnz
pop
pop
push
pop
inc
mov
push
mov
jl
cmp
mov
cs
lods
std
jecxz
xor
and
ljmp
push
outsb
in
add
xchg
and
flds
adc
bound
sub
jbe
and
aaa
aaa
adc
xlat
dec
sub
mov
into
mov
hlt
adc
adc
lds
jo
push
inc
addr16
popa
rolb
leave
or
cmp
and
xorb
mov
mov
mov
test
cmc
ss
out
mov
xor
div
sub
test
adc
leave
mov
jbe
adc
leave
lret
mov
addr16
ffreep
jl
jne
hlt
xor
mov
imul
push
dec
sbb
ljmp
notl
div
repnz
dec
scas
ljmp
shlb
mov
xchg
push
adc
and
jle
cmc
and
mov
jmp
outsb
mov
adc
loope
movsl
adc
push
aas
and
sub
mov
push
add
push
mov
xlat
xchg
pop
jbe
clc
mov
hlt
push
pop
ficoml
xchg
sbb
test
jge
bound
xor
jbe
adc
ja
adc
insl
push
shll
pop
pop
xchg
dec
lock
xor
inc
sbb
adc
repnz
pop
aam
std
jmp
daa
lods
rcr
xchg
and
mov
test
adc
xchg
mov
jae
fwait
dec
negl
inc
add
cmpsb
and
and
rorl
mov
inc
cmp
mov
inc
xchg
adc
clc
inc
mov
sbb
adc
pop
inc
stos
hlt
add
push
dec
leave
popa
rcl
mov
inc
mov
leave
iret
and
adc
xor
xchg
lods
sub
repz
pop
mov
dec
xor
jb
jmp
mov
daa
flds
lahf
jno
mov
sub
mov
or
cmpsl
adc
mov
mov
rcrb
xchg
aas
pop
cmp
idivl
mov
mov
jb
push
sbb
ja
movsb
js
pop
sbb
in
add
fnstenv
sub
push
jg
push
or
and
cmpsb
shll
xchg
cmp
jo
movsb
jbe
jge
xlat
ss
xlat
and
je
icebp
rcr
xor
lods
je
std
inc
push
aad
pop
fisubrs
adc
push
fisubrl
dec
fcomp
mov
jne
hlt
xchg
sub
xchg
jmp
mov
cmp
ret
jno
sub
cmp
shl
mov
out
cmp
mov
shl
sbb
or
push
sub
and
mov
inc
xchg
sub
mov
xlat
inc
push
mov
push
sub
pop
clc
mov
std
adc
jbe
aad
or
popa
dec
mov
lahf
add
leave
pop
negl
mov
push
push
pop
adc
pop
mov
nop
call
cltd
pusha
mov
fdivrp
out
stc
or
sbb
sbb
cmpsl
or
sub
push
jae
fsubrp
xor
mov
ret
loop
adc
jl
cs
pop
imul
roll
nop
js
fmul
push
imul
in
xor
jge
test
fisttpll
push
inc
jae
push
push
xor
push
out
rcrb
ss
iret
data16
and
inc
cmp
ret
ret
clc
fwait
test
jl
push
jmp
clc
notb
mov
call
mov
popl
cmc
fistl
sub
xchg
adc
sbb
jp
test
xchg
leave
imul
cwtl
add
pop
mov
jmp
jl
and
xor
pop
pop
xchg
pop
inc
add
fcmovne
fadd
rcrl
stc
fidivl
add
sbb
push
sbb
ja
and
andl
pop
lds
std
push
loope
cmp
shll
mov
hlt
ret
jle
jge
subb
add
hlt
mov
and
mov
mov
in
adc
mov
call
mov
adc
mov
dec
sbb
cmp
cmp
pop
mov
imul
jecxz
mov
sti
pop
fldcw
imul
pop
aam
mov
jl
and
push
dec
lods
pop
mov
out
repz
inc
jp
jns
cmpsb
xchg
jge
data16
jae
mov
jmp
push
leave
jae
sarb
movsb
notb
pop
jo
jo
ja
push
ret
scas
adc
insb
xchg
inc
add
das
pop
out
imul
out
mov
aaa
nop
in
lcall
cwtl
movl
out
ret
fs
ret
and
push
jmp
test
sbb
pop
xor
mov
cmc
jnp
push
xlat
xchg
cmp
aaa
mov
pop
inc
jae
xor
jle
mov
daa
out
mov
mov
sbb
jle
mov
repz
ja
test
in
int3
fldt
inc
addr16
mov
jl
pop
aaa
pop
mov
imul
jbe
imul
addr16
mov
inc
test
xorb
pop
adc
jae
mov
dec
jb
xchg
jge
cwtl
data16
cmp
stc
out
dec
lods
int
bound
mov
aaa
push
out
out
xor
inc
mov
aaa
fs
out
inc
xor
shlb
mov
push
ja
or
hlt
movsb
sub
test
cs
aaa
pop
sub
sahf
xchg
mov
xor
xchg
adc
cmp
pop
cs
pop
aaa
xchg
loopne
adc
jae
push
sub
inc
sbb
fisttps
jmp
cmp
lahf
cmp
lods
or
and
sbb
sub
mov
stos
unpckhps
lcall
xor
pop
aaa
adc
xchg
int
dec
daa
stc
inc
pop
into
sub
jnp
out
dec
cmc
addb
mov
pop
cmp
or
testl
hlt
mov
and
push
mov
cmp
lds
push
pop
pop
xchg
jge
movsl
popa
pop
ffree
dec
adc
dec
mov
stos
arpl
jp
mov
cmpsl
inc
mov
cmp
push
or
lods
sub
movsb
std
test
pushf
cmp
test
sbb
cltd
sub
jecxz
fwait
in
cmp
sub
xchg
in
jo
mov
sbb
rorb
aam
fwait
dec
cld
scas
in
push
ja
mov
and
mov
inc
dec
icebp
mov
dec
mov
xchg
jmp
and
in
add
nop
mov
hlt
mov
out
push
ja
add
lock
lods
stc
mov
pop
aaa
inc
push
sbb
fisubs
sbb
inc
shrd
lods
sbb
push
push
stos
cmc
cld
mov
pop
xlat
mov
test
inc
xor
sbb
and
mov
push
cld
cmp
add
lock
mov
js
aaa
ja
jle
push
push
lock
daa
push
ss
add
outsl
dec
sub
pop
imul
pop
inc
push
adc
mov
sbb
push
sbbl
lods
repnz
mov
xor
js
jae
jno
and
leave
xor
sbb
sbb
imul
sbb
or
adc
adc
push
test
loopne
and
jmp
and
shlb
xlat
push
dec
xor
outsl
shlb
fmull
mov
popf
push
jl
jmp
dec
push
push
push
insb
mov
cmp
add
outsl
jbe
dec
cmpsb
enter
sbb
mov
and
in
repz
xor
nop
pop
cs
jecxz
inc
pusha
lds
sub
fucomp
incb
std
xchg
mov
data16
cmc
bound
cmp
stos
dec
mov
pop
fistpl
data16
xlat
movsb
mov
jae
mov
sar
sub
in
or
jb
sbb
inc
andb
fidivs
dec
push
pushf
int
outsb
jne
jbe
rcrb
inc
insb
or
lods
push
mov
push
test
ret
push
pop
fcomp
cltd
movsb
shlb
loop
mov
test
jae
push
adc
inc
or
aad
mov
inc
inc
je
movsb
cmc
push
jl
pusha
mov
pop
sub
cmpsb
pop
jl
sbb
push
mov
imul
aam
jo
fists
jns
xor
push
add
adc
xlat
daa
je
jg
cmp
lcall
jle
loopne
leave
cmp
movsb
inc
cmp
adc
adc
negl
mov
jecxz
push
cltd
mov
dec
sub
mov
sbb
into
cmp
inc
imul
popf
pop
xor
pop
mov
mov
jg
sbb
xor
imul
popf
mov
dec
and
fsub
std
insl
sarl
imul
push
inc
in
pop
popa
mov
pusha
cs
add
lret
sbb
je
arpl
sbb
and
xor
shrb
sahf
cmp
jg
pop
xor
in
add
xchg
or
mov
xor
insb
loopne
bound
cmp
xor
cmpsb
mov
loopne
data16
ds
and
cltd
sti
subb
test
pop
es
outsl
clc
dec
pop
std
outsb
imul
cltd
push
pop
sbb
sbb
add
and
jae
fdivrp
test
iret
inc
sti
or
ret
or
imul
cmp
inc
mov
xor
jmp
adc
xor
jne
or
leave
push
fs
aam
pusha
lcall
xchg
aaa
lods
int3
inc
cwtl
jmp
and
mov
push
out
mov
adcl
and
push
andl
cltd
call
mov
in
lods
adc
or
pop
dec
dec
push
xor
out
cmpsl
es
filds
dec
in
or
jae
push
sbb
pop
xlat
adc
sub
icebp
mov
or
das
push
jae
jmp
sub
lret
xchg
orl
xor
add
jno
mov
sub
lret
xor
into
or
mov
aam
add
xorl
and
xor
scas
aam
lds
sti
inc
jb
mov
mov
mov
inc
xchg
aaa
mov
mov
xchg
push
scas
jecxz
cwtl
outsl
sub
sbb
pop
lahf
aaa
sub
insl
fistl
int3
pop
fcomip
jb
clc
or
scas
pcmpgtw
pop
in
data16
ret
pop
add
xorb
mov
fisubrl
push
jne
insb
xchg
inc
dec
push
mov
js
sub
insb
cltd
inc
jbe
bound
sub
jo
pushl
mov
xor
scas
imul
int3
pop
test
movsb
cmp
pushf
pusha
jle
push
sbb
popf
mov
xchg
lret
mov
loopne
push
cmp
pop
mov
xchg
push
dec
addps
sarb
jb
lods
into
out
imul
xchg
fcomps
imul
in
mov
lret
neg
packssdw
das
and
lds
bound
jae
mov
sbb
rcr
adc
sub
in
mov
push
cmpl
cmp
in
pop
mov
cld
xchg
imul
fsubr
dec
mov
call
test
stc
dec
sbb
cmp
ljmp
pop
shlb
mov
fisubs
cli
cmp
daa
dec
fisubl
fisttpl
jnp
jp
sbb
and
cmp
cwtl
cltd
pushf
jge
sub
aam
xchg
jecxz
adc
jbe
ja
mov
jbe
mov
sbb
iret
lds
push
jo
sbb
lods
addr16
jle
out
test
adc
jl
popa
jg
mov
mov
adc
jle
outsl
xlat
icebp
sbb
xchg
mov
in
cmp
cmc
push
lods
fstpt
xor
insb
mov
xchg
add
shl
std
lods
call
sub
sub
cmp
xor
cmc
les
pop
cltd
mov
je
mov
das
popa
jl
pusha
add
sub
lahf
andl
cmc
or
enter
push
fs
mov
xchg
xor
sbb
clc
aaa
bound
ffreep
fmul
push
scas
sbbb
imul
cltd
test
pop
sub
loope
push
iret
jb
fs
add
addl
js
xchg
sub
cmp
data16
push
cmpsb
add
jae
loop
test
popf
or
dec
js
jno
imul
adc
xor
test
pusha
sub
push
insl
and
cltd
inc
and
ret
mov
sub
pop
xchg
jo
loop
inc
pop
and
inc
xchg
popa
inc
imul
movsl
or
std
ds
loope
andb
lods
inc
shrl
and
inc
adc
mov
mov
mov
pop
ds
and
rolb
loope
mov
mov
add
mov
pop
leave
rcrb
aam
das
jae,pn
push
sbb
xchg
lret
and
and
popa
stos
mov
adc
mov
pop
stc
sbbb
or
ljmp
jne
or
movsb
js
pop
loopne
inc
outsl
lds
and
stos
ds
push
repz
dec
jnp
adc
clc
jmp
shll
imul
fstpt
sub
adc
and
add
lock
mov
lcall
test
insb
andb
inc
aaa
adc
ja
and
inc
in
scas
jg
mov
aam
and
inc
mov
arpl
adc
cld
sub
cltd
loopne
inc
int
cs
sub
cmpsl
fcomps
repnz
jbe
jno
sbb
fldl
stc
call
jecxz
hlt
std
dec
enter
jae
cltd
mov
arpl
add
cmp
test
inc
mov
cmp
movsl
rcrl
xor
and
sub
pusha
cli
add
gs
outsl
lds
jns
xchg
mov
rcl
sub
imulb
int
adc
fs
mov
adc
push
push
pop
mov
ja
cwtl
adc
sbb
dec
cmpsl
je,pn
jmp
and
push
cmpb
xchg
jle
sarb
cmc
shrb
xor
jmp
das
pop
pop
lds
lret
fcoml
das
repz
frstor
sbb
fwait
adc
orb
bound
sub
imul
data16
jae
pop
aaa
test
scas
add
pop
xchg
ss
ja
and
imul
xchg
ljmp
mov
xor
pcmpgtd
js
add
cli
fstpt
lds
sub
cmc
das
orb
popf
leave
mov
xchg
repz
xlat
test
pop
push
push
in
cmp
xchg
mov
inc
or
insl
rolb
ret
pushf
dec
stc
shrb
outsl
xor
ja
sub
insl
orl
hlt
pop
mov
popf
push
adc
int3
mov
xorb
jb
sbb
cmc
sahf
mov
dec
leave
pushf
ret
sbb
movsb
les
iret
xchg
out
mov
insb
mov
repnz
out
push
cld
dec
jno
inc
sub
mov
jo
dec
sub
adc
or
add
out
out
into
or
sub
push
mov
cmp
mov
add
sahf
lea
mov
sub
mov
dec
sub
cltd
insb
xchg
aaa
cmp
mov
jae
xor
pop
xor
mov
loope
jns
dec
dec
xchg
pop
cmp
mov
in
jno
andb
test
jno
adc
loope
and
add
or
pop
inc
push
sub
imul
adc
mov
pop
jge
add
movsb
fdivs
xchg
sahf
push
mov
jle
ja
sub
jmp
add
sub
xchg
pop
fldt
cld
sarl
pop
adc
icebp
ror
sub
insl
sub
mov
jb
jns
test
sbb
add
push
nop
and
push
mov
in
aad
scas
or
mov
mov
or
fidivs
xlat
push
dec
lods
sub
subl
jo
sbb
cltd
bound
pop
js
in
cwtl
movsb
mov
into
in
sbb
xor
dec
mov
sbb
or
xchg
dec
lcall
lods
jp
jae
js
stos
lret
rorb
das
mov
mov
lret
lcall
andb
loopne
jns
sti
lcall
cmp
xchg
xor
sub
pop
cmp
aam
inc
mov
xor
cmpsl
push
aaa
mov
imul
adc
cs
fildl
das
sbb
lods
add
in
out
ds
jb
push
jmp
add
lock
jmp
cmp
and
imul
jge
mov
inc
js
dec
adc
cwtl
pop
orl
enter
test
nop
push
jp
and
inc
jno
imulb
and
lahf
mov
jne
cmp
movsb
cmp
daa
push
sbb
xor
adc
fwait
adc
stos
aaa
adc
cmp
sub
scas
adc
jae
cmp
lret
mov
je
addr16
sbb
adc
xlat
imul
enter
cmp
aam
dec
mov
pop
cmp
mov
jne
imul
cld
mov
clc
imul
jno
or
hlt
jge
pop
xchg
jo
jp
insb
addr16
in
cwtl
out
inc
add
push
roll
call
mov
mov
aas
jno
pushf
lea
sub
lahf
int3
xchg
sub
loop
fsubl
add
outsb
test
fsubrs
jecxz
insl
push
cmp
enter
jne
ss
xor
insb
adc
mov
pop
cli
sub
mov
mov
jmp
cmp
outsw
sahf
movsb
mov
pusha
mov
sbb
push
inc
lods
xor
nop
jo
dec
data16
mov
pusha
sbb
repz
ds
jge
ljmp
imulb
pop
jo
cmp
mov
mov
cmp
loop
sub
hlt
lcall
ljmp
jne
int3
mov
sahf
in
lock
cmp
inc
scas
aam
stc
icebp
imul
rcr
test
jl
xor
test
clc
jae
lahf
out
inc
arpl
xchg
add
orb
mov
jge
cmpsb
in
stc
inc
dec
adc
cmpsl
sub
out
cwtl
cwtl
aaa
xchg
inc
mov
sbb
inc
insb
sub
jle
int
leave
mov
popf
lcall
pop
shr
xor
sub
xor
clc
sub
loop
aaa
adc
aaa
mov
loop
aad
scas
cmp
cmc
ja
int
into
xchg
xchg
mov
mov
push
cli
push
ljmp
cmp
or
mov
adc
inc
pop
mov
mov
jae
sub
and
mov
mov
push
xchg
and
sbb
mov
into
add
cmp
aaa
in
pop
and
mov
jno
pop
sbb
add
in
lds
in
xor
mov
sahf
loopw
pusha
push
add
add
lea
add
imul
xchg
xor
out
add
sub
dec
jo
std
dec
push
push
cmp
fiaddl
mov
and
xor
add
stc
pop
mov
negl
sahf
xchg
cs
sbb
mov
cmc
cmc
aad
rcr
call
mov
ret
mov
sahf
pop
std
fstpt
fwait
or
je
pop
jge
pushw
fisttps
imul
dec
adc
daa
dec
int3
sub
test
in
inc
adcb
stos
and
loop
push
push
movsb
cmp
fsubl
mov
imul
adc
mov
call
mov
ja
cmp
test
lcall
inc
mov
pop
iret
pop
ljmp
xchg
dec
push
xchg
dec
or
nop
push
frstor
inc
outsb
pop
mov
xchg
jno
test
insb
cmp
mov
iret
mov
sub
xor
mov
xor
jae
sti
mov
mov
das
jp
add
aad
imul
out
mov
add
sbbl
movb
cmpsl
aaa
mov
mov
scas
jmp
lds
ja
push
repz
daa
xor
or
xlat
nop
push
mov
pop
push
outsb
jp
test
dec
cld
je
jne
mov
scas
lret
inc
xchg
jb
dec
xchg
xchg
and
xchg
and
jge
insl
fldl
mov
inc
sbb
movsb
icebp
jae
or
push
xor
aad
mov
jae
add
lret
leave
push
imul
jo
pop
mov
xchg
sbb
jmp
mov
idiv
lock
jae
test
loop
int
pop
je
fldl
mov
lock
cltd
cmc
cmc
and
aaa
dec
cmp
inc
jne
lds
movsb
inc
mov
mov
jne
xorl
sbb
cli
xchg
adc
int3
imul
stos
fldl
push
std
add
test
es
mov
ffreep
cltd
cmp
mov
or
mov
adc
imul
aam
cmp
adc
pop
in
xchg
je
or
fcmove
scas
mov
ja
ljmp
sub
es
xor
cmpsb
dec
pop
inc
sbb
popa
cmc
jle
ja
pushf
filds
outsb
fsubrl
or
iret
mov
imul
aam
ja
adc
out
jb
int
das
xchg
inc
mov
mov
mov
data16
stc
push
xor
je
test
mov
cmp
xchg
sbb
clc
cmpsb
or
push
test
jnp
push
std
inc
pop
cli
mov
dec
test
push
or
js
jae
sahf
pop
jg
out
jae
xor
inc
add
mov
test
push
pop
fmull
repnz
mov
cmp
xlat
and
xchg
outsb
fcomps
xchg
mov
testb
mov
cmp
and
data16
ja
sbb
into
jl
movsb
mov
and
imul
cmpsb
push
cmp
movsb
or
sub
fidivs
sub
pop
cmp
mov
inc
cmp
aaa
mov
cwtl
jae
aas
and
push
mov
cmp
mov
data16
icebp
sbb
pusha
jno
aas
dec
jae
mov
dec
dec
xor
rcrl
adc
jle
inc
mov
and
jb
mov
adc
arpl
sub
sub
aaa
jae
lahf
std
sub
ja
and
xchg
das
loop
add
jl
jo
mov
movsl
and
rcrl
sub
push
inc
pop
jp
cmp
ja
xor
fucom
jae
ret
imul
cmpsb
inc
mov
pop
out
test
mov
pop
pop
ret
jmp
push
sbb
test
add
cltd
loope
fcoms
pop
out
pop
dec
dec
jle
xchg
adc
xchg
movsl
xor
gs
sahf
shll
sub
lods
mov
movsb
jne
shrl
adc
gs
add
js
push
mov
sahf
test
mov
mov
xor
ja
inc
outsb
and
and
pop
push
or
aam
es
add
jae
and
push
pop
xor
cmp
movsb
jnp
mulb
lret
inc
cmpsl
es
lock
imul
inc
or
mov
clc
mov
out
cltd
adcb
rcr
fdivl
pop
jne
adcb
lds
imul
mov
inc
movsl
lock
adc
cmp
mov
jmp
push
xorb
mov
pop
aaa
orb
aas
jne
je
jmp
xchg
stos
in
inc
test
std
outsb
insl
cmc
xchg
popa
jle
popf
add
repz
sbb
inc
xchg
ret
cmp
ja
out
mov
int3
mov
or
aaa
mov
and
sbb
dec
je
mov
lods
sbb
arpl
int
jbe
insb
cltd
adc
xor
cmp
mov
bswap
push
push
sbb
jae
or
pushf
scas
sub
mov
xorb
or
cmp
mov
inc
jae
xor
dec
lods
in
fwait
test
fwait
loopne
bound
mov
mov
xor
int3
imul
leave
mov
push
xor
or
pop
push
scas
jbe
sbb
xor
jmp
add
fidivrs
jae
inc
xor
or
imul
mov
add
push
stos
nop
xchg
mov
or
mov
dec
or
xor
addr16
es
xchg
ret
inc
adc
data16
xor
popa
divb
pop
add
and
inc
pop
lret
repnz
push
jne
test
xorl
cmp
add
sub
bound
pop
inc
jmp
lock
push
pop
mov
dec
fsubl
mov
mov
pop
test
xorl
xor
sub
ss
aaa
sti
push
jmp
jae
insb
push
mov
int
sbb
fdivrl
mov
fisubrs
andl
xchg
xor
fcompl
xor
mov
xchg
xor
inc
mov
jp
insl
sub
mov
frstor
mov
pop
mov
pop
add
push
xorb
push
cmpb
js
aas
cmp
cmp
test
mov
adc
lret
mov
fpatan
and
lret
popf
cld
jns
adc
movsl
sbb
mov
mov
test
jo
xor
xchg
push
jle
inc
aas
push
mov
push
cld
xchg
add
xchg
mov
jmp
pop
xchg
xlat
mov
test
add
ret
xchg
fimuls
fdivs
jae,pt
sub
xor
fildl
mov
adc
mov
xchg
sbb
popa
push
je
sbbb
aas
xchg
jmp
xor
xchg
jae
sub
adc
lcall
in
cs
sub
lret
movsl
jns
out
inc
pushf
cwtl
pop
test
and
and
insb
or
stc
mov
popa
mov
call
or
sti
sbb
nop
test
pop
add
mov
fs
cld
xor
mov
movsl
mov
repz
call
imul
aaa
sbb
call
cmp
and
mov
out
lds
imul
adc
int
ss
out
mov
push
inc
cmp
xchg
outsb
xchg
fnsave
in
xchg
test
hlt
pop
inc
shrb
lds
fistpl
push
and
icebp
xchg
jle
mov
xchg
imul
ja
mov
div
imul
sbb
jge
cmp
hlt
and
mov
andl
cmpb
lds
and
iret
leave
sbb
mov
inc
adcb
sub
data16
and
mov
int3
test
sub
hlt
fwait
adc
push
mov
mov
jle
ja
popf
iret
cmc
hlt
cmp
push
test
mov
jbe,pt
ljmp
pusha
mov
ja
lahf
mov
int3
xchg
dec
insb
out
fistpll
mov
loopne
mov
push
into
loop
test
pop
sub
aaa
mov
xlat
cmpsl
hlt
mov
cmp
je
cmpsb
cmp
mov
xchg
in
xchg
jbe
mov
sub
mov
je
lahf
data16
push
and
ret
ja
add
cmpsb
inc
xor
pop
gs
fdivl
pushf
pop
dec
iret
cmc
pop
and
fwait
mov
mov
xchg
xchg
imul
test
neg
out
insb
mov
rclb
cs
lea
popf
test
xchg
push
ljmp
sub
icebp
sbb
outsl
push
add
test
bound
in
mov
and
push
repz
mov
ss
adc
jbe
sbb
mov
xor
std
push
loopne
fcomi
divb
mov
pop
sbb
and
imul
adc
jp
insl
mov
cmp
jne
jb
lcall
rcll
ret
ja
xor
add
mov
xchg
sub
inc
aam
and
cld
mov
loope
mov
fwait
imul
cmp
xor
popa
jo
cltd
imul
mov
int
aam
jbe
scas
dec
les
dec
in
xchg
loop
dec
into
icebp
cmpsl
push
dec
and
adc
shll
jmp
inc
hlt
pop
ja
mov
mov
adc
adc
jg
lock
push
je
xchg
cmpsb
xor
xor
adc
ret
cmc
pop
aad
in
adc
sbb
lret
jl
inc
cli
adc
sub
push
mov
hlt
mov
int
push
imul
jbe
mov
in
cmp
insb
jge
push
or
push
mov
sub
test
cld
sub
push
lea
movzbl
sub
mov
cmpl
jae
xchg
hlt
cmc
popa
insb
jne
test
fs
and
fldenv
call
insb
shlb
adc
rcrl
jae
movsb
xor
jne
mov
jae
ljmp
sbb
mov
jo
or
ljmp
xchg
adc
mov
sub
repnz
or
popf
push
ds
outsl
sub
sar
xchg
sub
aas
fcomi
hlt
inc
test
xchg
pushf
cli
jecxz
adc
mov
mov
sub
xor
jle
into
insb
inc
add
lea
or
jl
dec
pop
insb
sti
xchg
hlt
cld
scas
sbb
ja
mov
add
outsb
push
and
sahf
mov
adc
and
and
pop
push
rcrb
scas
xor
xchg
imul
bound
aaa
mov
aaa
vmptrld
mov
lods
aaa
jo
sbb
cld
cmp
sbb
shr
aad
xor
jno
iret
insb
sub
arpl
aam
outsb
adc
shll
rcr
movsb
sub
lea
mov
adc
dec
sbb
sub
cltd
popf
cmp
fstpt
xchg
mov
xchg
mov
pusha
and
lcall
dec
and
and
mov
fsubrs
jge
mov
mov
xchg
push
imul
push
ljmp
stc
rclb
jbe
xchg
aaa
jne
loop
jl
xchg
add
jle
push
xchg
sbb
mov
insb
jae
inc
mov
not
xchg
mov
mov
push
and
xchg
pusha
cmpsl
mov
stc
jns
xlat
mov
sbb
pop
inc
int3
fwait
icebp
fnsave
je
rcrl
outsb
pop
pop
les
imul
lods
clc
jb
mov
mov
fndisi(8087
and
popa
cld
xlat
jne
out
lea
sub
mov
filds
or
xor
aad
negb
xor
jo
mov
add
in
add
push
adc
adc
fstpl
jne
cmp
ja
add
sbb
inc
push
adc
adc
sbb
jbe
sub
add
push
fmuls
es
stos
pop
test
aad
arpl
ret
hlt
ja
mov
fcmovne
fdivl
mov
in
push
hlt
xor
adc
mov
repz
hlt
inc
lock
popa
xor
out
xchg
rcll
pop
jae
xor
add
cmp
push
icebp
jne
mov
pop
mov
mov
cmpsb
xor
scas
jns
sub
mov
mov
andl
xchg
popf
cs
jmp
inc
and
push
ret
iret
and
pop
out
mov
pop
adc
sub
rorl
notb
add
test
cmpsb
push
jb
test
cmp
and
mov
cmc
xchg
int
loopne
adc
push
sub
sahf
mov
dec
pop
and
pushf
int3
leave
mov
cmpl
movl
movsb
sarl
push
cmpsb
arpl
sbb
arpl
sbb
push
movsl
loope
test
aaa
imul
or
jge
jmp
and
push
pop
pop
mov
adc
stc
ficompl
adcl
imul
int3
pop
mov
rcrb
movsb
or
loope
dec
cmp
jnp
fistl
xor
mov
jbe
loope
pusha
pushf
lods
jg
dec
xchg
rdpmc
inc
fsubr
mov
adc
pop
jmp
repz
push
stc
arpl
and
mov
xor
fisubs
sub
out
inc
iret
adc
mov
pop
scas
out
std
xchg
mov
push
push
sub
xchg
mov
jb
add
in
mov
or
jns
int
mov
outsb
jbe
mov
mov
or
leave
rolb
rep
mov
dec
fsubs
and
jne
jns
arpl
in
sub
sbb
xor
jmp
sbb
xchg
dec
js
xor
jb
lock
pusha
repnz
jbe
fstpl
mov
fsubs
imul
dec
cmp
jl
rcrl
cmp
icebp
pop
loope
sbb
fldt
gs
std
sahf
jns
mov
pop
clc
push
sub
push
sbb
out
xor
fdivrp
repz
jae
sbb
pop
push
ja
scas
sahf
mov
js
add
mov
push
jmp
je
std
dec
test
filds
and
insb
outsl
iret
lods
xchg
mov
pop
fwait
ret
jecxz
add
insb
jbe
sbb
std
add
outsb
arpl
push
mov
push
lea
ss
xor
xorb
and
js
sahf
mov
xor
mov
add
scas
fwait
adc
insb
scas
sub
xchg
add
inc
aaa
jo
pop
movsl
es
sbb
xchg
in
scas
lock
mov
xor
clc
stos
cwtl
or
iret
adc
and
call
push
ret
mov
cmp
or
push
xor
add
fcomps
out
xor
ja
push
push
and
cs
add
lret
pop
ss
adc
xor
ja
pop
inc
jbe
mov
pop
and
loop
pop
mov
jbe
jns
push
jno
in
inc
clc
or
lret
push
inc
xchg
lret
mov
int
jmp
aaa
cmp
and
cs
popa
mov
ret
rcl
popf
mov
std
shll
mov
mov
sbb
and
cmpsl
mov
mov
out
adc
push
xor
pop
or
mov
popa
sbb
mov
jo
outsb
mov
lret
aad
ss
int
add
ret
loopne
or
imul
pavgb
andl
mov
jecxz
imul
stos
pop
mov
sti
sarb
mov
xchg
pop
sub
cmc
cmpsl
rcr
out
test
fimull
imul
sub
ja
and
jno
lods
imul
fcompl
mov
pop
sub
sahf
gs
push
or
mov
pop
sub
cli
mov
xor
pop
ficoms
jae
fwait
dec
cmp
sbb
pop
stos
dec
mov
js
sbb
xchg
xchg
inc
dec
inc
in
mov
xor
jo
rcrl
jle
mov
sub
inc
jae
push
fdivp
mov
inc
mov
jg
and
jae
cli
jo
imul
jle
test
das
cs
jl
test
test
das
xor
mov
mov
inc
sub
xorb
das
adc
mov
fwait
mov
adc
cs
call
cmp
aas
adc
sub
push
pop
data16
data16
jle
and
fwait
js
push
cmpsl
jge
pop
cli
frstor
fdivp
testb
and
imul
mov
stos
mov
inc
jae
sub
jne
cmpsl
mov
jns
mov
rcrl
icebp
ret
stos
or
fsub
xchg
inc
test
mov
subb
jno
lret
out
jae
sbb
xor
xchg
xchg
xchg
and
dec
fildll
inc
jbe
sarl
inc
icebp
outsb
cwtl
out
fisubl
movsb
test
push
lret
cmp
rolb
sbb
inc
xorl
pop
cs
jo
sbb
imul
icebp
ja
fwait
mul
js
int3
add
aam
mov
outsl
push
pop
jno
ret
add
push
mov
insl
stos
or
loop
sbb
xor
js
adc
xchg
mov
xlat
mov
adc
in
xor
dec
adc
jne
push
inc
xor
mov
test
sarl
fistpl
hlt
or
lods
in
fstps
add
mov
aaa
inc
and
push
lds
cli
std
into
icebp
out
push
filds
or
sti
mov
jae
stos
xor
fildll
aaa
sahf
ss
iret
rcrb
divb
icebp
sub
mov
or
xchg
xlat
xor
push
xchg
cmp
imul
push
fdivl
dec
fwait
cld
sub
into
pop
push
ret
cmp
mov
int
xchg
insb
cmp
out
es
movsb
ljmp
daa
jae
iret
pusha
loopne
stc
imul
adc
sub
cmp
and
adc
adc
adc
stos
pusha
mov
push
sbb
xor
and
mov
das
out
mov
es
test
xor
dec
in
dec
dec
sbb
xchg
je
call
hlt
adcl
movsb
je
rcl
jne
ja
push
cmc
cmp
data16
add
into
test
rcll
push
pusha
xor
add
enter
sub
aas
xor
and
and
adc
out
cmc
imul
xchg
xor
or
scas
xchg
sbb
sbb
mov
in
out
mov
jl
aad
stos
imul
sub
cs
cmp
cmp
enter
mov
pop
pop
lods
cli
or
pop
dec
pusha
movsb
mov
and
add
fldcw
leave
xchg
outsl
insb
out
push
mov
sbb
pop
pop
sub
int
dec
push
dec
les
imull
sahf
pop
cmpsb
ret
xor
jns
ja
movsb
dec
pusha
lea
or
or
cmp
xchg
add
dec
inc
xchg
aad
arpl
sbb
roll
in
fstpt
iret
lea
pusha
in
cmp
movsb
or
scas
cmp
in
sahf
les
popa
lahf
daa
cmp
inc
in
testl
pop
int3
sub
mov
in
iret
push
jp
ret
jo
imul
cmp
pop
cwtl
jp
add
pop
dec
sub
and
movsb
mov
rcll
xor
add
pop
stos
jl
mov
insl
pushf
and
xor
pop
cmp
sub
or
icebp
lods
imul
negl
cli
call
push
cmp
lds
insb
fisubl
dec
hlt
jp
gs
add
bound
mov
movsl
fsubs
sub
in
sbb
ljmp
leave
out
xlat
xchg
lea
sbb
in
imul
dec
dec
sbb
fwait
sbb
push
mov
sahf
or
ja
push
test
jno
jae
adc
jp
xchg
mov
lea
fnstenv
mov
in
mov
and
or
cmpsb
pop
xor
xor
xchg
push
into
push
incb
mov
iret
scas
sub
cmp
cmc
dec
pop
data16
add
xchg
pop
xor
mov
sarb
popl
jns
hlt
mov
and
inc
jecxz
inc
xchg
loopne
aam
daa
sbb
adc
aaa
shrb
in
sub
ja
cmpsl
arpl
xor
inc
dec
sbb
mull
cltd
fucomip
sahf
std
mov
in
loop
dec
shll
es
mov
jl
pop
pop
jne
jae
jg
push
push
cwtl
out
lods
inc
cmp
out
lcall
cmp
sahf
cmpsl
call
xchg
cmp
jmp
mov
int
loopne
aaa
pop
mov
test
xchg
jmp
add
ret
mov
scas
sub
outsb
lret
nop
les
jae
pop
add
rcrl
test
cli
test
and
adc
xchg
inc
scas
cltd
pop
adc
pop
dec
lret
cmp
xchg
push
pop
mov
pop
lds
cmp
sbb
add
adcb
xorl
je
sbb
andb
cmpsb
rcll
jo
sub
push
pop
dec
aam
inc
xor
jecxz
enter
imul
sbb
sbb
js
imul
sahf
es
xchg
imul
adc
ds
adc
sahf
pushf
jb
dec
out
xchg
cmpsl
pop
jo
out
bound
shll
ds
cmpsb
test
fistps
or
cltd
bound
lcall
adc
fwait
or
into
fldenv
cld
push
pop
push
dec
test
xor
in
stos
push
jae
mov
xor
mov
mov
enter
out
pop
hlt
repz
and
sub
cmp
mov
xorb
sbb
into
jae
push
adc
dec
iret
lds
cmpsl
orb
aad
mov
adc
iretw
scas
stos
mov
xchg
fldl
or
dec
gs
jle
xchg
lods
imul
cmpsb
fbstp
push
pop
int3
mov
out
push
cltd
fmuls
mov
gs
scas
scas
cmp
push
aam
jl
cltd
push
jae
mov
mov
cld
das
repz
jp
stos
adc
push
in
or
cld
pop
push
mov
xchg
decl
pop
mov
ja
push
adc
stos
xor
pop
inc
mov
das
dec
scas
lea
mov
add
outsb
mov
sub
cwtl
lret
out
popf
dec
mov
mov
sbb
icebp
cs
inc
scas
xchg
je
popa
aad
lcall
pop
gs
xor
outsl
inc
inc
jle
pop
insb
pusha
push
xor
adc
mov
int
xor
rolb
aad
test
stc
int3
pcmpeqd
lods
cmp
ficoml
xchg
movsb
jge
fimull
ljmp
je
mov
icebp
xchg
test
imul
arpl
popf
into
inc
adc
pmaddwd
icebp
out
ljmp
sub
mov
cltd
dec
ss
imul
out
dec
fnsave
scas
clc
aad
outsb
cmpsl
push
fimuls
xchg
outsb
scas
hlt
cmp
aam
sbb
add
mov
ja
scas
and
movsb
fimull
mov
pop
xchg
clc
ja
shr
mov
pop
outsl
lret
mov
std
mov
cmp
xor
mov
repnz
cmpsl
subb
out
jae
push
aaa
xor
adc
jns
das
gs
jb
mov
mov
jb
pop
leave
inc
cmpsl
ja
stos
or
mov
jl
sbb
mov
mov
adc
pop
push
in
cmp
test
mov
sub
bound
push
imull
jl
and
xchg
xor
clc
cmp
push
imul
fdivl
and
pop
dec
cmp
fisubrs
xor
popf
int
in
cltd
xor
and
inc
mov
pop
neg
sahf
pop
jle
cmp
lds
test
xor
enter
cmc
cmp
insl
lock
and
xor
pop
mov
shll
dec
inc
push
jb
and
pusha
sbb
icebp
dec
aam
mov
mov
inc
inc
mov
ja
jo
sar
ret
or
imul
and
push
les
add
cltd
aad
ja
or
jbe
loop
scas
pop
cwtl
and
ss
jae
outsl
mov
push
call
js,pt
adc
out
gs
fimuls
xchg
xchg
pop
or
jmp
pop
test
push
fwait
cmpsb
adc
aad
jo
push
push
out
xor
pop
push
imul
int
movsl
aaa
lock
inc
fdivrl
mov
cmp
in
and
mov
push
gs
and
rorl
mov
cwtl
xchg
push
testl
out
out
das
push
aaa
inc
mov
js
cmp
pop
jae
jge
dec
cmp
dec
jl
std
dec
aam
jmp
ja
rcll
rol
outsl
cmpsb
stos
adc
lret
scas
mov
jns
popf
lds
idivb
jne
sahf
adc
mov
aam
fsubs
push
mov
xchg
hlt
je
bound
sub
mov
dec
scas
xor
sti
mov
lods
pop
adc
scas
push
push
sbb
out
and
xchg
mov
ja
pop
faddp
mov
scas
mov
int3
outsb
fwait
iret
ss
cmp
push
stc
push
jecxz
inc
lcall
outsl
jl
sub
cltd
cmp
clc
jae
dec
adc
mov
mov
pop
adc
jae
xor
pop
pop
pop
jl
sarl
movsb
out
jne
imul
xchg
add
mov
pop
pop
cmp
jmp
pusha
fdivs
lcall
or
jecxz
mov
lods
add
inc
pop
das
push
xor
sbbl
sub
es
and
xchg
jb
pop
xor
cmc
clc
aas
aam
mov
mov
inc
mov
data16
add
mov
sbb
push
or
sub
mov
sbb
push
ret
stc
xor
dec
sub
lahf
ds
mov
shll
sti
xchg
int
sub
in
outsl
jle
call
sahf
cmpsl
and
fists
ja
movsb
sbb
mull
or
add
mov
mov
jle
movsb
fbstp
pop
test
aaa
mov
jno
leave
sub
mov
sbb
cmc
adc
push
jae
sub
imul
mov
add
popa
addr16
dec
add
adc
ret
push
mov
jns
test
mov
push
mov
pop
mov
je
dec
sub
jecxz
xor
movsl
cwtl
sbb
mov
pop
mov
pop
mov
jmp
sub
ss
xchg
mov
test
or
jae
jmp
mov
pusha
mov
dec
jmp
xor
jo
mov
pop
or
std
icebp
in
mov
jae
iret
push
add
jns
repnz
insb
cmp
cli
lock
jns
clc
inc
mov
cmp
cmpsl
cmpsb
cmp
ja
lcall
iret
mov
js
sbbl
imul
ficoms
shlb
adc
sub
mov
es
cmpsl
jge
inc
mov
push
pop
mov
adc
sbb
push
repz
add
xchg
dec
jae
test
cs
int3
push
push
fldenv
imul
mov
xchg
push
fiadds
insb
je
cmp
dec
sbb
mov
into
mov
cmp
cmp
and
faddl
clc
loopne
xchg
ret
xor
movsl
sar
pop
sub
ret
lcall
mov
jo
lea
mov
iret
bound
gs
sub
movsb
scas
movsl
sbb
test
arpl
mov
dec
push
addr16
xor
out
mov
mov
jle
imul
xor
pop
dec
xchg
cs
mov
filds
jne
shrb
inc
jmp
and
adc
sbb
pop
pusha
and
ss
and
adc
std
push
cmp
pop
jmp
xor
stos
mov
add
sbb
jne
sub
jns
or
xchg
cmp
js
xchg
repz
adc
pop
aam
inc
cltd
jle
jl
adc
adc
xchg
mov
cld
cmp
adc
xchg
pop
ficomps
in
lock
mov
roll
jl
push
leave
mov
and
jae
lret
loop
push
dec
push
out
jg
ss
push
fdivrl
jae
std
cs
mov
or
fstp
pop
dec
mov
pop
jo
jae
ja
sub
jp
jae
andl
ds
xor
fcomip
inc
out
push
int
insl
mov
jge
adc
imul
add
rol
push
mov
cmpsl
stc
jbe
pop
xchg
adc
rcll
cmpsb
hlt
push
sub
jp
cmp
mov
hlt
int3
movsb
push
int3
add
adc
mov
ficoms
cwtl
mov
arpl
or
fsubrl
add
test
dec
xchg
pusha
mov
inc
cs
mov
ss
in
rcll
xor
lds
adcb
inc
and
cli
xor
sub
das
xlat
shlb
push
jno
mov
mov
push
aas
inc
mov
lock
inc
dec
sub
jae
dec
xor
int
and
push
sub
push
loop
fsubrl
jae
cmpsb
cmpsb
adc
mov
xor
data16
cmpsl
ja
xchg
and
xor
fbstp
push
sub
lods
movsb
insb
fucomip
and
mov
ret
pop
mov
scas
dec
push
imul
and
shrd
mov
pop
sbb
pushf
enter
pop
jecxz
test
insb
pop
jle
sbb
push
repz
test
lea
cs
das
mov
lret
push
dec
test
add
imul
ljmp
mov
clc
int
push
sub
sub
scas
fidivs
fnsave
push
mov
jae
test
dec
xor
in
jbe
mov
ret
mov
xchg
ficoms
ja
mov
pop
jo
icebp
fisubrl
inc
cwtl
cld
ss
fwait
or
adc
sbb
mov
ja
test
js
fcomps
xchg
jo
sbb
andb
sbb
icebp
push
cmp
int3
and
push
jno
push
or
inc
ja
or
or
mov
xchg
pop
mov
xchg
mov
ror
daa
stc
mulb
cmp
repnz
or
xchg
mov
add
test
xor
mov
insl
out
mov
cmp
xchg
ja
rclb
push
pushf
mov
mov
ss
fstpl
cmp
test
std
push
aad
pop
loopne
test
pop
mov
and
negb
adc
pop
jb
std
mov
cmc
xor
mov
mov
cltd
cwtl
sbbl
xor
jmp
pmaxub
data16
push
push
cmp
sahf
add
mov
add
roll
fcmovne
push
mov
dec
push
rorl
jae
subl
xor
inc
lcall
xchg
sub
or
stos
add
xlat
inc
sbb
mov
pop
pushf
and
jmp
es
push
addr16
jb
je
bound
fs
adc
mov
daa
int3
dec
outsl
push
pop
inc
jo
xchg
sti
pop
push
jge
jg
and
pusha
mov
mov
mov
cmp
mov
jmp
adc
mov
jns
cmp
sub
cwtl
xchg
jne
xchg
inc
cltd
mov
outsb
insl
cmp
mov
mov
pop
jo
mov
or
mov
jbe
dec
jmp
aaa
or
cmp
mov
repz
mov
das
pusha
push
arpl
sub
jle
pop
pushf
push
sbb
xor
aaa
ret
push
fistl
ss
adcl
pop
push
adcl
shll
pop
mov
js
mov
ficoml
popa
sub
mov
fsubrs
and
das
movsb
mov
js
dec
and
in
in
data16
jae
pop
dec
mov
into
cmpsl
sbb
jge
cmpsb
sbb
dec
aam
imul
jno
stos
stc
pop
push
repz
mov
cmp
addps
inc
fsubrs
and
hlt
dec
mov
pop
into
jp
cmpsb
push
insb
mov
sub
sar
lods
sahf
cmp
pop
cld
add
test
imul
roll
dec
ljmp
lock
lock
mov
pusha
ljmp
orb
imul
add
push
cltd
sub
mov
sbb
test
arpl
mov
loop
jae
stc
test
movsb
mov
fnsave
jb
out
jbe
mov
inc
insb
dec
mov
cmp
mov
lds
xor
int
xchg
stos
rorl
dec
cmp
mov
stos
je
pop
jecxz
inc
es
in
xor
xchg
adc
push
cs
int
outsb
data16
enter
jns
and
mov
in
or
push
stos
dec
mov
pop
xchg
out
push
icebp
mov
cli
and
imul
lret
insl
ss
test
jle
inc
sbbl
iret
cmc
cmpsb
movsb
xorl
ja
int
inc
jae
mov
pop
sub
je
xorl
inc
mov
jae
popf
push
mov
cmp
pop
lock
xor
hlt
test
lods
sub
cmp
dec
hlt
popa
popa
hlt
test
jns
push
lcall
sbb
aaa
repnz
and
adc
jg
xchg
push
shlb
xchg
or
pop
mov
sub
push
and
cmovge
in
mov
sbb
incb
fadd
mov
in
in
mov
xlat
inc
jns
or
inc
mov
adc
cwtl
xchg
lret
ljmp
stos
loop
mov
xchg
rorb
scas
fwait
repz
mov
push
jb
stc
mov
int3
or
inc
movsl
and
or
jmp
pop
jns
pop
jb
cli
sub
dec
or
dec
ljmp
jae
popf
jbe
aam
int
daa
lahf
out
scas
outsl
xor
int
insb
cmp
fdivs
outsb
pusha
cmpsb
outsl
rcrl
mov
insb
jns
cli
adc
adc
outsb
push
mov
sbb
mov
in
fcompl
jae
jge
imul
jns
cmp
mov
gs
mov
insb
ss
fsubp
stos
je
bound
mov
xor
pushl
push
jns
lahf
cmp
lds
jbe
jecxz
and
pop
mov
test
es
mov
bound
sbb
test
push
ljmp
out
xchg
jge
mov
int
aam
jae
ss
inc
sub
js
or
mov
cmp
jl
pop
mov
jle
jg
dec
sub
sbb
jbe
jb
push
iret
rcll
push
fldt
mov
test
js
sbb
jle
in
cmp
loopne
ljmp
cmc
cmp
das
and
sbb
adc
es
fcoml
mov
adc
mov
cmp
mov
ja
inc
stos
jmp
out
test
mov
inc
ja
add
into
or
and
jge
and
xchg
std
imul
mov
stc
xor
aam
push
or
and
leave
adc
pop
int
adc
sub
imul
into
lods
mov
aam
or
jbe
das
mov
sub
cmp
test
jae
xchg
inc
xor
int
mov
test
mov
data16
lret
adc
repz
mov
jo
sti
xchg
daa
fwait
mov
hlt
ja
cwtl
xor
xor
fucomi
or
jae
xchg
stos
xchg
rdpmc
push
add
fcoms
lea
adc
or
jecxz
mov
sub
and
inc
mov
out
mov
sbb
mov
xchg
mov
gs
mov
and
mov
mov
adc
pop
or
ret
pop
xchg
adc
iret
jbe
xor
inc
jb
xchg
sbb
inc
jae
mov
inc
sbb
add
jns
inc
les
jecxz
mov
dec
in
fcomp
aaa
cmpsl
xchg
arpl
iret
push
mov
pop
dec
mov
mov
jae
sbb
xor
loop
clc
bound
sarb
lret
das
es
test
cmp
cmpb
mov
push
pop
jl
fldl
test
les
jae
add
enter
stos
stos
jo
imul
sub
jbe
outsb
xchg
aam
mov
out
pop
and
not
fstps
push
mov
jmp
add
mov
jmp
xchg
es
out
cmp
js
fsubrl
ljmp
movaps
popl
mov
pop
int
jp
mov
imul
jae
movsb
or
adc
sub
add
shrl
js
pop
cmp
sub
imul
adc
xor
lds
mov
stos
push
mov
out
add
mov
cltd
jge
xor
mov
jecxz
jnp
xchg
mov
push
mov
mov
xor
lds
jl
sub
sbb
cwtl
subb
repnz
mov
jo
pusha
sbb
xlat
push
jge
dec
or
push
cmpb
or
leave
xor
pop
leave
test
push
cmp
jb
xor
push
sbb
xchg
inc
and
push
aaa
jae
inc
or
push
cmpsl
cmp
dec
sbb
mov
mov
adc
xor
es
cli
outsb
outsb
aad
movsb
mov
in
and
movsl
push
jb
push
in
and
push
pop
xchg
mov
in
push
subl
jne
out
mov
inc
hlt
add
clc
outsb
dec
mov
pop
cwtl
outsl
aaa
arpl
inc
adc
pop
lret
int
mov
test
enter
daa
cmpsl
pop
jo
dec
shll
push
nop
test
mov
mov
ret
js
jp
or
ja
imul
adc
data16
xor
jno
pop
arpl
adc
fstl
lret
imul
pop
sahf
bound
cmp
mov
jno
push
push
std
ss
rorl
in
aam
or
pop
push
cmp
pop
movsb
xor
mov
aad
stos
pop
jle
sub
pop
sti
sbb
xor
pushf
mov
lret
xor
mov
sub
cld
mov
lods
sub
jmp
dec
je
js
std
mov
mov
jae
xorl
mov
adc
sti
repz
mov
jp
pop
sub
mov
pushf
js
jno
or
gs
fdivrs
dec
add
xchg
cmp
test
hlt
es
repz
and
sbb
mov
jl
mov
cmp
ljmp
and
mov
add
adc
mov
lret
push
std
imul
movsb
inc
cmp
lret
and
imul
mov
popa
lods
int3
pop
xchg
mov
aaa
and
fwait
jle
mov
clc
push
imul
pushf
in
out
inc
loope
add
fisubs
inc
push
ret
das
pop
aam
jbe
in
jp,pt
push
jecxz
jo
imul
push
sbb
and
sahf
in
and
dec
sub
dec
pop
stos
cs
push
cli
xor
icebp
push
dec
cmp
and
cmpl
je
inc
fsubrl
in
fucomp
mov
lock
sbb
dec
dec
arpl
or
push
or
mov
push
push
mov
jp
gs
scas
sub
fwait
ret
pop
push
loope
pop
fstpl
mov
sbb
mov
mov
les
scas
xchg
adc
lret
mov
mov
jae
and
cmp
dec
mov
daa
inc
mov
or
fdivs
inc
pop
pop
mov
push
xchg
pusha
inc
cmp
es
repz
mov
sub
fldcw
jge
shrb
inc
cmpsb
repz
js,pt
ss
sahf
outsb
int
mov
cmp
xchg
stc
pop
inc
ljmp
jmp
rol
pop
jno
into
adc
fwait
push
xor
pusha
jp
push
repnz
inc
ret
daa
push
test
pop
ds
xchg
popf
ja
divl
mov
xchg
xor
imul
and
outsb
pop
jb
hlt
scas
inc
repz
dec
and
mov
in
jg
sbb
aad
mov
sbb
sbb
pop
sbb
rclb
jbe
pushf
pop
fisttpl
roll
out
sahf
ds
push
jae
dec
fdivp
jo
push
pop
cmp
cltd
dec
call
pop
sbb
dec
xchg
aam
sahf
add
push
inc
add
add
cmpsb
xor
pop
mov
enter
loopne
das
jmp
mov
and
inc
sbb
cmp
mov
push
mov
add
add
adc
cli
loop
movl
mov
outsb
mov
dec
push
mov
hlt
and
scas
jle
dec
imul
cli
xor
jg
hlt
or
mov
lahf
mov
mov
sahf
in
scas
or
dec
ja
add
xor
sbb
mov
data16
fstpl
add
cmpsb
xor
fldt
inc
ja
jecxz
jb
movsb
hlt
xor
or
add
sub
aaa
pop
mov
outsl
data16
popa
jae
hlt
femms
cmp
jo
imul
push
cmpsl
sbb
stos
popf
jo
gs
into
mov
lods
sti
mov
movsb
int
sbb
fdivs
push
sti
or
lds
stc
fldenv
cwtl
inc
adc
and
in
push
ja
icebp
scas
jge
out
dec
adc
mov
call
push
aas
or
adc
dec
fnstcw
popf
bound
pop
fistpl
push
push
cld
ja
xchg
mov
lahf
xor
in
push
mov
lret
mov
in
loopne
sbb
xchg
inc
jo
mov
sbb
jle
mov
int3
pop
push
adc
inc
es
stos
mov
and
sub
lds
repnz
cltd
mov
sbb
xchg
push
and
mov
cs
sbb
jbe
pop
addb
loope
cmp
fildl
dec
xlat
jo
jae
xchg
add
aaa
es
ret
test
lods
jns
inc
and
imul
mov
sar
stos
cltd
sahf
and
out
hlt
insb
mov
pop
jbe
xor
fadds
scas
push
push
mov
pusha
mov
jmp
adc
jb
mov
lock
insb
popa
sbb
pop
lock
nop
mov
push
add
adc
mov
xchg
xchg
pop
sbb
adcb
xor
jnp
xchg
push
movsb
imulb
lds
mov
rolb
and
scas
mov
arpl
adc
es
mov
pop
jae
cli
cmp
sets
xor
mov
mov
jae
in
ss
cwtl
and
test
adc
pop
pop
pop
or
and
fcmovnu
and
sub
das
push
mov
cli
jl
insl
mov
sahf
sub
in
sub
pop
cmp
imul
test
loop
into
hlt
or
js
mov
daa
cld
jns
in
cmpsb
or
int
pop
sub
mov
jecxz
repz
loopne
in
and
fs
xchg
fsubl
sub
mov
jae
daa
pushf
scas
mov
into
scas
add
push
ja
das
int3
mov
jo
jae
mov
push
loope
inc
divb
fcoms
lret
rorl
cmpsb
dec
gs
mov
cltd
sub
dec
mov
loopne
rcr
cmp
cmp
in
mov
mov
mov
mov
cli
mov
adc
pop
fs
cmp
cmp
cmp
jmp
insb
sbb
arpl
and
adc
xor
arpl
out
sbb
mov
mov
pop
mov
lods
loop
xchg
jae
sub
cltd
pop
inc
dec
xor
mov
test
std
fimull
jbe
ret
outsb
popa
fisubrl
jns
hlt
aam
pop
or
mov
xor
lcall
repz
adc
mov
pop
ljmp
loope
pop
jo
add
jae
lods
stc
mov
dec
lahf
ja
lcall
sbb
imul
xor
push
enter
or
inc
push
jl
xor
push
aas
sub
xchg
mov
jg
jno
into
outsb
jl
xlat
gs
mov
shl
pusha
cmp
xchg
mov
sbb
lods
cltd
pop
sbb
push
dec
and
outsl
sbb
movl
sbb
pop
push
inc
cwtl
cmp
or
dec
cltd
lret
in
sub
or
ljmp
js
cmp
jbe
lahf
shrb
and
xchg
jo
mov
gs
std
fwait
jle
mov
loope
out
xor
ret
cs
movsb
mov
xor
jno
subb
loop
jecxz
inc
sbb
fldt
pushf
ss
repz
clc
je
notb
xchg
js
pop
dec
insb
out
mov
int3
xchg
dec
insb
lret
arpl
sti
and
sbb
pop
or
xchg
aaa
ja
icebp
inc
sub
out
lods
arpl
pop
lods
jl
and
jae
in
int
push
in
mov
jb
fisubs
or
inc
sbb
xor
rclb
bound
push
or
mov
jge
stc
mov
ss
popf
fldl
jns
sahf
scas
ror
inc
popf
jne
pusha
rclb
hlt
pop
cmp
loopne
and
or
or
sbb
push
stc
cmpl
call
or
jns
mov
jo
add
mov
jle
and
ret
pop
push
add
imul
sbb
mov
mov
jbe
jmp
scas
jge
jae
fwait
imul
cmp
push
pusha
xor
pop
insb
pop
pop
mov
xchg
jnp
sti
sub
jge
dec
inc
imul
or
add
mov
cltd
movsb
fadd
cmp
stos
fldt
imul
xchg
ja
mov
fidivs
sbb
shll
sbb
ja
mov
je
lds
jo
xor
jae
cmpsl
sarl
mov
lret
dec
sbb
imul
in
jle
cmp
push
mov
xchg
pushfw
inc
cmp
jg
sub
in
sub
fisttpl
pop
rclb
jae
mov
int3
push
push
adc
out
push
push
jae
test
pop
fldcw
shl
pop
addb
mov
cltd
inc
fistl
mov
sarb
xchg
pop
mov
xchg
pushl
and
mov
push
lcall
mov
inc
cwtl
ss
aaa
int3
in
cmpsw
xlat
adcl
mov
cmp
pop
imul
adc
cli
pop
fdivr
push
leave
test
jnp
sub
sub
out
bound
aad
and
repz
out
adc
xchg
fsubp
adc
adc
mov
ja
mov
push
outsb
out
sub
jb
into
das
xor
sbb
dec
sbb
adc
repnz
mov
cs
cmpsl
mov
stos
push
inc
sub
mov
xor
fisttps
stos
adc
ss
aaa
mov
hlt
mov
push
cmp
push
adc
daa
js
cmp
in
mov
jno
popa
xor
mov
sbb
xchg
lock
repnz
add
mov
aam
sub
sub
shlb
in
in
shll
movsb
sbb
xchg
sub
sub
pop
sbb
sbb
mov
mov
mov
xor
fstp
inc
jae
outsb
rorl
insl
cs
js
mov
test
popf
jl
jae
jge
test
in
fnsave
dec
decl
cs
inc
sahf
inc
call
neg
pop
mov
xchg
cli
cmp
jae
cmp
adc
in
fldcw
jb
adc
pop
mov
adc
mov
testb
jns
and
lds
pop
hlt
mov
and
sbb
aaa
and
hlt
cmc
insl
inc
bound
and
jmp
pop
ret
and
out
sahf
clc
push
mov
cld
pop
mov
lds
mov
jae
lods
and
in
stc
ret
mov
or
push
sbb
jne
sub
imul
push
popa
es
add
mov
adc
ss
adc
push
imulb
xchg
lcall
nop
mov
push
adc
out
fistps
xchg
cli
mov
loop
jo
sbb
insl
xchg
and
movhlps
and
mov
mov
sub
sbb
sbb
jecxz
loope
aad
pop
cwtl
jl
cltd
xlat
lds
push
sub
pop
xchg
mov
pop
jae
pop
cmpsb
jp
cmp
out
mov
sub
inc
cmc
ds
and
xor
pop
frstor
jl
or
scas
jp
adc
int3
inc
sbb
or
shll
push
addr16
insb
mov
adc
inc
rcrl
cltd
mov
jge
pushf
addr16
sub
adc
jmp
cmp
mov
imul
fsubrp
lock
popf
nop
xlat
loope
jae
aaa
ret
fwait
jnp
rep
rorl
test
insb
xor
pop
ljmp
addb
jo
cmp
mov
inc
adc
mov
je
push
sbb
mov
out
xorb
lahf
jge
mov
jg
adc
jle
scas
mov
mov
hlt
addb
push
adc
pop
mov
imul
xlat
outsl
adc
out
add
mov
jp
cwtl
pusha
or
xchg
inc
sub
inc
mov
cmp
push
subl
imul
test
lock
subb
aaa
movsb
les
jg
pop
inc
mov
ljmp
mov
adcb
mov
dec
xor
jno
push
test
in
out
jnp
lea
imul
sub
jp
aaa
pop
gs
lret
ret
sbb
iret
pop
sbb
inc
js
outsl
aam
xchg
sbb
jp
ficoms
fildll
lahf
and
loopne
out
mov
xchg
imul
mov
rorb
pop
jns
xchg
mov
outsb
pop
bound
ja
mov
stc
sub
mov
mov
je
int3
xor
arpl
stos
xchg
mov
pop
outsb
dec
pop
xor
sar
ror
mov
cwtl
pop
loope
sbb
mov
cmpb
nop
mov
xchg
pop
mov
in
pop
xchg
mov
iret
fwait
mov
pop
cmp
cmc
hlt
aad
cmpsb
std
inc
xor
dec
add
and
clc
sub
nop
fldt
cmp
and
jae
adc
pop
pop
and
xor
in
and
jbe
jecxz
scas
xchg
push
cmp
mov
xlat
mov
nop
dec
scas
movsw
mov
adc
jmp
or
fwait
sbb
hlt
adc
xchg
insl
mov
mov
fadds
push
fiadds
xor
popf
adc
pop
imul
imul
popa
sbb
fldt
in
inc
gs
test
lea
pop
movsb
push
sub
aam
mov
and
ja
orb
push
bswap
fisubl
cmp
push
dec
xor
jae
inc
inc
insb
das
jmp
push
aad
ja
and
push
push
clc
loope
fcoms
out
outsl
dec
andb
imul
add
push
jae
or
cltd
fwait
rol
dec
cwtl
xchg
daa
insb
mov
stos
jge
sti
stos
jg
cmpsb
cmc
aas
sbb
sbb
repz
std
shlb
imul
adcb
scas
push
fsub
inc
andb
out
mov
and
ljmp
icebp
inc
mov
pop
lods
mov
push
ja
mov
in
pop
sahf
shrl
sub
std
dec
mov
sbb
outsb
pop
push
cmp
dec
push
inc
xchg
or
adc
jg
cmp
fnsave
mov
test
test
mov
pop
sub
push
test
popa
or
adc
stos
push
mov
xor
fsubrs
sub
and
adc
pop
mov
stc
sub
jae
movsb
rcrl
jo
shl
mov
mov
std
lcall
clc
clc
sbb
mov
mov
mov
stos
and
imul
lods
outsl
jp
push
pusha
and
pop
inc
std
xor
mov
dec
mov
cld
test
push
and
popf
aam
js
add
subb
or
pop
sbbb
jb
test
pop
inc
xchg
and
jae
cmp
lret
out
idiv
leave
ss
jae
mov
cs
test
cmp
mov
gs
fmuls
adc
imul
or
cs
mov
pusha
xor
insb
sbb
fldenv
cmc
cltd
lret
cld
jno
push
inc
mov
clc
inc
add
push
aam
push
imul
mov
cltd
and
push
sub
mov
punpcklbw
lcall
inc
outsb
jb
int
mov
push
jae
inc
leave
inc
in
aaa
cltd
add
imul
jl
push
lock
outsb
dec
hlt
sarb
pushf
cmpsl
sub
and
adc
sarl
add
subl
arpl
lret
mov
mov
clc
inc
mov
aam
mov
mov
mov
mov
sub
scas
cmp
and
pop
xor
jnp
popa
cmp
cli
sti
xchg
xor
divb
dec
mov
push
mov
lret
pusha
aam
pushf
shr
in
in
shrb
mov
xchg
enter
ficoms
and
jae
icebp
ss
negl
scas
xchg
pop
mov
pop
pushl
push
pop
sahf
movsb
xchg
cmpsb
jae
jne
push
ljmp
out
fstp
jge
mov
fidivs
xor
stc
lret
test
test
shlb
mov
dec
scas
cmp
adcl
add
inc
or
pop
and
les
ja
mov
mov
adc
and
cmp
dec
pop
aaa
cmp
ja
inc
jbe
ljmp
mov
inc
cmp
sbb
mov
mov
push
cmpl
int
cmp
nop
jmp
cmp
sbb
mov
daa
jae
fs
push
stos
push
mov
inc
cmp
test
imul
movsl
incl
inc
or
data16
outsb
imul
pusha
int
in
mov
pop
rorb
push
cmp
mov
pop
ret
stos
jmp
clc
xchg
jns
xor
mov
xchg
bound
cmp
jg
mov
dec
les
cs
cli
aam
mov
fadds
mov
shll
dec
jbe
adc
mov
mov
loopne
cs
jo
rcrl
adc
leave
cmp
pop
out
sbb
inc
jno
stos
data16
rcll
std
cmp
fldcw
jge
int
test
out
fnstenv
pop
test
sub
out
mov
stc
ss
ds
loopne
call
or
inc
and
jp
xchg
adc
push
iret
add
xchg
xchg
scas
pop
mov
shlb
jecxz
adc
mov
xchg
ljmp
adc
xchg
mov
or
outsb
mov
pop
int
xor
and
stos
rorb
popa
lahf
mov
push
jp
mov
cld
xchg
push
mov
sub
ss
or
adc
push
ja
clc
add
lock
pop
cld
cld
xor
adc
stc
jmp
sbb
incl
stos
sub
aaa
fsts
jmp
mov
push
and
popa
loop
lods
iret
adc
jg
pop
push
lea
cltd
mov
xor
cmp
repz
sahf
outsl
cmc
inc
pusha
into
mov
out
cld
rorl
pop
ja
adc
jns
push
clc
aam
hlt
cwtl
cmc
ret
out
adc
loope
sbb
ss
inc
cmp
into
negb
jae
fucomi
adc
pop
mov
in
add
jno
test
mov
xor
push
pop
jnp
repnz
add
je
nop
dec
cmp
stos
in
mov
arpl
lahf
xorb
cmp
xor
jg
mov
clc
test
sbb
jo
cmpsl
mov
aaa
pop
outsb
mov
inc
mov
jle
add
aaa
and
jnp
cmc
sbb
push
in
aam
xchg
mov
out
pop
in
mov
fsts
xor
imul
sub
jne
add
add
fistps
mov
out
leave
mov
mov
insl
pop
cmp
inc
repz
lods
push
out
mov
sbb
cmp
xor
ret
pop
push
decl
xor
mov
cmpl
in
rol
std
cs
inc
push
adc
or
mov
decl
or
xor
fisttpll
imul
jae
scas
jge
fcomi
push
dec
inc
aas
sbb
sub
xlat
jae
aas
fildl
xor
cmpsb
cld
sbb
repnz
xchg
or
sbb
adc
cmp
push
sub
test
sbb
dec
pop
frstor
adc
lds
mov
cwtl
adc
adc
cltd
dec
and
stc
test
xor
jne
icebp
ja
mov
int
call
mov
add
mov
arpl
ficompl
std
mov
jae
lret
pop
sub
lahf
inc
push
imul
shl
sub
pop
ss
sbb
cmp
sub
jbe
cmpsb
jae
out
xor
sbb
mov
lahf
xor
ja
je
cmpsb
add
and
lcall
or
bound
dec
test
pop
mov
dec
jle
mov
and
xlat
mov
xorl
addb
pusha
jae
push
scas
cmpsb
xor
testb
or
push
js
in
or
sub
sbb
mov
int
leave
jge
mov
jne
jmp
jns
movsb
movsb
ds
push
jmp
ja
cmc
lret
adc
xor
ret
pop
shll
pop
cmp
inc
mov
jae
shlb
mov
fsts
inc
mov
add
pusha
pop
cmc
call
jmp
push
pop
mov
test
mov
dec
test
add
jp
hlt
sar
ss
in
mov
pop
add
xchg
jae
xchg
ret
pop
jle
js
imul
adc
lock
xchg
outsb
mov
loop
cltd
into
mov
xor
inc
in
xchg
fmul
insb
ds
xchg
imul
pop
and
and
jne
mov
xor
fcmovnb
pop
xor
xchg
cmpsl
jnp
pmullw
adc
add
sbb
ja
sub
dec
xchg
scas
adc
leave
adc
xchg
out
adc
mov
sbb
or
pop
push
insb
imul
out
pop
je
ds
jne
adc
int3
adc
aam
mov
xchg
add
test
adc
pop
xchg
dec
cmpsb
adc
nop
pop
sub
fcmovb
lods
jo
insb
jg
add
sbb
jecxz
insb
std
mov
cwtl
stos
test
clc
les
pusha
jmp
and
lods
adc
and
daa
mov
pop
fnstsw
shrb
adc
jo
ret
or
ja
mov
lods
ret
mov
inc
repnz
int3
ror
das
js
aam
ret
std
sub
ja
in
movsl
out
sbb
inc
mov
sub
xor
mov
adc
test
cmc
mov
xchg
repz
imul
xchg
pop
push
cli
and
adc
fcmovb
xchg
mov
pop
dec
icebp
or
mov
mov
mov
jg
push
aad
out
mov
push
jp
add
jb
dec
push
in
mov
out
cmp
jnp
pop
or
mov
jns
jo
stc
scas
out
inc
int
adc
jno
pop
movsl
push
pushf
dec
pop
inc
jmp
test
into
inc
sbb
dec
mov
enter
inc
ja
adc
xor
int3
push
mov
pop
push
sarb
mov
pop
arpl
push
fcmovu
or
adc
xchg
rorb
xorb
dec
sbb
push
dec
out
adc
clc
dec
jp
add
xor
dec
mov
adc
pop
ss
imul
mov
cmp
mov
stc
insb
test
mov
inc
mov
xor
ret
push
in
loop
sbb
leave
insb
pop
std
fiadds
outsb
cmpsb
je
jmp
jae,pn
mov
out
test
aas
sbb
xor
jae
in
cli
std
xchg
push
ja
mov
mov
lret
int
sub
mull
sub
cmp
stos
sub
das
jae
addr16
xchg
pop
ja
push
subb
push
push
jbe
test
mov
stc
xchg
nop
cmpsb
add
jns
add
mov
call
imul
outsb
pop
cmp
andl
iret
or
inc
lods
sub
pop
xor
stc
imul
dec
jo
xor
xor
cmp
imul
cmpsl
ss
xchg
cmp
scas
dec
mov
and
in
ret
dec
cs
push
addr16
cmpb
pop
xchg
cmpsb
mov
sub
in
push
cs
pop
rolb
ja
mov
fiadds
scas
xchg
adc
ficompl
cltd
jbe
dec
jp
test
push
dec
arpl
push
lret
vcvtss2sd
xchg
adc
add
mov
imul
adc
fsubrs
xor
push
xchg
jae
pop
mov
sub
scas
pusha
dec
lods
sub
insb
push
sti
add
stc
cmc
xchg
stc
cmp
insl
sbbl
jecxz
sti
and
push
dec
xor
imul
leave
fwait
push
and
gs
movsl
lret
movsb
sahf
fsubs
add
jae
cwtl
in
sub
test
adc
xchg
dec
and
psrlw
pop
jae
aaa
sub
add
inc
push
sub
mov
mull
ret
jo
mov
fcoml
cs
insb
mov
test
jo
sub
xchg
mov
in
aas
imul
out
sub
sub
mov
and
or
cmc
dec
jl
jbe
pop
mov
push
sub
popa
push
xchg
in
mov
xor
in
mov
adc
out
sub
sbb
addr16
sbb
repnz
adc
mov
jbe
jns
pusha
cmp
push
jmp
rcr
mov
mov
jno
mov
lahf
int3
addb
jae
and
scas
mov
cmpsb
sbb
aam
ja
xchg
shll
pop
and
addr16
xchg
xchg
lahf
insl
out
sbb
outsb
bound
xchg
ss
dec
lret
jno
lods
add
cmp
imul
in
dec
pop
sbb
stos
fildl
js
push
ss
pop
xlat
sti
push
mov
data16
push
es
fdivl
jg
les
out
call
stos
push
test
adc
daa
imul
pop
and
loope
enter
idivb
insb
jbe
push
aam
outsb
and
cltd
or
fildll
pop
sarb
xor
xchg
sahf
addr16
xchg
xchg
mov
dec
add
sub
pop
enter
sahf
jmp
jmp
stos
cld
negb
mov
push
arpl
inc
cmp
ja
xchg
add
xchg
cmp
int3
ret
mov
dec
imul
pop
sbb
gs
xchg
jmp
aaa
pop
push
mov
or
cmp
stc
iret
adc
dec
mov
in
notb
sahf
std
cli
xchg
xor
loope
jae
xchg
ja
xor
sbb
in
sarl
push
mov
jns
imul
ja
sti
popa
mov
mov
cmp
xchg
xchg
ret
cli
fnsetpm(287
adc
out
popf
add
sbb
insb
add
xchg
dec
repnz
sbb
cmpsl
inc
xor
dec
xor
push
dec
cmc
or
or
in
out
xorb
test
jge
mov
cld
in
roll
inc
div
or
les
out
cmpsb
scas
lea
or
and
mov
daa
sbb
jmp
js
push
and
push
jg
sub
ss
mov
mov
getsec
mov
jp
and
adc
inc
xor
arpl
lret
sbb
mov
push
sbb
outsl
ss
stos
pop
mov
and
jl
mov
dec
insl
mov
mov
popa
push
xchg
jle
dec
ds
es
bound
cmp
sbb
hlt
or
aas
xchg
je
sahf
ja
sub
daa
sbb
test
pop
add
andl
int
mov
lods
lcall
out
outsb
je
dec
pusha
fwait
dec
sub
mov
ja
xchg
xchg
outsb
xchg
mov
adc
xchg
movsb
lret
adc
inc
adc
aaa
xchg
add
pop
mov
arpl
rorb
xor
and
ja
cmp
fmulp
pop
jle
bound
push
mov
ljmp
subb
mov
lods
or
push
inc
xor
xlat
fisubs
mov
insb
sub
lret
int3
xorb
xchg
stos
outsb
rcrl
testb
inc
add
pop
ret
fmull
or
mov
jno
mov
int3
sbb
mov
push
loope
daa
mov
cmp
shrl
insl
movsl
pop
push
mov
in
shll
mov
lcall
push
mov
xchg
insb
adc
out
and
clc
mov
xor
cmpsl
pop
pop
cli
test
aaa
int3
fmull
out
mov
xor
jl
stos
icebp
fists
and
dec
add
pop
pop
jge
jl
into
js
jae
and
mov
pop
lret
enter
push
mov
push
mov
mov
xchg
jge
lods
movhps
cmc
leave
adc
jae
dec
mov
into
nop
jl
lret
shll
and
jae
aaa
push
shlb
and
je
ljmp
pop
mov
pop
ret
add
fstpt
enter
push
lods
cltd
das
jo
insb
lret
mov
hlt
xor
xor
and
lcall
stc
std
pop
xchg
inc
xor
lods
popa
jbe
dec
sub
cmp
pusha
bound
push
cs
or
dec
pop
out
sahf
adc
fsubl
popl
fs
mov
ja
push
xor
in
js
hlt
in
aad
iret
mov
cmpb
jae
mov
jmp
cmp
pop
out
insl
pop
sub
mov
add
dec
sbb
loope
arpl
clc
mov
stc
rorl
testl
push
or
dec
mov
xor
add
js
inc
test
imul
imul
sub
push
adc
outsb
jecxz
test
dec
jmp
cmp
scas
and
ja
in
and
sbb
mov
push
xor
adcb
jbe
cmp
lahf
popa
inc
xchg
ret
push
add
popa
inc
inc
push
movsb
arpl
and
cmpsb
cmpsl
cltd
out
xchg
and
call
arpl
xor
mov
dec
inc
and
sti
pop
clc
outsb
es
xchg
add
push
dec
fs
mov
inc
loope
jmp
imul
xchg
inc
mov
repz
fldcw
aaa
cmp
xor
inc
adc
jnp
movsl
cld
rolb
aam
pop
movsl
xor
out
push
test
mov
scas
fstl
ja
fdivs
xchg
imul
and
push
sub
data16
insb
push
adc
jmp
inc
divl
imul
ret
rcr
adc
xchg
test
push
hlt
rcll
ret
enter
cld
push
repnz
cwtl
jne
insb
xchg
xor
loop
push
mov
add
frstor
mov
cmp
pusha
xor
pop
fwait
pop
out
icebp
pop
int3
pop
mov
xor
inc
mov
mov
fldcw
ret
inc
arpl
int3
ds
mov
cmpsl
jae
pushf
inc
push
sub
inc
rorb
mov
xor
and
mov
mov
xor
insl
into
xor
data16
add
out
orb
dec
repnz
inc
mov
sub
shlb
ja
mov
fiaddl
std
lods
jae
mov
ja
and
cmpsl
std
stos
outsl
pushf
insb
inc
test
daa
mov
mov
jecxz
inc
mov
rcll
sarb
adc
imul
sub
and
scas
jns
mov
imul
test
js
sbb
xchg
jo
aaa
jmp
xor
sub
das
repz
dec
imul
out
dec
xchg
pop
js
push
inc
and
mov
js
ljmp
lea
dec
subl
xchg
fadds
mov
adc
jae
cmp
xor
push
lds
xchg
cmp
xchg
cmp
sub
xchg
cmc
adc
jo
icebp
scas
sub
imul
fisttpll
das
repz
mov
iret
imul
mov
mov
lahf
jecxz
pop
jg
fmull
jnp
jge
fucompp
inc
repnz
lret
lea
pop
jl
jmp
add
insb
shll
shlb
fstl
xchg
scas
clc
mov
mov
fs
nop
test
das
insb
in
add
mul
mov
pop
iret
mov
hlt
lock
lret
nop
cwtl
mov
or
out
adc
push
inc
push
cmp
dec
out
pop
cmpsb
add
and
push
mov
cmp
mov
sahf
push
aad
sahf
ret
aad
push
hlt
push
jae
mov
pop
xor
mov
push
xor
js
adc
sub
jae
fsubrp
or
jno
and
hlt
sbb
in
mov
shl
pop
subb
mov
inc
jbe
rclb
or
sub
jp
mov
flds
push
ss
pop
push
iret
jb
xchg
cmpsb
push
mov
mov
fmul
flds
cli
adc
pop
test
lret
inc
lea
daa
lods
out
rcrb
xchg
pop
fdivrs
ja
mov
in
mov
jbe
mov
inc
repnz
sub
mov
xor
cmp
mov
aaa
or
inc
xor
inc
mov
aam
data16
ret
add
pop
cmp
aad
leave
jmp
fisttps
and
xor
push
loope
pop
mov
xor
push
sbb
mov
mov
mov
jl
insb
cmp
lahf
mov
fistl
pop
scas
mov
stos
cmc
xchg
and
adc
lahf
jae
dec
jae
orb
mov
dec
pop
pop
fwait
mov
mov
mov
mov
mov
aam
adc
adc
outsb
xor
aas
xchg
outsl
add
or
insl
pusha
push
or
sbb
sarl
and
pop
pop
bound
movsl
fistpll
pop
jnp
mov
popa
or
push
or
ss
ja
mov
aam
aaa
pop
sbb
movsb
iret
or
xchg
ret
adc
jecxz
jmp
xor
pop
sub
inc
pop
mov
dec
push
aas
les
or
in
pop
dec
mov
push
addb
test
mov
fcmovnu
inc
scas
inc
dec
or
xor
or
inc
fdivrs
mov
dec
es
push
insb
out
xor
sti
dec
in
mov
sarl
leave
scas
xchg
es
mov
ja
add
pop
movsl
mov
or
ret
cmp
mov
xchg
lret
sarb
sub
xor
xchg
push
mov
das
call
lods
ja
fdivrl
dec
lods
jl
inc
adc
dec
in
out
sbb
out
xor
sbb
pop
gs
clc
inc
pushf
sub
out
cltd
cmc
shr
xchg
jmp
mov
rcll
lea
dec
adc
xchg
mov
and
inc
mov
sub
fcoms
scas
loop
sbb
xor
rorl
push
adc
mov
inc
or
repnz
addb
sbb
jle
lret
xchg
inc
jmp
addl
fsub
xchg
aaa
jp
adc
aas
push
mov
int
incb
mov
stos
xorb
jle
mov
fidivl
dec
mov
inc
jg
inc
movsl
push
mov
int3
cwtl
test
out
clc
imul
int3
in
sbb
les
or
js
jge
mov
jae
push
sarl
mov
or
inc
clc
std
mov
jns
imul
aas
mov
push
push
testl
cmpsl
mov
insl
mov
call
fprem
cmp
inc
out
pop
repz
cmpb
cltd
push
into
sub
scas
jae
jns
push
xchg
adc
ja
and
call
lods
inc
adc
push
fistps
jae
repnz
mov
fcomip
cmovns
jbe
sub
cmc
adc
jle
lret
push
and
push
sub
ss
pop
ljmp
jno
hlt
in
add
stc
adc
adcl
xchg
sub
and
and
push
imul
std
iret
lods
dec
jns
outsl
ja
push
and
lock
cmp
pop
outsb
dec
imulb
jae
xchg
jmp
je
insb
lahf
rolb
pop
popf
xchg
sub
imul
sbb
push
xor
ror
or
cmp
dec
cli
test
cmp
dec
test
push
pusha
push
mov
xchg
cwtl
dec
aam
and
inc
imul
repz
and
xchg
mov
sbb
popf
sub
js
loop
ret
sbb
daa
sbb
mov
push
pop
jle
std
ja
add
and
int
gs
sub
xor
xchg
stc
xor
jp
push
xor
mov
es
and
in
cmp
rcll
fidivl
stos
sahf
sbb
mov
popl
push
sub
adc
std
mov
mov
and
mov
loope
loopne
nop
mov
imul
push
les
add
imul
mov
push
push
sub
aaa
movl
cmp
aam
popf
int3
push
or
jne
mov
fs
push
mov
mov
cmp
mov
adc
or
cmp
inc
pmaxub
aam
xchg
dec
push
ja
cmp
mov
mov
inc
or
push
sahf
clc
adc
or
jmp
xor
and
ds
mov
jne
inc
xchg
ret
ds
sbb
leave
jae
sbb
sub
stc
dec
and
aaa
add
sbb
pop
fidivs
mov
pushf
cld
sbb
test
cs
sub
jmp
mov
pop
adc
lods
aaa
fisttpll
inc
push
fwait
out
xchg
mov
mov
and
ss
scas
push
clc
aaa
int
or
sub
popa
sbb
or
jb
xchg
in
outsl
nop
je
adc
pop
orb
mov
pop
cld
mov
fs
jnp
push
loopne
pushl
sub
jle
mov
jns
fwait
mov
clc
shrl
leave
xchg
ss
mov
lea
cltd
adc
je
rorl
stc
cld
dec
popl
and
repz
jne
dec
sbb
xchg
cmp
dec
cld
mov
test
push
sahf
ret
lret
cli
cmp
cmpsl
mov
mov
jle
jne
mov
loop
lret
mov
and
jo
loope
rcrl
and
jl
inc
aad
movsb
xor
inc
dec
repz
clc
int3
sub
jae
dec
xor
jecxz
orb
jbe
or
inc
and
cltd
out
lret
pop
xor
imul
dec
mov
pop
lret
mov
imul
pop
push
sbb
pop
xchg
or
hlt
test
sbb
mov
dec
lcall
jne
addb
or
mov
xor
mov
outsb
xchg
sbb
xchg
jae
das
and
sub
hlt
imul
add
lahf
cmpsb
ja
mov
daa
popa
pop
mov
and
push
sub
jl
dec
clc
js
addr16
pop
shlb
out
jne
push
sbb
or
jmp
xchg
xchg
dec
movsl
cmp
mov
sahf
inc
addr16
repnz
ja
xor
cs
out
rcll
enter
xor
mov
or
leave
mov
stos
xor
movsb
outsl
in
push
pushf
pusha
rcrb
scas
adc
jbe
sub
pop
xchg
ja
test
dec
lds
pop
sub
cmp
mov
adc
or
sub
and
out
jb
cmc
popa
jp
adc
icebp
in
lret
jmp
mov
jmp
push
imul
ds
jbe
lds
outsl
data16
fwait
addb
subl
imul
jbe
fnstenv
mov
in
iret
cmpsl
cmpsl
call
lahf
insb
mov
push
mov
roll
push
sbbb
lret
imul
add
sub
xor
push
test
xor
call
xchg
dec
adc
fstpl
xchg
jl
je
fmuls
pop
fcomi
subl
or
jo
pop
fcoms
rclb
call
xchg
jp
dec
push
aaa
scas
xchg
mov
push
pop
lods
mov
nop
dec
mov
inc
pusha
fbld
sub
cmc
dec
and
es
les
xor
imul
movsb
dec
data16
pop
leave
hlt
sub
xchg
aaa
int
lea
into
inc
jl
jmp
sub
out
clc
ds
je
out
pop
fwait
imull
rcl
enter
push
in
sti
repz
test
push
inc
mov
je
into
xchg
aad
mov
sarl
xchg
les
xchg
xor
jae
stos
cmc
fildll
xor
sahf
mov
jne
pop
inc
push
jo
nop
cmp
push
xchg
xchg
sub
lcall
insl
adc
cs
aam
cld
popa
cs
jns
enter
int3
scas
mov
ret
mov
ja
or
in
les
dec
cmc
jbe
xlat
into
cmp
mov
repz
mov
lods
divw
adc
push
icebp
xor
jae
or
je
dec
mov
jmp
push
lea
ds
cmc
pusha
imul
mov
push
xor
push
push
leave
push
inc
sbb
and
out
mov
sbb
jae
or
testl
push
loop
xor
jbe
xlat
loopne
aam
mov
jae
push
or
shlb
jge
rolb
in
mov
push
subl
mov
lea
or
push
xchg
rclb
sidtl
popf
addr16
xchg
pop
pop
mov
xlat
xor
test
outsl
fwait
sub
mov
cmpsl
rolb
lds
jae
sahf
adc
jae
pop
jecxz
mov
push
ds
stos
rol
add
push
js
cmpsb
pushf
int3
scas
xor
xchg
push
and
mov
xor
aad
outsl
enter
cmpsb
es
imul
ret
jecxz
test
mov
ds
sub
dec
jle
insb
mov
test
or
popf
mov
testb
xor
or
jnp
in
pavgw
and
pop
rcrl
in
push
sahf
insb
jle
push
and
cmp
out
cmp
sub
xor
jecxz
pop
jae
pop
xor
in
gs
out
repz
ficomps
cli
shlb
inc
jo
js
jg
adc
lods
xchg
inc
or
gs
fdivrl
cmc
mov
jnp
cltd
push
aaa
cwtl
mov
sbb
cmpsb
arpl
sarl
mov
push
lea
mov
jb
cld
out
movsb
jg
test
insb
jle
ljmp
jle
and
js
jae
push
movsb
pop
push
fcmovne
add
dec
mov
loop
or
jo
or
test
jb
push
xor
add
stos
cmp
xchg
inc
insl
xchg
sub
mov
fs
cltd
mov
cmc
dec
idiv
insl
mov
lahf
dec
sbb
push
mov
xchg
add
sbb
inc
sbb
sbb
jle
test
jge
push
sub
je
cltd
xor
fcompl
jb
add
mov
pop
enter
xorb
pop
movsb
mov
popa
jbe,pt
mov
scas
inc
stos
jle
popf
mov
popa
sbb
fwait
sahf
fimuls
and
jge
pop
clc
push
mov
and
jp
xchg
jae
pop
icebp
in
fstpl
pop
das
out
aad
jns
testl
bound
push
mov
pushf
dec
popf
and
js
pop
jg
push
and
mov
scas
es
xchg
je
cwtl
pusha
inc
inc
fcomi
lcall
mov
stos
mov
lea
pop
arpl
dec
movsl
pop
inc
clc
mov
mov
cmpsb
cmp
out
scas
add
stc
mov
mov
filds
ficoml
cmpsb
adc
cmp
inc
mov
push
mov
js
imul
subl
jns
sub
scas
lods
add
out
aam
out
mov
sub
xor
xchg
aam
sbb
xchg
inc
mov
movsb
mov
sti
clc
dec
test
fidivs
sbb
sahf
rol
xchg
lods
xchg
imul
out
dec
sbb
dec
or
mov
mov
lock
push
cltd
xchg
cmp
and
pop
orl
mov
scas
jge
jns
dec
jmp
xchg
lods
dec
cmpsb
add
sub
xor
hlt
cmp
mov
mov
mov
add
mov
repz
lods
jno
imul
xor
push
adc
dec
adc
pop
and
push
pop
popf
insb
out
sbb
data16
inc
pop
movsb
jb
sti
out
add
adc
pop
mov
cltd
mov
cmpsl
xlat
adcl
xchg
adc
leave
sub
mov
jne
lds
dec
fdivr
xor
jmp
cmp
jl
and
and
pusha
jno
push
mov
addr16
adc
scas
repz
dec
addb
arpl
sbb
ja
insb
shrb
xchg
jbe
mov
jae
sbbl
jecxz
jle
and
repnz
adc
mov
sub
ja
sahf
dec
xchg
imul
xor
sbb
pop
sti
push
push
and
int3
fnsave
jo
dec
sbb
mov
movsb
mov
jno
stos
jae
xor
adc
outsl
loope
inc
ucomiss
jo
xor
xchg
cmp
pop
mov
aam
mov
js
stos
fnstsw
je
xchg
jecxz
mov
mov
add
ret
je
adc
sub
lea
imul
in
ljmp
sbb
push
mov
andb
jmp
loope
dec
in
orl
jb
jo
movsb
stos
cmp
aas
or
jmp
int3
outsb
inc
popa
ss
cld
cmp
jae
icebp
pop
jb
pop
mov
fs
xor
imul
cwtl
stos
xor
cmc
test
push
add
cltd
push
test
jns
sbb
sahf
xor
ret
lea
mov
sbb
scas
cltd
jae
mov
imul
adc
pop
adc
aam
in
pop
movsb
inc
cmp
nop
les
cltd
pop
adc
fldl
sbb
jmp
movsl
pop
mov
xchg
into
jbe
inc
cmp
mov
in
mov
ds
sahf
mov
leave
ds
dec
jnp
jmp
mov
jecxz
sub
inc
sbb
pop
in
cmc
pop
adc
hlt
lods
jecxz
jb
add
jbe
pop
call
add
xchg
hlt
or
xor
addr16
push
mov
imul
icebp
and
and
nop
or
mov
pusha
ret
pop
or
mov
inc
cmc
jmp
push
movsb
xor
ret
imulb
aas
lret
push
xor
dec
clc
push
and
fcoml
mov
roll
imul
fwait
and
ja
push
clc
ffreep
fistl
jo
jle
sub
add
xchg
sub
mov
jecxz
adc
xchg
xchg
adc
pop
pop
test
mov
andb
push
mov
pop
sbb
lea
dec
das
lods
jae
jae
insb
cmpb
popf
fwait
adc
add
mov
movsb
movsb
test
cli
add
add
insl
out
lret
aam
stos
fwait
pop
mov
xor
dec
xor
stc
rclb
xchg
mov
push
inc
sub
cs
and
hlt
mov
fldenv
outsb
fstps
adc
sub
inc
dec
push
xchg
test
adc
pop
sbbb
das
fdivs
das
outsl
arpl
test
push
adc
stos
mov
add
xor
add
out
test
out
test
repnz
dec
xor
roll
lods
sub
mov
std
pop
cltd
xorb
jp
mov
lea
or
movsb
jno
mov
and
sub
cmc
pop
push
es
jmp
in
adcb
cs
popa
mov
or
or
hlt
movsb
cmp
aad
jb
cmpsb
in
xor
iret
daa
sub
xchg
mov
cmp
mov
jp
and
repnz
js
popa
cmp
and
pop
xor
adc
or
aam
ror
popa
ror
and
pushf
in
mov
mov
pop
repz
scas
cmp
movsb
inc
mov
jbe
hlt
mov
mov
xchg
xor
lock
mov
aaa
les
fdivrl
add
xorb
mov
push
aam
int3
inc
mov
fisubrs
mov
pop
inc
mov
inc
cmp
or
jbe
add
repz
js
dec
mov
out
pusha
mov
jp
sbb
test
mov
fs
ja
je
jmp
lahf
jecxz
push
aad
aam
das
das
jns
push
fdiv
push
fst
int
push
mov
out
mov
pusha
mov
mov
xchg
mov
mov
inc
add
lods
stc
push
sub
dec
jo
jb
jo
in
push
out
jne
insb
cmp
dec
xchg
cmc
iret
push
or
jae,pn
mov
push
ds
sub
shll
dec
sub
imul
mov
add
pop
push
divb
in
psubusw
adc
mov
ja
cmp
cs
mov
mov
sub
xchg
shll
jle
cmp
icebp
movsl
jl
addr16
sbb
cmp
je
dec
test
scas
jl
inc
push
mov
ds
sbb
mov
jae
push
add
call
stos
mov
pop
out
or
popf
adc
pop
lea
sub
fs
pop
cld
cmpb
cmpsb
mov
xchg
ds
ljmp
xor
js
push
popf
jbe
sub
into
leave
cs
sbb
pusha
in
aam
push
jbe
pop
jl
push
mov
or
mov
or
push
fidivl
int
adc
stos
dec
jnp
mov
test
mov
mov
sub
ljmp
xchg
jno
mov
fnstsw
ljmp
clc
aam
pop
sahf
mov
mov
mov
in
xor
mov
and
mov
xchg
dec
les
jo
sbb
popf
in
inc
jns
mov
add
int
pop
rol
paddusw
mov
fldcw
adc
idivb
xor
push
outsl
push
in
cmp
sub
jle
cmp
and
data16
jg
or
and
inc
ret
cltd
arpl
or
sub
push
xlat
dec
mov
mov
lods
jg
and
mov
imull
lcall
inc
cmpsb
mov
imul
mov
subl
imul
sahf
or
xchg
jnp,pt
mov
sbb
insb
push
mov
or
sub
jl
jmp
test
imul
inc
and
js
mov
dec
jl
int
ds
push
push
push
popa
imul
movsb
pop
and
pop
movsb
repnz
test
mov
pop
inc
iret
or
insl
jmp
pop
gs
fs
jae
pop
sub
xor
test
pop
xor
fwait
push
divb
cs
in
adc
ja
mov
sti
loope
mov
adc
dec
mov
mov
push
cwtl
cmp
inc
jae
out
xor
lret
add
divl
jno
fs
or
out
sbb
inc
ret
cmp
aam
stos
int
shll
in
lods
stos
mov
inc
fcomi
rorb
pop
jb
sbb
jo
dec
push
stc
divb
les
jbe
push
ss
imul
int3
pop
dec
push
pop
xor
in
inc
inc
insl
mov
pop
test
sub
lret
fldcw
out
cmpsb
jnp
adc
push
cli
xchg
mov
pop
int
out
xlat
imul
jo
jp
mov
inc
lea
jae
add
add
aam
mov
xchg
cmp
mov
fstpl
inc
or
mov
iret
and
and
arpl
cmp
and
dec
sbb
inc
cmpsl
je
sub
inc
inc
xchg
fs
ja
or
add
loope
test
sub
ss
setbe
xchg
or
ret
pop
imul
ds
xor
lret
adc
push
sub
aaa
jle
adc
adc
push
mov
xor
cmc
inc
imul
cwtl
js
cmp
sub
aad
and
in
ds
xor
jns
jnp
daa
mov
push
or
jb
aad
add
dec
out
or
adc
sub
pop
and
mov
and
or
rolb
out
into
out
push
pop
or
cmc
lock
jns
inc
mov
in
test
repz
inc
jb
xchg
mov
shll
dec
insb
stos
jecxz
inc
mov
enter
test
cmpsb
shll
push
imul
test
divb
loop
sub
mov
loopne
inc
subb
mov
xchg
aam
xchg
dec
xchg
daa
inc
jo
xchg
xchg
lock
cltd
and
imul
and
stos
adc
or
add
sub
pushf
xor
test
xchg
pop
jae
xor
test
roll
jge
iret
sub
imul
out
mov
in
sbb
fwait
mov
ja
call
scas
jle
jae
sbbl
inc
fcoml
mov
pop
jae
in
xlat
call
ss
hlt
push
mov
cmpb
outsb
and
jae
xchg
inc
cmp
pop
mov
push
test
cmp
fmulp
mov
add
test
jg
sub
mov
nop
aaa
cmp
mov
rclb
dec
out
sub
jns
mov
lret
and
sahf
imulb
mov
dec
insl
inc
out
int3
fucom
aaa
adc
mov
cmc
jns
ret
faddl
add
aaa
imul
jns
in
ffreep
movsb
push
dec
push
cwtl
pop
shll
jo
ja
xchg
jno
xchg
int
sbb
lock
pop
out
jmp
ja
and
pop
pusha
jp
aas
fucomp
outsb
or
stc
mov
fisubs
aaa
push
cmc
ja
movsb
cmp
xchg
imul
test
push
lds
and
jmp
lret
jb
sti
leave
inc
dec
sbb
fsubr
xor
faddp
lock
scas
xor
sbb
push
stc
ljmp
jecxz
and
cmp
sarl
xor
insb
jae
jns
add
in
pop
cmp
push
out
adc
dec
cld
mov
movsb
mov
clc
pop
mov
sub
addl
mov
addr16
jle
adc
jge
xor
fiaddl
sub
cmc
fiadds
ss
mov
push
cltd
arpl
sbb
data16
sbb
mov
arpl
mov
jo
test
cmp
xchg
push
sub
lea
push
and
cmpsl
xor
inc
jne
filds
movb
push
clc
mov
call
in
dec
xor
inc
in
add
mov
push
popa
pop
clc
stos
addr16
inc
nop
and
imul
mov
sbb
andb
clc
scas
cld
repnz
sub
sub
imul
jmp
adc
jb
cmp
out
xor
rcl
mov
sbb
xlat
mov
fimuls
sbb
stc
sbb
pop
gs
xchg
fists
sbb
mov
jp
lea
mov
fsubrl
nop
jge
cli
sub
sbb
insb
cmp
ja
sub
jl
adc
mov
xor
inc
es
jmp
shl
cmp
mov
pop
sbb
imul
mov
insb
xchg
dec
lods
adc
push
or
and
addr16
addb
iret
mov
and
ds
je
jae
cltd
jecxz
cmp
dec
mov
shrl
in
aam
scas
out
sbb
mov
xchg
lcall
movsb
nop
mov
mov
sbb
push
adc
std
xchg
jmp
js
shll
sub
mov
repz
fmull
mov
in
data16
dec
imul
sti
mov
popa
mov
mov
sbbl
xlat
lods
outsl
adc
les
int
adc
push
push
jle
sbb
jnp
inc
dec
int
dec
push
ja
in
cwtl
pop
push
mov
xchg
and
insb
sahf
add
and
incb
add
adc
hlt
sahf
pop
test
pop
test
js
dec
aas
movsl
out
fnsave
ja
clc
jmp
ja
push
loope
push
mov
test
aaa
in
lods
or
lcall
cmp
leave
stos
mov
movsb
jp
sub
into
adc
scas
js
xchg
jle
jae
imul
and
ja
pop
pushf
movsl
insb
add
jl
or
pop
push
xchg
shrl
ja
jle
add
or
sub
sti
fisttpl
cmc
sub
cmpsb
add
mov
stos
and
push
sbb
jle
jb
jae
movsl
push
test
insl
addr16
mov
lcall
jle
sub
aad
cli
push
or
lods
push
adc
mov
jle
aad
outsb
mov
les
jg
push
insl
xchg
xor
es
testl
xchg
ds
je
mov
inc
push
in
push
scas
pop
movsl
lahf
pop
mov
jo
adc
pop
inc
push
xchg
test
xor
stc
jne
cmc
ds
subl
cld
test
shrl
sbb
mov
and
mov
cltd
imul
or
mov
arpl
fcomps
fnsave
cld
lahf
mov
es
cmpsb
les
stos
mov
insb
cmpsb
mov
jle
mov
inc
cs
mov
and
mov
sbb
and
lahf
sar
mov
jge
mov
xchg
push
ss
sub
adc
sbb
jae
int
or
add
mov
mov
out
mov
mov
xor
or
cli
jae
or
jbe
sbb
xchg
addr16
inc
js
enter
jg
arpl
mov
cltd
aam
mov
cmp
insl
cmp
fwait
xchg
mov
and
pusha
andb
jbe
mov
xorb
pop
test
xchg
es
cmp
add
imul
xorl
push
or
loope
cmc
and
adc
cs
mov
xchg
jge
or
add
jno
fistl
imull
pop
dec
pop
fbstp
pop
xchg
fs
stos
mov
pop
and
push
loope
dec
int
xchg
popa
sti
ds
or
fs
jmp
movsb
sti
test
aaa
sarl
addr16
mov
je
or
fstps
data16
add
adc
jecxz
lcall
jae
or
dec
xchg
and
add
add
inc
ja
leave
sbbb
out
mov
cmp
in
stos
sti
mov
cmp
adc
lds
aam
adcb
cmp
sbb
rcrb
lock
lds
cmp
cmp
adc
xchg
hlt
or
pop
imul
fdivl
mov
ja
jbe
mov
leave
ljmp
push
and
or
test
aaa
imul
dec
les
mov
pop
sarl
dec
andb
jmp
cmp
imul
movsl
adc
add
in
into
inc
mov
xchg
fnstenv
std
out
mov
inc
imul
jp
jae
xor
clc
imul
jnp
jp
push
fsub
cwtl
adc
repz
movsb
cmp
jae
dec
jge
xor
enter
lret
add
mov
mov
dec
imul
cmp
push
sbb
cli
pushf
jbe
lcall
clc
and
mov
sub
fcompl
xorl
and
add
mov
stos
bound
sub
enter
jecxz
aas
int3
xor
ficoms
jl
cmp
data16
jg
jle
sti
push
mov
sub
out
mov
sub
jg
in
cmp
or
pop
out
sub
mov
je
jae
jno
aaa
jl
test
and
and
xor
inc
imul
fwait
clc
gs
lds
ret
in
and
sbb
cmpb
sbb
mov
xchg
add
std
les
fstp
lcall
and
xchg
addl
xchg
jno
repnz
xor
hlt
inc
je
inc
inc
test
aam
imul
aam
pop
sub
fdivrs
or
mov
mov
movsb
and
std
fidivl
sbb
push
pop
dec
repnz
ret
pop
insl
stos
mov
xchg
cs
das
aas
test
xchg
xchg
int3
and
adc
cmpsb
jle
cli
mov
inc
jl
adcb
push
outsl
mov
pop
adc
dec
mov
cmp
mov
jmp
mov
jns
sti
in
or
inc
fwait
popf
js
mov
test
cmc
dec
pop
dec
fildl
xor
and
pop
mov
and
dec
int3
push
adc
and
je
push
push
stos
jl
repnz
jb
out
mov
or
pop
cmp
ja
addb
stos
jmp
or
mov
dec
mov
sbb
mov
int
fsubrl
roll
xor
mov
or
pusha
test
je
dec
arpl
arpl
or
scas
sbb
xchg
repz
dec
inc
aad
pop
push
ret
repnz
sbb
fs
inc
jo
pop
fcoml
lods
mov
stos
out
sub
popl
push
es
adc
das
outsb
and
sbb
xchg
xchg
cmp
add
sti
cmc
inc
mov
sub
xor
cmp
std
lahf
mov
push
or
push
jle
test
es
ret
pop
cmp
jp
mov
or
popa
inc
ficoms
shlb
das
xchg
popf
dec
push
xorb
jae
push
outsl
add
cli
xchg
mov
mov
sbb
adcl
sub
mov
adc
mov
add
fbstp
mov
mov
test
in
mov
push
mov
or
mov
dec
jle
xchg
mov
and
and
data16
sub
lret
dec
push
aas
outsl
jp
adc
loope
cmpsb
push
hlt
jp
in
movsl
out
into
cmp
movsl
xchg
hlt
leave
mov
ficoml
mov
jo
xlat
addl
mov
mov
sbb
pop
pop
sbb
xchg
mov
mov
inc
repnz
cmp
sub
fwait
scas
shrb
es
ja
out
cwtl
adc
inc
out
ja
xchg
xchg
imul
into
jmp
enter
cmc
test
fimuls
add
icebp
lahf
fsubs
or
push
jecxz
scas
sub
xor
xor
stos
jg
fs
lahf
and
mov
es
pop
enter
sub
add
pmaxub
cmpsl
pushf
sbb
sbb
mov
mov
dec
push
or
mull
xchg
mov
dec
mov
cs
mul
xor
stc
add
or
sbbb
hlt
or
jo
lock
fldl
cs
pop
pop
clc
xor
jae
mov
inc
cs
pop
push
inc
test
pop
cmp
or
imul
sub
mov
inc
jl
imul
adc
movsl
xor
lret
xor
pop
push
stos
fwait
sbb
fldcw
outsl
bound
jbe
jb
clc
sub
mov
clc
ja
lahf
in
mov
fbstp
adc
imul
cmp
lods
xorl
cmc
test
cs
xor
fidivs
ja
in
add
fs
call
cmp
iret
lret
outsl
jbe
xor
stc
imul
jmp
ja
pop
loope
pop
or
add
jecxz
jns
pop
int3
lea
pop
ret
jo
outsb
mov
mov
jo
scas
in
or
xor
insb
pop
lret
adc
sarl
sub
test
je
push
lods
stc
daa
pushf
mov
cmc
aad
sub
leave
sbb
test
bound
jb
cmp
nop
cltd
fidivl
jnp
scas
aam
cli
jb
lock
inc
cmp
mov
sahf
cmp
xlat
pop
mov
shl
push
dec
aam
xchg
jge
sbb
arpl
adc
xchg
inc
lods
pop
pop
mov
pusha
sarb
mov
loope
ds
dec
arpl
dec
aaa
mov
add
lcall
fidivl
mov
mov
mov
outsl
aad
jl
hlt
cld
int3
pcmpeqb
cmp
mov
xor
imul
subb
push
jno
imul
fisubrl
sbb
cmp
cmp
jb
jae
iret
push
mov
cs
jns
insb
cwtl
stos
clc
adc
inc
movsb
cmp
and
scas
xlat
insb
push
xchg
mov
cmp
iret
int
xor
sahf
and
jge
add
clc
jae
sti
jb
ja
push
inc
adc
clc
xor
hlt
mov
dec
mov
sbb
nop
loope
add
and
jp
mov
push
popa
sbb
mov
testb
fcmovnbe
scas
aaa
add
es
daa
jl
out
cwtl
pusha
sahf
add
jmp
xchg
notb
mov
mov
divb
pusha
jbe
insb
cltd
mov
mov
das
repz
out
and
fwait
imul
push
sub
aad
sub
adc
mov
sub
imul
in
push
sub
ss
add
int3
jbe
mov
sub
mov
flds
sub
adc
insl
insl
mov
and
mov
test
adc
push
pop
sti
aas
mov
int
inc
repnz
imul
lret
test
add
xor
out
test
pop
movups
mov
dec
mov
shlb
pop
cmp
pushf
push
pop
jns
imul
cld
mov
jae
adc
ss
or
adc
cli
jmp
inc
shll
mov
or
push
das
pop
int3
push
hlt
inc
mov
mov
fisubrl
or
adc
mov
pop
pop
lret
lret
and
mov
and
out
sub
repz
rcrb
lds
stos
xor
cltd
jl
into
dec
outsb
and
adcl
lret
or
jns
ljmp
jns
xchg
out
xor
roll
mov
xor
out
fidivs
stos
mov
popf
daa
jne
jp
cmp
aaa
jbe
xor
mov
mov
sbb
int3
pusha
pusha
xor
insb
pop
mov
inc
cmp
dec
lds
into
sub
mov
mov
rcr
mov
test
out
cmp
lret
dec
into
jg
cs
mov
mov
fidivl
xchg
lods
mov
movsl
test
adc
mov
pop
lcall
scas
repnz
add
sub
test
pop
les
jae
inc
rcrb
cltd
pusha
es
test
jnp
adc
movsl
or
mov
scas
inc
data16
sbb
jae
sub
fwait
mov
xor
mov
xchg
lock
push
out
icebp
or
int3
inc
sbbl
push
in
mov
mov
cld
push
mov
fadd
int
mov
cwtl
std
jae
out
sbb
mov
in
xorl
xor
movsb
fnsave
dec
push
jo
adc
jo
or
mov
jne
shlb
cs
pusha
leave
daa
xchg
adc
aas
ret
jmp
cltd
jae
pop
je
or
sub
nop
mov
fdiv
pop
es
sbb
jb
pop
pop
xor
pop
xor
rorl
cmp
int
sbb
pop
mov
mov
test
mov
add
lea
push
test
ss
push
aaa
adc
notb
ret
andb
add
cmp
or
js
cld
nop
jbe
mov
movsb
cmp
or
sbb
add
bound
xor
cltd
jo
cld
pusha
xlat
pusha
or
jg
inc
xor
cmp
ficoms
or
jae
and
pop
icebp
sbb
aas
or
daa
xlat
jo
jle
and
pop
imul
push
jno
into
movsl
jne
push
sub
fwait
pop
sbb
cmc
sbb
cs
xor
mov
cmp
add
pop
lock
cwtl
int3
stc
jnp
mov
xor
dec
inc
mov
or
imul
jge
dec
lock
cmp
xchg
sub
mov
cmp
jae
cmpsb
dec
pop
cwtl
sub
sbb
pop
xchg
pop
pushf
or
sub
fldl
ffreep
pop
into
push
xchg
adc
lret
inc
xor
mov
das
mov
and
test
arpl
inc
stc
aad
jno
jbe
mov
int
inc
ds
fsubl
lea
sahf
and
inc
cs
leave
jne
pushf
pop
mov
ja
cmp
pop
or
push
inc
les
xchg
or
mov
test
fisttps
pushf
xor
out
loop
mov
cmp
pusha
aas
xor
int3
fidivrl
int
cmp
dec
pop
dec
out
call
fmull
xchg
sbb
cs
add
insl
jecxz
mov
inc
mov
xchg
in
outsb
mov
jne
clc
jle
je
jae
inc
subl
ds
sub
jbe
xor
cmpsl
lea
dec
test
dec
fs
inc
test
inc
cmpsb
shlb
jae
adc
lahf
cmp
in
mov
mov
inc
mov
cmpsl
sbb
dec
je
cmpsl
dec
sub
pop
aad
sub
mov
scas
imul
xchg
adc
fidivs
movsl
cmp
mov
jmp
mov
ljmp
nop
scas
mul
mov
jle
pop
jp
mov
in
and
fisttpll
sub
fwait
sub
push
pop
inc
mov
rcl
add
movsl
je
mov
or
addw
pop
pop
enter
test
scas
movsl
mov
and
mov
enter
mov
jecxz
jb
cmpb
or
adc
movsb
add
movl
sub
scas
sti
out
mov
ret
cli
mov
jge
movsl
andl
and
pop
sbb
cmpsl
in
ss
cmp
into
test
push
lods
cmp
insl
negl
fdivp
repnz
iret
cmpsb
jg
or
jne
pop
imul
ljmp
aaa
mov
outsb
jae
mov
jo
push
mov
mov
shll
pop
cmc
xchg
sbb
rcrl
ds
mov
shlb
movsb
stc
and
mov
rorb
mov
and
repz
cwtl
cmpsb
mov
lock
jge
cmp
aas
or
ret
ds
data16
call
test
mov
adc
fistpl
scas
mov
out
loop
fisubrs
xchg
roll
fstp
xlat
jg
jmp
cli
call
mov
out
jb
lret
popa
sbb
jae
sub
popf
xor
pop
jg
int
fmuls
xchg
mov
in
and
xchg
or
inc
mov
cmp
in
jae
ror
and
pop
mov
pop
popf
mov
imul
jmp
pop
bound
mov
cmp
mov
dec
push
add
mov
push
add
popa
test
inc
aam
ret
jp
cwtl
pushf
cmpsl
cld
xchg
mov
mov
sub
add
lods
enter
dec
lret
stos
ffreep
push
dec
jo
bound
sarl
loop
sbb
and
movsb
roll
cmovge
cmpsl
push
mov
ret
fidivs
push
inc
adc
fnsave
test
sbb
xor
loope
lahf
test
arpl
mov
stc
pop
in
fldt
pop
add
inc
xchg
or
inc
aad
movsl
fsub
xchg
mov
jo
test
je
pop
xchg
int3
pop
jne
aas
not
incb
insl
push
lret
push
inc
movsl
je
ljmp
test
stos
lods
mov
cmpsl
cmp
fisubs
adc
pop
dec
inc
mov
push
jne
movsl
pop
mov
int
or
pop
adc
test
fmuls
sub
leave
sub
jmp
test
xor
xchg
inc
cwtl
filds
jns
adc
test
push
push
scas
loopne
mov
mov
mov
or
jae
rorl
aas
sub
movsb
add
fisubrs
xchg
add
add
je
test
fcmovu
fdivrs
subl
aad
and
sahf
jb
imul
loop
jbe
cwtl
fs
push
in
mov
mov
jmp
mov
imul
add
dec
dec
clc
jecxz
jmp
rclb
mov
sbb
pop
or
adc
aad
push
mov
push
xchg
xor
icebp
test
push
jbe
xlat
or
aam
lahf
arpl
popa
clc
or
cld
cmp
lret
mov
xchg
xor
mov
jmp
jo
into
sahf
leave
mov
or
jl
call
sbb
pop
add
in
and
pop
ja
xchg
add
jl
idivl
push
push
pop
lds
push
jmp
ja
cmpsl
in
push
imul
or
and
jmp
out
add
push
mov
cmc
and
ja
sbb
mov
inc
pusha
pop
popf
add
inc
jbe
aam
out
lods
xchg
testb
lea
xor
mov
jecxz
adc
repz
xchg
mov
inc
movsl
cmpsl
add
adc
or
sbb
pop
test
out
mov
imul
xorb
cmp
leave
rolb
into
sahf
mov
fdivs
inc
adc
pop
mov
dec
fwait
mov
scas
ljmp
out
clc
push
js
lret
movsb
mov
fldcw
jb
jbe
fimull
jae
dec
mov
jmp
imul
dec
out
pop
dec
mov
sub
xchg
jae
sti
xor
mov
popa
test
cld
daa
push
or
rolb
arpl
xchg
mov
ljmp
lret
jbe
ret
mov
lea
inc
std
push
mov
int3
pop
pop
out
and
into
or
pusha
pushf
add
test
lret
out
mov
call
jle
or
push
inc
les
pop
cmc
fistpll
push
and
mov
test
cli
mov
in
push
or
or
aam
pop
je
inc
lea
repz
jo
pop
xchg
jae
sub
mov
inc
pop
xor
dec
movsb
insb
jo
test
jl
jmp
aaa
cmpsb
arpl
or
pop
jae
adc
test
arpl
cltd
in
mov
arpl
adc
lret
imul
and
pop
inc
cmp
out
mov
push
cld
rcrl
cld
aaa
pop
push
in
bsr
mov
inc
mov
sbb
inc
pop
inc
std
push
mov
pop
mov
xchg
jns
adc
and
sarl
sbbl
push
jns
pusha
pop
xchg
cltd
push
imul
sub
cwtl
pusha
dec
add
lret
pop
movl
xor
mov
out
pop
sysret
lods
je
mov
cmp
ja
arpl
out
insl
outsb
sti
lahf
test
push
mov
pop
shlb
jo
push
ja
stc
test
hlt
mov
aam
pop
lea
cmc
xor
cli
push
xor
repnz
roll
push
mull
push
dec
in
xor
inc
adc
nop
les
cmp
jecxz
subb
sbb
scas
fcoms
push
mov
or
sub
xlat
into
mov
jae
adc
xor
sarb
dec
cmp
nop
pop
orl
ja
jno
data16
and
jge
mov
imul
pop
pop
dec
std
sbb
jmp
pushf
arpl
dec
insl
mov
iret
mov
jae
adc
xchg
xor
je
int
cmpl
mov
fildl
xor
mov
jae
cmpsw
cmp
test
xor
mov
movb
mov
aas
repnz
cmp
adc
sahf
and
cmc
dec
xor
xchg
cltd
aas
test
xor
push
pushl
mov
ffreep
mov
out
std
sub
cmp
xchg
mov
pop
push
pop
xlat
mov
icebp
std
fsub
and
sbb
and
and
xlat
add
fst
lock
push
inc
daa
pop
jl
scas
adc
inc
scas
fsts
dec
mov
rcrl
into
jbe
pop
leave
mov
lods
cmp
xchg
jg
lahf
loopne
mov
hlt
das
inc
flds
in
popa
daa
mov
pop
movsl
jae
mov
movsb
sub
shlb
inc
mov
insb
adc
leave
mov
aaa
or
mov
dec
sarl
outsb
js
xor
dec
pop
or
jmp
cmp
cmp
jle
mov
pop
insb
ret
jle
pushf
int3
inc
mov
test
aad
les
ljmp
lcall
cmc
in
xor
ja
push
jo
jo
frstor
add
ret
lcall
nop
sub
mov
loope
jl
inc
xchg
arpl
addb
ror
push
push
pushf
dec
outsb
andb
jecxz
xor
mov
pop
imul
rclb
and
pop
mov
mov
mov
mov
push
imul
out
je
orl
push
and
add
scas
jne
adc
mov
pop
mov
daa
ret
and
or
mov
jo
arpl
cmp
xor
jb
out
add
add
fsubrs
xor
pusha
or
imul
in
popf
pop
mov
in
mov
inc
test
aad
movsl
jns
mov
or
inc
and
xchg
stc
cs
xorl
jecxz
sbb
out
std
rorl
insb
sahf
cmpsb
mov
jl
xchg
dec
mov
mov
cmp
jae
dec
stos
mov
sub
inc
add
push
xchg
lret
jae
fcompl
sub
xor
xorb
push
pop
inc
imul
out
xchg
insl
xor
dec
push
mov
sbb
lock
andb
addr16
lds
cmp
add
pushf
mov
mov
and
jae
mov
pop
sub
or
add
xchg
sbb
cld
mov
and
std
mov
inc
sbb
inc
pop
cmc
rol
lret
cwtl
stos
inc
sbb
rcrb
xor
sbb
les
and
outsb
sti
sbb
jbe
cmpsb
mov
movsl
mov
mov
aas
jl
es
pop
mov
pop
ds
jb
idivb
stos
mov
cmp
aaa
cmp
fmul
lret
test
jl
in
inc
xchg
jae
shlb
and
iret
pop
jne
aam
pop
leave
std
ljmp
in
jo
daa
mov
cld
ja
jno
adc
jl
sbb
cmp
bound
xor
mov
mov
int3
push
jae
repnz
fstpt
subl
xchg
push
je
jmp
lea
out
sbb
jae
in
dec
test
pop
sub
leave
les
test
insb
mov
mov
andb
pusha
xchg
xlat
test
not
ds
mov
lods
mov
inc
add
mov
lret
cmp
lock
cmp
cwtl
aaa
aam
pusha
js
das
test
mov
popa
sub
mov
jno
pop
gs
stos
dec
hlt
lds
clc
jae
outsl
rdtsc
xor
imul
out
xor
jae
adc
cmc
push
pop
adc
stc
adc
insl
dec
movsb
jl
imul
aam
push
jbe
mov
ds
insb
xlat
mov
jae
fstpl
stos
cmc
lret
mov
mov
and
dec
jp
cmp
inc
mov
fcom
es
push
imulb
mov
add
xor
inc
repz
xchg
adc
xor
stc
cli
xor
test
lret
xchg
fwait
call
mov
insb
or
pop
inc
movsl
dec
iret
mov
push
push
jge
lods
das
push
movsb
in
call
data16
pushf
cmp
and
mov
and
add
xor
ja
shr
ljmp
adc
and
lods
mov
imul
shrl
sbbb
es
sbb
jecxz
out
insl
sbb
jg
sub
loopne
sbbb
and
insl
dec
lcall
xchg
sbb
shlb
stc
inc
or
dec
int
ljmp
sbb
dec
test
movb
iret
imul
imulb
push
fldt
mov
cmp
and
or
or
cwtl
sub
hlt
lret
or
das
data16
mov
cwtl
insb
sti
ja
pop
test
cmp
mov
add
pop
cwtl
jo
jb
dec
pushf
inc
adc
mov
adc
test
add
jns
push
into
mov
outsl
and
mov
test
or
or
and
fwait
data16
jle
sbb
push
xchg
outsl
mov
sub
fiadds
jmp
dec
or
pop
jae
sbb
fcmovnu
arpl
add
mov
inc
addr16
mov
xor
imul
and
dec
insl
mov
push
mov
jae
scas
testb
sub
push
insl
iret
scas
icebp
inc
es
ja
ret
test
xchg
xor
push
andl
cmpsl
imul
pop
int3
cmp
mov
pop
sahf
mov
sbb
pushf
and
mov
fldenv
mov
xor
in
cmpsb
sbb
mov
cmp
lods
add
mov
xor
cltd
mov
adc
xor
bound
rorb
mov
jae
ja
sub
out
mov
imul
data16
mov
mov
dec
test
cmpb
xchg
mov
aas
popf
xchg
es
sbb
add
dec
lds
and
es
xlat
sub
aad
std
and
sub
addl
sub
imul
les
mov
clc
mov
cmp
mov
push
fcomi
mov
out
in
inc
std
push
mov
stos
out
jmp
push
pop
sub
mov
xchg
outsl
and
pop
and
and
insl
filds
aam
xchg
mov
sub
and
out
test
mov
pop
repnz
xor
shlb
dec
outsl
addr16
clc
nop
lods
inc
mov
movsb
pop
pop
dec
push
rcrl
sbb
std
adc
push
jge
iret
clc
xchg
ja
pusha
mov
mov
xor
mov
adc
cmp
and
and
aam
sbb
mov
mov
data16
sbb
fsubrl
idiv
pop
mov
mov
sbb
sub
inc
mov
jae
lea
mov
push
push
and
addr16
addl
mov
test
aaa
mov
fsubrs
popf
adc
jmp
orl
mov
clc
jae
jno
lds
add
mov
and
xchg
or
push
lds
mov
inc
xor
cmpsb
lods
jmp
loope
fs
add
insb
dec
pop
hlt
aam
repnz
mov
mov
mov
addr16
sbb
pop
icebp
stc
out
fucomp
push
pusha
jae
xchg
shll
pop
pop
fldenv
and
xchg
jne
clc
imul
scas
lcall
mov
incl
subl
or
jmp
out
loop
pop
repz
jb
mov
jo
pop
das
in
pop
pop
int
mov
jb
incl
insb
test
jbe
add
mov
testl
ds
cld
ja
aaa
jg
or
cmp
cwtl
enter
dec
sub
insl
addr16
je
aaa
in
arpl
xor
in
lea
push
pop
divl
or
mov
or
dec
outsl
sub
adc
mov
xor
scas
sti
or
fdivrl
cmpsb
test
in
cwtl
sbb
cmc
and
xlat
cmp
pop
cs
xchg
fisubrs
addr16
cwtl
jae
mov
push
xlat
sub
je
aam
repnz
pusha
lret
jg
clc
lea
imul
aaa
xor
imul
or
inc
or
fwait
mov
mov
adc
mov
adc
cmc
bound
out
xchg
call
mov
mov
imul
mov
sbb
fldt
sbb
sbbl
push
lods
cwtl
add
jmp
nop
stc
sbb
pop
shl
jle
daa
push
les
ds
jecxz
imul
and
push
mov
push
pop
inc
movsl
fisubs
fcoms
fsubrs
and
jae
jmp
adc
cmpl
mov
xor
faddl
inc
cmp
mov
cmc
gs
outsl
clc
jecxz
sahf
mov
adc
pop
clc
cmc
pushf
lock
and
scas
bound
adc
add
subl
fistps
mov
sbb
inc
sbb
mov
adc
mov
loope
and
std
imul
jl
cltd
pop
enter
push
in
lret
mov
addl
jae
and
cli
stos
adc
insb
cmpsb
idiv
popa
mov
push
scas
inc
jo
bound
push
leave
mov
aam
mov
sub
test
xlat
sub
and
sub
dec
xchg
stos
clc
xlat
xchg
adc
cmpsl
add
mov
xor
test
inc
jae
mov
movsl
int
bnd
fcompp
out
dec
pop
push
daa
repnz
sub
xor
cmp
jb
jmp
jae
out
gs
mov
jo
test
notb
daa
adc
push
pop
ficoms
xor
adc
jae
addr16
dec
mov
sbb
insl
outsl
fdivl
xor
dec
outsb
cli
pop
rcr
mov
push
mov
mov
arpl
scas
sub
es
mov
stos
jae
aaa
je
imul
and
adc
fistps
into
ficoml
lods
test
jmp
push
loopne
cmp
ss
push
loopne
orl
adc
jle
pop
cmp
mov
inc
jae
mov
adc
frstor
sub
cmp
int3
xchg
out
cmpsl
xchg
insb
add
cmp
or
and
pushf
mov
sbb
push
mov
int
adc
roll
mov
call
or
ljmp
test
add
mov
mov
jle
sub
aam
dec
adc
push
fsub
xor
cmp
mov
push
js
mov
jae
mov
mov
jge
dec
xchg
in
pop
jecxz
mov
add
and
mov
dec
cs
imul
adc
mov
xor
sub
push
mov
stos
test
mov
jne
cli
mov
pop
ret
xchg
cltd
repz
aam
push
fisubrl
ds
out
outsb
adc
cmpsl
cld
sti
pop
pop
xchg
insl
aaa
in
pop
repnz
and
ja
jnp
lahf
inc
xor
hlt
cmc
ret
add
movsb
lahf
jo
cmc
negb
cmp
xchg
lods
movsb
mov
fwait
mov
in
popa
mov
jae
pop
in
daa
stos
jle
adc
sbb
jl
cmp
jae
push
in
icebp
fucomi
pop
arpl
subb
rclb
ja
std
mov
fs
sbb
out
jno
cmp
xchg
jae
pop
lds
or
inc
xor
and
rclb
jecxz
push
inc
jns
pand
push
lcall
setns
sub
fadds
leave
or
repnz
xor
test
jle
sbb
clc
xchg
addr16
lds
add
lock
shll
fdivs
or
movsl
adc
incl
jae
jnp
lock
inc
sarb
ret
dec
and
inc
inc
sub
gs
cmp
push
lret
sti
orb
lock
std
sub
and
inc
divb
sbb
cltd
adc
and
dec
ja
imull
into
mov
scas
das
jb
push
mov
test
jl
call
bnd
gs
inc
and
rorb
xlat
sahf
das
movsl
xchg
popa
cld
add
jecxz
dec
cmp
ljmp
mov
pop
or
sbb
les
imul
adc
xor
scas
ja
xor
cwtl
outsb
inc
adc
sub
sub
cltd
lea
mov
and
and
add
and
shll
fidivs
xor
out
adc
xchg
out
push
iret
lahf
imul
pusha
dec
push
gs
mov
mov
pop
cmp
and
movntq
out
lods
lea
cmp
jae
subl
cmpb
dec
or
xor
mov
fs
mov
mov
ds
ljmp
das
pop
insl
lret
sarb
jns
imul
adc
bound
mov
repz
inc
jbe
outsl
xor
fbstp
xor
sub
inc
mov
das
inc
fst
cmp
cmc
dec
fcmovu
hlt
pop
add
in
jmp
mov
aaa
pusha
ss
hlt
and
mov
dec
inc
movsb
sbb
push
cwtl
pop
mov
call
jge
inc
ja
mov
es
insl
not
adc
xchg
push
das
xor
inc
add
jo
stc
call
and
stos
sub
je
push
mov
mov
fldl
ljmp
adc
push
subb
jle
arpl
ljmp
std
xor
xor
cld
inc
aad
hlt
out
sbb
adc
cmp
imul
adc
xchg
push
pusha
inc
inc
pushf
jecxz
sub
or
sub
ss
imul
ja
xchg
popa
in
hlt
std
push
pushf
clc
jae
inc
mov
sub
movsl
lahf
ficomps
subl
test
mov
push
and
mov
pop
push
cli
or
cmc
cmp
jl
test
ss
push
push
test
fstpt
fidivs
cwtl
aaa
ja
sub
cmp
rorb
adc
adc
gs
push
daa
pop
inc
stc
int3
xor
lods
adc
ret
repnz
add
push
std
ret
jns
mov
cmp
sub
fdivrl
adc
incb
test
dec
mov
dec
mov
xor
lret
push
jo
xlat
mov
mov
scas
movsb
jmp
cmpsb
cmp
lea
data16
aaa
mov
lock
shll
outsl
stos
mov
mov
mov
out
inc
into
push
rol
jge
in
push
ret
sbb
push
sbb
es
lret
das
push
aaa
xlat
lahf
and
fcmove
mov
xor
xchg
jmp
mov
mov
pop
outsb
cmp
js
loopne,pn
daa
std
imul
xchg
cmpsl
xorb
dec
pop
arpl
jg
adc
js
jmp
xor
dec
mov
mov
lret
inc
sub
adc
jmp
push
cmp
mov
addl
and
in
ret
mov
out
imul
adc
add
mov
aaa
jg
outsl
fldt
rcl
orb
divb
sub
jecxz
es
ds
sbbl
push
sti
xor
adc
push
js
sbb
outsl
enter
aam
jae
xchg
scas
jo
out
mov
and
addl
je
xor
sub
lret
mov
std
mov
mov
icebp
inc
push
repz
jl
int
lods
movsb
dec
data16
jae
mov
push
and
mov
xchg
inc
test
cltd
jbe
jp
inc
out
cmp
gs
push
das
or
dec
int
mov
and
mov
and
fnstenv
jge
sti
jns
out
orl
lcall
push
pop
dec
aaa
xchg
lahf
iret
mov
aad
pop
sbb
push
push
xor
addr16
sub
xor
insl
je
jno
cld
addr16
lds
and
incl
pop
scas
mov
jnp
out
inc
sti
scas
data16
lods
pushf
cmpsb
sahf
pop
sbb
push
int
pop
fdivrp
jg
aaa
mov
cmp
xor
cwtl
aas
jns
faddl
jns
or
jo
sbb
aaa
sub
and
mov
call
pop
pushaw
int
jmp
bound
in
pusha
test
in
sbb
mov
push
pop
negb
push
lods
call
addl
xor
insb
lea
out
and
jae
jns
movsl
pop
cltd
dec
mov
xor
hlt
mov
gs
sub
push
adc
xchg
int
sbb
fs
sub
mov
inc
sti
clc
movsl
mov
inc
jp
icebp
js
popa
xchg
insl
sahf
lcall
or
push
mov
adc
shlb
arpl
mov
addr16
pop
xor
sub
fs
dec
out
int3
sub
inc
iret
out
dec
adc
dec
stos
mov
imul
push
insb
sub
or
cmp
adc
loope
sbbb
pop
int
cld
sbb
addr16
add
mov
pop
ss
std
bswap
sar
pop
inc
sbb
add
xchg
cmp
divl
lock
imul
sbb
mov
fistpl
xchg
adc
aaa
js
cltd
mov
mov
in
lock
imul
pop
xchg
mov
jne
cwtl
dec
sbb
in
jo
xor
dec
repnz
or
push
int
frstor
sbb
pop
dec
jl
jae
sbb
fsubp
sub
xchg
or
movsl
std
lea
scas
mov
loop
pop
imulb
jb
mov
imul
jae
pop
ret
test
lds
push
jg
adc
jae
popf
push
mov
sub
cli
mov
sbb
inc
jle
mov
mov
sub
jecxz
pop
push
aaa
xor
into
cmpsb
aaa
pop
pop
mov
mov
out
cs
shr
cli
mov
inc
or
adc
ja
aas
mov
arpl
aaa
sbb
mov
daa
jl
mov
cmp
fcmove
scas
mov
lods
or
jae
das
sbb
aad
pop
imul
clc
frstor
jb
aam
mov
mov
dec
adc
jnp
inc
sbb
mov
xor
push
xchg
mov
mov
aaa
out
rcll
imul
pop
mov
push
ficoms
jae
and
xchg
jb
mov
lret
mov
sbb
cmp
adc
cmp
fldt
mov
in
jae
addr16
pop
in
push
aam
pop
das
nop
or
lahf
mov
and
xchg
out
cmp
stos
xor
jns
xchg
push
dec
add
xchg
mov
fdiv
inc
aaa
jo
shlb
jle
into
add
divb
stos
out
xorl
jge
sbb
inc
addl
push
aaa
sbb
rcl
out
fucomp
stos
and
imul
ffree
stc
sbb
lret
mov
lcall
lcall
xor
aaa
push
mov
cmpsb
cmpsb
cmp
jne
js
fisubrl
xchg
sti
mov
test
jg
and
mov
pusha
cmp
jmp
test
mov
cmc
ret
push
fiadds
mov
clc
cmp
mov
ja
push
xlat
mov
jns
div
aaa
dec
clc
mov
mov
popa
sbbl
out
jns
or
ret
mov
test
mov
sub
pop
dec
push
jge
xchg
pop
stc
push
jmp
pop
and
add
jae
cmc
notb
daa
lods
jae
xlat
or
mov
push
sub
rorb
bound
popf
out
sub
lret
push
mov
shll
insl
sbb
sbb
jns
fcoms
ret
xchg
scas
in
in
dec
fistpll
or
fmuls
push
out
dec
inc
and
mov
stos
imul
stc
pop
xchg
mov
mov
jle
fstl
mov
cmpb
xchg
jbe
jecxz
imul
loopne
xlat
pusha
push
sub
int3
xor
pop
mov
hlt
gs
add
mov
xor
dec
xchg
lock
punpckhdq
pop
into
pop
jecxz
mov
cmc
loope
inc
mov
mov
scas
jae
popf
mov
xor
cltd
adc
xchg
les
dec
jne
mov
shlb
inc
mov
mov
in
push
fdivrl
mov
fmul
cmp
mov
aaa
xor
or
jp
imul
cmc
jns
daa
gs
xor
mov
rorl
sub
and
lret
pushf
aaa
repz
xchg
adc
ret
dec
int
pop
xlat
push
aam
sbb
inc
cmp
insb
and
mov
xchg
ret
cmp
jae
jecxz
sbb
js
mov
cld
clc
ja
dec
movsb
pop
jo
xchg
jnp
or
adc
pop
sbb
cmp
mov
cld
or
movsb
pop
flds
lods
int
or
xor
jb
cmp
test
xor
loope
jb
test
rcrl
inc
mov
xlat
xchg
push
fwait
cltd
int3
cmp
ret
popf
cmp
sub
pop
push
test
mov
jmp
adc
pusha
js
pop
cwtl
imul
setle
push
sbb
das
mov
arpl
lret
xchg
add
popf
mov
pop
dec
and
or
jno
dec
sbb
mov
lcall
fidivrl
and
sarb
sub
jo
cmp
shll
jo,pt
daa
movsl
jae
arpl
fnsave
scas
jae
fstl
dec
aas
add
push
add
sbb
cmp
cld
mov
jge
mov
iret
jo
insb
and
pop
fnstenv
stos
in
cmp
and
mov
cmp
nop
mov
xor
mov
aam
je
push
shlb
out
jge
xchg
xor
and
pop
int3
push
fidivs
out
pusha
xor
lock
push
ja
clc
ret
mov
mov
sarl
xchg
dec
movsl
mov
and
frstor
imul
test
mov
jb
aam
push
sbb
sub
leave
andl
imul
push
push
cs
cld
pusha
in
mov
outsb
mov
aam
push
call
lods
pusha
jno
push
cmpsl
mov
and
popa
jne
js
push
push
es
lcall
rorb
pop
dec
mov
sti
imul
lods
lcall
xlat
addr16
notl
jecxz
movsl
or
lea
pop
out
in
and
push
jl
ds
jae
cmpsl
jae
and
divb
and
ja
iret
out
pusha
xor
shlb
aam
das
inc
sub
mov
shrl
jae
cmp
test
sub
xor
xor
es
jae
pop
sbb
into
pop
xchg
mov
pmullw
sti
stos
fsubrs
rolb
into
popf
mov
into
push
imul
imul
fsubr
cmpsb
bound
add
push
jl
outsl
scas
cmp
orb
mov
daa
cs
aaa
mov
dec
les
hlt
dec
int3
jg
or
outsl
jl
xor
and
es
lds
data16
xchg
in
cmpsl
imul
mov
cmp
sbb
cmp
test
xchg
stos
ss
imul
test
test
mov
cld
and
aas
mov
mov
fcomip
push
mov
and
sbb
dec
pop
int
ljmp
and
jae
cwtl
jp
jb
movb
mov
imul
cltd
jnp
out
xchg
cmp
jno
inc
jns
xchg
cmp
cmc
leave
pop
pusha
andl
jae
popa
pop
loopne
mov
sub
pop
mov
xchg
xor
add
inc
loope
pushf
fs
mov
ljmp
push
jae
repnz
ja
les
stos
inc
and
add
insb
mov
daa
gs
in
out
or
xor
add
lock
ja
rcrl
mov
sbb
mov
insb
inc
int3
sub
dec
lcall
xor
ja
push
leave
ljmp
inc
xor
loopne
xor
aaa
inc
aaa
pop
in
jns
aad
pusha
popa
jnp
pop
cmp
das
divb
lea
mov
dec
lock
sub
mov
push
inc
dec
pop
sti
inc
insb
ss
out
addb
mov
and
push
nop
ror
mov
and
lcall
dec
push
in
ret
adc
addr16
pop
push
jmp
add
icebp
pop
dec
int
aas
jl
lods
mov
pushf
add
mov
pop
mov
xlat
cs
rcll
jo
imul
adc
push
dec
fwait
pop
cmp
js
insl
jecxz
xor
into
pushf
xchg
pop
dec
mov
xlat
dec
mov
mov
mov
pop
mov
jno
lods
les
push
xor
sbb
mov
dec
lea
data16
stos
ret
test
mov
xchg
mov
data16
jns
fldl
sbb
lds
xchg
cmpsb
aas
xor
leave
xor
sahf
stos
fdivrs
mov
into
jge
mov
jl
aam
adc
ret
mov
cmp
pusha
in
inc
push
lret
fdivs
jl
cmp
imul
mov
test
ret
adc
repz
outsl
jl
loopne
mov
movsl
daa
adc
stos
adc
loopne
xorl
into
ja
incb
insl
imul
xchg
shl
sub
cmc
test
push
hlt
shl
mov
xor
push
push
hlt
jne
add
jns
aam
dec
icebp
outsl
iret
es
fbstp
inc
xor
jbe
dec
in
lock
xor
push
mov
mov
mov
jae
mov
fldt
leave
bound
orb
pop
inc
mov
sub
in
cmp
sub
mov
mov
in
sub
mov
imul
ret
cmp
jge
or
xchg
push
imul
inc
imul
xchg
ret
adc
mov
or
in
jae
xchg
xor
pop
dec
std
cmp
imul
test
dec
pop
subl
ljmp
sbb
mov
and
loop
std
imul
mov
shrb
shll
int
sub
outsl
sub
daa
push
das
dec
mov
movsl
mov
roll
push
fldcw
dec
and
push
scas
cmp
int
mov
jb
out
mov
iret
cld
leave
mov
pop
xlat
dec
fs
fcomp
cmc
sub
jbe
arpl
movsb
xchg
jge
sub
jns
aam
lods
decl
mov
ja
clc
inc
fdivp
loope
dec
cmpsl
sub
adc
jne
leavew
mov
loope
jnp
xor
push
lds
scas
les
or
pop
xchg
jae
and
push
sarb
pop
mov
mov
xchg
aad
aam
ja
mov
outsl
dec
cmp
rorb
call
addr16
adcb
xchg
loopne
mov
dec
cwtl
push
scas
cltd
movsb
fsts
nop
push
out
es
mov
pop
imul
je
addr16
xchg
inc
sahf
jmp
pusha
sub
iret
lock
sub
inc
out
sub
clc
in
jmp
push
sbb
dec
shrl
lds
insb
mov
xor
jmp
pop
mov
and
pop
xchg
imul
in
in
mov
xor
scas
pop
mov
inc
push
mov
jbe
arpl
or
lock
inc
out
xchg
lahf
nop
out
or
js
sub
pushf
or
lcall
inc
repnz
xchg
push
jae
jle
adc
sbb
jne
pop
inc
inc
cmp
xor
xorb
out
inc
out
adc
movups
sub
loope
xor
xchg
and
mov
push
cltd
lahf
mov
lods
lahf
cmpsb
scas
cltd
adc
inc
push
or
dec
or
and
pushf
rorb
push
add
pop
mov
add
cmc
shlb
fmulp
xchg
sar
cwtl
pushf
inc
adc
fldenv
out
rcrl
and
outsl
cmpsl
call
xchg
cmp
mov
mov
or
mov
outsl
test
ss
xchg
xlat
testb
aaa
mov
jb
mov
pop
leave
lds
push
xchg
mov
dec
in
ja
shrb
mov
jns
pop
mov
bound
xor
pop
mov
cmp
mov
push
fidivl
xchg
lret
sub
add
dec
aam
mov
adc
jns
dec
pop
ja
mov
sbb
jno
mov
xchg
pop
js
ret
mov
lods
popf
xchg
mov
xor
lahf
jo
jae
mov
xchg
inc
ret
scas
leave
mov
stc
pop
in
sti
inc
sar
rcll
xchg
push
mov
jae
inc
and
outsb
or
jmp
adc
mov
xor
jae
int
imul
add
xor
ja
jne
jbe
shrl
adc
jle
and
inc
scas
test
push
mov
jne
insb
stos
mov
dec
aam
hlt
fcoms
sub
int3
xchg
xorb
imul
hlt
js
push
jbe
adc
push
insl
xor
push
push
mov
sbb
add
aam
in
jae
inc
mov
xchg
into
pop
dec
lods
ret
dec
sub
cmpsb
sbb
mov
and
adc
mov
js
mov
in
inc
push
sub
sub
test
imul
mov
mov
test
imull
xor
and
aaa
jae
sbb
test
aad
bound
mov
jns
int
sbb
in
imul
movsb
inc
and
into
jb
imul
and
cmp
push
stos
mov
mov
movsb
mov
paddq
imul
test
aad
or
sub
cmc
in
lret
and
push
inc
mov
pop
sbb
imul
shrl
insb
mov
xor
in
idivb
adc
mov
ja
sti
test
out
xor
xchg
outsl
outsl
mov
push
scas
push
rcrl
aam
mov
mov
adcl
cmp
bound
jns
jae
jnp
inc
adc
mov
sub
faddp
and
inc
inc
adc
or
shl
stc
test
pusha
subl
dec
jno
pop
in
sbb
stos
xchg
xchg
mov
inc
in
xchg
sub
es
imul
jg
adc
sbb
aas
inc
rorb
mov
int
push
out
es
sub
mov
jle
mov
stos
sub
cmp
aam
in
jg
ds
mov
loop
ss
jno
movsl
mov
mov
lret
int3
cs
jl
sub
push
fwait
mov
cmp
rclb
and
fimull
inc
insl
push
cmc
repnz
cmp
inc
test
cs
ljmp
in
and
lds
cmpsb
clc
push
mov
mov
push
inc
clc
test
ficoml
jae
dec
hlt
insb
int
lret
sbb
sti
stos
mov
in
push
orb
scas
dec
cmp
and
pusha
into
fsubl
jg
jb
or
mov
pop
movsb
test
jae
ret
pushf
rcr
aas
repnz
jge
fnsave
adc
sti
int3
or
out
hlt
push
stos
imul
pop
mov
jo
mov
cmp
xchg
cmpb
sti
stos
jge
xor
or
cmp
mov
pop
cli
mov
movsb
push
xchg
jp
out
insb
push
out
adc
scas
mov
sub
lret
xor
xchg
pop
imul
jge
sbb
aad
rcrl
push
sub
inc
hlt
push
cmp
push
dec
sub
mov
push
cmp
ljmp
add
sub
sbb
fidivl
mov
adc
out
daa
mov
sbb
ficompl
sti
subl
push
add
aaa
icebp
dec
mov
sbb
pop
push
test
imul
movsb
mulb
jb
push
push
mov
fucomi
jecxz
imul
xor
scas
xor
aaa
mov
xor
ja
out
pop
and
cmc
outsb
and
mov
test
pop
or
test
mov
int
or
jne
fs
lods
adc
inc
in
pop
mov
jge
addl
fldl
mov
add
lret
hlt
xchg
jae
aaa
movsb
mov
inc
insb
fnstcw
or
push
cmpsl
loop
cwtl
inc
or
lcall
aam
push
jmp
jnp
mov
jae
cmpsb
xor
pop
aad
mov
inc
and
icebp
repz
jecxz
pop
cld
fidivrs
fs
mov
push
cmp
int3
ret
pop
or
adc
xlat
sub
mov
mov
mov
lcall
and
ljmp
and
or
mov
pop
mov
adc
out
jl
adc
jmp
jl
scas
adc
cmp
adc
ljmp
out
xchg
outsl
lods
xor
dec
ja
mov
jge
mov
xchg
sbb
lea
push
and
mov
pushf
in
ja
xchg
mov
xor
pop
cmp
aas
mov
xchg
aad
push
into
xchg
xor
xor
mov
inc
push
rorb
pop
dec
repz
repz
xor
cmp
loopne
pop
into
mov
cmc
sub
daa
in
lds
test
xor
jne
cwtl
cld
push
mov
push
addb
mov
inc
add
sub
scas
cmc
aaa
pop
inc
sub
dec
cmc
dec
sbb
sub
test
jecxz
into
movb
sbb
imul
pop
push
std
addr16
xchg
mov
adc
ror
lahf
adc
push
rolb
mov
ja
sarl
and
dec
mov
loop
rorl
test
pusha
sbb
pop
cmp
cs
fidivrs
or
clc
jo
std
call
mov
das
mov
mov
jbe
js
mov
cwtl
mov
aam
cmpsl
sbb
cmc
jl
lods
cltd
cwtl
fildll
mov
lret
arpl
rcr
inc
pop
xor
int
adc
pusha
stc
aam
sub
hlt
in
jle
fidivs
jg
xchg
cmpsb
mov
xchg
sahf
int
xor
jp
lahf
sub
dec
mov
gs
mov
outsb
mov
push
popa
fsubs
xchg
arpl
ds
loopne
push
cmp
xchg
adc
xchg
in
xchg
adc
mov
hlt
lret
scas
shrl
ret
ljmp
pop
aad
test
out
inc
sub
sbbl
ret
in
xchg
ss
jnp
test
jb
sahf
adc
add
lock
repz
jle
and
mov
fdivrs
stc
movsl
mov
rolb
lahf
add
mov
adc
sbb
jns
push
jge
loopne
sbb
pop
sub
outsb
xchg
add
ja
lret
mov
daa
repnz
stos
cwtl
shr
popa
inc
test
rcl
test
dec
insb
sahf
inc
xchg
inc
push
cwtl
jae,pt
jge
cltd
rcll
xchg
mov
gs
in
pop
cmp
in
push
jnp
sahf
adc
fcompl
testl
fs
sahf
add
pop
mov
call
push
inc
das
adc
jmp
lahf
and
sub
and
scas
repz
hlt
repz
push
in
dec
int3
jecxz
mov
aam
jb
dec
pop
jo
iret
arpl
sub
insb
and
repz
pop
mov
out
jb
addr16
xor
scas
mov
and
inc
loope
test
cmp
lret
fidivs
mov
or
jnp
push
mov
in
scas
orl
inc
push
stos
mov
clc
cmp
in
jns
scas
hlt
or
out
lret
pop
pop
push
push
jl
insb
add
or
dec
xlat
add
stc
in
in
add
imul
xchg
and
pop
hlt
roll
xchg
jmp
xchg
iret
and
mov
sahf
mov
sbb
mov
ja
insl
sti
mov
aas
movsl
inc
push
push
push
insb
cli
movsl
jo
dec
lret
adc
xchg
repz
pop
mov
mov
aas
xor
mov
cwtl
sbb
int
arpl
movsl
add
pop
xchg
adc
jnp
subb
data16
sbb
add
movsl
jp
lods
popa
and
jo
std
stos
pop
xor
mov
dec
or
sub
push
cmc
and
stos
mov
sub
pop
dec
out
lcall
ficomps
shl
sbb
dec
adc
je
js
cs
mov
pusha
dec
and
pop
sub
push
cld
sbb
lds
fsts
mov
inc
scas
int
adc
add
mov
faddp
or
jae
lret
xlat
aam
out
add
inc
je
iret
mov
xchg
daa
xor
insb
inc
lea
lods
int3
or
add
sahf
jne
test
mov
xchg
icebp
int
out
adc
mov
mov
es
push
cli
test
ja
or
pop
out
in
aas
mov
dec
ss
mov
push
jl
lock
jae
jg
push
xor
lock
fcmovnbe
mov
bnd
push
cmc
jo
add
mov
push
cmpsb
ficoms
mov
xchg
dec
test
xor
subb
in
ret
add
mov
mov
aad
inc
in
mov
movsl
roll
and
imul
lret
or
xor
outsl
sarb
adc
inc
add
xor
imul
jg
cltd
xor
mov
pushf
imul
and
push
jae
lea
loop
and
push
inc
repz
sub
stc
cmp
sbb
mov
mov
ret
sub
adc
jb
std
pusha
pop
jae
sarb
aam
or
dec
nop
inc
sub
jecxz
pop
gs
jo
jg
mov
add
insb
fidivs
fldt
sbb
imul
icebp
js
mov
inc
mov
jecxz
data16
pop
sbb
and
mov
dec
je
push
loope
nop
and
inc
pop
or
xchg
mov
jae
shrl
xchg
jae
jle
in
call
lret
adc
cmpsb
vmread
loop
cltd
data16
dec
inc
ret
push
ss
mov
je
cmp
inc
xor
lea
mov
jae
enter
xchg
cli
inc
xor
jo
push
data16
scas
jae
mov
aam
push
mov
pushf
insb
fcomps
mov
inc
lret
aaa
push
mov
daa
lock
ret
push
pop
pop
ja
xor
cmpsl
int
adcl
loopne,pt
idiv
cmpsb
ret
pop
adc
inc
pop
test
jle
outsb
bound
rcll
aad
jbe
sti
jbe
cwtl
clc
jae
popf
mov
dec
xchg
adc
push
out
js,pn
jecxz
in
mov
div
rorl
imul
xchg
and
inc
cmpsb
insb
xlat
dec
gs
loop
hlt
imul
sbb
mov
adc
jp
test
out
fcomps
pcmpeqd
xchg
pop
mov
push
or
inc
cmp
cmp
mov
and
inc
pcmpgtd
sub
pop
outsl
cmp
rcrl
adc
movsl
fwait
imul
mov
outsl
outsb
xor
gs
cmp
pop
mov
mov
imul
repz
and
mov
xor
xor
push
into
lock
add
adc
push
and
xchg
push
out
cmp
xor
insb
stos
or
or
sti
add
bound
mov
out
mov
mov
pusha
jbe
pop
or
insb
arpl
pop
je
mov
jge
mov
ss
adc
inc
hlt
insb
pop
mov
dec
push
lcall
ljmp
jno
xchg
test
pop
xor
jl
xchg
push
xchg
xchg
inc
ja
cmp
xorb
inc
jecxz
in
mov
mov
jmp
xchg
mov
mov
jmp
jp
mov
mov
xor
xor
data16
orl
clc
popf
insl
push
sbbb
inc
jo
es
xor
mulb
cs
loope
add
jp
and
or
lret
cs
andb
addr16
cli
mov
push
jp
fcmovnb
mov
sub
test
and
incl
das
xchg
adc
cltd
sub
jg
sub
sbb
add
popa
inc
sti
add
cmp
fmul
mov
xor
nop/reserved
js
movsb
or
mov
popf
add
mov
cs
mov
mov
pop
lret
mov
stos
jae
sub
push
fisttps
mov
push
mov
addb
xchg
xor
cmp
aam
adc
jle
subb
fwait
mov
shrl
mov
sub
push
test
lret
cmpsl
popa
xor
inc
inc
loopne
xchg
fidivrl
cs
jb
loope
mov
inc
push
stos
pop
pushw
mov
pop
sub
ss
es
xor
or
inc
push
icebp
daa
outsb
ljmp
adc
cli
pop
std
fisttpl
add
mov
xorb
xor
loop
fistpll
and
andl
jle
jb
sti
jo
imul
dec
icebp
popa
aaa
sub
mov
mov
pop
fcmovne
mov
sub
scas
pop
cld
xchg
addr16
inc
jnp
xchg
mov
dec
push
inc
xchg
jg
int
mov
in
lret
cmc
or
adc
in
addr16
jle
setne
fdivp
mov
test
in
aam
pop
xchg
aas
add
lds
movsb
inc
sbb
pop
jne
mov
mov
inc
lret
arpl
inc
inc
mov
out
add
mov
dec
or
ss
aaa
mov
int
jl
adc
mov
xchg
mov
cmpsb
inc
sub
xchg
mov
insb
cmp
jmp
cmp
mov
jae
inc
divb
js
sub
dec
aam
add
ja
cmpsb
cmp
jb
adc
pop
inc
int3
add
adc
in
jne
aam
or
push
lret
clc
jle
sub
push
outsb
lods
ss
xor
dec
or
or
fisttpll
mov
sbb
xchg
pop
out
loop
jbe
cwtl
jl
loop
fdivs
int3
jae
aaa
jle
shrb
ja
pop
lahf
sti
das
in
and
xor
push
into
lea
loopne
lahf
xchg
test
sub
pop
inc
imul
cmp
int3
fisubl
shlb
loopne
adc
jns
hlt
xor
and
mov
sbb
outsb
xor
ja
mov
sbb
fnsave
std
pop
imul
mov
push
hlt
ret
push
imul
imulb
add
and
test
dec
xchg
jle
ret
mov
jns
test
daa
mov
cmp
adc
fwait
dec
shrb
sub
sub
jns
ss
lea
and
dec
int
es
adc
jne
cwtl
out
in
push
push
mov
fsubrl
cmp
jae
sarb
and
movsb
jne
adc
sarl
ja
jle
imulb
sbb
jb
add
mov
jne
adcb
push
or
sbb
xor
dec
cmp
shrl
sub
lea
int
arpl
mov
xor
aam
in
lret
push
ss
jno
stos
pop
cmp
mov
push
add
xor
test
xor
in
outsb
inc
lret
inc
lds
je
pop
pop
sub
push
xchg
mov
mov
cli
pop
inc
mov
lods
xor
test
into
push
in
mov
popf
mov
jmp
testl
mov
inc
xchg
mov
imul
test
mov
sbb
lea
mov
ret
jecxz
sub
aam
stos
imul
xor
ja
stc
pop
out
aam
pop
xchg
or
sub
loop
jg
add
aam
stos
xchg
js
dec
sub
dec
outsb
aaa
rcrb
cltd
mov
jp
and
and
mov
xor
scas
iret
imul
push
ret
idivb
mov
fnstenv
pop
mov
xchg
cvtpi2ps
sub
xor
fld
pushl
inc
and
push
es
sub
pop
aaa
pop
inc
in
pop
out
inc
sahf
int
test
in
pop
sub
jae
mov
xchg
mov
mov
mov
insb
adc
daa
cmc
mov
dec
call
into
fcmovnu
push
scas
pop
jae
int
sbb
addr16
filds
sub
ret
sbb
scas
cmp
push
and
push
push
add
je
xchg
iret
pusha
cmp
mov
enter
test
mov
int
dec
adc
or
dec
mov
mov
or
loope
jb
imul
movsb
jnp
arpl
dec
pop
dec
shll
cmc
adc
lret
jl
loope
fcmovu
cmp
push
shr
std
std
jecxz
jo
ficompl
call
ror
pop
jbe
push
inc
fldt
jmp
adc
and
jecxz
mov
nop
loope
push
push
imul
pop
pop
out
inc
cmp
adc
pop
repz
adc
clc
push
ss
es
lret
dec
or
inc
and
and
imul
push
lret
push
loop
aam
idivl
sbb
mov
jns
hlt
push
inc
pop
sbb
xchg
xor
loopne
fmuls
mov
fmull
incl
dec
dec
cltd
jmp
mov
out
subb
pop
mov
adc
hlt
pusha
lods
sarl
outsb
mov
pop
mov
jno
inc
nop
cmp
cmp
mov
push
shll
jae
jmp
icebp
iret
pop
xchg
fstl
mov
subl
cmp
mov
push
pop
cld
push
and
pop
push
inc
dec
jno
sti
cld
std
dec
sbb
repz
jns
sub
cli
add
add
cmc
negl
jbe
mov
push
sub
movsb
gs
arpl
adc
inc
idiv
dec
cmpsb
fisubrl
rolb
cmp
movsl
jmp
out
dec
cmp
movsb
adcb
popf
jo
push
push
mov
je
lds
out
sbb
orb
xor
mull
inc
push
sbb
mov
rorb
je
pop
jl
movsb
mov
sti
outsl
xor
aas
mov
fidivs
and
mull
and
movsl
jl
aas
push
sub
rcl
ss
jbe
negl
mov
mov
jnp
test
call
data16
cmp
mov
fiaddl
ja
mov
sbb
idivl
and
jae
aaa
push
mov
cs
and
inc
and
and
hlt
addb
jae
rorl
and
adc
fcmovnu
andl
pop
das
clc
xchg
and
repz
mov
inc
cmc
adc
fdivs
jb
mov
xor
push
sbb
inc
mov
inc
jno
adc
fwait
mov
sbb
inc
pusha
push
mov
out
insb
push
xor
add
adc
mov
cmp
stc
outsb
pop
xor
or
push
mov
cld
in
into
pop
jl
icebp
cmp
add
imul
sub
in
repz
fcomps
outsb
fs
or
adc
inc
fstpl
stc
and
ret
out
jecxz
out
test
xor
lret
aam
fldl
xchg
jecxz
pop
ja
lcall
xor
pop
negl
jge
push
xor
test
mov
adc
fwait
xchg
push
sub
cmpb
fwait
adc
inc
mov
imul
jae
dec
ret
jle
int3
adc
dec
pop
push
mov
stos
std
sarb
cmp
pop
insb
aad
arpl
int
sbb
mov
push
sub
lods
and
mov
jg
cltd
push
bound
pusha
mov
mov
xor
ja
mov
fldpi
push
cwtl
mov
xchg
sub
mov
inc
lret
and
arpl
cmp
movsb
mov
cld
iret
popa
dec
mov
fdivrl
mov
arpl
into
fisubrl
add
pop
mov
sbb
iret
sub
insl
add
mov
add
mov
int
fsubrl
mov
inc
inc
scas
int
imul
inc
sbb
sub
dec
cwtl
and
jl
in
mov
pop
adc
pop
jne
cs
xor
dec
aam
and
jle
mov
sti
mov
fnsave
mov
lds
enter
data16
jb
cmpsb
and
jb
mov
adc
add
push
or
jo
or
andb
ds
je
cmpsb
jecxz
out
pushf
in
adc
test
xor
mov
ret
mov
dec
subl
add
mov
mov
cmc
push
shlw
pushl
lret
and
inc
aam
sbb
or
notl
fucompp
and
ja
je
cs
sub
add
idivb
pop
pusha
sub
lock
jae
inc
push
dec
jmp
imul
cmp
push
mov
jo
lea
data16
xor
aaa
int3
pop
lret
jne
add
shlb
or
fbstp
sbb
jecxz
add
add
jbe
adc
mov
sub
inc
sub
xor
int
pop
xchg
jae
inc
sbb
mov
sbb
sub
cmp
sbb
aad
repz
sbb
repz
fst
inc
jbe
in
cmp
stos
inc
loopne
shlb
sub
je
inc
les
mov
dec
popa
stos
imul
xor
ja
notl
cwtl
push
dec
lret
adc
insb
movsb
imul
jnp
cmp
popa
popa
adc
cs
push
stos
fisubrl
xor
add
xchg
jmp
in
jno
jecxz
lahf
mov
push
and
adc
inc
inc
mov
movsb
xrelease
push
and
add
subl
out
mov
jmp
mov
aaa
cmp
mov
pusha
xor
call
dec
int
mov
mov
mov
xchg
xor
popa
mov
mov
rcrl
aam
daa
mov
mov
mov
xchg
jb
xchg
xor
mov
push
push
or
pop
int3
and
in
in
add
cmp
or
fwait
push
stos
ret
mov
dec
pushf
push
push
add
jl
mov
imul
out
in
add
fistpll
mov
mov
sbb
push
popf
movb
pop
repz
sub
repz
daa
std
push
nop
xorb
lcall
stos
mov
ja
mov
subb
mov
fstl
pop
pop
das
adc
ja
cli
inc
push
and
and
sbb
mov
sbb
mov
xchg
movsb
js
mov
add
les
imul
js
test
xchg
in
sahf
int3
pop
jo
xchg
mov
or
adc
xchg
out
sub
out
subl
adc
xchg
cmpsb
xchg
add
cmp
mov
jecxz
lods
push
loope
sti
out
int
pop
fistl
into
cmpsb
pusha
in
test
push
jg
clc
mov
lds
ficoml
mov
ret
pushf
cli
xchg
xchg
iret
inc
ds
sbb
adc
jmp
sahf
stc
sbb
mov
sbb
ret
push
sbb
lcall
adc
int3
in
lret
and
ja
les
aaa
ss
insb
int3
xchg
xor
movsl
lea
shll
data16
mov
jo
sub
mov
cmc
je
adc
cmpsl
aaa
adc
fldl
scas
mov
sbb
pushf
adc
in
bound
stc
adc
repnz
adc
test
insb
cli
cmp
sub
icebp
dec
hlt
xor
and
dec
nop
pop
pushf
sbb
sub
adc
inc
data16
push
jo
imul
jno
mov
push
lret
loop
jl
fistpl
jae
loope
outsl
bound
les
lcall
or
aam
orb
push
jae
rcrb
cmp
pop
ja
outsb
xor
pop
outsb
inc
jmp
std
xchg
pop
aaa
mov
int
pop
dec
jae
push
sbb
and
mov
fisttpll
cmp
pusha
fsubp
push
inc
dec
or
jmp
jecxz
cmp
fsubrs
mov
inc
add
pop
addb
jge
call
cmp
xchg
dec
add
cmpl
gs
mov
mov
scas
inc
mov
jae
or
into
in
jg
popa
jo
pop
pusha
ret
fstps
add
xchg
adc
or
add
and
aaa
jae
sub
sub
jb
je
pop
in
lret
fs
jne
push
xchg
xor
out
imul
orb
push
mov
mov
je
push
jo
adc
jo
std
adc
out
push
cwtl
jnp
jo
mov
pop
popf
fidivs
mov
pop
jno
pop
adc
andl
outsb
mull
popf
icebp
sub
and
inc
xchg
push
and
gs
add
sub
or
push
imul
mov
bound
ja
inc
jae
pop
filds
mov
xor
aad
lds
aad
adc
xchg
sub
push
push
dec
cmp
jae
imul
xor
jae
lods
xor
sub
sar
insb
sbb
das
sbb
push
out
xor
daa
imull
push
or
push
dec
jae,pt
mov
sub
inc
icebp
pop
or
jbe
aas
fmuls
cmp
hlt
mov
sub
lahf
ficompl
in
dec
pop
sahf
xchg
repnz
mov
inc
clc
test
jbe
pop
lock
mov
xor
pop
repz
pop
imul
ret
pop
sbb
jo
lock
jno
into
push
enter
cmp
sbb
out
jo
jae
in
adc
add
frstor
es
pushf
jo
mov
xchg
outsb
sbb
dec
mov
subb
out
daa
js
std
test
jb
add
pop
mov
roll
insb
pusha
call
std
pop
cld
jns
stc
pop
jbe
push
fs
sbb
push
cld
icebp
mov
mov
daa
popf
xor
xchg
aam
or
lock
out
mov
adc
push
mov
imul
mov
adc
popa
push
stos
dec
fildll
cmp
repnz
cltd
cmpsb
jo
out
and
mov
cmc
stos
inc
inc
insb
fidivrl
lret
int
sti
test
and
mov
imul
in
jo
repz
adcl
orl
mov
jnp
jbe
xor
pusha
xor
jae
lods
test
scas
push
sbb
loope
xor
stos
add
scas
in
scas
hlt
out
mov
imul
popf
jo
mov
jl
add
mov
mov
repz
xchg
cmp
je
dec
addr16
imul
adc
mov
stc
dec
inc
mov
mov
mov
ret
and
imul
lret
sahf
sti
mov
add
es
nop
xchg
mov
mov
pop
lods
jnp
fnstcw
jp
pusha
mov
xchg
popf
fistpl
xchg
mov
mov
jle
loope
xor
iret
sub
pop
mov
setg
int3
in
cmp
sti
lret
sub
pop
mov
xlat
rcll
iret
cwtl
dec
or
decb
jmp
adc
aad
movsb
inc
aaa
mov
xchg
vpaddusw
cwtl
jnp
out
std
jo
je
fdiv
lret
insb
or
mov
mov
out
mov
int
aam
mov
adc
std
cmpsb
or
add
mulb
ss
xor
bswap
sbb
repnz
in
cmpsb
mov
cmp
sub
or
int
lret
mov
pop
lea
fwait
imul
pop
add
mov
scas
inc
mov
xchg
mov
addr16
pop
xchg
je
sti
frstor
mov
push
dec
cwtl
pop
mov
test
adc
cwtl
push
mov
add
push
pusha
pop
stc
movb
cmp
xchg
sbb
inc
mov
outsl
pop
testb
sahf
arpl
mov
add
adc
out
inc
jle
jae
jnp
pop
ja
scas
cltd
mov
push
jae
data16
lods
outsl
or
addr16
jl
adc
jo
mov
push
jg
into
cwtl
push
adc
js
sub
jae
negw
add
imul
push
testb
cmp
cmc
mov
mov
arpl
cmp
jns
mov
aam
insb
pop
loop
push
fidivs
int
das
push
pusha
in
mov
in
dec
int3
and
jp
mov
xor
test
cmp
add
mov
ds
cwtl
mov
mov
mov
std
sub
jecxz
or
rcrb
xor
adc
aam
ljmp
mov
dec
cmc
jbe
inc
pusha
dec
shll
std
adc
sarb
lds
mov
pop
je
mov
in
es
insb
push
mov
int3
push
outsl
out
cmp
iret
jge
push
leave
aaa
frstor
loope
sbb
ljmp
xchg
sub
insl
in
iret
nop
mov
mov
int
sets
je
push
mov
jl
outsl
cmp
mov
sbb
js
scas
and
bound
sub
mov
cmpsl
mov
ja
ljmp
pop
pusha
jno
cmp
mov
cmp
pop
cmp
pop
movsb
inc
ds
sub
mov
mov
mov
push
mov
aaa
mov
addb
jae
int
pop
repz
orb
sti
mov
jae
mov
and
jae
sub
pop
cs
mov
add
jae
pop
imul
jecxz
sbbb
cmp
fsts
test
mov
xchg
movl
pop
jns
dec
jg
shrb
pop
lret
mov
mov
add
pushf
int3
mov
addr16
stos
pop
xor
xorl
push
adc
fistps
jmp
push
aam
mov
aad
imul
lods
cmp
int3
adc
das
pop
sub
pop
into
ror
cld
movsb
sbb
mov
lock
jo
mov
jmp
scas
sti
scas
add
pop
jo
fmul
hlt
dec
imul
pop
mov
mov
and
xor
inc
je
stc
xor
repz
jae
outsl
mov
mov
repz
loop
add
push
scas
outsl
and
mov
out
cmc
stos
and
push
data16
jp
sbb
jnp
jp
jno
inc
xor
and
arpl
imul
insl
inc
push
xchg
xorl
fiaddl
or
push
jae
pop
xor
add
sahf
sti
popa
cmp
xor
scas
movsb
mov
inc
xchg
push
movsl
cli
push
push
mov
daa
sar
sub
xchg
mov
sbb
xchg
mov
cwtl
data16
inc
and
jmp
inc
imul
xor
movsl
lret
pop
add
sahf
xor
movsb
mov
pop
aad
and
xchg
adc
jmp
pop
mov
lods
mov
jne
daa
aaa
negb
jne
movsb
rolb
imul
push
test
pop
lret
mov
fcom
mov
aaa
data16
lret
leave
leave
stc
jl
add
inc
imul
and
js
mov
mov
pop
jns
in
dec
bound
ret
repz
dec
std
shlb
sbb
mov
jno
xchg
stc
in
xchg
mov
add
sbb
xor
sub
fistps
arpl
dec
gs
jae
and
sbb
mov
cmp
rcll
shrb
movsb
clc
adc
fwait
icebp
insb
mov
into
add
xchg
adc
xchg
inc
sub
push
cld
flds
repnz
jo
or
lcall
es
or
push
popa
xchg
and
imul
in
jbe
mov
inc
ss
ja
sub
mov
jl,pt
iret
daa
ljmp
and
call
repz
xchg
adc
aad
cltd
pusha
in
xchg
push
data16
leave
inc
add
andl
movsb
enter
or
jo
xchg
ja
in
popa
mov
mov
outsb
inc
fcoms
xchg
jns
sub
shlb
fs
hlt
enter
sbbl
dec
les
int
mov
rcl
pop
popf
out
cmp
outsl
int3
je
lods
adc
mov
int
out
cmp
enter
jmp
frstor
sub
sub
lock
push
cmp
fs
xchg
xchg
jnp
mov
imul
dec
jnp
xor
andl
test
and
adc
pop
mov
pop
ja
cmp
jne
insb
mov
subl
in
cwtl
insl
push
aam
mov
fwait
test
decb
sti
jge
repz
aad
lock
test
repnz
lds
cmp
add
sti
mov
ja
mov
sbb
adc
outsl
adc
sbb
xor
add
js
push
pusha
adc
mov
push
movsb
outsb
fdivs
xchg
sub
fs
rcrl
outsb
loope
repnz
cli
fnstsw
xchg
arpl
aas
outsb
cld
imul
rorb
push
jae
and
je
xor
mov
repz
stos
pop
std
ret
dec
mov
std
mov
lods
mov
jle
fs
mov
jp
inc
mov
iret
mov
iret
sbb
movsl
std
inc
pop
dec
aaa
popa
mov
add
int3
xchg
and
mov
fs
cmc
xchg
in
arpl
fwait
sbbb
int
imul
out
insb
in
add
or
pop
mov
lret
pop
fimull
stc
adc
mov
sbb
ja
mov
and
neg
imul
scas
mov
push
rcll
jl
dec
push
sahf
cmpsl
sbb
or
mov
incb
int3
out
cmp
mov
adc
test
and
xchg
popa
mov
mov
jae
or
popf
dec
rcrl
mov
add
xchg
mov
pop
int
insl
int3
adc
mov
jle
mov
dec
xor
test
imulb
jae
addr16
pop
dec
cmp
leave
push
and
cmpsb
mov
inc
sbb
jge
fsub
in
pushf
xor
jne
and
je
jle
xchg
adc
inc
insb
sbb
sub
nop
clc
and
adc
jae
pop
jae
cs
aas
pop
push
scas
pop
adc
dec
sahf
in
pop
pusha
jae
add
test
ja
shrl
pusha
mov
sub
aas
sub
cmpsb
icebp
cmp
mov
add
test
xchg
loope
call
fildll
add
inc
movsl
push
or
mov
cltd
jecxz
leave
loope
or
sub
mov
push
loop
pusha
jae
jbe
mov
sbb
out
adc
insl
cmpsb
xchg
out
arpl
insb
pusha
jae
add
xor
push
lods
jp
jbe
out
cmp
in
push
in
add
xchg
in
jp
jns
or
imul
mov
mov
cmpb
inc
test
mov
movsl
jo
mov
les
ds
push
pop
xlat
aad
mov
dec
daa
mov
xchg
jne
out
push
fsts
into
mov
xor
dec
cmp
imul
jns
adc
jo
pusha
add
mov
movsl
push
ret
lds
mov
mov
loop
sub
inc
xchg
dec
pop
movsl
popw
inc
pop
loop
test
jecxz
out
dec
push
xchg
test
xchg
fsubr
das
pusha
js
lret
mov
inc
pop
outsb
lahf
pop
cmp
pop
lds
adc
or
ss
push
outsl
outsb
scas
cmp
jmp
enter
mov
adc
stos
xchg
test
mov
fs
into
xchg
int3
mov
jge
xor
and
imul
test
mov
clc
notb
mov
mov
test
mov
mov
cmpsb
cli
adc
subb
adc
lods
mov
and
mov
mov
sub
mov
ja
sbb
jae
lret
fstpt
dec
stos
sub
add
mov
dec
mov
movsb
shr
pop
add
xchg
pop
popa
lret
popf
ljmp
inc
xor
pop
int3
or
and
jae
cltd
jnp
iret
adc
sbb
ss
and
push
movl
and
shll
fcomps
into
pop
movsl
lret
xchg
xchg
stc
loope
sbb
aaa
out
mov
ret
repnz
es
jl
push
pop
xchg
test
cmp
sbb
in
cmp
push
sar
push
mov
pushf
in
sub
sub
insl
hlt
sti
in
movsb
leave
notb
mov
clc
pop
testb
xlat
xchg
lods
ret
jne
pushf
loop
cmp
fsts
cmpsl
out
test
xlat
push
pmaxub
dec
out
sub
or
cld
popa
push
jg
rol
cmpsl
insb
imul
mov
je
jbe
movsb
ss
leave
lea
movsl
sub
ss
mov
jo
out
ret
push
xor
out
jge
pop
xor
push
inc
xor
ja
imul
stos
add
adc
mov
repz
push
or
movsl
ret
in
std
mov
or
sub
jae
aam
xchg
movsb
ret
addr16
xor
cmp
xchg
sbbb
inc
add
popa
out
pusha
jecxz
sub
mov
cltd
cli
fwait
jl
pop
leave
pop
xlat
ss
dec
add
leave
xorl
mov
dec
pop
orb
out
add
jb
mov
mov
scas
jnp
pop
sarb
imulb
imul
add
ret
xchg
mov
jle
out
jg
push
scas
decb
jne
xchg
scas
cltd
data16
inc
cmpsb
push
movsb
cmpsl
mov
rcrb
jno
or
pop
hlt
dec
and
lea
mov
out
sarl
push
mov
xor
jb
ja
xchg
inc
add
xchg
and
ja
cltd
aam
fists
mov
xchg
int3
mov
movsb
mov
mov
test
out
or
in
dec
out
out
rorl
mov
repz
mov
addr16
xchg
lret
popa
sbb
inc
adc
ja
sbb
inc
cltd
rorl
dec
add
push
testl
ficomps
pop
inc
sbb
xor
lret
in
and
mov
fcomi
imul
pop
dec
inc
roll
shll
jl
lcall
ss
cwtl
push
inc
jbe
addr16
dec
sub
sbb
xor
das
adc
inc
or
mov
cld
cmc
jae
fcomps
mov
daa
pop
jne
aaa
xlat
ret
pop
je
add
jmp
lcall
xor
and
push
sub
andl
inc
jne
mov
xor
fmull
lods
cmc
xchg
and
push
push
addr16
lret
out
pop
stc
push
cs
adc
je
mov
in
cmp
cld
push
leave
rcrl
sbb
out
xor
jae
ss
mov
pop
cmp
dec
sub
mov
mov
inc
xchg
and
sbb
jo
xor
pop
add
into
test
pop
fs
push
lret
ficoms
lock
push
mov
pop
cmp
dec
add
or
jecxz
int3
mov
cmpl
push
popa
mov
leave
jbe
pop
mov
mov
pop
jae
sub
and
or
and
mov
pop
jl
ss
aaa
popf
dec
imul
xchg
jb
rcrb
lock
pop
clc
add
dec
jno
lock
mov
mov
mov
dec
jl
sti
cli
mov
cmc
gs
cmp
imul
mov
ljmp
add
lcall
mov
lret
imul
mov
push
mov
in
out
fdivp
jmp
adc
mov
sbb
adc
pusha
or
xchg
mov
pop
push
fisubs
lea
lret
lcall
scas
sbb
cltd
cld
lret
jo
jae
mov
mov
pop
ja
mov
sub
jae
icebp
xor
test
insb
or
adc
jecxz
or
and
jo
lret
je
into
scas
dec
add
xchg
push
std
xchg
jge
movsb
jl
sbb
or
mov
pop
std
add
into
lcall
lret
cmpsl
aaa
cmp
sbb
and
sarl
fstpl
inc
dec
adc
sub
sbb
movb
imul
xor
ja
jno
mov
sbbb
enter
xor
adc
leave
sbb
xor
aam
mov
ja
test
mov
push
xchg
cmpb
shrb
inc
push
ds
aaa
mov
jle
xchg
outsb
mov
call
sub
mov
je
inc
mov
xchg
mov
adc
je
imul
mov
lretw
and
leave
gs
mov
lcall
jo
mov
xor
mov
add
adc
jno
pop
cltd
push
jo
enter
dec
loopne
scas
sub
push
inc
inc
out
cmpsl
jae
xlat
xor
mov
aaa
cmpsb
shl
xchg
pop
mov
xchg
inc
mov
fisubl
lock
push
adc
mov
and
mov
and
mov
and
sti
es
jg
popa
aad
push
xor
pop
insl
cmc
push
int
test
imul
ja
push
call
adc
clc
push
cmpsl
std
push
imul
ret
and
push
push
mov
jmp
xchg
das
jo
sub
hlt
xlat
adc
push
loop
mov
aaa
xchg
fs
jbe
aaa
or
jecxz
and
and
iret
jmp
dec
xchg
xlat
jp
in
adc
fcomi
inc
call
nop
xchg
data16
hlt
xchg
enter
mov
ja
addb
stc
dec
test
enter
sbb
rclb
or
inc
out
fstps
movsb
scas
ja
jae
data16
pop
pop
bound
mov
mov
jo
loope
adc
mov
jne
jo
xchg
lcall
ljmp
fcompl
xchg
sub
in
les
adc
push
cmp
xchg
or
int
rcl
inc
push
clc
imul
aas
sarb
adc
test
decb
lahf
pop
ja
cmpsl
test
jg
jl
push
pusha
jae
pop
xchg
mov
outsb
lds
fcoml
inc
in
fiaddl
push
mov
jno
fsub
ds
add
inc
std
lea
or
sbb
push
stc
lds
cmp
stos
imul
sub
aad
and
aam
mov
jmp
push
arpl
jl
mov
mov
sub
arpl
andb
lods
lea
jp
mov
jecxz
lret
jmp
lds
push
in
nop
imul
clc
imulb
insb
enter
mov
cmc
movsl
and
aaa
cltd
js
and
and
pop
in
fisubs
jecxz
icebp
repnz
cwtl
outsb
pop
inc
inc
sub
imul
jb
popf
jge
mov
mov
dec
jecxz
or
mov
push
jb
int3
rcrb
pop
adc
jae
or
ret
and
clc
mov
cmp
dec
divb
pop
sub
xor
cmp
push
in
mov
lret
pushf
movsl
out
adc
sbb
ja
mov
mov
mov
xor
je
dec
movsl
adc
daa
mov
push
sub
ja
cmc
pushf
ds
clc
cs
insl
mov
cmpsb
cld
adc
aaa
mov
mov
bound
outsb
hlt
xchg
cmp
xor
xorb
sub
mov
jo
or
arpl
out
adc
pusha
inc
pushf
daa
push
inc
xchg
cmp
sub
mov
jge
push
cmp
xor
jecxz
mov
sub
addr16
pop
cmp
lahf
and
jo
xchg
pop
and
jle
mov
or
jne
sub
mov
push
and
dec
and
mov
inc
xor
pop
cmp
adc
mov
lods
mov
fdiv
xor
mov
addr16
add
data16
loop
cmp
sbb
push
sarb
jb
cmp
dec
or
movsl
push
jne
xorb
jne
mov
cwtl
mov
out
fstpl
push
lds
ss
sbbl
es
push
or
sti
or
jbe
pop
fwait
sub
adc
mov
pop
ljmp
sbb
or
pop
loopne
inc
mov
lods
dec
sub
mov
sbbb
test
leave
adc
jmp
or
adc
stos
jo
sub
pop
inc
sub
out
cmp
xchg
sbb
xchg
int3
test
sub
mov
fs
sti
sub
sub
daa
mov
xchg
lods
stos
cmp
aam
and
hlt
sbbb
out
out
pop
lcall
push
ja
pop
aaa
into
jp
sub
push
iret
addr16
fnsave
push
rorl
mov
pushf
cli
push
pop
pusha
xchg
repnz
cltd
sub
mov
cmp
sbb
sbb
pop
jb
ja
scas
fdivrs
aas
sbb
xchg
cmp
or
ja
xchg
rcrl
cmp
lods
ja
cmp
movsl
sub
sbb
mov
sub
push
cmp
and
xchg
fsubrs
adc
scas
adc
addr16
iret
push
adc
dec
mov
mov
adc
sbb
pop
cmp
arpl
imul
xchg
test
sbbb
ljmp
and
scas
mov
xchg
daa
in
loope
mov
adc
mov
cmc
jp
or
movsb
cmpsb
cmpsb
sti
mov
add
or
jge
jo
sub
repnz
xor
pop
jbe
jl
iret
ret
inc
mov
daa
sub
push
jae
test
xlat
leave
xor
dec
movsl
jmp
pop
cmp
ret
or
int
mov
jnp
pop
jmp
popf
dec
test
lds
aam
pop
pop
daa
fsincos
pop
jnp
sti
xchg
jecxz
fstpl
xor
adc
xor
fidivl
adc
ret
arpl
arpl
imul
xor
in
adc
pop
sub
jae
add
lds
lcall
call
mov
add
movsl
lret
arpl
adc
jecxz
cmpsb
lea
push
adc
in
ret
adc
cmp
mov
cmc
adc
add
adc
mov
insb
xor
xor
dec
mov
sbb
push
mov
sbbl
fmuls
jmp
xor
xor
mov
aaa
ja
sub
dec
fstl
out
cmp
jmp
adc
cmp
outsb
pop
mov
adc
lods
adc
jp
xor
divb
add
and
pop
aad
pop
hlt
mov
pop
ds
or
test
inc
pop
je
lods
mov
xchg
pop
pop
dec
push
sub
dec
sub
cmp
int3
scas
bnd
out
cmpsb
jp
fidivrs
mov
jno
cs
inc
cld
xor
sbb
pusha
aaa
adc
sbb
mov
ja
fimull
dec
mov
in
rcrb
xchg
jmp
inc
test
jae
ret
sbb
jbe
adc
mov
mov
adc
popa
sub
mov
pop
add
mov
adc
mov
push
mov
push
jle
mov
cwtl
fiaddl
jnp
push
orb
lea
mov
or
inc
and
cmp
fsubl
xchg
jns
add
out
push
push
cmpsl
xchg
insb
mov
aaa
stos
xor
popa
pop
mov
jae
aam
outsl
pop
xchg
pop
shlb
mov
push
xor
ja
push
sbb
shrl
out
mov
push
arpl
xor
dec
test
jl
sub
ss
out
ja
call
xchg
out
mov
mov
je
mov
xor
cmc
pop
cmpsb
mov
repnz
mov
roll
or
jle
in
mov
loopne
pop
jo
cs
jb
sbbl
sbb
jo
xor
add
xor
pop
iret
fistpl
cmp
stc
push
mov
testb
int
sbb
dec
or
arpl
mov
lock
repz
popf
fcmovnb
xlat
sub
dec
push
cmp
xchg
in
sub
mov
dec
mov
jo
dec
mov
inc
aam
dec
mov
fisubrl
push
dec
ss
ja
dec
cmpsb
jbe
jle
scas
out
lods
leave
sub
xlat
pop
mov
jmp
movsb
xchg
ret
push
mov
pop
stos
ret
jbe
pop
mov
movsl
fcompl
pusha
push
cmp
add
mov
shrb
repnz
les
jo
jno
arpl
mov
push
or
and
xchg
push
adc
in
push
mov
dec
push
xor
jmp
inc
push
lret
pop
cmp
mov
push
imul
and
push
jae
pop
and
mov
test
iret
outsb
and
mull
clc
xchg
push
outsl
sub
mov
iret
mov
jl
pop
pop
arpl
cmp
outsl
push
mov
icebp
push
pop
adc
xchg
xchg
sbb
lahf
gs
loope
into
push
andl
add
insl
xchg
adc
cld
push
add
xchg
mov
mov
xchg
es
stos
pcmpgtd
jl
push
jae
iret
or
fs
dec
pushf
jns
push
dec
mov
jae
in
mov
addb
inc
js
mov
insb
adc
data16
mov
cmpsl
and
sub
push
test
cltd
rol
push
inc
jo
imul
vmovdqa
cmpl
leave
pop
leave
push
popa
pop
nop
cwtl
mov
mov
aad
js
pop
or
mov
int
cmp
push
mov
lcall
scas
sahf
mov
pop
add
shrb
cmp
push
mov
into
lods
mov
jae
mov
repz
out
in
inc
in
cmp
mov
jne
fs
jo
jmp
dec
pop
into
add
adc
sbb
cmp
rolb
pop
gs
shll
cmc
jnp
inc
push
adc
ljmp
jmp
leave
push
adc
or
inc
repz
fsubrl
call
ja
imul
das
popa
sarb
fincstp
test
mov
cmp
pop
cmc
divl
adc
scas
call
ss
ja
shrb
test
aad
inc
loopne
cmc
jno
shl
notb
outsl
cld
bound
and
push
xor
scas
cmp
pop
fnstsw
lahf
sbb
mov
adc
out
dec
xor
sahf
hlt
pop
lock
or
inc
lcall
jmp
mov
sti
lods
pop
and
ss
out
incl
xor
adc
shl
sbb
mov
pop
jecxz
lcall
int
lods
scas
in
fbld
lea
jmp
xchg
subb
in
xor
dec
test
in
jo
imul
repnz
push
dec
dec
imul
mov
mov
sub
ja
mov
mov
xchg
jae
movsb
ret
mov
xor
mov
cld
cmp
lcall
neg
scas
imul
adc
and
push
mov
xor
mov
outsl
jns
aaa
fwait
mov
incb
daa
ds
cmp
andl
dec
and
cmp
leave
stc
cmc
lret
movsb
sbb
mov
popf
out
sahf
push
sbb
adc
pusha
in
gs
xlat
clc
test
pop
lds
and
test
data16
je
rcrl
mov
fisubs
inc
loopne
jae
das
adc
aam
cwtl
push
pop
or
in
lock
icebp
aaa
jbe
loopne
arpl
repnz
mov
dec
adc
insl
mov
xchg
aaa
in
dec
inc
jg
dec
mov
icebp
mov
les
movsb
dec
cmp
mov
insb
adcl
fs
mov
cmc
test
push
add
dec
sahf
ljmp
enter
pusha
imul
mov
xchg
inc
leave
sbb
inc
mov
and
mov
mov
lds
pop
pop
in
push
jle
das
sub
into
pop
pusha
popa
andb
fcom
adc
lds
jo
pusha
mov
jge
mov
mov
adc
loop
ljmp
dec
stos
fxch
and
push
inc
dec
es
std
mov
fidivrs
rclb
sarb
inc
jne
in
or
mov
movsb
inc
push
nop
into
jmp
xchg
insb
jge
adc
pop
movsl
jl
cmc
xlat
aam
stc
sbb
dec
cmp
mov
mov
repz
sbb
jne
xor
cmpsb
ja
jmp
test
popa
cmc
pop
xchg
jo
imul
fwait
es
dec
pop
mov
int3
mov
jbe
mov
sub
cmpsb
push
and
pop
jmp
xor
sbb
fldt
das
pop
adcb
cwtl
xor
mov
jo
stc
jno
ret
js
cwtl
xor
xchg
les
mov
or
add
cwtl
xchg
lods
nop
setl
arpl
aaa
jg
rcrl
ss
lds
sub
insb
ja
sub
lret
dec
insl
cmp
and
sarl
push
dec
adc
mov
hlt
std
jb
jae
rolb
mov
xchg
sub
in
out
add
ja
jg
add
ja
rclb
test
push
movsl
xchg
xor
shr
pop
dec
ret
mov
int
pop
popa
mov
xor
stc
mov
push
lahf
pop
js
mov
ja
mov
mov
add
inc
int
ja
xor
jne
dec
in
cld
mov
fistpll
inc
cmp
inc
cmp
fmuls
jmp
or
mov
test
mov
clc
clc
hlt
pop
adc
jb
push
sarl
mov
cmpsb
js
cmpsb
lcall
test
mov
ja
out
mov
test
adc
inc
add
add
out
inc
cmp
faddl
lret
add
or
xchg
cmp
xorl
pop
sub
aam
stos
cmpsl
and
ja
outsb
push
adc
xchg
xchg
push
mov
imul
hlt
je
aam
or
pop
ja
jno
fwait
std
adc
or
stc
mov
xchg
jmp
ja
repz
adc
pop
lret
cmc
or
mov
ljmp
xchg
adc
inc
lret
push
in
xchg
push
xchg
ja
or
arpl
sbb
outsb
and
xchg
add
and
xchg
and
lret
out
add
fs
ds
arpl
xchg
int3
push
mov
sub
mov
jge
jmp
enter
scas
ret
mov
andl
jnp
jae
mov
and
or
jae
pushf
lds
xor
js
cmc
pop
push
test
cs
shrl
push
mov
mov
lock
pusha
pop
pop
into
mov
fists
xor
rcrb
inc
jae
xor
xlat
mov
shlb
cmc
push
push
aam
dec
jb
sub
cmp
mov
xor
fisttpl
outsl
pop
rorl
movsb
cmp
sbb
xlat
jne
pop
aam
jecxz
imul
mov
pusha
enter
in
fld
sub
insb
xchg
clc
insb
imul
insb
psubd
push
push
fst
mov
dec
cld
mov
xchg
cmpsb
test
and
lret
imul
xlat
and
sub
xorb
adc
ss
rorl
sub
ret
stc
push
test
push
dec
into
rcrb
push
mov
xchg
inc
loop
fisubs
test
mov
sbb
inc
mov
mov
xor
ja
sub
icebp
cmp
jl
out
repnz
mov
clc
and
add
dec
xor
mov
inc
jbe
subb
cmp
std
into
xchg
fimuls
orl
inc
jecxz
mov
cmpsl
add
pop
or
xchg
hlt
pop
js
mov
fistl
fmuls
add
lock
mov
aaa
scas
das
sbb
jo
push
cmpsl
mov
leave
dec
mov
and
ja
ss
xchg
daa
mov
jbe
jecxz
ret
xchg
xor
jp
lds
scas
out
jo
mov
mov
fsubrl
call
push
adc
outsl
push
ss
and
mov
xchg
push
adc
jo
cmpsl
xchg
xchg
pop
lcall
mov
loope
inc
jae
mov
pushl
push
in
hlt
mov
and
out
jo
jmp
fsub
xor
pop
inc
imul
jno
xchg
mov
cmp
sub
and
push
ret
in
mov
dec
in
jle
mov
xor
xor
and
jae
sarb
pop
mov
cmpb
mov
inc
push
mov
insb
int3
rolb
popa
mov
inc
mov
or
xchg
dec
movsb
lret
sub
jbe
test
lods
subl
int
mov
dec
imul
es
sbb
mov
lea
fldl
faddl
jle
cmp
sbb
or
imul
mov
mov
sub
inc
enter
and
lds
aaa
cmp
mov
ss
leave
jl
push
ret
dec
xchg
lods
cmp
inc
frstor
cmp
mov
dec
or
mov
fiadds
sub
fcomps
mov
push
aam
xchg
pop
mov
addb
rcrb
leave
daa
lods
xchg
out
or
sub
pop
cld
repz
negl
mov
fwait
movsb
dec
cwtl
and
ja
jmp
and
jae
lods
nop
push
pop
pop
xchg
sbb
ds
test
cmpsb
adc
aas
adc
push
sti
leave
lods
mov
mov
dec
jecxz
push
and
mov
jno
inc
jb
inc
cmp
data16
mov
sbb
cmp
mov
dec
xor
lods
and
std
jae
lahf
mov
sti
test
cmp
inc
imul
xchg
jae
in
jmp
dec
inc
and
push
aas
mov
push
xlat
andb
leave
mov
xor
inc
mov
jb
bound
iret
loope
cmp
ja
mov
out
mov
pop
fwait
jmp
adc
in
pop
xor
adc
dec
clc
xor
andb
es
imul
sub
in
test
cmpsb
sub
repz
int
dec
jmp
sbb
test
clc
sub
in
xor
lahf
enter
jle
arpl
xchg
mov
push
xchg
cwtl
mov
into
sahf
lea
cmp
int
popa
jl
sbb
ret
mov
and
and
ljmp
scas
mov
fstpl
mov
imul
lcall
test
and
mov
ret
sub
jae
inc
xchg
xor
jecxz
xchg
gs
ret
adc
insl
xor
jmp
stos
sbb
je
fwait
insb
dec
or
add
mov
sbb
jge
and
mov
jl
ja
jle
mov
push
pop
hlt
aam
test
clc
cld
push
repz
push
loope
sub
mov
addr16
jmp
xorb
lds
inc
gs
xchg
jecxz
jecxz
fsubrp
repz
mov
out
inc
jo
mov
lock
push
mov
adc
mov
pop
int3
push
push
mov
pop
sub
hlt
cmp
inc
popa
jne
test
or
and
add
int
leave
adc
cwtl
mov
lcall
movsb
das
xchg
iret
and
sub
sar
mov
ja
outsb
test
mov
pop
cmc
push
test
rorb
les
xor
mov
xchg
bound
mov
mov
sub
and
adc
xor
int
scas
aaa
enter
bound
lret
mov
test
adcb
inc
test
jbe
insb
adc
repnz
xor
mov
out
mov
sahf
sbb
mov
xor
inc
pop
mov
in
adc
lock
lea
dec
addr16
xor
std
test
ret
hlt
cmp
push
pushf
in
test
rclb
mov
adc
cmpsb
fdivrs
pusha
pusha
fisubs
int3
mov
ljmp
mov
popw
in
aas
dec
scas
cmc
xor
xchg
lahf
sbb
add
in
jle
mov
jle
jecxz
gs
fldenv
cs
jae
jl
mov
xchg
sub
es
loope
sbb
je
pop
fildll
cli
sub
test
xor
mov
mov
ja
mov
repnz
adc
sahf
mov
mov
pop
lcall
dec
add
cmpsb
pop
mov
and
jmp
sub
xor
ret
push
mov
in
push
daa
sbb
mov
fwait
sub
sbbl
mov
popa
inc
push
gs
outsb
xchg
mov
jo
scas
add
pop
mov
arpl
adc
test
jno
mov
testb
jle
sub
mov
cld
bswap
int3
lret
loop
sub
mov
cmp
xor
mov
adc
and
leave
dec
cmpsb
jb
jae
int
imul
int3
das
adc
mov
adc
imul
cwtl
mov
in
mov
gs
push
xor
lret
sub
pop
sbb
sbb
adc
sti
jmp
movsl
in
xor
mov
mov
popa
aam
imul
das
mov
sbb
add
mov
mov
jmp
push
cltd
mov
scas
fsts
and
shl
or
lcall
shrl
mov
or
std
xlat
mov
add
movsb
fs
mov
mov
dec
mov
shl
test
and
int
adc
inc
fldt
add
pusha
adc
pop
push
cmp
ja
fiadds
in
cmp
xor
and
adc
cmp
jecxz
push
je
jno
cmp
fisubl
outsb
mov
mov
jmp
and
sub
or
xchg
imul
data16
jmp
xor
sub
divb
push
mov
mov
les
add
test
arpl
test
inc
xchg
push
negb
lcall
mov
or
call
jns
aam
popf
hlt
jg
xchg
int
mov
pop
push
stos
cwtl
push
je
jns
addr16
das
std
outsb
idivb
idivb
jae
dec
adc
mov
jge
into
mov
fimuls
orb
ja
and
das
mov
subb
mov
iret
les
sbb
sub
aas
sbb
xor
mov
dec
lods
sarl
mov
dec
xchg
jecxz
lds
dec
icebp
cmc
cmpsb
popf
xor
and
inc
gs
sub
xor
scas
dec
add
fdivrl
addb
hlt
pop
out
iret
pop
xchg
mov
inc
pop
nop
push
mov
aam
dec
lea
int3
pop
mov
lods
sbb
pop
adc
sbb
int3
and
mov
jo
mov
arpl
mov
add
push
cmp
sbb
jno
sub
dec
xchg
out
and
sub
mov
lock
push
test
mov
dec
je
mov
incl
lcall
arpl
scas
pop
jbe
out
pop
ljmp
cmp
pop
aad
mov
mov
and
add
daa
push
int3
sbb
outsl
mov
jl
jg
adc
insb
ret
imul
cmp
pushf
lods
sbb
pop
mov
adc
stos
pop
pop
push
std
aam
jg
test
and
andb
ror
bswap
hlt
xchg
dec
cmp
cwtl
xchg
push
jne
or
fldl
sti
ss
xchg
bound
out
push
mov
cmpsb
cmp
adc
das
xchg
loope
mov
push
icebp
popa
xchg
xchg
into
mov
test
out
loop
outsb
es
adc
in
xor
mov
aad
cmpsl
or
ljmp
inc
xchg
stos
dec
sub
pop
jge
cmpsb
cmp
ret
aaa
lret
push
mov
test
jae
repnz
lcall
pop
scas
and
loop
movsb
pop
popa
mov
and
jo
jae
pop
ss
ja
test
sub
in
jae
sbb
or
jecxz
xchg
imul
les
out
pop
adc
in
js
xlat
xor
xorl
cmp
adc
jae
sbb
pop
iret
cmpl
shlb
in
arpl
test
mov
orl
mov
test
xchg
and
adc
popa
shlb
outsl
stc
jb
icebp
mov
ja
jnp
xor
jae
into
sub
imul
or
mov
cmp
popa
cmc
sub
enter
jecxz
mov
stos
cmp
cmpsb
sti
lret
scas
aam
jno
add
leave
imul
mov
out
or
dec
clc
sub
cmc
negb
xchg
push
in
xor
aaa
loope
jae
inc
sub
mov
jae
or
mov
or
int3
mov
jo
aam
stc
jo
aaa
scas
jnp
push
scas
inc
push
jl
inc
std
dec
into
cmp
cmpsb
test
mov
xchg
iret
adc
ds
inc
adc
sbb
js
movsl
arpl
xlat
or
dec
and
push
add
adc
bound
insb
or
lret
adc
lret
jbe
imul
ret
mov
int3
ret
cmpsb
jg
sub
mov
stos
xor
in
in
je
pusha
imul
sub
sbb
dec
xchg
or
push
clc
or
pop
sbb
jmp
movsb
adc
jmp
mov
sub
xchg
enter
xor
mov
pusha
or
add
sarl
mov
in
adc
arpl
popa
scas
out
xchg
dec
aaa
mov
mov
aam
addl
xchg
rcll
bound
es
lahf
negb
jg
movsb
faddl
sbb
pop
dec
sbbb
in
jecxz
add
ja
xchg
mov
fisttpll
mov
leave
imul
imul
push
test
push
mov
mov
ss
aaa
jl
push
mov
adcl
insb
int3
cmp
xor
pusha
incb
adc
xchg
insl
mov
sbb
jno
lea
ja
mov
xor
sbb
and
sbb
mov
jb
fnstcw
lods
jl
adc
cmc
test
cmp
insb
popf
out
jo
repz
and
inc
mov
add
dec
lea
push
push
gs
and
int
or
xchg
or
fsubp
mov
push
cmp
in
jecxz
repz
aam
mov
test
cmp
sahf
daa
mov
aaa
and
ret
fucomp
dec
test
cwtl
pop
popf
rol
das
sbb
arpl
mov
cltd
jp
imul
jp
cwtl
repnz
data16
cs
rcr
jne
sarl
mov
out
andl
jae
jl
add
insb
sar
mov
add
leave
push
int
call
sbb
daa
fstl
jb
enter
stos
jle
mov
js
aas
aam
cmc
inc
adc
std
xor
mov
sub
adc
stc
mov
mov
jmp
inc
lods
test
aam
jae
imul
in
xorl
jae
into
jo
outsb
mov
and
sub
pop
in
mov
mov
or
xor
ja
jmp
mov
pop
sub
mov
aad
mov
into
push
mov
sub
gs
aam
out
fiadds
and
je
inc
repnz
cltd
xor
push
inc
outsl
jbe
mov
and
shlb
aaa
xchg
jne
inc
mov
mov
push
push
ljmp
scas
adc
or
ret
imul
xor
mov
out
sahf
lock
xlat
out
in
les
pop
push
jl
pop
xchg
shrl
in
xor
leave
cmp
fmuls
jae
lds
xchg
ds
in
mov
jge
xchg
xor
sbb
lds
add
sti
lock
add
jo
mov
jl
movsb
sub
inc
fldt
fidivrl
lds
lcall
mov
xchg
or
std
es
repz
jl
push
mov
stos
dec
push
jb
sahf
pushf
cmp
je
aam
shll
hlt
push
into
sub
adc
and
ficoms
ret
test
mov
sub
jl
pop
es
data16
fst
push
adc
icebp
inc
leave
sub
adc
int
call
adc
shll
fistpll
xor
jo
pop
push
cmpsb
repz
push
jle
mov
or
cmp
cmc
push
xor
in
inc
jno
aaa
or
or
aas
sbb
lret
fstl
sub
and
jae
in
sbb
data16
int3
imul
pop
xchg
cmp
xchg
je
int3
outsl
in
mov
arpl
cmp
repnz
gs
cltd
jns
sbb
cmp
aaa
sub
xchg
inc
imulb
and
cmpsl
push
mov
add
cmp
jbe
jb
aaa
mov
mov
inc
inc
mov
jno
inc
lods
xor
cwtl
mov
sbb
push
addb
adc
in
lods
pop
pop
hlt
mov
pop
mov
adc
xor
jge
mov
je
push
jmp
adc
into
pop
pop
leave
adc
mov
ds
cld
out
orl
adc
dec
mov
ja
sub
fnsave
jg
dec
sbb
mov
imul
cmp
mov
push
push
sti
jbe
arpl
ja
jae
in
jg
ret
pop
das
or
pop
inc
push
push
add
mov
repnz
add
popf
divb
pop
or
dec
xor
std
add
addb
sarl
mov
jo
jo
negb
outsb
sub
rcr
lret
mov
push
lret
push
pop
and
xchg
mov
addl
and
out
sub
pushf
pop
mov
fldt
movl
pop
inc
js
mov
cmpsl
imul
sbb
sahf
dec
adc
or
mov
xchg
mov
stc
adc
pause
mov
jno
fsts
dec
push
push
mov
pusha
aas
repnz
mov
xchg
leave
push
nop
add
aas
adc
mov
jae
cmp
jl
ret
in
sub
iret
imul
or
mov
and
dec
add
je
xchg
xchg
pop
sub
dec
sub
sarb
mov
in
or
add
xchg
jae
jl
and
aas
xor
dec
mov
les
jnp
jne
mov
test
das
clc
cmp
jmp
je
bound
mov
mov
daa
jecxz
pop
mov
and
into
adc
pop
repnz
jmp
cmp
mov
mov
push
jg
jge
in
stc
andb
and
gs
pop
push
cmpl
xor
inc
sar
fldcw
mov
mov
lock
sti
fistl
les
or
or
pop
push
pop
push
cwtl
pop
aad
push
negb
mov
imul
nop
push
test
es
mov
sub
mov
jge
lock
aas
push
inc
xchg
jg
nop
pop
jge
mov
cmp
xchg
cmp
mov
insl
pop
jns
rclb
insl
fpatan
gs
cli
cmp
sub
mov
scas
mov
or
mov
xor
mov
push
xchg
jo
fs
adc
in
sbb
nop
dec
and
fs
push
push
popa
popf
xor
cltd
ss
int
lret
in
xor
arpl
nop
jae
mov
cmpsl
sbb
iret
int
aam
xor
jmp
pop
imul
adc
lret
xchg
push
jmp
mov
jp
sub
in
xor
pop
bound
pop
xchg
mov
jae
loope
fadd
dec
sbb
pop
mov
test
cmp
cmc
pop
sar
jnp
cmp
ficoms
dec
test
outsl
cmp
imul
xchg
jmp
scas
iret
jmp
pusha
dec
std
outsb
dec
call
js
mov
or
sub
int
mov
and
cmpsb
repz
jl
ljmp
dec
mov
or
out
dec
push
pop
mov
enter
sub
pusha
jmp
push
cmp
aad
stc
hlt
jae
lods
jbe
aas
das
jmp
js
add
or
mov
leave
fsubrs
adcb
outsl
jle
arpl
pop
jle
data16
jns
pop
adc
inc
mov
js
loope
adc
fildll
in
out
pop
bound
push
cld
push
add
push
int3
lock
xor
dec
call
ds
ljmp
ja
fucomip
out
xchg
fwait
aaa
inc
mov
jno
lret
pop
pop
lcall
mov
rorl
sbb
insl
xor
adcb
jg
movsb
cmp
push
mov
negb
scas
inc
jne
cmp
idivl
lret
and
jmp
mov
lret
xor
jg
push
lret
pusha
xchg
into
insb
or
jle
xor
mov
fwait
pusha
jae
test
imul
pop
cmp
sbb
repnz
imul
mov
addb
push
or
ds
push
mov
insl
pop
adc
pushf
popa
fsubl
lds
or
imul
mov
mov
sbb
popa
addb
aad
mov
xor
pop
xchg
icebp
jae
jne
jno
mov
sbb
xchg
cmp
scas
cmp
hlt
push
lret
adc
cmp
scas
rorl
js
aaa
clc
mov
cmp
mov
imul
xor
lock
scas
sbb
ds
push
lock
cmp
in
jl
xor
test
push
aaa
sarl
outsb
mov
sbb
push
sub
jno
aas
jb
mov
out
jbe
leave
ret
clc
mov
test
sbb
push
sti
pop
cli
imul
iret
and
push
mov
jl
sub
jg
outsl
cmp
xchg
cmc
negl
jl
mov
mov
mov
cmp
int
lock
mov
jae
lahf
lods
cmp
lret
mov
sub
mov
adc
pop
mov
jnp
hlt
mov
push
pop
lods
dec
push
mov
inc
insb
ds
lods
aaa
out
mov
aas
xchg
mov
loope
mov
and
xchg
bnd
xor
xor
arpl
enter
push
shll
int3
pop
pop
idivb
inc
sub
lods
lahf
sbb
stos
mov
jbe
jle
into
and
or
insb
jae
es
pop
jmp
sub
sti
sbb
xchg
xor
jae
aad
mov
ret
cmc
add
in
xor
movsb
push
call
scas
jae
in
adc
and
std
cmp
cli
adc
iret
clc
jns
pop
imul
repnz
mov
mov
add
aaa
jmp
and
jae
inc
cmp
mov
xchg
mov
test
fldt
aam
aaa
dec
sbb
je
testb
xchg
xchg
aas
pop
xor
add
xchg
lret
divb
test
int
and
or
imul
ljmp
aam
cli
lods
sbbl
mov
fildl
mov
sub
movsb
jns
pop
push
sub
out
jae
ror
out
mov
jb
and
std
ret
lds
add
lret
jns
divb
icebp
imul
js
ss
ja
orb
xchg
cmp
insb
mov
ss
and
dec
cmp
movsl
xchg
add
sub
dec
cltd
dec
jnp
or
data16
push
loopne
ja
adc
fs
cmp
push
sub
and
xchg
sub
push
xchg
lock
sbb
bnd
icebp
sub
sarb
loop
pushf
insb
shlb
subb
int3
pop
int
pushf
mov
repnz
xchg
imul
adc
ficompl
lods
fstps
adc
daa
mov
lods
sbb
pop
xchg
lods
clc
pop
ja
or
mov
movsl
in
adc
adc
stos
push
mov
xor
sti
jnp
neg
cwtl
push
loopne
mov
lret
shlb
jae
popf
xchg
repz
jbe
fiaddl
or
imul
mov
jo
mov
pop
mov
pop
mov
add
or
mov
imul
fdiv
inc
lea
imul
cmp
mov
and
add
jbe
sbb
mov
add
movsb
xchg
xor
mov
lret
jo
rcl
ljmp
popa
fcomps
jbe
adcb
or
mov
push
add
sbb
pop
sbb
xor
jae
lcall
rol
push
ret
mov
movsl
adc
xchg
cmp
add
cmpl
and
adc
add
cmpsb
data16
add
insb
add
mov
mov
push
pop
pop
push
enter
cli
jl
aaa
cmp
fisttps
test
xlat
mov
push
jecxz
cmp
sbb
xchg
aam
aaa
pop
push
fiaddl
lcall
leave
imul
fsts
sbb
mov
jp
rcll
dec
outsl
jb
out
pop
xchg
insl
mov
jae
xor
sahf
aam
push
push
test
mov
push
lock
add
add
sbb
jae
xchg
iret
mov
sbb
sub
xor
leave
inc
inc
fs
arpl
pusha
bound
mov
cmp
lcall
dec
sbb
push
sarb
aaa
mov
shlb
mov
xchg
sbb
mov
mov
popf
pop
cli
movsl
jae
scas
push
lods
jb
or
mov
outsb
cmp
mov
cmpsb
daa
nop
movsl
es
xor
in
cs
lahf
inc
fidivrs
xor
xchg
cmc
test
inc
push
inc
jg
icebp
add
and
mov
sub
in
popl
or
cmp
scas
lods
adc
icebp
xor
out
push
loopne,pn
sbb
pop
jmp
adc
or
cltd
imul
jle
imul
mov
mov
push
mov
sbb
push
loop
aaa
lds
pop
inc
fwait
ds
in
iret
fnstcw
loop
std
fucomi
outsb
test
mov
inc
push
mov
iret
ljmp
call
cmp
add
xor
fdiv
dec
mov
mov
mov
lcall
mov
ja
into
cli
lret
mov
inc
mov
pop
fsubrs
mov
movsl
shl
and
imul
in
adc
push
inc
loop
xchg
mov
mov
jne
das
ret
dec
cld
xlat
pop
inc
sub
int
ret
adc
lret
adc
inc
and
add
aas
ljmp
shll
mov
scas
test
mov
lds
loope
adc
cmp
aam
pop
mov
jnp
mov
sub
and
sub
jl
outsb
mov
mov
push
cli
jl
out
jae,pn
mov
and
mov
fildl
pop
fmuls
jg
in
out
aaa
shll
fs
pop
aad
and
push
mov
or
int3
jge
cmpl
leave
sub
sub
jno,pt
div
test
jbe
mov
jge
imul
std
sub
stc
push
sbb
mov
inc
fwait
jmp
jb
cmc
mov
and
lret
pushf
dec
sbb
popa
xor
dec
lret
sahf
jns
dec
mov
int
movsb
add
aad
mov
je
push
mov
scas
xchg
repnz
bound
mov
movsb
std
pop
jb
fs
cld
into
imul
or
test
cmp
cltd
test
notb
sub
into
dec
pop
es
xchg
ja
mov
dec
cmp
sahf
jle
inc
imul
and
aaa
aas
outsb
mov
jle
fldenv
add
jb
repz
pushf
cmp
cmpsb
jnp
pop
arpl
and
mov
jecxz
imul
adc
add
pop
sbb
sub
mov
dec
cmp
or
xor
js
dec
and
not
inc
xlat
fidivs
subl
xchg
mov
movsl
lret
adc
xor
jecxz
push
or
loope
sbb
outsl
sbb
into
jbe
xchg
adc
or
imul
lods
xchg
mov
mov
jmp
mov
push
outsb
mov
push
lahf
mov
ficoms
xor
and
jns
cmpsb
adc
dec
lock
lret
and
jae
xchg
aad
jne
adc
sbb
mov
test
pop
ret
ljmp
in
aaa
lds
xchg
push
imul
xor
in
ret
push
inc
and
aam
subl
imul
ret
jb
inc
xor
push
pop
pop
test
mov
mov
push
cmp
sub
push
ja
inc
or
mov
cmp
iret
rcl
lret
in
xchg
push
adc
xor
mov
rol
into
pop
xlat
lcall
mov
push
das
jae,pt
out
push
lods
pop
insb
js
sbb
adc
xchg
xor
cltd
mov
enter
imul
jecxz
pop
dec
add
or
mov
cmc
pop
inc
movsb
iret
or
orl
aad
cmp
subb
mov
mov
mov
push
movsb
ss
aam
cld
imul
subl
shlb
and
jecxz
mov
inc
adc
push
test
push
cmc
pop
dec
bound
fidivrl
mov
je
xchg
js
mov
xchg
jecxz
int
cmp
in
sub
imul
mov
cmc
mov
inc
sbb
xchg
sbb
cltd
test
mov
adcl
imul
ja
cli
jbe
stos
xor
mov
and
cmc
shl
insb
jns
push
mov
xchg
outsb
mov
sbb
divb
jo
in
cmp
mov
push
je
mov
movsb
adc
cmp
sub
and
insb
in
or
mov
in
sub
bound
jg
jge,pt
jbe
mov
cmp
cmc
out
idivb
sbb
jmp
adc
ret
sbb
cmp
cmp
cmp
push
imul
and
ljmp
fsub
mov
sarb
cmc
int3
insb
sub
jbe
test
leave
add
inc
pop
mov
outsl
fsubp
cs
mov
sbb
imul
stc
xchg
fs
fistpl
or
in
pop
clc
xchg
outsb
dec
mov
xor
jle
mov
adc
loop
sub
xchg
je
nop
addr16
int3
pop
fnsave
xchg
pop
jle
ljmp
push
jae
jp
inc
xchg
hlt
jge
and
add
rcl
jle
mov
pop
data16
xor
jge
lock
movsl
shl
or
test
xlat
aam
and
push
js
lds
xchg
fisttpl
out
orb
and
repnz
clc
imul
out
cld
and
jmp
jmp
bound
scas
jae
jns
push
cmp
push
popf
mov
lcall
push
ret
or
loopne
jns
lret
mov
mov
or
shll
imul
ret
jg
loop
js
inc
cwtl
lret
mov
loope
test
pop
mov
sbb
out
pop
sbb
and
jno
adc
in
mov
loopne
ljmp
jns
lret
jno
mov
adcb
and
mov
jno
into
jmp
pop
push
insb
mov
mov
inc
ss
movsl
mov
inc
out
data16
xchg
into
push
jg
pop
add
insb
jb
mov
xchg
jl
out
aaa
cmpsb
sub
push
dec
mov
popf
pusha
imul
ret
pop
push
fadd
or
xor
arpl
or
orb
aaa
test
inc
imul
cmp
scas
int
add
sbbb
test
pop
aad
outsb
shll
pop
sub
aam
dec
inc
es
push
xor
lahf
popa
xor
ror
ja
sub
inc
dec
je
xor
hlt
test
adc
fstpt
imul
rcll
push
inc
insl
daa
mov
cmp
push
pusha
jecxz
cmpsl
pop
movsb
push
loop
mov
mov
sbb
add
into
ja
into
lock
adc
add
leave
and
jns
adc
inc
stos
and
lahf
das
sub
mov
xlat
inc
test
sti
pop
jb
popf
inc
dec
jne
xchg
xchg
jo
test
insb
push
scas
test
movsb
gs
sub
or
add
ret
mov
jne
push
sub
mov
test
cmovbe
jo
clc
dec
adc
inc
push
imul
test
sarb
lcall
dec
pushf
mov
stos
pusha
xchg
or
pusha
mov
cmp
lds
pusha
aam
insb
ret
xor
adc
cmp
and
lret
push
jb
fstpl
lods
sbb
adc
in
add
and
iret
or
repnz
jne
lock
scas
adc
aad
mov
lahf
mulb
jae
test
or
cmp
fcmovnb
cmp
int
shrb
fwait
pop
dec
lock
test
stos
adc
ja
fsub
in
or
ds
out
or
scas
arpl
xor
out
movsl
adc
test
jge
in
pop
xor
mov
pop
int
js
into
adc
lret
xor
sub
push
inc
dec
cli
sub
cmp
stc
jle
adc
mov
mov
es
adc
pop
xchg
imul
ret
or
loope
adc
sub
or
pop
insl
inc
lret
in
rolb
mov
mov
adc
xchg
daa
das
mov
add
je
imul
cmpsl
jae
xor
add
mov
sbb
xchg
out
pop
cmp
dec
mov
lret
mov
imul
loop
inc
xor
adc
les
adc
fildll
sub
adc
mov
add
mov
int
icebp
jbe
sbb
loop
repz
sbb
fimull
cmc
mov
xor
adc
jns
cmp
inc
adc
mov
sub
inc
jle
jg
mov
push
ret
fbstp
cmp
jmp
xchg
lods
data16
leave
push
fs
sbb
pop
test
cmp
push
add
outsb
les
mov
rcll
or
lods
pop
mov
dec
ret
add
add
sbb
xchg
jae
je
jl
jo
xchg
jne
xchg
and
cmp
ja
xchg
shlb
xchg
in
les
push
aaa
mov
fistps
mov
stc
xor
pushf
and
mov
jecxz
xor
popa
cltd
dec
lock
lret
aaa
insb
pop
xchg
jae
push
or
push
fistl
data16
sbb
cmpsb
pop
cmp
imul
sti
test
aam
dec
lret
fsts
mov
adc
cmp
push
ja
inc
aad
and
je
btc
cmc
mov
lods
sub
out
push
das
pusha
xchg
pop
mov
mov
jo
and
cmpsl
iret
fidivl
lcall
pop
shlb
or
pop
jnp
push
lock
xchg
filds
pusha
mov
int3
stos
loope
xchg
imul
mov
push
mov
js
je
xchg
scas
mov
sbb
mov
lret
pop
les
jbe
adc
adc
xor
adc
and
jle
jmp
cmp
inc
mov
dec
cmp
mov
mov
arpl
xchg
mov
pop
fwait
mov
gs
dec
xor
add
nop
mov
ja
jo
sti
mov
imul
lcall
test
cmp
inc
lods
cs
xchg
jl
mov
nop
js
pop
xchg
sub
loope
jp
mov
fisttpll
jl
imul
fs
imul
rcll
jae
jg
jg
inc
pop
cmpsb
repz
add
inc
out
jo
xchg
int3
adc
shlb
in
sub
ret
test
jae
test
push
and
xor
dec
test
insl
lret
imul
cmp
mov
jno
je
push
test
outsl
js
out
es
xchg
out
outsl
sub
add
xchg
push
addr16
decl
std
jo
aad
add
dec
push
test
adc
insb
insb
jg
jl
adc
cmp
in
sti
pop
inc
daa
cmp
rcl
das
jae
call
and
data16
mov
push
js
jbe
mov
xchg
pop
lods
out
jmp
cs
mov
outsb
or
sti
mov
fnstenv
cmc
adc
pop
fs
in
jg
xchg
mov
mov
push
ljmp
mov
fucomip
xor
pop
push
test
arpl
xor
adc
inc
push
notl
mov
scas
dec
sbb
aam
lret
push
gs
int
movsb
ss
in
xor
push
jge
fnstsw
shlb
roll
mov
inc
arpl
pop
cmpsb
ss
mov
in
daa
dec
fwait
xlat
and
les
xchg
ror
lret
and
pop
subb
or
outsb
mov
add
jmp
les
and
add
push
fistpll
stc
mov
aaa
adc
and
inc
mov
int3
cmpsb
aaa
cmpsb
push
mov
les
add
sub
fwait
repnz
mov
cmp
int3
xchg
xlat
insb
cwtl
ret
es
test
cmovb
xchg
mov
in
outsb
repz
mov
mov
movsb
into
mov
mov
adc
je
jmp
mov
jbe
cmp
mov
cmp
test
roll
push
cltd
push
ss
sti
ret
sub
divb
jae
sub
loopne
ja
std
les
repz
test
cmp
insb
or
jb
cwtl
push
ja
cmpsl
jns
aaa
sub
sti
push
icebp
mov
xor
hlt
stc
imul
cmp
dec
std
andl
call
xchg
les
sub
sub
hlt
add
pop
jp
sub
bound
mov
lock
jnp
xor
test
popf
sbbl
aad
cmp
cmp
inc
test
pop
xchg
jmp
mov
ja
into
test
jle
inc
mov
push
mov
mov
jae
xlat
sub
movsb
adc
xorl
popf
iret
lret
test
sub
pop
jo
xor
mov
faddp
jl
adc
adcl
or
sub
movsl
mov
push
xchg
sub
push
imul
mov
cwtl
fstpt
ss
subb
add
adc
push
jbe
push
pop
imul
add
pop
cmp
pop
mov
aam
fdivs
cld
int
dec
and
pushf
push
xor
in
mov
mov
inc
add
stos
jb
xor
mov
cmp
jne
insb
cmpsb
cmp
int
repnz
out
test
out
mov
push
adc
jbe
pop
inc
test
ja
out
scas
imul
push
in
aaa
loope
xor
mov
mov
lds
xchg
and
xchg
rcrl
mov
jno
cmp
ret
push
out
mov
pop
jae
dec
or
push
ds
lock
inc
fdivrs
jno
mov
mov
pusha
cmc
jge
push
pop
dec
jbe
sbb
data16
push
fistpl
dec
loope
jae
mov
cmpsl
inc
push
movsl
andl
test
fldcw
loop
imul
stc
mov
repz
outsb
push
shll
jbe
insb
je
ret
inc
mov
shlb
mov
adc
adc
mov
mov
outsb
sub
jb
fldt
pusha
cmp
popf
sahf
add
fmulp
movsl
mov
pop
lret
mov
pop
dec
repnz
fcmovnu
pusha
sub
imul
je
js
adc
scas
dec
outsl
pop
in
adc
sub
push
insl
sarl
pop
ss
add
fwait
or
cmp
loope
hlt
ja
je
outsb
addl
nop
jge
add
aam
adc
mov
mov
and
addl
pushf
adc
pop
xlat
test
js
mov
fildl
push
dec
jl
jmp
mov
fisttps
jg
and
mov
and
lock
cmp
out
sub
cwtl
lock
dec
push
push
lret
mov
popf
leave
dec
rorb
adc
repnz
cmp
sbb
pop
jae
stos
xor
imul
cltd
insl
push
jnp
sub
ss
pop
lahf
or
out
dec
cmpsb
fwait
dec
mov
push
scas
push
loop
dec
inc
loop
push
icebp
mull
mov
shll
int
jle
scas
mov
in
ja
sub
xchg
jge
mov
addb
cltd
stos
xor
push
push
cmpb
mov
lret
jle
aam
xlat
jecxz
adc
or
mov
push
test
lods
dec
xor
divb
inc
ficomps
xor
fnstsw
and
or
add
jo
imul
adcl
mov
addr16
fs
xor
sbb
int
mov
lahf
mov
pusha
fidivrs
clc
jp
out
jl
sbb
test
or
and
mov
add
out
mov
ja
xor
mov
xor
jle
cmc
test
int3
push
ret
sub
sub
mov
mov
push
adc
or
push
sub
scas
jg
inc
pop
loope
jecxz
jbe
xor
insb
jl
mov
and
xchg
add
pop
lcall
xor
mov
stc
dec
and
mov
dec
jae
mov
ja
xchg
ljmp
sbbl
fs
mov
lret
sbb
not
xchg
or
test
ret
sub
sbb
dec
pop
dec
bound
shlb
inc
lods
pop
mov
mov
jae
xchg
movsb
sbb
gs
cmp
mov
cmc
add
mov
push
xor
sbb
loope
mov
add
mov
cmp
mov
out
xchg
imull
clc
xor
mulb
out
mov
aam
incl
test
call
cli
ja
jb
mov
push
je
int3
pop
jnp
cs
or
jae
push
and
mov
pop
jl
imul
lret
sahf
mov
pop
outsb
loope
mov
adc
jb
pop
pop
mov
int3
fisttps
push
pop
js
out
ja
repnz
shlb
inc
sub
mov
lock
adc
or
les
mov
imul
xor
movsl
add
inc
xchg
dec
leave
in
sbb
daa
hlt
pop
and
jle
test
pop
cmp
mov
inc
leave
adc
sbb
xchg
loopne
out
inc
sahf
jo
pop
imul
int
dec
orl
pop
sub
or
sbb
inc
mov
or
push
mov
pusha
ds
negl
jo
pop
mov
mov
xor
pop
mov
ja
mov
test
push
rorl
sub
imul
add
sub
lea
sbb
cmp
xor
jbe
imul
rcrb
icebp
divb
mov
cmpsl
sub
jl
cltd
shlb
daa
test
jmp
ss
jne
add
add
sub
mov
loop
jb
xor
push
repz
sbb
in
lods
add
movsl
mov
mov
mov
jge
xor
add
pop
xchg
jp
xchg
mov
ret
stos
in
sub
sti
pop
fs
ja
push
xchg
js
or
lret
in
xorl
fisttpll
and
fdivrl
adc
mov
mov
ljmp
arpl
and
mov
dec
jge
cmp
or
jae
out
je
cltd
imul
mov
jo
and
push
mov
mov
xchg
jge
push
sbb
sub
imul
in
adc
ds
pop
jecxz
int3
ret
fsts
pop
repnz
inc
loope
xor
je
xchg
xor
pop
lods
jecxz
push
mov
and
ss
and
and
sbb
mov
hlt
je
movsb
push
xor
adc
in
xchg
and
mov
fwait
push
out
mov
jae
fdivr
mov
push
in
sti
inc
mov
mov
xchg
jl
sbb
and
adc
push
sub
xchg
nop
pop
lock
aaa
lea
in
insb
mov
bound
arpl
clc
cwtl
inc
push
pop
pop
imul
nop
iret
pop
sbb
pusha
fisubs
in
lret
je
js
pop
jne
mov
cmp
jno
jo
mov
mov
or
repz
cmp
xor
lcall
cmpsb
inc
cwtl
mov
or
cli
mov
out
cmp
adc
dec
mov
cmc
mov
dec
ds
add
and
adc
or
push
push
insb
fwait
push
jne
and
mov
icebp
inc
iret
cmpsb
pop
into
cmpsb
inc
mov
xchg
nop
sbb
jae
add
lahf
and
inc
cmp
sbb
daa
test
push
lahf
push
aaa
in
gs
aam
mov
in
cwtl
xor
add
mov
test
add
shufps
jbe
cmpsl
pop
sbbb
jmp
sub
mov
inc
out
jmp
loope
inc
and
data16
iret
push
mov
insl
pop
aam
mov
ja
out
shl
mov
movsl
or
inc
adc
jge
sti
imul
jmp
in
xchg
xchg
pop
sub
sub
jl
or
fsubs
lds
scas
mov
sub
nop
ljmp
adc
je
or
ret
inc
push
in
jno
push
xor
dec
cltd
or
mov
ja
data16
lods
and
arpl
inc
xchg
mov
mov
sbb
imul
ss
sbb
mov
mov
cmp
roll
in
pop
push
cli
mov
fbld
pop
pusha
movsb
dec
imul
mov
jecxz
mov
mov
jo
je
iret
pop
scas
push
jae
ljmp
xchg
gs
inc
or
jae
xor
aas
inc
ja
or
inc
cmpsb
lret
repnz
cmp
add
lret
add
sub
pop
sahf
mov
sub
dec
sti
movsb
sarl
adc
lcall
call
xchg
addr16
mov
sahf
pinsrw
add
cs
mov
sbb
mov
xor
in
mov
xor
ja
ret
mov
push
jl
int
dec
fnstcw
and
mov
pop
and
movsb
ds
ss
jle
jge
int
dec
mov
insl
mov
aaa
ror
xor
dec
nop
ret
shll
xchg
inc
mov
sbb
mov
stos
jmp
test
sub
jo
add
movsl
pop
cli
adc
cs
pop
dec
jae
int3
sbb
daa
mov
es
les
lods
pop
stc
cld
sub
movsb
adc
jae
xchg
inc
and
imul
pop
test
lods
xlat
xchg
cmp
dec
not
in
in
in
dec
cli
lods
test
repz
inc
repz
push
sub
subl
xchg
push
mov
jae
int
in
sbb
and
nop
and
into
insb
xor
test
leave
mov
stc
andl
js
in
ds
xor
mov
jmp
sahf
jl
inc
lcall
mov
or
aam
inc
jmp
rclb
aaa
repz
fdivrs
popf
in
and
push
scas
mov
adc
pushf
adc
or
je
xchg
jbe
in
cmp
dec
imulb
add
cmp
xchg
lahf
roll
push
ss
data16
std
out
sub
jae
adc
ds
inc
bound
and
jge
push
xor
rolb
sbb
in
mov
or
insl
ret
jo
pop
push
xor
dec
mov
mov
adc
xchg
fistpl
pop
enter
mov
or
mov
mov
sub
inc
xchg
xor
fnstenv
mov
pop
call
mul
pop
movsl
pusha
jl
push
pop
bound
or
mov
add
and
jo
lds
mov
xchg
sarl
jo
aaa
or
loope
push
lds
and
insb
cli
test
adc
and
sbb
sub
mov
outsb
ss
leave
shll
xor
hlt
xor
cmpsb
ds
mov
leave
mulb
clc
push
fdivrs
or
in
test
repnz
loop
pop
mov
push
iret
dec
loopne
adc
cmpb
int
inc
inc
stos
bnd
int3
dec
imul
pusha
bound
jb
mov
cwtl
push
outsl
aam
pop
mov
into
leave
movsb
imul
jne
js
lret
xchg
cmpsb
and
pusha
lret
adc
repnz
stos
push
jmp
xorl
idiv
movsb
jmp
pop
xchg
pushf
or
movsl
sub
cmp
fs
pop
lds
outsb
test
sbb
cmp
jae
stc
xor
imul
imul
test
sub
jnp
sub
out
lret
xchg
inc
aaa
jl
inc
stos
xor
xchg
lret
jae
out
push
sub
sbb
pop
insb
add
mov
and
mov
adc
ja
jae
and
dec
repz
addl
cmpsl
xchg
pop
mulb
pop
imul
orb
adc
xchg
cmp
mov
ja
mov
aad
sub
pop
mov
push
add
mov
out
mov
and
pushl
test
jae
pop
sbb
push
test
in
dec
leave
sub
jmp
ret
mov
xchg
jo
fidivs
sbb
lret
out
cmp
mov
es
xchg
pusha
jg
cltd
sti
push
or
xchg
je
jecxz
add
sub
test
loop
or
sub
mov
mov
lret
sub
pop
xorl
clc
call
sbb
add
adc
xor
cmc
cli
mov
shlb
adc
dec
inc
popa
test
jecxz
cs
ret
xchg
je
ret
pop
xchg
xlat
add
clc
ret
cmp
shll
ljmp
jmp
cmp
push
push
lods
jg
test
lret
aaa
sarl
scas
pop
test
xor
sbb
sbb
xchg
in
in
adcl
arpl
out
stos
dec
pop
pusha
and
insb
fndisi(8087
je
std
cmp
xor
cmp
xchg
inc
iret
adc
mov
lahf
pop
xchg
mov
or
sbb
mov
jns
dec
and
and
repz
mov
mov
jne
or
pusha
je
adcl
fstpl
outsb
stos
jne
fdivrl
dec
cmp
sbb
mov
jl
int
clc
dec
pop
sub
in
mov
mov
sbbl
jmp
int3
rorb
in
sub
adc
sbb
stos
pop
fcoml
lcall
pop
imul
jg
cmpsb
xlat
inc
cld
mov
in
icebp
adc
fs
and
jl
mov
push
bnd
fisubs
adc
int
hlt
leave
aaa
push
sub
outsb
clc
scas
popf
jmp
test
inc
ljmp
mov
int
cwtl
ja
add
push
aad
hlt
jns
cwtl
arpl
dec
test
pop
aaa
mov
clc
out
mov
test
and
inc
dec
sub
fwait
in
inc
mov
stos
arpl
rolb
push
bnd
mov
add
loope
lret
mov
pop
xchg
clc
adc
add
pop
ljmp
inc
and
ja
daa
data16
jnp
push
movsl
add
pop
or
dec
lds
pushw
xor
mov
ds
ss
fidivl
cmp
or
cmp
mov
xchg
aaa
pop
mov
ss
push
test
xchg
outsl
pop
cmp
xor
jae
inc
pop
inc
cli
repz
loopne
and
sub
pop
xchg
lods
pushf
imul
xchg
mov
push
fcompl
stos
fmuls
lds
xchg
int
ja
clc
jecxz
sub
adc
cmc
mov
jecxz
ljmp
in
pop
arpl
and
jb
jae
lods
call
rorl
mov
andl
dec
cmp
cwtl
sarl
mov
scas
mov
mov
xchg
int3
inc
ljmp
adc
xor
test
mov
lret
sub
sbb
xor
popf
test
jae
sbb
in
jbe
pop
fs
pop
adc
sub
imul
mov
out
shr
in
cwtl
xchg
xchg
cmpsb
xor
ljmp
jmp
cmpsl
cmp
test
inc
lds
mov
pop
cmp
addr16
cwtl
jo
jbe
sub
sti
sbb
lods
cld
icebp
mov
je
nop
ds
lds
loopne
cmp
cmpsb
inc
mov
mov
inc
cltd
mov
ljmp
cld
add
or
push
or
mov
mov
je
mov
fwait
push
add
repz
cmp
mov
mov
xor
repz
das
movsl
pop
sahf
dec
imull
js
jo
mov
cld
test
pusha
orl
adc
test
fimuls
pop
arpl
lret
mov
mov
jg
push
clc
loope
out
dec
scas
jmp
imul
sbb
xchg
mov
iret
fisttpl
je
mov
lcall
push
jne
fs
test
mulb
pop
push
mov
clc
pop
jae
mov
and
mov
jecxz
add
jne
mov
dec
sbb
enter
push
movsb
in
aad
mov
inc
popf
gs
dec
repnz
fisttpll
inc
pop
mov
fstpt
out
dec
ja
shlb
out
mov
and
add
cwtl
or
fcompl
push
loop
andb
imull
data16
xchg
mov
sub
adc
popf
loope
inc
frstor
jo
mov
loope
std
push
mov
push
jae
test
adcl
dec
arpl
enter
cmp
cmp
jnp
inc
mov
mul
stc
in
movsb
in
push
out
add
lret
jae
out
push
das
inc
mov
lods
mov
lahf
mov
jge
mov
xchg
in
and
inc
adc
lock
mov
out
lahf
adc
push
lods
mov
cmp
out
xchg
iret
push
mov
inc
call
pop
sti
push
sbb
cmpl
push
movsl
push
sbb
in
sti
mov
add
movsb
add
xor
or
jp
pop
add
imul
inc
scas
xchg
out
mov
pop
jae
jbe
cmp
pop
stos
aaa
into
jmp
adc
jb
imul
lret
negb
mov
jo
push
mov
add
jb
loopne
jbe
mov
push
and
fucomi
je
stc
data16
cmp
mov
sarl
call
jae
push
je
mov
imul
pop
scas
mov
push
jb
adc
lds
fstl
push
adc
add
fstps
popa
daa
sbb
cmpsl
pusha
int
js
sub
pop
adc
add
fistpll
out
xchg
mov
loopne
sbbl
mov
sbb
in
mulb
call
imul
in
mov
mov
mov
mov
dec
incb
mov
outsb
pop
pop
or
inc
sbb
lcall
mov
pop
dec
cld
pop
lret
ljmp
ljmp
or
adc
aaa
sbb
aad
and
xchg
jae
pop
sub
lods
fidivrl
adc
jae
xor
inc
mov
stos
fistpl
mov
xor
mov
xchg
mov
setns
push
xchg
outsb
test
lock
jo
dec
test
inc
jle
cmp
inc
loop
jae
push
jle
ret
test
adc
imul
scas
jmp
add
mov
pop
mov
or
lock
sbb
adc
cmp
pop
into
xchg
aas
and
imul
pop
lods
lret
inc
dec
insl
dec
cmpsl
sahf
loop
jb
xor
xchg
jb
mov
inc
repz
jae
popa
or
test
adc
ja
ret
aad
into
dec
stos
outsb
insb
fldt
push
jae
idivb
outsb
sbb
jp
mov
mov
aam
int
pop
js
lea
push
in
mov
imul
mov
aaa
fdecstp
aam
ja
cmpb
imul
adc
pop
cwtl
adc
adc
jns
test
xor
pop
lahf
loopne
lahf
mov
insb
jl
daa
mov
pop
mov
mov
jae
lret
and
add
adc
jb
mov
ja
cmp
jecxz
int3
stos
sbb
xor
add
ja
fbld
pop
imul
and
push
sub
mov
push
outsb
in
iret
push
push
sub
push
repnz
xchg
out
cltd
mov
sti
cmp
jae
sahf
adc
push
test
pusha
pop
scas
into
xchg
cmpsb
mov
fstp
repz
outsl
jns
or
add
dec
mov
dec
loope
jne
andb
mov
push
aam
mov
push
stos
jg
adc
hlt
or
imul
add
lods
mov
xor
int3
adc
adc
push
cwtl
aaa
cld
inc
inc
adc
pop
sarl
ss
sub
ffreep
imul
lods
pop
jb
stos
int3
mov
mov
je
mov
je
inc
jo
movsb
jl
jo
mov
sbb
std
mov
mov
aad
sub
outsb
jg
push
testb
pop
mov
jne
les
mov
push
push
lret
push
jo
and
imul
int
or
movsb
xor
jnp
pusha
sarb
cmp
das
test
cli
inc
cmpsb
out
shlb
movsb
in
addr16
mov
xchg
mov
insl
dec
es
and
sbb
sub
rcl
cmc
and
negl
out
pop
aam
divl
xchg
pusha
cld
je
jns
daa
lods
push
cmp
stos
ss
xchg
inc
loop
mov
xchg
mov
jo
inc
sub
out
mov
jp
jb
fcomps
or
cld
jge
mov
xor
fsts
iret
loopne
xor
and
push
popf
insb
fdivr
jmp
mov
into
into
sbb
lods
or
push
or
fistpl
icebp
pop
insb
fs
setb
movsb
insb
popf
cmp
cs
pop
daa
push
mov
faddl
mov
test
ss
inc
out
movsb
test
lret
jmp
mov
mov
outsl
adc
push
jge
xchg
add
ja
pusha
cmp
mov
into
xor
inc
pusha
xlat
into
lcall
sub
ja
jge
sbb
imul
xor
sarb
arpl
and
inc
cld
mov
xor
cmc
rclb
mov
nop
or
cwtl
xchg
pop
mov
inc
push
imulb
xlat
pop
imul
ret
sahf
inc
in
mov
sbb
std
inc
shll
cmp
push
jae
cmp
dec
cltd
or
xchg
in
testl
cmp
push
fldt
je
xor
out
mov
cmpsl
add
adc
and
sub
mov
movsb
test
dec
xor
shrb
loope
fisttpll
lods
mov
je
inc
push
mov
test
lods
repz
mov
decb
imul
mov
pop
cmp
call
sub
push
daa
pop
js
cmp
clc
aam
xchg
in
ja
enter
rcrb
inc
das
out
xchg
arpl
inc
mov
in
xor
jnp
popa
xor
or
ficoms
adc
fidivrs
pop
in
jae
and
loop
add
insl
pusha
inc
cmp
dec
inc
jle
jae
jns
fidivrl
and
dec
jp
cmp
pop
mov
sbb
fsub
pop
sub
movzbl
repz
fwait
imul
mov
adc
xorl
push
jo
jae
mov
ja
sbb
mov
push
fdivp
les
mov
aaa
inc
push
das
imul
or
mov
sarl
or
mov
xor
movsb
adc
sbb
dec
jmp
sbb
jae
dec
test
addb
dec
adc
imul
popf
sbb
ret
test
mov
xchg
dec
pop
fildll
sbb
fnstsw
inc
pop
cs
mov
xchg
mov
jle
sub
pusha
loopne
scas
cltd
pop
jle
dec
sahf
push
jge
and
cmp
mov
pop
add
mov
cmpsb
ja
test
mov
mov
imul
mov
sbb
lea
test
adc
pop
xchg
jb
ret
push
cwtl
scas
mov
lds
push
cmp
adc
ret
xor
and
popa
arpl
jg
aad
repnz
aad
cs
cld
in
push
xchg
xor
icebp
int3
mov
cli
stos
pop
sbb
jl
sbb
fsubl
data16
push
xchg
mov
mov
xchg
push
mov
sbb
jb
add
xor
divb
mov
in
fs
and
cmc
jmp
sbb
les
or
jae
sbb
das
std
movsl
adc
aam
or
jp
rol
jne
insl
fimull
push
shlb
loop
push
in
push
repz
mov
mov
shrl
mov
jbe
cmp
jae
sti
lret
and
lods
push
std
jo
mov
sbb
or
push
jl
add
and
aaa
inc
jae
dec
add
adc
xor
cmp
adc
pop
mov
lcall
cmp
pop
iret
imul
sub
dec
jmp
xchg
aas
in
xor
movsl
loope
or
push
jle
jge
jno
iret
push
insb
out
and
jl
dec
das
sub
hlt
jo
cltd
sbb
in
dec
mov
fidivrl
int
mov
out
inc
das
fnstenv
jb
cltd
sub
hlt
ss
push
imul
int3
nop
movsb
mul
xor
or
add
push
fildl
movsb
sub
jo
jns
aam
mov
mov
pop
dec
jb
xor
lds
test
xchg
into
jb
out
push
sahf
ja
jae
test
out
or
xorl
jle
gs
sbb
lret
mov
in
push
jns
cli
movsl
enter
sub
fnstsw
js
idivb
dec
test
mov
pop
daa
push
shll
fnsave
insb
xchg
mov
imul
or
out
jge
leave
mov
xchg
mov
jl
xchg
or
dec
stos
daa
adc
sti
stos
pop
jecxz
je
push
inc
adc
inc
sti
stos
sti
sbb
or
mov
hlt
pop
movsl
rcll
ja
test
mov
test
in
repz
aad
lea
movsl
stos
inc
xchg
or
mov
xchg
or
lds
cs
dec
mov
and
std
cltd
loopne
ja
imul
dec
xor
imul
ja
dec
xchg
sub
cmp
push
lcall
arpl
sbb
jnp
rcl
jae
mov
mov
imul
sbb
fs
insl
insb
aad
jae
mov
xchg
jl
scas
imul
push
fidivrl
jne
sub
and
stc
inc
aam
aas
arpl
push
mov
jo
pop
adc
mov
push
cmp
in
inc
pop
test
movsb
dec
sub
fildll
adc
bound
cmc
or
imul
or
mov
push
mov
lcall
sub
push
gs
jecxz
adc
jp
loop
jl
sbb
scas
imul
jo
mov
jns
rdpmc
ret
push
pusha
pusha
int3
je
sahf
popa
push
mov
fmulp
mov
fstpl
pop
repz
lds
int
xchg
out
cmpsb
int3
imul
in
xor
dec
loopne
dec
mov
jbe
pop
push
push
test
sub
test
xchg
test
out
xor
cltd
mov
jo
push
jp
lcall
dec
xor
dec
pop
fnstenv
xor
movsl
and
push
adc
push
pop
or
mov
std
and
pusha
in
fwait
aad
shrb
in
jmp
mov
sbb
dec
loop
jge
rorb
jae
test
mov
pop
lret
icebp
mov
imull
fistpll
dec
xchg
xor
mov
and
rol
js,pn
sbb
cwtl
inc
mov
imul
movsl
cmpsl
adc
mov
pushf
dec
out
cs
loope
les
push
js
ss
mov
add
lret
mov
sbb
xor
xchg
sub
and
data16
push
mov
pop
sbb
mov
and
popf
arpl
andl
ja
loopne
lahf
imul
cmp
int3
int
mov
cwtl
jmp
idivb
add
shl
mov
dec
pop
mov
cmp
adc
mov
and
mov
mov
test
and
sbb
mov
xor
jle
mov
shlb
mov
mov
ds
xor
je
add
mov
test
aaa
cmp
imul
ss
push
iret
lahf
sbb
cmp
ret
pop
movsb
jo
or
xor
xchg
xor
mov
lods
pushf
jl
sub
dec
jbe
ljmp
fwait
pop
push
mov
adc
add
cmp
pop
insb
mov
inc
nop
sbb
lahf
adc
xchg
aaa
int
movsb
xchg
push
in
mov
mov
rcrl
fs
cmp
xor
add
sbb
sbb
cmp
mov
sbb
xchg
pop
xor
and
and
cli
in
imul
cmpl
push
push
cmp
cld
je
into
bound
jae
daa
mov
dec
xor
fbld
push
notl
push
insb
rcr
xchg
lods
xchg
repz
aas
clc
xchg
ficompl
int
cltd
cmpsb
in
sub
sub
scas
cmp
pop
and
je
cmp
jbe
data16
mov
jmp
xchg
cwtl
cmpsb
dec
test
xchg
jae
cld
orl
pop
mov
shl
aad
dec
xlat
mov
sub
mov
dec
push
int
adc
sbb
mov
flds
les
and
mov
push
aaa
jae
xchg
xchg
push
or
addr16
lret
mov
out
or
imul
add
shll
dec
mov
popf
mov
sar
xchg
or
and
pop
sub
mov
fmul
divb
ficoms
out
insb
in
inc
adc
xorb
xchg
jge
rolb
loope
int
jbe
xchg
cltd
daa
push
push
sub
dec
push
das
pop
fsin
and
mov
fs
psllw
movsb
in
adc
cmp
pop
aam
arpl
jae
fstps
sub
fs
xor
inc
jmp
jmp
mov
or
mov
xor
out
ja
inc
mov
imul
dec
cmp
xlat
mov
bound
pop
ljmp
push
add
pop
andb
lock
adc
js
mov
pop
and
xchg
sbb
lods
js
inc
loop
mov
daa
jbe
lcall
or
mov
mov
dec
sub
mov
in
pop
xchg
push
movsb
cmp
and
sbb
fldenv
inc
xchg
inc
dec
xor
and
mov
shrl
stos
sahf
scas
push
int
cmpl
sbb
pop
je
jo
addr16
mov
pop
out
pop
mov
push
aaa
mov
shll
push
xor
clc
jle
int
stos
push
or
sbb
mov
jne
scas
pop
les
arpl
dec
jae
cmpb
imul
xor
dec
cmp
hlt
sub
rolb
push
and
data16
stos
adc
lds
push
mov
xor
dec
or
call
pushf
cltd
mov
je
fldt
sub
jecxz
cmpsl
cmpsb
insl
insl
jmp
stos
shll
xchg
mov
scas
cmp
cmpsl
push
fiadds
popf
sbb
jae
mov
out
mov
push
into
call
pop
xor
imul
je
dec
rorl
stc
inc
sbb
movsb
add
test
mov
ja
in
adc
push
cmp
mov
add
pop
xor
test
lea
leave
jne
pusha
imul
jg
lods
dec
mov
push
sbb
repz
ja
out
inc
aam
test
add
test
push
mov
xchg
mov
pop
xchg
dec
and
dec
inc
mov
dec
pop
sub
inc
xchg
fstpt
subl
cmp
add
sub
notb
stos
push
adc
cmp
cmc
loope
pop
sbb
and
out
hlt
jmp
mov
out
mov
cmp
in
mov
popf
ja
push
pushf
movsb
xchg
jecxz
jmp
push
clc
pop
popf
aad
inc
cmp
jmp
ret
mov
test
pop
ds
lea
inc
jle
mov
xchg
call
std
adc
cltd
xor
and
int
aas
lret
movq
outsl
neg
shll
stos
cmpsb
mov
in
xchg
inc
sub
cmpb
mov
jae
mov
cmp
out
shrb
pop
xchg
sbb
jge
mov
cmp
ret
cli
and
mov
aad
mov
jge
push
push
insb
pop
inc
mov
inc
mov
mov
jle
mov
test
inc
jns
gs
mov
add
lcall
push
adc
add
cwtl
outsb
je
fs
fwait
insl
data16
sbb
es
cmpsl
mov
test
into
cmpsb
mov
out
lret
daa
mov
xchg
ret
cli
inc
mov
sbb
fstpl
pushl
repz
movsb
mov
inc
les
adc
call
dec
ds
push
fistpll
sub
jo
jg
dec
in
stos
push
add
lods
fldt
jle
loopne
jno
and
sub
jl
sub
sti
cmp
mov
adc
sub
stos
mov
sbb
mov
and
mov
insb
movsbl
int3
jmp
fldln2
jbe
cmp
imul
jae
out
in
xlat
adc
add
pusha
dec
cmpsb
lret
ss
sti
mov
ja
mov
mov
cs
mov
xlat
fdivrs
divb
fiadds
inc
mov
lods
ja
jne
mov
ljmp
test
and
xchg
sub
mov
test
pusha
movsl
mov
imul
cmp
aam
rclb
stc
lret
xchg
inc
adc
inc
sbb
in
lcall
mov
mov
scas
xchg
ja
adc
sarl
jo
les
xor
fldl
add
pop
inc
les
repz
clc
and
dec
mov
mov
divl
cmp
sbb
cmp
hlt
dec
push
lret
xor
jp
frstor
push
xor
jbe
lea
sbb
in
mov
and
loope
sub
hlt
cmc
ja
andb
jno
call
jb
int
mov
push
ja
int3
sub
push
add
lock
mov
and
pop
rcll
test
jne
ret
sbb
or
jecxz
out
jne
inc
hlt
ljmp
cmp
pusha
mov
xchg
mov
divl
outsb
push
xchg
subl
je
cwtl
cmp
inc
jl
mov
imul
int3
push
enter
lret
lods
push
xchg
inc
jns
cmp
lret
int
cltd
push
push
add
test
cmp
iret
stos
pop
outsb
adc
push
mov
insb
or
sbb
dec
insl
stos
in
sbbb
aaa
xchg
hlt
jge
pop
jl
sahf
mov
push
jp
popf
jbe
imul
jmp
enter
rcl
repnz
bound
repz
jge
outsb
fwait
or
mov
push
outsl
mov
mov
movsb
dec
xlat
test
je
dec
test
mov
out
mov
loop
push
loopne
arpl
sbb
mov
in
mov
xchg
repz
dec
movhps
aad
mov
lds
lock
push
xor
addb
out
xchg
sahf
inc
jae
jae
adc
pop
cmp
add
mov
mov
adc
mov
pop
pop
addr16
mov
xor
add
test
aad
fimull
scas
rcrb
fwait
xlat
lock
cmpsl
and
pusha
mov
mov
xchg
out
pop
sub
test
mov
jne
test
movsb
je
clc
sub
das
outsl
sbb
add
iret
pop
pop
mov
ds
in
aaa
ffree
daa
mov
xchg
test
arpl
inc
push
fdivrs
aam
ja
repnz
imul
mov
sbb
cwtl
sbb
sahf
rcll
mov
or
and
fnsave
sub
jmp
rcrb
dec
int
cmp
int3
ss
pop
jmp
test
lds
xchg
mov
jbe
icebp
push
ss
or
xchg
daa
and
imul
mov
insl
mov
out
xchg
or
scas
pop
mov
or
xor
jl
cmp
jae
stos
add
aas
pop
and
ljmp
jno
cmpsl
xor
push
pop
cmc
push
or
xchg
into
aam
xchg
negl
lret
inc
fstl
inc
sbb
inc
push
inc
xchg
and
jae
jl
jne
and
or
xor
push
mov
ja
aad
mov
rcrb
or
fildll
jo
mov
xchg
js
notb
imul
adc
jle
mov
ret
movsb
outsb
cmp
mov
fisubrs
adc
mov
mov
mov
push
jp
add
mov
scas
jae
arpl
sub
lahf
cwtl
shrb
xor
jge
xor
or
adc
mov
push
xlat
mov
inc
ficoml
jl
jle
xchg
sub
sti
es
ljmp
hlt
mov
sbb
orl
js
daa
imul
mov
mov
add
loope
dec
imul
or
xor
leave
rorb
shlb
imul
mov
push
les
pop
int
cs
scas
out
adc
add
js
push
cmp
jae
sub
int
push
mov
pop
fbstp
cmp
mov
sbb
and
je
jg
fdivl
cmpb
popf
pop
and
test
xchg
out
sub
push
jb
jae
pop
and
xor
add
jp
ret
mov
imul
xchg
cmpsl
aam
xchg
mov
sub
mov
xchg
daa
cmp
push
cmp
or
rcl
xor
adcl
arpl
add
dec
int
enter
pushf
mulb
aaa
ja
cld
rcrl
out
ret
inc
cmp
into
ja
je
inc
mov
cmpsl
push
mov
and
cmp
int3
fcmovne
fstpl
frstor
push
fsts
imul
in
mov
push
jge
cwtl
inc
jne
pop
scas
mov
xor
push
and
sub
xor
aaa
pop
test
fs
sub
sarb
testl
jnp
and
xchg
sti
add
inc
jl
jp
mov
daa
xor
inc
mov
pop
and
popf
jecxz
sbb
pop
or
adc
push
xlat
cmp
mov
mov
sbb
or
popa
mov
sahf
mov
ss
insb
out
je
mov
in
outsl
push
jns
out
loop
ret
sbb
xorl
xchg
pop
sub
insb
sbb
pushf
dec
or
lds
jb
pop
add
cwtl
adc
inc
xchg
pop
loope
jae
ja
movsl
clc
cs
xchg
fsubl
inc
and
int3
mov
inc
nop
ffreep
cwtl
ja
add
stc
add
dec
fldcw
push
lods
mov
pop
nop
jae
mov
pop
mov
mov
ja
test
jge
in
pusha
inc
push
sbb
xor
mov
or
roll
mov
lahf
or
mov
adc
popf
jmp
inc
mov
jecxz
or
loopne
xor
push
pop
mov
gs
xor
mov
mov
mov
inc
fmulp
xor
in
or
push
dec
xchg
push
mov
mov
enter
mov
sbb
add
std
mov
dec
cmc
mov
sbb
or
movsl
pop
mov
cmp
jl
clc
imul
xor
iret
insb
and
loop
jae
xor
ja
mov
jbe
rolb
lret
xchg
jns
mov
pop
out
pop
xchg
addr16
jae
pushf
cmp
out
stos
xchg
mov
mov
mov
cmpsb
inc
pop
arpl
popf
pop
lds
fmuls
pop
jae
cmp
repnz
inc
inc
sub
nop
test
lret
pop
jns
dec
cmpl
ja
fldcw
lds
and
jo
les
ja
push
inc
mov
inc
test
mov
dec
in
jmp
test
mov
sub
stos
cmp
add
mov
ja
mov
inc
jb
movsl
sub
push
jae
das
cli
ljmp
daa
jmp
je
sbb
jl
mov
inc
movsl
std
jg
cmp
dec
push
jle
out
adc
sbb
jle
and
jae
inc
into
jecxz
cltd
sti
cli
sbb
dec
lcall
mov
xchg
mov
adc
adc
mov
jge
fiadds
pop
cs
mov
fsubs
cmp
movsb
and
imul
mov
adc
call
adc
sbb
sub
push
sbb
mov
and
jae
in
lret
jns
out
cmp
xchg
xor
inc
movsb
and
xchg
ljmp
into
add
ret
and
outsb
out
and
and
ret
adc
push
pop
aad
xor
out
inc
xor
dec
loopne
jae
mov
out
dec
or
dec
popa
push
push
inc
sti
in
fwait
jl
lds
ljmp
mov
shrb
icebp
ss
das
lods
add
push
cld
andb
mov
jb
inc
dec
shl
lret
sbb
pop
popa
push
stc
cmp
push
lcall
jle
fmull
gs
subb
fstpl
test
popa
dec
xor
cmp
jecxz
mov
cmc
cmpsl
or
popf
sub
cmp
pop
in
dec
push
mov
hlt
subl
js
push
cld
adc
sub
insl
xor
xchg
pusha
xchg
js
or
sbb
ret
push
testl
xor
and
stos
jl
push
lahf
inc
lea
mov
jl
mov
ja
mov
leave
adc
clc
jb,pn
fs
div
pop
loop
cltd
imul
xlat
ja
xor
lods
cmpsl
sti
scas
stos
test
das
push
aam
sbb
nopl
js
out
xor
adc
xor
jge
es
xchg
mov
jo
les
cmpsl
pop
shll
cli
push
imul
cmp
cld
sub
shlb
or
ret
mov
leave
cs
dec
nop
push
push
push
test
lods
mov
loope
sarb
mov
mov
jb
ljmp
fs
xorl
xor
lods
and
cmp
push
add
mov
icebp
xchg
loopnew
into
bound
fimull
mov
std
pop
cmp
pop
test
push
add
add
js
fisttpll
pop
stos
or
sub
movsb
fdivr
ljmp
addb
pop
loopne
shl
cmp
je
das
inc
repz
push
sbb
mov
inc
repnz
movsb
push
ret
inc
xchg
ds
bnd
sbb
gs
sbb
dec
clc
sub
inc
dec
mov
stos
xchg
daa
and
das
iret
arpl
mov
ja
xchg
adc
aaa
imul
xchg
push
sub
xchg
aaa
inc
cmc
ss
push
push
aas
jbe
imul
add
xor
stos
dec
mov
cmpsb
or
dec
ss
mov
cmp
ja
push
xchg
ja
dec
lret
mov
stc
cmp
ret
mov
in
sub
adc
sub
addr16
mov
mov
cs
mov
cltd
insl
sub
repz
stos
xor
jbe
fdivl
xor
subb
mov
addr16
cmc
pop
loopne
andb
cmp
fildll
cwtl
dec
insl
shrb
mov
jle
sbb
pusha
jae
mov
or
inc
pusha
dec
js
inc
in
cmp
xchg
push
clc
cmp
sbb
gs
and
sahf
mov
in
add
push
push
push
cwtl
add
leave
shrl
fnsave
mov
add
cmp
or
and
or
mov
fnsave
push
xchg
pop
imul
in
pop
stos
test
test
push
je
sbb
in
dec
shr
sahf
sbb
int
lahf
push
pop
imul
mov
popa
xor
dec
and
insb
xor
sub
jae
jo
add
inc
in
xor
lcall
pop
adc
outsl
dec
push
das
fldz
aaa
or
in
icebp
ficoms
jae
mov
sahf
mov
push
push
or
cmpsb
dec
cmp
sub
les
add
rorl
aas
in
imul
adc
and
cmc
pop
ja
rclb
xchg
xor
sbb
std
push
imul
and
repnz
sbb
daa
inc
out
test
mulb
mov
aaa
cmp
add
adc
pop
mov
sbb
or
xchg
int
and
or
sub
mov
mov
mov
lahf
dec
cld
bound
es
sbb
jecxz
sti
push
in
jecxz
scas
lret
mov
push
cmc
pause
inc
jl
gs
test
js
add
hlt
insl
mov
insl
mov
faddp
inc
and
and
jae
xchg
cmpl
sub
xchg
stos
shrb
adc
scas
cmp
or
cmp
adc
and
dec
xor
fdivrs
lret
mov
pop
cltd
leave
adc
and
sbb
jae
dec
and
mov
mov
sub
pusha
mov
xor
sub
or
mov
ds
mov
jmp
sub
inc
cmpsl
cmp
mov
sub
pushf
pop
lret
mov
pusha
sub
xor
imul
mov
insb
mov
ret
push
mov
jae
addl
andl
in
fstl
cmp
and
mov
gs
mov
ds
pop
cld
iret
in
sti
cmp
bound
ja
rol
xchg
inc
lds
jg
xor
mov
loop
enter
test
add
ficoml
inc
xchg
dec
push
jae
adc
imul
lret
sbb
imul
jmp
cmpb
add
push
dec
lock
xchg
fdivs
mov
mov
stos
loopne
shrl
sbb
or
inc
jo
mov
xchg
int3
pop
jb
jbe
mov
mov
outsb
hlt
cmp
out
xor
jnp
jge
pusha
and
fidivl
ja
xchg
daa
scas
cmp
ret
scas
inc
call
mov
mov
pop
lea
call
ja
les
mov
daa
push
pusha
jae
int3
sti
test
xor
outsl
jg
filds
pop
leave
pop
sbb
adc
dec
fsubl
xchg
int
int
jmp
out
cmpsl
jmp
mov
repnz
add
rclb
fnsave
mov
in
xchg
cmp
xor
sub
int
or
xchg
outsb
mov
or
clc
gs
inc
idivl
cmpsl
lods
loope
mov
xchg
xchg
stos
push
mov
jnp
jb
cmp
popf
adc
pusha
sbb
adc
and
and
adc
test
sahf
clc
sahf
cld
mov
xchg
xlat
subb
jg
stos
cmc
sti
adc
pusha
xchg
cmpsb
ja
add
jae
insb
ret
pop
or
xchg
and
add
ljmp
jp
jg
int3
lea
adc
cmp
inc
std
and
cwtl
inc
cli
icebp
icebp
jle
cli
pop
test
xchg
mov
cs
ror
scas
xchg
mov
pop
div
ja
cmp
pop
int
lret
push
ja
mov
clc
aaa
out
pop
cmp
std
and
jp
fcoms
movsb
idivb
in
cmpsl
xchg
jae
fsubrs
or
loope
pop
and
adc
mov
fs
pop
lods
outsb
insb
jnp
and
xlat
sbb
push
cmp
mov
pop
cmpsl
lods
call
xor
push
sub
mov
xchg
push
adc
ss
data16
pop
mov
cmpsb
jmp
xchg
scas
sbb
cmp
or
mov
out
int
icebp
in
push
push
adc
cmp
in
movsb
es
mov
or
cwtl
test
fisttpll
movsl
orb
jnp
lcall
lret
insb
insl
aad
and
int3
clc
xor
psubb
mov
insl
xchg
mov
fs
cmp
scas
ja
sbb
pushf
shrb
mov
pushf
push
jecxz
cmp
ss
ja
or
sub
in
cli
cmp
xchg
in
mov
lea
jae
gs
sbb
ja
ficompl
push
int3
aaa
adc
xlat
movsb
xor
add
pushf
in
lea
fadds
adc
fsubs
mov
iret
pop
enter
testl
jl
out
test
mov
jbe
lods
popf
xchg
mov
mov
mov
icebp
gs
faddl
adc
ret
out
push
add
in
mov
stos
adc
mov
mov
inc
in
shll
xchg
xor
ss
push
mov
dec
dec
in
cmp
nop
jae
aas
mov
mov
push
lods
call
jge
loope
xlat
xor
and
pop
xor
add
and
imul
subl
pop
addl
clc
mov
cmc
push
inc
jg
push
cld
cwtl
xchg
fdivrl
mov
or
stos
sub
push
mov
std
lret
push
or
mov
fistpll
ss
mov
xchg
bound
xor
adc
pushf
aas
cmc
fisubrl
sub
adcl
mov
and
lret
add
stc
into
dec
enter
pop
mov
mov
pusha
test
cltd
scas
xchg
pop
or
std
test
sub
inc
jge
fsubrs
into
imul
fsub
stos
neg
iret
dec
cltd
dec
or
pop
push
cmp
sahf
mov
fcmove
sahf
aad
sub
dec
xchg
inc
jmp
icebp
sub
hlt
mov
push
sbb
cmp
cltd
fnsave
adc
pop
mov
xchg
jb
xor
mov
pop
insb
xlat
pop
in
push
mov
inc
imul
sbb
jo
repnz
pop
addr16
push
inc
jno
shll
repz
jno
push
jo
jp
xor
jo
and
sbb
pop
imul
fwait
les
xor
fisubl
call
cmc
dec
subb
bound
outsb
or
test
mov
pop
or
inc
push
dec
adc
push
or
and
or
popf
arpl
cmpsb
xor
in
es
loop
and
adc
mov
mov
sbb
sub
enter
jno
or
pop
xchg
fwait
sbb
movsb
sti
stos
rcll
adc
mov
sbbb
cmc
in
push
imul
call
jae
push
lret
cmp
fisttpl
xchg
cwtl
mov
pop
stos
lods
ret
dec
clc
mov
and
mov
das
fldenv
jb
ja
dec
mov
popa
push
repz
xor
imul
cmp
test
test
in
push
pop
mov
cmc
add
cmpps
pop
sub
mov
jg
bnd
fwait
lea
mov
movsl
adc
in
sbb
repnz
pop
pusha
inc
or
fsubp
repnz
cmc
outsl
sub
xchg
push
xor
ds
popa
pop
inc
rcrl
imul
cmp
mov
xchg
cmp
dec
cwtl
adc
insl
je
push
push
sub
insb
in
popa
insb
mov
inc
mov
jmp
fistpll
cmpsl
pop
je
outsb
scas
jns
sbb
adc
fstpl
sahf
and
std
pushw
stos
getsec
sub
mul
test
out
add
sub
pop
lahf
jg
xchg
pusha
jae
xor
pushf
mov
sub
inc
sub
xchg
mov
ljmp
in
mov
cs
adc
insb
addb
cmp
in
loop
sbb
add
into
xchg
inc
push
cs
stc
adc
xchg
aaa
mov
pop
or
adc
bnd
fstl
es
rorb
fnstenv
mov
in
jo
lret
mov
dec
sbb
into
gs
sub
mov
inc
sbb
sub
xor
mov
scas
repnz
mov
imul
push
mov
insl
mov
shr
ds
mov
xor
mov
frstor
cs
pop
add
imul
out
test
adcb
pusha
loopne
stos
dec
jmp
or
xchg
aaa
mov
sbb
lret
mov
xor
dec
mov
dec
lret
mov
sahf
shll
fidivrs
test
xor
jo
pop
adc
mov
push
pusha
ret
imulb
imul
xchg
hlt
arpl
out
push
jl
xlat
mov
ja
jo
cmp
xor
loope
jbe
push
jae
adc
lretw
pop
mov
jle
sub
fcomps
or
stc
xlat
loope
and
adc
and
sub
mov
mov
sbb
jle
jns
pop
xchg
inc
mov
clc
or
pop
pusha
pop
pop
mov
xor
and
adc
insb
and
and
out
nop
dec
pop
jge
movsl
jae
cs
shll
das
fcompp
insl
jo
add
fwait
push
jne
in
adc
rorb
mov
jbe
ja
sbb
ret
xor
jmp
filds
xor
mov
add
out
or
imul
in
jo
fnstsw
add
fiaddl
leave
std
jmp
iret
mov
int3
xchg
jmp
ja
movsl
xchg
inc
js
fldenv
mov
cwtl
push
pop
jmp
js
xor
lcall
cmc
flds
push
pop
jae
mov
add
stos
jns
sahf
adc
dec
push
push
xor
loopne
sbb
jns
test
sub
dec
popa
sub
mov
xchg
mov
cmp
pop
xor
mov
pop
dec
adc
cmp
xchg
std
pop
mov
clc
movsb
shlb
adc
aad
aas
cmp
cmpsl
mov
pop
mov
xchg
repz
movl
pop
jo
jns
aaa
test
xor
sar
shrl
js
lods
jo
xorb
pop
lods
dec
insb
mov
adc
xchg
jbe
mov
push
insl
xchg
out
sbb
lods
push
icebp
jecxz
jae
mov
mov
add
aam
push
and
xchg
inc
mov
mov
push
sub
xor
pop
aaa
inc
mov
lods
fnsave
daa
sub
pusha
add
int3
data16
aaa
mov
adc
aaa
mov
xor
jl
push
sar
mov
pop
inc
sub
xor
jl
mov
mov
in
inc
inc
mov
in
int3
push
adc
shlb
jecxz
aaa
stc
lds
and
fcomps
daa
or
pop
and
out
ffreep
or
mov
incb
adc
cld
clc
cmpsb
rclb
imul
xchg
jo
and
fsubr
mov
mov
fwait
inc
mov
and
adc
stos
loope
push
mov
pop
clc
cmp
cmpsl
jle
adc
popa
dec
or
imul
mov
out
mov
add
mov
push
push
cli
int
aas
sub
adc
or
jo
call
mov
xor
mov
add
sbb
iret
adc
inc
jg
push
rolb
adc
mov
pop
imul
popl
subb
mov
jbe
sbb
pop
pop
mov
pushf
outsl
jo
jmp
push
in
daa
sub
je
dec
test
imul
push
in
pop
inc
sbb
jbe
js
jp
iret
mov
addr16
sbbb
andl
mov
stos
leave
cmc
jno
cmp
jo,pn
je
sub
cmp
or
lock
mov
sub
adc
repnz
cmpsb
addb
push
cld
int
inc
or
arpl
outsl
jmp
pop
jae
xor
data16
adc
test
pusha
push
push
test
mov
mov
aas
pop
cmc
jmp
leave
test
mov
xchg
popa
or
fsubp
cli
push
pop
roll
xor
pop
add
pop
movsl
fwait
imul
mov
fidivrl
arpl
stc
jle
fstpl
imul
add
inc
lret
cmc
push
mov
xor
movsl
adc
xchg
adc
push
pop
sahf
mov
fmulp
inc
cs
outsl
pushf
dec
aas
pop
jne
movsb
mov
xchg
mov
sbb
das
out
pop
mov
xor
xor
push
inc
incl
xor
sbb
aas
or
leave
sbb
sub
cmc
push
sub
lods
daa
int
mov
flds
or
cmp
jmp
mov
jo
xor
adcb
in
mov
cmpsb
and
in
aad
mov
cmp
push
dec
mov
inc
mov
xchg
fadds
je
mov
mov
mov
dec
in
cwtl
pop
clc
mul
aaa
repz
das
xlat
sahf
push
insb
add
inc
in
ficomps
fs
push
fwait
hlt
sbb
adc
pop
fcmovnu
jecxz
push
sbb
pop
add
mov
lret
sub
sbb
sbb
ss
lea
fdivl
loope
in
popf
xchg
sbb
xchg
or
out
or
or
mov
js
scas
jo
lahf
mov
out
out
cmp
push
mov
add
cld
addr16
sub
inc
stc
ficoml
mov
add
pop
cmp
inc
cld
sbb
dec
jae
lds
push
clc
fs
mov
inc
pop
push
mov
icebp
adc
cwtl
sar
mov
es
push
mov
jae
mov
push
movsl
inc
xchg
adc
clc
lock
clc
out
push
inc
test
jecxz
mov
xor
ja
mov
cvtps2pd
stos
movl
imul
dec
mov
fucom
pop
sub
les
imul
push
sbb
pop
sbb
cltd
dec
ja
arpl
xchg
dec
pop
outsb
cmp
xor
call
mov
jbe
sub
mov
adc
xchg
jae
mov
xchg
aas
or
mov
imul
or
mov
cmc
xor
stc
es
pop
push
cmp
pop
pusha
mov
imul
cmc
sub
outsl
jo
jo
jne
lds
orl
xchg
or
in
cltd
pop
inc
cli
push
leave
adc
testb
push
push
jmp
fwait
js
push
ljmp
fdivrs
cmpsl
shrb
js
add
jge
call
xor
aam
mov
data16
in
adc
sub
cs
mov
xchg
fisubs
sbb
insl
inc
cli
jmp
push
add
loop
cli
pop
jns
jno
jae
add
out
int3
push
imul
mov
inc
pop
popf
aaa
mov
jns
inc
rcl
clc
cld
repz
jge
test
ret
es
jo
or
mov
shrl
imul
pusha
sbb
jbe
pop
push
cmpsb
test
add
into
push
repz
and
lock
jne
imul
xor
ljmp
lcall
xchg
scas
xor
xchg
add
std
xor
push
push
push
add
imul
adc
mov
jle
adc
jge
shlb
scas
push
insb
ja
movsb
cmp
fbld
xor
jo
push
pop
push
nop
dec
lret
fsubl
and
adc
adc
inc
lods
fiaddl
es
fcompl
mov
shrl
out
sub
ja
push
inc
hlt
cmpsb
int3
mov
inc
test
xor
in
hlt
je
movsb
inc
and
add
xchg
inc
inc
stos
aad
adc
les
int
add
scas
sbb
add
pop
lcall
xor
mov
movsl
mov
sbb
xorb
push
xor
hlt
push
cmp
jmp
mov
ja
adc
arpl
jmp
dec
mov
cmp
mov
adc
add
outsb
inc
xor
fstps
js
xor
and
pop
aas
test
mov
pause
mov
and
int
cmp
xchg
out
dec
mov
mov
ljmp
fs
inc
push
cmp
das
lds
inc
sub
dec
jmp
test
mov
nop
mov
pop
pusha
lret
shrb
pop
fistl
pop
mov
push
lcall
in
mov
xchg
pusha
mov
in
pop
sub
mov
jge
jae
iret
cmp
cmpl
imul
cmp
movsb
xor
dec
mov
mov
loope
test
ja
jae
les
inc
cmp
gs
aam
lods
mov
jle
stos
aam
push
mov
fs
int3
cld
cwtl
jle
sub
movsb
cmc
std
and
fs
jo
and
addl
mov
fsubs
dec
insb
jnp
push
fdivs
cmc
lret
dec
arpl
mov
dec
aad
insl
insl
push
xchg
fbld
mov
lods
pop
sbb
lret
fdivs
push
add
adc
xor
lds
mov
sbb
notb
inc
in
cmpsl
jns
or
int3
mov
fs
nop
dec
push
xchg
jmp
pushf
pop
cs
pushf
sbb
cmpb
pop
cs
push
flds
mov
jmp
sbb
sub
fdivr
cwtl
into
mov
fnstenv
add
dec
ja
and
test
pop
lds
dec
ret
sub
sub
add
push
test
push
xchg
cld
subb
xorl
test
insb
es
fcmovnb
int
pop
or
xor
je
test
leave
mov
and
sub
or
sti
mov
repz
pop
aaa
in
mov
lahf
pushf
sbb
pop
pop
mov
insl
fidivl
mov
adc
add
sbb
cmp
mov
pop
mov
mov
sbb
mov
adc
clc
jne
xorw
xor
xor
out
mov
inc
mov
cmp
jae
jb
out
mov
movq
push
and
jmp
jns
cltd
insl
sbbb
push
xchg
fstpl
bound
mov
aaa
in
imul
mov
cmp
add
xchg
inc
push
imul
dec
cmc
pop
test
jo
push
in
add
push
xor
and
es
adc
push
mov
inc
repz
xor
sub
push
not
mov
popa
mov
cmp
pop
xor
iret
fists
lcall
jne
in
xor
dec
fadd
xor
int3
js
or
push
push
dec
push
xor
in
xchg
or
jae
xor
stc
push
sahf
push
and
sbb
sub
jae
push
xchg
data16
andb
pop
pop
aam
es
es
cmp
xchg
loope
cmp
jnp
jae
data16
cmp
addb
and
ja
fucomp
mov
jl
aaa
jle
jbe
or
in
test
cs
xchg
gs
dec
mov
dec
lcall
rcll
into
sbb
push
or
xchg
es
out
push
pop
adc
loope
sarb
bound
test
dec
mov
cltd
ret
adc
ret
jnp
clc
sbb
jae
cs
inc
push
xor
xchg
rcll
or
mov
mov
popf
loopne
jbe
pushf
nop
and
mov
lcall
or
jp
stos
rorl
dec
sbb
lret
jg
repz
lret
xlat
pop
enter
adc
repnz
lcall
push
mov
jge
push
pop
push
sbb
xor
dec
pop
xor
push
mov
ja
and
call
pop
imul
iret
sbb
xchg
das
mov
cmc
call
loope
or
lret
add
xor
or
rcr
test
lods
push
jg
pop
push
inc
add
xchg
sti
addr16
icebp
xchg
sub
bound
lahf
jne
mov
dec
inc
xchg
test
sti
cli
cmc
aaa
insb
clc
sbb
idivl
mov
inc
jnp
mov
jl
push
int
inc
xchg
cmp
ljmp
mov
or
out
popa
sub
test
push
cmp
sub
inc
adc
je
repnz
xchg
sbb
divl
mov
or
lods
mov
dec
xor
and
pop
mov
movsb
jbe
and
je
adc
xor
mov
loopne
imul
rcrl
hlt
mov
mov
aad
xchg
in
pop
mov
cwtl
add
ja
mov
into
int
jbe,pt
aam
jo
jb
mov
jae
rcr
mov
inc
movsl
and
cwtl
push
ret
jecxz
clc
lcall
arpl
jo
xchg
scas
xor
test
xor
jae
xor
into
ds
inc
push
repnz
les
xchg
inc
lcall
sbb
imul
lods
dec
xor
into
std
push
push
adc
fdivrl
pop
sub
ja
cli
dec
add
fwait
inc
push
mov
fcoml
repnz
into
xor
inc
sbb
movsb
xchg
xchg
sub
pushf
pop
jns
xlat
or
jae
lret
ljmp
outsb
cmp
sub
inc
imul
mov
pop
jbe
cmpsb
mov
xchg
cld
fistpll
push
pop
mov
mov
mov
test
xchg
dec
pusha
pop
push
in
fidivrl
jb
fists
pushaw
mov
xchg
cmp
jno
negl
mov
mov
aas
imul
in
movsb
push
jg
lods
ja
sub
sbb
sub
mov
mov
jbe
sub
jae
enter
jmp
xchg
mov
mov
pop
jle
xor
loope
pop
sbb
xchg
pusha
les
int3
xchg
mov
adc
leave
lcall
nop
jae
scas
inc
ret
mov
sbb
sbb
xchg
pop
rcr
add
out
call
movsb
fistpl
cs
push
xchg
sbb
movsb
dec
mov
xor
jmp
xchg
push
push
jnp
shlb
call
out
xchg
and
lcall
cmp
xorl
into
mov
xchg
sub
rcrl
xchg
bound
or
mov
cmp
mov
cwtl
in
xchg
frstor
arpl
sub
lret
scas
mov
rol
xchg
jg
pop
into
push
test
insb
inc
cmpsl
ss
lods
andb
jecxz
ss
sbb
push
sbb
aam
das
pop
sbb
mov
jp
sarb
andl
imul
outsb
adc
xchg
rorl
jl
mov
push
mov
out
mov
je
in
mov
adc
mov
jo
lods
insb
cmp
pop
jo
mov
mov
jo
mov
push
and
mov
adc
fcoml
jb
xor
lds
cmpsb
cmpsb
jge
stos
lds
cld
adc
out
int3
cli
mov
sub
mov
pop
cmp
rclb
xchg
stos
pop
stc
mov
push
es
push
push
jae
aam
sub
mov
add
jne
add
push
into
sub
iret
dec
arpl
sbb
iret
insb
mov
lret
jl
add
in
pop
faddl
cs
dec
xchg
and
pop
in
pop
push
jo
sti
lret
jb
scas
cmp
test
pop
dec
add
push
sbb
push
int
xchg
mov
xor
mov
push
jb
ja
xchg
push
daa
aad
test
cmp
repz
enter
mov
js
cmpsl
cltd
insb
jge
ss
pop
imul
mov
mov
or
test
ja
dec
test
mov
gs
in
cmp
dec
xchg
jg
and
push
pop
insb
pop
idivb
sbb
test
or
outsb
push
mov
jne
movsl
pop
adc
js
jo
scas
mov
in
jae
cmp
xorb
clc
cs
pop
add
lret
test
lret
adc
cmp
ja
jb
js
sti
push
jg
jns
jns
jo
bnd
iret
out
push
pop
lahf
cltd
adc
enter
dec
lret
mov
insb
lds
nop
pop
jne
in
aaa
lcall
test
push
push
repz
es
jne
aam
cs
mov
pop
mov
mov
imul
ffreep
xchg
cli
add
insl
leave
cmp
fdivs
clc
test
scas
push
pop
mov
mov
nop
jb
or
jae
insb
jb
test
xor
sti
jge
ljmp
fmull
pushw
xchg
xlat
sti
pop
mov
sbb
int
jne
iret
mov
cltd
int3
adc
mov
xorl
arpl
je
sbb
xlat
ja
and
and
call
push
ja
fbstp
jge
pushl
adc
outsl
push
xchg
mov
inc
arpl
push
mov
xchg
pop
mov
mov
stos
imul
sbb
mov
jne
pop
mov
outsb
jmp
cmp
cld
pop
lret
aam
jae
mov
vpmacssdqh
pusha
push
mov
inc
jo
in
push
pop
xchg
mov
into
imul
mov
int
pop
scas
xor
adcb
sub
and
incl
js
push
lret
jne
sbbl
les
cmp
mov
push
dec
fstps
or
push
mov
and
and
mov
jo
mov
outsb
xor
mov
aad
jae
outsl
pop
push
jb
ja
mov
or
cs
inc
cmc
les
std
loopne
repz
xlat
fiaddl
int3
cs
mov
mov
out
cmpsb
dec
fstl
cmp
push
mov
imul
movl
rol
test
lret
lds
sub
jg
sbb
fwait
test
adc
sub
inc
pop
shlb
sub
mov
fmull
frstor
mov
pushf
sub
insl
daa
mov
lods
mov
and
mull
mov
jae
jbe
push
lahf
in
and
mov
jo
inc
movl
xchg
inc
pop
cmp
cltd
fwait
sti
push
fisubrs
das
sahf
sbb
imul
into
clc
jl
cmp
aas
pop
aad
test
mov
inc
mov
sub
popa
dec
mov
notl
fcomi
aad
xor
adc
jo
in
push
sbb
aaa
popa
inc
fnsave
int
mov
bound
stos
jae
lods
sbb
xchg
insb
repz
add
xor
xlat
sbb
scas
flds
mov
lcall
int
pop
mov
out
je
sub
aam
cld
jl
cli
fstpt
mov
nop
mov
inc
in
je
jns
xchg
int
in
xorl
mov
test
mov
and
sub
mov
out
adc
adc
scas
pop
sub
popf
xor
jp
in
xchg
sbb
inc
test
mul
xchg
mov
repnz
push
das
mov
lahf
adc
xchg
mov
cmpsb
mov
cs
lea
adc
xchg
xchg
ficomps
cwtl
int
data16
je
fadds
aam
lret
jns
in
adcb
out
pop
xor
push
ret
stos
xor
mov
iret
or
or
cmp
mov
xchg
cmp
dec
aaa
adc
mov
mov
push
aaa
mov
insb
xchg
sti
push
sbb
std
rolb
test
mov
stos
inc
test
mov
imul
jne
aad
mov
mov
cwtl
dec
pop
lret
mov
pop
push
ja
sbb
cmp
fstpt
je
pop
mov
sub
hlt
fimull
or
jo
pop
jecxz
inc
je
inc
sarb
lds
and
xor
inc
add
lea
fldenv
mov
loopne
pushf
inc
add
test
jo
lods
scas
mov
movsl
out
pop
push
or
imul
push
mov
push
jecxz
inc
and
cld
js
xchg
imul
ret
jg
movsl
shlb
mov
mov
fmull
out
into
push
std
test
ffree
xor
mov
data16
inc
sti
int
mov
insb
test
cmc
ret
bound
xor
dec
insl
pop
cwtl
movb
sub
ds
inc
adc
lret
mov
cmpsl
insb
hlt
push
jg
inc
mov
adc
lea
in
xchg
mov
mov
jl
mov
ret
pop
pop
xor
push
or
xlat
push
lret
xchg
or
push
push
mov
test
in
aas
or
cltd
xor
dec
and
ja
or
xchg
repz
or
sarb
shrb
mov
stos
lock
jecxz
fildll
stc
popa
repz
and
pop
sub
fsubrs
sub
mov
notb
inc
std
nop
sub
negb
mov
push
jo
mov
jmp
mov
mov
pop
daa
scas
lods
cwtl
push
addr16
mov
push
pusha
mov
mov
jo
sahf
pop
mov
hlt
cs
and
pop
mov
ja
imul
cli
scas
repz
mov
mov
pop
push
scas
in
int
imulb
pusha
inc
or
or
addr16
xor
xor
xchg
mov
add
ja
insl
lock
loop
loop
add
insb
pop
sbb
jo
cmc
push
xchg
outsb
sub
out
outsl
les
adc
icebp
push
mov
lock
push
cli
addr16
clc
jae
xchg
outsl
sub
jb
loop
daa
ljmp
pop
mov
loope
inc
sub
test
in
addr16
pop
inc
sbb
enter
inc
mov
push
dec
and
or
mov
mov
mov
lea
shrl
sub
ja
shrb
jecxz
xchg
or
mov
pop
hlt
imul
into
mov
xchg
sub
adc
lcall
popf
stc
in
pop
daa
xchg
jb
fs
mov
mov
pusha
push
push
xor
or
imul
ds
out
popf
pop
sti
pushf
ja
lret
mov
and
mov
sti
mov
add
pop
xchg
jo
in
int3
rorb
ret
out
and
adc
jecxz
push
mov
pop
test
pop
int3
jle
mov
cmpsb
push
test
ja
out
pop
pop
into
jbe
mov
scas
xchg
adc
jge
pop
insb
mov
xor
hlt
addr16
inc
xor
sbb
dec
jae
jecxz
inc
arpl
shrl
sbb
push
add
imul
mov
jge
addr16
subb
lds
das
cmc
repnz
clc
mov
add
inc
fadds
movsb
cmp
mov
mov
mov
sbb
xor
mov
mov
push
movsl
cltd
pop
cmp
jp
jae
pop
daa
push
xchg
cmp
cwtl
inc
mov
into
int
scas
das
cs
je
data16
or
mov
in
loopne
jl
pop
arpl
push
cmp
or
add
cwtl
xchg
pop
ss
adc
imul
rolb
int
stos
outsb
je
in
test
jae
fsts
mov
popa
jl
in
or
inc
std
xchg
pop
cmp
jl,pn
cmpsl
pop
jne
push
cmp
arpl
jnp
dec
lds
enter
jmp
adc
jno
fs
mov
mov
insb
aaa
dec
dec
dec
push
in
adc
test
cmpsb
rorl
mov
push
jmp
pop
fidivs
mov
push
push
fsubp
cmpsl
cli
fisttpl
push
insb
fs
aaa
add
jns
sbb
mov
xchg
mov
pop
jae
lds
xchg
es
pop
fistpl
jns
rcll
xchg
dec
pop
data16
inc
movsl
and
cltd
in
js
sbb
repnz
xchg
rorl
stos
les
pop
lret
push
pshufw
sahf
and
lret
sbb
sub
test
jle
aam
inc
pop
cmovge
pop
arpl
into
mov
jae
pushw
imul
jl
dec
push
fcoms
mov
pop
push
movsb
test
xchg
sub
gs
mov
cmp
mov
xor
and
jns
adc
mov
add
and
cmpsl
lds
xchg
dec
aam
xchg
je
push
mov
sub
fdivl
xchg
adc
mov
mov
in
clc
inc
fwait
pop
jae
xchg
push
adc
push
xor
adc
ja
outsl
xor
add
jl
pushl
repnz
movsb
mov
cmp
leave
ficoms
pusha
dec
sub
xchg
xor
test
jle
test
std
adc
cmp
cmp
es
lret
xchg
clc
mov
adc
xor
mov
push
es
fbstp
xor
mov
in
xor
pusha
pop
push
or
popa
je
mov
sub
mov
mov
cs
das
xor
inc
xor
dec
and
xchg
xor
test
lods
in
lcall
div
icebp
ds
pop
sub
dec
movsl
mov
xchg
dec
mov
adc
mov
in
push
and
inc
outsb
rorl
pop
xor
pop
movsb
mov
out
mov
sbb
pop
mov
sbb
in
negb
cli
sub
inc
cltd
jae
test
movsb
adc
sub
xchg
addr16
sti
test
into
sbb
dec
adc
jl
adc
jge
mov
push
jle
dec
xchg
cmp
movsl
mov
cmp
mov
imul
sbb
mov
mov
xor
xchg
imul
jae
jl
push
xchg
mov
das
mov
mov
cmpsl
xor
test
scas
xchg
adc
xchg
insl
addr16
xchg
xor
mov
mov
jbe
test
add
pop
pop
adc
aam
mov
and
imul
js
sbb
xchg
mov
std
rcll
adc
jp
ret
jb
ljmp
loope
push
xchg
xchg
ret
xchg
and
inc
xor
push
ret
and
nop
pop
jecxz
test
jl
stos
repz
pop
test
movsl
rcll
lahf
cltd
dec
mov
adc
daa
jbe
pop
pushf
decb
cmp
daa
aam
lea
adc
pop
movsl
fwait
out
add
idivb
out
insb
push
ficoms
jg
push
popf
mov
sbb
mov
movsb
xchg
and
mov
xchg
sbbb
add
fdivrl
shrb
lea
add
enter
sbb
inc
mov
nop
insb
pop
stos
lds
clc
stos
in
pop
lods
mov
ja
push
cmp
cmc
sub
jae
push
sub
cld
lea
push
pushf
and
fadd
push
dec
sbb
ss
pop
mov
test
sub
cmp
mov
in
and
rcll
add
js
scas
sbb
orl
cmp
repnz
les
bound
ss
test
lahf
std
imul
pop
jnp
arpl
jl
addr16
jno
mov
lahf
mov
jno
insb
repz
ja
sbb
fwait
int
adc
mov
adc
jo
inc
das
sub
jo
stos
ja
mov
divl
pop
mov
jge
xchg
lods
mov
jl
jae
push
pop
push
aam
loop
inc
movsb
inc
sbb
cmp
add
nop
mov
sub
addr16
bound
mov
imul
cmpsb
mov
scas
fdivrp
aad
test
mov
inc
movsl
not
adc
pusha
xlat
pop
mov
sub
jmp
add
dec
insl
ret
and
in
data16
jnp
pop
xor
aaa
jbe
negb
imul
shll
push
dec
or
icebp
int3
cmp
mov
clc
mov
stos
sarl
mov
hlt
sbb
mov
jecxz
pop
pop
push
jle
cmpsb
insb
pusha
shll
mov
daa
xlat
adc
cmp
xor
mov
outsb
shll
cli
fmuls
sbb
mov
sbb
push
dec
lock
leave
loope
xor
fs
push
add
outsb
call
out
outsb
pop
movsb
jg
loopne
ret
inc
and
mov
les
mov
movsl
dec
jno
cltd
repnz
imul
mov
push
jl
in
inc
std
xor
les
jle
mov
repz
and
js
scas
push
mov
pop
xor
xchg
loopne
outsl
addb
icebp
push
mov
dec
lret
or
xchg
lahf
xchg
iret
ret
lcall
fidivs
and
cmc
cltd
push
add
xor
dec
orb
xchg
fnstenv
dec
fidivrs
jae
aaa
and
xor
std
outsl
xchg
lock
arpl
mov
int3
adc
mov
movsl
pop
lods
push
imul
cmp
sahf
daa
mov
mov
test
pop
cwtl
xchg
mov
mov
ret
iret
int3
lods
dec
jb
aaa
cltd
out
fisttpl
and
fildl
jno
adc
jo
add
cwtl
in
jne
das
fs
or
push
and
addl
frstor
outsl
imul
roll
into
loope
aad
jmp
fsubl
cmp
out
jmp
xor
out
jo
jb
dec
inc
clc
mov
push
and
push
push
mov
mov
lret
add
shrl
sti
mov
jns
adc
shrb
pusha
mov
inc
sbb
inc
mov
mov
xor
in
ljmp
addr16
and
mov
stos
or
dec
or
dec
xor
les
sbb
popa
adcb
fwait
cmpsl
and
jecxz
jo
and
aam
push
fistpll
fsubrs
loop
xor
mov
fwait
push
sbb
mov
inc
add
sub
insb
leave
testl
mov
jo
sbb
mov
mov
jno
xor
mov
push
sarb
jns
lods
test
and
mov
pop
lret
je
mov
sbb
mov
enter
pop
add
into
adc
pop
insb
fdiv
xchg
es
add
xchg
insl
ret
fisttps
je
ds
mov
jae
out
cmpsb
cwtl
mov
push
xchg
jp
das
mov
fsub
mov
inc
fisttpl
ffreep
outsl
iret
cmp
imul
sbb
xor
lods
pusha
out
repz
or
push
imulb
cmp
loope
mov
cmpsb
mov
clc
pop
sub
mov
mov
ja
mov
jnp
lcall
jae
stos
push
imul
incb
cmp
mov
inc
push
roll
xchg
test
jle
and
mov
stc
pop
arpl
scas
xlat
jns
and
sub
pop
shll
outsl
jg
call
pop
repz
movsb
loope
xchg
jnp
fnstsw
cwtl
mov
cmpsb
mov
les
test
sub
dec
mov
mov
loope
push
loope
xor
movsb
aam
mov
xchg
mov
sbb
js
push
inc
movsb
push
mov
pop
sbb
mov
jg
repz
pop
outsl
cmpsb
js
mov
push
fcomps
loop
rorb
or
inc
mov
outsb
sbb
test
adc
shrb
in
lods
je
imul
pushf
push
jae
or
jg
adc
sahf
fisubl
pop
push
sbb
pusha
je
adc
aas
idivb
test
sbb
sub
lock
inc
call
jae
pop
and
mov
kmovw
cmp
adc
xchg
xor
pusha
xor
xchg
mov
mov
inc
pop
mov
rcrb
icebp
in
jne
jae
in
mov
push
and
mov
mov
jbe
imul
into
sbb
testl
or
pop
sbb
or
inc
mov
imul
aam
push
jne
mov
adc
xlat
mov
into
jmp
daa
dec
leave
jb
aaa
jge
mov
and
cs
add
lds
lea
jecxz
clc
test
mov
sub
mov
popa
jp
jg
and
js
mov
push
or
pop
mov
cli
cmp
mov
mov
ja
cld
mov
mov
popl
stos
inc
push
mov
mov
mov
cmp
mov
xchg
dec
dec
dec
int
adc
enter
pop
mov
div
in
and
icebp
subl
ljmp
mov
push
clc
outsb
popf
std
hlt
sub
mov
mov
jle
popa
rclb
scas
jae
jg
icebp
repnz
lcall
or
clc
inc
je
dec
mov
mov
popf
inc
mov
or
imul
and
mov
mov
cmovle
or
es
fstp
mov
mov
jo
inc
jg
cs
cmp
subb
das
xor
addr16
fwait
mov
movb
mov
pop
inc
mov
aad
les
std
add
adc
pop
pop
push
inc
mov
dec
xor
insb
pusha
cli
jae
cwtl
and
rcll
clc
ja
cmp
sub
mov
mov
or
lds
push
data16
leave
mov
mov
imulb
insl
into
pop
movd
mov
jae
notb
mov
jg
clc
hlt
mov
and
mov
pop
outsb
jnp
in
mov
push
in
pop
add
xor
ja
scas
movb
out
and
jae
out
cli
cmc
push
imul
test
int
out
sub
in
jae
andb
cmp
lea
test
xchg
xlat
mov
cmp
into
xor
cmc
outsb
roll
xor
mov
mov
je
test
cmp
mov
jae
movsb
lret
and
sahf
sub
mov
sti
mov
imul
mov
into
inc
sub
jp
in
push
mov
cmpsb
xor
rcr
rcrb
cmp
lds
add
popl
xor
cmp
sbb
xor
shl
pusha
imul
repnz
sbb
fidivl
sub
mov
movsl
dec
fdivrl
mov
repz
jle
jae
xchg
in
mov
cmp
push
stos
lcall
mov
mov
adc
jmp
icebp
pop
ja
push
inc
jns
xchg
xchg
inc
jecxz
mov
add
lret
cmp
xchg
lock
fcompl
pop
adc
jmp
movsl
ret
sub
sahf
adc
daa
ljmp
mov
int
rcr
daa
and
xlat
sbb
jmp
aam
jae
popa
pop
cmp
mov
out
mov
lret
lret
out
arpl
sahf
push
fwait
mov
lret
cmpl
fdivr
dec
test
mov
aam
imul
push
sbb
loopne
jne
and
pop
aam
jb
mov
cld
jb
imul
jo
mov
adc
xor
dec
fldl
mov
cmp
repz
push
sti
adc
jae
inc
bound
xchg
imul
mov
sbbb
xchg
rol
lea
mov
data16
jecxz
xchg
or
pop
mov
dec
repz
mov
jge
sub
stos
cmp
push
popf
data16
call
dec
xchg
imul
cwtl
mov
adc
out
fldt
lods
sbb
pop
mov
movsl
subb
xchg
aad
in
sti
cmpsl
dec
mov
out
pusha
pop
push
cmpsb
xchg
aaa
cmp
lods
cld
lods
mov
je
clc
loope
inc
pop
shl
sti
mov
loope
imul
cmp
aaa
hlt
push
mov
pop
jo
ret
lcall
sbb
fs
push
jmp
shlb
push
inc
test
pop
lcall
aaa
je
fstps
dec
add
mov
lods
lahf
fisttpl
mov
shl
fcoml
jo
pop
mov
push
outsl
pop
mov
lea
cmp
test
lea
jns
xor
xor
adc
mov
lods
jge
movsl
mov
sub
xor
inc
jmp
fs
mov
push
and
in
int
mov
out
jb
stos
aaa
inc
fistpl
aas
cwtl
push
push
adc
mov
cltd
mov
lea
cmc
and
xor
cmp
pop
cs
movsb
cmc
push
sub
mov
scas
stos
in
test
xor
mov
pop
sti
mov
xlat
push
jmp
cmp
ja
mov
in
jmp
movsb
jg
imul
dec
mov
jo
add
jecxz
out
jbe
mov
jle
nop
clc
pusha
inc
mov
inc
xchg
sbb
jae
pushf
ljmp
loop
mov
mov
imul
imul
ds
lea
fs
outsb
inc
jb
xor
call
adc
fidivrs
pop
push
xchg
mov
je
and
cmc
dec
and
xor
sbb
cli
addr16
adc
roll
mov
and
sbb
and
clc
fidivs
lret
aas
push
lock
xchg
xchg
mov
push
out
clc
jae
mov
and
stc
js
push
sub
ret
test
ret
xor
loope
jmp
mov
push
dec
adc
cwtl
cmp
sub
push
loopne
sahf
push
pop
xchg
mov
addr16
jb
mov
sub
fistpll
in
jb
push
aam
shll
out
cltd
enter
shrl
mov
or
mov
mov
test
cmpsb
pop
data16
in
sbb
movl
mov
std
rcrl
pop
in
push
jbe
fimull
loop
sub
imul
mov
shll
add
std
lret
fstps
movsb
sub
pop
andb
mov
mulb
add
sbb
xor
clc
hlt
dec
popf
pop
ja
cs
xor
cmp
inc
xchg
stos
mov
mov
pop
jecxz
cwtl
cmpsb
aaa
out
sbb
mov
push
int
jae
insb
cmp
mov
lods
jo
jae
in
pop
sub
inc
je
and
scas
sbb
and
and
test
imul
pop
jp
scas
or
mov
mov
idivb
cmp
push
mov
mov
ss
inc
imul
int
pop
daa
icebp
mov
scas
sbb
imul
pop
cwtl
lea
cmp
cmp
mov
dec
xchg
mov
pop
add
sub
jge
negl
in
mov
mov
data16
repz
push
jbe
xor
mov
jae
imul
lret
xchg
enter
add
sub
pop
dec
xor
fadds
stos
cmc
mov
ja
xor
idiv
push
mov
stc
push
jne
jae
data16
pop
movb
mov
pop
push
es
mov
xor
push
loopne
mov
les
stos
push
pop
movsb
lods
ja
inc
mov
add
push
push
dec
xor
cmp
add
mov
mov
and
and
imul
or
xchg
mov
jae
pop
add
sub
test
cs
addb
mov
mov
imul
pop
mov
int3
jbe
jns
test
fwait
ret
arpl
lret
adc
xor
sarb
inc
jmp
inc
sbb
pop
dec
mov
mov
lret
imul
rcl
ss
push
inc
dec
mov
mov
out
out
xor
adc
dec
mov
jnp
in
fwait
push
arpl
mov
adc
and
mov
mov
mov
cs
xchg
in
xor
jo
pop
je
mov
sub
push
fs
cmp
jb
lds
mov
pop
and
addl
mov
imul
jne
daa
pop
or
xor
jae
outsb
sub
mov
mov
push
push
sub
jo
push
mull
mov
cmpsb
ds
cmp
jno
or
cwtl
flds
fsubrl
cmc
pop
aas
fldcw
subl
es
mov
cmp
ja
xor
and
fnstcw
adc
sub
testb
outsb
fdivp
cltd
idivb
ja
aad
jne
cmc
lret
out
bnd
ret
movb
fwait
movsb
subb
jae
or
aaa
pmaxub
stos
neg
loop
mov
pop
iret
mov
jb
fmul
mov
arpl
jae
call
inc
jo
mov
js
imul
cmc
pop
data16
lea
sub
push
and
ret
clc
imul
adc
mov
fs
xor
fldl
insb
pop
shrl
imul
scas
mov
dec
aaa
lret
fcmovne
adc
imul
sahf
cmp
mov
lcall
and
jno
inc
mov
adc
stos
stos
pop
lret
add
mov
push
dec
push
pop
push
pop
sub
fildll
push
pop
mov
fdivs
imul
cmp
push
mov
and
lock
neg
sti
add
mov
fs
fistl
cmovno
jb
in
mov
or
lods
daa
lret
cmp
mov
cmc
mull
mov
xchg
out
js
and
call
movsb
sbb
push
inc
mov
mov
insb
repz
jle
ljmp
cmp
fnstsw
fidivrs
mov
test
mov
mov
xchg
add
xor
les
cmpsl
adc
test
mov
movsb
aam
sub
lock
fistps
or
in
jae
cmp
sti
frstor
aaa
cmpl
lcall
push
imul
xlat
adc
push
and
add
add
test
dec
rclb
mov
jle
adc
pop
out
out
cmp
cltd
into
int
cmc
pop
xor
rclb
call
mov
xor
inc
cmp
push
add
clc
je
mov
pop
adcb
arpl
inc
stos
push
sbb
sahf
fstpt
xchg
stc
pop
call
mov
cmc
test
add
push
xlat
iret
imul
push
ret
add
add
lds
xlat
fisttpll
cmp
pop
pop
push
clc
mov
das
jae
dec
sbb
scas
dec
cmp
int
daa
leave
fiadds
dec
test
lea
lcall
mov
pop
add
mov
imul
pop
push
mov
mov
add
lret
jmp
mov
ret
sahf
mov
aas
jne
and
mov
adc
mov
adc
stos
mov
cli
clc
xchg
imul
add
mov
pop
and
into
pusha
roll
jns
xorb
pop
ss
fadds
dec
xor
mov
cli
pusha
loope
cmp
repz
pop
xlat
xor
das
cltd
pop
aaa
clc
cmc
mov
in
mov
dec
cltd
adc
mov
and
mov
push
aas
inc
cmp
xor
subl
inc
and
mov
pop
iret
jo
cmpsb
dec
inc
dec
pop
cs
push
sub
lods
xor
loopne
jae
mov
ret
jne
add
aas
sub
ss
je
pop
ja
jge
orl
xchg
push
adc
add
std
mov
scas
les
lds
hlt
ret
into
xor
in
sub
cmp
xor
xor
dec
cld
sbb
sub
sub
icebp
inc
enter
repz
pop
push
inc
ss
lea
pusha
gs
decl
pop
ss
push
pop
push
push
movsb
xor
inc
pop
pusha
fimuls
mov
dec
clc
pusha
mov
test
mov
daa
jns
cmp
fistpll
shl
fistpll
rolb
mov
adc
adc
jl
inc
pop
notb
jl
xchg
pop
jmp
inc
bound
adc
xchg
flds
shll
push
mov
adc
insl
push
xor
hlt
aad
nop
jo
out
in
fldcw
adc
jae
and
adc
xchg
out
xor
push
dec
cmc
mov
fisttpl
adc
es
jb
adc
or
pop
cs
pop
mov
iret
mov
cmc
ficomps
cli
fwait
pop
leave
lock
jo
push
cmpsb
nop
mov
std
mov
xor
xchg
cld
rcl
mov
dec
mov
pop
in
pusha
sub
std
xorb
ret
popa
ja
add
mov
fistps
jmp
xor
pop
pop
mov
mov
cld
sub
inc
jle
loop
mov
xor
fwait
inc
jns
aam
cmpsb
fsubrp
mov
sti
xor
lret
fadds
or
movsb
test
and
add
scas
jg
divb
pop
ret
test
call
ja
mov
cmp
test
orb
cs
scas
sub
imul
jle
push
ja
mov
in
or
xlat
ja
add
pop
ljmp
setp
push
dec
jo
jae
or
and
xor
mov
mov
push
add
imul
xor
ja
sbb
rorl
inc
add
sub
lret
sub
mov
adc
gs
pop
popf
out
mov
mov
lods
mov
sub
out
aas
push
cld
jns
lret
in
push
pop
mov
imul
aad
push
ss
and
in
aam
pop
shll
jae
dec
es
adc
ss
sbb
jae
push
stos
jecxz
push
mov
push
addr16
xor
lods
push
movsb
dec
xor
scas
adc
xor
cmp
push
mov
xchg
out
adc
movsb
loop
repz
jle
loope
cmpsl
or
int
mov
cmpsb
fldl
mov
aaa
lods
imul
out
cmp
in
mov
int3
adc
mov
aaa
push
pop
jno
cmc
jl
mov
sbb
sbb
mov
jmp
imul
dec
xchg
inc
inc
sub
hlt
cmc
mov
inc
sbb
icebp
xchg
jg
jo
in
sahf
movsb
sub
pop
ljmp
xchg
xor
ja
test
or
cmpsb
scas
cmpb
mov
mov
test
out
lods
imul
std
mov
pop
ss
sbb
or
or
adc
fidivs
mov
xor
in
aaa
xchg
cmp
cmpsl
fisttpl
mov
int3
push
cmp
stos
aaa
nop
xchg
xchg
in
shrl
call
mov
inc
push
mov
mov
mov
xor
mov
xchg
push
add
aas
add
mov
sti
pop
or
rcl
mov
sbb
sbb
cs
divb
aam
add
repz
imul
xchg
or
mov
out
in
add
push
add
and
inc
mov
add
les
dec
mov
loopne
or
cmpsl
int3
mov
loop
mov
sub
cld
roll
int3
insb
js
sbb
pusha
es
movsl
xchg
pop
cmp
xchg
icebp
roll
ret
andb
mov
imull
lcall
inc
cmpsl
mov
push
jg
fdivrs
sub
pop
fsubs
js
insb
mov
lret
mov
push
and
or
je
add
and
scas
mov
jae
dec
rcl
je
leave
loope
lcall
sub
dec
not
cwtl
leavew
adc
imul
arpl
out
add
lds
mov
scas
or
ja
into
cwtl
je
ret
in
push
adc
data16
mov
clc
jae
aas
pop
mov
cmp
insb
mov
mov
inc
mov
xchg
xchg
sub
test
sbb
adc
jecxz
xor
mov
xchg
pushf
das
cmp
loop
mov
jge
lahf
dec
fisttps
mov
adc
jg
pushf
pop
add
mov
pop
movsl
xor
jo
sbb
nop
lds
hlt
mov
dec
lahf
les
pop
pusha
jae
xchg
scas
cmp
adc
mov
mov
sbb
push
xor
adc
dec
int3
ss
inc
adc
in
hlt
cs
adc
js
push
adc
repz
push
lock
dec
insl
iret
mov
push
sahf
mov
mov
enter
ja
dec
inc
sbb
stos
push
pop
jp
rcll
shrb
pop
dec
gs
imul
sbb
lock
xchg
int
inc
add
or
les
cmc
mov
mov
push
outsl
aam
xchg
in
mov
js
mov
xor
test
insl
test
and
jge
iret
sbb
push
faddl
aaa
ja
push
cmpsb
mov
pop
jge
hlt
adc
out
imul
js
movsl
in
mov
pop
mov
xchg
sbb
sbb
aad
pop
ljmp
test
pop
and
mov
jo
push
arpl
mov
mov
cmp
sub
into
sbb
test
ss
jae
out
clc
pop
jo
mov
jle
inc
pusha
ja
fsubs
lret
stos
dec
mov
imul
dec
jmp
imul
mov
insb
add
pop
inc
mov
repnz
add
mov
push
clc
adc
adc
xor
insb
ja
xor
jns
mov
pop
test
pop
mov
add
adc
leave
lret
hlt
or
jl
mov
sub
lcall
imul
add
mov
pushf
int
xchg
mov
pop
lret
jae
mov
movsb
test
sarl
sub
stc
jecxz
push
lods
into
aas
popl
lds
jge
lods
xor
sbb
sub
push
push
sbb
cli
xlat
mov
hlt
into
stos
in
and
imul
xor
addl
loop
cmpsb
xchg
imul
test
fmuls
push
sahf
jge
adc
lea
imull
shr
ret
in
scas
inc
insl
and
ss
shrl
mov
insl
dec
sub
jno
int
mov
mov
js
adc
test
mov
dec
mov
popf
sub
testb
push
ret
stos
movsb
jmp
repnz
aaa
outsl
insb
cmpsl
ja
jns
xchg
imul
cmp
mov
arpl
out
sub
push
ljmp
lcall
stos
inc
xchg
xchg
imul
aaa
lea
lds
ljmp
sub
outsb
mov
inc
mov
jle
das
push
aam
lret
jns
push
xchg
lea
hlt
aaa
cli
adc
mov
cld
jae
sub
loop
and
sub
cmp
pop
mov
pop
xor
cli
xor
or
outsb
jnp
jle
sbb
dec
test
repz
sbb
cmp
sub
jp
in
fidivl
mov
push
rorl
in
inc
sahf
aaa
int3
mov
mov
scas
push
push
out
aad
sahf
lock
add
adc
pusha
jo
mov
aam
jne
insb
dec
inc
rclb
pop
adc
sbbb
shll
insb
sbb
in
je
cmpsl
mov
pop
lcall
cmp
test
insb
jb
int3
adc
and
rorl
ljmp
cmp
fisubs
data16
mov
or
pop
sub
mov
mov
ljmp
mov
bnd
and
sub
ja
and
sbb
and
cmc
sub
lds
push
std
mov
std
inc
imul
stos
lret
xor
dec
push
dec
lret
lret
fxch
push
out
sarl
push
popa
inc
xchg
push
jo
int
aaa
pop
jo
push
mov
add
cltd
lea
inc
js
ja
sahf
cld
pop
sub
sub
xchg
in
lds
xchg
sbb
pop
sub
lea
popa
sub
cmp
add
cmpsb
sahf
adc
loopne
mov
test
lds
mov
mov
inc
push
mov
loope
jle
fimuls
daa
mov
dec
ja
inc
xchg
and
fistl
loopne
bnd
test
cmp
addr16
dec
hlt
xchg
xor
jl
inc
imul
js
push
flds
and
nop
or
pop
xchg
dec
cmp
add
xor
in
and
std
pop
out
xchg
cmp
in
add
push
mov
jno
sbb
loop
addl
out
fsubrp
adc
movsl
adc
jae
ret
pop
insb
hlt
add
xor
aad
lcall
pop
push
in
add
push
xchg
and
subb
fistl
arpl
fwait
in
xchg
aaa
mov
ret
cmp
mov
adc
sub
mov
and
jo
imul
rclb
jns
xor
ja
sbb
je
mov
sub
xor
outsb
cli
or
es
dec
sub
repnz
es
lret
pusha
outsl
call
cld
mov
sbb
push
leave
jo
mov
sub
idivb
loop
add
lock
mov
inc
data16
and
es
pop
xchg
sub
pop
repz
je
xchg
pushf
inc
imul
pop
mov
add
adc
inc
sbb
scas
shr
ja
jbe
enter
nop
imul
les
cmpsb
xchg
xchg
and
inc
inc
xchg
lret
outsb
subb
sub
mov
cwtl
fiadds
jecxz
subl
pop
dec
out
lcall
pop
inc
insb
mov
pop
mov
jns
jge
push
cmpsb
xor
push
jo
test
out
ja
pop
int3
rcrl
push
inc
push
cmp
cmp
or
pop
mov
pushf
mov
cmpsb
aaa
xchg
fldenv
push
test
jmp
jne
cwtl
sub
lds
mov
in
test
shll
ja
jo
push
inc
stos
movsb
fdivrs
out
sub
out
js
sbb
mov
test
aam
jo
add
mov
xor
or
fldcw
jecxz
pop
add
sbb
test
xor
sub
dec
adc
pop
mov
loope
adc
pop
ja
jmp
add
subl
xlat
pusha
jmp
jno
or
loope
jae
add
ss
lret
xor
insb
push
call
pop
insl
jle
mov
mov
pop
lods
je
or
jne
outsb
push
push
sbb
mov
cmp
sbb
fidivl
pusha
pusha
cmp
clc
xlat
mov
mov
sbb
mov
cmp
arpl
mov
int
cmp
ja
shrb
pop
inc
cmp
hlt
in
push
push
shlb
cwtl
fbstp
mov
jecxz
lods
push
std
mov
movsb
push
pop
jle
test
popf
sub
hlt
jae
dec
xchg
jp
lock
dec
mov
movsl
jle
arpl
sarl
mov
pop
fdivr
or
xor
mov
fadds
xchg
gs
add
stos
and
cld
mov
xchg
inc
jl
das
add
cmp
jae
insl
insl
fdivl
lds
jg
cli
stos
test
push
int
imull
scas
out
aas
outsb
jg
and
adc
adc
movsb
dec
repnz
mov
out
pop
jns
shl
jno
cwtl
fwait
jmp
cmpsl
inc
mov
mov
cs
xor
push
xor
fdivl
ja
ljmp
es
mov
or
mov
mov
add
ret
add
aas
cmp
sbb
xchg
fidivs
shll
mov
jns
cmp
addr16
movsb
pshufw
pop
mov
rorl
push
aaa
inc
pop
aam
nop
xor
pop
push
mov
mov
xor
dec
decl
lods
cmc
pop
sar
mov
in
pusha
adc
loopne
cmc
std
jne
daa
loopne
dec
pop
adc
daa
pop
aas
xchg
jne
inc
adc
mov
mov
xchg
pop
xor
cmp
mov
in
mov
mov
pop
dec
sahf
outsb
clc
scas
addr16
cwtl
push
lods
outsb
sub
pushf
sub
pop
add
lcall
sub
pushf
xor
loope
xchg
lret
xor
mov
rcrb
ja
mov
jge
cmpsb
fistl
jne
sarb
std
inc
xchg
inc
mov
jne
sti
jg
inc
inc
jge
js
imul
ret
out
pop
movsb
loopne
sub
xor
mov
and
fdivl
daa
pop
adc
iret
add
jl
xchg
cmp
add
rolb
pop
lret
pop
movsb
jno
cmp
add
imul
pop
sbb
cmp
outsl
or
push
shrl
inc
cmp
imull
xchg
shrl
mov
xor
and
inc
jae
ficompl
and
and
xor
cltd
xor
insl
in
fldl
jnp
daa
mov
ljmp
orb
add
inc
hlt
dec
push
daa
pop
ss
jge
insb
jl
icebp
clc
imul
ljmp
xchg
iret
test
jg
jne
and
lcall
lods
or
pop
inc
ss
xlat
jns
push
mov
and
mov
mov
adc
xchg
lret
loopne
bound
mov
adc
fmuls
repz
cmp
ss
jmp
xchg
mov
clc
gs
lea
or
xchg
nop
lret
adc
cli
addr16
aaa
inc
out
in
fmul
pop
mov
out
pop
insb
jmp
imul
sti
ror
cmp
mov
mov
imul
xorb
dec
mov
add
push
movsb
cli
in
addb
jb
scas
mov
cmc
push
dec
mov
sub
mov
cmp
pop
add
mov
sbb
mov
dec
jbe
mov
fdivrl
insb
push
aam
sti
in
cmpsl
inc
adc
sub
in
mov
aaa
mov
jge
sbb
jl
cmp
sub
out
repz
lock
jecxz
xchg
imul
jae
xor
call
in
push
mov
leave
inc
inc
enter
inc
test
fwait
jg
cli
out
stos
or
mov
mov
scas
jne
pop
jno
daa
jno
mov
xchg
pop
testb
leave
push
imul
lods
pop
sbb
mov
add
xor
cmpsl
nop
data16
inc
xor
and
cmc
xchg
andb
pop
and
jecxz
mull
mov
sbb
sbb
cli
push
ljmp
inc
xor
adc
mov
shlb
repnz
xchg
sub
mov
mov
xchg
repz
jae
jl
outsl
xor
push
pop
and
sarl
and
cmpsl
and
imul
test
or
mov
mov
divb
add
mov
in
xor
cmp
cmp
mov
mov
outsb
imul
into
adc
mov
test
lods
movsb
pusha
arpl
in
jg
imul
mov
jno
push
aam
xchg
out
sub
movsl
mov
sahf
push
dec
outsl
mov
jae
aas
cmp
jo
imul
cmp
gs
js
fdivrp
cwtl
scas
push
negb
mov
xor
xchg
sarl
push
insb
adc
adc
pop
jl
ja
das
jp
mov
aaa
adc
adc
lds
adc
xchg
add
adc
sbb
mov
fisubl
add
jns
sbb
movsl
fcmovnb
cmp
cmc
neg
mov
ret
mov
push
mov
mov
in
dec
push
hlt
adc
stos
xor
cwtl
sub
test
xor
ds
jl
sbb
test
push
std
in
div
sbb
add
adc
int
cmpl
pusha
mov
ret
pand
push
or
mov
inc
sti
add
pop
cmpb
add
pusha
inc
inc
sub
adcw
popf
pop
pop
adc
push
push
lret
loop
or
imul
cmp
test
cmc
das
dec
dec
jae
nop
test
dec
inc
loope
xor
imul
dec
dec
in
sub
sahf
out
mov
jae
mov
in
rorb
loope
mov
in
cld
cmp
ja
dec
inc
loop
movsl
add
add
sahf
inc
xor
cltd
or
loopne
jae
jp
call
je
idivb
mov
push
data16
adc
mov
ud1
pop
rcll
mov
arpl
add
int
jae
lcall
cmpsl
sbb
and
sahf
mov
mov
mov
movsb
mov
xor
add
and
push
xchg
mov
push
call
xlat
pop
cmpb
or
mov
clc
stos
mov
add
add
push
add
enter
or
lds
lea
push
stos
in
xchg
fwait
cmpsb
mov
lahf
fimuls
shlb
js
loopne
aaa
jae
mov
out
mov
aaa
dec
inc
inc
push
test
gs
or
or
adc
and
in
and
jae
enter
jbe
sbb
icebp
sub
jle
mov
movsl
notb
mov
aas
pop
ret
fisttpl
sbb
es
jl
sub
push
or
repz
mov
mov
cmc
in
mov
pop
and
dec
mov
clc
xchg
xlat
mov
push
and
cwtl
dec
mov
lods
jecxz
mov
mov
inc
iret
negl
inc
mov
popa
loope
fdivl
jge
insl
cmpsl
inc
scas
xor
faddl
cmpsb
inc
push
cmp
test
jb
sub
lahf
pop
xchg
xchg
and
jae
pusha
jno
xor
push
lods
push
bnd
cs
push
arpl
cmp
movsb
inc
jbe
ficoms
jecxz
cmp
mov
inc
xlat
mov
jae
js
imul
inc
lea
sub
inc
test
out
dec
insl
fbld
aaa
xor
int3
push
andl
insb
adc
imul
mov
jnp
mov
insb
inc
jle
pusha
xor
test
and
mov
xor
das
add
icebp
loop
sub
pop
movsl
mov
imul
cli
mov
pop
push
loope
ja
mov
inc
aam
ljmp
jne
fisubl
push
imul
insb
nop
sbb
mov
pop
enter
rcr
mov
or
adc
add
mov
xor
adc
adc
push
pop
stos
adc
insl
xchg
scas
xchg
pushw
lds
push
cltd
ss
sbb
sub
test
pop
loopne
ret
jg
xchg
cld
xchg
movsb
cwtl
fdivrp
mov
mov
xchg
cmp
xor
mov
js
cmc
pop
lods
jecxz
mov
inc
add
mov
ja
adc
jg
lret
pop
lods
insb
ret
sub
lods
xor
mov
mov
jne
insb
out
mov
lods
inc
aam
pop
lret
out
repz
pop
sbbb
aaa
dec
sti
mov
pop
push
in
adc
out
mov
les
test
xchg
push
adc
ljmp
push
out
jo
adc
or
xchg
mov
mov
and
mov
cmp
jns
cltd
out
pop
shlb
mov
outsl
xchg
add
addr16
out
int
test
out
lock
ja
enter
pop
fists
inc
into
mov
pop
stos
xchg
data16
jnp
push
inc
pop
mov
ljmp
mov
sbb
pop
out
jbe
clc
mov
push
imul
add
xchg
sbbl
mov
mov
ja
fiadds
cs
pop
scas
jecxz
cwtl
sub
mov
leave
inc
movsl
sti
insb
sahf
ret
adc
bound
add
sub
jl
dec
inc
aas
xor
sbb
add
push
imul
in
sahf
mov
jg
cmp
pushf
mov
scas
jmp
and
test
cwtl
and
ss
cmc
mov
xor
iret
pop
out
push
mov
sub
arpl
mov
repnz
pop
mov
negl
pop
mov
jae
add
pop
insb
xor
xorl
ja
into
insl
and
movsb
test
mov
push
cs
pop
push
or
cmp
into
jo
mov
xchg
xchg
imul
jb
dec
call
xor
ja
mov
in
cmpsl
jmp
pop
lahf
inc
sbb
mov
and
cmp
xchg
or
aas
push
mov
lds
cmp
mov
inc
pop
xchg
out
mov
inc
add
fsubl
lahf
cmc
aad
mov
adc
aaa
xor
pop
in
movsb
mov
ss
adc
cmc
sbb
scas
push
dec
xor
xor
divl
int
add
iret
movsb
stos
into
test
out
adc
mov
daa
jle
jns
pusha
jmp
ret
and
fiaddl
bound
sub
lea
pop
sbb
adc
cmc
repnz
cmp
mov
fs
ret
mov
xor
xor
ds
adc
sbb
push
inc
lods
mov
and
pop
test
jns
ja
cltd
adc
adc
jmp
out
rorb
adc
insb
cwtl
mov
xchg
out
sub
mov
push
sub
lret
fimull
les
out
in
mov
outsb
cltd
mov
lods
xchg
enter
add
sbb
push
fidivrs
cmp
mov
mov
xlat
ljmp
xorb
jge
pop
cmp
mov
sub
ja
pop
pop
in
inc
mov
mov
loopne
cld
xor
hlt
insb
jno
mov
or
fdivrl
fsubrl
ds
pop
into
out
and
inc
dec
inc
sbb
imul
sbb
dec
pop
int
cmp
sub
jo
inc
fsub
shl
push
cltd
std
into
test
scas
dec
adc
ja
insb
cmpsb
mov
fisttpl
push
mov
or
pop
fisttps
imul
insb
ret
or
sbb
jnp
mov
lcall
outsb
push
jmp
and
sti
sahf
mov
imul
push
bound
arpl
cmp
jne
pop
fisttps
jb
adc
sub
jnp
add
xor
int3
xorl
das
cmp
insb
cmc
popf
jns,pn
insl
adc
jns
sbb
mov
xchg
imul
pop
mov
out
hlt
pusha
mov
pop
xor
les
jb
inc
jne
cli
mov
test
push
insb
sti
cli
imul
out
inc
test
xchg
fstpt
fwait
movsl
jbe
test
movsl
insb
inc
shrl
mov
xchg
mov
lret
mov
jae
dec
mov
xchg
dec
stos
cld
push
adc
aam
movsl
pop
fiadds
sahf
mov
cmpb
fwait
sahf
jo
in
dec
inc
insb
out
daa
repnz
inc
push
fistpl
inc
inc
adc
pop
add
cltd
aaa
cmp
pop
pusha
cltd
imul
dec
enter
dec
jae
stos
and
mov
xor
iret
aad
xchg
mov
jae
addr16
xchg
sub
lea
push
je
hlt
lods
jo
jne
aaa
popl
dec
mov
pop
jecxz
mov
dec
in
jns
gs
lahf
fstl
fwait
imul
add
xlat
cli
int3
jle
sbb
xor
xchg
mov
jae
leave
addb
lcall
mov
xchg
sti
adc
mov
mov
add
movsl
je
das
or
sub
pop
les
pop
dec
mov
push
inc
lahf
outsb
sbb
loop
jae
xchg
pop
add
push
pop
cmp
pushf
cmp
mov
hlt
cmp
and
cmp
jmp
cmp
mov
divb
mov
xor
mov
loop
lods
mov
or
cmpsl
pop
enter
fdivl
addr16
add
int
ret
mov
pop
push
adc
cs
outsb
mulb
mov
pop
ret
repnz
ja
shll
ss
lahf
dec
push
repnz
add
lods
rcrb
std
lretw
inc
xor
int
jge
movsb
xchg
dec
or
aam
mov
sub
jne
lods
sbb
jae
adc
pop
dec
lahf
sub
imul
mov
adc
cmpsb
rcll
movsl
movsl
cmp
inc
bound
and
mov
push
ret
std
inc
mov
xor
roll
mov
dec
jae
jbe
add
sahf
or
imulb
int
mov
aad
pop
stos
arpl
in
inc
push
repz
adc
jge
mov
add
insl
mov
outsl
push
cltd
adc
fs
repnz
imul
push
andb
or
jae
jecxz
and
adc
sbb
add
push
fisubs
inc
data16
lds
insl
mov
clc
enter
mov
pop
pop
mov
xchg
adc
jg
test
lods
scas
into
cmp
dec
int
and
cs
cmp
adc
sahf
shrl
push
int3
stos
imul
add
int
mov
adc
sahf
jecxz
xchg
loope
push
xor
jae
daa
cmp
outsl
mov
cmp
dec
loope
pop
lock
cmp
mov
mov
mov
push
jmp
mov
sub
out
lods
gs
popa
cmp
jg
mov
sbb
add
scas
pop
mov
cld
dec
mov
jae
mov
add
inc
cs
jge
dec
insb
hlt
adc
cmpsl
mov
mov
inc
movsl
sbb
daa
outsl
out
jge
int3
pop
mov
les
outsb
imul
jle
mov
cli
clc
jle
mov
inc
or
xchg
jo
outsl
test
cmp
xchg
repnz
cli
mov
add
mov
daa
jg
lret
xchg
test
sbb
ret
bound
pop
sbb
lcall
imul
or
xchg
pusha
mov
imul
jns
inc
mov
repz
lret
cmp
scas
fidivl
xor
cmp
pop
arpl
add
and
fcoms
mov
pop
jl
in
xchg
jbe
mov
out
or
int3
jle
stc
loope
ljmp
xor
call
and
movsb
cli
mov
popf
xor
jmp
test
imul
imul
adc
out
cs
push
sub
cmp
mov
dec
aam
fnsave
cli
or
pop
sub
jle
in
xor
movsb
add
icebp
fs
add
add
or
sti
cltd
mov
outsl
lods
inc
xlat
fwait
push
inc
stos
pop
mov
cs
les
inc
lret
lock
add
xchg
imul
lods
int
jg
dec
adc
jno
scas
lods
jb
inc
in
sbb
inc
jae
cmpsl
xchg
fnsave
es
insb
and
jecxz
test
fisubs
inc
sbb
bound
xor
scas
xchg
and
imul
out
sti
mov
xor
jo
sub
or
xlat
cmp
ret
pop
pop
jmp
pusha
imul
ja
jo
pusha
insl
fwait
pusha
repnz
dec
clc
pop
ljmp
repz
inc
dec
cmp
mov
dec
sbb
negl
push
mov
jmp
mov
mov
adc
lods
daa
dec
jae
cmc
insl
scas
cs
clc
xchg
sub
jmp
push
bound
hlt
or
test
sbb
out
movsl
out
cmp
jge
push
je
stos
pop
mov
enter
test
inc
mov
jle
mov
lcall
push
bnd
sbb
insb
pop
sub
scas
bnd
xchg
jb
jl
mov
aam
cmpsb
addl
xchg
mov
das
aas
scas
sbb
mov
nop
std
push
and
mov
and
jae
and
out
popa
test
adc
cmpsb
int
jb
dec
sbb
enter
jecxz
mov
push
sbb
iret
rorb
pop
sbb
out
inc
inc
push
call
dec
adc
fldenv
rorb
int
rep
sub
or
jns
mov
imul
xchg
mov
sahf
imul
fcom
jp
repnz
cmp
test
push
fs
sub
sarl
cmp
jb
mov
and
add
jb
dec
lock
jp
mov
std
jg
ret
mov
fs
fsubrs
pop
lahf
push
or
mov
jmp
aaa
gs
addl
and
hlt
mov
sub
dec
mov
iret
sbb
jbe
shrl
xchg
and
arpl
cmpsb
push
or
and
xchg
cmpsl
fcoms
lahf
orb
lcall
and
pop
xor
scas
stos
aaa
insb
add
clc
lds
push
xchg
scas
fimuls
xorl
jae
mov
push
mov
inc
sbb
push
pusha
push
sub
insb
pushf
or
aam
rorl
aaa
aad
lods
outsb
jae
lock
fsubrs
popa
idivb
mov
cmp
pushf
mov
int3
mov
lock
lret
ret
xorl
jns
in
sbb
cmpsb
xor
in
mov
cmp
outsb
add
rorb
test
pushf
in
dec
jmp
adcb
adc
shll
pusha
les
mov
ja
pop
stos
dec
test
dec
mov
pop
dec
ljmp
jbe
xchg
aaa
in
fdivrl
je
popa
mov
pop
cs
pop
push
ss
dec
sub
or
xor
sbb
ror
dec
mov
mov
int3
sahf
mov
in
lods
jnp
mov
loope
aam
push
es
sub
lods
xor
fildl
push
jp
mov
movsl
push
push
xchg
lea
mov
ja
xchg
mov
test
stos
rcr
ret
xor
ja
mov
ds
repz
ja
adc
pop
xor
outsb
lcall
mov
xchg
xor
aaa
jl
fs
push
daa
icebp
arpl
cmp
jae
pop
xor
push
ja
lret
adc
js
xor
out
jbe
mov
jno
jns
outsl
test
inc
sub
fbstp
push
inc
insl
outsb
cmp
cld
mov
push
lods
dec
jo
fimull
mov
add
lret
push
push
pop
call
imul
jbe
js
dec
ss
enter
push
jo
ret
lret
dec
dec
loop
rcll
push
vshufps
sub
repnz
lcall
insl
sahf
sbb
insb
ds
jmp
test
arpl
mov
pusha
leave
cmp
mov
insb
lock
jne
imul
cli
hlt
jle
sarl
inc
arpl
mov
mov
pop
sahf
or
inc
sbb
jbe
in
push
xchg
pop
xchg
or
mov
mov
mov
decl
xor
test
pop
sbb
cmpsb
xlat
clc
xor
jg
pop
sub
pusha
cwtl
jns
stos
ja
pop
and
xor
imul
inc
dec
or
jmp
sbb
cwtl
dec
cwtl
popa
cmp
jl
mov
dec
pop
mov
dec
and
ss
fbld
fsubs
clc
push
stc
dec
cmp
es
das
add
insb
int3
adc
dec
jg
pop
adc
inc
shr
ret
pop
data16
ror
test
inc
jecxz
pop
flds
mov
iret
jmp
jle
iret
mov
mov
adc
push
xor
call
xchg
outsb
cmc
imul
pop
push
xchg
mov
add
mov
clc
xchg
or
sub
data16
sub
insl
imul
movsl
mov
xor
sbb
shrl
fsubs
jae
repnz
test
pusha
xor
push
and
push
mov
pusha
aaa
pop
mov
cmpsb
sbb
lods
push
jbe
das
mov
pop
out
sub
xorb
pusha
push
aam
cmp
cmp
or
push
sub
loope
ja
inc
jmp
lods
sarl
fiadds
and
pop
pusha
sahf
mov
sub
and
ss
bound
adc
ljmp
out
cmc
or
inc
and
push
jecxz
stc
inc
ja
xor
in
aam
pop
jne
push
stos
xor
dec
lods
dec
xor
std
pop
gs
xor
lds
and
into
xchg
loope
cmp
sahf
movsb
push
imul
cli
into
jae
mov
lea
pop
cltd
inc
xor
xchg
ja
adc
imul
lcall
scas
in
pop
mov
hlt
add
cmc
mov
pop
lret
sbb
push
inc
sub
lret
cmpsb
xchg
and
or
in
mov
dec
xor
mov
jmp
dec
mov
mov
shll
popf
mov
and
out
pop
lods
aas
call
cmp
xchg
push
imul
ret
jecxz
dec
mov
or
lods
icebp
cltd
jae
lods
mov
int3
mov
jg
je
push
int
cmp
push
addr16
aaa
push
fsub
mov
jae
repnz
mov
test
jecxz
jns
dec
pop
jae
dec
lret
dec
sub
xchg
pop
cs
and
shrl
xchg
sti
pop
fs
in
inc
cmp
popa
jae
push
movlhps
sub
jo
dec
test
stos
sti
mov
imul
mov
fcmovnbe
clc
xor
loop
mov
jmp
imul
sub
mov
pushf
push
dec
rcll
sbb
ret
cmp
aas
idivb
xor
daa
jge
xor
xor
or
cmp
inc
and
and
mov
xor
sbb
dec
and
xchg
pop
movsb
std
and
insb
imul
inc
lret
into
aas
imul
out
adc
mov
push
cld
mov
mov
je
sub
dec
xchg
loop
xchg
mov
adc
daa
or
pop
mov
cmpb
add
and
aas
and
roll
lcall
jecxz
inc
stos
cmc
xor
aam
scas
pop
cmp
and
lcall
sub
xor
dec
adc
arpl
int
rcll
push
xor
daa
jg
aaa
mov
adc
into
xor
inc
xchg
test
push
stos
jmp
lret
adc
push
ljmp
std
or
pop
bnd
pusha
mov
sti
add
mov
sbb
imul
xor
adc
sti
jno
ret
out
pop
push
fs
mov
out
push
sub
cwtl
pushf
inc
adc
push
out
aam
dec
lea
or
insb
jno
mov
cmp
cli
test
mov
shll
fwait
ret
out
xor
cwtl
js
std
push
in
imul
orl
inc
mov
mov
push
outsb
xlat
cmp
ret
cmpsb
fs
cwtl
sbbl
push
push
cmp
jae
test
inc
xor
push
out
mov
jae
arpl
outsb
mov
or
out
mov
xor
jae
mov
pushf
inc
push
lds
mov
mov
cmp
xor
lcall
sti
icebp
ja
das
popf
xchg
inc
shll
lods
int
loope
lock
gs
mov
test
push
pop
subb
fldenv
aaa
xchg
xor
sub
cmc
adc
repnz
and
mov
pop
push
sahf
rclb
fists
mov
shlb
test
int3
stos
mov
shll
arpl
jbe
jl
add
sub
xlat
outsb
shr
lret
sub
mov
cmp
adc
imul
add
addr16
lds
rorl
mov
sub
push
xor
mov
pop
mov
cwtl
add
jge
dec
gs
repnz
cmpsb
and
test
jb
add
dec
xchg
or
js
mov
stos
pop
sbb
into
xchg
jbe
mov
inc
xor
stc
jle
mov
aam
ret
push
mov
cmc
test
sahf
and
adc
jge
jp
das
mov
cmp
and
and
push
sub
sbbl
sbb
inc
xchg
hlt
dec
jg
sbb
mov
std
movsb
hlt
inc
mov
sbb
push
stos
adc
stos
jle
aaa
inc
mov
scas
inc
hlt
mov
mov
sahf
mov
cltd
mov
imul
pop
imull
pop
pop
pop
cmpb
insl
inc
clc
sbb
dec
fidivrs
mov
out
in
push
add
btr
jae
push
cmc
push
mov
ret
mov
into
add
mov
lahf
stos
aad
add
rclb
lock
mov
mov
jb
add
cmpsb
stos
ret
pop
ja
and
repz
and
cmpsb
in
xor
insb
in
jae
jno
sti
adc
pop
arpl
xlat
dec
jae
testb
cli
mov
mov
dec
xor
in
push
adc
jo
inc
sub
gs
push
sub
cltd
push
into
pop
and
mov
and
imul
mov
mov
ja
xor
insb
inc
je
movsl
push
pop
pop
pop
mov
adc
mov
cmp
ds
mov
ficompl
jle
mov
sbb
lds
imul
ja
cmp
hlt
dec
sbb
pop
arpl
js
test
lds
insb
mov
xchg
mov
cmp
aaa
fidivs
pop
repnz
push
and
xchg
mov
insb
add
xor
or
add
pop
xchg
icebp
loop
mov
fisubrl
add
mov
iret
cmp
in
cld
mov
mov
mov
or
xlat
sub
inc
test
arpl
mov
sahf
out
jle
cmp
je
je
int3
arpl
jge
sub
dec
cmp
sbb
lcall
movq
jle
add
shll
imul
mov
add
call
dec
xor
add
jmp
cld
popf
dec
ficoms
iret
movsb
jmp
jae
roll
mov
insb
mov
popf
add
aam
jae
lea
mov
push
sbb
ja
test
push
shlb
jge
rcl
pop
ficomps
jae
ret
mov
sub
testb
int3
out
adc
rclb
repz
int3
add
push
and
lods
dec
fisubrs
pop
icebp
dec
jae
sti
out
push
lock
xlat
mov
mov
xor
cmp
mov
jecxz
fstpt
xchg
in
push
aam
mov
add
frstor
mov
sub
sahf
inc
pusha
insb
pop
jl
fwait
push
inc
add
adc
out
xor
push
mov
jae
jns
stos
jl
jg
pop
adc
sbb
out
xchg
cmc
lods
movsb
and
mov
mov
sar
pushf
imul
push
std
adc
jle
test
inc
adc
and
pop
jbe
aas
push
mov
and
in
push
ss
repz
aam
fistl
popa
adc
les
jecxz
jo
aaa
cmpsl
and
fwait
adc
pushf
xchg
mov
xor
inc
dec
lcall
cmp
ja
in
add
sti
test
mov
loopne
scas
mov
ss
fnsave
mov
pop
enter
push
inc
int3
ret
cmpsb
arpl
pop
imul
push
xchg
int
je
insb
jle
int
test
push
dec
pop
mov
hlt
outsb
scas
push
cmp
cmp
xchg
and
cmp
push
or
ds
xchg
jge
imul
mov
ljmp
adc
out
xchg
pusha
aam
in
inc
loopne
int
fwait
sbb
pop
ja
jmp
movsb
mov
test
cmpsb
into
ret
fbld
sub
adc
push
push
leave
std
imul
test
jecxz
add
hlt
cmp
lds
add
push
push
cwtl
not
pop
mov
pop
out
xchg
fcmovnb
into
loopne
xchg
cli
xor
repz
and
jl
je
inc
sbb
les
and
inc
inc
aam
sub
daa
push
mov
idivb
pop
in
cs
mov
mov
adc
add
addr16
jmp
pusha
mov
mov
lock
popa
imulb
jno
jne
int3
dec
fnsave
push
int
mov
call
mov
sub
jae
mov
insb
cmp
cmp
push
add
cmp
ja
lods
jmp
pop
mov
dec
or
addb
mov
sbb
enter
insl
fildl
adc
in
and
roll
pop
mov
jnp
shrb
push
mov
pop
cld
pop
cmp
lea
je
mov
adc
popf
inc
pop
js
jnp
push
push
push
add
mov
ret
add
adc
sub
push
cltd
gs
sub
lahf
in
push
adc
pop
int
add
sbbb
lea
movsb
mov
test
lods
mov
jb
cmpsb
loop
call
loop
jecxz
jbe
icebp
lods
lods
mov
mov
add
jl
aam
jl
cmp
inc
jecxz
out
sbbb
xchg
out
fnstcw
push
clc
push
mov
inc
movsb
lds
jno
xor
mov
or
je
das
pop
aaa
inc
mov
divb
lds
imul
out
push
out
inc
lods
repnz
add
mov
imul
fdiv
mov
mov
dec
lds
cld
daa
idiv
mov
sub
inc
jecxz
ja
pushf
rol
adc
test
sub
mov
out
push
leave
insb
ds
xchg
mov
in
cmp
sbb
insw
lret
mov
movsb
jecxz
cmc
sub
sahf
fisubrs
jae
xchg
fnstcw
dec
or
loop
iret
testl
iret
das
add
sbb
sub
add
jbe
arpl
int
in
test
jno
xchg
and
test
into
in
cmpl
bound
sbb
daa
insl
imul
push
lea
mov
insl
adc
sbb
push
out
xor
punpcklwd
cmc
dec
sub
addr16
xchg
adc
pop
stos
mov
movsb
mov
ret
aas
fwait
pop
mov
jge
adc
mov
fidivs
je
sbb
inc
jb
xorl
lahf
aad
es
ja
popa
pop
xor
jnp
inc
ljmp
cmc
xlat
pusha
cs
scas
stc
pop
test
add
ds
sub
mov
dec
mov
push
loopne
in
push
aas
push
scas
aaa
aad
outsl
cmp
andl
cmpsb
jo
mov
adc
data16
push
push
pop
push
mov
adc
into
cmp
sub
mov
cmc
divl
sub
adc
mov
dec
aad
jg
mov
outsl
into
push
lods
sbb
mov
cmp
mov
into
lods
mov
fcomip
and
in
lods
ss
ja
or
cmp
xchg
push
ret
jae
mov
sbb
scas
sbbb
imul
mov
jecxz
sbb
aam
xor
push
in
jle
cwtl
sbb
divb
into
adc
rcl
dec
stos
movsb
pop
sub
pop
xchg
xchg
cmpsl
fstps
dec
fmul
jo
fiaddl
and
inc
lret
ficompl
cmp
mov
mov
adc
lret
xchg
sahf
aas
mov
ds
shrb
xchg
push
dec
fdivp
stos
jge
iret
je
mov
jae
sbb
mul
jmp
int
imul
sub
push
push
ret
adc
in
pop
dec
std
mov
nop
and
lret
movsb
dec
jns
mov
and
popa
mov
sub
aaa
cmp
mov
cmp
jmp
adc
repnz
sub
mov
sub
mov
insb
add
mov
push
dec
dec
fwait
mov
mov
jbe
jns
pop
pop
pop
inc
fmulp
and
pushf
ret
jp
flds
js
jge
lret
js
in
mov
std
inc
cmpsl
scas
cmp
mulb
add
icebp
xchg
xorl
and
pop
sub
int
out
mov
push
push
push
mov
rolb
xchg
adc
das
xchg
pushf
int
mov
cwtl
pinsrw
and
aam
mov
pop
movsl
mov
shll
pop
add
movsb
pop
jmp
mov
mov
mov
aaa
mov
push
fnstenv
jle
mov
lods
or
aas
and
mov
sub
push
loop
ficoms
fs
cmpsl
or
clc
inc
sub
xor
les
out
stc
ja
mov
test
xchg
push
arpl
ss
jp
jns
dec
xlat
mov
mov
pop
xchg
adc
fs
leave
add
cmp
andl
mov
scas
jne
insb
jmp
lea
pop
test
push
xor
xchg
sbb
popf
mov
add
xor
insl
loopne
mov
je
mov
cmpsl
push
cmp
out
sub
mov
xor
sarl
sbb
adc
mov
dec
jbe
mov
movsl
pop
ficomps
or
stos
adc
pop
mov
subl
pop
outsb
lret
imul
sub
fists
inc
mov
rcrl
cmc
inc
jnp
and
adc
mov
xchg
aam
inc
adc
push
andl
popa
sub
jge
adc
scas
out
insl
xchg
pusha
aas
mov
cmp
jne
adc
and
nop
ja
int3
pop
leave
or
es
mov
test
insl
jmp
hlt
xor
cmc
insl
jo
mov
jge
xor
jp
shr
aad
aam
repnz
das
popf
cs
popa
jp
mov
xor
inc
ss
lds
mov
xchg
inc
pop
jae
cmp
enter
add
fcomps
test
xor
ss
mov
pusha
movsl
hlt
push
and
cmp
lds
jg
lea
ja
adc
push
js
xchg
sbb
arpl
enter
popw
mov
mov
and
jmp
scas
leave
movsl
js
jns
mov
dec
mov
sub
or
scas
test
popf
imul
or
mov
xor
pop
or
and
daa
fdivs
cmc
push
mov
pushf
ja
dec
addl
js
test
mov
pushl
push
les
pop
xchg
jg
push
cmp
pop
mov
adc
pop
fs
pop
dec
loop
xchg
repz
out
inc
sbb
fistl
sbb
or
nop
and
xlat
xchg
outsl
insl
xor
int
or
repz
mov
out
inc
mov
push
in
pop
xor
mov
insl
cmpsl
mov
jo
bound
or
mov
add
inc
aam
inc
fdivl
pop
adc
cmp
and
jg
lods
add
cmp
xchg
push
jns
jbe
sub
ror
out
xchg
fiaddl
out
mov
sarb
add
jb
adc
sub
fiaddl
sti
or
roll
pop
ds
or
aad
das
lret
je
rcrl
movsb
dec
in
inc
insb
lcall
jge
jo
in
mov
cmp
and
pop
in
fimuls
addr16
inc
aas
inc
mov
pop
fmuls
imul
pop
pop
adc
inc
xor
jle
lret
add
jae
je
cmp
jecxz
add
imul
outsb
in
into
xchg
mov
loopne
adc
push
or
fldcw
cltd
dec
mov
cmpsb
imul
sbb
sarb
ja
fmull
pop
cmp
mov
mov
aas
xchg
sbb
or
loop
fldl
pop
pop
cmp
cmpsb
dec
xchg
notl
imul
mov
movsl
and
mov
cmp
fmuls
sbb
in
mov
add
inc
fnstsw
and
sahf
jbe
insb
into
out
jae
xor
inc
mov
mov
push
sbb
cmp
stos
into
mov
scas
jl
mov
test
arpl
scas
sub
mov
sub
inc
pop
sbb
jecxz
jmp
adc
fcoml
dec
mov
hlt
xchg
add
in
scas
mov
imul
jmp
mov
inc
dec
dec
and
xchg
jbe
mov
je
mov
cmp
pop
lret
lock
add
xchg
mov
xchg
or
push
dec
imul
and
lret
andl
cld
aaa
push
cmpsb
xchg
pop
cmp
mov
outsb
loop
xor
xchg
mov
fsubr
or
shrl
imul
das
jns
adc
pop
jmp
dec
inc
leave
and
jb
jae
jg
shll
or
lock
xor
push
jl
test
add
jp
in
sbb
lds
mov
repz
and
call
shrb
sti
mov
mov
jns
push
out
xchg
lret
xor
jae
jnp
cmp
sbb
cmp
cld
fstpl
xchg
xchg
push
je
sub
hlt
aas
xchg
jnp
cmp
scas
sub
mov
add
inc
push
aaa
pusha
jmp
xor
add
test
mov
adc
pusha
int
push
xchg
lods
in
outsb
fildll
adc
and
iret
adc
push
inc
jbe
shll
in
test
xchg
mov
imul
sarb
inc
sbb
bound
call
dec
nop
inc
or
lods
outsb
test
lret
or
imul
fbstp
dec
sbb
dec
jg
xor
stc
int3
fxch
and
je
in
ja
fisttpll
ljmp
cmp
inc
outsl
lods
pop
fsubrl
inc
mov
push
ds
loopne
inc
stos
les
pop
ja
dec
mov
sub
bound
adc
inc
jae
dec
mov
adc
popa
push
fmull
cmp
mov
mov
jbe
pop
mov
fdivp
cmp
ret
sbb
mov
inc
aam
pop
mov
repnz
insl
push
lea
xor
xor
repz
jl
xchg
adc
scas
pusha
inc
stc
jae
shlb
shrb
pop
rcr
fstpt
push
and
adc
mov
das
mov
mov
dec
cmpsb
jecxz
cmp
js
loop
ss
push
leave
pop
rorl
stos
cltd
mov
ret
lods
insl
mov
or
and
mov
lretw
fwait
int
in
xchg
or
in
adc
xor
cmc
imul
mov
jae
sub
filds
out
cwtl
pop
pop
dec
mov
mov
or
stos
out
jle
shl
and
mov
inc
insb
gs
mov
rcll
push
andl
in
xlat
mov
mov
adc
jnp
ret
clc
shrl
inc
xor
not
xchg
or
xor
or
in
in
mov
fs
roll
loope
mov
stc
imul
jo
push
jno
sub
adc
and
cltd
jae
jo
fsubl
mov
or
and
into
jo
push
fnsave
pop
inc
pop
sbb
mov
cwtl
xchg
scas
mov
sub
movsb
fnstenv
lds
inc
pop
sbb
xor
nop
fdiv
and
dec
xorl
test
inc
xchg
pusha
jne
lret
cmp
xchg
das
mov
adcb
jecxz
rolb
imul
in
loope
adc
lods
mov
jns
xlat
icebp
cmp
cmp
jge
scas
fdivrl
sub
imul
push
mov
dec
in
iret
mov
call
loope
mov
jae
push
mov
jg
pop
mov
mov
sub
pusha
push
jbe
fsubrl
pop
mov
or
mov
lret
call
push
movsb
fcomi
dec
fcoms
mov
es
scas
lods
mov
dec
inc
dec
inc
dec
xor
shll
aam
repnz
add
add
inc
aam
xchg
mov
pop
outsb
mov
mov
out
aam
push
and
adc
sub
cmp
push
mov
xchg
xor
mov
jmp
lret
test
ret
mov
dec
clc
imul
fsincos
insl
or
testb
and
push
testb
or
in
dec
lret
nop
imul
cmpsl
dec
shlb
pusha
icebp
jbe
cs
adc
sub
in
fyl2xp1
sub
mov
mov
mov
mov
or
imul
jge
cwtl
mov
fidivs
pop
mov
popf
push
inc
mov
jo
or
scas
xor
je
das
fwait
fwait
shll
movsl
jo
mov
adc
dec
sbb
mov
or
jbe
ja
cmpsb
push
frstor
into
rolb
testb
cmp
lret
mov
mov
pushf
nop
inc
mov
mov
cmp
push
fidivrl
dec
mov
jo
jl
or
mov
in
inc
stos
adc
jecxz
mov
xor
lcall
enter
xchg
mov
mov
add
gs
in
add
sbb
aaa
or
jecxz
push
cmp
icebp
aam
insb
pop
mov
pop
mov
mov
insl
dec
pop
ffreep
fwait
xchg
push
lock
jbe
and
xchg
xor
dec
lss
subb
ret
and
push
or
test
call
jg
and
push
es
ret
in
out
push
jae
fisubrl
je
jge
jl
lcall
sub
shl
das
loopne
data16
inc
pop
test
push
sbb
jnp
xor
pushf
arpl
add
and
push
lret
pop
push
aam
inc
mov
jb
mov
adc
clc
inc
cmc
fldt
roll
jne
push
lea
lret
ret
icebp
aaa
ja
into
push
jbe
sbb
cmp
sbb
pop
jo
pop
mov
pop
sub
mov
mov
pop
sbb
push
pusha
jle
pop
daa
or
imul
arpl
stos
mov
cld
jbe
lods
xchg
les
popf
inc
movups
es
into
arpl
xor
xchg
pushf
insl
push
jae
repz
inc
cmp
in
daa
jle
inc
aad
enter
add
sbb
scas
aad
cltd
mov
jmp
call
xor
ret
sbb
xor
in
pop
mov
sti
mov
imul
shrb
jle
jae
in
push
cltd
xor
push
adc
lret
cmp
mov
sbb
inc
and
aaa
xchg
dec
mov
andl
call
mov
scas
sbb
adc
stos
xchg
lret
movsl
xor
lret
pop
vunpcklps
xor
inc
sub
outsl
subl
xor
mov
incb
clc
and
aam
xor
ja
and
mov
jo
js
mov
cmp
jae,pn
data16
pop
test
mov
ret
push
adc
je
cltd
scas
mov
mov
cmp
inc
cmpb
pop
mov
sub
push
lcall
pop
dec
cmc
gs
pop
fcomps
xor
nop
push
dec
cs
dec
call
inc
cmp
mov
mov
rcrl
xor
lret
jbe
xchg
sbb
xor
fisubrl
jne
stc
push
loope
push
cmp
jmp
pop
xor
or
ss
ffree
loope
stos
mov
cmp
test
das
mov
lret
cmc
lahf
mov
cmp
arpl
push
and
mov
jb
cmp
notb
dec
adc
imul
jmp
xorb
dec
shlb
mov
push
movsl
cmp
xor
dec
mov
aaa
aaa
or
cmovnp
mov
sahf
insb
cmc
stos
shl
or
mov
push
sbb
sbb
pushf
repz
sub
add
pop
xor
xor
loope
pop
push
inc
pop
cltd
pop
pop
in
sbb
insb
sub
pop
ret
ss
mov
xchg
jbe
dec
test
jo
xor
shlb
dec
inc
dec
adc
inc
das
adc
pop
test
ficoml
xchg
adc
nop
js
stos
mov
mov
mov
mov
mov
imul
pop
xchg
add
cmpsl
add
std
mov
jae
scas
mov
aaa
dec
imul
xchg
push
ret
xchg
outsb
mov
xchg
imul
lcall
mov
gs
ja
mov
push
and
cmpsl
or
and
into
rcr
sbb
ss
fists
loop
imul
inc
lret
mov
bound
lods
jg
test
clc
lret
sti
mov
xorb
cmc
test
es
mov
xchg
mov
pushf
lret
aam
movzbl
xor
add
repnz
ss
mov
or
or
dec
leave
test
loop
in
mov
sbb
jle
jge
insb
mov
cmpsb
jmp
cli
sub
dec
cmp
mov
inc
cltd
jae
xchg
dec
lds
sub
xchg
cmc
add
cmp
fstps
int
andl
es
jae
jmp
addl
cmp
ja
push
push
sbb
lret
sahf
lods
jne
jae
add
xchg
push
push
mov
or
lods
add
mov
push
inc
pop
pusha
js
xor
repz
mov
push
jge
cmpl
popf
std
push
lds
roll
adc
xchg
sub
sti
jp
mov
jo
xor
lds
pusha
lret
mov
pop
repnz
enter
mov
push
xor
push
xor
sahf
rclb
outsl
pop
adc
xchg
gs
jb
jge
mov
and
lds
shrl
pop
push
push
in
adc
test
rclb
xchg
iret
jns
pop
pop
jns
sub
jo
jae
mov
arpl
xchg
cmp
insb
aaa
inc
jecxz
add
push
cmc
clc
aaa
sahf
xchg
test
push
arpl
mov
mov
jmp
xchg
in
sub
jg
je
cld
jne
movsb
cmp
inc
inc
xchg
stc
inc
xor
push
out
fistl
jge
fcoml
xlat
jo
sbb
lock
imul
fisubrs
cmp
jo
arpl
sub
clc
dec
push
inc
and
mov
out
pop
sbb
scas
sub
xchg
or
gs
sbb
jecxz
cmp
dec
mov
mov
jb
pushf
jle
pop
jo
std
inc
mulb
jae
and
lock
push
push
mov
mov
loope
sub
test
and
idiv
xor
sbb
push
rcll
mov
insb
pusha
popa
sarb
jae
add
daa
pop
scas
mov
roll
jge
cld
cmpb
stos
aaa
pop
jp
sahf
outsb
repz
jbe
ja
test
cltd
pop
jge
push
movsl
mov
ja
adc
das
jge
out
cltd
fdivl
jae
les
sbb
adc
lds
and
fidivrs
gs
incb
and
cld
cwtl
in
sbb
push
cmp
sub
and
xchg
test
push
imul
lea
adc
and
es
ret
iret
out
xor
imul
jecxz
jb
lcall
adc
inc
imul
ret
add
inc
cmp
mov
pop
pushf
adc
pusha
leave
scas
inc
add
sub
cmpsb
pusha
cmp
mov
nop
add
dec
es
mov
mov
lock
decb
adc
insb
mov
jae
daa
ret
push
adc
or
jns
insl
lcall
rolb
shlb
into
mov
ss
imul
mov
xchg
dec
pop
sbb
sarl
mov
scas
pop
test
cmc
jg
insl
fisttpl
pushf
mov
add
mov
ret
packuswb
add
mov
or
push
sbbl
push
int3
outsl
jle
in
and
lret
cmpps
flds
inc
shlb
std
pusha
clc
inc
std
cmc
cs
inc
jne
xchg
push
lahf
add
subb
mov
shll
sbb
mov
int3
sub
ja
and
lret
adc
fidivrs
and
mov
mov
inc
repnz
adc
mov
icebp
test
jae
sahf
or
popf
sub
sbb
inc
enter
cltd
ret
inc
fdivl
in
mov
leave
xchg
out
adc
jle
inc
add
in
add
xchg
outsl
out
mov
out
ss
and
jae
dec
cmp
arpl
sub
fimuls
and
pushf
jns
shll
xchg
push
adc
mov
aad
movsl
hlt
cmp
adcl
iret
lcall
mov
mov
mov
ss
xchg
jbe
fsubl
nop
adc
loop
push
sahf
pushf
repz
or
push
iret
mov
xor
or
cmp
jae
push
jo
sub
ja
xor
movsl
je
or
push
mov
call
js,pn
or
jle
cld
imul
cwtl
pop
adc
mov
cmp
jecxz
jno
mov
push
cmp
mov
cmpsl
repnz
int
mov
ss
cmpsl
xchg
jmp
jmp
jl
cmp
jl
lea
rcrl
jp
fldl
dec
push
jmp
xchg
sbb
jnp
xchg
push
jle
sub
jnp
xchg
nop
ds
cmc
in
ret
adc
inc
rep
pop
jns
push
and
lret
shlb
or
sti
arpl
mov
fmuls
sbbb
mov
adc
shrl
push
negl
sub
andb
out
cmp
es
xor
out
clc
xorb
les
out
xchg
xorb
fisubl
or
aaa
pop
cs
jbe
jne
dec
cmc
in
and
lret
int
js
xorl
bnd
popa
sbb
xchg
jae
lcall
mov
sbb
inc
push
xlat
pop
repnz
lods
shrl
jae
in
and
inc
out
and
sub
stos
int3
sub
imul
push
pop
js
inc
scas
ja
sbb
out
jae
xor
imul
pop
sub
adc
inc
stos
xor
ret
jae
lea
push
xchg
mov
call
jle
data16
repz
sbb
jge
lods
mov
jnp
cli
add
ljmp
insb
mov
mov
lods
inc
repnz
mov
iret
mov
ja
or
lahf
mov
ret
mov
pusha
ret
push
mov
and
mov
mov
jns
mov
and
and
pop
sub
stc
push
add
and
nop
int
adcb
adc
sub
mov
dec
je
jns
lea
insl
fidivrl
jge
mov
adc
mov
sub
add
nop
mov
stc
push
or
cmp
shll
popa
subl
jbe
push
mov
imul
in
sub
pop
push
inc
mov
and
xchg
outsb
pop
pop
fnstcw
loope
movsb
cltd
push
ja
cld
push
in
in
mov
jg
daa
cmp
xchg
shl
mov
insb
mov
addb
sbb
jo
stc
lret
mov
mov
dec
xchg
adcb
adc
cmp
xchg
push
adc
lahf
repnz
in
sub
insb
pop
mov
sbb
scas
fsub
mov
xor
fimuls
aad
call
or
out
ret
rcl
mov
dec
pop
enter
movntps
xor
pop
mov
jae
and
inc
aaa
lds
jae
pop
adcl
jo
fbstp
lock
add
aaa
jae
inc
out
sub
pop
in
hlt
xor
cmc
pop
adc
push
mov
addb
sub
int3
fisubs
jns
stc
clc
imul
cmp
sub
das
pop
je
mov
push
adc
pop
and
lods
pop
insb
add
pop
cs
mov
outsl
inc
pop
mov
mov
xchg
mov
and
mov
cltd
lahf
and
popa
repnz
rcr
rolb
int
popa
ss
sbbl
inc
sub
ror
mov
lds
ja
push
sub
aaa
sbb
jecxz
sub
das
jp
mov
add
adc
inc
pop
dec
sbb
or
imul
in
or
xor
cmp
aam
in
aam
and
mov
scas
sub
jae
fildll
stos
mov
fldt
ja
pmulhuw
int3
push
test
and
dec
arpl
das
test
aas
rcll
loop
xor
adc
add
push
imul
in
aad
adc
outsb
mov
fdivl
sub
cmpsl
test
sti
push
sub
or
adc
mov
jae
int
adc
sbbl
addr16
inc
shll
add
imul
decl
cmp
fidivs
sahf
mov
adc
iret
dec
mov
in
rorl
adc
inc
inc
cltd
push
pop
jno
cs
jmp
sbb
out
push
xor
inc
hlt
pushf
enter
sub
dec
cld
fadd
ret
jg
pop
mov
mov
sbb
frstor
ret
stc
int
fstpt
pushf
xchg
push
jae
std
data16
or
add
stos
pop
cltd
cmpsl
insb
mov
push
or
push
pop
in
jb
adc
movsb
flds
jecxz
mov
xchg
fdivs
cwtl
sets
inc
jns
add
jp
inc
xchg
sbb
cmp
adc
cli
mov
mov
pop
xor
je
mov
cs
outsb
cli
xchg
icebp
add
std
repnz
jecxz
dec
data16
adc
scas
cmp
arpl
decl
mov
cld
mov
xor
pusha
or
cmp
lds
push
in
jnp
sbb
sbb
test
shl
mov
outsb
mov
push
test
out
ficoms
mov
std
push
lea
push
leave
jb
sbb
sbb
pop
mov
push
cwtl
fidivrs
adc
fisubrl
rolb
mov
ret
testl
outsl
nop
mov
mov
or
ljmp
je
push
lret
sti
ljmp
lcall
rcrl
add
xchg
js
jae
sub
mov
lock
push
xchg
ss
ds
jl
dec
and
sbb
mov
jns
xor
inc
push
pop
jb
pop
push
xor
push
pop
push
sahf
repnz
out
call
sahf
xor
into
and
fimuls
pop
push
and
adc
ret
pushf
mov
das
fidivl
imul
jae
movsb
faddl
imul
pop
add
sbb
xor
pop
sbb
or
pusha
gs
aaa
cmp
add
ja
add
mov
mov
xchg
xlat
or
pop
sub
ret
lret
fdivs
mov
mov
das
inc
clc
aaa
mov
inc
adc
test
xor
icebp
inc
pop
mov
jae
fbstp
pop
and
mov
and
xchg
in
mov
loopne
subl
clc
jle
pusha
testb
insb
loopne
adc
xor
mov
xchg
cmpsb
push
repz
jl
sbb
push
sar
push
scas
insb
pop
pop
pop
aam
xorl
js
outsb
xor
aaa
lock
popa
add
loop
jo
pop
insb
mov
imul
pop
push
lret
push
push
loope
jmp
push
scas
dec
test
pop
cmp
sub
sarb
adc
xor
sub
xor
iret
inc
and
insb
insb
shrb
push
mov
jecxz
add
mov
adc
js
fs
mov
cmp
mov
push
daa
and
sub
clc
jg
sub
rcl
mov
gs
mov
cld
data16
or
ss
dec
fcomps
pop
push
xlat
bound
add
dec
xchg
pushf
add
xor
das
mov
cmc
test
int
mov
cmp
pop
jo
mov
incl
ret
jecxz
cvtps2pd
sub
and
mov
cs
shlb
xchg
sub
andb
mov
das
sub
dec
test
sti
jmp
das
mov
jmp
mov
ss
cmp
or
fs
inc
cmp
insl
out
sub
in
out
jne
fstp
aaa
push
cwtl
sbb
imul
adc
pop
lret
add
divb
ljmp
lret
pop
add
pop
outsb
fdivl
sub
xchg
mov
mov
in
mov
add
stos
lret
cmpsb
ja
and
inc
jne
mov
cmp
pop
and
aaa
clc
ja
mov
femms
or
mov
jp
fstpt
sbb
cmpsb
lret
cmp
jnp
aaa
mov
sbb
imul
push
mov
mov
sbb
lcall
jg
lods
into
mov
aas
pushf
xchg
mov
rolb
cmp
fmul
pop
fsubrl
add
rcrl
js
bswap
or
push
pop
pop
cmp
dec
std
ja
les
lret
hlt
dec
imul
dec
mov
insl
mov
adc
repnz
jne
inc
mov
sbb
adc
fidivs
lahf
xor
out
int3
jnp
xor
stos
add
mov
xor
jle
insl
mov
notl
lea
std
mov
sbb
xor
stc
push
in
pop
inc
fists
and
shl
add
mov
call
inc
push
or
pop
adc
test
pop
cmc
mov
loop
or
xor
shrl
andb
mov
xchg
push
sub
fcoms
adc
movsl
xchg
sahf
push
iret
cli
idivb
js
jl
cmp
es
test
out
jecxz
fcoms
inc
pop
cmpl
in
sbb
mov
sub
inc
push
and
xor
dec
add
jns
xchg
cltd
pop
jae
push
pusha
insb
fisubrs
sub
xor
jmp
maskmovq
idivl
sub
jae
sub
sbb
int
jl
xor
and
inc
mov
data16
pop
insb
inc
xchg
stos
mov
sbb
jge
push
pop
adc
imul
cli
cli
popa
adc
scas
mov
xchg
sub
je
xlat
dec
stos
repnz
adc
sbb
sahf
cmp
sbb
in
pop
jmp
test
jno
jbe
cmpsb
mov
pop
ret
pop
push
cmp
pop
icebp
inc
adcb
mov
negl
sbb
mov
sbbb
sub
int
dec
imul
adc
ljmp
xchg
adc
pop
lahf
pop
mov
xor
sub
imul
gs
cli
jns
add
adc
vunpcklps
sbb
pop
repnz
mov
adc
into
xchg
push
push
imul
aam
push
jmp
add
mov
xor
jb
fcoms
inc
sbb
repnz
fistps
xor
or
pop
add
add
out
pop
mov
mov
add
jle
gs
sub
push
or
push
out
ss
jne
lods
xlat
or
gs
fists
cmc
fstpt
mov
mov
cmp
jb
and
lock
mov
jae
aas
ret
sub
jbe
lret
out
inc
cmp
imull
jl
pop
push
movsb
add
out
mov
cli
call
mov
push
jecxz
in
inc
and
data16
pusha
sti
dec
lods
jmp
jnp
fisttpll
jo
sar
cmpsb
fbstp
ljmp
add
sub
push
jae
xchg
addl
cwtl
xorl
mov
ds
sbb
outsb
ret
pop
xchg
jle
test
stc
cmpsb
cmc
fs
aaa
xchg
fnstenv
fisttps
sbbb
xchg
popa
shll
jg
cmp
int3
rcrl
addb
mov
pop
imul
mov
dec
jge
push
cli
bound
and
add
inc
lods
or
jns
cs
subb
clc
es
ss
and
or
loop
add
sub
scas
insb
insb
mov
inc
sub
xchg
cmpsb
jae
or
loopne
xchg
mov
xor
pop
pusha
xchg
cwtl
mov
jle
push
xor
mov
lods
or
dec
and
dec
in
pop
xchg
xor
arpl
mov
cmpl
scas
jne
or
mov
scas
xor
ja
cmpsl
call
adcb
cltd
inc
push
pop
and
out
mov
jge
add
subb
adc
lock
sbb
fbld
loopne
ljmp
cmpsb
cli
jae
arpl
add
sbb
jmp
and
iret
in
or
jmp
inc
test
xchg
js
fdivr
leave
es
loop
mov
mov
push
jae
lret
fisubs
xor
cmc
aad
test
sahf
cmc
push
insb
mov
sbb
data16
inc
mov
scas
imul
rclb
in
mov
sti
sub
mov
lods
add
not
mov
fs
pop
nop
shlb
pusha
in
push
or
inc
cmp
push
and
int3
mov
mov
bound
ds
sti
pushf
cmp
jbe
push
adc
lret
into
push
pop
sub
stc
imul
push
pop
dec
jge
or
push
jo
or
sbb
pusha
xlat
sub
mov
mov
mov
insb
out
repz
sub
adc
dec
mov
ss
sbb
les
add
mov
adc
mov
mov
push
mov
cmpsb
scas
in
hlt
adc
aam
cs
sbb
mov
adc
xor
fnstenv
xor
movsb
repz
lahf
add
sub
mov
or
or
push
movsl
mulb
adc
add
movsl
lods
movsb
jae
and
into
pop
insb
adc
outsb
sti
popa
es
fidivrs
mov
adc
pop
add
cmp
push
jns
mov
fnstsw
mov
clc
insl
dec
repnz
pop
imul
lock
pop
inc
sbb
in
sbbl
cmp
scas
mov
sbb
ja
and
add
addb
add
decl
ret
ss
hlt
mov
insb
sub
xor
sarl
mov
xchg
adc
xchg
mov
rclb
ja
fnstenv
sbb
lock
mov
pusha
cmp
loope
push
push
mov
adc
and
shll
shrl
mov
push
mov
sbb
test
dec
sub
andl
push
xchg
pop
jbe
sub
and
jg
mov
out
add
xchg
imul
test
daa
aas
cmp
into
jl
repnz
jo
mov
arpl
cmp
jle
jmp
lods
xor
jp
ljmp
addr16
xchg
pop
mov
and
jp
add
mov
pop
xchg
pop
je
mov
mov
adc
mov
fistpl
shll
mov
and
out
mov
jnp
lcall
add
fistpl
xchg
add
inc
js
stos
pop
in
pop
sbb
add
mov
sub
cmp
outsl
fnstcw
pop
and
ja
pop
pop
cmp
push
sub
mov
ret
adc
dec
aad
leave
aad
xchg
sub
in
iret
std
pop
ret
ja
imul
push
movsb
adc
push
mov
shlb
or
sarb
in
jae
dec
cmpsl
xchg
icebp
lret
lret
adc
mov
sub
jg
ss
dec
popa
pop
hlt
add
lods
cwtl
push
adc
lods
orb
add
cmp
ljmp
insl
adc
inc
push
or
test
cltd
adc
aaa
xchg
clc
mov
jp
mov
sbb
dec
dec
xchg
mov
or
pop
ficomps
adc
std
imul
fisubs
add
scas
and
add
cmp
pop
in
lods
and
pop
cwtl
arpl
jnp
test
cltd
repz
in
cmp
add
push
lret
aam
sahf
test
sub
jo
test
in
xorb
xchg
xor
repz
and
jo
dec
mov
xor
cmpsb
nop
imul
mov
jb
sub
mov
or
add
pop
addb
int
and
or
xchg
cld
xchg
dec
in
inc
je
xor
lods
test
lret
ljmp
stc
out
xchg
xchg
xchg
push
in
aaa
imul
dec
test
repnz
cmpsb
mov
sti
jb
imul
sbb
cmp
mov
imul
ret
jae
ljmp
lds
pop
and
jo
imul
popl
dec
mov
cli
std
sbb
jae
xor
in
mov
xchg
push
addb
mov
inc
and
pop
mov
jae
les
pop
cmp
jae
daa
jg
ja
inc
cmp
push
mov
jge
pop
out
and
jl
aam
jns
inc
mov
lds
cmc
dec
xchg
data16
mov
push
cmpsb
push
sbb
xor
pushf
nop
jo
pop
dec
and
rolb
xchg
int
xor
idivl
ss
jae
faddl
mov
mov
shrb
fidivrs
jae
loop
mov
int
inc
push
mov
scas
ss
fwait
sbb
hlt
pop
scas
inc
std
push
fisubs
jmp
jge
adc
mov
test
out
pop
mov
sbb
cmp
test
scas
inc
xchg
call
mov
inc
push
lea
aam
mov
out
push
adc
xchg
mov
push
mov
sahf
dec
mov
mov
stc
lea
fildl
movsl
imul
inc
testb
jae
xor
movsb
push
push
mov
int
popa
mov
jecxz
jl
pop
cwtl
sbb
test
data16
mov
pop
adc
jae
imul
jb
jns
int
and
hlt
jg
inc
data16
and
hlt
sbb
xchg
adc
mov
cwtl
iret
mov
insb
mov
ficomps
mov
jne
and
jle
add
mov
mov
or
mov
insb
stos
shl
fxch
cwtl
push
stos
data16
push
dec
mov
mov
pusha
adc
push
outsb
pop
inc
sub
cmp
imul
das
lret
sbb
cltd
mul
mov
cld
int
mov
adc
pusha
xor
sub
add
and
dec
andb
mov
push
pop
dec
mov
shl
inc
dec
mov
mov
scas
add
jae
fstpt
ja
sub
popa
mov
rcll
lds
pop
dec
push
cltd
pusha
cmp
mov
lahf
ja
fldcw
sub
jo
dec
or
or
lahf
and
sbb
es
adc
dec
adc
push
pop
xor
jo
xchg
mov
and
adc
cwtl
fstl
inc
aaa
adc
pushl
orl
jl
xchg
inc
jbe
adc
popf
push
leave
mov
jmp
jne
cmp
cwtl
mov
aaa
flds
xchg
out
fwait
push
dec
js
adc
xor
stos
cld
sbb
lret
imul
jl
out
xchg
xlat
cli
inc
insl
push
lcall
lods
pop
jle
mov
ja
mov
fisubl
inc
xor
es
into
movsb
push
lods
data16
icebp
dec
pop
jle
push
sbb
repnz
mov
mov
call
and
in
push
jb
push
sbb
add
adc
xchg
push
push
xor
sub
cmpsl
jb
adc
fists
jmp
pop
movsl
clc
jo
push
mov
aas
dec
shlb
negl
adc
jae
pop
cltd
das
call
setl
and
hlt
cmc
ficomps
jge
cltd
sub
pop
iret
mov
cmp
pop
test
lahf
xchg
fcompl
or
mov
movsl
jae
sub
push
mov
mov
fimuls
idivl
test
sub
xchg
test
fmul
sub
mov
inc
test
cmp
orb
mov
mov
sub
nop
or
lock
inc
nop
std
dec
mov
out
push
cmp
test
clc
pop
xor
sbb
sbb
cli
data16
push
lea
arpl
pop
sbb
cmp
lahf
sbb
cmova
push
jge
mov
imul
cwtl
loope
hlt
dec
pop
clc
sar
adc
aad
and
sbb
mov
pushf
out
mov
xor
fidivl
mov
es
mov
push
push
sbb
fistpl
sahf
xchg
lahf
pusha
mov
andl
pushf
sub
iret
in
cmpsb
and
pop
jae
xchg
test
lret
iret
scas
jb
in
jb
ret
clc
mov
outsl
roll
mov
aas
pop
call
xor
jbe
sbb
dec
repnz
test
jae
jp
jns
cmp
iret
push
es
mov
ja
pop
jg
adc
addb
mov
dec
push
aam
aaa
push
ja
hlt
xor
sar
pop
add
fmull
repz
ds
ss
or
add
cmp
or
into
xor
scas
call
xchg
cld
fdivrl
jp
or
arpl
mov
adc
inc
mov
orl
mov
and
test
inc
jl
cmc
lret
inc
lea
add
orb
cmpsb
outsb
cmp
jae
xor
mov
push
lds
pop
add
in
loopne
jmp
sub
and
mov
sbbb
outsl
lods
adc
out
scas
hlt
clc
inc
fnsave
movsl
enter
add
sbb
fdivrl
xchg
sbb
rolb
sbb
in
mov
mov
push
ret
pop
in
lds
xorb
aaa
int3
iret
mov
fsub
mov
add
ja
in
adc
lock
loop
mov
adc
push
or
cmpb
mov
imul
shr
jmp
mul
push
loope
out
aam
sub
inc
movsb
test
into
out
jns
stos
mov
into
add
xor
icebp
je
gs
mov
lds
and
das
adc
dec
pop
in
xchg
lods
insb
dec
ljmp
arpl
jb
and
mov
scas
mov
or
int
and
hlt
imul
lret
das
aas
sub
inc
mov
int3
pop
dec
cmp
pop
aam
lret
imul
or
sub
add
cld
mov
test
test
loope
cmp
loopne
sbb
inc
gs
jb
mov
push
xchg
xchg
push
xor
inc
mov
test
test
push
mov
insb
mov
pop
in
adc
outsb
cmp
inc
jne
and
test
jmp
mov
sti
jmp
xor
jl
add
loop
adc
es
jg
popa
mov
add
xor
sub
and
jae
push
vmovss
jne
adc
cmp
mov
add
mov
inc
jmp
sbb
inc
xor
or
cwtl
scas
mov
outsl
scas
push
xchg
inc
ss
cmp
cs
sub
cltd
imul
pop
aaa
pop
jmp
lcall
sbb
push
lret
mulb
push
pop
minps
in
cwtl
inc
stc
insb
out
or
add
sbb
dec
decb
mov
popa
iret
test
cmp
mov
movsl
pop
ja
adc
and
fs
push
sahf
pushf
icebp
push
aad
sbb
mov
in
mov
mov
adc
xor
and
and
push
test
arpl
or
jge
jb
pop
adc
or
adc
mov
mov
xchg
add
insb
cmpsb
insl
bound
cwtl
inc
dec
pop
out
cltd
inc
xchg
sbbl
sbb
lret
adc
int3
lret
aad
xor
mov
jecxz
push
sbbb
in
insl
cmc
or
or
pusha
cmc
xchg
mov
in
jne
clc
cmpsb
lods
negb
test
jmp
cmp
xchg
lret
jae
add
and
mov
sub
daa
jl
pusha
xchg
movsb
push
inc
imul
jbe
mov
ja
xchg
push
xchg
ret
jg
imul
js
in
mov
cmc
xor
xor
faddp
sub
data16
push
sbb
cmp
stos
call
sti
xchg
jecxz
dec
mov
out
jl
jno
and
pop
movsl
jbe
inc
nop
sbb
imul
and
or
jp
mov
inc
dec
sbb
inc
cld
lret
int3
jg
cmp
lret
adc
int
in
cltd
idivb
mov
push
test
call
mov
xchg
mov
jbe
sbb
ds
mov
push
addr16
mov
mov
xchg
fmulp
push
sub
lock
imul
sysexit
xor
push
mov
jo
popl
movsl
scas
js
psubw
jb
push
mov
pop
enter
jl
test
in
push
lods
lods
addr16
test
pop
pop
push
and
add
pop
jle
js
adc
add
ret
cmp
aam
add
jl
xor
div
mov
mov
popf
adc
repz
out
rorl
xlat
int3
daa
in
push
jnp
xor
jg
das
add
mov
pop
je
mov
stos
orb
ja
imul
test
mov
cli
or
mov
sub
cmc
imul
jge
fsubl
daa
sbb
ds
insl
lcall
nop
cwtl
sbbb
aaa
sbb
inc
and
jle
cmp
add
push
mov
pop
imul
mov
js
jae
je
mov
mov
dec
dec
and
mov
sub
jae
outsl
pop
xorb
jle
fstpl
add
mov
sahf
sub
nop
lds
push
or
neg
lock
mov
xor
xor
in
push
mov
rcrl
jae
mov
psrlq
stos
xor
sbb
dec
fnstsw
mov
or
jne
jo
pop
cmp
ret
xchg
outsb
lea
in
xrelease
mov
call
sub
aaa
mov
cltd
bound
sarb
fmuls
das
xor
js
sarl
dec
cmp
movsl
divl
jl
daa
jle
data16
outsb
mov
lods
mov
cmc
jl
in
add
or
pop
ficomps
xchg
pusha
jae
jnp
loopne
or
adc
adc
or
test
jecxz
int
push
clc
imul
inc
xchg
mov
rcrl
jl
mov
mov
ds
jmp
and
je
mov
fistl
push
into
mov
cmp
aaa
ja
push
mov
imul
cmpsl
or
fidivrs
cmpsl
push
fcomps
mov
fbld
inc
push
pop
je
stos
leave
push
inc
rcrb
lock
xor
lea
test
fwait
sbb
adc
movb
lcall
pop
repz
int
push
imul
cmp
shlb
stc
lock
in
ljmp
push
dec
fs
ret
add
adc
jg
push
ja
mov
cmc
pop
mov
mov
out
dec
enter
int
jae
jecxz
sti
or
adc
mov
or
je
sbb
or
sbb
jae
pop
pop
pop
in
jo
pop
lds
daa
aad
push
addl
push
dec
mov
push
add
and
pusha
pop
sub
cltd
std
pusha
mov
add
into
ss
lahf
push
fidivs
int3
pop
mov
leave
in
or
jno
jo
movsb
stc
out
mov
mov
scas
insb
ret
mov
xchg
insb
pushf
mov
jns
add
xchg
sar
mov
or
cmp
mov
aam
and
mov
mov
ds
ret
ja
in
es
pop
or
xchg
push
or
fmuls
pop
ds
fimuls
and
add
ja
jo
mov
mov
loopne
imul
jb
mov
movsb
mov
xor
punpcklwd
stos
pushf
jl
ss
push
push
cli
jle
mov
jbe
push
and
push
inc
cs
mov
mov
jle
xchg
cwtl
idivb
lret
icebp
cmpsl
test
insl
pop
imul
pop
movsb
adc
inc
adc
ja
in
push
jae
jmp
sbb
in
xor
arpl
xchg
inc
fwait
or
mov
jb
into
ret
push
mov
xchg
or
mov
inc
cmp
outsb
int3
mov
faddl
mov
pop
imul
mov
pop
jne
mov
mov
fldt
mov
xchg
test
ja
lods
adc
ljmp
inc
push
add
cmp
fidivs
fsub
stc
push
add
imul
enter
aaa
push
dec
mov
imul
stos
mov
mov
pop
sub
xor
sahf
ja
arpl
rorb
daa
fdivp
xchg
xchg
xchg
xor
pop
std
out
cmp
sbbl
xchg
fmull
sub
jmp
test
pop
insl
pop
mov
adc
adc
shll
jae
test
push
fistps
je
jecxz
jae
inc
pop
shl
es
cmpl
mov
lea
mov
jmp
lahf
pop
fsubs
mov
leave
xchg
mov
test
ret
lcall
out
adc
and
scas
mov
adc
sbb
jo
shlb
mov
xchg
pop
sbb
pop
push
sbb
lret
jl
scas
cli
popa
ret
xchg
hlt
pop
lret
or
fildll
stos
loope
pop
test
inc
xchg
adc
adc
stos
or
or
insl
xchg
js
pop
subb
pop
idivb
xorb
in
inc
aad
mov
mov
frstor
jg
pop
out
imul
pop
xor
adc
jno
mov
out
adc
sbb
add
push
int3
int3
dec
adc
mov
mov
int3
xor
aam
xchg
and
sub
adc
jecxz
les
pop
adc
lods
fistl
dec
adc
mov
adc
ret
in
rcr
aad
add
sbb
cmp
test
faddp
fwait
mov
outsb
mov
sub
outsl
scas
sar
inc
sti
jno
cmp
loopne
sbb
sbb
mov
ja
jb
pop
rcl
mov
add
jae
push
push
jnp
je
popa
sbb
repnz
cwtl
divb
xchg
jge,pn
xor
cwtl
ljmp
dec
xor
scas
dec
lret
and
mov
mov
sbb
push
push
stos
push
scas
insb
inc
jle
inc
imul
jnp
pusha
xchg
aaa
push
aas
insb
mov
or
ja
mov
nop
sub
xchg
mov
sbbb
xor
fisubrs
pop
cwtl
lcall
xchg
pop
scas
jns
pusha
aad
je
test
pop
and
mov
pop
jno
mov
adc
pop
cmp
jl,pt
lea
xorb
inc
adcl
popa
pop
push
fstps
mov
aaa
fisubs
push
lods
mov
sub
or
xor
add
sbb
pop
mov
inc
and
mov
ret
pop
inc
jo
mov
aam
xchg
call
lods
shl
push
jle
sub
aas
cltd
imul
mov
cltd
dec
jae
je
adc
adc
mov
mov
inc
xchg
or
icebp
pusha
and
cmpsl
mov
lahf
xlat
jns
sub
pushf
jns
insb
push
mov
push
jo
mov
jmp
sub
xchg
in
data16
mov
jb
js
test
xor
fsubl
xor
or
push
jb
les
outsb
fldcw
dec
mov
ja
test
or
cmpsl
mov
push
xlat
mov
mov
jae
inc
sbb
cmp
sub
inc
sub
jl
xor
dec
int
sbb
mov
outsl
xchg
cmp
sbb
push
leave
xchg
cli
adc
jns
arpl
xchg
lods
pop
mov
or
jae
ret
sbb
js
shrb
push
cmp
ret
mov
jmp
mov
or
or
iret
inc
jle
xor
xlat
movsl
out
push
inc
inc
cmpsb
push
jns
xor
leave
in
sub
jmp
lods
insb
cld
sub
rorb
into
pop
stos
adc
jbe
push
pop
fs
sub
xor
rclb
and
mov
mov
lret
pop
pop
mov
int3
stos
or
out
scas
xchg
repnz
adc
addl
mov
addr16
push
dec
jp
pop
jge
xor
jne
daa
inc
mov
or
mov
test
adc
fdivrl
out
jg
orb
xchg
push
das
push
scas
clc
mov
adc
pop
lods
imul
sub
insb
scas
push
sub
pop
cmp
jmp
sub
sub
in
insb
jge
cmp
jg
push
movsb
cmp
mov
pop
lcall
rol
in
lcall
xchg
push
mov
mov
imul
sbb
cmpsb
sub
sub
mov
lods
ret
sbb
sub
pop
mov
mov
jl
in
sarl
sahf
sbb
aaa
push
adcl
or
mov
xor
mov
stos
push
pop
es
js
hlt
iret
lods
and
testl
xchg
scas
and
sub
imul
and
xor
enter
insb
push
fidivl
imul
repnz
lods
int3
cwtl
mov
jecxz
pusha
mov
ror
pop
loop
fbstp
test
adc
sub
sar
lret
jmp
insb
and
test
cmc
pop
cmc
cmp
xchg
mov
out
cmc
inc
mov
scas
rorb
and
mov
mov
out
pop
ja
sahf
pop
mov
adc
jns
adc
mov
jae
movsb
cmc
add
ja
xor
sub
outsl
int
sbb
sub
shlb
xor
mov
imul
in
mov
daa
test
cmp
int3
addr16
popa
pop
into
push
dec
mov
stos
cld
xlat
sahf
aad
sahf
push
test
or
inc
arpl
pop
jp
scas
icebp
dec
jecxz
pop
lock
add
mov
push
movsl
je
loopne
adc
xchg
xchg
and
test
aas
add
dec
flds
aam
clc
test
adc
cltd
stc
hlt
aaa
mov
adc
lret
push
test
fstps
std
xchg
xchg
jp
or
fsubrl
out
loop
push
cli
inc
dec
out
jmp
sub
mov
iret
cmpsb
mul
subb
stos
subb
in
movsb
inc
add
push
cli
xorl
push
sti
stos
out
pop
inc
sub
inc
pop
mov
mov
inc
push
cltd
add
mov
enter
xchg
pop
xchg
or
inc
pushf
jo
fistl
lds
mov
test
dec
stc
std
push
jge
es
dec
jle
cwtl
sahf
jo
nop
lods
inc
push
int
popa
mov
lods
jge
jb
repnz
rorl
or
aad
ret
sbb
pop
and
sbb
jbe
xor
or
push
cmp
test
or
fistpl
dec
or
mov
xor
adc
dec
sbb
imul
adc
jecxz
sbb
mov
mov
sbb
jae
clc
mov
in
xorb
sbbl
notb
push
sahf
inc
mov
cwtl
aaa
or
jbe
pop
jmp
outsl
daa
pop
cli
out
sub
cli
in
ret
scas
pop
pop
jae
mov
xchg
sub
cmp
cmpsl
pop
adc
in
push
or
sub
cmp
mov
in
xchg
jmp
push
inc
xchg
pusha
push
pop
aaa
mov
pop
les
pop
jno
cld
xor
pusha
aad
fists
mov
cld
into
stos
mov
xor
cwtl
jmp
faddl
mov
fildll
shrb
cmp
movsb
add
mov
aaa
add
js
hlt
lret
add
imul
mov
add
inc
dec
aaa
xchg
pop
pop
jg
in
xchg
jecxz
jae
lret
es
lret
insb
mov
es
dec
jecxz
push
jge
bound
loopne
xor
addr16
xor
or
inc
fs
gs
adc
cltd
lods
inc
xchg
stc
adc
inc
sbbb
hlt
repz
xlat
out
and
inc
cwtl
test
xchg
or
sbb
and
or
fistpl
jo
jo
sti
push
aaa
adc
adc
sahf
int3
out
jbe
dec
nop
insb
test
fisttpll
inc
ljmp
jno
sbb
pop
andb
sti
jge
sarl
dec
jmp
or
imull
clc
mov
cmp
imul
popl
add
mov
test
lret
add
adc
in
mov
dec
mov
and
outsl
cli
mov
push
mov
adc
and
lret
sub
and
aam
cli
xchg
xor
cmp
in
cmp
jp
jo
testb
lods
mov
sbbl
into
fbstp
add
adc
imul
scas
xchg
dec
int
fs
outsb
xchg
xor
inc
cmpsl
lea
testb
xor
dec
dec
insb
imul
rcll
xchg
add
push
push
inc
aam
push
subl
ss
xchg
and
out
dec
clc
ret
int
into
push
mov
pop
and
sbb
adc
push
xor
mov
jnp
and
sub
loopne
sub
data16
aaa
lods
out
dec
lods
lods
aaa
inc
in
xlat
pusha
imul
pop
inc
mov
shlb
ja
movsl
mov
fwait
mov
xchg
push
xor
inc
xchg
out
mov
fisubrs
cld
inc
je
push
cmp
jbe
pusha
fcmovnu
ljmp
mov
sbb
or
ja
xor
out
movsl
es
stos
in
subb
or
ljmp
xor
pop
mov
mov
dec
xor
andb
mov
leave
int3
xor
hlt
idiv
imull
adc
mov
mov
sub
imul
js
aaa
aas
jmp
aaa
add
mov
jge
or
xchg
shll
lret
pop
pop
inc
cmp
js
fidivs
jo
pop
push
ja
add
mov
idiv
fdivp
adc
dec
jno
and
inc
ret
aam
insl
out
and
jmp
mov
jmp
xor
jle
lods
pop
cwtl
pop
cwtl
inc
ficoml
cmp
push
mov
mov
adc
mov
je
adc
xchg
nop
jae
test
add
std
push
sahf
sub
jae
ljmpw
into
xchg
add
pop
jle
jne
movsl
sbb
test
aaa
in
push
mov
mov
pop
sahf
iret
inc
int
add
mov
insb
fdivr
lods
clc
adc
jg
ret
and
int3
iret
test
test
push
cmpb
sbb
ss
dec
mov
cld
iret
pop
int3
mov
hlt
jae
adc
stc
sub
hlt
test
es
inc
int3
mov
xor
repz
divb
jg
cmc
jl
or
mov
out
sub
cmp
xor
inc
pop
ss
jmp
sub
jae
xchg
popa
fwait
jno
pop
mov
mov
pushf
sub
xchg
dec
test
mov
mov
cltd
xor
hlt
test
out
cli
sbb
fldl
cmc
jle
push
mov
shl
pusha
sar
ljmp
les
loopne
mov
repnz
stos
push
cmp
mov
push
pop
sbb
sub
jg
divb
adc
sub
ja
adc
aaa
in
mov
jle
imul
out
push
sbb
inc
clc
std
test
ss
pop
out
inc
ds
push
xlat
add
mov
xchg
push
cmpsb
jbe
mov
push
sbb
mov
cwtl
jecxz
push
gs
lock
xchg
imul
jmp
mov
scas
jmp
pop
mov
imul
pushf
adc
in
xchg
and
imul
jno
jae
dec
out
sbb
sub
sub
scas
out
pop
test
push
push
jmp
in
sub
fcomi
dec
adc
divl
xor
jle
das
pop
mov
in
mov
popf
fmuls
jmp
jmp
dec
jae
mull
mov
xor
sub
push
fcomip
lea
dec
frstor
dec
mov
repz
pushf
test
cmp
mov
cmp
arpl
lret
add
cmpsl
shll
push
loop
out
shrb
mov
mov
mov
in
xlat
call
adc
ds
aad
loopne
jmp
xchg
shlb
imul
ja
out
in
push
cmc
push
or
mov
imul
pop
sub
aam
jmp
dec
adc
adc
into
in
rclb
pop
sub
cltd
mov
push
xchg
lcall
je
out
imul
xchg
daa
xor
imul
xchg
push
std
nop
xchg
mov
stos
inc
inc
test
fisttpl
xor
out
mov
clc
and
cli
mov
pop
adc
mov
scas
inc
int3
loope
cmp
ja
sub
in
fisubrs
sbb
inc
mov
push
push
mov
out
ret
jns
or
cmp
mov
jle
ja
jo
pusha
jae
sti
testb
pop
xchg
ss
pop
test
insb
out
stos
pop
test
and
aam
mov
mov
ret
int3
fisubs
pop
insb
idiv
gs
stos
add
xor
loope
clc
dec
jno
inc
xorl
mov
xor
dec
cmp
jmp
push
adc
sahf
rcl
cmp
ret
lods
dec
sbb
mov
cli
test
jle
lahf
mov
xor
imul
mov
cli
popf
mov
jl
inc
aam
fnsave
outsl
dec
ds
neg
adc
or
xchg
in
pop
xlat
fs
fiadds
dec
jae,pn
pop
loope
dec
mov
sbb
mov
mov
hlt
sub
imul
hlt
divb
daa
push
test
mov
cmpsl
ja
or
pushf
aam
sbb
inc
movsb
sbb
sbb
push
jle
loopne
xchg
cs
in
in
add
das
mov
add
lds
fs
or
xchg
ja
xchg
lret
inc
mov
aaa
add
std
adc
or
jmp
sbb
lds
adc
lds
inc
lret
xchg
sbb
fisttpl
mov
jle
in
jae
out
mov
mov
call
push
roll
pop
fldcw
mov
adc
jl
jle
loopne
arpl
push
mov
fadds
push
cmp
mov
xchg
repz
or
loopne
sbb
cmp
ja
xor
in
lea
and
mov
jg
hlt
in
add
push
loopne
mov
shll
or
jo
cs
jecxz
aam
mov
in
xchg
idivb
mov
and
xchg
sarb
hlt
push
inc
aas
sbb
or
mov
pop
ja
scas
aam
jae
dec
pop
or
ljmp
push
inc
push
sub
hlt
xchg
sbb
dec
adc
sahf
es
mov
sbb
je
pop
and
loope
nop
scas
push
sub
add
je
jl
adc
loop
sbb
lret
jae
aaa
inc
fwait
lahf
out
cmp
dec
adc
mov
cmc
dec
pop
jb
in
xor
test
cmp
jae
mov
cli
adc
push
pusha
mov
test
outsb
fstl
jne
into
mov
bound
adcb
jne
add
inc
je
xchg
icebp
add
ss
push
dec
cwtl
mov
clc
out
mov
sbbb
lcall
fbstp
scas
inc
test
pop
arpl
pop
xchg
cmp
pop
imul
cli
repnz
adc
pop
cmpsb
add
dec
pop
push
xor
sti
mov
dec
jae
imul
cmc
fists
push
arpl
jns
pop
fldcw
popa
lods
sub
xor
fsubr
or
xorb
sub
push
xchg
jl
in
cmp
fs
test
insb
jecxz
lcall
in
inc
lods
inc
pop
shll
inc
cltd
ret
ss
fs
dec
decl
shlb
adc
enter
fdivl
popa
std
pop
and
jg
mov
mov
jbe
int
lock
pop
pusha
aaa
push
mov
xchg
inc
stc
xor
mov
js,pt
fisttps
xchg
mov
push
imul
movsb
insb
mov
fldt
pusha
xchg
or
inc
jae
shll
enter
jl
test
mov
arpl
je
setae
mov
mov
pop
push
loop
push
in
repnz
test
loope
pop
cltd
pop
pop
fildl
xor
add
xlat
rcl
out
es
icebp
fisubrl
mov
cmp
mov
fdivrl
or
test
lahf
or
inc
fnstsw
jle
and
inc
jo
pop
ret
sub
stos
bound
lret
or
in
mov
mov
lods
pop
or
jb
adc
dec
or
xor
jae
outsl
or
in
cwtl
xlat
and
and
dec
iret
inc
pop
lcall
lret
lret
pop
mov
dec
xchg
mov
lret
cmp
sahf
lea
inc
dec
xor
ret
pop
sbb
loopne
adc
fprem1
inc
mov
sbb
stos
imul
out
pushf
xor
adc
out
push
cmc
loopne
mov
xor
testl
add
cli
push
sahf
cmpb
cmc
jmp
mov
dec
pop
adc
xchg
mov
jns
in
pusha
enter
adc
and
pusha
loope
or
hlt
int
xor
inc
int
jo
inc
dec
jno
sbb
push
and
lods
leave
ja
add
pop
and
std
movsb
dec
mov
or
sub
arpl
popa
mov
out
pop
pop
mov
fcoms
and
cmpsl
mov
in
fcmovnbe
loop
mov
dec
jae
iret
in
ret
ljmp
pop
mov
jns
xor
out
push
mov
int
addr16
dec
pusha
cmpsl
into
xor
insb
rcrb
lcall
cld
lret
pop
jns
sbb
sub
bound
arpl
ret
insb
aam
hlt
mov
dec
hlt
sbb
outsb
xor
lock
sbb
add
sbb
and
repnz
or
add
testb
push
pop
std
jecxz
les
sbb
inc
adc
loop
out
adc
imul
int
pushf
int
inc
cmc
stos
pusha
xchg
cmpsl
mov
mov
arpl
lret
popa
les
mov
xchg
jae
jno
cmp
adc
xor
fs
or
clc
ret
add
sti
xchg
xchg
jb
push
push
clc
jmp
int3
adc
xor
aas
inc
aam
dec
pop
add
inc
ss
jge
aas
lock
test
sbb
push
in
test
imul
push
mov
xchg
insl
inc
fildll
add
push
fisubl
data16
es
cli
stos
popa
and
jae
cmp
out
loope
in
and
lods
ss
bound
stos
sbb
mov
lret
mov
add
cs
jmp
sbb
cmp
sub
pusha
dec
dec
scas
nop
sbb
cmp
rdpmc
imul
jmp
xchg
jmp
mov
clc
mov
jae
out
ds
inc
dec
cmp
dec
cmc
out
out
jge
jnp
jae
repnz
pop
insb
sbb
testb
int3
or
xlat
lret
mov
pop
or
fistpl
shrl
imulb
xchg
adcb
xchg
dec
push
push
in
ja
jbe
jne
out
es
sbb
cmp
ljmp
int
pop
aam
and
push
int
add
scas
dec
jo
xchg
mov
mov
divb
test
xchg
jl
hlt
lea
sbb
das
imul
icebp
frstor
xor
add
loop
mov
pop
sub
mov
testl
push
inc
test
ss
sub
insl
push
or
shlb
pop
add
or
aaa
movswl
mov
jle
lcall
fsts
mov
sbb
jo
int3
cmpb
cwtl
add
and
lret
scas
sbb
mov
fwait
pop
adc
lahf
cwtl
and
inc
std
adc
jg
int
lds
push
int3
cmp
adc
pop
das
stos
aad
and
pop
loope
or
aam
push
pop
or
pop
mov
dec
movsl
jmp
lds
push
ss
adc
pop
iret
bnd
dec
push
pop
bound
cmpl
sti
dec
test
and
leave
and
popf
and
xchg
adc
mov
mov
arpl
mov
jns
pop
mov
sub
aaa
or
mov
int3
out
mov
aaa
ret
leave
pop
mov
aas
into
cmp
andl
cmpsb
ror
mov
dec
jbe
jecxz
mov
sub
mov
jmp
mov
push
jle
imul
in
mov
and
loope
loope
cmpsb
jl
les
mov
sbb
iret
subb
push
xor
cmp
and
out
iret
jg
cmp
mov
push
jmp
push
mov
push
mov
fistps
dec
or
push
out
fstpt
sbb
pop
cmp
mov
pop
lret
lods
fimull
sahf
push
xor
inc
xor
jns
cmpsb
add
iret
push
ja
scas
aam
jae
lcall
aad
push
mov
aaa
lea
movsl
jae
jge
adc
push
test
jl
frstor
sub
test
das
lds
adc
mov
dec
aam
cli
shll
andl
mov
jb
pop
jo
addb
sahf
mov
mov
repz
enter
adcb
sub
scas
nop
popf
cmp
int3
xlat
jae
sbb
and
mov
cmp
shl
push
dec
cmp
or
enter
ja
ljmp
dec
fnstenv
sub
mov
mov
cmp
cmp
fidivl
push
mov
xlat
mov
mov
test
pop
out
rcr
mov
xor
mov
sbb
mov
cmp
pop
cmovle
xchg
add
imul
or
stos
mov
inc
dec
sbb
lret
cmp
mov
fcomi
cli
movsl
shlb
enter
jmp
roll
mov
outsl
ret
cltd
jl
cs
mov
aad
adc
pop
int
lock
jo
mov
mov
ret
orl
xor
mov
mov
adc
out
jo
mov
jae
jmp
add
fsubl
jnp
xlat
ja
mov
fstl
sarb
lds
inc
aam
stc
xchg
sub
jne
jbe
dec
std
mov
das
cltd
addb
mov
loop
pop
add
add
xor
stc
mov
je
pop
icebp
pop
aam
cwtl
daa
sub
mov
cmp
add
incb
sbb
sub
pop
mov
pushl
push
popa
dec
adc
sub
imul
daa
mov
mov
mov
sub
andl
ja
dec
add
xchg
mull
push
scas
mov
popa
nop
rcll
dec
xor
in
stc
pop
lret
push
call
xchg
pop
mov
mov
sub
movsl
mov
add
xchg
int
dec
inc
xchg
aaa
cwtl
cmp
aaa
mov
lock
xchg
push
movb
loop
sbb
cmpsb
clc
jo
add
int3
scas
ret
cld
shr
ss
mov
test
lock
push
xchg
pop
lds
dec
dec
scas
imul
stos
sti
cmp
daa
mov
inc
mov
test
sbb
les
fsubl
rcrl
xchg
fidivrs
or
xchg
jbe
mov
int
ss
dec
out
aam
aaa
bound
popf
pop
lock
xor
insb
jl
jae
lea
adc
cld
cwtl
mov
xor
lret
jle
arpl
les
fwait
xchg
mov
mov
pushf
jnp,pn
mov
cmpl
iret
cmp
jg
sub
jge
cmp
roll
les
icebp
mov
test
dec
push
sbb
fisubs
cli
pop
cmp
insl
shll
inc
cmp
jle
xor
dec
dec
roll
dec
mov
leave
fdivs
aad
inc
ret
xor
mov
stos
jmp
in
call
jbe
jns
sahf
jns
ret
jbe
data16
sub
xor
pop
imul
arpl
sub
sti
jmp
out
xchg
add
jge
push
dec
lods
imul
ja
test
mov
mov
push
cmpsb
cmp
rcll
jae
mov
adc
mov
jnp
cmp
js
mov
mov
gs
or
mov
popa
sbb
mov
or
loop
pop
rolb
out
fmull
jne
dec
dec
dec
decl
pop
dec
xor
cmpsb
mov
xchg
sub
or
inc
loope
cmc
mov
je
mov
sahf
mov
jne
lods
insb
fadd
jge
inc
fimull
stos
push
les
sub
clc
mov
add
pop
mov
mov
cltd
mov
xchg
jbe
insb
ret
imul
ja
dec
cmpsl
or
test
mov
test
shrb
inc
das
ret
je
stos
sbb
gs
ret
mov
rcrl
sub
xor
lods
add
push
leave
fstcw
in
ss
xchg
sbb
ss
pop
pusha
mov
imul
xchg
movsb
inc
leave
stc
repz
mov
movsl
sub
and
sub
jae
and
xchg
es
jmp
std
cmp
jecxz
sbbl
aaa
daa
add
test
cmpsl
pop
jecxz
mov
xor
pop
mov
jae
sbb
test
pop
adc
fwait
pop
aad
mov
insb
lock
popf
pop
xchg
movsb
mov
xchg
jo
mov
rcrl
push
outsl
mov
lret
sub
and
mov
jae
sub
out
aaa
pushf
test
inc
push
mov
dec
jp
dec
or
xor
mov
lcall
jae
push
push
mov
cli
xor
pusha
xorb
aam
jb
sub
cmp
mov
mov
lret
fldl
repnz
and
and
je
imul
pusha
movsb
cmpl
ljmp
mov
nop
push
jmp
je
cmp
sub
shll
dec
add
hlt
daa
fs
pushf
xor
psubusb
pop
pop
ljmp
or
mov
dec
adc
or
hlt
mov
mov
push
jnp
xchg
add
sub
out
lcall
pop
mov
sub
and
stos
cmp
rorl
rcll
clc
mov
pushl
inc
or
xor
pop
jne
adc
sub
fwait
push
mov
sub
imul
push
or
movsb
pusha
xor
ss
outsl
sbb
xchg
lods
clc
jle
mov
add
xor
setae
ret
fildl
sub
push
mov
jecxz
movsb
test
pusha
cld
test
inc
push
dec
and
mov
jl
mov
cwtl
jae
mov
and
xor
leavew
mov
add
sub
fmull
fidivs
aaa
jae
add
cmp
or
jmp
divb
adc
xchg
movsl
js
pop
dec
and
sbb
inc
or
mov
fidivs
xor
ja
pop
gs
std
aam
pop
cmp
notb
sub
jns
stos
pop
adc
scas
ret
pop
push
push
adc
insb
mov
cli
xor
in
ret
or
jns
xor
dec
aaa
pushf
into
push
jle
stos
jno
push
jecxz
jecxz
lea
ret
pop
outsl
xor
push
rclb
lret
lret
cmp
aad
mov
mov
std
jp
sarl
fmull
iret
add
stos
xchg
sbb
push
mov
scas
insb
loop
jae
enter
mov
cmp
or
cmpsb
mov
int
mov
cmp
mov
insl
xchg
ss
out
mov
cmp
mov
jp
and
inc
stos
outsb
mov
sbb
sub
sbb
inc
negl
inc
fdivrs
inc
mov
leave
push
int
ror
fsubrl
or
movsb
or
scas
mov
lcall
push
test
jno
fnstcw
call
je
std
addr16
and
stos
cmc
push
jmp
xor
inc
nop
pop
pop
cmp
mov
cmc
pushf
sub
push
pop
jo
in
or
out
lcall
fdivrs
cli
add
cmp
pop
scas
int3
inc
aas
pusha
push
lock
into
push
shlb
nop
daa
test
jmp
pop
sub
fldt
in
xchg
or
add
adc
in
mov
hlt
jnp
inc
add
sbb
push
outsb
mov
mov
fs
test
sbb
jae
popa
sub
sbb
xor
jbe
xlat
jns,pn
jecxz
lods
jnp
lret
push
mov
sbb
in
inc
in
outsb
push
cmpsb
cmc
xchg
jae
adc
lret
jnp
adc
movsl
mov
ja
cmp
and
sub
loop
lret
cmp
test
test
adc
adc
das
sub
lods
sub
pop
int
insl
lret
xor
cmpsb
jae
cli
lea
add
xchg
jne
insb
fld
aas
or
pop
or
xchg
mov
jmp
pusha
imul
loope
mov
sbb
out
dec
xchg
sarl
js
lcall
mov
movsl
xchg
dec
int
and
pop
xor
dec
add
testb
mov
cmp
aas
mov
test
mov
xorl
mov
cmove
insl
dec
mov
into
mov
fwait
push
test
jle
lods
adcl
mov
or
into
mov
mov
pop
mov
int
repnz
dec
sbb
sbb
pop
jmp
cmp
mov
imul
ret
pop
jo
hlt
outsl
js
jbe
lahf
test
mov
push
mov
imul
dec
sbb
sti
jne
lret
mov
stos
out
pop
bound
out
xchg
mov
jae
add
xlat
xchg
imul
lods
dec
inc
add
test
outsb
push
cwtl
jb
imul
jns
pop
rorl
shrb
int
mov
adcb
adc
rcrl
into
insb
push
arpl
push
ret
cmpsb
movsl
test
std
out
adc
hlt
fldt
mov
jae
lods
cmp
cld
sti
mov
test
sub
sub
mov
and
stos
mov
adc
pop
and
xlat
in
pop
in
cwtl
inc
mov
insl
and
aaa
and
xor
data16
dec
mov
out
insl
test
pop
movsl
dec
int3
or
push
mov
sub
in
cmp
mov
jl
aam
mov
repnz
adc
hlt
inc
fdivs
push
shrb
rcll
inc
in
and
mov
mov
jmp
push
mov
ret
fists
rolb
mov
jae
fbld
shll
imull
push
cmpl
pop
push
push
xchg
lods
xchg
test
js
jb
hlt
mov
cmp
or
add
leave
gs
in
add
xchg
stc
subps
xchg
push
pop
pop
jbe
pop
adc
push
adc
jg
and
xlat
xchg
loop
iret
das
rcl
cmpsl
outsb
js
pop
cmpsb
icebp
pop
pop
icebp
out
mov
push
cmc
aam
xor
pop
jae
dec
sahf
rcrl
arpl
push
rorl
cltd
mov
push
divb
and
lcall
jne
ficoml
mov
fistpll
adc
shl
mov
mov
jae
popa
push
xchg
push
int
cmc
mov
cli
in
pushf
and
rorl
ds
imul
in
sbb
sarl
add
jecxz
movsl
inc
jno
adc
jmp
add
mov
xchg
lods
add
fisttpll
sub
scas
addr16
shll
push
and
push
jmp
jbe
pop
jb
pop
int3
out
pop
lods
cwtl
imul
and
cmp
xor
stc
add
dec
xchg
pop
cmp
cs
scas
push
mov
xchg
sbb
stos
xor
sub
xor
or
shll
pop
jne
adc
and
out
or
mov
dec
loopne
jnp
out
stc
jns
xor
cmpsb
inc
data16
and
outsb
loopne
or
test
cwtl
xor
fstpt
outsl
sbb
stc
ss
in
or
xor
imul
test
mov
decl
cs
subb
inc
mov
nop
mov
cmc
add
push
cmc
ds
adcl
jp
repz
idivb
xor
or
and
sbb
xor
mov
inc
mov
and
adc
add
out
mov
jb
mov
lret
xor
mov
sbb
ss
ja
cwtl
inc
arpl
adc
sbb
and
push
dec
aad
push
jbe
cmpsb
sbb
inc
insl
push
cld
imul
mov
adc
popf
push
subb
lret
mov
mov
push
add
jbe
cmp
cmp
inc
repz
xchg
daa
std
in
or
jb
iret
mov
outsl
lret
mov
mov
pop
in
push
mov
js
cmpl
mov
add
hlt
outsb
ljmp
insb
imul
repz
mov
pushf
xchg
or
push
push
xchg
gs
mov
test
mov
or
pusha
xchg
jmp
xchg
imul
mov
push
push
jecxz
mov
sub
or
adc
xchg
jne
psraw
adc
cmp
or
js
sub
idivb
cmc
pop
jae
outsl
je
jns
cwtl
subl
xchg
ja
inc
lea
add
xor
repnz
push
negl
lret
fs
sbb
das
data16
repz
test
inc
dec
je
xchg
cmp
js
cwtl
pop
sbb
and
push
push
sar
pop
cmp
test
data16
jns
jle
gs
pop
mov
imul
push
lcall
pop
lds
add
push
adc
push
mov
iret
add
leave
arpl
sahf
jmp
jo
int
int
dec
mov
les
mov
dec
and
inc
icebp
jg
cmp
mov
adc
mov
psubusb
sbb
add
sub
ret
test
leave
mov
add
lea
pop
mov
ror
test
and
mov
dec
and
pushf
pop
imul
addr16
jnp
inc
push
add
nop
cmpsl
mov
aam
and
sbb
sub
scas
mov
push
imul
fldcw
into
xor
jae
rorl
sub
addr16
jmp
inc
jno
stos
popa
dec
pop
xor
subb
lret
push
test
pop
ss
inc
mov
push
fldenv
test
dec
inc
xor
cmp
imul
push
adc
test
xchg
rolb
popf
ss
and
xor
dec
or
push
jecxz
inc
in
xchg
pop
mov
ja
aad
dec
fdivs
add
cmp
pop
inc
inc
xor
sarl
mov
les
ret
adcb
ja
mov
mov
push
cmp
pcmpeqd
xchg
sar
mov
dec
imul
mov
test
add
mov
je
jmp
xchg
sub
push
mov
loop
sahf
out
pop
ja
mov
test
aaa
cmc
adc
int
ljmp
sub
int
roll
mov
jae
pop
xor
adc
mov
and
fidivs
xor
or
rcl
cmp
mov
sahf
mov
or
mov
outsb
and
clc
aam
adc
lret
repnz
or
add
jae,pn
mov
mov
xchg
sbb
pop
movsb
xchg
mov
jecxz
imul
push
jns
into
cmp
aam
and
sbb
pop
stos
loopne
sbbl
popa
roll
mov
int3
into
mov
inc
pop
xorl
insb
int3
add
adc
aad
push
mov
out
adc
xlat
or
rcrl
sub
int
scas
or
mov
add
fs
mov
sbb
push
mov
aaa
fsubrs
fcmovnb
xchg
jp
push
inc
jae
sub
popa
mov
test
cwtl
sub
mov
not
dec
stc
repnz
movsb
ret
js
xor
out
hlt
cmpsl
sub
shl
cmc
lret
int
pop
int
cmp
aam
push
or
mov
jecxz
mov
out
push
ficoms
fnstcw
ja
push
or
sbb
push
push
sub
out
mov
mov
fisubrs
cltd
pop
ljmp
repz
and
pop
std
jmp
imul
movsb
cltd
jbe
pop
fldt
and
in
cld
les
mov
sbb
ficompl
xchg
push
clc
daa
bound
sbb
push
or
sbb
xor
shll
ljmp
int
jnp
rcrb
scas
add
sub
jns
testl
jae
ret
mov
mov
je
cmpsb
ret
mov
out
pop
lods
push
mov
aam
js
mov
data16
or
addl
aas
push
xchg
lcall
insb
adc
jns
nop
dec
repnz
test
aad
call
ror
daa
int
push
mov
sbb
cmpb
add
inc
push
int
jmp
addr16
and
pop
xchg
push
in
rcll
stos
cmp
inc
jns
insb
fsts
jo
lea
pop
adc
into
sbbl
inc
pop
iret
and
jns
lods
rcrl
adc
push
xchg
add
ja
sbb
gs
fbstp
xchg
das
test
test
ljmp
pop
push
fnsaves
adc
mov
mov
pop
xlat
xchg
mov
mull
xor
mov
lods
aaa
add
inc
xor
mov
jno
mov
xchg
cmp
cmp
test
popf
jo
cltd
xchg
jbe
ja
daa
nop
clc
adc
add
mov
ss
mov
fsts
push
mov
mov
adc
pop
ds
mulb
inc
jae
in
into
sub
adc
mov
enter
test
mov
ret
cmpsb
lods
je
sbb
push
xchg
jae
push
shl
dec
jb
or
and
arpl
add
mov
jge
lcall
dec
stos
das
movsl
inc
pushf
loope
fildl
and
sbb
pop
cltd
mov
movsb
cmpl
stos
cs
ret
xor
jg
scas
hlt
popa
lds
xchg
adc
in
sahf
movsb
mov
xchg
loope
mov
mov
int
leave
enter
cli
pandn
cmc
inc
dec
mov
int
fidivs
pop
ret
sbb
sbb
and
sub
mov
daa
or
mov
push
stc
jp
jl
pop
dec
loopne
mov
push
add
mov
jae
sub
add
daa
clc
sbb
lods
push
mov
out
test
int3
and
pop
add
ret
jecxz
pop
mov
out
jmp
cltd
out
fildll
xchg
mov
scas
jbe
fs
iret
stos
gs
dec
sahf
in
inc
jle
loop
adc
pop
outsl
lret
pop
movsb
xchg
jp
push
sub
jae
push
xor
sub
fstpt
and
push
push
xor
lea
add
pop
xchg
pop
cwtl
imul
dec
bound
mov
clc
addb
sbb
sub
push
mov
andl
xor
lret
and
jl
in
in
xchg
movb
and
sub
push
sbb
dec
and
xchg
push
mov
in
ds
cmp
andb
test
repz
xor
rcrl
test
cmp
jmp
or
push
sbb
test
push
push
sbb
mov
std
cmpsl
pop
cmc
insb
adc
jo
stc
xchg
imul
pushf
cmpl
in
shlb
adc
cmc
movsl
pop
cltd
jg
sub
pop
jae
lret
cltd
adc
rcrb
aam
inc
lret
jne
xchg
or
xchg
je
adc
jbe
into
jle
adc
push
pop
scas
imul
push
out
loop
out
loopne
push
xchg
test
inc
xor
sub
stos
mov
push
dec
pop
cmp
shll
movsb
or
mov
arpl
jmp
loopne
pop
insb
sarl
arpl
inc
inc
sub
dec
cmc
pop
push
xchg
pop
scas
insb
jge
push
xchg
movsb
and
cltd
push
mov
adc
arpl
mov
repz
mov
iret
test
scas
imul
or
mov
mov
jecxz
fiaddl
test
xchg
jbe
jbe,pt
mov
xor
sti
mov
shl
pop
jl
enter
mov
jne
adc
cmc
or
adc
xor
push
push
cmp
mov
push
mov
xchg
imul
jae
xchg
jo
int3
mov
xchg
inc
inc
aaa
inc
mov
mov
cmpsl
sub
fmuls
sahf
jns
movsb
int
xlat
and
loope
nop
rcl
add
sub
adc
les
and
mov
jo
insl
movsl
lret
mov
jo
inc
stc
mov
test
stos
inc
jae
mull
fsubl
mov
mov
lods
push
aas
jecxz
mov
in
pop
aam
out
adc
je
adc
stos
mov
push
inc
mov
data16
fldl
mov
test
mov
mull
add
mov
cmovno
daa
push
jo
xchg
cmpsb
add
push
out
insb
aad
into
adc
call
sahf
mov
inc
mov
sub
jae
loop
stos
push
shlb
pop
mov
pop
imul
jg
ss
pop
pushf
xor
mov
jb
mov
add
and
ret
test
shlb
sbb
outsl
push
mov
adc
stos
or
pop
dec
jl
fdivs
push
lock
stc
popa
cmp
ja
sub
fstpt
lds
adc
xor
stos
pop
adc
jmp
mov
addr16
jnp
inc
mov
clc
mov
mov
mov
dec
cld
mov
or
aam
push
adc
push
jno
xorl
push
fldcw
jle
add
std
push
out
xchg
push
imul
icebp
and
jg
mov
scas
ja
pop
adc
sub
aas
mov
ljmp
hlt
movsb
mov
insb
insb
xchg
xchg
ret
jmp
cmp
mov
cmp
or
mov
cs
mov
push
cs
scas
outsb
mov
xor
arpl
mov
scas
pushl
jae
jp
cld
ss
ja
mov
push
mov
adc
int
adcb
cmp
pop
in
sahf
inc
test
mov
jae
push
sbb
push
cmp
arpl
mov
fxch
mov
lahf
add
lcall
pop
jae
xor
cmp
loopne
std
pop
fcoml
xchg
fstpt
dec
js
loope
aam
jb
jae
xor
mov
fmuls
repnz
add
add
mov
add
leave
push
mov
fdivr
imul
jge
add
leave
sbbb
out
repnz
pop
out
mov
jmp
jo
push
cld
push
repz
jle
stos
or
frstor
and
cli
xlat
jle
pop
imul
push
jecxz
mov
es
and
flds
jp
aaa
popf
inc
dec
mov
std
or
sbb
xchg
jno
sub
and
je
stos
push
addr16
aam
jmp
cmpsb
ret
jle
push
insb
xchg
mov
pop
xchg
icebp
int3
into
hlt
mov
pop
test
mov
shr
lcall
call
es
hlt
enter
aas
pop
push
fldenv
clc
inc
adc
outsl
dec
enter
and
mov
ss
lds
orb
shlb
mov
sub
sbb
fxch
sbb
or
std
pop
mov
push
xor
shll
insb
mov
mov
loope
sub
int
ret
inc
mov
push
imul
and
mov
out
and
ja
jmp
out
xchg
cmp
adc
xchg
jae
inc
mov
and
pop
push
jmp
or
nop
sbb
outsb
or
push
cmp
xchg
fstl
orb
aas
jbe
dec
test
out
inc
push
inc
arpl
out
inc
add
test
pop
ja
cltd
xchg
dec
pop
jns
cs
cmp
sbb
jns
imul
pop
aaa
xchg
aaa
xchg
mov
sub
lock
xchg
push
adc
mov
in
add
pop
shll
stos
cmp
xchg
sub
push
mov
outsb
mov
or
lods
mov
je
cmp
jbe
stos
mov
idivl
lods
and
scas
jo
ret
add
js
push
mov
mov
add
lock
or
cs
aas
imul
arpl
push
popf
outsl
add
aaa
adc
dec
xchg
mov
addr16
jbe
or
cwtl
inc
jl
mov
cwtl
adc
mov
sbb
ljmpw
cvtdq2ps
test
push
testb
mov
lods
arpl
adc
pusha
cmpsl
adcl
int3
or
jae
cmp
mov
lret
jl
add
ss
and
pushf
fdivrs
stos
pop
int
test
cmp
scas
inc
mov
stc
xchg
push
cmp
xchg
add
or
xchg
repnz
mov
jae
pop
jbe
sub
mov
adc
pop
push
jae
and
xor
pushf
ret
push
push
int
inc
out
cli
loopne
clc
outsb
jns
xchg
jb
pop
cmc
ds
call
addl
lret
add
imul
push
mov
enter
cli
pop
addl
jae
fst
lods
roll
imul
cmc
adcb
cs
mov
mov
repnz
sbbl
cltd
cmc
mov
daa
jae
pop
jbe
add
sbb
cmc
mov
in
test
hlt
add
lea
xlat
lods
ret
js
jne
notb
and
pushf
inc
mov
mov
jae
ds
gs
jmp
mov
mov
pop
xor
fidivrl
jg
stos
pushf
pop
decl
lods
test
cmp
mov
and
aaa
mov
out
shrl
pop
adcb
dec
jae
pop
loop
hlt
jle
cmc
adc
mov
xorb
pop
aam
inc
dec
scas
inc
and
push
jb
ja
dec
dec
pop
mov
sub
loope
mov
dec
lea
cwtl
cmp
jb
push
daa
mov
mov
imul
jae
push
test
ljmp
jmp
andb
cs
xor
add
adc
mov
insb
lret
xchg
add
js
sub
mov
push
add
insl
cmp
daa
ljmp
popa
mov
cwtl
mov
pusha
imul
sbb
jo
xor
mov
ja
les
test
mov
aam
jno
or
aam
xchg
scas
sub
movsl
rcr
aaa
push
ja
mov
jb
imul
mov
stos
mov
shlb
imul
stos
fadds
and
sub
mov
adc
cmp
loopne
nop
fcoml
xlat
mov
movsb
outsb
into
mov
ja
test
out
jo
aam
das
leave
cmp
aad
jae
movsl
or
shlb
frstor
adc
test
test
jge
push
int3
cwtl
imul
cmpsb
xchg
mov
addr16
int
testb
adc
sub
daa
es
ss
or
xchg
ja
pop
inc
cld
mov
mov
xchg
ret
shrl
adc
insb
repnz
fadds
into
fstp
lret
dec
push
push
scas
fisubrl
mov
mov
push
inc
inc
jl
sub
pusha
pusha
lret
ss
jae
cmpsb
lea
cmc
fsts
sar
xchg
xlat
mov
push
xchg
pop
and
jg
das
test
fucomp
xor
sub
mov
xor
dec
xor
loope
aas
imul
or
xor
rorb
das
sahf
scas
dec
cmc
pop
and
push
add
sub
jbe
push
lods
pop
mov
adc
pop
adc
jne
sub
ja
test
clc
push
mov
fildll
xlat
aaa
sub
sub
cltd
bswap
add
repnz
insb
cmp
jle
iret
lahf
mov
imul
lods
xor
ja
dec
aaa
rorl
adc
jbe
imul
insb
mov
ss
cmpl
inc
pushf
adc
mov
sbb
cmpsb
dec
xor
xor
dec
jecxz
call
popa
mov
shr
cwtl
outsb
cmp
and
and
mov
sbb
mov
push
xor
adc
jmp
leave
bound
andb
fistl
xchg
push
insl
xchg
jbe
add
xchg
fwait
and
cld
subl
add
je
jge
ficomps
mov
inc
push
insb
repz
sub
paddsw
mov
lea
and
xchg
fisubrl
mov
jo
out
stos
ja
loopne,pn
ss
fnstenv
lea
jno
jns
popf
add
les
in
add
scas
sbb
jae
pop
arpl
cwtl
repnz
imul
scas
bound
in
addr16
sbb
je
out
dec
push
dec
cmp
mov
pop
adc
mov
lods
shrb
pop
ds
into
test
dec
mull
int
push
mov
addb
fists
adc
xchg
in
imul
mov
adc
xor
and
xor
lret
jmp
sub
pop
jo
adc
mov
repz
mov
or
add
dec
stos
enter
cwtl
inc
scas
lret
jns
data16
popa
imul
rcll
cmp
cwtl
mov
ja
popf
test
jae
sub
adc
dec
and
dec
into
aad
aaa
sahf
xchg
jne
or
js
ljmp
lret
mov
push
ja
inc
pushf
dec
jge
movsl
jb
sbb
sbb
mov
mov
jae
sub
sahf
cmp
dec
fiaddl
aam
shlb
adc
xor
inc
fwait
sbb
or
mov
jne
ds
pop
in
int
fidivrl
pop
jae
pushw
or
mov
lods
mov
mov
rcll
dec
negb
arpl
fisubl
push
fnstenv
mov
mov
mov
jae
mov
push
imul
jge
inc
stos
scas
repnz
pop
fnstenv
jno
leave
adc
arpl
lock
mov
sub
dec
ds
pop
mov
cmp
jae
addb
adcl
push
lock
adc
stos
jne
sqrtps
negl
cmc
scas
mov
cltd
adc
push
in
dec
push
hlt
into
push
inc
push
adc
in
aad
in
and
pushf
inc
adc
jg
insl
pop
imul
cmp
mov
lds
cltd
movsl
ja
ljmp
cmp
jo
sbb
test
or
xchg
xchg
sbb
sbb
inc
pop
subps
arpl
push
xchg
jo
in
pop
xor
roll
jmp
outsb
out
iret
lods
jle
cltd
popf
je
jne
xor
xchg
pop
test
jne
and
mov
add
addb
jns
enter
aaa
test
mov
pop
adc
lahf
mov
ja
jmp
dec
es
daa
out
sti
jmp
std
jae
loop
movl
lods
sub
lds
cwtl
arpl
inc
xchg
mov
jne
mov
je
push
xor
mov
jbe
jecxz
push
inc
and
sbb
inc
mov
mov
cwtl
mov
in
int
lret
imul
push
je
pop
outsb
xchg
and
cmc
lea
jae
xchg
imul
add
xchg
mov
sbb
mov
add
dec
shr
arpl
jb
or
cmpsb
cli
xor
pop
pop
gs
stc
mov
test
repnz
jle
mov
cmc
fimuls
fdivl
adc
mov
negb
pop
mov
shl
mov
jmp
xchg
sbb
cmp
cmp
shrl
outsb
in
jns
inc
into
mov
mov
ja
dec
mov
sub
xchg
fistpl
lret
lret
xor
and
jle
ja
jmp
xor
int
jae
xor
jmp
inc
or
fildl
jp
jb
ja
fbstp
insb
daa
pop
testl
mov
jns
pusha
adc
xchg
and
ljmp
jae
sbb
pop
jne
pop
movsb
adc
or
pop
push
xchg
fsubrp
sbbl
cli
stc
imul
xor
lcall
jb
mov
outsb
rcrb
das
mov
daa
std
stos
dec
push
loope
sbb
inc
dec
scas
jnp
icebp
es
pop
loope
mov
jae
addr16
and
enter
push
mov
mov
add
mov
pop
rolb
xor
mov
ja
mov
adcl
xor
bound
fwait
jb
cmc
int
test
xorb
inc
xchg
sub
pop
add
xor
cmp
fdivs
dec
ffree
dec
sub
sbb
sbb
adc
out
xor
shrb
cmp
or
lcall
popf
inc
jl
repnz
push
pop
xor
test
insb
arpl
xor
push
push
inc
mov
jae
mov
adc
or
sbb
loopne
cs
pop
lcall
imul
xchg
and
and
jl
and
outsl
mov
dec
sub
pop
cmp
dec
cli
insl
xchg
mov
lcall
jae
sub
add
mov
push
and
mov
outsb
fwait
xchg
leave
popf
mov
cmp
mov
hlt
rcr
add
adc
sbb
mov
sub
xchg
mov
xor
cmc
stos
pop
jnp
ret
aam
in
int
mov
push
pop
sub
lret
lea
arpl
std
ljmp
test
imul
ret
push
dec
enter
les
popa
jo
fs
daa
inc
dec
pusha
adc
mov
pop
fs
adc
dec
mov
stos
ds
test
js
cmp
iret
movsl
cmpsb
xor
inc
mov
imul
adc
out
movsl
mov
movsb
mov
aam
adc
jbe
push
loope
lods
shrl
imul
lret
hlt
in
inc
mov
test
inc
dec
dec
xchg
cmp
jp
pushf
add
push
aad
mov
dec
das
stos
fprem1
ret
xchg
pop
scas
pop
shll
mov
lcall
mov
loop
xlat
lds
inc
adc
pushw
cmpsl
pop
fisttpll
mov
repz
ret
stc
jb
cld
mov
pop
push
adc
cmc
ficomps
iret
icebp
das
cli
adc
xchg
jae
fwait
mov
pop
pop
or
mov
xlat
xchg
subl
movsb
negl
mov
ja
int3
std
clc
sub
push
imul
fistl
sub
jecxz
add
adc
cmp
xlat
ja
sub
mov
push
adc
lret
pop
std
xchg
imul
and
hlt
loop
inc
jo
adc
adcl
xor
xchg
xlat
cmp
xchg
aam
out
pop
nop/reserved
out
xor
jl
mov
cli
add
jecxz
imul
pop
push
cmp
mov
pop
and
sbb
add
pop
xchg
add
xchg
inc
mov
shrb
aaa
pop
add
arpl
jmp
mov
iret
scas
repz
addl
das
loop,pt
or
insb
adc
imul
xor
xchg
ss
lods
out
mov
push
leave
mov
pushf
daa
jae
mov
cwtl
fs
sub
test
rcrb
sarl
push
loope
push
jne
adc
add
adc
in
inc
ror
xchg
scas
imul
cmpsl
int
mov
push
fimuls
sub
xor
and
or
addr16
outsb
mov
fbstp
sbb
pop
xorl
dec
clc
jmp
imul
sub
scas
hlt
pop
mov
pop
xor
in
dec
cltd
mov
xor
mov
push
push
pop
sti
lcall
sub
or
adc
rep
sub
in
dec
inc
or
insb
andl
lret
pop
fidivl
or
addr16
mov
movsl
jp
jae
lods
mov
and
sahf
insb
and
lea
cmp
lods
jns
mov
xor
mov
mov
inc
cli
dec
jb
xor
in
ret
test
faddl
cmp
ss
dec
mov
jl
es
test
mov
ja
adc
jo
aaa
push
jns
pop
mov
stc
mov
mov
lods
add
cwtl
mov
push
xor
jae
cli
xchg
xor
xchg
cmc
daa
subb
ret
and
add
aaa
jg
mov
inc
sub
decb
into
ja
mov
add
fcmove
add
loop
pop
stc
dec
jge
daa
pop
and
and
sbb
mov
pop
ja
imul
or
cwtl
je
cmp
data16
lret
jecxz
ljmp
fwait
cmp
mov
out
mov
dec
mov
fidivs
mov
test
or
sbb
js
xchg
mov
inc
in
test
mov
mov
xor
sti
cwtl
nop
nop
jae
push
sub
pop
xor
pop
or
sti
arpl
imulb
lds
popa
adc
cs
mov
out
aas
or
cmp
mov
sti
adc
push
pop
sub
push
shlb
shll
pop
mov
and
mov
add
lds
test
and
jb
push
lret
pop
or
fs
mov
xor
mov
arpl
xchg
adc
adc
js
xchg
pop
inc
ljmp
imul
adc
imul
es
pusha
sbb
lret
insb
sbb
pop
cli
fdivs
cli
adcl
adc
pop
adc
das
lret
pop
jle
test
repz
imul
in
adc
jl
jae
cli
xchg
cltd
xchg
dec
movl
inc
int
lret
popa
dec
jae
mov
iret
sub
pop
add
jmp
push
add
mov
sbb
push
or
pusha
test
jg
icebp
sahf
je
push
pop
enter
int
push
cmpsb
sub
push
add
push
outsb
pop
test
sub
push
mov
mov
jae
or
pusha
add
push
outsb
xchg
test
pop
push
cmp
dec
push
push
push
cmp
push
adc
ja
fnstcw
inc
mov
fiadds
ds
or
repz
ja
xchg
mov
jmp
dec
stos
pop
xchg
addr16
popa
sbbl
mov
xor
jno
dec
inc
stc
addr16
sarb
in
dec
into
mov
mov
mov
push
mov
or
xor
dec
std
subb
cmc
pop
inc
inc
dec
mov
and
pop
sarl
push
into
ds
or
shlb
mov
stos
ds
test
sbb
cmpsb
daa
push
xorb
jo
pop
mov
sbb
insb
std
cmpsb
imul
leave
mov
sbb
add
test
nop
lahf
add
push
lcall
cli
lock
pop
dec
hlt
imul
cmp
mov
je
push
adc
icebp
sbb
jo
fsubrl
addr16
gs
jmp
mov
insl
int
sahf
mov
imul
js
insl
movsb
mov
jae
pop
or
loopne
out
pop
jmp
pop
xor
cld
xor
mov
filds
stc
inc
je
nop
std
lret
push
xchg
adc
sub
loope
shl
lcall
leave
mov
ljmp
lock
aad
cmp
leave
or
inc
sbb
fidivrs
xor
shll
mov
jbe
lods
aad
adc
lods
inc
cmpsb
push
dec
mov
mov
xchg
cmp
call
inc
movsb
stos
ds
lret
nop
jge
insl
jecxz
pop
jge,pn
fistl
ds
sbb
and
sti
loop
add
dec
mov
pop
imul
repz
jecxz
pop
cmp
sbb
repnz
and
push
sub
scas
cmp
or
sub
insl
cli
call
out
xlat
push
mov
jo
adc
mov
xor
sub
pop
test
insb
pop
jle
cmc
and
imul
adc
sbb
pop
add
lds
sahf
push
cltd
cmpsl
jo
aaa
icebp
pop
stc
xor
out
insb
xor
mov
stos
out
mov
inc
stc
push
xor
popa
call
or
xor
in
cwtl
cmp
mov
aad
sub
jb
pop
pusha
out
mov
add
mov
imul
into
mov
cmpsb
xrstor
push
xor
jne
ja
mov
lret
or
jb
adc
mov
pop
in
fcmovne
insl
jae
hlt
push
push
cmc
test
movsb
push
pop
sub
cld
cmpsb
stc
aaa
xor
jecxz
cmp
mov
es
imul
xor
sub
dec
xchg
inc
or
xchg
xchg
cmp
mov
popa
scas
fsubs
jae
int3
loope
repz
mulb
fwait
test
mov
adc
sub
std
les
test
push
mov
lret
mov
sub
fsubl
out
or
mov
mov
mov
cmc
js
jmp
cmpsl
das
xorb
and
shll
stos
push
aaa
push
mov
push
imul
in
push
dec
into
jno
dec
mov
add
mov
lcall
xchg
insl
movsw
cmp
xor
scas
jae
or
rorl
es
fidivs
mov
xor
push
inc
cmp
mov
lret
loop
jns
lcall
lods
mov
movsb
in
inc
or
hlt
orb
xor
ja
cld
or
jae
inc
inc
push
hlt
jae
dec
shlb
fdivr
ret
in
lret
leave
xchg
xchg
sub
cmp
and
add
mov
jge
jg
pushf
jae
sub
call
jl
int
pushf
ds
fs
push
xchg
int
jo
jmp
mov
in
cmp
sub
es
orl
pop
adc
cmp
jmp
clc
dec
ja
les
sub
cwtl
loope
pop
dec
movsl
jmp
cmp
push
sahf
aaa
pusha
sub
jmp
ss
hlt
inc
mov
sub
pusha
pop
fbstp
shll
arpl
add
cmp
pop
popa
push
push
cmc
ret
divl
cmp
enter
ficomps
je
and
ss
out
sbb
cmpsb
cmp
and
scas
cli
push
dec
mov
sbb
jl
sub
jns
pop
cmp
mov
pop
add
jo
aaa
addr16
sub
jns
les
addr16
test
imul
xchg
mov
ret
call
pop
jle
and
jo
push
adc
xorb
adc
push
cmp
sbb
inc
fiadds
jle
cmp
fnstsw
mov
sub
sbb
stos
inc
sub
stos
jo
or
bound
test
xchg
cs
xor
lods
fwait
sbb
push
shll
inc
rorb
jl
fs
pop
xchg
mov
push
cltd
test
rcr
or
rorb
xchg
mov
imul
lock
xchg
movsl
ficoml
xor
ja
xchg
enter
stos
data16
mov
mov
add
sub
mov
jmp
jae
and
into
xchg
mov
stc
sti
outsb
out
or
lea
aad
loop
ljmp
stos
dec
call
xor
ficomps
sti
movb
lret
jle
jle
push
push
pop
test
negl
repnz
jae
mov
int
call
rcl
aaa
fdivs
sahf
xchg
aam
sbbb
test
pop
sub
arpl
inc
sar
lods
cltd
xor
repz
push
xor
cmc
dec
cwtl
repnz
int
mov
adcl
cmp
sti
cli
pop
repnz
aad
out
frstor
mov
sub
push
push
mov
pop
inc
cmpsb
std
push
and
adc
test
xchg
out
scas
stc
adc
movsb
jns
mov
jae
mov
xchg
test
dec
mov
pop
sbb
icebp
cmp
cs
cmp
jae
xchg
mov
mov
imul
and
dec
ret
stos
pop
mov
aaa
pop
push
ja
rcr
pop
cmc
mov
xor
push
mov
mov
mov
jns
lea
sahf
aam
stc
shrl
lods
arpl
inc
bswap
fsts
mov
xchg
sbb
inc
xor
ljmp
cmp
mov
push
cwtl
mov
mov
jb
imul
xor
jmp
mov
xchg
cmpsl
sahf
mov
shll
lds
cmp
sbb
repnz
pop
inc
std
and
xor
jne
enter
or
or
scas
subl
mov
add
je
dec
lcall
push
insb
add
mov
sub
sbb
std
pusha
cmp
pop
ds
mov
sbb
mov
ret
mov
jl
int
ja
in
jo
sub
and
dec
jne
ja
dec
decl
cltd
pop
mov
loopne
xchg
mov
adc
and
pushf
hlt
insb
ja
pusha
fyl2xp1
or
out
push
or
ret
ss
sti
mov
cmpsl
pop
mov
push
push
pop
sub
dec
mov
pusha
loope
xor
jp
loop
je
hlt
lods
xchg
adc
movsl
push
adc
mov
mov
mov
sbb
xchg
inc
add
loope
sub
and
inc
cmp
js
push
xchg
dec
inc
jg
shrb
lods
jae
push
inc
adc
setg
and
jae
repz
xchg
insb
sbb
scas
stc
or
in
jle
enter
je
add
cmpsb
cmp
add
fmuls
fwait
jno
pop
fldt
scas
rorl
shl
mov
mov
cwtl
xlat
mov
imul
jecxz
outsl
mov
and
shlb
pushf
sub
jl
jne
push
aaa
mov
add
cmp
xchg
sti
arpl
bound
xor
cltd
mov
or
xchg
push
imul
xlat
xchg
icebp
int3
mov
cmp
jp
in
mov
lods
mov
push
mov
es
inc
in
cmc
sbb
mov
xchg
and
ret
int
jbe
add
in
or
inc
pop
imul
cld
cmp
inc
jns
xchg
mov
lret
dec
jo
push
xchg
dec
mov
cwtl
mov
inc
push
xchg
mov
fwait
inc
hlt
add
pop
js
jns
fidivs
add
aad
pop
dec
dec
imul
adc
stos
jle
fstps
insl
and
xchg
je
fsubs
mov
out
aad
pusha
call
cltd
adc
mov
adc
mov
xor
mov
loope
testb
lret
das
xor
mov
or
iret
xor
fwait
pop
adc
cmpb
jge
push
mov
push
stos
mull
add
aaa
add
je
mov
in
rorb
mov
and
ss
imul
das
rol
xor
pusha
sti
push
cmp
mov
mov
fdivrl
mov
pop
push
lea
cs
and
jae
out
jp
aam
lcall
std
mov
ljmp
cmp
int3
js
pop
xchg
mov
cmp
cltd
pop
insb
xchg
cmp
fdivl
imul
out
int
aad
imul
fs
xor
and
jae
pop
cmp
cmp
push
xor
jb
fisttpl
frstor
out
sti
popa
jecxz
xchg
jmp
push
mov
in
in
ds
cwtl
dec
xchg
push
aam
pushf
shrl
jle
jle
pop
outsb
dec
jae
jg,pt
mov
pop
cltd
aaa
stos
out
rol
add
xchg
xor
popa
adc
inc
push
mov
mov
clc
repnz
pop
ja
mov
sub
imul
data16
xor
push
lods
xor
jne
mov
clc
mov
scas
mov
imul
sub
mov
jbe
cmp
pop
inc
add
dec
loop
test
cmp
jmp
push
adc
mov
or
dec
gs
iret
pop
cmp
xlat
adcl
imul
and
ss
stos
mov
shll
xchg
dec
dec
cmp
clc
cmp
xor
out
add
imull
xor
add
xchg
cwtd
repnz
jl
enter
push
push
adc
cli
enter
jle
repz
jno
jecxz
je
pop
ret
mov
sbb
shrl
andb
mov
cmc
in
mov
outsb
clc
push
in
and
and
in
shrl
test
daa
into
fidivs
mov
jae
jb
dec
adc
ja
mov
lret
mov
mov
adc
gs
bnd
mov
jns
cld
mov
inc
popf
sub
sbb
xlat
aam
xchg
das
and
or
es
pusha
nop
adc
xor
jae
pusha
push
js
xor
mov
jecxz
pushf
push
add
mov
shrl
cmp
cmp
or
aam
pop
ljmp
lret
out
add
xchg
cmpsb
add
imul
add
fwait
or
add
fimuls
cmp
and
inc
pop
imul
push
push
sub
mov
icebp
jle
shll
add
cmpsl
rep
xlat
pop
aad
dec
mov
jns
pop
js,pt
or
hlt
sbb
icebp
inc
sbb
mov
les
inc
les
jecxz
mov
das
jg
jecxz
and
jle
adc
mov
test
insl
mov
xchg
adc
imul
mov
push
lret
xor
ljmp
pop
cmc
inc
mov
lahf
sar
cmpsl
push
push
sbb
jmp
mov
jo
push
fisubrs
lahf
cmp
imul
sbb
jl
push
jl
push
and
imul
lret
sbb
mov
addr16
cltd
push
cmp
add
aas
push
lret
mov
sar
xchg
and
sbb
je
pop
adc
cmp
insl
jle
lea
leave
pop
pop
inc
pop
imul
mov
fldl
mov
push
sbb
jae
sbb
dec
dec
sbb
pushl
icebp
xor
mov
test
adc
cmp
or
xlat
push
aad
add
insb
movsb
rorb
jae,pn
inc
push
std
push
mov
adc
stc
inc
std
mov
lret
jo
inc
or
pushf
sub
data16
mov
rorl
cltd
dec
sub
aas
mov
xor
sahf
and
jle
fstps
mov
dec
loop
xchg
pop
mov
aad
fisttps
add
shl
aad
and
cmp
bound
and
sub
lea
bound
negl
cmp
test
push
fisubs
jmp
mov
add
pop
outsb
inc
xor
cmp
mov
sti
xchg
add
jl
pop
insb
mov
fldt
mov
or
fsubs
jne
sub
cmp
sub
and
fildll
xor
scas
insb
jno
lds
enter
jns
sub
repz
mov
rolb
jb
mov
iret
test
mov
xor
jnp
fisubrs
jbe
jae
push
sub
call
jle
in
popa
adc
xchg
mov
addr16
pop
adc
push
lock
imul
or
es
xchg
xchg
and
jno
mov
xchg
jno
fcoml
imul
or
stos
out
ficompl
fisttpl
sbb
xor
xor
nop
imul
add
int
push
jle
shll
pmulhw
clc
or
enter
push
push
test
out
loope
lret
mov
jecxz
add
out
pop
or
sbb
call
mov
ja
jo
lahf
int
push
inc
xchg
or
push
loope
xor
add
xchg
inc
adc
std
mov
jae
xchg
stc
mov
xchg
inc
push
adc
ret
dec
movsb
cmp
xor
mov
es
nop
es
ficompl
jno
adc
xor
cmp
test
mov
mov
mov
in
pusha
mov
add
fwait
push
addb
enter
or
inc
and
inc
in
scas
jle
mov
mov
leave
daa
push
aam
jl
pop
int
dec
fimuls
mov
adc
std
leave
push
out
push
jge
dec
jl
xlat
int
pusha
dec
mov
cmpsb
lds
pop
dec
push
jne
test
movsl
cmpsb
xor
and
sbb
mov
sub
sub
dec
cwtl
mov
test
imul
jbe
in
xor
test
xorb
sbb
imul
nop
das
in
daa
inc
push
imul
xor
push
and
cli
hlt
mov
pop
xor
mov
pushf
mov
bound
xchg
push
jle
fnstcw
and
cmp
push
imul
es
mov
mov
cmc
mov
dec
aaa
cmp
call
js
pop
inc
pop
push
fistl
nop
cmc
jbe
nop
sarl
or
xor
sbb
loopne
sahf
push
push
xorl
in
xor
lahf
inc
xchg
in
lods
dec
sub
push
mov
mov
adc
push
pop
and
mov
imul
and
xchg
es
push
ret
or
test
bound
jg
mov
inc
les
mov
jns
sbb
pop
insb
loop
decb
inc
in
sti
out
pop
fisubl
cmp
hlt
jae
sbb
cli
movsb
sti
cmpsb
sbb
aam
fidivs
insb
sti
cli
daa
mov
ljmp
mov
pusha
inc
lahf
adc
adc
cmp
mov
mov
mov
xlat
test
or
sbb
or
daa
lret
test
repnz
inc
cltd
push
sub
jno
inc
jne
push
xorl
and
enter
mov
adc
testl
pop
xor
arpl
rcrl
mov
bound
xchg
cltd
inc
fdivs
or
insb
pop
inc
insl
pop
and
lcall
sub
loop
dec
pusha
inc
mov
pop
cwtd
rcr
sub
or
test
daa
outsl
leave
sarl
mov
in
sub
sbb
sbb
xchg
inc
test
mov
into
pop
es
clc
jae
xlat
pop
int3
outsb
cmp
xlat
out
ds
std
pop
in
js
fnsave
jp
sub
fdivs
pop
push
repnz
ret
pushf
stos
repnz
push
and
dec
sbb
xchg
dec
lret
mov
mov
push
movsb
mov
pop
or
data16
adc
cltd
insl
mov
ja
push
ljmp
aam
mov
arpl
inc
scas
sbb
jecxz
ljmp
sbb
popa
pop
mov
and
mov
pop
icebp
cmpsl
roll
outsl
xchg
movsl
cwtl
adc
imul
les
iret
dec
movsl
insl
adc
push
stos
std
adc
xor
xchg
addr16
add
push
hlt
hlt
mov
adcl
imul
insb
test
lock
jo
mov
jmp
test
sti
pop
dec
dec
std
add
dec
sbbb
movsl
movsb
xchg
stc
cmp
addr16
inc
cmp
test
sti
mov
xor
js
fimuls
jp
jmp
scas
or
sub
into
in
rclb
inc
scas
sbb
ficomps
dec
sub
imul
insb
sti
sti
fisttps
in
pop
sbb
mov
addb
sub
mov
push
jg
ret
imul
out
andb
lret
mov
repnz
inc
outsl
xor
add
mov
xchg
fdivl
dec
mov
in
jae
stos
pop
fisubrs
pop
fdivrs
aaa
pop
incb
mov
les
cmp
sbb
imul
mov
cmp
shlb
add
mov
arpl
imul
cmp
mov
cmp
imul
rolb
aam
push
ss
inc
vdivps
add
and
pop
nop
ret
negb
xchg
cmpsb
add
in
insl
test
push
mov
jae
fiadds
repz
cwtl
and
enter
lret
ja
sub
out
xchg
push
adc
cmpsb
sahf
inc
jb
mov
dec
inc
inc
xor
mov
xor
mov
mov
cmpsb
xchg
push
imul
mov
sub
imul
jbe
jecxz
lds
jns
sub
push
mov
insb
xor
xor
lret
jecxz
add
adc
dec
int
cs
xor
sbb
test
mov
sbb
add
in
icebp
mov
sahf
aas
lret
scas
rorb
push
mov
fisubrs
pop
repz
add
lods
jp
out
out
outsb
hlt
test
lea
lock
adc
or
push
adc
pop
mov
clc
or
cmp
js
das
sub
xor
cmpsl
repnz
and
arpl
popf
ret
jmp
in
push
inc
sbb
out
test
out
adc
adc
dec
pop
dec
leave
mov
insb
mov
and
push
add
fs
lds
inc
stc
sti
mov
jns
idivb
mov
dec
and
jae
aad
pop
adc
or
sbb
xchg
mov
iret
adc
and
add
pusha
dec
arpl
nop
mov
jno
adc
negl
pop
sti
data16
inc
mov
push
fisubrs
and
xor
mov
not
adc
push
test
clc
cmc
and
outsl
ss
je
ds
cmc
divb
push
sahf
adc
push
pop
test
rorl
mov
pop
lods
popf
in
lret
lret
fwait
jl
sbb
div
cmc
insl
or
mov
dec
cmp
arpl
cmp
add
mov
test
dec
jmp
lock
sub
adcb
inc
sbb
shl
and
cmp
rcrl
enter
cmp
out
js
and
retw
iret
lods
or
mov
mov
out
or
pop
xchg
inc
push
and
mov
add
push
lret
scas
xchg
xchg
ljmp
xlat
xchg
js
dec
leave
insb
inc
ret
jae
test
sbb
push
sub
outsl
sbb
test
test
and
dec
mov
out
sbb
dec
lea
setnp
pushf
mov
or
repnz
pop
gs
outsb
mov
sbb
pop
and
xchg
les
mov
shrl
pusha
loop
cwtl
ss
imul
push
roll
adc
fs
add
dec
cmp
clc
into
outsb
inc
adc
les
mov
out
rorl
mov
icebp
xlat
mov
mov
std
fisubs
cmp
sbb
cmp
insb
jle
ljmp
rcrl
test
fmulp
arpl
leave
mov
je
into
inc
in
and
sbb
movsb
sub
xor
inc
cmp
popf
mov
push
popa
mov
push
repnz
mov
mov
mov
and
testb
jo
sub
mov
std
and
insb
push
nopl
jno
cmc
popa
and
movsl
pop
shll
in
push
movsl
sbb
jl
stos
add
arpl
push
jae
mov
push
dec
int
data16
inc
pushf
jb
and
fnstsw
repz
cmc
lea
ljmp
push
ljmp
jne
add
fisttpl
bound
mov
lahf
js
ja
dec
sbb
lret
out
jbe
jp
push
lcall
cmpsb
enter
inc
addr16
loope
movd
sub
out
or
or
out
ljmp
and
add
mov
inc
aam
adc
fwait
cmp
jae
gs
lret
sbb
js
ja
mov
andb
inc
jae
je
mov
mov
add
push
xor
int
lods
xchg
xlat
jne
outsb
scas
aas
add
movsl
mov
imul
loop
jae
mov
insl
xchg
adc
cmc
pop
insb
xlat
lock
cwtl
cmp
mov
call
pop
jmp
adc
xor
lea
pushf
add
jne
cmp
add
jmp
stc
fcom
imul
ret
cli
stc
push
scas
gs
movsl
enter
jl
xchg
stc
loope
xor
mov
repnz
adc
outsw
push
sub
mov
xchg
divl
mov
ja
fadds
cwtl
jbe
ficoms
fcompl
pop
lock
jge
js
jl
shrl
mov
jge
cmp
cmp
fisttpl
adc
sub
xchg
xor
fwait
pushf
pushf
out
in
sub
cli
scas
rolb
and
ret
sahf
aam
add
dec
dec
cmp
or
loopne
pop
mov
cwtl
xor
lds
jno
in
cmc
inc
test
lcall
or
xchg
cmc
mov
test
or
mov
or
loop
out
push
cs
lock
negl
repnz
fsubrs
xchg
mov
jle
test
inc
dec
mov
mov
arpl
into
rclb
push
xchg
inc
sbb
mov
sub
and
cli
mov
in
pop
adc
inc
rolb
adc
dec
mov
sti
xor
imul
lret
imul
js
pop
adc
into
xchg
cmp
xor
stc
push
in
add
mov
nop
inc
lea
and
aaa
mov
sbb
cwtl
cmpsb
mov
imul
sti
push
xchg
mov
jmp
xor
push
pop
rcrl
inc
cs
sti
sbb
aad
ret
jae
mov
fimuls
mov
test
or
inc
sbb
mov
adc
sbb
inc
pop
jmp
adc
aam
imul
cltd
gs
daa
sbb
xor
sbb
and
add
mov
sbb
shrb
aaa
pop
test
xchg
rcrl
cmp
je
popa
mov
pusha
dec
sub
cmp
leave
sti
or
xchg
mov
pop
lret
shll
out
cmpb
sbb
adc
sbbb
xchg
int
out
mov
aam
xlat
jo
mov
jg
xchg
sbb
ds
xchg
xchg
rolb
js
add
lods
inc
sbb
mov
jns
jge
mov
xor
pop
push
cwtl
pop
mov
or
shlb
inc
es
aaa
scas
std
pop
xchg
arpl
inc
insb
cmpsb
addr16
insb
popl
mov
pop
imul
adc
cmp
ja
jl
cltd
inc
aam
int3
adc
sbb
push
jo
pop
or
jns
jne
imul
xchg
lds
ss
jge
or
shlb
stos
hlt
cli
and
scas
xor
xchg
adc
and
adc
or
leave
test
je
cltd
mov
sbb
push
es
xor
push
test
jne
stos
popa
movsb
les
sahf
and
or
test
pop
push
mov
imul
enter
xchg
adc
repnz
shll
in
orb
pop
or
icebp
insb
lods
out
inc
pop
xchg
pop
outsl
jg
imul
int
outsb
rcrb
dec
push
dec
jns
enter
pusha
cli
lretw
movsl
push
inc
jecxz
adc
imul
mov
leave
jb
std
scas
jae
insb
push
mov
dec
add
inc
jle
adc
in
xchg
push
les
pop
clc
fldcw
push
mov
adc
notb
mov
jl
mov
jecxz
push
rclb
pusha
cwtl
mov
cs
push
adc
sti
stc
clc
adc
pop
je
and
mov
out
mov
inc
repz
movsb
dec
jle
fldl
xor
imul
add
out
add
push
jae,pn
clc
imul
mov
cmpsb
test
pop
call
mov
outsb
out
mov
test
in
jp
lret
mov
jns
jae
lds
sub
ficompl
or
clc
and
icebp
xchg
pushf
xchg
jb
add
lods
imul
sbb
pop
std
mov
sbb
pop
mov
ss
insb
imul
xchg
add
mov
les
cmc
in
and
lods
mov
add
sahf
cmc
adc
inc
mov
add
rcrb
dec
push
sub
sub
rcll
inc
ja
sub
sahf
xchg
imul
mov
jae
push
insl
ds
imul
pop
mov
mov
xchg
sbb
sbb
inc
cmpsb
ret
into
xor
lock
cmp
int
aaa
aad
lcall
jecxz
push
in
aaa
outsl
push
jae
fbstp
jo
xchg
xchg
lock
jg
mov
or
jo
jl
sbb
pop
xor
jns
data16
mov
sbb
scas
aam
push
popa
or
lods
int
cld
loopne
or
jle
mov
ja
mov
mov
mov
mov
bound
lahf
mov
fadds
adc
test
sbbb
lds
cmc
std
jne
imul
stos
and
call
dec
outsb
mov
xchg
loopne
shll
call
mov
lock
mov
subb
push
push
test
sbb
fstpl
scas
push
out
push
loop
fistl
cld
mov
mov
mov
icebp
rcl
fdivrs
sbb
in
mov
out
stc
xor
jae
nop
stos
mov
sbb
or
sbb
mov
mov
xorl
mov
ljmp
dec
imul
loop
xor
imul
incl
cmpsl
push
mov
hlt
ror
push
test
pop
mov
inc
inc
sbb
lret
ja
test
pop
sbb
in
arpl
outsl
js
into
adc
fidivs
sahf
ja
xchg
repnz
jae
shrl
pop
sbb
sub
mov
gs
dec
jo
dec
shll
mov
mov
mov
mov
je
fnstcw
aam
out
lock
mov
cmp
ljmp
pop
aam
sub
push
cmpsb
movsb
call
rcl
daa
icebp
xor
stos
jo
xchg
fsubs
or
push
shlb
pop
mov
mov
out
pop
push
inc
sbb
aam
js
push
je
xchg
add
fstpt
sub
in
pop
movsb
dec
scas
jae
pop
mov
pop
pop
jb
xchg
mov
mov
sbb
adc
add
cmp
jae
dec
pop
ss
into
sbb
lret
das
and
mov
icebp
sub
aam
sub
xor
dec
shrl
pusha
les
aad
mov
inc
je
imul
pop
aaa
data16
xchg
sbb
mov
das
loope
cltd
mov
sti
adc
xor
mov
mov
jns
inc
xor
shrl
daa
push
add
dec
lods
sbb
pop
mov
jle
in
jnp
sub
jo
gs
xlat
jl
pop
pop
call
sub
dec
push
lds
in
mov
adc
subl
sbb
gs
mov
mov
fisttpll
mov
cmp
mov
gs
adc
scas
ficompl
adcb
leave
daa
movsb
xor
ret
xlat
dec
jns
jo
mov
cmc
mov
cli
in
cli
pop
outsb
movsb
out
test
mov
add
mov
mov
imul
ljmp
stc
cmp
fwait
in
pop
xor
shlb
push
inc
pushf
mov
push
dec
sarl
inc
pop
cmp
pop
pop
jne
loopne
inc
imul
dec
clc
xlat
pop
jne
fcomps
sbb
rolb
cmc
pushf
arpl
jae
repz
imul
fcmove
lahf
hlt
mov
and
outsl
clc
addr16
mov
adc
xorb
int3
jno
dec
shll
jge
lcall
push
or
and
iret
lcall
das
jae
and
mov
jle
aam
cwtl
data16
sbb
insb
sub
popa
jne
test
divb
test
pop
ror
call
in
or
cli
mov
jle,pt
ror
movsb
lods
rol
and
ds
inc
cmp
cmp
enter
push
pop
insb
adc
sbb
pop
sub
mov
daa
repz
shr
aaa
bound
or
cmp
cmp
dec
add
xchg
adc
xchg
xchg
inc
or
loopne
and
ret
dec
das
mov
out
movsb
sub
xor
push
fbstp
inc
push
movsl
jo
cmp
mov
add
jo
adc
aam
aad
mov
dec
ss
js
mov
jl
xor
into
arpl
shlb
into
das
fdivr
adc
je
jle
jae
lea
push
outsl
inc
add
inc
mov
ljmp
std
mov
into
pushf
mov
aam
test
push
sub
js
lret
pusha
sub
sbb
pop
cmp
imul
jno
lret
cld
xchg
stos
xchg
inc
cmp
int3
mov
lods
cmpsl
ds
and
sahf
movsl
mov
xchg
jbe
ja
xlat
enter
rep
gs
dec
pushf
push
cmp
pop
movsl
outsl
pop
gs
ja
jmp
mov
int
movhps
xchg
jle
sub
and
xor
imul
out
jb
jae
ret
sarb
or
cwtl
das
push
lods
jae
pop
xor
cmpsl
jmp
subl
dec
lret
xor
dec
or
fs
mov
pop
roll
rolb
mov
xchg
and
mov
sub
inc
mulb
ret
mov
pop
sti
and
pop
es
jb
jns
jge
xor
orb
jae
sahf
sub
adc
pop
jo
insb
pop
mov
mov
lock
pop
mov
or
gs
and
stos
aaa
cmp
sub
outsl
or
lock
les
sbb
mov
popf
into
mov
test
push
jmp
icebp
test
lods
gs
imul
xor
or
mov
in
and
loope
cmp
cwtl
cmp
adc
ret
stc
push
pop
cmc
scas
push
ljmp
mov
les
jnp
adc
mov
test
fldt
dec
inc
mov
stc
cli
clc
pop
outsl
rep
ret
test
shl
pop
movsl
inc
or
mov
pop
ret
mov
mov
sbb
adc
mov
insb
push
test
fadds
call
pop
sub
mov
jecxz
mov
add
nop
push
daa
sub
ja
lahf
enter
mov
xor
add
and
jge
ljmp
in
es
lret
mov
clc
add
sub
inc
mov
je
scas
iret
pop
add
arpl
cmpsl
mov
adc
pushf
lret
sbb
or
add
dec
ja
jmp
cmp
xor
xor
adc
adc
rclb
mov
jmp
ror
cwtl
pop
lahf
mov
jl
enter
add
aaa
mov
ljmp
add
mov
test
sub
sbb
xchg
xchg
fldl
pop
mov
inc
aad
int
pop
mov
and
test
or
push
mov
mov
add
lds
cltd
mov
sub
mov
mov
add
in
jl
rorb
sbb
mov
push
push
push
sbb
or
shlb
addb
repz
push
xor
jae
popa
loope
rorl
inc
inc
gs
push
jmp
mov
icebp
sbb
insb
dec
pop
xor
clc
mov
mov
sub
or
jl
and
fucom
and
les
call
sahf
or
dec
in
cmpsl
or
mov
mov
push
inc
popa
lret
adc
inc
mov
sbb
or
and
popl
push
xchg
repnz
mov
scas
cmp
push
ret
ret
push
aaa
jmp
dec
fstps
cld
in
imul
mov
bound
stos
jl
xchg
ja
or
sub
xor
mov
cs
lret
push
sbb
aas
js
add
insb
jp
mov
ret
loope
inc
lea
mov
addb
add
mov
nop
mov
xchg
repz
movsl
lret
in
out
dec
inc
cwtl
pusha
lret
fdivl
hlt
jl
mov
jg
movsl
xor
xor
or
repz
ret
dec
out
xchg
jo
push
lds
jae
fs
inc
sahf
xchg
pop
je
ja
sub
xor
mov
mov
ja
push
std
mov
aaa
mov
jae
jne
jno
and
mov
imul
ror
mov
add
dec
pushf
loopne
lods
ret
je
int3
adc
push
jl
jno
test
mov
js
insb
lret
add
push
mov
fistpl
imul
dec
and
jae
mov
mov
adc
xchg
jne
es
fs
xchg
out
pop
js
and
fcmovu
sarl
inc
mov
jecxz
clc
hlt
jb
mov
outsl
pop
inc
sbb
std
pusha
cmp
add
or
pop
add
test
sbb
mov
outsb
mov
movl
xor
xchg
outsl
movd
inc
inc
shll
cltd
not
ljmp
test
bound
adc
je
pop
adc
sub
lods
out
lea
vpackssdw
movsl
pop
leave
stos
or
dec
add
mov
cltd
adc
arpl
call
adc
jae
subb
xor
loope
pusha
pop
mov
js
mov
xchg
data16
xor
cmp
mov
cmp
jo
mov
cmp
sbb
iret
mov
icebp
push
in
xor
jno
mov
xor
adc
add
scas
adc
cmp
jae
daa
jecxz
popa
cmp
mov
fcmovnbe
dec
jne
movsl
sub
jbe
insb
or
lahf
mov
cmp
daa
lret
or
adc
push
push
cmpb
sbb
cmpsb
les
movsl
adc
xlat
in
test
jo
xor
dec
inc
wrmsr
mov
test
lods
push
xchg
jns
sbbb
ja
inc
mov
adc
inc
pop
mov
addr16
movsl
sahf
cmp
mov
mov
arpl
pop
mov
xchg
jmp
movsl
inc
pop
insb
xchg
loope
sub
es
inc
inc
fwait
adc
jge
imul
sub
mov
xchg
mov
jnp
fmul
jb
lea
or
shlb
mov
xchg
sub
mov
lcall
scas
adc
fcmove
adc
aam
enter
lahf
inc
lock
loopne
dec
in
fstps
or
add
popa
add
imul
mov
jbe
mov
iret
mov
xor
cs
push
jae
and
addr16
dec
jne
mov
fstl
out
inc
push
imul
cmc
add
sbb
mov
test
lds
xchg
adc
push
fs
adc
aad
inc
aam
mov
js
pop
mov
xchg
mov
jl
test
pop
divb
pop
call
aad
push
jmp
mov
lret
test
cltd
sub
inc
and
add
sub
fnstenv
ja
ror
fisubrs
mov
nop
movsb
mov
enter
add
movsb
test
pop
or
push
sbb
and
outsb
jl
xor
loope
dec
test
aaa
popa
neg
xchg
test
out
in
cmp
xor
imul
loope
dec
scas
xchg
push
fs
push
jno
cmc
pop
aam
jae
cmp
inc
xor
xchg
pop
popa
lret
adc
pop
xor
push
clc
cmp
jnp
nop
sti
cld
test
add
sub
lret
lods
add
inc
pop
mov
jl
jmp
rorl
outsl
repz
lcall
repz
mov
cmp
cli
pop
cli
pop
sti
movsl
das
xor
mov
ja
mov
and
stos
in
inc
add
xor
mov
inc
xchg
inc
sub
mov
adcb
jb
cmpsl
repnz
pop
loopne
mov
jle
insb
sub
testb
inc
js
adc
pop
int3
ja
ret
hlt
fidivl
mov
jbe
int3
adcb
jmp
mov
adc
mov
sub
adc
inc
sbb
mov
mov
movsl
cmp
pop
xor
mov
mov
or
sbb
xchg
xor
sub
add
jg
mov
inc
iret
test
mov
ret
jbe
andb
sbb
fimuls
test
jno
push
imul
gs
imul
jle
mov
pop
je
pop
ljmp
lret
shlb
adc
ss
push
inc
mov
adc
mov
mov
cmp
jae
xchg
jb
dec
in
mov
mov
lods
mov
addr16
int
jno
and
adc
mov
jae
push
fimuls
bound
push
mov
nop
daa
push
xor
push
sbb
test
das
xlat
adc
aad
int
mov
adcb
pop
cld
lea
fwait
call
pop
inc
jbe
sub
add
scas
ljmp
addr16
into
mov
lds
jns
imul
shlb
push
ja
movsl
out
fadd
aaa
pop
jae
lcall
fidivrl
repz
movsl
mov
pop
es
jg
xchg
ja
sub
push
imul
rcrb
loope
pop
adc
mov
xor
aam
scas
fidivrs
movsb
arpl
push
mov
out
out
into
lods
into
scas
cmp
push
pop
imul
adc
jne
movsl
sub
cmp
pop
push
sbb
cmp
push
mov
dec
into
out
mov
xchg
outsl
enter
repz
and
pop
xchg
sbb
adc
mov
mov
adc
xlat
mov
push
or
mov
add
fdivrp
mov
inc
jno
rcl
insb
imul
shrl
fldl
mov
mov
and
cmc
icebp
mov
add
decb
xor
lcall
adc
mov
add
stos
lahf
cld
sub
mov
call
dec
mov
adc
xchg
out
ret
adc
in
jmp
pusha
lcall
outsb
mov
sbb
adcb
inc
push
test
out
js
cmpsl
nop
adc
pop
mov
jb
push
in
ret
xor
mov
adc
movsb
dec
push
cmp
xor
pop
out
inc
cmc
dec
in
clc
hlt
daa
outsb
ja
mov
sub
add
ret
sbb
and
loop
mov
dec
sub
call
stos
inc
js
mov
test
pop
mov
stos
mov
enter
lcall
push
fistpl
arpl
mov
pusha
neg
pop
test
jp
or
shlb
cmp
ud1
mov
inc
movsb
test
push
stos
test
stos
xchg
xor
mov
jae
ss
cmp
stos
lcall
pop
xor
stos
imul
mov
pop
jmp
addl
xlat
fidivs
lock
add
or
mov
xchg
xchg
cs
in
mov
jo
push
cmp
cmp
ja
call
push
lds
scas
mov
mov
inc
push
stc
loop
data16
mov
dec
add
call
sub
add
inc
and
movsl
arpl
insb
push
add
stos
push
stc
popf
jmp
test
pop
push
xor
push
cmp
adc
fs
arpl
cltd
xchg
pop
mov
mov
mov
dec
test
mov
aam
jae
fstl
jl
add
sarl
and
mov
repz
pop
inc
dec
mov
sub
pop
rorb
mov
jge
testb
pop
loop
ja
or
mov
in
shlb
and
fisubrl
inc
and
jmp
imul
jno
mov
cmp
mov
into
sarb
pop
imul
dec
ret
mov
dec
lods
lea
and
jle
scas
int
mov
cmp
push
iret
into
mov
mov
imul
movb
lcall
sub
aaa
ret
shlb
sbb
cmp
mov
fwait
push
cmp
inc
les
fldl
jbe
sahf
clc
inc
push
inc
mov
in
jecxz
es
mov
pop
jae
pushf
pop
ret
mov
xchg
cmp
ss
outsl
mov
cwtl
inc
sub
dec
mov
dec
mov
mov
test
mov
push
stos
xchg
scas
mov
and
lcall
in
lea
das
je
int
and
enter
sbb
push
enter
push
add
xchg
pop
pop
pop
push
cli
pop
mov
xor
cmc
jb
dec
push
dec
stc
xchg
or
lods
pop
push
mov
push
imull
ret
test
pushf
scas
rol
cmp
mov
cmp
inc
jge
negb
mov
push
out
loope
sbb
mov
xor
pop
jnp
ret
mov
mov
cmpsb
jg
into
ss
mov
xchg
adc
push
mov
xor
aaa
leave
mov
sbb
mov
adc
dec
cmpsb
lret
adc
or
add
movl
adc
pusha
imul
or
sub
fs
cs
add
out
aaa
iret
mov
clc
aaa
pop
outsl
sub
test
movsb
js
lahf
ss
xchg
in
sub
cli
test
jae
ja
mov
repnz
sub
xchg
jle
sub
fstpt
shrb
xorb
xchg
mov
and
stos
scas
sub
mov
ficoms
pop
cli
push
xor
in
push
faddl
and
mov
or
loop
xor
cmp
cmp
in
stos
aam
mov
loop
mov
mov
sub
pop
je
cmp
in
push
pop
mov
mov
outsw
sbb
inc
lahf
lock
push
xor
mov
shr
sub
dec
aas
test
xchg
cli
jecxz
sbb
push
and
push
insl
sarb
adc
ret
imul
dec
jo
out
cmp
loop
push
xchg
div
mov
xor
xchg
movb
ret
xor
cmp
sbb
cli
lds
sub
and
xchg
jle
mov
push
inc
mov
pushf
mov
shlb
scas
pop
lods
mov
arpl
outsb
mov
mov
lret
jl
sti
es
cs
iret
add
mov
dec
lcall
inc
xchg
filds
pop
dec
stos
std
xchg
jno
add
cmp
jp
hlt
les
aam
fwait
outsb
pop
mov
inc
mov
mov
scas
in
inc
sbb
cli
fstps
ljmp
cwtl
mov
xor
jmp
xor
aaa
cmp
xor
add
in
lock
add
gs
dec
ds
int
outsl
sbb
inc
lods
adc
ss
and
loop
imul
dec
xorl
xchg
stos
je
sahf
push
movsb
adcl
outsb
and
jae
cld
mov
xchg
test
ja
and
fwait
imul
stc
lea
int3
jp
arpl
dec
in
and
aad
dec
ja
je
sbb
cmc
pop
cwtl
jbe
scas
arpl
pop
js
in
imul
mov
mov
fsubrs
imul
push
xchg
cmc
aam
je
mov
push
xchg
int
test
xchg
in
mov
mov
lds
xor
inc
adc
add
mov
stc
xchg
je
out
xchg
dec
movsl
dec
jb
jo
aas
rcll
scas
aam
cmpl
push
fisubrl
xchg
xchg
imul
mov
stc
xchg
xchg
ja
test
lods
les
imul
xor
insb
lret
jl
addr16
xchg
inc
mov
imul
mov
ds
mov
mov
mov
movsl
pop
jns
jno
fs
fisttps
test
test
popf
stc
xor
mov
negl
cmp
adcl
xchg
mov
jae
aaa
div
pop
dec
int3
inc
lea
mov
jbe
or
xchg
in
sbb
cmc
es
push
jle
test
jl
cmp
dec
test
jle
or
fbld
stc
bsf
sub
push
and
int3
adc
popf
jbe
adc
push
mov
add
mov
push
ja
sub
inc
sub
ja
lds
repz
movsl
inc
adc
push
sbb
jae
iret
jge
jns
mov
xchg
hlt
lock
fbstp
mov
dec
ljmp
cmp
pushf
ss
ljmp
clc
jae
repnz
jnp
not
pop
stos
sbb
mov
outsb
mov
jns
cmpsl
xchg
cs
lret
xor
xor
add
pop
sbb
xlat
adc
and
fwait
test
clc
mov
cmc
mov
jge
lods
sbb
sub
add
cld
lcall
enter
ret
es
mov
sbb
lcall
push
xchg
pusha
mov
mov
in
pop
imul
or
inc
jecxz
and
mov
xchg
jp
stc
icebp
mov
jae
mov
or
and
imul
inc
movsb
cmp
mov
int3
std
mov
mov
out
and
aam
hlt
dec
int3
mov
xor
mov
negb
cli
jae
in
loopne
bound
mov
fstpt
push
scas
inc
jae
ss
insb
sti
rclb
sub
jns
sub
int
out
in
pop
rcl
outsb
mov
xor
sub
cmp
mov
push
sbb
js
xchg
mov
mov
or
mov
jecxz
fsubrl
sti
and
stos
stc
mov
adc
jb
lret
out
push
xchg
fnstcw
add
sub
jo
imulb
sti
sub
icebp
stc
pop
jae
daa
inc
cmc
inc
fidivrl
mov
adc
jo
mov
mov
lods
adc
adc
ret
and
sub
sti
lcall
and
rcrb
ja
or
jb
test
xchg
adc
call
outsl
inc
mov
lods
dec
addr16
xchg
and
aas
or
aaa
pop
jecxz
dec
jae
imul
test
jae
xor
icebp
das
in
js
and
sbb
sti
outsl
jecxz
pop
jecxz
ret
sub
imul
fnstenv
dec
into
xchg
mov
test
push
js
std
out
or
cmpsb
imul
mov
mulb
pusha
xchg
mov
pop
in
loop
aaa
cmp
mov
ds
mov
xor
pop
xor
lods
mov
aaa
std
test
je
and
in
or
add
mov
sub
popf
imul
cmovb
sub
mov
inc
mov
rorb
imul
xchg
int3
xor
push
ret
mov
sub
pop
adc
and
push
std
mov
inc
and
inc
push
dec
sub
pop
mov
mov
push
and
add
xor
and
stc
mov
mov
ss
push
and
pushf
cs
loope
rolb
xchg
negl
jne
shrl
mov
movsb
mov
jbe
xchg
int
std
arpl
fldenv
mov
subl
add
sub
cltd
inc
cltd
jl
aas
mov
aaa
bound
xorb
pop
jae
lret
jbe
jl
xor
in
jmp
cmpsb
imul
scas
aam
add
ljmp
dec
lcall
in
adc
sbb
iret
cmp
and
bound
adc
inc
outsb
sub
cmpsb
into
lcall
ja
mov
dec
sahf
dec
jae,pn
mov
test
ret
sub
iret
ljmp
jns
out
fwait
sahf
cwtl
xlat
and
fidivs
and
mov
push
fcoms
xchg
pop
push
insb
push
mov
rcll
imul
aad
ret
out
cmc
inc
cmpsw
sbb
jecxz
cmc
or
int
ss
pop
xchg
adc
outsb
cmp
lahf
ror
jmp
daa
aaa
int3
das
imul
pop
push
fdivr
sub
sbb
lods
stos
je
jnp
test
mov
es
pop
test
stos
shlb
int
and
out
jae
pop
sbb
cs
push
pusha
sbb
xor
pop
pop
xchg
mov
bound
repnz
iret
jae
pop
mov
add
sti
jle
ja
fs
addl
jae
sarb
clc
fwait
pop
cmc
and
or
lcall
aaa
in
xchg
and
mov
cmp
cwtl
popf
lods
push
mov
insl
scas
popa
aad
cwtl
or
lahf
and
sub
mov
and
testl
mov
out
push
insb
mov
aaa
movsl
mov
push
ret
jae
dec
mov
xchg
daa
add
pop
jne
inc
pop
push
ss
daa
mov
scas
inc
repz
cmp
xor
movsl
jae
xor
sub
stos
jge
out
inc
imul
pop
es
cltd
sbb
shl
mov
into
and
or
imul
push
popa
cmp
mov
push
ss
jecxz
add
xor
push
xor
cmp
jae
pop
rcr
int3
fnstsw
repz
jb
sub
or
aad
add
inc
sbb
enter
add
test
sub
imul
jp
rcrl
mov
lea
mov
mov
cwtl
jbe
and
pop
sub
in
inc
jne
cmp
pop
arpl
fldt
stos
aad
pop
test
push
ja
push
pushf
jns
add
mov
sub
xchg
hlt
out
mov
mov
dec
in
xor
adc
lods
ret
lahf
sub
push
xor
add
jle
fdivs
and
ljmp
cs
xchg
cmpl
bound
fdiv
and
sub
and
out
jbe
mov
xor
mov
jmp
and
enter
ljmp
fsubr
mov
ss
cwtl
sbb
adc
test
imul
mov
lds
inc
xchg
outsl
add
imul
repz
imul
nop
dec
push
cmp
mov
movsl
outsb
lret
hlt
xchg
sahf
pop
pusha
insb
jmp
fs
das
ret
sub
imul
inc
repz
fdivl
pop
mov
outsb
cmc
dec
jae
scas
pusha
dec
xchg
into
jb
fdivr
imul
sub
mov
ret
adc
xchg
test
outsb
dec
repnz
adc
cltd
das
lret
ret
jmp
inc
inc
into
in
fimuls
jge
jg
xchg
mov
dec
mov
mov
sbb
and
mov
pop
aam
pop
dec
jle
out
cbtw
dec
jns
cmpsb
sub
fisubl
push
out
mov
mov
mov
int
xchg
push
mov
pop
cmp
xor
adc
or
push
mov
in
stc
dec
jmp
add
lret
push
pop
push
iret
jp
mov
xchg
mov
clc
dec
dec
lock
push
mov
adc
out
add
sbb
fsubrs
mov
adc
and
xchg
cmp
dec
aad
int3
xor
scas
rcrb
cmp
cmp
ret
add
imul
cs
js
test
add
sti
cmpsb
fidivs
cs
shll
adc
pop
push
popf
ds
and
sbb
into
pop
adc
push
sbb
inc
mov
fsubp
push
pusha
ja
push
sub
xor
push
outsb
mov
xor
cmc
jge
sbb
mov
jmp
xchg
dec
mov
lcall
push
mov
jp
pusha
punpckhbw
push
jo
ljmp
hlt
imul
pop
mov
scas
pop
out
add
or
push
lods
inc
popf
int3
xchg
jmp
inc
dec
ret
adc
pushl
jle
mov
cmp
popw
mov
lcall
ss
int3
jmp
adc
js
jmp
adc
cs
lock
add
push
ja
and
imul
mov
aaa
mov
sbb
jle
xchg
jmp
or
adc
dec
xor
mov
test
add
mov
popf
lods
lea
push
cmpsl
outsb
ror
incl
aam
xchg
mull
xchg
sahf
cmpsl
loop
jl
xchg
imul
cld
adc
mov
outsl
pop
pop
dec
aas
aam
xchg
push
cmpsl
inc
dec
fcomps
stos
xor
loope
add
jae
pushw
push
ljmp
negb
inc
jno
inc
jae
fisubs
push
cmp
ds
cli
adc
cmp
push
test
fldt
pop
pop
adc
sub
test
inc
das
dec
xchg
sbb
pop
mov
dec
pop
imul
dec
aad
mov
std
inc
out
pop
lcall
aam
rdtsc
add
test
adc
mov
adc
insb
push
lock
xchg
iret
nop
add
xlat
insb
sbb
cmp
inc
cs
jg
hlt
scas
push
aam
shr
mov
fsubrl
dec
mov
dec
adc
inc
jns
mov
push
adc
pop
test
insl
lret
ret
adc
ja
lock
cld
jne
mov
fistpll
adc
pusha
xchg
cmpsl
or
aas
cs
imul
test
adc
sbb
dec
sbb
ret
or
and
insb
mov
cld
shrl
insb
shr
pusha
inc
push
into
call
jl
and
dec
cli
popf
and
adc
xor
shrl
inc
sbb
enter
out
xchg
cmc
aaa
mov
push
pop
ja
pusha
cltd
jno
aaa
mov
jae
xor
push
push
daa
jne
movsb
test
pop
cmp
js
testb
sbb
xor
xor
jne
jno
fs
jbe
jb
adc
shrl
addr16
lret
push
in
aad
mov
sarb
call
in
data16
ja
pop
mov
pop
push
jecxz
mov
and
cli
cmpl
pop
adc
and
pop
je
mov
cmp
sbb
dec
add
and
inc
sub
cmp
mov
mov
icebp
loope
push
pshufw
in
icebp
rcl
jo
fldt
sbb
movsl
sahf
cmp
mov
cld
xchg
mov
inc
ficompl
mov
stc
and
push
cmp
jle
nop
pop
stos
ds
sub
xchg
jecxz
ja
aaa
std
sbb
outsl
or
mov
clc
jmp
out
sub
test
mov
mov
jle
mov
std
sub
or
push
xor
pop
sahf
arpl
adc
cmp
mov
mov
lcall
cmp
dec
and
dec
xor
sub
push
in
xlat
test
mov
cmc
mov
fidivrl
pop
fnstenv
pop
test
mov
cmp
enter
or
or
ljmp
add
in
ja
daa
ret
ss
dec
push
stos
cmc
or
xchg
cmp
push
test
lods
or
fstpl
imul
mov
add
mov
in
and
jmp
les
mov
je
inc
add
es
call
mov
jge
xchg
test
daa
ss
pusha
mov
or
divb
xorb
jg
enter
sbb
stc
cs
loope
shlb
js
ret
stos
jo
mov
xchg
lret
bnd
mov
sbb
ret
pop
inc
rcl
sbb
int3
dec
xchg
mov
push
mov
pop
repnz
pop
xchg
scas
call
das
sub
sub
sbb
cmp
jbe
mov
jae
aaa
popa
ja
jmp
cli
outsb
ret
push
dec
dec
push
push
jae
data16
popf
push
aaa
dec
inc
subl
aaa
imul
test
add
in
mov
outsl
test
inc
mov
mov
pop
rcrl
sub
adcb
and
in
jbe
icebp
or
sub
fbstp
data16
mov
in
mov
aam
and
icebp
mov
ja
sbb
jnp
mov
cs
loope
add
inc
push
lds
ud0
push
jmp
cmp
int3
pop
int3
loop
jno
jo
lret
pop
push
mov
lahf
xor
mov
sub
mov
pop
sbb
and
adc
jo
sbb
lret
pop
xlat
dec
scas
pop
jnp
fsubrl
adcl
inc
je
sbb
insl
lods
pcmpeqd
inc
push
dec
cmpb
inc
mov
add
xor
icebp
mov
sbb
add
xchg
sub
jne
mov
mov
shrl
adc
inc
repz
cmp
or
decb
data16
push
pusha
orl
in
fwait
popa
jae
lcall
or
xor
stc
pop
adc
dec
jb
lods
nop
xchg
cld
xchg
leave
sbb
mov
stc
xchg
xabort
push
popf
xorl
dec
outsl
imul
das
imul
outsb
iret
jbe
or
jnp
xchg
stos
sub
mov
movb
adc
jno
lret
mov
retw
imul
in
push
movsl
rcrb
cmpsb
mov
xor
add
mov
inc
mov
popa
data16
test
mov
jg
sbb
or
mov
pop
push
adc
pushf
aas
jae
and
adc
pop
adc
adc
push
cmp
and
jno
jmp
mov
push
ret
ds
fwait
mov
xchg
mov
lret
sub
in
fldl
pop
shrl
inc
ljmp
jo
mov
or
mov
pop
jns
jecxz
shll
clc
pop
adc
jae
lret
cmc
test
push
adc
cmp
mov
mov
sub
pop
fs
mov
imul
mov
in
movsb
pop
insl
sub
out
or
push
and
xor
out
adc
gs
sbb
pusha
inc
lcall
mov
push
adc
mov
dec
pusha
loope
stc
ljmp
movsb
xchg
lret
aam
jo
dec
pop
jp
imul
fiaddl
sbb
mov
in
mov
sub
hlt
shll
sbb
sbb
lds
xchg
jmp
cmp
orb
stos
or
adc
popa
jnp
bswap
movsb
mov
adc
incl
add
pop
iret
push
cmp
push
xor
sbb
insl
sub
test
mov
aas
jp
outsb
enter
cmp
sbb
pop
subl
sbb
insl
sahf
addb
mulb
sub
inc
aad
adc
xchg
cmp
add
cmc
sbb
insb
dec
pop
imul
dec
popf
cld
xchg
push
and
mov
imul
add
cltd
aam
imul
pop
je
sbb
mov
mov
xchg
mov
stos
les
pusha
jb
or
sub
or
imul
jae
pop
mov
mov
seto
jae
cmp
ja
mov
sbbb
and
mov
mov
and
into
sbb
dec
dec
mov
jns
iret
xor
out
hlt
imul
cltd
xchg
cmp
mov
pop
mov
div
inc
pop
movsl
fistl
js
lret
enter
jle
leave
jb
sti
out
push
sbb
into
pop
stos
dec
xchg
imul
fidivrl
mov
aas
dec
pop
pop
test
lret
sbb
subb
pop
and
mov
xchg
pop
bnd
push
xchg
add
jae
dec
or
and
frstor
enter
je
xor
clc
mov
cmp
clc
shl
inc
and
ret
cmpsb
in
jae
movsb
pop
in
jle
jno
xor
cmpsb
lret
jg
xchg
jmp
jl
add
cmp
mov
sti
mov
cltd
or
or
adc
ret
cwtl
mov
add
push
or
data16
lret
ret
adc
and
cwtl
ret
das
mov
or
imul
pushf
and
lods
xor
rorb
insb
fisttpll
fistpl
sahf
xor
xor
jecxz
gs
test
int
into
add
mov
ljmp
das
ds
repz
test
pop
mov
ja
or
call
shlb
sub
cli
inc
xor
jo
scas
jae
xchg
push
arpl
pop
out
addb
movsb
pop
jo,pt
mov
dec
pusha
inc
aam
xor
mov
push
je
int
add
mov
repz
cltd
xlat
mov
sbb
fnop
cld
outsb
jno
mov
push
js
pushf
pop
test
jne
mov
cwtl
xorb
cs
xor
sbb
add
dec
inc
mov
arpl
pop
push
jo
js
loop
lods
cli
jecxz
cmp
jbe
xchg
fistl
mov
outsb
test
pusha
jecxz
and
jg
pop
outsb
iret
xchg
dec
sub
pusha
xor
aad
lock
adc
sub
mov
lds
lcall
xchg
mov
inc
mov
lcall
jg
or
or
movsb
ljmp
jmp
mov
mov
dec
and
out
js
andb
xchg
aad
out
mov
cmp
movb
adc
jo
jae
xor
sbb
ja
mov
ljmp
lods
mov
out
push
imul
xor
fstps
cmp
mov
imul
or
repz
pusha
and
jmp
inc
lret
push
sarl
nop
mov
or
mov
aam
ss
xchg
lds
test
mov
ss
mov
sub
push
pop
inc
adc
mov
or
fistps
inc
jmp
sub
jbe
xor
push
fdivs
jnp
mov
arpl
pushf
in
pusha
add
mov
xchg
std
outsb
cmp
dec
movsb
loopne
xchg
frstor
call
stc
push
pop
and
imulb
sahf
mull
xlat
outsl
sub
les
lret
and
ja
pop
aaa
mov
ds
pop
add
xor
xor
aaa
lds
mov
cmp
xor
inc
xor
int
ljmp
testb
rorb
lcall
mov
mov
push
gs
test
in
mov
lds
or
enter
movsl
push
adc
mov
jae
adc
mov
xor
outsl
xchg
cli
inc
rclb
pop
pusha
cmp
sub
fldcw
push
shrl
ret
cmc
popa
inc
roll
pushl
clc
adc
in
mov
outsb
out
sub
inc
xor
jne
dec
push
mov
sub
imul
sbb
test
and
repz
jo
popl
jecxz
push
lods
out
adc
mov
and
add
fs
mov
mov
ds
ret
inc
stos
es
nop
sub
and
mov
lahf
pop
mov
hlt
clc
mov
xor
scas
lret
test
mov
adc
xchg
sahf
sub
shl
mov
cmp
add
in
js
leave
sub
mov
incb
mov
adc
orb
inc
dec
dec
adc
stos
mov
lret
dec
push
or
cmp
and
pop
push
mov
cmp
movsb
or
push
pop
dec
cmp
std
fdivrs
xchg
insl
jge
test
jp
out
into
fadd
cs
hlt
dec
ss
jne
or
mov
bound
dec
lods
jne
sub
and
pop
jno
or
fxam
push
cmp
mov
ja
inc
mov
rcl
outsl
enter
aam
xchg
add
mov
scas
lods
cmp
xchg
push
mov
and
cltd
ds
pushf
mov
scas
movsl
pop
xchg
cmp
adc
leave
jae
jnp
pop
out
xchg
adc
std
mov
enter
pop
sti
cmpb
inc
mov
aam
frndint
insl
add
mov
or
lds
add
hlt
push
scas
jbe
jl
mov
movsl
cmp
jne
jb
push
push
popa
mov
mov
mov
push
inc
mov
loope
sbb
or
mov
outsl
and
loop
into
negb
pushf
ret
push
push
mov
pop
jae
mov
xorl
and
out
cs
jns
jle
mov
and
loope
aaa
data16
jns
cmp
subl
jle
mov
lret
loop
adc
hlt
cmp
pop
arpl
cmp
loopne
adc
xor
in
mov
jae
je
lea
lods
loope
loop
faddl
xchg
mov
std
mov
test
es
or
lds
dec
sbb
dec
push
xor
stos
cmp
cmp
mov
sti
inc
jg
sbb
ret
inc
mov
sub
mov
out
xchg
pop
aaa
aaa
stc
imul
or
adc
pop
mov
test
jb
sub
imul
hlt
mov
push
pusha
push
cmp
mov
shll
cltd
aam
scas
xor
dec
cmc
jge
and
push
fnsave
aad
pop
cmc
outsb
pop
cmpsb
jbe
adc
xchg
mov
jl
inc
mov
or
outsl
jae
push
movsl
ss
clc
lret
fldcw
adc
sbbl
lret
cmp
arpl
cli
inc
in
jae
jae
shlb
push
sbb
mov
das
mov
cmpsb
jecxz
sub
cmp
xchg
cmc
imul
fcoms
movsb
dec
loope
mov
push
or
or
aam
inc
push
cmp
xor
jbe
sub
cmpsl
xchg
ds
mov
leave
push
divb
popa
pop
sub
cmp
pop
or
dec
fidivrs
je
inc
in
sub
cmp
adc
mov
adc
xchg
aaa
xor
xor
ja
mov
repnz
inc
fdivrp
mov
push
in
repnz
adc
js
pop
out
cmp
jnp
int
pop
or
nop
pop
clc
mov
mov
outsb
aaa
lret
ret
and
out
sub
pop
and
pop
adc
mov
add
adc
out
clc
data16
scas
and
in
outsl
xlat
jbe
inc
pop
pusha
push
fstps
and
repz
push
mov
imulb
pop
ss
or
dec
loop
fs
imul
lret
inc
push
inc
int3
sti
cmp
jb
hlt
imul
adc
aad
or
adc
in
mov
sbb
lret
mov
mov
gs
test
push
pop
inc
adcb
and
int
push
jb
jns
in
fcmove
xor
mov
insb
outsl
popa
adc
mov
inc
xor
lds
jae
push
cmc
push
mov
and
cmp
mov
jle
lds
stos
sbbb
inc
pop
jo
mov
or
adc
out
dec
inc
loopne
pop
or
jmp
in
pushf
xor
sub
into
or
mov
sbb
shrl
es
xor
inc
pushf
insb
push
cmpsl
and
xlat
adc
pop
ret
inc
xor
enter
mov
mov
movsb
gs
sub
aam
dec
and
push
and
ret
push
add
and
dec
pop
fnstenv
enter
mov
jnp
cmpsb
inc
lds
gs
jae
gs
ljmp
dec
add
mov
push
sub
andb
push
scas
mov
sub
adc
aaa
scas
out
jae
arpl
inc
andl
adc
ljmp
pop
mov
add
ljmp
sub
mov
sub
lcall
adc
cmpsb
loopne
push
lret
mov
adc
xor
cmp
movsb
inc
jge
popa
sti
mov
ss
nop
mov
test
js
mov
xchg
or
lods
aam
jg
cmp
and
pop
push
adc
insl
jmp
outsb
sbb
daa
push
jae
repz
or
mov
lahf
pusha
cmc
mov
adc
movsl
rolb
stos
pop
adc
push
out
test
or
xor
out
mov
imul
xor
mov
push
outsl
mov
lea
cwtl
pop
mov
sub
add
pop
push
pop
imul
mov
insl
ljmp
adc
xor
and
sub
ret
push
rolb
add
sbb
adc
sbb
aam
test
ja
clc
jg
int3
nop
jns
inc
mov
repz
repz
mov
mov
sbb
mov
cli
cmovo
mov
stos
insb
jl
jno
jb
sub
test
in
movsl
mov
scas
hlt
xorb
push
mov
mov
inc
insb
mov
pop
adc
arpl
ds
mov
sbb
jbe
cmp
stc
in
imul
pop
adc
inc
std
mov
push
adc
sbb
lods
movl
push
inc
psllq
cmp
in
xchg
fsubrs
inc
xor
popa
and
in
sub
fiadds
shr
jg
jp
aaa
insb
orl
mov
fstp
repz
jno
out
sub
xlat
and
mov
es
inc
or
mov
jecxz
pop
cmpsb
mov
pop
and
jae
push
orl
addr16
adc
and
push
pop
je
sub
jo
jae
loope
int
xchg
push
push
mov
cmpsl
xchg
imul
lea
mov
imul
sbb
xchg
aaa
jecxz
lcall
aad
inc
pop
adc
push
mov
sub
call
sarb
cmp
sbb
ret
lret
cmpsl
fdiv
fstl
ja
or
std
add
lahf
mov
sbb
lcall
adc
in
lods
out
xor
xchg
movsw
adc
mov
xchg
shl
je
sbb
dec
lret
pop
xchg
sbb
or
movsl
jae,pn
xor
mov
sbb
repz
das
mov
repnz
jae
adc
in
leave
insb
lcall
push
mov
stos
in
inc
es
jmp
mov
sub
ja
out
mov
mov
imul
mov
data16
mov
mov
mov
out
mov
dec
mov
mov
or
fwait
in
jae
push
pop
popf
mov
cltd
and
inc
push
stc
hlt
orb
add
and
inc
and
popf
sub
imul
pop
jae
stos
sub
mov
loopne
pop
loopne
imul
and
sar
out
clc
pop
loopne
fcmovnb
pop
mov
data16
cmpsl
fdivs
rcrb
jae
cltd
add
cmpsl
mov
cmpsl
into
dec
add
sbb
fldt
sbb
aad
sbb
in
jmp
popf
push
mov
loope
sbb
mov
hlt
lret
mov
push
cmp
xor
adc
nop
imul
pop
cwtl
xchg
xor
jae
dec
push
and
pop
cmpsb
xor
or
xchg
xchg
daa
insb
fisttpl
sub
cmp
call
inc
repz
push
dec
movsb
cmpsb
mov
adc
xchg
sub
shlb
cmp
loop
sub
mov
andb
add
xchg
add
jno
rcl
xor
jbe
mov
lods
add
adc
js
jg
inc
ja
cli
inc
icebp
pop
add
sbb
cmp
sbb
push
push
dec
dec
mov
cld
iret
insl
outsb
sub
fcoms
pop
cld
mov
push
fnstcw
pop
repz
jp
xchg
xchg
xchg
pop
lret
sbb
int3
int
jo
scas
pop
cs
cmp
fnsave
int
jmp
icebp
lcall
imul
push
mov
stos
mov
lds
cld
lahf
or
adc
pandn
sub
mov
jl
mov
ret
dec
imul
mov
and
jns,pt
dec
add
sti
fsubrp
das
jp
adc
push
cmpsl
call
xor
imul
mov
push
jle
pop
fs
pop
and
int3
and
imul
mov
jecxz
jnp
aad
shrl
scas
call
out
push
mov
outsl
mov
stos
dec
movsl
js
into
cltd
fidivl
xchg
and
rolb
out
outsl
mov
jo
pushf
push
mul
mov
adc
fisubrl
sub
or
jb
cwtl
xchg
add
inc
cmpsb
inc
dec
fwait
mov
fwait
mov
aaa
jbe
outsb
mov
bound
imul
ret
fmulp
add
jmp
dec
mov
pop
jno
cmp
adc
mov
addr16
ja
mov
dec
stc
mov
jbe
int
push
pop
and
sti
mov
sub
imul
ret
xor
clc
insl
xor
sarb
jecxz
mov
repz
ja
out
repz
push
mov
div
int3
mov
adc
int
jbe
mov
fisubrs
xchg
add
xlat
add
ja
insl
hlt
xor
xor
cmpsb
stos
jmp
or
xchg
and
jo
out
and
cs
lret
or
pushf
adc
loope
sbb
jae
push
mov
mov
sub
jno
dec
lret
cmp
jae,pn
xchg
sub
ja
call
addr16
pop
pusha
outsl
sbb
test
aaa
out
shll
mov
insl
pusha
pushw
cmpsb
mov
xchg
xadd
repnz
xchg
add
sarb
add
outsl
call
shl
das
loop
int
mov
mov
test
push
pop
test
push
lods
push
insb
loop
jle
lods
es
pop
sub
je
loope
mov
add
call
inc
xchg
sub
repnz
jl
push
push
mov
mov
lahf
pop
divb
and
mov
adcl
loop
loopne
fdivs
cwtl
push
pop
sbb
cmpsl
pusha
mov
pusha
scas
jae
cli
ficoml
int
push
pop
pop
dec
aaa
mov
icebp
loop
movsl
sarb
cmpsl
aad
jae
rcr
push
inc
fildll
dec
sub
adc
fcompl
jb
lea
add
inc
sahf
daa
dec
push
add
fldl
and
inc
bound
add
sbb
jle
mov
repnz
int3
lods
push
adc
dec
sbb
xor
pcmpeqd
test
in
jne
shll
pop
cltd
sahf
pop
xor
in
aam
xor
mov
lcall
pop
pop
imul
ret
jl
ss
jb
je
aam
es
pusha
jae
inc
and
out
stc
roll
sub
xor
pop
cli
adc
sub
push
pusha
stos
and
mov
cmpsb
jno
mov
sub
les
add
hlt
adc
lods
lods
shr
ljmp
mov
je
imul
mov
inc
mov
in
or
dec
pop
xchg
pop
mov
dec
jl
out
xchg
inc
adc
pop
push
mov
pop
push
test
push
inc
push
cmp
insl
cmp
cld
fwait
into
daa
push
mov
mov
mov
icebp
in
int3
cmp
mov
cltd
in
inc
popl
imul
dec
jno
int
repnz
jae
pop
cmc
sbb
cli
imul
sahf
orl
sub
ljmp
js
loop
fbstp
add
cld
xchg
lods
mov
bound
pusha
call
pusha
mov
into
je,pt
mov
neg
enter
ja
mov
fcoms
lock
test
and
fiadds
jb
inc
sahf
das
lds
shrl
int
fs
lock
cmpsl
fcmovu
mov
scas
xchg
jae
inc
sbb
je
int3
out
ret
cmpsb
inc
mov
imul
mov
frstor
xor
jae
mov
add
pushf
add
sub
stos
pop
or
sub
xchg
mov
push
xor
insb
clc
movsl
xlat
imul
dec
sbb
pop
sbb
loop
aaa
push
cmp
mov
jg
fadds
mov
stc
into
mov
dec
pop
xlat
in
lret
dec
out
jbe
out
lock
mov
fistl
jg
sbb
adc
shr
inc
div
call
jle
icebp
push
shlb
xchg
lods
xchg
data16
adc
mov
bound
push
cmp
xor
dec
inc
insb
add
dec
std
cmpsb
out
int
ljmp
pop
cltd
pop
adc
jo
jae
jae
adc
rcl
ja
or
sbb
or
daa
push
xchg
push
fcomp
sbb
jbe
clc
mov
sbb
mov
lods
repz
imul
pop
negb
out
dec
adc
and
jo
jae
stos
xchg
or
dec
cltd
mov
mov
cmp
jmp
jecxz
jns
xor
scas
mov
adc
sarl
ds
xor
inc
fdivs
xor
or
loopne
and
ja
jnp
jle
in
and
inc
std
movsb
xor
jns
rcrb
pusha
ss
js
test
xchg
add
adc
cmpsb
dec
mov
jnp
dec
loope
stc
shlb
cwtl
sub
sub
ds
rcll
push
dec
data16
mov
inc
xor
add
pop
testb
loop
into
inc
xchg
int
ss
inc
das
jg
push
xor
arpl
jmp
fsubrs
lahf
in
out
in
mov
jecxz
jp
push
stos
mov
insb
or
addr16
and
push
das
outsl
inc
loope
jp
mov
in
adc
push
cwtl
scas
popa
push
out
mov
push
xchg
sub
jne
jo
aaa
rolb
call
jl
cmp
mov
out
lods
jmp
mov
xchg
cmp
cmp
cltd
dec
fs
push
rorb
adc
push
loope
test
fldl
xchg
and
psrld
inc
pop
inc
cmp
ds
test
xchg
mov
pop
ss
daa
icebp
jg
cmpb
daa
mov
sub
mov
mov
xorl
outsb
or
jl
stos
js
adc
sbb
pop
or
sahf
jecxz
rorl
into
push
test
in
push
mov
cmc
inc
imul
lahf
jne
pop
je
cmc
xor
jae
ret
lea
push
test
daa
jnp
adc
push
mov
or
imul
fstpl
push
ja
sub
std
pop
cmc
and
sub
int
ja
in
sbb
cltd
xor
xchg
sub
aas
jae
ja
sub
icebp
sbb
repnz
mov
sbb
movsl
sbb
lret
aaa
xchg
gs
mov
and
push
xor
cmp
push
loop
cmpsl
cwtl
lds
pop
fldl
mov
sbbb
mov
flds
mov
mov
popf
inc
or
fucomip
inc
add
sub
mov
ja
js
aad
dec
or
sbb
sub
mov
and
mov
sbb
jae
aad
les
jmp
cmp
pop
mov
popa
gs
outsl
aaa
xor
test
adc
int
jmp
mov
outsl
inc
dec
mov
dec
in
and
imul
movsb
in
es
sbb
sbbl
cli
imul
icebp
js
jnp
lods
jo
xor
in
lret
lcall
cmp
push
mov
fcmovu
iret
in
jecxz
clc
pop
jb
jle
push
mov
jg
testb
dec
mov
dec
sbb
add
in
push
and
mov
test
jmp
in
orl
ja
sub
mov
push
mov
lock
mov
leave
mov
sbb
jg
int
outsl
inc
lret
data16
out
jo
dec
outsb
int
bound
or
and
imul
sbb
test
jg
je
jae
xor
dec
ss
test
ja
mov
sub
push
aaa
jle
stos
int
dec
scas
mov
ja
inc
jge,pt
xor
lret
mov
sbb
jp
sub
mov
pop
and
mov
ljmp
xchg
adc
or
nop
js
xchg
lds
inc
insb
sub
mov
or
arpl
sub
mov
inc
divl
pop
aaa
jo
jae
pop
in
ss
ja
insl
add
jg
adc
js
pop
xchg
sub
lret
mov
inc
sub
pop
mov
add
ss
jbe
jne
sub
ror
subb
and
test
lcall
or
add
sub
idivb
adc
leave
ss
inc
inc
icebp
shl
add
sbb
inc
push
ss
jae
sbb
push
cltd
dec
lods
aaa
add
lret
aam
jl
xor
sbb
lods
in
add
pop
std
fdivl
in
aad
sbb
lock
fcom
fistps
adc
jne
or
xlat
lcall
mov
add
or
dec
or
in
and
cs
out
cmp
out
dec
push
imul
mov
sbb
dec
or
pop
scas
sbb
fwait
jbe
adc
insb
gs
adc
xchg
sub
stos
push
out
sub
repnz
dec
jmp
fidivl
pop
fiaddl
mov
insl
sub
sub
ja
orl
sti
stos
mov
xor
mov
clc
sub
lods
scas
or
pop
adc
xor
dec
or
jbe
sub
xchg
add
cwtl
mov
pop
pop
xor
jecxz
xorb
int3
in
outsl
sti
aam
add
or
clc
jge
imul
sbb
test
jne
sbb
mov
mov
imul
pop
loope
imul
add
lea
sbb
imul
movsl
adc
pop
push
pop
mov
out
add
sub
or
push
loop
jns
pop
cmp
xor
jmp
pop
add
bound
mov
mov
or
cmc
adc
sub
or
ret
call
rclb
push
push
lds
mov
pop
stos
pop
movsb
push
dec
roll
sarb
rdpmc
loope
xor
dec
cltd
cmp
pop
push
aaa
xorb
int
shl
push
and
inc
es
xor
jns
push
inc
mov
test
xchg
imul
adc
stos
in
xor
into
mov
sahf
and
repnz
mov
and
jno
js
insb
push
mov
icebp
cs
mov
and
call
xor
add
inc
imul
push
dec
xchg
jp
sar
call
pop
dec
stos
scas
mov
sbb
mov
jmp
ss
jmp
jbe
scas
sbb
ja
dec
mov
jg
xchg
adc
mov
scas
imul
ja
imul
jae
adc
icebp
ds
adc
mov
test
add
cwtl
inc
jo
pop
leave
addr16
mov
sahf
adc
mov
jp
int
pop
pop
mov
push
add
jnp
adc
mov
je
or
mov
push
mov
mov
bound
lcall
cwtl
cltd
pop
jae
pushf
in
or
scas
dec
pop
movsb
lds
mov
sub
xorb
push
dec
nop
sar
pushl
mov
lcall
xor
call
adc
xorb
clc
jno
dec
inc
jbe
je
push
int3
jg
jge
jmp
gs
mov
lret
mov
xchg
mov
push
sbb
and
lcall
push
popa
and
pop
out
sbb
mov
adc
divb
test
or
shrl
mov
sbb
jecxz
sbb
mov
mov
and
loopne
rorl
jae
or
jb
imul
mov
and
iret
cmp
cwtl
loope
data16
add
sahf
inc
es
in
inc
cwtl
call
jae
aas
and
add
jns
inc
sbb
imul
pop
mov
mov
push
pop
stc
je
fiaddl
andl
sub
iret
jae
push
mov
cltd
mov
repnz
fstl
dec
outsb
or
ss
ja
mov
ja
cmpsb
fistpl
and
add
jge
arpl
movsl
insb
daa
popa
or
sub
mov
dec
pop
imul
dec
cltd
pusha
sbb
je
mov
mov
imul
insb
jmp
mov
aam
add
mov
mov
pushf
jae
pop
push
mov
sub
mov
pop
mov
mov
test
stos
push
leave
cmpsb
in
push
sbb
dec
and
out
inc
fsubrl
imul
andl
ss
ja
and
or
inc
adc
and
push
test
ret
mov
lea
ret
fisttpl
ja
fsubrl
xchg
in
add
mov
push
mov
or
mov
cld
cmp
cmpsb
jno
mov
cmpb
mov
lcall
push
lcall
mov
int
pop
imul
jmp
loope
out
adc
jmp
sbb
mov
xchg
test
rorl
dec
push
movsb
fs
pop
std
pop
int
sub
cmp
test
out
fdiv
xor
mov
in
inc
pop
aaa
pop
movsl
bound
stos
dec
push
push
popa
sub
cltd
subl
je
sbb
shll
imul
xor
les
ret
hlt
sbb
cli
push
jmp
push
loopne
pop
call
movsl
popa
pop
and
imul
mov
dec
jg
clc
call
jg
sbb
xchg
cmp
lock
and
xchg
fildll
adc
xchg
scas
mov
in
jns
lods
addr16
adc
inc
mov
outsl
aas
bound
push
dec
mov
loop
fwait
mov
mov
test
pop
in
addr16
dec
and
cmp
push
mov
jns
hlt
mov
and
push
add
mov
je
cmpsb
cmp
xchg
sbb
adc
adc
mov
push
nop
inc
imul
jae
ficoms
sub
push
push
movsb
ror
and
push
mov
into
fmull
imul
or
fstpl
ds
inc
mov
aam
jno
shlb
das
mov
jae
imul
pusha
xorl
inc
and
sahf
in
scas
cmp
jg
insb
add
fstpt
dec
jae
xchg
ss
jl
inc
in
mov
imul
adc
test
mov
ja
xchg
cmpsb
xor
inc
lret
mov
out
pop
mov
jg
sbb
aaa
clc
mov
xlat
negl
push
add
push
xchg
mov
push
add
imul
sub
cli
dec
clc
inc
jmp
pop
mov
push
mov
aaa
loop
push
mov
jb
pop
mov
pop
add
push
xchg
dec
pop
mov
jne
push
push
cmp
sete
fsub
mov
and
scas
sub
or
pop
jns
int
mov
cltd
mov
jo
mov
test
jne
sub
addl
fnstenv
in
nop
pop
pop
push
sbb
sub
ja
rclb
bswap
push
loope
or
insb
lret
pop
sahf
jmp
xorb
adc
rep
in
addr16
mov
xchg
imul
fsub
add
adc
xor
mov
jo
test
iret
mov
and
jl
fisttps
or
test
xlat
test
cmp
adcl
sbb
or
pop
inc
dec
addb
ja
imul
jnp
enter
bound
mov
push
flds
repnz
xor
sbb
fiaddl
movl
mov
inc
dec
fdivrs
sbb
popf
cmc
fisubrs
xchg
inc
cmp
aam
sahf
jnp
or
je
movsb
and
push
pop
xor
cwtl
jae
fdivrs
mov
rep
add
lods
sbb
fs
enter
sub
adc
xor
jae
outsl
in
sub
jecxz
push
sti
add
jo
mov
popa
clc
or
add
rorb
mulb
lock
xor
push
fadds
push
sarl
sbb
jbe
adc
dec
lcall
fmull
jo
aaa
shll
aam
mov
xor
fs
movb
mov
adc
dec
adc
call
or
xchg
and
stos
mov
push
jnp
ja
mov
std
cmpsb
imul
mov
mov
jge
sub
xchg
sub
fistl
inc
dec
add
pop
imul
jle
or
ss
jno
sub
xor
ljmp
pop
sub
mov
jo
ss
dec
std
std
pop
jae
mov
pusha
insb
jmp
fs
call
ljmp
add
add
mov
shlb
je
mov
imul
in
fcomps
rorb
movsb
dec
imul
and
ret
push
std
cmp
loope
pop
int
dec
mov
and
pushf
xchg
ss
mov
test
ss
mov
jne
fcmovne
mov
jl
mov
aam
mov
pop
pop
push
inc
daa
dec
aaa
mov
in
movsbl
mov
inc
aad
insb
fldenv
pop
inc
jecxz
cwtl
xor
ja
loopne
xchg
pusha
and
cmpsb
sbb
out
mov
addl
loop
imul
aaa
mov
aaa
inc
frstor
inc
hlt
and
sbb
inc
push
adc
jbe
repz
fsub
adc
movb
shll
pop
mov
adc
cmc
and
add
jle
dec
dec
stos
sub
and
pop
scas
pop
adc
pop
pop
clc
imul
mov
lret
scas
jb
add
mulb
imul
pusha
dec
push
xchg
shr
cmpsl
cli
std
add
xchg
add
inc
xchg
ss
addr16
xorl
dec
movsl
divb
jp
sbb
jb,pn
sub
jbe
in
or
mov
shlb
es
jno
mov
add
mov
ljmp
hlt
pop
push
jbe
mov
sub
in
cli
test
popf
mov
hlt
inc
mov
inc
cmp
push
cs
scas
jae
imul
fisttpl
and
mov
dec
mov
xchg
cwtl
inc
pop
int
push
fidivs
test
mov
and
nop
ss
arpl
dec
xchg
xor
adc
jae
xchg
mov
in
xor
je
xchg
cs
mov
push
fs
push
not
adc
jae
in
arpl
popf
pop
xor
cmpsb
inc
aaa
adc
aas
ss
mov
loopne
stos
in
push
mov
mov
mov
jae
pop
int3
cmp
popa
loopne
cmp
jbe
out
je
pop
and
imul
adc
pop
test
mov
mov
shrb
ja
xor
dec
clc
ret
or
movsb
inc
es
jae
test
jmp
adc
mov
cmp
jecxz
movsl
and
shrl
add
sbb
and
xor
cmc
lcall
pop
mov
mov
cmc
push
pop
mov
fisubs
insl
int
cmpsb
test
push
jo
sti
fs
or
sub
ror
fistpll
sbb
mov
jbe
adc
mov
jne
leave
inc
or
sub
cwtl
mov
insl
lcall
cmpsb
sub
imul
fildll
pop
stos
cmp
xchg
lret
pusha
mov
sbb
jle
rorb
sbb
cmp
aaa
mov
dec
inc
test
mov
lods
nop
add
aaa
int3
in
ss
ja
pop
and
roll
mov
sbb
imul
xchg
insb
push
aas
repz
sahf
mov
out
xor
adc
mov
push
and
movsl
xor
jbe
icebp
dec
int3
cmpsl
sti
adc
sahf
and
pop
fdivr
and
mov
xor
loope
ds
inc
cwtl
ds
mov
leavew
je
cmp
iret
inc
imul
dec
sarb
mov
mov
insb
sub
jb
cmc
aaa
mov
jae
mov
xchg
push
sub
cmp
insl
sbb
int3
xor
ds
dec
inc
adc
sub
imul
imul
adc
ds
ds
loop
jl
sub
mov
pop
jg
push
int
or
in
and
xchg
daa
sub
push
cmpsb
cmp
ss
xchg
sbb
test
addr16
or
cmp
xor
xchg
sub
mov
cmpsl
cmp
cli
pop
cwtl
push
sbb
cwtl
add
adc
stc
rcr
sbb
inc
addr16
jae
push
sarl
xlat
xor
hlt
dec
sub
ja
scas
mov
imul
adc
add
jns
shlb
mov
mov
xor
sbb
data16
mov
push
cmp
and
aam
aaa
inc
std
xchg
xchg
rorb
iret
push
scas
subb
xchg
push
sub
add
push
jl
mov
mov
pop
sarb
inc
fs
pop
xor
jecxz
adcb
hlt
fst
sub
jae
xchg
sub
jmp
lods
xor
andl
sub
jp
ja
sub
shll
pushf
and
jbe
and
out
sti
pop
inc
sbb
mov
mov
iret
xorl
sbb
cmc
int
ret
cmp
push
imul
aas
inc
jmp
pop
cmc
lcall
ret
xchg
adc
movsb
pop
mov
jge
sbbl
bound
xor
in
loopne
rorl
push
ljmp
lds
or
or
cmp
arpl
mov
pop
in
jle
jbe
xor
sbb
jb
ja
repnz
add
into
divb
ja
jmp
push
lds
cwtl
lret
sbb
and
sub
lret
jno
out
xor
cmp
jp
inc
mov
inc
andl
rclb
sub
mov
xchg
mov
adc
aaa
jae
push
sbb
sahf
mov
insb
push
out
jo
mov
stos
mov
mov
ja
enter
fidivrl
pusha
sbb
imul
cmp
fnsaves
sbb
adc
ja
jnp
mov
shll
jb
pop
inc
out
test
imulb
je
lea
sub
loopne
add
and
cmpsb
aam
jmp
sub
inc
in
popf
adc
add
pop
inc
into
movsb
or
out
and
movsl
leave
jo
xor
fs
hlt
mov
inc
orb
push
imul
pop
pop
mov
pusha
or
mov
push
and
mov
cld
xchg
je
mov
pop
ret
fwait
cmp
sub
xorb
incb
dec
mov
cmp
jle
push
movsl
mov
pop
xor
cltd
inc
and
daa
cmpsl
dec
inc
shrb
pop
ljmp
mov
sub
das
mov
jnp
adc
pop
jle
ret
jno
and
pop
cmpsl
test
rcl
fnstenv
mov
into
mov
mov
mov
push
imul
or
jg
int3
pcmpeqb
adc
and
in
adc
cwtl
aam
insb
add
mov
cli
mov
es
mov
and
lret
fmuls
fisubs
lods
push
pop
xchg
sub
xor
xchg
or
out
jae
jnp
push
test
jb
stc
into
aam
lcall
ds
jo,pt
pop
lahf
aam
sarl
fistps
repnz
pusha
jae
sarl
push
loop
sbb
pop
fcomps
ss
push
cmp
mov
mov
rolb
imul
mov
jg
and
loop
xchg
cmp
jae
les
jae
and
xchg
mov
cmc
jne
mov
xchg
mov
insb
addr16
stos
test
test
xchg
adc
push
xchg
inc
add
in
inc
jae
fnstcw
movsb
jnp
cmpsl
adc
jecxz
ret
hlt
xor
mov
lea
into
pusha
mov
mov
mov
arpl
inc
aas
or
adc
in
or
jmp
pop
jg
adc
pop
jge
xor
int
data16
inc
mov
in
hlt
cmp
mov
orl
jae
push
adc
mov
adc
cmp
push
cli
sbb
outsl
adc
or
out
mov
fidivrl
sbb
adc
jno
mov
lods
insl
ss
mov
jl
pop
and
sbbb
fsubp
adc
ficompl
or
iret
pop
hlt
cmp
dec
data16
out
insl
mov
imul
cmpl
shrl
xchg
mov
inc
outsb
fwait
mov
retw
mov
jecxz
lods
clc
add
xchg
jge
sbb
or
jae
stos
xchg
mov
das
push
cld
mov
rcl
cmc
imul
mov
gs
add
cs
pop
xor
inc
inc
jp
lds
addr16
push
mov
loopne
daa
jecxz
xchg
mov
mov
hlt
das
push
and
sub
pop
inc
cmp
pop
push
adc
jae
clc
push
lahf
inc
mov
or
sub
std
jne
push
pusha
mov
xor
cld
jl
test
pop
cmp
pop
sub
add
mov
inc
jb
cld
xchg
or
and
pop
dec
out
jnp
cmp
xor
hlt
ficompl
test
fistpl
repnz
cmp
pop
pop
bound
pop
bound
mov
lahf
in
adc
ror
or
imul
inc
mov
mov
cmpsl
add
inc
arpl
push
pop
sbb
jae
jns
jns
leave
pop
cli
add
aam
in
pop
movl
in
push
mov
xchg
pop
jae
andb
jge,pn
pop
dec
sbb
fbld
adc
inc
popa
sbb
cmp
test
mov
adc
cmpsl
sahf
mov
outsl
inc
pop
add
add
jmp
sub
out
outsl
aaa
fisubrs
int
sub
xor
movsl
in
clc
add
push
push
sub
push
push
mov
mov
int
das
xchg
hlt
xor
cltd
inc
jl
lods
xor
mov
or
jae
pop
xchg
loope
out
roll
lods
shrl
movsb
inc
push
or
xor
int
das
in
inc
push
add
pop
mov
pop
mov
jle
sub
sti
or
xor
pushf
jecxz
cli
dec
lea
sarl
jle
ret
pop
xchg
cwtl
cmpb
ja
sub
cmpsl
out
sub
jns
xchg
mov
xchg
cmp
mov
sbbl
out
mov
sahf
out
jecxz
jne
mov
jge
or
sub
ja
mov
clc
pop
repz
jae
cmp
icebp
test
sbb
sub
xchg
ret
xor
cmp
pop
xchg
repz
test
mov
fisubrs
std
lcall
mov
aaa
cmp
fistps
jecxz
push
jae
and
cli
jmp
in
mov
and
push
inc
outsl
aaa
movlps
sbb
call
test
jle
scas
jbe
xchg
lock
or
js
cmp
and
dec
add
mulb
lds
mov
ds
xor
addb
lds
jle
xor
xor
outsl
negb
mov
xchg
fistl
adc
loopne
into
jo
mulb
orb
inc
pop
fnstenv
jae
fimuls
xchg
fsts
fwait
or
adc
jae
enter
aas
lods
xlat
jae
xorl
add
push
aam
jne
mov
int
into
stos
xchg
or
or
lret
hlt
mov
test
jp
jle
adc
sbb
es
mov
inc
and
cmpsb
jbe
add
pop
xlat
jl
clc
and
in
xchg
int3
ja
inc
andb
aaa
movsb
xchg
ja
outsl
fidivs
dec
les
push
xor
icebp
fnsave
inc
rcrb
aaa
in
sub
hlt
fscale
js
xchg
in
mov
aam
sub
cmp
cwtl
lds
pop
cs
push
shll
sbb
xor
jns
popa
cltd
or
or
sbb
adc
clc
int3
push
test
and
icebp
or
mov
les
notb
sahf
imul
mov
shrb
mov
test
mov
mov
imul
dec
push
fxch
mov
fmul
ficomps
and
stos
push
in
jle
jne
gs
fnsave
jae
lahf
in
test
scas
in
rorl
ret
stos
test
xor
test
into
jne
shr
xchg
jp
ja
and
sbb
clc
imul
fdivl
stos
cli
push
xor
add
mov
cs
fwait
jno
inc
push
push
into
sub
daa
dec
pusha
xor
scas
mov
add
in
pusha
imul
lret
xlat
call
inc
cmc
sub
inc
pop
xchg
clc
mov
jg
repnz
and
or
rol
xor
cwtl
mov
in
test
into
xchg
pusha
lret
mov
jae
jmp
pop
bound
xor
imul
adc
sub
jle
inc
rorb
ss
jne
shrl
or
pop
int
repnz
xchg
aam
push
mov
jecxz
xlat
and
mov
ja
iret
fbld
cmp
jge
sbb
jo
cld
dec
mov
push
jbe
xor
imul
mov
movsb
enter
gs
mov
rcl
sub
lret
pop
jle
push
test
jecxz
sarl
mov
ja
lock
icebp
mov
mov
pop
push
scas
jecxz
mov
ljmp
sbb
xor
test
push
jno
mull
and
xor
xor
inc
and
imul
mov
sub
xor
pop
lahf
dec
push
aam
fidivl
mov
fmuls
dec
dec
pop
or
cmpsb
jmp
popa
mov
and
arpl
dec
mov
std
mov
mov
mov
jge
add
test
xor
pop
dec
test
cld
dec
mov
adc
imull
mov
dec
ret
mov
stos
mov
cmc
cmp
je
ja
xchg
aad
outsl
jo
add
mov
mov
mov
adc
into
imul
xchg
bound
jae
mov
pusha
mov
imul
insb
sbb
shr
or
aad
icebp
xchg
das
pusha
fisubrl
sub
adc
xchg
jb
dec
aaa
pop
int3
int
cmc
pushf
movsb
sub
mov
jecxz
mov
inc
xchg
clc
xchg
hlt
insl
insb
test
mov
ss
mov
jne
std
popa
jnp
and
lods
xchg
je
cmp
cmp
sbb
jae
rcrl
daa
aam
addr16
mov
insb
xchg
jae
mov
sub
push
test
mov
je
mov
cmp
mov
repz
lds
xor
leave
mov
popa
dec
lahf
jbe
and
mov
pop
sub
mov
popf
aas
push
mov
adc
jae
mov
or
and
mov
mov
test
adc
mov
mov
sub
add
and
mov
cmp
imul
fs
xchg
gs
add
xor
bound
push
sub
pop
je
pop
insb
ljmp
test
lahf
pop
adc
cld
stc
mov
sub
jmp
sub
xor
in
cmp
cmc
jb,pn
jmp
push
push
call
cld
mov
inc
xorl
fnstsw
ja
popf
jno
repnz
mov
xor
pop
mov
sbbb
les
inc
ficoms
cmp
es
mov
push
fstpt
test
pop
and
idiv
cmpb
and
es
xor
arpl
cmp
jmp
outsb
jmp
xchg
fists
fisttps
mov
cmp
mov
jl
fistl
in
mov
js
push
jns
movb
mov
or
mov
add
ljmp
inc
ret
out
jns
adc
popf
cmpsl
mov
jae
sbb
clc
xchg
and
pop
dec
add
sub
test
xchg
insb
pop
clc
pop
sbb
into
out
push
adc
in
stos
popf
out
dec
push
insb
cmpl
cltd
adc
inc
fidivrs
mov
lret
cmp
aaa
aad
sbb
push
sti
cmpsb
jg
imul
sbbb
xor
ljmp
das
imul
adc
mov
mov
movsb
sbbb
pop
adc
inc
jo
incl
xor
and
roll
test
js
inc
hlt
cmpsl
inc
jge
loop
sub
mov
sbb
cmc
imul
and
ja
and
ret
cmp
xor
and
ja
jns
sti
clc
loope,pt
push
into
mov
or
loop
mov
sti
in
sbb
jmp
or
aaa
lds
mov
xchg
repz
daa
mov
push
lds
mov
add
insb
jge
add
xchg
add
pop
cmp
js
add
mov
inc
add
stos
loope
mov
jns
push
int
ja
cmpsl
in
and
ss
jne
ds
dec
xchg
movsl
shrb
xchg
popa
push
aaa
pop
fistps
scas
or
ficomps
imul
adc
jecxz
clc
mov
sub
xchg
inc
dec
mov
pop
inc
push
push
ss
inc
aad
mov
movsl
aaa
jg
gs
xchg
in
cmpsb
arpl
ss
ss
xchg
inc
or
mov
xor
add
ja
mov
pusha
imul
xor
roll
clc
movsl
jbe
mov
lcall
add
out
pop
push
insl
imul
ret
cltd
push
mov
insb
mov
or
cltd
ja
mov
in
jg
push
cmpsb
pop
insb
jp
cs
jae
outsb
lret
pop
hlt
data16
mov
push
push
jo
mul
nop
jae
jge
xchg
lods
xor
mov
lock
push
sahf
adc
daa
lods
jo
xlat
adcb
jecxz
movsb
add
cltd
popa
movsl
cli
sub
mov
js
dec
movsb
push
add
or
inc
sti
jle
ja
sahf
insl
stos
imull
mov
dec
jae
mov
aad
imul
push
jmp
js
icebp
pop
push
push
test
ds
loop
xchg
inc
ja
aad
dec
inc
aad
sub
scas
or
push
xorl
push
adc
and
dec
mov
jl
fsubr
notl
sub
fnsave
xchg
xchg
andl
push
xor
repz
repnz
pop
pop
dec
lcall
jno
jecxz
pop
test
insb
push
xchg
je
sub
sbb
pop
inc
add
push
cmc
and
cmp
mov
inc
test
push
cmc
mov
pop
cmp
daa
push
shlb
test
jmp
mov
jo
sbb
imul
dec
mov
or
and
dec
es
dec
outsb
int3
out
mov
sbb
std
mov
xor
pop
je
fcmovnbe
fstpt
inc
mov
jae
mov
cmp
stc
push
jo
jge
cmpl
push
adc
mov
jae
and
cwtl
loop
mov
rcl
xchg
mov
mov
and
clc
gs
imul
push
nop
xchg
pop
mov
ds
add
xlat
cmp
push
mov
shlb
xchg
sbb
inc
or
cwtl
pop
enter
test
pushf
stos
xlat
les
adc
mov
and
popa
push
and
or
fmulp
xchg
test
mov
adc
and
jl
pop
dec
cwtl
sbb
adc
inc
jae
sbb
pop
popf
data16
xor
jb
movsb
sbb
add
ljmp
rorb
rolb
mov
mov
bound
pop
sub
adc
xlat
cmp
aad
add
xor
sar
and
shl
ss
jbe
fiadds
jecxz
jbe,pn
push
shrl
mov
mov
push
and
in
add
mov
lret
out
mov
cmp
hlt
mov
mov
or
push
lock
repnz
xchg
jne
sbb
popf
cld
mov
mov
jp
mov
pop
lds
mov
insl
sub
jae
loop
push
mov
into
push
jno
mov
and
lods
bnd
push
xchg
adc
int
mov
fldcw
mov
adc
pop
repz
insb
lock
sahf
and
and
in
insl
cmp
adc
sbb
mov
add
int
mov
ja
jl
ds
push
jl
cltd
imul
adc
lret
dec
loopne
outsl
sub
jecxz
sbb
mov
push
cmpl
cmp
jae
subl
cmp
push
adc
aas
je
stc
and
fwait
jns
mov
arpl
aam
data16
pop
je
pushf
movsb
xchg
sub
out
dec
fistl
mov
loope
pop
push
daa
int3
std
sbb
nopl
mov
lahf
xchg
popa
cmpsb
add
mov
pop
cmp
jbe
pop
cmp
sbb
fwait
mov
int
cmp
aas
in
xor
movb
aam
inc
lahf
ja
mov
outsb
adc
fistpll
imul
clc
imul
imul
test
les
scas
pop
loope
mov
test
mov
jecxz
in
lods
mov
clc
js
xchg
pusha
xor
lret
test
fs
notb
in
jne
jbe
repz
arpl
ret
imulb
ficomps
roll
dec
aaa
gs
push
loope
or
xor
jmp
add
jge
ljmp
push
jmp
test
push
jo
mov
pop
cmp
ja
xor
pop
jo
stos
jo
mov
xchg
jb
cwtl
jne
pop
push
into
iret
mov
stc
fdiv
out
ret
faddl
js
sub
clc
xor
jg
aad
push
jge
mov
xor
inc
int3
xchg
or
cwtl
cmp
mov
imul
fiadds
adc
adc
mov
mov
ds
cmpsl
dec
inc
and
add
ss
fdivrl
jae
in
addr16
or
mov
out
ror
cmp
xor
daa
dec
rcll
sahf
cmp
das
push
xchg
dec
and
stos
imul
mov
pushf
dec
jae
aaa
je
hlt
dec
push
pop
roll
imul
cmp
jb
test
pusha
addr16
mov
in
sub
jae
lods
movsl
mov
and
in
or
pop
imul
jmp
call
cmpsb
jbe
rol
jmp
mov
add
mov
jl
fwait
bound
mov
aad
lds
mov
xchg
ljmp
test
add
xlat
jle
cmp
dec
cwtl
mov
or
xchg
jbe
leave
sub
mov
and
mov
imul
sub
filds
pusha
out
adc
xchg
xlat
scas
int3
mov
into
xchg
lds
sahf
mov
xchg
out
jae
sub
jae
mov
sbb
and
jns
mov
test
imul
stos
mov
dec
xor
xchg
xor
xchg
test
shlb
aam
les
leave
mov
imul
sahf
out
scas
cmpsb
jecxz
jle
and
out
mov
imul
jge
sub
push
mov
fidivrs
in
mov
jp
fwait
stos
add
je
bound
mov
sub
mov
pop
fcomp
add
imul
adc
daa
es
jecxz
and
adc
pop
shrb
dec
aaa
das
jb
sahf
fwait
pushf
xor
xchg
mov
cmp
imul
cmpl
push
loope
sti
and
mov
shlb
je
cmp
xchg
adc
iret
aaa
xchg
jns
pop
sub
pushf
sub
jp
stc
cmp
fisttpll
ljmp
jl
push
jae
and
mov
les
and
enter
movsb
rol
movsb
aad
pop
xchg
faddp
pop
cld
push
fsts
cltd
mov
cmp
ja
aaa
je
loope
xchg
cmp
ja
adcb
cmpsb
push
enter
jle
sahf
mov
or
std
xchg
push
aas
mov
pop
lock
inc
and
pop
mov
pop
mov
ja
sub
push
imul
jae
add
lret
loop
hlt
xchg
popf
mov
cmp
ret
jge
int3
jecxz
pop
cmpsb
lds
pop
pop
inc
cmp
jmp
jo
fsubl
push
or
mov
sub
mov
pop
xlat
popf
les
int
das
test
jae
pop
pop
jge
outsl
sbb
xchg
adc
daa
test
jmp
mov
cld
push
add
pop
pushf
imul
rclb
jb
insb
mov
gs
cmp
adc
in
mov
and
and
out
xchg
dec
gs
mov
mov
nop
loopne
push
cli
push
bound
test
and
sahf
lret
cmpsb
mov
pushf
dec
inc
out
add
pushf
xchg
aas
add
push
cmp
int
inc
mov
and
mov
pop
cmc
pop
jb
movsb
js
add
testb
in
add
adc
pusha
shlb
fstps
xor
push
movsl
rcrb
jb
orl
xchg
sub
fstpl
lret
sub
imul
jbe
pop
cwtl
mov
jg
fdivrl
mov
cmp
sbb
push
int
pusha
test
arpl
lret
lods
test
or
out
pop
insb
xchg
push
fldcw
dec
inc
mov
add
jl
stos
cli
out
sti
pop
fisttps
jne
xor
mov
dec
sub
cwtl
aaa
lods
out
xor
in
inc
sti
cmp
pop
out
loop
mov
mov
sbb
aad
rcrb
in
and
xchg
jb,pt
xlat
pop
sub
iret
arpl
repnz
pop
cmp
jl
roll
pop
xor
sarb
sub
mov
add
jge
mov
dec
inc
icebp
dec
stc
in
cmp
jecxz
cmp
jae
add
xchg
lock
mov
sub
pusha
add
xor
into
cmp
inc
out
mov
push
add
add
mov
push
popa
pop
cltd
fwait
xor
or
repz
pop
ljmp
pop
pop
mov
add
std
lds
adc
jae
ljmp
xchg
das
push
sbb
jge
push
fstp
mov
pop
aam
insb
daa
xor
cmc
jno
daa
test
enter
mov
or
mov
mov
lds
aaa
pusha
iret
mov
mov
icebp
push
cmc
xor
mov
cmp
or
mov
sbb
add
sti
mov
mov
int3
jle
int3
ja
dec
lret
imul
sub
pop
fsubrl
clc
ja
sbb
into
adc
movsl
cmp
sub
sar
pop
xlat
nop
adc
mov
cs
xchg
inc
jecxz
ret
add
gs
fnstcw
mov
addb
scas
pushf
in
mov
xlat
jl
push
movsb
pop
jge
cmc
cmp
imul
mov
inc
jge
jg
mov
mov
rcr
dec
lret
xchg
lods
cmpb
and
stos
insb
xchg
mov
and
stos
mov
xor
and
mov
lods
push
inc
mov
cltd
arpl
scas
mov
aam
add
popa
push
xor
lcall
xlat
and
mov
jne
movsb
ret
xchg
into
mov
mov
mov
es
pop
scas
scas
lock
je
cmc
mov
int
push
das
lods
imul
test
dec
outsl
and
mov
in
cmp
pushf
test
jecxz
jo
sub
cmp
or
out
pop
xor
and
push
add
nop
jae
aas
movsl
pusha
imul
ret
nop
loopne
pop
out
xlat
adc
xor
dec
int3
lret
test
daa
push
dec
cmp
cmp
testb
jae
aaa
sahf
stos
cmpsb
jmp
testl
xor
subb
cwtl
mov
fwait
icebp
mov
mov
mov
imul
fstpl
mov
ja
and
jae
lret
lea
lock
repz
arpl
xchg
shr
cltd
xor
push
sti
jmp
adc
pop
repz
ds
push
sbb
or
out
outsl
lods
pop
cmp
adc
cs
scas
cmpsb
leave
push
imul
push
iret
add
pop
sub
vcvtss2si
sbbl
mov
or
inc
xchg
mov
scas
and
fiaddl
gs
in
push
nop
jae
cmp
or
enter
pop
je
mov
repz
dec
cmpsl
lods
std
outsb
xor
jae
int3
mov
pusha
cmpsb
scas
mov
cmpsl
pop
adc
mov
or
xchg
movsb
push
ret
cmp
jge
mov
or
inc
arpl
fldenv
mov
fldcw
push
cwtl
int3
in
js
pushf
sbb
fcompl
xor
out
jecxz
stos
jo
jae
xorb
sub
arpl
repnz
ret
jl
or
mov
das
lock
out
sub
sub
insl
cmpb
lods
xchg
pop
ja
aaa
das
bound
pusha
xchg
sahf
jno
sbb
test
xchg
test
out
jnp
in
xchg
fsubrs
imul
sub
dec
into
lret
cltd
ja,pt
xchg
sbb
adc
ret
scas
je
mov
sub
add
pop
out
cs
shrb
adc
push
std
or
jo
jae
dec
and
mov
add
pusha
push
inc
mov
mov
test
fs
cmp
ja
add
adc
sbb
into
out
sbb
subb
jmp
sahf
movl
jg
jae
push
imul
xor
and
popa
mov
pop
mov
popl
sahf
dec
incl
mov
es
pop
xor
lods
fisubrs
pop
push
rcll
repz
inc
push
mov
movsb
stos
jmp
mov
mov
idiv
ret
outsl
pop
dec
jb
push
and
xchg
jb
sti
mov
add
cmp
and
inc
lret
inc
flds
mov
rorl
inc
popa
popf
mov
outsl
cli
mov
sarb
jae
popf
push
rorl
mov
pop
divb
dec
mov
pop
sub
out
mov
sbb
fadd
sahf
jecxz
dec
rcr
sbb
test
xchg
mov
cmp
shl
jg
mov
jae
mov
xchg
mov
push
pop
xchg
dec
adc
jns
in
scas
mov
lea
adc
mov
jl
push
jecxz
cmp
stc
jmp
ret
mov
cmp
imul
jo
mov
cmpsb
pshufw
inc
inc
rcll
mov
scas
aam
ljmp
mov
out
out
je
and
sbb
mov
popl
mov
xchg
xor
mov
xchg
mov
fwait
adc
les
outsb
mov
xchg
jno
push
or
outsl
test
mov
mov
test
mov
inc
push
cmp
mov
jae
xchg
add
jg
sti
data16
stos
js
jg
out
mov
subl
cltd
dec
mov
xor
add
push
pop
dec
test
fnstenv
mov
and
fsubr
jle
stos
jl
mov
in
xchg
fdivrp
jae
add
scas
lds
jl
sbb
int
inc
sahf
xchg
pop
pushf
push
ret
pusha
test
dec
mov
cwtl
sub
sti
cmp
mov
inc
decb
mov
xchg
xchg
inc
pop
dec
aam
push
pop
cmp
and
push
test
cmp
sbb
and
cmp
inc
pushf
mov
aam
out
orl
mov
daa
je
jmp
cmp
adc
jle
cmp
sub
sub
xlat
sub
add
xchg
sbb
inc
fdivrl
test
mov
mov
arpl
add
xchg
jne
ss
rcl
mov
addr16
mov
into
xchg
sbb
out
cld
popf
jmp
and
xor
out
cmp
movsl
cmp
mov
push
retw
data16
sub
outsb
cmpsl
xchg
imul
lods
stos
mov
mov
jp
adc
pop
push
das
aam
lret
in
add
aaa
ljmp
aaa
jl
sub
pop
fs
out
lds
je
adc
movsb
adc
push
fists
pop
dec
mov
stc
jecxz
dec
mov
xlat
dec
mov
loope
adc
popa
rcll
inc
or
push
fldcw
cmp
ja
movsl
mov
adc
hlt
shll
into
cwtl
mov
imul
jo
aaa
mov
inc
ss
cmp
cmpsl
xchg
xor
pop
pop
pop
dec
xchg
lds
adc
mov
and
outsb
add
or
arpl
repz
in
movsb
inc
shlb
mov
dec
ss
fiadds
push
push
xchg
cmp
fsubl
repz
scas
xor
jae
cmp
cmp
in
pop
or
clc
pusha
xacquire
pop
push
cmc
xor
lea
xchg
mov
jl
xchg
mov
shrb
xor
roll
clts
cmpsl
and
in
xor
adc
rcrb
dec
adcl
jge
xor
sub
test
sub
mov
sbb
sub
jae
pinsrw
adc
jo
xchg
pop
or
ja
adc
or
movsb
jno
das
mov
mov
rol
adc
imul
xchg
push
int
arpl
scas
sbb
mov
imul
sub
test
mov
cwtl
inc
sarl
mov
scas
or
stos
subb
stc
sub
jbe
daa
jo
jae
ds
dec
js
sbb
ret
dec
jle
popf
jmp
and
fistl
xorps
sahf
aam
imul
std
ja
stc
dec
xchg
stos
das
sub
insb
cld
dec
out
sbb
out
and
mov
and
or
popa
int3
mov
jnp
jae
xor
sbb
and
test
lds
push
out
mov
lock
lcall
aad
aam
ret
aaa
jmp
jae
aas
adc
movsl
repnz
sbb
test
in
test
notrack
pop
imul
mov
adc
clc
aaa
jle
jge
add
ljmp
test
nopl
cmpb
shrl
fnstenv
daa
jns
mov
stc
jae
xchg
or
dec
cmpsl
aaa
adc
cmc
push
inc
pop
and
ss
lods
mov
sub
movsl
add
jns
push
jne
lods
shlb
mov
mov
hlt
inc
cli
stos
pop
jl
mov
dec
orb
stos
clc
jae
xchg
testl
pop
inc
mov
xchg
ret
and
aam
add
adc
addr16
ja
jno
adc
je
xor
int3
dec
clc
out
loop
inc
jp
dec
mov
in
fwait
jne
dec
iret
and
mov
cwtl
lret
aad
pop
sbb
sub
das
jae
loope
adc
in
movsb
pop
iret
ret
xchg
sub
rep
sbb
cmp
xor
pop
sbb
cltd
sub
lret
in
pop
adcb
call
ds
or
stc
inc
add
adc
cmc
mov
cmp
pop
xor
ja
push
hlt
arpl
push
mov
inc
test
repz
fwait
pop
into
fwait
in
lahf
dec
dec
insl
call
pusha
clc
int3
sub
and
xchg
cmp
cmp
shl
je
cld
sbb
mov
pop
test
xchg
pop
mov
ret
pop
imul
mov
das
in
lods
inc
xorb
mov
pushf
in
mov
clc
and
lods
or
push
das
mov
jns
mov
dec
or
inc
cmpsl
test
xchg
pop
mov
test
insb
shlb
fists
adc
mov
std
pop
xor
ja
in
sti
jno
ljmp
cmpsb
ja
jle
jmp
mov
pop
loop
hlt
and
pop
in
lea
popf
movsl
jecxz
fnstcw
scas
loop
stc
adc
mov
data16
dec
and
es
or
xor
je
jne
pop
or
push
push
cmp
lret
adc
cmp
out
dec
cmp
imul
hlt
sub
scas
jne
out
xchg
loope
popf
xchg
ficomps
pcmpeqd
and
andb
inc
sub
mov
push
sbb
icebp
jecxz
in
dec
hlt
mov
je
orps
and
mov
testb
sub
xchg
lods
push
nop
pop
leave
pop
scas
mov
fs
lret
push
rclb
dec
push
into
andl
test
adc
gs
fs
pop
and
loopne
into
add
sti
fucomip
ja
pop
nop
popa
lds
jecxz
sarb
jnp
sbb
mov
mov
push
ret
dec
push
icebp
jle
jmp
popf
add
jle
pop
mov
xor
sub
cmp
ds
je
dec
pop
scas
mov
out
adcb
jae
or
movsb
pop
clc
jae
jmp
cmpsb
pop
hlt
lea
cltd
mov
out
pop
dec
mov
dec
add
sahf
pop
pop
insb
push
pop
shr
push
push
scas
cmp
mov
pop
jl
mov
or
mov
hlt
jl
cmpsl
outsl
add
pop
sbb
enter
cltd
stos
add
mov
jle
mov
nop
cmp
cltd
in
or
icebp
test
movsb
repz
aam
sbb
inc
inc
mov
xchg
dec
mov
pop
mov
in
mov
pusha
fst
out
jbe
into
xor
dec
pop
fdiv
cwtl
pop
rcrl
in
jae
mov
add
test
das
jb
andb
insl
in
fdivs
arpl
stos
mov
loop
and
mov
sahf
jle,pt
adc
in
mov
lret
xor
cwtl
pop
lds
inc
push
sub
xor
hlt
mov
lret
mov
and
inc
mov
aaa
cmpl
inc
ficomps
dec
mov
mov
push
xchg
jl
test
jno
pop
push
movsl
fwait
and
dec
sbb
mov
push
insb
scas
das
inc
mov
dec
sbb
and
arpl
inc
jg
imul
mov
shrb
lea
pop
pop
rorl
jo
test
test
shrb
imul
cmp
mov
testl
cmpsb
sub
leave
and
dec
sarb
js
push
mov
bound
mov
aam
in
filds
mov
add
push
andb
sub
fisttps
aaa
dec
sbb
jg
aaa
xor
mov
adc
mov
push
cltd
adc
pop
loope
das
xorl
jmp
mov
mov
std
or
xor
mov
cmp
pop
xchg
lods
sbb
xchg
jne
mov
negb
adc
xchg
pushf
ja
lret
sub
xlat
idivl
pop
test
ret
sbb
and
fcompl
mov
mov
mov
fcomps
xchg
xor
and
push
xor
mov
outsb
imul
outsl
int
ja
xor
pop
lds
jl
fdivrl
sahf
insl
ss
xchg
xchg
loopne
xchg
icebp
pop
xchg
stc
push
dec
les
add
mov
push
add
aam
es
bswap
stos
sbb
mov
and
cmp
xor
sub
in
xchg
lods
sub
mov
adc
lret
mov
data16
dec
lret
mov
sbb
int
test
test
ret
sbb
repnz
shrb
pop
and
jb
push
pop
cmp
and
push
push
xchg
cwtl
jne
shl
and
push
mov
insl
and
pop
pusha
dec
xlat
sti
jbe
adcb
movsb
leave
mov
add
mov
sbb
shlb
jle
or
mov
inc
inc
loope
hlt
in
outsb
mov
mov
xchg
pop
leave
arpl
fcompl
add
mov
inc
pop
and
mov
cmp
add
jge
jge
jb
scas
dec
test
add
mov
mov
push
jle
lods
xlat
iret
adc
sbb
shlb
mov
loopne
mov
out
repz
iret
imul
bound
aam
mov
push
jl
leave
in
push
add
fdivrl
loop
inc
mov
pop
fdivp
xchg
xor
int
pop
bound
lock
fwait
pop
cmp
negl
pop
aad
jbe
dec
push
add
js
and
cmp
mov
pop
mov
aas
mov
adc
push
cmpb
sub
in
xorl
addr16
in
ja
mov
xor
lea
rol
dec
lds
cli
jae
out
push
js
je
mov
push
cmpsb
nop
sub
leave
jne
or
clc
pop
xchg
neg
cmc
xchg
in
jl
push
add
mov
sahf
aam
cmp
jns
in
arpl
push
sarb
jmp
jmp
mov
push
sub
pusha
std
lock
pop
add
cmp
js
pop
mov
pop
outsb
pop
ds
mov
mov
pop
xorb
repnz
lcall
mov
jbe
xor
xchg
sbb
mov
fadds
mov
dec
mov
pop
push
adc
or
cwtl
dec
je
dec
push
js
pusha
add
or
sti
jno
cmp
jne
jae
xchg
push
mov
ret
dec
fsubl
jecxz
and
jecxz
mov
insb
xchg
test
es
clc
jae
jns
test
andb
or
pop
imul
dec
or
jle
jb
jae
mov
cmp
stos
mov
or
xorb
mov
adc
or
fsts
pop
fsubrl
jmp
stos
sar
and
int
mov
and
pushf
cmp
je
jne
sbb
repz
xchg
or
cli
inc
sub
or
fsubr
movsb
inc
xlat
insl
sbb
pop
adc
xor
ja
jne
push
sub
ja
dec
cltd
sti
jmp
jb
enter
pushf
cmp
outsl
test
jae
lea
fdivrl
mov
iret
mov
mov
clc
insb
fcmovnbe
popf
push
ja
jo
sti
or
mov
mov
in
dec
pop
pusha
pop
adc
std
das
rcl
xor
cmpsl
mov
out
adc
jae
in
mov
dec
add
jae
ficoms
sub
jb
hlt
imul
pusha
sbb
into
push
xor
ja
mov
shrb
or
push
nop
or
sub
lret
add
dec
btc
fwait
sarl
mov
addb
dec
sbb
cmc
sub
push
mov
xor
cmpsb
lea
gs
enter
bnd
cmp
jg
cmp
stc
mov
lods
fistl
out
mov
push
add
insb
lcall
xor
jb
jge
icebp
add
repz
or
mov
cltd
imul
mov
sbb
pop
pop
xchg
jae
dec
pusha
movsb
mov
daa
pop
cmp
mov
sahf
negl
loopne
loop
in
inc
xor
xchg
sbb
aas
push
mov
insb
lahf
mov
inc
ja
mov
sub
jge
stos
or
and
push
pop
std
xlat
inc
push
out
js
and
fistps
pop
popa
int3
jno
jne
adc
adc
hlt
xchg
ss
in
sbb
jge
jno
repz
mov
or
xchg
jae
iret
cmp
insb
push
mov
mov
das
pushf
mov
fs
sub
xor
inc
pop
pop
xor
cmp
outsb
inc
cmp
cs
xor
dec
faddl
mov
xor
test
and
mov
loope
fidivrs
jg
mov
mov
ljmp
rorb
movsl
push
cmpsb
std
lea
pop
repz
dec
aad
insb
mov
test
xchg
aad
imul
inc
cmp
sub
dec
jae
adc
clts
pusha
pop
add
adc
lea
stos
sbb
mov
arpl
lret
mov
sti
sarb
add
pusha
jae
icebp
sbb
mov
xor
adc
aas
dec
cmpsw
imul
lea
dec
mov
insl
push
or
sub
pop
pop
stos
or
jae
out
xchg
inc
and
pusha
dec
popf
xor
cld
lods
fildll
insb
mov
push
imull
adc
mov
arpl
imul
popf
adc
scas
call
ljmp
cwtl
scas
shlb
insb
addr16
aam
jae
cmpl
jbe
xor
lock
dec
pop
cld
imul
mov
xchg
in
ljmp
aam
xchg
pop
lods
aad
inc
iret
pusha
push
mov
mov
sub
jnp
jae
or
inc
add
and
outsl
imul
loopne
andb
jp
push
xchg
data16
test
jecxz
add
xchg
push
xor
sub
test
pusha
out
insb
mov
icebp
add
jno
fldcw
in
sub
aad
pusha
inc
clc
cmp
in
arpl
push
xor
out
inc
outsl
adc
mov
push
jle
mov
imul
enter
pop
inc
in
hlt
outsl
fs
sub
shlb
fwait
pusha
jno
add
add
sbb
jne
mov
mov
or
cwtl
std
and
pushf
mov
xor
push
icebp
dec
cwtl
pusha
cltd
lret
mov
arpl
ret
lock
mov
clc
aaa
mov
inc
cs
sbb
cmpsb
out
mov
inc
outsb
push
mov
lret
mov
popf
inc
jle
adc
cs
and
pop
imul
ret
outsl
push
push
mov
adc
or
clc
icebp
int
mov
fs
out
push
adc
push
pop
cli
pusha
imul
sar
pop
mov
leave
jb
add
mov
and
sbb
cli
in
mov
ljmp
jmp
ss
mov
mov
xor
inc
dec
loop
pop
inc
mov
repz
shrl
or
dec
in
and
loop
es
add
pop
icebp
sahf
clc
mov
mov
lds
data16
add
test
iret
and
repz
xor
mov
aaa
in
and
out
rolb
out
scas
push
nop
and
pop
push
jo
lret
pop
push
mov
es
mov
fmuls
mov
mov
adc
mov
out
ja
rol
cmp
mov
mov
mov
lds
test
pavgw
std
mov
cwtl
push
mov
jne
sub
mov
push
push
in
rcrb
iret
and
jno
push
dec
cmp
dec
data16
fists
movb
xchg
stos
test
adc
sub
mov
lods
xor
bswap
cmpsb
xchg
push
dec
lock
jbe
scas
fidivrs
aam
cmp
inc
aas
outsb
sub
in
test
mov
mov
push
sti
lcall
cmp
sub
ss
ret
xlat
movsb
imul
cmp
fwait
imul
mov
pop
subb
mov
xchg
imul
shll
data16
test
mov
lods
std
push
jae
push
arpl
sbb
inc
mov
aaa
sbb
in
adc
and
fdivl
scas
push
imul
add
sub
mov
fnstsw
and
rorb
xor
cmc
push
sub
and
add
mov
xor
cmp
sahf
subb
ja
xor
push
inc
jae
test
push
dec
jo
sti
mov
dec
mov
inc
mov
xchg
addr16
push
inc
add
test
outsb
dec
xchg
cmpsb
jae
leave
outsl
xor
mov
mov
sub
imul
cmp
int
cmp
aam
mov
cmp
sbb
cmp
shll
mov
stos
sub
mov
outsl
cmpsb
pop
sbb
push
data16
je
hlt
arpl
js
push
imul
out
nop
jge
cs
add
addb
cmpb
je
shl
iret
inc
adc
lahf
adc
or
lods
je
cmp
jle
lods
pop
insb
mov
sahf
push
dec
fstpl
sub
das
inc
je
clc
cmc
xchg
mov
pop
jle
sti
in
jge
aas
mov
cld
test
repz
pushf
adc
jae
cmc
loopne
push
out
jbe
mov
ficoms
mov
clc
mov
pop
vmread
add
pusha
imul
movsl
test
or
aam
imul
fwait
sub
push
mov
call
jmp
movsl
adc
mov
cmp
pop
rcrl
mov
jae
out
pop
aad
movsb
jecxz
sub
insb
data16
pushf
mov
xor
std
mov
cs
mov
sbb
inc
inc
inc
push
aam
sub
lea
mov
xchg
xchg
adc
cmc
dec
cmp
sbb
push
adc
addr16
jae
xor
lea
mov
int3
adc
cmp
sub
bound
sbb
leave
sub
jae
hlt
mov
pusha
int
es
jae
iret
je
cmp
mov
or
imul
ret
mov
jae
fs
call
fnstenv
data16
xor
cmc
cmp
ja
loopne
les
push
xchg
add
jnp
lea
xor
add
aaa
lahf
in
mov
je
andl
xchg
sub
mov
xchg
out
push
adc
mov
fcmovne
mov
xchg
clc
push
fildll
mov
or
jo
mov
jmp
inc
jno
jg
mov
fwait
es
jmp
imul
jmp
mov
cltd
pusha
lods
mov
bound
jb
shrl
jmp
ret
lret
pop
inc
xchg
mov
aaa
jmp
sub
mov
data16
mov
js
sbb
data16
aam
cmp
pushf
add
clc
lahf
fimuls
mov
cmpb
and
pop
aas
mov
int3
sub
outsb
sbb
dec
imul
mov
mov
imul
xlat
cmp
and
fld
inc
icebp
xor
popa
adc
jno
mov
jmp
cmpsl
leave
std
pop
push
cwtl
adc
cmpsb
lds
lahf
imul
jo
xchg
jae
pop
adc
addr16
lahf
cwtl
subb
in
pop
sub
cmpsb
scas
ss
inc
sub
jo
cmp
sub
aam
shl
xor
aaa
mov
out
adc
shlb
je
xchg
xchg
inc
mov
ss
in
movb
sub
cli
insl
call
sti
imul
jo
sub
pop
jle
cwtl
test
or
pop
pusha
xchg
icebp
arpl
inc
gs
sub
xchg
mov
lods
lcall
das
test
out
sbb
mov
sub
push
clc
sub
add
inc
roll
imul
shld
dec
out
out
lret
popf
push
push
pop
das
pop
jb
mov
iret
xlat
stc
pop
sahf
in
lods
sahf
imul
stc
mov
loop
cmc
test
jns
xchg
pop
push
das
mov
inc
popf
adc
push
out
inc
push
sahf
cmp
ja
or
jae
push
stos
and
loop
ficoml
pop
xchg
pop
inc
xchg
lods
jo
sti
jmp
movsl
inc
add
jmp
adc
fucomp
lea
mov
imul
loopne
hlt
imul
add
mov
mov
jecxz
insl
pop
ficoml
pop
fnsave
push
dec
icebp
imul
fmulp
push
jae
ret
pop
push
lahf
shlb
ja
sbb
sub
ljmp
imul
push
mov
push
popa
aaa
jne
jae
inc
nop
cmp
clc
pop
shll
jl
loop
or
push
cltd
imul
mov
jbe
pop
movsl
cmp
jnp
daa
cmp
ret
adc
adc
cmc
cmp
push
lock
jg
xchg
add
sti
mov
jp
dec
mov
jmp
test
xchg
xor
or
test
out
inc
pop
push
jmp
or
popf
lock
sub
cmp
xorb
inc
mov
add
dec
inc
movsb
jp
xchg
pop
mov
or
fsub
adc
loope
cltd
lcall
les
fstl
movsb
sub
test
ds
jno
mov
hlt
repnz
pop
adc
jae
js
sub
sbb
and
mov
cmpsl
in
test
inc
sub
add
or
pop
or
cmp
inc
insb
mov
mov
pop
and
ds
sbb
popf
out
and
fcomps
xorl
and
add
arpl
daa
adc
mov
dec
filds
mull
fisttps
adc
sub
xchg
fstpt
in
sbb
lock
in
fwait
push
and
push
or
jne
mov
adc
es
jl
xor
adcl
pop
scas
lahf
rcr
imul
repz
xchg
jbe
xchg
mov
jge
dec
fnstenv
insl
cmp
sbbl
cli
mov
lods
or
jae
sbbb
mov
sbb
int
sahf
lret
lea
jo
fwait
mov
mov
pusha
push
rol
adc
in
cmp
dec
in
mov
pop
push
movsl
or
jmp
mov
sbb
jl
mov
mov
dec
in
cmc
sbb
mov
daa
mov
sub
or
jb
inc
out
js
mov
lds
aam
cmp
sbb
push
or
outsb
lea
inc
ss
mov
lds
jne
out
arpl
enter
cmp
mov
push
and
jnp
loop
mov
dec
sti
jo
dec
sbb
mov
add
fdivs
adcl
into
push
mov
xor
mov
cmp
dec
mov
imul
jb
dec
movsb
pop
aam
insl
mov
lret
mov
inc
mov
out
jae
adc
ljmp
xor
lahf
mov
or
pop
int
pop
adcb
inc
mov
cmp
adc
inc
imul
popa
sbb
movsl
mov
xchg
mov
mov
sti
in
in
ds
arpl
dec
pop
into
aad
sbb
pop
shlb
pusha
mov
mov
movsl
mov
or
mov
mov
sbb
pop
cmp
lods
aaa
int
or
sub
das
mov
imul
mov
jmp
neg
sahf
pop
adc
call
or
pop
ljmp
repz
mov
addl
inc
mov
jae
or
add
cmp
push
lock
sarb
hlt
ja
and
ja
or
jbe
jae
fs
mov
jbe
inc
clc
adc
jecxz
push
nop
insl
dec
and
push
cmp
in
mov
std
cmp
jae
cmpl
mov
xchg
fisttpl
ds
out
push
push
stos
sbb
xor
push
sahf
scas
xor
sbb
mov
inc
push
xor
imul
jle
cmp
insl
sahf
test
inc
and
push
mov
dec
lds
mov
push
fbld
les
cmovnp
loopne
fwait
and
pushf
stos
sbb
cmp
xor
jne
mov
sbb
mov
pop
imul
mov
jg
mov
push
jne
ret
dec
je
push
adc
mov
lds
inc
enterw
adc
jecxz
xor
loop
and
call
mov
cmc
lods
mov
xor
aaa
add
cmpb
adc
pop
sub
jg
mov
sbb
cmp
pop
sub
xor
enter
push
ds
sbb
mov
imul
rclb
rol
scas
hlt
push
mov
inc
sbb
cmp
mulb
iret
jbe
out
mov
in
pop
aad
push
out
or
popf
sub
inc
mov
daa
mov
sti
enter
inc
add
or
add
xchg
adc
pop
adc
mov
rcll
movsl
mov
cld
pop
cmp
jo
call
into
dec
pop
int
shlb
mov
cmp
dec
inc
lret
mov
push
adc
push
shrl
inc
inc
xchg
subb
xor
inc
pop
jae
pop
and
pop
jne
movsl
imul
fstl
and
mov
sar
aaa
imul
in
imul
stos
sbb
mov
pushf
dec
popa
in
mov
sbb
jae
dec
mov
das
adc
push
mov
push
push
shrl
repz
js
ss
xchg
les
inc
stc
pop
addr16
fwait
scas
sarl
jb
popf
jno
inc
fnstenv
std
or
jo
jb
or
inc
xchg
inc
arpl
xor
sbb
sub
fbld
add
and
push
mov
cmp
xchg
lods
pop
imul
popf
lods
inc
jge
stc
push
rolb
push
imul
mov
xchg
lret
add
ret
arpl
push
int
sub
pop
andl
cmpsl
xor
mov
loop
sub
pop
add
dec
or
js
imul
call
push
mov
lea
mov
jle
pop
cmp
xlat
insb
mov
mov
neg
test
stc
ret
rolb
cmpsb
mov
fstpl
inc
pop
pop
fistpl
jmp
mov
push
ret
sub
sbb
iret
aad
pop
pop
mov
sbb
cwtl
or
sbbl
jae
sub
xor
push
in
fs
mov
ss
ja
jo
mull
fs
mov
dec
jae
lahf
rorl
pop
xor
mov
insb
dec
enter
push
jnp
mov
push
xchg
je
fidivs
sbb
mov
jnp
mov
mov
imul
mov
das
mov
roll
pop
aas
sbb
sub
cmc
add
add
inc
cmpsw
pusha
rcll
mov
xor
ja
or
push
xchg
cld
mov
call
jl
mov
xor
ja
or
add
adc
push
mov
sbbl
popa
outsb
pop
add
clc
aaa
imul
jae
movsb
add
inc
bound
sub
ret
adc
xor
add
mov
sbb
mov
int3
sub
andl
in
dec
mov
lcall
xor
mov
pop
mov
cli
or
xchg
jne
mov
in
inc
mov
xchg
addb
aaa
or
adc
out
push
push
sbb
mov
repnz
stc
lds
hlt
dec
jmp
mov
push
push
into
sbb
xchg
adc
mov
jno
outsb
jbe
ds
mov
and
jge
inc
lods
and
inc
loope
and
insb
je
xchg
test
inc
out
call
and
mov
imul
and
xchg
mov
enter
sbb
mov
push
lret
adc
sti
out
jg
adc
dec
inc
fs
adc
mov
roll
add
sahf
divw
xor
into
jnp
pop
xor
xor
inc
hlt
jmp
mov
pop
out
cmc
dec
hlt
out
jae
sti
xchg
out
cmc
rcr
cmp
orl
sbb
xlat
jmp
mov
lahf
adc
std
pop
lahf
inc
push
mov
aaa
movsb
mov
aam
iret
jo
sub
pop
push
mov
push
scas
adc
insb
jp
mov
xor
frstor
je
add
sub
ja
cmp
inc
stos
outsb
sub
cmpsl
out
out
push
jmp
xchg
int3
insl
pusha
ja
stos
insb
cmp
adc
rcrl
mov
in
and
in
out
or
mov
shlb
ss
push
mov
mov
hlt
jp
jmp
lods
lods
add
sub
pop
clc
insb
inc
cmp
dec
pop
pop
mov
or
sub
jae
sti
jo
xchg
fxch
or
xchg
pop
cmpsb
fldl
outsb
clc
pusha
scas
push
orl
cmp
cmp
mov
lods
xor
je
lea
lods
ret
add
push
je
xchg
in
data16
pop
pop
add
iret
or
inc
addr16
cmpsl
sahf
lds
xchg
lret
add
xor
aad
jmp
stos
lds
pop
push
pop
push
je
jae
fldt
mov
xchg
ds
popa
mov
inc
add
loope
mov
out
cmpsl
pop
iret
clc
inc
xchg
clc
test
es
inc
mov
push
add
imul
pushf
pop
inc
es
jo
mov
int3
ret
imul
fnstsw
xchg
mov
mov
aad
mov
dec
testl
add
imul
pop
adc
mov
jo
fbld
aam
mov
fldenv
jne
jae
outsb
dec
movsl
leave
addb
ror
push
sbb
and
sub
push
sub
adc
lret
fisubrs
xor
jbe
jae
aaa
rolb
ja
jb
push
mov
daa
fmul
mov
rcll
scas
outsb
into
ja
aas
insb
aam
and
jae
cmp
mov
jno
mov
mov
lods
daa
pop
das
push
mov
shlb
jns
jne
inc
xchg
je
sub
pusha
in
and
das
cs
pop
mov
aam
xor
fldenv
or
jb
add
xchg
das
mov
insl
divb
loope
or
sub
test
push
adc
mov
ret
or
js
cmp
sub
jb
jae
enter
es
sarb
jl
mov
movsb
jo
sbb
mov
add
adc
xor
dec
shll
inc
pop
jae
out
into
adc
mov
fldt
xor
xor
arpl
adc
dec
mov
sbb
and
jp
imul
ja
aaa
popa
cmp
push
and
mov
lret
out
adc
repnz
jmp
mov
jecxz
and
jae
lods
adc
int
int
dec
xchg
leave
imul
xor
enter
pop
jge
sahf
gs
xchg
test
aaa
cltd
dec
jae
xchg
cli
xor
inc
aam
in
mov
inc
inc
sbb
movsb
jo
pusha
mov
cmp
adcl
lret
imul
push
sub
cmpsl
addl
inc
pop
jne
mov
inc
stos
add
jle
imul
imul
mov
inc
jg
insl
adc
xchg
push
jmp
cmp
pop
jo
cmp
fsts
lcall
dec
cmp
sub
inc
pop
and
insb
sbb
loope
iret
gs
clc
ja
pop
test
xor
shll
push
rclb
and
adc
jg
push
sti
cltd
mov
leave
push
add
xchg
add
pop
push
jae
xor
mov
pop
sbb
pop
pop
mov
mov
sub
add
rolb
les
cld
push
dec
aad
push
jg
xchg
daa
adc
or
sub
movsl
mov
test
out
xchg
adc
pop
or
pop
jecxz
inc
hlt
psubb
nop
mov
pop
pop
mov
mov
mov
out
pop
xchg
rol
loopne
negb
cmpsb
adc
push
push
je
mov
push
pusha
test
jb
icebp
sbb
popa
xor
and
sub
cmpsl
ret
xor
movsb
mov
test
aam
lret
xor
pusha
pop
xchg
jae
pop
and
int3
sub
cmp
cld
jo
mov
push
xchg
imul
xor
divl
dec
loop
mov
je
imul
in
mov
loop
outsb
adc
jo
pop
jns
iret
out
and
dec
mov
enter
adc
adc
mov
jns
rcrl
testb
pop
sub
mov
inc
sbb
mov
xorl
rcrb
cmp
in
pop
xor
or
fmuls
fcomps
data16
into
inc
or
js
and
jbe
xchg
gs
les
cli
mov
jne
pop
testb
and
insl
cmc
addr16
cmpsb
jns
or
inc
stos
testl
or
pop
mov
bnd
add
imul
cli
mov
push
cmp
sbb
mov
cmc
mov
adc
push
ja
inc
mov
mov
cmpsb
pop
mov
jns
sub
lods
jo
mov
mov
jae
daa
iret
in
adc
pop
int3
stc
xchg
js
push
add
sub
dec
jle
jecxz
cwtl
and
testl
inc
cmp
js
jle
sbb
clc
adc
movsb
add
outsw
mov
ds
pop
scas
inc
mov
sbb
insb
jge
jecxz
inc
adc
ss
push
sbb
aad
ds
out
fcomps
lods
insb
enter
icebp
inc
insb
jge
xchg
jge
sub
mov
adc
nop
sub
jae
xor
ljmp
inc
les
pop
dec
jo
sti
leave
test
into
add
jo
mov
pop
cs
in
loope
fs
movb
jmp
imul
and
ret
inc
scas
mov
icebp
sbb
hlt
addl
jns
pop
loope
je
mov
fwait
pop
push
scas
xchg
test
lea
dec
mov
jae
xor
add
push
sbb
rolb
xor
leave
orb
insb
adc
mov
jo
pusha
addl
dec
pop
fwait
sti
or
mov
imul
popa
dec
mov
insb
lret
scas
imul
fcoms
stc
mov
lret
lods
push
mov
adc
subb
pusha
mov
dec
pop
call
xor
mov
into
movsl
loope
xor
nop
test
xchg
outsb
je
adc
popa
mov
fildl
in
xor
cs
repnz
adc
jl
clc
xor
aaa
pusha
push
ja
or
xchg
adc
fiadds
lods
jae
jmp
sub
pop
inc
xchg
movsl
in
jae
mov
mov
lea
mov
cmp
jg
sbb
aam
sub
push
inc
mov
test
jmp
push
imul
jae
loop
cmp
pusha
das
mov
sbb
pop
cli
mov
pop
insb
inc
insb
jg
fistl
cmp
test
dec
inc
sbb
mov
in
mov
mov
adc
inc
cli
mov
or
add
fadds
out
andl
outsb
add
scas
cmp
lods
stc
mov
and
add
fsub
push
lret
or
mov
cmp
add
sahf
cmc
mov
mov
mov
test
out
push
cmc
and
inc
dec
dec
test
cmp
jle
mov
sub
cwtl
inc
pusha
push
or
jl
xchg
mov
mov
xor
lock
lods
mov
jb
gs
sub
pop
jae
jae
lods
into
gs
test
jmp
sub
insb
dec
mov
xor
or
mov
lock
mov
pushf
shlb
outsl
test
xor
jae
popa
adc
pop
hlt
or
sub
arpl
outsl
cmpsb
mov
fisubs
sbb
movsl
ja
jae
xchg
into
pushf
loopne
arpl
sbb
mov
mov
fcompl
ljmp
cmp
mulb
jns
pop
cwtl
xor
jno
and
cmpsb
mov
xchg
cmp
jne
fdivp
cmp
cmp
pop
inc
sti
leave
or
dec
pushf
aam
fs
cwtl
push
add
sub
sub
adc
inc
repz
jmp
in
mov
sbb
repz
inc
fsubp
aad
mov
sub
in
imull
mov
orb
jmp
loopne
in
add
cltd
sub
idivb
pushf
push
push
xchg
jmp
adc
shlb
fiaddl
mov
les
dec
mov
in
xor
ljmp
bound
dec
mov
ja
xor
jge
push
and
imul
or
negb
mov
add
cmp
pop
jle
mov
push
iret
pop
cmp
xor
stos
es
fwait
jno
sub
incl
mov
iret
pop
and
jae
xchg
lds
loop
cli
lds
mov
or
out
filds
leave
insl
imul
ljmp
lea
xlat
mov
fsub
cmp
daa
les
dec
fistl
mov
cmc
mov
movsb
cmp
in
in
push
sbb
or
mov
mov
sub
lret
fdivs
cmpb
std
push
mov
dec
repnz
jbe
xor
sub
icebp
ja
shlb
mov
adc
fsub
xor
or
xor
mov
rolb
test
imul
cs
push
xor
outsl
mov
lahf
mov
stos
stc
loopne
or
je
jmp
outsb
iret
sub
movsb
mov
push
cli
pop
lret
icebp
sbb
mov
movsl
mov
jmp
aaa
fldt
push
scas
adc
into
cmc
ljmp
pop
push
inc
mov
aas
pusha
clc
mov
mov
jp
jb
or
int3
xlat
pop
xor
dec
lods
mov
add
je
xchg
cmc
arpl
js
xor
fiadds
enter
call
sbb
cmc
imul
adc
mov
ss
xchg
imul
or
vxorps
jo
adc
cltd
jo
data16
lret
icebp
sbb
ss
ja
cld
pop
cmp
jno
jp
fdivrs
push
mov
push
add
ja
stos
int3
test
mov
dec
xchg
mov
lret
mull
int
icebp
neg
imul
or
pop
loope
push
xchg
xchg
jae
aaa
sub
mov
xor
fwait
imul
sti
rorl
xchg
pop
test
jne
iret
dec
xor
inc
mov
pop
sarb
ja
popf
int
or
cwtl
pop
clc
push
popa
mov
sahf
sub
mov
jo
aaa
sahf
out
stc
mov
mov
inc
and
xchg
cmpsl
push
hlt
xor
insb
pop
or
xor
leave
outsb
pop
cltd
js
cmpsl
test
je
sbb
mov
dec
inc
ja
fisubrs
imulb
arpl
repnz
les
imul
ret
jns
scas
inc
aas
cmp
and
jns
nop
cltd
pushf
repnz
dec
or
inc
mov
and
sbb
inc
sbb
mov
bound
imul
adc
lds
cwtl
insb
jp
movsl
aam
ds
mov
or
dec
loop
bts
mov
movb
xorl
jp
sbbb
imul
sar
push
ss
das
fwait
stc
cmpsl
int
adc
sbb
movsb
xchg
mov
outsb
jae
aaa
sub
int3
add
loope
gs
scas
in
js
ret
mov
pop
lcall
lret
push
cmc
dec
jbe
push
mov
cmp
adc
xor
jp
xlat
lock
and
scas
push
cmp
notl
xor
testb
jb
adc
ret
scas
jmp
cmpl
pop
out
lcall
mov
and
enter
sub
pushf
pop
inc
leave
xchg
es
bound
and
loope
add
adc
xor
aaa
dec
add
mov
test
imul
mov
mov
jae
inc
shll
das
pop
fsubs
mov
outsl
jl
iret
dec
clc
xchg
icebp
fs
int3
jne
divb
pop
ficomps
jecxz
in
jae
mov
add
stos
xlat
mov
cmpsb
test
xor
lock
into
jl
push
cmp
jae
data16
mov
inc
imul
push
and
fildl
lea
jae
iret
xchg
sub
cmc
jno
add
ds
xor
mov
inc
mov
testb
push
aaa
loope
inc
sub
stc
mov
imul
data16
push
int
or
sbb
and
in
pop
aam
ss
jg
mov
pop
int
mov
push
movsl
jge
or
dec
outsb
pop
inc
imul
inc
inc
in
sub
mov
jle
faddl
rorb
jb
mov
ja
mov
mov
jno
adc
sub
icebp
imul
sar
adc
jecxz
push
jbe
adc
loopne
or
or
dec
pop
jge
mov
dec
inc
es
pop
xchg
out
jge
push
pop
xlat
pop
push
stos
pop
mov
imul
sbb
sub
cmp
fisubrs
push
jb
sbb
add
popf
dec
adc
loop
lahf
repz
inc
pop
push
out
ljmp
push
sahf
sub
mov
jecxz
xchg
addr16
clc
nop
xchg
mov
pop
or
jae
mov
sbb
xchg
dec
arpl
lea
daa
mov
inc
lret
fcoms
cwtl
jle
mov
in
or
ret
outsb
sahf
or
push
pop
dec
movsb
xor
test
mov
xlat
cmpsb
mov
dec
lock
andb
mov
subb
mov
fstpl
xor
iret
pusha
xchg
sub
adc
es
ss
in
pusha
popa
xchg
jae
popa
inc
mov
repz
push
hlt
aas
repz
mov
mov
mov
popa
stos
mov
stos
inc
sub
pop
jnp
mov
xchg
out
xchg
jae
sbb
stos
xchg
inc
and
pop
pop
xor
inc
mov
rcll
int3
stos
ror
pop
icebp
pop
outsl
ljmp
fucom
sbb
popa
dec
adc
sti
mov
jmp
cmp
mov
imul
je
lcall
mov
lea
imul
and
jo
mov
add
adcl
mov
gs
outsb
int
mov
insb
or
rcll
hlt
and
xchg
xchg
cmc
movsb
dec
bnd
xchg
jno
scas
cmp
pop
inc
adc
pusha
jae
adc
add
inc
mov
inc
mov
insb
cmpb
pop
jmp
adc
hlt
sbb
cmp
repz
mov
popf
loopne
xchg
out
call
and
dec
das
fimull
repz
add
pop
mov
pop
out
adc
jne
inc
adc
dec
mov
adc
mov
ret
int
out
in
ljmp
mov
push
pop
and
cs
test
lret
mov
sub
push
add
ja
dec
jns
cmpb
loop
loope
push
testl
add
insl
jle
push
mov
jl
nop
add
pushf
xorl
inc
push
add
stos
int3
data16
shlb
push
pusha
insb
push
push
cmp
jbe
fcoms
mov
in
add
mov
jge
pop
bnd
xchg
inc
add
push
mov
pop
inc
movsb
imul
aad
ja
sbb
inc
xlat
jmp
jle
pop
dec
and
in
xor
jle
cmp
aaa
jb
imul
pop
lret
mov
das
adc
xor
nop
dec
test
push
data16
pop
sbb
jecxz
stc
add
daa
das
mov
mov
imul
fwait
or
in
xor
jb
mov
adc
ja
dec
fsubl
mov
dec
test
aam
enter
or
add
dec
daa
or
jl
insl
sahf
cmp
into
jae
addr16
dec
fistl
andl
insl
int
pop
lahf
mov
xchg
shll
cmpsl
in
add
pop
jbe
imul
jae
xchg
fs
jecxz
jle
cmc
xor
jmp
sti
movsb
cmp
fnsave
ja
mov
mov
adcb
sub
mov
shll
jo
jmp
loop
imul
repz
ljmp
rolb
cmp
cmp
jecxz
loopne
mov
cli
test
push
test
xlat
outsb
push
jo
mov
cwtl
mov
in
mov
cmp
inc
jne
mov
in
add
cltd
cld
inc
jns
fists
pop
pop
je
cmc
adc
stos
sbb
in
insl
mov
xor
cltd
fwait
xor
pop
pcmpgtb
cli
fisubrl
fistpl
int
cmp
test
fmulp
xchg
cmpsb
jl
xchg
es
xor
fisubl
int
sbb
and
arpl
popa
adc
add
imul
sbb
mov
aaa
arpl
je
dec
and
inc
ljmp
add
jmp
xchg
dec
xchg
push
and
push
dec
rorl
mov
int3
mov
rorl
ja
dec
movsb
jne
push
and
xchg
stc
repz
mov
mov
ror
sub
mul
dec
in
shrb
sbb
jo
lahf
fmulp
clc
mov
pop
mov
subl
push
shr
xchg
pusha
arpl
fwait
push
imul
int3
or
jo
jg
mov
repz
inc
and
push
in
mov
sbbl
jecxz
push
or
fidivs
xchg
pop
inc
push
leave
xor
cmp
sub
stc
movsl
push
mov
mov
mov
movsl
add
sti
mov
ja
pop
add
pop
dec
lahf
imul
gs
lods
adc
fnstcw
add
fiaddl
pop
adc
xor
or
cmc
test
xchg
jle
clc
jae
xrelease
cmc
les
xchg
aam
outsb
cmp
add
xchg
cmp
pop
test
dec
cmpsb
inc
mov
inc
gs
mov
sbb
mov
imul
xor
in
movsl
and
jbe
or
movsl
dec
mov
sbb
aaa
mov
sbb
loope
inc
xchg
mov
ficoms
push
sahf
jne
pop
xchg
outsl
jle
mov
outsb
into
and
xlat
dec
adc
ss
dec
outsb
mov
jecxz
int
sbb
addb
and
lsl
adc
mov
dec
cmp
mov
jae
cltd
iret
test
sbb
lods
decl
dec
cmp
xchg
out
xchg
data16
push
mov
mov
out
mov
xchg
data16
out
mov
add
mov
jg
iret
cmp
cli
int
jmp
out
das
ds
jecxz,pt
fbstp
jmp
fsubrs
fiadds
xor
mov
in
repnz
mov
jmp
mov
sbb
stc
dec
mov
in
push
test
adc
hlt
xor
cmp
loope
in
adc
jns
push
sbb
int
test
iret
in
xchg
xchg
dec
sbb
xlat
ja
jno
lret
popl
pusha
ret
std
push
push
lea
and
and
inc
ja
xchg
hlt
and
dec
jns
fndisi(8087
ds
pop
inc
pop
mov
xor
pop
out
push
testb
jge
in
scas
insb
cmpsb
mov
fsubr
sub
mov
mov
dec
fldt
mov
cwtl
dec
mov
jecxz
ja
and
loop
add
rcrb
cmpsb
aad
jae
dec
ret
mov
mov
mov
mov
icebp
pop
movsl
aas
xor
xor
aaa
jae
pop
push
cmp
test
xchg
push
pop
push
je
test
arpl
and
call
into
cmp
ja
mov
fnstenv
test
adc
xchg
xor
or
adc
bound
fdivl
jl
mulb
xor
lret
pushf
xlat
cmpl
mov
xchg
xor
ja
loope
shl
or
xor
and
add
insl
mov
xchg
popa
and
out
lret
mov
loope
xchg
add
push
and
sbb
mov
ja
dec
inc
mov
jo
dec
fmul
inc
and
repnz
jno
inc
jae
int3
fstpt
sbb
dec
lock
insb
mov
decl
lods
push
fnstsw
pusha
jae
and
lods
pop
and
ds
frstor
xchg
mov
in
movsl
out
mov
or
mov
insb
dec
jno
cmp
sbb
imul
and
xchg
icebp
jae
lahf
pop
mov
mov
inc
int
inc
outsb
mov
roll
insl
test
enter
rcl
and
cmp
mov
je
adc
jae
adc
and
pop
jle
add
inc
cmp
imul
lea
mov
shll
bound
xchg
lds
scas
pop
cmc
add
fdiv
int
pop
add
push
and
xchg
xor
pop
out
mov
adc
push
sub
jbe
cmp
or
xchg
iret
lock
cmc
out
or
imul
adc
js
imul
sar
push
lcall
stos
imull
add
out
call
aas
jns
jg
cmp
adc
xchg
sti
jge
lret
imul
push
loop
mov
mov
test
adc
xchg
mov
fldt
data16
in
ret
add
xchg
test
mov
hlt
std
cld
xchg
cmc
cmp
js
jae
test
inc
pop
dec
ss
push
jo
sub
imul
jae
pop
xor
add
lock
enter
insb
idivl
aas
ss
jae
dec
push
fidivs
lds
jbe
fsubl
daa
jnp
int3
psubw
push
bound
inc
inc
jae
dec
test
xor
xor
aaa
inc
push
mov
daa
iret
imul
lods
lds
push
xchg
push
adc
test
inc
sahf
test
popf
push
xor
rorl
je
sahf
test
mov
xchg
jmp
addr16
and
lret
jle
adc
js
dec
mov
stos
pop
sub
frstor
inc
fsubrl
pop
sub
jo
cmp
jbe
mov
mov
sub
leave
outsb
xchg
pop
mov
int
outsl
mov
xor
pop
out
mov
pusha
jb
adc
lret
sahf
in
jb
jae
aas
xor
test
arpl
sbb
mov
cltd
xchg
adc
ja
push
cmp
inc
stc
lret
push
ss
ret
dec
clc
insl
hlt
push
sbb
dec
pusha
lods
inc
inc
popf
xor
imul
frstor
scas
outsl
jp
inc
jle
adc
je
sbb
out
fmull
outsl
cmp
fildll
push
and
scas
das
popa
inc
mov
mov
test
sahf
hlt
inc
ja
pop
jp
iret
add
push
pop
dec
je
jle
push
xchg
mov
pop
popa
aam
pop
shll
dec
inc
adc
push
leave
cmp
movl
ja
sub
mov
push
xchg
mov
aas
outsl
js
jo
out
lds
cs
adc
cmp
add
mov
jp
mov
insw
and
test
xor
xchg
in
push
lds
cltd
in
imul
cmpb
outsb
mov
dec
pop
mov
out
aaa
std
mov
sub
aaa
cmc
and
es
out
inc
shrl
les
pop
out
rclb
scas
and
cltd
or
mov
cwtl
imul
loopne
jecxz
mov
mov
ret
jo
jecxz
scas
subb
and
ds
jae
mov
ret
xchg
mov
es
in
pop
mov
mov
lret
lods
jns
inc
push
or
cmpb
mov
sub
rorb
out
xor
adc
xchg
fiadds
mov
outsl
notb
imul
push
push
push
mov
or
jge
jbe
and
aam
jne
or
push
push
xor
pusha
stos
adcb
fisubs
xchg
mov
mov
xor
popf
nop
test
daa
loop
out
mov
mov
and
shll
scas
sbb
out
rcll
les
cmp
lock
mov
lds
stc
jbe
popl
mov
out
mov
test
mov
adc
popf
pop
jo
xchg
negb
jl
xchg
es
xor
subb
jbe
mov
outsb
gs
jae
bound
inc
xchg
cmp
xor
xchg
xchg
inc
jne
jle
inc
mov
in
or
fcmovu
sub
cmpsl
cmp
cmpsl
mov
adc
loope
fstl
subb
adc
and
mov
cld
cmp
rol
cmc
inc
jnp
nop
mov
or
push
sub
dec
jns
jp
xor
rorl
enter
sbb
insb
fnstsw
lret
add
mov
jns
int3
stc
lret
mov
lods
test
cli
pop
jo
xor
mov
mov
adc
ret
dec
mov
inc
xor
imull
cltd
fidivrl
xchg
jl
daa
negb
sahf
lock
lds
mov
ja
or
outsb
jle
nop
popa
int
mov
adc
pop
jne
xchg
xchg
push
xor
inc
pusha
jae
dec
or
xchg
jne
fs
xor
and
repnz
int
cmp
hlt
scas
sub
sub
mov
jecxz
push
sbb
sub
jmp
repz
mov
roll
and
in
je
inc
jae
jne
xchg
pop
lods
push
fistpl
sahf
cmc
fcoms
cltd
mov
in
sbb
xchg
imul
not
mov
or
cmp
xchg
mov
dec
sti
stos
xchg
outsb
jg
dec
ss
divl
push
push
imul
cmp
lret
inc
mov
push
jmp
pushf
push
sub
cmp
mov
adc
sub
nop
pop
xor
movsb
or
inc
pushf
jp
jns
mov
mov
ja
or
fld
adc
stc
imul
fstpt
sbb
sbb
divl
sub
sahf
sbb
int
inc
jmp
add
jge
mov
pop
int
mov
cmp
sub
cld
aaa
push
push
pusha
mov
sahf
sbbb
nop
je
cmp
mov
jnp
cmpsb
jo
xchg
mov
adc
sahf
jnp
jb,pt
inc
inc
sarb
ss
into
jecxz
and
dec
pop
cld
xchg
sub
mov
pop
aaa
in
js
pop
inc
pop
add
call
push
outsb
jns
adc
cmpsb
dec
into
jp
test
mov
mov
lds
repz
jae
jecxz
adc
insb
xor
mov
mov
mov
mov
and
cmpb
jne
adc
mov
add
je
mov
cmp
mov
mov
lods
nop
xor
mov
jl
cltd
xchg
push
push
js
mov
jecxz
std
test
adc
push
nop
mov
mov
ds
leave
jbe
hlt
data16
adc
stc
jae
lahf
scas
lcall
mov
or
loop
mov
jae
lea
fiaddl
in
push
push
jg
mov
sbb
xchg
icebp
adc
push
mov
xchg
nop
ds
xchg
in
es
imul
pop
xor
imul
je
cmp
mov
movsl
push
int
sub
jl
mov
pop
jae
test
mov
subl
dec
sub
rol
inc
push
aad
lret
mov
xchg
adc
call
arpl
loopne
add
push
xchg
jbe
pop
and
sahf
cmpsb
mov
test
inc
movsb
loopne
cmc
jno
push
sbb
xor
xlat
movsb
and
sahf
jg
pop
xor
pop
adc
mov
sub
jl
popa
or
insb
cmp
jnp
jmp
mov
xlat
ds
loop
ss
pushf
in
and
pop
insb
cltd
xchg
std
imul
dec
jo
mov
mov
push
lcall
je
pop
popf
cltd
je
popf
aas
clc
push
setle
xlat
sbb
adc
xchg
ss
dec
xor
mov
push
jecxz
mov
adc
sub
les
dec
aad
jo
push
incl
inc
mov
add
ja
rcll
jle
sahf
in
shr
outsb
xchg
push
pop
cwtl
in
push
movsb
push
fwait
push
push
out
push
jae,pn
popf
pop
push
loope
out
dec
rcl
mov
pop
mov
adc
frstor
mov
xor
frstor
shll
xchg
jbe
xchg
mov
sti
and
ret
call
adc
movswl
mov
out
mov
cmp
sub
fldt
cmp
popa
in
mov
xor
mov
jae
pushf
cmp
dec
push
out
pop
xor
ss
adc
inc
mov
dec
cmc
and
ds
xlat
mov
aaa
xchg
xchg
jne
rorb
aam
fxrstor
test
ss
jle
idivb
mov
sbb
push
push
fdivrs
into
int
cmc
addb
sub
cmpb
fisttpl
push
movsb
and
pop
fs
pusha
jbe
mov
adc
sbb
or
insb
rol
lds
push
lds
mov
add
insb
pop
bound
xor
outsb
aam
popf
push
icebp
lcall
mov
in
rcrl
lods
mov
xchg
fdivl
push
mov
pusha
stc
pop
lret
ja
imul
xchg
mov
imul
gs
test
and
jae
rcl
add
jle
shr
pushl
ss
dec
movsl
push
arpl
mov
mov
scas
xchg
adc
xor
fildll
iret
or
sub
rcrb
mov
mov
push
sub
jae
fs
mov
xchg
mov
dec
or
stc
lret
cmc
movsb
cli
push
jb
mov
rcll
pop
cld
jmp
mov
in
rclb
dec
xchg
xchg
jle
xchg
dec
push
push
mov
fnstcw
jb
mov
sbb
xchg
pusha
testl
sbb
pop
sbb
hlt
adc
mov
insb
sbb
dec
or
dec
inc
imul
inc
jae
add
sub
addr16
xchg
cli
fwait
push
inc
push
data16
mov
sub
adc
jns
inc
jae
insb
sbb
adc
xor
fidivrl
cld
and
cld
pop
pop
js
push
and
into
jbe
jne
es
gs
inc
outsl
push
or
ret
lret
xor
ja
push
and
ss
testb
jmp
mov
and
xchg
xchg
in
pop
xor
jae
enter
dec
lcall
jecxz
lea
das
push
xchg
or
push
ds
jae
icebp
rcll
jbe
sub
imul
into
adcb
cmp
jae
out
pop
mov
inc
notl
cmp
daa
imul
add
push
cmp
mov
adc
mov
mov
pop
loopne
mov
jae
popf
jle
jae
inc
fistl
in
jmp
push
push
push
test
ljmp
cmc
push
and
mov
push
out
imul
push
pop
test
and
lds
es
xlat
cs
cld
xorl
add
xchg
repz
sti
xchg
ret
xchg
lahf
jns
scas
lea
mov
xchg
pop
pusha
mov
pushf
mov
inc
lds
inc
mov
mov
fidivs
pop
xchg
ss
jae
daa
roll
ljmp
lds
insb
lds
arpl
lret
sti
hlt
xchg
stos
js
push
int3
inc
pushf
lret
arpl
add
shl
cld
addb
jmp
jb
in
mov
scas
mov
push
adc
jle
mov
cwtl
clc
sub
adc
push
jecxz
ds
lock
loop
imul
cmp
cltd
or
sbb
pop
xchg
sbb
push
flds
jbe
jmp
inc
arpl
adc
pop
mov
test
iret
or
inc
mov
xchg
adc
bound
inc
push
cltd
aas
mov
aam
xlat
ja
xor
sbb
and
sahf
repz
jmp
popf
mov
test
mov
movsb
lcall
es
ja
fidivl
arpl
jecxz
add
add
mov
fs
pop
mov
mov
lock
inc
xchg
mov
mov
jg
inc
ds
sbb
pop
adc
add
fnstenv
dec
mov
add
mov
in
cli
stos
add
outsl
jecxz
add
loope
push
shrb
subl
mov
pmaxsw
adc
loope
mov
cmp
dec
xchg
push
push
js
pop
in
sub
out
shlb
mov
scas
mov
jae
into
ret
and
insb
inc
repz
scas
mov
ja
imul
jle
les
bound
xchg
lock
pusha
lahf
out
sbb
insb
sti
aam
cmp
mov
and
sbbb
and
dec
in
lahf
popa
arpl
lea
pop
push
data16
pop
push
dec
add
aad
and
push
sub
loopne
imul
sahf
bound
push
insb
popa
adc
scas
aaa
jae
in
or
in
clc
sub
mov
popf
cmp
inc
dec
add
xchg
repnz
fisubs
push
mov
lcall
jae
jae
in
call
cmp
fmul
mov
and
jmp
sub
mov
inc
aam
jo
pop
jle
lret
cmp
fstl
lods
sbbl
mov
int
mov
xchg
xor
sub
jo
inc
adc
push
lret
imul
jge
nop
dec
int
test
xor
stc
push
or
mov
sub
in
jo
adc
add
lret
mov
jge
pop
js
mov
repnz
pop
pop
or
dec
jbe
lods
xor
pusha
mov
movsl
addr16
xor
cltd
xor
leave
int
cmp
stc
aaa
shll
pop
adc
popf
fnstsw
jecxz
std
stos
data16
jmp
pop
jns
divb
pop
je
sub
lahf
cli
bound
inc
pop
das
or
dec
inc
repnz
and
or
iret
xchg
xlat
jecxz
or
std
outsl
sbb
out
xor
test
sbb
mov
imul
cmp
daa
insb
dec
pop
xor
std
test
iret
fcmovne
scas
xchg
mov
xor
ja
enter
insb
xor
testb
into
push
aaa
ficomps
mov
inc
push
jmp
iret
dec
inc
add
xchg
clc
lock
data16
in
and
mov
sbb
sub
loope
es
mov
xchg
adc
cltd
jae
mov
fcmovnu
dec
in
or
jae
je
xchg
subb
sub
or
cmp
xor
mov
pusha
test
sahf
loope
fisttpl
outsb
mov
lds
cmp
repnz
repnz
aam
iret
clc
in
inc
loopne
shlb
mov
rol
out
repz
mov
jmp
push
xor
ja
lret
add
jno
repz
loope
ss
inc
test
mov
in
cmp
xchg
aaa
imul
mov
xchg
adc
insl
push
pop
shrl
mov
push
fimuls
ja
jo
jle
mov
jl
xor
mov
pop
xor
stos
inc
jl
mov
mov
cltd
clc
call
jecxz
enter
cmp
mov
ret
repz
xchg
scas
sub
inc
scas
inc
mov
jge
lods
fldcw
ja
add
pop
cwtl
int
sbb
xchg
imul
fcmovb
insb
sti
jo
scas
loop
sbb
scas
lcall
lret
ljmp
inc
cmp
pusha
mov
adc
dec
cmp
imul
clc
xor
pop
push
sbb
test
xchg
leave
adc
fs
jmp
cmp
cmpsb
mov
mov
xor
adc
inc
adc
xchg
push
ljmp
or
jge
or
cmp
aad
xor
add
and
lret
jg
stos
mov
js
jae
mov
push
xchg
lds
cmc
test
pop
aam
cmc
adc
mov
inc
std
mov
jne
movsb
cmp
inc
cld
mov
mov
mov
fisttps
shll
mov
dec
lods
jo
xchg
ficoms
sbb
in
popf
outsb
sub
and
inc
pop
dec
jae
enter
mov
repz
adc
pop
lret
psrlq
pop
or
ss
sbb
add
sub
mov
adc
mov
cmp
add
into
loop
in
cwtl
test
adc
mov
sub
mov
sarb
enter
test
or
cli
pusha
lods
inc
and
add
mov
movsl
adc
sbb
mov
xchg
cmp
push
and
mov
mov
imul
int
mov
pop
push
lds
les
xchg
xor
mov
mov
jbe
mov
pop
in
jne
inc
int3
jmp
inc
sbb
jl
xchg
jae
mov
stos
jp
and
mov
dec
or
popf
xorb
adc
cmp
sub
faddl
mov
mov
or
ss
inc
cmp
es
ja
jne
or
fstpl
adc
aam
movsl
scas
push
cs
gs
sub
lea
mov
jae
pop
mov
addr16
add
movsl
std
daa
mov
repz
or
cmp
in
add
xor
ja
aad
mov
mov
mov
mov
test
or
pop
pop
int3
mov
xorb
lds
cltd
ret
imul
std
popa
ret
sub
cmp
sbb
push
adc
cmp
out
jle
aaa
xlat
ljmp
subl
mov
es
jnp
ret
sub
mov
add
mov
push
mov
cmpsl
icebp
xchg
sub
fldcw
xor
loopne
mov
adc
push
cmpsl
adc
mov
stos
gs
repz
cld
test
jle
mov
call
imul
jae
test
xor
aaa
imul
jge
sub
and
mov
out
aad
add
outsl
cmpsl
data16
cs
std
leave
jae
mov
pop
jl
adc
mov
lret
nop
mov
and
jne
mov
js
jp
push
inc
push
xor
jne
fmuls
test
pop
fisubs
enter
ja
sub
jge
xchg
push
imul
movsl
and
adc
mov
pusha
jmp
dec
pusha
mov
add
sbb
or
mov
adc
adcl
jns
repnz
and
test
lds
data16
mov
test
inc
xor
scas
lret
pop
cmp
outsb
inc
sub
pop
and
sbb
hlt
fmull
aaa
stos
mov
fs
xor
repnz
mov
mov
pop
mov
popa
adc
cmpl
mov
lcall
push
pushf
fstps
cwtl
sti
sbb
not
jb
jge
dec
mov
jl
aaa
dec
pop
dec
lret
xor
mov
scas
hlt
pop
mov
lret
sbb
push
mov
test
or
xchg
fmulp
jb
add
jae
dec
les
jg
mov
add
fbstp
fucom
mov
daa
fldl
mov
dec
sahf
insb
arpl
dec
and
push
or
aaa
pusha
loop
in
mov
inc
mov
cmc
push
mov
ss
fstpt
sbb
hlt
fs
xchg
xor
push
stc
imul
aad
and
es
inc
jmp
pop
jb
cli
call
pop
push
jg
or
add
sub
popa
inc
xchg
lret
jno
pusha
scas
je
sti
mov
int
jo,pn
test
lret
or
mov
xor
in
dec
mov
popa
pop
mov
adc
ds
ja
jl
in
xchg
inc
popl
imul
pushf
cmp
xor
aaa
mov
pop
ljmp
int
pushf
xchg
ljmp
push
mov
lock
mov
popf
lds
jl
mov
xchg
int3
sbb
mov
ret
ret
dec
push
cmp
mov
sub
dec
adc
adc
add
call
xchg
xchg
mov
sub
jae
les
test
sar
sub
scas
dec
inc
xor
test
ja
das
sarb
dec
call
pop
fisubrs
lcall
in
cltd
inc
push
dec
rcll
aam
sub
shll
aam
mov
mov
mov
jecxz
adc
movsb
and
jge
xchg
mov
movsb
mov
int3
aas
mov
bnd
and
hlt
je
shl
cwtl
imul
sub
ja
pop
xlat
outsb
inc
mov
or
mov
inc
test
bound
jbe
cmpb
jmp
andl
hlt
cmc
pusha
adc
sahf
lods
adc
out
loope
call
lret
adc
mov
aaa
mov
imul
xchg
dec
int3
call
mov
cmp
adc
or
pop
pop
sbb
cmpsb
cmpsl
mov
push
dec
fsubl
jae
pop
fisubrs
inc
cld
or
jae
dec
push
mov
repz
mov
and
ja
and
les
into
rcrb
lds
inc
in
jle
jl
mov
cwtl
in
mov
stos
outsb
xchg
and
mov
mov
daa
dec
shrl
sbb
dec
call
jge
mov
dec
pop
or
xor
cli
mov
mov
aas
push
adc
jmp
fwait
pop
imul
in
lea
mov
clc
push
pop
add
inc
lds
adc
xor
aaa
mov
nop
sbb
jo
cmp
mov
lahf
jg
mov
test
jbe
dec
addr16
push
imul
clc
ljmp
test
mov
adc
js
jle
or
flds
cmpsb
mov
sub
in
sub
cmp
xchg
jne
cwtl
adc
std
pusha
jl
and
mov
jmp
xchg
and
sbb
sbb
jmp
push
inc
cmp
popf
int3
adc
adc
ja
sub
lret
mov
mov
xchg
inc
sbbb
mov
scas
pop
movsl
es
adc
add
sub
lcall
sarl
or
stos
in
pop
xor
push
mov
add
mov
insb
sbb
call
pop
mov
lret
sbb
iret
test
mov
insb
cmp
sbb
sub
imul
addr16
push
std
std
xor
mov
cli
push
xchg
and
adc
mov
outsl
sub
hlt
cmp
ljmp
cmpb
testl
es
daa
fs
dec
into
pop
or
in
ja
shll
push
push
imul
js
fs
arpl
mov
jle
ss
and
xor
lds
mov
inc
jp
adc
sub
jle
cmpsl
popf
cld
or
mov
lds
cltd
mov
mov
mov
dec
into
cwtl
mov
jbe
add
incl
test
sbb
and
add
xchg
ss
pop
rcll
iret
and
imul
xchg
test
and
stos
and
jb
ja
adc
out
jae
inc
sub
push
jb
pop
xchg
adc
and
ret
adc
fsubrl
cwtl
pop
mov
mov
out
imul
xor
cmp
and
sbb
mov
aam
addb
push
sti
dec
pusha
ja
clc
imul
arpl
dec
or
xor
jae
mov
lods
outsl
push
aaa
insb
jmp
jmp
or
cmc
add
add
or
mov
stos
mov
rolb
adcb
jb
movsb
mov
sub
icebp
faddp
aad
push
cltd
jmp
pop
mov
ret
sub
out
jmp
orl
rcrl
ja
cmp
add
imul
bound
mov
mov
sbb
arpl
or
adc
xchg
outsl
and
jae
gs
je
push
xchg
rol
and
outsb
insb
arpl
ret
xor
mov
dec
mov
mov
das
adc
and
aaa
sahf
aam
push
cmp
push
mov
add
ds
cld
jl
aam
outsb
pop
mov
mov
jle
or
aad
xor
mov
jno
inc
aas
adc
shll
cmp
bound
push
lcall
lds
jb
movsl
addr16
or
stos
fwait
imul
aas
es
pop
mov
into
sahf
bound
adc
dec
insl
rcll
icebp
int
call
cmp
adc
ffree
test
sbb
outsl
mov
push
push
mov
xlat
push
inc
xor
cwtl
xor
xor
inc
push
arpl
insb
je
adc
mov
ja
sti
into
outsb
into
mov
inc
push
xchg
int3
nop
jae
out
jo
and
mov
popf
adcb
cs
outsb
jbe
subl
push
movsb
sbb
cmpl
adc
lods
push
rclb
data16
xchg
mov
push
jmp
ret
pop
lret
mov
fildl
cmp
mov
test
mov
add
lret
pop
inc
mov
dec
fwait
jo
jae
clc
inc
sahf
rcll
iret
adc
pop
stos
adc
negl
sub
scas
into
enter
pop
or
xorb
pop
jge
xor
int3
mov
pop
imul
sbb
inc
sbb
or
xor
xchg
scas
xchg
xchg
dec
push
mov
daa
psrlw
add
stos
push
xlat
imul
pop
ja
lods
sbb
imul
lds
xor
cwtl
cmpsb
test
in
mov
ja
jp
jbe
xchg
push
insb
cltd
jno
cmp
inc
jle
sahf
jae
xchg
jb
adc
test
inc
rorb
test
mov
fsubl
dec
lret
or
cmp
imul
aaa
lcall
mov
rclb
adc
ds
loopne
jnp
jle
and
sbb
lods
pop
pop
ljmp
sbb
aas
outsb
addr16
pop
test
lds
sub
inc
pusha
adc
cmp
movsb
sbb
cs
sub
es
cwtl
inc
ret
jle
icebp
daa
mov
cmpsl
out
mov
jl
in
jge
cmp
fisubrs
das
jg
ficoms
adc
pop
mov
jl
es
aam
fcmovnbe
jns
cmp
mov
jae
mov
mov
xor
xchg
adc
jl
or
mov
test
rcl
and
insl
daa
or
cmpsb
mov
cmp
xorl
fisttps
sahf
mov
out
mov
pusha
jae
aaa
sbb
push
insb
xchg
cmp
movntps
mov
idiv
inc
jg
mov
aaa
ja
push
fstps
inc
ss
data16
add
add
xchg
push
inc
xor
pop
cmpsl
movb
arpl
sbb
mov
inc
outsb
outsb
js
jle
mov
or
rcrl
jmp
mov
pusha
popf
adc
insb
fsts
add
iret
ret
cmpsl
xor
sub
mov
pop
jo
sub
jo
jae
popf
sub
clc
ja
pop
adc
hlt
lea
and
cmp
int
out
sbb
mov
inc
sbb
insb
pop
push
lds
call
jno
push
roll
dec
adc
adc
popf
mov
adc
inc
repz
dec
mov
fcomip
mov
js
dec
adc
cmc
pop
push
lcall
jmp
stc
inc
pusha
cmp
mov
pop
lea
sarl
add
jg
or
lret
mov
mov
out
js
adc
pusha
in
xchg
dec
paddsb
je
adc
or
jg
enter
lds
jno
jae
mov
fidivs
je
cli
push
dec
adc
mov
mov
inc
movsb
xor
and
and
aad
mov
out
mov
sub
sub
cld
leave
mov
movsb
inc
hlt
pop
adc
adc
mov
hlt
lods
stos
or
and
gs
mov
push
adc
insl
in
inc
cmp
ret
xor
add
pop
repz
sbb
xchg
aam
cltd
jle
push
ds
push
in
mov
mov
mov
xor
inc
mov
lret
outsb
add
imul
int3
lret
hlt
jl
xchg
mov
mov
stc
movsl
adc
xor
xchg
ja
test
hlt
enter
sbb
and
and
dec
pop
mov
sbb
out
outsb
mov
outsl
test
pop
xchg
lea
sti
add
test
pop
ja
lcall
xchg
mov
push
fstpt
pop
aam
cld
shl
adc
sbb
fldl
jb
cmp
jl
stc
adc
add
mov
push
movsb
pop
mov
fists
aas
ficoms
add
mov
insb
imul
or
pop
cmp
pop
sahf
scas
arpl
jecxz
cmp
push
push
inc
pop
pop
icebp
loop
divb
test
mov
mov
jmp
or
js
xor
imul
mov
loope
enter
movsl
sbb
outsl
iret
lret
push
add
inc
iret
ficoms
aam
fisttpll
cmp
jecxz
jae
in
mov
mov
adc
pop
inc
out
insb
stos
loope
es
pop
cmp
and
and
mov
and
es
xor
fwait
leave
and
in
inc
dec
pop
notl
in
scas
aam
adc
jbe
lods
sub
ret
or
adc
xchg
pop
mov
aaa
mov
sbb
mov
lock
mov
xor
sbb
cmpsb
shr
xor
mov
inc
or
insb
idiv
call
sbb
fstpl
jae
in
sub
mov
scas
mov
cld
xlat
in
jb
lret
pusha
sti
sub
out
xchg
fldenv
or
fs
xchg
insl
mov
push
pop
into
ja
jnp
sbb
dec
fdivr
arpl
pop
xorb
aas
ja
push
fimull
xor
imul
iret
sbb
stos
xchg
ja
dec
insb
mov
dec
dec
in
and
or
popa
and
pop
cmp
dec
roll
push
sub
cmpl
sti
aas
outsb
cwtl
jno
adc
scas
mov
scas
inc
addl
jbe
and
loop
push
aaa
xchg
and
mov
cmpsl
ds
lret
stc
jae
push
mov
out
xor
std
mov
lods
cmp
jbe
aam
fucom
and
push
jl
push
mulb
mov
ret
in
bound
pop
enter
xor
xor
cmp
mov
mov
dec
int
rcrb
aaa
cmp
xchg
sahf
rcrl
mov
jbe
jl
add
mov
mov
mov
mov
shl
push
lods
sbb
mulb
insb
pop
iret
call
js
repnz
mov
cltd
divb
xchg
in
lods
enter
fimull
sti
stos
xchg
mov
das
mov
testl
cmpsb
in
stc
xor
push
dec
add
jle
mov
mov
cmp
ja
cmpsl
cmp
sbb
sbb
movsb
xchg
imul
sub
push
mov
hlt
xor
rcll
ljmp
or
jecxz
cmp
jecxz
fisttps
pop
mov
xor
push
je
dec
popf
shrb
mov
iret
xor
and
outsb
in
stos
lock
mov
cltd
mov
sbb
fnstcw
mov
dec
sbb
lret
jae
inc
int3
cmp
sti
mov
cwtl
jge
adc
lds
mov
push
cmp
and
or
in
cmp
nop
mov
idivl
inc
lods
pusha
clc
mov
mov
aad
jo
xchg
mov
mov
cltd
pop
jecxz
add
cmp
sub
pop
sbb
jo
in
dec
enter
mov
inc
mov
inc
sub
pop
cwtl
pusha
aam
push
mov
pop
cmp
xchg
mov
pop
or
xchg
inc
js
adc
in
fistps
sub
imul
ja
jne
mov
scas
iret
inc
aaa
inc
lds
and
xchg
jo
repnz
loopne
div
lds
cltd
out
jge
push
sahf
aas
dec
jecxz
and
sbb
pop
jg
nop
sub
ja
jmp
jp
mov
mov
movsb
dec
and
dec
lock
fsubrs
rclb
pushf
sub
mov
sti
mov
loopne
jge
ss
adc
lds
xchg
push
pushf
aam
ret
jl
repnz
icebp
leave
sub
xchg
sahf
rcll
lds
mov
add
mov
mov
sbb
cmp
lret
sbb
jae
adc
inc
pushf
sub
cmp
jb
insb
push
gs
push
or
imul
insl
lods
roll
push
sbb
sub
test
jl
pusha
adc
out
jbe
sbb
pushf
shl
jmp
sarl
lods
xchg
sub
test
mov
jnp
daa
fucomi
into
clts
pop
xchg
je
mov
sub
stc
add
mov
mov
dec
adc
jbe
or
xor
xor
and
sbb
dec
push
adc
mov
fidivrs
mov
add
xchg
dec
jae
xor
or
arpl
cmpsl
dec
pop
pop
cwtl
cmp
adc
fwait
sar
dec
jae
ficomps
mov
cmc
sub
and
orl
mov
push
sbb
out
test
mov
cmp
loopne
and
mov
ret
mov
scas
movsl
out
ds
mov
stos
xor
scas
xor
dec
sub
inc
lahf
loope
mov
iret
subb
lds
jno
pop
and
rcll
sub
gs
xchg
ja
arpl
in
cltd
ret
mov
scas
pop
push
insl
iret
jl
and
dec
or
das
sahf
inc
test
call
aaa
xor
add
cmpsb
sbb
or
je
ret
xor
clc
xlat
hlt
stc
lea
cmp
xor
sub
mov
sub
inc
and
pop
fidivs
sti
sbb
aam
pushf
xor
bound
imul
jbe
pop
cwtl
sbbb
je
jl
mov
cmp
adc
push
mov
mov
stos
inc
movsb
icebp
adc
inc
lret
add
mov
dec
inc
sbb
loope
fisubl
pop
in
pop
sbb
daa
sti
or
dec
or
je
outsl
jmp
stos
add
pop
test
fisubrs
imulb
lods
ret
mov
dec
test
push
pop
out
pusha
mov
mov
inc
jl
adc
negb
pop
and
test
adc
sbb
mov
cs
cmpsl
xor
outsb
in
into
adc
nop
imul
loope
stos
in
pusha
lret
enter
sub
inc
es
cmp
imul
or
push
xor
lret
mov
aas
sbb
xor
xor
adc
int
and
jmp
ret
mov
pop
pop
pop
cmp
addr16
aam
into
movsb
out
mov
push
jbe
movsb
fiadds
dec
add
sub
mov
daa
add
sub
ret
inc
mov
repz
mov
frstor
mov
push
and
mov
ja
out
mov
push
lea
lcallw
ret
lods
test
shll
xchg
jg
ljmp
push
cmc
or
lahf
jo
ds
mov
insb
mov
adc
add
mov
cmpsb
pop
cs
movsb
push
into
fs
aad
movsl
out
popl
insl
test
jecxz
ret
jb
mov
rolb
jne
xor
arpl
fldcw
es
push
mov
movl
sbb
or
cs
inc
or
xchg
sbbl
push
in
jns
mov
mov
sub
cmp
mov
imul
cmp
andl
pop
sbb
cmc
cmc
inc
cs
mov
cld
movsl
pop
add
xor
cmp
aam
mov
cmc
sbb
push
call
cltd
mov
jl
xor
mov
jne
out
cmpsl
insl
divb
dec
inc
add
jge
mov
mov
jo
pop
repz
jmp
mov
jae
fmull
mov
cld
xor
imul
fdivl
dec
lret
push
imul
gs
and
sbb
sub
cli
in
or
sahf
lods
xor
pushf
cmpsb
stos
in
jg
xchg
sub
inc
std
cli
and
cs
and
aas
push
les
gs
xchg
enter
cmp
ret
jnp
or
cmp
inc
mov
hlt
mov
test
push
fiadds
ja
push
push
jb
adc
adc
and
jnp
jae
jmp
cmc
out
jo
imul
aam
in
out
stos
and
dec
sbb
inc
mov
scas
fldt
mov
push
out
adc
push
jge
aaa
and
pushf
outsl
sub
inc
movl
mov
push
cwtl
cmp
jmp
xor
fstpl
and
mov
mov
testb
cltd
lods
jge
jp
add
push
pop
add
subb
movsb
pushf
into
add
push
jae
and
ret
je
mov
mov
mov
ja
and
stos
xchg
lcall
stos
add
and
out
fisttps
and
insb
xorb
inc
mov
push
stc
gs
jns
inc
je
clc
mov
push
cmp
mov
imul
sbb
test
lods
rcl
mov
sbb
lret
pop
add
fisttpll
fmuls
sbb
xor
pop
jmp
jo
jae
adcl
je
pop
jge
cs
mov
xor
mov
jp
push
mov
mov
out
aas
lock
push
shl
test
xchg
sub
inc
test
ds
imul
or
std
int
scas
jns
sti
mov
mov
sti
aas
ss
jb
stos
ja
xor
lds
sub
clc
xor
dec
xchg
jbe
xor
movsb
cmp
std
jge
lods
jge
scas
add
jl
mov
rcrl
jne
inc
test
mov
mov
pop
mov
xor
mov
sub
mov
lret
into
in
out
test
daa
fadds
ret
js
push
rclb
movsb
sbb
incl
pop
and
clc
aam
mov
and
xor
xchg
pop
dec
aas
jmp
adc
jbe
cmp
clc
daa
fwait
mov
jecxz
mov
jbe
sti
mov
jbe
jo
cmc
aaa
xor
loop
int3
cli
mov
pop
movsl
movsl
xchg
mov
mov
mov
cmpsb
cld
lcall
inc
outsl
xor
out
inc
ds
lcall
sub
imul
push
cmp
mov
fmuls
mov
stc
add
aaa
fmul
xchg
insl
dec
jecxz
push
aaa
dec
pop
lret
out
cmpsl
push
movsb
jb
cwtl
mov
cltd
push
std
clc
in
aas
inc
ja
loope
xchg
shrl
gs
cs
xchg
mov
imul
cli
inc
push
push
jae
arpl
mov
dec
pusha
or
and
xor
jae
mov
mov
out
hlt
aam
es
pop
test
fwait
mov
sbb
or
insb
loope
test
cmp
mov
iret
fistpl
adc
lods
and
std
fwait
mov
in
fimuls
lret
adc
mov
xchg
out
das
pushf
adc
jno
scas
clc
cmp
call
jg
insb
adc
jg
mov
into
test
xor
rcr
jbe
sub
lods
clc
in
inc
aam
mov
stos
lods
sbbb
imul
mov
int
dec
jns
push
inc
jl
popa
xchg
jnp
cmp
xchg
dec
fnstenv
xorl
mov
and
jecxz
xchg
cwtl
mov
xchg
adc
mov
int
xchg
sahf
mov
pop
dec
notl
xchg
es
or
sarl
out
ja
movsl
xchg
and
insl
gs
scas
pop
mov
movsl
push
pop
mov
cwtl
hlt
inc
jecxz
mov
jo
ret
lret
inc
scas
xchg
sbb
loop
cmp
into
jae
xchg
mov
mov
jbe
xchg
lahf
dec
in
sub
add
shl
xor
jl
movsb
xor
je
jmp
mov
xchg
cmpl
jl
lea
ss
mov
mov
in
lret
filds
iret
inc
scas
cld
ja
jae
lea
imul
sti
mov
fisttpl
and
sbb
inc
les
mov
in
inc
jl
lret
repz
xchg
repnz
and
inc
push
and
xlat
mov
arpl
repnz
hlt
and
mov
negl
scas
shrl
dec
pop
cmp
rcll
in
in
adc
out
aas
mov
popl
in
pop
shl
jl
movsl
popf
mov
add
sub
rolb
or
push
add
js
ret
jg
leave
mov
add
hlt
daa
rcrb
jae
push
xchg
int3
sub
clc
scas
jle
jmp
push
sbb
lret
test
mov
hlt
mov
xchg
dec
stc
iret
push
iret
add
fisttpl
insb
lahf
lret
outsb
iret
jae
jae
out
push
xlat
xchg
vpsrlq
dec
in
mov
test
movsl
dec
or
test
mov
mov
push
lds
sub
andl
push
lea
xchg
ljmp
sti
push
mov
inc
xchg
xchg
daa
stc
sbb
cltd
jae
mov
int3
fsubl
cli
shrl
incb
jg
or
xor
lcall
cmpsb
ja
out
pop
ret
push
push
inc
dec
inc
sbb
test
hlt
jae
mov
mov
bound
negb
aad
and
mov
lcall
mov
outsb
out
fdivs
dec
add
popa
insb
pop
imul
outsb
popl
jl
push
dec
add
xchg
and
sub
xor
sbb
cltd
lret
and
lods
adc
loope
and
pop
out
sbb
scas
push
mov
or
pop
repnz
int3
sub
icebp
ret
cmp
aaa
push
mov
pop
fcomps
push
cmp
in
data16
movsb
je
adc
dec
lcall
xorl
fnstcw
jb
jmp
idivb
mov
jb
mov
adc
lods
jecxz
stos
popa
and
imul
adc
jle
cmp
hlt
xor
mov
xchg
xor
pop
imul
push
mov
mov
out
int3
sub
mov
aaa
inc
sbb
or
rorb
mulb
pop
movsbl
push
rol
push
daa
sbb
inc
outsb
cmp
imul
lret
adc
popl
fwait
mov
push
pop
pop
add
cmpsb
xor
jns
and
cmp
fildl
inc
mov
xor
jae
cld
daa
in
mov
jmp
test
add
pop
jp
sbb
pop
test
and
cs
adc
ja
mov
out
cwtl
cmc
pop
xor
push
mov
aam
jae
push
jmp
xor
pop
fs
mov
pusha
mov
and
ret
loopne
pop
cmp
ja
and
idivb
mov
mov
push
push
inc
jo
addr16
sbbb
pop
ret
arpl
roll
push
negl
mov
jbe
add
jae
inc
test
hlt
pop
mov
sub
adc
stos
adc
scas
in
in
push
sbb
int
jecxz
mov
aas
int3
les
out
aaa
sub
pop
push
sti
adcl
stos
inc
pop
xor
jns
jae
add
push
int
in
arpl
insb
cwtl
pop
jne
cld
lds
xor
xchg
xchg
adc
mov
gs
pop
jae
adcl
imul
xor
mov
addr16
xchg
arpl
or
ffree
pop
dec
mov
sub
jle
iret
js
imul
dec
ja
out
bnd
in
data16
aas
movsl
imul
mov
adc
imul
mov
bound
push
jmp
push
add
fisubl
pop
notl
stos
dec
mull
jo,pn
icebp
mov
das
mov
imul
adc
mov
lret
imul
jp
push
in
and
subb
adc
jae
mov
inc
and
mov
inc
loope
cmpb
lcall
aam
push
mov
inc
cmp
sbb
jle
nop
loope
lret
inc
arpl
push
jno
ds
mov
orl
dec
aaa
popa
push
mov
jge
push
sub
icebp
inc
push
pop
movsb
adc
mov
data16
jmp
fistpl
sub
adc
mov
push
rclb
lds
imul
test
sbb
push
adc
sbb
fs
pop
imul
and
push
loopne
repnz
add
out
aam
fwait
jecxz
mov
enter
dec
cmp
bound
inc
arpl
dec
jmp
fldt
pop
mov
pop
lret
push
dec
test
repz
inc
cltd
inc
aaa
in
rorl
dec
js
rcrl
pop
in
jecxz
xor
fdivrs
imul
jle
lahf
jg
xor
push
call
mov
addr16
and
in
pop
stc
sahf
data16
pop
out
dec
imul
test
mov
mov
jae
mov
testl
and
mov
inc
sti
test
and
xchg
mov
fistps
call
xor
loop
xchg
push
frstor
pop
ret
adc
fs
mov
addr16
lahf
ret
mov
into
mov
mov
push
inc
aaa
add
mov
inc
sbb
dec
mov
mov
inc
inc
xorl
mov
test
repz
xchg
mov
jecxz
jg
or
or
jo
cld
jp
lret
inc
fidivl
gs
jae
mov
std
out
fwait
push
imul
cmp
hlt
mov
pop
jle
outsb
jecxz
adc
seta
clc
push
jg
js
fbld
test
dec
dec
adc
cli
aas
lods
xor
mov
test
sbb
mov
das
jae
aas
bound
mov
push
mov
aaa
and
lods
push
jns
or
adc
daa
ds
cmpsl
notl
and
orb
pop
adc
adc
xor
imul
pop
jae
in
pop
dec
scas
dec
dec
push
lods
xlat
je
stc
adc
dec
dec
jo
fbstp
popf
dec
inc
sub
jo
loopne
cwtl
into
or
notb
jg
je
mov
adc
arpl
lret
test
pop
inc
fnstsw
adc
cmp
dec
fucomi
aas
adc
and
rcrb
mov
fdivl
push
xor
cmc
sti
xor
cmpb
and
mov
mov
inc
sbb
das
mov
lods
out
clc
sarb
xor
mov
popa
sub
jecxz
push
aas
or
out
rorl
cmpsb
rol
imul
pop
int
fldenv
lods
arpl
nop
std
sub
mov
arpl
ja
cmp
daa
sub
xchg
loopne
imul
pop
jbe
stc
cmp
daa
jbe
idivb
ficoms
lret
mov
lret
pushf
popa
sbb
cwtl
dec
xchg
mov
mov
cmp
adc
aam
xchg
sbb
dec
mov
jns
pmullw
inc
mov
add
adc
hlt
mov
ja
ficomps
pop
cltd
sub
mov
mov
pop
mov
sub
aam
fwait
adc
jbe
stos
mov
aam
mov
pop
cltd
add
cli
imull
adc
and
test
lea
pop
shr
lds
pop
popa
pop
test
dec
xor
in
add
mov
sub
in
mov
mov
mov
mov
hlt
lret
insb
xchg
mov
test
jp
dec
call
push
outsl
mov
adc
fucomp
jnp
mov
js
nopl
or
adc
cld
lret
test
pop
add
pusha
push
add
mov
call
mov
movsb
nop
imul
jl
out
loope
fwait
push
pop
dec
fidivs
js
mov
addr16
inc
jae
push
leave
xchg
mov
stos
out
stos
push
push
inc
mov
test
fisttpl
push
icebp
mov
and
cwtl
cwtl
xor
push
lea
movsl
or
insb
fdivrp
jns
jns
lret
stos
leave
clc
pop
pop
fwait
out
dec
lret
hlt
lods
ja
shrb
popa
addr16
mov
setae
inc
jge
iret
push
mov
jl
lods
adcb
movsb
xchg
jbe
ja
mov
xchg
push
xchg
cmp
int
adc
imul
sbb
add
andl
out
les
xchg
jae
ja
imul
das
pop
loop
mov
and
addr16
push
sub
inc
movsb
loopne
ret
push
inc
out
jae
jp
aas
out
lea
aam
data16
cmp
pop
outsl
jl
jo
and
pop
fdiv
jbe
cmp
popa
dec
popa
jmp
mov
xchg
test
or
push
pushf
aad
outsl
popa
xchg
fbstp
sbbb
jb
add
lea
movsb
pusha
jge
pop
lcall
pop
inc
test
test
sbb
push
popa
jno
aas
push
bound
movsb
in
in
push
jbe
mov
test
mov
mov
xchg
js
jae
cli
adc
inc
imul
jecxz
test
push
lret
pop
jmp
inc
mov
cmp
test
js
sub
js
aam
mov
cmp
jne
insl
cmp
cmp
test
mov
fidivl
imul
inc
pop
mov
xor
arpl
lea
cmp
es
les
out
xchg
mov
jb
aas
dec
movsb
test
dec
cld
add
mov
leave
ret
mov
sbb
mov
ja
mov
pop
enter
or
movsb
mov
lods
jp
xor
fisttpll
dec
xor
push
je
stos
sets
div
pop
push
imul
ret
jl
movsl
or
cmp
mov
fs
and
mov
jp
add
dec
inc
xor
mov
inc
push
mov
adc
jecxz
xchg
jge
sbbb
sti
cmp
add
mov
shrb
int
ror
mov
pop
pushf
cmpsl
mov
dec
dec
stos
inc
and
push
mov
jg
ja
orb
fidivl
jne
sub
dec
sub
sbb
jns
mov
imul
mov
and
pop
dec
es
pop
sahf
mov
dec
jae
clc
cltd
xlat
push
pusha
rorb
adc
cmpsb
push
add
shlb
mov
inc
jo
ret
push
scas
pop
aaa
in
rcrl
call
sub
test
addb
cmpsb
xchg
jne
repnz
cmpsl
jb
xchg
adc
int
cld
pop
dec
mov
int
add
aas
xor
dec
pop
shr
dec
int
cmpsl
data16
dec
inc
push
test
stc
adc
and
mov
dec
adc
xor
repnz
inc
outsb
mov
shrl
stos
out
mov
xor
aas
data16
adc
adc
ds
xchg
or
movl
ja
inc
xchg
mov
dec
dec
push
mov
out
adc
adc
inc
clc
ja
sub
dec
add
xor
scas
shlb
ja
aas
xchg
pop
or
mov
sbb
sub
cmp
jge
cltd
insb
sti
pusha
cmp
iret
mov
mov
imul
and
xchg
ds
cli
clc
jo
bound
jae
test
mov
cwtl
movsl
mov
inc
ss
cmp
clc
xchg
pop
dec
cmp
pop
sbb
lahf
mov
lds
arpl
nop
jo
mov
and
pop
inc
mov
dec
mov
push
ja
dec
push
mov
mov
fmuls
cmpsb
in
sub
xchg
es
cmpsb
inc
inc
scas
or
adc
sbbl
dec
or
pushf
inc
push
jns
inc
xorb
es
testb
add
pop
push
loope
insl
cmp
rcrb
or
into
mov
movsb
addr16
call
mov
aaa
mov
scas
adc
xor
mov
inc
loop
pop
pop
mov
xor
mov
adc
ljmp
dec
or
repnz
cli
mov
xchg
dec
lds
pop
pop
xor
mov
dec
xor
hlt
mov
int
xchg
sbb
pop
out
pop
clc
iret
dec
je
dec
sbb
fldenv
test
jo
lds
stos
mov
xor
enter
xlat
dec
lods
sbb
jns
test
iret
rcrl
lds
aam
add
ljmp
stos
adc
inc
inc
mov
adc
jl
xchg
sub
jl
and
lock
xor
rcll
cmp
cmc
dec
dec
mov
pop
insb
sarl
lret
adcb
arpl
data16
pop
push
cmp
cltd
adc
and
je
fadd
mov
cld
pop
aaa
fisubrs
js
dec
aam
pop
outsb
mov
int3
ljmp
push
pushf
jmp
inc
and
outsb
lahf
mov
lds
xchg
pop
addb
outsb
sub
dec
or
mov
cmp
pushf
cmpsb
or
loop
scas
call
cwtl
sahf
sarb
fbld
les
gs
push
js
ljmp
xchg
lret
adc
push
jmp
push
imul
xchg
adc
cmp
mov
popa
in
popa
mov
stc
mov
addr16
fimuls
js
jae
jb
mov
roll
jmp
mov
mov
repz
mov
mov
or
in
sub
into
nop
clc
xor
dec
cs
popf
mov
jg
enter
aad
insl
lret
mov
stc
ficoms
mov
scas
jae
mov
and
out
xor
repz
push
sbb
mov
jae
pop
cmp
loope
pusha
es
jns
repz
jl
cmp
xchg
mov
lret
push
push
or
mov
add
sub
jo
sti
sbb
ja
push
pushf
dec
adc
inc
gs
enter
aaa
js
mov
int
jl
fcoms
jnp
push
jae
inc
outsb
or
js
pop
insb
imul
sbb
push
mov
repnz
mov
fidivs
add
mov
jecxz
test
stc
adc
das
aam
stos
and
mov
insb
inc
incl
sbb
int3
clc
mov
xchg
mov
jno
cli
scas
xchg
adc
in
dec
adc
mov
jo
xchg
imul
dec
or
inc
push
aas
fs
sub
mov
push
div
cmp
push
jns
movb
aam
in
fisttpl
lret
outsl
jecxz
ljmp
test
je
pop
sti
imul
test
into
fwait
xor
or
cld
outsl
or
xor
aad
adc
mov
push
ficoml
inc
arpl
mov
add
imul
pop
pop
jno
xor
out
push
pop
jo
jle
das
fmul
dec
insb
jle
mov
and
sbb
push
and
lods
test
daa
cs
xor
out
enter
psubq
pop
fdivl
push
int3
xor
push
push
popf
mov
sub
jno
or
sub
into
in
in
push
and
cwtl
pop
and
lock
clc
cli
sti
adcb
jae
test
or
repz
pop
sub
scas
roll
pop
pusha
imul
cmc
insb
jae
mov
popf
jmp
test
shll
sub
cli
add
pop
roll
cmc
outsb
push
neg
into
in
lahf
fs
icebp
pop
jae
andl
xor
imul
pop
dec
add
mov
adc
aaa
fs
mov
jnp
imul
sbb
mov
cmp
fstps
pop
lret
fs
mov
or
int
jl
and
push
dec
movsb
xor
ret
frstor
mov
add
stos
sbb
mov
sahf
push
pushf
jo
jg
stos
or
movsl
jge
shl
cmpsb
aam
push
pop
push
mov
leave
sahf
add
mov
roll
mov
or
popf
aad
shll
rolb
mulb
imul
adc
mov
inc
jle
int
sbb
inc
mov
push
xor
mov
cmp
mov
sub
rorb
jne
movsb
cs
jge
mov
dec
jb
sbb
push
dec
js
push
fldenv
push
imul
mov
jno
add
stc
jae
mov
inc
aam
call
jle
push
gs
fisttpl
lods
adc
ret
fxch
or
lods
les
aaa
ret
jb
jns
xchg
mov
insb
pushf
mov
sub
jbe
loop
cmpl
hlt
mov
push
or
cmc
jmp
aad
jo
mov
add
pop
lret
test
sbb
rcr
or
pop
sub
pop
ficoms
imul
push
das
aam
fldl
xchg
xor
fnsave
push
into
sub
inc
jmp
ds
sbb
gs
cmp
push
lret
mov
push
mov
andb
pop
jae
out
movsl
or
ret
out
inc
aad
ret
imul
pop
jp
mov
cmp
jbe
aas
dec
bnd
or
jle
out
mov
int
jmp
lret
outsl
test
das
cld
mov
ja
mov
fwait
hlt
jo
jae
pxor
sbb
jmp
mov
jp
sbb
inc
jne
popl
aaa
xchg
addr16
iret
xchg
ja
push
lds
add
dec
in
or
jae
in
pop
mov
sahf
fxch
sti
pop
jecxz
iret
fldcw
mov
or
int3
lret
movsb
jmp
scas
xor
movsb
sub
dec
lds
push
sbb
clc
pop
sub
cs
cmp
ds
aas
add
test
jge
push
shll
stos
and
push
roll
or
push
js
xchg
and
fs
pop
inc
insb
xchg
cmovno
jecxz
mov
push
pop
mov
sarl
dec
and
xchg
aad
adc
insl
mov
data16
repnz
sbb
sub
test
push
lahf
aad
imul
sub
and
mov
adc
insb
sti
lods
mov
ljmp
out
pop
into
sub
xchg
add
stos
test
lret
in
cmp
xor
jmp
add
mov
mov
rol
adc
pop
adc
xor
scas
jmp
loop
add
sbb
xor
sti
jae
or
out
lds
scas
cltd
mov
jae
xorl
pop
adc
shl
fisubs
push
inc
xchg
lret
mov
jecxz
or
sbb
adc
aas
mov
adc
out
in
aas
jo
in
push
xchg
or
mov
xor
cs
jp
daa
xchg
add
fldz
sbb
outsb
into
pop
inc
cmpsb
dec
cmp
repz
adc
mov
jne
pop
pop
mov
sbb
jne
jle
aad
mov
mov
dec
pusha
xchg
arpl
mov
dec
es
jle
popa
aad
adc
push
cmp
mov
loop
cmp
sbb
xor
cmpsb
daa
fistpl
jo
mov
je
mov
fiadds
pusha
inc
push
outsb
push
xchg
inc
cltd
sahf
mov
hlt
outsb
add
test
pop
movb
xlat
mov
ja
adc
cwtl
xor
lds
popa
pusha
jg
pop
aam
cltd
test
mov
repz
jae
mov
xor
insb
sbb
and
cmpsb
dec
test
fidivs
test
push
jge
inc
push
popf
adc
ds
xchg
into
jne
sub
jae
mov
lahf
xchg
int3
movsb
leave
mov
mov
push
push
xchg
jmp
push
daa
icebp
cmc
adc
cmpsb
mov
into
dec
je
insb
daa
js
outsb
loope
lds
dec
mov
jecxz
ljmp
or
xorl
adc
popa
lods
and
divb
inc
and
mov
aad
sub
stos
imul
ds
ds
pop
push
sbb
pop
rclb
fwait
pusha
js
xchg
out
jg
xchg
mov
aaa
xlat
shll
mov
jo
ret
outsl
mov
and
mov
pop
xorl
ss
ja
test
add
sub
push
jae
mov
test
mov
popf
ficoms
ds
je
test
fisttpl
add
cmp
inc
ret
push
dec
scas
pop
cmc
addl
inc
inc
rol
punpckhdq
xor
or
adc
xchg
jg
xor
fs
getsec
push
cmc
inc
mov
sti
outsb
push
cmp
aaa
cmp
pop
les
mov
cmp
imul
scas
push
clc
fsub
cltd
lods
pop
sub
imul
ja
adc
sub
aam
push
out
in
cmpsb
jecxz
xchg
inc
adc
sti
push
dec
dec
repz
loopne
imul
xor
stos
dec
scas
aam
adc
into
adc
pop
push
jmp
jno
add
mov
push
outsb
xor
xchg
adc
bound
sbb
lahf
outsb
iret
push
adc
xchg
jle
xchg
xor
add
cmp
arpl
or
cmp
jmp
insb
mov
mov
rcrb
and
addr16
popa
in
mov
xchg
jae
sbb
sub
xor
or
xchg
out
mov
lret
and
cld
movsb
jo
insb
and
and
xor
dec
cmp
aam
pusha
in
test
movl
ds
sbb
fucomip
or
jp
xor
test
cmpsb
sub
cmpsl
xor
pop
nop
test
cmp
jmp
xchg
lods
lods
cmp
scas
and
pop
cltd
push
add
pushf
push
xor
test
or
leave
outsb
pop
xor
push
shlb
shll
jb
push
mov
fs
pop
loop
shll
xor
xor
mov
push
mov
js
incl
inc
push
lret
mov
inc
push
jae
jecxz
mov
xor
add
les
adc
add
stos
scas
inc
sub
jle
stos
push
hlt
rcrl
lret
cmp
repnz
dec
imul
sub
sbb
lcall
das
and
cmp
xor
mov
sub
xor
jnp
rorb
out
sahf
xor
sbb
js
sarb
clc
mov
std
adc
and
lods
scas
inc
xor
sbb
dec
xchg
push
or
stos
cmp
push
arpl
aad
and
lds
mov
xor
movsb
daa
aas
xchg
jae
mov
cmp
stos
mull
cmp
mov
xor
cmp
sarb
ljmp
adc
push
shrb
lcall
add
jecxz
les
sub
push
call
js
add
mov
mov
jne
lds
push
sbb
aad
ret
inc
jle
rclb
xchg
xor
outsl
mov
inc
inc
push
dec
inc
ja
sub
js
adc
mov
dec
ds
adc
jno
shlb
and
cli
daa
pop
cmp
ret
mov
xor
adc
cmp
mov
and
mov
cmc
add
popf
cmpb
les
cmp
pop
xor
pop
es
mov
loopne
cmp
hlt
pop
sar
push
cmp
scas
jbe
fnstenv
sub
pop
dec
cmpb
jle
xchg
xor
cmc
xchg
ss
pop
xor
ds
into
xchg
inc
cmp
or
adc
mov
adc
and
das
sbb
test
mov
adc
testl
xchg
mov
or
mov
and
lea
imull
test
or
aas
shrb
mov
xorl
cmc
je
xor
sbb
dec
shlb
xorb
hlt
les
iret
jl
xor
inc
add
xchg
or
push
mov
jmp
repz
loop
and
dec
and
rclb
push
jb
leave
cmp
out
push
in
jo
dec
ds
imul
or
sti
aaa
mov
aam
xchg
ret
stos
cmc
inc
push
fstps
or
out
cmp
xor
cmc
cmp
scas
dec
push
shrb
inc
inc
cmp
icebp
jo
mov
and
xor
push
shlb
loop
mov
divb
push
jecxz
jnp
push
sbb
shrl
repnz
cmp
adc
and
xchg
cmp
adc
cmp
push
and
lret
sub
xor
aad
jg
ss
lahf
cmp
cmp
aas
xor
add
mov
push
sbb
xchg
jno
enter
movsb
jb
cmp
sbb
lock
popf
js
enter
xor
cwtl
nop
call
cmpsb
add
push
push
movsl
push
push
or
filds
inc
push
mov
cmp
and
cmp
dec
je
xor
jmp
inc
repnz
adc
sub
jbe
rorb
add
cmp
jae
adc
jbe
and
mov
and
test
in
cmp
inc
into
sar
cmp
inc
int
es
and
repz
pop
push
pop
cmp
scas
dec
scas
aas
lds
les
jae
push
adc
out
jb
mov
cmp
xor
clc
es
jge
das
in
cmp
pop
xchg
jo
mov
testl
les
addr16
adc
push
ja
inc
fwait
jb
rolb
mov
cmp
movsl
and
push
call
insl
push
xor
jg
enter
and
push
jo
xor
add
pop
shrl
xor
mov
imul
insl
xor
stc
pop
fidivrl
mov
adc
xchg
js
mov
mov
test
push
and
orl
scas
fistpll
or
cs
cli
stos
ret
sbb
or
rcr
aaa
xor
push
jle
mov
outsl
popf
sti
stos
inc
or
sahf
mov
and
cmp
enter
aad
xchg
push
pop
inc
push
mov
xchg
cmp
sub
push
jp
ja
ret
dec
xor
jbe
mul
adc
sbb
xchg
xor
adc
divps
pop
mov
mov
mov
mov
negb
xchg
pop
sub
jns
mov
cmp
outsb
lahf
in
jnp
xor
cwtl
leave
sub
repnz
mov
jl
xchg
push
mov
cmp
or
cmp
int
imul
lret
das
jp
enter
pop
or
insl
fbstp
repnz
mov
sbb
dec
cmp
cmp
dec
cmp
fiaddl
cmpb
test
aas
sbb
nop
jg
mov
push
cmp
pop
in
es
mov
jle
cs
ret
lods
ja
jmp
sbb
mov
sti
aaa
in
or
sbb
push
test
inc
ss
jo
adc
and
outsl
and
inc
fildl
loop
mov
out
jo
mov
rcrl
je
cmc
mov
lret
cmp
jno
mov
sti
pushf
jmp
and
adc
adc
pushf
sbb
push
cmp
pop
outsl
ja
popa
sbb
pop
icebp
bound
push
push
in
stos
mov
testl
test
pop
icebp
cmp
and
hlt
mov
sub
adcl
aaa
sbb
cmp
mov
fnstcw
adc
subl
pop
xchg
push
jo
push
xchg
aaa
sbb
cmp
sub
cli
sbb
and
adc
cmp
pop
dec
and
mov
adc
cmp
in
pop
jnp
nop
ss
divl
rorl
adc
xor
setl
cmp
ja
cs
out
jecxz
adc
cmp
scas
loop
mov
sub
and
fwait
push
pop
popl
verw
test
jmp
mov
cmp
lret
cmp
and
stos
or
cmp
int3
add
inc
mov
push
movsb
inc
adc
jae
ret
movsb
test
data16
sub
cltd
inc
mov
sbb
repz
inc
jno
mov
inc
int3
fsubs
dec
popa
lcall
sbbb
test
nop
inc
test
push
dec
js
jns
push
inc
push
jb
mov
cmp
data16
jg
push
xchg
mov
sub
lea
xchg
pusha
mov
pop
testl
mov
sub
in
push
outsl
xor
push
xchg
xor
lods
ss
bound
aad
xlat
mov
clc
inc
aam
push
ficoml
lcall
call
js
cld
cmp
roll
pop
mov
hlt
sbb
jmp
lods
mov
add
sti
cmp
and
mov
mov
pusha
cmp
sub
scas
test
cmpb
ret
jnp
mov
adc
add
cmp
add
mov
lret
sub
pop
and
fwait
imulb
popa
cmp
push
mov
dec
arpl
lea
jbe
mov
inc
imul
dec
fistpll
sbb
mov
inc
cmp
cmp
pop
jnp
ss
jae
pop
cmp
push
sbb
cmpsl
cmp
add
sub
stc
sub
cmp
lahf
outsb
bound
cmp
add
mov
mov
mov
sbb
or
jle
push
enter
fwait
mov
cmp
sbb
loop
hlt
sahf
idivb
cmp
or
outsl
push
aam
lcall
adc
fidivrl
inc
repnz
push
popf
js
xchg
xor
cmp
jp
nop
add
iret
orl
mov
in
loope
mov
dec
push
decl
cmp
ss
inc
jmp
lods
and
aaa
insb
out
das
cmpsb
cmp
arpl
mov
fsubs
inc
cmpb
jnp
push
mov
test
dec
repz
cmp
push
movsl
loope
loopne
data16
jp
clc
inc
cmp
xor
stc
pushf
adc
scas
push
pop
inc
xor
add
mov
js
adc
cmp
outsb
popa
mov
hlt
or
loopne
data16
cli
pop
pop
mov
out
adc
xor
jg
mov
push
scas
arpl
pop
pushf
enter
xor
adc
mov
jge
mov
push
push
shlb
mov
sbb
adc
jg
sub
scas
fbld
push
ss
sbb
xchg
mov
jb
mov
xchg
jge
imull
rcrl
xor
mov
inc
fidivrl
cli
cmpsl
inc
cmc
js
xchg
xor
nop
jbe
test
out
fwait
cmp
inc
push
outsb
icebp
jo
in
push
xor
fisubrs
inc
shrl
xor
sbb
ret
scas
popa
and
jmp
push
jb
xchg
cmp
adc
sub
mov
mov
cwtl
test
clc
fwait
mov
mov
mov
sbb
sbb
push
and
cmp
dec
lcall
enter
test
into
in
cmp
ret
sbb
add
adc
ret
add
add
push
fisubrl
mov
dec
cmp
iret
jp
aad
cmp
imul
leave
push
mov
push
lret
ss
in
add
test
sub
les
or
mov
outsl
inc
inc
xor
mov
mov
inc
dec
call
push
insl
pop
sub
xor
xchg
stc
mull
jle
sbb
mov
js
mov
pop
cmp
shll
out
jb
xchg
insl
aad
into
jne
test
data16
jno
mov
fwait
js
hlt
gs
pop
xor
fdivs
out
jecxz
adc
add
mov
ss
pushf
cmp
rol
inc
add
fcomp
cmp
sbb
mov
sbb
jl
jle
and
or
cmpsl
sub
jmp
inc
inc
sahf
mov
and
roll
rcrb
aaa
mov
mov
mov
aas
shll
ss
ret
cmp
add
je
push
sub
test
push
mov
mov
dec
or
xor
test
pop
subb
sub
adc
fadds
iret
repnz
mov
nop
xor
in
das
flds
shl
jns
mov
rcll
xor
mov
sbb
js
dec
push
push
xor
cmpsb
jae
push
stos
mov
cmp
lahf
icebp
jl
jno
mov
lock
fldcw
jg
rorl
jnp
and
inc
cmp
mov
or
push
test
cltd
xchg
xor
xor
rolb
xor
nop
loope
in
call
rorl
cmpsl
xchg
cmp
pop
int3
dec
lock
push
cmp
fmuls
cltd
imul
sub
xchg
xchg
dec
int3
aad
stos
std
leave
icebp
jecxz
pop
jmp
psraw
icebp
sar
and
leave
dec
shll
mov
mov
and
sub
adc
icebp
xchg
imul
or
sub
mov
adcl
icebp
icebp
mov
adc
repz
jmp
mov
adc
sarl
dec
pusha
leave
mov
outsl
inc
mov
xor
arpl
frstor
mov
mov
js
subl
xchg
xchg
jb
mov
dec
mov
add
jmp
xor
loopne
ror
rclb
add
ss
xchg
mov
xor
sbb
fwait
jbe
stc
aaa
inc
in
and
icebp
jmp
cmp
mov
jmp
stos
dec
mov
push
ss
rcrl
mov
in
popf
xor
mov
mov
test
sbb
mov
mov
push
xchg
js
imul
adcl
movsb
push
mov
add
jae
icebp
loope
jmp
xchg
add
mov
mov
leave
notl
stos
jae
inc
adc
cs
ret
jb
mov
neg
push
test
cmp
in
fisubrl
addr16
mov
xchg
cmpsl
pop
xchg
and
addb
pop
andl
test
adc
std
fstps
sarl
xor
or
in
jo
roll
jae
fdivrl
dec
enter
mov
sub
mov
cmpsl
inc
mov
pop
pop
inc
stc
cwtl
icebp
xchg
pushf
jae
icebp
jmp
jecxz
fsubp
mov
sarl
xorl
leave
push
jmp
push
rcll
aam
push
mov
and
imul
insl
loope
and
mov
hlt
xor
je
in
je
icebp
and
cmp
loope
fldenv
mov
ja
mov
je
clc
psllw
movsb
ss
xchg
loopne
ss
jae
push
cld
icebp
stc
xor
icebp
popl
sbb
jmp
fidivl
jo
test
dec
add
xchg
inc
or
movsb
adc
sub
jns
sarb
mov
adc
jae
push
jg
test
mov
xchg
test
inc
jae
push
ret
cmp
push
xchg
icebp
outsl
add
cs
jmp
fucom
repnz
rol
dec
mov
mov
jae
mov
sbb
push
adc
dec
cltd
daa
xchg
pushf
mov
sub
pushf
and
in
jae
icebp
jmp
mov
orl
shll
idivb
sar
aam
push
add
rcrb
push
mov
pop
loope
fsts
jbe
stos
push
mov
and
pop
stc
sub
jmp
xchg
add
cmpsb
adc
shl
and
leave
sub
adc
mov
jbe
mov
adc
push
adc
cltd
xor
xchg
sub
aad
inc
dec
add
fnstcw
lds
enter
daa
and
pushf
hlt
sbb
movlps
jae
mov
jbe
mov
daa
inc
aas
inc
in
ljmp
add
push
xchg
dec
sub
mov
in
stc
ljmp
stos
int
push
icebp
cmpsl
pop
fsub
jmp
push
fnstenv
push
mov
shll
mov
ss
mov
test
aam
int3
sbb
int3
std
rcll
sbb
sbb
out
stos
fsts
cmpsl
outsl
fcoms
leave
jno
add
xor
mov
test
and
mov
push
mov
dec
addl
out
pop
movsb
pop
ss
imul
fsubrs
rcrl
stc
aaa
mov
out
cld
push
mov
mov
shll
jecxz
adc
stc
mov
push
adc
xchg
mov
loope
icebp
sahf
roll
push
stos
in
sub
sbb
mov
mov
mov
lcall
flds
and
xchg
stc
ja
scas
mov
ror
mov
sbb
inc
gs
cmp
sub
add
rcl
std
push
leave
in
jecxz
outsb
rorl
jbe
xchg
mov
add
inc
adc
dec
xor
push
and
cltd
sub
into
cmp
lock
jle
push
jae
dec
icebp
jg
int
jmp
lods
pushf
xchg
and
pushf
xchg
and
scas
xchg
xor
mov
add
cmc
xchg
sub
pop
mov
shlb
cltd
aam
pusha
mov
std
subl
sub
dec
xchg
sub
xor
je
mov
mov
loop
dec
test
inc
cltd
std
pushf
sti
and
mov
add
mov
push
sbb
adc
mov
fld
adc
ficoml
icebp
shll
sbb
loopne
daa
hlt
push
cmp
std
push
jmp
das
jge
sbb
cmpsl
mov
xchg
jp
or
xchg
les
rcl
mov
cmp
icebp
call
dec
js
or
xchg
aam
cmc
fcom
or
shr
std
adc
inc
sbb
in
push
mov
fs
push
dec
dec
test
es
aaa
sbb
xchg
cmpsl
movsb
fsubl
jmp
or
stc
adc
xor
shrl
icebp
leave
adc
rorl
aaa
push
cmp
add
mov
push
mov
mov
negb
pop
dec
add
mov
out
cmp
adc
jmp
xor
ror
inc
push
pop
mov
nopl
sub
and
mov
cmp
mov
jb
test
pop
shll
popa
xchg
push
push
es
xchg
lcall
loope
adc
pop
jo
rcrl
push
aaa
sub
xchg
adc
icebp
test
xchg
mov
shlb
mov
cmpsl
mov
gs
psllw
pop
out
dec
xor
shrl
inc
add
je
mov
lahf
adc
mov
sarb
xor
mov
xchg
jo
xchg
sbb
sbb
or
icebp
inc
mov
out
jmp
loope
dec
push
rorl
leave
aas
adc
push
pop
fsubs
mov
inc
xor
mov
test
xchg
inc
rorl
cmpsl
xchg
mov
inc
mov
cmc
sbbb
imul
or
negb
push
mov
rorb
rcrl
js
cmpsl
in
pop
fadds
rcll
cltd
je
jae
mov
enter
sar
test
add
and
push
mov
test
sarb
adc
icebp
jns
cmp
jmp
jne
xor
rcrl
iret
leave
or
lds
push
xor
aaa
mov
xor
jb
mov
pushf
xchg
add
push
sub
pop
movsb
ss
icebp
loope
and
pushf
ljmp
push
int3
pop
push
test
sbb
mov
arpl
jg
fcomps
aam
push
cli
fbld
xchg
icebp
jae
mov
inc
push
xchg
fsubs
xchg
push
pop
inc
jns
push
xor
clc
out
and
jne
mov
or
cltd
jmp
inc
xchg
leave
adc
jae
push
xorb
jg
and
icebp
movsb
pushf
and
xor
and
stos
rclb
in
jmp
push
xor
dec
nop
mov
addb
hlt
xchg
and
sub
inc
repnz
notb
icebp
fcomps
lds
icebp
test
push
or
add
mov
inc
roll
leave
pop
dec
xor
mov
mov
jge
add
sbb
mov
ret
das
jae
mov
pop
xchg
mov
aam
push
in
add
jmp
aam
push
rcr
clc
rorl
xorb
mov
in
movsl
dec
dec
pop
jbe
fisubl
push
cltd
xor
test
xchg
addr16
and
dec
in
clc
or
jmp
inc
loope
xchg
pop
jb
shll
xchg
int3
addr16
jl
test
inc
hlt
data16
adc
int3
mov
gs
jb
mov
inc
stc
sar
push
icebp
push
add
sti
xor
jae
test
nop
or
jns
push
ss
aaa
inc
sbb
dec
icebp
cltd
arpl
jbe
andl
stc
negl
xor
inc
lods
jmp
sbb
fcoms
or
leave
pop
adc
cmp
and
mov
xchg
mov
or
cli
test
push
mov
stc
cmc
movsb
cmp
add
push
mov
fldenv
dec
push
or
or
mov
add
jno
mov
pop
cltd
sub
dec
push
mov
cmpsl
in
fdivr
stc
xor
icebp
aaa
xor
add
loope
pop
jge
in
jno
ljmp
leave
adc
pushf
and
fcoms
mov
jns
jmp
popa
mov
addr16
push
test
adc
xor
mov
pushf
repnz
mov
daa
add
sbb
mov
sub
jmp
xor
cmp
dec
or
icebp
test
clc
mov
cltd
out
push
cmpsb
adc
add
mov
push
mov
jmp
fsts
movsl
mov
inc
fidivrl
sbb
add
xchg
aaa
sub
mov
mov
add
mov
or
mov
flds
cmp
inc
mov
mov
sbb
flds
icebp
mov
xor
fnstcw
sbb
pushf
andl
sub
adc
sub
cltd
movsb
sbb
mov
rorb
div
cmpl
adc
and
inc
outsb
aas
cs
xlat
js
lock
jo
leave
in
sub
sbb
fwait
adc
xor
and
mov
call
fdivs
sub
mov
aam
bound
sub
ds
movsb
popa
xor
and
pusha
fnstcw
divl
mov
dec
addr16
pop
inc
stos
sbb
test
enter
inc
push
fldenv
cld
adc
ds
lock
dec
jb
fldenv
sub
sub
movsb
leave
xchg
pop
fstp
push
sub
test
sarb
popf
enter
mov
xor
test
aad
mov
mov
mov
mov
scas
jmp
and
mov
loope
pop
rcr
leave
mov
mov
clc
je
xchg
mov
xlat
jp
xor
cltd
sub
pop
gs
mov
sbb
mov
sub
or
dec
xor
lret
lcall
sahf
and
rol
mov
cmpsl
ja
nop
xchg
lock
jne
dec
or
lret
icebp
jge
lcall
lods
and
std
leave
movsb
les
sbb
dec
xchg
in
cmc
xlat
fcompl
call
cs
mov
push
cltd
mov
xor
pop
mov
xor
icebp
jmp
rcrl
cmpsb
xchg
xor
movb
mov
push
adc
push
mov
int3
repz
mov
cmpsl
or
dec
mov
insl
mov
xchg
xorl
mov
fstps
add
leave
lods
movsb
out
lea
sub
mov
xchg
mov
movsb
cli
push
xor
cltd
cmpsl
data16
xchg
fcomp
xchg
movsl
or
mov
inc
cmpsl
inc
xchg
fisttpll
sub
ss
pop
mov
jp
sub
xchg
mov
mov
pop
lock
mov
jne
inc
test
dec
mov
mov
dec
xchg
cmpsl
mov
cmp
xorl
div
icebp
cld
jmp
je
lock
movsb
pushw
dec
mov
rcr
test
adc
mov
sbb
sub
test
push
inc
jo
dec
mov
test
dec
cld
xchg
xor
dec
subl
lret
dec
jae
inc
ret
jmp
ljmp
mov
shr
inc
cmp
mov
xorl
jo
xchg
dec
xor
adc
icebp
jne
inc
jmp
fucomi
inc
imul
cmc
outsb
jb
not
jb
rcl
aam
push
in
sub
hlt
pop
gs
or
dec
ret
xchg
pop
mov
bound
ret
icebp
andl
jae
pop
loope
popf
rorl
mov
push
inc
push
mov
fsubs
mov
xor
daa
dec
dec
push
pop
and
aad
notl
add
cmpl
outsb
loop
xchg
dec
dec
adc
inc
mov
push
mov
push
and
add
std
jmp
imull
add
sbbb
xchg
lds
imul
sbb
sub
out
sbb
ja
loope
adc
add
xor
pop
xor
aam
ss
xorb
jmp
mov
push
xor
icebp
mov
icebp
jns
dec
push
repz
loope
call
push
aam
popa
xchg
mov
or
jbe
enter
fildl
push
xor
cltd
aaa
xchg
pop
cltd
stos
adc
jae
push
xorl
hlt
outsb
icebp
inc
outsl
push
xchg
push
xlat
jo
loope
xor
fldenv
add
dec
leave
inc
ds
test
hlt
xor
xchg
mov
jg
push
mov
and
mov
cltd
mov
adc
sub
xchg
pushf
loop
out
adcl
jmp
inc
dec
mov
fdivr
pop
sbb
xor
pop
icebp
shrl
xchg
fmuls
push
int3
dec
add
mov
add
test
inc
mov
nop
cltd
popa
xchg
inc
loope
xchg
pop
mov
rclb
sbb
jno
adc
add
ss
xchg
add
loope
jmp
xor
out
jb
leave
push
sbb
xor
jmp
mov
mov
and
jl
and
cmc
testb
mov
test
and
mov
fldenv
jle
iret
sub
leave
and
and
in
mov
mov
xor
test
data16
int3
mov
or
mov
jp
adc
xor
sbb
icebp
or
outsb
in
mov
add
and
sub
jbe
xor
mov
adc
or
mov
inc
ret
adc
mov
je
repz
icebp
pop
mov
fxtract
dec
sarl
cmpsl
es
xor
xchg
dec
mov
and
mov
addr16
or
sbb
ret
xor
adc
ljmp
cltd
or
rolb
xor
and
add
xor
loope
sub
repz
fsubs
cli
or
xchg
and
dec
jae
mov
mov
push
rolb
loope
add
pop
sar
and
xchg
inc
adc
movsl
mov
test
nop
and
les
sbb
mov
ja
ret
iret
stc
cmpsl
adc
pop
icebp
sub
dec
jne
icebp
jge
jo
inc
pop
stos
test
test
and
sbb
push
cmp
add
ficoms
mov
sbb
sahf
stc
daa
add
push
pop
jmp
loope
jns
fld
fdivs
rcrl
gs
adc
adc
xchg
test
inc
mov
add
cs
stc
dec
xchg
js
adc
aam
pop
js
push
leave
std
fwait
repnz
cmp
xchg
pop
jne
jb
push
mov
test
mov
dec
jmp
mov
mov
daa
jmp
jns
sbb
sbb
call
push
sbb
loopne
jne
xor
out
notb
inc
mov
test
and
sub
aam
mull
or
hlt
pushf
fdivs
adc
clc
icebp
sarl
leave
stc
adc
push
jbe
jns
cmpsl
xchg
mov
ss
xchg
fdivs
mov
rcr
aam
test
jns
icebp
call
dec
test
shrb
cld
push
jno
es
out
daa
and
repnz
aaa
sbb
adc
push
mov
pop
jl
sbb
mov
hlt
adc
mov
cmpsl
cmpsl
fnstenv
es
das
cmp
data16
dec
sbb
negb
stc
cmp
mov
adc
mov
mov
data16
jb
andl
imul
xor
pop
leave
add
push
adc
mov
jae
push
jl
xor
cltd
mov
frstor
sub
ds
hlt
hlt
add
imul
mov
mov
jbe
stc
leave
sahf
xor
gs
push
sub
jmp
xchg
push
aas
and
in
int
sub
dec
dec
sti
mov
in
jle
add
iret
inc
or
rclb
or
sbb
adc
mov
sbb
dec
xor
jne
jbe
fdivl
fwait
cmpsl
inc
pop
sbb
lea
je,pt
adc
mov
dec
xchg
pop
mov
pop
pop
mov
mov
ss
pop
clc
repnz
push
pushf
mov
lea
jne
call
mov
testl
loopne
pop
insb
inc
adc
loopne
ja
dec
popa
jns
in
cld
jns
popa
pop
clc
loope
pop
rcrl
lcall
pushf
jecxz
push
shl
adc
sub
scas
pop
and
push
or
add
xchg
lock
hlt
pop
cld
clc
call
icebp
mov
dec
cmc
inc
lahf
mov
fsubr
in
lret
lcall
xchg
addr16
dec
add
add
xchg
cld
cmp
shrb
repnz
es
fcomps
jb
in
add
in
cmpsl
imul
pop
aaa
mov
mov
adc
out
jae
add
push
test
or
lret
cltd
orl
push
push
inc
in
outsl
sarl
lock
pop
add
sub
fisubs
pop
daa
or
sub
stc
dec
or
aad
shr
adc
pop
xor
stos
daa
outsl
mov
cmpsb
imul
cwtl
daa
loop
jp
gs
aas
je
pusha
ss
fidivs
add
dec
pop
popf
sub
sub
jge
push
mov
pop
push
push
shll
xchg
sub
or
xor
imull
mov
loope
aaa
mov
xor
adc
mov
sbb
push
fcoml
jnp
daa
mov
pop
sbb
sub
xchg
cmp
dec
xchg
in
fisubl
and
ds
btc
sub
fs
call
cmc
cmp
push
jmp
or
fwait
add
cmp
es
mov
mov
bound
jp
add
inc
jp
push
inc
cwtl
sub
loop
dec
push
fiadds
xor
mov
in
xorb
cmpsb
shrb
mov
jp
xchg
test
sbbl
lret
pop
cs
leave
mov
add
loop
loop
or
push
pushf
and
adc
loopne
call
lea
ja
stc
stc
stc
clc
imul
pushf
add
pusha
mov
movb
pushf
lea
jmp
pushf
call
jo
gs
setb
sbb
xchg
ljmp
rcrl
sub
or
inc
xchg
aad
adc
jno
jge
jnp
aam
nop
ret
movsb
push
and
fninit
mov
and
push
insb
and
mov
lret
pop
inc
pop
push
cmpsb
push
pusha
icebp
pop
lock
sub
leave
sub
test
ds
mov
cmpl
pop
jbe
pop
loopne
fcmovbe
add
arpl
loope
inc
stos
push
setb
xchg
lods
adc
test
mov
lahf
fs
loopne
les
add
aaa
cmpsb
scas
jae
xchg
jmp
sbb
xchg
and
sub
mov
xchg
negb
push
int
leave
aad
dec
or
and
jo
cltd
mov
pop
inc
cmp
fnstcw
lcall
sub
and
ret
fwait
inc
fsts
inc
sub
sbb
jp
jns
fdivr
insb
stc
sub
fistps
xchg
scas
jl
imul
out
inc
sti
decl
pop
setb
jl
adc
cmpsb
mov
adc
js
jge
jno
xchg
inc
fs
add
lods
or
pop
dec
push
inc
or
adc
sbb
bound
and
sub
adc
adcl
push
dec
in
xor
std
cld
jge
jmp
std
call
cld
clc
out
dec
out
fldt
sbb
jae
push
shlb
lds
lcall
mov
pushf
pusha
pushl
ret
mov
movsbw
movsbw
pop
pushf
mov
pushf
pushl
ret
not
pushl
call
lea
jne
pusha
rcr
mov
stc
shrd
pusha
shrd
sub
bts
jmp
or
mov
shll
cltd
out
jae
jge
xchg
nop
leave
pop
cmp
push
insb
repnz
rcll
mov
push
sbb
inc
push
sbb
mov
sbb
add
sub
mov
loope
js
iret
xor
inc
xchg
cmp
sbb
out
cwtl
lret
mov
shrl
int3
fs
adc
mov
cmp
int
mov
mov
std
or
xchg
and
xchg
mov
int
inc
jo
pop
fdivs
js
rolb
inc
xchg
inc
dec
inc
nop
dec
mov
les
pop
daa
lods
lcall
shrb
xor
es
xor
or
pop
mov
out
pop
popa
test
movsl
adc
sub
xlat
mov
stc
jl
sbb
pop
lcall
lea
dec
or
xchg
repnz
mov
insb
and
ds
rorl
out
stos
adc
mov
inc
jge
xchg
jbe
shll
dec
sub
clc
pusha
xor
imul
sub
repnz
pop
je
add
shr
cmp
and
fidivrs
xorl
cmp
clc
gs
repnz
pop
push
sub
sub
cmp
xchg
es
repz
inc
lea
jge
pusha
pusha
lea
je
clc
bt
or
push
pusha
lea
je
sar
daa
xor
add
pusha
rcr
call
xor
xor
stos
xchg
mov
cli
clc
popa
push
xchg
ljmp
xchg
lods
popf
cmp
inc
and
pop
lcall
pusha
dec
movsl
adc
int
push
sbb
fcomip
xlat
pop
inc
test
mov
pushf
or
aad
sub
xor
xchg
cwtl
dec
outsl
movsl
orb
xor
fadds
jae
jb
mov
jns
xor
cwtl
mov
sbb
sub
iret
adc
ds
jo
dec
xchg
push
pop
movl
fistl
sahf
mov
fisttpl
loope
ds
push
pop
sub
out
inc
or
pop
bound
in
mov
sub
or
xor
es
pop
dec
cs
xor
fldl
sbb
call
xchg
add
xor
test
mov
cmp
das
outsb
lret
xchg
aas
out
scas
mov
fadd
lret
idivb
pop
or
mov
and
dec
aad
dec
movsb
pop
mov
xor
rclb
insb
loop
mov
jne
cltd
xchg
adc
adc
out
or
in
sbbl
test
inc
in
shrl
push
lods
test
arpl
dec
xor
inc
add
jg
inc
insl
add
sbb
cmp
ja
push
inc
mov
cmpsl
inc
ficompl
aam
rcll
fsubrl
lcall
pop
mov
xor
push
repnz
ss
inc
repz
inc
or
je
ljmp
inc
scas
dec
mov
js
or
imulb
and
push
cmp
mov
and
movsl
sbb
jb,pt
xchg
mov
aaa
pop
scas
xchg
or
lahf
and
mov
dec
jne
push
jae
cmp
dec
and
pop
lock
push
sahf
adc
arpl
sti
xor
cwtl
push
sti
xorb
out
cmp
cltd
xchg
and
out
and
vpmacsdql
xor
stos
xor
xor
test
add
mov
fsts
lock
mov
in
inc
cmp
mov
lds
in
decb
push
add
int3
aas
fnsave
mov
inc
ja
and
test
jmp
cmp
inc
push
or
sar
ljmp
sbb
add
pop
out
push
fisttpll
push
push
jge
sti
jo
add
jl
mov
aaa
mov
out
imul
shrl
push
mov
ret
xchg
pop
aad
stos
repnz
jg
repz
and
push
insb
fdivl
cs
insb
xchg
dec
fstps
aam
bound
lahf
mov
push
cmovl
ret
xchg
inc
andnps
ret
or
mov
mov
jmp
jg
cmp
lock
in
dec
cs
and
dec
ja
lods
and
idivb
ljmp
mov
das
cmp
stos
jg
pop
mov
xchg
xchg
and
jp
sub
and
leave
sub
nop
mov
jl
je
cmp
or
test
nop
fsubs
out
stc
cmp
sub
out
jnp
and
or
cmp
in
dec
mov
cmp
pusha
shrl
clc
add
leave
mov
scas
ret
and
aam
mov
sahf
out
imul
cltd
sub
in
movsb
dec
mov
cmpsl
xchg
jne
dec
out
js
dec
les
lret
or
and
pop
arpl
in
out
fisubrs
or
jbe
jl
push
pop
push
fwait
arpl
xor
fwait
imul
outsl
dec
push
adc
and
jmp
movsb
imul
xor
cs
dec
test
shlb
leave
test
xchg
insb
adc
xchg
mov
stos
mov
mov
dec
mov
mov
jnp
adc
xchg
imul
xchg
inc
jne
dec
movsl
mov
xor
ljmp
xchg
insl
add
test
popa
dec
mov
sbb
int3
and
clc
fnstsw
dec
packuswb
jg
sub
dec
insl
fsubs
pop
adc
int
shll
and
scas
inc
cmp
inc
mov
mov
outsl
xchg
and
pop
xor
dec
mov
xor
imul
xchg
fs
rolb
int
sub
mov
adc
jb
inc
dec
int
incl
stos
xchg
daa
in
xchg
sbb
xchg
pushf
push
test
cs
sbb
xchg
scas
aad
xor
cmpsl
inc
insb
test
movsl
add
sbb
aas
mov
stc
cmp
adc
scas
cld
insl
rorb
inc
aad
pop
mov
vhsubps
mov
xor
pop
mov
and
mov
push
sbb
xchg
dec
std
jo
test
mov
mov
jp
sub
and
pushf
pop
inc
iret
jl
test
das
pop
xchg
inc
testb
outsl
repz
scas
fmuls
dec
aas
and
push
mov
jnp
xor
and
xor
cmp
arpl
cli
or
bound
lret
and
mov
std
enter
lret
cmpsb
pop
in
les
push
jbe
xor
nop
daa
pop
dec
int
jns
mov
cmp
dec
xor
flds
rcr
xchg
add
mov
addb
repnz
lock
mov
mov
pusha
aaa
lods
js
inc
pop
rcll
push
repnz
scas
mov
xchg
mov
popf
or
push
lahf
push
enter
cs
sub
fwait
jo
aas
sti
repnz
outsl
ljmp
daa
push
inc
mov
mov
in
jg
rcr
sarl
mov
jo
jnp
sub
mov
mov
fs
loop
mov
ja
push
and
int3
push
pop
enter
mov
ds
loopne,pt
movsl
mov
mov
fs
popf
mov
mov
cmp
jecxz
outsl
jne
mov
or
dec
movl
xor
aaa
outsl
daa
lret
lock
push
xchg
mov
cli
out
push
or
ret
out
add
mov
stc
bnd
xchg
jo
mov
inc
mov
mov
add
js
repz
push
lahf
jne
mov
out
test
sub
push
xchg
pop
push
ss
jmp
sti
sbb
push
pop
mov
fcoml
insb
jmp
push
in
pop
in
ss
js
shl
clc
and
jns
xor
enter
jne
cmp
inc
jo
insb
adc
mov
inc
sbb
movl
sbb
ss
subl
insb
filds
aad
insb
sbb
mov
lret
leave
dec
jnp
mov
add
mov
pop
in
add
add
push
mov
nop
jb
inc
punpckhwd
and
mov
les
mov
cmp
lcall
sti
dec
repz
arpl
cmc
pop
sbb
jbe
sub
jo
jae
mov
mov
mov
jb
xchg
cmpsb
je
repnz
xchg
push
xlat
push
sbb
and
fsub
mov
std
push
or
jecxz
adc
and
outsl
and
inc
or
jle
xchg
ljmp
repnz
test
out
stos
mov
inc
mov
ljmp
cmp
out
push
and
imul
call
mov
jge
and
pop
push
pop
sub
je
push
ja
sub
push
repz
xchg
mov
imul
and
push
sbb
in
sahf
mov
jno
fistl
push
mov
inc
xor
mov
pop
xchg
inc
cltd
loop
mov
shrb
in
dec
lds
imul
dec
jno
aad
pop
push
arpl
aaa
es
lahf
pop
imul
cmp
xlat
in
in
pop
dec
dec
mov
pop
das
jmp
mov
mov
jle
pop
scas
xorb
test
sbb
out
ja
ficoms
aad
adc
inc
mov
dec
push
insb
sub
push
iret
dec
fcompl
cltd
add
jp
shlb
pextrw
stos
scas
push
arpl
addr16
lea
jp
jo
or
addr16
push
sbb
leave
bound
or
add
jmp
xor
aaa
push
mov
fisubs
jl
push
xchg
pop
sbb
and
xchg
pop
stos
xchg
push
pop
flds
xchg
xor
jae
cmp
bound
add
adc
lahf
pop
push
sar
push
lock
push
sahf
shl
pusha
or
adc
mov
inc
mov
mov
fisttpl
push
lret
mov
pop
inc
dec
leave
inc
repz
repz
lods
cmp
jp
mov
aam
arpl
adc
mov
test
stos
test
adc
jne
mov
repz
lahf
mov
jo
mov
or
cltd
sbb
pop
imul
adc
fs
dec
out
call
ljmp
fwait
out
fldcw
push
bound
into
mov
aas
inc
mov
gs
push
dec
mov
mov
inc
jmp
ja
rcrl
add
outsl
mov
cmp
das
imul
sbb
jbe
out
ss
cmp
leave
ja
cmpl
sub
add
ret
bound
test
jle
lds
add
lret
cmc
mov
xchg
rcll
lahf
pop
imul
cwtl
add
in
dec
jo
cld
in
repnz
lret
add
hlt
mov
shll
push
fs
rcll
out
mov
fldcw
mov
jecxz
cmp
push
xlat
sbb
xor
inc
or
mov
jbe
outsl
push
and
fs
and
push
popa
lahf
xchg
std
dec
jo
mov
cmovae
ds
rcrl
orl
jns
jno
add
popf
pop
inc
mov
fnstsw
cmp
stos
aam
and
pop
adc
cmp
jge
inc
mov
lcall
cmp
icebp
mov
dec
xorb
jl
add
sbb
imul
lret
stc
out
or
into
dec
movsb
mov
aad
mov
cmp
mov
jecxz
sbb
pop
dec
mov
mov
lods
pushf
sub
enter
sbb
jecxz
aas
lds
inc
cwtl
adc
add
inc
inc
push
movsb
pop
xchg
pop
bnd
xchg
inc
mov
pop
test
dec
xchg
pop
pop
cmc
mov
scas
ss
mov
sub
stos
mov
addr16
or
popf
icebp
fisttps
test
mov
add
mov
in
jno
dec
inc
test
aas
cli
mov
rorl
mov
and
mov
jbe
xchg
add
aas
add
jg
and
mov
roll
push
xchg
jge
pop
fsubrs
arpl
call
xchg
mov
out
xor
sub
push
adc
add
imul
fmull
out
add
ja
adc
xchg
add
rclb
push
push
out
es
dec
xchg
add
push
inc
xor
insl
in
int3
dec
pushf
fsubs
mov
icebp
jo
mov
push
repnz
pusha
test
sbb
dec
ja
fnstcw
push
cmpsb
stos
or
add
test
add
adc
pop
xlat
jo
mov
cwtl
or
push
pop
repnz
push
shrl
or
inc
dec
mov
or
jp
sbb
scas
arpl
pop
insb
mov
dec
fisttpl
cwtl
sub
stc
sbb
add
ljmp
jo
xchg
es
decl
lret
sub
inc
cltd
mov
or
test
pop
std
bound
pop
int
sar
or
push
shr
mov
lret
cmp
jp
inc
sub
cli
cmp
ffree
push
xchg
fsubrs
fcom
push
mov
xchg
cwtl
fbld
xchg
pusha
inc
pop
sub
and
inc
xchg
stc
sub
push
mov
push
stc
idivl
xchg
sar
sbb
or
test
add
xorb
test
or
mov
or
mov
jge
mov
jle
pop
pop
test
icebp
in
lods
out
xchg
push
and
ljmp
pop
pop
data16
pop
lock
outsl
js
clc
lea
or
jp
xor
outsl
mov
xchg
scas
imul
rolb
pop
sub
les
jbe
sbb
jbe
dec
pop
push
aam
pop
sub
jmp
pop
mov
shrl
out
jecxz
sub
addb
xchg
jmp
rclb
pop
sahf
pop
movsb
loop
push
scas
pop
dec
xchg
or
movsb
push
stos
and
mov
test
push
daa
mov
jl
fcoml
fisubrl
stos
sub
add
dec
cmp
enter
mul
pop
dec
orb
movsl
mov
mov
loope
std
dec
mov
leave
pop
fimull
dec
into
xchg
jno
or
push
popf
sbb
stc
ret
dec
dec
enter
jge
sti
dec
mov
sahf
scas
add
inc
aad
dec
cmp
repz
pop
sbb
sti
hlt
cmp
sub
in
add
sarl
jae
pop
and
inc
loop
push
xor
mov
add
jle
fsubl
xchg
sub
push
pop
arpl
dec
sbb
jecxz
repz
inc
sub
fstl
jae
jnp
scas
nop
add
and
fldl
dec
lret
sub
xchg
lcallw
or
xchg
and
int3
out
jmp
ss
push
outsb
pop
fldenv
jle
int
xor
sbb
in
stos
push
jnp
test
lock
sbb
stc
ljmp
bound
rcr
in
insl
dec
pusha
out
dec
cmpsb
adc
jge
sbb
pop
setne
inc
mov
adc
jae
int
addr16
push
ret
push
in
push
and
addr16
icebp
or
push
fcoms
sbb
jae
fcoms
sar
push
dec
pop
insb
mov
mov
or
into
int
lods
outsb
pop
push
xchg
sarb
lods
pop
pop
sti
pusha
mov
ss
or
mov
mov
jae
mov
push
inc
js
xchg
sbb
in
cmpsb
xchg
mov
incb
mov
pop
push
dec
mov
push
or
push
ficoml
pop
test
pop
push
dec
decl
mov
mov
aas
mov
outsb
pop
loope
fisubl
cmpsl
or
add
mov
dec
xchg
insb
ljmp
add
icebp
es
dec
pop
in
sub
mov
insb
into
add
cltd
mov
add
lds
dec
hlt
and
xchg
sub
pop
in
xor
stc
sub
test
cs
cmc
cmp
nop
outsb
xchg
or
shlb
int3
stc
dec
pop
sti
ffreep
xor
adc
adc
outsl
push
sahf
adc
stos
jp
idivb
fdivrs
rolb
mov
add
mov
hlt
xor
mov
jg
inc
testl
and
dec
cmpsl
jno
mov
pushl
pusha
sti
pop
push
daa
jecxz
dec
push
push
fucom
out
sub
mov
lret
cld
xchg
insb
jmp
or
cmp
jg
xchg
mov
dec
rclb
mov
lods
pop
dec
nop
jle
push
pop
sub
push
inc
stc
or
dec
cli
popa
jo
jae
cli
mov
jnp
ja
fisubrs
mov
aad
cmp
adc
mov
outsl
adc
hlt
xor
popw
loop
pushf
test
cs
mov
incb
mov
mov
cltd
dec
and
je
nop
add
test
outsb
add
in
sub
cmc
into
decb
inc
sbb
divl
in
sub
popa
stos
sbb
out
push
push
in
pop
mov
or
xchg
mov
test
test
js
push
movsl
xor
lret
push
xchg
test
xchg
hlt
fisttpll
sub
push
dec
ljmp
hlt
insl
les
jecxz
xchg
test
sub
dec
pop
add
mov
push
shlb
dec
sub
aaa
scas
push
ljmp
inc
fadds
cmp
cmc
dec
leave
cmc
in
hlt
sub
repnz
ljmp
leave
push
call
dec
bound
hlt
inc
mov
lahf
lock
xor
push
enter
aad
mov
jne
inc
mov
mov
adc
add
mov
push
pop
sub
aam
pop
les
pusha
cmp
idivb
stos
dec
int
cld
mov
jnp
mov
sbbl
inc
or
jae
ljmp
int3
scas
mov
bound
and
mov
mov
mov
mov
cmp
out
outsl
ljmp
inc
jno
enter
jecxz
jb
imul
xor
stos
loope
xchg
imul
mov
fnstenv
xchg
sbb
mov
dec
mov
jns
pop
popa
jb
fidivrl
les
loop
sti
mov
and
xchg
lds
iret
pop
adc
mov
ret
clc
repnz
movsb
push
dec
xor
shl
sub
mov
push
rorl
xlat
jl
lret
sub
push
scas
push
popf
lea
adc
dec
push
push
outsb
addr16
cmp
adc
in
pushf
test
mov
gs
aaa
int3
fcoms
cmp
sub
sti
ror
xor
pop
push
push
outsb
movsb
pop
lahf
loopne
outsb
cmpl
adc
rorl
fstp
adc
jle
inc
xor
je
lahf
hlt
mov
aad
adc
mov
cmpsl
mov
scas
cmpsb
or
mov
sbb
cmpsb
out
lahf
and
shrl
mov
xchg
sbb
sbb
sti
lds
pop
inc
fsubp
icebp
xor
adc
cmpsl
inc
mov
adc
int3
xor
and
addb
movsb
popa
mov
mov
out
fsub
mov
adc
mov
dec
addr16
xchg
pushf
xor
lds
push
cmp
in
mov
scas
inc
dec
push
mov
mov
xchg
or
mov
out
sahf
push
fs
imul
mov
jp
into
xor
and
push
imulb
loopne
in
dec
nop
es
or
add
into
mov
paddq
inc
insb
jns
in
cmpsb
popf
push
mov
add
in
sub
push
cltd
rcrb
xor
jg
mov
rcll
fimull
mov
std
mov
mov
push
add
loop
test
js
sbb
inc
imul
mov
lods
lods
push
and
mov
iret
add
imul
xlat
fst
divl
daa
out
das
loope
dec
lcall
sub
lret
cmpb
sar
imul
xchg
inc
xchg
xchg
jp
jo
jmp
jb
adc
dec
push
push
stos
pop
data16
rorb
inc
or
fists
fisubrl
jb
and
lea
push
mov
or
outsb
sub
sbb
test
insb
sub
cli
and
out
dec
xlat
les
lea
inc
add
sub
sub
shll
mov
dec
sarb
out
pop
aam
dec
fidivrl
adc
cld
out
mov
and
sti
push
cmp
stc
nop
xchg
lret
daa
sbb
cli
mov
xlat
and
xchg
mov
lods
popa
fsub
jp
jmp
fsubs
into
xor
mov
pop
xor
dec
stc
mov
cmpb
sub
mov
ss
push
jmp
repnz
pop
ret
jle
inc
orb
pop
int3
outsl
test
inc
mov
cmpsb
mov
mov
xorb
test
lret
pop
rol
cli
mov
pop
stos
sub
sub
jno
ret
mov
jno
push
or
add
adc
ds
in
insl
hlt
pop
cmp
sub
loope
insl
repnz
inc
jae
inc
repz
test
inc
and
xchg
cwtl
sarb
jl
bound
mov
sub
xchg
outsb
adc
pushf
and
inc
fisttps
xor
mov
fs
adc
shr
es
inc
mov
ficoml
jge
iret
cwtl
es
loopne,pn
push
xchg
xchg
jp
hlt
movsb
push
outsl
pushw
pop
dec
push
test
testb
push
mov
insb
rcll
lds
and
pusha
pusha
push
imul
loope
xor
enter
icebp
xor
popf
adc
mov
jg
xchg
mov
lcall
daa
or
aam
sbb
cmc
into
or
or
lahf
stos
cmp
inc
js
jns
into
xchg
xor
and
jecxz
into
jnp
jae
icebp
js
push
and
int3
jmp
mov
sbb
and
pop
das
scas
adc
daa
fidivrs
sub
lret
mov
push
scas
lcall
mov
jo
adc
out
jmp
lcall
add
or
stos
imul
xchg
mov
pop
xlat
aad
pop
lods
sub
adc
ja
add
gs
lods
data16
push
outsb
das
sti
jp
inc
jo
test
fsubp
cli
mov
jle
repz
js
push
sbb
pop
movsl
cs
cmp
pop
mov
dec
jo
js
out
adcb
mov
in
test
stc
dec
jnp
aam
adcl
test
sub
adc
int
fdivr
pop
inc
cmpsl
push
sbb
enter
push
out
pop
push
pop
pop
aas
adc
lahf
fmulp
sub
stos
sbb
cli
lock
lret
js
jo
or
xchg
clc
ss
mov
fwait
icebp
xchg
insb
sub
dec
adc
cmp
out
fisubrl
rorl
mov
and
sbb
js
xchg
mov
fsubs
mov
inc
or
bound
les
sbb
mov
js
mov
leave
ret
data16
cmc
stos
xchg
sub
inc
xchg
hlt
xor
adc
mov
adc
fisttpll
fdivl
jg
cmpsl
mov
push
pushf
jg
aaa
pop
aas
or
mov
cs
xor
push
lods
ljmp
dec
fs
orb
jmp
imul
test
frstor
dec
or
mov
pop
movsl
leave
lods
add
das
cmpsl
cmc
arpl
outsl
enter
sub
nop
pushf
mov
mov
cld
rcrl
mov
setb
inc
lods
push
push
lds
cmp
in
inc
cmp
mov
or
xor
ds
jmp
in
xor
adc
sbb
cmp
mov
lea
rolb
in
ret
sub
mov
inc
loope
andb
and
add
pushf
or
fldl
lret
insb
dec
mov
and
push
xor
movsb
aam
sub
rclb
cmp
popf
push
andl
push
jne
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
fistpl
frstor
setb
cmp
cmp
or
ljmp
sbb
inc
mov
dec
mov
test
jno
mov
rorl
mov
jg
or
negl
outsl
ret
js
shll
lea
aad
repz
push
jns
icebp
les
leave
fwait
jl
push
xchg
orl
jae
sub
pusha
inc
push
imul
cwtl
stos
fnsave
cmpsl
jecxz
pop
cmpl
shlb
mov
sub
lahf
fisttps
lods
pop
fisttpll
sti
sub
les
call
xorb
and
xchg
data16
xchg
xchg
adc
mov
outsl
insl
out
push
sub
cltd
xor
cmp
in
jo
popf
add
cld
cmp
sti
sub
int
xchg
dec
mov
add
rcrl
rclb
push
fisubs
cwtl
frstor
adc
in
jl
and
mov
inc
cwtl
das
inc
call
rclb
pushf
sub
call
pusha
sbb
add
add
pop
cmp
add
add
add
inc
sbb
add
add
and
add
pop
cmpsb
pop
add
add
add
add
add
and
add
add
jp
sbb
add
add
stos
sub
add
add
add
add
addb
add
adc
add
or
add
or
add
out
and
add
add
dec
das
sub
add
add
xlat
and
add
add
add
rcrl
add
jae
add
mov
add
dec
sbb
add
add
add
add
lret
push
dec
mov
movb
cmp
cmpb
pusha
jmp
mov
mov
pusha
call
push
jmp
pop
frstor
setb
jno
pop
jbe
cmpsl
aam
inc
into
mov
push
inc
jno
xchg
lahf
adc
jb
fisttpll
mov
jo
insl
lahf
int
dec
lcall
data16
xor
scas
nop
popf
loop
repz
and
inc
jbe
dec
push
imul
push
int3
subb
cmp
mov
in
jp
cli
and
cld
jg
push
mov
sbb
lcall
and
dec
or
mov
arpl
jo
xor
aaa
sti
fneni(8087
andl
fwait
cmp
adc
pop
dec
pop
test
fxch
cmp
pusha
lahf
adcb
mov
je
cmp
pop
cmp
out
dec
sbb
test
xchg
std
xor
dec
pop
sub
jns
fists
cli
inc
or
sub
xchg
cs
mov
inc
insb
out
pop
mov
ss
sbbb
push
pop
out
int3
rep
dec
cmp
setb
sahf
jl
pop
cld
xor
testb
lcall
ja
lods
cmpsb
add
xchg
inc
lock
test
fsts
pop
xor
cld
loopne
hlt
push
pop
clc
pop
jmp
sbb
psrld
adc
xchg
nop
loop
test
loope
test
xchg
outsl
pop
adc
add
or
ja
out
pop
out
daa
jnp
jbe
sbb
xor
pop
and
addr16
out
or
xchg
jp
pop
hlt
ss
inc
sub
and
test
cmp
cli
aas
inc
lea
dec
ds
sti
pop
repz
cld
enter
in
jns
mov
lds
sahf
hlt
movsl
push
push
xchg
pushf
mov
sarl
cmp
je
push
mov
push
or
add
loop
repz
dec
pop
xchg
sub
pop
sub
arpl
and
sub
sarb
add
or
jp
insl
dec
or
sbb
xchg
lret
add
es
repz
outsl
icebp
adc
loope
js
inc
pop
sbb
dec
cli
mov
lods
aas
sbb
add
push
out
sbb
ss
xchg
fdivp
fistps
push
push
jmp
scas
data16
fwait
cltd
and
mov
push
jae
pop
sbb
push
dec
clc
mov
sbb
mov
dec
pop
hlt
insl
jg
xchg
xchg
pusha
sbbb
xchg
insb
int
outsb
jns
sahf
pop
je
dec
mov
setb
lahf
movl
push
push
and
mov
sbbb
pop
xor
sub
xchg
adc
in
xchg
insl
add
push
jnp
test
aam
jmp
hlt
mov
inc
mov
cld
push
and
inc
je
jo
sbb
xchg
es
lds
bound
add
into
mov
or
loopne
pusha
push
shrl
xchg
cmp
lock
mov
insb
and
pushl
shl
push
setg
sets
movb
lods
stc
not
push
pushf
pushf
cmc
rol
jmp
int3
aad
sub
xchg
and
and
and
xor
orl
shlb
loopne
ficoms
and
add
leave
clc
sub
aad
popa
repz
fdivl
xchg
imul
xor
icebp
insb
stos
and
rcrb
xor
jmp
add
sub
data16
in
and
and
addr16
ja
add
int
inc
jmp
inc
test
setb
jecxz
or
or
sub
and
dec
dec
jmp
int
pop
mov
cmp
sarl
cmpsl
xchg
repz
in
mov
jg
data16
jp
cmp
pop
cmpsl
xchg
sbb
mov
setb
pop
nop
in
fwait
inc
inc
mov
jecxz
cmp
sahf
xor
push
rclb
pop
push
add
pop
cld
in
and
sbb
push
pop
adc
in
icebp
orl
mov
adc
jmp
adc
sbb
xor
int
data16
jp
imul
push
or
mov
push
xor
adc
adc
sub
xchg
jmp
inc
xchg
fidivrs
mov
adc
xchg
push
arpl
mov
lods
cmp
push
fisttps
mov
inc
lods
jge
loope
repz
ret
add
adc
in
xchg
ret
push
push
or
enter
mov
xchg
mov
loope
aad
dec
rorl
insl
inc
aad
daa
and
mov
aaa
mov
and
and
push
sub
ja
or
fnstsw
pusha
xor
vcvtdq2pd
mov
push
inc
adc
inc
xchg
dec
adc
out
lahf
int3
push
xchg
les
pop
xor
sub
add
dec
out
out
shll
fcompl
fmuls
mov
loop
dec
in
xchg
lea
les
in
clc
sub
and
les
iret
fcmovu
mov
xchg
cmp
and
inc
xchg
xchg
jecxz
jge
cwtl
sub
mov
lea
jne
pusha
call
stc
stc
xor
pushf
cmc
repnz
pusha
mov
jmp
pop
xor
setb
or
outsb
dec
lock
js
movsb
xor
mov
mov
cmp
cmp
mov
push
inc
mov
roll
xor
and
scas
push
dec
je
mov
les
data16
pop
aaa
jecxz
outsl
ds
ss
add
cltd
dec
in
jne
sbb
and
rcr
sub
mov
lods
xchg
push
xchg
repnz
mov
iret
cmp
sub
dec
jge
ret
mov
jp
jne
lret
not
sbbl
jg
sbb
mov
es
xchg
aas
adc
jbe
roll
cwtl
repz
mov
mov
jle
fdivr
fs
and
and
sub
js
xor
push
pop
jecxz
inc
test
testb
fistpll
test
or
int3
adc
lds
popa
cs
mov
xor
setb
stos
lods
pop
test
adc
mov
out
test
and
stos
inc
popf
subl
roll
adc
arpl
inc
and
bound
sti
rcrl
cs
icebp
push
addr16
fcoml
lret
lods
inc
push
lret
fs
shll
fstl
stos
xchg
out
sbb
mov
pop
and
or
xlat
test
setb
or
shll
inc
shlb
outsl
subl
pop
popa
aad
xor
or
sbb
xor
push
gs
decl
jmp
int3
pop
xor
les
mov
sub
xor
adc
inc
orb
adc
adc
xor
pop
popf
mov
sub
cmp
push
sub
test
jl
sub
cltd
mov
daa
arpl
cmpsb
jge
sbb
and
jo
or
daa
scas
dec
sbb
daa
pop
div
xchg
popa
movsl
ja
xor
jae
jne
dec
and
or
add
push
sub
cmp
adc
dec
in
pop
ret
add
jmp
outsl
inc
imul
jns
xor
mov
dec
lock
push
adc
and
mov
adc
test
lock
dec
push
fldenv
fsubs
mov
test
mov
sub
lcall
xor
test
call
leave
sbb
jne
xchg
stos
jno
je
psubusb
roll
jg
popa
jne
rcrb
adc
jecxz
popf
aaa
xchg
adc
test
int
xchg
shr
or
fbstp
jbe
mov
fistpll
mov
mov
pusha
cmpsl
outsb
cmp
push
das
setb
xchg
dec
inc
inc
js
mov
mov
test
inc
loope
test
inc
test
pop
mov
mov
push
test
cmpsl
lea
je
int3
or
cltd
mov
push
sub
cmc
dec
insb
mov
test
add
pushf
inc
mov
clc
lds
int
add
dec
mov
mov
jbe
mov
cld
push
jg
jle
mov
cld
jl
aaa
adc
faddl
adc
jle
lock
and
adc
sbb
leavew
mov
pop
xor
xchg
enter
sbb
pop
inc
das
jmp
cltd
lahf
xor
mov
push
push
adc
cmp
mov
fldt
inc
movsl
pop
sbb
lcall
nop
add
push
loopne
add
out
mov
sbb
lret
cmp
sahf
fidivrs
lret
pop
fisubrl
cmp
xor
jge
sbb
inc
loope
sub
xchg
outsl
add
lret
testb
cmp
pop
push
rcrl
fists
and
lahf
ret
setb
es
fisttps
es
es
mov
sub
sub
xor
and
addl
xchg
or
jae
lret
hlt
pusha
sbb
dec
icebp
mov
fsubs
adc
dec
jle
push
sub
push
mov
js
mov
xchg
insl
lea
mov
fs
xor
into
neg
cmp
sub
daa
loope
in
mov
sbb
cmp
sbb
imul
int3
imul
push
loop
inc
inc
jmp
add
in
xchg
enter
jae
nop
movsl
andb
push
xchg
xor
xchg
dec
incb
mov
dec
ret
jno
or
mov
jb
aaa
xor
add
std
mov
aam
and
leave
in
cld
push
adc
test
or
pop
xor
cmp
je
cld
pop
pop
sub
mulb
sub
jne
mov
outsl
rcrl
and
jl
mov
or
or
add
add
les
jnp
push
jo
cmp
jle
enter
shrb
push
sub
sbb
je
jae
pop
adc
lods
stos
popa
mov
jp
imul
cmpsb
rclb
call
pushw
aaa
sbb
and
mov
pushf
jne
inc
or
cs
iret
addr16
jo
aam
and
sub
dec
shl
pop
outsb
int3
out
test
pushf
mov
push
cmp
pusha
mov
lea
jae
test
cmp
call
lods
lock
ljmp
cmp
adc
pushw
xchg
mov
inc
xchg
in
xchg
cmp
sub
daa
jo
jb
pop
into
stos
sbb
out
test
cs
jns
jge
arpl
scas
jle
xchg
mov
cmp
and
mov
dec
shll
ret
sub
and
mov
fldt
mov
mov
scas
jnp
sbb
jno
dec
test
aaa
insl
xchg
leave
dec
inc
aad
ds
outsl
inc
and
mov
and
divb
test
push
or
jecxz
cmpsb
loop
xor
pusha
mov
aas
add
rol
out
fs
mov
fxch
nop
roll
mov
lahf
or
inc
dec
adc
stc
cwtl
outsb
addb
dec
or
mov
xchg
xor
out
and
push
int
adc
xor
fwait
idivb
jp
loop
jge
and
jmp
ficoms
clc
out
andb
setb
jecxz
xchg
ds
scas
pop
push
je
adc
in
aas
jge
and
adc
pop
loopne
push
pop
sahf
loopne
repz
mov
jnp
cwtl
inc
or
ljmp
adc
es
lcall
pop
push
aaa
xor
xchg
add
pusha
xor
enter
sub
rol
sub
push
xor
cld
movb
sarl
cmc
test
or
sbb
pushf
std
sub
jns
in
dec
cmp
xchg
jne
popf
pop
cmp
dec
push
lahf
fmul
pop
push
xchg
leave
test
fwait
jne
adc
loope
pop
pushf
add
cmpb
jp
and
sarl
outsl
or
dec
in
adc
mov
std
addl
fs
iret
xchg
icebp
jne
jo
je
inc
cmpsl
xor
xchg
fwait
pop
lret
nopl
sub
fs
je
xor
or
xchg
ds
lret
sbb
add
mov
pop
sub
das
ret
jnp
sbbb
sbb
mov
lods
pop
fbld
cmp
lock
add
and
lea
call
push
mov
nop
push
out
test
mov
sbb
and
add
jmp
call
call
add
ja
jbe
dec
jne
dec
jo
outsb
add
xchg
icebp
dec
jecxz
inc
shr
mov
pop
mov
push
sub
arpl
push
popf
jb
xchg
and
add
inc
mov
pushf
dec
xchg
test
les
or
push
bound
inc
sar
cmp
repnz
sub
imul
jb
bound
loop
add
mov
and
movsb
fimuls
loopne
sbb
fidivs
xchg
out
jb
push
add
adc
iret
lret
cwtl
in
push
cmp
enter
sarb
xor
dec
sar
sbb
pusha
outsb
jae
in
ja
mov
inc
cmp
pop
and
fucomp
adc
pop
cmc
data16
push
push
fdivrs
sbb
loop
movsl
in
test
jo
cmp
xchg
lock
mov
dec
sub
aam
mov
cmp
out
push
in
arpl
inc
add
enter
fisubrl
sbb
adc
sub
popa
insb
in
daa
rcr
dec
push
jno
push
rorl
insb
lods
sbb
and
das
cmpsb
pusha
cmp
sub
mov
lea
jmp
inc
pop
setb
rcll
fimuls
push
js
mov
mov
adc
lret
cld
mov
and
test
dec
inc
fs
sbb
loop
lds
adc
dec
mov
ljmp
xchg
sti
adc
mov
dec
outsb
roll
fcomps
out
sbb
movsb
sub
loope
xor
setb
push
jecxz
pop
push
cmc
ja
clc
cmp
add
push
adc
das
lods
or
sub
sahf
jo
jae
rclb
mov
ficomps
bound
inc
outsl
inc
mov
jae
popa
movsb
adc
fistps
mov
sub
sbb
mulb
cs
cmp
insb
push
add
jbe
gs
nop
pop
sub
mov
setb
out
jecxz
xchg
fbld
out
or
jae
imulb
subb
cli
rcll
and
daa
ret
and
or
mov
nop
xchg
jmp
fidivs
imul
dec
fs
out
popa
or
sub
andb
inc
or
inc
cmp
ja
xchg
xor
adc
inc
cmp
pop
jg
ret
jmp
dec
cmp
fidivs
fsubrs
mov
arpl
lock
fsubrs
jno
xchg
xchg
jne
stos
cmp
push
pop
xchg
adc
jl
ss
sub
adc
andl
add
fcomps
jl
jecxz
stos
lds
out
xor
mov
pop
jge
sahf
pop
inc
xor
insl
mov
dec
sarl
cmp
dec
push
inc
and
dec
mov
mov
sub
imul
mov
inc
pop
arpl
das
mov
sub
pop
push
loopne
adc
and
xor
and
js
testl
xchg
xor
or
xchg
jno
mov
bound
sbb
cwtl
shr
xlat
fdivrl
xchg
aad
std
cmp
mov
pop
sar
addr16
xor
imul
push
leave
add
sub
lods
in
inc
cmpb
imul
or
mov
int3
test
cmp
mov
xchg
mov
cmp
cwtl
jbe
cmp
adc
or
cmp
mov
loop
mov
cmp
cmpsb
cmp
inc
sbb
popa
push
mov
cmp
lods
adc
cmp
mov
test
cmp
icebp
push
sbb
cmp
xchg
xor
mov
stos
cmp
in
lahf
dec
adc
arpl
fsubr
imul
stos
add
cs
pop
xor
sub
in
ret
push
int
sub
fsts
stos
fmuls
xor
cmp
xchg
ss
imul
scas
xor
hlt
lcall
push
inc
fbstp
test
mov
data16
jmp
lret
cmpsl
iret
das
sbb
lahf
int3
xchg
push
mov
mov
dec
xor
inc
pop
fcoml
scas
cmp
insb
in
loopne
cmp
jp
enter
mov
into
fcomip
push
pop
cs
jbe
fstpl
repz
or
dec
push
mov
je
cmp
sbb
ja
loop
push
daa
inc
pop
xchg
cmc
mov
cmp
dec
leave
scas
sub
jmp
jl
insl
push
mov
xchg
lcall
dec
sbb
xor
jl
mov
sub
out
cld
call
add
xchg
cmp
jg
jle
sarl
xchg
loop
scas
lea
xlat
cmp
bound
cmpsb
xor
cltd
std
aas
scas
cs
mov
in
push
dec
inc
loope
test
addr16
neg
roll
lahf
ja
shl
and
mov
and
jmp
ss
sahf
idivb
adc
mov
stos
cmp
mov
jae
cmp
dec
test
pop
jg
xchg
jo
lret
adc
or
repz
cmp
repnz
xchg
xor
cltd
mov
aaa
and
dec
xor
inc
arpl
jbe
xor
sbb
push
pop
xchg
add
jae
mov
sbb
into
push
insl
mov
cmp
popf
lock
call
stos
and
imul
out
inc
insb
jns
stos
adc
shll
mov
mov
jnp
cltd
push
int3
jae
and
xchg
shrb
hlt
test
and
cltd
ljmp
hlt
into
pop
and
nop
pop
cmp
and
in
adc
xor
dec
xor
or
or
cmpl
pusha
jmp
fimuls
test
sub
clc
inc
int3
and
push
xor
sub
loop
popf
rcl
pop
pop
aaa
jo
xor
jle
cmp
pop
mov
push
shrb
cmp
or
jnp
xor
imul
xor
int3
mov
pop
cmp
in
adc
cmp
das
dec
clc
out
mov
push
les
adc
or
push
sbbb
mov
mov
in
dec
rclb
inc
cmp
push
add
int
aaa
ret
pop
dec
sub
cld
pop
cmp
mov
xor
push
enter
scas
out
sub
cmp
sub
std
fwait
adc
add
push
xor
ja
push
inc
mov
popf
mov
add
xor
ret
xchg
xchg
shll
xor
xchg
push
fbstp
clc
and
cmp
cs
dec
jnp
loop
jmp
jmp
aad
fstpl
clc
pop
adc
dec
mov
gs
out
dec
xor
mov
push
shll
inc
clc
xchg
push
clc
in
push
jecxz
jge
adc
imul
negb
ljmp
push
and
in
cmp
ret
not
pop
mov
and
inc
in
mov
jnp
xor
cmp
scas
and
lock
sub
imul
xchg
sarb
mov
and
or
roll
mov
stc
loopne,pt
lock
inc
cmp
pop
cmp
cmp
insl
testl
cmp
xlat
out
cli
adc
addl
xor
hlt
jb
and
aaa
clc
andb
pusha
enter
sub
push
popa
dec
add
aaa
popl
and
in
data16
aas
adc
shll
repz
cmp
push
jecxz
mov
ds
adc
movsb
mov
adc
cmp
xchg
xchg
jbe
sarb
and
cli
xor
and
or
ficompl
cmp
jge
xor
pop
mov
jne
cmp
js
jo
movsb
sub
inc
lret
mov
cli
mov
sub
aam
mov
clc
inc
jno
loope
xor
jmp
fs
jge
dec
les
xchg
cmp
das
xchg
test
lret
mov
cli
arpl
and
cwtl
mov
add
adc
mov
xor
and
int
adc
inc
cmpl
xlat
pop
repnz
or
cmp
jg
daa
scas
add
icebp
inc
lods
jle
add
sti
stos
push
cmp
cmpsb
aas
mov
iret
lret
pop
out
and
xor
imul
cmp
bound
lds
jge
clc
cmp
loope
pushf
push
mov
pop
inc
fwait
add
jb
xchg
aaa
addr16
mov
push
pop
fcoml
in
xchg
call
inc
ljmp
cmc
mov
and
addr16
outsb
mov
adc
aas
mov
or
filds
aaa
loope
ret
in
push
addr16
lahf
test
cmp
repz
cmp
mov
aaa
cli
jecxz
or
cmp
sbb
sub
ret
int3
stos
adc
add
cmp
inc
outsl
into
push
cltd
cli
icebp
jae
inc
mov
ret
sbb
movsl
outsb
or
aad
cmp
stos
pop
cmp
jb
add
inc
push
jl
push
cmp
jecxz
repnz
jbe
mov
stos
xor
adc
clc
xor
cmp
shll
or
sbb
inc
xor
cld
aam
fbld
cmp
divb
sub
inc
cmp
cmp
or
push
cmp
jne
push
lret
cwtl
xor
test
cmc
xchg
fimull
cmp
fwait
adcb
arpl
shl
gs
hlt
add
mov
sub
in
dec
cmp
add
mov
dec
cmp
sbb
jl
in
inc
add
xorl
or
imulb
loop
push
sti
or
xor
adc
flds
sub
sbb
mov
data16
and
ds
js
mov
mov
divl
insl
je
adc
stos
sub
push
pop
repz
push
sub
test
sbb
icebp
lods
push
sub
jg
and
cmp
aam
cld
sub
mov
jbe
lods
subb
push
push
sti
je
dec
sub
test
sbb
jbe
lods
mov
jle
pop
test
sbb
jbe
lods
cmp
aam
insl
xchg
insb
sub
or
fldt
lret
sbb
jbe
cmc
cmp
xor
insb
and
or
push
sbb
sub
push
test
sbb
aas
lods
mov
scas
push
cmpsl
lahf
insb
xchg
test
sbb
sub
push
out
insb
xlat
test
sbb
jbe
lods
xor
sub
and
insb
adc
or
add
std
lods
je
insb
push
fs
insb
push
test
sbb
lods
mov
lods
push
movsb
pushf
insb
xchg
test
sbb
int
push
mov
jnp
mov
jmp
sub
push
shlb
jbe
lods
hlt
sub
in
add
or
fwait
jbe
je
mov
call
push
insb
imulb
test
sub
inc
lods
movsl
scas
jo
sbb
jbe
lods
movaps
push
fs
gs
sbb
jbe
lods
ret
push
repz
movsl
clc
insb
jns
fstps
outsb
jbe
lods
pop
sub
add
jbe
lods
add
fwait
cmp
popf
push
sbb
sbb
sub
test
insb
ret
sbb
push
mov
test
insb
out
test
sbb
jbe
lods
inc
sub
push
adc
sbb
push
push
lea
lods
mov
xchg
insb
pop
test
sbb
jbe
lods
aam
lods
push
sub
cmp
cmpsl
inc
add
mov
insl
push
mov
dec
xchg
push
enter
lahf
fdivs
pusha
cld
add
pop
ret
ja
ret
std
pusha
jbe
mov
xorb
cmpsl
adc
fdivr
and
leave
xor
negb
das
mov
jmp
decl
xchg
lahf
xchg
add
push
outsl
push
pushf
inc
das
jp
and
aas
arpl
push
dec
nop
cmpsl
ret
das
notl
inc
jo
mov
xchg
push
pop
xchg
pop
cltd
cltd
pop
and
out
push
sarl
lahf
bound
daa
push
insb
sahf
mov
lahf
fmuls
cmp
mov
jmp
dec
lahf
jle
cmp
call
test
loopew
and
xchg
aas
jle
pop
and
ja
je
jo
or
enter
lahf
pop
cmpsl
and
inc
pop
aas
jg
sti
mov
add
cwtl
es
negl
xchg
outsl
xor
repnz
xchg
gs
push
inc
mov
notl
dec
lock
mov
inc
lods
mov
jne
mov
or
pop
pop
sbb
mov
jp
sub
hlt
add
loop
xchg
jns
mov
xchg
push
add
lods
clc
dec
xchg
xor
mov
nop
xchg
out
xor
imul
pop
shrl
fs
sub
mov
nop
and
insb
call
pop
mov
imul
test
fisubl
xchg
in
sub
ret
push
pop
mov
ret
cmp
aas
pushf
mov
cmp
cmpsl
call
mov
sub
xchg
ljmp
pop
loopne
jle
shlb
mov
push
into
pop
jo
push
out
cmp
xor
jmp
out
sahf
push
lock
ror
push
push
imul
sub
and
insl
sbb
mov
arpl
es
imul
jo
scas
movsl
dec
adc
nop
push
sbb
sub
call
enter
insl
dec
sbb
xor
mov
mov
push
or
shlb
sub
fiadds
xor
cs
mov
xchg
jle
pop
xor
iret
cmpsb
hlt
jns
inc
pop
pop
movsl
dec
aaa
rcrb
sub
cmp
sub
or
test
sbb
push
cmpsl
xchg
lods
add
pop
hlt
test
lahf
mov
inc
faddl
dec
into
dec
cmp
mov
mov
fldt
fsubl
ja
mov
xor
inc
insb
xor
test
fsub
mov
sahf
jbe
cmp
push
cmp
push
das
aas
adc
mov
mov
outsb
push
push
xchg
jbe
gs
int
inc
imul
dec
push
test
xor
in
adc
js
outsb
scas
pop
mov
cmp
mov
mov
je
mov
sbb
outsb
aas
or
xor
adc
cwtl
popf
sub
bound
pop
out
cmp
mov
push
ret
mov
cmp
mov
add
sub
mov
cli
dec
clc
pusha
fbld
bound
lcall
in
sahf
mov
inc
lret
fmuls
fnstcw
push
ss
addps
xor
adc
test
ss
aaa
add
push
in
jb
xor
xor
loop
das
mov
mov
fsubr
cwtl
cs
push
pop
fnstenv
push
sub
iret
mov
js
mov
mov
xor
cmpsb
add
lods
in
cwtl
mov
xor
inc
xor
xor
je
fstpl
push
mov
popa
fstp
mov
xor
stc
enter
scas
fldcw
js
into
mov
push
enter
pop
mov
mov
add
mov
lcall
fdivrp
xchg
cmp
pop
mov
adc
and
aaa
push
and
mov
clc
xor
sub
je
mov
push
mov
js
sbb
aas
sbb
js
hlt
add
aaa
xor
cmp
adc
and
mov
mov
imul
mov
cmp
jno
inc
scas
fwait
sub
push
push
in
aaa
aas
and
hlt
scas
mov
push
insb
push
pusha
sub
add
mov
jmp
jo
adc
outsl
xor
mov
mov
adc
xor
insb
jno
sub
xorl
mov
xor
icebp
insl
mov
mov
adc
jmp
mov
sbb
xor
mov
pop
aam
ljmp
add
mov
jo
fsubrs
mov
mov
jns
xor
xor
lock
fsub
sbb
mov
mov
cmp
pop
cmpsb
xor
cmpxchg
lock
lods
xor
xor
mov
adc
mov
inc
loope
fdivrl
daa
ret
ret
cmc
xor
or
add
jecxz
mov
stc
push
mov
ja
pusha
call
mov
ret
popf
push
inc
adc
xor
mov
jp
push
icebp
adc
mov
mov
add
mov
adc
push
mov
lret
fidivrl
cmp
popf
push
test
cs
cmp
mov
icebp
dec
test
push
les
mov
sbb
es
push
repnz
push
cltd
mov
dec
mov
pushf
mov
aam
mov
mov
mov
sub
sub
xor
hlt
cld
jbe
xor
and
adc
push
push
mov
cmp
cmp
pop
xchg
jmp
adc
cmp
shrb
outsb
xor
sub
mov
and
mov
mov
xor
jnp
out
push
dec
hlt
jmp
enter
mov
hlt
lret
inc
mov
andb
into
push
lea
jmp
ficomps
inc
push
repz
outsb
aaa
xor
pushl
xchg
mov
loop
jg
in
fdivs
dec
imul
cltd
push
cwtl
mov
mov
xor
fs
cwtl
xchg
jmp
stos
jl
mov
push
xchg
or
jb
xchg
mov
mov
xlat
cmpsb
repz
mov
xor
mov
cmp
mov
and
mov
lock
rorl
jp
cmp
daa
xorps
jbe
jae
cmp
std
int
popa
jne
or
xchg
lret
mov
jg
jecxz
call
add
es
xchg
adc
inc
in
mov
pop
stos
inc
mov
jns
fsubrs
data16
and
xchg
adc
dec
ljmp
xchg
adc
out
std
fidivrl
fnstenv
out
xor
mov
push
or
xor
mov
cmp
sub
cmpb
xor
or
dec
fcomps
rcr
or
ljmp
push
mov
icebp
pop
fld
cwtl
push
pop
add
or
loopne
dec
mov
sarl
in
cmp
xchg
cmp
ret
cmp
xor
cmpsl
icebp
ljmp
mov
cmp
outsl
negb
pop
pop
sti
ret
pop
push
push
insb
xlat
hlt
cmp
cld
ljmp
repnz
pinsrw
add
lods
daa
and
out
es
loope
mov
sbb
inc
and
cmpsb
call
xlat
pop
cmp
mov
jae
push
add
or
jb
xchg
lahf
jp
jns
negl
dec
xchg
std
inc
sbb
cmpb
sbb
xchg
sti
inc
jge
jns
cmp
icebp
decb
out
cmp
outsl
cmp
lock
pushf
add
loop
dec
ficoms
sahf
dec
sbb
and
cmc
je
pusha
add
xchg
dec
lahf
and
fidivs
rcl
push
xor
mov
push
dec
pop
mov
mov
aaa
jp
repnz
dec
cmp
arpl
clc
cmp
or
std
fsts
cmp
and
sti
fnstenv
inc
in
cmp
cmp
inc
add
jae
mov
mov
dec
cmc
mov
and
cmp
rorl
cmp
push
pop
aas
adc
popa
ja
jns
jl
cwtl
xor
jae
xchg
jne
add
mov
minps
pop
cmp
jle
adc
in
mov
lret
cmp
repz
mov
cmp
add
sahf
rol
add
pop
sbb
ret
sbb
mov
int3
inc
sub
mov
filds
mov
dec
test
testb
fs
mov
mov
aaa
mov
outsb
sbb
xor
add
repnz
cmp
inc
fs
mov
sub
mov
xor
cmp
aaa
pop
fildl
add
push
jge
mov
mov
push
cmp
sbb
jmp
lahf
jns
fnstcw
ljmp
les
sub
sarb
ss
lahf
mov
cmp
adc
loopne
xor
jne
mov
sub
repz
and
xor
fnstenv
lods
scas
cmp
push
cmp
in
cmp
mov
mov
jnp
sbb
add
cmp
jle
mov
fcomps
gs
jp
sub
mov
xor
pushf
and
mov
add
jno
aad
mov
and
cmp
push
in
outsl
push
int
dec
inc
push
mov
cmp
or
inc
out
dec
loop
lret
push
jne
aas
testb
sti
cmpsl
cli
push
rol
xlat
pushf
enter
notl
cmp
ja
and
sub
movsb
mov
mov
cmp
mov
mov
stc
cmp
push
jmp
out
stos
inc
insl
xor
fcmovnb
jg
cmc
jae
dec
xor
arpl
clc
es
and
adc
push
jo
jle
faddl
dec
jne
mov
in
push
or
pop
sarl
sbb
jo
push
test
mov
dec
dec
int3
imul
xchg
outsl
js
insb
pop
fidivrl
adc
jbe
cmp
jbe
cmpsb
jmp
scas
hlt
insb
cmp
and
cmpl
inc
aas
nop
cmpsb
iret
scas
xchg
ffreep
and
movsl
gs
test
ror
cmp
adc
cmp
es
rcl
inc
neg
cmp
sbb
in
and
lods
fstps
sbb
repz
cmp
and
mov
out
cwtl
or
sarl
pushf
push
adc
repz
xchg
adc
idivl
xor
loop
mov
fisubs
lahf
push
ds
or
jne
shl
add
sahf
ret
fidivl
imul
js
into
clc
sub
push
dec
insl
ss
mov
cwtl
pop
repz
sbb
aam
hlt
icebp
jae
lcall
mov
lahf
mov
jo
dec
enter
jb
enter
cmp
sub
jae
xchg
inc
xor
ret
xor
js
movsl
mov
imul
cmp
pushf
jo
int
xor
adc
push
push
aaa
jae
mov
sarb
mov
ja
jne
ret
cmp
test
jmp
inc
pop
or
out
rolb
xor
call
and
mov
mov
dec
inc
or
lods
fwait
dec
clc
outsb
jo
sbb
loopne
cmp
mov
sbb
cmp
and
sbb
inc
xor
dec
cmp
ljmp
cmp
das
es
mov
cmpsb
adc
fdiv
mov
pop
pop
ror
lret
sub
jg
cmp
arpl
or
lcall
mov
inc
scas
and
fdivrs
ja
mov
test
mov
clc
cmp
rclb
cmp
ret
shlb
mov
outsl
xor
neg
in
xlat
jns
lods
cmp
pusha
icebp
xor
xor
andb
jp
sarb
sarb
imul
dec
push
cmp
cli
dec
lds
push
push
mov
mov
cmpsb
sbb
dec
jno
lds
xchg
mov
xor
out
jmp
pop
adc
in
dec
add
sbb
dec
pop
repnz
sub
and
insb
sbbl
shll
ss
sbb
mov
or
mov
mov
mov
push
cmp
mov
sub
cmp
dec
jnp
push
xchg
popa
lahf
adc
jmp
pushf
jmp
and
rcl
xlat
dec
push
mov
jno
sub
cmpsb
adc
xor
lret
fidivrs
lret
xor
subb
test
adc
int3
and
popf
cmp
rcr
ss
add
cmp
aaa
bound
and
xor
cmp
mov
mov
cltd
and
out
js
and
dec
scas
pop
or
pop
out
cmp
xor
pop
mov
jle
inc
mov
bound
xor
inc
scas
push
ret
push
jb
cmp
inc
jg
jecxz
jno
in
es
sub
icebp
cmp
push
xchg
lahf
scas
arpl
ljmp
xor
out
mov
imul
loope
jg
pusha
cmp
pop
push
push
imul
pop
out
aaa
add
fsubrs
pop
xchg
bound
dec
leave
jns
in
jg
adc
mov
jp
enter
stos
out
mov
mov
popa
je
adc
imul
dec
leave
add
mov
inc
jno
add
mov
add
test
lods
addr16
sub
sub
cmp
adc
cmp
sub
cwtl
mov
aaa
and
mov
fcom
repnz
ret
dec
rdpmc
cmp
shll
out
jns
push
enter
adc
scas
add
sarl
std
xor
cmp
ds
mov
cmp
dec
subb
cmp
das
ja
aas
dec
xchg
test
sbb
dec
mov
insl
cmp
pop
inc
xchg
in
jle
jne
jmp
scas
sub
setl
inc
add
into
cmp
fwait
gs
cmp
mov
jl
add
mov
outsb
pop
inc
cmp
pop
into
lods
pop
sub
int
rorb
push
jns
cmp
aam
sub
cmp
mov
fnstenv
inc
or
dec
jge
cmc
enter
jp
mov
cli
cmp
jle
into
hlt
mov
sbb
xchg
adc
mul
adc
test
test
pop
ret
sbb
xor
or
cmc
loopne
nop
popa
mov
cmp
mov
mov
jp
cmp
aaa
or
pop
mov
cmp
out
xchg
dec
push
xchg
iret
ror
cmp
push
jge
imul
sub
aaa
pop
push
cmp
xor
sub
dec
sbb
or
cmp
add
fsubs
jle
xor
out
lea
and
push
mov
repz
test
shll
or
pushf
cwtl
mov
inc
sub
cmp
pusha
pop
cmp
cmp
xlat
je
cmp
test
sub
cmp
test
shll
test
sub
shrb
scas
int3
inc
push
cmp
push
cmp
inc
cli
adc
outsl
mov
data16
fs
jle
mov
xor
scas
cmp
out
aam
cmp
jmp
dec
inc
cmp
sbb
int3
fdivrl
test
scas
push
inc
jne
and
loop
cmpsb
xchg
pop
sub
xor
into
push
aad
cmp
in
mov
cmp
mov
xchg
mov
jg
stc
mov
es
and
adc
fwait
push
imul
adc
push
stc
mov
cmp
int3
out
faddp
aam
and
pop
pop
dec
ss
cmp
mov
or
mov
fiaddl
fwait
jae
aad
mov
bnd
in
cmp
scas
dec
popa
or
push
lods
mov
ficoms
mov
mov
jl
sub
ds
inc
int
add
jecxz
loopne
dec
dec
pushl
add
ljmp
push
lret
cmp
cpuid
es
mov
push
rcrb
fdiv
aaa
data16
adc
inc
xor
ret
mov
pusha
mov
jb
sub
jp
sub
mov
ds
jnp
test
es
scas
stc
adc
cmp
lret
dec
mov
int
cmpsl
cmp
in
lea
in
adc
movsb
pop
aaa
xor
imul
add
mov
mov
jno
scas
jge
inc
cmp
mov
repnz
and
cmp
loop
lahf
into
in
mov
push
hlt
ss
dec
mulb
cmp
ficoml
xchg
popa
cmp
mov
sub
jp
cmp
in
lret
push
inc
cmp
dec
mov
mov
sbb
inc
iret
cmp
xor
push
or
ss
inc
xor
and
idivl
loop
push
sub
mov
cmp
shrb
and
js
sub
jmp
out
xlat
pop
mov
cmp
leave
push
mov
cmpsl
and
add
insb
orb
inc
repz
aaa
cmp
xor
sub
and
mov
icebp
adc
cmp
pushf
push
dec
sbb
cmp
mov
out
and
pusha
mov
cmp
and
adcl
clc
pop
sub
add
adc
dec
and
pop
ds
cmp
adc
fdivl
mov
xor
ljmp
xchg
mov
mov
cmc
popa
cmp
stos
loopne
cmp
push
jo
dec
nop
stos
cmp
lods
aam
or
jmp
mov
push
and
or
mov
shrl
cmp
sub
out
jl
mov
in
decb
cmp
xchg
sbb
cmpsl
cmp
mov
adc
mov
jo
push
shll
cmp
cmp
fidivrl
dec
push
xor
pop
icebp
pop
sub
cmp
push
popa
xchg
cmp
arpl
cmp
push
jbe,pt
test
sbb
xorb
icebp
push
not
bound
pop
jg
or
cmp
sbb
push
test
lret
out
xor
loope
inc
ret
push
pop
stc
out
add
dec
in
xor
out
loopne
mov
add
push
inc
pusha
aaa
cmpsb
inc
cmp
adc
cmp
dec
clc
and
rorb
sbb
xor
inc
adc
pushf
cmp
cmp
push
arpl
dec
cmp
jle
aaa
push
leave
add
dec
icebp
loope
cmp
sarb
push
movsb
inc
pop
xor
cmp
inc
popa
lds
jno
mov
adc
and
push
push
cmp
and
mov
fiadds
xor
aad
cmp
pop
fists
mov
add
jmp
out
divl
cmp
mov
outsb
adc
dec
cmp
adc
aaa
add
pusha
push
pop
push
push
mov
cmp
lahf
sub
rorl
cmp
or
mov
lods
cmp
adc
lods
cmp
sbb
inc
mov
xor
xor
or
mov
dec
cmp
ret
add
lret
cmp
shll
not
hlt
cmp
dec
test
loope
dec
cmp
pop
sbb
inc
mov
cmpsb
jb
xchg
xchg
add
das
jl
rorl
scas
mov
jp
push
cmpsl
imul
outsl
xchg
cmp
cmp
rcrl
cmp
dec
lods
jp
fmuls
cmp
jmp
repnz
dec
xchg
repnz
lahf
jp
aam
cmp
ret
dec
ret
lret
xchg
test
cmc
outsl
push
pop
pop
adcb
add
mov
add
ja
popa
pop
mov
decl
and
push
push
cmp
xchg
pusha
xor
dec
insb
enter
push
es
xchg
adc
push
cmp
shlb
inc
or
cli
xor
negl
and
and
pop
push
mov
jmp
call
inc
mov
sub
cld
shlb
cwtl
or
cmp
jg
cmp
cmp
fsub
sub
aaa
jmp
push
pop
cmp
xchg
mov
inc
jns
outsb
add
jbe
sbb
mov
pop
dec
cmp
rol
cmp
cld
aad
jnp
mov
jb
push
add
cmp
pop
fs
outsl
jo
dec
cmp
xor
cmc
mov
push
and
popf
mov
inc
aam
lock
jmp
push
mov
inc
cmp
pminub
jnp
adc
add
subl
mov
mov
cmpsb
cmp
dec
cmp
push
sarb
js
je
shl
mov
add
lods
cmp
push
xchg
cmp
push
bound
movsl
push
inc
inc
dec
dec
and
imull
cmp
pop
push
fs
dec
cmp
push
cld
xor
shr
mov
mov
into
mov
aam
rcrl
mov
mov
data16
adc
cmp
and
cmp
add
mov
pop
cmp
aad
adc
cltd
push
cmpb
cmp
push
push
cmp
mov
sahf
inc
mov
add
cmp
inc
loope
pop
cmp
push
cmpb
stos
xchg
lret
jp
mov
mov
popa
sahf
add
icebp
sbb
dec
jg
pop
mov
cld
leave
repnz
fwait
xor
in
cmp
and
xor
movsb
scas
rolb
loope
xchg
cmp
addr16
jnp
popf
cmp
dec
add
ficoms
add
xchg
or
add
mov
ret
lds
mov
orb
in
xchg
inc
cmp
fisubs
decl
cwtl
jae
fnstsw
lret
daa
rcll
out
andl
push
roll
ljmp
cmp
int3
lcall
mov
push
and
mov
sub
pop
lahf
mulb
add
push
or
loopne
xchg
mov
pushf
pop
movl
js
cmovl
xchg
push
outsl
scas
leave
cmp
mov
mov
push
clc
mov
sub
jl
cmp
mov
push
cmp
mov
sub
mov
icebp
cli
lahf
cmp
pop
dec
lds
test
cmp
inc
outsb
sbb
mov
ss
rcl
xor
sub
call
mov
cmp
je
xchg
nop
outsb
cld
pop
cmp
jg
inc
ja
lods
push
mov
icebp
cld
sarb
cs
push
mov
xor
xchg
xor
cmp
aad
cld
mov
cmp
cmp
in
testb
test
cmpsb
ja
out
and
mov
mov
ret
std
push
cmp
sarb
into
test
or
xchg
mov
dec
cmpsl
sub
jmp
push
and
enter
ss
sbb
xchg
xor
hlt
add
mov
inc
inc
loopne
lret
das
inc
outsl
dec
clc
jb
jnp
push
xor
imul
movsl
dec
sbb
xor
xchg
adc
inc
fiadds
xor
adc
inc
pusha
addl
ds
dec
add
sbb
js
sbb
sub
stc
out
int3
inc
lret
subl
adc
dec
add
icebp
out
push
xor
xor
pop
xchg
cmp
vdivps
jb
in
push
cmp
pop
jae
xchg
jp
lret
lcall
dec
iret
adc
push
les
in
cmp
push
outsb
fsts
cmp
push
pop
mov
adc
aad
lock
hlt
and
mov
int3
pop
lds
inc
jbe
rorl
fs
out
xor
aad
mov
cmp
jae
inc
cwtl
sub
vsqrtpd
jge
xorl
add
push
leave
xchg
xor
repnz
aad
faddl
add
cmp
add
fsub
movsl
cmp
es
cmp
test
xor
stc
test
mov
xor
jg
mov
stos
outsb
dec
adc
std
es
push
jbe
stos
xlat
cmp
imull
gs
loop
aad
mov
xor
sbb
fnstenv
out
cmp
push
pop
mov
cmp
push
outsb
hlt
sub
mov
or
lock
das
arpl
test
adc
pop
cmp
scas
mov
pusha
test
jbe
in
push
dec
arpl
mov
jg
sub
movsl
inc
incb
ss
mov
and
aam
mov
dec
push
cmp
pop
inc
es
out
dec
fld1
xchg
cmp
dec
test
pushf
pop
divl
push
dec
addb
mov
loopne
cmp
cmp
outsb
data16
pusha
in
dec
adc
push
clc
push
xorl
mov
movsl
fbstp
mov
test
and
out
addr16
movsb
push
push
mov
sbb
out
add
jge
inc
xor
lret
cmc
mov
pop
pop
or
pushf
cmp
xchg
inc
popf
mov
xchg
jo
xchg
sub
fadd
dec
push
int3
mov
test
mov
js
repz
mov
jmp
cmp
add
negb
pop
mov
cmp
xor
and
enter
mov
je
cmp
imul
mov
lods
aaa
push
cmp
loopne
aam
fwait
pop
cmp
fisttpl
and
push
cmp
ljmp
arpl
cmp
mov
xchg
call
sbb
les
scas
inc
cmp
and
out
shll
imul
cmp
bsf
cmp
sub
div
loope
mov
andl
js
mov
jmp
cmp
jle
mov
cmpsl
cmp
es
cmp
cmp
call
add
in
sbb
sbb
xor
shrb
sti
xor
dec
mov
push
adc
out
in
cmpsl
rcl
in
sti
cmp
cmp
fcomps
jo
and
xor
call
sub
mov
insl
xor
jno
xor
cmpsb
dec
cmp
les
add
add
and
cmp
mov
stos
push
cwtl
fmul
xor
lcall
xchg
mov
cmp
rolb
mov
add
cmp
xchg
sub
mov
xor
cmp
cmp
xor
lods
mov
jbe
outsb
or
fwait
in
push
or
dec
movsb
dec
rolb
adc
dec
imul
btc
mov
cmp
jmp
and
adc
sar
cmp
mov
push
lret
enter
pop
movsbl
shr
mov
jecxz
popf
fldenv
std
sub
fildll
mov
outsl
xor
cmp
mov
lods
out
pop
mov
fcmovbe
stos
in
push
push
jecxz
repz
mov
pavgw
xor
push
mov
add
loopne
mov
push
add
test
jmp
jp
in
rcll
les
inc
inc
xorb
fwait
in
movsl
cmp
xlat
sbb
cmp
jnp
jb
xchg
or
lock
mov
movsl
xor
stos
aaa
lcall
shr
les
inc
fidivrs
cmp
out
ss
add
dec
xor
xchg
cmp
xor
fwait
shlb
lea
aad
out
mov
push
andl
lcall
gs
nop
jmp
xlat
repnz
mov
xchg
push
or
mov
pop
fldcw
cmp
cmp
cmp
inc
cmp
push
inc
stos
sub
sti
cmp
repz
pop
cmp
pop
cmp
jmp
fadds
fdivp
aas
xor
lret
stc
in
cmp
xlat
aam
push
mov
fmuls
cmp
fcoml
push
repz
push
sub
pop
fdivl
xor
push
sub
cmc
daa
bound
cmp
gs
dec
cmp
cli
jne
mov
jecxz
adc
ret
xchg
mov
and
orl
sub
push
loope
cmp
lahf
pop
or
xchg
jge
sub
fists
ss
movsl
cmpsl
push
cmp
cwtl
jns
jae
das
dec
cmp
and
cmp
pop
cmp
pop
mov
mov
mov
out
aaa
ja
data16
jno
push
cwtl
dec
fistps
add
mov
int3
and
add
outsb
cmp
stos
mov
cmp
inc
sti
pop
add
adc
ljmpw
cmpsb
cmp
lcall
sub
mov
arpl
xor
dec
int3
hlt
outsl
loope
and
movsl
imulb
sub
stos
add
push
inc
cmp
loope
hlt
sbb
pop
mov
mov
or
inc
mov
sbb
dec
popf
stc
cmp
xor
dec
or
iret
xchg
pop
mov
int
divl
cmc
and
adc
in
jae
sub
add
push
mov
jl
repz
out
pop
popa
xor
cli
jns
cmp
or
aaa
pop
stos
ljmp
dec
test
repz
xor
mov
adc
add
xchg
mov
add
adc
mov
fadds
and
enter
adc
lcall
scas
cmp
in
int3
jb
push
cmp
aas
sub
std
aad
testl
and
push
jno
lahf
jne
mov
jae
dec
jecxz
cmp
movsb
mov
inc
cmp
aaa
pushf
mov
fdiv
rol
push
cli
xor
jl
movsb
sbb
mov
rcrb
mov
loope
loopne
jo
cmp
xor
cmp
push
adc
and
mov
cmp
jb
orl
sbbb
jecxz
std
cmp
sar
fsubrs
and
popa
popf
push
mov
adc
pusha
clc
dec
insb
sbb
push
inc
push
cmp
cmp
mov
cmp
cmc
insb
jo
lods
mov
xor
inc
inc
mov
sub
jnp
adc
sub
push
rol
test
jecxz
sbbl
in
cli
and
movsb
add
mov
mov
sti
fists
cmp
dec
fadds
rcrl
push
jl
sti
insl
cmp
into
sarb
lds
clc
fmulp
stos
or
cmpsl
mov
add
in
and
mov
daa
fcoms
popf
das
adc
cmp
adc
shr
pop
sbb
and
cmp
cmc
das
push
cmp
and
rol
imul
cltd
addr16
cmp
cmpsl
add
loope
push
cmp
out
aas
or
loop
fdivr
sub
mov
or
mov
lret
sbb
or
scas
cmp
or
jno
xor
fadds
add
into
fnstsw
in
fisttpl
data16
cmpsl
adc
adcl
mov
gs
mov
sub
sar
in
xchg
jecxz
dec
xchg
sti
mov
add
and
cmp
push
mov
xchg
pop
jne
loope
ret
arpl
cli
or
aaa
fnstcw
sbb
scas
rcrl
mov
dec
mov
adc
mov
js
xchg
xchg
pop
test
cmp
xchg
dec
add
mov
iret
aas
cmpl
decb
fstps
pusha
inc
dec
cmp
cmp
dec
dec
addb
push
dec
aam
jg
dec
loope
xor
cmp
andb
cmc
fadds
pop
hlt
pop
cmp
dec
add
xor
les
mov
in
cli
add
rclb
push
test
addr16
inc
outsb
pop
mov
cmp
cmp
pop
cmp
add
addr16
cmp
arpl
fidivrs
leave
mov
stos
das
fsubrs
adc
or
mov
fnsave
push
pop
mov
cmp
mov
mov
mov
scas
cltd
fists
cmp
cwtl
lds
sbb
push
shll
pop
std
fcmovnu
fdivrl
xor
pusha
popf
data16
sub
inc
and
pop
orl
xor
push
mov
xor
mov
sbb
push
sarb
xor
jmp
jg
loop
outsl
xchg
and
dec
gs
cmp
shlb
into
loop
pusha
or
sbb
cmp
jns
push
cmp
jbe
js
dec
push
dec
cmp
push
ds
pop
add
push
cmp
or
dec
rclb
adc
xor
cmp
mov
xchg
enter
cmp
sbb
add
sub
dec
divl
sar
hlt
adc
cmpsb
mov
cwtl
shlb
sbb
ss
mov
xor
pop
clc
sbb
mov
dec
pop
cmp
xchg
lock
out
adc
or
and
rcrb
push
dec
into
outsb
jmp
daa
push
lock
hlt
ja
je
mov
loope
shr
iret
or
dec
dec
nop
mov
outsb
push
xchg
mov
xor
mov
and
cmp
xor
lea
daa
pop
cmp
pop
cwtl
fildll
cmp
add
sub
cmpl
adc
jmp
xlat
pop
xor
sbb
cmp
cld
inc
movsb
pop
jne
fistps
sbb
cmp
pop
xor
cs
xor
jecxz
xor
mov
and
ss
jle
fxam
pop
sub
fstp
addl
leave
daa
or
mov
inc
pop
cmp
mov
loop
xor
sbb
lcall
pushf
cmp
jns
lahf
loope
dec
pop
rolb
xor
adc
movsb
cmp
adc
shl
adc
xor
dec
cmp
aad
push
xchg
repz
enter
xor
ficoml
sub
mov
cmp
cwtl
jns
adc
ljmp
add
mov
push
adc
cmp
fstp
decl
mov
rcr
sbb
cmpsb
bound
insl
and
jno
aaa
xchg
cmp
rclb
xor
cmp
jne
inc
cmp
sbb
test
adc
aas
mov
adc
push
fstpl
push
cmp
in
jns
popf
movsl
cmp
and
sbb
jge
push
fldl
insb
popf
cmp
arpl
inc
push
shr
cmp
xor
jmp
jo
scas
and
mov
sbb
cs
mov
cmc
loopne
cmp
adc
jns
cmp
jmp
test
and
fdivl
push
lahf
cmp
xchg
negb
cmp
pop
popa
ss
mov
pop
cmp
add
popf
push
mov
cmp
adc
cmp
mov
jo
cmp
and
test
leave
inc
sti
and
add
out
cmp
insl
adc
mov
add
call
cmp
int3
lahf
int
adc
daa
repnz
bound
cmp
hlt
push
ret
xor
and
rcrb
pushf
pop
mov
bound
pusha
jg
daa
sbb
adc
xchg
sbb
and
int3
bound
xor
ds
lea
in
mov
insb
xchg
pop
cmp
mov
int
cmp
jne
pop
cmp
add
sub
cmp
incb
dec
pusha
js
mov
cmpsl
add
xchg
mov
das
push
imul
mov
mov
aaa
in
push
pop
sub
jns
andb
enter
hlt
cmp
or
xor
xor
aaa
push
xchg
cmp
in
sbb
push
pop
cmp
sub
loopne
in
push
shll
das
ja
add
xor
stos
rclb
cmp
std
pop
sbb
push
and
in
mov
xor
cmp
adc
push
jo
dec
and
cmp
lret
mov
xor
fstpl
stos
cwtl
roll
cmp
idiv
shrb
lret
icebp
sbb
and
add
xchg
js
push
incb
sub
jp
sub
ljmp
sub
out
fistpl
xor
adc
mov
sbb
xor
or
std
insl
rclb
mov
lock
out
pop
mov
inc
jmp
jno
jns
insb
cmp
pop
inc
repz
jbe
js
xchg
jne
jae
in
es
stos
adc
mov
push
jo
add
sub
out
xchg
push
lds
mov
inc
cmp
ret
cmp
and
adc
inc
test
cmp
imul
ljmp
test
stos
adc
pop
and
inc
arpl
insl
jp
addb
cmp
mov
jmp
xchg
test
cltd
cmp
xlat
add
mov
push
cmp
lahf
daa
aam
xchg
stc
lahf
mov
cli
push
jl
hlt
lock
in
xor
cmp
fildl
punpckhbw
out
sbb
cmp
in
aam
jb
fdivrs
nop
jmp
adc
xor
and
mov
cmp
dec
sub
and
cwtl
and
push
sub
fnstcw
fisubrs
push
pop
inc
enter
cmp
mov
cmp
jno
subl
fwait
stos
cmp
push
or
mov
xchg
out
cmp
push
test
popf
stos
mov
xchg
sahf
nop
mov
add
ret
xlat
push
jne
sub
lcall
sub
pop
fs
and
pop
daa
icebp
rolb
aam
movsl
dec
shl
rorb
sarb
jb
mov
push
sbb
cmp
inc
xor
mov
ja
mov
pop
mov
cmp
outsl
movsl
jl
sub
aam
cmpsl
sbb
cs
and
cmpl
shrb
rcll
out
sub
push
xor
fucomp
pop
fistps
bound
and
cmp
add
nop
add
mov
aam
dec
cmp
sbb
ret
cmp
imul
or
outsb
in
cli
jecxz
cmp
push
and
pop
inc
fwait
aam
sbb
repz
decb
insl
jle
push
cmp
xorl
mov
dec
mov
and
xor
cmp
pop
je
daa
push
insb
mov
and
mov
ret
mov
or
iret
arpl
outsb
out
icebp
mov
sahf
sarl
imul
movsl
in
xor
jg
cmp
rcrl
xchg
jae
mov
rorl
and
cmc
xchg
cld
mov
in
sbb
inc
jg
cld
and
cmp
and
xor
adc
push
push
insb
cmp
pop
xor
mov
xchg
jg
push
cmp
push
and
cmp
mov
fmulp
xor
dec
aaa
dec
loop
cmp
dec
jns
cmp
mov
inc
push
popf
out
cmp
mov
cmp
sbb
pop
orl
xchg
cmp
pop
adc
mov
cmpsb
lods
xlat
pop
in
cmp
cmp
rorl
lcall
xchg
inc
jmp
add
outsl
lret
mov
sub
loopne
push
pop
scas
out
adc
jl
cmpsb
push
cmp
adc
sahf
lcall
leave
cmp
inc
jl
pop
sbb
iret
mov
js
push
jecxz
xor
imul
enter
sbb
pop
in
xchg
es
mov
cmp
rclb
sti
xor
cmp
sbb
cmc
je
hlt
icebp
and
shlb
les
or
mov
pop
test
pop
add
add
outsb
mov
fcompl
sub
dec
lds
jl
out
aaa
cs
sbb
cmp
lcall
and
or
ss
lcall
mov
fwait
xor
and
and
inc
movmskps
cltd
xor
lahf
lret
pushf
pop
mov
cmp
inc
xchg
js
jo
shr
std
shrb
jmp
or
sub
ret
push
xor
lds
dec
insb
jge
xor
fsubrl
sbb
xor
aas
xor
xchg
rcrb
sbb
sub
push
fisubs
adc
cmp
movsl
fmuls
mov
cmp
imul
faddl
add
enter
add
push
call
pop
aaa
loope
les
pop
or
cli
and
arpl
shrb
xor
add
and
sbb
cmp
jb
jne
cmp
inc
inc
mov
test
sub
lahf
fidivrs
mov
loop
cmp
in
stc
jb
cwtl
adc
xchg
jmp
cmp
cmp
clc
cmp
or
aaa
sub
inc
add
cmp
cmp
mov
mov
test
cmp
js
inc
jle
movsl
iret
aaa
or
pop
jo
scas
jge
xor
xchg
mov
xchg
in
inc
addb
jmp
jg
or
cmp
add
mov
mov
add
movsl
mov
dec
and
cmpsl
dec
mov
inc
ss
nop
or
xor
movsb
bound
lods
pop
or
into
std
popf
adc
mov
add
mov
jb
xor
push
sub
adc
ret
cmc
pop
enter
mov
insb
jo
push
push
add
scas
mov
cmp
ss
test
nop
push
sub
sbb
xor
arpl
jb
aas
mov
pop
das
adc
cmp
dec
cmpsl
loopnew
dec
cmp
cli
dec
cmp
in
cmp
pop
push
add
imul
jno
cmp
mov
xchg
dec
xchg
idivb
mov
dec
scas
jg
xor
rclb
xorb
hlt
xor
cmp
cmp
ds
aam
sbb
dec
cli
xlat
inc
fwait
ror
insb
loope
jge
push
leave
adc
xchg
lods
mov
cmp
and
lcall
push
ret
mov
pop
cmp
loop
and
test
stc
ja
push
and
inc
scas
ret
push
fwait
cmp
lahf
les
in
or
pop
jbe
arpl
dec
dec
mov
imul
rcll
xor
push
inc
push
sbb
mov
push
mov
test
add
stos
xchg
xchg
mov
jle
push
jae
xor
ss
jg
in
mov
xor
stos
sbb
cmp
cmp
sbb
repnz
clc
ss
mov
shl
pop
jl
pop
cmp
or
rcr
cmp
stc
mov
mov
push
inc
popf
pop
repz
xorl
sub
and
xchg
adc
sbb
mov
fcoms
mov
xor
cmpsl
lods
dec
mov
fcompl
in
jmp
cmp
stc
mov
leave
mov
call
add
adc
add
mov
mov
xor
inc
sub
int3
lds
lock
sub
leave
arpl
jnp
jb
mov
pop
imul
or
sbb
stos
insl
rorl
push
mov
cmp
dec
add
sbb
cld
cmp
sub
loop
ss
xchg
jecxz
push
popf
cmp
insb
inc
cmc
pop
sub
call
sbbl
adc
pop
mov
aas
and
inc
test
sbb
xchg
cltd
inc
pushf
gs
sub
add
scas
or
sbb
adc
aad
stc
movsb
cmp
pop
xchg
mov
sarb
or
jg
xchg
pop
add
test
push
stos
ss
jmp
in
call
jne
add
sbb
add
sub
lock
cmc
in
mov
cmp
pop
clc
cmp
test
enter
loope
and
cmp
and
loopne
pop
mov
lea
sub
arpl
out
sbb
push
icebp
cld
mov
push
aaa
push
pushl
xchg
enter
mov
xor
inc
add
push
push
ret
lea
add
xor
and
subb
pushf
cmp
adc
loop
cmp
push
into
adc
sbb
push
ja
push
xchg
jle
mov
stos
add
js
mov
inc
cmp
vmwrite
hlt
xor
jge
rcrl
cli
cmp
mov
or
cmp
mov
add
in
xchg
mov
insb
test
inc
aad
pop
xor
cmp
jo
cmpsb
fistps
out
mov
add
mov
mov
in
das
ss
test
xor
jecxz
cmp
mov
inc
int
cmp
xchg
out
lea
addr16
loop
movsb
sbb
movsl
cli
cs
lock
ret
fistpll
ja
dec
xlat
mov
js
call
pop
popf
mov
incb
in
rol
and
fs
iret
pushf
ret
inc
cmp
pusha
ja
mov
inc
dec
jmp
push
arpl
lret
xor
mov
loope
xchg
cmpb
add
or
xor
daa
cwtl
mov
outsl
pop
adc
lods
adc
push
mov
cmp
std
imul
mov
xchg
addr16
pop
fwait
dec
inc
repnz
jmp
ret
xor
call
shlb
cmp
mov
push
rolb
adc
xor
ret
outsb
push
fidivrl
sub
dec
ds
mov
sarb
inc
pop
shrb
or
pop
dec
or
sarl
lcall
outsl
push
pusha
cld
jge
cmp
inc
scas
mov
xchg
and
sub
roll
cmp
imul
repz
cmp
outsb
int
fldcw
xor
pop
fiaddl
mov
adc
dec
sbb
ret
sbb
hlt
add
ret
fcmovu
jecxz
ja
push
xor
mov
cmp
scas
push
pop
les
cmp
rolb
jnp
cmpsl
outsl
pop
cmp
lret
lods
fwait
cmp
mov
adc
push
inc
int3
aaa
shlb
mov
in
mov
rorb
mov
cmp
xorl
pushf
and
jns
fs
lcall
rdmsr
in
rcrl
cmp
add
dec
cmp
loope
fdivrp
push
mov
xchg
xchg
sub
jmp
repnz
ret
mov
xor
or
lret
pop
xor
mov
and
cmp
je
into
shrl
sti
cmp
sbb
sarb
jge
cltd
inc
out
pop
xchg
cmp
dec
and
cmp
aam
fsubl
int3
adc
jnp,pt
lods
cmp
mov
adc
call
sub
cmp
inc
mov
jb
jg
cs
fldt
dec
jmp
shl
and
add
and
mov
dec
add
fistpl
out
mov
cmp
or
jge
sbb
fbstp
in
jne
cmp
mov
pop
mov
jae
jo
xor
dec
pop
xor
mov
mov
loop
sub
xor
inc
mov
or
mov
dec
push
push
adc
xor
jb
or
cmp
mov
xchg
stc
icebp
sbb
inc
jmp
mov
arpl
sbb
xor
push
jnp
mov
stos
cmp
sbb
scas
orl
cmp
ficomps
and
test
sub
jns
or
hlt
pop
adc
xor
lds
loop
mov
jg
cmp
or
fidivs
lock
in
das
shrl
rcll
sysexit
or
sub
lods
insl
movsl
sti
call
mov
fnstenv
cmp
iret
jmp
push
fists
rcl
jge
insb
push
adc
outsb
dec
popf
pushf
enter
sub
lea
mov
mov
add
pop
mov
sub
pop
clc
dec
outsl
mov
xorl
ret
mov
pop
in
fsubrs
and
shll
loopne
push
cli
scas
out
cmp
stc
push
ss
mov
call
idivb
ret
pop
fcoms
xor
pushf
pop
xor
lret
bound
add
adc
jbe
jns
sub
icebp
test
mov
mul
xor
push
xchg
packssdw
into
adc
sub
inc
jge
in
add
xor
jnp
dec
mov
cmp
mov
lcall
push
and
in
or
inc
dec
jmp
pop
jge
test
insb
fmuls
jnp
cmp
xchg
popa
xor
xchg
push
cmp
jne
fs
jmp
mov
into
lret
cmc
mov
aaa
pop
imul
jno
lods
cmp
mov
repz
sbb
clc
in
sar
loope
aad
mov
imul
adc
jne
xor
icebp
sub
mov
sbb
movsl
aam
stc
leave
lock
dec
repz
test
lods
cmp
mov
aam
lea
arpl
mov
push
mov
jle
inc
int3
imulb
sbb
cmp
lcall
cmp
out
jno
cmp
cmc
leave
sub
or
stos
test
shlb
repz
xor
dec
and
inc
mov
adc
mov
mov
cmp
push
add
movsb
mov
or
push
cmp
cs
les
ret
dec
sbbb
inc
mov
and
dec
sti
or
imull
adc
add
movl
ja
push
or
sub
cmp
lock
sti
cmp
pop
mov
mov
fs
ja
repz
sahf
cmp
mov
sbb
imul
stc
xor
and
jecxz
cmp
popa
sarl
shlb
xchg
test
mov
jle
faddl
lods
into
mov
fstpt
in
lock
push
orb
dec
mov
imul
or
fisubrl
jne
xchg
mov
inc
loop
xchg
shlb
mov
lret
movsb
aaa
cmp
cmp
add
inc
xor
mov
mov
or
psrlq
xor
faddl
mov
jecxz
cwtl
jb
mull
push
jle
pop
mov
int3
mov
inc
inc
fcompl
push
xor
pop
push
stos
sbb
out
fcomip
mov
cmp
aam
sbb
push
push
stos
cmp
out
sub
adc
pop
mov
mov
add
add
cmp
icebp
pop
cmp
adc
jecxz
xor
cmp
shr
jle
add
or
jnp
jecxz
cmp
cmp
cmp
xchg
pop
cmp
sub
xor
or
xor
test
push
dec
ret
xorb
mov
pop
cmpsb
jb
adc
sahf
mov
push
cmp
fstpl
cmp
aam
cmp
inc
test
cmp
ret
sbb
cld
rcll
push
notl
sub
fcomp
or
and
mov
push
cmp
push
das
xchg
pop
and
cmp
inc
mov
ret
sub
jp
pop
xor
test
push
or
mov
mov
xor
in
mov
repz
les
ljmp
xor
jecxz
pop
pop
and
stos
cmp
inc
or
incl
jns
cmp
mov
pop
cmp
out
iret
pop
pop
scas
aam
push
rcl
jae
push
sbb
mov
pusha
ljmp
imul
daa
push
mov
adcb
xchg
fistpl
sub
cmp
pop
inc
iret
push
shlb
dec
mov
jmp
mulb
rcrl
insb
cmpsl
mov
pushf
mov
pop
cltd
repnz
out
aad
xor
cmp
mov
cmp
repnz
adcb
mov
or
add
or
rol
inc
test
lea
cmp
fcomi
dec
loopne
movsb
push
idiv
cwtl
cmp
add
inc
icebp
mov
repnz
popa
adc
mov
mov
jbe
xor
cmp
adc
lds
cmp
jae
jnp
test
push
sub
fwait
mov
xor
cmp
jno
adc
adc
ja,pt
test
imul
mov
mov
jo
loop
aad
dec
pop
push
je
lret
and
jno
or
jo
cmp
cmpsw
push
or
pop
lods
xor
mov
xchg
int3
mov
es
jne
sti
cmp
sbb
iret
sar
cmp
cmp
jb
test
add
xchg
cmp
cmp
fnstcw
out
inc
dec
cmpsb
mov
dec
cmp
push
xor
stc
in
pop
cmp
cli
loope
in
cmp
stc
scas
add
sahf
repnz
mov
fwait
jne
jae
stc
insb
idiv
mov
mov
cmp
in
mov
or
xchg
daa
out
and
in
jle
lock
adc
cmp
call
ja
sub
mov
and
or
leave
or
mov
mov
mov
inc
push
dec
or
xchg
xor
add
xchg
mov
cmp
getsec
in
mov
loopne
xor
add
test
mov
lcall
pop
push
jmp
ret
test
inc
je
aad
push
movsl
xor
xchg
mov
pusha
shr
add
cmpsb
cmp
push
jnp
mov
aad
pop
inc
hlt
cmp
and
push
cmp
stc
cmp
repz
xor
sub
jl
repnz
arpl
add
mov
sub
mov
sahf
mov
rcl
adc
sub
push
and
nop
cmp
cmp
xchg
dec
jl
cmp
das
mov
cmp
scas
sub
jl
sbb
sbb
scas
push
pop
jb
sub
je
cmp
sub
fs
fistl
cmp
xor
jne
xor
fldt
mov
ljmp
or
leave
jp
enter
sbbb
cmp
in
mov
scas
push
int3
push
cmp
mov
sub
cmc
cmp
adc
and
and
cmc
ja
scas
filds
cmp
or
fnsave
leave
cmpsl
mov
adc
movsb
repnz
aam
cmp
sahf
mov
dec
sbb
jno
add
imul
push
jae
and
and
xchg
push
inc
sarl
adc
sbb
hlt
gs
arpl
psubsb
jne
fstpt
into
movsl
xchg
nop
and
int
sub
adc
sub
inc
aaa
out
mov
and
nop
insb
xor
jl
and
outsl
mov
movsl
and
test
stos
push
cmp
popl
jnp
xor
xchg
xor
stos
loopne
xchg
cmp
stos
cltd
call
mov
jl
xchg
xor
dec
outsb
and
cmp
xlat
dec
jb
fdivp
mov
mov
push
push
enter
cmpb
fidivs
addl
sub
loop
loopne
out
inc
lret
cli
lock
std
inc
rcr
sub
push
loopne
es
fisubs
orb
and
dec
mov
sub
xor
jmp
cmp
pop
dec
mov
stc
aad
xchg
outsl
cmp
repnz
cmp
mov
cmc
loopne
adc
cmc
jl
test
mov
adc
mov
mov
pop
xchg
fucom
loopne
neg
jmp
adc
cmp
cmp
inc
push
popa
cmp
mov
pushf
out
add
xor
and
cmp
inc
fucomi
push
out
dec
cltd
rcrl
pop
movsb
stos
and
ljmp
ja
cwtl
pop
add
pop
ret
jae
cmp
lret
push
fcmovne
pop
repnz
or
adc
push
pusha
rcrl
rolb
xor
lret
pop
arpl
cmp
cli
push
xchg
inc
lds
mov
mov
icebp
push
sub
or
push
lret
cmp
in
cmp
cmp
mov
pop
add
xchg
cmc
jns
fistpll
shll
je
mov
jp
popf
popa
xchg
xchg
inc
rorb
mov
shll
or
fsubs
inc
xor
mov
cmp
cmp
xorl
rcrl
jp
mov
cmp
jge
cmp
jecxz
dec
mov
ss
mov
dec
mov
inc
int3
add
aam
loope
mov
inc
stc
enter
cmp
jae
dec
ljmp
jecxz
mov
xchg
and
xchg
cmp
sbb
in
fidivrl
fisubrs
cwtl
inc
fldt
aaa
iret
jne
imul
jbe
movl
pop
pop
stc
mov
adcb
adc
cmp
bound
cmp
in
xor
or
clc
add
xor
xchg
mov
cmpsl
inc
cmp
pop
push
cmc
decl
lret
dec
in
aam
xchg
mov
push
repz
fbld
in
and
mov
pop
or
push
loop
sti
scas
xchg
rorl
xor
test
mov
xor
pop
or
or
mov
pusha
push
xlat
ljmp
push
repnz
test
push
cld
mov
lret
in
nop
push
outsb
mov
out
fldt
cmp
gs
cmp
adc
cmp
sbb
mov
shrl
adc
cmp
push
jge
mov
add
cmp
add
scas
cmp
fsubrp
xchg
pop
jbe
adc
dec
aaa
mov
cmpsb
pop
push
enter
mov
sbb
cmp
stos
es
xor
testb
dec
mov
sub
enter
orb
mov
orl
cmp
fimuls
aaa
jmp
lcall
cmp
or
mov
push
mov
jg
ret
test
pushf
test
je
cmpb
push
dec
jl
and
mov
add
sbb
cmp
jnp
xchg
cmp
int
push
ret
or
int3
add
and
cmp
sti
leave
pop
cmp
add
jl
test
stos
dec
mov
dec
mov
mov
cmp
push
daa
cmp
insl
or
sbb
inc
push
cmp
mov
adc
out
push
mov
int
mov
ja
sbb
sarl
scas
fsubrs
xor
jge
xor
jp
lret
call
jo
xchg
mov
sub
outsl
shl
std
xor
test
inc
jns
outsb
cli
lahf
mov
mov
arpl
push
lret
fnstenv
mov
cmp
jae
sbb
mov
and
mov
pop
idivl
cmp
push
mov
idivl
cmp
stos
jle
iret
add
dec
ja
fiaddl
pop
je
sbbl
clc
stc
lea
pop
mov
cmp
repnz
and
dec
xorl
cmp
shl
icebp
jge
sub
dec
inc
and
fnstcw
andb
mov
test
std
sti
aas
and
iret
mov
imul
mov
out
lods
cmp
fsubl
sbb
dec
jp
cmp
daa
mov
gs
mov
cmp
fnstenv
popa
xchg
adc
cmp
loopne
cmp
insl
push
shll
adc
cmp
push
ret
lret
cmp
cltd
cmc
adc
push
enter
jmp
cmp
fs
fildll
out
adc
sub
sbb
dec
mov
cmp
jg
shl
push
adc
movsb
mov
and
ss
sahf
fstpt
aas
inc
mov
rorb
jge
cld
xor
xor
pop
mov
aad
les
xor
adc
data16
lock
aas
aaa
movsb
lcall
fwait
loopne
scas
mov
mov
in
xor
test
xor
push
mov
sub
ds
insl
mov
pop
icebp
pop
pop
push
adc
cmp
mov
dec
jecxz
leave
test
in
pusha
inc
sbb
int3
xor
lods
hlt
pop
mov
leave
rorb
mov
or
mov
sub
pusha
xchg
fcoms
aam
dec
dec
fwait
icebp
or
roll
jb
fldcw
test
push
add
sahf
xchg
add
push
lcall
imul
popf
cmp
ficomps
adc
pushf
shlb
lock
cwtl
fcoml
fnstcw
and
jecxz
das
jg
xor
cs
sbb
shll
hlt
cmp
out
into
xor
call
test
aaa
cltd
lods
cmp
add
xlat
cmp
shlb
cmp
ret
pop
test
and
movsl
insl
test
hlt
push
xchg
xchg
cmp
test
dec
icebp
dec
in
movups
cmp
adc
shlb
mov
jge
inc
data16
jecxz
mov
out
push
dec
cmp
cmpb
cmp
int3
sahf
push
cmp
add
imul
mov
repz
cmp
ss
sti
rcr
pushf
xor
sbb
stos
fsts
xchg
out
sub
push
fwait
inc
and
aad
jecxz
push
pushf
lock
sub
in
dec
xchg
push
daa
xor
negl
sub
cmp
pop
mov
xlat
cmp
push
sbb
mov
add
xor
add
mov
cmp
insl
clc
cltd
xor
insb
mov
movsb
roll
mov
cmp
sbb
or
xchg
aad
and
popf
pop
popa
jno
sbb
fdivp
out
mov
xor
sbb
pop
cmp
into
inc
mov
testl
mov
mov
inc
adc
jle
xchg
iret
dec
pusha
orb
xlat
inc
add
dec
out
in
mov
leave
imul
jb
xchg
cmp
add
dec
add
js
or
jo
push
fisubrs
into
loop
mov
int3
mov
outsb
sub
in
lcall
mov
arpl
inc
cmp
int
xchg
cmp
bound
cmp
xor
icebp
cmp
push
fwait
mov
sub
sub
jp
xchg
aas
pop
xor
jmp
rcrl
push
and
iret
cmp
inc
icebp
movl
repnz
movsb
mov
je
fisubs
js
imul
aad
fdivs
pushf
sub
pop
inc
and
inc
leave
push
or
cmpl
lock
cld
xor
jb
cmp
lret
add
cmp
sub
dec
cmpl
xor
sbb
aas
xor
push
call
test
xchg
shrb
pop
enter
xor
cmp
xor
adc
repz
push
or
cltd
movsb
or
mov
hlt
repz
push
xchg
jle
fwait
inc
aaa
jl
arpl
clc
adc
flds
outsb
push
shr
test
mov
lods
jmp
adc
test
mov
sub
cmp
xor
mov
into
xor
push
stos
in
jle
ja
fldenv
sti
adc
das
adc
cmp
xor
or
ljmp
bnd
out
sarb
imul
imul
push
cmp
and
mov
xchg
jns
mov
out
sbb
pushf
adc
shl
xor
or
pop
xor
dec
cmp
rcrl
push
stc
shrb
pusha
add
cmp
insb
add
xor
cmp
mov
cmp
adc
sar
or
cmp
jecxz
ret
jmp
les
jb
loop
cmp
mov
xchg
sub
dec
add
aam
mov
leave
cmp
xor
scas
dec
xchg
enter
xor
sbb
jecxz
imul
pushaw
jge
xor
ror
ret
or
lcall
add
cmp
aam
pop
enter
ss
in
and
cmp
loop
xchg
jns
inc
cmp
lods
dec
imul
popa
mov
sarl
inc
jmp
into
loope
sarl
fldt
icebp
pop
sbb
ja
add
xor
fwait
cmpl
pushf
mov
cmp
int
into
mov
push
sti
aaa
jle
clc
mov
fimull
push
scas
and
dec
daa
xchg
pushf
pop
sub
bound
rcrl
test
add
xchg
cmp
das
pushf
popa
test
and
aas
leave
push
push
push
jae
scas
jmp
jmp
rorl
jecxz
push
sarb
js
gs
xor
jae
cmpsl
or
push
dec
jne
cmp
xor
sub
xchg
adc
cmp
mov
outsl
iret
test
fldln2
jl
xchg
xor
mull
shrb
ss
inc
rorb
push
cmpsl
repz
mov
push
imul
inc
stos
movb
aaa
sub
xor
push
and
aas
xchg
xor
ret
and
in
jnp
out
je
adc
push
xchg
cmp
test
add
inc
and
xor
in
push
cmp
pop
movsl
pop
sub
and
jb
xor
ja
pop
cmp
pop
mov
hlt
sub
and
mov
and
or
xor
mov
insl
cmp
negl
xchg
cmp
test
in
xor
or
add
std
mov
addl
pop
sub
daa
adc
out
sbb
in
adc
and
nop
or
cmpb
jae
jo
xor
adc
add
imull
and
xor
cs
lret
add
dec
loop
leavew
push
repz
cmp
subb
dec
cmpsl
sti
mov
aaa
cltd
sbb
cmp
sbb
imul
push
stos
test
pop
cmp
in
addr16
fwait
xor
cmp
aas
stos
idivl
or
sti
push
cmp
cmp
mov
xor
add
inc
lcall
sub
push
xchg
xlat
mov
dec
movd
cmp
cmp
adc
jb
sub
pop
xchg
mov
cmpsl
add
out
add
cmp
shl
in
inc
and
sti
push
jae
movsb
fcoml
and
cmpsb
sbb
int3
adc
mov
pop
outsb
popf
lahf
mov
dec
dec
loope
das
xor
insl
mov
les
out
lahf
jno
cmp
imul
in
xor
movsl
pop
sahf
cmp
or
jmp
leave
frstor
adc
xchg
in
xlat
adc
push
loop
pushl
jne
ja
pop
iret
cmpsl
mov
or
mov
xchg
push
pop
xor
aaa
test
add
fidivl
inc
sbb
xchg
pop
or
repnz
insl
jmp
mov
push
fisubrs
das
pop
cmp
xchg
je
test
in
int3
cmp
mov
cmp
cmp
jne
das
push
mov
mov
dec
xor
mov
cs
popa
inc
cmp
mov
fnstenv
outsl
jno
xchg
sti
xlat
pop
js
mov
add
push
xchg
and
sbb
pusha
mov
dec
xor
inc
dec
push
mov
int3
iret
ja
xchg
xchg
shl
int
xor
je
dec
pusha
test
mov
inc
scas
sub
std
pop
ds
dec
xor
mov
or
cwtl
enter
xchg
mov
pop
cmp
add
popf
xor
inc
mov
jle
shl
xlat
out
or
jo
cs
rolb
pushf
mov
cwtl
cwtl
ss
xchg
add
cmp
xor
xchg
std
dec
mov
cmp
ss
and
add
aam
pushf
pop
jmp
cmp
insb
mov
movsb
cmpsb
inc
ds
lea
cmp
mov
out
cmp
ja
xchg
jbe
pop
and
mov
xchg
shlb
test
push
xor
mov
ficomps
ret
mov
cmp
mov
int
fildll
mov
dec
cmp
lds
adc
or
push
sub
cmpsb
es
xor
out
add
mov
jno
xor
lds
cmp
ss
out
lea
sub
mov
lcall
xor
mov
jo
std
cld
and
ja
out
call
mov
xor
in
outsl
lcall
adc
jb
aas
cmp
outsb
test
fmul
call
out
imul
ss
push
xchg
push
stos
lret
fcoms
incb
test
jl
jbe
aam
clc
cmp
hlt
cmp
popf
push
imul
jno
mov
inc
test
jl
scas
xor
lock
xchg
aad
mov
ret
xor
mov
sub
dec
dec
cmp
cmp
mov
cmp
and
dec
imul
in
adc
aaa
sub
xor
fcoml
repnz
xchg
and
sub
mov
inc
jb
sti
stc
ret
xor
lret
xor
jo
shrl
cmp
mov
nop
mov
inc
cmp
cmc
mov
gs
pop
cmp
and
ds
mov
mov
imulb
mov
sbb
ret
jmp
xchg
mov
or
inc
orb
sahf
je
sahf
cmp
push
jp
jb
ror
popf
sub
pop
in
movsl
shll
cmpsb
xor
mov
pop
cmp
lock
cmp
dec
and
sub
sbb
jno
xor
mov
xchg
cwtl
insb
and
rclb
or
dec
in
cmp
arpl
mov
out
mov
dec
pop
sbb
xchg
and
jmp
sub
aaa
jp
mov
movsb
sarl
push
bsr
into
sbb
add
cmp
ljmp
xor
inc
and
sub
loop
lea
xor
cmp
sbb
sub
pop
je
loope
jge
sbb
iret
mov
fisubrl
cmc
into
cmp
cmp
stos
cmp
dec
imul
inc
dec
enter
or
cmp
adc
rol
out
cmp
mov
loope
scas
xchg
lds
scas
enter
sbbl
or
jnp
and
cmp
inc
mov
and
jmp
or
jbe
test
cmp
ljmp
cmp
mov
jp
fdivrs
push
sub
or
push
cmp
add
jmp
mov
enter
or
pushf
das
jne
repnz
insl
fisubl
movsb
cmp
rcrl
repz
or
push
jmp
bound
xchg
and
add
cmp
ja
xor
aad
pop
mov
push
popf
into
cmp
xor
sbb
movsl
push
jmp
cmp
call
or
inc
dec
jb
xor
xor
lods
scas
cs
neg
pop
insb
pop
mov
mul
cmp
xchg
mov
gs
push
or
dec
cmp
mov
sbb
sbb
pusha
mov
addr16
xor
xor
cmp
jae
out
cmp
xchg
push
push
mov
cmp
push
mov
sub
cmc
jle
loope
xor
xchg
sub
sbb
push
flds
insb
inc
out
icebp
bound
cmp
je
cmp
test
lret
mov
lahf
insb
xor
xchg
fbstp
inc
lret
mov
xchg
mov
push
fcomps
pushf
mov
ds
cmp
es
sub
dec
push
jmp
pop
xlat
cmp
add
bnd
cmp
pop
cs
pop
push
mov
popa
mov
cmp
in
sarb
fs
push
js
enter
cmp
faddl
test
mov
xor
pop
cmp
imul
cmp
xor
jge
pop
jecxz
jnp
hlt
xchg
imul
inc
dec
mov
sub
mov
mov
fimuls
cmpsl
pop
jns
inc
cli
cmp
add
jecxz
fistpll
pop
xchg
jg
in
cltd
cmp
scas
add
or
les
pop
cltd
mov
cmp
out
add
adc
imul
sbb
cmp
jo
arpl
leave
ja
push
clc
out
push
mov
fbstp
cmp
shlb
or
mov
cmp
inc
mov
shrl
mov
mov
das
fisubl
cmp
sub
test
and
sub
popl
dec
xor
xor
cmp
aam
mov
jb
add
out
sub
jge
shlb
cmp
inc
arpl
add
and
aad
sub
cmp
fisubrl
add
xchg
adc
sub
insl
push
xchg
outsb
pop
and
clc
gs
cmp
addr16
push
or
stos
add
hlt
ss
loop
add
cmp
add
sub
mov
cmpb
push
or
sbb
cmp
jae
push
xchg
cmp
scas
push
cltd
cmp
nop
mov
cmp
jecxz
jl
xor
mov
cmpsl
ss
jmp
mov
inc
push
icebp
cmp
adc
div
lret
popa
ret
xchg
pop
xchg
test
cmp
push
cmp
insl
inc
xor
cmc
pop
leave
jns
cmp
sarb
pushl
jg
push
sbb
popa
cmp
jb
incb
xchg
push
push
pop
sub
xchg
jns
cmp
clc
test
cmp
out
aad
cmp
gs
je
inc
cmp
and
fs
fwait
mov
test
fcoms
and
adc
mov
out
pusha
cmp
lahf
movsb
fsubrl
mov
push
and
push
cmp
mov
inc
imul
push
xor
and
hlt
jns
pop
arpl
dec
imul
popa
shrb
mov
and
push
and
fldenv
xor
push
and
dec
cmpsl
cmp
xchg
pop
and
in
xor
ss
les
lock
xor
and
outsl
jo
jp
pop
xor
pushf
xchg
imul
pop
ds
push
sub
sbb
ss
js
xchg
ss
xor
pop
jo
mov
cmp
fwait
pop
cmp
xor
pushf
sub
fcom
stos
popa
jnp
add
push
push
push
add
cmp
nop
jecxz
sbb
jne
fnsave
push
dec
cli
scas
and
mov
jns
jno
xor
push
mov
cmp
addr16
cmpsl
enter
mov
js
test
cli
adc
stos
push
in
outsb
test
filds
shl
cmp
cmpsb
jl
shlb
mov
adc
xor
movsl
push
cmp
test
and
shl
xor
cmp
mov
xor
test
sti
push
call
negl
and
repz
arpl
jns
pop
adc
aas
fldl
cmp
jae
or
and
cmp
or
jge
rcr
cmp
pop
xchg
sahf
iret
sbb
jg
insb
fsubrs
and
and
xor
mov
addb
jbe
sarl
daa
cmp
dec
adc
cmp
sahf
fcomp
cmp
add
imul
push
aad
cmp
inc
sbb
push
repnz
out
cmc
insl
and
jae
push
lock
and
rol
mov
cmp
lock
jg
xor
fsubs
jl
cmp
roll
push
lds
jmp
push
bound
iret
adc
roll
dec
push
int
cmp
cmp
rorl
jmp
mov
push
cmpsb
mov
mov
xchg
add
mov
ss
dec
mov
lahf
sarl
test
sub
rcl
inc
outsl
pop
mov
push
mov
ret
sti
cwtl
cmp
lret
aaa
ret
and
jmp
xor
add
js
jecxz
jb
mov
xor
repnz
mov
call
mov
cmp
and
adc
xor
cmp
cli
xor
cmp
jecxz
adc
mov
pop
ja
push
or
cmp
and
cmp
jle
push
addr16
imul
das
test
and
stos
mov
leave
xor
and
pushf
movsl
jae
idiv
dec
dec
jg
cmp
daa
pop
ficomps
jne
add
sub
sbb
lods
lea
std
or
xor
fldt
aas
ja
pushf
jg
lahf
adc
loope
push
outsb
and
and
sub
je
insb
cmc
cmp
adc
pop
cmp
rcl
das
enter
sub
cmp
sbbl
inc
pop
cmp
or
push
cmp
out
jge
icebp
rcl
enter
jle
repz
aaa
fucomip
mov
push
das
sbb
push
mov
fnstenv
fcoms
dec
pushf
mov
bound
rorl
mov
inc
jmp
mov
inc
call
stos
lock
lret
stos
nop
cmp
xlat
mov
and
in
mov
ja
adc
inc
lea
inc
mov
addl
test
jns
ss
push
das
add
mov
stos
roll
test
ss
sahf
jg
add
jl
cmp
cmp
movsb
cmp
pop
fs
pusha
jmp
cli
repnz
outsb
int
daa
mov
mov
fdiv
push
lods
cmp
repnz
popa
scas
xlat
adc
imul
dec
in
sbb
insl
inc
pop
sbb
push
mov
jmp
dec
xchg
pusha
pop
mov
jb
mov
adc
mov
pop
add
stc
sbb
cmp
dec
in
xor
inc
push
or
mov
data16
mov
nop
stos
out
das
xor
mov
lea
iret
cmp
ja
push
or
mov
add
xor
xchg
push
fidivrl
cmp
jmp
sub
adc
jbe
cmp
enter
jns
add
cmpl
cmp
popf
movsb
xchg
lahf
inc
dec
dec
jle
ret
add
shll
ljmp
sub
pop
cmp
adc
pop
add
xor
dec
xor
fnstsw
fxch
bound
dec
sahf
cmp
xchg
jecxz
movsb
scas
xor
inc
cld
std
fst
mov
inc
adc
pusha
mov
jbe
add
mov
jecxz
mov
sbb
test
cs
shlb
push
out
cmp
xchg
sub
jo
xchg
aam
out
mov
cmp
jge
pop
push
filds
mov
push
pop
mov
data16
cmp
fldl
dec
adcb
cld
mov
fldcw
cmp
dec
nop
lds
lock
aaa
mov
cmp
int3
cmp
or
xor
cltd
fisubrl
adcb
flds
xchg
or
ja
shrl
nop
pushf
mov
sbb
bound
mov
jge
or
cwtl
cmp
and
enter
xor
pop
aaa
sub
in
shlb
or
gs
xor
mov
mov
frstor
clc
notb
and
out
mov
and
cmp
repz
adcl
cmp
int
push
xor
lret
mov
and
mov
repnz
rorb
mov
icebp
test
sarb
imul
mov
jne
and
cmp
mov
jno
and
out
lcall
xor
out
jae
push
sbb
sbb
cmc
jg
inc
jb
das
xor
shl
xor
jo
pop
xor
xor
xchg
cmp
lahf
cmp
repz
imul
pop
fwait
outsl
inc
or
ds
pop
dec
sbb
dec
push
insb
push
xor
xor
sbb
push
mov
outsl
test
fldcw
pop
ja
clc
xchg
adc
mov
adc
add
push
movsb
daa
dec
lods
cwtl
xor
test
pusha
xor
pop
dec
xchg
ljmp
insb
cmp
gs
mov
shrb
sahf
sub
idivb
mov
mov
pop
sbb
and
pop
adc
mov
adc
inc
shrb
sub
pop
dec
stc
cmovns
push
movsb
sub
push
int3
sbb
jge
or
xchg
test
jns
cmp
pop
pop
pop
mov
cld
jns
aaa
add
xor
xchg
sbb
xor
pop
clc
push
adc
sbb
insb
mov
xor
clc
xchg
mov
jb
and
push
xchg
aas
pop
popf
xchg
xchg
inc
mov
xchg
jb
es
xor
adc
inc
adc
push
sub
aam
imul
ja
mov
pop
cmp
stos
cwtl
xlat
xchg
mov
inc
cmp
inc
dec
xchg
and
cmp
mov
pop
push
xor
icebp
test
and
pop
jmp
jae
outsb
push
cmp
pop
shlb
clc
pop
and
inc
or
lods
push
out
sbb
cmp
pop
cltd
in
aad
xor
cmp
fistpll
and
adc
cmp
pop
dec
or
cmpsl
stos
pop
repz
xor
and
push
insb
jp
inc
bound
pop
int
push
in
sbb
mov
insl
je
js
cmp
push
adc
adcb
adc
inc
add
pop
jb
pop
sbb
in
cmp
stc
fisttpl
adc
sub
insb
repz
notb
xor
ja
rolb
sbb
cmp
mov
aaa
mov
out
sbb
insb
and
sbb
lcall
imul
rcll
sub
jae
cwtl
xor
in
cmp
cmp
xor
lods
push
scas
cmp
inc
dec
cmpl
xchg
movsl
nop
xor
jno
insb
sbb
orl
lret
gs
rclb
outsl
xor
sahf
rolb
cmp
mov
sub
iret
stc
cmp
jmp
dec
fcoms
das
std
inc
mov
ja
add
mov
or
lds
icebp
fldl
fs
sar
hlt
leave
clc
adc
mov
jnp
dec
ret
dec
inc
push
push
and
xlat
mov
scas
pop
mov
jg
scas
sub
sub
mov
andb
sbb
sbb
inc
lods
cmp
dec
dec
fdivr
add
mov
cmp
das
mull
add
push
mov
clc
cmp
sbb
xor
in
in
cmp
ja
inc
xchg
iret
mov
dec
into
xor
imul
js
jp
scas
pop
insl
xor
or
mov
xor
hlt
adc
cmp
enter
add
ja
push
inc
jmp
aaa
fsubs
xor
fwait
cmc
xor
idivb
enter
test
jmp
xor
cmpsb
dec
sbb
mov
test
test
std
cmp
sahf
sti
scas
rcrb
cmp
stos
mov
cmp
jnp
adc
lea
add
adc
mov
int3
inc
arpl
dec
jge
rclb
push
outsl
xor
sub
in
imul
outsl
pop
rclb
and
lea
mov
sub
mov
or
jo
mov
lods
cmp
cwtl
sub
sub
call
cmp
xor
insb
fucomip
fistps
add
aam
cmp
repz
cmp
ja
mov
push
jb
aaa
repnz
jecxz
push
xchg
sbb
sbb
std
mov
aam
jae
push
sbb
dec
xchg
pop
xor
mov
das
adc
xor
pop
clc
xor
std
mov
mov
cmp
fidivs
add
pushf
ja
mov
push
adc
arpl
add
mov
push
or
cmp
movsl
mov
in
int3
add
inc
aaa
out
lea
cmp
or
cmp
loop
mov
cmpsl
aam
cmp
cmp
aaa
cmpsb
andl
lret
cmp
jo
mov
sbb
xchg
inc
aam
pusha
iret
xor
fsubrs
jbe
jl
mov
fisubrl
lods
cmp
aam
mov
mov
addr16
test
mov
mov
insb
jne
xor
add
test
and
xor
movsb
add
in
sbb
test
jae
cld
jle
pop
push
jmp
pop
jae
push
adc
aas
inc
pop
outsb
push
inc
inc
std
mov
loope
mov
pop
pop
xor
loop
xchg
cmp
sub
dec
in
push
fdivs
sub
inc
movsb
add
cmp
push
adc
add
shlb
sub
enter
sbb
sbb
ret
xchg
stc
enter
ss
inc
xchg
xlat
repnz
fnstcw
xor
in
dec
inc
ret
mov
mov
mov
ss
scas
je
sti
sbb
sbb
test
call
jae
pop
sti
je
cmp
xor
sti
jnp
orb
or
pop
movsb
mov
fisubl
movsl
xchg
lcall
sub
repnz
sub
push
cmc
lret
sub
adc
add
mov
and
cmpsb
cmp
mov
and
xlat
movntq
into
scas
cmp
cli
call
push
cmp
jg
mov
dec
cmp
mov
xor
inc
pop
fcoms
lods
ret
mov
sbb
cmp
stos
fdiv
shl
in
xor
bound
or
inc
out
xchg
lds
inc
arpl
sub
fsubrl
pop
sub
jno
shrb
jbe
xor
adc
inc
sbb
adc
shlb
push
add
add
fldcw
test
daa
lds
xchg
jno
pop
repz
and
out
cmp
add
aas
and
das
cmp
fisttps
scas
stos
jae
fs
cmp
fdivrs
pushf
js
in
aam
mov
outsl
cmpb
jp
jae
sub
lcall
mov
pop
aaa
add
fcomi
pop
sbb
sbb
sub
mov
jmp
push
mov
stc
mov
stc
das
jae
inc
out
mov
cmp
je
je
push
cmp
outsb
cltd
cmp
xchg
outsl
xor
ljmp
mov
jmp
fdivs
cmp
xor
sbb
aam
adc
in
mov
pop
cmpsl
cmp
ret
jb
cwtl
sbb
add
aaa
mov
sbb
push
xor
cmp
mov
movsb
xchg
out
push
clc
jbe
adc
lods
mov
cmp
enter
cmp
fbstp
cmp
inc
sbb
jecxz
in
inc
pop
insb
inc
sbb
and
or
imul
cmp
cmpsb
das
cmp
mov
mov
ret
pushf
dec
mov
scas
cmp
lds
xlat
imul
pop
repz
cmp
xchg
push
mov
cmp
add
lods
push
or
pushf
ret
adc
xor
out
fistl
adc
jae
lock
xchg
cmpsb
in
xor
hlt
out
sarb
xor
sarl
mov
cmp
mov
fwait
push
inc
cmp
lret
je
xlat
dec
cmp
or
cmp
xor
nop
psubusw
xchg
insl
sub
into
add
shr
pop
stos
fadds
xchg
pop
sbb
aaa
inc
js
mov
out
add
push
xor
inc
xchg
loopne
jb
jae
jnp
sub
mov
cmc
std
int
mov
cmp
mov
xchg
adc
sbb
and
mov
jo
aam
fildl
xchg
sbb
stc
repz
jle
jbe
jo
shll
add
mov
pop
ljmp
in
and
iret
xchg
push
scas
enter
push
cs
pop
pushl
mov
cmp
mov
xchg
sbb
inc
mov
and
and
push
scas
mov
pop
sti
cmp
pop
enter
and
ret
inc
mov
xor
xor
icebp
jae
in
dec
hlt
push
mov
jns
jns
jmp
loope
ret
shll
and
xchg
daa
das
int3
jae
aaa
insl
in
test
imul
aam
cmp
setno
es
rcrl
outsl
test
sub
mov
pop
adc
in
shll
mov
mov
jb
stos
lock
repz
dec
scas
adc
fisubs
jp
sahf
mov
divl
mov
test
sbb
add
jae
sub
push
xchg
cmp
test
ja
ja
jae
bound
popf
xchg
cld
sub
outsl
arpl
leave
call
ss
push
cmp
repnz
dec
jl
cmc
push
adc
loope
lods
adc
and
xor
das
mov
xchg
push
and
fisubrs
lds
cmp
in
add
and
xor
nop
test
mov
int
and
cmp
sub
ror
cmp
mov
xor
jl
sbb
addr16
movsb
adc
or
aad
lods
fnstsw
cmp
xor
xchg
mov
xchg
outsb
sub
dec
or
xor
out
das
pop
mov
ret
cmp
cmp
aas
inc
xor
push
cmp
add
lods
cmp
hlt
pusha
cmp
cmp
stos
mov
push
mov
cmp
aad
in
imul
mov
and
cmp
xchg
fisubl
inc
call
dec
out
pusha
mov
push
sbb
lcall
in
xchg
popa
mov
xor
sbb
decl
push
jle
icebp
dec
repz
mov
sbb
or
test
shlb
lods
cmpsb
adc
cld
inc
cmp
dec
pop
sub
inc
pop
cmp
fucomp
pop
enter
push
add
outsb
arpl
push
xchg
dec
pop
fsubrs
add
add
or
stc
push
adc
lds
popa
cmp
adc
fnstenv
xor
js
std
mov
movsl
mov
sbb
enter
add
insb
push
clc
hlt
push
jle
pop
mov
sahf
lcall
inc
lock
or
dec
push
jo
aam
popa
mov
xor
pop
fadd
pop
push
jo
or
cwtl
sub
lods
std
pop
cmp
mov
push
mov
call
mov
adc
push
mov
andb
mov
out
pop
imul
ret
dec
jmp
xor
cmp
popf
push
or
xchg
mov
push
cwtl
mov
jno
fidivrs
test
sub
cmp
or
mov
push
sarb
mov
sahf
jmp
cs
mov
rolb
push
fdivl
pop
mov
xchg
cmp
or
cli
cmp
je
inc
cmp
and
jne
cmp
das
push
xor
arpl
rcrb
popa
in
or
int3
into
insl
add
lret
xor
aad
or
filds
je
lock
add
js
jns
mov
sub
ficompl
jmp
fbstp
xor
or
mov
fwait
ja
sub
jo
cmp
cmp
push
jmp
enter
mov
dec
add
jbe
xor
pop
cmp
inc
xor
cmp
push
pop
lock
ja
pop
stos
xchg
test
push
push
or
and
cmp
mov
sbb
lahf
and
xor
clc
push
mov
lds
adc
fcom
scas
cmpb
cwtl
lahf
test
jb
adc
xchg
inc
and
fdivr
add
jl
lret
jae
enter
sbb
pop
jg
push
xor
xor
mov
fst
sub
outsb
mov
fs
mov
mov
out
cmp
mov
fs
mov
push
test
and
mov
pushf
push
cmp
adc
mov
inc
xor
mov
xchg
out
cmp
xor
aad
dec
push
jmp
aam
lods
test
movsl
sahf
xor
enter
xor
out
mov
sbb
rcrl
fwait
outsl
mov
dec
xor
out
outsl
cltd
add
add
cmp
out
inc
lret
push
pop
xchg
shrl
scas
imul
movsb
cmp
sub
mov
mov
pop
or
sub
test
mov
aam
xor
les
movsb
xor
inc
sbb
pop
imul
cmp
test
cmp
shlb
xor
in
xchg
pop
sbb
or
and
cmp
jo
jmp
shll
mov
mov
cmp
jle
lds
enter
cmp
or
cmp
call
dec
repz
xchg
pop
inc
push
loopne
ficoml
ss
adc
xchg
in
xchg
cmp
mov
fprem
cmp
cmp
xchg
inc
mov
xor
xor
nop
sbb
xchg
mov
std
loopne
add
pop
repz
cmpb
mov
mov
cmp
jmp
mov
dec
inc
leave
jp
add
call
xchg
add
cmp
dec
cwtl
cmp
mov
sub
inc
and
dec
push
jg
stc
in
loop
xor
xor
inc
mov
jle
jb
test
jmp
fisubrs
inc
pusha
hlt
inc
xor
std
ficompl
add
fbld
dec
push
rcr
aas
sub
pmullw
mov
test
fmuls
cmp
icebp
lahf
imul
dec
stc
mov
unpckhps
arpl
lcall
mov
cltd
mov
stc
roll
in
pop
repz
push
stos
push
mov
pop
iret
sbb
and
jnp
inc
add
aad
cmp
add
xlat
adcl
pop
push
in
sub
xlat
mov
sbb
shll
xor
cmp
or
cmp
lea
and
jg
out
sarb
mov
cwtl
xchg
pop
cmp
push
adc
sub
cmp
pop
packssdw
mov
cmp
sarl
cmp
push
daa
pushf
jge
add
add
into
jl
add
cmc
out
fbstp
gs
fadd
or
and
pop
adc
mov
mov
mov
pusha
das
sbb
xchg
jbe
and
and
or
pop
cmpsb
in
ffreep
dec
xchg
test
inc
cmpsl
xor
jo
adc
cmp
or
scas
sub
shrl
dec
xor
mov
sarb
inc
xor
mov
cmp
repz
lods
arpl
imul
add
mov
mov
jp
pop
popf
ss
adc
lds
push
fnstsw
cmp
std
mov
cmp
xlat
mov
test
xor
jbe
xor
push
imull
pushl
cmp
imul
xchg
cmp
add
aaa
cmp
add
pop
adc
mov
cmp
cmp
lds
and
xlat
jecxz
mov
dec
or
pop
adc
push
scas
not
pop
mov
dec
sub
cmp
add
sarb
xor
test
fidivrl
adc
rorl
nop
in
xchg
xor
inc
xor
mov
std
mov
pushf
cwtl
mov
jnp
outsl
mov
mov
jae
into
cmpsb
cmpsb
xor
mov
sti
jp
cmp
mov
loope
cwtl
shll
data16
pop
adc
cmp
into
cmpsl
ss
inc
lds
enter
inc
inc
xor
push
hlt
pop
xor
mov
mov
pop
out
adc
inc
xor
push
dec
scas
out
ljmp
add
outsl
sarb
cmc
push
dec
jae
mov
mov
inc
bound
inc
push
pop
and
mov
cmp
jp
push
xor
or
in
inc
jne
and
push
aad
jo
andl
in
in
cmp
sub
sbb
ja
int
and
mov
sub
cmpsl
cmp
sub
push
in
jae
adc
test
std
push
or
or
add
cmpsl
pop
mov
pop
dec
xchg
and
mov
shlb
lods
stos
jle
xlat
outsl
sub
cmp
popa
gs
loopne
pcmpeqw
mov
rorl
xor
insl
jmp
enter
xor
pop
mov
imul
adc
dec
pop
dec
cmp
push
cmpsb
popl
and
rorb
cmc
fidivrl
sahf
aaa
notb
jl
arpl
mov
rcrb
adc
or
add
jge
xorb
jmp
or
enter
cmp
sub
sbb
imull
fstpt
jo
std
sbb
inc
lds
push
and
ds
add
cmpsb
dec
clc
xor
and
push
ja
pop
je
add
sub
pop
jg
jecxz
insb
outsb
jnp
ret
ljmp
icebp
or
mov
cmp
sar
cmp
xor
stc
ret
or
adc
jmp
cmp
inc
push
jge
sub
cmp
leavew
cmp
jne
dec
pop
aam
cmp
jle
cwtl
jo
lock
cmp
lret
test
adc
xor
push
mov
push
andl
cmp
cmp
adc
aas
add
xchg
cld
fadds
mov
push
jne
mov
mull
inc
pop
ja
cmp
in
lcall
or
imul
out
iret
jmp
repnz
push
shld
cmp
inc
movsb
mov
stc
mov
fildl
jb
push
mov
in
pop
mov
and
scas
mov
sahf
cmp
ret
nop
sbb
cmp
jmp
test
xor
pop
push
cmp
bound
inc
push
dec
cmp
repz
mov
jbe
andb
add
mov
out
out
mov
adc
cmp
mov
sub
or
mov
adc
cmp
mov
add
inc
aaa
xchg
pop
dec
jb
bound
ss
loope
inc
mov
cmp
push
lods
xchg
mov
dec
and
jmp
movsb
mov
jb
cmp
and
pushf
fmul
shrl
mov
dec
mov
das
test
sbb
insl
jae
fstpt
out
mov
lcall
js
addr16
mov
or
lods
pop
cmpsl
fwait
and
dec
aad
inc
stos
fbld
int3
push
in
pop
mov
int3
sarb
push
push
vandnpd
das
cmp
subl
jp
dec
jge
adc
pusha
and
and
hlt
mov
dec
add
ds
js
xor
out
xbegin
aas
stc
cmp
rcrb
sub
xchg
xchg
mov
cs
icebp
rcl
cmp
xor
fwait
hlt
jle
ucomiss
xor
jge
or
mov
out
and
xor
dec
add
push
lods
push
cs
mov
jp
inc
xor
ss
jns
xchg
mov
decb
xchg
mov
mov
nop
or
xchg
xor
adc
cmp
push
aaa
test
pop
push
xchg
cmp
add
sbb
in
dec
clc
mov
mov
stc
ss
adc
cmp
sahf
ret
mov
and
sub
dec
xor
test
aas
lret
pop
jle
mov
stos
and
mov
inc
push
test
xor
xor
mov
insl
push
and
sbb
jl
imul
add
cli
mov
push
cmpsb
ret
das
jbe
push
idivl
xchg
sbb
lods
adc
icebp
inc
mov
insb
ret
and
mov
and
adc
jne
popf
or
inc
pop
inc
add
jge
rcll
mov
pop
dec
cmp
int3
adc
pop
lds
xchg
or
mov
insb
xlat
jae
pop
aam
loopne
cmp
sbb
xor
dec
push
aam
push
je
dec
cmp
ja
pop
and
dec
test
imul
je
xchg
cmc
fbld
mov
push
arpl
movsl
mov
mov
and
mov
outsb
cwtl
push
mov
sbb
and
ja
xor
imul
and
ss
xor
xor
ficompl
mov
lcall
cmp
imul
in
inc
and
sahf
aas
cmpsl
je
pop
cmp
mov
push
ret
inc
inc
inc
pusha
mov
testl
outsl
mov
les
pop
inc
movzwl
push
mov
orb
xchg
mov
cmp
or
daa
lods
cmp
test
mov
add
sub
andb
lea
cmp
jns
or
sbb
sub
push
out
js
loop
sbb
push
out
jo
adc
insb
mov
cld
pop
adc
mov
imul
xor
gs
mov
xchg
or
ret
cld
enter
jl
push
out
adc
shrb
add
inc
jae
das
mov
sub
inc
bound
cmp
jo
mov
lahf
add
sub
cmp
loope
sub
jb
jmp
sbb
cltd
and
mov
cli
lahf
mov
adc
rolb
mov
leave
dec
into
xor
add
loopne
out
cmp
sbb
shlb
lcall
shl
add
cmp
xchg
inc
pushf
adc
leave
xlat
jae
fisubs
lock
test
xor
adc
test
push
in
mov
fistpl
sub
daa
dec
lods
jae
outsb
aam
cltd
ds
hlt
jmp
xor
xor
ss
and
xor
mov
sbb
sbb
jmp
cwtl
xor
lcall
aaa
jae
sub
cmp
sbb
outsl
xor
inc
int3
sub
mov
cld
push
scas
sub
mov
in
pusha
inc
negl
aam
mov
sbb
and
outsb
loope
xor
mov
or
cwtl
imul
cmp
fsubrl
icebp
sarl
cmp
mov
push
addb
imul
lea
mov
popa
push
sub
ficoms
test
inc
mov
addl
ss
sbb
cmpsl
clc
lcall
rep
sub
aad
adc
daa
jle
sub
xor
and
cmpxchg
mov
push
ss
stos
rorl
jae
jbe
jge
aaa
mov
xchg
add
lea
sub
lds
adc
int3
mov
pop
or
jb
jmp
stc
inc
mov
aaa
fwait
inc
insl
xor
xchg
pop
add
jl
pop
scas
adc
xlat
fbstp
in
xor
xor
push
jb
mov
mov
xchg
test
divb
icebp
fcomps
loopne
test
mov
pop
bound
cmp
sub
movsl
cmp
dec
push
fsubs
subb
scas
cmpsb
jae
cmpl
jmp
jnp
loop
std
mov
out
scas
nop
jae
mov
sub
mov
lock
pusha
mov
pop
mov
mov
movsb
pop
aad
mov
jp
xor
out
dec
insl
test
aaa
std
add
push
ret
mov
rolb
in
das
movsl
cltd
mov
xor
stc
cmp
jo
aas
dec
outsl
sbbl
mov
cmp
or
xor
cmp
add
test
xchg
dec
popf
cmp
outsb
fiadds
mov
or
xor
int3
xor
addr16
ja
cmpb
enter
jb
push
clc
sub
cmp
xor
sub
adc
cmp
xchg
add
les
scas
xor
add
pop
xor
cmp
fidivrl
lcall
hlt
cmpsb
pop
xchg
dec
iret
cmp
xchg
mov
loopne
addr16
xor
andl
stos
imull
or
and
cmp
mov
pushf
jle
das
add
cmp
stc
ficomps
ljmp
push
hlt
inc
sbb
sahf
movsl
xor
push
xorb
jo
and
and
dec
mov
sub
test
push
out
stos
or
stc
scas
add
cmp
lcall
cld
jnp
pop
enter
adc
cltd
stc
xor
xor
jmp
xchg
jecxz
cmp
cmc
outsb
pop
clc
adc
loopne
pop
jae
ss
aaa
pop
cmp
or
push
or
test
dec
and
jnp,pt
cmc
mov
add
scas
cmp
inc
arpl
icebp
cmp
push
push
aaa
push
jmp
aad
lock
fldt
mov
aaa
push
jnp
js
call
xor
xor
shll
mov
imul
mov
and
repz
inc
inc
call
sbb
adc
popf
dec
daa
fmulp
or
fistl
ja
sub
dec
imul
scas
scas
adc
xchg
jecxz
xor
push
notb
jge
fidivrs
dec
mov
sub
mov
dec
jp,pn
mov
push
xor
mov
mov
adc
pop
movsl
sarl
pop
loope
out
cmp
andl
popf
sub
aas
xor
ja
sub
aam
xchg
push
movb
pop
movsb
xor
mov
or
push
add
in
add
in
and
int
mov
or
lret
addl
cli
orb
mov
in
sbb
adc
push
push
ficoml
aaa
mov
cmp
jmp
mov
pop
add
leave
push
hlt
mov
mov
xchg
dec
cmp
shl
push
xchg
xor
cmp
ret
mov
out
iret
inc
xor
jbe
loop
jbe
insl
add
ja
lods
nop
mov
cmp
outsl
mov
xchg
arpl
mov
cmpsl
sub
in
cmp
and
sarl
mov
int3
andl
pop
jae
inc
sub
ljmp
and
jae
xchg
xor
outsb
ds
mov
pop
or
sub
cmp
cmp
xor
aaa
jp
and
add
xorb
sarl
jecxz
imul
outsb
xlat
adc
mov
adc
jo
add
add
adc
jle
loop
test
mov
sbb
cmp
xor
sub
andb
lret
pop
push
lret
mov
test
push
push
scas
pop
scas
rorl
adc
adc
loopne
xor
jg
repnz
push
cmp
mov
stos
xchg
cmc
and
cmpsl
inc
cmp
pop
adc
xor
imull
mov
fs
das
flds
inc
in
aad
test
enter
cmp
xor
mov
sahf
xor
push
adc
add
cmp
les
jbe
into
ljmp
inc
lret
cmp
cmp
cli
xchg
out
sub
cmp
pop
ljmp
ja
pop
pop
adc
adc
pop
ljmp
mov
mov
aad
jmpw
xchg
dec
imul
sbbl
std
adc
or
push
mov
aam
adc
fcomps
xchg
les
jge
jns
test
jp
jle
in
pop
pusha
mov
mov
jae
pop
xchg
or
xor
lods
jne
imul
jne
js
mov
mov
sbb
pushf
pushf
aam
cmp
pop
xor
jecxz
add
cmpsl
ret
mov
mov
leave
fs
cmp
imul
aam
xor
cmc
ss
and
sarl
jnp
ds
rol
adc
adc
and
in
ret
pop
adc
mov
pop
pop
add
mov
pop
sbb
cmp
jl
mov
test
mov
cmp
adc
daa
pop
std
ret
sub
and
sahf
cmp
les
icebp
adc
adc
mov
or
push
mov
jne
fnstenv
jnp
cmp
or
mov
and
repz
outsl
mov
lods
push
cmp
out
std
xchg
dec
cmp
adc
loope
mov
pop
fisubs
sub
stos
inc
daa
push
sbb
cmpsl
pop
movl
jne
jmp
xor
ret
sbb
gs
je
xor
movsb
pop
fstpl
test
pop
daa
mov
arpl
icebp
dec
xorl
push
mov
jp
ja
cmp
arpl
cmp
inc
testl
or
std
sbb
cmp
int3
jmp
adc
jne
sti
pop
push
push
fnstenv
sbb
jae
xchg
cmp
test
pusha
inc
ficoms
xor
cmpsb
or
push
std
dec
jb
nop
clc
and
cmpb
jge
or
mov
cmp
jp
sbb
aas
lock
mov
cmp
xlat
fcmove
data16
cmp
ds
dec
leave
lods
mov
enter
ss
mov
fdiv
pop
pop
shr
mov
lret
xor
xor
dec
mov
jge
and
out
pop
cmp
ss
pushf
cmp
jae
cmp
sbb
cmp
dec
xchg
add
pop
fwait
jb
mov
scas
xchg
bndldx
pop
ljmp
cmp
outsl
lds
xor
inc
mov
movsb
xchg
or
out
xorb
jmp
and
cmp
cmp
cmp
xchg
xor
enter
stos
sbb
lea
sbb
jg
repnz
outsl
cmp
mov
pusha
repz
add
jae
les
data16
rcrl
das
push
sti
pop
inc
sub
mov
ret
stc
jmp
cmp
sbb
popf
insb
xchg
push
lret
inc
jge
cmp
test
jmp
jmp
or
cld
loop
jne
mov
into
icebp
shll
cmp
sub
lea
ds
or
cmpsl
mov
push
xor
stos
xor
dec
inc
mov
mov
mov
add
xchg
pop
into
cmp
push
mov
test
jg,pt
sub
sub
insl
pop
xor
pop
adc
add
test
stc
xor
mov
scas
jecxz
mov
push
ss
pop
sbb
ja
push
ret
jmp
aam
push
cmp
fistl
push
fnstenv
out
jg
mov
lods
jp
xor
popa
cmp
repz
or
fwait
insb
jmp
and
fldt
scas
sbb
imul
test
inc
xor
cmp
arpl
std
jae
flds
push
shlb
add
adc
stos
les
lcall
popf
pop
loopne
inc
and
lock
mov
outsb
cmp
xor
clc
mov
sbb
scas
fsubp
cmp
scas
lahf
test
into
sub
cmp
push
ds
rcll
xor
dec
inc
adc
cmp
mov
scas
xchg
mov
enter
mov
std
mov
fdivrs
jmp
xor
or
sbbl
inc
jae
mov
movsb
lods
add
sti
jae
or
in
push
sahf
aaa
add
jg
lcall
xor
mov
std
adc
jg
rorb
shl
lea
cs
cmp
inc
pop
cmp
mov
push
cmp
movsl
pusha
in
inc
lret
cs
or
rorl
dec
and
daa
mov
icebp
mov
iret
xlat
push
cmp
mov
mov
int
std
aad
pop
cmp
cmp
or
leave
cmp
das
pop
push
and
pusha
jg
cltd
xor
xor
xor
test
cmp
fwait
sub
mov
repnz
cmp
mov
orl
and
je
clc
pop
jnp
mov
sti
leave
lock
data16
nop
ficoms
mov
xor
cmpsb
inc
mov
imul
add
ret
pusha
xchg
jae
cmp
in
pop
test
cmp
ret
test
cmp
mov
push
mov
cmpsb
mov
pusha
mov
pop
enter
cmpsb
stos
cmp
sub
sbb
jae
cmc
lds
dec
addb
imull
aad
cmp
hlt
cmp
inc
and
shrb
push
mov
cmp
inc
mov
xor
xchg
jbe
sbb
dec
lret
or
sub
mov
mov
fdivl
sbb
in
xchg
cwtl
inc
cmc
mov
and
ljmp
lahf
add
insl
add
dec
adc
aam
add
inc
cmpsb
mov
mov
push
aas
jb
push
cmc
inc
cwtl
inc
shll
jo
xor
sub
push
xchg
jle
aam
js
and
inc
hlt
imul
into
inc
fwait
xor
sti
add
jecxz
lock
or
adc
xchg
inc
cmpb
mov
cmp
sbbb
jle
or
mov
dec
imul
fidivrs
xor
push
jae
lahf
mov
js
xor
outsb
aaa
test
pop
inc
xor
adc
rclb
sbb
fstl
js
mov
clc
push
sahf
fldenv
push
inc
les
pop
imul
jns
cmp
add
insl
and
cmp
and
mov
sub
clc
lcall
bound
icebp
popa
dec
int
mov
mov
insl
loope
into
rol
xorb
sub
xchg
stc
and
jp
dec
jne
addr16
xchg
xchg
sbb
test
push
mov
cld
sbb
jbe
or
hlt
es
sub
icebp
push
push
mov
and
push
cmp
inc
stc
push
cmp
xchg
jne
cmp
add
and
adc
cmp
popa
mov
sbb
mov
movsl
mov
cmp
outsl
dec
cld
leave
aam
add
jno
add
fcomps
lock
es
sbb
push
fstpt
mov
push
or
cmp
std
xlat
cmp
mov
push
inc
mov
cmp
out
and
call
test
mov
icebp
lock
in
je
loopne
cmp
sub
cmp
hlt
jno
sub
dec
test
pop
shll
scas
add
xchg
int3
add
les
sti
lcall
sbb
out
aam
sub
arpl
dec
cltd
xchg
lahf
shll
inc
repz
cmp
push
out
push
icebp
enter
push
push
jmp
inc
mov
jg
inc
incb
sbb
xor
cmp
sub
insb
xchg
enter
xchg
testl
jb
sub
mov
cmp
test
notl
cmp
mov
stos
push
jbe
xchg
outsb
add
call
mov
mov
icebp
jb
cmp
lret
cmp
mov
cmp
inc
popa
jl
test
jno
sub
mov
sti
mov
and
dec
jno,pt
ljmp
pop
add
add
xor
dec
sbb
fmuls
mov
lds
cwtl
cmp
sbb
add
cmp
xor
lock
pop
and
add
xchg
mov
mov
or
ds
mov
and
out
movsb
cmp
jbe
inc
dec
sbb
cmp
notl
push
into
lcall
movl
test
dec
idivl
inc
sbb
mov
dec
jnp
or
jle
aaa
ds
jmp
cwtl
cmp
cmc
aaa
lret
mov
mov
jae
aaa
adc
clc
mov
xchg
lock
xor
cmp
enter
inc
lret
popl
mov
cmp
insl
aad
xchg
mov
loope
dec
in
cmp
movsl
mov
cmp
sub
iret
push
cmp
jg
cmc
xor
popf
clc
imul
cmp
fcomi
sbb
arpl
pop
inc
inc
sub
loope
mull
push
lret
mov
fistl
add
sub
xor
hlt
je
add
mov
and
xor
fisttpll
push
sbb
nop
lock
mov
leave
cmp
pop
inc
push
cmpsl
fnstsw
adc
cmp
push
shlb
js
outsb
mov
dec
cmp
xor
cmp
sbb
adc
nop
cmp
push
mov
arpl
mov
pop
add
sub
addr16
cmpsl
and
ds
mov
call
push
lea
scas
jecxz
out
nop
mov
divl
in
cmp
dec
in
leave
push
dec
sub
sti
nop
mov
jae
in
and
leave
outsl
pop
rcrl
stos
ljmp
scas
xor
lahf
xor
rcll
dec
adc
pop
arpl
push
or
adc
adc
mov
data16
cmp
add
xchg
popf
push
cmp
fbld
sub
xor
cmp
adc
add
xchg
ljmp
fldenv
jo
mov
cmp
xchg
mov
rcrb
arpl
xchg
xor
xlat
push
jb
or
outsb
cmp
or
cmc
sbb
cmpsl
inc
lcall
int3
inc
jne
mov
sarl
or
jp
cmp
loope
pop
sub
xchg
jno
andl
sbb
cmp
xchg
xor
jb
fsubrs
sarb
lahf
fs
or
adc
mov
cmpsl
cld
push
sbb
jae
sbb
imul
outsb
xor
mov
hlt
cmp
dec
and
mov
cmp
lods
add
mov
loope
fdivp
nop
test
stos
repz
test
inc
scas
push
mov
out
xlat
pop
cmpsb
jg
and
jl
xchg
inc
mov
sub
add
mov
in
mov
add
push
fisubrs
les
push
cmp
mov
scas
inc
cmp
dec
push
dec
enter
and
or
cmc
cmpsb
cmp
stos
aas
lret
cmp
add
adc
mov
test
pop
pusha
scas
xor
mov
sbb
clc
jb
xchg
and
rorl
insb
xorl
xor
xor
or
icebp
dec
cmp
jge
dec
or
dec
pop
shl
cmp
adc
cmp
push
jmp
scas
mov
ja
enter
std
popa
pop
cmp
lock
test
pop
and
pop
aas
pop
lock
push
cli
jg
mov
xor
test
mov
divl
inc
subb
dec
dec
dec
aaa
cwtl
jns
cmp
push
adc
popl
mov
lcall
push
fstps
clc
faddl
out
lods
pop
mov
xchg
xor
into
jbe
test
imul
sub
iret
shlb
pop
lret
les
stos
in
push
ja
cmp
mov
test
shl
pop
sub
fnstenv
mov
call
xor
cmp
fst
adc
cwtl
mov
inc
push
mov
cmp
jg
leave
cmp
sub
adc
divps
add
push
xor
aaa
mov
fldln2
push
repz
and
mov
mov
loop
jl
push
cmp
push
enter
cmp
imul
xor
shll
call
dec
into
mov
add
and
leave
testl
ljmp
mov
or
aad
cmp
mull
add
repnz
pop
test
xchg
adc
mov
cmp
dec
jnp
cmp
jge
lds
sbb
and
imul
fmuls
pop
xor
jp
cmp
aad
lret
or
mov
mov
mov
add
push
mov
mov
loopne
pop
stos
orl
cmp
push
add
mov
nop
out
into
cmc
mov
imul
mov
loope
icebp
lret
mov
xor
jae
push
sarb
nop
add
add
cmp
or
fildl
jns
orb
insl
cmp
int3
sti
sub
cmp
cmp
jnp
lds
pop
xor
or
aaa
xor
imul
mov
leave
lds
pop
cmp
cmp
orb
and
pop
adc
mov
jae
push
or
inc
lock
notl
into
xchg
fst
lret
inc
jmp
mov
sbbb
movsl
xor
mov
div
push
mov
int3
mov
pop
ljmp
das
inc
in
xor
aas
cmp
ss
rcr
loopne
sbb
aad
sbb
outsb
leave
dec
hlt
xor
jnp
mull
leave
sarb
xchg
lea
fld
into
imul
cmc
std
stos
jecxz
jnp
xacquire
and
sub
outsl
mov
movsb
hlt
xor
icebp
mov
pop
lret
ja
sbb
add
cmp
mov
cmp
mov
cmp
cmc
jp
aaa
pop
xchg
pop
add
jg
jmp
pop
xor
or
dec
adc
enter
std
xor
aaa
jno
xchg
cmova
sub
outsb
mov
xor
adc
cmp
sbbb
xorl
xor
cmp
outsb
sbb
mov
imul
rcl
sub
pop
enter
xor
xchg
inc
iret
xlat
rcll
pop
push
adc
mov
push
sahf
shll
sub
jns
cs
adc
xor
jle
mov
insl
lret
test
pop
pop
push
jmp
outsb
cmp
fisubrs
xchg
lahf
cmp
hlt
gs
das
jbe
xor
jge
scas
adc
xlat
movsl
shl
xchg
cmp
negb
sub
lock
gs
mov
cmp
daa
lea
xchg
cltd
jge
cmp
inc
push
push
rorl
dec
mov
outsb
fadds
inc
loop
sub
cmp
lret
inc
mov
mov
dec
bswap
and
pusha
sar
loope
mov
inc
int3
mov
push
push
cmp
inc
xchg
pop
loopne
sub
jae
lods
mov
mov
iret
or
mov
jp
stos
aam
jns
std
and
iret
imull
xchg
stos
xchg
nop
cmp
je
callw
cmp
scas
jg
enter
sub
lock
or
push
xchg
or
sub
cmp
lea
or
stos
add
sub
ss
mov
mov
mov
xchg
adc
fadd
pushf
out
hlt
mov
add
sti
iret
icebp
lcall
out
adc
lods
pop
adc
xchg
lock
add
cmp
sti
loop
lahf
in
test
ss
xchg
sbb
xor
or
cmp
insl
lds
mov
jg
repz
xor
shlb
push
push
xor
xchg
aaa
dec
sbb
mov
xchg
ret
cmp
lret
dec
mov
mov
jo
imull
inc
or
xor
xchg
cmp
stos
rclb
das
test
mov
mov
xor
aad
shl
shlb
lret
mov
clc
cmp
sub
lret
sbb
in
cmp
shlb
add
or
insb
pop
xchg
xchg
adc
or
stc
mov
and
adc
cmp
cmpsb
fcmove
sub
mov
cmp
insl
add
mov
inc
idivl
xchg
and
cltd
fistpl
mov
imul
sub
sbb
adc
xor
jmp
repnz
arpl
div
sub
cmp
scas
rcrb
stc
rcrl
test
and
jge
fwait
sub
rolb
pop
fmul
cmp
cmp
xchg
push
mov
pop
push
cmp
fdivl
jmp
ds
dec
jns
inc
cld
loopne
test
lods
xor
mov
lret
hlt
sub
cmpsb
jge
xor
push
cmp
cmp
fprem1
xor
fmul
dec
push
sbb
xlat
lret
je
xchg
mov
and
rcr
or
mov
sahf
push
lcall
fcmove
xor
sarb
mov
push
jno
rcll
xlat
test
mov
xor
popa
cmp
pop
pop
pop
mov
dec
into
xchg
rcrl
ljmp
mov
cmp
xchg
pushf
mov
pop
xor
aaa
and
dec
mov
dec
add
push
movsl
pop
je
negl
cmp
jne
sbb
mov
cmpsb
fisttps
stos
cmp
mov
add
add
lock
push
xchg
cmp
jne
jo
cmp
daa
fstps
std
cmp
addr16
out
cmp
mov
fldcw
lock
hlt
xor
jno
pmullw
add
cmp
je
ret
or
iret
xor
jne
dec
add
adc
xchg
iret
sbb
jmp
mov
icebp
inc
push
mov
fcoms
dec
fcomip
bnd
sub
sbb
cmp
push
sahf
pop
cmp
inc
jl
and
cmp
mov
or
mov
loope
mov
divl
cmp
iret
mov
jle
and
sub
inc
push
cmp
dec
dec
xchg
bound
into
scas
mov
dec
loopne
ss
rorb
xchg
adc
into
dec
enter
push
adc
insb
fstpt
mov
pusha
mov
cmp
in
stos
jp
xor
push
dec
int3
notl
test
and
sub
jnp
das
mov
cmp
ljmp
cmp
rorb
incb
addl
lcall
lret
mov
aaa
mov
jmp
push
adc
mov
int
jns
xchg
pop
sub
jecxz
cmp
vphaddubd
xchg
out
in
sbb
add
fistpl
cmp
psllw
sub
cmpb
mov
push
jbe
sbb
dec
mov
jg
cmp
out
cmp
cli
iret
cmp
gs
clc
pop
into
cmp
cmp
lods
add
mov
lock
decl
cmp
mov
insb
xor
int
cmp
mov
mov
dec
inc
mov
iret
out
sbb
andb
pop
cmp
xor
and
cltd
cmp
loopne
fildll
cmp
daa
enter
add
iret
mov
lret
xchg
dec
push
inc
jbe
cmp
testl
lret
xchg
xorl
out
popa
ret
xchg
cmp
fninit
add
out
notb
repnz
aaa
push
pop
bswap
cmp
hlt
pop
dec
ror
pusha
sahf
je
xor
add
jle
push
call
negl
pop
mov
hlt
mov
add
jb
iret
cmp
cwtl
mov
or
repz
sub
xor
mov
add
rcrl
loop
outsb
ror
lods
cmpb
lahf
cmp
dec
adc
cmp
mov
nop
xor
pop
push
jae
jle
cltd
adc
inc
cmp
add
cmp
addr16
out
leave
inc
pushf
cmp
int3
add
jle
inc
rcll
lock
mov
and
test
dec
fcompl
cmp
push
add
pusha
fnstenv
dec
cmp
push
fsubl
fwait
xchg
popa
xor
sbb
dec
outsl
cld
mov
repnz
mov
cli
jg
dec
jne
popa
jecxz
adc
push
cmp
adc
into
psubusb
xor
cmpsb
mov
stos
nop
cli
add
fdivrl
jge
fists
sub
push
repnz
push
out
test
mov
adc
jno
mov
cmp
lret
lea
into
sbb
xlat
xor
subl
jae
inc
cmp
mov
scas
jg
xor
sbb
int3
outsl
push
idivb
cmp
mov
jmp
int
jbe
nop
sub
loopne
lcall
loop
divb
dec
cmp
and
int
adc
fnstsw
pop
test
ds
in
idivl
xchg
jp
xor
ljmp
dec
cmp
ret
fld
roll
xor
mov
adc
mov
adc
push
decl
btc
mov
mov
jmp
scas
lret
mov
jecxz
lahf
xor
push
mov
jbe
pop
pop
cmp
repz
push
push
sbb
adc
mov
ss
sub
cmp
int3
add
fsubrp
or
jmp
jbe
cs
es
icebp
adc
xorb
js
sub
or
lock
xchg
out
xor
scas
or
push
cmp
rorb
aaa
cmp
xlat
xor
and
sbb
xchg
ss
jmp
cmc
cmpb
dec
dec
fs
xor
jns
xor
int3
push
int3
mov
aaa
add
sbb
xor
add
dec
out
xor
push
mov
sarb
inc
idivl
adc
fstps
push
insl
dec
xchg
xor
incl
or
popa
fldt
lea
mov
imul
xchg
cmp
sub
and
mov
cmc
test
shrl
mov
hlt
nop
fisubrl
shrb
in
jp
popa
inc
aaa
cmp
jl
orb
mov
scas
lret
cmp
int
pop
mov
adc
adc
add
sti
pop
loopne
mov
cmp
in
sahf
push
xchg
nop
ret
jo
jns
popa
mov
imul
cmp
pop
inc
and
lods
jno
cmp
hlt
js
cmp
sbb
xchg
clc
jns
aaa
ror
repnz
pop
dec
in
push
sbbb
xadd
push
lods
pop
adc
xchg
inc
clc
sub
mov
sti
cltd
rcr
in
shll
cmp
repz
clc
aas
cmp
dec
mulb
std
jp
xor
stos
mov
loopne
adc
out
push
cmp
dec
leave
xchg
mov
mov
cwtl
sub
xchg
jle
xchg
jg
popa
clc
rorl
in
mov
dec
pop
mov
pop
cmp
push
mov
cmp
stos
and
ret
add
int3
jg
mov
out
xchg
sub
pop
mov
cmpsb
icebp
add
pushf
out
and
cli
lock
testl
or
and
dec
push
insb
fistpll
popa
ja
insl
aas
mov
mov
add
pop
subps
das
outsl
xchg
fsub
leave
jge
and
aaa
sub
gs
cmp
adc
fnstcw
icebp
stos
sbb
sahf
aas
imul
cmp
mov
fcmovnu
xor
jmp
cmp
jne
xchg
clc
fdivrl
push
test
out
add
mov
cmp
int3
mov
sub
mov
cmp
jns
xor
ret
and
push
xchg
call
xlat
hlt
cmpsl
xchg
sar
or
popa
fdivl
cs
xchg
or
cmp
pop
or
cmp
rorb
jmp
jp
dec
cmp
jae
insb
cmpsl
pop
lahf
sahf
sbb
dec
inc
test
mov
cmp
insl
mov
cmp
clc
mov
inc
mov
cltd
cmp
mov
daa
cmp
dec
shr
cmp
sub
pop
cmp
sub
and
cmp
fwait
stos
rcl
push
and
and
xchg
dec
jge
notl
sbb
xor
fs
mov
jl
aad
je
dec
cmp
ljmp
aam
es
dec
sysenter
xor
lds
fs
or
jo
sub
lret
dec
leave
inc
arpl
sub
test
imul
jge
cmp
arpl
cmp
jle
out
add
cmp
inc
repz
daa
jmp
pop
cmp
dec
clc
mov
sbb
lds
mov
pop
jnp
leave
repnz
lods
mull
mov
ljmp
dec
int
dec
lret
sbb
rcll
cmp
xor
int3
push
lahf
mov
test
rcr
insl
mov
xchg
test
adc
stc
jmp
pusha
rcrl
mov
popf
jb
in
stc
pop
inc
push
mov
test
ja
dec
nop
outsb
and
xor
cmp
icebp
movsb
add
fimuls
mov
xor
pushf
sbb
fnstsw
lea
dec
xor
xor
pushf
xchg
pusha
sub
out
xchg
cmp
fimull
sub
je
push
cmp
jmp
mov
sub
test
aaa
lret
xor
cmp
out
insb
xor
xor
pusha
jbe
cmp
cmp
stos
xor
inc
sub
imul
iret
adc
add
into
testb
daa
pop
popa
jno
cmp
int3
lret
fdivrs
sub
out
or
iret
loopne
pop
dec
mov
mov
push
gs
stos
bound
dec
sarl
shlb
add
hlt
scas
mov
cmp
push
mov
sarb
test
mov
dec
sbb
xor
stos
jmp
cmp
mov
cmp
add
mov
dec
pop
leave
cmp
xchg
and
jnp
not
pop
fstpt
lock
dec
ret
inc
add
or
mov
sbb
lods
out
or
mov
and
cmp
ds
mov
pushf
std
sarl
stc
adc
imul
push
xor
out
fs
scas
mov
pop
dec
xor
stos
sbb
les
out
add
jg
jge
jmp
loopne
aad
iret
je
lcall
xchg
dec
cmp
push
setns
aaa
add
or
mov
sbb
mov
enter
mov
stc
xchg
xor
inc
mov
adc
aam
hlt
cmp
andl
lret
xor
in
mov
adc
jmp
or
loop
int
cmp
hlt
pop
stos
fs
xor
js
ret
cmp
imul
inc
lret
jns
mov
mov
fistpll
jmp
fsubrs
mov
cmp
lahf
fwait
lcall
mov
cmp
scas
lret
mov
cmp
lock
cwtl
ss
imul
xor
xor
xchg
sahf
cs
movsb
aad
cmp
inc
cmp
enter
inc
out
rcr
jmp
imul
cltd
ficoml
stos
cmp
mov
cmp
js
and
xchg
popf
pop
cmp
dec
neg
and
lret
xchg
mov
and
jg
jp
aad
pop
mov
mov
insl
cmp
mov
cmp
test
cmp
fisubrl
jno
xchg
pop
hlt
std
inc
xor
pop
lcall
add
jg
lahf
xchg
imul
enter
pop
or
sub
mov
lret
mov
mull
mov
jmp
cmp
xchg
add
sub
mov
mov
nop
mov
in
cmp
mov
addr16
scas
cmp
jecxz
and
popa
push
imul
xor
xchg
inc
std
pop
ljmp
xchg
or
xor
pushf
cmc
mov
fidivrl
xchg
outsl
orl
mov
fdivl
fdivrs
mov
enter
mov
xor
pusha
and
sub
add
sub
mov
outsb
aam
jns
cmp
jmp
aaa
popa
add
or
imul
mov
cmp
scas
dec
jmp
cltd
adc
stos
icebp
xor
dec
add
sub
xor
mov
sbb
sbb
cld
mov
les
sbb
mov
inc
negb
fcoml
xchg
lcall
ficomps
pusha
dec
out
popa
int
loopne
je
mov
fmul
cmp
and
adc
xor
mov
hlt
nop
lret
add
xchg
add
or
notl
iret
fstpt
mov
push
dec
lock
push
fstpl
pop
xor
add
jl
bound
dec
insl
adc
cmp
inc
add
sti
pop
adc
xor
dec
pop
or
out
jg
push
push
lret
andb
in
pop
push
daa
pop
sub
and
mov
and
lods
pusha
inc
cmp
and
mov
xor
stos
std
or
cmp
enter
ds
lea
insb
arpl
lcall
pop
pop
fildll
testl
arpl
dec
sub
xchg
xor
cmp
mov
mov
cld
pop
cmp
mov
aaa
setge
sub
cmp
sub
lds
cmp
add
ror
add
xor
nop
cmp
das
jne
insl
xchg
popa
cmp
into
orb
pushf
jae
roll
ret
repz
mov
lods
inc
cmp
vrsqrtps
outsb
sar
mov
and
lods
repz
out
shll
cmpsl
inc
jbe
pop
xor
pop
shll
mov
sbbl
mov
hlt
dec
xor
cmp
adc
sbbb
and
popa
cmp
push
mov
je
dec
frstor
xor
xchg
cmp
loop
shlb
cmpsl
xchg
pop
jecxz
pushf
jae
stos
rcrl
repnz
lods
xchg
scas
ret
enter
xor
inc
adc
lock
jnp
fsubrl
cmp
pop
xor
cmp
sub
xor
cmp
pop
lahf
cmc
jp
ror
xor
imul
in
dec
and
aad
sub
std
and
stos
jge
popa
cmpsb
rol
cmp
or
pop
cmp
movl
call
adc
xor
out
out
loope
mov
cmp
cmpsb
push
jle
popa
pusha
scas
into
pop
loopne
sarb
adc
pop
mov
out
out
insl
cmp
sub
cmp
fisubrs
adc
icebp
pop
jnp
or
xchg
xlat
cmp
mov
sub
dec
lahf
test
xor
insl
scas
mov
push
fsubp
rcrl
repnz
lahf
adc
rcll
xor
xchg
mov
test
je
cmp
sbb
push
pop
fidivrl
in
je
and
xor
lret
insb
cmp
mov
fsubr
lds
mov
dec
es
mov
fidivl
iret
leave
popa
and
adc
lods
cltd
push
ljmp
cmp
call
dec
cmp
push
in
out
aas
xchg
test
cmc
pop
cmp
rcrb
cmp
or
and
mov
por
pushf
std
cmp
rorb
mov
mov
scas
outsl
out
icebp
andb
cmp
adc
fcoms
or
fistpll
dec
mov
std
notb
add
sbb
jne
pop
adc
mov
cmp
aad
ss
sahf
xor
adc
sub
enter
and
fs
pusha
inc
jle
xor
xor
test
jge
out
pop
cmp
movsb
sti
imul
mov
add
mov
add
and
cmp
rol
fcmovnbe
sbb
cmc
lock
sti
in
lods
push
cmp
pusha
cmp
iret
inc
push
jmp
cmp
pop
cwtl
out
dec
mov
cmp
inc
aad
jnp
dec
call
sbb
push
cmp
ja
pop
mov
dec
push
cmp
insl
cmp
aam
push
sub
test
xor
clc
aas
div
stc
xlat
cmp
outsl
adc
in
mov
mov
aaa
aam
cmp
sti
add
add
sub
je
mov
test
sub
mov
cmp
int3
fwait
aaa
pop
add
mov
sbb
bound
rorl
xor
lret
repnz
cmp
adc
ss
jno
cmp
mov
stos
mov
xchg
leave
rcr
cmp
jmp
in
je
dec
mov
xor
addr16
fnstsw
push
inc
pusha
jmp
icebp
scas
imul
test
rcll
sbb
mov
enter
inc
push
cmp
or
push
out
add
cmpsl
sbb
mul
cmp
hlt
xchg
inc
in
add
mov
jle
mov
pop
insb
dec
xchg
sbb
inc
adc
cmp
push
call
cmp
jp
repnz
mov
lock
pop
xor
inc
mov
cmpl
sarl
mov
xor
nop
into
or
rcll
and
and
xchg
mov
pop
not
sub
and
jbe
fstps
adc
mov
enter
xor
adc
and
cmp
loop
imul
lcall
cmp
pop
jne
xor
sti
test
lock
fidivrl
in
aad
dec
ss
rcl
roll
dec
bound
mov
test
leave
idiv
repz
sbb
in
xor
and
mov
cwtl
adc
mov
or
inc
cld
xor
aam
xchg
cmp
scas
add
lret
lret
hlt
jg
or
sub
push
mov
pusha
dec
dec
mov
xor
push
cltd
cmpsl
cmp
jl
jne
lret
shlb
aas
ds
fwait
dec
inc
jle
outsl
movsb
cmp
es
xchg
mov
mov
and
push
cmp
mov
dec
pusha
rcrb
adc
arpl
std
pop
cmp
mov
lods
pop
inc
and
repz
cmp
lret
fcoms
push
inc
lret
pop
add
pop
lahf
outsb
loopne
and
or
test
icebp
in
push
mov
dec
cmp
aad
out
lret
mov
and
mov
lahf
add
cwtl
sbb
mov
in
test
daa
dec
cmp
mov
sub
lea
cmp
andl
cmc
xchg
daa
fcomps
adc
dec
mov
aad
loop
dec
mov
aad
jg
adc
addr16
outsb
adc
cmp
rorl
jb
int
xor
mov
sbb
xor
lcall
mov
ret
dec
pop
cmp
mov
xor
cmp
jmp
cmp
jge
jle
ljmp
mov
dec
in
xchg
lock
and
popf
xchg
xor
inc
cmp
lret
xchg
mov
int
cmp
and
cmp
fnstcw
shll
out
push
popa
push
testl
lcall
movsb
cmp
cmp
loope
jb
loopne
xor
mov
std
sbb
or
lret
jb
cmc
jg
outsl
dec
jmp
cmp
push
les
lods
rolb
sahf
xchg
lret
fucomip
cmp
sbb
aad
mov
iret
add
leave
cmp
daa
iret
cmp
add
cmp
or
stc
mov
negl
popa
into
jmp
in
dec
fnstcw
icebp
call
fwait
push
sti
es
xor
outsb
xlat
jnp
ds
bound
xor
inc
lods
sti
ss
xor
adc
push
sub
fdivl
popa
test
aad
pop
ss
sbb
or
xor
cmp
icebp
in
in
pop
dec
cmp
mov
movsb
mov
xor
cmp
cmp
add
xor
stos
sub
mov
xchg
popa
mov
hlt
lock
pop
mov
xor
addr16
jbe
in
and
add
stc
cmp
lret
inc
mov
clc
pop
call
lea
es
aam
inc
jle
std
fidivrl
leave
push
loopne
xchg
dec
stc
cmp
imul
icebp
push
jno
xor
ret
stc
xor
sub
mov
fsts
xor
out
dec
dec
rol
xchg
popl
cmp
aad
mov
cmp
sbb
sub
loop
andb
rcrb
popa
jg
fmuls
xor
cmp
jmp
outsb
enter
adc
out
negl
jp
iret
xor
push
pop
cltd
mov
mov
lahf
pusha
mov
lcall
pop
cmp
rorl
dec
fists
icebp
inc
dec
or
jg
fdivr
pop
pushf
aaa
and
mov
lods
movb
cmp
inc
sbb
test
push
jl
testl
dec
fnstsw
fimuls
mov
add
xchg
pusha
inc
les
insb
mov
mov
aas
loop
cld
mulb
hlt
cmp
nop
mov
out
les
lcall
pop
testl
sbb
int3
dec
ss
mov
cmp
imul
xchg
pop
cmp
xor
xchg
lahf
lcall
mov
test
dec
nop
adc
imul
ja
insl
imul
and
mov
out
imul
fs
pop
mov
test
rcrl
out
dec
jo
in
fstpt
xor
sahf
cltd
lret
in
cmp
add
fisttpll
enter
not
inc
cmp
mov
std
pusha
stos
xor
cmp
pop
push
sub
or
xor
stos
jbe
enter
stos
int
sbb
cmpsl
clc
cmp
pop
dec
dec
shl
cmp
or
je
mov
fldpi
test
or
cmp
mov
movsl
pop
mov
cmp
push
xchg
jmp
push
sarb
out
fidivrs
pop
out
inc
mov
es
mov
sbb
dec
ret
add
mov
test
sbb
orb
cmp
negl
sub
mov
inc
enter
sub
cmc
jge
mov
rcrl
mov
push
adc
adc
cmp
push
cs
lods
mov
insb
pop
aad
cmp
negl
or
icebp
aas
into
xchg
sub
pushf
or
fidivs
outsl
and
stos
mov
inc
or
add
ss
xor
clc
stos
push
out
je
loope
and
sbb
cmpsl
in
jo
jno
aam
jne
ss
xchg
pop
sti
dec
popa
xor
fnstsw
inc
adc
in
add
cmc
stos
adc
enter
mov
dec
hlt
aaa
fidivrl
mov
cmp
push
movsl
pop
in
sub
test
dec
sub
cmp
ljmp
cmp
divb
and
nop
cmp
push
in
stc
pop
fstpt
sbb
jo
cmp
cmp
into
inc
dec
daa
add
fs
and
mov
pop
cmp
xlat
dec
cmp
icebp
les
dec
xor
adc
mov
test
adc
xchg
test
cmp
inc
sbb
fnstcw
ret
gs
loopw
cmp
scas
cmp
fimuls
je
jl
shrl
mov
out
inc
loope
sub
xor
loop
mov
ljmp
and
popa
fwait
lods
adc
cmp
in
or
xor
add
repnz
dec
mov
cmp
mov
icebp
inc
inc
xor
testl
scas
cmp
sub
xor
mov
sub
fdivl
xor
xorb
xchg
stos
cmp
lea
xchg
lcall
or
hlt
insb
add
stos
lock
or
fidivrs
pop
ja
mov
push
fisttpl
sti
lods
aad
dec
mov
icebp
cmp
sub
jmp
cmp
orl
js
xchg
pusha
fcomps
fsubs
push
in
lods
loope
mov
out
in
call
jns
jg
cmp
and
mov
lds
mov
test
fildll
cmp
popa
sub
dec
xor
pop
insb
scas
and
mov
sub
mov
rol
ljmp
dec
push
testl
ds
fdivr
call
cmp
adc
sarl
mov
fst
jae
insl
mov
sbb
js
mov
or
ror
mov
cmp
sarl
cmp
dec
in
loop
stos
movsb
pop
adc
cmp
and
in
lret
shlb
enter
stos
cltd
add
xchg
xchg
cmp
outsl
mov
xchg
imul
in
cli
add
pop
in
aad
addr16
movsl
or
sub
into
test
mov
cmp
lds
idiv
mov
mov
pop
enter
imul
push
iret
adc
cmp
push
inc
loopne
in
cmp
nop
add
shrl
pop
xchg
test
das
mov
sbb
add
adc
test
mov
in
fcomi
insb
call
ss
fisttps
mov
popf
andl
dec
out
pushf
pop
lods
cmp
mov
cmp
or
imul
ret
mov
cmp
push
lods
xorl
out
cmp
scas
pop
call
clc
scas
dec
xchg
pop
mov
push
xchg
faddp
xor
mov
outsl
test
cmp
repz
test
jl
hlt
push
cmp
cmp
mov
imul
push
test
cmp
mov
xchg
xchg
xor
lahf
outsb
inc
pop
push
lock
movsl
cwtl
es
adc
xor
jp
and
push
lea
pop
in
ja
cmpsl
add
pop
push
dec
imull
cs
cmp
call
insb
lret
add
mov
sub
nop
ds
or
scas
cmp
insb
or
call
inc
cmp
xor
mov
ljmp
jmp
cmp
pop
cmc
je
dec
push
cmp
pop
or
dec
out
icebp
call
sub
lock
rorb
cmp
jbe
cmp
sub
and
cmc
xchg
imul
cmp
jmp
jns
icebp
mov
pop
addr16
cmp
push
cmp
cmp
jbe
cmp
sar
stos
cmc
jb
pop
pop
cmp
je
dec
imul
fldenv
sti
xchg
xor
push
test
aam
pusha
fsubrs
and
stos
mov
test
loop
lods
mov
dec
add
push
jbe
mov
rorb
arpl
scas
push
insl
cmp
push
cmpsl
shr
mov
or
mov
push
std
cmp
adc
lcall
mov
jp
mov
gs
pop
pusha
jmp
mov
fiadds
rol
jg
cs
mov
mov
sub
and
out
cmp
leave
test
aas
dec
aad
cmp
xchg
cltd
pop
das
std
sub
dec
repnz
push
xchg
int
in
cmp
jnp
add
fisttps
xchg
mov
ret
or
mov
mov
xchg
push
xor
cmp
imul
and
mov
mov
dec
fisttps
addb
ds
sub
mov
mov
cmp
ss
push
adc
test
jmp
outsb
loope
in
int3
and
mov
xchg
adc
and
cmpsl
add
lcall
in
mov
cmp
adc
stos
lock
in
cmp
outsb
mov
inc
push
pusha
enter
xor
adc
call
jno
lahf
icebp
je
sbb
cmp
adc
rcrb
dec
jbe
out
or
ds
mov
sub
mov
dec
dec
sti
push
pop
daa
outsb
push
jne
outsl
mov
out
lret
cltd
and
pushf
pop
mov
xor
or
ret
call
mov
es
fdivs
lods
lock
push
rcr
cmp
pop
push
aaa
sbb
mov
je
enter
test
loopne
or
cmp
jb
inc
mov
cmp
xadd
cmp
ss
je
mov
adc
push
fisubrs
sti
idivb
xchg
push
negl
pushf
pop
sbb
and
icebp
push
dec
test
xchg
pushf
in
pop
stc
cmp
in
inc
add
mov
dec
int
cld
das
jg
ret
sub
stc
xchg
mov
shlb
pop
cmp
ds
xor
int
in
dec
cmp
push
aaa
aas
adc
sbb
dec
add
cwtl
ss
cmpl
mov
xchg
rcll
mov
jno
movsb
sbb
push
lret
pushf
repnz
das
push
mov
jmp
mov
add
sbb
mov
lock
cmp
nop
ret
cwtl
imul
shlb
icebp
xor
sbb
in
jmp
bound
inc
mov
lods
xor
pop
mov
dec
sbb
insl
hlt
xor
xor
xchg
cmp
int
pop
nop
mov
inc
xor
xor
adc
sarb
sub
popf
lods
rol
and
jno
xor
pushf
test
lret
rclb
bound
cmp
lahf
push
stos
ss
or
mov
sti
jne
fsubrs
rorl
mov
add
inc
sarl
cld
cmp
insb
cmp
lahf
arpl
movsb
inc
pop
jmp
insl
repz
lret
scas
push
sub
sbb
clc
shlb
push
sbb
dec
mov
nop
sbb
mov
push
shlb
xchg
jmp
xor
xor
mov
in
cmp
dec
add
into
dec
and
nop
jae
xchg
hlt
cmp
inc
mov
mov
icebp
mov
roll
xor
push
fwait
repnz
sub
outsb
hlt
lds
add
lea
stos
sub
jb
dec
rorl
jp
fdivr
pop
lgs
adc
addl
pushf
mov
dec
loope
in
cmp
repnz
xchg
or
in
rclb
icebp
mov
jo
stos
sub
inc
and
jp
popa
jmp
push
or
lods
int3
ss
dec
inc
push
xchg
xor
lret
fucomip
dec
sbb
ror
clc
jae
shrl
mov
lahf
jns
jo
mov
test
lods
cmp
sub
cmp
sbb
and
mov
mov
mov
imul
lret
pop
inc
rcrl
jne
shrl
adc
jmp
popa
dec
addr16
cmp
fnstenv
test
lret
and
sahf
cmp
xor
mov
add
lods
clc
std
or
lock
sub
aaa
xchg
shlb
cmp
shlb
addl
xchg
cmc
jg
out
cmp
pop
std
shlb
adc
bound
xor
cmp
mov
test
stos
lcall
and
js
mov
add
icebp
mov
cmp
nop
mov
scas
int3
pushl
mov
test
cmp
sub
pop
stos
cmp
scas
sbbl
pop
push
sti
insl
and
in
insl
idivl
sbb
adc
jecxz
mov
mov
fwait
jg
or
test
jno
xor
clc
int
lock
cld
mov
imul
ret
dec
or
test
push
fwait
pop
movsl
jnp
pushf
into
pop
insb
inc
pusha
cmp
xchg
bound
xchg
mull
aaa
fnsave
cmp
cli
pop
dec
pop
add
pop
sub
lock
xor
adcb
sbb
les
loop
mov
stc
mov
fnstsw
xor
cmp
push
mov
movsb
jecxz
pop
rcrl
mov
xor
cmp
idiv
dec
push
lahf
jne
cmp
outsb
sub
fldl2e
mov
cmc
xchg
xor
fistps
enter
mov
xor
int3
or
mov
mov
cmp
inc
pop
and
pop
jns
push
jo
es
sahf
jae
loopne
testb
fisttpll
dec
jl
lock
enter
pusha
inc
sbb
mov
stos
mov
jo
sqrtps
jle
xorb
dec
int3
xchg
gs
push
xor
sub
sub
inc
jg
pop
sub
shl
add
and
dec
cmp
popa
cmp
cmp
cmpsl
insb
into
mov
in
loopne
sbb
xchg
shrb
inc
cmp
xor
imul
testb
sbb
push
cmp
leave
rclb
or
aam
cmpb
int3
or
cmp
cmp
orl
sub
nop
je
adc
cmp
mov
and
ror
lods
or
cmp
loopne
sub
fs
xchg
push
ror
dec
scas
xor
cmpb
or
les
ja
cmp
stos
sub
cmp
out
xor
inc
int
rclb
fs
mov
fldcw
cli
cmp
mov
cmp
loop
or
sbb
int3
ja
mov
sbb
inc
sar
mov
push
dec
cmp
cwtl
clc
loopne
cld
lods
xor
enter
sbb
aas
xlat
dec
pusha
repnz
and
mov
je
icebp
sbb
pusha
pop
rcr
ds
mov
scas
dec
or
aaa
cmp
lock
outsl
push
pop
jns
sbb
imul
or
cmc
add
xor
mov
sub
ss
out
cmpsl
je
pop
sbb
shrl
and
fnstcw
inc
into
mov
xchg
pop
mov
test
cmp
sahf
imul
mov
cld
fsts
push
repz
mov
roll
mov
fnstenv
data16
loope
lret
cli
cmp
dec
push
enter
ret
sarb
dec
fcmovnu
sbb
insb
add
cmp
push
jbe
cmp
sbb
pusha
adc
sub
xchg
push
sub
xor
daa
xor
sbb
loope
cmp
pop
jmp
mov
cmp
pop
push
pop
insb
sbb
push
fsts
jae
cmp
xchg
sub
inc
or
int3
dec
aaa
sti
add
lea
adc
cmp
lret
lock
jp
cmp
ret
mov
mov
inc
mov
mov
mov
cltd
inc
cmp
lock
sub
xor
mov
xchg
cmp
fadds
loope
ret
add
fbld
mov
dec
ss
jne
inc
mov
repnz
push
ret
and
lret
cmp
jb
cmp
push
shrl
jns
jbe
cmp
adc
pop
fucomi
psubsb
xor
sub
xchg
mov
enter
insb
cmp
cmp
test
xchg
cmp
int3
xchg
jbe
add
mov
mov
mov
dec
mov
push
sub
aaa
adcl
aas
bound
fildl
add
or
or
fnstenv
adc
dec
adc
pop
xchg
mov
into
lds
adc
sub
shll
imul
xorb
lcall
cmp
rolb
push
and
cmp
cmp
push
jne
and
dec
mov
es
in
add
mov
pop
xor
xchg
jg
mov
cmp
push
adc
daa
xchg
push
jb
stc
cmp
xchg
iret
jmp
int
lods
or
cli
add
cmp
repz
or
mov
lahf
xor
shlb
jb
leave
cmp
sarb
ljmp
xor
or
lds
sub
cmp
lock
jns
mov
xor
xor
out
cmp
fldenv
fbstp
clc
dec
shll
pop
inc
scas
andb
xor
ss
ljmp
cli
push
jae
mov
sub
or
mov
cmp
xor
sbb
enter
data16
jle
ret
rcr
in
cmp
fildl
dec
mov
repz
je
loop
push
inc
cmp
adc
enter
aad
mov
pop
out
adc
test
jb
fs
cmp
adc
fidivs
push
add
push
fcmovbe
xor
push
mov
xor
or
jnp
dec
cmp
hlt
sub
push
or
ror
inc
push
loope
fs
sub
mov
cmp
pop
das
or
dec
flds
or
popa
push
add
mov
jg
or
cmp
lret
sub
stos
push
push
mov
cmp
push
nop
inc
mov
pop
das
bound
sar
xor
dec
sub
lret
dec
adc
ss
cmp
repnz
add
xchg
lret
add
rcr
lret
adc
call
xchg
xchg
es
out
inc
rcrb
icebp
sbb
xor
cs
incl
cmp
mov
jecxz
test
lret
iret
cmp
int3
xchg
fimuls
pop
mov
and
cs
mov
subl
mov
mov
xchg
cmp
add
test
fistl
lods
sbb
dec
cmp
imul
cmp
clc
lahf
sbb
push
insb
ljmp
cmp
jno
inc
jmp
pusha
cmp
push
cmp
fistpl
xchg
cmp
sub
aaa
pop
out
sbb
add
pop
mov
xchg
push
add
icebp
mov
ret
jno
or
cltd
cmp
push
mov
in
cmp
sub
sub
and
mov
bound
repnz
add
int3
push
cs
sbb
push
loope
ficomps
rclb
mov
je
lahf
sbb
aam
js
filds
lock
cmp
push
bound
pop
adc
xor
call
push
xor
dec
pop
outsb
sbb
xor
into
push
std
dec
cmpsl
cmp
lcall
push
jnp
cmp
shrb
mov
stos
jo
lahf
xlat
daa
xchg
aaa
sbb
dec
cmp
cmpxchg
mov
loop
push
push
imul
sbb
jae
aaa
pushf
negb
fscale
jnp
js
adc
cmp
jae
jecxz
sbb
mov
call
stc
rcrb
test
pop
jecxz
cmp
dec
lds
or
cmp
xchg
jge
jp
push
dec
sbb
push
xchg
dec
jecxz
sbb
cmp
sub
or
add
sub
int3
xor
nop
adc
cmp
cmp
dec
mov
mov
loope
outsb
sbb
mov
js
rcll
cmp
mov
and
fistl
ss
mov
dec
rcll
cmp
cmp
and
pop
lret
bound
jbe
xlat
lea
cmp
xchg
inc
stos
add
push
js
cwtl
jl
rol
scas
adc
jo
lock
rorb
mov
pop
inc
jp
sbb
into
cmp
push
mov
jns
popa
rcll
pop
ret
or
cmp
push
subl
fs
imul
pop
jns
xor
roll
cmp
cmpsl
inc
push
sub
pop
pushf
movsb
mull
adc
xor
fcoms
lea
adc
mov
repnz
add
mov
sub
ret
push
cmp
jb
popf
imul
xor
scas
mov
inc
push
in
cmp
test
and
sarl
lds
push
add
ja
movsl
and
push
jmp
lret
lods
std
subb
aad
shrl
sub
cmp
dec
adc
pop
push
sbb
push
popa
inc
int3
add
ret
lahf
rcl
xor
or
add
xor
mov
imul
cmp
in
lret
in
sbb
call
mov
cmc
sub
pop
cmp
sbb
ja
dec
ljmp
dec
js
popa
sbb
xor
push
jg
cmp
mov
andl
fnstenv
xchg
xor
add
dec
push
mov
mov
add
dec
not
xchg
mov
sti
les
cmp
inc
divl
shll
pop
sub
xchg
pop
lahf
xor
cmp
xor
hlt
imul
mov
test
or
lret
sahf
cmp
std
add
cmp
pop
mov
int3
in
cmp
mov
xchg
out
lret
out
iret
hlt
xor
push
push
inc
jecxz
jmp
xor
adc
test
jno
cmp
xor
in
arpl
enter
xor
nop
sbb
movsl
xor
and
sbb
mov
out
mov
jg
push
xor
repnz
jmp
sbb
sub
mov
sub
jne
dec
xor
jns
loope
cmp
icebp
pop
or
sub
cmp
add
fistpl
or
out
xor
cmp
imulb
dec
test
lahf
add
scas
insb
inc
sarb
ljmp
mov
xor
hlt
pop
add
call
push
add
cmp
and
mov
andl
push
int3
jp
call
bnd
hlt
repz
cltd
mov
rorb
dec
popa
pop
xchg
adc
xor
xchg
mov
jp
fnsave
data16
test
test
mov
ds
dec
sub
mov
cmpsb
fsts
iret
ds
push
inc
pop
mov
mov
xchg
data16
fs
jge
cmp
pushf
jle
sahf
arpl
push
loop
cmp
loope
mov
dec
adc
cmp
jg
inc
cmp
movsb
mov
sub
mov
repz
cmc
push
fsubs
dec
imul
xor
mov
outsl
insl
add
sub
dec
ficoms
or
ss
xchg
pop
aaa
popf
hlt
xor
jle
ds
stos
out
adc
or
sbb
je
jnp
add
pop
push
cld
pusha
adc
addr16
fistpl
cmpsb
xor
xor
lds
mov
push
cmp
xor
int3
adc
cmp
sub
iret
ja
dec
aad
rcrb
lret
push
dec
hlt
movsb
cmpl
xor
fucom
enter
and
cmp
dec
pop
rolb
cltd
lcall
inc
and
and
adcl
aaa
lret
xor
inc
cmp
js
popf
xcrypt-ecb
cmpsl
dec
enter
lods
incl
imul
inc
lods
xor
subl
cmp
sarl
scas
hlt
cmp
cs
push
aam
cmc
test
std
jg
into
xor
mov
in
adc
pop
lods
dec
mov
shlb
push
cmp
add
iret
xchg
and
dec
cmp
in
pusha
add
clc
add
cmp
jno
adc
cltd
inc
insb
cmc
andl
and
inc
stc
daa
fcoms
mov
orl
fldcw
adc
mov
in
pusha
inc
or
das
or
stos
rcl
jmp
cmp
outsl
inc
enter
cmp
mov
lahf
cmp
inc
jae
or
pop
xchg
clc
es
jge
and
and
cmpl
aaa
ret
mov
fisttpll
cmp
mov
pop
fnstenv
stos
xor
sub
dec
out
imul
cmp
mov
shld
cmp
sbb
dec
into
mov
mov
push
std
or
enter
ss
sbb
jb
cmp
mov
ficomps
rcll
jl
stc
ljmp
jg
cmp
mov
cli
pushf
lret
cs
and
jno
out
mov
flds
out
mov
fwait
loop
nop
out
cmc
cmp
mov
add
ret
dec
jbe
xor
xchg
cmp
sub
and
add
xchg
sbb
and
test
in
adc
xor
xchg
inc
cmpl
addr16
add
cmp
rolb
cmpsl
inc
lock
cmp
or
into
cmp
pop
cmp
xor
pop
popf
rorl
test
adc
xchg
cmp
lret
add
cmp
int
sarb
inc
and
cld
sbb
scas
mov
add
xor
push
mov
jb
mov
gs
imul
xor
sbb
mov
add
fcoms
divl
xor
cmp
lods
mov
cmp
fldt
fs
adc
cmp
ror
fnstcw
les
outsb
adc
xor
stos
lcall
idivl
xchg
pop
repz
jl
jo
test
mov
sub
cmc
xchg
xor
cmp
into
push
div
test
xor
bound
addr16
fcmovnu
incb
pop
es
insl
mov
cmp
xchg
and
fs
xor
mov
iret
cmp
dec
add
mov
cmp
shrb
xchg
cmp
loopne
cmc
arpl
cmp
fs
mov
dec
in
add
lahf
test
jecxz
or
in
xchg
stos
pop
jb
enter
out
es
xor
jbe
add
xor
daa
and
shl
cmp
call
cmpl
xchg
mov
aaa
shll
icebp
mov
push
aaa
jbe
mov
mov
int
sub
xchg
cmp
movsl
movsb
or
sahf
cmp
xor
xchg
cmp
sub
stos
enter
cs
je
cmc
insb
mov
pop
and
push
stos
dec
xorl
fnstsw
adc
lret
mov
jne
jle
shlb
ret
vmwrite
cmc
out
mov
sbb
mov
or
sub
aad
rclb
sbb
divb
jnp
inc
in
je
cmc
cmp
adc
push
cmp
aam
sbb
rcrb
shll
test
int3
test
int
cs
xor
ljmp
mov
loop
adc
sub
notb
add
mov
xor
mov
dec
or
enter
popf
iret
inc
icebp
rolb
cmp
jle
jmp
mov
jl
iret
xor
xor
fsubs
mov
jl
dec
xor
mov
xchg
pop
sar
insb
cmp
jmp
inc
bound
mov
cwtl
stos
cmp
jno
cmp
xor
movzwl
imul
out
movsb
cld
xor
les
inc
insb
push
cmp
jg
ret
out
jmp
jp
and
dec
jge
inc
cmp
or
int
out
push
lock
inc
lea
xor
or
push
jle
icebp
call
sarb
cmp
fidivrs
loopne
dec
mov
xor
xchg
mov
sub
cmp
cmp
cmc
cmp
xchg
cmpsb
jno
push
mov
shll
imul
pop
fsubs
lods
cmp
movb
adc
and
sbb
jg
repz
scas
mov
inc
sbb
inc
xor
loop
ja
pop
and
stc
xchg
dec
push
in
inc
idivl
call
cmc
dec
add
fcmovb
jecxz
add
mov
frstpm(287
dec
rolb
mov
or
sbb
call
and
adc
fisttpll
leave
rcll
add
cmp
sbb
scas
rolb
xchg
adc
dec
lds
jp
mov
inc
int3
lea
cmp
add
es
ret
fcoml
adc
mov
fwait
sub
jo
jl
dec
loope
ja
aaa
or
inc
xor
push
add
fnstcw
adc
mov
fcmovne
lea
dec
leave
xor
movsl
arpl
out
xchg
popl
jle
inc
sbb
scas
lock
or
iret
push
incl
xor
lret
orb
mov
and
xchg
movq
mov
pop
daa
out
mov
mov
mov
inc
mov
int3
mov
or
adc
repnz
cmp
std
inc
sub
jmp
mov
pop
push
add
cmp
xchg
xchg
add
sbb
cmp
iret
xchg
cmp
repnz
pop
sbb
add
fwait
push
popa
aam
int
push
jmp
aad
insl
mov
std
cli
sub
adc
bound
enter
mov
mov
add
fistpll
sbb
pusha
sahf
inc
add
into
js
int
addr16
repz
jle
add
sub
enter
testl
sahf
and
cmp
pop
pop
pop
sbb
std
cmc
in
push
in
pop
cwtl
movsb
jne
xchg
xor
cmp
mov
sub
sub
aaa
sub
pop
ljmp
or
jb
jmp
lods
stos
mov
add
lock
pop
mov
and
int3
mov
inc
jg
adc
inc
call
div
fwait
out
int
xor
push
ds
mov
xor
and
lahf
std
cmp
jl
push
pop
cld
loopne
sbb
aas
xchg
into
xor
jge
push
xor
call
xchg
xor
fcompl
cmp
jb
push
sbb
orl
mov
dec
out
fidivrs
rorw
cmp
sti
adc
sarb
sbb
ret
cmp
cmp
int3
push
mov
pop
push
mov
jns
cmp
popl
xor
pop
scas
adc
shl
adc
xor
mov
call
xor
dec
sbb
sahf
xchg
cmp
rol
sbb
inc
cwtl
cmpsl
fsts
jno
cltd
test
jecxz
fchs
jbe
pop
cmp
fisttpl
cmp
int3
push
in
test
jnp
cmp
fiadds
pop
add
aaa
mov
enter
jg
cmp
xchg
pop
orl
inc
push
pop
mov
clc
imul
xor
or
xor
sub
xor
xchg
xlat
cmp
call
mov
je
cmp
lret
jge
inc
and
gs
fsub
cmp
lret
iret
ss
es
jno
in
pop
xchg
shr
cmp
sub
inc
inc
inc
cmp
ret
pop
test
mov
cmp
call
dec
outsl
iret
mov
xor
dec
shlb
clc
enter
xor
aas
test
pop
and
xor
scas
stos
push
adcl
aad
adc
sub
cmp
sbb
ja
mov
dec
andb
imul
dec
jg
cmp
movsl
mov
jns
dec
mov
movsb
loop
std
add
sahf
out
je
sar
push
cmp
pop
test
mov
cmp
adc
sarb
mov
inc
cmpsb
sbb
out
sahf
subb
stos
cmp
testb
fwait
popa
mov
std
sbb
out
adc
and
jge
jo
xor
cmp
js
pop
dec
inc
xor
mov
jno
mov
loope
lods
imul
cmp
jg
push
mov
dec
mov
xor
xorb
lcall
add
shr
in
mov
pop
addr16
ficoml
jg
adc
sbb
pop
xor
adcl
and
out
mov
mov
xchg
xor
outsb
add
or
dec
cmp
iret
and
pop
xchg
inc
scas
cmc
test
fdivrs
adc
cmp
repnz
and
and
xchg
jg
cmp
mov
lods
xor
negb
pop
xor
pop
mov
inc
xor
imul
lds
movsl
push
jb
pusha
adc
rorl
push
mov
lea
adc
pop
pusha
jae
mov
inc
adc
push
adc
add
hlt
mov
das
je
cmpl
test
popf
leave
sbb
mov
cmp
shrl
and
addr16
pop
cmp
mov
cmp
mov
inc
or
lock
cmp
xor
sbb
in
aad
xchg
outsb
cmp
cwtl
fwait
xchg
shll
out
xlat
xchg
xor
add
add
fs
jb
sarb
sbb
imul
sub
in
movsb
push
inc
rorb
dec
cmp
pop
mov
cmp
sbb
lret
push
loope
insl
orb
cwtl
lcall
lds
cwtl
loope
imul
fiadds
adc
and
cmp
jge
rolb
push
mov
dec
lret
push
cmp
mov
sbb
mov
jl
adc
shlb
andb
or
jb
push
inc
cmp
pop
pop
adc
enter
push
fs
xchg
mov
push
stc
and
int
jae
lahf
fists
push
xchg
or
popf
cmp
data16
outsl
pusha
in
mov
jge
fiadds
push
ret
cwtl
int3
sbb
aam
sbb
xchg
xor
cmp
iret
cmp
xor
stos
pushf
lock
jecxz
bswap
add
jne
sbb
cmp
add
sbb
adc
mov
in
sub
movsl
mov
mov
test
sahf
cmpsl
call
pop
sbbl
push
cmp
push
lods
cs
dec
and
mov
inc
sub
es
cmp
shlb
mov
fimuls
pop
pavgw
cmp
push
sbb
jge
push
stos
xor
arpl
cmp
jle
ljmp
fbstp
dec
jecxz
shll
js
push
fsub
fisubrl
out
or
xorl
inc
cmc
nop
bound
push
xor
cmp
pop
mov
push
out
or
cmpsl
lcall
icebp
sarl
cmp
jnp
insb
mov
add
aaa
nop
rorl
push
push
sbb
push
leave
or
jmp
jb
and
xchg
iret
icebp
cmp
into
dec
je
nop
pop
dec
cmp
outsb
int3
cltd
sub
or
rorb
cmp
aaa
into
insb
inc
sbb
loop
std
jae
xchg
push
in
dec
xor
outsb
push
scas
push
shll
mov
inc
jae,pt
mov
sbb
adc
and
jae
cmpsb
insl
pop
mov
andps
xor
clc
sub
cmp
rolb
in
cmp
int3
loopne
sahf
shlb
std
or
mov
int
ss
popa
sub
outsl
outsb
pop
enter
ss
dec
pop
shrl
gs
in
addb
sbb
push
mov
fldt
leave
adc
cmp
in
adc
ds
xor
mov
pop
mov
aad
mov
sub
xchg
lds
ficomps
cmp
rcrb
fsub
dec
pop
pop
xor
sahf
mov
push
hlt
call
add
dec
imul
mov
cmp
std
push
cmp
add
cs
cmp
mov
xor
pop
or
int3
or
push
sub
jne
inc
mov
imul
cmp
mov
imul
sub
mov
outsb
shl
sub
push
test
movsl
mov
sub
insb
mov
test
jp
xor
or
add
fldt
in
js
lret
sub
popa
mov
xchg
es
neg
add
mov
mov
push
test
sbb
maxps
stos
popf
in
adc
cmpl
loopne
xor
cmp
das
sbb
sarb
test
inc
dec
or
fdivl
xchg
pop
dec
sub
ljmp
inc
loopne
fwait
aaa
mov
pop
sub
insb
xchg
push
adc
cmp
inc
arpl
test
sub
mov
add
fldcw
xor
fwait
sahf
inc
test
imul
dec
fbstp
cmp
cmp
xor
in
pop
loopne
jbe
test
lret
mov
cld
cmp
sbb
mov
mov
pusha
lcall
jecxz
jno
mov
mov
ljmp
mov
enter
sarb
mov
inc
add
add
int3
xorb
ss
hlt
sub
push
push
mov
mov
sbb
cmp
sbb
out
xor
icebp
fcoml
push
pop
push
movsl
or
cwtl
push
dec
fnstsw
xlat
pop
mov
add
sbb
xor
mov
mov
loope
cmpl
scas
pop
xor
rorb
loopne
popa
mov
xor
add
mov
repz
cmp
inc
loope
adc
cmp
push
xor
inc
add
sahf
inc
pusha
out
or
xor
mov
imul
or
imulb
cmp
pop
repnz
mov
fmul
fnstcw
push
in
cmp
dec
cmpsb
dec
cwtl
xor
jmp
call
pop
cmp
pop
sbb
imul
fcmovne
inc
je
and
cmp
push
or
xchg
dec
lods
cmp
pop
and
jmp
xchg
shlb
popa
flds
xor
sub
xchg
or
imulb
insl
adc
cmp
jg
adc
fidivrs
or
lods
cmp
lock
fisubl
inc
dec
adc
daa
xor
and
xor
fbstp
mov
xchg
inc
shll
and
adc
inc
cmc
sbb
fbld
cmp
jg
add
jno
mov
add
cmp
cmp
xor
cmp
movsb
out
push
test
dec
loop
out
jnp
jp
mov
xlat
insb
cmp
push
sub
sbb
and
sub
xchg
aaa
js
mov
or
xor
movsb
cs
inc
sbb
insb
or
fstp
or
dec
cmp
scas
outsl
push
pop
fs
rol
cmp
pop
int3
rcll
dec
mov
shrb
loope
mov
mov
cvtps2pd
lds
add
shl
shrb
or
mov
push
and
xor
sub
pusha
mov
xorb
cmpsb
and
pop
dec
aam
movsl
cmp
sub
or
mov
insb
pusha
stc
mov
xchg
sub
pop
cmp
dec
scas
inc
mov
data16
ss
sahf
adc
aam
mov
jl
push
enter
cmp
dec
fxch
add
scas
js
pop
jecxz
addb
in
jno
cmp
xchg
xlat
shr
adc
xchg
xor
cmp
dec
and
outsl
mov
mov
fnstenv
cmp
xchg
loopne
sub
dec
or
sbb
addr16
out
aam
inc
ret
fsubs
stos
mov
fs
je
popa
cmp
sahf
insl
ss
inc
adc
mov
repz
imul
cmp
int3
inc
call
cmp
lret
mov
cmp
es
fldl
insl
test
xorl
in
fcmove
xor
pushf
xor
mov
adc
and
hlt
push
mov
inc
jb
add
notl
mov
pop
cmp
nopl
add
pop
xchg
add
imul
cmp
dec
shl
cs
into
inc
inc
xchg
inc
inc
push
xchg
int3
cmp
cmp
idiv
adc
dec
pusha
jo
scas
ss
xor
cmpsl
repz
stos
fsubs
movsb
cmp
daa
icebp
aam
sub
in
shll
inc
in
cmp
lret
jecxz
mov
dec
sbb
ret
bound
cmp
shl
andl
js
rcr
and
xchg
into
xlat
dec
clc
leave
xchg
enter
xchg
es
push
fistpll
in
cmp
sub
mov
mov
rcrb
imul
lret
into
jno
ret
or
outsb
iret
mov
call
in
push
cmp
xor
xchg
cmpsb
lods
push
inc
ss
fsubrs
cmp
jo
xor
mov
mov
sub
pop
pop
daa
into
mov
jno
rcrb
lret
enter
rcrl
xor
jae
jmp
mov
cmp
or
or
cmp
and
imul
cli
cmp
aaa
xchg
sub
int3
push
xor
out
add
ljmp
mull
xlat
ljmp
and
test
add
fdivrl
xchg
gs
ja
flds
js
fidivrl
mov
rorb
push
int3
sub
cmpb
mov
or
push
mov
fidivrs
movntq
sarb
xchg
and
rorb
xor
scas
rcr
iret
lods
xor
clc
testl
out
test
pop
xor
mov
push
clc
pop
enter
ss
sarb
mov
pop
sarl
pusha
mov
aam
stc
xchg
lret
xor
aad
and
or
fcoms
icebp
add
fidivrs
adcb
dec
aad
sub
shll
adc
xchg
xchg
int3
pop
scas
cmp
xchg
add
xchg
test
cmp
dec
mov
inc
sub
fs
lods
sub
aaa
dec
out
and
ljmp
imulb
mov
dec
xchg
inc
sbb
sub
jg
sbb
mov
mov
push
xchg
sarl
xchg
test
fisubrs
shlb
cmp
xchg
push
cmp
jbe
ror
mov
mov
hlt
or
mov
scas
adc
xchg
sub
inc
clc
push
insb
mov
jae
inc
fstpl
test
mov
testl
inc
and
push
jge
pop
cmp
mov
std
and
int
imul
add
sbb
adc
sbb
add
mov
in
call
popf
js
or
jmp
inc
cmp
sbb
xor
call
dec
mov
mov
test
push
fwait
mov
push
imul
shlb
stc
xor
leave
pop
pushf
cmp
jae
mov
andl
mov
mov
sbb
xchg
cmp
adc
aad
cmp
jne
push
loopne
dec
inc
inc
inc
inc
cmp
repz
mov
add
fldcw
xchg
mov
ds
jp
mov
das
push
mov
cmp
sub
daa
cmp
scas
or
lret
dec
loopne
jl
lods
mov
mov
and
cmc
mov
repnz
dec
mov
push
xchg
xor
sbb
jbe
xchg
das
jg
cmpsb
out
fnstsw
fistpll
pop
inc
push
cmp
lret
sub
cmp
push
ja
cmp
mov
scas
dec
insb
hlt
sbb
iret
and
xlat
sub
fldt
jp
inc
test
mov
xorb
lds
clc
jl
mov
movsb
scas
daa
shlb
push
cmp
call
mov
iret
nop
popa
adc
shll
sbb
jg
cmp
xor
push
inc
lahf
xor
lret
cltd
adc
cmp
fcomps
rcrb
sub
push
lahf
adc
repz
sbb
jnp
cmp
fwait
cmpb
rclb
lret
xor
or
out
loop
pop
jbe
cmc
cltd
cmp
popa
mov
andl
adc
cmp
je
xor
jb
aam
pop
ss
rcll
xor
mov
cmp
add
cmp
xchg
cmp
xor
leave
insb
push
ret
jo
mov
dec
cmp
push
popf
and
inc
jo
adc
movsl
leave
enter
ss
inc
flds
icebp
xor
fdivr
scas
lods
dec
sti
out
imul
xchg
pop
push
out
insl
hlt
sti
sub
les
stos
sub
xor
rcrb
push
jp
in
mov
jnp
inc
sbb
cmp
push
mul
in
xor
jne
aaa
jle
loopne
cmp
sbb
sarb
shll
iret
inc
cmp
mov
pop
cli
insb
adc
or
mov
int
jbe
adcb
cmpsb
xor
stos
cmc
sbb
sahf
pop
cmp
and
shrb
fcomi
cmc
adc
inc
sti
jo
idivl
add
xlat
ss
movsb
and
sub
dec
xorb
or
and
dec
jmp
xchg
push
cmp
or
jecxz
into
mov
js
popa
cli
xchg
add
pop
cmp
je
xchg
cmp
ss
std
cmp
scas
mov
cmp
mov
xor
rcll
inc
cmp
cmp
sbb
pop
sub
mov
sub
es
les
enter
subl
pop
mov
jns
xor
pop
lret
imul
dec
xor
cmp
lods
leave
push
jbe
sarb
jb
cltd
pop
fists
sarl
mov
imul
stc
push
xor
out
push
mov
rolb
add
jne
nop
test
inc
int3
mov
inc
test
lea
test
enter
ss
cmp
sub
call
mov
in
cmp
test
dec
cmp
mov
xor
sub
pop
fisttpll
adcl
out
jns
xor
sahf
leave
push
xchg
push
sub
add
in
ss
cmp
cmp
mov
call
movsb
sahf
int3
pop
fists
cmp
mov
lret
mov
pusha
mov
or
repnz
stos
mov
or
mov
cmp
dec
mov
aam
xor
xchg
adc
popf
push
insb
mov
sbb
xchg
cmp
les
cmp
lret
push
jo
shlb
mov
pop
ss
xchg
dec
cmc
sbb
jecxz
jl
sub
iret
dec
lcall
ret
cmp
dec
jl
mov
inc
sub
xchg
repz
shl
adc
sub
std
xchg
aas
or
sbb
notl
mov
shrb
andb
add
push
cmp
sub
push
mov
mov
adc
pushf
sub
loop
subl
sahf
cmp
inc
ret
mov
ss
push
cmp
add
and
inc
jae
jl
enter
adc
inc
mov
cmpl
sarl
and
xor
xchg
cwtl
icebp
lds
dec
sbb
mov
xor
cmpsl
push
sti
pop
inc
pushf
sbb
clc
or
add
push
fiadds
mov
dec
stos
mov
aas
push
xor
xor
mov
cmp
sbb
mulb
push
sub
adc
cmp
sbb
pop
stos
dec
xor
leave
addb
push
jmp
jl
xchg
rcrb
std
pop
mov
sbb
hlt
jl
cmp
popf
xchg
into
in
sarb
mov
jnp
sub
sbb
xor
repnz
lods
cmp
fmulp
add
xor
xor
lds
and
push
mov
jle
shlb
or
mov
sahf
mov
inc
or
mov
pop
jb
test
jg
dec
aad
jp
inc
stos
cld
xchg
insl
and
cli
inc
xlat
adc
popa
aaa
test
fadd
xor
cmp
sbb
sar
lret
mov
or
adc
aaa
imul
cmpsb
inc
mov
cmp
cmp
cmp
scas
inc
shlb
push
push
jge
bound
and
xlat
pop
mul
inc
jb
cmc
fnstcw
xchg
dec
test
sarb
xchg
gs
lret
pushf
cmp
adc
add
cltd
ret
mov
les
dec
inc
mov
add
inc
lock
cmp
add
in
rcrb
insl
xchg
cmp
sbb
sub
xor
cmp
cs
lahf
pushf
rorb
cmp
lds
lret
or
repnz
call
inc
iret
and
dec
push
xorl
cmp
test
loop
push
lock
ss
xlat
in
mov
cmp
call
inc
jg
cmp
sbb
xchg
int3
mov
pop
sub
mov
jb
les
scas
out
xchg
jecxz
lret
cmp
shrb
sbb
repnz
mov
jnp
cmp
mov
pop
loopne
sbb
sbb
stc
cmp
mov
loope
and
call
pusha
push
sub
push
aaa
ret
and
cmp
cmp
test
xor
popa
cmp
scas
mov
shr
cmp
cmp
pop
loope
mov
fnstcw
sub
lea
jecxz
imul
push
repnz
popf
cmp
sub
jno
jo
mov
cmp
das
xchg
std
ret
leave
lds
sbb
aaa
jbe
cmp
sti
arpl
filds
in
je
bound
mov
inc
les
daa
mov
and
and
push
xchg
and
mov
mov
jp
mov
sbb
push
cmp
popf
repnz
and
enter
jnp
je
lea
ss
xor
pop
gs
shll
out
lea
cmp
and
xchg
inc
xchg
xor
and
or
pop
pop
sbb
cmp
jg
faddl
shrl
cmp
sbb
cmp
shrb
jle
ret
in
adc
scas
jb
mull
dec
mov
cmp
push
stos
jbe
in
xlat
loop
dec
shlb
adc
test
pop
lock
cld
xor
dec
outsb
aaa
inc
cmp
push
cmp
into
sbb
cmp
pusha
scas
cmp
je
xchg
mov
dec
cmp
cwtl
xchg
and
shr
sub
mov
sbb
jbe
add
aas
pop
xor
je
fnstenv
jo
mov
repz
mov
mov
mov
jo
sub
xor
cmp
lahf
insb
cmp
imul
mov
cmp
push
cmp
int3
les
cld
sub
sarb
out
jl
into
lock
cmp
xchg
es
add
jae
cmp
cmp
sub
enter
aas
mov
sub
push
xchg
mov
rcll
mov
cmp
cmp
leave
fcomps
push
int3
cmp
addr16
enter
sub
mov
xor
mov
xlat
in
cmp
cmp
cmc
mov
rorb
aaa
pop
adc
out
popa
cmp
cmp
test
stos
aas
cmp
mov
fsts
mov
ds
sub
sbb
mov
insb
xor
mov
and
es
xor
cmp
or
sbbb
mov
sub
test
xchg
popf
in
sbb
imull
adc
inc
pushf
mov
and
es
lods
sub
sbb
or
aam
adc
pop
test
pcmpeqd
push
add
fisttpl
cmp
cmp
mov
inc
add
cli
cmp
sahf
xchg
xchg
add
xchg
jno
xor
mov
lock
pop
or
and
out
inc
xchg
test
jae
cmp
adc
jnp
loopne
add
mov
push
jp
xor
orb
aaa
jge
xorl
lock
cmp
inc
xchg
jle
cmp
pop
repnz
cmp
and
iret
dec
enter
cmp
and
mov
mov
lret
call
adc
je
gs
push
scas
cmp
mov
sbb
les
cmp
lds
mov
jbe
rorb
insb
mov
add
xor
inc
xor
je
iret
adc
push
sbb
daa
xor
jno
push
cmp
js
nop
test
fwait
or
fmulp
sub
dec
lahf
mov
xchg
stc
lds
and
sub
cmp
fimuls
fisubrl
mov
mov
std
mov
cmp
jle
insl
aad
lahf
push
mov
stos
push
mov
xchg
ret
sub
lret
dec
mov
push
in
aad
sbb
xor
and
cmp
inc
roll
rolb
enter
movsb
and
popf
jb
inc
and
ret
xchg
jl
cmp
mov
jg
cmp
out
xchg
jmp
mov
lcall
cld
sahf
cmp
scas
push
xchg
xchg
out
divl
rorb
leave
push
inc
adc
sti
adc
xor
mov
adc
test
push
shl
xor
and
loope
mov
movsb
jo
xchg
push
in
xor
xor
arpl
mov
push
push
sahf
ljmp
outsl
push
mov
xchg
sub
mov
jne
lea
and
into
cmp
cs
sub
and
cmp
inc
int
mov
cmp
es
sbb
or
popa
sbb
sbb
jecxz
mov
shrb
mov
repz
fsubrs
or
shrb
mov
insl
push
dec
cwtl
xor
loop
mov
cmc
mov
repz
pushf
cmc
test
mov
mov
dec
mov
cmp
cmpsl
scas
xor
or
out
test
cmpl
testb
cmp
rclb
inc
jo
imull
cmp
rorb
fcmove
cmp
test
movsl
push
cmp
xchg
test
and
addr16
sub
push
shr
clc
fnsave
mov
mov
lret
test
and
mov
and
cs
out
out
xor
andb
add
out
xor
fstpt
push
mov
cmp
testl
xlat
xchg
lock
loope
stos
enter
sub
dec
jecxz
xor
sub
pusha
imul
cld
in
es
clc
stos
push
xor
xchg
dec
sarl
aaa
xchg
inc
imul
enter
cs
cmp
rolb
sub
ss
cmp
add
push
ljmp
stc
mov
dec
add
mov
roll
or
inc
adc
xor
mov
adc
cmp
cmp
xlat
push
insb
pusha
std
jmp
xor
sbb
fdivs
inc
pushf
dec
or
jns
mov
inc
fdivl
imul
pop
cmp
clc
mov
aaa
or
xor
rcl
or
imulb
cmp
adc
or
add
cmp
mov
gs
dec
int
mov
lcall
inc
fidivrs
sahf
and
mov
insb
dec
cmp
test
fidivl
ja
into
mov
mov
psrld
jnp
adc
loope
xor
in
mov
cli
imul
cmp
dec
adc
xor
inc
cmp
stc
or
lock
enter
in
add
decb
pop
cmp
leave
loopne
fnstenv
xor
dec
popf
cmpsl
inc
push
cmp
movsb
sarl
jne
call
cmp
shlb
aaa
cmp
xchg
outsl
cld
stc
movsl
pop
cmp
into
arpl
cmp
ss
rolb
fldenv
cmpb
fstpl
imulb
aam
cmp
cmp
jo
sbb
mov
pop
aas
cld
lock
cmp
adc
ror
in
sbb
and
dec
in
pop
cltd
add
xor
dec
dec
mov
int3
mov
js
or
xchg
cmp
xor
xor
pop
ss
into
or
dec
out
mov
jns
jne
pop
push
mov
mov
in
idivl
push
ja
add
pushf
fidivs
imul
mov
movsb
rorl
lret
cmp
cmp
mov
mov
xor
mov
add
leave
and
add
aad
out
mov
stos
rcrb
mov
push
lds
mov
addl
aaa
xor
sarb
sarb
enter
fsubr
ss
shlb
cmpsb
std
aas
ret
mov
js
push
test
push
repz
fwait
insl
cmp
cld
jmp
orb
and
push
cmpsl
mov
fsubrl
cmp
pop
pop
mov
aas
rcrb
jmp
dec
xor
das
or
pop
adc
dec
out
mov
mov
sar
cmp
inc
lcall
push
add
inc
pop
or
out
and
sub
clc
ja
xchg
stc
mov
lock
inc
or
insl
lds
dec
test
cmp
inc
rcll
cmp
xchg
push
push
jp
cmp
fsub
ret
das
rclb
mov
pop
dec
xor
jno
and
mov
cmpsl
sub
xor
in
ret
jge
int
in
dec
pop
jbe
inc
cmp
fwait
xchg
lret
call
scas
mov
pop
and
sub
mov
cmp
ret
cmp
push
cmp
lret
pusha
sbb
mov
cmp
enter
ss
ss
jae
xor
mov
xchg
repz
pop
pusha
mov
jmp
cmp
mov
mov
idiv
push
sub
add
stos
lods
pop
xchg
mov
sub
lcall
sbb
dec
cmp
inc
es
pop
rorb
ss
or
and
call
push
repnz
dec
xor
jbe
jno
add
push
cmp
adc
xchg
repz
add
lahf
test
call
or
xor
cmp
imul
fcompl
dec
dec
js
and
jbe
pushf
call
add
sub
idiv
adc
adc
dec
int3
enter
jne
cmp
or
inc
das
rorb
cmp
xor
jb
dec
cmp
int
inc
mov
cld
jbe
mov
sti
fbstp
fcomi
xor
cmpb
lea
cmp
jmp
loopne
sub
jp
shlb
mov
cmp
lods
mov
ja
or
lds
mov
push
ljmp
pop
imul
xor
and
xor
pop
frstor
jge
test
cmp
inc
test
sub
sar
subb
out
imul
int3
imul
lods
push
jae
cmp
outsb
pop
sarb
adc
mov
cmp
add
cmp
mov
jl
lahf
cmp
das
mov
cmp
nop
sub
jno
imul
mov
add
mov
dec
cmp
ret
xor
mov
xchg
aad
sbb
xor
test
out
cmp
cmp
aam
dec
das
lds
mov
xor
loop
dec
sub
pop
mov
cmp
mull
ljmp
cld
dec
shlb
roll
pop
mov
sahf
lahf
mov
or
jge
aaa
out
mov
jecxz
xor
jp
adc
sub
pop
fists
aas
addl
sti
leave
xchg
popa
mov
sbb
push
lods
iret
fnstsw
stc
xor
ret
sub
sbb
mov
dec
cmp
mov
jo
stos
cmc
test
je
cmc
push
inc
mov
xchg
xor
int
ffreep
xor
or
and
popa
push
push
and
cmp
jmp
aas
fldt
iret
xor
lea
and
mov
das
pop
fcmove
aam
mov
cmp
std
pop
sbb
mov
cmp
adc
mov
cmp
shll
rcr
dec
ss
fidivl
fwait
in
aad
rep
call
mov
dec
mov
aaa
inc
enter
push
inc
add
xor
leave
lret
mul
sub
xor
fisttps
cmpl
xorb
cmp
mov
and
repnz
imul
cmc
mov
cmp
dec
mov
jns
inc
xchg
mov
push
cmp
cld
mov
ja
jl
dec
add
lea
mov
sahf
rolb
jb
test
aad
xor
call
jne
pop
subl
loop
clc
mov
cmp
xchg
xor
stos
cmp
rcll
add
xlat
rclb
mov
inc
push
cmp
sub
shll
mov
mov
mov
or
lcall
push
jbe
mov
aad
mov
inc
bound
orb
lret
dec
repz
pusha
sbbb
push
pop
and
push
jb
cmpsb
cmpl
push
test
daa
cmp
in
pop
lret
or
push
loope
sub
cmp
inc
lock
aaa
sub
in
stc
pop
aaa
mov
mov
jle
sarb
sti
icebp
into
dec
xchg
mov
inc
faddl
sbb
sbb
mov
xor
cld
dec
lcall
outsb
cltd
testl
test
aam
subb
insb
pop
cs
shll
push
mov
fs
inc
stos
ss
jmp
cmp
ja
insl
cmp
push
mov
test
cs
subl
xor
xchg
inc
push
out
insb
push
mov
push
pop
int
mov
repz
mov
cmp
dec
jmp
movsb
addl
ret
inc
enter
xor
iret
ljmp
and
fsubs
add
mov
fwait
jae
xchg
xor
jg
xor
and
vpsubq
mov
popa
mov
mov
jb
int3
lods
insb
add
xor
inc
sbb
xor
mov
mov
pushf
push
and
jecxz
sbb
jo
sub
out
cmp
std
in
adc
add
mov
mov
ret
jno
or
xor
push
aas
adc
xor
cmp
mov
cs
adc
cmp
cmp
pop
or
mov
and
ret
xchg
clc
cmp
dec
dec
adcl
imul
repz
shlb
movsl
sbb
inc
enter
or
mov
xor
mov
lock
sahf
cmp
jge
mov
cmp
xchg
inc
mov
aam
pop
sub
xor
add
mov
cmp
fistl
sbb
out
inc
inc
push
sar
jg
in
andl
add
jmp
test
cmp
xlat
stc
add
aaa
mov
push
mov
mov
insb
jmp
xor
xor
pusha
or
mov
mov
pop
adc
lods
cmp
or
inc
cmp
nop
xchg
das
mov
cmp
xlat
adc
aas
mov
sbb
clc
ja
insb
dec
cmp
cmp
jbe
inc
cmp
int3
xchg
add
icebp
shl
out
mov
loop,pn
mov
sub
call
sbb
dec
add
jnp
test
out
mov
push
in
cmp
mov
xor
js
adc
sub
aaa
xor
sbb
and
dec
std
mov
jns
out
push
mov
jmp
push
and
data16
fwait
sbb
xchg
or
pop
lds
xor
mov
push
inc
pop
call
pop
add
cmp
rcr
xor
xor
cmp
and
enter
ss
hlt
pushf
mov
inc
sub
std
xorl
xor
sarb
mov
sub
push
int3
mov
push
push
adc
icebp
mov
dec
xchg
out
fdivr
mov
ret
cmp
sti
sub
push
cmp
lds
in
cmp
or
int
pusha
push
es
push
adc
popf
icebp
mov
rcll
iret
xor
sbb
inc
ljmp
fbstp
out
cmp
sbb
jp
int3
fldenv
pusha
push
in
in
cmp
in
dec
stos
cmp
inc
or
cmp
jno
sbb
or
shl
into
push
das
cmp
sub
ret
add
out
pop
cmp
sahf
cmp
cmp
sub
mov
cmp
jo
cmpb
mov
pop
adc
mov
and
fmuls
sub
push
or
xor
sub
cwtl
out
xor
or
mov
daa
xor
mov
xchg
mov
sub
fadds
imul
mov
jno
inc
ljmp
xchg
cmp
xor
inc
lret
dec
push
pop
test
mov
int3
cmp
addb
cmp
mov
xor
mov
adc
rolb
pop
int
idivb
rcll
xor
iret
cmp
xchg
push
or
or
adc
fisttpl
lret
ror
cmc
fwait
and
push
mov
je
jge
jecxz
cmp
jbe
and
mov
and
add
out
in
clc
scas
jg
cmp
shlb
jns
lcall
cwtl
cmp
cmp
rclb
loopne
dec
test
rep
cmc
xor
mov
push
xor
in
cmp
xchg
sub
push
add
lods
fcmovb
cmp
loope
sti
shlb
test
add
movsl
cmp
mov
cmp
stos
inc
mov
xor
or
out
sbbb
psrlq
mov
xchg
leave
out
ret
fnstenv
xor
in
sahf
jae
xor
mov
lahf
or
mov
or
jmp
shll
cmp
mov
pop
push
addl
mov
xor
sub
ss
dec
js
lahf
imul
shlb
movsb
sbb
dec
push
xor
sbb
je
adc
xor
orps
inc
mov
pop
cmp
adc
mov
scas
outsb
jge
sbb
dec
int3
push
xchg
daa
mov
rol
imul
and
push
push
jmp
cmc
jge
xchg
add
pop
stos
dec
mov
mov
daa
adc
sbb
icebp
inc
mov
mov
cmp
pop
xor
cli
sbb
rorb
xor
jns
cmp
test
or
out
sub
lret
outsl
mov
adcl
xor
int3
mov
ss
imul
push
cmp
lahf
repz
scas
lret
xchg
mov
aam
jle
push
fs
inc
cli
hlt
cmp
push
pop
jne,pn
fisttpll
test
ret
xor
cmp
flds
and
inc
mov
fistpll
aas
stc
xchg
push
test
push
jo
xor
or
and
jp
fmuls
jge
push
hlt
cmp
mov
jb
mov
fisubrl
xor
shll
lahf
inc
cmpl
add
pop
xor
inc
loop
test
sub
mov
mov
aas
dec
in
push
and
cmp
in
out
lds
dec
jle
add
fadd
sub
call
cmpsl
xor
loope
cmp
popa
dec
aas
xor
mov
dec
iret
jns
je
cmp
dec
or
xor
dec
int
js
pop
mov
addr16
iret
insb
in
jbe
or
les
mov
lea
or
cltd
inc
dec
and
subl
cmp
enter
ss
mov
pop
es
adc
ds
jbe
cmp
push
mov
jno
daa
cmp
icebp
xlat
xchg
imul
cmp
imul
out
adcb
sub
push
test
out
jle
das
ror
call
sbb
mov
or
cmp
push
inc
jnp
cmp
xor
hlt
cmp
shlb
sbb
enter
std
add
les
dec
in
cwtl
xor
outsl
fdivrl
scas
call
dec
cmp
xor
enter
shlb
iret
sub
lock
xchg
mov
xchg
icebp
cwtl
mov
adc
add
cmp
enter
lcall
mov
aam
or
jo
iret
cmp
fdivl
sbb
mov
mov
cmp
movb
or
cs
adc
cmp
fadds
dec
cmp
fisttpll
pushf
sbb
mov
or
and
dec
add
push
cmc
ds
jge
xchg
sarb
pop
dec
xchg
es
shll
jno
sahf
cmp
repnz
addr16
popf
test
cmp
cmp
loop
xor
mov
push
repnz
pop
adc
pop
or
rcrb
aaa
in
dec
pop
push
cmc
lahf
enter
in
popa
and
fldcw
jg
js
sub
rorb
data16
mov
jecxz
xor
push
mov
jecxz
sub
add
xor
and
loopne
ljmp
add
mov
sbb
movsb
icebp
cs
fs
add
repz
pusha
xor
adc
fs
push
addb
outsl
cmpsb
cmpb
rcrl
ss
and
movsl
mov
xchg
in
lret
imul
pop
lock
dec
mov
testb
outsb
adc
jno
cmp
insb
jl
cmp
gs
pop
inc
int3
mov
sub
lcall
push
scas
and
cmp
shr
mov
arpl
cmp
das
add
or
jmp
mov
mov
insb
adc
and
ret
xchg
push
sub
leave
loopne
pop
xchg
cmp
mov
sub
jp
xorl
xchg
xor
xor
xchg
inc
cmp
jbe
cmp
dec
pop
xor
fmuls
inc
cmpsl
or
and
es
aam
sahf
adc
mov
pop
cmp
or
jge
jo
and
pop
enter
test
add
sub
into
jo
sbb
cmp
and
mov
push
xchg
xor
out
shrb
out
cmpsl
sbb
sub
xor
notb
ljmp
lret
data16
addl
loope
and
int3
dec
pop
aad
repnz
jmp
xor
daa
jle
mov
sysenter
dec
adc
shlb
out
jmp
dec
dec
std
mov
ret
inc
pop
mov
fisttps
mov
inc
inc
xor
jnp
lret
inc
inc
into
sahf
scas
cmp
outsl
cmp
fcoms
dec
scas
sbb
iret
subb
test
lret
mov
repz
mov
sbb
cmpl
xchg
cmp
cmp
fwait
sbb
cmp
shlb
xchg
lret
cmp
add
aam
cmp
push
mov
adc
push
data16
mov
jl
inc
cmp
fidivrl
fstl
mov
outsb
cmp
mov
jno
xchg
popf
sub
push
rcrl
mov
add
mov
xor
cmp
nop
adc
mov
es
je
xor
sbb
std
andb
push
add
test
les
sarb
negl
cmp
mov
jmp
pop
in
push
out
outsb
enter
sub
sub
je
cmpsl
inc
cmp
das
sbb
or
daa
cmp
add
mov
shl
pop
mov
mov
xor
sbb
or
xorl
aaa
stc
popf
add
mov
mov
push
push
cmp
xchg
in
outsb
xchg
lret
loop
jp
jl
push
push
scas
xor
mov
es
sbb
jo
cmp
test
sub
stos
dec
jo
popf
movsb
jb
xchg
and
shlb
cwtl
roll
enter
pop
mov
bound
sbb
sbb
mov
ret
mov
ja
repz
mov
xor
adc
mov
sub
popf
xchg
push
pop
mov
jnp
flds
adc
jo
mov
cmp
popf
lds
aaa
cmp
fisubl
jecxz
shl
inc
shrb
cmp
nop
iret
idivl
dec
inc
addr16
loope
cmpsl
mov
jmp
cltd
rorb
jo
cmp
dec
push
out
cmp
push
shll
adc
push
cmp
mov
xor
dec
sti
mov
cmp
xlat
xor
sub
int
loopne
ljmp
push
into
pop
nop
cmp
lock
dec
xchg
pusha
shr
cmp
inc
inc
popa
adc
jle
add
adc
push
jno
push
mov
setp
iret
xor
jo
test
fdivrl
adc
pop
adcl
mov
pop
push
xlat
outsl
cmp
xchg
not
add
mov
or
mov
ss
add
xchg
dec
mov
daa
or
cmp
push
imul
cmpl
cli
std
dec
aam
fs
cmpsl
cmp
sbb
and
subl
cmp
xor
lods
stos
sbb
and
popf
out
jl
repnz
je
jo
mov
pushf
cmp
push
jmp
inc
rorl
lret
push
cmp
movsl
inc
sbb
les
outsl
xchg
cmp
in
push
mov
add
movsl
les
add
mov
fisubrs
faddp
and
xor
pop
jns
and
add
xor
ret
sbb
clc
mov
pusha
sbb
in
xor
test
pop
pop
xchg
adc
fidivrl
and
cltd
xor
and
cmp
push
mov
insl
pusha
cmp
inc
in
jge
xchg
dec
mov
repnz
adcl
shlb
jp
mov
insb
jb
inc
mov
add
xchg
or
and
cmp
xor
ret
cmp
adc
mov
mov
push
out
xchg
mov
aaa
dec
dec
cmp
ret
inc
mov
rcl
mov
adc
add
xchg
rcl
and
xchg
cmp
test
sar
inc
jl
jecxz
add
cmp
cld
mov
xchg
sub
cmp
jmp
inc
popa
cmp
xchg
mov
das
add
jle
sub
mov
dec
imull
xchg
pop
sarb
andw
sbb
jecxz
cmp
sub
rcrb
scas
fwait
scas
rolb
ss
orb
das
out
cmp
shrb
int
inc
cltd
enter
ss
pop
mov
lea
movsb
shrl
mov
dec
cmc
cmp
push
pop
push
cmp
sbb
ljmp
dec
pop
fs
jecxz
jne
xchg
movsl
cmp
xor
rorl
cmp
adc
hlt
pop
sub
cmpsl
in
outsl
into
mov
cmp
push
loopne
clc
jp
lea
int3
adc
out
adc
and
fwait
arpl
loop
ret
cmp
out
mov
cmp
sub
sub
imulb
dec
xorb
sub
mov
mov
out
mov
lock
in
aam
mov
mov
dec
repnz
mov
push
scas
cmp
iret
adc
dec
je
xchg
cmp
sahf
popa
sbb
cmp
inc
nop
pop
mov
addb
out
loop
push
cmpsb
shll
mov
sbb
in
sbb
stos
xor
mov
sarb
ficompl
and
iret
cwtl
inc
cmp
dec
popf
inc
cmp
mov
loope
fisubl
cmp
adc
into
jo
fistps
es
xchg
jnp
add
pop
xor
outsl
pop
in
inc
popa
fsts
mov
cmc
dec
cmp
mov
xor
push
loopne
shll
adc
sbb
jo
dec
lret
cmp
cmp
adc
jbe
shll
sti
add
mov
pushf
mov
xchg
lret
stos
aaa
adc
jecxz
mov
adc
addr16
into
mov
xchg
cmp
imul
cmc
pop
in
jns
add
adc
sbb
dec
test
xor
fldl
rcrb
cmpsl
cmp
sub
movsb
and
sbbb
in
inc
sarb
xor
push
wrmsr
int3
xor
repnz
enter
stos
xchg
ret
dec
inc
aaa
push
add
sbb
pop
notb
imul
mov
cmp
mov
dec
or
arpl
xor
repz
mov
xchg
call
cmp
rol
xlat
scas
cmp
test
repz
cmp
mov
enter
xor
jecxz
sub
ss
cmpsb
aam
shr
or
sti
pop
cmp
or
and
mov
icebp
shrl
xchg
dec
nop
std
aaa
loopne
je
loope
popf
outsb
enter
sub
xchg
fmull
dec
cmp
mov
idivl
push
cli
cs
and
cmp
shlb
add
shll
mov
and
bound
int
leave
rolb
xor
pop
rorl
ja
lods
xor
out
xor
sub
push
cwtl
sahf
cwtl
andl
mov
cmp
jnp
call
cmp
aas
push
repz
mov
pop
adc
xor
inc
divb
cmp
cs
xchg
clc
enter
ss
pop
jns
pop
idivl
mov
sub
xchg
inc
push
push
cmp
lods
jl
sar
inc
add
cmp
lods
cmp
mov
pop
call
imul
xchg
into
popf
cli
pop
xor
pop
ficoml
repz
mov
sahf
mov
out
push
sti
add
shll
xor
xor
test
and
cmp
shlb
out
add
push
enter
std
xor
pop
or
or
jbe
add
jge
imul
aaa
stos
cmp
adc
sbb
out
inc
xorb
xor
and
movsl
mov
jo
mov
aaa
add
jp
pop
jbe
xor
adc
arpl
xor
dec
inc
pusha
cmp
pop
xor
outsb
shl
add
out
pop
or
out
enter
sub
xor
mov
scas
pusha
movsl
xor
fld
lret
es
xor
or
add
xor
out
jmp
mov
pop
cmp
scas
mov
dec
push
cmp
enter
mov
cmp
rcl
cli
and
jo
popf
stos
add
mov
xor
lods
pop
sbb
das
push
popa
adc
inc
or
cmpl
xor
push
loope
pop
mov
inc
and
mov
out
xlat
repz
repz
inc
notl
xchg
add
cmp
idivb
fcom
lret
cmp
jg
dec
mov
push
jbe
or
dec
jle
sbb
xor
popf
push
sar
jecxz
jg
cmp
and
pop
cmp
push
sbb
sub
mov
icebp
out
cmp
xor
mov
cmp
mov
lds
mov
rorb
mov
ljmp
fmulp
arpl
je
sbb
adc
dec
jg
pop
cmp
and
cmp
push
cmpsl
cmp
shll
xchg
cmp
scas
cmpb
adc
ja
call
mov
mov
cmp
or
lret
inc
push
ret
cmp
dec
enter
xor
test
imul
ja
repz
out
xlat
cmp
dec
loopne
popa
clc
popf
mov
mov
addr16
xor
rcr
and
adc
mov
or
cmp
jns
loope
xor
push
mov
mov
dec
in
rcrb
out
addr16
or
call
test
test
mov
cmp
mov
mov
rclb
mov
icebp
lods
sbbl
jg
xor
mulb
mov
call
pop
ljmp
testl
cmp
xor
jge
mov
pop
js
dec
clc
jle
cmp
inc
inc
push
cmp
cmp
and
out
cmp
fidivrl
out
xor
lds
adc
aas
dec
hlt
insb
mov
xor
les
push
push
leave
cmp
aaa
cld
es
sub
cmc
test
xor
test
adc
xchg
lock
push
movsb
test
shl
cmp
shlb
leave
mov
add
aam
push
add
gs
push
jnp
inc
mov
dec
xor
add
aas
cmp
sub
sub
jge
xlat
xor
addr16
pop
loope
cmp
adc
dec
cmp
insb
adc
sahf
loop
cmp
cmc
cli
js
mov
mov
mov
pushf
add
xor
js
mov
xchg
jo
mov
xor
push
xor
cmp
repz
adc
lds
sbb
das
popa
xchg
out
cmp
add
fsub
push
cmp
enter
push
jno
or
sbb
cmp
rcl
scas
rolb
xor
cmp
adc
out
fbstp
mov
and
mov
pusha
aad
cli
ja
fsubl
jb
fidivl
aam
xor
out
sub
inc
mov
leave
inc
scas
pop
popa
xor
push
xchg
mov
leave
cmp
lret
push
cmp
enter
sbb
jl
popf
cmp
out
and
ja
xor
orb
jns
fptan
sub
xor
xor
lret
imul
cli
adc
cmp
dec
dec
movsl
xchg
outsl
pusha
add
mov
sbb
sbb
pop
mov
das
ss
mov
lods
fdivl
fldl
cmc
in
out
jge
push
xor
ss
and
xchg
sub
aaa
jo
cli
pop
addr16
mov
js
cmp
push
scas
cmp
cmpl
mov
cmp
mov
pop
dec
adc
cmp
pop
leave
lcall
jnp
xor
xor
xchg
int
xor
pop
jg
or
idivb
fsts
adc
xor
mov
sbb
push
dec
repz
enter
inc
jne
xor
cmp
popl
or
rcr
clc
ret
cli
pop
lock
je
mov
mov
sub
and
popl
xor
and
les
cmp
mov
js
fnstenv
jl
cmc
mov
jns
inc
jp
pop
mov
mov
ds
rcrb
add
cmp
add
mov
dec
push
loope
or
dec
imul
cmp
je
add
jmp
in
test
stos
mov
repnz
push
cmp
push
enter
cs
lret
pop
lds
cmc
mov
and
or
daa
pop
cmp
inc
insb
xor
orl
lahf
ja
cli
inc
and
dec
cmc
pop
rcrl
cmp
push
pop
int3
xorl
ret
mov
cmp
pop
enter
andl
out
verr
pop
cmp
decl
gs
cmp
or
mov
aas
clc
roll
xchg
arpl
cmp
pop
mov
ljmp
sub
ret
xchg
jo
je
lods
scas
or
faddl
movsl
pop
stos
out
dec
shll
xor
jmp
inc
repnz
cli
cmp
sahf
outsb
mov
cmp
int
dec
leave
xchg
sbb
test
stos
xchg
xchg
mov
inc
outsl
movsb
cmp
shr
pop
fiadds
dec
and
xor
or
outsb
inc
ror
mov
adc
sti
inc
xorb
adc
and
cmc
cmp
add
inc
addr16
push
and
scas
pusha
mov
xchg
test
cwtl
rclb
out
and
jb
fiaddl
cmp
std
call
sub
int
arpl
cmp
pop
jge
out
cmp
and
js
push
cmp
test
ja
repnz
cltd
mov
mov
test
xor
jbe
push
cmp
add
aam
xor
lret
jge
pop
cmc
xchg
call
test
pushf
xchg
shlb
mov
add
cs
dec
hlt
inc
stos
ljmp
lcall
loope
fld
mov
fmul
cld
dec
cmp
adc
int
adc
scas
shlb
aas
cwtl
or
add
pop
push
loope
xor
mov
mov
loope
call
dec
dec
in
cmp
shlb
jne
and
test
add
fwait
xchg
jnp
xor
cmp
ja
pop
jno
dec
cmp
ds
jne
fcmovne
cmp
ror
fnstcw
mov
cmp
rep
cmp
loope
fidivs
cmp
push
jg
sahf
int3
jle
aaa
cmpb
jne
cmp
inc
or
std
loopne
adcb
sub
jo
rcr
lret
adc
xor
loop
jnp
cli
pop
ss
cld
cmp
jg
jl
xchg
xor
xchg
dec
or
lret
xlat
jle
cmp
sti
fists
fwait
test
adc
mov
movsl
and
push
fidivrl
mov
pop
push
mov
clc
jmp
cmp
add
mov
enter
mov
mov
and
jp
mov
push
xor
icebp
int3
lea
stos
cmp
jge
insl
arpl
cmp
movsb
inc
out
jne
shrb
pop
mov
xor
into
cltd
sbb
das
int3
enter
pop
out
mov
int
cmp
shl
fwait
cmp
ficoml
push
cmp
test
in
sbb
movsb
cwtl
inc
xchg
lret
mov
adc
jmp
js
cmc
stc
push
push
cmp
sbb
jl
push
or
and
sub
cmpsb
xchg
int3
cmp
movsl
or
xor
ja
cmp
mov
arpl
sarb
stos
or
hlt
in
mov
outsl
rol
mov
pop
jb
lea
ret
aas
out
mov
in
xor
outsb
iret
test
fidivrs
shrl
xor
mov
adc
clc
and
hlt
lock
fimuls
mov
shll
repnz
jmp
shrl
xor
enter
shlb
jbe
sbb
push
xor
add
out
jmp
mov
mov
aas
inc
sub
jae
mov
lods
mov
xor
out
out
out
pushf
ss
pop
xor
scas
pop
xor
dec
sbb
xor
push
int3
push
mov
adc
cmc
and
enter
and
pop
jp
rcr
cmp
jmp
dec
cmp
sub
shr
cltd
cmp
or
pusha
shr
jecxz
ret
xor
sub
dec
pop
ret
cmp
sub
icebp
out
xchg
iret
das
cmp
insb
sbb
inc
xchg
mov
repz
shlb
jbe
les
iret
add
inc
xchg
idivl
faddl
fdivs
leave
mov
lea
pop
mov
repz
pop
pusha
cmp
test
add
mov
jns
cmc
loop
inc
adc
push
mov
rclb
aas
mov
pop
adc
and
int3
lahf
je
adc
aaa
popa
sbb
xor
inc
insl
aam
imul
movb
addb
mov
and
iret
xchg
orb
pop
das
call
fisttpl
loopne
or
iret
int
adc
rorl
sub
arpl
repnz
sbb
adc
jecxz
mov
lcall
cmp
outsl
push
sub
inc
dec
jg
mov
xor
jge
test
push
popa
aaa
cmp
xlat
jl
dec
daa
aam
lret
cmp
sub
add
es
xor
pop
mov
lahf
enter
adc
cmp
inc
jecxz
xor
pushf
sub
xor
fdivl
mov
pop
push
cwtl
ds
pop
notb
loopne
fnstenv
or
adc
jp
out
xor
into
sub
imul
lds
adc
ss
insb
loopw
sbb
call
xorl
stos
cmp
test
add
sbb
and
cwtl
ds
pop
insb
cmp
icebp
adc
dec
pop
xchg
lds
in
sbb
jecxz
inc
test
mov
cmp
cmp
dec
dec
mov
arpl
iret
fmulp
jno
cmp
sbb
adc
jnp
das
cmp
xchg
and
dec
hlt
push
cmp
ret
test
nop
mov
pop
fs
pop
or
mov
xor
lahf
mov
mul
rol
jo
cmp
leave
stos
mov
jmp
mov
cltd
aas
aam
ss
neg
cmp
loopne
aaa
cmc
arpl
lahf
push
cmp
pusha
js
int
jnp
out
cmp
jbe
stos
cmp
sbb
cmp
shrb
mov
inc
int3
dec
lret
and
sub
mov
fdivl
add
je
cmp
loope
divl
mov
fsubrl
jo
decb
xor
adc
aad
mov
inc
imull
ss
mov
test
cmp
shrl
adc
cmc
sub
xor
push
mov
jne
cmp
cmpsb
and
dec
in
mov
pop
leave
cmp
cmp
fldt
and
fisttps
insb
xor
jns
cmp
hlt
cmc
push
sub
pop
addb
and
int
out
xor
bound
repz
xor
inc
mov
stos
push
sbb
or
mov
addr16
test
xorb
imul
add
and
xchg
inc
mov
clc
popf
jbe
shrb
push
add
adc
jb
sti
dec
cmp
push
xchg
pop
dec
call
push
movsl
dec
add
ja
scas
ret
leave
jo
and
lds
xchg
int
cmp
imul
rclb
xor
loope
repnz
mov
fmul
adcb
xchg
cmp
xchg
popa
jns
adc
cmp
mov
inc
insl
cmp
iret
test
mov
mov
jbe
sbb
arpl
movsl
inc
mov
cmp
push
clc
orb
ret
ja
xor
sub
mov
and
rcll
js
enter
test
adc
scas
rcl
add
or
cmp
fisubrs
add
ljmp
ss
mov
test
sti
inc
cltd
ret
adc
and
not
les
xchg
push
lcall
in
loopne
jmp
mov
dec
mov
sub
cmp
xchg
jecxz
loopne
add
enter
mov
stos
popf
push
jb
cmp
cmc
into
lods
aaa
cmp
inc
shll
cmp
jp
jmp
cmpsb
sbb
xchg
subl
adc
notb
test
jg
movsb
inc
sarl
or
cmp
int3
inc
cmc
jbe
xor
sbb
xor
xchg
cmp
std
adc
pop
cmp
sub
xchg
cmp
aam
dec
add
mov
mov
mov
out
test
pop
outsl
loop
aaa
jp
ljmp
or
push
add
stc
mov
fdivrs
add
jp
shrb
push
cltd
sub
mov
inc
xchg
icebp
lock
loope
cmp
lods
add
xor
outsl
dec
cmp
fwait
sbb
adc
into
jp
xor
cmp
pop
mov
clc
shrd
mov
dec
pop
cmp
mov
cmp
cltd
fidivs
cmp
xchg
insb
daa
adc
or
je
cmp
in
or
enter
test
xchg
push
fistpll
adc
and
mov
je
ss
lock
loope
mov
jmp
mov
mov
mov
sbb
adc
xor
adc
jle
idivb
int3
pop
and
push
in
test
cmp
in
add
adc
aam
inc
dec
xor
jecxz
test
mov
leave
negl
outsl
sarb
cmp
mov
in
fdivl
rclb
jns
sbb
dec
in
sub
aaa
mov
push
cmp
enter
lea
mov
movsb
rcr
mov
add
jmp
adc
lock
sub
push
inc
les
adc
iret
dec
xor
aaa
ja
inc
icebp
sub
or
call
and
add
pusha
loope
adc
xchg
ret
cmp
xchg
ss
cld
add
std
or
in
lods
cmp
sbb
sub
pop
enter
pop
hlt
or
mov
lea
add
scas
and
xlat
fwait
adc
testl
or
dec
loop
pop
ss
push
push
out
pop
or
cmp
mov
dec
idivb
cli
cmp
idivl
cmp
cmp
fcompl
imul
cmp
lods
pop
insl
popa
mov
or
insb
js
inc
out
jno
mov
xor
cmp
ret
push
push
cmp
cltd
shl
jnp
iret
data16
loopne
std
or
fmuls
cmp
pop
in
lock
cmp
or
pop
shl
imul
in
xchg
repnz
call
lea
arpl
das
enter
cmpsl
xor
test
in
cmp
int
xor
sub
imul
cmp
addr16
dec
test
pop
mov
cld
mov
jnp
or
cmp
adc
fs
jbe
xor
add
lahf
mov
sub
stc
scas
lods
add
dec
in
push
mov
and
sub
sbb
and
or
insb
mov
and
bound
add
cmp
clc
push
and
dec
or
ss
lahf
xchg
subb
sub
repz
and
das
dec
test
test
hlt
lret
cmp
xchg
push
lock
xchg
out
or
jae
cmp
adc
sub
jbe
pop
int3
pop
mov
aaa
cmp
or
rorb
sub
pop
stc
push
hlt
cmp
je
xor
shlb
shlb
pop
mov
loope
push
cmp
shll
jl
aad
rcll
cmp
mov
xchg
cmp
xor
push
ret
repz
or
xlat
dec
jbe
and
in
cmp
test
push
out
cmp
lret
out
adc
add
sahf
adc
inc
xorl
xchg
call
pop
std
adc
stos
aaa
cmp
push
and
sub
mov
insl
xor
int
icebp
test
pop
dec
cmp
enter
cmp
idivl
or
pop
xchg
jnp
pop
test
and
jle
jae
xor
scas
outsl
sub
mov
jge
cmp
sbb
pop
inc
mov
cli
cmp
cmpsl
insb
xchg
mov
mov
aas
add
jb
mov
push
sub
clc
dec
adc
cmp
aam
out
ret
or
sbb
pop
sub
pop
pop
dec
aas
mov
rol
cmp
loopne
push
or
decl
jno
and
mov
pop
sbb
lret
test
lds
xchg
movsb
int3
cmp
popa
xor
pusha
adc
push
outsl
cmp
cmp
xchg
jno
jbe
mov
add
lea
adc
xchg
insl
iret
mov
pop
cmp
mov
mov
adc
pop
pop
aaa
sub
aas
mov
scas
js
cmp
mov
clc
popf
push
shlb
or
mov
xor
jp
push
xor
xchg
repnz
jmp
adc
test
jbe
es
xor
adc
mov
push
aaa
add
sub
loopne
aaa
mov
enter
arpl
stos
sbb
add
inc
and
cs
ret
repz
int3
fidivs
shll
or
call
jno
mov
aad
jge
adcb
or
test
pop
adcb
fdivs
pushf
jbe
mov
shlb
and
cmp
cmp
jno
in
cmp
pop
pop
cmp
and
or
mov
mov
in
sub
dec
or
pslld
es
stc
cmp
mov
xchg
pop
xor
mov
sbb
sub
dec
gs
popl
push
pushl
mov
jge
xor
lret
cmc
jbe
xor
pop
xchg
int
jo
or
fstpt
add
es
cmp
cmp
mov
sbb
in
cmp
bound
mov
outsb
out
rcrb
add
mov
jmp
js
and
jge
inc
shl
add
push
xor
orl
dec
jecxz
push
or
in
imul
cmp
aaa
aas
leave
loope
icebp
xor
cmp
loop
in
cmp
test
mov
xchg
aaa
pop
cmp
mov
in
icebp
dec
rorl
in
sub
fs
aas
repnz
data16
aad
sbb
popa
jmp
adc
xchg
arpl
js
sbb
mov
cmp
push
and
fnstcw
call
xor
int
nop
in
sarb
rcrl
adc
xor
mov
cmp
dec
dec
fs
xor
mov
add
rolb
rcrl
ljmp
dec
cmp
xor
xchg
cmp
add
or
ror
cmp
mov
mov
ljmp
mov
mov
ficomps
inc
cmp
insb
cmp
jo
sub
cmp
xchg
add
jbe
cmp
or
and
pusha
rclb
std
cli
rorb
mov
sti
cmp
push
lahf
in
das
xchg
stos
xor
xor
adc
test
jecxz
adc
leave
jnp
nop
push
jb
mov
xor
mov
or
enter
jo
test
loop
jb
sbb
adc
dec
mov
xor
dec
in
cmp
push
int
iret
adc
push
nop
aam
mov
push
rorl
cmp
lcall
ss
mov
xor
out
repnz
or
fstpt
in
cs
jg
sbb
mov
cmp
xor
jae
lret
addr16
cmp
test
mov
cmp
sub
cmp
stos
rol
add
xor
pop
mov
cmp
inc
xchg
mov
mov
pop
pop
cmp
sbb
fadds
dec
jecxz
mov
aam
push
ss
cmp
push
mov
roll
repz
dec
cmp
scas
ss
std
adc
inc
faddl
jb
jo
jecxz
les
cmc
enter
mov
inc
push
cmp
dec
or
jne
cmp
mov
repnz
add
icebp
rclb
or
xor
xor
cmp
xor
push
cmp
sub
in
push
or
xor
jle
test
push
iret
loop
loope
out
xchg
dec
mov
jne
movsb
mov
shll
mov
push
scas
ljmp
andl
lea
adc
dec
jg
lcall
lret
jecxz
adc
xor
sbb
mov
mov
stos
mov
lds
dec
adc
xor
inc
xlat
pop
stos
inc
mov
orb
jb
mov
inc
mov
mov
in
xchg
cmpl
pop
inc
rcll
fwait
mov
xor
nop
xchg
sub
lds
push
mov
loope
and
fistps
sarb
and
adc
repnz
push
inc
add
mov
adc
lret
mov
movsb
dec
or
xchg
js
cmp
das
mov
push
xchg
test
sub
out
xor
arpl
and
cmp
repnz
mov
and
dec
xchg
jo
mov
das
movsl
pushf
add
or
imull
or
inc
mov
xchg
xor
loop
ret
cmp
fistpll
cmp
ds
in
scas
dec
push
jne
cmp
movsl
outsb
mov
lret
sar
xor
mov
notl
sahf
pop
mov
test
jo
add
ss
xchg
mov
xlat
pop
lret
or
das
xor
sub
sub
outsl
inc
adc
sub
test
shrl
jb
pop
test
lcall
mov
cmp
pop
cmc
cs
push
flds
and
sub
sub
inc
ss
leave
cmpsl
mov
mov
cmp
dec
inc
int3
jno
aad
mov
mov
jne
fstpt
loope
imul
ja
ss
jle
int3
cmp
lcall
rcrb
cmpsl
xchg
push
sti
cli
mov
fs
dec
std
int
cmp
scas
mov
mov
into
inc
cmp
inc
cmp
push
xchg
lea
cltd
out
adc
movsl
sbb
jmp
fisubl
add
push
or
cmp
mov
roll
shrb
xor
popf
fdivrs
fnstsw
mov
call
pushf
adc
inc
xor
sahf
and
jb
xchg
popa
cmp
mov
jmp
or
cmc
jns
mov
add
call
dec
cmp
rcl
ds
xchg
xor
test
sub
call
addr16
pop
shll
ja
cmp
out
lret
pop
jecxz
adc
xor
fmull
or
cmp
ret
cmp
xchg
imul
jae
sarl
adc
sti
pop
xor
js
out
cmp
pop
sub
xor
xchg
loopne
pop
mov
test
adc
test
dec
xor
test
dec
shl
jp
jge
and
mov
pop
cld
dec
sbb
in
cmpsl
ret
cmp
dec
cwtl
adc
je
xor
push
pop
aaa
mov
mov
subl
jb
xchg
fdivs
sbb
cmp
push
mov
fidivrs
mov
ds
mov
lret
loope
dec
dec
das
shlb
and
lahf
dec
pop
inc
push
dec
jb
inc
outsb
cmp
add
push
add
insb
loopne
imull
fisubl
pop
lcall
add
dec
dec
aam
xor
cmp
test
push
inc
sbb
imul
rcrb
shll
push
jnp
and
outsl
je
or
xor
lods
mov
cmp
int3
and
mov
cmp
ss
sub
mov
or
popa
pusha
adc
dec
jnp
daa
std
cmp
cmp
xchg
mov
fidivl
sahf
dec
outsb
cmp
ljmp
and
inc
in
xor
clc
cmp
or
mov
int3
mov
lahf
cmp
xor
out
mov
out
ret
cmpsl
cmp
push
bound
fdivrs
sarb
enter
sbb
cmp
iret
sub
popl
negb
in
push
sub
out
loop
jb
icebp
sarl
movsl
cmp
cmpl
inc
jg
in
adc
and
jge
roll
and
sti
mov
and
fildll
xor
adc
lcall
gs
insl
divb
dec
fdivs
xor
mov
in
cmp
sbb
pusha
in
inc
jns
mov
mov
push
shrl
fisttpll
mov
mov
dec
or
inc
mov
enter
push
pushf
ja
lret
addr16
dec
jno
and
cmp
loopne
jns
lock
cmp
jmp
into
and
cltd
subl
int3
mov
enter
call
inc
and
jbe
add
rorb
adc
cmp
std
xor
xor
cmp
cmpsl
fsubs
adc
int3
xchg
pusha
popa
rcrb
negl
cmp
mov
and
mov
divb
sbb
mov
ds
inc
cwtl
cmp
pop
into
xchg
jo
call
divl
cmp
dec
xlat
sarb
les
xchg
arpl
loopne
mov
loop
sti
mov
add
loope
jecxz
cmp
pop
mov
cmp
pushf
push
je
cmpl
add
adc
outsb
sbb
filds
mov
xchg
bound
std
divb
mov
mov
sub
loope
ss
mov
test
jb
lcall
or
cmp
xor
and
jb
lahf
sub
pop
cmp
ljmp
lods
cld
in
jg
orb
fidivrl
movsl
push
divb
cld
sub
mov
cmpsl
inc
icebp
and
cmp
fwait
sbb
lret
push
lods
lods
aaa
xchg
jae
cmp
adc
adc
pop
dec
dec
dec
fstpt
int3
ret
insl
bound
cmp
mov
add
jne
shrb
cmpl
call
ss
roll
xchg
adc
xor
jmp
shll
clc
cmp
fldenv
adc
ror
cwtl
jne
inc
and
mov
lret
push
cmpsl
cmp
jnp
xor
fisubl
cmc
cmp
add
xor
aaa
mov
into
in
cmp
fwait
out
mov
xchg
fsubrl
xchg
cmp
sbb
test
cmp
mov
sahf
push
test
xor
xlat
cmp
push
cmp
add
mov
in
nop
and
jg
in
shlb
sbb
ja
adc
out
xor
push
dec
inc
sub
cmp
jae
or
dec
cmp
jnp
into
sti
dec
nop
mov
in
xor
mov
and
insl
jb
lock
cmp
rcrl
mov
fisubs
cmp
scas
mov
sub
xor
or
std
repnz
ljmp
or
jnp
sbbl
lahf
cmp
lds
mov
enter
jb
jl
push
mov
imul
jae
jp
call
push
fdivrs
int3
xor
fstps
cs
xlat
stos
or
cmp
call
lret
cmpsl
xchg
aaa
xor
cs
sub
and
mov
add
cwtl
pushf
mov
rcll
jmp
xchg
and
shrl
xchg
xor
daa
je
mov
push
mov
sub
jmp
mov
push
jp
mov
jmp
enter
aad
fsubrs
pop
xor
sub
push
or
jbe
mov
mov
lcall
lods
popa
lahf
cmp
call
out
cmp
jmp
test
rorb
push
lret
cmp
out
dec
aad
pop
sub
mov
sbb
adc
gs
rcl
or
fstpt
aad
iret
xlat
lahf
jle
push
lock
xor
loop
fs
dec
outsl
mov
cmp
sbb
ss
addr16
out
mov
dec
sub
lock
sub
and
popf
cmp
push
insl
rclb
xor
loop
call
mov
cmp
outsl
push
lds
rcrl
xchg
sarb
dec
orb
jnp
pushf
cmp
incl
push
lahf
es
stc
cmp
inc
jno
cmp
push
sbb
and
cmp
mov
mov
stos
sahf
cmp
cmp
out
and
shrl
icebp
sbb
divl
sub
cs
add
sarl
adc
sub
loopne
push
push
dec
inc
mov
pop
cmp
cmpl
inc
and
notl
jne
call
sbb
clc
cmp
popf
mov
cmp
test
int3
cmp
add
lcall
call
push
sub
adc
inc
orb
cmp
subl
das
or
rolb
fbld
sub
out
call
xchg
test
cmc
pop
push
orb
jbe
sarl
fidivl
mov
out
xchg
aam
mov
imul
stc
stos
xor
sub
jnp
fimull
movsl
inc
dec
fs
lret
out
clc
cmp
enter
rcrl
in
mov
mov
fisttps
xorl
sub
into
sbb
sub
cmp
xor
ljmp
xor
movsb
xchg
jne
cmp
pop
lea
xchg
loopne
and
jnp
int
loope
shlb
adc
xor
jl
arpl
cli
dec
jb
les
hlt
or
push
cmp
push
mov
pusha
mov
pop
sbb
leave
sub
cmp
shl
sub
test
cmp
push
jle
and
ds
jmp
stc
dec
fwait
cmp
call
cmp
xchg
sahf
sti
mov
mov
xorl
outsb
aaa
inc
sub
out
sbb
xchg
jno
add
push
or
jns
mov
or
cmp
jmp
into
dec
and
dec
sub
inc
adc
mov
cmp
test
mov
inc
xlat
pop
adc
mov
jb
mov
pusha
jns
cs
dec
int3
xor
xor
out
and
lods
insb
test
and
pop
mov
cmc
mov
fwait
mov
sub
cmp
lock
push
xor
out
ror
outsl
lcall
mov
pop
cmp
sub
lret
push
inc
arpl
dec
sub
dec
and
cmp
cmp
das
adc
stos
insb
dec
lds
cmp
jge
mov
xchg
fstp
cmp
cmp
add
out
rcl
and
jno
aad
sahf
xchg
mov
sbb
xor
cs
sbb
ret
xorb
xlat
ds
rcl
lods
cmp
clc
decl
mov
js
dec
cmp
mov
add
rol
mov
or
xor
dec
filds
xchg
repz
add
add
dec
xor
ror
inc
sbb
aad
das
inc
test
push
push
dec
jns
and
mov
lcall
inc
xchg
or
cmpb
xor
fdivrs
mov
ds
sbb
dec
cmp
inc
inc
flds
mov
out
add
mov
or
xor
mov
stc
xchg
sbb
and
mov
push
sub
clc
shlb
out
aaa
cmp
icebp
push
cmp
push
lret
enter
xor
or
std
add
test
jo
aad
shlb
adc
ss
rcrb
inc
mov
add
ja
xchg
xor
mov
loopne
pushf
xchg
js
cmp
push
int3
cltd
in
add
cmp
push
sub
cmp
mov
cmp
lahf
add
or
into
xchg
decl
xor
inc
or
repnz
push
cwtd
sarl
stc
sub
cmp
testb
xor
dec
inc
out
movsb
push
mov
mov
xor
add
pop
js
into
pop
cmp
dec
test
cmp
push
dec
sahf
aad
out
test
rclb
push
xor
cmp
pushf
sub
test
push
mov
dec
sbb
stos
stos
sbb
loopne
jl
aad
dec
cmc
xor
in
cli
out
lret
xor
jecxz
mov
xor
xor
cmc
sbb
dec
and
mov
shll
mov
pop
adc
dec
movsl
xorl
and
pop
xor
scas
cmp
inc
jbe
in
int3
pop
cmp
notl
out
stos
test
cmp
dec
and
cmpsl
enter
cmp
sti
mov
stos
int3
shr
dec
data16
cmp
dec
dec
popa
pop
xchg
sbb
ds
cmpsl
rcrb
test
pop
cmp
mov
sbb
mov
pop
and
add
js
loope
mov
lret
cmp
mov
jb
or
sbb
xor
mov
clc
loope
int3
adc
mov
ds
sarl
and
rolb
inc
mov
js
or
aam
mov
clc
jle
mov
cs
cmp
rclb
sub
scas
dec
mov
or
enter
ss
leave
pop
mov
mov
shll
inc
cmp
push
int3
fs
push
popl
push
imul
mov
push
clc
icebp
outsb
das
pop
xor
mov
popa
cmp
int3
mov
cld
cmp
popf
enter
ret
dec
cmp
aad
mov
inc
je
cmp
xchg
fidivrl
mov
outsb
dec
cmp
fsts
mov
pop
stc
xchg
cmp
or
lock
mov
fnstenv
inc
je
cmp
mov
cmp
push
cmp
add
mov
sub
shl
cmc
hlt
ljmp
xor
and
aas
shll
clc
cmp
pop
lds
push
sub
cmp
or
sbb
cs
cmpb
lcall
mov
adc
or
pusha
xor
aam
cmp
arpl
xor
lds
mov
dec
subb
xor
in
dec
cmpl
fneni(8087
fcomp
push
pushf
xor
cmp
pop
push
iret
mov
push
push
xor
lret
lods
push
shlb
mov
ljmp
mov
sbb
mov
outsl
or
cmp
xchg
mov
test
aaa
inc
mov
cmp
sbb
insl
test
pop
cmp
and
out
pushf
orl
cld
mov
iret
push
cmp
pop
lds
and
loopne
repnz
xor
icebp
mov
add
or
in
push
rcrb
push
sub
mov
enter
mov
adc
xor
fcomps
xchg
jp
jle
and
enter
ss
enter
xchg
xor
arpl
aaa
hlt
cmc
mov
xor
movsb
mov
pop
in
repz
push
rcrb
pop
cmp
scas
rorb
into
and
enter
stos
add
cmp
in
push
iret
xor
int3
xor
into
repz
aam
fldl
adc
jg
in
push
push
xor
les
ljmp
cmp
sbbl
js
imul
sbb
dec
cmp
mov
repnz
call
out
shl
pop
dec
sub
test
xchg
out
sub
cmp
add
sbb
mov
pop
mov
into
cmp
dec
test
shr
les
rol
dec
lahf
pop
ss
lea
shr
call
jns
int3
lock
jl
or
andl
jns
sub
or
pop
push
and
leave
inc
pop
mov
dec
cmp
mov
out
sbb
into
jb
stc
ja
in
and
and
mov
iret
sub
pop
mov
push
xor
sbb
out
arpl
dec
int
adc
push
mov
rcll
nop
xor
dec
add
lds
push
out
xor
xchg
pop
inc
repz
inc
outsl
dec
leave
jae
mov
ret
in
fimuls
test
add
cmp
test
adc
xor
clc
stos
subb
mov
outsl
mov
fcmovnbe
fmuls
push
pop
fldenv
cmp
sub
cmp
sub
inc
enter
and
lcall
jg
push
xchg
sub
jb
add
outsb
test
in
pop
jo
mov
leave
pop
ds
push
cmp
mov
mov
push
cmp
cmpsl
add
mov
ficomps
dec
cmp
je
push
pop
adc
ret
or
xor
scas
push
xor
add
ret
add
ds
xlat
test
dec
cmp
cld
in
fcmovnbe
das
mov
cmp
add
cmp
xchg
cmp
and
lock
mov
jl
pop
cmc
pop
cmovp
cmp
cmp
sub
lds
mov
inc
cmc
push
and
adc
mov
test
adc
shlb
dec
mov
iret
add
cmp
sub
enter
out
push
dec
xor
sbb
or
into
arpl
cmp
or
call
jns
lret
xchg
hlt
or
mov
push
frstor
iret
inc
leave
mov
adc
inc
sub
mov
jmp
pop
xor
mov
push
cmpsl
mov
jno
cmpl
je
mov
pop
push
iret
sub
aaa
dec
out
cmp
dec
lret
in
jg
out
cmpsl
add
cmp
mov
lods
sub
cmp
es
gs
int
data16
sbb
dec
inc
sub
xor
fs
sub
sarl
rorl
fisttpll
cmp
clc
inc
dec
push
pop
jl
adc
movb
adc
or
lahf
hlt
in
mov
imul
jb
xor
adc
mov
cli
push
rcll
and
enter
jl
mov
fstl
fstpt
mov
rolb
lret
add
les
sbb
xor
ljmp
and
and
pop
jnp
popf
mov
jo
jae
or
inc
mull
sub
xor
dec
negl
loope
sbb
cmpsl
mov
insb
js
shrb
mov
cmp
xchg
lods
int3
inc
test
shrb
xchg
shll
fwait
push
fnsave
lods
inc
cwtl
mov
cmp
scas
clc
int3
xchg
jg
fsubrs
bound
rcr
cmp
scas
jle
cmp
into
pusha
ficompl
xor
sub
call
lret
cmp
lds
rorb
mov
pusha
xorl
cld
cs
inc
cmp
xchg
je
arpl
data16
insl
jb
add
xor
mov
dec
stos
pop
pusha
fdivs
roll
daa
sbb
call
jbe
pop
cmp
mov
jp
or
movl
cmp
int3
rcl
xor
jp
pop
jbe
jge
loope
testl
xchg
push
jg
jg
xor
xor
cmp
cltd
cmp
mov
pop
and
cs
push
cmp
out
push
mov
fcmovnbe
cmp
cmpsb
xchg
scas
add
xor
sbb
hlt
xchg
into
cmp
fnstsw
cmp
ficomps
adc
cmp
or
arpl
int3
rol
imul
cltd
aas
inc
mov
adc
xor
push
mov
scas
and
arpl
mov
mov
jl
jge
or
fiaddl
cltd
dec
into
aaa
push
mov
xor
mov
sub
add
imul
sub
or
inc
push
movsb
pop
testb
data16
test
xchg
mov
xchg
in
or
pop
xor
aaa
cld
gs
inc
cmp
lahf
mov
cmp
dec
push
inc
mov
cmp
jno
leave
push
insl
cmp
enter
popa
fmulp
cmp
in
test
jb
cs
cmp
xor
lea
xchg
cmp
cwtl
push
cmp
or
sti
cmp
fsubrs
inc
pop
insl
idivl
js
adc
popl
push
jns
cmp
pop
cli
mov
xor
sahf
mov
aaa
lcall
aaa
ss
mov
dec
mov
int3
popf
addr16
and
mov
loopne
testl
add
sbb
cs
jo
cmp
dec
xor
mov
pushf
push
cmp
pop
and
stos
xor
mov
mov
jmp
pop
jno
out
stc
cmp
in
enter
call
dec
lret
mov
cmp
cld
imull
aam
jb
fstpl
cmp
inc
decb
cmp
xor
sbb
shl
ds
xchg
cmp
dec
mov
iret
dec
mov
leave
adc
gs
lock
push
sub
cmp
dec
sub
in
dec
mov
das
pop
dec
fadd
cmp
pop
xchg
mov
cmp
loopne
jl
bound
out
fiadds
and
or
rorl
xor
cmpsb
xchg
fidivs
mov
xor
scas
test
fwait
das
xchg
or
jo
cmp
mov
adc
add
outsl
pop
hlt
adc
pop
adc
push
cmp
mov
dec
or
sub
mov
cmc
int
andl
sub
test
add
ss
sub
lods
push
inc
cmp
int3
pop
pop
push
push
neg
add
pop
cmp
movsl
and
test
shll
lea
mov
push
inc
cmp
lcall
lret
jb
test
mov
xchg
cmp
in
ljmp
nop
mov
stc
or
dec
repnz
xchg
mov
outsb
add
add
sub
or
jecxz
dec
lret
xor
out
cltd
rcrb
push
mov
scas
shlb
lahf
jbe
enter
les
xor
jp
cmp
leave
xchg
sti
xor
lock
and
and
xchg
jb
sub
pop
add
lcall
mov
outsl
xchg
or
or
cmp
out
adc
sub
fldcw
sar
popa
pop
cmp
jmp
sbb
xor
jae
dec
adcb
sbb
lea
cmp
push
or
hlt
push
xor
jl
out
gs
pop
inc
cmp
jnp
out
pop
fs
pop
aam
push
ror
xor
in
add
inc
push
test
cmp
fcmovnbe
inc
pop
xor
jge
bswap
mov
pop
adc
cmp
push
mov
lret
jae
sub
mov
mov
call
pop
mov
pop
cmp
add
cwtl
fwait
pop
notb
cmp
test
iret
lretw
sbb
cmp
sbb
mov
xor
jae
xor
adc
pop
jg
mov
xor
dec
mov
stos
int3
fsubrs
sbb
ljmp
daa
xor
ss
mov
pusha
jbe
push
add
test
inc
mov
and
or
lret
xchg
mov
adc
mov
inc
rolb
jecxz
mov
or
loop
stos
fdiv
lahf
xchg
xchg
mov
mov
lods
jle
ret
jmp
mov
fcoms
jno
aaa
ss
add
in
push
iret
mov
outsl
or
mov
cld
jp
mov
call
cmp
vphadddq
shlb
cli
jp
aad
mov
or
cmp
sbb
cmp
icebp
dec
shrb
insl
subb
cmp
cmp
pusha
mov
jnp
jne
lds
insb
inc
loop
fwait
mov
cs
mov
lahf
ljmp
clc
mov
stos
mov
xor
out
imul
push
mul
pop
fldcw
sbb
adc
xor
adc
lret
jne
pop
enter
jbe
mov
out
jo
pushf
testl
int3
mov
add
xchg
jmp
or
mov
in
pusha
xor
ss
enter
jl
cmp
cmp
sbb
add
mull
mov
sti
lret
xor
push
fistpll
jnp
cltd
in
insb
inc
add
xor
into
testl
stos
cmp
xorb
or
mov
out
xor
adc
pop
mov
das
js
iret
cmp
icebp
shrb
jp
sarl
inc
or
sub
lds
inc
mov
push
cmp
test
or
shll
push
mov
xor
orb
sbb
add
pop
mov
xchg
jmp
dec
dec
mov
sbb
xor
movsb
xchg
cmp
hlt
pop
inc
int
push
lret
xor
push
mov
das
cmp
call
inc
dec
push
add
arpl
mov
hlt
push
cmp
fwait
mov
movsl
xor
lret
xor
sahf
call
stos
pop
iret
jno
pop
push
in
leave
push
mov
imul
inc
add
stc
and
sbb
mov
add
hlt
pop
jge
inc
dec
cli
pop
loope
aad
aam
lock
test
addl
sbb
pop
adc
jo
movsl
push
fwait
xor
pop
test
jns
les
dec
sub
sbb
push
call
sbbl
dec
cmp
clc
stc
dec
stos
sbb
sub
arpl
ljmp
mov
push
pushf
push
mov
cmp
xor
in
cmpsb
mov
sub
ret
das
inc
ja
xor
enter
xchg
cwtl
xchg
popa
xor
jnp
pop
cmp
inc
add
call
pop
out
mov
fstpt
cli
xor
lods
xchg
cmp
in
arpl
ss
ds
mov
push
xor
cmp
sbb
lock
addr16
inc
andl
cmp
enter
add
into
xorb
cmp
int3
cmp
xor
bound
sar
das
sub
icebp
mov
repz
xor
push
cmpl
les
shlb
add
test
ds
push
in
scas
cmp
popf
fdivrl
test
adc
push
ds
jl
push
xchg
xor
sub
lret
repz
cli
xor
aam
xchg
xchg
pop
cmp
push
pop
movsb
mov
jbe
push
cmp
nop
aam
in
cli
inc
incl
mov
dec
je
shrl
scas
jmp
pop
popf
push
mov
add
cmpsb
pop
inc
les
insl
xor
clc
mov
cmp
push
rorb
xchg
sbb
mov
cmp
pop
mov
ja
mov
lret
dec
cmp
outsl
and
xor
push
or
aaa
cmp
xor
rolb
xor
clc
jne
xchg
loop
adc
fmuls
cmp
test
add
jo
add
dec
repnz
cmp
sub
jne
or
out
sbb
iret
cmp
daa
sub
mov
outsl
cmp
cmpsb
add
inc
rorb
es
xchg
imul
test
mov
int
stc
add
inc
test
dec
cmp
dec
repnz
inc
ss
push
pusha
movsl
xchg
enter
fidivrs
clc
xor
lret
jbe
fstps
sub
inc
xchg
call
or
pop
frstor
xchg
lods
test
xchg
stos
cmp
fiaddl
adc
xor
add
ja
enter
jae
cmp
ss
mov
jne
push
cmp
cmp
les
bnd
jge
adc
sub
or
cmp
cmp
je
cs
into
pop
and
js
sbb
pop
lret
cmp
mov
jge
dec
lret
push
cltd
movsb
test
fbstp
clc
out
pusha
push
cmp
int
jp
xor
cmpl
adc
lcall
cmp
pop
or
sarb
cmpsl
in
stc
dec
push
lea
inc
or
lret
inc
rorl
adc
adc
sbb
cwtl
jge
cmp
xchg
cmp
out
out
sub
sub
in
push
fmuls
pop
sub
dec
loope
add
std
inc
in
xor
push
jne
cmp
aam
lret
inc
daa
cmp
mov
inc
cmp
pushl
jg
or
push
shrb
add
aaa
cmp
or
loop
out
and
dec
cmp
or
xor
rcl
out
inc
jnp
iret
or
addr16
imul
stos
shlb
sbb
dec
fbstp
cmc
jae
inc
and
mov
movsl
and
pop
cmp
test
shll
int
pop
pushf
mov
mov
sahf
xor
jp
cmp
xchg
fs
pusha
inc
out
mov
fstpl
adc
out
sub
adc
into
dec
int3
xor
std
inc
cmc
mov
push
xor
add
xor
in
cli
cmpsb
dec
mov
pusha
add
adc
pop
repz
dec
iret
inc
jns
cmp
aaa
cmc
cmp
or
mov
out
dec
sbb
sbb
xchg
lcall
mov
cmp
jl
scas
push
in
push
cmp
fsubl
pusha
cmp
enter
xchg
cmp
cs
jp
jno
and
or
lahf
lret
push
add
inc
cld
mov
cmp
cmp
and
ds
ss
fistpll
test
rcr
aad
xor
pop
jns
push
loopne
push
sbb
lds
repz
xchg
sbb
adc
les
inc
jae
popf
and
clc
dec
out
mov
cs
cmp
dec
jp
mov
adc
daa
mov
call
jmp
into
or
popa
mov
sar
fldenv
mov
mov
ret
xchg
popa
stc
nop
cmp
push
aad
mov
mov
push
adc
cmp
dec
and
icebp
incb
and
push
mov
test
and
cmp
stos
dec
mov
enter
cmpsb
stos
cmp
dec
shrl
mov
cmp
iret
popa
cmp
insl
in
xor
in
cmp
popf
pushf
push
jae
ret
mov
aad
sbb
cmp
pop
call
or
dec
arpl
cmp
addr16
clc
fwait
rorl
push
mov
test
cmp
jp
arpl
inc
fidivrl
lret
ljmp
mov
dec
push
dec
cmp
pop
nop
push
out
mov
xchg
test
cwtl
cld
fidivrs
jbe
repnz
jge
lcall
and
xor
pop
push
adc
ljmp
mov
mov
ret
enter
adc
in
xchg
dec
aad
fdivs
add
dec
cmp
les
mov
pop
mov
mov
fstpt
pop
pop
lea
cmp
pop
test
pop
test
cmp
ljmp
shll
rolb
mov
cmp
sbb
call
cmp
sbb
pop
push
in
pop
cmp
jecxz
enter
cmp
or
xchg
sarb
and
stos
mov
gs
sbb
repnz
fsubs
scas
xor
test
das
lret
cltd
and
repnz
mov
inc
out
sub
ror
test
xor
xor
push
jno
dec
mov
sbbl
push
jmp
jbe
jne
cmpsl
out
mov
into
sbb
test
sub
mov
aaa
dec
mov
fmuls
pusha
bnd
adc
cmp
hlt
cltd
test
lea
rcll
sarb
push
lods
sbb
sbb
jbe
xor
pop
mov
std
cmp
scas
sbb
cmp
pusha
mov
ret
xchg
inc
lock
jae
add
jmp
cmp
fnstcw
stos
dec
sub
shl
xorl
fwait
push
cmp
lret
jae
inc
cmp
sub
push
cmp
test
stc
xor
mov
hlt
add
pop
mov
add
xor
cmp
testb
repz
ficompl
in
pop
fimuls
add
dec
outsl
pop
pop
sbb
dec
mov
scas
lcall
mov
jecxz
cmp
sbb
pmullw
cmp
enter
jbe
jge
mov
xchg
movsl
inc
std
out
hlt
mov
jno
cmp
push
aad
jg
mov
sbb
mov
cwtl
cmp
push
pop
lahf
push
xor
or
mov
cmp
frstor
sbb
test
lock
cltd
es
and
xchg
sub
rorb
stc
in
cwtl
add
xchg
vpmulhw
cmp
cltd
shr
mov
in
dec
xor
cmp
jecxz
rol
inc
insb
dec
jl
inc
cmp
lret
xor
cmp
push
and
sbb
mov
mov
fistl
push
mov
cmp
sub
pop
cmp
inc
out
cmp
xor
scas
cmp
andl
cmp
cld
sarl
xchg
fsts
cs
iret
add
orl
xor
pop
push
adc
cmp
andb
dec
aam
xor
mov
and
dec
pop
mov
add
cmpsl
inc
lahf
ret
sbb
inc
and
in
cmp
test
and
cmp
adc
and
sub
mov
or
mov
popa
scas
js
mov
hlt
cmp
pop
or
sub
cmp
xchg
sub
fiadds
addb
inc
dec
jo
mov
in
adc
into
fidivrl
mov
push
push
mov
jl
and
xchg
sub
incb
cmp
ja
cmp
in
shl
adc
aam
xor
mov
or
xor
dec
stc
jo
adc
dec
cmp
mov
cmp
sbb
in
inc
pop
xor
sbb
pop
mov
ja
xchg
pop
sbb
bound
std
xchg
pop
arpl
adcl
xlat
orl
xor
hlt
les
lods
stos
jne
movq
mov
xor
jno
mov
fs
out
in
imull
mov
xchg
push
popf
xchg
mov
fsts
icebp
add
cmp
cmpsb
push
cmp
scas
testb
test
pop
dec
sub
jmp
mov
jno
je
daa
pop
fs
inc
adc
into
xor
rcl
cmp
sti
sbb
popf
adc
dec
add
negl
xor
fldt
add
int
aad
rcll
adcl
maskmovq
notl
cltd
cs
stos
int3
or
xchg
dec
sub
push
scas
add
push
push
jne
es
cmp
pop
into
lret
cmp
cmp
dec
add
aas
repz
jo
hlt
lock
cmp
repnz
pushf
cmp
mov
sarb
shlb
out
inc
shrl
push
repz
test
jb
rolb
in
movsb
ja
fwait
data16
neg
negb
jmp
popf
xchg
or
int3
dec
sbb
inc
aad
les
adc
shrb
popa
and
cmp
rolb
js
sub
adc
jg
sub
repnz
pop
jo
add
sub
into
cmp
jb
ret
push
push
mov
pop
mov
inc
mov
cltd
test
in
mov
xor
cmp
sbb
popf
xor
outsl
xchg
or
lret
loop
and
adc
cmp
addr16
cmp
push
pop
lods
out
std
and
xor
int3
test
sbb
xor
xlat
sti
shr
push
xor
jl
pushf
fsts
jge
andl
pop
cmp
inc
test
push
push
lods
fs
lock
cmp
add
lret
adc
cmp
mov
daa
insl
pushf
push
xor
and
jbe
mov
ret
jo
stos
fidivs
sub
xchg
adc
cmp
adc
sbbb
xor
fldenv
cwtl
or
fistpl
mov
xchg
xor
jecxz
or
rcr
cmp
and
jmp
xor
add
jbe
pop
inc
scas
xchg
cmp
add
ja
imul
cmp
sub
pop
arpl
or
mov
adc
cmpl
stos
sub
movsl
or
cmp
insb
sbb
dec
mov
inc
cmp
and
jmp
mov
jmp
mov
rcl
loopne
je
xchg
shl
push
fdivl
cmp
cmp
movsb
popf
or
mov
xchg
in
cmp
or
and
or
cli
or
fdivr
xor
sbb
xor
mov
loope
daa
cmp
mov
sahf
cmp
xor
popa
add
out
sbb
cmpsl
sub
push
and
push
pop
jb
pusha
inc
cmp
xor
pop
lcall
xor
inc
leave
cmp
fcoms
or
cmp
or
inc
mov
outsl
shll
cmp
fdivrl
out
repnz
mov
dec
sahf
sbb
cmp
fdivs
push
fs
cmp
clc
sub
jno
jae
xor
dec
ds
xor
mov
mov
ja
mov
sbb
les
xchg
xchg
cmc
in
mov
sbb
insl
enter
pop
add
dec
test
cmp
cmp
dec
dec
push
adc
xchg
shlb
and
lcall
daa
rcll
xor
pop
cmc
stos
orb
dec
cmp
xchg
pop
mov
inc
dec
cmp
sbb
and
dec
inc
cmp
shl
fdivrs
mov
ss
xlat
pop
mov
cmp
cli
test
out
add
cwtl
add
pop
int
cmp
sub
mov
int3
xor
push
test
sahf
or
mov
inc
dec
addr16
cmpsb
cmp
rolb
ja
mov
gs
mov
dec
cmp
xor
icebp
test
xchg
jae
xchg
cmp
enter
or
jb
out
xor
push
dec
xorb
mov
mov
pop
adc
sub
scas
pusha
mov
push
dec
xchg
mov
fsts
movsl
xor
mov
mov
mov
cmp
addl
test
sub
pop
xchg
fildl
aam
cmp
mov
enter
push
lahf
arpl
hlt
add
jo
iret
mov
cmp
jmp
pop
testl
test
xor
sub
or
iret
or
push
sub
and
and
jns,pn
sbb
xor
pop
xchg
cmp
fcomip
sarb
jb
jne
mov
sub
add
fisubrl
test
mov
jo
jno
repnz
dec
jbe
mov
cmp
std
dec
cmp
scas
dec
xchg
sub
stos
je
and
add
mov
cmp
pop
out
js
idivl
les
xchg
jmp
mov
imul
sub
enter
xor
rorl
xor
fucomip
ja
mov
test
pushf
mov
cmpl
mov
or
xor
lea
clc
adc
push
cmp
sub
cmc
lahf
cmp
mov
cmp
lock
add
xchg
cmp
jg
jne
repnz
sub
xchg
ss
xchg
mov
leave
call
mov
or
adc
inc
mov
outsl
cmp
ss
sbb
lret
cmp
adc
xchg
sarl
outsb
std
jle
and
add
xchg
mov
jbe
jmp
push
insl
push
movsb
and
mov
out
cmp
popf
sub
inc
push
movl
cmp
sahf
adc
fisubrs
xchg
nop
push
mov
and
rcrb
sbb
call
xor
pop
jo
xor
mov
mov
inc
and
adc
and
insb
jge
sub
mov
ds
popf
rclb
sub
xchg
cmp
cmp
stc
cmpsl
rcll
sub
xor
out
cmp
aas
into
add
stos
push
mov
lret
adc
jl
aaa
bound
sub
sbb
xchg
cmp
shrl
jb
mov
add
cmpsb
cmp
sbb
movsb
and
insb
and
cmp
outsb
xchg
mov
adc
fnstsw
cmpsl
and
clc
or
int3
cmp
shlb
xchg
shlb
inc
rcrl
sbb
mov
arpl
push
and
cmp
clc
int3
dec
add
sub
jne
jnp
xorl
jae
and
pop
rcrb
jb
icebp
lea
pop
out
sub
mov
xchg
cld
sbb
mov
into
pop
sarl
add
jno
jne
popf
mov
in
sbb
sahf
cmp
fnstsw
cmp
sub
add
pop
ljmp
xlat
aad
loopew
or
cmp
dec
sti
push
adc
mov
fdivl
xor
mov
cmc
mov
cmpsb
add
inc
cmp
add
push
add
pop
xchg
cmp
clc
xchg
inc
push
xor
lret
hlt
lea
xor
test
callw
sub
pop
in
cmp
pushf
scas
lret
cmp
loope
test
int
cmp
out
js
movb
xor
fnstcw
mov
xor
ljmp
xor
lahf
jo
add
inc
stos
xor
fs
sub
shrb
imul
push
cmp
xor
insb
add
mov
pop
hlt
push
add
xor
orb
pop
push
out
je
jbe
leave
lds
cmp
xor
jmp
mov
cmp
cwtl
hlt
into
aaa
and
repnz
cmp
insl
sub
pop
mulb
xor
or
mov
add
aad
cltd
sbb
xchg
cmp
add
int3
inc
cmp
adc
cmp
sub
fldcw
jae
dec
cmp
shr
pand
movsl
enter
xorb
sub
push
mov
scas
mov
sub
ja
rolb
into
jo
cltd
iret
cmp
push
pusha
dec
jmp
leave
in
inc
and
xchg
fidivs
aas
and
dec
jb
sbb
xor
lahf
loopne
sbb
icebp
adc
lea
or
incb
fidivl
xor
cmp
cwtl
fdivs
inc
leave
mov
into
push
repz
scas
dec
or
push
adc
jne
pushf
sub
in
fsubs
jnp
mov
xor
outsl
inc
and
shl
ss
xor
icebp
add
cmp
out
adc
or
fistpll
cmp
pushf
add
adc
aaa
sub
jl
push
push
and
sbb
out
rcrl
cmp
scas
fdivl
cmp
inc
ret
rcl
adc
and
decl
inc
lds
and
out
mul
or
jb
push
fcomp
jbe
mov
insb
aas
push
push
push
adc
cmp
outsb
xchg
pop
or
xor
cmp
lret
cmp
cmp
mov
addr16
adc
insl
imul
scas
and
fwait
jno
mov
incb
aam
inc
mov
aam
imul
inc
add
loop
lret
mov
xchg
push
ss
cmp
insl
sub
sub
pop
aaa
nop
mov
mov
ljmp
push
imul
jb
jo
xchg
lahf
hlt
sub
jle
pop
mov
and
cmp
repz
pusha
jb
pushf
pop
xor
rolb
push
push
lods
or
inc
cmp
mov
in
adc
sub
mov
in
test
orl
cmp
cld
sbb
int
jne
sarb
mov
sbb
cmp
jno
aam
iret
cld
cmp
dec
dec
sarb
scas
mov
aas
add
sub
xchg
test
fidivl
jmp
pushf
xor
int3
cmp
mov
dec
aaa
sahf
push
push
scas
cmp
sbb
fdivrs
mov
js
lret
sbb
adc
mov
leave
sbb
and
jg
mov
or
test
lock
int
arpl
fisubrs
cmp
or
lret
or
pop
sbb
lahf
call
xchg
xor
aaa
mov
add
jmp
inc
cmp
in
les
xor
in
test
loop
fbstp
jb
bound
popa
cmpsl
and
lret
jb
jne
jmp
ss
jo
fidivs
push
mov
aaa
mov
xor
pop
or
add
jb
push
jg
rorb
and
push
ret
outsb
cmp
cmp
xor
adc
fildl
and
xor
jle
gs
fdivrs
in
mov
lock
int3
dec
cmp
pop
and
inc
mov
enter
pop
xor
push
sbb
popa
xor
ds
jge
mov
and
gs
std
pop
jae
and
mov
cwtl
jge
and
jae
movsb
rcrb
pop
push
movsl
stos
xor
jp
push
cmp
popa
or
dec
cmp
xchg
mov
lea
repz
xlat
xchg
cmpsb
push
bound
call
sbb
xor
xor
inc
mov
clc
push
call
sub
adc
sbb
jbe
mov
bound
shlb
fcmovu
xchg
je
sub
and
ss
inc
cmp
sub
repz
mov
lea
or
shrl
fwait
mov
pusha
cmp
fisttps
add
mov
cmp
dec
call
fdivrs
insb
scas
pop
cmp
inc
push
cmp
push
cld
xor
shlb
inc
adc
dec
push
add
out
inc
lods
mov
push
mov
cmp
pop
test
insb
or
or
xor
lods
out
addr16
cmp
sbb
fildl
into
pusha
cmp
lea
cmp
pushf
jo
xor
pop
push
and
jnp
sbb
xchg
mov
push
pop
inc
dec
nop
mov
xchg
arpl
cltd
scas
lret
cmp
jns
sub
fnstsw
ss
data16
lds
leave
jne
dec
push
xchg
shll
xor
cmp
cmp
enter
ss
arpl
sahf
add
cmp
xor
xor
testb
sub
push
or
lock
pop
addl
cmp
inc
sbb
ja
sub
mov
pop
cs
sub
das
sub
shrl
inc
jb
mov
je
push
cmp
scas
inc
sbb
push
add
imul
add
cmc
cmp
and
sbb
imul
rorb
xor
jg
pop
cmp
mov
sub
and
enter
pop
and
popa
lods
or
jns
cmpsb
outsl
xor
sub
mov
lret
cmp
mov
cmp
fs
or
test
std
and
xchg
xor
sbb
xor
mov
ret
push
or
dec
xor
mov
add
mov
jne
adc
jae
popa
push
out
add
and
loop
mov
into
jp
int3
rcll
sub
cmp
ret
aaa
scas
in
cmp
imul
arpl
iret
shrl
pop
dec
aas
rclb
ret
xor
pushf
xor
mov
cmp
pop
ror
xchg
scas
fnstcw
aam
mov
pop
es
enter
not
cs
in
ret
adc
cmp
fsts
adcl
xor
fdivrl
nop
test
jae
push
js
mov
fnstcw
dec
xlat
cmp
enter
movsl
xchg
mov
sub
xchg
fnsave
fisttps
pop
aam
mov
pushf
insl
inc
out
mov
mov
ffree
fistpl
sub
adc
cmp
call
pop
xor
add
pop
cmp
cmpsb
push
test
pop
adc
or
int
cmp
addl
cwtl
and
cmp
pop
xchg
inc
fs
movsb
fcomps
lock
mov
push
cmp
cltd
sti
mov
push
jns
movsl
mov
xor
popa
nop
push
cmp
shlb
mov
and
xchg
cmp
cmc
sbb
rcrb
cmp
imul
lods
imul
mov
cmp
insb
sbb
inc
adc
dec
jne
add
cmp
cmp
mov
mov
cmp
mov
or
loop
imul
ss
fmull
lea
clc
popa
lock
insl
mov
sarb
fiadds
outsl
scas
push
ss
sub
bound
mov
repnz
lock
fst
sub
in
jne
xor
xor
addl
jge
jo
and
cmp
push
add
xor
push
mov
cmc
je
xchg
push
mov
loop
cs
sbb
repz
add
cmp
das
cmpsb
popa
push
add
shl
sbb
fnstenv
jmp
xor
mov
pop
jl
fdivr
cmp
dec
fstl
cmp
inc
lret
xchg
out
sbb
xor
data16
pop
sub
aas
cmp
mov
xchg
dec
fdivl
inc
ficomps
sti
or
enter
ss
pop
repnz
sahf
sub
out
aas
cmp
enter
sarb
cs
mov
dec
xor
jbe
cwtl
addb
mov
jp
fsts
push
xor
lret
les
mov
pop
xchg
loope
pop
xchg
pushf
fs
hlt
adc
jg
cmpl
push
lods
cmp
mov
into
inc
pop
gs
push
cmp
int3
lea
cwtl
dec
mov
lods
pop
push
mov
enter
dec
inc
jnp
or
sub
push
push
add
mov
xor
aam
cmpsl
or
jnp
xor
xchg
cmp
loopne
and
push
pusha
jne
pop
xchg
fnstsw
repnz
imul
dec
and
movl
insb
cmp
call
pop
jo
and
cmp
inc
xchg
mov
das
pop
cmp
xor
shrb
push
cmp
outsb
mov
out
sbb
pop
push
mov
outsl
gs
call
sarl
xchg
out
adc
sub
or
int
aas
jecxz
cmp
cmp
fnstenv
sub
add
call
cld
mov
mov
inc
icebp
mov
xor
iret
int
sub
loopne
out
cmp
jl
lods
pushf
int3
push
mov
mov
jbe
cmp
mov
stos
into
sub
mov
sahf
push
sarl
xor
scas
call
cmp
push
gs
test
imul
addb
mov
sbb
dec
jp
pop
sarb
adc
xor
fists
ret
push
cmp
cmpsl
popa
inc
inc
lret
mov
lods
sbb
inc
nop
lahf
cmp
push
pop
push
jle
add
lea
shlb
push
dec
daa
fdivrs
add
test
rcrl
mov
xor
adc
and
cli
mov
lcall
inc
and
repz
arpl
addl
adc
ret
dec
adc
pop
jbe
xor
adc
aam
mov
jle
cwtl
jo
pop
and
cmp
cmp
clc
sub
rolb
pop
xor
lret
daa
push
ss
xchg
jp
xor
add
pop
adc
out
jmp
push
xor
mov
mov
and
xor
bound
jb
loopne
mov
pusha
pop
lods
cmpsb
lret
dec
enter
cmp
mov
mov
and
pop
inc
add
lret
sbb
xor
lods
cmp
sarb
movsb
cmp
cmp
xor
inc
les
insl
lret
sarb
and
xlat
mov
sbbl
mov
pushf
mov
call
dec
dec
ljmp
pop
les
ror
adc
xor
pop
mov
lock
push
mull
icebp
iret
jo
xor
xor
shlb
xchg
shlb
mov
mov
lods
lcall
popa
daa
mov
sbb
push
fs
fmul
pushf
cmp
in
addr16
insb
lret
fucomp
jae
clc
call
dec
outsl
pop
out
stc
pusha
xchg
cmp
hlt
push
lret
lds
xor
push
push
into
cmpsl
cmp
dec
jo
pusha
sarb
and
andl
loop
adc
mov
inc
dec
adc
clc
xor
aas
cmp
pop
sbb
jl
mov
adc
into
push
aad
insl
fwait
addr16
push
inc
sbb
xchg
repz
dec
cmp
stc
xor
mov
out
add
adcb
jg
jecxz
cmc
xlat
xor
ss
adc
outsb
xchg
rclb
push
cltd
ljmp
xor
hlt
xchg
je
pop
nop
xor
mov
mov
jmp
cmp
mov
sbb
cmp
testl
pusha
xor
and
mov
add
sti
cwtl
cs
adc
imul
pop
inc
push
fstl
jb
insl
jp
pop
adc
inc
cs
xchg
cmp
mov
call
jbe
adc
or
jno
pop
mov
out
adc
fsts
push
inc
xor
icebp
notl
es
les
inc
fucomi
sub
pop
hlt
pushl
and
mov
xor
stos
push
and
sbb
into
sti
enter
push
shlb
loopne
xchg
popa
aam
xchg
inc
lods
int
es
arpl
inc
or
push
shl
adc
aaa
test
pop
testb
sahf
jne
push
enter
mov
scas
mov
aaa
jno
stc
test
pusha
in
js
mov
cmp
rorl
and
sbb
sub
stos
and
mov
into
and
push
cmc
data16
mov
mov
cmp
dec
imul
xchg
xor
out
inc
lods
es
xor
fwait
repnz
inc
xor
aaa
xlat
cld
clc
das
sti
roll
add
leave
cmp
ret
stc
lret
mov
dec
insl
dec
ret
cmp
sahf
push
call
cmp
push
aas
jno
and
aam
clc
mov
xor
data16
jbe
mov
insb
mov
add
push
shlb
popf
into
fstpt
cltd
and
cmp
sbb
test
pusha
mov
aaa
jmp
pop
sub
dec
inc
jno
leave
ss
clc
push
mov
repnz
cmp
push
mov
pusha
lcall
xor
test
shlb
inc
add
outsb
ss
das
repnz
cmpsl
out
insb
cmp
adc
xchg
sbb
sub
xchg
xor
aaa
dec
xor
push
sub
hlt
push
add
int3
sti
sub
cmp
add
daa
stos
cmp
fbstp
scas
fisubs
call
sub
aaa
mov
push
pushf
movsb
jb
cli
es
xchg
cmp
repnz
adc
cmp
lock
aaa
cmp
push
into
mov
dec
dec
inc
les
cmp
adc
inc
mov
lods
in
adc
cmp
ds
pop
cmp
movsb
xor
repnz
test
lods
lret
out
cmp
xor
shlb
inc
mov
or
push
aaa
out
mov
cmp
lret
inc
inc
sbb
xor
and
cmp
in
dec
xor
stc
fldt
push
jb
cmpsl
ret
xchg
mov
add
in
mov
jmp
stc
mov
inc
repnz
js
out
jp
cmp
push
xor
imul
sub
mov
jo
cmp
mov
and
push
int3
push
and
cmp
lods
push
lret
sub
mov
adc
add
sbb
sub
xchg
outsb
mov
pusha
insb
cmp
add
mov
xor
sbb
fdivr
loopne
rcr
cmp
sub
or
xor
xchg
cmp
xchg
rolb
popa
xor
add
xor
xor
dec
and
cld
xor
testb
cmp
xorl
lret
cmp
idiv
scas
adc
ds
sahf
inc
mov
and
push
mov
in
enter
out
scas
cmp
mov
filds
rcrb
cmp
pop
test
xor
arpl
lahf
mov
lret
push
jo
or
int3
gs
xor
push
or
cmp
notl
stc
sbb
fs
mov
xchg
jno
mov
imulb
mov
shll
imul
push
xor
aam
cmp
outsl
inc
xor
into
sbb
cwtl
insl
mov
lahf
lea
addw
push
ss
int3
lds
push
sub
testl
cld
jno
cltd
dec
xchg
xchg
jl
jne
cmp
loopne
inc
xor
cmpb
std
cmp
aas
mov
js
fldl
cmp
add
adc
cmp
xlat
pop
stc
dec
mov
cmp
in
mov
outsl
xchg
xchg
rorl
cmp
adc
push
sub
sub
pop
xor
roll
je
hlt
fadds
mov
mov
inc
and
movsl
dec
adc
cmp
popf
jo
clc
mov
aad
fmuls
es
dec
add
cmp
icebp
cwtl
mov
jecxz
sbb
rcl
out
xor
cmp
hlt
pop
scas
mov
xor
andb
mov
call
mov
add
push
xor
jbe
dec
push
lret
xor
fistps
or
loope
xchg
jo
mov
pop
pop
int
js
xchg
xchg
pop
int3
lcall
sub
push
xor
cmpl
xor
cmc
inc
imul
add
arpl
cmp
push
cmp
movsl
lea
into
rcrl
out
xor
addr16
jo
sub
arpl
cmp
sub
push
xor
call
cmp
add
rclb
push
mov
sarl
lods
cmp
je
cmpsl
inc
cmp
les
add
mov
push
sub
adcl
mov
call
xchg
bound
fdivl
sbb
mov
outsl
test
mov
andl
xor
xchg
out
mov
lods
cmp
icebp
cmp
mov
sarb
test
addr16
cmp
cli
sub
or
hlt
loope
lds
call
mov
fdivs
dec
into
mov
cmp
ja
js
mov
cmp
mov
shlb
mov
xor
jg
repnz
sub
ja
ds
data16
shlb
pop
push
jp
mov
cmp
test
sti
idivl
andl
icebp
adc
cmp
leave
lods
data16
cmp
pop
pop
popf
repnz
mov
in
pop
fbstp
push
into
dec
test
repz
cmp
inc
xor
cmp
mov
adc
cmp
fprem
mov
ret
rcr
in
in
and
cmp
or
scas
push
dec
lods
shrb
repnz
sub
lds
daa
stos
adc
sarb
add
ficoms
cmp
dec
shlb
rcl
sub
pop
adc
aad
mov
add
imul
les
out
sub
stc
and
call
push
xor
in
push
push
movsl
push
sub
sbb
fisubrl
outsb
clc
ret
jb
pop
dec
mov
rol
cmp
fwait
adc
cmp
or
rcll
dec
push
inc
mov
cld
mov
mov
cmp
addr16
sbb
mov
or
mov
fnstsw
pop
movsb
cmp
add
jbe
xor
xor
rcl
sub
cmp
jo
mov
inc
fisttpl
aaa
ljmp
ljmp
cmp
mov
pop
lret
cmp
out
out
dec
lahf
dec
sbb
inc
into
xlat
outsl
cmp
fs
fsubr
insl
jno
cmp
int3
roll
cmp
push
mov
icebp
cld
mov
xchg
ds
cmp
or
insb
push
cmp
cmp
push
es
sbb
adc
sub
or
lcall
jl
roll
ror
push
adc
mov
dec
ja
dec
addl
mov
cmp
jmp
stos
lcall
xor
stos
jnp
cmc
cmp
ds
bound
sub
push
into
mov
add
jmp
xor
int
testb
or
ljmp
je
sahf
emms
mov
and
subb
cmp
repnz
fidivl
and
rorb
cmp
xchg
xor
jmp
sub
mov
adc
xorl
cmp
or
int3
cmp
push
loope
cmp
pop
rep
jp
addb
aas
ds
mov
pop
cmp
loop
or
mov
js
pop
out
dec
cmp
test
and
add
dec
arpl
cmp
adc
dec
hlt
daa
adc
or
push
jp
sub
and
loope
inc
out
pop
cmp
xchg
rolb
int3
imul
cmp
adc
je
flds
sbb
in
nop
and
xlat
add
sbb
xor
lods
fcmove
add
sbb
movsb
cwtl
cmp
je
jecxz
sbb
cmp
inc
cmpsb
into
xor
lds
pusha
push
call
push
test
shrb
mov
cmp
in
das
fdivs
cwtl
mov
cmp
out
xchg
shlb
hlt
add
xchg
rclb
addr16
cmp
xor
in
jmp
cmp
push
and
push
mov
adc
jbe
cmp
mov
xor
fwait
mov
add
and
jb
dec
jmp
xorb
addr16
cmc
insb
mov
test
into
inc
mov
sub
shll
jl
cmp
push
jbe
int3
notb
cmp
mov
hlt
mov
adc
xor
xor
das
out
jecxz
stos
mov
inc
jb
pop
dec
cmp
enter
ss
xchg
and
lods
fldenv
push
adc
xchg
out
pushl
mov
scas
mov
repnz
dec
dec
in
cld
cs
sarb
in
ss
mov
pop
mov
jmp
jb
imul
sbb
mov
xchg
popa
fdivrs
dec
lods
cltd
jecxz
dec
lret
adc
dec
daa
pop
sub
insb
push
push
xchg
push
cld
cmp
xchg
cmpsl
dec
adc
test
add
xor
out
stos
xor
cmp
fsubr
loopne
sub
stc
dec
shl
push
test
cmp
pop
cmc
ret
xor
lahf
push
jmp
in
cmp
xor
adc
xor
outsb
and
mov
cmp
fiaddl
mov
pusha
xor
mov
out
dec
mov
jmp
or
shll
pop
fisubl
out
test
out
push
mov
aad
adcb
nop
ss
sbb
sbb
and
cmp
shll
cmp
xchg
je
dec
cwtl
in
cwtl
sub
or
sub
jbe
and
dec
mov
and
or
aad
xor
mov
popf
dec
enter
ss
je
lret
sbb
fdivrs
cwtl
mov
not
add
adc
dec
pusha
mov
cmp
sbb
xor
ljmp
add
aaa
jmp
cwtl
cmp
hlt
cmp
cmp
lds
mov
cmp
fldz
sarb
int3
pop
xor
push
cmp
out
xchg
cmp
out
in
cmp
out
std
loopne
inc
push
pop
cmp
iret
inc
mov
fidivs
xlat
mov
bnd
mov
mov
aad
push
mov
jmp
pusha
repz
cmp
or
adc
repnz
into
pop
jo
sarb
lds
xor
cmp
mov
add
dec
je
mov
enter
adc
cmp
ljmp
mov
loopne
les
mov
bndstx
aaa
cmp
or
je
xor
mov
ss
mov
sub
or
push
sub
notb
stc
jo
adc
std
mov
xchg
push
cmp
jns
dec
iret
lds
jecxz
adc
inc
lahf
or
insl
es
fs
popf
ja
stc
cmp
xor
cmp
dec
test
adc
pop
cmpb
imulb
mov
enter
dec
pop
adc
jns
test
sbb
in
jl
cmp
test
push
cmc
push
sub
mov
and
cmp
or
jno
add
fcoml
nop
sub
xor
lahf
test
cli
mov
or
cmp
insl
fs
enter
testl
adc
mov
mov
int
rolb
dec
cld
mov
cmp
push
popf
xor
xchg
aaa
lret
cmp
pop
push
fldenv
stc
sbb
into
mov
ja
cmp
fistl
ljmp
mov
add
rclb
leave
nop
icebp
jns
pop
fdivr
cmp
shlb
xchg
xor
xlat
ret
dec
jae
rcrl
xchg
jnp
sbbl
mov
dec
lock
xor
lods
sub
rorl
lahf
ss
std
push
cmp
call
mov
insl
inc
mov
mov
fnstsw
ja
mov
lahf
lea
idivb
test
mov
enter
adc
push
cmp
fstps
cmpsb
stc
mov
stos
orb
jmp
push
ror
cmp
dec
test
outsl
jp
jne
xor
and
inc
cwtl
jl
cmc
mov
xor
dec
mov
inc
and
cmp
and
xor
fs
or
cltd
cmp
lcall
sbb
and
out
mov
adc
xor
mov
pusha
pop
adc
push
subl
sub
cmc
and
cmp
mov
dec
loope
sbb
test
repz
push
mov
mov
into
inc
xorb
inc
sub
stos
mov
push
xchg
in
pop
cmp
xchg
cmp
dec
fadds
out
mov
scas
cmp
adc
mov
mov
repnz
out
cmp
aaa
inc
dec
into
fwait
dec
rorl
ljmp
in
push
cmp
int
dec
adc
nop
cmp
lods
aaa
add
sub
sbb
cmp
shrb
mov
lret
movsl
sub
or
pop
jle
cmp
std
or
jo
mov
popa
sub
aaa
lds
mov
adc
dec
pop
testl
enter
cmp
ror
sarl
xchg
cmpsb
dec
pop
cmp
imul
popf
push
pop
scas
mov
xor
add
iret
movl
fwait
out
insl
sub
sahf
cmp
sbbb
cmp
in
pop
dec
dec
fists
jo
xor
clc
pop
loopne
repz
add
adc
jb
imul
xchg
loopne
aad
ss
hlt
inc
call
add
inc
cmp
pop
rcrb
mov
mov
xor
inc
cmp
fdivs
shll
aam
adc
cmp
add
xchg
sub
add
std
ficomps
xor
jg
jae
imul
adc
cmc
loop
sub
repz
je
enter
frstor
cli
sbb
sub
cmp
outsl
mov
out
add
dec
and
cmp
stos
pop
out
dec
int3
jecxz
pop
mov
jo
pop
movsl
cs
push
lds
nop
repz
repnz
int3
dec
subl
jno
dec
enter
stc
cmp
shrb
ljmp
lds
cwtl
les
cmp
pop
ljmp
daa
call
invd
dec
lret
mov
int3
xchg
dec
std
xchg
xchg
cmp
rcrb
popa
push
scas
xor
mov
divl
fldenv
xor
mov
inc
mov
cs
pop
enter
test
cmp
es
xor
pushf
dec
divb
fnstsw
std
adc
xor
add
mov
dec
iret
test
xchg
jnp
ljmp
mov
or
int3
fcomps
mov
mov
pusha
jb
in
int3
jo
ret
and
adc
test
inc
in
inc
add
clc
imul
cmp
dec
mov
cmp
add
enter
cmp
mov
std
jge
inc
icebp
cmp
cwtl
ja
jns
mov
jmp
js
mov
icebp
outsb
xchg
xchg
xor
sti
mov
sub
pop
cmp
in
pop
call
out
iret
xchg
fbstp
dec
mov
or
lret
mov
inc
ret
jo
cmp
cmp
pusha
cltd
sbb
insb
subb
dec
dec
xor
or
pop
std
pop
loopne
lds
cmp
xlat
jnp
mov
sub
mov
shlb
rorl
in
cmp
cld
or
xchg
push
cmp
push
jnp
ljmp
leave
shlb
push
xor
pusha
jo
shr
insb
dec
mov
pop
mov
inc
pop
cmp
loope
lock
push
sub
imul
xchg
mov
iret
call
pop
xor
imul
push
fldcw
stos
arpl
push
out
cmp
rclb
sub
mov
xor
jns
mov
loop
pop
iret
mov
and
jp
lds
shlb
jle
es
jge
xchg
enter
ss
test
les
xor
pusha
mov
mov
sbb
cmp
int3
pop
aaa
xchg
cmp
fbstp
fcmovb
or
or
aas
xchg
jbe
xchg
int3
push
sub
push
mov
addr16
add
mov
les
dec
and
and
shlb
adc
mov
dec
test
mov
jg
in
inc
cmp
or
fiaddl
dec
cmp
cmp
andl
ficomps
sbb
pusha
jo
mov
sbb
pushl
loope
cmp
sbbl
adc
fwait
jb
xchg
leave
adc
imul
xor
cmp
push
insb
pop
sub
rorb
leave
lret
mov
pop
fnstsw
ss
js
cmp
sarb
adc
sbb
cmp
cmc
push
and
lds
jno
mov
sub
xor
mov
cld
mov
jns
xor
xchg
into
nop
cmp
cmp
aas
fsubl
pop
loopne
mov
add
xor
sub
gs
daa
mov
jo
repnz
xor
xchg
hlt
fnstsw
mov
inc
imul
mov
or
aaa
and
cmp
mov
xchg
cmp
int3
push
divb
imul
cltd
roll
mov
mov
jmp
and
hlt
pop
mov
jae
xorl
andb
dec
aad
fsubl
ss
mov
push
add
ds
mov
scas
enter
cmp
sbb
cwtl
cmp
xor
clc
pop
lods
add
sbb
xchg
ss
ret
inc
and
xchg
loop
or
xor
int3
stos
mov
pop
add
sbb
std
jbe
test
out
fwait
mov
out
cmp
cli
orl
cmp
shlb
andl
in
pop
cmp
dec
in
adc
jo
hlt
push
cltd
xor
jns
aaa
jae
cmp
lahf
cld
inc
shrl
pop
inc
cmp
jnp
jae
or
push
cmp
aam
mov
stos
movsl
adc
mov
cwtl
xor
iret
repz
inc
es
inc
fimuls
cmp
jmp
jbe
fstpt
or
fbld
mov
lds
mov
cmp
push
add
xchg
xor
arpl
movsb
push
lods
cmc
xor
mov
mov
lahf
adc
xchg
ret
cmp
cmp
jp
ljmp
xor
dec
mov
lret
mov
sarl
lds
pop
cmp
pop
push
sub
jnp
dec
cmp
testl
sbb
stos
inc
movsb
loope
sub
in
sbb
cmp
pop
cmp
cmp
test
loope
mov
xchg
int3
push
fidivl
idivb
cmp
movsb
pop
cmp
and
mov
pop
mov
or
and
dec
cmp
or
stos
cmp
cmc
cmp
out
xchg
mov
cmp
xchg
mov
inc
inc
int3
push
cmp
mov
xor
pop
inc
dec
jo
mov
jns
fnstenv
xor
push
jecxz
pop
xor
and
les
fisttpll
loopne
mov
je
pop
mov
mov
jns
mov
xor
sub
or
xchg
mov
xor
push
ss
das
jecxz
shl
and
cli
pop
daa
and
gs
cltd
adc
xor
out
jmp
nop
push
xchg
pop
xor
test
mov
leave
movsl
push
mov
xor
lock
or
scas
xchg
xor
fs
fists
fldcw
adc
sbb
xor
pop
out
cmp
mov
mov
popf
hlt
inc
fiaddl
insb
cmp
mov
js
lret
mov
sbb
fstpt
outsb
addr16
test
adc
mov
add
insl
mov
cmp
dec
dec
xchg
cmp
test
pusha
cmp
hlt
loope
shlb
mov
ds
jg
xchg
push
aaa
shll
dec
pop
outsb
jl
push
cmp
les
add
or
xchg
cmp
jp
mov
dec
add
repz
push
sbb
out
loop
sub
mov
or
adc
stos
or
loopne
into
ret
add
stc
enter
pop
cmp
and
adc
std
sub
sub
imul
xor
sbb
dec
cmp
pop
jne
add
mov
fsubrs
cmp
rorb
mov
notl
cmp
xchg
jmp
mov
push
and
adc
aam
cmp
movsl
add
push
adcl
inc
dec
add
mov
mov
ret
hlt
jno
icebp
addb
mov
cmp
leave
mov
nop
popf
sbb
or
push
jbe
adc
cmpsb
mov
mov
cmp
or
push
cmp
or
in
aas
mov
dec
mov
jg
lods
adc
fimuls
lret
push
lds
sub
mov
int3
neg
mov
mov
xorb
push
dec
rolb
mov
adc
pop
test
cmp
mov
pop
or
ja
clc
xchg
add
mov
jae
mov
movsb
jmp
shlb
insb
ror
sahf
int
shlb
sbb
or
loopne
mov
rolb
into
mov
cmp
cmp
xchg
aad
jge
mov
pop
xor
push
filds
add
fcomp
cmp
xor
mov
or
jns,pt
push
shlb
sub
xor
ror
inc
fwait
push
mov
fstpt
mov
testb
leave
sbb
hlt
sub
ret
int3
clc
sbb
jae
add
xor
gs
cmp
jb
in
cmp
inc
cmp
imul
cmp
mov
xchg
inc
adc
mov
movb
inc
cmp
mov
inc
push
pushf
mov
jecxz
mull
sub
aaa
or
fs
mov
aam
lret
shlb
aas
dec
dec
sahf
cmp
rorb
push
pop
push
xchg
mov
cmp
pop
shrl
or
fdivs
sbb
cmp
scas
mov
cmp
xor
push
jne
dec
pop
jmp
int3
push
fmull
popf
and
push
dec
jnp,pn
push
adc
pop
cmp
lret
mov
enter
pop
fisttps
movlps
sbb
mov
cmp
adc
and
cmc
sub
imul
cmp
jb
sbb
sub
scas
mov
add
pop
push
sarb
add
fdivl
loopne
sbb
jns
inc
mov
bound
jae
and
cmp
sahf
scas
adc
pop
add
mov
sub
imul
or
mov
sbb
mov
sub
sub
shlb
mov
icebp
mov
xchg
loopne
sbb
adc
test
in
leave
sub
sub
test
stc
push
cmp
ret
pop
enter
inc
and
cmp
int
fldl
xor
shrb
push
cltd
sti
and
jb
js
dec
repnz
test
push
xchg
adc
mov
std
andb
cmp
bound
stos
imul
mov
jmp
sbb
test
out
cmp
add
fistl
out
add
shll
cmp
inc
push
insb
es
test
hlt
mov
cs
outsl
cmp
mov
adc
js
xchg
and
cmp
dec
jle
cmp
outsb
or
stc
adc
xor
dec
xorps
fnstenv
cmp
mov
roll
jne
cmp
xchg
insb
pop
dec
loop
mov
filds
loopne
xchg
push
cmp
sub
dec
inc
cmp
into
mov
es
int3
xchg
sub
inc
mov
pop
frndint
ja
and
je
xor
mov
cmpsb
in
fnstsw
out
out
inc
lret
cmp
or
js
iret
cmp
xlat
mov
sub
mov
ljmp
add
pop
xchg
sub
mov
aas
sti
loopne
je
cmp
lret
add
jmp
xor
inc
sub
mov
sub
aad
pop
xor
adc
xor
scas
mov
cmpsl
or
movsl
and
into
dec
pop
cmpsb
pop
xor
shrb
lods
pop
push
jge
adc
pop
out
cmp
mov
or
shrl
outsb
mov
adc
mov
jle
xchg
lea
xor
fadds
add
mov
imul
in
dec
filds
cmp
pusha
cmp
mov
and
int
inc
jecxz
mov
fwait
xor
mov
fucom
imul
cmp
sbb
inc
and
cmp
and
push
leave
sub
inc
cmp
push
loope
test
pusha
scas
lret
xchg
cltd
mov
jne
cmp
xor
out
aas
adc
in
mov
inc
xor
mov
or
dec
test
or
cmp
cs
xchg
sbb
mov
sub
mov
out
push
jb
into
scas
mov
ret
popa
jns
mov
std
ljmp
mov
cmp
lock
sbbb
xor
lahf
dec
test
push
inc
cmp
sbb
cli
cmp
int
mov
loopne
cmp
lods
lret
clc
xor
roll
jle
jnp
int3
xor
cmp
das
loopne
or
sub
mov
fbstp
cmp
dec
cwtl
stc
leave
mov
fnstcw
repnz
adc
dec
lea
xchg
data16
push
adc
sbbb
adc
adcl
out
call
mov
test
gs
test
mov
cmp
sbb
test
mov
lds
jnp
pop
nop
in
cmp
mov
lea
repz
mov
jg
cmp
mov
gs
mov
popa
movsl
or
and
aam
add
cmp
jle
xchg
clc
inc
adc
cmp
sub
call
cmp
push
push
and
insl
lret
mov
mov
jno
test
frstor
mov
dec
sub
lds
cmp
and
stc
aam
xor
jge
enter
lret
int
pop
pop
sbb
jb
adc
movsl
push
icebp
and
dec
mov
xor
adc
loop
xor
dec
ja
arpl
enter
and
mov
cmc
xor
mov
push
or
xor
sub
mov
sbb
mov
jo
add
imul
addr16
lock
movsl
outsb
sbb
xchg
cmp
push
pop
cmp
ficomps
inc
sub
xor
into
add
pop
push
cmp
xor
dec
cmpsl
enter
sahf
and
dec
push
xor
fistps
cmp
sub
xchg
popf
mov
outsl
aaa
lods
clc
sub
dec
ficoml
test
lods
pop
mov
out
push
and
imul
inc
lds
sub
scas
pop
push
jnp
xor
out
and
stos
daa
stc
pop
jp
mov
clc
insl
rcrb
inc
repnz
lea
cmp
ret
xor
mov
add
sarl
jge
cmp
jmp
testb
push
or
les
stc
aaa
movsl
cmp
cmp
push
cmp
pop
popa
insb
or
cmc
in
inc
sbb
cmp
mov
into
aam
xorb
mov
test
cmp
jmp
out
movsb
lret
sbb
out
rolb
xor
lds
adc
in
adc
xor
imulb
pusha
fsubr
jge
cmp
shlb
lock
push
and
je
cmp
inc
nop
test
xor
cmp
or
fs
mov
xor
sbb
xor
xchg
out
add
push
es
int3
xor
jne
stos
sbb
mov
jmp
movsl
dec
lods
cmp
lds
bound
add
and
fwait
fwait
andl
push
bound
cld
aaa
inc
sub
xlat
cmp
lret
or
mov
int3
stc
jnp
push
nop
mov
or
xchg
xor
nop
inc
adc
mov
popf
cmp
jb
cmp
mov
mov
xor
push
add
cmp
cmp
xchg
call
stos
push
lea
fdivrl
sar
lds
mov
inc
xor
push
lret
les
mov
sub
inc
fnstsw
xchg
adc
xchg
cmp
adc
lret
sub
cmp
pushf
lea
jecxz
mov
cmp
lds
jbe
mov
xor
aaa
pop
out
inc
cmp
fidivrl
ret
mov
lods
add
sub
arpl
mov
or
or
xchg
pushf
stos
fld
int
enter
jle
cmp
cmp
push
clc
sbb
cmpsl
cmp
mov
jo
cmc
cmp
xor
into
aad
cmp
xor
es
aam
stos
mov
jnp
pop
and
jge
call
jbe
sbb
xchg
xor
fcoms
adc
cli
add
sub
xor
xchg
or
jne
push
mov
cmp
push
addr16
loopne
inc
out
mov
push
lret
cmp
nop
adc
cmp
ja
pop
scas
jnp
cmp
cmp
sub
and
dec
fsubs
push
jecxz
out
mov
aam
mov
scas
bound
imul
cmp
iret
lods
adc
adc
inc
add
sbb
sbb
lret
aaa
inc
pop
mov
sub
faddl
fwait
mov
cmp
outsl
cmc
mov
inc
dec
xor
outsb
sub
sub
and
dec
cmp
cmp
outsb
test
cmp
cmp
mov
mov
lret
insb
mov
cmp
rcrb
insl
adc
je
pop
sbb
or
lock
mov
mov
cmp
daa
or
icebp
cmp
xchg
cmp
mov
xchg
test
xlat
push
mov
idivb
sarl
and
dec
fisttpl
adc
sub
sarb
pushf
add
mov
movsb
jo
xchg
cs
xor
xchg
shrl
enter
ss
jl
dec
fsts
je
fldl
xor
adc
rcll
jmp
fsub
les
je
push
cmp
jne
add
cmp
daa
scas
inc
mov
cmpsl
shrb
mov
xor
or
pop
or
leave
xor
lods
jns
jg
testl
in
test
cmp
test
cmp
das
cmp
adc
loope
pop
cmpsl
enter
ss
ret
ja
and
mov
jne
clc
xor
cmp
test
xor
lret
cmp
cmp
or
lock
cmp
jecxz
inc
xor
bound
movb
stc
aas
jno
jp
push
mul
mov
inc
cmp
mov
xchg
pop
jo
push
xor
out
push
int3
cmp
xchg
xorl
cmp
sbb
ss
dec
out
push
sbb
into
inc
mov
and
or
data16
mov
cmc
mov
sub
pop
cmp
inc
inc
and
push
int3
xor
sub
dec
mov
rcl
dec
cmpb
dec
cs
roll
daa
aas
adcb
cmp
lcall
push
jl
lret
lret
popf
push
xchg
mov
cmp
mov
xor
andb
iret
pop
adc
xchg
sbb
pushf
pop
inc
lret
xor
movsb
in
pop
pop
push
jle
push
jns
xor
pop
aaa
popa
pusha
inc
and
adc
cmp
enter
pop
into
cmp
js
fsubrl
popf
lods
xor
test
in
fldt
xchg
or
pusha
popa
test
cmp
imulb
addb
cmp
test
jnp
cmpl
cmp
mov
mov
and
mov
data16
xor
shlb
nop
mov
pop
add
pop
pop
insl
or
cmp
mov
xor
mov
enter
inc
xor
int
xlat
lock
or
hlt
push
and
mulb
fidivrs
jmp
mov
ds
out
sarb
popf
xchg
andl
mov
xor
pop
leave
cld
or
cmp
xor
mov
cmp
pusha
xor
mov
addr16
aaa
adc
sub
hlt
in
add
daa
mov
add
cmp
push
or
mov
cmp
enter
push
mov
dec
popa
xor
daa
in
movsb
xor
add
sub
lret
sub
insb
out
loop
or
fcom
sub
cmpsb
pop
cmpb
ficomps
cmp
popa
push
aad
ror
cmp
and
stos
inc
pop
das
mov
and
or
outsl
cmp
mov
dec
sub
daa
cmp
pop
adcb
adc
jmp
push
ss
shrb
and
arpl
xor
out
cmp
test
xor
cmp
mov
fnstcw
arpl
push
les
and
sarl
sahf
sub
aas
mov
push
inc
jecxz
das
js
sti
stos
pop
cmp
dec
or
mov
shlb
mov
mov
mov
pop
mov
sub
cmp
out
cmp
mov
fadds
jp
add
bswap
je
cmp
inc
mov
mov
fs
lods
cmp
jb
mov
sbb
xchg
popa
out
xor
lahf
or
adc
mov
or
nop
cmpsl
mov
dec
push
cmp
jne
fstl
push
or
sub
and
mulb
push
leave
jl
mov
cmp
cmp
popa
sbb
xchg
imul
or
inc
fnstsw
jmp
ret
push
jae
fmulp
out
fs
xchg
adc
pop
rcll
cld
push
xor
xorb
mov
enter
sbb
call
xchg
fisubrl
in
xor
out
push
mov
and
bound
call
ja
fidivrl
cmp
imul
shr
and
xor
jge
inc
test
ja
push
ds
cmp
cld
icebp
imull
mov
push
jge
lcall
push
push
test
cwtl
push
popf
shll
pop
xor
adc
sbb
or
pop
mov
mov
jge
mov
mov
or
icebp
mov
and
inc
ffreep
iret
mov
ja
insl
aas
stos
pop
movsl
add
cmp
inc
xor
jle
loope
repz
sbb
push
xor
fldenv
stos
inc
fimull
mov
dec
lcall
inc
adc
jo
cmp
cmp
leave
adc
int3
cmp
pop
test
cmp
push
in
push
lret
and
fnstsw
jmp
mov
jg
aaa
pushf
sub
adcb
push
cmp
out
sub
cmp
mov
lock
aas
js
movsb
fdivrl
cmc
cwtl
cmp
test
or
xor
sbb
cld
xor
push
ret
jne
xchg
sbbb
mov
mov
cwtl
push
dec
cmp
xor
ds
mov
cmp
insb
mov
out
xor
xor
ss
aad
sub
subl
ss
daa
push
and
loopne
xor
add
mov
adc
cmp
sub
into
decl
dec
cmp
push
imul
xlat
cmc
int3
fisttpll
sub
outsl
xchg
jp
in
mov
js
mov
icebp
adc
test
mov
mov
xchg
pop
enter
xor
mov
mov
xor
or
pusha
sub
jl
cmp
sub
sub
stos
inc
dec
sbb
orl
aas
push
sub
mov
adc
cmp
enter
test
mov
jle
ret
cmp
push
jnp
scas
push
xchg
adc
pop
dec
xlat
imul
push
stos
inc
mov
mov
or
xchg
mov
pop
jne
in
sbb
adc
stc
data16
aad
inc
jge
adc
add
fwait
jo
ret
std
push
leave
cwtl
or
xchg
adc
stos
mov
mov
out
mov
daa
mov
xor
enter
jns
cmp
icebp
arpl
std
aad
xor
stos
mov
jo
or
int3
xor
and
jle
adc
movsl
mov
call
pop
test
pop
lret
or
int3
pop
jl
inc
xor
int
stos
aam
dec
pop
push
sbb
and
cmc
lods
mov
push
es
mov
xchg
sub
xchg
inc
add
push
rorl
jle
je
mov
inc
in
xor
outsb
pop
iret
sbb
or
mov
jae
or
int3
mov
xchg
loope
cmp
popf
lcall
inc
and
ficoms
cmp
cmc
popf
xchg
adc
mov
mov
mov
std
imul
int3
loope
cmpsb
jne
nop
cltd
push
fistpll
jb
sbb
mov
add
fldcw
mov
cmp
sbb
loopne
xchg
lret
cmp
jno
cmpl
xor
addb
jne
test
mov
lods
faddp
push
enter
cmpsl
xchg
push
fistps
cmpsl
lret
jle
xor
repz
je
cmp
out
mov
scas
dec
jno
or
and
cltd
int
std
loopne
ret
repz
mov
rcrb
loop
into
icebp
push
leave
in
cmp
cmp
jne
fidivrs
out
push
sbb
rolb
add
cmp
sti
mov
jle
jns
or
jo
mov
mov
daa
je
mov
pop
mov
add
sbb
or
push
sub
ret
mov
clc
or
and
adc
lcall
bound
cmp
into
inc
jbe
fnstcw
add
outsb
mov
xchg
mov
sub
rclb
cmp
ret
push
push
cmp
xchg
sbb
dec
rcrb
sub
xor
jmp
fistpl
sub
mov
movsl
mov
arpl
shl
insl
int
mov
fdivrs
daa
popf
jae
mov
jl
cmp
movsb
divl
mov
fcomp
mov
out
jne
fstl
pop
sub
sub
repz
lret
jo
xor
rcrl
dec
rcr
cmp
je
cmp
mov
psrld
cmp
lods
mov
cmp
add
pusha
xchg
pushf
sbb
mov
and
mov
scas
adc
popl
xchg
mov
in
cmp
aad
lret
cmp
lods
pop
mov
int
xchg
xchg
mov
cmp
or
cltd
or
in
inc
jns
shr
es
jle
sti
or
ficomps
jbe
jae
test
xor
mov
inc
pop
insb
xchg
repnz
test
add
mov
mov
adc
xor
jnp
pop
adc
push
mov
jns
mov
mov
mov
sbb
pushf
push
mov
push
sarb
inc
inc
xchg
adc
jmp
bound
ds
testb
dec
clc
and
lock
xor
mov
pop
ret
cmp
push
lret
int
insb
in
xor
shl
xchg
sbb
and
sub
pop
adc
rolb
enter
or
dec
repnz
daa
loope
stos
push
xchg
fcmove
gs
shlb
rol
push
jmp
push
jecxz
ss
adc
xchg
xchg
rclb
push
ja
enter
lret
inc
xor
int
fdivrl
jno
and
xchg
xchg
sbb
push
add
and
addr16
cmp
xor
rol
pop
cmp
xchg
cmp
xchg
add
xor
xor
add
or
pusha
mov
sbb
cmp
cmp
js
adc
and
rcrl
nop
pop
and
fsubr
mov
cmp
jne
dec
ljmp
div
pop
insl
inc
je
lock
gs
sub
push
out
mov
jmp
cmp
test
mov
push
je
and
leave
jb
aad
cmp
cltd
popa
xor
jl
lock
sbbb
es
cmp
popa
jl
scas
idiv
sarb
insl
in
sahf
push
mov
cmp
push
adc
mov
sub
cmp
mov
xor
inc
mov
cmp
cmp
adc
cmp
arpl
lods
mov
xor
cmp
dec
dec
enter
mov
sub
cmp
aaa
pushf
aas
sub
pop
in
dec
je
lcall
imul
dec
enter
divl
rclb
mov
in
repnz
loop
int
xor
cmp
xor
sub
adc
mov
xor
xor
nop
aad
and
out
clc
cmp
sbb
hlt
push
in
addb
std
lret
jbe
mov
push
ss
mov
ret
dec
scas
add
xor
in
or
cmp
or
adc
or
lds
sbb
push
in
push
add
lret
sbb
jne
cmpsl
xor
in
xorl
mov
xor
adc
pop
test
ficomps
sub
and
mov
pop
cmp
dec
dec
rcrl
shrb
xor
hlt
mov
mov
insb
cmp
cmpb
cmp
arpl
cmpsl
add
adc
rcrb
and
lret
scas
popf
jmp
dec
jbe
cmp
pop
mov
add
mov
cmp
outsb
int3
jb
cmp
insb
test
cmp
add
inc
sub
xchg
insb
push
shr
mov
enter
cmp
sbb
cmp
clc
into
int3
mov
adc
xchg
xchg
js
push
mov
fmull
sbbb
push
inc
inc
data16
sbb
fstpt
mov
dec
sub
push
cld
xchg
xor
das
sub
cmp
fs
xor
add
push
or
out
sti
xchg
push
int
sub
scas
inc
sbb
cs
into
mov
sbb
push
and
je
call
xor
dec
xor
push
sbb
aaa
push
in
and
out
ljmp
call
aad
dec
xor
mov
cmp
push
loopne
lret
cmp
jo
sub
inc
lret
xor
and
and
xor
sub
rorl
call
jmp
mov
mov
popl
cmp
std
das
xor
repz
cld
fstpl
cmpsb
or
mov
add
test
mov
mov
into
jge
xor
cmpl
mov
jne
test
out
cmp
lret
xchg
sbb
inc
nop
or
outsl
lret
sub
cmp
lds
mov
outsb
iret
pop
ret
mul
pop
ror
pop
cmp
mov
dec
aad
dec
inc
stos
insb
into
mov
sbb
cwtl
cmp
cmp
cmp
fwait
sub
lret
cmp
inc
adc
loopne
push
sub
mov
dec
pop
sbb
or
cmp
orl
rolb
stos
or
pop
cmp
jle
dec
adc
or
fadd
xor
aaa
fldcw
xor
sub
push
std
sarl
mov
sub
push
cmp
ret
sbb
rcrl
or
cmp
dec
push
adc
inc
sbb
adc
dec
push
movsl
daa
mov
mov
add
aad
jle
or
jne
inc
fistps
test
mov
adc
or
xchg
inc
push
push
xor
ja
adc
inc
repz
sub
incl
mov
cmp
jne
cmp
dec
roll
pop
bound
mov
pushf
mov
and
imul
outsl
dec
jne
and
cmpb
pop
lock
aaa
ret
cmpb
inc
sahf
cmp
or
loope
cmp
mov
movsl
add
xchg
mov
shrb
sub
jns
and
scas
das
mov
sti
xchg
xor
scas
xchg
inc
leave
sub
hlt
mov
outsb
cmpsl
add
push
test
mov
std
mov
push
and
dec
add
sub
add
mov
push
in
and
and
mov
xorl
xor
xor
cmp
and
jp
clc
dec
loopne
add
mov
andl
fcmovnb
cmp
inc
cmp
cmp
test
outsl
inc
and
mov
xor
mov
iret
jbe
sub
xchg
vmovaps
pop
into
xchg
sar
ds
popa
js
pop
lods
xor
std
scas
and
subb
fistl
ret
enter
ss
inc
pusha
sbb
mov
rcll
xor
das
cmp
andb
jecxz
test
test
movsb
mov
lods
lret
call
ss
cmp
outsb
enter
jne
fsubs
and
aam
cwtl
lret
lods
sahf
cmp
test
mov
or
dec
push
mov
xor
and
xor
mov
mov
pushf
rcrb
cmp
xor
insb
and
mov
cmp
rolb
cmp
bound
ljmp
mov
aaa
dec
adc
popf
scas
lods
setns
adc
test
add
push
mov
add
xor
shll
push
adc
cmp
jbe
or
lods
sub
ret
sti
push
mov
scas
cmp
call
mov
jl
inc
lret
mov
cmp
xchg
cmp
in
in
movsb
ss
cmp
shl
mov
dec
xor
mov
xor
shl
in
or
cmp
jg
sahf
mov
adc
mov
shlb
jle
ds
mov
push
aaa
mull
call
or
sbb
lds
sub
adc
out
add
adc
sub
sarb
sub
cmpl
xchg
pop
cmp
mov
xchg
test
loope
std
add
inc
xor
cmp
call
mov
dec
andl
xchg
xor
jg
jo
add
cmp
add
pop
data16
test
xor
adc
stc
mov
xchg
cmp
daa
adc
cmpsl
jl
dec
aaa
iret
ret
xchg
push
ss
add
cmp
mov
and
and
iret
push
enter
pop
dec
lcall
pop
xor
mov
test
or
cmp
ds
dec
popf
mov
cmp
xor
jp
data16
and
imul
pop
addr16
out
cmp
push
cmp
push
inc
aaa
rolb
dec
push
pop
jae
xor
enter
ss
sbb
inc
lea
rcrb
push
pusha
xor
inc
or
or
adc
push
cmp
dec
dec
mov
ss
loop
lds
cmp
xor
mov
push
fcomip
jecxz
xchg
enter
ret
and
jge
add
jo
ljmp
imul
xor
push
cmp
sub
cmp
sbb
and
cmp
sbb
loop
mov
xor
in
dec
icebp
ljmp
enter
orl
dec
dec
cmp
js
cmp
inc
call
test
fisttpll
bound
dec
or
adc
test
add
cmp
imul
loope
xor
movsl
sub
nop
jb
or
cmp
or
or
push
orb
add
into
push
lret
add
xor
movsb
adc
int
testl
pusha
fistpll
and
dec
pop
or
sbb
mov
mov
iret
jnp
adc
sti
sub
enter
adc
rcrl
sbb
cmp
dec
dec
rcl
xor
push
and
imul
mov
pop
bnd
sbb
or
pushf
inc
mov
aad
cmp
subl
ret
adc
mov
clc
cmp
imul
push
aaa
fwait
out
sbb
mov
insl
pop
dec
dec
shrl
or
cmp
push
icebp
mov
or
es
les
mov
lcall
dec
mov
cmp
mov
arpl
loopne
dec
cwtl
jae
or
clc
adc
push
xchg
imul
sbbl
shlb
sbb
xor
push
negl
xchg
enter
cmp
sub
or
ss
and
les
aas
lcall
push
push
cmp
xchg
shlb
cmp
je
sub
cmp
push
jge
jno
xor
sub
loopne
dec
sbb
es
loope
cmp
cmp
out
lds
je
xor
mov
cmp
aad
xor
xor
cmp
and
mov
js
fs
mov
movsl
lock
mov
fisttpll
mov
dec
cmp
xchg
jb
xor
ds
mov
mov
aam
mov
out
sti
cld
adc
cmp
outsb
subb
add
pop
adc
pushf
loopne
sbbb
jbe
cli
xchg
xor
in
jae
or
lret
add
fmuls
stos
jo
out
inc
iret
sub
add
aaa
mov
adc
add
out
cmp
inc
push
out
push
mov
lret
inc
popf
mov
or
cmpsb
and
fdivrl
dec
aaa
lret
push
cld
mov
mov
fldl
sub
shrl
jp
mov
adc
mov
out
sti
out
xchg
mov
push
shlb
fs
aad
in
mov
cmp
sub
sbb
stos
cmp
iret
lret
shlb
lcall
dec
xchg
cmp
nop
mov
sub
sbb
mov
mov
adc
dec
cmp
movsb
shrb
push
dec
gs
into
les
pop
sub
rorb
lret
sahf
ss
cld
cs
xchg
test
pop
cmp
loop
mov
test
cmp
int
cmc
negb
lock
sbb
mov
arpl
test
adc
lea
cmp
fidivrs
cltd
cmp
iret
popa
rolb
cmpsl
arpl
dec
ret
xchg
sbb
cmp
push
add
stos
cmp
jp
adc
in
loopne
xor
mov
gs
and
xchg
sub
sarb
pop
or
xor
ljmp
push
nop
sahf
sbb
cmpsl
add
cmp
or
cmp
lock
mov
jno
inc
aaa
push
sbb
cmp
mov
int
les
inc
or
push
pop
jl
pop
mov
cmp
push
pop
std
cmp
jno
xchg
sbb
repz
cmp
push
sbb
rclb
jecxz
xor
inc
jo
pusha
sub
movsb
add
popa
icebp
nop
ja
inc
out
mov
cmp
inc
not
enter
mov
mov
std
mov
xor
pop
jne
into
dec
iret
cmp
dec
repz
jp
out
scas
or
bound
xor
mov
push
mov
movsb
mov
jno
sbbb
mov
push
nop
cwtl
loopne
push
cmp
pop
ret
test
xor
dec
movsb
scas
adc
pushl
adc
add
push
cmp
sbb
jmp
adc
cmp
cmp
adc
mov
push
sub
sti
repz
sub
enter
xor
out
cmpb
pop
lcall
fwait
stc
fistpll
cmpl
inc
outsb
xor
data16
out
mov
clc
je
cmp
xchg
stos
inc
mov
or
xchg
inc
test
in
cltd
rcrb
dec
mov
cmp
fildll
mov
enter
cmp
mov
cmp
mov
popa
cmp
mov
repnz
push
int3
cmp
outsl
push
scas
mov
scas
jbe
dec
mov
enter
adc
adc
lahf
int
das
push
or
pop
push
lods
add
add
dec
mov
repnz
push
cmp
lea
into
ror
out
ss
cltd
jle
jp
imul
or
mov
sub
bound
jb
fwait
adc
mov
jnp
sbb
loopne
push
push
shll
mov
mov
loop
fstps
push
xor
mov
xchg
arpl
ds
mov
dec
ja
mov
mov
sbb
js
push
insl
popa
xor
adc
pop
je
jae
cmp
and
push
cmp
lret
sar
fldl
push
mov
adc
test
lock
push
stc
pusha
cmp
cmp
mov
dec
int3
mov
jle
rcrb
cmp
mov
pop
fninit
inc
ljmp
jge
repnz
xor
nop
fstl
mull
imul
lea
repnz
or
inc
int3
ds
and
add
adc
inc
cmp
call
dec
and
mov
sub
jbe
pop
mov
test
lods
leave
inc
cmp
push
sbb
enter
mov
xor
adc
cmp
push
cmp
or
mov
cmp
lock
xchg
or
and
cmp
mov
stos
pop
push
shrb
ss
jae
lds
pop
hlt
jbe
sbb
xor
or
das
pop
cmpb
xor
xor
or
std
out
cmp
jns
xor
cmp
adc
or
hlt
cmp
and
fstpt
cmp
push
sbb
loopne
in
cmp
mov
enter
pop
rorb
jp
lret
and
jb
mov
and
test
pop
cmp
mov
movsl
cmc
cmp
clc
rolb
enter
ret
in
in
aas
imul
cmp
dec
rcr
dec
jge
xchg
mov
cmpb
dec
cmp
imull
dec
mov
fwait
je
pop
ds
add
or
mov
mov
add
inc
sbb
jp
in
add
xchg
lcall
scas
inc
in
mov
popa
mov
adc
mov
daa
jb
ss
je
and
mov
test
shll
xor
inc
xchg
movsl
push
pusha
and
repnz
mov
arpl
aas
cmp
jg
xor
sub
cmp
inc
sub
cmp
jbe
hlt
dec
bound
xor
pop
das
pop
clc
mulb
push
cmp
mov
and
aas
rdmsr
lahf
nop
adc
and
andb
jnp
jb
lods
adc
cmp
cmp
lods
mov
adc
lahf
mov
pop
xor
lds
mov
cli
rorl
daa
jnp
or
cmp
ret
pop
mov
push
jo
out
lret
into
xor
fcompl
xor
ret
jecxz
out
xchg
cmp
je
sarl
call
sub
cmp
sti
imul
sarb
test
inc
dec
enter
xchg
push
cmp
shl
test
dec
inc
in
ds
ljmp
mov
push
in
movsl
sbbl
fnstenv
imul
push
fsub
clc
and
adc
xor
sub
cmp
scas
fsts
xor
xor
add
movl
lea
sarl
into
shlb
jo
cmp
int3
inc
dec
pop
hlt
shll
add
outsb
xchg
and
shlb
lahf
movsb
mov
cltd
and
or
mov
mov
cmp
shlb
les
jl
pushf
out
cmp
lcall
shl
add
or
xor
xlat
jns
dec
mov
jecxz
cmp
add
in
cmpsl
rorl
jo
and
inc
inc
xor
xchg
cmp
pusha
dec
or
gs
add
jo
jp
cmp
sub
sbb
mov
xchg
stos
dec
pop
and
lds
ds
jns
sbb
cmp
leave
into
repz
lods
daa
sbb
cmp
in
sti
adc
push
loope
push
out
cmp
mov
call
cmc
mov
mov
cwtl
mov
sti
xor
into
sub
jb
insl
fnstcw
addl
pop
cmp
xchg
loop
stc
add
mov
sub
xlat
dec
push
xchg
inc
mov
push
ja
enter
ss
popf
jge
add
nop
hlt
call
fnstcw
push
cmpsl
inc
lret
adc
sbb
adc
pop
mov
and
inc
mov
push
and
shlb
mov
cmp
sbb
dec
fidivrl
enter
push
pushf
jp
test
leave
dec
cmp
mov
add
mov
or
rclb
and
push
lcall
lods
or
adc
loopne
mov
pop
mov
adc
cmc
mov
imul
mov
mov
cwtl
shrl
lock
stos
inc
cmp
sbb
jne
xor
int
pushf
aaa
in
sub
cmp
cmpb
cmp
sub
cmp
push
push
push
jb
dec
cmp
jae
sbb
enter
ss
mov
out
dec
int
cmp
mov
sub
cmp
xchg
push
cmp
out
mov
add
cmp
cmp
and
xlat
cs
fidivs
adcl
inc
inc
dec
and
lods
xorl
cmc
daa
sub
ret
mov
cmp
cmp
imul
xchg
dec
dec
repz
or
int3
adc
mov
cmpsl
inc
lret
mov
add
fsubs
or
or
stos
adc
lahf
cmp
sub
in
jb
jbe
fcoms
pop
sbb
ret
add
cmp
inc
aad
aas
xchg
mov
cmp
pop
idivb
mov
inc
add
adc
inc
pusha
jo
loope
into
and
mov
pop
push
xor
xorb
insb
mov
pop
insl
pushw
jb
pop
xchg
mull
loopne
popf
jb
pop
push
cmp
enter
sub
sub
out
dec
cmp
shlb
cmpsb
xlat
scas
dec
adc
fisubrs
pop
push
jp
sarb
jge
mov
divb
sub
icebp
pop
add
mov
ljmp
mov
enter
clc
test
mov
and
mov
xchg
xchg
mov
or
cmp
or
ss
stc
cmp
loopne
adc
mov
flds
sub
aas
hlt
lret
rclb
in
ljmp
add
mov
arpl
pop
push
aaa
inc
cmp
fnstsw
sub
es
in
sarb
mov
aas
dec
push
cld
or
jbe
gs
fistl
sbb
cmp
or
dec
aad
mov
ds
pop
pop
ss
mov
add
mov
or
rclb
adc
into
adc
or
mov
push
shr
mov
xor
sbbb
out
insl
repz
xor
or
sahf
pushf
cmc
test
cmp
int3
xlat
shll
push
xor
in
jns
int
fcmovnu
jg
shl
and
fnsave
dec
xchg
cmp
xchg
insl
cmp
pop
loopne
and
into
fld
shlb
das
int
sbb
cs
xor
cmc
or
xor
cmp
ret
jg
into
pusha
cmp
or
in
aas
cmp
sbb
sub
jg
jnp
sbb
dec
add
cli
fsubr
jo
rcr
sub
pop
in
aaa
jge
shlb
cmpsb
cmp
enter
mov
je
popa
inc
mov
pusha
jb
pushl
push
mov
cmp
arpl
push
sub
xlat
mov
fstps
inc
lea
mov
hlt
cmp
rcrb
sbb
test
or
ds
sub
out
and
mov
inc
push
cli
subb
pop
imul
push
sub
repz
pop
cmp
push
ror
cmp
adc
je,pn
push
movsb
in
dec
lret
ja
popf
mulps
call
clc
mov
sbb
sbb
xor
inc
fists
cmp
adcb
cmp
fwait
add
fsts
cmp
and
adc
adcl
imul
xor
push
xor
cmp
pop
inc
shlb
test
arpl
xor
cmp
mov
mov
ss
xchg
enter
call
sahf
push
sbb
frstor
sub
arpl
ret
xor
pop
lea
cli
shlb
cmp
xlat
cmp
adc
fstpl
enter
sbb
dec
cmp
ror
xor
dec
cmp
fdivrs
adc
inc
pop
scas
xor
std
repnz
test
aas
fistps
mov
mov
fcmovne
iret
sbb
mov
stos
jp
mov
cld
adc
and
rolb
addr16
int3
add
aaa
push
lods
stos
cmp
call
pop
xor
fdivs
cmpsb
push
add
inc
mov
test
xor
mov
fwait
dec
dec
mov
fstpt
enter
sbb
ja
jecxz
xchg
cwtl
inc
cmc
arpl
inc
and
dec
aaa
shrl
fstps
sbb
sbb
or
popa
jnp
cmp
mov
cmp
call
hlt
repnz
movsl
cs
or
cmp
iret
jo
cmp
out
or
int3
js
xchg
jns
sub
shlb
add
or
inc
into
leave
call
out
scas
sub
pop
dec
arpl
scas
xor
lcall
push
xorl
push
inc
call
or
pop
sub
add
pop
push
xor
jle
jb
enter
lods
rorl
in
leave
cmp
mov
out
cmc
call
aad
dec
in
cmp
lahf
pop
ret
jae
dec
sbb
ror
fs
das
inc
inc
jmp
cmp
cmp
jb
cmp
cmpsb
sbb
out
mov
iret
rcr
shlb
jmp
out
push
outsb
cmc
clc
cmp
mov
lods
mov
add
stos
repnz
adc
cmpsb
mov
adc
mov
pusha
decb
xor
lods
jne
js
mov
inc
jno
push
add
cmp
sbb
xchg
push
xor
jle
or
cmp
insb
jmp
cmp
out
sarl
dec
mov
cwtl
popa
push
or
and
cmp
cmp
movsb
test
shld
push
das
adc
sarb
in
fisttps
fcomp
testb
push
mov
push
aas
pop
das
fldln2
xchg
xor
subb
dec
and
inc
shrl
mov
or
mov
scas
test
adc
and
pop
xor
ret
and
jne
call
cmp
ss
add
cmpl
cmp
stc
xlat
mov
cmp
adc
xchg
mov
call
xor
adc
xor
movsb
bound
mov
and
nop
addr16
call
sbb
cmp
jns
adc
adc
and
adc
add
sbb
fcmovne
xor
lea
std
pop
cmp
call
hlt
bound
mov
pusha
pop
dec
mov
cmp
xor
ret
lock
daa
enter
stc
jb
jecxz
push
pusha
shrb
cmp
gs
clc
lds
cmp
xchg
mov
push
ss
push
mov
or
sbb
int
shrb
out
fstpt
lods
flds
sub
jge
in
push
cmp
xchg
cmp
bound
add
out
mov
add
xor
cli
inc
scas
push
xchg
adc
sub
sbb
xor
mov
lahf
popf
sbb
arpl
aaa
xor
add
xor
movsb
mov
test
xor
jnp
jae
push
fwait
sarb
cld
repnz
stos
pop
xor
push
add
adc
xor
dec
dec
aaa
or
sub
ret
mov
cmp
clc
push
dec
out
iret
cmp
xchg
ja
dec
test
int3
adc
jo
or
cmp
sti
cmp
mov
or
fcompl
flds
or
sub
adc
cli
pop
sbb
cmp
bound
jp
mov
xor
int
dec
mov
cmp
inc
rorb
push
hlt
mov
ss
lock
cmp
es
pop
scas
lret
adc
insb
xor
sbb
enter
inc
add
cmp
enter
sbb
sbb
xchg
cmp
xchg
fwait
jp
fisubs
test
divl
adc
sarb
mov
pop
imul
lahf
jae
push
fidivs
and
clc
jne
adc
dec
repnz
or
fwait
xor
out
enter
shl
lret
adc
aad
ds
cmp
push
and
cmp
mov
imul
movl
push
jle
fnsave
test
je
sti
roll
and
add
stc
mov
cmp
mov
lcall
mov
fs
mov
push
sub
cmp
cs
loope
inc
call
cmp
inc
push
loop
int3
cmp
rcr
insb
cmp
rol
insl
sbb
lods
xor
mov
cmp
xchg
cmp
movsb
fstp
repz
hlt
cltd
pusha
adc
inc
fidivrs
jmp
push
lods
xchg
jbe
das
repz
cmp
mov
xor
faddl
fbstp
ret
ds
fnsave
mov
stos
lods
shr
cmp
movsb
repz
lahf
inc
movsl
cmp
es
loopne
ljmp
xor
xchg
clc
scas
cltd
sbb
xchg
xor
xchg
das
adc
push
cld
xchg
in
mov
lcall
mov
adc
in
add
pop
dec
stos
nop
test
rolb
dec
add
or
or
or
push
sbb
xor
enter
icebp
es
lea
cmp
inc
nop
pushf
jae
cmp
rcr
mov
jo
xor
dec
sub
iret
cmp
mov
add
ss
mov
aaa
aam
lea
out
xchg
cmpl
jl
insl
cmp
fcoml
cmp
out
jl
adc
cmpl
stos
into
addr16
clc
push
jmp
push
xchg
dec
xchg
int
cmp
test
out
repnz
inc
add
ss
jb
negb
push
xlat
push
push
inc
hlt
aaa
ds
jb
subb
cmp
cmp
imul
inc
mov
cmp
xchg
lret
cwtl
scas
sbb
cmp
jp
lds
movsb
inc
push
inc
lock
cltd
and
popf
sbb
in
push
dec
cmpsb
xor
jns
cmp
fwait
add
cmp
subb
xor
in
cli
cmp
inc
rcll
add
sbbl
out
cmp
enter
ss
xor
lret
pop
add
popa
shr
xorl
std
stc
mov
cmp
or
sbb
inc
inc
xor
mov
inc
jo
push
add
test
int3
xchg
pop
inc
jno
dec
into
cmp
jmp
sti
fsubrs
rol
xor
insl
inc
cmc
dec
jo
dec
bound
int
jb
lret
test
mov
inc
mov
mov
cltd
insl
jl
fcomps
push
jmp
jne
push
test
shll
addb
lret
xchg
xor
mov
ret
jbe
add
inc
and
and
dec
cmp
mov
imul
int
mov
insl
and
cmp
test
pop
lcall
sub
mov
sahf
fmuls
push
pop
adcl
jb
push
lock
fmuls
adc
or
bound
test
lds
out
mov
adc
or
add
jnp
and
or
out
mov
cli
fmul
out
jbe
lret
adc
sbb
in
sbb
xchg
cs
ret
or
fwait
stos
or
or
cmp
push
sub
popa
inc
jne
mov
xor
and
mov
cltd
sbb
repz
xor
outsb
mov
adc
mov
xchg
std
aaa
dec
adc
lds
mov
pusha
push
dec
aas
orl
insb
xchg
rcr
mov
cmp
shlb
repz
sbb
lret
aad
push
jo
inc
xor
cmp
into
push
sti
cmp
sub
hlt
cmp
std
dec
lret
adc
inc
mov
gs
in
call
shl
push
cmp
jae
cs
adc
sbb
dec
xor
jno
or
call
ss
dec
sbb
inc
add
fs
mov
ror
xorb
mov
push
aas
mov
dec
out
pop
enter
js
xor
stos
cmp
xor
mov
xor
lods
aaa
repnz
out
jne
push
orb
sarb
xchg
jg
iret
pop
rcll
xor
fildll
mov
cli
cmp
dec
sarl
mov
insl
addr16
push
movsb
sub
shll
sbb
dec
sub
push
add
cmp
cltd
mov
insb
dec
call
rcrb
mov
cmp
pop
sarl
cmp
lret
call
rcrb
mov
mov
js
adc
insl
imul
ds
out
push
xchg
jp
movsl
dec
inc
dec
xor
daa
cmp
inc
inc
add
pop
shlb
pop
sub
jecxz
xor
loop
cmc
mov
pop
mov
pop
adc
and
xor
jl
jle
push
mov
cmp
popa
cmp
dec
add
push
aas
xchg
dec
icebp
scas
cmc
xor
call
arpl
pop
in
jmp
shlb
pop
call
leave
jl
mov
dec
push
adc
pop
cmp
insl
cmp
pop
sti
mov
dec
sbb
ss
dec
xor
cmc
lods
and
cli
int
orl
in
fcoms
mov
and
cmpsl
mov
push
subb
or
cmp
pusha
cmp
add
jo
rdpmc
xchg
into
cmp
dec
cmp
jbe
scas
mov
aaa
push
add
lret
out
cmp
push
es
push
sbb
xor
adc
repnz
mov
mov
dec
sahf
xor
and
add
dec
shufps
jecxz
std
pop
and
cmp
sbb
add
cmp
dec
lahf
mov
fdivs
in
lods
cmp
sbb
divl
aad
out
adc
lret
stc
mov
mov
fld1
inc
dec
ljmp
add
or
decl
push
cmc
shlb
xor
jge
push
fdivrp
cmp
xor
push
xchg
lret
aas
adc
out
xor
xlat
movsl
aaa
inc
cmp
and
lahf
fcomps
xchg
and
xlat
push
pusha
push
stos
andl
jb
sbb
test
lock
sbbl
jb
pusha
xchg
add
sbb
daa
in
xor
aaa
mov
outsl
dec
inc
cmp
jno
jp
xchg
les
rorb
psubq
stos
lret
cmp
in
cmpsl
hlt
rolb
cltd
cmp
add
sub
shll
scas
in
negl
jae
ret
cmp
into
aam
icebp
mov
pop
xor
lret
out
dec
adc
rclb
pop
push
outsb
cmp
fld
mov
pop
cmp
sub
sbb
cmp
xchg
dec
add
cmp
stc
jle
ret
sub
sbb
jne
popf
aaa
dec
lock
xchg
pushf
scas
lret
dec
mov
sub
fisttpll
cmp
enter
ss
dec
add
mov
fldenv
xor
jbe
xchg
inc
sarb
xchg
mov
push
cmp
in
pusha
cmp
movsl
xor
mov
mov
repnz
hlt
xchg
out
out
push
xor
insl
mov
push
inc
xchg
cwtl
imul
xor
fisttpll
arpl
imul
sarb
sarl
shlb
in
inc
iret
and
xor
sub
gs
mov
xchg
mov
cmp
loop
jb
cmc
ds
cmp
lea
in
cmp
mov
dec
je
inc
dec
xor
mov
cmp
sub
ss
dec
mov
add
popf
popa
push
xor
fwait
adc
pop
pop
push
mov
fldenv
jecxz
lahf
sti
mov
inc
push
xor
sarb
iret
call
cmp
xchg
orb
lahf
imul
and
jno
cmp
sbb
jge
fisttpll
test
xchg
xor
jnp
into
jae
pop
jno
cmp
or
sub
xorb
hlt
scas
xchg
and
int3
ffree
repnz
shlb
lds
xchg
adc
inc
adc
add
ljmp
popf
enter
nop
xchg
insl
cmp
jg
adc
int3
rol
out
cmp
cmp
ret
push
jo
hlt
aaa
cmp
scas
arpl
add
cmp
enter
outsb
ljmp
xchg
fnstsw
inc
inc
insl
inc
pop
dec
pop
test
mov
fcmovnb
popa
cmp
sub
outsb
inc
cmp
cmp
imul
or
jb
popa
jno
les
adc
outsb
loopne
add
in
adc
jo
cld
adc
es
in
mov
cmpsb
pusha
rclb
jl
pushf
mov
add
je
out
mov
cmc
push
cmp
aas
push
lods
cmp
int3
add
stos
and
icebp
xor
cmp
xchg
addr16
js
fwait
jno
ss
adc
mov
sti
pop
xchg
add
inc
add
mov
and
inc
cli
sub
mov
mov
push
pushf
ja
roll
mov
xchg
xchg
cmp
cld
mov
adc
dec
jo
cmpsl
int3
inc
pop
cmp
cli
std
adc
inc
test
pop
sub
pushf
or
test
push
mov
in
shl
cmp
add
movsb
mov
xor
test
add
mov
rcl
cmp
xor
xchg
nop
push
loop
mov
aas
dec
sbb
push
arpl
lahf
gs
cmp
ds
fmul
push
test
mov
xor
push
fmull
clc
enter
cmp
mov
mov
cmp
xchg
pusha
lods
insb
and
shlb
rcll
hlt
aas
adc
lret
ret
cs
xor
dec
inc
mov
mov
adc
cmp
fcoms
xchg
xchg
dec
dec
shrb
lea
mov
and
jb
pop
mov
adc
push
and
xchg
mov
movsb
sub
inc
movsl
jne
adc
cmp
les
addr16
push
inc
and
inc
je
inc
cmp
mov
cmp
std
aaa
iret
adc
or
cmp
imul
insl
cmp
add
iret
mov
pushf
sarb
dec
aaa
mov
push
addr16
aam
jbe
in
dec
dec
adc
cmp
pop
pop
sarb
inc
ljmp
dec
xor
fs
mov
cld
rcrl
fistl
fsubs
enter
cwtl
loopne
cmpsl
cmp
cmp
jno
sub
out
pusha
in
std
push
jns
xor
cmp
mov
cmp
lods
adc
xchg
mov
pop
pop
pusha
lret
cmp
cli
cmp
loope,pn
fistpl
mov
pop
adcb
pop
cmp
jne
sub
push
sbb
ret
or
cmp
cmp
fstpl
push
outsl
orl
sub
aas
mov
xchg
inc
ja
mov
mov
addr16
test
sahf
xchg
cmpsl
cmp
in
sarl
sarb
jb
xchg
mov
das
push
mov
jnp
jns
cmp
dec
rclb
cmp
and
add
and
in
into
fimull
xlat
or
or
sub
aam
jg
cmc
pop
sub
sti
pop
pop
dec
xor
jo
adc
mov
cmp
inc
out
inc
cmp
jbe
dec
int3
cmpsl
and
outsb
cmp
cmp
jno
sub
or
repnz
pop
push
dec
jp
mov
ficoms
mov
jb
cmp
dec
into
xchg
cmp
cmp
ja
mov
ds
or
jnp
rcrb
xor
popa
lods
addr16
cltd
into
xchg
arpl
rcr
xor
push
mov
adc
add
mov
dec
rcl
xlat
cmp
iret
cltd
leave
mov
jbe
shll
lea
cmp
aaa
call
cmp
es
rcrb
xlat
cmp
mov
cmpsb
dec
into
and
leave
adc
xor
scas
sbb
inc
ljmp
inc
inc
pop
fnstenv
jns
sub
out
cmc
cmp
mov
out
repnz
int
cmp
filds
stos
mov
mov
ret
lock
mov
mov
cmc
cmp
sti
ficomps
cmp
insl
adc
jmp
push
xchg
push
rolb
cmp
pop
popa
call
push
iret
mov
scas
pop
and
push
in
jo
sti
sub
xor
loope
outsb
ret
sub
cld
xor
push
jo
add
idivb
xor
outsb
sbb
and
inc
cmp
xchg
hlt
out
ja
jl
lea
sbb
fnstenv
pop
aas
repnz
rcrl
xor
loopne
add
ss
mov
lcall
xor
jmp
es
adc
sar
lods
mov
mov
iret
outsb
xor
divb
or
cmp
into
add
push
mov
inc
cmp
jno
and
mov
add
or
out
dec
adc
sub
mov
add
mov
sub
inc
mov
mov
mov
clc
xchg
bound
xor
test
call
daa
mov
in
cmp
push
xlat
pop
add
cmc
pop
cmp
mov
pop
sub
mov
cmp
rclb
add
and
enter
clc
mov
loope
stc
xchg
mov
pop
mov
push
inc
cwtl
divl
cmp
push
repz
test
shlb
movsl
xor
mov
xor
xchg
mull
jo
cltd
clc
stos
cmp
jbe
or
and
mov
ret
fisttpll
sub
push
or
bnd
in
xchg
xchg
mov
enter
loopne
sub
int
fistpll
pop
shrb
inc
pop
mov
fnstsw
or
sub
sbbb
mov
cmp
adc
pop
cmp
sbb
pushf
aas
mov
cmc
call
icebp
or
mov
mov
adcl
call
xor
movsl
and
enter
sahf
mov
dec
stc
sub
cmp
mov
scas
xchg
and
cmp
aas
sub
int
shrl
xchg
cmp
jo
mov
jecxz
mov
xchg
out
and
scas
aaa
leave
mov
adc
inc
enter
ss
repz
les
in
jae
jg
mov
sarw
jno
push
hlt
mov
pop
push
fwait
cltd
xchg
mov
xor
mov
iret
xchg
push
cmp
xchg
xor
es
jne
jns
cli
cmp
sbb
cmp
cmp
sub
int3
mov
int
sbb
cmp
out
xor
and
stos
inc
cmpsl
add
mov
popa
sub
inc
xor
cld
rolb
fnstsw
cmp
insb
xor
jp
sbb
ss
dec
adc
adc
or
pop
inc
mov
lds
mov
loope
cmp
std
dec
mov
mov
and
jmp
arpl
push
push
xor
cmp
mov
lret
ret
mov
rcl
jl
mov
aam
add
inc
cmp
pop
pop
xchg
into
mov
scas
inc
js
clc
cmp
in
push
push
cmp
jg
int
add
sbb
out
int3
and
dec
fimull
or
jae
jecxz
outsl
int3
jne
jbe
loope
pop
cmp
mov
jle
sub
std
out
cmp
into
mov
les
inc
mov
cmp
jns
fidivl
mov
rorb
popf
aaa
xor
add
mov
insl
lahf
xor
jp
repz
dec
mov
cmp
or
negl
mov
add
sub
xor
in
lahf
outsb
pop
ja
cmp
mov
pop
cmp
cmp
push
sarl
jns
cmp
mov
test
popl
clc
fiadds
or
sarb
mov
xchg
mov
pop
xor
jecxz
dec
pop
test
sbb
jge
sub
mov
pop
cmpsl
in
lods
add
ljmp
xor
mov
shl
pop
push
and
in
or
lss
push
pushf
xor
cmc
sbb
pop
cmp
lds
jecxz
mov
add
sbb
push
sahf
mov
mov
ret
and
or
icebp
imul
inc
int3
loop
mov
cmp
aam
mov
or
pop
cmp
cmp
int3
jle
in
jo
test
loop
gs
or
xor
lods
push
decl
aaa
jmp
insl
ljmp
inc
jge
sbb
xor
inc
sbb
idiv
cmp
xchg
cmp
push
cmp
cmp
aaa
sbb
xor
or
rorl
sub
js
mov
cmp
aam
enter
and
mov
dec
push
mov
popf
inc
sbb
mov
xor
sub
adc
cmpb
xor
inc
out
mov
and
rcr
lret
jae
cmp
mov
fwait
aad
jo
cmp
mov
into
icebp
cmp
pushf
movl
xchg
sub
mov
ss
stos
adc
lea
pop
or
testb
pop
cltd
lds
orb
les
pop
stos
dec
sarb
xor
sub
inc
fsubrl
sbb
cli
lret
fcos
adcb
popf
hlt
cmp
pop
push
movsb
dec
cmp
mov
test
jbe
xchg
mov
inc
enter
adc
mov
fldcw
xor
push
out
and
push
in
fisttpl
jne
jae
lret
fcomps
mov
push
les
adc
imul
push
mov
js
in
xor
sbb
xchg
and
xor
xor
add
ss
push
cmp
loope
movsl
cmp
adc
pop
cmp
stos
mov
or
sub
xchg
fiadds
ljmp
xor
int3
pop
loop
and
andb
add
mov
fdivl
cmc
or
andb
clc
jmp
add
iret
sbb
mov
mov
xor
popa
lock
jae
les
scas
add
dec
enter
mov
rorl
xor
or
and
sub
jb
dec
jecxz
popf
mov
sub
inc
out
movsl
test
or
sub
les
je,pn
jno
js
das
xor
ljmp
add
out
call
sub
fistps
pop
loop
adc
mov
jl
cmp
adc
dec
or
mov
mov
jae
sbb
adc
dec
cmp
gs
and
push
ja
dec
and
mov
aam
ret
push
andl
xor
outsl
adc
add
sbb
mov
cwtl
cltd
idivb
std
cmp
xchg
mov
sub
pop
fcomps
dec
cmp
gs
mov
ret
and
sbb
push
adc
and
mov
arpl
push
push
jmp
ret
sub
pop
xchg
or
cmp
fnstenv
inc
mov
shrb
out
add
add
test
and
cmp
mov
enter
or
test
arpl
repnz
out
cmp
mov
push
out
enter
ss
inc
iret
push
addb
rcll
fdivrs
mov
cmp
and
stos
xchg
mov
mov
inc
inc
xchg
sahf
adc
cmp
enter
ss
iret
addr16
in
adc
insl
enter
out
mov
into
pop
cmp
mull
add
inc
rcll
movl
sub
js
add
int3
mov
in
jbe
lret
shr
lds
lock
sarb
adc
cmc
mov
push
push
or
push
jne
cmp
cmp
cmpsb
adc
cmp
inc
lock
mov
adc
aaa
sarb
pop
add
mov
adc
ret
add
pop
loopne
fildl
loop
jbe
inc
dec
in
push
cmp
sbb
xchg
testb
push
cmp
jo
cmp
or
and
cmpsl
mov
cmp
adc
dec
int
dec
push
xor
or
shrb
and
xor
and
pop
add
mov
and
fidivrs
mov
xor
enter
dec
sub
cld
mov
bound
cmp
adc
jo
push
shll
in
enter
iret
andl
dec
cmp
inc
cmp
bound
or
dec
shr
iret
push
mov
ljmp
es
pop
mov
mov
mov
xor
cmp
xor
mov
pop
push
adc
and
jb
fimull
or
and
xlat
in
fld
sub
pop
cmp
xchg
fidivl
or
cmp
repnz
sbb
jo
mov
cmp
cmp
roll
add
loopne
lret
repz
push
inc
xchg
xor
pop
mov
out
cmp
mov
fcomip
mov
or
movsl
xchg
ret
or
xor
adc
stc
mov
stos
inc
jae
mov
mov
sub
div
mov
push
fwait
and
enter
mov
mov
in
mov
xchg
test
cmp
push
into
nop
jne
mov
out
bound
mov
cmp
dec
fwait
sarb
push
in
sub
dec
cmp
xor
pop
loop
es
push
jbe
inc
wbinvd
aad
loope
lods
or
adc
cmp
jne
cmc
popa
cmp
xor
sbb
enter
adc
data16
dec
int3
pop
movb
subl
mov
loopne
mov
cmp
enter
ss
repnz
rcr
addr16
out
xor
das
out
iret
xor
mov
aam
sub
xchg
xorb
xor
sub
aaa
fists
pushf
adc
dec
int3
repz
add
jge
pop
pusha
xor
xlat
inc
add
movsb
inc
xchg
movsl
mov
cmp
sti
cmp
cmp
pop
iret
call
cmp
jns
sub
fiadds
fistl
cmp
jne,pt
mov
movsl
cmp
sti
aam
jmp
add
mov
or
jp
cmp
mov
sti
sbb
adc
push
xchg
test
mov
inc
out
cmp
in
fldcw
mov
mov
cmp
fsub
inc
sahf
ds
stos
xor
dec
cmp
aaa
sub
sub
scas
clc
ss
xchg
jo
and
cmp
scas
in
and
cmp
cmp
push
int3
fsubrs
movsl
lods
sub
add
insl
and
push
mov
aad
push
mov
addb
leave
inc
out
mov
jno
mov
xor
out
js
jne
cmp
and
ljmp
out
je
cmpb
mov
xchg
pusha
pop
rcr
cmpb
pop
stc
lcall
jnp
movsb
add
push
add
sub
aas
inc
pop
mov
sbb
daa
cltd
add
and
loopne
dec
xor
pop
into
cli
xchg
lret
push
cmp
add
call
jle
dec
xchg
arpl
sti
rcrb
pop
dec
shll
lret
xchg
das
xchg
cmp
pop
outsl
xlat
cmpsl
or
xchg
mov
popl
icebp
ror
mov
inc
daa
jmp
cmp
sti
xchg
mov
fisubrs
jg
clc
dec
inc
pop
loope
es
lahf
mov
out
cmp
cmp
mov
cmp
call
sbb
xor
fdivrl
mov
cmp
lret
or
aaa
test
rol
mov
push
call
ss
icebp
cmp
jo
fcomps
cmp
add
dec
lret
inc
cmp
je
clc
xor
cltd
dec
push
cmpsl
mov
addl
pop
sub
pop
lret
push
lret
adc
inc
nop
jge,pn
cmp
cmp
cli
cmp
sbb
pop
mov
xor
scas
sarb
fcompl
adc
movsl
push
cmp
js
push
cmp
movsb
cwtl
sub
and
addr16
iret
lock
in
push
add
sub
movsb
sbb
daa
call
sbb
jmp
out
xor
test
lret
in
data16
push
inc
add
mov
cmp
negb
sbb
insl
push
cli
cs
pop
mov
shrb
das
jg
in
dec
sbb
pusha
push
enter
mov
xlat
mov
cmp
dec
push
shll
sahf
or
cli
or
popa
pop
adc
lcall
and
lahf
lods
cmpsb
xchg
sub
xchg
jno
or
mov
cmp
into
call
out
add
mov
lahf
xchg
cmp
scas
push
or
sub
movsl
mov
sti
popf
cmp
xchg
bound
outsl
shlb
xchg
gs
fldl
sub
sub
iret
cmp
call
sub
dec
js
dec
fsubr
jge
sbb
data16
dec
into
push
or
add
out
sub
push
cs
repnz
push
shll
cld
outsb
mov
cmp
mov
add
into
xlat
mov
sbb
les
sub
mov
lock
and
cmp
fstpl
enter
ss
aas
mov
data16
xor
mov
xchg
mov
cmp
xor
cld
adc
enter
push
xor
cmp
loope
push
jnp
xor
xor
adc
lret
cmp
mov
sbb
ss
xor
sub
aas
xor
out
or
insb
mov
sarl
jmp
aad
push
cmp
enter
jno
test
lea
sub
rcrb
idivb
cmp
ljmp
clc
in
fs
jb
or
push
call
fnsave
adc
shll
test
popf
xchg
fcoms
cmp
mov
js
fisttpl
sar
fsubrs
mov
jge
inc
out
insl
mov
dec
sarb
pop
lea
pushf
push
cmp
lods
int
and
aas
fdivrs
jge
movsb
inc
mov
movl
jb
or
lret
sub
pushf
mov
cmp
cmp
cmp
xchg
inc
fimull
aaa
iret
cmp
sub
and
ds
inc
mov
jecxz
mov
lods
test
xchg
xor
sub
xchg
xor
fs
mov
push
jbe
mov
cmp
mov
fsubrp
mov
or
lcall
int3
cmc
sub
sub
lds
xchg
xor
in
js
sarl
mov
xchg
add
test
sub
push
loopne
push
adc
pop
push
arpl
cmp
mov
ret
test
pop
pop
cmp
xchg
rclb
cmp
cmpsl
sub
int
and
rcrb
mov
lret
and
sub
or
sbb
div
cmp
gs
mov
cmp
mov
sarb
aaa
fcoms
sarl
aad
iret
xchg
mov
inc
cmp
imul
and
insb
loopne
jmp
pop
cmp
fxch
inc
ret
rolb
pop
cmp
sahf
popa
sti
cmp
or
cmp
ret
mov
fnstsw
xor
dec
push
adc
loopne
call
cmpsl
add
iret
cmp
sahf
or
cmp
fsubs
jb
xor
ss
push
fildll
sti
xor
or
fmull
test
cmp
cmp
mov
ret
add
inc
add
mov
outsl
push
jo
fistpll
lret
into
xor
out
jne
lds
push
inc
in
cmp
shlb
mov
inc
out
sub
cmpsb
adc
push
cld
cmp
stos
mov
xor
jmp
popl
push
inc
mov
cmpsl
fstl
hlt
push
data16
cmp
test
rcrb
and
xor
jb
test
scas
pusha
cmc
repz
iret
mov
mov
cmp
out
push
add
cmp
sbb
lahf
sbb
cmp
std
xchg
jecxz
and
cli
loopne
cld
sub
shrl
xor
lret
out
xor
sub
push
gs
add
pop
jb
xor
mov
lret
std
sub
ss
jbe
daa
mov
movsb
pusha
jl
push
data16
repz
cmp
enter
bound
pop
aaa
je
cmp
lcall
push
cmp
jge
jl
call
cs
aaa
xchg
addr16
mov
dec
xor
lea
into
icebp
mov
cmp
push
inc
pop
aam
jae
cmp
mov
adc
sbb
shlb
xchg
out
das
pushaw
out
lock
lret
cld
dec
mov
mov
fwait
outsl
enter
xchg
mov
sub
insb
iret
adc
add
xchg
arpl
xlat
dec
cmp
cmp
stos
and
mov
xlat
cwtl
shl
fnstcw
jl
leave
xchg
xor
out
mov
cmp
cmp
dec
sbb
lret
or
push
xor
inc
int3
adc
and
cltd
ja
pushf
sub
test
cmp
loop
jo
pop
jl
and
es
cwtl
pusha
mov
pop
xlat
jp,pt
aam
xor
mov
int
add
and
notl
mov
mov
imul
xchg
xor
add
dec
repz
jl
push
or
lret
jmp
or
lods
mov
pop
movsb
dec
cld
shlb
xor
into
cmp
pop
sub
ss
cmp
data16
jne
xor
ret
mov
test
sarb
mov
aas
repnz
in
cmp
test
xor
test
rorl
adc
push
rclb
xchg
mov
xor
xchg
shl
push
mov
and
mov
mov
cmp
ret
jo
testl
mov
adc
xchg
jns
cmp
push
outsb
iret
lds
dec
adc
stos
cmc
xor
cmp
bound
mov
mov
xchg
cmp
push
lods
in
rolb
jbe
leave
jecxz
xorl
in
cmp
xchg
test
bound
ja
cmp
pusha
cmc
push
addr16
pop
inc
mov
cmpsb
mov
aam
mov
push
arpl
cs
jle
sbb
push
testl
aam
cmp
add
subl
or
cmp
push
cmp
iret
xor
outsl
shl
cmp
add
sbb
cmp
push
xor
cmp
push
inc
sub
and
inc
push
adc
mov
pop
cmp
pop
lods
mov
jbe
pop
cmp
scas
add
lahf
out
mov
add
mov
imul
dec
enter
cmp
lods
lret
fs
loopne
xchg
cmp
and
fdivp
sarb
mov
shlb
mov
sbb
ret
add
jns
and
push
and
dec
push
mov
sub
mov
js
xor
aam
loopne
enter
fdivrl
adc
mov
cmp
dec
jg
jbe
xor
addr16
aam
add
inc
cmp
mov
xor
mov
xchg
lahf
and
repz
cld
jae
mov
jo
daa
xor
xor
inc
mov
cmp
xchg
mov
push
out
cmp
lret
lods
loopne
adc
dec
fisubrs
dec
mov
jo
xor
int3
vpcmpgtb
movsl
adc
xchg
fisttps
in
outsb
or
mov
movsb
mov
pop
mov
push
pop
or
idivb
cmpl
jo
xor
mov
in
cmp
mov
dec
lcall
aam
mov
or
cmp
sarb
inc
aad
jno
enter
add
mov
lret
call
ds
push
dec
adcl
cmp
inc
mull
adc
jnp
mov
mov
jge
fistps
aad
xor
mov
divb
nop
push
lods
insb
jl
movsl
loopne
xchg
les
sbb
enter
shll
sbb
xor
sti
jae
fcmovnb
or
movsb
jne
pushf
cmp
jno
ds
jecxz
daa
mulb
sarb
fndisi(8087
xchg
iret
sub
mov
push
cmp
and
inc
call
mov
xor
ja
xchg
int
xor
mov
and
shl
cmp
mov
fisubrl
cmp
insb
jns
scas
lret
xor
or
pop
add
aad
into
mov
push
xor
xchg
ret
xorb
cli
out
insl
fisttps
int3
cmp
push
idivl
add
in
push
push
add
push
rcll
pop
cmp
enter
ss
cmp
mov
fs
push
cmp
cmp
sub
imul
loope
cmp
sub
fdivl
adc
cmp
sbb
cmp
xor
loope
sbb
xchg
xchg
mov
ret
hlt
cmp
shl
mov
in
stos
popa
inc
enter
dec
cmc
push
push
dec
es
cmp
mov
dec
cmp
mov
lahf
mov
or
cmp
lret
cmpsb
pop
mov
sbb
sarb
adc
push
mov
loope
pop
sub
cmp
shrl
jmp
ds
stos
cmp
scas
fadds
xor
mov
out
test
pop
cli
in
xor
xlat
shlb
push
lock
cmp
bswap
mov
inc
mov
iret
xchg
fwait
sarb
lret
lods
ljmp
aam
jnp
inc
sub
test
xor
xchg
push
xor
mov
cmc
popa
jo
xor
call
pop
xor
adc
sbb
lret
dec
jnp
sahf
push
jb
popa
pop
js
hlt
loopne
lock
int3
jmp
inc
cmp
pop
out
arpl
push
das
clc
add
dec
xor
fdivp
sbb
inc
pop
push
shll
xor
mov
ss
cmp
cmp
mov
cmp
adc
lock
aaa
cmp
pop
test
or
add
sub
std
mov
mov
sbb
or
xchg
xor
jg
popf
iret
out
jle
call
jns
xor
or
test
xor
pop
xchg
fldl
xchg
ja
xor
adc
cltd
push
les
jae
test
lods
push
jns
fs
loop
fisttpl
xchg
inc
stc
or
jecxz
lods
imul
pop
push
pop
pop
jo
or
xchg
push
lcall
mov
data16
sub
mov
xor
xor
and
cmp
leave
and
xor
or
xchg
mov
repnz
shlb
jmp
cmp
loopne
lret
shll
mov
scas
xchg
cmp
sub
jecxz
cmp
mov
sbb
sbb
cli
xor
addr16
xchg
push
jp
int3
sbb
mov
xor
cmpsb
inc
xchg
adc
lret
lahf
out
push
cmp
jmp
mov
arpl
lea
and
pop
mov
and
call
test
int3
scas
mov
xor
insl
and
xchg
test
mov
rclb
sarb
nop
pop
ss
rcrb
inc
cmp
xchg
test
popa
cmp
out
xchg
cmp
fildll
cmpsb
sarb
push
and
fdivl
jecxz
add
lcall
dec
lds
cmp
ja
jae
push
mov
sub
lret
fwait
lods
aaa
xor
inc
cmp
call
adc
int
xor
pop
ret
cmp
mov
add
or
cmpsb
dec
cmp
xchg
bound
into
cmp
enter
aam
sarl
add
ficompl
lahf
shll
cmp
mov
adc
xor
ret
fbstp
lcall
ficompl
shrl
pop
aaa
xor
enter
add
aaa
dec
loop
or
jb
repnz
lret
cmp
xor
stc
int3
icebp
sbb
inc
cmp
push
sbb
aad
push
aam
es
xor
dec
orl
mov
loope
xor
aas
mov
insl
sahf
and
insb
xor
dec
xchg
jbe
cmp
cmp
pop
test
iret
inc
loopne
fisttps
cmp
clc
lock
push
out
shll
mov
push
xor
pusha
jne
mov
cmp
xchg
movsb
fdiv
xchg
ss
pop
push
pop
stc
mov
cmpsl
cmp
jmp
pop
add
out
int3
cmp
xor
push
out
filds
jl
outsl
and
add
leave
adc
jmp
stc
xor
int
in
push
mov
enter
das
xchg
dec
fnstcw
int
cmp
and
pop
cmpsl
push
or
out
dec
ja
dec
lahf
xlat
cmp
mov
and
ja
push
data16
jbe
xchg
inc
add
scas
lcall
seto
test
add
pop
push
shrl
cmp
rorb
cmp
addr16
insl
mov
clc
je
sub
arpl
lahf
cmp
stos
lods
test
jne
cmp
daa
adc
aam
orb
aas
pop
jae
xchg
mov
jne,pt
xor
xchg
or
repnz
notb
cmp
inc
push
into
mov
dec
sub
inc
sub
stos
adc
shlb
outsb
cmp
xlat
test
dec
dec
xor
adc
cmp
add
dec
jno
or
mov
push
outsb
arpl
mov
cmp
inc
inc
cmp
add
sbb
movb
jnp
push
xchg
jg
lret
pop
add
mov
push
lcall
pop
jmp
mov
sbb
inc
fs
hlt
cmp
js
pop
movsl
xor
mov
fistps
int3
dec
sub
and
adcb
enter
xor
into
push
push
cmp
cmpb
push
dec
call
lods
imul
xor
dec
pushf
or
cmp
xor
dec
cmp
out
int3
aam
jb
xchg
sub
jne
pusha
loop
xor
inc
icebp
int3
adc
dec
or
cmp
ror
test
or
xchg
mov
push
stos
lock
stos
fs
cmp
in
repz
xor
sarl
cmp
mov
cmp
adc
in
push
out
sbb
sub
sbb
jns
mov
sbb
jp
stos
xor
push
orl
cmp
jecxz
ror
push
fldt
or
or
clc
sahf
sub
es
adc
sub
pop
push
push
mov
and
cltd
xor
stos
pusha
and
dec
xor
or
pop
stc
cmp
mov
push
cmp
int3
dec
sub
aaa
jb
lret
fwait
jge
cmp
or
repnz
pop
and
int3
notl
jne
call
loope
dec
lret
add
mov
xchg
or
lret
ret
inc
filds
stos
mov
dec
enter
dec
cmp
sub
cmp
out
mov
mov
loop
sub
fsubrs
cltd
ficomps
cmp
inc
popa
dec
push
aam
add
cmpb
inc
cmp
int
pop
into
rolb
clc
lcall
pop
icebp
xchg
xor
fcmovnb
loop
jg
and
sar
test
movsl
leave
adc
sets
or
cmp
add
xor
mov
inc
pop
mov
and
jg
sbb
jb
loop
cmp
andl
mov
pop
arpl
xor
pop
clc
dec
jecxz
loope
pop
outsl
cmp
out
js
dec
in
roll
cmp
test
add
mov
in
mov
sbb
cmp
repnz
fst
arpl
or
fisubs
or
insb
imul
cmp
fwait
int
mov
mov
xor
jecxz
sbb
lods
insb
cmp
lock
xor
push
test
jo
sbb
sub
pop
xor
cmp
orb
inc
add
stos
push
cmp
cmp
pushf
mov
insb
clc
mov
cmp
fs
popf
out
shrl
push
into
push
test
sub
mov
add
sub
mov
int3
inc
or
cmp
mov
in
movsl
cmp
test
and
int3
aaa
xchg
or
and
repnz
in
add
mov
addr16
bound
push
in
mov
xchg
push
jb
cli
xchg
ret
xchg
scas
cmp
ja
test
arpl
adc
nop
cmp
add
push
jne
popa
xlat
cmpsb
push
outsl
jnp
pop
fs
mov
xchg
rcl
add
inc
dec
cmp
fst
dec
out
lods
int
and
pop
inc
add
adc
out
leave
pop
mov
cmp
sbb
mov
cmp
lcall
cmp
mov
cld
cmp
jb
sti
lea
jbe
shlb
lret
pop
aaa
push
mov
stos
sub
mov
lret
andb
shlb
out
decb
cmp
cmp
push
sbb
pop
idivl
jno
dec
data16
cmp
shr
pop
pop
int
sti
lahf
push
xchg
or
std
xor
orb
cmp
in
cmp
or
or
dec
test
hlt
cmp
add
sti
mov
lret
and
cld
or
push
xor
inc
jnp
xchg
aaa
sti
rolb
push
or
pusha
and
adc
mov
xor
jmp
sub
mov
inc
inc
cli
pop
sbb
loopne
sbb
jmp
arpl
std
xor
insb
or
xorl
inc
lods
enter
sub
lds
shll
xchg
dec
and
lret
pushf
ficomps
and
or
call
rorl
cmp
xchg
sbb
mov
sub
into
mov
add
fdivrl
sub
cmp
push
test
push
mov
cmp
push
inc
jle
add
aaa
adc
sub
xor
xchg
lret
mov
fmul
jp
test
xchg
cmp
jecxz
xchg
sub
scas
enter
std
inc
out
jb
shll
insb
or
idivl
sbb
ret
loopne
jae
icebp
sbb
aaa
into
and
sarb
mov
fadd
xor
adc
fsubs
rolb
jae
xor
lds
ds
cmp
xchg
dec
into
insl
scas
iret
mov
mov
cmp
arpl
sub
test
xor
mov
mov
mov
cmpsb
inc
test
adc
cmp
sub
jge
sub
adc
xor
xchg
mov
movsb
sub
cmp
je
xlat
es
sahf
and
test
add
adcb
cmp
xor
jg
rorb
sub
fwait
repz
cmp
cmpsb
pop
or
fldcw
adc
cmp
inc
mov
push
and
xchg
push
fldenv
ds
lcall
inc
fcoml
push
sbb
cmp
inc
mov
fisubrl
fiadds
xlat
ret
aaa
arpl
sub
sub
js
orl
push
les
pop
lods
insb
sahf
push
xor
adc
adc
lcall
cmp
lahf
testb
cmp
cmp
inc
lea
hlt
mov
pop
sahf
dec
fsub
rcrb
sub
lds
test
repz
xchg
sbb
inc
int3
je
cs
pushf
cld
inc
mov
icebp
mov
test
rclb
ss
lcall
xchg
pop
and
and
lcall
adc
add
jbe
add
movups
mov
push
mov
stos
clc
enter
cmp
ss
loopne
lret
sarb
mov
gs
pop
mov
xchg
fdivr
mov
or
sbb
ss
and
or
shlb
adc
cwtl
push
dec
ret
mov
lods
adc
cmp
inc
iret
pop
or
pop
sub
lock
ret
mov
or
iret
fwait
or
idivl
pop
test
pusha
or
lret
mov
aas
cld
ror
jae
cmpsl
in
cmp
fsubs
dec
fldenv
mov
adc
push
pop
outsl
lds
aam
sbb
add
xor
test
les
pop
sbbb
cmpsb
pop
cmp
fcmove
inc
scas
cmp
add
mov
iret
icebp
add
cmp
mov
push
jecxz
bswap
pop
gs
xchg
cmp
mov
adc
cld
jo
in
add
decb
cmp
lea
sub
sub
int3
jns
popf
jg
ret
and
lods
aaa
mov
inc
cmp
call
jmp
pusha
fldenv
dec
xorb
pusha
sub
xor
int3
inc
cmp
cmc
adc
shlb
push
xchg
ss
jb
sarl
push
popf
fwait
es
fdivl
mov
inc
mov
xchg
bound
popl
test
push
sbb
jl
mov
loopne
dec
cmp
add
mov
enter
mov
mov
cmp
pop
clc
add
pop
out
add
xor
popa
mov
jmp
cmp
xlat
adc
enter
ss
push
and
stc
sbb
call
int
in
iret
scas
test
jbe
shlb
adc
cmp
out
mov
mov
in
cmpsw
sahf
sub
dec
cmp
mov
mov
mov
xor
cmp
push
lods
outsb
and
cmp
pop
bound
lods
push
mov
les
sub
xor
aam
pusha
aad
rorb
mov
std
xlat
cmp
sub
cltd
out
pop
cmp
repnz
or
inc
loop
std
mov
or
adc
cltd
sbb
jbe
inc
cmp
enter
movsb
sub
ss
scas
or
inc
dec
ds
mov
and
pop
call
xor
pop
test
inc
sbb
adcb
test
or
fmuls
daa
dec
inc
add
pop
movsb
pop
ret
insl
adc
lret
and
sti
in
lock
into
sbb
cmp
dec
adc
push
call
outsl
test
push
imul
bound
rep
cmp
popa
push
cmp
push
shl
add
mov
xlat
fs
jb
push
cmp
outsl
mov
ja
cmp
cmp
sbb
test
pushf
jecxz
das
int3
or
jne
xor
loopne
push
pusha
jle
idivb
adc
test
in
lret
stos
aad
call
push
cmp
int3
out
ret
inc
enter
jae
test
sub
and
gs
cmp
push
inc
test
mov
mov
int
pushf
fbld
sbb
mov
pop
mov
rcl
out
push
jl
loope
lahf
ss
xchg
leave
mov
inc
sarl
adc
pusha
add
or
test
and
lahf
enter
lods
jns
cmc
mov
push
add
enter
inc
icebp
inc
lods
or
mov
cmp
adc
xorl
cmp
andl
test
jp
xlat
test
lods
xchg
int
js
xor
push
out
cmpsb
ret
xor
xchg
or
mov
insb
outsl
cmpsb
in
pop
push
sbb
das
shll
fs
loopne
cmp
sub
loope
shlb
je
popa
stos
lret
inc
fists
fnsave
mov
int3
lret
xchg
in
dec
std
add
push
jmp
cmp
cmp
shrl
scas
and
push
ds
fwait
clc
fisttpll
dec
iret
mov
xorb
sahf
lret
ror
sub
cmpsl
jne
data16
cmp
mov
xlat
into
cmp
pop
push
sub
or
adc
shrl
push
inc
xor
lret
adc
enter
push
in
movsl
sub
sbb
inc
loope
outsb
nop
jg
cmp
lea
fcomp
add
cmp
mov
cmp
add
adc
jb
test
movsb
mov
adc
jp
fstpt
cvtps2pd
hlt
repnz
pusha
adc
cmp
mov
inc
or
xlat
sbb
popa
in
jno
sarb
xor
fidivl
cmp
in
fsubrs
cmp
xchg
inc
push
cmp
fcoml
xor
in
pop
loope
je
cmp
jl
xchg
dec
mov
fbstp
push
test
cmp
mov
cmpsl
bound
test
pop
lret
cmp
outsl
lret
scas
and
dec
or
movsb
add
pusha
mov
shll
jmp
cmp
jne
cmp
cmp
mov
rorb
cmp
or
cmp
inc
mov
sub
xor
jo
add
cmpsl
sti
adc
mov
in
pop
xlat
pop
pop
cmpsb
in
jne
xor
adc
adc
adc
cmp
aad
push
adc
jno
negl
les
cmp
test
xchg
iret
jecxz
sarb
dec
xchg
loop
scas
push
movsl
sbb
ja
into
xor
and
sub
test
cmpb
stos
mov
pop
push
es
divl
cmp
xor
popa
jp
adc
addr16
xor
cmp
fnstenv
inc
das
xor
repnz
loop
xchg
mov
mov
push
fisttps
repnz
sahf
mov
test
int3
pop
sbb
and
cmpb
outsb
stos
lods
inc
sub
sub
mov
ss
lret
adc
out
call
sub
and
aad
inc
insb
adc
test
pop
xor
bnd
shlb
insl
xchg
popf
in
lods
xor
mov
adc
in
dec
dec
std
rclb
es
cmp
mov
and
push
test
into
sub
in
xor
repz
cmp
xchg
shlb
push
pop
add
push
sub
mov
adcl
inc
jl
std
cmp
fidivl
loope
sbb
test
sbb
push
mov
cmp
mov
call
scas
notb
iret
ret
shlb
insb
nop
sbb
out
xchg
jle
sbb
xor
sbb
arpl
pop
stc
and
fsubr
addr16
cmp
cmp
insl
inc
idivb
cmc
cmp
dec
jno
rolb
rclb
in
push
and
adc
jae
andb
cmp
fisubl
and
push
testb
shlb
mov
shlb
jge
mov
das
rcr
nop
xchg
andb
into
jmp
xchg
xor
rcl
sub
dec
xor
cltd
cmp
enter
in
pop
inc
cmp
into
andl
out
jb
das
add
cmp
mov
jp
loopne
mov
into
dec
jbe
std
cmp
xchg
cmp
into
int3
pop
add
inc
loopne
xor
es
add
cmc
xchg
pop
mov
ljmp
inc
mov
das
fisttpll
push
ss
stos
cmp
push
pop
gs
lods
mov
icebp
xchg
popa
jns
outsb
lea
ja
ss
mov
cmc
cmp
lods
sub
scas
nop
test
adc
test
testl
orb
add
or
or
sahf
jne
dec
mov
cmp
sub
xor
pop
mov
push
sub
cmpl
jp
ds
cli
mov
cmp
sbb
lret
cmp
add
cmp
movsl
push
out
cmp
xchg
cmp
sub
push
dec
jo
pop
ss
dec
enter
jb
aas
mov
pop
hlt
cmp
popa
sbb
cmp
sarb
js
push
loope
lcall
insb
pop
cmp
out
jg
loopne
or
or
pop
in
cmp
xchg
jnp
int3
cmp
push
inc
mov
lea
add
sbb
jbe
cmp
cli
sub
cmp
lods
repz
out
fcomp
jmp
cmp
leave
adc
call
cmp
shl
cmp
in
clc
add
adc
xchg
sbb
mov
mov
sahf
pop
xor
lods
mov
or
imul
inc
fldcw
and
xor
add
cltd
js
dec
mov
aam
pop
cmp
ss
call
push
mov
scas
add
and
inc
jp
test
cmp
fmulp
mov
shl
and
adc
das
pop
add
insb
xlat
pop
add
mov
in
and
adc
daa
stos
mov
push
cmp
scas
jg
iret
xchg
add
xchg
sub
push
cmp
mov
int3
imul
xor
aam
or
sarb
ret
jl
add
pop
cmp
inc
lret
cld
mov
dec
push
cmp
pop
enter
pop
cmp
shlb
loop
imul
mov
popa
push
sbb
mov
sub
cs
mov
and
int
mov
add
or
cmp
cmp
out
js
push
je
xor
mov
in
inc
mov
xchg
xchg
sub
ret
mov
cld
jge
jne
out
cmp
or
out
cmp
pop
int3
sub
cmp
cmp
popf
mov
in
int3
sbb
xor
test
mov
cmp
cmp
jmp
xlat
clc
cmp
add
or
outsl
idivb
cmp
dec
mov
add
jmp
iret
xchg
ror
idivl
mov
fidivrl
push
xlat
popa
cmp
out
cmpb
and
dec
jl
cmp
pop
popw
add
in
cmp
aaa
mov
cmp
mov
xor
loop
scas
or
mov
push
repz
push
sub
int
enter
jmp
loope
test
shlb
dec
xchg
in
push
cmp
sbb
in
push
hlt
xchg
cs
out
xor
mov
mov
scas
inc
sub
sti
xor
mov
in
cmp
xor
dec
mov
gs
out
and
sub
cmp
push
mov
sub
rorl
xor
inc
adc
hlt
aad
adc
mov
cmpl
mov
leave
test
dec
sub
dec
cmp
cmp
sar
push
rcrb
push
pusha
cmp
cmp
stos
aad
scas
cmp
aam
mov
xor
out
dec
inc
and
or
push
push
dec
inc
cmp
ja
and
lcall
adc
fcmovne
mov
daa
rcrb
mov
sbb
cmp
and
adc
jne
mov
inc
xor
or
mov
cmp
addr16
cli
and
mov
in
int
cmc
cmpsb
lret
fincstp
jae
imul
sub
add
dec
xchg
sub
clc
bound
repz
cmp
outsl
fstpl
out
or
and
xchg
sbb
adc
lea
aas
fwait
mov
shr
cmp
cmpsl
mov
movsl
cmp
dec
cli
rorb
and
bound
push
add
clc
shlb
fmul
popf
cmp
xchg
lret
xchg
in
cmp
mov
pop
loope
das
out
mov
ficompl
cmp
dec
fiadds
into
sbb
fmul
out
or
jnp
jp
cld
push
fisubs
and
movsl
cmp
outsl
push
sub
jmp
pusha
cmp
adc
call
fwait
jl
cmp
mov
les
outsb
mov
add
push
inc
jle
pop
stos
fdivs
mov
add
clc
movsb
lds
aaa
mov
in
cli
pop
pop
inc
lcall
pop
bound
clc
pop
nop
cmpsb
hlt
cmp
ds
divb
cmp
test
cmp
inc
or
or
and
rcrb
shlb
imul
cld
push
bound
mov
xchg
cmp
shr
dec
or
pusha
push
xor
dec
cmp
js
dec
jl
mov
pop
dec
mov
bound
sbb
cmp
xor
mov
xchg
insl
jae
rcrb
std
sub
push
hlt
cmp
cmp
pop
add
cmp
cmp
push
jo
or
sub
subb
cmp
add
mov
insl
daa
jbe
cmp
stc
xchg
es
in
cmc
aas
cmp
popa
test
nop
inc
cmp
les
inc
shlb
lods
stos
scas
rolb
inc
loopne
fwait
divb
fldenv
pop
js
addl
pop
xchg
sub
jmp
mov
jp
adc
add
jl
cmp
enter
or
push
jecxz
lret
lock
push
out
cmp
push
adc
fmuls
iret
lds
ret
scas
mov
test
mov
add
mov
idiv
test
cmp
call
mov
dec
pop
or
and
ljmp
out
cmp
cs
mov
jo
cmp
xor
mov
addr16
cmp
xchg
inc
cmp
mov
pop
dec
cltd
rorb
jb
sub
test
cmp
pop
iret
jne
ljmp
outsb
lds
aad
int
loop
jns
sub
push
sbb
xor
add
mov
incb
dec
test
push
adc
jne
rcrb
sbb
sahf
mov
shl
out
loope
mov
xchg
jbe
mov
mov
scas
jg
or
cmpsb
out
and
push
ljmp
sbb
es
sub
xor
mov
pop
add
mov
cld
arpl
clc
dec
scas
inc
dec
or
and
add
daa
jecxz
mov
stc
sbb
cmp
sarb
enter
jns
fistpl
insb
cli
xor
cmp
add
mov
push
aad
cmp
adc
xor
push
shrl
mov
xchg
outsl
out
jo
mov
inc
cld
xchg
sub
jbe
nop
add
push
jmp
add
mov
inc
and
roll
push
cmp
cmp
aam
enter
push
cmp
add
mov
push
aaa
outsl
fcoml
aad
sub
or
dec
xchg
dec
insb
xor
jb
subl
dec
and
lods
in
negb
outsl
jb
xchg
lret
pop
out
fwait
addl
cmp
cmp
or
insb
js
cmp
jb
sarb
leave
sub
mov
push
sar
mov
adc
out
minps
cmp
fmul
popa
adc
mov
sub
xor
popf
fs
mov
adc
js
or
sub
mov
lock
sbb
sbb
xor
ljmp
push
sub
fildll
cmp
xchg
test
jb
sbb
xorb
iret
cmp
inc
or
enter
ss
leave
or
shll
je
add
les
popf
pop
or
and
push
stos
dec
adc
or
neg
and
jbe
cmp
push
push
test
cmp
insb
pushf
xor
rcr
mov
mov
stc
mov
sub
jp
push
loopne
sub
nop
lret
push
fwait
xor
int
and
fadds
jb
mov
or
daa
mov
imul
sti
dec
and
cmp
adc
insb
iret
fidivrl
pop
add
xchg
repnz
rorb
jae
xlat
adc
xchg
lock
push
dec
out
mov
jne
sti
xor
and
roll
mov
mov
xor
dec
cmpl
jnp
sub
rolb
inc
in
cmc
sarb
sbb
js
sub
enter
cmpsl
add
cmp
inc
ja
add
subb
daa
xor
orl
sbb
das
bound
add
cmpsl
arpl
cmp
dec
or
loop
outsl
inc
lret
mov
enter
cmc
adc
int
mov
mov
or
cmp
or
sarb
inc
jg
fmuls
into
cmp
xchg
jb
leave
mov
xor
out
mov
xchg
fwait
xchg
lahf
push
cmp
push
sbb
push
repnz
lods
cmp
popf
fildl
cs
repnz
cmp
or
test
int
cmp
mov
fldl
ret
cld
mov
fcomps
das
out
cmp
and
aas
iret
lahf
jb
cmp
adc
xor
outsl
aaa
fsubl
and
cmp
aas
inc
xor
mov
lahf
or
jns
xchg
lock
movsl
push
mov
out
rclb
mov
and
sbb
nop
into
add
adc
xor
push
jl
inc
lock
ja
cmp
xchg
mov
mov
cmp
dec
icebp
or
ljmp
adcb
cmp
fs
mov
icebp
xchg
xchg
cmp
pushf
stos
push
es
leave
add
shll
xchg
xor
adc
push
jne
cmp
dec
mov
dec
lret
stc
ja
xor
push
arpl
xchg
cmp
jl
test
mov
mov
cmp
push
lahf
adc
cmp
jmp
int3
cmp
cli
add
cmp
adc
aam
or
cmp
test
data16
clc
and
mov
shll
add
incl
ror
dec
mov
dec
xor
lods
push
jmp
push
subl
mov
jns
ljmp
repz
fnsave
sbbb
push
shll
push
inc
aaa
enter
mov
flds
dec
fmul
dec
push
ss
mov
nop
iret
cmp
adcb
inc
lods
cmp
mov
pop
dec
in
add
inc
divl
mov
or
or
sarl
outsb
and
cltd
jge
jmp
outsl
push
subl
lahf
test
stc
fdivp
loopne
cmp
lcall
xchg
cmp
in
out
clc
dec
bnd
cmp
pop
cld
sub
cmp
and
inc
decl
push
loop
cmp
sbb
outsb
fsts
inc
repnz
in
and
dec
dec
and
cmp
hlt
bound
push
enter
mov
dec
pop
cmp
aas
movsb
cmp
dec
sub
inc
sarb
cmp
lret
mov
cmp
add
jg
or
cmp
sub
call
xchg
lahf
cltd
mov
and
ss
cmp
movsb
imulb
jb
addr16
or
cs
push
dec
mov
sub
clc
jmp
andl
cmp
fs
cmp
clc
aad
ljmp
push
sbb
aaa
and
sysenter
or
test
pop
jb
fld
lea
aas
jbe
sbb
sarl
int3
nop
mov
push
or
scas
mov
mov
cmc
mov
pop
fs
roll
lods
outsb
fwait
or
mov
sti
and
das
jbe
cmp
pop
cld
push
push
cmp
xor
aaa
xchg
mov
ss
xor
or
mov
addps
cmp
inc
cwtl
fnstsw
test
push
fdivl
shll
cmp
imul
int3
pushf
adc
inc
xchg
or
sar
cs
dec
jo
orb
xor
pop
fsubs
dec
fisubl
rolb
test
jmp
lds
ds
sahf
popa
movsb
rcr
cmp
mov
scas
or
lcall
sarl
xor
jo
leave
fsub
insl
mov
xor
pop
ss
sub
shll
iret
ja
xchg
loop
sub
ret
out
mov
ljmp
xlat
fimuls
inc
mov
mov
movsl
call
push
repnz
mov
adc
rcrl
insb
sub
mov
and
lock
mov
or
sbb
cwtl
add
mov
jge
pop
jae
push
cmp
or
fisttpl
cmp
push
push
push
sub
addl
push
mov
std
pusha
enter
and
leave
cmp
jg
xor
test
sbbl
mov
sub
cmp
or
and
loop
dec
call
lret
cs
into
cmp
jbe
pop
loopne
bound
and
into
mov
xor
test
cmp
or
sarl
popa
test
pop
or
in
dec
jo
jo
imul
hlt
and
cld
mov
sbb
xor
and
stos
sbb
loop
jb
cmp
sbb
mov
test
cmp
adc
mov
jecxz
xor
sahf
and
scas
adc
sub
jne
fisubrl
sbb
popa
sbb
gs
jp
aas
cli
ret
cmpb
ss
stos
pop
mov
dec
adc
cmp
popf
sub
lret
nop
cmp
and
pop
xchg
test
jecxz
bound
sbb
pop
or
test
adc
std
mov
cmp
fsubrl
mov
fnsave
inc
dec
out
mov
out
dec
hlt
sbbl
daa
xor
push
mov
inc
movsl
mov
mov
aas
cmp
sbb
lcall
lods
mov
popf
fwait
sub
inc
sbb
jns
inc
fidivs
ret
mov
cwtl
dec
jmp
jae
ret
addr16
cmpsb
or
cmp
sahf
cmp
sub
lcall
cmp
dec
jge
dec
js
lahf
and
lock
add
int
fbstp
cmp
jbe
fs
add
push
jb
mov
mov
lods
mov
cli
pop
dec
cmp
pushf
inc
dec
clc
cmp
and
sbb
xchg
fnsave
fdivrl
sahf
pop
adc
lds
cli
dec
xchg
sbb
icebp
aam
cmp
inc
lret
mov
xor
jecxz
jne
xor
mov
push
cmp
cmp
pop
pop
pop
sub
cmp
or
incl
enter
movsl
fisubs
jecxz
cmp
pop
popa
arpl
inc
inc
pushf
dec
sub
jnp
scas
push
popf
or
mov
mov
icebp
adc
mov
fadds
ljmp
add
hlt
xor
sbb
ss
adc
push
enter
fists
cmpsl
into
scas
adc
jp
cmpsb
in
sub
clc
xor
mov
jns
stos
test
sbb
loope
sub
mov
into
imul
repz
jo
mov
cmp
sub
test
xchg
sbb
xchg
shrb
aaa
vmovaps
adc
fnstcw
les
xchg
xor
push
sub
adc
jnp
inc
adc
cmp
stc
pop
adc
into
dec
int3
mov
popa
cmp
xchg
je
mov
cmp
arpl
dec
dec
jg
cmp
push
mov
sbb
cmp
mov
imul
mov
mov
cmp
fiaddl
cld
cmp
mov
cltd
test
cmp
iret
push
sarb
cmp
mov
in
clc
add
fcmovnb
icebp
pusha
xor
push
shl
or
mov
jo
cmp
or
popl
aas
negl
outsl
and
hlt
dec
cmp
mov
shll
fdivrl
repnz
cmp
test
push
lcall
and
xlat
mov
in
jmp
dec
jne
cmp
pop
and
xor
and
cmp
mov
cs
or
add
fimull
repnz
pop
or
into
sbbl
js
sarl
jo
fcoml
std
shrl
dec
push
xor
mov
cmp
jge
jecxz
adc
jbe
xchg
or
das
xor
test
dec
xor
fcom
fdivrl
notl
mov
cmp
nop
push
lahf
loopne
adc
xor
or
cmp
and
aaa
cld
or
add
fs
lods
cmp
gs
ret
and
sbb
cmc
loop
or
cwtl
test
fsts
sub
lret
xchg
aas
push
mov
ret
fwait
es
int
jo
loope
sub
inc
out
sub
sti
std
dec
push
xor
xchg
mov
mov
repnz
leave
jb
loope
cmp
in
adc
jb
repz
cli
lea
fidivl
inc
pop
mov
and
dec
push
inc
out
in
sub
jne
xor
or
icebp
cmp
mov
push
in
and
xor
dec
divb
xchg
out
push
lcall
repz
mov
cmp
inc
jecxz
cmp
out
clc
cmp
movsb
xlat
xchg
sub
dec
aad
mov
jbe
inc
xor
icebp
inc
mov
sub
aam
cmp
ja
in
push
shlb
mov
sbb
inc
push
cmp
lods
xor
or
inc
test
sbb
cmp
dec
pop
cmp
data16
sbb
add
ss
andl
enter
cs
dec
xchg
es
cmp
imul
or
xor
insb
inc
cmp
into
pop
orl
mov
adc
mov
sbb
fnsave
jae
add
sar
sub
clc
inc
pop
push
push
sbb
cmp
sbb
cmp
fcoms
dec
insl
or
adc
xchg
push
enter
adc
sbb
add
ja
lods
int
cmp
sarb
in
cmp
icebp
or
out
mov
sbb
daa
je
inc
push
xchg
adc
pusha
pop
lret
jbe
jg
xlat
mov
out
test
les
xchg
out
mov
xor
push
xorl
popa
and
or
xor
shr
jb
sarb
lds
and
adc
mov
leave
aad
cmpsb
dec
cmp
cltd
jle
sub
sarl
sub
inc
outsl
lret
xor
mov
pushf
out
mov
push
out
inc
ja
mov
and
jge
movsl
xor
and
js
mov
cmp
imul
cmc
fidivs
xchg
mov
xor
scas
aaa
xchg
jo,pt
or
cmp
aas
pop
outsl
mov
push
cmp
push
gs
test
cmp
insb
out
fisubl
xor
cmp
pop
cmp
mov
dec
jl
inc
cmp
int3
into
add
rorb
cmp
push
mov
jo
jmp
mov
movsl
adc
movl
push
dec
cmp
lret
dec
enter
aaa
stos
mov
in
aam
into
clc
rclb
pusha
ss
test
sbb
and
aas
sbb
xor
js
clc
and
adc
pop
gs
mov
mov
lret
cmpb
fcoms
and
scas
repnz
int3
mov
dec
and
aas
shlb
shrb
dec
or
xor
dec
xlat
adc
out
jb
xor
rorl
sbb
jl
and
int
mov
jle
enter
mov
loope
movsb
jmp
lret
sub
dec
test
pop
fdivl
xor
inc
jb
fidivl
pop
or
aaa
sbb
cmp
daa
js
mov
push
test
adc
hlt
cmp
cmp
xchg
add
xor
pushl
out
lcall
pusha
dec
dec
pop
or
lcall
pop
xchg
cmp
push
lea
outsl
int3
js
lret
mov
ficompl
shlb
sub
shlb
es
fmul
and
out
add
cmp
popa
data16
push
out
stos
dec
decl
repz
imul
cmpsb
lea
arpl
or
aam
mov
jne
cmc
cmp
jnp
cmp
mov
nop
or
and
xchg
cmc
dec
sbbb
leave
lods
pop
mov
out
xor
bound
mov
cmp
mov
call
hlt
arpl
cld
dec
jge
mov
shll
jle
pop
mov
mov
xchg
sti
stos
scas
and
cmp
lea
clc
enter
xor
mov
push
fstps
daa
lret
xor
jg
inc
sub
sbb
dec
add
outsb
call
lret
mov
pop
cmp
shl
mov
inc
xor
and
pop
adc
cmp
nop
outsl
inc
shlb
xlat
add
ja,pn
mov
icebp
imul
mov
add
cmp
fmuls
add
sbb
cmp
xor
cmc
xor
lock
mov
push
cmp
dec
in
iret
fwait
sub
push
jb
loopne
xor
sbb
mov
jmp
ret
imul
pop
xchg
gs
leave
jns
movsl
cmc
lahf
ss
push
insb
imul
sub
inc
lret
mov
loopne
and
icebp
adc
or
or
lahf
push
inc
movsl
popf
xor
mov
mov
repz
js
rcll
enter
inc
cmp
jbe
and
mov
decl
jle
call
adc
and
es
nop
jbe
int3
pop
sub
cld
test
xor
xor
leave
jo
jmp
insl
mov
pusha
xor
movsb
enter
sbb
mov
pop
xor
je,pt
add
cmpb
cmp
shl
cmp
or
test
cmp
adc
cmp
cltd
xlat
into
inc
ljmp
shlb
or
fidivrl
sub
cmp
sar
sub
outsl
xor
mov
sub
mov
fwait
data16
jb
cmp
push
adc
sub
stos
sbb
call
mov
insb
inc
enter
ss
sahf
xorb
imul
leave
xchg
jl
out
jnp
stos
and
mov
adc
mov
imul
sub
cmp
sbb
pop
repz
outsl
sub
shl
dec
fs
shll
xchg
nop
in
call
scas
sarl
xor
adc
arpl
jbe
int3
or
mov
std
mov
jne
arpl
lods
mov
cmpsl
aad
mov
shrb
or
inc
mov
rcl
inc
push
cmp
ja
sbb
jbe
add
enter
ss
jno
pusha
ret
push
inc
xor
xchg
les
sbb
into
enter
lods
inc
jmp
xlat
aaa
int
jno
adc
ror
or
jne
push
cli
shr
push
pusha
subb
cmp
inc
cmp
dec
and
xchg
push
cmc
movsl
xor
jle
mov
stc
xor
and
and
xchg
cwtl
cmpsl
push
pop
insb
ret
lahf
cmp
popa
aaa
js
add
add
push
bound
xor
lods
leave
scas
mov
data16
dec
pop
jg
mov
jo
pushf
push
and
jno
out
fidivrl
pusha
inc
add
sbb
jg
xchg
mov
pop
adc
adc
shrl
aaa
ret
lock
cmp
or
dec
and
xor
and
les
mov
cmp
sbb
into
movsb
cmpsl
or
fistpl
xor
rorl
and
fsubrl
ja
and
cmp
mov
mov
dec
popf
addr16
inc
movsl
dec
adc
shlb
and
les
sbb
cmp
fsts
outsl
imul
call
xchg
dec
push
sti
cmp
mov
jo
cmpb
imul
cmp
jnp
xchg
sub
lds
enter
pop
cmp
int3
daa
inc
jo
into
cmp
jle
or
andb
stos
mov
popa
cmp
push
or
into
call
push
repnz
test
fistpl
jnp
out
ret
in
inc
sub
ja
sub
jno
aaa
fidivrl
and
or
lahf
cmp
inc
stos
jbe
mov
xor
jp
inc
pop
xlat
ds
lret
mov
add
adc
clc
mov
sbb
insb
jg
cmp
inc
lret
lea
and
xor
aad
subb
out
mov
lcall
cmp
or
pop
xor
xor
sahf
sub
cmpsl
sub
mov
mov
loop
cmp
fistpl
xor
and
dec
sub
sub
jne
int3
rcl
mov
js
adc
gs
cmp
aam
jno
mov
pushf
jb
inc
sahf
cmp
lods
fwait
jbe
aam
xchg
and
push
push
mov
into
xor
xor
flds
sbb
xchg
enter
call
jne
cltd
test
mov
in
rdmsr
xor
jmp
test
cmp
jno
inc
or
pusha
mov
and
mov
cmp
sbb
jle
mov
mov
in
sti
dec
ja
ds
mov
jmp
subl
cmp
mov
xor
cmc
jge
outsl
add
loopne
adc
add
jmp
mov
jns
outsl
jns
xchg
sub
sahf
jb
add
cmpsl
aam
test
push
cmp
ret
lock
or
dec
xor
xlat
xchg
stc
or
xchg
cmp
xchg
cmpsl
int3
mov
cmp
cltd
xchg
outsb
ja
iret
xor
xchg
or
dec
ret
bound
pop
pusha
enter
cmp
in
push
pop
push
outsb
push
xor
call
cmp
rorb
repz
aad
and
push
xor
outsb
js
pop
push
xchg
mov
cli
pop
mov
jmp
mov
fnstsw
idivl
mov
enter
xor
outsl
cmp
clc
fcomps
movsl
divb
or
adc
incl
jns
jae
shrl
add
push
mov
mov
stc
sub
mov
cmp
int3
mov
sarb
push
int
sub
ds
jle
sti
and
leave
pop
pop
insl
cmp
mov
and
xchg
add
ss
and
mov
test
mov
xor
push
sbb
in
idivb
xor
out
pop
dec
lahf
jp
lret
aaa
sti
pusha
pop
jmp
dec
cmp
addr16
jne
dec
jo
dec
or
cmp
in
js
push
icebp
and
cmp
shlb
inc
xor
add
not
add
pop
pop
dec
xchg
test
lret
mov
sbb
ja
mov
inc
add
xlat
xor
push
cmp
ds
test
std
aas
pop
test
and
imul
arpl
cmpsl
shlb
xor
divb
test
loopne
aaa
in
jns
mov
xor
adc
cmp
adc
sub
push
push
mov
cmc
fstpt
leave
insl
sub
into
push
je
xlat
cmp
lea
cmpsb
dec
jb
dec
dec
add
in
mov
mov
ljmp
daa
call
jle
dec
inc
inc
xchg
adc
sbb
sbb
xchg
fdivs
mov
movsl
pop
aaa
testl
sbbl
xchg
test
int3
mov
fcompl
cmp
in
inc
fisubrl
mov
insb
js
sub
loop
xchg
imul
or
xor
sub
mov
mov
and
dec
cmp
fisubs
call
enter
adc
fcoms
pop
loopne
shld
push
rolb
ja
in
push
jne,pt
cmp
rcll
ret
push
rcr
stc
cld
repz
sbb
cwtl
push
mov
sahf
xor
and
cmc
aam
xor
push
or
ficompl
xchg
add
xor
jp
ss
lahf
mov
sub
jns
pop
in
cmp
push
loopne
inc
aas
pop
xchg
aam
call
popf
pop
cmp
sbb
mov
cmp
dec
jge
cmp
add
cmp
inc
gs
insb
mov
and
cmp
mov
sub
push
cmp
sub
out
ret
sub
ss
push
inc
sarb
xchg
stos
cmp
call
mov
cmp
cwtl
inc
lds
or
cmp
cli
orb
sbb
cmp
pop
lret
and
sbb
mov
sbb
loop
sub
int3
sbb
out
adcl
sarb
or
push
rcl
fbld
out
push
ss
mov
data16
faddl
or
sub
dec
jo
jb
lds
and
mov
mov
mov
dec
addl
sbb
xchg
mov
jo
shlb
mov
mov
dec
testb
mov
cmp
stos
dec
mov
mov
sbb
pop
dec
imul
cmp
shrd
out
sbb
cmp
and
out
stos
adcb
or
ret
inc
cwtl
pop
mov
lock
repnz
and
dec
stos
add
mov
fmuls
jmp
mov
xchg
push
push
mov
pop
cmp
mov
data16
out
ss
into
cmp
cmp
loope
sub
sbb
or
shlb
cwtl
xorb
js
push
cmp
lahf
mov
mov
jae
mov
dec
mov
in
dec
cmp
mov
mov
and
inc
icebp
xor
cmp
enter
dec
int
fnstcw
xor
stc
cmc
cmp
push
stc
cmp
cmp
or
jge
cmp
xor
mov
push
movsb
fcmovne
xchg
sarl
fsubrp
popf
je
pop
lods
xor
out
int3
adcl
xchg
xchg
bound
xlat
push
out
call
jb
lret
lock
add
outsb
pop
mov
mull
push
add
mov
test
inc
out
xchg
fistl
shlb
ret
add
cmp
out
cmp
pop
lcall
fistl
leave
call
popf
iret
add
or
xor
inc
inc
sti
xchg
or
xchg
jp
mov
rcrb
pop
aad
orb
cmp
fldcw
clc
into
mov
cmp
xor
fisubl
inc
icebp
dec
ret
rcr
sub
adc
xor
iret
jne
mov
lods
mov
aaa
inc
cs
cmp
pop
sub
lock
hlt
dec
sub
popa
push
fwait
xor
mov
lret
xor
int3
add
loope
sbb
ret
inc
movsb
call
pushw
push
notb
adc
jnp
leave
mov
pusha
inc
insl
gs
or
ret
dec
ret
or
jns
or
cmp
and
pop
adc
imul
push
mov
out
cmp
test
or
repz
xor
lcall
enter
test
add
sbb
idivb
lea
xor
test
mov
pop
pop
rcrl
sbb
xchg
sbb
cmp
xlat
sub
insl
les
out
or
and
cmpl
mov
adc
push
jae
pop
xor
pushl
push
cmp
out
iret
cmp
cmp
and
or
cmp
shr
popa
push
jae
fldcw
int3
xor
jo
cltd
cld
mull
and
and
dec
mov
stos
mov
inc
sti
cmp
and
cmp
jbe
jl
arpl
ret
add
inc
xor
or
add
mov
cmp
call
lret
add
push
shr
std
and
mov
orl
insb
ret
xor
inc
mov
sub
dec
js
jb
pop
cmp
pop
lock
movsl
movsb
cmp
cmpsb
xor
lcall
loopne
mov
test
test
es
mov
xor
pop
leave
fwait
mov
add
enter
into
stos
cmp
orl
pop
fiadds
cld
cmp
in
loope
or
mov
pop
loop
xchg
xor
sub
mov
and
mov
pop
leave
lock
stc
and
adc
or
movsl
cmp
repz
push
cmpsl
xor
call
xor
xchg
mov
cs
mov
jle
adc
mov
jl
dec
jae
loopne
pop
nop
mov
lret
aaa
icebp
ljmp
aaa
dec
cmp
jecxz
mul
lret
fs
xchg
enter
cmp
dec
mov
sarl
lods
notl
xchg
cmp
jne
in
int3
push
push
pop
inc
enter
sbb
cwtl
mov
xor
and
adc
xor
cwtl
mov
dec
out
jge
mov
xor
and
out
add
dec
das
mov
sub
fdivp
cmp
jl
popa
cmp
inc
pop
in
cmp
test
movsb
dec
mov
dec
cmp
mov
push
cmc
jp
jo
mov
out
movsl
cmp
sub
cmpb
daa
iret
jl
mov
mov
push
lret
cmp
out
je
cmp
mov
jecxz
pusha
aam
cmpsl
ret
js
sub
roll
push
inc
call
lret
cmp
push
dec
xlat
jns
cld
imul
iret
jne
inc
cmp
dec
stos
pop
shlb
fnstcw
mov
cmp
sbb
inc
or
cmp
sub
sarb
mov
push
xchg
sbb
sub
inc
xor
xchg
enter
or
cmp
in
mov
sub
movsb
cmp
rcrb
lds
divb
mov
aam
ss
cld
cmp
mov
push
sub
mov
mov
fstpt
lcall
push
cmp
push
int3
mov
jle
cmp
xor
push
adc
cmp
loopne
int3
mov
cmp
push
daa
pusha
rcr
fistl
jmp
test
jb
mov
cmp
and
push
xor
shlb
ljmp
call
jmp
xchg
cmp
rcrb
xchg
xchg
inc
adc
jg
ja
icebp
mov
sbb
mov
pop
mov
ret
movsl
test
fsubs
adc
xchg
sbb
cmp
lret
aas
in
inc
cmpsb
les
adc
xchg
cmp
jo
cmp
dec
xchg
dec
xchg
mov
cmp
rolb
sbb
pop
and
sarl
xor
add
sahf
cmp
ds
aam
jmp
jl
inc
cmp
jp
les
test
imul
pop
rcrl
xchg
lock
iret
adc
stos
adc
mov
cmpb
add
aam
divb
inc
mov
cmp
mov
mov
cmp
cmpsl
push
or
js
pop
add
shr
cmp
mov
cmp
pop
xchg
mov
xor
fstps
ja
and
pop
pop
subl
test
cmp
add
push
hlt
push
cmc
adc
xor
dec
push
xorb
inc
fists
repz
and
loopne
daa
add
cmp
sub
mov
int3
inc
sub
or
pop
mov
push
jne
add
imull
insb
test
sti
das
movsb
mov
cmp
pop
shrb
push
fsubr
pop
fsts
das
inc
nop
adc
cmp
dec
fiaddl
ret
cmp
mov
sub
stos
xor
cmp
call
xchg
iret
sub
out
sbb
lret
movsl
shlb
inc
imul
add
add
adc
and
sbb
sub
clc
xor
test
push
popa
pop
or
xor
mov
ss
mov
mov
clc
xor
mov
cmp
outsb
int3
enter
cmp
mov
dec
mov
add
sti
lds
mov
aaa
shl
cmp
lret
cmp
shrb
cli
pop
repz
xor
inc
dec
push
mov
xor
inc
mov
pusha
jmp
push
ficoml
mov
jmp
jbe
and
cmp
in
test
mov
inc
fsubp
cmc
cmp
shrl
jecxz
add
jae
jp
mov
xchg
rolb
call
leave
add
outsb
rcr
inc
fadd
ja
pusha
inc
sub
aaa
daa
dec
mov
int3
add
push
sub
mov
insb
jp
sub
adc
jle
ret
sub
dec
cmp
xor
sub
sbb
mov
mov
aam
gs
sub
cmp
imul
and
jne
add
enter
xor
rorl
cmp
rolb
mov
scas
mov
and
cmp
insl
dec
repnz
cmp
sbb
cmp
push
mov
cmp
dec
mov
mov
sarb
aam
iret
jb
and
xor
xchg
enter
dec
cmp
test
nop
out
jl
lds
xor
cmpsl
dec
in
cmp
xor
push
cmp
cmp
cmp
aam
scas
mul
repnz
mov
mov
cmp
sbb
sar
sub
xor
lret
addb
dec
out
push
pop
or
fsubrs
clc
or
jbe
int3
mov
lret
popf
cmp
inc
add
rolb
inc
les
sub
iret
jg
pop
xor
mov
inc
repz
leave
cmp
lds
out
adc
or
lahf
add
inc
push
fstpt
sbb
cmp
pop
es
jp
fsin
arpl
fnstenv
inc
pusha
inc
enter
xor
adc
mov
and
cmp
push
daa
cmpsb
loop
call
push
into
dec
cmp
aad
shr
in
inc
add
mov
and
xor
test
cwtl
mov
cmp
dec
cli
cmp
mov
cmpsl
es
stos
xor
lock
pusha
mov
jae
and
cli
jl
xor
mov
xor
fs
adc
cmpl
cmp
fisubrl
dec
mov
call
lahf
cmp
lret
stos
cmp
sub
xor
cmpsl
add
xchg
cmp
xor
mov
daa
adc
or
xchg
or
mov
or
jge
test
repz
xlat
xor
adc
bswap
fwait
mov
lahf
jno
cmp
fldt
mov
sbb
mov
pop
pop
cmp
cmp
push
sbb
subl
jl
iret
xor
mov
xor
test
push
and
cmp
mov
inc
jecxz
cmp
rorl
mov
dec
jns
mov
push
cmp
xor
test
and
mov
lods
push
cmp
outsb
cs
dec
imul
es
das
cmp
test
dec
shr
mov
les
mov
push
xchg
xchg
pop
loopne
add
mov
mov
jno
stos
cmp
popf
pop
fs
ss
cmpb
fsubr
jb
sub
enter
push
sbb
sub
sbb
or
mov
nop
and
ret
std
add
add
fs
int3
add
xchg
add
cmp
leave
cld
data16
lock
loopne
lret
stos
xor
adc
imull
fs
cmp
je
jg
mov
cmp
clc
push
jle
inc
xor
mov
sti
adc
add
xchg
loopne
and
cmp
sub
xorl
adc
or
fucomip
dec
cmp
jp
int3
or
inc
test
mov
cmp
jl
mov
lods
fcomps
cmp
in
sbb
cld
fisttps
inc
popa
and
into
inc
adc
dec
call
dec
insb
add
mov
adc
cmp
bswap
in
dec
into
and
dec
test
movsl
les
and
outsb
jnp
mov
and
sbb
imul
xlat
mov
mov
push
sarl
mov
imul
or
jnp
movsl
iret
xchg
aaa
inc
mov
and
into
inc
imul
cmp
ss
push
push
pop
sub
stos
shl
mov
test
clc
push
sub
pusha
mov
enter
pop
push
loopne
enter
xor
scas
cmp
jnp
sbb
data16
add
in
mov
jmp
bound
cmp
fwait
sbb
sub
cmp
sbb
lea
sbb
loopne
or
mov
push
enter
ss
stos
lahf
mov
xor
and
mov
adc
lret
gs
fsub
idivb
les
mov
sarb
add
xchg
add
inc
xor
testl
cmp
mov
pop
mov
cmp
xchg
push
inc
clc
orb
call
pop
sub
pop
ljmp
adc
adc
aam
sbb
xor
repnz
hlt
mov
xor
cmp
cmp
stc
sbb
or
movsl
enter
jecxz
pushf
outsb
mov
popf
sar
lock
cmp
and
mov
shl
repz
cmp
pop
mov
lods
ret
in
adc
test
fmul
cwtl
retw
push
loope,pt
and
xor
fdivp
fsubs
xor
out
pop
cmp
les
xchg
insb
mov
pusha
jmp
mov
xor
mov
push
xor
out
jp
push
cmp
and
sbb
and
pop
adc
xor
iret
xchg
push
cmp
dec
es
stc
test
clc
mov
cmp
test
push
jecxz
cmpsl
arpl
sbb
and
and
repnz
in
pop
inc
aaa
sub
in
push
jmp
ja
xlat
cmp
jno
jecxz
pop
loopne
mov
push
scas
cmp
adc
cmp
cmp
stos
rcll
repnz
mov
mov
fwait
daa
dec
fists
sub
jno
iret
aas
ror
adc
cmp
sub
outsb
push
sbb
sbb
int
xor
sbbl
jp
in
mov
lea
js
cmpb
jmp
add
push
shr
movsl
and
pop
aad
shlb
ljmp
fidivl
lods
cmpsb
cmp
adc
xchg
cmp
push
scas
cmp
sub
mov
mov
aaa
mov
and
ljmp
lcall
sub
add
cs
mov
cmp
adc
mov
and
mov
inc
mov
sarl
mov
int
test
jae
cli
cmp
lock
in
cmp
cmp
cmp
andb
jg
xor
fistpl
add
xor
sbb
test
xor
iret
push
jl
aaa
inc
jae
je
sarb
enter
xor
sub
inc
fcos
adc
cmp
and
ret
xor
lea
jl
add
adcl
mov
xor
sub
push
popa
repnz
cmp
lds
addr16
inc
call
cmc
xchg
inc
inc
inc
lret
and
sbb
jae
cmp
lahf
lcall
aad
cmp
pop
ds
xlat
cmp
mov
jb
push
push
ficompl
in
xor
enter
aaa
sub
or
js
rcrb
cli
push
inc
int
mov
pop
dec
mov
test
mov
push
or
rcl
adc
add
mov
fidivrs
outsb
ss
jmp
loopne
out
pusha
xor
jo
mov
sbb
cmp
decb
outsb
cmp
repnz
dec
cmp
push
and
cmp
mov
cmp
test
call
lods
jo
inc
mov
mov
pop
cmp
lock
inc
dec
cmp
add
add
nop
jmp
mov
push
or
es
xchg
stc
add
shll
pop
fs
pusha
or
ds
decl
xor
mov
outsl
aaa
pop
dec
xor
dec
fildll
adc
adc
cmp
pop
mov
jno
bswap
stos
sub
aaa
cmp
xor
iret
mov
int
enter
xor
cmc
inc
ret
sbb
mov
fcom
add
stc
push
xor
in
adc
sbb
into
lcall
loope
imul
dec
cmp
fiaddl
jo
iret
std
js
inc
cmp
mov
sbb
sbb
cli
stos
dec
scas
xor
test
data16
mov
sub
addr16
dec
xor
inc
sbb
cmp
js
and
mov
xchg
pop
shrb
ret
sbb
cmp
mov
test
lds
int3
pop
xchg
mov
cmp
shlb
push
adc
rcl
cmp
xchg
jmp
jnp
lods
pop
adc
cmp
out
push
gs
rorb
dec
cmp
aad
fildl
jle
jl
jecxz
xchg
mov
pushf
mov
test
decb
adc
and
test
cli
jl
jne
cmp
mov
xchg
mull
lcall
pusha
jb
cmp
clc
in
push
loopne
notl
iret
jbe
enter
sbb
pop
sbb
imul
shlb
cmp
pop
mov
in
stos
mov
add
jno
adc
enter
ss
lods
mov
lahf
jbe
pop
cmp
adc
dec
push
push
cmp
stos
push
cmp
jb
cwtl
out
add
pop
lahf
sar
or
push
arpl
dec
cltd
mov
sub
in
pop
clc
mov
mov
subb
int3
cmp
pop
ss
and
adc
dec
push
mov
fcmovnu
bound
sbb
push
movsb
mov
int
cli
out
test
popa
enter
test
adc
mov
fnstcw
add
cli
cmp
insl
mov
int3
icebp
push
mov
insb
shrb
and
loop
sub
cmp
stc
clc
mov
cmp
lea
cmpsb
xor
aaa
dec
iret
mov
in
push
out
addr16
push
js
cmp
dec
clc
sub
pop
sbb
rorb
aad
or
push
subb
sub
enter
loope
mov
test
stc
out
popf
cmp
xchg
cld
idivb
call
inc
dec
dec
cmp
push
xchg
aad
mov
cmp
push
mov
lret
in
imul
jmp
and
jl
and
adc
mov
push
pop
in
cmp
jp
decb
test
add
shr
dec
loope
sbb
jnp
pop
inc
sbb
adcl
sub
xchg
inc
adc
or
nop
push
aam
cmp
jns
mov
les
into
jl
add
cmp
pushf
push
int3
mov
sub
push
into
push
cmp
shrb
test
aam
dec
jo
icebp
or
fistl
dec
pusha
dec
outsl
jmp
inc
jo
xor
fadds
mov
cmpb
adcb
out
insl
mov
inc
xchg
sbb
repnz
lock
add
jnp
push
mov
lcall
fnstenv
cltd
mov
std
xor
cmp
cmp
addr16
add
cmp
popf
pop
and
pop
inc
adc
test
add
mov
das
repnz
and
lds
xchg
or
test
ret
and
xor
outsl
mov
push
stc
or
jle
xor
icebp
mov
repz
push
fcomps
sbb
lods
ss
fnsave
jecxz
enter
inc
hlt
jo
dec
loop
cmp
pop
or
push
cmp
repz
lret
cmp
imul
or
push
cmp
dec
adc
pop
pop
mov
aaa
sbb
stos
aas
loopne
adc
pop
cmc
add
mov
shll
idiv
inc
cmp
addr16
or
repz
shrb
and
cli
cmp
push
xor
push
inc
push
mov
add
clc
or
lods
mov
jmp
pusha
enter
test
cmp
cmp
sub
jbe
mov
repz
or
fidivl
into
push
rol
push
cmp
jp,pt
imul
adc
pop
inc
dec
out
rolb
dec
shr
push
cmp
jl
jne
loope
inc
test
push
mov
test
jnp
add
mov
dec
mov
loope
in
or
push
or
sbb
xor
addl
and
icebp
std
cmp
repz
flds
std
ret
sub
xchg
mov
and
popf
xor
add
fdiv
repnz
addl
imul
mov
or
lods
cmp
cmp
sub
pop
cmp
sub
and
cltd
mov
xlat
xor
mov
xrelease
pop
mov
mov
mov
popa
cmp
mov
xor
pop
ljmp
jnp
mull
jae
loop
fistpll
cmp
sbbb
cmp
mov
fs
mov
imul
mov
in
dec
mov
loope
lods
xor
mov
mov
ss
mov
dec
pop
sahf
iret
mov
fs
clc
aaa
nop
cmp
fsubs
xor
or
cmp
stos
mov
fldenv
sub
in
stc
ja
xlat
pop
fnstenv
aaa
data16
lea
push
cmp
cmp
inc
call
mov
hlt
jae
cmp
or
adc
jae
cmc
push
rcll
sub
jns
mov
repz
inc
fidivrs
pop
sarl
jmp
mov
lcall
cmp
mov
mov
jae
pop
mov
push
or
cmp
xor
dec
fwait
aam
adc
mov
pop
xchg
call
cmp
cmp
xchg
pop
mov
xchg
shr
fbstp
ljmp
xor
aad
sub
inc
addr16
stos
in
cmp
cmp
mov
dec
cmp
or
pop
jae
cmp
int
cmp
lods
insl
loope
mov
mov
inc
clc
pop
cmc
sub
cmp
pop
fisttpll
nop
les
xor
imul
cmp
and
mov
push
inc
xor
ret
sbb
fistps
insb
xorb
and
sahf
test
fadd
mov
jae
out
cwtl
dec
inc
mov
sarb
mov
adc
push
sarl
xchg
stos
loop
cmp
pushf
je
sub
pop
xor
inc
push
mov
icebp
outsl
mov
inc
jle
add
xor
sbb
cmp
decl
ret
lods
cmp
les
cmp
mov
or
pop
dec
test
push
lds
sbb
loopne
add
fmull
mov
add
nop
aam
mov
sbb
scas
jmp
cmp
pop
pop
push
jns
cmp
aam
mov
mov
sub
cmp
or
cmp
insb
cltd
sbb
imul
and
jae
aaa
xor
popf
mov
mov
movsl
add
push
xor
adc
shll
and
adc
xchg
aas
cmp
repz
mov
sahf
dec
idivb
out
xchg
push
fldt
add
imul
inc
movsb
cmp
in
and
add
cltd
enter
xor
push
icebp
aad
inc
sarb
mov
xor
test
ficomps
mov
pop
outsb
mov
mov
jbe
std
aaa
jns
xchg
popa
fildll
or
orb
cmp
int
in
and
push
cmp
or
lods
mov
js
jp
xlat
dec
or
or
lcall
cmp
and
push
mov
push
fdivrl
lahf
inc
call
cmc
cmp
hlt
rcpps
add
jae
or
cmp
cltd
cmp
daa
jmp
xor
jns
jnp
xchg
adc
aam
std
data16
jb
icebp
jb
jo
mov
cmp
test
movsl
and
xor
xor
test
loopne
add
cltd
in
aam
xor
loopne
and
out
cltd
sbbl
sbb
push
into
xchg
push
push
subl
jle
mov
lret
pop
mov
jno
pop
mov
xor
sbb
repnz
cmp
xor
mov
add
movsb
iret
divl
in
packssdw
or
das
cltd
je
shll
sbb
pop
repnz
out
lret
inc
pop
xchg
xchg
xor
sub
out
sbb
mov
jb
pop
and
sbb
jns
cmp
xchg
insb
push
outsl
cli
sti
dec
adc
pop
xor
inc
mov
or
push
ret
sub
int3
callw
add
jge
push
xor
mov
mov
mov
mov
push
sbb
in
shll
xor
cmp
cmp
sbb
lods
push
pop
adc
cmp
mov
mov
lret
clc
mov
xchg
mov
sbb
imul
mov
cmc
in
adc
ret
negb
sarl
test
xor
int3
jle
cmp
inc
ja
daa
adc
push
pop
and
mov
ja
jnp
xor
fldcw
adc
inc
mov
add
dec
xor
lods
icebp
adc
sbb
out
cmp
lock
lods
sbb
in
test
cmp
push
cs
dec
sub
in
loope
ja
cli
scas
sub
mov
test
cmpsl
std
jecxz
rorl
testb
shl
fbld
sbb
call
hlt
and
push
movsl
and
rcl
mov
pop
lahf
int
bound
hlt
xor
mov
enter
jge
cmp
mov
xor
stc
andb
cmp
add
mov
jecxz
push
jnp
pop
push
cmp
pop
lea
push
xchg
aaa
cmp
mov
pop
xor
cmp
cmp
cmpsl
pop
outsl
inc
fldcw
push
enter
pop
jmp
xchg
andb
mov
fldt
mov
jg
ds
out
dec
stos
pop
popf
dec
cmp
pusha
daa
cmpsl
in
mov
mov
pusha
sub
loope
rol
js
sbb
mov
cmp
push
insb
sbb
mov
scas
xchg
aaa
insb
enter
sbb
xorb
sub
cwtl
test
adc
and
fwait
pop
rcrb
sbb
pop
jp
arpl
or
xor
xor
sbb
jno
test
and
cld
lahf
incl
sub
sbbl
aam
leave
xor
add
test
sahf
lea
and
mov
clc
sbb
sbb
in
xchg
cmp
mov
pop
sub
arpl
jecxz
adc
repz
ret
mov
cmp
fdivrs
daa
cltd
jge
inc
dec
clc
cwtl
ds
movb
shlb
cmp
lds
cmp
aam
rcll
insb
pop
sbb
cmp
xchg
cmp
popf
mov
sahf
add
jle
mov
cmp
addr16
xor
adc
inc
cmp
mull
pop
pop
movsb
jns
push
cmc
add
jb
xchg
lock
test
loop
frstor
mov
jge
xor
rolb
addr16
cmp
lods
lret
jge
inc
lcall
pusha
cmp
xor
scas
lea
loope
cmp
ss
dec
push
test
cwtl
std
enter
push
shr
mov
mov
out
xlat
lock
lret
push
sbb
dec
mov
cmp
subb
sbb
leave
sahf
je
pop
pusha
inc
and
jbe
or
pusha
mov
xorl
lods
mov
repz
sahf
fldcw
lods
xor
popa
jg
add
scas
cmp
or
cwtl
mov
sbb
jecxz
and
xor
add
mov
sub
push
mov
dec
cmp
fnstenv
xor
out
stos
test
cld
cmp
and
or
fwait
sub
les
dec
adc
lods
cmpsl
and
sub
and
push
out
jmp
in
sbb
in
enter
xor
pusha
in
sub
cmp
mov
loope
repz
jl
pop
sbb
xchg
pop
addr16
xor
cmp
xor
add
inc
xor
les
js
lret
cmp
sub
cmp
and
xchg
lea
sub
lods
cld
imull
test
cmp
das
cmp
adc
add
and
std
and
jb
data16
iret
ficoms
cmp
inc
dec
out
pop
inc
push
mov
stc
setg
imull
xor
outsb
in
fldt
pop
pop
dec
add
ja
add
ret
sub
enter
xchg
into
jo
insb
mov
mov
pop
cmp
stos
add
jg
pop
push
cmp
data16
cmp
xchg
push
shl
xlat
loop
mov
pop
fnsave
out
aas
data16
icebp
leave
lds
imul
inc
sub
jl
fsubs
push
jno
dec
hlt
std
pop
and
pop
xor
popl
jbe
push
xor
add
cmp
lcall
jmp
jmp
outsb
jae
aas
mov
cmp
aad
cmp
sub
jns
ss
jg
mov
adc
test
int3
jecxz
mov
cmp
sbb
pop
rcll
insb
xchg
mov
std
xor
inc
inc
mov
inc
cmp
shrb
fs
repnz
lcall
mov
cmp
test
push
jp
sbb
mov
jo
out
out
sub
popf
xlat
bound
add
aaa
dec
test
cmp
dec
xor
sbb
in
jo
aam
pop
push
imul
iret
mov
cmp
pop
cmp
enter
xor
sbb
lods
mov
pop
pop
mov
stos
das
cmp
cbtw
int
ss
jo
loope
sub
xor
test
std
pop
sub
mov
lods
rcrb
fwait
cwtl
loopne
and
enter
pop
movsl
cmp
pop
out
adc
pushf
cltd
adc
call
cmp
push
aaa
fadds
and
cli
mov
jno
sub
or
inc
or
xchg
xchg
adc
sbb
mov
jns
out
movsb
aas
sbb
js
or
inc
or
pop
enter
fildll
push
repnz
sarl
or
mov
jg
testl
clc
dec
add
shll
aam
cmp
loopne
das
and
lahf
push
cmp
mov
sbb
mov
mov
xchg
lcall
imul
cmp
cmp
enter
das
ss
stos
mov
jge
dec
and
cld
imul
push
or
or
sbbl
in
es
and
mov
lods
in
cmp
cltd
jno
mov
dec
cmp
das
repz
in
mov
adc
add
scas
mov
dec
adc
aaa
or
loope
iret
lea
cmp
xchg
or
and
hlt
mov
addr16
ds
in
xchg
adc
and
cmp
or
pop
pop
or
imul
jns
test
jae
inc
addr16
sbb
sbb
sbb
push
xchg
out
pusha
cmp
movsb
mov
cmp
add
pop
jecxz
movsb
xorl
repnz
jecxz
sub
aam
and
pop
jbe
cmpsb
cmp
dec
in
dec
pusha
jp
faddp
mov
push
pop
sti
adc
dec
xlat
mov
imul
es
mov
pop
mov
repz
xchg
xor
loop
movsb
xlat
aas
cmp
jae
mov
fildll
stos
xchg
ss
clc
pop
icebp
pop
and
scas
xor
sub
mov
jle
sahf
clc
cmp
jb
fisubs
cltd
pushf
cmp
mov
loopne
inc
mov
pop
mov
cmp
mov
xor
and
jg
in
ja
or
xchg
adc
xor
push
mov
fiaddl
movsb
jne
test
pop
pop
cmp
mov
lods
sbb
dec
cmp
cmpsl
mov
inc
outsl
mov
dec
fldt
fnstsw
adc
pop
loopne
ja
pop
lds
mov
mov
sti
push
xor
xor
repz
sub
xor
clc
je
inc
addr16
pop
or
and
mov
shlb
pop
xor
jge
test
xchg
push
repnz
jl
jmp
jg
out
cmp
push
cmp
mov
xchg
dec
sti
pop
inc
cmp
jbe
aam
pop
iret
mov
clc
cmp
arpl
lock
jg
dec
enter
xor
xor
cld
and
xchg
ret
test
shl
cmp
jl
dec
jns
lods
sbb
and
mov
hlt
icebp
sub
mov
cmp
jae
sarb
cld
mov
mov
mov
mov
inc
fnstcw
xlat
rolb
popf
pusha
mov
cmp
arpl
jo
in
mov
jl
daa
push
nop
fdivs
dec
jmp
mov
insl
sbb
in
leave
fidivrs
xor
push
in
cmp
jnp
push
lods
mov
scas
xor
pop
push
mov
imulb
jmp
sbb
aam
test
inc
imul
int3
cmp
js
addr16
sahf
in
jp
stos
mov
xor
inc
dec
jne
repz
cwtl
mov
mov
jne
adc
aam
mov
hlt
orb
cmpsb
xor
pop
or
xlat
or
sbb
sub
add
gs
fadds
or
cmp
add
pop
dec
das
push
aas
scas
pop
mov
or
xor
push
scas
lahf
ret
xchg
xchg
sarb
lea
mov
mov
pushf
xor
pop
push
shlb
fnsave
pop
pusha
mov
inc
sub
cmp
xor
mov
mov
lahf
out
hlt
and
in
mov
imul
fwait
sub
test
out
mov
lds
es
shll
test
mov
cmp
pop
cmc
mov
js
pop
push
pop
lret
cmp
xor
movsl
and
push
sahf
push
aaa
cwtl
cmp
into
add
cmp
mov
xor
orb
pop
xor
in
cmp
mov
push
cmp
sbb
sub
lahf
jge
aam
jl
idivb
test
dec
out
cmp
fadd
jmp
or
cmp
vmptrst
push
cmp
adc
pop
mov
sbb
cmpsl
or
fsubr
mov
shl
jnp
cs
cmp
mov
mov
cmp
mov
imul
nop
and
pop
jns
xchg
outsl
dec
lods
mov
cmp
das
or
xor
aad
sahf
jg
dec
push
in
addr16
pop
lods
push
cld
add
and
xor
fs
je
fdivrl
mov
and
sub
sbb
lea
fldenv
test
dec
push
or
cs
loope
sarb
xlat
push
iret
inc
cltd
xor
movsl
mov
scas
or
subl
cli
sbb
pop
lock
pop
shr
cmp
xor
test
or
cmpsl
sbb
shll
aam
xor
pop
sub
stos
jecxz
mov
jns
mov
adc
mov
or
sbb
mov
mov
inc
cmp
aam
gs
test
daa
mov
cmp
aad
ja
lods
inc
mov
xor
popl
jmp
xor
outsb
fdivs
lock
or
pop
imul
cmp
fs
pop
pop
adc
and
cmp
lret
repnz
lret
push
fs
in
and
dec
mov
lret
test
cmp
icebp
cmp
cmp
sbb
in
mov
xchg
loope
aas
cmp
test
and
mov
cld
addr16
sbb
push
cs
leave
es
cmpl
pop
cmc
iret
add
push
inc
shrb
mov
scas
in
dec
jge
pushf
jno
xor
daa
jl
adc
in
popa
mov
test
das
mov
inc
std
cmp
test
jae
pusha
sbb
cli
mov
fisttpl
sbb
inc
pop
jno
aaa
mull
cmp
mov
data16
mov
addl
call
push
push
or
dec
frstor
sahf
dec
hlt
pop
cltd
iret
push
or
gs
popf
cmp
xor
stos
cmp
mov
imull
outsb
clc
xchg
rcll
cmp
xor
push
xchg
call
cmp
sahf
ret
and
mov
or
cmp
xor
js
arpl
xchg
and
mov
push
int
xor
and
cltd
or
loopne
xchg
and
call
jae
mov
ret
ret
cmp
sbb
es
icebp
clc
leave
nop
xchg
and
and
inc
and
xor
push
iret
scas
xor
sbb
jae
inc
mov
cmpsb
push
pushf
dec
dec
nop
adc
push
or
mov
mov
negl
xchg
pop
mov
insb
mov
bound
add
jmp
inc
sub
xor
cmp
push
or
cmpsb
sbb
ss
negl
and
xchg
gs
or
scas
push
pop
mov
and
jae
xor
dec
push
pop
addb
out
inc
out
cmp
test
and
jne
dec
or
cmc
or
mov
xor
sub
cmp
or
sub
dec
stos
test
xor
cld
cmp
add
cs
pop
and
ljmp
pushf
cmp
out
cltd
lret
mov
outsl
inc
xor
sub
push
and
pop
xchg
pusha
add
je
add
xchg
lock
aam
pushl
daa
test
dec
cmp
addr16
push
xor
aaa
sbb
jae
enter
and
jle
xor
cmp
lock
jecxz
push
xor
cmp
enter
cmp
xchg
dec
sar
push
in
add
aam
xchg
cmp
or
xchg
jge
or
jmp
adc
mov
push
jmp
in
rcr
add
xor
and
clc
mov
or
lods
mov
ss
dec
cmp
sub
pop
clc
or
add
test
mov
frstor
mov
cmp
and
inc
sbb
scas
xor
shlb
repz
push
mov
sbb
pop
sub
js
sar
arpl
repz
fucomp
and
adc
push
test
es
mov
jmp
insb
push
repz
sbb
dec
sbb
clc
mov
or
mov
pusha
ja
daa
sub
pushl
mov
clc
mov
and
mov
mov
aaa
add
imul
stc
arpl
pop
pop
les
jle
repz
cmp
pop
add
jae
aaa
jg
decb
sbb
and
movsb
daa
dec
js
adc
and
jb
sub
lock
push
cmp
jo
fcoms
xor
jp
push
pop
pop
pop
out
xchg
stc
cmp
imull
leavew
mov
push
dec
pop
out
and
ret
push
dec
jg
pop
fnstcw
testl
pop
mov
sbb
cltd
fstps
or
or
cmp
ljmp
call
dec
mov
daa
cmp
int3
aad
add
cmp
out
cmp
lahf
mov
fsubrs
pushf
data16
jae
cmp
xor
test
sub
add
and
ja
and
mov
pop
xor
push
outsb
adc
nop
call
pop
iret
cmp
je
cltd
cmp
and
sbb
pop
and
aad
adc
add
mov
jns
cmp
sbb
cmp
push
cmp
repnz
jge
xchg
mov
sbb
pushf
and
pop
dec
push
jbe
xor
test
cmp
ficompl
xor
inc
pop
stos
fld
xor
jl
repnz
xchg
cmp
inc
inc
inc
xchg
sbb
push
pop
ljmp
xchg
hlt
test
in
rcrb
and
lods
jb
push
out
fstpt
loopne
mov
js
add
push
xchg
adc
aaa
mov
cmp
push
scas
mov
pusha
cmpb
xor
lcall
pop
fsubl
cld
repz
cmp
das
divb
cli
mov
mov
cmp
imul
sahf
dec
inc
pop
push
jne
cmp
int
stos
push
pop
cmpsl
cmp
mov
mov
jl
cmpl
jns
lahf
xchg
aaa
sahf
cmp
cmp
call
and
inc
xchg
jl,pt
cmp
sar
jbe
cmc
cmp
xor
lds
icebp
pop
pop
shl
and
outsl
ret
clc
cmp
mov
cmp
mov
test
push
inc
inc
pushf
jecxz
push
pop
xor
dec
pop
adc
test
dec
repz
mov
mov
lock
xorb
movsl
scas
and
addr16
into
sbbl
ds
xlat
mov
xor
pop
pop
insb
cmp
rclb
cmp
jb
cmp
pop
shlb
jae
or
jbe
cmp
mov
daa
add
jb
jg
mov
xchg
add
stos
jmp
jmp
hlt
cmp
push
pop
sub
imul
and
add
test
fsubl
pop
cmp
pop
cli
bound
stos
or
repnz
xor
divl
movsb
or
push
in
nop
cmp
movsl
fiadds
push
or
sub
aaa
lahf
cmp
lods
jnp
adc
cmc
dec
sarl
cmp
push
mov
bound
mov
jne
loope
cmp
and
repnz
xchg
cmp
dec
mov
insb
cmp
cmp
xchg
push
cltd
aam
cwtl
xchg
xor
out
out
into
iret
cld
xchg
enter
or
negb
cmp
sbb
ret
and
sub
mov
jne
pop
cmp
add
push
into
cmp
push
and
fstps
add
jo
adc
mov
data16
sbb
dec
subb
icebp
xchg
jge
lcall
rorl
pop
je
xor
repz
jge
sbb
push
sbb
scas
js
insl
or
fnstenv
aas
xor
inc
lods
fs
sbb
test
xor
movl
mov
loop
xor
lret
mov
movsl
cmpl
out
cmpsb
sbb
inc
xchg
cmp
loopne
cmp
sub
lahf
inc
js
stos
jae
push
cmp
hlt
and
jo
mov
lods
add
push
dec
xor
fdivrs
add
rcrb
inc
xor
shl
dec
inc
cmp
test
fldenv
dec
lds
sub
mov
inc
mov
fmulp
sbbl
addb
negb
bound
mov
inc
adc
dec
xor
mov
jnp
xchg
mov
inc
pop
in
fwait
xor
fstpl
popa
fsubr
fcoml
add
repnz
sub
sti
dec
mov
xor
xlat
clc
push
cmp
jns
xchg
sub
arpl
pop
loop,pt
add
mov
in
ljmp
xlat
jmp
inc
xchg
rclb
into
cmc
iret
mov
inc
outsb
xor
out
xor
xchg
inc
cmp
ret
sbb
pop
dec
dec
add
jae
push
aam
pushf
dec
push
mov
test
push
and
xor
sub
lods
jmp
repnz
mov
shlb
and
leave
out
xchg
dec
xchg
lret
arpl
sbb
mov
sbb
xchg
js
xchg
int3
shlb
iret
cmp
cwtl
pop
cmp
mov
loop
xor
xor
stc
and
fs
push
scas
cs
psllq
cmp
cmp
int3
cmp
lret
ret
cmp
popf
push
das
cmc
andl
pop
lret
into
pushf
lods
and
push
mov
sbb
cmpl
cmp
stos
jl
adc
insl
inc
sbb
jnp
leave
cmp
inc
aas
stos
push
dec
cmp
push
pusha
dec
adc
mov
inc
cmp
lods
movsb
pop
jmp
xor
mov
sub
lock
jo
js
jo
pop
mov
jno
cmp
in
cmpsb
popf
les
jl
test
sar
pop
xor
mov
pop
push
xchg
shr
pop
xor
push
jge
mov
xor
lret
inc
mov
xchg
cmp
out
in
rcrb
clc
rorb
ficoms
in
aaa
inc
and
sub
sbb
add
ja
xchg
loop
push
jle
mov
dec
mov
dec
pop
cmp
and
insl
test
cmp
lea
push
mov
call
std
addl
sbb
out
cmp
or
add
leave
jg
xor
mov
add
rclb
jp
punpckhbw
call
xor
in
and
insb
mov
and
inc
sub
icebp
cmp
inc
aaa
cmp
dec
sbb
jmp
jg
dec
and
add
adc
add
push
or
mov
cmp
ret
jmp
mov
cld
cmp
sub
jnp
mov
movsb
stos
iret
adc
fucomip
sbb
popf
leave
cmp
push
xor
xchg
cmp
dec
scas
sub
dec
push
cmp
movsb
mov
xchg
cmpb
mov
sbb
in
call
dec
sar
fdivl
jbe
inc
in
push
sub
test
or
sbb
dec
flds
xchg
hlt
shl
bound
cwtl
jno
xchg
subb
fcomip
in
cmp
rcrl
leave
enter
mov
push
xor
xchg
ds
and
cmp
sbb
push
scas
add
pop
inc
jns
mov
rol
fisttps
test
outsb
roll
push
es
pushf
sbbb
lods
nop
xchg
jb
icebp
dec
cmpsl
idivb
cmp
push
add
test
lahf
andl
enter
je
xchg
xor
inc
movsl
es
ret
iret
xor
fsubrs
mov
mov
cmpsb
pop
cld
mov
dec
pushl
sbb
and
cmp
pop
xor
mov
cmpl
subl
cmp
mov
sar
inc
lds
scas
xor
add
push
xor
scas
jbe
xor
sbb
push
jae
and
fisubl
adc
xlat
push
cmp
fistps
mov
pop
aaa
fs
cltd
loope
mov
out
sti
xchg
stos
sbb
xor
add
jl
dec
sub
outsl
lcall
or
jns
in
gs
xor
out
pop
xor
pusha
cmp
mov
dec
repnz
cmpsb
in
jnp
mov
sti
xchg
mov
stos
add
adc
sbb
sbb
jmp
fnstsw
xchg
cs
pop
and
pushf
push
mov
xor
and
test
xchg
mov
mov
scas
pop
xchg
outsb
movsl
and
cmp
or
and
add
imul
or
div
ds
leave
add
mov
jne
outsl
push
cmp
rcl
xchg
imul
cltd
fidivrs
test
mov
in
shll
mov
push
int
movsl
cmp
icebp
int3
ret
pusha
shrl
pop
leave
xor
and
cmp
cs
jecxz
fisubs
lds
dec
repnz
hlt
adc
sub
fwait
and
add
dec
xor
and
cmp
xor
in
xor
push
ror
dec
mov
jg
add
pusha
sahf
mov
fnstenv
stc
xor
push
and
sbb
jmp
icebp
xor
mov
add
cmp
push
jbe
pop
int
cmp
out
sahf
xor
xchg
popf
adc
lcall
cltd
jns
sar
out
sti
pop
push
jb
inc
cmp
movmskps
dec
mov
adc
int3
cmp
mull
imul
inc
fdivs
dec
scas
xor
xchg
nop
and
sti
clc
es
pusha
shlb
push
lret
xor
lret
emms
jl
jnp
pop
out
xor
xor
stos
add
mov
call
sub
mov
shlb
in
in
and
sarl
xchg
mov
mov
cmp
cmp
or
inc
cmp
cwtl
lods
stc
out
jecxz
sub
jp
scas
dec
xor
mov
js
test
adc
lods
xor
movsl
xor
and
test
add
aaa
rol
push
and
lcall
xorl
mov
dec
xor
cmp
out
jae
daa
sub
not
cmpl
scas
pop
loopne
inc
hlt
jae
inc
cmp
adcb
enter
and
pop
mov
lret
sarb
xchg
dec
jns
xchg
ja
cmp
pop
stc
testl
test
jbe
push
and
cmpsb
jmp
dec
mov
clc
arpl
insb
cli
xor
cmp
jge
cmp
mov
vhaddpd
lret
fimuls
xchg
jg
push
push
adc
and
xlat
mov
pop
jb
pop
data16
mov
xor
mov
jbe
imul
xor
insb
xchg
pusha
mov
cmp
jne
shlb
cmp
or
add
push
dec
addl
out
cmpsb
out
mov
cmp
jmp
in
or
popa
jg
js
jbe
mov
inc
pop
cmp
sbb
nop
lods
es
cmp
mov
sub
xchg
mov
or
inc
mov
or
xchg
push
or
imul
sub
cmp
cmp
and
shll
cmp
sbbl
stc
push
dec
lahf
sub
dec
stos
jb
adc
add
mov
out
mov
push
hlt
cmp
mov
es
sub
in
sub
add
cmp
outsl
loope
cmp
xchg
ljmp
xor
ror
push
cmp
mov
insb
cmp
ja
mov
cmp
out
dec
sahf
jmp
xchg
and
pop
test
fildl
sub
cmp
mov
sbb
xchg
push
sarl
cmp
dec
out
pushf
push
cmp
pop
lock
ret
jmp
std
jnp
sarl
rcll
mov
push
addr16
stos
pop
mov
adc
iret
mov
out
jo
xchg
add
lret
out
leave
push
sarl
mov
cmp
cmp
stc
test
movsb
xor
insb
rolb
mov
ror
cmp
sbb
cmp
aam
mov
pop
into
mov
in
hlt
incb
clc
inc
xor
adc
push
jns
and
add
add
push
sub
push
xor
in
mov
jno
cmp
dec
fdecstp
sahf
out
mov
mov
dec
add
mov
sti
cmp
xchg
mov
add
xor
mov
xor
dec
out
and
jae
outsb
stc
cmp
xchg
mov
aam
daa
jge
shl
cmp
into
outsl
jbe
ret
mov
pusha
insb
cmp
in
lods
in
loopne
xor
cld
jge
cmp
call
outsl
xor
xor
mov
in
sbb
add
mov
mov
add
mov
mov
mov
inc
jae
pop
and
movsb
lea
shrl
xor
sbb
jo
loopne
or
and
add
cmp
sarb
movsb
add
daa
fdivs
jnp
cmp
adc
scas
cmp
decl
xchg
cmp
idivb
cmp
jmp
js
push
jo
dec
repz
enter
xor
lock
test
cltd
cmp
jmpw
cs
in
cmp
mov
or
or
push
lret
pushf
or
pop
subb
inc
shlb
xchg
inc
into
sbb
cmp
pop
cmp
loope
icebp
leave
mov
xlat
sbb
ret
movsb
push
jbe
push
or
cmp
dec
xlat
pop
cmp
push
sbb
and
std
lods
daa
xor
dec
outsb
imul
test
jo
pusha
mov
stos
push
add
rcrb
test
xchg
inc
and
cmp
add
and
mov
xchg
ja
std
xor
jae
sub
sub
rcrl
mov
popa
jb
jl
clc
sahf
jp
lcall
add
cmp
rclb
ljmp
xor
es
push
lcall
sbb
and
stos
ss
ret
test
aaa
mov
addr16
jbe
inc
cmp
and
jecxz
lret
or
dec
cmp
in
mov
mov
call
jmp
cmp
insb
jne
cmp
or
sbb
rclb
fisubrl
in
fistpl
rorl
repnz
ret
lahf
xlat
lds
cmp
icebp
scas
pop
push
mov
fsts
sbb
stos
pop
cmp
ficoms
add
pop
and
mov
test
orb
mov
cmp
adc
lea
inc
inc
sbb
repz
test
mov
cmp
xor
stos
arpl
pop
lds
repz
lods
push
movb
jne
add
xchg
fidivs
outsb
cld
cli
cmp
cwtl
andb
in
jecxz
cmp
das
nop
mov
adc
cmp
mov
xor
out
dec
cmp
lock
cmp
out
out
data16
adc
xor
loop
fidivrl
or
aas
nop
mov
movsl
mov
cmp
sbb
push
addr16
mov
push
xor
cmp
jbe
jge
test
pop
enter
sub
sbb
mov
xor
ja
dec
cmp
sub
or
jo
or
cmc
movsb
push
xchg
mov
xcrypt-cfb
cmpsl
mov
xor
in
xor
call
shlb
xchg
stc
jae
cmp
dec
xor
cmp
int
je
mov
sub
aaa
dec
mov
jo
in
das
std
testb
xchg
test
movsb
shll
mov
mov
xor
sbb
xlat
xor
and
ret
jo
mov
inc
enter
sti
sbb
adc
popf
sub
cmp
mov
xor
shlb
lret
cmp
sbb
sub
imul
dec
cs
sbbl
mov
xor
mov
and
sbb
jae
ficompl
iret
stos
push
mov
out
imull
xor
add
movsb
xor
mov
nop
inc
movsl
sbb
scas
stos
dec
cmp
shll
mov
add
leave
imul
pop
add
das
and
lds
push
push
xchg
pop
inc
cmp
sbb
ds
adc
pop
cmp
clc
imul
lds
inc
and
inc
push
mov
lcall
cltd
and
xor
mov
ljmp
popf
cmp
pop
ret
repnz
mov
cmp
lahf
jno
or
out
xor
cmp
sub
fcoml
cmp
mov
mov
push
cmc
cmp
adc
out
mov
cmpsl
addr16
imul
ret
popa
int3
mov
push
movsb
xchg
lods
icebp
fcom
push
pop
data16
jne
popa
mov
cmp
add
push
imul
repz
xchg
popa
scas
jnp
lcall
add
aad
clc
scas
jge
and
sub
and
cmp
adc
shr
xor
repz
imul
js
insb
push
sbb
dec
jmp
lret
push
addr16
adc
pop
fcomi
mov
aaa
iret
or
shll
int
cmp
ret
fsub
aaa
push
pop
add
inc
xchg
add
jge
ss
push
ja
xor
adc
addr16
data16
mov
mov
int
sbb
mov
sub
outsb
cmp
enter
mov
pop
pop
cmp
mov
bound
lock
loop
jg
nop
xchg
xor
mov
pop
cmp
cmp
popf
and
fisttpll
xchg
push
roll
pop
jecxz
jge
mov
xchg
mov
shlb
movsl
or
and
dec
adc
and
jae
sbb
je
iret
cmp
pop
jae
flds
mov
popf
pop
mov
insl
or
cmp
cmpsb
add
sbb
cmp
bound
push
call
sub
divb
lods
std
rol
jle
std
mov
jge
add
cmp
arpl
stc
rol
or
push
clc
jae
and
lea
push
insb
aas
push
std
in
into
push
cmp
sbb
cmp
stc
ret
aad
push
mov
add
shl
and
cmc
add
or
adc
cmp
push
or
sbb
movsl
cmp
pop
cmp
in
jg
fsts
push
pop
loopne
cmp
int
jle
adc
jge
pop
adc
cmpl
je
xor
cmp
push
lahf
enter
neg
and
push
push
insb
mov
cmp
jne
inc
popl
xchg
enter
xor
xchg
scas
push
inc
inc
rcrl
adc
in
mov
or
test
cmp
cmp
popf
rcll
cmp
sahf
repz
jbe
icebp
mov
xchg
add
mov
pushl
inc
and
aam
xchg
aad
pop
sbb
loope
ja
fwait
mov
mov
sub
push
jbe
add
stos
or
stos
lcall
loope
adc
push
scas
fstpt
dec
je
leave
and
shlb
xchg
mov
scas
lds
cmc
fidivrl
pop
sbb
fwait
cmp
aad
and
pop
mov
pop
dec
push
pushf
cmp
pop
fnstsw
fmull
aas
cmp
jno
cmp
sub
clc
mov
pop
int3
mov
insb
jbe
adc
sub
fdivs
ss
add
dec
aaa
pop
sub
js
mov
repz
xor
cmp
jp
or
or
add
jp
test
mov
out
xor
fcmovne
clc
jb
mov
daa
xor
leave
rcl
or
add
inc
jg
outsb
loope
add
adc
cmp
inc
inc
dec
inc
lock
aaa
cmp
faddl
mov
add
inc
and
jae
daa
sub
or
cmp
mov
xorl
mov
and
xor
cmc
xchg
cmp
mov
dec
sub
add
mov
xor
call
cmp
add
test
xor
flds
int3
pop
cmp
jno
sbb
rorb
mov
cmp
dec
cmpsl
sub
loopne
ja
mov
push
ljmp
out
fmull
xor
sub
or
jnp
leave
pop
orl
clc
mov
jmp
xchg
ret
add
mov
shlb
mov
int3
sub
mov
dec
cmpl
cmp
cmc
mov
cmp
sbb
inc
mov
cmp
mov
mov
xor
icebp
xor
fs
pop
cmc
xchg
test
jp
aam
add
ret
mov
adc
divb
and
stos
ds
in
fcompl
xlat
adc
ret
repz
lret
imul
add
aaa
mov
cmp
and
les
mov
jmp
cmpb
aam
cmp
sysexit
add
lcall
push
stc
lahf
lea
inc
dec
out
ds
cmpsb
cmp
das
insl
addb
dec
stc
fists
dec
mov
cmp
mov
xchg
pushf
in
cmp
cwtl
mov
inc
sti
inc
bound
pop
ret
dec
out
sub
stc
insb
lods
sub
xchg
js
xor
outsl
push
mov
push
test
loope
pop
aam
addr16
dec
fistpl
xor
cwtl
push
das
adc
xchg
pop
mov
xchg
adc
jbe
je
mov
arpl
and
sub
js
scas
mov
loope
jmp
loopne
inc
ljmp
cmp
lea
lahf
idiv
adc
repz
dec
adc
sub
bound
mov
stos
mov
scas
aaa
popf
sub
jbe
push
xlat
jecxz
cmp
jne
mov
cmp
xor
movsl
icebp
cmc
inc
jmp
rorl
cmp
push
push
mov
xchg
cli
dec
xchg
movsl
sub
jmp
aam
inc
adc
xchg
jecxz
mov
dec
jo
add
stc
sub
jle
sti
repz
pop
mov
xlat
mov
pop
xor
loop
xor
sub
adc
enter
push
outsb
in
outsb
ja
adc
adc
das
enter
rcrb
ja
mov
mov
bound
stos
imul
xchg
stos
mov
cmp
int3
lahf
push
bound
mov
clc
lcall
repnz
das
or
cmp
jae
dec
and
pushl
or
scas
hlt
scas
sbb
lock
push
loope
andl
mov
dec
out
test
and
das
pusha
popf
sub
adc
or
mov
stc
loope
shlb
fstpt
sub
ds
mov
pop
inc
inc
jecxz
and
xor
ds
pop
or
incl
jb
leave
sbb
ja
dec
es
jae
mov
pusha
cmp
loope
fcmovnbe
cmp
xor
jecxz
cmp
sub
popf
lret
pop
lahf
cmp
add
rcr
dec
cmp
and
mov
pop
and
xor
loopne
xor
inc
push
mov
das
repz
icebp
add
into
cmp
or
scas
jo
addr16
sub
fdivs
jmp
mov
cmp
xlat
ret
iret
loopne
push
rol
pusha
jb
cmp
pop
repnz
mov
jp
jle
roll
mov
jnp
xor
inc
xor
mov
and
ret
pushf
mov
dec
loop
mov
xlat
lds
div
out
cli
aas
aam
aaa
jb
mov
scas
stc
mov
enter
sbb
xor
pop
mov
push
gs
xchg
sub
cmp
fisttps
ret
lahf
fdiv
movsl
jbe
ret
fnstcw
ror
add
cmp
insb
jmp
dec
mov
and
pop
jb
push
xor
mov
push
inc
sub
mov
mov
cs
xchg
mov
cmp
jbe
xor
ret
jne
cmp
adc
cmp
dec
fs
jmp
cltd
pop
scas
pushf
mov
ret
mov
jecxz
movsb
mov
fisttpll
sub
jp
cmpsb
cld
dec
je
cmp
stos
mov
or
hlt
xchg
pop
aaa
imul
inc
cmp
mov
rcr
fisttpl
xchg
jns
cmpsl
clc
xchg
add
sub
cs
int3
loope
mov
xlat
mov
push
xchg
dec
lcall
out
sub
jne
cmp
aaa
fcmovu
xor
pop
add
adc
jno
dec
pop
fcomip
or
sbb
adc
dec
jo
pop
or
dec
imul
cmp
inc
mov
ja
outsl
jae
mov
xor
loop
sbb
push
mov
pop
sbb
sbb
faddl
push
adc
jecxz
repz
bound
test
adc
add
mov
xor
jmp
mov
jbe
and
dec
mov
sub
in
imul
out
add
pop
sbb
cmp
xor
roll
pushf
dec
pop
cmpsb
sub
xor
fistps
jl
fs
xor
xor
loopne
iret
aaa
out
out
movsb
jge
enter
xchg
mov
ret
rclb
and
jb
lds
lret
xor
xchg
arpl
mov
imul
mov
insl
mov
outsb
loopne
cld
filds
push
jge
fwait
add
lods
test
cmc
jge
xchg
and
in
lods
mov
mov
adcb
add
or
ljmp
jno
inc
out
test
pop
jno
sub
xchg
dec
cmp
inc
push
repnz
mov
pop
mov
cmp
and
shll
lret
pop
jg
pushf
push
cmp
inc
inc
jp
push
pop
xchg
mov
cmp
pusha
mov
pop
aas
jns
add
insb
shlb
movsb
mov
lret
sbb
cmp
mov
into
push
aas
cmp
orl
popa
jp
add
ss
cmp
imul
jg
and
adc
nop
imul
les
sub
lahf
jecxz
ret
fstpt
or
lret
scas
aad
cmc
in
mov
ret
sbb
cmp
mov
and
inc
cmp
movsb
pop
adc
pop
push
lcall
push
and
aas
test
je
jecxz
cmp
push
mov
int3
sbb
push
cmp
in
pop
mov
cmp
push
frstor
lock
aam
mov
pop
ss
add
in
mov
jae
arpl
dec
xor
mov
push
enter
add
fdivrs
cmp
sbb
lcall
dec
push
into
or
clc
stc
cmp
or
pop
outsb
ss
cmp
mov
and
cmp
pushf
xchg
xchg
cmp
stos
outsb
inc
mov
sub
push
xchg
out
xor
mov
mov
fsubl
cmp
outsb
fisubs
cmp
sbb
pop
insb
dec
or
addr16
cmp
out
jns
cmp
adc
cmp
movb
jbe
in
and
into
ja
inc
sbb
pop
mov
cmp
push
inc
inc
xlat
pop
dec
push
or
dec
fsubrs
fistpll
popa
hlt
and
lock
cmp
xlat
sti
mov
xor
ret
hlt
jae
inc
adc
jp
pop
es
add
pop
push
sub
pusha
xor
xchg
imul
jae
jno
cmp
inc
mov
xchg
divb
scas
lock
cli
ss
mov
and
cmc
dec
mov
pushf
xor
dec
pop
jecxz
adc
mov
repz
in
loope
xchg
shl
lss
dec
jecxz
cmp
mov
loopne
xchg
das
and
push
in
rol
jno
jmp
test
or
jns
inc
dec
ret
repz
sub
mov
enter
lcall
dec
cmp
push
cltd
lods
orb
jae
repz
jo
jge
in
jecxz
les
aaa
sub
insl
cmp
stos
jle
pop
adc
push
and
cs
mov
xchg
adc
mov
into
add
mov
cmp
xorl
sbbl
cmp
xor
lret
inc
popf
xchg
jle
cmpb
push
add
xchg
stc
xor
mov
jge
xorl
out
mov
mov
int
ds
adc
test
test
aam
push
adc
dec
push
pop
jmp
add
aaa
cmc
pushf
inc
cmp
sbb
sbb
dec
dec
xor
jno
cli
xor
inc
mov
jb
sahf
mov
jo
jae
pop
shrl
cwtl
in
stos
ret
bound
push
add
das
fs
ss
imul
mov
sub
stc
shrl
sbb
and
dec
xchg
inc
mov
in
rcrl
cmp
push
ja
cmp
add
sti
aaa
pusha
js
cmp
mov
push
mov
cmp
push
jnp
jbe
jge
cmp
mov
sub
cmp
push
sbb
pop
mov
and
pop
mov
in
xchg
cmp
test
test
jnp
cmp
xor
or
shl
sar
test
jne
pop
fcmovu
js
adc
xor
outsl
fsubs
movsb
cli
scas
mov
jbe
jns
jle
cmp
xchg
cmp
mov
xchg
pop
cmovo
movsl
mov
cmp
or
das
cmp
dec
idivl
sahf
add
or
adcb
cmpsb
xchg
xor
lcallw
pminsw
pushf
inc
xlat
xchg
adc
xchg
je,pn
int3
sub
cmpb
cld
sub
jge
pop
push
mov
cmp
std
xor
jne
cmp
imul
fnstcw
xor
popa
mov
sbb
repz
pop
mov
add
mov
add
enter
ss
mov
push
das
cmp
pop
xor
and
leave
mov
insl
fs
fidivl
icebp
mov
xor
jp
js
scas
mov
cmp
mov
cmc
stos
repz
fstpt
cmp
clc
lds
add
loope
and
mov
cmp
pushf
xor
pop
xor
daa
dec
add
and
popa
fnsave
mov
into
cmp
pop
cmp
notb
xor
xchg
pop
and
and
aaa
outsl
mov
es
mov
cmp
fistpl
adcl
dec
test
filds
ja
shll
jae
stc
mov
out
cmpsb
fmull
xor
cmp
data16
xor
mov
sub
pop
out
jmp
std
frstor
jle
mov
xrelease
cmp
sub
cmp
mov
jle
dec
ret
fwait
mov
aaa
stos
cmp
pop
lahf
incl
xor
cmp
out
mov
movl
cli
pop
cmp
jp
add
lret
xchg
push
sarb
rcll
out
mov
pop
inc
je
loopne
xor
fcmovnbe
ds
jo
outsl
mov
adc
xor
jle
mov
mov
or
clc
xor
add
leave
push
shrb
mov
xor
andl
mov
clc
xchg
cltd
xchg
fwait
icebp
jo
insb
jp
and
push
pop
aaa
mov
inc
and
and
fwait
xor
adc
in
cmp
sti
adc
cmp
push
add
or
scas
and
movsb
add
aas
sub
pop
out
mov
adc
addb
roll
mov
test
xor
xchg
cld
lock
roll
or
sbb
pusha
mov
jne
scas
mov
cmp
into
mov
aam
or
repnz
fs
xbegin
mov
movsl
lods
jmp
xor
pop
stos
xchg
mov
jmp
std
dec
rcll
test
xchg
sarb
xor
dec
shl
data16
or
cli
xchg
mov
jecxz
dec
xor
dec
push
and
inc
dec
mov
aaa
cmc
and
cmp
dec
xchg
imull
scas
jns
mov
inc
icebp
cmp
in
pop
sub
cmp
inc
clc
cmp
enter
pop
repnz
mov
xchg
shlb
jnp
xor
add
cmp
scas
orl
lds
mov
mov
fldln2
inc
orb
cmp
jbe
jo
or
and
inc
addr16
in
adc
jp
sbb
mov
mov
inc
enter
shl
frstor
xor
daa
sahf
jae
stc
sbb
in
iret
xchg
fildll
pusha
and
ljmp
xchg
mov
jae
in
popf
inc
hlt
daa
popa
testl
sti
scas
cmp
xchg
nop
xchg
and
jp
inc
xor
popa
mov
movsb
ret
arpl
push
and
mov
test
lock
xor
ret
jge
cmp
mov
cmp
shlb
fs
jp
jmp
fnstcw
push
lcall
repz
scas
push
imul
fwait
insb
push
sbb
loopne
pusha
sbb
sub
insb
cmpsl
xor
jae
push
push
es
sub
sub
jecxz
lret
cmp
mov
daa
rcr
cmpsl
pushl
lahf
cmp
pop
aas
cmp
dec
outsl
mov
inc
pushf
mov
sub
lahf
inc
ss
cmovg
loope
push
aas
cmpsb
or
leave
mov
xchg
les
cmpsl
mov
xorl
das
jmp
jnp
xorl
inc
dec
xchg
cmp
mov
push
cmp
clc
jo
add
inc
inc
dec
jmp
loopne
adc
clc
movsb
adc
sbb
and
fcoms
mov
and
push
sbb
and
out
inc
test
orb
dec
sbb
pop
movsb
aaa
push
ret
pop
sbb
and
push
sub
mov
test
imul
push
add
pop
das
mov
out
outsb
xchg
sub
sbb
ds
xchg
shr
cmp
pop
mov
repnz
out
sbb
mov
add
movsb
xorb
pop
xorb
mov
hlt
in
inc
fwait
shrl
xor
pop
adcl
jno
jg
pusha
bound
mov
cmp
stos
mov
xor
cmp
in
cmc
mov
rolb
lods
sahf
adc
cmp
outsb
ret
cwtl
push
xor
mov
and
cmp
leave
jecxz
cmp
mov
sub
cmpsb
mov
fnstsw
xchg
sarb
adc
repnz
fisubl
lcall
sahf
mov
mov
cmc
mov
and
pop
movsl
jb
add
push
shl
inc
rorb
mov
jmp
inc
data16
xor
scas
outsl
cmp
cmp
push
cmp
sub
or
ret
add
cmc
in
adc
jmp
mov
jno
adc
ss
or
jbe
mov
enter
sbb
movsb
pop
cmp
repnz
test
cmp
jno
push
cmp
jb
cmp
push
pop
testl
popa
les
clc
ret
xchg
cmp
fmull
jl
cmp
xchg
enter
inc
cmp
negb
inc
add
cmp
lods
push
cmp
mov
aas
push
fimull
add
xchg
mov
aam
movsb
lock
outsl
je
xor
sub
movsl
mov
xchg
jecxz
jecxz
mov
cmpsl
insb
lahf
mov
cli
add
movsl
xor
xor
adc
fcmovbe
sbbl
les
add
xor
aas
sub
inc
cltd
in
sbb
inc
int3
sbb
orl
shlb
xchg
inc
mov
inc
aas
scas
adc
test
mov
sub
mov
out
test
repnz
inc
adc
sbb
push
jae
pop
shll
sub
ja
inc
mov
mov
ja
inc
mov
mov
jae
dec
mov
push
add
and
mov
lods
fldl2e
dec
add
sub
mov
insb
push
add
pop
ret
sub
loopne
int
mov
jns
jp
movsl
xchg
jmp
aad
xchg
mov
fmull
adc
test
xor
push
sub
call
cmp
test
aas
rcr
lahf
flds
add
clc
or
mov
ja
outsl
jecxz
cmp
push
or
repnz
insl
lea
jg
scas
stos
imul
push
cmp
or
cmp
daa
push
pop
cmp
inc
imul
xorl
mov
cmc
idivl
inc
mov
push
cmp
add
cmp
fcompl
hlt
dec
push
adc
xchg
sti
jp
sahf
xor
test
sarb
fisubrs
lret
xchg
add
hlt
rcr
daa
jb
cltd
mov
xchg
xor
pop
sbb
mov
out
mov
repnz
cmp
repz
ficoml
dec
ja
cmpsb
fildll
mov
add
xchg
rorl
iret
mov
leave
imul
ror
or
or
sbb
movsl
push
sub
clc
and
cmpsb
cmp
mov
in
push
xchg
fistl
add
cmp
adc
cmp
and
cltd
mov
std
xlat
and
or
or
inc
cmp
mov
out
aaa
sub
fwait
push
mov
scas
and
mov
leave
xchg
cmp
lods
mov
cmp
nop
jg
or
or
mov
and
outsl
iret
sub
aad
sti
xchg
lods
sbb
push
out
push
push
xor
adc
jmp
rcrb
popf
jae
cmpl
jge
and
or
hlt
mov
outsb
mov
loope
in
enter
pop
scas
int
stos
mov
aaa
or
dec
repz
xorb
jno
cmpsl
mov
ret
xchg
inc
outsl
mov
push
jecxz
add
push
cmp
mov
add
mov
clc
adc
inc
xor
jns
jne
xor
pop
pop
test
jg
inc
add
xchg
push
cmpsl
pop
adc
test
in
les
cmp
mov
std
xor
lcall
cmp
pop
cmp
and
or
inc
add
add
mov
mov
adc
loop
jg
push
ja
inc
mov
cmp
sarb
mov
mov
pop
push
inc
add
push
mov
mov
and
arpl
pop
outsb
cmp
scas
into
and
mov
cmp
jge
add
rclb
push
mov
mov
push
leave
add
cmp
jb
pop
icebp
int
imulb
pop
xor
mov
pusha
xor
xor
nop
pop
cmp
rcll
andl
testl
arpl
lret
repnz
mov
test
jmp
shlb
in
scas
cmp
ljmp
icebp
adc
xor
cmp
ret
cmp
fcmovne
stos
mov
sub
jecxz
ret
fsubs
mov
sbb
mov
and
in
push
and
mov
mov
jo
movq
xor
cmpsb
push
inc
xor
aam
pop
xor
sub
js
popf
test
push
cmp
jo
or
iret
in
xlat
or
mov
add
push
rcl
aad
xchg
cmp
sub
cmp
and
pop
xor
stos
mov
and
shrb
mov
rorl
jns
ret
outsl
out
ficompl
xor
aad
pusha
iret
xor
sbb
adc
fcompl
mov
popf
sub
aam
pusha
adc
jae
pop
repz
jmp
lods
push
cli
aam
jno
ljmp
jmp
adc
nop
adc
imul
je
lds
sahf
aam
rcrl
mov
aad
lret
incb
std
mov
push
aam
sbb
mov
sbb
pop
adc
mov
js
aaa
jmp
insb
jae
mov
xor
imul
pop
cmp
sbb
and
cmp
push
leave
lods
xchg
push
mov
cmp
adc
sti
mull
jmp
fbld
cwtl
out
cmp
mov
loope
jns
outsl
push
inc
loopne
dec
shlb
xor
aam
repnz
std
xchg
fstpt
cmp
out
sub
ret
mov
stc
adc
dec
mov
xlat
mov
nop
sti
bound
sub
adc
and
fistl
adc
xor
sub
clc
loopne
stc
fwait
sbb
dec
pop
sub
mov
insb
mov
cmpsl
sbb
pop
gs
aaa
aaa
outsb
mov
rorl
sti
xor
pusha
fmul
jecxz
xor
clc
sub
cmp
fnstenv
mov
cmpsl
ret
add
lcall
mov
fs
jnp
mov
xchg
pop
pusha
outsb
mov
stos
xorl
stos
mov
cmp
inc
jno
jecxz
pop
inc
testl
sub
dec
mov
inc
jno
sbb
outsb
push
lret
jo
cli
ljmp
lahf
out
fnstenv
lods
xor
sbb
clc
sbb
mov
pop
mov
and
cmp
adc
jo
clc
cs
xor
outsl
cmp
daa
pushf
clc
pop
js
imulb
cmp
adc
inc
sbb
add
or
pop
cltd
clc
inc
mov
add
or
clc
aaa
sub
and
cs
je
loope
cmp
std
xor
xor
arpl
pop
pop
jne
inc
cmp
mov
mov
cmp
in
inc
call
add
inc
dec
cmpsl
cmp
roll
cmp
std
out
push
jns
sarl
sub
and
push
cmp
subb
mov
adc
jge
mov
das
arpl
mov
push
rcrb
gs
cmp
mov
js
das
aad
and
jo
sahf
adc
pop
pusha
js
xor
push
cmp
test
pop
add
rorl
and
mov
or
xchg
push
or
lret
in
daa
xchg
adc
push
xor
xchg
push
int
sahf
out
cmpsl
xor
test
adcl
mov
jecxz
daa
xor
pop
sub
mov
arpl
sub
or
or
or
ja
addb
and
inc
xor
or
aaa
aam
push
sbb
cmp
sahf
cmc
add
pop
add
shrl
adc
dec
popa
stc
ret
adc
fadds
outsl
clc
cmp
xor
arpl
ja
and
out
xor
je
mov
jmp
jns
push
push
xchg
mov
sub
sub
in
je
int
mov
pop
imul
fwait
adc
ja
fcmove
shrb
sbb
sbb
loope
fnstenv
mov
aam
outsb
insl
sub
xor
and
jbe
sub
xor
push
fidivl
jp
repz
xor
iret
xor
push
xchg
inc
add
sub
imul
lahf
das
xor
dec
xor
mov
adc
test
fidivs
cld
frstor
leave
lods
dec
cmp
mov
xchg
xor
arpl
pslld
out
jnp
std
je
outsb
in
adc
pop
sub
add
hlt
mov
in
cld
shlb
faddl
or
jne
pushf
flds
xor
jmp
mov
pop
into
mov
pop
or
negl
rolb
gs
insb
mov
jnp
sbb
sbb
mov
or
icebp
addl
fiadds
icebp
fistpll
or
xchg
repnz
xchg
in
mov
pop
je
push
xor
jmp
imul
fstpt
xor
imul
addr16
jnp
push
inc
and
ljmp
lds
cmp
rorb
fiadds
imul
xchg
shll
iret
enter
ds
xor
es
and
out
mov
xchg
cmp
ss
adc
ret
pusha
shlb
insb
sbb
adc
xchg
idiv
dec
imul
mov
jge
loope
movsb
mov
cmp
or
push
mul
mov
mov
inc
movsb
adc
xor
bound
xor
xor
mov
es
popa
mov
mov
jne
movsb
xor
cmp
outsl
push
mov
movb
les
pop
cmp
adc
divl
dec
jnp
xchg
push
fdivrl
push
jge
mov
cmp
gs
add
xor
sbb
mov
ret
sub
xchg
imul
scas
jge
adc
sbb
in
inc
xchg
sbb
mov
out
push
imul
hlt
fadds
scas
cmp
mov
lock
lahf
es
mov
adc
mov
jmp
es
mov
mov
jns
enter
inc
and
xor
xor
xor
lret
repz
sbb
xchg
ficomps
leave
sbbl
xchg
nop
in
sbb
cmp
mov
xchg
jbe
inc
scas
popf
call
cmp
add
fidivrl
inc
pushf
inc
push
sbb
fs
sbb
push
in
ret
ljmp
mov
lods
mov
jns
push
mov
into
int
mov
cli
pop
jecxz
ss
sub
add
xor
push
cmp
xor
icebp
add
pop
fimuls
je
dec
jns
jo
mov
arpl
imul
test
cmp
shll
and
cmp
push
push
pushf
inc
dec
aam
cld
out
hlt
test
push
and
loopne
dec
jle
push
cmp
popa
push
xor
inc
in
cmp
fwait
cmp
lcall
nop
cmp
call
adc
stos
mov
jbe
xor
jo
aam
push
add
ss
jl
in
sti
xor
in
aas
push
xor
pusha
mov
outsb
scas
ss
dec
cltd
xchg
sarl
outsb
test
jle
ret
popa
cmp
mov
ja
int3
mov
xor
inc
mov
fimuls
jnp
xor
mull
loope
xor
sti
adc
cmp
pop
xchg
pusha
hlt
xchg
inc
nop
xchg
div
xor
cld
jns
aam
jno
arpl
adc
jecxz
inc
inc
sub
shll
xchg
cmp
dec
out
push
pop
mov
lcall
in
cmp
scas
jmp
scas
test
loopne
cmpsb
stc
xchg
xchg
cmp
sbb
test
ret
xorl
cmp
cmp
push
xor
jbe
pop
cmp
inc
cmp
sub
cmp
lcall
and
pusha
cmc
xor
dec
into
cmp
lret
cmp
or
addr16
xchg
dec
cs
fcoms
pop
mov
test
pushf
jno
call
loope
sub
mov
jecxz
orl
lock
adc
pop
xor
jb
lcall
aam
sub
mov
stc
cltd
xor
sbb
xchg
lods
and
sub
mov
repz
fwait
decl
xchg
dec
dec
aas
pop
push
xorl
sub
or
push
pop
nop
push
jmp
and
andl
mov
jmp
testl
xor
inc
cmc
or
jae
cmp
insb
cmp
xor
and
add
aaa
adc
mov
xchg
push
fwait
inc
xchg
lret
lods
andb
mov
sub
jns
push
sbb
mov
xor
repz
idivl
pop
sarl
hlt
sahf
mov
xor
push
repnz
sub
rcrl
pusha
pop
sbb
loopne
jp
xlat
dec
mov
jno
and
es
mov
push
mov
add
xor
jnp
mov
in
daa
sbb
ss
ljmp
mov
push
inc
insw
rol
mov
aam
or
push
add
cld
inc
xor
cmp
jmp
or
sub
cli
gs
aam
inc
pop
push
adc
cmp
outsl
cmp
cmp
cmp
dec
out
cld
rorl
and
fs
divl
cmp
ret
or
imul
jo
mov
add
xchg
cmp
lock
cmp
sub
popf
dec
cs
mov
mov
std
mov
out
xor
outsb
mov
shl
cmp
test
sub
push
enter
sbb
adc
jg
out
cmp
js
push
cmp
in
shlb
das
in
std
jle
or
mov
adc
xchg
loop
fwait
outsl
neg
cmp
push
jmp
and
out
sbb
shl
dec
adc
stos
cmp
xor
mov
xchg
cmp
fistl
cmp
xchg
push
add
jl
sub
rcll
cmp
sub
sub
jns
xor
dec
adc
or
cmp
pop
sti
repnz
aaa
or
sbb
andl
aaa
test
pop
or
cltd
in
xchg
imul
and
mov
xor
shl
inc
mov
fidivs
jae
adc
sub
test
add
cmp
insl
sbb
dec
pop
or
daa
adc
les
xchg
push
cmp
jmp
rclb
xor
or
mov
add
cwtl
cmp
mov
xor
das
push
imul
push
or
adc
sahf
xorb
leave
loopne
lds
lcall
out
hlt
scas
inc
add
dec
ds
pop
cmp
fldt
or
sub
xchg
enter
dec
jg
mov
call
loop
mov
jl
pop
imulb
sub
test
cmp
pop
out
popa
lcall
pop
xor
mov
jnp
icebp
and
jp
mov
push
cmp
test
sbb
adc
sbb
cmp
push
pusha
sub
jne
loope
jp
call
mov
cmp
test
dec
push
push
add
jp
daa
adc
xor
xor
out
ja
add
test
mov
cmc
shlb
inc
cmp
dec
lock
jne
cltd
mov
cmp
mov
sbb
repnz
jmp
jns
add
inc
lock
mov
mov
bound
sub
sbb
inc
fnstsw
xor
dec
and
xchg
ret
test
arpl
jp
and
sti
cwtl
push
cmp
in
rorb
xor
jmp
push
push
out
iret
and
xchg
sub
hlt
or
mov
jo
idivl
sti
push
in
shll
cmp
and
xor
es
pop
popl
sbb
outsb
inc
xor
in
jmp
push
loope
mov
xor
bound
and
arpl
enter
inc
stos
pop
push
xor
rclb
mov
addb
popa
cmp
movsl
fstpt
jecxz
and
lahf
pop
idivb
mov
jno
sub
cmc
jns
add
cmp
cmp
lock
xor
in
or
jl
xor
dec
mov
push
mov
lods
add
xchg
aaa
cld
js
out
and
pop
int
lock
pop
stc
cmp
shr
imul
and
cs
xchg
jns
mov
cmp
mov
cmp
mov
cmp
mov
push
xchg
inc
jecxz
mov
push
imul
pop
cld
adc
outsl
fndisi(8087
inc
ror
jmp
and
mov
rcrb
push
xor
mul
push
mov
mov
popl
xor
stc
arpl
lahf
adc
xchg
pop
fsubs
jg
push
jecxz
sbb
out
add
jbe
xlat
sbb
out
loope
cmp
fidivrl
call
cmp
iret
jae
cmpb
inc
ret
fdivs
pusha
in
and
cmp
xchg
dec
sarl
out
daa
aad
icebp
pusha
in
cmp
mov
in
pop
loope
mov
addl
jl
stc
jmp
pop
ja
sub
xor
mov
js
fmul
shl
cmp
cld
inc
xchg
mov
test
lret
mov
add
call
in
loopne
or
out
lods
cmp
add
fadds
push
stos
mov
loop
mov
mov
xor
insb
xchg
aam
mov
adc
ljmp
jns
jno
movsl
js
mov
js
daa
mov
cwtl
ucomiss
scas
js
lcall
out
jmp
mov
sub
mov
xor
shl
scas
loop
dec
xor
adcb
test
cmp
xchg
cli
xor
std
push
shlb
divb
jnp
mov
std
sbb
mov
mov
les
cmp
pusha
shl
and
lea
mov
and
lret
in
je
ret
xchg
cli
test
scas
outsl
mov
iret
push
or
cmp
xchg
aam
cmp
mov
dec
popf
push
pop
cmp
or
gs
xor
dec
push
nop
push
inc
scas
aas
lret
jb
pop
cmp
enter
fwait
xlat
jecxz
mov
clc
mov
push
imull
inc
aam
sub
aaa
cmp
xor
call
xchg
push
xchg
cmp
cmp
xor
cmp
arpl
dec
hlt
xchg
es
aam
mov
arpl
aam
inc
xor
outsb
mov
iret
xorl
fcompl
adc
adc
out
hlt
test
and
jae
or
imul
or
sub
jae
ss
mov
push
mov
inc
dec
adc
sbb
jne
jbe
std
and
jae
cs
je
xchg
test
or
lods
mov
dec
inc
sbb
sub
lahf
jle
rcll
jmp
stos
subl
jno
sub
push
xlat
add
jecxz
cmp
and
sub
inc
icebp
mov
cmpl
scas
pop
adc
push
gs
push
lcall
add
pop
stos
repz
cmp
repz
iret
pop
push
imul
fildll
pusha
lret
insl
popa
aaa
push
sbb
push
out
inc
mov
sub
jbe
imul
aaa
movsl
adcb
xor
idivl
rcr
into
mov
inc
dec
movsl
inc
sbb
insb
mov
loop
dec
jns
and
lahf
lods
ljmp
xchg
jno
jp
test
mov
pop
and
inc
gs
and
fdivrl
sahf
inc
cli
xor
loope
sbb
inc
inc
icebp
jb
jp
push
and
shrb
xor
or
lock
dec
push
dec
mov
pop
mov
std
sbb
jns
mov
insb
adc
ljmp
dec
and
loop
pop
jmp
shl
mov
mov
cwtl
leave
dec
fwait
mov
push
mov
ja
cmp
fsubs
out
mov
out
push
adc
mov
mov
or
adc
imul
cs
daa
jae
sub
lock
xor
inc
roll
sub
std
pop
ss
mov
cmpsl
lock
cmp
cmpb
cmp
or
mov
je
xchg
pop
fdivrs
add
mov
sbb
insl
hlt
rol
push
cmp
lret
in
pop
cli
add
mov
mov
ss
test
add
mov
inc
cmpsl
inc
loope
jle
cmp
aaa
out
mov
add
jo
xchg
lret
mov
mov
mov
or
adc
repz
mov
inc
push
add
int3
jge
in
sarb
and
adc
aad
sahf
repnz
adc
orl
jae
add
loop
mov
jno
addl
repz
jo
jae
inc
in
into
pop
je
nop
xor
push
push
cmp
xchg
mov
dec
ret
xor
ds
cltd
cld
ljmp
mov
imul
add
sub
dec
das
cmp
je
sbb
jg
outsb
cmc
xor
adc
aaa
add
push
jmp
xor
clc
cmp
stc
enter
mov
or
mov
repnz
push
push
pop
fs
jmp
push
je
fisttpl
fisttps
xchg
pushf
inc
scas
mov
xchg
rorb
jo
nop
test
movsb
or
xor
out
sbb
out
rol
mov
inc
xchg
aaa
shr
xlat
mov
or
js
xchg
cmp
lret
loope
xchg
sbb
inc
jg
cltd
pop
and
div
sub
sub
mov
cmp
das
mov
push
pop
les
push
mov
inc
xchg
mov
cmp
xor
and
pushf
in
cmp
xchg
sub
into
inc
cmpl
sbb
ret
xor
adc
das
pop
and
fadds
xor
test
sub
mov
loope
cmp
dec
das
mov
cmp
mov
xchg
pop
mov
push
jecxz
jle
enter
cmp
and
fldl
mov
jae
dec
mov
iret
ljmp
sti
loopne
int3
in
cld
cmp
xlat
sub
pop
push
mov
cmp
xchg
dec
adc
push
sbb
cli
rcrb
data16
dec
jmp
mov
or
mov
xchg
add
mov
xor
jne
pushf
inc
inc
test
aaa
lock
cmp
and
arpl
dec
mov
addr16
inc
jle
xor
sbb
shlb
xor
xor
mov
add
leave
push
cltd
inc
push
cmpsl
cmp
fisubrs
mov
xor
shr
in
cmp
pusha
in
pop
fwait
xchg
cld
or
push
cmp
pop
pop
dec
aad
outsb
call
cmp
ja
pusha
imul
adc
js
inc
test
fsubs
je
jmp
clc
scas
pusha
xchg
test
cmp
jmp
test
stos
xorb
xor
jnp
and
fs
test
je
push
popa
jo
push
cmp
imul
add
pop
aad
xor
inc
dec
repnz
jmp
and
and
pushl
and
enter
cmp
lods
xchg
aas
bound
movsl
out
xor
inc
movsb
cmpsb
sub
lea
or
in
mov
addb
cmpsl
mov
xchg
je
std
cmp
data16
pop
xor
sbb
aad
mov
in
and
mov
sbb
lcall
adc
fmuls
bound
sub
push
add
in
lock
lds
shlb
shll
mov
into
xchg
arpl
cmpsl
fs
mov
jecxz
scas
adc
inc
loopne
xchg
dec
out
and
stc
xor
sub
pop
aaa
mov
insb
pop
repnz
sub
jae
mov
lahf
in
popa
data16
cmp
cmp
add
dec
fbld
jl
out
lea
xchg
jge
mov
jno
shll
cmpsl
xchg
adc
movsb
dec
repz
push
mov
stos
cmp
inc
inc
stos
xchg
add
xchg
in
push
loope
jbe
mov
and
sti
push
xchg
mov
fwait
pop
pop
outsl
rcr
mov
fsubs
aad
sahf
ja
cmp
fcomi
xor
mov
jae
xrelease
cmp
js
dec
cmp
add
xor
mov
sub
push
add
inc
repnz
lds
aad
fcompl
fidivrl
sbb
fsubrs
add
repnz
icebp
outsl
repnz
adc
or
xor
js
mov
dec
or
cmp
jecxz
sub
push
test
in
sub
sub
dec
aas
pop
mov
pop
insb
cwtl
inc
add
mov
cmp
pop
pop
push
fdivrs
stos
icebp
sub
sbb
xchg
mov
push
pop
push
mov
mov
pop
xor
pop
pop
sbb
sub
ljmp
daa
adc
ss
pusha
push
jmp
aaa
insl
cmp
lcall
lret
int
clc
sti
mov
ret
xor
inc
in
js
in
pop
outsb
xchg
call
dec
push
lcall
xchg
out
ret
je
rorl
sbb
imul
cmp
xor
push
xorb
sbb
or
xchg
mov
inc
or
dec
outsb
add
sbb
push
sub
pop
mov
ja
push
adc
jae
test
imul
repnz
pop
dec
sbb
pop
imul
dec
insb
leave
cwtl
adc
mov
mov
hlt
xchg
mov
and
sub
and
fcoml
pop
sbb
push
push
adc
mov
faddp
test
xor
pop
jne
insb
pop
sbb
fistps
add
mov
mov
sahf
out
mov
fldcw
mov
stc
sub
or
sbb
test
movsb
cmp
ja
idivl
enter
sbb
dec
push
jp
pop
sbb
pop
sub
aaa
sbb
dec
push
out
mov
cmp
mov
sbb
sbb
aaa
jns
mov
adc
push
fsubrs
xchg
sysexit
sub
js
aaa
jae,pn
mov
hlt
dec
scas
jns
xchg
adc
movsl
add
jle
rcll
jae
xor
ds
sahf
cmp
xor
sub
in
aam
fidivrl
popa
sub
mov
cmpsl
lods
sub
imul
aaa
outsb
je
xchg
mov
push
sub
mov
aam
jno
adc
pop
int
js
sbb
cmpb
in
pop
cmp
int3
test
jmp
aaa
sbb
cltd
xor
ja
shr
test
sub
pop
push
mov
mov
pop
js
jo
imul
push
inc
into
jle
addl
cwtl
or
aad
pop
adc
cli
jae
xor
add
add
mov
pop
dec
jae
imul
int3
add
or
dec
mov
popa
push
xchg
sahf
nop
xchg
mov
lret
and
mov
adc
add
arpl
imul
aaa
mov
out
dec
or
loop
jno
ret
pop
arpl
mov
mov
outsb
xchg
push
ret
clc
mov
scas
testb
lcall
insl
in
sub
push
mov
jae
mov
js
bound
jbe
or
pop
pop
mov
enter
cmp
push
lret
mov
dec
mov
or
cmp
dec
mov
jae
shlb
cmp
cwtl
maxps
in
sbb
mov
xchg
insb
adc
in
inc
sbb
mov
xor
aad
mov
pop
js
push
push
mov
iret
mov
add
in
aaa
out
inc
and
mov
push
leave
lea
push
xchg
test
lds
insb
sarb
push
sub
mov
jb
int3
push
stc
cmp
jp
movsb
popf
xor
mov
ss
mov
aad
or
xchg
push
std
jbe
fdivr
test
and
mov
dec
sub
les
or
dec
mov
mov
out
jae
jne
ss
lods
stc
mov
push
push
and
pusha
clc
pusha
inc
test
sub
movsl
cmpsl
xchg
pop
int
push
jo
add
xor
push
xchg
pop
bound
push
popf
push
mov
in
push
std
sbb
and
fsubrl
cltd
in
dec
lcall
jge
jno
push
ret
notb
cwtl
orl
aaa
loop
dec
out
push
or
sub
lock
xchg
jmp
adc
scas
and
sub
outsb
pop
mov
push
sub
mov
lcall
jp
mov
push
jns
clc
lods
aam
mov
into
jae
das
lods
repz
test
cs
lea
sbb
jo
jp
aam
xlat
jae
das
clc
sub
rorb
xorb
aam
je
jmp
xor
and
sbb
ret
adc
sbb
dec
mov
cs
inc
dec
mov
cmpsb
jae
outsb
mulb
xor
pop
or
push
pcmpeqb
push
jns
shll
or
or
arpl
sbb
fiaddl
cltd
rcll
push
repnz
out
lcall
jbe
mov
pop
xchg
pushl
xor
or
fld
adc
pusha
cwtl
inc
pop
sub
aam
in
pop
or
xorl
and
mov
mov
mov
lock
cmpsl
xor
push
movsl
repz
adc
sbb
popa
xor
pusha
repz
into
test
and
out
addl
nop
int3
rcrl
icebp
add
push
negb
aaa
imul
xor
insb
movsb
rcrb
xchg
adc
lret
pop
in
jo
imul
or
rclb
xor
cwtl
or
cs
xor
sbb
jg
pop
push
bound
sub
insl
or
push
mov
ja
daa
pop
dec
lods
pop
jo
lock
in
test
cmp
ja
mov
or
aaa
xor
jb
sti
rolb
dec
clc
jp
repz
sti
jae
pop
mov
cmp
adc
sbb
stc
ret
jmp
repnz
lock
inc
icebp
sub
insl
out
loope
sub
stos
jns
imul
push
xor
or
or
mov
ja
insl
outsb
test
cmp
imul
jo
jg
pushf
push
ret
sbb
shrl
lahf
or
xlat
push
cltd
lahf
insb
sub
repz
cmp
lods
mov
xchg
adc
xchg
mov
or
fsubrs
adcb
aam
dec
push
xchg
lods
and
repnz
push
mov
jecxz
jo
ret
imul
or
aam
lea
pop
add
mov
mov
cmpb
flds
subl
mov
xor
and
cli
cmp
subl
jns
xor
sbb
outsb
fcoms
int
pop
in
mov
divb
mov
add
aaa
fcomps
out
sbb
gs
dec
insb
cmp
add
inc
jne
pop
add
scas
cwtl
cmpsb
push
xchg
sbb
xchg
sbb
sub
lock
into
inc
adc
mov
xchg
sub
lods
add
pop
pushf
jl
add
addb
jl
or
test
push
clc
cmpsb
or
xchg
add
test
rclb
sbb
sbb
ror
aaa
ja
rcrl
loope
test
mov
dec
imul
aam
inc
push
movsb
mov
mov
lds
mov
or
mov
and
cmp
mov
fwait
aaa
lods
insl
mov
mov
add
jae
sub
inc
pop
test
mov
aam
xor
test
clc
add
inc
hlt
push
or
dec
imul
dec
dec
jo
mov
lcall
fisttpll
andb
std
mov
inc
add
ja
rcrl
decb
mov
in
iret
shlb
dec
or
pusha
aas
not
idivb
xchg
mov
add
fists
and
inc
sbb
int3
cmp
out
fs
jnp
pop
push
mov
movsb
xor
xor
imul
ds
dec
or
sbb
fdivl
xchg
test
leave
inc
jne
xor
xor
insb
and
clc
inc
adc
and
mov
cs
mov
sub
xchg
pop
pop
xchg
popf
sub
cmp
dec
cwtl
pop
and
lods
std
ss
nop
aam
mov
jae
sub
xchg
adc
clc
push
mov
push
rolb
and
test
push
add
cmpsb
sbb
ret
mov
cmp
stos
popa
hlt
adcl
mov
imul
sbb
aaa
in
std
enter
pop
mov
and
mov
xchg
mov
ss
fistpll
mov
sub
mov
jb
enter
add
dec
mov
jb
xchg
movsb
xor
mov
rolb
gs
mov
or
jle
jp
insl
aam
mov
inc
cmp
inc
loopne
loopne
mov
clc
mov
push
fucom
adc
push
mov
jns
fidivs
movsl
roll
pop
sahf
je
loopne
cld
and
jbe
je
pop
xor
aaa
insb
aad
out
imul
mov
ja
repz
adc
adc
out
pop
jae
or
jge
adc
or
or
mov
test
mov
xchg
push
nop
jl
pop
shlb
outsb
outsb
pop
dec
imul
stos
lea
testb
and
inc
ljmp
mov
inc
pop
push
xor
jle
ds
mov
cmp
shl
imul
cmp
aam
pop
movsl
jmp
sbb
mov
pop
mov
repz
jns
jae
movsl
mov
orl
repz
and
jmp
mov
mov
rclb
sbb
push
and
fimull
filds
lock
dec
xchg
ret
mov
adc
xor
mov
leave
adc
adc
fisttpl
das
mov
xchg
pop
xchg
inc
xor
sbb
xchg
nop
xor
or
jmp
call
fmull
pop
pop
or
mov
jae
dec
in
adc
xor
jge
add
sbb
in
and
in
repz
dec
cltd
jae
lea
pop
mov
inc
xchg
push
ret
and
orb
pusha
pop
aaa
cmp
scas
ja
and
adc
jl
mov
cwtl
jp
inc
mov
mov
stc
out
sahf
sahf
add
mov
pop
jge
aaa
ret
push
or
mov
imul
cmp
pop
mov
hlt
aaa
pop
fwait
call
mov
xor
xchg
jae
movsl
xchg
sub
ja
cmpsl
arpl
addl
std
sahf
push
jo
cmpsb
arpl
lret
cmp
mov
adc
shlb
jo
add
cwtl
ja
mov
add
fnstsw
mov
or
xchg
cmp
jne
sub
jo
or
lcall
pop
aam
adc
dec
jbe
lret
push
aad
push
movsl
imul
pop
ret
adc
xchg
daa
dec
test
dec
js
test
sarl
mov
loope
adc
push
mov
ja
bound
sbb
add
mov
add
mov
push
frstor
jbe
sbb
or
cld
mov
ja
xchg
fcoms
xor
xchg
popa
je
mov
xchg
daa
imul
jle
push
scas
pop
cmp
test
sub
push
insb
daa
mov
jae
cmp
mov
scas
insb
jnp
jns
mov
fwait
sbb
add
mov
and
jo
mov
and
dec
adc
push
jmp
aad
mov
xchg
loope
push
frstor
sbb
sub
xorl
or
push
imul
pop
inc
sahf
pop
xlat
adc
ja
jecxz
push
je
push
test
adc
imul
rol
pop
sbb
pop
movsb
and
rorl
sbb
pop
jb
sysenter
mov
push
arpl
cmpl
inc
pop
push
adc
movsb
daa
stos
leave
xor
jae
mov
test
xor
or
dec
inc
cli
call
mov
mov
xor
out
push
fwait
jns
dec
in
mov
jo
inc
add
adc
sbb
fcmovnb
xchg
cmpsb
movsl
je
push
nop
lahf
mov
dec
push
test
imul
cmp
sub
xor
mov
pushf
loop
sub
pop
pop
pop
mov
fstl
movsl
lret
sub
or
sub
js
mov
mov
dec
sub
sbb
sti
lret
movsb
mov
mov
scas
das
movsb
aaa
and
xchg
jecxz
imul
mov
je
ss
imul
icebp
sbb
lods
xor
insb
mov
in
pop
mov
adc
scas
and
xor
or
xchg
ja
pusha
mov
ljmp
mov
daa
lret
nop
inc
ja
inc
jecxz
lods
cmp
xchg
not
aaa
in
add
es
sbb
push
pop
xchg
dec
xor
je
orl
mov
push
pop
xor
clc
std
inc
ret
into
add
xchg
mov
push
mov
or
lock
ss
imul
mov
xchg
stos
pop
ficoml
cwtl
jmp
sbb
push
movsb
into
push
leave
push
add
mov
aad
xchg
and
fucom
xor
push
add
mov
or
adc
fidivl
jae
sahf
xor
mov
daa
scas
out
aam
es
jo
sub
pop
sbb
mov
push
cs
push
outsl
or
outsl
aaa
push
push
mov
pop
aad
adc
out
jecxz
xor
test
xor
and
inc
sub
es
jp
mov
popf
xor
ss
sub
mov
jo
jae
dec
push
js
mov
es
clc
ds
aam
cld
sbb
outsb
movsb
and
mov
sahf
pushf
or
pop
jae
insl
mov
rorl
inc
gs
in
xor
ret
mov
cmp
mov
cwtl
dec
sbbb
push
js
inc
nop
es
adc
imul
mov
lods
mov
xchg
xchg
cld
sbb
cltd
jae
mov
inc
outsb
movsb
into
mov
popa
sbb
inc
outsb
xchg
outsb
jb
inc
es
out
cld
js
xchg
push
inc
test
jns
add
imul
std
jae
outsl
jp
scas
int
fldl
movsb
xchg
pop
in
dec
jo
dec
fisttpll
mov
add
or
outsb
movb
mov
data16
dec
popf
jo
call
and
in
mov
test
jmp
pop
or
mov
cmp
add
hlt
sub
sbb
mov
dec
pop
mov
aad
sub
add
das
mov
addb
mov
mov
pop
mov
mov
addb
or
imul
sub
jecxz
cmpsb
inc
pop
out
adc
movsb
addr16
jae
orb
push
mov
push
ret
imul
gs
and
push
adc
mov
mov
inc
add
cmpsl
insb
ljmp
sbbb
fs
lret
pusha
sub
sub
jae
cmp
stos
mov
aad
rclb
add
orb
bound
test
je
xchg
jge
jnp
sub
je
mov
push
ds
jno
adc
mov
adc
pop
lods
sub
xor
call
fmull
push
loope
movsl
pop
cmp
fistpl
jmp
in
fistpll
or
mov
repz
enter
jmp
cltd
aaa
loopne
mov
outsb
push
sub
mov
add
and
inc
push
push
inc
out
xchg
out
cmp
sti
subb
jno
loopne
mov
movsl
int3
test
mov
xor
test
ret
jbe
jmp
andl
sbb
repz
loopne
push
push
enter
pop
xor
cmp
addr16
push
mov
in
lods
pusha
adc
xchg
pop
sbb
inc
loop
jbe
sahf
imul
mov
ss
mov
pop
or
sub
and
stc
push
push
repz
daa
or
shl
repnz
cs
in
dec
mov
fcoms
jecxz
xor
add
pop
adc
sbb
xor
sbb
sub
xchg
stos
lret
into
mov
test
loopne
je
stc
outsb
scas
push
adc
adc
pop
xchg
push
es
and
lds
into
xchg
orb
outsb
ss
add
mov
cmp
adc
stc
mov
jno
mov
movsl
mov
inc
sbb
sahf
in
hlt
jno
in
mov
pop
pop
ja
stos
in
js
lahf
fldcw
and
ror
lahf
js
clc
imul
popa
cmpsl
adc
sahf
xchg
xor
add
cmpsb
and
es
sbb
in
imul
movsb
dec
mov
push
cmp
fs
js
outsb
push
adc
mov
sub
popa
jmp
mov
push
divb
xor
sub
sbb
repz
xchg
mov
adc
lret
sbb
loopne
enter
or
aam
ja
or
mov
repz
ds
icebp
jo
imul
enter
xor
adc
sub
mov
cwtl
test
jae
sahf
fwait
and
mov
jbe
lock
cmp
jmp
jp
push
shlb
sub
pop
inc
xor
push
stos
inc
stos
dec
sbb
jae
mov
aam
call
out
mov
jns
fidivs
mov
cltd
es
mov
test
pop
mov
mov
out
push
fcmovnbe
repz
cmp
sbb
add
sub
imul
adc
add
bound
fldenv
xchg
and
pop
imul
adc
jae
mov
inc
stc
cmpl
mov
mov
adc
jmp
sti
mov
cmpl
pop
popf
call
repz
mov
adc
and
pop
add
mov
sar
sbb
sub
adc
aaa
mov
push
mov
rorb
xchg
lret
dec
or
jo
fwait
sub
xor
sub
pop
jae
inc
imul
data16
aam
push
cmpsl
sub
add
mov
popf
xchg
out
push
insb
outsl
xchg
scas
mov
pusha
lock
jae
add
cmpsb
inc
cmp
xchg
jae
adc
testb
sbb
cld
lods
inc
popf
das
scas
sbb
call
push
jge
push
inc
mov
adc
mov
xchg
push
inc
imul
sti
loop
jns
jb
or
aad
cld
daa
and
mov
and
cmpsb
mov
mov
push
add
addr16
xchg
push
inc
and
lahf
adc
jae
shrb
cmp
xchg
mov
aam
mov
imul
iret
xchg
dec
inc
adc
gs
out
push
jae
sbbb
sbb
bound
ret
out
lret
sub
adc
es
dec
or
insb
jne
cwtl
adc
data16
push
insb
sbb
scas
subb
pop
push
or
xor
sub
mov
and
jae
or
imul
push
xor
mov
mov
adc
sub
inc
jns
jb
cmpsb
scas
gs
sbb
or
movsb
sub
cwtl
ret
mov
setle
fldlg2
cmpsb
inc
fidivrs
add
pop
out
test
adc
add
push
push
arpl
and
jo
push
fs
lret
dec
jl
mov
pop
mov
out
outsl
adc
lret
adc
and
insb
mov
inc
ret
jno
loop
mov
imul
movsb
dec
insb
ljmp
mov
sub
cmp
xor
mov
fsubrs
sbb
rclb
mov
call
push
aaa
xchg
fstpt
adc
push
into
add
sbb
arpl
shr
out
mov
arpl
outsb
dec
sbb
cli
sbb
jmp
xchg
xchg
jae
sub
mov
dec
and
mov
pop
cld
shrb
icebp
aaa
mov
mov
js
popa
adc
cmc
and
insb
jae
xchg
xor
lods
shll
mov
mov
jle
xchg
in
xchg
push
int
mov
mov
imul
fdivs
mov
xor
ss
dec
push
jl
xchg
movsl
test
xchg
lret
adc
ja
or
je
xor
xorl
and
int
add
lods
leave
js
jae
jne
jg
rcl
sbb
bound
hlt
repz
or
into
mov
stos
icebp
pop
int
pushf
cs
xor
pop
add
hlt
add
jae
gs
pop
mov
repnz
mov
aas
jo
sbb
jl
call
mov
push
sbb
aaa
lahf
fimuls
mov
daa
cs
push
js
jg
adc
add
dec
jns
pop
xor
xorl
test
and
jg
outsl
orb
js
out
les
wbinvd
inc
fldpi
mov
cwtl
adc
lds
lret
mov
pop
pop
sub
xchg
pop
les
scas
sbb
or
mov
adc
and
fbld
sti
popa
xor
push
cltd
movsl
dec
sub
stos
jge
push
sbb
pop
imul
imul
cmc
popf
xor
push
pop
stos
sub
sub
push
mov
or
push
push
push
mov
sub
shl
je
push
mov
repz
xchg
xor
pop
iret
call
mov
xchg
repz
mov
cmp
cmp
add
push
mov
mov
inc
or
push
fbld
cmpsl
lret
bnd
pop
inc
sbb
and
or
xchg
icebp
xor
rcrl
adc
leave
sarb
xor
xor
test
movsl
adc
jp
xchg
fwait
push
sub
and
xchg
imul
mov
repz
dec
or
or
aam
and
mov
inc
and
dec
xchg
xchg
add
std
bound
xor
sub
clc
jae
ss
dec
and
scas
xor
pop
push
shr
jae
pop
push
gs
negb
sarl
lds
std
shr
test
and
sbb
jae
adc
ja
rorl
ret
rcrb
lds
cmp
lea
push
jp
and
sbb
cmpsb
push
test
and
cmp
add
jo
jae
jecxz
test
pop
adc
add
push
imul
push
dec
xchg
inc
fwait
mov
xchg
bts
pop
int
lahf
icebp
bound
add
inc
ret
inc
cltd
pop
jp
push
aad
addr16
scas
xor
push
cmp
mov
mov
xor
fnstenv
aam
pusha
out
cwtl
add
in
loop
mov
pop
xchg
cwtl
imul
mov
lds
or
lret
mov
ss
cmpsl
push
sub
pop
test
daa
movsl
cs
ss
mov
and
mov
call
add
pop
push
data16
sbb
in
insl
or
xchg
xor
push
cmpsl
ret
imul
aaa
pop
andl
lahf
xor
cmp
cwtl
push
add
in
stc
xor
ss
jns
nop
ds
ss
jge
stos
es
mov
mov
pop
dec
push
dec
in
js
ret
xchg
or
stos
outsl
ficoml
pop
ja
sub
jl
or
jle
sub
xchg
and
sbb
aam
aad
stos
push
inc
xor
lret
cmp
pop
sub
push
xor
sbb
sub
xor
adc
in
mov
inc
int
mov
cmpb
nop
sahf
insb
xor
push
xor
mov
fwait
sub
adc
repz
xchg
and
xor
cmpsl
mov
pusha
push
lret
fcmovnb
xor
insb
dec
dec
xor
aam
shrb
out
push
pop
ret
je
bound
sub
mov
mov
arpl
sbb
xor
jg
lea
mull
jl
insb
dec
push
mov
jo
ja
cltd
test
mov
in
mov
int3
xchg
lock
or
sub
in
lret
fs
jl
dec
mov
pop
neg
test
xchg
mov
jne
xor
dec
xlat
js
mov
push
jo
xchg
dec
adc
mov
call
jb
addr16
repz
jge
or
cwtl
in
data16
inc
icebp
arpl
xor
test
mov
test
xor
cmpsb
ja
out
lcall
adcb
xor
jle
inc
jbe
xlat
push
jae
in
popa
inc
outsl
pop
mov
adc
sbb
and
jp
dec
fwait
jae,pn
mov
gs
fnstcw
imul
lea
jae
xlat
hlt
cmp
and
jmp
sub
xchg
add
mov
addr16
xchg
je
or
sub
cmpsb
aaa
sub
ja
mov
cs
jae
mov
test
mov
aad
sbb
mov
repz
pop
sahf
xchg
stos
cwtl
lret
call
pop
mov
cmpsl
arpl
ja
pop
movsb
lret
dec
jle
push
fiaddl
fwait
out
mov
adc
jo
mov
sub
xchg
mov
jmp
fidivl
mov
xorb
ja
mov
out
loop
push
jmp
push
out
or
add
repz
mov
or
mov
cli
jp
pusha
push
push
cmp
notl
call
aaa
imul
int
sar
or
into
mov
stos
lret
lahf
push
sub
inc
add
dec
clc
mov
jecxz
cmpsl
sub
cwtl
or
mov
sbb
add
sbb
test
push
sub
jge
adc
popf
shrl
ss
dec
jge
popf
sbb
fisubrl
imul
aaa
dec
lods
jo
xor
outsb
xchg
add
cmp
push
xlat
sbb
rolb
ret
jb
jb
sbb
movsb
dec
add
repz
movsb
fwait
mov
sub
lock
ret
sbb
push
dec
pop
decb
dec
scas
aaa
and
sarb
mov
sti
jp
xor
or
sub
ret
push
repnz
rcrl
loop
jno
jno
imul
xor
sbb
inc
and
mov
shll
jbe
sub
or
xchg
leave
cmp
jge
xchg
repz
pop
sbb
aam
xchg
fisubrs
cs
pop
stos
aam
xor
pop
mov
pop
inc
or
shlb
and
scas
in
gs
cmp
sbbl
adc
sub
adcl
cmp
imul
stos
dec
stos
and
cmp
rcrl
mov
sub
jle
popf
pop
dec
adc
imul
out
pop
jns
mov
and
cli
mov
outsl
sub
mov
fnsave
imul
popa
mov
aam
push
jo
into
gs
sbb
repz
test
movsl
xchg
or
dec
mov
sahf
dec
adc
xchg
mov
xchg
jb
iret
mov
jno
mov
mov
pop
stos
sbb
loopne
mov
pop
jg
mull
sarl
lret
loope
icebp
and
inc
cmp
rclb
adcb
sub
jnp
in
pop
cltd
aaa
mov
inc
mov
xor
cltd
iret
mov
aas
pop
jae
inc
inc
add
cmpsb
xor
into
xlat
out
cmp
js
stc
aaa
movsb
mov
ja
add
ja
jae
push
adc
aad
dec
aaa
ret
jnp
mov
jae
ret
jo
sub
mov
and
jns
jne
inc
xor
fistl
aad
ja
pop
mov
mov
imul
and
pop
imul
cmp
or
mov
inc
enter
imul
mov
call
xor
ja
stos
arpl
js
clc
imul
xorl
ss
lods
adc
sbbb
jns
jg
arpl
and
mov
mov
push
jge
xor
test
adcb
or
and
and
pushf
fwait
xor
add
adc
lret
sub
mov
pop
xor
int3
pop
push
in
and
mov
mov
pop
mov
testb
std
fisubrl
pop
pop
fbstp
leave
ja
cmp
xchg
inc
jmp
mov
hlt
cmp
and
jnp
lds
mov
shrl
in
pop
inc
pusha
pop
movsl
mov
repz
xor
adc
imul
lcall
xor
jmp
test
and
cmpsb
scas
ljmp
adc
and
adc
mov
lds
add
mov
mov
push
fs
and
ds
lods
pop
adc
aaa
je
insl
fwait
xchg
adc
mov
rolb
mov
xor
xor
fistl
adc
aad
xchg
ret
pop
inc
jecxz
mov
cmpsb
or
aam
push
out
xchg
sub
and
aam
xchg
fisttpl
and
dec
dec
mov
add
cmp
in
jecxz
xchg
adc
sub
ficoms
hlt
jae
repz
xchg
lods
sahf
mov
xor
gs
cmpsl
lret
cmp
mov
xchg
jo
sbb
inc
cmp
cmpsl
mov
sub
repz
fldcw
lcall
push
sbb
or
inc
hlt
mov
test
imul
mov
in
add
cmc
sbb
bound
inc
mov
popf
test
dec
sarl
xlat
cmpl
ficomps
scas
insb
jae
pushf
sub
aad
cs
mov
scas
pop
add
aam
es
lock
sub
imul
adcl
jmp
lret
mov
lods
inc
mov
mov
jmp
sbb
inc
bound
mov
test
inc
inc
imul
sub
xor
int
lcallw
jns
imul
ja
adc
add
test
dec
andl
insb
xchg
les
mov
andl
jmp
sbb
mov
int
pop
xchg
or
sub
jb
mov
stos
repz
mov
dec
lcall
les
mov
sub
sbb
add
stos
lcall
sub
sub
lds
ret
dec
lods
mull
push
in
pop
sub
mov
aam
push
xchg
mov
lahf
mov
pop
out
jae
rcll
insb
jmp
jbe
add
leave
push
jbe
outsb
sbb
mov
popf
mov
pop
fisubl
lret
int
cmp
mov
and
mov
jecxz
push
aam
clc
ret
xor
fucomip
jle
and
ja
pop
out
rclb
pushf
cmp
dec
test
incl
fs
cmp
popf
xor
jae
mov
ret
or
adc
push
push
vpaddusw
push
ret
dec
scas
pop
sub
cmp
idivl
pusha
adc
or
pop
loopne
imul
arpl
xor
mov
aaa
xlat
fildl
scas
mov
stos
lret
pusha
cmpsl
fisubl
cmp
jmp
aaa
mov
pushf
xchg
sub
sahf
jne
jns
xor
mov
pop
jns,pn
or
rol
sti
or
sub
or
adc
mov
mov
mov
popf
sti
sub
cmp
fs
push
adc
in
andb
add
mov
jne
pop
jg
aad
dec
mov
imul
fdivs
jecxz
add
or
cli
xchg
imul
ret
mov
pop
inc
add
mov
rolb
fadd
push
ret
inc
int3
je
xchg
pop
mov
andw
dec
sbb
arpl
fisubl
inc
orb
loopne
rcll
inc
mov
mov
ljmp
imul
rol
movsl
xchg
sub
popa
or
mov
insb
push
jns
xorl
andl
popf
ret
inc
int3
xchg
les
mov
mov
sbb
or
fldcw
or
mul
push
adc
scas
xor
adc
cld
cwtl
imul
xor
outsb
les
lock
jae
push
or
pop
into
xchg
mov
cmp
sbb
sub
pop
outsb
outsl
xchg
pop
cli
test
xor
dec
mov
and
inc
pusha
jle
pushf
add
cltd
add
jl
popf
lret
xorb
jns
stc
movb
mov
mov
add
pop
sahf
repz
or
inc
push
bound
mov
xchg
andnps
push
jo
dec
aam
pushf
mov
icebp
push
mov
sub
push
insl
stos
sbb
jbe
mov
jge
mov
bound
outsb
call
outsl
mov
push
inc
test
aaa
dec
add
push
mov
jno
in
xlat
pop
sub
testl
call
jnp
out
mov
jl
lods
push
sarb
mov
int3
or
adc
xchg
push
fistl
repz
punpckhbw
gs
cwtl
or
mov
loopne
xlat
clc
adc
cmp
inc
imul
pop
adc
mov
and
sbb
mov
insb
pop
fwait
into
out
and
int
inc
push
daa
pop
ret
or
xor
dec
lcall
jae
pop
sub
mov
pop
jmp
cld
mov
sbb
jmp
cltd
inc
inc
int3
or
mov
mov
mov
ja
rorl
scas
sbb
jecxz
jnp
clc
dec
loop
mov
icebp
adc
repz
cmpsl
inc
aad
cmp
mov
lods
loope
jecxz
xchg
out
dec
sbb
ss
imul
pop
jmp
imul
xchg
add
pop
test
insb
push
lret
pop
jns
pop
mov
ss
jecxz
mov
cmp
adc
mov
and
ss
fcmove
sub
jns
clc
add
or
fcomip
push
inc
or
stos
xor
bnd
sahf
cmp
in
pop
xor
adc
adc
mov
xchg
jg
das
scas
imul
fsubs
push
cwtl
inc
mov
lods
stc
mov
pop
inc
dec
xor
mov
enter
mov
jae
rcrb
lea
popa
bound
lods
push
and
les
subb
mov
xchg
pusha
ret
popa
mov
into
icebp
jne
push
hlt
pop
sbb
adc
clc
push
xchg
or
sub
push
js
dec
clc
iret
inc
add
sub
xor
test
mov
nop
ss
stos
xor
inc
ss
lret
in
mov
mov
cmp
mov
push
inc
mov
jb
std
cltd
mov
aam
pop
dec
lods
adc
xor
jne
hlt
jl
push
sub
daa
sub
adc
mov
insl
cmp
hlt
adc
gs
pop
fnstsw
out
mov
cmp
clc
in
cs
push
stc
cmp
mov
clc
movsb
js
repz
das
xor
xchg
out
stc
push
je
jbe
jns
xchg
jno
sub
or
ss
sub
fldenv
cmp
aad
repz
cltd
js
mov
adc
add
or
push
aaa
and
push
js
repz
push
inc
sbb
cltd
jae
sbb
aad
push
es
or
xchg
sub
add
mov
clc
in
test
es
mov
gs
es
mov
push
repnz
repnz
mov
repnz
clc
lods
cmp
and
mov
cltd
xchg
adc
xchg
sbb
in
xor
in
js
repnz
push
cltd
push
mov
in
mov
adc
mov
pushf
je
jns
testb
pop
add
jbe
push
cmp
push
xchg
dec
adc
loop
push
sbb
mov
mov
adc
ss
mov
xchg
jns
cmp
sbb
mov
jno
push
mov
repnz
ja
push
xchg
lods
pop
jmp
nop
xchg
xchg
hlt
repnz
push
out
imul
gs
inc
je
popa
xchg
jns
call
ja
cmp
pop
push
sbbb
and
sub
imul
movsb
inc
call
iret
mov
mov
add
sub
ret
adc
mov
jae
jmp
test
imul
lea
sbb
ja
dec
test
outsb
xor
sub
pusha
in
insl
xor
nop
xorl
lcall
aas
mov
mov
movsb
push
xchg
pop
jae
mov
push
inc
jno
inc
scas
mov
js
jo
push
xor
mov
sti
inc
in
inc
jmp
out
adc
pop
mov
jae
cli
ljmp
jo
mov
cltd
sbb
les
dec
jmp
enter
pop
fstps
mov
sbbb
sub
jo
xor
cltd
clc
aam
pop
add
cmp
mov
jns
pop
sbb
jnp
xor
dec
jge
jae
dec
imul
movsl
push
divl
pop
cmc
lret
movsl
jne
lcall
jb
outsb
popa
ret
mov
lea
jle
jo
lcall
add
sub
ja
int3
into
push
imul
or
mov
jae
xchg
adc
insl
test
adc
or
mov
adc
stc
xor
insb
xor
fidivs
pusha
xor
mov
sbb
lret
aam
dec
iret
add
mov
mov
mov
adc
mov
mov
jecxz
xor
stc
cmpsl
cmpsl
shl
and
iret
stos
jp
sbb
xor
and
out
fnstcw
leave
jne
mov
dec
inc
aaa
jmp
aad
ret
xorl
test
jmp
ds
std
mov
pusha
mov
adc
mov
cmp
inc
xchg
iret
leave
push
mov
test
mov
flds
or
cltd
mov
xchg
pushf
repnz
mov
mov
and
mov
roll
cmp
mov
rcrl
leave
jb
mov
fdivrs
lret
mov
mov
stc
jecxz
scas
loope
leave
push
xchg
popa
xor
fwait
mov
test
add
xchg
xor
test
xor
mov
sbb
daa
test
mov
cmp
dec
sbb
sarl
mov
or
push
cs
sti
jb
xchg
xor
in
cmp
mov
jmp
mov
and
js
js
mov
insb
and
jo
or
in
mov
add
cmp
xchg
je
and
mov
and
scas
mov
inc
insl
mov
pop
cwtl
push
shrl
dec
mov
xor
mov
sub
cmp
lods
inc
xchg
xor
xchg
jg
jo
jo
xchg
leave
loope
push
inc
sub
or
push
add
xor
dec
adc
mov
aad
push
xor
cmp
cli
out
mov
js
ss
js
xor
push
cmpsb
sbb
fdivs
sar
rorb
cmp
inc
mov
jmp
adc
and
or
lock
push
cmp
stc
add
fnstcw
lods
nop
cmp
cli
pop
insb
inc
sarl
subb
std
bound
push
mov
nop
loope
mov
pop
insb
xor
push
add
jae
pop
push
cwtl
cld
mov
mov
in
test
mov
insb
push
mov
push
nop
xchg
insl
xchg
imul
loope
jno
sbb
mov
sbbl
clc
sbbl
icebp
inc
jo
xchg
js
mov
jo
pushw
cltd
ds
outsl
sbb
aaa
and
and
jne
xorb
lds
inc
mov
mov
mov
test
adc
push
push
push
push
into
subb
add
or
jb
js
mov
mov
inc
xor
sbb
jmp
sub
cmp
fldenv
jns
dec
fsts
out
push
xorb
inc
sub
xchg
mov
jmp
notb
aas
jecxz
repz
cmpsl
imull
mov
xchg
outsl
sti
rcrb
sub
ss
cmpsl
push
push
negb
sbb
and
popf
in
pop
movsl
and
dec
push
shlb
lea
and
cmp
lcall
fsubrs
lds
mov
ret
or
push
in
add
cwtl
mov
adc
xchg
test
xor
cld
mov
sbb
repnz
push
jmp
test
jb
dec
aad
adcb
xchg
xlat
fs
xor
int3
xor
sarb
mov
xor
mov
mov
mov
mov
mov
pusha
or
add
xor
sub
sub
aas
fs
ss
add
inc
orb
pop
mov
mov
in
mov
scas
pop
pop
jge
sbb
mov
inc
xor
inc
dec
mov
lods
xchg
cmp
xor
fstpl
stos
sbb
and
sbb
bound
negb
mov
js
pop
add
scas
sbb
pop
push
test
xchg
ja
aam
js
push
je
ljmp
scas
test
fbld
mov
xrelease
add
or
cwtl
fsubs
or
cmp
cmp
push
cld
sub
jg
cmpsl
outsl
xchg
out
imul
das
or
int
cmp
sahf
cmp
xchg
mov
mov
jae
js
sub
sbb
add
aam
shlb
adc
jg
jo
ret
jb
xchg
push
xor
or
jbe
pop
sub
xchg
sub
insb
adc
hlt
jns
ret
pop
adc
and
mov
int3
das
sahf
and
xchg
push
adc
cltd
movsb
xor
xchg
or
mov
add
pop
pop
mov
mov
std
cmc
sbb
test
ret
jge
adc
xor
fdivs
mov
sbb
js
ja
and
xchg
push
in
mov
jg
lret
je
enter
js
addr16
xchg
sub
jae
sbb
jo
js
push
jecxz
inc
dec
shr
adc
das
data16
cmpsl
xlat
movsb
icebp
cmp
hlt
cmp
repnz
mov
jnp
mov
cld
and
or
push
shr
or
mov
imul
cltd
lahf
stos
sub
mov
test
push
ljmp
dec
ljmp
jo
ss
sar
mov
das
aam
lcall
jle
js
jge
add
gs
jo
xor
imul
out
mov
sti
mov
sar
push
push
xor
mov
inc
mov
sub
xor
push
or
clc
inc
je
lock
mov
call
adcl
je
ja
js
cmp
imul
nop
mov
out
lock
fcom
xor
xor
sub
xor
subl
mov
fdivrl
mov
jo
mov
out
in
adc
xor
sub
aas
lahf
xchg
mov
lds
cs
rclb
sbb
mov
lret
mov
fldl
cmp
and
jmp
rcrl
mov
loopne
hlt
iret
sub
pop
jmp
pop
sbb
add
test
and
outsl
pop
add
pop
mov
jecxz
fldenv
jmp
or
sub
push
push
mov
or
lods
mov
add
pop
mov
mov
dec
das
lahf
add
push
fadd
je
int
inc
rcrl
pop
mov
lahf
or
jne
add
xchg
aas
fs
pop
xchg
mov
xchg
aaa
xchg
cmp
sarb
xor
lods
push
mov
daa
and
xor
popf
push
aad
xor
sbb
push
sbb
in
mov
cmp
mov
lret
mov
jp
cld
adc
adc
push
adc
in
in
insl
and
sub
cmpb
mov
sub
fidivrl
out
sbb
mov
jecxz
mov
xchg
push
sub
lods
xor
inc
ret
fsubrs
cs
js
movsl
paddusw
in
fmuls
lret
popf
push
xorb
inc
in
pop
in
repnz
scas
or
test
cmpsl
push
loop
in
xchg
mov
push
aad
and
cmp
int
adc
mov
fiaddl
cbtw
cmp
xchg
or
popf
lds
adc
das
es
lods
sbb
aaa
push
jne
imul
jmp
mov
add
jp
mov
roll
test
mov
out
or
push
fistpl
stos
mov
push
mov
sti
xor
adc
and
jb
mov
mov
ret
stos
xchg
repnz
push
jns
mov
mov
mov
movsl
cmc
cmpsb
in
mov
lds
je
push
jbe
jbe
insb
cs
push
dec
sbb
outsl
push
cli
pop
jnp
mov
add
mov
mov
xchg
or
lds
dec
repnz
mov
dec
mov
clc
xchg
js
gs
xor
xor
mov
sbb
out
push
das
sub
ja
lods
in
ljmp
lds
rorb
cmp
jecxz
repnz
mov
xchg
push
mov
cmpsl
gs
aad
sbb
popa
cmpsl
std
xchg
cmp
fidivrl
mov
xor
push
mov
lret
jns
mov
das
jmp
hlt
inc
shrl
push
outsl
cwtl
pop
sarb
cmpl
push
leave
push
sbb
and
or
inc
dec
call
mov
pop
aam
test
or
add
stos
out
push
in
stos
mov
inc
das
dec
mov
lahf
and
push
xchg
push
popl
lahf
in
test
mov
ja
js
repnz
xor
add
jno
push
push
jp
dec
sar
pop
mov
cmp
xchg
and
sbbl
xchg
sub
mov
lret
jmp
stos
xchg
hlt
das
scas
rcll
xchg
sub
sub
outsb
jnp
mov
ds
cmp
mov
xor
jecxz
mov
push
fisttpll
ja
dec
xchg
daa
cltd
xchg
or
sub
cld
test
fldcw
push
cmp
fbstp
mov
cwtl
insl
inc
pop
adcl
js
sahf
mov
mov
cld
cmp
push
xchg
cltd
mov
jge
mov
lret
enter
jmp
xor
mov
sbb
adcb
dec
stc
out
inc
and
cmc
int
adc
jo
shl
xor
cmc
xor
mov
xor
fcomip
imul
outsl
or
ds
rorl
aas
pop
cmovns
js
hlt
push
ljmp
in
mov
enter
das
mov
stos
in
push
cwtl
fcompl
jo
cmp
test
mov
cmp
add
or
ds
cmpsb
outsl
je
cltd
xor
push
xor
and
sub
dec
xor
or
push
add
sub
cmpl
mov
out
js
mov
outsb
cltd
imul
mov
add
or
adc
notb
mov
push
adc
xlat
in
jmp
dec
mov
shrb
hlt
push
xor
pusha
scas
mov
and
and
jns
ss
mov
adc
or
out
daa
pop
xor
jns
xor
dec
dec
mov
xor
sub
arpl
fsubr
lock
aad
mov
mov
rorl
aaa
sbbl
imul
adc
sbb
mov
fldz
xchg
cmp
push
lret
insl
pop
repnz
ret
mov
pop
sbb
sti
ja
jg
aas
jmp
mov
cmp
scas
addr16
mov
arpl
iret
loopne
cmpsb
pop
push
cmp
cmp
xlat
mov
scas
mov
into
enter
loopne
pop
cmp
sbb
xchg
mov
dec
stos
insb
mov
aaa
jbe
fisubl
notb
fdivrs
test
lock
fsts
je
xor
jp
sbb
jp
cmp
cmp
lret
scas
sahf
xlat
mov
sbb
jmp
dec
fimull
sti
mov
jp
imul
aam
pop
jae
lret
hlt
xor
jbe
test
inc
adc
adc
sbb
ret
cmp
push
push
or
jmp
xchg
push
lahf
mov
push
cmp
cmp
aas
jg
ss
insb
lret
cs
in
and
repz
cmp
dec
ss
fcom
dec
push
xor
inc
or
sub
aam
mov
pop
aas
std
cli
sub
jp
dec
mov
loope
cmp
leave
mov
xor
cmp
pop
cmp
or
in
aas
sub
adc
ss
outsl
fidivl
repnz
test
cmp
push
inc
pop
out
or
and
ret
je
cmpsl
dec
cmp
push
enter
cmp
and
cmp
testb
iret
fiaddl
mov
fcoml
cmp
into
clc
pop
sbb
fadds
jno
sub
cmp
popa
rcr
and
int3
repz
imul
and
fmul
cmp
cmp
mov
cmp
enter
incl
enter
xor
mov
dec
insb
mov
js
xchg
cmp
dec
push
jle
add
pop
fsubrs
mov
fistl
xchg
std
cmp
pop
lock
lret
dec
cmp
inc
mov
mov
mov
insb
mov
and
popa
jb
xor
stos
sub
jbe
add
cli
mov
or
mov
cmp
or
stos
fiaddl
into
mov
repnz
mov
mov
dec
mov
sbb
cmp
sub
stos
dec
cmp
sub
ret
imul
or
sbb
and
adc
cmp
mov
lods
dec
int
aas
cmp
out
cwtl
or
or
and
ret
pop
js
inc
pop
insb
jne
mov
das
inc
push
mov
mov
mov
xchg
mov
jae
xlat
lahf
fnstcw
sbb
stos
outsl
xor
stc
cmp
scas
jns
mov
fstpt
roll
sti
loope
lahf
sub
or
mov
popa
sbb
xor
lret
push
or
clc
mov
out
jbe
inc
push
vmulsd
call
loopne
mov
mov
lcall
cwtl
imul
xor
jge
pop
fidivrs
js
data16
push
fimull
xor
pop
push
outsb
cli
out
ret
cs
inc
mov
cmpsb
sub
loop
popa
imul
jae
and
imul
inc
cmp
loope
cmpsl
sub
cmp
div
sbb
clc
mov
fdivs
mov
pop
cld
push
xchg
push
shll
and
or
cmp
sahf
jmp
int
xor
lahf
inc
jge
inc
add
sbb
fstps
stc
fisttpl
xor
and
mov
or
lahf
js
retw
fidivrl
or
xor
and
mov
cmp
lret
outsl
mov
jns
aaa
arpl
rcl
pop
xor
ds
daa
clc
cmp
lds
mov
nop
outsl
ljmp
jp
bound
fucomp
mov
pop
cmp
or
and
popf
push
rorl
xor
mov
fsubs
pop
xor
lahf
shrb
cmp
cmp
and
sbb
sbb
pop
xor
das
xchg
bswap
imul
pop
jae
dec
aaa
inc
cmp
dec
xor
daa
pop
fisubrs
xchg
das
int
inc
add
into
cmp
push
dec
gs
push
dec
pop
cmp
inc
sahf
cmp
ss
cwtl
lret
cmp
lret
outsl
fs
inc
cmp
xor
bound
cmp
push
and
mov
jmp
adc
inc
cmp
jg
dec
pop
mov
in
scas
inc
sbb
xor
add
roll
out
xor
mov
inc
add
mov
fs
fwait
es
repnz
cmp
cmp
lcall
fistpll
and
cmp
rcll
popa
xchg
mov
bound
cmp
sub
inc
inc
cmp
arpl
mov
mov
jns
cltd
cmp
loopne
and
popa
loop
cld
cwtl
and
sub
dec
test
pusha
or
mov
in
js
lret
mov
fsubrs
insb
pusha
and
fldcw
and
cmp
filds
xor
lahf
lock
mov
mov
jbe
lea
inc
xor
loopne
xchg
in
cmpl
sar
pop
cmp
jle
sub
sbb
mov
inc
dec
cmp
inc
mov
hlt
xchg
cmp
pop
es
push
cmp
in
insb
jo
xor
cwtl
cmp
jp
in
ficompl
mov
popa
or
pop
add
stc
mov
sub
xchg
jge
sub
daa
inc
push
out
inc
jb
xchg
xor
or
sahf
jmp
cmp
push
fs
or
dec
cmpsl
mov
test
aad
sbb
cmp
push
sub
enter
jbe
inc
ret
sub
pop
cli
jo
push
mov
hlt
push
mov
jecxz
and
loope
pusha
cmp
mov
scas
push
jp
adc
push
xor
adc
inc
scas
push
inc
dec
outsl
insl
stos
scas
jbe
xor
fsubs
jb
xchg
insb
insb
and
push
xor
mov
lret
add
ds
xchg
imul
stos
add
pop
xor
iret
and
mov
fmulp
dec
mov
rorb
push
lahf
sub
mov
sbb
ret
ret
dec
cmp
testb
les
jno
into
jnp
cmp
popa
mov
mov
dec
dec
mov
sti
push
stos
push
jne
pushf
aam
lea
and
loope
sarb
jp
jg
and
lods
push
rcr
pushl
daa
dec
mov
jp
sti
dec
pop
cmp
jb
fcom
pop
lcall
rolb
std
cli
xchg
int3
xor
xchg
flds
iret
or
pop
dec
ss
and
xchg
cmp
cltd
lret
cmp
pop
adc
add
xor
jl
popf
mov
mov
shlb
fadds
popl
hlt
scas
mull
jnp
dec
mov
jge
pop
rolb
pusha
leave
cmp
test
mov
scas
out
sub
pop
push
testb
aas
ret
inc
outsl
mov
push
ja
dec
stc
in
imul
pop
shlb
fadds
jno
cld
mov
ret
mov
xor
cmc
push
popf
sub
movsb
and
mov
fidivrs
in
xchg
fldcw
and
addb
xor
fucom
adc
jge
mov
in
xor
stc
jl
adc
sti
or
sbb
lods
xchg
add
add
mov
test
mov
or
inc
fadds
or
sub
mov
cmp
loope
dec
and
cmp
in
xor
cmpb
scas
xlat
sub
or
popa
mov
jge
leave
jecxz
addr16
cli
test
test
fnstenv
mov
mov
lods
pop
repnz
cwtl
cmp
pop
mov
sbb
sub
and
mov
mov
ss
cmp
pop
pop
lock
and
cmp
sbb
sub
xor
cmpsb
gs
dec
xchg
les
bound
int3
mov
ja
add
scas
push
xor
cmp
outsl
in
les
xchg
test
stos
enter
flds
sub
lea
mov
add
and
cmp
imul
testl
mov
xor
cmpl
faddl
insb
cmpsl
push
mov
rorl
pusha
and
push
stos
jae
cmp
fucomp
call
jb
stos
data16
adc
xor
push
hlt
dec
cmp
or
adc
cs
stos
fadds
scas
jae
bnd
dec
icebp
sub
inc
pop
call
xor
int3
cmp
or
sti
cmp
dec
xor
mov
cmp
lret
add
cmpsl
cmp
xchg
inc
out
cwtl
scas
push
lea
cmp
popa
outsb
addr16
or
rcrb
loopne
jl
cmpl
cmpsl
sbb
cmp
xchg
shll
xorl
cmp
and
cmp
mov
je
and
push
gs
mov
ss
stc
mov
cmp
or
cmp
and
out
and
dec
dec
jo
in
loopne
add
or
dec
mov
sbb
in
push
divb
xor
int
mov
add
mov
jge
lcall
cltd
xchg
add
jae
mov
xor
jb
dec
insb
adc
aaa
push
lret
sbb
call
andl
push
arpl
cmp
cwtl
xchg
sahf
jg
jmp
xlat
jg
aas
pop
dec
xchg
mov
xor
mov
pop
sub
cs
iret
xchg
inc
jle
data16
ss
dec
dec
sti
mov
test
dec
pusha
cmp
xchg
sub
out
cmp
mov
std
inc
cmp
imul
outsb
shrb
aam
push
pop
negl
negb
adc
scas
dec
repz
xor
xchg
or
clc
in
push
sbb
out
adc
xor
fmull
add
mov
scas
sarl
jg
movb
repnz
mov
into
cmp
and
cwtl
inc
cmp
xor
cltd
clc
jge
jecxz
cmp
int3
mov
aas
add
cmp
jle
cmp
mov
ja
and
dec
hlt
pop
mov
cli
lret
push
jecxz
pop
cmp
popa
inc
jns
loope
cmp
pop
hlt
fdivrs
ss
shlb
cmp
es
dec
pop
mov
sub
scas
dec
hlt
stc
ss
cmp
pop
mov
testl
dec
fcoml
mov
rorl
fsubs
or
repnz
fdivs
or
push
repz
imul
cld
idiv
inc
test
mov
rorl
shr
jo
repnz
sbb
and
lahf
fidivs
stos
and
in
repnz
add
or
fs
xor
scas
fistpll
cltd
mov
lahf
and
jae
fnstcw
repz
xor
stc
js
popa
mov
xor
push
test
stc
lret
gs
ss
gs
cmp
xchg
scas
pop
cltd
or
sub
stos
inc
add
pop
add
xor
into
and
inc
stc
dec
inc
cmp
outsl
push
pop
lahf
adc
aaa
fsubr
xchg
pop
xchg
dec
sbbl
cmp
add
cmpb
mov
in
push
sti
mov
jge
dec
xlat
shll
jns
xor
pusha
inc
sarb
pop
add
xchg
xor
ret
mov
cmp
mov
sbb
addr16
add
or
xchg
add
mov
lcall
mov
das
cmp
mov
and
imul
cmp
loope
fnsave
push
add
inc
jle
stos
loop
mov
fistps
lahf
cmp
push
cmpsb
xlat
cli
cltd
int3
sub
cmp
inc
pusha
push
mov
xchg
push
lahf
mov
push
mov
cmp
int3
cld
dec
and
loop
pusha
jno
aas
mov
int
jb
pop
jle
mov
out
out
cmp
in
inc
fwait
dec
pop
cmp
pop
divb
cmpsb
sbb
pop
inc
jb
in
mov
fisubrs
mov
mov
xchg
sbb
xchg
dec
xor
and
cmc
sbb
pop
lahf
addl
inc
adc
imul
fdivrl
insb
int3
call
cmc
imul
roll
xor
in
lock
push
dec
mov
es
mov
mov
mov
dec
and
std
sbb
sbb
jbe
jmp
sub
lds
dec
adc
in
add
fiaddl
addb
aaa
clc
subb
cmp
sbb
jb
int
test
cmpsl
fstpl
mov
enter
xchg
cmp
stos
imul
xchg
cmp
push
cltd
lds
pop
sub
lcall
in
cmp
out
orl
sbb
and
imul
jbe
cmp
aaa
pop
pop
in
cmp
jae
lea
pop
mov
testl
out
sbb
mov
mov
data16
ljmp
ljmp
push
fndisi(8087
xchg
cli
xor
and
popa
xor
outsb
cmpsb
in
lcall
cmp
shll
jle
popa
push
pusha
jg
dec
cmp
js
jns
xor
dec
dec
jecxz
and
jbe
mov
out
inc
cmp
out
dec
inc
pop
push
jp
fdivrs
cmp
jo
faddl
dec
sbb
aaa
cs
mov
cmp
jb
call
pusha
push
in
adc
test
sub
inc
pop
shlb
loop
push
xorb
es
sub
fyl2xp1
int3
jne
pop
scas
ficompl
cltd
mov
dec
add
and
popa
xchg
mov
xchg
pop
fnsave
inc
mov
cmpsl
sub
out
xchg
rcr
inc
pop
out
inc
xor
xor
jo
or
nop
xor
shrl
sti
cmp
insb
fadds
fs
sub
push
out
and
sub
aaa
mov
in
jmp
inc
stc
dec
pop
dec
cld
ret
mov
or
dec
mov
incb
xor
sub
rclb
lret
jge
adc
sbb
pop
ret
fisubs
dec
add
xor
sbb
aad
jg
xchg
or
push
ljmp
dec
push
shr
loope
dec
imul
mov
cmp
sbb
ret
fidivrs
jp
jg
cmp
dec
mov
lds
adc
inc
std
cmp
lret
adc
cmp
xchg
cmp
xor
jle
aam
sbb
lea
cmp
xor
fimuls
sbb
pop
in
pop
frstor
ret
cmp
scas
xor
lahf
sbb
fmul
xchg
push
xor
and
add
insb
push
mov
add
std
jge
mov
push
xchg
int3
cmp
sbb
mov
adc
jmp
cmp
mov
cmp
stos
sarb
and
pop
jmp
aaa
outsb
pop
mov
pop
aam
push
fcmovnu
loope
sahf
mov
push
or
cmp
push
pop
mov
dec
lret
cmp
push
cmp
lds
mov
cmpsb
cltd
fsubs
cmp
mov
sub
sarb
daa
xchg
fsubl
js
and
mov
mov
mov
mov
cmpb
nop
int
cmpsb
lods
xchg
leave
cmp
cwtl
out
in
push
and
scas
push
inc
xchg
dec
lock
fnstcw
sbb
cmp
sub
adc
js
insb
test
cmp
loopne
cmp
ss
fcomps
cmp
cmp
cmp
shl
shlb
js
ret
cmp
cmc
mov
shl
sbb
inc
adc
jge
and
sub
daa
subl
jnp
repz
ficoms
sti
pop
shrl
test
cmp
frstor
jl
test
adc
inc
lock
or
test
std
pop
or
cmp
lret
mov
imulb
and
jg
aad
stc
inc
ret
sbb
cld
mov
mov
and
jns
cmp
cltd
mov
mov
mov
and
mov
mov
mov
push
push
xor
dec
push
xchg
pop
xchg
cmc
aas
cmp
push
rcl
shrl
es
ja
inc
test
add
scas
and
cmpsb
ss
aaa
das
cmp
mov
inc
aad
jp
pop
rorl
pushl
mov
sbb
mov
pop
cmp
or
adc
insb
add
pop
out
cwtl
and
jle
cmp
mov
mov
rorl
int
roll
push
xor
add
shlb
outsl
cmp
insb
notb
cmp
sub
mov
dec
pop
dec
js
push
daa
push
fistl
mov
push
stos
inc
mov
es
rcll
fidivrs
pop
not
or
jp
scas
pop
xor
aam
outsl
out
sti
cmp
cli
push
lock
push
loope
cmp
cmp
fsub
push
dec
test
sahf
inc
add
int
xor
xchg
fisubl
xor
mov
sbb
testb
mov
inc
cmp
mov
sbb
fstpl
repnz
shlb
sahf
fsubrs
add
js
nop
sub
push
daa
jp
inc
fadds
xchg
scas
mov
clc
xor
cmp
mov
jae
cwtl
cmp
add
leave
xchg
xchg
push
and
shll
xchg
add
lods
inc
jns
mov
dec
lods
push
lea
inc
scas
sahf
xor
inc
mov
xchg
cmp
ret
jbe
cmpb
inc
sub
in
call
mov
clc
mov
ss
test
cmp
mov
mov
xor
cmp
in
mov
sbb
stc
xchg
sub
into
add
cmc
je
or
mov
mov
push
sub
inc
cmp
cmp
sub
mov
je
inc
xor
js
inc
cmp
inc
fisubs
or
jo
xchg
popf
push
sbb
incl
sub
js
xor
pop
subl
mov
sub
dec
fmuls
cmp
les
adc
push
add
fmull
sub
pop
pop
inc
iret
xor
pushf
xor
or
cmp
cmp
inc
sbb
sbb
bound
ret
div
cmp
xchg
jae
out
cmp
insb
in
pop
mov
out
xchg
scas
mov
lcall
xchg
mov
jmp
out
mov
lret
cmp
and
sub
jns
add
repz
scas
push
mov
inc
xor
call
jb
or
fnsave
loop
xor
adc
mov
adc
jle
bound
inc
pop
sub
lds
cmp
mov
and
mov
and
insl
mov
jb
inc
sar
jns
dec
cmp
cmp
add
inc
cmp
pop
pop
xchg
jnp
jo
inc
cmc
push
xor
stos
xor
les
pop
adc
je
daa
dec
xor
cmp
cmpsb
mov
jae
jmp
mov
xor
push
mov
out
mov
repz
inc
sbb
cmp
lds
pusha
daa
fld
popa
jb
and
xchg
leave
aam
push
cmp
inc
cmp
scas
add
inc
cmp
and
test
fdivs
pop
icebp
jb
mov
xchg
testl
icebp
and
shlb
hlt
sub
dec
jmp
xor
xchg
dec
cmp
inc
mov
popa
cmp
dec
fbstp
jns
cmp
add
in
and
lahf
mov
pop
xlat
mov
xor
xchg
push
push
cmp
ret
sub
fadds
lods
cmp
push
and
cmpsl
cmp
inc
xchg
mov
ja
dec
das
add
ss
lret
ljmp
cmp
and
stc
xchg
cmp
ret
cmp
fsubp
mov
negl
or
cmp
dec
aas
inc
test
enter
xor
cmp
mov
inc
xchg
pushf
cmp
das
push
sub
mov
icebp
mov
mov
mov
bound
mov
lret
push
cmp
cli
daa
into
mov
sbb
or
jle
adc
insb
jns
icebp
push
inc
jbe
dec
out
cmp
dec
iret
sub
push
mov
inc
adc
sbb
test
mov
fwait
pusha
mov
dec
scas
mov
xor
mov
pop
mov
cmp
jecxz
test
fcmove
mov
adcb
lcall
addr16
loopne
mov
lret
hlt
mov
xchg
fdivr
repnz
sahf
stos
cmp
fidivrs
or
leave
add
je
cmp
aaa
rcrb
xor
popf
push
xor
push
push
push
stos
loop
fstpt
test
jns
repz
je
iret
in
nop
icebp
into
push
xor
popa
and
and
jns
mov
ror
scas
sarb
push
pop
and
xor
mov
dec
mov
cmp
mov
dec
cmp
xchg
ret
addl
push
repz
xor
mov
cmp
pop
jbe
sbb
xor
icebp
mov
ret
sub
or
pop
test
xor
mov
push
pop
ja
in
cmpsb
mov
inc
mov
cmp
lret
adc
cmp
pop
mov
aaa
adc
sub
cmpsl
xor
and
es
jb
aaa
push
sbb
adc
mov
call
in
inc
sub
mov
bnd
inc
jns
mov
xchg
push
jg
jnp
cmp
pop
and
xor
sub
add
hlt
ja
mov
mov
sbb
aaa
jmp
xor
nop
push
cmp
jo
loope
or
aaa
clc
dec
addb
push
dec
xchg
mov
cs
xor
mov
dec
mov
test
sarb
inc
inc
xchg
mov
repz
sar
pop
dec
idivl
sub
ja
int3
push
cmp
jo
mov
inc
xor
cmp
and
pop
scas
pop
gs
in
cmp
jbe
ljmp
lahf
cmp
sbb
dec
insb
data16
push
dec
and
cltd
xor
inc
push
mov
stos
dec
xchg
fs
gs
lea
sub
push
sarl
sub
add
loope
popf
mov
cmp
mov
mov
fidivrl
lret
cwtl
iret
jp
mov
lret
add
dec
stos
fwait
mov
scas
cmp
jns
imul
shll
dec
lret
lret
xor
js
jp
cs
es
push
inc
add
xlat
lcall
mov
adc
mov
dec
add
les
mov
push
mov
call
je
cmpsl
sarl
mov
xlat
jnp
mov
and
dec
orb
fdivr
cltd
add
cmp
jae
shlb
cmp
js
mov
xchg
repz
sub
xchg
inc
cli
enter
mov
pop
cmpsb
add
rcrb
js
adc
stos
in
pop
mov
dec
xor
and
mov
mov
repz
cmp
out
jecxz
inc
rcrb
repnz
inc
xor
xor
rcll
dec
sub
xchg
js
mov
test
sbb
pop
les
cmp
xor
or
add
push
fdivs
pop
jbe
sub
outsb
lret
jecxz
pop
ds
push
mov
shrb
out
mov
cmp
sub
dec
mov
mov
add
jge
push
rorb
cli
es
shrb
aas
movsl
pop
xlat
cmp
mov
int
fbstp
gs
mov
pop
int
and
cmp
lahf
dec
jecxz
jmp
mov
popa
xor
call
leave
ret
or
and
stc
loop
mov
dec
add
jae
mov
or
mov
pushl
xor
push
js
push
aaa
or
imulb
dec
push
dec
stos
out
cmp
cmp
push
testl
pop
add
or
cmp
outsl
in
in
loope
cmp
sbb
cmp
pop
andb
push
and
popa
stos
cmp
cmp
ljmp
jecxz
stos
cmp
xor
andl
pop
cwtl
hlt
out
leave
mov
sub
cmp
loope
cmc
cmc
xor
add
or
sti
mov
mov
jge
in
ljmp
repz
jnp
xor
imul
inc
pusha
jecxz
sub
enter
xchg
sbb
and
xchg
ljmp
mov
pop
and
repnz
adc
ret
dec
cmpsl
lahf
mov
xor
or
xor
out
cmp
pusha
repnz
cmp
sub
fwait
cmp
int3
cmp
mov
jo
insb
test
pushl
arpl
lahf
int
push
inc
dec
jge
mov
cmp
loope
mov
ja
jl
pop
lret
adc
xlat
add
rorb
xchg
and
out
notb
mov
rcr
out
cmp
pop
loope
mov
push
add
dec
or
cmp
push
outsl
ss
jg
ja
mov
stos
pop
test
sub
loop
jge
iret
xor
inc
push
rorb
ror
ret
push
mov
call
jp
xchg
mov
cmp
mov
scas
loopne
test
pop
sub
fisttpl
mov
jge
add
xchg
imul
subl
and
hlt
ret
or
mov
in
pop
fistpll
int
cmp
scas
shlb
add
std
adc
xor
cmp
and
aam
iret
mov
sbb
inc
int
cmp
mov
sub
xor
out
stos
lahf
cltd
jg
cmp
pop
in
shlb
cmp
faddl
xor
call
push
repnz
jmp
rcrl
dec
jg
push
mov
stos
inc
lretw
mov
ss
cmp
pop
xor
xor
cmp
mov
push
enter
cmp
inc
sbb
scas
push
jnp
push
shlb
dec
or
push
fsubrs
xor
sbb
xorb
cmp
add
jge
mov
inc
dec
icebp
popa
lahf
scas
aas
xchg
xor
sbb
inc
jnp
shlb
imul
xchg
add
pop
mov
push
fsubs
ficompl
xor
xchg
jo
cwtl
dec
cmp
pop
lret
fdivrs
push
push
jb
int3
xlat
adc
and
dec
shlb
or
xor
loope
call
scas
cmp
xchg
sbbl
mov
adc
dec
ret
push
cmp
jb
imul
hlt
sbb
sub
pop
push
mov
arpl
cmp
and
data16
or
popa
push
jbe
icebp
sub
sub
xor
jae
pop
or
es
jp
fnstsw
cltd
inc
and
int
aad
les
cli
pop
mov
and
jle
test
inc
and
pop
cmp
lods
fs
ret
or
testb
pop
out
cmp
stos
fisubl
add
sub
dec
cmp
sarb
mov
add
push
lcall
add
cwtl
mov
addb
push
sbbb
xchg
sub
or
sbb
outsb
mov
ss
inc
out
cmp
xchg
push
orb
icebp
add
daa
aad
shrl
and
cmp
rcll
sub
cmp
imul
and
cmp
pop
dec
jmp
xor
pop
sbb
pop
dec
cmc
lock
push
or
cmp
sub
inc
sti
and
xchg
adc
push
xor
in
insb
cmp
sub
pop
mov
add
mov
scas
repz
pop
inc
out
jne
cmpsl
sarl
pop
cmpsb
jo
mov
jns
pop
xor
pop
rolb
and
es
cmp
pop
cmp
pop
add
xorb
push
pop
dec
xor
cmp
pop
inc
mov
jo
add
push
xchg
adc
mov
loop
fstpl
insl
sub
cmp
not
push
add
lds
dec
sub
in
lock
mov
bound
cmp
push
jb
mov
lcall
lret
xchg
loopne
cmp
adc
lret
repz
stos
sub
repz
test
jno
pusha
loop
adc
mov
push
fsts
ljmp
fiaddl
pop
push
mov
cmp
sbb
cmp
or
cmp
mov
lea
xor
inc
add
jne
movsl
cmp
push
sub
jl
push
repz
cmp
mov
xchg
test
pop
mov
loop
adc
xchg
ljmp
addr16
out
add
mov
aam
sbb
cmp
sahf
ja
jmp
movsb
mov
pop
and
and
mov
leave
or
jne
jmp
xchg
xchg
mov
mov
out
int
aam
add
and
push
rcl
cltd
mov
jmp
andl
xchg
cmp
xchg
add
xchg
mov
data16
fdivrs
sarl
dec
inc
mov
cmp
mov
xchg
mov
fldcw
lcall
dec
adc
outsl
jo
andl
add
mov
inc
jmp
aas
adc
pushf
push
xacquire
jecxz
xor
out
shl
mov
scas
pop
dec
xchg
sub
test
loop
mov
xchg
adc
xor
jne
ficoml
popa
pop
sub
pusha
sub
pop
dec
cmp
sub
xor
inc
enter
or
daa
mov
cmp
push
test
mov
sbb
mov
cwtl
xchg
jp
xor
or
ljmp
cli
lods
dec
xor
sub
movsb
mov
mov
pop
xor
and
xor
sub
jbe
pusha
adc
adc
aaa
push
jne
cmp
mov
test
bound
cltd
dec
pop
mov
push
popa
add
ss
mov
fxam
cli
or
lods
repnz
xor
clc
jae
sahf
scas
enter
xor
sub
loop
lods
ja
and
xor
sbb
push
sbb
xor
sub
xchg
mov
pusha
repnz
repnz
jo
mov
mov
push
jne
adc
push
int3
or
aaa
mov
imul
cmp
push
pop
ret
jp
adc
xor
jbe
mov
jmp
fbstp
rolb
std
dec
adc
lods
mov
add
pop
mov
adc
push
xorb
xor
mov
cmpsb
push
shlb
fcomps
inc
or
fnstenv
in
dec
mov
imull
cli
les
inc
fisubl
add
faddl
stos
stos
cmp
xor
xor
shlb
adc
or
mov
shlb
cmp
imul
xchg
shll
cmp
ja
jle
lahf
inc
and
rcll
push
ja
ljmp
pop
rclb
mov
xchg
inc
mov
sahf
inc
hlt
xor
rcrl
push
call
cmc
jge
dec
out
divb
mov
adc
sbb
ret
test
push
cmp
xor
les
stc
adc
pop
xor
push
rclb
leave
and
mov
mov
pop
pop
push
fsubl
popa
xchg
mov
popa
pop
out
mov
cmp
fstpl
xor
xchg
jle
jae
cmp
lret
mov
jl
xchg
scas
adc
pop
push
pusha
cmp
ret
sub
stos
xor
ljmp
mov
cmp
xor
test
test
add
rcrl
scas
mov
cli
jmp
fisttps
push
cmp
push
push
push
inc
cmpsb
xlat
adc
jae
mov
fnop
test
cmp
pop
inc
xchg
xor
int
xchg
xor
ss
cmp
add
and
mov
and
out
mov
mov
jecxz
cmp
adc
aam
lahf
loopne
stc
cmp
mov
add
sbb
cmpl
cmp
in
gs
xchg
jne
xlat
cmp
dec
pop
ja
test
jmp
mov
rol
negl
cmpsl
mov
pop
adc
sub
jno
in
pop
outsb
xor
cmp
adc
sub
mov
insb
add
test
cmp
sbb
push
sbbb
inc
cmp
mov
fstpt
dec
jg
adc
sub
sub
call
adc
sti
hlt
cmp
xchg
dec
inc
jle
aad
sbb
add
cmp
mov
pop
cmp
dec
cmc
test
jne
cwtl
xlat
mov
andl
cltd
lds
push
jle
cmp
arpl
cmp
mov
sbb
iret
cmp
call
pop
jl
xor
outsb
es
cmp
je
aas
add
adc
ja
xor
in
cmc
add
sbb
leave
mov
ret
andl
cmp
cmp
clc
xor
jle
mov
fcoml
sti
andl
sarl
adc
mov
js
adc
cmp
and
sub
jne
arpl
insb
cmp
test
dec
push
lods
jl
fs
dec
push
cmp
xor
lods
test
inc
mov
add
cmp
sbb
sub
cmp
incb
mov
pop
cmp
rcll
push
aaa
sbb
mov
addr16
divl
add
fnstenv
mov
mov
sub
cmp
aaa
mov
cmp
xchg
xorl
das
hlt
push
mov
cmp
adc
jbe
adc
je
mov
pop
pop
mov
mov
inc
lea
cmp
cmp
push
add
das
popf
pop
inc
add
js
inc
icebp
jbe
xor
adc
dec
mov
xor
mov
xor
adc
cmp
addl
sub
mov
call
xor
loope
cltd
pop
sti
cmp
hlt
mov
sub
pop
scas
pop
rcll
std
in
sbb
xor
fadds
or
xchg
lods
pop
ret
repz
loope
jmp
push
jbe
fsts
call
sti
test
jne
jl
xlat
xchg
mov
lock
add
adc
cmp
std
adc
push
jae
fidivl
cmp
and
cmp
outsb
adc
and
sbb
pop
lcall
fdivs
sub
add
sbb
xor
or
xor
into
push
arpl
xchg
insb
push
rcrb
jge
sub
inc
sarl
cmp
lahf
or
cmp
cmp
cli
cmp
mov
in
jbe
mov
mov
cmp
add
and
ljmp
pop
test
dec
cmpsl
cmp
cmp
pop
xchg
xlat
push
jae
cmp
fucomp
inc
xor
or
fwait
xor
cmp
xor
pop
and
adc
push
les
adc
add
pop
pop
xchg
xchg
jecxz
xchg
jb
inc
sbb
adc
shll
ljmp
sahf
js
arpl
cmp
or
jg
jne
mov
je
xor
out
add
mov
cmp
sbb
jns
loop
test
pop
je
pushf
push
cli
xchg
adcl
or
fbstp
pop
lret
push
cmp
xor
shl
pop
xor
cmp
lods
push
int
je
sbb
add
cmp
pop
sub
or
imul
jl
fistpll
ds
inc
cmp
mov
cmp
adc
pop
mov
sahf
pusha
add
loope
inc
cltd
inc
and
divl
or
and
xlat
jns
jae
cmp
mov
idiv
jnp
mov
mov
out
stc
mov
in
aad
fnstcw
inc
std
rolb
sbb
dec
es
pop
fdivs
push
rol
pusha
inc
fs
push
xor
lahf
or
dec
sahf
arpl
push
iret
push
pop
nop
test
xchg
outsl
lret
imul
xchg
dec
xor
addb
jo
and
mov
fbstp
cwtl
add
negl
mov
daa
popa
mov
out
sarb
rol
jge
xor
cmp
or
shlb
jo
adc
idivl
and
nop
push
out
xlat
je
jo
cmp
mov
pop
cmp
scas
scas
cmpsb
mov
sbb
adc
xchg
pop
push
sub
outsb
addr16
insl
cmp
je
scas
jb
imul
ja
mov
xchg
or
mov
push
int3
cmp
jo
mov
inc
push
aam
cmp
leave
push
xchg
adc
ja
test
adc
xchg
pop
lret
jmp
int3
leave
pop
mov
js
rcr
clc
xor
ss
pop
lret
xor
xchg
adc
es
pop
mov
mov
jle
cmc
and
shlb
mov
out
add
repnz
lret
adc
mov
mov
mov
push
das
add
repnz
fldl
mov
scas
cmp
cld
aaa
xor
clc
xchg
mov
cmp
sahf
icebp
in
divl
cmp
test
dec
in
mov
aaa
or
or
cmp
inc
ss
sbb
lahf
int3
and
inc
xor
test
cmpsb
ret
ja
jns
js
std
imul
fistpll
dec
dec
data16
lret
dec
cltd
cmp
icebp
jo
cwtl
mov
jge
sbb
push
mov
cmp
and
and
push
or
mov
xorb
jl
cmp
aam
sbb
cmp
mov
cmp
cwtl
repz
hlt
cmp
mov
cmpsb
cltd
jae
cmp
stos
ss
cmp
or
loope
nop
cmpsl
testl
rolb
xor
cmp
ja
sbb
cwtl
repz
pop
cmpsb
addr16
jl
out
shlb
ja
push
in
adc
fisttpl
scas
jno
or
inc
aam
repz
decl
pop
add
test
fs
sbb
repz
rcrl
jbe
mov
and
lret
cmp
xor
push
add
xchg
or
mov
mov
fdivrp
add
pop
sub
dec
adc
cmp
sbb
jae
pusha
in
xlat
pop
cmp
scas
mov
jge
negb
repnz
add
aaa
mov
icebp
xor
aas
fwait
cmp
xor
pop
testb
inc
fists
sbbl
add
dec
lock
bound
sti
ljmp
xchg
xchg
jp
adc
cmp
dec
sub
ret
testl
mov
clc
cmpsb
test
decb
push
cmp
pop
and
xchg
mov
or
inc
ds
ss
sbb
push
adc
icebp
dec
push
sub
rolb
cmc
out
fnstenv
jmp
lcall
aaa
xchg
push
outsl
cmpsb
aad
jb
and
loope
shll
push
push
test
scas
aas
insb
cmpsl
xor
sbb
int
cmc
adc
outsb
cmp
test
xchg
and
xor
push
push
enter
fldt
cmp
popa
repz
jecxz
cmp
jnp
mov
add
cmp
js
mov
add
mov
sub
push
and
xor
ja
sub
inc
hlt
push
cmpsb
add
or
mov
inc
hlt
sub
mov
or
aaa
icebp
sub
xchg
jbe
inc
cmp
cmp
pop
dec
xor
pop
mov
into
jno
inc
js
dec
lcall
mov
mov
mov
cmp
test
orl
sahf
popa
cmc
xor
add
and
mov
cltd
stc
add
and
cmp
ret
fcomp
cmp
xor
js
mov
cmp
and
inc
cmp
inc
mov
add
xor
jmp
push
out
jle
push
lock
sbb
push
mov
aad
rorl
and
aaa
pop
shll
cmp
stos
inc
jmp
cmp
xor
mov
push
inc
mov
mov
pop
mov
sub
sub
mov
sbb
sub
or
das
jae
lods
rolb
mov
xchg
jno
in
mov
subl
adc
pop
jb
call
add
dec
pop
addb
out
scas
cmp
and
test
jae
mov
in
push
sahf
mov
insb
ljmp
cld
push
jns
push
stos
mov
or
mov
cmp
and
dec
test
inc
xchg
xchg
xor
sbb
js
push
mov
jnp
sub
cmp
jmp
dec
cmp
mov
pop
dec
imul
and
push
inc
out
dec
ret
adc
nop
cmp
pop
push
xor
jb
xchg
mov
or
cmp
loope
je
xchg
stos
xor
xchg
notw
xchg
fistpl
popl
cmp
mov
cmp
xor
cmp
xor
decb
gs
outsb
mov
ss
dec
scas
jmp
cwtl
mov
testb
mov
int
cmp
mov
dec
pop
mov
sbb
jle
pop
cmp
icebp
xchg
mov
sbb
cmp
pop
mov
mov
xor
stos
clc
je
cmp
or
push
out
mov
cmp
ss
out
xor
adc
rcrb
out
sbbl
call
scas
js,pn
lock
adc
cmp
imull
and
jns
cmp
jne
ret
mov
xor
dec
adc
and
xor
adc
stos
and
dec
fwait
or
enter
jle
enter
insb
adc
mov
or
andb
pop
add
mov
mov
js
in
xor
xchg
mov
leave
mov
fs
and
or
aam
cmp
mov
mov
sbb
gs
call
push
enter
jb
mov
pop
and
aas
jmp
ljmp
jge
scas
jno,pt
adc
mov
arpl
repnz
cmp
jno
pop
fidivrs
dec
sbb
xor
cmp
or
cmp
adc
cmp
loopne
mov
push
fistpll
test
adc
jae
cmp
je
sub
clc
nop
mov
repz
adc
cmpsb
fidivrl
decb
dec
hlt
and
sub
mov
dec
xor
pop
push
inc
sbb
in
pop
cmp
fcoms
fdivl
mov
jmp
or
mov
cmp
push
or
and
pop
sub
mov
xchg
fnstcw
cmp
sub
jg
pop
stos
jmp
pop
loope
sub
xchg
pusha
xor
inc
hlt
lahf
cmp
jb
push
xor
imul
aas
cmp
xchg
js
cwtl
cmp
dec
inc
mulps
dec
mov
cltd
mov
stc
enter
and
sub
out
ficomps
mov
add
stos
jle
in
pusha
push
out
xor
test
mov
or
xor
sub
out
rcll
icebp
js
and
and
mov
sbb
outsb
xor
or
into
push
add
jo
fnstenv
mov
jmp
or
mov
pop
mov
dec
out
enter
xchg
push
sbb
cwtl
cmpsl
aas
inc
cltd
sub
jns
xor
movl
insb
inc
sub
sbb
cmc
filds
outsl
aam
ss
mov
lds
adc
sbb
inc
cmp
sbb
xor
sbb
in
in
mov
repz
ss
insb
aaa
fcmovbe
mov
or
mov
imul
fnstenv
xor
loope
mov
test
push
cmp
sbb
pop
push
div
mov
ss
xchg
cwtl
cmp
fidivrl
mov
fwait
add
clc
sub
push
pop
mov
add
push
imul
mov
jb
pop
xchg
repnz
mov
adcl
sbb
and
gs
in
adc
subl
dec
clc
and
jmp
xchg
stos
xor
pop
adc
lahf
xor
fisttps
out
cmp
pop
mov
cmp
daa
pop
insl
fstps
int3
aaa
enter
mov
push
cmc
inc
sbb
inc
lahf
loope
xchg
cmp
xchg
je
cmp
roll
sbb
and
es
mov
jnp
lret
add
add
sub
sub
and
add
and
mov
scas
jmp
lods
jg
push
out
sbb
mov
inc
push
shlb
and
jmp
sub
insb
pop
sbb
xchg
cmp
push
add
or
pop
popl
xchg
xor
jae
and
pop
sub
lock
xchg
inc
sbb
push
cwtl
loop
xor
testb
mov
fidivl
cmp
mov
scas
push
ss
mov
add
scas
jbe
cld
push
xor
mov
sub
sbb
adc
fadds
mov
sub
popa
fistl
pop
sbb
mov
push
fisubs
mov
dec
mov
xor
flds
sub
mov
xor
jns
xor
push
sbb
cmp
and
and
dec
mov
sbb
sbb
fimuls
xchg
mov
daa
scas
lcall
sti
push
jle
push
cmp
sub
or
add
popa
jp
inc
or
test
aaa
dec
jecxz
clc
push
xor
mov
jg
pop
inc
in
sbb
xor
and
popa
cmp
adc
aaa
out
fbld
dec
mov
sarb
adc
add
sub
cmp
xor
adc
es
sub
mov
inc
xchg
cmp
add
sbb
jbe
test
fnstenv
and
ret
insb
mov
pop
xor
mov
js
mov
inc
mov
sbb
xor
mov
fisubl
pushf
lea
dec
xor
jecxz
xor
dec
sub
rorl
cmc
out
cmp
push
ss
cltd
les
nop
test
jmp
mov
cmp
sub
push
shr
popa
mov
push
push
int3
int
fisttps
bound
les
cmp
push
xchg
enter
add
clc
sub
fldenv
cs
mov
mov
cmp
jo
pop
ljmp
xor
sub
dec
sbb
and
fs
sbb
faddl
or
cmc
jae
adc
fisttpll
jb
cmp
fisttpl
lock
bound
jnp
test
stc
sbb
cmp
add
adc
ret
pop
ljmp
out
mov
pop
jo
stos
xor
push
and
or
dec
arpl
sar
adc
dec
sbb
lds
mov
aad
pusha
pop
mov
repnz
push
xor
push
adc
cmp
xor
mov
xchg
mov
and
xchg
or
inc
fldenv
pop
int
cli
sub
iret
or
imul
cmpsb
js
add
andl
add
ficomps
push
inc
sbbb
add
mov
jge
cwtl
inc
mov
cmp
je
and
xor
push
leave
fmuls
push
mov
jg
xchg
clc
iret
lock
xchg
stos
pushw
xor
ljmp
gs
dec
cmp
or
lods
xor
negb
add
rclb
and
loop
neg
sbb
jb
cmp
jge
add
mov
lcall
sbb
repz
jb
xor
cmp
xchg
loope
jbe
jge
cmp
sbb
inc
int
lods
leave
dec
std
pop
stc
xchg
scas
cmp
pop
arpl
cli
sub
adc
mov
push
mov
xchg
cmp
scas
cmp
mov
dec
cmp
add
cs
xchg
inc
mov
bound
sbb
and
clc
sbb
jg
repnz
les
cmp
inc
cwtl
and
int3
xchg
xor
jl
dec
arpl
and
pop
dec
sub
xor
fsts
cli
rorl
add
inc
mov
out
cmp
pcmpgtd
stos
movsl
fisttps
fs
dec
aaa
xor
inc
rcll
leave
out
scas
xor
ret
cmpl
movsl
push
jecxz
and
jge
cwtl
je
sahf
mov
sti
sub
push
mov
xor
sbb
popf
mov
sbb
cltd
sbb
flds
xchg
aaa
movb
pop
mov
cmp
fadds
cmp
pop
jbe
loopne
cmp
insl
push
sbb
cmp
push
nop
mov
adc
sub
pop
scas
mov
sbb
mov
sbb
push
inc
enter
jbe
js
int3
repnz
adc
sbb
mov
jo
call
cmp
inc
push
mov
or
test
xchg
roll
jbe
cmp
icebp
pop
dec
xor
pop
sub
cmp
cmp
aam
sbb
mov
hlt
dec
loop
enter
mov
subl
inc
xor
inc
xor
xchg
shrb
shl
cmp
mov
in
push
push
sbb
leave
xor
notb
and
in
add
sarl
ja
fistpll
push
or
repz
enter
fstps
mov
outsl
mov
xor
or
xor
xchg
xor
or
xor
xchg
sbb
jl
mov
repnz
or
test
fiadds
xchg
jl
cmp
cmpsb
repnz
lods
xchg
sahf
jb
jle
cmpb
js
mov
sub
mov
pop
insl
cmp
xchg
add
dec
push
imul
fnstenv
jae
jge
xor
mov
repnz
mov
jecxz
aaa
push
out
popf
push
adc
stc
rolb
or
repz
cmp
je
cmp
sahf
pop
cmpsl
inc
int
or
cmp
in
mov
lods
cmp
js
xchg
enter
add
pop
cmp
mov
mov
jge
popf
sub
mov
cmp
add
sub
hlt
call
je
leave
cmp
imul
repz
jg
cmp
cmp
ret
pushl
ja
shll
daa
xor
pop
cmpsl
adc
incb
push
out
mov
sbb
dec
push
and
cmp
jl
mov
popa
mov
repz
shll
push
push
sahf
mov
ja
sub
roll
inc
daa
stc
testb
cmp
lret
or
dec
add
fmuls
mov
insb
pop
xor
arpl
popa
faddl
dec
roll
push
and
sub
mov
icebp
std
push
lock
repnz
pop
data16
std
xor
shll
cltd
adc
ljmp
jo
bound
mov
inc
push
pop
sti
jp
sbb
xchg
inc
shll
cmp
sbb
inc
xor
pusha
cmp
xchg
dec
test
mov
add
or
xor
popa
pop
add
js
xchg
leave
sub
cli
mov
xlat
add
mov
push
push
pusha
push
cld
ja
cmp
inc
inc
outsb
xlat
dec
xor
add
fsubrs
call
jo
int3
cwtl
out
cmp
cs
push
xchg
mov
sub
cmp
fimuls
jle
std
mov
stos
push
repnz
movsb
xchg
cmc
and
enter
dec
fidivl
add
in
xor
sbb
mov
dec
cmp
pushf
pop
push
repnz
stc
cmp
xor
ja
add
fcoms
dec
add
mov
and
xchg
xor
repnz
shrb
adc
popf
jo
cmp
mov
roll
xor
xlat
inc
cwtl
and
sarb
jno
shll
dec
inc
dec
cmp
clc
xchg
bswap
jle
scas
xchg
outsb
sub
lcall
push
adc
pushl
sbb
pop
shl
inc
ffree
ffreep
xchg
rolb
out
lds
jbe
jae
rorb
jnp
mov
xor
push
nop
cmpsl
dec
adc
out
mov
insb
enter
xlat
add
dec
enter
ss
cmc
push
fbstp
push
dec
lods
cltd
mov
out
sbb
dec
xor
mov
imul
jecxz
lret
out
mov
pusha
insb
add
sbb
adc
icebp
jecxz
popa
lods
lea
ds
sub
mov
in
aas
dec
mov
cmp
mov
dec
je
adc
movsl
dec
testl
xchg
mov
ss
and
cmp
out
xor
or
mov
adc
mov
xor
je
dec
test
cmp
sbb
and
push
cmp
orl
xor
loope
push
out
icebp
inc
sub
mov
and
or
cld
sbb
xor
cmpsb
mov
frstor
orb
mov
subb
pop
pop
add
mov
adcb
adc
mov
dec
push
mov
mov
test
cwtl
divl
mov
out
hlt
rep
roll
cs
jno
scas
cmp
inc
inc
add
pusha
rcll
jae
cwtl
fidivl
dec
pop
dec
or
cli
add
jae
iret
sahf
jns
jb
dec
wrmsr
xor
dec
lea
push
hlt
in
inc
mov
scas
cltd
test
adc
adc
push
mov
cmp
ss
andb
pop
add
pop
mov
cmp
cwtl
fcos
sub
ss
push
or
or
icebp
adc
inc
dec
cmp
fs
mov
sub
jo
stos
shll
test
pop
mov
xor
pop
insb
xchg
lret
cs
fs
jne
cmp
jno
jo
cmpsb
push
lods
aas
cmp
adc
add
cmp
pop
repnz
mov
jne
xor
adc
fnstcw
mov
pop
and
and
add
cmp
inc
lcall
xor
xor
cmp
cmp
inc
fdivrs
je
add
sbb
xor
shlb
xor
dec
enter
cmp
bound
daa
or
outsb
cmp
je
out
adc
xchg
scas
pop
loopne
cmp
and
push
adc
jbe
jmp
cmp
fsubrs
pop
mov
loope
pop
fistpl
shll
push
mov
or
dec
jle
das
or
cmc
and
clc
push
dec
sbbb
inc
mov
test
push
sub
dec
cmp
or
cmp
mov
iret
pop
jo
call
lret
mov
mov
movsl
mov
and
movsb
and
adc
sub
mov
cmp
cmpsb
xchg
and
fs
jge
sahf
cmp
cltd
adc
mov
dec
sbb
addr16
adc
xor
cli
cmpsl
xor
mov
mov
xor
pop
jo
movsl
add
hlt
shll
loope
pop
cmc
sub
cltd
cs
xor
mov
and
cmp
nop
cmp
pop
fsubs
mov
rclb
cmp
push
cmp
shlb
movsl
cmp
icebp
sub
dec
and
push
aad
rclb
out
enter
es
cmp
jle
stc
fnstenv
lock
rcll
test
sub
mov
gs
cmp
mov
push
xor
xchg
jo
repz
xor
in
xor
popa
xor
xor
stos
add
cmp
fs
repz
jno
inc
pop
inc
pop
sub
xor
cwtl
pop
out
and
cmp
sub
cmp
push
inc
or
push
pop
push
and
lods
flds
xlat
mov
cmp
jle
test
cmp
xor
sub
stc
lret
div
xor
mov
push
inc
mov
jmp
das
xchg
movsb
inc
mov
shlb
in
add
mov
cmp
lods
pop
jle
dec
or
sbb
out
inc
push
mov
std
xor
pop
mov
jae
cmp
dec
add
leave
daa
add
jl
cmp
jle
popa
xor
fidivs
in
and
in
push
sbb
mov
mov
negb
push
cmp
out
mov
shll
mull
and
aaa
jns
mov
inc
hlt
sbb
mov
or
iret
xor
leave
xor
sbb
or
xchg
imul
push
call
mov
cmp
xchg
or
pop
mov
and
divl
sbb
lret
xor
test
aam
xor
loope
add
fnstenv
or
or
and
aaa
inc
xorb
mov
leave
incl
ljmp
cmp
data16
jbe
aad
fsubs
push
sbb
xor
xchg
loope
rcrl
movl
cmp
sub
es
enter
sbb
lcall
xor
rorl
push
cmp
nop
inc
cmp
fstps
fcmovu
jns
cmp
lods
xchg
cmpsl
dec
xor
jno
pop
pop
es
into
cmpsl
rdmsr
sub
cmp
push
mov
int
popa
sahf
jb
aam
xchg
push
xor
xor
add
loope
outsb
xor
inc
je
mov
mov
in
adc
xor
inc
xchg
sub
mov
repz
xchg
mov
cmp
or
or
outsb
adc
mov
xlat
push
ja
or
andb
mov
cmp
and
cmp
daa
shl
push
inc
cmp
or
mov
xorb
and
inc
jbe
mov
mov
cmpsl
repnz
xor
stos
mov
iret
inc
mov
ss
clc
mov
test
and
jl
mov
shll
push
xor
sbb
push
test
js
mov
test
daa
sub
cmp
cmp
cmp
ljmp
ss
push
or
stos
imul
pop
into
mov
cmp
out
pop
fwait
pop
aam
xorb
leave
fbld
adc
pop
xor
jmp
pop
jnp
gs
and
mov
cmc
xor
imul
ret
imul
jns
clc
xchg
shll
inc
dec
andl
aas
xor
sbb
xor
aaa
cmp
cmp
pop
mov
scas
mov
daa
add
cmp
es
mov
push
out
pop
rorl
fcompl
push
adc
sahf
sub
cmp
es
fistpll
add
fdivrl
movsb
push
cmpl
cmp
jns
popa
cli
test
or
sbb
mov
aaa
fnstenv
xchg
xor
repz
repz
in
cmp
es
cmc
jne
cmp
jo
mov
jmp
jae
xor
mov
ljmp
xor
fcmovbe
popl
jmp
jp
jae
and
push
aad
pop
xor
cmp
xchg
cli
xchg
call
mov
mov
pop
sahf
cmp
test
fs
fnstcw
out
push
xor
inc
aad
sbb
ds
or
cmp
pop
outsl
repnz
and
push
cmp
dec
cmp
loope
xchg
cmp
and
xor
in
cmp
popa
mov
call
into
in
jg
cmp
pop
out
jmp
xchg
lcall
cmp
inc
cltd
pop
ja
cmc
lahf
add
adc
dec
cs
insb
jae
sbb
ret
dec
cmp
cmp
cmp
inc
xchg
pop
push
pop
cmp
fwait
stos
inc
inc
and
mov
xor
cmp
lret
and
adc
cmp
mov
rcrb
ficompl
jne
pop
xchg
xor
and
xor
xchg
dec
cmp
xchg
insl
mov
sub
call
push
jne
xchg
and
stc
mov
mov
aaa
divb
pop
clc
push
adc
je
xchg
push
or
push
aaa
nop
in
sbb
adc
aaa
jns
and
shlb
or
repnz
sti
cmp
jb
xchg
sarl
add
inc
test
cmp
outsl
fistps
push
test
add
subl
and
nop
xor
xor
icebp
pop
dec
push
and
loopne
iret
imul
adc
js
xor
inc
cmp
cmp
pop
mov
mov
insb
jns
cwtl
cmp
test
fnstcw
mov
xor
push
les
pop
imul
or
xor
sub
call
clc
cmp
push
rclb
adc
pop
dec
xor
fidivrl
mov
repz
xchg
cmp
cmp
dec
imul
pop
int
repnz
mov
insb
push
cmp
cmp
lahf
sub
daa
xor
xor
cmpsl
pop
call
mov
jno
adc
aas
insl
cmp
js
addr16
jne
mov
out
nop
jo
in
fs
jp
xor
push
push
lret
rorb
shrl
adc
loope
adc
jno
cmpl
inc
mov
data16
pop
inc
xchg
call
cmp
pop
stc
repz
loope
loop
in
hlt
inc
dec
xor
scas
mov
sbb
lds
push
adcl
pop
stc
cmp
ss
xor
lock
xor
and
aaa
mul
mov
fnstenv
xor
xchg
in
bound
push
cwtl
mov
mov
xor
inc
shlb
out
and
cs
cmp
xor
clc
fadds
cmp
cs
lds
pop
xor
je
subl
jg
pop
inc
cmp
push
or
xor
popa
xor
cmp
push
das
mov
iret
cmp
xor
subb
mov
mov
cltd
adc
cmpsw
mov
add
ja
movsb
xor
xor
sahf
cld
xor
mov
mov
or
aas
pop
not
cmp
pushf
mov
push
sub
fnstenv
std
repz
mov
lea
and
lret
cmp
mov
enter
cwtl
in
mov
mov
add
sahf
mov
pop
loopne
enter
inc
add
cmp
ss
clc
sbb
xchg
outsb
fstl
test
addr16
or
xlat
sbb
pop
xlat
xor
mov
test
and
mov
aaa
xor
adc
mov
cmp
adc
rclb
ss
inc
mov
fidivl
cmp
into
test
cmpsb
dec
xor
lret
incb
adc
jno
cmp
mov
push
cmpsl
pop
enter
xor
inc
rcr
jbe
cmp
fs
cmpsl
notb
mov
iret
push
xor
test
sahf
repnz
mov
push
adc
shll
cmc
sub
sbb
pop
pop
push
jno
sub
or
movsb
push
sub
xor
push
sbb
cmp
cltd
fdivrs
sbb
jns
add
shlb
mov
rcrl
and
adc
cmpb
out
push
mov
xlat
cmp
js
xor
xchg
xor
xor
or
vpunpcklqdq
jmp
xor
cmp
aaa
pop
mov
jo
hlt
xor
add
cmp
into
lds
pop
xor
cmpsb
aas
movsb
fdivrs
mov
and
push
out
repnz
lods
pop
mov
mov
movsl
fdivl
mov
pop
xor
enter
mov
pushf
stc
ss
fcom
std
xor
sbb
adc
aaa
add
jl
xor
xor
popf
mov
jb
es
xchg
rolb
push
mov
fbld
adc
adc
adc
jb
icebp
xor
mov
mov
bound
jb
pop
xor
sub
cmpsl
gs
stc
sbb
rdpmc
mov
into
daa
cmp
xor
or
je
repnz
cld
jmp
cmp
push
mov
add
cmc
rorl
xchg
dec
cmp
stos
jno,pn
rclb
jae
mov
xchg
mov
cmp
mov
sbb
iret
jo
cmpsb
dec
aad
lods
xor
sbbl
sub
mov
cmp
push
mov
jmp
adc
xor
mov
inc
xor
cmp
test
stos
adc
in
and
dec
sub
es
push
xchg
cmp
or
sarb
mulb
mov
outsb
clc
jo
ja
adc
mov
mov
fadds
jns
jnp
xchg
xor
je
lret
cmp
popa
icebp
xchg
xor
lret
fsubrl
xchg
push
mov
pop
xchg
leave
add
call
cltd
cmp
cmp
sbb
inc
or
xor
xor
sti
sarl
sub
or
xlat
pop
xchg
dec
je
xchg
adc
andl
fcomps
xor
ljmp
xchg
sbb
addr16
into
sahf
push
insl
cmp
insb
jbe
push
fidivl
fdivrl
mov
xlat
pop
ret
cmp
adc
lods
mov
or
js
and
ss
jo
xor
adc
repz
aaa
mov
cmp
jns
jne
cmp
pop
jae
int3
sbb
imul
mov
aas
fidivl
cmp
je
sub
ljmp
jp
shll
shrl
repz
and
push
cmpsb
cwtl
repnz
ss
out
rorl
inc
std
fisubrl
int
cmp
out
fisubrs
xchg
mov
push
aad
int3
jl
cmp
pop
sbb
cmp
pop
cmp
cmovp
cmp
jns
fs
shll
fmuls
jp
fistpl
out
enter
in
popf
xor
xor
and
pop
adc
inc
jae
popa
cmp
into
jle
data16
and
clc
push
xor
push
rcrb
sarl
inc
mov
jno
pop
xchg
xor
adc
imul
mov
cmpl
dec
scas
cmp
cmp
mov
stos
xorl
sbbl
into
movsl
cmp
xchg
dec
and
clc
push
xor
loope
add
je
ret
rcrl
jo
pushl
icebp
inc
sbb
popf
iret
lock
cmp
xlat
sti
cmpsb
pop
ss
loope
jb
and
cmp
push
pusha
cmp
ss
pop
push
jno
mov
mov
xchg
xor
and
cmpsl
sbb
movsb
pop
mov
xor
jmp
and
repnz
call
ss
push
xor
nop
mov
std
sbb
pop
jmp
push
mov
imull
jmp
std
std
cmc
or
sahf
cmp
loope
bound
das
jbe
je
mov
push
ss
icebp
lret
cmp
mov
outsl
repz
arpl
loope
into
fs
loopne
cmpsl
cmp
sub
dec
and
xor
popa
cltd
inc
pop
ljmp
mov
cmp
fiadds
xor
cmp
aad
sub
enter
add
rclb
push
dec
inc
sar
xor
and
inc
adc
or
scas
out
out
mov
mov
test
les
sub
sub
cmp
and
testl
xor
mov
sbb
xor
repz
fidivrs
scas
out
fistpll
mov
das
xor
add
enter
loopne
aam
mov
lahf
mov
shlb
cmp
loopne
cltd
sti
xor
sahf
sbb
mov
cs
movb
imul
int3
cmp
ss
mov
push
cmp
xor
xchg
test
xchg
orl
call
inc
fsubs
xor
sti
inc
in
out
mov
xor
sbb
in
mov
fwait
aaa
addr16
xor
or
nop
mov
sbb
test
jae
stc
iret
and
sbb
xor
dec
jo
adc
jno
sbb
cmp
mov
ja
xor
pop
dec
sub
push
cmp
jge
push
icebp
negb
mov
imul
push
clc
xchg
je
or
mov
sub
inc
test
nop
cmp
adc
lahf
rcrl
mov
add
test
or
mov
loop
repz
mov
sbb
lods
pop
jae
add
add
ss
xchg
cwtl
cmp
insl
lea
mov
aaa
es
cmp
cmc
sub
rol
les
loopne
sbb
adc
push
loop
lret
and
ljmp
test
loope
dec
enter
sar
nop
jo
out
pusha
stos
cmp
cmp
cwtl
or
sahf
and
fistpll
idivb
add
movsb
push
push
adc
enter
mov
xor
or
xchg
dec
lods
movsb
inc
mov
push
push
pop
lods
mov
sub
shlb
sbb
std
mov
cmp
je
push
mov
xor
pusha
call
jp
cmp
and
or
nop
int3
fs
inc
shrl
sbb
shlb
cltd
jbe
jg
pusha
lret
xor
pop
ja
mov
lods
mov
sarl
repz
mov
cwtl
mov
xor
adc
push
pusha
xchg
dec
sbb
push
sbb
and
enter
cmp
cmpl
inc
cs
pushf
test
stos
hlt
cmp
sbb
sbb
arpl
fisubs
mov
aam
dec
sbb
add
add
mov
int
rclb
inc
push
repnz
je
add
push
leave
leave
lret
leave
pop
std
or
lds
and
ds
outsl
int
cmp
pop
pop
cmpsl
add
pop
sbb
mov
and
sub
daa
stos
shrl
dec
push
in
cmp
xchg
popa
cmp
adc
in
cs
sbb
or
inc
xor
ljmp
lahf
xor
cmp
aaa
or
cmp
cld
mov
out
mov
ljmp
push
in
pop
mov
push
icebp
aad
mov
jle
adc
xor
lock
pop
cmp
push
xor
jg
fcoml
fidivrs
inc
bound
adc
out
add
cmpsb
out
and
xchg
mov
popa
cmp
das
repnz
pop
std
mov
sbb
mov
lea
roll
xorb
cmp
scas
mov
dec
in
arpl
sbb
adc
xor
negb
cmp
mov
xor
cmp
daa
test
cmp
scas
push
mov
jbe
rcrb
cmp
push
mov
cmp
pop
xor
sarb
mov
insb
cmp
insl
hlt
jnp
inc
js
mov
test
scas
hlt
xor
stc
mov
jns
cs
fmuls
mov
testl
lcall
mov
pop
mov
dec
sub
mov
pushf
jae
cmp
push
scas
movsb
cmp
lahf
xorl
pop
mov
xor
inc
push
loop
cmp
fnstenv
aaa
sbb
cmp
jb
ret
push
mov
popf
cmpsl
jne
out
cmp
lret
rclb
popf
in
sti
ret
cmp
js
xor
sbbb
inc
ret
cmpsb
in
cmc
push
mov
test
mov
xor
lcall
mov
cmp
jge
les
pop
cli
or
xor
cmp
dec
pusha
jmp
scas
lret
std
push
jb
dec
pop
cld
xor
movsb
xor
stc
pop
fstp
int3
cmp
xchg
cltd
dec
pop
xchg
jmp
cmp
jb,pt
aaa
mov
scas
arpl
cmp
ret
cmp
loop
stc
mov
sub
fwait
pop
dec
mov
cmpsb
xor
lcall
sbb
ss
icebp
pop
ret
add
mov
cvttps2pi
inc
cmp
xchg
in
sub
test
outsb
jbe
and
bnd
movsb
xor
and
mov
in
aas
data16
mov
leave
xchg
add
add
cmp
inc
data16
sbb
dec
xchg
pop
mov
adc
int3
pop
nop
aam
mov
popf
movhlps
and
mov
push
flds
xchg
push
xor
push
fists
pop
and
arpl
cmp
jle
iret
cs
pop
rclb
sub
out
stos
xchg
jg
cmp
lock
push
mov
add
adc
xorb
orl
fsubs
icebp
lock
mov
cmpsb
repz
xor
or
mov
mov
or
cwtl
fisttps
sbb
mov
dec
sub
stc
fisubs
pop
inc
xor
mov
add
xor
fisubl
inc
sbb
dec
call
stos
loope
repz
dec
cmpsb
mov
cmp
sbb
cmp
hlt
nop
sarl
or
in
cwtl
mov
mov
pop
mov
mov
xor
idivl
hlt
push
ja
xlat
aaa
imul
jne
sbb
int3
data16
insb
jo
adc
push
rcrb
sbb
xchg
and
scas
lock
mov
adc
cmp
pop
sbb
fbld
xor
std
shrb
cmp
mov
jno
or
jl
iret
lds
cmp
andb
sbb
movsl
cmp
add
sbb
cmp
fdivr
cwtl
push
xlat
sbb
lock
adc
rcrb
mov
cmp
repnz
cmp
mov
adc
daa
cmp
dec
or
adc
rcrb
je
cmp
pop
aam
xchg
js
cmp
sbb
shrb
add
sub
aaa
js
jns
out
push
or
push
cmp
mov
test
rolb
repz
dec
inc
test
int
cmp
stos
clc
sbb
out
icebp
push
push
inc
or
aas
stc
cmp
xor
movups
scas
jbe
cmp
vlddqu
xchg
cmc
out
cmp
sti
pop
stc
cmp
inc
repnz
jns
sub
arpl
xchg
js
xor
cmp
fisubs
mov
cmp
mov
cmp
andb
mov
in
jmp
cmp
lahf
dec
push
out
rcr
xor
mov
xor
out
int
jns
xchg
daa
mov
sar
mov
mov
lahf
jg
in
xchg
rep
cmc
cmp
sti
and
add
jg
loope
mov
cmp
mov
std
jle
push
clc
sbbb
fidivl
or
jle
push
and
push
cmp
scas
adc
mov
sbb
sbb
cmp
cwtl
scas
sbbb
dec
ret
mov
inc
jo
mov
adc
hlt
icebp
push
mov
test
and
mov
cmp
ficoml
enter
mov
xchg
fildll
movsl
inc
lret
in
scas
mov
js
stos
pop
scas
enter
xchg
sub
mov
pop
or
xchg
dec
dec
add
sbb
pop
shll
cltd
inc
popf
sbb
outsl
cmp
mov
pop
sub
mov
add
mov
sbb
addb
jbe
dec
jo
jmp
sahf
push
mov
sub
xor
mov
lret
jo
xchg
or
mov
sahf
xchg
mov
stc
pop
jno
push
xchg
jae
test
inc
add
or
lods
sub
repz
pop
jo
sahf
das
int3
xor
push
enter
outsl
cmp
pop
nop
stos
xchg
dec
lcall
fcomps
cmp
push
in
adc
mov
mov
int
clc
ret
and
shll
scas
sbb
jbe
xchg
test
mov
pop
iret
fbld
adc
repz
cmp
sahf
and
adc
insl
pop
xor
ret
jecxz
cmpsb
cmp
cmp
inc
mov
sarl
leave
mov
or
das
daa
test
push
cmp
cld
inc
pop
shrb
testl
nop
out
jl
mov
pop
mov
jp
cmp
xor
shl
stos
mov
ret
cmp
test
xor
dec
xchg
mov
sub
xor
addr16
dec
arpl
add
dec
adc
nop
sub
mov
mov
out
add
inc
sub
insb
mov
pop
aas
stos
repz
pop
cmpsb
jno
cmp
add
bound
xor
dec
adc
xor
mov
dec
repz
mov
inc
sbb
jns
int3
cmp
push
dec
sbb
jle
inc
test
add
rcll
sub
inc
sub
dec
stos
cmp
cmp
aas
jne
and
jle
mov
js
es
sub
push
mov
shll
fldl
and
add
mov
pop
mov
push
cmpsl
dec
add
lahf
sbb
divl
lock
cmp
mov
adc
dec
jle
add
mov
out
mov
dec
inc
jb
dec
mov
xor
cmp
mov
cmp
nop
fdivrl
cmp
lock
jb
jle
pop
dec
loop
add
mov
jo
in
xor
cmp
fldt
sub
xor
lods
and
push
fsubrl
cmp
scas
sbb
fadd
xor
fmulp
adc
mov
call
aas
push
mov
sbb
mov
popa
inc
mov
push
bound
dec
sub
or
int3
jns
or
cmp
push
aaa
push
cmp
xor
dec
mov
push
das
mov
sahf
jp
mov
cmp
push
sbb
add
enter
icebp
cmc
sahf
xor
mov
es
adc
cmpsb
and
lahf
in
outsb
xor
pop
jo
movsb
cmp
jecxz
cmp
dec
cmp
sub
in
sbb
cltd
out
and
xorb
rcr
jb
xor
mov
xor
and
cmp
hlt
inc
mov
aaa
pushf
adc
das
pop
in
add
xor
and
aam
pop
shrl
divl
addr16
stos
leave
ja
adc
cmpsb
xor
adc
xchg
cmp
test
jb
stc
mov
fcom
cmp
es
ljmp
push
jo
lds
out
rcrb
cltd
jg
aaa
daa
adc
xchg
dec
lret
bound
outsb
dec
nop
cmp
jne
mov
divl
mov
xchg
push
add
loopne
clc
xchg
push
dec
roll
xor
imul
cltd
add
repnz
ret
xor
cmp
xor
push
cwtl
pop
lcall
in
call
adc
xor
fsubs
jb
mov
cmp
xor
daa
dec
aad
and
cmp
xchg
cmp
dec
push
mov
xchg
xchg
sahf
mov
push
les
add
cmp
push
mov
cmc
subb
xor
inc
repnz
adc
sbb
lret
inc
rcrl
lret
and
addr16
cmpsb
dec
mov
fcomi
enter
fdivrs
adc
cmp
lock
lea
cmp
push
jae
call
sarb
xor
add
popf
or
and
xchg
ljmp
lods
lods
and
xchg
adc
and
push
mov
aad
jb
lds
cmp
aam
fs
push
mov
call
js
cli
cmp
add
popf
cmp
stc
adc
add
andb
push
fsts
mov
mov
ja
inc
testl
fiaddl
pop
rcrb
dec
jo
sbb
or
cmpsb
stc
icebp
std
sbb
sbb
cmp
pushf
jns
movsl
add
sub
pop
add
mov
xor
aam
add
pusha
cld
out
add
scas
cmp
sbb
shl
ja
sbb
push
xor
movsl
cmp
cmp
aam
push
mov
xor
pop
xor
push
fdivrs
lods
inc
ss
sub
cwtl
push
jb
dec
cmp
adcl
xor
aad
mov
pop
shll
scas
popf
inc
jp
pop
cmp
mov
sbb
push
dec
pop
mov
lret
pushf
mov
aam
je
pop
sub
add
wrmsr
mov
mov
sbb
inc
mov
and
das
push
mov
mov
jae
mov
inc
sbb
fidivrl
fmuls
popf
lret
xor
or
xor
cmp
fcomp
out
cmp
cwtl
pop
inc
out
pop
and
inc
mov
jge
lods
popl
cmp
jno
or
xchg
xor
mov
popa
cmp
xchg
stc
dec
and
ss
cmp
movsl
test
out
fcoms
pop
xor
adc
ficomps
loopne
lret
sarb
popa
cmp
xchg
add
and
addr16
aaa
sub
adc
dec
cwtl
mov
add
sbb
aam
repnz
xor
push
mov
inc
pop
repnz
insl
cmp
inc
push
push
stos
mov
jns
and
aad
nop
shl
add
add
pop
cmp
fnsave
ficomps
xchg
scas
cmp
push
clc
xor
dec
mov
sbb
xor
leave
icebp
or
jb
cmp
adc
mov
adc
xor
mov
sbb
push
cmp
cmpsl
sbb
push
cmp
mov
cmp
jp
lock
ficomps
pop
push
and
mov
mov
sbb
xor
int3
and
dec
sbb
cmp
clc
pop
jmp
xorl
rolb
mov
loope
mov
jo
dec
cmp
xchg
testl
xchg
xchg
loope
adc
mov
xor
mov
cwtl
stos
fdivrl
inc
sub
aaa
xchg
cmp
xchg
daa
xchg
je
add
cmp
iret
test
pusha
aam
cmp
loope
cltd
icebp
sbb
pop
sub
push
in
jle
mov
push
push
mov
mov
cmp
into
xchg
nop
mov
xor
sahf
in
pop
sbb
shl
sbb
cmp
and
mov
xor
movsl
mov
and
adc
cmp
gs
sub
and
adc
cmp
sbb
scas
sti
imul
xchg
cwtl
jp
mov
push
xchg
mov
je
sbb
push
pop
mov
jae
cmp
mov
pusha
add
rcrl
js
fs
sbb
arpl
aaa
push
xchg
inc
or
mov
sti
fnsave
push
push
jns
sub
aam
xor
mov
mov
sub
adc
popa
jae
cmp
mov
cmp
outsb
xchg
xor
and
nop
cmp
mov
stc
cmp
fistl
cmp
or
xor
xchg
ja
int
push
cwtl
enter
outsb
mov
lods
mov
cmp
add
pop
cmp
fwait
pop
sbb
sbb
sbb
mov
mov
mov
mov
aad
xor
jo
dec
sbb
stos
rdmsr
pop
and
adc
adc
xor
cmp
add
mov
or
psubw
xchg
scas
hlt
cmp
push
mov
adc
inc
push
cmpl
icebp
jg
xchg
cmp
iret
mov
push
pop
fcmovbe
cmp
jae
sbb
mov
mov
mov
sub
cmp
mov
or
pop
subb
call
push
jnp
mov
sar
divb
xchg
in
cmp
pop
cmp
xor
sti
int
push
sbb
cmp
mov
fbld
mov
hlt
adc
and
js
stc
cmp
outsb
push
jo
jmp
fidivs
subb
xchg
xchg
and
jae
sub
mov
mov
cmp
xchg
push
push
xor
jl
popf
jo
lock
aas
icebp
jbe
xor
stc
adc
mov
jmp
sbb
inc
scas
cmp
shrb
rolb
icebp
popf
cs
jp
loopne
pop
div
ret
jo
pop
out
mov
cmp
push
pusha
scas
jle
cltd
xor
je
clc
aam
sbbb
and
mov
add
loop
sbb
adc
das
rcll
add
push
cmp
cmpsl
cmp
or
stos
xor
cs
add
mov
incl
je
adc
xor
enter
sbb
xor
push
mov
shl
call
pop
fsubrs
ljmp
and
jae
cmp
jmp
push
fcomps
mov
push
xor
lock
xchg
mov
mov
daa
pop
xor
icebp
xor
mov
arpl
ss
push
dec
shll
test
and
add
lahf
aaa
adc
test
aaa
cli
push
sbbl
gs
sbb
shl
stc
movsl
xor
add
cmpsb
add
adc
sbb
das
es
aam
insb
sarl
pop
cmp
std
nop
add
mov
pop
scas
xor
aam
loope
cmp
sub
insb
jle
xor
test
dec
xchg
xor
pop
sub
cs
or
jb
fcomps
push
mov
pop
pop
lret
cmp
lock
mov
pushf
cmp
add
push
sti
ja
decb
xchg
xor
lret
mov
cmp
push
shlb
div
cmp
jmp
or
inc
xchg
and
mov
enter
ja
je
cmp
inc
icebp
jns
test
stc
mov
rcl
dec
pop
cmp
mov
cmp
or
xor
pop
movsl
xor
mov
sbb
test
push
call
cmp
movsb
pop
xchg
and
iret
movsl
inc
aad
jb
imul
xor
in
mov
xchg
bound
jmp
xor
addb
or
push
xchg
adc
jecxz
xor
push
or
bnd
push
mov
pusha
orb
push
cmp
cmp
mov
pushf
sbb
cmp
scas
dec
and
faddp
ret
rcrb
xchg
ja
adc
inc
xor
das
cmpsb
push
dec
ds
js
cmp
rcll
dec
sub
repnz
cmp
xchg
rorl
test
scas
shll
stos
add
lret
xlat
adc
mov
xchg
sbb
stos
xor
shlb
mov
xchg
and
mov
jp
dec
inc
jmp
pop
inc
cmpl
jecxz
sbb
sub
pop
mov
cmp
nop
and
mov
push
cmp
mov
push
dec
movsl
ret
lret
xchg
cmp
in
nop
shll
iret
cmp
pop
jae
out
mov
jg
cmp
das
jnp
pop
pop
mov
pop
daa
xor
jns
jbe
push
movsl
jb
outsb
cmp
lcall
or
test
dec
stc
xlat
in
enter
divb
popa
arpl
sub
sbb
adc
and
imul
inc
loope
insb
outsb
cwtl
fstl
sbb
xchg
adc
and
inc
js
es
sub
stc
cmp
add
subl
sub
repz
jmp
cwtl
cltd
adcb
shl
aaa
pusha
clc
imul
push
lods
cmp
or
jmp
and
and
mov
cmp
mov
in
jle
sbb
mov
dec
dec
and
cmp
jns
mov
jmp
insb
xlat
mov
sub
test
mov
pop
test
fwait
int
pop
push
ljmp
pop
pusha
mov
jb
ftst
add
fwait
cmp
mov
fs
imulb
sub
imul
js
dec
mov
mov
inc
pmaxub
mov
into
es
push
mov
sub
cltd
pushf
scas
cli
daa
xor
dec
pop
jns
shlb
std
cmp
mov
xor
jbe
sub
sbb
cmp
rorl
pop
mov
adc
imul
lea
pusha
mov
aas
cmp
sbb
mov
mov
mov
pop
inc
xchg
dec
mov
jb
inc
push
lods
mov
ja
dec
cmp
jne
call
cmp
arpl
mov
ja
mov
shl
mov
lock
push
in
cs
and
push
movsl
inc
jnp
adc
aad
xchg
xor
negl
add
das
sbb
ja
and
cmp
lods
jae
int3
add
and
cmc
test
int
push
or
xor
cs
stos
popl
lds
jl
cmp
xor
loopne
lahf
mov
mov
mov
pusha
and
cwtl
cmp
xchg
pop
sbb
pop
add
insb
dec
mov
aam
movsl
roll
cmp
fsubrs
out
cmc
or
jle
pushf
in
lahf
nop
dec
push
aam
cmp
popf
push
ret
inc
scas
pop
cmp
pop
lcall
mov
in
js
mov
out
cwtl
scas
xchg
jb
cmpsb
inc
add
sub
mov
jae
mov
jp
and
jb
idivl
mov
fsubrs
add
stc
dec
hlt
out
mov
sarl
xchg
mov
test
cmp
or
fsubs
cmp
je
adc
cmp
sbb
test
xor
jae
insl
add
sub
push
inc
and
cmc
pop
mov
sub
pop
cmp
lahf
scas
cld
inc
subb
mov
mov
sbb
lods
push
js
repz
movsb
imul
mov
hlt
cs
cmpsl
fucom
aaa
cmp
incb
xor
jnp
or
inc
mov
std
adc
and
jb
or
xor
pop
dec
rclb
xchg
mov
jbe
stc
outsb
xor
repz
cmp
add
lret
xchg
cmp
cmc
shlb
inc
xor
clc
popf
sbb
nop
add
dec
gs
mov
sbb
add
cmp
lods
cmp
leave
and
cmp
cmpsl
sbb
pop
shlb
pop
jo
rcrb
mov
or
stos
cmp
loope
mov
xor
js
lods
movsl
cwtl
inc
mov
cmp
pushf
mov
fisubrl
jno
sub
cmp
push
pusha
cwtl
ljmp
out
or
jno
mov
lcall
fsubs
mov
ret
cmp
inc
mov
pop
sbb
mov
aaa
leave
je
add
xchg
fdivrl
xor
mulb
mov
dec
inc
pop
lods
mov
xor
push
dec
pop
arpl
clc
stc
dec
scas
xor
notl
adcb
es
mov
add
mov
loope
pop
sbb
cmpsl
cmp
ja
cmp
mov
cmp
lcall
loope
push
add
daa
and
mov
cmpsb
mov
test
sbb
inc
sbb
jo
sarb
xchg
nop
movsb
or
aaa
and
cwtl
push
jno
mov
in
ret
sub
fdivs
push
cmp
adc
cld
addr16
pop
mov
lds
rcll
dec
cwtl
add
xchg
dec
popa
repnz
mov
std
cltd
sbb
jns
dec
mov
rolb
cmp
cli
add
push
repz
jecxz
and
shlb
outsb
push
add
sbb
movsl
pusha
xor
xchg
xor
xorb
xor
repnz
repz
push
xor
in
xor
sbb
outsl
add
sub
cmp
push
test
jp
sbb
push
mov
mov
cmp
sub
fnstsw
insl
jmp
jne
push
and
pop
push
xor
xchg
js
lds
shlb
pop
xlat
mov
scas
jb
push
bound
out
push
enter
mov
popa
mov
xchg
fnstcw
jne
sbb
cmp
fdivr
and
flds
ja
xor
or
idivl
idivb
addr16
fs
pusha
xchg
sbb
sbb
sub
jb
pop
outsl
inc
popa
sub
out
sub
cs
add
dec
xchg
and
mov
xor
fcomip
and
cmp
sub
xchg
shr
cmp
imul
jge
mov
and
jae
jns
mov
js
cwtl
stc
jle
jnp
ret
mov
rcll
dec
inc
xor
jg
cltd
mov
xor
pop
xchg
jmp
add
fwait
shll
les
mov
cmp
nop
pop
push
add
andb
test
cmp
test
adc
fstps
out
xlat
mov
inc
adc
mov
in
repz
inc
adc
cmp
or
inc
cmp
and
imul
mov
adc
xor
ja
xchg
fstpt
and
cmp
mov
outsl
and
shl
into
adc
in
xorb
add
mov
pop
repz
lahf
pop
repnz
lods
gs
sub
mov
or
xor
stos
ret
sarl
dec
sbb
mov
cmp
jno
xchg
jp
sarb
cmp
hlt
lods
lea
xorl
aaa
jns
test
cmp
mov
outsl
mov
imul
sarb
out
and
cmp
lahf
ficoms
adc
ja
and
test
cmp
add
testl
xchg
mov
mov
sarl
sbb
xor
jg
mov
insb
mov
rorb
pop
xlat
xor
sbb
jle
push
movsb
rorb
adc
aaa
adc
sbb
dec
sbb
movsl
cmp
aam
mov
adc
inc
xchg
jo
cmp
cs
push
je
leave
or
push
shr
dec
xchg
rcll
xchg
sub
pop
scas
pop
mov
negl
jae
imul
pop
cmp
mov
xchg
dec
addb
mov
idivb
lock
xor
mov
cli
jecxz
cmp
adc
fistps
mov
cmp
push
jo
nop
sbbl
mov
in
hlt
push
xchg
sbb
and
movsb
sarl
pop
pusha
jecxz
sub
xor
ljmp
pushf
enter
xor
dec
js
mov
out
sbb
shl
xchg
jl
pop
loopne
or
cmp
ret
stos
int
sub
mov
shlb
jecxz
nop
xor
dec
jmp
pop
dec
dec
fnstenv
jle
xor
cmp
xor
pop
enter
push
or
mov
cli
dec
and
aaa
lea
lahf
ss
jp
lock
add
sub
push
lea
pop
out
cmp
xor
jb
pop
xor
pop
add
les
iret
mov
add
dec
cmpl
sbb
inc
rcrl
fidivrs
imulb
add
mov
dec
lret
cmp
ret
dec
push
cmp
repnz
and
rorl
adc
cmc
testl
jle
inc
mov
rcrb
repz
xor
icebp
push
jne
std
sarl
cmp
lds
adc
outsl
scas
cmp
push
in
xor
push
mov
clc
xchg
cmp
repnz
test
push
pop
inc
cld
jns
les
pusha
sub
xor
int
jl
xchg
repnz
ss
and
mov
sbb
mov
xchg
pop
mov
cmp
shll
in
adc
lcall
fildl
scas
loopne
cmp
xor
jp
mov
ret
and
pusha
lahf
xchg
insl
mov
sub
and
sub
cmp
pop
pusha
lret
lock
sub
add
and
jge
inc
mov
je
imul
lcall
jae
xor
or
adc
stos
and
mov
loop
pop
negb
xor
cmp
ret
jl
cmp
mov
cmp
inc
inc
mov
push
and
mov
jb
lds
inc
iret
inc
cmp
fwait
jmp
jnp
cli
push
cmp
ret
push
cmp
adc
and
xor
pushf
js
rolb
xor
mov
pop
imul
and
mov
lahf
dec
aad
jg
push
jne
push
mov
mov
inc
sahf
xor
adc
mov
fldcw
pop
mov
cs
and
xchg
sahf
mov
jl
push
cmovne
add
pop
jne
mov
xchg
pop
iret
mov
and
pushf
scas
hlt
lret
cwtl
loop
arpl
ror
cmp
sub
push
inc
mov
ret
push
out
add
loopne
jmp
jno
jmp
js
pop
dec
push
loope
cmp
cmp
testb
adc
andl
inc
es
sbb
fsubs
ret
pop
shlb
mov
ss
jbe
jo
cmp
adcb
dec
lahf
in
cmp
lea
scas
out
or
hlt
push
inc
pushf
sbb
ret
mov
gs
test
pop
cmp
std
sub
dec
cmp
mov
inc
xchg
pusha
outsb
ja
xchg
rcr
cmp
cwtl
push
sub
loope
iret
jo
add
mov
mov
cs
sbb
fistpl
ret
pop
jns
shll
push
lods
cmp
in
es
add
and
push
addb
sbb
clc
adc
cmp
std
push
mov
add
and
enter
adc
cmp
sarb
test
cmp
or
aas
adc
fcoms
push
xor
mov
dec
shll
inc
mov
and
icebp
push
or
sbb
out
sarb
jecxz
sub
scas
std
or
test
and
je
in
icebp
mov
stos
sub
hlt
or
jmp
sub
int3
dec
aaa
lds
dec
testb
sbbb
pusha
test
mov
add
in
jg
mov
and
andb
arpl
cmp
clc
mov
and
mov
cmp
mov
pop
dec
fisttpl
repz
cmp
enter
fldl
dec
cmpl
repnz
shr
mov
mov
pop
mov
jg
jmp
std
inc
mov
fdivrl
push
imul
cmp
cmp
sub
jg
cmp
or
mov
add
inc
mov
cmp
pop
add
add
inc
xchg
test
mov
jg
sbb
xor
lcall
mov
ljmp
sbb
xor
and
loope
jno
addb
pop
sti
hlt
xchg
jnp
loop
mov
and
xlat
and
jp
enter
and
sub
aas
mov
jbe
imul
cmp
cli
pusha
bound
mov
mov
leave
call
and
jb
jecxz
dec
test
divb
pop
call
stos
cmp
rorl
cmp
push
cld
and
mov
shlb
push
lods
icebp
xor
jg
mov
cli
xor
lret
sbb
fiadds
invd
add
fldenv
add
iret
xchg
mov
movsl
lcall
add
sti
aad
mov
rorl
cmp
movsb
andl
aas
dec
sbb
dec
dec
sub
pop
xor
push
ret
push
lods
sbb
or
cmp
xor
ljmp
jl
ret
mov
inc
cmp
sub
and
sahf
sti
xor
xchg
mov
pop
sub
sbb
mov
movsl
cmp
sub
xor
int
cmp
dec
and
mov
lods
lcall
clc
sub
add
insb
cmp
push
mov
sbb
cwtl
in
insb
icebp
sub
cmp
push
lds
push
cmp
pop
call
mov
in
push
xor
mov
mov
shlb
in
mov
cmpsb
pusha
add
rcll
pop
inc
sub
mov
out
mov
or
shrb
xchg
jb
push
dec
mov
ss
sub
sub
and
stc
mov
cmpsb
hlt
outsl
out
pushf
fmuls
nop
cmp
xor
movsl
and
push
pop
cmp
xor
push
cmp
shll
ja
dec
dec
jecxz
insl
dec
push
je
ret
inc
jmp
outsl
push
ljmp
pop
ss
pop
popf
arpl
rolb
cmpsb
pusha
cmp
mov
ljmp
xor
fmuls
push
loopne
add
fs
cmp
fcoms
xor
mov
call
out
xor
test
push
mov
inc
jecxz
stc
repz
hlt
pop
je
cmc
rorb
call
add
mov
sbb
cmp
and
xor
dec
js
cmp
inc
push
out
cmp
or
sbb
mov
rolb
scas
push
arpl
bound
inc
mov
imul
xchg
xlat
xor
fadds
inc
xor
mov
gs
cmp
adc
scas
mov
push
add
fldcw
cmp
xchg
or
lds
cmp
mov
test
add
mov
cmp
shl
xchg
rcll
dec
jb
cmp
imul
add
lods
sub
cmp
ss
jo
xor
xchg
xor
outsb
aaa
xor
loopne
je
mov
xor
and
inc
mov
mov
xchg
js
movsb
filds
pop
stos
or
jg
sbb
dec
sub
stos
ljmp
xor
push
jae
add
test
push
cmp
mov
cmp
outsb
sbb
pop
inc
cmp
pusha
sbb
fadds
fprem
das
ret
fmull
or
pop
ss
stc
out
loope
inc
fs
xchg
std
cmp
mov
in
sub
mov
cmp
cmpsl
xor
xchg
cmp
sub
cmp
push
mov
and
clc
sbb
inc
incl
sub
repz
cmp
xchg
push
mov
test
inc
push
add
nop
stos
mov
movsl
cmp
lods
and
pop
or
xchg
xor
xchg
les
clc
cmp
mov
adc
cltd
icebp
adc
xchg
daa
out
test
andb
fnsave
pop
push
test
mov
mov
xor
cmp
rcrb
and
sub
adc
jne
das
and
xor
and
or
sub
sub
ljmp
mov
lods
cmp
sbb
fcoms
xorl
cmp
pop
add
xchg
or
movsb
fldenv
xor
mov
lcall
cwtl
aam
sub
mov
dec
scas
mov
fsubr
loope
xor
mov
cwtl
clc
add
je
sbb
dec
cmp
or
xchg
imul
scas
xchg
call
adc
add
scas
and
cmp
pusha
add
sub
scas
push
pop
pusha
mov
nop
jp
mov
das
dec
fcoms
shl
movsl
xchg
stos
adc
xchg
cwtl
mov
mov
stos
push
int
push
cmp
xor
pop
xchg
ss
or
pop
shll
add
cmp
sbb
dec
mov
dec
les
dec
fisubrl
xor
std
push
test
mov
mov
insb
mov
pushl
add
js
mov
jnp
loope
in
inc
pop
jb
test
xor
test
xchg
push
sub
sbbl
repnz
or
jae
mov
movsl
add
xor
mov
add
pop
test
dec
dec
cmp
jg
js
xchg
cmp
loope
rorl
sub
sub
and
jne
mov
pop
mov
push
orl
stc
loopne
mov
shl
xchg
sbb
adc
mov
add
cmc
lds
cmpsb
cmp
xchg
or
inc
rolb
mov
ss
mov
add
popf
shl
mov
and
mov
xor
loope
test
mov
inc
data16
or
or
and
push
cmp
push
push
test
clc
xchg
cmp
sub
lret
scas
std
sub
aaa
inc
jbe
cmp
lcall
loop
aam
jno
mov
xor
or
fwait
jbe
ja
pop
adcb
xchg
cld
push
pop
xchg
cmp
jmp
lret
and
push
imul
push
imul
imul
cltd
and
stc
fnstenv
and
or
jecxz
cmp
inc
cmp
pop
or
jno
outsb
dec
push
cmp
pop
leave
enter
lret
inc
dec
data16
mov
cmp
ljmp
add
mov
pop
jns
cmp
sti
loop
cmp
jb
xor
pop
lret
pop
lahf
cmp
xor
sahf
cmp
cmpsb
in
jne
xchg
or
cmp
dec
mov
dec
lahf
mov
out
xor
xlat
mov
push
dec
aad
shrl
mov
sbb
fdivs
ja
jmp
je
loopne
aaa
push
sbb
into
cmpb
jae
dec
xchg
jg
cmpsb
ds
nop
movsb
add
inc
lret
shll
sbb
cmpsb
mov
filds
push
xor
addl
pop
out
test
mul
cmp
jp
sbb
or
push
dec
bnd
mulb
and
sbb
inc
sub
and
xorl
js
adcl
test
mov
fsubrs
in
popf
mov
jmp
push
xchg
scas
mov
pusha
fldt
xchg
xor
decb
cwtl
insl
in
cmpsb
cmp
out
idivl
pop
rcll
cmp
rcrb
cmp
aad
pusha
loope
cwtl
cmp
or
test
loopne
fisubrs
jmp
and
sbb
shlb
pop
push
inc
mov
mov
lea
sahf
xor
cmpsb
cmp
add
test
jb
popa
cmp
inc
mov
xchg
and
sbb
scas
scas
and
mov
mov
mov
jne
mov
mov
adc
out
cwtl
xchg
or
push
mov
or
jno
mov
mov
nop
std
adc
or
or
xchg
pop
ja
xor
shrb
xor
push
aam
cmp
cmp
mov
pop
or
xchg
cmp
mov
call
push
mov
lahf
mov
je
sti
xor
add
mov
jge
jnp
mov
mov
mov
add
mov
ss
cwtl
arpl
pop
add
shlb
movsl
cmp
cmp
insb
and
and
mov
push
inc
push
cmp
mov
pop
xlat
jo
orb
sbb
out
sbb
xor
cmp
test
cmp
cmp
mov
ljmp
dec
ss
add
add
je
cwtl
fdivrl
cmp
sbb
sub
inc
jne
dec
push
push
mov
pop
mov
xor
or
dec
loop
sahf
xor
fsubrs
xor
xor
movsl
mov
adc
sub
pop
test
loopne
cmp
sarb
sub
mov
je
sbb
pushf
scas
adc
push
mov
jne
dec
and
iret
es
shlb
inc
mov
insb
leave
push
sub
sub
iret
jo
cmp
rcrb
aas
inc
xchg
sbb
adc
mov
mov
divl
pop
xor
or
jne
adc
push
or
loopne
fsubrs
scas
xor
int
fsubrs
nop
sarl
ja
mov
jp
scas
xor
xchg
pop
and
push
ja
cmp
mov
sbb
cmp
add
jle
movsb
outsl
cmp
and
push
mov
cmp
pop
cmpsl
xor
js
sub
mov
add
ficoms
jg
cmp
cmpsl
mov
call
dec
inc
mov
pop
out
xor
mov
inc
xor
jb
xchg
push
xchg
and
pusha
ljmp
cmp
mov
or
stos
xchg
sbb
cmp
or
loope
aas
jecxz
into
and
repz
dec
das
fiaddl
repz
fnsave
fbld
es
gs
jb
xor
hlt
mov
outsb
shrb
ret
fdivrp
inc
scas
cmpsl
xor
xor
push
rcl
jb
inc
add
repz
clc
cmp
push
pushf
jno
jae
cmp
rcrb
adc
dec
xor
dec
inc
testb
push
shll
jne
jo
xchg
subl
movsb
aam
sarl
mov
in
xchg
xor
lea
aad
cmp
shrb
pop
mov
cmp
in
xchg
sub
sbb
stos
jmp
aam
adc
repnz
push
dec
cmp
lret
sub
std
mov
xchg
jg
aad
mov
mov
sub
mov
call
stc
mov
aam
dec
sub
lock
imul
outsb
jb
cmp
sub
xchg
cmp
in
aam
or
and
cltd
pop
shlb
cmp
out
addr16
pop
cmc
cmp
adc
jmp
cmp
mov
shlb
cli
cmp
cmpsb
or
shrl
lret
sub
nop
add
fistpll
rcll
xor
cmpsb
pop
cmp
lods
into
xchg
inc
lret
jmp
push
imul
orl
sub
ja
cmp
xor
shlb
cmp
scas
cmp
addl
cmp
push
push
cwtl
imul
xlat
cmp
xor
sbb
addr16
imul
sbb
leave
dec
and
mov
jo
push
or
xor
ljmp
cmp
mov
loope
mov
mov
mov
mov
push
mov
push
inc
jb
mov
ss
sbb
jbe
sbb
xor
xor
repz
mov
stc
pusha
push
in
fiadds
loop
cmp
repnz
inc
lods
pop
fdivs
and
fldz
xchg
jb
notb
iret
and
xchg
sbb
cltd
mov
push
cmc
push
stc
mov
jmp
and
jmp
fisubs
rcrl
jne
and
cmp
subl
mov
jmp
aaa
xchg
ss
testl
nop
xor
out
cmp
call
jnp
pop
test
idivb
data16
js
fs
inc
xchg
incl
mov
pop
and
and
cmp
sub
les
jle
cmp
call
pop
ss
or
lods
scas
je
mov
xchg
add
xchg
sahf
cmp
push
jne
push
jge
mov
mov
add
stc
mov
add
xor
fnstenv
xor
inc
stc
add
ds
sub
cltd
jecxz
sbb
fcomi
aaa
mov
loope
and
xor
adc
divb
adc
mov
or
jge
lods
clc
push
imul
dec
mov
pop
aaa
fidivrl
mov
push
push
mov
jle
cmp
jae,pn
sahf
test
cmp
test
jp
fimuls
add
push
push
cmp
jnp
xchg
xchg
mov
sub
and
jle
shll
push
cmpsl
movl
sahf
adc
nop
into
jg
bound
and
mov
ror
jbe
push
pop
xor
test
pop
and
arpl
sub
cmp
xchg
clc
mov
aam
outsb
in
dec
shrb
lods
push
insb
icebp
mov
insb
jle
inc
cmp
sbb
pop
int3
pop
and
fimuls
clc
popa
mov
and
pop
dec
imul
mov
or
jmp
adc
mov
cmpsl
jmp
and
shlb
cmp
jbe
or
aas
ljmp
enter
ss
mov
mov
lds
lock
cs
cmp
mov
cmpsl
cmc
rorb
xchg
or
dec
jo
shrb
je
data16
and
mov
dec
inc
add
lret
lock
mov
in
mov
inc
mov
cmp
jne
shrl
push
cmp
mov
repnz
cwtl
xchg
insb
mov
mov
adc
sub
pop
cmp
ja
xor
stc
inc
out
inc
jne
mov
enter
daa
cmp
add
stos
xor
jne
mov
inc
divl
loop
jp
addr16
scas
xor
ja
pop
cld
xor
mov
pop
dec
sub
pop
mull
cmp
push
sub
jns
xchg
mov
dec
aad
and
push
inc
mov
jle
pushf
dec
pop
or
cwtl
cmp
push
or
fdivr
xchg
xor
and
int3
sub
adc
push
dec
and
sub
push
pop
movsb
xor
sub
jne
lahf
adc
call
shr
cmp
stos
nop
enter
dec
cmp
adc
sub
xor
nop
push
cs
and
cmp
fs
bound
cltd
or
sbb
push
insl
push
add
inc
popa
jne
pop
add
cwtl
push
roll
cli
in
outsl
cmp
mov
pop
cwtl
pop
in
lods
mov
and
cmp
fdivs
mov
js
sbb
mov
and
and
push
cmp
pslld
in
sub
cmp
inc
xor
adc
out
mov
mov
and
adc
cmp
push
pop
aaa
mov
cmp
mov
pop
fsubrs
ret
cwtl
push
pop
xchg
pop
xor
or
push
add
xor
xor
adc
js
mov
outsb
mov
inc
in
push
and
xchg
and
scas
jno
add
idivl
mov
or
xchg
sarb
xor
push
jo
add
push
out
pushf
fwait
dec
imulb
cmp
fidivs
dec
xorl
int
adc
or
mov
into
push
xchg
fwait
loopne
mov
adc
xchg
pcmpgtb
nop
mov
mov
jns
mov
ret
cltd
cmp
sub
sahf
dec
cmp
aaa
scas
sub
sbb
jbe
xor
push
pop
jnp
or
lret
adc
das
add
jbe
xlat
cmp
stc
mov
repz
stc
pushf
cmpsb
std
mov
inc
push
push
dec
mov
cltd
xor
xchg
mov
iret
test
xor
or
push
mov
inc
mov
scas
xor
adc
and
mov
adc
add
test
mov
aaa
cmp
inc
cwtl
or
cmp
add
pushl
sub
fistpll
adc
pop
mov
xor
clc
and
push
and
jbe
aaa
xor
test
pop
xchg
ja
cmp
jbe
mov
cmpsl
mov
push
push
cmp
sub
sbb
pop
ljmp
and
push
cmpsl
jbe
hlt
adc
sbb
idiv
push
cmp
mov
sub
icebp
xor
adc
fs
ret
fisttps
mov
js
mov
xchg
stc
cmp
and
cmpl
je
inc
xchg
clc
outsl
pop
popa
ja
cmp
loope
scas
ret
jecxz
pop
sbb
ljmp
sbb
daa
xor
jp
xor
loop
cmp
jbe
adc
dec
sbb
jno
mov
mov
outsl
cmp
pop
je
dec
addr16
les
cltd
pop
leave
lahf
push
or
repz
adc
sarl
mov
dec
and
icebp
push
mov
mov
fbstp
imul
lock
mov
push
add
and
sahf
aaa
lock
xchg
and
loope
adc
push
stos
and
aaa
fdivs
cmp
daa
cmp
push
or
loope
pop
shl
sbb
xor
jb
inc
push
mov
and
dec
add
xchg
pushl
sti
dec
orb
loop
cmp
cmpsb
xchg
je
pusha
pop
adc
dec
or
push
adc
mov
mov
push
xchg
addb
xlat
pushf
ret
fadds
push
shll
mov
leave
cli
cmp
pop
or
and
add
xchg
ja
jne
aaa
cmpsb
cmp
jb
jns
adc
and
mov
cmp
pop
cmp
inc
loope
repnz
jmp
dec
popa
mov
sub
dec
sbb
jns
and
xor
mov
xchg
sbb
loope
icebp
and
and
push
cmp
lods
add
mov
xor
popf
loopne
iret
push
pop
inc
fdiv
fs
push
cmp
sub
es
cmpsb
mov
popa
aaa
sbb
pusha
add
loop
jnp
add
xchg
or
fdivrs
xlat
test
push
mov
scas
and
test
xor
in
cmp
hlt
adc
pusha
out
dec
xor
xlat
jbe
cmpsl
mov
jmp
cmp
sarb
cmpsb
adc
cmp
sahf
jge
dec
fwait
aam
xchg
fnstsw
mov
scas
and
inc
mov
stos
push
cmp
inc
lret
jecxz
icebp
cmp
cmp
and
test
lea
shl
ja
dec
lahf
cmp
mov
mov
sti
xor
icebp
mov
or
enter
data16
push
push
jae
mov
mov
pusha
xor
mov
jno
cltd
sbb
and
pushf
icebp
mov
es
jp
and
xchg
xor
jp
xor
cmp
hlt
mov
mov
sbb
xor
test
pushf
cmp
dec
test
sarl
scas
jp
push
cs
inc
stos
pop
mov
xorl
aad
dec
enter
push
jae
push
sub
inc
ljmp
mov
loopne
cmp
and
xchg
jo
jbe,pn
xor
je
mov
nop
pop
or
js
mov
sub
sbb
cmp
lahf
imul
ret
test
mov
mov
jns
mov
sbb
sub
add
fs
ds
cmp
sahf
xor
jns
clc
jge
add
pushf
test
mov
add
in
sub
mov
xchg
jo
or
inc
push
mov
lds
jge
xor
ss
xor
dec
and
and
popa
jne
cld
enter
imulb
test
ret
dec
jle
mov
mov
xchg
fcom
pop
xor
mov
pop
mov
and
sti
jb
mov
jmp
lahf
push
cmpsb
orl
fnstcw
and
xchg
dec
rcll
sbb
jle
mov
mov
xor
decl
int3
mov
jae
mov
pusha
into
push
mov
cmp
fdivrs
mov
pop
mov
ret
jns
stc
xchg
cmp
aad
add
mov
cmp
pop
mov
out
cmp
sbb
fdivr
cmp
loope
xor
and
out
mov
pop
test
cmp
push
xchg
jae
lods
cmp
mov
push
in
nop
xchg
stc
pop
sahf
add
xchg
xor
cmp
std
fcoms
je
cmp
jo
sarb
rcr
mov
insl
push
jno
push
push
outsl
ds
or
pop
test
jb
js
cmp
mov
xchg
push
xor
and
clc
sbb
je
cmc
push
cmp
pop
daa
test
xchg
outsl
sbb
mov
aaa
pushf
mov
data16
mov
rorb
fdivr
adc
inc
repz
repnz
icebp
mov
sbb
push
ror
pop
push
mov
mov
xor
mov
or
cltd
stc
sub
inc
mov
sahf
mov
ljmp
movsb
xor
ret
leave
cltd
in
xor
clc
sub
lcall
xchg
fs
cltd
mov
cmp
mov
pop
sahf
cmp
sbb
icebp
xlat
lret
push
pop
lock
aas
js
and
mov
fnstenv
arpl
mov
cmp
xor
cwtl
andl
pop
sub
push
fmull
idivb
jle
push
js
out
rcrb
leave
mov
hlt
add
mov
pusha
xchg
aaa
adc
xor
push
iret
mov
pop
stc
pop
jno
ds
imul
out
jne
cmp
push
add
leave
cwtl
mov
inc
xor
sbb
pop
test
xlat
mov
lock
sbb
mov
pop
xchg
mov
js
mov
popa
loop
push
adc
scas
dec
sbb
jne
jne
mov
fildll
pop
mov
daa
jae
iret
mov
jmp
inc
sub
scas
adcb
xor
cmp
or
repnz
cmp
ss
add
inc
int3
cmp
clc
scas
cmp
xchg
rclb
das
xor
cmp
int3
push
xor
cmp
xchg
pusha
mov
jl
xchg
enter
mov
sub
cmp
stc
cmp
sti
xor
ds
cmp
pop
add
fcomps
mov
xchg
dec
popf
xor
jns
jbe
repnz
xor
xchg
cmp
clc
xor
cmp
jl
xor
add
mov
mov
xchg
lods
cmp
push
mov
dec
cmp
jo
sahf
out
jcxz
aaa
mov
cmp
xchg
enter
cwtl
xor
cmpsl
and
repz
fdivs
sub
mov
xor
shlb
mov
test
es
sarb
jbe
ja
xor
dec
fistpl
shrl
sarb
inc
pop
xor
fcoms
hlt
cmp
fwait
ss
rcrb
cmp
stos
sbb
popf
dec
ljmp
jne
xchg
sub
cmpl
pusha
daa
lcall
sbb
lods
je
mov
mov
and
push
jbe
jae
cmp
and
push
xlat
mov
fcoms
pop
xchg
mov
pop
sub
sub
xchg
fwait
sub
test
cmp
ss
mov
sahf
dec
mov
in
lret
pop
and
movsb
mov
ljmp
cmp
loope
ja
cwtl
mov
fsubl
cmp
nop
xor
std
stos
mov
cmp
cmp
gs
popf
repnz
pop
sub
fistps
cmp
cwtl
insl
adc
mov
fisttpll
xor
cmpsb
xor
adc
rol
push
dec
fnstsw
adc
sbb
xchg
rorb
xor
mov
push
jo
shll
popa
jp
sti
stos
js
push
dec
cltd
mov
cs
call
leave
sub
mov
inc
sbb
push
sbb
int3
or
xor
and
pop
loopne
nop
inc
cmp
cmc
cltd
inc
je
pop
add
cmp
push
or
sub
fisubl
jb
cld
cmp
test
mov
fmuls
mov
or
ljmp
pop
inc
jmp
cmp
adc
adc
cmp
dec
push
xchg
fcoms
lock
pusha
sub
repz
je
push
cmp
stos
dec
fldenv
sbb
pop
inc
fucom
mov
insb
mov
cmp
cld
ljmp
iret
idiv
fisttpll
dec
inc
lods
pop
clc
xor
cmp
and
loopne
xor
mov
pop
sbb
pop
adc
cmp
sahf
dec
divb
push
cwtl
push
cmp
js
sub
xchg
mov
xor
mov
rclb
xor
xor
push
shll
jbe
cmp
mov
push
jmp
adc
incl
pop
xor
inc
mov
and
mov
jbe
add
rclb
and
cmp
int3
sbb
cmp
inc
mov
jp
aaa
adc
add
xor
or
jbe
int
ret
xor
sbb
stos
push
add
xor
inc
dec
xor
mov
fdivs
loope
les
fcoml
mov
sub
pop
mov
mov
nop
xchg
sarl
sub
or
add
sbb
sbb
xchg
mov
xor
stos
sub
cmp
cmp
xor
cmp
testb
js
ss
iret
inc
add
ljmp
dec
mov
mov
lret
and
push
fs
mov
je
push
pushf
scas
pop
jbe
fstps
sbb
test
inc
inc
xor
xchg
outsb
das
lcall
push
sub
test
jne
jo
loop
test
mov
mov
cmp
or
mov
pop
xor
mov
inc
mov
xchg
scas
or
xor
mov
push
fisttpll
sbb
stos
in
enter
sub
mov
cmp
cmp
sub
xor
in
jg
sti
xchg
xchg
add
dec
out
or
mov
cmp
and
fcomps
fxch
push
aaa
inc
sbb
cmp
les
sbb
mov
test
lret
pop
mov
push
dec
sub
xor
push
dec
sbb
hlt
pop
outsl
scas
mov
movsb
add
push
jne
shll
jg
cmc
pmulhw
scas
sub
cmp
sahf
xor
xchg
cmp
lock
pop
outsl
sarb
int
jg
mov
fcoms
shr
rcrb
mov
mov
and
push
push
sti
mov
and
xor
cmp
test
inc
and
xchg
mov
pop
and
sbb
ret
cmp
div
sbbb
addl
pop
nop
push
add
sub
sbb
fistps
dec
add
aaa
bnd
and
xor
lods
adc
clc
mov
cmp
pop
jbe
and
mov
jne
stos
cmpsb
shll
push
jmp
mov
cmp
add
movsl
adc
aam
sbb
mov
adc
pop
add
sub
sti
cmp
outsl
mov
scas
cmp
or
cmp
je
das
add
icebp
mov
mov
pop
lahf
xor
mov
into
dec
and
mov
push
push
jo
ss
std
mov
dec
icebp
cmp
xor
or
fcoml
mov
addr16
add
inc
rorl
or
cmp
lcall
mov
dec
movsl
cmp
fnstcw
xchg
and
mov
bound
mov
lods
push
cli
std
jne
mov
inc
push
cmp
and
inc
push
sbb
outsb
stos
push
sub
mov
cmp
and
ss
stc
push
xor
jg
jb
imul
shl
lcall
inc
push
aam
mov
or
lock
cmp
and
push
fwait
push
ss
jns
fsubr
pop
filds
sbb
xor
ss
js
cmpl
jp
adc
mov
out
pop
adc
sti
hlt
in
sarb
pop
call
pop
loopne
lret
adc
dec
xor
sbb
pop
jno
xor
shll
or
mov
add
sbb
mov
cmp
adc
xor
out
stos
sub
adc
or
jl
shll
mov
mov
xor
sbbl
js
cmp
and
mov
cmp
push
sbb
js
pusha
cmp
stos
mov
lock
push
cmp
inc
sahf
or
fnstsw
adc
int3
and
xchg
add
xor
mov
lock
add
xlat
mov
pop
clc
out
shlb
xor
aas
mov
mov
out
nop
cmp
leave
pcmpeqb
cmp
push
outsb
adc
push
mov
and
xor
bound
jb
cmp
aad
mov
lock
sbb
mov
dec
data16
push
or
add
cmpsb
orb
cmp
sbb
mov
or
sbb
fidivl
lock
xchg
inc
jmp
ret
dec
xchg
inc
cmp
mov
pop
sub
mov
iret
pushf
jnp
push
icebp
cmp
fdivs
repz
push
pop
shll
and
push
cmpsb
mov
inc
fstpt
sbb
stos
out
adc
inc
xor
adc
out
adc
inc
xchg
cmp
mov
xor
xor
cmp
loopne
cs
push
mov
jo
ficompl
xor
mov
shll
bound
cmp
dec
inc
jle
xchg
sahf
ss
int3
xchg
repz
pop
cmp
addr16
xor
push
loope
or
cmp
repnz
inc
loope
adc
cmp
bnd
cld
jg
or
mov
ljmp
xor
outsl
cmp
fnstenv
cmp
clc
pop
push
mov
cmp
mov
js
cs
mov
bound
stc
sbb
stc
and
imul
out
lret
popa
mov
mov
pop
jae
mov
mov
loop
ss
js
es
lret
call
pop
clc
sub
xor
xor
push
xlat
cmp
cwtl
cmp
xchg
cmc
scas
cmp
jmp
repz
cmp
jle
nop
pop
xor
cmp
sbb
jae
push
xor
insb
inc
jb
shll
cmp
mov
rcrb
sbb
cmp
repnz
jae
cmp
int
push
repz
loop
mov
aas
adc
sti
jg
shll
sub
push
mov
inc
mov
sub
loope
pop
mov
mov
jae
dec
cmp
js
pusha
xchg
inc
cmp
push
and
cmc
lea
push
es
cli
cmpsl
xor
mov
sti
jmp
nop
xchg
push
mov
iret
xor
cmpsl
insl
in
rclb
and
sbb
mov
stos
ficoml
xor
push
ss
xchg
and
divl
sbb
outsl
and
pop
loope
sbb
pushf
mov
inc
mov
divl
and
sbb
mov
mov
pop
cmp
repnz
jo
mov
addr16
xor
jbe
sub
mov
adc
cmpsb
xchg
jbe
test
into
sub
cwtl
inc
xor
leave
scas
dec
cmp
loopne
xchg
mov
xor
sub
sbb
ja
rorb
ret
push
lcall
or
mov
popa
cmp
adc
sahf
cmp
push
xchg
testb
mov
jo
cmpsb
clc
inc
mov
mov
and
stc
jae
aad
cmp
mov
pop
jo
std
aam
cmpsb
pop
xor
ss
adc
cmp
mov
aaa
cmp
mov
cmp
je
lods
mov
ljmp
add
std
dec
sbb
pop
jb
mov
cmp
add
sahf
shll
out
and
inc
or
or
or
jo
mov
insb
sub
test
ss
test
push
insl
pop
pop
cmp
imul
jmp
scas
sbb
lahf
xchg
mov
mov
or
inc
add
adc
je
les
jge
add
cmp
mov
adc
cmp
mov
cmpsb
cmp
and
push
cmp
add
mov
ja
xor
xor
cltd
jbe
leave
jo
cmp
mov
add
inc
and
bound
mov
cmp
clc
in
lahf
push
insb
shrb
mov
scas
push
leave
aaa
jbe
sbb
cmp
outsl
push
or
stc
cmp
mov
iret
jmp
sbb
sbb
and
push
repz
push
sbb
or
push
inc
inc
sbb
fdivs
mov
ss
cmp
push
xor
and
js
mov
in
movsb
xchg
xchg
mov
sarb
and
jbe
sub
inc
lock
fidivs
xchg
xor
push
jle
insb
inc
mov
iret
cmp
leave
dec
pop
movsb
xchg
pusha
roll
in
xor
cmp
enter
mov
out
and
add
xchg
jne
inc
je
cltd
mov
adc
into
shll
cmp
pop
test
xor
popa
mov
xlat
xor
adc
arpl
push
rclb
jns
js
xor
inc
ret
and
mov
xor
add
negb
pop
mov
outsb
cmp
movsl
and
jbe
mov
sub
sub
fwait
cli
loope
fdiv
adc
xor
leave
adc
sbb
in
jbe
xor
mov
jmp
ja
loope
repz
icebp
icebp
cmp
js
or
dec
inc
adc
popf
fcomps
push
add
mov
sbb
outsl
call
push
ljmp
xor
xchg
jmp
pop
xor
mov
das
xor
xchg
pop
popf
clc
cmp
and
aaa
sub
adc
inc
xor
cmp
jg
mov
add
add
mov
imul
xor
and
dec
sub
mov
xor
icebp
sub
cmp
xor
cwtl
scas
cmpsb
mov
sbb
mov
sbb
cs
xor
sbb
popf
notl
add
mov
cmp
mov
scas
or
incb
mov
stos
js
hlt
xchg
jno
jae
ret
mov
xor
and
lods
sub
jle
mov
bound
aad
push
outsl
cmp
dec
notb
xchg
jp
fsubr
or
add
cmp
shrl
sub
pusha
decl
inc
ss
aas
mov
inc
bound
out
scas
mov
xor
lahf
mov
mov
sti
jle
add
add
cltd
mov
xchg
ret
xlat
dec
cmp
pop
loopne
imul
xchg
in
xchg
jno
cmp
sbb
bound
aaa
cmc
shll
fiadds
test
xor
mov
sbb
mov
call
add
pop
add
sbb
enter
test
out
mov
or
cmovs
or
divb
pop
cmp
cmpsl
cld
pop
add
mov
or
jns
xor
test
adc
fsubl
ret
dec
mov
cli
cmp
nop
push
cmp
mov
lods
fdivrs
dec
sbb
mov
sub
in
jne
push
ffreep
add
lcall
push
and
cli
push
mov
and
cmp
push
push
dec
pop
ss
cmp
inc
xchg
dec
and
das
xor
xchg
cmp
mov
mov
sbb
sub
iret
xor
cmpsb
xor
pop
cmp
popa
dec
xchg
aam
addl
in
pop
xchg
jecxz
pop
xor
arpl
mov
divb
rcll
xor
and
inc
pop
or
fcoml
cmp
cltd
push
lea
mov
jle
dec
jecxz
xchg
and
scas
jl
mov
loope
cmp
outsb
into
add
lea
inc
pop
sbb
call
push
rcl
stc
mov
push
xchg
les
cmp
sub
lahf
pushf
cmp
mov
std
sbb
fs
pop
xchg
dec
cmc
mov
test
idivb
ss
jns
adc
cmp
sbb
cmp
mov
stc
jns
cmp
cmpsb
popl
xor
ja
mov
rcr
sub
lahf
dec
and
push
call
std
fwait
pop
or
pop
cmpsl
jmp
jecxz
sub
push
add
mov
cmpsb
xchg
sbb
fiadds
popa
jmp
sub
push
inc
scas
std
dec
cmp
xlat
xor
inc
insb
shlb
sbb
jmp
divb
cmp
pop
mov
loopne
push
sarb
ds
add
jle
es
cld
lods
in
push
int3
addb
push
cmp
ret
jae
cmp
xchg
pop
inc
dec
push
jb
add
xchg
stc
cmp
sub
ljmp
nop
xor
mov
add
repnz
addr16
movsl
clc
adc
xor
stos
cmc
sbb
add
sub
mov
push
inc
cmp
cwtl
mov
loopne
adcb
sbb
xorl
das
or
lret
idivb
scas
jecxz
inc
push
push
and
ret
imul
add
imul
pop
scas
push
in
mov
and
stc
push
xor
out
cmp
sub
jge
push
mov
cmp
pop
add
jns
mov
fdivrs
mov
cmp
cmp
sbb
xor
add
test
addb
mov
mov
scas
adc
cmc
pop
rcrl
mov
mov
inc
daa
pop
pop
lods
clc
cmpsl
jns
repz
xor
push
in
sahf
jbe
roll
cmpsb
shl
and
sub
cmp
iret
mov
sar
xor
jb
testb
mov
mov
mov
ja
cld
mov
push
icebp
or
jae
fcom
xor
icebp
sub
and
fldl
sbb
loope
nop
cmp
rorl
and
xor
mov
mov
push
rcll
mov
cltd
ja
cmp
adc
cmp
cmp
push
jge
mov
mov
insb
les
jl
inc
gs
cmpsb
arpl
mov
loop
cltd
nop
or
sub
pop
push
or
add
test
xchg
jg
cmp
popa
es
dec
inc
aad
and
pop
sbb
divb
mov
jae
xchg
xor
aas
mov
divb
roll
shrl
mov
pop
inc
push
jle
sbbb
mov
std
sub
xchg
xor
push
sub
xchg
mov
cmp
or
outsb
and
movsb
sbbb
xchg
stos
cmp
mov
insb
out
rcrb
add
ret
lods
cmp
sbb
adc
pop
and
xor
mov
sbb
sbb
inc
mov
cmpsl
testl
test
clc
xor
mov
dec
and
add
nop
das
cmp
or
xor
dec
or
orb
in
faddl
pushf
or
out
lret
daa
mov
xor
fs
dec
push
sarb
lret
jb
mov
popf
jg
cmp
add
xor
pop
es
movsb
decl
add
test
sub
add
dec
xor
cmp
in
xor
push
xor
or
adc
mov
add
inc
and
sbb
xor
sub
push
ret
nop
cmp
jle
outsb
or
and
loopne
fistps
push
ret
jns
mov
adc
sbb
pop
push
xchg
sbb
mov
repz
inc
push
jo
xor
loope
pop
ss
in
push
push
cmpb
xchg
popa
pop
adc
mov
push
pop
test
shll
lahf
cmp
scas
cmp
mov
xchg
cmp
jg
and
mov
mov
cmp
pop
mov
xor
adc
mov
and
rcll
daa
aaa
shll
xchg
pop
icebp
sbb
jo
pop
aam
sub
sub
mov
dec
xor
bound
cmp
jae
xlat
inc
cwtl
cltd
cmp
dec
insb
sub
xchg
cmp
fdivr
cmp
cmp
pop
aam
jle
jo
cltd
idivl
scas
jns
mov
in
jle
sbb
xor
jae
and
inc
cmc
test
add
push
sahf
and
and
dec
mov
shll
add
and
mov
cmc
push
or
xor
mov
add
mov
pop
cwtl
mov
sub
movlps
pop
cmpsb
mov
nop
pop
xor
fisubrl
jb
andl
pop
inc
or
cmp
and
adc
cmp
add
lock
movsb
int
cmp
inc
ds
pop
imul
cmc
cmp
enter
adc
aad
cmp
adc
divl
dec
sub
xchg
lods
mov
pop
and
cmp
popf
test
rcrl
std
cmp
push
adc
cmp
adcb
loop
scas
je
lock
add
aaa
jge
or
popa
sbb
cmp
push
inc
mov
js
stc
sub
xor
add
and
push
inc
pop
scas
and
inc
mov
xor
pop
cmp
and
out
shll
xor
shl
sub
sub
hlt
add
popf
lahf
dec
pop
xor
lock
push
fdivs
mov
push
test
mov
mov
repz
outsb
or
fisubrs
mov
push
ucomiss
lods
xor
xor
movsb
xor
jno
pop
pop
jle
push
sti
sbb
mov
or
cmpsb
cmp
int3
xor
mov
es
or
insl
xor
mov
iret
dec
pop
push
xor
xor
inc
xlat
mov
nop
xorb
cmp
loopne
insl
cwtl
cmp
test
sub
js
cmp
push
rcr
jbe
mov
xchg
fldcw
cmpsb
pusha
fcoml
mov
mov
cmp
sub
scas
or
rcrb
mov
cmp
cmp
daa
cmpsb
ja
aam
and
jle
xchg
xor
inc
push
add
sahf
mov
jmp
xor
inc
pop
cmp
out
cmp
pop
fimull
shrb
sub
rol
lock
dec
pop
sbb
out
sub
movsb
add
mov
push
jb
xor
mov
fld
ret
pop
pop
insb
mov
dec
imul
lret
xor
std
adc
cmp
xor
cmp
iret
pop
std
mov
inc
imul
inc
jno
xchg
inc
cmp
inc
cmc
cmp
std
insb
nop
jge
push
cwtl
dec
pop
icebp
out
aaa
lds
test
sbb
or
popa
push
jmp
adc
jb
add
mov
mov
push
negb
out
and
cmp
cmp
or
cmp
mov
jno
push
pop
cmp
stos
fmuls
sbb
push
sbb
nop
cmp
das
inc
push
testb
xor
add
lods
adc
ja
xor
shrl
cmp
int3
push
jecxz
cmp
test
cmp
int3
hlt
divb
ja
xchg
dec
xchg
sti
dec
repz
sbb
add
or
mov
ds
cmp
cmp
xor
xor
loope
jo
add
pop
jne
out
xchg
mov
or
cwtl
rol
adc
xor
sbb
scas
sub
dec
sbb
jae
gs
stc
aas
insb
cmp
add
cmp
jle
xchg
cmp
or
push
scas
lods
sarb
lock
sbb
pop
dec
dec
into
or
push
mov
inc
cmp
mov
das
or
fisttps
aam
xor
stos
pop
lret
shlb
lods
sub
and
xchg
je
ljmp
stc
add
xchg
add
pop
cmp
cmp
int3
mov
add
lea
cmp
mov
cmp
subb
sub
mov
aaa
ret
mov
scas
sti
pop
rcll
pop
data16
jno
or
fcomps
fstps
ret
xchg
lret
outsb
lods
pusha
mov
dec
leave
fistps
subl
aaa
push
roll
ja
xor
jb
mov
test
popa
and
sbb
inc
mov
mov
test
outsb
ret
push
xchg
pop
jp
pop
nop
cwtl
dec
mov
gs
sub
dec
jmp
jecxz
mov
xchg
xor
outsb
test
and
repnz
popa
jecxz
xor
cmp
inc
sarl
push
cmp
dec
cmp
fimuls
push
xchg
inc
jno
xor
or
pop
xor
sub
sub
dec
push
inc
leave
xor
xor
dec
pop
sbb
pusha
aam
stc
cmp
cmp
testl
mov
inc
cltd
or
sub
fidivrl
out
pop
icebp
enter
sbb
mov
adc
push
jle
mov
rcrb
out
and
sahf
hlt
leave
lock
inc
sub
ds
ss
jge
dec
shr
cmp
repnz
mov
aam
inc
test
and
ds
pop
xchg
add
loope
lods
divps
push
jbe
sub
xorb
es
adc
sbb
push
adc
sbb
lods
loope
and
mov
sbb
adc
movsb
or
repnz
pusha
mov
jae
xchg
sbb
sbb
mov
adc
mov
fidivrs
pop
mov
mov
stos
cmp
cmpsb
adc
cmp
and
sub
xchg
ret
pop
mov
cmp
and
call
sbb
mov
or
jbe
cs
fistpll
das
or
fldcw
inc
int
cmpb
sub
insl
jl
mov
xchg
jo
inc
inc
test
mov
push
outsl
cmp
cmp
pop
cltd
pusha
test
nop
xchg
cmp
xchg
lahf
cmp
cmp
inc
cmp
mov
fstps
xorl
add
loope
push
xchg
cmp
and
shlb
and
fstps
test
push
pop
xor
notl
loope
cmp
dec
loopne
push
xchg
test
sti
movl
cmpsb
sahf
mov
lret
in
xchg
inc
cmp
aas
or
jbe
sub
fdivs
pushf
dec
and
pop
pop
cmp
arpl
out
xor
push
es
ss
adc
xor
jp
scas
add
xor
mov
cmp
adc
aad
sbb
cmp
in
xor
iret
adc
or
add
outsb
mov
enter
fstpt
mov
dec
std
fists
cmpsb
inc
js
aad
mov
cmp
and
push
ret
ret
dec
cmp
push
xchg
sub
dec
dec
add
pop
jbe
mov
push
clc
shrb
jle
sub
mov
insb
xchg
aas
add
mov
pop
dec
sbb
pop
movsl
mov
jle
jmp
imul
scas
push
mov
or
std
jb
cmp
jmp
mov
pop
dec
xor
or
lods
jbe
popa
push
mov
lods
inc
mov
or
fs
xor
push
repnz
sub
cmp
sub
imul
jae
inc
aas
stos
shlb
dec
cmp
cmp
cmp
stos
mov
jge
cmp
or
jg
xor
ret
add
xor
addr16
scas
lcall
inc
lds
cmp
scas
cmpsl
mov
scas
outsb
pop
cmp
and
test
xor
cmp
js
sbb
pop
icebp
sbb
stos
jbe
jg
andl
push
sbb
call
jae
cmp
nop
mov
lods
pop
add
ljmp
and
lock
aaa
jecxz
and
js
aam
xor
pop
arpl
inc
ja
cltd
mov
inc
cmp
dec
adc
mov
push
leave
xor
mov
aam
filds
cmp
insb
out
aaa
arpl
fsubrs
loopne
sbb
push
cmp
push
adc
adc
out
ja
pop
mov
cmp
push
sub
lds
rolb
je
xchg
jp
jne
jae
jns
mov
sahf
xchg
pop
insb
mov
mov
mov
push
xor
xchg
stc
mov
cmp
ss
push
xchg
int
and
sti
cltd
mov
in
mov
push
lods
and
je
int
enter
inc
xor
mov
sub
sbb
cmp
dec
in
movsl
cmp
push
ljmp
sub
int3
mov
sarb
mov
iret
or
sub
jo
jbe
enter
push
out
shlb
nop
mov
lahf
dec
xor
cmp
pop
scas
xchg
sbb
jo
or
sub
iret
stc
mov
out
or
stos
mov
xorb
xchg
xchg
sub
ret
cmp
adc
sub
inc
xchg
in
xor
xor
jp
cmp
enter
mov
xor
push
xchg
jge
insl
ds
xor
inc
mov
xchg
mov
out
pop
push
mov
fistl
add
les
mov
cmp
sub
negl
dec
mov
mov
fst
iret
hlt
cmp
divb
adc
shll
mov
sarl
cmp
fnstcw
cmp
sbb
ss
shlb
pop
repnz
inc
jbe
loopne
inc
xor
sub
pop
aaa
movsb
arpl
cmp
out
imull
js
cmp
pop
into
movsb
push
jbe
xor
xor
mov
adc
mov
inc
sbb
test
ds
mov
sbb
movsl
xor
aaa
pop
and
xchg
fidivs
in
cmp
and
dec
std
aaa
xor
mov
sbb
xchg
xor
fwait
ret
xor
sbb
cmc
pop
xlat
mov
cmpsl
hlt
cmp
sbb
push
movsl
fstps
adc
leave
out
cmp
loopne
out
movsb
rolb
push
xor
test
stc
ret
mov
jno
xor
adc
fidivrl
hlt
out
shr
into
sub
pop
in
lods
push
jae
dec
cmp
inc
imul
cmp
inc
mov
cmp
xchg
lcall
xchg
pop
mov
cmp
cmp
daa
push
shll
sarb
xchg
inc
adc
push
and
addr16
fwait
pop
jo
or
mov
cli
push
dec
lock
xor
cmp
fdivs
cmp
sub
repz
cld
or
scas
or
inc
inc
cmp
pop
pop
mov
loope
jno
xchg
cltd
jmp
and
xchg
out
stc
cmp
data16
in
fistpll
cld
sbb
pop
repz
xor
add
pop
xor
icebp
jmp
nop
sti
subl
dec
aaa
int3
data16
dec
fcmove
adc
sub
xor
inc
hlt
inc
cmp
sub
aad
sbb
mov
leave
cs
fistps
icebp
sub
test
insl
jae
dec
in
push
cmp
outsb
sbb
jns
enter
xor
dec
push
adc
cmp
out
adc
pop
dec
xor
jo
sahf
jle
imul
and
mov
insl
pop
dec
je
daa
sbb
cwtl
std
cmp
adc
xor
xor
push
dec
ret
je
sarl
stc
cmp
iret
push
sub
sbb
in
movsl
cmpsb
lret
cmp
mov
jne
mov
jo
xchg
xor
push
inc
jbe
or
cld
cmp
inc
mov
nop
int
jge
cmp
push
mov
xor
pop
rcrl
fs
xor
cmp
test
mov
sar
push
jnp
hlt
mov
cmp
aam
sub
push
sub
xor
push
cmp
jo
pop
imul
mov
xor
cmp
jae
inc
fistps
xor
clc
dec
shl
repnz
jle
popf
sahf
or
push
push
and
xchg
mov
adc
sub
fldcw
int3
xchg
stos
jecxz
add
clc
sbb
or
outsl
cmp
adc
adc
aam
lcall
push
push
push
enter
stc
push
rolb
dec
outsb
and
xor
pusha
jge
sub
lret
adc
push
cli
mov
mov
mov
pop
cmp
gs
add
pop
mov
imul
xor
jno
adc
jp
sub
dec
ja
xor
stc
pop
cwtl
aaa
nop
cmc
push
push
sti
xor
mov
sbb
sarb
push
add
fdivrs
pop
js
cmp
jg
add
out
cwtl
loope
mov
sbb
test
stos
lock
cmp
call
dec
add
push
xor
mov
movsl
jbe
adc
je
add
ja
xor
mov
push
scas
lret
mov
nop
cs
add
push
aaa
xchg
pop
xor
enter
sahf
cmpsl
sub
pop
xor
insb
dec
neg
data16
mov
fwait
xchg
pop
cmp
mov
mov
or
xchg
int3
cmp
adc
push
andb
test
cwtl
mov
sbb
sbb
enter
outsl
mov
pushf
mov
xchg
pop
mov
mov
xchg
test
xchg
pusha
stos
pop
loope
xor
clc
inc
movsb
lods
punpckldq
fmul
sub
sub
dec
cmp
jo
xchg
ficompl
mov
stos
sub
shll
xchg
xlat
cmp
xor
add
loope
pop
mov
cmp
js
movsl
lret
sub
pop
or
xor
fs
rol
test
insb
mov
add
pop
mov
sbb
cmp
mov
inc
inc
sub
je
and
cmp
add
push
sub
fdivl
and
adcl
fsubs
fcomps
mov
insb
mov
inc
ljmp
or
lea
js
or
adc
int
cwtl
mov
iret
test
pop
cmp
subb
dec
push
movsb
add
xchg
ficomps
iret
movsl
mov
lcall
in
adc
rcrb
cmp
pop
cltd
inc
xor
pop
cmp
ja
rclb
cwtl
and
out
insb
push
pop
mov
adc
mov
cmp
or
pop
push
mov
mov
dec
cmp
xchg
sbb
and
sub
pushf
and
lock
mov
push
xchg
add
jl
push
push
scas
sahf
jl
or
add
rorl
mov
jmp
sub
cltd
jge
jo
aaa
xchg
cmpsl
mov
xchg
push
xor
cmp
loope
cmc
push
cltd
push
out
cmp
sbb
cmp
in
mov
pusha
add
in
sub
cmp
lea
iret
pop
loope
add
pop
or
cli
imul
aam
inc
clc
cmp
roll
push
sbb
or
fs
ja
cmp
inc
cmp
rolb
insl
ss
fwait
push
pop
fcmovbe
cmp
jl
lods
dec
repnz
ds
sbb
lods
mov
in
sub
scas
bound
dec
mov
lahf
adc
add
cltd
stos
shlb
xchg
xlat
sti
mov
aad
stc
inc
mov
cmpsl
sub
jnp
add
imul
xor
nop
enter
aam
cmp
sub
js
popa
jb
jge
pusha
test
mov
xor
sub
xchg
mov
jo
jns
les
cmpb
imul
mov
loopne
xor
cmp
jae
cmp
mov
movsb
mov
mov
jb
cmp
mov
repz
and
cmp
addl
ljmp
ds
xor
push
enter
clc
add
fs
pop
push
cltd
xor
jmp
test
add
call
je
insb
xchg
mov
xor
cwtl
push
mov
xor
data16
hlt
dec
sub
jl
xor
out
push
pop
adc
aad
mov
jg
fildl
cmp
cmp
jnp
mov
cmp
cmp
inc
scas
xorl
jle
adc
add
mov
dec
out
fnstcw
xchg
call
imul
cmp
mov
jl
pop
cmp
push
je
sub
loope
inc
xor
xor
std
test
mov
cmpsl
jecxz
mov
jmp
pop
ja
fcmove
cmp
mov
aaa
and
sub
jmp
repnz
jecxz
mov
add
ljmp
push
in
call
andb
cltd
sbb
sub
sbb
and
xor
mov
mov
and
sub
je
shll
xor
inc
sbb
jle
or
push
cmp
out
or
mov
enter
and
push
xchg
negb
outsb
cmp
sbb
push
inc
shll
jmp
jmp
fmul
insl
shl
adc
cmp
inc
add
pop
cmp
inc
push
pop
mul
xchg
add
pop
cmpsb
arpl
push
mov
jbe
nop
and
mov
stc
adc
pop
outsl
jecxz
dec
adc
cmc
jnp
popa
sub
jmp
mov
fimull
jecxz
xor
sbb
add
xor
cmp
mov
xchg
xchg
pusha
stc
push
rolb
lret
xchg
xor
sahf
cmp
push
mov
mov
cmp
rcll
xor
lahf
xor
inc
test
xchg
push
adc
ljmp
stos
clc
sub
mov
cmp
mov
cmp
js
and
repnz
stos
mov
xor
mov
mov
ss
jmp
in
add
es
pop
sbb
cmp
fwait
and
cmp
in
fimull
cs
jns
pop
push
lock
mov
rcrb
outsl
or
stc
enter
xor
mov
push
arpl
and
xor
push
xchg
dec
pop
push
dec
jb
test
push
xchg
xor
jne
icebp
adc
stos
enter
add
mov
notl
adc
cmp
or
bound
xor
cmp
test
or
mov
shl
cmp
adc
pop
mov
inc
sub
sub
enter
idivb
xor
std
jno
sub
loopne
adc
sbb
jne
nop
pop
leave
pop
and
mov
stos
inc
lret
pop
cmp
fs
xchg
and
push
cmp
jmp
jg
rolb
les
or
cmpsb
dec
ret
mov
enter
jmp
cmp
jb
pop
mov
xor
loope
push
gs
jl
jns
shr
divb
jmp
clc
hlt
lret
insl
loope
mov
xor
mov
pop
outsb
lea
out
adc
lods
popa
cmp
jns
cmp
cwtl
push
push
add
mov
mov
add
cltd
jbe
jmp
clc
pop
nop
jae
scas
fisttpll
test
cwtl
or
cmp
sbb
xchg
shll
pop
mov
push
repnz
pop
data16
call
daa
fidivl
sbb
mov
jg
cmp
clc
scas
pop
or
lret
jo
jbe
pop
sbb
xor
fidivrl
mov
mov
mov
lock
mov
imul
add
repz
and
fisttpll
push
lret
shlb
pop
push
dec
cmp
and
movl
idiv
shlb
xor
push
cmp
enter
iret
inc
adc
sbb
cs
test
pop
mov
jge
aam
ret
fiadds
add
push
pop
cmp
sub
pop
push
pop
mov
mov
mov
mov
cmpsb
idivb
clc
add
inc
cmp
xor
into
xorl
and
js
in
jle
and
hlt
sub
push
jbe
adc
xor
sbb
xchg
or
sti
addl
xor
pop
cltd
xchg
mov
mov
jp
pop
bnd
or
movb
inc
cmpsb
push
ja
sbb
mov
pop
push
or
mov
lods
cld
mov
stc
pop
mov
jb
pushf
js
jns
movsb
pop
mov
sub
icebp
mov
add
aas
aaa
jns
pop
loope
cmp
lods
fdiv
jo
mov
loop
cmp
or
outsl
pop
cmp
push
mov
xchg
movsb
or
add
shl
mov
mov
stc
cmp
jo
ret
inc
push
pop
sub
clc
lahf
cmp
fnstsw
cmpsb
scas
test
cmp
pop
dec
push
mov
stc
aaa
mov
jl
daa
sub
sbb
cli
mov
pop
orb
icebp
pop
jno
sbb
or
leave
imul
cmp
add
xor
stc
pop
and
push
insl
adc
lods
ret
sub
xor
sbb
loopne
or
push
js
stos
cmp
fsubs
mov
rolb
gs
je
enter
fidivrl
mov
xor
stc
outsb
mov
cli
add
cmp
out
loope
dec
xchg
push
jnp
inc
xorl
xor
dec
mov
lea
push
mov
adc
inc
in
movsb
push
bound
cmp
clc
pop
ss
stc
js
shll
adc
xor
mov
mov
mov
sub
pop
test
ss
lods
pop
mov
cwtl
add
gs
mov
cmp
dec
fstl
bound
mov
or
cmc
inc
and
lret
enter
stos
jo
dec
add
mov
push
xor
inc
jl
andl
cmp
mov
adc
testl
cli
xor
lds
fsubr
cmovno
idivl
fsts
stos
and
cmpsb
mov
addr16
divl
mov
insb
sbb
xorl
xor
xchg
enter
icebp
sbbb
rcr
mov
cwtl
xchg
pop
add
pusha
cmp
xor
push
movsl
pop
mov
push
xor
jmp
pop
mov
cmp
mov
pop
call
mov
xor
push
stos
cmp
movsb
and
or
mov
push
pop
add
jle
cmpb
jbe
adc
fadds
cmp
sti
lods
outsb
arpl
fldenv
jns
dec
in
xor
push
sar
in
popa
out
xchg
xchg
stc
cmp
cmp
xor
jle
mov
fs
insb
movsb
stos
xor
sti
test
aad
mov
leave
lods
sbb
push
dec
mov
idiv
fdivrs
inc
xlat
in
rcrb
loopne
jne
sarb
cmp
mov
sahf
nop
cmp
mov
xor
jns
cmp
ss
and
cmp
mov
mov
ja
aas
std
xor
pop
aaa
cmp
popa
mul
sbb
cmp
pushl
jge
dec
aaa
fstps
xor
inc
scas
insb
cmp
xor
stc
xlat
xor
mov
in
pop
dec
cwtl
xor
hlt
je
fidivl
jae
aaa
push
js
push
aas
cmp
push
mov
lret
mov
fcmove
sbb
enter
sbb
jb
cmp
dec
push
popa
rorl
xor
cmp
mov
cmp
rcrl
fcomps
sbb
sbb
jo
xor
loopne
adc
and
mov
cmp
fsts
mov
jmp
adc
jg
testb
mov
pop
fistpll
or
xchg
das
jae
xor
adc
jne
push
xor
xchg
pop
adc
jno
out
outsl
sub
repz
cmp
sarb
sarl
jle
adc
lret
cmp
sub
outsl
add
popa
inc
xor
cmp
shll
inc
hlt
cmp
rolb
inc
lret
push
sarl
dec
sbb
lods
dec
cmp
insb
lds
adc
daa
and
jae
ret
fcoms
out
and
and
aaa
mov
xor
mov
je
js
jbe
mov
xor
filds
idivb
js
push
stos
jmp
in
lcall
xor
dec
test
xchg
xor
aaa
push
shrb
inc
xchg
call
inc
sub
fs
push
fisttpl
jae
cmp
icebp
jg
subl
xor
add
dec
cmp
sbbl
lret
and
lret
aaa
dec
jae
std
loopne
sub
outsb
fucomip
orl
mov
cmc
sub
arpl
imul
cmp
repz
inc
mov
dec
pop
lret
out
std
cmp
lret
sti
adc
xlat
or
sbb
cmp
jo
ret
mov
dec
jae
sub
fisubl
testl
jge
cwtl
sub
fcom
jnp
pop
cmpb
inc
dec
aaa
addr16
cmp
sbb
dec
fcoms
fbstp
mov
fmull
add
cmp
cli
icebp
ja
ret
shr
shl
mov
mov
sbb
in
aas
cmp
orb
je
hlt
repz
mov
pop
cmp
xor
jns
cmp
inc
mov
cmpsl
clc
pusha
pop
fcmovnbe
pop
mov
insl
xchg
cmc
dec
mov
fs
fstps
adcl
xor
mov
dec
rorb
ret
and
fsubrs
sbb
rcrb
cmp
into
pusha
je
pop
pop
cmp
sub
pusha
mull
xor
sub
pop
xor
jbe
lods
shrb
xchg
push
mov
in
mov
jbe
es
pop
add
aad
into
leave
fdivrs
sub
dec
in
hlt
rcrb
rcrl
xor
or
jae
xchg
mov
fildll
js
jecxz
int3
jecxz
loop
pop
aaa
out
stc
clc
shrb
mov
cmp
pop
hlt
call
rcll
inc
inc
inc
inc
dec
movsb
cmp
cld
leave
xchg
mov
fwait
pop
push
mov
mov
icebp
test
test
pop
jmp
mov
clc
xor
stc
or
xor
sbb
sarl
sub
cmp
insb
jecxz
inc
std
into
add
cmp
ja
imul
sub
xor
dec
adc
mov
imul
mov
mov
cmp
shrb
sbb
xor
cmpsl
punpcklbw
push
adc
fadd
and
mov
aad
bound
jb
nop
imulb
jmp
or
xor
push
cmovb
aaa
stc
mov
popa
adc
sbb
std
mov
add
xor
or
icebp
push
push
jecxz
scas
lcall
ljmp
fldenv
mov
adc
scas
rcl
lahf
xor
jl
ljmp
insb
inc
adc
xor
xor
mov
jae
cmp
push
fcomps
pusha
jge
add
ss
cmc
xor
shrb
scas
inc
push
mov
les
push
cli
push
mov
jl
xor
add
push
push
jbe
xor
sub
and
mov
xor
mov
jb
in
mov
sub
aam
inc
xor
mov
xor
push
sbb
or
imul
pop
cmpsb
shl
fucom
sahf
mov
cwtl
incl
sub
adc
outsb
pop
sub
xor
or
sbb
cmp
sub
hlt
jne
cltd
lock
fsub
push
mov
jp
pop
cmpb
call
adc
sbb
xor
pop
mov
pop
out
and
pop
xchg
pop
mov
mov
add
mov
repz
das
adc
jns
mov
scas
dec
cmp
je
pop
mov
push
cmp
push
enter
and
insb
std
adc
cmp
scas
pop
cmp
push
pop
cmp
sti
sub
cmp
pop
adc
in
pusha
and
andl
cmp
xor
je
and
inc
mov
mov
into
mov
fs
and
inc
sub
mov
repz
cli
shrl
add
lcall
in
mov
dec
and
fs
mov
imul
nop
and
pusha
mov
inc
in
cwtl
dec
repz
je
mov
and
mov
orl
pop
push
in
and
jne
pop
ds
xor
xchg
cld
xchg
inc
xchg
add
ljmp
nop
dec
sahf
icebp
xor
cmp
mov
and
movsl
data16
xor
push
ffree
push
stc
in
cmp
pop
mov
ss
dec
mov
icebp
cmp
cmpsl
data16
popf
adc
sahf
test
cmp
xchg
rolb
cmp
xchg
shrl
mov
stos
loope
out
mov
sub
or
mov
push
and
adc
mov
jae
push
test
clc
mov
dec
push
fmuls
ret
push
mov
imull
pop
cmp
mov
adc
add
ss
adc
hlt
xor
mov
sbbb
sti
clc
cmpsl
stc
out
or
mov
movsl
repz
mov
int
imul
leave
subb
push
jns
pop
addr16
dec
data16
inc
push
popa
pop
xchg
cmp
sub
fstps
pusha
xchg
loopne
mov
push
cmp
gs
outsb
cmpsb
cld
xor
or
add
imul
ss
fucom
repz
mov
dec
fmull
cld
cmp
js
rcrb
fnstenv
inc
cmp
adc
mov
add
aaa
mov
fdivs
iret
add
sub
test
cmpsb
popa
and
add
and
dec
fwait
or
adc
scas
fnstsw
xchg
sbb
pop
stc
push
mov
cltd
js
iret
jmp
lcall
cmpsl
xchg
mov
aaa
shrl
subl
dec
daa
jbe
testb
pop
loope
aas
les
dec
mov
xchg
shll
pop
adc
pop
addr16
inc
ljmp
dec
pop
popf
mov
aad
mov
pop
div
xor
cmpsb
rcrl
and
mov
jnp
leave
add
imul
xorl
sbb
jge
or
cs
mov
rcrl
rclb
pop
mov
or
mov
addl
pusha
movsb
jl
xor
iret
cmp
leave
and
pop
cmpsb
sub
fcoml
and
daa
shlb
sarb
add
pop
nop
shrl
ds
es
cmp
push
mov
ss
push
cmp
push
push
lahf
aam
je
out
and
scas
sbb
subl
shlb
or
sahf
jmp
pop
pusha
sarb
xor
aad
xor
mov
xor
pusha
and
call
mov
in
push
je
imul
movsl
mov
jle
and
jo
rorl
mov
push
out
cmp
jle
inc
xor
push
cmp
adc
mov
xchg
ss
pop
das
cmp
mov
nop
cmp
dec
stc
out
dec
sub
loopne
aaa
enter
mov
mov
pop
push
shrl
aaa
dec
dec
aad
mov
in
xor
push
mov
pop
adc
push
adc
sbbb
cmp
sahf
out
mov
cs
mov
lea
adc
xor
cwtl
jmp
daa
fcmovbe
lods
jle
push
push
cmp
sub
or
testb
into
adc
imul
call
push
and
inc
mov
ret
not
xchg
or
xchg
lea
rcll
lods
int
orl
push
stos
mov
jbe
in
xor
loopne
or
add
xchg
aam
inc
in
jbe
add
mov
in
xor
push
cmp
pop
cmpsl
sbb
push
adc
push
cmp
fstps
or
sub
outsl
fbld
xor
cmp
xchg
mov
cmp
jge
mov
cmp
or
adc
or
dec
js
push
add
jae
mov
sarb
adc
xchg
arpl
push
cmp
push
adc
lahf
jns
test
leave
or
adc
aam
mov
xchg
mov
lret
or
mov
xchg
adc
cmp
mov
jl
aad
js
outsb
call
and
test
xor
cmp
cmp
ss
mov
mov
sub
arpl
xchg
jge
or
sub
adc
test
out
xchg
xlat
xlat
push
dec
jg
xor
add
repnz
movsb
das
fwait
dec
mov
jne
push
pop
ss
jb
hlt
pop
cli
and
push
xor
lahf
scas
xor
xor
adc
xor
loope
jbe
cltd
mov
ljmp
cmp
fcomps
adc
out
cld
add
mov
sub
xchg
loopne
aaa
aad
inc
movsl
fstps
jb
push
leave
aaa
xor
mov
jne
xchg
aam
push
pop
andb
sbb
adc
adc
gs
in
inc
sub
push
cmp
stos
fdivs
arpl
rclb
cli
and
sbb
clc
inc
sub
adc
lea
es
push
adc
push
mov
scas
insb
aad
mov
add
xor
adc
adc
movsb
mov
xlat
inc
in
xchg
xchg
xor
mov
adc
sarl
fnstenv
xchg
xchg
lock
imul
cmp
mov
mov
sub
xor
mov
cmp
sbb
and
mov
daa
outsl
xor
pop
movsl
cmp
dec
clc
shrl
jno
xor
xchg
popl
pop
je
pop
or
call
xchg
pop
cmp
jge
in
test
mov
icebp
imul
sarb
sub
movlps
call
cmp
sub
sbb
cmp
mov
pop
jge
cmp
sbb
test
mov
gs
add
dec
add
pop
pop
repz
movb
mov
pop
scas
cmp
push
jbe
imull
push
ret
rcll
pop
cmp
loope
mov
lahf
add
scas
popa
mov
lea
or
jecxz
inc
xor
lret
insl
push
dec
push
cmp
nop
mov
adc
adc
xlat
fidivl
cwtl
in
test
lahf
sub
cmp
and
jge
push
sbb
jbe
mov
cmp
fists
sbb
lret
icebp
and
scas
pop
dec
jbe
cmp
hlt
incb
in
enter
inc
sbb
mov
cmp
scas
cmpsb
mov
enter
push
cmp
les
jle
imul
das
sbb
pop
in
test
adc
inc
movsl
lcall
mov
scas
xorl
jle
repz
scas
dec
push
pop
cmp
iret
xchg
sti
lea
push
add
mov
cmp
jns
loopne
jle
inc
ret
dec
xor
cmp
cltd
enter
mov
sbbl
loope
bound
popf
cmp
test
ficoml
divb
rolb
sub
pop
rcl
cmp
xor
xor
add
ss
imul
xor
adc
flds
fprem
mov
ret
mov
movsb
mov
in
xor
and
xor
add
sbb
cmp
xor
nop
pop
mov
xor
xor
out
mulb
xor
shr
xor
cmp
lods
popa
outsl
push
pop
scas
notb
aam
inc
xchg
or
std
cmpsl
test
cmp
inc
push
outsb
pop
imul
push
cmp
nop
mov
mov
push
mov
aaa
cmp
xchg
das
into
sbb
push
cmp
push
loop
daa
mov
or
insb
cmpb
ljmp
loope
mov
insl
pusha
lds
cmpsl
dec
push
xor
jg
sbbb
sarb
cmp
popa
add
xor
dec
enter
xor
or
sub
jmp
ficoms
cmpsb
adc
adc
xor
dec
loopne
inc
nop
addr16
lods
push
inc
cmp
mov
mov
aaa
xchg
mov
loopne
cmp
js
movsl
and
dec
test
stos
xlat
pop
jbe
lret
addb
not
fistpl
sbb
push
cmp
xchg
in
repnz
rcrl
jo
xchg
cld
cmp
outsb
mov
daa
dec
cmp
sub
xor
shlb
shll
dec
xchg
test
push
lods
cmp
cmp
mov
sub
mov
jae
mov
sub
imul
add
jg
insb
mov
lods
push
out
sub
stc
cmp
fidivrl
insb
enter
aam
add
into
repnz
jle
jbe
leave
in
aaa
push
xor
dec
cmp
xor
repnz
jae
sbb
mov
xor
push
and
sub
inc
stos
mov
xor
rol
cmc
or
xor
repz
cld
adc
popa
xchg
jne
cwtl
push
xorb
push
shll
jmp
cmp
sbb
or
xchg
push
sub
and
outsb
cld
add
cmp
ljmp
ror
push
fbstp
outsb
pop
mov
dec
cmp
addr16
xor
dec
aam
fwait
nop
cmp
cmp
or
in
insb
je
push
leave
mov
inc
cs
int3
sbb
clc
xor
mov
ret
cmpsb
xor
cmp
sti
and
ss
adc
icebp
in
aaa
adc
and
jp
mov
popl
in
jne
cmp
jns
adcb
adc
cmp
fists
stc
addl
sahf
cmp
call
xor
fcomip
rcr
cmp
lock
nop
cmp
mov
add
xchg
enter
and
lret
add
fadds
jle
mov
nop
cmp
jne
call
gs
xor
adc
cmp
pop
mov
xor
outsl
cmc
movsl
jecxz
cmp
addb
cmp
mov
adc
cmp
xor
ja
jo
mov
inc
or
sbb
repz
dec
mov
push
jp
lods
xor
add
in
cwtl
xor
es
adc
push
jecxz
out
and
dec
jmp
adcl
frstor
sub
add
cmc
cmp
insb
shlb
add
fimuls
in
hlt
add
mov
dec
das
xchg
cmc
pop
cmp
cs
cmp
mov
sbb
aam
cmp
js
mov
mov
daa
ja
dec
push
cmp
add
cmp
orb
inc
out
sbb
mov
or
or
mov
cmp
cmp
rorb
test
mov
cmp
lods
sbb
rcrl
xor
jae
xor
or
int
mul
and
daa
jmp
clc
inc
mov
pop
xor
mov
imulb
add
add
lcall
adc
or
cmp
loope
add
xchg
inc
cmp
sbb
jne
xor
push
cmpsl
cltd
in
outsl
xlat
lcall
in
sbb
cmp
or
repnz
pop
inc
push
cmp
xchg
sbb
cmp
dec
testb
out
xor
add
jle
and
ficoml
mov
test
sub
jge
or
clc
pushf
add
js
fcomps
cmp
pop
jb
pop
mov
lcall
xlat
jmp
xor
insl
xor
pop
xor
mov
enter
and
mov
push
sbb
xchg
or
adc
ja
cmpsl
call
sbb
es
push
xchg
cmp
mov
or
cmp
mov
lret
push
pop
mov
cmp
aam
cmp
cmp
rolb
cmp
bound
xchg
push
sti
xor
jae
mov
lea
xor
add
stos
test
idivb
cli
push
je
adc
das
push
xor
xchg
xchg
push
out
cmp
in
push
mov
mov
xchg
xor
cmpsl
inc
mov
cmp
xlat
je
cmp
notl
mov
add
jns
loope
xor
sahf
jge
cmp
cmp
adc
mov
ds
cmc
cmp
sbb
dec
or
push
daa
mov
xchg
cmp
jle
cmp
roll
stc
lret
dec
and
js
cwtl
popf
repz
mov
out
dec
mov
xchg
sbb
lods
mov
mov
aam
xchg
and
push
shr
mov
cs
xor
movsl
xor
pop
ds
mov
and
sbb
jmp
les
stos
sub
push
push
sar
aas
pop
ss
sbb
push
dec
adc
sbb
cmc
push
shlb
lods
mov
xor
cmp
in
mov
stc
xor
repnz
int3
mov
jae
sbb
push
mov
xor
dec
stos
cmp
pop
and
inc
mov
rorb
jge
cmp
gs
das
aas
cmp
std
clc
shlb
cmp
xchg
pop
adc
mov
fstp
sbb
mov
xor
cmp
push
ss
cmp
jne
ljmp
xor
movl
add
xchg
mov
out
or
ret
mov
add
into
adcl
stos
lcall
inc
mov
sub
cmp
shlb
gs
xor
adc
clc
pop
jbe
dec
pop
cs
int3
repz
pusha
mov
shrl
mov
js
push
inc
push
jmp
add
test
fdivs
mov
jbe
cmp
inc
stc
and
push
xor
mov
pop
push
push
push
and
fdivrs
sbb
in
es
lea
xchg
dec
push
xor
js
push
xor
mov
and
xor
push
push
sub
sub
cmp
js
jae
jp
and
enter
mov
cwtl
mov
mov
std
jp
call
and
js
mov
mov
mov
cmp
mov
fsubrs
aad
cmp
xchg
rcrl
icebp
insb
jo
xchg
aaa
adc
mov
and
stc
hlt
lret
clc
js
add
cltd
pusha
xor
sbb
jns
aam
sub
mov
gs
clc
mov
cltd
cmp
adc
stos
rep
daa
popf
js
xor
sub
cmp
cmp
lret
add
ss
js
mov
test
jbe
xchg
outsb
xchg
cmpsl
lcall
cmp
icebp
sub
ds
enter
cmp
push
stos
sub
pushl
cmp
sbb
push
out
jmp
fsubrp
xchg
xchg
call
stc
cmp
out
pusha
das
push
test
enter
sbb
jae
mov
jmp
jo
inc
mov
fnsave
sbb
lahf
test
cmp
fldl
in
inc
sbb
lock
scas
lds
xchg
jns
jo
adc
cltd
push
xor
adc
add
lods
popa
adc
enter
pop
adc
mov
mov
sub
mov
stos
xchg
mov
cmp
addl
pusha
push
jbe
xor
enter
mov
cmp
jge
inc
movsb
incl
xorl
je
xchg
cmp
push
cmp
scas
pop
sbb
mov
mov
addr16
pusha
mov
lahf
inc
push
jae
sub
push
test
xor
jnp
push
mov
dec
mov
sub
mov
daa
push
xor
int3
pushf
cwtl
jo
xor
data16
sub
out
rorl
loope
adc
pop
daa
inc
pop
xor
or
rorb
add
adc
lods
aas
cmp
or
and
sbb
cmp
repnz
cltd
cmp
repnz
mov
fnstcw
inc
push
cmp
sub
sub
mov
and
sbb
lock
mov
push
cmp
pop
mov
xlat
imul
jo
pop
pop
fsubrs
icebp
push
xor
cmc
sub
xchg
mov
push
mov
mov
cs
xor
cmc
pop
mov
insb
sarb
mov
pmulhw
or
jecxz
cmp
je
pop
cmp
loope
pop
mov
icebp
popa
or
fs
les
std
ret
jb
int3
cmpsb
push
loopne
dec
and
push
mov
lcall
rcll
pop
and
xor
and
shlb
jp
testb
add
inc
cmp
cmp
cwtl
popf
imul
add
cmp
xchg
adc
fmuls
sti
lret
mov
sarb
and
sbb
and
aam
push
or
mov
pop
mov
mov
pop
out
and
jo
sub
mov
mov
pop
mov
jne
xlat
add
popa
pop
mov
out
pop
aaa
cmp
pop
stos
ret
test
addr16
cmpsl
mov
roll
mov
mov
dec
sub
negb
cmp
and
xor
mov
cmp
pop
and
out
mov
ret
mov
adc
cmc
xchg
or
retw
jp
push
cwtl
mov
shll
cmp
dec
inc
shlb
push
cmp
mov
pop
add
pop
cltd
mov
mov
cli
or
daa
ja
out
je
shlb
and
icebp
pop
jns
cmc
loope
cwtl
cmp
imul
xor
arpl
or
jno
pop
pusha
cmp
hlt
cs
adc
add
cmc
aad
mov
xor
adc
cmp
loopne
mov
enter
and
adc
cli
aam
push
push
lahf
cmp
xchg
adc
adc
cmp
int3
sub
bound
dec
jle
and
or
stc
imulb
cld
dec
sbb
push
ss
xchg
cmp
fstpl
shl
sbb
pop
mov
ret
push
pop
push
xor
loop
xchg
testl
jbe
jmp
cmp
sub
outsb
cmp
mov
mov
mov
fdivs
adc
fs
icebp
xor
cmp
pusha
mov
push
push
in
jle
dec
stc
xor
out
lea
test
rorb
mov
jns
inc
dec
inc
cmp
push
sbb
addr16
fsubs
pusha
hlt
outsl
add
adc
push
xlat
add
xor
sbb
lods
inc
bound
and
repnz
loope
out
pop
push
mov
pop
cmp
push
stos
dec
inc
mov
mov
and
sbb
push
sub
dec
push
cltd
adc
cmp
jecxz
mov
js
aam
fnstenv
pop
push
mov
popa
cmp
mov
cmp
mov
xor
mov
push
xor
xchg
inc
xchg
sbb
adc
jns
mov
dec
sub
pop
add
pop
ss
and
scas
lock
jnp
jo
popa
xor
xor
cli
push
test
xor
and
xor
mov
les
inc
aam
std
cmp
and
xor
addr16
lds
cmp
lcall
js
mov
xor
out
test
stc
lcall
sub
adc
xor
xchg
cmp
or
xor
mov
sbb
adc
xor
jbe
pop
adc
clc
mov
mov
inc
filds
adc
pushf
xchg
xchg
mov
sbb
xor
jns
stos
cs
adc
inc
lcall
mov
ja
cmp
testb
pop
push
xor
sbb
cmc
clc
es
test
repnz
fldenv
dec
and
cmp
cwtl
xor
adc
mov
or
lods
pop
mov
ds
dec
xchg
xchg
lret
enter
shl
push
aas
and
in
mov
inc
cmpsl
icebp
sbb
or
and
inc
aaa
or
mov
sarl
fincstp
cs
clc
mov
jnp
xor
pop
sbb
sub
mov
je
jns
mov
pop
add
mov
je
out
fisubrl
movsl
xchg
nop
fabs
sub
in
and
or
aaa
jno
mov
xchg
mov
cmp
ss
rcl
repz
cltd
cmp
imul
mov
add
or
fnstenv
lcall
mov
inc
push
mov
stc
negl
rcl
pop
mov
xor
and
sub
mov
sub
and
sahf
cld
scas
fchs
icebp
xor
xchg
cltd
shll
lock
in
arpl
xchg
cmp
mov
sub
sahf
fdivs
push
out
xchg
clc
xor
jo
push
jbe
push
jns
push
call
jo
push
mov
xlat
stos
fxch
std
jae
imul
jne
cmp
pop
cmpb
adc
mov
cmp
icebp
sbb
xchg
into
bts
mov
out
cmp
les
sub
outsl
outsb
pop
mov
xor
leave
xor
push
aaa
push
fisubrl
out
icebp
test
movl
mov
push
lock
aam
test
xchg
jns
mov
aaa
ja
inc
add
adc
fiaddl
push
sub
xchg
sbb
clc
movsl
push
mov
imul
or
sbb
xor
push
inc
popa
pusha
xchg
nop
cwtl
cmp
loopne
cs
fnstcw
or
inc
lahf
push
clc
je
xor
and
test
sub
mov
sbb
jle
dec
pop
mov
mov
xchg
and
cmp
cmpsl
add
das
jo
decl
add
jb
inc
ss
mov
jns
adc
dec
push
xchg
xchg
iret
ss
test
and
sub
adc
add
ss
jle
pop
and
cmpsl
or
sbb
pop
xor
jbe
sti
xchg
fmul
xchg
mov
mov
cld
pop
test
sbb
jns
stc
cs
cmpsl
repz
fcoms
hlt
and
sbb
cmpsb
xor
mov
mov
rorb
push
lock
pop
jne
enter
out
pop
mov
mov
test
in
sub
sub
or
cmp
mov
cmp
shrl
movzwl
cmp
insb
subps
push
mov
bound
fdivrs
scas
and
or
xlat
adc
ret
adc
add
sub
pop
xor
aaa
fsubr
sub
cmp
and
fcmovb
cli
dec
jns
and
or
mov
dec
mov
outsb
popf
xor
xor
or
mov
rorb
lea
nop
xor
cmpsb
sub
xor
and
adc
sbbl
inc
ret
negb
test
stos
cmp
xchg
neg
add
popa
push
mov
cmp
and
add
push
cmp
and
imul
or
pop
push
sarb
aas
jle
repnz
cmpl
dec
test
mov
scas
mov
cmp
aad
cld
add
lcall
repz
ljmp
ja
sub
xchg
repnz
mov
enter
xor
mov
in
cmp
mov
xchg
xor
ja
into
mov
roll
cmpsl
scas
divl
dec
call
or
sub
clc
fwait
lret
jno
scas
add
cmp
aam
mov
mov
cmp
imul
shl
sbb
lods
cmp
pusha
aam
mov
xchg
push
mov
push
sbb
add
xchg
out
xor
jae
or
in
jg
and
jne
cmp
mov
xor
mov
dec
adc
and
xor
inc
loopne
jbe
aaa
aaa
and
mov
pop
jo,pt
sbb
enter
cmpsl
mov
cli
rclb
add
and
ss
xorl
sbb
push
and
add
jo
ljmp
stc
movsb
dec
xor
and
or
dec
daa
jne
cmp
loop
fcmove
jbe
and
push
lret
cs
lcall
and
and
xor
out
mov
orb
rcrb
ss
cmp
xchg
adc
sarl
add
xor
js
cltd
pusha
out
pop
mov
pop
shrb
test
jno
and
movsb
imul
xor
je
dec
fisubs
add
cmp
ja
xchg
cmp
push
cmp
push
roll
fbstp
ja
pop
cmp
cmp
push
push
jp
add
pop
xor
aad
icebp
test
xchg
dec
push
mov
inc
cmp
movsb
xor
imul
cmp
sahf
push
xor
push
sub
iret
pop
rolb
cmp
sub
and
cmp
or
cmp
and
jns
mov
xor
pop
cmp
xor
ret
jmp
icebp
test
cmc
dec
cmp
xchg
dec
out
pop
sub
push
nop
add
repnz
mov
push
jns
jbe
pop
es
add
ret
inc
cmp
sti
sbb
je
pusha
dec
push
pop
or
xchg
nop
inc
fs
test
pop
push
cltd
push
jo
or
mov
scas
shl
scas
test
test
pop
movl
stc
pushf
xchg
dec
inc
jecxz
fsubr
sub
xchg
sbb
test
jae
adc
fs
stos
mov
lods
xchg
or
mov
pop
insb
dec
add
mov
ja
mov
pop
xchg
dec
inc
or
test
add
cmp
hlt
aaa
xor
movsb
cwtl
adc
inc
icebp
mov
pushl
xchg
outsb
and
and
mov
cmp
scas
mov
fldl
jne
xor
push
xor
xchg
jae
cmp
insb
fs
cmpb
push
and
mov
cmp
jo
push
mov
fisttps
inc
in
xor
idivb
enter
pop
add
push
pop
mov
xor
and
jno
inc
ret
pop
jp
xchg
cmp
xorl
sbb
add
daa
cwtl
stos
fs
clc
ss
jg
sbb
push
insb
xor
mov
into
push
dec
sahf
push
dec
push
repz
out
jbe
push
ficoml
repnz
or
fnstenv
or
mov
cmp
pushf
out
cmp
icebp
mov
fcoml
out
sub
sub
jb
adc
xor
push
imul
arpl
mov
push
and
cmp
cmp
xchg
fisubrs
xchg
adc
sti
or
pcmpeqw
aad
cmc
adc
movsb
cmp
jg
nop
shll
push
push
movsb
lods
cmp
cltd
insl
fstpt
mov
ja
mov
stos
mov
test
cmp
js
mov
mov
xor
adc
pusha
imul
adc
sub
in
mov
andl
nop
int3
inc
out
cmp
icebp
fadd
xor
inc
cmp
xor
adc
xchg
cmpsb
mov
je
jmp
sub
lahf
sbb
add
cmp
repnz
xchg
scas
fstps
cmp
sub
ss
xlat
call
aas
push
imul
imulb
xor
cmp
jg
jecxz
hlt
jb
inc
xchg
sub
mov
or
cmp
dec
inc
icebp
das
xchg
pop
adc
xor
enter
and
jne
sbb
cltd
nop
shll
jp
fsts
dec
adcb
xchg
cmp
dec
jbe
cmp
push
jg
adc
insb
testb
xchg
clc
sub
enter
pushf
int
adc
js
aas
adc
pusha
in
push
out
cmp
pop
movsl
cs
aaa
sbb
sbb
inc
dec
dec
jne
push
cmp
jp
cmp
or
xor
cmp
jns
scas
test
je
xor
pop
popa
mov
scas
ljmp
in
mov
test
cwtl
mov
xchg
xchg
icebp
inc
arpl
das
sti
aam
leave
cmpsb
pop
sbb
mov
push
mov
xor
fprem1
jmp
iret
xor
sub
dec
lods
imul
push
xor
or
scas
jbe
mov
adc
enter
or
pusha
inc
mov
stc
test
aad
popl
jno
roll
clc
imul
add
fimull
cmp
mov
and
mov
lods
xchg
sub
scas
stc
cmp
nop
add
push
mov
test
jae
cmp
gs
cld
hlt
fldenv
pminsw
popf
mov
push
push
jns,pn
std
repnz
mov
jp
inc
push
aaa
cmp
jb
dec
out
sub
jecxz
and
outsb
repnz
outsl
cmp
inc
repnz
sub
cmp
push
mov
sub
nop
repz
stos
dec
push
mov
add
xchg
shll
push
fidivrl
cmc
pop
sub
outsb
cmp
clc
cwtl
xchg
and
push
inc
enter
jecxz
push
jns
pop
xlat
pop
lods
add
xchg
notl
rcll
sbb
movsl
fsubs
jle
pop
xor
call
push
aad
xor
pop
outsb
dec
push
adc
rorb
cmp
mov
xor
pop
cld
cmp
xchg
stos
das
cmp
lahf
jge
xor
jmp
sub
ljmp
mov
fdivrl
mov
js
std
sub
pop
sub
adc
sub
pushf
imul
xorl
add
ss
cmp
push
mov
xlat
xor
cmpsl
mov
mov
sbb
pop
inc
pop
mov
lret
jnp
cmp
mov
xor
aam
xorl
cmp
in
push
push
nop
popa
pop
dec
cmp
xor
rolb
mov
lret
mov
adc
dec
xor
jg
add
cmp
cmp
fnstcw
cwtl
popa
and
pop
sbb
or
cmp
cmp
mov
adc
ss
mov
repz
mov
inc
mull
cmp
pop
jbe
aaa
adc
mov
fwait
xor
or
cltd
mov
pop
pop
cmp
sub
and
in
xchg
leave
jne
cmp
testl
cmp
sahf
jmp
scas
ss
jo
xchg
cmp
out
cmp
inc
xor
andb
mov
jmp
popf
adc
xchg
lods
mov
xor
pop
js
jno
cmp
push
or
ret
pop
scas
aaa
mov
cmp
fldcw
ss
push
test
mov
push
dec
cltd
imul
into
sbbb
cmpsb
cmp
testb
xchg
add
and
cs
push
stos
imul
adc
fisubl
out
adc
sub
mov
xchg
mov
jbe
mov
xchg
push
iret
pop
add
jl
push
into
scas
xchg
adc
cmp
mov
fs
cmpsb
stos
and
into
jae
call
notb
mov
insb
shrl
xor
inc
sbb
sub
xor
rcll
xor
cmp
cmp
adc
pusha
loope
xchg
dec
mov
aaa
test
sbb
dec
ljmp
cwtl
xor
mov
jbe
push
dec
cmp
leave
fs
xor
scas
mov
loopne
je
xchg
and
adc
cltd
add
push
fdivs
enter
xor
mov
int
lods
rcrb
inc
scas
mov
lods
mov
xor
insl
mov
inc
popf
push
cmp
fwait
ss
dec
clc
cmp
mov
jmp
fstps
stc
inc
pop
stos
dec
mov
aaa
movl
jne
cmp
jp
fiadds
adc
xor
cwtl
aaa
in
mov
arpl
call
pushf
mov
cmp
out
outsl
mov
jns
sub
cmp
jp
pusha
shl
xor
inc
and
clc
sbb
jo
cmp
out
mov
sbb
mov
mov
popf
dec
andl
xchg
sbb
and
cmp
add
jo
inc
cmp
jbe
std
scas
fs
xor
fwait
mov
lret
sarl
xchg
inc
sbbl
popl
inc
mov
js
fmul
cmp
cs
jae
bound
xchg
sub
jp
ret
into
lret
xor
shll
iret
test
movsb
aam
or
jo
mov
pusha
pop
scas
js
xor
jl
movl
xor
dec
loop
arpl
cmp
and
xchg
movsb
sub
add
mov
ficomps
call
inc
ds
ss
cmp
sbbb
cmp
xchg
hlt
lods
dec
rcl
dec
aaa
jo
clc
dec
mov
out
jns
mov
sub
jmp
sub
adc
push
adc
xor
cmp
jmp
fwait
cmp
or
and
push
push
jecxz
jne
push
sub
push
mov
les
dec
fisubrs
scas
dec
mov
pop
push
inc
jmp
lea
lods
insl
insb
jno
and
out
or
mov
arpl
jle
xor
fdivl
test
test
push
adc
ja
cmpl
mov
xor
jmp
xor
ret
outsl
cmp
mov
gs
lods
cmp
sbb
adc
leave
fsubp
fsubl
push
dec
mov
sub
cmp
push
xor
pop
subb
and
fwait
sub
aaa
xor
cmc
and
pop
push
sbb
ret
notl
cmp
xor
push
xor
and
lahf
mov
cmp
cmp
sub
in
adc
mov
fdivp
sahf
sarb
xchg
add
cmp
shrb
xchg
fidivs
add
sub
mov
ss
push
mov
ret
aas
adc
call
cli
adc
cmp
xor
mov
xchg
inc
cmp
mov
inc
inc
xor
cmp
jp
mov
daa
and
mov
xor
xor
xlat
mov
stc
out
cmp
add
sbb
xchg
lahf
enter
cmp
adc
mov
and
js
push
ds
sub
sbbb
sahf
je
dec
add
pop
add
mov
push
mov
cmp
nop
imul
push
pop
stos
cmp
mov
mov
cwtl
pop
rorb
mov
fcmovnb
adc
xor
mov
xor
mov
hlt
adc
mov
mov
and
xor
shlb
mov
fldcw
sbb
es
sub
sub
sbb
jbe
pop
sub
ja
push
xor
std
scas
fnsave
insb
leave
pop
pusha
js
dec
mov
dec
xor
aam
sub
sub
xor
sarb
pop
test
jns
xchg
popf
aaa
inc
mov
xor
adc
sbb
ficoms
scas
sub
inc
lods
shll
mov
stc
addr16
clc
rcl
xor
loopne
and
sub
cmp
fsubrl
jb
push
cmp
jecxz
movsb
sbb
cmp
clc
mov
or
aaa
or
xor
adc
dec
fs
or
push
shlb
nop
pop
cli
idivl
movsb
xlat
sbb
xor
jbe
repz
cmp
adc
mov
mov
pusha
out
ss
and
fcomip
inc
push
xor
jo
jg
cmp
test
imul
mov
lcall
mov
dec
cmp
imul
and
loope,pn
mov
loopne
mov
enter
outsb
loope
push
sub
psllq
pop
fisubrs
mov
sub
hlt
xor
mov
xor
fnstenv
and
repnz
imull
adc
adc
ss
mov
test
xor
jbe
adc
and
movsl
std
flds
mov
rcrl
aaa
gs
mov
mov
sub
mov
jb
cmpsl
mov
xor
cmp
mov
xchg
das
rdmsr
je
push
pop
stc
arpl
push
and
jle
cmp
jae
aam
xor
mov
js
xor
sarb
lods
adc
pop
frstor
push
cmp
xor
xchg
pop
push
mov
mov
cmp
mov
mov
mov
add
lcall
scas
mov
pushf
mov
jne
aaa
dec
cmp
pop
sarb
jg
cwtl
popa
repnz
arpl
outsb
and
lods
std
aaa
adcb
push
jb
fldcw
cmp
and
pop
mov
dec
mov
cmp
xor
add
and
lret
sbb
cmpsb
xor
jne
push
cmp
lds
cmp
dec
cmp
xchg
xor
push
cmp
jecxz
into
shll
xor
call
cmp
mov
into
lret
xorl
lret
cmp
jl
fimull
orl
sti
and
and
rcrl
stos
mov
add
mov
xchg
xor
sub
sbb
mov
mov
xchg
jp
nop
lock
xor
aam
cmp
jnp
dec
aaa
cmp
xor
dec
cmp
scas
mov
imul
mov
xor
sub
repz
jb
mov
xor
xchg
jae
xchg
shrl
cmp
pop
jnp
out
clc
cmp
jecxz
pop
lcall
fidivl
cmp
and
je
sbb
mov
repz
test
xchg
leave
inc
insb
dec
jl
in
nop
fldl
sub
inc
mov
repz
jo
mov
xor
mov
shlb
push
pop
xor
pushf
js
inc
cmp
sbb
cmp
cmp
mov
mov
dec
ja
xchg
in
pop
mov
cmp
into
pusha
xor
outsl
int
lret
dec
imul
push
mov
or
mov
jecxz
xchg
cmp
out
int
add
loope
inc
sub
nop
sbbb
xor
xor
out
jae
xorl
cmp
pop
insb
cwtl
dec
aas
orb
xor
jp
ljmp
ja
sbb
sbb
sub
jae
push
xchg
jge
test
fadds
fwait
pop
sub
fists
sahf
adc
cmp
subb
negl
inc
fwait
dec
jecxz
mov
xor
sbb
ret
aaa
mov
mov
int3
lret
dec
lods
xor
cmp
push
aam
jmp
jmp
inc
cmp
pop
add
and
and
push
aam
cmp
or
fisubrs
jne
sub
and
pop
sahf
mov
adc
jecxz
sub
xor
out
andl
mov
mov
pop
xor
adc
cmp
and
in
iret
cmp
mov
xor
stos
cmp
ja
cmp
xchg
cmp
in
mov
imul
xchg
ja
mov
fiaddl
lods
mov
pop
call
xchg
jnp
stos
in
mov
xor
jae
cmp
push
mov
jae
scas
pop
sub
in
out
push
adc
pop
dec
and
mov
imul
hlt
xor
out
lret
addb
xor
adc
subl
sbb
je
mov
repz
adc
fdivrl
inc
dec
shll
icebp
scas
hlt
ss
repz
into
add
add
sub
mov
jae
sbb
sub
xor
cmpsl
cmp
xor
stc
cmp
and
test
lea
pusha
push
xor
addl
xchg
mov
lea
ss
add
sbb
pusha
add
lock
fs
adc
std
shlb
cmp
enter
mov
cmp
or
rcrl
adc
outsb
xlat
xor
je
mov
xor
push
mov
xor
arpl
and
cmp
inc
cltd
fwait
repz
cmp
ljmp
cmp
inc
sub
ret
mov
lock
hlt
div
je
dec
add
les
and
jp
adc
mov
xor
mov
sbb
int
js
xor
adc
add
mov
mov
cmp
mov
in
hlt
movsb
cmp
and
mov
jne
xor
add
xorb
jns
lds
cmpsl
jp
xorb
movsl
add
add
mov
fldcw
or
stc
xorb
cmc
sbb
cmp
ja
test
mov
sbb
ret
rcrb
ja
insb
push
iret
inc
stc
dec
lods
xor
adc
xor
cmpl
fsubrl
adcb
adc
lods
mov
jbe
dec
cmc
test
aad
mov
sbb
cmp
divl
pusha
sbb
movsb
pop
add
adc
je
cmpb
mov
mov
mov
repz
sub
pusha
cmp
aam
fdivr
pop
ss
rcrl
ja
jne
xchg
jo
xor
cmp
shlb
xlat
mov
mov
add
sbb
xor
sahf
xor
icebp
clc
cmp
jns
sub
pop
pop
push
je
sbb
cmp
sbb
clc
and
shll
cmp
stc
sbb
sub
jbe
jbe
jecxz
add
ljmp
out
test
sbb
cmp
mov
mov
fildll
test
xor
mov
add
jb
insb
push
sbb
lret
pop
adc
cmp
je
call
rorl
pop
add
or
negb
mov
xor
dec
mov
repnz
push
mov
fcoms
sbb
cmp
pop
es
mov
mov
cmp
cmpsb
jp
sbb
sub
cmp
int
dec
add
fsubp
sub
jno
pop
call
cs
popl
popa
fdivs
ss
and
pop
xor
insb
xor
loop
inc
test
push
loope
fbld
mov
xor
pop
pusha
and
das
and
shlb
push
dec
mov
outsb
aaa
adc
push
pop
push
cwtl
sbb
std
cmp
das
inc
dec
enter
cmp
ds
cmpl
mov
adc
mov
push
adc
cmp
int3
xor
pusha
daa
mov
or
xor
nop
sar
cmp
into
mov
lahf
jp
cwtl
xchg
sbb
jne
ret
sub
stos
xor
pop
fistpll
sbb
repz
add
cmc
shll
ss
push
sub
mov
dec
mov
xchg
and
cmp
lahf
rclb
xor
leave
adc
fwait
lea
adc
jo
xor
xchg
ja
dec
pop
iret
call
and
cmc
jg
addr16
test
sbb
dec
xchg
jmp
cmp
enter
adc
xor
in
stc
pop
lock
xor
pop
or
xchg
incl
cmp
xor
jg
lock
xor
xor
mov
nop
pop
pop
jns
fdivrs
inc
popf
sbb
push
pusha
cmp
mov
fsubl
push
or
sub
daa
sbb
stc
rcll
les
inc
xchg
cmp
popa
daa
xor
sub
jl
push
push
adc
xlat
aam
test
xchg
sbb
sub
dec
roll
push
xchg
adc
jns
cmpsl
cmp
pop
adc
and
mov
ja
or
xor
cmp
xor
loope
es
pushf
lea
mov
hlt
lcall
adc
mov
mov
aaa
push
lahf
push
adc
dec
enter
nop
push
cmp
sbb
xor
xor
addr16
fdivp
icebp
dec
divl
push
mov
cli
push
lret
fs
push
push
dec
je
push
pop
mov
gs
in
xor
push
cmc
fs
popl
orl
sub
and
icebp
cmp
mov
mov
sub
adc
xor
cmp
cmp
xor
mov
cmpsb
cmp
bswap
mov
insb
sub
pop
out
push
data16
sbb
push
ljmp
xor
dec
imul
daa
pop
pop
cmc
out
add
or
in
push
fsts
cmp
push
add
les
mulb
cmp
mov
pop
icebp
inc
push
xor
xlat
xor
push
fistpll
cmpsb
stc
mov
cmpsl
mov
lods
add
enter
or
and
push
enter
xor
sub
dec
lods
pop
cmp
inc
jo
mov
sbb
js
mov
pop
jg
psrlw
cmp
and
dec
in
push
mov
cmp
imul
xor
sbb
sahf
mov
shlb
test
add
jg
repz
jbe
fildll
mov
sub
and
das
push
cmp
adc
loope
mov
mov
xor
xor
xchg
cmp
insl
loope
cmp
pop
ss
mov
mov
xchg
cmp
loope
das
cmp
les
out
jp
mov
jl
out
add
xchg
icebp
and
jg
add
nop
and
clc
lods
inc
add
adc
in
mov
movsl
mov
xor
mov
in
rolb
cmp
xor
cmp
popl
cmp
sub
cmp
pmaxub
call
leave
xlat
js
lds
add
push
mov
adc
xor
mov
rclb
fdivr
xor
push
sub
loope
xchg
lods
es
lea
out
mov
addr16
adc
cmp
gs
arpl
xchg
lock
xchg
loop
popa
repz
hlt
lahf
cmp
adc
stos
fcmovbe
add
inc
sbb
dec
mov
int
lock
pop
pop
nop
mov
or
stc
test
and
inc
icebp
xor
scas
cmp
filds
ljmp
cs
ficoms
jecxz
inc
add
xor
cmp
xchg
mov
push
push
mov
push
dec
les
push
testb
xchg
leave
sbb
cmp
pop
cmp
js
outsb
roll
jo
out
or
mov
test
fs
js
xchg
add
xor
sbb
data16
mov
and
arpl
mov
push
add
sbb
mov
pop
cmp
lods
hlt
pop
clc
mov
rorb
push
pop
repnz
pop
mov
cmp
outsb
dec
mov
mov
cmp
pop
mov
jnp
and
ret
cmp
nop
shrb
roll
cmp
daa
mov
int3
cmp
sbb
add
cmp
push
scas
cmp
rclb
sbb
movsb
lods
cmp
xchg
inc
dec
pop
cmp
jmp
mov
mov
mov
cmp
cmp
sbb
outsb
mov
js
clc
add
and
mov
aas
mov
cmp
subb
pop
cmp
adc
inc
mov
add
loopne
sub
cmp
or
sbb
xchg
push
cmp
xchg
adc
and
sbb
insb
testb
xor
sub
sub
mov
xor
mov
aad
dec
jb
cmp
push
dec
lahf
inc
adc
andl
xchg
popf
push
jp
std
mov
pop
loopne
cmp
dec
ret
cwtl
sub
lods
jo
pop
mov
cmp
push
rcrb
cwtl
inc
xchg
xchg
jno
cmp
push
dec
arpl
enter
cmp
cmpsb
mov
rol
repz
popa
sub
pop
fadds
cmp
mov
jecxz
fsubrs
mov
mov
add
cli
jbe
cmp
icebp
scas
mov
test
aam
out
mov
cmp
inc
repnz
sub
lea
xchg
xchg
mov
push
mov
add
jge
jg
mov
popf
add
push
pop
xor
imul
fdivr
js
aam
jmp
popl
dec
rolb
fidivs
out
js
and
rorb
stc
jle
fisttps
and
push
pop
insb
ljmp
nop
xchg
ja
add
or
adc
mov
mov
repnz
xchg
nop
int
lcall
stc
xchg
and
pop
xchg
and
repnz
lret
pusha
cmp
popa
xchg
scas
addr16
cmp
mov
or
inc
jne
pop
add
cmp
scas
cmp
push
jg
je
jp
cmp
inc
lds
pop
iret
test
sbbl
cmp
cmp
js
popa
mov
jae
sub
push
push
int
das
dec
hlt
mov
loopne,pn
test
mov
and
decl
cmp
movsb
cmp
and
mov
rcr
pusha
scas
mov
and
das
jne
push
cmp
icebp
and
push
push
loope
iret
cmp
cwtl
jns
jg
fmuls
jmp
cmp
pop
pop
mov
pop
or
mov
mov
sub
xchg
inc
cmpsb
test
jle
adc
scas
cmp
outsl
in
and
mulb
stos
add
cmp
test
cmp
mov
add
mov
mov
outsb
int
fnstsw
jno
mov
and
adc
sbb
xchg
insb
or
cmp
cmp
inc
pop
mov
cwtl
pop
pop
std
mov
xor
mov
test
repnz
xor
and
bnd
push
clc
mov
xlat
push
jo
inc
adc
xor
mov
inc
jmp
ds
or
push
je
inc
cmp
and
divb
sub
stc
xor
lahf
imul
cmp
out
mov
stos
mov
ds
sbb
call
sbb
dec
cmp
and
fistpll
xor
jbe
jne
incb
icebp
cmp
and
push
mov
sub
movsl
adc
add
push
add
xor
cmpsb
push
lret
cmp
xchg
movsl
add
fdivrs
sbb
test
xchg
or
dec
add
push
js
xor
das
push
cmp
test
and
and
xchg
inc
xor
or
cmp
sub
or
dec
stc
sbb
scas
xor
stos
pop
ljmp
pop
je
adc
jp
or
in
sbb
pop
negb
fscale
sarb
shlb
mov
loope
cmp
sahf
push
xor
cwtl
mov
adc
daa
mov
jbe
ljmp
inc
xor
nop
cmp
icebp
push
jle
mov
mov
sbb
mov
incb
shlb
mov
inc
cmpb
pop
cmp
imull
and
add
sbb
loopne
inc
ret
xor
bound
fisubl
int
clc
mov
std
mov
mov
inc
js
dec
jb
jbe
jae
xor
pop
adc
mov
fisubrl
sub
mov
test
iret
sub
pop
test
xor
jecxz
cmp
jbe
push
cmp
mov
imul
xlat
lret
rol
fcomps
inc
xor
mov
cmp
ljmp
push
xor
aaa
sbb
orl
or
rorb
push
adc
les
nop
scas
cmp
pop
cmpb
cmpsl
jmp
jns
loope
enter
pusha
mov
push
std
ja
fcoms
push
enter
filds
repz
xchg
mov
sub
add
stc
jbe
dec
shlb
cli
dec
pop
cmp
push
adc
fisttps
into
insb
cmp
sbb
sbb
jmp
mov
mov
cmpl
inc
pop
dec
sbb
std
jg
lcall
push
adc
push
mov
and
jp
adc
lret
inc
cmp
mov
push
and
mov
mov
shlb
xchg
inc
and
or
aad
xor
jmp
push
sti
pop
cli
and
cwtl
int3
sarb
cs
xlat
sbb
push
jae
cwtl
lods
loop
subl
xchg
test
cmp
ss
sahf
mov
mov
int3
sarb
ljmp
jne
jbe
in
pop
and
mov
loop
sbb
xor
cmpl
and
sbb
or
add
not
and
jg
int3
and
sbb
imul
xchg
inc
push
pop
sub
bnd
add
xchg
js
pusha
push
adc
adc
daa
xchg
repz
push
cmp
jno
lods
ljmp
call
or
cs
cmp
stos
imul
mov
sub
in
in
xor
stc
pop
js
out
nop
sub
in
mov
sbb
mov
cmp
sub
sub
or
jne
push
ljmp
pushf
sbb
mov
sub
in
sbb
and
cmp
out
jmp
les
xor
xlat
xor
in
imul
mov
movsb
cwtl
pop
xchg
xchg
cmp
sbb
out
xor
test
arpl
cmp
push
sub
cmp
mov
aad
dec
xor
stos
sbb
movsb
inc
xor
hlt
push
cmp
jle
cltd
fs
xor
cmpl
push
inc
xor
and
jl
popl
cmp
xchg
dec
cmp
mov
jae
mov
adc
sbb
xor
cmp
in
ficoms
idiv
inc
adc
jle
push
jae
or
cmp
push
stos
xor
xor
ret
mov
xor
ss
push
jge
xlat
xchg
cmp
dec
js
adc
inc
mov
push
push
sub
dec
sbb
xor
pop
lret
pop
stos
ja
push
push
push
popf
jne
mov
rcl
pop
movsl
loopne
xor
addr16
and
stc
lods
push
sub
mov
js
mov
aad
insl
cmp
sahf
mov
stos
dec
loope
popf
pop
adc
mov
mov
xor
inc
pop
sub
or
pop
lcall
xchg
cmp
jo
xor
push
test
cmp
js
imul
aaa
je
fsubr
inc
outsl
loopne
xor
ljmp
lock
imul
sbb
sub
fs
hlt
sbbb
das
jo
loopne
mov
pushl
sbb
aas
cmp
add
aam
sbb
cmp
jne
push
adc
xlat
cmp
mov
xor
fdivrs
stos
xchg
push
cmc
lock
ss
sbb
arpl
adc
leave
insl
jne
test
dec
xchg
pop
lds
sub
into
js
out
cmp
push
aam
xchg
pop
cmp
jae
popf
push
push
scas
inc
shlb
add
sub
cmp
ficoml
xor
xorb
dec
mov
sub
mov
lea
ljmp
scas
xor
cmp
testl
fcomps
xor
jbe
mov
jo
sub
icebp
jne
inc
lret
pop
outsb
xor
mov
aas
and
add
outsb
mov
aaa
pop
cmp
jb
movb
test
dec
cmp
pop
aad
xor
pop
push
addr16
pop
and
stc
cmp
test
lds
shll
and
lods
cmp
dec
inc
je
mov
cmp
mov
jmp
inc
push
jbe
cmovo
sub
push
pop
lea
aaa
mov
mov
cmp
push
test
loopne
js
add
mov
or
frstor
pop
and
fsubrl
pushf
dec
add
cmp
cmp
mov
mov
mov
cmp
xor
mov
xor
sub
sbb
inc
push
sub
xchg
cmp
scas
outsl
mull
mov
inc
mov
mov
and
enter
push
daa
movsb
and
lret
mov
xor
sbb
enter
xor
xor
out
cmp
es
rcr
and
xor
and
out
and
fidivl
adc
je
orb
lds
cwtl
xor
out
ss
aaa
movsl
xor
dec
jae
and
xor
sub
pushf
loopne
mov
push
adc
sbb
inc
xor
fimuls
cmp
adc
add
inc
jnp
push
sub
sti
repnz
cmp
shrl
jae
call
in
subb
and
mov
jmp
inc
arpl
cmp
icebp
or
mov
mov
mov
rclb
repz
cmp
mov
cmp
cmp
aad
push
gs
cmpsb
pop
mov
cmp
les
sbb
test
int3
out
sub
icebp
jle
adc
pop
xor
xchg
xorb
int3
nop
pusha
fiadds
add
mov
cmp
icebp
lds
mov
jne
and
jns
ss
xor
cmp
add
mov
ja
movsb
push
dec
inc
repz
gs
jno
pop
mov
ss
hlt
aaa
out
test
stos
mov
cmp
add
setl
out
push
aaa
mov
jno
mov
dec
outsb
sub
cmpsl
and
popf
sbb
mov
mov
and
clc
cmp
jo
mov
cltd
adc
out
outsb
mov
jae
push
mov
in
xor
push
js
pop
scas
push
cmp
add
mov
mov
cmp
sbb
pop
shlb
add
push
mov
adc
inc
fldenv
cmpl
pop
adc
push
cmp
push
adc
scas
xor
mov
mov
adc
sti
xor
lock
insl
dec
mov
popa
jle
inc
jecxz
fstpt
xor
or
rcrb
cwtl
xor
sbb
aad
dec
xor
xor
int
mov
clc
cmp
inc
sub
imul
jle
aaa
je
xchg
sarb
enter
add
xor
or
repz
insb
xchg
sahf
push
push
test
inc
mov
test
fcmovu
scas
push
js
aaa
inc
push
and
adc
mov
cmp
and
mov
pop
jne
mov
cmp
jle
icebp
add
xchg
add
xchg
ficoml
xchg
and
mov
jne
xchg
cmp
push
test
call
and
xchg
mov
xor
insb
orb
jae
arpl
loope
cmp
outsl
xor
push
and
mov
jg
or
dec
xor
adc
or
shrl
out
test
and
cmp
adc
testb
jmp
sbb
cltd
sbb
jo
jbe
sbb
adc
inc
cmp
pop
in
movsl
xor
fsubr
push
push
mov
aam
mov
not
cmp
jne
cmp
adc
dec
jno
cmp
adc
rcrb
mov
mov
sub
adc
ss
pop
xor
pop
jecxz
xor
les
sub
jnp
stos
cmp
and
adc
xchg
mov
sbb
mov
sub
stos
addr16
daa
adc
das
pop
test
cmc
xchg
inc
mov
roll
nop
movsl
or
jmp
jno
aaa
mov
cmp
or
imul
dec
fdiv
sarl
icebp
pop
xor
xchg
int
jae
mov
enter
mov
cld
and
ret
mov
and
cltd
stos
lret
push
cwtl
xor
mov
stc
popa
add
in
mov
cmpsb
cmp
xor
mov
cmp
push
and
dec
push
xor
lock
loope
fnstcw
or
xchg
inc
jo
sbb
rdpmc
aaa
push
dec
in
mov
push
cltd
xchg
loopne
xorb
inc
pop
and
inc
push
add
daa
push
test
jmp
lahf
adc
ds
shl
xor
adc
and
push
ss
cwtl
cmp
xor
fdivrs
dec
xor
jno
inc
push
xor
sub
mov
mov
std
hlt
adc
add
lcall
cmp
test
mov
xor
and
movsb
xor
sub
jo
test
cwtl
out
and
push
and
pop
fs
add
mov
pop
in
and
mov
cmp
or
cmp
cmp
mov
cmp
add
fsubrs
inc
mov
sbb
mov
arpl
inc
add
cmp
cmp
mov
stos
and
xchg
lea
xchg
mov
cs
mov
jbe
sbb
lret
pop
outsl
cmp
add
adc
negb
mov
es
sti
cmp
arpl
jle
xchg
cmp
add
or
xchg
push
add
adc
pop
mov
mov
stc
call
xor
xlat
cmp
test
adc
daa
add
cwtl
pop
repnz
divl
and
cmpsl
push
cmp
dec
rolb
in
dec
xor
jg
xor
cmpsl
cmp
mov
mov
jo
je
and
mov
popf
dec
jle
lds
lea
or
sbb
mov
pop
mov
and
xor
dec
sub
xor
imul
mov
or
ficoms
add
cmpsb
les
pushf
cmp
or
cmp
adc
call
outsb
cmp
jmp
sub
cmp
outsb
inc
cmp
pop
leave
addr16
mov
int
sahf
add
scas
insb
pop
mov
xor
aad
xor
push
mov
xor
gs
mov
jo
outsb
sub
adc
jbe
and
pop
cmp
sub
dec
lods
fsubp
rcrb
pop
cmp
test
inc
movsl
mov
les
mov
sahf
aaa
testl
sub
cmp
repnz
cmp
xchg
cwtl
out
daa
mov
sbb
sub
pop
cltd
xor
xor
mov
hlt
ss
fldenv
dec
scas
add
movsl
and
xchg
mov
cmp
mov
clc
dec
add
popa
xor
pop
pop
mov
mov
xchg
les
enter
push
cmp
ss
popa
jbe
cwtl
and
sbb
sub
push
push
mov
frstor
mov
aas
cs
enter
mov
sub
fs
inc
and
clc
dec
adc
push
sbb
pop
fcom
add
mov
cmc
jb
inc
das
insb
and
out
jbe
out
cmp
js
sub
dec
mov
fnsave
ss
cwtl
mov
mov
cmpsl
and
dec
daa
test
add
loope
adc
enter
std
jbe
cwtl
mov
call
out
sub
fsubrs
and
fnstcw
fs
dec
mov
test
jns
pushf
cmp
push
loope
fdivs
aaa
popf
adc
cltd
pop
xor
and
xchg
or
push
cmpl
dec
scas
test
cmpsb
mov
movsl
test
pusha
pop
xor
cmp
sub
xlat
fstl
cmp
push
add
testb
mov
mov
push
imul
addl
adc
enter
or
xchg
pop
dec
push
push
xchg
pop
gs
jno
lcall
xlat
push
mov
push
icebp
jb
ret
repnz
sbb
stc
cmp
or
xor
lcall
int
xor
roll
sub
sub
adc
dec
jmp
shlb
push
pop
ds
xor
and
xchg
test
das
push
cmp
cmp
sbb
mov
push
ss
push
sbb
iret
adc
or
data16
xor
cmp
or
out
add
rcl
std
jg
xchg
aas
dec
je
xor
sbb
dec
sbb
pop
xor
icebp
pop
mov
pop
add
push
mov
add
or
insb
mov
test
negb
mov
lea
gs
xchg
ja
jns
inc
inc
fimuls
cmp
pop
jbe
and
xor
call
and
and
mov
inc
or
mov
insb
inc
mov
mov
cmc
rclb
adcl
xor
scas
xchg
icebp
shrl
adc
xchg
jbe
add
bound
cmp
push
aaa
cmp
cmp
pop
pop
adc
push
cmp
shrl
pop
dec
icebp
mov
add
mov
aaa
inc
enter
addr16
push
or
mov
popa
andl
mov
out
sub
and
sbb
adc
pop
add
js
jo
pop
cmp
jno
pusha
pop
xor
fdivrs
and
inc
enter
cmp
mov
test
ror
ljmp
cmp
jbe
aaa
leave
jno
hlt
arpl
xor
stc
sub
pop
or
mov
mov
icebp
sbb
adc
adc
xor
fptan
hlt
xor
or
ss
test
clc
jae
dec
push
xor
push
jl
iret
push
inc
pop
inc
xchg
cmp
mov
sarb
mov
sub
repnz
inc
lret
pusha
xor
jne
adc
add
mov
stc
mov
mov
jae
negb
cmp
in
stc
mov
mov
dec
cmpsb
cwtl
clc
adc
cwtl
icebp
fdivrl
mov
jg
mov
enter
cmp
push
mov
dec
mov
pusha
mov
gs
lods
inc
mov
ss
fimull
leave
cmp
popl
pop
out
mov
cmp
cmp
or
fdiv
jmp
pusha
and
ss
in
and
cltd
cmp
push
jl
scas
dec
xor
cmp
push
ficompl
or
mov
sub
hlt
js
adc
and
xchg
cs
inc
cmp
add
shrb
mov
pop
xchg
pop
or
ss
das
adc
sbb
jge
xor
je
cmp
and
dec
push
mov
call
sbb
lods
mov
inc
aam
mov
pop
xor
and
in
fcmovb
and
cmp
mov
sahf
mov
xchg
sbb
and
xchg
mov
mov
jne
xor
jle
shlb
je
xor
mov
and
leave
repnz
xchg
sub
cmp
and
xchg
mov
stc
xor
cmp
jo
pop
cmp
outsb
sbb
inc
fsub
je
mov
rclb
xorb
out
fnstcw
cmc
mov
popf
fcoms
or
cmp
sub
cmp
push
imul
ja
test
cmp
cli
cmp
imul
repnz
mov
pop
out
int
sbb
std
fnstsw
sub
js
jne
or
icebp
add
xor
push
rclb
xchg
cmpsb
shll
dec
loopne
push
out
and
pop
test
xor
out
adc
jo
pop
mov
jp
enter
adcl
xchg
cmp
repnz
jp
mov
push
cltd
nop
cmp
divl
insl
scas
or
movsl
cmp
adc
jne
fdivr
cmp
out
mulb
dec
scas
fldcw
inc
repnz
mov
daa
xchg
cmp
mov
jbe
shrb
test
mov
mov
std
cmp
ja
scas
movl
cmp
call
xchg
cmp
out
push
push
lds
addr16
ss
dec
dec
lea
dec
mov
mov
sub
push
xor
sub
lret
lahf
mov
lock
adc
cmpb
loopne
test
and
lds
cmp
push
mov
rorl
and
stos
xchg
repnz
xchg
jns
test
sub
jmp
xor
and
adcb
dec
mov
push
ror
out
mov
fildll
repz
lock
out
cmp
xchg
sbb
cmp
lahf
js
popf
icebp
and
iret
pop
popa
pop
jne
dec
cmp
xor
mov
andb
cmp
push
cmpsb
sub
shl
lds
adc
xor
jns
and
or
enter
inc
inc
pop
jg
rorl
mov
jbe
inc
cmp
pop
sahf
cmp
jbe
stc
fnsave
cmp
lods
lods
cltd
lock
mov
shrb
aaa
stc
and
inc
push
dec
out
jae
cmp
inc
jp
lock
xor
ja
jbe
push
std
sub
push
or
loop
pop
cs
cmp
mov
mov
adc
loopne
fnstcw
push
xor
lahf
ss
movsl
pop
cmp
je
mov
jbe
hlt
aad
ljmp
push
adc
jmp
inc
sub
jmp
pop
jbe
adc
adc
cwtl
sub
xlat
shrb
xor
mov
jbe
cmc
stos
iret
rcl
enter
xor
sbb
cmp
pusha
dec
test
and
jns
loopne
mov
cmp
fnstenv
xor
push
fsubl
xor
mov
test
jmp
sub
clc
pop
mov
in
divb
nop
push
mov
and
out
cmp
cmc
mov
cmpsl
jb
test
call
aaa
lahf
mov
loop
sub
in
les
or
xlat
pusha
inc
or
cmp
mov
scas
cmp
cmp
ret
ret
sub
mov
and
mov
push
jecxz
addl
or
dec
aaa
cmp
inc
sub
and
mov
testl
mov
sbb
adc
inc
push
mov
jecxz
sarb
lock
mov
shlb
mov
outsl
sbb
int3
xchg
and
loope
leave
and
mov
rorl
cmp
es
xor
popa
stos
add
clc
sbb
lock
movsb
dec
push
scas
pop
sbb
pop
xchg
push
fsubrs
sbb
push
adc
sub
xor
adc
cmp
aam
pop
sub
and
ret
inc
xchg
fdivs
and
je
cmpsb
out
repnz
cmp
ljmp
ds
mov
sbbl
das
scas
int
mov
mov
cmp
mov
loopne
idivb
out
and
and
sahf
cltd
scas
cmp
dec
mov
mov
and
sbb
ss
aad
bound
inc
adc
lahf
sbb
xor
xchg
add
sbb
push
idivb
stc
push
mov
test
addr16
testb
mov
jge
dec
ss
adc
jae
mov
test
dec
or
add
or
loope
popa
jns
js
and
jg
int3
outsb
scas
cmp
dec
push
rcrb
and
stos
xchg
lods
cmpsb
fcoms
push
dec
mov
test
xchg
data16
and
sub
mov
jo
cmp
and
je
push
pop
imul
pusha
push
cmp
pop
jo
adc
es
cmp
scas
sbb
fadds
or
cltd
mov
xor
mov
mov
push
cmp
mov
sbb
or
and
push
je
jo
fistps
loope
mov
out
cmp
je
cmpb
inc
push
adc
add
push
push
fld
lcall
sti
or
jno
add
cmp
addr16
xor
adc
imul
mov
mov
outsl
mov
mov
cmp
lahf
xchg
push
test
adc
and
lret
aam
outsb
lods
out
xor
fs
aaa
cmp
push
mov
rolb
push
and
xor
xor
sub
ret
pop
cmp
push
push
test
mov
addr16
xchg
mov
jb
pop
jbe
xor
mov
arpl
lea
jns
out
mov
es
cmp
mov
push
roll
cmp
adc
or
imul
rorb
js
push
xor
push
xchg
cmp
xor
inc
cmp
call
lock
cmp
and
and
js
cmp
pop
adc
and
repz
dec
sbb
xor
xchg
sahf
pop
rcr
fs
cmp
int
cmp
call
and
pusha
test
jp
cmp
mov
popl
inc
cmp
pop
dec
push
cmp
arpl
scas
push
jge
sar
xor
loop
shr
fbld
popa
add
cwtl
cmp
mov
push
sub
imul
mov
cmpb
sub
sbb
xor
jb
mov
pop
mov
sbb
sub
dec
mov
mov
push
dec
lods
jae
aad
adc
inc
inc
sbb
push
lods
mov
xor
cmp
int3
push
jno
rcll
mov
sub
mov
cmp
es
pop
adc
cmp
and
movsl
cmp
sbb
push
sbb
loopne
cmp
clc
mov
cmp
scas
rcrb
inc
out
xor
cmp
aam
rolb
das
jb
sub
and
cmp
out
push
adc
scas
mov
repnz
and
dec
scas
cmp
dec
cmp
fldl
popf
das
dec
push
xor
cmp
ficomps
stc
lahf
push
xor
test
fs
das
ss
sbb
mov
sahf
and
sar
dec
popf
mov
adc
xchg
push
lret
mov
popa
std
ret
icebp
out
leave
sbb
mov
lret
pop
sbb
and
scas
xor
sbb
pop
lret
jo
xchg
dec
pop
pusha
movb
mov
cmp
push
outsl
pop
pop
sbb
cmp
lds
xor
lahf
cmc
cmp
cmp
in
pop
icebp
or
arpl
or
scas
adc
loope
cmpsl
adc
sub
cmp
stos
enter
clc
adc
xchg
imul
mov
mov
pusha
mov
aas
cmp
lea
shll
cmp
cwtl
into
xor
mov
inc
xor
mov
sbb
add
cmp
xchg
mov
pop
sarb
popf
mov
mov
cmp
xlat
mov
add
mov
jle
and
addl
dec
dec
cmp
adc
mov
stos
in
js
pop
sub
pushf
into
adc
icebp
sub
or
divb
push
adc
test
xor
push
jmp
cwtl
out
js
dec
cmp
mov
push
push
mov
icebp
dec
xor
shrb
ja
or
inc
xlat
inc
xor
xchg
loopne
xchg
add
enter
xor
mov
jecxz
lods
cmp
dec
xchg
push
cs
cmp
dec
push
cmpsb
call
pusha
mov
sub
sub
test
bswap
cmp
loope
aaa
mov
scas
stc
mov
dec
mov
jb
add
mov
enter
xor
scas
dec
aaa
rolb
loope
sbb
add
fxam
xchg
jp
orl
sbb
sub
fnstsw
mov
iret
inc
rcrb
lea
cmp
pop
mov
or
fnstsw
push
outsl
push
mov
fcomip
push
loope
aad
pop
test
push
xor
push
pusha
jb
in
ret
aas
cmp
sbb
and
std
fiaddl
lahf
mov
mov
jno
arpl
sbb
cmp
dec
js
adc
jns
std
pop
mov
push
dec
jge
loope
or
pop
andb
aaa
jmp
cmp
fcoms
outsl
mov
dec
out
fdivrl
pop
fidivl
test
inc
pop
dec
mov
xor
dec
push
cmp
std
xor
mov
fdivl
repz
xchg
sarb
das
aaa
inc
mov
sbb
aas
xchg
sbb
sar
loopne
cmp
rcll
dec
sub
jbe
xor
dec
cmp
adc
je
jb
addr16
mov
sub
adc
xlat
idivl
jns
jb
in
ja
dec
fdivs
or
mov
push
and
mov
and
mov
popl
mov
add
xor
dec
aaa
ror
dec
and
sbb
or
cmpsb
jne
dec
xchg
xor
ds
mov
loopne
hlt
push
jg
cmp
adc
jge
mov
repnz
cmc
fcmovne
outsl
sub
repz
repnz
add
in
jle
pop
call
lret
cmpb
xchg
ljmp
inc
adc
or
jle
pop
sarb
cmpsl
movsl
cmp
adc
sbb
mov
xor
xor
imul
dec
xor
push
xor
push
shll
adc
or
cli
xchg
lods
push
call
dec
adc
shrb
xchg
push
pop
push
imul
cmc
je
adc
adc
rcr
sti
jmp
shrb
cltd
jbe
xor
mov
pusha
stc
adc
push
xor
shlb
les
shrb
idivl
repnz
sub
out
cmp
call
int3
out
push
into
push
mov
test
sahf
xor
push
pushf
add
repnz
add
mov
mov
push
pusha
pop
dec
cmpsl
mov
into
adc
push
jbe
fs
push
rcl
stc
test
rcrl
jae
or
sarb
loopne
or
repz
js
cmp
dec
hlt
ja
pop
add
jo
sbb
in
in
filds
pop
js
shl
cmp
test
repnz
sub
mov
lea
jge
fxch
cmp
cmp
or
sub
stc
movsl
sub
loope
rcrb
cmp
sti
adc
inc
out
cmp
call
fisttps
sti
inc
push
mov
jae
negb
sub
xchg
add
cmp
add
fidivs
xor
mov
lcall
jns
push
cmp
mov
repz
pop
insb
mov
xchg
jmp
add
pop
dec
mov
pop
jle
je
scas
aas
js
cmpsb
in
sub
or
sub
add
pop
xor
mov
sbb
jnp
adc
lds
sbb
aad
mov
cmp
mov
sub
cmp
negb
cmp
jne
cmp
sbb
push
sarb
fnclex
icebp
mov
and
cmp
push
add
fbstp
push
outsl
jmp
sub
adc
cwtl
mov
les
rorb
dec
jmp
jae
shll
jp
imul
mov
or
add
cmp
divps
fidivs
imul
push
xor
repz
rorl
rcll
cmp
js
inc
or
clc
das
jbe
pop
fidivrs
rcl
sbb
arpl
dec
sbb
mov
xchg
pop
add
pop
cmp
mov
sbb
subb
cwtl
sbb
inc
sub
loope
jl
inc
xchg
inc
scas
jae
xor
test
cmp
pusha
inc
pop
dec
xchg
cmp
fimull
sub
sbb
add
adc
add
pop
incl
and
xor
xor
push
mov
shlb
and
xchg
dec
rclb
inc
mov
aaa
sbb
push
pop
fmul
mov
xor
sbb
loopne
xchg
push
mov
cmp
mov
inc
into
inc
and
xor
shrb
add
nop
adc
pop
fdivrp
mov
mov
sub
adc
inc
shrl
sbb
rcrl
xchg
inc
shlb
ss
and
cmp
dec
dec
stc
adc
inc
xchg
and
loopne
lret
xor
fldcw
mov
sub
rclb
inc
test
dec
jecxz
imul
jbe
js
cmp
mov
xlat
add
stos
push
sbb
and
sbb
pop
xor
and
adc
mov
pop
sahf
xchg
push
mov
sbb
push
and
stc
shr
je
xor
mov
ljmp
mov
pushf
xor
dec
scas
xor
add
idivl
cmp
cmp
test
cmpsb
ds
push
cmp
les
pop
mov
sub
pop
dec
dec
xor
fisttps
mov
sarb
ret
push
inc
lds
mov
xor
mov
shl
loop
rorb
xchg
scas
adc
sub
cwtl
push
push
jae
xchg
sarb
sbb
stos
cmpl
stos
cmpsl
shrb
push
xor
test
inc
ficompl
mov
std
rclb
mov
mov
pop
xor
insl
es
jo
inc
jp
push
pop
mov
pusha
mov
lds
das
cmp
pop
or
push
sbb
dec
std
mov
xor
cmp
stc
mov
andl
leave
mov
xor
inc
pop
mov
sarb
push
dec
mov
inc
lods
jnp
popl
repz
andl
scas
clc
bound
mov
jb
push
aas
sti
inc
pop
sbb
sar
mov
arpl
nop
roll
ljmp
leave
xor
mov
jns
cmp
shlb
sbbb
stc
cmp
mov
in
xor
inc
repz
add
jg
test
and
jae
stc
ret
repz
add
adc
jb
xchg
cmp
push
mov
cmp
mov
fidivl
pop
cmp
sub
sarb
pop
in
test
dec
jge
mov
sarl
mov
icebp
mov
aaa
cli
push
cmp
dec
adc
xor
jmp
push
xor
pop
cmp
cmp
jnp
popf
fdivrs
pop
xchg
ss
imul
inc
push
sarb
in
idivb
mov
aad
sbb
cmc
pusha
push
xchg
enter
ss
push
jnp
dec
jg
cmp
pushf
sub
imul
push
divl
jb
fs
das
jp
leave
inc
jns
lret
sub
rcr
jno
xor
cmp
mov
xchg
mov
repnz
dec
xor
xor
jp
pop
out
xchg
sbb
test
or
idivb
cmp
mov
and
and
cmpsb
add
xchg
movsb
mov
pop
repz
or
add
arpl
loope
ds
pop
loopne
cld
jae
sarl
test
mov
lods
rorb
jns
mov
testb
adc
les
cmp
add
ljmp
dec
inc
repz
testl
fdivrs
rorb
inc
divl
pop
sub
shll
adc
mov
xor
enter
ljmp
cmp
sub
jno
sarl
cmp
pop
mov
and
pusha
sub
lock
into
and
jle
pop
rcrl
push
les
push
repnz
inc
cmp
loopne
mov
pop
test
std
ss
pop
aad
sbb
xor
pop
add
fsts
mov
push
inc
mov
cmp
pop
int
mov
mov
pusha
mov
pop
push
jmp
imull
js
xor
das
scas
xor
cs
pushf
mov
lods
idiv
ss
popf
aas
fnsave
mov
inc
lahf
pop
cmp
movsl
adc
out
xchg
lret
push
loope
fmul
nop
xor
xor
cmp
lds
je
movsb
mov
fildl
mov
xor
mov
ss
hlt
pushf
xor
sub
loopne
cmc
jns
add
jb
imul
dec
sub
ret
xchg
xor
cmp
cmp
incb
xchg
pop
mov
cmp
ljmp
movzbl
pop
and
filds
push
mov
pop
mov
sarb
pop
ffreep
mov
cmp
fbld
adc
sahf
rcll
ljmp
xor
cmpb
sub
mov
mov
sub
popf
xor
push
cmp
mov
popa
cmp
mov
adc
fsubl
into
xor
into
adcl
xor
xor
adcb
cmp
popf
fmull
mov
dec
push
inc
lods
sub
mov
iret
lahf
cmp
mov
outsb
imull
mov
loopne
xor
pop
mov
les
mov
add
adc
add
pop
xor
pop
fldl
sbb
mov
sbb
aaa
fdivl
xor
mov
sti
jge
sub
jb
sub
dec
adc
push
ds
icebp
and
daa
xor
sub
lret
adcb
push
repnz
or
inc
xorb
sbb
shlb
rcll
cmp
int
lret
push
jge
mov
fistpll
mov
xor
xor
jp
movsb
fisubrl
popa
inc
mov
or
pusha
lret
add
pop
and
xchg
mov
cmc
mov
rol
adc
cmpsb
and
dec
test
fstps
ds
add
jo
bound
cmpsb
push
pop
add
pop
test
rorb
aas
xor
jnp
inc
hlt
sub
mov
cmpsl
mov
loope
cwtl
or
shlb
sbb
sub
sarl
aaa
fadds
ror
sarb
cs
and
adc
fldcw
add
sub
popa
pop
mov
sarb
xchg
push
orl
mov
ror
shll
jns
adc
push
pushl
outsb
xor
adc
sub
mov
cmpsb
sub
sahf
xchg
mov
xor
cmp
out
ds
adc
cmp
inc
fcomp
mov
inc
fnstenv
shrl
cmp
cmpsb
sbb
cmpsl
mov
sldt
and
jb
mov
outsb
jle
mov
addr16
fimuls
lock
push
inc
jo
inc
aas
inc
pop
cmp
mov
sub
or
lock
notl
mov
out
and
cmpsl
mov
mov
sub
and
inc
add
sbb
fcoms
or
add
and
je
mov
jo
inc
cmp
mov
lods
movsb
pushf
rclb
in
repnz
inc
in
mov
lds
les
sub
mov
adc
add
jne
test
rol
icebp
out
adc
pop
push
add
xor
inc
cmp
add
xchg
lea
sub
shr
mov
in
nop
aad
fmul
adc
mov
shrl
and
loopne
xor
cmpsb
or
fidivrs
fwait
sbb
jb
sbb
loopne
je
jb
pop
push
xor
test
push
mov
idivb
add
push
mov
sub
cltd
jb
subb
cli
aas
in
sbb
repnz
add
shlb
clc
cmp
xor
and
and
sarb
add
jnp
jae
sub
imul
xchg
pop
rcll
dec
add
adcb
mov
cli
loop
cli
mov
add
mov
sti
daa
pop
xor
jecxz
dec
sub
or
ret
je
adc
cmp
adc
mov
mov
call
aaa
sbb
sbb
cmp
rorl
mov
test
ss
nop
mov
adc
sbb
aam
pop
adc
imulb
jg
scas
or
jmp
pop
xchg
dec
push
or
push
adc
fsqrt
mov
jmp
cmp
stc
icebp
jmp
pop
mov
in
xor
mov
scas
cmpsb
sbb
jb
inc
adc
fs
out
inc
mov
fdivrp
scas
push
sahf
sbb
jl
or
jl
out
pop
outsb
jl
pop
into
cmp
mov
mov
inc
aaa
ret
fs
pop
and
addr16
sub
sub
fwait
in
pop
inc
in
cmp
dec
push
mov
aas
xor
popl
inc
xor
out
add
jbe
sbb
sub
mov
sub
adc
adc
std
movsb
push
pop
sbb
cmp
adc
cmpsb
xchg
jge
fs
mov
mov
pushf
cmp
xor
mov
add
xor
and
in
in
sbb
mov
sub
ret
ret
mov
std
in
jo
in
fstl
or
lcall
add
dec
mov
inc
leave
inc
dec
es
bound
xor
dec
mov
mov
sub
sub
sbb
add
xchg
push
push
inc
sub
shll
orl
outsb
loop
outsl
jae
add
pop
push
push
mov
rorb
mov
stos
mov
fwait
rclb
test
repz
shl
jbe
les
lods
repz
or
cmp
pushf
lock
mov
std
loope
cmp
xor
cmpl
mov
jb
xor
push
sbb
je
xor
das
aaa
je
or
jbe
les
cmp
divb
in
cwtl
add
pop
lock
pop
je
mov
xor
mov
js
pop
or
subb
addr16
or
mov
pop
icebp
xor
xor
xor
lret
bound
jne
cmc
adc
cmp
xor
jae
incb
mov
es
cmp
mov
std
cmpsl
jbe
jle
stc
ret
divl
mov
lods
sub
mov
and
mov
and
ret
add
mov
xor
sbb
jle
mov
pop
mov
mov
mov
xor
mov
ss
xor
jle
pop
test
hlt
test
daa
dec
repz
imulb
mov
shrl
jbe
dec
cmp
sarb
repnz
xor
clc
push
mov
and
cmp
jo
inc
clc
shlb
jbe
mov
repnz
and
push
addr16
jb
mov
add
adc
push
cmp
sbb
mov
shlb
cmp
push
sub
mov
js
sbb
cs
xor
jl
or
mov
adc
or
xor
out
pop
jo
jg
mov
mov
outsl
cmp
popa
push
icebp
out
out
xlat
inc
mov
pop
scas
scas
mov
fsubr
loopne
pushf
insl
arpl
fiaddl
stos
pop
iret
pusha
lock
mov
jns
leave
or
outsb
xchg
mov
xor
pop
pop
test
and
loope
repnz
cmp
jbe
les
lods
sbbl
loopne
or
push
fnstenv
pushl
jae
negl
mov
ret
jle
je
ss
sbb
dec
hlt
cmp
xor
subb
repnz
push
stc
jne
sbb
push
ss
rep
ss
negl
xchg
sbb
dec
mov
loope
sar
xor
mov
sub
xor
hlt
xchg
jecxz
fdivrs
dec
daa
ret
frstor
cmp
adc
dec
jbe
mov
push
mov
jns
inc
es
dec
lahf
pop
xchg
push
xor
pop
repnz
adc
mov
ss
mov
int3
push
outsl
shlb
or
add
push
movsl
psubusw
fadds
enter
in
inc
js
mov
xor
jo
sub
pusha
sub
push
sub
sub
movsl
lds
test
jb
jns
imul
xor
stc
das
fistpll
mov
add
dec
js
mov
dec
or
ret
iret
cmp
pusha
jo
loopne
pop
neg
jmp
xchg
cmpsl
das
xchg
jmp
pop
out
lahf
cs
outsl
dec
jmp
jecxz
mov
aad
inc
add
mov
pop
andb
mov
mov
sahf
pop
fbld
fimuls
outsb
push
fcmovb
mov
inc
dec
xchg
push
xchg
cmpsl
mov
jg
lret
aas
lock
cmp
push
push
inc
push
pop
xchg
test
sbb
jo
movzbl
lret
fidivs
jge
dec
inc
arpl
rcrl
jae
roll
xor
fistpl
and
clc
dec
pop
push
jb
mov
std
xchg
aas
jo
xor
push
cmp
ja
sbb
jbe
inc
pop
pop
push
pusha
xchg
mov
es
cmp
rcrl
mov
popf
mov
mov
push
outsl
push
in
inc
pop
jno
or
ret
clc
push
cwtl
das
cmpsb
rorl
pop
outsl
xchg
add
cld
mov
fldpi
pop
cwtl
aas
inc
and
cmp
pop
push
ljmp
seta
out
xchg
out
mov
cmpsl
adc
flds
hlt
sub
lahf
inc
pop
cmp
or
fldt
xor
and
je
dec
push
xor
inc
push
pop
pusha
sahf
shll
push
popa
or
popl
sbb
testl
push
orb
xlat
sub
add
mov
lea
and
inc
mov
push
lret
popf
lods
inc
mov
xchg
popa
xor
inc
ljmp
cmp
dec
or
mov
xchg
pmovmskb
and
inc
pop
xor
jge
pop
loopne
add
pop
push
inc
lahf
cmp
fstpt
outsl
das
mov
repz
roll
sar
push
inc
or
sbb
and
mov
lret
das
icebp
or
fiadds
add
dec
inc
xor
cmp
test
xchg
mov
xor
ja
in
pop
mov
push
clc
mov
dec
mov
cmp
mov
lret
xchg
dec
ds
push
and
push
ret
pushf
cmp
int
add
shll
pop
andb
jp
jl
sarb
push
push
sbb
sub
mov
cmp
loope
ror
mov
insl
mov
mov
push
pop
dec
das
lahf
pop
and
pop
push
sub
popf
repz
int3
cmp
fimull
add
mov
pop
fsubrs
adc
sub
cmpsl
pop
push
jbe
std
mov
js
into
xchg
xchg
cmp
xchg
pop
push
movsl
xchg
mov
mov
testb
aas
stc
xor
xchg
sbb
pop
inc
cmp
sahf
sub
ljmp
and
mov
mov
ss
push
xor
xorb
push
in
dec
popf
xor
xchg
enter
and
ret
xchg
outsb
sbb
sub
pusha
aaa
cmc
pshufw
xor
xchg
sbb
xchg
fistpl
fsubrs
sbb
ror
fsts
xor
xor
mov
ds
pusha
xor
add
testl
push
add
jmp
cmp
test
mov
jge
pusha
cmpsl
cwtl
dec
add
cmp
adc
vpshlq
cmp
dec
lahf
mov
push
sub
xor
jbe
push
sub
jo
push
movsl
mov
cmp
mov
jns
fisubrs
sub
stc
int
dec
and
ret
and
out
rcr
xchg
xor
lret
pop
ds
subl
xchg
push
mov
jl
jmp
inc
out
cmp
lret
lods
add
addr16
mov
and
mov
popa
mov
sbb
cltd
cmp
and
gs
mov
jo
and
loope
xor
xor
in
cmp
imul
sbb
dec
sti
loope
ljmp
repz
lods
jmp
inc
xor
xor
popf
or
jg
out
mov
cmp
shr
shrl
inc
adc
cmp
cld
arpl
mov
adc
mov
mov
mov
mov
les
addl
nop
gs
repnz
pop
mov
push
fdivr
sbb
jp
mov
les
or
addl
mov
xor
andb
cmp
ret
jmp
sbb
inc
aas
mov
and
popf
imul
pop
xor
repz
jge
orl
mov
xor
int
mov
loope
sarb
xor
rol
aas
adc
adcb
inc
stc
jl
leave
les
xor
lea
sub
pushf
ss
ret
cld
popa
xor
jge
leave
aad
pop
ds
in
imulb
scas
je
icebp
jg
cld
jl
rol
ret
inc
daa
aad
pop
shll
mov
bound
incl
lret
mov
cmp
sbb
mov
sub
push
and
cmp
xor
adc
js
jae
jne
push
mov
aam
push
adc
js
or
xor
and
pop
pop
adc
test
es
cmpsb
cmp
rcl
cmp
enter
je
cmp
mov
stc
fidivrl
sub
aam
arpl
jbe
sbb
imul
ja
imul
aam
inc
jge
mov
in
sub
jne
rorb
mov
cli
mov
xchg
imul
inc
rcl
add
cmp
leave
das
insb
push
add
and
data16
ds
imul
cmp
mov
inc
test
mov
jo
adc
imul
cmp
sub
cmpl
repnz
mov
sub
adc
xor
lds
mov
jae
lahf
jge
mov
loop
pop
fs
nop
mov
fstpt
adc
sahf
cmp
mov
dec
lret
lahf
and
aaa
mov
imul
es
sbb
leave
pop
jge
jbe
mov
xchg
push
cmp
daa
jge
xorl
xor
jle
sti
jg
pop
xchg
inc
sbb
dec
sbb
subl
test
aam
rcrl
icebp
fs
xor
cmpsl
xor
shlb
sub
xchg
pop
lods
hlt
ja
xor
pop
cwtl
aaa
jg
sub
jae,pn
nop
loope
ss
sbb
or
sar
sbbb
dec
divb
sbb
jmp
cmp
ret
sub
or
outsl
mov
shl
popf
push
and
je
cmp
mov
xchg
jg
jns
dec
outsb
je
cmp
xchg
inc
jb
imul
repz
inc
scas
jp
xor
ret
jo
cmp
scas
dec
lcall
pop
rcll
fldl
aaa
fcompl
cltd
imul
and
sbb
mov
xor
scas
dec
pop
mov
cmp
dec
push
fidivl
cmp
adc
ljmp
mov
sbb
sub
lahf
mov
sub
aam
add
jns
cli
jle
ss
mov
ds
add
and
lods
push
mov
push
incl
jo
adc
push
pop
jge
ret
jbe
stos
cmp
cmp
sbb
add
imul
rorl
rolb
movsb
aam
ret
mov
iret
test
lea
cmp
mov
add
test
jb
rorl
xchg
sub
add
jmp
cwtl
xor
mov
ret
das
xor
cmp
pop
mov
shlb
das
aaa
insb
addb
icebp
sahf
jle
stc
or
jns
enter
fstpt
lds
push
sbbb
push
sub
loopne
rcr
arpl
cmp
ret
dec
jge
lret
shll
xor
cli
dec
xchg
imul
cmp
lret
cmp
sbb
adc
pop
loopne
dec
in
cltd
dec
or
out
push
jo
mov
fnsave
lods
enter
xor
or
and
bound
jb
cmpsl
add
cli
add
test
mov
and
add
cmp
stos
pop
aam
sub
push
cmp
arpl
adc
lcall
or
xchg
cmpb
pop
pop
clc
mov
lcall
fcomps
repz
dec
aas
inc
fidivl
inc
popf
rcrl
sbb
mov
fildl
cmp
shlb
cmp
stc
cli
aam
cmp
pop
jecxz
cwtl
dec
xor
or
test
shlb
mov
test
push
inc
dec
mov
jne
pop
or
add
enter
mov
xchg
ret
xchg
cmp
and
xor
mov
xchg
add
mov
repz
xor
add
mov
movsb
sub
inc
std
cmp
mov
cmc
lock
cmp
adc
sti
xorb
adc
add
fidivrs
inc
mov
inc
and
cmp
push
dec
cmp
xlat
cmp
xchg
and
inc
mov
shrl
sub
cs
shrl
cmp
jg
cmc
rcl
inc
xor
loope
mov
cmp
mov
lret
shl
inc
mov
xor
loope
inc
mov
pop
out
cmp
jmp
in
int
filds
shll
fistps
mov
decl
and
lahf
push
fadds
push
jl
shll
push
repnz
xor
and
repnz
scas
xor
sbb
fcmovbe
pop
popf
cmp
inc
push
loope
and
inc
fwait
xor
iret
pop
add
fildl
icebp
mov
and
in
xchg
sbb
addl
incb
cld
stos
fsubl
lret
cmc
push
mov
fisttps
fldcw
in
aad
xor
mov
std
mov
cwtl
jg
push
pop
inc
pusha
lcall
add
addb
ss
mov
cmp
aad
sbb
or
ret
jmp
mov
je
inc
mov
mov
shlb
lret
ret
dec
sbbb
mov
mov
cmp
inc
decb
repnz
mov
add
mov
xor
and
fdivrl
js
cmp
xchg
xchg
sbb
sub
mov
jno
add
inc
cwtl
inc
dec
lcall
cmp
mov
bound
ret
or
or
stos
cmp
pushf
mov
cmp
mov
push
push
jge
sub
ss
lcall
rcrb
cmp
pop
sarl
add
pop
xor
mov
repz
sbb
push
cs
aaa
fwait
pop
iret
pop
sbb
cwtl
cmpsb
mov
cmp
inc
loop
stc
pusha
repz
xchg
stos
add
push
cmp
pop
fildl
stos
stos
loope
cltd
in
fsubs
mov
test
cmp
jae
loope
mov
pop
aaa
ret
jp
pop
lcall
mov
popf
pop
dec
push
je
xor
cmp
xchg
and
jmp
mov
cmp
and
mov
stos
jbe
aad
jae
lock
cmp
sarb
pop
dec
sbb
stos
jae
rolb
hlt
and
inc
in
cmp
jg
cmp
call
mov
push
pop
pusha
jmp
shll
aam
repz
pop
sbb
es
imul
or
sub
movsb
push
clc
imul
cmp
mov
mov
dec
sarb
jns
inc
stos
shr
and
or
sarb
inc
mov
cmp
hlt
cmp
mov
and
sbb
shr
mov
pop
or
mov
rolb
outsb
cmp
enter
imul
and
inc
leave
xor
mov
xchg
js
push
pop
movsl
cltd
xchg
mov
jl
add
and
add
fwait
or
pop
push
xchg
dec
cmp
pop
cmp
popf
movsl
fbld
das
out
aad
mov
cmp
shlb
stc
adc
push
jmp
sbb
fs
or
pop
push
mov
lret
stos
loope
ljmp
mov
pop
rcll
pop
push
loopne
pop
dec
cmp
daa
imul
pop
mov
rcrb
mov
pusha
adc
imul
aam
scas
cmc
sub
daa
sub
cmp
rcl
mov
mov
sbb
xchg
cmp
leave
sti
adc
or
int3
testb
aam
frstor
cmc
mov
cmpsl
sub
add
jae
cli
sahf
roll
xor
and
jmp
jae
mov
mov
iret
cmp
sbb
sti
push
repz
lcall
cmp
mov
inc
inc
cmp
lret
cmp
xchg
adc
imull
mov
pusha
cmpb
lret
ja
mov
and
enter
cmp
push
pop
lds
jmp
mov
insb
inc
frstor
xor
aas
cmp
loop
ljmp
xlat
push
adc
mov
jae
movsb
mov
mov
das
jecxz
xor
clc
cmp
sarb
xchg
sbb
dec
int3
imul
sbb
pop
jae
stos
cmpsb
push
jle
cmp
dec
pop
mov
push
cmp
mov
loopne
imul
inc
pop
xor
cmpl
or
aaa
stc
leave
sbb
fldenv
xor
imul
cmp
enter
xchg
into
xchg
aad
inc
sub
cmp
rorb
pop
loopne
cmp
aam
stos
cmp
push
and
fldt
mov
inc
cwtl
pop
imul
je
and
ficoml
popf
jge
mov
jo
push
xchg
pop
cmp
push
in
sahf
dec
sbb
sarb
xor
mov
cmp
ss
cltd
pop
xor
data16
scas
and
jae
mov
jl
outsb
rorb
jbe,pn
adc
mov
cmp
xor
mov
loope
fcoms
ret
bound
jecxz
sahf
cmp
or
inc
cltd
inc
push
cmp
mov
cli
es
sbb
shrb
lds
jp
jo
jecxz
jo
xchg
lret
std
outsl
jmp
mov
mov
repz
std
jb
or
stc
push
inc
fdivl
mov
sub
xor
push
testl
jg
mov
fnstcw
cmp
mov
outsl
sahf
mov
jae
and
loop
sub
sbb
or
je
mov
ret
rcr
mov
jno
mov
cmp
push
cmp
es
sub
nop
xor
push
mov
sarl
fwait
mov
jbe
push
xor
mov
shrl
sbb
adc
andl
lahf
lods
testb
icebp
mov
xor
add
aaa
push
jae
inc
sbb
mov
mov
repz
stos
mov
in
mov
imul
xchg
cmp
andl
cmp
pop
xchg
loop
enter
jb
fisttps
add
ja
and
in
sub
jbe
incl
jge
mov
mov
inc
sbb
sbb
sbb
cmp
fisubs
lret
in
addl
aam
roll
sub
cmp
mov
dec
sahf
aaa
dec
xor
in
clc
test
bound
xor
push
jg
xorl
sar
xor
ss
xchg
imul
cmp
fildl
add
xor
cmp
jae
pop
dec
ss
lcall
and
jge
cmp
mov
cmp
cmp
ja
push
leave
cmp
movsb
and
test
pop
and
je
scas
imul
pusha
aaa
outsb
leave
mov
pushf
sbb
pusha
gs
jo
xchg
rorl
pop
and
mov
xor
xchg
jns
push
cmp
outsb
jecxz
fldcw
sub
add
xor
and
sub
jne
inc
dec
mov
jae
cmp
pop
sti
pop
ss
mov
cmp
divl
dec
fisttps
push
cmpl
mov
pop
mov
sub
iret
loope
xor
mov
aaa
and
int3
andb
testb
cmp
push
adc
fstps
cmp
ds
inc
arpl
cmp
push
iret
mov
sbbl
xor
cmp
fcomps
cmp
je
push
mov
mov
xor
pop
mov
fwait
aad
out
dec
in
cmp
loopne
sub
dec
inc
mov
xorl
or
sub
cmp
sub
cmp
cmp
repz
cmp
outsl
aaa
sbb
mov
add
mov
pushl
cmp
scas
aam
xchg
test
cmp
enter
jecxz
les
arpl
inc
ficoml
pop
inc
mov
pop
mov
js
cmp
cmp
out
jle
dec
dec
xchg
mov
add
inc
sub
sbb
jns
test
repnz
aas
je
cmp
insb
cmp
ss
xor
cmp
and
sub
cmp
mov
clc
push
add
enter
xor
inc
jl
push
jp
roll
shl
cli
jmp
and
cmpsb
ja
and
pop
add
cmp
out
test
jmp
lahf
cld
sahf
mov
inc
cmp
mov
pop
sbb
jno
in
mov
inc
cmp
adc
add
jb
sarl
pop
cli
xor
shlb
imul
cmp
cmp
jle
mov
and
cmp
xor
hlt
test
sbb
push
inc
roll
cmpsb
and
ss
mov
jecxz
jecxz
imul
pop
cmp
sarb
and
pop
cmp
std
rolb
or
int
fidivrs
xlat
inc
mov
xchg
in
jnp
mov
sbb
rcrl
cmp
dec
mov
adc
lods
repnz
ja
je
cmp
mov
js
cmp
cltd
cmp
mov
lds
sbb
cmpl
pop
shll
cmp
mov
enter
add
repz
imul
and
cmp
rclb
enter
jg
imul
cmpsb
inc
or
je
cmp
sbb
push
add
js
mov
sti
in
rorb
cmp
stos
add
cmp
test
pop
and
xor
lcall
or
xor
jae
pop
mov
adc
hlt
sub
xor
jecxz
cs
bound
lahf
mov
aaa
test
shrb
push
in
ja
repnz
mov
xchg
pop
mov
xor
cmp
pusha
mov
call
fnstenv
sarl
fiaddl
cli
mov
pop
xchg
imul
cmp
add
data16
icebp
add
mov
movsb
cmpl
inc
inc
mov
xchg
repnz
repz
xor
xchg
push
push
lcall
fwait
jne
dec
lods
stc
fsubr
dec
mov
imul
pushf
repz
in
xor
add
mov
cltd
push
mov
loopne
pop
pusha
clc
push
xor
mov
leave
icebp
adc
xchg
int
imul
cmp
sub
mov
and
insb
cmp
inc
mov
cmp
adc
cmp
leave
dec
add
mov
stc
enter
test
bound
in
dec
jae
data16
jns
out
push
je
cmp
ds
xchg
add
sub
pop
mov
dec
add
shl
and
mov
ja
mov
repnz
test
aaa
addr16
ds
aam
push
shlb
aas
jne
stos
mov
jb
push
xchg
jae
xor
dec
imull
cmp
dec
les
cwtl
dec
je
das
mov
or
push
ret
into
cmp
jns
scas
and
faddl
xor
xchg
popa
cmp
pop
mov
in
jnp
mov
leave
cli
inc
addr16
fs
arpl
jle
sbb
jmp
inc
cmp
inc
and
ds
cmp
fimull
inc
cwtl
xchg
rcr
popa
incb
xor
cmc
iret
and
in
and
and
sti
aas
adc
repz
adc
fnstsw
cmp
xor
lods
jo
sarl
call
mov
inc
or
in
mov
movsl
sbb
fadds
xchg
aam
jp
nop
jne
push
pusha
cmp
xor
push
or
jns
mov
lahf
idivb
add
cmp
mov
xlat
ja
cmp
pop
xor
adc
aaa
shl
lods
cmp
jae
cmpb
xor
fildll
xchg
xor
insb
into
mov
lret
cs
imul
js
jae
pop
hlt
sub
xor
iret
xchg
imul
and
xchg
hlt
rclb
sub
cmp
stos
ljmp
xor
and
into
mov
addr16
mov
pop
mov
js
cmp
add
mov
lods
or
mov
ret
iret
lods
je
cmp
call
cmp
lret
jnp
add
cmp
cmp
out
xchg
call
cmp
aam
add
and
mov
inc
xor
lret
iret
cmpl
rcr
sarl
pop
rcrl
cmp
push
test
das
lret
sti
pop
cmp
dec
xor
leave
xchg
mov
adc
push
cmp
cmc
mov
aam
and
int
or
add
add
gs
icebp
mov
mov
cmp
rolb
cmp
push
push
fmull
std
outsb
andb
xchg
add
pop
enter
fdivrs
lds
mov
jmp
cmp
jnp
adc
mov
imul
sti
hlt
and
sbb
mov
stos
loop
mov
hlt
inc
xor
cmp
adc
mov
ss
aaa
testl
fsubrs
xor
movsb
jns
push
mov
nop
cmp
or
mov
icebp
test
dec
push
xor
call
cmp
mov
movsb
das
mov
stos
repnz
adc
or
xchg
lret
aaa
cli
ss
in
std
cmp
aam
dec
lods
fistpll
adc
mov
inc
jb
or
mov
adc
cmp
fisttpl
enter
sbb
adc
cmp
insb
int3
push
push
lret
bound
pop
mov
mov
or
adc
scas
std
xor
negb
add
mov
inc
jo
and
cmp
mov
and
mov
cmp
fsubrl
push
jae
xchg
and
aaa
adc
fstpl
mov
ret
mov
cmp
mov
add
cmp
pop
addr16
pop
cmp
push
xchg
into
mov
aaa
cmp
movsb
shll
sub
cmp
hlt
push
loopne
xor
sti
xchg
add
imul
enter
ret
mov
outsl
xor
imul
shll
sbb
jnp
inc
mov
and
jp
popa
repz
jne
push
mov
jge
lods
sub
rorl
fidivrl
adcb
mov
dec
nop
daa
cltd
mov
scas
adc
shll
mov
inc
jae
dec
adc
into
ja
jne
rorl
in
and
xor
arpl
aam
jmp
bound
subl
sarl
mov
fstp
mov
xchg
dec
xor
popa
mov
aaa
pop
cmp
repz
cmp
sub
ja
cld
xchg
arpl
cmpsl
inc
cmp
insb
sti
fdiv
add
cmp
cmc
push
jecxz
mov
adc
pop
sahf
sub
jmp
pusha
movsl
mov
pop
sbb
cli
mov
std
dec
cmp
mov
inc
xchg
mov
cmp
popa
xchg
pop
push
inc
push
loopne
pop
iret
je
movsb
jbe
leave
inc
aas
cmp
ja
sti
xchg
xorl
jo
push
ss
dec
cmp
int3
fmull
cmp
ret
cmp
lret
mov
insb
xor
jae
stos
push
scas
jno
fucomp
cmp
cli
fsub
aam
cs
push
xor
scas
xchg
or
pop
xchg
xchg
jno
xor
cmp
shll
push
divl
xchg
dec
enter
lock
mov
push
stc
pop
cmpb
arpl
fsubs
add
and
or
imul
xor
outsl
add
inc
pop
mov
jp
xor
jae
mov
mov
xor
fldcw
mov
sub
add
aad
mov
hlt
cli
loope
ret
repz
xor
aaa
adc
lret
bound
inc
push
pop
test
mov
cmpb
inc
xchg
adc
aaa
xor
mov
dec
xchg
jmp
cmp
jg
mov
xor
fisubrs
stc
cwtl
xchg
ljmp
imul
lods
stos
xor
xor
jns
cmp
dec
or
mov
xor
arpl
xchg
jae
xor
je
push
mov
inc
in
rcl
shlb
insb
or
mov
cmp
daa
adcb
notb
pop
cld
sbb
cmp
cmp
enter
add
xlat
cmp
cltd
push
icebp
repz
xchg
data16
dec
jp
xor
out
insl
sub
lcall
mov
or
adc
jne
je
cmpsb
sahf
cmp
cli
test
cmp
adc
lahf
cmp
and
push
repz
dec
and
sub
jns
pop
sub
mov
add
xor
lahf
frstor
pop
les
mov
cmp
jns
dec
jmp
lds
fcomi
xchg
divl
out
cmp
popf
pop
pop
pop
inc
fs
cmp
mov
sbb
loope
dec
cmp
pop
je
lahf
into
aad
cmp
movsl
ficomps
mov
mov
ret
xor
adc
add
iret
sbb
jp
aaa
mov
bnd
xor
repz
mov
stos
jb
sbb
push
pop
or
push
push
je
push
testb
rcrb
push
jnp
and
jge
xor
or
jmp
cmp
into
jae
fisubs
sbb
lret
inc
jmp
or
stos
jo
jmp
mov
cmp
xchg
xor
roll
ret
sub
or
addr16
xor
sbb
jp
dec
popa
mov
mov
lcall
and
lahf
push
fstl
add
adc
and
mov
and
dec
into
inc
inc
cmpsb
mov
arpl
sarb
popa
fsubs
sub
sub
mov
push
push
movsb
cmp
mov
sub
jne,pn
subl
js
out
push
inc
andl
or
mov
jo
xchg
sti
push
xor
sbb
mov
jbe
imul
jp
mov
cmp
lock
dec
push
rolb
xor
fcoms
divb
jmp
stc
test
ljmp
add
lods
lret
enter
mov
inc
and
roll
inc
pop
cmp
push
xor
or
gs
ja
push
aad
xor
inc
loopne
cmp
cli
ret
int3
enter
inc
or
arpl
mov
mov
inc
adc
xchg
or
mov
xchg
inc
cmp
xor
xchg
rcll
or
adc
scas
shlb
pop
add
mov
xchg
pop
pop
and
mov
cmp
inc
push
mov
pop
rep
mov
lcall
fdivrs
jmp
rorl
mov
adc
add
mov
loope
pop
xor
push
cmpsl
pop
icebp
nop
xchg
mov
mov
cmp
mov
adc
aaa
aad
sbb
cmp
xor
mul
loop
jmp
jae
iret
pop
mov
cmp
mov
cli
fcomi
ja
add
cmp
in
add
fwait
iret
mov
cs
sbb
lods
sbb
xorb
pop
fildll
adc
sub
dec
jae
xor
pop
xor
repnz
cmp
ret
aaa
cmp
repz
hlt
xchg
and
dec
pop
jb
js
movsl
xor
xchg
stos
jp
push
pop
mov
add
mov
ja
mov
cmp
push
xor
mov
xchg
push
ds
jns
xchg
cmp
mov
cmp
std
bound
jne
repz
pop
iret
dec
xchg
orb
jae
push
push
mov
pop
std
xor
pop
cmp
mov
fucom
adc
sub
out
xor
inc
jo
enter
adc
cmp
cmp
sub
aad
std
popa
dec
adc
pop
push
or
xor
inc
and
ja
xor
aaa
cmp
or
jo
fucomp
jge
lcall
je
mov
lea
fbstp
or
aaa
daa
cmp
inc
int
inc
mov
pop
cmp
insb
jnp
jns
cwtl
leave
and
int
stc
fwait
or
pop
sub
push
or
cmp
jmp
repnz
cmp
dec
stos
test
xor
or
xor
test
jmp
dec
je
outsl
out
dec
cmp
mov
inc
dec
dec
aam
cmp
adc
push
push
inc
add
or
daa
cmp
push
in
bound
notl
out
addb
cmp
add
cmp
stos
adc
mov
int3
mov
sub
scas
xchg
xor
cs
cmp
out
push
orl
ljmp
xchg
std
mov
add
fmuls
mov
arpl
jmp
ss
std
push
sub
insb
loopne
mov
mov
scas
mov
cmpsb
stc
add
pop
subl
mov
cltd
fnstsw
pop
xchg
sbb
push
jecxz
mov
dec
insl
or
fs
cmpsl
lods
xchg
test
xor
xor
mov
mov
push
push
xchg
insb
stc
dec
add
sub
ja
mov
shll
jbe
cmp
pop
mov
push
dec
std
push
pop
xor
mov
iret
and
inc
movntq
xor
imul
cmp
lds
xor
cmp
inc
aam
jae
cmc
push
inc
jge
fnstsw
in
xor
stos
cltd
inc
cmp
inc
adc
fidivrl
sahf
mov
aam
pop
sbb
ja
shll
mov
mov
sub
mov
sub
shrb
ret
xor
and
adc
mov
in
adc
dec
dec
imul
mov
mov
xor
cmc
gs
mov
mov
sbb
and
aas
mov
lcall
push
cmc
dec
pop
jb
jmp
je
aam
cmp
insb
inc
ja
sub
or
inc
ljmp
insb
xor
add
xchg
lret
xor
xor
adc
adc
push
or
mov
inc
mov
xor
cmp
sarl
dec
or
js
xlat
fstpt
sub
inc
repz
mov
repnz
xchg
mov
repz
mov
rcrl
nop
inc
lret
mov
ret
clc
repnz
fcoms
out
push
aad
mov
inc
out
es
icebp
aaa
pop
bound
and
xor
xor
out
fisttps
and
cmc
pop
dec
repnz
xor
aaa
cmpsb
je
in
cmp
push
mov
hlt
fidivrs
inc
fsubl
mov
xor
inc
aas
jmp
push
mov
ja
xor
test
cmp
mov
mov
outsl
cmp
cmp
out
mov
jmp
add
jg
cmp
hlt
das
test
out
pop
jp
or
ret
addl
xor
mov
push
jp
repz
mov
or
rcrl
fisubs
leave
sub
jge
les
mov
cmp
ds
sti
cmp
popa
aaa
jnp
adc
das
ret
cmp
jl
fdivp
mov
pop
sbb
mov
imul
lcall
leave
in
aas
xchg
mov
push
js
inc
fwait
adc
jecxz
ds
push
xor
dec
sarl
cli
aaa
inc
and
cltd
lods
shl
stos
push
xor
fbstp
dec
imulb
mov
or
aaa
int
cmp
js
movsl
pop
xor
loope
mov
adcl
xchg
ds
scas
mov
sub
aaa
mov
js
dec
sbb
pop
mov
cmc
enter
imul
sarb
mov
mov
cmp
js
pop
lcall
fnstsw
sahf
sarl
jg
cmp
js
out
fstpt
cmp
scas
push
cld
cmp
stos
fisubrs
mov
pop
pushl
xchg
rcr
xor
pop
mov
iret
fisttpl
mov
std
xor
jmp
ret
lock
push
cltd
and
jo
out
mov
lret
cmp
mov
or
loope
fwait
loopne
inc
into
sub
dec
shr
daa
inc
jecxz
cmp
jo
cmp
mov
jnp
xor
jmp
adc
shrl
sti
ss
cmc
jo
push
mov
jne
jecxz
popa
ss
pushl
jle
call
iret
xchg
pusha
jge
arpl
add
loope
adc
clc
mov
fists
divl
xor
popf
mov
inc
jmp
xchg
js
adc
mov
lea
and
xchg
xor
pop
lcall
aaa
pop
imul
xchg
cmp
xchg
push
stos
sbb
mov
and
rcrl
jmp
ret
das
stos
xchg
xlat
ljmp
setbe
clc
das
and
cs
adc
ljmp
cmp
sbb
add
cmp
nop
jp
sti
stc
xor
fcmovnu
rclb
mov
inc
mov
cmp
add
cmp
jg
fstpt
inc
mov
ret
lea
jae
mov
jno
and
dec
mov
adc
ds
movsb
fidivs
cli
mov
jp
inc
fnsave
sbb
cmp
sti
mov
and
fisubl
aas
mov
add
in
cmp
jg
mov
ret
jo
daa
iret
xchg
mov
xor
cmp
jle
and
fisubs
cmp
jns
jo
jg
pop
xor
pop
aad
add
jmp
mov
inc
jmp
js
push
scas
test
aaa
mov
ja
dec
jg
sbb
mov
sti
mov
mov
pop
cwtl
rcr
stos
add
cmp
and
xor
add
jl
or
push
mov
mov
dec
mov
arpl
lcall
mov
dec
cmp
cmp
mov
cmp
das
loope
ret
negl
xchg
push
sub
xor
dec
adc
jle
xchg
das
sahf
mov
or
mov
xor
xor
cmp
out
inc
icebp
out
shll
xor
adc
rcr
jns
inc
sbb
test
sub
gs
sub
cmp
cmp
mov
push
xor
sub
cmp
jl
sub
addr16
xchg
rcl
mov
xchg
xor
bound
pushf
orb
lcall
xlat
stos
leave
clc
mov
push
sub
aaa
and
fidivrl
push
sub
movsb
xlat
add
mov
xchg
shl
shrb
fwait
ss
push
sub
jecxz
out
xor
stos
jmp
outsl
dec
pop
cmp
mov
xor
insb
cmp
add
push
adcb
mov
pop
mov
add
push
push
fsubs
push
jle
push
bound
sarb
dec
notb
imul
inc
mov
and
cmp
xor
sbb
add
cmp
arpl
loopne
imul
nop
mov
dec
shlb
pusha
mov
and
add
in
mov
cmp
outsl
movsl
clc
mov
push
cmp
pop
aam
mov
shlb
cmp
and
add
jne
popf
aam
in
adc
mov
xor
shl
cmp
mov
ja
xchg
lock
hlt
sbbb
ljmp
pop
xchg
sub
pop
cmp
xor
lea
aaa
lods
pop
clc
movsl
mov
adc
jge
inc
in
ret
sbb
push
clc
xchg
inc
and
lea
jbe
filds
xor
icebp
mov
mov
add
pop
gs
lock
je
clc
sarl
cmp
push
test
mov
sbbl
xchg
xor
repz
cltd
pusha
xor
jp
je
and
pop
cmp
push
or
enter
iret
mov
adc
call
add
pop
mov
lea
ret
rorb
jno
rorl
leave
daa
icebp
xor
jg
add
scas
mov
jns
or
push
mov
call
outsl
jnp
xchg
and
or
arpl
cmp
mov
or
ja
bsr
and
popa
sbb
and
cmp
rcrb
sub
or
adc
xor
jnp
inc
loope
push
push
dec
cltd
cmp
ret
aaa
add
xlat
lret
fistps
and
xor
bound
mov
scas
sub
jb
pushl
mov
sub
rcrb
movsb
mov
lcall
dec
sbb
xor
lcall
inc
bound
int
adc
cmp
jbe
imul
pop
xor
imul
lret
popa
add
mov
sti
aaa
adc
cmpsl
repz
cmp
xchg
pop
xor
insb
mov
jp
or
push
neg
and
clc
cmp
mov
lock
dec
push
shlb
mov
cmp
subl
xchg
inc
lret
xor
fs
xor
pop
packssdw
lods
insl
scas
xor
xor
out
jbe
popa
cmp
push
mull
out
mov
rorl
loop
clc
inc
xor
mov
rolb
shll
cmp
mov
xor
clc
xor
mov
ljmp
xor
mov
and
hlt
cli
aaa
std
rolb
adc
cmp
mov
jecxz
sarb
ss
hlt
movsb
lods
outsb
cmp
jne
mov
dec
cmp
cmp
xchg
inc
repz
and
fcompl
stos
and
fidivrl
aam
mov
or
xor
inc
stos
dec
aas
xchg
push
loope
jae
test
movsl
push
fists
push
ret
aaa
inc
subl
nop
cmp
cmp
imul
mov
cmp
out
stos
loopne
cmp
sarl
outsl
mov
rcrb
dec
pop
in
cmp
push
mov
xor
cld
xor
jg
stos
push
inc
rorb
fdiv
icebp
xor
daa
shll
iret
cmp
push
call
mov
pop
xor
cmp
iret
inc
loopne
filds
stos
fstps
dec
add
mov
rcl
adc
mov
add
cmp
jge
call
cmp
cmp
jae
inc
xor
dec
jae
scas
dec
dec
and
add
mov
cmp
lds
mov
mov
stc
pop
mov
xor
push
xor
jmp
mov
cmp
add
jmp
jae
sub
and
insb
xchg
xchg
dec
mov
ret
cmpsl
cmp
xorl
hlt
or
insl
pop
mov
shll
xor
testl
lock
aam
out
cmp
outsb
imulb
ret
mov
add
repz
mov
popa
loopne
mov
test
mov
lcall
cmpsb
test
popa
mov
nop
add
mov
add
pop
pop
popa
ss
and
mov
mov
fcomi
mov
add
pop
xchg
mul
xor
xor
cmp
or
loopne
or
test
xchg
cmp
sbb
add
cmp
orb
cmp
lcall
shl
cmp
mov
cmp
sbb
scas
lea
cmp
mov
imul
es
cmp
mov
push
sar
mov
or
ret
sub
ja
out
ss
daa
push
mov
cmp
jae
add
adc
adc
or
enter
out
and
cmp
popw
mov
or
mov
cmp
cwtl
push
xor
mov
mov
mov
mov
hlt
mov
jb
fs
je
bound
jmp
sbb
adc
sub
loopne
cmp
cmp
jl
mov
shl
bound
das
out
negl
xchg
pop
je
out
ja
push
loopne
jne
pop
out
mov
mov
fcoms
es
dec
incl
shlb
enter
and
mov
sbb
je
ljmp
leave
imul
adc
daa
stos
outsl
test
lods
je
inc
scas
icebp
sbb
negl
cmp
fimull
inc
push
lods
adc
insb
cmp
std
adc
roll
test
cmp
inc
pop
mov
cmp
aas
nop
mov
out
pop
cmp
lods
inc
aaa
push
fistpl
mov
lods
mov
mov
add
je
or
dec
mov
xor
shrb
arpl
pop
inc
pusha
pop
frstor
and
jg
rcrl
fdivs
daa
inc
xor
aas
and
ja
push
ret
pop
add
xor
mov
stos
stc
out
dec
inc
cmp
xor
and
adc
lcall
gs
xchg
sub
mov
cmp
or
sbb
dec
lret
scas
jno
aaa
xchg
and
pusha
cmp
dec
sub
inc
cmp
aas
cmp
dec
or
pusha
mov
ja
cmp
fmull
mov
pop
stos
mov
adc
pop
cmp
xchg
jo
lcall
mov
mov
mov
push
enter
mov
popf
mov
enter
mov
mov
cmp
ljmp
cmp
or
jl
adc
cmp
xor
fistl
xor
shl
cmp
std
scas
pop
fwait
xor
lock
aad
sbb
cmp
xor
xchg
dec
nop
cmp
negl
or
mov
add
push
and
cmpsb
into
jb
arpl
call
dec
aaa
mov
rcrb
ja
xlat
icebp
cmp
mov
pop
pop
jmp
call
cmp
xor
jne
mov
test
and
cmp
cmp
xchg
arpl
cmp
movsb
sar
addb
cmp
pop
stc
jg
push
shll
sbb
add
jae
and
mov
loop
cmp
jecxz
jg
sbb
push
loopne
push
testb
rcr
mov
sub
cmp
fildl
stos
mov
cmp
adc
cmp
outsl
es
rorl
lock
lds
bound
push
jae
test
mov
fmuls
int
xor
test
push
and
cmp
jp
mov
inc
aaa
jno
dec
lods
enter
mov
and
cmp
popf
push
inc
cmp
adc
jmp
mov
jae
ret
mov
sti
mov
mov
mov
and
cmpl
subl
mov
xor
mov
pop
sub
cmp
nop
imul
add
sbb
xchg
jb
mov
mov
lock
lds
ret
shlb
cmp
pop
mov
mov
loope
test
adc
in
mov
ljmp
xor
ss
or
dec
mov
mov
cld
pop
iret
insl
nop
push
add
jae
mov
cmp
mov
fwait
lret
cmp
icebp
idivb
ss
mov
mov
xor
js
push
hlt
xchg
jle
pop
mov
jne
les
push
lods
mov
or
repz
push
and
sbb
mov
inc
cmp
jl
mov
mov
dec
cmpb
lcall
xor
ja
sub
pop
iret
inc
cmpsl
add
cmp
xor
xor
aam
pop
aaa
fcomi
and
int
mov
cmp
stc
scas
cmp
mov
andl
cmp
xor
cli
mov
or
and
addr16
mov
cmc
inc
mov
cmp
jg
xlat
inc
sbb
jge
pop
mov
adc
jg
loopne
lods
loop
shlb
lods
out
push
sysexit
mov
xor
pop
enter
xor
mov
movsl
fidivrl
ss
jae
inc
lret
pop
stos
sbb
push
xor
divl
lea
lods
xor
lcall
pop
mov
inc
das
test
roll
adc
loope
xor
jl
push
cmp
inc
pop
sbb
aaa
lock
or
outsl
and
cmp
xorb
mov
xchg
out
cmp
dec
ror
js
test
push
add
das
mov
and
cmp
jae
fcomp
xor
mov
test
pop
dec
jl
cs
dec
xor
inc
mov
int3
cmp
lcall
cmp
aaa
stos
pop
addl
and
xor
dec
jns
mov
ret
enter
sbb
out
push
lods
push
in
push
scas
xlat
pop
fdivrs
ret
shlb
mov
lds
es
jae
cmp
adc
out
lds
fsubr
stos
movsl
addb
jne
test
jo
pop
mov
fidivs
scas
cmp
cmp
sub
imul
or
aas
push
add
or
cmc
cmp
jns
cmpsl
cmp
test
aaa
mov
xor
mov
jge
aas
xchg
cmp
mov
pop
pop
mov
cwtl
push
lock
popf
mov
nop
repz
ss
cwtl
jnp
sbb
add
sbb
or
rorl
xor
xor
orl
insb
jg
loopne
pop
test
dec
int
in
xor
cs
adcl
xor
lds
idivb
cld
lcall
cmp
dec
lods
add
js
clc
push
pushf
sbb
call
or
xor
fmulp
push
xchg
scas
jo
mov
mov
pop
cmp
jb
jnp
icebp
cmpsb
in
jbe
mov
dec
lods
adc
stos
push
and
xor
lcall
rolb
xchg
jg
cmp
popf
mov
jne
xchg
sbb
push
adc
pop
mov
adc
mov
mov
movsb
gs
icebp
out
cwtl
cmp
sahf
push
sti
imulb
dec
stos
rcrb
xor
push
jp
cwtl
cmp
and
inc
cmp
add
jns
dec
push
shlb
popf
fcomip
or
lahf
mov
popf
pushf
ss
sbb
cmp
push
movsl
ds
dec
cmp
shlb
push
inc
xlat
sub
test
xchg
mov
inc
loopne
cwtl
test
xorl
adc
iret
sqrtps
mov
adc
add
jp
fstp
js
lahf
cmp
mov
pop
fbstp
sti
xor
mov
cmp
andb
and
insl
aad
pop
sbb
pop
bswap
pop
in
stos
test
mov
cmp
push
fistl
int
insl
cmp
mov
jmp
inc
pop
push
sahf
add
mov
jae
and
xor
mov
je
mov
inc
enter
xlat
cmp
mov
lahf
test
xor
shll
lods
pop
ret
sbb
lcall
addl
jp
and
mov
mov
jl
xor
push
adc
xlat
loopne
fcom
jo
js
inc
cmp
cmp
sub
pop
push
pop
icebp
test
add
enter
dec
movsb
mov
aaa
push
xchg
adc
mov
hlt
sarl
shrb
push
clc
and
psubq
pop
ja
inc
jp
add
test
hlt
sub
iret
push
pop
insl
adc
pop
jg
cmp
mov
xor
push
add
mov
aam
pop
cmp
cmp
call
cmpb
adc
rcrl
arpl
sbbl
in
adc
pop
ja
cmp
add
adc
popf
pop
cmpsl
add
sub
loope
jmp
pop
loopne
sbb
add
xlat
sub
sti
cmc
and
sbb
cmp
jle
fwait
lahf
sbb
imul
and
mull
out
lret
pop
add
scas
dec
jno
fidivl
cmp
vphaddbw
xchg
cmpsl
cmp
mov
mov
stos
ficompl
dec
int3
les
cmp
cmpb
xor
mov
std
ss
fisubrl
xor
or
xchg
jg
mov
ret
xchg
jp
xchg
adc
dec
iret
or
jecxz
lret
dec
cmp
dec
sub
in
inc
mov
je
stos
mov
shll
ss
shrb
cmpb
paddq
jbe
je
test
ljmp
cmp
jge
clc
cmp
mov
jp
mov
popf
insb
insl
sub
adc
movsb
ljmp
aad
out
sbb
mov
push
cmc
push
jge
test
popf
jl
push
in
in
jle
hlt
int3
jbe
fistps
cmp
mov
cld
xor
std
xchg
push
mov
push
adc
pop
je
dec
inc
loop
dec
std
test
mov
or
adc
cmp
fnstenv
and
inc
out
andnps
mov
aam
cmp
repz
daa
dec
dec
adc
mov
jno
rcll
sbb
push
add
xor
gs
ret
push
push
pusha
call
fcom
push
mov
mov
call
sub
sbb
jmp
xor
jne
sbb
loopne
lahf
cltd
cmp
mov
cmp
add
inc
inc
xchg
out
sarl
pop
pop
pop
enter
ds
jo
call
sbb
out
and
jl
movsb
dec
insb
cmp
movsl
call
mov
cmp
ret
adc
push
cmp
mov
std
push
subb
cmp
lret
add
adc
fldcw
inc
sbb
scas
jl
push
push
cmp
push
mov
cmp
mov
cmc
cmp
mov
mov
ret
sub
scas
sub
cmc
pop
aas
adc
or
je
insb
mov
test
cmp
mov
push
out
fdivrl
aaa
ss
inc
movsl
sub
jo
ljmp
test
sbb
xchg
loop
cmp
fistpll
lret
lea
dec
jle
stos
xorl
repnz
dec
sub
jp
sub
negb
repnz
sbb
lret
xchg
das
cmp
xlat
or
in
jmp
sbb
int
cmp
cmp
mov
mov
rcrl
cmp
pop
fldenv
sbb
cmp
cmp
jb
or
leave
mov
xor
ds
js
les
adc
sbb
xor
mov
roll
sub
lds
cmp
cmp
sub
iret
aad
xor
test
es
test
les
insb
sbb
cmp
inc
mov
jae
and
jp
xor
cmp
arpl
pop
sbb
lds
or
cmp
and
enter
cmp
add
inc
or
fsubs
les
cmp
mov
pop
push
push
arpl
dec
cmp
cmp
mov
test
lock
into
jge
xchg
jns
or
dec
xchg
je
in
cmp
jmp
cmp
cli
call
mov
cmpsl
mov
mov
push
push
mov
jp
test
mov
jo
nop
clc
insl
adcl
dec
adc
xor
test
push
addb
xor
fadds
ficoms
jge
insl
push
xchg
sbb
incb
rclb
pop
fists
mov
mov
cmp
xchg
imul
sbb
mov
xchg
cmp
cmp
mov
inc
stos
mov
mov
nop
or
jb
pop
into
aam
in
add
dec
rcll
jae
inc
adc
pop
mov
sub
ja
inc
or
ret
cmp
movsl
push
adcb
lret
cmpsl
xchg
mov
cmp
mov
clc
sti
or
jb
ret
push
cmp
and
cmc
jae
data16
mov
cltd
mov
inc
adc
jmp
addr16
adc
and
xchg
imul
dec
pop
test
cs
shl
add
fidivl
push
bound
cwtl
sub
cmp
sub
cmc
cmp
push
scas
mov
clc
jbe
dec
ss
in
sahf
adc
sbb
dec
pop
popa
cs
movsb
loopne
push
aaa
popf
adc
push
in
stos
aam
out
pop
xchg
sub
xor
rolb
xor
rorl
out
jmp
xor
xchg
cmp
adc
ja
js
and
sub
add
xor
sub
fnsave
adc
push
dec
pop
data16
push
outsb
fs
xor
pop
shlb
aam
insb
cmp
mov
fwait
inc
arpl
pop
add
mov
movsl
popf
cmp
mov
xor
push
xor
adc
and
mov
pushf
xor
mov
jbe
xor
cmp
aaa
mov
xor
cmp
fs
cmp
push
mov
repz
addr16
cmp
xchg
int3
ds
push
loop
cmp
repz
movsb
call
dec
jge
cld
repnz
pop
cmp
xchg
xchg
cmp
push
and
pop
jmp
add
fildl
xor
and
inc
loope
imul
push
movb
je
das
cmc
add
xor
xor
in
sarb
and
fnstcw
adc
sbb
push
js
stc
mulb
das
or
xor
cmp
in
and
ljmp
xor
roll
cmpb
xor
loopne,pt
into
push
int3
scas
push
icebp
es
loope
call
fimuls
sahf
pop
mov
cmp
xorl
je
inc
xor
stos
fldenv
dec
add
test
lods
mov
or
pop
mov
jp
lcall
sbb
lahf
cmpsb
test
or
hlt
fst
mov
lahf
sarb
xor
movsl
mov
jbe
clc
and
sarl
mov
lods
mov
pop
xor
cld
pop
xchg
iret
xor
rcrb
add
cmp
les
mov
mov
push
repz
cmp
mov
les
iret
pop
pushf
bnd
push
sbb
mov
mov
stc
mov
cmp
cwtl
mov
sbb
lret
push
in
mov
and
add
js
out
inc
sub
xor
mov
lahf
popa
dec
jno
cltd
cmp
and
inc
leave
sub
inc
jge
adc
jmp
test
xor
sub
mov
xor
bound
or
mov
push
iret
and
adc
push
xor
ret
mov
pop
pop
sbb
pop
jl
in
mov
aad
or
push
adc
sub
sub
stos
add
lcall
xchg
or
je
mov
mov
int3
xchg
cmp
dec
xor
adc
or
xor
cmc
mov
add
cmp
mov
xchg
repnz
mov
sbb
push
fdivr
jae
xor
xor
aaa
jge
xor
loope
dec
out
mov
add
xchg
lret
cmp
jecxz
mov
xchg
xor
dec
mov
jnp
stos
shlb
rcll
popa
pop
dec
fdivp
cmp
cmp
xor
inc
add
in
adc
aam
mov
enter
adc
jecxz
cmp
shl
mov
pop
and
out
enter
std
lea
xor
sbb
xor
add
jl
fnstenv
push
or
push
pop
in
and
or
dec
and
jle
ret
inc
stos
xchg
pop
push
jecxz
pushf
hlt
mov
mov
adc
orl
dec
sub
inc
das
or
dec
ds
cld
shr
mov
push
push
add
dec
inc
xchg
pop
xchg
out
mov
push
fs
test
inc
movsb
aam
aas
jle
pop
add
inc
dec
mov
lret
int
mov
sbb
addr16
cmp
lret
cmp
jmp
xor
lcall
sub
sub
xor
mov
rcll
inc
pop
repnz
xchg
cmp
inc
push
sub
sub
cmp
cmp
or
mov
xor
pop
mov
xchg
ja
cmp
roll
jmp
push
xacquire
xor
pop
fiadds
cmp
mov
sbb
and
or
adc
icebp
imul
mov
test
sahf
outsl
popf
sub
xchg
icebp
cmp
lock
mov
div
mov
outsb
cmp
data16
jp
xor
push
ds
mov
cmp
lds
negl
add
sbb
lock
and
ss
js
and
fistps
push
jns
scas
sbb
push
jge
pop
and
jns
xchg
cwtl
rclb
int
inc
push
aad
cmp
in
add
jmp
out
push
xor
jge
xor
repz
pop
mov
sbb
int
lahf
and
pop
lret
ret
pop
sbb
push
lcall
lods
add
movl
or
adc
enter
bound
test
sbb
sub
cmp
ja
mov
jmp
fildll
add
push
arpl
mov
xor
adc
test
dec
xor
arpl
cmp
aam
shrb
fcomi
bound
out
jecxz
les
adc
movb
adc
push
fldt
mov
pusha
jl
cmp
xchg
shll
pop
sub
stos
lock
push
pop
inc
push
cmp
mov
cmp
gs
jno
push
jbe
fiadds
or
scas
xor
cmp
mov
mov
addl
xor
cmp
mov
xchg
add
xchg
cmpl
adc
or
cmp
and
and
stos
shlb
inc
cmc
or
outsb
cmp
arpl
mov
sahf
iret
cmp
cli
mov
ljmp
or
lea
in
pusha
lret
ss
xor
jle
cmp
sub
aas
cmp
mov
jb
mov
and
fidivrl
dec
mov
loopne
jge
xchg
gs
int3
dec
test
mov
adc
sub
shll
imul
testb
xlat
cld
add
push
xchg
jg
loope
xchg
mov
jae
pop
cmp
fimuls
shl
and
cs
es
inc
jb
dec
mov
push
xchg
jb
notb
ficomps
pop
xchg
cmp
xchg
inc
jne
out
scas
arpl
lcall
jb
mov
iret
xor
mov
and
data16
sub
pop
sbb
inc
inc
icebp
jb
xor
ljmp
cmp
jbe
inc
jle
leave
mov
hlt
repz
inc
jb
cs
sbb
cld
fcomps
sub
arpl
int3
push
jb
aam
mov
push
sub
in
xor
pusha
sub
cmp
jge
cltd
fldl
inc
test
push
mov
in
mov
test
inc
cmp
test
shlb
sbb
repnz
mov
mov
pop
aaa
jns
jo
imul
cmp
adc
loope
jg
cmp
sub
jae
xchg
cli
mov
fiadds
cltd
pop
and
ss
add
ss
test
xor
jo
loopne
sub
inc
cmp
cmpsl
popf
push
out
mov
insl
add
stos
dec
or
out
rorl
mov
loopne
cwtl
cmp
mov
mov
fidivs
xor
movsl
daa
andb
xor
pusha
mov
arpl
inc
cmp
into
jg
das
mov
insb
xor
clc
lods
add
push
mov
or
not
xor
cmp
jl
xor
out
push
test
inc
cmpsl
cmp
and
jle
sub
inc
loop
imul
neg
cmp
popf
das
dec
dec
orl
adc
movsb
sub
xor
mov
sub
mov
daa
into
sbb
jl
adc
pop
sub
lret
jae
sub
xchg
sbb
int3
out
push
insb
sahf
xor
or
push
pop
mov
and
pusha
pop
out
lret
sarl
rcr
jb
std
mov
push
cmpsl
cmp
ret
and
sbb
shr
repz
push
ja
js
sarl
jl
sbb
sub
ret
scas
add
ffree
xchg
mov
add
pop
out
aas
idiv
test
sbb
add
stos
add
imul
xor
sbbl
mov
lods
ror
shll
mov
out
out
push
mov
mov
sub
int
mov
cmp
das
jge
lods
out
aas
cmp
repnz
cmp
icebp
add
or
mov
pusha
xor
out
bnd
shlb
dec
push
push
fsubrs
xor
cmp
mov
inc
xor
outsl
cmpsl
mov
cmp
mov
aas
in
nopl
mov
loope
push
div
lahf
aaa
cltd
or
inc
jae
leave
cmpsl
inc
mov
cmp
das
pop
ja
cmpsl
dec
sbb
add
pop
push
mov
out
test
dec
cmp
aas
cwtl
jmp
cmpsl
out
loopne
out
and
mov
outsl
mov
inc
shll
pop
daa
nop
jmp
push
loope
shlb
push
mov
cmpsb
fimull
jo
xor
inc
cmp
clc
lahf
pop
mov
cmpsl
iret
cs
push
aas
das
push
sarb
xor
pop
sahf
outsl
out
jecxz
xor
mov
mov
cmpsl
cmp
in
lea
pop
push
psrlw
int
push
mov
fdivs
jnp
inc
xchg
negl
adc
dec
jge
add
pop
mov
and
dec
mov
ret
lock
xor
pop
cmpsb
dec
call
and
dec
aas
cmpsl
mov
xchg
xchg
scas
gs
inc
mov
push
outsb
or
inc
jle
ds
push
cmp
aas
andb
jmp
xchg
imul
xor
add
cmp
fcmovu
pop
xor
int3
push
cwtl
in
ss
xorb
fistl
inc
push
add
cwtl
paddd
xor
push
adc
mov
mov
divl
leave
scas
std
loopne
test
sub
cmpsl
ja
dec
adc
mov
fdivl
leave
xor
mov
push
xlat
or
sahf
jae
cmp
mov
cmp
cmc
stc
dec
fistpl
mov
cs
cmpsb
cmc
pop
pop
mov
push
test
repnz
dec
pusha
loop
ljmp
or
dec
lock
push
xor
xchg
jo
in
fsubrs
ds
ss
sub
adc
enter
add
mov
mov
cmp
stc
pop
dec
js
mov
xor
mov
clc
cmp
mov
fcomp
mov
push
es
int3
mov
movsb
push
fiadds
add
sbb
sahf
cmpsb
and
inc
pop
cs
jno
add
adc
xchg
xor
cmp
pop
jle
pop
js
jge
adc
aaa
sahf
xor
pop
add
lahf
sbb
cltd
scas
xchg
cmp
popf
in
sahf
pop
outsb
jg
cmp
mov
pop
lcall
divb
cwtl
xor
push
divl
dec
xor
test
xchg
cmp
or
lahf
adc
js
orb
mov
push
iret
push
xchg
rcr
mov
dec
fnclex
xchg
push
cmpsl
addr16
pop
pop
sub
add
lret
xor
out
mov
push
inc
out
and
mov
push
and
jae
pop
or
dec
cld
pop
xor
add
adc
scas
cwtl
mov
cmp
hlt
pop
cmp
bound
nop
sbb
dec
test
shlb
or
fstpt
mov
dec
mov
int
test
cltd
mov
enter
in
cs
popa
int
and
aas
xor
sbb
outsl
xor
or
cltd
pop
int
repnz
outsb
clc
lahf
dec
cmp
dec
lock
jo
fcoms
adc
daa
loopne
xor
pop
pusha
xchg
and
cs
out
xor
test
and
es
cmp
add
jg
dec
lret
and
xchg
aas
cltd
rorb
cmpsb
cmpsl
inc
out
lahf
sub
pop
idivl
movsb
es
aaa
jl
ljmp
push
and
cmp
and
mov
mov
mov
ljmp
lahf
aad
es
inc
push
jae
push
repz
fisttpl
cmp
sub
sahf
sbb
adc
push
dec
imull
rclb
insb
clc
push
shrl
imul
pop
ljmp
jae
inc
int3
pop
cmpsb
ss
ljmp
notl
fwait
and
xchg
jb
test
js
inc
sbb
cmp
cli
das
ljmp
hlt
mov
movsl
inc
or
mov
adc
iret
mov
xchg
cmp
cld
cmp
push
in
xor
and
pop
repnz
xor
sbb
pop
pop
and
xor
inc
outsb
sub
push
add
xor
pushf
inc
sahf
ljmp
push
sub
cmp
jl
mov
adc
cmp
sub
pop
outsl
xchg
lods
cmp
mov
cmp
jne
out
cmp
ljmp
cmp
pop
mov
push
loopne,pn
inc
pushf
mov
pop
mov
jo
out
xor
mov
lahf
pop
dec
lea
push
es
cmp
xchg
daa
shlb
and
flds
pop
adc
cmp
iret
jl
in
sub
mov
icebp
div
xor
mov
repz
mov
test
push
cmp
test
loope
mov
jns
push
pusha
aam
push
push
in
xor
aad
sbb
mov
add
mov
cs
push
sbb
adc
or
inc
mov
dec
aam
sbbl
pop
js
stos
mov
fbstp
mov
mov
call
xor
test
daa
push
ss
mov
arpl
inc
js
nop
mov
mov
imul
cmp
mov
pusha
call
shll
es
mov
adc
inc
mov
test
test
dec
sbb
adc
pop
sbb
sub
test
ljmp
cmp
cmp
shlb
dec
leave
adc
xor
pop
adcl
aad
pusha
mov
int3
jne
fcomps
push
call
cli
lret
jae
pusha
shlb
popa
rclb
add
movb
inc
xor
lock
cs
cmp
jge
sbb
xor
sub
add
dec
jmp
inc
adc
test
lret
cmp
or
mov
or
fidivrl
ret
pop
stc
xchg
fidivs
lret
call
push
push
push
jl
and
int3
ret
mov
rorb
push
iret
cmp
jo
call
mov
cmp
mov
adc
jns
sub
mov
lock
mov
inc
xchg
fistps
dec
or
mov
and
popa
call
clc
adc
fdivrs
mov
scas
in
mov
enter
mov
les
push
fwait
dec
sub
pop
cli
movsl
jl
fwait
sub
ror
sub
imul
icebp
call
or
fcomps
dec
and
pop
stos
cli
sub
sub
in
lret
sahf
dec
cmp
das
mov
push
inc
adc
inc
jge
rcr
adc
cs
or
test
cmp
or
push
pusha
sbb
es
ud1
cmpsl
pushf
jecxz
cmp
pop
sbb
fcom
popa
jne
and
fiadds
push
cmp
jo
sar
cmp
and
pshufb
fdivs
stos
mov
mov
xor
adc
dec
mov
xorb
pop
cwtl
add
mov
jne
subb
cltd
jbe
ror
pushf
xor
rcr
cmp
inc
xchg
ljmp
dec
nop
push
mov
arpl
push
xchg
into
and
cwtl
xor
cmp
imul
cmp
push
dec
push
cmpsb
mov
nop
jns
clc
xchg
xor
xchg
jo
orl
jge
in
dec
add
popa
mov
pop
mov
cmp
jmp
outsb
mov
ja
aaa
or
divb
fdivrl
jno
fldl
or
push
sbb
mov
out
cmp
mov
xor
push
mov
inc
pop
fcomps
out
cmp
xor
lock
enter
sbb
aad
icebp
jmp
and
into
adc
cmp
mov
pop
cwtl
jae
sub
mov
cmp
subl
cmp
in
into
xchg
xor
enter
cmp
clc
jp
adc
jge
shlb
xor
cltd
inc
mov
add
pop
or
cmp
inc
fcoms
call
repz
dec
pop
push
cmp
mov
dec
shlb
xor
stc
icebp
outsb
pop
mov
imul
test
add
pushl
enter
pop
sbb
sub
mov
cmp
mov
mov
inc
clc
push
das
push
jnp
xchg
and
xor
lock
sbb
sbb
cwtl
cmp
pop
or
dec
sbb
and
lock
xchg
push
push
xchg
cmp
iret
cli
stos
sub
cmp
jb
mov
stc
nop
sbb
insb
pop
cmpsb
mov
clc
xor
inc
shr
jp
jno
stc
cmp
fmuls
mov
leave
leave
xor
fsts
adc
push
cmp
in
call
mov
stc
jbe
int3
xchg
or
lock
jg
push
iret
mov
das
lods
pusha
xchg
add
hlt
cmp
dec
jge
inc
cwtl
cmpsl
cltd
ja
dec
lock
inc
addb
cmp
loopne
cmp
shll
pop
dec
cmp
aaa
push
leave
mov
cmp
adc
xor
call
push
xchg
cmp
pop
aaa
pop
adc
or
or
cmp
add
mov
add
ss
mov
adc
jo
lret
sub
mov
xchg
leave
mov
add
mov
cmpsl
aam
cmp
aas
stos
mov
js
jo
pusha
dec
push
mov
push
sti
push
in
sbb
int
and
inc
test
push
aas
leave
mov
cltd
and
adcb
adc
inc
scas
sarl
cmp
push
cmp
sub
cmp
sbb
repz
lret
xor
mov
sbb
orl
inc
mov
push
dec
xor
test
xor
test
xor
repz
and
add
shll
aam
cmp
inc
pop
mov
xchg
cmp
mov
add
inc
aas
rolb
xorl
fnstcw
ljmp
call
adc
add
inc
mov
jo
lret
cmpb
sbb
cmpsb
xorl
rol
mov
push
add
jae
xchg
cmp
xor
jno
ds
loope
push
or
cmp
dec
inc
xor
rclb
pop
pop
inc
ret
xor
repz
dec
cmp
mov
nop
cmp
or
sbb
jp
jge
add
rcl
mov
add
xor
xor
stc
adc
xor
lret
sbb
rorb
in
add
and
cmp
and
dec
sub
ror
mov
es
outsl
lcall
push
hlt
adc
lock
jns
cmp
aas
xor
fcomps
arpl
mov
dec
pop
addr16
xor
cmpsl
fdivs
imul
ja
adc
cmp
enter
xor
mov
adcb
add
rorb
cmp
inc
cmpsl
push
xchg
inc
or
sub
mov
sahf
cmp
inc
shll
cmc
ds
jmp
sub
sub
mov
stos
clc
jae
sarb
add
pop
scas
pop
imul
pop
scas
adc
sub
shll
inc
stc
shll
fcoms
inc
test
stos
nop
enter
dec
ret
mov
fcomps
adc
pushf
dec
aaa
jmp
sub
cmp
lahf
stos
icebp
js
sarb
inc
push
cmp
xor
xor
shlb
mov
xor
scas
add
jo
stos
xor
pop
js
cmp
sbb
in
loopne
mov
push
xchg
add
sbb
mov
lahf
cmp
jle
pop
aad
mov
fcompl
add
ret
and
push
pop
sub
dec
mov
shr
xchg
mov
roll
sbb
xorb
jo
dec
test
aaa
shlb
mov
inc
lock
call
sub
cmp
fiaddl
or
repnz
cmc
test
xor
dec
push
out
movsl
jo
sbb
or
int
mov
cmp
inc
and
shll
aaa
repnz
and
enter
sub
ljmp
cmp
call
sub
js
test
xor
pusha
fstps
outsb
mov
shl
fidivrs
xor
and
ds
or
enter
sub
mov
cmp
adc
ds
push
mov
dec
sub
inc
adc
jno
xor
dec
sub
pusha
cwtl
xchg
rcl
and
fcomp
mov
jns
dec
clc
mov
mov
xor
adc
or
cmp
test
or
jo
inc
sub
and
leave
mov
dec
inc
popa
add
sub
sbb
lret
dec
push
mov
aad
cld
pop
xor
add
pop
mov
sbb
call
icebp
cmpsb
and
sub
mov
push
mov
insb
fiaddl
cmp
and
outsb
sub
mov
xor
mul
pop
iret
mov
adc
dec
xchg
dec
add
cmp
jl
jno
xor
jb
clc
jae
cmp
mov
pop
cmp
mov
fmuls
nop
push
dec
push
cmp
mov
test
and
sbb
lret
mov
sbb
fidivrl
jb
fildl
pusha
dec
cli
pop
call
rcr
and
mov
ret
lods
mov
nop
outsb
push
ret
xor
mov
push
xorl
cmp
call
popaw
add
mov
pop
pop
mov
lret
nop
dec
and
lock
pop
ret
dec
out
cmp
jns
mov
mov
and
cmp
call
fyl2x
or
xorb
in
push
mov
and
xor
dec
cs
add
imul
jecxz
or
add
jbe
clc
lret
push
mov
mov
pushf
add
mov
and
or
sbb
mov
xor
xchg
data16
jbe
rolb
mov
nop
xor
cltd
sub
fdivp
jge
and
cmp
leave
daa
pop
or
nop
cmp
stos
jl
mov
out
cmp
sub
and
idivl
insl
dec
push
mov
add
test
lahf
pushf
sbb
xor
xor
pop
jmp
cmp
mov
cmpl
xor
adc
call
xor
test
mov
xor
sbb
and
loopne
clc
pop
mov
push
lock
cmp
out
mov
mov
cmp
scas
dec
test
lea
and
push
add
xor
imul
jmp
push
jmp
std
test
mov
lock
cmp
repz
cmpsl
cmp
mov
popa
xor
lret
push
or
ds
fidivs
fsts
stos
push
cltd
nop
fidivl
fdivp
xchg
inc
sbb
cwtl
and
push
jae
adc
add
call
loope
inc
xlat
and
jle
mov
subl
and
adc
es
push
sbb
aam
xor
jno
pop
push
rorl
leave
scas
mov
lock
rorb
addl
divl
outsl
test
sub
jge
jmp
mov
jl
mov
pusha
enter
push
mov
rorb
fucom
pushf
nop
std
xor
lea
aas
xor
mov
shll
icebp
inc
into
xor
repnz
jo
adc
xor
popa
cmp
lcall
jg
jbe
mov
xor
cmp
int3
imul
jl
xor
pop
pop
fcoms
xor
insb
mov
lcall
push
dec
and
aas
cmpb
setl
lock
mov
pop
xor
and
mov
sub
or
icebp
pushf
add
out
dec
sub
jmp
mov
sub
xor
xor
pop
out
popa
cmp
xor
jae
ret
loopne
cs
push
jns
jb
adc
stc
mov
leave
cli
lds
test
mov
fsubl
cmc
cwtl
adc
jnp
jge
roll
clc
sarb
mov
dec
addr16
inc
cmp
mov
mov
xor
mov
cmp
and
or
imul
js
mov
dec
sbbb
ljmp
fadds
popa
rolb
and
push
data16
dec
mov
das
mov
cmp
or
jno
pop
mov
iret
pop
sub
sbb
mov
cmp
add
aam
scas
arpl
lret
xchg
loope
xor
and
leave
leave
sub
ret
xor
imul
out
xor
js
inc
sahf
jecxz
test
jl
jbe
xchg
mov
or
and
mov
sar
enter
and
mov
out
out
rcr
imul
dec
mov
mov
cs
fldl
xor
inc
xchg
repz
adc
and
xchg
test
cmp
popf
mov
xor
je
das
sub
xchg
and
out
mov
mov
cmp
inc
pop
aas
sahf
mov
and
add
mov
push
filds
mov
iret
add
fisttpl
push
jns
pop
xor
imul
fadds
aaa
mov
mov
cmp
cmp
cmp
mov
inc
sub
aas
or
xor
sbb
xor
cltd
push
daa
scas
movb
je
xlat
and
js
inc
or
add
gs
sub
dec
cmp
dec
sbb
push
mov
sub
je
pushl
test
sbb
shll
cmc
out
cmpsb
test
hlt
xor
lahf
mov
adcl
mov
jne
or
push
sub
js
inc
sub
adc
mov
movsl
cmp
test
std
dec
sub
sub
adc
sub
cmp
roll
mov
outsb
sti
imul
cmpsl
shll
add
cmp
stos
xor
insb
sti
in
mov
xor
jg
xor
inc
mov
sbb
sub
js
xor
xor
xorl
mov
adc
repnz
lret
movsb
mov
cld
jbe
xor
xchg
fnstcw
mov
mov
xchg
sbb
xor
cmp
neg
shrb
jle
mov
push
jp
add
sbb
pop
shrb
mov
and
pop
test
icebp
sub
fnstcw
pop
and
das
pop
and
inc
xor
xchg
pop
pop
dec
sti
sub
rolb
loop
cmp
or
fstpl
xchg
sbb
mov
movsb
aas
push
xor
lahf
jmp
pop
imul
xor
adc
jecxz
push
sub
mov
lods
or
xor
xor
sbb
mov
jbe
nop
xor
mov
aaa
pmuludq
test
mov
stc
nop
outsb
stc
addl
clc
pop
add
sbb
js
lcall
js
rcll
adc
mov
or
xor
outsl
add
dec
inc
mov
aam
pop
lock
outsb
jns
and
js
daa
adc
mov
outsb
pop
dec
adc
das
dec
push
lahf
mov
aam
push
mov
mov
mov
mov
push
mov
sbb
sub
inc
push
popf
mov
stc
dec
out
sub
mov
loope
es
outsl
imul
xchg
dec
push
jo
and
in
push
mov
sub
mulb
mov
pusha
pop
xchg
xchg
lahf
push
mov
pop
dec
xchg
mov
xor
sub
xchg
cltd
mull
push
inc
out
adc
push
dec
xorb
clc
aas
add
decb
sahf
out
mov
xor
jns
mov
hlt
gs
push
push
push
mov
fstps
pop
outsb
mov
mov
push
es
sub
ds
xchg
inc
xchg
or
popf
jbe
mov
sub
imul
mov
push
xchg
add
push
fcoml
icebp
jno
mov
fdivrl
xor
mov
xchg
push
jmp
and
push
sub
scas
outsl
add
push
cmp
adc
push
pop
sub
dec
xor
lahf
movb
mov
sbb
or
out
jae
adc
push
jb
cmc
xchg
cmp
push
and
divb
jmp
test
leave
push
aas
cmp
je
jo
cmp
js
cmc
cmpsl
xor
mov
addb
pop
push
cmpsb
inc
mov
push
dec
xor
ds
dec
mov
push
pop
scas
push
xor
jno
outsb
push
cmp
adc
pusha
push
jle
orb
push
fnstcw
das
ret
jb
cs
fsubrs
pop
lret
popf
lret
or
jae
add
leave
outsb
dec
aad
jnp
lahf
sbb
leave
int
add
mov
fadds
lahf
mov
jge
cwtl
mov
cmc
ds
or
cmpsb
push
dec
hlt
fldenv
add
mov
adcb
push
xor
push
sub
jo
ss
xor
mov
mov
sub
sbb
sub
pop
mov
xor
xchg
jno
sub
scas
xor
lods
icebp
mov
mov
xor
cmc
jo
test
sbb
jbe
lods
pop
sub
sub
jbe
lods
repnz
jmp
ss
insb
inc
test
sbb
jbe
adc
mov
leave
add
jbe
xchg
sub
pop
pop
push
movsb
dec
and
mov
mov
mov
sahf
pop
outsl
test
jbe
cwtl
xchg
dec
mov
xchg
xlat
test
shlb
movsb
lahf
mov
cmp
xchg
mov
push
popa
push
testl
es
fnstcw
or
cmp
lods
in
push
inc
cmp
mov
push
mov
xchg
or
mov
daa
aas
lock
mov
xchg
lds
int
lcall
dec
lcall
mov
dec
mov
mov
ja
mov
push
xchg
clc
ja
jno
jle
mov
ja
decl
xchg
daa
push
or
jg
pop
out
es
and
pop
inc
stc
dec
rcrl
adc
dec
mov
jle
hlt
add
mov
insl
jp
sar
sbb
pop
cmp
push
mov
add
je
and
or
push
dec
jl
insb
xchg
mov
loopne
pop
mov
mov
ljmp
sub
adc
shrb
xchg
push
pop
jmp
and
sub
aam
cmp
mov
mov
insl
sub
mov
xchg
rorb
pop
add
or
popf
insb
cli
jle
xchg
cmp
dec
xor
mov
fwait
sbb
jns
xchg
adc
dec
mov
mov
orl
mov
or
pop
dec
mov
lahf
icebp
ss
sub
inc
mov
addb
loope
pop
mov
mov
adc
test
js
stc
fidivl
lock
mov
mov
dec
pop
shrb
out
mov
lods
cmp
filds
iret
mov
pop
das
es
pop
mov
dec
add
cs
push
xchg
dec
xor
sbb
sahf
aaa
mov
push
push
push
jmp
in
ss
xchg
xchg
pop
scas
mov
sbb
aas
pop
xchg
jg
xchg
cmp
pop
ds
pop
dec
pop
dec
maskmovq
notl
cmp
inc
jnp
jg
or
pop
aas
dec
lahf
shrb
scas
mov
or
mov
mov
push
ljmp
mov
mov
clc
ja
lahf
daa
das
push
notb
dec
call
push
push
sti
jmp
lahf
dec
mov
les
in
fcoms
mov
fldenv
sysret
das
xor
mov
mov
stc
mov
cmp
xchg
cmpsb
sahf
outsb
ds
jnp
push
xchg
push
push
in
mov
adc
mov
dec
icebp
repnz
push
mov
xchg
loope
ss
ds
sahf
pop
negl
mov
pop
adc
or
es
ds
pop
jo
sahf
js
lcall
inc
rolb
xchg
mov
sub
sbb
int
clc
lock
sbb
movsb
sub
inc
inc
psllq
enter
lds
aam
and
and
lahf
pop
enter
jae
xor
sbb
bound
push
cmp
adc
ret
mov
lods
xchg
jbe
adc
aaa
mov
movsl
mov
les
arpl
ja
push
movsb
push
mov
rclb
ja
sbb
jne
cmpsl
xorl
lahf
mov
jno
xor
clc
mov
mov
push
sbb
add
cltd
iret
push
xchg
testb
es
sbb
jbe
imul
push
sub
and
popa
stc
jbe
cld
push
lods
and
fists
loope
fcompl
push
and
inc
or
sbb
inc
push
or
push
adc
shll
in
ss
mov
sbb
sub
dec
mov
cmp
push
mov
pop
fld
cwtl
and
orb
mov
loopne
sub
add
sarl
in
cmp
xchg
sbbb
add
mov
xchg
sbbb
cmp
and
push
aas
setbe
inc
cmp
mov
mov
out
cmp
pushf
aaa
dec
imul
aas
adc
sbb
push
test
inc
add
inc
push
push
in
push
mov
mov
repnz
fidivrl
sbb
gs
rolb
repnz
inc
push
loop
xor
dec
cmp
lds
das
pop
dec
add
cmp
insb
push
xchg
cmp
cmp
ja
icebp
mov
rcll
or
in
xchg
cmp
inc
adc
mov
push
test
cmp
adc
and
cmp
push
in
xor
jg
shrb
and
imulb
stos
push
sub
xchg
or
cmp
xchg
sbb
add
cmp
add
push
pop
jb
cmp
stos
lods
pop
outsb
xlat
cmp
jae
hlt
add
inc
cmp
pusha
les
dec
loop
cmp
fistpl
cmp
inc
call
sub
lret
inc
shrl
ss
cmp
adc
inc
push
dec
sbb
xchg
arpl
xchg
stos
jae
pop
add
sub
push
nop
xlat
test
out
and
inc
cmp
cmc
jns
push
sar
xor
push
shl
cmp
xchg
fsubrs
ss
xor
fimull
lods
push
lds
jo
sub
idiv
jb
xlat
xorb
daa
pop
push
lods
scas
bnd
cmp
aam
sti
repz
enter
inc
jo
imul
test
jnp
dec
aad
inc
icebp
mov
push
cmp
mov
jmp
and
icebp
filds
fdivl
out
scas
sub
fwait
popa
sbb
pop
scas
mov
test
clc
lret
mov
in
push
sbb
sub
mov
stos
pop
cmp
lahf
nop
cmp
mov
mov
and
mov
jecxz
dec
iret
aam
outsb
dec
adc
cs
cmpsb
mov
sbb
add
jmp
cmp
inc
sbb
cmp
push
scas
xor
push
xor
xor
inc
outsl
vmread
xor
out
add
stc
imul
add
pushf
scas
bound
js
in
cmp
or
sbb
mov
add
fwait
dec
inc
xor
cmp
adc
inc
dec
repnz
call
lahf
sub
out
iret
rcr
sub
dec
mov
push
lahf
mov
cwtl
and
xchg
cmp
mov
xchg
sbb
addr16
cmp
inc
dec
sub
cmp
adc
add
push
mov
sbb
or
cwtl
cmpsb
pop
sbb
and
cmp
out
adc
mov
scas
stc
sub
adcb
dec
mov
sahf
fnstenv
sbb
aam
jbe
sbb
in
iret
dec
iret
xor
dec
xor
cmp
cmp
xchg
pop
cmp
clc
cmp
mov
dec
pop
daa
inc
xchg
inc
sub
sti
sbb
orl
add
cmpsb
bound
lahf
xchg
inc
test
xor
fistpl
xor
and
pop
cmp
push
pop
dec
jmp
add
cmp
popa
mov
xor
movsb
loope
mov
stc
xchg
lods
sbb
into
xor
push
sbb
shrb
enter
cmp
add
sbb
icebp
xor
ret
cmp
insb
xchg
push
mov
mov
inc
adcl
push
shrl
in
push
cmp
mov
shl
jle
cmp
adc
loopne
loop
cmp
mov
loope
push
mov
cmp
fsubr
icebp
popa
push
dec
repz
cmp
lods
push
repnz
inc
or
xchg
shll
movsl
dec
lahf
sbb
cltd
mov
cmp
adc
dec
decb
sti
mov
jge
pop
mov
int
aam
je
pop
popa
bound
inc
cmp
adc
mov
dec
mov
cmp
fdiv
push
mov
ficoml
mov
cmpsl
loop
inc
mov
dec
data16
adc
mov
fmull
lods
xor
push
sub
dec
sarb
js
pushf
inc
cmp
shlb
push
xor
lods
jl
imul
test
add
scas
inc
cmp
xchg
pop
mov
mov
adc
cmp
jecxz
fisubrl
pop
enter
adc
bound
fcoml
cmp
mov
add
jp
out
orl
push
xor
fistpll
push
stos
fisttpl
mov
insl
cmp
inc
arpl
cmp
inc
mov
cmp
addb
adc
mov
nop
adc
mov
dec
cmc
xor
push
mov
push
cmp
mov
fs
and
fcmovb
adc
inc
dec
cmp
and
push
test
fwait
inc
scas
dec
ja
cmp
pop
inc
mov
sbb
pop
adc
xor
psubd
bound
jne
cmp
push
xor
push
das
sarb
test
fildl
add
scas
jg
ss
inc
and
cmp
ja
insb
test
loop
mov
and
mov
or
lahf
cmp
mov
adc
push
notb
inc
mov
in
sbb
enter
xchg
mov
fadds
cmp
xor
cmp
ljmp
jbe
pop
jo
mov
lahf
push
and
cmp
pop
mov
sbb
pop
inc
cmp
popa
scas
and
sti
dec
aas
das
add
rclb
push
cmp
fs
enter
leave
xor
adc
jbe
sub
inc
pop
fwait
mov
cmpsl
mov
adc
fistl
adc
jge
jo
jmp
mov
cmp
xchg
lds
xor
mov
scas
mov
xor
mov
mov
ljmp
cmp
and
mov
test
das
add
jo
mov
cmp
fdivp
sarb
ss
out
inc
xor
dec
fcmovne
add
jmp
pop
arpl
movsb
mov
inc
cmp
dec
cmp
push
mov
sbb
push
aam
xchg
add
jo
sbb
adc
sub
mov
pop
enter
dec
insb
mov
inc
cmp
jnp
inc
imul
inc
rcll
push
es
mov
jge
in
nop
cmp
out
inc
fldl2t
or
sbb
lret
inc
push
push
outsb
cmp
and
push
loope
xor
mov
mov
out
lods
aad
outsl
mov
mov
sub
pop
inc
cmpsl
mov
orb
xor
dec
jb
push
mov
and
fucom
pop
in
cmp
imul
lods
push
shl
jle
jae
jge
cs
sub
and
adc
pop
jne
cmp
das
in
xchg
cld
jle
jmp
sub
jne
cmp
xorl
cmp
sar
pop
push
cmp
outsl
aas
xor
and
pop
cmp
mov
cmp
add
call
cmp
sub
push
cmp
cmp
mov
rorl
xorb
mov
les
je
inc
mov
xor
into
lods
sub
mov
shl
cmp
dec
adc
mov
push
pop
cmp
test
and
inc
lret
jmp
inc
iret
jecxz
in
xchg
adc
loope
xor
scas
cmp
jo
xchg
jge
xor
push
inc
dec
add
cmp
and
sub
push
scas
cmp
xor
pop
jae
inc
mov
repz
cmp
push
pop
mov
mov
call
cmp
adc
and
insl
and
mov
scas
xchg
mov
jl
adcl
cmp
push
xchg
cmp
dec
pop
fwait
cmc
mov
adc
fsubr
fnsave
mov
xchg
cmp
push
int
enter
jo
cmp
adc
aaa
jg
cmp
push
stos
mov
loope
mov
call
mov
je
xchg
cmp
outsb
cltd
jbe
inc
and
lret
cmp
fsqrt
inc
inc
loope
rcrb
pushf
daa
jg
jp
xor
push
or
rolb
and
cltd
push
js
and
fcomi
inc
mov
push
cmp
fs
cmp
xchg
aam
es
cmpsb
mov
push
xor
cmp
or
pop
outsb
dec
dec
and
xchg
pop
sti
dec
popf
xor
out
mov
cmp
jle
and
inc
aaa
dec
xor
push
adc
fistl
icebp
and
call
hlt
das
mov
xchg
cmp
add
xor
mov
cmp
xchg
or
cmp
idivl
pop
add
cwtl
cmp
jb
add
mov
mov
cmp
jnp
pop
rcrb
mov
cmp
aaa
sub
in
iret
ljmp
sub
jge
xor
lret
mov
xchg
adc
dec
xor
add
sbb
push
shlb
lods
or
and
loope
mov
iret
cmp
nop
popa
mov
mov
adc
cmp
lods
jb
cmp
ss
push
add
inc
adc
jp
out
sbb
cmp
push
insb
arpl
sub
xor
dec
sub
daa
xor
rcrb
inc
jae
or
out
adc
push
test
pushf
aaa
mov
stc
je
cmp
cmp
xchg
xor
lea
fdivrl
je
and
dec
pusha
adc
rolb
aad
arpl
mov
jb
popl
jae
push
push
data16
xor
mov
mov
mov
cmp
inc
insb
xor
aas
addl
and
neg
ss
add
add
xchg
es
mov
or
cmp
xchg
cmpsl
push
aaa
mov
cmp
pop
mov
or
pop
add
jecxz
add
jae
cmp
fs
add
mov
repnz
outsb
fsubr
jns
sub
push
stos
ret
dec
test
vmread
repnz
mov
and
leave
lcall
insb
loop
mov
add
push
pop
filds
repnz
popf
add
mov
push
push
mov
mov
inc
push
pushf
adc
cmp
pop
ljmp
cld
shr
arpl
and
les
test
and
xchg
jl
sub
loopne
int3
xorl
push
shl
cmpsb
cmp
cmp
ljmp
outsl
and
aaa
popl
in
shlb
add
mov
ret
dec
jmp
popf
sbb
xor
loopne
insb
fildll
bound
iret
cmp
xor
jecxz
mov
dec
inc
mov
aaa
sbb
rcll
cmc
add
dec
xchg
ss
mov
rcrl
scas
jp
fidivs
stc
and
sbb
lcall
loop
andl
pop
or
and
mov
inc
das
or
adc
lcall
sahf
lds
jbe
dec
adc
cltd
sbb
pop
xchg
add
push
cmp
ror
jl
hlt
pop
inc
adc
inc
jns
movsb
adc
sahf
mov
mov
xor
icebp
xchg
ljmp
push
sbb
adc
mov
aad
out
add
test
mov
out
stc
aam
leave
xor
fnstcw
inc
cmp
xor
push
loope
pop
setbe
test
xchg
cmp
testb
aas
jmp
dec
std
imul
xor
cmp
pop
jle
pop
hlt
call
inc
lahf
pop
jnp
scas
cmp
or
jns
jp
pop
sbb
add
pop
inc
xor
pushf
fwait
mov
ss
push
test
or
lods
pop
cmpb
das
sahf
cmp
xor
cltd
pop
nop
div
cmp
fmul
ss
fisubs
cmp
or
ficoml
jne
mov
aaa
stos
cmp
add
push
cmp
imul
xor
stos
sti
cmp
repz
jo
out
data16
jge
cmp
push
inc
mov
sub
mov
jp
jge
in
and
xchg
sbb
mov
cltd
push
sbb
xor
jne
pop
cmp
in
std
push
xor
out
idiv
xor
mov
orl
movsb
inc
pop
pmovmskb
add
sbb
jno
imul
mov
lahf
sarb
jge
jo
cld
imul
jmp
popf
int
fdivl
and
in
cwtl
mov
fs
pop
or
xor
dec
add
cs
psrad
xchg
cmp
repnz
jne
inc
les
pop
lret
aaa
jbe
jo
in
inc
or
dec
mov
cmp
push
or
lcall
adc
adc
xor
xchg
pop
bound
adc
icebp
inc
inc
in
f2xm1
push
cmp
cmp
gs
ds
pusha
cmc
sahf
mov
push
decb
jne
jno
cmp
test
loope
inc
fistpll
mov
pop
add
addb
xchg
icebp
xor
or
mov
cmp
cmp
push
mov
and
cmp
cmp
insb
dec
and
push
sub
cmp
sbb
divb
mov
or
scas
mov
lcall
push
gs
popa
leave
cmp
das
mov
pop
cmp
mov
inc
stos
inc
shll
sahf
cmp
bound
in
inc
aam
mov
test
jp
sub
jae
mov
ss
and
add
leave
mov
stc
sbb
lret
ret
arpl
cmc
sbb
cmp
shrb
cwtl
push
dec
push
sbb
sbb
mov
xchg
or
inc
or
dec
pop
push
and
das
mov
cmp
add
arpl
jle
bound
cmp
or
cmp
or
jb
popa
adc
cmp
je
mov
xor
cmp
aas
clc
cmpl
xor
fldt
cmp
jle
xchg
add
outsb
fdiv
jne
pop
mov
movsl
xor
sub
out
into
pop
rcl
xor
leave
aas
mov
js
cwtl
mov
mov
jmp
xchg
mov
enter
cmp
stos
xor
sahf
xorb
xor
adcl
sarb
xchg
cmp
mov
push
xor
mov
ret
sub
lret
roll
push
cmp
int
cmp
into
fstps
notl
cmp
push
mov
outsl
jo
repz
inc
dec
pop
mov
sbb
cmp
or
cmp
jge
jb
iret
cmpsl
sarb
push
cmp
test
xchg
add
in
stos
cmp
mov
and
sbb
mov
loope,pn
pop
xor
mov
js
shlb
lret
xor
pushf
daa
fadds
jne
lcall
lahf
xor
subl
data16
xor
inc
lods
adc
add
cmp
das
inc
cmp
pop
cld
sub
mov
call
push
xchg
cmp
sub
push
cmp
int3
lret
int
lahf
jo
cmp
scas
shlb
subb
cmp
cmc
pop
push
scas
add
loop
jae
adc
fmuls
in
or
inc
fwait
inc
xor
inc
dec
out
mov
cmp
mov
in
push
fistpll
mov
arpl
lahf
jae
xor
fld
cmp
std
aam
mov
jge
xchg
inc
hlt
pop
shrl
and
ror
cmp
cmpsb
scas
pusha
in
cmp
adc
pop
pop
add
add
xor
jmp
xor
and
push
out
pusha
enter
inc
jne
xor
cmp
fidivs
lods
lret
pop
xlat
cmp
adc
mov
adc
scas
adc
loope
in
fcmovb
fiadds
sbb
lods
fistpl
lock
pop
jl
xchg
push
inc
jg
enter
ss
out
out
in
mov
ljmp
inc
pop
push
add
adc
ss
stc
dec
cmp
jle
sub
pop
sub
dec
shr
pushf
out
cmc
cmp
fs
sbb
mov
or
pop
xchg
sub
outsb
rcl
iret
add
clc
hlt
pop
gs
insb
test
dec
fs
cmp
or
fldl
pop
std
push
sub
scas
xor
cmp
std
insb
cmpb
or
in
cmp
pop
cs
pop
adc
es
das
cmp
mov
fmuls
addl
ja
dec
ret
test
and
outsb
push
dec
repz
movsl
imul
cmp
flds
lds
cmp
and
popa
out
push
cmp
subb
aam
xor
or
or
rorb
mov
fiaddl
pop
outsb
xchg
mov
cmp
sub
cmp
jns
sub
and
jne
adc
push
lods
sbb
sbb
add
sbb
test
sub
push
mov
xor
popl
lret
push
lock
inc
popaw
cwtl
std
or
xor
jecxz
cmp
mov
dec
adc
lret
movsb
inc
loope
js
jnp
dec
mov
into
xchg
cmp
enter
out
cmp
aaa
jnp
roll
and
imul
jl
aad
cmp
mov
xor
stos
add
test
cmp
lret
cs
sub
cmp
cmp
lea
dec
dec
repnz
sub
ja
mov
pop
jb
inc
jnp
adc
inc
das
xor
dec
imul
cmp
push
pop
insl
jge
xor
fbstp
fcompl
cmp
and
cli
sbb
arpl
cmp
loopne
fstl
mov
adc
xor
insl
xchg
stos
mov
xor
xor
xor
andb
sti
cmp
clc
shl
push
lods
xchg
mov
mov
cmp
popf
cmpsl
insb
fsubs
and
cmp
clc
inc
push
cld
push
addr16
sbb
and
mov
lds
pop
cmp
call
jl
and
movsl
sub
fists
cld
ror
or
xor
sti
rcl
bound
sbb
cmp
push
inc
fdivs
sub
loop
xchg
mov
cld
mov
aam
idivb
or
gs
test
xor
fs
je
mov
mov
pop
xor
dec
and
sbb
xor
xchg
mov
pop
das
jl
or
nop
lds
add
push
cmp
mov
test
mov
mov
jo
cmp
in
jle
aas
push
cmp
xor
pop
and
loopne
pop
pop
or
popa
cmpb
cmp
xchg
xor
mov
push
cmp
jb
or
lret
fcomp
into
loope
lret
pop
xchg
cmp
test
fldenv
out
jl
aad
adc
clc
inc
mov
pop
lret
stc
inc
in
out
cmc
and
shlb
and
je
sub
test
push
movzwl
cmp
push
stc
out
lods
movsl
xor
sbb
in
mov
shl
insb
pop
call
pop
xchg
aam
arpl
adc
pop
sbb
dec
jge
fsub
int
cmpl
push
mov
popa
sub
cmc
pop
xchg
fnsave
jmp
movsb
fsts
adcl
inc
fwait
cmp
pushf
push
in
jbe
insl
cmp
add
jp
inc
pusha
sub
jle
ss
pop
xchg
sub
shrl
movsl
xor
inc
pop
adc
ss
js
push
dec
push
outsb
push
aaa
sub
and
in
cmp
lret
jl
and
test
gs
insl
inc
add
mov
pop
loope
jbe
incb
mov
les
adc
cmp
add
xchg
mov
cmp
sub
and
xor
and
bound
iret
mov
stos
nop
clc
outsl
pusha
idiv
fadds
lahf
sbb
sbbl
add
cmp
int3
cmp
repnz
xchg
cs
xchg
clc
cmp
dec
icebp
lcall
dec
add
fwait
cmp
mov
adc
bound
mov
sub
ss
imul
mov
icebp
push
add
push
add
cmp
stos
outsl
ljmp
mov
jne
mov
cmp
in
jns
and
mov
movsl
sbb
js
push
sub
push
rep
cmp
xchg
testl
in
cmp
fnstsw
or
insl
xor
dec
mov
xchg
rcrl
aaa
xchg
inc
dec
call
mov
out
mov
push
and
adc
cmp
ss
dec
cmp
pop
dec
lods
leave
into
dec
idivb
mov
insb
mov
rolb
push
mov
loope
cmp
or
dec
sbb
call
fcoms
lods
loopne
pop
mov
sub
in
pop
popa
dec
stos
and
loope
cli
xor
call
cmc
mov
or
cmp
es
adc
movl
or
mov
cmp
xor
jns
shr
popf
mov
cmp
dec
push
add
fsubrs
scas
jnp
cmp
inc
pop
inc
xchg
mov
aam
pop
inc
test
xchg
push
jecxz
mov
jg
pop
cmp
testb
mov
pop
sbb
lods
jmp
or
mov
pushf
insb
stos
cmc
and
xor
jge
lea
out
jbe
cltd
push
mov
xor
dec
xchg
or
out
loopne
pop
js
vandps
push
jnp
dec
ja
sbb
cs
mov
lcall
in
out
icebp
adc
fidivrs
insb
divb
enter
sub
loope
mov
sbb
dec
or
test
jl
xor
xlat
roll
push
fdivrl
adc
push
cs
jne
inc
mov
and
sbb
shl
and
and
xor
adc
xorb
lcall
push
in
cmp
lock
or
ss
mov
repnz
in
les
imul
inc
pop
adc
xor
test
push
sub
inc
xor
adc
cli
dec
jecxz
mov
sbb
dec
gs
cmp
xor
aaa
cltd
mov
imul
in
mov
jbe
es
xor
loope
ret
outsb
jnp
xchg
pop
shl
adc
pushf
call
pop
cmp
cmp
sub
les
sub
lahf
std
push
dec
cmp
lcall
repz
and
fsubrs
xchg
ss
mov
dec
lods
test
push
and
add
push
lock
add
jp
jge
inc
daa
add
mov
int3
inc
push
imul
mov
cmp
bound
jnp
xor
imul
mov
cld
push
outsb
pop
fcompl
or
cmc
jne
push
jb
inc
mov
xor
hlt
out
pop
jae
push
shlb
and
xor
and
adc
add
lods
addl
dec
dec
icebp
inc
sbb
xor
and
mov
add
xor
ds
lahf
pop
inc
je
cmpsb
cmp
inc
outsb
dec
cmp
bound
rol
popa
cmp
jmp
jge
xchg
push
mov
add
rcrb
shll
xor
jns
cli
jnp
mov
cmp
lahf
ret
int
in
mov
ss
aas
mov
pop
cmp
emms
imul
lcall
dec
mov
jl
dec
mov
jb
adc
and
ret
cmp
mov
sbb
jne
cmp
push
cmpsl
rcr
add
cmp
imul
arpl
rcr
adc
iret
dec
xor
loopne
push
mov
cmp
mov
imul
icebp
in
cmp
daa
jae
mov
scas
mov
cmp
dec
sub
cmp
mov
clc
or
xor
into
adc
fdivs
dec
xchg
push
push
pop
pop
add
push
call
cmp
inc
insb
and
cmp
ss
push
jp
repnz
mov
outsl
inc
out
sub
fwait
lds
xorl
jmp
cld
test
imul
in
jmp
clc
mov
lock
dec
jp
push
mov
movsl
iret
lret
fldenv
out
xor
xor
lahf
clc
jecxz
inc
stc
daa
addr16
sbb
xor
imul
sub
jg
cmp
mov
xor
inc
stos
jl
hlt
lcall
mov
jo
ss
dec
lret
enter
xor
xchg
push
stos
cmp
push
fisttpl
jmp
cli
insl
push
sahf
adc
jb
xor
rorl
rorl
push
and
adc
addr16
xor
xor
test
inc
cltd
jo
js
cmp
pop
mov
inc
fiaddl
inc
in
outsl
pushf
xor
fdivp
cmp
cmp
mov
add
add
xor
sbb
inc
jp
mov
sub
call
test
fs
aam
push
ljmp
pop
sbb
or
adc
pusha
dec
hlt
int3
push
les
movsb
xor
nop
or
xchg
fucomip
push
add
cmp
pop
dec
mov
and
fcmovnu
movsl
sahf
push
jae
stc
cmc
fmuls
xor
adc
or
cmp
shlb
mov
mov
xchg
mov
or
xchg
inc
hlt
jle
push
pop
dec
cmp
xor
cmp
lods
orb
cmp
xor
push
mov
arpl
mov
and
mov
dec
push
lods
cmp
pop
jbe
xchg
xor
cmp
jl
inc
add
xchg
mov
xor
push
inc
xchg
mov
push
hlt
pop
fiadds
cmp
and
mov
xor
cltd
mov
ja
fcoms
test
jno
vcomisd
cli
mov
cmp
sub
push
in
call
adc
decl
cmp
xchg
pop
cltd
cmp
sub
addr16
mov
xor
mov
std
and
js
and
mov
jmp
or
xchg
je
xchg
add
mov
incb
cmp
idiv
cmp
shrb
out
lcall
fwait
mov
jmp
ljmp
cwtl
push
cmc
xchg
stc
xor
repz
add
cmp
push
fisttpll
jnp
inc
cmp
ss
and
cli
xor
fdivrl
sub
push
cmp
add
fnstsw
xor
jg
fistps
ret
out
and
mov
sub
loope
sbb
inc
cmp
and
xchg
je
js
clc
cmp
jns
mov
icebp
jmp
jae
aas
sarl
rorb
in
imul
mov
lock
push
cmp
mov
adc
sbb
push
push
add
outsl
pop
jns
shlb
cmp
inc
cmp
jo
sarb
ret
sub
nop
popf
cmp
ljmp
push
mov
xor
outsl
cmp
xlat
test
in
aam
cmp
pushf
test
in
mov
add
cltd
daa
jle
sar
lods
adc
scas
sti
add
inc
mov
cmp
les
fs
mov
push
xchg
dec
mov
repz
mov
cmp
dec
jmp
fmuls
pop
ss
or
dec
fistps
jae
in
cmp
cmp
test
push
sub
loope
cmp
push
xchg
sarb
and
sub
shlb
sarl
imul
in
jp
or
fisubs
mov
xor
iret
loop
jo
or
mov
aam
sub
mov
roll
call
sub
add
dec
adc
lcall
dec
fdivrl
pop
add
adc
cmp
dec
inc
adc
dec
mov
fs
push
push
jmp
jbe
out
sbb
push
adc
inc
and
dec
fimull
hlt
cltd
jecxz
jae
add
dec
je
mov
cmp
mov
cmp
popl
adc
jae
fsub
mov
pop
or
stos
xchg
xor
fwait
add
sub
loop
cmp
enter
shll
cld
leave
mov
popa
cmp
pusha
aaa
and
das
dec
push
jecxz
xchg
cmp
mov
jmp
xchg
and
xchg
mov
clc
mov
out
popa
cmp
lret
icebp
cwtl
repnz
loop
xor
test
cmp
repz
cmp
pop
out
inc
arpl
nop
jnp
sub
repnz
xchg
movsl
and
pop
fdiv
stc
sarb
cld
out
mov
ds
test
cmp
fmull
insl
subl
ss
stos
pop
lds
enter
jle
mov
add
sub
outsb
pop
test
aaa
mov
scas
dec
sti
aas
js
cmp
leave
outsb
xchg
mov
xchg
sub
xchg
data16
or
ret
testb
fwait
mov
xor
in
mov
iret
jmp
clc
sbb
lcall
das
lods
repnz
cmp
dec
popf
ja
inc
sbb
dec
pop
lcall
and
push
mov
cmp
int3
pop
jmp
xchg
inc
jb
sarb
cmp
add
sub
push
es
pop
lcall
cli
loop
push
loope
les
pop
cmpsl
aam
xor
xchg
add
jne
ljmp
rclb
cmp
test
mov
movsb
xor
sbb
aad
sbb
out
xor
lea
dec
das
loope
cmovb
mov
inc
cmp
inc
cmp
mov
stos
fabs
and
nop
std
loop
jne
pop
or
pop
xor
cmp
pop
adc
cmp
inc
pop
fdivrp
fdivrl
lods
mov
cmpsb
dec
adc
cmp
mov
mov
rcl
xchg
xor
idivb
insl
adc
fsubr
ds
pusha
and
shl
or
push
add
bound
sbb
inc
push
push
inc
pusha
or
and
aas
cmp
outsb
add
cmp
inc
dec
add
sub
or
and
or
or
sbb
mov
dec
cmc
popf
imul
outsb
ss
push
aas
inc
ficoms
jp
push
mov
dec
push
pushf
inc
sub
cmp
shrb
in
mov
inc
inc
leave
icebp
aas
cmc
and
add
or
adc
out
jo
sbb
cltd
xor
push
int
les
mov
addr16
movsb
fidivs
outsl
sub
pop
inc
sti
pop
mov
aam
insb
das
dec
aad
jecxz
test
loopne
mov
cmp
test
jb
loopne
or
insb
push
add
stos
mov
test
pop
fs
xchg
imul
push
ja
jp
xchg
xor
sub
insb
idivb
adc
pop
fistpll
das
in
mov
aad
lret
fisubrs
lahf
cmpsl
jl
sar
movsb
jnp
mov
and
fwait
cmp
mov
dec
xor
mov
xor
cmp
jo
mov
xchg
xchg
popf
adc
cmp
push
roll
fcoms
pushf
xor
jmp
repnz
cld
sbb
fmull
mov
jae
mov
sbb
cli
mov
cmp
xchg
jae
daa
into
out
cmp
mov
les
ret
hlt
add
xor
push
and
lods
stos
bound
push
mov
clc
xor
jmp
repnz
cli
cmp
xor
mov
cmp
or
aas
pop
in
iret
cmpsl
inc
push
pushf
cmp
push
mov
loope
push
sub
fmull
sub
lahf
or
scas
ss
inc
stc
call
dec
ljmp
xor
add
aas
sahf
repnz
lock
mov
popf
in
or
add
xor
mov
adc
xchg
sarl
cmp
aaa
xor
adc
cmp
mov
or
xlat
dec
cmp
arpl
rcrl
shlb
add
dec
cmp
or
jge
add
mov
cmp
imul
inc
and
pop
mov
mov
jle
adc
add
ficomps
cmp
sti
lods
mov
cmp
sub
or
fmull
push
ret
pop
and
mov
shll
sub
mov
loope
xor
je
shrb
mov
sbb
roll
pusha
ret
aaa
pop
fidivl
add
ja
jns
movsl
mov
jo
fwait
out
cmp
cmp
paddq
std
xchg
jne
dec
mov
out
gs
cmp
sub
mov
xor
scas
sahf
cmp
fiadds
int3
clc
mov
lret
dec
jmp
adc
jb
fcoml
cmp
sbb
xchg
add
push
or
imul
mov
insl
stos
pop
test
mov
jmp
pop
outsb
fisubrl
cmp
scas
loopne
adc
push
sbb
sbb
lret
mov
inc
sbb
jmp
cmp
out
sahf
mov
jp
subb
and
jg
xchg
mov
aad
fiaddl
xor
and
cmp
add
jae
sbb
mov
cmp
push
dec
push
jge
add
add
loop
xor
sbb
mov
cmp
es
cmp
or
dec
push
int3
cmp
das
cmp
arpl
sti
xchg
mov
loope
push
xor
jge
ret
sub
scas
mov
and
xchg
mov
mov
stos
repz
fnstsw
in
or
int3
cmp
in
cltd
inc
call
add
adc
aas
cmp
sub
dec
sti
dec
dec
sbb
enter
push
jbe
inc
aas
cli
xlat
cmp
or
scas
cmpsb
shrl
lret
cmp
dec
loopne
jo
fists
cmp
jne
adc
das
mov
sub
arpl
fs
xchg
or
and
push
adc
sbb
xor
gs
and
jbe
jp
fsubs
icebp
xor
hlt
out
insb
int
jg
cmp
or
xchg
je
push
cwtl
mov
nop
adc
mov
push
out
cmp
aam
out
cmp
cmpsl
xor
dec
das
out
cwtl
mov
mov
lock
sub
mov
adc
push
pop
insl
repnz
mov
and
pop
dec
leave
out
fdivs
aad
in
fidivs
sub
sbb
dec
xor
jae
enter
aaa
jle
icebp
insb
mov
lcall
shlb
popf
xor
jae
mov
ja
jecxz
cmp
cmp
imul
mov
jae
inc
imul
and
es
cmp
cs
inc
mov
int
cmp
popf
test
xor
adc
roll
sbbl
cli
dec
xor
sbb
jge
movsl
js
add
cld
je
push
cmp
jg
xor
mov
shl
addr16
mov
mov
and
pop
mov
cli
repnz
es
add
mov
cmp
push
sahf
ret
jge
add
imul
imul
mov
popf
sbb
cmp
jp
add
cld
xor
mov
add
pop
push
inc
inc
xor
leave
lahf
ret
cmp
push
into
and
sub
std
jmp
pop
in
fcmovnu
call
xor
inc
mov
mulb
cmp
xchg
xor
mov
add
inc
xor
sbb
bound
inc
mov
cmp
xor
leave
cwtl
or
ja
ret
dec
aaa
push
call
fidivs
frstor
cmp
mov
xor
push
mov
cmp
imul
push
cli
add
in
jns
mov
push
mov
cmp
out
outsl
out
push
cli
cmp
icebp
fs
jl
cmp
loop
pop
jbe
cwtl
dec
dec
js
xor
jmp
and
mov
popa
inc
lea
mov
xchg
cmp
int
lods
dec
aas
jmp
cmp
int3
mov
xor
cmp
aam
inc
mov
adc
scas
imul
and
bnd
mov
shl
mov
addr16
adc
test
in
xor
nop
xor
jae
cmp
ret
cmp
xchg
add
cmp
cmpsl
sbb
mov
fcmovnbe
cwtl
sub
inc
shlb
push
mov
test
mov
mov
pop
pop
pop
cmp
jl
sahf
xchg
in
cmp
bound
sbb
mov
push
mov
cmp
ja
cmp
cwtl
int3
cmp
mov
mov
aad
fidivrs
icebp
jae
jo
int
nop
cmp
in
pop
cmp
loope
int
push
std
jo
loop
jp
xor
out
adc
sar
out
sbb
sub
cmp
jo
jne
add
pushf
adc
cmp
adc
inc
inc
dec
xchg
cmp
fidivrs
sub
xor
jb
shlb
push
adc
cmp
insl
jge
cmp
pop
push
xchg
push
ret
push
cmp
sub
cmp
cmp
mov
aad
mov
std
dec
out
stos
je
inc
cmp
or
dec
shrb
cmp
dec
fwait
adc
inc
inc
cmp
inc
jg
cmp
jle
or
xchg
cmp
addl
cmp
pop
imul
mov
push
mov
nop
xchg
mov
xor
inc
sbb
sub
mov
aaa
mov
pushf
pusha
cmp
inc
addr16
jae
cmp
mov
xchg
cmp
mov
lods
repz
cmp
sub
push
leave
dec
cmp
shl
or
push
or
mov
pop
jg
inc
xchg
mov
lret
xchg
inc
enter
call
sti
xor
add
pop
daa
xor
iret
jbe
loope
repnz
xchg
aad
xchg
dec
inc
out
inc
fs
adc
add
sub
or
ds
push
repz
mov
enter
jp
mov
ds
cmpsl
pop
mov
cmp
mov
test
mov
or
cmp
inc
sti
and
mov
dec
mov
push
cmp
push
outsl
xchg
sbb
xor
pop
or
pop
imul
scas
jne
adc
popf
js
inc
push
jns
idivl
shrb
xchg
sub
cmp
aas
andb
rol
adc
sbb
cmp
fidivs
cli
call
xchg
dec
dec
cld
mov
out
addb
push
cmp
push
jge
cmp
dec
pop
cmp
and
push
test
das
jg
mov
cmp
mov
cmpsb
addr16
xor
adc
or
cmp
cltd
and
cmp
inc
cmp
aad
out
outsb
push
mov
cmp
and
push
imul
out
pop
pop
push
cmp
sbb
in
and
fcmovu
add
mov
je
mov
sub
mov
push
dec
inc
mov
stos
rolb
int
in
cmp
mov
jns
jno
mov
dec
xchg
or
flds
pop
push
leave
orl
outsl
dec
add
cmp
loop
add
out
fisttpl
dec
inc
mov
cmp
and
cmp
daa
lods
or
mov
dec
pop
pop
add
lcall
cmp
inc
add
sbb
jp
cmp
adc
shll
inc
push
push
ds
stc
mov
inc
fwait
push
dec
xchg
dec
movsb
pop
cltd
divl
add
gs
jns
push
pop
mov
mov
in
and
insl
aam
mov
xchg
cmp
cmpl
fists
mov
sub
dec
xor
xor
or
gs
xor
xor
mov
mov
cmp
push
cmp
fmull
pop
sbb
cmp
insl
insb
rorb
enter
and
xchg
aad
shll
outsl
dec
push
inc
cmp
addr16
mov
shlb
les
or
int
adc
push
in
stos
add
cmp
fld
cld
cmp
sahf
mov
cmp
pop
xor
pop
push
jne
loopne
iret
xor
xchg
mov
cld
xlat
test
and
cwtl
push
clc
push
stos
sub
movsb
mov
sub
pop
cmp
popf
sub
cmp
mov
jle
les
fstpt
cmp
inc
and
cmp
orl
lods
pop
fbld
cmp
das
xchg
imul
lds
cmp
pop
xor
or
enter
ss
add
jg
cmc
pop
and
xor
xor
push
jne
mov
fnsave
mov
xor
rol
xor
jmp
and
int3
std
sub
imull
mov
inc
adc
or
sti
sbb
pop
out
iret
ss
mov
test
cmp
push
test
mov
cmp
xor
mulb
sbb
lock
dec
sbb
mov
scas
mov
sarb
bound
xchg
icebp
mov
out
xor
add
aas
xor
jg
shl
shlb
inc
test
lahf
das
mov
xchg
stc
cmp
decb
fcompp
jg
and
mov
insl
test
xchg
jle
daa
sub
pop
addb
pop
out
and
cmp
push
call
jns
xchg
or
les
pop
in
cltd
pop
sarb
cli
movsl
in
gs
sub
rcr
add
jge
and
cmc
test
inc
aam
dec
cmp
mov
shrl
lcall
push
insl
pusha
es
and
roll
pop
xor
jle
pop
jg
push
mov
or
dec
dec
cmp
add
mov
sub
inc
mov
cmp
iret
add
inc
jne
jb
hlt
push
or
jnp
jmp
pop
sub
jns
cmp
xlat
push
scas
pop
xor
mov
and
jge
cwtl
inc
and
pop
cmp
xchg
fdivl
cmp
test
dec
jge
mov
mov
dec
sub
pushf
push
mov
xor
ds
fidivrs
jo
push
shl
cmp
inc
pop
xchg
rorb
loopne
clc
scas
es
inc
adc
mov
xchg
test
int
scas
lcall
mov
shlb
idivb
add
lret
push
les
adc
and
mov
dec
cmpl
sbb
fisubl
jne
sub
aad
xchg
rcrl
lods
fs
imul
hlt
jecxz
push
adc
mov
inc
fucom
xor
cli
insb
push
mov
divl
jg
pop
jle
xor
push
test
insl
cmp
and
or
push
fsubrl
cmp
add
in
and
sbb
in
cwtl
or
mov
adc
popf
sub
outsb
mov
mov
xor
in
mov
cltd
rcrl
cmp
test
xor
daa
and
dec
xchg
hlt
cmp
outsb
js
shl
leave
rclb
fs
pop
cmpl
repnz
cmp
jg
cmp
mov
push
jle
jmp
aaa
in
cwtl
mov
pop
cmp
stc
pop
lods
subb
bound
inc
ss
outsb
cmp
setle
or
adc
mov
lret
push
lea
dec
pop
add
call
inc
or
or
addr16
repnz
pop
aam
push
mov
inc
out
pop
pop
sahf
mov
enter
cmp
xchg
mov
add
cmp
sahf
or
sub
inc
loop
push
push
lods
inc
loope
rorb
or
add
push
in
cmp
fists
xchg
dec
scas
sub
jne
adc
popa
xor
daa
jmp
loop
out
and
and
addr16
push
xor
xor
mov
jge
test
mov
cmp
and
and
mov
cmp
in
jle
and
out
loope
ja
loop
mov
rcpps
stc
xchg
mov
dec
jnp
scas
mov
aaa
xchg
xchg
je
mov
cli
cmp
dec
fcomp
mov
push
cvtdq2ps
xlat
mov
inc
inc
add
cmp
ja
cmp
jp
push
ret
stc
int3
xlat
sbb
dec
popf
mov
loope
lret
lods
ss
jo
cmp
shl
outsb
fwait
inc
cmp
fcomp
stc
pop
lods
icebp
addr16
decb
inc
loop
aad
lea
leave
adc
mov
test
dec
cmp
push
enter
cmp
lea
mov
jb
nop
xlat
mov
cmpsb
mov
and
adc
and
or
sub
fdivr
push
aad
pop
daa
cmp
mov
mov
sub
aam
push
xchg
add
xor
fcompl
int
and
mov
bound
xor
jp
aas
xchg
sub
lahf
lds
mov
cmp
xchg
cli
and
lods
jmp
dec
stc
mov
roll
xchg
fdivrl
pop
jmp
jl
cwtl
pop
jnp
cmp
dec
jp
hlt
dec
sbb
pushl
sbb
or
sub
aam
int
jne
xor
mov
sub
popf
arpl
dec
push
inc
mov
out
jg
cmp
push
icebp
nop
jl
cltd
fcomps
and
sbb
rol
mov
adc
insl
adc
aam
xor
das
adc
adcb
xorb
dec
inc
cmpsl
ljmp
push
in
fucomip
pop
stos
cmp
push
aas
nop
out
xor
mov
mov
pushf
loope
xchg
idivl
sub
arpl
cmp
pop
sbb
xchg
add
cmp
or
sbb
repnz
xor
mov
mov
movsl
mov
repnz
cmp
jg
cmp
arpl
cmp
cwtl
aad
inc
jl
mov
sub
xor
pop
add
movsl
jmp
inc
jb
xorb
lcall
pop
or
mov
sarb
ljmp
adcl
adc
push
and
sahf
lock
inc
add
jo
repz
loope
clc
cmp
fdivp
mov
int3
decb
jns
je
cmp
iret
mov
adc
jle
movsl
in
sbb
add
xor
mov
movsl
xchg
cmp
mov
adc
pop
adc
push
adc
push
cmp
jl
fiaddl
cmpsl
add
pop
mov
outsb
rclb
dec
xchg
inc
fidivrl
xor
aaa
dec
pop
repz
xchg
and
lret
push
rolb
repnz
in
outsl
notb
cltd
adc
lret
adc
jnp
cwtl
jmp
aam
add
xchg
hlt
fwait
in
pop
cmp
adc
mov
mov
and
cmp
xchg
sarb
lock
sbb
sbb
xchg
xchg
sbb
outsb
jne
push
mov
ja
cmp
hlt
imul
xor
std
test
push
xor
cmp
js
xlat
push
mov
enter
shrl
call
das
lcall
jbe
dec
mov
movsb
aas
dec
dec
ret
lods
inc
xor
repz
mov
cmp
movsl
mov
fbstp
cmp
hlt
mov
inc
enter
mov
mov
xor
inc
addr16
scas
jnp
mov
dec
pop
adc
cmp
push
outsb
aad
inc
stc
sub
jmp
scas
add
pop
shrl
push
jnp
nop
jge
nop
test
cmp
in
enter
cmp
jl
jns
inc
cmp
iret
sbb
dec
push
imul
push
mov
ret
cmp
dec
push
jg
les
and
push
out
adc
add
rolb
sub
or
cmp
cmp
mov
xchg
cmp
and
enter
cmp
popa
mov
retw
mov
sbbl
shlb
xor
insl
cmp
es
roll
stos
ret
cmp
cmpsl
dec
or
xor
push
jge
jp
test
dec
xchg
or
out
stc
lcall
movb
xor
clc
xor
and
das
pop
inc
inc
sub
lods
cmpl
pop
add
cmp
jae
or
shll
mov
dec
xchg
pop
movl
jge
xchg
pushf
xor
jns
xor
mov
gs
inc
ret
ficomps
jg
int3
mov
call
loop
cli
pop
mov
cmp
lea
stc
pop
imul
or
rcrb
jl
cmp
inc
gs
ss
inc
mov
inc
and
inc
sbb
or
arpl
xor
cmc
push
pop
sbb
jle
mov
cmp
cmp
dec
scas
cmp
dec
mov
and
and
cmp
jg
mov
sar
mov
cmpsl
pop
pop
cmp
dec
repnz
mov
jo
adc
cmp
push
enter
and
or
aam
cmp
scas
inc
push
insb
stos
inc
sub
call
cld
mov
out
mov
mov
stos
mov
pop
cmp
psrld
pop
pop
xchg
push
shrl
movsb
cmp
sub
testl
mov
sbb
sub
mov
cmp
std
mov
mov
jb
je
mov
decl
iret
test
nop
xchg
mov
fnsave
push
je
cmp
mov
add
idivb
fldenv
jg
lret
pop
and
push
inc
lret
xor
insb
or
fmuls
call
xchg
dec
imul
mov
sub
or
pop
xchg
insl
push
fmuls
cmp
cltd
xchg
xor
pop
xchg
outsb
pop
in
xor
ljmp
mov
je
sub
test
jno
mov
mov
adc
add
sub
cmp
cli
lret
mov
idiv
inc
cmp
pushw
int3
mov
ltr
sbb
dec
aaa
jns
xor
mov
ja
pushl
call
subl
push
push
pop
mov
shrb
jns
push
mov
out
cmp
pop
cwtl
mov
cmp
or
in
imul
stc
in
and
sub
clc
cmp
xchg
scas
ljmp
or
int
imul
in
cmpsl
xor
fs
mov
add
push
in
rol
hlt
xor
testb
push
mov
daa
pop
cli
push
xchg
cld
out
cmp
sub
insb
sbb
sub
scas
cmp
mov
std
sub
mov
jo
or
das
and
js
jo
inc
mov
inc
pop
nop
add
fisttpl
jne
cmp
push
mov
pop
or
inc
mov
cmc
push
insl
adc
xor
mov
jnp
addb
dec
xlat
xor
pop
movsb
loop
or
adc
popf
pop
inc
mov
and
and
repnz
loopne
jge
into
flds
bound
cmp
mov
int3
inc
xchg
and
mov
and
fidivrs
dec
sub
push
xor
pop
enter
cmp
outsb
xor
jbe
inc
push
ror
mov
adc
push
xchg
pop
cmp
and
cmp
mov
push
neg
aas
mulb
xor
pop
jne
push
cmp
lds
or
insl
xchg
je
inc
pop
sarl
xchg
xor
int3
test
pop
cltd
pop
push
push
mov
xor
mov
ss
cmp
inc
sub
aad
mov
xor
push
int3
cmp
xlat
std
and
in
or
push
shr
loopne
xor
pop
movb
mov
pop
rclb
xor
jecxz
mov
jp
out
mov
flds
push
cmp
push
lahf
stos
cmp
mov
dec
xlat
cmpsb
sbb
scas
in
icebp
adc
fbld
fdivrs
mov
pop
mov
and
lahf
out
cmp
pop
repz
sub
lret
sbb
xchg
mov
add
mov
push
aaa
sbb
imul
sub
jecxz
cmp
and
push
push
push
cmp
in
test
fs
jmp
lods
push
cmp
mov
add
jecxz
cmc
das
mov
inc
shlb
sbb
mov
sahf
lock
mov
sbb
aaa
test
cmp
cmc
jp
cmp
lret
inc
fstp
stos
cmp
cmc
mull
fsubl
mov
sbb
fdivr
cmp
cmp
or
mov
cmp
js
xor
shrl
or
sbbl
fstl
stc
cmp
rorl
jbe
cmp
jnp
stos
hlt
fdivr
sub
or
cwtl
mov
inc
mov
xchg
pop
fbstp
cmp
cmp
mov
pop
jp
hlt
mov
dec
dec
add
cmc
mov
dec
inc
xchg
lods
pop
cmp
add
int
cmp
pop
das
fistps
addr16
push
sub
cwtl
aaa
xchg
pop
cmp
cmp
push
roll
xchg
sbb
xor
or
daa
out
add
out
out
rcrb
sub
stc
fcomps
cwtl
mov
stos
push
icebp
out
inc
lods
lock
les
cmc
or
sarb
xor
pushf
mov
xchg
out
add
xchg
cli
iret
adc
add
xchg
or
ja
cs
shll
xor
icebp
out
adc
cmp
lret
stos
and
push
loope
addb
cmp
dec
divb
jge
out
loope
xlat
lret
lcall
in
mov
loop
cli
mov
imul
lahf
sbb
cmp
icebp
mov
aaa
add
add
popf
xchg
pop
dec
inc
xchg
sub
cs
inc
clc
push
das
sbb
arpl
pop
scas
ljmp
mov
repnz
inc
cmp
cmp
dec
dec
jae
or
fwait
pop
ret
adc
add
xchg
unpcklps
cmp
insl
or
push
lods
cs
shlb
clc
mov
sbb
insb
mov
test
cmp
jnp
dec
into
add
jmp
int
pop
sbb
data16
ret
xchg
xchg
and
cmpsl
in
fwait
jp
mov
les
js
sub
adc
cmp
dec
inc
gs
push
enter
ss
mov
idivl
ja
pop
mov
jl
mov
cwtl
dec
cmp
sahf
int3
loop
inc
or
cmp
mov
and
clc
mov
push
cmp
stos
or
cltd
scas
and
jge
and
cmp
nop
dec
pop
das
fisubrs
mov
push
and
js
test
mov
fldcw
hlt
cmpsl
mov
add
jle
dec
mov
inc
in
inc
jb
inc
mov
push
mov
mov
xchg
push
lea
cli
adc
jo
movsb
sbb
aad
mov
xor
xlat
or
cmp
jbe
xchg
cmp
imul
pop
push
roll
xor
xlat
or
call
xchg
dec
or
jge
scas
mov
pop
jle
adc
push
xchg
and
pop
hlt
or
jp
sbb
pop
sub
iret
cmp
add
jae
dec
loopne
xchg
lods
cmp
sub
dec
xchg
pop
cmpsb
std
pop
repnz
sub
leave
add
xchg
add
jl
mov
jp
pushf
cmp
xor
cwtl
in
test
xchg
movsb
popf
mov
push
mov
cmpsb
stos
cmp
pop
sub
iret
lcall
call
movsl
and
int3
repnz
mov
push
adc
xlat
sbb
mov
ficomps
lret
inc
shll
jo
int3
sub
jecxz
cs
mov
add
cmp
push
nop
sub
mov
pop
mov
sbb
test
mov
not
cmp
and
inc
mov
and
into
xchg
orl
mov
xor
xlat
pop
stos
xor
sbb
mov
xor
ja
rcll
cmp
aad
dec
cmp
mov
or
xor
mov
fcomip
sub
jle
pop
adc
push
sub
cmp
sbb
cli
and
and
daa
in
mov
inc
mov
push
add
push
mov
xchg
add
and
xor
pop
cmp
sarb
inc
and
out
mov
xor
pop
sbb
aaa
cmp
mov
xchg
cmp
out
rcr
andl
es
sub
mov
add
mov
push
cmp
scas
mov
aas
xchg
pop
fcomps
or
pop
inc
dec
push
adc
xor
out
mov
popa
sub
es
in
cmp
pushf
mov
cmp
xchg
iret
mov
mov
leave
dec
and
xchg
cli
mov
cmp
mov
sar
cmp
mov
mov
pop
mov
or
or
ret
iret
lea
push
xor
insl
mov
sbb
loope
mov
dec
ret
and
xor
mov
mov
cmp
mov
test
add
mov
sub
jno
pop
cld
add
cmp
xchg
cmp
mov
cmp
jmp
cltd
icebp
mov
xor
das
mov
int
push
xor
dec
js
aam
mov
icebp
push
and
pushf
inc
cmp
cmc
mov
add
lret
sub
daa
sti
mov
hlt
mov
orl
jmp
mov
xchg
xchg
cmp
sub
push
jb
xchg
cmp
int
lods
mov
enter
mov
jo,pn
cmp
dec
mov
push
xor
mov
dec
adc
mov
scas
sahf
xchg
or
sub
sub
lret
subb
push
pusha
xor
sbb
sub
xor
xchg
int
dec
xor
mov
sub
in
sbb
inc
dec
xor
xor
adc
push
rolb
std
inc
jb
xchg
loopne
aaa
pop
mov
jle
push
mov
aad
jge
call
dec
jne
pop
test
scas
inc
rclb
cmp
enter
mov
cmp
pop
xchg
cmpsl
fldcw
arpl
sbb
cmp
mov
loopne
xchg
rol
sbb
insb
inc
fwait
cmp
mov
insl
xlat
jne
out
in
sbb
addr16
cmp
sub
jae
jo
inc
mov
testl
mov
repnz
cmp
mov
add
xor
jb
add
fsub
jg
xor
in
cmp
call
or
pop
jno
mov
cs
cmpsb
dec
and
or
arpl
dec
jae
jle
loope
inc
sbb
movsl
mov
cmp
ss
xchg
or
cmp
sti
dec
pop
out
fdiv
push
lea
lcallw
cmp
mov
inc
cmp
or
cmp
scas
lret
outsl
jecxz
sub
popf
sbb
in
mov
cmp
outsb
adc
in
sub
adc
test
lahf
fmuls
cmp
lods
repz
or
ds
insl
sti
push
ds
cmp
cmp
mov
dec
shl
pusha
inc
stc
cmp
and
xor
xchg
cs
cmp
out
in
arpl
jb
cmpl
icebp
cs
cmp
mov
xchg
lret
dec
jnp
inc
loop
or
add
das
lcall
xchg
xlat
in
popl
jecxz
or
adc
cmp
push
mov
adcl
sbb
jle
ret
add
sahf
mov
push
jo
mov
mov
push
nop
jecxz
out
rcrb
je
or
cmp
iret
jae
outsb
out
mov
mov
mov
mov
sbb
mov
enter
cmc
shrb
mov
mov
jmp
fs
push
das
inc
jmp
pop
out
ja
pop
inc
clc
fisttps
jecxz
mov
cld
sarb
pop
lds
pop
push
jl
mov
mov
or
stc
xor
das
inc
pop
cltd
dec
mov
mov
mov
outsb
push
arpl
pusha
lahf
xchg
inc
xchg
adcl
cltd
test
inc
sub
push
cmpsb
inc
mov
sbb
jno
xchg
inc
movsb
scas
cs
ret
adc
push
jle
mov
push
jns
insb
mov
int
movsb
daa
mov
adc
push
mov
mov
sub
or
lahf
shll
add
out
push
inc
xchg
outsl
jl
stos
mov
mov
js
sub
dec
jns
aas
jmp
inc
mov
mov
enter
fistl
pop
push
cmpsw
lret
dec
imul
cmc
inc
std
inc
iret
bound
pop
pusha
pop
notl
daa
mov
mov
cli
inc
mov
imul
lods
push
outsl
pop
adc
lahf
ja
inc
jg
inc
out
movsb
dec
stos
call
cmp
dec
lahf
push
test
jl
xchg
mov
scas
push
xor
shr
jg
cmpsl
pop
dec
pop
adc
push
push
sbb
sub
jge
lea
stc
push
mov
sahf
push
loope
push
mov
mov
jg
pop
cmc
xchg
dec
mov
lods
mov
test
mov
das
jg
loopne
xchg
and
daa
shrl
pop
pop
lods
push
cmp
push
scas
test
lahf
mov
pop
mov
mov
mov
mov
and
mov
fcmovb
push
jbe
clc
xor
movsb
push
cs
sbb
push
test
or
mov
ja
inc
jne
loop
fsubrs
add
and
adc
or
and
sub
add
idivl
mov
mov
dec
and
pop
cmp
fwait
fwait
pop
xchg
adc
imul
adc
mov
pop
in
sahf
out
shlb
jge
pop
pop
or
in
push
stos
rcrb
add
mov
mov
les
dec
push
sahf
add
cld
call
fs
or
dec
xchg
loopne
jl
mov
popl
push
mov
or
xchg
xchg
mov
pop
ja
jns
test
sahf
pop
jno
push
and
push
cs
xor
aas
push
shlb
repnz
push
inc
aas
xchg
shrl
push
imul
cmp
cmp
popf
cmp
cmp
adc
jbe
cmp
mov
cmp
dec
cmp
adc
lret
xor
ror
and
sbb
sahf
push
mov
xor
cmp
cs
cwtl
push
push
push
or
jbe
mov
dec
sbb
mov
cmpsb
xor
xchg
imul
out
daa
pop
jae
ja
outsl
addr16
push
dec
inc
aas
mov
scas
je
xchg
popl
or
mov
jg
bound
xchg
pop
xor
push
pop
lock
and
ja
adc
cmp
lea
aam
scas
out
dec
adc
xor
aam
jo
daa
cld
inc
inc
sbbb
data16
test
fldt
and
push
push
cmpsl
aas
int3
out
jo
lahf
jle
in
int
jbe
jg
mov
mov
cltd
lahf
or
mov
aas
hlt
hlt
xor
push
ja
das
lds
or
enter
test
rcl
cvtdq2ps
aas
idiv
pop
xchg
cmc
inc
jmp
ja
dec
xchg
call
lock
in
cmp
inc
outsb
in
mov
jg
sahf
pop
loop
cmpsb
xchg
push
pop
fstps
jp
sub
enter
inc
mov
mov
mov
es
add
pop
lahf
clc
xchg
out
nop
ja
scas
ja
int3
insb
cli
jns
add
outsb
pop
cmpsb
pushf
daa
mov
loop
cs
nop
and
insb
call
push
jns
xlat
fcmovne
push
mov
gs
outsl
push
or
ret
push
jmp
pop
int3
sar
mov
cmpsb
movsb
cmpsl
in
cwtl
std
gs
mov
xchg
cmpsb
outsl
pop
adc
and
cmp
push
call
call
mov
inc
and
test
cmpsl
outsl
cs
mov
xchg
inc
mov
leave
lods
add
xor
addr16
les
out
add
repz
fucomi
jns
or
addr16
nop
and
adc
addb
adc
cwtl
ss
insl
dec
sbb
int
aas
or
sub
std
loop
loopne
iret
xchg
mov
leave
aas
imul
cs
outsl
out
lock
enter
xor
xchg
sub
cltd
call
dec
aad
mov
flds
imul
aad
sub
adc
sar
cmpsb
mov
mov
inc
in
jmp
and
rcl
test
sahf
inc
fildl
or
pop
int
inc
inc
adc
fadds
add
pop
dec
sarb
fiaddl
loopne
loop
lret
jg
out
aas
pushf
push
sahf
xchg
jno
jo
push
mov
cwtl
clc
and
push
xchg
adc
jl
addb
and
repnz
insl
imul
xchg
je
inc
lcall
fidivs
ret
fcomps
cmpsl
sbb
push
xchg
cmp
and
adc
sbb
cmova
xorb
sbb
xor
mov
pop
nop
jns
sub
push
push
stos
push
mov
jo
push
cld
fdivs
xchg
cwtl
sub
mov
xor
aas
repz
mov
cmp
and
sbb
cmp
cmp
ds
jae
adc
sbb
inc
pop
mov
add
xchg
dec
loop
push
gs
pop
push
inc
or
adc
into
sbb
mov
data16
ljmp
lea
addl
mov
xlat
test
int3
es
lods
sbbb
push
cmp
cmp
xor
movsb
mov
xchg
xchg
pop
and
inc
adc
lods
lds
cmp
cmc
je
cmp
js
mov
cmp
je
adc
mov
mov
jecxz
test
imul
inc
jb
adc
mov
arpl
notl
lods
cmp
cwtl
mul
mov
lods
arpl
mov
sbb
and
decl
sbb
dec
sub
cmp
mov
xor
xchg
xor
dec
push
es
ljmp
pusha
test
push
xchg
push
sub
test
test
daa
jbe
mov
stos
add
mov
mov
aaa
pop
lcall
pop
push
xor
enter
rorl
popf
push
cmpsl
imul
dec
cmpl
mov
add
inc
ret
sbb
lods
mov
push
cmp
jmp
cld
popf
sbb
mov
lea
lcall
dec
bound
ss
add
out
dec
push
dec
movsb
scas
in
jo
inc
xor
cli
imul
push
xor
nop
loop
clc
inc
cwtl
push
mov
idivl
lods
ja
cli
and
and
pusha
les
or
bound
and
sbb
js
insl
add
jno
mov
mov
cld
cltd
mov
enter
or
jns
xlat
data16
mov
xchg
sub
sub
mov
aas
pop
lds
and
out
mov
xor
mov
adc
xor
mov
push
jo
in
jl
fiaddl
mov
int3
mov
fprem
mov
jno
inc
xor
leave
stc
imul
push
mov
clc
clc
mov
mov
cmp
sbb
cmp
adc
mov
mov
icebp
sar
clc
js
lock
xor
xor
popf
jo
jbe
lods
jno
xchg
cs
add
xor
daa
js
aad
inc
dec
lret
movsl
sbb
lock
mov
lock
xor
push
pop
sbb
mov
pop
sbb
mov
xor
dec
xor
xor
jne
je
into
pop
push
imul
mov
xlat
sbb
sub
mov
sub
xor
ljmp
test
xor
mov
sub
shlb
mov
sub
mov
cmp
mov
xchg
mov
xor
xor
scas
ss
mov
mov
xchg
cmc
mov
jge
dec
pop
js
ljmp
ret
cmp
and
xor
and
hlt
mov
divl
je
xor
push
shrb
cmp
mov
das
lock
sbb
and
sub
mov
nop
loope
outsb
xor
cmovs
adc
out
mov
jne
lahf
repz
xchg
or
jge
js
add
testl
sub
adc
test
sub
mov
mov
sub
test
ja
stc
or
mov
loope
repz
outsl
mov
int
cmc
mov
aam
cmp
xorb
pop
mov
ja
xor
cwtl
shrb
xor
std
dec
in
mov
je
mov
nop
or
js
cli
adc
cmp
mov
mov
sahf
nop
clc
xchg
loope
xor
or
pop
cmp
stos
stc
push
mulb
pushl
mov
repz
mov
sub
std
and
mov
pusha
adc
jb
mov
cmp
add
aaa
add
sahf
xor
mov
repz
cmp
cmp
pop
sahf
push
hlt
sbb
ds
push
leave
mov
xor
cmp
dec
clc
xlat
and
dec
mov
stos
mov
insb
mov
sarb
repz
dec
hlt
and
js
or
cmp
mov
pop
cmp
cmp
sub
clc
push
xor
mov
shll
jnp
inc
push
mov
nop
stc
je
in
xor
mov
shl
mov
xor
push
mov
mov
xor
and
sub
mov
xchg
mov
or
mov
xor
leave
je
cmp
repz
mov
jb
mov
shlb
mov
scas
leave
xor
mov
inc
repnz
jno
and
mov
mov
test
sbb
xor
leave
mov
and
mov
lahf
cmp
sbb
xor
mov
mov
mov
test
mulb
ja
shlb
mov
xor
jp
mov
inc
or
jb
jae
mov
adc
mov
fidivs
adc
movsl
adc
mov
inc
notb
mov
push
cmp
xlat
fdivl
mov
mov
xor
xor
xorb
clc
lods
js
xor
jmp
cmp
cmc
div
sub
and
adc
dec
and
std
adc
or
and
and
out
mov
mov
ret
je
jbe
aaa
cmpl
push
add
inc
js
mov
mov
xor
hlt
and
jg
clc
jbe
jno
jae
stos
xor
je
ja
jno
arpl
mov
lods
ss
jae
and
imul
stos
imul
loope
mov
outsb
pop
stc
repz
imull
xor
stc
adc
insb
js
sbb
divb
ret
push
xor
sbb
lahf
xor
push
cmp
xor
mov
inc
repnz
sub
xor
mov
repz
push
cmp
js
sub
js
aam
mov
pop
mov
out
cmp
js
xor
mov
sbb
repnz
mov
in
mov
fcomps
mov
je
lock
xor
sub
or
jo
push
js
in
mov
xlat
aaa
aad
imul
mov
sub
cwtl
stc
lods
push
adc
push
das
xor
xor
mov
nop
sub
icebp
push
shl
es
add
xor
jo
nop
adc
mov
push
mov
adc
push
adc
test
cmp
adc
and
nop
movsb
adc
fsubl
xor
cmp
mov
aam
adc
es
xor
in
inc
mov
test
mov
mov
sub
xor
mov
ret
push
mov
aaa
fs
sub
push
lret
bound
mov
push
sbbb
mov
pop
or
scas
ss
mov
dec
mov
pop
mov
mov
push
mov
lods
push
rorl
jo
cmp
loopne
aam
jmp
aad
or
lock
mov
push
pop
js
pop
push
lret
dec
insl
push
bound
xchg
push
xor
mov
mov
sti
insb
lock
mov
push
pop
hlt
add
sub
xor
cmp
pop
mov
cs
data16
repz
mov
push
sbb
mov
sub
sbb
adc
push
cmp
xor
jo
or
dec
stos
popa
mov
jb
imul
jne
xor
mov
les
jne
jae
pop
or
add
sub
sub
fnstcw
cmc
mov
inc
test
test
arpl
pop
mov
sbb
jns
xlat
mov
daa
mov
xchg
sub
insb
push
call
out
cltd
lcall
mov
jns
jge
cmp
repz
leave
and
ss
hlt
adc
dec
cs
movsl
cmp
sbb
or
and
mov
dec
ja
mov
cmp
sub
push
fistpll
adc
aaa
pop
xor
mov
xchg
lret
mov
popa
xor
xor
scas
je
cmp
push
jbe
aaa
cs
pop
mov
ss
out
sub
lahf
je
mov
sar
fdivs
or
shl
stos
mov
xor
jmp
jle
clc
jno
sbb
adc
ja
mov
sbb
cmc
shll
jno
sbb
cmc
jge
xor
mov
js
fwait
iret
sub
mov
fs
mov
lods
mov
inc
and
jo
mov
lret
sub
test
pushw
mov
jecxz
and
cmp
mov
icebp
push
dec
add
js
xorl
xor
ja
clc
mov
jbe
mov
repnz
cmp
jbe
jo
xor
stc
out
xor
adc
es
stos
xor
sbb
mov
outsl
jnp
pop
push
psllq
jo
sbb
mov
jbe
cmp
je
mov
sub
call
test
lret
cmc
and
ljmp
fwait
ja
mov
xchg
test
xorb
es
cmp
sbb
mov
mov
push
in
repnz
jno
sbb
xor
sub
fdivrp
xor
les
and
jne
stos
dec
cmc
adc
lcall
pop
insb
les
stc
mov
roll
lods
js
cmp
ds
inc
repnz
push
inc
cmp
aaa
jmp
es
hlt
std
xchg
shrl
hlt
daa
push
mov
cmp
fs
xchg
cmp
mov
mov
lods
cmpsb
dec
clc
lods
xor
sub
cmc
cmp
mov
jmp
xchg
push
jae
imul
cmp
xchg
push
loope
insl
xor
ss
cmpsb
cmc
data16
pop
push
pop
testl
jb
stc
js
push
mov
mov
mov
dec
push
or
mov
fnstcw
sbb
xchg
adc
cmc
adc
dec
stc
into
cmpsb
sbb
divb
or
push
cmpsl
clc
dec
mov
das
pop
adc
fdivrs
in
mov
bound
mov
mov
xchg
or
mov
xor
testl
fxch
xchg
clc
push
jmp
jbe
fdivs
inc
push
xor
in
mov
dec
lods
jb
out
cmpsb
xorb
fsts
enter
loope
mov
icebp
mov
aaa
int
sbb
in
push
leave
mov
jl
dec
repnz
xor
xor
in
rcr
scas
add
pop
mov
push
xor
sub
mov
lods
andl
enter
add
in
aas
mov
dec
add
rcll
cld
add
pop
sub
test
inc
mov
adc
sub
mov
and
xchg
fistps
out
mov
xchg
adc
ss
mov
cwtl
mov
clc
and
xor
mov
clc
lods
mov
outsl
cwtl
cmp
pop
mov
lods
mov
xor
clc
lods
daa
xchg
inc
push
mov
sub
pop
pop
mov
fiadds
fidivl
je
sahf
pop
jns
popf
shlb
mov
adc
jge
loope
mov
push
shlb
xor
stc
data16
inc
je
cmp
push
stos
clc
mov
adc
push
jmp
xor
inc
jbe
sub
mov
xor
adc
xor
xor
sub
nop
es
mov
xor
jg
adc
divb
orb
mov
pushf
jl
jne
cmp
add
mov
iret
and
andl
xor
jns
je
xor
std
and
sarb
xlat
or
mov
push
and
or
xor
sbb
adc
mov
jge
je
mov
cmp
xor
cmc
das
clc
es
ja
sub
jne
mov
nop
and
inc
shlb
clc
cmp
pop
mov
dec
or
ds
xchg
js
cmp
sub
imulb
hlt
add
jo
cmp
insb
test
pusha
xchg
call
call
lods
mov
loopne
cwtl
imul
adc
nop
lahf
fcomps
jne
imul
icebp
lods
test
ud1
or
add
jo
adc
mov
jbe
movsb
push
test
xchg
insb
mov
leave
mov
pop
xchg
ss
jbe
cmp
ss
xor
lock
lret
lods
jo
sub
sub
xor
repz
lods
xor
xor
xor
xor
cmp
or
mov
mov
jne
mov
xor
rcrl
mov
xbegin
dec
xchg
daa
mov
mov
fadd
idivb
jns
cwtl
aad
ficompl
push
xchg
stc
mov
loopne
push
jns
push
mov
xchg
mov
inc
jo
dec
jne
mov
mov
repnz
mov
mov
mov
and
dec
lods
inc
jnp
xor
push
inc
mov
cmp
mov
sbb
fnstsw
jp
out
sub
ret
stos
cmp
mov
and
mov
cmp
xor
mov
push
push
aad
xlat
sbb
popf
lahf
cmp
mov
mov
cmp
and
mov
cmp
xor
push
aam
sbb
aas
mov
stc
repz
cltd
cmp
add
cmp
je
cmc
notl
xchg
cmp
std
jge
jg
jae
repnz
cwtl
cmp
add
cmp
jne
hlt
notb
pop
pop
cld
jl
jle
and
cmp
xor
mov
push
dec
sarl
lret
and
movsl
cmpsl
inc
inc
lds
sub
lods
scas
dec
dec
int
iret
sub
test
dec
inc
enter
sub
cmp
and
inc
les
sub
dec
int3
cmp
push
add
icebp
jmp
or
in
add
test
xchg
out
or
lea
loop
add
lock
addr16
add
insl
outsl
in
out
or
aad
mov
pop
fs
roll
ss
sbb
mov
leave
sbb
sbb
dec
xor
or
mov
insl
ss
mov
xor
sarl
xor
lea
aaa
dec
lcall
decl
cmc
clc
dec
sbb
in
ja
sbb
push
scas
pop
adc
adc
ds
mov
ss
fstps
clc
jb
mov
and
push
outsl
pop
inc
xchg
mov
mov
ja
pop
mov
scas
jb
aaa
aas
sub
js
cmp
jecxz
js
mov
inc
mov
push
xchg
inc
xor
and
bound
mov
shl
divl
rclb
xlat
enter
jae
pop
call
push
aaa
inc
and
push
call
stos
repnz
jo
icebp
xchg
in
js
mov
xchg
jo
clc
cmp
pop
out
ja
and
cmp
jno
lcall
je
fnstenv
scas
xor
clc
push
sub
jo
fildll
mov
mov
insl
pop
popa
pop
xor
aaa
and
add
xchg
jne
in
sub
insl
std
mov
xor
lods
xchg
in
aaa
test
and
adc
pop
cmp
sub
inc
loopne
and
pushl
lcall
xor
ds
inc
das
jmp
xchg
cmp
pop
cli
mov
mov
cmp
outsb
mov
stc
jno
leave
js
repnz
test
xor
xor
xor
popf
cmpsl
cmc
movhps
int3
mov
jl
xchg
or
mov
or
sub
xchg
pusha
mov
imul
add
xor
sbb
cmc
je
cmp
jae
lods
mov
dec
aaa
mov
out
mov
jle
cwtl
push
popa
lock
mov
cwtl
add
lods
cmp
mov
adc
mov
fnstenv
jbe
clc
adc
or
xchg
movsb
xchg
pop
push
cmpl
repz
sti
pop
xchg
lds
repz
movsl
insb
std
test
sbb
dec
sub
outsb
mov
jo
insb
mull
test
jle
mov
xchg
repz
pop
outsl
xchg
mov
sbb
inc
jbe
fildll
xor
xor
and
xor
sub
cmp
xchg
add
sbb
movsl
add
flds
movsb
ret
test
jbe
mov
lahf
test
icebp
lcall
je
cmp
rcrl
xor
addr16
or
push
aad
sbb
mov
jno
adc
outsl
cmpsb
ldmxcsr
jns
inc
je
js
jbe
daa
jbe
jp
imul
mov
jns
jecxz
stos
pop
pop
repz
mov
mov
xor
popf
sub
push
and
repz
sub
insb
sub
sbb
out
add
cmp
or
inc
add
mov
adc
jbe
je
fwait
mov
sub
in
jbe
xor
aas
and
sbb
jl
aas
and
mov
pop
arpl
sub
ss
pop
xor
and
xlat
ss
cmp
push
add
push
imull
inc
daa
mov
hlt
mov
mov
sbb
mov
xor
ja
xor
mov
cmpsl
push
aaa
in
aad
es
jo
cmc
mov
movsb
je
xor
adc
ja
push
push
push
mov
stos
mov
mov
cmc
pop
aaa
lods
cmpsb
pop
clc
movsl
les
mov
mov
mov
aas
mov
dec
test
repz
and
sbb
push
adc
pop
outsb
xchg
stc
lcall
data16
jmp
cmp
jbe
push
xchg
cs
sahf
cmp
inc
outsl
lahf
push
mov
push
jl
push
mov
jae
inc
js
mov
jle
inc
pop
jns
hlt
mov
jmp
pop
jbe
outsb
stc
lods
cmc
idivl
adc
jb
push
cltd
mov
roll
outsb
lret
adc
test
and
js
inc
lea
cmp
sub
ljmp
mov
nop
int3
or
pop
sub
lods
adc
dec
jmp
dec
dec
clc
mov
jge
pushf
xchg
jb
mov
mov
ljmp
leave
push
imul
push
ds
inc
jne
xchg
pop
test
jb
mov
or
and
mov
cmpsl
xor
repz
pop
jo
ds
pop
insl
lret
cltd
test
and
lahf
movsb
pop
jg
mov
add
aaa
dec
push
outsb
push
int3
repz
push
and
mov
cmp
cld
in
inc
jp
push
cmpsl
gs
pop
push
repz
mov
mov
das
out
mov
inc
add
cmp
lcall
xchg
outsl
xor
adc
pop
ds
dec
test
ret
mov
pop
push
cmp
cmpsl
cwtl
push
mov
push
and
xchg
xchg
mov
sub
mov
mov
jno
adc
inc
cwtl
cwtl
adc
xor
fsubrs
lods
xchg
sbb
sbb
push
movsb
mov
mov
fst
lahf
push
pop
loop
push
mov
out
cmp
xchg
imul
aad
add
xor
mov
jae
mov
lret
jno,pn
mov
das
xor
jbe
lock
push
jno
hlt
cmp
mov
into
fdivp
sub
cld
push
or
xor
cmp
int
jbe
mov
cmc
aam
fs
push
and
add
mov
xor
or
mov
mov
ja
xor
mov
es
push
xor
lock
sahf
cmpsl
cli
sbbb
cmp
adc
sbb
mov
loopne
data16
mov
je
data16
jmpw
jb
xor
stc
scas
cmp
js
or
jae
in
cmp
es
mov
sub
push
js
push
inc
xor
sar
jne
jbe
push
add
repz
mov
xor
mov
mov
mov
out
clc
xor
xor
sub
iret
fsts
jae
scas
and
xchg
xchg
scas
das
cli
js
into
sti
js
fidivs
pop
push
pop
cli
insl
shlb
cmp
insb
fildl
divl
mov
mov
clc
imul
cmpb
cmp
out
jne
mov
je
mov
test
sub
dec
push
js
arpl
push
fcom
cli
or
xor
loope
jns
scas
mov
ja
mov
jno
sub
push
sub
aas
fwait
xchg
pop
out
ja
jno
push
sub
into
mov
push
aam
movsb
roll
faddl
sub
test
xchg
gs
add
and
jp
or
adc
cmp
cwtl
mov
jmp
sub
sub
add
jge,pt
jb
and
aaa
jge
icebp
xor
int
ljmp
aam
cmpsb
mov
lods
hlt
pushf
jge
xor
mov
lods
out
xor
push
movb
mov
stc
mov
pop
cmc
cmp
pop
mov
pushw
leave
mov
mov
aad
mov
pop
jbe
xor
dec
in
js
xor
add
xchg
ja
xchg
stc
mov
adcl
pop
aaa
lods
cltd
fnstenv
out
bsr
je
push
imul
sbb
jo
test
mov
fadds
jns
xchg
movsb
mov
movsb
testl
cwtl
xorl
jle
scas
mov
fildll
and
jb
sub
ja
das
cwtl
testb
pop
add
scas
jmp
mov
mov
hlt
movsb
aaa
fs
call
jo
test
js
or
push
xchg
jecxz
push
mov
mov
cmp
adc
mov
push
mov
mov
dec
push
fs
into
mov
es
jns
pusha
jne
aam
daa
add
fnstsw
cld
lret
push
or
test
add
pop
mov
xor
in
fcomi
hlt
xor
lcall
push
pusha
push
push
jle
jo
push
jle
mov
jg
test
xchg
loopne
xchg
jb
mov
mov
mov
aad
xchg
mov
loop
mov
ficoms
mov
pusha
sub
jb
push
mov
xchg
adc
scas
testb
outsl
mov
add
out
cmp
ljmp
mov
mov
sbb
inc
jae
xchg
stc
je
nop
sti
cmc
test
pop
mov
pop
mov
xchg
ds
xor
mov
cwtl
mov
lds
xor
and
mov
xor
or
push
xor
stc
cmc
mov
xchg
push
ss
lret
movsb
ss
add
mov
stos
mov
je
mov
repnz
jb
mov
push
sub
mov
push
outsb
lods
pop
test
push
sbb
insl
push
mov
ss
cs
mov
dec
mov
xor
mov
jle
xor
sti
push
jmp
jo
xchg
js
stc
adc
fs
push
push
iret
data16
mov
cli
xorb
stc
imulb
cmp
jbe
aaa
sbb
jo
xor
inc
mov
call
jmp
mov
mov
and
xor
sub
push
cmp
xor
out
les
sbbl
xor
mov
xchg
pushf
pop
and
in
jo
bound
mov
mov
sub
sbb
mov
jno
jo
cmpsb
pop
cwtl
adc
jno
xor
mov
cmpsb
mov
call
xchg
mov
popl
in
jo
jne
xor
push
aaa
push
pop
push
jns
or
js
push
xchg
hlt
js
rcll
test
or
and
imul
ret
jl
cmp
in
mov
jl
sub
sbb
fldenv
out
fldcw
or
adc
pop
jns
shll
fwait
data16
xchg
clc
xchg
and
adc
sbb
mov
movsb
pop
sar
mov
je
inc
pushf
mov
pop
outsl
clc
mov
les
mov
and
jo
pop
sub
sbb
popaw
pop
inc
lods
jno
cwtl
test
repz
stc
mov
hlt
pop
sub
cld
sub
adc
pop
xchg
ja
lea
push
pop
push
inc
adc
es
jmp
fcomps
je
ds
inc
mov
or
outsl
jnp
xchg
cmp
icebp
stc
clc
push
es
sarl
aas
add
xor
xor
repz
mov
mov
or
jbe
imul
lahf
dec
into
mov
mov
mov
adc
jae
sbb
adc
fwait
imul
inc
fcompl
ljmp
sti
inc
mov
cmp
pop
nop
mov
mov
popf
mov
lods
or
xchg
xor
adc
clc
xchg
in
loope
push
repnz
xchg
call
xor
loop
lock
lret
adc
mov
push
icebp
sub
xor
xorl
push
leave
ss
mov
repnz
lock
js
in
xor
lods
xor
jbe
adc
xor
rcrb
das
lock
xor
adc
nop
or
cmp
sbb
insb
ret
mov
xor
mov
adc
jmp
test
sbb
lea
mov
hlt
mov
jo
adc
or
js
push
dec
xorl
lods
jo
jns
daa
mov
sbb
out
mov
mov
mov
xchg
clc
mov
stc
test
cmp
jb
lods
xlat
sub
push
add
ss
aas
insb
cmp
pop
notl
xchg
jo
insb
movsb
mov
dec
ss
push
sub
add
jns
ss
push
add
lock
out
divl
jo
dec
dec
stc
lock
cs
popa
lock
test
jno
push
xlat
mov
xchg
xchg
in
movsb
out
jae
xor
sub
dec
out
test
sub
clc
imul
adc
bnd
movsb
cmc
push
sbb
outsl
loope
jo
xchg
ja
push
out
xchg
mov
pop
fstpl
shrl
add
jo
xor
mov
aas
cltd
and
hlt
add
fs
mov
jo
insb
sub
std
sbb
pop
cmpsb
adc
imul
cmp
pop
lret
or
fdivr
pop
push
cli
pushf
pop
mov
in
xor
jle
pop
and
testl
les
addr16
pop
or
out
push
sub
or
test
cwtl
cmpsl
pusha
aam
mov
cmp
les
jne
bnd
push
out
xor
sbb
jo
lea
in
jo
mov
jo
popa
cmpsb
adc
or
push
sbb
insl
insb
clc
fstpt
mov
icebp
push
lods
dec
andl
push
or
ss
test
ljmp
dec
insb
mov
mov
xor
sub
or
es
lahf
out
fucomi
in
jne
aaa
xlat
aaa
int
addb
sbb
imul
mov
in
imul
xor
adc
xor
push
push
sahf
outsb
push
bound
inc
mov
xchg
gs
pop
fmul
mov
aas
cmpsl
xchg
pop
cmp
sahf
ret
outsb
test
mov
ret
xchg
daa
pop
mov
jns
push
int3
jle
mov
es
popa
xchg
pop
mov
mov
add
pop
int
imul
mov
sbb
mov
lds
mov
aaa
jge
xchg
les
push
mov
addr16
dec
ret
sub
testl
mov
mov
shld
sbb
ret
jbe
mov
mov
ljmp
mov
xchg
mov
jne
cmc
in
repz
outsl
adc
cmp
sub
lods
jo
sub
cmp
push
push
notl
js
xor
cmpb
pop
cltd
jo
data16
stc
pop
mov
xchg
in
js
fsubrs
fsubrs
dec
clc
scas
je
pop
lock
lods
sbb
dec
cwtl
popa
clc
je
mov
cmp
sahf
xor
xchg
jo
sbb
jbe
in
jae
jne
js
fnstcw
cmp
stos
pop
adc
add
cltd
pop
jo
jno
ja
data16
nop
sbb
pop
jb
neg
adc
mov
dec
mov
pushf
pop
sbbb
or
add
inc
mov
jmp
xor
mov
and
sub
inc
mov
fwait
lods
js
jbe
icebp
pop
pop
mov
rep
lcall
repz
sub
push
nop
push
add
inc
jle
ret
mov
inc
divps
pusha
mov
xor
lea
cmp
push
clc
jo
das
xor
js
xchg
cmp
jbe
push
scas
out
and
cmp
les
addr16
ja
lds
xchg
ja
lahf
add
jae
push
daa
xchg
movsb
push
fs
js
je
fnstcw
sbb
fdivrs
push
orl
shrl
lods
fdivs
stc
pop
add
call
es
sahf
int3
and
add
lea
or
xor
mov
mov
xlat
sahf
dec
sub
sbb
inc
out
pop
ds
cs
mov
push
cmp
mov
int3
adc
rcl
fcom
aam
jmp
out
fdivs
jno
stc
cmp
adcl
push
jo
sub
pop
int3
stos
push
push
jmp
xor
inc
scas
dec
mov
xchg
insb
mov
hlt
testb
adc
rol
ja
jns
cltd
shll
mov
ja
movsl
add
rclb
icebp
out
repz
cmp
popf
pop
lahf
aad
pop
mov
push
stc
pop
inc
push
popw
in
lods
call
mov
mov
push
movsl
mov
mov
xchg
pop
or
or
xor
fisubs
mov
mov
fisttpl
dec
mov
push
stc
aad
jns
jno
lahf
aaa
or
pop
and
inc
in
jle
dec
push
loope
ja
push
xor
cmp
pop
aad
pop
push
scas
popa
andl
jb
call
push
sub
xor
mov
mov
popa
fldenvs
cmpsb
push
lret
cmpsb
pop
mov
mov
call
lret
sbb
cmp
lcall
cmp
in
xchg
ss
xsave
pop
or
xor
xchg
and
and
leave
ss
mov
inc
or
xor
mov
out
inc
jo
mov
xorl
fdivs
cmp
andb
mov
pop
outsb
cmp
dec
mov
sbb
cmp
xlat
inc
mov
cmpsl
jmp
lock
popa
test
es
flds
ja
clc
lahf
pop
js
inc
js
test
mov
add
dec
fdivrs
loop,pt
push
push
imul
pop
stos
mov
mov
ja
frstor
mov
jl
adc
jno
lcall
out
mov
adcl
jmp
shll
pop
out
xbegin
jmp
adc
shlb
add
cmpsb
xor
andl
sbb
xor
adc
mov
jns
sub
add
cmpl
scas
xor
incl
and
mov
mull
cmp
aas
inc
in
push
inc
repnz
mov
jno
adc
jns
iret
lret
inc
xorb
pop
and
ja
mov
add
clc
outsl
fidivs
cwtl
mov
xchg
sub
jo
es
adc
xor
pop
sub
test
xchg
adc
jo
mov
xchg
out
xor
das
sbb
pop
icebp
mov
dec
imul
mov
lods
fidivs
and
mov
and
cmp
xor
mov
mov
inc
push
cmp
popa
dec
jp
jo
mul
enter
pusha
cmp
mov
cmp
mov
inc
pop
mov
adc
lods
sub
cmp
push
ds
jne
ljmp
mov
aaa
loope
mov
push
dec
xor
mov
sub
inc
sub
js
jg
dec
repz
js
pop
fsubrs
xchg
shlb
adc
sub
fidivl
sbb
test
aad
fcmovnu
stos
mov
int
repnz
insb
sti
jae
lock
fidivrs
mov
mov
and
scas
mov
mov
and
push
or
int
add
mov
cvtpi2ps
test
cmp
mov
jmp
fidivl
sbb
xor
scas
xor
mov
mov
cmp
mov
cld
mov
ja
lods
xchg
jbe
xchg
clc
in
mov
rcrl
std
adc
shll
jmp
inc
jb
push
jo
push
pop
std
adc
xor
inc
inc
jb
fildl
test
push
mov
nop
rorl
xor
jmp
inc
jb
push
loopne
mov
xor
push
sub
rcll
std
adc
shll
sub
mov
ja
mov
or
jns
and
shl
in
jne
xor
jb
sub
jae
and
cmp
cmc
push
daa
jo
lret
jle
shrb
cs
inc
in
cwtl
js
int3
idivb
jae
cwtl
jne
mov
mov
ret
sub
jae
sub
repz
cwtl
jbe
clc
and
cmp
cmp
cwtl
xchg
ja
push
mov
mov
std
adc
push
hlt
in
cwtl
xor
mov
xor
inc
popa
repnz
push
cwtl
jae
hlt
xor
xor
cmp
push
sahf
stc
cwtl
jno
mov
aaa
loopne
mul
adc
je
cwtl
jb
mov
mov
jb
xor
jg
int3
ja
clc
sub
mov
ss
lods
ja
xor
xor
negl
adc
cwtl
xchg
mov
lea
js
and
cwtl
jbe
mov
ss
rolb
jno
cwtl
mov
xor
mov
jno
cwtl
xchg
repnz
or
and
fldcw
clc
push
cwtl
repz
ss
sahf
inc
or
sahf
leave
je
mov
imulb
jo
dec
je
je
sub
in
rcr
and
stc
pop
clc
jbe
jnp
push
jns
aaa
sahf
rclb
scas
mov
dec
clc
sub
ss
cwtl
xor
repz
popa
fs
loop
push
hlt
sbbl
xor
and
or
jae
xchg
or
or
cwtl
mov
push
sarb
mov
xchg
push
js
int3
idivb
jae
stc
jno
cwtl
cwtl
cmp
push
jns
add
incl
mov
jno
cwtl
xchg
stc
notb
or
hlt
shlb
mov
cwtl
xlat
mov
cmp
add
stos
mov
fcoms
cwtl
jnp
cmp
test
mov
jns
inc
jae
ss
push
mov
mov
imul
mov
ss
xor
lock
adc
xor
pop
sub
xchg
divl
cwtl
int3
adc
and
jae
divb
cmp
sahf
ja
cwtl
js
mov
mov
adc
sub
cmc
in
cwtl
jns
mov
xor
push
mov
mov
push
repnz
ss
adc
imul
bound
shll
popa
hlt
mov
push
cwtl
jne
bound
call
loop
push
repz
arpl
push
sahf
jbe
test
xchg
ss
leave
js
je
mov
cmp
xor
cmc
cwtl
bound
daa
aaa
jne
dec
divb
cwtl
shlb
pop
cmc
shlb
mov
jb
cwtl
aaa
cwtl
push
sar
je
divb
repz
mov
cwtl
mov
mov
bnd
cmc
bound
sbb
test
jns
pusha
add
dec
jbe
ss
fnstenv
notb
jbe
push
xor
dec
mov
cltd
cwtl
adc
add
mov
rorb
xor
mov
jae
fidivl
mov
adc
mov
mov
stc
dec
aas
cmp
mov
push
jno
cwtl
mov
push
dec
mov
push
cwtl
mov
bound
mov
sbb
and
lods
cwtl
cmc
inc
mov
jns
inc
mov
inc
adc
mov
pslld
mov
repz
ljmp
adc
cmc
mov
clc
negb
jae
loop
push
mov
inc
push
jge
js
mov
sbbl
fs
xor
lods
jae
xor
sahf
mov
leave
jb
testl
mov
push
aaa
in
cwtl
cmc
inc
mov
je
mov
xor
mov
jno
mov
js
aam
xlat
push
out
jns
mov
out
loope
lock
mov
repnz
bound
stc
dec
cwtl
add
cwtl
sysenter
shll
inc
xor
mov
push
cwtl
xor
sbb
inc
xor
xor
lods
js
mov
ljmp
mov
push
jno
cwtl
mov
adc
push
jno
cwtl
xchg
mov
push
mov
xor
mov
cmc
movsb
cld
cmp
dec
mov
push
sub
scas
cmp
ss
enter
add
movsl
jb
repnz
mov
dec
cmc
pcmpeqw
sub
cmc
hlt
cwtl
js
in
cmp
fwait
jno
push
repz
mov
push
jae
push
ds
jns
rcll
xchg
fldcw
notb
jbe
xor
test
fmulp
xor
jo
pushf
xor
ss
xor
ss
mov
imul
bound
mov
sbb
ja
mov
jno
cwtl
aad
inc
repz
xor
mov
cwtl
mov
aad
cmp
push
xor
mov
clc
mov
jns
pop
push
je
insb
testb
in
cwtl
jbe
mov
ja
cmp
push
jne
mov
jns
dec
repz
xor
cwtl
mov
cmc
std
sbb
sti
xchg
scas
cld
repnz
ss
cwtl
jae
ja
js
shlb
shlb
jne
cwtl
xlat
stc
cld
ja
test
jae
mov
mov
insb
mov
mov
stc
negl
iret
sub
aaa
in
cwtl
cmc
inc
mov
je
mov
xchg
push
repnz
sarb
scas
repnz
cmc
repz
jmp
push
jno
cwtl
xchg
stc
mov
outsb
jmp
cmc
testb
push
sahf
ja
imul
ds
je
jne
mov
ja
pushl
mov
jno
cwtl
mov
xor
jmp
mov
sahf
clc
cwtl
mov
fs
scas
ss
xchg
xor
insb
cmc
mov
stc
xchg
adc
cmc
add
jb
jbe
xchg
repz
bound
fwait
jbe
scas
mov
fcmovne
ss
mov
cwtl
xlat
xor
sub
scas
hlt
mov
add
divl
jno
xor
andb
shll
cwtl
stc
cwtl
mov
and
emms
or
dec
cwtl
sub
xor
cwtl
jg
in
aad
rcr
loope
ss
xor
dec
data16
sub
cltd
fldcw
lret
mov
sub
xchg
mov
jno
ss
adc
mov
cmp
hlt
je
lret
rorb
xor
js
in
hlt
or
jae
int
inc
or
js
sbb
sbb
push
cld
jb
mov
clc
adc
repnz
pop
and
push
push
jb
inc
nop
push
push
and
ja
cmc
cmp
sbb
jns
and
mov
repz
push
ss
pcmpeqd
ja
mov
sbb
cmp
mov
sbb
or
mov
ds
adc
scas
mov
add
mov
lahf
xchg
cmp
movsl
mov
ss
jl
cwtl
mov
push
jns
imull
jne
test
cwtl
sahf
cmc
hlt
jb
je
lock
jae
xchg
dec
and
clc
mov
adc
popa
inc
ss
xchg
sbb
std
mov
mov
xor
cmpsb
hlt
hlt
mov
mov
mov
jbe
or
fdivrs
xor
mov
repnz
lods
cmc
sub
xor
repz
aam
xchg
clc
clc
add
insb
jns
fs
mov
out
ss
jns
repnz
aaa
inc
ja
jns
push
xor
jns
pushl
sub
mov
mov
scas
mov
je
out
push
push
ss
inc
repnz
mov
fnsave
xor
and
dec
js
pusha
stos
pop
aaa
jge
mov
jns
xor
xor
ss
jns
jne
aaa
inc
and
repz
xor
and
enter
xor
cmp
or
fnstcw
sub
sbb
je
pop
cmp
sbb
into
pop
adc
fldcw
int
je
adc
jns
aaa
sub
pop
cwtl
inc
xchg
lahf
mov
cmc
fists
sbb
cmp
mov
pop
jbe
test
insb
fdivs
xchg
jae
out
jns
xor
mov
cmpsb
jno
js
mov
div
jno
stc
mov
jae
push
or
mov
inc
jae
idivb
xor
js
je
mov
testl
orl
in
xor
js
inc
call
cwtl
add
mov
in
clc
mov
add
sahf
mov
and
lods
xor
mov
mov
jns
insb
hlt
loopne
mov
pop
hlt
mov
fstps
mov
in
js
adc
loop
stc
or
mov
lret
pushf
cmp
xchg
pop
je
jns
pop
adc
xchg
and
js
jb
inc
lods
je
je
addl
divl
xor
push
or
jo
int
xor
or
popf
outsb
mulb
lar
je
jo
mov
es
je
jo
cli
pushf
dec
popa
cmc
mov
mov
xor
mov
xchg
rol
sbb
clc
push
xor
and
cmp
jno
ja
pushf
mov
flds
lea
xor
cmc
adcl
js
sahf
mov
and
fs
cmp
pusha
inc
jno
jns
mov
and
lods
or
imul
xor
hlt
je
push
pushf
sub
js
add
jae
jb
push
mov
xor
mov
nop
and
pusha
cmpb
mov
pop
dec
adc
lods
mov
out
mov
mov
and
mov
and
clc
push
cmc
mov
lods
ss
std
lods
ja
mov
jnp
mov
pop
mov
pop
cmc
jno
js
jns
mov
out
jb
or
test
dec
xorl
je
stos
pop
jns
mov
xchg
hlt
js
xor
in
ss
ds
mov
repnz
idivl
adc
jno
jns
mov
mov
dec
jns
mov
js
ss
and
mov
loopne
xor
pushf
js
sbb
xor
jns
xor
push
pop
sub
test
subl
cwtl
pushf
jae
sub
mov
sub
push
or
add
ja
jo
insb
push
jbe
lods
pop
sub
dec
test
sbb
bound
add
xchg
sbb
cwtl
lods
mov
mov
sbbb
jbe
lods
jbe
lock
xchg
insb
pop
test
sbb
sub
push
inc
enter
rcrb
cmpsb
bound
and
cmc
enter
jbe
mov
sbb
mov
mov
outsb
xor
or
es
mov
cmp
mov
push
mov
out
cmp
mov
test
movsl
mov
xor
shlb
repz
or
pop
cwtl
adc
sub
pop
mov
pop
push
adc
out
pop
ja
pop
xchg
pop
adc
pop
movsb
adc
xor
pop
aad
pop
bound
out
mov
test
sbb
cmpsl
inc
popa
push
cmp
fld1
inc
cmp
test
stc
mov
push
mov
stc
nop
sub
mov
mov
jae
ja
push
mov
or
sub
xor
cmpsl
mov
in
js
fdivs
cmp
pop
ss
ja
js
xorl
repnz
ja
dec
btr
mov
and
mov
mov
jae
xor
nop
adc
mov
cmp
adc
nop
or
cs
push
pusha
mov
nop
cmc
mov
je
xorb
cmc
mov
neg
test
testl
cmp
xchg
enter
outsl
and
scas
or
add
das
sahf
jo
idivb
adc
mov
and
and
mov
shlb
xchg
fnstcw
fldenv
fstps
into
aaa
test
cltd
mov
jns
mov
sbb
push
mov
inc
mov
aaa
cmp
test
cmp
lods
repnz
aad
or
mov
jbe
xor
sub
js
outsb
das
jbe
cwtl
mov
shlb
mov
rorb
das
ja
jbe
jns
mov
pushf
adc
sbb
daa
inc
in
clc
in
mov
add
dec
adc
cmpsl
jb
lcall
in
js
push
jns
xchg
xor
mov
mov
mov
movsl
xor
mov
daa
fs
js
ja
idivb
ja
ja
nop
divb
mov
push
hlt
xor
js
inc
in
and
xchg
mov
inc
cmp
aaa
movsl
mov
repz
pop
lahf
jae
mov
addb
mov
jns
adc
ja
and
ss
aaa
out
bound
jb
out
mov
jb
out
repnz
mov
fbld
xorl
cmp
mov
ss
enter
or
clc
outsl
test
sbb
and
cmp
jns
xor
loopne
je
adc
jbe
ret
pop
xor
inc
jne
aaa
loopne
mov
stos
pusha
fs
or
mov
sub
divl
paddd
or
dec
jns
xchg
adc
push
xor
adc
add
test
les
imul
sub
iret
xor
pop
xor
fstps
and
jge
ss
mov
mov
mov
adc
cmpsl
sbb
inc
push
mov
stos
fnstcw
adc
mov
push
jns
ss
jbe
ret
pop
mov
jge
xor
pop
adc
push
or
mov
shl
mov
pop
mov
add
jne
dec
stc
daa
xor
jnp
nop
mov
dec
sub
mov
aaa
push
mov
adc
pop
repz
xor
mov
xor
jbe
pushl
xor
adc
xor
fs
xor
loope
add
imul
mov
je
xor
pop
jae
ss
add
repz
push
mov
ja
fnstcw
jns
mov
cmp
ja
cmp
sbbb
mov
js
and
nop
hlt
ss
xor
sahf
pop
hlt
jb
ret
jns
mov
pushl
lahf
insb
clc
add
jae
pop
fwait
cmpsl
ret
stc
jo
lods
mov
aaa
hlt
jp
je
xor
outsl
adc
and
aaa
and
mov
aad
or
mov
adc
clc
stc
stos
pusha
je
jle
mov
stos
adc
insb
xor
xor
xor
mov
daa
cmc
xor
xor
push
adc
inc
mov
mov
repnz
push
sub
jle
ja
xor
rorl
aas
je
data16
js
mov
stc
lods
mov
jg
je
and
add
addr16
dec
jns
xor
aaa
je
mov
aaa
mov
nop
jne
bound
jb
or
fnstenv
jb
or
je
pop
mov
sbb
fnstenv
dec
adc
mov
sbb
mov
xor
mov
movsl
mov
cltd
mov
hlt
pop
mov
mov
imull
ja
adc
mov
cmc
loopne
mov
cwtl
pop
out
ja
mov
jb
pop
pop
cmp
adc
add
popf
mov
stos
push
out
aaa
add
cmp
test
mov
adc
jb
mov
lock
and
mov
xchg
je
mov
jp
je
xor
jp
je
test
je
push
je
jge
jp
je
dec
je
bnd
sbb
pop
insb
stos
mov
andl
xor
pop
je
xorb
jp
je
stc
mov
xor
insb
sub
out
lods
sbb
pop
push
adc
insb
or
or
jns
mov
jno
insb
imul
aad
push
jp
dec
test
sbb
lret
sub
mov
fs
cmc
push
push
clc
add
mov
push
cmc
mull
push
divl
testl
outsl
push
idivl
testl
sub
test
imul
push
idivl
testl
rclb
mul
push
imull
pop
jle
or
lods
jns
mov
aas
jae
filds
flds
fldcw
cld
mov
movsl
xor
jmp
jns
pop
mov
js
mov
stc
push
mov
cmp
jns
mov
mul
jb
out
xor
jb
out
jne
jb
fists
aas
xor
mov
inc
xor
mov
shlb
mov
mov
sbb
adc
fdivl
lods
and
aam
idivb
je
movsl
je
int
jp
je
lcall
je
xchg
je
cmp
cmpsl
mov
and
fs
mov
cs
push
fs
jle
idiv
daa
fs
dec
fs
jp
fs
sbb
cmc
jp
fs
in
pop
or
je
popa
shlb
xor
mov
rcrb
xor
jbe
mov
jns
cmp
je
clc
pop
fidivs
lock
xor
notb
mov
mov
movsl
je
mov
dec
movsb
pop
lock
fadds
icebp
push
push
clc
cli
add
jno
xor
repz
mov
xchg
jno
js
mov
xchg
mull
stc
push
mov
xchg
std
nop
aaa
jns
mov
aaa
cmpsb
idivb
mov
notl
xor
and
lods
mov
cmc
inc
scas
testl
repnz
and
push
mov
xor
movsl
ja
jbe
mov
ljmp
jns
xor
pushl
bound
add
movsb
pop
jnp
mov
cmc
mov
jns
cmc
xor
adc
je
out
mov
neg
inc
mov
or
jmp
jb
addb
xchg
stos
clc
push
stos
inc
xor
in
pusha
jns
jns
xor
and
xor
push
xor
stos
pusha
adc
xchg
dec
xor
jne
rcll
je
or
jb
test
int
movsl
hlt
push
xor
mov
sbb
pushl
fnstenv
movsl
jbe
sub
adc
mov
mov
jle
xchg
notl
push
aas
push
inc
ss
mov
mov
aad
lods
cmp
hlt
mov
mov
xor
cmp
adc
test
test
mov
push
test
ss
and
test
xchg
inc
mov
mov
hlt
inc
and
les
xor
cwtl
mov
push
sbbl
addb
mov
js
es
cmp
mov
mov
clc
je
in
aaa
adc
mov
mov
xor
cmpsb
in
xor
xor
cmc
mov
sub
jo
lock
jae
push
shlb
adc
cltd
inc
and
xor
xor
push
ja
adc
jns
mov
adc
fprem1
dec
adc
cmpsl
sub
xor
sub
sub
pop
pop
divb
std
mov
jns
xor
jb
ret
jb
ret
jno
mov
push
out
fnstcw
sbb
cmp
js
mov
int
cmp
mov
aaa
in
mov
stos
fnstcw
adc
and
dec
mov
xor
fpatan
jae
jns
mov
xor
fdivrl
out
js
movsl
cmp
xor
out
jns
push
ss
ret
sub
push
xor
mov
bound
mov
out
push
ss
pop
xor
jb
or
mov
mov
inc
mov
pop
js
mov
fcomip
mov
add
loopne
sub
mov
mov
aam
xchg
xor
cmp
stc
mov
cmc
aaa
es
icebp
lea
jae
jbe
or
popa
aaa
xor
in
cmc
fucomip
bound
xor
icebp
stc
adc
xchg
jb
xor
sub
icebp
adcl
xor
sub
in
mov
insb
xlat
pop
and
out
repz
xlat
add
nop
jl
clc
and
jns
mov
scas
stc
mov
dec
push
neg
push
imull
idivl
testl
mov
and
and
and
js
jmp
idivl
jnp
and
add
adc
inc
mov
jns
mov
or
jns
mov
xchg
hlt
js
xor
bound
cmc
adc
push
cmp
test
cmp
sahf
repz
mov
cmc
mov
push
jns
mov
ret
and
push
cmc
sahf
pop
js
inc
clc
out
jno
or
pop
jbe
mov
hlt
mov
mov
cmc
idiv
rorl
cmpsl
repnz
cmp
mov
and
idiv
lea
movsl
mov
mov
js
scas
lods
and
push
sbb
or
xor
pushl
push
sub
inc
call
in
js
ss
cmc
xor
and
xor
call
jns
enter
cmp
leave
aas
xor
leave
aas
xor
leave
aas
xor
sarl
xor
sarl
xor
scas
ja
jns
mov
js
repz
sub
fs
pop
mov
in
cmp
adcb
sub
mov
inc
jne
jae
mov
in
mulb
mov
divb
xor
jb
ret
and
popf
mov
jb
adc
cmpsl
push
mov
rolb
js
int3
jbe
push
ja
clc
fdiv
enter
bnd
mov
push
js
cmp
in
pop
cmp
push
mov
lods
hlt
daa
mov
sbbl
mov
sahf
push
and
cmp
cmc
add
dec
adc
add
mov
adc
sbb
test
daa
shr
js
push
clc
mov
mov
fnstenv
cmpsb
jbe
jbe
ljmp
inc
cwtl
mov
jae
xor
divb
adc
mov
push
jae
xor
js
xor
jb
mov
cmc
fdivs
add
sub
ficoml
idivl
push
mull
js
mov
clc
jp
insb
mov
push
push
js
inc
jmp
sub
js
inc
lcall
inc
lods
in
sub
adc
in
push
or
mov
jbe
ret
or
clc
adc
cmp
or
adc
test
jae
inc
push
jp
and
out
mov
push
mov
bound
cmp
andb
pushl
clc
push
xorl
mov
mov
stos
clc
dec
stos
clc
icebp
stos
pop
jns
mov
jbe
mov
notb
pop
cmpsl
inc
icebp
out
nop
and
adc
and
xor
loopne
repnz
int
std
clc
js
divb
stos
clc
cmp
jbe
ss
data16
mov
aaa
fdivs
js
mov
and
mov
mov
mov
push
cmpb
mov
int
stc
jo
ds
repz
loop
mov
xor
std
cmp
out
mov
mov
cmp
js
divb
mov
mov
mov
jno
mov
hlt
mov
sti
jb
call
xor
adc
aas
and
push
jb
ret
insb
enter
cmp
sbb
jae
stc
cmp
mulb
ss
mov
cmp
adc
xor
xor
aaa
jo
jbe
cmc
es
xor
je
jbe
jb
lods
jae
bound
and
ss
mov
cmp
jns
xchg
add
cmp
jns
mov
xor
aas
xor
inc
js
rcrb
mov
jns
push
adc
ret
jb
ret
jb
ret
std
mov
aad
std
lods
mov
jns
je
push
rcrb
fnstenv
ret
jb
ret
jb
ret
test
cmpsb
mov
shll
aam
xor
and
js
jns
push
push
divl
mov
in
mov
xor
clc
cld
scas
mov
das
xchg
scas
pop
dec
outsb
jns
xchg
test
lret
xchg
mov
cmc
push
not
je
cmp
mov
jb
mov
xor
stc
cmp
adc
jg
idiv
xor
mov
lods
cmc
push
xor
xchg
inc
and
repz
sub
adc
mov
pop
les
ja
jns
jns
xor
mov
dec
cmp
xchg
stc
pop
push
pop
scas
cmp
ds
xor
adc
je
mov
mov
or
xchg
test
mov
je
test
js
mov
sahf
push
cmc
idivb
push
xor
and
xchg
inc
and
jne
and
repz
mov
testl
push
jbe
repz
js
mov
push
pop
dec
push
js
cwtl
js
fcoms
jno
jns
mov
and
lods
sub
repz
not
xor
std
je
cmpsb
rcrb
mull
jns
sahf
push
xor
idivl
jle
xor
jne
lods
aad
std
lods
mov
xchg
std
lods
repz
dec
js
mov
ljmp
push
jle
bnd
je
xor
mov
cmp
repz
lea
ss
dec
notl
push
sahf
pop
cmp
enter
xchg
fnstenv
sub
hlt
aas
sbb
divb
or
jns
dec
adc
fprem
push
mov
mov
push
ss
sbb
ja
fcomp
sub
jb
xor
push
mov
xor
mov
and
dec
or
das
ds
ss
out
testl
push
std
lods
mov
xor
xchg
std
lods
xor
jb
je
jle
push
shlb
ret
jb
ret
cmp
xor
xor
adc
xor
mov
and
lods
sub
repz
xchg
cwtl
inc
xor
mov
jae
ja
js
repz
idivb
lods
cmc
mov
idiv
out
sbb
mov
outsl
cmp
jns
push
cltd
cmp
xor
and
scas
xor
and
insb
mul
or
popf
js
mov
lods
call
out
mov
out
push
fsubrs
pop
and
scas
js
mov
out
hlt
test
lds
ja
jmp
pusha
and
cmp
repnz
jns
adc
adc
push
pop
mov
fprem
push
repz
lods
and
pop
xor
push
fisubrs
mov
clc
cmc
stos
filds
mov
xor
add
jb
adc
shll
push
mov
cmp
inc
mov
mov
repz
jns
clc
lods
cmp
mov
test
and
lods
pop
sbb
and
insb
repnz
bound
mov
and
sahf
js
lods
rcrb
pop
stos
loope
cmp
into
push
mov
aaa
dec
je
fs
mov
mov
jb
adc
stc
and
stc
lods
mov
cmc
adc
mov
insb
inc
enter
scas
adc
repz
cmp
mov
dec
repnz
add
add
shll
ja
sub
repnz
mov
jb
sbb
mov
jns
mov
repz
aaa
cld
imul
mull
aas
out
jne
cmc
std
jmp
rcr
xor
test
and
xchg
dec
movsb
stc
insb
dec
stc
and
shll
divb
mov
ljmp
inc
lcall
mov
push
xor
das
scas
mov
and
imul
repnz
insb
xor
bound
adc
cmp
pushf
enter
pop
pop
fnstcw
daa
and
enter
xchg
icebp
sub
ja
mov
jns
cmpsl
xor
jae
mov
jecxz
ja
int
or
pop
in
sahf
sbb
xor
sub
cmp
pop
jg
mov
or
pop
popa
mov
loop
jge
or
push
cwtl
jae,pn
xor
mov
jbe
mov
ja
clc
pop
mov
pushf
std
nop
ss
push
in
mov
mull
shlb
pop
out
stc
idivb
xor
jae
and
lods
xor
xchg
lods
jns
push
std
lods
ja
sub
fsubrs
insb
cmc
loopne
pop
xor
jb
ret
sub
test
push
push
aaa
xchg
inc
push
js
ss
and
adc
push
mov
mov
jb
scas
mov
jle
or
sub
jmp
and
test
idivb
jp
je
push
jno
fdecstp
mov
test
incb
and
test
in
mov
into
cmpsl
repz
mov
inc
jmp
and
aad
jp
arpl
test
nop
jno
sub
inc
repnz
mov
and
adc
insb
xor
and
mov
jb
xor
and
js
mov
xchg
jns
push
mov
imulb
ja
inc
sub
inc
movsl
xor
and
repnz
mov
js
addr16
je
js
addr16
xor
adcl
adc
xor
sbb
jb
mov
shrl
and
std
nop
stc
jns
mov
push
and
insb
xor
push
pop
enter
cmp
or
jne
dec
and
aaa
out
xlat
push
sbb
out
cmp
push
inc
mov
in
cmp
pop
out
aas
test
nop
inc
cmp
popl
fs
mov
push
xchg
cmp
xchg
push
inc
mov
stc
imul
daa
mov
shlb
pop
dec
stc
aad
sub
mov
mov
out
dec
jl
pop
test
lds
inc
icebp
sbb
mov
les
pop
dec
ss
leave
push
xchg
cmp
pop
lock
dec
or
xor
pop
sbb
stos
cmp
or
movsb
enter
ret
std
mov
push
cmp
cld
pop
flds
dec
mov
xlat
xor
mov
ret
je
mov
mov
xlat
cs
test
adc
and
sub
cmp
mov
xchg
jnp
jbe
cmp
xchg
mov
in
xor
cmp
out
sbb
and
jg
xchg
bnd
scas
nop
cmp
or
pinsrw
sbb
jp
or
hlt
pop
sbb
jno
inc
pop
cmp
imul
lcall
mov
sub
fiadds
out
add
and
mov
shll
xchg
jle
or
bound
aaa
aam
inc
hlt
mov
xchg
mov
sbb
test
sbb
fsubrs
inc
movsb
sub
nop
sbb
jae
imul
inc
in
lods
mov
adc
mov
sbb
sbb
xor
xchg
test
sbb
ja
xchg
insb
mov
jbe
xor
mov
adc
test
lods
hlt
sub
push
aaa
insb
mov
sbb
insb
sub
sbb
jbe
lods
inc
sub
xor
xchg
aaa
jbe
lods
sub
push
mov
insb
mov
jo
mov
lds
bound
lods
jae
mov
jb
sbb
xchg
aam
gs
lods
mov
stc
push
dec
cmp
or
jecxz
aaa
add
mov
mov
pop
push
sub
push
sbb
jbe
lods
idivb
icebp
mov
sbb
push
mov
scas
jb
mov
push
sub
dec
xchg
ss
and
movsl
sbb
sub
movb
test
sbb
jbe
je
pop
mov
sub
xchg
aam
and
ja
push
jbe
lods
dec
sub
push
clc
mov
sub
jo
insb
push
test
sbb
cmp
jae
shrb
push
lods
test
xor
cmpsl
pop
insb
xchg
mov
sub
test
sbb
jbe
lods
jne
movsb
push
mov
aaa
test
sbb
stc
lods
call
xchg
mov
in
gs
lods
je
xlat
xchg
sbb
xchg
ss
mov
push
jne
insb
je
negl
addr16
lods
jbe
jmp
dec
test
sub
xchg
je
add
inc
insb
xchg
scas
inc
sub
push
gs
insb
add
cmpsl
sbb
jbe
hlt
leave
out
mov
jo
je
jo
insb
cwtl
test
sbb
jbe
lods
pusha
sub
sub
sbb
push
adc
or
test
test
in
push
sbb
insb
push
imul
jo
sub
mov
sbb
xlat
out
out
lods
jo
sub
test
sbb
jbe
lods
sarl
push
jns
insb
ss
sbb
jbe
in
data16
mov
inc
sub
push
xchg
and
repnz
cs
mov
sub
lods
jo
sub
ja
negl
je
in
jne
xchg
push
and
sbb
push
pop
iret
js
lods
pop
sub
push
push
imulb
mov
jbe
lods
adc
subb
sub
sbb
data16
lods
add
xor
data16
insb
push
test
sub
mov
je
xchg
lods
pop
sub
fsubrs
sbb
jbe
lods
cmc
sub
mov
lock
adc
negl
ja
xchg
js
push
mov
sbb
sub
insb
mov
leave
sbb
cwtl
lods
or
adc
jbe
lods
jne
test
fs
ss
or
push
sbb
jbe
lods
xchg
sub
movsb
xor
sbb
jbe
lods
shl
test
stos
sub
push
mulb
imull
sbbb
loop
inc
mov
repz
mov
sbb
adc
test
les
add
jb
pop
std
pop
je
jo
push
xor
loop
inc
push
sub
sbb
loopne
adc
movsb
or
out
insb
out
sbb
jbe
lods
clc
mov
jo
push
lds
aam
push
sbb
ss
icebp
sub
push
scas
add
je
orb
push
lods
xor
adc
sub
pop
xlat
xor
imulb
addr16
outsb
js
lods
jo
sub
add
xor
out
mov
ret
jo
sub
js
icebp
xchg
and
ret
inc
int3
adc
cs
pop
into
test
fidivs
and
cmp
adc
mov
mov
pop
aaa
jo
fadds
pop
xchg
lods
test
test
sub
cmp
cmp
clc
xor
add
pop
cmp
aas
xor
sub
mov
mov
cmpsb
cmp
dec
xor
lea
cmp
xchg
jl
ret
jnp
cmp
mov
xor
or
and
jb
daa
aam
cmp
and
xchg
sbb
gs
cmp
lret
stos
repnz
pop
mov
pop
mov
incb
jmp
inc
fisubrs
xor
icebp
cmp
sub
movl
iret
into
je
call
lret
pusha
pushf
aad
outsb
cmp
cmp
lahf
jo
out
push
dec
je
ret
insb
cmp
and
imul
ds
push
mov
jmp
cmp
jp
jg
cmp
mov
xchg
lahf
sub
dec
push
lcall
pop
dec
xchg
test
hlt
mov
mov
lods
add
sub
push
mov
mov
mov
stc
cmp
in
repz
lahf
cmpsl
jecxz
and
cmp
call
sub
cmp
mov
cmp
push
fs
lock
push
rorl
aaa
mov
test
int
loope
or
inc
pop
cmp
fcompl
xchg
pop
jecxz
dec
push
push
xor
push
push
sub
inc
lret
cmp
ficompl
cmp
rolb
lahf
lret
mov
flds
fnstsw
inc
or
or
andl
rorb
sar
sub
cmp
data16
cmp
aam
shrl
idivb
mov
mov
cmp
mov
in
loop
jmp
jns
mov
and
and
dec
mov
aaa
shll
inc
stc
push
mov
mov
or
push
fisttpll
jo
sbb
xchg
add
cmc
test
test
xor
xor
cmp
or
mov
lock
push
and
jnp
jle
adc
inc
pop
add
pop
xor
cmp
xlat
xor
xor
insb
sub
and
icebp
rcrb
cmp
ss
cmp
daa
xchg
xchg
push
cmp
inc
add
add
rcrb
mov
pop
stos
or
cmp
jp
popf
nop
sarb
stos
mov
xor
mov
inc
adc
hlt
out
pop
add
mov
cmp
push
cwtl
cmp
xor
dec
lods
movsl
xchg
xor
mov
ss
jl
sbb
xchg
cmp
and
or
xchg
xchg
repz
jo
jmp
cmp
outsl
es
cmpb
dec
mov
cmp
inc
and
xchg
add
xor
arpl
xchg
lods
push
lret
cmp
mov
or
cmp
pop
dec
mov
sub
loop
sub
sbb
cltd
mov
jl
pop
in
sbb
mov
add
inc
mov
call
sub
add
cmp
or
push
jb
mov
pop
xor
sub
test
sub
inc
add
push
sub
popf
xchg
cmpsl
in
cmp
scas
add
and
mov
push
add
mov
mov
cs
jno
stc
mov
mov
xor
jg
mov
sub
push
js
mov
into
add
inc
and
mov
lcall
int
xor
pop
or
mov
loope
xor
stos
scas
jae
rcll
cli
sub
daa
fdivp
and
andl
sarl
fsubs
push
jmp
mov
sub
mov
push
fwait
xchg
lds
mov
xor
mov
mov
movl
jl
mov
mov
xchg
or
cmp
jbe
std
repnz
and
jge
cmp
fsts
pop
xor
inc
jmp
mov
sub
sbb
out
mov
ja
repz
mov
test
jbe
jl
lret
add
push
mov
mov
test
jns
jmp
xor
testl
and
sti
into
cld
add
ret
or
flds
test
pop
sbb
xor
imul
mov
cmp
mov
push
mov
fstpt
or
xchg
add
jno
xchg
aaa
sbb
mov
dec
dec
push
adc
fsub
loop
xor
int
imul
mov
mov
xor
xor
outsl
into
xor
lret
fcoms
inc
aam
xchg
jbe
jae
jae
mov
in
nop
inc
dec
lods
cmp
in
cmp
cmp
orb
mov
loope
mov
clc
fldenv
pop
stos
inc
xor
dec
or
lods
jo
movsb
cmp
test
stos
out
push
mov
cmp
adcl
cmp
dec
xor
dec
mov
add
sub
and
jne,pt
mov
mov
jne
incb
xor
mov
leave
imul
sarl
dec
push
xlat
cmp
and
inc
cmp
xchg
scas
cld
cmp
inc
lds
mov
dec
pop
mulb
lahf
dec
shlb
daa
jp
cmp
aaa
dec
stc
sarb
call
repz
fisubl
inc
in
xor
lock
rcr
cmp
mov
sub
sbb
sbb
xchg
mov
inc
cmp
push
jno
xor
sub
adc
add
cli
ss
pop
mov
daa
pop
cmpsb
enter
jnp
pop
mov
arpl
xor
mov
fs
mov
adcb
push
es
xorl
or
jge
sarb
cli
loop
das
inc
or
xchg
iret
enter
icebp
ja
sub
mov
xchg
jne
xchg
dec
and
mov
or
push
cmp
jne
xor
subb
adc
lods
test
and
cmp
jae
adc
and
mov
jno
add
aas
or
cmp
dec
sub
popa
cmp
loop
lret
cmp
lret
rcrb
xchg
dec
lcall
and
add
mov
or
je
in
jbe
test
iret
mov
out
xor
jp
cmp
das
mov
pop
cmp
fsubl
rcl
pop
insb
lock
xor
adc
shlb
fcomp
mov
cmp
pop
and
cmp
mov
pop
push
xor
daa
leave
in
dec
cmp
push
sbb
pop
test
inc
add
sub
pop
and
adc
push
lds
and
add
and
cmp
into
pop
jp
push
jo
rcr
adc
jae
xchg
pop
leave
push
ret
into
scas
xor
shl
inc
sub
adc
xor
jae
xchg
jns
mov
adc
inc
cmp
xlat
cmpsl
push
mov
xchg
jno
mov
dec
cli
sbb
xor
mov
test
pop
out
xor
sub
in
sub
cmp
insb
popf
iret
and
dec
jne
out
lcall
and
mov
jle
dec
jns
call
cmp
sub
cmpsb
adcb
movsb
xor
xor
lock
fcomp
stos
inc
cmp
inc
imul
cmp
and
ja
dec
mov
cmp
shll
and
mov
push
stos
rcrb
aaa
jmp
pushf
sbb
inc
xor
xor
mov
add
add
pop
es
mov
mov
cmp
cmp
dec
bound
dec
mov
in
outsl
cmp
pop
jecxz
leave
ljmp
adc
mov
xor
outsl
xor
jo
sub
adc
xor
pop
jl
cmp
xchg
xor
adc
push
mov
ss
cmp
dec
and
inc
dec
pop
pop
pusha
sub
or
sbb
inc
ds
in
cli
lods
and
stc
mov
mov
jnp
ret
cmp
call
cwtl
sub
iret
xlat
push
ret
mov
mov
dec
aam
mov
cmp
jge
repnz
mov
push
mov
cmp
xor
lods
cmp
adc
cwtl
mov
inc
idivb
push
arpl
xor
aaa
lret
test
nop
sbb
cmp
sub
lods
pop
stc
sub
sarl
cltd
icebp
mov
adc
stos
in
sbb
and
adc
jae
xor
cmpsl
dec
mov
test
jp
xchg
insb
mov
mov
cmp
mov
call
jno
clc
pushf
xchg
xor
inc
cmp
sub
in
push
cmp
fdivp
ss
aas
fstpt
lock
nop
pop
das
test
dec
test
push
jl
icebp
push
cmp
std
ja
and
or
hlt
sub
pop
inc
lahf
jl
inc
cmp
icebp
jg
jg
test
mov
xchg
add
loopne
jmp
lock
cmp
enter
out
jae
icebp
stos
sub
roll
ljmp
and
aas
xchg
push
cli
je
pop
xchg
cmp
push
jns
xor
adc
xlat
mov
and
sub
mov
ret
or
repnz
sti
cmp
dec
add
stc
sbb
cmp
ss
mov
subl
sbb
mov
adc
inc
inc
popa
daa
fsts
test
jge
xor
mov
sub
dec
dec
movsb
loop
jae
mov
or
and
cli
xchg
arpl
push
arpl
cmp
leave
mov
xchg
stc
sbb
xchg
dec
cmc
push
subl
inc
xchg
xor
push
mov
lcall
cmp
push
icebp
loopne
jno
jb
inc
jecxz
pop
lret
stos
cmp
int3
adc
cmp
bound
cmpsb
aam
mov
mov
pop
mov
pop
dec
neg
cmp
scas
xor
rorb
mov
add
cmp
sub
ljmp
pop
adc
mov
xchg
cmc
inc
testb
lret
add
mov
mov
test
repz
jbe
xchg
add
pop
xor
xchg
inc
int
out
adc
mov
add
repnz
das
pop
out
sbb
lcall
loop
mov
inc
jbe
mov
mov
leave
mov
jae
dec
or
mov
repz
cmp
mov
cltd
test
dec
ret
cld
xchg
mov
sub
pop
mov
sub
cmp
sbb
xchg
movsb
lcall
add
adc
enter
sbb
cmp
jp
inc
addb
mov
clc
mov
shlb
stos
xchg
inc
jecxz
and
nop
das
cmp
adc
outsl
roll
add
fdivs
or
out
xchg
push
js
xor
mov
xor
add
inc
xor
mov
add
xor
inc
pushl
jg
dec
repz
inc
xchg
jecxz
ficoml
mov
cmp
xchg
xor
test
and
or
adc
pop
popa
rcrb
shrl
repz
jns
cmp
and
and
jne
nop
test
dec
outsb
lret
jno
cmp
xchg
jb
push
jg
inc
mov
cmp
push
mov
shl
es
sbb
jmp
add
mov
cmp
aam
xchg
xlat
jnp
xchg
aaa
add
imul
cmp
fs
fidivrl
inc
sbb
pop
pop
movsb
rcl
xor
jb
jl
or
xor
inc
dec
xor
mov
fsubl
mov
out
int3
cmp
xchg
fiaddl
nop
mov
dec
jmp
cmp
mov
fdivs
pop
pop
shll
jae
addr16
aas
mov
cmp
sbb
rcrb
cmp
and
aaa
jmp
xchg
xor
jnp
int
inc
and
xor
rcll
and
pop
or
jmp
push
imul
push
jo
fldl2e
sbb
cmp
dec
jle
pop
and
sbb
xor
or
cmp
jmp
jecxz
fmull
push
popa
es
aaa
add
and
inc
xor
jne
aad
inc
sub
cmp
adc
jmp
cmp
adc
jo
xor
xor
dec
push
cmp
mov
cmp
add
cs
cmp
cli
sbb
inc
cmp
sbb
sub
mov
clc
scas
fstpt
xorb
popf
dec
fcmovbe
and
cmpsb
hlt
imul
cmpsl
adcl
rcl
pop
stos
cmp
or
add
jb
xor
mov
cli
fadds
adc
cmp
out
push
jmp
cmp
stos
or
push
pop
icebp
pop
pop
pop
mov
cmpl
pop
hlt
sub
ret
dec
xor
inc
in
mov
shl
fidivs
ljmp
jno
jbe
ret
int
cmc
fsubs
mov
xor
pushf
pop
mov
or
sarb
inc
pop
dec
adcl
in
add
dec
dec
cltd
push
ret
aam
pop
xchg
fistpll
push
mov
cmp
dec
and
seto
leave
mov
adc
mov
iret
int
pop
cmp
xor
xchg
into
daa
inc
testl
or
fcoms
outsl
ljmp
les
xchg
mov
shlw
sbb
ret
movsb
sub
imul
add
lods
or
dec
jle
jbe
cmp
cmp
cmp
cmp
jnp
xchg
cmp
dec
aam
pop
gs
pop
xor
mov
or
ljmp
cmp
jne
sub
push
cld
xor
cmpsb
frstor
hlt
aaa
jo
shlb
fcmovnb
iret
mov
cmpsb
xor
add
sarb
push
and
jbe
mov
jne
test
and
in
pop
mov
xor
inc
mov
rorb
in
lret
pop
loopne
sub
sbb
int
aam
xor
add
jbe
push
mov
lahf
or
fstpl
aas
lcall
adc
xor
loope
cmp
int3
push
movsl
cmp
ja
xchg
daa
jp
in
cmp
pop
hlt
test
cwtl
xor
xchg
fstps
lahf
push
mov
aaa
add
mov
nop
loop
or
cmp
leave
jle
out
repz
daa
test
xor
movb
sti
pushf
idivb
push
and
jmp
mov
inc
lds
int
iret
mov
xchg
outsl
lahf
fs
cmp
mov
outsb
fldl
gs
cmp
mov
inc
push
pop
adc
dec
out
mov
pop
loop
adc
js
test
mov
xor
je
cmpb
cmp
cmp
mov
in
popa
xor
rcr
mov
jne
test
inc
xchg
repnz
mov
sbb
xchg
fidivl
fsubrs
adc
cmp
sub
int
pop
std
mov
cmp
and
sub
and
cmp
movsb
lea
scas
xlat
mov
jle
sti
mov
test
xorb
cmp
rep
adc
ljmp
scas
insb
inc
lods
add
mov
mov
filds
sub
in
inc
mov
int3
xchg
inc
cmp
out
xlat
popf
cmp
adc
cmp
std
shr
sbb
test
jne
cmp
or
stc
cmp
jge
cmc
xor
pop
lcall
ja
xchg
lds
das
cmp
mov
imul
push
loope
jno
sbb
js
jmp
sub
into
xchg
jo
xor
mov
rep
inc
jmp
mov
mov
mov
inc
push
andl
jne
repz
sub
cmp
or
notl
and
xchg
cs
ret
add
les
adc
and
scas
mov
mov
adc
dec
or
mov
std
cmp
mov
xchg
imul
jb
shlb
sahf
repz
in
mov
repnz
popa
orb
mov
test
cmp
fadds
adc
pop
lahf
out
xchg
test
dec
mov
pop
mov
lret
mov
mov
xchg
and
pop
test
pop
arpl
lahf
mov
xor
mov
cmp
mov
push
lods
cmp
loope
imul
rorb
sbb
cmp
lock
jb
dec
dec
stos
repnz
rcl
notb
outsb
shrl
inc
pop
fisttpll
jg
leave
pop
inc
xor
scas
mov
dec
in
adc
mov
jns
jne
sbb
mov
fadds
or
outsb
clc
cmp
ret
les
sbbl
pop
jae,pn
pushf
aad
in
and
mov
shll
dec
fwait
push
or
mov
sub
mov
xor
cli
inc
in
xchg
test
xor
sub
mov
cltd
pop
jle
mov
divb
mov
mov
call
cld
ficompl
movsl
aas
insl
sub
xchg
das
xchg
xorl
daa
cmp
or
negl
cmp
sub
orb
xor
pop
fucomip
sbbl
popa
inc
cmp
in
cmp
xor
push
inc
outsl
fmuls
test
fwait
jl
cld
xor
hlt
aas
out
pop
adc
xor
cmp
dec
mov
adc
and
xor
inc
push
cld
out
push
in
mov
repnz
add
xor
and
add
shll
scas
add
mov
aam
sti
mov
xlat
iret
scas
movl
out
je
mov
and
cmp
idivl
push
aas
jp
xor
and
scas
jb
pushl
cmp
fcmovnbe
stos
loopne
filds
outsl
aaa
daa
cmp
fcoms
mov
adc
sbb
xchg
cli
imul
xorl
xor
cmp
dec
mov
xchg
arpl
jp
push
rorb
das
mov
insb
pushf
mov
js
jno
sahf
cmp
loopne
dec
cmp
fcomip
dec
xchg
mov
movsl
sbb
leave
jp
frstor
movl
xor
push
cmp
or
scas
cmp
js
push
inc
icebp
lods
mov
pop
mov
pop
xchg
inc
mov
xor
inc
fdivrs
test
inc
push
jbe
in
lret
sub
or
adc
inc
cmp
sub
cmp
push
push
pusha
mov
adc
sub
add
pop
add
fimull
dec
or
mov
add
dec
incb
mov
popf
cmp
movsb
mov
test
es
jp
xor
xchg
mov
cmp
in
push
push
push
add
pop
adc
xor
cmp
andb
sub
filds
inc
xchg
cmp
out
mov
repnz
inc
xor
xchg
adc
pop
mov
xor
dec
outsb
and
dec
mov
cmp
dec
or
clc
lahf
jecxz
xchg
mov
lahf
out
data16
cmpxchg
ljmp
cmp
cmpl
lret
nop
dec
in
fdivp
sub
out
push
mov
nop
mov
adc
cmp
push
icebp
push
hlt
repz
mov
lods
fidivrl
mov
fwait
inc
jnp
inc
fs
seta
jns
je
cwtl
insl
mov
shrl
sbb
cmp
sub
cli
mov
push
pusha
test
dec
or
shrl
dec
push
mov
mov
mov
cli
shlb
sub
push
movsl
xor
out
out
dec
pop
imul
push
fdivl
cmpsb
test
rclb
inc
cmp
dec
icebp
dec
dec
and
mov
or
sbb
cmpl
jecxz
cmc
jno
cmc
cld
std
mov
daa
and
add
rol
stc
ffree
cmp
fdivrl
push
dec
mov
jg
jecxz
fsts
aaa
cmp
xchg
pop
or
cld
pop
popf
icebp
inc
pop
xor
nop
int
jbe
inc
add
mov
out
mov
stc
push
addr16
ret
and
cmpb
das
aam
cld
cmpsl
enter
and
sbb
fimuls
stos
shll
lcall
cmp
sbb
push
mov
xchg
jne
xor
pop
mov
cmp
sbb
adc
adc
sbb
xor
mov
aam
ljmp
lock
stos
pushf
cld
js
xor
test
addr16
sbbb
out
iret
movsl
cwtl
out
sarb
xchg
mov
adc
pop
ret
sti
xor
xchg
aad
inc
mov
int3
scas
cmp
jae
fcmovnbe
rorl
cld
cmp
cmpl
sub
shll
jne
fdivrl
sbb
into
adc
adc
cmc
mov
gs
out
test
pop
ja
out
adc
lds
inc
cmp
xor
repz
cmp
clc
mov
es
cwtl
sbb
stos
cli
sub
shl
pop
cmp
stc
dec
mov
add
loope
mov
xchg
jge
scas
sub
pop
jecxz
lahf
cs
std
div
es
add
out
fsts
pop
scas
cmp
loope
dec
lret
imul
test
jno
xor
inc
mov
sub
jmp
cmp
or
jb
es
mov
lock
cmp
and
jnp
out
gs
pop
movsl
mov
or
test
scas
fistpll
and
testb
cwtl
shlb
push
cmp
stc
mov
sbb
jecxz
std
call
leave
scas
mov
jle
shlb
jne
or
adc
cmp
fwait
inc
lret
pop
mov
add
in
adc
cmp
dec
add
mov
sbb
inc
cmp
push
jmp
mov
xor
daa
jge
cmp
add
fisubl
xchg
sbb
repnz
mov
inc
xorl
and
cmp
stos
clc
test
leave
lods
pop
rol
les
in
mov
cmp
xor
adc
out
lahf
leave
or
mov
push
addb
mov
js
sbb
jp
cmp
test
shlb
push
lcall
pop
clc
loope
mov
xor
xor
xor
cmp
or
pop
add
fcomps
dec
add
loopne
mov
mov
adc
jle
test
out
std
cmp
pusha
xor
push
dec
test
jns
xor
hlt
outsb
xor
dec
rolb
or
adc
cmp
fidivrs
imul
sbb
xor
call
popa
cmp
push
roll
insb
xor
les
cmp
mov
jae
xor
sub
mov
pop
pop
jbe
sbb
pusha
add
jne
mov
and
mov
cmp
cs
sbb
cmc
cmp
fucomi
ret
shl
inc
cwtl
out
mov
repz
idivl
mov
pushf
mov
pop
xchg
mov
fcmovbe
mov
insl
cmp
test
cld
and
mov
and
in
pushf
sub
adc
out
and
cmp
add
inc
leave
jle
cmp
push
mov
sub
mov
cmp
cmpsl
mov
xor
xor
cmc
dec
mov
cmp
dec
nop
push
pop
sahf
pop
add
lea
call
mov
decl
jae
or
mov
cmp
orb
repz
popf
sbbl
bswap
cld
arpl
mov
push
ror
das
movsl
fisttpll
stos
ljmp
mov
mov
scas
add
xor
enter
push
cmp
jg
push
mov
popf
jmp
lock
xor
out
sbb
lds
xchg
and
add
cltd
xchg
xchg
push
dec
loopne
and
xchg
adc
andb
cmpsl
xlat
dec
pop
hlt
mull
mov
adc
pop
xchg
lds
js
xor
push
test
pop
test
mov
dec
or
rolb
fs
push
out
mov
push
cmp
fistpll
push
lahf
ja
and
xor
lret
cmp
jle
xor
or
rorl
popf
jae
movb
lods
jae
sbb
jp
xchg
xchg
cmp
mov
movsl
leave
dec
cmp
pop
mov
cvtps2pd
outsl
bound
pop
leave
cltd
pop
icebp
into
mov
out
cmp
cmp
icebp
lret
ss
and
cmp
dec
adc
cmp
mov
mov
cmp
inc
and
cmp
ret
arpl
xlat
xchg
int3
cmp
adc
scas
mov
ja
hlt
cld
pop
mov
stos
and
dec
xlat
pop
xor
push
sub
jbe
cmpl
js
mov
sub
fistpll
jae
imul
push
and
outsb
pop
mov
mov
cmp
sbb
in
aas
push
dec
mov
push
inc
jle
idivb
xor
mov
js
lahf
lods
fadds
repz
lea
popf
ljmp
test
andl
pop
mov
pop
aam
call
cmc
cmpsb
push
xor
cmp
jge
int
or
pop
rcl
push
xor
cmp
sahf
ja
mov
fldenv
iret
mov
dec
insl
aam
outsl
jl
test
cmp
lret
inc
outsb
adc
cmp
mov
inc
cli
pop
sbb
mov
fidivl
cmp
adc
lret
inc
mov
push
and
call
mov
mov
mulps
mov
xchg
shlb
xlat
push
enter
loopne
xor
sub
lods
ss
sbb
or
sbb
dec
inc
ja
or
pop
cmp
out
aam
icebp
mov
repz
push
and
mov
add
aam
sbb
pop
fildl
popa
push
mov
popl
fwait
jae
sahf
mov
mov
inc
lock
clc
push
data16
add
xchg
cmp
das
cmpsl
rcll
cmp
and
and
push
lods
lret
es
insb
xchg
cmp
jl
and
jmp
arpl
xchg
cmp
or
adc
movsl
dec
xor
cmp
adc
dec
sub
movsb
sbb
shlb
hlt
inc
test
mov
sbb
popa
push
cwtl
filds
lea
xor
adc
xor
out
or
cmp
mov
add
jno
push
mov
insb
or
cmp
iret
dec
fsubs
scas
jp
and
pop
push
les
stos
jl
or
orb
xor
sahf
add
xor
push
add
ja
sub
cmp
add
es
jmp
cld
andb
add
mov
add
loopne
inc
and
cmp
push
cwtl
adc
jo
xor
inc
add
cmp
cli
push
fmuls
add
inc
jnp
bound
xor
daa
dec
lahf
xchg
mov
ljmp
call
xor
repnz
mov
addr16
aam
imul
sbb
sbb
cmp
push
or
sub
fildl
out
jne
mov
sbb
and
push
mov
push
xchg
xchg
jge
jbe
cmp
aam
mov
or
and
clc
into
cmp
push
dec
das
xor
add
std
ljmp
in
sbb
jae
xor
cltd
add
jne
mov
cmp
xchg
xchg
add
mov
call
inc
inc
adc
and
mov
popa
jne
hlt
inc
xchg
push
xor
cmp
out
sub
repz
cmp
je
cs
and
adc
inc
out
pusha
cmpl
addr16
fcoml
dec
cmp
sbb
int3
or
test
pop
dec
mov
pop
fidivs
push
aad
sub
jno
movsb
cmp
adc
and
or
stc
dec
mov
dec
cmp
lcall
mov
xor
mov
push
xor
scas
sub
pop
sbb
xor
mov
in
and
push
cmpl
or
mov
mov
ss
or
mov
mov
outsl
cmp
pop
loope
fwait
fs
enter
xor
push
cmp
ja
negl
dec
xchg
adc
addr16
out
cmp
hlt
out
push
cmp
push
pusha
clc
adc
sbb
pop
cmp
jne
inc
add
in
call
cmp
lahf
out
pop
and
bound
je
jne
sbb
push
sahf
adc
ja
jno
jmp
andb
pop
lret
scas
pop
cmp
push
inc
sarl
cmp
stos
mov
rcrl
stos
hlt
mov
cmp
adc
mov
sbb
cwtl
cmp
ud2
repz
test
into
xor
jae
xchg
jns
dec
filds
pop
out
xchg
xor
rorl
aas
mov
jb
sahf
cmp
fs
and
dec
arpl
stos
cli
xchg
ljmp
pusha
mov
or
mov
iret
lds
mov
push
mov
cmp
adc
shlb
cmp
sbb
mov
mull
xchg
sub
inc
mov
movsl
and
rolb
sbb
repz
movsl
lret
mov
mov
adc
pop
sbb
push
cwtl
xchg
test
mov
mov
pusha
jns
sahf
cmc
aam
adc
inc
xchg
bound
push
add
push
jecxz
inc
in
aad
mov
movsb
out
pop
sar
xchg
aas
add
mov
rclb
stos
adc
xchg
inc
jne
xchg
ret
stc
js
les
xchg
xor
add
test
lock
lahf
insb
xor
aam
ffree
gs
dec
and
jne
jmp
adc
adc
inc
jns
or
mov
gs
sub
adc
xor
leave
push
xchg
test
pop
mov
out
loope
out
repnz
jne
lods
sbb
out
fsubrs
xchg
xor
xchg
sub
test
ret
lret
adc
fcompl
fwait
cmp
pop
adcb
fwait
ja
adc
inc
testl
pop
pop
push
xchg
adc
mov
mov
pop
daa
mov
inc
pop
or
icebp
or
pop
leave
sub
xorl
dec
sti
mov
cmp
adc
push
adc
cmpsl
rcl
lods
jmp
lds
iret
out
mov
sbb
enter
dec
xchg
pop
fcomps
mov
daa
add
int3
les
js
ss
jp
push
and
mov
xor
adc
das
sbb
pushf
xchg
mov
xchg
mov
pusha
leave
loope
dec
push
jle
add
daa
jno
sti
jge
clc
mov
push
mov
insl
adc
adc
pop
lea
push
lods
mov
lret
cmp
pop
mov
inc
das
jp
inc
cmc
into
nop
cwtl
dec
push
adc
adc
or
jae
int
pop
shrl
repnz
push
pop
test
and
or
jae
dec
pop
mov
popa
sbb
xchg
loop
mov
or
repnz
daa
or
clc
leave
repz
mov
mov
lea
ja
not
sub
bsr
not
add
dec
sbb
adc
bswap
mov
jo
push
pusha
clc
mov
movb
test
push
repnz
jmp
neg
clc
sub
jmp
mov
xchg
enter
adc
xor
mov
sub
dec
mov
adcl
dec
xchg
ficomps
loopne
and
ds
out
pop
es
in
xchg
insb
mov
sbb
leave
lea
mov
insb
inc
push
adc
sbb
mov
inc
mov
cld
xor
adc
sub
ret
loop
int
xor
add
imul
mov
je
adc
popa
jl
popf
mov
out
out
xor
aad
xchg
fldenv
jmp
loope
adc
push
loop
mov
and
movsl
mov
loope
pop
gs
add
popf
and
and
inc
jne
stos
cld
push
add
out
mov
mov
scas
lds
inc
in
mov
jg
inc
cmp
push
stc
sub
push
loop
jl
push
or
repz
rolb
mov
push
pop
mov
push
push
aas
add
cltd
arpl
adc
sbb
shll
push
push
negl
lahf
or
outsl
cli
popf
fmull
fdivl
outsl
repnz
mov
neg
repz
stos
stc
jnp
aad
cmp
movsb
loopne
pop
lock
dec
test
or
int3
test
js
test
fnsave
jns
into
xchg
nop
and
add
pop
mov
dec
cmp
or
adcl
loope
ret
xchg
xchg
add
aaa
cmc
mov
xchg
dec
call
lock
pusha
pushf
lea
jae
sub
shld
shl
mov
bsf
cmp
rol
mov
or
mov
cmc
call
movw
mov
pushf
pushl
ret
and
adc
dec
mov
sub
fcompl
ret
inc
insl
xor
test
sahf
sub
popa
cltd
dec
xchg
mov
mov
dec
movl
jb
ret
sbb
fstpl
jno
push
dec
stos
iret
negl
jne
mov
pop
addr16
or
dec
mov
dec
xor
mov
mov
ss
mov
lods
lock
int
sbb
xchg
xor
enter
jbe
sahf
and
adc
je
lret
mov
jne
je
add
enter
decl
pop
aad
adc
leave
add
cmp
xchg
mov
inc
jl
icebp
es
pop
jne
pushf
sbb
data16
cmp
outsb
push
es
dec
imul
pop
xor
cmp
pop
sub
mov
das
pop
cmp
sub
xor
fistps
mov
push
push
out
adc
fcomps
fcomps
hlt
imul
adc
and
cmpsb
addb
subl
test
dec
inc
lods
inc
test
jecxz
add
popl
das
push
das
bound
in
cmp
adc
mov
scas
data16
test
gs
out
lea
xchg
loope
or
xlat
xchg
stos
adc
cmp
out
jmp
add
icebp
std
fbld
js
sahf
sti
sbb
xchg
je
lds
sub
jecxz
dec
retw
shlb
and
mov
stc
clc
repnz
pushl
pushf
pushl
lea
jne
push
movb
movb
push
mov
not
pusha
lea
pushl
movl
pusha
jmp
dec
int
sbb
push
pop
into
xchg
or
mov
or
adc
pop
movsl
aas
icebp
mov
popaw
xchg
mov
xor
bound
shlb
inc
and
cwtl
sbb
or
sub
in
cmp
adc
sahf
std
inc
in
push
adc
push
aas
sub
shlb
sbbb
xchg
es
pop
sbb
pop
jbe
pushf
dec
add
cmp
inc
sbb
popf
dec
or
sahf
xchg
into
xor
lcall
das
subb
lea
ljmp
fbstp
push
dec
fwait
lea
add
mov
sbb
cmc
movsl
mov
roll
inc
cmc
pop
mov
mov
pop
stos
sahf
mov
pop
lds
mov
aas
pop
stos
les
push
fdivs
testb
rcrl
int
fistpl
xchg
and
cmp
xchg
lds
stc
mov
test
and
push
mov
into
and
mov
negb
inc
mov
push
outsl
push
xchg
jno
adc
das
jmp
add
adc
push
inc
push
sahf
sbb
cli
fwait
insl
es
mov
sub
pushf
repz
adc
mov
adc
add
jnp
xchg
sub
cmpsb
dec
aaa
int
pop
and
rol
inc
or
sbb
sub
insl
inc
mov
mov
cmp
inc
es
xor
scas
imul
mov
inc
adcl
xchg
dec
popl
lea
adc
ljmp
pinsrw
fsubrl
pop
mov
clc
mov
bound
adc
dec
cmc
loop
repnz
nop
adc
cmpsl
push
pop
dec
imul
fwait
aas
les
pop
hlt
mov
add
push
decb
fsubs
adc
push
aad
mov
sti
and
xor
xor
jp
jl
cmp
rcrb
popfw
inc
or
mov
ja
idivl
push
popa
inc
mov
pop
xchg
and
fistpll
pop
xor
movsl
pop
cmp
hlt
adc
test
jnp
jle
or
int3
std
icebp
xchg
pushf
call
pusha
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
out
sbb
adc
xchg
inc
inc
sbb
inc
dec
jno
pushf
adc
cmpsb
dec
stos
push
out
ret
push
lcall
outsb
cmpsb
cld
loope
adc
mov
loope
mov
lds
scas
lea
mov
jmp
cli
cmp
mov
popf
mov
lds
cs
rol
scas
not
inc
pop
inc
mov
cmp
and
jne
or
aas
les
fldl
and
sbbb
cmp
fldl
in
and
pop
jmp
fs
dec
testb
ds
outsb
push
or
or
mov
fs
lahf
iret
xor
jae
mov
jno
insb
cwtl
clc
cmp
mov
cmpsl
push
pop
popf
pop
jg
jb
aas
dec
pop
sub
rcll
xchg
daa
mov
popa
adc
outsl
inc
sbb
and
jmp
test
cmp
fwait
push
xlat
pop
xchg
cmc
add
xchg
sbb
jnp
adc
adc
iret
jo
scas
out
pop
xor
mov
into
dec
cli
les
dec
hlt
mov
shll
lret
and
cmp
dec
decb
push
inc
adc
outsb
sub
lahf
jne
add
insb
inc
and
adc
lahf
pop
xor
pop
out
mov
push
sub
or
inc
aam
cmp
xorl
or
mov
cwtl
mov
pushl
jecxz
lea
sbb
sbb
pushf
loope
push
outsl
sub
mov
lea
dec
mov
push
in
sti
mov
xlat
push
jns
dec
cmp
add
sub
stc
sbb
mov
pop
push
loope
test
inc
jp
mov
jo
xor
in
push
incb
dec
push
xor
lds
insl
stc
xorb
fstpt
fldl
cmp
je
decl
lahf
rcll
inc
sub
call
loopne
and
adc
pop
fisttps
fcmovbe
mov
sbbb
ret
flds
dec
sbb
movsb
lods
mov
inc
dec
dec
or
addb
adc
xchg
add
inc
in
xlat
int
stos
call
ljmp
jmp
push
loop
mov
ret
pusha
imul
mov
pop
sbb
dec
xlat
or
andb
pop
pop
jns
std
mov
cmp
mov
and
stos
aas
push
fmuls
pop
int
push
adc
mov
mov
inc
in
test
scas
xchg
fisubl
imul
sbb
pop
dec
sahf
outsl
and
push
inc
cs
repnz
in
push
adc
std
lret
aaa
pop
scas
pop
ljmp
mov
movsb
add
ljmp
push
pop
test
lock
fnsave
cmc
lea
call
push
movb
lea
jae
stc
clc
clc
pushf
xor
call
jbe
mov
dec
and
mov
das
std
cmp
push
je
leave
mov
mov
pop
pop
mov
cmpsl
outsl
mov
dec
daa
mov
movsb
data16
jg
imul
and
in
in
rolb
xchg
lret
mov
sahf
sub
popf
push
cmp
divl
cwtl
jo
pop
and
pop
jae
movsb
and
outsb
mov
mov
and
pop
xchg
lahf
adc
mov
jo
sub
cmp
push
adc
add
cmp
add
fldt
mov
mov
pop
inc
daa
popf
push
mov
jl
in
clc
fistpl
adc
movsl
les
mov
cld
call
push
out
pop
movsl
push
cmp
dec
jmp
pop
mov
out
xchg
mov
arpl
mov
jge
cmp
sbb
ja
in
adc
int
xor
stc
ret
adc
push
xchg
mov
cld
imul
lcall
xor
push
push
cmp
xor
subb
fcomi
loope
roll
pop
push
or
mov
cwtl
dec
loopne
xor
rclb
push
push
insl
mov
lods
inc
stos
xor
movsb
jmp
mov
outsl
fldenv
xchg
push
cmpsb
movsb
push
dec
cltd
daa
mov
xlat
add
or
inc
mov
pop
bound
dec
cmp
out
mov
dec
outsl
aas
jns
or
push
add
hlt
inc
scas
sub
adc
stos
mov
cmpsl
insl
push
ret
mov
cmp
add
mov
int3
cli
mov
iret
sub
aaa
mov
das
ret
notl
test
das
xchg
ds
aaa
jp
push
loope
mov
inc
push
pop
lcall
loop
xor
aam
roll
mov
shl
jl
and
and
scas
scas
sbbb
xor
int
mov
pop
sub
mov
or
adc
loope
and
dec
and
dec
mov
push
das
and
or
cld
or
dec
lret
ret
loop
int
cmp
add
push
jmp
rep
pop
bswap
mov
push
push
mov
lea
jmp
int
mov
and
cs
xchg
mov
push
cmpsb
jno
sub
push
pop
add
adc
int
fwait
inc
sbb
call
push
adc
cmpsl
cmp
jg
hlt
mov
mov
fisubl
pop
movb
pop
pop
lods
pop
sub
pop
dec
mov
cwtl
mov
mov
mov
aaa
pop
xor
push
inc
xchg
xlat
and
cmpsl
sbbb
xchg
adc
sbb
lock
andl
inc
sbb
stc
inc
push
xchg
js
dec
mov
in
adc
fldcw
add
fs
int
pop
pop
fwait
push
lret
rclb
push
fists
adc
imul
dec
pop
mov
bound
pop
iret
cmp
fsubrl
xchg
in
xorb
jle
mov
daa
out
dec
cmp
lret
aas
jbe,pt
xchg
je
sahf
and
out
push
and
cmp
push
movw
pushf
lea
ja
adc
sub
dec
shl
btc
add
sets
shrd
bts
shl
mov
rol
mov
mov
stc
repnz
jmp
pop
movsb
dec
and
cmp
mov
adc
jo
ds
push
pop
cmp
testl
in
arpl
lods
test
imul
xchg
fldlg2
xchg
mov
loopne
mov
inc
push
dec
adc
out
cmp
outsl
repz
gs
mov
subl
pusha
xor
and
fchs
push
arpl
push
cmpsb
in
xchg
inc
mov
add
loope,pn
ss
push
icebp
pop
in
add
adc
imul
and
sbbb
stc
loop
stc
jbe
xlat
mov
sub
pop
int
shr
das
ss
pop
inc
xchg
sbb
not
movsl
push
mov
fimuls
fdivs
loop
xchg
xchg
xchg
adc
add
loopne
arpl
sub
mov
cltd
inc
xchg
lret
pop
ljmp
cmpsb
and
mov
xchg
int
cwtl
jo
jmp
imul
push
push
icebp
push
sbb
and
and
lods
adc
in
dec
push
xor
add
cmp
dec
leave
repnz
cmp
imul
cld
cs
adc
xchg
add
sub
notb
dec
xchg
jle
rcr
negb
add
mov
mov
jbe
std
jno
cmpsb
push
cwtl
aas
inc
pusha
inc
mov
lock
mov
bnd
adc
arpl
inc
lahf
loopne
sbb
paddsw
cmp
push
dec
xlat
mov
je
shlb
mov
adc
test
inc
mov
pop
clc
lods
mov
jb
leave
mov
es
mov
jl
jl
dec
xchg
xor
in
add
xchg
push
sbb
insl
sbb
leave
rorl
insb
movsl
popf
testb
xor
lds
pop
divb
mov
xor
xor
add
insl
push
mov
jge
ss
mov
call
ds
fdiv
pusha
dec
arpl
mov
sub
movsb
dec
bnd
jmp
pusha
sbb
and
lock
fsubs
mov
push
shl
ror
shrd
push
ror
clc
sub
sub
push
lahf
push
test
mov
cmc
test
push
pusha
push
call
insl
add
and
xchg
cli
loope
push
ret
sub
inc
lds
cmp
test
inc
loop
xor
xchg
adc
or
data16
sub
scas
inc
sti
iret
and
arpl
sahf
insl
inc
and
or
xchg
sub
pusha
cmp
xchg
cmp
imull
lahf
jno
sar
jmp
xlat
sbb
pop
and
mov
sbb
inc
lods
int3
sub
outsl
sub
or
jb
shr
sub
andb
dec
dec
daa
adc
popf
xor
adcb
dec
insb
inc
aaa
jb
iret
xor
xchg
jo
fiadds
std
sub
int3
cmp
mov
out
add
shrl
daa
in
xchg
sarb
push
cmp
sub
data16
cmpsb
stos
daa
push
inc
movsb
sahf
es
rorl
cld
fsubs
add
fistpl
inc
iret
xor
xchg
lock
in
rcll
ret
mov
xor
enter
inc
sbb
mov
jecxz
mov
lahf
xchg
movsl
cmp
out
aad
add
fwait
hlt
iret
les
imul
loopne
out
in
push
lds
mov
push
mov
fmuls
dec
push
pop
mov
adc
outsl
movsb
aas
xchg
mov
aam
jb
dec
inc
and
cltd
pop
and
out
fdivr
aaa
negb
stos
mov
repz
negb
iret
rcll
mov
cmc
mov
xchg
mov
pop
jno
repz
lds
pop
iret
cmpl
jne
addr16
jmp
mov
adc
es
ljmp
pop
jb
cltd
mov
mov
ss
mov
jne
iret
xchg
mov
int
and
jo
mov
mov
push
jne
push
mov
jg
mov
adc
cwtl
imul
adc
les
loope
mov
inc
cltd
mov
jp
pop
cwtd
push
jne
xchg
xor
lret
and
xchg
jo
sti
sti
out
bswap
xor
jnp
aad
mov
xor
push
sub
dec
xchg
fs
out
sbb
add
or
jns
xchg
mov
repz
mov
leave
mov
fldenv
mov
cld
xchg
fldcw
ja
mov
subb
xchg
pop
pushf
cmp
lods
mov
xchg
cltd
je,pt
lret
lea
call
jmp
and
xchg
mov
xor
add
leave
mov
sysenter
cmp
inc
mov
sbb
jl
in
jbe
lock
cs
xor
xor
dec
test
xor
or
cs
pusha
es
pop
dec
ljmp
pop
jmp
cld
les
push
pop
pop
mov
xchg
adc
cmpsl
mov
dec
movsl
mov
jle
jle
mov
push
js
icebp
mov
jp
lret
shll
cmp
sub
xor
call
add
lock
adc
adc
dec
mov
and
xor
addl
sub
push
pop
stos
fcompl
dec
push
dec
cwtl
inc
cltd
dec
pop
pop
popf
dec
nop
mov
jge
dec
clc
xlat
mov
ljmp
add
adc
adc
jmp
cmpsb
aaa
lods
out
leave
enter
adc
add
and
inc
pop
push
imul
lock
gs
add
shr
rcl
mov
call
mov
sbb
xchg
dec
lods
ficoms
cltd
test
xchg
sub
inc
pop
sbb
xor
in
lret
sbb
or
sahf
pop
xor
sbb
sub
pop
pop
call
mov
in
in
add
out
popf
imul
adc
daa
insl
mov
mov
shl
jno
in
xchg
sbb
inc
enter
hlt
jne
add
sub
xor
dec
or
xor
mov
and
movb
fcmovu
ret
inc
out
ret
loopne
stc
test
dec
aad
jno
sbb
lods
jae
int
testl
icebp
jno
cmp
dec
sahf
out
cld
and
mov
adc
das
cmp
xlat
pop
lock
adc
lcall
cli
push
ds
jecxz
jmp
adc
xchg
das
iret
mov
sti
pusha
test
sub
inc
or
add
pop
lahf
or
and
fildl
mov
push
or
adc
sbb
pop
lret
lods
pop
arpl
cltd
pop
mov
push
out
pop
repnz
mov
and
mov
xchg
mov
xor
test
xor
inc
ja
int
push
in
pop
sbb
loop
adc
pop
mov
and
cmpsb
sbb
and
push
cmp
in
cltd
pop
jmp
sbb
imul
ljmp
in
addr16
sbb
cld
rcrl
sub
int
mov
arpl
jae
stos
decb
xor
outsl
dec
adc
cld
jae
bound
fs
or
adc
sbb
push
ljmp
pop
les
out
movsl
pop
fdiv
daa
and
pop
lret
jmp
add
or
adc
cmp
mull
and
popf
jecxz
xorb
test
int3
test
sbb
lret
and
pop
cltd
mov
and
cs
int3
repnz
mov
data16
xlat
pusha
jl
pop
adc
jne
movsl
mulb
cwtl
iret
popf
sbb
mov
push
pop
and
bswap
enter
rcl
loope
cmpsb
mov
dec
test
lret
pop
mov
scas
sbb
cmpsl
or
mov
add
mov
xor
pop
in
fildl
inc
arpl
and
pop
in
stos
inc
std
jae
popf
jnp
sub
xchg
sub
add
addr16
gs
lret
movsb
push
adc
ret
fisubl
ljmp
pushf
icebp
lret
subb
scas
pop
js
xor
andl
iret
rolb
jne
adc
sbb
nop
and
push
insl
cmp
call
xchg
clc
add
adc
cmp
outsl
imul
lret
push
sub
loop
pusha
jp
dec
in
stos
adc
inc
xchg
js
pop
mov
sarl
pop
mov
mov
add
xchg
cmp
mov
arpl
popf
pop
roll
and
dec
jae
cmc
addl
cmp
js
roll
fs
pop
cmpsl
pusha
inc
and
pop
in
or
adc
les
adc
jge
mov
pop
xchg
mov
mov
cmp
adc
adc
mov
cmpsl
add
dec
xchg
int
xchg
data16
pop
and
mov
fadds
sets
inc
in
cmp
cmpsl
sub
mov
sbb
das
adc
lds
arpl
dec
adc
xchg
roll
cmp
mov
adc
call
push
cltd
lds
xchg
rorb
mov
xchg
into
dec
leave
lea
pushf
mov
mov
movzbw
adc
mov
cmp
clc
cmp
pushf
lea
jbe
adc
mov
sar
cmp
shld
cmc
add
bsr
seto
mov
movzbw
add
add
stc
movl
stc
bsr
mov
jmp
lea
ja
jmp
call
xchg
push
movl
dec
push
xlat
xchg
sub
cwtl
ss
roll
adc
pushf
inc
push
daa
lret
repz
int3
mov
push
in
add
ss
cld
lea
xchg
push
cmpsb
xchg
mov
ja
ljmp
popl
xchg
and
ror
outsb
jecxz
mov
jmp
push
test
xchg
sub
mov
jno
pop
or
pop
push
lea
add
cmc
dec
xchg
mov
stos
fwait
xor
xchg
xor
clc
std
jg
pop
cs
test
mov
pop
mov
jp
inc
pusha
wrmsr
push
cmp
aam
jb
jl
inc
push
enter
test
loop
imul
jb
clc
pop
nop
shrb
cwtl
test
xchg
ficomps
cs
mov
rep
nop
sti
mov
fstl
imul
inc
adc
inc
xchg
test
mov
adc
mov
adc
das
add
lcall
scas
test
push
ret
lods
imul
xor
jne
mov
mov
pop
jg
test
adc
mov
jo
aad
and
or
jge
mov
inc
xorb
in
sub
cwtl
jle
sub
stc
mov
pushf
call
data16
das
adc
out
lock
add
jae
adc
lahf
ss
push
cmp
xor
mov
xchg
mov
test
pushf
mov
mov
pop
psrlq
repnz
loopne
sub
lret
xor
xchg
daa
mov
add
daa
pusha
xor
into
std
xor
jecxz
mov
mov
lods
dec
test
adc
mov
or
push
xor
mov
clc
xchg
adc
lcall
pop
fwait
mov
or
jb
lods
scas
fwait
cmp
cmpl
sub
inc
jnp
sbb
sbbb
and
or
mov
add
sub
aad
lock
xor
int
mov
sbb
pusha
ficomps
and
sub
xchg
adc
pop
jg
or
pop
sbb
push
hlt
pop
popa
test
movsb
and
cli
shlb
pop
fnstenv
cmp
push
push
inc
sub
mov
addr16
sbb
cmpsb
xchg
out
pop
dec
xor
das
adc
imul
or
leave
imulb
inc
add
pop
jne
inc
xchg
cmpsb
xor
out
dec
imul
add
out
add
outsb
test
cmc
aas
mov
shr
ljmp
test
mov
popf
and
jbe
mov
ss
mov
push
inc
rolw
dec
and
call
dec
ds
hlt
dec
mov
xor
stos
outsb
loope
popf
xor
stc
fwait
dec
aas
sub
test
and
loope
xchg
or
mov
cmp
mov
mov
lods
jl
sub
rcrb
iret
sarl
je
sub
call
in
bound
popf
dec
es
mov
stos
ja
negl
pop
pop
mov
push
xchg
sub
jecxz
cltd
or
sub
bound
inc
xor
lret
xor
in
mov
mov
push
jb
jl
push
mov
adcb
jbe
clc
cmpsb
andl
xchg
shr
pop
jp
lret
adc
cli
decl
add
test
je
and
and
movsbw
mov
mov
movzbl
movzbl
bswap
mov
pusha
pop
movsbw
movzbw
mov
pushf
mov
call
fisubl
jg
mov
cmp
movsb
enter
call
fs
mov
and
outsl
xor
jge
addr16
jecxz
add
xor
shlb
inc
outsb
jle
mov
fmuls
jne
pop
arpl
push
pusha
mov
mov
push
das
sub
fnsave
jmp
push
and
and
fisttpl
mov
add
mov
je
and
xor
pushf
pushf
lea
jmp
mov
xchg
ret
out
adc
shll
daa
mov
mov
test
ret
addb
lret
xchg
in
nop
mov
xor
pushf
mov
sub
sbb
push
mov
adc
ret
inc
and
lahf
cld
mov
mov
mov
push
cmp
jnp
mov
test
sub
sahf
testb
jg
mov
mov
pop
mov
cmp
mov
out
or
aaa
add
imul
out
into
inc
std
or
and
fwait
jae
lods
and
mov
addr16
add
cmc
sbb
lahf
arpl
fcmovbe
mov
movsl
sbb
jo
cmp
adc
jmp
inc
cmc
add
rep
incl
std
out
in
lods
mov
pop
mov
in
cmp
jae
test
scas
pop
es
and
pushf
xor
mov
mov
and
pushf
ret
addr16
imul
les
pop
lods
lock
adc
jo
sub
mov
movnti
adc
scas
mov
mov
mov
push
stos
or
cmp
add
push
cmc
mov
pop
xchg
mov
lea
ss
es
cwtl
fisubs
imul
adc
jbe
out
pop
idivb
mov
dec
mov
inc
cmp
jbe
or
popa
fs
aas
dec
fwait
and
mov
inc
mov
jb
add
jge
mov
fisubrs
xchg
inc
adc
push
cmpsl
push
sub
mov
dec
dec
pop
push
and
jae
push
cld
xor
dec
pop
aad
adc
or
test
mov
push
pop
push
das
mov
mov
mov
xor
jle
outsb
jle
mov
jle
adc
pop
fsts
mov
fldenv
repnz
add
ret
mov
mov
mov
cmc
idivb
add
pusha
insl
xor
bound
jne
mov
xchg
xchg
scas
sub
xchg
mov
ds
mov
jno
jo
push
mov
es
lahf
stos
dec
test
mov
fwait
sahf
fnstsw
cmp
clc
stc
jmp
mov
xchg
aam
into
fldcw
sarb
mov
adc
fstpt
ret
addb
push
push
outsb
cmp
dec
lods
hlt
cmpsl
sub
and
insb
dec
add
call
jmp
cmp
lahf
mov
sub
push
sub
shlb
cmpsb
add
xor
lods
hlt
push
sti
sar
mov
push
xchg
repnz
lahf
mov
push
call
cmp
mov
push
mov
mov
xor
xor
xchg
out
sub
fsubl
out
aas
jns
iret
stos
loopne
and
cmp
aaa
dec
add
enter
out
push
adc
sub
shrb
add
mov
cmp
jns
push
dec
addr16
scas
fwait
cmp
mov
cli
sub
stos
sub
adc
fnsave
inc
lock
and
cmpsl
xchg
pop
mov
repnz
mov
daa
or
adc
mov
and
rol
bt
or
mov
pushf
and
test
pusha
jmp
int
pop
ss
inc
sbbb
sub
aas
daa
sahf
fisubrs
mov
jno
cmp
sbb
sub
mov
dec
hlt
cmpsl
arpl
inc
dec
pop
xor
pop
int3
test
movsl
adc
mov
inc
push
or
cs
pop
test
clc
jae
sub
daa
sub
mov
adc
xchg
dec
dec
fcom
dec
push
sbb
movsl
mov
mov
mov
pushf
dec
test
cmp
cwtl
not
call
bound
pop
cwtl
sub
inc
aad
cmp
mov
add
mov
insb
xor
fists
stos
icebp
and
mov
aas
push
sub
popf
in
inc
cmp
and
nop
aaa
cltd
inc
sbb
outsb
insw
mov
pop
or
xchg
push
iret
push
lret
cmp
loope
push
mov
mov
out
inc
lcall
sbb
sbb
add
cli
inc
mov
hlt
insb
test
fwait
mov
mov
xchg
fwait
jge
pop
and
insl
ljmp
test
push
xor
cmpsl
cmp
jge
ss
test
xchg
inc
test
adc
pop
loopne
xor
sbb
inc
xchg
popa
ret
add
cmp
lcall
sbb
pop
fst
jno
sub
test
cltd
sbb
cld
hlt
mov
and
dec
sbb
stos
lret
orps
lods
int
sti
jmp
push
rclb
xor
stos
mov
das
dec
lret
or
std
movsb
dec
loopne
shrl
gs
mov
addb
dec
mov
add
pop
in
es
ljmp
mov
and
xchg
mov
push
pushl
movw
movb
pushl
ret
cmp
pusha
call
inc
subb
xchg
lods
sbb
dec
divl
pop
fldcw
mov
popf
test
fs
cmp
movsb
lods
cmp
xchg
sti
mov
mov
mov
sbb
xchg
cmc
jle
dec
pop
in
add
stos
and
mov
push
inc
dec
aad
jbe
push
popa
mov
daa
ficoms
cli
sub
cltd
movb
cli
loope
adc
and
mov
pushl
lea
jmp
fidivs
sbb
jnp
dec
pop
adc
lea
push
loop
sbb
mov
test
pop
push
lret
dec
lods
clc
lods
mov
popf
push
push
push
cmp
out
jbe
lret
push
enter
dec
cmp
jle
inc
dec
dec
mov
pop
sti
test
xchg
jle
into
loope
adc
adc
push
sub
sub
jl
adc
fisubrl
cmp
pop
cmp
inc
mov
rcr
push
jae
jns
add
stos
or
cltd
icebp
mov
aas
and
cwtl
sub
test
incl
sbb
cmp
cwtl
fstps
jns
dec
cmpsl
pop
mov
sub
or
adcb
in
enter
movsb
inc
xchg
jg
sbb
and
fnstcw
orl
pop
xlat
divb
cld
lds
fcoml
outsb
push
sbb
inc
push
outsb
mov
sar
lcall
cmp
loop
ljmp
add
daa
cmpsb
imul
and
mov
sub
inc
sbb
cli
add
inc
divb
fidivrs
jl
andb
ret
cmp
pushf
cmpb
pushf
pusha
lea
jmp
push
lea
jae
push
inc
xchg
xchg
mov
dec
inc
pusha
mov
mov
movb
mov
pusha
jmp
aad
push
cmp
mov
xor
in
mov
mov
outsl
sbb
sub
mov
push
push
test
clc
pop
lock
ss
jno
push
sub
sbb
pop
stos
pusha
fwait
jge
mov
outsl
fld
mov
pop
jae
cmpsl
insl
fcmovnbe
in
xchg
aam
add
sub
enter
pop
loop
outsb
fldt
jo
incl
movsl
xchg
push
jmp
loope
sbb
les
adc
mov
mov
push
push
out
xor
js
xchg
dec
jp
or
or
xlat
inc
cmp
adc
pusha
call
mov
sub
adc
adc
cmpsb
dec
ret
xor
notl
xchg
daa
iret
mov
sub
sub
ret
jo
mov
repz
push
push
rorl
les
les
push
test
insb
mov
shrb
sbb
cwtl
nop
mov
push
subl
adc
jl
xor
push
test
sbb
xchg
rorl
mov
dec
dec
pushl
fsubrp
vmovq
arpl
int3
inc
outsl
fadds
sbb
mov
bound
in
pop
and
aad
cmp
dec
mov
test
sahf
jae
mov
mov
sar
jb
cwtl
jne
clc
test
lods
jge
push
mov
push
mov
fsub
add
mov
add
ret
cltd
cmp
mov
or
clc
ret
fdivs
mov
ficoms
in
ret
sub
mov
xchg
jbe
stos
arpl
xchg
icebp
fidivl
adc
mov
fsubrs
leave
xchg
cltd
jl
or
dec
movsl
lahf
xchg
mov
cmpsb
and
loop
push
mov
adc
test
je
das
popf
and
sahf
jns
jmp
dec
jne
pop
fcmovbe
test
sbb
xchg
mov
cwtl
cs
lret
mov
lea
or
shll
out
mov
cmpsb
fsubs
mov
xchg
fs
repnz
mov
cmp
dec
adc
mov
stos
mov
aas
fdivl
dec
adcl
cltd
dec
loope
not
sub
call
popa
xchg
mov
jge
inc
push
or
xor
xchg
jb
pop
insl
push
cmp
inc
roll
iret
bound
fwait
mov
fisttps
pushf
pop
mov
or
mov
loope
in
mov
inc
jns
xor
mov
ret
test
push
movsb
out
bound
xor
mov
cld
repnz
mov
sar
push
xor
stc
cmp
jae
ja
sub
leave
xchg
shlb
in
pop
fidivrl
js
das
inc
lea
jne
push
mov
call
lea
call
jmp
pusha
mov
pushf
pushf
jmp
movb
lea
je
lea
not
rcr
lea
add
xor
inc
mov
jmp
jo
gs
lcall
xor
in
es
cli
lret
and
or
sub
sub
sbb
cli
lahf
cmp
das
xchg
push
pushf
sbb
aad
nop
das
fbstp
adcl
repnz
es
or
fdivs
lahf
subl
or
imul
popa
insb
sub
das
push
insb
out
mov
and
das
lret
xlat
and
cmp
jmp
or
pop
add
cmp
dec
shll
dec
insl
or
push
stc
inc
scas
cmpsl
mov
jns
dec
dec
stc
cmp
dec
sbb
outsl
out
jbe
je
fwait
jae
mov
aaa
test
lret
adc
xor
in
enter
rclb
shrl
leave
ret
cmc
mov
adc
add
je
mov
stos
orb
xor
sub
shr
shrb
xchg
push
shr
mov
jmp
jne
mov
es
push
imul
andb
push
xchg
inc
je
sbb
rcrb
rolb
ret
daa
jo
sbb
movsb
rcll
es
sub
and
sbbb
imul
lods
cmpsb
cld
inc
sbb
adc
add
jne
cmpsb
sarb
or
sbb
xor
dec
push
push
push
das
fisubl
in
mov
fld
pop
jp
sbb
data16
icebp
mov
icebp
cmp
add
int3
ds
mov
insl
sbb
in
push
lret
pop
scas
daa
mov
sbb
aas
sub
push
pop
int
sub
enter
pop
pop
ja
pop
sbb
sbbl
xchg
cmc
shrb
shll
sub
pop
xchg
mov
xchg
mov
lret
cli
ret
jmp
mov
inc
dec
sub
dec
pop
nop
push
outsb
repz
and
in
data16
push
imul
jnp
pop
out
mov
add
pop
aaa
cs
lds
and
pop
add
cmp
pusha
mov
movsb
jp
sub
sahf
cmp
aas
adc
push
jno
pop
rorl
add
inc
inc
mov
arpl
fld
mov
jne
adc
aam
mov
divl
std
inc
cmpsb
rclb
lods
cs
fcomip
or
mov
repz
xlat
pop
movl
insl
outsb
les
dec
cltd
push
jp
stos
stc
sbb
push
dec
and
sti
and
xchg
and
pop
mov
mov
dec
and
mov
sub
sti
dec
push
xchg
jno
jmp
std
enter
pop
pushl
out
mov
dec
rol
aas
inc
push
jnp
pop
arpl
clc
push
loop
add
cld
std
fdivr
or
xlat
and
adc
les
adc
shr
shll
int3
nop
adc
xchg
lahf
pusha
icebp
jmp
dec
push
aad
pop
mov
movsb
cmp
jg
fs
jae
call
add
xchg
out
sub
sub
pop
mov
sbb
sub
and
lods
push
shlb
das
mov
or
mov
fsub
test
fidivrl
ret
add
mov
shll
push
test
push
inc
aam
and
push
xchg
shr
cmp
nop
icebp
lea
pop
hlt
ja
add
test
shlb
cs
div
test
mov
ret
jmp
gs
jo
outsb
dec
gs
js
add
iret
add
out
pushf
mov
stc
cmc
and
push
add
pushf
lea
jmp
shlb
inc
adc
mov
xor
ljmp
sub
cmpsl
add
xchg
cmc
jo
sti
mov
mov
lock
dec
dec
in
cmc
pushf
sar
popa
punpckhbw
dec
push
add
cmp
mov
loopne
subl
test
dec
jne
arpl
inc
mov
xchg
add
and
mov
jnp
mov
mov
loopne
jnp
rorb
lock
outsb
mov
daa
icebp
push
xchg
sbb
sbb
mov
push
inc
std
movsb
mov
mov
inc
jno
aam
push
push
cmpsl
scas
adc
adc
pop
sbb
in
in
sbb
mov
das
mov
test
in
jns
std
mov
pop
ret
cmpsb
fldl
ss
xchg
jg
repnz
inc
adc
daa
lahf
mov
sub
nop
ret
mov
sbb
sbb
lret
lea
movsl
mov
and
in
js
loop
ret
aaa
or
xor
cmpsl
jmp
pop
push
xchg
and
lea
mov
ja
jmp
and
xor
fdivp
stc
mov
jmp
lcall
and
lcall
insb
lahf
cmp
mov
push
adc
call
test
cmpsl
jge
inc
push
pushf
outsb
cmpsb
int3
xchg
es
pop
fists
and
inc
mov
xchg
cltd
push
sub
jb
out
push
popf
xchg
inc
in
jae
xchg
pop
adc
sbb
sub
inc
imul
lods
dec
mov
leave
pushf
test
xchg
sahf
jge
into
fsts
outsb
mov
push
lock
sbb
fdivs
icebp
mov
in
push
in
cli
sarl
clc
mov
stos
jae
inc
xchg
add
shrb
inc
aas
pop
mov
jge
hlt
je
jg
and
push
jmp
insb
jl
or
js
fwait
in
adc
faddl
inc
adc
jbe
stos
dec
push
and
mov
lret
xchg
das
and
pop
push
xchg
push
jb
or
push
adc
add
into
inc
jle
inc
pop
popf
dec
imul
add
pop
addr16
daa
push
ret
cltd
lcall
xchg
loopne
jmp
mov
pop
and
add
stos
push
dec
add
add
jl
xlat
adc
dec
pop
xchg
adc
gs
xchg
stos
addr16
pop
insb
cli
mov
sbb
in
sti
std
cwtl
pop
ret
add
out
ret
daa
aam
in
out
in
sub
into
bound
adc
or
xchg
mov
mov
mov
outsb
and
es
cmp
add
xor
jle
leave
cmpl
lea
mov
inc
jge
cs
cwtl
xchg
mov
rcll
sub
fildl
aam
pop
cld
push
cmpsb
inc
dec
add
mov
lret
addr16
mov
or
fsubrs
or
mov
sub
and
lock
lea
mov
incl
cmp
inc
mov
cli
jb
aad
daa
pop
data16
rclb
mov
push
push
mov
sub
loope
dec
pop
inc
mov
add
xor
cwtl
cmp
push
outsl
adc
inc
jmp
push
sti
cs
scas
add
loopne
mov
in
insl
das
push
or
jl
sbb
sbb
iret
mov
shll
jmp
test
push
add
mov
jb
ss
adc
jmp
icebp
out
iret
sub
xchg
xor
cli
imull
jp
ret
scas
in
xchg
orl
stc
shrl
add
rclb
lods
push
sub
jl
popa
dec
pop
sbb
adc
mov
shll
dec
mov
push
jae
xchg
das
orb
cmp
or
xor
das
stc
daa
shll
pop
inc
xor
test
lahf
mov
sbbl
inc
insl
int3
cmpsb
cmpsl
call
adc
pop
popf
inc
adc
orl
ss
test
pop
and
sti
lahf
cmpsl
xorb
dec
xchg
rcr
aad
movsl
enter
push
xchg
std
add
mov
rolb
or
cmpsb
xchg
xor
pop
out
xlat
outsl
and
xlat
fmulp
sbbl
loope
mov
mov
xlat
adc
xlat
or
add
mov
mov
in
cmova
mov
sbb
xchg
mov
sub
mov
jnp
and
adc
cld
ret
mov
in
cmp
lahf
shrl
aaa
xor
mov
or
sub
jge
mov
fsts
push
stos
cmp
insb
pop
repnz
loop
add
fucomp
cmpl
sbbb
push
xchg
xchg
rorb
stos
push
jns
adc
and
pusha
push
fwait
aas
js
les
inc
lds
or
cli
inc
shll
push
push
xchg
pop
addr16
lret
xlat
or
mov
insl
or
arpl
aam
pop
ret
das
sahf
adc
and
mov
call
int
mov
adc
inc
sbb
and
rsm
call
mov
dec
adc
push
adc
paddsw
push
jno
sbb
or
xchg
mov
push
lea
out
ret
clc
mov
fimuls
mov
test
je
aaa
dec
sbb
nop
aam
jp
inc
mov
pop
cmpl
sbb
stc
out
fsubrl
push
push
inc
mov
test
es
jecxz
pop
sti
mov
jg
jg
outsb
sarl
loop
pushf
and
and
sarb
and
repz
add
out
cmp
inc
adc
popa
push
movsb
int3
xor
xor
dec
out
xor
mov
lock
inc
cld
inc
cmp
inc
xchg
dec
adc
inc
outsl
inc
xchg
adc
mov
repnz
and
les
cmp
fnstenv
sub
test
pop
or
pop
and
jb
mov
mov
gs
outsb
adc
inc
test
mov
pop
cmp
add
dec
imul
pusha
mov
xchg
xor
das
mov
hlt
dec
call
jae
ret
sub
fmulp
push
dec
xchg
fdivrs
ljmp
mov
dec
xor
push
jl
jp
imul
mov
jns
cld
mov
mov
cmp
xchg
jae
fiadds
insl
add
mov
mov
inc
mov
inc
or
adc
push
push
and
mov
adc
pop
push
cli
insb
test
and
sbb
out
outsl
add
rcll
adc
jae
shll
add
mov
xchg
sarb
mov
push
mov
adc
cmp
repz
inc
in
mov
lret
xorl
fadds
ffree
add
lea
sub
scas
mov
lods
jae
das
xchg
insb
push
out
inc
or
repz
add
cmp
jb
sbb
xlat
jb
cmp
cli
ret
pop
sarb
adc
loopne
jmp
jmp
lock
stos
cmp
fsubrl
xlat
fucomi
or
and
lcall
xor
in
inc
mov
bound
and
movb
push
fcoml
cmpsb
mov
clc
inc
orl
leave
pop
mov
outsb
lret
scas
add
js
rol
cs
push
jge
out
cld
add
mov
or
dec
dec
inc
or
les
mov
ja
jns
shll
outsl
inc
lods
sbb
mov
push
fiadds
cli
xchg
mov
rcll
inc
mov
sbb
pop
test
xlat
mov
jmp
das
jae
mov
mov
leave
fcomps
sbb
ss
sbb
fistpl
inc
repnz
call
dec
adc
xchg
scas
lods
adc
cmpsl
mov
and
mov
jno
mov
sbb
mov
ret
cmp
mov
and
pop
mov
xor
push
in
xchg
ret
inc
adc
lods
jae
out
or
or
add
addb
xor
js
nop
sbb
movsl
jmp
pop
cld
imul
xchg
icebp
repnz
lret
notl
mov
cmp
cmpb
fldl
mov
outsb
mov
xchg
sub
and
lcall
mov
sbb
add
and
bound
lods
mov
inc
adc
cli
mov
rcrb
jae
xchg
dec
xchg
ret
rcl
dec
xor
xor
mov
pop
int3
nop
cmp
and
aam
pop
mov
and
push
testb
movsb
pop
out
push
icebp
xorb
stos
nop
lahf
fadds
cmp
bound
popf
push
imul
scas
add
out
shrb
mov
cld
loop
dec
inc
add
adc
dec
adc
push
sbb
cmp
push
mull
lods
int3
ss
stc
scas
adc
dec
popa
fildll
sahf
test
mov
mov
add
ljmp
sarb
sti
cmp
insb
into
je
and
cmp
mov
jle
xchg
xor
in
xor
mov
mov
xchg
cltd
mov
jno
mov
mov
aad
adc
or
nop
mov
ret
les
cmpl
mov
jno
sbb
fnstcw
sahf
loope
arpl
fldcw
fadds
jp
adc
repz
lea
shll
add
scas
test
roll
xor
mov
or
cmpsb
xchg
xchg
sbb
mov
rcr
sbb
pushf
test
xchg
mov
dec
pop
sahf
cmp
inc
sbb
xrelease
js
pop
mov
adc
cwtl
mov
cltd
into
adc
or
rcrl
jno
inc
aas
adcb
lahf
xor
mov
xchg
xchg
or
int
mov
insb
adc
jae
jne
sarb
pop
xlat
test
cld
es
ljmp
popf
sbb
das
std
pop
dec
aam
ret
xor
jno
pop
inc
cmp
add
inc
adcl
pop
add
pop
inc
dec
cmp
sub
sbb
inc
mov
loopne
inc
and
and
fucomip
ds
ficomps
scas
in
repz
add
int
decl
or
sti
sbb
ds
xchg
push
insb
mov
push
out
nop
lea
jmp
push
cmpsb
jp
or
sub
negl
hlt
dec
cltd
push
lods
aad
adc
or
and
cmp
outsb
xchg
dec
push
jno
mov
adc
imul
sbb
mov
icebp
addb
cmp
jno
fsts
sbb
insb
lods
shl
mov
loop
sbb
loopne
lods
rcll
inc
xchg
loopne
xor
sbb
fmuls
push
mov
mov
mov
stos
dec
add
mov
mov
dec
mov
setne
jo
rcrb
and
aam
adc
into
cmovs
ficompl
cmpsl
out
repnz
stos
cmp
push
jo
mov
jp
push
icebp
dec
les
inc
mov
mov
pop
inc
ds
js
pop
push
je,pn
pop
sahf
cmp
ret
ds
or
jge
sub
mov
mov
in
mov
arpl
sub
cmpsl
cmp
mov
jmp
cmp
mov
adc
pand
sbb
stos
je
dec
adc
shlb
leave
aam
push
jbe
fwait
sub
cwtl
xor
rorl
cmc
test
or
mov
ucomiss
dec
add
mov
mov
sbb
lock
push
jbe
lds
imul
ror
fs
fs
addr16
mov
push
shll
bnd
test
out
lret
mov
mov
sub
mov
push
dec
adc
dec
push
mov
inc
adc
add
xchg
jno
mov
inc
xchg
mov
sub
jb
stos
dec
inc
jb,pt
fists
xor
sub
cmp
cmp
cmp
lret
iret
cltd
aad
sbb
aad
inc
aaa
test
pop
xchg
inc
mov
in
addr16
push
push
aam
pop
mov
inc
cmp
fcompl
shr
ljmp
jmp
xor
dec
pop
jp
sbb
je
jo
subl
inc
das
jp
sub
call
aam
lahf
leave
xchg
fisubrl
jns
push
pop
jbe
cs
pusha
push
dec
je
scas
inc
ja
insb
or
arpl
out
inc
push
mov
pop
jb
mov
jmp
out
fidivrl
aas
jg
movhlps
or
test
pop
jbe
enter
nop
cs
mov
shlb
mov
sbb
insb
or
test
out
jae
loopne
mov
outsl
pop
mov
add
adc
js
add
jnp
es
mov
gs
sbb
add
sub
cltd
out
inc
dec
xchg
cmpsl
and
mov
mov
and
stos
inc
jecxz
mov
ffreep
add
jo
push
es
pop
push
mov
adc
aas
pop
and
scas
xchg
sbb
ss
call
sbbb
test
mov
xchg
jmp
rorb
or
mov
adc
shrl
mov
add
adc
mov
mov
push
in
add
ret
pop
leave
adc
xorl
jne
pop
pop
ret
push
xchg
sbb
js
mov
push
out
jecxz
xor
ss
dec
scas
mov
out
adc
and
xchg
into
add
push
adc
mov
inc
je
xchg
stos
adc
cmpsl
arpl
cli
lock
insb
aad
pop
sti
clc
mov
xchg
scas
mov
aam
push
or
mov
in
shrl
mov
out
scas
cmp
js
xor
aad
push
daa
insb
or
loop
gs
mov
loopne
shr
and
push
adc
cli
cmp
and
test
dec
adc
cmp
popf
aad
repnz
out
por
dec
xchg
sbb
cmp
repnz
stos
dec
test
cs
ljmp
mov
cmc
or
inc
data16
jmp
in
sub
pushf
test
icebp
ficoms
sbb
fsubr
cmp
hlt
lret
mov
mov
cli
mov
insl
mov
mov
scas
repz
jo
fsts
dec
add
xchg
add
loope
pop
jl
adc
push
out
push
adc
adc
push
insl
sub
ds
push
shrb
mov
mov
mov
xor
mov
aad
loop
pop
xchg
outsb
jg
mov
mov
je
push
loop
add
adc
cwtl
push
clc
jae
in
in
cmp
movsb
aam
mov
rorl
jno
rcr
push
dec
rorb
leave
add
loopne
test
pop
add
mov
shl
or
mov
imul
push
test
mov
loopne
call
push
xor
xchg
scas
add
cmpl
test
leave
inc
cltd
pop
popa
in
xchg
stc
push
lock
xchg
nop
cmpsl
fimull
lods
pop
push
cwtl
push
pushl
bt
test
cmp
call
repnz
xor
and
mov
ja
enter
mov
xor
lds
or
les
inc
add
cmpsl
loop
mov
pop
movsl
jne
xchg
dec
mov
push
mov
mov
aam
sahf
mov
and
add
hlt
repz
aaa
test
cmpsl
inc
iret
mov
imul
sbb
dec
gs
xor
sub
jp
push
ret
fiadds
ret
stos
cs
repnz
adc
push
test
decl
xchg
inc
add
pushf
pushf
lea
jb
bt
cmpb
call
cmp
jmp
cmc
cmpb
jmp
call
lea
ja
inc
not
dec
mov
inc
xor
xchg
mov
sar
mov
shl
adc
mov
pusha
pusha
xchg
bsr
clc
cmc
clc
mov
mov
sub
mov
call
xor
rclb
icebp
or
pop
rorl
push
pop
shlb
cmp
adc
out
mov
sub
add
insb
psrad
es
sub
iret
pop
stos
and
sarb
ja
xor
mov
je
cld
and
sbb
fiadds
and
sar
arpl
rcr
cmp
xchg
and
adc
dec
inc
inc
push
push
xor
cs
insb
add
fldenv
push
adc
fsubl
ja
add
mov
pop
insb
inc
cmovne
lahf
add
and
rcrl
out
inc
mov
mov
push
mov
fwait
cwtl
and
add
jg
xor
dec
lods
sbb
add
adc
inc
test
popa
xlat
test
dec
cmpsb
es
jno
add
es
push
xchg
add
andb
int
cli
lods
mov
or
in
rclb
enter
push
inc
ss
daa
sub
movsb
push
adc
pop
imul
pop
jae
mov
adc
add
lock
sbb
cwtl
add
inc
jle
fdivrl
test
lock
das
mov
out
repnz
or
mov
cmc
mov
int
fwait
sub
out
push
dec
xor
push
mov
ret
clc
mov
push
fneni(8087
js
rdmsr
stos
sbb
cltd
mov
mov
invd
push
in
cmp
or
scas
xchg
cmp
jo
push
mov
sub
pushf
mov
push
call
or
std
push
adc
and
pushf
dec
adc
jmp
clc
fnstenv
adc
andl
sbb
insl
stos
sbb
shll
dec
pusha
fstps
dec
sbb
pop
je
xchg
hlt
xor
mov
inc
jp
adc
cmp
inc
jl
shlb
push
das
mov
outsl
push
jle
xor
sub
sub
int3
and
scas
mov
add
adc
dec
adc
fcomp
jp
dec
scas
xchg
ret
add
push
inc
push
out
jns
iret
xchg
jge
adc
xchg
inc
inc
mov
ss
mov
mov
fs
jae
bswap
bswap
and
pusha
mov
bsf
mov
shl
inc
movzbw
xor
mov
pushf
sub
ja
bt
cmc
xor
clc
repnz
jmp
aas
fldenv
push
adc
fsubl
clc
xchg
test
test
mov
out
punpcklwd
cli
ljmp
sub
jbe
addr16
jo
jecxz
inc
ds
aaa
nop
leave
nop
and
xchg
add
test
fidivrl
ljmp
xlat
mov
add
mov
ljmp
imul
push
xchg
test
in
mov
movsl
jle
popf
mov
mov
push
dec
add
jns
push
pushf
dec
and
sbb
jmp
lea
adc
jl
pop
ds
lret
xor
and
and
jae
jns
pushf
mov
pop
jge
or
js
inc
xchg
and
lahf
into
lods
and
subb
mov
cmc
dec
rcr
lock
test
ret
jns
mov
dec
stc
adc
jmp
push
jno
aas
adc
and
jecxz
cmp
sub
jmp
loop
insb
idiv
sbb
inc
adc
aas
cli
dec
sub
jmp
call
imul
add
daa
add
adc
jp
xor
cmp
push
xchg
lock
test
inc
cld
imul
cmc
in
pusha
sbb
cltd
xchg
in
mov
fdivrs
data16
mov
push
and
lahf
push
sbb
jne
jo
sbb
sub
dec
jmp
pop
jle
inc
jge
and
or
xchg
mov
jbe
and
adc
adc
jle
xchg
adc
scas
sti
jne
and
and
lcall
pusha
sub
inc
shlb
in
test
in
shrb
push
js
cmp
imul
xor
test
cld
out
sahf
clc
bound
or
cmp
mov
test
push
lea
jae
mov
adc
leave
cmc
out
fcompl
insl
aas
shll
inc
cli
lds
cmp
push
xlat
sub
int3
out
icebp
pop
jl
fists
cmp
loop
enter
cwtl
adc
jo
push
in
mov
insl
out
dec
mov
sub
test
scas
ljmp
inc
ljmp
inc
test
ret
test
xchg
cmp
lds
cmpb
mov
fadd
gs
xchg
jl
sbb
cld
cli
add
push
call
hlt
pushf
cmp
pusha
movsb
mov
dec
xchg
outsb
push
das
mov
test
les
xchg
jbe
icebp
pop
jne
mov
mov
push
pop
push
jmp
nop
inc
fsubrs
test
sbb
call
or
xchg
cmpsb
and
xor
inc
sti
mov
pop
movsb
add
aaa
ss
adc
and
xchg
push
leave
cmpsb
test
insb
push
jne
stos
ja
mov
and
cld
aam
xchg
push
test
mov
adc
mov
sub
adc
out
mov
sub
cmp
sub
mov
pop
gs
enter
imul
bound
add
mov
dec
in
out
fs
insb
jmp
sbb
cmp
sbb
icebp
dec
xor
push
addr16
jge
scas
add
xorl
pushf
shll
hlt
lahf
sarb
cmc
call
push
mov
lea
jae
push
pushl
not
mov
pushl
call
out
aam
adc
jo
lods
lock
ss
mov
fstpt
and
mov
mov
stos
lahf
aas
or
movsl
or
sbb
lcall
mov
je
ds
inc
pusha
jge
jae
dec
xlat
test
movsl
rcll
adc
add
in
xchg
push
ljmp
xor
adc
mov
jo
das
adc
or
xchg
std
adcl
and
mov
push
sub
call
mov
sbb
lahf
pop
push
icebp
push
out
adc
sbb
mov
add
cmp
cwtl
das
inc
adc
out
dec
sbb
int3
shr
in
mov
adc
mov
imul
push
pop
push
xlat
mov
xchg
lahf
mov
ljmp
xchg
cli
jnp
pop
cmp
dec
leave
sub
std
fs
arpl
cli
jle
xchg
pop
pop
adc
test
jo
mov
cmp
out
push
pop
or
call
insb
stc
dec
dec
xchg
cmp
sahf
push
push
mov
sarb
and
bound
jmp
sysenter
ljmp
xchg
xor
mov
jecxz
fs
jns
fimull
fcomps
push
arpl
int3
sbb
scas
repnz
rorl
cmp
sbb
popa
xlat
popf
add
les
idiv
loopne
add
test
sub
or
popf
pushw
push
hlt
mov
lahf
xor
adc
pop
jno
or
fidivs
clc
xchg
sbb
fmulp
dec
or
mull
jle
push
sub
imulb
push
inc
addr16
gs
jns
test
dec
and
test
pop
ja
push
test
push
and
in
xchg
jge
xor
pop
xchg
shl
imul
loop
lahf
xor
hlt
inc
pop
xlat
rclb
dec
pop
and
bound
mov
jns
push
stc
movsl
xchg
rclb
iret
adc
push
ficoms
and
or
cmpsb
mov
xor
popf
fimull
jne
and
or
dec
sbb
dec
sub
outsl
andl
jp
push
cmp
cmpsb
pop
mov
dec
inc
stc
push
xchg
pop
aad
outsl
ss
sti
pop
push
pop
pop
lods
in
enter
lea
ss
adc
push
push
xor
xor
fs
insb
add
jmp
adc
adc
cmp
push
dec
inc
test
sub
push
push
pop
in
add
test
test
out
cmp
xchg
jp
mov
in
js
incl
test
out
sub
mov
jge
out
xchg
inc
pop
xor
repz
shl
arpl
pop
lds
data16
imul
and
in
scas
gs
popf
iret
sbb
dec
mov
dec
add
arpl
push
rorb
int
pop
test
cmp
adc
pop
lahf
mov
movl
jmp
outsl
insb
gs
cs
insb
add
mov
add
adc
xchg
int3
jb
ret
xchg
out
repz
sub
mov
arpl
push
clc
sarl
xchg
mov
les
cmpsb
fwait
iret
loop
push
mov
in
enter
cmp
rcrl
jbe
or
pop
adc
adc
jp
push
sbb
sbb
out
repnz
adc
stc
sbb
push
sub
gs
push
leave
xchg
mov
data16
mov
or
int3
repz
fdivs
inc
and
pop
fs
xchg
pop
fwait
add
or
inc
xchg
pop
hlt
dec
xchg
xor
imul
pop
test
or
mov
loopne
fldt
xor
insl
mov
test
xor
and
addb
test
lock
dec
sarl
xor
cmp
icebp
lods
mov
cmpsb
les
dec
xchg
pushf
push
test
cld
jl
rcrb
fiadds
addr16
sub
fistpl
xchg
mov
bound
and
add
cmp
mov
add
sub
rorb
mov
adc
push
adc
repz
push
or
cmpsb
stos
or
loopne
xchg
adc
and
push
in
insb
pop
mov
jbe
adc
add
add
sbb
xor
lcall
es
or
andl
sub
jae
lcall
jmp
inc
int3
ja
test
adc
pop
pop
xchg
fwait
test
cs
xlat
sbb
or
add
cmp
jmp
test
es
fcoml
iret
jmp
cwtl
bound
sub
ret
pusha
mov
icebp
push
jb,pn
cwtl
rorl
or
and
in
mov
adc
daa
xlat
mov
xlat
test
lods
xlat
or
mov
inc
or
in
or
push
mov
xchg
mov
aaa
mov
push
add
out
dec
pop
pop
in
repnz
adc
nop
mov
jle
faddl
sub
mov
or
das
xchg
sub
mov
jo
push
leave
pushf
xchg
es
pop
test
sbb
or
jp
fmull
xor
cli
aad
pop
mov
or
inc
add
inc
xchg
loop
jno
adc
dec
in
mov
push
or
int
loop
ror
add
jno
aam
mov
loopne
js
inc
loopne
pop
rolb
iret
dec
and
inc
leave
pop
sbb
xlat
lea
jne
bswap
cwtl
movb
lahf
lahf
lahf
setp
push
seta
lea
pushf
lea
movb
mov
pushl
movl
pushf
mov
push
pushf
pusha
pushf
pushl
ret
in
xchg
xchg
push
dec
insb
negb
xor
or
jg
out
or
mov
lret
or
cltd
and
aam
sti
cmp
pop
fists
fldl2t
pop
scas
push
ds
mov
xorb
rolb
sahf
mov
addr16
xor
movsl
cld
add
jne,pt
and
js
mov
rorb
jbe
std
pop
fsubp
inc
repz
dec
xor
out
cld
lret
loop
sbb
arpl
cmp
push
xchg
fsub
push
inc
sub
sub
cwtl
dec
pop
in
clc
fiadds
popf
mov
pop
inc
cmp
in
fwait
xor
cld
daa
cmp
adc
mov
and
sub
lock
sub
jg
ret
xchg
inc
adc
push
cmpsl
fidivrs
dec
cltd
int
insb
sbb
and
xor
and
shlb
ja
bound
and
adc
adc
inc
sub
push
sub
sbb
jle
fstpl
xor
sbb
jp
lret
shlb
jmp
es
dec
bound
lock
xchg
sbb
mov
imul
push
jae
sbb
in
mov
fwait
jno
clc
and
adc
imul
lret
mov
dec
test
push
hlt
aad
xchg
das
mov
xchg
in
js
cli
push
dec
sti
pop
mov
dec
scas
outsb
mov
arpl
pushf
pop
cmp
mov
rol
rcrb
cmpl
inc
gs
cmpb
jne
dec
mov
and
jns
inc
lock
mov
mov
inc
cltd
jbe
mov
pop
push
fadd
or
insl
sbb
cs
or
std
mov
fisubrl
mov
pop
cmp
sbb
mov
testl
cmpsb
mov
leave
mov
addb
adc
xchg
loop
mov
jno
pop
data16
shlb
xchg
or
lahf
cmp
popa
and
sub
pop
lds
or
adc
mov
pop
sbb
adc
fcompl
pushf
jge
lahf
test
cmpsb
xchg
clc
or
sub
xchg
loope
jge
push
insb
dec
mov
ja
loopne
cmpsb
or
subl
dec
test
pop
fs
das
stc
push
subl
clc
xor
xor
in
out
in
push
rcl
divb
fwait
mov
sbb
sbb
enter
pusha
call
add
cmc
arpl
lods
jmp
notb
lods
loopne
popa
imul
mov
lahf
shrl
jg
stc
or
rcr
xchg
lret
adc
xchg
lods
orl
push
decl
in
push
std
cmp
inc
push
in
inc
fisubrs
sub
sti
ds
out
lods
push
mov
test
not
inc
btr
mov
bt
clc
pushl
xor
bt
call
adc
loope
adc
push
and
xor
mov
pop
jecxz
fstl
push
dec
test
pop
ret
pushl
mov
in
shl
pusha
hlt
or
add
shlb
add
adc
nop
aaa
dec
or
sbb
or
add
dec
cwtl
mov
jg
sub
incl
sub
adc
test
iret
sahf
test
insl
adc
std
pop
pushf
push
add
fisubrs
lea
xor
ja,pt
aas
cmp
push
pushl
lea
call
call
lods
clc
not
rcl
call
call
mov
adc
sub
rcll
mov
cmp
out
xor
mov
cmp
bound
sbb
test
pop
inc
sub
add
pusha
stos
push
and
lret
or
inc
add
sbb
push
bnd
pop
lods
out
and
pop
fsts
lret
push
insl
dec
xchg
inc
and
cmp
inc
pop
jb
and
lods
push
xchg
pushf
icebp
aad
fsubs
mov
lea
jg
pop
pusha
pushl
ret
pop
fldenv
data16
fsubrl
das
xor
test
nop
jb
push
mov
sahf
inc
pop
shrb
cmp
imul
testb
addb
imul
mov
mov
fcmovb
into
xchg
aaa
dec
aam
lods
jmp
xlat
xchg
xchg
inc
dec
xchg
icebp
icebp
or
jb
into
xor
sub
xor
mov
adc
mov
data16
adc
cmc
imul
ss
sbb
mov
orb
pusha
pop
push
imul
xchg
xor
mov
jp
mov
jp
test
outsb
mov
sti
inc
imull
lea
sbb
iret
lea
loopne
pushf
outsb
adc
mov
jnp
enter
out
push
mov
push
jmp
jns
into
imul
cmp
in
pusha
inc
mov
pushf
cmp
sahf
ljmp
inc
in
int
rorb
daa
in
aas
icebp
arpl
dec
mov
mov
in
daa
loope
fwait
mov
or
or
fnstcw
in
rolb
lea
int3
mov
mov
pusha
mov
mov
setb
lods
bt
pushl
neg
test
cmp
cmc
push
add
call
iret
in
addr16
sti
mov
jns
test
pop
pop
loop
pop
lahf
cmp
jno
fcomi
arpl
xchg
sub
hlt
pop
push
cmpsl
ficoms
cmp
out
dec
xchg
mov
sbb
fidivs
jbe
cmp
pop
flds
adc
lds
mov
mov
add
call
sbb
cmpsb
sbb
faddl
je
ja
ficoml
add
aas
hlt
xchg
add
lods
dec
push
idivl
sub
cli
jg
subl
ds
add
or
or
jbe
cmp
push
pop
xchg
or
fldcw
lea
outsb
stos
stos
or
in
daa
sub
dec
add
mov
out
xor
aad
fisttpll
aad
iret
mov
adc
sbb
cmp
jns
inc
leave
loop
je
incl
mov
out
push
loopne
cmc
mov
cld
add
push
shrl
fmuls
jmp
out
rcl
dec
sbbb
add
jmp
div
addr16
sub
sub
xchg
pop
loopne
and
push
adc
fbstp
sub
mov
jb
addr16
divb
pop
insl
mov
sub
lds
xchg
ret
lock
push
or
aad
into
test
mov
and
scas
mov
push
aam
push
decb
cmp
jns
and
nop
sbb
pusha
mov
adc
adc
push
sub
hlt
jne
push
repz
xor
mov
shl
xor
xchg
not
call
sbb
rcl
ror
sub
not
not
inc
shr
add
sar
bsr
bsf
mov
adc
cmc
shr
mov
cmp
push
bt
pushf
repnz
pushf
pushf
lea
jne
pushf
pushf
lahf
movb
not
jmp
jmp
push
js
push
pushf
mov
add
into
dec
mov
std
pop
arpl
inc
dec
or
lea
dec
jno
iret
call
inc
test
sbb
loopne
sbb
in
in
cmc
scas
roll
mov
inc
xchg
xor
fdivrs
jmp
mov
mov
fcompl
cmp
stc
sbb
aad
mov
push
jl
ficompl
inc
outsl
insb
xor
cs
insb
add
ret
sub
xchg
adc
push
mov
mov
repz
pop
cmp
int3
into
jbe
mov
int
jnp
daa
pop
adc
mov
push
es
icebp
xchg
scas
aas
push
and
in
rorb
sbb
jge
shlb
pop
int3
repnz
shr
add
sbb
mov
lods
mov
loop
ret
std
test
jmp
hlt
call
adc
dec
jmp
imul
pop
mov
das
cmp
mov
push
push
pushf
imul
mov
out
stc
xchg
pop
inc
sub
cmp
xor
add
xrelease
mov
push
sbb
fwait
adc
fcmovnu
jg
shl
mov
inc
jmp
outsb
sub
out
adc
mov
cmpsb
xchg
cmp
jecxz
std
adc
xchg
mov
jne
sub
ficoms
stc
aam
adc
xchg
or
jnp
cmp
scas
leave
inc
or
mov
test
sub
fninit
inc
mov
test
xor
jno
hlt
repnz
test
fldl
stos
je
xor
xchg
cmpsb
push
adc
je
push
add
dec
sbb
in
and
and
sbb
mov
aaa
pushf
addl
in
ror
xchg
push
js
jle
sub
mov
xchg
in
adc
ror
xor
bt
test
pushf
lea
je
jmp
or
push
xchg
mov
out
jno
jmp
pop
stos
ret
repz
inc
enter
cli
arpl
test
std
dec
pop
lea
push
test
in
inc
dec
ret
test
shll
aaa
fimull
test
int
ja
shrb
sti
popf
pop
sub
cmp
fcmove
sbb
imul
into
sar
xor
cmp
lret
pop
imul
jb
inc
push
test
ljmp
push
insl
aad
cmpsl
ljmp
add
adc
xchg
dec
popa
sbb
adc
inc
lds
mov
popf
lea
ja
pusha
imul
stc
cmp
pusha
pushf
add
pushf
movw
mov
push
lea
jmp
and
adc
ret
or
fisttpl
mull
jp
int3
sti
jo
xor
shrl
cs
pop
dec
xchg
cli
sub
pop
scas
movsl
dec
addl
and
xchg
insb
lret
in
xchg
push
sub
push
mov
cmp
leave
jae
fnsave
jbe
or
ret
in
fs
adc
xor
popf
cmc
pop
xchg
int
jnp
lcall
test
ret
cmp
fnstsw
clc
sbb
fdivl
xchg
sbb
jp
insb
dec
rclb
cmc
dec
movsl
sbb
dec
outsb
stc
push
cmp
lahf
cmpsb
pop
or
lea
hlt
jle
jge
in
inc
shr
call
or
aas
dec
mov
out
iret
pop
add
cwtl
mov
punpckhbw
ljmp
pop
add
and
fmuls
pop
add
iret
adc
or
in
repnz
jl
icebp
fcomp
xor
sbb
xchg
sahf
mov
dec
cmpsl
std
mov
inc
in
out
jp
push
sbbb
add
mov
xor
cld
cwtl
sub
push
mov
push
pushf
mov
cmp
push
lea
ja
pushf
bt
pushf
bt
imul
stc
cmp
call
push
jg
insl
adc
inc
je
lds
es
inc
decb
add
xchg
mov
push
call
mov
dec
arpl
sbb
sub
lds
mov
mov
mov
leave
int
cld
mov
imul
scas
test
cmp
lock
cli
rcl
divl
pop
inc
sbb
stc
xlat
mov
mov
mov
mov
aaa
rorb
enter
xchg
rcrb
sub
out
or
insl
adc
sub
jmp
fs
lods
repnz
sbb
xchg
jge
pop
enter
push
cmp
inc
mov
or
mov
lds
cmp
mov
adc
jno
sub
push
add
pop
jl
cmp
cs
test
fldl
lret
popa
mov
je
xor
sub
aad
mov
mov
aas
popl
mov
sbb
xor
addl
mov
and
std
test
rcrl
outsl
adc
add
mov
rolb
adc
push
insl
in
xchg
sub
and
je
push
dec
sarb
sbb
divl
fwait
cmc
xchg
mov
int3
push
shl
xor
sbb
fdivl
cli
and
and
je
pop
test
stos
enter
aas
icebp
ret
mov
sbb
sbb
adc
push
insb
insl
flds
and
call
sub
add
ret
outsb
adc
jl
lods
cs
pop
mov
or
mov
push
xchg
flds
pop
cmp
cwtl
cld
enter
mov
loope
xchg
or
sti
add
lcall
mov
bound
imul
cltd
add
dec
inc
ret
jg
cs
xchg
fldt
xchg
int3
loope
mov
sub
pop
dec
aaa
jns
cltd
rcll
mov
adc
xchg
rcrl
push
pop
jmp
addr16
in
jbe
outsl
fstp
mov
xchg
xchg
iret
in
sbb
fs
pop
or
xchg
hlt
mov
push
adc
call
leave
lds
adc
lods
arpl
sti
push
ret
add
cmp
clc
mov
in
test
sti
lret
loopne
fdivp
test
ret
ret
or
pop
sbb
aaa
inc
and
mov
pop
jnp
ja
int3
cltd
add
or
jae
inc
out
shll
call
icebp
jp
mov
lret
mov
ret
cmp
loop
sahf
shr
push
dec
mov
aam
xchg
push
jp,pt
sub
out
pop
sub
cli
dec
xchg
jo
xchg
dec
jns
sbb
jge
mov
cld
lock
inc
jnp
popf
cs
std
cmp
xor
inc
sbb
sbb
sbb
jp
jge
sub
xchg
mov
leave
mov
mov
in
add
imul
push
lock
sbb
mov
clc
and
lret
pop
jecxz
cmp
scas
outsl
jne
scas
sub
lcall
jne
xchg
sbb
vsubpd
aad
inc
mov
stos
xchg
cwtl
add
ljmp
jno
xchg
inc
or
aad
aas
loope
or
add
jecxz
hlt
add
or
or
mov
lret
sub
dec
out
rcll
mov
repnz
addr16
loopne
test
mov
test
mov
ja
fxtract
adc
hlt
fbstp
repz
mov
movsl
inc
fcmovu
filds
xorb
cmp
dec
jecxz
sahf
or
pop
add
xchg
mov
int3
insl
sbb
cwtl
mov
xchg
mov
rep
movw
movw
call
pushf
sub
stc
jmp
mov
cmc
jno
xchg
sub
mov
push
or
sub
inc
enter
ret
bound
imul
push
push
xor
inc
repnz
shll
mov
jl
sub
cwtl
adc
stos
or
psubb
jle
pop
imul
xchg
pop
or
pop
sbb
lods
cltd
mov
fisttps
adc
sub
push
inc
xor
add
cmp
cmp
ret
cmpsb
push
pop
jge
adc
xor
jecxz
xor
dec
jp
adc
pushf
pushf
movw
lea
jmp
lea
ja
cmc
imul
stc
bt
bt
add
pusha
lea
jmp
mov
xchg
gs
mov
and
popa
cmp
xchg
js
repz
add
pop
dec
test
iret
js
xchg
pop
xchg
mov
imul
int3
pop
cmp
lcall
push
push
mov
ds
sub
sub
cmp
or
xchg
cli
sbb
or
push
movsl
mov
loopne
mov
arpl
subl
push
dec
clc
jb
xchg
sub
push
push
sti
out
in
cmp
dec
loop
ljmp
add
push
dec
sbb
xchg
add
jmp
mov
xor
ret
jne
jb
imul
stc
movsb
lods
mov
mov
jnp
mov
lcall
sub
aas
loop
in
add
lods
xlat
sar
leave
push
outsl
mov
mov
sub
xor
or
outsb
mov
sub
mov
jge
cs
xchg
pop
je
xchg
xchg
shll
push
lods
cmpsl
lcall
mov
mov
scas
mov
mov
rcrb
shlb
add
and
cs
pop
insb
fisubl
inc
insb
pop
push
outsl
jae
xlat
cmp
and
mov
mov
add
sbb
jmp
subb
jno
test
jae
mov
xor
push
dec
test
push
pop
ret
mov
orb
sti
fucomi
xchg
lds
and
enter
mov
and
cli
xor
push
adc
fisttpll
mov
inc
int
fidivrl
jg
push
stos
out
idiv
fsubr
dec
je
mov
data16
dec
push
addr16
mov
test
and
cwtl
mov
sbb
lret
das
xchg
test
and
sahf
cmc
imul
bound
adc
add
js
scas
mov
scas
mov
adcl
testb
adc
jg
rol
add
pop
push
sti
jae
imul
loop
fcompl
movsl
push
repz
lret
jp
and
mov
int3
test
mov
cmp
aaa
add
clc
pop
test
xlat
data16
jo
je
and
lods
cmpsb
add
mov
sahf
inc
out
movb
scas
inc
push
outsl
mov
outsl
adc
ret
lods
mov
aam
test
in
add
push
sar
inc
xor
mov
outsl
push
fisubs
or
sbbl
cmpsl
mov
bound
imul
das
or
dec
in
roll
xchg
jne
xchg
dec
jbe
push
inc
adc
scas
xor
dec
push
arpl
dec
mov
iret
cmc
fld1
sarb
jne
pop
fwait
sbb
loopne
int3
jb
cmp
fs
and
loopne
jmp
lds
ljmp
out
fdivrs
lret
sub
and
imul
push
ja
and
sbb
and
sub
pusha
pop
mov
stos
mov
jge
xor
sbb
jo
jne
xchg
and
pop
mov
pusha
adcb
xchg
sbb
pop
xchg
out
mov
xchg
out
xchg
mov
hlt
push
outsl
push
or
inc
lahf
cmp
shl
lods
inc
cmpsb
bswap
hlt
fwait
push
add
mov
xor
ret
or
outsb
cltd
jmp
pushf
je
xor
jle
push
adc
movsl
stos
cmp
rolb
jp
mov
pushf
pusha
lea
jmp
and
push
ja
xchg
mov
cltd
mov
cmp
ljmp
f2xm1
js
jbe
mov
sub
add
int
push
and
dec
rclb
fstps
in
adc
sbb
mov
imul
jg
repnz
inc
scas
fldcw
sub
and
in
jle
rolb
jge
xor
aaa
xchg
inc
stc
pop
leave
inc
mov
rcrb
cltd
mov
jb
gs
jnp
cld
pop
cltd
loop
in
rclb
aaa
ds
mov
add
jle
push
pop
test
hlt
sbb
pop
jmp
mov
push
in
stc
int
jbe
imul
nop
fmull
mov
pop
dec
jle
lods
test
outsl
sbb
mov
cwtl
pop
ret
or
mov
xlat
push
mov
jg
adc
js
fbld
mov
jb
add
jmp
push
iret
popf
jbe
jne
hlt
xchg
xchg
xorb
mov
ret
roll
jne
xchg
addl
lock
dec
adc
rol
incl
lods
cmp
xchg
mov
pop
dec
outsb
push
jbe
iret
repz
loope
push
sub
rclb
arpl
nop
rcl
frstor
inc
and
mov
add
cmp
mov
pop
repz
add
dec
clc
xchg
mov
mov
or
fdivs
pop
fptan
cmp
push
push
sbb
pop
scas
gs
jmp
adc
adc
or
aam
xor
jecxz
mov
jg
push
insb
in
jg
pushf
dec
pop
xlat
sbb
mov
fs
imul
iret
mov
fsubrl
int
pop
push
xchg
jb
mov
call
aaa
loope
dec
data16
cmp
mov
adc
mov
mov
dec
mov
dec
das
push
movsb
mov
xor
xor
push
sub
aam
mov
mov
inc
pop
out
pop
mov
xor
xor
icebp
imul
lock
test
xchg
jmp
jmp
xor
ret
pop
jae
pop
loope
sbb
aas
jno
loope
push
rclb
mov
sbb
pop
pop
xchg
arpl
push
adc
fistps
cmp
stos
add
xor
cmc
test
into
adc
rcrb
sub
test
clc
adc
xchg
xor
adc
cmp
cmp
and
mov
mov
in
int3
sbb
inc
push
cmp
and
and
int3
je
lahf
inc
aam
sbb
mov
sub
xchg
or
jp
xor
inc
leave
jecxz
jns
xchg
loope
inc
subb
inc
loop
ljmp
divb
push
pop
dec
lcall
in
test
jns
xchg
ret
add
inc
cld
mov
in
sub
inc
outsb
xchg
loope
pushf
mov
push
mov
mov
popf
cs
cmp
push
xchg
inc
ds
xchg
inc
or
nop
gs
cltd
int
lcall
lret
outsl
mov
ss
and
lret
outsl
in
fsubl
mov
xchg
popa
push
fstpt
pop
mov
aaa
fnsave
lds
insb
lods
outsl
adc
sti
ds
adc
out
xchg
int3
adc
pop
dec
idiv
fs
pop
jnp
xchg
xchg
test
call
call
dec
aad
dec
out
xchg
xchg
outsl
mov
pop
lock
lock
add
jae
or
inc
nop
mov
cmp
lcall
adc
lahf
loopne
sub
xor
xor
dec
jno
pop
pushf
mov
ret
adc
dec
lods
addr16
pushf
cmp
sub
xchg
cmp
punpckhbw
push
repnz
and
imul
jg
or
jnp
cwtl
pop
vmovupd
fcmovnb
or
adc
shrb
and
clc
lea
jb
pushf
cmp
bt
cmp
call
fnstenv
jnp
xchg
out
push
fadds
daa
or
xlat
pop
push
loope
or
push
cmp
and
xchg
sbb
jbe
mov
insb
jno
icebp
das
xchg
mov
dec
jnp
inc
adc
fwait
xchg
sarl
mov
subl
cmp
sub
cltd
xor
fnstsw
pop
mov
mov
xor
ss
fs
shl
mov
jmp
inc
inc
cmc
cli
fwait
int
cmp
int
inc
int
gs
sbb
and
cli
sub
insb
push
cmp
sub
ficomps
jl
xchg
inc
add
or
ss
jnp
pop
push
add
out
mov
mov
fdivr
test
rcll
stos
pop
sbb
xchg
enter
mov
lret
inc
inc
int3
in
repz
push
adc
sub
out
dec
cmp
fbstp
scas
outsb
xor
adc
jg
enter
mov
mov
sbb
out
xchg
jbe
repz
xchg
dec
xchg
pop
ret
hlt
add
mov
pop
movsl
movsl
in
orl
scas
lds
mov
xor
loope
add
imul
jge
xchg
add
repnz
scas
and
enter
rolb
sbb
notb
adc
xchg
sarl
int
mov
xchg
fsub
xor
mov
mov
movsb
sub
or
jns
push
push
mov
xchg
pop
stc
mov
test
mov
or
add
push
xor
dec
xchg
mov
in
andb
mov
pop
dec
dec
sti
xor
mov
sbb
arpl
inc
ret
inc
fcomip
jo
ss
xchg
jmp
mov
sbb
outsl
add
loopne
fistpll
jne
shlb
jo
jmp
xchg
shll
dec
xchg
sub
iret
in
xor
xor
jle
sti
dec
xchg
push
pop
sbb
cmpsl
dec
mov
mov
cmpsl
cwtl
test
sahf
pop
dec
or
dec
icebp
fdivr
adc
movsl
lret
ja
arpl
repz
jno
mov
xchg
ror
mov
push
popa
jae
xchg
lret
jecxz
daa
push
xor
paddsw
xchg
rcll
stc
mov
int3
dec
mov
cmp
int3
fbstp
sub
lock
xchg
mov
testb
jmp
int3
ljmp
mov
push
stc
cmpsb
scas
fsts
push
stos
xchg
cmp
in
out
cmp
pushf
dec
cmpb
scas
callw
idiv
ja
jecxz
adc
sbb
insl
push
lock
pop
adc
inc
call
ss
mov
xchg
jg
adc
cmp
pop
repz
push
daa
push
negl
xor
mov
orl
adc
xor
aas
mov
xor
push
cmpsl
and
clc
push
cmpsl
dec
xchg
jns
ret
hlt
lock
lock
pop
ss
add
mov
dec
mov
jmp
push
push
fsubs
rol
mov
in
add
outsl
mov
sub
loopne
xor
cltd
jg
jle
push
pop
sub
loopne
add
mov
arpl
mov
ret
push
pop
int
push
cmp
aam
inc
jmp
add
outsl
lock
sub
or
rclb
sbb
mov
les
decb
js
xor
push
push
sbb
das
popa
and
in
leave
push
lret
lea
notl
imul
xor
mul
dec
jne
mov
add
mov
scas
fisttpll
inc
xchg
xchg
repnz
fwait
or
test
fsubl
das
int
adc
nopl
popa
or
ficoml
fdivs
jl
loope
pop
ljmp
inc
xor
divb
mov
inc
cld
xchg
fdivs
inc
mov
popf
fcoms
cmp
jns
add
push
and
negb
or
les
xor
or
in
leave
sbb
inc
fimuls
dec
push
and
clc
movsb
insb
xor
incl
jb
push
dec
mov
mov
insb
idiv
cmp
jnp
js
jge
lds
xchg
into
add
sub
push
cmpsl
mov
je
dec
pop
out
clc
test
lcall
loope
pop
fwait
popf
fisttpll
cwtl
ja
lods
pop
je
xor
xchg
sbb
jg
jo
xchg
mov
cwtl
inc
add
xchg
jecxz
pop
test
hlt
test
sbb
mov
xchg
stos
fwait
or
and
loope
xchg
jne
rcll
pop
loopne
loop
lcall
je
add
movsbl
jmp
mov
jg
xchg
push
out
cmc
mov
xlat
xor
scas
fmul
test
jl
rclb
sti
add
mov
mov
inc
xchg
xchg
test
sub
and
addr16
mov
mov
cs
cmp
lea
jo
out
push
lock
mov
es
shll
add
ja
mov
mov
iretw
rorb
ljmp
gs
cmc
adcb
insb
sub
test
aaa
fisttpll
call
cmpsb
loope
jmp
stos
add
xchg
shll
je
call
add
adc
jbe
push
icebp
inc
add
aam
mov
push
mov
test
add
push
mov
sar
xchg
dec
and
int3
aam
sbb
cmp
and
sti
sbb
lods
xchg
cld
sub
cs
incl
aas
lock
cmpsb
sti
push
jne
add
sub
stos
in
roll
clc
inc
pop
incb
sub
mov
adc
mov
pop
je
frstor
cmpsl
stos
xchg
mov
sbbl
sub
repz
ret
bound
mov
jecxz
and
hlt
jle
sub
push
popa
mov
lret
xchg
or
inc
and
jmp
cmp
adc
cmp
jmp
sub
push
push
pusha
push
inc
lea
call
adc
daa
adcb
ss
ja
test
or
adc
clc
mov
mov
rolb
dec
xchg
sahf
in
dec
inc
lahf
mov
stc
sar
xchg
jmp
xchg
pop
roll
out
repnz
fnstenv
loop
cmp
mov
mov
jl
cmp
dec
pusha
cli
shl
mov
cli
shr
out
push
incb
int
jmp
inc
and
pusha
pushl
pushl
pushl
ret
imul
jle
mov
jno
in
inc
pop
jp
loop
or
cs
jo
out
lds
xchg
icebp
push
mov
test
sub
cltd
jne
out
fwait
cmp
xor
cltd
shll
sbb
mov
push
jp
jge
jp
inc
outsl
addr16
inc
push
fdivs
pop
out
shrl
in
scas
jp
sbb
mov
test
scas
and
push
jg
cmp
fs
sub
pop
xchg
inc
fcmovnb
mov
adc
dec
in
in
or
xorb
daa
addr16
loopne
outsb
push
sbb
adcb
and
pusha
mov
xchg
loopne
push
cwtl
dec
inc
cld
and
mov
clc
negb
or
icebp
test
jl
int
push
sbb
roll
imul
push
jl
mov
xor
addr16
addr16
dec
adc
aaa
dec
xchg
lds
sub
mov
or
mov
pusha
cmp
jbe
push
mov
pop
adc
mov
push
aad
push
jle
cwtl
cmpsl
jnp
or
mov
xor
xchg
negl
dec
insb
fisttps
jecxz
and
xor
rcll
xchg
add
xchg
push
mov
lahf
sbb
iret
push
sub
pop
sbb
or
cmpb
stos
xchg
sub
mov
dec
lret
inc
jge
sub
in
lahf
cltd
sbb
mov
popf
enter
xor
insb
inc
push
insb
nop
adcl
test
xchg
push
inc
mov
in
mov
sub
stos
jp
pop
inc
adc
mov
or
std
int
fiaddl
aam
sti
mov
pop
and
cltd
or
sbb
in
dec
xor
out
adc
ficoml
dec
inc
lock
ss
std
cmpsl
cmp
out
xchg
mov
fcomi
mov
jg
pop
mov
cmpsl
pop
pop
mov
adc
push
inc
call
cmpsl
push
mov
rcl
ficoms
cmp
xor
dec
sti
lret
push
cs
aam
in
aas
cmp
xor
jl
dec
pop
mov
movsb
add
sbb
lcall
pop
xchg
add
jb
pop
push
pop
mov
mov
add
mov
aam
xor
imul
movsl
xchg
idivb
pushf
push
lea
call
jmp
aad
popa
test
sbb
into
lock
int
fs
mov
mov
jg
test
loop
ret
lcall
pop
push
pusha
pop
mov
mov
out
sbb
jmp
jmp
xor
repnz
aas
cwtl
in
ja
mov
cmpsb
xchg
push
or
addr16
adc
adc
lods
push
fs
sahf
js
sbb
lcall
pop
lret
ja
jmp
dec
out
insb
loop
adc
push
inc
cwtl
jl
inc
mov
out
ret
mov
mov
push
test
inc
xchg
push
mov
daa
or
inc
sub
jbe
nop
in
loope
jne
imul
adc
cld
push
bound
test
enter
adc
mov
push
cmpsl
ror
add
lods
mov
stos
mov
mov
js
adc
adc
pop
jg
pushf
jns
rcrb
in
jns
stc
jns
add
inc
movsb
sbb
jg
xchg
enter
xor
enter
xchg
insl
mov
xor
mov
inc
pop
cmp
test
popa
fists
movsb
push
xchg
mov
sbbl
cmp
jg
aaa
call
fwait
xor
sub
jecxz
outsl
dec
push
mov
mov
cwtl
nop
cmc
lret
fidivrs
scas
call
mov
scas
scas
pop
push
sub
sbb
dec
out
out
jp
stos
xor
in
dec
jo
dec
pop
out
xor
repz
icebp
lods
sub
and
ds
xchg
mov
pop
xchg
cmpsl
jmp
xor
fdivp
lock
sbb
sahf
or
cmc
adc
out
xchg
movb
cmc
imul
clc
pusha
test
add
mov
pushf
pushf
pushl
lea
jmp
adc
pusha
pushl
movb
lea
jmp
dec
jmp
adc
lea
pusha
pushl
jg
ret
mov
xchg
inc
jle
into
sbb
xchg
fimull
dec
mov
jo
cmp
xor
adc
ljmp
sbb
cmc
std
fisttps
lret
aas
js
jle
dec
inc
lea
sbb
pop
cli
jns
jb
iret
xchg
push
pop
and
mov
inc
or
loope
inc
push
cmp
jns
or
fiaddl
ss
test
or
adc
push
adc
push
dec
inc
dec
xor
cs
insb
add
pop
shlb
ret
stos
setp
not
mov
pushf
jmp
jmp
xchg
adc
test
sub
int
adc
pop
sahf
add
fstpl
stc
test
jbe
jbe
dec
xchg
cmp
mov
aaa
push
adc
pop
lods
sbb
jb
js
ja
pop
push
or
xor
mov
cmpsl
outsb
das
pop
jae
insb
add
leave
scas
mov
lock
xchg
stos
mov
pop
sub
ffreep
xchg
lcall
add
je
jb
gs
jb
arpl
jb
inc
add
je
or
xor
pushfw
popw
bt
bt
rcr
mov
pushf
not
cmc
rol
call
fistps
rolb
pusha
xor
mov
sub
daa
sahf
sub
inc
fwait
xor
sahf
aad
pop
jge
popa
fxch
lods
rsqrtps
dec
or
loope
movb
pusha
add
dec
fstps
pop
lret
xchg
int
stc
dec
imul
xchg
or
pop
push
sub
cmpsl
hlt
push
leave
out
cmp
sbb
rorb
lock
mov
test
push
adc
subl
push
inc
lock
out
test
hlt
repz
in
push
mov
test
lea
xchg
loop
sti
push
mov
in
das
add
mov
ret
sbb
pop
mov
popa
test
pusha
and
cltd
mov
fstps
in
fwait
add
xchg
sbb
adcl
mov
lods
xlat
insb
rcrb
mov
inc
pop
shll
jg
push
nop
pushw
les
shr
stos
inc
test
addr16
adc
cmp
mov
je
les
inc
pushf
add
arpl
jae
xor
shlb
mov
pop
fnsave
cmp
iret
loop
jns
adc
and
xlat
push
cltd
dec
push
mov
adc
xchg
stos
orl
incl
xor
lock
mov
cwtl
sbb
add
fst
int3
pop
bound
push
cmp
daa
add
cmp
lds
popf
out
sub
outsb
jp
jg
cmp
sbb
ret
push
and
inc
mov
outsb
push
or
test
fdiv
jbe
cmpsb
pusha
push
mov
loop
push
decb
inc
daa
pushf
xchg
pusha
mov
inc
test
fnstenv
push
fisubrl
push
xor
xchg
mov
mov
fiaddl
mov
push
dec
jnp
or
cmp
and
es
cltd
les
repnz
adc
in
arpl
xchg
cmpsb
adc
lods
xchg
adc
sub
push
cmpsl
sub
mov
push
push
lcall
adc
mov
pop
xchg
lret
dec
int3
xor
inc
in
aam
sub
sbbl
movsl
ret
xor
adc
test
jle
fs
mov
repnz
ds
and
mov
mov
idivb
sub
adc
xor
jmp
decl
or
jg
ret
subb
or
sub
and
test
and
adc
shll
rolb
mov
mov
sar
repz
xor
int
or
ret
shll
ljmp
sub
mov
mov
jne
lret
movsl
jmp
mov
aam
shrd
mov
btc
shr
sub
pushf
rol
and
mov
stc
call
lahf
xchg
push
mov
mov
lods
je
popf
enter
sub
inc
xchg
mov
xchg
jg
xchg
or
cli
in
sahf
push
pop
sahf
cmc
mov
push
jmp
and
xchg
push
push
sub
into
inc
jp
lea
mov
cmp
lret
dec
xchg
inc
arpl
jecxz
cld
das
rolb
movsl
std
xor
clc
out
mov
xchg
xchg
mov
and
mov
leave
insl
fwait
pop
leave
outsb
and
sub
fcmovbe
adc
loopne
xchg
inc
hlt
mov
cmpsb
ds
out
push
and
jge
and
dec
add
inc
rolb
jg
stos
lds
gs
pusha
out
movsl
cmpsb
add
pop
js
lcall
sarb
jl
mov
mov
out
mov
ds
mov
in
das
scas
xchg
addl
outsb
rclb
mov
ret
mov
mov
sbb
or
into
cmc
hlt
xor
bsf
mov
rcl
clc
xor
sub
neg
lea
lea
test
sub
jmp
pop
and
mov
je
shrl
mov
jb
xlat
sub
pop
sbb
sti
sub
nop
dec
xchg
fisubrl
stc
test
mov
in
das
enter
das
mov
addr16
bnd
push
sbb
xlat
subl
es
adc
and
adc
rorb
dec
cs
xchg
popf
loope
test
and
hlt
aad
lret
test
pop
jae
sbb
in
es
xchg
add
sub
xor
clc
mov
add
mov
rol
sub
mov
test
bt
pusha
cmc
shr
cmc
call
nop
and
lea
jbe
inc
cld
or
jl
pop
mov
out
les
arpl
cwtl
jle
mov
lahf
push
sbb
add
mov
es
push
jns
dec
jecxz
jno
leave
insb
addl
aaa
push
pusha
fdivs
jle
leave
scas
or
push
lods
js
lcall
mov
adcb
or
jecxz
ss
xchg
popa
ljmp
cmp
mov
mov
dec
outsb
es
mov
sbb
ljmp
pop
pushf
lea
jae
test
sub
call
inc
inc
push
inc
push
dec
xor
cs
insb
add
nop
pop
adc
clc
insl
mov
shl
mov
sub
or
cwtl
sub
ds
loopne
sbb
mov
jmp
roll
xchg
push
popa
mov
cld
sar
lock
jl
xor
cmp
int3
sbb
mov
shlb
repz
lahf
jle
xchg
push
xchg
das
bound
fsubp
sbb
add
xor
das
in
jp
cmp
out
and
test
mov
xchg
cwtl
cmpsl
test
mov
mov
rcll
mov
push
ja
push
xchg
scas
fildl
rcrb
or
add
shll
pop
aam
xchg
push
jmp
fsubs
mov
mov
mov
ret
pop
dec
insb
test
pop
rcll
inc
outsl
test
lock
adc
push
xchg
das
fcomi
fistpl
xchg
or
xchg
mov
xchg
stos
sahf
outsb
or
cmpl
inc
fisubl
shrb
pusha
outsb
or
mov
xlat
sbb
or
xor
xchg
std
pop
jne
lds
mov
or
push
xchg
out
fwait
orl
xchg
cmp
mov
loopne
mov
sub
mov
popf
add
insb
jns
mov
mov
add
divl
outsb
or
lea
jne
pushf
movsbw
push
movb
movb
jmp
xchg
aas
push
push
int3
dec
jns
cmpl
add
std
aam
jecxz
dec
imul
cmpsb
aaa
push
idivl
mov
dec
loope
sub
jmp
adc
fildl
test
cld
inc
add
push
push
stc
dec
repz
nop
inc
pop
inc
cli
xor
nop
call
clc
xor
mov
scas
pop
mov
rcrb
sahf
insl
nop
and
jmp
rolb
and
mov
pop
test
add
xchg
insl
jne
and
icebp
mov
call
jp
pushf
fwait
andb
cld
pop
add
sbb
inc
fildll
clc
jb
mov
mov
inc
or
or
call
add
or
dec
sarl
push
andb
mov
vcvtps2ph
fistps
and
sbbl
xor
leave
outsb
in
in
xchg
pusha
xlat
push
push
or
mov
xchg
es
push
rcr
xor
mov
insl
xchg
adc
push
fwait
loopne
or
or
ds
adc
into
xorl
aam
jg
cmp
inc
popa
sbb
idivl
popa
pop
inc
jae
xchg
dec
mov
scas
xor
mov
pop
or
aaa
push
mov
jb
xorl
inc
dec
loope
mov
or
push
out
pop
call
jecxz
orb
fmull
sbb
jecxz
jge
out
mov
sbb
dec
fsin
or
into
sub
inc
push
cmp
mov
xchg
daa
shlb
jl
or
inc
jmp
and
xor
scas
dec
cmc
aas
leave
les
mov
iret
call
stc
mov
test
movl
jmp
add
into
xchg
adc
hlt
ds
jo
fistpll
cltd
adc
or
into
or
dec
sbb
jle
js
and
sub
cmp
sub
sbb
out
jecxz
cmp
pop
jp
mov
push
cmp
cmp
pop
cli
add
rorb
idivb
test
add
sbb
or
into
es
dec
cli
or
dec
addb
stos
fistl
mov
cwtl
pushf
outsb
hlt
popa
filds
cmp
jmp
push
dec
dec
dec
dec
cs
insb
add
clc
add
adc
cmp
pop
stos
outsb
sti
stos
out
xchg
or
cmp
and
ljmp
xchg
shll
add
pusha
mov
jg
jp
sbb
pop
xchg
ret
push
js
mov
pushf
and
xlat
scas
cmp
loopne
out
push
xor
fmuls
mov
shlb
ss
or
xchg
mov
adc
sbb
pop
div
rclb
jnp
or
sbb
or
sub
test
idiv
movzbl
shr
shl
aam
xor
shrd
pushf
shld
rcr
mov
sar
sar
shl
add
pushf
rcl
mov
pushf
jmp
mov
test
push
lea
jl
test
push
pushf
lea
je
jno
sub
stc
cmp
clc
pushf
cmp
push
movw
push
call
lods
lock
pop
pop
and
push
push
test
xor
add
dec
xchg
mov
test
jbe
xor
ret
scas
sbb
sub
push
mov
jae
insb
or
mov
shl
xchg
add
test
add
insb
inc
hlt
sub
jmp
test
xchg
or
ficomps
inc
mov
pop
sub
adc
cld
dec
mov
imul
inc
push
dec
and
fimuls
stc
out
jp
in
mov
push
cwtl
jae
push
cmpsb
sbb
daa
xchg
xor
aad
push
mov
fbld
cwtl
es
out
push
xor
add
stos
orb
sti
sbb
xchg
movl
add
notl
push
pop
enter
push
xchg
sti
unpcklps
inc
jnp
inc
adc
dec
or
out
sub
pop
arpl
call
xchg
adc
sub
shll
pop
dec
jns
ds
jecxz
or
push
mov
inc
divb
aam
mov
adc
lahf
ljmp
cli
sbb
push
xorb
sbb
sbb
sti
mov
push
orb
mov
aaa
or
insb
or
sub
dec
fisttpll
or
rorl
mov
inc
mov
in
sbb
fwait
xor
dec
add
in
test
sub
lds
scas
mov
add
jge
mov
clc
cmp
pusha
movw
lea
jae
pusha
cmc
push
movw
add
pushf
push
pushf
pushf
mov
pushl
mov
lea
jmp
adc
xchg
aaa
or
ss
inc
add
jl
es
imul
xchg
pop
daa
addr16
dec
xlat
ja
and
int3
xchg
ss
or
pop
ds
adc
xchg
cmc
fidivl
bound
int
mov
and
in
lcall
cmc
les
mov
and
mov
jg
rcr
push
xchg
mov
leave
sbb
pop
je
xchg
les
push
mov
xchg
xor
fwait
inc
xchg
xchg
loope
cmp
je
dec
jae
in
bound
cmpsl
adc
xchg
adc
pop
sbb
iret
aaa
add
jno
loopne
sbb
xchg
jnp
aad
out
pop
jbe
push
xchg
sbb
add
sbb
jg
in
adc
mov
cmp
out
shlb
aad
xchg
adc
enter
push
push
dec
test
ljmp
mov
shlb
or
inc
push
dec
xchg
lock
mov
push
pop
lret
movsl
jmp
stc
sub
jno
insl
xchg
lods
push
arpl
xchg
xchg
xor
nop
pop
mov
dec
jbe
movsl
shll
popf
cs
call
movsb
movsl
scas
adc
fnsave
pop
sarb
ljmp
cmp
cld
cmp
lret
xchg
fwait
add
fcmovnu
adc
pusha
pop
inc
mov
in
adc
add
mov
inc
push
inc
loop
insb
mov
jge
ret
lods
out
mov
outsl
xor
negl
movaps
lods
jbe
ja
sti
mov
mov
or
jno
leave
xchg
fistpl
sarl
leave
jne
jg
push
and
mov
stc
push
dec
scas
mov
push
and
dec
xorb
outsl
mov
mov
sub
xchg
in
sets
repz
sub
push
sbb
imul
pop
xchg
in
loop
loope,pt
std
mov
adc
loope
sbb
push
xchg
mov
subb
push
lret
xchg
dec
or
xchg
cmovg
rcrl
lock
mov
jle
inc
sahf
mov
mov
ja
add
inc
add
fists
popf
dec
icebp
sub
push
stc
popa
arpl
into
xchg
test
xor
scas
imul
lds
out
mov
or
pop
imul
add
xor
mov
push
jnp
or
bound
fs
in
adc
push
lret
xor
jb
pop
lret
pop
mov
mov
gs
mov
jo
stos
adc
add
les
loop
mull
insl
call
pushl
cmp
neg
test
bt
push
stc
mov
cmc
bt
call
out
and
xchg
mov
sub
pop
aas
es
int3
iret
and
pop
aam
cmpb
movsl
decb
sub
mov
in
fistpl
push
push
roll
dec
int
or
sub
sbb
push
rolb
mov
mov
xor
push
xor
imul
call
mov
jle
enter
adc
sti
rcll
jno
inc
fs
in
icebp
xor
jecxz
xchg
mov
rcrb
inc
pushf
call
pushw
popfw
push
call
sub
cltd
adc
stos
adc
dec
pop
decl
mov
jns
movsl
popa
leave
repnz
lods
push
dec
adc
mov
inc
xchg
mov
inc
xchg
loop
inc
xchg
insl
scas
test
andl
pop
lea
jg
push
mov
mov
icebp
xor
pop
mov
cmp
adc
std
les
out
and
sbb
loope
rcll
es
sub
xchg
inc
iret
faddp
mov
fcompl
pop
xchg
fmulp
dec
lea
mov
lahf
mov
mov
lea
cltd
or
xor
fstpt
xchg
sub
xchg
cmp
xchg
xchg
push
or
sub
adc
push
loop
loop
mov
jbe
in
pusha
adc
in
sqrtps
inc
pop
in
sbb
sub
and
ficoms
out
inc
jge
jmp
sbb
call
mov
pop
movsl
push
push
jae
mov
inc
jnp
pop
stos
std
orb
or
repz
mov
cld
adc
faddl
leave
les
xchg
fbstp
lea
or
sbb
outsb
in
ficompl
sub
xor
cmp
aaa
int
ds
or
inc
test
and
cmc
idivl
add
fwait
xor
sbb
icebp
add
cmpsb
cld
sbb
fiadds
mov
adc
dec
jp
jo
ljmp
xchg
out
cmp
push
andl
pushf
push
lea
je
cmc
stc
sub
call
adc
loopne
adc
xchg
insl
add
aam
sbb
ss
pushf
out
xor
sub
shrl
and
xchg
inc
sbb
or
ficomps
pop
icebp
xor
cmpsb
push
outsb
mov
pop
mov
cmpsl
cltd
out
xchg
push
rorl
popa
imul
negb
inc
je
jns
pop
lret
xchg
sbb
inc
sbb
dec
imul
rorl
dec
out
mov
pop
push
pop
sbb
push
pushf
adc
xor
cli
aad
jno
sarl
cmp
sbb
cwtl
xchg
shr
mov
add
cltd
xchg
scas
int
xor
cmp
rorb
testb
sbb
out
inc
aad
pop
xlat
cmpsb
fdivl
mov
jecxz
push
xchg
pop
adc
cmp
ss
in
aad
es
in
and
xor
lods
pop
jo
dec
ret
cmp
mov
mov
outsb
test
mov
in
cmp
stos
out
or
or
mov
sbb
pop
push
mov
xor
test
and
in
mov
ss
cmpsl
fmull
xchg
imul
cli
popa
lret
xchg
sbb
out
insl
or
ljmp
je
sub
repz
mov
jne
and
and
out
les
or
and
add
push
add
subb
mov
pmuludq
js
cwtl
push
loop
cmp
sbb
stc
test
inc
push
jae
sub
sub
sub
cltd
into
sbb
add
sub
and
lret
sti
sub
xchg
xchg
inc
add
adc
loope
inc
stos
pop
ret
in
cmp
mov
mov
mov
insl
sub
adc
pop
jae
sarl
or
sbb
sbb
dec
lahf
inc
mov
dec
dec
cs
sbb
pop
ret
mov
jb
xor
shlb
icebp
xor
fstps
scas
jp
rorl
xor
js
pop
enter
scas
jae
pop
cmp
out
xor
pop
insb
add
jp
outsb
imul
sbb
mov
std
jnp
xor
dec
rcr
sbb
mov
pusha
lret
sbb
enter
push
fwait
adc
add
negb
loopne
jae
pop
mov
insb
sbb
adc
insb
dec
push
xchg
sbb
xlat
adc
mov
repz
hlt
mov
fdivs
mov
or
jp
and
xchg
jo
sahf
jae
xchg
add
addr16
mov
jbe
rorl
sbb
xchg
pop
mov
out
fnsave
push
mov
push
inc
insl
stc
jns
jmp
xor
inc
orl
call
in
pop
mov
sbb
repz
rcll
cwtl
ja
dec
leave
mov
pop
push
or
xor
dec
and
push
sbb
lcall
sub
mov
arpl
inc
xchg
out
js
sbb
add
cltd
push
mov
or
outsb
cmc
mov
fiaddl
adc
sbb
aaa
and
scas
pop
pushf
mov
push
jg
pop
repnz
dec
in
cmp
fnstsw
ret
or
mov
pop
insb
cmp
xor
and
ds
adc
mov
jb
jae
xlat
pop
jbe
dec
pusha
ja
mov
mov
ss
inc
rcrb
xor
lea
sbb
xor
sbb
xlat
xor
and
xchg
test
jecxz
cmp
inc
cmpsb
push
pushl
sarb
mov
push
inc
inc
xor
notl
sub
lods
sbb
push
xor
sub
xchg
popa
fwait
xchg
cld
movl
jle
dec
mov
dec
mov
shrb
loopne
mov
addr16
fcoms
pop
mov
jmp
jb
lret
xor
sub
sub
cmp
and
clc
loope
dec
jbe
lds
cltd
cli
xchg
add
sub
lods
dec
mov
push
adc
adc
es
cmp
fnsave
jp
mov
subb
mov
add
aaa
sbb
lret
add
push
adc
xlat
in
mov
xchg
je
cmpsl
es
xor
adc
mov
pop
jbe
scas
sbb
js
mov
xor
sbb
mov
and
push
adc
clc
mov
xchg
stos
and
rcrb
jmp
je
add
iret
rcrb
sub
xchg
pop
cmc
test
sub
push
push
jae
cmpsb
or
and
insb
xchg
xor
xor
jae
or
sahf
xor
je
jbe
mov
data16
xchg
jns
pop
xor
dec
add
push
sub
xor
pop
popl
adc
out
pop
pop
pop
shrb
and
test
mov
xchg
stc
jb
sbb
mov
adc
test
mov
xchg
pop
mov
ss
or
lret
jns
mov
sub
scas
or
mov
push
sbb
cmpsl
push
push
add
cmp
mov
lods
popa
je
sahf
xchg
shlb
push
icebp
test
loope
pop
xor
les
sub
cwtl
fwait
mov
xor
iret
mov
ret
imul
stos
pusha
ss
les
loopne
stos
lods
adc
test
jnp
imul
push
daa
scas
int
mov
je
cmpsb
cmc
stc
into
xor
push
and
sbb
adc
stc
in
sbb
pop
aas
add
out
je
ja
pop
mov
test
out
pushf
notb
xchg
hlt
mov
cli
dec
add
jecxz
push
mov
sbb
cmp
mov
loop
jmp
sbb
xor
pop
jae
xor
xchg
pop
inc
cld
jge
add
popf
sahf
scas
dec
jle
mov
push
lods
enter
and
fiadds
mov
dec
mov
jne
stos
and
and
jne
adc
cmp
push
pop
push
sub
mov
push
inc
push
inc
push
lret
ljmp
adc
and
pop
stos
les
inc
adc
leave
sub
inc
loop
aad
sub
lods
mov
mov
stos
mov
jecxz
mov
or
mov
je
sbb
js
mov
int3
mov
loopne
cmp
push
lods
or
leave
cld
pop
outsl
push
and
xchg
rcrl
cmpsb
rcrl
pusha
jae
sbb
push
fwait
adc
add
cld
xor
insb
sbb
frstor
adc
push
aam
xchg
lds
cmp
adc
cmc
xchg
bndstx
push
js
stc
jne
inc
loopne
sbb
mov
push
mov
mov
sti
repnz
sbb
out
pop
cmp
xor
test
mov
sbb
push
mov
mov
pop
fstp
jno
xor
sahf
dec
xchg
sbb
sbb
aam
rcll
or
inc
fidivs
insl
leave
xor
pop
sub
xchg
pop
ja
cs
or
jbe
fiadds
sbb
scas
jns
dec
dec
icebp
and
clc
js
cwtl
jns
lahf
cmp
cmp
and
popa
dec
push
roll
mov
sbb
in
shlb
xchg
inc
push
xchg
xchg
leave
pop
clc
push
mov
sub
mov
pop
sbb
mov
out
lock
add
shrb
pop
scas
sbb
and
inc
xchg
je
mov
mov
dec
dec
pusha
jae
int
jecxz
repz
cs
add
scas
sub
sub
mov
jp
stc
push
xor
out
mov
scas
dec
hlt
dec
jae
and
out
mov
pop
bound
in
fwait
std
lock
aad
sub
sub
push
inc
insb
outsb
inc
jle
jmp
or
add
enter
mov
daa
addr16
mov
fs
xor
out
mov
les
push
sub
mov
push
xor
dec
mov
mov
and
sub
sti
das
popa
push
das
les
loopne
inc
mov
mov
and
ficoms
aad
aas
mov
sbb
mov
and
lock
cs
sbb
jns
loopne
pop
jne
jle
insb
dec
js
insb
adc
sub
mov
pop
mov
mov
add
and
push
or
test
test
jmp
fs
mov
jae
decb
jmp
out
jbe
mov
js
inc
mov
dec
push
psllq
sahf
outsb
call
into
into
pop
jae
mov
icebp
leave
xchg
push
fptan
in
test
rcr
scas
roll
test
in
adc
sahf
sbb
push
sahf
pop
lcall
mov
pop
push
add
icebp
mov
xor
push
or
mov
adc
out
jne
andl
cmc
sub
push
imul
popa
add
in
test
outsb
inc
clc
lods
cmp
fistpl
sub
sbb
jne
jbe
cmc
shlb
mov
fidivs
cli
stos
pop
and
in
loopne
stc
repz
adc
xchg
bound
jno
fdivs
cmp
dec
gs
adc
inc
jl
sbb
cwtl
movsb
cld
xor
in
mov
das
xor
mov
and
add
adc
and
push
mov
cmc
push
mov
xor
repnz
scas
sahf
insb
pusha
xor
jb
cmp
adc
lcall
mov
lret
gs
out
dec
shll
xorb
fadds
mov
rorb
push
movb
cmp
scas
movsb
rcll
daa
or
mov
inc
mov
stos
es
push
mov
mov
xor
mov
push
shlb
adc
ja
and
add
cld
sahf
xor
xchg
ds
or
test
adc
jne
mov
neg
test
imul
xchg
xor
jo
xor
jge
inc
add
stos
pop
jge
adc
pushf
mov
mov
mov
mov
clc
sub
jo
ds
stos
aas
dec
xchg
push
push
lret
scas
adc
lahf
jmp
js
lcall
pop
ja
jae
test
cmpsb
push
in
mov
mov
mov
repz
popa
add
repz
and
cs
mov
xor
cmp
ds
lret
jo
les
pop
jg
adc
xor
xchg
add
call
test
ficompl
call
shl
xchg
lea
sbb
popf
ret
push
jecxz
lea
pop
out
cltd
and
xchg
movsb
mov
sbb
sahf
fnstcw
jb
fdivrs
test
mov
mov
sub
nop
je
xchg
stos
js
test
pmaddwd
xchg
adc
ficomps
or
imul
pop
adc
arpl
sub
lret
data16
lods
xor
pop
popf
popa
mov
add
imul
adc
insl
adc
fwait
movsb
xor
repnz
cwtl
js
mov
mov
out
mov
xor
fwait
pop
jmp
push
popa
adc
pushl
mov
sahf
loopne
js
xor
fidivs
imul
dec
dec
pop
sbb
fdivrs
mov
push
pushf
and
movsl
lods
adc
aam
jmp
and
add
fisubs
xlat
adc
out
movsl
shr
imull
xor
jle
jb
jb
es
adc
xlat
sahf
jns
in
es
scas
data16
mov
mov
mov
mov
lods
lcall
mov
int
sbb
ljmp
lods
or
loop
nop
es
lods
nop
and
mov
je
mov
js
mov
test
push
or
xorps
rcl
lcall
pusha
cld
adc
ds
push
dec
cmpsl
fs
adc
es
je
xchg
lock
xor
xor
adc
aam
xor
jmp
mov
je
ss
push
in
mov
sbb
ss
repnz
leave
shll
sub
and
pop
xchg
jecxz
xchg
lahf
xor
andl
inc
rcrl
hlt
ret
mov
cmpsl
dec
out
mov
repz
cmpsb
pop
sub
mov
and
adc
inc
mov
mov
pusha
xorb
adc
jnp
insb
movsl
mov
mov
inc
push
xor
rclb
xchg
push
inc
pop
ja
clc
dec
xor
push
xor
ja
pop
movsb
fistpll
jae
ljmp
cmp
cmp
mov
divl
pop
xor
jle
imul
adc
in
push
cld
cmc
sub
fdivs
test
pop
dec
leave
and
dec
push
lods
jno
cmc
aad
ret
out
push
aad
adc
sub
outsb
sub
jle,pn
test
je
pop
int3
push
sub
fcomi
enter
pop
outsb
out
leave
inc
fwait
stos
sub
test
rorl
in
add
insl
mov
push
loopne
push
sbb
out
and
pop
adc
sub
fnstcw
dec
rorl
pop
mov
mov
cmp
movsl
flds
jmp
fwait
jo
jno
mov
shll
into
shll
pop
repz
cwtl
aas
mov
jns
jbe
mulb
jae
lahf
inc
xor
loope
out
or
in
loope
adc
movsl
mov
repz
lret
adc
sub
pop
insb
xor
mov
and
mov
loopew
jle
mov
movsb
gs
lahf
xlat
mov
mov
dec
mov
push
fdivs
sahf
mov
outsl
testl
popa
mov
iret
sahf
int3
sbb
and
jae
push
out
mov
cwtl
xchg
mov
std
mov
scas
sub
xchg
mov
subl
push
fwait
insl
test
in
jo
push
imul
lock
mov
inc
jge
mov
xor
xchg
in
jmp
adc
pop
jl
adc
mov
dec
loope
adc
cmp
inc
xor
mov
inc
je
xchg
scas
adc
es
or
es
outsb
nop
ret
cmpsb
sub
lock
cmc
pushf
adc
repz
adc
jne
jne
mov
int
and
push
es
sbb
les
xchg
sti
dec
dec
mov
lret
and
gs
mov
ret
movsb
add
mov
cmpsb
pop
push
popl
insb
cmp
push
das
movsb
outsl
jno
mov
or
adc
mov
cmp
es
and
sahf
out
aas
loop
cmp
es
cwtl
adc
jno
js
iret
push
add
aad
xchg
outsb
int3
lea
ljmp
jno
lret
lret
scas
adc
xor
cwtl
and
jno
rcrl
jmp
push
movaps
jns
adc
pop
js
clc
es
repz
jns
xchg
mov
test
out
fcomps
push
dec
sub
mov
mov
aad
mov
orb
jb
mov
jp
jne
es
dec
hlt
mov
xor
mov
xor
xchg
push
decl
push
or
jle
mov
cmpsl
pmulhuw
aaa
das
ret
mov
cmp
xor
xchg
push
out
and
ficoml
jae
mov
adc
dec
push
mov
xor
push
imul
xchg
test
int3
lock
lret
pop
rclb
leave
push
cli
clc
adc
fs
cmp
adc
lds
mov
mov
sahf
dec
adc
jne
dec
mov
mov
xor
cmp
add
sahf
je
cli
add
xorb
sub
pop
mov
mov
rol
test
mov
mov
aad
pop
mov
arpl
imul
or
int3
sub
cwtl
mov
mov
push
xor
int
cmp
mov
jns
jns
cmp
insb
jae
int3
test
sub
and
jbe
xchg
mov
push
es
inc
aam
jbe
xor
loope
add
lahf
std
dec
push
push
sahf
mov
cmpsl
or
push
dec
and
inc
mov
sbbb
xor
shlb
sbb
pop
xchg
sub
jae
jb
push
xchg
lahf
dec
sub
scas
js
or
test
push
or
inc
sbb
jge
xchg
xor
adc
or
icebp
and
int
jg
xacquire
outsb
and
adc
mov
in
mov
jne
test
mov
hlt
rcrb
mov
xorl
rolb
imul
cs
or
scas
jbe
std
adc
popa
xor
arpl
xchg
cmpsb
scas
mov
fildll
inc
mov
jae
add
int
decb
push
iret
bnd
jmp
mov
mov
in
xchg
mov
in
mov
push
fistpll
in
lahf
popa
cmpsb
xchg
sub
imul
aas
mov
mov
ja
fistpl
hlt
pop
pop
xor
jns
movsb
lds
mov
jb
icebp
jb
jb
icebp
xor
sbb
and
or
insb
push
clc
movsb
dec
jp
cmpsb
dec
out
fistpl
cmpsl
mov
push
jnp
jne
jns
std
pop
mov
push
jae
inc
adc
scas
es
dec
jmp
lcall
adc
sarb
jp
es
in
jo
push
sub
mov
in
cmpsl
jne
clc
adc
push
mov
out
es
fs
out
cmp
lds
cltd
push
fsubrs
js
call
stos
sub
pop
jb
xchg
sbb
push
js
or
gs
and
ds
movsl
lea
inc
mov
test
or
out
mov
out
add
jo
pop
test
sbbb
sbb
push
mov
in
sub
adc
sbb
jae
and
dec
mov
dec
leave
cmpsb
lods
mov
cs
mov
cmp
iret
sub
add
in
xchg
fsubl
cmp
insb
mov
adc
mov
aad
cld
ljmp
ljmp
xor
nop
sbb
popa
mov
xchg
xorl
pusha
mov
js
xor
xor
sub
fstpl
cmp
mov
push
xor
mov
jb
push
xchg
add
cmp
jae
pop
mov
sub
and
mov
and
daa
mov
jg
and
popa
pop
mov
and
idivb
mov
mov
dec
insl
nop
cltd
js
movsb
xchg
xor
stos
jecxz
adc
lcall
or
mov
push
aad
mov
mov
imul
ljmp
int
lods
lods
lods
call
mov
pusha
pushf
shl
mov
int
inc
mov
mov
xchg
sti
loop
aad
adc
stc
inc
or
nop
pop
mov
add
in
mov
pop
aam
add
repz
xchg
mov
lahf
test
add
lods
dec
pop
and
aam
sti
enter
and
mov
cmc
ret
aad
jnp
mov
test
adc
inc
add
stc
aad
pushf
adc
sahf
je
cmp
xchg
pop
lret
inc
jns
xor
daa
or
sbb
clc
mov
adc
mov
inc
aad
loope
js
rcrb
mov
sbb
sbb
fldl
jo
inc
inc
xlat
dec
inc
xor
cwtl
inc
je
push
push
xchg
dec
popa
aas
nop
mov
ret
jb
outsb
subb
cmc
push
mov
ss
mov
aam
aaa
cmp
xor
adc
jae
in
mov
daa
push
pusha
adc
dec
mov
lahf
xor
pop
mov
cmc
jno
dec
inc
mov
in
adc
outsb
mov
jno
pop
push
xchg
or
das
jae
ficomps
push
movsb
inc
sbbb
fabs
cltd
fistl
pop
push
fstl
pop
dec
outsb
fs
mov
cld
push
shll
push
jle
repnz
popa
call
jmp
pop
push
fnstcw
push
sti
or
imul
mov
icebp
push
jb
push
or
pop
jb
fmuls
push
popa
jp
and
pop
dec
adc
addr16
pop
popa
cmp
mov
xchg
push
sarl
mov
sbb
mov
jge
imul
outsl
pusha
mov
cmc
xchg
jmp
cs
sarl
adc
xchg
sbb
std
lock
aam
sub
mov
dec
aam
imul
ljmp
cmp
bound
fidivl
pop
test
nop
xchg
sbb
pop
sbb
pop
mov
mov
xchg
adc
mov
and
sub
sahf
test
adc
mov
insl
mov
and
insb
incb
repz
daa
jbe
or
jmp
inc
sub
inc
cmc
xchg
es
dec
lea
sahf
je
testl
je
push
push
std
sub
std
stos
scas
clc
mov
xchg
sub
shll
nop
and
sarb
std
xor
clc
stos
add
and
xchg
mulb
jno
nop
dec
negb
add
shlb
push
add
std
movsl
or
cmc
outsb
mov
cmpsb
mov
iret
movsl
and
daa
test
ss
syscall
inc
es
and
std
icebp
stc
repz
in
push
add
idiv
adc
push
add
xchg
icebp
mov
xor
sti
js
adc
xor
jnp
repnz
nop
lods
aaa
adc
mov
leave
jnp
push
sbb
or
mov
jae
pop
sbb
icebp
cmp
jne
fwait
push
cmp
mov
or
lahf
push
mov
cmp
and
fldl
lods
mov
push
adc
push
mov
sub
adc
or
xchg
mov
sub
out
inc
lods
pushf
sub
xor
je
sub
les
ss
dec
lods
test
sbb
cwtl
std
mov
xor
shl
mov
daa
arpl
js
xor
and
push
xchg
xor
xor
mov
insl
add
mov
sub
xor
and
nop
insb
adc
cmc
mov
push
lods
stos
negb
mov
test
xchg
xor
mov
sahf
mov
mov
mov
inc
andl
pop
or
daa
into
leave
push
in
adc
gs
jne
inc
pop
dec
fmuls
xor
idivb
iret
or
stc
adc
out
push
add
mov
iret
inc
mov
push
insl
mov
daa
add
adcb
rcll
push
mov
push
jne
dec
es
pop
push
fildll
mov
pop
push
push
fildll
sub
pop
es
pandn
fildl
add
leave
sub
cld
jmp
adc
cld
jne
es
jo
out
dec
adc
stos
inc
push
testb
pop
mov
stos
test
out
fs
push
out
xchg
fisttpl
xor
divl
idiv
and
jo
loope
inc
or
leave
push
mov
add
mov
adc
jno
push
xorb
les
jg
inc
xlat
xor
jg
js
jg
xor
sbb
inc
jae
mov
xchg
filds
xor
xchg
std
stc
dec
stc
mov
xchg
xchg
mov
std
rcl
or
fldt
xchg
mov
mov
xchg
std
and
lock
sarb
nop
je
xchg
shlb
popa
sub
mov
xchg
std
daa
pop
xor
nop
and
int3
daa
mov
rorb
xor
xor
mov
lahf
mov
xor
lahf
leave
cmp
sub
imul
test
in
cwtl
movsb
inc
jne
std
xor
test
inc
in
mov
pop
mov
mov
push
xor
les
pop
dec
pop
lcall
adc
scas
leave
sub
scas
push
mov
push
int3
jne
es
jg
mov
aam
pop
negb
mov
rorl
sub
inc
adc
aas
loope
push
aam
int
aas
cmc
fistps
aas
sub
aas
sti
jo
dec
and
loop
xchg
inc
es
in
jae
aas
test
cmp
sti
jge
pop
push
mov
sub
enter
push
int3
lock
mov
inc
add
mov
test
clc
fisubs
mov
popa
popf
mov
out
or
insb
mov
out
pop
pop
mov
into
push
mov
mov
test
mov
cmp
mov
les
xor
push
dec
movsl
mov
jge
or
daa
es
fadds
and
dec
adc
mov
shl
push
sub
push
int3
cmp
loopne
dec
out
fs
mov
push
inc
movsl
in
arpl
xchg
adc
push
xchg
xor
repz
mov
push
mov
add
xchg
stos
pushf
dec
xchg
adc
test
ja
outsb
iret
fsqrt
xor
sbb
jp
inc
dec
pop
nop
cmc
inc
lret
ds
pop
inc
or
inc
sbb
inc
dec
sub
adc
fdivrl
xor
dec
enter
push
nop
xor
mov
xor
cld
push
es
jmp
mov
popf
jp
mov
js
or
add
push
mov
lods
push
pop
in
test
jg
xor
dec
popf
fimull
lret
iret
in
in
ljmp
push
jge
clc
je
insb
jae
jl
rcl
xchg
mov
nop
iret
pop
sbb
test
jae
jl
or
xor
sbb
rcpps
sahf
mov
dec
test
inc
out
movsl
jg
xor
mov
mov
pushf
jge
add
xor
and
xor
and
mov
test
push
lahf
and
dec
std
and
sbb
divb
test
pop
lds
xchg
outsl
mov
mov
mov
pop
int3
mov
jae
dec
cli
icebp
xchg
sub
mov
ljmp
in
xor
outsl
adc
pop
sbb
in
and
mov
jae
push
nop
imul
pop
push
pop
or
outsl
fs
jbe
and
push
lock
or
mov
stos
push
pusha
mov
fidivs
insb
std
mov
push
push
adc
adc
sub
or
mov
mov
adc
ja
adc
pop
xchg
xchg
les
mov
pop
mov
lahf
pop
and
rcll
pusha
cmp
js
push
or
sub
cmp
fbstp
lahf
ss
push
and
mov
jno
imulb
pop
cltd
loopne
mov
bsf
add
push
movsl
adc
lods
call
cwtl
fnsave
data16
mov
jmp
imul
push
jae
js
inc
dec
xor
dec
movsl
adc
push
out
xorb
jae
lods
lret
scas
cmp
dec
cld
out
or
cltd
or
test
fwait
je
imul
test
call
mov
sub
pushf
push
sub
bound
cmp
mov
popf
pop
mov
push
stos
sbb
dec
arpl
ljmp
pop
add
and
daa
addr16
enter
inc
mov
shrl
sbb
divb
pop
shl
push
mov
dec
and
cld
jb
daa
ss
sbb
xchg
and
pop
and
sahf
into
and
lea
mov
adc
cmpsl
scas
sbb
cmp
or
xchg
xchg
clc
xor
es
rcl
stos
punpckhbw
and
mov
pop
adc
loope
or
mov
inc
push
jne
dec
adc
test
movsl
mov
insb
adc
pop
push
inc
push
cmpsb
adc
cmp
scas
pop
js
enter
mov
mov
in
stos
mov
hlt
cmpsb
sbb
xchg
js
cmc
pop
xchg
sbb
jns
mov
mov
inc
mov
sbb
push
and
mov
inc
daa
mov
aam
inc
pop
ss
data16
jae
dec
fcoml
adc
pop
mov
pop
pusha
outsb
daa
push
ret
out
aad
xor
ja
test
scas
stc
and
rcrb
out
adc
pop
icebp
loope
enter
rcll
loop
or
rcrl
sbb
shrb
sub
sbb
call
test
sbb
js
outsl
cmp
jae
jbe
scas
push
iret
sub
mov
and
push
movsl
rcrl
inc
movsl
jnp
fnstcw
repz
mov
int
sti
repz
inc
fnstenv
and
xchg
fsubrs
inc
push
mov
sub
das
pusha
mov
fsubs
add
push
inc
mov
icebp
shr
pop
sub
push
je
das
fmull
lock
ficompl
test
shlb
xor
jae
dec
add
pop
lods
jne
jle
out
cmp
das
jecxz
stc
pop
pop
push
jmp
aaa
cmpsl
in
xchg
or
outsl
pop
test
mov
sarl
lcall
or
outsl
icebp
out
jbe
and
or
jno
inc
sub
pusha
sub
cmpsb
mov
xor
enter
jge
xchg
mov
aaa
inc
adc
mov
sbb
jnp
or
aaa
cmp
xor
mov
or
ret
push
shll
xchg
mov
sub
add
shlb
inc
mov
mov
cmp
mov
mov
xchg
push
xchg
jg
xchg
pop
into
mov
fcoms
jp
jno
pop
lea
sub
scas
or
fwait
and
adc
xchg
sbb
mov
leave
imul
xchg
pop
dec
push
push
sub
xchg
in
out
in
mov
and
dec
cmpsb
jge
lock
adc
jge
mov
push
fisubrl
pushf
sbb
cmp
je
insl
divb
clc
std
mov
stos
into
adc
adc
add
xor
frstor
mov
stos
cmc
cwtl
aad
ret
into
adc
mov
sub
xchg
inc
xchg
test
cli
std
add
rcrl
push
cmpsl
mov
scas
je
es
icebp
adc
fimull
xor
rcll
inc
ljmp
mov
xor
push
repz
xchg
mov
inc
cmp
mov
or
cmp
jl
insb
add
push
push
faddp
push
ret
pop
call
fwait
cwtd
clc
jecxz
imul
mov
icebp
jae
fisubrs
inc
popf
push
xchg
insl
lods
mov
mov
or
mov
push
fdivs
pop
repz
dec
xchg
ljmp
insb
xchg
xor
adc
jno
dec
out
and
xor
dec
insb
test
emms
jo
in
jl
cli
push
pop
mov
cmp
aaa
lds
cltd
xlat
mov
dec
int
out
pop
out
js
aam
js
mov
fcoms
sarl
inc
mov
ds
loopne
mov
lret
shrl
mov
pop
jns
mov
aam
lock
icebp
add
loopne
in
imul
and
les
mov
or
xor
in
mov
dec
lods
and
sub
popa
sahf
fnstenv
adc
pop
out
inc
sti
mov
test
inc
frstor
cmpsl
push
push
stos
in
loopne
enter
cmpsl
dec
xlat
insb
das
testb
pop
in
xlat
cmp
std
je
les
pop
sub
and
sub
mov
fld
cmp
mov
xor
out
sbb
mov
loopne
fsubrs
and
int3
fstps
call
xchg
jns
sub
mov
xchg
jbe
sbb
cmp
arpl
cmpsl
adc
sub
dec
scas
or
xor
pop
cmp
xchg
and
push
stc
cwtl
repnz
movl
cmp
dec
rcll
ja
psadbw
adc
fscale
dec
mov
mov
jb
out
fsts
lock
jb
cmpsl
lods
cwtl
jno
ficoml
addb
stc
push
es
mov
mov
cmp
jecxz
mov
jno
test
in
xchg
loop
push
bound
pop
mov
xchg
xchg
add
push
hlt
addr16
mov
jae
inc
mov
dec
call
js
xchg
sub
sbb
sar
arpl
insl
push
sbb
movsl
jns
sbb
or
jbe
pop
out
bound
jb
mov
fildll
out
add
xor
push
pop
push
jbe
and
mov
pop
js
repz
fwait
cbtw
sbb
or
clc
fs
sahf
add
out
cmp
xchg
fcomp
mov
xor
stos
cwtl
push
fstl
mov
repz
jno
sahf
mov
pusha
add
push
test
jle
dec
push
and
mov
cmp
test
adc
xchg
clc
push
xor
fiadds
inc
sahf
popa
xor
add
aad
xor
scas
gs
repz
sbb
push
sbb
sub
xchg
and
xchg
sub
vcmpss
xchg
out
dec
push
pop
shll
xlat
adc
inc
xchg
mov
dec
jecxz
je
movsb
push
jge
adc
sbb
test
ds
iret
mov
adc
pushf
mov
and
adc
jmp
clc
sbb
shlb
insb
cwtl
subl
or
xor
cmp
aas
pop
cmc
sub
xor
and
lock
cmp
lods
xchg
xchg
push
lcall
clc
scas
mov
in
mov
fsubs
xlat
mov
int3
pop
loope
inc
int3
mov
popa
and
iret
popf
cmp
icebp
rcr
bound
mov
mov
or
mov
movsb
sub
cmc
push
xlat
mov
cmc
inc
or
push
jae
loopne
inc
jmp
cld
adc
ds
es
js
cli
ds
out
mov
cmpsb
shlb
lock
shll
push
mov
test
or
adc
xor
cmc
stos
xchg
sbb
sub
sbb
ds
xchg
pop
imul
mov
push
ds
cmc
cmp
fsubs
xchg
repnz
ds
dec
xrelease
rolb
ds
inc
dec
pop
aam
inc
cmp
stos
pop
mov
inc
cmpsl
pusha
push
xor
inc
scas
lahf
sahf
cmp
rorb
out
daa
fwait
pop
xlat
popa
ret
imul
repz
insl
das
pushf
mov
push
adc
bound
adc
out
xor
imul
and
or
ljmp
js
dec
scas
repz
mov
cmp
push
adc
stos
pop
cwtl
jl
rorl
loope
xlat
mov
lret
pop
jmp
test
out
mov
dec
lods
pop
dec
xlat
ds
sbb
cmp
ljmp
xchg
sub
add
scas
xor
test
mov
and
mov
lahf
or
sbb
rcr
movsb
repz
and
jae
pop
clc
inc
mov
je
push
scas
outsb
rcll
pop
push
dec
xor
ret
into
mov
jns
sbb
inc
out
xchg
inc
sbb
adc
push
cltd
in
dec
sahf
fld
adc
sbb
mull
pop
test
mov
cltd
mov
pop
push
popf
loopne
cmpsb
in
rclb
ds
shr
outsl
pop
dec
mov
xlat
cmp
pop
cmpsl
xchg
dec
scas
sbb
and
pop
cwtl
sti
xchg
sbb
push
cmp
out
lods
pop
jo
bound
arpl
mov
xor
aad
pop
pop
out
adc
jae
imull
scas
mov
icebp
ret
dec
jno
or
imul
push
pusha
pop
addb
mov
loopne
imul
andb
inc
jnp
xchg
mov
mov
push
data16
fldt
in
pop
push
es
or
out
sub
imul
out
ret
data16
repz
mov
pop
inc
or
xor
and
out
andb
outsb
mov
adc
std
daa
outsb
mov
lds
inc
outsb
jge
outsb
aad
mov
mov
cmp
cmp
xor
in
std
cmc
cmpsb
inc
sub
lea
cwtl
std
xchg
push
and
aam
out
or
jl
add
lahf
or
dec
cmp
pushf
mov
call
int3
jge
or
ss
xchg
fwait
nop
adc
inc
dec
fldcw
popf
cwtl
jmp
adc
jns
jl
ficomps
in
popa
adc
stos
dec
jge
movsb
dec
cmp
cli
lock
pop
pop
in
dec
add
call
jae
jle
sahf
scas
jmp
jmp
push
fs
pop
sbb
adc
jne
sbb
add
cmp
pop
jb
es
push
mov
inc
mov
popf
mov
jae
je
stc
and
mov
sbb
xchg
push
mov
test
and
mov
shlb
cwtl
nop
lods
pop
xor
push
xlat
test
xor
pop
cmc
mov
enterw
in
aam
clc
and
fcoms
cmpsb
orb
jp
jle
cmpsb
dec
cltd
lods
fnstcw
cld
stos
shrb
jb
xchg
xor
adc
insl
jne
push
aad
shlb
inc
ret
outsl
jle
jne
mov
sbb
dec
jg
test
ds
mov
mov
pusha
mov
push
fcom
or
dec
call
inc
xor
stos
or
jb
scas
xchg
inc
xor
stos
adc
jb
cmpsb
rcrl
pop
stos
rcll
push
enter
out
mov
mov
dec
jmp
dec
cwtl
push
out
jg
xchg
jns
adc
push
bound
xchg
fs
divb
dec
xchg
rorb
xor
xchg
cs
cltd
pavgb
das
sbb
fcmovu
insb
push
push
xchg
test
call
dec
aad
xchg
fdivrs
pop
dec
mov
dec
jae
movsl
jns
shlb
es
cmovb
dec
sti
and
inc
fwait
dec
mov
jns
mov
jl
mov
adcl
incb
mov
add
inc
cld
xchg
push
dec
xchg
adc
mov
test
push
jns
sub
int
dec
pop
out
xor
inc
cmp
jo
xchg
mov
jae
cltd
dec
test
xor
aaa
imul
das
stos
push
mov
adc
push
cmpsl
rcll
out
xchg
stc
inc
cmp
js
pop
es
ja,pn
testb
bound
popa
insb
cwtl
enter
test
and
mov
dec
jb
shrb
loopne
add
movsb
inc
in
dec
mov
or
daa
shld
ss
data16
mov
jb
cmp
test
cmp
xor
and
mul
xchg
lahf
out
ja
dec
aas
fwait
mov
mov
adc
mov
mov
push
xchg
add
or
mov
xchg
cmp
mov
cmp
adc
idivl
or
sbb
popf
inc
lret
lret
mov
shlb
xchg
fstpt
or
rcl
stos
jl
adcl
flds
pop
arpl
in
adc
inc
jmp
add
add
jge
dec
mov
in
jl
enter
jbe
sub
push
pop
loop
pop
or
cltd
jns
adc
xchg
out
test
adc
push
sub
jns
pop
pop
fistpl
xchg
imul
je
leave
ja
mov
cmp
clc
adc
mov
jp
pushf
cmp
shr
addr16
or
sub
jae
leave
pushf
or
test
and
js
lock
jns
ds
jp
imul
lods
mov
in
aad
sub
orl
push
sub
cmc
mov
arpl
lret
xor
mov
pop
lods
fadds
mov
pop
push
rcrl
jno
mov
ficoml
pop
clc
push
add
xor
scas
or
imul
sbb
and
xchg
and
pushl
int
mov
mov
and
lods
sahf
inc
stos
cwtl
sarl
cli
pop
cmp
pop
lahf
sti
xorb
and
or
icebp
push
add
jno
test
pop
sub
in
or
rolb
or
stc
jo
data16
jnp
fwait
add
sub
cmp
daa
mov
scas
clc
imul
sbb
outsb
int3
sub
bound
xor
cmc
loopne
jae
loope
sahf
stos
jno
fidivs
jmp
lret
and
shlb
xchg
adc
fadds
insb
cmp
and
mov
jmp
fs
mov
inc
dec
cwtl
loope
xchg
es
mov
test
cmp
mov
inc
das
sub
dec
aad
rcll
mov
int
movsl
repz
call
cmpsl
mov
lahf
lock
sub
ljmp
leave
sbb
icebp
mov
pop
adc
jno
jo
inc
sub
or
orl
sub
insb
inc
mov
mov
stc
inc
call
push
and
pop
push
inc
scas
je
popa
xor
xchg
jnp
popa
adc
repz
or
cmpb
push
aad
pop
out
xchg
mov
data16
js
push
push
sar
iret
mov
fistpl
push
outsl
dec
xchg
push
cmc
je
jae
or
leave
or
adc
push
sub
mov
addl
cltd
cltd
push
sub
add
test
fdivrs
into
sub
mov
dec
mov
adc
and
insl
inc
mov
mov
insl
or
jge
call
dec
or
fisubrs
imul
mov
adc
ja
push
mov
jno
push
daa
loop
adc
outsl
out
mov
pop
jno
aaa
and
cmp
jae
mov
add
and
cmp
push
andb
xchg
mov
daa
xchg
loope
ret
loop
push
int
fs
sub
xor
xchg
lods
dec
js
pop
pop
cmp
inc
pop
iret
hlt
dec
movsb
fs
sarl
out
in
or
mov
push
rcll
in
mov
dec
pop
mov
pusha
mov
orb
inc
jb
out
mov
and
inc
repz
xchg
imul
add
and
sahf
paddq
xor
cmp
pop
cltd
fcom
mov
push
es
xor
lret
into
rorb
xchg
sbb
das
mov
repnz
cmp
lcall
xchg
push
fldcw
push
inc
test
mov
adc
addr16
or
repnz
inc
mov
fs
jno
mov
inc
mov
or
jge
test
mov
insb
mov
jnp
xchg
cmp
mov
iret
pop
mov
mov
dec
fisubrs
push
aad
mov
repz
out
arpl
add
push
xor
loopne
push
xchg
dec
mov
and
pop
and
aaa
push
inc
pusha
je
jecxz
xchg
sub
cmp
inc
push
notl
dec
xchg
mov
mov
pushf
lods
and
mov
adc
adc
outsb
insl
cltd
fsubr
xchg
xchg
iret
adc
in
insb
outsb
or
push
dec
mov
mov
push
cltd
orl
dec
and
mov
repz
fs
adc
push
scas
push
fsubrl
out
test
xlat
gs
inc
adc
xchg
jne
adc
and
mov
pop
and
subl
adc
mov
push
mov
adc
mov
push
add
adc
xor
adc
rol
pop
lret
adc
fsubrs
pop
xchg
pusha
repnz
nop
xchg
pop
mov
or
dec
inc
fwait
insl
push
fcmovne
icebp
fcomip
test
int
cmp
inc
or
jae
cmp
jmp
sbb
int
fs
mov
test
xchg
lods
notl
and
dec
sbb
cmp
adc
inc
outsl
or
push
dec
je
and
adc
jae
mov
mov
setb
xor
xchg
mov
cs
icebp
insl
stc
decl
scas
sbb
xor
jo
dec
mov
jl,pt
faddl
stos
cs
xchg
clc
cmp
mov
shll
cmp
scas
mov
pop
jae
push
mov
call
fsubl
pop
popf
dec
dec
xchg
int
hlt
es
jbe
jmp
pushf
or
jae
push
ficompl
sar
xchg
xchg
cmp
daa
sahf
add
jno
js
arpl
pop
pop
call
movsb
rcrl
sarb
xchg
and
scas
lods
js
pop
adc
sti
aas
in
adc
pop
stc
popa
in
mov
mov
clc
add
in
outsb
js
jae
lahf
cmp
xorl
iret
rcll
jne
xor
pop
jl
call
shll
sbb
cli
cmpsl
mov
pop
std
js
mov
popa
or
ja
sub
jl
mov
xor
adc
xlat
and
xchg
testl
and
ljmp
cli
and
fnstenv
repz
pop
sbb
jo
imul
dec
insb
loopne
popl
or
insl
adc
loope
dec
test
out
xor
out
adc
push
push
sbb
sub
out
test
mov
lahf
fisubrl
xor
xor
js
jno
xor
adc
jae
xchg
mov
fiaddl
dec
mov
mov
cmpsl
mov
push
and
xchg
jnp
js
jno
es
xchg
mov
mov
lock
jae,pn
jno
sbb
dec
mov
clc
lahf
pusha
pop
jns
leave
scas
in
mov
or
mov
cld
jno
pop
popa
pop
stos
add
paddd
repnz
adc
insb
rsqrtps
movsl
ret
flds
test
jb
pop
fnstcw
mov
fildll
js
sub
test
mov
cmpb
dec
imul
cmc
adc
adc
cmp
xchg
lret
xor
shll
out
or
mov
jae
add
pop
pop
or
mov
popa
test
repz
je
inc
mov
dec
cmp
adc
mov
mov
js
or
mov
loop
add
in
int3
xchg
sbb
roll
popa
testl
pushl
pushf
aas
je
lahf
roll
lret
push
cwtl
sahf
cmpsl
cmp
mov
cmp
fimuls
or
mov
jle
jbe
add
mov
stos
int
insl
xor
or
stos
lret
mov
stc
arpl
pop
adc
adc
push
incl
push
adc
add
js
cmc
mov
mov
ret
inc
idivb
mov
in
imul
fwait
jo
mov
orl
bound
jle
mov
push
pop
xor
and
lock
scas
aam
and
shll
and
je
pop
push
repz
sub
add
dec
mov
and
and
xchg
jl
mov
std
inc
inc
shll
jo
pmaxsw
repz
call
adc
push
sarl
sub
sbb
clc
mov
clc
sub
ds
cmc
adc
sub
jne
mov
ss
nop
stc
outsb
mov
test
clc
repnz
ficoms
orb
aad
clc
out
insb
xorb
push
aad
je
xor
mov
lods
outsb
xor
sub
cltd
test
jno
ljmp
xor
clc
xchg
jl
dec
out
push
xor
ret
mov
rorb
push
mov
xor
daa
push
push
push
adc
dec
clc
sbb
fsubs
adc
clc
leave
xor
push
adc
push
sub
xor
cmp
pop
adc
mov
cmp
inc
cmp
xor
std
je
cmp
cmp
shlb
shr
push
loop
aas
popf
or
cwtl
js
je
insb
pop
shl
add
jnp
scas
pop
out
pusha
je
mov
je
enter
jb
idivl
enter
cmp
and
loop
shll
or
int3
and
push
enter
rcl
add
into
dec
loopne
push
mov
cmp
xchg
cmp
jns
inc
mov
adc
es
test
ljmp
es
test
mov
arpl
cmpw
xlat
and
pop
shlb
sub
ja
push
out
and
in
xchg
popl
adc
or
shrb
inc
pop
xor
fsubs
mov
je
add
shlb
jae
outsb
mov
call
adc
rcr
xor
out
dec
pop
imul
fcomp
adc
repnz
xor
push
div
fmuls
sbb
sub
jge
xor
jne
jae
outsl
mov
xor
pusha
outsl
add
shlb
push
xorb
xor
xor
mov
lahf
mov
inc
fsubl
mov
loopne
inc
pop
pop
mov
jne
pushf
xor
movsl
aam
sub
fs
fimuls
adc
or
mov
jbe
mov
lcall
mov
and
dec
ljmp
sub
loope
mov
mov
cltd
jne
dec
mov
add
sarl
jne
push
call
lods
mov
das
adc
pop
aaa
mov
out
fstps
mov
sbb
pop
pop
ret
add
ss
daa
cwtl
call
test
stos
and
sub
mov
xchg
ja
idivb
fdivrl
int3
js
cmc
gs
rorb
or
adc
lock
mov
loope
pop
mov
mull
xchg
punpcklwd
mov
int3
rcll
addr16
jmp
sbb
dec
push
mov
movsl
or
adc
cmpsl
shrb
stc
xchg
adc
jmp
mull
inc
pushf
cli
and
cmp
imul
inc
clc
cmp
loope
xchg
imul
xorl
cmp
pop
xor
clc
ss
outsl
scas
jp
push
arpl
lret
jns
adc
rcll
gs
xor
push
addb
and
outsb
jg
mov
jge
or
jae
out
sub
mov
jg
push
xchg
cltd
shll
inc
xor
addb
movlps
push
inc
or
cmc
add
jns
shl
iret
cld
bound
sahf
test
mov
mov
in
xchg
out
pop
pop
movsb
pop
lds
int3
fcoms
push
mov
xchg
rcll
es
mov
sbb
jb
movsb
push
inc
inc
test
leave
xchg
mov
xor
push
cwtl
xchg
mov
fldenv
stos
nop
into
call
jmp
mov
stos
rol
add
xchg
test
out
xchg
nop
jnp
mov
and
stos
xchg
mov
sbb
lret
cmp
adc
loope
and
xchg
mov
xchg
mov
test
xchg
outsl
push
enter
sbb
jb
push
xor
data16
cwtl
mov
lods
and
mov
inc
and
cmp
and
iret
stos
mov
dec
jns
jno
add
cwtl
lcall
push
jl
or
fstps
pop
ret
int3
scas
nop
push
mov
je
arpl
xchg
xor
mov
pop
hlt
movb
out
int3
lahf
enter
js
mov
test
sub
inc
jl
push
mov
push
bound
cltd
scas
jne
cmp
lea
loopne
jae
inc
mov
mov
or
push
xor
test
insb
imul
xchg
jl
stos
test
or
outsl
jno
mov
xor
bound
cli
shl
leave
les
fndisi(8087
les
pop
jge
pop
pop
aad
adc
fwait
cmp
repz
xchg
cmc
xchg
mov
adc
rorl
mov
es
jge
cmpsb
orb
ret
or
comiss
push
stos
das
mov
nop
lods
shll
sub
or
sahf
xor
add
or
daa
add
mov
pop
fsubs
adc
lret
mov
lock
inc
mov
cmpsb
call
in
cmpsb
mov
mov
sub
dec
mov
mov
mov
jl
sbb
fnstcw
loop
adc
lods
inc
movsb
shll
and
jp
loope
ss
insb
mov
mov
loope
mov
jecxz
push
es
mov
xchg
push
or
inc
sbb
les
or
inc
std
jb
fmulp
js
sub
int
dec
mov
aas
shll
imul
mov
sub
jbe
iret
sbb
fistl
movsw
jmp
movsl
pop
mov
or
mov
mov
ss
adc
popa
xor
leave
mov
std
mov
shrl
push
pushw
mov
sbb
cwtl
jmp
cmpsl
cmp
sbb
fwait
mov
stos
ret
jmp
fdivrs
cmp
jb
inc
mov
mov
jne
cmp
out
cmp
jecxz
jle
aas
inc
push
lock
mov
orl
mov
pop
inc
pop
stos
scas
sbb
fldcw
stos
dec
sahf
enter
sub
pop
movsl
mov
xchg
xor
out
sbb
pop
insl
or
xchg
sub
bound
enter
int3
dec
fdivs
jbe
add
shr
pop
imul
out
xor
lds
jbe
cmp
dec
out
jecxz
push
cld
mov
mov
loope
repnz
std
mov
cli
rcll
xchg
shll
fstpt
push
ja
pushw
sbb
adc
mov
mov
fstl
push
stos
add
xor
xchg
dec
subl
lods
add
mov
lahf
fidivrs
cmp
insl
adcb
out
mov
hlt
enter
mov
stc
jmp
hlt
loopne
xor
xchg
pushf
scas
xor
call
aam
xor
and
fnstenv
add
stos
stos
gs
xor
frstor
and
out
mov
dec
movsl
pop
out
add
dec
and
xor
and
and
scas
and
add
jno
test
lods
sbb
or
int
addr16
js
xor
fmull
add
adc
or
icebp
jp
mov
movsl
adc
in
movsl
xchg
mov
or
or
xchg
or
mov
xchg
mov
or
push
adc
bound
popa
adc
adc
sub
fistpll
mov
jmp
add
xchg
jmp
pushf
lds
mov
lcall
mov
sub
pop
jl
fistl
lods
sbb
sub
loope
rolb
js
inc
pop
cmc
imul
outsl
aas
mov
rcrl
bound
push
inc
fwait
sub
xor
lds
sbb
aad
pop
int3
ret
imul
imul
insb
push
adc
jb
adc
mov
xor
aad
xor
xchg
mov
ret
xor
jb
xchg
cmp
fucom
nop
cmp
rolb
js
jecxz
out
movsb
mov
loope
nop
fs
fidivrs
fwait
aam
js
xor
jle
jns
lds
scas
outsl
mov
clc
cmpsl
jle
xchg
dec
jmp
mov
ret
loope
rcl
and
xchg
int
cmp
or
jmp
pop
adc
mov
cli
jmp
adc
push
mov
repz
es
sub
cmc
bound
adc
test
call
cmc
push
cmp
ljmp
mov
dec
push
daa
out
jne
and
jnp
sbb
xor
jbe
jb
push
std
adc
sti
xor
mov
out
xorb
mov
sbb
cltd
push
mov
xchg
jge
push
mov
mov
and
sti
xchg
adc
pop
jae
sbb
jae
push
jo
push
push
sbb
das
lds
inc
or
roll
pop
or
stc
and
mov
sub
mov
test
mov
add
push
icebp
lret
cmp
sub
or
in
setl
cmp
fcmovbe
push
repz
dec
jl
add
mov
inc
repnz
cmp
mov
ja
pop
shlb
and
xchg
mov
jle
inc
or
mov
dec
push
orl
loope
es
mov
repnz
sub
dec
mov
shll
in
ret
and
and
dec
pop
cld
scas
test
scas
js
jge
lods
shlb
mov
xchg
cli
hlt
push
les
pop
mov
push
hlt
fidivs
push
sarl
in
pop
clc
jb
add
in
push
lret
movsb
mov
aaa
mov
dec
fcoms
jp
xor
scas
je
adc
xchg
cmpl
jb
adc
test
lock
push
xchg
xchg
xor
fwait
mov
insb
xchg
adc
xchg
sarb
inc
scas
xor
cwtl
popa
ja
add
add
imul
adc
sub
test
mov
sbb
xchg
add
cmc
or
fnstenv
push
rorl
sub
mov
sub
in
mov
scas
lret
shrb
ljmp
jb
mov
ja
mov
jns
cld
mov
fmulp
pop
ret
rcr
mov
adc
data16
sahf
xor
sub
jecxz
aad
push
push
aad
mov
insb
mov
test
cltd
lods
imul
mov
aam
jae
movsl
mov
mov
jnp
sti
mov
mov
daa
add
test
adc
dec
pop
movsl
out
cmp
xchg
stos
push
dec
xlat
inc
cmp
sub
jb
mov
mov
stos
xor
mov
add
movb
cmp
mov
push
dec
mov
stos
xor
subb
cmp
mov
and
and
cltd
fmuls
adc
mov
ss
mov
mov
dec
cmpsl
aam
stc
es
scas
out
sbb
xor
mov
stos
mov
mov
adc
out
jae
xor
push
lret
lods
sbb
nop
push
push
xlat
test
xor
or
sahf
cmp
in
mov
aas
fldenv
divl
pop
enter
xchg
jns
cmp
mov
je
scas
push
push
inc
loope
jns
cmp
lcall
movsl
scas
xor
adc
and
push
stos
ds
testl
popa
push
xor
and
xchg
jb
push
pop
push
xor
jnp
xor
xor
fldenv
insb
fs
xchg
push
idiv
or
xchg
and
je
scas
lahf
enter
push
mov
cmpsl
jne
mov
sbb
xor
daa
xor
aam
js
aaa
daa
xor
cwtl
pushl
ds
jnp,pt
lret
pop
cmpsl
push
cwtl
stos
enter
pop
sub
popl
push
sub
aam
xor
push
sub
push
aad
daa
adc
stos
add
jmp
xor
adc
jae
cltd
cmc
fstpl
cld
mov
sbb
dec
mov
jle
xchg
adc
lods
out
pop
jno
je
add
int3
lahf
stc
push
icebp
cmp
call
stos
pop
lock
cmp
mov
jmp
xor
adc
imul
dec
ljmp
arpl
ljmp
insl
je
adc
jns
push
es
int3
and
outsl
push
and
and
mov
push
and
adc
lods
xor
daa
ljmp
xchg
daa
in
cwtl
push
mov
insl
push
push
daa
in
cwtl
push
je
insb
inc
ret
lea
xchg
leave
xor
lret
aad
xchg
aam
and
nop
pushl
jns
adc
mov
inc
mov
pop
or
pusha
jg
clc
push
sub
mov
xor
outsb
repz
mov
sarl
sub
fwait
addr16
sub
dec
cwtl
call
lcall
jg
mov
cwtl
sub
clc
xor
dec
data16
les
and
mov
push
fdivrs
push
js
xlat
push
push
jns
xor
adc
inc
jb
mov
or
clc
pusha
stos
mov
enter
push
fidivrs
cwtl
jp
sub
pop
jae
inc
ficoms
cmc
mov
pop
fadds
mov
xchg
sub
xchg
pop
pop
lahf
adc
mov
repnz
je
icebp
cld
mov
gs
adc
sbb
ja
xor
lock
sbb
test
pop
sbb
push
or
xlat
jp
or
pop
cmc
cmpsl
cli
push
imull
es
ret
out
imul
pop
fincstp
sub
pop
or
shll
dec
adc
mov
stos
fistpll
push
sarl
cmp
outsl
jle
pushf
sbb
scas
xlat
add
popa
sub
mov
loopne
add
fs
mov
outsl
mov
dec
mov
adc
fldl
mov
ja
mov
mov
lea
or
mov
mov
fldenv
adc
jae
pop
push
xchg
fwait
adc
lahf
aas
setp
rep
push
sbb
push
add
xlat
mov
mov
adc
shlb
aam
cli
push
in
sub
mov
sbb
lods
mov
jae
imul
int
mov
xchg
nop
mov
fsts
jns
push
in
mov
test
test
cmp
inc
push
movsb
xor
cltd
mov
mov
int3
sbbb
mov
mov
fs
dec
es
inc
pop
xor
sub
xor
outsb
lahf
and
loope
mov
cmp
adc
push
sub
dec
pushf
cmc
outsl
jbe
lods
enter
xor
push
jbe
scas
es
lods
sub
xor
dec
inc
inc
popf
lcall
divl
jno
mov
leave
insl
ret
scas
fchs
push
aad
jp
sub
sub
cwtl
enter
lods
ret
test
in
or
imul
test
int
xor
test
add
and
xchg
xor
xchg
sbbb
sub
adc
ss
inc
mov
xchg
subb
jmpw
and
roll
sub
sbb
ss
cmp
push
nop
xor
out
sub
je
ljmp
icebp
lret
leave
repz
push
rcrb
pop
adc
pusha
jp
outsb
push
add
loop
cmpsb
leave
lds
push
out
clc
loopne
jb
js
adc
hlt
xor
insl
pusha
xlat
and
ret
mov
push
rcll
mov
ja
adcl
bnd
pop
mov
xchg
orl
pop
push
ret
mov
jg
scas
fsubrs
daa
sub
and
outsl
sub
stos
lods
pop
insb
aam
add
fcomps
or
xor
js
aam
jmp
pop
sbb
sahf
leave
and
test
sub
mov
adc
push
jl
out
cltd
das
inc
push
mov
int
jecxz
xchg
cmp
rolb
adc
hlt
jno
enter
xchg
mov
dec
mov
mov
int
xchg
subl
stos
add
addr16
decb
pop
fsubr
dec
ror
adc
insb
flds
insl
sets
push
xor
lcall
popa
or
ja
add
sbb
lret
aad
test
jno
xchg
out
imul
dec
xchg
add
or
xchg
aad
scas
js
add
loope
test
popa
mov
mov
adc
daa
lcall
leave
mov
clc
popf
jle
pop
test
push
je
loop
sti
cli
fdivrs
ss
sub
cmpsb
inc
pop
rcrl
cmpsb
sub
jae
jno
xorb
add
out
jbe
pop
repnz
pushw
inc
cmpsb
mov
lcall
popf
sbb
cmpsb
fdivrs
addr16
jae
xchg
inc
jge
mov
outsb
cmp
addr16
addb
aas
imul
mov
cmpsb
mov
mov
fisubs
addr16
mov
sbb
dec
mov
mov
add
dec
repz
xor
mov
int
movsl
sub
sub
lods
shlb
adc
inc
lock
push
xor
mov
filds
add
clc
cmp
inc
cltd
jl
mov
push
xor
mov
insb
push
sbb
cmp
das
lods
xchg
pop
mov
jae
cmc
fmul
out
adc
add
xor
sti
clc
adc
xor
jb
mov
sbb
push
cli
cltd
pusha
mov
mov
xchg
test
pop
shrl
mov
adc
clc
rolb
sub
mov
pushf
cli
scas
xchg
adc
mov
mov
or
sar
imul
xchg
adc
call
jae
mov
mov
mov
dec
push
imul
xchg
pushf
sbb
sbb
jo
test
in
jge
cli
imul
and
je
or
jae
pop
lea
dec
cs
pop
mov
xchg
jl
jmp
fwait
int
out
enter
mov
iret
js
inc
inc
push
mov
jno
pop
test
xor
xlat
lret
add
xchg
pop
cmp
pop
stos
js
mov
clc
stos
mov
push
test
cwtl
push
pusha
xchg
jg
mov
or
stos
mov
push
test
cmp
sbb
adc
jae
mov
jge
aas
shll
je
xchg
mov
xchg
mov
xor
es
shll
jmp
pusha
stos
ljmp
inc
js
lcall
lcall
xchg
pusha
test
mov
loop
inc
idivl
mov
dec
dec
cmp
xor
lea
xchg
cmp
pop
icebp
and
mov
xchg
out
mov
mov
outsl
sub
hlt
pop
cld
clc
mov
mov
ret
xchg
mov
mov
mov
gs
jmp
mov
call
inc
adc
lahf
jmp
mov
pop
aaa
jns
xchg
out
ficomps
adc
pop
mov
dec
push
mov
adcb
add
or
loopne
pop
mov
int3
mov
inc
mov
bound
xor
mov
push
stos
lret
and
aam
es
xor
aas
mov
movsl
or
inc
mov
scas
mov
lock
jmp
cmp
imul
in
jmp
rorb
xor
mov
lock
test
imul
push
bound
jmp
xchg
andb
mov
mov
ss
mov
xor
mov
adc
mov
mov
pop
int
lods
cwtl
mov
fidivrs
pop
es
sbb
mov
xchg
popa
jns
out
push
sbb
and
ret
jb
into
mov
cmpsl
mov
pop
js
inc
mov
xchg
into
xor
test
inc
inc
jp
dec
sarl
test
mov
and
dec
xor
cmp
fsubp
jnp
lds
repz
adc
push
cmp
add
fs
mov
jmp
fstpl
cs
rorb
popf
dec
jmp
or
or
mov
sti
ss
inc
rcpps
sub
push
loop
xchg
dec
jbe
popa
xor
adc
mov
mov
mov
cmpl
icebp
sub
xchg
fisttpl
loopne
cmpsl
jno
pop
aaa
xlat
clc
mov
jge
push
pushl
mov
bound
push
jns
cmp
adc
xor
push
xor
push
xchg
push
or
xchg
clc
fwait
push
ret
jge
jnp
push
xor
repnz
imul
js
push
and
fildll
and
ljmp
fiadds
dec
inc
xacquire
jge
push
pushl
jae
add
sub
mov
adc
mov
pop
jnp
jae,pt
fs
adcb
xchg
jb
ror
lcall
js
js
ret
testl
ret
test
inc
out
loopne
jmp
xor
or
pop
into
xchg
loopne
pop
mov
or
mov
hlt
ret
add
cmpsb
add
and
add
mov
test
adc
shlb
shrl
clc
pop
mov
loopne
xor
or
xor
push
xor
xchg
popa
push
push
ss
imul
pop
and
adc
repnz
mov
push
adc
fwait
sar
mov
jae
sbb
adc
dec
mov
mov
inc
imul
pop
mov
pop
sub
mov
test
int3
stos
jbe
jo
xor
jno
and
or
lods
xchg
pushf
arpl
lods
or
mov
push
mov
cwtl
into
cmp
jae
mov
push
adc
xlat
push
inc
fwait
cmp
jmp
mov
sub
mov
dec
inc
imul
xchg
lock
sub
cs
sub
call
or
sub
aam
cmp
pop
pshufw
test
orb
push
js
out
test
cmc
mov
jae
mov
fcom
cld
leave
sub
in
and
clc
mov
popf
mov
lds
jle
cmpl
mov
int
es
in
stc
into
js
aad
adc
and
std
data16
xor
cmp
dec
pusha
jecxz
aas
fnstsw
jae
lret
loope
mov
fistpll
pop
lret
ret
out
jb
shrb
and
ds
mov
sub
jb
inc
cs
xor
mov
aad
popf
es
jb
mov
mov
inc
inc
js
or
mov
clc
cwtl
movsb
mov
scas
cs
mov
icebp
dec
jp
shrb
pop
lret
jnp
cld
ret
pop
in
push
pop
mov
push
dec
aam
pop
in
or
mov
mov
iret
js
in
mov
in
push
jl
inc
mov
in
push
xor
jecxz
aam
daa
xchg
sbb
jl
or
stos
inc
in
push
adc
jae
jge
push
cmp
mov
sub
test
loopne
push
xor
inc
je
jle
add
and
cmpsl
out
push
cmp
dec
popf
test
add
push
adc
jmp
daa
add
ret
lods
bound
es
push
lret
fnsave
bound
ret
fsubrl
stos
mov
xchg
and
sbb
sbb
jmp
js
jl
fwait
and
clc
nop
insb
lock
xor
std
mov
mov
push
out
sbb
addr16
mov
push
xlat
rcl
dec
inc
cwtl
frstor
and
pusha
cmp
lods
xor
addr16
mov
jecxz
sub
mov
sub
adc
mov
call
mov
ror
nop
aas
pop
mov
pop
imul
imul
pop
pushf
pop
adc
pop
pop
mov
outsb
cmp
and
mov
je
ljmp
mov
insb
fdivrl
mov
mov
mov
sahf
adc
mov
mov
add
adc
mov
pop
pop
and
ret
das
sbb
frstor
enter
sahf
xchg
and
lods
adc
push
push
cmp
mov
pusha
xor
push
cmp
fists
js
lahf
jl
pop
mov
lahf
add
imul
hlt
push
sub
dec
and
je
fiaddl
lahf
jl
nop
cmp
mov
jb
and
pminub
mov
loop
icebp
pusha
je
jp
scas
push
xor
or
and
loopne
in
mov
sub
and
outsb
cmp
or
pop
sbb
jle
out
or
dec
iret
xchg
sub
mov
fnstsw
mov
notb
outsb
das
xchg
es
xchg
nop
sub
scas
mov
and
test
mov
decl
pop
mov
mov
push
xchg
inc
xchg
jg
js
je
xor
aam
in
jle
ror
fcoml
mov
mov
mov
out
repnz
loop
shll
je
cmpsl
sbb
aaa
add
repz
jle
mov
fs
add
jbe
cmp
xor
fsubl
lcall
sub
sarb
daa
leave
and
cwtl
pop
sbb
mov
cmpsb
push
adc
iret
popa
adc
pop
daa
push
cwtl
clc
lret
mov
outsb
inc
fbstp
adc
adc
jno
jb
lahf
push
xchg
imul
cmpsl
imul
stos
jl
test
mov
pop
dec
dec
xchg
mov
ds
mov
xor
idiv
je
mov
ljmp
int
or
xor
sub
nop
popa
pop
insb
sbb
dec
mov
js
fistl
cli
or
lods
ss
cwtl
inc
xchg
push
fnsave
js
insl
xor
shll
mov
xor
in
mov
push
addr16
add
push
shlb
dec
lods
and
jne
push
cwtl
je
testl
jne
and
jne
adc
cmp
leave
pop
inc
dec
repnz
mov
fwait
out
repz
xor
inc
sbbb
jb
negl
cld
mov
mov
js
cld
ficoms
xorl
sbb
jae
fstpt
mov
lret
sbb
add
fmull
dec
cmpsl
push
dec
leave
push
push
mov
add
bound
je
test
fstpl
addr16
ret
fnstenv
js
xor
icebp
adc
lock
push
in
jae
jb
insl
outsl
push
test
cmp
sbb
dec
push
adc
pop
xorl
mov
cvttps2pi
lcall
jnp
adc
inc
fwait
mov
and
add
les
hlt
adc
es
cmc
mov
xchg
push
mov
or
mov
pop
jl
shl
lret
std
call
out
mov
dec
mov
int3
jnp
jne
or
mov
daa
les
addr16
fimuls
pop
xchg
fwait
mov
xchg
jne
cmp
dec
mov
std
pushf
pop
fidivs
adc
mov
ds
lds
push
pop
fldl
mov
rol
icebp
pop
jo
sub
jo
subl
dec
push
fstl
pop
es
dec
js
pushf
out
mov
push
inc
sbb
dec
and
mov
xchg
push
lods
out
pushf
fcomps
nop
push
xchg
cmp
sbb
popa
in
xchg
pushl
inc
mov
pop
xchg
inc
lods
mov
das
pusha
jae
fsubl
and
shll
xchg
fwait
pushf
inc
prefetch
or
jns
shl
arpl
flds
sub
lods
jp
or
or
cmc
xchg
in
clc
pushf
sbb
adc
imul
addr16
pop
sti
shlb
jp
adc
xchg
cmpsl
jb
jg
clc
sbb
and
std
into
and
aam
fsubrl
lds
dec
add
xlat
mov
sbb
outsb
mov
xchg
adc
jo
jmp
outsl
xor
and
xchg
cmp
xor
mov
xchg
rcrb
cmc
mov
clc
and
sub
fwait
dec
ret
cmp
adc
aam
iret
clc
pop
inc
xor
push
imul
or
jne
jae,pn
or
inc
dec
mov
sub
jo
inc
loope
test
pop
or
and
sub
push
pop
movsb
ret
inc
xor
shrl
mov
adc
jno
adcb
push
loope
adc
sysenter
icebp
adc
ja
sbb
cmc
incb
fsubrl
gs
sbb
xchg
mov
loopne
fs
mov
push
jecxz
mov
mov
cld
or
pusha
mov
das
adc
push
cmc
jmp
sti
jp
loope
and
mov
jno
sub
sbb
xchg
xor
arpl
daa
cmc
jmp
xor
daa
push
mov
mov
icebp
std
loope
jae
mov
repz
mov
fsts
or
cltd
imul
jns
mov
mov
jns
rol
xchg
je
pop
fdivs
stc
inc
arpl
test
mov
xchg
and
cli
lcall
cmc
leave
adc
add
jecxz
inc
shrl
sahf
push
sahf
adc
and
jne
sbb
xchg
adc
or
xor
lret
je
sahf
dec
ds
xchg
mov
pop
ss
xorb
mov
add
push
mov
int3
xor
mov
and
int3
xor
mov
movsl
dec
jne
mov
mov
addb
xchg
or
cmp
int3
push
xor
and
jno
js
es
mov
cmp
stos
and
clc
cmp
cmp
loopne
mov
jecxz
mov
push
xor
mov
les
jbe
adc
or
aam
fs
imul
push
imul
push
imul
xchg
mov
stos
xor
bound
fcompl
jnp
daa
inc
fdivrl
fmull
push
icebp
loop
daa
ja
dec
daa
jae
jb
add
popf
inc
ds
sub
and
cmp
push
sahf
cltd
scas
ficoml
test
jp
mov
rcr
stos
sbb
xor
jnp
cmc
jge
jae
test
cs
out
push
add
adc
in
mov
sbb
adc
sahf
testb
xor
cmp
sbb
mov
or
push
std
mov
iret
out
adc
and
add
jnp
out
inc
inc
daa
mov
jle
ljmp
sub
in
shlb
data16
cmpsl
enter
out
out
imul
aas
jne
lcall
pop
stos
repz
inc
pusha
lret
hlt
push
pop
int3
sbb
mov
shl
sarb
cmp
mov
lret
stos
outsb
dec
mov
adcl
push
sub
hlt
inc
mov
cwtl
jl
out
clc
push
inc
hlt
dec
lcall
adc
hlt
testl
add
loope
fidivrl
mov
aad
outsl
mov
pop
lea
cwtl
mov
loope
movsb
pop
dec
jnp
mov
pop
pop
jb
push
mov
jl
lret
fwait
dec
pushf
arpl
sbb
dec
inc
and
xor
ret
test
lods
rcll
test
cltd
sbb
jne
mov
movsb
mov
push
cmc
and
dec
insl
mov
dec
aam
or
and
fiaddl
call
push
dec
push
and
sahf
mov
ds
adc
loop
pop
sub
leave
dec
out
pop
inc
sbb
stc
lock
fldenv
ret
sbb
clc
repz
shlb
cltd
addr16
jo
dec
scas
cmpsb
push
lret
push
insb
xlat
movsl
out
jno
mov
aad
jle
push
push
scas
addr16
pop
cli
loopne
fnstenv
pop
stos
js
iret
add
sub
inc
jb
mov
lock
mov
xor
mov
jle
aam
inc
bound
mov
cmp
mov
stos
and
dec
add
add
dec
xchg
clc
dec
mov
mov
fadds
imul
sbb
mov
scas
jp
add
clc
inc
add
xor
pop
into
outsl
outsb
idivl
clc
mov
into
adc
shll
scas
std
pop
jno
inc
sub
jno
sbb
fists
push
gs
test
push
mov
pusha
push
mov
and
mov
jge
insb
push
inc
dec
sbb
cli
cwtl
mov
scas
or
sarb
das
insb
xor
cmpsl
jmp
sarl
sub
xchg
outsb
mov
fstps
cli
jns
stc
adc
insb
ljmp
enter
cwtl
xor
test
dec
fdivs
cs
jae
mov
cli
dec
scas
jae
mov
add
sub
out
jnp
xlat
clc
mov
les
sbb
pop
jp
sub
inc
and
fsubs
outsb
add
xor
jg
inc
mov
push
sub
into
es
cld
xlat
gs
mov
push
xchg
outsb
cmp
pop
js
or
imul
push
pop
je
adc
xchg
and
or
sbb
inc
sbb
nop
jo
pop
cmp
in
lret
mov
push
cs
xchg
arpl
mov
mov
push
mov
adc
xchg
repnz
stos
arpl
jge
orb
insl
mov
int
jo
pop
jo
push
push
sbb
sub
sahf
das
mov
or
cli
fcoml
mov
lods
inc
sbb
in
in
or
xor
fistl
add
jns
push
dec
xchg
bound
mov
pop
mov
mov
mov
dec
adc
xor
mov
xor
mov
mov
adc
jns
inc
sub
test
dec
dec
or
pop
icebp
nop
mov
cwtl
sub
sbb
push
jle
pop
icebp
aas
or
fsubs
xor
in
mov
or
jmp
sahf
xchg
sbb
dec
xchg
jb
mov
icebp
sarb
push
xor
mov
jno
scas
mov
cmpsl
adc
aaa
push
pop
push
dec
jns
data16
sbb
pop
xchg
rclb
sub
xchg
push
push
sahf
xchg
jbe
rep
jne
ss
adc
cmp
test
sbb
pop
pop
inc
insb
mov
cmpsb
push
arpl
pop
cmp
in
xchg
jmp
or
jae
mov
sbb
fidivrs
sbb
xor
in
int
cltd
shrb
mov
dec
test
sahf
push
mov
jns
and
xchg
jg
js
test
rorl
xbegin
cmc
sbb
ja
lods
pop
stc
sbb
jae
push
js
scas
hlt
shrb
push
cltd
mov
stos
cmp
mov
cmp
cmp
mov
pop
out
cmp
xchg
adc
dec
adc
sub
mov
or
xchg
cmp
mov
ds
das
fwait
xchg
test
push
xor
and
out
inc
lret
cltd
mov
seta
stos
xor
cmp
push
jnp
sbb
and
cmp
push
or
movb
fiadds
movsl
das
mov
test
leave
test
outsl
je
xchg
jg
xchg
dec
imull
je
out
cmpsb
cwtl
out
push
js
in
mov
xlat
pop
iret
insb
aas
sub
and
push
xor
pop
js
fdivs
push
cmp
lea
pop
mov
js
clc
shr
js
daa
lock
fstpl
hlt
pop
int
js
cs
xor
adc
add
lret
jne
orl
push
pop
js,pn
push
mov
jo
ss
cmp
js
lods
or
sub
test
sbb
bound
pop
push
lret
dec
dec
in
or
mov
mov
push
jl
hlt
scas
inc
in
cmpsb
in
jmp
aam
int3
mov
js
test
and
mov
jns
std
dec
iret
dec
push
dec
insb
dec
fs
pop
lea
fyl2xp1
stos
mov
cmp
ret
mov
sub
sbb
stos
lock
mov
jnp
shll
stos
ficompl
pop
int3
in
dec
push
mov
sahf
fs
mov
jbe
repz
lods
mov
rorb
lret
movsb
shrb
and
mov
add
sti
sub
ss
jb
arpl
lods
dec
sub
mov
mov
mov
cmpsb
lock
test
sbb
ss
cmp
dec
dec
xchg
mov
add
clc
inc
mov
add
xchg
call
mov
adc
adc
push
ss
clc
or
jg
js
jae
cmp
mov
cwtl
jns
cmc
faddp
movq
arpl
sbb
pop
lahf
stc
arpl
and
or
cmpsl
dec
xor
sbb
rclb
mov
mov
int
add
es
mov
out
stos
jno
cmp
dec
xor
daa
dec
jmp
xor
jae
dec
jge
jb
sahf
arpl
addl
inc
mov
xor
lret
push
inc
jle
sub
jbe
pminub
mov
push
in
inc
popa
xchg
sub
pushf
lods
mov
es
cwtl
push
dec
arpl
or
bound
mov
push
fnstcw
xlat
jo
jp
push
lcall
lock
shrl
enter
dec
pop
das
cmc
push
mov
inc
add
xor
and
and
dec
test
pop
ret
jno
push
jns
hlt
cmp
sbb
rclb
fdivrs
cmp
sub
cmc
ret
cmp
xchg
xor
out
neg
and
movsl
sarl
push
pop
xor
test
sbb
movsb
int
jb
movsl
dec
sub
je
shl
pop
popf
mov
xchg
fnstcw
sti
aas
int
push
dec
ret
imul
ss
push
mov
push
fs
or
repz
cltd
fs
mov
pop
stc
mov
sti
lcall
xchg
mov
mul
jge
cmp
cmpsb
rcrl
sbb
cwtl
jae
test
js
push
repnz
jl
arpl
repz
int
xchg
jmp
push
and
popa
test
adc
pop
xchg
inc
jne
mov
imul
mov
das
fnsave
pushf
ja
gs
ret
pop
and
leave
out
mov
or
or
sbb
scas
xor
dec
sbb
sbb
pop
jmp
jg
sbb
js
je
jae
pop
cli
aam
mov
push
popa
lcall
inc
jecxz
xchg
std
jb
das
negb
jecxz
js
lret
xchg
mov
mov
pop
orl
lcall
insb
xor
mov
std
push
xor
clc
sbb
divb
mov
std
cmp
cmp
jl
inc
and
pop
or
adc
cmp
mov
movsb
pusha
rol
and
pop
sbb
mov
jne
push
add
cmc
mov
decl
mov
enter
xchg
jbe
pusha
push
sub
cmp
mov
pop
dec
call
pop
lahf
divl
sub
push
stos
decl
and
out
loope
add
fisttps
adc
sbb
cmp
add
out
jnp
pop
or
js
movsl
lods
lods
push
negb
cmp
repz
popf
adc
sbb
stos
pop
mov
fsubrl
nop
movsb
adc
or
push
inc
xchg
jno
xchg
pusha
sub
enter
cmp
mov
pusha
mov
lcall
or
je
mov
sbb
outsl
leave
xor
jae
fucomp
xchg
or
mov
xchg
aad
inc
xor
mov
or
pushf
add
xchg
popa
jbe
mov
adc
fsubrl
xchg
dec
mov
add
cwtl
push
mov
sbb
jg
or
idivb
dec
xchg
add
push
data16
xor
and
xor
adc
inc
inc
lods
xor
sbb
xor
push
fcompl
ljmp
pop
xchg
and
push
stc
xlat
and
pop
mov
int
shrl
into
mov
int
mov
pop
or
or
mul
ret
adc
insb
insl
daa
fnstcw
scas
in
outsb
rcl
mov
xor
test
xor
loop
rcll
aaa
sub
rcrb
jmp
fsubs
jbe
mov
loopne
inc
cmp
push
and
into
out
xor
out
mov
sbb
push
sar
pop
sub
ja
or
push
sti
movsl
daa
imul
imul
fcmovb
call
jmp
fmuls
rolb
cli
mov
push
hlt
jbe
sub
sbb
adc
dec
mov
cmpsb
jle
mov
jge
rorl
jo
mov
mov
fdiv
mov
pusha
es
or
mov
sub
ret
dec
adc
mov
inc
mov
lods
mov
gs
jge
and
iret
aam
xor
cmp
fwait
das
inc
movsl
loope
movsl
xchg
inc
jmp
push
pop
xchg
cmp
adc
cmc
mov
adc
xchg
pop
mov
push
xor
dec
pushl
push
adc
push
imul
and
mov
iret
cmp
jg
sub
mov
cmp
mull
movsl
daa
cltd
add
xchg
notl
stos
insl
xchg
xor
idiv
iret
dec
call
jge
push
push
mov
mov
je
lret
mov
jnp
adc
or
lods
xlat
nop
les
out
sarl
dec
mov
rcll
add
cli
in
add
es
addl
xchg
jae
mov
dec
stc
int
push
fistpll
sbb
hlt
lods
mov
fbld
aas
or
sbb
nop
mov
cmc
fisttps
sbbb
rclb
push
icebp
pop
sbb
into
adc
xor
es
and
and
adc
movsl
mov
push
dec
jle
inc
pop
sbb
xchg
je
xchg
mov
pushf
ja
clc
or
aaa
aas
add
out
xlat
insb
sarb
stos
shll
scas
out
mull
cmp
fnstcw
jb
ljmp
cmc
out
add
out
sbb
sub
xchg
int3
wbinvd
js
adc
dec
mov
mov
and
inc
push
xor
xor
fs
mov
insb
cli
pusha
ret
jbe
jae
mov
hlt
in
stc
xor
add
daa
out
leave
mov
dec
jae
adc
pop
push
fiaddl
or
je
xchg
lea
push
and
mov
inc
pop
repnz
add
out
xor
xor
div
cld
neg
nop
rep
and
repnz
idiv
push
imul
fidivrs
gs
insl
movsl
and
fnstsw
div
jp
lods
iret
cmp
daa
imulb
jecxz
mov
out
xor
xor
fs
sahf
mov
jg
adc
jnp
inc
jg
out
in
xchg
shrl
or
mov
cmpsb
jae
jmp
je
es
jg
cld
orb
mov
jg
mov
cmpsb
pusha
ds
or
stc
xor
mov
adc
xchg
push
xor
fiaddl
fstpt
fnstenv
insb
pand
jmp
pop
fsub
push
mov
sbb
mov
ss
mov
jg
into
xchg
jl
xor
xchg
mov
xlat
cmc
and
jae
iret
cltd
xchg
mov
push
mov
inc
int3
int
ret
data16
mov
xor
mov
ljmp
out
pop
pop
fmuls
dec
and
xchg
test
arpl
xor
mov
add
cmpsl
push
inc
mov
int3
xchg
std
pop
push
fildl
ret
push
mov
jle
nop
inc
int3
pop
das
scas
ds
jecxz
lcall
rclb
js
lret
lahf
cwtl
shrl
pop
push
adc
dec
xor
xor
lahf
xchg
cmp
lods
jo
ficoms
negb
rorl
adc
dec
sbb
jecxz
out
js
sub
jno
aas
xchg
insb
sub
mov
popa
mov
cmpsl
and
mov
outsb
mov
mov
icebp
movsl
lahf
xorb
sub
andb
ss
arpl
movsl
mov
sub
lea
bsf
and
stc
pop
adc
mov
cwtl
loope
loop
jne
or
xchg
pop
insl
push
and
mov
add
pop
out
ds
incl
inc
push
mov
test
xchg
popa
fstpt
adc
mov
add
sahf
fs
nop
je
aas
stos
cmp
insl
adc
fs
inc
lods
ret
mov
jge
push
xchg
outsb
xchg
and
scas
int3
inc
cmp
jle
cltd
or
clc
lea
or
aas
xchg
adc
fdivl
or
push
adc
scas
test
push
int
insl
out
jmp
mov
inc
pusha
ja
aad
dec
inc
std
cld
adc
int
jnp
cmp
test
test
lock
repnz
fidivl
inc
sbb
push
lods
sarb
into
mov
mov
les
or
test
sarb
pop
js
xor
cltd
iret
jg
ficomps
ret
push
xor
mov
push
xor
mov
lds
shr
push
lret
lock
jmp
scas
popa
fwait
xchg
pop
rorl
pop
mov
adcl
cltd
xchg
push
xor
xlat
test
sarl
sbb
lods
and
movsl
fnstenv
adc
jbe
fnstenv
imul
push
jae
inc
ret
cmpsb
gs
or
inc
adc
sarl
test
cld
sbb
add
clc
xchg
pop
test
mov
shlb
ds
push
data16
in
loop
jge
pop
xlat
pop
xor
sub
repz
fwait
sbb
icebp
aad
and
int3
xchg
movsl
imul
enter
int
sub
add
add
data16
dec
mov
addr16
sub
ljmp
mov
push
xor
pop
adc
sbb
xor
js
jp
adc
xor
inc
es
je
mov
sbb
in
ret
xchg
xlat
out
repz
int3
pop
xchg
aaa
and
pop
ret
dec
pushf
js
pop
dec
or
outsl
gs
or
pop
sbb
fwait
mov
mov
outsl
or
scas
shl
sbb
inc
mov
mov
test
outsb
xchg
xlat
adc
fdivrs
leave
dec
sti
pushf
xor
mov
or
xchg
sti
mov
sbb
rcll
lcall
aam
or
mov
pop
popa
fldenv
imul
in
xchg
int3
xor
ja
jle
inc
jmp
adc
add
cmp
int
push
rcl
adc
lds
mov
decb
xor
xor
adc
mov
or
push
ss
push
pop
jae
andps
cmp
xchg
xchg
mov
xor
data16
push
adc
ret
loop
adc
les
push
call
mov
pop
cmp
cmpsl
je
or
ds
cmp
iret
jne
inc
push
mov
jne
push
mov
mov
pop
add
je
or
cmpsl
notb
mov
aas
mov
adc
mov
pushf
lods
dec
punpckhbw
ljmp
sahf
or
das
stc
and
repnz
lock
inc
js
xsaveopt
roll
rclb
popa
xor
xchg
imul
mov
ret
movsl
cmpsb
or
push
js
adc
test
mov
cld
nop
addr16
fistl
mov
aad
xor
ss
cwtl
jae
lods
jp
hlt
es
lods
or
loopne
mov
stos
sarl
pop
or
lds
lar
adc
lret
int
push
xor
adc
push
mov
or
jge
inc
out
push
sub
loopne
in
and
es
push
fisttpl
sahf
stos
fmulp
xor
stos
clc
clc
std
inc
lret
shlb
into
dec
inc
nop
pop
mov
test
testl
push
sahf
stos
xchg
sbb
cmp
es
ret
repz
mov
pop
pop
push
or
fmul
fistpll
and
jl
sti
cmpb
and
xor
pop
sbb
mov
mov
dec
push
add
sbb
inc
ret
cltd
lcall
pop
jl
js
cltd
popa
int3
xchg
xchg
out
xor
out
push
pop
mov
mov
scas
or
jmp
and
das
fsubs
fbld
fsubrs
mov
cmp
rol
jl
repnz
popf
inc
fnstenv
ja
insb
aam
mov
adc
mov
fcmovnb
mov
sub
mov
sub
xlat
push
repz
das
add
aaa
repz
fld
in
add
fcos
insl
adc
mov
js
push
fwait
and
test
sbb
mov
mov
shlb
push
nop
daa
adc
shll
jle
xor
inc
fisttps
mov
mov
es
into
mov
sbb
add
or
sub
and
into
jmp
pop
iret
lar
mov
cmp
mov
movsb
pop
jg
into
or
clc
je
xlat
sub
sub
cmp
xor
xchg
xchg
and
inc
out
jb
fcmovb
push
ret
sub
insb
movlps
cli
lds
sub
adc
js
jg
je
out
push
adc
cmp
sar
repnz
leave
test
mov
std
js
into
call
push
jmp
sub
mov
pop
xchg
jo
jae
and
xchg
adc
adc
inc
sbb
stc
ljmp
mov
fucomp
sbb
sub
pop
shlb
imul
dec
ja
pop
mov
stc
pop
test
ret
xchg
cmpb
xor
fcomip
dec
adc
xchg
dec
mov
and
mov
test
fadds
fdivs
or
xor
pop
xchg
in
sarl
sbb
sbb
adc
adc
sahf
xor
shrb
enter
jno
sbb
insb
rcrb
pusha
lea
sahf
xor
pop
cmpsb
xchg
movsb
cmp
mov
sbb
sub
jne
ret
push
out
adc
xorl
fs
or
push
xor
sub
loope
mov
cmp
xor
mov
aas
sub
and
test
test
sahf
mov
push
cmpsb
aad
jne
ljmp
loop
scas
adc
scas
dec
popa
test
pop
add
mov
shlb
aad
into
ret
inc
loope
jp
clc
inc
adc
xchg
aam
rcrl
cmp
ja
pusha
mov
mov
sub
pop
ds
in
pusha
int
add
lea
mov
mov
jno,pt
dec
sbb
fnstenv
into
add
test
iret
ret
pop
jge
or
mov
mov
xchg
sti
jecxz
icebp
mov
pop
mov
xlat
mov
fldenv
mov
repnz
or
in
mov
ss
cmpsl
and
js
and
push
ljmp
out
push
mov
push
cmpsl
sub
mov
adc
cmp
inc
push
aaa
push
fcmove
pop
repz
push
cmpsb
fbstp
and
loope
jmp
sub
repz
ret
xlat
inc
mov
gs
popa
inc
and
xchg
ret
sbb
cli
jns
hlt
add
push
sub
jo,pt
jecxz
bound
repnz
daa
movl
inc
jg
jns
mov
jae
pop
mov
inc
jb
mov
addb
or
push
jo
mov
test
sbb
in
pop
push
ljmp
mov
bound
xchg
je
fnstcw
push
out
imul
xchg
and
mov
xor
jge
ret
mov
lods
mov
push
repz
adc
cmpsl
push
sbb
or
push
in
and
sarb
adc
add
fsts
lds
inc
cmp
mov
mov
push
and
push
scas
sbbl
sbb
cmpsl
jno
lret
add
inc
mov
orl
or
fwait
pop
mov
enter
fwait
cmpb
mov
xor
cmpsl
sahf
and
stc
mov
xor
fisubrl
dec
cmp
outsb
fnsave
imul
push
mov
mov
out
imul
sbb
cltd
adc
ret
add
repnz
clc
js
repz
inc
out
mov
mov
mov
mov
ss
test
imul
lods
add
cmp
push
mov
pusha
jae
pushf
ret
jg
test
incb
or
rcrb
xchg
ret
mov
dec
data16
out
lret
sub
push
pop
pop
jne
cltd
pop
gs
fsubl
scas
push
cmpb
lea
lret
scas
and
test
cltd
out
sub
mov
popa
mov
push
pop
dec
sbb
aas
sahf
pop
outsb
adc
push
cmpsb
shlb
xchg
daa
mov
cmc
cwtl
pop
data16
jle
inc
test
mov
addb
mov
cmp
insl
mov
inc
mov
pop
lahf
ret
push
rclb
lods
jbe
fmull
sub
ror
fimull
adc
push
xchg
add
xchg
or
lret
ljmp
jbe
dec
les
stc
xchg
mov
xor
jbe
mov
mov
incw
jo
jae
inc
ret
lahf
sahf
aad
cmp
or
fidivs
lods
call
mov
call
adc
js
pushl
mov
push
mov
mov
and
or
or
mov
and
sbb
adc
sub
in
lock
ds
push
jle
fcmove
mov
cmp
testb
test
pop
add
test
inc
adc
adc
movsl
ja
clc
and
les
sbb
insl
sbb
jg
inc
lea
pop
cli
mov
mov
push
inc
cli
mov
iret
daa
aad
cli
mov
push
dec
bound
jge
push
or
push
jl
shrb
xchg
sarl
adcb
aaa
icebp
imul
and
mov
xor
out
sbb
imul
ja
xor
bound
outsb
fisubrs
or
notl
mov
adc
scas
push
es
jns
adc
jp
push
inc
popf
jle
leave
jnp
cs
mov
sub
je
cs
hlt
shlb
scas
popa
js
and
lods
inc
and
scas
add
jae
stos
roll
rep
int
mov
scas
popf
mov
jmp
mov
mov
int
cmp
scas
jecxz
imul
test
adc
rcrl
dec
test
dec
dec
mov
shll
push
sbb
js
push
leave
adc
data16
pop
sbb
cwtl
iret
or
bound
leave
subb
lods
leave
pusha
aas
std
mov
pop
call
mov
add
int3
insl
xchg
push
hlt
outsb
and
je
leave
mov
xchg
inc
in
adc
call
xchg
fcomi
popa
jge
jbe
jae
rcll
sub
adc
cmp
mov
in
das
ja
sbb
imul
es
xchg
adc
sbb
fldcw
adc
orl
mov
lds
pop
push
shl
js
rorl
xchg
arpl
mov
aas
movsb
mov
arpl
scas
popf
and
push
add
jp
add
sbb
repz
mov
sahf
loop
icebp
xchg
add
pop
lcall
cmc
je
jbe
mov
into
xchg
inc
into
je
mov
ljmp
stos
inc
fnstenv
fidivrs
subb
mov
pop
ds
mov
fisubrs
jno
outsl
lods
add
leave
fwait
jmp
stos
out
and
mov
add
in
mov
stos
mov
stc
cmp
js
ret
mov
adc
xor
push
push
loope
insl
sub
enter
icebp
insl
mov
push
nop
jl
inc
loop
lret
fcoms
ret
adc
popa
xchg
imul
icebp
orl
jge
push
ljmp
mov
ret
sti
stos
scas
xchg
sbb
addb
ds
leave
icebp
int3
out
js
jne
jle
xchg
je
push
jo
mov
arpl
cmp
jmp
pop
add
and
add
jbe
leave
cmp
fstps
dec
lret
stc
lods
mov
mov
sub
stc
cmpsl
test
mov
adc
gs
mov
lods
js
and
sbb
rcrl
fdiv
sbb
jo
lret
and
jle
mov
push
or
cmp
mov
push
sub
add
jb
adc
fimuls
dec
sbb
sub
ret
mov
mov
and
mov
and
jmp
sub
xor
jno
sub
pop
and
pop
cmp
mov
ret
out
test
adc
outsb
jo
mov
cmp
js
rclb
cmc
das
mov
rcrb
hlt
scas
dec
jnp
dec
mov
or
push
test
imul
pop
lret
lea
adc
jo
lds
in
idivl
in
or
xchg
fsubl
xchg
clc
push
xchg
rcrl
fadd
cltd
pop
inc
add
cmc
jle
loopne
xchg
jle
mov
mov
sbb
or
testb
flds
push
push
mov
inc
mov
ja
mov
out
and
lea
arpl
loopne
push
out
outsl
fldenv
xchg
loop
lods
iret
jmp
sub
test
inc
xor
rorb
cwtl
ja
cmp
shlb
mov
mov
rorb
add
jne
popf
pushf
shll
xchg
cltd
stos
mov
std
nop
inc
or
cmc
out
loopne
pop
sub
loopne
pushf
addr16
inc
push
fdivs
add
jns
and
repnz
push
js
push
sub
adc
add
xchg
jl
push
dec
out
imul
mov
test
arpl
loopne
or
jnp
cmp
adc
jecxz
flds
cmp
sub
hlt
cmp
andl
inc
jp
mov
mov
dec
add
mov
mov
and
cwtl
mov
push
mov
mov
or
mov
insl
fs
pop
adc
pop
xchg
fiadds
fbld
mov
lret
out
lock
pop
jae
addb
sub
adc
dec
mov
stc
adc
pop
push
and
je
das
adc
idivb
inc
jecxz
pop
add
fidivrs
push
or
xor
pop
and
inc
push
sub
data16
daa
scas
jo
inc
lret
xchg
fstpt
jl
adc
inc
xchg
fsub
cmpsb
xchg
out
pop
imul
popa
in
xlat
xor
ljmp
jns
pusha
push
inc
int
jne
and
mov
repz
mov
add
mov
push
mov
xor
cmpsl
push
mov
jl
fcoms
and
lcall
mov
scas
es
dec
icebp
push
sub
out
mov
push
push
pop
mov
and
jns
sbbl
lret
jo
mov
repz
arpl
mov
pop
pop
sub
inc
and
repz
push
pop
fwait
mov
cmp
fwait
mov
int3
daa
js
jle
adc
push
out
gs
mov
jno
ljmp
jle
pop
popf
bound
pop
jmp
sub
push
std
jae
inc
int
adc
pop
mov
mov
pop
and
push
mov
xor
mov
and
push
inc
popa
jae
adc
sub
mov
push
jg
es
movsb
cmp
les
lret
stc
jecxz
add
ret
sahf
mov
and
outsb
pop
cltd
jle
fs
pop
xchg
out
out
fs
mov
aad
lods
bound
jle
inc
add
or
je
mov
or
into
pusha
mov
test
imul
aas
or
jp
out
stos
call
je
imul
mov
movd
daa
daa
adc
in
iret
repnz
adc
and
setbe
mov
xor
or
daa
iret
adc
int
fwait
sbb
fsubrs
in
cltd
scas
jno
push
adc
jno
mov
es
dec
es
adc
jbe
push
in
loope
repnz
iret
out
call
pop
mov
fsubs
adc
pop
mov
bound
cwtl
aam
sahf
mov
mov
xor
inc
mov
dec
xlat
sahf
aam
frstor
jae
xchg
xchg
adc
aas
lea
cmp
gs
inc
xlat
or
xor
in
insb
imul
mov
int3
adc
inc
inc
xchg
xchg
insl
mov
add
imul
ds
aas
mov
stc
xor
scas
insb
loopne
xchg
stos
or
lret
or
sub
inc
into
shll
mov
jne
cmc
xor
lahf
sbb
cmp
push
sub
call
mov
or
ret
int3
idivb
pop
cli
decb
mov
xor
jo
or
push
fs
stc
int
or
outsb
shrb
lret
sbb
adc
dec
cwtl
and
outsl
xchg
xor
jo
adc
pop
stos
adc
xchg
mov
je
and
mov
mov
test
and
sti
mov
jl
mov
adcl
push
mov
pusha
jno
inc
pop
sti
fadd
or
insb
cmc
pop
scas
or
jb
rcrl
jmp
rcll
fistpll
xchg
sbb
shl
sub
leave
mov
in
xchg
jns
repnz
lret
in
dec
mov
xor
js
sbb
xchg
jns
cmp
loopne
inc
fistl
mov
cli
push
ss
scas
add
add
fistl
fcmovnu
and
movsb
pop
test
mov
dec
movsb
jne
jnp
xor
push
repz
and
clc
fxch
and
pop
fld
dec
into
das
cmpb
lock
push
xchg
jmp
imul
sti
mov
ds
mov
xor
xchg
adc
sub
xchg
jl
xor
cmp
fcoms
push
popa
movsl
movsb
jle
popa
jno
aaa
daa
xchg
sub
xor
dec
rdpmc
frstor
sub
and
jns
jo
cs
jno
cmp
jae
inc
jns
push
push
cs
adc
dec
inc
sbb
popa
mov
xor
jno
xchg
pop
in
pusha
xchg
das
push
popa
jmp
outsb
outsl
shrb
repz
push
inc
xor
adc
daa
xrelease
test
arpl
pop
std
mov
jae
push
arpl
mov
mov
fimull
or
shll
cs
outsl
rorl
imul
or
mov
jbe
adc
push
dec
cmp
cmp
push
cmp
push
popa
rcrl
mov
ret
push
jmp
cmp
adc
shlb
cmpsl
lahf
shll
jge
ret
mov
jmp
outsb
mov
xchg
daa
hlt
shl
sub
dec
and
push
rorb
adc
push
cwtl
push
xchg
jnp
movl
shrl
popa
inc
add
pop
xor
enter
shrb
lods
pop
mov
sub
push
outsb
nop
je
enter
cmp
bound
mov
call
push
repz
movsb
repz
lods
mov
rcrb
rolb
xchg
adc
push
xchg
and
imul
adc
rclb
mov
popf
adc
in
xlat
mov
pop
mov
cmc
or
add
mov
gs
jl
arpl
push
cmp
jg
jb
shrl
push
jg
or
js
fadd
pop
pop
push
arpl
fldl
popa
jmp
pop
adc
lahf
stos
or
push
jmp
stos
loopne
xor
loopne
pop
fs
pop
inc
jecxz
or
jns
inc
cld
aam
andl
push
ret
es
loopne
sahf
jae
cmpsb
push
out
pop
clc
or
jns
rol
jne
std
mov
je
stos
jns
xor
pop
jns
cltd
stos
mov
xchg
or
movsb
cmp
xchg
xchg
xchg
insl
fstl
call
push
call
ds
cmpsl
jmp
cmpsl
nop
ja
into
xlat
incl
adc
push
pop
mov
cmp
and
inc
sbb
inc
lock
lock
ja
aad
mov
clc
call
in
cltd
shlb
adc
cmp
push
movsb
xchg
ds
clc
addb
imul
test
clc
imul
mov
or
call
xchg
clc
popa
mov
or
mov
in
cmp
imul
and
das
test
loope
and
jg
aad
cwtl
js
pop
fs
or
sbb
mov
xor
fiadds
jle
pop
jo
orb
sbbl
mov
push
decl
sbb
xor
dec
es
cld
xchg
mov
xchg
mov
cld
fistps
fcmovnbe
ss
adcb
push
cmc
rcll
es
lods
aam
inc
subb
mov
repz
pop
movsb
xor
push
mov
cwtl
cmp
insl
cwtl
dec
dec
fisttps
imul
push
and
pusha
rol
xor
jmp
pusha
daa
xor
jle
cld
jno
and
repnz
leave
or
mov
es
aad
imul
adc
bound
lret
push
sub
mov
mov
lahf
shrl
add
pop
daa
fsubs
andl
test
in
stos
scas
and
notl
pop
popa
mov
lods
mov
mov
int3
fistpl
pop
shrl
subb
ja
adc
call
or
or
js
mov
xchg
imul
sti
in
invd
adc
out
or
rcl
add
or
je
mov
jb
or
add
push
xor
mov
dec
fadds
mov
adc
jno
ljmp
adc
inc
cmovb
clc
jecxz
jne
xchg
dec
xor
sub
xlat
fs
mov
int
inc
jbe
and
mov
popl
mov
add
aaa
mov
inc
inc
mov
mov
out
add
inc
dec
cmc
xor
repz
jno
call
jge
add
scas
loope,pt
jecxz
sub
stc
inc
jp
pop
push
mov
lea
jp
jne
push
inc
jb
int
popa
pop
mov
push
dec
lcall
lods
push
jmp
mov
dec
jmp
mov
movsl
stc
ret
jl
fnstenv
mov
mov
imul
shll
mov
nop
enter
aad
mov
push
sub
rorb
pop
repnz
xchg
and
jns
mov
adc
stc
mov
imul
mov
lods
scas
jae
jle
mov
adc
ja
pushf
cli
adc
out
and
pop
mov
inc
pop
cli
scas
cmp
mov
push
jg
pop
lods
pop
pop
add
movsb
dec
int
push
repnz
mov
aas
mov
mov
push
mov
rcrl
push
xchg
mov
ds
and
int
leave
pushaw
fmull
daa
and
or
mov
push
xor
pusha
fists
rcll
pusha
psrld
xchg
mov
cwtl
pusha
int
cs
cmp
or
cmp
push
or
cmpsb
and
mov
dec
adc
adc
nop
mov
push
cmp
insb
push
inc
ds
call
and
push
test
dec
adc
sbb
jle
pop
jo
xchg
inc
or
mov
rorb
push
imul
nop
push
fbld
cmc
rclb
add
movsl
adcb
xlat
sub
sub
push
add
clc
xchg
inc
push
test
addl
lods
pop
xor
mov
xchg
test
outsl
ret
ljmp
mov
or
jmp
push
or
add
or
ja
mov
or
xchg
jecxz,pn
and
xchg
adc
sub
lea
push
pop
scas
adc
adc
cmp
lods
fisubs
mov
mov
cld
jns
imul
jecxz
mov
pusha
notb
xchg
in
bound
imul
inc
pushl
stos
and
fdivs
loope
dec
ja
inc
sbbl
sbb
addr16
negb
dec
mov
setg
sub
cmpsl
cmpb
and
and
sbb
xorl
bound
inc
mov
fwait
and
cmp
and
cmp
das
movsb
stos
push
lock
lods
dec
and
out
lea
outsb
les
test
push
xor
mov
pop
gs
inc
ret
fld
pushf
pop
sub
fmull
test
sub
lds
movsl
xchg
xchg
fistpl
sub
jge
test
insb
das
or
fcoms
cmp
mov
or
xor
mov
xchg
adc
fidivrl
jne
and
xor
xchg
sub
test
cs
mov
lock
xor
push
test
ror
xchg
inc
data16
jl
jl
xor
push
pop
inc
cmp
stc
in
pop
dec
pop
inc
inc
push
sub
push
sbb
push
and
int3
imul
jmp
mov
mov
mov
lcall
add
cltd
icebp
inc
mov
pop
pop
xchg
stos
cmp
dec
mov
and
add
inc
jge
sahf
cmp
loope
insb
cmp
adcb
cmp
or
insb
push
and
push
xorl
pushf
roll
jl
mov
push
adc
add
adc
in
gs
sbb
fwait
ret
js
xchg
test
jge
push
int
in
sbb
and
mov
push
or
jb
pop
dec
jb
imull
ret
sub
mov
movsl
data16
rcrb
outsb
ret
rcll
pop
scas
lds
in
loop
sti
lret
shrl
sub
call
imul
mov
xor
xor
or
jge
or
stc
in
rep
mov
or
xor
negb
rorl
mov
dec
mov
fisttpl
pop
fildl
and
daa
insl
push
shlb
popa
mov
clc
xchg
add
lret
jecxz
mov
aam
inc
mov
jecxz
cwtl
stc
lock
cmpsb
jecxz
and
jecxz
xor
fimuls
rcll
pop
jmp
adc
jmp
imul
mov
add
xor
fldenv
mov
shll
jmp
add
inc
stos
sbb
fcoms
int3
aad
lcall
push
loope
notb
inc
pop
mov
repz
icebp
and
repz
mov
add
out
xor
mov
aam
shll
loop
mov
ja
insb
dec
fmuls
loope
mov
sti
movsl
sbb
daa
jo
shlb
pop
sti
andb
sti
shlb
mov
stos
enter
pop
mov
imul
adc
jg
cltd
test
dec
int3
aam
in
das
and
jno
xorb
repnz
mov
lea
outsl
mov
inc
jne
and
sub
xlat
lods
inc
add
push
shlb
enter
imul
pop
cltd
pop
ficoml
mov
imul
mov
out
xor
cmpsb
iret
test
xchg
pop
scas
add
fdivrp
or
push
mov
dec
mov
movsb
movsb
push
cld
icebp
add
cltd
sbb
jp
mov
sar
pop
jbe
test
mov
xchg
or
or
popf
xchg
and
sbb
arpl
loop
fdivr
xchg
and
jg
mov
dec
scas
mov
adc
cmp
cmp
imul
or
rcrb
fwait
mov
cmp
add
cltd
addl
jge
cmp
pop
gs
ds
jmp
or
fwait
es
inc
cmpl
stc
int3
mov
cmp
dec
mov
scas
fidivl
movsl
loope
insb
adc
push
popf
out
dec
ret
outsl
ret
call
jl
iret
mov
mov
imul
mov
stc
rcl
dec
add
cmp
mov
pop
xor
enter
mov
xchg
jg
test
xor
int
jmp
jbe
pop
bound
iret
mov
ss
inc
jno
daa
and
fwait
dec
sbb
stos
adc
inc
push
subb
inc
sbb
packuswb
add
mov
push
stos
stc
or
mov
cltd
pop
or
out
mov
mov
mov
cmp
mov
arpl
rcl
cmpsl
fmuls
scas
rol
inc
subl
iret
push
adc
outsb
daa
in
mov
jl
fsubs
cmove
push
popa
int
xor
mov
jnp
je
add
or
ja
dec
sub
mov
cmpsl
xor
xchg
rolb
notb
mov
lahf
mov
jbe,pt
out
rcrl
imul
subb
cmc
lods
in
divb
inc
sarb
inc
out
and
inc
pop
and
inc
lret
inc
pop
out
cli
jne
loopne
movsb
in
jle
cmp
pushf
jae
or
arpl
jmp
inc
push
and
loopne
jg
xchg
loop
mov
es
dec
mov
pop
pop
mov
inc
js
mov
xor
dec
push
mov
dec
xchg
roll
mov
mov
adc
mov
mov
mov
and
jae
mov
push
outsl
cmpsb
icebp
pop
stos
out
inc
push
lret
stc
adc
and
mov
stos
mov
lods
xchg
push
frstor
push
and
jle
mov
in
xchg
and
mov
push
shll
mov
jae
sub
pop
inc
stos
sbbl
pop
lods
notl
es
and
ficomps
cmpsl
rcrl
popf
adc
pop
test
push
rep
das
pushf
adc
dec
dec
hlt
fisubs
scas
xchg
push
push
xor
pop
dec
and
andl
add
jge
jbe
cmp
or
jge
jmp
add
mov
dec
scas
add
mov
push
sub
add
and
hlt
and
add
and
clc
ljmp
jl
dec
pop
ja
or
test
ret
inc
into
sbb
mov
vhsubps
dec
or
test
insl
jle
cmpsb
lcall
and
iret
subb
test
sub
inc
jmp
jb
inc
outsl
adc
psllq
xchg
int3
out
xchg
xor
pop
xor
jecxz
mov
mov
test
ret
xor
pop
inc
cmp
jnp
adc
mov
mov
mov
stos
mov
inc
xchg
aad
lret
mov
jg
jl
xorl
ja
mov
sub
pop
push
bound
mov
pop
jae
lcall
scas
or
add
rol
jg
jb
fiaddl
daa
sub
sbb
pushf
fadds
test
xor
adc
xor
sub
adc
rolb
popa
sub
inc
or
int3
and
ret
imull
inc
lret
cmp
insl
xchg
shrb
fs
outsl
pop
sbb
aad
jns
xor
sti
stc
aaa
push
or
or
inc
mov
sbb
fisubl
jge
and
das
xlat
mov
inc
fucomp
fisttpll
sbb
outsl
loopne
jge
cmp
mov
or
push
add
push
sarb
mov
std
adc
fwait
sbb
sarb
push
insl
movsb
mov
mov
push
and
or
mov
push
sbb
cld
dec
leave
and
jae
mov
push
or
jl
inc
sbb
xchg
jne
out
pop
xor
std
js
push
xor
loop
push
jae
mov
jle
std
ret
mov
and
aad
push
mov
xor
inc
movsl
dec
dec
add
sbb
hlt
fsubs
xor
cmp
pop
and
xor
popf
xchg
push
sub
sbb
and
es
xchg
into
mov
xor
mov
adcb
or
int3
sub
jmp
pop
insl
adc
sub
adc
xchg
xlat
outsb
dec
mov
jb
cmpsl
mov
xchg
mov
mov
call
mov
or
cmp
or
xchg
cwtl
mov
mov
sub
adc
or
pop
adc
pop
loope
mov
pop
mov
or
adc
pusha
adc
cmp
je
cmp
push
cmp
inc
cmp
adc
cmp
adc
pusha
lods
ffreep
dec
adc
out
popa
mov
push
ret
mov
mov
call
cld
outsb
or
add
mov
lret
cmp
fstps
ret
rolb
mov
hlt
adc
icebp
jg
lods
add
mov
aad
dec
rol
cmp
adcl
sub
lret
adc
jg
inc
loop
push
adc
in
mov
mov
mov
incl
mov
stc
cmp
ja
mov
loop
aam
pop
int3
loop
add
cmp
push
and
nop
pop
loop
je
addb
movsl
ljmp
lahf
push
and
les
dec
ljmp
mov
ljmp
adc
inc
movsb
dec
push
imul
inc
and
in
mov
adc
repnz
int
adc
and
repnz
rcll
je
and
sbb
pop
sbb
cli
or
jae
inc
cmpsb
inc
xor
call
and
dec
or
je
cli
out
mov
leave
cli
lods
rclb
xchg
in
gs
inc
shll
imul
push
mov
jae
push
enter
xor
adc
jno
adcb
xlat
and
add
pcmpeqb
test
int3
push
mov
fisubrl
rclb
mov
pushf
pop
fadds
scas
push
ret
push
xchg
sub
xor
and
adc
fimull
mov
lcall
aas
cmp
push
mov
cltd
ds
frstor
mov
popa
mov
fcomip
or
cld
mov
imul
js
sbb
inc
jecxz
xorb
sub
dec
adcl
mov
imul
jmp
jo
jb
push
push
cmp
imul
xchg
fldz
jl
cmc
xor
add
or
orb
adc
aam
andb
lods
sbb
imul
outsb
sahf
dec
sbb
popf
and
cmpl
insb
xor
loopne
lret
inc
movsl
push
and
sub
cmpsl
gs
sub
scas
xor
mov
push
mov
mov
fistpl
sbb
lret
fiaddl
mov
xor
and
jns
mov
or
sahf
xchg
sar
aaa
out
xchg
jle
xor
ss
push
insb
into
cmp
loope
pop
push
pop
fdivs
dec
lods
jo
cwtl
mov
add
fildll
cmp
sbb
lret
push
jge
hlt
pop
jle
loopne
xchg
jns
addr16
xor
add
pop
imul
sub
cmp
popa
rolb
jno
xchg
jbe
stos
adc
inc
loopne
fs
xor
pop
mul
push
sarb
sbb
sti
sti
jmp
lds
fdivs
sbb
popf
jo
sub
lea
xor
mov
call
xor
add
sub
sbb
dec
jns
jne
in
out
es
mov
adc
cmc
pop
mov
popf
fstps
stos
and
cmp
sbb
repz
pop
jle
jl
mov
xchg
push
popa
cltd
fcmovne
and
icebp
mov
daa
dec
mov
mov
sti
das
xor
xor
and
fcomps
ret
adc
enter
lret
movsb
adc
fists
add
std
lret
out
inc
int3
outsb
insb
movsl
jo
mov
mov
vpmadcswd
xor
or
pop
pop
sub
cmp
dec
adc
testl
jle
mov
clc
push
or
pop
inc
mov
fnstenv
jnp
mov
cmp
addr16
aad
push
inc
aad
std
and
jmp
cld
out
push
movsl
pop
and
shlb
movl
outsb
shlb
push
dec
call
je
mov
dec
in
notl
sbb
mov
mov
mov
add
adc
xchg
test
ss
pop
mov
inc
or
in
push
cmp
pop
out
add
adc
or
inc
outsb
outsb
push
xchg
push
cmpsl
lock
push
out
dec
or
xchg
xor
stos
fstpl
out
mov
ljmp
pop
bound
adc
pop
cmp
fadd
mov
pop
cmp
loop
sbb
xchg
test
outsb
call
lret
pop
push
add
lahf
out
cmpsb
push
ds
mov
std
repz
pop
arpl
inc
mov
pushf
mov
dec
outsl
in
stos
mov
or
mov
push
jae
add
lret
push
adc
int3
cmpsb
frstor
adc
pop
js
pop
cld
xchg
push
scas
inc
testb
pop
jno
pop
jge
lods
in
xchg
cmp
imul
je
add
and
add
push
and
or
cmp
mov
fs
and
repnz
or
fwait
dec
and
xor
and
sbb
jecxz
dec
js
xchg
mov
lret
mov
test
leave
or
adc
mov
fidivl
lods
or
data16
mov
cltd
arpl
ds
xchg
mov
fisubs
insl
mov
and
ds
loope
divb
stos
or
jmp
shl
cmc
pop
inc
xor
sub
cmp
ficoms
call
int3
lahf
cwtl
push
js
xchg
stos
and
sbb
lea
dec
aam
push
movsl
adc
mov
in
xor
cmp
fdivrl
or
cltd
sarl
jo
jae
jno
into
ljmp
push
scas
pop
lahf
fmull
mov
sbb
fdivp
sub
fnstenv
sbb
xchg
mov
xor
imul
jmp
inc
cltd
js
pop
cld
repnz
lea
sbb
and
cmp
cmpsl
jecxz
push
mov
scas
ds
mov
and
js
fbld
dec
js
inc
xchg
test
in
je
cmc
inc
xor
mov
shrl
fnstenv
xor
shlb
sub
pop
imul
jne
iret
push
js
dec
mov
jne
fnstsw
dec
call
lret
xor
cwtl
stos
cmp
cld
insl
mov
rcll
mov
xor
sbb
js
nop
in
es
xlat
xor
loop
lods
add
mov
pop
jo
cwtl
and
mov
jno
mov
sbbb
jns
arpl
fsub
es
lods
mov
xor
adc
xchg
dec
fsubs
or
lods
pop
dec
daa
jb
mov
clc
and
pop
add
outsb
leave
push
xchg
pop
cmp
fwait
ja
mov
ret
cltd
mov
int
insl
js
xor
scas
int
pop
lret
xchg
lahf
xchg
dec
cmp
or
es
jecxz
in
cmpsb
js
int
nop
ss
popa
cwtl
add
mov
push
xor
call
xor
aad
push
out
imul
pop
imul
mov
incb
aad
cmpsb
stos
sbb
inc
mov
ja
add
fnsave
stos
lods
loop
inc
dec
clc
add
int
fnsave
out
aam
sarl
xchg
das
repz
xor
fucomp
jbe
fcomi
sbb
shll
into
imull
test
out
or
in
and
int
or
mov
cld
rorb
and
pusha
std
in
sbb
das
in
int
fiadds
aas
sbb
xchg
xchg
or
sub
or
add
dec
pop
or
js
add
xor
lret
sbb
repz
jp
daa
ret
inc
lcallw
in
ret
mov
cmc
ds
mov
rcrl
cmp
faddp
lds
add
sbb
scas
jne
mov
and
cmpsl
jb
pusha
dec
into
lods
sub
adc
sbb
add
mov
bound
rcl
test
cmc
inc
jne
mov
mov
iret
stos
stos
xlat
cbtw
fwait
inc
sub
cmc
fcom
hlt
sbb
mov
pop
sub
insb
adc
cmc
jno
xchg
enter
and
sub
dec
jge
stos
jge
lea
int
jmp
adc
jge
adc
sub
jae
lret
and
lds
jno
mov
andl
lods
mov
jge
repnz
mov
dec
lds
mov
jmp
aad
icebp
push
adc
and
cwtl
lret
js
lret
push
mov
inc
je
stos
stc
sbb
xor
push
jbe
adc
pusha
shll
sbbl
inc
loopne
mov
test
fsubrs
shlb
inc
dec
and
mov
xor
jl
cmp
pop
xchg
in
mov
lea
testl
lods
jmp
add
pop
comiss
shlb
adc
jb
aad
xchg
in
sbb
fs
add
dec
push
mov
xchg
add
cwtl
lea
insb
stos
mov
mov
xchg
pop
imul
cmp
mov
mov
push
xchg
mov
nop
lods
repz
jo
mov
pop
mov
fadd
insb
je
ficoms
ja
std
daa
js
loope
outsl
cmpl
jle
xor
js
cwtl
sbb
mov
jp
lea
shrl
aam
les
aaa
jle
mov
jae
andl
mov
add
mov
in
jns
mov
or
ror
add
lds
adc
sbb
mov
popf
loop
mov
movsl
lcall
and
dec
adc
outsl
add
outsl
test
fldt
xor
xchg
fnsave
sub
add
jp
movsl
js
fisubl
dec
negb
and
in
ss
shrb
inc
cmp
imul
or
ds
dec
push
mov
sub
xor
stc
loopne
enter
pop
pop
in
clc
mov
push
jne
daa
sti
push
js
adc
sub
imul
lods
aam
bound
push
cltd
or
repz
fstps
ror
rcll
mov
mov
lea
lods
push
mov
test
scas
insb
adc
inc
push
loop
das
or
fnsave
nop
or
jae
dec
mov
pop
mov
xor
push
loope
add
cmc
mov
xorb
icebp
xchg
icebp
fs
mov
xchg
xchg
adc
jp
xor
dec
and
cwtl
sub
and
je
loop
adc
pop
sub
mov
cli
out
stos
push
add
mov
mov
out
sbb
stc
mov
mov
dec
je
cmp
or
dec
pop
aad
xor
xchg
inc
loope
push
adc
rclb
aam
ret
xor
out
cmp
pop
hlt
dec
mov
sub
push
in
pop
jbe
lahf
and
mov
mov
aaa
or
call
and
es
andb
stos
jmp
dec
and
mov
xor
push
cmpsb
push
adc
inc
imul
and
out
and
ficoml
in
and
insl
cmpsb
jle
inc
in
in
and
icebp
mov
into
and
jae
pop
fucomp
sub
mov
pop
out
scas
sbb
pop
sbb
imul
and
ljmp
mov
push
mov
je
inc
jle
cmp
xorb
jmp
jno
sbb
imul
cmp
adc
push
ja
push
dec
jl
bound
add
dec
fs
mov
and
stos
cmp
shll
sbb
sub
es
repnz
je
pop
xorb
repnz
or
cmp
pop
jl
mov
add
jno
andb
and
neg
gs
nop
cltd
es
mov
sarl
cli
push
jl
gs
sub
mov
sti
out
mov
pop
lods
ficomps
out
movl
repnz
lock
fisttps
adc
jecxz
sbb
jns
in
sar
cli
xchg
vunpcklpd
xor
pop
repz
fmuls
out
xchg
clc
stos
es
pop
pusha
xor
dec
pop
or
xchg
das
in
mov
sarb
mov
jne
test
rol
mov
stos
sub
jg
sti
imul
add
mov
cwtl
and
push
mov
aas
aad
movsl
mov
xchg
and
xchg
mov
jecxz
neg
add
and
sub
jp
cld
js
xchg
sbbb
loop
shlb
insb
pop
cmp
xor
mov
inc
lcall
cwtl
fidivs
and
jo
arpl
jne
cli
mov
xor
add
cltd
adc
fidivrs
push
lods
xchg
pop
sub
mov
lcall
adc
add
bound
mov
adc
cli
jbe
pusha
fcompl
jnp
push
pusha
imull
icebp
fadds
mov
lock
nop
or
sub
stos
ret
ds
test
cmc
es
add
adc
sub
sbb
and
scas
jnp
bnd
jle
std
je
inc
stos
adc
mov
pop
clc
sahf
mov
cmp
push
lds
loopne
mov
mov
jne
js
or
lea
sti
sbb
movsb
mov
xor
sbb
xchg
repz
jl
push
ja
ds
jnp
push
pop
sbb
pop
cwtl
xchg
notl
jo
push
lcall
pop
mov
in
cltd
lds
call
xchg
pop
lods
push
ja
adc
and
and
mov
stc
out
enter
rcll
lds
inc
es
mov
or
das
lret
and
push
and
shlb
seta
xchg
out
inc
fdivp
xchg
xor
pop
aad
xor
sub
test
push
jmp
mov
xor
stc
data16
jae
in
into
ret
xor
in
aam
in
inc
lret
cwtl
or
xor
jno
nop
dec
jmp
enter
pop
mov
push
mov
pop
in
jne
xchg
fwait
xor
in
push
xor
out
in
jno
sahf
js
ror
dec
or
or
adc
cmp
cmp
jbe
pop
inc
repnz
pop
popa
jo
dec
std
and
in
mov
inc
ss
push
imul
xchg
stc
clc
fwait
add
adc
gs
hlt
pop
xchg
les
stos
or
jb
and
mov
hlt
dec
xchg
les
lahf
lods
je
jb
jl
cwtl
xchg
aad
test
sbb
imul
push
ja
mov
and
bound
or
jmp
jne
leave
jno
sarb
addr16
or
sbb
and
cwtl
push
subb
jbe
fs
push
jb
aam
xor
adc
aam
jo
push
rcl
insl
jo
and
cmpb
push
inc
es
mov
add
push
fsubrl
sti
or
cld
rolb
xchg
mov
test
jle
fstpt
test
mov
jp
repnz
in
xchg
xor
xchg
and
xchg
shl
and
xchg
aad
cmpsb
push
push
je
cmpb
mov
in
mov
in
xchg
xor
je
in
xlat
cmpsb
dec
sarb
push
pop
movsb
mov
inc
adc
test
mov
sub
hlt
push
mov
mov
cmpsb
rol
fstpt
push
push
shlb
cmp
ret
ds
pop
jl
subl
into
jl
and
jl
fildl
ret
cwtl
and
je
notl
add
xor
and
sbb
js
sub
mov
and
sub
jne
mov
inc
mov
xor
mov
adc
mov
or
aas
jbe
out
push
aas
test
pop
xchg
mov
xchg
je
xchg
xor
imul
cwtl
sub
xchg
or
jecxz
std
es
clc
lret
or
add
ja
xor
int
mov
or
imul
rorl
and
fdivs
fdecstp
popa
shrb
enter
push
out
out
imul
fldcw
loop
cmp
push
aam
and
mov
cld
rclb
daa
or
outsb
lods
js
cmp
fsubp
sbb
inc
pop
mov
mov
xlat
les
cwtl
push
xchg
inc
mov
xchg
dec
andb
idivb
aaa
ret
mov
imul
nop
adc
movsb
fistpll
loop
popa
jnp
cwtl
repnz
sub
cwtl
xchg
pop
out
xchg
mov
mov
jl
in
fldenv
loopne
fsubrs
lds
push
imul
jns
imul
insb
push
pop
mov
push
mov
and
es
push
mov
mov
xchg
lcall
cld
iret
cwtl
inc
mov
xchg
cld
xchg
mov
adc
in
inc
movsl
scas
or
xlat
repz
cmp
frstor
lret
sbb
cmp
scas
sahf
pop
add
pop
mov
imul
xchg
aad
jle
dec
mov
cmp
clc
adc
cmp
lock
dec
outsb
mov
and
cmp
mov
inc
in
sub
lock
xchg
mov
inc
rolb
mov
push
mov
jmp
pop
and
mov
cmc
jb
icebp
sbb
dec
loope
orl
es
dec
sbb
inc
jb
cld
mov
shl
sub
dec
sbb
xor
repz
jmp
testb
popl
jecxz
cmp
mov
or
jne
add
xor
push
pop
aaa
into
outsl
bound
loope
imul
sub
jg
lea
mov
out
jns
xchg
or
jne
pop
push
lret
out
xor
je
pop
cmpsb
mov
mov
gs
jl
inc
mov
dec
je
loope
insb
jne
dec
movsb
repz
jp
pop
js
iret
insl
and
jbe
pop
push
pop
jl
mov
clc
popa
fisttpl
imul
mov
fs
repnz
fs
repnz
mov
add
inc
mov
mov
fsubrl
or
mov
sbb
sar
lds
adc
stos
test
ljmp
push
jb
add
insb
pop
xchg
inc
jne
insl
mov
dec
jp
out
xchg
ljmp
icebp
mov
fisttpll
fistl
rclb
int3
cli
in
cmp
clc
mov
mov
mov
cwtl
mov
popa
jb
and
je
jl
pop
pop
clc
pop
stos
jb
je
je
push
pop
sbb
icebp
fmull
xor
fldenv
scas
fdivrs
ds
and
sahf
inc
dec
mov
cmp
jnp
pop
add
daa
push
and
mov
inc
jae
sub
jb
sti
std
stos
mov
fs
std
or
cli
and
xchg
addr16
push
lods
or
jle
and
and
push
xor
mov
and
insb
pop
je
mulb
std
cmp
test
sub
mov
jg
mov
daa
lret
xchg
scas
cmp
icebp
and
imul
xchg
jecxz
pop
cld
mov
popa
mov
mov
and
xchg
outsb
add
sub
add
mov
mov
sub
inc
push
cmp
test
cmp
mov
sbb
sahf
push
loope
add
addr16
fprem
mov
add
mov
and
popa
fiadds
mov
adc
adc
adc
das
jge
rorb
xchg
mov
adcl
rcll
icebp
adc
cli
or
mov
xchg
push
and
sbb
rcll
mov
scas
cmp
ss
and
jns
sbb
enter
pop
inc
and
xlat
mov
test
dec
std
and
test
jle
es
shrb
fstps
mov
xchg
add
lods
sarb
jae
mov
lret
pop
loop
push
cld
mov
pop
pop
ja
pop
pop
mov
inc
cld
mov
loopne
adc
js
xchg
imull
and
inc
ret
pop
push
push
pop
mov
push
in
lret
sub
jb
or
mov
sub
pop
sarb
jge
sub
push
out
pushf
xor
adc
addb
iret
pop
loopne
adc
xor
outsb
xchg
out
cmp
aad
push
xor
fs
sub
icebp
adc
std
add
clc
adc
xor
and
pop
push
xlat
rclb
push
ret
push
lahf
mov
mov
add
loop
movsl
sahf
jle
ja
insl
lods
shlb
lret
inc
push
mov
imul
mov
add
mov
punpcklbw
ret
rcr
repz
loope
mov
lret
dec
shlb
daa
push
mov
adc
jns
add
cmc
aas
mov
js
mov
js
xor
jno
imul
mov
les
std
lea
aam
ffreep
shll
push
inc
enter
mov
cwtl
popa
cld
test
cld
into
mov
jno
fcomps
out
mov
jmp
mov
or
ror
jae
fldt
mov
repnz
jle
jle
stos
jp
sub
dec
sahf
pop
into
adc
or
mov
xlat
std
not
ds
sub
dec
inc
repz
cmp
adc
add
mov
es
adc
jne
jo
repnz
daa
leave
xlat
icebp
cmc
rorl
mov
push
nop
mov
push
mov
xchg
cmp
iret
adc
pop
aam
push
jae
or
jp
fucomip
hlt
dec
or
cmc
ja
or
cmpsl
lods
in
movsl
adc
fisttps
pop
shrb
hlt
and
pop
cmp
scas
jbe
imul
jbe
push
cld
xchg
cwtl
push
mov
cltd
insl
out
stos
mov
or
shll
mov
test
filds
lds
fwait
out
sarb
repnz
lcall
imul
mov
popf
xor
fucom
lret
adc
out
xchg
call
xchg
out
lods
cwtl
out
mov
out
sub
out
pop
mov
pop
out
push
pop
in
dec
out
movsl
test
dec
xchg
mov
repz
adc
push
xlat
sbb
push
ret
pop
not
sahf
fnsave
push
idivl
push
movsl
jns
daa
idiv
int3
mov
pop
js
out
dec
scas
sarl
fdivr
es
idiv
inc
repz
adc
cmp
xchg
xor
sahf
into
js
jg
fs
fnstenv
dec
adc
dec
and
adc
fmul
mov
std
and
leave
or
sbb
xchg
ljmp
xchg
gs
inc
js
dec
lods
std
adc
adc
cmpsl
dec
cmp
scas
cmp
mov
popa
imul
fdivrs
and
shr
sub
cmp
lods
std
scas
iret
out
xchg
mov
add
adc
testb
andb
xchg
mov
sub
clc
into
nop
out
and
arpl
shll
out
push
add
pop
push
xor
lahf
push
sbb
lahf
mov
xor
xlat
fmuls
mov
pop
jmp
add
pop
mov
andb
mov
ljmp
andl
mov
movsl
xchg
add
add
push
cmpsl
mov
les
subl
jb
scas
push
cld
push
scas
mov
les
aas
scas
add
push
bound
std
stos
pusha
shlb
ds
cwtl
adc
mov
test
jecxz
push
mov
je
shll
xor
mov
mov
cld
jl
js
movsb
aam
pop
pop
aas
adc
mov
mov
dec
es
nop
aam
jo
mov
ret
fnstenv
lret
mov
mov
inc
dec
mov
je
repz
lmsw
adc
mov
inc
shll
popa
inc
shl
add
fs
mov
dec
fsubl
es
scas
enter
push
mov
in
daa
jne
jmp
xchg
and
dec
cmpsl
repz
in
daa
ds
or
ljmp
int
pxor
adcl
mov
mov
lahf
xchg
scas
jle
call
out
cmp
adc
stc
pop
jl
shrb
sub
push
cmpsl
xchg
mov
adc
rclb
xor
test
pop
dec
xor
loop
mov
dec
push
mov
es
pop
cwtl
lea
adc
jne
xchg
or
pop
gs
lods
adc
pop
mov
cmp
mov
push
mov
stc
mov
mov
xchg
pop
fstps
cli
adc
test
adc
fadd
outsl
and
and
outsl
fdivs
push
add
inc
hlt
ljmp
add
fildll
inc
repz
mov
pop
dec
jno
aam
sbbb
mov
sub
ja
mov
xchg
sbb
int3
out
pop
inc
pop
fs
adc
ja
popa
mov
lods
cmp
es
mov
xchg
pushf
mov
addb
stos
mov
pop
dec
es
sub
pop
dec
aad
push
pop
jne
push
movsb
rcll
pop
lods
mov
push
shrd
pusha
jae
decl
test
sahf
pop
aas
inc
sub
inc
pmaxsw
xchg
pop
mov
aaa
adc
pop
pop
icebp
jle
add
call
push
or
fadd
sub
int
sbb
xchg
xlat
sbb
pop
lea
pop
movsb
repz
dec
loope
mov
pusha
pop
jmp
imul
push
lret
sub
jne
lcall
adc
sbb
ds
adc
sbbl
sub
out
scas
sub
into
sub
daa
shr
fadd
mov
or
ret
xlat
xchg
mov
imulb
xlat
daa
aad
rep
fisubs
test
daa
iret
ret
add
scas
rcl
xorl
dec
lret
push
into
sbb
xchg
pop
push
jno
push
lahf
cmp
push
push
iret
cltd
std
stc
jp
mov
or
cld
lret
mov
cmpsb
mov
test
fprem1
mov
sbb
das
js
cmp
mov
rcrl
mov
xchg
sub
loopne
push
sub
aas
or
xchg
leave
pop
xor
adc
pop
dec
aaa
sbb
xor
mov
inc
jae
mov
cmpsb
lea
push
mov
push
mov
xchg
or
test
test
std
int3
push
pusha
and
jo
aaa
ret
repz
jecxz
push
and
sub
andb
sub
ja
cmpsb
jecxz
out
xor
mov
or
mov
lcall
mov
movsl
rcll
in
xchg
into
and
loope
dec
popa
ja
dec
and
icebp
adc
xchg
cltd
push
xchg
mov
jp
enter
insb
aad
cs
xchg
inc
in
in
loop
xchg
lcall
inc
rorb
in
add
xor
shrb
testl
jnp
or
inc
das
ds
sbb
xchg
std
daa
and
mov
inc
rorl
call
xchg
mov
xchg
stos
add
inc
into
aam
ljmp
push
push
mov
je
mov
gs
ja
arpl
ljmp
sbb
into
out
popa
add
mov
std
loope
repz
out
daa
movsl
mov
insb
and
mov
mov
je
mov
inc
push
push
cltd
cmp
mov
fcmovnbe
lcall
fidivrs
fdivl
repnz
fnclex
xchg
call
fstp
sarl
mov
add
push
cmc
inc
mov
cltd
inc
jecxz
fwait
adc
or
stc
fiadds
dec
jle
shll
dec
mov
add
mov
sub
loop
mov
repnz
jge
aaa
dec
scas
sbb
push
jmp
jge
sbb
or
stos
fistpl
or
adc
out
cmp
test
rorb
mov
adc
mov
popa
xchg
cmc
test
cmpsl
xor
je
pop
add
js
xchg
jae
out
mov
je
out
lds
mov
out
std
sbbb
repnz
jle
push
fsubrp
pop
pusha
push
jl
dec
loop
rorb
lds
js
imulb
pop
incl
cmc
testb
jnp
ljmp
inc
mov
shlb
aad
pop
pop
gs
orl
jbe
inc
fistpl
mov
push
cmpsb
inc
fcmovnbe
and
add
mov
or
jle
sbb
mov
jle
cmp
mull
jle
movsl
pop
xchg
out
decl
sbb
mov
sub
sub
scas
lods
in
aas
imul
je
inc
repz
push
sbb
xchg
stos
cmp
cltd
cwtl
cmp
in
rorl
cmp
xor
mov
and
enter
cmpsl
mov
pushf
mov
int3
nop
les
out
lahf
adc
cmovs
jmp
fwait
push
loope
xor
inc
fisubl
bound
and
aad
pop
xchg
xchg
and
mov
inc
es
insb
mov
adc
js
xchg
daa
cmpsb
mov
ja
xor
icebp
stos
addr16
and
lret
test
stos
repz
je
jp
leave
mov
push
mov
push
cmpsb
out
lods
pushf
mov
and
add
mov
lea
leave
and
push
mov
sahf
add
push
mov
add
in
test
cmpsb
int3
jb
fiaddl
mov
cmpsb
jl
dec
push
jl
sarb
mov
movsl
xlat
pop
inc
cmpsb
push
pop
mov
mov
cmpsb
test
adc
insl
or
shl
lods
or
rol
push
dec
sub
push
push
test
scas
pop
sub
push
sbb
int
int3
ljmp
sbb
cmpsl
scas
fnstenv
daa
scas
mov
scas
dec
mov
push
xchg
lret
mov
lods
dec
fistps
scas
push
cmc
pusha
out
push
pop
pop
pop
or
fisttpl
jb
sub
mov
mov
and
and
mov
decb
pavgw
js
int
es
imul
iret
repz
cmp
sub
xchg
cltd
ja
dec
cmp
out
movsl
inc
adc
mov
popa
stos
cmpsl
loope
sub
and
syscall
push
in
mov
sub
sub
stos
fidivrs
ss
pop
out
push
ficoms
out
pop
mov
movsb
pusha
jns
or
mov
and
nop
inc
mov
pop
cmp
jecxz
pop
jg
in
je
es
adc
fsubs
sub
ja
and
gs
aas
push
mov
push
and
inc
xlat
pop
loop
lret
lods
adc
mov
and
mov
pop
jecxz
and
xchg
push
test
jbe
cmp
mov
and
outsb
stc
pop
pusha
dec
std
inc
js
imulb
daa
ret
pop
jae
mov
insl
in
cli
lods
mov
add
out
in
jge
and
fnstcw
cmpl
loope
jg
push
daa
cmp
and
mov
testl
or
imul
and
xchg
fstpl
xchg
mov
testl
xchg
out
or
jae
ljmp
rcrb
push
jp
pusha
movnti
inc
mov
adc
cltd
mov
push
pop
mov
xchg
aam
xor
or
ja
mov
push
push
xchg
aad
inc
rcr
adc
es
fs
das
adc
data16
lcall
aad
jno
je
lock
mov
push
push
or
inc
imul
xchg
add
mov
xchg
xchg
cmp
lcall
sahf
lods
sub
lods
mov
aaa
outsb
pop
imul
xor
jo
outsb
dec
lods
in
cmp
aas
mov
lret
aad
mov
mov
adc
cmp
ret
or
jbe
ljmp
call
into
xlat
add
lahf
cmpsl
add
xchg
fldenv
xchg
insb
mov
jne
mov
cmpsl
lret
push
jbe
xchg
push
mov
clc
sti
mov
jge
mov
push
je
pop
pop
dec
or
xchg
lahf
xor
jb
mov
push
xchg
pop
inc
fs
es
jo
iret
xchg
jno
stc
push
incl
adc
rolb
push
test
repz
inc
jge
int3
mov
push
cld
cmp
adc
dec
push
mov
mov
add
stos
and
mov
out
cmpsl
or
popl
mov
jle
cmp
pop
insl
pusha
cwtl
insb
and
enter
adc
outsb
cmc
insl
or
jnp
inc
call
adc
es
lret
popf
stc
sarl
add
mov
dec
fildl
mov
push
aaa
jmp
cmp
mov
lcall
je
and
jae
es
test
xchg
xor
mulb
dec
and
shlb
scas
adc
test
push
jecxz
cs
cmp
rcll
mov
push
mov
test
test
in
aam
fldt
inc
push
popa
mov
es
jnp
std
stc
push
push
xor
xor
shll
daa
xor
test
push
push
jno
xchg
gs
mov
cmp
aas
sbb
dec
das
jg
adc
fs
jmp
jbe
movsb
scas
push
push
call
xchg
mov
cmp
test
mov
js
out
es
cmp
inc
es
es
es
push
adc
cltd
mov
lcall
mov
mov
aaa
and
addb
aad
and
clc
sahf
into
les
pop
and
dec
enter
and
mov
jb
out
xchg
adc
jb
out
dec
clc
or
shrb
adc
daa
add
call
xor
addr16
or
mov
pop
pushl
inc
mov
test
pop
pop
shlb
fpatan
push
xchg
iret
movsl
cmp
adc
sub
addr16
rorl
jo
sub
call
sar
scas
je
adc
push
std
mov
push
cmpsl
scas
cltd
push
adc
push
enter
inc
cmpsb
nop
js
outsl
xchg
push
adc
roll
push
leave
je
adc
cmpsl
ficomps
enter
js
aaa
and
inc
sti
mov
ja
cmp
mov
cmc
clc
push
pop
xlat
xor
pusha
icebp
aas
call
inc
and
mov
xchg
and
adc
shlb
pusha
icebp
rcll
out
jmp
call
jne
es
push
js
dec
pop
scas
jns
sbb
clc
push
mov
xor
cmpsb
out
jo
loop
pop
sbb
insb
push
xchg
pop
adc
fnstcw
ror
nop
fldenv
xor
fld
dec
repnz
aam
push
repz
mov
pop
lds
jge
mov
jb
imul
or
loope
call
and
add
jl
jo
push
sbb
sbb
jle
push
inc
xchg
jbe
push
inc
adc
pushf
pop
mov
pusha
test
js
push
fists
jmp
inc
mov
jmp
shlb
hlt
sarl
xchg
sub
rcr
push
or
inc
je
outsb
jg
subl
lds
repnz
sbb
fs
ljmp
inc
outsl
jmp
mov
dec
inc
and
mov
jecxz
sbb
jnp
mov
push
fldz
enter
ss
and
stc
mov
mov
popa
idivb
iret
insb
sbb
leave
or
xchg
lahf
or
push
lahf
sub
sub
rolb
cli
xchg
scas
pop
stc
inc
sti
les
and
data16
jb
mov
sbb
jnp
lahf
loop
mov
imul
mov
push
pop
cli
jp
inc
outsl
xchg
popf
ficoml
and
std
xchg
mov
mov
fdivr
adc
scas
clc
push
adc
push
add
cmpl
and
fwait
insb
mov
subl
ljmp
mov
mov
jmp
sbb
adc
mov
mov
xchg
ds
cmp
xor
or
aaa
mov
enter
push
push
push
xchg
add
call
xor
lret
outsb
lret
or
das
int3
xchg
lahf
sbb
xchg
adc
mov
mov
xchg
xchg
ret
mov
mov
js
das
lret
repz
mov
mov
cltd
mov
xor
test
mov
icebp
je
xorl
mov
cltd
push
inc
inc
mov
jbe
adc
aad
fucomip
mov
andl
in
lahf
int
mov
mov
ror
stc
dec
mov
mov
push
pop
adc
and
push
mov
xchg
loop
add
test
ljmp
pop
xchg
cwtl
cld
xor
into
je
test
mov
dec
mov
push
jnp
adc
or
xor
inc
pop
jno
popa
pop
popa
or
popf
xchg
jbe
inc
scas
xor
pop
rcl
daa
or
es
daa
js
shll
repz
mov
pop
repz
bound
ds
pop
sub
jecxz
mov
mov
mulb
mov
lods
adc
lods
cmpsb
mov
mov
xchg
ret
rorb
add
int
daa
les
jl
dec
jge
jbe
dec
cmp
iret
mov
jae
mov
push
cmp
jp
lods
mov
push
mov
and
xchg
adc
push
xchg
aad
lcall
icebp
cs
or
scas
stc
and
cmp
popf
fwait
adcl
sub
repnz
outsl
popf
sub
lds
fdivrs
shll
cld
iret
inc
push
xor
ljmp
cmc
inc
dec
mov
push
mov
jg
imul
fimuls
cmp
mov
inc
bound
lcall
cmc
adc
data16
loopne
sub
popa
mov
dec
add
push
outsl
dec
sub
jno
push
sahf
adc
xor
int3
loop
xchg
jno
out
pop
icebp
dec
xor
inc
bound
test
nop
imul
fdivr
jl
rcll
push
jb
repnz
sbb
jmp
xchg
lods
sub
pop
nop
inc
lods
mov
push
jb
es
out
push
inc
and
mov
nop
je
push
cmpsl
in
pusha
aad
jmp
xchg
add
loope
mov
mov
out
loope
or
adc
out
stos
stos
pop
push
cwtl
test
out
out
sub
iret
scas
loopnew
hlt
dec
xchg
xchg
lret
daa
push
xchg
dec
daa
jae
test
mov
enter
inc
pop
lret
clc
cmc
push
mulb
aam
xor
popa
divb
in
lahf
adc
jae
div
shl
or
shll
std
mov
xorl
jle
js
inc
addr16
dec
cmpl
pop
jle
mov
imul
jmp
push
push
push
dec
fs
or
movsl
stc
jne
aad
and
inc
or
pop
es
hlt
icebp
sub
shlb
or
xchg
xchg
adc
aam
popf
mov
mov
push
out
shlb
push
das
pop
or
inc
cmc
movsb
xchg
xor
insl
outsl
jae
jp
add
rcl
mov
jno
inc
adc
jno
xchg
es
movsb
repnz
das
push
mov
pop
inc
cmp
sub
fldt
insb
mov
xchg
dec
js
adc
incb
cmpsl
lods
or
icebp
data16
cmp
push
pushf
int3
fcmovne
cwtl
sahf
push
cld
js
inc
je
jecxz
aas
negb
sbb
or
jle
sub
imul
shl
lahf
push
jae
ja
fnstcw
leave
lods
je
outsb
mov
js
cmp
push
xlat
xor
mov
ds
std
sahf
bound
add
stc
push
mov
xor
add
mov
fbstp
incl
iret
lods
popa
pop
and
xchg
mov
add
and
test
insb
jae
xchg
mov
and
xor
cmp
mov
push
cwtl
test
mov
or
leave
pop
jae
popf
or
loope
mov
xor
xor
outsb
insb
rcll
cmp
fdivrp
shl
add
pushw
add
loopne
add
push
add
andb
js
push
add
adc
jae
xor
adc
add
push
out
pop
push
add
nop
in
ds
xor
fistpl
xlat
inc
jl,pt
push
jl
js
scas
add
movsb
imull
dec
cwtl
sub
scas
test
mov
scas
std
je
adc
lods
movsb
xchg
scas
xor
push
or
lods
jae
sub
or
mov
mov
jp
rcrl
out
jg
add
xor
scas
dec
dec
cmp
cmc
cmp
and
fistpll
out
out
inc
daa
mov
jle
ljmp
imul
popa
cmp
ljmp
push
mov
inc
ljmp
cltd
fisubl
adc
mov
sub
enter
and
rolb
mov
jb
push
push
push
pop
or
sub
add
test
add
sub
pop
sub
jl
or
js
lds
push
sub
mov
xchg
sub
inc
push
pop
loop
jle
mov
cld
iret
insl
dec
into
mov
pop
ja
xchg
test
jmp
dec
adc
in
push
mov
movsl
iret
stos
push
pop
pop
js
xor
clc
push
es
dec
cmp
cltd
pop
pusha
roll
cmp
and
dec
adc
shr
add
sbb
sarl
xor
mov
daa
or
xor
repnz
enter
enter
enter
jbe
enter
enter
xor
xor
enter
std
mov
adc
shl
mov
push
mov
shrb
repz
mov
je
leave
rcl
pop
out
mov
stos
pop
jne
aad
push
xchg
push
loop
mov
fsubrs
lock
mov
dec
jecxz
pop
xchg
mov
or
mov
mov
sub
push
push
mov
lret
xlat
daa
mov
or
or
fwait
jbe
push
or
call
pop
and
stos
mov
loopne
adc
cltd
fmul
mov
sbb
mov
xchg
loopne
adc
fst
pop
adc
mov
sbbl
repz
jbe
mov
minps
repz
loopne
push
shrb
lret
mov
call
es
mov
jmp
repz
dec
addr16
cmpl
mov
cs
out
and
sub
out
xor
mov
mov
rcrl
clc
aad
xor
test
push
mov
dec
add
xchg
ja
sbb
adc
adc
imul
push
xchg
dec
mov
mov
push
and
dec
out
adc
sub
stc
sub
es
lods
xchg
clc
pop
out
mov
cmp
pop
movsl
sbb
data16
adc
clc
ret
push
stos
pop
clc
jmp
dec
push
mov
clc
or
and
shlb
lret
and
adc
std
adcb
fistpl
mov
orb
sbb
add
mov
mov
xor
nop
je
mov
and
es
and
mov
nop
call
es
js
nop
xchg
int3
nop
or
xlat
xchg
fisttps
mov
loop
jb
pop
hlt
push
pop
cs
adc
xor
mov
aam
mov
aad
sub
inc
mov
cwtl
movsl
repnz
stos
cmc
sub
adc
in
jbe
xor
outsb
dec
adc
imul
ss
arpl
repz
cmpsl
scas
aad
push
bound
jl
scas
adc
mov
sub
loope
xor
mov
sub
ja
js
std
pop
jno
lret
xchg
lods
lea
call
leave
mov
test
jnp
or
js
ficoml
cmp
pusha
test
jle
and
sbb
or
lock
pop
popf
int3
jbe
lahf
jl
jl
pop
leave
jp
es
jmp
inc
xor
push
jg
loopne
mov
mov
or
add
es
adc
das
ds
fstl
stc
jp
sar
movsl
pop
push
addb
test
mov
add
ja
sahf
out
cmp
test
mov
mov
into
ss
or
imul
stos
push
or
cmp
jae
sarl
mov
inc
daa
enter
les
idivb
cmp
jnp
enter
pop
cmp
mov
xlat
pop
in
fnstcw
fcmove
ljmp
and
inc
nop
xor
push
fsubrs
pop
pop
sub
mov
int3
inc
scas
shrl
fs
rcrl
loope
daa
push
ds
jae
pop
loope
sub
or
dec
push
hlt
add
insb
in
arpl
in
daa
sbb
out
ret
icebp
or
inc
push
loopne
mov
imul
loopne
sub
dec
jge
mov
movsl
js
ficompl
pop
dec
stc
mov
mov
mov
pop
mov
cmp
std
rep
jmp
jmp
popf
sbb
or
inc
xchg
sub
mov
xor
std
cwtl
xor
push
push
xchg
and
xchg
movsl
fwait
int
test
mov
jge
adc
icebp
shrl
push
sbb
leave
xor
fs
xchg
adc
icebp
cmp
cmpsb
popa
xor
xor
xor
scas
sub
adc
pop
ja
idiv
lea
pusha
sub
or
and
pusha
mulb
dec
es
leave
push
jle
sub
push
cwtl
icebp
push
and
cmpl
xor
xchg
and
or
push
jae
shlb
cmpsl
popl
xchg
mov
sub
jnp
sub
imul
sbb
dec
cmp
mov
pop
icebp
repz
repnz
mov
dec
adc
out
std
je
jo
xor
push
or
addr16
daa
ss
sub
jo
test
outsl
jbe
mov
xor
adc
fisttps
imul
or
xchg
negl
rorb
jmp
fisubrs
je
movsl
js,pt
clc
popa
les
mov
mov
mov
pop
fnstsw
add
and
xchg
js
mov
jg
mov
nop
sarl
fldt
addb
mov
dec
add
sub
push
mov
pop
jns
dec
mov
push
cmp
mov
xchg
cmp
roll
xchg
mov
scas
ss
subb
xor
adc
or
stos
mov
inc
cmp
cli
rolb
jg
ljmp
sbb
pop
sbb
jecxz
pop
or
popa
mov
fimull
movsl
fmul
out
sbb
cltd
adc
inc
aad
fnstcw
inc
pusha
iret
test
ss
sub
adc
inc
rcrb
mov
lods
inc
adc
xchg
int
les
pop
pop
adcb
dec
insl
pop
repnz
ficomps
mov
adc
mov
inc
mov
lahf
fiadds
jne
dec
push
daa
ret
adcb
cmp
subb
xchg
ret
sub
ja
push
mov
push
pusha
mov
sub
and
and
outsl
scas
xchg
das
popa
mov
sub
sbb
mov
mov
sahf
and
mov
pusha
and
mov
lds
outsl
cmp
ret
out
push
push
and
xchg
ret
pop
out
and
dec
je
and
fs
daa
in
fnstenv
fs
ljmp
fwait
sbb
test
xor
jae
pop
adc
jae
jne
sahf
sub
adc
dec
movsl
ror
mov
jl
inc
rol
bound
es
jo
jno
lahf
aad
push
idivb
cmp
movsb
inc
stc
popf
pop
add
jno
mov
mov
fadds
push
cmp
lret
or
sbb
pop
gs
jo
mov
xlat
out
jb
sahf
cmc
pop
mov
cs
inc
mov
lretw
cmp
mov
out
and
xor
std
lcall
sbb
lret
mov
adc
ljmp
aam
stc
push
and
mov
jnp
lcall
add
or
ds
ficompl
cltd
repnz
cli
sbb
adc
dec
or
outsb
xor
sbb
adc
pop
inc
pushf
cmpsb
jecxz
in
cmp
xor
cmp
mov
cwtl
pop
clc
add
pop
js
xor
push
nop/reserved
mov
pop
jbe
rcll
sbb
shll
lds
xchg
call
in
xor
std
test
dec
adc
or
jnp
mov
push
pop
sub
and
cli
rolb
jle
jmp
mov
inc
jb
sbb
mov
sub
or
shrl
push
test
sbb
xchg
jns
sub
pop
icebp
mov
pop
and
call
jb
mov
adc
imul
add
mov
insb
cmc
cwtl
push
adc
stos
subb
pop
xor
and
cmpb
cmpsl
arpl
sub
lock
icebp
in
in
bound
sub
sarb
lock
fdivs
push
mov
aad
xchg
loopne
fldenv
cmp
sub
xor
test
cmp
mov
push
push
xchg
imul
je
adc
mov
scas
sub
add
gs
inc
js
and
lcall
test
mov
push
xor
popf
lock
and
pusha
ljmp
bound
icebp
test
mov
std
pop
dec
mov
insb
mov
pop
mov
inc
cli
fprem1
pusha
int3
mov
sahf
xchg
aaa
sbb
mov
or
push
ss
fs
xor
sahf
sbb
inc
xchg
add
adc
jle
je
push
or
inc
sbb
or
adc
loopne
push
xchg
mov
push
xchg
jae
ja
ss
clc
sbb
adc
iret
js,pt
sbb
jecxz
insb
popf
popa
inc
push
xor
mov
idivl
lret
into
sbb
add
push
insl
ss
cmc
sub
push
xor
dec
in
aas
cmpsb
jl
fsubrs
jae
adc
cmp
pop
ds
and
mov
sbb
dec
ret
lock
push
or
mov
jae
es
int
jge
or
insl
or
mov
popl
mov
cld
adc
push
je
mov
cwtl
push
xchg
inc
jge
stos
add
aam
jae
aam
jbe
add
push
pusha
cmp
sub
out
in
and
sbb
cmp
adc
cltd
js
jmp
cltd
mov
push
mov
jbe
mov
and
xchg
pop
cmp
lahf
jae
das
sub
loopne
jmp
pop
jle
mov
or
dec
jmp
pop
push
cmp
cmpsl
out
sub
or
mov
add
mov
ss
iret
sbb
insb
loopne
adc
je
jp
pusha
cli
mov
jo
push
sbb
pop
jmp
xor
dec
clc
and
push
jo
cmp
sti
repnz
xor
push
sbb
push
dec
lods
rorb
in
jmp
sub
push
stc
in
test
fnstsw
cwtl
mov
pop
inc
inc
adc
insl
nop
test
lods
fwait
ja
ljmp
test
or
jle
or
sbbb
inc
jo
aaa
insb
icebp
push
add
jp
sbb
mov
add
adc
ss
xor
lods
adc
sub
mov
mov
xor
jbe
fmul
jle
push
sbb
and
push
test
lea
xor
jge
pop
dec
jb
clc
insl
push
pop
jo
inc
cltd
mov
movsb
jge
jbe
fdivs
mov
or
pop
dec
aas
pop
xor
data16
stc
mov
mov
inc
cwtl
in
dec
arpl
and
xchg
sbb
cmp
cmp
lock
mov
mov
sbb
ljmp
cltd
xchg
lret
add
xchg
popf
pop
lds
pop
xor
cld
jno
outsb
lock
adc
lds
sub
lods
clc
cmp
pop
lret
mov
xor
and
add
ljmp
push
mov
scas
fsubrs
xchg
rclb
clc
xor
mov
nop
clc
scas
mov
js
scas
mov
cmp
mov
mov
or
scas
inc
pop
sahf
xchg
and
push
les
decl
lods
mov
test
xchg
xor
ret
ret
pop
or
sbb
pop
cmp
mov
sbb
mov
loopne
pop
push
lods
popf
mov
sbb
push
js
dec
jae
inc
mov
adc
pop
and
xor
jns
pop
adc
jae
sub
in
out
or
data16
cld
push
stos
jp
xchg
jns
jae
mov
test
or
lret
push
das
jae
clc
or
jp
cs
imul
ja
sub
mov
push
mov
and
mov
mov
pop
pop
sbb
and
sub
sub
push
loope
ret
inc
jmp
jb
pop
rorb
test
add
imul
push
jmp
xor
in
fsubs
pop
sti
cmp
pop
sub
add
mov
mov
sahf
mov
lea
sub
movsb
pop
mov
jl
das
loope
fstpl
cmpsb
inc
pop
dec
test
pop
cwtl
pusha
js
outsl
movb
push
mov
xor
je
movb
jecxz
cs
pop
popa
andb
jae
testb
sbb
sbb
sub
sub
xchg
sbb
mov
add
jbe
jns
sub
sbb
gs
cmp
sub
jmp
sbb
xchg
push
jle
mov
jno
sub
fwait
dec
lock
js
je
enter
or
mov
pop
cwtl
jle
jbe
sbb
pop
inc
mov
shrb
lock
ja
xor
into
inc
lds
push
aas
mov
mov
sbb
scas
out
push
push
sub
jns
or
push
mov
mov
jnp
js
lret
sub
sti
adcl
std
jbe
pop
insb
aaa
add
cmpsb
int
push
jg
mov
mov
es
mov
xor
sbb
adc
sbb
mov
enter
sbb
xlat
or
fsubs
and
push
push
mov
js
jg
packssdw
imul
push
repnz
sub
sbb
inc
xor
dec
mov
jae
fidivs
dec
pop
data16
or
pop
mov
adc
insb
cmp
lock
xor
popa
mov
mov
mov
mov
add
jno
je
pop
orl
xchg
shlb
push
xor
jns
inc
loop
mov
add
dec
xor
dec
call
clc
pushf
mov
cmp
fs
ss
xor
stos
jge
sub
xor
sub
icebp
adc
es
jge
pop
xchg
mov
fldl
push
repz
pop
xlat
cmp
xor
push
into
in
add
bound
push
hlt
adc
sub
hlt
mov
cmpsl
pop
push
imul
subl
push
push
fbstp
xchg
mov
test
loop
mov
push
mov
dec
cmp
jbe
cs
sbb
imul
ljmp
add
mov
es
xchg
pusha
mov
adc
lock
pop
cwtl
sbb
insb
xchg
lds
fmuls
jae
pop
mov
inc
aam
pop
cmp
dec
jo
xchg
sub
nop
imul
pop
mov
push
js
adcl
and
insb
call
inc
xchg
xor
cmp
pop
jae
outsb
insb
dec
mov
cwtl
iret
mov
cmp
lods
pusha
mov
pusha
inc
xor
outsb
xor
xor
out
add
lret
cmp
and
sbb
or
push
fcmovb
into
mov
xor
push
ljmp
or
cmpsl
pop
and
insb
fisubl
fidivl
lock
inc
mov
or
popa
add
inc
cmp
and
sbb
dec
cmp
and
xchg
jbe
mov
cmp
fwait
xor
testb
lods
or
dec
xchg
sbb
popf
fdivs
mov
das
adc
push
jg
pop
outsl
xor
insl
push
sub
xor
inc
test
jo
mov
sbb
pop
ss
jae
jbe
push
icebp
test
fs
je
and
or
nop
mov
inc
xchg
loopne
push
orb
mov
bound
cmp
mov
cwtl
pop
jle
movb
mov
adc
xchg
push
jl
jb
mov
pop
push
fmull
sub
push
decl
lods
std
daa
pop
insb
adc
dec
sub
pop
inc
test
movsl
insl
jmp
or
les
cs
pop
je
adc
or
test
adc
movsl
push
and
sahf
mov
mov
mov
std
dec
jns
cmp
dec
mov
mov
call
add
cmp
loopne
lret
pop
cmc
scas
push
iret
lea
rolb
adc
fs
mov
jnp
fimuls
dec
fucom
imul
sti
mov
push
rol
scas
xchg
fucomi
insl
or
data16
mov
push
clc
mov
pusha
js
jb
jae
pop
adc
jne
push
sub
jo
jae
push
push
xchg
mov
add
in
jmp
std
mov
mov
inc
xor
xchg
cmp
lock
push
xor
jne
pop
aas
test
test
add
rcrl
fsts
add
mov
fldenv
and
lahf
adc
jecxz
cwtl
sbb
xor
das
mov
cmc
push
ss
cmp
addr16
inc
xchg
mov
push
or
leave
stos
cmp
cmc
in
mov
pop
mov
add
in
stc
scas
cltd
cmp
xchg
mov
aaa
in
push
cs
rol
inc
mov
sbb
jb
push
xchg
mov
shlb
pop
xchg
test
dec
pop
adc
loopne
cltd
jae
popa
scas
push
mov
orl
loopne
and
push
xor
or
sbb
je
mov
mov
jle
lods
jo
adc
xor
or
shrl
rol
je
jecxz
data16
push
jp
scas
xor
call
sarl
and
jbe
out
xor
lods
fdivs
mov
jbe
push
test
loope
mov
ret
mov
shr
pop
push
clc
inc
adc
inc
and
mov
mov
sub
or
inc
or
pusha
mov
int3
sarb
jae
sub
pop
sbb
add
cmpsb
jle
pusha
mulb
jle
dec
cmpsl
add
sub
xchg
jae
cmp
sbb
sbb
cltd
test
ja
jo
jle
or
stos
in
cwtl
xchg
sub
pop
add
dec
push
cmp
subl
jns
inc
jo
insb
loop
jno
stc
and
jbe
mov
sub
jne
cmp
xchg
and
push
dec
sub
mov
repz
mov
test
outsb
jecxz
sub
imul
add
std
push
cmp
sub
fcomps
cmp
ret
adc
cld
or
mov
sahf
sbb
addr16
cmp
loope
aaa
gs
loope
loopne
sub
xor
clc
mov
out
loopne
cs
xchg
stc
sbb
cld
aas
add
in
repnz
sahf
and
lret
sbb
cmp
xchg
xchg
loope
pop
dec
and
aad
nopl
sub
mov
mov
loope
mov
mov
sarb
dec
xor
in
je
xor
data16
call
pop
mov
in
cltd
movsl
out
pop
cmp
and
push
sbb
orl
or
and
jns
xchg
xor
les
daa
sbb
gs
jmp
rcrl
imul
sahf
add
mov
ss
cmc
orb
dec
xor
test
mov
mov
fisttps
in
sbb
adc
pusha
mov
sbb
push
push
or
pop
popa
jb
xor
sub
test
call
je
mov
scas
je
inc
sbb
in
xor
xorb
cwtl
scas
stc
push
call
icebp
push
add
xchg
xor
adc
jno
jae
push
fstl
dec
adc
push
jns
icebp
mov
dec
jle
adc
repz
stc
jp
mov
xchg
adc
insb
jbe
movsl
jp
in
scas
and
ss
dec
not
js
jg
stos
and
bound
sub
movsl
adc
or
imul
sahf
cmpsl
inc
add
repz
sub
jnp
or
sbb
xor
data16
dec
cltd
sub
inc
fcomi
cmc
arpl
jle
add
out
popa
mov
sbb
cmp
pop
daa
push
loope
xchg
xor
stos
int
adc
sub
aam
aad
mov
je
ret
inc
mov
je
cwtl
dec
cli
push
sub
mov
insb
movsb
pop
mov
jnp
das
mov
clc
out
std
dec
pop
pop
jno
sahf
shl
jl
push
lock
inc
sub
push
mov
push
cmp
add
in
or
jmp
cmp
dec
jecxz
mov
inc
pop
es
lods
inc
gs
cmp
test
sbb
mov
clc
ss
xor
cmpsb
scas
popl
jae
jg
fildll
jecxz
xchg
scas
sahf
inc
mov
push
mov
sub
jne
xor
cmp
xor
loopne
jle
xlat
adc
push
shlb
xchg
rcl
stos
inc
push
lahf
pop
pop
clc
sub
mov
sbb
daa
ss
test
sbb
add
mov
out
fcoml
js
adc
inc
jp
jae
lods
sub
or
dec
cmpsb
mov
loopne
jmp
push
xlat
mov
sub
xchg
adc
cmp
sub
pop
lds
std
addr16
imul
dec
out
sbb
add
mov
hlt
mov
dec
mov
xchg
pop
loope
repnz
shlb
fcomps
adc
pop
in
dec
jbe
outsb
xor
dec
xchg
pushf
adc
test
mov
xchg
push
js
out
pop
or
cwtl
loope
xlat
hlt
push
pop
mov
sbb
cmpsl
movsl
push
das
jno
push
xor
push
mov
mov
outsb
ret
sbb
repz
stos
or
iret
sub
shrb
pushf
mov
lahf
and
mov
sub
mov
es
insb
stos
xchg
js
sbb
les
jo
popa
stos
scas
cmp
clc
fs
mov
icebp
mov
jmp
jp
or
loope
ljmp
push
addl
mov
push
adc
jo
mov
mov
and
mov
sti
cmc
ja
mov
add
adc
or
lock
sbb
cli
and
lahf
pop
inc
xlat
mov
aaa
movsb
stos
pop
movsb
mov
xor
popl
sbb
mov
push
mov
outsl
jmp
push
sbb
cwtl
out
popf
nop
dec
cmp
jge
xor
jns
mov
in
loope
sbb
sbb
fsubs
icebp
add
adc
xchg
loope
scas
jb
xor
sbbl
bound
mov
push
add
push
jbe
xchg
cmp
lret
xor
and
insb
jno
into
inc
adc
imul
movsb
and
movsl
loop
lods
in
sub
or
mov
pop
shl
shll
nop
jmp
cwtl
lods
cs
rep
add
mov
mov
stc
clc
popa
jecxz
mov
enter
jp
pop
or
sbb
scas
imul
mov
ja
push
push
insl
pop
xchg
cmpsb
push
jle
test
scas
mov
add
pop
js
andl
or
mov
inc
js
mov
sbb
xchg
push
enter
aaa
and
js
movsb
cmpsl
jp
jno
insb
cmpsl
sbb
mov
push
shll
cmp
pop
aam
xchg
cs
inc
cli
pop
in
sbb
repnz
mov
ss
jno
mov
adc
iret
mov
pop
je
stc
sbb
clc
stos
nop
adc
stc
mov
add
inc
dec
or
popa
aam
cmp
mov
cmc
adc
pop
out
cwtl
pusha
lds
pop
aas
push
or
mov
ret
jnp
mov
ret
in
fsubrs
orl
jne
jae
sub
loope
test
pop
fs
push
mov
lods
out
aad
mov
jae
sbb
popa
mov
outsb
xlat
inc
clc
test
out
dec
and
mov
jns
adc
fwait
cmp
not
out
hlt
xchg
pop
mov
dec
loope
iret
xchg
lahf
enter
popa
test
aam
sub
jnp
js
popf
out
fldenv
insb
cltd
shlb
jns
js
or
pop
pop
cmp
popa
push
sbb
mov
je
outsl
adc
add
dec
es
sbb
xchg
push
das
mov
mov
hlt
dec
test
and
out
mov
add
dec
cs
mov
bound
mov
addr16
xchg
adc
or
and
je
xchg
cmc
push
xor
sahf
xchg
lcall
add
test
push
rolb
inc
xchg
mov
mov
inc
out
mov
jbe
rcll
shrl
xchg
adc
push
call
sahf
jle
mov
and
sbb
test
lods
mov
popl
dec
or
mov
pop
out
add
hlt
and
jb
sbb
mov
sub
mov
xor
push
fsubrs
jo
outsb
jmp
inc
push
movsl
sarl
ret
ss
in
jp
jbe
sub
mov
xor
mov
mov
jbe
out
and
sahf
repz
jbe
push
push
mov
pop
and
addr16
outsl
and
fmull
inc
cmpsb
ffree
xor
cmc
jae
pop
pop
add
add
mov
iret
add
cli
dec
and
mov
clc
jo
inc
std
push
sbb
pusha
cmc
pusha
push
pop
je
je
and
adc
sub
mov
mov
cmc
xchg
imul
or
mov
push
push
sahf
xchg
pop
pushf
ljmp
jno
sub
stos
add
lret
or
sub
xchg
dec
mov
sbb
jns
push
adc
clc
jo
sbb
sub
and
shrl
mov
imul
push
arpl
andb
and
add
dec
inc
mov
fs
xor
clc
sbb
add
cltd
es
js
lret
xchg
mov
jmp
push
jnp
xchg
add
or
cmp
cmpsl
cmpl
rclb
cmc
dec
movsl
mov
stc
rcrb
pop
clc
bound
add
fsubrs
push
mov
shll
sub
lret
in
cmp
mov
dec
sbb
cmp
add
aam
data16
add
das
xlat
or
inc
mov
cs
mov
notl
ss
hlt
mov
cmpsl
mov
ss
adc
mov
push
xor
popa
jmp
lret
icebp
pop
sub
jae
xchg
ljmp
ds
aad
bound
lds
ja
out
cmp
mov
test
mov
mov
int
fsubl
scas
nop
xchg
jbe
push
cmp
ljmp
test
and
ljmp
jae
scas
je
jns
jecxz
or
insb
jbe
pop
movsl
fdivs
stc
mov
pushf
sahf
leave
push
mov
mov
inc
cmp
in
push
sub
xor
das
mov
push
test
loop
mov
mov
add
into
test
dec
mov
fs
fadds
jne
and
dec
adc
mov
xor
sbb
mov
xchg
pop
pop
jle
and
call
mov
mov
jno
call
lods
mov
stos
xchg
inc
cmc
stc
adc
jg
test
and
xchg
dec
mov
cs
ljmp
pushf
outsb
adc
xchg
cwtl
adc
inc
repnz
jns
sbb
push
sbb
cmpsl
int3
test
loopne
xchg
es
xchg
in
mov
push
push
out
lods
pop
fsubs
xor
jecxz
and
adc
popf
into
mov
jae
push
addr16
notl
adc
push
add
icebp
xor
or
mov
sbb
fisubrs
fcomp
xor
jae
dec
pusha
out
lock
inc
mov
shlb
clc
and
push
lea
add
loopne
sub
cmovge
loopne
adc
inc
test
fcoms
sub
pop
mov
cmc
ja
and
js
fisubs
iret
mov
adc
ret
sbb
dec
dec
jae
sbb
lds
add
add
sub
mov
jno
cwtl
sub
jae
lahf
jo
mov
adcl
std
xchg
sbb
jbe
pop
sub
imul
out
jae
xchg
push
pusha
js
popl
testb
xor
adc
jne
adc
scas
es
xchg
mov
loope
add
and
sbb
inc
test
in
mov
in
xchg
xchg
sub
test
jle
pop
clc
stos
adc
mov
inc
dec
jle
pop
jns
sub
mov
cmp
ss
xor
dec
sbb
shrb
jl
jo
or
sahf
push
repz
pop
out
sbb
mov
adc
aad
cwtl
cltd
cwtl
hlt
imul
fdivrs
mov
jbe
clc
and
or
pop
xor
push
push
cmp
push
cld
xchg
xchg
pop
sub
addr16
or
push
test
or
mov
mov
inc
xchg
jb
mov
scas
push
jae
inc
push
sbb
rclb
scas
xchg
mov
sub
pop
sub
rcll
lock
jns
mov
mov
jle
ds
cmp
sub
ja
add
or
stos
movsb
push
mov
xor
loope
xchg
sub
xor
jns
and
xchg
adc
jbe
adc
xor
mov
sbb
jbe
lods
lret
mov
push
pop
jno
andb
pop
adc
out
mov
lahf
daa
mov
packuswb
es
adc
test
and
adc
jns
jmp
sub
jae
mov
push
mov
outsb
cmpl
jl
pushf
imul
xor
movswl
je
scas
lret
mov
jmp
add
pop
movl
jbe
add
lock
pop
inc
xchg
xor
cmc
es
movsl
push
mov
inc
and
in
idiv
add
and
xchg
jo
insb
clc
pop
das
fs
daa
es
nop
mov
jns
pop
sahf
aaa
mov
in
outsb
cs
andl
cmp
inc
xor
popa
data16
mov
jge
nop
ljmp
sub
mov
or
ja
aam
mov
pop
pusha
inc
cld
nop
push
leave
cmpsb
pop
pop
mov
pop
mov
movsl
dec
jae
inc
cwtl
insb
aad
mov
jb
mov
cmp
test
pop
xchg
push
push
xchg
sub
cs
xchg
cwtl
push
xor
cmp
inc
mov
pop
jecxz
cmp
mov
push
out
mov
nop
sbb
push
mov
jae
jns
sub
icebp
jle
jo
adc
call
mov
push
adc
mov
mov
push
cmpsl
adc
xor
or
xchg
in
mov
xor
leave
int
mov
popa
mov
shl
or
pop
cmp
jmp
or
repnz
shll
lahf
stos
ja
mov
out
pop
jno
das
or
xor
and
and
scas
push
aam
mov
push
dec
dec
insb
and
xchg
xor
inc
sbb
rcll
mov
push
add
jns
std
sbb
pop
jae
test
mov
inc
sarl
or
fadds
push
dec
mov
jns
cmpsb
jns
mov
sub
imul
sub
shlb
aad
in
push
arpl
sarl
psubw
sub
test
scas
pusha
rol
cmc
push
or
push
push
push
xor
mov
aad
sbb
ficoms
loop
insl
and
loope
leave
sub
cmc
inc
clc
push
and
xlat
mov
xchg
pop
mov
daa
xor
xor
pushf
clc
xchg
aaa
and
mov
sub
sahf
sub
pop
pop
ret
xor
iret
push
cmp
daa
fwait
mov
adc
mov
loope
push
iret
fadds
dec
sbb
mov
lods
mov
scas
fistpll
mov
pop
dec
adc
sub
mov
mov
mov
mov
sub
xchg
and
adc
jecxz
or
pop
sbb
push
addr16
lock
jae
les
daa
cmp
js
adc
xchg
je
daa
sub
pop
cmp
mov
add
and
sub
cmc
jo
enter
mov
loope
pop
inc
dec
jge
adc
ret
loopne
xchg
sub
cli
fstps
mov
xchg
cmpsl
jbe
daa
jo
mov
and
dec
mov
cwtl
test
pop
jns
or
cmp
fsubrs
adc
adc
and
pop
mov
mov
mov
adc
mov
sbb
cwtl
sub
inc
pop
push
pushw
sub
imul
fsts
or
ja
xor
sarb
imul
bnd
cmpsb
imul
ja
js
paddsw
rol
dec
xor
aaa
psubsw
push
jl
test
aam
xor
xchg
jno
mov
ss
lods
mov
xor
mov
push
fstpl
pusha
dec
sub
add
ss
push
sub
leave
push
fld1
stos
jo
or
push
cwtl
push
xor
mov
pop
adc
xchg
fcoms
xor
int3
jae
mov
and
xor
xchg
mov
cmpsb
pop
xor
hlt
mov
fs
mov
fimuls
mov
and
movsb
xchg
js
out
into
xor
mov
mov
cmp
add
fdivs
call
ds
scas
add
int3
outsl
or
mov
fstpt
pop
js
das
add
pop
sub
pop
or
add
or
js
call
push
dec
fidivl
das
mov
jo
xor
addr16
insb
sub
scas
rorl
inc
mov
insw
adc
jae
xchg
lahf
mov
mov
lock
push
cmp
jns
sbb
cmp
mov
sarb
sub
xor
ret
sahf
mov
pop
lea
mov
sub
dec
push
sub
lods
out
push
stos
adc
push
sub
dec
mov
push
mov
stc
jns
mov
bound
or
outsl
jb
sbb
cwtl
sbb
mov
jle
jbe
pusha
push
sub
adc
mov
add
sets
push
aad
dec
cwtl
xchg
jecxz
sbb
sub
shl
lret
subb
mov
sub
es
pushf
lock
or
icebp
mov
add
out
cmp
cmc
shlb
cwtl
sub
into
clc
adc
insb
adc
cmp
jns
push
mov
add
adc
int
daa
jmp
dec
lods
mov
and
mov
iret
push
jae
mov
rcrl
xchg
sub
out
sub
cmpsb
sbbb
push
sub
test
xor
imul
and
jns
push
xor
dec
sahf
jns
xor
jne
jp
add
sbb
shlb
pop
mov
data16
icebp
xchg
mov
imul
enter
add
sub
enter
jle
lret
scas
jle
jb
mov
pop
ficomps
mov
mov
ret
ficoms
stc
mov
mov
jle
ss
jns
xor
xchg
and
test
cli
jo
outsb
mov
xchg
scas
sub
lds
jecxz
ss
push
sub
push
bound
dec
adc
push
cwtl
adc
stos
inc
mov
add
pop
je
push
daa
mov
mov
cmc
push
dec
cmp
xlat
sti
lret
sbb
and
sub
in
pop
mov
std
xchg
enter
mov
mov
jb
pop
out
aas
jne
in
push
add
push
mov
adc
outsb
dec
rclb
inc
mov
les
sub
popf
sub
call
dec
cltd
je
insb
movsb
pop
arpl
sets
push
push
adc
in
push
pop
cmpsb
mov
push
jl
aaa
lret
shlb
cmp
js
or
lahf
mov
jbe
orb
pop
xchg
cltd
test
sbb
pop
xchg
cmp
xchg
mov
movd
mov
jecxz
mov
out
test
fcompl
pop
and
mov
sub
xchg
adc
cltd
cmp
push
daa
fisubrl
sub
mov
or
jecxz
pop
push
cwtl
stc
in
push
xchg
and
push
push
adc
stos
jecxz
xlat
test
pop
push
mov
mov
repz
or
dec
daa
add
lods
je
and
cmp
aaa
pop
not
cld
push
jns
icebp
gs
mov
jg
xchg
adc
xor
mov
jno
sahf
adc
roll
mov
addr16
xchg
xchg
adc
sbb
mov
jge
sbb
mov
loope
cltd
fadds
shr
mov
xor
aas
insl
sbb
std
and
pop
xor
notl
daa
je
pop
xchg
xchg
pop
xchg
pop
mov
jecxz
adc
xchg
jp
pop
repz
cmp
jbe
scas
pushf
or
ds
ss
mov
sbb
or
je
xchg
sbb
xor
and
lea
mov
mul
sti
fsincos
clc
and
pop
sbb
jns
mov
repz
mov
cltd
cmp
cmp
repnz
xchg
mov
pop
or
test
clc
or
cmp
lods
aad
dec
cmpl
test
int3
jne
lea
out
sub
js
icebp
inc
push
mov
push
and
testl
test
dec
push
js
cmpb
sub
mov
daa
shl
int3
mov
push
pop
lods
into
jo
insl
inc
inc
cmp
push
and
movl
sti
subb
mov
mov
inc
mov
jo
jae
popa
sbb
mov
cmc
cmc
sti
fisubrs
sub
sahf
adc
sbb
add
adc
mov
rorl
dec
mov
sbb
outsl
mov
rcll
push
test
mov
dec
xorb
int3
mov
sbb
popa
mov
pop
xchg
sahf
mov
enter
push
xor
xchg
push
js
jg
sub
add
and
cltd
adc
sub
js
std
mov
mov
jo
test
int3
js
sub
das
aam
fsts
and
mov
mov
fadds
in
je
filds
mov
nop
sub
cs
popa
xchg
jmp
and
jne
fcmovbe
dec
lds
cmpsb
sub
xlat
fstl
xchg
jbe
sub
fdivs
jge
fsubl
xor
cmp
ss
jle
sub
pop
and
ret
pusha
mov
or
cli
push
sbb
jae
sub
sub
adc
js
fadds
dec
jbe
cwtl
mov
in
sub
pop
dec
lcall
push
fnstsw
dec
lods
cmpsb
addr16
lcall
mov
pop
push
mov
sbb
sbb
inc
or
iret
xchg
cmp
adcb
popa
sbb
aad
push
cmp
xchg
adc
mov
or
cmc
jge
xchg
clc
jp
xchg
pop
or
add
adc
adcb
xor
jae
xor
mov
mov
push
jg
adc
cmp
inc
fistpll
and
outsl
pop
mov
mov
mov
je
shll
add
mov
sbb
inc
pop
incl
mov
movb
movsl
pop
subb
aam
sbbb
jp
jae
inc
testl
orb
idivb
push
mov
mov
or
icebp
pop
dec
mov
outsb
inc
cmp
mov
mov
mov
in
jle
add
aaa
mov
frstor
xor
add
mov
cmp
jp
mov
lcall
jecxz
data16
xor
push
sbb
cmp
push
jecxz
fidivrs
mov
hlt
pop
scas
aaa
add
xor
sub
imul
push
jae
and
and
fnstenv
imul
mov
scas
cmc
js
or
jl
mov
push
shll
adc
mov
test
xor
xchg
leave
sub
xor
dec
inc
hlt
mov
scas
test
jp
jae
push
sub
inc
js
pop
add
push
lea
jno
mov
xor
push
and
stos
xor
and
sbb
fmull
outsl
out
mov
pop
pop
jle
into
mov
adc
mov
pop
and
push
icebp
nop
mov
lods
dec
cwtl
dec
pusha
cwtl
xbegin
sbb
repnz
loopne
movsl
push
dec
sbb
sbb
jae
sahf
daa
adc
adc
addr16
dec
dec
pop
mov
or
or
or
mov
pop
xor
sahf
scas
cmp
mov
cld
push
cli
scas
sti
fmull
test
call
das
popl
mov
dec
sub
into
cwtl
fxch
mov
pop
push
xchg
sahf
pop
jb
xchg
int
lock
aas
or
ja
mov
xchg
fcompl
mov
leave
iret
jo
dec
pop
inc
addr16
sbb
out
adc
mov
es
bound
xchg
test
mov
js
int3
test
nop
jb
or
repz
insl
sub
adc
lods
mov
scas
mov
daa
jb,pn
scas
push
test
subb
cli
sarl
add
xor
mov
daa
and
add
cltd
scas
or
jmp
popf
mov
mov
sbb
mov
adc
imul
cld
cmpsb
push
mov
jno
or
mov
inc
sbb
ffreep
out
mov
aam
adc
shll
xor
std
pusha
jp
mov
adc
mov
xorb
call
push
fcmovnb
inc
test
aad
xor
xor
cmpsb
mov
mov
add
inc
push
fdivrs
fidivs
shrb
out
bound
fnsave
dec
popa
lret
cwtl
test
pop
pop
dec
adc
shl
cmpsb
mov
xlat
push
adc
jns
aad
int3
push
sub
mov
and
mov
lds
mov
mov
orps
cwtl
xor
pop
std
push
xor
ss
insb
mov
mov
ret
hlt
jecxz
jg
mov
inc
push
imul
xor
fs
js
sub
clc
push
pop
fnsave
pop
jb
ja
nop
push
pop
sbb
ss
sub
sbbb
inc
pop
jne
in
xlat
repnz
js
push
adc
and
sbb
sbb
call
xchg
push
xchg
mov
fsubs
aas
pop
xor
mov
data16
dec
stos
jle
imul
ss
iret
xchg
sbb
mov
mov
lcall
mov
test
mov
cmp
dec
push
cli
sub
cmc
push
xor
add
sub
dec
insb
fwait
scas
cmpsb
sahf
in
dec
push
or
or
mov
ret
jne
and
dec
addb
jo
sub
das
adc
jno
rcrb
xchg
push
add
ja
add
adc
sbb
jg
es
push
xor
lock
adc
pop
and
mov
mov
loopne
das
lock
push
or
push
daa
test
push
insb
cltd
cltd
loopne
imulb
xor
test
std
out
dec
push
adc
mov
lds
push
sub
sub
add
push
hlt
imul
nop
sbb
add
icebp
dec
repz
inc
mov
push
insb
js
and
rclb
cmp
dec
and
je
xchg
fwait
and
repz
pushl
addr16
fldcw
into
aas
jmp
outsb
mov
out
je
pop
scas
jbe
pop
push
push
pop
outsb
je
test
pop
jb
mov
mov
pop
mov
je
imul
mov
adc
rcll
ds
mov
add
es
adc
ds
pop
ret
das
mov
inc
in
cli
stos
iret
jbe
add
imul
push
inc
push
test
hlt
and
int
into
lcall
dec
sub
in
mov
imul
clc
mov
xlat
cmp
adc
xchg
cmpsl
or
jg
leave
test
push
sub
add
adc
mov
jl
sub
fmull
loopw
pop
mov
out
dec
jno
or
xor
adc
sub
add
mov
arpl
mov
in
out
clc
xchg
sbb
xor
jmp
pop
rcrl
pop
outsl
in
aaa
lods
pop
jp
add
jo
lcall
aam
cld
ret
pop
sbb
pop
into
mov
nop
push
nop
stos
mov
mov
sub
sbb
jo
or
inc
sub
dec
sbb
repz
test
aam
jge
xchg
js
das
adc
adc
data16
mov
ss
in
cli
jge,pn
sbb
repnz
mov
xor
pop
insb
push
xor
ja
dec
or
movsl
xchg
or
jae
movsl
pop
adc
and
test
mov
dec
dec
mov
sbb
loope
insb
mov
repnz
imul
js
outsb
and
push
cmpsb
in
adc
je
mov
movsb
lret
mov
repnz
push
push
inc
repz
pop
cmpsb
fs
dec
pushf
mov
dec
insb
test
lock
add
jl
xchg
pop
jbe
call
rorb
mov
pop
adc
dec
pop
pop
jb
movsb
mov
dec
jne
gs
inc
mov
pop
dec
mov
add
ficomps
imul
jecxz
push
sub
sub
push
icebp
mov
xchg
mov
dec
adc
or
mov
movsl
cmp
sub
cmpsb
pop
mov
enter
jp
adc
sbb
jle
sti
xor
mov
out
popa
lahf
jne
dec
adc
mov
push
and
fsubrs
mov
add
leave
shll
cwtl
and
jnp
inc
dec
imul
pop
sbb
repz
aas
cltd
into
push
and
hlt
mov
xchg
test
xchg
inc
mov
pop
pusha
sub
cwtl
jae
sti
aam
adc
subl
rcll
fs
jo
and
xchg
sbb
int3
ja
fs
insb
in
loop
xchg
mov
push
call
daa
push
inc
rorl
jbe
imul
es
sbb
inc
inc
ficoml
pop
and
xchg
adc
mov
sbb
call
int3
xchg
pop
push
sbb
aaa
dec
push
repnz
pop
lcall
lret
cmp
ret
arpl
adc
repnz
pop
lock
mov
popa
mov
ja
mov
insb
rorb
ljmp
or
inc
push
sub
xchg
ret
sub
adc
mov
inc
mov
pop
mov
push
sbb
xchg
into
aam
loop
fs
cmpl
xchg
sub
jbe
pusha
lahf
lods
into
mov
xor
mov
mov
mov
pshufw
cwtl
mov
test
mov
shl
xchg
out
sub
cmp
mov
adc
sbb
sub
js
push
and
push
xor
push
mov
jle
mov
adc
outsb
insl
jbe
push
jae
mov
mov
pop
mov
dec
dec
in
jae
es
imull
mov
cmc
cmc
or
mov
xchg
pusha
pop
testb
dec
cltd
mov
and
rol
iret
insb
out
inc
cmp
jb
pop
cli
sahf
popf
data16
dec
adc
ss
aam
pop
mul
mov
xchg
cltd
xor
imul
mov
out
out
repz
pop
imul
fdivr
cmpsb
sbb
push
push
js
out
inc
adc
and
xchg
das
repz
ljmp
sbb
popl
ljmp
mov
shlb
sub
clc
push
sti
mov
shlb
ss
outsb
push
adc
dec
test
cmp
mov
jg
jbe
stos
jns
test
jmp
lods
mov
sub
push
jecxz
sbb
pop
xchg
stc
nop
sub
add
mov
adc
cmp
lock
xchg
in
jbe
sub
cmp
add
or
mov
sahf
adc
pushf
and
or
pop
mov
inc
push
es
mov
ljmp
jb
mov
xchg
jmp
sub
xor
xor
rclb
sbb
lahf
jmp
or
xor
sbb
orl
cwtl
shll
add
lock
nop
cwtl
inc
sub
cmp
mov
popf
mov
sub
js
sahf
shll
fs
mov
mov
fs
jbe
jmp
and
push
test
pop
push
adcl
fstl
jno
shll
scas
sbb
arpl
xor
movsl
lods
jo
xchg
aad
aaa
stc
les
sbb
iret
cmc
sub
xchg
mov
shrl
push
sbb
xor
or
aaa
sbb
jecxz
cmp
xor
mov
push
aaa
aas
jo
pop
sub
scas
push
mov
mov
jno
push
out
pop
ss
mov
pop
push
or
movsb
and
sbb
loopne
jbe
daa
xlat
mov
insb
adc
push
pop
insb
mov
adcb
mov
pop
mov
fdivs
push
decb
pop
xor
cs
lcall
loope
insb
push
mov
mov
xorb
pushf
jmp
fisubrs
cmpsl
dec
ret
adc
aam
jno
xor
pop
hlt
mov
cmpsb
bound
cmp
push
xchg
mov
cwtl
cmp
hlt
mov
push
push
jo
push
ja
xor
xchg
clc
movl
push
inc
jne
rcrb
addl
nop
ss
sbb
out
mov
mov
mov
dec
js
sarl
test
jp
mov
sahf
sub
unpcklps
arpl
repz
insb
call
mov
pop
xchg
aad
or
in
ret
repz
pushf
adc
rorl
int3
and
xor
shll
jo
je
mov
rcll
mov
shll
scas
xchg
js
xor
add
fwait
cmp
shrl
mov
sbb
rcll
scas
mov
push
add
std
and
sbb
dec
rorl
xchg
xlat
enter
or
push
xrelease
lcall
int3
in
sbb
outsl
pop
cmp
cmp
mov
push
lds
lcall
iret
int3
in
jmp
add
inc
mov
adc
loopne
xor
movsb
imul
xchg
data16
dec
test
mov
jmp
inc
push
xchg
mull
push
inc
push
mov
jo
repnz
mov
clc
ljmp
negl
iret
xor
testb
dec
adc
data16
imul
jb
call
cli
shll
mov
mov
sti
out
or
sbb
jle
insb
xchg
in
cmp
pop
stos
outsl
ficomps
jno
mov
test
loop
mov
and
lret
sbb
sub
sub
aaa
iret
fldenv
enter
pop
mov
jg
inc
imul
iret
xchg
nop
nop
fsubs
insb
mov
jo
in
mov
icebp
dec
out
dec
pop
mov
sub
push
or
jl
test
mov
inc
dec
push
mov
addr16
push
bound
into
push
pop
scas
movsl
or
fwait
cmp
test
xor
dec
inc
ljmp
into
out
lds
dec
ss
jae
test
cmp
scas
rcll
loope
cmpsl
mov
sub
adc
lds
xor
dec
xlat
clc
sbb
cmp
push
push
mov
testl
mov
mov
pop
dec
sbb
scas
je
shll
adc
idivb
jne
xchg
mov
mov
fcoms
js
mov
adc
scas
mov
xchg
inc
push
popf
rcrl
cwtl
xchg
mov
adc
insb
lahf
pop
dec
push
jmp
lods
test
push
es
jmp
pop
jmp
shr
jbe
sbb
repz
pop
jae
das
jecxz
sub
xor
sbb
lcall
and
repz
push
cs
cmp
adc
and
pop
cmp
jbe
mov
scas
pop
popa
mov
sbb
sbb
jb
insb
cltd
cltd
sub
dec
pop
pmullw
mov
pop
push
sbb
xor
scas
pop
sbbb
push
imul
mov
or
je
adc
ficomps
xor
and
xor
sbb
scas
xchg
aad
xor
ret
fadd
clc
aaa
cs
mov
xchg
cwtl
sti
mov
jne
pop
leave
mov
sbb
jns
mov
loope
jb
add
mov
dec
or
aas
sbb
loopne
mov
outsl
mov
mov
sahf
lahf
xchg
mov
hlt
push
push
inc
jns
dec
push
loope
stos
xchg
sub
rcll
lock
clc
rorb
fisubrl
add
ds
js
mov
push
sbb
push
mov
jne
ljmp
jle
lret
push
mov
pop
add
movsb
pop
dec
cmp
mov
xchg
popa
adc
inc
or
test
faddl
roll
in
push
mov
stos
mov
andl
jns
fsubrs
inc
es
loope
xchg
js
adc
scas
and
or
fstpl
aad
roll
scas
fisubs
test
outsl
sub
fcomps
add
je
xor
push
push
daa
loop
pop
inc
inc
sub
or
jg
fcoms
sbb
data16
dec
or
jae
out
or
mov
or
and
xchg
jmp
arpl
xor
cmp
xor
and
xchg
xchg
mov
mov
subb
fwait
imul
imul
ljmp
pop
sub
mov
sub
ja
scas
mov
jns
mov
jp
push
into
clc
dec
push
pop
pusha
dec
cmp
lods
mov
mov
add
push
leave
fcomps
mov
sbb
jge
mov
xchg
pusha
xchg
mov
mov
sbb
push
es
or
cwtl
push
test
lds
pop
int
adc
ret
jb
mov
xchg
xchg
sbb
push
fcomps
mov
or
jecxz
sub
or
push
jle
xor
iret
mov
inc
xor
scas
jae
pop
inc
sbb
adc
mov
cmpsb
les
andl
mov
sarl
gs
adc
inc
pop
and
and
xchg
shlb
jae
mov
push
cmpl
xchg
dec
mov
out
dec
insb
push
lret
mov
inc
dec
scas
mov
add
jae
cmpsb
jae
adc
imul
insb
loope
mov
enter
jp
sarb
lret
or
add
js
pop
jmp
mov
mov
adc
loope
daa
in
mov
sbb
cltd
outsb
and
enter
jg
xor
push
sbb
in
js
insl
es
lods
decb
daa
add
mov
pop
pop
sub
js
adc
mov
bound
imul
outsb
dec
jecxz
imul
mov
xchg
pusha
sub
outsb
jb
rorl
mov
sub
bound
push
cwtl
cmp
mov
pop
push
jg
mov
fnstenv
sbb
mov
push
subb
sbb
ljmp
mov
outsl
mov
popa
jne
inc
jne
push
test
aam
dec
mov
jae
mov
jl
cmp
js
add
inc
mov
test
mov
ss
sarl
cmc
sbb
aaa
scas
scas
divl
jle
shlb
or
jb
popl
inc
mov
mov
shrl
pop
dec
iret
js
mov
or
fidivl
pop
or
dec
mov
adc
ja
into
hlt
outsb
sub
cmp
adc
nop
jg
ds
jbe
lods
mov
xor
lret
sbb
stc
testb
shll
aad
add
jle
sbb
jae
or
fmuls
inc
dec
adc
loope
mov
adc
jle
mov
popf
sub
stc
rcll
fs
adc
mov
test
push
sbb
lock
clc
or
inc
push
mov
add
daa
sbb
sub
in
pop
xlat
popa
shlb
outsl
adc
push
jbe
or
daa
push
mov
adc
push
cltd
or
mov
jbe
cmp
inc
sbb
sub
shl
mov
clc
movsb
lret
push
jns
aas
jbe
jle
jl
popf
xor
test
cmpsl
push
cltd
mov
cltd
push
add
stos
mov
xlat
pop
sbb
xor
test
pop
cltd
pusha
adc
outsb
lcall
inc
jg
mov
lock
mov
cs
cmp
ss
cmc
xor
adc
xor
fadd
mov
lds
xor
fldenv
mov
or
xchg
and
mov
insb
enter
lahf
jg
push
jl
pop
les
jbe
lods
popf
cmp
pusha
addr16
sbb
sbb
sub
sbb
cmp
xchg
jl
xlat
pop
pop
jmp
loop
xchg
cmpsl
push
int3
mov
fimuls
cmp
adc
xchg
mov
scas
mov
inc
fisttpll
adc
fwait
or
xor
pusha
jns
jno
sub
daa
popa
movsl
call
cmpsl
inc
stc
les
mov
mov
cwtl
lods
test
enter
inc
cmp
mov
add
jp
mov
test
push
mov
push
sub
jl
int
mov
xchg
roll
or
mov
dec
xor
fdiv
jns
push
adc
sub
xchg
test
leave
adc
push
aas
lret
pop
out
js
jbe
scas
out
xor
xchg
sub
push
ss
push
lods
imul
sub
insb
lahf
js
mov
mov
loope
test
xor
int3
or
push
fidivl
cmpsb
sbb
and
pusha
xor
and
mov
sti
rorl
adc
lret
cmp
das
mov
fstpt
jbe
fs
in
sahf
ret
jecxz
psubq
push
aad
test
mov
cli
sbb
sbb
stos
cs
mov
and
mov
shl
adc
sub
pop
jne
push
mov
mov
jle
les
pop
sbb
sahf
mov
push
ss
dec
in
sbbl
mov
jb
pop
fsubrs
dec
jne
add
sub
arpl
stos
mov
jle
scas
mov
repnz
jge
jp
je
mov
pop
mov
xchg
inc
fsubrs
add
data16
into
xor
mov
jmp
jl
lods
lock
add
and
ja
out
push
jns
int
pop
jno
sbb
add
jnp
clc
cmp
fdivs
cs
pushf
in
xchg
xor
sub
mov
inc
pop
mov
inc
inc
pop
mov
adc
adc
fnstenv
inc
jae
scas
test
out
test
mov
lds
mov
in
xchg
inc
add
mov
pop
push
jecxz
mov
arpl
xlat
ss
mov
aam
outsb
pop
sbb
lds
sbb
mov
adc
int3
popa
dec
bnd
mov
jbe
mov
pop
xlat
nop
and
mov
sarb
mov
mov
pop
jbe
hlt
lret
cmp
stos
divb
adc
xchg
jge
shlb
icebp
aaa
call
lcall
ret
jge
push
cmpsb
jne
ljmp
popa
data16
mov
popaw
das
clc
xchg
in
add
xor
push
pop
daa
inc
cmp
mov
xchg
add
xchg
jl
aas
scas
jl
push
stc
jo
sub
int3
xor
mov
ss
repnz
cmp
es
out
pop
jae
fwait
lret
std
testl
sarb
sbbl
ret
outsb
cmp
outsb
mov
sbb
insb
pop
js
imul
fwait
aaa
adc
jns
jmp
jns
imul
hlt
loop
aaa
add
or
dec
add
jge
inc
mov
xchg
stos
mov
mov
xchg
enter
pop
lcall
shr
xchg
mov
inc
std
fistps
ror
mov
loopne
repnz
roll
aam
dec
push
and
or
hlt
push
push
loope
jae
fdivs
pop
scas
out
mov
sbb
jl
dec
movsb
jecxz
mov
test
imul
repnz
daa
popa
push
or
out
cmp
cltd
mov
xor
mov
mov
jmp
hlt
xchg
mov
fdivs
js
push
mov
es
movsb
xchg
sbb
scas
push
call
icebp
cltd
ljmp
repz
push
lods
jno
jo
pushf
mov
push
movsl
push
sbb
adc
and
push
nop
xor
int3
and
ja
daa
push
ficompl
cmpsb
in
add
push
mov
insl
jbe
cli
movsl
ss
xor
dec
mov
cld
loopne
mov
ss
push
sbb
insb
jno
cwtl
outsl
xchg
and
imul
jle
mov
cli
cs
cmc
test
lods
ja
dec
or
mov
jne
or
jbe
outsl
call
movsb
mov
jo
mov
lcall
mov
xchg
inc
xchg
pop
push
adc
fnsave
rcrb
clc
sub
loopne
xchg
ret
push
sub
jmp
xor
push
fstpt
add
aam
add
int3
popf
pop
in
bound
xlat
mov
stos
repz
fnstcw
test
add
mov
scas
stos
movsb
dec
add
xor
in
mov
pop
dec
inc
cmpsb
aad
dec
ficoml
adc
lods
hlt
out
pop
add
sahf
sti
dec
in
sub
aad
subb
aad
push
jb
pop
jo
in
out
or
fisubrs
and
mov
sub
adc
mov
and
jecxz
imul
xchg
jb
mov
sub
push
adc
mov
leave
ja
mov
stc
cmp
mov
lret
stos
aas
xchg
push
sbb
mov
bound
adc
aam
mov
test
lods
cld
dec
sub
bound
pop
fmul
push
xchg
jbe
dec
jp
push
mov
lcall
scas
rcll
mov
cli
hlt
and
push
mov
adc
daa
cmp
pop
bound
dec
hlt
or
cltd
enter
insb
xchg
test
outsl
mov
pushf
sbb
mov
pop
jo
es
jae
xchg
add
cmp
leave
test
lds
popa
pusha
jl
xchg
add
in
mov
cmpsb
jae
jne
test
mov
in
push
adcb
mov
aad
dec
xlat
subl
jbe
xorl
rcll
std
subb
negl
sbb
add
adc
insb
fildll
pop
and
xchg
mov
idivl
aad
or
and
xor
xlat
jmp
js
or
lret
push
mov
xor
push
ret
xor
js
cmpsl
adc
xchg
push
jg
jae
xchg
sub
cli
adc
int
adc
cmp
xor
jbe
and
clc
mov
fistpl
inc
std
inc
inc
sub
pop
js
fimuls
lahf
or
fdivs
insl
mov
lock
sub
sbb
stos
jns
push
mov
adc
imul
bound
lock
enter
add
es
popa
ja
test
lock
jl
dec
hlt
fsub
pop
push
xor
imul
lods
inc
test
and
mov
add
out
adc
js
mov
mov
mov
cwtl
lahf
inc
cmc
add
sahf
scas
xor
nop
dec
ss
clc
mov
add
pusha
loopne
insb
jl
push
movsb
mov
out
insb
mov
add
inc
fs
jno
nop
sbb
pop
ss
call
push
pop
jnp
pop
sahf
cld
mov
mov
xor
xlat
icebp
rorb
daa
add
mov
xor
es
jg
adcb
hlt
mov
hlt
movsl
je
push
data16
les
mull
call
dec
dec
pusha
jae
fcoms
call
jns
lods
daa
jae
mov
xchg
lock
mov
fldenv
push
aad
out
mov
jo
out
add
lods
cmp
mov
jae
adc
mov
xchg
movsb
push
int
ficompl
fistpl
sub
outsb
or
adc
incl
jle
push
dec
or
ljmp
fistpl
pop
fdivrs
testb
adc
adc
lret
push
cmp
push
repz
pop
jo
outsb
jbe
pop
imul
jge
xchg
cmp
sbb
sub
mov
fsts
test
jp
mov
jmp
jmp
mov
loopne
divb
data16
outsl
pop
repz
mov
push
inc
xor
sub
int
pop
jns,pn
cmp
jmp
add
cs
and
std
xor
mov
push
pop
and
int3
jg
jmp
or
inc
mov
sti
es
mov
outsl
mov
inc
orl
sub
lcall
repnz
push
lds
out
cs
xchg
in
loope
cmpsb
dec
test
sub
fstl
loop
and
sbb
loopne
pop
mov
call
jle
adc
shrb
cltd
fldcw
movsb
scas
scas
xchg
in
js
pop
pop
iret
les
mov
push
push
test
mov
cmp
cmp
xor
dec
icebp
inc
insl
gs
xchg
xchg
and
idivl
xchg
cld
xor
cmp
nop
andl
adc
add
push
lcall
adc
xor
pop
xchg
sub
cmpsl
aas
cld
jmp
add
push
push
xchg
icebp
or
mov
pop
add
push
and
neg
mov
push
insl
sahf
fdivrs
cltd
mov
lds
add
or
inc
mov
aaa
mov
xchg
xchg
mov
cs
daa
inc
test
ret
push
fidivrl
mov
cmp
mov
int
sahf
fisubs
lods
jo
sub
or
aad
lret
int3
mov
shlb
inc
negb
and
push
loope
xor
int
cltd
rorb
in
insl
stos
mov
clc
mov
test
adc
scas
ljmp
or
les
jl
mov
sbb
lcall
daa
jecxz
sub
int
test
mov
add
mov
xor
pop
jb
test
hlt
scas
cmpsb
int3
sub
out
cmp
dec
mov
mov
cmpb
xchg
and
sti
and
mov
ljmp
in
pop
inc
les
add
stc
inc
mov
xorl
sub
stc
cmpsl
f2xm1
cmpsb
in
jle
stos
or
xchg
popa
stc
dec
adc
lcall
out
dec
inc
sbb
stos
cmp
xor
sub
cmp
add
dec
pop
jp
mov
cwtl
mov
fdivs
cmp
push
fnstenv
imul
dec
mov
push
pop
mov
xchg
mov
imul
and
pop
push
cmp
push
loopne
or
std
adc
inc
or
pusha
fs
pop
insb
js
insl
ja
dec
outsb
ret
fnstcw
mov
cmp
cltd
xor
rcrl
push
test
sbb
mov
inc
aam
mov
jmp
testb
pop
adc
push
pop
lahf
adc
sub
stc
icebp
sub
dec
js
jno
ud2
push
ds
pusha
call
fcmovne
adcb
sub
repz
sahf
cs
ds
outsb
xor
add
mov
cmc
xor
mov
cmc
fisubl
dec
jb
rolb
lea
sub
push
imul
pop
outsl
push
lods
adc
ljmp
fs
or
dec
scas
pop
pop
aaa
std
je
pop
push
push
sub
insb
pusha
push
sbbb
inc
mov
jp
loope
into
mov
mov
out
xchg
adc
add
or
jns
fsts
mov
insb
mov
sbb
les
push
nop
and
call
mov
icebp
push
mov
sub
fadds
or
in
loope
stc
scas
mov
ja
popa
out
jmp
pushw
pop
ds
mulb
shrl
loope
pop
inc
fisttpl
sbb
out
idivb
cmpsb
addl
and
cmpsb
pusha
push
mov
cmpsb
xor
gs
in
es
cmp
mov
lea
mov
sbb
lea
push
std
iret
push
sub
xor
mov
scas
loopne
jbe
jbe
xor
mov
cmpsb
call
mov
mov
lods
push
jae
sub
outsl
pop
jns
mov
add
fnstenv
fs
mov
iret
ja
dec
data16
scas
xchg
push
jo
repz
pop
int
pop
int
push
nop
js
push
icebp
or
sti
jnp
xchg
shlb
jae
sbb
frstor
sub
and
adc
push
into
in
insb
inc
cmc
shll
roll
mov
sub
cmpsb
in
subb
insb
jne
sub
ss
lods
mov
scas
mov
out
adc
sbb
movsb
mov
inc
sub
cmp
out
fdiv
pusha
call
mov
fwait
mov
ret
push
xchg
or
test
test
mov
cld
xor
xorb
popl
adc
fidivrs
mov
and
test
sbb
mov
push
or
dec
jg
inc
xor
adc
lock
pop
sbb
mov
pusha
mov
jne
and
lock
and
push
sbb
popa
inc
pop
jns
push
cmp
jbe
push
cmp
jns
xchg
sarl
outsb
sub
xor
sub
mov
jo
jbe
push
push
mov
mov
fmuls
test
sahf
pop
cmp
call
push
mov
sub
iret
daa
mov
jae
push
adc
xchg
mov
push
scas
jae
outsl
cwtl
xor
cld
push
xor
jae
push
das
sub
xchg
mov
subl
outsb
test
movsl
dec
mov
int3
es
xchg
xor
jae
shld
imul
pop
lock
sub
xchg
jae
leave
bound
xor
stos
testl
inc
adc
xchg
inc
enter
sbb
or
cwtl
xchg
push
pop
pop
clc
pop
push
mov
loop
push
push
in
jmp
mov
inc
mov
es
lea
sub
movsl
std
mov
subl
iret
adc
cmp
jbe
cld
jne
cmp
stos
jle
mov
dec
mov
mov
push
inc
inc
cwtl
cmp
jns
push
mov
fmulp
data16
cwtl
std
hlt
pop
lock
leave
lods
and
jne
mov
shll
ret
movsl
xor
je
ret
rclb
jns
pop
xchg
std
aas
push
adc
popa
add
aas
jmp
mov
das
mov
js
scas
filds
dec
ljmp
adc
in
scas
xor
and
cli
dec
pop
push
jb
mov
xchg
cmp
ja
sahf
jo
jbe
je
outsl
mov
sub
push
jg
insb
lds
sbb
pop
mov
sub
push
lds
sub
cwtl
inc
iret
mov
shll
dec
jmp
mov
push
inc
cmpsb
dec
gs
movsb
insb
xor
jmp
adc
mov
adc
jbe
scas
inc
insb
push
add
das
lcall
push
into
sub
mov
jno
fidivrs
sbb
and
xchg
inc
je
mov
xor
test
and
sub
push
sysenter
lods
call
cltd
dec
dec
xchg
cwtl
je
fsts
cmp
xor
jne
push
std
adc
lock
jo
je
dec
mov
sub
push
mov
insb
fildll
lret
mov
push
push
cs
mov
lods
cld
adc
pop
mov
inc
mov
jno
mov
and
cmp
popa
jbe
sub
ja
xchg
xlat
mov
and
pop
aam
jb
xchg
int3
push
dec
jl
mov
lds
fcmovu
into
movsb
in
in
pop
xchg
sbb
push
sarl
xchg
cltd
movsb
cli
xor
std
test
cmc
dec
jo
xor
xlat
shll
add
sahf
stos
sbb
mov
push
loop
xchg
xchg
sbb
inc
push
adc
xlat
add
and
jbe
or
insb
xlat
push
cli
popa
stos
test
xor
mov
sti
push
fs
js
sbb
fisubs
push
mov
push
pop
scas
push
xor
imul
sbb
sahf
sub
fsts
xor
repnz
pushf
lods
imull
cmp
test
aam
jae
jb
nop
sub
jno
js
xor
push
jmp
inc
call
jb
je
in
adc
push
mov
cltd
ret
movsb
jge
mov
shrb
mov
cmp
push
fwait
dec
and
ljmp
mov
sbb
or
call
dec
jo
insb
push
ss
cmpsb
dec
movsl
fincstp
cltd
add
add
xchg
nop
pop
test
mov
mov
adc
add
xor
cmpsl
adc
imulb
sub
jns
loopne
mov
sub
test
add
xor
push
jbe
imul
inc
aas
mov
lret
shll
in
rcl
adc
pop
pop
cs
fwait
jmp
xchg
stc
or
xor
or
js
daa
xor
cmp
push
insl
lcall
stc
add
push
mov
leave
sbb
mov
sub
inc
dec
je
or
int3
out
xchg
es
shlb
sub
repnz
mov
inc
js
push
into
es
xor
pop
cmc
lds
mov
add
cltd
cmpsb
mov
add
cmpsl
cld
aas
xor
mov
cmp
stos
dec
addb
pop
fsubp
mov
xchg
lcall
je
and
loop
dec
std
jp
std
outsb
icebp
pop
push
add
mov
xor
and
xor
clc
mov
orb
xor
cmpsl
jmp
push
or
repz
leave
and
jg
cmp
mov
rol
xchg
xor
sbb
movsb
adc
and
data16
stc
xlat
sbb
cmpsb
pop
and
data16
mov
sub
mov
mov
test
dec
mov
push
mov
pop
idiv
ljmp
adc
out
sbb
leave
mov
mov
mov
xor
push
mov
dec
fs
pop
insb
inc
subb
pop
mov
lods
mov
jno
lods
sub
out
xchg
cwtl
clc
cmc
add
pop
mov
movsl
scas
ja
cltd
loope
insl
sub
lods
jo
sub
push
ss
stos
inc
adc
and
scas
out
push
arpl
movsb
mov
popf
jl
jnp
test
ficoml
lret
insl
jge
pop
dec
dec
pop
popa
repnz
inc
sbb
sub
pop
sub
push
js
mov
mov
xor
aam
push
push
divl
or
ss
lock
add
hlt
sub
jo
mov
lret
or
mov
cld
jle
adc
mov
sub
add
inc
inc
cmp
xlat
mov
test
mov
clc
mov
lret
clc
mov
ret
mov
shrb
into
add
mov
rol
ljmp
iret
mov
clc
mov
mov
pop
mov
push
add
cmp
movsb
cld
test
mov
aam
adc
adcl
mov
xlat
xchg
jbe
imul
xorb
imul
cmpsb
out
jae
stc
adc
jno
outsb
lahf
or
data16
loopw
adc
xchg
aad
cmpb
jbe
mov
push
mov
lcall
pop
cmp
repz
clc
loope
jecxz
std
fwait
addr16
xchg
and
insl
xorl
int
sub
cmp
stc
cmpsb
xchg
ficomps
cmp
repnz
andl
gs
fdivrl
inc
sahf
stos
sbb
das
mov
stc
jae
sbb
add
cmc
xchg
jns
repnz
mov
add
jo
out
out
rolb
xor
out
jmp
loope
dec
je
add
adc
sub
hlt
push
out
cld
repnz
fdivrp
mov
push
ljmp
dec
sbb
arpl
mov
cmpsl
call
outsb
fadds
ljmp
popf
cli
in
test
mov
movsb
bound
inc
int3
mov
jne
outsl
xchg
mov
add
xor
sahf
mov
push
mov
or
aaa
jae
sahf
mov
fbstp
dec
mov
aaa
insb
push
test
push
mov
pop
push
bound
pop
cmp
or
mov
fistpl
xor
jbe
fstpl
and
inc
icebp
inc
push
add
sub
mov
cmp
push
mov
fcom
cltd
daa
push
xchg
lods
mov
pushl
mulb
repnz
and
jae
movsb
xor
outsb
push
lcall
mov
dec
jg
scas
cmc
fs
cmpsb
jge
pop
mov
not
scas
jb
xchg
dec
sub
and
mov
aaa
in
sti
ljmp
jae
push
lds
jp
ja
fimull
mov
sub
inc
jae
incl
cmp
xor
pop
mov
or
pop
sub
lods
mov
out
imulb
push
mov
jnp
mov
sbb
scas
push
xchg
cmp
addr16
loope
xchg
pop
icebp
out
sub
orb
or
lods
or
popa
jb
gs
sbb
inc
ds
or
test
mov
fists
fcoms
xchg
subl
jno
mov
and
mov
mov
int
push
fidivrs
and
insb
add
or
sub
in
test
fsts
sub
mov
out
daa
test
les
sub
mov
adc
les
xchg
and
test
mov
jle
movsb
test
dec
xchg
xchg
mov
mov
in
inc
jg
adc
gs
test
and
and
andb
jo
jne
les
or
inc
pushf
shr
xchg
in
lods
popa
add
add
jmp
loopne
icebp
ja
aas
sub
rcll
cwtl
dec
mov
popf
pop
outsb
xchg
ss
sub
scas
cs
aaa
jo
jle
stc
or
dec
or
jns
jo
push
or
cmc
mov
pop
push
fldenv
in
push
dec
mov
imul
sbb
xor
pusha
or
pop
out
je
xor
jne
mov
inc
lcall
mov
cltd
out
pop
mov
jne
push
xchg
mov
jns
cwtl
jns
test
mov
jns
push
loopne
fnstcw
scas
add
or
push
scas
mov
push
in
sarl
imul
nop
iret
sub
imul
pop
cs
inc
roll
sub
pop
dec
dec
stc
mov
out
bound
pushl
pop
add
cmp
mov
pop
xor
jbe
ds
xor
push
xlat
pop
adc
sub
sub
cmpsb
dec
or
xchg
dec
lea
pop
out
imul
das
xchg
divb
cmp
inc
push
push
jbe
xor
adc
test
jp
les
mov
jno
mov
sub
adc
sbb
aaa
test
jmp
mov
scas
push
ja
mov
cmp
jo
sbb
aaa
push
ljmp
and
mov
xchg
hlt
shl
jl
adc
push
leave
mov
movl
jae
push
or
mov
jp
and
adc
movl
mov
je
enter
and
lods
pop
scas
ja
jne
sub
mov
insb
jbe
les
fwait
js
outsb
cmpsb
xor
dec
sub
sub
pop
or
scas
add
push
int3
mov
fbld
and
or
pop
lock
aaa
aad
hlt
xor
dec
mov
cmp
push
cmpsb
mov
mov
xor
pop
push
mov
shlb
pop
xor
mov
imul
test
push
divl
aad
jno
mov
jo
dec
addr16
loop
jl
mov
dec
scas
cmp
pushf
rcl
mov
pushf
mov
idiv
xchg
cltd
std
mov
push
add
aas
ds
lret
movntps
lea
xor
in
insl
mov
jae
dec
leave
ljmp
mov
dec
insb
pop
or
mov
int
xor
popf
inc
dec
or
js
popf
add
fidivrs
dec
and
pop
popf
or
xchg
and
cmp
and
daa
cmp
loope
mov
push
fcmovu
adc
lret
push
out
fwait
je
jae,pn
pusha
mov
stc
mov
sbb
xor
lahf
mov
jl
jae
pop
stos
icebp
push
sub
mov
push
push
scas
es
mov
data16
push
popa
xor
inc
dec
popf
jg
pop
shlb
fcom
sub
xchg
jae
inc
mov
cmp
or
pop
jns
mov
pop
push
push
stc
mov
pop
pop
mov
jno
or
adc
lock
sub
sub
push
push
sbb
stos
icebp
pop
jbe
pop
push
mov
addr16
fprem1
divb
cmpsb
jecxz
jns
mov
insb
pop
pushf
mov
jae
adcb
pop
sub
sub
cwtl
xchg
dec
jbe
xor
mov
ljmp
repnz
sbb
imul
pop
cs
fdivrs
dec
sbb
std
jg
cli
sub
jg
add
stc
call
cwtl
clc
push
mov
vprotd
push
xchg
mov
cltd
jo
sahf
ss
jo
add
fldt
repnz
sub
in
inc
cmp
jae
repz
out
sti
rclb
inc
ja
add
cmpsb
sbb
xlat
ss
mov
mov
mov
mov
stos
adc
sahf
mov
icebp
sbb
cltd
loope
iret
jo
add
out
es
inc
test
dec
clc
pop
cmpsb
lds
es
add
dec
sbb
jge
xchg
ljmp
sub
jae
testb
pop
push
xor
scas
pop
mov
cltd
dec
fs
pop
mov
fiadds
lods
mov
dec
movsl
fs
jo
adc
xchg
sub
stc
pushf
nop
pop
mov
scas
push
mov
sub
cltd
lds
mov
add
loopne
pop
jmp
fdivs
outsb
sbb
lock
shlb
fdivrs
nop
push
addr16
pop
scas
orb
push
sub
cmc
incb
adc
sti
inc
stos
jecxz
je
and
sti
jle
test
outsb
pop
sti
pushf
std
lret
push
sub
test
sbb
arpl
mov
cs
dec
ja
inc
sub
pop
loopne
jge
xchg
pop
jae
test
cmp
pop
test
xchg
ja
adc
add
push
mov
adc
sbb
ss
cld
cmp
inc
inc
pop
ret
mov
push
jbe
mov
ss
cld
out
lret
lret
sbb
jae
pop
outsb
xchg
faddl
jp
ficomps
xchg
cmp
lret
xor
js
int3
cwtl
add
jb
mov
mov
aad
push
xchg
add
push
js
sbb
movsl
scas
sub
sub
je
adc
js
or
daa
dec
cli
mov
inc
pushf
pop
xchg
faddl
xchg
imul
jb
push
pop
fwait
jae
adc
inc
or
xorb
and
push
dec
pushf
xchg
mov
add
jge
shlb
rcrb
in
mov
jmp
jns
test
jmp
adc
pop
cltd
mov
inc
outsb
xlat
xor
inc
pop
jle
mov
or
sbb
mov
icebp
fstps
mov
adc
clc
lds
cwtl
inc
add
xchg
imul
mov
ja
adc
in
fistps
stc
jl
mov
xlat
cmp
jae
mov
mov
xchg
mov
dec
orb
lock
mov
and
xor
ljmp
inc
mov
inc
mov
insb
int3
add
mov
pop
hlt
mov
inc
jns
subb
pop
adc
jbe
push
xchg
pop
pusha
xorb
std
sub
sub
leave
adc
xor
insb
mov
pop
je
push
dec
mov
mov
jb
cwtl
sub
inc
inc
push
adc
cmc
cs
into
mov
int3
xchg
outsb
aaa
or
lret
cli
rcrb
inc
cmp
in
mov
xor
jno
ljmp
je
push
aam
xchg
mov
test
sub
mov
mov
xchg
mov
lds
xor
ss
sub
jle
fisubrs
xchg
adc
mov
push
jbe
jae
fisttpll
int3
rclb
mov
in
enter
adc
call
outsb
pop
jbe
scas
pop
mov
sbb
mov
aad
sar
and
xchg
xor
pop
insl
jmp
sbb
push
sub
push
jo
test
sub
dec
jle
mov
xchg
xchg
add
movsb
jg
aad
icebp
adc
mov
bound
idivb
inc
movsw
lock
sub
jo
sub
jge
cmp
xchg
jns
add
cmp
pop
jae
lods
js
js
fbstp
adc
cmp
mov
pop
cltd
data16
stc
aam
fldenv
cmc
je
adc
sahf
jne
ret
in
das
out
push
xchg
lea
jmp
and
movsl
push
xchg
test
inc
es
mov
test
mov
gs
aaa
push
cwtl
loop
dec
movsl
mov
adc
inc
adc
mov
and
addr16
push
dec
mov
push
rcrl
dec
popa
and
cmp
or
mov
push
cwtl
sub
notl
xchg
or
xchg
or
aas
mov
pop
adc
pop
adc
ljmp
mov
loopne
mov
or
push
fsubrp
xlat
push
andb
mov
addr16
mov
cwtl
adc
sbb
bound
insb
call
inc
cmp
subl
inc
out
adc
test
jne
shl
adc
xor
and
xor
inc
movsb
pop
lods
fwait
popa
dec
cmp
stos
xor
int
sub
xchg
adc
or
icebp
jecxz
pop
inc
dec
push
jae
add
inc
xor
lods
in
and
cmp
jmp
jg
xchg
sub
int3
es
cmp
push
xor
mov
mov
or
push
lods
out
je
int3
cmp
xchg
ret
dec
pusha
xchg
push
push
adc
sub
mov
mov
or
sbb
push
das
jae
dec
icebp
outsl
in
jns
mov
aad
ds
gs
ss
and
stos
xchg
cli
out
mov
add
bound
scas
cmp
je
lahf
dec
add
loopne
clc
mov
into
std
adc
stc
push
push
into
sti
jae
jbe
or
mov
and
pop
call
fdivs
outsb
xor
mov
and
pushf
jp
clc
xchg
in
mov
call
clc
jae
lock
xorb
outsl
jle
pop
mov
mov
xchg
pusha
mov
mov
lcall
lret
test
mov
or
addr16
test
divb
fpatan
std
mov
or
and
pop
mov
push
jae
xor
mov
mov
push
mov
js
mov
inc
adc
mov
add
dec
dec
lods
out
pop
je
or
mov
fdivp
in
test
jno
into
push
out
inc
lods
add
cwtl
fcomps
ds
mov
add
sub
std
xor
cmp
and
loope
xchg
mov
aas
sbb
sub
jl,pn
rclb
adc
mov
cmovne
mov
push
addr16
sbb
mul
fsubrs
pop
mov
cmp
out
pop
incb
push
sub
test
icebp
xchg
ret
imul
sbb
xchg
dec
pop
inc
aam
jae
fdivrs
test
xchg
xor
pop
xor
cmpb
das
mov
mov
mov
movl
pop
xchg
xor
xchg
cmp
sahf
aaa
pop
jl
dec
js
test
add
push
mov
sbb
fdivrp
iret
xor
inc
jg
repnz
xchg
subl
jae
jno
push
xorl
sub
imul
arpl
testl
sbb
dec
pop
roll
pushl
sahf
scas
pop
inc
xchg
ret
cltd
push
out
test
xorl
repnz
shlb
clc
imul
jo
rclb
into
cs
sbb
scas
in
adc
and
sub
je
pusha
jl
mov
pop
push
jae
shlb
adc
pushf
mov
daa
dec
mov
cmp
outsl
andb
or
aaa
rorl
push
cwtl
es
movsl
ss
or
insb
cld
test
jno
jp
mov
xor
jg
lret
rol
subl
inc
repnz
jbe
mov
loopne
mov
leave
repnz
dec
int
jb
jae
and
shlb
adc
test
sbb
lods
jns
test
test
push
push
dec
sarb
bound
sarb
jae
cld
stc
mov
xor
popf
sbb
or
imul
inc
push
cld
pop
imul
rorl
mov
or
movzbl
add
cwtl
jbe
iret
sbb
sbbl
pop
ficomps
mov
test
cmp
push
jb
push
in
and
push
fidivrl
call
pop
outsb
dec
mov
jae
jbe
lods
and
divb
adc
mov
adc
adc
or
push
push
xor
mov
jb
pop
hlt
test
xlat
push
les
cmc
dec
cmp
mov
scas
andb
icebp
mov
dec
jae
pushf
jo
cmp
je
jge
insb
loope
xchg
aaa
xchg
mov
stc
push
mov
sub
adc
sub
push
mov
sub
push
mov
mov
add
xchg
stos
and
arpl
clc
shlb
jg
mov
repnz
loop
sti
outsl
add
imull
xlat
jle
arpl
xlat
xor
xor
jne
cmpl
xchg
inc
imull
jl
mov
mov
mov
sub
loopne
icebp
imul
push
daa
fsubrs
stc
jae
dec
pop
fcmovnbe
es
push
mov
xor
dec
and
stc
mov
sbb
js
pusha
inc
adc
rolb
gs
popa
je
scas
int
cmp
lods
cwtl
xor
sbb
xchg
add
cmp
stos
aam
add
std
mov
push
push
and
pusha
mov
or
jo
aas
xchg
xchg
pop
pop
inc
sbbl
mov
xor
xorb
xchg
fidivrs
and
out
mov
mov
jo
test
cmp
add
sub
jno
mov
mov
insb
faddl
lods
jo
sub
mov
pushf
add
test
sub
sbb
inc
mov
lods
add
ss
mov
mov
xchg
mov
fcomp
ret
mov
js
or
cmpsb
sub
push
pop
insb
das
test
sbb
mov
push
es
push
jmp
es
or
jne
add
xchg
push
jne
jle
lahf
cmp
sub
in
bound
adc
insl
xchg
jno
ficoml
cwtl
ds
push
xlat
sbb
fnstenv
and
sbb
scas
cmpl
xchg
dec
mov
push
imul
or
pop
scas
jae
pop
popa
mov
mov
xor
shll
aam
fisubrs
pushl
out
je
clc
jg
or
xor
lock
mov
aam
jmp
jne
xor
pop
shlb
fs
sub
jb
xchg
xor
or
sbb
rcrb
cmpsl
adc
mov
rcl
jmp
and
mov
es
subl
adc
inc
cmp
insl
cltd
and
sbb
js
mov
and
call
es
pop
sub
pop
push
push
adc
sub
sbbl
int
sbb
je
das
sahf
mov
jne
or
mov
and
inc
iret
dec
sbb
cld
frstor
lcall
xor
pop
xchg
repnz
mov
jp
in
and
insb
jmp
insb
jle
xchg
fmull
clc
test
jo
jae
cvtps2pi
sar
fsts
mov
or
fidivl
adc
adc
xchg
les
cwtl
mov
xor
mov
pop
iret
mov
jge
pop
pop
jp
inc
bound
jmp
jb
cmp
cmc
test
testb
cmp
xor
mov
cs
outsb
sbb
je
add
in
mov
out
xor
ret
cmp
push
add
mov
xorl
cld
xchg
mov
jmp
mov
xchg
cmp
mov
cmp
or
ljmp
xor
or
sub
adc
je
ss
cs
sahf
mov
pop
cmp
cwtl
je
ss
mov
jno
scas
lahf
nop
xchg
cmpl
jbe
mov
pop
aad
in
pop
xor
push
movl
jb
xchg
es
je
mov
adc
jl
mov
push
xor
cmp
push
ja
mov
out
adc
pushf
cmp
xor
aam
cs
lods
ss
scas
xorb
imul
dec
dec
jle
add
int3
mov
mov
sbb
mov
adc
xchg
mov
sbb
pop
jae
ljmp
lods
cwtl
cs
addr16
scas
inc
imul
scas
je
cmpsb
iret
clc
jae
pushf
imul
inc
mull
aam
mov
mov
jmp
outsl
jl
xlat
ja
jge
jmp
inc
data16
aam
pop
jge
cmc
out
aad
mov
jl
enter
shlb
adc
aaa
ja
mov
dec
mov
fbstp
mov
loope
lds
pusha
scas
add
mov
mov
dec
std
ficoms
push
cmp
xor
cwtl
push
pop
ja
sub
fcoms
mov
cli
int
mov
xor
cs
adc
pop
in
je
jle
xchg
mov
cmpsb
scas
xor
xchg
data16
xchg
cmp
hlt
stos
mov
scas
mov
cmpsb
push
in
adc
lods
and
xor
pushf
movsb
cmpsb
xor
mov
iret
insb
xchg
push
lods
pop
xchg
xor
sbb
cmp
mov
sub
stos
xchg
jl
loopne
das
iret
xchg
imul
cmp
xchg
sbbb
mov
jae
lods
mov
shll
rcrl
push
lock
rclb
fcomps
cli
in
hlt
popa
mov
or
shrb
jno
leave
and
lcall
mov
push
xchg
and
or
mov
out
pop
outsl
dec
ljmp
in
jne
loope
les
ret
push
inc
hlt
mov
jae
dec
inc
scas
sub
xchg
sbb
insl
ss
or
ljmp
sub
test
cs
pushf
adc
mov
mov
imul
andps
mov
test
shrb
pop
bound
loopne
cmpsl
insb
mov
dec
pop
dec
inc
pop
scas
insb
xchg
cmp
xor
cmp
pop
iret
xchg
xor
stos
or
adc
jo
leave
lcall
mov
cmp
cmc
push
cmp
rcrl
je
dec
mov
cmpsb
push
ds
movq
sbb
sbb
add
popl
and
or
js
sbb
pushf
add
xlat
cmp
and
and
push
clc
adc
push
cmp
sarl
in
or
sub
leave
cmp
rcrl
jns
lret
jo
pop
jae
fnsave
mov
adc
cmp
pushf
lahf
sub
push
mov
ret
notb
jl
lcall
push
stc
push
mov
int3
adc
push
test
jbe
adc
fidivs
int
inc
mov
hlt
xlat
ret
mov
loope
xchg
sub
inc
or
cltd
push
and
mov
mov
andb
and
outsb
iret
push
sub
std
xor
cmpsl
std
test
adc
cmpsb
imul
pusha
hlt
cld
pop
ja
clc
sbb
mov
jae
xlat
cmp
adc
cwtl
jmp
repz
jge
fstpl
imul
lods
push
test
mov
movsl
fs
out
inc
test
mov
mov
lods
mov
jae
test
addr16
loopne
ss
hlt
sbb
into
ss
rclb
js
daa
push
imulb
test
mov
jp
dec
int3
out
mov
jo
jae
jnp
sbb
in
negl
cmp
push
mov
or
cs
fstpl
imul
fnstsw
inc
mov
scas
data16
jb
repz
sahf
jae
cs
add
outsb
cli
pop
enter
pop
xorb
xor
jae
push
pop
jbe
rorl
inc
cmp
mov
mov
rcrb
push
mov
add
xchg
inc
sti
xchg
cwtl
adc
popa
add
xor
das
cltd
and
mov
lods
lret
jb
repnz
jno
insl
popa
pop
mov
sbb
push
pop
lahf
jl
movsl
lds
mov
mov
hlt
flds
sub
les
pop
popf
test
cmpsb
and
sbb
jae
iret
cmp
jne
loope
pushf
rcll
loope
jae
fsts
mulb
inc
inc
sub
sub
push
into
sahf
xchg
pop
xchg
sub
dec
and
jmp
fsubrs
sbb
jecxz
ss
jg
pop
cmpsb
mov
fsubrs
fsubr
out
pop
cltd
pop
xor
cli
ja
ret
and
adc
sbb
push
push
loopne
and
or
push
push
xor
inc
std
adc
mov
xor
stos
jns
es
sub
fidivrs
insl
ja
in
push
pop
in
imul
icebp
pop
dec
xchg
sub
lcall
cmp
lds
cmpsb
xorb
mov
cwtl
sub
movsl
push
pop
data16
popf
mov
loope
sbbl
mov
insl
jo
mov
adc
pop
push
add
call
adc
repz
add
and
fisubl
mov
mov
push
jbe
in
xchg
in
cwtl
pop
jno
jg
jecxz
clc
test
inc
pop
je
pop
mov
std
rorl
test
shrb
js
add
imul
imul
fs
fildll
adc
jle
mov
in
jo
clc
push
mov
cmp
jae
push
cld
sbb
stos
mov
push
jo
popa
dec
movsb
and
mov
cmpsb
clc
sbb
repnz
cltd
loop
ja
inc
jnp
xchg
sbb
sub
dec
adc
or
pop
or
inc
dec
arpl
xchg
and
mov
pop
aam
bound
fwait
pop
cmpb
hlt
adc
negb
mov
sti
add
jmp
addr16
adc
fimuls
mov
mov
std
sub
mov
insb
dec
aam
and
fxch
ds
imul
iret
inc
in
sub
ror
sahf
call
and
jmp
cld
cs
and
mov
and
mov
popa
mov
cmp
jae
or
mov
mov
or
into
and
jae
das
mov
add
cltd
and
into
flds
enter
push
mov
inc
adc
adc
push
mov
pop
sbb
sub
and
xchg
cli
xor
pop
mov
xchg
push
rcrb
int3
inc
je
jmp
sbb
mov
jecxz
clc
pushf
pop
outsb
jl
sbb
int3
fistpll
xchg
mov
mov
add
mov
cmp
push
jl
mov
jge
xor
mov
ss
lcall
and
clc
sub
ds
fwait
stos
adc
movsb
pusha
adc
jecxz
or
mov
cmp
sahf
xor
insb
and
push
addr16
jae
in
xor
mov
popa
sub
sahf
jae
mov
fdivs
js
sub
int3
lcall
jmp
movsb
loopne
imul
mov
mov
addr16
mov
into
out
mov
add
add
pop
push
mov
mov
mov
mov
cmpsb
sbb
and
loopne
mov
cltd
cwtl
adc
int
leave
add
mov
jns
shl
xor
mov
and
int
mov
push
cmp
mov
jbe
mov
cs
loopne
aaa
divb
in
cmpsl
mov
in
push
ljmp
into
arpl
iret
mov
or
fucom
ss
xor
cltd
jns
xor
subb
add
aas
xchg
and
es
or
rorb
aam
cmp
stos
add
js
sub
dec
cli
ljmp
pusha
mov
sbb
test
pusha
sbb
sbb
jmp
loope
dec
mov
push
cmpsb
out
push
dec
cmp
pop
mov
adc
xlat
sbb
data16
dec
mov
mov
sbb
mov
sbb
mov
fbld
std
mov
xchg
xor
shll
add
mov
scas
pop
cmpsl
xchg
mov
push
shrl
jg
or
push
stc
adc
xchg
push
push
xor
jb
outsb
adc
fs
cmp
jge
xor
adc
stc
jle
fistpll
push
jb
gs
push
inc
movsl
mov
or
es
stos
mov
and
hlt
out
lods
add
mov
mov
fs
pop
in
push
std
imul
inc
push
out
mov
xchg
std
or
jp
mov
inc
push
into
sub
cmp
push
xor
add
xor
xorb
jp
xor
loope
push
repnz
xchg
sbb
inc
jb
mov
push
pop
add
js
lahf
or
filds
imul
mov
jge
lds
dec
mov
adc
mov
js
es
mov
adc
dec
jb
daa
in
fs
ja
pop
das
sahf
pop
mov
push
popf
sub
push
stos
mov
adc
xor
sub
xor
je
movsl
insb
push
ss
mov
inc
mov
xchg
sbb
aaa
and
cmp
sub
xor
mov
pop
xchg
add
mov
push
add
inc
mov
ret
mov
jo
fstl
mov
cmp
push
xchg
adc
jecxz
pop
sbb
push
mov
ret
push
and
mov
sti
mov
jne
cmp
sbb
and
hlt
shll
mov
test
nop
push
and
pusha
mov
adc
cld
mov
rcrl
mov
cltd
lret
aas
and
movsl
sub
lods
xor
stc
aaa
adc
lods
std
pop
cmc
loope
test
mov
loope
jge
or
jl
or
cltd
push
pusha
xor
xlat
imul
scas
addb
cmp
xor
lret
je
ljmp
je
scas
cmc
clc
sti
es
aam
push
cmc
mov
mov
data16
cmp
mov
inc
std
sub
adc
testl
je
sbb
fcomp
dec
js
fs
cli
mov
adc
mov
push
adc
inc
pop
xor
mov
test
xchg
mov
and
pushf
mov
mov
adc
mov
mov
int3
xor
sbb
xorl
and
add
push
iret
mov
xchg
cmp
movsl
cld
mov
bound
cmp
sub
xchg
pop
inc
push
bnd
or
fmuls
mov
jae
jl
adc
imul
xchg
xchg
xor
xor
dec
sub
jp
adc
pop
orl
fstps
dec
dec
and
cmpsb
aas
daa
repnz
sub
jmp
fdivr
jbe
cltd
stc
sbb
fimuls
jo
fwait
xlat
inc
sub
dec
pop
orb
not
lcall
call
pop
adc
stos
lock
div
sbb
lods
rcl
dec
mov
clc
in
push
cwtl
pop
subl
xor
movsb
push
inc
mov
aaa
lea
sub
mov
xlat
push
dec
test
push
in
mov
mov
mov
scas
out
es
add
or
aam
adc
mov
rcrl
sbb
adcb
out
out
xchg
push
lcall
test
outsb
sarb
cmpb
cwtl
inc
push
btr
xchg
dec
imul
mov
pop
ret
inc
ret
mov
int
xchg
xchg
push
or
imul
mov
addr16
sub
jbe
push
cmp
cmp
cmp
jae
jae
push
mov
clc
adcb
dec
pop
xlat
arpl
pop
xor
cmp
sbb
aam
jbe
jo
imul
inc
int3
enter
imul
popa
mov
push
setbe
imulb
mov
push
mull
test
jae
out
cmpsb
pop
mov
popl
jbe
ds
stc
xlat
imul
mov
ret
xor
xor
es
cltd
and
shl
ret
stc
add
sarl
mov
shll
inc
lahf
andl
jmp
stos
jmp
inc
lods
int
push
test
adcl
push
mov
pop
mov
scas
lds
ljmp
or
sub
sub
sahf
frstor
and
in
repz
pop
insb
shl
dec
mov
add
sbb
cmpsb
out
and
and
test
gs
lds
hlt
out
sub
aam
fs
je
push
ja
pop
jp
push
fs
imul
cwtl
mov
sub
cmp
jbe
xor
subl
pop
mov
sub
jne
push
js
adc
xchg
shl
call
xor
mov
push
daa
mov
sti
jbe
push
repnz
lock
adc
jb
add
mov
sub
adc
xchg
add
insl
rcl
mov
pusha
sbb
jb
dec
hlt
push
mov
into
in
xor
jmp
in
cmp
push
es
cmp
and
cli
add
add
pop
add
sbb
stos
adc
js
sub
test
lock
cmpsb
sbb
jae
cltd
pmulhw
mov
lds
inc
or
cmc
xchg
dec
aaa
lods
stc
imul
cmpb
jno
jae
add
shlb
jbe
ds
imul
pop
push
xor
and
and
mov
jae
aas
cmp
test
lahf
add
push
pusha
mov
sbb
enter
sahf
jecxz
xchg
jae
fdivl
cli
nop
lods
clc
fwait
jns
in
out
sub
dec
xor
icebp
jp
pop
loopne
mov
data16
dec
ss
add
lods
cs
push
ret
jo
push
loope
xchg
mov
stos
sbb
aam
cmp
jge
cmp
cmp
lock
pop
pusha
rcrb
sbb
cltd
cmc
xchg
xor
xor
fnstenv
jae
mov
jp
sub
and
int3
testb
cwtl
jno
jb
xlat
or
jb
ss
adc
inc
int3
ret
repnz
js
cmpsl
sub
sbb
ss
sbb
lret
leave
push
loopne
in
pop
pusha
jmp
or
push
jae
fstps
mov
cwtl
jae
sbb
jl
jo
js
jbe
pop
or
sahf
jecxz
mov
mov
mov
leave
xor
xchg
sub
xchg
imul
adc
ret
mov
mov
mov
mov
cwtl
dec
mov
or
clc
jbe
ds
fadds
jbe
cwtl
scas
pop
pop
scas
sarw
test
lds
jle
fcmovnu
xchg
push
icebp
mov
mov
mov
addr16
sub
mov
idivl
movsb
and
pop
mov
push
insb
adc
and
and
sarl
scas
xchg
test
in
iret
pop
jl
mov
cltd
into
pop
ffreep
adc
sbb
jae
das
stc
fmul
adc
or
xor
sbb
test
mov
lods
movsb
add
adc
push
mov
icebp
popa
inc
add
ret
test
xchg
cltd
sbb
ret
add
adc
cwtl
jne
fndisi(8087
pop
insl
xchg
dec
test
push
loopne
mov
dec
scas
push
pop
loop
sahf
aam
nop
jae
sub
mov
and
shl
aas
data16
out
pop
inc
gs
or
cltd
pop
push
call
jo
jo
push
mov
mov
mov
xor
icebp
and
mov
push
ss
mov
fcomps
leave
jb
mov
and
jle
adc
ja
outsl
aas
mov
mov
aad
clc
or
rcll
push
mov
mov
test
lds
adc
sub
xor
cmp
adc
xor
fs
xorb
repnz
in
ficoms
jl
mov
sbb
add
stc
jo
es
test
xchg
jne
add
mov
inc
lock
pop
fldl
mov
cmp
push
pop
mov
repnz
lods
cltd
mov
push
mov
sub
rclb
adc
xchg
mov
pop
mov
sub
inc
dec
inc
xchg
jbe
and
repnz
pop
ljmp
mov
imul
and
cmp
jno
mov
mov
cltd
mov
push
mov
mov
movzwl
mov
jns
jecxz
mov
popa
aaa
movsb
sbb
pop
fs
mov
pop
mov
frstor
and
out
popf
fldl
push
lret
jbe
xor
lret
xor
adc
mov
divb
mov
cld
je
dec
cmp
movsb
jno
mov
ficompl
testb
xor
mov
fimull
in
mov
fwait
xchg
jns
xor
jae
ljmp
sarb
data16
outsb
lret
in
in
fnstenv
cmpsl
js
sti
mov
sbb
mov
mov
jno
cli
push
jbe
out
or
ds
mov
add
lea
dec
popa
cmp
in
or
cwtl
and
call
jl
sub
iret
out
push
mov
sbb
or
mov
xchg
pop
or
dec
jecxz
pop
or
jbe
movsb
xchg
jae
aam
ret
outsb
pop
push
adc
add
in
mov
pop
inc
sbb
das
cmpsl
jno
sub
test
mov
scas
stc
aaa
inc
dec
jle
cmp
add
loopne
popf
add
inc
sbb
ficomps
nop
jno
fnsave
daa
mov
pop
and
in
loopne
dec
daa
cmp
push
and
pop
aad
cwtl
mov
sbb
jae
ss
pop
jle
jmp
add
jae
and
sbb
repz
sub
push
push
aas
cmp
sarl
jns
or
pop
rcrb
hlt
mov
jo
movsb
ja
daa
jne
mov
pop
adc
fldl
test
mov
pop
ljmp
sbb
fs
std
js
hlt
pop
addl
hlt
push
ds
lea
jns
mov
insb
aaa
jg
mov
lcall
aas
xchg
sahf
xor
sub
in
loopne
sub
adc
lcall
or
sub
mov
mov
into
daa
xchg
add
ds
mov
data16
inc
add
adc
adc
cmp
cmpsb
test
sbb
lahf
into
popf
sub
jo
imul
mov
ds
loopne
xlat
stos
cmp
jle
xchg
inc
adc
xor
push
mov
jae
mov
cwtl
pop
jmp
outsb
add
scas
push
lds
movaps
mov
nop
inc
fistps
adc
repz
push
nop
sub
sbb
sbb
mov
mov
clc
mov
jno
fdivs
adc
or
push
ss
push
adc
mov
lock
js
adc
xor
sbb
pop
pop
sti
pop
sti
or
ja
sbb
mov
imull
mov
shl
mov
je
push
adc
xchg
je
je
lods
dec
mov
push
xchg
sub
mov
jo
xor
adc
jne
push
xchg
mov
das
cwtl
xchg
and
cmc
sub
mov
js
add
xchg
jb
bound
je
adc
dec
push
push
and
xor
push
ds
dec
gs
adc
mov
je
push
jae
push
mov
cmpsb
fcoms
adc
mov
jg
adc
js
pop
adc
clc
jne
shr
insl
and
js
adc
sbb
jns
pop
fdivs
mov
push
fldenv
ss
js
adc
push
iret
push
push
xchg
xor
mov
pop
daa
ja
push
js
adc
xchg
and
test
daa
inc
adc
mov
js
push
push
mov
movsb
mov
je
push
aam
xor
add
jne
push
mov
cmc
daa
in
aad
xor
adc
jb
rcll
inc
xorl
pop
fstpl
mov
push
sub
int3
push
add
adc
jge
std
dec
inc
adc
push
out
pop
ss
xor
mov
mov
int3
xchg
push
hlt
ljmp
shr
gs
jo
mov
stc
cmp
add
xchg
xor
xchg
xchg
stc
sarl
mov
dec
and
lods
inc
xor
or
mov
cltd
jl
push
aam
xor
test
mov
jle
dec
cltd
cltd
sbb
inc
cwtl
pusha
cmp
mov
int3
sub
push
les
xchg
or
and
sub
dec
loope
repnz
dec
lock
push
ss
add
sub
cwtl
jg
stos
or
inc
pop
xor
lock
mov
iret
pusha
sub
dec
pop
push
rolb
push
push
outsl
mov
leave
adc
pop
push
xor
lods
or
mov
xor
cltd
mov
repz
fdivrs
pop
mov
push
pop
dec
mov
mov
adc
in
xchg
dec
mov
arpl
adc
pop
pop
push
cmp
mov
std
pusha
sti
mov
mov
sub
sahf
mov
jno
das
int3
push
addb
adc
xor
pop
daa
push
int3
xor
sbb
inc
jae
repz
mov
push
mov
mov
and
inc
pop
ljmp
sti
jns
push
pushf
mov
addr16
scas
and
test
sub
cmpsb
push
mov
mov
lock
xchg
and
f2xm1
jle
jns
hlt
je
xlat
int
and
in
negb
sub
xor
push
sub
mov
xchg
es
mov
mov
lods
data16
fisttpl
inc
xchg
push
mov
in
jb
sub
enter
xchg
loope
xchg
out
mov
pop
sahf
push
and
xchg
jo
ret
adc
stc
or
in
lret
adc
inc
cmpsl
lds
and
cwtl
aam
scas
ja
sub
pop
in
sbb
mov
inc
subb
mov
pop
lcall
or
shl
xor
repz
lock
pop
jecxz
scas
addb
es
xchg
aad
outsl
mov
or
sbb
xchg
dec
lods
inc
mov
pop
mov
or
test
sbb
mov
mov
outsb
pop
test
fisttps
xchg
fsubrl
jae
dec
sub
fcmovne
pop
mov
lea
add
cwtl
insb
add
ret
jae
addl
test
mov
jg
sub
mov
mov
idivl
nop
repz
div
dec
je
daa
cmp
icebp
cmpl
xor
mov
jmp
xchg
lods
push
roll
xor
xchg
btr
fdivp
pop
aaa
test
test
jge
jns
clc
pop
push
jae
pop
out
push
jle
push
ljmp
mov
roll
pop
jg
js
cwtl
adc
cmp
xchg
pushf
sbb
fnsave
sub
lea
sbb
ljmp
out
jecxz
sub
push
or
sub
lods
pop
sub
adc
pop
inc
rorl
mov
pop
jae
movl
xchg
pop
sub
popa
mov
imul
sahf
fwait
jo
jae
pop
cmp
push
loope
xlat
scas
inc
test
or
and
jo
inc
mov
mov
je
push
push
ss
mov
jae
ja
and
xor
jb
test
clc
add
or
push
sahf
mov
cmp
dec
xchg
aad
lods
jg
mov
mov
cmc
sub
daa
push
sbb
stos
cwtl
out
cs
std
and
mov
std
cmpsb
xchg
or
pusha
push
outsl
fisttpl
outsl
inc
cltd
jl
or
loopne
sub
push
adc
jle
adc
mov
adc
popa
push
das
fldenv
pop
jecxz
pop
fidivrs
fsubs
cmpsb
xchg
xchg
cmpsb
mov
scas
sahf
ja
aas
xor
jae
lcall
xchg
js
cmp
out
mov
xor
xor
icebp
outsb
xchg
push
loope
popa
sti
and
mov
icebp
mov
cmovg
sub
jmp
jmp
mov
outsl
dec
and
adc
test
inc
jl
pop
cmpsl
into
xchg
js
xorb
mov
sahf
or
or
adc
mulb
sbb
inc
cmpsb
mov
cld
and
out
xchg
daa
dec
xor
incb
jb
mov
add
dec
sub
xor
jle
cmp
pop
rcrb
jmp
loopne
jbe
je
or
xchg
loope
popf
call
shr
xchg
lods
outsb
cmpsl
ljmp
ret
xor
mov
xchg
adc
push
mov
adc
mov
xor
js
pop
outsl
shr
mov
test
je
xchg
push
lds
adc
xor
es
pop
cld
outsl
sub
cmp
cmc
jp
addl
mov
fistl
jp
add
inc
pop
outsl
in
xchg
push
int
sbb
xor
adc
sub
addr16
aas
add
jo
cmpsl
iret
je
xor
mov
ja
out
repnz
mov
or
sub
adc
loope
sub
out
cmpsb
in
pop
cmpsb
jle
mov
jmp
stos
scas
aas
test
sbb
lods
cltd
add
lods
aas
mov
jbe
mov
test
outsl
push
sbb
lea
lret
shrb
and
rcrl
and
insb
out
xor
popf
push
outsl
pop
mov
adc
pop
cmpsl
mov
fcoms
xchg
xlat
cwtl
mov
push
repnz
sub
imul
retw
mov
and
jo
imul
push
imul
movsl
jge
dec
outsb
fldl2e
and
in
jg
xchg
jo
in
pop
bound
sub
icebp
xor
inc
xor
adc
mov
cmp
xor
cmp
orl
pop
mov
or
jecxz
sbb
loopne
ja
jmp
adc
testl
sahf
jle
scas
cmp
mov
mov
jne
jbe
mov
inc
dec
jno
gs
adc
jg
jbe
imul
push
in
addr16
xchg
inc
pop
cmp
mov
jae
pushf
sbb
sub
or
push
push
and
jne
test
mov
in
inc
out
popa
mov
ja
aam
or
fsubr
jo
mov
movsl
mov
outsb
hlt
movsl
enter
cmp
dec
notb
jle
sbb
adc
xor
ret
add
and
push
cmpl
and
push
adc
sub
mov
or
sbb
inc
dec
subl
xchg
cwtl
call
sahf
jb
adc
xchg
mov
mov
jmp
sbb
mov
and
add
cwtl
sbb
lahf
jecxz
jge
xchg
xor
push
addr16
xchg
lret
and
adc
sbb
mov
insl
or
mov
in
mov
xor
insb
scas
shrl
cs
fwait
xlat
mov
push
pop
sbb
shlb
xchg
sbb
pop
mov
push
sbb
ljmp
insb
mov
mov
add
stos
xor
fistl
clc
dec
js
js
mov
outsb
mov
loopne
xor
js
push
cs
lods
ret
add
loope
data16
mov
out
out
pushf
mov
ljmp
adc
loope
or
add
sbb
inc
adc
rorb
pop
add
jae
test
lods
lcall
fucomip
sbb
mov
jle
jge
loop
jg
mov
shlb
sbb
js
mov
xchg
scas
xchg
ret
push
or
or
pop
fbstp
mov
popa
mov
fsubrs
test
ljmp
decl
cmp
jle
test
xor
adc
sbb
sbb
xorl
mov
mov
sbb
and
push
loope
pusha
mov
push
jnp
mov
xor
sbb
js
dec
push
lods
push
je
fs
js
sub
ss
fs
ds
js
cli
pop
xor
pop
xor
iret
inc
rcrl
xchg
outsl
pop
es
xchg
mov
cli
dec
test
mov
scas
cwtl
stc
adc
mov
ss
and
outsb
pop
in
daa
sbb
shll
inc
xchg
lea
jbe
mulb
test
adc
jne
jno
test
es
xor
sub
sub
popw
jecxz
pop
push
imul
cltd
cmpsb
mov
or
out
pop
or
xchg
sbb
jae
leave
cmp
pusha
sbb
cmp
iret
hlt
push
xchg
js
repnz
sub
cmpsb
popa
pop
and
movsb
cs
dec
xchg
in
scas
sahf
adc
insb
aas
fmuls
clc
inc
and
push
pushf
dec
fwait
cmpsb
loope
ds
pushf
xor
stos
insb
js
in
lahf
pop
call
fistpl
pop
lret
sahf
cmpsb
iret
push
xlat
xor
scas
mov
xor
scas
lcall
dec
cmpsl
jno
mov
ljmp
mov
test
push
sub
jae
fdivrs
jmp
xor
pop
jae
xchg
ret
sbb
xchg
push
xchg
push
push
rcrb
xchg
lahf
pop
and
fbstp
and
push
sub
or
sti
cwtl
stc
cmp
mov
ret
ret
jo
pop
xchg
es
cmc
in
pop
bound
mov
push
sbb
jns
cmpsb
nop
es
sbb
arpl
orl
js
fnstcw
popa
dec
in
movsb
outsb
cmc
pop
loope
ss
mov
mov
xchg
lcall
je
cwtl
cltd
pusha
mov
scas
dec
or
cwtl
ret
add
aas
mov
gs
es
adc
mov
xchg
loop
test
xor
pop
movsl
dec
mov
cmc
test
or
mov
fidivrs
xchg
aaa
cmpsb
dec
aaa
jo
xchg
shrb
add
push
inc
mov
cwtl
add
stos
bound
jns
adc
fildll
add
sbb
iret
and
mov
dec
and
xor
jbe
dec
mov
sub
sarl
insb
sub
jns
icebp
xlat
shlb
movsb
adc
jge
js
das
int
mov
cli
in
fcomps
jae
cmpsb
and
pop
push
loop
cmp
and
pop
sbb
jmp
mov
jl
xor
xchg
lcall
jl
scas
iret
sbb
pop
call
fcoms
iret
mov
repz
xor
into
or
addb
xor
mov
push
fadd
sbb
push
or
xabort
push
xorb
out
js
xlat
in
scas
fscale
sbb
mov
pop
xchg
cmp
fisttpll
movsb
xor
cmp
int
iret
xchg
cmpsb
movsl
mov
out
adc
popa
aaa
jns
xor
addr16
mov
inc
cmp
xor
xor
jae
pop
pop
ss
hlt
xor
gs
or
or
cmp
mov
mov
fidivrl
sbb
pop
shrl
popa
jl
jle
ret
push
fsub
icebp
xor
jmp
fldcw
jb
and
push
push
inc
sub
adc
call
lods
loopne
clc
leave
popa
xor
push
sbb
jns
sbbb
or
or
insb
daa
ss
adc
repnz
loope
cld
mov
push
sbb
sti
mov
mov
in
push
cmp
mov
lods
js
shll
test
ret
xchg
cmpsb
add
pop
mov
enter
and
push
fisttps
inc
inc
imul
or
movsb
test
pop
mov
popa
fbstp
cmp
cmp
testl
xchg
push
sub
ss
cmpsl
ds
sbb
cmp
xor
mov
dec
adcl
push
test
movsb
ds
inc
mov
pop
imul
int
iret
or
mov
lret
pop
nop
call
mov
mov
int
xchg
cltd
and
sar
push
inc
fistl
sahf
lds
pop
stc
fildl
mov
adcl
test
cwtl
or
dec
lods
mov
cli
sub
push
or
into
hlt
xorl
clc
xor
or
cltd
pop
test
push
sbb
push
in
test
ja
jbe
xorb
jle
sub
nop
pop
sub
imul
adc
stc
fldt
std
inc
loope
iret
test
cmp
cmc
sbb
leave
pushf
jbe
mov
adc
jo
lods
icebp
or
test
out
stc
jns
jbe
pop
lods
adc
call
push
mov
mov
xchg
divb
popa
lret
lcall
rolb
es
enter
mov
loop
inc
call
add
testb
jae
es
shll
pop
ljmp
ret
js
fwait
sub
mov
pop
mov
fistpl
mov
push
pop
fisubrl
and
nop
xchg
sbb
pop
add
or
mov
pushf
out
andb
dec
sbb
push
xchg
sbb
jns
cwtl
add
adc
int3
dec
pop
jb
mov
stos
fwait
mov
push
ss
inc
mov
ljmp
leave
push
clc
mov
add
outsl
inc
mov
out
adc
data16
in
lret
insb
cwtl
xchg
push
xor
mov
and
adc
pop
mov
mov
mov
xchg
jbe
insb
dec
outsb
icebp
pop
aas
ret
adc
add
arpl
sbb
xchg
or
mov
jo
push
imul
stos
add
popf
inc
in
pop
mov
sub
adc
push
adc
dec
push
dec
psubusb
int
outsb
sbb
movsl
pop
nop
cmp
xchg
ja
and
push
scas
and
sbb
aaa
cwtl
push
pop
ret
std
cmovne
mov
lock
mov
insb
fistpll
aas
bound
lret
xlat
xchg
inc
xorl
testb
xchg
and
std
xchg
repz
cmovle
lds
and
test
and
out
mov
adc
clc
sti
fdivs
cwtl
jae
lret
xor
iret
flds
mov
inc
sub
insb
xchg
fstps
jbe
jae
mov
daa
adc
fadd
mov
in
and
enter
fmuls
xchg
fdivrs
xchg
sbb
add
jae
push
int3
lods
jnp
js
cmp
mov
repnz
mov
std
inc
mov
mov
idivb
mov
dec
mov
cmpl
repz
inc
dec
mov
lds
mov
into
xchg
jl
lods
mov
stos
pop
adc
add
lds
jns
add
jnp
imul
pop
pop
movsl
cld
stos
cmp
dec
nop
cmc
frstor
mov
and
jle
pop
xchg
rcrl
cltd
ror
mov
nop
pop
jle
sbb
pop
scas
cmp
ds
and
xor
mov
mov
push
sbb
push
out
mov
fs
sarb
mov
push
ds
cwtl
orl
and
push
push
lcall
stos
sub
adc
scas
dec
in
test
mov
jp
pop
jmp
sbbb
mov
jge
jae
incl
aas
outsb
out
hlt
push
pop
mov
outsb
sub
mov
sbb
cmp
fsubrp
in
cmp
adc
sub
lcall
xor
xor
push
hlt
push
cltd
xor
mov
xchg
xorb
fldl
mov
lods
jae
mov
mov
push
pop
insl
push
shr
sahf
mov
dec
cltd
xchg
dec
cmp
sub
xor
push
sbb
mov
dec
or
jb
addr16
xchg
in
test
cmp
je
cwtl
mov
push
pop
rcrb
adc
mov
dec
inc
shll
mov
push
push
dec
cwtl
xchg
dec
dec
jae
mov
mov
stc
mov
cltd
mov
imul
insl
scas
inc
pop
jnp
adc
mov
inc
jbe
mull
mov
dec
adc
sarl
sbb
sbb
mov
adc
jbe
cmp
cmp
lods
popf
fistl
int
mov
push
testl
push
or
fiadds
push
into
or
shrl
add
push
xor
iret
sbb
xor
xchg
jmp
xchg
cwtl
in
clc
mov
pushf
mov
cmp
xor
es
sarb
push
scas
mov
test
scas
sbb
shll
adc
mov
clc
sub
test
ja
in
sub
pop
mov
xor
ds
pushf
ret
adc
int
sub
dec
add
or
inc
mov
movsl
std
dec
ja
inc
subl
aaa
add
lods
movsb
sub
aad
push
push
shrl
pop
js
rcrl
sub
fistps
cmpsb
jbe
dec
or
stos
add
adc
inc
test
push
inc
mov
jl
pop
jae
jbe
fcom
cmp
stos
outsl
add
pop
adc
pushl
daa
pop
xor
jg
mov
lds
js
jp
sbb
mov
mov
loope
and
adc
cltd
daa
dec
push
jbe
cltd
adc
daa
xor
push
mov
dec
adc
fcomi
dec
and
stc
sbb
adc
js
dec
sub
push
push
or
xor
sub
pop
sub
cmp
adc
jb
inc
push
je
scas
ljmp
es
xor
mov
je
pop
mov
mov
shll
out
aaa
and
mov
fcmovnu
outsb
cmc
mov
xor
popa
fs
xlat
or
xor
je
xor
lods
aam
fs
mov
mov
inc
pop
adc
mov
jb
les
add
xchg
sbb
or
xor
or
lods
and
sub
or
mov
or
push
mov
jb
pop
mov
push
xor
cmpsb
adc
mov
or
pop
xchg
test
cmpsb
or
or
pop
fsubs
lock
pop
cltd
insl
fnstcw
enter
dec
pusha
xor
test
mov
xchg
ja
dec
mov
insl
xor
movsl
mov
mov
and
sbb
js
inc
insb
cmc
out
div
jl
js
icebp
xchg
fcmovnb
xchg
xor
fidivrs
scas
inc
mov
rclb
xor
stos
mov
je
dec
mov
repz
ret
cmp
fwait
and
adc
test
outsb
pop
iret
in
cmp
sbb
loope
push
shlb
jle
scas
and
outsl
jle
xor
lret
scas
fidivl
mov
mov
scas
nop
pusha
jmp
lret
shll
js
test
and
andl
enter
mov
pusha
push
sbb
jae
and
mov
shrb
pop
jb
mov
sbb
pushl
jge
das
lock
mov
jb,pn
fidivs
xor
mov
je
or
mov
adc
loope
aam
mov
dec
push
mov
cmpsb
sbb
aaa
fmuls
push
lods
nop
jb
pop
stc
cmpsl
cwtl
icebp
xchg
pop
cmp
xor
lods
pop
jb
adc
repz
daa
mov
cmpsb
pop
rolb
test
mov
call
aaa
mov
push
pop
pop
test
mov
jmp
xor
test
xchg
add
jbe
js
les
adc
cmpsl
je
cmp
or
mov
sbb
cmc
adcl
mov
mov
inc
sbb
js
clc
and
xor
mov
inc
xchg
cwtl
popf
pop
adc
mov
mov
jae
scas
js
inc
mov
mov
xor
ret
cwtl
push
and
cltd
add
test
nop
or
mov
mov
mov
inc
inc
adc
add
sub
sbb
add
jo
pop
sbb
push
jae
popa
pop
addl
jp
mov
cbtw
pushl
and
mov
sahf
clc
dec
jmp
arpl
dec
xchg
jae
adc
loope
lods
or
inc
fmuls
movsl
dec
mov
mov
jae
jae
push
fs
sub
int3
loop
adc
mov
stos
loope
jecxz
xabort
adc
dec
stos
std
das
pop
and
fsubr
push
push
cltd
lds
jecxz
add
adc
jbe
pop
jb
mov
mov
dec
xchg
xor
addr16
cmp
je
cli
pop
adc
pop
cmp
jae
shlb
pop
ret
stos
jecxz
jbe
jbe
sbb
xchg
xor
std
xchg
icebp
inc
push
pop
dec
stc
mov
mov
cli
xor
lods
push
adc
add
sub
mov
insb
insb
or
lock
cltd
xor
sub
stc
xlat
mov
xchg
imul
cmp
fisttps
dec
mov
pop
and
rcrl
add
nop
rcrb
fnstenv
pop
fcmovnbe
js
or
add
jns
jo
pop
jae
adc
mov
insb
sbb
fiaddl
add
imul
lcall
jno
jp
clc
lods
jae
das
imul
pop
or
imul
sub
xchg
add
jg
repnz
adc
or
jbe
ret
insb
inc
imul
iret
insb
jns
mov
jns
add
jo
mov
insb
insl
inc
mov
sahf
aaa
or
mov
ss
and
sub
xchg
jg
addr16
pop
mov
repz
push
out
jecxz
add
cmp
insb
jp
decb
test
mov
rep
adc
pop
cli
adc
sub
inc
fadds
pop
push
call
rolb
jnp
stos
cmpsb
jae
ret
ds
mov
icebp
les
cmp
add
mov
jbe
or
inc
repz
mov
div
dec
cmpsb
adc
enter
adc
stc
inc
or
adc
pop
pushf
xor
out
int3
and
cmp
int3
mov
mov
fs
repz
mov
fstps
int3
lods
inc
sarl
aaa
add
sbb
jle
mov
jg
js
add
mov
or
xor
js
dec
ror
cli
mov
bnd
je
mov
sub
add
js
jmp
shll
pusha
es
xor
xchg
and
adc
sahf
dec
cld
push
sar
repnz
movsl
jmp
mov
loope
jge
cmpsb
push
lcall
lea
jae
repnz
adc
mov
lods
scas
mov
pop
js
xlat
je
jl
push
js
add
add
in
add
mov
js
sbb
rclb
imul
dec
mov
adc
insb
sub
test
add
in
sbb
cmpb
es
mov
mov
fs
cs
sub
cmpsb
stos
or
mov
inc
test
or
fs
or
cwtl
imul
mov
xchg
push
test
mov
shlb
or
daa
dec
movl
sub
cs
test
pop
mov
out
popa
jb
stc
dec
arpl
popa
imul
fs
les
je
cwtl
loopne
mov
jge
std
xchg
push
iret
ret
sub
test
sbb
push
ret
sbb
cltd
orb
jle
cli
shrb
clc
ljmp
jno
lock
xchg
mov
add
fbstp
inc
mov
inc
mov
push
inc
daa
ljmp
xor
lods
xchg
mov
xchg
dec
es
sbb
iret
or
pop
adc
out
dec
mov
mov
js
out
mov
mov
pop
push
pop
sbb
lods
lods
loopne
into
sbb
sub
aaa
cwtl
pop
es
je
je
cltd
scas
popa
in
movd
ret
iret
test
sub
loope
sub
loope
adc
sbb
in
pop
sub
dec
lock
inc
dec
dec
or
sbb
sub
lea
insb
inc
shlb
sbb
js,pn
jae
and
cmp
adc
movups
movsb
adc
mov
dec
js
ja
cmpl
cwtl
push
stc
or
lods
xchg
dec
arpl
mov
lock
stc
jo
sub
dec
jno
rorb
mov
pop
mov
imul
inc
adc
ss
jo
cmp
outsb
sti
leave
js
mov
push
sub
dec
mov
and
ljmp
test
or
jno
or
lods
jbe
jno
test
cmp
mov
and
and
xor
add
xchg
add
lods
add
mov
mov
test
jne
sbb
cmc
sub
and
test
loope
and
js
mov
cmp
bound
mov
repz
dec
mov
out
push
push
jne
adc
sbb
sub
cmp
and
js
sub
sub
jb
cmp
sti
mov
stc
sub
push
and
nop
mov
xchg
xchg
insb
insb
popa
dec
mov
enter
xor
pop
imul
sub
mov
shlb
push
and
cmp
cmp
loopne
sub
rorb
pop
pop
push
sub
repnz
dec
xchg
cs
inc
jns
jnp
iret
jno,pt
in
cmc
mov
pop
loope
xchg
mov
cmpsb
jle
js
mov
mov
sub
aam
js
push
mov
jge
outsl
sbb
mov
mov
pushf
mov
mov
std
sbb
jo
xor
or
jle
adcl
pop
imul
xchg
push
xchg
stc
pop
fimull
das
jg
lret
dec
test
loop
add
jo
adc
mov
mov
sub
imul
stc
and
or
orb
xorb
mov
das
mov
insb
mov
cmp
xor
or
fs
push
popa
insb
mov
stos
in
add
shl
mov
ja
adc
fldl
jae
inc
adc
imul
jecxz
scas
sbb
pop
sahf
inc
lret
and
xor
dec
mov
jecxz
xchg
xorl
cmp
cmp
and
add
mov
mov
xchg
adc
movsl
jl
lods
jmp
andb
pop
sub
in
jmp
iret
in
lock
lock
fcom
es
js
inc
xchg
xor
fsubr
mov
test
inc
push
push
lock
dec
js
lods
sub
push
sahf
insb
jne
pop
or
cmp
mov
mov
popf
jo
lds
mov
addr16
xlat
mov
pop
test
sbb
push
js
js
lods
fsubrl
cld
push
add
ss
push
jb
push
je
mov
jle
outsl
mov
push
movsb
pop
insb
inc
in
sub
jo
xorb
mov
clc
pushf
insl
adc
mov
jl
pop
jge
das
push
decb
sub
xchg
push
push
push
pop
inc
add
xchg
or
in
push
mull
cmp
data16
sbb
cmpsl
jns
sahf
es
mov
mov
pop
and
sbb
loop
pop
adc
pop
lods
mov
add
xchg
ret
pop
add
js
ds
mov
jb
fdivr
mov
mov
push
dec
pop
or
cmpsb
jno
fcomps
arpl
xor
ljmp
cmp
pop
jp
insb
scas
cmp
cmp
fadds
or
sbb
mov
shll
jnp
jle
adcb
into
mov
sti
mov
cmp
sti
arpl
pop
sub
fcomp
test
mov
popa
adc
lret
fs
insb
pushf
push
push
call
lds
dec
incb
scas
dec
loope
push
or
je
mov
sbb
scas
pop
jmp
fnsave
inc
btr
mov
xlat
jae
iret
adc
cmp
add
cltd
sub
lds
xor
pop
test
and
cmp
pop
mov
fcmovnu
fmull
cltd
inc
mov
rorb
repnz
jge
push
sub
push
hlt
imul
mov
xchg
pop
or
aaa
and
push
push
mov
mov
aas
shll
xchg
test
les
mov
pop
and
mov
adc
mov
xchg
repz
gs
mov
or
xchg
sub
stc
call
hlt
adc
dec
jge
hlt
dec
sbb
mov
cmp
out
cmp
dec
sbb
aam
sub
jp
mov
cmp
cltd
stos
jno
sub
pop
mov
mov
jno
jnp
es
sbb
fmull
fs
into
cwtl
lret
jbe
jnp
in
dec
daa
pop
imul
jo
jne
jbe
shll
sub
jl
in
and
cs
loop
fdivs
mov
xlat
xorb
and
sbb
cmp
andl
out
jae
sbb
mov
dec
loope
sti
scas
push
or
shll
nop
jo
into
xchg
mov
or
in
movsb
les
mov
xor
mov
icebp
jns
imul
jae
or
lods
push
cmc
cmpsb
adc
jns
cmpsb
push
xor
sub
xchg
mov
rorb
jmp
mov
stc
pop
dec
dec
xchg
adc
in
xchg
aam
push
aad
pop
xor
enter
inc
ret
mov
adc
jne,pn
adc
jns
int
ja
xchg
mov
add
fadd
stos
cmp
adc
mov
cmp
into
mov
repz
bswap
scas
xchg
pusha
dec
add
ljmp
sbb
leave
or
adc
add
cwtl
cmp
xchg
and
mov
mov
ss
out
stc
fnstsw
sbb
jae
push
xorl
int
not
fldcw
adc
pop
mov
test
dec
inc
push
xchg
es
adc
pop
jae
loop
or
mov
add
sub
mov
xlat
sub
adc
clc
mov
cmp
pop
push
fcom
ljmp
ja
jecxz
push
push
cltd
ja
bound
lahf
clc
pop
ret
adc
adc
lds
push
fstpt
pop
int3
mov
jle
outsl
ficoml
les
popa
subb
pop
jmp
jmp
or
ret
fwait
mov
mov
and
mov
push
stc
xor
lods
jnp
or
subb
scas
adc
sbb
sub
shrl
mov
insb
jp
and
xor
arpl
sbb
xor
mov
pushf
xchg
or
stos
xchg
push
xchg
aas
mov
test
dec
bound
mov
fsts
je
pop
cmp
lgs
hlt
or
push
fmull
jo
sbbl
mov
sahf
sbb
mov
push
sbb
scas
jno
adc
sub
js
hlt
sbb
sub
test
movsb
test
xchg
popf
daa
int
xchg
and
push
sbb
sbb
jne
jle
dec
jbe
mov
in
mov
mov
lods
jb
sahf
xchg
pushf
mov
loope
mov
je
jae
loope
insb
push
decl
out
pop
sarl
jbe
ljmp
cltd
or
int
movsw
fcoml
mov
dec
push
outsb
addr16
int3
mov
pushf
mov
sub
call
jb
mov
sub
cmpsb
mov
mov
and
adc
sub
mov
and
or
pushf
xchg
test
sub
jbe
jo
pop
adc
lret
jbe
mull
and
mov
xor
mov
fisubrl
ds
and
jle
jns
mov
push
adc
cmp
mov
cmp
mov
out
and
lret
bound
js
jo
lcall
sbbl
imul
sbb
dec
inc
enterw
mov
dec
pop
sub
cmpsb
pop
add
adc
xor
aaa
mov
jnp
fucompp
xchg
enter
xchg
sbb
data16
pop
into
in
adc
fcomps
fistpl
push
test
fwait
loopne
xchg
mov
dec
dec
pop
cmc
lods
aas
mov
dec
movsl
fbld
and
mov
cld
hlt
mov
push
mov
aaa
dec
dec
push
call
and
sub
in
jb
in
test
jae
and
pop
cmp
js
aas
test
inc
rorl
and
int3
inc
pop
adc
adc
mov
sub
movsb
ret
and
jbe
ftst
and
push
mov
mov
add
jbe
pop
mov
adc
aas
sbb
fs
mov
sarb
dec
test
out
cwtl
dec
sub
xchg
add
ds
add
jne
mov
cs
stos
es
ljmp
stc
sub
mov
lret
jp
leave
jnp
jp
and
dec
fdivl
xor
dec
out
xlat
cmpsb
icebp
sahf
test
jb
xchg
dec
push
jae
mov
mov
loopne
ljmp
addr16
inc
icebp
aas
clc
mov
out
pop
push
insl
test
in
mov
push
jns
bound
sbb
mov
mov
cmp
lret
int
fcomps
adc
sub
mov
sbb
loop
hlt
out
cmpsb
pusha
pop
sbb
aas
add
cmp
jae
jb
mov
pop
dec
pop
xchg
mov
adc
ljmp
cltd
test
imul
sbb
test
xlat
stc
movsb
push
push
lds
mov
notb
jp
xchg
push
ss
add
mov
mov
pop
jae
out
pop
adc
outsl
dec
lahf
xor
xor
mov
mov
inc
sub
or
shll
push
loope
and
enter
push
mov
and
cmp
mov
add
fsubrs
sbb
les
mov
pop
xchg
sbb
loop
pop
test
jg
insb
inc
notb
loope
pop
call
dec
out
sbb
fs
inc
xor
ret
bound
sbb
andb
mov
dec
push
in
adc
pop
loope
xlat
sub
push
sbb
xor
lods
xor
test
sti
or
xor
cmp
dec
dec
mov
push
cmpsb
cmc
xchg
push
iret
mov
xchg
loope
add
data16
sarb
push
sub
mov
jae
push
pop
neg
ret
insb
sahf
push
popf
je
sub
push
jle
mov
idivb
add
and
mov
js
push
push
cmpsb
and
xchg
je
loopne
lods
popa
adcl
out
push
adc
push
sete
outsl
lret
cmp
in
mov
cmpsb
push
pushf
xchg
sub
xchg
into
inc
push
sbb
jb
or
gs
aad
arpl
xchg
xchg
push
mov
test
pop
sbb
stc
fs
jno
das
or
test
xchg
push
mov
or
mov
enter
ja
cmp
sub
in
inc
dec
adc
dec
ljmp
jne
add
mov
mov
add
orl
mov
jg
imul
mov
test
cmpsb
mov
popa
popa
add
sbb
int3
adc
cmpsl
dec
mov
jne
jp
je
fcomps
scas
jb
push
xchg
scas
pop
cld
cmp
jns
inc
inc
iret
repnz
subb
jp
cmc
lahf
mov
mov
sub
repnz
incb
xchg
das
xor
mov
jle
jne
stos
and
repnz
bound
lock
aaa
mov
push
mov
test
out
push
imul
sti
inc
xor
or
jmp
fidivl
dec
xor
pop
sub
xor
sbb
jne
lock
stos
adc
mov
pop
sbb
into
out
and
lret
sub
pop
mov
fs
lds
gs
nop
push
xlat
div
lcall
es
mov
jmp
mov
int3
dec
push
cmp
sub
cmpsb
mov
loopne
sub
mov
fnstenv
fsubrs
jbe
js
int3
mov
fadds
pusha
roll
adcb
jbe
jg
repz
add
fisubl
or
loope
pop
mov
push
push
push
int3
bound
cs
pop
add
mov
jb
push
dec
pop
ds
icebp
data16
mov
loopne
aad
cmp
xor
in
mov
adc
ffreep
adc
aaa
xchg
and
push
mov
outsb
mov
orl
stos
or
dec
clc
inc
ja
add
ret
pop
sarb
mov
das
xor
mov
js
adc
repz
pop
call
add
mov
sub
test
jns
push
insl
ds
cmp
xlat
jg
das
test
push
enter
or
xor
sarb
jecxz
movsl
sbb
inc
xchg
out
fs
lods
fstpl
stos
xlat
jl
add
popa
daa
lahf
sub
inc
xchg
pop
int3
in
outsb
loopne
lock
notb
push
dec
cmp
mov
mov
pop
test
push
add
sbb
jmp
cmp
xor
inc
and
push
icebp
cmp
lds
setle
mov
sub
iret
pushl
insl
leave
and
ja
lret
xor
jns
cmpb
pop
cmp
lods
scas
clc
push
in
push
leave
xchg
dec
push
jl
xchg
rcrb
mov
jns
jl
incb
mov
fs
adc
andb
cmp
test
sbb
js
mov
aaa
lds
or
jle
mov
mov
addl
cmp
pop
mov
inc
adc
jg
xchg
pop
icebp
pop
pushf
push
stos
add
or
and
add
push
mov
mov
fmuls
lcall
mov
jl
push
rorb
sbb
jb
cmp
loop
xchg
lods
negl
sbb
add
push
dec
in
outsl
and
pop
add
mov
push
mov
sti
jne
lods
movsb
jns
adc
or
test
std
fisttpll
jnp
dec
dec
stos
leave
cmpb
test
or
into
xchg
test
cwtl
jne
pop
lret
clc
inc
js
data16
orl
adcb
fs
xchg
sub
movsb
sbb
push
mov
lods
mov
mov
fmuls
xchg
xchg
and
aas
sub
mov
adc
fnstcw
sahf
and
adc
popa
lods
xchg
iret
aaa
pop
mov
fs
mov
fldcw
cmp
jmp
cli
add
enter
arpl
int3
inc
out
adc
mov
xchg
mov
js
mov
lahf
aaa
paddd
js
movsl
and
xlat
pop
mov
mov
add
cmpsb
shrb
jb
pop
mov
stos
out
arpl
jmp
out
or
sarb
pop
je
and
imull
nop
movsl
sbb
mov
es
xor
je
mov
pop
cmp
es
aam
ja
or
xchg
or
nop
aad
mov
add
sub
cmp
or
int
mov
aaa
movsb
dec
pop
mov
testl
hlt
push
js
mov
cmp
arpl
push
xchg
dec
out
xchg
test
xchg
xchg
mov
xchg
mov
adc
push
mov
sub
ret
mov
sub
adc
cmc
cmp
adc
shl
mov
lret
jne
dec
jp
test
jns
jo
js
movsl
test
mov
xchg
fisubrs
or
pop
dec
push
lahf
shll
mov
push
mov
inc
or
push
rcrl
clc
testb
mov
jno
jo
pop
pop
mov
add
enter
jnp
jmp
adc
ljmp
mov
ljmp
dec
jmp
or
and
mov
cmp
sbb
cmpsb
pop
iret
cwtl
pop
sub
xchg
mov
cwtl
cmp
adc
cli
jae
pushf
xor
cwtl
inc
pop
stos
jno
mov
mov
imull
test
mov
xchg
pop
xchg
mov
stc
xchg
mov
adc
aad
jno
fsubrs
lcall
shlb
or
jecxz
cwtl
data16
mov
in
out
test
mov
repnz
pushf
mov
inc
mov
jno
icebp
dec
mov
outsl
mov
aas
xor
or
stc
out
push
aas
sub
arpl
mov
xor
mov
sub
inc
movsl
mov
imul
adc
aaa
mov
xor
sub
xchg
xor
push
hlt
repz
mov
push
adc
pop
xor
je
leave
and
xor
stos
or
and
dec
mov
push
sub
pop
fstpt
sti
lcall
bnd
les
xchg
lret
mov
sahf
xor
loope
dec
or
lret
stc
jo
es
sti
dec
xor
jmp
pushf
popf
and
jl
cmpsb
mov
cld
sub
xor
sub
adc
jp
stc
les
mov
mov
pusha
in
xchg
inc
adc
mov
movsl
push
je
or
addr16
sbb
xchg
insb
fimuls
test
sarb
std
or
data16
jnp
xchg
jb
jae
mov
dec
arpl
mov
mov
adc
push
cmp
cmp
push
jo
mov
out
jmp
js
jbe
leave
push
rorb
jae
xchg
je
or
cmp
add
jne
push
scas
rep
lea
mov
ficoml
orl
xorl
pop
daa
mov
mov
add
mov
and
loope
iret
pop
bound
in
pop
fmulp
aaa
negl
pop
mov
movsl
rcll
loope
pushf
int
xlat
ret
lock
lock
imul
iret
jo
jl
in
movsb
jo
sbb
jo
mov
pop
in
sub
mov
xor
or
sub
imull
cmpsb
gs
test
pop
mov
pop
jge
mov
sti
outsl
ret
pop
insb
ja
mov
mov
push
and
xchg
xchg
outsb
or
movsb
in
jbe
pop
mov
arpl
jp
sub
dec
mov
sbb
mov
push
pushf
scas
in
fdivl
or
movsb
fdivl
adc
sub
mov
pusha
and
xor
ss
je
notl
aas
lods
cmp
add
pop
or
mov
clc
cmp
pop
dec
adc
test
pop
sbb
xor
jne
inc
cltd
mov
inc
into
js
in
iret
mov
xor
shl
pop
cs
je
xchg
mov
mov
imul
test
sub
and
shr
mov
ja
mov
dec
dec
sbb
add
fldt
test
xchg
ss
leave
sbb
jmp
ss
push
scas
jae
sbb
fidivs
scas
mov
push
lock
push
leave
icebp
inc
loopne
adc
and
call
jo
or
fcomps
std
stos
cs
xchg
js
cli
jno
int
test
cmc
jle
sub
lahf
lock
sbb
imul
xchg
outsl
ret
cld
mov
arpl
jns
aad
mov
cmpsb
ret
sbb
jmp
sbb
jne
ret
mov
leave
iret
cltd
lods
pushf
jns
aas
sbb
aaa
pop
add
add
pop
inc
jae
loope
cmp
testb
inc
popa
aas
inc
sbb
bound
and
fbstp
mov
pop
xor
push
cmp
pop
mov
xchg
adc
dec
cmp
pop
push
mov
fiadds
out
jo
shrl
into
jae
adc
fidivs
push
hlt
aaa
adc
daa
adc
pop
or
popa
popf
mov
pop
mov
pop
dec
subl
sbb
jmp
sub
clc
add
ret
into
outsl
or
insb
push
mov
or
movsl
pop
push
adc
and
pop
dec
je
and
pop
xchg
sbb
xchg
mov
or
repz
ficomps
dec
push
pop
out
dec
push
mov
jo
pusha
push
push
bound
cmp
dec
mov
imul
mov
push
jo
cld
xor
ljmp
add
push
dec
iret
adc
mov
mov
sbb
roll
cmp
pop
je
popa
add
sub
inc
pop
mov
std
cli
sarl
repz
test
ret
pop
hlt
jae
dec
sub
and
cmp
push
mov
stc
sbb
sahf
orl
test
inc
xlat
jg
mov
sub
scas
xor
cmp
aad
add
xchg
insb
inc
aam
or
xor
sarb
pushl
add
pop
repz
clc
mov
js
insl
mov
sbb
jae
xchg
sub
ljmp
cmp
adc
scas
and
daa
jmp
push
mov
lret
xor
mov
inc
fsubs
sbb
mov
jmp
inc
mov
sbb
sbb
shl
mov
je
mov
add
iret
test
push
sub
push
mov
cmp
mov
adc
call
aam
jae
int
je
jge
fists
js
xor
xchg
sahf
das
mov
and
xchg
pop
sbb
mov
nop
and
cmp
cwtl
mov
xchg
pop
int3
cmpsb
iret
jno
adc
shrl
shlb
out
pop
repz
mov
push
xchg
loope
jmp
xchg
xor
out
cmp
push
mov
shl
adc
xor
cwtl
lock
and
and
mov
in
push
pop
push
sub
out
sahf
cld
sbb
xchg
shlb
jae
fstl
rol
mov
add
mov
mov
xor
roll
dec
repnz
pop
repnz
sub
mov
jno
cmp
repnz
pop
shrl
xchg
mov
stos
imul
cmp
int
ss
cltd
fwait
es
lock
push
aas
sbb
test
push
push
repz
inc
push
push
dec
push
in
xchg
adc
add
cmp
dec
movsbl
fucomi
fsubrl
sub
lods
out
shlb
pop
out
xor
pop
pop
cwtl
mov
iret
js
into
mov
into
test
mov
stos
imul
cwtl
popa
lret
xchg
movsb
addr16
stos
pop
movsl
fists
outsb
cmp
push
dec
mov
or
cmp
scas
adc
xor
mov
add
int3
repnz
shll
mov
push
mov
inc
xchg
add
adc
test
sbb
xchg
cmp
xor
stos
into
dec
lds
or
sbb
je
in
jbe
loopne
shrb
lcall
insb
push
jecxz
test
mov
cltd
push
sub
jae
lea
xchg
in
loope
jmp
dec
leave
mov
pop
push
sarl
clc
clc
lret
ja
mov
add
dec
adc
loope
cwtl
push
sub
adc
inc
jp
adc
mov
pop
test
xchg
test
or
pusha
js
sbb
xchg
sub
das
mov
cmp
stos
jp
aam
mov
mov
inc
jne
test
or
in
pusha
add
fchs
jl
stc
cwtl
in
and
adc
dec
ffree
orl
sub
les
cmc
insl
mov
shlb
rcl
outsl
js
es
fs
pusha
mov
je
pop
sub
adc
add
es
dec
adc
loopne
mov
pop
shlb
sbb
mov
sarl
mov
mov
mov
jnp
sbb
dec
js
jmp
mov
mov
xchg
das
push
aam
icebp
mov
and
les
xor
add
lods
dec
sbb
lods
lcall
scas
lock
leave
xchg
nop
jecxz
fcoms
divb
sbb
sub
cs
out
adc
loopne
add
adc
loope
mov
jnp
test
mov
sub
and
subb
add
cmp
push
icebp
out
mov
ja
mov
dec
mov
out
push
dec
js
es
ss
xchg
stc
lea
sbb
stc
or
mov
sbb
push
mov
push
pop
je
sbb
adc
dec
in
sbb
gs
out
xor
mov
mov
movsl
cmp
dec
mov
sub
xchg
lock
xor
jle
jne
or
repz
mov
pushf
shrb
cmp
add
es
cmpsb
push
mov
jae
out
push
inc
push
mov
xchg
pop
aam
sbb
iret
mov
or
lock
inc
jno
aam
jae
std
nop
add
xchg
stos
xchg
sbb
xchg
ss
or
fcomip
pop
movsb
gs
pop
aaa
push
cmp
push
dec
test
ret
xchg
cli
push
ret
mov
adc
in
cmp
bound
xor
sbb
xchg
cwtl
in
or
adc
mov
xor
sarl
jg
inc
fnstenv
sbb
aaa
pop
jbe
sbb
pop
inc
std
and
sbb
push
push
jecxz
mov
addb
add
jg
fucomip
cltd
jno
test
aaa
cmpsb
nop
adc
dec
sti
push
call
or
inc
adc
in
in
mov
into
int
stc
mov
nop
stos
mov
popf
adc
xlat
jae
jl
aaa
add
out
lds
jecxz
iret
pop
jno
mov
jle
and
decl
jl
loop
push
mov
xchg
insb
das
test
sbb
jbe
adc
sub
and
adc
mov
repz
dec
or
jle
nop
jbe
aas
push
js
xor
faddp
cwtl
adc
jo
jae
inc
stos
mov
push
cmp
xchg
cmp
repnz
mov
leave
cmc
sub
mov
stos
fisttps
push
push
adc
sti
sbb
sahf
dec
cmc
cmp
mov
inc
push
stos
mov
test
jmp
test
or
sub
mov
pop
in
in
jo
mov
fsts
mov
imul
pop
adc
push
add
andb
mov
add
add
test
dec
xbegin
rcrl
sti
repz
xchg
xchg
adc
mov
sub
sbb
es
dec
pop
mov
test
movsl
enter
int3
aaa
data16
cld
or
js
ds
adc
int3
scas
out
xor
cmpl
xchg
mov
mov
push
or
subb
std
or
insl
sbb
add
and
js
jns
call
xchg
les
add
mov
imul
icebp
test
fimull
jl
fstpt
nop
popf
jns
jg
aas
jbe
or
imul
cmp
paddsw
movsb
dec
sub
mov
xchg
xor
aas
jmp
sub
iret
pop
sub
mov
xchg
push
jecxz
pop
mov
push
sub
fcoml
mov
push
testl
pop
ret
push
and
push
cwtl
shll
mov
je
xchg
enter
test
fistpll
push
enter
movsb
scas
jecxz
or
and
jno
lret
roll
cs
xor
jno
sub
mov
sub
or
push
jmp
js
movsb
std
inc
adc
xchg
cmc
add
mov
pop
jns
sbbb
mov
jl
pop
sub
in
in
jo
lcall
int
dec
inc
cwtl
dec
and
jl
in
sub
push
pusha
mov
into
lahf
pop
cli
fidivs
aad
mov
ljmp
fbstp
sar
pop
outsb
sub
test
add
add
adc
stc
js
adcl
push
jae
hlt
xor
mov
add
push
insb
mov
cmpsb
mov
dec
pop
ja
pop
push
pop
adc
out
negb
dec
fisttpll
clc
and
in
dec
inc
ja
ljmp
cmp
lret
add
or
cltd
fldl
push
and
fimuls
lret
inc
mov
pop
lods
dec
xor
pop
sahf
adc
mov
cmp
call
fmulp
ret
pop
test
loope
into
push
adc
sub
xor
add
xchg
push
imul
imul
loopne
push
test
popf
xchg
or
push
lret
mov
lret
call
dec
bound
lds
out
je,pn
pop
jns
and
jbe
adc
xor
jmp
and
js
pop
add
cltd
sub
pushf
cmc
cmp
sbb
cmp
call
pop
xlat
int3
mov
scas
jge
xchg
cmp
scas
sub
sub
or
jne
fstps
mov
dec
xlat
aad
pop
imulb
in
or
xchg
fdiv
push
bound
mov
xor
in
sti
jmp
sbb
pushf
xor
pop
xor
sti
mov
jo
and
sub
rcr
sbb
out
jnp
jb
imul
nop
enter
nop
es
sbb
imul
sbb
adc
fistl
js
cmpsb
dec
iret
mov
jo
adc
test
out
dec
jnp
and
cmp
and
jbe
cmp
jbe
inc
ret
mov
fcomp
imul
push
addr16
mov
add
xchg
int3
jg
cmp
xchg
mov
xchg
sub
mov
sub
xlat
inc
enter
mov
mov
pop
inc
push
jae
push
rorb
and
push
outsb
inc
or
jns
jbe
mov
iret
js
cmp
pop
or
push
loopne
jno
fildll
testb
sbb
push
insb
xchg
adc
push
mov
cmp
out
pop
lods
push
stos
inc
ja
jg
jl
clc
js
push
lock
sbb
dec
loopne
mov
sub
sub
stos
adc
or
iret
jae
xor
xor
mov
inc
sub
sbb
jbe
or
mov
xchg
xchg
and
ss
pop
fstpt
in
push
in
sub
iret
sbb
hlt
or
cmpsb
out
or
mov
iret
dec
popa
add
dec
mov
leave
movsb
loope
push
pop
inc
xchg
fwait
cwtl
js
jne
jb
push
outsl
insb
inc
sbb
sbb
int3
imul
cmpsb
imul
sbb
mov
hlt
jb
scas
sub
sahf
inc
outsb
leave
xchg
or
ja
adc
mov
movsl
xor
lret
dec
scas
jae
subl
movsl
insb
sbb
pop
adc
aaa
pushf
hlt
pushf
js
jnp
daa
xor
in
mov
insb
sub
and
fnop
negl
flds
jo
dec
sbb
std
and
je
test
in
outsb
sub
pop
mov
mov
aaa
sahf
xor
fadds
and
notl
mov
loope
lds
mov
mov
test
xor
or
and
mov
dec
dec
mov
cmp
test
adc
nop
faddp
jecxz
bound
add
jae
jg
push
jp
call
mov
mov
shr
xchg
jo
ds
jno
push
jne
or
imul
push
pusha
sub
mov
mov
inc
jo
sub
mov
xor
pop
dec
xor
mov
insb
sub
push
jp
ret
iret
lahf
shll
adc
fidivs
insb
out
js
add
aaa
push
scas
jno
pop
lods
xchg
push
stc
popa
mov
push
popf
adc
cmpsb
js
lods
pop
sub
insl
lea
mov
ljmp
mov
movsb
iret
fwait
cmp
stos
fwait
jl
aad
and
and
mov
js
mov
or
sbb
jg
push
inc
push
sub
js
lret
sub
clc
mov
mov
pop
pop
iret
add
and
mov
push
cmp
out
add
inc
movsl
sahf
dec
sub
cmc
aaa
sub
xchg
js
clc
stc
sbb
shrb
sbb
xchg
cmp
xchg
xorl
push
lods
cwtl
bound
cmp
mov
inc
sbb
ret
pop
divl
in
call
adc
mov
into
sbb
fidivs
xor
pop
jge
out
cltd
xor
dec
std
cmp
mov
js
loope
xlat
xchg
les
mov
xchg
ss
test
insb
pushf
mov
xchg
inc
sbb
pop
add
push
inc
sti
cs
sarb
ja
in
or
adc
jne,pt
int
int
sub
dec
ret
adcl
mov
ret
hlt
sbb
iret
fwait
lock
nop
xor
call
jg
jecxz
jnp
jae
pop
fwait
mov
push
xchg
stos
push
mov
jge
mov
or
mov
add
add
jg
cmp
mov
or
insb
sub
testb
and
cs
in
or
sbb
cmp
jg
mov
push
imul
sbb
cmc
insb
call
xchg
nop
je
into
adc
inc
mov
out
fdivp
dec
mov
mull
test
lods
push
aad
jae,pt
adc
mov
xchg
ss
jae
and
mov
pop
pop
xor
and
test
push
adc
fcomip
mov
xchg
adc
xor
testl
pusha
or
js
inc
cmp
and
adc
pusha
mov
pop
aad
call
mov
jle
mov
cmp
pop
out
xor
imul
icebp
inc
jge
out
lds
sub
popa
fwait
mov
imul
and
lret
and
aam
mov
or
pop
mov
lock
xchg
scas
adcb
sbb
lret
xchg
in
js
pop
arpl
xchg
nop
es
stos
arpl
sub
xor
xchg
push
push
inc
pop
sti
mov
inc
dec
shll
enter
ret
fsubs
jo
std
mov
push
jae
and
sub
xor
sbb
ss
cwtl
push
and
sub
jae
mov
cmp
dec
pop
fucom
sbb
pop
sarl
leave
lret
fs
push
insb
add
add
push
add
scas
orb
jnp
daa
cmp
jo
stos
mov
sahf
push
sbb
lret
lahf
repz
inc
or
iret
pop
int
add
int
mov
mov
nop
mov
push
xchg
xor
xchg
loope
jb
dec
add
fs
dec
mov
jle
sbb
mov
mov
out
sbb
push
leave
mov
or
iret
mov
decb
jp
bound
into
pop
lcall
mov
popa
cli
sub
cmp
inc
pop
lret
pop
dec
insb
sbbl
imul
jmp
jno
sub
sahf
jae
adc
imul
pop
adc
sub
fcmove
jo
movsb
idivb
jnp
mov
cwtl
push
inc
pop
insb
nop
addr16
fists
movsb
test
cmp
popf
xchg
adc
inc
das
mov
jbe
mov
sahf
xchg
fisubs
jae
insb
inc
jg
sub
popa
shrl
pop
fdivs
orl
out
les
xchg
jle
add
push
sbb
or
jae
xchg
cmc
jecxz
fs
push
adc
outsb
cmp
into
mov
popl
pop
dec
xchg
cmp
movsb
fidivl
sbb
sbb
lret
xor
xorl
mov
cltd
lcall
mov
xor
xchg
jae
adcl
call
mov
pop
push
imul
hlt
in
jae
lods
pop
sbb
push
ret
cli
jg
jno
mov
aas
xchg
test
mov
imul
ret
das
cmpsl
repz
push
andl
xchg
push
test
int
in
shrl
es
lods
dec
out
push
clc
aam
es
pushf
lods
loope
adc
sub
nop
adc
adcb
fisubs
sbb
cmp
enter
xor
xchg
mov
jg
sti
outsl
xlat
sub
mov
lcall
adc
push
in
push
xor
and
daa
add
xchg
sub
mov
dec
test
rol
imul
mov
lcall
dec
daa
inc
enter
movsl
adc
inc
jbe
sbb
int
cmp
lock
js
cltd
inc
mov
jns
xor
add
add
das
bswap
mov
scas
lods
fmul
cltd
jnp
test
xchg
adc
jae
movups
pop
outsb
pop
scas
mov
imul
andl
sub
sbb
jo
xchg
dec
and
es
pop
push
ss
movl
sub
les
jle
jge
cwtl
stos
pop
xor
scas
int
sbb
stos
mov
xchg
cs
sbb
js
sub
mov
shll
jae
out
xchg
push
cmp
sti
adc
push
lret
fisubrs
cmp
mov
stos
arpl
dec
movsl
mov
push
cwtl
aam
outsb
mov
or
idiv
scas
lahf
es
insb
es
arpl
sbb
add
into
stc
arpl
mov
into
scas
addr16
insb
xor
pop
and
clc
and
push
ja
scas
jae
sbb
xlat
or
adc
pop
in
leave
cmp
or
aam
loop
pop
sbb
inc
sub
pop
inc
mov
movsl
mov
jmp
cltd
sub
mov
adc
jne
call
test
fbstp
adc
jbe
adc
xchg
mov
inc
push
push
mov
pop
imul
and
xchg
xchg
es
mov
lcall
outsb
cli
sbb
adcb
xchg
cli
mov
imul
call
rcrl
loope
stc
jl
push
ret
out
dec
mov
test
pop
ss
mov
xor
pop
xchg
shl
mov
mov
adc
mov
out
pop
cmc
bound
or
repz
mov
and
les
jo
mov
lods
leave
mov
or
arpl
push
int3
je
adc
pop
inc
fs
aam
mov
imul
mov
imul
xchg
nop
pushf
adc
jbe
outsb
mov
xor
push
jb
movb
jno
iret
outsb
stos
int3
xchg
push
ja
int
xchg
adc
and
xchg
mov
sbb
add
push
rcrl
xchg
mov
repz
or
aaa
movsl
daa
shlb
scas
mov
jnp
lods
ja
xor
inc
xlat
add
fxch
pop
fdivrs
ja
sbb
push
cmpsb
enter
fcomp
jns
or
cmpsb
rcrb
pop
push
push
movsl
out
cmp
add
es
cmp
push
jb
add
xchg
sbb
test
bound
insl
jns
or
dec
loop
pop
push
adc
movl
stc
outsl
lret
movsb
adc
adc
jae
ret
ljmp
adc
sub
cmp
sahf
js
test
sub
push
cmp
ss
jge
repz
xor
mov
sbb
xlat
lods
arpl
xchg
int3
jge
je
aaa
lock
jo
test
sbb
jbe
lods
jecxz
sbb
lret
mov
xchg
nop
adc
daa
pop
call
jne
negb
or
lods
fs
add
stos
fnstsw
sub
cmp
cmp
mov
mov
sub
pop
movsl
dec
nop
ljmp
adc
xchg
imul
xlat
dec
shlb
sbb
sbb
jp
outsl
sub
jae
and
test
cmpsb
test
mov
out
daa
dec
pop
lods
mov
or
sub
out
icebp
test
or
xchg
nop
fbld
adc
push
cmc
cmp
xlat
mov
mov
out
les
sub
xchg
jne
ja
out
mov
cli
jo
and
and
pop
xchg
pop
ds
loopne
sub
pusha
fucom
mov
adc
insb
mov
or
push
jb
dec
jb
jae
mov
sub
pop
les
and
cwtl
pop
pop
lea
imul
cmp
test
sbb
dec
sbb
sbb
xor
and
repz
ror
pop
mov
push
mov
mov
xor
and
loope
jge
inc
xlat
in
jle
xor
mov
dec
pop
ljmp
outsb
push
clc
fistl
outsl
cli
jbe
ljmp
mov
rorb
icebp
and
adc
pop
jp
js
nop
insb
cmp
sbb
mov
jae
out
rclb
or
cltd
mov
jae
fldenv
sub
push
jae
cs
mov
rol
in
or
jns
sub
unpcklps
je
push
push
jae
adc
gs
adc
imul
xchg
push
inc
repz
std
xor
or
pop
cmp
js
cltd
imul
sbb
jno
mov
fnstenv
adc
cmpsb
arpl
mov
fwait
mov
pop
adc
cs
jle
out
outsl
lret
cltd
sub
add
pop
xor
mov
je
pop
push
sub
add
imull
mov
jle
cmpsl
mov
xlat
cmpsb
mov
xor
mov
std
rorl
sbb
jbe
mov
pusha
icebp
into
push
xor
xor
adc
push
push
xchg
dec
adc
sub
cs
daa
and
xorb
pop
js
je
push
cwtl
jp
leave
or
in
push
js
pop
imul
push
cmc
pop
xor
mov
lret
pop
jns
push
mov
adc
cmpsb
mov
lds
lds
jno
pop
pusha
je
xchg
ja
aaa
shlb
mov
xor
mull
or
xor
scas
aad
insb
cmp
lahf
leave
pop
push
mov
adc
mov
push
je
pop
stc
loope
push
ljmp
mov
hlt
shrb
jae
mov
jo
std
pop
mov
pop
fldenv
iret
call
sbb
repz
clc
push
adc
dec
jae
add
push
in
jb
mov
pop
pop
cmp
mov
xchg
lds
aam
lock
ljmp
movl
divl
xor
adc
imul
daa
sbb
sub
mov
pusha
fwait
ljmp
lods
pop
inc
dec
mov
and
push
les
fidivrl
cs
add
scas
fcoms
cmp
mov
push
lds
sahf
cwtl
jno
push
sub
pop
inc
push
test
insb
xchg
push
mov
adc
sub
fldl
sbb
popa
add
pop
and
dec
inc
mov
addr16
mov
into
cmc
xor
xor
sub
scas
xchg
pushf
ret
repz
shll
ret
stos
dec
add
data16
fisubrl
les
pop
inc
adc
xor
cwtl
sbb
movq
cmpl
pop
mov
jbe
pushf
rcrl
stos
ficomps
xchg
push
aam
push
sbb
call
mov
inc
inc
cmp
lcall
sbb
inc
popf
inc
test
insb
into
fildll
jbe
mov
add
sti
cs
xlat
cwtl
sub
xchg
xchg
sahf
mov
cmp
fdivs
push
lods
test
mov
push
xor
xchg
fildll
jns
sbb
adc
adc
test
push
fidivrs
enter
xor
adc
jne
pop
mov
xor
xchg
das
nop
fwait
into
jle
insl
fnstenv
test
mov
pop
mov
pop
mov
or
inc
mov
psubb
out
add
pop
push
cs
jns
pop
fs
loopne
xchg
adc
mov
mov
mov
xor
sub
dec
mov
ss
adc
xor
pop
lea
mov
jge
scas
jecxz
scas
jo
xor
mov
fcmovb
sub
fnsave
inc
pop
jge
dec
out
mov
test
fsts
repnz
push
sub
movsl
sub
jnp
xor
sbb
sbb
aad
jo
mov
hlt
icebp
adc
jmp
std
fldcw
push
xor
push
loope
push
imulb
fisttpll
cmp
xorb
mov
mov
movsl
jo
clc
push
cld
idivl
mov
jg
mov
mov
scas
js
sbb
out
push
xor
mov
sarb
movsb
xor
ja
sub
out
pop
dec
out
jo
xchg
shlb
mov
xchg
or
or
push
push
or
insl
shlb
and
pop
test
ss
jae
inc
sbb
lcall
icebp
repz
stos
mov
enter
inc
sti
mov
repnz
mov
mov
idivb
mov
xor
add
sub
outsb
and
nop
mov
push
test
sub
sarl
shlb
lcall
je
jo
nop
lret
int3
push
or
pmaxub
adc
push
push
add
jbe
rolb
cmpsb
nop
fdivs
gs
and
push
mov
les
push
scas
fistps
pop
mov
sbb
adc
mov
jmp
cmp
adc
in
push
imul
cmp
dec
xor
lcall
mov
adc
shl
stos
loope
jns
mov
sub
sub
add
mov
cmp
nop
pop
or
mov
adc
mov
xor
clc
ret
push
test
data16
lea
mov
lock
scas
jecxz
xor
ja
jle
jae
loope
jle
or
mov
jmp
sbb
nop
dec
hlt
aaa
inc
ss
jbe
sbb
mov
jae
mov
imul
gs
fdivs
cmp
stc
adc
adc
lods
jo
sub
dec
mov
mov
or
leave
and
add
jl
add
push
push
adc
add
xor
sub
test
xchg
xchg
jmp
xorb
shl
and
or
aaa
repnz
cmpl
cmp
and
das
es
test
or
adc
nop
cmp
mov
add
push
testl
movsb
out
in
ret
inc
lods
stos
call
cmpl
out
scas
hlt
sub
mov
push
out
iret
mov
mov
sbb
inc
xchg
adc
add
insb
mov
js
mov
push
ja
jne
rolb
sbb
mov
push
inc
aaa
pop
nop
inc
push
ret
pop
mov
inc
pop
jbe
mov
mov
push
push
cmp
mov
push
mov
out
ds
fbstp
pop
fnstcw
pop
push
add
lods
mov
test
popa
call
dec
jl
cwtl
inc
aaa
jle
inc
lret
sub
inc
fsts
xchg
sti
and
mov
push
fs
push
push
out
or
lahf
inc
xorl
adc
or
shlb
mov
push
xchg
cmpsb
cmp
pop
jbe
adc
dec
mov
into
and
jae
lret
push
fbld
push
pop
push
nop
lret
pop
sub
lret
ja
popa
jmp
fdivs
test
rcrl
jge
ja
mov
test
mov
pop
and
push
add
out
pusha
mov
cmp
pushf
mov
push
pushf
fldcw
and
add
shll
mov
std
cwtl
sub
cmp
push
popf
xor
mov
int
push
xor
repz
mov
loop
scas
mov
add
loope
mov
adc
test
fistl
adc
pop
testl
es
adc
dec
subb
jno
xor
mov
lret
stos
rep
fsubp
mov
out
push
cli
mov
fistpl
xor
mov
push
fwait
aaa
ss
test
cmp
mov
mov
fadd
int3
sbbb
mov
out
movsb
add
das
js
insb
jno
push
clc
dec
lods
inc
add
lahf
js
inc
movsl
xchg
shrb
adc
adc
sbb
and
aas
inc
ds
cltd
outsb
jl
jbe
and
push
iret
and
jae
mov
mov
mov
out
xor
addr16
fcmovnb
aad
cmp
jle
push
mov
outsl
scas
mov
dec
int
add
out
mov
mov
push
push
jae
iret
mov
push
pop
sarl
mov
adc
aam
scas
lcall
fdivrs
pop
inc
movsl
sub
aaa
push
in
cwtl
cmc
add
cmp
ds
mov
lea
xor
mov
aam
fs
or
cmpsl
sub
je
mov
rcll
je
xchg
sub
test
sbb
add
xchg
in
insb
lret
sub
sbb
push
lods
fisubrs
lahf
push
xor
idiv
insb
shr
shll
push
sbb
sub
insb
add
fnstcw
sub
pop
lods
in
aaa
jo
fistl
xlat
push
jge
fildl
pop
dec
mov
shrb
jbe
inc
mov
mov
push
clc
fistps
xor
cmp
jge
cwtl
push
xchg
clc
insl
test
aaa
cltd
call
inc
mov
ljmp
data16
jle
sub
push
mov
lea
jae
fnsave
dec
in
mov
sub
dec
lret
shll
and
mov
adc
xor
or
xor
loope
divb
outsl
in
push
shrb
add
pop
shll
dec
je
xchg
push
xor
jae
cmp
into
push
mov
sbb
mov
lret
push
mov
js
lods
imulb
addr16
xlat
int
mov
or
loope
mov
movaps
push
cmp
insb
in
test
sbb
xchg
insl
rcrl
inc
ret
aam
push
mov
or
jle
arpl
ljmp
inc
shlb
ss
hlt
mov
sub
sub
iret
cwtl
push
xor
cmp
push
mov
or
mov
jl
nop
sub
and
ljmp
pusha
push
mov
jae
push
jle
push
enter
xorb
jne
xor
aas
loopne
and
pop
or
daa
cmp
mov
cmc
mov
mov
sbb
lods
xchg
pop
mov
jl
pushf
jl
jno
daa
notb
mov
sahf
xor
jne
adc
add
inc
inc
sbb
imul
jae
add
inc
scas
push
cmp
jg
mov
int
push
sbb
jl
jne
pop
pop
add
pop
inc
push
push
addr16
div
inc
cwtl
mov
or
mov
mov
cwtl
mov
mov
lock
sub
js
adc
add
lock
sub
adc
les
lret
jne
push
ret
loope
mov
js
mov
jp
jle
mov
ret
js
ret
add
xchg
add
sub
mov
mov
loope
jmp
repnz
sub
gs
ljmp
pop
ljmp
xor
and
jl
mov
adc
cmp
or
and
das
rclb
mov
inc
hlt
sub
fidivrs
inc
lds
mov
or
insb
hlt
roll
push
fisubrs
and
xchg
sbb
push
ds
cwtl
mov
xchg
insl
dec
pop
inc
shr
scas
adc
cmpsb
pop
aaa
cmp
ficoml
xchg
femms
js
je
sbb
lret
into
lods
movsl
mov
jno
jb
or
divl
jae
xor
fcoml
popa
sub
clc
fadds
mov
andps
mov
insl
sar
scas
or
fdivs
bound
sbb
dec
inc
popf
mov
mov
push
call
fcmovnb
imul
xor
push
std
popa
mov
out
scas
mov
lcall
data16
xchg
mov
mov
fnsetpm(287
dec
cs
xor
repnz
sub
movsl
xchg
push
sbb
in
mov
add
fldenv
loop
mov
mov
and
pop
pop
ret
out
test
iret
scas
fsts
xchg
insl
push
mov
mov
mov
mov
pop
xchg
mov
out
in
mov
add
pusha
sti
mov
push
loope
pop
add
clc
jp
xchg
push
xlat
xchg
in
stc
lds
jb
pop
shrb
xor
pop
push
aad
jne
push
adc
mov
shlb
cmc
jb
cmp
jbe
arpl
mov
lcall
adc
daa
inc
pop
cmpsl
mov
jge
sbb
jae
bound
je
sbb
cltd
int
fucom
mov
int
jge
jle
sbb
pop
jle
mov
testb
std
dec
push
shrb
cwtl
mov
fs
loop
cmp
mov
sbb
cmp
mov
movsb
cmp
mov
add
cbtw
mov
jae
jmp
sbb
xchg
jo
iret
xchg
sbb
aad
and
add
mov
or
add
je
into
add
pop
jl
mov
repnz
je
clc
int3
fs
mov
pushl
icebp
ror
adc
mov
pushf
out
adc
or
leave
addr16
inc
shll
push
into
mov
jl
pop
pop
add
mov
icebp
test
sub
stos
mov
lds
loop
dec
icebp
mov
jne
js
mulb
jnp
push
and
icebp
arpl
movsb
les
jae
pop
sbb
ja
arpl
sbb
popf
cli
or
inc
mov
cwtl
push
ljmp
in
idivb
mov
shrl
sbb
pop
rcl
adc
sbb
push
fisttps
lods
push
cmc
insb
add
push
add
out
cmpsb
in
mov
shl
mov
dec
ret
out
cmp
fdivs
idivb
in
mov
jae
js
pop
mov
outsb
test
hlt
xor
inc
leave
cmp
movsl
ss
je
mov
idivl
jo
cs
sub
sub
es
sub
ds
cmpsl
pop
xor
sbb
jns
cmp
sbb
push
stos
outsb
mov
movsb
xchg
xor
pop
ss
cmp
jae
dec
std
mov
mov
daa
or
ss
insb
jbe
xor
jno
add
stos
das
mov
popw
xchg
cld
xchg
outsb
mov
jge
sbb
push
mov
xchg
popf
scas
cltd
popa
adc
cmc
movb
in
and
popa
jmp
jae
inc
clc
movsb
dec
cwtl
adc
shl
xchg
jb
outsb
inc
adc
jge
jmp
dec
xor
lds
mov
repnz
rolb
pop
mov
push
sub
mov
push
call
icebp
fwait
jbe
sbb
cld
mov
add
ss
mulb
cmp
inc
repnz
rclb
pop
mov
sub
mov
lcall
inc
mov
mov
jae
movb
sbb
inc
sbb
fldenv
mov
xchg
enter
mov
sub
std
cwtl
mov
mov
daa
inc
je
fsts
outsb
dec
mov
mov
xor
jae
xchg
sbb
jle
push
jmp
or
js
and
xchg
jp
push
shl
inc
popa
imul
daa
scas
mov
pop
aaa
sahf
mov
idivb
inc
aad
ljmp
sbb
add
test
ds
jl
sbb
sbb
sub
dec
rcrl
gs
divl
out
mov
dec
or
test
push
cltd
loope
das
lds
das
mov
jg
lods
mov
inc
pxor
movsl
les
push
pop
dec
mov
das
cmp
pop
mov
icebp
pop
leave
dec
jl
jae
das
push
imul
xor
add
mov
out
inc
sbb
test
movsb
push
pop
mov
popl
or
mov
mov
ss
add
cmpsb
push
xor
pop
xlat
xchg
pop
mov
mov
fwait
jo
jmp
fcoms
setbe
or
mov
lds
sub
dec
imul
add
ja
lret
cltd
jns
test
pop
pop
into
je
notl
call
std
daa
lods
and
shl
outsl
fmulp
sbb
cltd
or
arpl
jae
shll
mov
sub
cmp
daa
and
movsl
mov
push
pop
ucomiss
outsb
jle
lds
lods
adcb
xlat
out
inc
xchg
xor
pop
mov
add
pop
ficoms
mov
adc
test
adc
inc
jae
repz
jb
jl
lea
push
xchg
sahf
sub
jle
fsubr
cwtl
mov
pop
push
jmp
mov
and
jo
loope
mov
xchg
addr16
gs
nop
pop
or
cmp
sub
push
stc
fnstenv
nop
popf
in
mov
dec
xor
ljmp
test
mov
dec
mov
mov
xchg
repz
pop
jb
repz
jmp
sbb
and
test
mov
pushf
sub
inc
cmp
jle
fidivrs
loop
movsb
pop
movsb
insb
call
lock
xchg
add
sbb
sub
shr
jp
mov
sti
dec
das
xchg
mov
xchg
aaa
inc
insb
sahf
fnstsw
and
mov
push
and
imul
in
rorl
push
out
pushf
test
test
dec
pop
movsl
ja
lock
cltd
xor
mov
ss
pop
jmp
pop
jecxz
xchg
sub
test
cmpsb
dec
xor
or
test
ss
mov
add
push
stc
ds
mov
jae
and
mov
jle
jo
push
mov
fsubl
push
out
fcoms
and
xchg
sbb
or
push
repz
xchg
popa
mov
sbb
xor
inc
ja
push
pushf
imul
jbe
test
or
dec
mov
lcall
mov
mov
in
js
mov
add
mov
mov
pop
ficoml
inc
add
fdiv
stos
push
adcl
pop
jbe
cmp
cld
repnz
adc
and
add
cli
loopne
pop
js
sti
jecxz
sbb
mov
dec
push
mov
stc
ret
pop
int3
fisubrs
cmp
and
or
sub
jae
xchg
mov
lcall
sbb
jae
dec
cwtl
js
adc
cmp
xchg
fsub
pushf
jle
arpl
jns
pushf
in
out
in
out
pop
and
cltd
or
jnp
lods
es
pcmpeqw
xchg
aaa
add
xchg
aad
mov
mov
sbb
push
push
mov
add
add
jecxz
sbb
outsb
adc
sbb
jae
iretw
jecxz
xchg
aas
aad
mov
js
jae
adc
adc
cs
jbe
loope
mov
mov
scas
push
sbb
mov
and
nop
mov
cmp
pop
sub
sbb
mov
cmpsl
push
mov
sbb
push
cmp
and
ljmp
clc
mov
scas
fstps
pop
daa
push
jbe
pushf
arpl
faddl
mov
test
inc
scas
cwtl
mov
jae
add
mov
scas
xlat
inc
push
fdivr
fimuls
lods
mov
adc
fnsave
je
mov
lcall
jecxz
adc
insb
pop
adc
sub
jl
adc
or
sub
jecxz
adc
mov
int
push
stos
jp
js
sbb
ljmp
jae
xchg
inc
pop
nop
repnz
mov
inc
pop
gs
jg
sbb
cmp
icebp
jne
les
in
sbb
sbb
imul
pop
imul
mov
or
int3
mov
addb
scas
dec
mov
sbbb
pop
in
push
pusha
testl
sbb
js
cmpsl
mov
insb
or
scas
lea
fidivrs
jo
leave
mov
sub
data16
and
outsb
mov
out
xchg
repnz
adc
lods
xor
xor
mov
sbb
aas
mov
pop
mov
pop
jae
mov
std
push
push
lds
add
int
push
movsl
adc
lock
out
lcall
push
cmp
lods
dec
mov
push
push
dec
int3
fildll
imul
js
ret
pop
mov
inc
test
pushw
pop
dec
outsb
inc
sub
cwtl
mov
icebp
cmp
dec
or
add
or
jbe
mov
cwtl
frstor
mov
lock
jl
mov
daa
mov
jge
add
int
xor
mov
inc
mov
push
inc
mov
aam
scas
mov
or
or
and
sbb
adc
xchg
add
jp
cwtl
imul
cmp
repz
jl
fsubrl
das
push
data16
push
inc
out
shlb
movb
out
mov
cs
icebp
out
push
fcoml
sarl
inc
scas
pop
js
mov
pop
mov
fsubs
pusha
mov
stos
lret
mov
sbb
pop
out
ret
dec
pusha
dec
imul
inc
xorb
add
ljmp
jae
imul
xchg
mov
clc
adc
test
xor
xor
and
outsl
mov
je
es
leave
jns
mov
int3
repnz
and
cmp
dec
or
jmp
push
outsl
iret
mov
enter
mov
adc
pop
sbb
test
jbe
orb
sbb
sub
push
daa
add
in
and
fs
sbb
mov
les
lods
cmp
das
cwtl
pop
es
mov
mov
movsl
aaa
jo
clc
ss
xor
lcall
shrb
lret
nop
adc
movsb
mov
movl
sub
sbb
insl
pop
mov
lret
pusha
int3
into
popa
cltd
orb
loope
mov
dec
rcrb
scas
sub
sahf
js
xchg
push
xor
push
jmp
aam
ljmp
int3
lret
cmp
xchg
xchg
pushf
sbb
pop
scas
jno
and
out
mov
xchg
je
mov
cmp
push
push
xchg
cmpsl
xor
dec
test
outsb
inc
iret
aam
sub
push
cmp
ja
inc
mov
ja
add
push
cmp
mov
data16
negb
pop
and
pavgb
in
arpl
jmp
mov
int3
sarb
js
cli
jp
pop
mov
aad
sbb
mov
ja
lcall
push
or
dec
inc
cli
xor
ficoml
xor
pushf
pop
sahf
dec
shrl
pop
sbb
test
cmpsb
mov
mov
dec
imul
add
xchg
mov
outsb
aaa
cmc
mov
insl
mov
ret
mov
dec
cwtl
rclb
inc
sub
ss
rcrb
inc
fcomps
adc
inc
jns
fistpll
mov
push
mov
pop
cmpsb
pusha
xchg
xchg
mov
test
mov
push
idivb
cwtl
xor
nop
fs
mov
xor
fstl
inc
inc
sbb
fcoml
xchg
loope
cmpsb
ret
test
imul
mov
push
fs
sahf
test
jg
leave
fists
mov
adc
dec
mov
mov
pushf
mov
imul
mov
loope
xor
push
jns
mov
jns
test
inc
fdivs
in
movsl
mov
adcl
adc
arpl
sbb
ljmp
inc
js
xorb
je
cmpl
les
xchg
in
push
cmpsb
jns
add
jns
mov
lock
in
pop
cwtl
and
inc
je
xor
jae
adc
sub
inc
add
stc
dec
dec
sahf
fnsave
divl
and
lock
mov
out
movsb
xchg
ss
roll
rcll
push
popf
add
pop
fs
mov
pop
mov
cmp
sbb
pop
push
mov
cli
clc
daa
loopne
insb
insb
jo
jg
cs
xchg
push
jge
mov
sub
pop
ret
mov
orl
cli
call
adc
push
shrl
jae
unpcklps
push
cmp
arpl
sbb
jp
sub
sbb
xor
mov
loop
iret
adc
iret
loopne
movsb
mov
jle
sub
dec
mov
add
dec
sbb
cmpsb
mov
jno
cmp
sub
popf
add
das
les
dec
inc
out
and
add
jg
aaa
test
adc
fsub
repnz
mov
sahf
inc
push
fldenv
in
pop
outsb
pop
push
push
outsb
inc
xor
sub
xor
sbb
xchg
cmp
mov
jmp
mov
jo
pusha
jge
jmp
aas
xorb
jae
insl
int
xor
out
sub
adc
lcall
pop
xchg
notb
push
sub
repnz
ljmp
jl
into
lods
and
movsl
cli
jno
mulb
rolb
mov
sbb
cmp
cmp
lods
mov
leave
test
xchg
jae
jne
gs
rcl
les
xor
loope
mov
nop
mov
mov
cltd
pusha
jae
jg
jno
popa
jmp
test
mov
mov
insb
les
cmp
inc
movsl
mov
mov
data16
pop
mov
imulb
jecxz
mov
push
push
loope,pt
fcomi
or
mov
add
adc
jl
xchg
pop
push
or
out
cmp
imul
or
cld
sub
mov
cld
dec
lret
gs
pop
pop
and
cld
imul
mov
jp
ret
adc
int
cwtl
push
sti
mov
test
sbb
mov
dec
fimuls
sti
and
cmp
adc
cwtl
push
adc
sbbl
sbb
xchg
test
pusha
insl
test
sahf
mov
rorl
xchg
loop
sbb
es
int
rorl
outsb
or
xchg
adc
and
cmpsl
cmp
mov
cmp
sub
shll
mov
and
sub
lds
pushf
mov
es
mov
mov
sub
cmpsb
mov
int
pop
mov
jb
add
xchg
lods
jge
je
mov
jge
or
mov
insl
loopne
js
lea
fmul
rcrl
pop
jno
or
fcmovnb
in
arpl
mov
scas
xor
in
dec
mov
pop
test
mov
jp
mov
jne
mov
jo
movsl
iret
xchg
fimuls
rolb
adc
sbb
push
insb
or
sti
mov
mov
aam
dec
scas
xchg
int
repz
insb
inc
in
pop
push
lock
addr16
sbb
into
push
sbb
sahf
mov
mov
fbstp
ret
insb
push
sub
mov
ss
dec
pop
jbe
bound
push
dec
pusha
fdivr
mov
sarb
jmp
in
xor
cltd
jbe
xor
mov
fidivs
scas
push
out
jbe
adc
xchg
or
and
pop
aaa
jo
xlat
jp
jne
add
cwtl
jae
xchg
cwtl
insb
push
mov
jmp
add
das
pop
jae
jecxz
push
dec
or
xchg
xchg
mov
xor
mov
insb
jge
insl
loopne
sahf
mov
andb
dec
arpl
jg
pushf
dec
div
js
scas
cmp
jns
push
test
pop
or
mov
loope
les
cwtl
xorl
adc
add
fwait
xchg
xchg
lea
cmp
xor
push
add
roll
dec
jbe
jo
shlb
insb
pushf
clc
mov
mov
scas
jnp
leave
sbb
jle
aad
ja
outsb
lret
push
ss
ret
mov
xchg
sahf
test
pop
xchg
sub
and
shrl
xor
mov
lods
adcl
cmp
push
mov
into
pop
lcall
jae
jl
inc
sbb
dec
dec
mov
mov
call
dec
popa
clc
sbb
cmpsl
xchg
mov
cli
mov
cmc
imul
pusha
pop
dec
xchg
push
out
fmuls
insb
push
inc
scas
repnz
ret
inc
pusha
and
mov
pusha
cmp
mov
and
aas
sbb
fistl
daa
repnz
daa
sbb
mov
sbb
xchg
into
dec
sbb
push
jae
mov
lret
decb
pusha
push
idivb
jns
pop
jnp
and
popf
lret
sahf
test
push
addr16
sub
mov
dec
add
xchg
out
jl
js
adcl
push
push
insb
push
jecxz
jmp
pop
xchg
lcall
sub
xor
pusha
push
pop
cmp
push
push
adc
pop
cltd
sahf
test
ret
outsb
sub
adc
push
testb
xchg
sub
mov
jg
movsb
arpl
popa
es
fwait
sbb
push
movsl
mov
xlat
and
shrl
dec
cwtl
rorb
cltd
cltd
imul
cmp
aad
hlt
outsb
pop
call
mov
arpl
xchg
nop
jae
push
ja
mov
mov
jo
jns
cmovae
or
data16
push
sbb
test
mov
push
sbb
cmpsb
movsb
pop
dec
add
xor
add
xchg
xchg
xchg
aas
pop
or
fnsave
xlat
or
and
jl
jae
pushf
int
or
jb
mov
sbb
xor
js
sub
stos
xor
jo
add
push
lret
adc
ss
lods
cmp
sbb
jne
ja
lret
mov
sbb
out
cwtl
js
add
jbe
imul
loope
add
jecxz
rcrb
mov
push
xchg
jg
xchg
jno
pop
mov
addb
pop
fistl
test
mov
addb
ljmp
js
mov
push
sub
test
lahf
pop
adc
loope
sub
xor
adc
adc
sub
scas
mov
into
cmp
sbb
roll
adc
sub
lock
add
xchg
push
add
push
cmp
pop
mov
inc
aam
and
xor
sub
nop
adc
adc
and
test
mov
fs
andb
mov
out
pop
roll
push
xor
cmp
jge
mov
and
popf
cmp
sbbl
jns
sbb
mull
push
sub
imul
mov
xor
jno
sub
or
into
xchg
fldl
or
mov
icebp
loopne
cs
push
imul
cmp
xor
sub
and
mov
lahf
push
add
add
jecxz
gs
fwait
sbb
cld
shll
fstps
fisttpl
out
or
mov
mov
and
adc
cs
sbb
imul
fsubrs
pop
stos
fsubp
xor
fdiv
ljmp
sub
adc
and
rclb
dec
pop
out
sbb
jecxz
lods
adc
add
mov
mov
and
je
push
repz
fdivrp
test
lock
mov
pminsw
test
push
je
pop
mov
sbb
repz
in
mov
sub
out
add
xchg
add
shr
call
lods
sti
jp
fsubrs
pop
stc
cli
cs
mov
int3
mov
cmp
xchg
inc
mov
rcrl
sbb
mov
in
pop
popa
cmpsb
test
sbb
cmp
imulb
push
xchg
inc
nop
mov
mov
fwait
mov
movsb
jo
sub
test
lea
data16
ret
add
cmp
ja
lds
push
insb
mov
aam
dec
lods
dec
push
pop
jae
pop
adc
sub
rcrl
jo
fidivl
pop
cltd
mull
dec
add
sub
jae
das
xor
clc
fdivrs
add
push
mov
shr
addr16
adc
push
imul
cmp
mov
jb
lcall
push
jns
mov
and
fs
add
sub
stos
pop
dec
mov
mov
mov
push
movsb
cwtl
cmp
sbb
xchg
add
push
lods
push
test
fimuls
mov
mov
jecxz
enter
sahf
jb
cltd
pop
sbb
test
xor
push
iret
mov
mov
addr16
scas
std
pop
pop
insl
test
push
xchg
and
xchg
or
mov
sbb
call
in
adc
push
subl
mov
xchg
pusha
mov
les
adc
lods
andl
ja
fs
enter
xchg
push
loope
push
dec
and
mov
adc
mov
cmpsl
cmp
xor
adc
push
jns
lds
in
jecxz
nop
imul
sub
in
test
adc
in
scas
sub
shrb
xlat
insb
inc
add
xchg
and
pop
daa
sub
inc
jecxz
stc
lcall
pop
out
js
jae
hlt
scas
cmp
test
icebp
movsb
ja
mov
push
and
add
ds
sbb
bound
mov
jbe
sbb
push
mov
adc
add
test
insb
js
jbe,pt
cmp
lret
cmp
cs
notb
dec
jae
jo
enter
xor
mov
movl
xchg
shrb
jno
mov
cmp
das
iret
pushf
pop
xor
mov
push
sbb
fstps
popa
outsb
jl
mov
mov
push
js
in
imul
mov
and
xor
cmc
insb
je
sub
mov
sti
cmp
nop
or
nop
stc
xchg
push
ss
sbb
xchg
adc
jnp
push
inc
mov
loopne
push
dec
outsl
add
adc
ds
jl
adc
jmp
push
sti
in
mov
insl
jle
xchg
push
sbb
jmp
jo
dec
mov
sub
pop
cmp
jbe
xchg
and
mov
sub
mov
cli
pop
dec
imull
sub
aas
je
inc
sub
out
cmp
fwait
sbb
and
repz
or
sbb
xor
fmuls
dec
xor
mov
imul
mov
mov
adc
fidivs
or
clc
add
jno
xor
aaa
mov
jnp
fists
pop
push
es
insb
aas
jb
mov
and
sub
inc
dec
int3
lret
movsb
add
xchg
lret
hlt
enter
xchg
jl
push
xchg
jns
lcall
int
stos
mov
jae
mov
loopne
fcoml
xor
int
sub
cld
pop
insl
jle
mov
xorb
hlt
imul
sbb
int3
push
sbb
sub
out
ljmp
cmp
jae
jge
and
fisttpl
xor
gs
outsb
push
cwtl
rcll
mov
pmaxub
jo
roll
mov
fs
jb
sub
mov
test
add
sbb
fnstenv
sarl
adc
cli
mov
xor
test
fmull
ss
cmp
test
imul
push
iret
push
jb
push
sbbb
pop
idivl
clc
cs
pop
in
xlat
cltd
ds
jns
clc
adc
sbb
fstpt
fsubs
and
xchg
mov
adc
iret
adc
xchg
cmp
dec
inc
mov
outsb
cmpsb
jl
inc
xchg
mov
jo
pop
out
or
leave
pop
mov
cmc
imul
mov
mov
xlat
test
enter
cmpsb
mov
shl
or
mov
mov
mov
xlat
aas
jp
dec
mov
cmp
ficoml
pop
mov
ljmp
fidivs
movsb
add
jmp
fnstcw
lea
nop
pop
jb
jbe
into
sbb
add
js
int
aam
adc
dec
xchg
ljmp
outsl
into
scas
inc
push
mov
pusha
or
mov
sbb
lods
rcrb
pop
lods
mov
inc
out
enter
movsb
or
addl
aaa
lods
lret
mov
and
pusha
cmc
jg
inc
push
popa
in
or
pop
jg
mov
stos
push
in
inc
lds
jne
xchg
push
mov
ljmp
cmp
pushf
ret
hlt
mov
adc
push
es
fmuls
cmpsb
sahf
or
sub
xchg
xor
outsl
pop
xchg
fisubl
cwtl
mov
out
add
hlt
clc
jns
mov
adc
fldt
hlt
dec
pop
adc
or
into
ds
adc
aaa
jle
dec
push
mov
jl
popf
mov
add
mov
sahf
xchg
push
mov
mov
mov
mov
pop
cwtl
sub
pop
sbb
cmp
addr16
sub
lret
jne
sahf
push
pop
mov
scas
inc
jo
sub
add
sbb
mov
mov
pop
in
data16
xchg
mov
and
and
test
pop
hlt
scas
sbb
into
mov
int3
cmp
std
xor
test
jo
mov
stc
xchg
imul
cmp
cmp
sbb
mov
into
sbb
mov
inc
adc
js
mov
push
adc
sub
jnp
jbe
scas
insb
inc
dec
roll
cmpsb
inc
inc
pop
icebp
hlt
enter
pop
pop
add
test
mov
xchg
hlt
dec
test
cmp
test
sub
insl
adc
stos
pop
enter
and
mov
and
sub
call
push
inc
add
stc
adc
aad
dec
add
das
mov
jae
cmp
xor
or
negb
testl
cmp
cmpb
sbb
cs
loop
pop
inc
bound
mov
push
jbe
push
ds
cmp
popf
push
xchg
pop
js
mov
cmpsb
jge
inc
or
clc
imulb
test
mov
imul
mov
mov
inc
arpl
pusha
lahf
mov
inc
adc
nop
xchg
and
pop
iret
jnp
scas
in
cmp
sbb
xor
push
mov
pop
dec
hlt
imul
das
sub
mov
or
mov
popl
cmp
push
into
xchg
repz
jae
and
inc
ljmp
mov
ret
or
sti
and
cmc
xchg
arpl
es
push
aas
stos
push
push
mov
add
imul
inc
mov
xor
mov
jmp
mov
das
scas
add
in
bnd
jae
cltd
mov
lcall
insb
mov
push
subl
jbe
ds
js
mov
testl
aam
fdivr
imul
popa
imul
scas
js
jns
sub
lahf
arpl
stos
jg
mov
xchg
push
mov
mov
rcl
daa
call
sbb
data16
mov
push
jl
gs
add
or
fwait
pop
loopne
xchg
stos
pop
data16
das
add
js
loope
test
sbb
adc
lock
sub
jns
pop
dec
sbb
sbb
cmp
icebp
repnz
push
aad
mov
fcomps
fistps
inc
or
sbb
xchg
push
or
setle
cmp
and
mov
xchg
push
and
in
repnz
pop
leave
rcl
notb
jbe
jnp
sbb
mov
sbb
mov
or
inc
lds
je
mov
shrb
add
mov
sbb
pop
xchg
jmp
outsb
mov
aam
mov
pop
and
cwtl
mov
js
or
fcoml
hlt
fmulp
in
mov
hlt
insb
pop
addr16
mov
shll
clc
push
jb
push
scas
jae
mov
cmp
pop
xor
clc
jp
sub
insl
push
jae
lret
mov
aaa
aad
cmp
mov
scas
and
jns
in
bound
and
out
pusha
imul
add
pop
cld
inc
scas
mov
fidivs
in
cld
bound
js
xchg
pop
cmp
stos
xlat
add
jbe
cmp
leave
dec
rcll
popa
xchg
icebp
add
xchg
jle
pop
xchg
bound
mulb
dec
in
ss
pop
jnp
jbe
push
outsb
mov
mov
nop
outsb
ss
xor
mov
sub
ss
test
jb
dec
testb
mov
add
mov
jne
pushf
int
jo
hlt
lret
lret
mov
shll
cld
dec
cmp
sub
movl
pusha
fsubrs
add
mov
iret
pusha
iret
push
pusha
xor
adc
or
pop
in
negl
add
cli
xlat
lret
or
popa
fistpll
idiv
xor
addr16
arpl
xchg
rol
dec
push
repz
jmp
movsb
clc
mov
inc
test
sbb
or
mov
adc
pop
and
call
mov
roll
lock
mov
js
push
ds
shll
mov
push
push
sub
ss
pop
outsb
xorl
lock
inc
addl
xchg
rol
xor
fidivrs
cmp
jbe
hlt
lcall
aaa
cmpsl
scas
xor
jg
sub
mov
popa
lock
fldt
cli
inc
push
nop
or
and
adc
adc
test
xor
mov
and
int
push
xchg
addl
aas
cmp
in
and
pop
xlat
pop
mov
jns
cmc
add
adc
insb
or
jo
pop
mov
pop
ljmp
mov
xorb
imul
jb
in
or
frstor
std
lahf
push
into
adc
dec
lea
rolb
mov
cmp
pop
or
sub
mov
out
adc
jb
shll
mov
fldl
sti
fcmovnu
and
mov
mov
adc
cmpsb
shlb
dec
jo
inc
jns
insl
add
js
cmpsl
loope
jp
xor
cmpsb
xor
pop
and
stos
repz
jbe
and
jns
shrl
stos
test
push
pop
pusha
push
test
lahf
xor
xor
adc
gs
xor
stos
xor
mov
mov
negl
shrb
into
rcl
fwait
inc
push
and
push
jnp
cmp
daa
and
mov
add
enter
pusha
mov
repz
ss
repz
and
pop
lret
ljmp
push
jle
cwtl
cmp
push
es
scas
inc
push
and
xchg
jl
mov
dec
mov
notl
dec
pop
adc
dec
add
cld
cmpsb
outsl
adc
out
sub
shlb
fsubrp
cltd
mov
add
push
jae
pushw
enter
push
jmp
inc
push
mov
aas
mov
outsb
adc
int
jecxz
jmp
ss
aas
jae
cmc
push
lods
inc
cmp
xor
int
pushf
mov
inc
clc
xor
js
pusha
fnstsw
push
mov
or
cmp
sbb
pop
nop
ja
adc
lea
nop
jae
test
loopne
fildl
mov
sub
repz
xor
pop
push
lock
sub
jbe
sbb
pop
cltd
mov
inc
orl
or
negb
ss
xor
fcomps
mov
push
call
iret
xlat
mov
push
shll
mov
pusha
lea
js
mov
push
pop
jae
add
jno
and
cmp
ret
data16
fistl
notb
sub
mulb
addl
sub
divb
ja
sbb
push
mov
out
jecxz
iret
ja
xchg
cmpsb
out
pop
aas
pushf
jno
push
addl
clc
lret
jne
call
call
xchg
in
sub
sbb
in
ds
in
data16
cli
push
sbb
mov
adc
and
cmpsl
push
leave
mov
xchg
pop
cs
fsubs
inc
cli
imul
xor
adc
mov
mov
lahf
das
cltd
pop
mov
in
sbb
std
or
xchg
lcall
or
jecxz
jg
xlat
and
pop
cli
lods
stc
scas
lret
loope
xor
fldenv
fnstenv
pop
in
aad
dec
and
test
mov
repnz
fldcw
xor
and
mov
jae
inc
xor
aaa
jae
mov
lods
lods
xchg
loope
imul
ss
popa
cmpsb
fstpl
cmp
imul
jne
push
lock
inc
sub
pop
mov
sub
and
ss
ds
js
stc
enter
mov
pop
sub
push
jmp
andl
xor
xor
sbb
sub
ss
aaa
sub
pop
test
loope
pop
adc
sbb
sub
mov
js
std
sub
xchg
js
sub
jo
xchg
push
mov
mov
inc
mov
jbe
xchg
inc
mov
imul
adc
loopne
mov
dec
cmp
cmpsl
add
cs
push
sub
iret
lods
cwtl
mov
shrl
ljmp
mov
js
sbb
jle
and
mov
sub
scas
or
into
inc
inc
cmpsb
test
xor
sbb
in
fildll
lds
mov
clc
ljmp
sbb
cltd
xor
loope
repz
xlat
or
enter
push
jmp
mov
shrb
ret
or
arpl
xchg
xor
imull
test
jg
mov
xchg
pop
cwtl
add
pop
aaa
and
in
loope
arpl
mov
std
test
fnstcw
jbe
sbb
lods
in
inc
popf
dec
es
cli
push
mov
cmovns
sti
jae
inc
rclb
mov
mov
mov
sub
add
add
rcrl
lret
mov
sahf
mov
rolb
dec
scas
mov
inc
adc
into
mov
nop
icebp
mov
repnz
outsb
sub
imul
fsubp
sti
cwtl
jp
pop
aad
xchg
in
cmp
fstps
and
mov
sbb
adc
pusha
inc
cld
inc
mov
aad
sbb
jmp
lahf
sbb
mov
lcall
fcoms
xlat
outsl
imull
add
xchg
dec
mov
mov
je
mov
loope
and
push
icebp
and
or
cs
mov
inc
divb
mov
hlt
xor
fistl
pop
pop
ds
popa
das
and
aaa
das
pop
xor
es
mov
fisubrl
movsb
push
adc
icebp
ja
int3
rorb
sub
xor
mov
shll
stos
pop
and
inc
pop
andb
jb
mov
mov
cld
cmp
test
pop
mov
lcall
jne
mov
push
hlt
daa
cwtl
push
shlb
pop
loop
mov
adc
sbb
aas
add
shrb
cmp
jne
xchg
xchg
ljmp
cmp
sbb
sti
inc
inc
lcall
mov
mov
clc
mov
in
adc
lock
mov
inc
xchg
pop
sub
pop
insb
movl
mov
xor
mov
inc
sbb
cmp
test
xchg
push
jmp
adc
cltd
sahf
sbb
jb
cmp
scas
cltd
data16
arpl
push
push
sub
aam
int
sbbl
je
add
adc
cmp
adc
cmp
mov
pop
shll
xchg
imul
addr16
test
push
mov
enter
pop
rol
cmpsb
cmpsb
add
sub
jae
cwtl
adc
xchg
cltd
mov
inc
test
popa
mov
shl
sbb
jle
test
push
insb
jns
cltd
mov
mov
mov
push
les
scas
sarl
sub
jae
push
into
inc
aad
int3
push
pop
rclb
test
cli
in
lea
test
lds
cwtl
add
and
fldcw
nop
cwtl
hlt
mov
imul
adc
dec
rorl
clc
mov
sbb
fdivl
sub
aaa
xchg
popa
jl
mov
adc
and
cwtl
inc
cmc
pop
add
mov
mov
sbb
push
push
mov
jmp
in
mov
mov
mov
xchg
xor
stos
repz
hlt
or
mov
ficoms
jecxz
jmp
or
leave
call
pop
add
mov
xor
and
pushf
mov
xlat
jbe
cmp
test
mov
sub
adc
mov
fdivs
mov
fmuls
mov
rcr
mov
loopne
pop
cmc
pop
les
mov
sub
pop
xchg
sbb
jge
aaa
and
mov
xchg
cwtl
rcll
pop
ret
push
adc
rclb
mov
push
ret
xor
push
adc
jb
stos
mov
mov
cmc
sbb
lods
sub
dec
jge
or
pop
sub
inc
jno
cwtl
sub
jbe
mov
mov
adc
pop
icebp
mov
mov
xor
xlat
xchg
lds
mov
jne
jl
adc
pop
or
push
fxch
jge
aad
mov
dec
cmp
jmp
lds
adc
mov
pusha
dec
loope
and
push
enter
sub
insb
mov
mov
fdivrs
cmp
enter
loop
sub
imul
dec
sub
test
inc
cs
loope
mov
xor
in
lahf
ja
adc
adc
outsb
addr16
inc
xchg
jg
call
cltd
fiadds
mov
testb
sub
and
jb
lods
adc
jnp
cmpsb
aad
js
roll
xchg
mov
bound
sbb
aad
movsl
fndisi(8087
scas
mov
jbe
popa
mov
cmp
lcall
jmp
and
insb
out
pop
inc
ljmp
cld
movsb
cmp
jae
bound
mov
repnz
xchg
jo
inc
jb
call
or
mov
orb
xor
sub
pusha
mov
sbb
sbb
push
aas
leave
cmp
mov
mov
scas
mov
jne
fists
inc
sub
dec
pop
jb
push
lea
js
mov
rcrb
mov
mov
sbb
lea
cmp
into
lret
adc
adc
hlt
testl
cmpsl
jns
mov
xchg
lret
inc
mov
sub
jne
mov
xchg
pop
pusha
pop
insb
subb
ss
mov
dec
add
sbb
stos
and
and
push
mov
cltd
pop
js
mov
ja
mov
xchg
adc
imul
repnz
dec
xor
cli
js
jge
repnz
xor
add
sbb
xchg
xor
mov
js
out
rorb
ret
bound
repnz
xchg
sbb
mov
stos
cmp
into
mov
adc
mov
ja
xor
push
push
movsb
mov
movsl
pop
mov
or
push
rcll
mov
jmp
xchg
push
push
push
mov
flds
or
insb
imul
mov
nop
cwtl
test
pusha
sbb
inc
sbb
test
xor
push
xchg
mov
mov
call
scas
cmp
pop
mov
jne
jg
mov
jae
cmp
cld
into
cwtl
and
push
rolb
xchg
js
add
popa
data16
in
xor
hlt
add
shl
xor
or
dec
and
in
ss
pop
pop
and
cmpsl
cwtl
jno
js
mov
in
mov
sub
dec
sbb
and
lods
popa
jecxz
test
mov
or
gs
cs
sbb
pop
fildl
into
jmp
inc
fists
add
add
fwait
or
aaa
cmpsb
mov
or
ljmp
ficoms
xchg
lret
cs
mov
and
out
lds
or
cmc
mov
movsl
roll
xchg
lret
push
mov
ljmp
xor
jb
cmp
fs
push
sahf
cld
mov
xor
lahf
test
or
rorb
js
insb
mov
jp
cwtl
jae
ja
sahf
aas
daa
sahf
cltd
stos
test
and
lret
xchg
idivl
lret
addr16
mov
sahf
testl
icebp
fadds
jbe
fwait
mov
or
jmp
push
jmp
scas
data16
add
add
ficoms
mov
sub
cmp
loope
shll
sbb
ret
xlat
mov
rclb
pop
pop
push
cwtl
adc
push
cmp
or
pushf
loopne
pop
push
ss
ja
orl
push
xchg
xchg
aas
jns
sbb
sbb
cwtl
inc
shl
or
and
dec
mov
js
xchg
push
xchg
add
movsb
sub
clc
out
je
enter
dec
pop
pushl
in
sti
in
nop
push
sub
outsl
aas
int
and
out
mov
and
mov
lahf
insb
cwtl
repz
adc
je
inc
outsl
dec
mov
ror
stos
movsb
fisttpl
jbe
mov
ret
sbb
jl
mov
pop
mov
and
outsb
mov
push
int3
fldl
lahf
xchg
repz
std
push
es
lea
pop
and
fs
je
mov
int
or
mov
adc
js
out
js
lock
pop
pop
lock
repnz
fmuls
mov
jnp
stc
mov
aas
arpl
inc
divb
xor
pushf
pop
mov
push
jecxz
dec
scas
cli
mov
mov
in
pushf
rcrl
mov
popa
sbb
loopne
fsubs
mov
insb
push
xchg
jge
scas
inc
inc
int3
jbe
dec
pop
int3
push
cmpsl
dec
sbb
rolb
mov
mov
in
outsl
in
cmp
sub
push
and
fistpl
cli
xchg
int3
dec
sbb
mov
ja
add
adc
repz
scas
add
pop
cwtl
mov
loop
mov
push
fists
cli
lds
int3
or
and
aam
mov
out
ds
ss
repnz
jo
insb
jl
or
test
jns
xor
push
mov
gs
mov
cltd
jo
fildll
xor
sub
jp
sti
stos
xchg
cs
adc
dec
mov
jno
mov
sub
pop
fcoml
leave
pop
mov
fwait
and
push
inc
adc
repnz
push
imul
mov
jbe
sarb
sbb
sub
sub
out
pop
movsb
sti
adc
jns
ja
sub
sub
inc
inc
test
mov
pop
in
jne
jbe
jle
test
jbe
sub
test
jecxz
mov
subps
push
imul
adc
out
add
inc
mov
or
mov
sbb
pop
push
jae
dec
dec
inc
shlb
fadds
mov
outsb
pop
mov
fistpl
inc
cmp
xor
sub
daa
or
cmpsl
sub
xchg
and
dec
gs
jg
jae
aad
and
pop
lods
pop
mov
sub
je
mov
xchg
push
pop
fidivs
push
in
shlb
ret
gs
popf
jns
aad
insb
mov
rorb
or
lret
cmp
mulps
mov
hlt
repz
pop
and
jl
sbb
fldenv
xchg
adc
movups
or
mov
outsl
xchg
lret
jbe
jae
popa
out
jae
or
cmp
add
dec
stos
movsl
cld
lea
test
lahf
pop
leave
dec
ss
sub
mov
add
sahf
int
js
dec
add
jbe
dec
cwtl
mov
mov
lock
mov
add
or
jecxz
mov
dec
pop
loope
test
aad
or
cli
fstl
push
dec
sbb
dec
mov
push
into
jmp
mov
rorb
push
dec
stc
add
out
push
inc
xchg
loope
bound
adc
inc
clc
in
pop
cmp
mov
loope
push
imul
in
mov
lods
mov
pop
sub
fs
test
mov
xor
add
adc
ficoms
mov
mov
inc
clc
adc
in
sbb
sub
adc
or
out
and
sti
or
sbb
mov
subl
adc
out
sbb
push
add
or
mov
popa
add
ds
pop
pop
out
sti
sar
lretw
lret
mov
adc
inc
test
jo
xchg
mov
imul
jne
pushf
fldt
ds
mov
and
inc
xchg
es
and
icebp
jbe
imul
mov
sti
mov
mov
sbb
cmp
mov
gs
jle
in
lea
out
push
or
fsubs
rcr
add
in
leave
jns
out
mov
loope
and
cmp
xor
or
and
adc
push
fndisi(8087
repz
ud1
cltd
dec
mov
clc
sti
out
jp
jl
xchg
pop
aas
jbe
xchg
adc
mov
and
jbe
push
test
nop
inc
sub
add
jbe
outsl
adc
cmpb
inc
stc
push
ret
data16
xchg
mov
cs
and
and
cli
ja
pop
mov
ljmp
jecxz
aaa
mov
out
xlat
add
insb
div
xchg
jns
and
hlt
mov
pop
int
xchg
in
push
insb
negb
sub
iret
pop
je
sti
or
test
cmp
popf
js
jbe
clc
fisubrl
scas
mov
jp
jae
or
jl
test
je
cmpsb
lods
fmul
stos
ljmp
sub
ret
cli
scas
mov
movsb
jbe
dec
cs
push
pop
aaa
inc
inc
outsl
int3
cmpsb
jo
mov
js
pop
cmpsl
nop
add
pop
add
aaa
jne
pop
xor
xchg
outsb
sub
stc
sbb
adc
dec
ja
xchg
mov
inc
ja
sub
push
not
imulb
loopne
pop
and
das
sub
scas
idivb
ja
cmp
mov
cld
outsb
mov
stc
inc
test
call
bound
sbb
ja
add
pop
jbe
push
clc
dec
push
lock
es
xchg
int
push
mov
cmpsl
pop
push
or
insb
dec
test
incl
sbb
push
in
js
jbe
jecxz
aam
dec
out
iret
push
push
jae
faddl
aad
mov
mov
insl
pop
mov
sub
xchg
mov
btr
iret
jb
imul
xchg
xlat
and
mulb
push
popa
into
je
push
or
xor
xor
insb
shl
pop
inc
push
adc
ljmp
sbb
sub
jge
adc
es
pop
jo
sarb
pop
lahf
aad
sbb
mov
ret
adc
and
jae
jns
inc
inc
iret
jbe
cmp
lret
jle
add
sub
popf
mov
dec
repnz
push
ret
iret
push
sti
or
cwtl
jbe
xor
sub
imul
lods
mov
out
push
lock
out
adc
jo
je
imul
mov
pop
cmc
add
shll
iret
adc
pop
into
imulb
push
lods
data16
iret
je
jae
add
lods
push
imul
add
popa
imul
mov
or
mov
fisttpl
hlt
jg
dec
mov
shr
jecxz
fsubs
lahf
mov
push
mov
jnp
dec
mov
out
frstor
pop
xchg
testb
negb
sub
pop
pushf
aad
pop
push
inc
sbb
out
xchg
cmp
sahf
cvtdq2ps
push
mov
lods
or
loopne
imul
lret
mov
sahf
ja
sub
sarl
out
mov
sub
push
loop
popa
das
cli
repz
xlat
iret
sub
and
fstpt
test
inc
into
xchg
fnstsw
add
pusha
test
arpl
sbbl
mov
jae
adc
imul
xchg
pop
fmul
adc
push
popl
cmp
sbb
pop
cmp
mov
cmpsl
clc
imul
add
cltd
xor
ljmp
push
push
je
xchg
xlat
ret
push
fwait
std
push
cmpl
dec
add
out
jbe
or
jbe
cmp
xchg
addr16
pusha
jae
or
pop
out
cmc
mov
adc
imul
xchg
mov
mov
ret
cmp
icebp
sbb
das
test
xor
test
out
frstor
mov
pop
fwait
jmp
repz
out
add
outsl
pushl
sub
sahf
pop
shll
jns
loope
shll
cmp
cmpsb
xchg
hlt
push
enter
xorb
jns
xor
andb
scas
push
cltd
out
pusha
jo
xchg
jo
push
add
pop
scas
inc
pop
push
jae
sub
std
adc
pop
sbb
mov
adc
loopne
push
and
mov
xor
and
pop
xchg
adc
pusha
popl
xchg
mov
sbb
xor
xlat
mov
out
inc
mov
add
and
inc
or
adc
gs
mov
sbb
ja
les
xchg
xchg
cmp
lea
les
mov
ss
imul
sbb
or
ficoms
daa
andl
sub
fs
ret
or
movsl
push
jne
cmp
outsl
mov
fs
and
into
jne
fidivl
hlt
xchg
mov
mov
dec
dec
sub
mov
or
jae
mov
mov
notl
dec
push
mov
mov
bound
sub
jns
inc
outsl
xor
and
add
xchg
aam
dec
mov
pop
scas
mov
lods
arpl
adc
fwait
out
push
mov
je
push
xor
fisttpll
aad
cmp
ret
lahf
call
movl
and
pop
ss
stos
xchg
aad
out
out
fwait
sahf
movsb
xor
xchg
test
pop
push
mov
fsub
imul
jmp
pop
jmp
bound
xchg
mov
out
lds
ja
mov
adc
sbb
and
and
daa
lret
pop
or
pop
dec
xchg
inc
mov
inc
fs
adc
push
jnp
repz
pop
sub
mov
subb
mov
push
imul
daa
mov
sub
nop
and
pop
test
lods
movsb
dec
adc
push
lea
cwtl
adc
dec
cmp
jp
xor
mov
out
mov
mov
stc
addr16
pushf
movsb
adc
pop
lock
and
notb
xchg
pop
sbb
mov
xorb
sti
jne
cmpsl
pop
and
jge
hlt
leave
mov
sbb
stos
add
or
pop
ss
push
adc
imul
lret
daa
mov
and
fisubl
push
outsl
push
stos
sbb
adc
jns
lock
cld
sub
cmpsb
inc
js
xor
js
sbb
jnp
or
sti
push
js
ret
jno
js
push
imul
xor
xchg
xor
mov
ljmp
ds
dec
push
mov
sbb
add
sbb
scas
and
ret
sub
jo
push
popa
ja
sub
jae
add
or
jb
mov
aam
mov
pop
add
pop
insb
cmp
pushf
cmc
mov
cmp
cmp
jae
stc
cmp
ret
pop
mov
out
cmc
cmpsb
xlat
cmp
or
pop
cmp
lcall
mov
fisttps
arpl
pusha
pop
pushf
lods
mov
adc
xor
and
mov
test
int3
out
cmp
repz
sbb
mov
xchg
mov
ret
xchg
mov
jmp
xchg
sti
jl
jecxz
enter
dec
insb
jns
push
inc
testl
dec
sbb
pop
mov
lret
js
repz
daa
imul
out
lds
aaa
jno
xorb
jae
cwtl
adc
cwtl
xchg
fdiv
js
adc
test
jp
push
popf
rorb
lock
mov
lods
add
xor
and
mov
inc
xor
stos
mov
arpl
mov
mov
scas
lds
fwait
adc
ret
mov
adc
jae
xor
out
mov
dec
xchg
sub
call
mov
les
pusha
repnz
jae
push
mov
xchg
xor
dec
dec
dec
test
or
push
jae
sti
out
mov
imul
jns
pop
xlat
and
ss
mov
test
mov
push
push
movb
and
jns
popf
sub
std
sub
stos
je
mov
xchg
jbe
jae
push
aam
xchg
clc
pop
out
sub
lea
jb
pusha
imul
mov
rol
xor
push
ljmp
imul
dec
je
mov
enter
lock
jb
daa
imul
jne
mov
and
loope
mov
imul
inc
add
adc
pop
mov
push
xlat
cwtl
push
mov
xchg
mov
cwtl
pop
mov
outsl
cmpsb
and
adc
pushf
clc
std
jge
inc
movsl
mov
movsb
xchg
popa
addr16
push
popa
mov
mov
inc
add
ljmp
das
or
lcall
outsl
popf
sar
jg
mov
in
rclb
addr16
lcall
lret
mov
imul
pusha
xchg
lcall
mov
dec
push
cmpsb
out
mulb
mov
clc
and
ss
call
popl
and
dec
cmp
lock
scas
xchg
std
fldt
ja
pop
roll
mov
hlt
data16
push
add
mov
cmp
inc
call
ljmp
pop
bound
sub
adc
pop
out
ja
lods
fnstcw
sbb
sahf
cmp
jge
cmpsb
mov
xchg
lods
mov
imull
xorb
dec
pop
stos
jo
ss
pop
pop
aad
mov
inc
push
cwtl
clc
movsb
ret
mov
stc
call
addr16
adc
add
in
adc
fld
pop
mov
and
cmp
out
inc
imul
and
lds
fcmovne
lret
xorl
xchg
and
insl
mov
push
clc
xchg
mov
jl
xlat
add
pop
adc
pop
subb
mov
pop
cs
shl
mov
lea
jl
inc
mov
int
js
mov
popl
xor
push
aaa
imul
mov
inc
outsb
xchg
inc
fs
sub
sbb
pushf
enter
add
cmpsb
and
mov
movsb
test
sub
xor
je
repz
idiv
aaa
in
xor
in
or
pop
adc
enter
jo
xor
fildll
insb
inc
sbb
jae
push
cs
sub
aaa
jp
cltd
movsl
xchg
lods
push
and
scas
inc
sub
clc
sbb
int3
pop
jp
xorl
rorl
xor
ds
mov
pusha
jae
jmp
insb
push
je
xor
shrl
adc
cmp
jle
jecxz
ficoms
jae
es
xchg
test
adc
or
jbe
inc
mov
ret
loope
mov
aaa
insl
inc
xchg
fyl2xp1
lock
push
arpl
push
pop
or
stos
loop
arpl
jne
add
and
mov
jns
mov
ja
and
jae
or
mov
jno
mov
xchg
icebp
jbe
or
adc
in
enter
dec
hlt
test
sub
pushf
xor
leave
cwtl
xchg
and
sbb
inc
into
mov
push
scas
jle
sbb
xor
mov
jb
loope
insb
aam
jmp
mov
enter
shrl
jle
es
push
and
mov
fxch
lret
pusha
addr16
and
ret
mov
dec
jae
xor
push
loope
xlat
out
test
les
mov
ja
enter
aas
cmp
inc
dec
cltd
dec
jb
mov
test
add
insb
and
adc
cmp
out
or
jmp
push
push
inc
aaa
jnp
adc
call
mov
push
notb
jecxz
jbe
xor
ja
popa
scas
pop
mov
push
xchg
adc
or
subb
aam
aas
jnp
pop
xor
stc
add
push
out
and
cltd
and
pop
mov
out
test
jae
fwait
cmpsb
mov
jae
jns
dec
test
into
fmulp
test
pop
aaa
push
out
lret
or
jg
add
jp
adc
pop
dec
inc
xlat
out
mov
adc
mov
push
jb
sub
push
imul
stos
outsb
mov
out
sbb
jbe
sub
testl
fidivl
loopne
push
xchg
sub
jo
pop
sahf
and
repz
jbe
aaa
jl
test
idivl
add
bnd
imul
cltd
adc
xchg
xchg
fnstsw
cld
jae
adc
lods
repz
lret
or
sahf
leave
pop
xchg
push
sbb
push
cmp
add
out
mov
adc
pop
cwtl
mov
push
mov
sub
data16
ja
inc
and
fbstp
inc
sbb
or
xchg
cli
dec
je
inc
jo
xor
mov
repnz
dec
dec
jge
insl
sub
xchg
mov
inc
loope
in
shrb
rorb
jge
scas
mov
popl
mov
xor
addb
sub
call
mov
pushf
push
filds
pop
xor
testl
mov
sub
mov
push
mov
ljmp
movsb
stos
mov
scas
cmp
stc
fwait
dec
jmp
inc
xchg
mov
mov
scas
popa
jecxz
iret
sahf
sbb
sarl
bnd
stos
mov
xchg
xor
in
xchg
repz
mov
inc
and
mov
push
sti
cmp
add
xor
adc
lock
or
insb
daa
jbe
mov
push
sbb
xor
sub
or
fldcw
hlt
pop
das
shlb
sahf
scas
notl
push
inc
fdivrl
inc
nop
mov
add
pop
add
mov
adc
pop
test
fstl
jnp
and
push
and
add
sbb
push
mov
mov
inc
pop
xchg
fstl
jae
mov
dec
push
fadds
test
add
jno
xchg
ret
stc
cmp
sub
shlb
xchg
cmc
push
aaa
int
icebp
dec
loope
pop
movsb
cwtl
frstor
push
mov
pop
jmp
adc
or
pop
jmp
mov
enter
shlb
xor
loope
sbb
popa
shl
push
dec
cmp
and
fsubrs
scas
pop
int
cli
xchg
sti
loop
xchg
aad
test
sub
sbb
repnz
add
push
xor
xchg
sub
sub
daa
aaa
xchg
xor
mov
imul
pop
push
jg
mov
out
add
sbb
cmp
iret
mov
pop
imul
mov
in
adc
and
inc
xor
lods
xor
mov
lea
adc
popl
mov
pop
cmp
cmp
or
fimuls
jbe
xchg
ss
inc
aaa
jns
loope
lods
sahf
fcoml
je
scas
and
stos
sub
xchg
ss
les
jae
outsb
cmp
lods
and
cli
push
pop
pop
pusha
xorl
jg
cmpsb
xor
adc
push
xor
dec
mov
mov
jp
cmpsl
jmp
js
or
pop
fdivr
outsl
cmp
pushl
sbb
divl
lock
add
sbb
cmp
ss
inc
icebp
mov
cmp
in
arpl
cwtl
xlat
sub
es
xchg
and
ja,pn
js
mov
sahf
sub
adc
mov
mov
push
fdivr
push
sbb
and
push
sub
xor
ficoml
pop
mov
add
pusha
mov
sub
push
mov
xchg
pop
daa
jne
in
clc
mov
ljmp
xor
or
cmp
fs
lahf
push
jle
jae
sbb
xchg
mov
or
pusha
xor
jae
sbb
and
mov
imul
cwtl
ds
scas
cmpsb
xchg
fdivrs
jg
mov
cmpsb
aaa
sub
xor
sub
push
pop
xchg
mov
jns
fdivs
mov
xor
pop
pop
xchg
xchg
pop
jle
js
push
jbe
int3
mov
adc
lock
pop
arpl
xor
mov
popa
gs
jae
sqrtps
subb
data16
ja
mov
pop
das
add
shl
pushf
jl
push
add
cmp
xchg
fldenv
fs
xchg
dec
jecxz
lea
xchg
ficoml
stc
sbb
dec
cltd
data16
lret
stc
cmpsb
mov
adc
clc
mov
mov
mov
sub
mov
bound
insb
or
loope
sub
outsl
adc
repnz
test
xchg
mov
das
pushw
jbe
imul
jle
jbe
sahf
jle
inc
data16
lret
add
jbe
mov
sbb
pop
dec
sbb
filds
imul
and
dec
dec
pop
sub
adc
pop
lret
fs
test
aad
std
data16
sbb
bound
je
ret
mov
mov
insb
mov
sbb
mov
fnsave
mov
inc
pusha
dec
mov
mov
iret
xor
int3
and
jno
rolb
out
pop
leave
data16
insb
mov
xchg
pusha
daa
push
ss
inc
lahf
iret
js
mov
push
mov
decb
push
push
push
jae
jecxz
out
clc
add
subl
repz
pop
fcomps
and
jb
sub
aas
rcrb
mov
sub
add
cmp
xchg
lret
xorl
jb
das
xor
movsb
jmp
leave
clc
nop
insl
xor
test
mov
popf
push
rol
sbb
fldenv
sub
add
je
jne
lret
popf
filds
add
pop
and
mov
xor
adc
arpl
icebp
pop
xchg
mov
cwtl
and
or
popl
pushf
ss
or
or
jns
or
xlat
cmp
les
insl
insb
daa
pop
sbb
and
inc
mov
sub
pop
dec
and
cwtl
test
add
or
fwait
mov
inc
inc
ror
push
movsl
mov
cmp
mov
pop
jg
or
ja
mov
jns
add
ss
iret
and
ret
cmp
sbb
mov
jae
mov
mul
lock
in
es
mov
push
jo
cwtl
test
dec
cmpsb
pop
jne
xchg
orb
mov
cmp
pop
fdivr
or
xchg
jle
push
pusha
xchg
ljmp
mov
mov
int3
and
movsl
loope
mov
cmp
xchg
sbb
imul
stos
test
jo
pusha
inc
jns
gs
xchg
lds
xchg
cmp
jae
dec
pop
cmp
lods
inc
aad
stos
and
dec
mov
int3
push
arpl
dec
fwait
js
jbe
dec
mov
pop
iret
fs
sbb
loopne
xchg
jb
jne
inc
insb
dec
xor
mov
cmp
mov
xchg
test
xchg
push
in
mov
nop
xchg
mov
sub
scas
lahf
xchg
mov
mov
pop
lret
insl
je
aad
shrd
rcrl
push
inc
lcall
ss
cmp
add
sub
mov
dec
ss
aaa
cwtl
lds
pop
jp
in
xlat
pop
lret
je
cmp
scas
movsl
adc
sbb
add
jns
dec
insb
lret
out
pop
push
cmp
or
pop
jbe
mov
jae
adc
popa
dec
test
cmpsb
fs
or
cmpsb
or
or
aam
push
sub
imul
scas
loopne
or
push
xchg
jb
push
sub
mov
xor
jne
sub
push
cmp
push
add
cmp
test
sti
jmp
and
sbb
and
call
pop
cmp
test
sbb
ret
inc
dec
sbb
nop
dec
repz
pop
sbb
clc
sub
push
call
jo
mov
stos
jns
jno
push
fstl
fstenv
add
xchg
in
pop
divb
jbe
lods
pop
sbb
pusha
sbb
sbb
push
mov
sbb
int
and
adcb
jns
sub
aaa
push
loope
add
xchg
inc
fimuls
inc
stos
addr16
or
cmpsl
repz
mov
or
cmpsb
or
inc
call
mov
shll
nop
orl
pop
es
cmp
rclb
movsl
ds
xlat
sub
out
test
xor
cwtl
xchg
stos
inc
xor
pop
call
push
cmp
shlb
test
in
and
mov
lret
out
ret
outsb
xchg
scas
aaa
cmp
adc
xchg
dec
jne
sbb
test
jo
mov
insl
sub
pop
leave
fidivrs
pop
mov
es
sbb
sti
sbb
outsb
into
repz
cmp
aam
mov
ja
out
addb
xlat
xor
jb
popf
and
adc
into
lds
outsl
inc
sbb
mov
pop
insl
movsb
inc
arpl
jae
mov
mov
or
mov
loop
fs
lcall
mov
xchg
repnz
addr16
mov
dec
sub
sub
pop
aaa
ret
pop
add
dec
xor
rcr
dec
and
xor
push
or
and
mov
sub
sbb
gs
cmc
incl
inc
shlb
pop
inc
imul
dec
mov
lret
lret
sub
jecxz
push
lcall
ret
ret
mov
xchg
scas
xor
jae
mov
mov
jge
es
or
iret
clc
sti
ficompl
fldt
adc
adc
not
add
sahf
cmpsl
push
dec
repnz
adc
pop
call
sbb
repz
or
lahf
aaa
mov
inc
dec
cs
mov
push
jae
xor
lcall
mov
and
add
sarb
pusha
std
pop
insb
fwait
adc
sahf
inc
add
jo
dec
pop
adc
adc
pop
outsl
or
push
pusha
inc
mov
sub
jo
cmp
lds
xchg
mov
pusha
test
mov
in
and
sub
aaa
dec
imul
mov
fsub
or
or
cmpsl
mov
inc
frstor
xor
sub
jno
xchg
and
and
leave
jl
lock
movsl
sub
xor
cmp
and
or
jae
inc
pop
nop
xlat
adc
mov
or
inc
rcrl
cmp
cld
jo
mov
xchg
xor
or
mov
jae
dec
sbb
rorb
insb
addl
bound
js
das
push
ljmp
inc
mov
cltd
aaa
outsb
out
inc
add
or
jae
ret
cltd
jl
lock
mov
pop
adc
pop
mov
mov
dec
jge
push
clc
cmpsb
jo
jae
jecxz
in
adc
mov
inc
jae
sbbb
insl
rclb
add
pop
inc
adc
fsubrs
dec
sub
xor
mov
jae
cld
mov
cmp
xchg
push
scas
pusha
test
sbb
jae
test
or
jb
pop
mov
stc
cmpsb
add
sahf
pop
in
push
jae
mov
fnstsw
sbb
stc
bound
dec
pushf
pop
xor
mov
in
adc
arpl
aaa
lea
mov
insb
outsb
xchg
hlt
and
jae
sub
xchg
push
and
mov
int3
fdivrs
add
repz
jae
lods
mov
jne
je
loope
les
push
jns
hlt
pop
hlt
test
push
adc
mov
stos
mov
stos
jno
movsb
inc
or
ret
jg
cmp
jae
fdivrl
cltd
and
inc
mov
xchg
and
movsl
lock
cld
push
outsl
sahf
and
test
push
add
or
jns
push
xchg
xlat
mov
adc
pop
test
je
xor
frstor
in
test
out
aam
cmp
jle
xor
jp
jbe
xchg
int3
clc
mov
dec
push
negb
mov
std
cmpsl
and
cmp
adc
mov
xchg
push
scas
fbstp
das
adc
cmpsb
das
mov
mov
jl
push
sub
xor
or
push
adc
xchg
mov
cwtl
nop
decl
jecxz
adc
mov
test
aaa
mov
jb
xchg
adc
sbb
andl
nop
fstps
mov
xor
push
imul
add
and
push
gs
sbb
shrl
pop
sub
or
dec
pop
leave
xchg
sbb
mov
mov
stc
int3
mov
in
clc
fistps
xchg
std
mov
aad
dec
dec
aad
pop
andl
cwtl
pushf
mov
push
repz
mov
xchg
decl
es
lods
or
int3
xlat
mov
push
and
ja
push
ja
push
cs
jb
sub
xlat
push
aam
pusha
mov
ds
mov
ljmp
gs
cli
mov
out
and
or
or
test
sahf
shlb
mov
pop
lret
js
shrb
mov
jae
sbb
jp
mov
lcall
cmp
mov
jg
pfpnacc
sub
jle
insb
pop
cmpsb
mov
dec
pop
popf
loopne
xor
dec
dec
xchg
movsb
notb
lds
inc
repz
jl
icebp
mov
incl
jb
insl
fnstsw
loop
mov
pop
je
sbbl
je
xorl
xor
aam
pop
lods
pusha
cltd
mov
dec
lods
sahf
push
aas
test
sbb
and
cmpsb
imul
xchg
out
jne
cmp
aaa
cmp
push
pop
scas
xchg
sti
outsb
mov
push
stc
mov
test
or
insb
cmp
stos
mov
fisubs
fiadds
pushf
jecxz
mov
jb
mov
xlat
int3
xchg
dec
push
fbld
add
cmp
jno
mov
loope
mov
xlat
scas
sbb
insb
push
xor
xsaveopt
adc
es
mov
jae
sbb
xlat
rcll
lds
popf
lret
dec
icebp
aas
js
and
ds
popf
mov
pop
fimuls
jle
popa
pop
outsb
ljmp
sub
test
or
call
inc
mulb
xorl
nop
fdivs
push
lods
push
rclb
leave
ja
dec
pop
aaa
pop
jp
test
flds
add
shll
xor
mov
stc
jae
scas
add
and
insb
inc
mov
fcoml
cmpsl
xchg
jl
cltd
dec
mov
sub
cs
add
leave
test
out
push
mov
scas
pushf
and
dec
test
adc
and
popl
test
sbb
test
or
test
cmp
and
aas
sbb
adc
and
push
mov
or
inc
frstor
inc
pop
mov
pop
xchg
push
rcll
ljmp
mov
aad
or
push
or
and
or
out
int3
xor
dec
mov
xlat
movsl
and
jmp
ljmp
out
dec
mov
xor
loope
cmp
xchg
jnp
addb
cmp
xchg
add
inc
stc
in
inc
rcrb
mov
adcb
xchg
in
sub
out
sbb
repz
adc
cmp
lret
jl
push
jbe
and
inc
lds
dec
leave
aaa
insb
pusha
popa
repnz
mov
sbb
loope
xchg
nop
popa
xlat
lea
in
shrb
dec
xlat
push
xchg
xchg
and
out
clc
add
jae
push
push
mov
loop
xchg
sub
sbb
xor
jne
fiadds
adc
sbb
mov
push
jno
sub
cwtl
mov
inc
sub
rcl
jno
fsubrl
xor
lods
push
stc
out
mov
movl
cmp
cmp
and
lock
or
lcall
sbb
xlat
mov
push
xor
xor
jbe
push
into
mov
mov
out
add
repz
jl
jns
mulb
xchg
mov
test
outsb
shll
push
imul
cmpb
jle
jnp
adc
push
lods
mov
insb
or
fidivrl
into
push
xchg
inc
scas
and
jns
xor
popl
sbb
insb
test
out
sbb
mov
cmp
loope
out
cwtl
xor
repz
lds
int3
jne
out
xor
ss
sub
push
call
sbb
mov
dec
pop
call
adc
xchg
cmpsl
push
dec
scas
js
push
cmp
push
and
mov
insb
push
nop
inc
mov
daa
push
pop
aas
add
outsl
dec
sub
andb
mov
or
xchg
ds
mov
lods
mov
or
dec
xchg
jp
test
or
xor
int3
push
xor
or
cwtl
sbb
mov
lock
sub
or
adc
xchg
push
int
dec
lahf
cmp
ret
loope
xor
in
jb
add
or
in
add
jp
ficoms
sub
xor
push
insb
pusha
push
in
shll
mov
xor
fs
mov
mov
out
data16
mov
js
ljmp
sahf
and
xchg
aaa
loop
repnz
aad
mov
push
lret
or
les
test
sbb
adc
loopne
rcl
adc
jo
pop
in
clc
popa
jb
xor
lret
repnz
jle
call
sub
xor
add
cli
push
pushf
clc
jns
and
jge
sub
mov
stos
or
xchg
sub
ret
orb
sub
std
sbb
mov
push
arpl
jns
sub
mov
and
in
into
xchg
ja
inc
scas
jmp
aaa
jl
push
mov
xchg
mov
jae
adc
lods
mov
popa
add
in
into
sbb
pop
xchg
or
pop
mov
decl
add
cs
lcall
ljmp
xlat
aad
xor
jae
cs
jo
mov
mov
jb
mov
cmp
cmp
cmp
cwtl
mov
or
sbb
jnp
pop
sub
ficomps
pop
mov
xor
scas
fnstsw
xor
dec
jle
fsubrl
enter
push
mov
xchg
aaa
jmp
push
loopne
jns
xor
mov
out
iret
jae
sub
popa
bound
hlt
mov
xchg
aas
mov
xor
xchg
or
mov
cmp
cwtl
jbe
push
ss
mov
pop
in
mov
test
jns
jae
and
into
cmp
mov
or
pop
sahf
inc
adcb
pop
cmp
ds
mov
cmp
xor
aad
fwait
jmp
jae
lea
hlt
pusha
push
popa
movl
and
data16
mov
inc
pop
popa
cmp
imul
cmp
xor
xor
outsb
or
dec
mov
movsl
dec
test
push
add
xor
or
inc
xchg
mov
std
cwtl
inc
push
rcll
push
loop
push
sbb
xchg
mov
enter
sbb
ret
push
scas
pop
jae
dec
or
shll
scas
loop
mov
test
popa
dec
fcoms
rcrl
sub
cli
cmpsl
sub
and
pop
xchg
inc
mov
nop
dec
fisubs
outsb
jns
adc
cmpsb
mov
notb
and
jge
scas
fisttpll
jnp
pop
jnp
push
and
xchg
sub
push
mov
mov
fldcw
or
aaa
mov
mov
mov
jle
aaa
cs
repz
clc
and
sbb
je
jns
mov
mov
outsl
pop
dec
inc
dec
addl
aas
inc
jae
sarl
push
sbb
sahf
push
cwtl
and
mov
es
push
cmp
clc
fisttpl
mov
and
jl
ja
pop
fidivl
outsb
lahf
xor
outsl
cmpl
mov
sub
mov
pop
scas
ja
icebp
ja
jns
mov
mov
dec
lret
mov
jl
cmp
pop
cs
sbb
mov
pop
in
push
jl
insb
push
and
jns
call
sbb
int3
iret
xor
add
inc
imul
or
mov
xchg
into
push
push
mov
pop
js
jns
and
dec
pop
in
mov
xrelease
cmp
mov
inc
pop
enter
mov
fistl
shlb
dec
movsb
loop
mov
jae
pop
or
stos
movsb
sub
sub
or
and
push
pop
aam
jb
cmc
mov
pop
cli
test
mov
ret
and
jecxz
inc
rcrl
shl
sbb
mov
push
pop
cmpsb
int
lcall
or
scas
adc
adc
mov
repz
pop
xor
jo
push
cmp
jae
cmp
into
call
lret
cmpsb
xchg
xor
mov
cmp
stos
stc
pushf
mov
sbb
mov
fldt
push
lock
mov
movsb
mov
aad
dec
dec
sbb
mov
data16
data16
fwait
pop
and
fdivrs
mov
outsb
iret
and
call
mov
dec
shrl
mov
imul
xchg
call
push
jb
aad
push
mov
int3
ret
orl
pop
inc
or
push
nop
xchg
mov
inc
out
inc
mov
lods
pop
loope
jle
push
jae
jecxz
and
jno
in
lea
je
pop
in
jne
imul
mov
jle,pn
sbb
cltd
mov
test
fwait
jo
sbb
int3
pop
loop
fmuls
int
imul
push
cs
aas
adc
pop
fcoml
cltd
inc
imul
xchg
lock
ret
clc
mov
ss
mul
or
outsb
pop
push
xchg
sbb
out
rcll
xlat
push
sub
mov
cmpsb
add
adc
insb
loope
and
out
mov
shrb
sbb
int3
jno
int
mov
hlt
je
pop
icebp
xchg
stc
sub
jbe
test
jmp
lret
sbb
add
call
imul
scas
gs
shll
jns
ret
jle
ret
cmp
sti
paddsw
rcll
mov
jbe
setp
jp
cmc
mov
or
sbb
std
or
shll
xor
iret
hlt
or
or
mov
sub
xchg
add
shlb
test
xchg
cmpsb
push
xchg
mov
and
push
lods
shll
insb
jle
and
mov
cmp
subb
sbb
jae
dec
movsb
jne
enterw
imul
mov
cmp
jns
mov
jae
dec
adc
aaa
sub
mov
inc
push
cmpsb
dec
js
xor
pop
or
cld
aam
in
in
cltd
pop
push
shrl
cmc
jl
sbb
adc
aaa
pop
fwait
je
lds
adc
and
add
xchg
clc
mov
or
xor
imulb
add
je
loope
repnz
and
mov
cwtl
cmc
scas
push
sbb
xchg
xor
jle
push
sbb
adc
movsb
imul
fisttpll
push
mov
mov
jo
dec
pop
orb
repnz
pushf
rcll
ss
jae
mov
imul
enter
mov
dec
jbe
inc
inc
cmp
fdivrl
add
push
mov
js
xchg
jne
loop
call
popa
call
mov
push
jb
psubb
ss
push
cmpsl
dec
mov
mov
sahf
data16
fisubrs
push
lret
jp
movsl
sub
mov
or
cwtl
cmp
xchg
fdivrs
pop
adc
sbb
mov
cmpb
add
mov
sti
push
and
movsw
xorb
test
mov
aam
inc
xor
jae
mov
into
in
pop
lds
xor
jle
ja
decb
roll
out
push
push
push
xchg
xchg
ss
dec
jo
push
repz
ficoms
fwait
lods
cmpsb
dec
fmuls
pop
mov
push
jle
jno
jp
inc
jge
enter
int3
test
icebp
add
mov
mov
aad
inc
fistpl
mov
inc
std
lock
inc
or
jle
push
daa
loopne
mov
and
cmpl
xor
or
sub
and
out
repz
pop
mov
out
inc
pop
jp
mov
push
push
faddl
mov
cmp
repz
arpl
adc
push
or
jo
jb
lods
xchg
lcall
ss
ficoms
test
inc
imul
sbbb
sbb
lret
mov
insb
inc
rorl
mov
add
enter
push
sbb
pop
jle
xchg
sub
repz
daa
dec
xor
enter
adc
jo
mov
std
jns
into
pop
stos
fcom
adcl
cmp
jae
push
cmc
mov
pusha
inc
repz
mov
aaa
jo
scas
mov
inc
pop
xchg
ss
lods
cwtl
xchg
pop
fiadds
jne
cmp
mov
inc
jecxz
pop
js
or
adc
add
shlb
push
push
push
ss
aam
mov
or
lock
push
dec
sbb
scas
mov
cwtl
std
and
in
jo
sbb
pushf
jne
sahf
pop
loope
pop
jo
mov
mov
push
mov
lcall
sbb
fldl
mov
test
test
cmp
scas
jo
orb
xor
test
pop
mov
leave
jb,pt
mov
sarl
mov
xchg
or
xchg
inc
mov
dec
mov
js
mov
pop
arpl
out
notb
nop
and
insb
in
pop
ss
loop
cmpsb
xchg
jecxz
arpl
stos
dec
ja
dec
idivb
and
pop
push
adc
and
fsubl
fimull
sub
mov
idiv
sbb
xor
pop
pop
sub
mov
sub
xlat
jae
test
mov
ret
xor
fimuls
movsl
les
in
enter
push
pop
les
lds
push
adc
mov
aam
stc
test
mov
add
xchg
dec
add
pushf
pop
sti
loop
enter
fsts
xchg
push
mulb
mov
jge
mov
repz
pop
jno
frstor
xchg
cmpsb
out
popf
push
push
sahf
imul
push
cltd
imulb
push
lret
leave
les
aas
lcall
or
mov
push
les
pop
mov
cli
daa
ja
and
jle
pop
jle
jae
imull
mov
lret
push
xchg
add
cs
ja
out
or
fsubs
or
stos
and
adc
push
adc
xor
xchg
out
sar
xchg
mov
pusha
mov
dec
mov
adc
add
mov
repnz
lods
jmp
insb
cltd
clc
mov
data16
scas
and
pop
addr16
movsl
and
loopne
xchg
daa
cmpsl
add
das
fs
rcrl
xlat
cld
out
cltd
push
arpl
ret
jns
lods
mov
mov
inc
xchg
clc
sub
cmpsb
pop
push
pop
fsubs
inc
cmp
js
lds
xchg
jo
jns
pushf
pop
test
sbb
mov
pop
scas
jl
pop
push
ljmp
push
sarl
pop
popf
fidivs
add
test
xchg
ficomps
jno
pop
jo
xor
sbbl
jecxz
jno
cwtl
xchg
ja
xor
addr16
aas
lret
lods
pop
xlat
insb
gs
mov
les
and
xchg
roll
test
cmc
inc
mov
int
and
mov
push
js
pop
movsl
inc
push
mov
lret
adc
mov
add
mov
pop
pop
dec
fisubrl
insb
cmp
inc
test
cmpsb
or
insl
pushf
push
mov
int3
scas
das
insb
jae
xchg
popa
xchg
mov
mov
or
or
pushf
push
movsb
mov
idivb
push
jae
adc
push
movsl
mov
scas
push
pop
push
daa
cmpl
dec
pop
les
leave
pop
jo
jbe
lods
xchg
sub
push
mov
add
daa
fnstcw
jns
mov
test
and
test
sbb
sub
jle
push
imul
pusha
add
faddp
sub
aad
sbb
and
stos
cmp
adc
imul
adc
shll
mov
add
test
sub
dec
andb
fisubrs
ljmp
add
pusha
adc
inc
shr
pop
mov
push
notb
loope
mov
adc
inc
and
pop
aad
jo
aad
mov
rcl
push
mov
push
adc
mov
into
orb
lea
fcom
push
fucomi
outsb
xchg
stos
popa
dec
cmp
repnz
sub
lock
pushf
rorb
sub
mov
cmp
mov
in
inc
out
mov
ja
roll
mov
pop
and
sbb
js
test
mov
pop
frstor
add
pop
mov
or
dec
outsb
mov
xchg
fcoms
int
fwait
pop
or
mov
call
sbb
mov
push
push
push
push
adc
pop
xor
ljmp
mov
lods
cmp
dec
xor
inc
sub
enter
filds
pop
clc
add
repz
xchg
push
pop
movsb
jns
js
xor
scas
insb
inc
rcrl
inc
push
mov
iret
test
loopne
test
cmp
push
add
dec
cwtl
ficomps
cs
gs
xchg
adc
iret
popfw
jp
je
xchg
scas
out
fisubrs
test
insb
cltd
jne
sarb
data16
rclb
pop
mov
adc
aaa
xor
fstps
push
pusha
mov
jo
stos
in
lretw
adc
mov
lahf
into
and
push
loop
popa
inc
pop
fcomps
repz
arpl
in
cmp
or
mov
clc
dec
pop
or
sub
cmp
push
sub
xor
bnd
cld
mov
arpl
xchg
inc
xor
or
js
aaa
filds
data16
and
mov
popl
outsb
rorb
jo
les
fiadds
sub
pop
rorb
ljmp
leave
mov
push
jne
or
xchg
and
xchg
mov
adc
loopne
popa
scas
adc
push
jns
sub
push
sub
xlat
stc
sbb
orl
pop
mov
dec
adc
xchg
dec
pop
vmread
push
or
int3
and
and
add
xor
jbe
cmp
jl
ret
jp
mov
js
fcoms
or
mov
ret
mov
pop
xor
mov
mov
dec
pop
push
scas
mov
jmp
pop
pop
jmp
sub
dec
xchg
imul
cli
scas
jae
shlb
xor
xchg
cltd
fs
or
ds
jg
std
je
ds
js
adc
inc
jb
call
ds
js
cmp
mov
pop
sub
into
repz
inc
pushf
adc
xor
arpl
add
ss
lret
inc
lcall
je
add
xor
jns
mov
stc
adc
sub
lods
stc
push
cmp
inc
inc
ss
push
in
adc
mov
adc
scas
adc
adc
xchg
mov
inc
xor
add
cmpsl
rol
pop
xor
push
mov
js
ljmp
and
pop
push
or
push
sub
clc
push
jmp
insb
inc
iret
push
stos
addr16
sahf
xchg
add
cmpl
loope
clc
xchg
or
out
movsl
aaa
mov
dec
xchg
das
push
shlb
rcrb
ret
jecxz
stos
pop
repz
sub
sbb
hlt
add
inc
sahf
jae
sbb
mov
ret
mov
mov
cmp
mov
push
fst
in
hlt
cmp
sub
cmpl
push
repz
std
cwtl
mov
jns
sub
dec
pop
aas
out
ret
out
negl
mov
mov
insb
mov
dec
mov
sbb
cmc
fisttpl
mov
add
push
loope
add
cmp
testb
adc
xor
jmp
mov
jb
xor
pop
je
js
mov
pop
ds
and
mov
stos
es
gs
lcall
pop
pop
mov
pop
mov
je
jp
xchg
call
ljmp
and
ret
xor
ja
aaa
push
push
stos
sub
xchg
insb
and
sar
inc
repz
sbb
sbb
jnp
mov
add
icebp
mov
cmpsl
push
es
add
mov
aam
xor
xor
xor
pop
xchg
pop
adc
int
mov
pop
rcrb
or
sbb
and
sub
fstps
mov
jns
pusha
cmc
ret
stc
push
ljmp
and
pop
cs
sbb
cmc
adc
cmc
xor
fidivrs
and
mov
mov
xchg
jae
out
sbb
cmp
sbb
or
repz
xchg
mov
insb
data16
mov
sbb
adc
test
out
sti
aas
into
mov
mov
popa
xorb
mov
cwtl
pop
js
fnstcw
push
adc
inc
push
cld
ljmp
out
inc
adc
dec
and
fmull
cmp
nop
push
dec
add
vmovupd
xlat
mov
out
jo
jbe
idivl
jno
mov
pop
xchg
mov
push
xor
push
mov
stos
fmull
mov
adc
fs
xchg
adc
mov
push
mov
push
or
jae
add
mov
sub
ret
sub
inc
or
or
jo
mov
das
cld
jle
pop
mov
cmc
ja
jp
ret
popa
add
test
stos
lret
loope
leave
mov
pop
cwtl
sub
jl
test
mov
mov
iret
fisubrl
iret
cmpsb
and
cmp
dec
fmul
sahf
and
pop
mov
fidivl
inc
jecxz
pop
xor
outsl
sbb
into
in
enter
mov
test
rcrb
rorb
sti
enter
sub
je
cwtl
xchg
inc
es
stos
shrb
mov
pop
push
in
rcll
mov
mov
insb
xchg
pop
test
mov
jg
or
jo
or
cmp
mov
cmp
pop
sbb
cmp
adc
jle
lret
sub
js
inc
jae
fistpll
cmp
or
and
cli
loope
push
and
testl
ss
pop
dec
leave
aad
push
inc
inc
lahf
cmpsl
and
arpl
jno
lods
ljmp
popa
mov
scas
cmpsb
mov
add
data16
mov
loopne
ljmp
xchg
pop
imul
hlt
cmp
and
stc
addb
jnp
dec
aaa
cmpsb
iret
add
cs
fbld
enter
ss
mov
inc
sbb
cmp
inc
daa
lock
sbbb
rcrl
sahf
sub
fcom
adcb
cmc
cmc
scas
bnd
mov
mov
mov
out
pop
dec
jbe
push
inc
inc
fistpl
leave
push
cmp
pop
mov
imul
clc
rcll
iret
es
xchg
cmp
push
enter
push
and
push
orl
sbb
imul
adc
push
outsb
cmp
lahf
xchg
pop
js
fsts
xchg
shrb
mov
mov
fdivrs
cmp
push
mov
cltd
mull
push
mov
nop
push
pop
lock
jae
imul
outsb
or
jecxz
push
cmp
ret
mov
outsl
imul
mov
icebp
pop
ss
pop
push
jge
movsl
pop
pop
inc
cmc
add
ja
cltd
cmp
js
pop
rcll
fdiv
je
leave
push
test
mov
mov
mov
or
ret
add
out
mov
jae
push
mov
xchg
lret
out
idivb
xchg
mov
aad
mov
scas
fidivrs
xor
xchg
add
jns
dec
cli
fistl
dec
daa
adcb
sbb
loope
pop
cmc
add
shrl
js
push
jne
jle
jecxz
pop
pusha
jle
add
neg
lea
lret
in
xchg
stc
and
push
push
adc
sbb
adc
cmp
adcb
lods
inc
dec
push
shlb
xor
dec
sub
ficomps
je
cmp
lds
fcomip
mov
shl
shll
ljmp
test
push
sub
add
jne
iret
fldenv
nop
pop
popf
xchg
fcmovb
add
repz
xchg
xor
outsb
mov
inc
loope
mov
xor
sub
int
out
fwait
cmc
fisubl
sti
pop
jne
fwait
jae
jmp
xchg
lock
pop
or
cli
adc
dec
add
lods
push
cmpb
mov
stos
icebp
jl
add
mov
push
std
vpshuflw
insb
jg
mov
aad
pop
xchg
pop
lret
pop
mov
dec
test
fdivs
mov
and
mov
mov
xlat
jmp
in
fsubrs
leave
add
cmpsb
gs
into
mov
mov
push
call
inc
pushl
xor
fs
inc
ret
arpl
push
popa
pop
cmp
cmp
call
sub
fldenv
clc
jns
fs
repnz
imul
or
sub
mov
mov
cmpsl
decb
cmp
fcomps
dec
lds
and
pop
inc
xchg
loope
mov
popa
push
push
aad
mov
in
mov
or
iret
adc
stos
iret
insb
fildll
out
dec
aas
and
shll
or
mov
sub
fs
aaa
xchg
xor
mov
xor
and
add
cmpsl
aas
and
je
add
xchg
sbb
insl
or
repz
ret
xor
adc
rorb
out
mov
pop
inc
mov
mov
js
xor
mov
mov
popa
stos
jmp
mov
push
loope
int
jecxz
inc
lds
mov
test
gs
inc
repz
enter
or
add
repz
jmp
sub
aaa
xor
outsb
sbb
ret
ljmp
call
xorl
jp
or
cmp
add
lahf
js
mov
test
jbe
insb
fbstp
stos
or
dec
mov
xor
popf
movsl
outsl
push
cli
lahf
or
imul
sbb
fnstenv
xchg
push
fistl
shlb
lock
pop
pusha
jmp
mov
mov
push
push
bound
movsb
sub
pop
mov
jb
pop
dec
mov
js
je
rcll
inc
js
loope
inc
lahf
xlat
scas
fdivrs
hlt
in
mov
cmpsb
outsb
pushf
aas
mov
cld
inc
jmp
dec
mov
push
push
divb
repnz
outsb
adc
sbb
mov
mov
loopne
adc
mov
pop
and
add
je
jbe
or
cmp
mov
mov
pop
push
push
inc
cmp
test
bound
movl
arpl
push
jg
xor
jle
mov
fistl
cmp
pop
sub
jns
imul
insb
mov
or
lret
movsb
xchg
fcomp
mov
add
mov
mov
popa
adcl
xchg
int3
insb
or
xchg
sbb
jo
mov
xor
xor
scas
js
add
and
adc
push
mov
aaa
int
or
fs
fisubs
ljmp
das
xchg
or
fs
cld
jno
mov
arpl
insb
movsb
sub
or
js
push
icebp
jae
ret
out
sub
cld
cmp
test
lret
cmp
push
scas
xchg
and
fidivl
fwait
scas
or
mull
gs
jl
xchg
push
lds
dec
sub
jae
adc
icebp
dec
inc
pop
add
push
fnstenv
pushf
out
pushf
aas
mov
push
jmp
pop
das
shrl
adc
push
mov
push
push
aaa
mov
sarb
in
pop
aaa
jo
push
cltd
fldl2t
pop
xchg
pop
pop
push
adc
lret
call
cli
sub
mov
cs
xchg
xor
dec
pop
mov
cmp
clc
fdivrs
sub
sub
pop
cmp
adc
or
rcll
push
or
push
sub
xor
aaa
pusha
xchg
mov
lock
in
outsl
dec
xchg
testb
or
fsubrl
into
jnp
cmp
and
divb
xor
inc
mov
adc
pop
add
jmp
push
jbe
jo
mov
mov
adc
jne
adcl
les
and
or
hlt
push
mov
jb
aas
mov
aam
mull
xor
js
sbb
push
push
pop
xor
jnp
sub
dec
xchg
push
xchg
inc
test
cltd
pop
mov
fidivrl
adc
js
decl
lea
cltd
jmp
ret
in
jbe
push
cwtl
aas
lea
lcall
mov
xor
mov
frstor
jge
rolb
cwtl
imul
mov
sbb
or
dec
inc
lock
pop
mov
mov
or
ds
scas
mov
gs
pop
rol
fs
dec
test
loopne
add
cwtl
insb
inc
pop
nop
sub
mov
pop
imul
jge
scas
mov
xor
mov
loopne
sahf
jge
dec
repnz
sub
movsb
adc
and
xchg
out
sbbl
mov
cmc
pop
gs
imul
loope
lcall
shrb
mov
adc
mov
mov
adc
mov
push
lahf
nop
movsb
cmp
arpl
mov
les
mov
inc
add
and
test
roll
cmpsl
pop
and
xor
scas
loopnew
jns
inc
stos
cmp
loope
mov
sub
loopne,pn
mov
xlat
jno
mov
inc
imul
and
inc
and
xor
cmovl
mov
sbb
jecxz
xchg
bound
push
jb
repnz
fwait
dec
adc
adc
loop
ds
or
scas
pop
push
scas
gs
jp
and
jno
loop
rolb
ss
rorb
aas
xchg
jb
push
mov
jp
repz
sub
lahf
jns
repnz
das
nop
fildl
mov
mov
jno
pop
shlb
xor
test
outsl
push
scas
adc
and
jo
sti
repnz
or
xor
dec
pushf
inc
cld
xchg
mov
jae
mov
jge
push
pop
ja
push
clc
pop
popa
jo
outsb
cli
jbe
add
mov
ljmp
gs
iret
ja
fistl
mov
push
cmp
int3
popa
cs
scas
inc
clc
adc
insb
div
or
jb
sub
clc
adc
jbe
addr16
push
add
pop
fidivrs
pop
xor
jbe
xchg
mov
ret
shrl
inc
mov
sub
enter
shufpd
sar
insb
out
mov
and
adc
inc
test
pusha
mov
lea
or
test
inc
pop
shl
mov
dec
cwtl
es
js
cmp
lock
or
daa
push
cltd
jae
sub
in
cltd
movsb
inc
jge
into
mov
daa
xor
push
cmpsl
pop
fmuls
jbe
rcll
dec
xor
mov
js
xor
adc
xor
js
out
jns
sbb
mov
addr16
xchg
enter
and
xchg
fidivrl
je
mov
cwtl
adc
xchg
or
dec
mov
icebp
or
stos
inc
mov
mov
cmpsb
adc
pop
adc
in
push
sbb
xor
jae
xchg
insb
inc
mov
sbb
mov
ljmp
cmp
xchg
jns
push
test
mov
sbb
js
pop
sub
add
shrb
push
scas
nop
call
mov
xchg
xor
push
lods
cmp
jns
or
in
mov
push
sbb
push
in
fs
fiaddl
lds
push
and
inc
pushf
dec
imul
lret
hlt
popl
add
leave
xor
jl
xchg
icebp
aam
cmc
cmp
xor
insb
mov
pop
test
outsl
aaa
cmpsb
jbe
jne
mov
jp
hlt
ljmp
xor
clc
xchg
lahf
into
mov
dec
sbb
mov
add
call
inc
cs
sub
sub
scas
fimull
pusha
into
jmp
faddl
lret
and
mov
and
adc
push
xchg
pusha
jp
mov
clc
scas
jl
adc
and
jb
dec
gs
pop
add
mov
inc
or
jns
xor
cmpb
adc
loopne
test
mov
sbb
out
mov
in
xlat
imul
mov
sbb
js
pop
fs
sarb
insb
cmc
enter
enter
popa
lcall
test
jne,pn
xor
loop
mov
push
pop
mov
sub
mov
ds
leave
xor
js
test
out
cmp
xchg
cmp
add
clc
je
or
push
daa
dec
js
movsl
xor
jb
sub
pop
dec
mov
mov
add
mov
mov
mov
cs
jle
mov
xchg
dec
pop
add
inc
es
cmp
jle
clc
jge
test
cwtl
imul
je
loopne
jge
sti
sub
sub
dec
cmc
mov
je
lahf
mov
lods
jae
nop
movsb
mov
inc
test
sbb
or
pop
fxch
mov
lcall
sub
push
mov
in
cltd
popa
bound
push
jle
adc
mov
jmp
ffree
cmpsl
xchg
outsb
jp
xor
adc
imul
dec
mov
xchg
xchg
jae
adc
mov
out
pop
rcrb
adc
push
jo
xorb
movsb
dec
aad
jno
mov
test
insb
push
mov
xor
mov
out
pop
addr16
enter
xor
mov
or
fdivs
sbb
mov
pusha
mov
pushl
aad
cwtl
xchg
mov
push
scas
int3
mov
mov
dec
mov
and
push
and
xor
push
ficoml
cmp
pop
popa
sbb
jp
cmp
icebp
mov
and
add
push
jl
in
and
repz
push
mov
icebp
dec
xchg
rcr
push
test
pop
lahf
movsb
mov
mov
adc
shrl
xor
sbbl
sti
xchg
sub
jbe
pop
mov
xor
pop
jae
mov
fs
jbe
mov
into
pop
add
jle
sub
fs
or
sahf
adc
mov
dec
inc
cmp
xchg
push
fldenv
mov
in
fists
add
mov
outsb
js
jp
repz
sbb
pop
lcall
in
cs
push
sub
push
icebp
test
aam
pusha
add
neg
dec
jns
pop
xlat
jle
or
fwait
mov
and
mov
int3
stc
xor
pop
icebp
je
fildll
add
mov
sub
and
jns
xchg
pop
dec
adc
pop
ss
adc
mov
insb
push
aad
push
adc
jl
and
mov
adc
sbb
aaa
in
jne
xor
test
pop
jle
push
out
dec
cmc
sbb
test
sub
lea
aad
jg
mov
push
pushf
test
adc
sbb
idivb
adc
or
ja
int3
pusha
push
into
adc
data16
pop
dec
xlat
mov
ljmp
and
mov
mov
scas
popa
sub
cld
enter
pop
inc
jb
cmc
mov
pushf
mov
test
lahf
xor
aas
jle
mov
sub
imulb
test
imul
adc
sahf
stc
je
pop
fimuls
sbb
cwtl
insb
mov
mov
popf
mov
xor
cwtl
jnp
insb
stos
jbe
pop
mov
push
ss
push
notl
fldl
sub
push
sub
movsl
push
outsb
sbb
xchg
lods
loopne
mov
ret
insb
sbb
icebp
dec
mov
add
imul
loopne
push
in
movsb
cmpsb
mov
pop
test
call
or
sub
inc
xchg
daa
test
movsl
push
fs
sub
addr16
sbb
mov
pusha
in
inc
or
daa
push
jg
data16
mov
hlt
sub
dec
jo
mov
and
inc
popa
push
xchg
addr16
xchg
lods
loop
and
ret
fmul
sub
pop
fldt
test
sbb
push
xchg
mov
push
ljmp
lods
pop
aaa
cs
inc
rolb
inc
and
das
popa
fld
dec
loopne
hlt
jno
push
movsl
jle
in
icebp
sahf
je
aam
out
nop
add
lcall
pop
add
flds
sbb
xlat
out
mov
popf
fisubrs
mov
adc
sub
ret
or
stc
pop
mov
stos
in
iret
push
push
or
dec
loope
lods
inc
stos
add
xchg
mov
sbb
dec
inc
mov
xor
jmp
popa
push
push
xchg
inc
movsl
sti
aaa
pop
int
add
loopne
lods
daa
mov
clc
xchg
scas
sub
imul
push
lds
add
push
xor
jmp
es
insb
nop
daa
jns
sbb
shrb
lods
mov
insb
xlat
sub
inc
ret
mov
loope
movsb
stc
xlat
xor
jbe
lea
jbe
subb
cltd
aam
add
fbld
sub
sub
addr16
cs
stos
insb
cmpb
pushf
mov
and
mov
fadds
xchg
popf
jae
and
ret
pop
push
lahf
je
mov
push
call
add
mov
jge
mov
lret
adc
pop
icebp
popf
jmp
add
pop
jns
cmp
sbb
mov
pop
repnz
add
pop
cmp
mov
jo
iret
add
stos
imul
sub
mov
cmc
or
movsl
jne
testb
int
insb
ss
or
fs
js
xlat
ja
mov
mov
cmp
pop
cltd
push
mov
idivb
subb
fbstp
and
jns
or
cmp
mov
push
data16
cmp
lgs
js
icebp
rcl
stos
adc
jg
gs
push
fidivrs
test
ret
adc
pop
inc
sub
jle
lea
ja
scas
inc
gs
mov
lods
stc
dec
and
dec
mov
mov
outsl
mov
mov
in
jl
jo
test
jns
pushf
cs
shrb
loope
lock
xor
jae
cld
or
cmp
lods
test
ds
popa
pop
in
sbb
sbb
adc
push
test
sbb
test
test
dec
push
xor
pop
mov
mov
adc
mov
sub
mov
lret
and
sahf
leave
popf
xchg
sub
nop
rorb
xchg
mov
jecxz
fwait
or
ds
or
mov
sbb
jp
xchg
push
lret
fstpl
and
repz
pop
or
push
js
cmpsl
scas
push
push
dec
cli
push
mov
ret
mov
push
jl
pop
mov
and
mov
xchg
ds
sbb
add
jbe
jae
xor
mov
clc
pop
in
cwtl
adc
subb
gs
loopne,pt
fmuls
and
xchg
shlb
popf
rcl
lret
xor
ds
movsb
loop
test
jo
pop
js
inc
jecxz
or
and
jbe
push
fwait
imul
xlat
mov
adc
jmp
stos
or
bound
stos
pop
gs
bound
dec
in
out
mov
outsb
or
scas
mov
cld
push
mov
push
shrl
and
loope
xchg
mov
sbb
sub
and
push
loop
cld
inc
add
jbe
push
and
push
or
and
outsb
lcall
cli
test
scas
cmp
pop
or
imul
imul
dec
in
movsb
call
int3
fwait
std
push
fwait
aaa
push
bound
inc
sahf
scas
mov
cmp
lock
push
jbe
push
mov
xlat
xchg
repnz
in
dec
xchg
jo
mov
xchg
push
imul
pop
shlb
sub
dec
and
or
es
shll
aad
bound
mov
lods
xlat
not
and
jmp
add
mov
sub
fnstsw
daa
sbb
out
test
std
dec
in
into
negb
out
ja
adc
xchg
movsl
mov
mov
stc
out
sbb
push
mov
dec
xchg
test
cwtd
or
add
and
xchg
outsb
and
jp
mov
lret
enter
loopne
int3
aam
lret
adc
insb
inc
cmp
int3
insb
out
idivb
mov
push
js
jp
xchg
hlt
sbb
mov
shlb
pop
lahf
inc
jl
xchg
pop
xor
mov
iret
mov
fnstsw
insb
leave
ja
icebp
jne
xchg
shlb
adc
jmp
dec
sbb
rep
js
test
sbb
in
sbb
stos
mov
outsb
or
mov
cmp
mov
pop
pop
cmp
das
mov
dec
gs
push
push
xor
insb
enter
outsb
iret
in
mov
stos
mov
mov
mov
imul
insb
mov
sub
imul
mov
lea
jbe
push
popa
sbb
fdivrs
inc
xor
movsl
jb
mov
ss
cmp
mov
out
mov
cmp
sbb
mov
sbb
jo
push
push
cmp
jae
lock
hlt
stos
push
loopne
nop
frstor
call
or
add
push
js
dec
add
or
scas
cli
sub
jne
es
xor
sbb
sub
cmp
sbb
clc
cli
jmp
pushf
xlat
pop
sbb
jl
out
xchg
ret
inc
js
cmpb
add
sbb
sub
test
insb
pop
xor
shr
cmp
pop
mov
push
loope
jns
adc
icebp
sahf
mov
push
stos
outsb
fcom
movsl
cmp
popf
fldt
imul
dec
and
loope
sub
xchg
lods
push
push
xchg
cli
and
mov
lcall
mov
gs
lock
sbb
mov
xchg
insb
jmp
inc
in
or
jle
sub
xor
adc
cvttps2pi
movsl
xchg
cwtl
loope
aam
cmpl
lcall
jae
dec
pusha
ss
jb
and
out
mov
sbb
push
xorb
out
inc
movsb
mov
pop
jmp
and
daa
int
push
xchg
js
je
jbe
xor
dec
dec
or
dec
pop
test
cmpl
mov
repz
decl
mov
insb
and
insb
int3
mov
sub
push
sub
add
xor
xchg
cmpsb
imull
les
ja
pop
xchg
lea
jae
pusha
and
sub
test
jb
iret
jl
rorb
ljmp
cmpsb
jmp
mov
gs
mov
jbe
xor
out
sbb
lcall
mov
cmpl
leave
jae
xchg
loop
fsubs
or
mov
ss
ss
adc
into
mov
pop
mov
cmp
mov
sbb
dec
inc
jecxz
xchg
inc
sahf
push
mov
push
pushf
pusha
jns
out
sub
sub
aad
pop
push
xor
movsb
and
pop
push
sub
mov
sub
test
aaa
cld
inc
xor
stc
sub
jae
int
adc
sbb
fucomp
aas
aas
in
aad
dec
jns
cmp
ret
pop
sbb
mov
pop
and
movsl
test
and
mov
lods
movsb
cmp
pop
fnstenv
lods
xchg
fxch
shr
mov
mov
lcall
xor
xlat
mov
inc
hlt
push
pop
sub
adc
daa
pop
nop
in
cwtl
xchg
fwait
pop
dec
aas
popf
aam
cmc
cwtl
cmpsb
jmp
cwtl
and
xor
push
fcomps
divl
repz
jo
add
mov
mov
jne
pop
sbb
out
mov
cmc
roll
movb
das
pop
mov
test
test
pop
xchg
inc
lea
xchg
jle
lods
sbb
or
aas
mov
adc
mov
mov
cmc
fdivl
add
pop
cmp
mov
sub
loope
adc
cmp
fdivp
dec
out
pusha
sub
jg
xorb
jno
nop
push
adc
xchg
push
test
out
mov
std
jne
ds
pop
ret
aaa
jb
and
sub
lret
inc
jbe
jbe
jae
and
andb
fdivs
mov
mov
stos
mov
insb
fwait
and
dec
push
mov
jae
jle
mov
int
and
jbe
cltd
pop
mov
and
out
mov
ljmp
fdivs
mov
mov
loope
pop
and
cmp
clc
sub
adc
push
sbb
lock
adc
stos
push
and
icebp
imul
and
jle
sti
and
pop
add
pop
jecxz
imul
xor
mov
sahf
sbbb
sbb
and
out
push
xor
stc
into
push
insl
fsubrl
sbb
add
je
push
sbb
push
inc
mov
sub
or
adc
mov
stos
jmp
aas
dec
push
or
sbb
mov
lds
push
leave
jmp
mov
in
jae
adc
fsubrs
leave
insl
dec
sbb
and
adc
lret
mov
pop
aaa
push
mov
pop
fstpt
jo
cmp
fdivs
icebp
mov
cld
xor
sahf
ror
and
cmc
bound
adc
mov
push
adc
cwtl
mov
jns
mov
cmc
dec
push
cmp
and
mov
in
imul
add
jo
fwait
xor
sub
ret
loope
xchg
inc
dec
lock
cltd
dec
adc
sar
dec
sub
jmp
xlat
push
rcrl
push
cmpsb
cmp
mov
dec
push
mov
adc
imul
pusha
sub
inc
and
in
sub
leave
es
jo
pop
cmpsl
and
adc
or
fldenv
xlat
imul
cmp
xor
repnz
je
cmpsb
call
mov
jns
sbb
pop
adc
pop
mov
adc
adc
imul
dec
shl
push
aad
jo
xchg
mov
or
lods
jo
sub
jno
sub
mov
jo
adc
xor
aaa
addps
cmp
xchg
lods
pop
jbe
cltd
push
xchg
lret
or
shlb
mov
dec
inc
xor
in
imul
mov
mov
mov
mov
lods
push
test
and
cld
jno
cld
pop
test
push
ficompl
aam
sub
clc
loope
mov
enter
sbb
mov
inc
stos
out
iret
stc
push
xor
sbb
in
lahf
mov
das
jecxz
jae
notb
xor
mov
insl
es
push
clc
in
mov
mov
dec
dec
mov
in
xor
popa
jb
sbb
xchg
jp
pop
mov
inc
push
pop
jg
lcall
scas
mull
outsb
loop
sarb
mov
pusha
gs
movsl
xor
add
orl
test
dec
insb
and
mov
mov
push
pop
and
push
call
xlat
test
pop
jb
mov
pop
jo
es
lcall
adc
rcrl
jg
in
das
popfw
outsb
mov
ficompl
jno
push
std
xchg
jle
mov
andl
lea
mov
xlat
mov
iret
push
nop
pop
insb
or
stos
adcb
mov
or
imulb
clc
enter
movsb
mov
std
shlb
pop
idivl
mov
data16
nop
jo
pop
or
cld
sbb
les
mov
xor
je
js
and
lcall
sysexit
sub
lds
mov
cwtl
xchg
mov
je
dec
cmp
xchg
lods
pop
movsw
dec
or
lret
outsl
test
fnstenv
adc
mov
mov
or
push
lret
pop
pop
call
cmpsb
testb
test
sbb
push
adc
pop
mov
repz
lcall
pop
xchg
insl
sbb
dec
cmp
mov
push
xlat
pushf
pop
nop
mov
jmp
mov
xor
xchg
or
aaa
fprem1
loopne
mov
inc
adc
xor
dec
mov
ret
push
mov
je
jae
shrb
lcall
mov
push
dec
push
adc
mov
push
call
push
icebp
je
xchg
and
jecxz
cmp
sbb
xor
test
in
xor
insb
aam
or
lret
cmp
fwait
mov
sbb
push
sbb
mov
jne
fldenv
ret
xchg
sbb
mov
jns
jo
fisubrs
int
adc
adc
clc
xor
dec
test
cmpsb
test
insb
aad
sbb
pop
xchg
or
adc
test
clc
test
adc
jmp
cmc
ret
inc
mov
pop
in
loope
mov
push
iret
pop
jae
in
sti
xchg
data16
pop
inc
add
dec
adc
popa
xchg
lret
lret
mov
inc
inc
insl
ds
mov
daa
stc
test
mov
ffreep
mov
cwtl
mov
mov
xor
xchg
rolb
sub
jno
push
mov
adc
das
iret
pop
and
imul
pop
adc
out
cmp
shlb
aaa
movl
mov
xchg
mov
jle
cli
popf
pop
mov
fistpll
push
imulb
imul
cmp
icebp
cmp
mov
mov
mov
gs
xor
arpl
push
btr
fisttpl
push
push
push
pop
push
movsb
sbb
cmp
clc
cmp
repz
cli
std
mov
sarl
push
hlt
shrl
add
cmp
add
dec
push
sbb
cmp
sub
dec
pop
mov
sarl
rcrb
dec
sub
xchg
sahf
xchg
inc
daa
fcoms
nop
inc
scas
out
pusha
filds
pop
cmp
movsb
lock
test
dec
sbb
or
test
in
mov
and
pop
inc
push
dec
push
push
hlt
ret
scas
fsubrs
cwtl
fistl
adc
js
insb
mull
cmp
push
fs
push
sub
stos
stc
popf
jbe
mov
clc
push
maxps
ror
aam
adc
dec
div
lahf
movsb
jne
in
jmp
inc
mov
pop
and
and
or
fs
sti
xor
mov
sub
pop
jae
push
push
jae
adc
mov
int
push
xor
cs
mov
es
jle
adc
add
inc
repnz
sub
shlb
mov
xor
jb
push
push
fstl
aas
mov
xchg
js
jae
jg
lods
jb
xor
out
mov
push
call
push
sub
jae
xlat
sbb
stos
je
or
cwtl
cwtl
out
push
jns
popa
push
sbb
shlb
push
adc
sbb
ljmp
cld
movsb
add
hlt
ret
xor
loop
mov
pushf
push
add
sbb
xchg
les
cmp
fdivrp
sbb
mov
stos
fdivrp
fistpl
cmp
mov
add
daa
jl
in
sub
insl
mov
jb
mov
inc
je
call
lcall
js
pop
inc
inc
scas
xchg
pop
xchg
xchg
add
mov
jo
push
cltd
or
dec
sbb
xor
xor
adc
jle
push
cmp
imul
mov
push
dec
push
adc
ja
popf
icebp
push
mov
mov
add
rcr
lods
outsl
ss
push
xor
dec
add
clc
nop
jae
mov
jno
cwtl
xorb
sbb
push
sub
std
sub
xchg
loop
mov
jae
je
mov
jae
lahf
xor
sub
cmp
mov
pop
jns
adc
mov
imul
push
std
sbb
xor
mov
push
adc
sub
fdiv
adc
pusha
jae
mov
dec
sbb
and
cwtl
pop
jo
stos
jns
mov
rorb
mov
icebp
jb
xor
outsb
adc
jae
adc
adc
and
cwtl
std
sbb
jae
pop
repnz
and
aam
sub
sarb
push
mov
ja
dec
mov
sbb
into
dec
sub
pop
cmp
jmp
je
aaa
int3
scas
sub
in
pop
sbb
outsb
cltd
and
sub
dec
mov
js
jae
and
js
jae
sub
js
jae
sub
js
jae
sub
js
jae
sub
js
jae
sub
push
jno
or
xchg
js
jae
and
js
jae
and
js
jae
and
rcll
xor
xor
and
push
and
sub
pop
pushf
sub
setns
xor
adc
das
cmp
lock
fdivs
mov
enter
cltd
jne
mov
fdivrs
loopne
jae
mov
es
adc
mov
xchg
hlt
mov
adc
adc
xchg
daa
stc
or
xor
xchg
pop
xchg
ss
into
fwait
mov
cmp
sub
mov
and
inc
xor
push
add
mov
lock
aaa
and
push
xor
sahf
jbe
test
insl
mov
push
push
mov
mov
jno
xchg
mov
mov
nop
add
and
push
addr16
dec
cmp
pop
dec
aaa
xchg
adc
enter
subb
mov
out
mov
mov
pop
adc
pop
adc
pop
adc
jbe
fstps
lds
imul
je
xor
les
je
pop
inc
leave
mov
nop
push
mov
sub
iret
stc
inc
xchg
cmpsb
mov
mov
mov
iret
pop
lds
dec
mov
dec
lret
mov
mov
lahf
outsb
xor
add
popa
or
stos
ret
sub
push
xchg
jl
and
dec
arpl
cmp
imulb
xchg
jb
loopne
decb
xchg
push
jae
pusha
add
aaa
and
sub
xchg
ljmp
dec
mov
adc
cmp
mov
sub
js
sub
or
pop
adc
sbb
adc
mov
mov
dec
xchg
mov
lds
push
and
movsl
test
mov
and
mov
mov
push
or
mov
jmp
sub
sbb
adc
jge
jns
xchg
test
xchg
cmpsb
mov
and
jno
sub
and
repz
push
lock
xor
ja
dec
xchg
fbstp
hlt
jg
and
jg
sahf
add
fldenv
out
mov
jle
into
cld
mov
testl
je
inc
xchg
adc
dec
xor
insb
sbb
jae
lcall
loop
xchg
in
movsb
xor
jge
push
fcomps
mov
repnz
inc
or
sbb
ljmp
jnp
push
jnp
push
inc
inc
jno
mov
mov
jmp
mov
jp
mov
fidivrs
ja
imul
jg
mov
mov
rcll
xorl
sub
insl
pop
sub
out
jnp
ret
xchg
sbb
sahf
adc
xchg
cmp
push
das
push
pop
xor
lcall
ja
cltd
jno
mov
mov
mov
xchg
lea
jo
mov
aas
xor
repnz
pop
enter
mov
mov
jp
push
jns
pop
and
lods
fcoml
jmp
cltd
dec
call
loopne
dec
pop
mov
and
fsubr
mov
sahf
xor
sbb
push
sub
mov
dec
dec
xlat
mov
sub
dec
outsl
je
add
movl
repz
repz
mov
and
ds
js
cwtl
imul
push
aas
pop
stc
hlt
popa
stos
mov
adc
and
arpl
jl
cmp
inc
jae
dec
push
ret
jg
in
movsl
xchg
xchg
push
es
iret
aaa
sub
mov
mov
jae
add
jmp
xchg
das
jo
ret
sbb
test
jb
adcb
pop
fwait
call
stos
arpl
in
sti
jmp
cld
mov
ret
lods
loop
call
popa
jae
sti
sarb
sbb
mov
cs
ret
rcll
mov
jbe
out
in
xchg
jecxz
stc
sub
pop
jecxz
imul
ret
loopne
into
jb
dec
xchg
stc
sub
dec
mulps
xor
loope
inc
cmp
inc
out
clc
or
ret
mov
cmpsb
outsl
pop
xchg
add
mov
out
clc
mov
pop
shl
pop
inc
push
clc
add
mov
pushf
pop
or
cs
aad
mov
mov
pushl
loope
stos
out
xchg
fsubrs
jbe
cwtl
hlt
or
push
div
mov
and
cs
fs
pop
sbb
iret
push
out
adc
xchg
pop
cmp
cmp
sub
mov
jae
mov
xor
mov
cmp
push
dec
cmp
adc
mov
stos
jae
cmp
cltd
mov
test
movsb
inc
sar
push
sub
stos
xlat
js
lret
pop
xchg
xchg
scas
mov
shlb
pop
repz
pop
push
add
inc
mov
sahf
adc
jns
jns
mul
rolb
lock
pop
push
mov
mov
fidivrl
insb
test
and
ss
sub
add
adc
cwtl
cmp
insl
mov
loope
jne
cmpl
push
or
test
pusha
adc
ljmp
nop
sub
test
insl
inc
pusha
stos
jp
shrl
pop
andl
sbb
out
sub
and
arpl
cs
pop
int
fucomi
in
jbe
in
pop
and
ljmp
es
int
mov
xor
dec
or
xor
and
ja
lret
adc
sub
mov
ds
cwtl
test
out
popa
add
fmulp
xorb
aaa
pop
ja
jns
inc
stc
test
negb
add
jns
fsubrs
sub
jae
pop
pop
shrl
xchg
enter
js
mov
popa
cwtl
ljmp
cmpsl
push
or
or
lret
push
and
cmp
sub
mov
adc
nop
cmc
rcll
mov
iret
jecxz
adc
fs
adc
mov
mov
icebp
mov
push
pop
sub
sbb
mov
aas
pop
mov
imul
clc
cltd
data16
imul
movsl
aad
mov
jmp
adc
xchg
cwtl
add
xor
popl
roll
add
jns
xor
repnz
test
jmp
mov
cmp
fwait
and
cmc
pusha
jl
cwtl
jecxz
mov
jno
fisubl
adc
int
int
cmp
push
mov
sti
inc
loopne
andl
mov
aas
rorb
or
cli
faddl
test
shlb
mov
leave
cmp
xor
mov
addr16
call
ja
jne
lds
push
sbb
inc
pop
cltd
js
push
gs
push
arpl
add
outsl
inc
insl
mov
mov
repz
in
or
sahf
sbb
into
mov
mov
sbb
stos
in
or
sbb
pop
ret
lods
test
xor
or
cmp
out
jecxz
aaa
movb
lcall
fldcw
ss
inc
popf
cmp
sub
mov
mov
addb
fiadds
dec
inc
pop
mov
mov
int3
inc
pop
cmp
push
sbb
mov
popa
mov
jle
ja
lock
push
cwtl
pop
outsb
xchg
push
push
jecxz
scas
fnstsw
lods
test
fdivs
sahf
fsts
mov
lret
mov
stc
jae
mov
mov
xchg
hlt
or
dec
movb
add
bound
and
cs
aaa
add
xlat
js
shll
adc
or
pop
add
adc
lcall
sbb
jmp
rcrb
and
jmp
sbbl
insl
sub
mov
cmp
pop
sub
mov
dec
jnp,pt
xchg
sub
or
dec
adc
xchg
sbb
imul
push
lods
icebp
jmp
mov
test
mov
xchg
jle
xchg
cs
xor
stc
fstps
mov
mov
mov
inc
jmp
rolb
jg
xor
cmp
jbe
jecxz
and
push
cmc
pop
mov
shl
mov
test
js
icebp
or
mov
dec
and
daa
call
dec
or
or
add
xor
mov
mov
push
mov
out
lods
arpl
je
pop
pop
jp
pop
jns
push
dec
ja
mov
repnz
sbb
mov
sahf
jmp
jo
mov
das
enter
xor
cltd
dec
add
mov
or
pusha
jno
pop
insb
xorb
mov
cltd
sbb
sub
sub
mov
xchg
push
xor
sbb
jle
push
sub
adc
xor
jae
aas
dec
inc
fstl
inc
push
mov
fldt
jle
ss
and
fidivrl
lods
subb
imul
push
stc
arpl
stc
sti
or
or
jb
repz
pop
mov
std
xchg
pop
jo
ss
mov
stc
test
js
arpl
orb
xor
clc
addr16
xor
pop
mov
dec
cwtl
insl
and
out
out
mov
shll
inc
adc
xlat
sbb
imul
adc
mov
cmc
nop
or
and
sbb
mov
mov
and
push
fcom
out
jae
inc
inc
cmp
ds
jne
sahf
xor
lock
add
xlat
test
stc
adc
pop
or
jbe
pop
inc
lods
hlt
dec
cmc
movsb
mov
mov
das
or
lock
insb
xor
inc
jmp
xor
addl
cwtl
xor
jae
mov
jl
test
inc
lahf
mov
insb
pusha
pushf
pop
data16
push
pop
jp
mov
orb
xor
cmpsb
imul
mov
sarl
xor
cwtl
xor
pop
pop
gs
pop
lret
popa
fwait
pop
adc
jno
dec
xchg
insb
shrb
jae
mov
decl
sub
inc
inc
scas
xor
add
sub
inc
lcall
cmp
sbb
int
pop
or
mov
pop
adcl
and
std
mov
fisubrs
sub
mov
icebp
imul
mov
outsb
jle
imul
lret
jns
mov
shl
fbstp
inc
mov
insb
cwtl
sbb
jo
mov
push
outsl
add
lsl
mov
mov
es
inc
loope
push
xchg
and
jl
gs
dec
cmp
pop
add
jmp
outsl
xchg
xchg
and
push
cmpsl
popa
adc
cmp
fstpt
rol
jecxz
push
adc
bound
push
push
jns
aaa
jmp
ljmp
in
outsl
and
or
clc
call
xchg
cmp
jl
in
je
xchg
cwtl
mov
loopne
fisubrl
mov
add
addb
inc
mov
int
icebp
and
rclb
cmp
nop
loope
mov
push
mov
jnp
std
into
pop
pop
xchg
imul
mov
mov
ja
fdivl
add
sahf
mov
xlat
or
outsb
out
out
mov
mov
imul
jo
fadd
add
cmc
jbe
lods
stc
mov
push
pop
jae
ret
decb
rcll
shr
pop
pushf
in
push
je
out
push
inc
adc
stos
jmp
pusha
scas
sub
shrb
fildl
js
add
repnz
mov
sahf
sahf
jge
jl
push
push
ja
lds
cmp
mov
sbb
mov
and
jo
outsl
sub
jo
and
sti
fstl
mov
xrelease
ja
mov
mov
mov
and
xchg
test
lds
in
adc
add
out
insb
ds
push
insb
jno
jle
fadds
cmc
pop
cld
xchg
out
jns
lea
push
jne
add
ret
sbb
loope
lret
push
sub
mov
xor
js
dec
pop
xchg
mov
or
mov
jno
and
insl
cmp
mov
jecxz
call
and
xlat
jb
mov
adc
pop
push
xchg
xchg
shlb
jo
cwtl
mov
add
lahf
sbb
cmp
mov
and
jno
mov
shlb
add
xchg
sbb
fisubs
mov
pop
and
push
repnz
mov
and
xor
div
mov
mov
adc
mov
cmp
xchg
mov
repnz
sbb
popa
sub
fmuls
cmp
jo
mov
cmp
dec
and
mov
in
test
aaa
sub
and
into
stc
pop
jge
inc
xor
mov
sbb
sbb
fcomps
jns
add
mov
fisubrs
xor
xor
jb
xor
jb
mov
inc
cmp
and
out
ret
js
cwtl
repz
js
inc
jmp
dec
out
dec
es
scas
nop
sub
push
mov
adc
jl
push
jbe
addb
fistl
mov
cwtl
and
dec
and
mov
add
xchg
xlat
mov
fwait
cwtl
aad
es
mov
adc
xor
cltd
scas
insl
pushf
cmp
mov
or
mov
xchg
mov
cltd
jae
movzbl
or
and
cmp
mov
shll
or
mov
aad
jmp
xor
rcrl
cmp
lcall
push
cmp
and
push
inc
idivb
scas
pop
mov
call
or
or
enter
insb
fs
lret
xchg
push
xchg
sbb
int3
idivl
xor
into
pop
push
xlat
push
insb
cs
adc
mov
pop
pushf
mov
es
mov
mov
mov
xlat
lods
push
mov
lcall
xchg
mov
mov
pop
cs
int
cmp
insb
adc
aaa
insb
push
ja
pop
data16
push
xchg
movsl
dec
lods
mov
imul
cmp
xor
cmp
mov
and
push
lcall
imul
sub
dec
inc
clc
scas
or
mov
mov
xchg
sub
xlat
push
xchg
pop
mov
xor
fisubs
imul
cmp
mov
pop
cmp
mov
inc
cltd
shlb
sub
subb
xchg
aas
rep
mov
sub
cmpsb
mov
sbb
xor
mov
jne
sub
pop
or
out
mov
test
jecxz
gs
or
mov
shrb
mov
mov
push
jp
dec
mov
hlt
xor
sar
test
aaa
sub
pusha
test
jp
daa
xor
cmp
mov
cli
loope
inc
push
scas
decb
adc
data16
fisubrl
lock
xor
bound
pop
shlb
outsl
mov
push
jle
hlt
outsl
mov
lret
daa
mov
push
or
popa
mov
adcb
or
ja
movsb
and
repnz
adc
adc
imul
lret
out
push
mov
push
enter
push
mov
push
out
mov
sbb
stos
das
out
scas
push
leave
xchg
xchg
sub
adc
je
aaa
and
xor
xchg
sub
push
movb
sahf
sbb
out
leave
cmp
mov
out
and
push
pushf
fnstcw
xor
sbb
push
mov
cs
xlat
jbe
popa
aad
mov
sbb
div
mov
cmp
test
ljmp
clc
lods
or
stos
cmp
loope
pop
jp
cmp
or
iret
sbb
cmp
pop
pop
ss
xor
sti
mov
push
dec
jb
mov
lock
dec
cmp
mov
filds
es
push
cwtl
sbb
imul
jge
jge
cmp
mov
call
adc
add
jl
cmp
cmpsl
mov
push
into
push
inc
fsubrp
cmp
inc
cltd
xor
mov
xchg
mov
mov
insb
push
lret
mov
push
push
daa
cmp
sub
mov
sub
idivb
shll
lods
mov
icebp
inc
adc
jecxz
mov
pop
mov
test
lea
pop
lret
lret
add
call
xchg
mov
pop
mov
mov
mov
add
loopne
mov
xor
adc
ret
jbe
je
sub
push
inc
add
out
insb
mov
mov
pop
xchg
sub
push
dec
mov
daa
mov
push
jg
add
jle
pusha
mov
clc
pop
inc
jns
dec
and
ljmp
cmpsb
fdivp
sbb
push
rcrb
arpl
cmpsl
nop
and
cmp
push
jae
add
js
cwtl
ljmp
push
les
and
iret
sahf
fcoml
mov
dec
dec
sub
pop
cmp
out
es
sahf
pop
inc
fcoms
test
mov
fnstenv
in
and
sbb
fs
aaa
stos
mov
jne
or
nop
pop
jecxz
jl
and
cmpsb
hlt
outsb
fdivs
lods
add
push
dec
mov
aad
cmp
imul
lods
out
inc
mov
les
pop
mov
and
shll
je
sbb
xor
adc
xchg
lods
push
xor
sub
mov
xchg
lret
cmp
mov
cs
js
push
lea
test
fsubrs
cmpsb
imulb
rcrb
mov
mov
add
jno
fucom
leave
leave
aam
divl
adc
sub
push
insb
mov
ja
push
insb
jbe
stc
jp
inc
daa
add
jae
imulb
lods
mov
and
or
insb
in
in
stos
addr16
pop
pop
push
sub
into
mov
sub
lock
loope
mov
cmp
clc
jae
fxch
push
push
test
mov
or
int
xchg
and
xor
addr16
pusha
call
movsl
xchg
adc
repz
test
push
flds
pop
jo
mov
in
ljmp
pop
push
pop
mov
cwtl
jae
fwait
jl
inc
inc
push
imul
cli
push
sub
daa
mov
mov
push
into
sti
jae
inc
movsb
loop
xchg
inc
push
les
mov
mov
jae
popf
outsb
cmc
fidivl
movl
addl
popf
test
adc
sub
dec
cmc
adc
pop
xor
push
loop
mov
jno
add
push
je
inc
push
lods
mov
jnp
in
cltd
mov
mov
aad
sbb
cmc
popa
stc
add
pop
jl
jae
loope
mov
divb
or
in
popf
jbe
ljmp
fisubrs
psllw
lret
sub
mov
mov
xchg
int
pop
inc
cmp
cltd
aad
jmp
roll
push
testl
jp
in
cmp
bound
fcoms
jmp
mov
stc
iret
mov
fists
mov
clc
iret
cmpsb
jns
cwtl
cmp
push
out
xchg
push
fnstenv
dec
and
lret
xchg
clc
cmpsb
ret
mov
mov
or
jmp
jnp
mov
pop
or
mov
xor
cmp
pop
lods
rcr
pop
es
popf
jbe
jbe
lock
ret
rcll
fld
jbe
cmpsl
aaa
lock
push
les
jecxz
lods
xchg
es
stc
mov
lds
xlat
xor
and
mov
jne
mov
xor
sub
out
and
or
jbe
pop
dec
pusha
idivl
loope
imul
sbb
jbe
push
sbb
sub
push
xor
xor
pop
xor
jge
pop
cmpsl
iret
push
popa
jmp
repz
jmp
mov
andb
push
movsb
push
ss
adc
shll
and
push
xchg
xor
fcoms
repnz
mov
dec
outsb
subl
mull
js
lods
loopne
push
inc
push
adc
mov
jp
mov
lods
mov
stos
xor
adc
stos
std
icebp
lea
repnz
sub
inc
in
cmc
ja
outsl
js
orb
mov
cli
dec
cmpsb
cwtl
add
ja
sub
sarb
mov
cmp
inc
or
test
loope
cmp
imul
xchg
jl
in
mov
inc
int
into
or
inc
mov
jp
gs
bound
mov
out
sub
hlt
out
jmp
push
and
loope
je
push
iret
mov
mov
movsl
scas
jo
js
fnstenv
lcall
pop
mov
ret
mov
fldcw
inc
cmpsl
jl
aaa
fmulp
js
popa
sub
or
loopne
cmp
test
mov
mov
adc
mov
xchg
jp
arpl
fstps
cltd
dec
jo
mov
push
cvtps2pi
imul
push
sub
jnp
lret
icebp
enter
jp
adcl
cltd
jbe
jle
nop
jmp
jbe
cwtl
and
pop
or
sahf
daa
sbb
popf
inc
cmpsl
jl
out
xchg
push
push
xchg
popa
fstps
mov
icebp
xor
or
push
push
adc
mov
and
or
jno
cmp
jge
es
cmp
movsl
mov
js
fdivr
mulb
insl
mov
lret
inc
into
jmp
cmp
loope
adc
roll
lods
lods
xchg
jmp
clc
ret
or
push
fs
xchg
sti
mov
xlat
cmp
mov
js
pop
xor
xchg
fdivs
mov
out
cmp
out
push
jb
jae
pop
mov
pop
jnp
fs
imul
dec
jge
mov
das
imul
ds
jl
mov
sahf
jae
test
or
das
stc
dec
adc
add
lret
sub
bound
mov
pop
cwtl
jmp
xchg
xor
xorl
cltd
lcall
insb
jle
sub
jbe
sahf
ja
lret
stos
push
in
divb
push
mov
test
insb
sub
push
add
test
pop
loopne
jns
call
push
insb
test
imul
jae
dec
std
leave
arpl
les
sub
lret
out
pop
pushf
ret
test
xor
cld
mov
jo
negl
sbb
gs
jg
cmc
mov
jns
inc
test
push
mov
cltd
ds
fcom
lods
or
fldt
sub
insb
jle
popf
outsb
or
cs
xor
push
js
cmp
mov
or
xchg
pop
fwait
scas
fsubrs
and
jg
sarl
dec
pop
les
xchg
scas
stc
pusha
xor
lea
notb
jnp
mov
fcoml
in
jbe
xchg
roll
mov
or
sbb
leave
scas
mov
test
mov
mov
sbb
lea
pop
mov
cmp
loope
aam
sti
adc
popf
ret
cmp
mov
dec
scas
shrb
int3
dec
dec
xchg
aas
jl
jbe
aam
nop/reserved
dec
xor
cmp
hlt
add
jb
shrb
jbe
pop
std
push
pusha
push
imulb
pop
adc
push
inc
xchg
add
inc
sbb
xor
pop
adc
out
fsubrs
pop
sub
sub
scas
scas
pop
xor
and
jns
aaa
push
loope
iret
mov
xchg
pop
loopne
jne
ret
or
jne
jp
add
lahf
cmp
insb
push
or
loope
add
faddl
and
xchg
adcb
mov
aaa
add
xchg
fmull
inc
icebp
cwtl
jae
mov
and
xor
adc
mov
jae
xorb
xchg
mov
add
pop
addr16
adc
mov
outsb
xchg
insb
xchg
adc
add
mov
jnp
leave
insl
mov
movsl
lods
das
outsb
clc
js
leave
es
dec
mov
push
aaa
divb
push
lds
mov
sbb
mov
fcmovne
xchg
test
popa
aad
adc
jp
ss
jns
outsb
add
ja
jb
cld
ljmp
sub
pop
xor
adc
sub
mov
int
jmp
push
rcl
bnd
xchg
pop
xor
addr16
lock
ds
cltd
call
stos
in
add
ss
scas
mov
mov
fldenv
xlat
xchg
sub
and
outsb
jmp
mov
mov
aam
jbe
mov
rcrb
cmp
jno
and
jbe
sbb
mov
sub
jns
inc
adc
mov
mov
adc
shrl
mov
jl
idivb
cmpsl
xchg
sahf
and
mov
xchg
xor
or
mov
inc
mov
jae
push
inc
stc
hlt
mov
jg
mov
mov
push
ljmp
and
mov
dec
das
pop
lahf
cmc
clc
mov
add
out
push
out
lret
es
nop
movsl
sub
push
fisubrs
and
aaa
jbe
test
or
cmpsb
imul
adc
mov
pop
add
rcll
jno
outsb
repz
adc
int
mov
cltd
or
push
jl
push
push
ds
pop
add
mov
xor
mov
jl
shlb
mov
inc
cmpsl
ljmp
xchg
out
ret
inc
inc
xchg
fsubp
or
adc
sub
fstpt
fimuls
insb
cmc
adc
mov
cwtl
adc
cmpsl
insb
scas
mov
mov
addr16
scas
repnz
in
movsl
sub
imul
inc
shll
jns
push
mov
inc
cwtl
pop
dec
inc
repnz
je
and
adc
aaa
pop
push
cmovae
mov
push
ret
adc
js
pop
inc
mov
cwtl
je
loopne
stos
mov
xabort
push
mov
push
jp
js
shll
das
xorb
xchg
mov
mov
in
xor
pop
jge
mov
nop
lock
ret
mov
test
push
sbb
push
loope
and
jae
mov
lock
fdivs
pop
jno
mov
mov
stc
sbb
ss
aad
xchg
jns
mov
cs
lods
mov
test
stc
sbb
movsb
mov
jle
imul
xor
insl
lds
push
jp
cwtl
push
enter
out
dec
test
mov
pop
into
adc
repz
fistpll
mov
mov
pop
aad
pop
sahf
mov
sub
fidivrs
sbb
jle
jp
repnz
enter
std
cmp
or
imul
fcmovnbe
pop
and
and
sub
jno
cltd
mov
sahf
inc
stos
outsb
mov
mov
add
or
insb
jae
sti
push
mov
jp
int3
inc
sbb
pop
testl
push
test
mov
xchg
sti
cmp
cs
inc
xchg
mov
stos
xor
data16
lret
and
sahf
mov
popa
aad
insb
jns
mov
push
mov
insb
or
mov
negl
jl
sub
jae
dec
leave
dec
inc
divb
xchg
push
push
jb
jae
pop
xchg
adc
lea
inc
stc
adc
adc
push
stc
push
mov
lods
cmp
pop
push
ret
mov
fidivs
negl
or
loopne
lahf
cld
or
cmp
push
add
push
cwtl
inc
jo
jne
sub
and
push
lret
fwait
lahf
psubsb
or
xchg
and
cwtl
aaa
add
hlt
es
es
cs
inc
es
jns
or
mov
jle
repnz
mov
dec
sahf
or
or
jns
adc
push
add
jnp
add
cmpsl
push
mov
daa
cmpsl
outsb
loop
xor
sbb
outsb
add
xchg
mov
cs
aam
and
pop
jecxz
fadd
mov
div
cmc
push
push
mov
xchg
mov
mov
pop
and
jle
scas
lret
fcomps
ljmp
pop
mov
xor
sub
out
or
jb
in
leave
negl
rcrl
lret
movsb
xor
sub
repz
jnp
jbe
sub
loop
into
mov
lahf
pusha
insb
xchg
xchg
pushf
or
mov
cmp
mov
dec
jge
pusha
int
lock
jp
insl
outsl
or
and
or
mov
cmp
cli
mov
push
adc
jae
lea
in
lea
fistps
fisubs
loop
xchg
pop
aaa
mov
imul
mov
call
outsb
call
stc
cmc
adc
popa
inc
push
add
mov
cli
stos
pop
xor
popf
cltd
or
out
mov
inc
data16
test
or
push
sarl
rclb
mov
movaps
lds
mov
test
test
lret
fs
scas
mov
xor
and
js
sub
js
xchg
dec
aaa
jmp
sbb
mov
adc
or
mov
xlat
push
add
test
aas
pushl
jo
pop
push
repnz
cltd
xchg
clc
imul
adc
movsl
lock
sub
js
stos
divb
loopne
jecxz
or
sti
dec
and
pop
mov
push
addb
cmp
jns
cli
adc
ret
ds
mov
push
scas
sahf
popa
mov
sbb
cltd
mov
xor
cmp
mov
adc
fnstsw
fdivs
lret
in
outsb
mov
gs
xbegin
addr16
imul
es
jae
frstor
dec
orb
sarb
pop
icebp
notb
and
sbb
shrb
push
inc
pop
stos
fdivrp
pop
pop
ljmp
popl
icebp
inc
fbstp
xchg
inc
adc
cmc
in
aaa
xchg
and
in
mov
lods
pop
incl
sbb
loopne
mov
push
insb
mov
fcoms
in
pop
dec
fs
jecxz
mov
push
cwtl
movsl
jp
mov
movsb
mov
addl
fildll
xor
scas
or
and
divb
dec
pop
add
pop
dec
stos
cmc
xchg
xor
lahf
inc
test
in
je
jne
jne
fdivl
sbb
cltd
fistpl
mov
xchg
sub
adc
inc
popl
sub
insb
ss
mov
sbb
nop
lret
pop
push
ss
lods
in
pop
lods
push
shr
push
outsl
sbb
shlb
xchg
xchg
push
jecxz
sub
mov
js
lods
out
sbb
icebp
fs
or
add
ret
inc
jb
in
dec
inc
mov
dec
mov
and
push
or
sub
jmp
test
jo
call
repz
fadd
cmp
shlb
loopne
mov
arpl
sbb
imul
clc
sub
mov
movsb
nop
push
dec
stos
jae
fisttps
outsl
cmp
add
scas
mov
adc
test
out
insb
xchg
outsb
dec
dec
mov
sub
xor
scas
daa
mov
adc
xor
mov
sahf
and
test
fidivl
mov
cmp
cmp
and
scas
mov
mov
out
notb
xorb
test
and
lcall
insl
jbe
inc
cli
adc
adcl
mov
pop
mov
xorb
cmp
mul
jp
adc
jg
inc
jbe
clc
test
je
test
in
add
divb
mov
inc
in
jno
mov
push
inc
subb
inc
pusha
ss
and
sbb
mov
mov
jbe
push
jns
adc
pop
pusha
orl
gs
pop
fdivs
inc
lea
xor
jno
jmp
das
lods
mov
lret
jge
adc
js
or
mov
jb
jo
bound
add
jb
subb
and
jle
or
xchg
test
outsl
push
mov
push
ja
int3
jle
hlt
adc
outsb
insl
xchg
or
pushf
jns
mov
mov
pop
mov
sbb
lods
dec
push
jb
es
mov
loope
ss
mov
pop
mov
xchg
and
in
dec
mov
das
push
icebp
xchg
fists
cmpsb
insl
adc
jl
inc
subb
mov
push
enter
mov
lahf
cld
fcomi
mov
or
sub
dec
movsl
xor
mov
aad
ljmp
mov
add
test
orb
add
out
and
mov
shll
cmp
in
int3
aam
lock
pop
adc
push
daa
cmp
push
rcrl
mov
int3
jns
mov
mov
jo
test
mov
push
adcb
xchg
or
jae
imul
mov
clc
clc
jae
push
mov
mov
sahf
jae
dec
mov
xor
ljmp
mov
sti
mov
cmpsb
jbe
andb
movsb
mov
sti
repnz
jle
orb
xlat
mov
sub
ret
popa
sbb
and
push
add
or
test
test
push
shl
popa
jl
xor
xchg
mov
mov
xor
mov
cli
sub
iret
inc
movsb
mov
popa
jae
cwtl
jno
mov
mov
and
sbb
test
call
sub
or
pop
mov
test
and
test
cmp
jmp
js
jecxz
jmp
lret
roll
jle
jo
xchg
and
pusha
movsb
cmc
lods
enter
lcall
loope
adc
movsb
mov
iret
sub
imul
daa
insb
call
mov
dec
pusha
sub
lock
xchg
lahf
cmpsl
imul
sbb
and
sub
ljmp
vaddps
ljmp
xchg
jne
cmp
lret
aam
es
sti
sub
mov
icebp
pop
and
cwtl
add
sbb
jbe
cwtl
aam
adc
add
or
jne
dec
mov
pop
mov
ds
cmp
xchg
xor
adc
sbb
jo
mov
lds
pusha
xchg
fdivr
cltd
loope
push
cmp
xlat
loop
sub
lret
pop
jo
cmp
push
and
lcall
xlat
adc
sub
jb
mov
scas
fsubp
mov
bound
mov
or
jns
pop
shlb
xor
mov
sbb
fldcw
outsb
loope
ljmp
mov
mov
jae
movsl
xor
xchg
mov
mov
and
xor
xor
push
js
shll
cmpsb
cwtl
push
adc
stos
xchg
cmpsl
fadds
pop
mov
mov
insb
mov
and
mov
sub
fadds
xchg
lret
call
jp
jbe
dec
push
das
and
lahf
shr
or
mov
into
add
and
data16
push
push
jle
push
jbe
stos
das
dec
adcl
pop
int
mov
aad
inc
call
dec
movsl
xor
ss
arpl
fidivrs
push
ffreep
fs
push
mov
out
enter
pop
cmp
xor
adc
sbb
outsl
cld
xchg
mov
scas
jmp
data16
sbb
pop
and
mov
mov
insl
fmul
jns
call
out
xchg
inc
ja
cmp
mov
scas
adc
and
mov
mov
inc
push
mov
arpl
and
int
jo
add
add
xor
xchg
lret
add
femms
jae
push
enter
inc
xchg
sbb
sub
push
dec
push
rclb
loopne
repz
jns
and
data16
adc
aaa
fldt
int3
lock
subl
mov
mov
mov
jle
cmp
adc
clc
sbb
jmp
adc
sarl
addl
rorl
outsb
lods
push
cmp
push
xor
repz
mov
jnp
jns
mov
repz
sbb
xchg
ret
in
in
mov
pushf
fwait
sbb
lea
mov
pop
cmp
mov
inc
ja
push
addr16
subl
jmp
pusha
addr16
insb
jbe
int
loop
shr
push
test
icebp
adc
xlat
mov
add
push
cmp
or
sbb
arpl
je
cmp
add
xor
aaa
fistl
pop
cmp
in
inc
xchg
fwait
add
imul
test
ds
dec
cmpb
in
movsb
adc
clc
mov
mov
jl
into
test
or
lds
and
jp
rclb
rolb
adc
push
out
mov
scas
sti
mov
mov
mov
andw
and
mov
dec
inc
adc
mov
sub
cwtl
and
sub
setle
inc
arpl
repz
sbb
sub
mov
add
and
lcall
adc
mov
pop
adc
lock
adc
sahf
and
js
mov
jae
jbe
mov
loope
add
inc
mov
movsb
jns
mov
lcall
sahf
fwait
imul
push
push
sub
ja
mov
mov
mov
jae
lods
bound
into
xchg
in
into
jns
pop
jns
dec
adc
mov
xchg
push
sbb
xchg
xchg
mov
sbb
imulb
loopne
repz
faddp
ljmp
dec
xor
fildl
movsl
mov
jg
pop
jg
sub
out
stc
adc
aas
adc
add
jecxz
mov
jae
mov
or
xchg
cmp
fcoms
fsubp
push
and
orb
shrb
vpcomw
mov
sub
lock
cwtl
push
int3
cmp
dec
clc
pop
and
addr16
push
xor
mov
int
test
jl
js
stos
jae
xchg
ds
push
pop
pop
stos
popa
bound
daa
inc
dec
cmp
mov
cmpsl
movsl
push
add
mov
adc
pop
dec
arpl
emms
jo
ffreep
and
lret
mov
test
push
push
mov
jle
scas
or
or
lock
lods
adc
aad
sbb
jae
loopne
pop
pop
imul
xchg
cs
dec
sbb
imul
jecxz
adc
imul
lahf
and
adc
xlat
lret
sub
lea
jno
pushf
test
mov
inc
je
jle
cmp
sbb
repnz
scas
insb
divl
and
mov
scas
stc
mov
cmovle
sti
lret
push
imul
incw
add
pop
and
outsb
and
jnp
mov
sub
movsl
fistps
mov
push
ja
ds
inc
mov
push
mov
xchg
mov
repz
pop
sarl
sub
add
fdivr
popa
lret
jo
push
xchg
repz
adc
imul
push
push
adc
or
xlat
sub
gs
xor
jb
cmp
insb
mov
sub
popa
add
push
and
mov
or
and
jbe
mov
xor
int
adc
jb
add
adc
jmp
mov
fidivs
inc
std
test
cmp
mov
cmpsl
pop
dec
sbb
pop
ficompl
loop
lret
or
mov
insb
js
inc
in
fdivs
xlat
fldl
mov
sti
popa
cmp
ds
les
subb
int3
sub
clc
push
adc
enter
and
inc
xchg
dec
lret
ja
push
fildl
dec
out
jo
inc
pop
daa
inc
clc
xchg
push
push
mov
in
jo
movsb
pop
inc
test
jo
adcb
xchg
loop
xlat
lcall
pop
jns
mov
mov
outsl
ljmp
push
push
ss
and
fs
mov
pop
scas
fnstcw
dec
push
pop
cmpsb
sub
lods
ror
mov
push
adc
inc
sbb
and
mov
add
cli
insl
pop
sub
or
dec
fimuls
cmp
sub
jae
clc
sbb
pop
jbe
adcl
mov
movsb
push
dec
sub
mov
mov
sarb
ds
jae
sbbb
cmp
xchg
lds
push
add
and
cmp
push
cmp
xchg
movsb
cltd
xchg
xchg
mov
jne
and
inc
push
xchg
and
iret
stos
adc
dec
xor
push
xor
pop
xor
stos
dec
xchg
call
pop
js
fs
sbb
andl
or
dec
jle
dec
pushf
cmpsb
movsl
xchg
adc
aaa
ss
pop
int
shrb
sbb
mulb
cmpsb
loopne
or
jb
xor
sub
jmp
ss
stc
jae
subb
movsb
clc
loop
pop
jno
jne,pt
mov
das
bound
loopne
les
add
pushf
mov
dec
jle
mov
xor
pop
sbb
xchg
add
mov
xor
xchg
testb
je
jae
in
pop
fdivrl
scas
ja
cmp
ss
dec
mov
addl
das
sar
andl
lods
scas
into
pop
lods
xlat
jmp
adc
xor
lods
loope
mov
pop
js
mov
xchg
mov
add
dec
pusha
insb
lods
mov
cmc
inc
hlt
adc
mov
jl
push
sti
dec
adc
mov
mov
outsb
cmpsl
cmp
mulb
fidivrs
fistpll
loopne
ss
or
and
dec
fmuls
adc
daa
mov
movsl
fnop
lods
mov
js
inc
push
lods
test
mov
cmp
scas
mov
pop
mov
ficompl
push
cs
jle
mov
adc
and
fistpl
xor
sbb
jae
cwtl
test
adc
add
jae
popa
lea
pop
sbb
leave
or
pop
mov
sbb
in
movsb
cltd
pop
mov
jb
add
pop
adc
pop
adc
adc
insb
cwtl
clc
mov
sub
mov
scas
sbb
push
adc
cmp
cwtl
adc
data16
and
call
jno
jns
test
and
test
sbb
push
xor
mov
pop
mov
push
insb
ja
push
mov
mov
cmp
cmp
mov
mov
outsb
pop
addr16
xchg
ds
in
bound
xor
lcall
jb
cmp
das
insb
and
adcb
js
push
test
jae
cmpsb
jp
scas
lods
cmp
xor
scas
sub
scas
jae
and
or
cmp
movl
sub
nop
into
xor
daa
push
cmp
dec
inc
jne
fs
cmpb
scas
push
loop
adc
jae
hlt
stc
fnstcw
pop
adc
sub
cmp
mul
jns
xchg
mov
xchg
lea
loop
jle
pushf
out
fwait
sbbb
sub
cmp
add
into
mov
adc
aam
inc
or
mov
insb
jb
ss
cli
mov
jecxz
hlt
dec
xlat
mov
add
jg
cmp
xchg
loop
xor
fcomps
lcall
dec
sbb
adc
jo
jp
push
test
mov
sbb
jmp
and
mov
sub
inc
daa
add
ret
in
fsubrs
push
cli
mov
clc
call
es
xchg
push
push
add
sub
mov
xor
dec
push
mov
insb
cmc
test
in
sti
cmc
mov
aad
mov
faddl
add
jnp
gs
out
xor
xchg
push
mov
pop
push
inc
adc
or
mov
inc
mov
aas
ds
cwtl
lds
pop
sub
push
jecxz
leave
das
lret
fsubr
test
lea
pop
mov
pop
sahf
and
fcoms
mov
int
push
mov
lcall
xchg
ja
pop
cltd
cs
loope
sub
xor
out
dec
ret
mov
jae
fstpt
mov
insb
stos
pop
fildll
cmp
dec
dec
popa
mov
push
outsb
sbb
loope
and
and
iret
es
pop
int
loope
xlat
in
fldlg2
popf
cwtl
cmpb
cmp
ss
sahf
pop
movsb
inc
test
inc
test
stos
fstps
pop
insb
idiv
mov
divl
iret
jge
add
aad
in
mov
scas
mov
push
in
mov
sarl
dec
rclb
mov
icebp
out
sub
addr16
cmp
movsb
fidivs
rcr
jmp
jp
xor
lcall
test
mov
cmp
inc
push
pushf
and
lret
adc
push
lock
out
add
mov
sarl
mov
ret
cs
lret
fldenv
sub
xorl
mov
dec
add
pop
imul
inc
mov
enter
daa
push
xchg
sti
mov
ss
fistps
cs
nop
sub
add
jbe
push
jbe
insb
inc
sbb
xchg
adc
sub
sub
pop
dec
jbe
adc
jb
push
insb
jae
xchg
and
inc
xchg
iret
mov
cmp
dec
xchg
inc
std
cli
mov
je
xor
sub
dec
xlat
or
jne
cltd
int
gs
or
loopne
imul
add
neg
std
lcall
incl
test
arpl
adc
push
ljmp
sub
sub
test
cmp
sub
mov
shrb
inc
and
push
test
inc
jno
scas
push
js
or
cs
pop
jg
ficomps
add
cmp
pop
scas
mov
fildll
lods
loope
lods
lock
es
nop
mov
stc
js
fmuls
repnz
in
ss
xor
push
test
mov
jns
push
cmp
stc
and
dec
fwait
daa
mov
mov
bnd
aas
push
mov
ret
mov
and
js
iret
xchg
push
bound
sub
jo
in
fsubl
and
adc
or
adc
lods
jo
sub
sbb
mov
lods
push
test
dec
xor
cmp
and
adc
add
popa
inc
push
xor
cmp
and
fldenv
rcrl
js
gs
push
pop
cwtl
cmp
jmp
and
scas
aad
xor
mov
pop
sub
lods
dec
insl
mov
cmp
cmp
test
mov
test
or
cmp
jp
mov
mov
pop
mov
es
bnd
cmpsb
fstpt
jmp
or
xchg
adc
push
push
cwtl
mov
cltd
test
jmp
lock
inc
push
inc
add
add
sub
pop
data16
add
imul
stc
xchg
outsb
sub
cltd
cmp
adc
sar
stos
arpl
ret
pop
push
movsl
insb
imul
pop
lret
inc
iret
fld
shl
mov
lret
xchg
pop
daa
loop
adc
mov
stos
mov
xchg
push
out
fdivrl
cmp
adc
adc
lea
call
call
seta
into
mov
sbb
inc
cli
xor
mov
sbb
aam
mov
xor
test
stc
push
xchg
cs
test
adc
push
and
add
out
sbb
imul
fdivl
divb
mul
lods
push
add
or
jmp
xchg
xor
out
jno
mov
daa
jb
mov
jge
push
mov
mov
shl
out
imul
add
jle
adc
jg
mov
xchg
and
adc
pop
das
add
out
sub
je
jbe
sbb
jl
jbe
push
sbb
stc
roll
pushf
adc
js
cltd
insb
scas
mov
add
and
xchg
insb
adc
pop
ficoms
mov
outsl
cmp
into
cmp
cmp
mov
pop
dec
xchg
hlt
push
loope
sbb
mov
cmc
jnp
out
xchg
movsl
je
mov
popa
jb
js
dec
imul
daa
loope
addl
mov
mov
lods
sbb
or
movsb
test
mov
or
push
mov
loop
xor
clc
bound
test
xchg
stos
add
sbbb
xchg
test
aad
int3
lock
and
repnz
xor
jne
lcall
int
cmp
data16
pop
dec
stos
pop
fs
jbe
dec
pop
inc
mov
ljmp
loope
int3
popa
loope
inc
xchg
sub
sahf
xchg
xchg
into
sti
ja
mov
push
and
jb
push
in
push
jns
cltd
movsl
jge
adc
mov
jo
inc
mov
ja
aas
rclb
in
lods
cwtl
adc
xor
sbb
push
dec
adcl
loop
sbb
repnz
cmp
sub
rcrb
pop
sti
pop
or
sub
dec
add
jmp
aad
aaa
imul
movsl
out
xchg
loope
je
mov
jmp
inc
jmp
xchg
xlat
ret
xor
iret
or
repnz
movsb
cwtl
sahf
in
mov
add
lock
fadds
cmp
es
adc
push
pop
cmpsb
int3
bound
adc
push
dec
es
xor
cltd
and
pop
mov
xchg
jp
pop
mov
mov
dec
ljmp
xchg
cmp
push
pop
pusha
mov
mov
mov
jb
sarb
inc
inc
mov
test
sub
leave
repnz
mov
inc
xchg
icebp
stos
icebp
add
mov
and
shlb
adc
out
jg
mov
js
cmpsb
scas
xor
and
hlt
xor
xchg
sub
test
lret
stos
pushf
mov
test
lret
mov
mov
out
divl
int
jae
cmp
aaa
test
inc
in
sti
daa
mov
sysret
and
add
xchg
xchg
daa
ja
inc
lock
cwtl
jns
outsb
scas
inc
insl
nop
nop
mov
inc
pop
xchg
fsub
rcll
adc
add
push
sbbb
pop
das
imul
ja
inc
je
xor
inc
jge
mov
stc
and
push
dec
adc
jmp
leave
cmp
dec
in
or
lods
jecxz
mov
jnp
and
ss
adc
push
adc
jle
xor
sub
xchg
inc
jbe
pop
test
jb
sub
out
sbb
cld
xchg
es
fistps
test
mov
pusha
jl
mov
mov
vpsubusw
adc
or
jecxz
fcmovnu
fisubs
fwait
mov
adc
mulb
aam
les
jg
mov
lahf
inc
jbe
mov
xor
int3
insb
push
mov
pop
sbb
aaa
inc
adc
lret
push
lahf
ja
bound
fwait
xorb
jmp
test
fnstcw
push
cmp
outsb
bound
mov
cmp
out
jmp
mov
aam
mov
pop
addr16
dec
in
scas
js
lods
pop
stc
in
addr16
sbb
xlat
push
jb
test
aam
adc
imul
lea
aaa
dec
stc
pop
daa
xchg
cmpsl
sbb
icebp
and
pop
daa
popa
cmp
cli
es
fdivs
pop
jns
adc
cmp
out
add
pop
inc
int3
push
outsl
mov
mov
ljmp
dec
push
jno
stos
xchg
enter
aaa
pop
repz
jae
jbe
fbstp
fcompl
dec
repz
repnz
push
fdivs
clc
rorl
pop
pop
cmc
xchg
xchg
xor
cmpsb
cwtl
xor
fcomps
lahf
or
inc
sbb
pop
fstpt
pusha
je
xorl
dec
mov
loop
sbb
insl
test
lods
shll
pop
xor
and
stos
xchg
fistps
lret
mov
clc
stos
push
pusha
stc
jle
aam
jle
xchg
lcall
lods
mov
test
adc
sarb
adc
mov
push
icebp
cld
orb
repz
pop
pusha
rcrl
cld
mov
add
int3
data16
and
stos
ret
int
or
out
push
aaa
dec
xchg
test
jae
mov
mov
cmovo
cltd
aam
hlt
fs
push
xchg
inc
cmpsb
stos
jge
sub
insb
sbb
xchg
lret
cmp
jnp
mov
or
mov
jns
sub
jno
sub
pushf
hlt
lret
cmp
stc
ljmp
xor
pop
add
test
nop
scas
push
jns
push
xor
push
adc
xorb
fcoms
bound
sbb
dec
inc
sahf
pop
hlt
sti
pop
add
mov
and
data16
push
push
xchg
loope
in
mov
sub
ds
das
cld
push
fwait
xchg
data16
sub
xchg
in
insl
sub
cltd
lret
or
cmp
loope
xor
je
add
jecxz
sbb
push
bound
idiv
lret
mov
xchg
loop
sub
loopne
imul
pop
pop
pop
lock
xchg
jns
ds
adc
add
es
sbb
push
xchg
push
imul
imul
fsubs
es
jbe
mov
repnz
xor
data16
in
add
xchg
xchg
cmp
gs
pushf
daa
ficompl
mov
mov
mov
movsb
mov
or
adc
dec
mov
in
inc
mov
roll
sub
push
int
and
loope
icebp
mov
js
adc
xchg
cltd
repz
xlat
call
shlb
xchg
mov
jl
dec
xchg
sub
bound
mov
push
loop
popa
push
jmp
in
loop
mov
cmpsl
push
push
or
scas
xchg
sbb
sti
in
mov
aas
jmp
stc
in
mov
sub
add
lods
dec
pop
or
jbe
fiadds
test
pop
and
lea
scas
jns
push
shlb
mov
into
rorl
sahf
push
jp
xor
push
and
push
subl
insl
pop
loopne
cmp
repnz
and
push
daa
mul
rclb
pop
je
cmp
mov
mov
lock
push
mov
push
mov
xlat
and
push
enter
cld
sarl
dec
push
add
cmp
pop
add
gs
loopne
aam
out
fsubrs
iret
imul
mov
imul
outsb
ficoms
or
mov
mov
adc
adc
jae
pop
rol
mov
mov
movsb
mov
ljmp
iret
jnp
fcomps
inc
out
inc
sbb
jae
aam
mov
mov
sbb
fisttpl
dec
jae
mov
gs
add
test
dec
jns
add
push
loope
scas
div
insl
mov
or
pop
daa
xor
mov
xchg
movsb
push
divb
jb
inc
jecxz
loop
sbb
mov
cmc
cmp
fs
insb
sti
lods
mov
jo
sub
xor
fsub
mov
push
mov
imul
scas
mov
stos
inc
and
sbb
xchg
sub
xor
lock
shrb
fmulp
aad
mov
mov
adc
mov
adc
cmpl
jno
dec
mov
sahf
pop
bound
mov
insb
or
jecxz
add
jno
inc
imul
jae
inc
add
jns
cli
stos
lret
xor
repz
add
pop
popf
stos
mov
cmp
dec
sub
push
xor
mov
inc
lret
jbe
bswap
and
shll
fucomip
insb
jae
sbb
push
ror
push
sti
outsl
mov
fadds
sub
mov
xchg
test
subb
sub
push
xchg
sub
mov
mov
adc
xchg
inc
out
xchg
iret
inc
addr16
push
push
shll
out
js
adc
mov
dec
xor
xor
mov
jne
add
pusha
dec
lretw
jg
sbb
stc
cltd
mov
scas
mov
fsts
divb
adc
xor
adc
imul
clc
aaa
jbe
fbstp
test
mov
dec
inc
into
scas
or
jle
loopne
and
mov
test
xchg
fsubp
aaa
push
mov
pop
es
fldt
gs
inc
ret
call
mov
push
test
outsb
stc
or
fcomp
sbb
test
dec
mov
cmp
adc
negl
rolb
mov
push
xor
bound
enter
fdiv
imul
scas
xchg
mov
push
mov
rorl
and
push
cltd
mov
iret
mov
pop
xchg
cli
or
xchg
ja
sub
or
adc
stos
jns
mov
jge
jne
jmp
cld
mov
push
push
movsb
mov
sbb
and
imul
and
repz
dec
fsts
pop
mov
loope
add
xor
daa
add
jns
push
sbb
imul
mov
fstl
addr16
xchg
repnz
xor
or
jl
nop
mov
in
push
cmpb
dec
add
push
scas
xlat
sahf
add
andb
js
push
sbb
iret
or
fstps
insb
mov
xlat
inc
insb
xchg
out
addr16
cmp
fwait
insb
mov
add
ss
or
mov
jbe
sub
inc
and
xchg
mov
stos
mov
test
jl
push
aam
js
sbb
and
sub
ja
mov
lds
xor
cld
xlat
mov
loope
inc
inc
xor
lcall
jne
insb
xor
pop
js
lds
dec
movsb
ljmp
xchg
sahf
xchg
rcrl
pop
pop
lea
movsb
jecxz
mov
in
jae
mov
pop
lods
pop
push
lds
xchg
push
mov
addb
ret
clc
sbb
fnstenv
sub
xchg
inc
fs
aam
in
je
push
sub
dec
adc
sbb
shll
sub
mov
pop
jg
test
and
pop
jge
cmp
inc
jnp
and
scas
jae
shll
xchg
pop
adcl
addr16
xchg
or
cmp
mov
fidivs
pop
cmovae
movsl
mov
dec
sbb
mov
add
mov
jp
in
pushl
mov
add
xlat
ja
test
xlat
daa
sbb
jae
adc
out
push
insb
dec
mov
inc
scas
mov
sub
mov
popf
iret
movsl
mov
int
fistpll
js
lea
fists
adc
test
cmp
dec
popa
nop
lods
and
ret
test
adc
or
xlat
test
xchg
mov
or
jno
shrl
test
scas
add
push
xchg
dec
cmp
jmp
es
mov
es
mov
inc
imul
adc
mov
push
mov
dec
mov
test
cmp
arpl
pop
jp
adc
pop
xchg
mov
jo
outsb
cmpsb
scas
xchg
add
xchg
and
negb
xchg
ss
sub
test
xchg
ds
adc
out
xchg
push
xchg
outsb
icebp
mov
jg
add
cmp
pop
jo
or
push
push
jbe
add
outsl
pop
mov
sbb
imul
addb
pop
xchg
pop
jo
mov
mov
mov
sub
jmp
test
push
inc
scas
jns
cmc
push
xchg
lret
jo
mov
dec
xchg
movsb
movsl
mov
popl
cmpsb
stc
mov
mov
aaa
cmpsl
mov
xor
push
data16
clc
pop
dec
push
mov
jb
mov
pop
jae
das
sub
fisttps
adc
or
mov
mov
pusha
stc
fcompp
fwait
test
dec
sub
and
jmp
andb
mov
andl
mov
outsb
xchg
jl
imul
rcr
mov
xor
inc
mov
sbbb
and
xorl
fsubrs
and
push
xor
add
jbe
push
sahf
push
clc
jbe
push
popa
jb,pt
mov
push
cmp
fisttps
sbb
mov
cmp
icebp
jbe
pusha
ret
mov
rcrl
push
push
icebp
cltd
loopne
and
add
sub
clc
movsl
jl
gs
jae
rorl
xchg
xchg
xchg
adcl
mov
jbe
push
xchg
gs
iret
cld
in
imul
cmp
or
mov
xchg
mov
out
fidivrs
xchg
and
pop
je
aas
pop
clc
pop
add
sub
jmp
nop
sbb
in
outsl
lahf
scas
repz
inc
adc
mov
cwtl
rcrl
cltd
fsubs
or
sub
js
pop
lds
xchg
test
icebp
xor
pop
add
mov
icebp
jns
data16
jo
sub
pusha
bound
scas
popa
or
cmpsl
je
and
fadds
or
sub
adc
fld
test
sub
xchg
andl
mov
repnz
insb
insb
cmp
jo
push
in
insb
popf
lds
add
sub
and
loopne
sti
int3
stos
out
js
xor
leave
xchg
xor
inc
inc
mov
push
fidivrs
and
icebp
loope
iret
mov
xorb
jae
je
mov
jae
push
cmp
icebp
sub
dec
cli
dec
loop
fcompl
jle
mov
scas
xchg
and
iret
stc
hlt
push
daa
and
mov
jb
add
mov
inc
jns
cmc
js
scas
cmp
mov
xor
shll
cmc
ja
dec
sbb
dec
pop
icebp
idivb
xor
xchg
loop
mov
lret
mov
pusha
and
shll
sbb
adc
jecxz
hlt
lods
jmp
add
add
js
sti
sub
subl
push
mov
pusha
push
xchg
sub
fwait
sub
mov
scas
jg
xor
xor
js
out
mov
add
cli
dec
das
or
sbb
stc
lret
mov
and
push
pop
xchg
xchg
out
mov
mov
jno
filds
je
cmp
insl
jmp
mov
sub
pop
mov
cli
aam
mov
insb
cmp
pop
dec
ds
add
sbb
in
xor
jbe
imul
cmp
scas
xorb
lock
add
jg
pop
mov
nop
mov
xor
pusha
jo
lret
inc
sbb
push
pop
add
fsub
shrl
or
jg
jl
clc
out
iret
inc
adc
jbe
cmp
scas
aaa
inc
cmp
xor
negl
pop
mov
jne
and
imul
push
push
push
jle
and
inc
cmp
pusha
inc
dec
ss
pop
mov
cs
cmp
lret
insb
jo
push
push
cmp
aam
or
inc
and
loope
scas
mov
or
ret
cmp
cwtl
sbb
mov
mov
cmp
ss
xlat
fwait
pop
adc
out
or
mov
push
jmp
pop
or
jp
and
int
sahf
lds
sub
jo
insb
dec
pop
imul
jbe
push
in
xchg
mov
sub
pop
jmp
popa
ret
addr16
sub
sub
jnp
jle
xor
sub
imul
xchg
dec
cmp
xor
leave
inc
lret
push
aad
neg
dec
cmp
sti
push
cmp
repnz
inc
cmpsb
and
jae
scas
push
lods
cmp
cld
fmuls
mov
adc
inc
popl
mov
inc
sub
and
out
and
sbb
sbb
std
cmp
aad
ja
insb
adc
shlb
lods
xchg
mov
push
into
xor
insb
pop
pop
mov
movsb
fsts
jl
js
shll
sub
jp
das
push
xor
jb
mov
cs
pminub
fabs
adc
cmp
insl
stos
pop
mov
stos
mov
xchg
test
xchg
xchg
mov
xchg
pop
jns
dec
xor
push
fdivs
xor
int3
iret
xor
sbb
insb
add
pusha
mov
or
pop
cltd
ds
enter
add
js
and
inc
xor
mov
pop
sbb
or
cmpsb
mov
loope
jne
repnz
adc
jle
outsl
and
pop
pop
shll
pop
xchg
gs
xchg
jns
jle
jae
mov
or
push
mov
adc
popa
inc
pop
push
loopne
ficoms
loope
sbb
push
mov
sub
imul
js
cmpb
cmc
int3
push
jge
and
js
pop
ss
adc
push
sahf
insb
push
xor
sbb
divb
and
pop
cmc
mov
xlat
test
pop
mov
xchg
push
data16
scas
xchg
jbe
add
testb
je
adc
xchg
stos
mov
jl
outsl
imul
xor
sti
test
das
loop
jg
sbb
pop
mov
ret
outsl
adc
xchg
mov
sbb
sbb
sarl
test
push
pusha
pop
out
ljmp
cs
push
push
scas
out
pop
fdivrs
mov
inc
xlat
test
mov
or
lret
add
pop
bswap
mov
mov
mov
pop
js
icebp
test
pushf
jle
adc
or
call
jecxz
adc
mov
sub
fsubrs
enter
jns
add
out
js
jns
add
fistpl
inc
nop
add
out
push
insb
fwait
rorl
inc
stos
leave
insb
cmp
mov
xchg
inc
insb
cmpsb
mov
mov
lret
scas
and
xor
test
pop
fidivrl
test
je
cwtl
aam
test
cmpsb
divl
stos
into
aam
or
clc
inc
push
sbb
sti
fists
out
push
and
jb
mov
iret
ret
fwait
out
movsl
push
push
xchg
int3
iret
lahf
jle
push
xchg
dec
cmc
xchg
pop
xchg
mov
or
fnstcw
push
mov
mov
jp
inc
cmp
sub
or
sub
pop
pop
ret
lahf
sahf
mov
sbb
xor
mov
andb
mov
cmp
pop
leave
push
or
add
mov
data16
sub
xor
sub
jo
aaa
fptan
addr16
or
sbb
shrb
adc
dec
jae
pop
mov
ss
fdivrs
adc
stos
xchg
sbb
xor
sahf
sbb
sti
cwtl
sub
add
xchg
and
rcll
fidivrl
push
and
push
out
push
cmp
cwtl
jge
divb
pop
idivb
imul
mov
cli
mov
xor
push
jno
ja
and
fs
or
pop
testl
sbb
adc
add
lods
ret
mov
daa
dec
int
mov
xchg
adc
jb
in
xor
nop
call
enter
inc
fmuls
gs
xor
inc
in
iret
or
push
jb
jae
ljmp
mov
jecxz
lret
dec
adc
xchg
inc
mov
mov
jecxz
and
jo
sub
mov
mov
gs
push
and
loope
and
or
dec
jo
and
pop
nop
in
xor
mov
imull
xor
push
js
or
pop
loope
push
fistpl
inc
push
shlb
xor
adc
addr16
pop
xchg
in
pushf
mov
jg
mov
xchg
cli
push
fistl
sub
pop
in
jns
lahf
lods
out
repnz
adc
test
rorl
icebp
jbe
movsb
repz
push
testl
adc
xor
jae
jecxz
and
push
adc
jo
roll
push
xchg
div
pop
fs
stos
stc
fistpl
fcoms
push
pushf
inc
sbb
mov
or
test
js
ret
icebp
fnstenv
insl
hlt
xor
repz
mov
jae
jecxz
rcl
movsl
test
js
in
inc
lds
xchg
push
test
mov
bound
mov
out
lcall
jb
cld
inc
jg
pop
aaa
xchg
shlb
jbe
sbb
mov
push
pop
sbb
mov
fnstcw
data16
filds
test
mov
jns
lcall
add
push
sbbl
dec
outsb
outsb
jmp
test
test
xchg
int3
imul
arpl
iret
bnd
fnstcw
aad
shlb
call
dec
xchg
inc
mov
cmpsl
mov
test
xchg
shl
stc
pop
decb
mov
mov
test
push
stos
sub
push
out
sub
bound
pop
mov
hlt
jae
xchg
mov
insl
mov
adcl
xorb
call
jl
loope
xchg
mov
ds
or
pop
mov
xchg
mov
xor
in
adc
inc
mulb
clc
push
push
fmuls
and
dec
xor
lds
xor
push
pop
cmp
adc
mov
adc
or
mov
imul
adc
or
movsl
outsl
mov
jae
js
sbb
outsl
je
lret
in
mov
and
xchg
pushf
arpl
mov
pusha
and
and
stos
mov
sti
pop
push
xchg
sbb
mov
jmp
mov
jl
pop
pop
jb
ja
mov
mov
insb
inc
das
adc
adc
pop
les
jo
into
cmp
cmp
iret
push
push
fs
sbb
loop
repz
or
cmp
mov
dec
cmp
fsubl
pop
call
and
decl
cmc
cmp
scas
test
sbb
aas
outsl
adc
cltd
addr16
jmp
mov
test
incb
es
or
adc
sbb
add
not
and
xor
dec
test
push
adc
inc
adc
js
es
dec
xor
shlb
push
mov
add
xchg
test
lods
shll
mov
daa
sbb
gs
inc
sbb
add
mov
push
xor
mov
out
ficoms
xchg
adc
inc
pop
mov
add
cli
inc
xchg
lret
cltd
outsl
lods
jnp
pop
push
jo
loope
js
sub
scas
or
dec
mov
repnz
and
aad
stos
or
aam
sbb
lds
xor
js
fs
fstpl
sub
js
jae
dec
dec
mov
js
mov
pushf
pop
cwtl
jae
or
pop
jns
dec
movsb
cmp
jp
pop
pop
mov
out
or
idivb
add
lods
jne
or
adc
cmp
mov
popa
aad
lcall
jno
mov
insb
aam
add
push
and
es
es
jbe
push
sub
jne
hlt
mov
or
cmp
jae
out
imul
push
xor
popf
mov
je
shl
movsb
push
mov
loope
addr16
nop
movsb
ss
ficoms
aad
test
cwtl
jne
push
xchg
inc
pop
scas
je
ret
inc
xchg
xchg
pop
pushf
bound
out
xor
cwtl
mov
pop
lret
repnz
pushf
xchg
push
sbbb
aas
lcall
xor
sbb
loop
sbb
mov
inc
jle
mov
aam
imul
aaa
insb
stc
imul
mov
mov
jl
or
inc
fsubl
das
mov
into
cwtl
xor
xchg
cs
jp
and
push
push
xor
stc
pop
xchg
mov
loope
scas
or
shrb
mov
lret
call
cmp
or
loopne
xorb
in
fdivrl
xchg
test
push
aad
bnd
sbb
jmp
cmp
push
xchg
and
ret
not
dec
adc
shll
cs
or
cmp
pop
push
sbb
cwtl
push
ds
pop
jbe
lret
mov
in
mov
xchg
pusha
sbb
jle
or
pop
cs
adc
test
jb
sbb
push
inc
ds
sbb
sbb
push
iret
inc
int3
xchg
hlt
jo
push
addr16
addr16
ds
ss
mov
mov
das
sub
fwait
sub
imul
xor
daa
daa
and
pop
push
add
jae
cmp
sub
in
in
cli
out
mov
inc
sub
xchg
push
mov
xor
dec
insb
loop
fbld
icebp
xchg
ficomps
sbb
or
adc
orl
push
mov
leave
add
jns
inc
add
cmpl
aas
pop
insb
pusha
jns
adc
cmp
clc
ja
leave
ds
cltd
rorl
pusha
pop
scas
out
pop
add
and
stc
adc
push
imul
mov
inc
jnp
sub
pop
jmp
pop
push
je
jle
push
sbb
out
stc
cmp
mov
adc
hlt
aaa
pop
mov
jmp
out
xchg
sbb
fwait
cmp
push
pop
cld
xchg
ds
test
imul
les
xchg
in
xchg
cmpsl
xchg
ljmp
add
cmpsb
roll
ljmp
test
lock
sbb
fcomps
mov
sub
nop
outsb
insb
ret
xlat
popa
xchg
mov
mov
and
sbb
sub
aaa
sti
ja
lods
int3
inc
sbb
frstor
push
and
insb
leave
jae
add
xchg
cmc
ss
aad
popf
xor
test
pusha
lcall
sbbl
push
fs
lea
push
adc
call
push
mov
in
dec
xchg
cs
adc
adc
dec
aam
xchg
mov
pop
cmc
shr
and
jo
scas
outsl
or
sbb
ret
xchg
xor
push
push
dec
iret
sahf
cmp
dec
lock
mov
movsl
clc
daa
test
es
xchg
add
rolb
sub
test
int
push
jge
mov
sbb
cwtl
jae
ss
mov
push
xchg
add
push
in
sbb
pop
fidivrs
xchg
inc
inc
test
test
xor
jbe
jle
jnp
pop
cwtl
adc
movsl
sub
sub
cmp
mov
cmp
jmp
inc
std
out
sarl
add
insb
and
push
incl
mov
pop
add
dec
push
loope
cmp
dec
mov
lahf
test
jp
sub
imul
shlb
sbb
imul
sar
mov
enter
enter
lcall
add
mov
fistps
imul
cmp
add
enter
pop
inc
adc
pop
inc
data16
xchg
or
daa
xchg
push
jno
inc
pop
inc
xor
mov
outsb
gs
ret
sub
adc
pop
xchg
inc
sub
cli
push
push
sti
dec
rcl
lods
push
mov
jl
xor
mov
or
jns
sub
popa
pushf
js
jg
cmpsl
xchg
sti
repnz
or
pop
sub
fdivs
xlat
loope
push
and
pop
lock
pop
subb
push
dec
adc
test
mov
mov
fdivrl
xor
sbb
mov
outsb
test
loopne
movsl
and
js
and
insb
out
test
sbb
pop
je
rcrb
ss
add
pusha
mov
jns
push
jne
adc
sbb
orb
and
cli
sbb
xor
ja
sub
jmp
mov
adcb
leave
repz
or
push
cmpb
jecxz
int
iret
outsl
and
outsb
jg
mov
push
mov
jns
cmp
inc
jmp
sub
mov
js
and
mov
push
aaa
push
test
push
push
insl
lds
mov
ficoms
jbe
insl
adc
pop
lahf
mov
jle
xchg
lods
dec
mov
ja
nop
xor
dec
fadds
mov
loope
roll
fs
or
jns
cltd
loope
cmp
mov
adc
xchg
lock
inc
movsl
popa
idiv
sub
jo
stc
idiv
adc
lret
xchg
dec
fldcw
cmpsl
push
or
xor
and
cmp
jo
notl
cli
jb
jb
into
mov
ljmp
push
rcr
mov
jb
xchg
and
mov
sti
jns
and
xchg
hlt
jo
push
cmp
vmwrite
ss
outsb
or
sbb
popa
ljmp
cmp
mov
sub
inc
je
cmp
mov
sbb
xchg
mov
or
mov
mov
enter
imul
adc
mov
fs
repnz
add
mov
in
fsubrs
mov
cmp
pop
insb
enter
adc
sbb
fnstcw
mov
popa
push
jne
and
test
aad
mov
in
push
jbe
loop
or
mov
cmpsb
lods
mov
in
data16
insb
mov
sahf
push
enter
jo
adc
mov
sub
shll
jbe
pop
out
inc
cmp
ret
jp
adc
and
push
mov
pop
cmp
and
and
xchg
jmp
push
pusha
insb
and
js
mov
sbb
push
mov
cmp
sbb
icebp
mov
push
and
jg
mov
ss
insl
movsb
mov
jle
loop
xchg
or
jmp
in
das
pop
mov
mov
jmp
stos
leave
cld
fldpi
sahf
js
rorb
mov
pop
adc
rcll
push
lcall
push
xchg
or
mov
xorb
cmc
mov
add
ret
outsb
out
adc
lcall
jmp
arpl
je
pushf
jb
sar
push
ds
pop
lock
enter
pop
adc
and
mov
cmp
or
popa
ret
push
call
sub
movsl
jae
mov
mov
fisttpll
xchg
or
jo
stos
pop
imul
dec
js
mov
dec
imul
cwtl
mov
mov
rclb
push
js
mov
adc
jnp
imul
pusha
lret
outsl
mov
mov
lea
jg
fcomps
pop
xchg
and
lahf
xor
or
or
fs
jle
ss
int3
fwait
daa
sbb
xchg
rolb
aad
shlb
mov
mov
decb
lret
xor
and
scas
mov
in
mov
jle
dec
outsb
outsb
test
es
orl
push
aad
fs
push
mov
or
pop
add
lods
out
mul
pop
mov
pop
jae
jecxz
mov
scas
gs
add
xchg
dec
mov
cmp
repnz
in
sbb
das
sub
adc
fsubrs
mov
daa
cwtl
mov
xor
sub
roll
outsl
popa
mov
mov
ss
mov
add
mov
fldcw
or
rcr
cs
in
add
out
push
dec
mov
js
dec
pop
movsb
icebp
ss
mov
insb
mov
jle
inc
jp
push
xchg
cmp
cmpsb
sub
cltd
pop
cwtl
in
push
jecxz
loopne
imulb
mov
ss
xchg
and
lock
ja
xorl
loopne
adc
adc
jecxz
dec
icebp
notb
inc
mov
loope
les
pop
sbb
mov
shlb
lods
scas
mov
dec
push
pop
push
call
fs
cltd
push
movl
test
jl
je
inc
pop
inc
sbb
aad
pop
arpl
cltd
jbe
mov
shrb
out
sbbb
jnp
scas
push
icebp
cwtl
xchg
shld
dec
push
sub
subl
mov
jo
add
test
dec
fs
popa
icebp
lods
test
enter
xor
sahf
xchg
mov
jl
scas
pusha
out
pop
iret
or
fisubs
mov
push
arpl
push
push
sahf
mov
sbb
imul
out
mov
ss
xchg
cld
outsb
pop
ss
popa
or
std
lock
imul
push
dec
xchg
scas
jae
adc
rcrl
push
cwtl
fstl
fadds
test
inc
mov
insb
es
repnz
cmpsb
sub
xchg
movsl
jge
and
cs
push
sub
out
jbe
sbb
lret
mov
mov
dec
idivl
adcb
sub
inc
pop
dec
scas
imul
pop
imul
clc
scas
scas
jmp
cwtl
jl
aam
das
into
jae
imul
ja
es
mov
xchg
mov
mov
or
jae
add
inc
push
or
popa
jp
xlat
jno
mov
jae
pop
lret
shlb
pop
lcall
in
jae
int
negl
scas
cmpsb
pop
add
adcl
loop
pop
fnstenv
xor
sti
sub
stc
adc
scas
push
mov
test
cmpsb
dec
add
ds
loop
cmp
jb
and
xor
out
inc
daa
inc
scas
fnsave
add
mov
fs
push
jbe
mov
arpl
mov
sbb
fs
mov
jmp
clc
mov
fimull
dec
pop
adc
test
inc
cwtl
lahf
push
jo
nop
adc
pop
jbe
aam
dec
mov
mov
insb
push
imul
or
jmp
out
ja
mov
adc
add
sub
jne
dec
iret
sbb
add
jns
mov
in
subl
mov
fcmovb
nop
xor
popf
roll
mov
call
add
add
rorl
adcb
add
jae
xlat
inc
ret
imul
pushf
pop
push
mov
mov
mov
inc
or
pop
mov
lret
fs
push
mov
stos
xchg
lds
pop
mov
fisubrs
push
add
loopne
ljmp
sub
push
jae
inc
mov
mov
add
movl
xor
cwtl
adc
sub
sub
js
hlt
les
dec
insl
pusha
lret
or
mov
cmp
lods
loopne
dec
imul
shr
and
adc
iret
add
out
sti
mov
clc
shlw
imul
mov
push
in
sbb
push
xchg
xchg
arpl
fldenv
pop
mov
xchg
js
insb
repnz
sub
pop
outsl
and
sub
scas
xor
ret
fs
xchg
mov
cmp
test
jl
mov
mov
xchg
adc
lret
sbb
push
jo
je
cmp
repz
sbb
fcomps
cwtl
mov
sub
test
xchg
add
push
movsl
cltd
inc
cwtl
shlb
repz
pop
push
jle
pusha
pop
sbb
stos
dec
daa
stc
adc
mov
push
xchg
loope
lods
xchg
cltd
dec
outsb
leave
sub
mov
pop
fdivl
scas
imul
push
and
jbe
cmpsb
subb
fnop
or
jmp
pop
sub
jbe
aad
xor
repz
stc
outsl
lods
enter
popf
jg
xlat
xchg
dec
ljmp
mov
jns
push
add
aad
pop
push
repz
push
add
pushl
call
mov
shl
sbb
sbb
sub
int3
xchg
in
push
sahf
sub
or
xlat
int
add
imul
pop
lret
pop
dec
mov
lcall
mov
lds
lret
outsb
push
call
jmp
adc
jo
mov
js
test
pop
shrl
insb
push
fldenv
adc
push
sub
sbb
iret
mov
mov
add
leave
addr16
add
je
xchg
roll
out
test
cs
imul
mov
dec
pop
mov
pusha
add
mov
sbb
sub
inc
mov
cltd
jno
pop
mov
jae
xbegin
test
into
mov
jno
cmp
or
push
inc
adc
test
adc
pusha
xchg
mov
imul
pop
outsb
pop
insb
xchg
stc
adc
mov
sub
or
xor
push
sbb
loop
leave
push
sub
mov
insb
push
adc
stc
js
cmc
mov
mov
divl
popf
jo
fucomp
pop
adc
jns
pusha
ljmp
or
and
aas
mov
popa
dec
outsb
add
xchg
fwait
xor
mov
cmpsb
fildll
movsb
cmp
sub
mov
sbb
dec
ret
fwait
bound
pop
mov
js
mov
mov
xchg
aad
lcall
mov
js
fwait
test
iret
imul
loope
sub
cmp
imul
jae
cmp
and
cltd
popa
adc
push
test
jo
ljmp
add
rcll
lds
shlb
gs
ss
cmp
jg
inc
mov
lea
jae
adc
xorb
dec
mov
add
mov
fmulp
inc
subl
xor
popa
lea
push
mov
pushf
fists
mov
in
sub
iret
adc
sbb
cmp
xchg
imul
lret
pushf
sub
mov
xchg
inc
stos
fildll
out
incb
jbe
cmp
mov
insb
test
or
and
test
cltd
xor
jp
int3
pushf
push
pop
xor
mov
fnsave
pop
imul
xchg
or
in
int3
leave
sbbb
cmpsb
inc
mov
sbb
cmc
pushf
clc
stc
inc
mov
mov
cwtl
mov
push
nop
sarl
in
xor
cmpb
jnp
mov
mov
pop
clc
push
pop
lods
add
jmp
dec
mov
insb
push
fldcw
sub
xorb
stos
inc
int
sbb
mov
and
int3
dec
notl
jecxz
pop
ds
mov
or
rolb
jbe
push
inc
jae
xchg
enter
push
jbe
push
dec
add
push
pop
mov
repz
mov
test
jno
push
mov
insl
outsb
mov
jp
outsb
daa
pop
test
jae
jbe
jno
jns
outsb
bound
ficoms
lea
push
mov
and
mov
mov
jl
push
in
stc
xlat
sub
lods
adc
aam
fs
test
pop
add
mov
inc
lret
pop
daa
pop
xchg
mov
sbb
mov
inc
mov
mov
in
xlat
lret
je
cmp
es
push
jg
mov
test
ficoms
hlt
jmp
push
cmp
add
fdivl
mov
add
out
xchg
insb
lods
push
loope
cs
mov
xor
pop
inc
jae
and
sbb
test
sbb
icebp
movsb
mov
syscall
and
test
sub
adc
arpl
cmp
adc
jae
std
push
addr16
pushf
jne
icebp
iret
mov
sbb
arpl
into
sub
inc
data16
fildl
jo
lcall
sbb
scas
pop
lret
std
jbe
lods
mov
pop
lods
and
aas
and
in
jl
add
dec
lods
call
inc
pop
in
xchg
psubsw
pop
repz
push
cmpsb
xor
outsl
enter
sbb
jle
divb
push
and
push
sub
es
sti
in
insb
scas
fimull
jae
sbb
jno
sbb
aaa
cmpsl
cwtl
dec
out
shll
add
mov
fsub
adc
mov
jb
stos
int
test
add
bound
and
repz
aaa
jne
dec
and
sarb
insb
xchg
sub
add
pop
fs
insb
xor
mov
adc
cmp
sub
push
mov
idivb
cwtl
js
mov
repz
cmpsl
xor
jbe
ret
imul
call
push
popf
push
cwtl
insb
aam
add
daa
imul
jmp
mov
fidivl
mov
sub
pop
dec
in
sub
mov
sub
push
jo
daa
adc
cs
and
cmpsl
std
je
ljmp
pop
and
cs
mov
aad
cmp
pop
dec
lret
aas
jo
scas
dec
mov
orb
aam
xchg
inc
pop
movsb
rcrb
adc
enter
xor
outsb
sbb
repz
int3
out
scas
sbb
mov
insb
mov
mov
push
pop
int3
test
adc
mov
ljmp
loop
les
movsb
stos
aaa
leave
and
inc
dec
or
imul
or
int3
jns
fstps
sub
push
hlt
adc
mov
push
cwtl
frstor
or
insb
dec
push
stos
cs
test
add
je
jnp
test
call
push
xor
roll
lods
cmp
imul
sbb
cmc
sub
notb
mov
inc
inc
add
insl
mov
lret
sbb
shrb
imul
sbb
in
mov
jle
cmpsb
sub
push
stos
int
cwtl
js
mov
xor
dec
ja
cwtl
imul
adc
or
jmp
fnstenv
mov
cmpsb
sub
inc
sarb
mov
sbb
imul
jg
xor
xchg
aad
stos
xchg
test
and
sub
push
mov
je
lods
push
mov
mov
in
iret
orb
in
push
mov
mulb
iret
das
ja
inc
dec
push
fidivrs
jnp
loope
mov
sub
or
or
js
sahf
shlb
mov
in
sbb
iret
mov
sbb
icebp
add
pop
jno
add
inc
pop
jle
xchg
sub
xchg
mov
js
ret
inc
shrb
out
aam
fdivs
mov
ficoms
sub
mov
leave
shrl
mov
out
mov
pusha
jns
mov
movsl
xchg
push
sub
mov
int3
mov
aam
jmp
push
mov
lret
xor
ficomps
jmp
out
arpl
leave
dec
sbb
jae
xor
jle
iret
loope
insb
jge
push
sbb
and
fwait
in
data16
inc
movsl
xchg
dec
je
ja
adc
sbb
loopne
ja
pop
outsl
and
gs
and
cmpsb
and
mov
out
inc
add
or
int
xor
adc
sbb
sbb
xor
and
mov
std
jnp
jo
stos
adc
mov
cmpsb
xor
and
rcll
xchg
js
jae
testb
loopne
jnp
xchg
lcall
imul
and
jno
aam
pushf
xchg
jl
adc
jns
mov
pop
subb
out
int3
jmp
leave
jle
inc
insb
ss
add
mov
ljmp
adc
imul
or
push
sbb
xchg
mov
aam
and
test
faddl
adc
push
negl
sub
pop
mov
cmp
or
xchg
ss
add
aaa
and
mov
jle
clc
inc
adc
dec
jae
add
or
inc
ss
and
pop
or
test
cmp
test
push
and
and
mov
leave
xchg
or
xchg
test
addl
cmp
sahf
or
aad
adc
xchg
jp
jle
arpl
cmpsl
divb
cmp
ja
outsl
mov
mov
or
inc
xchg
dec
jmp
mov
int
xor
adc
call
dec
cwtl
mov
insb
aam
xchg
ret
push
arpl
xchg
popa
stos
jo
insb
into
ljmp
add
pop
pushf
or
cmovnp
loop
out
and
mov
pop
jns
sbb
or
ficoms
and
int3
orl
insl
push
and
xor
es
xchg
sahf
popa
scas
or
test
das
call
out
ficoms
adc
clc
cmc
or
in
outsb
mov
insb
cwtl
jmp
pusha
and
mov
jg
outsb
insb
cmp
ret
mov
ds
mov
pop
adc
push
test
inc
pop
scas
mov
pop
mov
jp
lds
pushf
fwait
sbb
cmpsb
jae
sub
mov
mov
hlt
sub
cmpsl
push
mov
jo
js
adc
and
test
cmpsl
push
imul
jae
jne
mov
int3
cwtl
loopne
jne
jl
cmp
pop
jbe
lahf
pop
hlt
imul
mov
cmovs
mov
push
mov
cli
push
repz
outsl
movsb
push
inc
and
pop
stos
add
push
shll
fstpl
test
cld
mov
push
pop
xchg
subb
jl
mov
idivl
or
outsb
mov
out
cmovno
call
xorl
jne
mov
into
adc
pop
cmpsl
push
insb
sub
push
sahf
mov
sbb
mov
mov
push
cmp
daa
xor
insl
mov
test
pop
dec
add
lret
jns
mov
push
sub
rcr
jae
mov
ja
rcll
es
fwait
test
mov
sbb
pop
cmp
sbb
es
dec
inc
pop
lret
push
add
and
aaa
push
add
sub
frstor
sub
pusha
sub
ja
push
out
je
fstl
inc
xor
jb
in
xchg
lods
adc
jnp
push
xor
mov
lds
mov
add
pop
cmp
cmp
jae
adc
mov
sub
lcall
and
jns
push
pop
iret
add
sub
sahf
ja
sbb
cmp
xorl
dec
jl
repz
into
sub
push
imul
repz
pop
fs
cmp
loop
notl
adc
insb
mov
mov
sub
dec
fs
xlat
and
jle
dec
pop
mov
jnp
jbe
cmpsl
jg
mov
out
stos
adc
xlat
fs
imul
je
into
fcomip
jl
add
aas
add
mov
loop
popl
in
out
jle
test
scas
mov
sahf
pop
xor
ja
lock
xchg
inc
push
out
mov
cli
jae
dec
jp
sbb
and
testl
fcoml
fsubs
and
lods
xor
icebp
lock
scas
sahf
sub
inc
inc
pop
and
jmp
cwtl
mov
mov
mov
stos
adc
in
sbb
jle
repz
and
sbb
dec
jmp
in
aas
or
ja
sub
mov
mov
orl
push
push
sub
aam
add
arpl
xchg
ds
int3
out
adc
dec
add
es
sbb
jae
jo
or
xor
sub
add
ss
aas
divb
inc
inc
cmpl
sub
testl
popa
lcall
pop
mov
mov
movlhps
fnstcw
and
and
push
xlat
and
stos
int3
fstpl
jae
cmc
hlt
mov
push
add
jle
jns
test
mov
incl
adc
negb
mov
xlat
mov
sbb
jb
test
addb
aad
push
shr
nop
sbb
pop
pop
adc
sbb
pop
popf
xchg
pop
mov
out
jmp
pop
sbb
in
dec
addb
jl
test
dec
inc
jnp
xchg
pop
and
push
aaa
xor
xchg
divb
inc
mov
pop
sbb
mov
mov
movsb
and
cmp
mov
rcll
adc
add
outsl
cmp
hlt
dec
xchg
cwtl
and
mov
dec
push
incl
xor
ljmp
jle
mov
jbe
xchg
pop
shll
add
cmpsb
jbe
xlat
lods
jle
dec
loop
adc
pop
test
into
push
dec
cmp
xchg
inc
xor
jl
les
jmp
and
jae
out
and
dec
movsb
push
lcall
aas
jg
das
and
mov
out
push
int
cwtl
jg
jg
js
push
mov
pop
outsb
cmp
mov
rcrb
cmp
insb
push
xchg
scas
mov
sbb
insl
add
in
xchg
inc
mov
dec
mov
das
call
repnz
pop
jb
xchg
testb
mov
cmpb
imul
loope
movl
cmp
jo
sbb
xchg
mov
pop
pop
jge
pop
or
loope
adc
mov
xchg
xchg
push
adc
and
xchg
pop
pop
push
imulb
lods
add
shll
jae
aam
and
in
dec
rcll
cmc
subb
pop
aam
stos
mov
xchg
mov
std
pop
and
scas
sbb
adc
dec
jo
stos
out
mov
nop
xor
adc
xchg
sbbb
sbb
mov
js
mov
mov
pushf
jae
inc
sbb
leave
aaa
pop
xlat
xchg
out
pusha
loope
xchg
lock
adc
jne
and
jb
sbb
imulb
lcall
jae
push
stos
fisttpll
add
dec
mov
aam
ja
mov
mov
xchg
data16
jne
sarl
jo
inc
sub
and
js
es
shll
sbb
movsb
cs
ds
push
mov
pop
bound
or
dec
cld
les
shlb
adc
into
adc
xchg
repz
mov
lock
sbb
mov
push
xchg
and
sbb
sbbb
outsb
xchg
pop
in
dec
sbb
push
es
cmpsb
ficoms
mov
rclb
test
inc
mov
sub
jae
mov
or
jb
divl
insb
lds
je
rclb
shlb
mov
xor
mov
sahf
loop
loope
pop
push
jae
push
je
ret
pop
or
jb
ljmp
ret
into
xchg
rorl
sub
pop
out
or
sub
xor
jb
adc
sbb
js
xor
je
sub
jae
xor
ja
dec
push
jb
icebp
sub
loope
push
mov
mov
pop
sub
icebp
jmp
loope
cmc
jl
shll
sub
or
jle
and
fiadds
fstps
mov
fsts
xchg
test
xchg
cmp
sahf
mov
mov
mov
aam
cld
sub
push
popa
stos
cmpl
cmp
pop
sbb
scas
adc
xchg
push
daa
inc
enter
jo
jb
jmp
stc
es
ds
psubsb
or
loope
adc
push
movsb
mov
scas
adc
push
nop
add
daa
mov
ljmp
cmp
mov
jae
push
inc
inc
in
out
pushf
pushf
insb
pop
or
pop
push
cmc
loope
fidivrs
push
shl
add
adc
cmp
pop
pop
push
add
mov
adc
and
or
sti
mov
add
scas
ss
or
cmpb
test
and
sub
push
add
mov
and
cmp
inc
sbb
lea
fnstenv
dec
jae
ret
and
cld
cld
push
ss
jp
xor
idivb
or
sub
push
push
pop
xchg
add
adc
jb
pop
mov
cs
mov
nop
xchg
mov
aad
sub
xor
adc
add
push
sbb
ss
ds
fdivl
pop
ss
jb
inc
mov
mov
jge
jo
fisubrs
shll
ss
test
lea
fs
add
xor
xor
mov
jbe
add
xor
ljmp
push
psubsb
outsl
test
mov
stc
stos
test
dec
leave
mov
sub
jp
insl
sbb
pop
iret
pop
hlt
bound
push
test
repnz
pop
daa
sti
iret
fdivrs
inc
dec
lcall
in
call
pop
das
movsb
fnsave
adc
inc
inc
dec
mov
mov
loop
xchg
test
clc
rcl
jo
pop
icebp
mov
jle
push
or
enter
cltd
jg
jns
add
ret
add
inc
dec
xchg
cwtl
in
push
lret
pop
stos
jecxz
mov
adc
xor
jp
xchg
add
sub
or
push
stc
insb
stos
aad
lock
call
or
adc
test
push
out
mov
fldt
jp
loope
jg
jl
adc
aad
pop
out
ds
dec
pop
jne
mov
bnd
rep
mov
sub
mov
add
xchg
cmp
icebp
lds
fldcw
add
cs
jbe
lahf
mov
mov
cmp
hlt
jl
mov
out
sub
jae
cmp
inc
je
jbe
sti
cmp
add
imul
out
imul
mov
mov
or
push
xlat
mov
jl
pop
push
mov
xor
push
mov
lock
cwtl
adc
xchg
xchg
cwtl
popl
pop
mov
push
out
jb
stc
push
add
es
jns
aad
sarb
jl
imul
sub
mov
xchg
and
scas
jle
insb
xorb
mov
movsl
rol
test
mov
outsb
imul
out
push
xchg
movsb
jl
xor
adc
mov
dec
add
stos
cmp
adc
cwtl
xorb
cltd
gs
push
pop
fcoml
sub
push
mov
test
nop
mov
xor
and
pusha
sti
or
aad
mov
into
xor
loope
ds
xchg
adc
lods
arpl
mov
sub
xchg
mov
insb
lods
pop
loopne
cmp
ja
mov
add
inc
or
ret
pop
out
cld
stos
insb
pop
push
icebp
int3
mov
pusha
lods
subb
outsl
mov
push
push
pop
adc
add
sub
mov
cmc
mov
push
push
jge
jno
fsubrs
popf
mov
iret
jno
and
xchg
and
mov
add
or
cltd
mov
push
adc
xchg
push
in
push
shrl
push
add
out
shrb
imul
sbb
pop
push
pop
mov
insb
popa
or
xor
aaa
mov
inc
mov
pop
or
xchg
push
pop
pcmpeqw
xchg
inc
or
xor
and
and
out
adc
mov
adc
insb
lahf
adc
pushf
mov
out
inc
das
pop
or
in
and
in
cwtl
adc
sbb
repnz
pushf
shrb
lds
push
jno
add
bound
adc
nop
adc
mov
inc
jo
push
ret
sahf
ds
inc
orl
testb
jl
mov
jb
jns
xchg
in
dec
adc
dec
fidivl
jno
pop
lret
adc
mov
dec
cli
in
cmc
jp
jo
loope
cmpsb
out
jmp
push
xor
movsb
and
adc
add
or
pop
popf
in
cwtl
adcl
jbe
idivb
xor
pop
and
mov
mov
je
sub
adc
xor
data16
pop
mov
cmpsb
insl
sbb
ljmp
lods
xchg
mov
or
and
cltd
push
xchg
iret
out
pop
dec
fsubrp
mov
cltd
scas
mov
xlat
insb
mov
aad
insb
add
jae
bndldx
adc
sub
aaa
dec
add
mov
inc
jno
or
jnp
add
jns
xchg
mov
into
mov
mov
fs
sbb
sub
fs
icebp
sub
mov
jno
cmpl
inc
cmp
fsubrp
hlt
pushf
lods
mov
mov
pop
push
adc
mov
stc
scas
jle
mov
dec
aas
sbb
jl
ret
clc
insl
pop
adc
bound
mov
aaa
sub
or
xor
add
pusha
push
es
add
jbe
jle
sahf
inc
jg
fidivrl
jge
stos
andl
cld
cmpsl
movsb
xorb
in
and
or
pop
hlt
iret
push
cmp
sub
test
dec
push
add
inc
pop
xchg
hlt
xchg
popa
insb
push
xchg
aad
std
jp
or
adc
stos
sub
pop
pop
sub
aam
pop
or
notb
lock
mov
xor
jb
xchg
xor
mov
and
sbb
push
push
mov
mov
or
pop
shrl
sar
stos
cmc
insb
add
sbb
mov
add
cmpl
mov
jp
icebp
sub
mov
jle
xor
ljmp
mov
test
mov
mov
daa
push
jb
sub
in
push
cmp
dec
sbb
push
jb
jne
pop
xchg
lock
fbstp
inc
inc
dec
cmpl
xor
sub
push
cmpb
mov
clc
and
sub
mov
flds
pop
xchg
das
mov
mov
mov
or
mov
mov
dec
js
and
pusha
push
mov
repz
xchg
jg
sub
sbb
lcall
ja
jae
enter
mov
dec
mov
scas
push
loope
mov
cwtl
mov
mov
adc
dec
adc
movsl
sar
aam
jns
push
cs
pop
and
or
ss
mov
insb
push
xchg
jns
mov
negl
and
pop
xchg
cmpsb
ret
sbb
jae
pop
stos
lds
mov
notl
mov
in
pop
pop
cmpsl
adc
rcrl
push
fsubrs
push
pop
cltd
push
xchg
outsb
xor
je
enter
mov
in
add
xchg
xor
sub
mov
jo
mov
push
cld
mov
loope
mov
mov
sahf
mov
loope
jle
out
jb
inc
push
outsl
ficoms
and
dec
mov
gs
insl
jb
fsubs
jno
jecxz
mov
std
xchg
xor
fsubs
dec
aaa
push
out
sbb
daa
xchg
ds
push
insl
cmp
jbe
std
sahf
adc
jno
sub
subl
or
cmpsb
rcrb
sub
jb
mov
push
pop
xor
out
lock
xor
sbb
je
ss
int3
push
inc
jae
lods
mov
cmp
mov
scas
and
lock
add
sub
loopne
push
test
lcall
xchg
cmc
out
rol
imul
scas
hlt
loopne
jge
ja
pop
jle
pop
fsubrs
mov
fs
daa
insb
enter
push
rcll
out
mov
or
pop
sub
sub
pop
push
jmp
mov
xchg
xor
sbbb
jb
leave
push
inc
mov
andl
xor
push
lods
jmp
divb
shlb
and
cltd
mov
stos
out
mov
xor
push
jo
jo
ljmp
add
loope
shlb
sti
pop
mov
xchg
or
or
xor
fiadds
ss
test
mov
test
cmp
mov
mov
je
shll
test
cli
clc
adc
pop
push
scas
cmp
dec
je
rol
push
inc
push
mov
bound
in
mov
out
mov
or
inc
fwait
jecxz
fldenv
repz
cmp
loop
loop
jl
out
addb
ljmp
stos
enter
or
mov
or
fs
shll
push
mov
mov
sub
icebp
les
sbb
push
mov
rcrl
push
add
xchg
mov
orb
aad
mov
sbb
loope
insb
sub
into
shl
xor
push
dec
or
cltd
push
ss
mov
mov
mov
pusha
nop
cs
add
fs
shll
je
pusha
push
and
sub
xor
cmc
test
dec
jp
jne
push
xchg
lock
cwtl
cmp
dec
test
xor
and
lcall
loop
insb
insb
jo
xor
rcrl
ljmp
cs
mov
outsl
aaa
jg
xor
inc
xchg
mov
cmp
cmp
jbe
jno
dec
mov
xchg
pop
xlat
add
das
jo
jbe
mov
sbb
pop
jo
jle
inc
xor
sub
fstps
push
ret
pop
cli
ljmp
andl
mov
pop
xchg
dec
mov
pop
push
jae
loope
jg
arpl
aad
les
out
das
mov
dec
scas
xor
inc
push
pop
fldenv
ljmp
inc
xchg
test
mov
cmp
mov
pop
xchg
aad
push
jbe
stos
call
js
fdivl
nop
mov
sbb
jb
jb
push
lea
inc
push
je
add
sub
lcall
and
outsl
iret
xor
popa
and
stc
js
imul
shr
lcall
adc
sbb
ud2
add
sbb
aas
rolb
popa
bound
inc
popw
outsb
pop
and
cli
xchg
jo
cwtl
cmp
xor
pop
jns
sub
inc
sub
mov
pop
leave
mov
imul
dec
cli
in
aas
and
aas
mov
test
subl
add
mov
es
cwtl
insb
test
jo
clc
cmpsl
jns
lock
inc
icebp
inc
cmp
stc
xor
rcll
mov
add
loope
fld
cmpsl
aaa
inc
lds
cmpsl
insl
add
adc
hlt
outsb
jo
stc
cmp
inc
cmp
mov
ss
in
cmp
sbb
es
adc
add
sbb
cmpsl
xchg
bound
icebp
bound
and
pop
xchg
xor
loop
icebp
fsubs
push
into
add
push
jae
js
movsb
pop
mov
mov
jo
xor
mov
or
outsb
daa
sub
mov
mov
sub
ss
mov
cmp
xchg
fisttpll
jae
push
add
mov
xchg
push
mov
testl
stos
pop
jp
call
mov
sub
and
sub
lock
bound
push
mov
dec
sub
jecxz
jns
fwait
xchg
inc
cmp
pop
and
testl
dec
sbb
xchg
add
mov
shlb
xor
int3
arpl
pop
jb
mov
jae
es
pop
insb
imul
mov
pop
roll
mov
pop
lret
push
je
xchg
pop
faddl
mov
into
push
sbb
aam
cltd
loope
repnz
sbb
xchg
test
iret
inc
lods
sub
pop
xchg
dec
sub
sahf
push
jno
cwtl
fwait
push
sub
xlat
dec
fnstcw
dec
sub
inc
mov
test
sub
mov
mov
dec
cwtl
xchg
cmp
lret
mov
and
cltd
cwtl
popf
andb
mov
sub
push
jb
adc
sbb
mov
dec
xlat
js
adc
out
jb
popa
add
adc
pop
repz
loopne
xchg
nop
movsb
xor
cwtl
jmp
adc
and
jmp
sbb
inc
mov
dec
push
jns
push
scas
cmpsb
xchg
rcrl
push
dec
je
dec
jbe
mov
jmp
sbb
fmul
js
pop
or
repnz
arpl
imul
pop
xchg
sti
mov
cwtl
test
lret
adc
mov
or
push
dec
push
dec
sarb
cltd
mov
adc
pop
xchg
outsb
lods
mov
and
ja
jne
imul
xlat
nop
ret
pop
adc
outsl
aam
andb
cli
dec
adc
pop
push
push
loopne
push
pop
loope
adc
mov
sbb
mov
nop
outsb
pop
aam
call
bound
loopne
ss
ljmp
mov
cmc
mov
cltd
fs
inc
imul
test
imul
jne
mov
xchg
dec
inc
add
push
lret
cmp
sbb
mov
int
cmpsb
jae
push
and
jo
push
push
adc
cmpsb
out
orb
sbb
pop
add
fwait
out
scas
aad
mov
pop
jp
test
sbb
mov
mov
cmpsb
or
mov
bound
inc
push
es
pop
repz
jl
or
jae
pushf
iret
push
add
pop
cmc
mov
aas
test
cld
mov
pop
push
stos
adc
xor
push
jp
roll
cmpsl
into
jbe
cmp
inc
arpl
ficoml
gs
xlat
mov
test
int
dec
fs
pop
push
mov
add
pop
icebp
lds
inc
hlt
mov
test
test
int
test
addr16
cltd
mov
inc
loop
scas
int3
pusha
add
hlt
divb
push
cmp
lret
mov
in
cwtl
add
bound
sbb
add
jge
stc
cmpsl
jae
jbe
out
jns
int3
and
mov
jmp
popa
jb
mov
pop
stc
inc
push
lea
push
lods
rolb
movsl
mov
jo
cmpsl
lcall
jle
push
test
cmpl
stos
cmp
cmp
loope
mov
daa
jbe
add
mov
sbb
test
xchg
enter
cmp
imul
jmp
push
dec
push
test
inc
or
inc
mov
and
sbb
adc
fs
fildll
ja
mov
sub
mov
out
inc
aaa
sub
jns
push
mov
int
mov
xchg
xchg
sbb
ret
pushf
std
addr16
sub
arpl
aad
mov
mov
inc
mov
adc
inc
imul
mov
ds
fwait
jns
pop
mov
lahf
cmp
add
xchg
mov
lahf
dec
jno
push
mov
or
stos
cmp
jle
mov
pop
addr16
arpl
xor
xor
popf
cmp
jae
adc
mov
add
insb
out
leave
mov
leave
cmp
jae
fadds
iret
dec
ret
push
fsubr
je
mov
jo
rcrl
test
jae
inc
sub
mov
aaa
fs
jno
push
lods
cmpsb
adc
pop
stos
lahf
pop
push
cwtl
mov
xchg
sbb
fidivrs
pop
xchg
mov
jae
daa
dec
ret
cmp
pop
inc
jle
inc
shl
xchg
xor
ds
pop
or
fsubr
lret
stos
mov
cmp
jmp
fstp
cmpsb
in
cli
mov
pop
and
jo
pop
fldenv
ja
sbb
das
add
mov
xor
imul
and
and
pop
mov
aaa
shlb
addl
mov
repz
add
inc
push
jo
push
mov
scas
add
push
jl
inc
je
ja
cwtl
jo
iret
shll
mov
jmp
sbb
mov
and
add
push
xor
adc
lods
adc
out
lds
add
cmpsl
xorl
fs
mov
orl
lock
pop
rcrb
jo
xchg
cmpsl
shlb
jb
dec
jg
js
fidivrl
sub
jge
mov
cmpsl
or
je
cmp
xchg
aam
and
cld
enter
fmuls
mov
sub
pop
and
stc
das
add
popl
dec
addr16
stos
pop
popf
xchg
fwait
inc
fwait
or
push
adc
jp
mov
mov
jl
mov
xor
jnp
leave
add
cwtl
adc
int3
sub
mov
mov
jns
fdivs
in
jl
mov
mov
cwtl
sub
or
xchg
sub
ja
imull
adc
rcr
int
pusha
mov
sbb
mov
mov
sbb
mov
pushf
ror
cs
xor
adc
cmpsl
sub
popa
mov
mov
jecxz
sbb
xor
pop
jmp
nop
hlt
mov
cltd
adc
pop
adc
adc
mov
mov
or
xor
fldln2
and
sbb
lret
pop
cmpb
jecxz
mov
loopne
sbb
mov
ljmp
sti
cmp
xchg
xlat
xor
push
sti
test
sbb
adc
imul
int
ret
push
dec
cmpsl
xchg
sub
jae
mov
sub
jns
sub
sub
inc
mov
lahf
inc
nop
dec
xchg
mov
pop
mov
mov
mov
popa
jmp
jae
outsb
fsubs
pop
and
insb
mov
sub
adc
push
sahf
push
push
and
loope
xchg
pop
cmp
xor
and
out
pop
testb
sbb
dec
and
movsl
clc
or
push
push
add
mov
icebp
and
adc
scas
jns
dec
add
cmp
inc
push
mov
popa
jl
push
mov
sub
inc
push
jns
outsb
insl
sub
jle
arpl
inc
test
pop
jbe
adc
pop
xchg
push
ljmp
dec
pop
iret
mov
bound
push
clc
je
test
or
cmc
pop
into
sbb
dec
pop
sub
sbb
ljmp
push
sub
cmp
aas
sbb
js
add
adc
movl
xchg
ss
pop
iret
sahf
jmp
es
outsl
loope
in
push
sahf
pop
push
pop
insb
push
sbb
pushf
mov
test
mov
das
lods
cmpsl
mov
xchg
gs
icebp
dec
mov
rol
push
mov
insb
push
mov
cwtl
in
daa
xor
ss
sti
jmp
xor
clc
cmp
jle
push
jp
sbbb
sbb
adcl
insb
push
xor
jp
clc
out
push
mov
out
arpl
inc
aaa
repz
or
adc
fistpll
xor
repz
push
aas
mov
mov
mov
mov
lock
add
ret
mov
xchg
xlat
ljmp
add
xorl
pop
dec
mov
lock
adc
mov
add
test
test
lods
loope
lahf
cltd
icebp
xor
xchg
and
pop
imul
lods
jmp
shl
out
mov
mov
shlb
add
jno
or
inc
fprem1
mov
dec
cltd
push
inc
cmp
test
sub
push
cmp
jnp
shll
xchg
push
es
push
mov
pop
cmpsb
mov
ds
add
inc
inc
sub
orl
mov
insl
imul
jmp
xchg
fiaddl
clc
addr16
rolb
mov
jae
push
lock
jl
dec
dec
scas
sbb
mov
ds
mov
mov
ret
iret
push
mov
js
mov
mov
insb
insb
xlat
xor
int
push
pop
cs
rcll
xchg
jae
mov
jge
and
daa
inc
into
scas
mov
imul
or
xchg
movsl
adc
pop
leave
jb
test
mov
fmull
mov
js
js
mov
ret
xor
xchg
push
xor
int3
dec
dec
into
ret
xchg
mov
sbb
sub
adcb
sub
xlat
inc
insb
subb
arpl
test
or
sbb
out
dec
and
or
outsl
add
push
xlat
out
push
add
dec
call
push
stc
push
out
mov
cwtl
dec
popf
mov
mov
sbb
and
int
lods
xor
jle
cwtl
adc
pop
adc
mov
jb
jae
ret
mov
push
enter
pop
ja
mov
adc
sbb
sbb
sub
mov
test
je
push
jbe
dec
cltd
xchg
mov
jl
adcb
lahf
mov
mov
jle
jno
out
ja
cmp
pop
sbb
cltd
push
sub
fs
subb
xor
xor
dec
adc
add
and
or
sub
jns
ljmp
pop
stos
cwtl
inc
mov
pop
cltd
pusha
cmpl
iret
ret
pop
push
insb
dec
adc
mov
bound
jp
mov
pop
sbb
or
mov
sub
xor
lds
sub
arpl
inc
xor
xlat
les
icebp
test
arpl
iret
or
ss
sbb
ret
popa
fcoms
jne
and
xlat
lock
push
ljmp
ss
add
mov
cld
pop
adc
aaa
sbbb
and
mov
xchg
inc
xor
ja
push
push
movsl
dec
jg
adc
stos
xlat
repnz
sub
xor
cmpsb
cwtl
dec
inc
cmp
jns
sub
je
scas
pop
jle
cltd
sub
icebp
rcll
xchg
js
mov
sbb
and
and
les
jp
xor
mov
adc
cmc
repz
sbb
add
pop
jne
or
in
les
out
bound
sub
sub
mov
and
negb
cmpl
scas
mov
add
sub
test
mov
mov
sbb
int
lret
xchg
enter
scas
pusha
ss
int3
scas
inc
addr16
in
js
inc
or
sub
xor
sub
and
sbb
add
mov
push
jnp
lods
pop
pop
stc
adc
movsb
jbe
call
inc
in
mov
sahf
jbe
xchg
xchg
out
cwtl
xchg
cmp
cmp
inc
adc
mov
test
insl
test
inc
or
inc
xchg
cmc
xchg
mov
insb
adc
das
cmp
out
cmpsb
stc
mov
dec
nop
and
or
cmpsl
je
lods
mov
xor
mov
lea
hlt
lock
jbe
stos
jecxz
mov
pop
sti
push
les
pusha
push
jae
mov
adc
fcmovbe
mov
and
adc
shrb
cld
mov
xchg
sbb
jae
out
push
bound
sub
adc
xchg
jmp
adc
and
js
jb
add
pop
jbe
push
jae
in
cmp
cmp
frstor
data16
jg
cli
and
divl
xchg
xor
or
mov
add
xchg
loope
mov
push
pop
jnp
lea
xor
xchg
mov
adc
lock
dec
adcb
pop
dec
test
lahf
flds
pop
push
sbb
push
pusha
sub
pop
xlat
mov
lret
daa
xchg
push
mov
pushf
mov
pop
cs
adc
ret
jb
subb
jmp
jae
ja
cmp
cmp
cmp
xchg
add
insb
inc
shll
pop
add
inc
dec
cmpsl
mov
sbb
mov
push
fisubl
cmp
lahf
push
xchg
pop
push
into
pop
or
js
xorb
mov
sbb
idivl
sahf
or
gs
jp
sti
adc
and
sahf
and
cmp
or
mov
adc
repz
push
ret
add
leave
and
sti
stos
rcrb
jb
ret
cmp
push
jnp
bound
icebp
cwtl
xchg
and
ds
imull
and
cmpsb
pop
mov
and
pop
imul
mov
jmp
lcall
mov
mov
data16
stos
sti
sbb
pop
and
inc
int
fildl
jnp
mov
pop
push
insb
and
sti
aam
bound
mov
pop
xor
cmp
repz
sub
fistpl
push
or
or
and
std
js
sub
lock
push
cmpsb
sbb
stc
stos
cmp
sbb
inc
sbb
sbb
sbb
sub
mov
lret
test
fadd
jp
ljmp
sahf
mov
les
or
aad
repnz
outsl
xchg
cli
mov
sbb
jns
jecxz
adc
repz
insb
push
push
jp
sub
jp
push
cwtl
js
mov
mov
sbb
jbe
cmp
or
inc
sub
jb
aam
insb
push
adc
ss
notl
sbb
in
les
mov
mov
pop
mov
sub
sbb
ljmp
and
scas
hlt
lret
adc
cwtl
pop
fs
jns
es
or
pop
inc
mov
inc
mov
movsb
outsb
arpl
adc
test
repz
jns
js
outsb
mov
dec
pop
dec
arpl
adc
xor
daa
adc
xorl
mov
mov
repnz
mov
int
ss
xor
mov
mov
and
dec
repz
push
mov
or
dec
cs
and
sti
mov
jmp
pop
int
cmp
gs
stos
jns
add
jae
cli
in
sbb
jbe
sbb
out
aam
into
mov
sbb
cwtl
lods
ds
and
mov
pop
sbbl
sub
mov
aas
lcall
inc
mov
sbb
test
dec
rcl
mov
pop
test
ss
shlb
mov
and
sbb
pop
stos
mov
cmp
push
dec
mov
aam
add
sarl
cs
idivb
xchg
jecxz
mov
add
jo
dec
cltd
xchg
insb
xlat
push
adc
pop
fs
push
mov
ss
fcoml
dec
test
xchg
call
push
cmp
sub
or
jb
clc
ljmp
adc
insl
js
add
incl
add
aas
stos
cmpsb
xchg
mov
sbb
sub
jmp
jp
fcmovnbe
adc
and
add
aas
mov
adc
ss
fcoml
or
fcomi
xchg
add
imul
cmpsb
cltd
lds
test
mov
adc
aaa
adc
jecxz
dec
fs
mov
jbe
cmp
repnz
jae
les
push
jo
subl
nop
and
pusha
or
lcall
clc
test
sub
push
adc
mov
and
mov
adc
andl
pop
stc
or
jae
frstor
mov
mov
lds
sbb
bound
ret
pop
loope
repz
jae
dec
shlb
fnsave
fnstcw
sbb
repz
mov
lret
mov
mov
mov
mov
xorb
pop
mov
adc
add
fdivrl
sub
enter
push
xchg
mov
and
add
mov
or
in
enter
cli
sarb
sbb
aas
test
lret
cmp
jae
test
shlb
add
lahf
cmp
pop
inc
adc
ljmp
arpl
jbe
inc
pushf
inc
hlt
leave
add
test
fiaddl
sub
or
mov
xlat
and
divl
in
push
test
push
jae
rcrl
ja
xor
addr16
push
outsb
jns
sbb
xchg
xor
imul
jb
outsb
mov
cmp
sub
xchg
imul
push
lcall
add
pushf
cs
cmp
js
sub
nop
push
pop
pop
xor
bound
xchg
pop
adc
and
adc
popf
into
mov
int3
out
movsb
mov
loope
mov
add
xor
ja
out
fimuls
addr16
dec
orb
jl
jo
mov
ja
push
pop
test
addr16
adc
inc
cmpsb
ret
mov
ds
mov
ja
iret
xchg
mov
lods
push
dec
sub
jns
sbb
into
adc
adc
rorb
adc
cmp
ds
jne
and
xor
sbb
ss
ja
add
ret
adc
push
push
xchg
pop
insb
stc
jg
sbb
aam
push
xor
sti
ljmp
xchg
inc
rorl
aam
sub
repz
into
popf
cmp
mov
aam
cmp
push
ret
and
roll
cmp
jmp
mov
mov
vmwrite
frstor
xchg
pop
pop
add
outsl
cmpsl
jge
outsl
cmp
lods
lcall
jb
pop
es
push
jno
push
dec
push
mov
clc
push
and
pusha
xchg
negl
shrb
sub
mov
push
inc
mov
ret
cltd
pop
cmp
and
pop
addr16
movsb
lea
loop
pusha
movb
das
adc
jae
pushf
push
sub
cmp
repnz
mov
mov
sbb
insb
call
jo
stos
jle
fistl
out
jp
loop
or
or
push
push
push
pop
xor
push
decb
jecxz
cmp
sbb
add
xchg
in
pusha
out
mov
xchg
imul
pop
iret
pop
jg
int
popa
mov
leave
je
pop
pop
scas
roll
dec
js
mov
xor
clc
jmp
inc
loope
cli
cmpsl
xchg
mov
mov
lret
mov
pop
xchg
js
dec
cmp
add
stos
test
iret
and
sbb
rcr
xor
xor
scas
ja
dec
or
push
xlat
xchg
push
aas
je
mov
test
sub
pop
push
in
xchg
push
out
out
insb
xor
lret
pop
orb
mov
fldcw
test
ja
or
pusha
test
push
mov
sar
jl
popa
sub
pop
xor
mov
bound
rorl
ss
mov
adc
out
push
sbb
xor
mov
bound
xor
and
sub
or
lock
insb
mov
push
sbb
fildll
stos
int
enter
popa
es
jecxz
dec
insb
or
les
add
sbb
mov
xor
shll
iret
lret
dec
pop
and
loope
lahf
call
adc
or
sbb
dec
fdivrl
cltd
cmpsl
add
cmp
test
mov
jle
popa
aad
mov
js
mov
mov
mov
push
imul
sub
xchg
imul
cli
pop
ds
jae
das
push
dec
imul
addr16
mov
jns
mov
or
std
xchg
clc
ret
cltd
adc
scas
jae
out
fildl
cmp
loop
test
shlb
cmpsb
jae
pop
out
scas
cmpsb
js
sub
mov
repz
pop
sbb
lock
cmp
pop
ss
mov
cwtl
clc
sub
cmpsl
lcall
xchg
mov
in
sub
push
dec
in
sub
cltd
test
pushf
outsl
out
cltd
repz
mov
jns
aad
cmpsb
mov
xchg
sub
call
mov
xchg
dec
rol
jne
fcomps
pushf
rorl
mov
mov
iret
mov
lock
data16
loopne
movsl
or
out
jl
xor
push
cmp
and
xchg
into
sub
sub
adc
sub
mov
lahf
mov
jmp
add
out
sbb
or
add
lret
pop
rclb
jo
clc
imulb
loope
ret
out
or
xchg
jmp
arpl
cmp
sbb
mov
xchg
xor
cmpl
jbe
inc
sti
jne
pop
mov
lods
mov
dec
mov
pop
xor
mov
insb
jle
inc
dec
cmpsb
dec
shlb
jbe
cmp
mov
mov
xchg
sub
sbb
lret
xor
cmp
out
cmpsb
sub
xchg
sub
mov
mov
cld
xrelease
jg
push
stos
divb
call
cmc
nop
xchg
pop
jge
dec
addr16
ljmp
jo
jae
cmp
shlb
and
xor
sub
es
push
lods
test
test
je
jp
add
xchg
test
movsb
mov
popa
out
loop
add
jg
mov
xchg
cltd
ss
jns
mov
in
or
lock
jle
xor
lcall
mov
push
inc
repz
inc
std
mov
jecxz
bound
push
jbe
xchg
adc
arpl
push
movsb
add
cmpsb
mov
sub
divb
call
ljmp
mov
push
fs
mov
and
cmpsb
cmp
stos
push
ds
mov
sub
outsb
adc
rcr
push
jns
into
xor
lock
inc
xchg
dec
push
sbb
push
mov
mov
stc
xor
jae
mov
push
addr16
cmpl
jl
mov
and
xor
push
jmp
mov
push
mov
pop
and
test
add
outsb
inc
cltd
push
or
xchg
mov
repnz
push
lcall
stos
pop
sub
xchg
popf
fs
clc
sbb
nop
mov
push
call
lahf
loopne
mov
push
je
je
sbb
xchg
adc
xor
dec
xchg
dec
xor
mov
in
xor
xlat
imul
and
mov
lods
or
add
call
push
scas
adc
push
cwtl
je
jb
sub
add
out
arpl
dec
adc
bound
and
and
inc
ret
out
sub
pop
xor
sub
mov
add
pop
mov
popf
adc
push
in
and
adc
cmc
jmp
popa
repz
in
sbb
push
in
pop
lea
add
mov
pop
xlat
lods
push
stos
andl
xchg
incl
jno
subl
pop
or
rolb
mov
or
cmpsb
sbb
scas
push
dec
mov
and
in
xchg
int
sub
shrb
pop
mov
repz
popf
sbb
sbb
xor
inc
lods
push
pop
insb
sahf
xchg
outsb
sub
insb
cmp
inc
push
inc
idiv
loope
sbb
mov
push
jl
push
push
out
jne
js
mov
cli
loopne
xchg
xchg
rcll
cwtl
inc
xor
dec
sbb
sub
add
mov
shl
ss
test
lock
push
clc
xor
and
imul
sbb
mov
lret
push
insl
lea
jae
repz
inc
mov
out
push
jle
sbb
sub
xor
cmc
jae
jnp
push
jbe
mov
ljmp
aad
mov
adc
lods
dec
adc
sub
and
inc
and
ja
loopne
sbb
jo
pushf
stc
subl
xor
ja
sub
mov
add
mov
mov
xlat
imul
movsb
ja
mov
je
jmp
mov
push
iret
movsl
mov
sbb
add
in
lds
or
cwtl
xor
adc
jbe
daa
push
cmp
push
and
std
lods
push
jb
xchg
aaa
jbe
je
clc
adc
adc
adc
or
mov
insb
clc
pop
ja
lods
and
lods
js
or
jo
sub
push
pushl
clc
adc
daa
pop
sbb
push
je
lods
adc
mov
test
fcomps
mov
xor
pop
cmp
xchg
jns
mov
test
test
jno
sar
es
adc
jbe
nop
insb
jb
clc
mov
add
std
js
xor
xorb
cmc
leave
mov
clc
jae
xchg
jl
adc
pop
sbb
cmp
xchg
jecxz
add
fdivs
pop
pop
xor
aam
dec
or
int3
jmp
pop
cmovae
scas
ja
sti
es
mov
ja
leave
sbb
push
add
in
push
rcrl
add
push
xor
mov
je
mov
adc
sbb
sub
mov
sub
push
mov
sub
xchg
pop
pop
adc
xchg
xor
in
jb
pop
outsb
test
mov
inc
mov
push
sti
adc
imul
mov
push
pop
scas
test
test
cld
mov
jb
cs
mov
loope
xchg
jb
inc
test
ds
cmpb
mov
jbe
je
daa
fwait
pop
sub
pop
sbb
sub
mov
sbb
dec
cmc
pop
loope
cmp
iret
pop
in
ds
shlb
xchg
adc
ja
xor
test
dec
sbb
adc
cmp
cltd
outsb
arpl
mov
decl
cmp
inc
mov
int3
jo
mov
mov
scas
aaa
mov
daa
hlt
pop
scas
mov
adc
jo
into
mov
das
push
sbb
aam
cmp
jle
sub
mov
sub
push
or
xchg
push
stc
xor
push
out
sub
or
mov
loope
pop
enter
stos
lea
shrb
cmp
or
lds
xchg
cmp
pop
push
lds
cwtl
enter
hlt
sahf
dec
call
mov
pop
test
repz
fcomps
fistps
mov
dec
add
push
jmp
inc
fildll
cmpsb
stc
mov
jae
cld
push
les
scas
or
dec
pop
and
cltd
test
aam
inc
push
add
cltd
push
inc
mov
and
nop
les
fidivrl
dec
cmp
int3
and
fnstsw
and
out
outsb
ss
pop
adc
popl
fldt
in
mov
cld
into
in
xchg
jns
mov
xor
in
add
cmpsb
and
cmpsl
adc
jae
sub
jno
call
addr16
adc
xchg
leave
mov
pop
jae
dec
jp
push
mov
mov
and
or
lret
ljmp
pop
sub
lret
xor
fidivl
js
iret
data16
mov
inc
push
xor
leave
iret
xor
dec
lea
mov
jae
adc
mov
xor
push
enter
jle
add
push
sbb
sub
inc
les
outsb
aaa
push
ret
mov
adc
mov
dec
mov
stc
or
testb
je
dec
mov
adc
icebp
loope
mov
cmpsb
lock
mov
mov
pop
mov
pop
addr16
xchg
pusha
jae
xor
test
mov
sbb
aaa
and
adc
mov
hlt
rcrl
xchg
dec
outsl
imull
dec
mov
shll
pop
dec
mov
pop
mov
sub
push
repnz
jne
std
sub
adc
call
je
jbe
je
adc
or
clc
mov
mov
cwtl
roll
cmc
xchg
test
ret
xchg
inc
mov
mov
pop
pusha
ja
insl
js
addr16
out
jmp
mov
pop
out
mov
and
and
adc
pushf
cli
mov
ret
adcl
sbb
lds
ja
adc
int
adc
adc
cmp
cli
jl
jne
aam
enter
lods
sbb
mov
adc
cld
sub
sahf
clc
nop
adc
enter
aam
xor
cmp
xchg
push
loopne
inc
loopne
std
js
dec
out
sub
xchg
xlat
pop
lds
mov
pusha
jle
sub
icebp
pop
scas
jnp
jb
adc
add
rcll
pop
gs
subb
ljmp
jo
imul
xchg
sbb
insb
scas
sbb
push
je
cmp
push
mov
and
lcall
imul
pop
mov
push
pop
in
sub
frstor
les
scas
js
mov
scas
xor
sbb
sbb
adc
push
xchg
add
stc
and
mov
jb
mov
and
xchg
sub
dec
rcrl
insb
adc
test
sub
inc
xchg
orb
jb
scas
pop
sbb
in
sub
adc
out
jae
push
push
mov
or
mov
sahf
or
adc
mov
jae
enter
cwtl
arpl
jp
mov
stc
push
loope
jle
stos
and
xor
inc
xchg
jae
mov
and
icebp
lds
pop
jle
mov
std
sub
jb
jae
andb
imull
mov
shlb
jns
jbe
fimuls
adc
pop
cmp
pop
inc
or
mov
shrl
dec
pop
std
test
and
repz
in
mulb
scas
mov
jae
inc
rclb
jae
stos
inc
adc
xor
hlt
mov
cmc
into
or
imul
adc
insl
add
jbe
outsl
xchg
xor
sbb
jle
mov
add
jae
stos
pop
mov
adc
js
push
adc
add
in
scas
lcall
stos
cmp
inc
mov
test
push
sbb
mov
in
lods
ret
inc
or
push
jmp
cmpsb
sbb
into
jns
or
lods
cmpsb
test
sbb
and
adc
mov
test
jmp
adc
xlat
adc
and
pop
adc
push
cwtl
rcrb
xchg
mov
fs
data16
and
aaa
dec
xchg
adc
test
in
es
data16
shl
fs
push
push
push
xor
enter
dec
es
jl
rcll
fs
cmpsl
call
jmp
pop
mov
sbb
cmc
incb
inc
sub
mov
ret
xchg
in
push
fnsave
stc
sbb
test
ss
lahf
sbb
or
pop
mov
aad
mov
iret
ret
inc
xor
sti
hlt
ss
gs
fildl
add
and
rclb
cmp
ds
sbb
rcrb
fisubs
sub
pop
mov
xor
or
and
xor
xor
lods
and
cmpsl
cltd
popa
dec
xchg
mov
xor
jb
es
jecxz
xchg
cmp
xchg
es
insb
and
xchg
sub
pushl
sub
mov
add
cmpsb
lock
mov
dec
pop
xchg
popf
jae
data16
push
scas
xchg
lcall
iret
rcrl
daa
pop
push
lods
cld
in
lock
xchg
sbb
push
inc
jmp
jl
add
add
es
clc
or
push
sub
repz
or
repnz
push
mov
sbb
insb
inc
shlb
lahf
sbb
into
int
mov
insl
lods
notb
mov
mov
movsl
jae
test
pushf
andl
ja
sub
jp
cli
jbe
repz
pop
push
cmpsl
adcb
sbb
inc
mov
jno
jg
adc
fs
mov
sar
dec
xor
outsl
xchg
push
dec
push
push
aam
jmp
sbb
sahf
push
add
insb
xor
mov
jb
sub
xchg
xor
adc
andb
or
push
push
repnz
pop
pusha
mov
dec
mov
mov
into
test
adc
mov
fildll
aaa
ja
pop
push
or
mov
push
cmpsb
jb
push
cltd
in
test
sti
fs
in
and
jae
and
imul
jae
lcall
jae
das
lret
inc
or
iret
loope
and
xchg
lret
sbb
mov
dec
and
out
sbb
cmp
movsb
mov
jp
or
sbb
sbb
divl
test
std
adc
inc
divb
push
jbe
push
mov
or
fs
pop
cmp
jle
sbb
stc
mov
mov
sbb
ret
call
dec
xor
iret
dec
mov
push
fnstcw
js
test
enter
popa
repz
mov
cltd
adc
xchg
out
jae
add
push
inc
mov
mov
pop
test
or
scas
pop
stc
mov
jo
xchg
insb
mov
mov
mov
sbb
and
jb
bound
sar
js
mov
add
push
mov
hlt
fcmovnb
jle
jae
gs
test
ljmp
add
mov
push
pop
and
jns
leave
or
xchg
xchg
sub
clc
mov
cmp
in
nop
scas
push
nop
sahf
js
je
adc
mov
int3
outsb
lock
push
cmp
icebp
addr16
and
fdivr
mov
mov
scas
add
mov
mov
and
cltd
sbb
insb
or
sub
sub
push
jbe
mov
dec
outsb
les
push
subb
insb
add
test
es
popa
into
xchg
insb
xchg
lods
inc
add
jb
push
ss
mov
cltd
mov
cmp
pushf
addb
add
fsubrs
fdivrl
sahf
xlat
dec
jb
pop
pop
xchg
jecxz
mov
stc
adc
dec
add
rorl
pop
sub
cwtl
jae
insb
mov
mov
pop
dec
clc
popa
sub
adc
dec
cltd
or
xchg
or
aad
popf
cmpsb
test
or
inc
and
test
lods
or
xchg
sti
repnz
loope
push
mov
stos
dec
mov
stos
lcall
cli
outsl
mov
xchg
in
scas
fidivrs
push
jecxz
sub
sbb
test
lea
jle
jne
jno
lods
jmp
loopne
sti
lcall
mov
xchg
lcall
movsl
pop
fld
mov
xlat
cmpsb
xor
pusha
jnp
and
jecxz
inc
mov
imul
xchg
das
pushf
mov
lods
jae
fists
mov
popf
mov
ds
mov
adc
jae
loope
into
cmp
cmp
addr16
jb
xor
sbb
out
lret
je
and
stos
mov
mov
hlt
or
jae
nop
jge
imul
inc
lea
rorl
mov
lods
add
mov
data16
and
add
aaa
or
and
outsl
enter
add
sub
cmp
sub
add
cmp
xorl
inc
je
fsubs
xchg
mov
dec
or
mov
mov
cli
push
pusha
inc
pop
dec
or
pusha
xchg
rorl
dec
lods
xor
jp
cwtl
and
push
pop
ja
jb
or
fwait
rorb
push
mov
xor
sbb
mov
push
cmpsb
adc
add
or
jno
lods
mov
es
insl
add
test
xor
or
sub
xor
outsb
sbb
lock
add
adc
push
fsubl
test
loopne
repnz
add
sbb
sbb
shl
jae
fimuls
sbb
sbb
dec
pop
jbe
jg
add
mov
in
lock
mov
and
xor
xchg
dec
mov
mov
repnz
xchg
push
mov
fildl
cmp
xchg
daa
or
ljmp
pop
repnz
sbb
jle
mov
mov
fwait
lahf
imulb
adcb
fldcw
push
mov
sti
aaa
sub
sbb
out
mov
mov
fnstsw
pusha
scas
dec
add
mov
jne
repnz
imul
inc
adc
ret
gs
out
mov
ja
push
ljmp
push
repnz
jb
vphaddwd
xchg
jp
test
cltd
js
addl
xchg
and
and
cmp
aaa
ss
testb
xchg
sbb
lahf
ret
jle
enter
jbe
imul
cltd
inc
clc
fsubr
mov
out
mov
gs
into
in
pop
xchg
xor
jae
ret
out
push
adc
xchg
in
sub
pop
and
leave
mov
add
jae,pn
mov
jne
add
xor
jbe
lock
xor
lods
das
and
fidivrs
mov
push
pop
dec
lea
jnp
pop
push
add
add
mulb
mov
sub
cmp
scas
jmp
addr16
pop
jbe
xchg
pop
pop
xchg
repz
stc
scas
or
mov
je
test
and
je
and
jecxz
inc
cmp
loope
pop
xor
xchg
fiadds
push
dec
push
xchg
pop
cmpb
test
xor
jae
mov
mov
dec
lods
loop
dec
mov
push
int3
sub
shll
inc
repnz
test
stc
sbb
sub
and
shll
jg
outsb
cmc
inc
push
xor
sbb
sbb
sbb
je
xchg
fidivrs
stc
sarl
inc
sbb
in
fstps
ret
mov
xchg
dec
adc
adc
divl
pop
jae
mov
aas
mov
ret
gs
sbb
popa
and
in
sti
aaa
pop
js
scas
pop
push
cwtl
imul
push
xor
loop
aas
ss
mov
mov
sbb
scas
jp
rcrl
pop
sbb
mov
aad
pushf
sahf
xor
inc
repnz
outsb
mov
add
scas
aaa
inc
mov
jae
repz
out
mov
jg
add
in
cmc
sbb
sbb
enter
push
mov
sbb
int
push
add
pop
and
outsb
sbb
sub
xchg
call
insb
mov
cld
mov
jae
push
int3
mov
push
ljmp
icebp
bound
xor
scas
clc
imul
sti
es
fstpl
leave
xchg
call
xor
test
in
jo
jbe
lods
add
test
adc
stc
sub
push
fisubrl
icebp
sub
imul
inc
mov
in
shlb
insb
aad
cli
pop
cmp
es
test
dec
pop
lock
sub
jge
rol
cmc
pop
cmpb
adc
mov
push
push
mov
adc
sbb
out
mov
dec
xchg
ret
dec
jae
push
push
loopne
clc
dec
cmpsb
jl
rorb
sub
insl
cwtl
inc
cmp
xor
rorb
shrl
cmp
adc
mov
add
mov
sbb
jns
sti
cmp
jb
es
sub
ret
cmpsb
sti
ljmp
je
pop
jae
xchg
push
lret
xchg
adc
mov
ret
push
scas
xchg
mov
sub
pcmpeqd
jle
orb
test
jl
aaa
aad
dec
fdivs
pop
and
adc
mov
mov
push
xchg
popa
data16
addr16
mov
inc
nop
dec
je
cmp
scas
out
out
out
xchg
movsb
scas
imul
ljmp
and
lret
inc
aam
rorb
stc
sbb
enter
dec
xchg
test
sti
jmp
jecxz
mov
adc
jae
outsb
and
out
mov
mov
adc
xchg
andb
movsb
push
mov
and
fs
sahf
fsts
std
add
mov
loopne
out
outsb
xchg
outsb
cmp
inc
pop
sarb
jecxz
sbb
lret
cwtl
mov
push
sbb
jge
and
push
sub
js
cmp
sbb
inc
mov
xchg
aaa
fstpl
popa
mov
sub
scas
or
divb
xor
outsb
cmc
mov
leave
pop
cmpsb
cmc
pop
cltd
popa
dec
lret
hlt
add
jo
mov
leave
cmp
fstpl
adc
inc
orb
shlb
mov
fimull
mov
mov
dec
sarl
add
mov
pop
mov
cmpsl
or
ss
dec
push
mov
fnstcw
pusha
jno
mov
xlat
push
out
in
cmp
mov
pop
int
les
sub
lock
lea
adc
ja
lea
mov
test
cli
bswap
add
xor
sbb
push
pop
sub
adc
jmp
insw
sbbl
jge
jle
xchg
dec
scas
cld
pop
repz
leave
mov
je
stos
ja
pop
and
xchg
jns
xorb
js
pop
xlat
pop
dec
and
cmp
mov
scas
cmp
mov
jae
push
je
cltd
inc
stos
push
lock
jae
add
test
mov
jecxz
fisubrs
mov
cmp
pop
or
shlb
mov
ss
imul
mov
imul
das
pop
xchg
mov
int3
insb
mov
jae
xchg
and
movsl
mov
outsl
or
add
sub
ret
mov
sarl
xchg
mov
jnp
fidivrs
mull
mov
or
repz
mov
rep
dec
sti
in
mov
js
in
lar
arpl
addr16
jle
mov
negl
outsl
mov
leave
dec
daa
xor
aaa
jae
jmp
push
pop
lret
out
jns
pop
or
xor
jmp
cs
and
mov
lret
sbb
test
int
lock
and
ja
js
pop
mov
in
mov
sub
addr16
pusha
mov
mov
push
fstpl
mov
ret
xor
and
pop
add
jp
rcrl
dec
in
cltd
insl
aaa
xor
cmc
js
stos
sub
rep
pusha
popa
push
lcall
aam
mov
mov
cli
in
jge
add
popa
insl
cs
sub
cli
mov
or
xchg
loopne
ret
mov
in
sub
clc
mov
mov
and
mov
in
cld
sub
pop
addr16
mov
or
inc
cli
cli
cmp
scas
fsubrl
test
subb
pop
xchg
cmp
js
dec
popl
inc
sbb
cmp
jno
mov
push
aaa
jne
lods
cmp
mov
or
fnstcw
add
adc
add
jb
stc
insb
cli
or
mov
dec
call
push
dec
setbe
mov
cmp
mov
dec
jle
inc
int3
add
jne
popa
mov
hlt
cmpsl
cmp
xor
daa
ja
into
xor
pop
repz
adc
jle
iret
shlb
insl
rclb
clc
dec
sbb
je
ss
pop
mov
inc
loope
lret
adc
clc
in
and
fcomp
sahf
jo
xor
push
xlat
ffree
jle
inc
push
sarb
xor
cmp
mov
cld
lahf
sbb
es
xchg
ja
scas
sbb
mov
mov
cmp
mov
andl
lret
sub
cs
mov
dec
std
dec
addl
jle
aam
clc
test
jne
pop
sbb
fldenv
pop
cmpl
outsl
mov
jb
repnz
orb
push
mov
pop
nop
int
lock
cs
incl
pop
lcall
into
mov
clc
adc
sbb
add
es
pusha
jecxz
inc
fdivrl
push
mov
adc
sub
xchg
iret
add
sbb
sbb
test
inc
inc
mov
jecxz
pop
adc
mov
aam
push
loope
adc
jb
icebp
push
scas
push
inc
and
mov
popa
mov
stc
mov
inc
hlt
xor
and
cmpsb
testb
add
nop
cltd
popa
stos
insb
cltd
pop
fs
add
sub
outsb
pop
jg
mov
popf
pusha
jo
sbb
mov
xor
inc
lret
jo
adc
out
sub
rorl
xchg
int
fildl
and
inc
xor
jo
xchg
lahf
jmp
int
pop
jae
lcall
mov
sbb
pop
int
clc
subl
dec
sub
sbb
jge
pop
inc
add
cmovs
dec
or
cmp
imul
mov
repz
int3
insl
dec
cwtl
int3
mov
push
pop
push
jne
lcall
pop
adc
adc
xor
jbe
cmpsl
shll
iret
sbb
data16
pop
fldcw
into
sub
test
mov
mov
inc
mov
pop
pusha
push
jle
mov
addr16
sahf
shr
cltd
je
inc
jb
mov
and
iret
mov
fimuls
jecxz
mov
xchg
add
mov
int3
cmp
dec
jns
mov
ds
inc
clc
sbb
push
pop
stos
in
mov
and
inc
jno
jb
or
dec
cmp
mov
cmc
jo
pop
inc
mov
sbb
jae
out
aaa
or
icebp
cmp
mov
clc
daa
into
mov
sub
mov
test
fs
pop
pushf
outsl
cmp
je
mov
jo
subb
dec
insb
push
xor
cmpsb
lds
mov
je
jo
sbb
adc
fimuls
sub
push
jb
mov
push
jns
push
lea
mov
movl
push
mov
mov
idivl
lret
in
mov
aas
sub
push
jae
add
push
jge
mov
jmp
lods
cwtl
pop
lock
pop
cmpl
xchg
lods
push
mov
into
adc
sub
sahf
jle
mov
icebp
std
xor
push
mov
fdivrp
pop
pop
pop
aaa
dec
adc
es
dec
insl
movsl
je
mov
subb
mov
mov
scas
imul
ja
aaa
sub
cwtl
imul
sub
cmpsb
in
mov
call
out
mov
repnz
jp
imul
lock
std
push
cmpsb
scas
insl
jg
jns
movsl
dec
sbb
sti
clc
mov
hlt
sahf
adc
adc
mov
cltd
and
mov
rcl
jb
xchg
es
rcll
popa
jae
mov
jecxz
xor
pop
loope
jmp
imul
push
xchg
ss
lods
aam
cmpsb
mov
mov
lods
fstps
and
aad
jne
lods
sbb
cmp
mov
inc
js
clc
movl
rcrl
pushw
mov
cmp
mov
stc
xorl
adc
sub
icebp
and
nop
out
mov
mov
dec
fnstcw
pop
xlat
cmc
xchg
mov
popa
pop
das
sub
nop
popa
add
test
mov
sbb
ds
adc
dec
adc
adc
push
stc
push
inc
pop
divb
imul
ja
lods
push
or
add
jle
lods
jbe
test
outsl
mov
ss
jae
arpl
xor
popf
pop
inc
xchg
cmpsb
jp
neg
or
push
cmp
mov
jae
enter
mov
stos
lods
mov
insb
add
out
rclb
push
hlt
fs
or
lods
and
push
xchg
iret
xlat
ficomps
subl
cltd
push
pop
or
sbb
xchg
inc
cmp
pop
loopne
xor
jl
adc
sbb
dec
xor
jmp
fcompl
stc
cmpsb
dec
aas
xor
cld
cs
jb
mov
ds
inc
sub
fadds
xor
dec
mov
adc
cmc
call
cmp
inc
repz
scas
divps
test
mull
loopew
sbb
xor
push
leave
pop
test
mov
repz
fwait
stos
imul
test
lock
shl
imul
sbb
inc
cmp
push
jg
push
sub
fldt
popa
scas
adc
jg
mov
fisttps
std
jae
mov
sahf
sar
cmpsl
add
rcr
stos
mov
cmc
adc
js
lock
push
pop
leave
call
xchg
dec
les
loope,pn
dec
negb
mov
dec
cltd
cmp
xor
adc
jl
inc
mov
add
movsb
xor
xchg
subb
pop
mov
jmp
sahf
in
call
xorb
jmp
in
popf
pop
inc
xor
push
mov
lds
in
xor
call
outsl
fistps
push
mov
xchg
cmc
inc
push
iret
icebp
jo
dec
mov
popa
xor
mov
stos
pop
dec
out
lea
sub
add
adc
inc
inc
sbb
and
lret
es
pop
loope
mov
pop
push
or
insb
mov
ja
stc
test
popa
lods
sub
cld
pop
xchg
pop
push
xlat
out
fwait
mov
and
mov
loope
mov
cmp
mov
mov
es
pop
and
sub
mov
mov
mov
push
or
iret
cmp
shl
cmpsb
inc
leave
stc
inc
pop
ja
cmp
sbb
mov
inc
mov
andl
and
pop
fimuls
andb
add
mov
jg
sbb
hlt
add
mov
imul
mov
push
sub
or
aam
shlb
sub
sarb
adc
or
push
and
xor
ret
scas
xor
dec
pop
nop
sbb
sub
aaa
sub
adc
mov
call
jmp
xlat
pop
adc
mov
push
and
pop
add
in
push
mov
aam
hlt
int3
mov
sub
push
adc
or
or
inc
das
lods
pop
insb
and
pop
adc
cmp
sahf
cmp
in
test
cmp
cmc
movb
inc
push
mov
stc
or
sub
jo
mov
jns
sahf
cmpsb
push
inc
ret
mov
cmp
jnp
fsubrs
pop
dec
xchg
sahf
cmp
push
fnstcw
jbe
les
or
je
jbe
jne
call
repz
mov
repz
push
andl
jecxz
test
cmpb
inc
pop
loopne
iret
add
test
lock
and
xchg
mov
adc
lods
shlb
stc
sub
aad
inc
sbb
mov
mov
test
mov
pop
xlat
jno
loope
or
adc
imul
inc
pop
mov
lock
fwait
xchg
scas
pop
jmp
clc
and
rorl
ds
cmp
pop
mov
jns
xchg
cmp
jmp
pop
lret
les
xor
xor
sahf
fisubl
pop
push
dec
lds
pop
dec
sbb
aam
call
je
mov
sub
dec
dec
xchg
call
decb
xor
imulb
and
and
add
cwtl
sbb
fs
divb
imul
mov
inc
ljmp
inc
mov
outsb
cmpsl
mov
xor
xor
pop
add
aam
xchg
pop
mov
add
jle
pop
mov
cs
adc
shll
xor
int3
clc
pop
mov
mov
pop
cli
jns
push
xchg
push
pusha
adcb
pop
push
hlt
add
mov
jne
add
ljmp
pop
imul
pop
adc
sub
cmc
sub
cmpsl
inc
cmc
popa
xchg
dec
xor
mov
pop
fstl
aam
test
sahf
mov
pop
mov
sbb
jae
ret
clc
testb
fs
jno
inc
sbb
adc
adc
pop
test
add
cmp
test
insl
mov
movsl
lret
stc
mov
out
shll
mov
repnz
jns
addr16
mov
or
jecxz
divb
jle
pop
test
lret
adc
push
push
pop
jp
out
lret
shrl
dec
jge
test
push
jbe
sub
into
pop
popa
mov
or
ret
xchg
or
test
clc
and
pop
andb
push
xchg
inc
repz
cmpsb
imul
rorl
inc
or
das
or
scas
cmp
filds
xor
push
sbb
or
mov
add
bnd
add
cmpsb
mov
pop
subl
inc
or
or
mov
jno
addr16
mov
outsb
es
lcall
jns
js
inc
or
sub
mov
inc
jno
inc
inc
nop
nop
jnp
shrb
mov
inc
clc
mov
push
scas
pop
jle
outsl
lret
fbld
jmp
dec
lock
push
jo
popa
pop
inc
cmpsb
mov
sbb
push
push
lock
jle
inc
jb
fimuls
repnz
mov
dec
push
push
js
lahf
sbb
mov
and
dec
loopne
pusha
cmp
mov
push
shrb
lcall
xchg
test
push
cmc
divb
jne
jae
inc
jno
jl
js
push
shlb
or
mov
clc
mov
or
mov
mov
lret
int3
sbb
popa
push
fnstcw
mov
clc
int
mov
sbbb
mov
mov
fwait
es
fcomps
in
pusha
aaa
sbb
jl
mov
js
adc
mov
pop
xlat
clc
call
add
movsb
mov
xor
and
jo
fdivs
cltd
mov
push
popa
bnd
jg
popf
movsb
mov
sahf
lret
mulb
pop
cmpsl
ret
lea
jl
xchg
repnz
mov
sahf
mov
lret
and
pop
inc
inc
jecxz
push
popa
test
and
insl
or
xchg
xchg
jp
insl
jl
lods
xchg
das
xlat
test
cs
iret
push
insb
push
xchg
loopne
sub
sub
mov
mov
jp
bound
mov
sbb
fs
data16
xor
jae
jo
or
inc
and
or
orl
sbb
iret
mov
or
or
or
lds
xor
jae
sbb
ret
jle
adc
mov
notl
cmp
mov
scas
leave
lret
sbb
mov
shl
mov
xchg
and
loope
push
iret
mov
mov
pop
inc
cmp
and
jnp
xlat
ficoms
inc
cli
or
sahf
inc
imul
lret
sbb
pop
clc
mov
orb
add
out
ss
mov
leave
xor
adc
jo
pop
and
dec
xorl
sbb
out
sub
and
stos
mov
mov
jp
xchg
jmp
insb
mov
jae
icebp
leave
inc
xchg
enter
js
xchg
xchg
cltd
push
test
mov
clc
insb
push
js
jno
movsb
mov
fcmovnb
sub
xor
in
inc
cmpsb
pop
cwtl
ss
inc
adc
jo
add
mov
jo
rcrb
cmp
and
xlat
out
lret
pusha
repnz
jle
xchg
adc
and
xorb
or
insb
pop
xor
push
xor
subb
ret
iret
int
push
lret
cmc
sti
adc
push
and
mov
mov
aaa
mov
js
shr
decl
mov
push
cld
pushf
and
adc
xor
sti
mov
sbb
sub
vpmacsdd
adc
push
lods
pop
sub
sbb
data16
cmc
push
sub
mov
pop
mov
xchg
or
cmp
pop
lock
test
xchg
inc
adc
adc
cmp
pusha
fmuls
xchg
jne
mov
sub
sbb
sbb
sub
pushf
rcr
test
loop
add
dec
lods
adc
xchg
dec
repnz
daa
movsb
ljmp
into
mov
adc
push
pop
sbb
xor
inc
fabs
cmc
pushf
pushf
outsb
movsb
dec
pop
adc
add
insl
inc
and
mov
push
call
fldt
cld
stos
imul
mov
fdivl
sti
mov
lds
pop
loopne
sub
cmp
mov
mov
scas
jle
fmul
movsb
inc
cwtl
out
test
jle
dec
inc
pushf
and
loop
push
insb
add
lcall
orb
xor
fstpt
das
ljmp
std
add
shrl
push
jp
dec
pop
stos
and
loopne
push
lahf
nop
sbb
insb
push
lcall
push
insb
or
aas
sbb
aaa
int
stos
push
mov
and
push
cmp
adc
mov
inc
mov
inc
push
push
pop
add
push
stos
xor
and
lret
sub
pop
xor
and
xchg
push
adc
pop
popa
cmp
mov
iret
mov
ja
addr16
ss
xor
mov
pop
sub
lcall
jmp
pop
mov
push
cwtl
gs
ss
inc
jne
iret
dec
jae
push
insb
sub
xchg
add
rcrl
jb
mov
jle
movsl
pop
mov
fisttpll
and
outsb
xor
xchg
iret
in
imul
lcall
js
push
bound
jmp
add
xor
cwtl
int3
jle
or
add
ja
pop
loope
jmp
aaa
mov
adc
mov
mov
push
jb
cwtl
jl
test
mov
mov
sti
mov
push
sbb
out
out
mov
lods
mov
push
inc
mov
pusha
xor
xchg
cmp
cwtl
jp
adc
jo
pop
and
pop
dec
adc
cltd
dec
cs
jge
ret
int
cmpsb
dec
pop
cmpsl
add
stc
repz
mov
xor
sub
pop
dec
jge
mov
jns
mov
aad
mov
sub
test
xchg
xchg
xor
xchg
push
xor
jge
or
xchg
out
adcb
sbb
popa
mov
inc
repnz
mov
cltd
in
test
call
pop
sahf
sub
insb
dec
cmpsl
inc
inc
inc
fs
sbbb
addb
sub
jle
push
in
out
outsb
aaa
test
jb
imulb
in
sub
pop
cmp
mov
sub
inc
adc
mov
push
into
mov
fisttpl
test
or
xor
stc
je
outsb
jge
jns
popa
popf
loop
jbe
xor
jns
cltd
mov
hlt
ljmp
inc
aas
js
add
addr16
mov
inc
sti
ret
pop
addr16
push
int3
lahf
and
imul
mov
inc
sub
stc
outsl
pop
sbb
mov
imul
imul
mov
pop
pushf
and
cltd
movsl
sub
nop
icebp
cmp
mov
sub
add
adc
cmp
push
push
call
add
jmp
push
jns
xor
sahf
dec
mov
testl
dec
insb
or
pop
not
sti
out
arpl
pop
and
mov
xor
addr16
dec
psllq
pop
xor
jle
jno
and
sub
xchg
mov
lret
mov
daa
xchg
mov
pop
mov
out
push
mov
push
int
imul
push
lods
sbb
mov
aaa
insl
shlb
dec
scas
xor
push
test
adc
repz
xchg
out
xlat
inc
mulb
sbbb
aam
or
push
jb
add
popa
fldl
inc
insb
out
push
mov
dec
stos
xor
pop
mov
mov
sti
ljmp
push
adc
adc
movsl
shl
lcall
vcvtsd2si
addr16
and
add
push
add
ds
lea
adcb
loop
pop
dec
mov
inc
and
push
scas
xchg
scas
jbe
push
push
jle
push
mov
sub
mov
pop
jmp
jno
mov
sti
hlt
in
xchg
orb
push
sub
push
or
subb
les
xor
cli
jo
pop
mov
scas
sahf
adc
adc
jne
adc
outsl
xchg
adc
mov
cs
mov
push
hlt
aas
cltd
out
jbe
pop
pop
sti
arpl
rcll
inc
xchg
cwtl
icebp
xor
test
sti
test
inc
fs
xchg
mov
inc
push
jnp
jmp
xor
mov
cs
cltd
jns
xchg
push
jns
ss
and
cmp
sub
pop
jns
je
gs
mov
xchg
imul
ret
mov
mov
xor
jns
adc
sub
js
stos
jl
fdivs
jne
add
lods
cmp
push
jl
cmp
mov
sub
outsb
bound
add
push
enter
mov
jle
mov
adc
jne
xchg
push
pop
sbb
push
in
xchg
jae
mov
push
jb
push
xor
add
cld
mov
insb
ss
xchg
push
imul
enter
mov
imul
cmp
push
mov
loopne
jne
add
mov
cmp
shl
xchg
cwtl
inc
insl
cltd
je
in
pop
sbb
jae
or
sub
movsb
imul
xor
rorl
push
out
push
js
xchg
xor
fwait
pop
lret
jae
pop
popf
sub
stc
add
sbb
add
jge
ja
mov
aad
add
mov
dec
cmp
xchg
daa
mov
jnp
push
jae
fistpll
imul
dec
out
mov
out
mov
mov
pop
jns
nop
pop
sahf
loope
jmp
pop
xchg
cmp
mov
sbb
shrl
sbb
cmp
popa
cmpsl
mull
pop
sbb
mov
jo
jle
movsb
dec
xchg
ret
xchg
cmp
and
pop
out
dec
dec
mov
mov
test
out
xchg
clc
jne
in
sbb
push
in
mov
divb
push
push
mov
cwtl
pop
shll
js
adc
cmp
mov
mov
enter
xor
mov
inc
out
jg
cmp
movsl
dec
add
xor
test
outsb
xchg
and
mov
jno
mov
daa
mov
mov
movsb
sub
jp
in
bound
outsl
mov
es
test
xor
jl
cmpsb
sbb
cwtl
nop
dec
mov
xchg
je
fs
inc
loopne
mov
or
cltd
inc
add
mov
push
bound
push
pop
dec
test
inc
push
mov
xchg
ljmp
inc
sbbb
inc
sbb
ss
mov
cmp
fst
inc
inc
xchg
or
inc
push
aam
pusha
pop
lods
sbb
jns
imul
jo
push
mov
xchg
popa
and
add
out
and
rorb
xor
sbb
push
adc
xchg
lds
popf
icebp
mov
clc
outsl
xchg
mov
dec
jns
sub
adc
test
mov
and
mov
xchg
negb
jl
test
ss
mov
arpl
inc
add
sub
aam
cwtl
add
inc
xchg
pop
sbb
cmpsb
pop
call
nop
test
es
mov
push
sbb
pop
push
pop
mov
or
pop
cmp
pop
pop
push
mov
sarl
cltd
or
fst
add
mov
cwtl
aaa
push
aam
je
sbb
fdivl
or
in
push
xor
dec
inc
add
cld
into
xor
or
push
push
push
call
lahf
cltd
mov
xor
movsb
sub
mov
mov
adc
cmp
jp
sbb
sbb
scas
int3
ss
jb
lods
orl
in
pop
inc
clc
not
mov
mov
dec
cmp
sbb
pop
pop
push
and
sub
xlat
lods
aas
mov
js
jno
sub
outsb
inc
adcl
mov
clc
and
fisttpl
jnp
incb
shlb
stos
xlat
jbe
inc
sub
mov
outsb
push
dec
cmc
sub
adc
pop
jae
pop
push
dec
shll
in
test
pushf
test
push
das
scas
add
aas
es
mov
insb
xor
js
add
lahf
dec
lds
sbb
push
inc
in
nop
push
push
xchg
xchg
inc
loope
arpl
adc
xchg
mov
lcall
or
and
xchg
mov
jo
movsb
es
pushf
xchg
push
xchg
scas
cmp
mov
dec
and
daa
mov
dec
or
inc
dec
stos
cmp
cmpsl
inc
lods
dec
arpl
addr16
ja
mov
mov
fs
add
adc
add
into
sub
ss
jns
and
pop
dec
sbb
jns
adc
add
into
cwtl
push
inc
clc
xor
cmp
pop
jp
sarb
stc
aas
dec
ja
das
mov
xor
sar
std
jmp
xchg
mov
ds
fwait
cmp
pop
insl
mov
xor
in
insl
mov
call
cmpsb
xchg
or
jg
jg
rcrb
jns
adc
jle
add
call
rolb
sub
xor
insb
dec
vshufps
outsb
xchg
data16
mov
sarb
fildll
add
push
jmp
test
popa
cmpsb
jae
xchg
sbb
and
inc
popa
add
jecxz
ret
xor
mov
cmpl
pop
push
mov
ja
or
arpl
mov
test
xor
cmpsb
je
push
mov
mov
test
adc
aaa
fldt
push
mov
push
xor
push
sub
jge
mov
push
pop
stc
inc
sbb
adc
or
cmp
push
or
mov
fistps
notl
out
mov
js
and
dec
dec
fcomps
pop
loope
dec
adc
test
xchg
ficoml
and
dec
je
mov
push
adc
repz
pandn
fwait
xor
test
sub
jb
pop
sbb
testb
jge
inc
xor
movsl
pop
jbe
jg
lds
cmpsb
jae
std
xor
sbb
repz
aam
jo
push
loopne
and
test
jge
hlt
mov
bound
sbb
adc
mov
sub
adc
fdivl
cmpsl
sbb
insb
or
movsb
mov
js
mov
int3
xor
js
add
clc
in
push
mov
add
jae
insb
cmc
push
aaa
sub
jne
mov
mov
inc
mov
vmread
mulb
fstl
or
out
into
fs
mov
mov
test
test
pop
jns
popf
push
sub
jp
out
cltd
mov
stc
cmp
mov
pop
cli
ret
scas
mov
mov
sub
filds
pop
dec
jg
popf
inc
out
mov
inc
and
rclb
sub
out
lods
fnstcw
jae
push
mov
jns
sub
insb
lds
cvtdq2ps
dec
jbe
push
mov
in
out
pop
jo
jg
scas
push
inc
cmp
rolb
pop
lods
leave
out
cltd
imul
pop
popf
out
push
es
xor
mov
mov
mull
pop
rcrl
dec
negb
xchg
ror
pop
fists
mov
mov
js
cmp
fisubl
push
inc
fnstsw
dec
fisubrs
into
mov
cmp
inc
mov
xor
iret
mov
dec
adc
mov
mov
jp
es
adc
xor
ret
sbb
xlat
pusha
fcoms
cmp
adc
push
mov
adc
xor
xchg
and
mov
insb
push
mov
xchg
int3
movsl
mov
mov
adc
xor
lea
lcall
aad
subl
sahf
ljmp
or
out
data16
jp
lret
vpshufhw
xchg
mov
xchg
sbb
ficoms
sti
mull
cltd
fbld
xor
fadds
jae
add
cltd
sbb
stos
mov
pushf
ret
or
sbb
inc
jle
xor
cmc
rcl
mov
icebp
push
fdivrs
jmp
mov
pushf
cmp
mov
mov
cltd
pop
mov
aam
jle
mov
push
dec
mov
adc
mov
and
es
and
pop
adc
add
or
cwtl
ss
push
cmp
sbb
or
stos
stos
push
push
pop
sub
push
js
ret
lds
fcoms
jle
and
js
nop
sbb
stos
leave
sbb
mov
insb
add
mov
shrl
daa
sbb
dec
push
cltd
and
movsb
mov
mov
pop
mov
mov
mov
pushf
bound
adc
inc
jp
xchg
pop
je
xchg
xchg
repnz
mov
clc
mov
jecxz
inc
lcall
into
xchg
mov
ljmp
jmp
aas
popf
mov
bound
cmpsl
rclb
xchg
pop
mov
cld
sub
adc
add
push
test
loop
hlt
mov
sbb
jo
push
fidivs
mov
xlat
inc
mov
and
sbb
add
stos
xchg
mov
dec
sahf
sub
cmp
and
xchg
or
adc
and
ret
cs
and
imul
ds
imul
jl
popa
mov
or
pop
inc
cmp
or
jns
and
xor
mov
jae
loope
lahf
orl
or
xchg
scas
clc
aaa
test
add
sub
cmp
icebp
pop
or
test
mov
sarb
loope
lds
mov
inc
andl
dec
cli
jecxz
les
imul
or
jns
jecxz
fsubrs
sub
outsl
sbb
sub
pop
or
loope
adc
jne
data16
lds
ror
js
pusha
les
xchg
pushf
push
or
xchg
stc
es
insb
jne
pop
imul
scas
aaa
push
inc
or
mov
mov
cmp
es
pusha
mov
jno
ss
cmp
ret
mov
inc
insb
xor
loop
and
xlat
arpl
repz
mov
xor
test
mov
inc
or
adc
sbb
pop
cwtl
and
or
iret
lds
imul
pop
stc
hlt
pop
add
movsb
cmp
js
and
gs
xchg
jo
and
push
test
push
adc
stos
sbb
cmc
cmpl
pushl
mov
mov
mov
movsb
sbb
sbb
dec
fldenv
std
lds
xor
jb
fmul
cmp
xlat
add
stc
push
testb
clc
adc
xlat
cmpsb
aad
jo
xor
fnsave
mov
jo
call
mov
test
mov
rclb
xchg
loopne
xor
js
pushf
inc
fadd
inc
test
aas
sub
and
push
and
mov
sahf
jp
sbb
push
in
adc
pushf
cmp
mov
mov
xchg
inc
jecxz
sub
test
xor
pop
xor
inc
movsl
adc
xchg
rcrb
pop
test
les
insb
imul
int
mov
mov
inc
mov
movsb
mov
cmpsb
repz
hlt
sbb
sbb
mov
and
or
jl
nop
scas
jns
les
mov
sbb
dec
xor
pop
insb
push
roll
ljmp
dec
scas
out
push
xchg
test
pop
mov
pop
push
das
xlat
loop
lods
mov
cs
adc
pop
inc
mov
lods
rolb
shld
int3
gs
pop
scas
add
lahf
je
dec
ss
push
jmp
dec
fs
pop
mov
mov
gs
rolb
mov
or
mov
addr16
out
fcmovnbe
subps
push
ret
pusha
enter
daa
xchg
into
fisubrl
push
sbb
in
in
jno
enter
dec
push
sbb
adc
adc
xchg
arpl
jl
out
call
add
insb
enter
test
inc
adc
cmc
mov
pop
dec
test
scas
mov
mov
pop
es
mov
sbb
insl
mov
insl
xor
mov
cmp
mov
dec
jbe
sub
lret
jo
inc
std
loope
push
repnz
jae
mov
mov
pop
xchg
or
in
aas
push
shll
and
mov
ljmp
imul
cmpsb
mov
jb
lods
leave
js
lods
jno
inc
push
ss
fsubs
pusha
xor
je
pusha
out
xor
js
out
ficoms
push
mov
xchg
sub
rcrl
jno
sbb
jb
test
xor
scas
jne
jmp
mov
jb
lods
push
xchg
lret
push
cmpsb
xchg
sahf
cmpsb
clc
sub
in
jae
paddd
popa
cmp
inc
add
es
cmpsb
fsubs
out
jne
shll
shll
xor
jno
test
or
pop
scas
jo
lock
or
mov
leave
cmc
xor
xor
or
push
mov
or
inc
and
xor
pop
push
dec
dec
xor
mov
sahf
outsl
mov
fnstsw
shl
cmp
in
in
ja
dec
add
jge
xor
adc
add
ss
jg
cmc
insl
inc
xlat
out
inc
mulb
les
mov
mov
pop
cmpb
mov
cmp
fstps
test
mov
aam
xchg
int3
test
into
sahf
jge
mov
pop
cwtl
xchg
or
sbb
or
shrl
push
sub
mov
xor
xchg
sub
pop
sub
cwtl
jge
movb
and
jno
xlat
jmp
hlt
inc
mov
jmp
or
fcomp
sub
pop
fdivrs
jge
add
inc
adc
pop
clc
test
or
jl
push
andb
cmpsl
xor
inc
test
out
roll
jo
cmp
jbe
pushf
xchg
sahf
xchg
xlat
repz
enter
push
clc
add
and
mov
add
fisttps
stos
repnz
test
sbb
mov
popa
data16
push
sub
cmc
lds
mov
dec
test
leave
push
jns
insb
xchg
adc
aas
clc
inc
inc
movsl
nop
pop
sbb
mov
lock
repnz
and
pop
jno
xor
adc
iret
sub
jecxz
push
and
insb
cs
out
js
jle
xchg
cbtw
out
xor
mov
xlat
imul
mov
cmp
and
sbb
jo
and
movsb
mov
lahf
stc
push
jle
mov
nop
leave
clc
les
mov
test
movsl
mov
movsb
jno
cli
es
sti
jmp
fldenv
jns
divl
inc
les
dec
pop
cmp
rcrb
bound
mov
loope
jl
loope
xlat
mov
popf
add
push
stos
jp
je
xchg
ljmp
and
push
jb
jns
adc
push
fdivs
testb
test
aas
pop
and
mov
adcb
adc
xlat
dec
and
inc
out
fs
bound
insb
icebp
outsb
jle
jle
clc
cmc
jl
cmp
lods
js
mov
pushl
jb
jbe
cmc
aam
xor
ja
insb
add
imul
sbb
mov
out
rolb
outsb
es
arpl
or
jmp
push
xchg
sbb
hlt
aam
aad
pop
sbb
testb
mov
dec
insb
jo
test
mov
cwtl
sti
shlb
xor
lcall
in
pop
clc
jle
xor
clc
into
jne
push
jbe
dec
push
dec
repz
mov
adc
rcrl
and
lods
bound
imul
mov
jae
xchg
jl
xchg
out
jbe
addl
out
arpl
fs
push
icebp
clc
fwait
out
outsl
xor
cmp
cmp
inc
jle
repnz
aam
inc
ss
add
mov
xor
fistpl
je
inc
adc
arpl
xchg
inc
inc
push
jmp
inc
sbb
stos
insb
insb
mov
jl
cmc
out
stos
lahf
pop
aaa
and
jno
popf
xchg
sbb
test
and
mov
inc
lods
mov
push
push
leave
sub
xchg
inc
jns
push
dec
mov
pushw
adc
inc
dec
and
xchg
fcomps
pop
pop
add
fldcw
mov
in
ds
sub
jns
call
mov
stc
out
lds
sub
insl
pop
mov
pushl
ss
fistpl
push
mov
enter
sbb
and
push
xor
adc
sbb
aam
pushf
inc
lods
divl
sarb
mov
aaa
mov
inc
pop
in
lret
insl
add
xor
test
inc
lds
ficomps
xchg
stc
push
mov
mov
imul
cmp
jne
sub
jae
dec
aad
test
push
cmp
lods
jne
mov
enter
jg
push
out
jmp
mov
mov
insb
mov
rcrb
jg,pn
mov
cltd
jb
pop
cmp
je
rol
mov
mov
in
ss
clc
jne
cmp
mov
idivb
test
push
pop
mov
aad
mov
mov
and
sub
lods
popf
xor
inc
ds
push
shl
cltd
push
cs
jg
sub
cmp
insb
adc
aaa
xor
adc
cmpsb
jns
std
test
sub
enter
push
leave
sub
mov
mov
sbb
js
loopne
lret
xlat
pop
mov
fmul
fistl
hlt
pop
aam
push
mov
mov
adc
push
clc
ret
push
daa
cs
and
aad
imul
mov
sbb
push
add
adc
inc
cmp
pop
enter
or
ds
mov
push
int3
rorb
shll
movl
push
lcall
sub
lock
fwait
jbe
cli
ds
pusha
pop
mov
sub
inc
loope
dec
test
cs
xor
xchg
jo
ljmp
mov
push
mov
push
xchg
rep
cmp
mov
imul
or
imul
dec
movsb
cld
repz
inc
dec
pusha
mov
push
scas
mov
stc
mov
push
lods
notb
cmp
pop
mov
or
into
jge
xchg
enter
push
ror
repz
scas
stos
jmp
pusha
and
mov
and
xor
ds
mov
mov
adc
cmp
and
in
mov
pop
add
pop
arpl
jecxz
jge
sbb
testb
pop
and
sub
test
or
mulb
insb
dec
pop
inc
dec
cwtl
mov
in
repz
or
xor
insb
cmpsb
je
aas
pop
mov
in
data16
loopne
xlat
out
sub
jbe
sbb
mov
int3
xchg
arpl
fcmove
jle
jae
mov
push
stos
sub
lock
fucom
fwait
rorb
cmp
push
aad
xchg
or
push
cwtl
sbb
mov
clc
mov
push
xor
ss
fdivs
xor
mov
jns
andb
sbb
inc
pop
dec
mov
in
sub
testb
je
sbb
xchg
es
jns
jg
adc
pop
scas
mulb
roll
pop
cmpsb
scas
ja
shll
jae
mov
push
xchg
sbb
mov
mov
and
mov
sbb
cmp
push
aaa
int
stos
and
sbb
xor
push
mov
out
jmp
test
cmc
xchg
in
sti
outsb
mov
jmp
or
xchg
mov
jns
dec
ret
mov
push
cmpsl
pop
pop
pminub
jne
icebp
idivl
fisubrs
mov
push
rcrb
lods
test
jp
add
aaa
test
cmpb
ja
das
mov
popa
jp
lret
xor
leave
mov
cltd
dec
mov
hlt
jns
mov
inc
xchg
test
sbb
cmpsb
call
xchg
lret
popa
inc
out
xorb
add
mov
cmp
insb
mov
popl
repz
sub
push
jecxz
jbe
xlat
shlb
test
dec
test
fnstcw
lock
into
dec
and
cmp
test
movb
pop
es
cs
mull
pop
jb
out
xchg
cld
in
daa
sub
mov
fsubl
inc
pushf
jae
cwtl
jae
ljmp
push
jbe
jle
movsb
and
inc
loope
stc
push
or
in
cmp
mov
pop
xchg
aam
adc
fwait
insb
fidivrs
out
add
mov
xchg
xchg
sub
scas
cmp
loope
inc
stos
inc
mov
push
pop
dec
jne
jg
mov
jb
pop
mov
xchg
pop
jbe
je
cmpsl
int
inc
mov
mov
pop
jecxz
ret
daa
lds
addb
sbb
sbb
sbb
inc
and
cmpsl
out
out
fcoms
mov
xor
sbb
cmp
mov
sub
fdivs
jmp
inc
out
mov
fcmovne
xor
or
sbb
push
dec
inc
mov
js
rcl
ljmp
mov
jns
sbb
inc
insb
cmpsl
test
jbe
aad
pop
or
rclb
jno
cwtl
js
rcrl
jle
cmpsl
subl
into
adc
sub
mov
in
das
xorb
pop
pushf
fisubrs
sub
adc
lock
adc
pop
jno
push
pop
data16
xor
cmp
xchg
subl
add
pop
dec
in
sti
pop
ret
lret
fs
mov
and
adcl
and
xchg
pop
ss
jecxz
inc
lahf
insb
mov
aas
addl
in
sahf
sub
jae
adc
jns
push
mov
jae
out
in
pusha
mov
dec
push
adc
sub
fcoms
sbb
pushf
pop
pushf
sub
es
pop
adc
xrelease
lret
dec
jp
jo
xchg
xor
push
dec
xor
mov
xor
push
ja
mov
cmp
loope
cmpl
jbe
dec
test
mov
pop
mov
dec
arpl
loope
dec
cmp
jmp
xchg
cmp
sub
jle
pop
inc
and
sub
jae
and
inc
sbb
cmp
inc
clc
xchg
adc
mov
in
imul
addr16
clc
pop
sub
fsub
fistpl
push
aad
cwtl
inc
add
and
div
jno
insb
inc
push
xchg
mov
js
repz
repnz
sub
mov
sbb
sbb
bound
add
push
push
xchg
out
mov
sbb
pop
add
ljmp
jge
jae
xor
jns
mov
popf
push
das
mov
call
mov
mov
and
push
rol
jg
add
je
cwtl
mov
mov
fadds
pop
stos
gs
push
mov
out
pusha
push
ja
incl
lea
cmp
mov
cltd
mov
push
dec
sahf
dec
push
mov
mov
add
mov
pop
mov
movsl
shr
popa
dec
mov
pop
and
mov
push
imul
inc
decl
je
mov
lahf
xchg
sahf
out
fistpl
xor
out
fisubrl
adc
jae
jl
adc
push
loopne
ficoml
fptan
adc
in
push
xchg
into
loop
cltd
out
ss
xor
loopne
pop
adc
dec
pop
inc
movsb
outsb
popf
out
sbbb
xchg
and
jnp
mov
mov
test
test
and
cmp
sbb
push
mov
push
jg
ss
xchg
call
ds
js
stc
cmp
popl
cld
es
je
fisttpl
pop
pushw
sbb
stc
add
js
and
dec
mov
shll
jae
inc
rcll
jbe
imul
or
fisubl
mov
or
or
pop
arpl
movsb
inc
outsb
xchg
ret
stc
cltd
sub
inc
out
fwait
aas
mov
pushf
cld
ret
adc
adc
inc
out
ss
xor
push
sbb
mov
jge,pn
or
in
sub
pop
lea
int3
mov
dec
add
data16
stos
add
mov
sbb
jbe
push
mov
add
xor
cwtl
xor
mov
cs
stc
lods
push
mov
aam
mov
add
or
das
stos
jg
cltd
gs
xor
hlt
or
lcall
rorb
inc
loope
movsb
pop
dec
cwtl
or
test
incl
filds
mulb
dec
pop
jbe
fsubrs
inc
lock
xor
mov
mov
mov
clc
js
add
lea
daa
sub
es
sti
je
sbb
adc
insb
repz
std
mov
pop
jecxz
out
aaa
rcrl
stos
sbb
mov
adc
jae
loop
or
loope
mov
das
xlat
ljmp
cmp
pop
test
xlat
dec
lret
xchg
adc
fidivl
bnd
adc
aaa
inc
orb
adc
push
jno
jns
ds
fs
adc
and
js
mov
cmc
jecxz
mov
xor
enter
mov
pusha
inc
negl
inc
icebp
jne
aad
inc
mov
jl
iret
loop
mov
and
test
mov
test
jae
repz
inc
lods
push
insb
loop
loopne
bnd
push
push
jo
dec
outsb
pop
mov
mov
add
jno
imul
mov
pop
mov
jnp
jae
sbb
out
shl
cmp
negb
jns
dec
cmpsb
les
fs
out
js
sub
xchg
push
das
mov
orl
push
cltd
pop
sub
aaa
movsl
sub
xchg
mov
in
adc
sbb
je
icebp
scas
inc
fs
lods
push
outsb
xchg
cs
fstpt
xor
insb
inc
mov
sar
lds
push
mov
jae
add
mov
bound
jmp
insl
fwait
mov
mov
pusha
cmpsb
std
aas
push
movsl
dec
cwtl
or
mov
and
adc
xor
jo
xchg
pop
pop
or
push
sbb
xchg
imul
inc
xchg
lahf
jl
mov
and
je
outsb
pop
je
js
add
iret
ja
ret
sub
jge
call
je
mov
pop
pop
insb
pop
cwtl
dec
push
jg
push
stos
xor
push
pop
sub
push
clc
pop
dec
pop
sarl
pop
daa
push
push
xchg
dec
push
test
test
testb
stos
pop
and
mov
data16
sbb
adc
inc
mov
push
cmp
jle
out
je
jmp
xchg
pop
pushf
sub
imulb
push
cmp
jle
push
sahf
and
clc
jge
push
scas
out
xor
mov
sbbl
in
data16
mov
mov
inc
neg
push
mov
mov
push
loop
add
jns
and
mov
cwtl
mov
pop
mov
in
cmp
ja
insb
ficoms
adc
pop
data16
xchg
sub
sbb
or
flds
mov
fwait
pop
je
sbb
decb
aaa
push
emms
es
cltd
fidivrs
inc
jno
test
nop
xor
cwtl
in
cmp
adc
stos
xor
jecxz
rcrl
jg
movsb
inc
push
and
repz
sahf
adc
clc
cmp
dec
in
test
push
into
push
iret
test
sbb
test
inc
daa
test
clc
insb
dec
pop
lods
loop
scas
jb
pop
jl
test
test
test
testb
push
inc
push
testb
push
pushf
add
adc
jns
cwtl
jle
push
push
inc
cmpsb
fwait
jmp
push
or
push
jb
rorb
jo
jecxz
fsubrl
mov
mov
addr16
cmc
pusha
and
push
and
rclb
mov
loop
pop
cmp
mov
xlat
push
pop
iret
mov
dec
mov
daa
pop
push
cmc
aaa
jno
les
jne
mov
or
push
out
and
outsl
std
out
xchg
cmp
mov
movsb
ss
inc
dec
push
mov
push
arpl
add
jmp
adc
popf
cltd
out
jne
sbb
sub
xor
mov
lods
adc
ljmp
imul
dec
int3
push
and
pusha
pop
loope
ds
adc
in
sbbb
fucomp
mov
cwtl
popa
jo
stos
je
imul
gs
xor
pop
loope
xchg
sbb
lret
out
pop
pushf
mov
mov
xorb
pusha
push
cmp
cwtl
test
adc
and
testl
pop
iret
xchg
enter
push
dec
stc
mov
lds
and
xchg
mov
dec
or
xor
jle
imul
sbb
xor
insb
into
daa
pop
jne
cmpsb
dec
push
sbb
push
push
pop
les
mov
push
daa
sbb
test
push
xlat
jb
xchg
mov
clc
jle
outsl
lds
inc
stc
mov
and
cmp
popa
push
stc
jmp
sbb
mov
flds
fimuls
ret
sub
fmuls
xor
dec
and
or
int3
inc
insb
rep
repnz
loopne
pop
mov
loopne
mov
and
scas
stc
cmp
in
pop
outsb
fldcw
pop
cmc
cwtl
in
mov
inc
lret
movb
imulb
popa
adc
jecxz
aam
sahf
scas
outsb
sbb
sub
mov
or
je
js
xchg
sub
jae
lock
mov
push
cmp
mov
in
ds
in
pop
cmp
push
shlb
push
xor
insl
adc
pop
insb
rorb
xchg
gs
inc
inc
pop
rclb
mov
adc
insb
jg
and
adc
sub
sub
loopne
mov
gs
cmp
pop
pop
popa
call
sub
movsl
inc
test
popa
imul
fcom
cmpsb
imul
xchg
inc
clc
fidivrs
xchg
push
popf
mov
mov
cmp
lods
inc
jmp
fldcw
sbbl
add
adc
je,pn
xchg
inc
shll
pop
ds
push
movsl
cs
call
stos
je
pop
mov
sbb
add
xor
fprem
stos
inc
int
adc
push
cmp
stos
push
imul
cmpsb
cwtl
repz
test
fisubs
push
cmp
ljmp
bound
stos
std
cmpsb
dec
sub
scas
jle
es
pop
jmp
mov
int
jo
outsb
push
mov
cmp
fdiv
leave
fstps
fidivrs
sbb
xor
cmpsl
push
cmc
push
jae
fisubs
pop
sbb
js
adc
mov
or
mov
push
push
jp
aad
push
jl
pop
sbb
xor
cmpsb
jbe
iret
add
or
test
ret
ljmp
and
mov
and
stc
sub
cmpsb
jbe
adc
fidivrl
jns
sbb
mov
and
cmp
push
outsb
insb
pop
movsb
jne
mulb
jo
jle
les
or
lods
cmpsl
ss
pop
mov
dec
cs
cmovne
clc
cs
cmp
stc
lret
fs
jmp
cmpsl
cmp
mov
jo
out
lods
mov
in
imul
mov
xchg
pop
sahf
in
fidivrs
shr
in
and
loope
lahf
test
pop
mov
std
jmp
mov
ret
jns
mov
dec
out
adc
es
lds
pop
lcall
dec
xchg
cmp
or
imul
ret
sbb
jecxz
gs
nop
mov
mov
mov
rolb
sub
mov
dec
push
call
push
push
lea
inc
cltd
push
sub
arpl
fcomps
jbe
sub
xor
mov
test
jb
adc
inc
sbb
lahf
jle
loop
repz
pop
sahf
repz
xchg
cld
sbb
xchg
jbe
repnz
andl
jg
sub
inc
push
jno
sti
pop
mov
test
mov
or
sbb
or
scas
shll
data16
mov
test
outsl
cmp
xchg
fldt
sbb
icebp
cwtl
pusha
ret
popf
mov
shll
xchg
jns
imul
call
jne
or
mov
mov
js
mov
insb
pop
mov
rorl
cmp
dec
rorb
xor
das
mov
hlt
into
push
sbb
push
or
xor
and
mov
scas
ja
mov
and
and
dec
and
into
sbb
push
push
mov
mov
clc
movsl
loop
push
test
sub
pop
xchg
jne
je
mov
mov
pop
mov
push
pop
jbe
and
imul
add
and
mov
int
fstps
shll
js
push
cmp
pop
out
dec
xor
mul
les
mov
and
mov
fnstcw
mov
push
lock
lahf
mov
dec
mov
sbb
ljmp
ds
jne
mov
adc
jo
jae
or
inc
xor
jp
pop
mov
jne
add
inc
insl
test
rolb
in
pop
orb
push
and
adc
outsb
jne
mov
sahf
push
jo
stc
mov
int3
jmp
and
inc
dec
in
and
aas
cwtl
scas
and
imul
add
dec
jg
sub
xor
push
je
adcl
xchg
lahf
push
outsb
xchg
jo
push
adc
je
clc
insb
cltd
das
jnp
cmp
in
dec
pushf
jbe
pop
mov
cltd
loop
js
mov
jns
mov
je
mov
cmc
dec
hlt
loope
dec
ss
pop
jo
cltd
std
out
lret
mov
fldt
inc
movsl
ljmp
cmp
pusha
pop
and
xchg
mov
xlat
xchg
fyl2x
pop
lret
imul
loope
jbe
iret
outsb
cmpb
cs
stc
and
pop
dec
je
mov
mov
test
inc
fistpl
in
lods
mov
test
call
inc
lcall
aaa
inc
adc
sub
push
mov
mov
push
arpl
adc
pop
movsb
testl
push
stos
nop
sub
adc
or
outsb
stc
cmp
xchg
push
fistpl
test
aas
sub
sub
push
mov
sbb
fcoml
jnp
mov
insb
cwtl
ja
mov
adc
gs
cmc
and
pushf
fs
stc
sbb
insb
aas
rolb
es
loopne
in
cli
or
pop
fmuls
pop
aas
ss
push
mov
repnz
add
inc
insb
into
inc
or
xor
test
adc
inc
mov
sbb
sub
push
sahf
adc
jnp
push
xlat
adc
cmp
insb
push
sub
js
out
pop
es
ja
loope
hlt
pop
insb
xlat
lea
adc
jns
in
pop
jmp
push
adc
rcrl
sahf
rol
inc
mov
sbb
aad
push
popa
mov
cli
dec
jnp
sti
lcall
es
or
sub
or
xchg
sbb
and
fnstenv
and
mov
shrb
xchg
in
mov
push
sbb
push
and
es
adc
lret
dec
jno
mov
iret
imul
add
cmp
in
xor
jmp
stos
scas
inc
pop
sub
xchg
xlat
outsl
sbb
out
das
ret
pop
test
cmp
fldl
lret
jb
pusha
and
iret
in
dec
cmp
test
cli
adc
cmpsb
xor
fucomi
adc
ds
adc
adcl
jl
xor
push
pop
fcomps
push
inc
hlt
jne
xlat
test
vpshlb
aam
jg
mov
out
rcrb
and
sbb
movsl
push
hlt
icebp
inc
loopne
add
pop
xorb
cli
jnp
push
inc
ljmp
in
mov
pop
mov
push
sub
mov
sbb
gs
mov
mov
gs
xor
stos
lret
jns
sub
rcrl
add
lcall
or
dec
and
xchg
cltd
jle
mov
andb
fadds
push
adc
sub
or
mov
stc
cmpsl
mov
jg
cltd
je
pop
test
jbe
ljmp
scas
sub
clc
adc
fistps
jle
arpl
jmp
incl
cmp
loopne
add
mov
jo
loopne
into
sub
push
xchg
fisubs
movsl
inc
ss
std
aam
push
jge
add
push
or
xor
js
mov
aas
xor
cmp
sbb
fs
pusha
push
out
push
push
in
pop
imul
jmp
push
xchg
mov
xchg
ja
pop
clc
adc
popa
pop
sbb
stc
sub
sub
lock
mov
mov
sub
pop
cmp
adc
lea
bound
adc
xor
orb
jnp
adc
jns
pop
sub
push
out
imul
jnp
pop
out
adc
mov
jbe
std
mov
xor
es
ljmp
outsb
pushf
arpl
into
andl
sub
fisubrs
dec
aad
dec
and
sbb
pop
or
mov
sti
xchg
jmp
jae
inc
add
cmp
out
xchg
cs
push
mov
mov
adc
xor
jg
enter
icebp
or
jo
fs
movsl
adc
or
pop
daa
mov
int3
jecxz
out
cmp
jne
dec
mov
movb
lret
pop
mov
movsl
test
adc
sub
sub
test
dec
pop
loope
lahf
jo
sub
jmp
and
pop
pop
jecxz
pop
js
dec
xlat
rolb
jnp
push
xor
pusha
popa
inc
xor
mov
xor
divl
cltd
je
jo
pop
xchg
adc
or
add
fs
lods
in
adc
aad
cs
imul
dec
lds
push
into
pop
test
add
add
push
sub
push
xchg
shrl
push
icebp
sbb
in
jno
imul
mov
ret
cld
xchg
jg
into
cmp
jns
or
jbe
into
mov
inc
lock
negl
cwtl
add
loope
and
jge
fbld
gs
pop
add
leave
mov
push
mov
lea
and
jmp
add
inc
mov
ret
jns
cwtl
icebp
or
pop
xor
insb
mov
fsubrs
jne
jo
cmp
aaa
pushf
sbb
gs
in
xchg
mov
mov
mov
push
lret
cmp
lahf
xor
mov
cli
cs
xchg
js
stc
bound
rcrb
jb
data16
cmp
inc
divb
jns
aaa
mov
imul
xchg
push
ljmp
and
fucomip
pop
or
lret
pop
mov
and
cmp
mov
push
and
daa
repnz
pop
pop
es
pop
stos
pop
pop
jbe
fwait
cmpsl
adc
jne
inc
testl
xlat
iret
adc
arpl
pop
mov
je
pop
scas
fwait
aaa
jns
xchg
dec
sbb
cmp
jae
je
mov
movsb
cmc
pop
sbb
lock
mov
popa
popa
pushf
sar
pop
and
aad
mov
sbb
jecxz
enter
dec
jae
ja
xchg
sub
shlb
es
xor
mov
cmp
addr16
add
std
sub
daa
and
mov
xchg
addb
mov
mov
xchg
xchg
and
iret
mov
fldlg2
mov
icebp
xor
cmc
xor
rclb
pop
sarl
stc
dec
push
and
and
lods
cld
pop
push
mov
adc
lret
mov
add
inc
xchg
push
pushf
mov
add
mov
aam
outsl
and
push
adc
cs
subl
jp
aam
dec
and
ja
movsl
or
scas
xchg
fdivl
xchg
and
sbb
lahf
inc
add
shll
mov
daa
out
or
lahf
mov
xchg
cmpsb
imul
loopne
xchg
pop
pop
lret
data16
ljmp
jns
cmc
add
bound
addl
sbb
jae
xchg
dec
add
sbb
imul
mov
cmp
dec
cltd
movsl
dec
aas
mov
push
add
sbb
sbb
in
cmp
sub
mov
inc
adc
inc
pop
lds
sub
orb
hlt
mov
push
sbb
mov
ds
inc
clc
xchg
mov
shrl
mov
xor
xor
lock
xor
inc
inc
mov
mov
pop
cwtl
lock
ret
cmp
cs
push
xchg
jecxz
ret
std
test
sbb
cmp
push
test
inc
pop
es
xorb
inc
popa
pop
repnz
jecxz
inc
and
cmc
push
mov
insb
fucomp
lods
sbb
adc
lods
push
insb
out
mov
js
lcall
mov
mov
jbe
cmp
insb
jns
inc
je
push
imul
mov
icebp
mov
push
adc
pop
addr16
leave
loope
daa
scas
sub
push
outsb
aam
inc
cmpsb
gs
sbb
pop
mov
pop
lret
lock
sbb
jb
outsb
add
flds
outsl
cwtl
mov
xchg
mov
lea
xchg
or
cmp
jge
mov
lcall
cwtl
xchg
mov
lcall
imul
sarl
clc
in
arpl
imul
mov
xchg
and
jns
fimuls
xorl
mov
push
fcmove
jmp
adc
cmpsb
jp
iret
mov
sahf
add
mov
js
mov
adc
push
cwtl
mov
and
das
push
jb
fwait
enter
mov
cmp
in
push
dec
and
jo
ss
add
add
xchg
movsl
adc
arpl
aaa
outsb
lcall
xor
cs
or
stos
mov
push
push
mov
ret
lea
pop
and
fisubs
sbb
rcrl
and
sub
xchg
rcr
lret
out
lods
cmpsl
pusha
popa
cli
push
mov
test
xor
jbe
xor
cmc
add
mov
incl
data16
loopne
rol
inc
rcl
cld
movl
pop
mov
shrl
lock
mov
out
rcr
icebp
jge
mov
hlt
loope
andl
pop
inc
inc
lea
dec
dec
cwtl
outsl
test
dec
test
es
mov
sti
jb
clc
or
cmp
ret
outsb
iret
mov
inc
fistpll
pop
lret
push
jne
dec
push
add
jns
sbb
xchg
push
pop
push
or
dec
xchg
int3
stc
gs
sub
fildl
gs
adc
cmp
cwtl
jp
out
cmpsb
fdivrs
aaa
xor
iret
pop
or
mov
jecxz
out
lods
and
mov
push
push
mov
adc
cmc
add
les
jo
enter
add
mov
or
out
add
push
sbb
mov
pop
js
ds
adc
add
fwait
stc
sub
ss
add
mov
mov
dec
insl
lahf
sahf
int3
movsb
xor
pop
shl
pop
mov
cltd
iret
in
into
jb
and
cmp
pop
pushf
push
out
mov
xor
and
cwtl
lods
movsb
push
cmp
mov
xchg
ret
in
pushf
stc
and
sbb
sub
jae
fildl
mov
mov
xchg
mov
sub
pop
dec
jbe
pop
cli
add
pushf
js
xchg
or
mov
mov
and
stos
pop
das
dec
jo
call
xor
jae
add
mov
sub
or
xchg
sub
xchg
jns
outsl
cli
inc
jmp
sbb
lea
and
loope
stos
inc
rcrl
pop
out
sub
add
sbb
xchg
xor
xchg
push
fnstcw
dec
js
pop
fdivs
adc
xor
push
test
lcall
sub
push
ret
frstor
pushf
adc
negl
mull
mov
jo
and
cwtl
sahf
jmp
fcompl
xchg
mov
mov
cltd
mov
inc
aam
ret
or
sub
imul
test
popf
jmp
xor
lret
iret
js
jecxz
xor
or
imul
mov
lea
pusha
pop
js
mov
jp
push
ljmp
aam
test
mov
outsb
xchg
dec
test
loope
inc
sub
xchg
negb
ds
rolb
or
movsl
inc
aam
pop
mov
pop
xchg
sahf
and
test
and
jbe
es
fcomps
pop
cmp
sti
push
pop
or
ljmp
mov
cmp
xor
scas
sub
mov
mov
outsl
jl
mov
ret
ficoms
and
movsl
jp
loop
pusha
orb
sbb
sarb
push
popf
adc
add
sbb
mov
cmp
ss
mov
mov
sbb
pop
cmc
sbb
aas
loopne
sbb
inc
push
xchg
xchg
rol
pop
push
mov
mov
cmp
pop
mov
into
enter
fdivrs
in
ss
push
insb
pop
jecxz
sub
fwait
pop
inc
sarl
addr16
pop
mov
mov
push
ret
jbe
cld
loopne
sbb
cmc
lret
jge
sub
xchg
push
lods
out
rclb
mov
mov
xlat
addb
xchg
lds
dec
hlt
xchg
push
mov
add
mov
jns
mov
push
dec
fstpt
push
sbb
ds
inc
scas
cwtl
xchg
or
sub
and
fnstenv
aaa
shll
mov
addr16
cmp
add
xor
mov
jecxz
mov
xchg
cmpsl
clc
pop
jb
cld
cltd
je
hlt
or
insb
add
adcl
push
mov
dec
adc
inc
xchg
lahf
sbb
jns
push
xchg
jbe
call
fcmovnbe
xor
stc
jbe
daa
mov
orl
lret
out
ret
xor
into
fstpl
inc
lea
cwtl
iret
aam
adc
dec
pop
pop
test
xor
pop
es
cltd
test
mov
loope
mov
sahf
push
or
add
insb
leave
mov
push
push
pop
movsl
adc
clc
lock
xor
pop
insb
aas
lahf
inc
aas
js
mov
cwtl
xor
ljmp
mov
push
mov
cmp
sub
mov
aad
push
repz
cwtl
cltd
in
loop
sub
es
ss
mov
sub
in
adc
mov
push
dec
cmpsl
rorl
cltd
jg
xchg
adc
jo
adc
push
out
cmp
pop
dec
data16
or
jmp
dec
into
out
push
loope
scas
dec
into
pop
aas
mov
dec
jo
loopne
imul
dec
in
in
xchg
outsb
imul
pop
push
adc
xchg
sahf
js
jae
xchg
out
scas
arpl
pusha
insb
lcall
in
adc
ja
pushf
fs
sbb
pop
inc
or
push
fldt
cmp
mov
mov
xchg
frstor
jl
cmp
fcomps
into
test
imul
mov
lret
das
sbb
loope
rcrl
mov
cmc
add
cwtl
mov
stc
dec
out
insb
mov
fsts
cld
insl
cmp
inc
pop
test
sti
adc
push
cwtl
xchg
fcompl
je
xchg
jge
dec
push
jp
gs
daa
xchg
int
cmp
adc
hlt
inc
pop
mov
jmp
cmpsb
fcoms
loop
nop
adc
loope
xchg
je
pop
jmp
xchg
outsb
imul
sbb
lahf
out
clc
jno
pop
sbb
lods
fcompl
cs
pop
in
dec
test
cmp
add
icebp
mov
inc
cmp
xor
mov
xlat
es
adc
imul
cmc
mov
imul
cwtl
mov
iret
stos
cmp
fistl
mov
lcall
pushf
sub
test
outsl
or
pushf
and
gs
lret
jo
adc
in
les
sbb
inc
cmc
mov
xor
gs
jne
loope,pn
bound
sbb
ja
pop
pop
xchg
vcvtss2sd
xlat
inc
cmp
inc
xchg
and
mov
pop
andb
fs
and
cli
xor
addb
pop
movd
and
addb
imul
sub
jno
cld
jo
cld
cmpb
mov
mov
daa
mov
adc
mov
lcall
pushl
add
cmp
jmp
fdivrs
fcmovb
sti
lods
and
mov
jle
pop
mov
jno
stc
adc
in
imul
mov
addr16
mov
cmp
aad
mov
sub
xchg
mov
nop
andl
xor
pop
inc
mov
data16
aaa
loop
insb
xor
cmp
mov
adc
push
and
fmuls
dec
sbb
push
pop
jbe
cwtl
aad
or
xchg
push
ss
push
push
mov
aaa
jb
push
pop
fs
pop
jo
aas
mov
xor
icebp
rol
imul
clc
js
jae
fldt
push
xor
std
or
loope
std
pushf
xor
fbstp
mov
lds
adc
mov
push
mov
jnp
jne
adc
push
popf
fwait
inc
adc
in
dec
rcrb
loope
cltd
insb
cmp
mov
out
das
negb
pop
in
jmp
xor
sahf
scas
jae
dec
daa
add
cltd
and
push
push
push
ret
cmc
add
inc
fsubl
dec
inc
and
sbb
es
push
repnz
pop
xchg
stc
int
arpl
cmc
jo
jg
add
mov
ss
pop
dec
daa
sub
dec
sub
inc
dec
sub
or
nop
ret
cli
and
pop
add
lods
cmpsb
xlat
lahf
pusha
iret
xor
test
and
test
inc
negb
lock
push
cmp
jns
cmp
test
lock
push
subb
mov
cmp
mov
mov
js
jle
test
lods
stos
xor
push
add
add
jge
lds
enter
add
sub
bound
pusha
ds
adc
cmp
pop
cmpsb
mov
fsubs
and
or
popa
test
mov
je
out
mov
inc
icebp
push
pop
daa
cs
mov
cmp
adc
movsb
das
mov
mov
push
psubb
cmp
scas
xchg
xchg
fmuls
mov
sbb
hlt
repz
ds
and
leave
fwait
pop
mov
add
jge
dec
jecxz
push
sub
sub
data16
xor
sub
sub
lods
cs
xor
or
jl
or
mov
push
sbb
fcoms
je
sbb
xor
xchg
add
jecxz
pop
cmp
call
out
jle
fnstenv
fidivrs
add
jno
jne
adc
pop
pop
mov
fmuls
adc
cmp
and
roll
test
jp
xchg
adc
push
pop
rcll
iret
xor
push
sub
adc
adc
mov
and
ja
cli
pop
pop
inc
xor
pop
mov
imul
pop
jp
movsl
jecxz
mov
and
xlat
add
jecxz
cmp
jl
les
popl
loope
pop
add
jo
jl
cld
push
in
mov
mov
mov
insb
xchg
dec
dec
popa
xchg
cmc
xchg
xchg
adc
add
in
loopne
mov
mov
mov
movsb
or
mov
aad
pop
cmpsb
lahf
mov
pop
adc
addl
test
pop
xor
pop
loope
ret
decb
movsl
aaa
movsb
in
jns
mov
pop
mov
clc
pop
js
std
imul
mov
les
fdiv
iret
test
test
lock
mov
js
dec
insb
pop
sti
lods
fmul
pop
repz
or
dec
cmp
ljmp
mov
push
pop
sbb
jp
cmc
pop
idivl
xor
scas
jno
cmpsb
xchg
jmp
jbe
inc
fisttpll
inc
shll
repz
out
xlat
fidivrl
ret
mov
mov
mov
pop
pop
aaa
xchg
dec
cmc
ds
out
mov
push
lods
push
xchg
cld
dec
xchg
fsubrs
and
sub
int
and
dec
ja
cltd
mov
negl
and
lret
push
mov
das
insb
sbb
data16
mov
loop
xor
out
mov
loop
outsl
mulb
lods
jo
jno
js
sbb
fdivrs
bound
repz
lds
jp
xor
les
push
xchg
out
push
sar
pushf
xchg
push
ror
mov
mov
imulb
in
test
inc
and
mov
cmpsb
addr16
mov
xor
pop
push
outsb
enter
cmp
adcl
loop
std
or
push
inc
incl
outsb
or
inc
xchg
stos
cmp
xchg
cwtl
or
jg
sub
cmp
sahf
ljmp
in
jl
js
xchg
pop
xchg
and
cmpsb
lock
xchg
xor
cmp
xlat
es
jle
xchg
push
pop
vpmaxub
stc
xchg
mov
add
in
js
loope
mov
push
popa
aaa
xchg
ds
xchg
mov
and
pop
adc
mov
insb
test
iret
cmpsb
push
pop
addb
loopne
cmp
mov
testb
pushf
mov
pop
mov
insb
loop
addb
dec
lahf
jl
add
outsb
sub
adc
call
ds
push
lods
jl
test
sahf
sub
mov
sbb
cmp
add
data16
xor
sbb
push
add
stc
cmp
lahf
xor
mov
jb
into
cmpsl
dec
cmc
cwtl
pop
dec
in
ds
mov
xor
popf
sbb
stos
push
add
sahf
stc
xor
clc
and
pop
popa
lret
out
inc
test
push
loope
jl
push
aaa
xchg
cmp
and
jp
cmpsb
pushf
or
pop
je
ret
inc
cwtl
sub
sahf
mov
dec
and
xor
inc
cmp
test
push
lods
inc
movsl
ficoms
lods
inc
inc
cmp
sbb
ja
push
mov
scas
pop
sub
insb
les
cmp
mov
add
sbb
add
loope
xlat
jno
out
add
sti
cmp
movsb
jns
daa
mov
in
inc
repnz
repz
cltd
ja
push
adc
lds
dec
push
push
jmp
cld
div
ficomps
pop
sbb
or
pop
or
cwtl
cmp
jle
imul
jmp
andb
sub
xchg
cmp
aaa
or
dec
jne
iret
sbb
xchg
lods
adc
andl
dec
add
jno
mov
rcrb
adc
je
xchg
mov
iret
sahf
cmp
dec
mov
mov
jle
pop
pop
xlat
push
xorb
dec
push
add
push
cs
test
fs
pop
sbb
push
sarl
push
jle
adc
repnz
xchg
test
hlt
inc
adc
xchg
jle
xor
add
adc
pop
cmp
push
ss
mov
aaa
sbb
bound
fs
xchg
xlat
inc
pop
adc
cmp
scas
push
push
mov
xchg
sub
lahf
pop
jne
adc
idivb
or
mov
xor
cmp
mov
sub
jno
fwait
cli
jp
rcll
out
cld
bound
xchg
sahf
hlt
sbb
aaa
popa
mov
mov
popa
jb
stos
lret
inc
test
sub
and
mov
popw
in
dec
cwtl
xor
add
aaa
sub
popa
orb
arpl
adc
loope
ficomps
xlat
or
cmp
xor
cmp
mov
in
cmp
jne
lcall
stos
sbb
imul
xor
jle
mov
imul
jae
lcall
shl
push
int3
jns
mov
mov
pop
mov
mov
inc
loope
sbb
addb
pop
mov
fisubrs
lcall
jbe
movsb
cmc
xchg
lcall
fnsave
sbb
xor
xor
mov
scas
adc
mov
out
fstpt
add
cwtl
pushl
pop
in
test
and
outsl
orb
rorb
jns
push
mov
fisubs
iret
xor
xor
stc
mov
repz
out
xor
loope
push
mov
jne
sbb
mov
je
cwtl
lods
add
cmpsl
fwait
mov
loopne
cmp
mov
test
addl
cmpl
or
jle
push
xchg
cwtl
pop
cmp
cmpsb
orb
xchg
sahf
jmp
sbb
dec
xchg
aad
adc
or
test
cs
and
push
js
adc
push
outsb
inc
insl
pop
add
mov
insb
sahf
popa
fs
jns
push
les
inc
popa
sti
insb
ret
pop
leave
mov
inc
mov
cs
xchg
lock
sub
jecxz
mov
cmpsb
cs
arpl
mov
cltd
cmpsb
clc
mov
ret
test
sub
ss
sbb
cwtl
dec
repnz
es
cmpsl
imul
lock
and
adc
lds
fs
pop
ljmp
cmp
fidivrs
dec
sbb
xchg
dec
jbe
outsb
rorb
push
sbb
ret
inc
adc
pop
fadd
pop
test
icebp
clc
sub
add
rcr
and
js
out
xor
insb
inc
movsl
lods
mov
or
xor
xchg
mov
inc
ss
es
jnp
mov
je
dec
cmp
mov
repnz
pop
fmulp
jns
orb
shrb
pop
adc
fs
push
jne
leave
sbb
test
push
mov
xchg
sub
cmpsl
xorl
cwtl
cltd
pop
js
cs
in
xchg
xchg
mov
add
outsl
lods
xor
out
pop
sbb
cwtl
je
mov
repnz
and
mov
jo
pusha
mov
cmp
aas
xor
push
mov
sbb
adc
cmpb
xor
cli
fnstenv
xor
leave
loopne
cmp
pusha
sub
jns
xor
ljmp
cs
loope
sbb
cltd
xchg
inc
insb
aas
sbb
mov
fimull
test
mov
mov
mov
push
nop
pop
xchg
je
jbe
aas
gs
adc
andl
insb
and
dec
sub
xchg
ret
lahf
in
xor
xchg
inc
iret
mov
scas
enter
pop
xor
movsl
loope
mov
in
xchg
mov
xor
mov
xor
jnp
jae
push
les
insb
loop
test
aaa
cmp
sub
push
sbb
cmp
mov
inc
ret
jge
inc
adc
pop
push
rol
pop
lock
mov
cmpsb
mov
or
fidivs
cmp
xor
dec
mov
xor
dec
inc
add
loop
fildl
fdivrs
xchg
or
sub
imul
push
mov
push
cwtl
push
sub
and
clc
fcomps
test
xlat
pop
mov
scas
xor
aad
insb
pop
xchg
cmp
outsl
insb
mov
xchg
dec
scas
dec
pusha
sub
push
imul
mov
dec
mov
pop
inc
add
xlat
push
ss
inc
pushf
cltd
pusha
jns
add
pop
bnd
mov
push
std
or
inc
dec
ret
adc
and
pop
sbb
aad
jns
mov
xchg
mov
mov
mov
fiaddl
call
stos
popa
cmpsl
mov
jae
adc
iret
in
push
mov
mov
and
cmc
fwait
jns
mov
fistl
mov
lcall
ret
mov
xchg
enter
repz
stos
mov
loope
loopne
ret
out
rclb
fst
lcall
cli
sbb
adc
test
outsb
sub
xchg
cmp
scas
mov
aam
mov
call
and
mov
sub
xorb
mov
cltd
jns
jle
mov
stc
push
jb
pop
data16
loopne
and
or
xor
je
mov
ds
popl
loop
mov
push
lods
lcall
ja
xchg
hlt
das
jns
insl
jno
inc
push
mov
xchg
sbb
mov
ret
out
mov
loope
sbb
sbb
xchg
dec
mov
addr16
daa
mov
mov
test
sbb
mov
loopne
pop
mov
adc
cltd
fs
jbe
jl
stos
stos
int
pop
jmp
addr16
call
mov
add
stc
jns
xchg
rol
ss
cmp
cmp
push
cmp
adc
repz
jle
xchg
or
adc
dec
lret
cwtl
pop
addl
push
cmp
push
push
arpl
inc
fs
sbb
jecxz
mov
int
push
ret
imul
out
push
stc
sbb
mov
adc
scas
sbb
fsts
mov
aaa
xor
movsb
sbb
popa
mov
loopne
out
test
insb
jge
cwtl
js
mov
pop
jns
testl
jns
mov
sbb
imul
pop
aaa
push
mov
lods
out
rcrb
dec
jns
cmpb
push
sub
ss
cmp
inc
shlb
mov
xor
jmp
shlb
scas
fsub
jb
scas
cwtl
push
inc
lcall
jp
push
and
pop
pop
sbb
mov
fstpl
adc
movsl
pop
xor
and
mov
xchg
dec
fcomps
mov
scas
jae
mov
add
push
fdivp
pop
das
pop
leave
cmp
jp
jl
push
ss
xchg
push
and
rcrb
sarl
sub
xchg
mov
ret
insb
pop
jmp
movsb
cmp
movhps
mov
xor
ret
mov
mov
imul
mov
and
push
jo
xchg
test
lret
outsb
cmp
enter
pop
cmp
mov
adcb
inc
clc
jne
pop
scas
clc
dec
sub
add
cmpsl
cmpsb
mov
popa
mov
pop
dec
mov
mov
sbb
cwtl
cmp
ss
nop
mov
adc
pop
cs
add
cmpsl
cmp
cmpsb
hlt
xor
and
and
mov
cmp
sbb
mov
sub
scas
pop
mov
cmp
or
outsl
test
in
pop
in
inc
jmp
pushf
ja
pushf
inc
mov
or
adc
lret
mov
je
mul
dec
cmp
arpl
test
adc
push
mov
pop
lret
js
or
loopne
mov
cwtl
data16
aaa
jns
push
mov
xor
xor
or
int
es
in
dec
fisttpl
pushf
mov
adc
roll
mov
dec
pop
jecxz
jbe
scas
mov
shlb
push
test
test
cmc
int3
push
fstpt
lret
movsb
aad
mov
sbb
roll
movsl
clc
xchg
scas
push
cmpsb
js
test
mov
push
xor
sahf
mov
shlb
lock
jbe
aam
aam
adc
push
insb
test
jle
and
or
ret
add
and
sub
push
inc
push
push
cwtl
in
cltd
cmp
pushf
mov
imul
je
data16
push
fnstcw
jno
pusha
sub
jmp
lret
scas
ret
pusha
xor
mov
cld
repz
jno
leave
push
xchg
jecxz
push
enter
pop
outsl
out
jecxz
gs
test
imul
cmpsb
inc
adc
push
movsb
pop
jg
pop
fadds
outsl
jne
ret
les
pop
cmp
adc
ret
mov
out
jbe
or
cmp
lock
push
mov
cwtl
sub
pushf
ret
scas
test
inc
ljmp
int3
fistps
loopne
fcomps
push
xor
daa
cmp
mov
jns
filds
fistpl
jns
mov
fidivrs
int
ss
out
or
nop
xlat
inc
mov
jae
hlt
stc
sub
and
shll
xor
inc
sbb
sbb
js
push
nop
add
xlat
fsubrs
sahf
pop
icebp
lods
jl
mov
lds
idivb
lock
out
xchg
out
mov
int3
lret
or
imul
jae
arpl
or
addb
cmp
jno
add
push
mov
arpl
jmp
mov
or
mov
decb
xchg
lret
mov
dec
stos
dec
mov
push
divl
mov
fisubl
ret
loop
lcall
and
jecxz
xlat
fisubrl
sbb
jno
int
ljmp
add
fwait
loope
mov
push
lahf
jae
and
xchg
sahf
pop
pmuludq
and
test
pop
pop
inc
shr
scas
mov
xor
push
imul
lds
adc
mov
jno
mov
les
adc
lcall
jno
addr16
jae
movsb
push
xchg
sub
and
stos
sbb
je
loope
inc
inc
movsb
sbb
sbb
arpl
rorl
in
cmp
xchg
ret
cs
test
or
mov
cmpsb
jae
lea
add
loope
mov
dec
and
test
fildl
mov
out
adc
jle
shlb
pusha
or
xchg
jecxz
jb
xor
xor
sub
arpl
loope
adc
jae
dec
push
add
mov
pop
cmp
mov
stos
or
sbb
pop
jb
cwtl
pop
ljmp
push
push
sbb
mov
mov
or
jns
dec
mov
mov
js
adc
stc
mov
popa
jno
mov
addr16
std
fcmovnb
cmc
xor
xor
movsb
push
dec
outsl
inc
std
pop
lahf
fcomps
shl
jmp
mov
adc
jmp
hlt
mov
xchg
mov
jl
je
pop
jle
out
mov
fs
xor
je
adc
movb
imul
sbb
adc
jb
imulb
inc
adc
ljmp
pusha
hlt
out
jle
push
add
jge
sub
jae
jbe
outsb
test
cmpsl
sub
mov
sub
adc
lret
and
sub
adc
adc
push
jns
add
fs
mov
push
sub
mov
inc
push
xchg
fnstenv
das
mov
xor
dec
jo
or
lahf
mov
mov
pop
jne
adc
sbb
mov
mov
lds
jmp
jbe
fidivs
xor
sub
or
mov
adc
pop
sub
add
jecxz
stc
pushf
pop
les
stc
je
sahf
sub
mov
aas
fcom
lods
mov
jns
fsub
mov
and
or
icebp
push
adc
pop
stos
ret
dec
or
fiaddl
scas
mov
xor
je
push
fnstenv
lret
outsl
sub
dec
dec
mov
xchg
lahf
and
outsb
cltd
outsb
mov
sub
mov
push
loop
clc
in
bound
adc
arpl
xchg
enter
dec
xor
mov
add
pop
pop
ffree
lahf
cmp
and
pop
out
jg
pop
pusha
mov
adc
loope
mov
aad
dec
pop
pop
jnp
push
sbb
inc
dec
cmp
and
dec
jmp
daa
mov
mov
mov
fwait
movb
cwtl
outsl
push
js
lods
sbb
loope
and
mov
fisttpll
inc
ret
push
pop
call
test
mov
mov
jmp
insb
mov
clc
gs
mov
pop
jnp
mov
ficomps
in
cmpsl
aas
xor
cs
test
xor
mov
push
push
ss
imul
cwtl
mov
pop
xlat
arpl
dec
sub
cmp
sub
in
outsl
or
and
out
lods
inc
cs
stc
sub
fwait
ret
xor
ret
mov
sbb
mov
cwtl
js
cmpsb
fstl
cmc
je
mov
inc
adc
adc
mov
xor
sbb
mov
scas
outsb
bound
cwtl
push
ss
enter
fidivs
or
in
dec
or
push
xchg
mov
iret
cmovle
mov
ret
sbb
sub
insb
push
add
sbb
cmp
shll
fdivrs
lock
es
pop
inc
sub
stos
dec
add
imul
mov
push
cmpb
scas
outsb
push
aad
fmull
repz
sub
sub
insb
aam
cmp
in
sub
jl
sub
cmp
das
sbb
imulb
xchg
movl
mov
enter
mov
shlb
mov
stos
pusha
negl
dec
push
fstpl
and
sub
in
mov
ss
push
popa
mov
jbe
lret
out
out
loope
mov
cs
lret
jae
cmc
jo
test
mov
out
sbb
movsb
pop
and
mov
mov
pop
decl
xchg
int3
repz
adc
push
test
mov
leave
ds
lds
int3
or
loope
in
or
mov
js
jo
aam
xchg
cltd
pop
sub
inc
test
xchg
dec
enter
movsl
mov
stos
in
int3
xchg
fs
in
inc
rolb
loopne
cwtl
mov
ret
mov
jmp
lea
fnstcw
inc
mov
jno
lret
cmp
and
adc
js
pop
imulb
lea
cwtl
mov
add
wbinvd
and
xchg
push
loopne
adc
mov
mov
jmp
into
ret
jbe
and
mov
rcll
mov
ss
mov
xor
pop
inc
dec
push
shlb
jbe
je
mul
lret
sbb
popa
mov
aaa
sub
mov
and
and
insb
mov
int3
mov
icebp
sarl
in
pop
mov
ljmp
pop
jmp
sbb
dec
cwtl
mov
push
mov
push
sbb
outsb
dec
ficompl
cld
and
js
arpl
sbb
outsl
sub
push
push
sbb
xchg
cltd
and
sub
out
push
fsts
cld
mov
lret
add
fprem1
pop
and
xor
sbb
aam
sbb
dec
lock
fs
negb
cmp
inc
stc
je
sbb
cmc
mov
std
out
push
shlb
test
insl
pop
mov
pop
scas
push
inc
and
ror
xchg
cmc
popf
pop
push
add
out
pop
rcrl
outsb
cwtl
mov
adc
inc
sub
in
loope
pop
mov
xor
cmp
loope
dec
mov
adcb
insb
cmp
cmp
xchg
lret
mov
push
out
jno
xchg
clc
adc
adc
mov
sub
mulb
push
adc
stos
int
js
inc
mov
pop
xor
push
cmp
orb
mov
and
ss
mov
and
cwtl
scas
jbe
filds
cmp
mov
or
fbstp
test
sbb
mov
andb
cwtl
aad
test
mov
add
idiv
jo
xor
jecxz
ror
sbb
adc
jmp
pop
mov
and
xlat
movsb
dec
adc
sbb
dec
lods
push
movb
test
push
mov
mov
fstpl
jbe
imul
iret
push
je
or
in
pop
cs
sbb
ret
adc
xchg
pusha
mov
mov
mov
mov
jp
std
and
loopne
adc
cwtl
and
lods
test
mov
xor
popa
loope,pn
mov
lds
mov
lods
add
repnz
cwtl
insl
pop
mov
enter
js
mov
loope
out
or
jmp
decl
cs
icebp
sbb
or
cltd
adc
cmpsl
or
cmpb
or
nop
mov
xlat
jmp
push
inc
adc
sub
xchg
jp
lea
or
and
mov
aas
or
add
push
mov
test
and
insl
movsl
insl
adc
adc
sub
lret
adc
dec
outsl
mov
adc
dec
mov
iret
sbb
mov
in
mov
cli
nop
clc
dec
add
aad
bound
imul
cmc
add
fldcw
fwait
jb
fwait
dec
ds
stc
jno
in
jp
fstps
inc
bound
imul
jo
movsb
scas
inc
pop
out
mov
mov
hlt
das
addr16
outsb
fildll
dec
neg
in
adc
stos
xor
dec
pop
xor
push
sub
movsb
or
roll
sub
orl
and
or
fcom
xchg
mov
push
inc
addr16
jge
mov
iret
cwtl
lea
xor
pop
mov
jae
rcrl
fadds
dec
xchg
push
int
xor
loope
scas
mov
sahf
mov
movsb
jb
inc
sbb
ret
sub
dec
xchg
sub
decb
xor
mov
ljmp
mov
push
outsl
xchg
sub
out
pop
mov
lret
int
and
dec
flds
test
loope
pop
cmpsb
repz
push
cli
sub
int
ds
sbb
add
dec
xor
je
outsl
test
and
inc
and
inc
ss
sbb
pop
pop
sbb
rorl
test
outsl
sbb
shrb
scas
jle
dec
lret
or
dec
push
add
cmp
xchg
sbb
out
cmp
xlat
mov
fildl
xor
adc
mov
pop
jl
lret
push
fdivs
add
pusha
out
shll
rcrb
adc
or
mov
es
push
mov
jae
mov
sbb
cmp
jbe
lds
pop
pop
xlat
jp
mov
ficoms
ja
adc
inc
mov
call
push
cmp
shld
xchg
dec
pop
mov
jmp
cwtl
inc
or
add
mov
add
in
mov
sub
inc
lea
xor
pusha
stos
mov
mov
push
dec
scas
mov
jl
dec
mov
and
int3
jl
cwtl
sub
and
loop
inc
cmp
fsubrl
shr
ljmp
in
cmp
into
xor
lods
dec
sbb
sahf
adc
movsb
idiv
outsl
movsl
je
and
test
call
imul
jno
imul
jmp
notb
add
and
test
add
cbtw
cwtl
cmpsb
sbb
and
js
or
jl
xor
jb
ds
pop
movsl
xor
mov
stc
test
mov
je
jbe
push
or
pop
popa
push
hlt
fwait
sub
aaa
xchg
fisubrl
pop
aas
sub
sbb
int
or
sub
and
mov
outsl
mov
jmp
mov
add
ror
and
push
negl
out
mov
pushw
das
aas
push
movl
pop
mov
lret
cltd
icebp
ja
sub
jmp
sbb
sbb
add
popa
jg
adc
push
lret
lret
adc
sbb
daa
mov
add
dec
push
ret
adc
int
ljmp
or
loope
movsl
inc
and
loope,pn
sub
xlat
xchg
mov
stos
push
mov
and
scas
or
cmp
adc
adc
and
sahf
imull
dec
mov
out
cmp
and
push
xchg
dec
or
ret
sbb
cs
stos
mov
leave
scas
mov
std
enter
hlt
add
test
sbb
cmp
jo
inc
push
cmp
mul
outsb
jecxz
jae
pop
sbb
fldt
iret
cmp
adc
clc
std
jne
inc
xor
pop
data16
sub
loope
aas
and
es
cli
hlt
inc
sbb
lea
jnp
into
or
fwait
push
sbb
mov
or
push
dec
xor
pop
ret
scas
lods
call
jmp
movsl
push
mov
inc
in
clc
sub
dec
pop
mov
hlt
dec
dec
int3
iret
lods
aas
mov
pop
cltd
mov
pusha
mov
add
mov
and
or
and
rcrb
mulb
pop
jle
loope
xchg
fmuls
ret
xor
lds
add
shll
roll
ret
lea
fsubl
dec
xchg
repnz
mov
pop
les
mov
repnz
cwtl
in
push
or
out
sbb
pop
cmc
stos
icebp
fs
cmp
xor
jge
ja
mov
or
in
mov
stos
movl
cmpsl
adc
push
and
mov
cmc
insb
sbbl
mov
sub
xor
pop
sub
inc
dec
add
je
jne
shlb
inc
shll
pop
add
adc
lds
cld
jo
mov
cmc
sahf
jecxz
dec
aaa
inc
sti
fs
mov
scas
shll
mov
ss
add
mov
in
push
dec
push
jo
push
or
sub
arpl
sti
cwtl
lods
lea
jge
cs
out
lds
rdtsc
sbb
cwtl
cmp
inc
arpl
into
arpl
jbe
out
pop
or
xchg
out
call
jp
loope
push
mov
cmp
or
insb
aas
xchg
sub
pop
lret
loopne
jns
mov
sbb
add
xor
xor
scas
and
mov
xor
idiv
insb
imul
or
adc
std
mov
mov
lret
add
icebp
aas
cltd
in
add
mov
fldcw
pop
cmp
and
test
lock
lcall
inc
jb
int3
adc
jle
iret
jp
xchg
push
sub
cmp
and
add
dec
add
pop
loop
push
or
inc
cmpsb
push
arpl
rolb
sbb
cmpsl
and
mov
outsl
cvtdq2ps
daa
bound
mov
out
mov
js
mov
mov
xchg
sbb
movsb
inc
inc
xor
sbb
cmpsb
and
fistl
shrl
mov
add
lea
cmp
or
jle
sahf
popf
notl
scas
in
test
js
cmpsb
sbb
or
ljmp
mov
mov
cltd
mov
xchg
jg
xor
cmp
enter
clc
mov
repz
ds
sti
or
into
mov
jmp
popl
pop
popf
lock
mov
jbe
stc
and
mov
ljmp
daa
out
mov
mov
test
pushf
inc
in
xor
movsb
inc
out
iret
mov
fcomps
inc
rcrl
jl
xor
mov
js
jbe
imul
fs
mov
pusha
pop
ss
push
mov
dec
stos
sub
pop
push
adc
dec
test
cld
lcall
cmp
cmc
outsl
pop
push
push
and
jg
add
js
rcr
cld
repnz
lcall
popa
scas
pop
cmc
and
adc
pusha
jecxz
cmp
test
jbe
call
cli
repz
or
add
dec
xlat
cli
jno
or
daa
in
xchg
call
mov
add
lock
shll
movsb
ret
das
cmp
or
mov
test
sbb
jge
es
pop
add
lock
enter
sbb
and
cs
or
repnz
pop
mov
inc
jns
cltd
je
xlat
xchg
std
xchg
mov
aad
mov
outsb
push
pop
fadds
push
push
test
and
push
xor
lods
mov
sub
movsb
or
sbb
mov
and
pop
mov
or
lret
sbb
cli
ss
adcb
sbb
mov
addr16
outsb
popa
push
inc
orb
sub
and
xor
stos
xchg
addl
xchg
cmpsb
fwait
ds
outsb
call
add
add
lea
cmp
fildll
mov
jno
lock
ljmp
push
jbe
mov
adcl
mov
mov
xor
inc
inc
es
test
flds
xchg
out
sbb
popf
xor
mov
push
mov
mov
in
out
push
mov
xchg
cmp
fnstenv
ss
xchg
mov
and
in
shlb
pop
adcl
dec
dec
dec
push
push
fcompl
arpl
inc
inc
sub
or
mov
push
loope
jbe
repz
jmp
ret
mov
push
sbb
jmp
jns
add
sub
xchg
sahf
loop
insb
aaa
stos
leave
call
js
in
xor
lds
shlb
inc
add
sbb
cli
jb
mov
lea
cmpsb
or
cltd
push
jnp
and
dec
push
pop
pop
mov
stos
je
push
cwtl
mov
jbe
hlt
mov
mov
lods
inc
or
fistps
clc
mov
outsl
mov
hlt
movsl
cmp
test
mov
adc
arpl
xchg
mov
mov
mov
push
ljmpw
inc
jmp
sbb
inc
jp
adc
idiv
dec
lods
fisttps
jnp
jl
mov
pusha
sub
stc
stos
lods
mov
dec
cli
je
mov
addr16
mov
gs
mov
addb
insl
jecxz
mov
pop
pop
lahf
pop
mov
fistpll
loopne
jo
insb
mov
movsb
js
mov
cltd
pusha
ret
lods
adc
or
push
add
aaa
pop
inc
cli
pop
repz
and
and
sti
sub
orb
insl
std
aaa
and
cmp
or
pop
aaa
fcomi
in
xor
xor
test
and
inc
loop
jae
in
cmp
sub
dec
xchg
es
jae
sbb
lock
ss
xor
popa
mov
xchg
or
pop
or
pop
rcll
dec
mov
jmp
and
inc
clc
mov
fldenv
pop
jnp
repz
je
or
xor
xchg
jae
dec
push
aam
adc
pop
jp
jne
in
jnp
fmul
lea
adc
cltd
jns
hlt
in
popf
movsb
lods
dec
add
daa
jbe
movsl
adc
enter
cmp
push
repz
aaa
inc
pop
sbb
stos
xor
cwtl
lret
clc
in
enter
fsubrs
pop
or
test
add
fcoml
dec
sbb
mov
pop
fisubrs
outsl
xor
pop
loope
sbb
imul
and
js
stos
fstpt
ss
repz
jb
sub
roll
cmp
jmp
cs
mov
mov
xor
inc
data16
scas
fs
adc
xor
repnz
xor
ficoml
testb
lret
repnz
clc
test
dec
cwtl
mov
lods
test
push
dec
mov
jge
pop
cmp
int3
jmp
push
hlt
test
pop
sti
ror
bswap
call
cmp
push
push
stc
dec
xchg
xor
cmp
insb
out
xchg
ss
xor
ja
dec
aad
mov
sub
sub
pusha
jns
out
mov
xor
aaa
fucomip
shll
fdecstp
nop
push
sahf
ds
cltd
js
pop
mov
test
xor
cmpb
xchg
stos
cld
hlt
js
cwtl
pusha
mov
cli
sub
fsubs
pop
rol
pushf
lcall
adc
adc
xor
imul
cmp
cmp
adc
or
add
js,pn
jp
cmpl
and
mov
mov
inc
push
lret
push
lret
sbb
adc
pop
enter
cmp
cmc
stos
pushf
xor
push
ja
pushf
xchg
xchg
cwtl
hlt
xor
les
dec
jae
les
jmp
mov
or
repnz
jg
jno
nop
sbb
adcb
data16
fisubl
pushf
mov
fxch
jb
js
cs
repnz
xchg
ss
in
jno
lock
clc
add
push
cmp
test
into
loopne
inc
mov
cmp
or
cwtl
sub
rolb
sbb
bound
lcall
enter
cwtl
xor
scas
add
add
sub
pop
push
and
jnp
dec
or
adc
ret
mov
pop
pop
stc
addr16
jp
insb
inc
adc
mov
int
adc
adc
imul
pop
pop
ret
test
dec
xchg
push
adc
mov
repnz
mov
stc
xor
aaa
jb
adc
mov
sahf
ret
outsb
mov
pop
das
mov
stc
xchg
addl
in
mov
mov
out
sub
pop
inc
jns
mov
push
pop
ss
cmp
xchg
dec
clc
mov
test
aaa
cmpsb
push
cltd
sbb
pushf
loope
push
jmp
dec
mov
lahf
xchg
or
cmc
orl
pop
xor
ljmp
adc
pop
adc
inc
sti
outsl
in
pop
cwtl
pop
test
lret
or
test
mov
movsl
xlat
mov
andb
jns
xchg
fwait
sbb
data16
inc
stos
add
mov
jb
mov
mov
pop
in
cmp
pop
scas
cmp
lock
movsb
pop
out
testb
into
pop
fwait
push
xor
mov
mov
ret
dec
ds
sub
inc
sbb
popa
pusha
sub
repz
cwtl
mov
ret
pushw
mov
stc
fstpt
loopne
loop
or
gs
ss
inc
and
lcall
sbb
pop
jge
cwtl
lea
div
mov
fisubs
pop
or
cmp
jae
pop
cwtl
ret
insb
jns
dec
fs
xor
pop
call
or
pop
movsl
ja
mov
inc
cli
cmp
and
popa
or
jl
mov
test
xchg
mov
into
ds
cs
jnp
movsb
mov
icebp
xor
rcll
loop
out
js
out
pop
sub
fsub
cmp
dec
lret
jbe
inc
lcall
les
cmp
stos
mov
in
test
cwtl
rorl
mov
cmp
sbb
sub
sub
imul
mov
bound
inc
jge
sahf
pop
mov
cmp
iret
jo
sub
jmp
jno
pop
dec
mov
or
clc
mov
fsts
scas
xchg
lock
fdivrs
scas
push
or
and
cmp
pop
mov
shlb
xchg
mov
adc
outsb
test
adc
mov
sbb
loope
stos
and
cwtl
ficoms
pushf
pop
call
xchg
adc
fnsave
cmc
mov
fildl
test
leave
jb
notb
add
icebp
adc
xchg
cmpb
cwtl
add
inc
jbe
inc
sahf
jmp
in
leave
sub
aas
mov
sub
mov
imul
cwtl
jge
int
stos
or
sub
aas
push
push
mov
and
int
mov
popf
loop
jge
mov
mov
je
adc
mov
add
or
int3
pop
sbb
into
pop
mov
test
mov
js
mov
push
sarb
xchg
sbb
imull
bnd
sbb
shll
jne
jle
pop
xor
push
imul
xchg
je
xchg
push
mov
cmp
repz
dec
insb
cwtl
cmp
dec
pop
pushf
push
sbb
in
and
cmp
inc
ljmp
cmp
mov
test
jno
negl
mov
inc
jns
mov
je
dec
dec
icebp
xchg
das
outsl
push
mov
shll
or
cwtl
dec
sub
cs
mov
cs
fs
xor
cltd
add
cmpsb
mov
cwtl
pop
mov
dec
out
call
adc
sub
lods
pop
imul
clc
mov
pop
or
lcall
fcomp
add
jbe
push
adc
cmp
mov
xchg
pop
js
fwait
daa
hlt
xor
out
cmpsb
or
dec
dec
icebp
insb
xor
pop
jo
mov
insb
sarb
sbb
fs
push
push
mov
fnstcw
mov
mov
push
repnz
rcrb
dec
pop
in
iret
sub
and
add
enter
cltd
mov
lods
insl
mov
fwait
dec
aam
sbb
sbb
pop
jge
mov
fsubrp
dec
iret
cmp
push
outsl
push
fsubrs
sub
cmpsb
leave
and
pop
sub
cmpsb
push
xchg
xchg
xchg
testb
dec
test
out
xchg
sbb
mov
or
je
jae
loope
nop
shll
pushl
out
sbb
jae
push
stc
pop
dec
cmp
pop
test
xor
mov
sahf
xor
jae
ljmp
sub
aad
leave
cmpsb
call
adc
mov
xchg
sub
lcall
in
cmpsb
outsl
jnp
jns
jb
or
jmp
dec
pop
aaa
stc
xor
test
pop
push
push
xchg
fs
lret
pop
mov
scas
or
insl
in
clc
daa
shrb
push
pop
mov
pop
xor
and
inc
adc
cmpb
divb
stc
lock
xor
sbb
adc
pusha
arpl
es
mov
push
mov
add
ret
fimull
sub
insb
icebp
scas
xor
or
imul
push
push
pop
sarl
shll
dec
fcoms
outsb
enter
and
pop
ds
imul
popa
jb
sub
stos
sbb
nop
adc
dec
pop
aas
ss
xor
popa
pop
cmpsl
xor
push
mov
mov
pop
jge
ret
leave
xchg
dec
jno
les
jns
dec
ss
arpl
cmp
pop
jl
inc
imul
fxch
arpl
outsl
dec
std
push
xchg
mov
adc
and
or
int
mov
call
cmpsb
pushf
mov
xor
stos
jnp
out
xor
ss
cmp
pop
in
outsl
xor
mov
sbb
pop
sub
sub
pop
movl
div
pop
pop
insb
xor
mov
dec
xchg
mov
fucomp
enter
adc
testb
ja
sub
ds
xor
mov
inc
cmp
ret
popa
sub
xor
das
in
shl
jl
add
sbb
lret
push
adc
aaa
neg
aas
xor
mov
and
sub
or
clc
mov
mov
clc
sub
xchg
xor
xchg
stos
cwtl
and
xchg
jbe
xchg
mov
outsb
dec
jno
stos
push
jb
out
jbe
sub
xchg
and
nop
sbb
and
and
iret
cmp
mov
sub
mov
sbb
cmp
popf
cld
out
adc
gs
mov
mov
nop
cld
mov
in
cld
and
pop
lock
movsb
out
pop
xchg
les
pop
mov
sbb
inc
bound
mov
or
aaa
stos
jno
mov
inc
nop
push
fwait
lock
and
xchg
testb
adc
push
pop
cmpb
mov
adc
jle
sub
outsb
pop
outsb
call
cmp
xor
cmp
add
mov
sahf
mov
xchg
test
call
xchg
mov
dec
pop
xchg
jle
shl
out
ljmp
push
cmp
sub
bound
mov
das
or
xor
push
in
add
out
sti
subb
xor
push
or
loope
xor
out
mov
add
and
fistl
jae
mov
shrl
pop
stc
mov
mulb
aaa
xchg
adc
mov
push
aam
mov
and
adc
addr16
std
aas
in
test
cmp
inc
lds
and
mov
adc
insb
cltd
xchg
out
stos
add
adc
div
inc
pop
outsb
xor
mov
arpl
and
inc
dec
sbb
cmp
mov
out
sbb
cmp
sbb
jge
push
outsl
mov
fnstcw
sbb
push
lock
pop
xor
and
cwtl
mov
test
adc
pop
fisubrs
stos
sbb
pushf
jecxz
jno
mov
js
add
les
jecxz
clc
shll
js
lea
adc
xor
inc
mov
xor
fwait
sbb
cmp
fldt
cmp
mov
mov
add
mov
and
mov
test
bound
sub
aas
test
cwtl
je
push
mov
adc
xlat
pop
cmpsb
call
add
jae
jo
mov
inc
xor
mov
sub
mov
jae
xchg
adc
mov
sub
jae
xor
dec
push
xor
xor
jle
and
test
sahf
dec
test
test
push
jae
data16
test
or
mov
jns
mov
fwait
pop
insb
dec
ss
cmp
popa
fcmovne
jb
lahf
adc
rolb
repz
outsb
popf
cmp
xchg
test
cmc
adc
iret
out
cmp
lods
dec
inc
arpl
xor
dec
inc
fxam
jnp
fadd
test
mov
xor
sbb
mov
cwtl
xor
js
xchg
dec
sub
sub
push
xor
ds
xchg
loope
pop
aaa
mov
aaa
aaa
pop
insl
xlat
adc
xor
sub
movl
dec
adc
fdiv
shrl
pop
cwtl
test
sub
mov
fs
cmpsl
adc
dec
cwtl
push
int3
jns
or
into
mov
in
sub
inc
pop
call
pop
inc
sub
scas
jae
out
lea
test
and
imul
movsl
in
pop
fmull
repnz
mov
dec
orb
inc
xchg
add
int3
cmp
or
adc
lock
jbe
out
pop
test
jle
inc
jle
adc
scas
dec
and
push
outsb
or
lea
ds
xor
sbb
push
push
mov
jae
movsb
mov
adc
inc
insb
mov
sub
insb
stos
dec
divl
xchg
imul
mov
adc
fnstenv
mov
push
movq
or
lds
test
pop
repz
das
outsb
sbb
popa
je
es
pop
push
iret
jmp
push
xchg
cltd
push
sbb
movl
mov
dec
data16
outsl
mov
leave
mov
cmp
loopne
and
in
jo
xor
ss
es
xchg
mov
in
dec
cwtl
jns
cld
cmp
outsb
or
xor
mov
in
inc
xor
jp
roll
hlt
jae,pn
sub
int3
mov
outsb
jle
repz
push
jle
icebp
jbe
pop
lods
mov
pop
jo
pop
loop
ljmp
adc
xchg
dec
in
dec
push
pop
addr16
das
or
js
cmp
cmpsb
sbb
je
pop
cmp
mov
rorb
cld
mov
push
jmp
daa
in
sahf
or
inc
jp
fsubs
mov
push
pop
or
push
xor
js
cmp
insb
btr
sub
mov
and
push
orb
insb
iret
xchg
or
push
jb
roll
xor
fmull
inc
or
js
and
scas
rclb
rcll
and
loop
jo
mov
rorb
xchg
nop
sub
jae
movsl
push
sub
rorb
cmp
mov
jns
adc
xchg
cmp
pop
push
enter
jo
pop
xor
loope
xchg
imul
shll
test
push
loope
nop
xor
jo
pop
jae
into
cmpsl
fbld
iret
jns
sbb
sbb
pop
sub
xlat
and
cmp
js
sub
lcall
inc
dec
ljmp
pop
ret
and
repnz
xor
call
adc
xor
aad
hlt
ret
jecxz
jbe
xchg
adc
add
scas
mov
lret
cs
cmp
push
xchg
lods
mov
loopne
lods
push
hlt
mov
jae
aas
lods
fstps
push
loop
xor
das
cmp
repnz
adc
cwtl
bound
ja
lcall
xchg
mov
mov
movsl
xchg
cwtl
jae
mov
repnz
imul
dec
mov
adc
jne
dec
leave
aam
cmp
mov
mov
call
es
and
mov
mov
outsb
scas
add
push
aas
mov
push
out
xor
fidivs
leave
mov
addr16
stos
xchg
adc
sahf
push
sarb
adc
pop
jmp
cmpsb
mov
fmuls
andb
into
mov
ss
mov
xchg
out
jo
cmp
insb
test
add
jns
pop
xchg
jae
popf
pop
sbb
stos
test
mov
mov
or
inc
mov
out
mov
adc
stos
xor
cli
cmp
mov
ja
stc
jmp
mov
mov
in
jbe
movsl
add
mov
in
insb
in
lds
cmp
mov
insb
dec
das
pop
stc
jae
and
je
push
test
cmpsb
cwtl
adc
lret
adc
add
mov
mov
repnz
stc
push
iret
mov
and
out
scas
sbb
xor
imul
push
cmp
sub
fcomi
mov
mov
and
cmpsb
in
out
sbb
das
sbb
mov
mov
push
sub
pop
pop
mov
sbb
aaa
test
fldenv
loop
inc
and
jno
pop
inc
inc
adc
mov
insb
int3
in
addr16
fidivrs
dec
push
jae
mov
jo
xchg
adc
sbb
xchg
push
dec
mov
adc
add
push
aas
int3
ret
mov
mov
dec
scas
ljmp
into
lds
pop
push
pop
or
ss
dec
sub
pop
mov
scas
rcll
loope
cmpsl
mov
sub
add
in
sub
loope
xlat
clc
iret
sub
xchg
push
jns
sbb
fdecstp
jle
jno
lea
in
scas
into
mov
adc
mov
imul
pop
test
fucom
inc
outsl
jmp
ja
in
pop
js
mov
int
inc
push
popf
fistps
mov
lret
dec
cs
in
adc
pop
dec
movsb
into
xchg
cwtl
and
cwtl
lret
fsubrl
mov
popa
jae
adc
dec
mov
add
pusha
push
xor
cmpsl
jg
push
test
lahf
sub
enter
sbb
jecxz
repz
xor
xor
sub
jo
push
mov
cmp
adc
cmpsb
jae
jge
fldl
add
sti
test
mov
mov
mov
dec
jns
leave
in
retw
lods
adc
pushf
out
js
popa
pop
mov
lock
cwtl
scas
mov
sbb
sub
jb
xlat
aas
mov
add
mov
inc
jo
push
sahf
push
dec
sbb
push
inc
pop
test
mov
shll
adc
mov
imul
in
mov
push
add
sbb
out
xor
loopne
inc
inc
test
mov
pusha
cmpsb
shrl
xchg
aaa
ds
mov
js
movsl
mov
mov
scas
aam
cwtl
jle
out
inc
add
inc
enter
pop
mov
jmp
ja
jb
sbb
inc
out
and
test
shll
or
repz
pop
out
dec
ss
data16
add
xor
sub
xor
dec
imul
test
mov
lods
dec
fcompl
in
gs
jmp
lcall
mov
cmc
fisttpll
cmp
sub
imul
lcall
ss
shrb
xlat
pop
stos
fsubs
enter
fwait
and
stos
stos
ret
scas
jne
jecxz
cmc
push
out
jns
mov
popa
ret
sahf
and
insl
scas
jns
mov
mov
or
xor
scas
push
nop
shll
pop
sub
sbb
loop
add
fistl
loopne
fsincos
addb
pop
mov
ja
dec
fucomi
cs
rorl
mov
jg
pop
pop
leave
add
es
fistps
mov
adc
mov
add
xor
scas
pop
add
and
push
push
add
adc
xchg
pop
ja
lds
mov
idiv
or
addr16
adc
mov
jecxz
loope
out
pop
push
roll
pop
jns
mov
popa
bound
cwtl
jns
imul
hlt
inc
imul
sbb
movsb
pop
mov
mov
xchg
rorb
or
test
aaa
adc
fs
rolb
add
fdivr
pop
arpl
fldenv
fldt
sbb
shr
and
xor
fdivr
jmp
pop
lret
cmp
pusha
repnz
or
or
fs
test
dec
repz
jle
or
and
dec
dec
pop
sbb
aam
enter
and
push
jp
test
push
mov
jne
rep
cwtl
xlat
enter
sbb
push
outsb
mov
rcll
inc
or
stos
inc
adc
ret
pop
add
and
test
xchg
lahf
mov
pop
ss
js
dec
cmp
repnz
mov
pop
and
lods
ja
add
test
dec
mov
xchg
mov
notb
stos
push
pop
sti
xchg
pop
jns
call
rorl
cs
adc
sub
add
shl
sub
cltd
cmp
mov
xor
pop
call
mov
mov
lea
xchg
and
pop
sub
imul
mov
sub
cmpsb
sub
mov
push
or
mov
imull
stos
mov
mov
jbe
jae
stc
jbe
jp
mov
push
pop
xchg
and
ja
std
movsb
out
cli
mov
cmpsb
add
in
mov
ret
fdivs
je
fwait
out
and
or
adc
jg
pop
lea
pop
adc
dec
mov
aam
js
in
aas
sbb
aaa
pop
out
cmp
rsm
or
sub
insb
inc
jecxz
in
mov
notb
call
lret
mov
xchg
mov
sub
inc
int3
repz
mov
xchg
inc
xchg
es
jne
push
dec
pusha
std
iret
add
add
fiaddl
dec
mov
popl
add
clc
xchg
pop
shrl
js
out
sbb
clc
cmp
sbb
and
andl
inc
pop
subb
clc
movsl
popa
sub
xchg
pop
arpl
inc
adc
bound
into
out
and
jl
repnz
stos
hlt
jecxz
clc
lret
ljmp
xor
pusha
push
mov
sub
push
out
repz
mov
or
cld
mov
cmp
test
push
testb
pop
xor
inc
mov
push
lret
sub
jne
ds
ret
fsubrs
and
or
sbb
mov
cmp
ss
push
sub
sub
pushf
push
not
dec
mov
mov
divb
mov
cmp
pusha
negb
or
adc
jge
lret
add
jae
xlat
push
in
outsb
je
pop
push
cmp
push
xchg
and
jb
mov
xlat
je
add
mov
push
xchg
or
subb
sub
ret
mov
adc
js
subl
outsw
mov
xor
mov
mov
es
je
xchg
xchg
shll
je
inc
arpl
icebp
adc
jae
stos
inc
pop
mov
xchg
imul
jecxz
add
pop
mov
out
data16
jecxz
jl
sub
sub
pop
outsb
pop
cmp
mov
arpl
push
cwtl
cmp
insl
cld
lods
or
jo
bound
fwait
sbb
or
nopl
push
cmpsb
fidivs
sti
nop
test
scas
arpl
or
push
jecxz
rolb
push
out
lock
mov
push
mov
outsl
sbb
inc
dec
jns
into
roll
fwait
mov
lahf
in
testl
sub
dec
cmp
repz
sub
cwtl
sub
xchg
xchg
mov
dec
add
addb
sbb
mov
insb
icebp
inc
push
aaa
xlat
ljmp
pop
aaa
pop
popa
mov
xchg
test
fdivrs
push
cmpsb
int3
push
stc
insl
or
cmpsl
sub
dec
adc
data16
movsl
repz
push
jecxz
aam
push
xor
cltd
xchg
icebp
xlat
jbe
xlat
dec
mov
sahf
sti
push
pusha
outsl
int3
sarb
jbe
scas
push
clc
rcrb
std
cltd
je
jo
pop
cmp
adc
fsubs
cld
icebp
jns
cmpsb
dec
icebp
xor
add
cmp
icebp
fdivrs
in
dec
or
lods
pop
and
jbe
jno
icebp
mov
lds
mov
adcl
adc
push
outsb
adc
mov
mov
repz
pop
fadd
out
cmp
into
and
mov
inc
mov
pop
fidivrs
pop
aaa
iret
mov
or
mov
and
fnstenv
cmp
stc
jae
fisubrs
fldl2e
dec
adc
adc
and
andl
sub
out
cmp
fcomi
jg
and
sbb
insl
shrb
mov
cmp
stc
ja
push
ret
lock
sbb
push
jns
mov
arpl
ja
sub
jnp
mov
mov
add
es
les
push
cmp
cltd
jae
dec
repz
and
pop
mov
mov
pop
pop
jle
add
stc
add
rep
test
je
mov
jae
mov
fucomip
insl
fs
in
and
dec
scas
adc
in
call
in
jb
xchg
cltd
xor
fsubrs
dec
fcomi
out
inc
push
cmp
lret
gs
lahf
pop
int
jno
xor
jg
clc
dec
andl
mov
imul
jo
jp
cmp
aas
or
nop
xor
cmp
dec
je
sti
adc
mov
jae
cmp
add
int3
jge
mov
push
insl
sahf
arpl
insb
jo
fwait
push
pop
int
cmc
cmp
popa
popf
push
fmull
mov
pop
xchg
or
push
lret
rcrl
test
aad
mov
out
mov
jns
push
add
pop
add
dec
jae
xor
push
adc
popa
pop
push
pop
je
andl
jns
and
in
ja
dec
mov
mov
pop
clc
std
cmp
leave
fwait
push
jbe
clc
daa
les
stos
sub
jns
in
xchg
scas
cmp
xchg
scas
jg
jb
cmpsb
lods
sbb
lock
sbb
pmaxsw
lret
sub
shll
xor
ficoms
xor
jno
adc
dec
pushf
adc
jp
xchg
sbb
popa
sub
sbb
pop
mov
mov
mov
fidivl
push
je
cltd
imul
dec
sbb
clc
add
jbe
cwtl
inc
mov
cmpsb
popa
mov
mov
daa
pop
jmp
in
and
mov
inc
rep
and
jmp
jo
and
andb
push
cmp
clc
cli
stos
cmpsl
push
out
stos
pop
xor
popa
mov
fwait
insb
pop
pop
or
sub
pop
sbb
stos
jb
xchg
dec
push
fmul
mov
push
stc
jge
jbe
scas
sub
sub
lods
sub
dec
ljmp
mov
rcr
sub
stc
test
inc
push
mov
cmp
iret
enter
in
mov
xchg
jge
mov
ljmp
push
jle
xor
or
push
jl
jp
lds
addr16
test
xchg
pop
cmpb
pop
cmpsb
std
inc
lcall
push
lock
aaa
fnstcw
jbe
stos
fadd
test
mov
inc
jno
cwtl
or
movsb
adc
imul
sub
cmp
int
mov
jmp
fiaddl
xchg
dec
push
ds
out
cwtl
jp
cltd
and
lcall
sahf
test
test
outsl
je
mov
xor
test
cmpsb
int
jns
sbb
xchg
jo
push
arpl
push
add
mov
mov
movsl
mov
ret
std
and
push
cli
pop
jge
adc
fldt
test
mov
ja
xchg
mov
jae
cmp
sti
int
loope
sbb
out
sub
mov
sbb
mov
cmp
mov
cwtl
test
fcomps
and
xor
sbb
cmp
mov
icebp
pop
jae
pop
or
mov
std
cmpsl
or
mov
imul
inc
lret
mov
mov
pop
int
leave
test
or
addr16
push
or
clc
pop
es
pop
and
loope
cmpsl
push
xchg
ljmp
add
imul
add
xchg
cwtl
ja
mov
jo
add
scas
jmp
in
fdivs
push
sub
pop
push
adc
mov
or
mov
jno
push
clc
es
xor
je
mov
jno
mov
sbb
cmc
std
jne
pop
cmp
mov
out
dec
cmp
into
loop
scas
fdivs
adc
mov
jl
lods
mulb
add
int3
jb
inc
and
loope
xchg
idivl
cmp
jg
jbe
jne
pop
inc
pop
dec
dec
xchg
add
frndint
imul
jb
or
hlt
mov
xor
call
bound
cmpsb
movsb
mov
pop
mov
iret
dec
jns
mov
xor
xchg
push
sbb
jg
hlt
rol
scas
jb
cs
push
xchg
or
repz
xchg
jmp
negl
xchg
mov
and
mov
jg
inc
xchg
je
jne
addr16
sub
lret
mov
and
sbb
rcrl
jno
cwtl
push
jmp
cmpsb
lds
sub
dec
jae
fstpl
cmp
loopne
sub
clc
addr16
out
ja
mov
sub
stos
xor
dec
and
add
cmp
pop
jbe
push
insb
xor
std
xor
in
pop
mov
push
mov
dec
outsl
sub
shl
test
mov
cmpb
pop
adc
sbbb
lock
ss
aam
mov
adc
daa
adc
fucompp
push
daa
mov
pop
sbb
cs
je
jnp
scas
jl
into
mov
out
xchg
mov
mov
inc
cmp
jbe
or
hlt
jnp
imul
xchg
and
cld
leave
dec
arpl
es
mov
dec
divl
fcomp
fdivs
leave
aad
in
xchg
and
lock
js
xor
pop
mov
ljmp
xchg
inc
test
and
xor
sub
mov
sub
aas
adc
xor
pop
mov
cmp
dec
notb
cs
jle
push
mov
push
jp
adc
jae
adc
add
lcall
inc
fnstenv
mov
push
adc
jmp
jae
cmc
jbe
insb
sbb
das
lcall
add
jg
rorb
mov
stos
xor
pop
add
jbe
and
cmp
dec
cltd
shl
enter
adc
lods
xor
mov
aam
dec
daa
leave
or
das
xchg
adc
pop
rcrl
inc
adc
add
jo
jae
or
jns
test
lea
jae
mov
sub
xchg
fnstenv
dec
leave
sub
mov
popa
stos
ja
insl
dec
add
mov
mov
stc
inc
aad
pop
mov
popa
lods
dec
jbe
faddp
sti
pop
stos
orl
call
fistpll
and
push
arpl
mov
jae
mov
aaa
out
cmc
push
sub
xor
xor
outsb
sbb
es
jo
jo
jge
cmp
mov
jmp
cmp
cltd
sbb
cmp
jo
clc
dec
lds
dec
enter
jp
xchg
cmp
fistpll
add
sub
mov
dec
fnstenv
jae
test
outsb
and
adc
jecxz
sar
add
dec
es
pop
mov
jae
popf
clc
dec
je
popa
les
cltd
jo
test
shrl
dec
int
inc
lds
pop
test
sub
inc
mov
sahf
jmp
ret
mov
jbe
dec
xchg
ja
cmc
mov
inc
jle
and
pop
push
fidivl
sahf
inc
or
or
inc
sub
popa
fxch
nop
sbb
imul
fstpt
push
xor
cwtl
jae
lret
cmp
mov
lea
mov
ret
icebp
test
ret
adc
jge
mov
jno
pop
jae
xchg
adc
pop
ljmp
fsts
jbe
loope
or
das
adc
xchg
pop
mov
inc
outsb
or
dec
cli
mov
mov
fsubr
out
mov
mov
or
pop
clc
subl
xchg
mov
icebp
xchg
out
es
movsl
mov
jecxz
mov
repnz
test
mov
mov
out
inc
outsb
xchg
insb
pop
fsubrl
es
out
mov
xchg
add
stos
cld
loopne
sbb
leave
cmp
adc
lea
push
inc
mov
and
lret
add
and
in
rol
in
cmp
sbb
xchg
test
fs
test
xchg
mov
inc
inc
sub
xchg
xor
js
enter
xor
xor
sahf
push
push
jecxz
mov
stc
mov
lea
cmp
mov
xor
arpl
nop
dec
int
inc
jb
jbe
scas
add
pop
dec
adc
sbb
lds
push
je
xor
mov
aam
jle
into
fnstenv
or
sub
ja
mov
shl
hlt
push
aas
mov
movsl
xchg
test
add
fadd
jbe
test
cmp
adc
pop
push
andb
lods
sub
mov
dec
or
les
pop
mov
ds
inc
stc
sarb
lods
add
lds
push
cwtl
in
or
es
mov
add
inc
push
mov
push
add
xchg
aas
arpl
mov
clc
or
mov
push
jle
test
push
xchg
jo
pop
fdivrs
mov
push
jg
sti
add
cltd
icebp
call
loope
add
and
push
mov
fnstcw
sub
int
sbb
test
push
xchg
into
cld
lock
xchg
stos
jbe
or
pusha
ja
pop
add
fistl
inc
sbb
mov
mov
mov
sbb
sbb
fld
shr
xchg
das
icebp
push
dec
mov
out
repz
mov
sub
pop
dec
sbb
vmovntdq
cwtl
out
mov
jle
shrb
ficomps
sbb
fbld
jns
pop
xor
xchg
daa
sub
sbb
mov
cmpsb
je
ja
fadd
shll
call
test
mov
dec
cmp
pop
data16
mov
mov
not
sarl
out
xor
ret
jl
push
jb
jp
mov
mov
aam
imul
ja
or
dec
inc
mov
mov
sbb
jb
adc
test
aaa
or
jae
inc
les
jno
rcll
dec
ss
mov
dec
xor
cmp
pop
push
inc
lods
incb
data16
mov
push
and
mov
and
mov
mov
pop
pop
adc
mov
pop
push
adc
sti
aad
sbb
and
dec
bound
mov
push
mov
mov
jp
aam
pop
testb
jbe
push
imul
jp
jae
xchg
daa
lcall
das
aas
ja
mov
jne
jecxz
add
push
mov
cmpsb
push
scas
shlb
imul
out
mov
sahf
jae
stc
scas
mov
gs
and
nop
and
jae
xchg
jne
ljmp
in
mov
dec
jne
sbb
test
imul
pop
sbbb
jl
mov
flds
xor
jecxz
mov
inc
stc
lcall
jmp
dec
cwtl
mov
and
shll
or
push
sbbb
inc
out
push
mov
sahf
or
fcomps
xchg
or
push
push
xor
push
into
out
pop
movsl
test
adc
or
jbe
divb
mov
sub
mov
mov
dec
stos
jge
lahf
les
or
ja
mov
mov
iret
rcrb
stos
fimull
es
xchg
out
cltd
dec
cmp
xor
sub
aaa
gs
cmp
xchg
mov
popf
adc
idivl
xchg
sahf
pop
jns
nop
push
movsl
inc
stos
fs
push
rclb
icebp
or
adc
pop
jmp
popa
scas
out
pushf
sub
mov
adc
outsl
pop
sbb
cmp
cmpps
out
sbb
mov
cmpsb
pusha
mov
adc
and
test
cmp
std
adc
movsb
ja
jecxz
add
adc
push
ret
addb
call
pop
jne
ss
repz
stos
fldenv
sub
aaa
enter
in
rcrb
leave
sub
add
and
mov
sysexit
sbb
jge
push
xchg
sbb
jae
sub
push
mov
mov
mov
ja
fnsave
sub
pusha
and
xorb
loop
shll
push
outsb
pop
xchg
xor
jle
sbb
sbb
xchg
mov
mov
scas
inc
shrb
test
sbb
jl
mov
leave
push
push
adc
ljmp
and
xchg
push
js
insb
scas
cltd
mov
inc
lcall
sub
ds
mov
inc
clc
ds
in
mov
pop
mov
popf
pop
or
or
adc
movsl
movsb
daa
cmc
dec
and
inc
inc
mov
mov
jbe
pop
sbb
cwtl
adc
and
outsb
mov
test
inc
jnp
jo
movsb
aad
xor
jnp
jle
test
pop
jmp
orl
adc
cmp
rcrb
test
into
lods
mov
sub
push
jle
push
insb
loope
xor
nop
jae
rcl
mov
xor
pop
js
mov
xchg
mov
leave
cmp
xor
inc
out
mov
ss
or
loop
pop
inc
movsb
je
sbb
cmp
mov
pop
cmpsb
mov
push
pop
mov
push
jbe
add
mov
jo
and
sbb
jbe
lock
ja
dec
sbb
inc
ja
sar
mov
or
sti
push
sub
gs
jae
pop
mov
shll
xchg
insl
dec
cwtl
push
jp
mov
mov
outsb
test
and
dec
scas
pop
xor
jne
mov
imul
adc
jne
cs
loope
outsl
arpl
clc
js
les
dec
dec
js
jns
lods
jnp
pop
ds
int
jbe,pt
xlat
in
cmp
lods
lea
sub
mov
in
or
add
mov
sahf
xor
test
lds
lret
mov
cltd
mov
loope
ret
push
fdivl
xor
inc
sub
inc
xchg
iret
xor
mov
stos
mov
push
or
cmp
xchg
stos
push
sbb
mov
xor
jp
add
xor
jg
sub
cmp
scas
popf
pushf
xor
js
dec
in
pop
push
fmuls
cmp
or
js
lea
push
jae
je
sahf
mov
in
inc
jae
cld
xor
movsl
adc
push
mov
jae
sub
clc
daa
es
ret
nop
js
mov
js
jae
add
addr16
frstor
cwtl
mov
movsb
mov
sti
add
mov
rcrb
je
clc
mov
sbbb
pop
adc
cmp
mov
repz
es
jb
pop
fisubrl
sahf
fnstcw
rep
mov
cwtl
push
mov
cltd
lock
jns
mov
xor
jle
or
mov
push
call
sub
jg
dec
xor
jb
cmpsb
adc
mov
popf
scas
bound
xchg
test
shll
ss
iret
outsb
test
daa
clc
or
push
fcomps
xchg
jl
push
add
aaa
popa
cmp
int
sbb
sbb
das
xchg
ret
xchg
stos
inc
adc
test
loope
and
dec
pop
cmp
and
adc
jb
pop
int
push
popa
test
sbb
cmpb
xchg
stc
or
jmp
push
add
adc
insl
dec
and
and
mov
xorb
adc
add
inc
js
xchg
std
jl
je
mov
pop
loopne
das
pop
daa
add
jno
sbb
pop
mov
jnp
rcrb
in
pop
lods
or
jbe
xchg
out
outsb
fiadds
jns
rclb
inc
add
push
insb
cmpb
cmpsb
jns
mov
mov
mov
xchg
call
je
mov
clc
loop
push
iret
xor
jle
aad
mov
js
adcb
insl
sbbb
sbb
cmc
lods
loop
and
mov
mov
dec
mov
mov
xchg
pusha
jae
mov
arpl
cmp
mov
lret
or
rolb
jo
jle
lea
jecxz
rcr
dec
inc
stos
pop
test
movsl
pushl
cmp
mov
ret
cmp
movsl
adc
imul
pop
or
sub
sti
or
jo
in
mov
fiadds
sar
repnz
xor
cmp
cmpb
mov
lds
adc
mov
adc
push
addl
arpl
xor
jae
xchg
dec
pop
sbb
push
lahf
pushf
arpl
loope
pop
mov
jno
add
js
mov
sub
movsl
ja
mov
jns
cli
cld
sti
sti
dec
mov
adc
mull
int
dec
mov
nop
ss
xchg
out
jecxz
test
sahf
fwait
mov
push
gs
cmovg
test
push
dec
xchg
mov
xchg
sbb
js
xchg
push
mov
gs
push
loope
mov
and
aas
adc
inc
mov
stc
das
scas
je
mov
cwtl
sbb
divl
push
jo
lret
jno
xor
je
pop
cmp
xchg
mov
gs
mov
insb
cmp
cltd
adc
insl
push
mov
cmp
push
ja
insb
xor
xlat
imul
sub
fistps
pop
add
xlat
cmpsb
pop
push
scas
push
sub
push
adc
jbe
jb
push
push
cltd
out
mov
adc
ss
sarb
test
mov
sbb
push
out
mov
push
adc
mov
jo
mov
mov
stos
aad
adc
xchg
sub
lods
dec
popa
sbb
push
and
mov
aam
jae
sbb
lahf
pop
xor
dec
jae
inc
pop
xchg
imul
nop
stc
dec
outsb
or
cmp
cmp
add
in
push
jo
js
jl
mov
and
inc
and
jbe
adc
mov
je
mov
pop
hlt
xlat
sbb
xchg
mov
fwait
pop
in
shlb
cmp
jae
imul
ret
cwtl
dec
pop
dec
cmp
test
bound
hlt
fdivrl
add
int3
add
clc
mov
pop
out
xor
js
xor
cli
loopne
shrb
or
pop
xchg
sbb
mov
sti
in
mov
rclb
and
adc
xlat
adc
adc
jb
jmp
shlb
adc
repnz
pop
nop
mov
adc
jg
arpl
cmp
mov
sbb
xor
les
inc
pop
pop
jg
fiadds
xchg
add
mov
out
rorl
pop
mov
mov
jge
test
pop
and
adc
cmp
js
addr16
and
sbb
fcmovne
out
cmp
adc
in
cmp
xor
add
mov
push
pop
xchg
mov
push
adc
testb
inc
ja
push
xchg
push
loopne
ror
hlt
jle
add
dec
sbb
cli
cmpsl
mov
xchg
mov
enter
aaa
orl
sbb
adc
mov
or
fdivs
mov
ss
cmp
mov
arpl
adc
insb
es
mov
outsl
inc
cmp
or
js
sahf
xorb
sub
push
sbb
insb
xchg
or
sbb
xchg
push
in
add
add
call
cmp
jno
shll
test
mov
pop
orl
dec
dec
jmp
and
or
inc
push
jle
cmp
mov
js
jno
mov
negb
cwtl
adc
cmp
sub
mov
pop
inc
adc
shll
sub
jl
cs
mov
xor
sub
jo
and
cmpsb
test
sahf
fadd
xor
daa
fwait
insl
xor
out
icebp
loopne
cs
xor
in
insb
imul
xchg
popf
jno
and
sub
test
data16
or
aas
xchg
push
adc
mov
ljmp
loopne
cwtl
pop
clc
fnstcw
inc
leave
mov
lahf
inc
out
scas
iret
jp
dec
and
add
or
pusha
pop
in
and
loope
lret
inc
jp
jo
scas
je
lcall
dec
clc
cmp
insb
pop
jae
xor
inc
add
jmp
flds
lods
push
iret
dec
dec
pop
ss
ja
rcl
cmp
sbb
pop
xchg
mov
std
in
fcoms
push
adc
call
int
xchg
dec
and
adc
imul
cmp
bound
daa
jo
fcompl
pushf
in
mov
jmp
sub
mov
mov
inc
ret
gs
jbe
fs
dec
add
add
clc
pop
jg
sbb
dec
clc
mov
push
js
jnp
xchg
inc
subl
ss
jae
scas
lret
pop
adc
dec
gs
sbbl
pop
inc
inc
repz
repz
aam
adcb
or
push
cmp
out
mov
push
rcll
and
fnstsw
or
or
adc
sub
push
or
ds
jnp
ljmp
pop
repnz
into
or
xchg
xor
xchg
and
data16
mov
jae
adc
mov
fidivl
lret
sbb
mov
xor
lcall
inc
shrb
pop
cmp
pusha
sbb
cmc
mov
adc
xchg
push
pusha
xor
mov
je
ret
and
ret
or
mov
sahf
jle
ret
in
sub
mov
dec
push
xor
mov
repz
xor
or
cmp
mov
push
adc
adc
mov
adc
push
adc
xor
mov
mov
stos
inc
mov
enter
insb
jo
int
push
leave
lock
cwtl
rcrl
add
je
jae
pop
cmpsl
test
jo
push
icebp
test
cmp
xor
imul
jp
gs
lcall
jmp
cmc
inc
pop
jp
cmpsl
jl
cmp
xor
pop
dec
xchg
mov
jae
je
xchg
movsl
mov
push
or
mov
xchg
and
shll
xchg
hlt
loopne
sahf
addr16
insb
and
sbb
in
out
fmuls
xor
out
leave
mov
scas
sub
setae
fildl
sbb
and
jl
mov
sub
sub
jmp
fisttpl
and
aaa
push
stc
pop
nop
dec
jbe
sbb
lret
imul
dec
lods
es
push
bound
in
lock
js
push
and
popa
out
sbb
imull
push
data16
fabs
addr16
pop
push
xor
cwtl
jae
in
loopne
cwtl
dec
dec
pop
int
addr16
pop
stc
push
xchg
nop
das
stc
addr16
pop
jae
inc
scas
push
insl
pop
or
pop
sub
or
add
xor
lds
xor
cwtl
inc
and
mov
cltd
add
inc
js
test
push
addr16
in
fdivrp
fildl
in
mov
frstor
pusha
imul
fisubrs
pop
inc
test
icebp
lret
pop
stc
adc
mov
ds
scas
nop
mov
aas
repnz
popa
jp
insb
clc
and
loope
inc
cmp
fsubl
xchg
inc
mov
adc
loope
or
fcomps
out
fstl
inc
dec
sbb
and
jb
outsl
xor
jno
add
sti
ret
popa
cmp
dec
add
sub
xor
xor
push
cwtl
xor
and
and
jp
push
inc
insb
test
clc
js
or
adc
divl
ljmp
mov
add
sub
clc
test
pop
sub
stos
scas
push
pop
mov
shl
das
out
xor
aam
and
and
pusha
add
repz
xchg
cltd
adc
adc
mov
push
jne
ljmp
scas
cmp
sub
add
das
jp
and
dec
out
add
push
adc
or
cmp
add
jo
out
pop
cmp
pusha
icebp
repnz
es
scas
clc
pop
ror
movsb
inc
mov
mov
mov
sbb
dec
incl
jns
mov
mov
jg
ss
ret
lds
or
enter
rclb
pop
push
mov
sti
cmp
xchg
shll
das
add
insb
sub
and
mov
and
loop
push
fcomps
cwtl
sbb
inc
sub
ret
loope
pop
jp
lds
je
pop
rorb
jb
lahf
jne
ret
ror
or
sbb
test
imull
das
test
pop
push
loope
xlat
xor
push
push
sbb
repz
mov
or
stc
pop
dec
mov
pop
mov
push
push
insb
scas
pop
mov
dec
sbb
pop
sub
aad
dec
mov
dec
sub
add
add
pop
push
sbb
js
test
xchg
cli
ret
pop
cmp
sub
loope
jns
cmc
adc
push
sbb
fisubs
push
and
rolb
ja
pop
jo
push
popa
sub
mov
add
mov
nop
and
pop
dec
sbb
js
cmp
sub
pop
aaa
cmp
mov
in
dec
das
aad
add
mov
fisttps
xor
in
iret
mov
xor
shlb
xchg
imul
dec
and
xor
adcb
adc
mov
outsb
mov
sbb
mov
sub
xor
imul
mov
push
and
sahf
repz
mov
adc
cmp
lahf
scas
out
jb
mov
shll
sbb
sub
pusha
and
std
pusha
fistpll
into
pop
adc
mov
jo
sarb
cmp
cwtl
call
repz
mov
test
mov
insl
mov
movsl
leave
in
scas
push
and
pop
clc
mov
cs
adc
push
add
adc
pop
cmp
push
xor
add
out
or
mov
fmulp
and
loope
clc
into
repz
test
insb
rclb
or
ljmp
mov
ja
cmp
js
mov
xor
sub
clc
aam
pop
sahf
xchg
cmc
rolb
cld
cmpsb
lods
stc
sub
mov
lods
jecxz
push
sub
xchg
test
push
adc
cwtl
xchg
inc
pop
mov
repz
xchg
insb
cmp
jae
pop
mov
push
test
pop
or
rcll
clc
outsb
test
repz
inc
pushf
jo
sbb
mov
mov
in
cmpsb
mov
xchg
dec
add
dec
loopne
pop
inc
shrl
es
cmc
test
iret
push
fcomps
dec
or
dec
test
xchg
and
aas
outsl
xor
popa
jb
leave
adc
sub
sub
add
xchg
sbb
in
inc
add
fcoml
repnz
sbb
push
sbb
pop
sbb
mov
mov
gs
pop
sbb
insl
adc
rcll
add
fs
jno
pop
sbb
insb
mov
test
add
pushf
mov
stos
sub
insb
adc
pop
jns
add
insb
sub
or
ja
dec
scas
testb
shlb
jecxz
adc
pusha
std
and
cld
xchg
lods
dec
sub
lds
ja
adc
outsl
test
pop
push
repnz
imul
les
sbb
jle
test
adc
into
cmp
cmp
popf
jne
loopne
or
fsubrs
adc
mov
pop
loopne
xchg
xor
add
mov
cmpb
sbb
xchg
test
xor
rclb
cmc
pop
cmpsb
sbb
mov
add
cs
lret
in
sbb
cs
repnz
jmp
sub
and
arpl
ljmp
shl
jg
mov
loopne
xchg
mov
jl
xor
dec
lds
pop
imul
loope
xchg
xchg
mov
int3
cmp
sbb
mov
mov
adc
pop
jne
mov
hlt
cs
ja
pusha
xor
movsl
mov
push
in
pop
mov
jb
adc
lock
xor
jp
push
pop
cmp
imul
cmc
sahf
loopne
nop
loope
pop
mov
adc
xchg
int
pop
icebp
jecxz
loopne
pop
jne
mov
mov
cli
orb
jo
or
xlat
jge
lods
mov
cltd
cltd
test
sbb
mov
ret
insl
out
sbbl
adc
daa
inc
inc
push
dec
shll
push
push
gs
inc
sbb
xchg
inc
and
shrl
push
xor
mov
iret
adc
daa
cmp
lock
mov
out
jb
push
inc
stos
cwtl
cmp
pop
pop
mov
add
out
scas
jns
mov
mov
xor
insb
lahf
sbb
js
ret
jae
mov
jp
aaa
sbb
fwait
push
jg
fmuls
add
inc
jbe
sub
hlt
imul
jns
pop
ret
sahf
ss
jmp
lods
fidivrs
and
cs
pop
fdivrs
cmp
sbb
dec
sub
jbe
imul
lods
jp
jae
and
jge
std
ss
mov
push
mov
xchg
xchg
pop
inc
xchg
fwait
push
je
mov
jbe
pop
int
mov
insb
adc
cmc
xor
inc
mov
out
aas
lods
adc
aaa
or
xchg
add
pop
jae
add
jmp
push
jb
mov
and
aam
push
inc
push
das
jle
adcl
cmp
inc
xchg
fs
mov
mov
mov
mov
mov
test
ficompl
data16
jne
cmc
sbb
lcall
repnz
loope
xchg
xor
clc
adc
sbb
gs
daa
rcll
idivb
mov
pop
test
cmp
xchg
xorb
mov
xlat
pop
arpl
clc
jns
inc
add
pop
lods
jno
mov
jnp
cmp
cltd
push
ret
mov
xchg
jbe
popa
fcom
push
mov
pushf
mov
or
push
inc
adc
fwait
sbb
sbb
or
pushf
cltd
mov
sbb
inc
add
jl
call
or
fwait
imul
sbb
js
mov
jb
pop
adc
dec
data16
decb
push
xor
jae
shlb
stc
movsb
adc
cltd
adc
call
mov
xor
repz
rcrb
mov
xchg
rorl
sti
or
sbb
popl
xchg
jo
sub
mov
sub
push
fsubs
ret
inc
mov
xchg
xchg
push
push
movsb
sub
ror
or
sbb
testb
xchg
lea
mov
xor
lahf
inc
or
js
sub
dec
jbe
inc
das
cmc
jae
xlat
les
xchg
flds
push
adc
jbe
ret
jp
loopne
pop
sub
mov
add
xlat
adc
xchg
cld
sub
jl
fcomip
int3
gs
subb
adc
pop
pop
pusha
inc
xor
out
loopne
out
nop
sbb
dec
cmp
jb
lods
push
ffree
cmpsb
gs
cmc
scas
je
jbe
jae
leave
dec
dec
iret
push
push
cmp
roll
in
or
fnstenv
pop
inc
scas
imul
ljmp
mov
mov
dec
mov
lods
jno
cmpsb
push
outsb
cltd
test
dec
in
mov
clc
enter
mov
lea
mov
fmuls
cwtl
cmc
xchg
aam
mov
in
dec
push
xchg
or
rcrb
or
dec
lcall
mov
push
adc
es
mov
xor
test
add
rcrb
lods
jmp
addb
mov
sub
dec
cmp
pushf
std
outsb
jbe
jae
jbe
insb
mov
xchg
push
test
jl
xchg
xchg
mov
adc
pop
sbb
xchg
xchg
add
pop
xchg
or
popf
insl
div
sub
rcrb
mov
loop
pop
jge
repnz
sbb
es
fsubrl
push
and
std
push
sub
push
mov
push
push
mov
shr
imul
adc
es
arpl
icebp
pop
rcll
sahf
repnz
loopne
cmp
js
leave
out
pop
push
mov
mov
mov
dec
insl
inc
inc
pop
aas
mov
stc
iret
xchg
data16
xor
addl
dec
clc
xor
or
insb
add
push
lret
jmp
pusha
adc
mov
adc
mov
int3
lock
inc
mov
adc
negb
sbb
adc
cs
jp
jo
lret
push
jle
push
lcall
add
xchg
sub
jae
enter
mov
xor
xchg
jb
and
add
mov
sub
pop
inc
push
pushf
push
mov
mov
push
sub
pop
mov
mov
ret
dec
imul
ljmp
les
xor
xorl
sub
jmp
cmp
jp
xlat
and
cmp
fcoms
sbb
pop
xchg
add
js
push
in
mov
iret
ret
pusha
mov
into
jge
notl
cmpsl
mov
xor
adc
imulb
sbb
xor
call
xor
xor
pusha
jp
sahf
push
mov
repnz
repz
mov
cmp
scas
cmp
cwtl
or
xchg
jbe
cmp
pop
in
and
test
xchg
cmp
mov
movsb
shll
sub
scas
ret
or
mov
adc
inc
test
push
dec
push
jb
sub
test
xor
add
xor
pop
out
aaa
xchg
jae
arpl
out
out
mov
rcl
test
jbe
aad
xor
shrl
adc
add
into
bound
lods
aad
sbb
lods
out
pushf
sbb
or
adc
pop
mov
test
cmp
mov
lret
and
jno
cwtl
je
push
jne
orl
adc
adc
cmp
testl
pop
cs
xchg
es
pusha
cmp
push
out
dec
mov
push
scas
pop
xchg
mov
push
push
adc
sbb
sub
mov
iret
repz
sbb
jbe
xor
ss
lock
or
jo
jbe
jg
outsl
loope
inc
pusha
lcall
les
dec
mov
imul
or
scas
add
mov
mov
pusha
test
addr16
jmp
mov
lods
scas
mov
test
loope
jmp
nop
addr16
test
nop
cwtl
inc
xchg
sub
mov
mov
pop
or
inc
pop
or
cmpsb
fdivp
out
push
lret
ljmp
rol
inc
xchg
out
xchg
xor
cmp
lret
or
and
jl
aam
sub
and
mov
ja
push
mov
testl
mov
aas
filds
dec
test
cwtl
inc
fidivrs
jo
jae
hlt
push
int
into
sub
push
movsb
mov
data16
cmp
out
dec
fs
stos
push
mov
push
out
mov
and
jg
mov
stc
mov
aaa
imul
adc
je
or
push
addr16
jae
int
loop
shlb
imul
xor
or
test
enter
iret
xchg
outsb
inc
call
shrb
add
jbe
mov
cmp
fldenv
repz
sbb
inc
test
mov
pushl
add
icebp
or
clc
mov
ja
fdivr
pop
enter
test
mov
shrl
and
sbb
jae
xchg
mov
sbb
dec
es
sub
sbb
push
cmc
add
test
and
data16
xor
jg
mov
adc
mov
mov
dec
es
jb,pt
ss
mov
scas
std
sbb
push
push
enter
sub
or
sub
mov
push
mov
mov
adc
add
js
push
jl
inc
cmc
xor
sub
js
ljmp
pushf
scas
idiv
adc
adc
lods
cmp
jge
lock
xchg
mov
jns
mov
mov
pop
fimuls
lock
mov
sbb
sub
or
mov
test
dec
mov
ss
enter
jae
es
mov
test
push
push
mov
adc
dec
repz
mov
cwtl
push
sahf
adc
lods
xchg
xorl
add
out
add
jb
xor
push
movups
shrb
cmp
jae
xchg
aam
dec
sbb
lret
out
adc
call
leave
fdivrs
inc
mov
insl
flds
js
mov
lods
lahf
jmp
cld
jo
push
push
pop
mov
insb
dec
in
xor
adc
pop
bound
cltd
jae
fsubl
push
out
ss
loope
fwait
adc
pop
xchg
push
cli
pop
add
mov
pop
mov
test
lods
mov
sbb
jbe
xchg
xor
inc
nop
xlat
push
cltd
adc
daa
mov
roll
xchg
inc
imul
sbb
sbb
jae
xor
pop
push
lods
outsb
imul
sbb
popf
jae
in
mov
lahf
sahf
dec
sbb
jne
lock
ja
push
stos
jbe
call
lds
imul
outsb
adc
mov
out
out
and
lock
and
iret
mov
call
test
xor
sub
stc
mov
pop
aad
xor
xchg
loopne
clc
and
add
push
aas
arpl
xchg
pop
push
adc
andl
inc
ss
xorb
loopne
and
mov
dec
xor
aaa
and
fimuls
cmp
out
clc
xchg
inc
push
fcoms
loopne
inc
jge
dec
push
xor
lcall
xor
sub
sbb
push
daa
or
jae
jle
mov
dec
js
mov
scas
addr16
and
xchg
pop
sbb
jb
adc
loope
movsb
adc
rolb
stos
mov
push
jns
andl
jno
inc
int3
jmp
and
popf
mov
ljmp
mov
js
adc
pop
xlat
xor
lcall
and
mov
mov
data16
cld
dec
out
shll
mov
jae
mov
pop
add
pop
push
fists
mov
sub
dec
shlb
mov
sub
xorb
add
push
sti
dec
push
add
pop
sbb
imul
stc
sbb
das
test
sti
mov
xchg
adc
xor
xchg
dec
or
jle,pt
mov
fnsave
push
stc
aad
push
gs
add
mov
pushf
jae
mov
into
mov
ret
add
and
jbe
sahf
pop
in
adc
push
or
outsl
mov
pop
rolb
aaa
xchg
jno
push
fs
dec
shlb
jno
fwait
xchg
pop
cmc
xor
mov
inc
loopne
lds
xor
into
xchg
notb
sbb
outsl
fistps
sbb
sub
pop
xchg
mov
inc
ss
jbe
adc
jo
adc
cmc
sarb
mov
sub
push
mov
clc
xchg
and
jle
jo
mov
cmc
lods
mov
or
cmpsl
xor
roll
popa
imul
pop
xchg
pop
jle
pop
repz
push
aad
mov
insb
mov
hlt
fsubrl
notl
negb
cltd
xchg
sbb
arpl
shr
pop
pop
and
pop
ret
pop
icebp
rcrb
dec
add
arpl
sbbb
fstps
xchg
push
mov
xchg
fsubrs
pop
ss
sub
sub
imull
inc
or
es
mov
push
cltd
lods
scas
es
xchg
std
in
mov
cmpsl
insl
xor
pop
inc
sub
ja
scas
or
jo
sbb
sub
pop
data16
jle
xchg
push
pop
stos
mov
xor
cmp
jo
mov
mov
push
arpl
pop
inc
push
dec
loope
push
repz
and
iret
mov
inc
add
ja
pop
pop
clc
addr16
movsb
call
pop
lcall
hlt
push
xchg
mov
test
pop
dec
aaa
inc
push
xor
int3
outsl
ljmp
es
ss
pop
jo
cltd
dec
pusha
cmp
jl
rorb
pop
sbb
dec
and
xchg
clc
pop
jmp
jae
pop
int
push
pop
xchg
lods
pop
or
jmp
sahf
lea
cmp
sub
sub
mov
and
xor
sub
mov
sub
mov
cmp
lret
shrl
popa
cltd
orb
mov
jnp
lret
sub
or
fildl
push
push
cs
iret
sub
pop
mov
cmc
jb
es
pop
lret
outsb
sahf
add
cwtl
pop
push
mov
push
jae
leave
pop
jle
cmc
enter
test
dec
pop
xor
sub
lods
nop
add
gs
cwtl
in
jae
add
rclb
aam
xlat
inc
mov
decl
xor
jg
stc
scas
push
mov
and
mov
push
addr16
jae
jbe
sti
jns
aam
cmp
and
sbb
fwait
dec
data16
test
mov
add
mov
shlb
cmp
cld
jne
ret
outsb
xchg
fisubs
rcrl
jns
pop
cwtl
dec
fbstp
xor
and
xchg
dec
jbe
pop
pop
adc
fadds
xor
mov
ret
roll
inc
leave
repnz
rorl
es
mov
xor
jle
xor
shlb
jbe
inc
sub
addr16
pop
repz
jb
movsb
dec
hlt
out
push
pop
fstps
push
jae
inc
fldcw
mov
inc
pop
fistl
sahf
sbb
repnz
push
jae
outsb
sarl
lcall
iret
fmuls
jg
movsb
mov
sub
cmp
sub
clc
sarl
and
scas
mov
jge
jl
test
ja
or
cmpsb
fwait
mov
and
add
imul
add
sub
inc
das
adc
sti
ret
sub
cwtl
and
push
cld
mov
jae
pop
jbe
dec
call
cmpsb
adcb
xor
mov
insb
lcall
js
cmp
in
push
stc
push
xchg
pop
je
ret
std
js
mov
cwtl
mov
mov
into
dec
dec
subb
cmp
xor
aas
jae
jae
jns
xor
je
mov
in
call
cmp
push
hlt
sbb
mov
lods
shll
xchg
mov
jbe
mov
rcrl
pop
lods
sub
test
outsb
mov
pusha
test
push
add
xor
push
mov
xor
in
in
push
int3
js
or
and
aaa
or
push
lock
push
daa
popf
adcl
mov
popa
dec
mov
xchg
mov
xor
std
decb
dec
mov
nop
in
mov
test
pop
mov
mov
xor
mov
test
mov
scas
addl
push
js
xchg
and
in
aad
in
adc
test
repz
rorl
xchg
jecxz
adc
sti
push
xchg
inc
push
add
and
push
jp
js
sbb
dec
dec
fwait
mov
and
fmul
or
jae
out
add
bound
insb
add
ret
cld
movsb
or
and
pop
mov
jp
push
sbb
mov
dec
mov
movsb
mov
or
jae
cmpsl
bound
sbb
pop
int3
fiaddl
fwait
jp
push
fcmovb
aas
fidivs
sbb
rcrb
js
or
test
clc
cmp
mov
out
pop
mov
pop
jbe
das
sbb
movsb
xchg
mov
adc
push
js
mov
jle
mov
movsb
scas
data16
inc
push
dec
jge
push
push
in
jl
decl
fsubs
sbb
out
ss
jo
test
dec
inc
push
mov
add
ljmp
pop
xchg
add
hlt
pop
inc
nop
add
mov
xor
sub
nop
aad
xor
sub
push
xchg
sub
sub
fldcw
mov
jns
sub
jne
addr16
add
jle
push
repnz
nop
fsubs
pop
aam
insb
insb
loope
adc
fsubrp
lcall
pushf
push
or
jno
cmp
lods
sub
xchg
sub
jae
enter
xchg
cld
ss
and
into
sbb
and
fxch
sub
in
mov
or
ja
ljmp
shl
adc
repnz
out
nop
pusha
jb
adc
rcrb
insb
cmp
push
lds
xor
enter
and
adc
imul
arpl
movsb
gs
jmp
addr16
push
xor
mov
lods
inc
jle
gs
cmp
aam
aas
pop
pop
out
and
idivb
sbb
pop
and
outsl
data16
dec
or
jno
int
adc
lea
cmp
pop
mov
adc
xchg
fdivrs
sub
lahf
pop
push
mov
test
or
popf
dec
sti
mov
jae
repz
jge
mov
cmpsb
push
add
xlat
mov
mov
enter
adc
jmp
popa
pop
and
pop
xchg
push
fwait
movsl
mov
stc
sbb
pop
loope
inc
int3
or
xor
add
stc
push
cmpsb
cltd
jne
stos
sbb
pop
adcw
ljmp
arpl
idiv
jae
pop
sbb
fsts
mov
sub
adc
divl
popaw
inc
and
jbe
sub
sbb
hlt
inc
mov
gs
cmp
into
xchg
nop
pop
fwait
cwtl
pop
push
inc
adc
dec
cmp
pop
repz
aam
pop
mov
cld
adc
and
and
pop
sbb
sbb
push
lods
roll
push
or
into
mov
pop
add
mov
lods
and
scas
xchg
icebp
and
insb
mov
scas
pop
mov
xchg
ja
or
or
mov
add
sbb
mov
xorb
leave
ja
push
cwtl
or
cmp
jge
push
xchg
popa
dec
xchg
cwtl
sbb
jge
shl
ret
xor
aaa
imul
mov
mov
or
mov
add
mov
push
test
mov
ja
mov
movsb
mov
outsl
or
inc
xorb
xchg
and
xchg
push
inc
pop
loop
xchg
fistpl
lock
mov
lret
pop
daa
adc
addr16
cld
sub
cmpsb
test
enter
repnz
inc
js
in
mov
loopnew
shl
icebp
jbe
sahf
xchg
mov
or
cmp
inc
pop
popl
je
jae
out
or
and
add
or
mov
es
push
push
or
push
xlat
dec
pop
cmp
jo
enter
test
sub
andl
xchg
pop
wbinvd
cmpsb
not
cld
sub
lahf
dec
jb
pop
testl
pusha
mov
sub
outsl
fucomi
jle
xchg
mov
fmuls
stc
cmp
mov
inc
jle
dec
xlat
sahf
inc
dec
xchg
imul
jge
push
insl
cmpsl
out
adc
xorl
sbb
ljmp
inc
insl
stc
xor
sub
js
cmpsb
jle
iret
adc
rol
push
mov
sbb
cmc
mov
out
hlt
xor
mov
in
es
rcrb
cmpsb
ja
or
in
push
dec
mov
mov
dec
test
push
jle
add
pop
test
js
pop
xchg
dec
and
jp
adc
dec
lock
push
or
xchg
adc
and
mov
mov
das
notl
fstl
sub
mov
out
ds
fwait
jb
adc
xor
and
hlt
pop
mov
sub
fistl
jno
mov
aam
mov
add
jmp
xor
inc
mov
rcrl
mov
cs
mov
pusha
mov
mov
adc
cmpsb
jns
adc
inc
clc
in
test
and
stc
jb
imul
test
sbb
pop
pop
test
mov
rclb
mov
jmp
sub
xchg
xor
stos
mov
mov
adc
and
jge
leave
movsb
cwtl
sbb
sub
repz
andb
arpl
push
jl
aad
jno
adc
scas
addr16
cmc
xor
addl
sub
add
sbb
insl
xchg
pop
sahf
jb
push
pop
fcomps
and
push
stos
dec
xlat
xor
ja
jbe
loopne
xlat
pop
dec
add
push
inc
adc
cmp
xchg
scas
js
push
xchg
cmp
mov
xchg
xchg
xor
insl
imul
addr16
cli
and
push
push
clc
cmp
in
divb
mov
je
out
pop
lods
cmp
ror
sarl
cmpsb
test
mov
lahf
jae
mov
fsubrs
out
adc
mov
or
mov
lcall
jae
outsl
dec
and
mov
or
test
and
jl
out
xlat
xor
and
out
mov
and
imul
into
xchg
fcompl
push
in
loop
jno
mov
pop
xchg
mov
and
pop
jp
mov
push
pop
push
mov
push
in
push
fcompl
push
xchg
out
adc
pushl
xor
mov
pop
inc
and
test
mov
mov
imul
jae
xor
es
imul
lea
ds
lock
adc
push
lock
out
push
test
adc
scas
sbb
iret
push
xchg
add
sarb
xchg
fsubs
popa
mov
xchg
pop
xchg
test
cmpsl
imul
mov
sbb
mov
mov
fadds
repnz
xchg
cmp
adc
ss
mov
jp
notb
push
mov
faddl
stos
sbb
inc
mov
push
mov
sbb
cmp
push
dec
ret
lods
sbb
xor
jp
mov
mov
insb
jno
stos
adc
test
sbb
clc
xor
insb
sbbb
andl
bswap
roll
push
pop
cmp
mov
pop
xlat
mov
push
pushf
sub
test
or
rcll
xchg
adc
ds
cmp
popa
repz
xchg
push
push
sbb
push
jbe
and
scas
pcmpeqb
int3
punpckhbw
lds
test
xor
insb
iret
jnp
or
adcb
arpl
lret
jne
leave
repnz
sub
sbbl
dec
add
mov
mov
push
lret
decb
adc
aad
xor
inc
jb
mov
xor
shl
mov
sbb
cmpsb
xchg
and
add
and
mov
mov
pop
out
add
xrelease
cmp
nop
xor
sub
ss
jg
xlat
adc
mov
clc
inc
pop
stc
mov
lods
add
nop
mov
mov
push
mov
lea
xchg
cmpsb
pop
adc
sub
dec
jg
shrb
mov
inc
mov
mov
jle
mov
cmpsl
daa
add
test
outsl
mov
xchg
xlat
mov
mov
push
sbb
mov
notl
jle
jb
jae
outsl
and
jbe
adc
and
adc
or
movl
jne
sbb
ret
or
idiv
xor
mov
cmp
test
inc
sbb
lret
loope
push
vpcomud
out
sub
ss
sbb
or
icebp
pop
xlat
pop
pop
add
sbb
out
inc
mov
ss
ss
mov
shrl
push
in
jae
ja
cmpsl
aad
lock
cmpsb
adcl
mov
mov
jnp
enter
cmp
xchg
mov
mov
aam
test
sbb
sbb
shll
sbb
cmp
out
fcom
jl
pusha
imul
mov
jl
scas
cs
sbb
hlt
ss
jae
int3
and
das
mov
sub
dec
inc
in
lock
loopne
movsl
ret
cs
jns
call
shrl
push
fcomps
ret
inc
sub
xchg
jb
out
imul
dec
scas
jl
imul
cmp
in
push
pop
repz
shll
loopne
dec
lock
call
inc
cld
pop
dec
shll
in
mov
cmp
adc
mov
js
cmp
and
dec
xor
mov
xor
sbb
data16
gs
push
xchg
push
fmuls
iret
adc
jbe
mov
in
fiadds
in
adc
cmp
mov
sbb
xor
mov
ds
jae
pop
imul
mov
jg
ja
lock
loope
mov
rcrb
add
mov
sbb
ja
dec
adc
scas
loope
movsl
insb
lds
jno
nop
cmpsb
into
insb
cmp
jns
cld
pushf
inc
xchg
dec
push
adc
das
sub
bound
insb
dec
in
and
mov
stos
stc
push
mov
add
sbb
or
pop
mov
repnz
scas
addr16
ret
adc
jb
jae
mov
aaa
xchg
sub
rclb
xor
das
mov
lahf
adc
or
mov
xor
mov
jno
push
adc
pop
iret
mov
inc
dec
in
fxam
jb
adc
call
test
xchg
test
mov
pop
add
aas
mov
push
cmc
and
adc
sub
adc
sub
xor
aaa
stos
and
inc
mov
stos
jb
sti
and
jp
push
xor
movsb
and
dec
adc
sbb
mov
clc
xchg
xor
jo
mov
repnz
repz
mov
pop
mov
adc
inc
push
jp
jae
mov
lcall
in
push
sub
or
mov
inc
and
mov
call
xor
adc
aad
mov
add
adc
and
nop
ja
jmp
and
mov
adc
je
es
lahf
xchg
jbe
push
adc
adc
insl
inc
cmp
inc
jae
sbb
mov
mov
pop
push
pmaddwd
ret
dec
inc
or
mov
shlb
cmpsl
sti
or
adc
cmp
pop
mov
mov
jae
pop
dec
adc
sbb
arpl
enter
dec
outsb
add
push
int3
cmpxchg
js
xchg
es
rorl
mov
jae
jle
lcall
mov
jns,pn
scas
jnp
inc
lcall
fwait
jp
imul
mov
mov
outsb
out
out
imul
jb
sub
leave
jae
shlb
pop
mov
pop
popa
in
cmp
inc
js
sarl
test
cwtl
adc
mov
mov
scas
add
pop
lods
ljmp
loope
or
adc
ret
lret
and
fsubrs
mov
push
pop
mov
leave
or
mov
xor
adc
jae
push
inc
stc
popa
push
mov
sbb
sti
cli
sub
mov
fldt
lods
leave
push
jne
test
movsb
movsb
mov
ljmp
xor
xor
and
push
pmaxub
iret
sbb
sahf
scas
movsb
lea
lods
fstpt
mov
lcall
cwtl
or
push
pusha
adc
pop
adc
not
xor
mov
xor
js
mov
mov
xchg
add
jle
pop
adc
test
outsb
cmp
pop
imul
movsl
push
dec
or
push
shll
mov
and
dec
pop
leave
cwtl
sub
gs
es
addr16
or
mov
sbb
push
push
fmuls
xchg
or
add
cmc
jb
outsl
push
pusha
jno
mov
test
sub
shlb
inc
flds
inc
lock
cmpsl
jae
adc
and
aas
push
jb
out
sbb
jae
sahf
popa
lret
jge
mov
pop
arpl
hlt
sbb
sbb
test
lret
in
push
jl
xchg
pop
mov
mov
clc
xlat
and
sarb
das
test
jne
popf
call
xchg
sub
int3
daa
mov
in
xchg
das
inc
jge
es
jno
insb
jle
or
lcall
xor
inc
mov
add
inc
lea
ficoml
shl
jae
adc
cmpsb
mov
pop
loope
jl
xchg
mov
mov
loope
push
or
ljmp
sub
pop
xchg
cmpsb
mov
pusha
bound
int3
and
pop
aam
rcrb
iret
dec
add
into
mov
mov
out
call
mov
lods
stos
adc
imul
stc
loope
cli
fldt
int3
mov
rclb
idiv
sbb
les
test
sbb
jg
insl
add
jae
cmpsb
scas
push
or
call
insb
or
sbb
mov
dec
adc
mov
adc
mov
dec
dec
sahf
mov
je
jno
jae
add
mov
call
fldenv
ss
adc
mov
adc
jae
loopne
cld
call
mov
loope
stos
push
mov
xorb
cmpsb
inc
movsl
push
int3
push
xor
adc
leave
int3
sbb
movsl
push
inc
xor
cmp
adc
mov
or
add
mov
addr16
adc
sahf
dec
jge
or
cmpsb
mov
xlat
xor
inc
add
sbb
jp
add
jle
push
sub
cmp
dec
in
test
xchg
cmpsb
push
mov
fsub
repnz
adc
xorb
js
pop
fdivrp
and
aaa
sub
xchg
int3
inc
pop
pop
ficoms
pop
push
ror
js
dec
inc
jle
jecxz
jo
rorl
push
push
xor
repnz
mov
mov
xchg
sub
cmpsb
sbb
fisubrs
ficoms
sub
pop
inc
adc
adc
popf
ja
out
ss
adc
inc
push
mov
es
fadds
es
mov
and
shll
inc
daa
jbe
repz
and
cli
fs
cwtl
sub
sbbl
adc
mov
xchg
stos
andl
inc
xorl
push
mov
pusha
rclb
xchg
cmpsb
lahf
stos
pusha
jecxz
xchg
popa
in
test
pop
pushf
sbb
inc
pop
push
add
clc
mov
cmp
fisubrs
inc
test
pop
testb
imul
sbb
jae
push
iret
sbb
shr
xchg
xchg
xchg
orb
and
lahf
pop
insb
mov
xor
js
pop
mov
jle
xchg
popa
xor
inc
je
dec
add
push
jns
xor
or
fdivrs
int
mov
adc
bound
call
pop
adc
bound
push
ds
lods
dec
fcoms
push
adc
ret
or
movsb
xchg
cmp
xchg
and
sbbb
shll
jne
ds
out
test
xchg
xchg
iret
daa
enter
icebp
shll
xor
adc
sbb
clc
push
xchg
lds
mov
inc
or
ljmp
push
jb
mov
sub
push
ret
or
js
fdivs
jmp
lock
out
js
xchg
xchg
outsb
adc
fsub
mov
int3
push
xchg
pop
inc
out
insb
les
cmp
push
jne
fsubs
outsl
imul
test
adcl
repz
repz
rsqrtps
rcrb
loopne
mul
adc
xchg
pop
shlb
xchg
adc
lahf
fmuls
lcall
repnz
aaa
int3
cwtl
mov
or
push
mov
add
data16
test
bnd
stc
cmp
subl
addr16
and
shlb
test
dec
cmpsb
lds
mov
xchg
mov
inc
stos
add
add
push
mov
jae
les
sahf
js
adc
loope
mov
and
dec
add
imul
clc
mov
push
adc
sbb
push
out
fsubrs
jl
dec
xor
sbb
pop
jae
jns
adc
lret
cltd
out
push
stc
in
xchg
mov
clc
cmp
mov
adc
test
int
subb
inc
rclb
js
pop
sub
cmp
xor
mov
fs
or
gs
jb
out
mov
fdivr
fsubp
adc
pop
xor
cmpsb
xchg
pop
fildll
cmpsl
jae
mov
popf
addr16
cltd
push
fimuls
sub
mov
shlb
test
mov
push
jle
sbb
push
fcomps
inc
cmp
push
cmc
js
add
cvtdq2ps
movsb
shl
jnp
ret
ss
aam
dec
inc
stc
and
call
xchg
lret
and
mov
outsb
push
rclb
jae
popfw
aaa
mov
out
rolb
shl
mov
pop
add
fistps
dec
loopne
pop
cmc
mov
stc
sbb
incl
daa
sbbl
in
in
pop
dec
rclb
lret
sub
inc
loope
scas
enter
loope
jp
xor
push
mov
adc
fs
test
cmp
lds
outsb
test
jo
mov
f2xm1
xor
mov
movsb
test
cmpsl
mov
cmp
adc
mov
push
mov
jbe
fwait
dec
jp
call
jae
pop
es
call
xchg
mov
sub
stos
xor
sbb
das
mov
and
mov
scas
cli
inc
jb
xlat
jbe
aas
in
adc
mov
or
aas
add
cmpsl
pop
fwait
mov
jae
jbe
insl
out
out
pop
enter
cli
cld
movsb
sub
sarl
or
and
mov
xor
pop
pop
xchg
mov
inc
push
cmp
adc
sub
jo
or
and
sbb
push
lcall
pop
mov
test
xor
push
jo
adc
mov
nop
xorl
lcall
push
rcrb
sbb
mov
mov
vpshaw
inc
dec
rcrb
out
repz
mov
fcoml
outsb
ficomps
jae
push
stos
icebp
xchg
pop
adc
adc
pop
fistps
bnd
das
outsb
mov
and
pop
jae
dec
loope
lock
inc
ljmp
mov
pop
outsl
jb
int
pop
push
mov
mov
repnz
push
imul
ror
pop
pop
fisubs
insl
fcoml
aas
test
jl
je
dec
pop
cmp
fs
sbb
jg
mov
ljmp
insb
xchg
test
ja
xchg
out
mov
and
cwtl
fs
outsb
sbb
popl
fcom
xor
xor
test
xlat
jp
xlat
push
or
sbb
pop
xchg
and
into
adc
mov
dec
mov
push
adc
cmpsb
dec
pop
out
jg
int3
mov
xchg
mov
scas
jle
dec
pop
int
call
inc
shlb
rcll
subl
ja
aas
jns
adc
dec
aam
js
pop
mov
sub
push
hlt
dec
data16
cltd
sub
xlat
and
pop
xchg
inc
adc
test
imul
push
push
jp
xor
lahf
fisttpll
adc
cmpsl
iret
nop
mov
push
dec
xchg
pop
stos
sbb
sub
repnz
jmp
xchg
lods
cmp
dec
add
iret
roll
pop
mov
pop
sub
mov
scas
rcrb
int3
and
and
jo
sbbb
jo
out
xchg
mov
sub
pop
or
mov
sahf
mov
cmp
out
and
pop
cltd
scas
push
sahf
xor
movsb
jo
std
mulb
push
rcll
arpl
mov
das
addr16
rorl
insb
insb
imul
add
add
mov
dec
adc
jnp
cwtl
xor
lcall
dec
or
lds
sbb
or
dec
xlat
add
cmp
ja
fidivl
insb
int
xchg
and
fs
adc
les
je
fisttpl
xchg
outsl
int
pusha
dec
push
cmp
mov
addr16
imul
xchg
xor
enter
push
sub
jmp
repnz
iret
loop
cmc
mov
imul
pushaw
rorb
ret
mov
xor
push
rcll
jb
push
ja
scas
xchg
or
mov
imul
adc
pop
jno
xlat
fs
roll
xchg
jno
aaa
sbb
push
arpl
sbb
push
loopne
adc
addr16
fld1
fsubrl
outsb
les
pusha
sbb
xor
sbb
and
xchg
out
xchg
and
data16
out
mov
xor
negb
and
mov
loopne
ret
js
push
cs
arpl
enter
in
mov
mov
inc
dec
mov
mov
lods
mov
xchg
sbb
mov
mov
fdivrs
jae
sbb
inc
mov
mov
add
js
rclb
and
pop
sti
fs
dec
xlat
add
jecxz
jl
ljmp
lods
or
sub
lret
and
psllq
lds
push
pop
pop
cmpsb
xchg
jmp
adc
pop
or
sub
jl
cmp
nop
fs
and
iret
add
test
and
mov
fmul
test
pop
cmp
ljmp
jo
xor
jmp
push
out
fsts
adc
jl
or
sbb
adc
loopne
inc
push
add
adc
daa
stc
add
stos
mov
pop
test
and
xor
or
icebp
aam
iret
into
jo
sub
outsb
jmp
adc
ja
mov
mov
dec
cmp
mov
data16
in
out
sahf
push
pop
imul
xchg
pop
lods
mov
setnp
test
or
adc
push
outsb
iret
call
testb
adc
push
cmp
push
dec
sahf
cwtl
cmpsb
js
int
mov
pop
xlat
inc
js
mov
aam
adc
pop
sbb
mov
clc
xor
pop
xor
jb
out
or
fnsave
pop
jo
pop
out
xchg
dec
mov
pushf
inc
mov
int
sbb
push
sub
std
xor
and
sbb
xchg
aaa
push
add
pusha
jg
pop
sbb
inc
push
xchg
sti
push
out
jl
xchg
rolb
mov
pop
cmc
jb
and
mov
stos
sub
lds
and
into
xor
jp
mov
mov
adc
and
mov
cmpsb
pop
jnp
inc
and
xor
xchg
cmpsb
mov
dec
xchg
mov
mov
out
sbb
ja
fs
subb
jmp
imul
push
mov
fistpll
lret
adc
sub
push
mov
pop
imul
sbb
add
cmp
inc
pop
jae
sbb
in
in
repz
shl
pop
mov
push
sbb
xlat
adc
adc
nop
or
mov
loope
mov
xor
jmp
out
mov
cmc
in
aad
mov
mov
dec
scas
fnstcw
inc
pop
fcmovne
pop
lea
sar
mov
rcll
out
lret
push
fs
sbb
and
mov
mov
jae
insl
sub
and
lahf
jmp
or
adc
cmpsb
adc
into
dec
xabort
jle
sbb
sub
hlt
dec
cwtl
mov
xor
xchg
jle
in
cmp
repnz
test
sbb
sub
mov
orb
inc
into
pushf
fdivrs
out
push
sbb
andl
and
mov
pop
and
inc
test
mov
mov
sbb
clc
or
cmp
jb
fsub
sbb
clc
mov
sbb
test
dec
divl
stos
cmpsl
pop
cmp
sbb
mov
pop
clc
xor
fdivrs
mov
xor
pop
fcomps
ret
jg
jg
push
cs
and
mov
es
fwait
movsb
jmp
fsubrl
jb
mov
mov
jae
out
jne
dec
push
and
int
or
pushf
cmpb
rol
sbb
pop
out
cs
stos
cltd
push
inc
or
into
imul
jne
pushf
mov
shufps
adc
rol
pop
adc
inc
jl
int3
or
pushf
loop
push
mov
pop
xchg
pop
aam
mov
js
mov
mov
stc
or
mov
orb
cmp
icebp
xor
ficompl
sbb
cltd
lahf
adc
jbe
leave
xor
loope
mov
sbb
out
sbb
dec
sub
arpl
aad
movsb
shr
mov
sub
inc
out
imul
jns
ss
pop
lds
loop
lds
mov
mov
inc
jge
sub
push
jbe
mov
rcrl
xchg
dec
movsl
sbb
ficoml
inc
mov
repnz
jo
js
hlt
inc
push
popl
cs
in
mov
pop
xlat
loop
pop
push
les
xor
mov
clc
jmp
xorb
es
xchg
xchg
sbb
icebp
xor
mov
test
insb
jmp
pop
xchg
fsubs
or
jae
dec
push
mov
add
sub
popa
and
imul
or
cmpb
xchg
es
dec
cmp
xchg
insl
pop
xor
stc
movsl
enter
shll
lock
push
outsl
push
orb
stc
pop
orb
sbb
stc
sub
pop
ss
stc
adc
adc
push
mov
mov
mov
jl
push
call
fistl
cmc
stc
js
inc
mov
insl
dec
xchg
sbb
sbb
arpl
ss
cmpsb
pop
pusha
xor
jns
mov
in
lret
add
jmp
fsts
dec
mov
xchg
inc
inc
hlt
flds
hlt
mov
xor
divb
push
xchg
scas
rcl
int
mov
dec
xchg
js
mov
xchg
adc
xor
into
xchg
mov
insb
push
icebp
clc
repnz
mov
fcoms
stc
fadds
cmpsb
cmp
cmp
pop
xchg
rol
push
fsubr
cmpsb
insb
xchg
cmc
cmpsb
mov
xor
adc
js
xor
mov
stc
out
mov
or
cli
mov
jne
movsb
pop
sahf
push
cli
mov
out
fbstp
pushl
cltd
cld
xchg
aaa
inc
shl
jo
and
stc
pop
jbe
movsl
fmulp
movsl
shll
push
scas
jbe
sbb
sbb
bound
clc
pop
jnp
jae
sti
push
insb
ss
stc
sbb
push
mov
sbb
pop
addr16
mov
dec
cmp
push
xor
aad
call
stos
mov
inc
jle
mov
cmc
ja
mov
aas
into
mov
mov
pop
test
mov
add
jno
inc
xchg
cmc
sbbl
rorl
adc
into
add
xor
inc
jae
repz
adc
stos
pushf
js
mov
mov
add
sbb
cwtl
inc
in
sub
popa
out
fisttpl
fidivrl
sbb
and
or
xor
icebp
cli
xchg
sbb
jbe
mov
dec
lcall
lock
or
xchg
jle
jne
adc
xchg
shll
xchg
mov
mov
push
js
mov
mov
adc
testl
pop
es
das
cmp
addr16
cmp
fmulp
movsb
scas
dec
insl
dec
and
cmpsl
lahf
adc
lods
subb
sbb
ljmp
orb
push
push
dec
loop
dec
xchg
loopne
xchg
lret
push
jae
or
jns
and
out
xor
fldt
sub
adc
push
push
adc
pop
mov
ljmp
adc
adc
jae
jno
jns
mov
mov
mov
jo
fwait
or
and
and
jmp
lock
aaa
push
lcall
or
addr16
dec
cmp
mov
mov
inc
mov
and
pop
dec
dec
jns
mov
inc
jle
pop
jmp
or
je
mov
shlb
sbb
xchg
ficoms
stc
popf
inc
imul
xchg
sub
mov
je
xchg
std
adc
jae
lahf
mov
xor
or
jmp
jbe
mov
mov
mov
xor
sub
aad
ljmp
dec
js
xchg
mov
je
sub
sbb
imul
aad
cmp
je
ret
push
lods
adc
and
push
test
inc
adc
lods
lods
jg
and
mov
pop
test
adc
sub
mov
sub
jge
mov
dec
aaa
je
daa
mov
mov
push
sbb
push
bound
push
cmp
cmp
subb
or
pusha
pop
mov
xor
mov
aaa
and
jp
andl
sti
das
hlt
lret
inc
rcrb
xor
inc
inc
les
jno
xor
mov
hlt
cmpsb
icebp
addr16
pop
ret
loope
shll
jne
jl
fs
lods
jb
aas
mov
mov
mov
call
lods
call
sub
pop
pop
mov
mov
jl
inc
sub
std
adc
mov
sub
mov
sbb
imul
out
inc
jae
push
push
push
jg
push
cmp
es
adc
jl
arpl
push
lahf
push
ret
adc
xchg
pop
ljmp
ret
pop
push
xor
bound
fidivl
fcomps
jae
cmp
lret
enter
xor
mov
adc
ret
xlat
daa
push
addl
xchg
jge
adc
and
mov
jbe
xor
push
or
dec
mov
lcall
sbb
mov
dec
push
popa
insb
push
push
mov
stos
sbb
mov
jle
cmp
cli
xor
xor
pop
cmp
scas
push
sub
sub
js
push
je
mov
sbb
push
in
and
icebp
ds
outsb
push
dec
mov
or
push
es
sahf
cltd
sub
add
insb
xor
int
data16
xchg
dec
xor
pop
das
push
pop
and
mov
xor
mov
movsb
loop
divl
pop
imul
cmp
adcb
stos
arpl
xchg
mov
addr16
sub
ss
cltd
jne
xchg
sti
test
and
loopne
mov
and
push
stc
clc
insb
shlb
aad
push
js
or
mov
clc
sub
push
adc
clc
push
cmpsb
mov
cmp
lret
ljmp
ss
mov
mov
jle
sbb
sbb
cmpsb
add
sbb
fmuls
sbb
xorl
test
inc
insl
subl
movsb
imul
in
test
loope
jno
push
push
mov
push
jae
push
cmp
lret
push
inc
pop
or
pop
mov
mov
cmp
icebp
fbstp
movsb
dec
push
testl
test
sub
push
add
shrb
xor
jns
sbb
out
les
adc
aam
sub
xchg
int
xchg
icebp
in
adc
or
mov
int
jae
mov
icebp
mov
push
push
dec
sub
mov
jo
mov
jae
aam
xchg
xchg
jg
lret
shrl
xchg
adc
lock
pop
xchg
add
aaa
pop
out
pop
dec
pop
mov
push
xor
mov
mov
in
push
xchg
xchg
les
dec
ja
mov
lds
or
xchg
mov
sbb
pop
ret
stos
scas
test
sbb
mov
or
pop
pop
push
cli
std
or
mov
jbe
push
push
pop
negl
mov
clc
inc
mov
xchg
mov
sub
mov
scas
pop
pusha
pop
push
and
cmp
hlt
jg
repz
lods
gs
and
pusha
ljmp
jne
mov
mov
cwtl
jp
js
in
xchg
push
push
cwtl
or
jle,pt
add
jae
jns
add
fisubrl
pop
push
fs
mov
add
out
clc
imul
or
fcoml
lods
dec
repnz
movsb
rcl
imul
pop
adc
and
mov
and
imul
cmp
mov
and
and
mov
cmp
xor
cmpsb
mov
mov
insl
jb
xchg
push
sub
std
xchg
and
push
dec
mov
add
test
adc
mov
mov
push
pushf
cmpsb
arpl
imul
jmp
mov
addl
add
mov
fwait
in
jne
push
mov
xchg
fs
pop
dec
xor
mov
test
pop
mov
add
jno
push
pop
xchg
je
fstps
xor
ja
mov
cmp
xor
dec
mov
int
stc
es
jno
loope,pt
cmp
sbb
xor
xchg
ret
pop
xchg
add
dec
js
xor
hlt
pop
mov
ja
scas
jle
addr16
pop
mov
repnz
enter
inc
pusha
mov
xchg
jae
adc
adc
xchg
jg
jle
call
jne
clc
mov
fimuls
pop
jecxz
in
lock
test
popf
cmpsb
loopne
sub
insb
mov
les
movsl
jbe
lods
xchg
imul
sub
jbe
jae
cli
dec
add
lods
mov
hlt
push
iret
je
jle
je
mov
popf
push
sub
cmp
inc
or
in
jl
and
xchg
inc
iret
imul
lea
mov
loop
dec
jmp
mov
cmc
repz
andl
lds
mov
push
mov
jg
cld
aad
and
loopne
sbb
mov
xor
push
inc
xor
iret
jae
and
fildll
jae
jbe
pop
icebp
pop
in
imul
jp
mov
nop
dec
mov
cmp
sbb
xor
sub
jl
addl
xor
mov
sub
pusha
add
insb
enter
inc
repnz
adc
pop
clc
pushf
push
xchg
dec
adc
pop
lret
sub
mov
loopne
xor
ret
data16
pushf
mov
cmc
push
add
sarb
xchg
add
push
jle
xor
mov
pop
icebp
stc
inc
jo
inc
or
pop
pusha
jl
jecxz
jae
jns
push
inc
fsts
inc
and
pop
ljmp
orb
mov
je
lcall
xor
add
push
push
mov
pop
mov
jmp
adc
cmp
out
sbb
mov
cmp
and
and
jns
sbb
sub
out
fcomps
xchg
pop
xorb
mov
dec
xchg
setae
mov
hlt
lret
push
xlat
inc
push
js
inc
outsb
sub
push
adc
jno
sub
nop
shrl
xor
adc
lcall
es
das
ret
and
loopne
mov
lret
and
scas
mov
rcl
loope
adc
out
xor
push
js
cmp
andb
andl
ja
rcrb
out
jmp
adc
jle
sbb
xchg
pop
jae
or
je
ret
pop
stc
and
lock
pop
xchg
iret
jecxz
jl
pop
adc
inc
fistpll
clc
gs
clc
cwtl
jae
or
clc
cli
ss
frstor
xlat
imul
add
sar
xchg
es
aaa
xchg
fsubs
and
xchg
adc
adc
bound
rolb
push
mov
cwtl
scas
inc
cmpl
movsl
cmp
out
int
and
iret
mov
pop
sub
sbb
in
fmull
insb
sbb
xlat
cwtl
leave
sarl
inc
imul
iret
arpl
sbb
cli
pop
ljmp
mov
je
mov
adc
adc
ja
pop
jge
test
push
stos
fisttpll
int
pop
fsubr
and
loopne
iret
popf
jp
xor
mov
pop
xchg
mov
or
sbb
iret
sub
js
xchg
inc
xchg
cs
pop
cmpsb
mov
movsb
int
and
dec
xchg
adc
pop
mov
int3
cmp
xchg
mov
jmp
push
lahf
push
xor
pop
addr16
out
out
and
mov
in
xor
int3
cwtl
dec
jle
mov
out
and
ja
out
int
push
fstps
mov
jno
push
mov
and
scas
pushf
mov
int3
scas
push
insb
push
lea
mov
loope
mov
jg
bound
or
push
jo
or
mov
insb
lret
std
popa
and
test
add
push
call
mov
shlb
test
loope
and
int
pushf
jae
stos
in
call
sbb
cwtl
and
jmp
ds
pop
xchg
add
enter
sub
sub
add
xor
xchg
inc
cwtl
outsb
insb
ds
adc
pop
cwtl
jle
imul
cwtl
mov
jae
adc
enter
je
adc
or
push
sbb
xor
adc
xor
out
xor
enter
cmp
xor
xor
or
adc
cmp
adcl
xlat
mov
mov
and
cltd
and
cwtl
push
lock
push
fdivl
adc
pop
inc
jle
push
scas
pop
xor
outsl
dec
bound
xchg
jns
jae
xchg
push
cwtl
and
rclb
jns
mov
cmp
int3
mov
add
aaa
jbe
leave
jo
dec
in
loop
pop
xchg
outsl
loope
mov
daa
mov
xor
or
test
out
xchg
fsubl
inc
adc
push
lahf
test
pop
cmp
stos
cwtl
mov
scas
enter
es
push
cwtl
insb
xor
adc
mov
pop
or
push
inc
inc
mov
sbb
jae
fisttpll
cmp
xchg
pop
jg
cmp
jo
sub
cwtl
shll
out
js
mov
add
push
and
fcmovb
js
arpl
xor
ja
outsl
or
and
push
xor
insl
xchg
mov
push
clc
jmp
sbb
or
sub
adc
lahf
cs
push
mov
pop
nop
test
pop
cmpsb
mov
shll
and
stos
stos
mov
stc
shlb
mov
adc
repz
or
jbe
sub
and
popa
cmp
mov
pushf
jbe
sbb
cmpsb
addr16
imul
in
mov
and
aam
adc
pop
nop
mov
scas
add
rorb
xor
and
xchg
call
pop
jo
and
aaa
xlat
ljmp
jp
jmp
cmp
pop
push
int3
loope
ljmp
fistps
loope
fldt
mov
pusha
ficompl
or
mov
fstl
cltd
jo
stos
dec
fs
or
or
je
popl
fwait
js
jg
insb
inc
bnd
dec
in
sbb
mov
xchg
cmp
repnz
mov
jae
sbb
aad
movsl
sbb
or
mov
push
je
mov
mov
jns
dec
adc
xor
mov
das
cwtl
sub
sbbb
cld
scas
xchg
repz
cltd
insb
mov
xor
pop
int3
paddw
or
xchg
mov
test
inc
ljmp
lods
or
movsl
sbb
fwait
iret
add
fs
xor
mov
sub
sti
fcomps
jae
test
mov
or
fdivrs
mov
sub
mov
out
popa
or
pop
test
dec
adc
repnz
or
and
mov
and
loope
jg
sub
push
mov
insb
clc
jl
sub
xlat
nop
mov
push
cmp
and
dec
sbb
insb
sbb
adcb
hlt
or
jmp
mov
pop
inc
je
out
push
mov
scas
dec
push
push
mov
cmp
loope
mov
js
lds
or
mov
inc
ja
xchg
loop
or
loop
lock
mov
outsb
cli
push
xor
mov
imul
adc
repz
ss
sti
sub
mov
mov
popa
cmpsb
xchg
ret
loopne
ss
xor
pop
adc
sub
pushf
popa
inc
add
pop
idivb
sbb
xchg
ss
sub
dec
push
js
pop
and
pop
movsb
xchg
pop
dec
jmp
mov
shrb
or
andb
sub
ljmp
adc
insb
bound
fs
jnp
ds
pusha
call
jo
sub
pop
mov
aam
pushf
mov
jb
push
mov
cmc
adc
clc
xchg
or
out
test
test
jle
cmp
mov
xlat
mov
arpl
mov
dec
pop
into
repz
mov
std
shr
icebp
mov
stos
mov
sub
roll
jp
dec
jb
cmp
push
mov
mov
sarl
sbb
cwtl
jns
or
push
test
pop
fcmovnu
mov
adc
and
fnstsw
or
xor
cmpsl
gs
xorl
dec
jae
loop
jne
xchg
test
repz
cld
and
daa
cmp
sbb
push
xchg
fnstcw
push
mov
cmpsl
addr16
jno
adc
rdmsr
shll
ss
popa
loope
dec
adc
ret
jp
adcl
insl
xor
test
repz
pop
push
out
jle
inc
mov
out
pop
add
rcl
cld
out
aas
cli
lods
mov
pop
pop
push
push
xchg
or
int
lods
dec
rcrb
ja,pn
mov
mov
adc
xchg
sahf
je
mov
stc
jmp
xchg
addr16
or
push
inc
icebp
fidivrs
cmp
das
xor
cmp
mov
jae
and
push
push
insl
push
or
pop
inc
fdivl
int
out
out
out
jae
and
aad
movsb
push
mov
shrb
push
fiadds
jle
inc
jno
cmc
stc
cs
iret
in
ljmp
loope
repnz
fcmovnu
mov
hlt
fs
lods
dec
jp
insb
cmp
jg
jb
pop
outsb
or
fwait
sub
dec
into
adc
aaa
ja
test
inc
sub
pop
push
pop
add
aaa
adc
push
stc
sub
pusha
xorl
cmp
lock
or
xchg
jne
inc
jns
ror
push
icebp
cwtl
sub
push
xchg
movsl
mov
adc
addr16
es
jae
cli
mov
mov
int
call
mov
shl
cmp
imul
imul
punpcklwd
loope
pop
mov
push
xchg
inc
daa
push
mov
sti
les
push
stc
add
push
lock
xchg
sahf
cmp
adc
push
xor
idivb
gs
push
sti
cltd
mov
cmc
inc
lods
popl
xor
orl
push
xchg
jbe
out
cwtl
loopne
xchg
jle
lcall
push
out
adc
pop
xor
jbe
add
lods
rclb
dec
adc
jb
imul
ds
pop
mov
xchg
jo
add
push
inc
sbb
popa
jae
mov
jns
insb
mov
loope
jge
sahf
or
out
xchg
sti
or
inc
lret
orb
cs
loope
adc
jmp
mov
cld
push
inc
jb
pusha
fs
pop
mov
mov
int3
mov
sbb
cmpsl
loopne
cmpsl
adcl
adc
sub
sbb
xor
cmc
adc
ds
mov
pop
enter
fwait
iret
adc
out
and
push
mov
loopne
fiaddl
xchg
rorl
add
cwtl
je
lret
fildl
sbb
sarl
sbb
sbb
jo
sub
xchg
xor
insb
inc
jge
andb
jnp
or
daa
xchg
inc
mov
into
adc
jecxz
sbb
mov
lods
mov
jae
jbe
jg
xchg
adc
mov
or
mov
test
aad
movsb
mov
hlt
aas
push
cmp
arpl
pop
xchg
insl
stc
lods
adc
cltd
inc
clc
push
xor
hlt
mov
jno
pop
call
ret
add
xchg
push
mov
or
pop
jns
sub
test
sub
adc
push
mov
dec
cmc
nop
cmc
mov
mov
clc
cmpsb
cmp
cmpb
push
test
and
xor
mov
dec
sbb
pop
adc
sbb
shrb
adc
popa
out
cmp
pop
hlt
add
jae
js
aam
xchg
add
sub
and
xor
jo
std
sahf
or
xchg
mov
rcrl
mov
sbb
cmc
mov
mov
outsb
ljmp
lahf
ss
adc
cmpl
insb
xchg
sahf
daa
xor
inc
push
insb
imull
sub
mov
pop
movsb
je
pop
js
rcll
mov
insl
xor
cmp
loopne
mov
jbe
lock
push
dec
jno
and
repz
hlt
and
insb
movsb
imull
inc
sbb
sbb
in
icebp
add
popf
mov
insb
ficomps
xor
in
pop
push
dec
cmp
pop
pusha
xchg
jns
jnp
repz
dec
adc
jne
and
and
jo
fadd
sbb
addr16
cmp
cld
loop
cwtl
xchg
stos
jae
test
sub
sub
incl
dec
imul
test
sub
inc
sub
outsb
js
loopne
cmp
ljmp
and
or
and
test
push
fsubl
inc
sub
imulb
mov
xchg
inc
push
xchg
xchg
push
sub
bound
je
out
inc
cs
xchg
mov
mov
fstps
dec
clc
pop
lcall
push
mov
add
adc
and
adc
pop
jne
and
outsl
lret
call
insb
add
aam
sub
add
stos
insb
mov
jb
cmpsb
push
mov
push
fisubl
shrb
mov
test
or
or
jns
test
pop
popa
and
or
pop
scas
fcmovnu
adc
sub
mov
js
dec
frstor
push
sahf
enter
and
push
out
scas
out
pop
cmp
int3
setne
imul
sub
pop
es
cmpsb
cmc
outsl
sub
ja
popa
in
and
out
mov
leave
dec
mov
cmc
das
jae
lock
cmc
mov
enter
pop
pop
mul
xorl
cld
scas
fs
jge
fwait
adc
in
rorl
mov
das
stc
repz
dec
xor
imull
rclb
sub
dec
test
addr16
and
cmp
dec
mov
mov
cmp
fldt
or
jae
sahf
arpl
cmp
adc
lds
jae
sub
fs
add
xrelease
sub
push
push
cmp
js
bound
mov
mov
in
pop
push
fadd
or
int3
pushf
in
aad
push
mov
andl
jge
dec
add
cwtl
sbb
or
xchg
insb
xorl
add
ljmp
push
sbb
inc
notl
cmpl
rorl
mov
or
sbb
aam
and
test
cs
mov
pop
xor
scas
mov
ss
dec
hlt
mov
cmp
daa
hlt
push
add
cmpb
adc
imul
dec
sbb
sbb
nop
cmp
scas
je
adc
xchg
out
or
inc
sbb
mov
cmpsb
or
mov
and
jb
mov
in
popf
or
enter
pop
cwtl
xchg
push
pop
adc
repnz
sbb
repz
ljmp
movsl
dec
inc
stos
cld
jmp
xchg
loopne
das
and
cmp
fsubr
aaa
cld
pop
cvttps2pi
adc
les
mov
sar
js
jmp
int3
xchg
push
jae
adcw
push
andl
aam
sub
xor
stos
jae
mov
xlat
sub
clc
pop
or
jno
push
outsb
jbe
clc
in
imul
mov
insb
mov
out
xor
addl
mov
jp
out
or
dec
and
rorb
mov
imul
mov
add
xor
and
cmp
sub
push
adc
adc
fnsave
xchg
pop
push
outsb
scas
add
fsubl
scas
xchg
out
stos
pop
test
roll
mov
es
mov
pop
imulb
pop
cmpsb
lret
popa
cwtl
push
call
testl
sti
dec
addb
xor
shl
mov
repz
ljmp
imul
xchg
push
mov
ljmp
inc
inc
pop
mov
enter
adc
push
push
inc
push
sbb
ja,pn
int3
or
shl
pop
mov
fdivrl
cmp
les
movsb
jns
sub
sub
fcomps
inc
popl
out
cmpsb
adc
dec
xor
mov
rclb
pop
add
pop
adc
mov
int3
or
adc
adc
pop
xchg
sub
out
sbb
ds
cmp
push
xchg
sbbl
and
cwtl
imul
cwtl
xor
push
shll
pop
mov
inc
addr16
xchg
push
rclb
in
sub
enter
je
es
or
popf
jmp
ljmp
pushf
loop
test
lret
nop
loopne
rorb
jae
mov
outsb
in
daa
in
and
rorb
dec
sub
pushf
jp
icebp
mov
sbb
mov
je
sub
push
scas
jbe
sub
mov
fistps
jge
insb
leave
jae
mov
pop
icebp
sbb
out
lret
ja
mov
cltd
jle
push
out
sbb
test
arpl
sti
into
pop
dec
ljmp
sub
aaa
fucomp
jmp
sbb
outsb
mov
mov
jno
dec
lods
cmpsb
cmp
mov
movsb
out
pop
inc
pushf
dec
push
mov
test
xor
add
pushf
sub
push
je
push
and
or
xlat
or
push
add
push
mov
or
jo
aaa
cwtl
pop
xchg
xchg
mov
movsb
add
repz
sbbl
dec
lock
or
jae
mov
mov
outsl
jmp
mov
pop
test
cmp
xchg
pop
ret
lret
mov
js
lods
int3
inc
cwtl
mov
mov
bound
xor
in
mov
in
mov
stos
pop
iret
dec
and
out
mov
fcompl
push
mov
jmp
iret
mov
enter
addb
mov
sti
push
adc
subb
hlt
sbb
mov
xor
imul
std
lcall
rcrl
jg,pt
test
adc
test
push
push
and
sub
pop
stc
les
dec
mov
jns
inc
cmc
pop
sub
xchg
push
fstpt
xor
mov
out
imulw
pop
jns
iret
jo
js
xchg
js
test
xchg
fimuls
add
icebp
cmpb
mov
movsb
enter
adc
mov
mov
cmp
add
pop
inc
mov
or
xchg
stc
rorl
imul
clc
lcall
add
jle
add
icebp
add
add
sahf
iret
add
scas
pop
rcrl
xor
std
sbb
push
fadds
notb
jb
sub
cmpsl
jbe
jnp
jge
outsl
jno
loopne
repz
daa
lret
les
inc
insb
cs
dec
in
cmc
repz
mov
lock
sub
test
es
in
cwtl
rolb
or
ror
in
outsb
ds
cwtl
sbb
ds
sub
or
andps
add
jae
and
scas
in
icebp
repz
int
xorl
xor
sub
stc
mov
or
clc
repz
fsubrs
jb
xchg
lods
repz
mov
lahf
or
repz
repnz
push
push
push
outsb
xor
test
pop
xchg
dec
test
mov
push
mov
xchg
hlt
push
and
bound
inc
insl
mov
lods
mov
arpl
lods
pushf
mov
or
arpl
insb
aas
sbb
push
or
mov
scas
adc
push
frstor
mov
sbb
pusha
jno
pop
pop
daa
cmp
xchg
xchg
rcrl
add
popf
or
pop
imul
jg
push
mov
shrb
xlat
icebp
sbb
test
adc
sub
fnstcw
inc
dec
sbb
repnz
adc
xorb
sub
pushf
add
bound
mov
dec
cwtl
push
xchg
insb
mov
jo
xor
test
push
insb
lea
popf
fwait
xchg
cmc
cmp
cld
cmpsb
pop
pop
into
cmp
sti
das
hlt
or
lahf
mov
ss
dec
and
mov
clc
ret
ja
sbb
cmp
lret
jne
jo
divb
call
dec
sbb
cmc
pop
sbb
insb
push
pop
xor
sbb
imul
adc
dec
fwait
mov
ss
cmp
pop
cmp
jmp
pushf
or
js
push
data16
cwtl
sbb
lahf
imul
aam
pop
pop
fstl
push
pop
or
cmc
pushf
jo
pop
out
fmulp
icebp
cmp
xchg
or
mov
fdivs
movl
sarb
inc
push
push
adc
or
sub
pop
mov
jae
and
pop
and
aaa
cmp
mov
orl
add
lock
mov
lcall
pop
xorl
xchg
jg
popa
sbb
mov
sbb
sbb
cwtl
pusha
sub
push
out
pop
fdiv
push
mov
mov
mov
sbb
mov
pop
mov
outsb
jne
dec
scas
jl
or
and
nop
pop
jle
sbb
fadd
push
lods
jno
push
jl
popa
in
divb
push
sub
out
clc
and
and
push
xor
inc
add
fdivrl
decb
loop
sub
test
cs
outsl
dec
and
stos
mov
ret
aam
out
scas
mov
mov
pop
jo
test
sub
sbbl
sub
and
fimuls
pop
fildll
movd
sbb
jbe
and
imulb
lock
scas
aad
pushf
push
in
pop
nop
in
mov
xor
xorl
xor
sbb
inc
xor
stc
addps
ret
stos
adc
mov
push
mov
pusha
push
lret
sub
push
sti
jge
or
into
inc
cld
orb
inc
test
and
loope
pop
out
stos
adc
jbe
sub
push
out
jecxz
jno
pop
adc
sub
push
xor
in
inc
frstor
xchg
popf
imul
repnz
mov
dec
js
fdivrs
icebp
imul
test
pusha
ret
sub
or
aad
lods
enter
jae
mov
or
add
iret
rcrl
clc
dec
mov
pop
clc
mov
mov
repz
insb
sbb
xrelease
je
sub
push
cmc
xor
arpl
push
cmp
inc
ja
xor
cmp
das
or
xchg
jns
push
lret
cwtl
stos
push
xchg
pop
daa
std
add
mov
pop
fstpl
cmp
fs
mov
mov
or
pop
push
adc
ret
cmp
push
lods
xor
inc
imul
test
pusha
out
cmc
data16
push
and
arpl
sti
pushf
mov
or
sbb
sub
repz
jmp
jno
jo
add
andl
icebp
fdivrs
std
mov
mov
ret
popf
in
cwtl
into
and
mov
pop
cs
xor
stos
arpl
repnz
jbe
inc
pop
cs
mov
movsl
jb
add
cmpsl
dec
loope
fnstcw
flds
das
out
xchg
inc
adc
pop
add
add
loop
and
inc
jo
jns
mov
sahf
jle
cmp
mov
mov
je
loopne
clc
cwtl
xchg
inc
push
inc
aas
loopne
mov
out
inc
rcrl
repnz
pop
lods
jb
pop
clc
lods
call
xorb
push
fimuls
xchg
dec
mov
mov
in
pop
mov
stos
sbb
add
inc
mov
jg
sub
cwtl
sub
fstp
jmp
fwait
sub
xlat
imull
in
jo
imul
xlat
psrlw
hlt
das
mov
dec
mov
xor
push
hlt
jo
loopne
stos
mov
jmp
xor
lcall
test
add
cmpsb
into
push
mov
outsb
pop
jbe
loop
mov
jbe
push
bound
call
cmp
inc
jb
xchg
lods
push
sub
push
xchg
insb
push
nop
sbb
inc
adc
cmp
mov
jae
sbb
sub
mov
sbb
mov
dec
sbb
push
sub
jno
lock
aad
mov
and
jg
mov
push
pop
lods
jecxz
test
adc
push
pop
pop
dec
xchg
mov
xlat
xchg
icebp
pushf
xor
sbb
push
lret
push
adc
mov
sti
ljmp
data16
jmp
popa
adc
iret
mov
movl
and
xor
jle
test
sarb
inc
adc
push
cmpsb
push
imul
push
fs
push
cwtl
mov
out
and
stos
adc
xchg
push
rcrl
push
inc
pop
jo
insb
add
pop
mov
into
sub
cwtl
mov
push
pop
mov
push
sbb
loopne
push
add
notb
test
imul
dec
cmc
or
hlt
dec
pop
pop
adc
xchg
pusha
xor
push
cs
ret
ss
jmp
jecxz
mov
loop
jo
push
mov
sbb
xor
mov
add
loop
xor
fs
mov
sub
jmp
test
cmpsl
mov
xor
mov
rcrb
mov
insb
inc
inc
imull
xchg
adc
push
jb
clc
icebp
clc
push
cwtl
sub
xor
rcl
adc
lahf
imul
test
hlt
push
mov
stc
sub
mov
sarl
add
push
push
sti
ficompl
cli
arpl
fistps
xor
xchg
leave
movsl
adcb
call
scas
clc
mov
pop
jns
ss
stc
xchg
mov
sub
inc
or
or
cmp
cmpsl
lret
int3
adc
or
icebp
fs
xchg
icebp
je
leave
js
ss
aas
mov
pushf
jecxz
movsb
sub
sbb
ret
cwtl
xchg
xorl
test
fmull
xchg
fdivs
mov
gs
add
std
scas
lar
mov
jne
inc
dec
jo
lcall
shrb
rep
cwtl
ret
loopnew
or
or
cld
out
mov
sub
adc
imul
mov
sub
ss
scas
rol
push
arpl
imul
adc
or
push
clc
lahf
push
sub
pop
adc
call
push
mov
call
or
fldl
std
jbe
xchg
sub
inc
jmp
fstpl
mov
dec
mov
int3
jbe
or
insb
push
cwtl
ret
divl
xchg
adc
push
jge
movsb
fcomps
sti
jo
std
ds
and
test
out
outsb
add
imul
adc
and
dec
stc
push
fisubrl
jle
mov
out
ljmp
lret
in
xlat
pop
pop
pop
in
aas
pop
xor
push
mov
cltd
ljmp
shrb
jno
add
pop
xor
scas
sbb
sbb
push
xor
fldt
mov
call
loope
sub
cwtl
inc
loope
push
mov
test
cmp
add
in
ret
mov
mov
mov
lea
xor
sub
rol
adc
rcrb
pop
sbb
sti
and
push
test
add
dec
test
push
dec
and
or
mov
push
push
aaa
repz
lods
gs
adc
call
adc
aaa
sub
leave
ss
addr16
add
insl
xlat
cmp
or
pop
mov
inc
mov
out
scas
or
aas
xor
pop
pop
scas
jbe
sahf
adc
jnp
cmpsb
fistl
push
mov
push
cmp
lods
in
add
inc
das
bnd
outsb
mov
cmp
shl
dec
pop
stos
xor
pop
xchg
mov
sub
lea
push
cmpsl
cmp
and
and
sbb
cmp
jg
mov
cmpsb
out
mov
pop
fs
mov
sbb
mov
dec
push
pop
xchg
fsubs
xchg
das
push
rolb
pushf
and
pop
popa
testb
add
pop
ret
and
imul
test
out
mov
mov
pop
add
insb
out
sbb
jg
jle
add
repz
ss
popf
or
mov
xor
jae
outsl
lcall
mov
sbb
fidivrl
sub
into
cwtl
mov
je
pop
inc
or
add
out
add
mov
lret
and
insb
xchg
xor
lock
and
inc
push
iret
jo
cmc
xor
insb
inc
sbb
pop
shll
pop
jns
daa
arpl
in
mov
rcll
ret
adc
xor
dec
sbb
in
mov
int
push
cs
mov
sbb
jae
mov
xor
cmp
jg
ss
fldcw
movsb
imul
loope
cmpsl
cmpb
popa
jb
repz
rcrl
jecxz
and
pmullw
push
shlb
mov
inc
adc
fbld
mov
cmpsb
push
mov
jbe
dec
pop
push
xchg
jae
cmp
and
andb
dec
push
mov
add
pop
in
mov
jae
daa
rcll
lds
movsl
loop
outsb
cwtl
pop
mov
popa
xchg
fdivrs
adc
lods
test
jbe
pop
push
mov
xor
lcall
sahf
xchg
sbb
adc
sbb
in
jo
jae
push
addr16
lock
adc
sub
int
jo
push
xor
dec
es
dec
push
sbb
push
dec
dec
xchg
fs
xor
sub
cli
leave
pop
pop
or
dec
push
stos
adc
loop
mov
dec
dec
pusha
repnz
xor
sub
mov
push
testl
sbb
cmp
sarl
sub
adc
adc
jmp
inc
push
add
adc
jp
ficomps
stc
repnz
mov
enter
mov
sbb
add
xchg
cltd
pop
test
movsl
xchg
mov
add
clc
rcll
jecxz
rclb
push
or
inc
xchg
push
jae
flds
int3
jle
jbe
mov
push
or
xchg
dec
inc
add
mov
sbb
mov
fisubl
mov
negb
mov
shll
arpl
sub
inc
push
cmp
jne
hlt
fwait
imul
lods
jno
dec
push
stos
iret
inc
jns
int3
sub
sahf
jae
inc
mov
imulb
and
inc
lret
pop
adc
nop
cwtl
das
test
js
mov
xor
loopne
mov
xlat
pop
sbb
js
add
pop
int3
sbb
and
inc
add
ja
sub
pushf
divl
or
pop
insl
insb
or
pop
push
dec
push
lret
js
push
add
test
xchg
es
scas
xor
lea
cwtl
mov
push
stc
mov
pushf
les
or
push
test
mov
mov
mov
pop
dec
cmp
jns
sub
stc
xor
and
and
psubb
and
pop
push
lods
aaa
pop
andb
pushf
in
and
add
jp
inc
sub
test
loope
inc
add
scas
fcomps
cmpsb
rcrb
movsb
xchg
inc
ret
xchg
push
pop
nop
out
mull
add
xor
xchg
mov
dec
mov
xor
popa
mov
js
pop
sub
push
mov
popf
fdivs
out
cltd
clc
enter
dec
add
dec
andb
sbb
mov
pop
sti
ljmp
stc
add
or
rcrl
and
xchg
test
cwtl
or
and
jb
jno
inc
and
or
mov
xor
or
test
jbe
iret
pop
jp
ss
mov
pusha
adc
adc
lock
add
dec
sbb
mov
js
sti
push
mov
mov
popa
mov
xchg
adc
mov
les
les
dec
enter
adc
fwait
pop
sub
mov
mulb
idivb
sbb
cs
push
add
or
and
mov
push
sub
iret
mov
inc
fisubs
inc
and
xor
xor
fwait
xchg
repz
pop
loop
orb
negb
sub
fidivl
in
adc
popa
and
and
xlat
cmp
sahf
repz
mov
data16
dec
sbb
fs
out
enter
movsb
test
or
jl
jne
test
mov
js
cmp
mov
mov
push
jbe
cmpl
pop
pop
pop
test
inc
and
xchg
xchg
shr
and
add
orb
mov
pop
test
push
jne
mov
push
out
out
sahf
shll
pop
aas
sbb
es
jp
cmp
dec
push
aas
decb
fisubl
sbb
imul
daa
mov
dec
aas
jmp
das
mov
adc
subb
out
xor
or
out
jg
popaw
xor
rorl
mov
mov
pop
loope
sbb
push
and
fdivrs
loope
push
pusha
mov
call
jno
sbb
and
pusha
out
pop
mov
fadds
add
iret
cwtl
mov
lcall
test
jmp
cmp
cwtl
imul
sti
lock
fwait
mov
or
jmp
mov
pusha
mov
in
and
arpl
mull
pop
pop
ret
out
push
mov
push
test
mov
out
jae
shl
imulb
mov
inc
or
and
pop
out
mov
push
push
lahf
xor
js
inc
das
dec
cld
xchg
cmp
ss
xchg
cmp
or
pop
mov
cwtl
jae
add
ljmp
in
ret
aaa
mov
or
dec
push
pop
out
cmp
cltd
es
sub
fsub
test
cmp
add
pop
scas
mov
cs
test
int
adc
sub
cmp
or
or
xor
movb
outsl
xchg
and
aaa
in
movsb
lret
es
std
mov
ds
adc
fnstcw
pusha
iret
pop
adc
pop
jo
fcoms
leave
dec
pop
mov
out
seto
xchg
xchg
es
push
test
adc
imul
pop
das
pushf
cmp
jne
out
mov
addr16
lcall
out
xor
jae
and
mov
je
sub
lret
xor
enter
repnz
cs
pop
out
sub
clc
mov
loope
sbb
iret
adc
xchg
adc
outsb
pusha
mov
push
push
jmp
sub
mulb
cmp
jg
test
shl
jle
xchg
and
cwtl
mov
cltd
jl
je
fdiv
pop
scas
jns
push
sub
dec
lret
fidivrs
imul
mov
sti
xor
mov
and
sbb
icebp
xor
iret
rcrb
xor
std
stos
xlat
notb
out
imul
jns
pop
daa
hlt
pop
adc
repnz
call
test
push
cwtl
mov
cmc
pop
xor
pop
stc
lea
inc
dec
lds
xchg
imulb
mov
stos
cwtl
cmpsl
sub
out
jge
rolb
push
add
sbb
xchg
xor
icebp
fs
pop
xor
out
sbbb
sbb
sub
jae
inc
mov
lods
jle
pusha
jb
pop
imul
cmpsb
mov
jmp
mov
das
movsl
repnz
jns
scas
sahf
push
jle
js
sbb
mov
js
int
icebp
shll
or
lock
xlat
fs
push
lret
sbb
mov
test
jle
xlat
pop
leave
call
jp
xchg
add
and
out
mov
adc
jle
jp
xchg
adc
adc
cmp
ret
cmp
gs
lahf
pop
ret
mov
popf
xchg
or
jae
repz
mov
dec
xchg
mov
pop
imul
or
ja
sbb
or
inc
clc
jb
pop
lock
sahf
pop
pusha
mov
xchg
xchg
outsb
push
shrl
addr16
lret
cmpsb
pushl
pop
mov
and
lods
in
push
insl
add
fimuls
xchg
sub
cwtl
sbb
pushf
mov
lock
and
outsb
test
dec
lea
pusha
jae
jnp
nop
std
sbb
xor
out
popl
xchg
imul
sub
setge
in
fsub
aas
mov
aaa
inc
mov
push
xchg
mov
mov
stos
mov
jo
jge
aaa
es
andb
xchg
xchg
xor
in
mov
xchg
sub
adc
insb
xchg
test
popa
scas
aaa
into
in
xchg
xor
test
popa
lahf
aaa
mov
out
ss
xchg
je
mov
mov
or
pop
jb
mov
add
sub
mov
call
test
sbb
jbe
lods
push
sub
aaa
lea
cmp
cmc
sbb
and
in
gs
sbbb
push
mov
roll
cmp
sub
adc
cmp
lods
in
mov
dec
jo
sbb
xor
mov
dec
scas
jno
out
push
enter
xchg
push
mov
call
mov
xchg
pop
aad
ds
icebp
dec
pop
enter
cmpsl
sbb
repz
xchg
fcomp
push
pop
add
std
cmc
add
lock
push
pop
clc
loopne
fs
pop
out
sbb
inc
adc
mov
adc
mov
and
xchg
inc
push
outsl
mov
int3
jecxz
cmpsb
push
hlt
addr16
push
popa
stos
jbe
jecxz
pop
jb
data16
add
fistpl
or
outsb
data16
adc
bound
adc
insb
sbb
inc
ss
xor
xchg
mov
out
ret
jae
xchg
in
sub
js
xor
lods
and
stc
rclb
std
mov
neg
data16
add
pop
clc
jmp
jg
lahf
inc
repz
dec
mov
mov
pop
mov
mov
or
enter
lods
push
das
pusha
add
popa
jp
push
loope
sbb
mov
inc
fdivp
mov
ss
jns
sub
jae
cwtl
fs
ss
or
test
out
sub
mov
int
shrl
test
insl
pop
mov
xlat
mov
dec
negl
sbb
out
rcl
shr
data16
sub
movsb
jle
fadd
sbbl
je
xchg
pusha
or
out
mov
iret
add
mov
cmp
iret
mov
je
outsl
sbb
jae
pushf
jecxz
cmp
hlt
and
mov
push
mov
mov
inc
sbb
jae
into
in
lcall
cld
cmp
push
cmp
mov
mov
mov
loop
mov
sbb
mov
cli
xchg
int3
xlat
push
insl
xchg
aaa
fs
jmp
push
pushl
push
mov
or
stos
aad
push
icebp
fistps
addr16
mov
xchg
sbb
pop
sbb
cltd
test
jmp
sbb
fdivrs
dec
mov
jg
add
mov
sub
mov
addr16
adc
stc
bound
jg
rdpmc
dec
mov
xchg
daa
jno
mov
or
or
jbe
pop
movsb
mov
xor
js
sbb
or
daa
xchg
mov
adc
aaa
adc
xor
lea
mov
mov
fdivs
mov
pop
pop
scas
dec
cmp
out
inc
adc
imul
aas
icebp
popa
jle,pt
xor
or
add
nop
ss
sub
push
mov
jo
pop
loope
fildl
insb
fldpi
outsb
pop
ljmp
loope
fcom
popf
xchg
lds
in
pop
lcall
mov
pop
push
pop
icebp
fldcw
sbb
mov
es
pop
add
fsubl
scas
pop
mov
mov
push
sub
xlat
mov
popf
mov
mov
arpl
xchg
fstl
loopne
jbe
push
dec
jbe
mov
je
lods
and
loop
cwtl
sub
es
add
push
dec
or
sarb
dec
mov
pop
fsubrs
pop
or
inc
add
int3
mov
or
imul
test
inc
jge
movsb
adc
jecxz
repz
push
mov
lods
in
push
test
movsb
popf
mov
xor
cli
fisttpl
or
xor
sub
not
mov
iret
scas
popa
adc
jae
test
dec
add
in
jno
jae
inc
xchg
pop
outsb
int
in
sub
mov
out
jp
cmp
sub
gs
mov
nop
daa
mov
mov
inc
mov
popa
fldcw
out
mov
stos
lds
cs
jno
pop
roll
sbb
push
mov
or
jo
and
mov
sub
addr16
sub
xchg
sub
iret
iret
loop
dec
icebp
xor
add
cmp
mov
and
sti
or
xor
pop
pop
or
xor
into
sbb
jmp
mov
ja
fldl
mov
cmp
cmp
jb
push
xor
test
sarl
pop
jne
xchg
or
jae
mov
test
ja
mov
dec
sub
lock
push
ret
lcall
jle
lcall
jle
pop
and
and
xor
adc
icebp
aas
shll
xchg
mov
xchg
inc
fsts
push
test
fisubrl
fabs
cld
xchg
call
mov
lock
test
cli
sbb
cwtl
pusha
jp
push
cs
mov
mov
call
push
add
insl
or
pop
mov
jl
add
outsb
add
movsl
jo
aaa
xchg
jno
xor
or
xorb
adc
out
push
cmp
jp
xchg
mov
and
jb
fdivs
test
lock
mov
mov
int3
lock
mov
inc
fnstsw
je
pushf
jae
into
lock
cmpsb
imul
rcrb
loopne
add
add
add
test
ja
imul
clc
jnp
adc
imul
imul
cmp
and
cwtl
sbb
lods
adc
jbe
bound
mov
call
sub
sub
icebp
out
sub
sbb
call
pop
xor
jne
sbb
mov
or
mov
aas
push
addr16
movsl
mov
push
loope
imul
dec
mov
jmp
sub
pop
nop
rolb
mov
std
es
inc
imul
add
mov
rep
xor
jecxz
adc
ljmp
jle
jle
xchg
mov
imul
cwtl
xor
stos
xchg
or
sbb
jne
xor
xor
and
imul
divl
std
jno
cmp
and
test
jle
dec
mov
adc
clc
xorb
push
xchg
sub
sbb
rolb
ret
dec
push
jne
imul
xorb
adc
insl
mov
imul
mov
gs
mov
add
xchg
mov
insl
nop
jbe
jae
push
out
outsl
mov
pop
cmp
push
int3
test
or
sub
imul
push
sub
imul
fadds
adc
xor
call
rclb
xor
jae
xor
imul
mov
js
xlat
inc
mov
pop
or
pop
jno
addr16
loope
mov
push
xchg
lock
mov
jb
stc
je
cmpb
or
mov
stos
cwtl
jle
adc
mov
ds
and
inc
lahf
in
cs
jb
adc
ret
or
fnsave
mov
mov
jmp
push
cmp
repz
cmp
push
mov
mov
cmp
insb
mov
mov
fs
inc
sub
xor
test
cwtl
mov
push
adc
and
shl
inc
outsb
cmpsl
clc
shlb
adc
mov
sarb
loope
xchg
mov
dec
lods
jg
mov
loope
insb
push
xchg
xor
push
pusha
ret
xchg
or
mov
cmp
inc
add
and
jnp
or
pop
inc
mov
subl
sub
shrl
das
jg
lea
es
leave
adcl
inc
xor
jle
sub
cmp
fs
js
cwtl
push
mov
mov
daa
adc
int
mov
pop
pusha
imul
mov
jp
add
shrl
add
dec
cwtl
pop
mov
cmp
sbb
stos
pusha
nop
ja
mov
add
add
xchg
xchg
jb
ja
sbb
cwtl
imul
or
and
js
mov
fnstsw
and
fs
adc
nop
shr
cmpsb
mov
push
idivl
jmp
inc
dec
test
inc
pop
aad
imul
lret
cwtl
inc
mov
shlb
pop
or
cmp
cwtl
cs
add
shl
js
imul
test
inc
mov
jo
adc
aad
and
or
ret
popf
enter
push
and
out
imul
out
mov
in
sbb
mov
mov
xchg
icebp
adc
shrb
clc
sbbb
js
je
mov
or
cmp
or
mov
pop
cwtl
mov
xchg
mov
jb
je
rcl
push
in
sti
ret
stc
rclb
test
dec
pop
loopne
in
push
jle
jl
lcall
outsb
imul
jno
test
aad
push
jae
mov
ss
adc
pusha
xchg
lret
rclb
sub
adc
xor
pusha
jae
push
ljmp
lret
fsubs
sti
lock
and
sbb
jle
mov
icebp
rcll
jns
push
lahf
mov
fsub
xor
cmpsl
pop
inc
imul
inc
arpl
adc
cwtl
je
cmp
fldcw
sub
scas
shl
bound
int3
sbb
mov
lahf
push
in
adc
push
jns
leave
jns
mov
xchg
xor
xchg
add
sbb
insb
mov
mov
pop
loope
addr16
stos
push
shll
jno
mov
push
lahf
push
scas
cli
push
bound
dec
mov
cmp
jmp
cwtl
rcr
out
xor
mov
cld
push
mov
int3
push
hlt
mov
mov
xor
lock
out
jmp
jmp
mov
mov
fists
dec
aas
adc
lock
dec
orl
push
push
leave
aas
fstps
fcompl
mov
test
movsl
or
mov
call
xchg
shrb
xchg
jae
daa
ret
dec
data16
xor
bound
sbb
repnz
mov
loop
sbb
adc
imul
mov
xor
inc
int
mov
inc
popa
xchg
pop
jae
mov
push
mov
leave
push
imul
jno
jo
and
ret
std
in
insl
int3
inc
cmp
adc
mov
xor
adc
lods
jns
cmpsb
sti
sbb
aaa
mov
std
jle
push
jno
pop
pop
inc
js
push
push
aaa
fldt
fcomip
shll
les
xchg
popa
mov
rorb
add
mov
cmpsl
sbb
xlat
sbb
push
cmpsl
enter
push
pop
mov
fistpl
dec
sub
dec
cwtl
sub
adc
fsubs
outsl
mov
push
sti
enter
or
xor
les
jbe
jg
addr16
out
fistpl
mov
cmpsb
push
or
mov
mulb
insb
dec
div
or
test
cmp
mov
push
push
pop
push
sarb
mov
cmp
int
add
adc
inc
lds
imul
jle
push
jns
pop
pop
imulb
sbb
sub
test
xchg
fs
loope
dec
lahf
mov
repz
inc
jp
lahf
xchg
cmpsl
jge
pop
jno
shll
lods
adc
add
jo
cmp
push
cmc
shll
in
fs
imul
jb
cwtl
mov
je
pop
jne
or
sbb
int3
mov
shrl
sub
pop
pop
jne
lds
mov
fs
add
sub
mov
fdiv
stc
mov
add
repnz
mov
lret
ret
push
sub
add
and
fwait
iret
loop
mov
cmp
test
lret
fstpt
pop
stc
and
jmp
das
lods
fdivrs
movb
sbb
pop
ret
std
xchg
sub
xor
shll
call
mov
cmpb
movsl
cld
mov
xlat
add
pop
orl
and
jg
out
push
js
ret
mov
and
jecxz
adc
push
xor
shlb
ds
inc
push
mov
push
fs
int
adc
xlat
fbstp
pusha
mov
sahf
mov
ret
adc
cwtl
ret
testl
outsb
stos
mov
fisttps
mov
sub
mov
mov
int
mov
jp
and
dec
repnz
decb
sub
adc
xor
and
movsb
push
repz
sarb
dec
lret
mov
hlt
loope
pop
imul
add
mov
mov
jbe
push
clc
iret
inc
sbb
js
lahf
pushl
cmpsb
push
and
fsubs
adc
pop
inc
pop
jno
fnstenv
stos
jge
mov
loopne
aam
rorl
sub
insb
mov
sbb
pop
ret
or
test
push
out
mov
leave
jae
mov
popf
xor
das
mov
dec
jmp
cwtl
clc
cmp
js
sub
jnp
sub
sub
out
dec
pop
add
jmp
movsb
xchg
or
test
sbb
add
mov
pop
movsb
mov
mov
xchg
inc
scas
orl
add
pop
sbb
mov
sbb
sub
lcall
in
mov
cmp
je
xor
add
add
ss
outsl
mov
repz
scas
cmc
shll
mov
loopne
stos
es
cwtl
mov
movsl
and
push
pop
adc
mov
insb
scas
cwtl
in
mov
adc
adc
fadds
outsl
xor
xor
cwtl
inc
pop
outsl
fadd
divb
sbb
mov
sbb
pop
arpl
mov
fdivrp
xchg
jb
push
hlt
pop
fwait
adc
dec
mov
es
les
clc
mov
mov
daa
shll
mov
fs
das
cmp
mov
into
test
rolb
lods
adcl
stos
repnz
push
loope
bound
or
into
or
and
subl
push
and
mov
pop
cmc
mov
std
icebp
clc
xchg
fsubs
xor
test
mov
pop
iret
or
sub
jno
and
fucomip
sub
popf
and
sub
push
or
add
jb
iret
mov
aad
aaa
dec
dec
mov
mov
test
cmp
jle
or
xchg
pop
or
add
sbb
pop
inc
aam
xchg
inc
pop
mov
cmp
xor
gs
xor
pop
pop
xchg
inc
pop
sub
mov
adc
jp
cwtl
pop
pusha
mov
movsb
mov
js
sub
xchg
movsb
xchg
or
mov
sbb
adc
mov
mov
jbe
jae
inc
in
test
or
mov
sbb
cmp
jp
cmpsb
jg
add
loop
fs
mov
xchg
pop
mov
adc
data16
sub
inc
sbb
mov
inc
jae
in
mov
pop
push
mov
add
mov
add
push
push
test
adc
mov
jns
mov
jae
pusha
push
jb
lret
mov
jae
add
rorl
mov
call
adc
mov
arpl
adc
and
hlt
sbb
ret
loope
movsl
test
or
mov
movsb
jle
cmpsl
xchg
mov
out
jbe
ja
test
adc
pop
xchg
xor
jns
jmp
jno
je
je
adc
imul
xor
ljmp
cmp
fwait
mov
pop
push
jg
popa
jb
aad
popa
cs
daa
cmp
pop
ljmp
mov
or
fisubs
jb
jecxz
dec
adc
add
negl
jbe
lret
jbe
nop
xchg
ret
adc
push
test
fcmovbe
sub
pop
sbb
adc
pop
lea
pop
pop
mov
and
sbb
setae
mov
xchg
mov
in
pop
sbb
push
pop
outsb
int3
mov
hlt
in
lock
push
jb
sub
cmp
sahf
data16
cmpsl
mov
dec
mov
xor
dec
pop
jl
loop
notb
xor
test
lret
jae
clc
lret
lret
push
iret
push
loope
xor
jle
lahf
mul
adc
push
jns
clc
cmc
cltd
push
mov
mov
xor
and
xorl
mov
cmp
sub
push
aaa
scas
rorb
inc
js
test
add
mov
fisubrl
push
aaa
jmp
sub
and
pop
mov
xchg
sbb
jp
pop
add
or
push
and
cwtl
loope
movl
pop
lcall
push
sub
arpl
push
sub
ds
xor
in
test
jle
mov
and
fldcw
jnp
int
and
mov
in
jmp
push
dec
push
mov
mov
js
adc
repz
mov
sbb
gs
push
in
out
pop
data16
mov
addl
cmp
addl
divb
or
cmpsb
dec
cmp
repnz
test
loopne
movsl
fs
inc
int3
stos
adc
xchg
xor
sub
sbb
mov
or
leave
inc
popa
cmc
mov
or
jo
testl
addr16
sbb
aas
mov
ds
pop
cmp
xchg
pop
mov
add
pop
outsb
and
mov
cmp
fidivs
cmp
mov
jle
fdivp
movsl
jmp
xchg
sub
sbb
stos
int3
sub
out
leave
sub
sbb
das
jbe
subl
test
sbb
inc
pusha
mov
and
xchg
rcrb
pop
call
jbe
sbb
jmp
loop
add
test
loope
xlat
push
fs
cwtl
xor
xchg
sti
push
js
out
test
sub
xchg
dec
mov
sub
insb
mov
mov
mov
insb
pop
mov
outsl
xchg
add
sti
xchg
jns
cmpsb
adc
fiadds
lcall
das
pop
cmp
filds
sbb
mov
stos
imul
dec
add
mov
cmp
xchg
js
xor
popa
inc
adc
xchg
push
outsl
xlat
pop
xchg
fcoms
ret
xchg
push
cltd
aaa
pop
mov
add
pop
insb
int
loope
addr16
test
dec
inc
cwtl
or
clc
test
repz
pop
push
sarl
push
and
loope
iret
add
dec
pop
cmpsb
sub
and
mov
vmovups
icebp
cs
sbb
mov
loope
xlat
and
out
sbb
jle
sbb
push
hlt
sbb
pop
popa
shll
shrl
rcrl
rorl
cmp
sarl
mov
movsb
mov
test
imul
push
lcall
pop
js
scas
add
lea
xchg
cltd
lea
jo
aas
pop
jo
cld
insb
xchg
push
aaa
jl
repz
sbb
scas
roll
daa
icebp
test
ss
or
and
xchg
lahf
sbb
mov
sub
or
pusha
dec
xchg
add
aas
sbb
jae
dec
jno
pop
xchg
cli
popa
das
xor
sub
xchg
push
out
cmc
test
or
aad
pop
xlat
mov
add
mov
pop
leave
push
push
mov
xchg
lret
call
lods
pop
sbb
sub
popa
dec
sbb
fiadds
in
push
add
xchg
jnp
mov
aaa
imulb
xor
mov
sbb
pop
inc
lret
int
and
mov
test
fwait
insb
mov
sbb
es
cmp
outsl
pop
aaa
out
push
xor
jp
sub
loope
mov
scas
sarb
mov
mov
hlt
leave
add
hlt
and
mov
push
into
cmp
jae
jp
jns
rcrb
enter
push
and
push
mov
lds
push
stos
jmp
xchg
cld
cwtl
and
sub
clc
mov
pop
popa
repz
call
lret
icebp
repz
ljmp
jg
outsl
cli
sub
gs
mov
sti
fs
orb
mov
fs
sbb
pushf
cli
in
addr16
mov
fimuls
jp
xor
xchg
mov
cmpl
push
fs
out
ss
mov
push
lds
shll
push
ss
push
mov
sbb
push
jmp
cs
mov
shr
ss
sbb
aaa
cltd
clc
je
push
mov
in
test
push
shlb
jbe
movsl
pop
pop
pop
cmp
jl
clc
add
xchg
adc
cwtl
adc
and
stos
adc
xor
sub
sub
sbb
mov
sti
adc
sbb
adc
daa
lods
sub
push
xor
mov
dec
sbb
xor
xlat
in
lock
inc
xchg
and
pop
lcall
insb
add
mov
push
jne
sbb
sub
pop
gs
dec
sahf
lock
or
fldcw
and
push
sbb
sti
data16
mov
cmp
and
add
and
aaa
sub
mull
mov
jae
outsb
mov
subl
fisttpl
push
jns
mov
and
testl
add
or
mov
je
cmp
add
sub
adc
pop
or
mov
and
pop
icebp
enter
scas
and
add
push
or
xor
mov
mov
insl
pop
cmp
mov
loope
xchg
test
push
lea
and
mov
dec
sti
xchg
dec
push
cmp
mov
pop
lcall
xor
outsl
push
push
push
add
xor
dec
hlt
movsl
xchg
fnstenv
push
ja
roll
jg
dec
mov
mov
or
mov
add
fdivrp
sti
cmpsb
pop
push
fsubrs
pop
ja
sub
jae
movsb
rorl
fs
cmp
xchg
adc
cmp
xor
lahf
enter
sbb
icebp
sti
mov
adc
push
adc
sarb
sbb
outsl
jns
sub
in
push
test
jae
stc
arpl
cmpsb
pop
mov
cmp
dec
test
dec
loope
jo
cmc
out
mov
cwtl
icebp
shll
iret
xchg
adc
push
xchg
filds
sbb
adc
xchg
jno
je
std
sub
js
adc
xor
dec
jecxz
cwtl
sbb
sub
xor
inc
xlat
jge
sbb
push
inc
push
mov
in
stc
and
mov
jl
ret
pusha
scas
jae
xchg
mov
push
mov
push
imul
nop
js
dec
push
or
fidivrs
sti
sub
push
push
loope
xlat
xchg
mov
sbb
dec
sbb
sub
inc
cltd
sbb
dec
or
add
aaa
mov
pop
cs
sbb
xchg
cmp
hlt
mov
sbb
or
mov
subb
push
pop
adc
push
leave
push
or
cmc
inc
mov
fistpll
aad
xor
sbb
and
jl
cmpsb
xchg
sbb
insl
add
ljmp
stc
gs
jo
cmp
addr16
negl
pop
sub
or
lock
and
mov
sub
xchg
pop
sbb
cmp
and
aam
adc
jne
dec
cwtl
insb
or
dec
jno
cmp
mov
xchg
dec
jmp
pop
or
mov
lret
mov
loop
cmp
jg
push
dec
test
aas
enter
xlat
dec
cltd
mov
mov
jne
inc
sub
stc
dec
out
and
les
and
sub
je
arpl
loopne
push
xor
lret
and
mov
add
js
mov
jae
aas
sub
call
out
lock
push
mov
cmpsl
shll
push
xchg
dec
push
ja
xchg
sub
pop
addr16
add
mov
stc
dec
mov
stc
scas
int3
or
xor
xor
das
jmp
mov
mov
stc
lock
addr16
mov
mov
pop
cltd
dec
js
call
pop
ret
je
sbb
push
dec
jo
cmpsb
or
ja
pop
xchg
sub
mov
push
cmp
or
xchg
leave
addr16
fsubrs
and
movsl
push
sarl
and
dec
xor
mov
je
pop
jne
mov
jbe
imul
ds
dec
shrb
mov
jb
xchg
popa
repz
sbb
push
out
lods
insb
and
push
mov
jno
lret
cli
daa
lret
jbe
mov
push
sbb
rcrl
iret
push
push
ja
scas
into
lahf
icebp
dec
lcall
outsb
dec
push
pop
or
outsl
and
push
add
test
shl
mov
iret
test
lock
ja
sub
aaa
jns
inc
out
push
fucomip
adc
sbb
lea
lret
cmc
stc
in
add
mov
clc
shll
cmpsl
stos
hlt
push
add
push
loopne
inc
or
jle
dec
sub
call
jae
add
push
mov
sub
push
or
mov
inc
mov
mov
ds
lock
jne
mov
int
jo
pop
outsb
ss
and
xchg
call
adc
loope
and
xchg
ja
addr16
mov
pusha
add
scas
fstpl
adc
lods
adc
movsb
fstpt
push
nop
ja
enter
test
lods
sbb
xor
jns
clc
das
cmpsl
pop
mov
icebp
mov
adc
sarb
mov
jo
adc
mov
xchg
cli
push
mov
dec
xchg
jae
iret
jg
adc
lret
sahf
mov
sahf
jo
sbb
in
rorb
or
xorl
lret
shl
mov
add
mov
sbb
xor
jmp
mov
xchg
test
push
mov
jb
sbb
in
dec
ret
lea
lods
pop
ud1
pop
fiadds
pop
mov
ror
test
enter
mov
push
les
or
cli
mov
adc
push
fwait
pop
mov
pop
lret
jecxz
pop
rcll
imul
setns
push
ret
cld
test
xorl
cs
mov
ss
je
mov
aam
cmpsl
pop
sbb
inc
scas
mov
mov
or
pop
xchg
lret
pusha
adc
stc
jbe
or
inc
push
ja
jno
jecxz
xchg
dec
add
mov
push
loope
add
pop
xchg
mov
inc
mov
rorb
push
movsl
or
push
xor
mov
bound
jbe
cbtw
adc
test
adc
sar
into
clc
out
push
xlat
lods
xorl
cwtl
and
test
sub
daa
xor
pop
dec
sbb
mov
test
jge
cwtl
push
test
sub
outsl
pop
pop
scas
int3
ja
mov
ja
adc
jb
dec
jp
cltd
or
jb
push
add
pop
push
and
cs
push
out
fnstenv
sbb
adc
fisubl
pop
xlat
mov
inc
sbb
cwtl
aas
dec
push
loop
push
dec
pushf
cwtl
jp
push
insb
inc
and
push
icebp
stos
xchg
insl
mov
mov
mov
and
xchg
es
sbb
fwait
iret
cwtl
cmc
inc
mov
loope
nop
push
xor
sbb
pusha
mov
add
sub
fildl
sub
dec
adc
dec
out
add
lcall
das
ljmp
clc
add
sub
xchg
lcall
nop
iret
popa
jl
xor
add
sub
sbb
popf
mov
sub
add
shll
sub
es
inc
xchg
cwtl
mov
mov
cmp
jl
repz
aad
cwtl
xchg
sub
fdivs
loope
jge
xor
xlat
or
mov
sub
ljmp
sbb
or
daa
pop
nop
movsb
cwtl
data16
sub
cmp
cmp
mov
push
add
pop
push
adc
jmp
mov
fs
es
frstor
adc
mov
stos
rcrl
mov
mov
mov
or
outsb
sub
and
or
sbb
cmp
add
mov
ret
push
ljmp
mov
dec
shll
inc
push
cli
ret
push
sub
cltd
xchg
cwtl
call
ret
push
call
mov
dec
lret
je
xchg
pop
xor
pop
cmp
push
scas
pusha
xor
inc
pop
shrb
pop
mov
scas
out
add
js
sub
ljmp
mov
jns,pn
mov
ss
je
push
push
adc
mov
imul
mov
dec
ljmp
and
xor
imul
lret
push
sub
sbb
xchg
xchg
inc
gs
imul
jp
and
ss
mov
ffreep
or
cmpsb
roll
mov
push
cwtl
aas
mull
push
jo
repnz
sub
clc
rclb
ja
in
push
sbb
leave
repz
mov
mov
add
and
pusha
fildl
mov
or
call
mov
xor
dec
adc
int3
icebp
iret
icebp
mov
popf
rcrl
fstl
movb
je
or
push
pushl
pop
dec
js
cmpsl
sub
sbb
inc
cli
inc
lds
sub
or
aaa
inc
and
repnz
mov
out
popa
ja
fldenv
movaps
out
or
cmp
aam
arpl
cld
add
lods
adc
push
jae
test
add
nop
sbb
mov
leave
mov
loope
dec
fcmove
daa
pop
ljmp
or
xchg
js
adc
inc
pop
sbb
rclb
xchg
ja
mov
jo
adc
cltd
dec
adc
inc
mov
rcll
int
push
xchg
and
cld
mov
arpl
lret
mov
clc
sub
jo
inc
xorb
cwtl
mov
mov
sub
stos
mov
adc
inc
sub
or
into
and
dec
inc
push
es
pop
shrb
movsl
in
xor
jno
inc
add
popf
fisttpll
xor
mov
or
push
js
sbb
cmc
cmp
out
mov
jb
adc
insb
jmp
lds
and
mov
sbb
lret
sbb
pop
push
mov
rcl
add
shll
sti
sbb
mov
cld
bound
mov
js
out
xor
fmulp
movsl
nop
pop
cmc
out
mov
lock
enter
xchg
out
nop
ss
jo
mov
js
jae
jns
ja
imul
xchg
xchg
cwtl
jne
cmpsb
rcll
mov
xor
add
jecxz
shlb
in
xchg
push
lret
xor
jns
mov
xlat
xor
mov
lahf
jp
push
aam
and
cmpsb
adc
xor
mov
xchg
mov
sbb
or
cwtl
cmc
cmp
add
push
cwtl
cltd
sahf
mov
stos
es
aam
push
cmpsl
dec
xchg
add
icebp
repz
orb
cmpsl
and
jbe
pop
pop
fsubs
pop
cmp
movsb
out
fnstcw
xor
jg
mov
pop
pmullw
fdivp
popf
imul
push
mov
push
nop
daa
sbb
add
push
pop
add
cli
es
inc
xchg
dec
ret
adc
mov
xor
test
and
nop
fsubp
pop
loope
xchg
bound
pushf
addr16
imul
sbbb
sub
pushf
mov
repz
xor
scas
pop
jno
add
jae
xchg
pop
inc
lds
arpl
jae
adc
sbb
lea
mov
pop
mov
out
sbb
add
cmp
imulb
cmp
push
clc
adc
adc
sub
xchg
push
xor
mov
test
pop
mov
or
adc
jl
and
mov
jns
lret
aam
inc
xchg
nop
push
mov
mov
out
jp
adc
cltd
hlt
jb
add
jl
leave
adc
nop
arpl
ljmp
mov
xchg
push
scas
ja,pt
sub
jo
sbb
pushf
jle
sub
sub
lods
test
lock
es
mov
mov
int3
scas
adc
mov
and
sbb
mov
bound
push
ljmp
cmp
stos
imul
sub
and
adc
ret
jne
jae
mov
sbb
int
pushl
sbb
push
pusha
mov
sbb
jo
mov
push
scas
divb
divl
sub
inc
shlb
sub
loope
jns
lcall
and
mov
xchg
push
out
insb
lret
decl
and
shll
sub
sbb
pop
call
sbb
push
aas
mov
push
xor
cmc
lret
repz
stc
and
lods
cs
jbe
sbb
outsb
mov
add
mov
sub
push
and
ss
fildll
sahf
pop
je
xchg
jbe
mov
dec
xorl
dec
aaa
testb
cmp
sbb
mov
cmp
adc
cmp
call
outsb
push
mov
jo
mov
xor
inc
xor
add
loop
push
and
insb
mov
or
mov
cmpsb
outsl
jns
add
daa
mov
test
and
mov
pop
and
lret
cltd
sarb
cmp
jle
jnp,pn
mov
ss
ficoms
adc
jae
sbb
sbb
imul
scas
repnz
int
cwtl
jae
call
imul
push
movsl
pop
mov
nop
imul
mov
sub
lods
xor
ss
and
mov
lock
insl
mov
mov
push
pop
lret
bound
adc
inc
xchg
sbb
pop
inc
pop
cmp
xchg
fs
jbe
adc
dec
and
lods
jbe
enter
jbe
adc
ret
imul
jne
push
mov
jmp
pop
test
pop
fwait
mov
lret
mov
cmp
adc
mov
xchg
fisubrl
pop
out
dec
je
inc
mov
xor
jo
pop
repnz
popa
pop
xchg
cld
push
sbbb
add
or
inc
pop
insb
add
cmc
and
aaa
xor
popa
sub
daa
leave
sub
sub
stos
dec
or
repz
or
cmp
inc
aad
ja
jp
mov
mov
cld
test
push
lea
mov
xchg
aaa
fs
addr16
and
test
cmp
cld
dec
mov
mov
imul
push
cwtl
xchg
mov
adc
fwait
pop
adc
push
jns
adc
cmp
mov
sbb
cmc
sar
out
adc
ja
adc
and
cmp
sbb
pop
xor
push
cmp
jb
fdivs
dec
and
cli
mov
sbb
popf
jbe
xor
inc
cmp
loope
dec
xchg
dec
repz
xlat
dec
pop
mov
sbb
ret
fcompl
mov
and
mov
fnstcw
fs
loopne
sbb
mov
and
push
test
push
stos
jg
bound
mov
adc
pop
jl
sbb
xor
repnz
xor
sbb
ret
test
arpl
sub
pop
xchg
aas
popl
push
mov
popf
fsts
pop
imul
jae
jb
mov
addb
rolb
mov
and
inc
out
xor
sbb
into
aam
jmp
xchg
jbe
push
sbb
fnsave
xchg
dec
push
sbb
rcr
push
and
sub
mov
jg
push
ret
addps
sbb
or
sub
js
pop
jnp
insb
cmpsl
dec
mov
inc
cs
mov
test
add
sub
outsl
pop
test
xchg
cmp
and
pop
adc
inc
inc
ret
scas
dec
gs
inc
insb
repnz
scas
iret
fcoml
pop
dec
hlt
loopne
and
push
movl
xchg
pusha
jecxz
xchg
ljmp
jne
lcall
push
mov
ffree
into
adc
or
jo
sbbb
push
movd
cltd
test
cltd
xchg
das
push
or
shrb
lock
mov
dec
fs
leave
jnp
nop
xchg
cwtl
loopne
jmp
mov
inc
push
xlat
subl
aam
leave
clc
shl
mov
xor
or
out
push
sbb
icebp
rorl
ljmp
cmpl
cltd
out
cmp
add
scas
loopne
add
int
and
ret
insl
xor
sub
imul
rcr
jmp
push
mov
or
mov
pop
pop
push
lods
add
xor
ljmp
mov
lret
aas
or
jo
js
pop
adc
pop
cmpsb
lds
sbb
adc
mov
je
mov
lahf
cltd
sub
fs
pop
dec
push
and
mov
jl
xor
dec
call
push
insb
xchg
xchg
orl
popl
adc
out
or
lds
sub
fcom
enter
lret
dec
xor
sahf
mov
cs
xor
sub
imul
mov
dec
cmpsl
pop
test
mov
int3
mov
sahf
pop
mulps
cmp
cmpsb
cli
jae
jo
repnz
push
lea
sbb
cli
insb
mov
lret
mov
jo
insl
cmp
sbb
mov
xchg
jo
insl
adc
sbb
xor
xor
mov
out
mov
in
mov
roll
sub
ljmp
push
shll
mov
cmp
push
push
clc
gs
jae
xor
push
xor
in
push
fsubs
adcb
push
out
mov
test
jno
inc
xchg
mov
lock
lahf
imul
mov
ja
stos
lods
xorb
xchg
sbb
cmp
fcoml
mov
and
pop
das
xlat
sarl
or
movsb
scas
bnd
mov
or
repz
pusha
insb
mov
xchg
mov
andb
dec
pop
xchg
xchg
sbb
insl
push
shl
js
pop
and
fstps
loop
cltd
leave
inc
push
negb
mov
jmp
or
dec
push
jb
mov
dec
xor
adc
lret
add
push
adc
lret
jno
hlt
pop
shll
nop
aam
stos
clc
and
je
push
bound
cvtps2pd
bound
pop
rcr
xchg
mov
push
jecxz
or
xor
icebp
push
divl
sahf
ja
xor
cwtl
cmpsb
pop
fs
cwtl
pop
adc
pop
cld
push
sar
ja
push
stos
xor
es
ja
cmpsb
mov
xchg
into
sahf
call
cwtl
push
and
ljmp
and
les
dec
mov
push
mov
adc
jo
mull
push
popa
mov
nop
pop
clc
and
dec
je
push
dec
add
inc
dec
adc
rolb
mov
and
mov
divl
clc
es
jecxz
pop
cmpsb
inc
fs
cwtl
inc
adc
pop
fstl
sti
inc
ja
push
stos
xchg
pusha
es
sub
ja
sahf
ja
mov
pop
movsl
mov
jecxz
push
add
and
leave
daa
mov
push
and
stc
mov
jge
mov
xchg
in
std
push
push
stc
popa
cwtl
sub
int3
push
fidivl
mov
shl
mov
push
ds
inc
sub
push
je
push
pop
xorl
jmp
adc
inc
je
cmp
call
fidivrl
ret
fwait
aam
add
sarb
pusha
adc
repnz
leave
push
xlat
lods
es
pusha
adc
fbstp
dec
mov
lret
cmp
add
cwtl
repz
notb
sti
notb
mov
insl
sub
inc
or
cmp
mov
or
xor
mov
add
adc
push
add
enter
lods
es
pop
xor
es
and
mov
cmp
sub
xor
popa
bnd
or
inc
je
xchg
les
or
call
sbb
add
sbb
cli
mov
jo
push
push
push
jbe
mov
repz
jns
adc
pop
and
mov
pushf
jns
and
dec
mov
fdivrp
stc
cmp
push
jb
and
aad
xor
sub
clc
ljmp
stos
push
lods
je
cmpsb
push
push
out
shlb
sbb
xor
movsb
out
out
jns
adc
xchg
repz
jns
sub
testb
mov
lcall
std
mov
xor
xor
fbstp
repnz
rcll
in
adc
fildl
daa
cld
cltd
sbb
hlt
sbb
aad
fdivs
sbb
pop
mov
mov
or
in
mov
mov
bound
xchg
push
and
out
pop
ss
ret
sbb
adc
outsb
xchg
or
sub
inc
je
in
cmp
rol
pusha
jg
xchg
mov
sub
dec
mov
popa
pop
cmp
cmc
push
mov
ljmp
outsl
shlb
cwtl
insb
shl
add
cmc
mov
lds
lds
cmp
loop
cld
jne
jae
xchg
sub
pop
ss
push
ljmp
loopne
fs
xchg
cltd
pop
lret
cmpb
xchg
addr16
pop
aaa
filds
mov
arpl
leave
jle
and
pop
in
pop
repz
or
cld
mov
xlat
fmuls
bound
sub
mov
mov
int
xchg
insb
xchg
pop
or
mov
jmp
pop
xor
cmp
divb
xor
jl
inc
cmp
addr16
in
lret
dec
es
xor
sub
cmc
mov
pop
ret
push
fldt
out
or
push
cwtl
dec
add
lret
and
sub
lcall
adc
in
push
ret
mov
mov
popf
inc
xchg
pop
pop
jae
je
or
sbb
jle
cmc
jmp
in
cli
adc
mov
lret
stos
lcall
sub
mov
repz
ss
or
sub
jle
xor
sbb
adc
rclb
out
sbb
xchg
je
jp
mov
add
insb
adc
ret
and
in
jbe
cmp
adc
or
cmc
ja
and
cmp
cltd
mov
push
in
adc
sarl
xchg
push
cwtl
xchg
inc
mov
dec
sub
push
sbb
les
int3
fidivrl
lahf
fldcw
gs
inc
pusha
mov
fiadds
aad
pop
pop
xchg
sub
push
mov
or
and
pop
xchg
jbe
insb
sbb
jge
test
hlt
push
sub
ret
lea
rclb
lods
jg
movl
pop
fcompl
or
lods
fldt
incb
movsb
pop
jg
xor
lock
mov
mov
mov
into
shll
jb
and
ss
in
lcall
hlt
outsb
pop
sub
repz
jle
jecxz
adc
je
push
int3
mov
int
cmp
push
stc
sbb
sbb
adc
push
call
or
adc
fldcw
repz
sbb
fldt
jl
mov
mov
dec
clc
push
inc
jo
mov
or
sbbb
rolb
add
jl
mov
xor
inc
movl
sbb
cmp
in
pop
and
jmp
imul
jl
push
je
pop
addr16
movsb
leave
inc
repz
jle
mov
inc
clc
loope
add
call
out
lret
out
push
push
lret
jecxz
or
sbb
fs
mov
push
pop
inc
pop
ficoms
push
adc
ja
ret
imul
fiadds
dec
mov
cli
jp
cmpsl
mov
jo
pushl
test
js
mov
gs
jle
mov
fwait
leave
xchg
mov
jge
sub
mov
sbb
repz
inc
gs
or
fsubs
outsl
sbb
mov
aas
xchg
mov
mov
stc
pop
lahf
dec
xor
lea
xor
adc
mov
cmpsb
mov
pop
rol
arpl
divb
sub
idivb
cmp
mov
xor
mov
xchg
mov
push
xlat
xor
and
xor
sbb
in
mov
int3
cwtl
out
mov
and
inc
mov
js
or
cmp
pop
mov
stos
mov
int3
jae
test
inc
inc
push
push
sub
cmpsb
into
inc
inc
sbbl
cmp
js
add
xchg
xlat
xchg
das
pop
iret
mov
roll
inc
shll
clc
mov
cmp
jbe
shl
mov
mov
mov
sbb
jg
push
mov
pop
add
lret
sbb
push
test
jbe
mov
xchg
shll
aas
lahf
pop
call
sub
add
mov
pop
and
lret
imul
imul
imul
sub
pop
jle
repz
imul
ret
xor
imul
cmp
mov
cli
je
hlt
les
and
mov
mov
adc
or
sbb
ja
xor
scas
sbb
jae
lea
jno
cltd
jl
stos
in
or
push
or
std
repz
ds
leave
xlat
push
add
fs
inc
mov
xchg
push
invd
xor
xor
sub
outsb
pop
dec
inc
mov
aas
sub
xor
js
add
cmpsb
dec
ret
push
arpl
in
pop
xchg
data16
fs
xchg
mov
jl,pn
and
add
cli
insb
xchg
cmc
pop
sub
arpl
pop
data16
pop
xor
sub
push
inc
push
cmpb
sbb
or
mov
mov
sub
jae
lcall
iret
mov
out
repz
enter
jg
fisubrl
adc
pushl
mov
or
add
adc
arpl
cs
call
or
mov
adc
jge
add
mov
jecxz
rcrb
pop
ret
mov
lods
mov
fmul
jecxz
and
sub
xor
add
jae
mov
es
xor
xchg
xchg
mov
push
clts
sbb
or
ss
rolb
lahf
pop
enter
stc
mov
add
data16
cld
sub
fdivrs
dec
dec
xchg
cmp
mov
xchg
pop
push
rorl
bnd
inc
or
loop
lock
xor
adc
dec
dec
call
lods
jbe
mov
add
sahf
xchg
adc
fcoml
inc
xchg
xor
lcall
mov
fcoml
adc
and
sarl
xchg
repnz
push
int3
push
adc
adc
insl
pusha
xor
mov
rcll
pop
and
ljmp
cmc
xchg
dec
loop
sub
xor
pop
lea
sahf
mov
cltd
push
icebp
inc
cmpsb
push
cmc
seta
cmp
cwtl
insb
rep
cwtl
pop
enter
nop
push
aaa
shrl
inc
mov
push
pop
mov
xchg
mov
add
jge
lods
enter
sub
jmp
sub
sub
je
cmp
or
cmpsb
cwtl
into
push
cmp
mov
pop
out
mov
daa
ds
sar
lret
rcrl
inc
mov
lds
xchg
jno
pop
js
pop
jl
cltd
clc
nop
xchg
jmp
push
add
xchg
insl
js
mov
imul
pop
cwtl
mov
mov
jecxz
pop
pop
fmull
arpl
pop
or
push
cmpsb
ss
cwtl
push
js
jmp
popf
mov
pop
mov
iret
xchg
pop
shl
in
std
mov
pushf
adc
add
xchg
mov
cli
daa
push
lods
adc
inc
scas
test
repnz
ja
sbb
mov
mov
sbb
xchg
xor
stc
push
pop
int3
mov
insb
testl
aam
repnz
sbb
pop
add
dec
push
inc
loopne
shrb
dec
shlb
sub
inc
and
movsl
cmp
push
dec
jnp
movsl
mov
mov
jno
pop
push
je
adc
sub
push
into
out
jecxz
xlat
test
repnz
lods
jne
xlat
and
icebp
mov
xchg
rolb
jae
and
clc
aaa
test
pop
pusha
xchg
mov
imul
pop
ss
mov
mov
jo
xor
lods
lock
add
outsb
dec
jle
cmp
jle
out
fstpt
test
xchg
dec
pop
lret
data16
repnz
sbb
gs
out
jle
pop
dec
cmp
sbb
sub
or
ss
sub
xor
repz
xor
jge
and
inc
out
lock
sbb
mov
repnz
inc
insb
stc
mov
in
iret
inc
dec
jle
loope
outsb
xor
adc
pop
mov
sbb
pop
pusha
cmpsb
jb
xchg
sub
jmp
pop
lcall
pop
jbe
ret
add
pop
insl
mov
sub
loopne
and
add
xchg
aam
sub
bnd
push
jne
mov
push
shll
jp
and
jmp
inc
pop
or
test
mov
idivl
cs
mov
mov
std
les
mov
shlb
iret
clc
dec
aaa
dec
cwtl
sub
es
imul
pop
xor
and
movsl
ja
mov
or
test
mov
sub
shll
adc
aaa
xor
push
pop
or
leave
cmp
dec
pop
or
ss
shlb
pop
sub
sbbl
fsubs
mov
cmp
mov
adc
jno
icebp
iret
cwtl
mov
cmp
mov
fs
gs
push
std
stc
lods
dec
pusha
das
imul
aaa
or
popa
mov
jae
inc
into
pusha
hlt
ret
xor
fstps
cmp
hlt
movsb
repnz
jo
adc
cmp
adc
xor
dec
sbb
mov
and
sti
ficoms
dec
call
mov
inc
pop
test
cmpsl
ret
xchg
pop
jne
daa
dec
push
shl
mov
loopne
add
cli
push
lret
repnz
xchg
shrb
loopne
ds
push
subb
fidivl
mov
inc
push
mov
pushl
jb
xchg
lret
dec
testl
rorb
xor
fiaddl
xchg
xchg
xchg
imul
gs
xchg
sbb
hlt
cmpsb
ja
inc
sub
in
jae
cmc
lds
xchg
jo
scas
jae
add
push
inc
mov
pop
dec
adc
sub
rorb
loope
cmpsb
popa
movsb
dec
dec
sti
push
or
add
stc
out
add
mov
xor
adc
add
inc
mov
adc
mov
pop
loope
mov
adc
push
pusha
mov
nop
xor
add
jecxz
adc
cmc
andb
mov
stos
add
repnz
mov
insb
mov
mov
sbb
xchg
loop
hlt
repnz
mulb
out
jo
lock
push
adc
popa
repnz
push
imul
pop
adc
jle
dec
lcall
cmp
fiaddl
push
xor
push
push
inc
push
mov
pop
mov
mov
mov
mov
aas
scas
scas
aas
pop
mov
nop
pop
mov
sub
lods
jb
cwtl
lods
pusha
mov
jge
mov
mov
pop
imul
pop
mov
sbb
lret
sbb
xor
pop
pop
loopne
adc
adc
aam
cs
add
push
pop
je
ret
ror
pop
xor
jne
adc
jno
add
popa
mov
sub
add
and
ss
addl
mov
push
fildll
xlat
jle
ret
sbb
shll
xor
mov
outsl
push
dec
mov
xor
in
mov
mov
mov
aas
add
fdivrs
xchg
mov
andl
cmp
sub
sbb
sbb
roll
mov
add
push
cmp
lahf
enter
xor
pop
bound
sbb
shlb
sub
push
ret
jo
jns
and
lock
sub
xchg
xor
ljmp
sbb
and
js
mov
xchg
mov
out
mov
mov
mov
mov
xor
mov
jl
clc
xchg
fsubl
cmp
sub
sbb
movb
ret
pop
dec
mov
pop
stos
insb
and
loope
xchg
adc
xchg
xchg
pop
inc
push
xor
cmp
xor
lds
lcall
in
push
in
mov
xchg
pop
mov
shrb
cs
scas
ret
and
insb
inc
pushf
pop
push
shlb
sbb
lret
pop
out
andl
jne
jno
sub
stos
sbb
int
xchg
pminub
sbb
loope
enter
mov
ss
je
inc
ret
sub
lock
adc
ret
dec
aaa
test
jo
inc
scas
push
incl
clc
jno
adc
push
xchg
in
out
sahf
adc
adc
int3
mov
mov
into
mull
push
sub
cmpsb
shlb
jae
push
mov
sub
add
mov
cmp
pop
jo
mov
inc
adc
mov
adc
push
pusha
ds
xchg
jne
jo
aaa
sbb
pop
test
int
xchg
outsl
ret
push
jp
pop
test
cwtl
mov
sbb
pop
nop
fcoml
or
sub
popa
hlt
push
shlb
cwtl
xor
fisttps
adcb
loope
jo
xchg
pop
dec
js
pop
inc
push
sahf
repnz
insb
rcll
rcll
idiv
xchg
fldenv
push
ss
orb
sub
sbb
xor
repz
jo
pop
and
jg
lea
mov
mov
and
lock
and
and
jnp
adc
aad
rcrb
push
into
shll
out
pop
loop
repnz
adc
out
pop
push
lahf
mov
inc
aas
fbstp
mov
stc
xor
push
push
scas
fdivrs
jae
add
in
jg
lret
xchg
cwtl
cmc
outsl
pop
loop
out
cmc
mov
push
insl
stc
inc
cmp
push
cmp
insb
sahf
rolb
jecxz
jb
rol
movsb
push
mov
xchg
jg
push
jns
sbb
sbb
jne
jecxz
hlt
and
clc
int3
orb
loope
call
mov
mov
inc
pusha
cli
xchg
imul
ss
mov
or
lods
cwtl
inc
push
incb
cmp
mov
stos
sub
pop
sti
pop
add
xchg
jmp
pop
push
das
add
xchg
inc
sbb
shr
jnp
or
dec
pop
pop
sub
xor
sbb
or
popa
daa
xor
xlat
stc
in
xor
push
and
je
mov
ret
inc
pop
stc
mov
dec
push
xor
pop
bound
pop
test
xchg
mov
xchg
aas
in
xor
add
movsl
test
mov
push
dec
call
xchg
stos
bound
push
add
scas
scas
sub
pop
cli
les
xor
pusha
iret
jno
and
jl
fucomip
adc
mov
lcall
mov
pop
inc
jno
push
dec
inc
xor
adc
aad
inc
testb
jo
or
pusha
insb
cmpsl
push
mov
mov
stos
push
xor
mov
dec
dec
push
push
dec
out
cmp
sub
loope
dec
ds
test
inc
add
push
adc
dec
es
jo
and
push
xchg
jge
ja
sbb
mov
xchg
pop
xchg
test
mov
cmp
add
dec
xchg
mov
xchg
fsubrl
push
leave
xor
ja
out
lea
mov
jae
divl
mov
push
jo
xchg
imul
out
pop
jle
imul
sub
leave
xchg
inc
adc
xchg
iret
inc
scas
sub
add
pop
cltd
adc
sub
bound
in
test
addl
pop
sbb
mov
xor
pushf
sbb
outsl
popf
sub
sub
mov
call
aam
pop
data16
rcr
add
jnp
lret
mov
es
aas
test
aas
dec
ret
xchg
mov
stc
jl
mov
loope
jg
push
pushl
je
push
inc
mov
jp
movsl
mov
push
movsl
enter
or
jp
jae
sub
adc
jle
push
in
mov
jp
jbe
adc
pop
adc
out
xchg
mov
pop
pop
test
mov
push
add
pop
sub
dec
fs
push
outsl
jb
pop
adc
jae
je
repz
sbb
jo
sbb
test
sub
mov
sbb
cld
mov
int3
xchg
sti
ds
dec
mov
popa
inc
scas
push
arpl
sub
inc
das
or
sbb
shrl
loope
mov
icebp
cmc
fldenv
mov
or
mov
jno
push
lret
mov
shrl
xchg
cs
insb
mov
mov
jbe
cmp
repz
push
xor
mov
mov
jns
ljmp
adc
mov
mov
cld
insb
push
jo
idivb
popa
xchg
inc
xor
cmp
push
sti
and
sub
sbb
andl
mov
fldt
push
fimuls
test
pop
xor
push
clc
ret
daa
loope
sub
cmp
mov
xor
sub
mov
in
pop
and
pop
adc
jge
fs
dec
dec
push
mov
daa
int3
mov
test
xor
shll
repnz
imul
lds
mov
inc
inc
dec
jmp
jno
lea
mov
cmpsb
lods
imul
cmp
lcall
cmpsb
in
adc
and
cmp
inc
je
or
jb
scas
or
jg
inc
adc
add
add
cmp
and
jmp
inc
adc
js
sbb
hlt
fcmovnbe
in
inc
outsl
adc
clc
daa
inc
xchg
inc
cmp
mov
icebp
lods
daa
adc
inc
test
add
movsl
inc
enter
insb
and
clc
sarl
sub
out
data16
cmc
jo
sahf
mov
sbb
xor
lock
shlb
loopne
fisubrs
adc
pop
arpl
mov
pop
cli
loop
mov
imul
cltd
jno
mov
pop
mov
out
jbe
cmp
loope
push
js
fcoms
mov
pop
nop
insb
or
cltd
xchg
es
xor
pop
into
adc
and
jmp
sub
push
fistpl
lret
repz
int3
and
and
jbe
xchg
pusha
sub
xlat
jge
xlat
sbb
pusha
jle
inc
jl
xchg
rcrb
push
and
loope
dec
lahf
loopne
cmp
scas
sub
jp
sbb
lea
inc
mov
add
lds
mov
cwtl
sub
push
or
inc
jecxz
add
dec
notl
fucomi
ds
outsl
cli
sbb
inc
or
xchg
push
inc
pop
das
sti
test
sbb
cmp
add
lods
insb
cltd
or
cmpsb
data16
dec
add
mov
in
add
adc
cmp
push
inc
and
or
roll
in
icebp
or
sub
fs
das
mov
inc
mov
outsl
stc
inc
ss
push
notl
pop
jp
std
fldln2
sbb
int3
in
jg
sub
and
sbb
xor
iret
movsl
in
and
mov
sbb
pop
adc
clc
cmp
add
out
stc
sbb
je
jecxz
cmpsb
mov
scas
jae
in
adc
or
fdivrs
cmc
popf
fisubs
in
cmp
and
cs
cwtl
cmpsl
sti
leave
jo
cmp
inc
mov
jle
in
dec
sub
out
mov
cmp
ljmp
adc
or
popa
sub
jae
xchg
inc
repz
fadds
setae
jbe
imul
pop
adc
pop
divl
inc
test
xor
stc
lods
mov
jp
sbb
cwtl
cmpb
jle
loop
ret
pop
movsl
cmp
add
outsl
xchg
out
add
addr16
cmp
jp
mov
mov
andl
xor
and
jmp
mov
lahf
jmp
xor
call
xchg
in
imulb
mov
es
out
test
sub
xbegin
or
es
mov
xlat
lock
test
sahf
cmc
insl
fs
in
addr16
xor
iret
repz
mov
jge
xchg
nop
imul
push
xchg
insb
push
jno
shlb
addr16
pop
push
pop
dec
rcrl
pop
xlat
jae
mov
mov
mov
xor
sub
sub
sub
pushf
ret
mov
sub
adc
js
jmp
stc
and
insl
lcall
xchg
sub
cmc
sub
xchg
push
xor
shll
mov
test
dec
cmc
das
enter
pop
jno
in
in
ja
mov
outsb
cs
jle
out
jmp
std
rorl
or
imul
loope
lahf
pop
sbb
loope
mov
and
or
pop
or
push
rcrb
aad
je
push
add
leave
fildll
cltd
jae
fcmovnu
push
jecxz
or
xchg
lock
lcall
push
cltd
adc
jae
adc
mov
xor
in
sbb
or
sub
sub
mulb
xor
je
xor
lahf
add
mov
jo
int
jmp
addb
push
shrl
fidivs
sti
xor
pusha
inc
sti
xor
dec
cltd
mov
push
fs
adc
out
mov
xor
mov
pop
push
push
pop
sti
adc
dec
mov
xchg
sub
pop
fdivrs
icebp
mov
adc
pop
adc
xor
jae
mov
pop
xor
lahf
pop
movl
mov
idivb
sbb
aad
push
lock
in
fwait
cmp
push
pop
add
and
outsl
cmpsl
cltd
ss
inc
sbb
xor
mov
cld
and
cs
es
ret
pop
push
mov
or
adc
shl
adc
pushl
repz
loope
dec
cwtl
dec
xlat
jp
xchg
jb
je
xor
clc
sub
cltd
lahf
dec
lcall
jg
cs
mov
jmp
stc
adc
sbb
clc
add
fs
mov
mov
popa
push
popa
xchg
pop
pop
lahf
cwtl
ret
insb
add
or
dec
ss
mov
push
pop
push
pop
aaa
mov
popa
push
mov
dec
push
aas
adc
pop
jmp
inc
int3
sarl
mov
lret
jo
mov
lea
mov
jns
cmp
inc
add
sub
push
add
adc
iret
push
or
push
popa
decl
xor
cmp
mov
mov
rcrl
js
cmpb
xor
dec
push
cmp
sub
xchg
inc
pusha
or
jle
adc
mov
or
nop
outsb
mul
mov
or
repnz
cs
outsb
push
jl
or
xchg
loope
and
push
js
notl
rolb
loopne
rorl
rcrl
int3
jo
sbb
jp
xchg
pop
jbe
icebp
jmp
and
fldcw
sub
and
add
dec
mov
mov
imul
pop
sbb
push
pop
imul
mov
jb
scas
repz
call
cmp
imul
xchg
push
push
adc
js
adc
sub
out
mov
cmp
mov
cltd
pop
dec
push
dec
inc
push
cmpsl
push
je
test
sub
adc
ljmp
dec
jecxz
scas
lock
loope
push
mov
scas
sbb
in
dec
fdiv
push
inc
cmp
imul
div
ljmp
push
jp
adc
out
negb
push
or
inc
jae
ret
scas
sub
jo
sub
dec
or
enter
sti
and
push
and
fnstsw
mov
daa
and
adc
ret
xchg
fs
cwtl
jo
mov
sbb
addb
mov
stc
push
fwait
add
jnp
mov
movsb
mov
dec
xor
int
lret
les
dec
xchg
adc
repz
loop
out
test
ss
jae
pop
fs
or
stc
jl
in
arpl
pop
mov
iret
test
cwtl
pop
jno
shl
popf
push
aam
sub
jae
je
out
je
xchg
xchg
imul
push
arpl
xor
pop
jbe
shll
xor
addb
stos
jae
adc
arpl
lods
push
xchg
rcll
shrb
mov
mov
test
dec
mov
pop
leave
lret
xchg
scas
fcoml
and
repz
out
adc
icebp
jae
jge
lock
mov
xor
inc
mov
xchg
mov
and
jp
dec
xchg
movsb
push
cmc
pop
cmp
nop
cli
pusha
loopne
stos
mov
dec
xchg
dec
test
rorb
mov
pop
or
insl
mov
pop
shrl
and
jmp
jle
add
mov
out
imul
or
xchg
ret
mov
insb
and
fwait
imul
and
xor
push
add
mov
dec
xor
js
pushf
mov
dec
mov
inc
imul
repz
leave
sub
aad
test
jbe
mov
jns
add
mov
push
sub
and
add
jmp
xchg
movsl
or
outsb
sarl
sbb
sbb
pop
adc
dec
stc
mov
je
ss
push
xchg
pop
insl
loope
mov
leave
xchg
xor
ss
addps
mov
out
xor
xor
pop
xlat
adc
dec
mov
jae
inc
pop
xor
js
mov
rcrb
sbb
leave
lahf
mov
push
sete
shlb
sbb
add
sbb
icebp
push
push
add
push
xchg
adc
shr
movsb
popf
gs
adc
push
push
xchg
rol
mov
shl
jl
xchg
jnp
xchg
sbb
add
icebp
adc
into
push
loopne
inc
hlt
je
pop
pop
cmp
or
inc
adc
xor
adc
into
adc
push
pop
ss
add
mov
addr16
ljmp
sbb
or
jp
adc
pop
cwtl
cmp
fbld
jo
andl
fists
cli
xor
mov
loop
inc
in
xchg
adc
xchg
xor
jle
xchg
out
das
xchg
xchg
push
jae
sub
je
cs
pop
mov
es
or
mov
and
push
lods
aad
and
mov
push
mov
test
sub
jae
mov
pop
jp
shlb
jl
lods
cwtl
xchg
jae
enter
sub
xchg
ss
lret
jge
dec
inc
sub
xchg
dec
mov
jg
mov
sti
outsb
and
dec
sub
pop
mov
mov
je
mov
leave
pop
cmp
testl
sub
xor
dec
push
and
repz
ret
fcom
jmp
mov
xor
mov
pusha
jo
cwtl
jae
or
fadds
scas
xor
mov
cmpsl
mov
ss
cmp
loopne
jle
dec
push
and
in
add
and
jnp
or
pop
cltd
push
add
sbb
cmp
scas
rcl
sbb
inc
jl
add
lret
xor
pop
insb
and
adc
ficomps
dec
addr16
mov
roll
std
jne
aam
xor
pop
iret
adc
rcll
sarb
cmp
mov
inc
cmp
rcll
push
icebp
xchg
dec
mov
pop
jbe
cmp
mov
push
aas
movsl
imul
sbb
icebp
push
sub
mov
mov
push
xchg
neg
cmp
mov
and
mov
mov
sub
fs
add
shlb
scas
cmp
mov
insb
mov
stos
adc
or
sahf
pop
jb
jae
shrb
xor
push
into
xchg
pop
psubq
xchg
sbb
pop
adc
jle
mov
cs
add
xor
lret
push
dec
jbe
imul
loopne
push
gs
pop
jp
and
mov
rcrl
xor
loope
clc
xlat
or
and
push
push
out
push
test
jns
push
imul
insl
js
rorb
dec
jb
adc
addr16
or
cmp
sbb
cli
imul
sbb
roll
cmp
jle
mov
sub
dec
sub
rolb
icebp
push
daa
cmp
mov
fs
jmp
daa
or
inc
xchg
jo
sub
clc
pop
jo
cwtl
outsl
xor
jle
pushw
sbb
mov
pop
mov
push
cli
mov
xor
ret
sub
imull
lahf
scas
jo
mov
incb
dec
mov
dec
imul
mov
jge
cs
out
cmp
adc
dec
add
rolb
stc
shll
jg
int
test
add
add
mov
fsubr
aas
cmp
pop
and
addb
ljmp
push
test
ljmp
mov
insl
iret
out
jne
pusha
xchg
rol
xchg
and
xchg
dec
movsb
mov
cmc
mov
testl
and
mov
test
xchg
jne
cmpsl
sub
dec
adc
inc
cmc
jecxz
jmp
movsb
repz
mov
xchg
cmp
cs
cmovb
sbb
push
xor
jo
and
and
outsl
cli
adc
xchg
xor
cvtdq2ps
cli
ja
adc
push
push
sub
jo
jg
dec
hlt
push
scas
xor
stc
sarb
add
pop
movsb
mov
mov
mov
add
push
or
or
mov
pop
sbb
inc
ljmp
jae
imul
push
stos
arpl
fistl
push
dec
or
dec
pop
mov
movb
aam
scas
cmp
lods
add
lods
call
nop
addb
lock
dec
imul
xchg
push
push
or
jb
pop
lds
enter
pop
sub
pop
and
mov
stos
ljmp
add
mov
ja
test
jg
js
stos
push
loop
mov
testl
aad
mov
lcall
or
aad
loopne
pop
dec
movsl
enter
pop
iret
fldt
je
fstps
add
mov
scas
sbb
xor
cmp
mov
ret
inc
and
mov
pop
cwtl
adc
pop
mov
test
adc
sti
pusha
rol
xor
xchg
sbbb
mov
sub
rolb
or
out
aas
cmpb
stos
mov
mov
pop
pop
repz
mov
xchg
loopne
sbb
mov
sub
aad
loopne
push
add
mov
pop
sub
push
sub
xor
imul
out
mov
fld
xor
je
int3
pusha
lods
sub
jbe
wbinvd
popa
rcrl
mov
dec
cld
ds
outsl
lods
insb
jmp
pop
and
pop
mov
aad
sub
xchg
out
push
aad
mov
cmpsb
rclb
loopne
test
cli
es
sbb
mov
stc
rclb
jno
and
xor
imul
aad
std
cmp
call
lock
dec
arpl
icebp
adc
sbbl
adc
popa
enter
xor
inc
cmpsb
push
les
cld
bnd
pop
mov
ja
dec
and
adcl
shlb
xor
push
mov
sub
xchg
mov
jb
mov
jbe
movsl
mov
xchg
cmc
lods
jno
cmpsb
js
push
xchg
shrb
lcall
add
pusha
popa
mov
js
sub
add
gs
sbbb
jl
or
loope
test
pop
pop
das
sbb
add
cmp
cmc
xchg
daa
adc
js
rol
data16
sub
in
call
sahf
dec
test
xchg
push
xor
pop
mov
dec
ja
sub
cmp
sub
push
inc
pop
add
mov
fwait
push
ret
popf
addr16
addr16
inc
loopew
jmp
cmp
fisubrs
xor
push
jo
repnz
or
negl
pop
mov
sub
jae
aas
push
jmp
out
mov
xchg
dec
ror
jo
push
incl
add
mov
mov
inc
lcall
xor
mov
jmp
mov
jge
and
jg
mov
popa
mov
and
adc
aam
es
jecxz
jecxz
aaa
xchg
push
jb
mov
jle
rolb
push
movsb
in
sub
sbb
outsb
and
mov
push
add
mov
insb
notl
or
dec
xchg
push
int3
pop
push
adc
call
std
test
xor
xor
jae
and
sub
and
mov
jbe
mov
pop
arpl
push
jb
mov
mov
iret
xchg
decb
ljmp
sbb
and
dec
sub
adc
adc
call
push
les
adc
pop
sbb
in
or
mov
pop
sbb
xor
cmp
add
mov
mov
fwait
xor
sbb
adc
inc
adc
and
xchg
xchg
adc
adc
sbb
leave
movsl
mov
add
push
adc
cltd
icebp
repnz
jae
adc
aas
enter
pop
inc
pop
sahf
push
repnz
cwtl
aas
nop
cmc
push
pop
and
push
icebp
shll
mov
jae
xchg
divl
pop
mov
pop
push
mov
xor
mov
lock
jle
mov
cmpsl
adc
movsb
ja
cmp
icebp
sub
adc
lahf
fisttpll
cmc
leave
sub
fsubr
imul
inc
scas
movsl
clc
xchg
inc
push
or
mov
js
cmp
jnp
pop
rorl
stos
mov
in
lcall
sub
xor
push
adc
dec
nop
xlat
shlb
xor
and
xor
cmp
jnp
into
push
stc
inc
dec
out
jno
xchg
das
xor
negb
push
fsubl
cmp
stc
sbb
leave
push
pop
xor
mov
jg
cmp
push
sbb
aam
pushf
mov
dec
cwtl
je
jge
popf
jns
jns
jb
mov
mov
int
mov
push
sub
inc
jmp
or
inc
xchg
pop
mov
loop
scas
jnp
pop
push
scas
roll
shlb
or
int
jns
push
mov
js
in
iret
fisttps
mov
test
out
pop
fidivs
mov
subl
iret
jo
mov
iret
jo
push
cmpsb
jae
data16
je
xlat
adc
pop
adc
cmp
sub
mov
adc
push
jp
repz
scas
jle
leave
pop
jnp
jns
loope
scas
jle
lahf
stc
popl
es
ror
and
pop
jns
sbb
mov
mov
popf
mov
arpl
adc
push
inc
adc
stos
push
xchg
fsubrs
mov
inc
push
outsb
cmp
pop
cltd
mov
lret
dec
cmp
add
and
rorb
xor
push
inc
xorl
in
inc
arpl
mov
std
loop
lret
shrb
jnp
cmp
imul
lret
mov
dec
aas
pop
sub
pop
sti
fildl
mov
data16
mull
dec
adc
data16
std
or
mov
cwtl
mov
mov
xchg
adc
repz
addr16
jle
lcall
int
pop
mov
and
nop
flds
aad
adc
jbe
xchg
add
test
test
mov
fldcw
mov
iret
mov
add
fwait
push
xor
push
mov
jle
call
cmpsb
jo
mov
test
sub
xchg
insb
rcrb
sub
sub
adc
sbb
in
ds
sub
lahf
jl
add
sbb
add
push
or
fs
loope
adc
sbb
cmp
pop
lock
sub
lock
call
push
pop
push
cmp
daa
lods
shrb
adc
xor
movsb
xor
movb
push
aas
push
pop
imul
cmp
gs
and
push
test
mov
dec
xchg
in
cs
orl
insl
rolb
je
mov
adc
loope
xlat
andb
cmp
clc
aam
mov
jae
lods
in
pop
call
cwtl
xor
pushf
inc
and
jmp
mull
imul
xchg
popa
inc
or
ret
insb
mov
xchg
jmp
xchg
or
sub
daa
scas
sub
push
lock
mov
push
inc
sbb
out
or
push
jge
outsl
xor
mov
mov
xchg
pop
mov
adcb
pusha
mov
gs
dec
insl
ror
inc
jl
jp
shl
pop
push
or
mov
repnz
mov
mov
sbb
pop
inc
js
ret
insb
dec
jmp
std
out
xor
jbe
mov
stc
sub
mov
scas
add
mov
sub
test
loope
xor
pusha
test
sbb
mov
xor
sti
push
mov
dec
jbe
dec
cwtl
movsl
clc
outsb
arpl
xor
mov
imul
mov
fldt
jnp
iret
jl
sbb
cmc
imul
xor
lahf
icebp
pop
fcoms
movsb
ret
dec
cwtl
insb
js
add
test
mov
imul
mov
pop
aad
inc
xchg
insb
adc
into
cmp
sub
and
sti
xchg
pop
js
sbb
movsl
sbb
add
pop
mov
call
add
dec
mov
mov
test
outsl
jge
cwtl
xchg
add
adc
add
push
or
fisttpl
or
fs
jmp
add
jbe
cltd
ss
jns
mov
popa
or
xlat
push
je
fcos
popa
pop
test
mov
mov
inc
dec
xchg
push
add
ss
xor
jp
pusha
ficompl
lcall
mov
jl
daa
aam
test
push
mov
jbe
clc
popf
out
lret
mov
scas
add
dec
dec
mov
test
xor
pushf
jb
push
pop
pusha
scas
mov
cld
xchg
xchg
and
push
aam
add
dec
sub
bound
jno
mov
test
mov
gs
xorb
aas
fdivs
pop
mov
mov
mov
xor
sbb
cmp
add
inc
pop
jo
sbb
mov
mov
shlb
adc
inc
sbb
adc
mov
inc
add
popf
lea
test
lock
fwait
add
or
add
and
push
roll
mov
mov
nop
dec
mov
xor
and
mov
xchg
adc
addr16
lcall
mov
leave
inc
repz
xchg
out
pop
xchg
sbb
pop
xor
add
fadds
pop
push
sbb
mov
negb
pop
or
mov
inc
sub
inc
xchg
stos
in
out
pop
imul
xchg
xor
clc
pusha
cs
loop
push
inc
adc
scas
mov
cmp
inc
cld
pop
xor
inc
cmpsb
test
jle
dec
adc
jecxz
cmp
mov
xchg
dec
fwait
mov
jno
xor
xchg
mov
js
movl
jge
pushf
push
xor
mov
xor
sbb
test
nop
mov
mov
in
pop
test
mov
nop
push
sahf
xchg
arpl
ja
dec
mov
dec
jae
out
mov
clc
mov
cmpsb
jae
add
add
or
js
mov
xchg
jo
push
cmpsb
cmp
or
mov
jl
sbb
cwtl
mov
sbb
push
out
imulb
sub
sub
xor
scas
dec
and
pop
xchg
pop
jne
test
xor
and
cltd
jmp
mov
cmp
stos
ljmp
and
jo
push
mov
lahf
imul
push
mov
mov
sbb
cmp
popa
stos
and
aad
cmp
mov
sbb
arpl
idiv
fs
mov
jne
push
sbb
addr16
jae
jne
push
mov
adc
jns
adc
icebp
xlat
test
inc
mov
sub
jae
cltd
loopne
repnz
xor
or
decb
aaa
jg
xor
cs
mov
js
lret
adc
and
daa
cs
pushf
imul
pop
mov
xor
fadds
icebp
shlb
cwtl
xor
sbb
mov
subl
add
xchg
call
jbe
test
ja
mov
push
sub
adc
inc
sbb
pop
xlat
xchg
sbb
std
ds
sarl
aad
lcall
insb
sbbb
or
and
shll
sbb
jno
xor
mov
or
or
fistpll
xor
and
das
inc
cltd
mov
push
divb
jae
add
xor
ja
xchg
loopne
jae
scas
adc
push
fldenv
cmpsb
dec
sub
mov
mov
and
adc
addr16
push
and
sbb
and
inc
clc
xchg
loop
mov
int3
pop
push
jne
push
xor
popf
mov
imul
jecxz
adc
jmp
icebp
mov
iret
addr16
inc
into
inc
push
adc
nop
and
mov
and
sbb
sarb
or
sti
ljmp
sbb
dec
and
mov
jae
lea
pop
mov
pop
mov
cs
cwtl
add
pop
jmp
or
ficompl
lods
in
rorb
dec
ljmp
lea
push
mov
fiadds
push
lock
mov
inc
in
out
and
sub
jge
push
add
scas
pop
mov
cmc
in
enter
mov
jb
push
shrb
nop
aad
jle
lds
and
jle
dec
push
imul
aaa
adc
or
or
and
push
add
jns
push
ja
sub
pop
adc
mulb
cmp
fs
rorb
cmpl
pop
lret
sub
sbb
add
test
getsec
push
negb
push
dec
dec
sub
fmuls
mov
enter
dec
mov
mov
jge
js
cmp
iret
call
cwtl
xlat
adcl
mov
js
mov
insb
fisubrl
mov
or
stc
popl
cltd
imulb
popf
adc
sub
fbld
mov
mov
pop
xor
adc
mov
call
andb
shll
dec
nop
pop
jo
into
incl
outsl
mov
idivl
aaa
repz
mov
adc
std
mov
ljmp
mov
popa
and
ret
sub
movsb
clc
adc
stc
shll
ss
test
sub
clc
int
inc
add
cmp
add
inc
jo
pop
or
sub
mov
iret
pop
js
popa
es
mov
push
scas
in
gs
adc
daa
pop
pop
popf
lret
cwtl
test
sbb
jbe
shl
jo
iret
data16
enter
out
push
mov
jmp
push
hlt
sub
and
mov
mov
mov
repnz
inc
sahf
pop
inc
mov
add
mov
arpl
adc
popa
xchg
nop
add
push
test
mov
mov
pop
or
cwtl
aam
pop
add
nop
mov
not
insb
mov
test
pop
roll
aam
enter
lock
fcoms
jl
movb
adc
mov
mov
repnz
inc
mov
aas
and
mov
mov
es
clc
es
jbe
repz
iret
jae
jl
sbb
inc
jle
xchg
ja
adc
js
rclb
sub
mov
mov
cmpsb
popa
cwtl
dec
sub
xchg
test
xchg
and
sbb
nop
push
inc
mov
mov
and
jo
mov
cmc
pop
sti
mov
inc
js
mov
call
leave
xchg
dec
ljmp
out
cwtl
and
mov
nop
outsb
mov
mov
orl
mov
sub
mov
sub
xor
js
dec
pop
pusha
xchg
mov
jb
and
shll
pop
rolb
js
sbb
mov
mov
mov
xor
push
xor
mov
dec
scas
jnp
dec
mov
pop
dec
xor
mov
ficomps
mull
clc
sub
lods
cmp
sti
adc
pop
pop
in
adc
test
mov
mov
repz
dec
das
push
repz
pop
js
push
out
clc
jle
xchg
pop
repnz
mov
mov
sbb
pop
pop
jbe
mov
jae
pusha
in
out
sti
sbb
test
enter
mov
fsubs
sbb
cmp
out
das
stc
push
xchg
ret
and
mov
sbb
lock
test
fdivs
lods
and
mov
fidivrs
mov
loop
cwtl
ds
dec
arpl
mov
out
mov
sub
int3
call
outsb
pop
nop
in
xor
shlb
or
jnp
or
pop
imul
lret
push
mov
in
xchg
jl
fstpl
pop
adc
and
mov
aad
mov
push
xor
cli
or
adc
fcomp
inc
mov
cwtl
add
lea
or
ss
test
jb
mov
loop
ds
jnp
inc
mov
xchg
stc
sbb
mov
or
ljmp
pop
sub
push
or
bound
dec
movl
push
movsl
mov
in
insl
pop
ret
dec
cli
sbb
insl
repnz
push
mov
xlat
loop
xorb
jb
inc
pop
and
leave
mov
inc
sub
sbb
inc
aaa
shl
xchg
addr16
push
sti
arpl
out
scas
adc
cmp
inc
mov
add
mov
mov
ret
imul
inc
clc
mov
ret
ljmp
mov
in
push
sub
mov
add
push
pop
push
shll
sbb
xor
cmpsl
sarl
pop
dec
adc
in
jge
ljmp
faddl
inc
jno
jns
sub
dec
imul
test
movsl
mov
jg
sub
xor
inc
lods
dec
xor
popa
ds
pop
mov
insl
mov
loope
mov
mov
xchg
sub
inc
pop
pop
mov
pop
lods
sbb
imul
jmp
rorb
pop
insl
lods
push
mov
dec
cwtl
lahf
test
addl
shlb
mov
xchg
es
scas
mov
movsb
sub
test
mov
mov
lods
in
mov
pusha
cmpsl
stos
mov
arpl
dec
pop
mov
xchg
sbb
adc
push
push
adc
insb
aad
inc
adc
and
inc
cmc
pop
add
test
mov
mov
cmpsb
pop
sar
or
push
push
xor
mov
addr16
ret
jo
int
xchg
xor
inc
or
popa
rol
enter
mov
pop
rorb
inc
lds
cmp
addr16
ss
pop
imul
pusha
shlb
xchg
pop
push
sti
dec
pop
fwait
stos
push
xor
add
mov
sarb
sbb
test
jae
out
stc
pop
sub
and
shll
xchg
inc
mov
xchg
js
fdivs
pop
mov
push
rcr
mov
jae
jnp
xchg
shrl
cwtl
push
and
loop
dec
mov
xchg
mov
and
cmp
daa
sti
pop
add
pop
jae
or
mov
leave
and
pusha
and
in
aaa
jb
lds
xor
arpl
jp
and
xchg
mov
cmp
sbb
jo
pop
jns
pushf
sub
xor
cli
ljmp
lods
subb
clc
aas
pop
pop
or
inc
push
xor
inc
lock
nop
aaa
cmp
jb
push
cmp
mov
inc
loope
pop
shlb
push
loop
pop
shlb
dec
pop
test
ss
sub
jae
pop
pop
dec
cmp
pusha
mov
inc
dec
xor
push
mov
mov
add
jbe
pop
mov
xchg
mov
mov
xchg
xor
jecxz
inc
inc
addr16
mov
and
rcl
adc
and
scas
mov
inc
inc
mov
pop
cs
repz
mov
push
shlb
and
lret
loope
sbb
into
mov
push
repnz
hlt
jl
stos
and
cmp
std
fadds
fdivp
cmpb
scas
notb
xchg
cwtl
int
imul
jne
addb
pop
adc
cli
shll
add
movlps
lcall
loope,pn
ret
cmpsb
jae
sub
rcll
out
dec
and
inc
cwtl
dec
jae
mov
xor
adc
cmp
sbb
xor
xchg
jecxz
test
jle
and
imul
xchg
sub
loopne
call
testb
cld
mov
fxch
push
into
jl
sub
jo
cltd
hlt
jl
pusha
lea
add
cld
mov
and
dec
pop
push
adc
jae
xor
scas
scas
lock
sub
stc
into
push
xchg
call
jmp
mov
leave
cmpsl
sbb
xchg
pop
xor
xlat
cmpsb
or
sti
fmul
push
ss
add
xor
push
xor
addr16
adc
stos
jo
jo
xchg
and
mov
xor
and
xchg
push
ss
mov
fimull
push
test
xchg
mov
or
mov
fs
jle
jge
xchg
outsb
out
cmp
outsb
es
sbb
popa
das
cmp
cwtl
mov
pop
imul
fcmove
push
and
xchg
push
daa
loopne
push
into
dec
and
jo
jae
xchg
and
mov
out
xchg
iret
ret
cmp
pop
aas
sub
xchg
push
mov
repz
stos
outsb
idivb
setnp
sbb
pop
shll
xchg
xlat
xor
rolb
sbb
je
fsub
xor
fcoms
pop
jnp
clc
adc
jae
jne
jg
mov
out
and
repnz
sarl
or
mov
adc
jo
out
orl
mov
mov
xor
sub
and
mov
cmp
push
push
adc
and
into
and
mov
sub
xor
icebp
mov
shlb
dec
adc
and
xchg
enter
pop
je
xchg
data16
jp
cmp
cltd
negb
jmp
test
mov
adc
or
in
sbb
sub
push
mov
inc
inc
insb
sub
push
test
pop
xor
ffreep
orps
mov
ds
ds
pusha
mov
push
add
cmp
out
lock
dec
cmp
nop
daa
mov
mov
insb
mov
mov
xchg
aad
cld
ss
dec
int3
jp
insb
and
mov
lock
inc
mov
xor
mov
and
repz
and
add
rorb
arpl
jns
ja
mov
lock
dec
pop
jae
in
and
xchg
push
xor
dec
push
das
push
leave
adc
mov
jle
ds
sub
xchg
jb
mov
pop
or
js
shld
adc
cltd
cmp
and
outsl
insb
clc
imul
dec
xor
jo
xor
ds
and
sub
lret
popf
loop
aas
fstp
dec
cwtl
xor
test
lahf
add
arpl
js
sub
push
mov
mov
mov
je
mov
jg
and
je
test
cmp
mov
out
sbb
lds
loope
pushw
js
stc
mov
icebp
notl
stc
int3
shrb
addr16
div
mov
cmp
adc
and
ret
dec
jmp
jbe
xor
mov
add
mov
adc
adc
pop
faddl
and
push
and
xor
mov
fcom
and
mov
mov
or
and
cmp
push
mov
pop
rol
shll
cmp
ja
iret
lock
pusha
dec
mov
movsb
and
add
fistpl
cmpsl
adc
mov
ret
pop
push
nop
jl
dec
cmpsb
inc
xorb
xor
mov
inc
out
sub
add
push
mov
shlb
loope
push
jo
jbe
je
push
mov
sub
enter
test
jno
or
pop
cmpsl
and
jl
js
cs
adc
scas
push
cld
mov
inc
mov
add
fistl
lret
push
and
add
ljmp
fiaddl
retw
add
mov
and
ret
popf
push
fists
pop
jo
mov
push
lea
xor
testb
pop
mov
pop
mov
cmc
dec
xchg
ja
push
mov
or
mov
xchg
or
popa
imul
dec
jae
imul
imul
sub
xchg
leave
push
aad
xor
adc
les
clc
fdivr
pop
mov
sbb
mov
mov
mov
pushf
or
and
dec
loope
mov
jb
pop
mov
js
sub
data16
jo
or
clc
push
mov
mov
nop
push
icebp
into
jo
jecxz
lods
scas
add
ss
mov
xor
push
mov
mov
mov
xor
xor
negb
xchg
jg
mov
lods
pop
or
or
pop
imul
inc
aaa
inc
js
mov
jge
push
xchg
out
scas
push
aam
push
clc
int3
mov
xchg
pushf
test
lds
fstps
pop
imul
inc
ss
inc
lahf
mov
pop
push
adc
testb
mov
into
sub
and
inc
sbb
sti
movsl
push
into
pop
and
js
push
lea
into
loop
mov
mov
imul
jns
and
adc
mov
dec
mov
or
sbb
mov
popa
insb
inc
mov
imul
outsb
cmpsl
lahf
jbe
ja
mov
les
xchg
push
sub
insb
xor
inc
xchg
fldcw
imul
push
and
cli
mov
mov
mov
das
mov
and
icebp
pop
rcrb
mov
insl
mov
lret
xor
rcrb
xchg
push
mov
scas
xchg
loope
or
mov
data16
mov
mov
xchg
fs
pop
outsl
mov
add
ret
repz
sbb
clc
add
std
scas
mov
jge
push
cmp
loopne
cltd
xchg
flds
das
outsb
fdiv
jp
dec
push
popf
insb
sbb
sar
mov
clc
sub
lea
jns
and
jb
xchg
pop
mov
adc
cmp
and
cmp
mov
insb
inc
adc
sbb
in
push
pusha
jg
ja
mov
test
pusha
dec
push
jg
lea
repz
or
out
and
into
jo
or
jp
jge
sti
and
adc
mov
adc
lret
jo
popl
cmpsl
ret
orl
inc
cmp
xlat
leave
test
dec
testb
std
add
mov
sbbb
mov
xchg
mov
jge
cwtl
push
and
jns
add
imul
std
push
jl
or
mov
inc
and
cltd
shrl
shlb
jbe
xchg
cli
lret
sar
arpl
sub
call
mov
lds
add
imul
inc
insb
sarb
jnp
lock
xchg
jnp
out
les
inc
out
hlt
andb
inc
add
sahf
sbb
or
scas
jle
ss
or
mov
addr16
mov
mov
jge
xchg
sbb
ja
fnstenv
push
sub
pop
inc
fsub
fnstcw
call
into
and
jge
xlat
fs
push
jne
sbb
fiaddl
jnp
loop
add
inc
sub
cmp
lahf
ret
and
lcall
mov
shl
jne
and
ret
and
push
push
test
lods
ret
lds
mov
jle
push
test
sbb
jbe
lods
jae
imul
pop
insb
push
test
sub
sub
mov
xor
push
sub
pop
sbb
ud1
mov
adc
idiv
mov
and
xor
sbb
pop
sub
out
fbstp
jp
std
or
mov
or
sub
je
adc
xchg
nop
sub
cmp
and
pusha
sub
jg
xor
call
xchg
shlb
and
and
pop
xor
adc
test
inc
lcall
movsb
or
subb
jge
pop
outsb
mov
outsl
xor
mov
cld
pmaxsw
inc
inc
xor
repnz
and
mov
and
xor
mov
sti
repnz
popf
jae
imul
jecxz
inc
shll
lock
and
sbb
add
out
movsb
dec
and
or
jbe
iret
leave
add
mov
sbbb
sarl
xchg
fdivrs
imul
lret
gs
stos
addr16
cmp
sub
lods
sbb
push
shrb
aas
xor
pop
mov
mov
push
ds
pop
adc
pop
shr
mov
js
mov
insb
fs
pop
andb
ss
cwtl
sbb
sahf
cmp
test
pop
hlt
xor
xchg
push
dec
adc
xlat
mov
dec
sbb
or
jmp
ss
cmp
mov
shrb
pop
movsb
je
xchg
test
shrl
jno
mov
pop
pop
mov
insb
ljmp
pop
adc
pop
lcall
mov
dec
pop
push
push
cld
and
push
and
bound
in
mov
pop
rcrl
dec
mov
cmc
ret
push
cmc
ds
sbb
mov
jecxz
mov
mov
add
xchg
mov
mov
scas
lret
pusha
cmpb
imul
fidivrs
lret
push
enter
xor
mov
and
insb
or
insb
in
movsl
lods
sbb
shrl
sub
xor
inc
imull
add
js
hlt
push
dec
xchg
mov
test
push
stos
or
cmp
sbb
xchg
scas
xor
mov
mov
and
inc
xchg
std
dec
xchg
ds
jae
jb
call
clc
pop
adc
mov
sub
sub
test
adc
jnp
test
cmc
push
or
add
enter
add
dec
popa
leave
shlb
pop
cli
shlb
mov
imul
mov
fildl
pop
sbb
inc
pop
lcall
pop
call
es
pop
adc
and
cwtl
rorb
cltd
jle
push
sub
jmp
dec
loopne
mov
sti
dec
jp
pop
mov
push
imul
call
inc
sub
pop
adc
enter
mov
cmp
int3
bound
mov
fdivrl
test
sbb
sbb
js
inc
jmp
mov
aad
js
aaa
shll
iret
jbe
fnstsw
inc
cmpsl
mov
and
int3
sub
xchg
sbb
xchg
aas
dec
out
and
xor
xor
add
leave
sub
mov
mov
icebp
jbe
push
andl
lret
push
cmpsl
lret
pop
jg
push
bound
xlat
std
jae
mov
adc
fnstenv
jle
jae
lcall
add
popf
mov
leave
mov
jle
dec
pop
cmpb
adc
cld
data16
mov
or
je
add
mov
jp
xor
in
and
negl
aas
and
or
or
je
cwtl
xchg
aad
lret
jae
ljmp
push
push
fisubrs
push
xchg
mov
mov
xchg
daa
dec
adc
or
cmpl
jmp
pop
and
sbb
mov
fwait
push
in
iret
imul
push
je
adc
imul
push
outsl
sub
cwtl
xchg
mov
add
rclb
mov
push
cltd
adc
ljmp
mov
jo
repnz
int
mov
shll
les
ret
mov
sub
push
out
pop
jno,pt
outsb
pop
xor
hlt
or
ret
push
jns
fnstsw
mov
jae
push
in
dec
pop
imul
pop
movsl
sbb
add
or
or
mov
imul
decb
sub
repz
mov
lods
repz
ret
inc
sbb
mov
sub
xor
dec
pop
stc
cmpsb
xor
rcl
mov
sub
jp
repz
lea
iret
inc
xor
and
mov
jp
rcrl
arpl
push
or
mov
jb
std
or
xchg
push
into
fistpll
xchg
je
inc
and
mov
mov
add
push
movsl
xor
jno
into
cld
nop
cli
or
dec
cwtl
clc
mov
add
sub
push
fcmovu
call
bnd
xchg
cmp
add
jb
cs
bound
xchg
or
iret
sub
mov
xlat
addr16
imul
add
pop
std
insl
adc
aam
add
xor
and
sub
cmpsb
cmp
fdivl
cltd
repnz
pop
repz
lahf
mov
js
int3
cli
fdivrs
jb
mov
adc
into
leave
je
loope
scas
xchg
fcom
jecxz
xor
or
jbe
je
add
loop
xchg
sbb
cmp
adc
lret
mov
xchg
ss
addr16
cmc
cmpsb
xchg
std
pop
cmp
insl
or
push
call
adc
pop
es
or
orl
test
mov
pusha
push
push
andb
sbb
mov
sub
out
pushf
or
adc
loope
cmpl
out
xchg
jmp
sbb
cld
imul
or
mov
int3
pop
cmp
mov
leave
movsb
test
aas
movl
jno
jns
shlb
adc
ds
pop
es
fnstenv
ss
pop
pop
sub
cmc
xor
inc
dec
insb
fdivs
test
push
ja
and
mov
ds
pop
outsb
jno
cmpsb
int3
cltd
inc
jp
dec
push
mov
loope
fs
repnz
xor
in
adc
test
xchg
and
jb,pt
call
push
mov
imul
mov
mov
pusha
or
pop
data16
sbb
movsl
adc
lds
insl
cs
and
fdivrs
mov
cmp
add
adc
outsl
mov
xchg
mov
incl
sub
cmpsb
test
jg
or
jbe
mov
push
lahf
and
xchg
mov
push
or
mov
fdivs
pushf
in
xchg
test
leave
xchg
pop
and
sahf
pop
cmp
lret
in
lret
iret
sub
loope
mull
push
or
xchg
mov
pop
cld
outsl
js
jge
xchg
or
sbb
imul
pop
aaa
push
pop
subb
mov
or
xchg
sbb
or
fstl
into
and
jbe
xchg
pop
xchg
or
shll
loopne
xor
loop
sub
inc
xchg
test
or
adc
mov
push
cmc
cmp
push
out
add
mov
iret
adcl
jns
add
repz
or
lea
ret
out
cwtl
jg
push
mov
movsb
jne
arpl
cmp
ljmp
repz
mov
or
or
dec
fwait
push
sub
and
cwtl
jp
pop
lea
jmp
adc
mov
roll
xchg
fucomi
fistl
add
insl
mov
mov
mov
jo
cld
dec
pop
shrl
sbb
scas
paddb
mov
mov
xlat
incl
inc
pushf
inc
data16
xchg
aad
inc
push
push
loop
fstps
es
into
rclb
ror
iret
sub
fistpl
add
push
and
test
push
sahf
in
sub
or
fs
jne
lds
inc
mov
nop
adc
es
loop
add
out
in
push
cmp
push
je
or
fdivl
insb
les
test
clc
negl
inc
lods
cltd
leave
add
jo
icebp
rorb
inc
movsl
xchg
scas
mov
pusha
cwtl
inc
leave
jno
clc
sarl
jae
stos
aad
mov
push
lods
xor
es
scas
ja
out
sti
sub
popa
sbb
sbb
movsl
push
sub
mov
dec
sahf
mov
or
xlat
shlb
loope
push
add
sub
movsl
ja
sbb
clc
clc
repz
rol
adc
cmp
jl
mov
idiv
jno
inc
aam
jb
mov
add
and
or
sbb
inc
addr16
push
mov
jae
add
mov
sub
mov
push
mov
aaa
dec
mov
push
push
in
xorl
cmpb
xchg
adc
jns
or
xor
lds
push
fnsave
bound
inc
jns
pop
jge
lret
test
test
push
mov
in
sbb
adc
or
pop
rcl
pop
into
iret
jae
sub
int3
ss
xor
sarl
jmp
sahf
subl
iret
xchg
jns
push
jmp
cs
or
daa
dec
mov
out
inc
or
dec
ljmp
dec
jne
imul
and
ja
sbb
cmp
cli
push
and
push
rorb
push
mov
test
mov
scas
je
xchg
mov
cmpsb
ficoms
punpckhbw
push
mov
je
les
rcll
add
mov
xlat
add
jae
jg
in
xor
cmpsl
out
out
sti
xor
shlb
jno
test
iret
movsl
fs
aam
sarb
jmp
icebp
push
push
pop
jb
dec
testb
sbb
lret
mov
pop
stos
int3
jb
jae
mov
lea
js
sub
cmc
fists
push
sbb
adc
mov
jmp
js
ret
cld
adc
adc
rcrb
or
pop
xor
cs
es
mov
mov
ss
push
push
mov
push
sub
gs
pop
outsb
xchg
push
sbb
sahf
imul
mov
add
jae
pop
dec
loopne
jae
leave
stos
add
cmp
out
jp
xchg
lds
pop
mov
and
push
js
mov
stc
in
inc
mov
push
idivb
pop
jae
cmp
mov
addl
sbb
dec
jecxz
push
cmc
xor
sbb
jle
iret
aam
mov
stc
pop
loope
mov
flds
mov
mov
sbb
sahf
pop
push
push
inc
aas
pop
mov
rol
outsb
and
jae
mov
stc
sbb
inc
mov
pop
lret
in
clc
cltd
sbb
jg
mov
pop
mov
pop
adcb
loopne
dec
stc
pusha
jae
dec
call
mov
lahf
xor
iret
pop
jp
add
sbb
ja
ss
adc
lahf
aas
lds
adc
mov
push
lret
int
mov
clc
pop
jbe
or
loope
popa
adc
jecxz
add
jl
outsl
pop
inc
bound
or
shrb
dec
aaa
loope
cmp
lahf
data16
fwait
pop
push
inc
inc
jge
or
adc
pop
or
sub
push
pop
sub
xchg
mov
pop
in
into
inc
nop
jl
inc
repz
sbb
movsb
ss
lock
cmp
mov
insb
sets
mov
adcb
and
lea
addr16
adc
aaa
cli
scas
jae
out
mov
dec
xlat
iret
fcompl
pushf
outsb
and
popl
xor
and
adc
cltd
push
sub
andb
movsl
enter
xor
divb
movsb
aaa
mov
mov
cwtl
clc
xchg
call
add
dec
lock
into
rorb
insb
stc
repz
out
ss
fisttpl
add
movsl
push
mov
xchg
xchg
push
mov
fdivs
stos
adc
sbb
push
add
cmp
cmp
jns
imul
dec
shll
cmc
jno
xchg
jecxz
dec
sbb
cmc
pop
pushf
xor
je
jmp
cmp
fwait
or
sub
jo
jmp
xor
ret
lock
out
push
js
popf
pop
xchg
daa
je
add
xchg
sbb
es
enter
adc
sub
mov
pop
ds
xchg
mov
lcall
or
aad
mul
mov
jne
out
mov
adc
call
in
and
hlt
addb
pusha
movsb
test
cmc
fisttpll
mov
jo
push
pop
sahf
pop
test
pop
and
add
pop
fucomip
mov
push
pop
sarl
jo
negb
sub
sbb
shlb
or
inc
repnz
cmovl
aad
adc
add
xchg
enter
daa
orb
mov
pop
mov
cmp
inc
jp
sub
es
rolb
sub
test
mov
insb
aas
mov
mov
xchg
movsl
pop
or
cmp
mov
lods
pop
mov
jno
es
cmp
popa
xor
ss
pop
rep
adc
dec
repnz
clc
ljmp
call
scas
push
push
in
aam
sbb
scas
xchg
add
mov
or
test
ja
movsl
call
cld
xchg
int
loope
sub
xchg
mov
adc
xchg
aad
cmp
jb
pop
inc
mov
adc
jns
mov
cwtl
add
mov
int3
cmp
mov
cltd
sub
xchg
add
movsl
jl
test
xchg
ja
insb
ja,pn
mov
cwtl
dec
add
and
push
insb
mov
add
out
dec
movsl
and
mov
sbb
imul
push
es
ja
mov
pusha
or
mov
inc
lcall
xchg
pop
xchg
push
xchg
jo
jge
int3
mov
mov
sahf
insb
push
pop
sbb
cwtl
sub
in
out
clc
out
jle
cmp
cmp
push
scas
sbb
pop
repz
dec
jp
mov
js
xor
xchg
ljmp
mov
imul
jecxz
insw
xbegin
movsl
out
test
jle
shll
scas
mov
pop
inc
add
pop
mov
ret
pop
les
lcall
sub
add
aad
gs
xor
mov
imul
pop
addr16
out
xchg
addr16
int
xor
jae
and
push
ljmp
mov
mov
pop
movsl
sahf
movsb
add
cwtl
xchg
movsl
sub
stos
mov
push
cmp
push
jg
jo
cmp
lcall
xor
and
insl
stc
pushl
lea
mov
inc
testb
addb
cmp
pusha
out
dec
iret
xchg
adc
sbb
inc
cltd
mov
jle
dec
push
fldcw
nop
test
pop
push
pop
add
insb
stc
es
lock
mov
and
scas
ljmp
inc
sbb
mov
popf
push
and
push
and
lock
popa
mov
js
iret
jbe
outsb
es
sbb
pop
push
call
dec
pop
mov
push
shlb
mov
inc
pop
xchg
mov
dec
pusha
lret
pop
incb
cmpsb
push
mov
xchg
cli
sbb
outsl
notb
pop
jge
pop
xchg
xchg
daa
fs
mov
xchg
cld
mov
addr16
cli
inc
insl
imul
push
dec
repz
pcmpeqb
inc
xchg
pop
int3
mov
addr16
imulb
jno
fsubs
pop
mov
fwait
neg
jno
cwtl
xchg
nop
mov
test
popa
cmp
mov
pop
jp
outsb
jle
xchg
inc
and
loop
mov
clc
adc
clc
cld
repnz
fstpl
je
shlb
in
inc
cmc
clc
movsb
in
arpl
dec
inc
xchg
fcompl
pop
lods
sub
or
sqrtps
adc
loopne
xor
mov
outsb
sahf
pop
in
in
imul
pop
jge
in
out
cmp
out
sarb
push
push
xor
lods
iret
aad
adc
push
mov
xor
dec
test
pop
add
sub
cli
sub
cmp
sti
es
xor
fimull
outsb
and
in
cmp
jns
clc
adc
mov
cwtl
ljmp
lret
jne
sub
clc
js
js
stos
jno
push
mov
push
cmp
pop
sbb
mov
fnstenv
mov
push
lock
pop
nop
jae
add
adcl
push
rclb
not
adc
insb
mov
adc
push
js
inc
dec
mov
test
and
testb
jmp
test
inc
adc
pop
movsb
pop
push
mov
mov
xor
out
or
xor
dec
inc
push
pop
sti
movsl
or
mov
dec
mov
and
jae
jg
fidivl
js
movl
insb
gs
int
or
popa
mov
mov
cmpsb
lcall
repnz
jp
sub
pop
cmp
pop
xlat
pop
jb
test
lea
addr16
and
and
in
add
or
pop
js
mov
mov
xlat
inc
mov
pop
cli
push
cltd
or
fbstp
adc
aad
aam
mov
sbb
inc
icebp
scas
mov
inc
daa
mov
jge
adc
shll
jb
int3
mov
or
dec
imul
popa
sti
out
shr
loope
sbb
pusha
dec
push
data16
dec
mov
xor
mov
sbb
mov
scas
lods
push
outsl
lahf
jmp
sbb
loopne
gs
jb
fwait
xchg
jns
pop
sub
jae
or
cmp
mov
mov
sub
mov
pop
mov
out
jb
outsl
push
fidivl
xchg
mov
loopne
movsl
push
mov
adc
mov
mov
or
call
dec
cmp
mov
int
in
dec
push
jns
aaa
loope
xlat
dec
pop
popa
adc
sbb
jge
repnz
add
mov
mov
sbb
push
mov
cmp
jns
sbb
dec
out
pop
mov
mov
enter
dec
cmp
adc
push
js
pusha
loope
addr16
cmp
cmp
cmp
popf
out
adc
rol
push
dec
adc
mov
cli
pop
sub
sub
xchg
pop
or
pop
cmp
pusha
xchg
and
insb
cmpsl
mov
sub
shll
cmp
adc
hlt
lds
jg
popf
and
notb
sbb
mov
mov
stos
lret
fsub
mov
popa
and
dec
xchg
call
aam
jmp
nop
xchg
push
lods
jb
mov
push
cwtl
in
pop
sarb
mov
stos
mov
sub
and
mov
sbb
mulb
push
inc
or
jo
and
jo
ljmp
sbb
jo
xchg
mov
sbb
pop
mov
mov
push
or
dec
add
movsb
insb
dec
js
adc
push
xor
push
stos
sub
adc
js
jle
jb
and
mov
jmp
xor
cmp
xlat
pushf
add
cwtl
sbb
push
lods
je
sbb
cwtl
sbb
std
jb
int
and
jle
fldl
xchg
jbe
and
jl
outsl
jecxz
es
sub
and
and
mov
sbb
add
fidivs
popf
adc
movsl
lods
in
hlt
gs
push
xor
add
out
les
addb
cltd
out
cld
bound
and
iret
push
arpl
cld
pop
cwtl
pop
movsl
xor
addr16
mov
jne
or
mov
pop
add
jle
or
xor
cwtl
popa
imul
mov
push
push
inc
stc
sbb
mov
popl
addr16
fbstp
clc
or
dec
ret
xor
cwtl
scas
outsb
mov
xchg
xlat
inc
insb
mov
adc
pop
dec
mov
lea
mov
pushf
cmp
cmp
test
test
mov
adc
into
pop
mov
shrl
gs
cmp
sarb
test
and
pop
push
lahf
dec
lret
and
adc
pop
xorb
pop
mov
adc
daa
jns
sbb
mov
loopne
add
push
outsb
xchg
mov
mov
mov
js
test
jns
pop
mov
push
cwtl
iret
cmpsl
jb
and
loop
jp
sbbb
pusha
lret
loope
xor
stos
inc
sub
in
ret
lods
nop
xor
lahf
adc
out
cs
mov
sbb
adc
pop
pop
dec
lret
mov
jae
jmp
adc
mov
sbbb
ljmp
pushf
ss
shll
sbb
pusha
mov
inc
xchg
mov
mov
lods
stc
popf
test
adc
or
push
cmc
jle
mov
mov
add
movsb
sbb
loop
in
inc
pusha
add
sti
scas
subb
ret
pushf
lods
mov
lcall
mov
mov
flds
out
fdivl
cwtl
test
mov
inc
test
adc
js
dec
bound
jg
mov
in
insl
sbb
inc
in
mov
push
adc
imul
push
insb
testl
pop
xlat
lods
pop
outsb
pusha
and
mov
into
and
out
test
dec
add
popf
call
mov
sub
test
or
mov
mov
js
jl
int
mov
ficoms
pushl
loope
jl
lret
leave
push
jns
ficompl
sbb
fwait
es
lahf
cwtl
leave
mov
mov
sarl
push
lcall
pop
loopne
cmovge
call
adc
or
pop
call
sahf
dec
icebp
and
dec
jle
xor
sub
pop
jnp
jns
xlat
icebp
aam
and
enter
mov
hlt
stos
jo
dec
icebp
inc
dec
xor
js
enter
fxtract
push
loope
xchg
in
ds
insb
push
lods
and
pop
mov
loope
pop
cmpsl
adc
sub
fiadds
int
rcrl
mov
jne
mov
push
movsb
push
and
jns
decl
xor
mov
das
outsb
rcrl
and
mov
fcmovbe
or
dec
mov
fidivrs
jmp
and
cmp
inc
inc
in
inc
adc
adcb
pop
adc
and
xrelease
test
pop
inc
test
daa
and
shl
inc
mov
outsl
clc
outsb
add
lret
ret
arpl
xor
jecxz
fwait
stos
inc
call
adc
test
xor
sub
scas
xchg
xor
ret
xchg
inc
icebp
out
call
and
cmp
lock
pop
frstor
jae
mov
mov
mov
adc
pusha
ds
cltd
outsl
dec
addr16
xlat
lea
mov
sbb
sub
push
sbb
sbb
movsl
js
lret
je
mov
and
adc
add
stos
sahf
je
add
out
or
push
xor
notl
sbb
mov
lds
popa
push
and
pop
cmp
imul
addr16
in
je
push
inc
lods
movsb
xor
ja
fbld
and
xorb
test
ja
sub
mov
test
and
mov
sub
dec
mov
mov
push
popa
sub
pop
js
add
test
mov
outsb
adc
jnp
lock
ja
xlat
mov
lods
xchg
cs
adc
arpl
mov
add
push
sub
mov
xor
xor
mov
jp
push
xor
pop
mov
mov
insl
add
inc
ss
mov
fs
sbb
outsl
fcoml
ja
cmp
push
decb
jae
ret
jns
or
dec
jbe
loope
aad
jp
push
sub
cmp
stos
mov
imul
jle
jne,pt
adc
mov
push
test
fcomps
adc
push
nop
nop
push
lret
jae
ja
adc
test
andl
shlb
adc
add
mov
iret
adcl
popf
ror
or
adc
pop
rol
inc
ljmp
aas
shl
jae
stos
clc
js
leave
lea
push
jp
jl
aam
stos
daa
jle
sti
and
into
mov
push
sbb
notl
jbe
and
push
mov
nop
pop
mov
or
or
mov
rcll
das
pop
mov
sub
lret
imul
cli
adc
scas
cwtl
jbe
sub
lret
sub
nop
mov
scas
jo
jae
imul
jbe
mov
imul
pop
jnp
mov
mov
test
mov
adc
out
into
mov
pop
jo
xor
mov
mov
loope
jb
icebp
sbb
or
inc
and
out
fsubrl
or
cmp
nop
insl
add
mov
fsubl
push
int3
cli
test
xchg
cmpsb
incb
jmp
sub
sbb
xchg
push
iret
add
int3
sbb
xorb
cmpsb
and
adc
fmuls
adc
dec
inc
repnz
sbb
and
jge
or
imulb
sahf
sbb
pop
and
mov
insb
leave
repz
xchg
je
mov
mov
rcpps
ret
sbb
sub
jo
xchg
scas
jl
popa
mov
xor
clc
pop
fsts
iret
lods
mov
lret
jo
cmpsb
iret
cmc
std
stos
cmc
cmp
push
dec
fstps
rcll
outsl
mov
xrelease
jne
ljmp
jmp
jno
sbb
sub
testl
out
push
pop
std
dec
negb
mov
jne
icebp
loope
shl
cmp
push
jb
jl
scas
jae
test
std
xor
push
enter
pop
mov
cwtl
sbb
mov
seto
xor
mov
push
push
dec
ds
insb
pushf
adc
pop
ret
out
adc
add
icebp
inc
aaa
jbe
mov
mov
int
cs
dec
pushl
mov
push
addr16
cmp
sahf
push
mov
cs
or
fcmovnbe
cmp
cmc
push
mov
pop
dec
xchg
mov
add
xchg
fistps
mov
adc
or
fdivrs
shl
jmp
cmpsl
out
in
xchg
fdivl
jo
fwait
xchg
rcrb
xchg
inc
push
call
dec
inc
loope
sub
sbb
cmp
popf
xchg
enterw
mov
hlt
xchg
adc
stc
clc
mov
jecxz
jecxz
loop
add
push
shlb
cwtl
je
jb
xor
shl
sub
ss
sbb
call
mov
or
cli
fwait
imul
sbb
hlt
movsb
stos
jge
mov
mov
dec
or
sbb
pop
loopne
jp
push
fldl
out
mov
test
cli
mov
repz
jo
mov
mov
pusha
inc
sub
dec
pop
xchg
mov
cmp
xchg
aam
xor
hlt
dec
nop
push
mov
lret
aas
sub
out
cmp
jae
mov
add
sub
sbb
xchg
pop
or
out
je
xchg
cmp
mov
sbb
pusha
mov
clc
or
pop
push
sub
adc
rcrb
and
mov
negb
sub
fwait
xor
cmp
jl
xchg
jb
test
mov
repz
jmp
dec
stos
addr16
outsl
xor
lret
popa
mov
push
lahf
sbb
mov
imul
adc
add
jbe
scas
push
mov
dec
mov
push
js
int3
sub
in
sbb
pop
push
lds
js
inc
add
sub
mov
push
jbe
sub
xchg
xchg
mov
pop
fdivr
jno
dec
jb
jp
bound
xor
popa
sub
jae
cmp
mov
mov
add
inc
adc
xor
pushf
mov
pop
xor
xchg
cmp
out
mov
ss
xor
pop
sbb
movsw
fstpl
cli
sti
mov
out
xor
or
sub
jmp
or
and
outsl
stos
sub
adc
lcall
xor
scas
out
adc
mov
mov
jns
subb
shlb
adc
mov
lds
xchg
jo
out
xchg
inc
pop
out
mov
dec
in
jmp
test
dec
frstor
addr16
pushf
lods
mov
sub
les
orps
jl
js
pusha
xorb
jle
icebp
xchg
mov
icebp
inc
cli
call
push
ljmp
xchg
jno
xchg
add
jae
and
pusha
pop
cli
adc
mov
iret
cmp
cltd
aam
pop
and
arpl
lret
dec
mov
xor
cwtl
inc
call
push
mov
lret
clc
xor
pop
popa
and
je
aaa
icebp
fsubrl
sbb
jb
push
add
rcll
mov
adc
in
sub
imul
xchg
cmp
inc
aas
lock
leave
pusha
je
push
dec
pop
out
in
fcompl
xchg
sub
push
stc
std
add
sub
sbb
dec
xchg
pop
push
or
lret
insw
jno
sub
jns
dec
mov
adc
mov
into
pop
jbe
outsb
push
ss
adc
test
sahf
jmp
jle
inc
push
sub
xor
pop
lret
adc
lods
imul
dec
hlt
mov
dec
adc
or
and
test
sbb
lcall
sub
mov
stos
push
in
shld
cltd
out
jne
jmp
movsb
pop
xchg
fldt
sbb
add
es
subl
jne
in
clc
loopne
sbb
pop
jg
jne
mov
or
ret
xorb
lock
xchg
clc
push
xor
cld
ds
sahf
popa
push
and
add
cmp
mov
jne
dec
call
sbb
xor
sbb
hlt
dec
push
fisubl
stos
jno
pusha
andb
jmp
xor
inc
outsb
push
inc
xor
push
mov
aad
out
fs
data16
rcr
inc
xchg
dec
mov
movsb
mov
pop
jnp
roll
inc
adc
cmpsb
add
mov
cmpsb
out
pop
lcall
adc
fisubrl
lods
and
in
mov
fwait
imul
mov
mov
fmull
mov
stc
mov
not
jb
or
and
sti
mov
pop
fsts
lock
ss
inc
movlps
sub
push
dec
subb
dec
test
call
mov
push
pop
jnp
push
leave
clc
int
movsb
aad
pushf
dec
add
mov
sbb
add
out
jl
mov
inc
mov
and
lret
sub
mov
pop
pop
inc
xchg
and
cmpl
jae
inc
inc
mov
sub
leave
pushf
mov
cld
inc
xchg
mov
xor
sbb
out
dec
or
andb
adc
xchg
add
call
jecxz
or
sub
push
notb
adc
dec
ds
mov
dec
fistpl
cld
sahf
pop
add
mov
leave
add
pop
out
push
fdivs
test
lahf
test
mov
clc
mov
fs
pusha
jl
mov
fsubrs
push
mov
mov
test
cmc
mov
leave
fsubs
stos
jle
sbb
btr
push
pop
pop
ss
cmp
inc
cmc
stc
mov
pop
mov
out
rorl
jae
sub
xor
in
pop
nop
into
shl
and
dec
dec
push
iret
and
mov
sub
xchg
fsubrs
adc
arpl
adc
jge
lods
pop
lret
movsl
fwait
jo
jae
ds
push
inc
xchg
add
xchg
mov
imul
incl
push
sub
push
insl
lea
jae
or
pop
cwtl
or
mov
ja
pop
and
sarb
pop
test
hlt
sbb
je
fwait
aam
std
push
mov
cwtl
push
mov
inc
cmc
pushf
lds
push
jnp,pn
and
inc
pop
ret
js
inc
enter
push
sbb
aaa
dec
fcomps
outsb
cmpl
negl
mov
adc
movsb
je
leave
cltd
mov
das
ds
mov
jbe
cmc
fisttps
sbb
jg
xor
loope
cwtl
xor
jae
pop
or
pop
repz
inc
in
lods
pushf
push
xor
push
pushf
pop
sbb
cmpsb
mov
movsl
sub
test
push
lock
in
cmp
inc
test
stc
jg
outsl
iret
fidivs
mov
scas
testb
sbb
cmp
xchg
or
jae
jo
imul
cli
add
jb
add
ljmp
adc
insb
dec
leave
pop
pop
jo
nopl
outsl
xor
stos
repz
inc
xchg
xor
out
repz
xchg
push
ret
cmpsl
xlat
and
jo
pop
mov
adc
jbe
adc
pop
cltd
std
nop
mov
daa
push
xor
sbb
aad
stc
js
imull
adc
dec
std
push
scas
mov
negb
enter
push
cwtl
test
xor
rorl
sbb
test
and
fidivs
test
cs
lds
inc
jns
test
mov
add
iret
rolb
in
lret
out
xchg
inc
add
sbb
dec
ss
add
js
sahf
cli
popa
aam
mov
jp
cmpsb
add
das
call
fidivs
into
pop
adcb
adc
mov
cmpsb
imul
mov
addl
xor
call
add
fwait
mov
adc
popl
cmp
xor
es
lods
dec
mov
xor
fmuls
push
in
jbe
sahf
add
jb
pop
fcompl
bound
mov
sbb
pop
add
add
push
sbb
xchg
adc
leave
int3
cmp
out
sbb
sbb
adc
hlt
test
push
mov
mov
pop
loope
movsb
dec
mov
pop
mov
mov
xchg
mov
mov
cmp
pop
les
clc
xchg
cmp
sarb
lods
fcoml
shr
or
jo
adc
test
test
arpl
lea
xchg
movsb
add
sub
jp
repnz
cmp
push
sbb
negb
jb
loope
jne
ret
movsb
inc
out
jmp
mov
sbb
scas
push
cmp
mov
and
shlb
shrb
push
sbb
in
add
jne
or
jecxz
jge
loopne
dec
xor
sbb
fdivs
rorb
adc
cwtl
mov
das
pop
sbb
adc
mov
inc
mov
fstl
mov
ret
jb
sub
movsb
add
cmp
sbb
push
pushf
jg
ret
call
or
sbb
outsl
add
mov
jg
xor
stos
push
sub
daa
mov
push
aad
push
cmp
lahf
fisubl
xchg
addl
js
dec
sub
inc
pop
addl
js
xchg
pop
xor
sti
sub
clc
popl
fdivp
cmp
daa
test
sbb
sti
xor
sbb
jmp
ljmp
sbb
fldenv
jns
mov
sbb
xchg
mov
movsb
shl
sub
je
add
and
jle
mov
cmc
jl
scas
jae
je
sbb
sbb
push
sahf
sub
out
movsb
cmpb
adcl
jns
xor
push
jo
add
sbb
leave
jb
cmp
mov
ja
pushf
iret
insb
std
mov
cld
in
imul
xor
mov
fwait
mov
imul
dec
leave
sbb
in
xor
js
std
mov
cld
in
or
in
fwait
mov
mov
out
cmp
dec
mov
sub
call
jae
adc
fwait
into
adc
jnp
cmpsl
jge
scas
mov
mov
sar
inc
repz
imul
sahf
mov
stos
and
cmc
cwtl
loope
lods
es
clc
xor
pop
xorb
ret
pusha
hlt
loopw
cbtw
dec
or
xchg
mov
leave
and
xor
int
ljmp
sub
adc
mov
out
sti
ret
out
mov
fsubr
jae
sbb
mov
cli
fldenv
sarl
dec
mov
pop
or
iret
notl
rcrb
out
push
loop
sub
push
lods
lea
in
adc
xor
or
inc
mov
dec
sahf
inc
xchg
shll
rolb
sbb
popa
repnz
loope
push
jns
pop
or
pop
repz
xor
rcrl
movsl
jmp
push
dec
ja
repz
test
fs
cli
pop
cvttps2pi
jb
add
jo
sbb
cmpl
xor
mov
mov
mov
jno
sub
and
xchg
lock
mov
shl
fscale
jns
into
adc
jb
into
fisubrl
dec
cs
jle
push
adc
out
or
std
lods
mov
add
icebp
xor
xchg
jmp
jo
out
lea
enter
fsts
test
nop
dec
ljmp
loopne
mov
mov
dec
mov
hlt
int
jb
clc
subps
in
mov
in
add
les
jno
lods
rcrb
cli
fdivp
cmp
mov
cltd
scas
stos
lahf
icebp
in
cmpsb
push
into
pop
popa
popf
popf
jbe
leave
jae
push
out
jecxz
aam
xor
stc
cwtl
dec
fistps
xchg
and
xchg
add
loop
int3
sbb
insb
push
push
sahf
jb
jo
sub
jb
pusha
sbb
imul
mov
movsl
xchg
imul
test
sbb
ret
and
aad
movsb
pusha
dec
xor
xor
cwtl
imul
mov
fdivs
xor
xor
mov
xor
dec
push
mov
scas
and
iret
add
outsl
rorl
push
imul
movsl
or
cmp
popa
vprotd
jmp
mov
jns
es
repz
dec
daa
cmpsb
adc
andl
mov
jns
sbb
cmp
stos
xchg
xchg
call
ficompl
fcoms
sbb
pop
xchg
add
jbe
js
aaa
and
mov
je
xor
fcmovb
test
xchg
nop
cmpsb
ss
jmp
test
jmp
gs
cmc
test
lea
jae
aas
cltd
mov
jno
in
jbe
ds
pop
mov
mov
ficomps
sbb
arpl
sub
fiadds
dec
imul
xchg
out
push
inc
mov
fcompp
test
mov
mov
insb
and
std
mov
scas
jae
xchg
aas
cmp
loop
mov
cmpsb
push
adc
jle
mov
push
addr16
pmaxub
mov
in
into
xor
cmc
cmpsl
pop
stc
adc
fdivrs
rorl
lahf
dec
cwtl
and
sub
mov
call
lcall
out
cmp
into
jmp
sub
pause
mov
imul
xchg
jae
insb
cmc
mov
cmp
lret
cwtl
cmp
jae
test
or
xor
jp
jae
jns
cmc
imul
outsb
or
and
jo
xor
lahf
and
ds
clc
in
sub
cmp
mov
stc
sub
sbb
cwtl
mov
sbb
jae
loopne
adcb
pushf
shll
cltd
jns
inc
push
popa
outsb
mov
mov
sub
sbb
xchg
lret
cmpsb
das
xlat
pop
xor
ljmp
cli
pusha
inc
dec
js
cwtl
sub
jae
iret
xor
ss
jecxz
adc
test
mov
outsl
scas
mov
mov
int
movsl
mov
add
inc
lret
push
mov
pop
jns
push
mov
cmp
inc
jp
adc
add
sub
inc
inc
sbb
dec
push
loop
jne
iret
ficomps
sbb
cmc
pop
test
jns
jle
cmp
cmp
shrl
aaa
dec
push
adc
cmp
xlat
xor
aas
and
insb
xchg
dec
mov
xchg
cltd
adc
xchg
mov
push
sahf
mov
adc
mov
adc
repz
sti
jo
loopne
push
or
cmp
jns
mov
sbb
pop
nop
insl
mov
add
and
inc
cmp
jle
mov
popa
sub
stos
jp
adc
fnstsw
sarl
in
outsb
jl
gs
stc
mov
ljmp
inc
sbb
sti
js
aad
xchg
pop
idivl
lods
push
in
inc
sbbb
hlt
mov
mov
mov
jbe
addr16
and
jecxz
and
into
movsb
stos
xor
push
mov
sbb
cmp
inc
xor
mov
imul
icebp
cwtl
xchg
popa
sbb
test
dec
lcall
sbb
leave
in
push
pop
rorl
inc
subb
es
adc
xor
sbb
dec
add
cwtl
inc
pmulhw
xchg
imulb
jg
inc
dec
adc
insl
xor
fisubs
out
or
into
ficoms
xchg
aad
and
adc
sti
lock
jl
jns
cmp
cmp
bnd
out
test
das
addr16
fcoms
push
pop
pop
stos
ja
mov
test
adc
mov
mov
dec
je
mov
jle
adc
inc
and
repz
rcll
sub
test
add
ljmp
add
call
sub
mov
enter
jp
insl
pusha
lret
xchg
and
in
xchg
aas
bound
aad
ficomps
pop
push
mov
pop
adc
popa
cmpsl
jecxz
add
dec
pusha
xor
jge
add
repz
incb
shll
and
repnz
dec
std
or
sub
or
cmp
xor
jns
mull
and
mov
bound
xor
jnp
andb
push
in
inc
icebp
scas
push
jecxz
dec
out
or
pop
push
decl
lock
repz
fmuls
out
sbb
stc
negb
nop
loope
inc
shll
inc
push
adc
jle
shrb
add
push
mov
loope
push
cmp
mov
dec
inc
ficoms
and
sbb
mov
pop
xchg
fidivrl
shll
fadds
xchg
jge
insl
lock
adc
cmc
xchg
in
inc
jp
or
sbb
mov
fidivrs
inc
sbb
adc
lock
and
js
outsl
mov
dec
lahf
mov
pop
mov
insb
jae
das
sbb
adc
inc
push
sbb
mov
jmp
imulb
cld
fmul
movsb
pusha
insb
mov
and
in
pop
fiadds
mov
mov
inc
pusha
std
fidivrs
push
pop
adc
jo
repnz
lods
dec
pop
or
scas
outsl
out
fnstcw
adc
sti
dec
cltd
cmp
xchg
cwtl
pop
mov
jne
and
ja
pop
adc
mov
iret
xor
jbe
xchg
pop
add
mov
cmp
jo
popl
imul
loope
in
repz
in
jp
mov
push
cmp
mov
pop
int3
shrb
stc
lock
mov
imul
or
sahf
push
dec
ljmp
stos
jo
cmpsb
orb
dec
and
sarl
lea
xor
xchg
cmp
test
cmpsl
push
pop
push
fcoms
mov
js
cmp
jle
pop
fs
pop
adc
adcl
push
add
inc
pop
ljmp
data16
pop
sbb
pop
stc
sbb
stos
andl
scas
inc
not
ret
aam
popf
mov
movsl
fwait
jns
ret
pop
popa
sti
sbb
xor
or
je
in
push
int3
movsb
adc
push
cwtl
adc
mov
pop
push
ficompl
nop
in
clc
cmpsl
dec
jo
cmc
mov
pop
xor
or
jbe
jg
cli
jo
dec
push
pop
push
pop
mov
out
xor
pop
jae
pop
push
es
adc
test
pop
and
mov
push
in
popf
add
mov
lcall
icebp
test
xorl
inc
outsl
cmpsb
cs
xchg
lock
test
pop
incl
lahf
fnstcw
fsubs
mov
test
inc
call
shrb
jbe
adc
xchg
pop
js
in
jae
into
insb
inc
sbb
popf
xor
cli
fucomi
lock
loop
int3
adc
adc
add
sub
cmc
int3
mov
mov
addr16
sbb
cmovge
jae
imul
adc
and
pop
pop
lock
or
roll
subb
mov
in
fdivl
js
mov
negl
subl
je
pusha
loope
or
das
push
int
dec
test
mov
std
and
sti
and
cwtl
jle
inc
scas
mov
add
xchg
pop
lcall
repz
sarb
call
nop
jo
jle
clc
and
scas
insb
adc
push
call
fadds
sbb
mov
lds
and
gs
cwtl
pop
sub
jnp
xchg
jp
xor
mov
ljmp
test
shrl
lock
adc
dec
push
mov
push
rcrb
add
push
cmp
fidivs
stc
daa
dec
je
test
mov
daa
lock
scas
pop
rorl
es
fcoms
fdivrl
mov
mov
mov
pusha
push
pusha
lods
mov
test
cmp
sub
push
adc
test
repz
push
push
jae
jo,pn
cmp
or
sahf
cmpsb
mov
jnp
jne
jns
xchg
mov
cmp
aas
and
jae
mov
mov
jns
jbe
xor
daa
and
ja
stos
xchg
push
jl
popf
cmp
popa
aaa
cmpsl
pop
add
mul
pop
outsl
arpl
sbbb
cmpsl
pushf
add
sbb
adc
xchg
shl
inc
jne
mov
nop
sahf
sbb
inc
cmpsl
cwtl
or
out
pop
adc
dec
pop
imul
pop
movsb
lcall
or
push
inc
sbb
nop
cwtl
or
mov
xor
sub
outsl
mov
add
adc
inc
sub
bound
test
shll
mov
sti
sub
inc
rcrl
adc
mov
mov
xchg
iret
cmc
es
xlat
fsubrp
icebp
sbb
jl
or
popf
es
loopne
inc
cwtl
cltd
imul
addb
ret
pop
imul
pop
pop
cmp
incl
cmc
push
pushf
and
add
mov
loope
xor
inc
adc
jle
xor
pop
loope
push
js
add
ficomps
xchg
insb
xchg
add
push
jle
inc
int3
lret
mov
js
out
dec
dec
imul
insb
pusha
out
aaa
xchg
adc
ljmp
bound
sahf
sbb
add
inc
mov
insb
lock
adcb
xchg
mov
mov
xchg
or
clc
scas
ja
mov
mov
bound
cmp
sbb
movsl
repz
sub
cmp
mov
loope
add
sbb
call
test
push
push
mov
jg
fstps
loopne
sbb
mov
std
add
pop
ds
pop
jl
repnz
addl
sbb
adc
mov
inc
xchg
fldt
ret
dec
es
and
rorl
cmp
gs
jmp
push
mov
arpl
push
or
dec
in
sbb
jae
mov
pusha
lcall
pop
aad
jbe
pop
inc
adc
and
test
int
sbb
bound
xor
cmpsl
aad
xor
sahf
and
add
rcrb
xchg
lock
xor
mov
shlb
negb
ss
ficomps
shrb
popl
sub
je
sub
hlt
inc
inc
jge
mov
xchg
rcrl
jae
adc
push
xor
jo
je
jno
jo
int3
push
loop
loope
jge
jno
jns
mov
ret
and
inc
xchg
fdivs
imul
int
dec
scas
or
pop
mov
push
test
pushf
fcompl
mov
jle
xor
aas
push
fs
scas
push
xchg
cmp
sub
mov
xchg
je
pop
jbe
sbb
rorb
adc
mov
shrb
jne
in
or
aad
sbb
pop
cmpsb
sub
cs
mov
or
jg
mov
add
scas
or
clc
sti
out
les
jge
mov
mov
adc
test
insb
push
push
sbb
gs
xor
dec
pop
adc
lret
fsts
sbb
lret
mov
out
and
cld
mov
insl
sub
mov
mov
pop
sub
or
jo
sbb
bound
mov
sub
sti
xor
jo
sub
es
out
test
icebp
popf
test
jns
lock
xor
pop
out
cs
pop
call
xchg
mov
in
cltd
jo
mov
jo
jns
cmpsb
fwait
adc
lea
lret
jnp
inc
pop
xchg
xor
clc
xchg
xchg
push
icebp
int3
popa
stc
sbb
jmp
add
add
mov
jae
das
push
rcll
cltd
sahf
lock
lret
pop
jle
popa
jmp
pushf
inc
pop
mov
scas
call
add
imul
adc
push
push
xchg
inc
jo
or
test
iret
jmp
enter
xor
and
pop
jno
mov
daa
add
mov
jle
cwtl
adc
jae
int3
jle
sbb
inc
mov
cmc
aaa
lret
pop
sub
cltd
das
inc
scas
xchg
pop
add
aam
lds
inc
cmpsb
fistpll
fdivr
outsb
cli
mov
jg
test
jno
mov
xor
cmc
inc
adc
jg
data16
mov
pushf
test
ret
sub
cmp
addr16
scas
jae
sbb
xchg
jo
pop
inc
pop
push
sbb
fcompl
in
xchg
aad
sub
pushf
xchg
daa
add
xlat
in
clc
das
jno
in
dec
sub
dec
stos
outsb
mov
scas
push
ja
ljmp
in
mov
sub
or
jl
stos
inc
and
shrl
cmp
andb
loopne
notb
jl
and
inc
fcoms
sub
insb
xchg
lret
xchg
push
mov
jns
repnz
mov
xchg
sahf
pop
dec
sub
test
dec
mov
aam
rcrl
fldl
inc
popa
mov
out
mov
insb
icebp
loopne
test
sub
out
mov
and
imul
andl
adc
test
mov
leave
mov
jnp
stc
pop
push
ja
iret
clc
bound
push
adc
mov
cwtl
in
iret
inc
clc
popf
sbb
xchg
shll
xchg
stos
pop
or
inc
cwtl
mov
xchg
and
sub
jns
out
fcomi
sbb
xchg
imul
cwtl
adc
mov
mov
mov
and
adc
pop
rcrl
movsb
xor
fbld
ficompl
jno
or
scas
mov
inc
sub
jnp
sahf
call
ret
frstor
loope
pop
sarb
pop
mov
adc
enter
scas
ficoms
ss
sub
das
mov
out
add
leave
add
addr16
mov
pop
mov
adc
mov
xchg
call
push
or
mov
sub
mov
enter
and
imul
pop
pushf
enter
push
push
divb
dec
mov
push
shl
loope
mov
std
or
stc
adc
xchg
loope
hlt
shll
ds
cmp
jl
jmp
sub
jecxz
test
adc
cltd
adc
lret
shlb
and
in
fistpl
xchg
jg
push
xchg
es
popa
inc
and
inc
mov
inc
xchg
push
push
push
mov
ret
add
test
mov
orb
xchg
pop
fprem1
jge
xchg
push
add
inc
testb
rorl
test
fstl
cmp
xchg
cwtl
xor
jmp
or
xchg
lods
cs
rcll
mov
lea
adc
iret
cwtl
adc
inc
ja
subb
outsl
pusha
icebp
cmpl
out
mov
pusha
and
in
daa
add
and
insb
nop
jae
aaa
pop
aam
xor
jge
push
or
fwait
outsl
and
punpcklwd
fiadds
sub
aas
push
test
popa
cwtl
cli
push
clts
loop
popl
mov
mull
fisubrs
ds
fs
enter
mov
sub
push
gs
lcall
or
je
adc
pop
inc
sbb
sbb
pop
add
adc
cmpsb
adc
mov
testl
rcrb
pop
out
sahf
add
add
xchg
jo
icebp
out
ret
pop
jns
mov
mov
push
stc
or
pop
jns
call
mov
and
and
sbb
ret
jno
jmp
inc
push
rep
pop
rol
or
xor
push
cli
add
outsl
adc
mov
jo
mov
jge
test
sub
cmp
pop
adc
add
jo
add
and
loope
scas
icebp
push
aaa
push
push
nop
je
and
js
daa
jle
push
pusha
xchg
sbb
push
fistl
popa
hlt
mov
insl
ret
mov
lods
imul
push
adc
push
ljmp
ss
aam
ret
fadds
lret
and
ljmp
movsb
sti
js
scas
cld
cli
in
add
push
jno
mov
icebp
imul
cli
jecxz
mov
iret
lahf
push
int3
pop
pop
stos
add
fwait
inc
adcb
test
popl
iret
mov
cmpsb
into
xchg
int3
or
inc
lock
pop
cwtl
sub
xchg
cmp
xor
mov
push
push
push
gs
roll
xchg
jmp
sahf
pop
mov
sbb
je
rcrb
mov
mov
mov
mov
mov
call
mov
and
mov
in
adc
mov
and
repz
test
fstl
ret
mov
js
clc
xchg
iret
push
jecxz
xchg
fs
std
or
pushf
dec
jae
leave
vmread
sub
add
or
sbb
insl
in
cmpsb
pop
outsb
mov
push
enter
dec
jl
shll
int
xchg
cmp
fiadds
lea
aad
mov
jo
je
test
cltd
fdivl
inc
pop
stc
add
fbstp
ds
and
cmp
cmpsl
push
nop
adc
lcall
and
jle
or
sub
lock
inc
lcall
stos
das
lock
sarl
cmp
cmp
push
sbb
mov
mov
jae
fld
ret
mov
xor
adc
sbb
in
lock
mov
jb
subb
test
push
lcall
mov
xchg
test
sub
inc
cmc
clc
popf
push
sub
rcrb
add
xor
mov
sub
mov
pop
fsubs
xor
ror
loope
in
aad
sub
dec
pop
jp
rorb
fpatan
sub
push
push
and
std
mov
add
ret
popa
xchg
loope
xor
xchg
jns
fcompl
leave
imul
dec
xor
cmp
push
lods
subl
into
xchg
mov
jo
shlb
arpl
jge
addr16
pushf
cmp
sbb
add
push
arpl
out
sub
xchg
xchg
jae
pop
out
mov
data16
xchg
stc
les
xor
adc
pop
ret
in
sar
shrl
mov
and
jne
push
and
inc
jb
sarb
fwait
xlat
test
cmp
popa
mov
pop
pop
pop
imul
sbb
fmuls
push
lods
adc
enter
jge
pop
cmc
xor
mov
jb
and
adc
jo
dec
sarb
cmp
push
xchg
adc
dec
fidivs
jb
pop
push
mov
or
mov
push
pop
dec
sub
movsb
inc
cli
adc
test
or
js
je
or
xchg
cmp
mov
ja
shl
adc
cmp
inc
rcll
int3
stos
in
enter
sub
cmpsl
add
je
xchg
jne
mov
inc
jg
cmpsb
outsl
adc
ljmp
mov
xchg
ret
mov
jns
fisubs
clc
and
mov
insl
cltd
jno
dec
sbb
push
in
jmp
ds
xor
dec
lds
not
mov
dec
mov
or
mov
jle
daa
mov
scas
push
popa
xor
int3
adc
xchg
lcall
rcrb
fmuls
mov
xor
push
lcall
xor
dec
push
cmp
adc
and
sbb
clc
pop
adc
das
outsb
push
stos
daa
cmpsb
pop
cs
jg
xor
es
insb
divb
adc
mov
mov
fnstenv
rclb
mov
jp
add
jmp
mov
es
jo
imul
add
fmul
in
lods
add
lods
or
jo
fisubs
jnp
cmp
sbb
shrl
shlb
xlat
mov
xchg
or
pop
inc
mov
cmpsb
lea
lods
mov
mov
leave
pop
movsb
enter
scas
out
sub
pusha
ja
mov
loopne
xor
out
pusha
lds
mov
int3
hlt
repz
jne
mov
ja
lret
mov
xchg
push
jbe
loopne
sbb
inc
and
pusha
popl
mov
cld
or
fwait
sti
add
scas
out
mov
and
addl
mov
sub
fisubl
mov
in
cwtl
dec
mov
inc
cltd
jae
push
push
sbb
clc
sti
mov
aad
pop
jb
pushf
mov
popf
in
leave
push
jns
enter
ret
jae
ficompl
bound
jb
adc
mov
sarb
mov
popa
jae
clc
push
daa
dec
jp
or
add
mov
add
jae
add
pop
and
out
cmp
loopne
dec
push
pop
scas
sub
xor
sbb
cmp
sub
cmpsb
cmp
dec
popa
imul
jle
add
sub
sbb
cmp
cmp
ret
xlat
dec
mov
ret
pop
jae
pop
ret
testb
out
mov
add
sub
mov
lods
aam
add
adc
fwait
or
sbb
sbb
out
push
pusha
mov
push
pop
vmread
xor
sub
cmp
xchg
xor
subb
jmp
sub
lods
cmp
or
xchg
inc
push
mov
cld
repz
add
mov
add
adc
fisttpll
sbb
sahf
shlb
xor
push
mov
mov
push
mov
mov
test
xor
cmpsl
mov
movsl
iret
adc
test
cwtl
ss
push
ds
or
and
shl
jmp
test
call
sub
jo
clc
pop
addr16
fsubs
jecxz
add
pusha
jge
xor
cmp
mov
push
scas
dec
test
popf
pop
neg
pusha
shrl
xor
inc
jecxz
inc
data16
mov
rep
inc
inc
test
lods
stc
testl
sub
sub
cmp
mov
jno
cwtl
dec
and
cmpl
loope
jmp
inc
repnz
in
idivl
js
inc
sub
outsb
cltd
or
test
stc
jg
insb
push
ss
xlat
js
cltd
lock
mov
sahf
call
jb
dec
cmpsl
adc
xor
xorb
imul
fidivrl
mov
jp
push
and
xchg
fisubl
sbb
xchg
inc
mov
in
adc
jne
test
pusha
imul
mov
sarb
xor
pusha
sarl
out
push
mov
pop
jp
ret
cltd
mov
pop
jle,pt
out
stc
mov
addl
arpl
xchg
jg
mov
add
pop
addr16
inc
xor
sbb
call
ja
mov
xchg
mov
shlb
lcall
andb
mov
insb
stos
xlat
jo
dec
inc
lods
mov
mov
dec
sub
push
movsb
movsb
sbb
pop
int
jl
jmp
mov
pop
jns
adc
stos
fsubrs
add
jae
push
mov
and
call
fimuls
add
xchg
push
insl
or
dec
out
jmp
mov
adc
mov
adc
bound
push
call
ds
xor
push
cmp
xor
cmpsb
jae
xchg
sub
dec
sub
mov
frstor
sub
mov
pop
push
int3
call
inc
std
clc
dec
adc
and
sub
into
sbb
idivl
clc
sahf
mov
int
pop
adc
dec
stos
imul
pop
push
cwtl
aas
xchg
cli
in
mov
test
in
shll
push
movsb
inc
push
ljmp
out
cli
cmp
scas
outsb
mov
das
cmp
outsb
out
jbe
popf
jns
icebp
sub
ret
insb
push
fwait
push
mov
xor
dec
mov
shrl
push
lds
sbb
test
xor
adc
rep
mov
xor
lds
ljmp
pusha
lods
nop
push
dec
inc
xchg
nop
and
jle
arpl
in
insb
and
js
push
mov
mov
or
int
dec
test
dec
je
fsubrs
shrl
jo
dec
addr16
inc
scas
into
jmp
scas
clc
dec
push
shlb
or
jl
and
test
test
sahf
cmp
pushl
mov
movsb
ss
jae
scas
pop
les
mov
nop
aam
ffreep
lods
pop
call
hlt
jbe
mov
xchg
mov
mov
pop
mov
xor
mov
push
ret
add
es
adc
push
repz
cmp
fcompl
adc
inc
outsb
push
adc
insl
test
push
movsb
sub
ljmp
pop
aad
movsb
or
add
cmc
adc
out
mov
and
push
xlat
sub
pop
and
push
xchg
cmc
dec
popa
ds
mov
xor
sbb
popa
xchg
push
lret
shll
negb
sbb
add
xchg
jle
std
das
push
shrl
adc
sub
dec
mov
sub
ja
xor
cmpsb
int
xchg
aas
mov
lock
nop
mov
call
cmp
out
ljmp
pop
push
mov
mov
fwait
js
jbe
push
imul
cmpsb
pop
xchg
fcomps
jg,pt
scas
jno
call
cmpsb
mov
je
ss
push
rorl
daa
je
or
cmp
aam
into
das
call
add
loope
in
jge
jl
imul
jp
stos
jge
sub
scas
mov
or
inc
les
mov
loopne
pop
sub
mov
test
or
movsl
sbb
mov
sub
adc
jno
push
pop
xchg
or
sub
insl
notb
push
adc
jns
mov
pop
jbe
ja
out
mov
mov
cmp
pop
pop
mov
sbb
jne
jl
cmp
pop
mov
sub
fcom
ret
sbb
test
fidivrs
pop
adcl
cwtl
fcoms
jg
and
jbe
rorb
mov
ja
push
mov
popl
outsl
push
clc
dec
add
mov
imul
fs
fs
jp
jno
push
mov
sahf
push
mov
aad
out
ds
leave
push
xor
or
inc
sahf
clc
jmp
jmp
xchg
movsb
test
push
popf
push
sbb
push
jno
sar
fs
fcomps
sbb
jo
ret
xchg
sub
jae
mov
jo
jg
xchg
or
aas
adc
cli
mov
pop
into
data16
sub
mov
dec
lods
sahf
mov
jmp
pop
or
int
jbe
int3
mov
mov
test
add
xchg
call
ffreep
mov
aaa
mov
jae
stos
ret
int
jg
insb
sarb
pop
insb
push
jmp
add
lods
cli
adc
xor
movsl
push
ss
cmp
sub
adc
test
jae
cmc
cld
movsb
cltd
cmpsb
mov
pop
shlb
adc
adc
jge
push
aaa
mov
addr16
adc
data16
gs
pop
cmpl
cwtl
sbb
nop
jb
out
xor
orb
jbe
notb
mov
inc
cs
push
jae
das
and
lods
imul
jae
pop
insb
mov
push
shrl
jp
negl
mov
iret
inc
push
ds
mov
or
mov
or
and
dec
sti
scas
cmp
xor
sbb
cmp
out
xor
add
stos
adc
cmp
cwtl
cmpsb
jae
lcall
cmp
adc
je
ja
and
fcom
loope
xor
orb
jns
jo
sti
iret
adc
cmp
clc
xchg
lock
adcl
test
xorb
flds
xor
inc
xchg
cwtl
inc
cld
pop
inc
orl
outsl
cli
xchg
or
mov
popa
stos
clc
adc
fimuls
stos
or
fdiv
xlat
outsb
and
jle
test
cs
stos
xchg
xchg
std
push
shll
mov
cmp
ja
xor
sub
push
js
in
ja
fiaddl
std
and
adc
jmp
xchg
push
shlb
jns
imul
mov
pop
adc
mov
das
mov
clc
push
inc
cmp
push
aad
jb
sub
jae
jns
inc
test
push
ljmp
mov
out
pop
jge
pop
loopne
inc
outsb
scas
fcomps
sbb
in
mov
loopne
adc
or
mov
push
mov
sti
stos
rclb
cwtl
rol
pop
pop
sbb
adc
push
jl
pop
pop
sub
inc
jo
mov
jg
dec
lock
mov
cmp
into
ret
mov
push
mov
cld
jno
mov
testb
je
faddl
mov
mov
pop
out
push
sub
and
mov
pop
les
cmp
orl
push
sub
ret
arpl
lock
sbb
inc
mov
call
lret
sbb
ret
icebp
shrl
aaa
cmp
loope
pop
xchg
jnp
nop
mov
cs
mov
push
cs
out
sub
xor
sub
mov
lea
cmp
adc
out
fcomp
inc
pop
sbb
loope
sub
xor
lret
xchg
in
push
test
push
dec
das
xchg
xchg
xchg
jb,pn
and
xor
arpl
fnsave
mov
push
imul
xor
scas
insb
and
inc
fcoms
fisubs
cmpsl
das
and
dec
xchg
insb
add
fsubrs
shl
xlat
sar
sahf
popa
xor
pop
jp
cltd
in
mov
add
ljmp
jmp
fwait
cwtl
sbb
test
test
scas
jae
outsb
fs
mov
hlt
sahf
jo,pn
movsb
cmp
inc
mov
repz
xlat
nop
add
imul
nop
lock
and
mov
mov
and
push
sbb
jp
jbe
mov
out
jae
xor
sbb
mov
cltd
add
cltd
mov
clc
xchg
adc
push
add
inc
int3
aaa
adc
adc
lahf
add
cwtl
dec
xchg
jge
movsw
and
mov
imul
ss
mov
pop
or
in
mov
rcll
inc
sarb
jle
pop
ret
xor
sub
or
cli
jl
dec
test
cmp
inc
mov
cmp
adc
add
repz
out
jbe
jl
mov
and
xor
adcb
rcrl
dec
push
add
jb
scas
test
pop
xor
jle
cmp
idivl
in
jmp
daa
das
movsl
xchg
jle
inc
test
sub
arpl
js
push
mov
add
arpl
insl
int
sbb
inc
data16
xorb
out
dec
push
test
adc
cmp
cwtl
pop
insl
mov
jns
push
dec
jo
sbb
push
mov
adcb
popa
jmp
jp
rcrl
cmp
adc
or
mov
icebp
mov
xor
movsb
pop
cmp
or
sbb
mov
sub
out
mov
daa
mov
jae
sub
sub
pushw
jo
mov
lahf
enter
ds
xchg
cmp
mov
sub
icebp
into
movb
cmp
push
adc
mov
into
mov
repnz
aad
mov
xor
dec
iret
xor
jp
push
inc
jle
fimuls
cmp
fidivl
fidivl
mov
mov
add
inc
adc
cmp
into
in
mov
aaa
cmp
dec
add
sbb
dec
mov
loopne
pop
jmp
or
cltd
or
mov
cmc
fisttpll
and
sbb
mov
cmc
jecxz
dec
fmuls
adc
and
push
sbb
pop
and
jne
push
andb
mov
sub
mov
jae
jne
adc
inc
std
idivb
adc
dec
sbb
cld
inc
add
pop
outsb
testl
or
mov
sbb
jae
or
xor
cmc
pop
cmp
mov
ret
pusha
repz
add
or
insb
mov
adc
push
mov
xor
sbb
mov
cmp
lods
xchg
sub
mov
mov
jle
xchg
inc
adc
movsb
mov
rolb
faddl
dec
scas
mov
mov
ret
push
xor
enter
xchg
cs
mov
sub
dec
je
dec
jle
xchg
mov
xor
mov
push
and
aad
push
push
jecxz,pn
pop
push
dec
adcl
mov
or
and
jp
xor
xor
in
pusha
dec
mov
sub
pop
int
mov
mov
adc
aam
les
mov
add
pop
in
lcall
mov
imul
dec
mov
sub
push
cmp
pusha
les
or
xchg
rol
inc
push
inc
sub
jecxz
dec
adc
dec
or
pushf
shlb
shlb
out
xor
or
js
sbb
dec
cwtl
ds
cmp
dec
pop
sbb
push
in
movsb
js
ss
outsb
cmpb
pop
xchg
call
pop
jg
xchg
aas
add
adc
ljmp
out
or
lea
pop
mov
pop
call
or
cwtl
dec
aaa
stc
mov
push
adc
in
or
scas
xchg
les
push
cwtl
xchg
aam
pop
xor
in
add
pop
jp
push
push
sbb
pop
fistpll
sub
das
jno
cmpsb
mov
cltd
in
test
stc
push
xchg
jb
lods
or
mov
jo
insl
jno
sub
test
pop
imul
pop
in
popa
inc
mov
inc
push
jbe
insb
bound
and
push
out
push
push
dec
test
ret
mov
imul
push
sbb
cmp
lea
add
clc
or
imul
inc
pop
xchg
cs
ret
jmp
mov
in
fcomps
push
adc
sahf
push
js
jmp
movsl
inc
fdiv
adc
push
mov
mov
cmp
stos
mov
pop
je
nop
dec
and
jae
jg
push
xor
sub
pop
xor
fwait
sbb
jle
cs
ret
cwtl
movsb
inc
fstl
mov
frstor
push
insb
hlt
cmc
pop
cmp
cs
mov
xchg
cld
scas
xor
inc
push
xchg
jge
mov
pop
aaa
fxch
outsb
movsb
pop
stos
cmp
out
mov
jle
inc
pop
xchg
xchg
mov
and
mov
popa
jp
jg,pn
popa
push
adc
in
mov
jne
stc
sahf
mov
inc
ud0
cs
and
dec
repnz
sbb
push
lret
nop
jg
icebp
sub
ds
mov
ss
rcrb
in
xchg
mov
lahf
fwait
mov
stos
sbb
or
jnp
or
mov
mov
rcrl
sub
mov
test
insb
fcomps
cmp
data16
sub
xor
jmp
fldl
pusha
cmc
pop
xchg
inc
sbb
pop
cmp
or
sub
sub
js
and
loopne
in
js
sbb
lods
xchg
cmp
adc
negl
sbb
daa
ret
pushf
xchg
inc
pop
add
sub
dec
je
out
push
jo
push
pop
shr
mov
pop
xchg
mov
add
aas
loopne
fwait
adc
xchg
inc
sub
dec
sub
pop
jns,pt
stos
jo
fiadds
ljmp
xor
aaa
jle
xchg
push
sbb
fistl
cmp
jb
js
aam
insb
popf
neg
mov
je
cltd
xchg
inc
gs
or
jl
cmc
dec
bswap
mov
mov
mov
xor
mov
jle
sbb
popf
int3
test
push
and
jbe
hlt
imul
xor
xor
push
sub
pop
inc
and
jmp
mov
loope
pop
shl
jge
add
xor
mov
gs
mov
clc
lods
push
xor
and
loopne
inc
cli
jle
faddl
push
mov
sub
inc
or
push
pop
jmp
jecxz
jmp
roll
mov
test
xchg
int3
fisubs
jp
sbb
push
cmpsb
pop
jle
push
xchg
mov
lret
jmp
inc
loope
sbb
xchg
andl
fidivl
mov
jno
mov
mov
pop
hlt
stos
dec
sbb
fdivs
mov
push
xor
inc
push
jae
add
loopne
addr16
jmp
je
cmc
jae
sub
sub
sub
lret
aad
mov
or
xor
hlt
cltd
xchg
push
scas
add
pop
iret
sbb
insl
arpl
inc
lahf
jbe
mov
sbb
test
lcall
call
xor
imul
adc
sbb
loopne
sbb
and
stos
xchg
jbe
adc
pusha
inc
mov
mov
inc
fisttps
xchg
in
enter
inc
mov
sub
subl
ja
test
jle
sub
cs
fnstenv
ljmp
jmp
mov
pop
cmc
push
pop
adc
js
in
xchg
inc
push
or
cmp
add
xchg
sbb
enter
sbb
stos
or
lret
xchg
jg
jg
and
mov
popa
scas
mov
ss
sarl
pop
cwtl
outsl
out
fisttps
sub
outsb
pop
sbb
or
adc
cltd
jbe
bound
mov
jno
xchg
sub
pop
lods
pop
mov
loope
mov
jno
pusha
sti
cmp
cli
mov
lret
and
mov
mov
mov
mov
pop
push
cmpsb
rcll
mov
xor
lods
mov
dec
add
push
stos
and
iret
rorl
ss
pop
pusha
popf
push
or
inc
push
mov
sbb
mov
pushf
ljmp
icebp
mov
xchg
dec
test
jbe
xlat
add
push
in
mov
test
mov
xchg
push
jnp
gs
push
sahf
addl
clc
cmp
testb
repnz
sbb
int3
pop
jl
push
in
mov
mov
add
pop
imul
sarl
iret
xchg
adc
addr16
mov
jns
mov
stos
popf
in
add
scas
sbb
pop
sub
aad
push
js
xchg
lds
das
mov
sub
dec
iret
sar
cmp
pop
lea
xchg
adc
sti
mov
out
add
pushf
enter
jbe
jmp
dec
push
sub
bnd
inc
dec
xor
pop
jge
outsl
jle
add
pop
cs
sub
pop
stc
push
pusha
add
mov
inc
cwtl
push
pop
test
mov
mov
mov
call
sbb
push
cmp
cmp
mov
xor
pop
sbb
pusha
ja,pt
int
pushf
jae
int3
or
pop
sbb
mov
inc
add
movsl
xchg
jg
sub
addr16
negb
es
cmpsb
aas
clc
mov
aaa
jnp
mov
aas
dec
jae
pop
dec
pop
loope
icebp
stc
or
inc
js
sbb
jae
aas
sub
repz
out
insb
aas
loope
out
outsb
test
add
mov
mov
push
imul
das
fistpl
jbe
xchg
movsb
jns
push
dec
pop
jecxz
add
fidivrs
adc
mov
stos
scas
jp
clc
div
add
push
jge
mov
stc
push
fsubrs
fwait
push
and
inc
mov
data16
mov
sub
xchg
pop
sub
daa
jle
dec
or
adc
jl
cwtl
mov
mov
in
fldt
mov
lret
sub
scas
mov
sub
inc
out
mov
addr16
mov
std
test
ret
in
loope
je
pop
xor
pop
jae
push
popa
sub
aas
testb
dec
adc
inc
test
pop
and
pop
bound
fisubs
adc
rorl
leave
insb
mov
or
arpl
cld
push
xchg
sbb
out
add
pusha
pop
cmp
loope
js
push
adc
scas
in
dec
xchg
push
adc
push
fsts
add
xchg
xchg
lcall
xchg
xor
and
and
scas
shlb
daa
sub
mov
pop
and
pop
or
mov
in
into
jnp
test
xor
sub
loope
inc
add
push
jle
cld
es
std
xchg
sub
das
sbb
push
leave
test
and
pop
push
dec
jecxz
inc
out
daa
xor
pusha
daa
leave
pushf
jmp
cli
js
push
jae
sbb
cmpsb
call
cs
and
dec
insl
fdivrs
js
dec
push
jg
mov
pusha
imul
inc
lret
mov
cld
jae
pop
push
arpl
aas
push
and
repz
mov
mov
push
mov
ja
in
jle
or
fsubs
and
ret
push
mov
cmpsb
jb
jb
cmpsb
xor
cwtl
xor
dec
push
ss
rcr
inc
mov
and
ljmp
xor
push
out
aas
test
mov
stc
push
jne
sbb
and
es
adc
sub
popa
test
jae
mov
jmp
mov
mov
cmpsl
mov
testb
ret
les
loop
mov
xchg
and
push
sar
cmp
mov
mov
ret
addr16
movsl
mov
mov
jecxz
dec
mov
fcompl
sahf
mov
xchg
mov
add
pop
sub
dec
mov
xor
and
sub
popa
repz
insb
inc
jge
cmp
mov
jae
inc
mov
dec
fsts
push
inc
jle
and
push
sahf
sbb
cmc
mov
and
stos
call
mov
daa
mov
mov
aaa
sub
lret
mov
clc
mov
or
les
adc
add
or
push
and
xchg
xchg
and
gs
int3
pop
xchg
xchg
mov
mov
inc
fwait
push
aam
test
lcall
xor
dec
jne
xor
add
push
and
seto
or
outsl
xor
xor
or
or
mov
jbe
call
lahf
pop
sti
mov
cld
adc
add
jmp
lret
mov
jns
cmpsl
xor
dec
ja
jbe
jns
stos
dec
sub
jl
dec
shll
jmp
es
fdiv
jnp
mov
mov
mov
subl
lods
stc
js
decl
sub
mov
shlb
in
sub
es
repz
repz
inc
cwtl
popfw
scas
xchg
outsb
sbb
les
mov
sub
and
adc
push
roll
into
cmpsl
jbe
movsl
jae
in
test
in
jnp
cmc
xchg
es
mov
aad
jge
lock
mov
lahf
jmp
aad
jae
push
and
sbb
cmp
cmp
xlat
dec
and
stos
ss
clc
sarb
mov
testl
adc
jbe
jg
lret
mov
jbe
loope
lock
mov
jo
xor
jecxz
fisubs
nop
cld
lea
mov
nop
mov
je
mov
inc
ja
insl
data16
sbb
adc
mov
das
je
mov
mov
mov
dec
ss
repz
iret
push
mov
test
sub
loopne,pn
out
jecxz
cs
mov
pop
push
or
hlt
lahf
int3
adc
dec
sub
inc
mov
iret
cmpsb
xchg
or
push
xchg
adcl
jmp
mov
xchg
js
mull
cld
mov
jl
ds
mov
das
cmc
inc
mov
or
test
pop
mov
sub
iret
lea
push
leave
ss
xor
sub
ficoms
ja
aaa
imul
test
ret
and
arpl
or
xor
inc
mov
push
lret
in
jbe
rclb
lods
pusha
sbb
ret
push
xor
mov
mov
push
das
test
jo
sbb
popa
lods
mov
out
sbb
jbe
pop
or
mov
jae
lods
jne
lods
pop
xchg
inc
jne
iret
push
insb
mov
cs
dec
movsl
or
or
jle
cmp
mov
xchg
clc
or
cmp
dec
hlt
mov
sti
stos
adc
dec
leave
pushf
cmp
stc
or
cmp
jp
fnstcw
lods
imul
pop
test
cmc
push
xor
mov
mov
js
addr16
fmuls
es
testb
mov
mov
bound
jg
loope
lcall
xchg
push
sar
jbe
clc
adc
iret
mov
jb
subl
jns
loope
lea
in
push
cwtl
cmc
add
adc
jne
cld
inc
cmc
loopne
cmp
pusha
out
sub
inc
mov
jl
lret
ja
leave
addb
iret
mov
dec
pop
sbb
jb
pop
jae
push
lods
pop
sbb
inc
stc
loope
pop
pop
leave
mov
sahf
mov
xor
in
sub
pop
mov
cltd
lds
jecxz
sbb
xor
mov
ja
jns
hlt
imul
mov
mov
push
icebp
jo
mov
in
stos
pop
sbb
sub
push
popa
jecxz
andb
mov
loop
mov
cltd
lret
mov
dec
sbb
or
jg
cmp
repz
incb
inc
test
push
aam
cs
ss
shl
test
jg
fstl
dec
data16
lcall
and
dec
push
cwtl
dec
sbb
out
pop
call
mov
mov
xor
mov
cmpsb
mov
push
or
daa
add
call
cltd
push
sbb
cmp
arpl
lcall
or
xchg
sbb
push
or
adc
cmp
xchg
scas
pop
sbb
push
sahf
dec
pop
xchg
jae
and
shlb
mov
gs
lea
inc
enter
inc
popa
and
sbb
jno
sub
xchg
gs
pop
arpl
or
xchg
jne
mov
inc
lock
sahf
stc
pop
add
push
mov
jmp
jns
jno
sub
into
outsb
xchg
xchg
xchg
cmpsb
cmp
pop
or
fimuls
movsb
adc
sbb
ljmp
cwtl
jmp
jp
mov
xor
push
xchg
xor
mov
xor
insb
in
stos
or
jle
shll
fcoms
mov
xor
jb
popa
repnz
bound
pop
shll
jne
or
cmpsl
cmp
call
inc
inc
out
call
mov
xor
sub
sahf
fstpl
mov
dec
push
mov
iret
pop
mov
mov
fistl
adc
adc
lret
inc
adc
adc
xchg
push
fcompp
xchg
jmp
pop
xor
push
ret
mov
aam
xchg
inc
notl
xchg
or
sbb
cmp
jns
lret
or
cmc
push
je
mov
adc
rcrb
pop
mov
je
push
mov
je
pop
out
scas
sarl
dec
fs
sub
inc
je
sbb
std
jnp
je
je
cmp
pop
shrb
xor
es
push
popa
test
pop
in
xor
repnz
lds
cld
pop
cs
movsl
adc
sbb
sub
sub
ss
xor
and
and
ja
push
movsb
mov
mov
ja
aad
int3
sbb
lret
pusha
ljmp
xor
cmp
or
mov
adc
shrb
popa
test
inc
scas
movsb
sub
pop
sarl
and
push
divl
xchg
in
xor
cmp
shl
inc
sbb
xchg
mov
pop
shlb
scas
dec
gs
shr
mov
xchg
test
xor
xchg
push
pop
add
sub
cmp
fstl
out
and
jg
jno
dec
cmp
xchg
inc
in
fimuls
clc
sbbb
push
xchg
pop
std
inc
mov
fwait
pop
add
je
push
bound
fbstp
push
movsl
test
rcrb
mov
mov
jb
mov
nop
lods
push
lcall
pop
int
push
out
mov
xor
mov
jg
cmp
push
sahf
repz
mov
and
daa
stc
ds
mov
lcall
jno
sub
ja
movsb
frstor
pop
push
and
inc
lock
enter
dec
fsubs
test
jne
jb
js
lea
dec
scas
sbb
jg
mov
jae
push
in
sysret
push
out
sub
popa
sub
sbb
cmc
sahf
ret
mov
pop
jmp
or
sti
add
mov
xor
sub
push
repz
sbb
mov
stos
xor
sub
xor
push
jecxz
jae
in
push
scas
ret
notl
fdivs
inc
mov
pop
xor
outsl
xchg
bound
mov
or
cmp
pop
mov
jne
loopne
cwtl
mov
and
xor
mov
movsb
subb
xor
adc
xor
sub
loopne
jb
jae
pop
dec
insl
cmp
sub
aam
loopne
or
and
sub
fwait
ret
push
cld
cmp
xchg
cli
arpl
push
or
inc
and
dec
push
je
jb
cmp
cmc
inc
loope
add
mov
jl
jo
sbb
repz
cmp
pop
cltd
mov
andb
push
adc
inc
clc
mov
dec
sub
pop
mov
inc
fadd
int3
out
mov
or
push
lcall
xor
popa
sub
xchg
sbb
and
int
push
mov
xor
popf
dec
push
cs
mov
cwtl
shlb
jp
ja
push
mov
fdivl
aas
and
inc
fdiv
daa
push
jbe
xchg
leave
cld
add
lods
loopne
outsb
jmp
jg
mov
test
mov
pop
jo
ret
sub
jg
and
adc
pusha
xchg
dec
nop
push
fidivl
xchg
cli
lahf
fcoms
push
cmp
daa
xchg
pusha
add
subb
notb
lea
imull
add
cli
movsb
repz
fs
clc
lret
jo
nop
sbb
insl
cmp
js
lods
cmp
int
adc
push
cs
xor
and
pop
jb
subb
test
sbb
pop
jns
test
popa
loopne
xor
fsubs
int
insl
adc
inc
out
mov
sbb
jecxz
fldt
pop
mov
mov
mov
frstor
xlat
sbb
mov
xchg
rorl
mov
sbb
in
rcll
sbb
dec
xchg
sbb
pop
push
dec
jge
ret
fwait
insb
into
sbb
int3
loop
lret
mov
and
xor
in
std
mov
push
mov
xchg
fdivs
cmpb
adc
cmovae
jae
in
adc
sahf
lds
push
inc
sub
ds
pop
inc
insb
pop
and
std
aad
mov
ret
sbb
push
jp
loop
jae
pop
rorb
pop
nop
xchg
std
loop
movsb
out
sti
mov
mov
jae
mov
lods
rcl
jnp
data16
jp
add
test
jns
mov
mov
inc
xor
and
fsubs
lock
cld
fimull
mov
insl
ret
outsb
mov
push
mov
insb
jae
jne
lea
sti
lret
push
imul
jae
mov
adc
cmp
push
pop
jmp
and
fildll
lret
popa
xor
das
push
and
mov
mov
scas
cmp
outsb
iret
dec
push
lret
pop
mov
sbb
and
xor
scas
adc
push
adc
repz
inc
push
adc
xor
xor
push
gs
jo
cmp
jns
and
nop
sbb
jbe
or
insb
add
mov
test
scas
add
shl
lock
push
pusha
add
cmp
adc
insb
mov
sbb
xchg
jno
mov
adc
sti
movsb
and
mov
jle
cltd
jno
into
or
mov
dec
mov
sarb
cmc
mov
movsb
sub
aaa
xor
xlat
jl
shrb
jle
inc
inc
in
mov
mov
jae
imul
push
push
into
int3
in
divb
or
adc
in
into
outsb
into
test
data16
cs
daa
scas
jg
lock
add
rcll
mov
xchg
fiadds
sti
adc
xlat
and
pop
xor
jp
mov
adc
bound
jbe
pop
push
inc
pushf
icebp
repz
lods
cmp
xchg
mov
ja
hlt
lret
sti
in
cwtl
pop
jne
sub
repz
dec
sub
xchg
outsb
loop
fcom
ja
mov
lods
cwtl
loopne
lea
xchg
ret
stc
enter
cmp
test
cs
pushl
fnop
mov
ss
mov
repz
mov
lds
xor
stc
pop
or
loope
cwtl
add
sbb
mov
and
xor
arpl
mov
push
in
cmpsb
rorl
pushf
rcr
mov
sbb
mov
inc
fs
std
aas
ds
push
ja
pop
rorl
push
adc
jecxz
adc
sar
and
outsb
pop
pop
pop
sbb
mov
std
in
leave
je
incl
or
add
pop
dec
popa
loope
in
mov
repz
jo
cmp
les
adc
jl
les
push
cmp
sub
mov
int
js
mov
ljmp
cltd
sbb
xchg
mov
lods
dec
aas
or
cmp
dec
or
cs
jl
ret
xor
ja
xor
andb
les
or
icebp
lock
sub
mov
sti
xor
cwtl
insl
sub
std
js
add
andb
bound
imul
xor
incb
and
in
test
orb
pusha
pop
arpl
test
ja
clc
cld
dec
test
xchg
cmp
and
mov
sbb
mov
push
dec
aam
imul
adc
xchg
xchg
mov
jb
pop
dec
mov
cld
shlb
sbb
divl
aaa
add
xchg
out
movsl
adc
cli
inc
repz
scas
mov
or
and
and
push
cmpsb
and
or
mov
shll
jl
imul
mov
inc
cmp
mov
add
sub
inc
in
xchg
mov
xor
popa
jae
sub
scas
jae
dec
and
dec
ljmp
aad
sub
inc
daa
rorb
stos
inc
divb
sbb
in
sbb
push
fists
sbb
gs
jp
repnz
mov
clc
sahf
loope
xor
in
movsb
test
pop
dec
push
movb
daa
in
ljmp
add
adc
test
xor
fists
mov
nop
sub
aad
stos
rorl
sbb
jb
outsb
int
dec
xor
or
cmp
or
call
fwait
cs
cwtl
aad
sbb
movsb
mov
sub
sarb
jns
ss
adc
fisubrs
ret
jns
mov
mov
and
fstpt
jge
pop
jbe
lods
or
mov
mov
repz
movsb
sbb
pusha
pop
aad
mov
movhps
sub
sbb
and
addr16
pop
fs
mov
mov
pushf
aad
aam
in
inc
out
jae
aad
jl
loope
lahf
sahf
mov
mov
add
jno
sub
mov
ret
mov
inc
cmp
pop
inc
dec
cmp
popa
stc
inc
jns
pop
aad
in
pop
sti
iret
shll
mov
daa
jbe
or
das
cltd
mov
jns
add
insb
inc
icebp
xor
jmp
add
out
pop
test
and
push
test
and
or
adc
notb
adc
iret
adc
cmp
lock
arpl
mov
into
sub
pop
sub
sub
repz
xchg
fbld
mov
xchg
lods
sub
jo
xorl
imul
loopne
jae
dec
lret
push
ret
cmp
sbb
hlt
pusha
inc
btr
xchg
inc
int3
hlt
in
jl
int
rcll
jae
mov
sahf
mov
scas
scas
add
clc
popf
in
test
push
cmp
jle
stc
outsb
add
repz
ss
jno
pop
stos
jp
and
mov
sbb
inc
xor
cmp
jae
fisubl
sbb
das
pop
insl
js
xchg
shlb
pop
dec
arpl
hlt
imul
adcl
nop
fisttpll
gs
ja
xchg
rcrl
cli
mov
cmpsl
jno
cli
adc
add
dec
dec
lret
lods
hlt
test
sbb
loope
pop
push
scas
inc
pop
jl
rorb
stos
sbb
mov
mov
fs
scas
hlt
push
out
xchg
jns
mov
ds
gs
jns
dec
jmp
inc
push
nop
bound
in
jbe
mov
mov
jmp
mov
sub
das
or
pop
jae
inc
fisubrs
push
lret
mov
sbb
es
movsb
and
icebp
loopne
in
inc
sbb
add
loop,pn
and
mov
jae
push
sub
cmp
mov
sbb
jb
ljmp
adc
ret
or
or
mov
ds
or
cltd
xchg
jecxz
add
cli
xor
pop
stos
dec
imul
repz
nop
jecxz
mov
divl
adc
jno
cmp
xchg
movsl
andl
outsl
incb
rclb
clc
dec
icebp
xor
test
js
rolb
xchg
mov
test
daa
adc
and
mov
add
pop
jecxz
push
ljmp
lret
hlt
inc
pop
xchg
loop
js
cmp
rcrl
jle
ljmp
popa
or
push
xchg
sar
test
fimuls
mov
jmp
pop
xorb
or
mov
aaa
fmulp
out
mov
jge
es
and
or
add
pop
push
call
or
test
insb
icebp
notb
inc
loop
sub
xor
daa
push
scas
xchg
pop
sub
mov
test
push
scas
das
dec
and
push
add
mov
jle
push
cmpsl
jp,pn
jbe
lds
dec
sbb
adc
adc
bnd
cwtl
sahf
push
out
jo
or
or
pusha
popl
or
imul
pop
inc
adc
push
sbb
ds
cmpsb
xchg
pop
jo
fcoml
subb
arpl
ljmp
shll
sub
fwait
lea
jmp
adc
sbb
pop
lds
xor
sbb
add
iret
sub
push
dec
and
push
lahf
shlb
pop
jbe
jae
and
testb
out
fiaddl
int
or
adc
ljmp
test
push
push
cld
ljmp
inc
mov
cmp
mov
xchg
inc
sub
shr
push
std
jbe
popa
mov
cwtl
cli
test
repz
cmp
push
lods
add
mov
inc
ret
cli
pushf
mov
inc
ss
rcr
pop
pop
daa
das
clc
and
aam
sbb
pop
xchg
arpl
pop
adc
ds
and
cwtl
fidivl
mov
rcll
cmpsl
jp
scas
pop
dec
iret
lods
pusha
jo
das
fwait
cwtl
testb
fldt
testl
call
and
dec
mov
inc
mov
in
lock
bound
fsubrs
unpcklps
xor
jns
lcall
lret
cli
in
iret
mov
mov
lret
mov
xchg
xchg
dec
cmp
pop
fimuls
add
mov
adc
inc
xchg
je
sbbb
enter
xlat
adc
in
je
clc
jbe
jmp
push
inc
jbe
cmp
xor
mov
pop
js
xor
xchg
mov
je
lods
into
jl
push
xor
push
pop
leave
or
mov
jae
repz
ret
sub
xchg
sti
and
sub
loope
in
cli
sbb
jecxz
inc
mov
out
in
push
daa
out
push
push
push
repnz
lret
imul
mov
add
mov
add
and
inc
sbb
test
push
dec
inc
mov
xor
dec
cmp
jp
imul
in
pop
jbe
xchg
iret
or
sub
fadds
repz
lcall
stc
or
xchg
jbe
xor
imul
lock
add
xor
imul
mov
ja
and
nop
movsb
mov
iret
ja
jae
data16
fistl
mov
mov
ja
jo
jae
cmpsl
lods
sbb
fwait
xchg
stc
stc
xchg
nop
jae
xorb
add
mov
push
hlt
iret
adc
stos
scas
adcb
shlb
push
jae
jne
aas
sbb
out
adc
dec
mov
cwtl
dec
adc
imul
sbb
push
jl
fsubrl
cmp
sub
push
orb
lsl
data16
and
cmp
or
mov
and
mov
and
add
or
push
repnz
std
cwtl
push
pop
xor
dec
lcall
js
pop
mov
mov
in
mov
leave
fistpl
dec
mov
jl
loopne
ja
mov
lcall
cmp
lahf
aaa
xor
adc
fmull
mov
and
movsl
xor
pop
inc
adc
pop
push
dec
scas
jge
outsb
stos
jge
or
mov
js
pop
sbb
stos
push
mov
pop
dec
push
loop
add
and
ss
or
adc
mov
divb
into
mov
adc
xchg
mov
stos
push
push
mov
push
jle
cmpsl
pop
ret
adc
popf
push
dec
scas
sub
bound
xchg
dec
xchg
out
and
jb
mov
rorb
mov
insb
xorl
inc
inc
pusha
jp
mov
fists
mov
xchg
mov
stos
jb
or
xchg
imul
lret
mov
push
push
repnz
outsb
sub
or
sbb
pusha
push
xchg
cs
shll
jns
imul
add
push
loopne
inc
sub
inc
adc
cld
out
nop
ljmp
pop
push
jecxz
aas
mov
mov
add
repnz
mov
int3
pop
rcll
xchg
and
jecxz
sub
mov
xorl
mov
cmpsl
fs
add
test
xchg
imul
nop
adc
jno
and
adc
cld
sub
sbb
jbe
shrb
rorl
out
pop
repz
insl
fnstsw
stc
adc
xchg
xor
daa
push
jl
mov
ds
test
fbstp
xchg
sbb
push
dec
jo
xchg
enter
jbe
jno
fsts
imul
je
cmpsl
jp
out
jmp
je
movsb
cs
int3
pop
mov
and
sbb
sbb
push
outsl
ljmp
addr16
gs
lahf
movsl
mov
sbb
cmc
jns
dec
hlt
loop
sbb
xor
aaa
test
mov
mov
aad
adc
adc
stos
sub
sub
xor
pop
ds
je
std
pop
sub
xchg
xor
cmp
xor
push
xor
or
jne
xchg
js
scas
outsb
xchg
inc
cltd
std
inc
push
jo
mov
lds
sahf
push
pop
test
loopne
mov
mov
in
out
nop
push
pop
push
xorl
xor
xchg
sarw
fwait
add
dec
mov
mov
jbe
jmp
shlb
mov
insb
mov
jb
cmp
mov
scas
sbb
push
mov
scas
js
je
cmp
pop
push
mov
xor
mov
cmp
jnp
call
push
outsl
clc
jl
outsb
arpl
repz
test
xor
jne
outsl
push
xor
push
inc
insl
call
dec
push
jne
dec
arpl
lock
test
int3
and
inc
mov
jae
gs
jno
mov
pop
imul
pop
jns
mov
jno
cmp
mov
cmp
cwtl
test
lret
add
inc
ja
call
cmp
mov
mov
out
incl
mov
adc
add
mov
shll
scas
stc
inc
jae
xchg
fdivl
mov
clc
mov
mov
out
jnp
out
adc
ja
out
imul
mov
push
and
push
cmp
or
pop
scas
sub
xlat
arpl
scas
sbb
xchg
or
mov
mov
or
lret
push
jno
mov
ret
std
xchg
int
cmp
pop
mov
lret
cmpsl
stos
test
fcmovb
xchg
inc
cmp
or
popf
das
or
testl
int
mov
mov
mov
ficomps
out
or
aad
push
icebp
mov
or
mov
push
es
cmp
xchg
faddp
sbb
jle
fnstenv
mov
js
test
add
inc
mov
ss
mov
pusha
mov
mov
mov
inc
in
cmp
or
ficomps
imul
or
imul
push
cwtl
cld
sbb
dec
imul
xchg
jo
ror
stc
sub
or
sub
add
cmpsb
call
and
sbb
lods
rolb
cmpsl
jp
dec
jg
push
mov
push
cmp
jo
cmpsb
add
xchg
loop
add
in
pop
mov
sub
insb
inc
inc
push
adc
pushf
sbb
cmp
js
lret
iret
push
mov
xor
in
int
mov
loopne
sbb
stc
js
jbe
push
jmp
js
push
jl
or
mov
cmp
sahf
jl
sub
xor
sti
mov
pop
sub
jae
dec
repnz
imul
or
push
call
xchg
add
push
loop
lahf
hlt
lcallw
jbe
fsubs
mov
lcall
adc
and
sbb
sub
inc
adc
dec
insb
mov
loope
xlat
or
imul
and
add
pop
cmp
sbb
push
inc
lahf
mov
mov
cwtl
das
xor
push
and
or
into
mov
in
iret
cmpb
mov
hlt
jge
cmp
sbb
hlt
push
xchg
in
lret
sbb
shl
sub
ret
jb
and
in
mov
movsb
push
cld
lret
pop
sbb
mov
push
movsl
jno
xor
push
jne
pop
es
or
jl
js
xor
in
imul
add
lcall
inc
sbb
sbb
lret
js
sbb
sub
pop
and
jg
xchg
xor
xchg
cmp
jecxz
icebp
sub
loop
sbb
insb
pop
jl
into
xchg
sbb
mov
and
xchg
push
sbb
fstpt
pop
out
sbb
jne
es
and
add
xchg
sbb
push
mov
aas
addr16
insb
pushf
mov
pop
popaw
mov
mov
sti
outsl
inc
stos
mov
mov
out
mov
mov
mov
or
fprem1
dec
xor
out
mov
mov
cmc
cs
dec
shll
and
sbb
dec
inc
jnp
cmpsl
icebp
stc
loop
inc
adc
sbb
fadds
sti
adc
lods
push
mov
enter
pop
pushf
or
sub
call
stc
jg
mov
mov
mov
pop
enter
sbbb
xor
mov
sahf
or
rcrl
adc
arpl
bnd
or
in
aas
shlb
push
jae
outsl
in
jb
ljmp
pmulhw
sub
cmpl
xchg
or
push
loope
inc
adc
cltd
mov
mov
xchg
sbb
movsb
jle
pop
cli
sub
lret
mov
pop
test
mov
push
outsl
loopne
ret
jo
jbe
inc
idivl
cld
and
jle
dec
icebp
leave
mov
jp
arpl
push
mov
adc
mov
dec
cmp
mov
lods
cltd
or
and
rclb
xlat
fnstsw
cmpsl
scas
sbb
lea
xor
fwait
push
addr16
sbb
or
jge
rcl
cmpsb
data16
xor
sbb
xchg
test
jo
jle
popa
mov
fwait
xchg
jecxz
adc
nop
push
mov
mov
in
dec
fildll
xlat
dec
insb
jne
push
mov
or
insb
out
icebp
iret
mov
xchg
dec
jl
add
je
pop
int
divl
mov
adc
push
xchg
ds
jnp
fstl
jns
pxor
xlat
dec
out
mov
lds
cmpsb
daa
push
mov
or
xlat
imul
lods
dec
movsl
fs
mov
xor
xor
xchg
xchg
mov
jb
adc
add
cmpsb
or
pop
ficompl
mov
fnsave
cwtl
lahf
adc
mov
outsb
std
sub
sbb
mov
repz
cmp
push
jo
xchg
mov
sbb
cmc
mov
data16
out
hlt
push
test
inc
or
and
dec
jns
mov
cmp
cs
imul
js
lahf
addl
cwtl
imul
pop
sbb
mov
cmp
xor
jb
mov
jle
adc
sbb
dec
jbe
push
movsl
scas
inc
mov
sub
mov
xor
loope
mull
das
div
xchg
and
cwtl
imul
imul
cwtl
fdivrs
test
ds
mov
je
pop
mov
sbb
mov
insb
jns
js
mov
fsubrl
in
mov
fisubrl
into
fidivs
pusha
jae
fidivrl
popf
sbb
add
outsb
xor
adc
negl
in
sti
pop
pop
and
aad
xchg
push
stc
mov
lea
rorb
mov
lahf
mov
and
mov
pop
push
mov
push
bound
rorb
xchg
jns
sub
add
cmc
xchg
push
xchg
jmp
pop
push
mov
jge
fs
push
enter
repz
es
sbb
lahf
lods
jo
add
shlb
lret
jbe
ds
mov
jae
in
mov
mov
mov
xor
and
fiadds
push
mov
fiadds
cmp
ret
sbb
mov
popa
fistpl
pop
push
stos
mov
jb
fisubrs
insb
dec
cli
mov
sbb
xchg
out
jl
push
fdivs
inc
push
cmp
dec
inc
inc
xchg
fs
mov
lcall
sti
mov
push
je
xor
push
inc
push
mov
insb
div
xchg
sahf
xor
js
xchg
sbb
pop
loopne
sbb
loope
cwtl
jl
and
jg
mov
aam
cmc
out
stos
dec
ljmp
cmpsb
lahf
in
jne
rcll
dec
loopne
or
adcb
jo
xchg
sbb
scas
cltd
or
sahf
pusha
jae
mov
out
test
inc
imul
and
lret
insb
push
out
or
mov
sbb
in
incl
pop
xchg
std
cmc
mov
in
push
notb
adc
imul
xchg
fldl
pop
sub
inc
xor
pop
cmp
repnz
inc
call
inc
dec
repz
in
cmpsl
add
jno
movl
das
mov
fs
test
jbe
ja
bound
lods
mov
or
jnp
jb
lahf
shrb
xor
mov
testl
sub
or
jl
mov
mov
pop
les
in
addr16
jae
fwait
mov
mov
xchg
fidivrs
aas
mov
bound
push
jno
mov
rcr
jbe
jecxz
cmc
js
je
push
xchg
std
js
pop
and
sub
mov
cmp
xor
xchg
pop
sub
out
xor
mov
dec
jae
stos
xchg
mov
mov
add
js
inc
xorb
xchg
inc
inc
decl
ja
jbe
adcl
orb
inc
push
cmp
mov
sbb
pop
and
mov
lret
push
ja
pop
lret
mov
js
ficomps
mov
inc
popl
das
clc
stc
jbe
addr16
and
daa
and
xor
sti
out
rcrl
loop
xor
test
jo
les
mov
mov
xchg
mov
lock
xor
loop
lock
jo
call
lods
mov
mov
lock
out
fnstcw
xor
ja
adc
sbb
push
jl
scas
and
add
sub
mov
aam
movsl
jbe
jge
mov
mov
lods
xchg
jecxz
pop
int
and
fs
cmp
inc
sbb
jmp
mov
pop
test
mov
push
mov
pusha
idiv
test
cs
outsb
ret
mov
je
inc
out
cmp
inc
and
arpl
dec
lds
jo
adc
jnp
frstor
ss
adc
clc
test
push
loop
mov
xchg
adc
je
into
add
adc
je
push
push
je
dec
rcrl
mov
ja
nop
cwtl
jl
and
sub
fstpl
and
pop
pusha
xchg
test
addb
xor
shll
xchg
adc
sbb
pop
sbb
pop
sub
xor
or
or
test
and
bound
dec
push
pop
pop
rcr
cwtl
div
loopne
or
adc
popa
jb
or
pop
test
ja
test
jns
inc
or
out
rcll
ss
ja
popf
js
xchg
add
pushf
sbb
sbb
jo
sub
scas
cmp
inc
cwtl
js
mov
gs
and
les
inc
mov
ss
mov
lret
jmp
inc
lds
idivb
psadbw
pushf
mov
das
jns
sti
repnz
mov
ficomps
dec
cmp
add
cltd
push
cwtl
insb
xchg
push
jo
cmp
xchg
stc
cmp
xchg
add
dec
push
testb
adc
loopne
lahf
inc
test
adc
push
xor
jo
enter
xchg
popa
das
mov
pop
mov
lds
dec
inc
fnsave
pusha
addr16
ret
adc
pushf
dec
stos
sbb
fbstp
mov
add
movsl
inc
mov
insl
mov
negb
dec
aas
or
int
push
test
mov
and
cltd
push
enter
jns
push
cmp
popf
sbb
or
ja
mov
cmp
mov
fsubp
cmp
mov
cmp
jmp
fstpl
cmc
notl
ds
dec
mov
mov
push
add
test
push
rorb
mov
cli
push
in
xor
mov
adc
loopne
daa
xor
cmc
push
jae
pop
stos
out
push
mov
jbe
sbb
in
std
cmp
lods
es
push
js
jbe
add
inc
sti
mov
cwtl
dec
cmp
xlat
pop
call
repz
mov
aad
lock
xchg
or
cmp
jae
dec
movsb
and
mov
jmp
jmp
sub
cmp
loop
jge
rcll
lcall
js
sub
mov
jl
leave
repz
lods
sub
and
jns
repz
xchg
pop
int3
lods
das
into
sbb
pop
adc
in
jecxz
int3
mov
push
int3
xlat
xor
cs
mov
andb
popa
and
mov
or
cwtl
push
cmc
in
add
test
add
ja
push
cltd
sbb
mov
sbb
push
pop
pop
insb
stc
pop
mov
insb
pop
pop
clc
pop
adc
fsubrs
xchg
jb
cmp
adc
jns
add
pop
lret
cmc
push
test
insb
daa
sub
adc
cltd
stc
arpl
and
inc
mov
sbb
iret
pusha
lods
inc
push
into
out
sbb
scas
jp
loopne
add
push
repnz
jp
xchg
orl
mov
sub
out
push
subl
shll
jae
cmp
mov
add
mov
jge
stos
shlb
jmp
or
push
std
and
incb
mov
xchg
push
mov
add
inc
adc
mov
jns
xchg
xchg
pusha
stos
dec
rclb
mov
or
out
push
ss
push
mov
popa
xchg
js
shll
arpl
xchg
outsl
push
imul
ds
mov
cmp
push
bound
psadbw
scas
cmpsl
dec
je
xor
cltd
data16
and
mov
rorb
pop
pop
or
mov
push
adc
pop
icebp
cld
stc
pop
pop
dec
movsl
mov
into
jnp
xchg
jl
pop
add
or
fdivrs
imul
mov
ret
push
adc
jecxz
cmc
push
sub
add
sbb
movsl
gs
jo
adc
lea
sub
sbb
ds
pop
cli
inc
mov
ja
xor
js
jp
dec
scas
ss
adc
push
enter
clc
push
dec
loopne
lods
cmp
cmp
jns
or
pusha
fisttpl
clc
aaa
pushf
loopne
jge
pusha
jae
fimuls
cmp
lock
push
imul
test
imul
mov
mov
loope
cmp
sti
pusha
clc
iret
fsubrl
scas
ss
jg
lcall
xchg
movsb
lock
jg
jnp
mov
jnp
dec
xor
ljmp
out
inc
push
aam
inc
cli
lods
xchg
addl
stc
repnz
icebp
adc
add
push
adc
xchg
js
mov
pop
xor
ret
mov
dec
inc
add
sbb
js
inc
rol
int
mov
sarl
add
cld
xor
movsw
call
js
mov
pop
fistpll
and
dec
js
xchg
adc
pop
push
daa
adc
rcr
mov
repz
mov
or
push
push
or
dec
mov
test
add
xlat
cltd
adc
and
and
pop
mov
push
decl
dec
inc
mov
add
mov
cli
push
sti
sub
movsb
mov
push
or
and
ror
cs
adc
mov
and
pop
inc
add
mov
mov
repz
jb
mov
mov
and
adc
cmc
mov
loopne
jg
int
pop
inc
mov
cmp
lods
adcb
mov
jmp
shlb
inc
sti
push
jle
mov
cwtl
insb
cs
inc
push
aad
sub
and
pop
mov
out
int
lods
dec
aaa
addr16
int3
pop
je
bound
pop
ret
sub
popa
push
or
pop
sbb
push
pop
js
aad
idivb
data16
fcmovne
imul
mov
jmp
insl
fisubrs
mulb
jle
xchg
outsb
out
movd
fdecstp
jp
stc
xchg
ja
fwait
jnp
jbe
aaa
jo
enter
inc
outsl
add
pop
cmp
sub
imul
add
inc
repnz
das
sbb
xchg
mov
dec
jle
cmp
ret
imul
fistl
rcrl
jb
inc
mov
pop
js
rclb
pop
lret
ss
mov
dec
loop
andl
push
mov
jg
daa
sbb
lods
icebp
test
cmp
pop
mov
mov
jo
sbb
jmp
or
push
pop
cmpsl
aam
jl
mov
mov
inc
cmp
lret
mov
mov
pop
pop
std
pop
inc
pop
scas
pop
loope
jecxz
sbb
dec
mov
push
into
fldcw
inc
push
xchg
cmc
sbb
ljmp
inc
mov
pop
dec
imul
scas
push
mov
imul
sbb
dec
jbe
jae
jge
or
inc
xchg
push
in
pop
cmp
xorb
mov
aam
test
out
test
fnsave
dec
adc
push
iret
pop
fs
jge
mov
lds
mov
jp
push
lcall
or
fdivs
lcall
and
and
xchg
cltd
inc
jae
stc
jbe
nop
jns
notb
cli
icebp
xorb
mov
add
mov
test
pop
test
push
je
aas
div
xchg
mov
pop
movd
js
dec
xchg
add
sarb
dec
mov
stos
push
push
inc
add
movsl
mov
sub
xchg
jo
adc
idivb
jns,pn
clc
mov
das
lods
arpl
lahf
and
push
imul
add
xor
dec
out
push
push
insb
dec
cmc
inc
leave
jg
lcall
ja
add
hlt
insb
loope
sub
dec
popa
xchg
jmp
sbb
lea
pusha
hlt
xchg
filds
mov
andl
out
push
sbb
ja
lret
arpl
xchg
push
pop
mov
jne
movsb
mov
cmc
int3
sbb
mov
and
push
enter
cmp
jbe
or
jae
mov
pop
addr16
in
ficompl
sbb
lret
mov
sarb
mov
out
ss
shr
mov
out
adc
lds
leave
xchg
sti
cmp
sahf
jae
pop
call
sub
jg
pop
test
push
sbb
mov
andb
test
cmp
and
aad
jecxz
cmpsb
xorl
cmp
adc
hlt
jne
adc
lock
dec
or
sub
ret
test
lds
push
repz
cmp
insb
insb
add
add
mov
scas
sbb
insb
cmc
or
pop
or
push
inc
cs
xlat
xor
repnz
es
add
insb
je
push
int
lods
push
push
enter
push
push
dec
cwtl
in
mov
je
sub
adc
imul
pop
mov
kmovb
jle
out
jae,pt
mov
mov
outsb
xchg
mov
and
enter
sub
pop
mov
stc
loope
cmp
cltd
cwtl
pop
jb
add
push
hlt
jno
adc
push
mov
mov
pusha
movsl
aaa
rorb
sub
fwait
negb
je
or
adc
stc
inc
add
out
xchg
sbb
rorl
add
scas
in
mov
mov
push
sahf
es
addl
ja
pusha
xorl
pop
mov
lcall
cmpsb
or
cmp
sbb
fwait
js
loope
lea
push
cmpsb
lock
add
ss
sbb
out
and
pop
int
insb
jecxz
add
out
xor
xchg
pop
inc
sub
pop
mov
movsl
imul
lea
xor
fisttps
sub
jl
ret
sarb
inc
push
rolb
mov
je
pop
inc
sbb
mov
cmp
jle
jae
daa
out
push
pop
lea
lods
loope
cs
js
dec
psllq
mov
and
mov
mov
sbb
inc
sbb
jle
inc
in
mov
mov
faddp
pop
push
aaa
outsl
les
push
mov
repnz
adc
xchg
mov
out
daa
sbbb
iret
jg
mov
cmp
lret
outsb
aad
push
jp
push
lret
jle
add
loope
push
xchg
mov
sbb
je
leave
mov
aaa
sbb
pop
xchg
loopne
sbb
shrl
push
dec
xchg
mov
push
bound
test
pop
sbb
jae
dec
not
pop
xor
jae
fidivrs
out
loope
or
and
mov
pop
inc
jge
in
repnz
xlat
add
fsubrp
push
mov
mov
mov
fwait
test
imul
fsubs
and
je
or
adc
loopne
je
sub
fcomps
arpl
lret
enter
ficoml
cld
sti
pop
out
mov
inc
jo
mov
dec
popa
and
repz
xchg
lds
test
lock
mov
cmpsb
or
cmpl
test
rolb
or
mov
sub
push
shlb
inc
jns
dec
stc
js
dec
loopne
pop
jno
or
inc
cltd
pop
adc
mov
imul
popa
pop
xchg
ja
push
outsb
imul
pop
lahf
cwtl
or
mov
out
aas
or
dec
mov
lret
mov
outsb
jno
sub
loope
imul
sub
or
jno
sbb
sbb
mov
sbb
int3
gs
sbb
add
insl
push
inc
popa
loope
fsts
jle
xchg
test
pop
icebp
mov
xchg
and
cmp
xor
movl
std
dec
mov
jp
xchg
xchg
test
repnz
hlt
push
mov
push
dec
mov
or
xchg
dec
sti
icebp
xor
js
xchg
out
jp
fcomip
sbb
dec
sub
xorb
lea
popl
jbe
dec
test
fsts
into
clc
inc
dec
lods
cmpb
jns
xor
add
mov
mov
int3
popf
mov
add
cmpsl
mov
xchg
std
jne
jo
pop
jb
sub
mov
dec
push
ja
jecxz
lret
xor
daa
inc
xchg
jns
push
sub
xchg
mov
nop
xor
jae
mov
xor
jae
ret
rcl
xor
adc
or
pop
fsubs
or
add
jo
pop
loope
adc
aas
xor
xchg
or
push
dec
jae
mov
data16
jl
and
mov
mov
fs
push
je
sub
nop
push
jecxz
adc
test
sbbb
clc
mov
pop
imulb
pop
das
sbb
cwtl
mov
out
push
push
xor
lahf
iret
movsb
push
lods
leave
leave
jno
es
xchg
and
scas
clc
xor
fxam
and
sarl
mov
arpl
mov
cmp
lods
push
jno
pop
lods
push
cwtl
jo
sbb
sbb
pop
ja
sbb
sub
lods
sbb
fsubs
xchg
sub
mov
out
test
sahf
into
adc
xchg
stc
fnstenv
sub
mov
in
cli
push
jae
pop
repnz
loope
xchg
xchg
stos
push
out
push
or
ret
lock
out
popa
in
aas
cmpsl
inc
or
aaa
fsubl
push
add
clc
in
pop
lds
inc
lret
mov
addb
sbb
data16
push
mov
in
aaa
dec
fisubrs
and
mov
cwtl
mov
mov
add
and
inc
mov
clc
ret
outsb
repz
je
js
mov
push
mov
adc
and
sub
cmc
test
test
aaa
pop
jb
mov
repnz
xor
sti
push
push
loopne
shll
cmc
cwtl
inc
push
add
push
movsb
adc
push
shll
xchg
xchg
dec
mov
jecxz
pop
ret
cltd
dec
sbb
mov
bound
jp
bnd
and
test
dec
loopne
inc
ret
cltd
xchg
mov
sub
mov
rcl
pushw
mov
js
dec
andl
stc
cmp
or
in
cmp
dec
rcrl
dec
xor
inc
roll
add
repnz
jb
xchg
iret
dec
sti
sub
mov
cmp
outsl
insb
xchg
iret
in
std
cmp
cmp
mov
add
mov
pop
cwtl
lds
pop
addr16
adc
outsb
mov
outsl
pop
adc
mov
mov
push
sbb
or
fmul
add
rorb
push
lock
push
daa
loopne
or
and
mov
mov
jg
mov
push
cs
sbb
mov
mov
jne
fnsave
call
adc
rorb
insb
mov
lock
push
jne
scas
inc
test
and
cmc
pop
rol
pop
mov
test
cmc
lock
js
jns
scas
mov
sbb
cwtl
cmc
xlat
lods
jo
jae
sahf
jae
pop
xor
btc
xor
insl
jp
lret
orb
scas
popf
jns
lcall
mov
xchg
jp
jae
sub
pop
ret
fnstcw
clc
mov
and
int
adc
cs
iret
sub
and
divb
cmpl
xlat
fsts
jbe
outsl
leave
rol
fdivs
fdivl
test
sub
push
fndisi(8087
sbb
arpl
mov
xchg
lods
lock
pop
mov
out
out
jb
mov
or
push
push
imul
mov
xor
mov
inc
push
jb
jae
sub
adc
lahf
mov
xor
jo
into
sar
pusha
leave
cli
add
shl
xor
adc
and
repnz
dec
scas
cld
pop
inc
test
sarb
fldenv
int
arpl
push
inc
outsb
ljmp
imul
sbb
jns
in
clc
mov
dec
pop
and
aas
push
mov
add
pusha
pushf
pop
push
mov
mov
mov
xor
push
scas
stos
into
insb
mov
xor
sbb
mov
pop
jo
mov
push
jno
test
scas
push
rcrb
lret
adc
inc
mov
jns
push
dec
push
pop
repz
repz
adc
movsb
push
adc
push
cltd
push
adc
adc
mov
repz
pop
and
lock
mov
mov
adc
in
cltd
inc
jo
test
adc
test
push
stos
fildl
sbb
xor
jne
das
mov
jnp
mov
pop
test
cmp
jae
ljmp
mov
dec
lock
ljmp
in
leave
shlb
jp
cmp
push
cmp
jae
cld
dec
adc
and
cmp
or
cs
rcl
fwait
push
shlb
aas
adc
push
adcl
mov
add
mov
stc
cwtl
and
mov
scas
repz
push
popa
sub
ja
xor
es
mov
sub
mov
mov
jbe
aad
and
dec
jbe
insb
cs
addr16
push
fldcw
repz
cmp
add
stc
shlb
pavgw
pop
push
insl
pop
mov
jae
inc
mov
rclb
negl
xchg
sbb
jl
jp
pop
enter
ja
cwtl
aas
or
enter
add
xchg
je
popa
fcomps
pop
xor
fs
ljmp
mov
pop
jae
fnstsw
add
orl
loop
pop
add
mov
sub
xor
scas
push
call
ret
decl
sarl
bound
dec
jge
mov
orb
mov
jns
dec
test
adc
mov
ljmp
pop
xchg
mov
mov
das
dec
insb
xor
js
clc
sti
fiadds
shlb
mov
add
xor
mov
sub
and
mov
insb
xchg
inc
adc
and
push
neg
loopne
sub
mov
or
xor
adc
jecxz
xor
mov
int3
ljmp
push
stc
add
add
js
push
out
out
and
pop
fildll
sbb
mov
cmc
sarl
jns
ss
push
aas
mov
cmp
jae
pop
push
or
mov
ja
or
jae
xchg
add
xchg
and
clc
mov
jae
add
test
int3
xchg
sbb
and
mov
lcall
mov
sub
fwait
imulb
xchg
mov
mov
loope
pop
push
xor
jecxz
icebp
adc
sarl
mov
mov
icebp
daa
cmp
aaa
mov
fsubrs
dec
addr16
mov
addr16
mov
inc
nop
mov
fldt
push
imul
add
push
cltd
stc
sub
sub
xchg
jno
cli
dec
ds
xor
ja
je
pop
lods
mov
push
adc
sub
insl
fdiv
jae
pop
xor
loop
hlt
push
adc
jnp
pop
sbb
jo
dec
cwtl
mov
adc
dec
mov
ret
lcall
mov
push
and
pusha
xor
in
andb
ja
jecxz
std
mov
xor
inc
lcall
xchg
inc
loope
es
into
push
dec
int
add
sahf
jae
lds
sarl
test
pusha
hlt
subl
xor
movsl
push
rcll
inc
ret
xchg
sub
pop
mov
fcomps
xchg
mov
cmp
es
and
pop
jp
xor
sbb
cltd
pop
fldenv
mov
or
xchg
fprem1
pop
sub
je
or
mov
mov
jg
pop
loop
mov
aas
dec
rcrl
push
out
mov
cmovo
adc
jb
adc
pop
adc
cltd
pand
dec
adc
aad
ficoml
sahf
jmp
add
sub
mov
push
fwait
test
adc
push
pop
xchg
push
fisttpll
cmpsb
inc
xor
and
shl
adc
push
xor
jo
shrb
jne
jns
sub
push
mov
adc
mov
jmp
movsb
lret
cs
or
jo
divb
jbe
dec
outsb
js
sbb
stc
ss
mov
cwtl
or
mov
ret
xchg
mov
xor
jbe
ss
jne
sbb
mov
je
mov
mov
push
jb
jns
js
mov
mov
sbb
jb
test
aaa
cmp
push
xor
pop
sbb
mov
sbb
scas
mov
adc
cmc
sub
divl
repnz
insb
mov
mov
push
mov
mov
clc
inc
sub
mov
and
cmc
ljmp
mov
inc
std
outsb
xor
imulb
mov
jbe
mov
adc
stc
sub
insl
je
adc
mov
es
adc
hlt
sub
fsubs
xlat
movsl
mov
fwait
insb
mov
out
pushl
and
les
out
add
mov
pop
ss
xor
sarb
lods
repnz
xorb
mov
inc
pop
cmp
jle
jbe
push
inc
inc
daa
xor
test
mov
adc
imul
sub
xor
jb
lods
jne
es
mov
test
mov
pop
xor
je
xor
popa
aaa
adc
enter
adc
pop
inc
pop
aam
nop
repz
pop
xchg
push
js
and
sbb
cmp
outsl
and
pusha
cmp
enter
sbb
push
aad
mov
shrl
cmp
test
pop
sbb
push
pop
pop
imul
jecxz
lahf
pop
out
std
mov
xor
rclb
mov
aaa
mov
or
pop
mov
jae
mov
es
add
idiv
xorb
jbe
std
aam
ja
jns
pusha
jns
cli
xchg
push
andl
and
enter
xchg
add
jae
lock
inc
add
mov
xor
mov
cmpsb
xor
xchg
mov
jb
clc
xor
cmp
add
jbe
ss
push
sbb
vsubps
insb
mov
cli
test
add
push
es
jmp
aaa
js
movsl
pop
xchg
sub
add
es
rcr
push
scas
push
xor
add
and
mov
push
push
js
clc
adc
xor
adc
lds
mov
dec
enter
xor
js
ror
mov
testb
xor
mov
or
out
dec
mov
loopne
adc
pop
sarb
jecxz
mov
gs
je
jmp
scas
sbb
divl
xchg
js
cmpsb
mov
mov
jns
jae
into
adc
mov
int
stc
jo
leave
shlb
sarb
mov
fdivs
push
adc
mov
loopne
or
xor
inc
fdivr
xor
push
fdivrs
push
xor
lea
insl
adc
push
sbb
dec
or
pop
arpl
loope
jnp
mov
push
or
mov
inc
fmuls
cmp
xchg
ret
adc
and
push
pop
out
js
mov
add
bound
xchg
xor
adc
scas
cmp
shl
push
dec
imul
js
mov
loopne
lcall
xor
mov
es
xor
sbb
repz
es
adc
mov
adc
mov
cwtl
xor
xchg
xor
adc
push
fnsave
pusha
or
mov
xor
int
js
mov
sub
jmp
dec
sub
enter
divl
or
cmp
call
xor
ret
cmp
lds
pop
mov
mov
les
push
je
xor
jl
mov
movl
hlt
js
adc
leave
xchg
mov
mulb
out
repz
mov
and
adc
xor
lock
aam
movsb
lods
int
pop
or
je
inc
ja
push
mov
xor
push
std
mov
scas
repz
sub
stc
xor
xor
inc
mov
mov
aas
stos
jb
push
frstor
je
jae
xchg
out
and
cwtl
cmp
or
sbb
leave
fldt
clc
fsts
xor
mov
cmp
or
xor
popa
xor
xor
js
clc
xchg
sahf
cmp
jns
mov
mov
jae
add
mov
sbb
mov
mov
dec
jmp
sarl
cwtl
push
and
mov
add
leave
stos
jo
and
xchg
adc
adc
repnz
xchg
adc
test
sbb
xor
adc
mov
jns
adc
call
jns
adc
ret
xchg
mov
les
push
hlt
sub
cwtl
es
xor
mov
xor
sub
sarb
aam
stc
pop
push
sub
cmp
xor
stc
sub
pop
push
aaa
sub
jbe
aam
jmp
aad
jecxz
aaa
and
enter
xlat
adc
cmp
test
xor
imul
push
mov
inc
pop
mov
ss
push
test
mov
cwtl
mov
mov
mov
loope
fs
adc
cltd
aam
cmpsl
sahf
xor
xchg
mov
xchg
sarb
inc
adc
cmp
ds
adc
js
dec
jbe
jecxz
inc
es
testl
adc
mov
mov
push
js
or
xor
dec
jno
xor
cmp
rclb
movsb
je
push
xlat
pop
stc
push
cmp
dec
cmp
aaa
push
stc
sub
push
push
aaa
sub
jns
aam
call
aam
jecxz
clc
cmp
sbb
push
cltd
sbb
daa
mov
js
sahf
push
imul
add
adc
imul
lods
mov
mov
rcrl
stos
and
test
sub
xchg
sub
es
xchg
repz
jb
daa
mov
xor
andl
mov
push
cmc
xor
cmp
shrb
js
cmp
inc
xor
stc
add
mov
enter
inc
dec
movsl
xor
mov
insl
js
scas
cmp
dec
fs
nop
xchg
jns
test
orb
push
enter
mov
jmp
je
xor
jb
pop
push
sub
lds
ficomps
mov
jns
test
test
test
cld
jns
bound
mov
lcall
shl
mov
movsl
xlat
mov
pusha
movswl
nop
or
jns
pop
inc
xchg
sbb
push
mov
insl
ds
mov
scas
into
fmuls
fcomps
es
adc
cmpsl
shl
xchg
das
sub
push
mov
lret
fcoms
cmp
cmp
mov
xchg
jns
subl
aas
push
es
fsubr
dec
es
jno
sbb
movsb
mov
jecxz
jno
std
mov
bound
les
jmp
fsubrs
mov
mov
add
popf
mov
adc
mov
sarl
aad
or
js
dec
pop
adc
xchg
call
clc
sbb
adc
sbb
xchg
flds
or
adc
dec
repz
xchg
mov
pusha
loopne
or
je
dec
daa
dec
mov
lods
mov
je
xorb
inc
xor
sub
mov
js
mov
mov
repz
xorl
js
mov
adc
mov
jg
cltd
pusha
and
call
push
data16
scas
add
mov
loope
stc
push
clc
scas
adc
je
hlt
imul
mov
pop
xor
stos
adc
dec
inc
mov
aaa
mov
stos
mov
ja
fsts
aaa
lods
negb
orl
push
idivb
and
sbbb
cmp
stc
ss
shll
adc
ja
shlb
mov
je
xor
cmc
pop
lret
cwtl
cmp
mov
jne
inc
xor
imul
jo
test
adc
js
add
lret
test
add
or
or
or
je
cs
jge
adc
xor
push
or
cmp
xchg
fisttps
pop
nop
mov
push
jbe
insb
insl
outsl
clc
hlt
mov
pop
data16
mov
push
enter
and
inc
xor
out
xor
aad
divl
mov
xor
call
inc
ss
mov
fcmovnbe
aam
and
loope
js
cmp
and
pop
fistpl
pop
jg
jmp
add
jecxz
pusha
pushw
xor
adc
jne
adc
adc
mov
sub
jb
popf
jb
bound
pusha
rep
push
hlt
mov
je
in
clc
aad
dec
adc
adc
sbb
mov
pop
push
ss
mov
rclb
adc
inc
pusha
jl
xchg
stc
mov
jne
test
and
pop
cwtl
sub
aam
cmp
aaa
jo
je
test
mov
dec
jp
lods
rclb
movhps
cmp
lock
push
mov
xchg
lret
dec
mov
jns
pusha
mov
xchg
jmp
repz
jg
and
adc
push
mov
es
inc
push
je
repnz
inc
mov
imul
inc
inc
mov
jle
sub
sub
xor
mov
mov
imul
jecxz
out
adc
jmp
je
imull
sbb
mov
sub
cmp
mov
repnz
mov
je
mov
mov
jbe
mov
aaa
xor
mov
adc
sub
jno
mov
adc
std
test
shl
sub
xor
test
jne
inc
mov
jo
imul
je
cmp
adc
lock
push
sub
mov
pusha
push
pop
ds
xchg
push
xor
xor
jno
cmp
rcrb
jne
xor
mov
imul
mov
xor
pop
or
jne
mov
or
cwtl
aaa
popa
and
xor
dec
adc
div
ljmp
pop
mov
adc
sub
sub
inc
xchg
shl
mov
dec
ror
push
mov
dec
xlat
mov
icebp
nop
push
adc
stc
cmp
es
or
lcall
mov
and
sub
sarb
sub
xor
mov
imul
div
insb
ss
or
frstor
mov
imul
repz
and
jne
cwtl
leave
ss
mov
jne
mov
enter
mov
inc
mov
outsb
pop
push
cmp
retw
es
jbe
jae
add
and
es
test
mov
cmpsb
cmp
repnz
jmp
mov
fldt
and
fsub
xor
mov
xchg
xor
movsb
js
adc
fwait
mov
fldt
xor
xchg
xor
fbstp
push
jne
xor
push
pop
stc
adc
mov
es
push
pusha
es
xor
je
lret
mov
jb
push
and
rclb
aam
mov
ret
xor
les
mov
fbld
push
xor
sbbb
pusha
pop
jo
sbb
or
pop
mov
fldenv
inc
lods
pop
sbb
pusha
mov
pushf
pusha
rcrl
adc
movsb
pop
mov
pushf
adc
pop
shll
mov
rcrb
sti
pusha
shll
lods
push
lods
pusha
mov
lods
pusha
rcrl
mov
movsb
pusha
rcr
add
adc
loope
mov
cs
sar
mov
call
hlt
lcall
jmp
and
mov
mov
dec
push
adc
and
push
movsb
icebp
adc
or
sub
xchg
xchg
jns
dec
xchg
fdivs
idivl
or
dec
stc
push
stos
jns
push
and
or
ja
mov
mov
fcomps
je
mov
divb
mov
xchg
sub
cwtl
es
mov
sub
adc
setbe
dec
es
xor
pusha
rclb
push
push
or
push
sub
rcrb
test
cwtl
xchg
pusha
js
rol
xchg
fdivs
imul
mov
or
mov
and
push
movsb
cmp
mov
int
lods
mov
xor
mulb
cmp
cmp
push
cmp
dec
aas
es
xor
nop
push
adc
mov
je
ss
adc
ret
lods
jbe
mov
jno
lds
jns
stc
push
mov
xor
xor
es
shlb
loope
jnp
xor
mov
xor
ret
and
mov
ret
negb
sub
mov
xor
jmp
sub
mov
pop
xor
lret
lds
xor
popf
je
ret
insb
clc
sub
ss
mov
and
call
jg
fldenv
push
push
jns
mov
adc
es
cltd
orb
push
mull
jns
pusha
mov
test
xor
dec
cmp
pop
out
les
cmp
vpcmpeqd
fldl
jne
or
call
ja
mov
scas
std
insl
mulb
adc
scas
test
mov
jle
mov
push
addl
nop
js
test
sub
popa
push
inc
mov
lods
sti
iret
xor
cmp
pop
cli
jle
repz
sub
data16
cmp
and
push
mov
je
mov
sub
or
sbb
stc
pop
test
out
cmp
fistpl
and
ljmp
jmp
push
stc
xor
jo
push
jge
cwtl
cmp
das
pusha
outsb
addl
popa
or
cs
push
cmp
add
cmc
mov
xchg
rorb
mov
dec
mov
notl
xchg
and
jns
mov
std
pop
jne
xor
mov
test
test
sub
jne
jne
cmp
xchg
add
imul
xor
aaa
mov
dec
test
jl
dec
sub
lock
mov
idivl
jne
cwtl
mov
xchg
gs
jo
rcl
cmp
out
xor
stos
jbe
push
mov
dec
js
add
lret
pop
mov
jae
mov
sbb
aam
out
inc
jns
add
mov
or
insl
cmc
jo
sub
dec
xor
pop
mov
pusha
mov
nop
and
hlt
in
push
cmp
rorb
jb
ja
or
and
inc
jb
jne
or
jmp
out
adc
js
pop
cmpsb
cwtl
mov
hlt
lods
mov
mov
jae
test
adc
inc
inc
sbb
jne
fsubrl
idivb
or
sub
divl
jns
mov
pusha
pop
mov
and
sub
aaa
xor
cwtl
imul
jno
aaa
out
mov
in
jae,pn
inc
jecxz
ja
xor
xor
imulb
ss
adc
mov
inc
sahf
jecxz
sub
xorl
push
jb
mov
mov
stos
jne
cmp
cltd
test
shlb
loope
ja
mov
dec
xchg
jbe
hlt
js
jmp
and
in
out
adc
xor
cmc
xor
sbb
js
mov
inc
pusha
hlt
jae,pn
mov
repz
je
clc
xchg
insb
add
mov
sub
jbe
inc
or
xor
dec
xchg
je
jb
push
xor
ss
scas
scas
mov
into
mov
decb
mov
out
dec
lods
mov
jbe
js
sbb
cmp
call
addb
addr16
mov
and
scas
aaa
js
in
imull
xlat
scas
loop
ss
std
jbe
xor
jb
and
mov
cmp
hlt
js
mov
or
mov
and
mov
sbbl
push
xor
pop
xor
cmp
mov
divb
hlt
cmp
hlt
inc
test
xor
mov
mov
cmp
addb
push
aad
push
push
stos
cmp
mov
mov
in
movsl
insb
xor
add
out
popf
mov
dec
xchg
in
cmp
fmul
fs
stc
data16
pop
cld
inc
repz
push
xorl
mov
cmp
or
test
mov
mov
js
icebp
mov
lea
aaa
repz
jns
sbb
lret
imul
sarl
cmpsb
stos
sub
cld
push
adc
sbb
imul
lea
das
push
cmp
stos
sbb
lret
call
gs
push
push
sbb
inc
and
xor
call
mov
jp
call
push
icebp
sub
mov
mov
imul
or
cmp
inc
daa
mov
repnz
mov
add
cltd
ret
inc
cmp
cmp
adc
lds
pop
mov
push
aam
daa
negl
aaa
js
inc
and
sarl
pop
bound
and
dec
dec
xor
icebp
mov
mov
pop
sub
sub
addr16
js
es
lret
sarb
cmp
jns
ret
fwait
xor
adc
hlt
inc
rcrl
cwtl
mov
cmp
gs
xor
aad
push
push
movsl
es
pop
addr16
sarb
mov
subl
aaa
sub
fstenvs
aaa
cmc
ret
add
repz
xchg
cli
js
clc
js
rcrl
int3
mov
je
mov
sub
mov
push
test
xchg
push
fcmovnb
shlb
mov
mov
xor
mov
cmpsl
mov
xor
mov
enter
ja
fbld
jecxz
insl
pusha
mov
push
cltd
pop
lcall
clc
jne
test
mov
shrb
mov
mov
stos
js
es
fists
in
inc
adc
dec
mov
fs
aaa
sub
add
lret
dec
adc
jae
mov
cmp
sub
ret
stos
cmp
idivb
cmp
es
cmp
js
cmp
ja
mov
std
pop
ljmp
repz
pusha
mov
adc
mov
add
clc
cmp
notl
mov
stos
mov
cmc
push
cmc
mov
push
mov
or
push
hlt
adc
fwait
mov
ss
ss
cmp
mov
repnz
lret
test
in
enter
shrb
adc
or
mov
js
push
ss
std
or
fcmovnb
pop
js
mulb
pop
add
xorb
fimuls
mov
jae
fcmovnb
pop
imul
notl
js
mov
add
imull
js
xor
push
js
mov
pop
sbb
hlt
xor
cmpsl
jb
mov
pop
cmc
mov
sub
cmp
clc
mov
pop
sbb
mov
xor
aaa
rorl
lahf
jbe
repnz
jae
mov
push
cwtl
lea
pop
xor
lret
test
mov
push
push
mov
pusha
or
adc
icebp
repnz
hlt
and
js
push
inc
cmp
xor
lds
clc
and
inc
lret
push
cmp
mov
pusha
ds
jns
inc
jae
xor
or
mov
xor
jbe
mov
ja
leave
rcrl
push
mov
inc
cmp
lret
dec
hlt
scas
dec
xor
ret
push
daa
jbe
fcoms
jle
stc
mov
cld
repnz
mov
lahf
jl
inc
mov
mov
nop
lret
jb
lahf
jecxz
mov
js
sti
js
adc
inc
in
xor
pushaw
xor
dec
int
pop
sub
cmp
in
adc
hlt
and
cmc
clc
push
and
xor
jno
jns
sbb
and
fsubrs
lret
mov
stc
rcr
mov
test
push
iret
cmpsb
je
xor
xchg
rcrb
adc
test
cmc
ss
sub
repz
cmp
push
mov
add
test
cs
xor
and
out
std
int
popf
sub
sahf
push
aam
fs
mov
push
in
sub
mov
ds
mov
clc
and
lret
lahf
pop
fs
xor
ja
negl
pusha
push
loop
popa
sbb
push
mov
cmp
push
into
stc
imul
lods
pusha
mov
adc
push
cld
fs
mov
jmp
xor
shlb
outsl
lods
cltd
mov
jbe
xor
lret
sbb
bound
aad
repz
push
clc
mov
cmc
cmp
push
lahf
dec
icebp
imul
ja
cmp
pusha
sub
imul
aaa
cmp
xor
pop
js
push
mov
inc
inc
daa
xor
inc
xorb
sub
jo
ss
mov
jg
fs
imul
imul
js
adc
dec
lea
dec
je
mov
out
jo
std
cmp
ja
xor
pop
dec
cwtl
pop
fimuls
push
jb
mov
sub
ss
or
pop
mov
push
std
stc
xchg
push
xchg
and
ficoms
sahf
xor
add
lods
add
push
inc
and
xor
sub
fbstp
dec
daa
in
sbb
adc
cltd
mov
enter
xchg
mov
nop
ja
push
in
cltd
sub
add
stos
fdivrl
in
sub
xor
fcomp
cld
out
xchg
pop
insb
addr16
cwtl
pushf
adc
mov
je
push
es
pop
adc
xor
dec
pop
jle
jne
call
mov
or
scas
xrelease
divb
push
xor
jnp
xchg
les
jno
mov
mov
test
adc
and
mov
push
divl
cmpsb
mov
out
insb
add
fdiv
sub
out
jb
push
inc
es
and
js
inc
lods
divb
push
mov
jns
cwtl
sahf
jmp
add
pop
adc
ds
sbb
push
mov
idivb
mov
addl
sti
or
adc
and
adcb
js
je
add
mov
adc
push
mov
mov
aaa
adc
in
mov
and
adc
xchg
push
test
sub
xor
out
push
jo
scas
test
mov
divl
jns
mov
xchg
adc
rcl
imul
mov
cmp
push
je
sub
xchg
repnz
adc
and
mov
imul
clc
and
js
sub
outsl
xor
or
sub
jbe
push
mov
idivb
xor
cmp
das
sbb
push
sub
mov
cwtl
out
xchg
sub
inc
push
and
aam
inc
stc
adc
mov
mov
cmpsl
pop
bound
xor
pusha
sti
adc
pop
cwtl
jae
pop
std
repz
mov
sub
bound
cmc
sub
cmp
cwtl
es
fsts
mov
add
xchg
or
pop
mov
ret
cmc
idivl
fistps
jns
mov
outsl
mov
enter
mov
inc
jns
mov
mov
or
leave
xchg
enter
js
mov
scas
mov
cwtl
push
popa
lds
xchg
shlb
mov
mov
jae
add
sbb
sub
pop
sub
add
jne
shll
xchg
xchg
jbe
mov
jns
sub
test
ret
hlt
cwtl
popa
out
push
sub
out
xor
pop
bound
mov
fs
mov
jle
fstps
daa
cwtl
or
stc
push
cwtl
cwtl
xor
mov
test
mov
pusha
xor
mov
jns
fldenv
cltd
and
bnd
mov
adc
mov
pop
js
divb
push
sub
test
adc
mov
cwtl
and
rcrl
push
aas
js
pop
ja
and
sub
adc
cltd
push
pop
daa
ja
cwtl
jmp
loop
jbe
mov
daa
dec
adc
mov
nop
xchg
mov
testl
add
xor
push
out
inc
pop
imul
cwtl
lds
push
adc
and
pop
sarb
movsb
add
fldenv
mov
fidivs
xchg
mov
and
adcb
mov
pop
push
data16
push
sub
test
push
imul
ss
mov
sub
adc
cwtl
push
clc
scas
adc
dec
xor
mov
les
push
jl
test
push
or
jns
clc
into
and
add
add
pop
ret
in
or
sbbb
js
mov
test
cwtl
jns
mov
or
adc
js
jne
lods
push
cltd
fs
mov
ret
sub
xlat
leave
xchg
xor
xchg
and
jo
nop
jno
es
adc
xor
mov
mov
pop
or
stc
iret
sbb
rclb
sbb
cwtl
cmpb
fnstenv
vpbroadcastq
fwait
sbb
ljmp
ja
adc
hlt
adc
add
xor
mov
outsb
push
sub
mov
das
xor
lods
cltd
push
js
push
xchg
xchg
add
jle
aam
xchg
arpl
ret
aaa
sub
jns
mov
js
add
push
xchg
pop
cwtl
xor
mov
pop
sar
rol
jne
cwtl
and
enter
fisubrs
out
ret
pop
and
mov
and
clc
pop
sbb
mov
add
cwtl
mov
cmp
insb
and
stos
jbe
pop
xchg
adc
call
idivb
jae
dec
mov
movaps
sub
loope
push
jbe
nop
popa
ret
mov
jb
repnz
nop
mov
mov
aad
mov
es
lods
adc
hlt
xor
lret
sub
jae
add
aaa
cwtl
fwait
jae
xor
cmpsb
cwtl
jb
and
cmp
push
xlat
je
push
repz
push
insb
jb
adc
xor
xchg
cmpsb
js
inc
ja
or
pop
jge
rorl
push
cld
or
in
dec
repnz
std
mov
cld
dec
xlat
mov
lahf
mov
pop
mov
repnz
pop
mov
jle
cld
rcl
jg
ret
scas
add
inc
jns
roll
test
cltd
mov
mov
dec
aam
pop
and
cmc
mov
pop
cmp
jbe
repz
add
mov
mov
test
mov
push
adc
rcrb
push
mov
cmp
sub
xor
in
cmp
shr
cwtl
es
ljmp
mov
sub
mov
hlt
sub
imul
mov
and
or
nop
pusha
stos
push
icebp
cs
pop
mov
fidivl
push
or
int3
inc
sub
mov
dec
js
adc
cmp
mov
push
or
cmp
xchg
add
dec
jb
outsb
insl
enter
push
and
push
jno
mov
ret
xlat
mov
jns
dec
stos
inc
cwtl
out
repnz
lds
dec
jns
lock
cmc
inc
cmpsl
fsub
iret
jl
xchg
out
lock
sub
or
aas
push
mov
jne
jle
jno
mov
and
fistpll
and
mov
xchg
cmpsb
adc
push
mov
sbb
pop
pop
in
pop
pop
enter
inc
stos
in
mov
sti
mov
cld
push
add
push
push
mov
test
imul
cmp
int3
cmpsb
sbb
xchg
mov
loop
mov
and
stc
lea
and
stos
xchg
sahf
rcrl
dec
sbb
adcb
sub
cmpl
jp
sbb
sbb
es
adc
pop
dec
jl
rclb
cmp
into
mov
cmp
std
xchg
jle
pop
jl
mov
jae
repz
nop
aas
mov
daa
cmp
sub
inc
jnp
fisubrs
sub
adc
mov
test
dec
or
inc
jbe
outsb
push
add
fistps
jb
mov
dec
inc
dec
dec
xor
cs
insb
add
xor
lods
sbb
sarb
cmpsl
cmpsb
stos
loope
mov
pop
idivb
mov
mov
stc
xchg
mov
jbe
stos
repz
jo
mov
out
cmp
jns
enter
xchg
out
sub
andl
pusha
imul
xor
cwtl
lds
sbb
dec
mov
xor
stos
clc
iret
sbb
repz
push
jne
add
and
aam
xlat
arpl
inc
es
movb
push
lea
jne
bsr
or
jmp
push
adc
sbb
mov
aad
push
jbe
nop
mov
sbb
xor
daa
addl
push
jnp
outsl
out
cmpsl
movsl
push
mov
xlat
push
pop
mov
not
outsl
psubw
cmc
fisubrl
mov
pop
ret
sub
mov
mov
in
in
inc
inc
cmp
decb
daa
xchg
cmp
xor
or
addr16
cld
push
mov
jae
fsubr
out
icebp
wrmsr
outsl
addr16
repz
pop
lods
adc
hlt
pushf
lea
jmp
mov
xchg
arpl
jo
mov
pop
add
sub
out
loop
jmp
mov
insb
jp
out
mov
jge
sub
popf
or
andb
aaa
roll
imul
xor
imul
inc
sub
mov
add
mov
pop
pusha
ds
xchg
fs
cmp
cmpsl
cmp
scas
repz
inc
int3
rorl
test
adc
sub
cmp
fwait
clc
cmc
imul
call
push
pop
mov
mov
outsb
sub
or
das
lock
aad
sbb
xchg
leave
ss
pushf
push
xchg
adc
sub
jb
dec
inc
push
repz
call
dec
andl
arpl
out
jns
fstp
jno
insl
cmp
fstl
sub
cmp
mov
lahf
add
cmc
jae
inc
xchg
outsl
fsubrp
push
fs
stc
daa
repnz
mov
and
js
pushf
pusha
movl
push
movl
push
movl
movl
movb
lea
jmp
pop
mov
and
dec
push
jno
inc
inc
mov
dec
jb
cld
movsb
pop
jb
dec
mov
jno
dec
js
mov
jne
movl
inc
xlat
test
mov
stos
repnz
adc
lea
inc
scas
das
stos
test
aad
mov
or
xrelease
jnp
stos
filds
inc
xchg
arpl
pop
jl
xor
rclb
repz
movsb
jp
data16
xchg
xor
loop
es
xchg
add
in
inc
shl
lock
dec
gs
popa
addr16
outsl
js
add
dec
scas
mov
xchg
push
ljmp
dec
fwait
out
mov
xor
imul
fwait
mov
fisubs
cmp
mov
outsb
rorb
xlat
xor
mov
stc
push
aas
inc
jns
bound
shr
imul
in
dec
hlt
getsec
xchg
mov
dec
mov
arpl
inc
cmc
jmp
mov
mov
loop,pn
add
mov
push
ret
and
or
mov
jge
mov
imull
ljmp
in
sahf
into
dec
jmp
mov
inc
call
jecxz
fdivs
mov
testb
adc
pop
rclb
rcl
cltd
mov
xchg
inc
mov
mov
jnp
fwait
andl
mov
stos
xor
lock
xor
mov
dec
pop
jle
in
fnstsw
sahf
cmpsb
in
gs
pop
adc
ljmp
pop
loope
imul
adc
filds
out
aad
and
fsubl
cmp
jnp
sbb
push
or
adc
nop
int
cltd
dec
jo
insb
dec
hlt
push
imul
pushf
mov
movl
movl
pusha
mov
pushl
movl
pushf
mov
pushf
pushf
lea
jmp
jmp
mov
aas
mov
xchg
loopne
xchg
pop
xor
mov
daa
jmp
mov
mov
sbb
add
cmp
pop
imul
dec
xor
test
filds
push
out
pop
push
jg
fdiv
mov
pop
decb
adc
movsl
sbb
dec
pop
sar
xchg
jp
gs
ficompl
cmp
loope
and
ret
stos
mov
lock
stos
subb
rorb
and
out
insl
sub
xorb
cli
mov
mov
xchg
xor
push
fsubl
fistps
mov
sbb
mov
repnz
pop
inc
scas
lret
cmp
sti
xchg
pop
rcll
cmp
and
lock
fistpll
mov
adc
fadd
nop
fldcw
mov
fsqrt
fisubrs
scas
pop
lock
movsb
add
mov
adc
add
add
adc
pop
pop
lea
call
pusha
jmp
sbb
stos
mov
xchg
xchg
xchg
jmp
into
mov
sarb
dec
mov
call
dec
pop
jecxz
fmull
mov
xlat
add
stos
in
cmp
sbb
lcall
mov
inc
test
add
lret
insb
nop
fsts
cltd
mov
or
xchg
mov
sahf
push
jp
test
inc
hlt
shll
adc
aaa
mov
cmp
in
dec
call
pusha
cmp
call
popf
jo
mov
xchg
out
aam
aaa
test
mov
jp
clc
sub
mov
and
add
dec
xchg
das
xchg
jmp
fdiv
push
add
scas
sarl
in
vpcomud
dec
mov
sti
add
iret
insl
jle
mov
inc
loope
push
mov
jp
pop
adc
cltd
test
or
xchg
jecxz
jns
jg
fs
cmp
push
or
dec
in
arpl
into
xchg
pop
or
mov
maskmovq
negl
adc
mov
ljmp
push
xor
adc
xor
cld
movsb
push
loope
jecxz
and
addr16
xor
or
stc
jp
dec
das
call
ds
push
mov
or
rorl
pop
notl
inc
decb
sub
adc
jg
jge
ret
xchg
sbb
sbb
push
into
ljmp
fwait
popa
mov
xchg
pop
pop
loopne
movsl
loop
jmp
cs
xchg
push
das
push
mov
int3
orb
pop
push
sbb
popf
repnz
arpl
cmpsl
cltd
pop
adc
adc
push
sbb
xor
idiv
push
je
rcrb
test
xchg
lods
xchg
push
and
inc
jge
pop
lcall
mov
sbb
add
and
pop
stc
mov
push
vunpckhps
daa
sbb
pop
mov
cs
or
inc
std
adc
scas
sti
ja
frstor
sub
lods
inc
stc
fiadds
cmp
xchg
or
mov
fs
dec
mov
insl
test
outsb
andb
outsb
xor
sub
lea
stos
inc
xchg
ljmp
sbb
cmpsb
jmp
fwait
pop
lock
cmp
out
js
xor
call
mov
dec
ljmp
jnp
push
not
call
cmc
rol
cmc
xor
add
add
ror
cmp
xor
movb
setp
pusha
dec
call
inc
jmp
dec
cld
add
mov
pop
xor
mov
pop
adc
vcvtsi2ssl
mov
dec
sbb
mov
addl
xchg
dec
ficompl
lods
adc
or
push
or
mov
and
mov
jae
sti
push
cmp
xchg
das
mov
pop
cmpsl
inc
repz
sbb
cs
js
repz
mov
mov
not
mov
call
rcr
bound
cld
push
inc
das
je
xor
mov
jp
and
cmpsb
cwtl
sarl
xchg
std
pop
and
jp
and
lds
je
das
in
pop
mov
daa
iret
push
aaa
push
pop
cs
sub
cmp
push
arpl
inc
popa
dec
incl
rcrl
aas
outsb
xor
pop
xchg
out
mov
insb
fwait
add
xchg
push
inc
out
in
popf
pop
mov
sahf
inc
les
or
add
int
cltd
mov
add
or
sbbb
std
in
sbb
aad
inc
fidivs
mov
mov
loope
aad
sbb
je
clc
popa
hlt
sub
or
scas
sub
out
push
mov
repz
in
sbb
add
fsubs
fs
xchg
dec
xchg
test
test
jb
fstpl
test
xchg
jmp
adc
sub
in
mov
xchg
inc
insb
xchg
in
mov
push
subl
test
ljmp
cwtl
cld
sub
les
add
imul
pop
in
add
dec
push
fsts
lret
fdivr
mov
enterw
out
or
push
xchg
dec
je
lret
imul
pushf
bt
push
add
push
pushl
pusha
pushl
lea
jmp
sub
xchg
and
xchg
xchg
push
adcb
xchg
aad
lret
dec
add
mov
cmp
pop
rorb
leave
xchg
sahf
adc
out
pop
jl
cmpsb
faddl
out
cmpsl
loopne
and
mov
mov
cmpsl
popa
fdiv
ja
in
mov
or
jge
ljmp
adc
mov
in
cmp
repz
pop
cmp
mov
xchg
mov
enter
mov
push
repz
jbe
or
dec
mov
dec
xor
dec
xchg
cmp
scas
cmpsb
popf
push
sbb
mov
push
mov
rcrb
mov
shr
dec
enter
fs
ja
call
call
inc
test
sbb
ds
or
outsl
sub
sub
push
frstor
xor
xchg
dec
sahf
ret
cmp
xchg
repnz
xchg
ds
lahf
pusha
ljmp
or
add
add
icebp
sbb
jbe
enter
das
add
mov
pop
out
rol
fidivl
sbb
shrb
shlb
push
sub
hlt
fiaddl
addb
rorb
dec
dec
push
push
dec
dec
dec
cs
push
push
add
add
push
popa
jae
dec
gs
inc
insb
insb
outsl
arpl
fsts
sub
sub
sbb
dec
cltd
jno
into
leave
das
xchg
lret
movsl
jl
cmp
mov
outsb
test
jge
jmp
cld
mov
jbe
sub
jmp
sbb
insb
cmpsb
outsl
push
mov
jo
push
rcl
out
outsb
lods
dec
lahf
movsb
add
popf
push
jb
pop
in
in
ficoml
sub
xchg
sbb
mov
push
pop
jo
cmc
mov
sbb
push
out
test
arpl
sbb
movsb
shrl
js
fidivrs
cmpb
sbb
dec
xchg
enter
stc
sub
sub
insl
hlt
cmp
nop
mov
and
push
push
out
jl
jp
mov
inc
mov
cmpsb
aaa
or
adcb
mov
daa
mov
or
in
enter
jmp
jo
into
imul
les
std
insl
push
pop
aaa
mov
sbb
aas
sbb
std
in
loopne
dec
jb
arpl
or
hlt
jle
mov
xchg
scas
mov
pop
jl
mov
enter
dec
and
dec
fcmovnbe
jle
sahf
jecxz
jbe
push
xchg
leave
sbb
xor
insl
stc
xchg
stos
push
fsubr
daa
cmp
jl
cwtl
sbb
push
js
xchg
lcall
add
in
aad
push
aam
mov
jge
popa
inc
and
shl
dec
rclb
sahf
js
aas
test
lods
adc
mov
out
add
pop
add
loopne
icebp
decl
mov
mov
in
mov
test
jns
inc
adc
stos
nop
push
fimull
inc
cmc
daa
aas
sbb
adc
cld
inc
mov
out
pop
lods
lods
push
sub
mov
jne
mov
and
pushf
adc
cmp
int3
idivb
shll
sub
jmp
decl
out
mov
sbb
movb
rcrl
arpl
lods
push
push
int3
and
jbe
pop
pop
adc
int
xchg
fcomps
ljmp
or
dec
test
xchg
int
and
xchg
add
jp
pop
add
leave
xor
inc
push
ljmp
scas
and
pop
fsubrs
push
fadds
aam
jo
ret
imul
adc
subb
cmovbe
push
dec
push
mov
cmpsl
xor
int3
or
xor
xchg
lcall
sub
enter
xor
sbb
dec
pusha
leave
movsl
inc
and
call
inc
test
sbb
fwait
mov
jmp
sbb
repz
lea
dec
mov
int3
aam
negb
add
pop
jge
inc
outsl
cltd
adc
mov
inc
imul
test
mov
pushf
xlat
xor
sub
out
push
pop
scas
push
test
outsb
xchg
sub
into
ds
inc
fwait
ret
mov
or
mov
in
mov
adc
popa
gs
mov
in
lret
push
add
icebp
mov
dec
jnp
sahf
sbb
jge
loop
adc
mov
aas
sbb
add
inc
gs
jo
outsb
inc
imul
add
lods
daa
jl
cmp
push
lea
je
pusha
mov
pushf
lea
jmp
out
fdivrl
inc
cmp
in
and
push
mov
jnp
xchg
gs
mov
cmp
xchg
lock
popa
dec
adcl
sahf
hlt
pop
gs
imul
icebp
jb
push
cmp
std
and
jo
fcmovnb
and
loopne
push
fdivp
imul
lock
mov
push
xchg
lret
lea
dec
add
push
adc
xchg
mov
xor
in
fcoml
lds
ret
sbb
int3
out
adc
sub
mov
cltd
and
xchg
sbb
xchg
or
in
movsl
filds
imul
mov
xor
sbb
adc
ljmp
pop
mov
outsl
inc
add
cli
sub
add
dec
cmpsl
ja
or
add
fidivrl
jmp
orl
lcall
mov
xor
push
sbb
call
std
mov
mov
and
fsubs
js
test
cmp
lds
sbb
xchg
enter
shll
push
insl
pop
cs
cmpsl
lds
sbb
int3
jne
lods
pop
repz
mov
xchg
cs
push
ljmp
jo
mov
sbb
mov
pop
fnsetpm(287
rcrb
mov
mov
divl
xchg
and
gs
aam
xor
hlt
and
jg
cltd
sub
push
inc
push
fiaddl
pop
sahf
into
repnz
sub
push
jl
cs
push
pop
mov
pop
fildll
and
out
lds
mov
mov
mov
jbe
pop
test
mov
mov
and
add
and
cmp
mov
lcall
push
push
lea
jmp
movb
pushf
jmp
cltd
pop
jg
sbb
mov
cmp
lea
leave
or
cmp
xchg
fbstp
pop
dec
inc
jne
fs
adc
out
jp
and
aad
mov
add
std
add
aaa
loop
cmovs
in
loopne
inc
out
fmul
mov
nop
push
sbb
jne
dec
outsb
mov
adc
fisubrl
aam
das
repnz
add
sbb
sub
mov
sub
push
xor
pop
nop
sub
pop
je
out
mov
xchg
fcmovu
xor
push
dec
ja
inc
sub
fbld
and
js
xchg
loop
push
mov
mov
dec
ret
fsubs
sbb
fwait
dec
sub
call
mov
dec
and
sbb
jecxz
push
fucom
sbb
sbb
pop
xor
add
mov
mov
and
adc
leave
loop
cmp
outsl
jl
jnp
sub
nop
push
xchg
addr16
xchg
aad
xor
xchg
adc
adcl
in
jno
stc
movsl
das
push
and
pop
das
adc
icebp
cmp
sbb
lds
aaa
cmp
cmp
cmp
mov
xor
mov
cmp
fistpll
fistpll
cmp
mov
cmp
fistpll
mov
fistpll
cmp
cmp
mov
mov
fistps
push
jmp
pushl
lea
je
pusha
pusha
movw
pushf
lea
jmp
aaa
rcrl
ret
les
jo
or
jg
push
aad
pop
aas
jecxz
cli
cmpsl
push
inc
andb
or
test
insl
test
xchg
out
adcb
push
sub
sbb
stos
daa
outsl
add
fdivrs
xlat
outsl
dec
mov
or
call
pop
je
xor
pop
mov
insl
inc
mov
dec
mov
sbb
test
out
mov
fcomps
fsubrp
add
xlat
xchg
aam
push
mov
cmp
mov
mov
nop
mov
out
add
leave
call
add
sub
adc
pop
lock
das
sbb
test
and
fadds
loop
icebp
enter
shrl
jb
pusha
aaa
add
mov
test
sbbl
jnp
stc
rcl
shl
xlat
xchg
push
into
sub
mov
mov
mov
add
lahf
cmpb
ror
dec
pop
add
and
aaa
cmp
stos
ficomps
push
shlb
jg
push
lahf
mov
push
push
dec
nop
mov
mov
daa
jp
stc
fadds
pop
add
in
mov
inc
insl
fdivrp
and
hlt
mov
mov
fsincos
or
pop
fs
sub
stos
dec
pop
repnz
sub
add
stos
mov
push
ret
in
sbb
sbbb
lcall
and
arpl
lcall
cmp
sbb
daa
repz
test
xor
in
pop
test
mov
divb
nop
cmpb
inc
rol
outsb
pop
push
push
jecxz
pop
aaa
pcmpgtb
mov
sub
mov
nop
mov
inc
stos
add
xchg
loop
jle
xchg
mov
pop
dec
lods
icebp
inc
sbb
mov
mov
cmp
inc
les
xchg
and
rcrb
and
sub
push
mov
ss
adc
mov
aad
in
dec
ret
cltd
sub
pop
pop
push
arpl
xchg
rcrb
bound
clc
mov
push
and
sahf
xchg
lods
mov
mov
dec
bound
jmp
dec
pop
fbld
cwtl
and
sub
cmc
xchg
push
sub
subl
test
cmpsl
aaa
cmp
xlat
mov
pop
push
in
mov
icebp
xchg
adc
mov
add
inc
mov
les
subb
jle
les
adcb
inc
pop
jo
rol
xchg
popa
fiadds
sub
aaa
js
addr16
add
adc
mov
test
rcrb
shlb
test
or
adc
in
cmp
enter
ficompl
incb
ret
mov
clc
ret
mov
pop
call
lock
sub
je
push
repz
repnz
jge
mov
scas
push
movsb
test
pop
or
std
or
imul
sbb
push
mov
daa
mov
pop
mov
push
sbb
aad
mov
lods
xor
push
sbb
and
enter
and
in
cmp
or
enter
push
pop
xor
jnp
pop
push
pop
inc
movsb
mov
sbb
enter
jne
mov
xor
sbb
cmp
in
adc
loop
adc
sbb
and
loopne
or
lods
jle
mov
cli
jb
cltd
cmpsb
repz
mov
and
test
push
mov
je
test
movsb
loope
inc
aas
mov
mov
mov
push
push
sub
addr16
lods
xor
lret
es
mov
xchg
repz
cwtl
sub
dec
das
pushf
mov
sbb
sbb
xchg
xor
clc
les
adc
jp
insl
mov
cltd
inc
inc
mov
leave
iret
mov
fdiv
mov
adc
push
pop
orl
repz
nop
movsl
cmp
mov
fs
fs
subl
and
add
out
cs
cmpsl
popf
sbb
sub
add
lret
push
lea
popa
shrl
add
or
mov
xor
adcl
fs
lods
test
cli
mov
pop
pop
aam
jb
cmpsb
enter
std
nop
dec
dec
adc
insl
mov
aad
data16
imul
mov
std
inc
pop
sbb
or
add
pop
aas
cmp
movsb
cltd
push
loopne
sub
in
mov
cmpsl
lret
imul
cli
leave
add
push
mov
clc
fsubrl
push
cmovs
jnp
cmpsb
out
fucom
in
movsl
shl
mov
outsl
sub
mov
inc
push
fdiv
mov
xorl
insl
cmp
sub
cwtl
sub
fs
inc
dec
in
mov
jo
mov
and
xor
shrl
movsb
mov
push
push
pusha
jmp
mov
xchg
push
ljmp
cmp
add
push
or
int3
orb
push
aas
dec
popf
cmp
int
fwait
mov
hlt
inc
push
lret
mov
loop
cs
inc
test
cmp
mov
es
es
scas
repz
cltd
mov
dec
cmpsl
je
iret
imul
sub
sbb
aaa
xchg
sub
add
jb
jne
insb
inc
jb
add
xchg
pop
sbb
dec
stos
dec
lea
inc
into
sahf
mov
and
fwait
cmp
into
jl
mov
add
cmpsl
mov
mov
mov
add
icebp
pusha
mov
cmp
push
jmp
xchg
popa
cmp
mov
inc
loop
test
lock
sub
sahf
iret
pop
mov
mov
cmp
mulb
out
pop
cmp
int
add
pop
mov
mov
sub
pop
or
imul
jmp
enter
adc
dec
out
sbb
sbbl
lahf
add
pop
cmp
cmpl
enter
lea
push
jb
mov
xchg
jecxz
scas
jmp
dec
lods
lods
shlb
cmp
bound
rcrb
mov
push
jle
sbb
mov
cmpsl
and
push
push
xor
shr
and
sbb
sbb
popf
xor
aas
and
sub
ljmp
lret
jbe
mov
mov
rorb
lea
jne
cmp
btc
pushf
mov
mov
cmp
pushf
pusha
add
pushf
movzwl
bswap
mov
cmp
movb
mov
call
lea
jne
pusha
pushf
call
lea
jne
dec
lea
shld
pusha
xor
pusha
mov
xor
inc
shl
add
shl
or
add
rcl
mov
call
lds
lods
adc
or
adc
mov
push
addr16
push
cmp
pop
pusha
scas
push
popf
sub
mov
add
iret
sub
out
jne
xlat
jg
fmul
sbb
arpl
xchg
loope
js
cmc
fstpl
scas
xchg
mov
ja
sub
push
jbe
mov
cltd
out
mov
lds
cmp
xor
and
repnz
sub
lds
sub
in
push
cmp
or
and
mov
roll
mov
mov
lods
jno
cwtl
je
das
scas
inc
pushf
shr
mov
mov
bt
cmpb
pushf
pusha
lea
jne
not
xor
das
mov
cmc
and
setg
bt
add
inc
shr
mov
stc
test
pushf
call
jmp
xchg
mov
push
popfw
ret
gs
ss
xor
pop
cld
jbe
es
mov
cmp
cwtl
arpl
lret
sbb
cltd
fbld
cs
fimuls
sarl
mov
scas
add
push
jmp
ja
push
hlt
mov
std
add
cmp
xor
ftst
and
jmp
push
test
mov
aam
cmp
xchg
fwait
inc
xlat
dec
popf
daa
test
mov
mov
xchg
jecxz
jmp
xchg
dec
test
das
push
insb
push
cltd
mov
push
xchg
xor
fidivrs
push
mov
ss
xchg
shlb
pop
adcl
sbb
push
jo
fcomps
mov
fwait
mov
cmc
and
fneni(8087
mov
sbb
lret
stc
mov
adc
mov
test
sbb
mov
and
xor
inc
mov
stos
add
inc
xor
lds
adc
or
mov
and
jne
lea
shl
neg
pushf
mov
btc
sub
shl
lea
pushl
cmc
sub
test
pushf
pushl
popl
pusha
movb
cmp
jmp
pusha
lea
jne
cwtl
movb
lahf
cwtl
push
mov
lea
pusha
call
rep
push
mov
pushf
push
mov
lea
jmp
cmp
test
call
fcomi
sti
lret
sbb
or
xor
les
icebp
sar
stos
and
push
fwait
xor
pop
pop
adc
ss
leave
lret
mov
inc
sar
int
shrb
test
fcom
mov
ljmp
and
rorb
stc
insl
add
shll
pop
fistpll
sahf
xor
les
sbb
cmpsl
ja
add
cmp
add
shld
push
mov
hlt
dec
rcrl
mov
mov
sbb
xor
std
sbb
divb
pop
add
lahf
and
push
xor
xchg
jns
rolb
push
dec
or
xchg
enter
sbb
lcall
adc
and
mov
sahf
inc
xor
fdivr
sub
adcl
adc
jo
aam
adc
mov
stc
mov
mov
or
mov
push
sub
aam
mov
pushf
hlt
pand
dec
xchg
into
or
mov
dec
sub
sbb
cmpsb
fs
dec
lds
sbbl
fwait
xor
sahf
inc
jg
dec
xor
pop
ja
testl
push
or
jno
dec
inc
aas
lahf
pop
hlt
pop
std
and
sub
cmp
cld
push
clc
in
sub
adcb
aaa
js
add
or
shr
outsb
dec
mov
cmc
in
pop
clc
sbb
fs
mov
jo
push
cmp
test
pop
pop
shll
rcr
popa
push
shrb
inc
and
or
dec
ds
call
xchg
scas
lcall
jns
lods
mov
in
xchg
xchg
inc
mov
enter
dec
add
addb
enter
jecxz
test
and
push
pop
mov
sbb
jnp
push
cmc
lods
inc
jmp
imul
and
jb
sbb
and
frstor
push
fsubrl
cltd
mov
dec
jns
mov
int
xchg
mov
inc
in
nop
dec
test
fnsave
xchg
pop
ljmp
xchg
sbb
js
mov
dec
lods
or
rcrl
sub
enter
ficoml
scas
and
pop
jbe
out
pop
cltd
out
jge
pop
pop
arpl
loop
or
pop
fcmovu
mov
cmp
jnp
mov
pop
sbb
cmp
orb
shrl
stos
push
iret
sbb
test
insb
jb
xchg
loope
fisttpll
ret
xchg
mov
xchg
faddp
stc
jle
xor
aam
mov
fucomp
jne
leave
inc
outsl
pop
call
mov
cmp
fwait
mov
add
mull
lods
inc
subb
push
ss
bound
cltd
cmp
mov
sbb
xchg
mov
in
mov
lock
das
adc
jmp
dec
xchg
rolb
push
aaa
in
and
xchg
xor
push
jp
or
xchg
jne
mov
icebp
daa
iret
sub
dec
call
insb
insl
inc
int3
adc
adc
dec
fistpll
adc
jae
fwait
xor
add
jp
ja
inc
pop
add
mov
popf
loopne
inc
fidivrl
lahf
inc
inc
dec
xor
cs
insb
add
cmpsl
inc
rcrb
xchg
cli
inc
ja
inc
movsb
outsb
adc
sub
adc
ja
xchg
cwtl
mov
mov
cmp
add
popf
mov
bound
mov
jno
pop
aad
aaa
add
pop
inc
rolb
pop
and
fwait
sarb
pop
or
ss
jb
sub
popf
add
mov
jno
add
loope
xchg
push
fldt
mov
sbb
xor
aaa
mov
cli
mov
test
inc
adc
jg
out
push
jne
mov
mov
adc
add
jge
inc
inc
and
cmp
ficomps
inc
testl
mov
push
test
jmp
lea
jnp
ja
pusha
cmc
sub
adc
bsf
sub
add
shld
dec
mov
mov
ror
stc
pusha
sar
mov
cmp
stc
call
add
pushf
jmp
or
sbb
call
push
into
mov
xchg
nop
movsb
add
pop
mov
orb
adc
ljmp
push
inc
clc
out
xor
push
lcall
int
push
fwait
mov
push
push
fsts
into
dec
hlt
lcall
mov
hlt
sub
mov
notl
pop
test
mov
rcrb
xchg
and
xchg
xorl
xchg
mov
test
test
xchg
ficoml
outsb
sub
popf
xchg
mov
or
fdivs
xor
jae
pop
stos
cmp
add
pop
cs
stc
cmp
mov
dec
popa
jge
ds
nop
popf
test
mov
or
mov
test
je
ss
sbb
pop
mov
call
cltd
dec
lock
in
adc
int3
inc
repnz
dec
setg
popl
jp
ja
and
outsl
inc
pop
push
pop
pop
xor
sub
mov
mull
push
mov
dec
mov
loope
ds
mov
outsb
xchg
insb
push
cmpsb
fwait
jl
mov
pop
incl
aam
push
push
rcl
xchg
cmpsb
mov
pop
es
xchg
cmpsb
jnp
push
xchg
out
sbb
cmp
add
jns
dec
pushf
push
push
je
cmp
sbb
rorb
or
jbe
jno
icebp
xchg
and
jle
inc
mov
cs
decl
cltd
pop
aam
and
dec
rcrl
aas
mov
xchg
jns
jns
mov
or
stc
bound
lahf
popf
dec
jb
lahf
pushf
imul
xor
sub
in
cmpsl
sbb
cmp
xchg
lahf
dec
bound
jo
test
or
sbb
and
xor
sub
push
js
mov
js
or
in
orl
scas
or
push
and
andb
jg
jo
insb
xchg
sbb
mov
insb
mov
aaa
in
loope
test
sub
sub
fcmovnb
mov
js
xor
clc
cmp
and
mov
shll
aas
aas
add
rcrl
shll
mov
jb
inc
lods
shrb
or
cltd
xchg
add
sub
ret
sbb
lock
inc
test
sbb
jbe
je
lret
js
dec
push
scas
push
push
aaa
test
or
sub
stc
repz
jno
sbb
es
das
and
rol
sahf
rcl
outsb
cwtl
sahf
cltd
inc
sub
push
mov
xor
jo
ss
adc
shll
cmp
clc
push
jle
jo
insb
clc
test
mov
ret
add
xchg
mov
lock
ret
inc
ss
adc
ss
xor
imul
jb
mov
shrb
sub
addr16
add
sbb
jbe
mov
xor
outsb
mov
push
add
sbb
repz
jb
ss
mull
pop
pop
jo
or
xor
icebp
or
mov
xlat
sbb
xchg
cmp
push
idivl
xor
scas
push
fcoms
sub
adc
cwtl
je
pop
gs
xor
inc
test
add
push
xor
dec
mov
pop
mov
jo
mov
add
lret
js
js
mov
repnz
je
xor
js
lret
adc
fcmovnu
loopne
ss
xor
cmp
dec
and
sub
sti
mov
mov
mov
mov
out
ss
ret
loope
mov
in
mov
mov
in
jmp
jge
pop
js
xor
shll
in
addr16
fcomip
popa
movsb
dec
js
sub
cs
xor
std
lds
jb
mov
std
js
out
cmp
js
xor
fcompl
pusha
fnstenv
sub
mov
push
sbb
cmp
dec
std
jg
jne
lret
pop
aas
fsubl
xchg
negl
mov
or
sub
cwtl
xchg
xor
stc
stc
jg
nop
mov
push
cwtl
int
mov
cwtl
out
idivl
es
adc
cwtl
cwtl
push
fs
sbb
scas
mov
adc
adc
dec
push
mov
sahf
jbe
push
and
dec
pop
lods
xor
xor
js
fildll
pusha
fildll
pusha
stc
jg
mov
adc
mov
lds
mov
pop
xor
clc
dec
das
data16
ror
sbb
leave
sbb
call
jbe
imul
pop
ret
ret
loop
cmp
mov
notb
pop
push
cmp
ja
jle
idiv
adc
shrl
mov
jnp
addr16
adc
popa
testb
pop
sti
sbb
insb
mov
inc
jbe
xchg
or
cmpsl
shll
test
nop
pop
data16
divb
xlat
adc
xchg
xchg
test
repz
mov
ss
xchg
mul
pop
loop
cmpsl
sbb
aaa
std
lods
push
add
pop
frstor
cmc
cmp
js
xchg
or
xor
ds
mov
and
add
add
and
hlt
js
mov
sub
push
aam
je
sub
imull
sub
sub
lcall
pop
mov
jbe
lods
ss
mov
pop
jbe
mov
test
pop
mov
pop
jno
popa
jbe
cmp
xchg
xor
xchg
repnz
add
jbe
lods
test
cmp
arpl
ljmp
shll
sbb
add
inc
and
xchg
dec
add
addr16
shlb
cmp
cmc
xchg
and
push
jge
lret
xchg
or
enter
sbbl
mov
jg
cltd
jne
enter
cmp
jno
mov
repz
imul
cltd
inc
mov
add
ljmp
mov
mov
sbb
fdivrp
jbe
popa
jb
mov
test
mov
push
testl
mov
test
sbb
cltd
cmpsb
add
push
cld
push
in
mov
fs
std
add
dec
add
xor
add
mov
mov
add
xor
sbb
inc
fistpl
mov
shrb
pop
xor
outsl
pop
inc
std
hlt
call
push
sbb
fs
idiv
call
ja
push
outsb
popf
cs
xchg
jle
sbb
mov
xor
call
xchg
jbe
pusha
movsb
js
mov
or
cmp
mov
cmp
pop
add
push
jne
jge
mov
out
pushf
pusha
add
outsb
adc
push
and
jmp
sub
ret
add
cmp
xchg
adc
cltd
mov
cmc
loop
jae
jb
add
in
mov
lock
adcl
jne
cwtl
inc
fidivl
loop
adc
jns
push
cwtl
fnstcw
jns,pt
es
popa
negl
xor
xor
xor
xor
adc
mov
and
dec
cmc
sub
testl
icebp
cwtl
mov
jno
testl
inc
divl
je
inc
scas
adc
xor
cmp
addr16
mov
adc
imul
cmp
cs
cwtl
jo
fcoms
mov
mov
dec
decb
dec
mov
pop
dec
out
push
push
mov
jne
xor
xor
inc
insl
mov
push
add
inc
es
mov
mov
push
hlt
cmpsb
jo
movsl
jo
push
mov
cs
or
xchg
push
cmc
add
popa
in
ja
call
mov
je
fidivs
lea
or
js
mov
dec
adc
push
jns
push
lret
pop
sbb
cmpsl
mov
sahf
sub
outsl
sub
movsl
out
mov
or
xor
dec
xor
fcoms
imul
sub
push
repz
mov
sbb
cmpsb
in
movsl
xor
cmp
dec
xor
push
bound
jmp
sahf
xor
pop
test
pop
je
pop
pop
dec
push
pop
adc
inc
push
ss
jo
jns
je
pushf
sub
mov
js
mov
jb
jl
inc
stc
fwait
dec
popf
jle
movsl
aaa
bound
dec
ds
add
test
aam
and
push
daa
sub
out
pop
pushf
jno
aaa
xor
imul
sub
fadds
or
pop
fadd
lock
xor
fsubs
scas
mov
mov
and
scas
jo
sbb
test
mov
movsl
sbb
mov
fstpl
mov
aam
jne
mov
mov
outsb
mov
dec
aas
dec
pop
jns
or
ja
adc
aam
add
nop
mov
pop
pop
je
stos
mov
mov
xor
out
or
jbe
mov
push
and
rcr
xrstor
outsb
nop
lods
mov
test
sub
ds
fisubrs
pop
nop
sahf
xchg
mov
pop
cmpb
mov
ret
sub
fidivs
negl
jle
repz
stc
adc
cltd
mov
jns
pop
or
mov
mov
cmpsb
js
mov
sbb
aam
mov
push
mov
push
and
and
fcoms
inc
iret
pop
data16
or
aam
mov
sbb
adc
js
or
enter
js
js
xchg
cmp
std
shll
ja
int3
mov
cwtl
push
out
pop
cmpsl
stc
or
aam
mov
scas
push
and
jae
sbb
sbb
and
les
in
push
or
pop
imul
sbb
and
pop
inc
dec
mov
push
ja
js
repnz
add
xchg
xchg
xor
pop
push
mov
or
cmpsb
rorl
ja
mov
cs
sub
push
les
and
imul
jae
push
insl
stc
shrb
xchg
scas
sub
push
mov
fsubs
sbb
mov
inc
mov
dec
ss
in
cwtl
cmp
dec
inc
or
sbb
lahf
xlat
jno
xchg
addr16
cwtl
nop
shll
cltd
xorb
in
add
leave
xchg
xor
lcall
mov
mov
popw
pop
aad
mov
insl
xor
sub
icebp
cmp
imull
outsl
rolb
out
pusha
pusha
jb
pop
arpl
xor
xlat
jbe
mov
fwait
add
xor
je
sbb
mov
push
out
and
push
pop
adc
mov
aad
xor
add
push
lret
sub
je
mov
mov
mov
je
aam
mov
pop
adc
into
sbb
cmp
ficoms
aad
sbb
mov
out
or
dec
lock
pop
sahf
mov
pop
cmc
out
xor
jo
in
outsb
jo
leave
adc
or
xor
sbb
xchg
sub
xchg
cmpsb
xchg
pop
push
clc
lods
cmp
out
outsb
mov
mov
jl
outsb
std
push
hlt
xchg
test
xchg
xchg
jne
idiv
xchg
sbb
pop
xchg
mov
pusha
movsb
insl
test
enter
fsubs
test
aam
lea
mov
xor
dec
ss
cmpsb
push
stc
orl
push
pop
adc
sub
sbb
mov
sti
inc
popa
xchg
outsl
or
xor
adcb
push
jge
jae
mov
lcall
test
jb
mov
add
sbb
jbe
out
add
xchg
adc
add
lret
xchg
inc
jle
adc
test
adc
push
sbbl
imul
jmp
sub
push
xchg
and
fcomp
mov
adc
mov
je
adc
add
divb
stc
in
stos
mov
fwait
mov
cmpsb
dec
lods
push
out
mov
mov
push
pop
testb
mov
iret
xchg
test
push
sbb
ja
flds
mov
jo
daa
dec
pop
xor
adc
inc
mov
dec
inc
jno
mov
jo
jmp
xchg
adc
mov
push
pusha
jbe
out
lods
xor
pusha
orl
ljmp
sbb
js
and
jl
fwait
dec
push
cmp
adcl
xor
adc
ficoms
ljmp
cmpsb
test
adc
fmulp
jno
jns
xchg
xchg
push
and
xor
dec
and
pop
jns
push
hlt
cmp
sti
pop
push
out
mov
hlt
imul
xor
sahf
nop
aaa
adc
daa
pop
mov
pop
adc
pusha
inc
xchg
jb
aas
pushf
jne
mov
cmpsl
pushf
add
xor
push
mov
mov
jle
pop
hlt
dec
into
sbb
loop
xor
add
leave
fdivr
xor
sub
jb
adc
dec
js
sub
enter
stc
jl
enter
mov
sahf
call
xor
movb
cmp
push
adc
adc
cmp
mov
js
aaa
mov
sub
iret
pushf
push
pop
popa
mov
add
push
dec
les
adc
xchg
jb
ljmp
dec
insl
cmpsb
sub
mov
dec
push
and
movhps
jo
cltd
ja
xor
sub
inc
shlb
xor
ds
jecxz
stos
pop
ja
stc
orl
push
movsl
hlt
mov
fadds
adc
xchg
ja
fscale
insb
mov
xor
cwtd
test
dec
cmpsb
xchg
xchg
ja
pop
adc
and
inc
xchg
arpl
iret
jne
arpl
push
mulb
scas
stos
out
xchg
push
fnstenv
fsubr
pop
fwait
std
mov
jae
lahf
adc
adc
jmp
inc
push
cmp
and
xchg
pop
js
xor
ja
hlt
mov
dec
xchg
mov
jbe
push
mov
sbb
xor
cmp
inc
mov
lock
ds
aaa
sub
ret
xchg
daa
or
fcmovnbe
cmp
sbb
inc
wrmsr
pop
sub
dec
pop
xor
or
dec
mov
mov
mov
lea
scas
clc
in
popf
dec
xor
add
dec
or
fs
pop
notl
or
push
add
sbb
fcomps
ja
out
adc
sbb
mov
icebp
jns
cmpsb
mov
stc
push
sarb
cltd
pop
out
jno
popa
push
imul
adc
jo
pop
call
xor
pop
fcoms
xchg
jo
jae
mov
inc
and
insb
test
shrb
ja
inc
outsb
cmp
out
jbe
in
add
lret
push
cmc
adc
cwtl
mov
xor
push
push
scas
out
push
hlt
mov
pop
jmp
xchg
cwtl
inc
repz
test
neg
out
outsb
ret
dec
js
js
js
cmp
mov
out
xlat
hlt
addr16
mov
adc
outsb
sbb
jecxz
aaa
push
daa
xchg
leave
or
mov
aaa
ja
and
es
jg
daa
mov
and
sub
push
out
adc
adc
clc
ret
pop
jl
dec
lods
ss
movsl
or
negb
mov
jmp
mov
addr16
and
sub
jbe
pop
adc
sub
xrstor
xor
cmpsb
test
js
and
pop
push
imulb
inc
jbe
push
setbe
jp
sbb
nop
sarb
jns
fs
jle
jns
inc
xchg
and
inc
or
fbstp
ss
imul
mov
jno
xchg
and
mov
lcall
and
pusha
ljmp
loope
in
sar
inc
mov
daa
out
or
fnstenv
dec
xor
sbb
les
stc
call
fnstenv
inc
mov
cmc
movsb
pop
xchg
insb
add
xchg
push
in
and
push
mov
xchg
mov
push
sub
inc
mull
imul
scas
in
lds
inc
bound
push
pop
jmp
mov
mov
sub
sbb
insb
jbe
xor
xchg
popf
mov
in
push
scas
xorb
loopne
ja
adc
fcomi
ja
xor
scas
clc
xchg
xlat
pusha
inc
xchg
clc
adc
cmp
pop
jno
daa
or
test
aam
xor
adc
xchg
push
sub
add
test
test
scas
adc
je
push
leave
pop
sub
xchg
pop
adc
push
mov
adc
dec
and
ds
enter
test
pop
jns
les
jo
jo
xchg
mov
repz
leave
scas
and
pop
out
mov
es
mov
popa
xchg
dec
cltd
sub
jbe
test
lock
outsb
cmc
das
repz
outsb
xchg
daa
add
gs
sahf
div
idiv
sbbb
mov
and
adc
dec
arpl
cmp
lahf
scas
xchg
xor
outsb
pop
notb
enter
fs
xchg
and
push
fs
xchg
and
cmpsb
jecxz
aam
cmp
nop
or
mov
and
jle
mov
enter
es
imull
aad
pop
adc
daa
cmp
jle
mov
scas
pop
inc
lret
pop
adc
inc
cmp
push
xchg
push
or
adc
dec
jp
xchg
mov
sbb
xchg
jbe
repnz
aaa
add
pop
xchg
ficoml
push
xchg
cwtl
adc
mov
jae
es
sub
pop
clc
add
in
push
out
xchg
xchg
sbbl
dec
mov
sbbl
add
pop
cmp
les
in
ss
sbb
or
push
push
pop
and
dec
cmp
fdivs
mov
sbb
dec
mov
mov
loop
cmp
inc
jl
scas
fstps
adc
subl
orb
fnstenv
dec
adc
jne
push
xor
incb
and
push
and
and
jl
jns
stc
imul
into
mov
cmp
dec
sub
gs
insl
pop
and
push
or
shll
mov
ds
xchg
test
insl
xchg
bound
push
xor
inc
jb
sbb
sbb
adc
jo
inc
mov
sub
xchg
imul
cli
jo
jp
mov
xchg
mov
mov
inc
movsl
lret
sbb
rcrl
sbb
stos
leave
repz
mov
aas
movups
shll
and
mov
xlat
daa
outsb
in
sbb
bound
inc
inc
rorb
fists
cmpsl
cmp
insl
xchg
and
in
pop
or
xchg
and
mul
mov
ljmp
cmp
jg
daa
lds
push
fwait
les
sbb
adc
cltd
and
lret
push
shrb
fistps
add
lret
scas
push
pop
mov
add
push
pop
fptan
je
mov
or
ret
push
sahf
inc
xchg
lock
or
add
scas
aaa
push
dec
es
in
xchg
jnp
push
std
xor
jle
insb
jge
xchg
adc
clc
loopne
clc
push
jae
ljmp
mov
icebp
incl
adc
xchg
lods
xchg
mov
mov
pop
gs
jb
jae
jle
push
mov
mov
xchg
fwait
dec
pop
mov
fs
out
insb
in
out
div
lret
popf
neg
outsl
out
inc
mov
add
sbb
iret
sbb
jp
mov
mov
test
cmp
mov
loope
rorl
rcrl
je
or
add
ret
sbb
xor
mov
in
les
out
aad
xchg
adc
lods
gs
and
cltd
clc
push
mov
loope
fs
mov
stos
in
dec
and
in
pop
adc
fadds
xchg
scas
xor
and
test
pusha
call
push
pop
fucom
sbb
mov
xorl
inc
jp
dec
mov
testl
pop
push
pushf
dec
lea
add
cld
pop
fcom
aaa
jno
xchg
test
jge
sti
js
mov
in
lret
test
or
pop
sbb
xlat
bound
jge
xchg
xchg
cmp
shlb
outsl
xor
push
imul
mov
add
mov
das
mov
stos
les
testl
mov
sbb
push
ljmp
sbb
mov
xorl
stos
ds
test
adc
lock
cld
movsb
fs
sahf
icebp
and
sub
mov
jb
in
out
ljmp
lret
mov
insb
push
gs
jl
pop
loopne
insl
push
cmp
push
bswap
leave
rclb
adc
xor
imul
mov
test
insb
sub
arpl
pop
js
dec
aad
mov
in
jg
mov
cmpsl
out
xchg
fwait
sarb
mov
rolb
aas
sub
cmpsl
sbb
clc
sub
scas
xchg
nop
fmul
push
push
xchg
int3
shlb
sti
cmp
sti
mov
cmpsl
imul
cltd
or
movsb
inc
sarb
std
pop
aaa
insb
cmp
dec
in
xchg
aad
sub
enter
xchg
iret
mov
shll
ret
les
mov
aas
add
in
scas
mov
mov
cld
lds
lea
rol
dec
mov
jmp
pushl
lea
jne
clc
bsr
mov
pusha
cmp
pusha
jmp
lea
ret
cmp
push
test
pushf
push
lea
je
cmp
call
fiaddl
cli
ret
repz
mov
push
test
aaa
enter
ja
xor
xor
sahf
lock
in
xchg
push
mov
fcomps
mov
je
lods
xchg
in
pop
and
sub
or
outsl
stos
out
and
and
ljmp
mov
out
pop
sbb
ret
cmp
lods
sbb
repnz
xchg
test
xor
ja
movsb
negb
mov
inc
adc
mov
repnz
aad
les
pop
mov
sbb
xor
cmpsl
stos
std
pop
xor
jle
ja
in
mov
in
lods
sbb
adc
xchg
or
lods
stos
int3
imul
out
jo
ljmp
mulb
pop
out
xchg
fs
nop
imul
cmc
mov
rolb
lahf
ss
es
dec
pushf
jno
pop
jmp
std
sub
pop
repnz
loop
movsl
test
and
jge
pop
out
bound
xor
xchg
outsl
stos
test
movl
mov
jmp
pushf
xor
pushf
jmp
andb
sbb
ja
add
and
ss
jnp
leave
test
jnp
je
fldcw
repz
sub
mov
xchg
into
pop
je
cmpsb
stos
rorl
mov
xchg
inc
mov
xlat
rep
scas
dec
cmp
add
adc
fstl
test
loope
daa
mov
mov
mov
cli
mov
mov
in
movsl
test
daa
ret
test
enter
cs
cwtl
shr
clc
jns
enter
jnp
lock
cwtl
push
cltd
jp
das
jo
add
xor
imul
xor
cmp
pop
and
ljmp
imul
orb
xor
and
cmpsb
call
adc
cs
daa
xchg
cmp
hlt
hlt
enter
add
sbb
loopne
fiaddl
fidivrs
adc
mov
or
and
sub
dec
xor
sbb
jbe
cmp
xchg
and
fwait
mov
and
rclb
cmp
jge
idivb
jbe
xchg
or
std
ljmp
push
lcall
and
fs
ja
call
mov
movl
push
pushf
pushl
lea
jmp
adc
xchg
mov
adc
movsbw
bswap
mov
dec
setg
xchg
pusha
rcr
mov
movsbl
sar
pop
sub
mov
setl
btc
mov
clc
clc
or
call
fistps
jbe
sbb
mov
stc
movsb
xor
cld
fdivl
dec
pop
loopne
fnsave
pop
mov
pushf
repz
fs
addb
jb
mov
je
cmpsb
mov
lds
xor
pop
or
mov
pop
sbb
jmp
sbb
pusha
je
xor
sti
mov
pop
in
mov
lahf
mov
pop
movb
mov
pushl
push
lea
jmp
pushf
popl
call
add
lea
jns
mov
pushf
lea
jmp
jmp
pusha
pushl
mov
push
pushl
pushf
lea
jmp
push
lea
jmp
mov
pushl
push
lea
jmp
call
pushf
popl
movb
movl
movb
pushl
popl
pushf
pushl
lea
jmp
jmp
test
clc
bt
sub
pusha
test
call
pushf
mov
mov
push
push
mov
call
pushf
jmp
pusha
pushf
popl
push
pushl
popl
pushf
push
lea
jmp
shld
sub
movzbw
ror
jmp
push
mov
pushf
jmp
test
sub
pushf
mov
call
lea
jne
jmp
mov
movw
mov
pusha
jmp
mov
call
pushl
popl
movw
pushf
mov
mov
lea
jmp
push
movzww
jmp
xor
mov
cmc
mov
stc
jmp
mov
pusha
mov
lea
jmp
lea
mov
test
test
stc
sub
clc
sub
pusha
not
movb
rol
jmp
mov
lea
je
cmc
jmp
pushf
mov
push
lea
jmp
stc
mov
pusha
mov
jmp
bt
shr
mov
or
bt
test
clc
clc
xor
push
inc
jmp
xchg
bswap
mov
call
pusha
pushf
lea
jmp
call
jmp
sub
jmp
pushf
jmp
pusha
lea
jmp
lea
jne
shrd
xorb
mov
call
pusha
shl
movzbl
pushf
stc
stc
add
cmc
push
call
jmp
push
push
mov
jmp
movb
jmp
jmp
pusha
jmp
pushf
call
call
pushf
call
pushf
movw
mov
push
pushl
pushf
popl
push
pushl
popl
pusha
lea
jmp
call
pushl
push
pushf
mov
movb
pushf
lea
jmp
jmp
push
mov
cwtl
lahf
mov
jl
pushf
lea
cpuid
stc
sub
pushf
cmpl
pusha
mov
jmp
aam
sub
neg
bsf
mov
movsbl
stc
clc
pop
movzbw
inc
rcl
pop
clc
pop
aaa
cmp
jmp
jmp
push
mov
mov
call
movb
rol
mov
call
call
jmp
popf
pushf
lea
jmp
push
rcr
bts
lea
mov
inc
mov
cmp
stc
test
bt
sub
pushf
pushf
bt
pushf
shr
pushf
push
mov
mov
jmp
bt
mov
cmc
call
pushl
xchg
jmp
pushf
mov
pushf
lea
jmp
shr
cmp
mov
pushf
pushf
mov
cmp
cmp
stc
add
jmp
stc
xor
pushf
pushf
jmp
call
pop
clc
cld
xadd
btr
pop
call
pushf
movzbw
movzbl
call
mov
call
pusha
mov
pushl
mov
jmp
shl
mov
sar
ror
rcr
mov
clc
sub
jmp
cmp
push
pushf
jmp
mov
cmc
pushl
sub
lea
ja
pusha
pushl
mov
pusha
pushl
pushf
lea
jmp
push
shr
call
push
pushf
mov
pushf
popl
movl
call
mov
lea
js
mov
jmp
pushf
popl
pushl
mov
jmp
push
lea
jmp
ror
movsbw
mov
bts
shl
dec
mov
shr
mov
stc
pushf
add
pusha
shld
jmp
movzbl
movsbw
mov
push
pushf
mov
movw
lea
call
add
movb
add
jne
cmp
push
sub
pushf
pusha
jmp
xchg
lea
jne
stc
push
push
clc
bt
sub
pushf
jmp
mov
movb
pushl
lea
jmp
pushf
movb
mov
push
pusha
pushf
pushf
lea
jmp
pushl
popl
movw
pushf
lea
jmp
push
and
bt
call
dec
sbb
mov
xor
mov
adc
cmc
bts
not
mov
add
xchg
sbb
lea
rol
mov
push
inc
sbb
movzbw
pushl
popl
ror
sbb
clc
movl
neg
movsbl
dec
mov
push
sets
xchg
sub
sub
sbb
rol
btc
neg
btr
ror
not
shl
bsr
lea
add
xadd
bswap
call
pushf
popl
call
movzbl
rcl
clc
cwtl
mov
bswap
test
add
sar
mov
jmp
movb
movb
call
cmp
pushl
mov
bt
mov
movb
movb
sub
push
lea
jp
pushf
push
mov
pushl
mov
pushf
movb
lea
jmp
bsf
sar
mov
sar
inc
add
push
push
mov
push
pushf
mov
pushf
mov
lea
jmp
push
cmp
pusha
jmp
shld
setnp
jp
add
movzww
jmp
add
stc
clc
xor
cmc
cmp
sub
mov
jmp
mov
pushf
not
repz
popl
rol
ror
stc
clc
xchg
call
movb
cwtl
jmp
movl
sub
pushl
cmc
clc
mov
and
pushf
pushf
jmp
lea
jmp
mov
mov
movw
pusha
pushf
lea
jmp
pusha
lea
jmp
cmc
pushf
cmp
add
lea
jnp
pushf
pusha
mov
mov
pushf
push
lea
jmp
pushf
movw
call
mov
call
add
jmp
bt
pushf
bt
sub
movb
cmc
test
shr
jmp
movb
call
sub
test
jmp
lea
ror
bswap
bswap
inc
not
and
clc
lea
pusha
mov
call
pushf
cmc
shl
jmp
bt
sub
pusha
pushf
pushl
add
call
ror
mov
bt
mov
add
stc
mov
call
call
jmp
test
add
bt
push
pushf
movb
add
clc
rol
pusha
test
bt
bt
add
push
pushf
pushl
movl
dec
call
jmp
pushf
pushf
popl
pushl
pusha
pushl
popl
pushf
pushl
lea
jmp
pusha
pushl
popl
movb
lea
jmp
mov
pushf
push
push
pushl
lea
jmp
pushf
and
pushf
call
mov
lea
jae
pushf
pushf
pushl
call
mov
mov
pusha
stc
xor
clc
call
call
mov
mov
lea
call
rol
rol
sar
mov
setl
bts
rcr
add
pusha
inc
sub
sub
bt
pushf
pop
mov
pusha
stc
jmp
sub
movb
mov
pusha
push
mov
mov
lea
jmp
shr
sbb
call
add
bt
cmc
pushf
pushf
add
clc
cmc
mov
mov
rol
pushf
pusha
movb
stc
add
movw
dec
movb
add
cmc
cwtl
stc
sub
pushf
pushf
mov
movb
lea
jmp
mov
push
lea
jb
pusha
pushf
popl
push
pushf
lea
jge
pusha
pushl
popl
pusha
lea
jmp
movsbl
movzbw
push
bswap
inc
bts
bt
not
stc
cmc
clc
rol
pusha
test
bt
xor
setbe
pop
movzbl
pop
bswap
pusha
not
mov
call
push
pushf
popl
pushf
call
pushf
popl
push
pushf
lea
jp
push
pushl
popl
pusha
push
lea
jmp
stc
jmp
pushf
pushf
mov
pushf
popl
call
dec
shr
shrd
shl
xor
bsf
xor
add
rol
mov
cmc
mov
add
call
rcr
notl
pushf
btr
mov
test
sub
stc
push
lea
js
and
pushf
mov
pushf
popl
pusha
call
call
cmp
bt
pushf
jmp
pusha
add
pusha
mov
pushf
pushl
lea
jmp
shl
movb
mov
pushf
pushf
popl
pushf
mov
pushl
popl
pushf
lea
jmp
sub
cmc
add
pusha
call
mov
mov
lea
jmp
pusha
movzbw
mov
pushf
mov
lea
jmp
bt
jmp
pusha
call
clc
pushf
and
cmp
cmp
jmp
mov
mov
mov
lea
jmp
mov
movb
pushl
popl
push
pushl
lea
jmp
sub
jb
not
pusha
push
not
call
pusha
pushf
lea
jmp
sub
pusha
cmc
sub
movb
pushf
push
call
movw
jmp
push
push
call
call
pushf
jmp
jmp
shrd
shld
inc
mov
test
cmc
add
pushf
pushf
pushf
popl
call
mov
lea
call
inc
stc
cmp
xor
pushf
lea
cmc
cmc
test
cbtw
call
jmp
mov
pushl
mov
pushf
push
mov
lea
jmp
aas
shrd
lea
stc
cmp
jmp
add
call
pusha
push
pushf
popl
call
jne
mov
mov
jmp
cwtl
stc
cmp
cmp
sub
jmp
lea
jp
pusha
mov
mov
lea
jmp
pushf
push
pushl
popl
pusha
pushf
lea
jmp
push
xadd
shr
mov
sar
add
pushl
movb
mov
call
xor
call
pushf
popl
jmp
pushf
call
pusha
and
jmp
xchg
bt
add
mov
neg
aas
and
mov
movsbw
cwtl
aam
adc
mov
bt
sub
test
aad
pushl
popf
pop
movzbw
mov
pop
bswap
mov
movw
pushf
push
mov
pushl
ret
call
mov
mov
push
lea
jmp
pushl
popl
mov
pushl
mov
lea
jmp
jmp
lea
js
push
pushl
mov
jmp
test
call
call
stc
pusha
sub
pushf
xchg
mov
mov
push
movl
movb
mov
pushf
pusha
pushl
pushl
ret
jmp
pusha
pusha
mov
pushl
pushl
lea
jmp
pushf
mov
pusha
push
lea
jmp
pushl
popl
pushf
pushf
movw
pushl
lea
jmp
pusha
call
pushf
daa
pushf
cmc
mov
add
test
rcl
mov
call
mov
pushl
pushf
pushl
pusha
lea
jmp
movb
mov
mov
pushf
pushl
ret
mov
jmp
pushf
jmp
pushf
popl
lea
jle
popl
push
push
push
lea
jmp
cld
pushl
movb
rep
pushf
xor
adc
mov
shl
sbb
call
pushf
lea
jmp
pusha
pushf
mov
pushf
mov
pushl
lea
jle
mov
jmp
adc
bswap
mov
test
pusha
add
pushl
pushf
mov
movb
mov
push
lea
jmp
sub
clc
cmp
test
sub
call
call
pushf
pushl
lea
jmp
bt
clc
add
push
pushl
mov
jmp
cmc
clc
sub
cmc
shr
pushf
pushf
mov
pusha
push
jmp
inc
clc
add
jmp
push
mov
mov
push
pushl
ret
jmp
btc
ror
adc
clc
mov
call
rcl
pusha
mov
call
call
pushf
pushl
inc
pushf
push
lea
jmp
mov
pusha
pushf
lea
jmp
dec
bound
xor
add
add
add
push
mov
push
cmpsb
jne
add
pop
push
xor
add
addr16
sbb
push
dec
bound
push
ja
add
jp
add
push
xor
add
jne
add
push
add
bound
aam
push
mov
push
mov
add
add
jne
add
jnp
add
jp
add
push
ja
add
jne
add
push
xor
add
gs
lret
addr16
lret
addr16
dec
bound
pop
jge
add
jle
add
jne
add
pop
push
popf
pop
push
fnstenv
add
jne
add
bound
fldt
add
jne
add
popa
push
into
pushw
push
ja
add
push
pushf
jns
add
addr16
xor
add
jp
add
arpl
and
popa
push
mov
push
mov
push
pop
jnp
add
jne
add
jne
add
pop
push
into
pushw
cmp
add
jae
add
push
dec
ja
add
jne
add
push
push
ja
add
pop
push
ja
add
arpl
xor
add
push
jp
add
popa
push
push
ja
add
je
add
push
cmp
add
jne
add
popa
push
into
pushw
and
add
pop
push
and
bound
pop
jnp
add
js
add
push
add
add
jae
add
imul
pop
push
push
ja
add
js
add
push
fldt
add
push
fnstenv
add
gs
mov
push
xor
push
loop
push
ja
add
arpl
pop
jnp
add
jnp
add
push
mov
push
jp
add
js
add
imul
jnp
add
fs
mov
mov
push
mov
loop
push
pop
jnp
add
imul
and
add
arpl
cmp
add
js
add
pop
push
cmpsl
pop
push
pushf
jns
add
push
sbb
push
add
add
js
add
push
and
push
add
je
add
jp
add
push
loop
push
pop
push
jb
push
sub
add
jnp
add
jle
add
pop
push
mov
js
add
jae
add
push
add
push
aam
push
lret
addr16
xor
add
push
loop
push
pop
jge
add
add
popa
push
xor
push
pop
jnp
add
js
add
bound
and
add
addr16
adc
add
outsb
push
popf
pop
push
loop
push
adc
add
popa
push
sbb
push
es
push
pushf
jns
add
push
pop
push
loop
push
cmp
add
push
fldt
add
jne
add
push
popf
pop
push
loop
push
push
ja
add
je
add
js
add
pushw
pushf
jns
add
ja
add
js
add
ja
add
gs
pop
jnp
add
push
shlb
pop
push
cli
push
add
js
add
push
add
push
jne
push
fldt
add
jp
add
pop
push
shlb
jne
add
jbe
add
je
add
push
popf
pop
push
xor
add
popa
push
je
push
add
add
pop
push
pop
jnp
add
jne
add
je
add
popa
push
adc
add
popa
push
lret
addr16
imul
add
jne
add
ja
add
push
push
jns
add
outsb
push
cmpsb
jne
add
sti
loopne
add
pushf
push
pushf
pushl
lea
jne
bsr
mov
cmp
xorb
jmp
pushl
popl
pushf
pushf
lea
jmp
lea
ja
clc
mov
mov
xadd
xchg
lea
test
xor
sub
rcl
inc
lea
pushf
shr
shrd
and
ror
dec
sub
pusha
bswap
mov
push
pop
pusha
pushf
popl
std
mov
call
push
pushf
call
pushf
test
xor
jmp
mov
movb
pushf
inc
cmc
add
push
mov
mov
mov
mov
pushl
ret
call
not
stc
mov
stc
and
call
pushl
add
jmp
btc
cmp
cmp
sbb
mov
cmp
not
mov
cmp
push
clc
test
sub
movl
pusha
shl
push
mov
call
pushl
mov
pusha
lea
jmp
sub
pushf
mov
pushl
jmp
pusha
mov
pushl
mov
call
pusha
call
mov
movw
lea
jmp
pushl
popl
pushl
mov
lea
jmp
sub
jmp
mov
push
lea
jmp
mov
movzbl
mov
mov
dec
inc
btr
rol
push
xor
clc
stc
bswap
ror
not
or
pusha
btr
xor
jmp
cmc
test
mov
cmc
stc
xor
bt
push
pusha
pusha
ror
call
mov
call
cwtl
aaa
or
movsbl
rdtsc
cmc
jmp
lea
not
push
mov
jmp
pushf
pushl
pushf
popl
pushf
pushl
popl
pushl
push
push
lea
jmp
dec
clc
pushl
mov
test
add
cmp
call
bswap
jmp
pop
pushf
push
pushf
lea
jmp
xor
jmp
pusha
mov
pushf
pushf
pushf
lea
jmp
mov
push
movb
lea
jmp
sub
bsr
stc
mov
lea
mov
call
mov
jmp
pusha
pusha
mov
pushf
jmp
cmc
bswap
sar
mov
sets
jns
rol
mov
call
pusha
add
setp
rol
xor
call
call
mov
shr
cmp
ror
mov
bt
sub
sub
jp
cmp
shr
jmp
mov
mov
pushf
movw
mov
pushf
lea
jle
mov
push
pushf
lea
jmp
shld
shl
mov
cmc
stc
cmp
add
pushf
pusha
pusha
lea
jmp
pusha
jmp
pusha
call
push
pusha
mov
pushf
lea
jmp
ja
pusha
divl
call
mov
movb
lea
jmp
xor
call
dec
test
bt
xor
cmp
sub
clc
add
jmp
inc
test
mov
jmp
push
mov
stc
call
shld
or
movsbl
xorb
push
jmp
pushf
divl
pushl
jmp
jmp
lea
jmp
movl
pushl
popl
pushf
lea
jmp
cmp
bsf
bsr
mov
clc
xor
mov
bt
pushf
cmc
add
movb
pusha
pushl
mov
pushf
pushf
push
pushf
lea
jmp
call
jmp
push
jmp
lea
jnp
inc
pusha
pushl
lea
jmp
jmp
seta
cmp
xor
pusha
bswap
dec
and
sbb
not
shr
shl
sub
btr
shl
xor
xor
rcr
rcr
mov
pushf
push
clc
add
push
pushf
pushf
jmp
lea
jmp
jmp
pushf
pushf
pusha
lea
jne
adc
call
lea
mov
bt
add
call
mov
push
mov
push
pushf
popl
pushf
pushf
push
pushf
pushl
popl
pusha
pushf
lea
jmp
add
jmp
ror
jmp
sbb
cmp
call
pusha
pusha
pushl
popl
push
lea
jmp
call
push
pushl
popl
mov
pushf
lea
jmp
movsbw
mov
call
push
cmp
test
not
clc
test
pushf
not
test
stc
cmc
mov
sub
jmp
jmp
add
pushf
lea
jmp
mov
pushl
push
lea
jmp
test
xor
rcl
neg
mov
bt
push
sub
jbe
push
sub
jmp
jmp
btc
stc
sub
btr
lea
call
push
pushf
lea
jmp
shl
dec
btc
movzww
cmp
stc
jmp
push
pushl
mov
pushl
lea
jno
jne
add
shl
mov
pusha
and
cmp
jmp
cmc
neg
mov
cmc
bt
jmp
add
jmp
movl
lea
jl
popl
push
movw
movb
mov
lea
jmp
add
neg
movzbl
jmp
bt
add
clc
pushl
add
sub
jo
bt
push
movw
add
pushf
pushf
clc
stc
rol
pusha
dec
test
clc
stc
jmp
pushl
popl
push
pushf
pushf
push
lea
jmp
pushf
popl
pushl
jmp
stc
pusha
call
std
mov
bt
lea
jnp
push
pushl
popf
pushf
pushf
movb
lea
jmp
call
push
add
mov
rol
movb
jmp
pusha
lea
cpuid
cmc
pushf
pushf
mov
sub
pushf
pusha
mov
cmpl
push
mov
pushf
pushf
mov
pushf
mov
jmp
mov
call
pushl
popl
pushl
push
pushf
lea
jmp
pushf
call
mov
pushl
pushl
pushl
pushf
lea
jmp
cwtl
mov
setae
cwtl
not
lahf
mov
jmp
bt
pushl
clc
add
pusha
pushl
popf
movb
lea
jmp
bswap
inc
call
jmp
not
das
sar
mov
add
not
mov
rcr
xor
adc
mov
stc
cmp
add
push
pushf
shrd
mov
jmp
lea
jne
cmp
xor
pushf
call
push
call
push
jmp
rcl
rcl
aad
movsbw
mov
mov
inc
shl
mov
stc
call
pusha
pushl
jmp
add
sub
shl
bt
mov
mov
setbe
rol
xor
movsbw
cmc
btc
rol
ror
movzbw
jge
inc
pusha
pusha
btr
not
btc
rol
rcl
clc
rol
xor
xor
movb
movzbl
pop
jmp
pusha
pushf
mov
pushl
pushf
pushf
lea
jmp
pusha
inc
pushf
add
push
call
pushf
popl
push
pushl
popl
pushf
mov
lea
jmp
pushl
popl
movw
movw
movb
movb
lea
jmp
call
pushf
movb
jmp
pushl
lea
jmp
shl
call
jmp
inc
movsbw
movzbw
inc
or
shl
and
bsf
bsf
cmc
mov
test
sub
push
call
movb
mov
pusha
movw
lea
jmp
stc
pusha
mov
cmp
sub
jmp
jmp
movl
call
add
lahf
mov
rol
setbe
pusha
clc
mov
movb
cmp
movb
not
call
pushf
mov
push
movw
pushf
lea
jmp
pushf
pushl
popl
movb
pushf
lea
jmp
mov
jmp
pushf
push
mov
mov
push
lea
jne
shl
neg
inc
sub
mov
jmp
sbb
mov
cmc
pushf
jmp
pushf
popl
jmp
dec
push
pusha
not
mov
test
stc
movw
sub
test
xor
clc
jmp
mov
cmc
jmp
and
dec
mov
call
jmp
call
pushl
popl
movw
mov
mov
movb
lea
jmp
pushf
mov
pushf
push
jmp
call
push
push
pushf
mov
movb
call
setb
mov
push
mov
jmp
pushf
lea
jmp
lea
jne
jmp
add
add
shl
call
call
push
pushf
popl
pushf
pusha
pushf
pushl
popl
mov
movb
lea
jmp
mov
jmp
jmp
push
call
pushf
decl
pushl
lea
jne
jmp
call
xor
bswap
bts
movzbl
bt
mov
test
or
jmp
