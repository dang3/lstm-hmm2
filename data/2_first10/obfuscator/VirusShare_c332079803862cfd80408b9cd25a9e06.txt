push
aas
jge
movsl
dec
pop
push
int3
or
test
arpl
jns
or
movq
xor
sub
xchg
xchg
cmp
fsubl
dec
ss
outsb
popa
push
and
mov
int
pop
lods
rcrl
push
inc
push
pushf
dec
ret
mov
dec
jle
mov
dec
adc
mov
sbb
adcl
outsl
jo
arpl
jp
lock
mov
fstps
lcall
loope
dec
pop
out
lds
imul
into
inc
jp
push
cltd
call
xchg
dec
pop
push
push
test
push
cmp
iret
pushf
push
sbb
mov
jg
stos
add
shrb
cmp
jb
in
xor
sub
scas
or
loope
push
int3
cmp
cmc
iret
xchg
arpl
xchg
aaa
shll
cld
xchg
je
jne
lea
mulb
mov
pop
add
inc
gs
jb
jo
add
rcrl
add
leave
pusha
lea
ja
pop
call
add
push
gs
imul
gs
add
inc
bound
inc
arpl
gs
jb
arpl
jae
not
mov
rcr
cmc
rcr
add
pusha
bswap
movzbw
mov
lea
call
lea
jae
sub
mov
shl
movzbl
mov
setne
movzbl
mov
call
test
shl
call
pushf
lea
ja
pushf
test
add
sub
bt
or
call
sub
clc
inc
scas
testb
bound
fisubs
test
jns
mov
cmp
xlat
gs
cmp
dec
aaa
pop
es
flds
in
cltd
imul
jmp
stos
cmp
loope
das
adc
lds
bswap
bswap
bswap
mov
not
pusha
push
mov
mov
lea
rep
mov
bswap
movsbw
call
lea
je
pushf
add
mov
clc
cmp
cmp
pushf
call
lea
ja
bt
push
sub
neg
sar
bsf
xor
lea
add
pusha
pusha
mov
mov
pushl
push
pushf
lea
jmp
pushl
push
lea
call
pusha
lea
jb
and
movzbl
shld
pusha
stc
shr
rol
btc
imul
shl
shld
and
setle
lea
test
btc
mov
sar
mov
shr
shl
jmp
jmp
add
dec
jae
popa
fs
gs
fs
je
add
test
sub
sbb
jmp
add
inc
gs
jns
je
insl
dec
gs
imul
into
sub
rol
lea
bt
sub
jmp
add
dec
inc
dec
popa
jo
je
imul
cmp
xchg
sbb
outsb
into
xor
ds
pop
daa
sbb
test
push
hlt
addr16
inc
and
mov
adc
pop
cmp
sbb
jo
arpl
aas
int3
mov
inc
addb
or
push
psraw
mov
xchg
push
mov
jp
mov
jbe
jle
jp
dec
push
repz
mov
ret
cmp
jmp
add
fstps
inc
push
lods
mov
sub
adc
pushl
movl
lea
jmp
shl
test
clc
cmc
cmp
add
cmc
sub
pushf
lea
jne
shrd
mov
sbb
movsbw
shld
mov
sar
sar
lea
xor
lea
bts
sar
not
mov
shld
sar
and
add
mov
xor
test
rcl
sub
mov
add
mov
test
pusha
bsr
mov
shl
shl
mov
sub
adc
bsf
ror
sub
btr
and
jmp
call
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
jmp
sbb
fadds
xchg
ss
outsb
ds
cmpsb
push
push
clc
jno
iret
mov
add
gs
push
adc
ds
xorl
pushf
xchg
cmp
mov
mov
into
test
pop
jge
leave
xchg
ss
gs
shrl
pop
inc
sbb
hlt
in
nop
movsb
fsubrs
ja
or
leave
mov
jae
cltd
xchg
jnp
scas
jnp
inc
sub
mov
addr16
or
cs
js
push
add
inc
gs
outsb
jne
je
insl
dec
inc
add
add
popa
insb
push
imul
lea
sbb
clc
test
movzbl
mov
pusha
sub
shr
pusha
shrd
and
shl
or
mov
pushf
test
pushl
shl
cmp
cmp
jmp
add
inc
gs
jne
jb
outsb
je
imul
jns
add
add
inc
insb
insb
outsl
arpl
add
inc
gs
outsb
jne
add
push
je
inc
fs
jae
push
jb
jbe
insb
gs
add
outsb
fs
gs
popa
addr16
add
pushl
lea
je
ror
rcr
sub
pushf
mov
bsr
movsbl
add
bsf
adc
dec
shrd
mov
bt
mov
cmp
test
pusha
mov
pushf
push
lea
je
rcr
shr
shr
dec
add
or
shrd
mov
clc
bt
call
fstps
mov
inc
xor
mov
jmp
adc
lret
sbbb
push
js
pop
xor
sbb
jecxz
fnstcw
in
enter
mov
inc
dec
popf
insl
cltd
cmp
dec
loop
xchg
and
sbbl
inc
lods
in
roll
movsl
popa
xor
pop
mov
es
xor
imul
add
insl
aam
or
cmp
and
jno
jae
xchg
jle
jg
orl
rcrb
daa
das
cmp
call
or
stos
pop
out
test
mov
sub
push
add
push
jmp
jge
inc
cmp
pop
mov
adc
mov
andl
jb
and
sub
sub
movsl
and
lods
push
movsb
adc
jbe
dec
and
stos
shrl
lods
mov
lock
push
pop
test
fs
sub
sub
push
aam
stos
xor
and
jne
adc
jp
repz
push
pop
mov
xchg
iret
jne
adc
push
repnz
xlat
pop
ds
pop
pop
roll
push
cmp
dec
enter
sahf
jl
loopne
jno
ja
rcl
movsb
sub
xchg
mov
push
hlt
incl
and
pop
inc
scas
enter
push
inc
adc
data16
adc
xchg
sub
imul
lods
js
mov
in
push
imul
xchg
outsl
inc
cltd
adc
pop
out
outsb
xchg
push
xchg
test
pop
loop
repz
jo
and
dec
xchg
jb
pop
addb
fsub
es
add
mov
adc
adc
mov
xchg
push
pop
in
shl
sbb
or
lret
pop
mov
lods
out
sub
adcb
out
mov
mov
jle
xchg
popa
xlat
and
je
bound
sti
xlat
or
fistl
xlat
push
pop
push
popa
enter
pop
imul
iret
dec
scas
enter
jnp
mov
cmc
mov
mov
push
scas
dec
add
pop
add
mov
aad
or
mov
fildll
loopne
jp
mov
fdivrs
pop
mov
and
mov
xchg
sbb
mov
je
pushf
sub
lcall
mov
and
pop
fs
popa
jle
loopne
imul
lods
lcall
mov
mov
pop
dec
xchg
jno
and
out
mov
ds
jmp
sub
pushf
sbb
stos
pop
xlat
xor
dec
push
daa
imul
push
pop
cs
and
xor
enter
mov
cs
sbb
pop
in
in
xor
mov
pop
leave
and
fcoml
mov
insl
inc
jno
pop
shlb
hlt
lods
and
lods
sahf
lods
inc
icebp
cmp
add
and
cmp
loope
mov
popa
fs
pop
mov
in
mov
insb
xchg
jle
ds
pop
test
xchg
push
sub
cmpsb
cmpsb
les
lcall
and
subl
and
loopne
mov
insb
xchg
lcall
test
enter
shlb
xchg
sbb
cmpsb
mov
cmp
cld
stos
mov
sub
mov
sub
nop
stos
test
add
push
push
mov
inc
mov
scas
adc
push
push
dec
rorb
or
ja
hlt
shlb
lock
gs
jl
js
stos
in
loop
in
repnz
add
xor
jno
inc
fldcw
ds
sti
out
push
repz
cs
outsl
lret
pushl
inc
dec
mov
add
or
inc
xor
pop
repz
es
cwtl
daa
cli
fistl
and
mov
xchg
inc
jne
data16
lds
cli
rorl
out
popf
sahf
sub
bound
in
lock
out
fcomps
decb
movsl
pop
xchg
adc
aaa
xlat
das
xor
push
adc
pop
lods
inc
or
or
sbb
sbb
lods
adc
pop
into
lock
mov
lret
je
aad
jae
leave
cs
pop
push
cmpsb
add
inc
adc
lods
cmpsb
cmp
call
dec
adc
cmp
and
lds
jae
loopne
lcall
bound
dec
push
sbb
sub
sbb
bound
lods
adc
mov
mov
cmpl
es
jne
pop
fsubrs
outsb
lods
or
addl
andb
sub
mov
mov
int3
adc
cltd
pushl
loopne
dec
dec
insl
int
lods
inc
cs
cmp
imul
addr16
lret
ret
add
or
test
arpl
lret
test
mov
cmc
mov
cs
loopne
xor
es
sub
subb
popf
lcall
mov
js
loope
sar
mov
jmp
mov
cmpsl
pop
and
and
push
or
icebp
sbb
fcompl
sbb
repz
stos
loope
rcl
or
repz
lcall
inc
data16
or
dec
outsb
gs
fs
adc
sarb
pusha
add
add
fwait
outsl
ret
push
sar
test
cmp
push
xor
fstps
xchg
dec
push
sbb
fldl
dec
aad
mov
mov
jecxz
std
inc
sbb
test
add
cmp
push
add
aas
cmp
lds
in
sbb
cmc
mov
and
adc
and
push
jp
lcall
in
push
stos
or
incl
adc
and
and
push
pop
jle
pop
orb
cmovns
push
sub
dec
jns
mov
shrb
lods
pop
adc
je
mov
cld
out
aam
test
hlt
xchg
pop
pop
and
mov
loop
xchg
lcall
xchg
outsb
sbb
leave
jns
cmpsb
popa
xchg
and
push
int3
mov
and
and
icebp
adc
push
fisttpll
nop
filds
sub
loopne
in
divl
sub
xor
lahf
les
pop
mov
jl
xor
aad
test
xor
ja
into
aaa
xor
stc
imul
mov
xchg
loop
incl
mov
pop
adcb
popf
push
sarl
xchg
and
sbb
pop
jae
cmp
out
mov
push
cmp
loope
leave
or
pop
mov
ja
jg
ss
outsb
cmpsl
jecxz
push
push
loope
xor
aas
mov
push
push
add
jnp
cmp
push
inc
lret
orps
into
pop
scas
sti
or
sub
mov
fstp
into
sub
xchg
adc
test
fbld
sub
ret
out
push
fs
pop
cmp
inc
setne
or
or
mov
daa
in
mov
in
test
aas
das
dec
mov
add
jae
call
std
xor
in
cmpsb
mov
test
or
mov
ret
xor
or
mov
pop
dec
addr16
mov
push
xchg
sub
mov
cmp
inc
jmp
js
add
sbb
mov
bound
jae
fwait
adc
notb
and
lea
mov
push
sbb
or
mov
fwait
and
dec
fistps
pop
xor
out
push
popa
xor
leavew
push
sti
xchg
mov
push
sbb
mov
xor
push
fmulp
or
repz
movsb
fistps
aam
add
es
pop
cwtl
or
sbb
out
daa
popf
std
jno
int3
fwait
lcall
inc
push
xchg
repz
dec
adc
clc
scas
sbb
cmc
jle
sbb
rcl
aas
lods
sti
daa
ja
leave
pop
sti
mov
push
rolb
inc
insb
lcall
pop
adc
mov
xlat
push
inc
stos
mov
mov
or
xlat
in
imul
sbb
cmpsb
out
adc
je
out
xchg
sbb
fisubl
jns
cmpsb
imul
out
xor
mov
cmp
enter
jmp
fnstsw
mov
aaa
out
iret
fimull
inc
pop
inc
mov
stc
aam
into
mov
sub
jg
pop
loopne
fwait
dec
xchg
ret
push
xchg
mov
stos
js
outsb
sbb
jnp
sbb
popa
leave
cmp
jae
jne
xchg
lock
adc
arpl
jnp
adc
icebp
les
adc
push
xchg
scas
mov
mov
push
or
xchg
sbb
sbb
adc
cmpsl
or
insb
into
ret
leave
iret
cli
inc
test
mov
adc
insb
push
inc
dec
lcall
xchg
jge
xor
negl
imul
adc
mov
dec
pop
out
or
mov
scas
or
stos
pop
movsb
xchg
int
mov
xchg
movsb
bound
hlt
adc
push
popf
je
addr16
arpl
gs
jne
sbb
add
push
lds
out
imulb
insl
je
adc
loopne
jg
inc
testb
add
or
xor
fldcw
rcl
xchg
stc
ficomps
pop
pop
in
sbb
insl
adc
fldenv
cmp
ss
dec
pushf
dec
das
stos
fists
clc
jmp
dec
movsb
daa
mov
cmp
sbb
mov
nop
into
movsb
ja
imul
jmp
fbld
imulb
push
mov
stc
loope
inc
xchg
pop
stos
xor
lods
out
xchg
mov
jo
pop
in
iret
push
jns
fucomip
inc
pop
jmp
mov
rorl
jle
insl
sbb
cmc
inc
xor
push
cmp
mov
mov
mov
mov
sub
cmp
rcrl
push
mov
adc
pusha
lock
adc
jmp
lret
push
fisttpll
inc
jo
or
iret
ret
popa
je
push
outsl
push
mov
pop
cmpsl
ljmp
hlt
cmpb
int
mov
sbb
fnstcw
and
push
xor
adc
cmp
xlat
fwait
inc
aaa
adc
lds
mov
inc
xlat
pusha
out
mov
and
cmovne
fdivrs
add
jecxz
scas
jl
cltd
fincstp
addr16
mov
xorb
add
and
pop
inc
cs
pop
neg
xchg
xchg
xchg
loop
mov
in
mov
add
nop
movsb
and
push
mov
sbb
jae
mov
popa
sbb
and
ss
aas
popa
scas
pusha
jbe
jbe
icebp
fnstenv
imul
addr16
adc
or
lds
push
jno
in
jns
add
inc
dec
mov
out
dec
add
add
dec
test
mov
repz
icebp
and
sarl
pop
and
loopne
push
out
ret
lret
insl
out
fmul
fs
loopne
lea
xchg
xchg
int3
push
inc
dec
inc
cmp
aaa
movsb
jge
pushl
inc
mov
inc
inc
push
jns
jae
int
sub
fsub
xorb
and
cmpsb
push
add
pop
cmp
mov
stos
mov
or
lds
xor
mov
xor
je
sbb
cld
add
pop
insl
or
xchg
hlt
mov
test
sbb
dec
sub
mov
jne
mov
jo
fisttpll
je
das
mov
and
dec
movsb
shll
mov
mov
jo
test
stc
fwait
push
lahf
inc
lds
adc
stc
fadds
mov
mov
sub
scas
fstpt
inc
jae
inc
cli
test
icebp
outsb
sub
scas
inc
imul
lock
or
jno
push
xchg
sub
fldcw
push
test
mov
insl
out
mov
adcb
bound
ja,pn
jno
jmp
add
sub
incl
arpl
into
xor
adc
push
mov
iret
dec
lcall
pop
jp
jno
cltd
xchg
push
xor
cwtl
enter
add
pop
cwtl
adc
and
shll
shll
xlat
dec
test
push
repnz
adc
adc
pop
out
negb
movl
call
add
adc
mov
xchg
fwait
loop
jmp
jne
inc
mov
aaa
popa
xchg
jmp
xor
je
aaa
loopne
hlt
in
out
in
imul
inc
adc
sbb
test
out
push
movsb
jle
movb
cmpsb
mov
pop
inc
add
adc
adc
xor
stos
insb
xor
dec
jnp
mov
inc
lcall
xchg
and
pop
movsl
xor
inc
test
xor
add
fildl
into
lcall
cwtl
inc
and
es
fwait
out
int3
push
outsl
fcomi
adc
pop
jns
shrb
imul
fistl
mov
xchg
jecxz
fstpt
aam
test
jecxz
int
daa
mov
sbb
add
out
mov
in
adc
out
in
loopne,pt
push
test
inc
lret
jnp
loop
inc
xchg
daa
cmpb
mov
cmpsb
iret
pop
stos
dec
jb
sbb
push
sti
push
or
xlat
mov
fldt
cmp
xor
inc
and
inc
es
addr16
popa
test
jbe
loopne
cvtdq2ps
insb
cld
ss
ffree
xchg
cmp
dec
nop
pop
ss
test
fwait
xchg
push
mov
xchg
pop
add
std
lcall
cmp
xor
fdivrs
fists
repnz
xchg
ja
cli
roll
jge
int
clc
and
daa
cmp
or
dec
movsl
add
es
scas
dec
adc
daa
add
adc
sbb
stos
and
popa
and
mov
pop
sti
aam
xor
out
sbb
mov
jp
add
lahf
aas
mov
adcb
movsb
mov
and
sbb
arpl
out
movsl
in
pop
loop,pt
out
in
mov
js
mov
inc
xchg
cmpsl
pop
push
xor
pop
dec
or
dec
test
cmp
xchg
pop
or
lret
das
outsb
icebp
pop
and
push
in
loop
dec
ret
xor
sbb
sub
loop
and
jns
sbb
loop
ret
inc
xor
ret
sbb
inc
out
push
addr16
movsl
addb
ret
mov
add
xchg
xlat
mov
popa
loop
sub
jl
xor
cmp
add
mov
add
insb
ret
out
mov
add
sbb
pop
movsb
rcrl
jmp
cltd
in
bound
cld
dec
jae
ret
dec
push
fmull
sbb
ds
movsb
xlat
test
aad
adc
out
mov
mov
xchg
sbbb
inc
xor
js
cltd
push
mov
or
std
sbb
fidivrl
ret
or
xchg
or
mov
shl
sbb
xor
mov
mov
adc
lea
ds
enter
int3
out
inc
mov
jo
or
ja
enter
jp
pushf
sub
std
inc
inc
xorl
lahf
ds
stos
bound
jne
fwait
jecxz
jne
mov
ret
jb
stos
aas
int3
bound
imul
push
jl
int
bound
stos
add
sbb
sub
dec
adc
or
addr16
stc
lock
scas
out
shlb
fcoms
aaa
leave
adc
aaa
call
or
sbb
lods
into
inc
cwtl
cmp
insb
insb
xchg
dec
int3
out
mov
xchg
lret
lahf
xlat
test
in
cmp
cld
out
jae
cli
ja
sub
xchg
in
add
stos
xchg
enter
sahf
sbb
loope
mov
or
xchg
lds
sbb
pop
mov
aam
insb
mov
jns
and
cmp
and
adc
xchg
and
test
shrb
popf
sbb
jmp
inc
sbb
sub
sbb
mov
sbb
cmpsl
test
movsl
adc
add
repz
lods
pop
pop
bsr
lock
loope
punpcklwd
adc
adc
data16
orb
lods
push
negl
fisubl
mov
outsb
mov
cmp
jmp
pusha
xchg
pushf
cmc
mov
xchg
mov
fsubrs
loopne
xchg
sbb
out
xchg
xor
dec
xchg
test
dec
pop
cli
xor
and
pop
popa
sbb
push
sub
xchg
lcall
cmp
jge
dec
pop
and
jecxz
dec
imul
pop
pop
sbb
mov
xchg
stos
test
sub
jb
lods
jg
push
jo
cli
inc
gs
into
pop
inc
and
push
pop
and
push
es
repz
mov
pop
jnp
push
divl
sub
addr16
rcrl
mov
mov
rcll
flds
leave
inc
dec
in
xor
sahf
jecxz
insl
pushf
out
mov
idivb
mov
mov
das
jbe
in
scas
add
xchg
add
pop
bound
xchg
mov
cwtl
inc
movsl
mov
jbe
dec
inc
bound
stc
pop
sbb
cli
mov
xchg
test
dec
inc
arpl
aad
adc
dec
subb
stos
mov
pop
xor
adc
pop
bound
loope
xchg
and
mov
push
mov
pop
out
dec
repnz
xchg
jl
inc
movb
and
daa
cld
pop
ret
adc
imul
lods
mov
adc
dec
push
cmpb
pop
dec
arpl
or
addl
fisubrl
frstor
popf
inc
enter
adc
cmpsb
aad
dec
cmp
jp
shrb
jae
mov
fxch
inc
mov
push
xlat
adc
ds
loop
xchg
lods
daa
sbb
xchg
lahf
pop
mov
ret
add
and
jecxz
loop
lret
sti
add
push
cmpsl
mov
aad
fisubs
test
mov
mov
mov
sar
or
jmp
scas
sbb
cmp
arpl
mov
push
and
aad
add
out
mov
cmc
fcmovb
mov
stc
inc
pop
xor
lret
dec
cmpsb
jecxz
test
sbb
jb
inc
xchg
mov
insl
shr
or
jae
push
js
call
jp
mov
aam
xchg
xor
cmp
loope
pop
dec
aas
adc
ja
mov
imulb
jp
enter
sub
cmp
ds
add
mov
je
jo
push
and
pop
out
jne
sbbl
xchg
pop
xchg
fwait
xchg
popa
adc
or
mov
add
mov
jns
shlb
ss
adc
lock
inc
cmp
imul
dec
dec
out
jp
das
or
sahf
xchg
ja
lcall
dec
out
fwait
test
push
xchg
sbb
add
andb
mov
lcall
sahf
clc
xchg
add
mov
test
add
test
jo
mov
hlt
sbb
enter
sub
mov
inc
push
and
outsl
data16
push
or
xchg
xor
adc
scas
lret
cmp
jg
fisttps
sbbl
cmp
push
mov
sbbb
mov
cltd
popf
stc
in
pop
mov
pop
jae
xchg
pop
lret
jg
push
out
mov
sbb
cmp
shlb
test
dec
jo
sub
enter
pop
adc
enter
stc
push
cwtl
pop
pop
mov
sbb
jo
int3
xor
lock
test
sbb
or
jne,pt
stos
xchg
xchg
js
mov
int3
mov
les
xchg
scas
inc
sub
xchg
adc
jge
add
dec
sarb
mov
into
xchg
fsubrl
mov
arpl
in
jmp
out
das
rcl
repz
mov
test
ss
sub
aaa
pop
push
mov
inc
cltd
or
imul
sahf
aaa
fcompl
ja
sbb
pop
in
mov
insb
lcall
insb
divl
adc
and
enter
pop
pusha
lods
mov
test
push
xchg
cmp
pop
mov
mov
sub
xchg
adc
mov
test
xchg
fsubs
arpl
xlat
loope
mov
sbb
fdivp
cltd
stos
loop
adc
mov
insb
jmp
repnz
sbb
fisubrs
lock
insb
negb
rorl
adc
in
jnp
jb
or
movsb
nop
fs
pop
repz
aaa
push
add
imul
adc
in
or
clc
fcmovnb
adc
imul
shll
ficoml
je
int3
out
add
popf
ljmp
fidivrs
sbb
stos
daa
ja
inc
icebp
in
push
imul
dec
adc
loope
mov
outsl
pop
addb
lods
jae
in
adc
fwait
push
std
insl
ss
mov
dec
inc
push
flds
gs
ret
or
stos
cli
leave
insl
repnz
or
das
enter
lods
add
inc
dec
sahf
ja
cmp
lret
mov
sti
out
pop
ret
cmp
gs
xchg
sbb
xchg
cmp
and
mov
int
ss
xor
inc
fs
adc
jl
mov
loope
mov
mov
mov
dec
frstor
push
gs
mov
flds
jp
mov
fsts
mov
jmp
push
adc
inc
lret
or
es
jno
or
and
xor
push
in
pop
pop
shlb
add
cwtl
sub
rcrb
sub
jecxz
xor
test
in
cmp
sub
adc
mov
mov
test
mov
fucomi
jl
push
dec
adc
push
or
mov
mov
jp
into
scas
xor
xor
push
cmp
loopne
jle
das
in
xchg
or
out
fwait
cwtl
popa
inc
in
cs
ss
nop
mov
xor
cmpsl
cmp
je
mov
out
daa
rcr
psubusw
add
add
pop
popa
push
pop
fdivrl
jno
dec
fs
adc
adc
xchg
inc
nop
mov
push
xor
sub
sbb
subl
imul
popf
jecxz
fidivs
popf
add
mov
aaa
mov
ret
cwtl
xor
mov
imul
dec
mov
out
jge
ret
mov
lock
iret
push
sbb
jl
jb
ljmp
scas
gs
xor
sbb
sub
mov
mov
or
addl
sbb
adc
cmp
arpl
fists
mov
mov
lock
in
movsb
out
out
mov
scas
xchg
imul
cld
cli
push
cmp
mov
call
xchg
mov
mov
in
push
xchg
and
pop
xchg
and
push
clc
inc
jp
inc
jne
dec
dec
mov
jecxz
adc
xor
jge
add
inc
xchg
inc
dec
addr16
ja
mov
jne
mov
mov
mov
lret
fstl
lods
add
mov
inc
repnz
popf
cli
inc
mov
enter
sbb
shl
push
shlb
outsl
mov
idivb
sub
push
repnz
jge
in
addl
adc
cmp
idivl
pusha
pop
in
in
out
cltd
out
icebp
cld
repz
std
or
dec
sbb
dec
inc
pusha
pushf
push
insl
push
out
cli
aas
ret
iret
gs
arpl
popf
xor
les
ret
aas
lods
or
sub
cli
sub
dec
outsl
sub
in
mov
mov
test
out
xchg
adc
mov
std
add
xchg
lods
fwait
in
sbbb
icebp
mov
stos
cmp
cltd
rcll
or
pop
ficoml
and
pop
popf
decb
cmp
ljmp
fimull
mov
cmovns
jl
mov
mov
dec
popa
into
loope
add
dec
not
adc
sub
xor
mov
push
xchg
lcall
or
jb
inc
lods
sub
or
xor
add
ss
xchg
fistl
dec
sahf
cli
aam
icebp
mov
out
pop
lret
imul
jmp
adc
sub
icebp
cmp
pop
das
lret
iret
imul
fwait
push
add
xchg
test
pop
jl
popa
xor
cmpsb
mov
test
lret
jmp
push
push
jge
inc
sub
pop
test
pop
test
adc
mov
push
insl
lds
setns
xchg
push
sbb
pop
cmp
cs
stos
inc
cmc
insb
dec
into
incb
mov
rolb
std
push
add
test
sub
add
jp
aas
imul
or
jns
jg
adc
sub
lret
sbb
jae
decb
mov
xchg
pop
pop
sub
lea
sbb
xor
loopne
lahf
xchg
clc
insb
outsl
sti
jecxz
xchg
mov
mov
or
xchg
cmp
add
add
dec
push
das
jae
inc
pop
dec
mov
sub
cli
and
lcall
cmp
or
jg
data16
mov
sarb
rolb
pop
xor
cltd
jne
adc
or
sub
push
call
xchg
sub
pop
bound
mov
add
push
insb
xor
js
test
pop
pop
ss
ss
xchg
push
sahf
xor
cmp
xor
mov
or
add
cmp
das
outsl
int3
add
loope
fisubrs
call
icebp
pop
sub
sbb
mov
aam
lcall
dec
hlt
out
add
adc
fistpl
testb
jae
and
lds
dec
lods
stc
cmp
shll
and
jns
int3
jge
xchg
jl
aaa
or
out
dec
mov
pop
sti
adc
outsb
or
jge
xor
mov
insl
and
dec
push
and
and
push
jg
lcall
xor
mov
push
aaa
and
cmp
arpl
shl
push
lahf
push
inc
std
insl
sub
add
sbb
lahf
lea
adc
out
xlat
and
lsl
lcall
push
push
mov
cmpsl
pop
lahf
xlat
popf
stos
adc
stc
jge
cs
mov
movsb
cmp
jmp
inc
fbstp
lods
cmp
or
sbb
data16
dec
test
arpl
pop
cli
xor
sbb
out
push
mov
aam
adc
mov
sbb
jne
xor
imul
out
test
mov
xor
fsubs
jae
jnp
insl
inc
pushf
inc
inc
sbb
xor
test
pop
xor
popa
or
mov
pusha
adc
inc
xor
lret
rol
xchg
sub
aaa
xor
dec
mov
lds
dec
rcrb
push
imul
push
xor
jnp
mov
adc
pop
mov
mov
jge
iret
push
push
dec
mov
dec
push
in
popf
xchg
scas
popa
mov
ss
js
sbb
aam
mov
lea
adc
sbb
mov
ljmp
roll
and
mov
mov
or
adc
mov
aaa
mov
inc
ss
push
in
gs
movsb
ret
pop
sub
subb
and
sbb
jnp
mov
mov
pop
sub
dec
mov
repnz
pop
xchg
add
push
push
push
or
mov
dec
insb
jg
lods
fidivrs
dec
popa
sbb
sub
push
pop
std
aam
iret
out
or
xchg
sub
lret
add
cmp
push
jnp
or
mov
les
cmpsb
jne
inc
sbb
inc
pop
push
andl
fnsave
hlt
movsb
pop
add
lahf
jae
fadd
sub
and
mov
mov
mov
jns
push
sbb
lcall
push
int3
ja
mov
lock
mov
and
mov
add
in
test
mov
cmp
pusha
jg
rcr
adc
movsb
pop
out
sbb
sub
outsb
add
or
cmp
pop
pushl
xor
sub
imul
jecxz
sub
mulb
pusha
test
push
mov
jbe
push
xchg
jmp
cmpsl
and
ss
mov
dec
pop
fildll
rorb
loopne
push
fsubr
sbb
repz
add
test
jno
flds
int3
and
cmp
and
lea
das
test
popf
and
fst
bound
xchg
aam
cmp
pop
mov
jecxz
shrb
jp
clc
cmc
push
cmpsb
into
shl
inc
test
adc
mov
cld
stc
sbb
mov
std
mov
xchg
cld
test
lods
es
enter
or
loop
lds
xchg
pop
xchg
pushf
js
loop
std
pop
dec
lods
xchg
insb
xlat
pop
and
or
mov
add
and
and
mov
pop
sub
push
xchg
cmp
xor
xor
xchg
dec
pop
jne
jge
adc
outsl
insb
divl
stc
mov
cmpsb
cmp
sub
push
insb
imul
cltd
cmpsl
repnz
mov
sub
mov
pop
sbb
dec
or
outsl
xor
daa
dec
adc
sbb
scas
dec
xor
fcomi
xchg
sub
or
ds
sbb
xchg
jl
int3
cmp
push
je
push
sub
add
pextrw
sub
push
idivl
pop
lahf
sub
xchg
xor
jns
pop
mov
mov
fistpl
insb
movsl
mov
daa
xchg
pop
outsl
rol
dec
imul
mov
mov
sbb
adc
cmp
xor
fimull
xor
fisttps
out
iret
addb
fldcw
mov
xchg
rorb
leave
adc
and
inc
sub
lock
arpl
movsb
in
repnz
imul
push
cli
dec
repz
fdiv
sbbb
lahf
jb
inc
lods
adc
push
test
cmpsl
adc
add
dec
push
outsb
fsubp
clc
add
mov
mov
sub
jle
push
mov
mov
dec
out
jae
mov
outsl
sub
cmp
sahf
sahf
jnp
pop
icebp
jo
cltd
push
sbb
pop
out
lods
mov
sub
pusha
xchg
or
mov
bound
xor
mov
shll
mov
shll
jae
call
xor
xchg
and
mov
mov
xor
popa
leave
test
cmp
int
push
andl
cmp
or
stos
inc
sub
cmpb
jnp
sub
into
pop
fcmovnbe
imul
pop
sub
jp
roll
leave
or
mov
push
lret
inc
aad
cwtl
movsl
ret
arpl
fisttpl
dec
aas
and
sarl
sub
push
xchg
movsl
pusha
sub
and
lret
cmpsb
dec
dec
je
cmpsb
faddp
mov
outsb
stos
scas
cmp
outsb
scas
int3
in
in
adc
lret
xor
or
es
jp
jg
pop
jb
jnp
mov
sub
dec
lods
add
icebp
pop
xchg
jle
cmpsb
jne
inc
cmpb
aaa
dec
adc
push
in
mov
xchg
add
sub
xchg
adc
xchg
cmc
lods
sahf
adc
xchg
mov
cli
add
pop
gs
pop
out
push
xchg
or
add
add
sbb
mov
lea
ret
aam
mov
cmp
nop
and
mov
addr16
push
ret
test
mov
dec
fstps
cmp
andl
mov
pop
popa
clc
out
in
sysenter
fisttps
jo
roll
add
negb
nop
dec
test
es
sub
ds
push
pop
add
fwait
add
subb
jl
repnz
cmp
pushf
lret
xchg
cmp
orb
jp
rorb
mov
push
or
rorb
shlb
dec
pop
in
add
shl
shl
imulb
addr16
fsubl
push
stc
sbb
dec
push
and
in
imul
mov
xchg
jl
xchg
pop
mov
in
loop
loope
and
jo,pt
add
fs
push
test
pop
push
mov
scas
xchg
adcl
mov
enter
cwtl
dec
xchg
mov
push
stos
imul
push
or
imul
lret
pop
pop
dec
push
inc
lret
adc
icebp
out
outsb
in
test
testb
xor
jno
xor
fsubr
test
repz
aad
outsl
dec
jbe
in
lret
push
insb
stc
test
movsl
pop
push
mov
xchg
in
lcall
hlt
test
jb
fcoms
xor
mov
int3
dec
jb
or
cmp
test
push
pop
mov
shll
push
xchg
dec
mov
test
mov
das
fbld
rcr
push
push
mov
bound
popl
add
and
push
add
dec
adc
cmp
shrl
int3
dec
push
jnp
lahf
and
mov
shll
aam
inc
pop
push
cltd
push
je
and
pop
addr16
cmp
sti
aas
cmp
xor
inc
cmpsb
pusha
mov
dec
jbe
sbb
lods
mov
ljmp
out
into
mov
jb
mov
pushf
jne
scas
mov
fimull
ss
pop
ftst
out
push
mov
sub
inc
mov
push
das
sbb
dec
mov
sub
jo
imul
push
out
sub
ja
es
test
out
mov
mov
fsubs
iret
hlt
enter
pop
cmpxchg
dec
adc
pop
xor
repz
push
push
clc
or
std
mov
lret
mov
daa
sub
out
and
filds
push
xchg
dec
insb
repz
adc
sub
pop
push
test
and
repz
icebp
sarl
xorl
andl
mov
lock
loope
in
sbb
cmp
out
add
subps
xchg
scas
sahf
jnp
leave
mov
jmp
mov
mov
test
lods
out
aaa
push
lret
inc
lea
loope
sbb
mov
pop
mov
loope
dec
pfcmpgt
and
add
repnz
push
mov
xor
sbb
imul
popa
pop
xchg
jb
inc
or
sbb
sub
mov
push
movsb
pop
xchg
xchg
jg
cld
in
test
jmp
dec
stos
ljmp
xor
sub
fisubrs
xchg
call
inc
mov
mov
mov
adc
fs
mov
popa
xchg
scas
add
pop
xchg
aas
movsb
inc
cltd
enter
sbb
or
xchg
inc
dec
mov
fwait
xor
ret
push
repnz
leave
push
jmp
sub
sbb
in
mov
push
inc
mov
xor
mov
out
xchg
test
xchg
add
pop
icebp
stos
pop
and
imul
cmp
sub
jns
push
addr16
add
add
cld
out
mov
dec
sti
sbb
pushl
push
fistl
shrb
test
jp
test
or
cmc
mov
loopne
push
pop
ljmp
sbb
int3
xchg
sbb
les
push
inc
daa
add
das
int
add
dec
pop
ds
sub
mov
pushf
out
xlat
into
lret
and
clc
insb
or
insb
insl
or
pushf
aas
cmpsl
lods
push
ds
ljmp
inc
xor
filds
dec
ja
aam
pop
popf
add
loopne
dec
ja
or
shll
dec
imull
mov
das
or
dec
jmp
gs
insl
lds
test
nop
adc
dec
add
dec
bound
and
mov
fistpl
divb
adc
jae
scas
ret
iret
mov
mov
into
lahf
push
push
aam
inc
mov
push
pushf
aaa
or
dec
sti
sub
mov
push
int3
in
lcall
fidivrl
sbb
movsl
mov
inc
dec
scas
push
or
add
pop
andl
dec
outsb
pop
outsb
xchg
and
leave
mov
repz
adc
pushf
stos
dec
push
mov
sub
fldl
jl
aad
mov
test
sbb
add
je
xchg
movsb
in
jns
or
pusha
cwtl
fldl
push
add
xor
divl
or
dec
mov
mov
movsl
imull
lahf
pushf
rcll
insl
test
push
pop
adc
lods
cmp
mov
xchg
xlat
fcomps
std
xchg
shll
hlt
xchg
mov
ds
add
mov
cli
inc
cwtl
hlt
and
cmp
faddl
pop
adc
dec
sahf
jl
icebp
push
repz
inc
leave
sub
sbb
pop
ds
push
out
fistpl
mov
sub
lcall
mov
mov
jno
dec
loopne
lret
dec
mov
dec
inc
icebp
inc
jecxz
inc
into
cs
push
add
mov
adc
jae
mov
and
dec
inc
inc
and
xchg
inc
les
and
dec
gs
popa
mov
call
mov
movsb
clc
push
repnz
movhps
dec
stos
xchg
movsb
xor
adc
cwtl
mov
add
adc
aas
cmp
mov
or
cld
loop
movsb
push
aam
rorb
xor
mov
mov
mov
and
lahf
jb
push
rcl
scas
ja
adc
xchg
pop
enter
sub
hlt
lret
lea
out
mov
sbb
sbb
inc
aad
dec
jle
cmp
mov
or
js
ret
sub
adc
mov
cmp
add
out
jns
stc
fmull
fwait
ret
pop
push
cmp
std
fildll
jb
xchg
ret
jb
ss
xor
scas
rcll
cmp
mov
lods
mov
jmp
shll
jnp
leave
ss
mov
mov
mov
mov
jp
xlat
jbe
clc
fsub
jmp
sbb
inc
ds
int3
mov
xor
dec
nop
mov
push
lods
jno,pt
lcall
ret
test
test
popa
bound
roll
mov
dec
mov
iret
pusha
lret
jmp
xchg
and
dec
lret
pop
lea
roll
pop
in
sti
sub
negl
loope
lock
jo
cmp
les
cmp
in
mov
jb
arpl
push
insb
sub
cmpsb
das
xchg
xchg
inc
inc
dec
stc
in
sbb
pop
test
or
lds
lret
push
jg
add
jle
jle
cmp
pop
cltd
loope
jp
and
pop
mov
dec
lret
aas
inc
les
mov
imul
mov
icebp
in
push
pop
and
cld
push
icebp
push
push
repnz
int
add
fmuls
imul
repz
mov
cli
add
xchg
movsb
sub
jno
mov
cwtl
clc
pop
push
ja
dec
lock
fs
push
xchg
push
sahf
xchg
and
loop
repnz
stos
enter
push
jnp
sbb
pop
xchg
rorl
add
sub
push
adc
and
mov
adc
stc
xchg
mov
and
xor
mov
jmp
fcomps
sub
adc
jle
sbb
sbb
ljmp
jg
and
movsb
xchg
sub
jge
and
xchg
mov
shlb
adc
into
jg
jecxz
cwtl
bound
sahf
or
incb
jae
adc
outsl
mov
lea
adc
inc
or
lods
sub
mov
jp
cmpsl
or
shrb
imul
orl
pop
imulb
insb
push
dec
push
leave
fcmove
pop
mov
repz
jmp
ds
inc
pop
jnp
pop
push
jl,pt
rcll
fs
pop
push
push
int3
int3
jg
xor
sbb
push
adc
dec
cmpsb
xchg
xchg
out
insb
mov
ret
sbb
imul
into
jmp
test
imul
mov
push
inc
push
or
das
or
out
inc
jg
sub
inc
jbe
scas
mov
jbe
inc
mov
imul
push
dec
sub
stos
out
jge
adc
add
fs
in
leave
mov
and
out
mov
mov
jnp
movsb
sti
jmp
jle
xchg
cmpsl
inc
clc
xchg
push
out
iret
pop
dec
mov
mov
fidivrl
sbb
dec
jl
pusha
cmc
mov
cmc
repz
inc
mov
nop
aas
xchg
jecxz
fiaddl
mov
pop
testl
out
and
push
xor
sub
popf
cli
jp
ror
or
jns
dec
aad
adc
add
mov
fidivrl
or
out
and
and
leave
mov
sti
out
push
movsl
js
inc
push
inc
pusha
mov
mov
rclb
mov
testl
dec
je
push
js
or
ret
popa
sub
mov
xor
sbbb
test
pop
sbb
mov
pushf
inc
mov
movsb
jne
pop
std
cmp
push
mov
and
in
test
lret
cmp
lret
mov
jmp
aad
mov
idiv
jmp
out
add
inc
rcrb
sbb
icebp
js
loop
sub
lods
out
in
cmpb
out
push
in
or
mov
inc
xchg
or
sbb
cwtl
jg
je
adc
sbb
jmp
cmpsl
push
ror
jae
adc
xchg
imul
or
cmp
lret
lea
inc
testl
xchg
ja
and
sbb
sbb
ret
adc
dec
into
mov
mov
jge
dec
cld
xchg
shll
shl
mov
inc
pop
and
sub
jl
mov
jo
dec
cld
mov
sbb
xchg
sub
sbb
or
ss
in
push
adc
sbb
and
int3
add
xchg
mov
push
and
ljmp
dec
loopne
sub
fidivrl
fs
imulb
jmp
jge
add
sub
mov
xchg
push
ds
cs
movsb
sbb
iret
sbb
call
pop
iret
push
popa
cmp
lods
in
test
outsb
inc
hlt
xchg
loop
leave
test
cmpb
mov
jns
gs
test
push
pop
sbb
adc
push
int
dec
fnstsw
inc
pop
fnstsw
sub
xchg
int3
pop
push
in
into
cwtl
push
mov
mov
outsb
add
daa
dec
arpl
add
insl
or
mov
ljmp
popf
jmp
fs
push
sbb
leave
inc
jmp
lret
cmp
inc
test
xchg
xor
je
jno
and
and
andl
or
leave
lock
gs
jg
jg
cmp
pop
lahf
or
jne
shlb
scas
pop
out
std
into
scas
lcall
add
sbb
jmp
int3
xchg
add
daa
mov
xchg
add
ljmp
adc
mov
imul
and
xbegin
mov
pop
push
mov
xchg
lds
xchg
gs
lea
shl
into
xor
sub
inc
fldcw
sub
cs
mov
loopne
testl
xlat
push
sbb
or
xchg
jns
into
shll
rcll
insb
mov
inc
enter
mov
or
push
mov
mov
dec
dec
mov
in
adc
ljmp
jl
mov
das
pushf
add
mov
sbb
mov
mov
push
inc
inc
inc
jnp
imulb
lcall
pop
mov
push
mov
and
jecxz
mov
fdivs
in
out
xchg
bound
icebp
adc
sbb
test
jno
andl
lea
mov
pop
xor
adc
gs
dec
or
sub
addl
mov
notb
fs
dec
pop
xchg
movsl
je
adc
xor
pop
mov
xlat
hlt
in
inc
push
out
stc
hlt
mov
and
scas
out
pop
outsl
push
mov
ja
sub
sbb
shll
or
mov
ljmp
call
aas
je
fld
stos
cld
cmp
ljmp
sahf
cmpsb
gs
mov
pusha
jnp
aam
loopne
cmp
lret
xorb
sub
mov
push
mov
out
dec
sbb
loop
mov
inc
mov
sub
mov
sti
mov
xor
aad
dec
shrl
mov
enter
inc
leave
sahf
or
or
aad
iret
sub
mulb
add
out
mov
sti
rcrl
outsl
fstpl
dec
push
dec
mov
push
mov
pop
inc
cld
xchg
cli
mov
les
mov
push
and
sbb
push
maskmovq
adc
sahf
dec
shrb
fidivl
jle
sbb
jbe
mov
ja
mov
outsb
adc
or
andb
mov
inc
test
or
cld
sbb
mov
and
jmp
mov
lods
jb
push
jmp
pop
mov
or
fsubl
adc
mov
adc
sub
out
fisttpl
hlt
in
add
je
in
ss
inc
in
mov
out
push
fwait
mov
bound
loop
and
pop
les
lea
fists
int
mov
sub
mov
dec
or
inc
sub
sbb
addr16
jmp
dec
ss
rcl
addl
fwait
repz
mov
mov
cmp
pop
jl
sti
test
es
xchg
dec
stos
pop
add
dec
into
pop
test
xor
ss
inc
aad
push
push
xor
and
nop
es
mov
xor
xchg
out
add
dec
stos
cmp
stos
daa
stos
xchg
xchg
cs
pop
mov
cmc
jp
mov
stos
cmp
pop
pop
rcll
popf
int3
cmp
rolb
inc
push
inc
sahf
adc
sub
cmpsl
subb
sbb
imul
leave
fiadds
xchg
pop
jmp
xchg
pop
adc
mov
leave
fstl
xchg
mov
in
cmp
push
sub
ds
push
mov
mov
iret
pop
pop
clc
xor
adc
movsb
cmp
inc
xor
pop
movsl
pusha
fwait
jbe
stos
jno
shr
test
out
faddl
adc
dec
int3
sub
sub
or
jo
negb
ja
cmpsb
jno
add
cmp
dec
inc
jp
clc
or
jo
sub
lds
mov
cmp
hlt
ds
or
dec
or
push
sarb
aas
mov
xchg
cmpsl
pop
jb
pushf
out
out
outsb
fimuls
add
jge
inc
loope
mov
sub
stc
push
cmpsb
or
fwait
mulps
jmp
fiadds
into
int3
ds
fwait
inc
sub
daa
insb
iret
or
pusha
shlb
stos
out
add
mov
sub
dec
push
and
out
pop
xchg
ret
divl
orps
pop
jmp
sahf
push
add
imul
push
mov
nop
inc
daa
cs
sub
mov
pop
fisubrs
or
add
ret
imul
repnz
and
push
inc
out
fdivrl
jne
in
push
mov
aad
or
mov
cmp
dec
push
push
add
sub
fxch
lahf
mov
sub
repnz
add
xchg
inc
push
jbe
repz
pop
cld
addb
test
cmpsl
js
cmp
or
lea
mov
jae
push
mov
dec
out
mov
fmull
loope
lods
xchg
adc
je
leave
repz
daa
mov
pop
lret
orl
rcll
iret
negl
clc
jbe
loop
leave
in
fwait
je
ror
pop
lret
add
xor
and
mov
cs
xor
adc
scas
fs
mov
inc
xor
in
mov
mov
push
clc
data16
arpl
jbe
or
call
ss
cmp
mov
fwait
inc
push
or
in
dec
jbe
orl
xrelease
jg
jecxz
inc
jno
pop
or
push
mov
test
ds
pop
iret
aaa
faddl
pop
iret
mov
cmp
push
cmp
sub
inc
jmp
xchg
xchg
je
adc
or
call
xchg
out
cmpsb
lods
xlat
out
test
movsb
mov
cmp
mov
cmp
fwait
mov
fs
mov
mov
cld
gs
dec
cmp
mov
stos
dec
pop
subl
cmc
and
das
mov
shlb
fisubrs
js
inc
out
pop
lds
lret
mov
cmp
jbe
cmp
mov
insl
lods
das
sahf
jne
mov
sub
imul
mov
lret
cltd
outsb
sub
sbb
mov
js
sti
adc
into
push
sahf
sbb
and
scas
xchg
jo
call
mov
dec
pop
loopne
jecxz
or
repnz
out
dec
dec
dec
xor
mov
aam
ds
int
test
cmp
mov
mov
ret
cli
mov
repnz
or
inc
push
data16
xlat
and
xchg
es
sbb
xchg
jle
dec
rolb
add
inc
enter
dec
stos
ljmp
add
xchg
stos
out
xorl
cmc
lods
inc
in
fstl
add
and
cmpsl
outsb
mov
push
dec
lds
mov
mov
dec
loope
mov
or
mov
inc
xchg
mov
mov
add
test
inc
loope
mov
xor
gs
mov
pop
scas
call
cs
push
xchg
jb
mov
sub
add
pop
pop
fstpt
sbb
cmp
xor
inc
inc
inc
mov
xchg
cmp
popa
mov
mov
sbb
out
repnz
jns
jns
bound
sub
insl
sub
repz
mov
jge
pop
shll
pop
rorl
insl
out
cwtl
xchg
mov
ret
dec
cmp
daa
lret
cmp
jnp
lds
into
rolb
mov
pop
pushf
fistpll
mov
stos
sbb
cld
xlat
adcb
xor
xchg
inc
ja
push
mov
mov
cs
add
out
sub
jge
bound
loop
fbstp
gs
cmc
fisttpl
cmp
xchg
ret
cs
pop
addr16
adc
push
add
add
sbb
push
icebp
mov
enter
xchg
and
cmp
inc
jge
bound
rcr
xchg
in
push
add
pop
mov
test
mov
pop
je
out
into
xor
jne
xchg
pushf
sub
pop
jecxz
xchg
fiaddl
ljmp
leave
cwtl
sbb
cltd
pop
jne
out
sti
xchg
jne
push
xchg
in
lods
cmpl
or
insl
mov
pusha
jns
inc
dec
adc
cmp
jle
sahf
roll
testl
int3
xchg
out
mov
enter
repnz
cld
enter
dec
stos
xchg
aas
jb
push
jge
lea
hlt
sbb
mov
into
pop
mov
js
sbb
or
in
ljmp
inc
pop
in
scas
mov
rcll
sub
mov
jmp
test
mov
outsb
into
jns
adc
call
mov
outsb
cmpsb
pop
dec
push
cs
cmp
dec
imulb
andl
pop
jle
adc
add
cmp
outsl
inc
mov
xor
lahf
iret
jp,pt
inc
and
pop
inc
mov
inc
mov
stc
jp
xchg
xchg
pop
pop
and
gs
and
or
fsubs
mov
inc
mov
aad
cltd
jae
jne
inc
rcr
daa
jbe
mov
aad
jae
das
ucomiss
xchg
and
mov
in
dec
mov
dec
int3
cli
inc
sar
adc
sbbb
nop
xchg
push
xchg
scas
pushf
addr16
aam
fsubrl
stc
mov
scas
xor
add
xor
push
fwait
out
rcpps
fidivrs
pop
jb
int3
and
lods
pop
lea
jl
add
push
mov
shrb
mov
inc
push
and
out
insl
dec
dec
xchg
sub
data16
gs
in
mov
je
mov
cmpb
mov
enter
mov
jnp
subl
shll
adc
add
orb
out
hlt
cmpsl
pop
jmp
gs
scas
jge
mov
ffree
insl
push
je
or
and
dec
popf
std
mov
jo
aam
clc
mov
fnsave
stos
mov
fmull
xchg
loop
adc
jmp
int
fstpt
dec
jb
push
adc
push
or
cwtl
mov
xor
sarl
sub
add
fs
loop
push
andl
push
adc
sub
daa
jne
mov
and
in
sub
push
xchg
xor
fisttpll
sub
sti
or
jns
out
ss
or
mov
test
sub
ret
enter
scas
cmpsb
mov
in
in
loop
and
mov
pop
xor
call
mov
movb
cmpsb
call
push
push
or
outsb
pop
test
xorb
push
sub
fs
cmp
mov
add
cwtl
cwtl
lock
or
clc
fstl
test
in
and
sti
cmp
std
inc
mov
out
sub
fstl
fldl
jle
rcrb
jo
call
push
clc
shrb
enter
mov
pop
add
cmp
xchg
outsl
test
adc
push
xor
sbb
shlb
push
sbb
xor
cli
fstl
imul
lods
cld
mov
cmp
lahf
into
xchg
ret
fs
xor
cmp
std
rolb
mov
not
jmp
inc
adc
push
sbb
or
lock
pop
xchg
dec
repz
mov
dec
mov
aam
scas
loope
mov
cltd
ljmp
outsb
and
nop
adc
jno
jnp
push
jg
je
jbe
lea
jg
loopne
ss
inc
xchg
int3
into
dec
add
test
cmpsl
pop
add
aas
fst
xchg
test
iret
lock
rclb
sub
jno
rol
rcll
hlt
mov
fwait
and
insb
jg
scas
gs
out
ljmp
das
xchg
xor
mov
adc
inc
mov
pop
pop
int
ret
pop
fistps
mov
jp
cwtl
sub
push
mov
test
sti
xor
cmp
lret
jmp
and
outsl
insb
xchg
cli
arpl
or
push
movsl
insb
sti
ja
cmp
xor
enter
sbb
xor
cmp
notb
cmpsl
aaa
ror
push
xchg
divl
lahf
inc
sbb
add
jae
gs
mov
pop
out
push
mov
inc
mov
sbb
push
in
std
sub
push
in
hlt
fsubl
bound
dec
inc
out
adc
cmc
lahf
fs
jbe
mov
pop
scas
jmp
fdiv
fwait
dec
mov
rcrl
adc
push
fs
pusha
divb
mov
xor
andl
lahf
cmp
xchg
xchg
in
dec
rcl
ja
jmp
add
jns
ret
popf
inc
push
pop
xchg
push
jae
out
or
mov
xor
mov
hlt
jne
pop
push
pop
aad
add
dec
add
xor
push
xor
push
ss
xor
push
cmpsl
sub
mov
jae
mov
sti
mov
lods
pop
pop
clc
into
lcall
pop
dec
scas
inc
js
out
adc
xchg
rorl
xor
or
cmp
dec
pop
and
jnp
loopne
imul
lret
outsb
xchg
gs
rolb
stc
addr16
push
imul
je
add
jecxz
fidivs
addr16
push
fstl
mov
pop
dec
into
mov
icebp
roll
add
add
xchg
jae
stc
gs
insb
add
test
out
aaa
fadd
jl
aas
scas
mov
pop
out
repz
stos
mov
insl
sbb
xchg
shll
sbb
jne
cmc
fs
lods
mov
mov
xor
clc
int3
je
push
push
sub
or
movsl
sub
in
or
stos
leave
dec
adc
add
pushf
cs
jae
cmp
ljmp
add
fdivp
imul
in
pop
inc
je
sahf
dec
psllq
mov
fiaddl
pop
sub
add
sbb
jno
arpl
dec
xor
mov
push
push
movsl
aam
aam
pop
sahf
cmc
adc
sub
rcll
xchg
jp
pop
push
mov
aad
adc
xchg
mov
and
ret
xchg
inc
push
test
push
cs
aaa
lcall
mov
mov
leave
dec
in
testl
setae
out
sbb
inc
es
and
pusha
sbb
mov
iret
das
mov
cmp
sti
loop
into
fst
push
mov
mulb
jmp
push
ficompl
xchg
shlb
dec
add
jmp
adc
xor
cmp
ret
in
call
jg
mov
ds
adc
loope
adc
sti
push
fwait
mov
test
xchg
fldl
test
push
popf
rorb
std
lods
add
movsb
aad
sub
paddsb
cltd
shll
testb
cltd
into
sbb
sub
rclb
das
repnz
jo
out
xchg
cld
push
out
mov
xchg
sahf
or
jo
mov
bound
fisubrl
dec
cltd
aas
mov
dec
pop
stc
dec
xchg
mov
xchg
add
dec
or
xlat
sub
jg
mov
xor
add
fs
cltd
ja
or
lock
movsl
push
cmpsl
insl
jns
adc
dec
fistpl
sub
out
dec
mov
xor
dec
in
or
xor
lock
cltd
mov
pop
sti
fwait
xor
outsl
enter
jne
jbe
fdivl
mov
scas
adc
test
mov
sbb
loop
stos
insl
rcll
iret
aad
stc
or
mov
pop
mov
xor
and
jb
dec
sub
xchg
jno
jmp
sub
loop
je
adc
xor
inc
int3
pop
into
lea
mov
mov
dec
add
in
sbb
jg
cmpb
mov
or
jle
push
sub
das
aad
mov
sub
mov
jp
clc
mov
js
and
daa
mov
das
lcall
sub
iret
imul
das
outsb
jmp
mov
loop
popa
jge
pop
in
adc
sub
lds
add
and
pop
sub
cmpsl
mov
adcb
arpl
adc
repz
and
cmp
mov
jae
xchg
jp
jle
sub
in
insl
aam
loop
mov
add
and
sub
and
add
dec
or
lret
xchg
insb
adc
dec
data16
mov
arpl
inc
jno
lahf
repnz
insb
fwait
and
stc
and
pop
insb
xchg
bound
push
into
push
mov
in
cmp
xor
adc
cmp
loopne
hlt
adc
mov
mov
jns
jmp
add
sub
inc
into
pop
inc
mov
mov
jne
in
dec
push
jae
rcr
dec
and
and
push
lret
xor
iret
xlat
pop
xchg
loope
popl
xchg
mov
dec
lcall
jo
jb
dec
pushf
daa
and
enter
or
sarl
lret
lcall
shll
or
mov
loop
push
mov
dec
jmp
data16
dec
test
dec
int3
pop
in
cmp
push
ret
popa
sbb
movsb
js
out
aam
cmpsb
lods
jg
add
adc
scas
jmp
pop
mov
shrl
or
xor
test
mov
xchg
into
and
enter
roll
add
inc
mov
outsb
gs
stos
sub
adc
into
das
dec
mov
adc
cmpsl
add
sbb
popf
xor
out
xchg
sub
test
and
pop
movsl
scas
sbb
ljmp
sar
repnz
dec
insb
fadd
bound
repz
loope
inc
ret
mov
add
mov
dec
push
mov
and
aaa
jl
dec
and
sbb
fldenv
loop
push
pop
icebp
mov
ret
pusha
lock
ljmp
jbe
lret
cltd
xchg
dec
xor
mov
jbe
and
or
push
sub
push
dec
das
cs
pop
fnstenv
cli
push
jne
aaa
mov
jno
sbb
ss
xor
mov
jne
mull
data16
pop
stc
sbb
std
push
filds
pop
pop
popa
xor
dec
shrd
push
add
mov
xor
invd
jns
mov
stos
popa
sub
es
test
enter
imul
or
mov
in
mov
lock
add
push
sub
xchg
arpl
mov
shlb
das
aas
subb
jo
in
ja
jns
or
loopne
repnz
or
inc
add
movsb
int3
imul
mov
test
jns
dec
test
lret
add
repnz
cwtl
xchg
stc
and
cmpl
pop
outsl
jo
sub
sahf
nop
push
cld
mov
mov
push
les
clc
pushf
orb
popl
or
push
cmp
push
fucomip
push
fdivl
jge
mov
outsb
jns
xor
xchg
mov
pop
outsl
das
leave
in
add
mov
mov
pop
imul
sbb
mul
mov
stc
mov
sti
add
cmpsb
jae
ret
add
pop
fiadds
lahf
cmp
sub
cli
fucom
fldenv
push
dec
cs
fdivrl
sub
fsubrs
sub
imul
fldenv
loop
adc
or
push
lret
scas
pop
sub
cmp
adc
sub
or
push
adc
icebp
fcoml
sub
enter
xor
cwtl
enter
ds
lds
inc
push
and
mov
sub
xchg
or
push
sti
fisttpl
lret
sbb
or
cmp
fdivr
add
jmp
dec
stos
sub
ss
imul
cmp
out
shll
and
in
scas
ffree
dec
mov
movsl
pop
pop
cld
xchg
insb
out
mov
adc
sub
and
loope
dec
test
outsb
mov
fadds
pop
int3
cmpsb
std
mov
or
pop
pop
push
inc
mov
clc
rcrl
push
sbb
ds
add
int3
dec
mov
daa
cmpb
inc
pop
jbe
into
sahf
inc
sahf
call
std
sar
push
ret
inc
adc
dec
lds
icebp
daa
js
adcb
xlat
outsl
leave
nop
mov
push
cmp
xchg
mov
rcll
or
nop
aad
call
fsubrl
sub
movsl
negb
mov
push
imul
lahf
dec
test
sbbl
test
fidivs
push
push
arpl
xor
loopne
test
dec
mov
test
std
out
pop
stc
inc
mov
lcall
out
adc
loopne
xor
gs
xor
push
mov
jbe
adc
sbb
mov
lret
in
flds
mov
and
add
sub
aas
jne
xchg
jg
push
mov
inc
mov
in
test
xchg
sahf
mov
mov
insl
jmp
cmp
push
fidivl
or
je
aad
dec
push
test
mov
decl
fsubr
stos
test
mov
dec
mov
cli
xchg
test
adc
cmp
aaa
out
pop
adc
push
mov
jo
or
addr16
jge
popf
dec
subl
xor
jle
movl
cltd
sub
test
push
mov
vrcp28ss
ret
lret
mov
fwait
or
jle
js
aad
cltd
bound
mov
xchg
push
pop
sbb
xlat
xchg
adc
jae
cld
xor
jg
loopne
push
cmp
mov
int3
pop
xchg
jns
repnz
stc
in
cmp
adc
cmp
adc
and
or
movq
xchg
dec
jmp
scas
pop
inc
sbb
sub
dec
jmp
jne
int3
push
mov
dec
xchg
in
xlat
sbb
pop
lock
test
jbe
pop
dec
pushf
sti
aaa
stc
aaa
nop
or
jl
pushl
lret
repnz
cmp
pop
jg
and
repz
mov
pop
into
ja
mov
mov
je
notb
sbb
mov
pusha
imul
jbe
cmc
loope
dec
inc
jecxz
lock
mov
xchg
loop
inc
and
div
or
leave
dec
or
mov
int
nop
pop
pushf
ss
adc
xchg
int3
xlat
mov
dec
ds
xor
scas
push
jbe
sbb
movsb
mov
xchg
sub
test
jle
lds
jmp
in
xor
mov
test
xchg
dec
fs
ret
jns
inc
jl
cmp
and
nop
sbb
mov
push
sub
sbbl
pop
sbb
cld
out
enter
cs
cmp
jg
xchg
mov
sbb
mov
dec
icebp
push
mov
push
or
adc
sbb
sahf
es
pop
push
rcr
sub
xchg
xor
cmc
ss
or
ds
xor
add
pop
lds
pushf
add
xor
add
fistps
jbe
insl
xlat
sub
ret
add
icebp
cld
dec
mov
cmp
adc
push
inc
xchg
mov
or
adc
fs
pop
mov
jno
cmc
push
arpl
std
cmp
enter
pop
fwait
hlt
movsl
hlt
dec
sub
mov
dec
stc
sbb
inc
je
sub
jo
push
cs
ds
aaa
icebp
dec
pop
fidivrl
adc
jg
sbb
les
inc
lahf
fnstsw
sub
repnz
insb
pop
push
sub
int3
jl
cmpsb
jle
in
xchg
hlt
das
js
and
adc
rcrb
lcall
fwait
add
or
clc
push
xchg
push
sbb
test
stc
or
into
xchg
addr16
sarb
pop
jns
ja
push
jl
popf
xor
dec
pop
int3
test
mov
test
jle
mov
lcall
callw
pop
or
das
push
rorl
dec
jnp
cmpsl
xchg
loope
mov
mov
int3
pop
imul
push
push
daa
ljmp
ds
and
lds
dec
popa
jmp
pop
pusha
dec
pop
sbb
add
xchg
pop
dec
bound
inc
loopne
xor
ljmp
scas
xlat
dec
test
aaa
lds
ljmp
mov
and
sti
cs
push
or
cld
inc
sbb
xor
into
lahf
out
xchg
sbb
push
dec
jae
and
daa
sbb
or
push
mov
sbb
aas
movsb
adc
les
or
fadds
push
ss
dec
lods
cs
pop
mov
cmpl
mov
mov
adc
arpl
leave
scas
icebp
jb
and
inc
pop
iret
mov
fs
cmpsb
mov
scas
cltd
xchg
jle
ljmp
push
push
icebp
rorb
xchg
jg
rcrl
fdivp
lds
push
imul
rorl
pop
xor
arpl
push
cmp
jge
testl
pop
lret
fdivrl
ror
inc
pop
and
out
outsl
call
fsubrl
scas
and
add
inc
jbe
lcall
jecxz
pop
testb
mov
test
scas
adc
xor
push
stos
mov
lods
xchg
xchg
cmpsl
lock
mov
mov
push
cmp
push
jb
loope
jno
mov
or
movsb
jno
ret
xlat
lods
das
fs
dec
fndisi(8087
clc
mov
mov
lock
xchg
cmp
push
fidivs
icebp
add
jecxz
cs
push
cmp
xor
cld
arpl
and
loopne
push
pop
cmp
movsb
jle
push
push
popf
test
fdivp
mov
ds
dec
xor
mov
cltd
xchg
jle
jl
push
in
out
add
loope
mov
in
cld
inc
test
xchg
mov
cmpsl
fisttpl
dec
inc
loop
xchg
popf
pusha
aam
arpl
roll
xor
andb
lods
sub
jecxz
or
xchg
sbb
adc
call
inc
enter
test
rorl
pop
cmp
add
xchg
ja
decl
aaa
stc
dec
stc
leave
lods
xorl
pop
xor
fsubl
sub
test
mov
cli
out
jle
shrb
fisttpll
push
sbb
jl
pop
xor
call
test
and
cmp
xor
mov
mov
sub
ret
out
mov
cmpsb
dec
outsb
jnp
jg
xor
push
add
shrb
lods
xchg
imul
cmp
leave
inc
xchg
mov
jl
addr16
push
xchg
inc
loopne
push
int3
pop
mov
js
es
inc
pop
adc
dec
out
mov
mov
sub
test
push
test
pop
inc
jb
leave
addr16
aam
push
mov
aaa
lds
ds
orb
xor
dec
sbb
ljmp
or
xchg
fidivl
xchg
ret
or
out
aam
cmpsl
jbe
push
dec
in
push
sbb
fimuls
mov
daa
dec
stos
stc
xor
cmp
call
test
sarl
pop
fistl
pop
xchg
mov
lods
add
jno
les
mov
mov
mov
repz
stos
iret
xchg
lock
push
cmpl
pop
andb
pop
push
cltd
jb
sub
cli
push
ret
xchg
mov
repnz
lods
rorl
leave
inc
and
dec
cmpsl
adc
push
adc
pop
fstpl
xlat
mov
xor
aaa
scas
xorl
xchg
mov
repnz
cmpsb
and
or
mov
inc
es
fcomps
jo
ja
xchg
enter
imul
jle
sahf
push
aas
xor
fdivrs
mov
mov
add
fldenv
nopl
mov
push
out
dec
and
mov
mov
inc
test
mov
dec
cmpsb
xchg
fidivrl
loope
repnz
notl
push
fstl
in
mov
in
add
nop
pop
lahf
lret
adc
sub
mov
push
adc
mov
ss
imul
cmc
mov
repnz
cmp
insl
sbb
push
lods
ds
insl
js
enter
test
xor
push
mov
ret
in
push
or
push
push
lds
test
sbb
rclb
lcall
andb
jecxz
inc
or
pop
mov
mov
lods
icebp
jae
insl
je
iret
push
jmp
insb
xor
add
add
mov
sbb
jmp
outsb
mov
out
out
mov
data16
sbb
in
fidivrs
jg
xor
daa
inc
lock
push
cmp
in
pop
inc
pop
add
loop
xchg
mov
mov
in
inc
stc
shll
jnp
iret
jae
pop
inc
dec
inc
je
jmp
call
arpl
popf
fdivrl
cs
insl
insb
stos
xchg
pop
jp
or
pop
les
push
aas
adc
xchg
mov
ja
and
mov
fisubl
addr16
and
into
pop
dec
icebp
aam
hlt
out
ss
sahf
cwtl
sti
int3
and
iret
stc
lods
add
push
jmp
cmp
movsl
test
orb
push
mov
dec
xor
out
js
mov
loop
add
mov
sti
mov
or
enter
popf
add
mov
or
addl
in
movsl
js
mov
push
fmul
dec
adc
pop
and
sbb
popa
enter
call
mov
jns
jne
inc
fwait
pop
imul
mov
lea
dec
xor
sbb
ja
arpl
popa
addr16
movsl
push
shll
cwtl
cmp
push
mov
ljmp
push
jns
mov
test
loop
pop
rorl
mov
push
xor
sbb
imul
adc
jbe
movsl
pushf
push
sti
add
inc
dec
stc
dec
mov
out
mov
mov
stc
inc
inc
imul
add
add
push
adc
mov
popa
inc
mov
xchg
xchg
sbb
jb
enter
fdiv
fadds
mov
sub
adc
gs
stos
mov
push
cmp
mov
or
mov
xchg
jmp
fisttps
and
and
lea
imul
and
bound
je
xor
das
sbb
xchg
dec
adc
popa
sub
test
rcll
sbb
lock
insl
jbe
lods
out
cmp
mov
cmp
or
sbb
inc
icebp
jle
push
inc
pop
cmpsb
xchg
sarb
ffreep
popa
xchg
or
stos
jl
mov
adc
cmpsb
je
pop
sub
test
out
std
lea
sbb
dec
adc
test
mov
mov
xchg
mov
or
push
add
sbb
xlat
lcall
and
pop
pop
push
aam
push
frstor
incb
push
into
push
xor
xor
scas
mov
repnz
mov
icebp
rcrl
into
mov
dec
sti
pushf
fdivs
test
xor
xor
test
xchg
ss
into
mov
jl
lret
pop
ret
mov
das
popa
fisttps
push
test
stc
mov
in
test
xchg
out
sub
xchg
xchg
pop
dec
hlt
test
sbbl
scas
ret
sbb
sar
subb
xorl
sub
cmp
and
xchg
out
ret
push
xchg
ret
mov
push
mov
or
sahf
das
ret
mov
jno
scas
inc
jns
mov
loope
addr16
fs
dec
jno
xor
cmp
lret
inc
rcll
mov
hlt
dec
cmpsl
shlb
outsl
push
mov
mov
inc
jp
in
ds
push
movsl
jnp
mov
daa
and
fldcw
popa
movsb
jecxz
jb
pop
xorl
icebp
test
xchg
push
ja
fidivl
mov
fidivl
mov
pop
out
in
in
cmp
idivl
iret
mov
inc
es
mov
mov
sahf
push
push
and
mov
adc
add
sti
xchg
out
and
rcl
jecxz
push
xchg
pusha
cltd
insb
cwtl
lds
cwtl
cs
outsl
jg
sbb
mov
ljmp
xchg
xor
dec
or
outsb
cmpsb
stos
push
sbbl
sbb
fsubl
jge
out
mov
cmp
xchg
and
mov
adc
hlt
pop
cwtl
pop
pushf
xor
cmp
xor
sub
sbb
sub
stos
pusha
and
in
ja
push
xchg
and
push
mov
lods
pop
jmp
sub
adc
mov
push
fwait
inc
push
mov
adc
sub
cld
add
cmp
xchg
push
sti
or
ds
or
jg
and
or
push
ret
mov
jle
dec
xchg
sub
xchg
out
xor
or
call
lahf
sahf
into
adcb
arpl
adc
jle
push
testl
jl
test
inc
and
shl
add
fimuls
cmp
decl
mov
adcl
es
out
in
gs
sub
mov
test
addr16
mov
and
push
lea
iret
notb
add
xor
mov
cmp
les
ficoml
jle
loop
or
mov
pop
sbb
lea
in
xchg
lret
sbb
pop
shll
push
pop
ljmp
lea
add
push
xor
cmp
xor
jge
ret
incb
addl
aaa
xchg
inc
lds
fcmovnb
xor
or
imul
xor
fnstenv
xchg
inc
push
push
hlt
mov
cs
leave
sbb
mov
lods
lock
cli
or
adc
out
adc
push
mov
sbb
inc
cmp
add
dec
jae
lret
add
jp
movsb
mov
dec
jg
addr16
rcll
xchg
rolb
aam
pop
jmp
bnd
dec
mov
sub
or
mov
lock
push
jb
sbb
mov
or
push
loope
fadd
dec
xor
imul
aad
mov
lret
jmp
mov
push
enter
add
stos
clc
add
mov
sbb
ficoml
mov
add
lds
mov
push
leave
adc
pop
out
out
popf
mov
data16
mov
out
lock
jp
lock
sbb
fs
xor
cmovge
inc
ss
xchg
push
dec
push
and
mov
mov
mov
lcall
mov
mov
pop
negb
and
es
faddl
add
bound
outsl
dec
cmc
mov
mov
loop
add
inc
jecxz
cmpsl
xor
jne
push
data16
jp
jne
dec
leave
outsl
push
mov
ret
and
lea
out
push
cmc
movsb
popf
or
jecxz
add
popf
xlat
mov
fnstenv
int3
icebp
mov
add
inc
pop
push
xchg
enter
arpl
inc
orl
and
add
add
mov
jmp
jae
push
fwait
testb
es
jbe
mov
out
lods
popa
and
pop
movsl
movsl
pop
lahf
adc
xor
sbb
test
das
sub
lea
cs
mov
insl
lret
daa
pop
cmp
jnp
cli
adc
js
loope
xrelease
ds
pop
mov
inc
adc
bound
xchg
movsb
add
and
out
jbe
pop
xor
sbb
push
lcall
sbb
sbb
idiv
je
shlb
das
outsl
push
shlb
std
test
pushl
mov
push
movsb
adc
mov
aad
hlt
xor
les
or
sahf
jl
cltd
scas
xchg
mov
ja
or
fsts
mov
mov
dec
adcb
push
mov
clc
aam
mov
inc
lock
push
shrl
pop
andl
push
mov
rcll
loopne
rep
adc
dec
les
mov
jl
data16
ret
lods
int3
fimull
jp
xlat
push
cmpsl
cli
jbe
mov
adc
dec
cli
std
adc
pop
dec
popf
add
ja
push
xor
mov
pushl
fisttps
lcall
mov
enter
sbb
fsubl
push
sbb
add
das
cmp
lea
cmpsl
push
mov
and
xchg
into
mov
and
jg
popf
inc
push
push
call
jb
mov
orb
dec
xor
add
lods
enter
movsl
adc
or
mov
out
mov
cmp
xchg
jl
fcmovnu
push
cs
xchg
iret
arpl
lds
adc
pop
xchg
or
mov
jo
dec
mov
lea
xchg
xchg
aad
lret
rorl
pop
lods
mov
pushf
je
ds
repz
adcl
jp
jb
in
mov
shll
icebp
pop
add
adc
popf
aam
repnz
jl,pn
pop
inc
adc
xor
add
pop
cmpsl
pop
aaa
adc
mov
repnz
icebp
dec
daa
sub
sarb
xchg
lea
mov
insb
jp
sub
pop
add
mov
and
movsl
shll
aam
dec
fdivs
mov
icebp
in
fbld
stc
mov
decb
ror
mov
push
outsl
cmc
mov
cmp
adc
inc
add
inc
inc
inc
sub
jmp
nop
xchg
and
loopne
sbb
xor
cmp
popa
xchg
push
sub
inc
push
cli
movsl
fimuls
fcmovnu
movsl
push
inc
sub
call
pusha
fisubl
inc
loope
xor
enter
lcall
pop
rcll
pop
in
sbb
xchg
gs
aaa
out
jno
fisubs
xor
sub
pop
stc
mov
mov
mov
and
cmp
add
in
movsb
lret
mov
sbb
or
sbb
fsubrl
pop
adc
out
out
cmpsb
stc
cmp
ljmp
or
xor
mov
iret
cmp
xchg
dec
mov
stc
xor
pushf
sbb
addr16
dec
scas
xchg
push
and
push
mov
inc
add
rolb
mov
sbb
mov
mov
add
xchg
icebp
popf
icebp
loope
pop
mov
add
stc
inc
inc
pop
xchg
dec
lahf
sbb
pushf
ficoml
mov
scas
mov
push
push
std
mov
es
scas
es
pop
sub
mov
jmp
and
stc
jmp
daa
sub
xor
shlb
push
cld
movsl
lds
pop
dec
dec
and
clc
adc
lods
pushf
push
push
idiv
xor
mov
push
sbb
fbstp
sub
aad
and
pop
cmc
ret
in
cmp
jg
push
add
jle
ret
jmp
mov
pushf
fs
into
push
rol
loope
cmc
add
or
pop
sbb
push
js
or
xchg
fiaddl
int
nop
jae
jmp
mov
push
add
xchg
cwtl
sub
insl
mov
add
sbb
add
cmpsl
pop
sbb
in
imul
ret
xor
hlt
xchg
lock
popf
mov
daa
enter
xor
inc
ret
js
sub
sarb
and
les
dec
fimuls
int3
adc
daa
pushf
inc
decb
pop
nop
and
out
es
pop
sub
fsubl
xchg
popa
adc
mov
and
jle
cmp
sbb
push
xchg
inc
loop
mov
fdivl
jne
and
pop
scas
sub
gs
or
push
lcall
aad
jg
cmp
dec
sub
test
pop
outsb
adc
xchg
mov
cli
je
inc
inc
sbb
dec
jae
test
pop
imul
add
xchg
or
pop
fxch
dec
loop
lock
imul
cmp
jp
data16
cmp
rolb
outsb
leave
scas
pusha
sbb
jg
int
inc
into
or
and
and
ja
pusha
add
fcmovb
fcmovb
pushf
icebp
orps
notl
add
std
jns
dec
outsl
icebp
pop
mov
sbb
clc
or
repnz
mov
add
push
inc
mov
or
addr16
or
shll
xchg
leave
fcmove
icebp
test
data16
jno
mov
outsb
dec
jns
movsb
cmp
cld
inc
ljmp
or
mov
inc
mov
push
cmp
cmp
pop
xor
push
hlt
dec
mov
xor
mov
ret
stos
cmp
stc
mov
outsl
add
repnz
inc
in
test
mov
xlat
jbe
fbstp
jne
mov
jae
xchg
and
xor
or
imul
dec
jo
loopne
push
int3
es
mov
addr16
pop
repz
add
inc
pop
loop
cmpsb
rcr
dec
push
adc
int3
mov
lahf
sub
cli
subl
dec
xchg
push
mov
lock
sbb
and
andb
fcoms
cmp
pop
mov
repnz
mov
js
jb
hlt
push
loop
mov
xor
xchg
lcall
ret
sahf
rcll
loope
insb
xchg
aaa
jnp
xor
dec
pop
cmove
or
push
in
lock
xchg
jne
push
push
sti
sbb
mov
nop
int3
dec
pop
outsb
rcrl
jl
xchg
out
adc
dec
cmp
mov
and
add
lahf
int3
shr
repz
pop
sbb
and
mov
dec
pop
mov
stos
mov
cmp
pop
int
xchg
sbb
sahf
push
add
mov
stc
add
inc
mov
cmp
xor
jg
push
stc
inc
ds
mov
mov
fidivl
jmp
inc
movsb
xchg
inc
std
push
sub
add
cmc
int
xchg
faddl
mov
mov
jno
push
cltd
mov
imul
aam
les
jmp
cmp
mov
adc
adc
lret
inc
pop
pop
je
sbb
push
stc
xchg
arpl
pusha
dec
cmp
clc
mov
aam
mov
dec
mov
mul
add
in
xor
and
mov
sub
in
lea
ljmp
inc
push
mov
mov
test
into
sbb
pop
sahf
push
int
pop
xor
test
loope
jne
scas
or
mov
imul
enter
aas
hlt
in
or
add
add
sub
jno
pop
jge
push
test
adc
dec
dec
jg
xor
inc
call
mov
dec
sbb
dec
ljmp
push
hlt
aaa
movsl
xchg
dec
add
sahf
pop
cmp
insb
into
insl
mov
add
mov
or
ret
jo
fstl
cwtd
mov
jno
je
aad
inc
sbb
fwait
xor
jmp
aam
sti
mov
xchg
lret
hlt
inc
dec
cmpsb
lods
and
addb
mov
add
pushf
jg
push
mov
jecxz
ror
jo
mov
sub
mov
adc
mov
in
lock
out
add
sbbl
popf
xchg
dec
push
push
xor
test
cmp
movsl
addr16
xor
or
jmp
push
in
sbb
je
popf
cmp
out
movsb
int3
out
mov
imul
add
ss
add
pushf
cli
adc
xchg
push
fildll
icebp
inc
sbb
jo
outsl
jns
out
out
aad
outsl
pop
add
scas
outsl
ret
cmp
sbb
call
rcrl
mov
pop
mov
push
int
pop
push
or
jmp
jnp
xor
dec
cld
gs
leave
idivl
cltd
push
daa
ss
sub
dec
adc
and
xchg
sbb
mov
rcrl
dec
or
pop
mov
mov
in
std
xchg
dec
insb
mov
mov
out
loop
clc
mov
cmp
or
and
icebp
xor
ja
icebp
lcall
rclb
repz
inc
scas
ljmp
dec
jl
xchg
incl
test
sbb
cmp
stos
cmp
ljmp
fldenv
add
push
mov
add
mov
jno
scas
test
xor
test
push
dec
enter
mov
andb
out
decb
rcrl
jge
clc
lock
jl
jl
call
xchg
rclb
pop
test
add
and
loope
add
dec
mov
push
mov
push
adc
dec
jp
cltd
add
mov
rclb
mov
push
popf
push
fstpl
daa
aaa
mov
ret
xor
cmp
ret
pop
idivl
in
inc
cld
jno
or
ja
mov
mulb
cmp
stos
jg
fbld
push
cmp
adc
pop
push
xor
fiaddl
jbe
in
sahf
into
add
or
mov
mov
movsb
loope
jp
sub
int3
or
jl
in
scas
cmc
mov
cmpsb
fs
and
pop
and
xor
jecxz
aam
sbb
dec
sub
mov
and
movsb
jmp
add
dec
dec
in
dec
jnp
mov
and
fisttpll
scas
sub
push
leave
iret
ja
orl
movsb
imul
in
adc
or
jmp
xor
in
pop
gs
dec
push
aas
ret
orb
mov
enter
sub
repnz
mov
pop
les
je
jns
dec
and
pusha
idiv
and
mov
shll
shrb
in
ret
in
mov
in
xor
sub
jo
ja
mov
pop
out
leave
in
sti
sub
out
cmpsl
pop
cmp
add
and
fsubrl
and
and
jno
push
cmp
adc
and
sbb
sub
je
adc
stos
add
dec
xchg
lods
lret
dec
js
imul
dec
loope
jl
movsl
jl
jo
inc
xchg
das
bound
mov
push
push
loope
inc
mul
andb
jns
lcall
mov
xor
outsb
fscale
in
scas
into
add
xor
jae
inc
ficomps
adc
mov
inc
push
arpl
mov
cmp
and
sub
sbb
sub
fisttps
pop
imul
xchg
adc
cli
pop
sub
int
pop
pop
outsb
in
jle
ds
out
adcl
mov
loope
fdivl
test
dec
sub
out
inc
int
and
dec
fisubrl
cli
test
pop
cld
imul
xor
pop
sub
icebp
out
sbb
scas
das
in
push
repz
decb
adc
pop
mov
mov
and
cs
mov
pop
pop
or
and
loopne
cmp
and
inc
mov
or
pushf
dec
daa
add
ss
loope
add
jne
das
pop
out
mov
mov
sub
adcl
nop
xchg
ficoml
data16
pop
push
call
in
add
movsl
out
add
jbe
jecxz
xlat
repnz
pop
mov
and
push
pushf
cmpsl
pop
mov
ja
xchg
fcmove
scas
pop
dec
push
pop
jmp
pop
add
popa
enter
cwtl
add
add
int
jnp
xchg
in
push
cmp
sub
fs
js
mov
sahf
cmp
jg
cmpsb
lods
cmpsl
mov
cmc
pop
call
xchg
or
dec
push
cwtl
dec
mov
scas
fstpt
bound
xor
cmp
aaa
sub
decl
mov
ja
and
sub
and
xor
cmc
ds
in
add
mov
pop
icebp
fdivrs
push
jmp
sbb
rep
push
or
aas
stos
mov
addr16
inc
sub
xor
movsb
lahf
mov
jp
das
fwait
dec
mov
sub
fdiv
push
mov
cmp
fsubs
xchg
push
icebp
movsl
out
jecxz
out
leave
pop
mov
sbb
mov
xlat
ds
push
nop
enter
or
push
jecxz
xor
insl
inc
aad
adc
jg
mov
inc
jmp
pop
lods
shl
sub
pop
jne
in
xor
adc
ss
cmpsb
pushf
pushf
lret
int3
push
pushf
fstps
ret
pop
pop
out
in
sbb
xorl
outsb
or
out
dec
clc
addr16
push
stos
faddl
gs
pop
cmpsl
adc
incb
stos
sbb
or
lods
ret
aam
pavgb
loopne
inc
roll
enter
push
xor
test
mov
ljmp
xchg
xchg
mov
or
jb
xorb
into
xor
mov
loope
xor
jge
and
cmp
sbb
rol
or
insb
mov
daa
enter
push
cmpsb
jo
mov
scas
out
mov
test
mov
stos
stc
and
dec
out
leave
xchg
aam
jmp
rolb
arpl
jo
call
out
ret
out
and
shrb
cmp
xor
and
sub
sub
adc
outsl
into
bound
pop
xchg
push
or
mov
mov
mov
mov
idiv
inc
out
jns
push
pop
out
inc
mov
sbb
adc
cmpsb
inc
insl
ret
adc
mov
sbb
andl
call
nop
fcoms
scas
jle
insl
mov
jl
jge
daa
push
or
sub
or
push
pop
int3
jne
test
shlb
je
push
cltd
adc
pop
enter
vpsubb
add
jnp
sti
xchg
sbb
jl
xchg
scas
push
dec
imul
cmp
pop
cmpsl
lret
icebp
sub
shlb
dec
push
xchg
add
fmul
push
pop
das
sub
xor
cmpsb
cmp
orl
sarl
pop
scas
push
push
pop
pop
rcr
pop
mov
jl
mov
sbb
cmp
es
divb
jbe
bound
in
andl
xchg
sub
inc
xor
xchg
jns
dec
shlb
cmp
cmp
xchg
mov
push
sub
cmp
mov
and
data16
cmp
or
movsb
xor
in
inc
xor
cmc
inc
push
mov
push
sbb
xchg
mov
mov
mov
ret
jb
pusha
movsb
jo
inc
enter
insb
sbb
imul
loopne
hlt
mov
mov
push
cli
movsl
xlat
ja
jge
out
inc
xor
adc
push
dec
pushf
add
push
aas
pop
sub
sub
out
mov
xor
orl
xlat
mov
andl
mov
fnstcw
mov
test
or
je
aad
xchg
addl
inc
in
out
das
mov
adc
push
repz
pusha
test
cltd
iret
aam
test
out
push
inc
sub
lret
imul
sbb
nop
xor
outsl
jae
int
repnz
mov
xor
mov
fidivrl
sahf
enter
test
test
xor
jnp
cmpsl
push
insl
dec
pop
pop
fcomp
xor
cwtl
fildl
mov
imul
movsb
pushf
sbb
cltd
adc
xchg
push
inc
jne
jp
inc
lahf
or
add
push
std
repnz
push
shll
loop
lock
xchg
sbb
and
add
enter
jp
dec
add
les
mov
xor
in
mov
xchg
bound
cmp
dec
aad
pushl
pusha
jp
in
cs
pusha
lods
test
fldenv
jmp
jl
xchg
mov
pop
sub
jge
ljmp
movsl
data16
xor
pop
outsl
insb
mov
mov
in
jl
pusha
cmp
cltd
mov
mov
xor
roll
fwait
enter
or
inc
jbe
hlt
jnp
ja
mov
popa
unpcklps
jl
sarl
lcall
push
push
out
test
cmpsl
ljmp
mov
push
clc
jae
ds
and
pop
fistps
xor
push
ss
pushf
pop
fldl
inc
test
push
lahf
dec
mov
fldenv
add
cmpsl
pop
mov
enter
ljmp
stos
sub
fcompl
xchg
mov
cmp
ret
pop
into
adc
call
imul
lahf
xor
cli
ja
aaa
int
push
fstpt
push
mov
mov
inc
sbb
xorl
and
lret
pop
pushf
les
inc
fisubl
inc
mov
out
push
jl
cmpsb
cmp
in
das
pop
lcall
inc
bswap
xchg
mov
outsl
fwait
fwait
repz
cmp
mov
sub
in
jl
loope
rclb
shlb
xor
addb
or
cli
je
dec
movsb
jne
mov
cltd
mov
mov
dec
out
iret
mov
pcmpeqb
cmp
je
stos
inc
dec
in
push
cmpsb
jp
pop
jg
mov
pop
inc
push
fwait
imul
and
aam
jg
pop
xchg
sbb
push
pop
and
push
pop
and
cli
sub
ja
add
and
cmp
add
mov
rcrl
and
mov
push
adc
movsb
test
sbb
test
sub
or
jp
les
cmp
lahf
scas
iret
pushf
sbb
cmp
dec
rcl
xchg
ret
pop
stos
xchg
xorb
aad
inc
sahf
mov
dec
xor
mov
adc
sbb
fcmovnb
jb
repnz
jl
dec
movsl
rolb
inc
or
and
or
dec
loope
pop
rcrl
gs
js
fdivl
push
adcl
das
jmp
adc
xchg
jg
jg
pop
sub
jmp
jns
add
fildl
std
adc
loop
xor
stc
popf
adc
fisubrs
loope
movsb
add
call
imul
xchg
mov
out
xchg
fnstcw
pop
pop
sbb
adc
push
mov
fwait
jb
pop
bound
jno
xlat
cmpsl
lods
mov
dec
lcall
inc
fildl
inc
clc
cltd
shl
push
mov
push
and
push
pop
jo
lds
cld
jmp
push
and
leave
ljmp
jne
in
repz
inc
aam
stos
incl
mov
xchg
add
mov
into
mov
loop
dec
jge
pop
cs
mov
cmp
adc
loopw
rorb
adc
mov
pop
or
sbb
mov
or
mov
enter
jge
test
push
daa
test
push
add
lcall
loopne
pop
cmp
rcrb
js
aas
arpl
int3
call
mov
outsb
mov
cs
push
adc
stos
sbb
inc
loope
test
pop
aad
pop
std
or
jo
lcall
xchg
mov
enter
insl
sub
mov
fwait
nop
sub
stos
or
movsl
mov
sub
fisttps
push
js
xchg
cmpsb
decl
stc
xchg
jne
xchg
mov
push
dec
loopne
jns
je
or
cld
sbb
scas
and
xchg
inc
sbb
fsubrs
sbb
or
mov
xor
or
adc
adc
xchg
fldcw
ja
jno
das
sub
std
push
iret
sub
mov
jns
dec
fimuls
push
inc
out
lcall
hlt
or
testl
jno
jae
sub
jge
inc
sub
and
adc
ret
cmpsb
xchg
out
cli
mov
out
adc
jne
jmp
sbb
ds
inc
adc
adc
adc
lea
mov
cld
push
mov
add
add
aad
inc
jae
xlat
cmp
inc
and
stc
icebp
shl
or
pop
pop
add
mov
std
repz
in
sbb
test
lret
inc
leave
cli
xchg
popl
xor
or
repz
push
or
test
mov
xchg
sti
stc
xlat
xor
sub
psubb
sbb
aaa
sub
pop
insb
repz
adc
add
sub
cmc
insb
ret
scas
xor
shlb
sub
mov
sub
sbb
cli
cmpsb
pusha
push
fstpt
nop
mov
xor
adc
mov
mov
mov
data16
dec
cmc
pushf
repz
addr16
sti
jecxz
arpl
lods
xchg
push
sarb
mov
in
cltd
loop
out
dec
rorl
pusha
lret
mov
test
mov
rcrb
rcrb
dec
ljmp
inc
clc
and
or
or
les
pop
lock
outsb
mov
aas
xchg
ret
mov
jmp
loopne
rclb
cmp
bnd
jecxz
std
popa
outsb
inc
adc
push
sti
push
sub
xchg
sbb
xor
cs
mov
jg
and
lahf
in
jmp
jecxz
add
inc
rcr
and
aaa
push
dec
sbb
push
sbb
lret
mov
xor
xchg
shrl
lock
into
sbb
inc
inc
fs
xor
test
mov
dec
mov
sbb
ljmp
imul
insb
mov
add
pop
data16
xchg
jle
inc
inc
outsb
lea
mov
sub
xchg
nop
daa
xorb
dec
pop
in
mov
test
push
adc
sahf
cli
jecxz
add
out
insb
xlat
hlt
inc
mov
mov
mov
sbb
loopne
add
mov
arpl
add
sbb
mov
mov
aam
mov
inc
sbb
stc
or
fdivrl
int3
mov
fs
mov
dec
mov
test
xchg
lock
jmp
sub
inc
pop
cs
fmuls
mov
cli
adc
xchg
mov
rolb
stos
ds
mov
jns
sub
orl
and
fmulp
pop
outsl
pusha
ds
es
out
jns
and
out
scas
lret
sub
or
jae
sahf
ret
jge
or
fisubrl
test
xchg
mov
inc
xchg
jnp
push
xor
mov
lods
fiaddl
std
test
mov
mov
iret
loop
fistps
push
je
and
adc
jle
rcrb
mov
sbb
add
jns
adc
xchg
push
hlt
adc
popa
xchg
add
shrl
jmp
jne
mov
xchg
repz
inc
mov
shll
lods
push
scas
push
mov
jo
fldt
adc
adc
and
xchg
sbb
jmp
scas
imul
fcomi
or
scas
aam
cmp
and
and
lea
or
and
movb
daa
xchg
cmp
js
push
repnz
ss
pushf
fwait
lret
push
cmp
sarb
sub
push
and
xor
je
inc
popa
adc
add
jne
fs
in
jbe
xor
xchg
add
ret
push
fistpl
arpl
adc
daa
mov
fsubrl
mov
aaa
ds
dec
roll
repz
mov
inc
sub
and
sub
mov
jns
icebp
cmp
adc
and
pop
or
sub
in
dec
clc
add
mov
test
sub
jle
mov
mov
lea
js
mov
push
mov
clc
filds
sbb
push
lock
and
inc
mov
in
add
lcall
cwtl
or
pop
add
shrl
lret
outsb
mov
add
aas
dec
scas
jp
mov
cmc
popf
rorl
clc
jno
scas
fidivrl
iret
jg
out
lret
mov
pop
ljmp
mov
ficoms
pop
or
data16
inc
pop
stos
mov
test
outsb
dec
pop
jmp
sub
insb
stc
xchg
or
hlt
push
xchg
cmp
push
pop
push
out
mov
sub
or
mov
dec
mov
mov
xor
dec
into
cltd
jno
adc
add
sub
add
add
mov
scas
fwait
jno
out
push
pop
mov
adc
xchg
sbb
or
sbbb
lcall
xchg
sbb
push
icebp
push
push
loope
dec
fwait
scas
sysexit
xor
xor
pusha
adc
xchg
xor
ficompl
mov
mov
inc
mov
hlt
jp
fcmovb
push
jbe
arpl
mov
fsubr
cmp
xchg
sub
jg
cmp
and
xchg
js
and
or
mov
iret
cmp
add
sarb
jl
imul
xor
outsl
push
or
push
or
add
leave
lret
movsb
pop
dec
loope
bound
sarl
ret
in
scas
jmp
fwait
xchg
inc
incb
xor
cltd
out
mov
push
into
loop
pop
pop
mov
or
sub
sti
fcoml
jae
mov
out
add
data16
push
push
nop
cld
call
dec
bound
pop
sbb
mov
lods
test
dec
stos
add
stc
dec
dec
cbtw
mov
je
jb
inc
adc
rcrl
inc
flds
add
out
adc
cmp
add
gs
inc
inc
jle
push
jno
fcmovnu
cli
rorl
movsb
cmpsl
xor
and
inc
jl
mov
cmpsl
push
aaa
jns
ljmp
or
and
push
mov
inc
inc
push
mov
push
and
inc
mov
pop
mov
and
imulb
pushf
pushl
addr16
cld
mov
lret
jo
out
mov
mov
adc
sti
mov
mov
mov
lods
add
pusha
dec
dec
mov
jbe
cmp
stos
lea
jnp
cmp
in
inc
ja
es
push
adc
les
repnz
xor
add
jecxz
ljmp
test
xchg
stos
sbb
xchg
and
test
es
lahf
neg
adc
dec
icebp
xchg
scas
mov
mov
pop
cmp
les
inc
adc
shrl
test
lret
std
jnp
and
jmp
inc
stc
imull
lahf
outsl
cmpsl
in
mov
es
cwtl
mov
pop
xor
addl
and
xor
sbb
and
ja
mulb
inc
das
popa
imul
out
push
call
fsubrs
mov
mov
pusha
popa
mov
sahf
xchg
inc
push
out
call
dec
adc
inc
pop
cmc
pop
jg
mov
ljmpw
cs
dec
mov
dec
cmpl
das
stc
cs
mov
dec
stc
jecxz
or
xchg
sbb
fnstenv
aad
inc
push
or
fsubl
jmp
push
lret
push
jo
movsl
xor
cli
lds
pop
and
fsubr
mov
pusha
leave
push
fildll
adc
mov
cmp
lds
bound
sbb
sub
movsl
mov
jbe
pop
xchg
out
adcb
nop
and
cmpb
in
lret
mov
cli
repnz
or
sbb
stos
add
adc
sub
shl
inc
shll
cs
out
addl
in
es
sub
les
sub
mov
js
into
jmp
imul
test
push
mov
cmc
mov
mov
aam
test
push
fstpt
push
inc
push
stos
pusha
push
fcompl
aaa
pop
inc
out
or
ret
push
sbb
push
inc
insl
mov
jb
in
test
sub
test
in
jb
jnp
cmp
xor
sub
fwait
in
dec
push
pop
inc
cmpsb
loop
mov
rcrb
in
iret
dec
push
inc
arpl
out
nop
jle
pop
cld
stc
push
inc
cmp
push
inc
sbb
jp
adc
ljmp
lcall
inc
js
xchg
add
test
ficompl
pop
mov
test
addr16
mov
xor
pop
sbb
out
sub
mov
insl
mov
unpckhps
sub
xchg
gs
in
xor
cld
cmpsl
into
ficoml
inc
mov
and
fidivrl
bound
xchg
in
arpl
nop
lret
jnp
fwait
aam
into
pop
mov
and
fs
test
sbb
jle
mov
pop
loope
lahf
mov
pop
inc
and
aaa
cmp
push
leave
and
popf
shll
dec
arpl
sbb
push
mov
scas
and
out
jo
movsb
je
lods
popf
add
xor
bound
sub
repnz
fwait
rorl
sub
sub
insb
aam
and
jmp
add
cmpsl
fcoms
xchg
add
ret
mov
shl
and
inc
adc
mov
leave
cwtl
test
push
and
push
jnp
mov
lcall
push
sbb
fiaddl
add
pop
pop
sbb
in
push
sub
int3
xlat
jmp
pop
paddsb
pop
add
pop
or
jo
ja
test
fnsave
test
test
push
ret
out
or
jnp
sub
lds
repnz
mov
fists
movsb
inc
mov
cmp
jns
sub
addr16
jnp
xor
add
movsl
jmp
shll
mov
lods
inc
int
sub
or
test
xchg
cltd
cmp
ss
dec
mov
call
popf
mov
and
sbb
pushf
dec
addl
adc
fstps
nop
adc
mov
ret
scas
shl
dec
xchg
adc
mov
inc
sub
fpatan
ret
shll
adc
aas
sub
mov
pop
imul
inc
cmp
fmulp
jno
push
pushf
jmp
leave
mov
dec
push
sar
push
stos
in
add
dec
xchg
ss
fwait
inc
inc
orb
jp
mov
jo
mov
mov
lds
pop
cmp
movsb
repz
in
or
push
mov
dec
push
int3
pop
push
rcrb
pusha
cwtl
stos
mov
divl
push
push
add
cmp
iret
mov
xlat
dec
aas
rolb
iret
jne
fnop
lods
mov
cmpsb
cwtl
std
pop
push
mov
pop
push
sbb
in
jge
repnz
popf
pop
roll
inc
daa
and
scas
mov
push
ficompl
out
lcall
adc
push
mov
bound
sahf
lock
cmp
or
jle
out
push
imul
out
and
sub
sub
cltd
ret
sub
ds
pusha
xlat
jnp
dec
pop
stos
fisttpl
loope
mov
dec
aad
adc
dec
mov
xchg
decl
jne
cs
adc
test
ret
addb
lea
pop
out
add
stc
fs
jecxz
mov
or
sbb
cltd
xor
sarb
adc
fcomip
int
mov
mov
sbb
jle
int
out
xchg
cmpsl
loopne
stc
xlat
inc
adc
mov
nop
fsubl
lcall
dec
xchg
leave
mov
jne
sahf
xor
dec
or
imul
pop
ja
das
dec
pop
jae
into
mov
mov
cltd
dec
dec
mov
clc
sub
out
cmp
xchg
fadd
fisttpl
ljmp
pusha
cmp
mov
shll
loop
pop
and
fwait
insb
pop
sbb
jl
out
mov
sbbb
jp
mov
inc
nop
imul
and
outsl
xchg
into
xchg
mov
addb
jb
in
fildl
add
les
jge
leave
jmp
xlat
cmpsb
mov
sbb
insl
inc
mov
fsub
jbe
push
mov
rcl
cmp
repz
in
add
jecxz
dec
scas
or
sub
aad
mov
repnz
lock
popa
outsl
scas
out
in
xchg
into
push
and
daa
cli
adcl
push
xchg
repz
adc
sbb
lods
xor
push
cltd
into
mov
inc
sbb
les
xchg
lret
mov
mov
mov
mov
sub
xor
outsl
shrb
lods
xchg
popf
and
jne
test
mov
aas
or
addr16
out
imul
dec
jae
mov
sub
mov
xchg
nop
inc
dec
in
hlt
cmp
ficomps
in
fldenv
xchg
data16
addl
rclb
jl
fsubrl
mov
jge
ret
push
ds
sbb
es
icebp
jbe
jp
pop
xorl
push
fwait
hlt
and
xchg
ret
push
jle
pop
pop
mov
int
imul
fistpl
push
lret
leave
and
mov
in
add
pop
cs
scas
sub
rcr
test
lds
fstpl
lea
dec
jmp
inc
ljmp
push
xchg
sub
sti
inc
mov
dec
pusha
add
scas
lret
jns
xchg
pop
loope
lret
or
fsubrl
lea
lods
or
test
int3
stc
push
lea
roll
and
dec
adcb
push
sub
iret
les
sbb
cmpsl
sub
or
shlb
or
ja
in
dec
jnp
out
aam
sti
push
std
push
jbe
out
addr16
pushf
push
xchg
jle
sub
sbb
pop
test
mov
dec
rcrl
mov
cs
add
add
adc
or
aam
cli
push
cmovp
mov
jmp
mov
aam
jb
xor
and
mov
sbb
and
aaa
dec
cs
and
lock
cmp
fsubs
pop
stos
mov
mov
into
mov
addr16
testl
jbe
test
add
or
hlt
inc
cmp
dec
push
jne
cmpsb
lods
sbb
lahf
imul
mov
mov
adc
jl
mov
jmp
xchg
xchg
cmpsb
rorl
inc
imul
pop
xchg
jl
push
xchg
mov
lods
fisttps
icebp
cwtl
cmc
call
pop
ljmp
mov
adc
jge
inc
out
inc
adc
xchg
adc
stos
in
jno
mov
ffree
in
js
lea
fwait
mov
andb
imul
imul
mov
sbb
hlt
add
repz
lods
enter
mov
jge
push
pop
add
mov
sub
adc
add
cmp
int3
mov
push
pop
lods
shrl
and
pusha
loop
adc
repnz
pop
xchg
in
and
or
enter
push
sbb
fisttpl
and
loope
push
lods
dec
sarl
cmp
arpl
rol
push
lcall
ret
sbb
jl
sub
es
out
sahf
push
rcll
and
decl
or
mov
cwtl
fisubrl
ret
inc
add
or
xchg
adc
addr16
or
cmp
test
sub
push
mov
mov
cmpsl
push
rcrb
xor
pusha
pop
or
sbb
push
sbb
jp
sbb
in
dec
jp
adc
test
jmp
enter
cltd
mov
ret
pop
cwtl
inc
cmpsl
cmpsl
push
dec
sahf
ret
mov
xchg
popa
and
push
lods
jle
sbb
js
ja
data16
sub
cmp
cmpsb
xorb
mov
loopne
mov
mov
mov
in
mov
push
push
mov
adc
into
mov
mov
cmp
mov
ja
popf
dec
cmpsb
cmpsl
sub
fiadds
xor
rorl
cmp
mov
jle
inc
cld
das
or
push
lret
pop
xor
ret
addr16
fistps
dec
mov
add
enter
and
xlat
pop
jle
push
ljmp
lret
insl
jne
sub
sbb
cmp
imul
ss
push
clc
das
inc
lds
sbbl
fs
mov
mov
adc
push
frstor
sarl
pop
in
adc
dec
sahf
pop
insb
xor
loop
cmpsl
shll
sbb
fstpt
jmp
not
and
and
cmpsb
xchg
je
enter
fildll
sub
push
pop
fwait
mov
cltd
data16
int
jge
filds
cmp
cmp
mov
fmul
and
and
rcrb
daa
nop
sarl
out
mov
add
cmp
repz
popa
ret
or
xchg
rorl
jecxz
sarb
lret
and
sahf
scas
inc
leave
inc
mov
adc
pushf
mov
xchg
sub
mulb
dec
sbb
pop
lret
mov
std
xchg
mov
jle
and
jnp
scas
xchg
inc
data16
sub
sbb
mov
push
hlt
mov
fs
pushf
dec
fsubrl
cmpb
sbb
cmp
inc
mov
jo
sbb
push
sahf
movsl
jmp
or
movsb
and
orb
jne
sbb
push
ret
stc
ljmp
pop
stos
mov
ds
stos
sub
lret
and
mov
pop
inc
add
mov
sub
inc
mov
cmc
stos
divl
aad
cmpsb
adc
dec
adc
ror
sub
clc
mov
mov
cmpsl
shrb
or
adc
dec
lcall
shlb
and
cmp
or
sub
dec
xor
jge
daa
mov
loope
imul
mov
inc
ja
pop
inc
mov
pushf
mov
push
inc
adc
mov
test
cld
and
jl
mov
repz
cmp
mov
sub
bound
dec
aam
xchg
jg
cmpsb
in
dec
pushf
jle
mov
popa
xchg
in
xchg
fistl
out
xor
ficoml
push
mov
insb
mov
rep
jp
pop
mov
inc
push
pop
mov
xchg
xchg
push
xor
mov
pop
push
push
mull
dec
xor
cmpb
push
outsl
push
push
sbb
push
nop
daa
daa
mov
sub
push
and
cli
adc
rcrl
jne
daa
push
out
lret
cwtl
xchg
inc
sbb
icebp
mov
pop
cmp
cmp
adc
jo
ds
fisttpll
mov
jl
rcr
or
mov
test
int3
xor
mov
leave
xlat
fst
rolb
ficomps
dec
lahf
movsl
outsb
outsl
push
into
mov
in
rolb
push
lock
xor
xchg
int
stc
mov
mov
adcb
faddl
or
in
xor
sub
mov
js
mov
or
pusha
mov
mov
andl
xchg
push
cmpb
and
sbb
xchg
push
adc
dec
fildll
inc
test
or
mov
fwait
xchg
jp
mov
sbb
xor
insb
sahf
std
push
add
mov
mov
mov
jnp
fisttpl
push
sbb
dec
mov
or
pop
stos
push
shr
fisubl
adcb
xor
mov
fistpl
dec
stc
rclb
addl
shll
jg
inc
jbe
and
stc
inc
iret
mov
jmp
sar
js
push
push
sbb
bound
es
lret
jno
jg
mov
or
push
int3
pop
dec
jne
mov
int3
les
mov
pop
dec
out
sub
lret
add
lret
mov
mov
out
pusha
jnp
pop
push
inc
je
and
mov
scas
sbb
push
imul
add
and
jnp
xor
xlat
mov
cwtl
std
dec
jo
arpl
dec
mov
mov
push
subb
push
ret
cmp
mov
gs
fwait
mov
inc
and
fcmovb
test
and
scas
in
inc
xchg
push
clc
jmp
lock
lea
xor
movsb
insl
push
lock
jge
sub
cmp
xor
adc
out
jne
jns
jae
js
dec
les
pop
jns
xlat
subl
and
ss
or
mov
movsb
xor
ret
pop
mov
jb
sbb
mulb
jae
sbb
push
sub
cwtl
outsb
xor
lahf
xor
xor
rsqrtps
loop
xor
mov
je
ror
mov
in
inc
das
sbbb
orl
mov
sub
mov
cmp
push
rcrb
sbb
push
cmpsb
fists
and
gs
cs
pop
dec
bound
and
lods
sub
inc
mov
sbbl
test
fucom
dec
mov
pusha
gs
xlat
fsubrp
gs
sbbl
and
pop
loope
mov
mov
in
lods
sbb
xchg
push
lcall
decw
cmp
ja
das
adc
ret
dec
inc
mov
aad
ss
push
inc
lret
or
cmp
into
adc
xchg
mul
add
jb
mov
sbb
sub
mov
fstpt
xchg
push
sbb
dec
outsb
outsb
aam
mov
lock
xor
shlb
out
or
add
cmp
adc
das
xor
loop
jo,pn
adc
or
add
push
mov
cmc
mov
lock
fcomps
mov
or
inc
pop
pop
nop
inc
in
test
pop
loop
outsl
jns
mov
in
pop
je
mov
cmpsl
sbb
loope
push
xchg
outsb
dec
jb
sub
pushf
mull
stos
xchg
repnz
mov
pushf
fisubrl
test
aad
mov
xchg
das
fcoml
jne
push
jmp
sub
adcb
cmc
mov
jae
push
imul
hlt
roll
adcl
jo
mov
movsb
mov
cmp
mov
in
mov
clc
ficoms
sbb
mov
sbb
xor
mov
ds
mov
outsl
jne
lock
xchg
mov
or
out
fwait
inc
mov
dec
test
sub
rcrb
push
mov
add
arpl
dec
lods
ds
repnz
nop
enter
fwait
mov
in
sar
add
dec
xor
es
stc
mov
xchg
pop
cmc
aam
cmp
or
shll
insb
add
fnstenv
loope
pop
xchg
stos
xchg
mov
das
mov
or
adc
dec
push
xlat
mov
jmp
insl
testb
jge
stc
aaa
ljmp
jmp
cmp
push
jns
lea
mov
add
loopne
and
imul
push
and
ja
cld
mov
mov
fwait
test
sbbb
in
inc
cs
push
jbe
or
mov
xchg
jge
cmp
sbb
sub
sub
push
xor
icebp
mov
orb
or
xor
mov
jnp
lock
mov
adc
mov
inc
and
xchg
or
ficompl
in
mov
ret
jne
lods
nopl
ret
and
mov
sub
jmp
mov
fdiv
or
mov
mov
call
das
arpl
add
xchg
fs
xchg
sub
xchg
dec
cmpsb
das
jbe
xlat
shlb
xchg
sub
bound
inc
xlat
int3
jne
cmp
mov
je
xor
leave
xor
mov
stc
or
and
and
mov
out
or
out
repz
out
orb
mov
xorl
mov
jl
mov
and
mov
cmpsb
aam
mov
or
ficoml
pop
mov
push
test
in
dec
pop
bound
cmp
out
jle
cwtl
add
dec
xor
sub
rolb
xchg
pop
cwtl
jecxz
jmp
test
popf
add
loope
dec
push
aad
pushf
add
mov
sub
jnp
jp
push
or
shll
xor
fsubrs
imul
in
lcall
arpl
or
inc
inc
sahf
scas
adc
in
aam
bound
outsb
call
ljmp
mov
mov
mov
adc
rcrb
mov
pop
aas
rclb
imul
sub
push
dec
loope
sbb
or
out
sub
mov
sub
jbe
stc
adc
icebp
mov
fs
sti
cmpsl
setne
sarl
xor
sahf
arpl
ss
repnz
pop
cmp
push
sbb
je
imul
push
mov
fwait
stos
sbb
pop
dec
dec
loopne
xchg
aaa
sti
sbb
test
imul
pop
cld
nop
rclb
je
shll
xorl
sbb
dec
adc
and
je
fimuls
inc
rorl
das
inc
xlat
adc
in
xchg
ljmp
cld
pop
mov
or
inc
sti
sbb
adc
loop
push
mov
xchg
outsb
data16
fbstp
pop
outsl
xchg
inc
fstps
pop
rorb
sarl
loop
daa
xor
cld
or
pop
jmp
push
shlb
jne
and
test
jne
test
aaa
mov
cld
xchg
xchg
aaa
mov
or
add
cmp
ror
pusha
pop
mov
or
add
sbbb
lods
xlat
outsb
mov
lods
imul
iret
mov
in
xchg
js
adc
add
push
sbb
loop
pop
mov
sub
in
or
sbb
sub
mov
xchg
cmp
cmpsb
mov
push
repz
idivb
xchg
inc
push
js
scas
fisubrl
fisubrl
and
xor
adc
adc
push
inc
dec
xchg
push
sbb
lret
dec
sub
stos
ret
fsubrs
int
xchg
pop
sub
sbb
add
xchg
outsl
mov
xchg
shr
test
leave
cld
ret
jne
data16
lods
icebp
push
jle
adcl
imul
or
pop
dec
inc
loop
cmpb
bnd
jmp
mov
or
mov
jle
pop
and
inc
imulb
push
push
lcall
mov
ret
fsts
or
popf
push
cmpsb
dec
es
in
fisubrl
jl
and
push
sub
test
push
mov
adc
out
sbb
out
pop
mov
or
pop
sbb
dec
push
fists
jbe
pop
pop
shrl
push
fcomps
int
cmp
cwtl
inc
repnz
popf
subl
cmp
sbb
out
out
sub
and
push
aas
sub
or
mov
pop
push
cld
jo
cmp
mov
or
loopne
data16
mov
push
roll
dec
inc
aam
pusha
cmp
cs
aam
jl
aad
mov
mov
jge
repnz
push
push
dec
insb
push
mov
mov
or
jne
sahf
or
sub
cmc
cmp
jno
mov
and
lds
or
in
cltd
dec
mov
push
mov
ss
enter
and
or
sahf
imul
rcrl
pusha
mov
pop
subl
sahf
dec
cmp
push
fiadds
mov
ljmp
mov
imul
std
jl
or
ffree
movsb
mov
imul
push
jecxz
shll
pop
ljmp
cmp
and
xchg
or
push
pop
mov
push
pusha
dec
shlb
aas
inc
imull
dec
dec
push
lds
dec
sbb
inc
dec
inc
rcll
imul
ja
pop
xchg
jg
mov
and
mov
insb
mov
dec
aas
mov
and
add
jno
rdmsr
sub
fidivl
mov
mov
jle
sbb
mov
loope
ret
xor
push
loope
jmp
jae
cs
sub
shl
add
pop
push
daa
push
test
xlat
sbb
cmc
nop
inc
andb
pop
repnz
ja
cmpl
ret
je
rorl
arpl
insb
jne
lods
stc
ja
mov
xlat
pusha
add
div
pop
ja
push
sbb
push
inc
sub
pusha
dec
xor
push
jb
or
addr16
push
int
pop
or
dec
lcall
fs
or
xor
stos
dec
sub
mov
fnstenv
test
js
addr16
popa
jmp
pop
fs
push
ficompl
clc
lock
push
pop
int
sbb
in
sbb
xchg
xchg
subl
pop
es
cmp
xchg
mov
inc
dec
aad
jle
push
shl
and
pop
fmull
cmp
inc
mov
sub
xchg
pop
loope
cmp
cmp
mov
cli
push
ret
test
dec
pusha
sbb
fbld
jb
mov
lods
stc
push
aaa
les
xchg
test
cmp
xor
repz
jmp
cli
popf
jp
dec
xor
sbb
mov
out
jg
jmp
in
jmp
xchg
packssdw
imul
xor
pop
push
cmc
stos
push
subl
adc
cmp
int3
jmp
mov
clc
jge
loope
pop
cmp
popf
mulb
adc
shll
or
or
push
lcall
call
or
pop
in
push
xchg
pop
lods
aad
in
fstps
test
pop
jae
ror
dec
mov
and
ss
push
mov
fidivrs
or
mov
lret
sub
push
dec
in
lds
lret
call
adc
ret
in
lds
xor
or
jbe
mov
mov
in
out
stos
or
hlt
std
insb
xchg
leave
or
cmp
dec
xorb
push
loop
popf
dec
stos
xlat
cltd
mov
outsl
hlt
data16
xor
add
inc
push
cmp
xchg
fldcw
or
ja
xchg
leave
dec
and
in
dec
sbb
cmp
sbb
test
test
jnp
adc
mov
pop
or
and
dec
sub
stc
roll
adc
mov
cwtl
cmp
xor
shrl
cmp
lahf
data16
js
rcrl
icebp
mov
pop
jecxz
decl
xor
xor
sahf
sbb
and
xor
sub
cmp
cwtl
jns
int3
lock
mov
fiaddl
mov
negl
mov
jmp
mov
mov
or
jb
ja
in
push
sahf
cmp
outsl
jns
jl
pop
shll
shll
sub
or
sahf
xchg
jmp
popa
fisttpl
dec
pop
push
jle
and
push
lods
jns
loope
test
fdivs
cmp
fimuls
dec
aad
mov
negl
xor
xchg
adc
push
addr16
add
pushf
mov
dec
xor
js
adc
push
data16
in
mov
cmp
adc
xchg
in
out
es
mov
jmp
mov
cmpsl
cmp
xor
pop
in
mov
mov
add
and
jb
cltd
push
cwtl
ret
jo
mov
mov
in
rcrb
gs
xlat
addr16
test
push
in
pop
stc
js
xor
xchg
ret
inc
cli
adc
imul
push
ret
lods
dec
je
mov
call
sub
lret
mov
sbb
and
adc
aas
cld
xor
repz
loopne
push
loopne
out
or
and
push
xchg
or
fnstsw
push
divl
lret
clc
ja
sbb
mov
mull
jmp
bound
and
andb
cmc
xlat
mov
mov
dec
jmp
mov
hlt
push
loopne
xlat
xchg
sbb
lock
cltd
jae
fildl
push
and
std
sti
cld
roll
testb
and
pop
filds
mov
mov
jecxz
int3
ja
inc
fisttpll
loopne
jmp
sahf
cltd
addr16
and
testb
aaa
call
mov
stos
dec
sbb
lahf
mov
ja
or
xchg
cmp
mov
jne
jne
mov
xchg
int3
dec
inc
icebp
sub
add
sub
ds
dec
push
jno
pop
mov
sbb
xchg
mov
stos
cmovo
imul
in
adc
add
fimuls
orl
mov
add
movsb
fs
inc
adc
mov
mov
inc
sbb
inc
push
cld
pushf
jb
aas
push
roll
push
mov
enter
mov
lret
sub
adcb
inc
sub
in
push
loope
int3
mov
jo
sbb
sbb
mov
lahf
jmp
test
stos
aaa
stos
insl
in
inc
add
mul
xchg
hlt
sahf
lods
dec
add
inc
lods
push
sub
popa
fdivrp
or
jmp
sbb
test
cs
aam
jg
pop
jmp
add
sub
lock
push
lods
in
fsub
mov
dec
push
push
leave
imul
xor
sbb
pop
lcall
sbb
ja
or
and
test
jle
ror
scas
adc
cmp
jnp
scas
cmpl
jg
sahf
jmp
mov
lret
or
out
mov
push
cmc
stos
pop
cmp
movsl
mov
mov
outsl
push
mov
xor
sub
mov
mov
shl
shrl
shll
inc
rcrb
test
lret
sbb
andl
sub
jp
idivl
outsb
add
imulb
inc
pop
mov
sbb
xchg
pop
imul
sbb
pop
dec
fs
pushf
sahf
call
jnp
xchg
divl
aam
popf
xlat
pop
inc
testb
sub
or
mov
bound
dec
push
out
adc
mov
jns
sbb
cltd
loop
lock
and
out
adc
push
mov
fisttpll
out
test
popf
outsb
mov
dec
inc
das
dec
ljmp
and
jmp
xchg
push
xchg
xchg
outsb
inc
xchg
cmp
cmp
push
pop
or
ja
fdivr
ljmp
dec
sub
pop
ds
out
jg
cmp
xor
jle
adc
pusha
ljmp
in
mov
add
and
aam
movsb
mov
stc
mov
popa
pop
jne
roll
sahf
ja
imul
ja
sub
outsl
jb
push
inc
pop
popa
paddb
in
mov
or
lahf
mov
std
je
dec
in
test
mov
xor
dec
stos
out
frstor
sub
rcrb
mov
cld
iret
inc
jp
icebp
jae
sub
mov
pop
and
and
cmpsl
pop
test
dec
out
and
mov
inc
xor
xor
push
insb
loopne
sub
add
insb
repnz
xchg
pop
mov
stos
cmp
push
pop
testb
jno
adc
frstor
rcrb
stc
or
mov
mov
adc
and
xchg
iret
inc
xchg
rorb
sbb
movzwl
xchg
test
fcomip
jb
or
test
ret
iret
fcomps
dec
sub
in
mov
sbb
mov
pop
js
rcrb
xchg
add
jg
push
dec
inc
sub
inc
cltd
cmpsb
cltd
lock
out
lea
std
pop
mov
or
popa
push
std
into
test
xor
dec
push
dec
xchg
dec
dec
outsl
or
xlat
or
mov
xor
mov
adc
add
idivl
aaa
mov
push
adc
pop
sbb
pusha
push
cmp
fildl
push
psubw
mov
sub
ss
lahf
mov
ds
jb
xor
repnz
sbb
aas
rcll
add
loopne
lock
xrelease
xchg
mov
pop
push
das
aad
scas
clc
rorl
add
insb
push
in
pop
push
int
sbb
aas
adc
stos
mov
push
sub
call
pop
or
fs
lea
inc
xor
xchg
jae
xlat
adc
or
xchg
xchg
es
and
scas
mov
mov
sbb
dec
sbbb
mov
jle
cmp
enter
cmp
pop
add
arpl
dec
test
mov
adc
popf
push
mov
sbb
xor
push
mov
sbb
filds
stos
imul
mov
lret
jae
push
push
xchg
imul
js
cmc
mov
and
call
stc
lods
insb
fisubrs
out
ljmp
add
lods
cmc
sbb
cltd
into
in
loop
xchg
cli
je
push
iret
adc
adc
push
rclb
idivl
sub
aam
scas
ds
pop
xchg
cmp
adc
cmp
shll
pop
xchg
xor
push
int3
push
movsl
sbb
or
adcb
push
sahf
xor
or
sub
sbb
mov
fst
es
adc
pop
sub
sti
test
stos
test
jmp
and
mov
jb
jnp
cmp
repnz
and
outsb
push
ret
dec
scas
andnps
out
mov
sub
mov
pop
jl
cmc
out
and
pop
sub
sbb
lahf
push
cmp
mov
pop
sbb
cltd
enter
adc
jge
dec
rolb
sub
inc
lods
adc
enter
xor
jbe
jge
xchg
dec
add
push
mov
shrb
aaa
or
mov
push
xchg
sbb
xchg
into
rorb
push
or
enter
mov
cwtl
add
adc
or
ret
scas
jmp
subb
test
add
mov
cmp
vandnps
xchg
ljmp
ss
int
sbb
add
sub
mov
loopne
lahf
jl
push
push
pop
iret
mov
or
sub
sbb
lret
jg
xchg
test
or
loopne
insb
sub
adc
les
push
lds
mov
loop
xchg
mov
repnz
insb
aad
adc
push
xchg
lods
push
cmp
addr16
or
inc
arpl
sub
mov
sub
cwtl
fbstp
mov
and
fs
in
insl
pop
jl
inc
cwtl
add
test
pop
ss
in
sarl
gs
in
pop
ds
sarl
sub
pusha
ja
pop
or
jnp
mov
mov
adc
push
lea
movsb
mov
push
pop
fnsave
into
mov
sbb
push
je
xor
lods
orb
out
pushf
and
mov
and
cmpsb
jbe
jae
xlat
push
out
push
jl
or
loope
mov
lods
enter
or
shlb
aaa
sbb
les
bound
dec
cmp
lds
pop
insl
add
push
cmovbe
jp
fdivrl
fs
xor
into
mov
daa
push
dec
add
fstpt
sub
push
sub
add
mov
jge
shlb
jmp
cltd
xchg
cmpsb
mov
imul
or
push
fisubl
sub
cli
and
scas
jp
xor
push
fcmovnbe
fistpll
sbb
leave
test
add
ret
cmp
inc
sub
shrb
ds
lock
dec
repnz
dec
std
inc
repnz
xor
in
dec
add
sbb
repnz
out
mov
mov
mov
pcmpgtw
in
cmp
stos
sar
xor
xchg
cmc
xor
jmp
out
jo
lods
sbb
idivl
mov
and
daa
ljmp
dec
mov
jbe
lods
xlat
lods
cli
sub
faddl
out
add
mov
shlb
shll
cmp
pop
sub
xor
lahf
pop
mov
lcall
ja
in
or
repz
out
push
push
fwait
orl
outsb
fdivp
imul
xor
imul
test
scas
sbbl
jle
jbe
dec
pop
xor
adc
mov
imull
inc
cli
jmp
subl
rolb
mov
in
in
cmpb
adc
nop
addr16
inc
and
adc
and
xor
dec
mov
pop
push
pop
cmpl
sub
nop
cltd
jns
fdivr
fiadds
insl
push
mov
inc
les
cmp
mov
inc
lahf
pop
add
mov
aaa
out
xchg
insb
add
nop
dec
sub
xchg
mov
push
data16
xchg
mov
pop
sti
lods
jo
xor
dec
pop
or
popf
fldcw
xchg
sbb
push
mov
xor
mov
ret
cmpl
call
mov
inc
fbstp
loop
mov
testb
inc
ss
sbb
nop
push
dec
xlat
jae
mov
stc
ja
icebp
int
ljmp
xor
xor
loope
jecxz
inc
cmp
adc
fcomps
dec
pop
or
lods
js
mov
je
inc
imul
mov
cmc
sar
clc
mov
xchg
fbstp
and
stos
out
mov
out
pop
lock
xchg
daa
xchg
in
mov
mov
shlb
mov
push
mov
sbb
cld
movsl
cmpsb
stos
mov
xor
stc
jbe
jl
fbstp
mov
xor
aam
push
pop
das
add
jo
lret
popf
pop
imul
add
mov
mov
dec
xchg
rcrl
cwtl
pop
out
imul
lcall
test
repnz
cmpsl
jno
inc
jnp
pop
cmp
cmp
movsl
cmp
add
mov
sti
fsincos
test
sub
pusha
mov
cmp
mov
popf
push
das
out
and
xchg
mov
repz
imul
test
nop
imul
jle
mov
dec
push
shll
push
jl
adc
shrl
sub
xchg
jnp
je
shlb
adc
outsb
test
es
pop
xlat
mov
pushf
bound
push
notb
je
mov
fwait
mov
ret
pop
or
lods
and
loop
icebp
mov
test
adc
fs
fmul
ljmp
xor
mov
icebp
xlat
jno
cmp
cmp
repnz
mov
into
xchg
dec
dec
jl
or
xor
movsb
cli
sub
fcmove
xchg
adc
gs
jl
hlt
xchg
idivl
cmp
scas
insb
flds
inc
xor
inc
mov
adcl
adc
sti
xor
cmp
ficoms
sub
push
jns
ljmp
in
scas
dec
repz
sub
inc
shrl
stos
test
inc
aaa
lret
jo
fwait
std
jne
lcall
aaa
jle
xor
test
cmpsb
jb
nop
pop
mov
cmp
cmp
and
jae
xchg
add
jae
push
inc
mov
shlb
or
in
into
sbb
mov
lahf
xchg
adc
je
sbb
mov
mov
jnp
ficompl
call
fcmovnb
xorl
les
mov
data16
dec
cmp
mov
stos
fwait
rcrb
movsl
xchg
jle
mov
aam
cmp
push
ret
pop
das
mov
ret
bound
sub
dec
and
das
test
out
and
push
jmp
inc
sub
outsl
test
in
ja
es
mov
jo
xchg
jb
stos
inc
push
sarl
and
jmp
data16
mov
fbstp
pop
mov
mov
mov
in
addr16
stc
jae
arpl
jmp
loop
xor
fistl
movsl
dec
testl
js
or
arpl
add
adc
pop
jmp
and
pop
inc
mov
adc
insl
ret
mov
add
add
je
sti
jge
jp
fidivrs
mov
fdivrl
fxrstor
jg
movsl
jno
nop
movsb
push
inc
cmp
test
call
mov
mov
sahf
cmp
nop
out
dec
jle
addr16
in
inc
sbb
add
xchg
mov
sti
ret
dec
add
ds
mov
mov
mov
loope
or
movsb
shll
lock
mov
clc
xchg
and
jmp
fcompl
add
imul
xchg
xor
scas
mov
pop
movsl
arpl
in
xorl
cwtl
adc
lock
out
sti
jge
xor
xchg
out
mov
mov
in
xor
dec
out
dec
sbb
das
leave
sub
dec
jmp
sbbb
popa
shl
add
dec
out
jg
insb
call
and
adc
xlat
jne
cmpsb
test
scas
sub
sbb
aam
popf
adc
pushf
mov
loopne
imul
dec
and
fstpl
outsb
stos
xor
sbb
fdivs
stos
sub
lods
nop
xlat
cld
mov
cltd
mov
lret
mov
scas
xor
push
and
xchg
xor
inc
jns
dec
addl
jge
xorl
fwait
or
imull
add
rorb
daa
sbb
test
or
push
or
pop
push
mov
xorb
pop
add
loope
js
adc
psubq
test
movl
adc
nop
or
pop
pop
xlat
push
jno
pop
leave
adc
cmovp
clc
and
add
mov
in
stos
cmp
int
hlt
pop
xor
loop
fisubl
or
and
push
nop
inc
fwait
and
jbe
sti
mov
mov
xlat
mov
loope
enter
in
popa
cmp
loopne
addr16
xor
out
test
mov
outsl
loop
sub
fnstcw
pusha
inc
lcall
and
xchg
dec
cltd
pop
fsubr
dec
and
pop
inc
inc
pop
jo
cmpsl
push
cmp
ss
punpckhbw
es
push
or
adc
xchg
imul
jle
xor
stc
dec
sbb
add
lods
cmp
lds
or
add
add
sbb
fs
mov
push
xchg
xchg
sbb
xchg
rolb
inc
and
sbb
cmp
out
mov
pop
cwtl
mov
fisubrl
loop
es
mov
jno
daa
out
mov
scas
out
loopne
push
push
push
loopne
cmp
mov
dec
idivl
jno
xor
push
mov
bound
shrb
adc
js
js
cmp
cmp
mov
or
push
sar
stos
mov
xchg
lods
xor
test
push
inc
inc
pop
jae
xor
mov
ja
pop
cli
jp
jle
leave
in
and
arpl
pop
stos
xorb
mov
mov
cmp
jnp
pop
aas
fcomi
jge
dec
aas
test
fidivrl
lods
xchg
lret
or
jae
jecxz
daa
sbb
xor
cmpsl
xchg
ret
inc
xchg
ret
pop
sahf
or
jmp
jmp
ret
and
clc
nop
fiadds
or
ljmp
ret
pop
std
sub
push
scas
pop
icebp
sub
inc
daa
inc
adc
add
fs
push
test
adc
andl
rcr
call
lret
rorl
cwtl
push
and
push
popl
sahf
jmp
pop
call
sub
xchg
cmp
push
scas
add
pop
out
mov
or
mov
push
push
scas
loope
fwait
xchg
lods
jmp
data16
ja
hlt
nop
in
int3
push
sub
add
xchg
cmpsl
jne
mov
sub
clc
add
xor
pop
xor
cmpsb
push
mov
addr16
stos
cmp
addl
outsl
and
lds
push
dec
inc
stc
cmp
jbe
out
arpl
js
outsb
sarb
subl
xor
pushf
addr16
push
in
out
mov
add
push
into
dec
jnp
cmp
add
repz
mov
in
jbe
leave
inc
sub
jl
pop
lret
sti
jp
cmp
dec
ret
nop
xchg
sbb
jecxz
das
or
ret
fcmovnb
mov
or
push
inc
adcl
mov
stos
lahf
out
mov
push
out
dec
mov
and
pop
pop
fadds
mov
in
pushf
mov
add
out
rol
sbb
into
popf
xor
lds
pop
outsb
scas
mov
xchg
jle
cmp
ficomps
sbbb
gs
sbb
jl
cmpsb
add
cmp
push
adc
cmp
rcr
ret
nopl
daa
pop
insb
jecxz
push
add
add
pusha
jno
in
xchg
jmp
or
out
jmp
mov
mov
adc
jno
dec
mov
insb
xlat
test
and
push
adc
jno
adc
fimull
push
push
cmp
in
mov
adc
adcb
fsubrp
mov
push
lret
orb
mov
xor
xchg
jbe
cmp
or
pushf
cld
je
or
sbb
jb
dec
pop
je
sahf
bound
into
cmp
imul
jp
cmpsb
mov
lods
mov
mov
call
add
fbstp
pop
test
mov
and
mov
aad
sbb
cmp
and
aam
mov
aas
jbe
insl
cmp
jle
pop
add
sub
iret
movsb
fdiv
inc
in
adc
mov
adc
cli
cmc
incb
adc
xor
aam
sbb
push
or
popf
rcrl
xchg
dec
sbb
hlt
scas
xor
sbb
cmp
cld
jp
loopne
lock
repz
mov
or
lret
cmc
scas
out
fidivl
cmc
les
push
jg
push
mov
insb
or
out
xchg
mov
fdivs
mov
nop
mov
xchg
out
inc
loope
mov
fisubl
jg
fdivrp
negl
scas
jmp
sahf
xor
sub
add
xor
sub
fsubrs
mov
in
inc
xchg
inc
in
mov
ds
xor
mov
dec
lea
jg
xchg
mov
mov
or
or
ret
mov
pop
ljmp
mov
push
iret
or
lods
sbb
lock
test
sbb
rcl
mov
sahf
ret
sahf
decl
rcpps
test
mov
mov
rcrb
add
mov
mov
js
pop
inc
stos
add
lcall
adc
imul
lahf
xor
aad
negb
ds
and
mov
cmp
xchg
repz
ficomps
mov
cltd
push
push
xchg
adc
jmp
xor
test
insl
xor
lock
adcl
add
add
orl
push
shrb
dec
dec
mov
and
mov
dec
sub
ds
ljmp
mov
sbb
gs
dec
and
sbbl
outsb
and
or
dec
movsb
inc
mov
lods
add
inc
shl
mov
pop
dec
pop
popf
cwtl
stos
cltd
sar
adc
inc
aaa
mov
movb
and
dec
in
mov
dec
in
fcompl
ja
iret
shll
fstps
ljmp
jne
pop
popf
xor
bound
in
std
std
or
pop
cmp
xor
jne
inc
xchg
lret
fidivs
repz
cmpsl
loopne
outsb
popf
loop
out
push
push
cmp
mov
popa
jnp
sbb
mov
fdivl
call
lods
cmp
xlat
mov
xor
rorl
or
rcrl
incl
jo
pop
push
jno
je
ds
ror
mov
and
or
int3
xchg
fdivs
stos
mov
add
and
mov
hlt
idivl
xchg
insb
and
fcoml
mov
push
in
lock
mov
dec
dec
and
and
or
arpl
out
out
jecxz
jnp
popl
push
mov
and
and
pop
cld
clc
fs
lret
jge
sub
jmp
pop
dec
cli
mov
pop
push
inc
daa
sbb
movb
addr16
sbb
xchg
pop
movsb
fists
mov
repz
cmp
outsl
mov
jecxz
imul
mov
mov
lods
into
jbe
sbbb
jl
xlat
bnd
lds
push
mov
or
mov
inc
cmpsl
mov
adc
clc
hlt
xor
jno
jp
xchg
cli
add
rclb
or
jle
add
mull
fcomip
push
out
ror
cwtl
test
aas
subb
scas
xchg
or
shll
pusha
add
jae
xor
mov
rcrl
and
inc
and
pop
inc
and
loop
mov
insb
insb
arpl
clc
neg
jmp
cmp
jl
das
jmp
mov
sbb
shrb
xchg
and
lcall
dec
ret
rorb
sbb
ficompl
xlat
mov
sub
pop
pop
pop
dec
dec
sbb
mov
inc
push
in
or
ss
movsb
in
mov
xorl
pop
dec
inc
dec
sbb
aaa
pop
bound
mov
fcomi
sti
in
stc
outsb
push
pusha
shl
dec
out
xor
xor
add
ljmp
dec
aaa
shll
inc
in
test
aas
lock
loopne
mov
push
js
jb
je,pn
dec
mov
sarl
stc
cwtl
out
adc
clc
pop
xchg
outsl
mov
fcomps
insl
mov
lock
sub
sti
fimull
xchg
ret
nop
fldenv
xor
sar
mov
mov
test
negb
popf
pop
test
paddq
pop
add
pop
loope
stc
lret
test
aas
mov
pop
or
jecxz
and
fstpt
int3
icebp
add
aaa
mov
fiadds
pop
pop
test
in
bound
ret
inc
xor
sar
mov
imul
push
mov
cltd
fwait
or
enter
cs
mov
and
outsl
inc
xchg
inc
pop
insl
jmp
mov
sbb
mov
mov
jbe
xor
and
call
inc
in
fnstcw
je
cmpsl
insl
xor
cwtl
push
test
push
loopne
aam
mov
cmp
xchg
jp
sub
mov
inc
sub
repz
das
lret
or
fisttpl
cmc
sub
ss
jecxz
lcall
ss
bound
enter
cmp
jbe
and
loope
sub
push
xor
dec
stos
outsl
rorl
loop
sub
lret
pop
mov
out
xchg
arpl
rcrl
dec
or
movsb
dec
push
or
repnz
jne
or
addr16
pop
enter
ret
pop
xchg
movsl
outsb
push
addb
pop
mov
cmpsl
push
outsb
pop
push
lea
xchg
aad
sti
xchg
push
or
mov
jno
loopne
sarl
sahf
ja
lock
loop
shlb
ljmp
dec
out
adc
mov
pusha
mov
or
push
or
and
xchg
dec
cmpsb
mov
mov
adc
add
mov
mov
mov
mov
repnz
lahf
fsts
cmpsb
jnp
or
push
xchg
loopne
inc
sub
cmc
aas
adc
sbb
add
loope
mov
insb
lock
lcall
incb
fs
jns
inc
insl
mov
pop
pop
fs
or
mov
mov
xchg
jb
jmp
jg
jmp
leave
mov
inc
cmpsb
mov
out
or
ficomps
push
call
in
pushf
or
inc
ljmp
dec
cmp
mov
aam
icebp
roll
es
cli
push
dec
mov
cmp
and
popf
sub
fisttpll
jno
cld
adc
popa
or
jp
xchg
fcmovnu
dec
stos
push
test
cld
mov
bound
xchg
push
or
xor
jge
dec
sti
add
jb
sub
dec
nop
das
shr
xor
push
jge
xor
int
cmc
sarb
sub
and
cmp
lcall
pop
push
in
roll
es
jle
cmc
sbb
dec
push
or
cmp
and
mov
ret
sbbl
inc
ret
mov
xor
rcll
int
pushf
leave
pop
iret
leave
cmp
repz
jl
jb
movsb
or
aas
cli
or
fidivrs
popl
add
xor
and
jg
test
in
aam
cmp
sub
daa
cmp
lock
cmp
nop
mov
loop
fildl
mov
sub
xchg
mov
jno
ss
subl
sbb
mov
cmpsl
jecxz
cmpb
push
jne
repnz
xlat
int
jl
lahf
dec
sub
jecxz
mov
clc
add
mov
or
lcall
push
push
sete
jl
out
adc
inc
cmp
dec
push
lcall
frstor
in
jl
sub
mov
or
xor
xorb
xchg
pop
fcomps
jb
pushl
xchg
mov
orb
cmpb
adc
mov
cmp
jge
and
imul
push
cld
stc
sub
cmp
sahf
ret
dec
mov
andl
test
mov
and
sub
or
pop
jmp
dec
ss
sahf
pop
inc
loop
cmp
outsb
outsb
xor
mov
dec
in
les
loope
in
popa
add
mov
loopne
nop
sub
jmp
xchg
popf
lods
repnz
or
testl
es
mov
fsubr
decl
xchg
push
ljmp
jl
xchg
lock
xor
or
fiadds
mov
inc
loop
ja
or
inc
fstl
sub
in
jnp
or
stc
hlt
out
outsl
in
sub
and
sarl
scas
iret
xor
add
jb
or
rolb
cmpsb
mov
cld
imul
filds
sbb
add
cmp
cmp
cmp
inc
stos
lea
int3
sbb
adc
pop
incl
or
cmp
lahf
jno
jmp
out
sbb
dec
mov
mov
mov
out
and
sbb
mov
fmull
jo
pop
rcrb
push
leave
test
xchg
adcb
inc
int3
push
xor
push
into
mov
xor
shrb
xchg
xchg
and
inc
sbb
jmp
daa
std
add
mov
int
data16
pusha
repnz
sub
push
mov
jp
rcll
in
adc
fstl
dec
lds
add
call
or
and
push
test
pushf
mov
out
shl
adc
ret
test
sub
push
cmp
repnz
fbld
js
inc
pop
in
ja
lock
pop
jb
sub
out
inc
mov
je
xor
std
cmpsl
cltd
bnd
add
push
mov
shl
inc
and
xor
sub
std
inc
xchg
fsubr
inc
and
cmpsb
pop
pop
xor
adc
sbb
int3
dec
sub
ss
lds
pusha
lcall
stc
outsb
gs
fucom
not
mov
stos
popa
adc
aad
push
lahf
lret
xor
jo
push
xlat
sub
cmp
jmp
and
inc
lods
dec
jae
pop
mov
add
shlb
push
mov
xadd
int
jbe
fildll
or
mov
and
loop
into
xchg
add
bound
leave
inc
insb
into
out
xor
inc
stos
pop
cmp
jo
lcall
or
call
inc
in
mov
inc
movsl
out
inc
das
pop
iret
sahf
push
enter
add
mov
jg
jo
adc
xlat
fucom
jp
testb
in
into
jle
lret
inc
mov
cmp
mov
nop
dec
push
jne
or
aaa
clc
addr16
xor
scas
sbb
sbb
sbb
mov
test
stc
mov
int
xchg
sbb
and
stc
xchg
pushf
xchg
es
dec
jno
call
sbb
call
fsubrp
and
inc
jle
fidivl
loopne
push
jle
sub
jge,pt
mov
subl
pop
xchg
lods
andb
dec
jmp
push
sbb
into
div
jae
inc
pop
add
test
mov
and
mov
push
cmp
adc
jge
mov
cld
jne
mul
fistpll
sahf
lret
and
sub
jmp
mov
pop
mov
aaa
cmp
nop
mov
and
jg
xor
das
jnp
cmp
hlt
test
and
and
add
divl
filds
inc
jp
and
loope
cwtl
inc
xchg
imul
jne
adc
cld
loopne
pop
dec
inc
ljmp
shll
stos
sarl
jecxz
jge
int3
or
scas
mov
mov
jmp
icebp
xchg
leave
pop
mov
xchg
pushf
inc
mov
arpl
int
mov
movsl
outsb
hlt
xchg
negl
inc
cmpsb
sbb
xorl
test
loop
rcll
jae
inc
lret
sbb
or
imul
sbb
sahf
stos
xchg
out
movsb
mulb
imul
cmp
dec
lds
mov
mov
es
push
ss
sbb
or
inc
insb
jbe
pop
sbb
dec
pop
shrl
xor
dec
pop
shrl
insb
push
adc
lcall
jg
jp
bound
movsb
cli
xchg
andl
fsubrs
fdivrl
and
fs
addr16
cltd
cmp
adc
push
pop
mov
cmp
movsl
adc
sbb
ss
mov
inc
mov
add
loope
rcr
jl
xchg
jg
je
xor
cli
dec
xorl
mov
add
inc
test
and
cmp
fstpl
fildll
jno
dec
jmp
arpl
pop
fdivr
out
popf
rorb
mov
cli
movsb
mov
test
jecxz
xor
and
pop
andl
popf
mov
adc
stos
push
dec
rorl
loope
aaa
lcall
insb
jp
in
xchg
mov
jecxz
arpl
rol
outsl
into
out
xchg
xchg
test
or
sbb
ret
push
ds
outsb
push
push
push
out
repz
std
js
scas
popf
xor
mov
sarl
xchg
cmp
ja,pn
rcr
les
les
adc
outsb
push
insl
xor
mov
pop
ds
in
and
cmpsb
push
add
in
scas
xchg
fdivrl
iret
cmp
dec
mov
idivb
cmp
cmp
xchg
arpl
xor
mov
das
xchg
pop
das
shlb
and
ret
rorb
xor
mov
popf
cmp
sbb
dec
outsl
xchg
int
dec
or
movb
repz
popf
lds
dec
push
outsl
adc
shlb
jb
sub
mov
sbb
and
xchg
cmpsl
fidivrl
jge
dec
fwait
test
cltd
call
jno
mov
movsl
lock
stos
repnz
push
icebp
push
inc
into
jae
fdivrs
push
leave
pop
ret
mov
jmp
scas
pop
jbe
mov
stos
movsl
jg
stc
cli
xchg
mov
mov
test
pop
jb
cmpb
in
pop
sub
sub
and
mov
mov
mov
cmp
jge
aaa
out
imul
stc
bound
inc
jo
stos
movsb
push
pop
clc
shlb
mov
sbb
stos
fcmovu
jp
loop
leave
mov
shrl
cmpsb
enter
push
rorb
in
addr16
dec
and
adc
arpl
dec
push
faddl
push
out
mov
and
fidivs
jge
outsb
lods
mov
or
mov
les
cld
lock
movb
test
sbb
rclb
outsb
icebp
je
or
cmpl
outsl
rorb
mov
rorb
jecxz
rcrb
popf
je
mulb
pushl
fldcw
xchg
push
in
in
mov
stc
xchg
xlat
jle
fldcw
cmp
sbb
outsb
cwtl
aaa
inc
pop
jmp
mull
into
fstpt
std
shll
xchg
mov
cmpps
mov
adcb
jnp
mov
neg
sbb
cmpl
lods
xchg
addr16
enter
sub
out
pop
cmp
sbb
divb
cwtl
cmpsb
sub
push
adc
xchg
movsl
mov
sub
mov
in
push
sub
sbb
ret
cmp
xlat
shrl
jbe
pop
pusha
lods
sbb
xorb
cwtl
pop
add
push
mov
jmp
adc
arpl
sti
sahf
cmp
bound
pop
push
mov
movsb
add
adc
xchg
dec
pop
fstpt
lcall
test
cmpl
cmp
mov
inc
lock
inc
call
mov
sbbl
sbb
sub
sub
cmp
sbb
jb
mov
jle
and
aam
jp
inc
ret
jae
icebp
push
mov
mov
in
daa
sbb
cmp
xchg
scas
cmp
push
jno
pop
aam
push
mov
sbb
jbe
lods
and
ja
imul
je
lahf
ficompl
and
inc
popf
out
sub
inc
pop
jg
push
inc
movsb
call
cld
pop
cmp
inc
test
fstpt
and
cmp
leave
pop
inc
push
lock
ror
out
push
mov
in
adc
pusha
add
xor
pop
in
lea
pusha
fiaddl
mov
adc
inc
repz
xchg
sub
dec
rcl
icebp
mov
insl
pop
lds
dec
fists
push
xlat
loop
dec
jb
ror
jne
loope
dec
jns
out
out
movsl
jle
in
jne
push
xchg
sti
mov
jmp
dec
xor
mov
inc
xchg
test
add
ljmp
rcr
jb
lds
outsl
jp
pop
dec
cmp
cltd
push
outsb
mov
mov
xchg
test
or
inc
xor
cltd
ds
xchg
xchg
push
clc
cmpsl
add
xor
push
mov
push
rcll
fsubrs
push
dec
add
stc
dec
js
dec
mov
leave
pop
xor
lret
data16
push
or
aaa
add
loopne
inc
outsb
pop
movsb
inc
incb
jne
dec
fidivl
dec
lock
lahf
call
test
inc
dec
or
push
fidivl
iret
lods
mov
mov
mov
popl
xchg
cmp
pop
daa
inc
sub
mov
sbb
imul
pop
push
out
movsb
fs
mov
sub
inc
mov
mov
ds
je
clc
pop
xchg
mov
or
mov
aam
inc
push
jp
je
or
fcoml
xchg
adc
fsubs
mov
lods
sub
lds
repz
and
pop
mov
mov
test
sarb
jnp
dec
mov
pop
gs
cmp
mov
cld
outsb
test
clc
xor
dec
add
sub
mov
xchg
fs
loope
dec
cmpsb
mov
xchg
cwtl
inc
jl
cs
xchg
rorb
dec
je
cli
inc
mov
push
push
push
lret
das
sub
add
int3
pop
dec
arpl
push
in
scas
les
lahf
add
mov
inc
je
mov
rorb
in
paddd
lret
or
movsb
cmp
mov
push
push
add
fs
pop
test
nop
lds
dec
aas
fcompl
fstpl
inc
jne
insb
cli
push
adc
pop
mov
sub
sbb
int
dec
imul
mov
aam
inc
pop
jns
dec
sbb
xchg
ss
jl
inc
sarl
adc
out
imul
outsl
rorl
cmpsb
cmp
dec
popf
bound
mov
les
add
push
cld
mov
cld
pop
movb
cmp
add
dec
pop
xchg
mov
lret
sub
stc
pop
add
in
popa
add
lds
xchg
cld
sbb
repz
mov
dec
sarl
icebp
int
inc
imul
or
sub
jo
out
test
leave
sbb
cmp
int3
out
js
in
pushf
call
mov
fmul
jmp
clc
adc
xchg
jnp
push
iret
repnz
je
push
sbb
adc
and
in
lcall
movsb
or
push
push
sbb
cmp
stos
aam
mov
adc
je
loope
adc
and
push
adcl
incb
push
xchg
lea
mov
adc
clc
mov
ss
divb
clc
cld
ds
mov
test
repnz
leave
repz
movd
stos
pushf
jmp
push
mov
cmc
mov
pop
add
out
jae
xor
pusha
sub
cmp
in
inc
adc
cs
in
out
test
into
daa
gs
push
jmp
jle
orb
push
movb
lds
pop
enter
push
icebp
cld
mov
int
pop
add
mov
fisttpl
mov
lret
lcall
mov
iret
movsb
hlt
or
xor
loope
pop
inc
jae
xlat
divl
stos
out
bound
mov
jp
mov
aad
test
cmp
mov
int
pop
lea
enter
add
pushf
je
lock
mov
ret
pop
insl
aam
xor
cmp
dec
cmpsl
test
in
jae
cmc
iret
gs
daa
jb
fadd
xor
jno
xchg
sub
jae
and
ds
mov
push
ljmp
out
sti
xchg
sbb
lock
loope
cmp
xchg
and
mov
push
repz
test
cmp
nop
jo
ret
mov
imul
mov
out
rcll
popa
mov
sub
dec
and
and
and
push
aad
mov
and
daa
repnz
sub
std
stc
stos
or
mov
mov
lret
xchg
add
inc
adc
repz
cltd
jbe
inc
push
outsl
orw
adc
ja
call
sti
and
mov
pushf
daa
push
lds
dec
int3
pop
add
mov
mov
add
scas
movsb
jg
cmc
mov
mov
sub
mov
jle
out
movsl
cmpsl
leave
test
lods
enter
and
sti
mov
aaa
data16
push
ficompl
imul
jbe
jge
push
cmp
mov
pop
dec
sbb
mov
outsl
inc
adc
sub
xchg
push
cltd
loopne
mov
add
mov
pop
repnz
aaa
add
sbb
cmpsl
jb
adc
sbb
cmc
xchg
xor
push
fisttps
inc
xchg
push
imul
test
lds
adc
mov
insl
push
fistl
loop
pop
mov
pushf
add
add
insl
call
jecxz
jp
push
sbb
icebp
nop
jne
fmuls
cltd
hlt
dec
popf
nop
cwtl
inc
loop
lea
mov
insb
clc
pop
pop
cli
pop
adc
mov
icebp
push
or
aam
ja
mov
or
and
push
pop
je
mov
mov
aam
fistps
pusha
jae
cmpsl
mov
test
imul
adc
jge
inc
xchg
sahf
sbb
push
in
pop
insb
add
jb
sahf
ffreep
jnp
cwtl
pop
sbb
or
lds
fists
cs
mov
lret
shlb
loop
pop
pop
jecxz
rolb
sbb
bound
pop
inc
pusha
movsb
arpl
test
shl
insb
out
incb
xor
mov
lods
fsubs
push
movsl
cmp
mov
pushf
lods
inc
fwait
lea
loopne
adc
inc
movsb
xchg
shrl
inc
xchg
inc
inc
lret
jecxz
fwait
mov
shlb
icebp
int3
push
leave
sub
movl
mov
mov
enter
mov
pop
mov
adc
sbb
cmpsl
aam
xchg
fs
sbb
shll
adcl
aas
mov
dec
fnstenv
and
xor
or
sub
sbb
push
loop
fiadds
and
out
xchg
inc
inc
scas
xchg
in
sbb
xor
xor
jge
cld
add
cmp
js
or
pop
add
nop
push
movsl
sahf
inc
cwtl
daa
loope
pushf
subb
or
fisubs
pushf
test
and
outsl
adc
sub
out
andb
fdivp
in
gs
icebp
xchg
push
lahf
and
or
and
pop
fstpt
pop
ja
scas
jmp
push
pushf
mov
imul
fstpl
jno
pop
inc
iret
cltd
subl
bswap
loope
jnp
bound
fidivrl
fs
pop
inc
test
cmp
test
push
sub
ds
divb
jb
jecxz
push
inc
mov
sbb
rorl
xor
aaa
fadds
std
in
fdiv
pop
mov
sahf
adc
test
test
movsb
les
mov
ss
mov
sub
mov
adc
pop
cwtl
mov
loop
ss
adc
mov
inc
movsl
jecxz
repz
shll
lret
xchg
je
push
dec
aam
xchg
push
loopne
loop
dec
int
aad
sbb
dec
daa
or
cmp
jmp
jb
rorb
aas
push
and
cmpsb
mov
mov
test
inc
fnstsw
imul
push
ja
and
dec
sbb
loopne
pop
testl
adc
inc
in
mov
adc
nop
sub
loop
mov
add
xor
mov
cmp
stos
inc
xchg
inc
pusha
test
push
push
stc
pop
mov
jns
mov
or
test
lods
push
ror
pop
lret
jmp
outsb
out
adc
mov
test
lds
std
ds
jle
and
mov
aad
iret
sti
push
sbb
bound
insl
aam
pop
xor
xchg
xchg
xchg
mov
xchg
pop
add
mov
ret
xchg
ret
xorb
in
mov
ficomps
jnp
pushf
jne
les
fidivrs
pusha
loope
xchg
sarl
or
sbb
iret
adc
mov
stos
stos
in
stos
cltd
rorb
fsubs
and
shlb
fwait
mov
mov
ljmp
outsl
jne
aas
cmp
scas
fisubs
jbe
cmp
xchg
decl
dec
enter
aam
pop
cltd
sahf
xor
push
fs
mov
dec
mov
pand
cmc
jle
cmp
fcoms
sti
inc
xchg
ds
jecxz
pop
xchg
mov
mov
or
jg
xchg
sub
pop
iret
popa
out
out
pop
jp
loopne
int
and
and
in
nop
orl
push
loop
mov
add
insl
adc
mov
xchg
hlt
jbe
mov
or
xlat
cmp
push
xor
push
outsl
test
xorb
mov
xchg
jne
mov
jmp
in
insl
pop
cmp
inc
dec
inc
pusha
add
frstor
cmpps
loope
xchg
out
pushf
outsb
jg
daa
pop
xlat
in
pop
pop
adc
data16
jge
push
rcrb
jne
xor
mov
jns
dec
cmp
pop
stos
mov
dec
outsb
outsb
xor
xchg
xchg
mov
mov
and
sahf
scas
cld
or
ds
inc
mov
test
loopne
pop
sub
lahf
fnstcw
das
loop
lahf
out
sub
push
cld
gs
mov
test
scas
and
inc
mov
leave
or
fsubrs
xor
cmpsb
pop
pop
adc
cmp
mov
push
cmp
mov
pop
out
and
and
xchg
sbb
cmc
jle
mov
arpl
mov
push
cld
nop
inc
sub
out
xchg
mov
mov
clc
cli
adc
stos
repnz
fdivrp
icebp
add
mov
cmp
or
insl
push
push
lods
fcomps
orb
ret
jae
mov
cmp
cltd
and
cmp
mov
sub
jbe
subl
pusha
push
push
mov
add
xor
pop
test
das
inc
insb
test
out
je
xchg
fs
inc
dec
mov
pop
fcoms
push
cmpsl
int3
pusha
sbb
je
jg
xchg
mov
mov
dec
popf
mov
push
jns
js
test
cmpsb
xor
mov
dec
or
add
xchg
in
jbe
and
xchg
xor
lods
sub
jg
rol
movsb
js
lds
cs
shl
and
fst
imul
or
dec
and
pop
lock
fldenv
mov
test
push
cli
data16
ds
sub
js
jb
adc
xchg
pop
leave
mov
outsb
cmp
xchg
loop
dec
add
and
or
test
cmpsb
inc
nop
pop
fidivl
mov
dec
xchg
ja
adc
push
bnd
mov
loopne
jne
in
xchg
je
mull
add
in
leave
sarb
or
imul
add
add
es
iret
lea
bound
sbb
and
pop
jae
es
cmpb
popf
imul
xor
add
xchg
cmp
push
in
jo
push
in
push
cmc
and
pop
pop
mov
jmp
cld
mov
std
lods
mov
pop
fldcw
jl
pop
pop
cmp
ret
or
rcr
hlt
aaa
je
das
ss
xor
lds
jmp
scas
test
cmp
std
push
push
popa
ljmp
xchg
pop
filds
mov
cmp
push
call
stos
jge
dec
inc
or
dec
mov
out
cmp
sti
test
and
sub
xor
jmp
cmp
pop
out
add
dec
mov
jp
mov
das
aas
sub
ja
adc
test
jmp
adc
pop
or
lret
scas
call
ret
shll
sub
loopne
ja
fs
or
jo
cmpsl
pop
push
adc
xor
in
js
xchg
cli
das
push
pop
mov
or
int
in
mov
xchg
pop
mov
mov
flds
lret
clc
xchg
popa
and
test
insl
ret
cmpsb
repnz
lahf
and
add
pop
lret
or
cmpsl
aam
scas
dec
mulb
shlb
enter
jle
jae
out
in
add
sbb
pop
fucomi
adc
cld
inc
aam
aad
or
mov
pop
inc
in
lds
test
mov
pop
dec
xchg
int3
shrb
into
nop
add
mov
push
mov
push
imul
jo
in
dec
and
xchg
mov
jmp
mov
call
mov
inc
lods
push
xchg
lods
push
cs
mov
insl
stos
loope
jge
cmp
sbb
stc
dec
mov
push
clc
inc
test
fsub
xorb
imul
pop
mov
loop
mov
mov
dec
pop
lcall
jge
dec
add
xchg
xchg
jnp
adc
mov
sub
dec
in
lock
xchg
sbbl
xor
sbb
xor
stos
stc
mov
mov
inc
sbb
clc
lea
call
or
sbb
mull
cmp
add
xorl
or
andl
cmp
dec
mov
mov
gs
mov
mov
push
out
add
sbb
in
push
pop
mov
dec
das
dec
or
fwait
jge
testl
loope
repnz
out
pushf
dec
test
inc
sub
lock
leave
in
hlt
dec
jl
mov
xchg
and
jno
repz
push
xchg
xor
pusha
dec
mov
xchg
aad
cltd
cmp
jb
repnz
adc
ds
repnz
fwait
mov
or
dec
ret
sarb
dec
mov
mov
repz
xchg
mov
pop
adc
sub
sub
jecxz
adcl
js
push
enter
cmp
addr16
fnstenv
shlb
aas
cwtl
pop
xor
movsb
test
mov
xor
out
imul
cmc
cmpsb
pop
bound
inc
mov
cltd
insb
call
movsb
inc
lret
outsb
cltd
or
jnp
mov
fdivrl
dec
stc
xor
sub
fisubl
cmp
jne
xchg
pop
fwait
bound
stos
mov
je
adc
les
or
mov
push
ljmp
mov
lea
jo
mov
mov
xor
jl
jg
mov
adc
sub
cli
mov
mov
jecxz
push
cs
xchg
cmc
mov
add
fildl
cmp
cmp
rorl
in
xchg
xor
popa
pop
dec
data16
xor
mov
xchg
pop
lods
into
in
loopne
sbb
int
data16
sbb
test
pop
mov
imul
pusha
xor
test
ss
xchg
ljmp
aas
ss
mov
sbb
scas
xor
pushf
scas
inc
notb
adc
xchg
imul
clts
xchg
mov
clc
jecxz
pushf
fs
scas
daa
dec
sub
and
dec
inc
xchg
mov
cmp
ss
xchg
mov
insb
insl
nopl
in
jo
jae
dec
jne
out
lea
adc
jo
cli
out
and
push
outsb
push
popa
lods
xchg
pop
push
lret
scas
xchg
daa
into
push
imul
dec
imul
xor
adc
jl
movsl
jns
adc
add
pop
lock
pop
js
xchg
in
mov
mov
dec
pushf
out
sub
lret
jnp
std
movsl
int3
and
pusha
cmp
cs
mov
dec
lret
cmp
jb
mov
lcall
and
xchg
xchg
add
dec
pusha
push
jbe
push
rcrl
xor
dec
sbb
add
or
xor
mov
add
fists
iret
mov
out
push
shrl
mov
movsb
mov
testl
lea
mov
xchg
daa
les
filds
cmpsb
push
push
inc
cli
and
and
data16
rclb
popa
lods
rcll
dec
inc
ss
into
mov
push
outsb
gs
push
inc
sti
mov
test
testb
mov
cmc
mov
cmp
add
dec
mov
sbb
mov
mov
xor
dec
outsl
cs
mov
fwait
pop
pop
dec
mov
movsb
adc
fisubl
sbb
inc
mov
pop
sahf
adc
add
stos
out
pop
inc
sahf
jecxz
mov
stc
pop
dec
inc
xor
hlt
mov
xor
xchg
cmpsb
sbb
add
or
out
push
into
jbe
rcrb
lods
notb
rcrl
pop
pop
scas
xor
rcr
cmp
inc
test
dec
mov
fbstp
jo
shl
mov
mov
fxch
jne
insb
mov
sti
xor
cs
push
jae
mov
div
or
cwtl
and
icebp
lods
mov
lock
sbb
push
out
xchg
mov
cmp
inc
jg
test
jp
jge
orl
roll
xor
push
ficomps
or
test
enter
sub
xchg
lret
pop
mov
popf
mov
mov
lock
loop
sub
mov
pop
test
into
xchg
sub
js
or
test
mov
pop
fsubrl
test
xorl
sub
std
insb
add
mov
jmp
fisubl
subl
data16
pop
adc
ss
cmp
out
ret
in
pop
ljmp
adc
loopne
gs
xchg
rcr
sarb
inc
jno
out
or
test
in
nop
xlat
push
pushf
testb
gs
lods
push
aas
jl
repnz
mov
xlat
xor
cmp
jle
aas
sti
push
addl
scas
lcall
cld
and
jnp
ja
xchg
aas
xor
sub
push
pop
dec
mov
add
adc
mov
pop
inc
stos
andl
punpckhbw
rcrb
dec
sub
gs
insb
pop
xchg
roll
push
adc
mov
jnp
int
enter
mov
mov
out
inc
outsl
orb
pop
mov
jne
pop
ret
fnstenv
add
test
ret
scas
inc
sub
mov
xor
mov
fbld
push
fsts
imul
jecxz
sbb
push
adc
aam
xlat
loop
pusha
enter
mov
cwtl
ficoms
inc
inc
dec
fwait
movsb
sub
dec
mov
insb
mov
adc
imul
dec
xchg
gs
ljmp
lods
mov
xchg
pop
ss
loopne
cmp
mov
and
jl
imul
imull
adc
push
cmp
fs
xchg
xchg
ret
hlt
xor
adc
push
std
popf
dec
xor
dec
in
mov
jo
cmp
adc
sub
fcomi
mov
outsb
add
inc
mov
xchg
pop
loope
ljmp
inc
cmpsl
or
out
subl
mov
fucom
and
loope
lock
jge
dec
fstpt
jp
sbb
xor
inc
mov
add
push
dec
pop
fldenv
jmp
cltd
push
fimuls
dec
xchg
outsl
rcr
and
ficomps
jge
aaa
out
mov
jmp
dec
cwtl
push
call
in
inc
xor
push
push
cltd
inc
lcall
inc
xchg
sbb
pop
inc
scas
out
mov
jge
mov
in
push
push
inc
daa
cli
mov
jmp
sbb
fisubl
ja
fistpl
and
or
movsl
inc
rcrl
cmpsl
lock
icebp
push
or
stc
mov
push
stc
mov
sbb
mov
dec
push
mov
insb
fs
pop
inc
or
push
clc
mov
and
inc
pushf
sbb
mov
addb
mull
ja
xchg
les
xor
cmc
stos
outsb
inc
cmpsb
sub
cld
iret
cli
inc
sbb
icebp
and
sti
in
mov
mov
out
popa
adc
bound
xlat
jns
lea
ficoml
xor
pusha
lahf
sti
pop
in
mov
add
movsb
icebp
lock
cmp
xchg
mov
ja
push
fsubrs
jecxz
mov
sbb
sbb
cmpl
inc
jae
jbe
repnz
les
and
mov
xchg
ds
pop
lahf
xlat
inc
adc
push
popf
fwait
std
push
mov
and
xor
mov
xchg
out
fidivl
dec
dec
push
les
test
dec
xchg
sti
inc
sbb
call
xor
pop
add
jmp
stos
push
gs
push
pop
jnp
popf
jge
push
xchg
or
sbb
sbbb
push
push
lods
or
fstl
xor
sub
test
cld
push
mov
dec
mov
dec
inc
ja
adcb
or
dec
out
shr
ds
fisubl
in
mov
cld
pop
mov
jne
cmp
and
xor
lock
or
shll
test
jmp
pop
cmp
lock
mov
scas
movsl
daa
mov
jb
pop
sbb
std
fsubrl
inc
adcb
cmpsl
push
xor
stos
addl
ror
jg
lock
cwtl
pushw
fs
cmp
mov
pop
add
popa
cs
sti
out
out
int3
stos
dec
jecxz
sub
dec
sub
sub
push
xchg
lock
mov
mov
inc
cmc
cmp
scas
movsl
dec
scas
imul
and
and
jnp
rclb
inc
lock
mov
adc
mov
mov
cmp
mov
fsubl
ja
ljmp
mov
mov
sbb
pop
lcall
decb
in
out
dec
sbb
lods
jne
inc
dec
push
and
dec
xor
test
and
ret
pop
xor
lds
in
jno
xor
jle
push
enter
push
repz
push
and
or
and
out
ja
fcmovbe
out
xor
popa
and
popa
pop
mov
cmp
adc
ljmp
and
sbb
pop
jle
xor
or
imul
movsl
test
mov
or
bound
cmpsb
mov
xchg
lahf
cld
mov
sbb
mov
imul
cmp
data16
push
rolb
loop
daa
daa
pop
movsb
lcall
sub
sub
mov
or
fwait
addr16
or
ds
push
add
inc
and
adc
stos
out
sub
jno
sbbb
cmp
int3
xchg
dec
scas
adc
fucom
push
adc
stc
xchg
mov
decl
cmpsl
inc
push
mov
repz
shlb
in
jecxz
std
mov
out
cmp
xor
sub
test
cmp
and
stos
mov
adcl
xchg
call
and
push
popa
cltd
pop
pop
shll
jne
into
dec
jae
popf
sub
adc
mov
cmp
fidivrl
jnp
int3
loope
fldl
cmpsl
xchg
xchg
jo
das
rcrb
sub
and
lods
ficompl
sbb
adc
cmp
inc
rsm
rol
lea
adc
xlat
mov
daa
mulb
sbb
je
lea
mov
fcoms
fildll
and
jge,pn
inc
test
fsubl
sub
xor
push
in
hlt
mov
inc
dec
or
pop
jae
push
xchg
jbe
cmp
mov
xchg
mov
adc
stos
scas
adc
addb
jne
inc
jne
mov
mov
pop
and
scas
call
sub
push
add
xchg
test
push
and
daa
ss
addb
orb
cmp
test
mov
and
mov
es
cld
pop
stos
and
pop
stos
sbbl
mov
dec
bound
and
and
sti
andl
int3
das
adc
cmpsl
mov
pop
aaa
fwait
es
addr16
ds
test
out
cmp
xchg
popf
daa
test
aad
xor
push
and
dec
pop
shl
shr
es
repz
cmp
ret
mov
rcrb
xor
std
dec
in
or
and
movsl
das
mov
test
pop
pop
add
push
xchg
es
push
sub
mov
test
nop
push
inc
adc
pop
shr
cltd
xor
rolb
adc
xchg
mov
pop
or
ss
fadds
pop
icebp
es
push
add
push
iret
hlt
test
fnstsw
mov
les
cltd
js
lcall
adc
shl
iret
adc
xor
push
dec
lahf
shlb
fimull
in
cmpb
push
rolb
dec
pop
scas
mov
mov
js
fldt
cli
andl
sarb
add
xor
test
and
or
dec
insb
inc
data16
dec
pushl
sub
gs
pushf
leave
or
inc
cmp
sbb
fcoms
and
or
or
xor
push
push
xor
and
cmpsl
ja
js
xchg
movb
mov
dec
adc
jle
push
mov
fbld
pop
push
lds
mov
xor
pusha
sbb
stc
ret
cld
sbb
pop
imul
ljmp
pusha
adc
test
push
sub
roll
mov
aad
clc
jns
cmp
enter
pop
call
aaa
cli
cmpsl
iret
pop
push
add
or
dec
fadds
push
jle
or
adc
fs
mov
insl
jl
adc
xchg
sti
mov
dec
cld
jmp
lret
xchg
scas
inc
fnstenv
cwtl
ret
adc
pop
aad
xor
ffreep
iret
adc
shrb
mov
std
xchg
testl
adc
cs
sarl
int3
push
jg,pt
cmp
mov
jns
stos
decl
pop
adc
dec
jg
jecxz
iret
push
push
pusha
cmpsl
dec
je
in
inc
lods
movsl
stos
push
loopne
dec
and
shlb
add
hlt
cwtl
push
cmpsl
jecxz
stos
cmp
divl
mov
mov
data16
add
cwtl
pusha
ds
pop
mov
iret
imul
xor
test
into
sbb
add
divl
in
jae
xchg
jmp
arpl
pop
sub
insb
or
cli
stc
add
mov
out
jns
cmpsb
repnz
mov
xchg
and
jge
pop
sub
sti
cltd
pop
adc
clc
and
fwait
jle
sbb
sub
push
sub
mov
iret
sbb
sbb
sarl
lock
or
dec
xor
fptan
or
sub
mov
repnz
sarl
pop
pop
sar
inc
mov
mov
stos
out
mov
test
pop
inc
jecxz
aaa
or
rcll
fisubl
je
daa
cmp
movsb
xchg
stos
cmp
push
in
jg
mov
sub
stc
adcl
push
mov
dec
jp
mov
sahf
cmpsl
push
add
jne
and
xchg
dec
jp
leave
jle
stos
andl
icebp
sbb
cmp
jecxz
xor
popf
lret
fwait
in
and
hlt
cmp
aaa
xchg
stc
jmp
sbb
and
idivl
ret
pop
jle
mov
push
mov
pop
xorb
inc
mov
sarl
call
pop
push
setae
test
pop
push
mov
inc
loopne
cmp
cmp
movsl
insb
sub
shrl
sub
mov
sub
push
and
imul
subl
mov
ss
arpl
xorb
push
aas
add
mov
jae
xor
xor
or
insb
insb
pusha
cli
inc
int
jp
jle
xlat
jle
pop
pop
push
bound
inc
mov
mov
mov
dec
mov
mov
movsl
leave
fisttpll
cs
loope
fs
out
sbb
dec
pop
jns
xchg
fadds
das
sbb
adc
ja
gs
inc
push
and
xchg
add
aad
xchg
xchg
mov
cs
dec
dec
push
jo
or
xchg
aad
leave
je
or
inc
test
add
xchg
arpl
pop
sub
mov
xchg
in
add
arpl
xchg
cmp
xchg
repz
mov
jg
inc
mov
jl
push
mov
inc
cmp
test
dec
testb
pop
mov
sbb
rcll
and
std
mov
or
jmp
and
push
mov
mov
add
inc
xchg
in
adc
mov
jbe
dec
stos
sti
sbb
std
add
jp
movsb
fnstcw
loope
aas
data16
imul
pushf
in
dec
sbb
or
mov
dec
lock
push
insb
out
push
cmp
repz
xchg
push
cmp
insb
xchg
mov
mov
outsb
call
pop
dec
mov
push
and
ja
cmpsl
cmp
adc
outsb
cmp
cmpsb
ret
out
dec
jno
ret
rol
push
dec
xlat
int
stc
jbe
mov
mov
arpl
ss
fiadds
dec
scas
dec
push
test
push
cs
sub
fidivrl
pop
idivl
out
mov
sub
mov
add
aam
add
sbb
call
dec
into
xchg
cwtl
fnsave
and
lods
pop
push
push
stos
push
enter
lods
pop
pop
or
jmp
pop
bound
les
jg
and
ljmp
das
cmpsb
and
xchg
xchg
push
int
insl
sub
shrb
add
dec
es
jp
xchg
stos
mov
cwtl
and
popf
mov
jge
pop
push
xchg
das
pop
test
xchg
dec
out
sbb
and
aas
scas
mul
push
cltd
sarb
dec
jecxz
push
jns
push
fistpl
loope
andb
sub
mov
sahf
addl
adc
insb
subl
cmpsb
imul
mov
lahf
mov
dec
pop
or
xchg
or
mov
jns
adc
cli
adc
insl
icebp
dec
sbb
je
psllw
or
or
cwtl
nop
dec
push
js
pop
scas
ret
or
ljmp
aas
imul
adc
into
add
mov
jg
mov
add
jo
mov
lret
cwtl
cld
xor
dec
push
dec
sbb
test
fdivs
xor
repnz
stc
xchg
cmp
jg
div
inc
mov
push
mov
fcmovnb
rorb
inc
push
mov
push
iret
mov
mov
dec
dec
xor
adc
inc
inc
adc
subb
int
testb
into
mov
sub
push
hlt
cwtl
and
cmpsl
popf
mov
stc
mov
sbb
aas
xor
cmp
aad
rcl
pop
js
jmp
shlb
and
xchg
out
push
insb
push
arpl
out
iret
loop
xor
xchg
mov
insl
shrb
adc
fstpt
out
xor
sahf
addl
adc
dec
lcall
shrb
xchg
ret
shrb
aad
mov
push
jo
jo
mov
cld
ret
add
popl
sahf
out
aad
push
in
mov
fldt
pop
add
cltd
xchg
scas
adc
outsl
adc
adc
aaa
jle
lret
mov
std
icebp
shlb
les
xor
pop
ret
mov
int3
jp
lret
or
cmpsb
ja
jno
scas
mov
add
inc
lods
cwtl
shrl
or
cmp
clc
mov
adc
fldl
sub
mov
test
fstpl
mov
pop
xor
mov
arpl
outsl
jo
mov
jmp
add
cmp
push
add
lahf
in
dec
push
das
iret
push
dec
dec
pop
jle
lea
sub
push
aaa
aas
add
call
jno
push
push
jae
push
mov
movq
loop
scas
pop
jg
je
pushl
std
call
push
and
repnz
adc
pop
xchg
push
lret
lcall
cli
dec
xor
inc
inc
sbb
xchg
sub
pop
insb
jns
xor
roll
and
js
movsb
test
sub
lea
jp
inc
lods
faddl
fwait
push
jge
mov
xchg
push
pusha
push
lds
cmc
push
push
and
jle
or
addl
push
mov
and
filds
ljmp
fucompp
movsb
and
jmp
push
js
cltd
pop
push
insl
lret
imul
dec
jb
in
ret
pop
imul
pusha
inc
imul
jnp
pop
cmp
rclb
popf
xchg
rcrb
jl
test
push
arpl
outsl
imul
shll
test
arpl
in
jg
call
mov
mov
xchg
dec
fstpt
data16
mov
pop
inc
jge
outsl
std
xor
sub
iret
outsl
sbb
mov
and
sbb
fcom
jl
adc
cmp
lret
fwait
loop
int3
fcoms
mov
mov
scas
cmpsl
dec
aaa
add
inc
jge
push
mov
std
jmp
xor
roll
add
inc
fcmovbe
mov
fcoms
jno
sub
xchg
pop
pop
daa
sbb
into
ret
sbb
rol
pop
ljmp
pop
and
pop
sub
push
out
inc
jp
nop
dec
pop
cmp
xlat
outsl
addr16
xchg
or
loopne
in
je
mov
mov
xor
xor
cmp
in
int
mov
pop
cmp
pushf
mulb
xor
add
push
imul
popa
jae
inc
js
add
add
je
outsb
arpl
je
jb
add
push
gs
outsb
jne
je
insl
inc
imul
add
je
outsl
jns
arpl
add
lret
dec
add
ret
stc
mov
fdivrs
cmpsl
xor
popf
addr16
leave
clc
fwait
inc
insb
inc
dec
cmp
inc
xchg
pop
shlb
lretw
ret
stos
xchg
outsb
dec
mov
lods
and
aad
push
mov
sbb
pop
les
pop
hlt
call
insb
push
sbb
js
xor
insl
inc
outsl
popa
fsts
cli
or
jecxz
subb
je
dec
and
int
mov
xchg
imul
push
pop
cmp
je
dec
mov
add
inc
cli
std
std
iret
push
subb
enter
pop
xchg
cld
inc
sub
mov
xor
add
mov
icebp
push
push
negb
out
mov
call
imul
out
jmp
in
jecxz
sti
repnz
fs
in
nop
or
cmpsb
in
negb
divl
mov
js
daa
add
cmp
sub
mov
push
mov
and
stos
and
sbb
pop
xor
and
or
lods
nop
push
and
movsl
stos
inc
iret
jmp
jge
sbb
fs
jb
lahf
and
bts
movzbl
bswap
btr
shl
shr
ror
push
movzbl
lea
imul
shld
pop
lea
btc
bsr
pushf
mov
sar
bts
push
bt
movsbw
mov
ror
not
mov
pushf
call
add
push
gs
outsb
jne
add
inc
gs
insb
imul
je
adc
fdivr
scas
or
cmp
xor
inc
sbb
pop
aaa
fadd
sub
push
les
clc
les
in
int3
pop
das
mov
ja
popf
add
les
pop
sbb
pop
aam
sbb
mov
jle
jns
cwtl
mov
push
pushf
or
push
lods
mov
adc
mov
cmp
sub
push
inc
roll
call
or
in
out
dec
addb
cvtpi2ps
test
inc
sub
loopne
push
mov
inc
iret
mov
enter
add
insb
insb
push
imul
outsl
arpl
cmp
clc
test
or
jmp
lea
jae
adc
aaa
bt
pop
xadd
lea
sar
lea
pop
not
setne
sub
mov
btr
shrd
aam
dec
cmp
push
lea
bswap
mov
lea
jns
pusha
mov
pushf
lea
jb
rcr
stc
clc
cmp
movzbl
push
lahf
mov
mov
lea
jb
shld
mov
bt
jmp
add
dec
gs
jo
jb
popa
je
add
cmp
pushf
call
lea
pushf
movl
jmp
push
lea
call
push
clc
clc
mov
pushf
cmp
push
lea
jb
shl
bswap
mov
ror
movsbw
add
pushf
mov
pusha
shr
jmp
lea
je
cmp
jmp
jmp
adc
call
add
push
gs
imul
jae
add
push
popa
insb
imul
je
pusha
lea
je
clc
sub
cmp
test
push
cmp
cmp
pushf
lea
ja
clc
imul
call
add
dec
jo
outsb
push
gs
imul
and
mov
sbb
pusha
movl
pushf
pushf
pushf
lea
jmp
inc
imul
jne
je
and
and
jae
jo
outsl
addr16
insl
and
jae
bound
outsb
and
outsb
imul
and
and
jns
gs
and
data16
and
and
push
imul
and
popa
arpl
fs
jae
imul
outsb
daa
je
ja
jb
and
jns
outsl
jb
add
je
add
cmp
test
mov
cmc
push
push
call
rcl
pusha
lea
mov
pusha
clc
mov
add
call
movb
lea
je
bt
pushf
jmp
jmp
lea
lea
mov
setb
mov
setns
movzbw
pushf
mov
mov
cwtl
call
lea
movb
push
lea
jmp
pushf
pushf
adc
mov
pushf
mov
push
lea
jmp
pop
sub
popf
fsubs
pop
popa
mov
xchg
and
push
xor
mov
xchg
jne
sbb
das
push
popa
jae
xor
dec
inc
mov
pop
rolb
test
jl
add
loopne
sub
stc
mov
stc
std
sbb
pop
popf
mov
add
sbb
xor
cld
add
inc
adc
cmp
mov
cmp
mov
leave
pop
pop
sbb
inc
hlt
fs
push
or
xor
or
rol
jg
iret
lcall
xlat
clc
mov
push
movb
pushf
and
call
add
push
gs
fs
jb
arpl
jae
gs
outsl
jb
add
fcoms
stos
ds
push
or
lods
je
xchg
or
int
cmc
cmp
les
mov
mov
xchg
lock
leave
fst
xor
hlt
mov
shr
sbb
lret
ss
mov
jns
es
sbb
mov
dec
push
pop
sub
or
shlb
mov
jmp
pop
adc
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
hlt
push
add
add
inc
js
je
jb
arpl
jae
ret
mov
push
jp
push
mov
dec
cmpsb
test
cmp
sbb
mov
push
adc
mov
lods
or
call
pusha
scas
fstpl
sahf
shrb
leave
mov
mov
xor
inc
sbb
mov
sub
repz
leave
cld
mov
and
fadd
js
je
cmp
loope
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
or
and
aas
mov
test
stc
shl
clc
test
jmp
cmpb
jne
shll
shll
push
lods
inc
not
xor
sub
not
mov
pop
ret
add
inc
gs
gs
imul
movsbl
bswap
lea
not
not
pop
cwtl
mov
mov
call
pushf
lea
jae
rol
bsr
not
mov
neg
ror
rcl
bts
mov
bsr
bsr
sub
shl
mov
stc
pusha
bt
clc
sub
clc
repnz
pusha
lea
jne
pusha
cmp
rol
mov
and
sub
btc
shrd
lea
add
test
pusha
pusha
movb
sub
pushl
pushl
popl
bt
movb
clc
sub
jp
cmp
call
xor
fsubs
push
jp
stos
addr16
insl
dec
pop
lcall
mov
add
cli
loopne
mov
fsubl
add
and
jecxz
es
xchg
pop
aas
and
not
jnp
sbb
push
fiadds
or
call
fsts
inc
mov
scas
sub
xchg
test
jecxz
in
in
sbb
pop
subl
shl
jp
lea
movsb
pusha
pop
lea
mov
stos
adc
jecxz
stc
mov
aaa
xor
jno
gs
sub
cltd
test
adc
pop
popa
sub
xor
mov
push
lock
std
std
adcb
arpl
mov
ret
je
cmp
enter
and
pushf
mov
pop
insl
ss
sbbb
jge
sbb
loope
dec
dec
ljmp
add
in
and
test
or
addb
shlb
arpl
xchg
push
push
movsb
adc
dec
jle
insb
add
xor
aad
enter
fildl
lea
je
adc
shr
movsbl
rcr
xor
xadd
rcl
xchg
push
mov
bts
sub
mov
rcl
or
xor
shr
lea
movzbw
inc
mov
jo
cmc
pusha
test
or
pusha
jmp
pushf
movl
pushf
mov
mov
movw
lea
jmp
xchg
pop
inc
mov
cs
sub
bnd
ret
pop
jmp
add
jbe
jl
xor
aam
jl
fstpl
sbb
adc
clc
mov
popf
jge
mov
movsb
adc
dec
jno
loop
xor
mov
lahf
jge
scas
jmp
fcomi
fcomp
fidivrl
push
xor
mov
sbb
xor
jae
or
mov
or
sub
adc
jle
sub
out
fdivl
ds
jmp
sub
xor
ja
jae
lds
ret
ret
repz
fwait
pop
aaa
lahf
addr16
jb
mov
and
movsb
jne
aad
add
popl
ret
cli
sbb
xchg
or
jns
dec
sbb
rolb
add
je
gs
popa
addr16
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
pushf
mov
lea
jae
lahf
movsbw
xchg
push
mov
movsbw
setl
lea
jp
pop
push
lea
movb
pusha
mov
pushf
lea
call
bt
stc
pusha
cmp
pusha
jmp
clc
bts
pop
cwtl
pop
xadd
pop
and
inc
aaa
pop
and
cwtl
setle
bt
pop
dec
mov
rcl
pop
bt
bswap
pusha
add
jmp
mov
mov
lea
push
lods
mov
jmp
jmp
bt
cmp
mov
lea
jae
push
pushl
lea
jmp
add
push
push
outsb
outsl
ja
adc
jmp
call
add
push
gs
outsl
jbe
push
jb
jo
add
fmull
add
test
add
add
arpl
outsb
jne
je
insl
add
test
add
setge
not
mov
lea
lea
call
sbb
jmp
jmp
movb
pushl
xchg
pop
pushl
popl
movsbl
not
push
mov
push
setg
bswap
call
mov
xchg
je
and
or
mov
sbb
sub
sub
ss
js
add
rep
in
pop
mov
imul
repz
emms
inc
sbbb
dec
add
cltd
divl
pop
dec
andl
dec
ret
repnz
pop
lock
or
xchg
pop
add
mov
psllw
std
rorl
dec
outsb
mov
sub
aad
cmc
sti
imull
das
aas
sub
jecxz
outsl
addr16
pop
aaa
pop
iret
add
lea
inc
incl
ret
xchg
or
sbb
nop
ffree
xchg
test
ret
aaa
lahf
mov
jg
fcompl
popf
push
pop
sub
repnz
pop
or
orb
mov
out
fimull
and
div
add
sub
dec
sbb
fldenv
push
movsb
jb
mov
out
lds
pop
mov
push
and
dec
insl
hlt
sub
shl
xor
cmc
leave
hlt
mov
call
xchg
and
aam
sub
es
sub
outsb
fstpl
out
sub
push
aas
mov
repnz
push
test
aas
jp
mov
aaa
pop
mov
pop
cmp
hlt
ficompl
test
push
or
negb
and
dec
dec
fmull
add
call
jecxz
addr16
pop
jge
iret
xchg
jae
mov
movsl
es
lcall
mov
lods
and
inc
pop
jl
repnz
fcomip
add
mov
sub
add
loope
es
cmp
mov
int3
xor
dec
push
ret
add
shrl
mov
and
jbe
cmc
das
sbb
mov
push
mov
cld
push
test
scas
iret
mov
push
push
lods
pop
mov
sti
into
sub
jmp
adc
call
dec
lds
ljmp
push
jmp
sti
mov
fmull
pop
mov
sub
imulb
sbb
ds
pop
xchg
inc
adc
or
movsl
xlat
repz
or
add
cmovle
shrb
in
inc
sbb
int
push
inc
add
pop
jg
sarb
cmp
mov
pop
test
lea
leave
into
insb
add
loop
fmull
and
pusha
push
inc
out
jge
adc
mov
mov
pop
mov
jl
outsl
mov
lret
add
cmp
repnz
dec
sub
xchg
inc
and
pop
jne
jno
dec
outsl
js
cmp
lret
mov
fwait
mov
popf
or
ds
dec
cmp
out
fstpl
and
dec
mov
mov
dec
cld
arpl
sub
sbb
pop
daa
cltd
jmp
add
daa
lods
mov
add
push
rclb
ja
dec
dec
sbbb
pop
jmp
arpl
insb
out
inc
push
xchg
mov
imul
imul
stc
sbb
cwtl
mov
out
inc
mov
data16
imul
cmp
push
or
test
mov
fsubp
xor
inc
rcrb
pop
xor
or
in
pop
fimull
out
daa
dec
loope
loop
add
movl
sarl
or
movsb
cmc
add
sub
sahf
cmp
jne
add
pop
imul
mov
fcompl
add
jmp
outsl
xchg
add
rcr
ja
sub
fidivrs
xlat
sbb
push
aas
movsb
or
mov
int3
pop
mov
inc
call
repnz
or
int
or
iret
cmpsb
lret
dec
pop
mov
pop
daa
popa
jmp
adc
mov
sbb
outsb
cld
push
dec
outsl
and
push
imul
xor
xor
inc
mov
xchg
inc
pusha
sbb
adc
clc
std
test
ljmp
in
testl
fisttpl
std
push
jg
aad
lods
cltd
gs
push
sub
lea
add
cld
xor
jns
mov
stos
xchg
jne
adc
cltd
push
repz
sub
add
scas
and
inc
sbb
cld
iret
and
pop
mov
push
mull
cmc
cmp
cli
out
or
fisttps
fsub
add
or
and
inc
cmp
cwtl
rcr
mov
cmp
mov
cmp
pop
test
inc
push
cmpb
or
out
cmpsb
inc
sahf
std
aam
imul
fists
mov
shll
pop
jge
gs
add
dec
cmp
and
fisttpl
or
dec
sti
adcl
mov
fs
cmp
mov
sbb
into
testb
push
inc
mov
xchg
mov
daa
adc
mov
sbb
ja
scas
adc
dec
jge
loop
lcall
mov
mov
or
popf
clc
dec
add
mov
int3
sub
insb
rorl
inc
or
jecxz
xchg
lret
xor
jmp
mov
lods
sub
xchg
mov
push
je
jbe
cmp
inc
mov
and
mov
test
inc
jmp
jns
cmp
test
add
testb
pop
stos
push
jnp
mov
lds
push
xchg
jl
enter
inc
repnz
test
repz
mov
xchg
lds
incb
loopne
and
xor
or
in
icebp
lret
xchg
insb
inc
mov
push
repz
sti
xlat
lock
adc
adc
mov
loopew
mov
sbb
ljmp
adc
fsubr
jge
dec
dec
sub
dec
addr16
aaa
push
sbb
repnz
or
sbb
test
loope
jle
jbe
push
sbb
scas
cltd
sub
lret
insb
and
fwait
cmpsl
cltd
repz
cmp
dec
scas
jnp
lahf
data16
mov
outsl
out
jbe,pn
xor
and
ret
cmp
lret
sub
jne
scas
adc
jp
xchg
lcall
mov
rolb
xor
and
mov
mov
lods
hlt
adc
in
popa
outsl
xchg
inc
adc
repz
mov
fistpl
cmp
and
jmp
ja
lods
dec
in
pop
add
mov
mov
push
es
lods
pushf
cli
es
popa
xchg
push
lret
lods
mov
das
jnp
ret
ljmp
ret
adc
aam
inc
std
pushf
ds
fsubs
xchg
fnstsw
loop
push
xchg
push
cmc
inc
sti
pop
lods
inc
xor
arpl
pop
rorl
mov
aas
dec
cmp
loop
ss
xchg
cld
mov
mov
cmp
lret
dec
rorb
dec
push
inc
xchg
aaa
icebp
push
test
xlat
pop
jecxz
sbb
jge
sbbl
cmp
je
repz
jne
mov
jecxz
invd
stos
sub
cmp
jb
cmpsb
pop
lret
je
mov
push
shl
mov
testl
nop
adc
subb
in
bound
mov
scas
out
dec
inc
sbb
adc
es
push
mov
inc
pop
add
mov
fcomip
sub
ret
dec
cltd
jno
dec
bound
jbe
sbb
ljmp
xchg
xor
inc
shl
push
add
pop
ss
mov
in
mov
lret
stos
das
mov
insb
cmp
push
jae
sbb
mov
mov
jmp
push
and
stos
inc
pushf
into
jo
push
lahf
shl
xor
or
movsb
pushf
stc
jle
push
scas
dec
mov
outsb
mov
loop
jo
int3
out
push
nop
andl
cli
stos
das
outsb
aam
pusha
push
loope
jbe
sbb
insb
es
fcmovnb
xor
lret
mov
jp
and
fidivl
movl
out
inc
mov
daa
lds
xchg
sub
sbb
cld
into
add
and
sbb
jg
cmpsl
call
jno
add
add
fdivr
xchg
lahf
pop
into
dec
fidivrs
xor
fs
jmp
stos
adc
mov
cltd
sti
cs
lahf
mov
pop
ficompl
adc
xrelease
sbb
mov
ret
mov
daa
sbb
repnz
int
jp
add
push
jnp
dec
sbb
add
test
test
xor
rcl
sub
movsl
pushf
lcall
iret
jge
lock
or
loop
leave
ret
andl
xor
divl
sbb
xchg
fwait
jle
push
inc
sbb
cli
mov
cmpsb
pop
daa
jg
add
popl
add
insl
mov
loope
aam
cmpsl
lret
sbb
and
mov
shl
sbb
sarb
pop
jo
mov
dec
sar
insb
xor
cmp
fdivs
add
decl
fcomps
lds
loopne
sbb
push
lea
add
dec
popf
sbbl
stc
sbb
jle
adc
in
push
push
push
inc
or
fwait
pop
fiaddl
shr
fdivs
out
mov
push
xchg
xchg
std
cli
aas
in
insl
scas
pop
and
fdivs
leave
cmp
cmp
imul
in
aas
movsb
fs
xchg
sub
outsl
scas
dec
push
js
and
xchg
pop
repnz
and
jge
dec
mov
xchg
ret
push
mov
std
jno
ja
scas
pusha
add
push
xor
dec
outsb
mov
out
and
mov
stos
imul
clc
data16
int
xlat
cmp
push
mov
lahf
push
faddl
aam
add
adc
incl
bnd
rcr
push
pop
and
adc
jno
ss
aas
out
cmp
dec
cli
loopne
stos
subb
sbb
hlt
in
clc
shlb
enter
xor
enter
mov
sub
lcall
xchg
imulb
sbb
push
or
popa
cmp
xlat
adc
sub
call
test
push
bound
xor
and
repz
cmp
enter
or
rcl
sub
movsb
fadds
stos
lret
xlat
cmp
test
in
loopne
xorb
push
stc
lcall
sub
xchg
adc
pop
push
jnp
inc
add
cltd
push
mov
shrl
mov
test
mov
ljmp
ss
xchg
inc
cmp
icebp
negl
dec
pop
fsubr
and
and
movsl
je
lods
mov
jmp
call
adc
push
repnz
inc
push
sub
sbb
mov
ror
in
push
xor
jae
cwtl
push
push
enter
js
pop
movsl
std
mov
xchg
in
pop
fldl
fs
mov
push
imul
mov
xchg
inc
jne
dec
jmp
int
push
cmp
es
daa
repnz
xchg
mov
xchg
dec
imul
movl
jmp
sbb
jp
cmp
lret
dec
rclb
cmpb
negl
sub
jle
xor
les
ss
jae
movsb
mov
lea
sbb
sub
mov
push
mov
clc
and
pop
cs
lahf
or
jle
mov
jne
jb
sti
xchg
jae
mov
sbb
ret
leave
enter
push
shl
or
inc
in
scas
mov
scas
mov
in
js
out
out
stc
insb
push
xor
loope
lock
mov
in
fstl
cwtl
xchg
stos
push
fs
enter
and
test
mov
mov
shll
testl
xchg
and
dec
hlt
mov
or
sub
pop
xor
sti
cs
or
xchg
inc
push
imul
mov
nop
in
in
xchg
pop
pop
jae
mov
adc
adc
jl
sub
dec
cltd
mov
fwait
cs
shll
and
jne
xor
sbb
jmp
push
cmp
int
movsb
test
sbb
jo
movsb
mov
js
push
sub
lret
sub
into
mov
inc
and
push
jecxz
cmp
int
stos
add
mov
sbb
lods
mov
pop
ret
cmc
in
push
or
cmp
aad
test
cld
movsl
add
mov
loop
push
int3
pop
and
inc
mov
sbb
mov
pop
adc
pusha
mov
sbbl
sub
out
insl
pop
sbb
push
lcall
xor
aad
pop
fwait
addr16
cmpsl
push
or
adc
repnz
cmpsb
pop
sbb
mov
fldt
aaa
loopne
leave
outsb
pop
aad
mov
ret
loop
movsl
leave
loope
sub
push
sub
stos
xor
xchg
xchg
mov
mov
sbb
pop
inc
or
jne
ret
testb
addl
lahf
mov
xchg
xchg
push
ret
mov
inc
mov
lds
dec
add
jecxz
mov
sti
sub
mov
arpl
call
je
cld
mov
cmc
xorl
push
xor
or
jae
mov
stos
pushf
rcrb
mov
std
shr
cmpb
xor
sti
dec
cs
push
dec
sbb
ficompl
sbb
cltd
add
fstl
pop
mov
std
xor
jl
mov
jp
add
rcl
into
xor
inc
cld
les
sahf
test
sub
in
aam
call
test
cmpsb
xchg
stos
negb
dec
xor
cmp
mov
pop
ljmp
xor
cmp
fcompl
add
xchg
and
lds
mov
scas
sbb
cmp
repz
pop
mov
lcall
dec
js
xchg
jle
aas
icebp
or
pop
jae
je
or
push
pop
in
xor
fdivs
mov
bound
lcall
push
and
out
outsl
or
and
adc
cld
jmp
outsb
push
sub
pop
lret
dec
pop
inc
xchg
or
or
test
fiaddl
push
in
mov
out
sub
stos
ss
cmp
iret
dec
sub
inc
inc
mov
outsl
mov
sbb
fcmovnbe
and
lods
inc
sti
je
aas
scas
loop
xor
and
xchg
inc
xchg
clc
out
or
sbb
icebp
rcr
sub
push
pop
fmul
xchg
jb
mov
mov
cmpsl
pop
ficompl
lods
add
push
out
jbe
outsl
push
rcrb
add
out
mov
in
mov
das
fdivl
fldenv
cmpsl
add
nop
add
dec
dec
lret
or
jo
mov
mov
adc
jl
ds
or
rcrl
and
imulb
dec
mov
rclb
ffreep
mov
mov
add
mov
cmpsl
push
push
jle
ss
inc
fbld
loopne
dec
ja
and
sbb
rcll
push
sarl
jb
fistpl
add
ffree
pop
test
xor
sub
movsb
fidivs
sbb
cmp
push
inc
xlat
jmp
ret
outsl
push
es
jge
nop
cltd
xchg
inc
shr
stc
sub
lahf
test
xor
add
xchg
call
aas
frstor
loopne
int3
jae
or
add
arpl
shlb
ja
sti
mov
sub
or
adc
sub
push
xor
das
fdivrl
add
repz
enter
sbb
je
sub
push
cltd
mov
fwait
add
lock
mov
in
sub
jle
mov
test
out
mov
jbe
pop
push
fwait
pop
pop
adc
aam
lcall
ret
sbb
cmp
mov
int
sbb
mov
or
jecxz
mov
inc
fstpl
lahf
in
pop
add
fdivrl
mov
data16
or
push
mov
lret
mov
scas
jg
pop
mov
dec
subb
xor
pusha
dec
inc
jnp
sub
dec
sahf
lcall
iret
les
pop
sbb
ret
mov
and
inc
in
gs
add
dec
outsl
arpl
inc
jb
add
and
shl
push
cmc
bt
stc
mov
stc
pushf
cmp
mov
pushf
pushl
lea
jae
stc
cmp
bt
sub
movzbw
pusha
lea
jmp
pusha
push
jmp
add
inc
gs
outsb
jne
je
imul
and
lea
jne
clc
bts
movzbw
bsr
mov
test
add
test
pushf
pusha
pusha
movzwl
sub
bt
movzbw
jmp
lea
sets
movsbw
mov
cwtl
lahf
mov
jmp
std
das
decb
pop
add
fldenv
ret
push
jns
call
addl
out
or
test
pop
fdivr
push
addb
mov
fwait
sub
daa
sub
fwait
mov
das
enter
rcll
in
mov
sub
xorl
adc
or
jmp
sbb
mov
push
add
push
sbb
mov
out
jnp
sbb
bound
mov
jne
jnp
or
jns
or
mov
xor
xor
fcomps
ret
and
jecxz
popa
xor
pop
cmp
mov
mov
movsb
loop
mov
inc
mov
sub
adc
cmp
jp
lods
sbb
and
or
push
push
popa
push
daa
or
or
sub
leave
bound
mov
pop
dec
gs
adc
push
imul
sub
or
jecxz
pop
out
dec
mov
add
jmp
les
mov
and
or
addb
mov
lea
mov
mov
hlt
pop
ljmp
mov
shlb
mov
pop
std
push
ficomps
cmc
sub
push
pop
or
mov
shlb
xlat
push
or
add
loope
or
xchg
add
clc
xchg
mov
test
outsb
lcall
xchg
inc
xor
repz
es
cli
leave
loope
in
xchg
dec
push
dec
or
out
push
xor
aaa
mov
enter
xlat
add
in
push
jno
mov
dec
ret
sub
mov
mov
adc
mov
pop
adc
leave
xchg
jae
lcall
jl
pop
andl
femms
pushl
ja
cmp
push
pop
not
push
adc
shlb
add
gs
jg
mov
daa
pop
inc
imul
arpl
in
jecxz
std
outsl
rorb
movsl
daa
push
pop
inc
mov
pop
in
sbb
mov
xchg
testl
sub
cmp
mov
nop
mov
xchg
gs
addr16
arpl
cmp
fisubrs
sbb
aam
pmuludq
repnz
mov
arpl
dec
pop
sbb
pop
sti
bound
or
inc
push
aas
xor
cmp
cwtl
jbe
js
and
xchg
pop
push
lods
daa
rclb
fstpl
xchg
add
add
cmp
pop
js
add
cs
cmpsl
pop
sbb
outsl
fwait
mov
push
add
xor
lea
inc
mov
jae
push
stos
push
ret
and
mov
inc
stc
mov
fldenv
and
dec
sbb
paddsw
sti
mov
jae
movsl
cmc
mov
and
int
daa
and
outsb
jno
loopne
into
or
gs
pusha
xchg
mov
sub
cmp
mov
lret
inc
ficoms
nop
add
inc
or
icebp
jmp
sub
nop
aam
sarl
mov
subl
loop
adc
enter
xchg
or
nop
sti
aam
push
jns
cmpb
cmpsl
cmp
rolb
jo
mov
addr16
das
and
test
insl
out
sub
mov
mov
inc
and
movsl
divb
mov
in
pop
mov
insb
ret
xchg
sub
inc
mov
cmp
sbb
xchg
bound
sub
add
movsb
pop
dec
and
icebp
push
pop
jle
std
push
mov
cwtl
sbb
jg
pop
shlb
jl
push
insb
leave
xchg
push
lock
inc
dec
shrl
xlat
bound
sbb
push
xchg
pop
jnp
add
les
mov
adc
jge
dec
loopne
dec
jo
sbb
jo
int3
mov
js
push
dec
cmp
sti
popf
imul
movsl
sub
aaa
mov
aam
inc
xlat
pop
or
in
lret
adcl
push
dec
sti
ret
rclb
sub
xlat
fucomip
xchg
xchg
add
push
pop
jbe
shr
cmp
movsb
xchg
bound
outsb
jns
inc
add
pop
xor
fucomp
add
fbld
xchg
mov
imul
lret
push
xchg
push
cltd
and
das
push
mov
pop
clc
mov
inc
fisubrs
pop
xchg
in
les
jmp
or
or
sub
mov
xor
or
mov
aad
adc
cs
sub
xchg
xor
xchg
cmp
cmp
out
into
mov
push
cs
add
fsubrs
push
jno
fstps
test
lds
mov
xor
ljmp
sbb
scas
sbb
add
cmp
loopne
pop
push
xchg
mov
daa
mov
mov
mov
in
cwtl
cmp
mov
shll
sub
lahf
aad
jb
add
add
push
jno
cld
data16
adc
enter
std
jno
dec
sahf
in
mov
lods
dec
out
and
mov
icebp
xor
sub
dec
in
push
and
bound
orl
sahf
divb
jb
scas
jp
xor
lods
lea
inc
jbe,pn
inc
test
push
jge
mov
cmp
mov
loopne
adc
and
pop
leave
sbb
inc
push
sbbb
outsl
fisttps
lcall
aaa
fdivrs
cmp
outsl
sbb
shll
mov
push
pushf
fidivs
aad
push
imul
std
loop
xorb
cmp
decl
push
addl
pop
arpl
jge
sub
pop
push
clc
and
xlat
add
outsl
lahf
push
pop
out
push
mov
gs
mov
dec
push
out
cltd
addb
add
jl
adc
shl
jg
mov
sub
jno
jmp
fcmovb
std
enter
pop
inc
fadds
fdivrl
xor
mov
add
add
cwtl
cmp
roll
into
dec
xor
or
mov
stos
dec
mov
movsb
aam
jns
daa
fwait
sti
test
lcall
testl
cmc
cmpl
rol
ret
ret
mov
mov
mov
xor
cmp
jmp
stc
cld
xchg
sub
jno
std
cmp
aam
loope
test
scas
push
mov
std
sbb
add
pushl
bound
inc
jmp
adc
daa
enter
stos
in
mov
or
std
sub
xchg
and
loop
mov
mov
cmpl
ja
mov
sbbb
pop
into
jecxz
loope
inc
dec
nop
gs
push
sub
sti
adc
es
ret
out
inc
pop
movsl
fmull
jg
pop
mov
xor
divl
lret
aas
hlt
xchg
aaa
xchg
adc
lods
inc
adc
sar
push
sbb
fistps
inc
fs
mov
clc
xlat
adc
lock
adc
and
dec
dec
insl
lds
sub
mov
iret
push
pusha
sbb
imull
int3
lods
sbb
stos
xchg
jle
pop
dec
mov
cltd
dec
or
sub
jno
in
cvtps2pd
movsb
or
insl
mov
ljmp
ja
int3
xchg
daa
push
push
ret
add
bound
cwtl
js
daa
add
mov
inc
cmp
call
int3
mov
mov
add
adc
jle
jnp
mov
pop
mov
loop
xchg
pop
mov
or
xchg
adc
fdivr
pop
sbb
xor
hlt
outsb
pushf
in
pop
lea
jmp
pop
test
inc
mov
clc
loope
out
addr16
mov
mov
sbb
sbbb
cmc
push
mov
jecxz
xchg
mov
sub
adc
pop
data16
inc
pop
imul
sub
mov
notb
lds
jge
dec
imul
je
lock
mov
push
inc
out
adc
lock
shlb
sub
pop
fmulp
lret
adc
push
mov
and
addr16
push
push
outsl
xor
std
out
and
xor
push
push
cmp
adc
scas
jns
add
aam
repz
and
inc
sub
icebp
mov
into
rcrl
decl
test
adc
in
xor
push
in
xor
jb
mov
ljmp
xchg
nop
dec
push
inc
adc
mov
das
or
xchg
shrb
movsb
add
outsl
imul
int3
xlat
clc
imul
sbb
sbb
mull
xchg
push
mov
scas
test
mov
int
fbld
out
aam
mov
lcall
jmp
aaa
cmp
dec
add
mov
imul
xor
jge
fstpl
cmc
rolb
cmc
cmp
mov
inc
loop
mov
arpl
cmp
or
mov
push
cmp
or
fisubs
adcb
push
stos
repnz
jae
loopne
mov
pop
ret
cmpxchg
scas
subb
test
xchg
sub
divl
repz
add
scas
push
xor
repz
lret
jle
lock
inc
es
mov
sti
jne
ljmp
jbe
ljmp
sub
add
aas
das
cmp
lods
mov
call
mov
pop
jge
cltd
jmp
notb
out
fadd
and
jno
scas
sahf
aaa
cmp
pop
jb
inc
arpl
push
jge
daa
gs
and
fstps
lods
mov
mov
addl
pop
movsl
push
mov
in
jne
ds
cmp
daa
add
test
ret
fisubs
jne
ja
xor
shrl
out
mov
loope
fwait
lahf
cmp
jno
adc
cmp
inc
insl
iret
shll
fwait
enter
add
test
push
adcb
jge
out
and
lret
jae
shlb
dec
jp
aam
insl
shrb
mov
ret
jne
sub
je
into
xor
out
pop
inc
lret
inc
sub
add
pop
je
lods
push
outsl
repz
inc
jl
scas
in
dec
dec
mov
lcall
mov
stos
repnz
add
and
gs
loopne
or
pop
adc
mov
jnp
xchg
and
xor
nop
and
add
mov
movl
inc
jge
mov
jl
pusha
leave
dec
arpl
pop
nop
aad
mov
pop
jne
into
test
dec
testl
mov
push
xor
fistps
add
aas
std
or
data16
pusha
ss
inc
ja
sbb
jae
je
cmp
cmp
xchg
jo
ror
inc
ss
dec
inc
or
xor
clc
data16
pusha
mov
push
lcall
aam
add
in
insl
mov
or
insb
jecxz
mov
sub
adc
mov
movsl
mov
push
mov
mov
mov
and
iret
pop
sti
and
sbb
popw
fsubs
out
loopne
addr16
and
push
mov
sbb
xchg
inc
or
pop
add
rcrb
lret
mov
or
cltd
pop
nop
xchg
cmp
xchg
pop
shr
addr16
or
xchg
es
or
mov
xchg
shl
fistpl
push
mov
push
loop
pminsw
mov
sbb
iret
mov
mov
jecxz
outsl
push
inc
cmpsl
cmp
stc
sub
and
shlb
in
adc
sarl
pop
cwtl
lahf
push
add
repz
cvtps2pi
cmp
cmp
mov
clc
xchg
mov
scas
pushl
push
fildl
ret
add
into
ret
dec
add
dec
cmp
loopne
cmpb
shr
int3
lds
iret
cmpsl
and
push
jge
xor
push
jg
scas
push
les
sti
add
pop
inc
test
sahf
pushf
iret
cmp
mov
push
xchg
das
scas
repz
gs
jmp
filds
push
jne
xchg
lret
pop
xor
popa
inc
in
out
jl
or
dec
xor
sarb
xor
cmpsb
test
xchg
push
das
idivb
stc
or
rorb
ret
pop
aam
or
or
lods
lret
push
sub
and
fidivrs
sarb
cmp
pusha
mov
mov
repz
lods
repnz
sbb
lock
or
xchg
jne
jg
movsb
adc
in
insb
lahf
push
ds
push
movsb
inc
in
dec
mov
out
out
test
inc
dec
pop
dec
mov
xor
jb
adc
es
sbb
inc
ret
jle
xchg
ret
insl
fsubs
sub
jge
mov
cld
pop
mov
lods
cmp
pop
xchg
scas
and
dec
or
lock
repz
mov
mov
cwtl
and
add
mov
add
daa
add
aas
insb
or
leave
dec
mov
jl
pop
push
mov
jne
fildl
sbb
pop
int
jg
movsl
fmul
dec
add
fdivl
mov
sub
inc
daa
test
mov
sub
bound
fmuls
inc
insb
lcall
mov
mov
fldcw
inc
and
aad
xor
cmp
sbb
push
xorl
jae
push
fcoml
or
jae
xlat
jp
lods
xchg
mov
sarl
dec
xor
cli
sbb
lcall
pop
clc
inc
mov
fcoml
icebp
idivb
mov
jecxz
cltd
mov
sub
cmpb
outsb
cmp
in
ss
fistl
add
or
je
pop
xlat
push
jae
xor
fsubrs
pop
mov
ja
pop
cs
push
shl
popf
push
jp
ljmp
dec
xor
popa
jnp
push
adc
sub
nop
xor
and
out
xchg
jmp
test
sbb
fdivl
sahf
mov
push
iret
clc
push
add
sbb
divl
pop
push
iret
mov
jg
adc
lret
call
bound
test
mov
jno
cmp
out
dec
adc
mov
jns
std
and
push
aaa
mov
cmp
stos
mov
add
icebp
lods
add
repz
cmpsl
mov
or
mov
push
test
and
cmpsl
clc
jmp
mov
pop
pop
stos
or
mov
fisubl
sub
lret
cmp
dec
into
push
mov
mov
and
cmp
insl
cmc
jecxz
jecxz
mov
loope
sbb
subb
xchg
lods
rcrb
adc
jg
out
inc
ljmp
push
sub
leave
or
fwait
cwtd
insb
popa
xor
jecxz
fistps
cli
inc
adc
ljmp
mov
mov
cmpsl
stc
test
dec
or
stos
lret
pop
sbb
lods
pushf
in
mov
pop
leave
in
mov
add
pop
dec
push
addr16
jo
adc
push
adc
rcrb
xchg
dec
xchg
mov
push
jnp
fsub
push
test
repz
lea
xchg
inc
cltd
push
xcrypt-cfb
cmpsl
es
lods
jnp
enter
call
shll
adc
in
dec
loop
pop
in
loopne
gs
mov
aas
js
mov
dec
fnsave
cs
jecxz
sbb
sub
frstor
jb
sub
adc
mov
fstps
pop
pop
imull
or
dec
mov
test
leave
add
fisttpll
and
sub
add
lahf
fwait
cltd
jns
ret
push
test
and
aam
sbb
vmovaps
je
or
jbe
xor
lahf
cmp
mov
xor
add
clc
nop
inc
add
push
cli
sbb
out
mov
subl
cmpsl
inc
decl
lods
cli
movsl
sbb
fsubr
cmp
push
icebp
in
jle
mov
negl
loop
sub
adc
cmp
stc
and
jmp
bound
clc
sub
leave
and
cwtl
lahf
jmp
pop
xchg
pop
and
repnz
push
inc
test
sbb
dec
fwait
mov
cmc
mov
mov
in
movsl
aaa
push
out
mov
jmp
rorl
rclb
ficompl
pop
sti
cwtl
add
mov
repnz
in
scas
inc
inc
jb
or
dec
shlb
and
imul
lock
dec
adc
pop
xor
mov
ds
mov
sbb
push
mov
mov
daa
inc
enter
cmp
sbb
test
xor
adc
inc
clc
inc
jbe
pop
jno
in
cmp
fs
adc
aas
and
cmp
mov
pusha
stos
pop
into
sbb
cmpsl
addr16
das
pop
icebp
rcrb
sub
adc
pop
aad
gs
cmp
mov
mov
push
hlt
dec
ljmp
into
dec
jnp
mov
pop
loop
sarb
mov
jo
pop
cld
mov
leave
hlt
cmp
mov
sbb
cmc
mov
cmpsl
jecxz
lret
pusha
outsl
jno
lret
fs
xor
jo
jne
jmp
mov
mov
out
fdiv
mov
pushl
fisttpl
fdivrl
in
pop
xchg
xor
xchg
jno
add
aaa
mov
aam
jne
call
cmpsb
loop
and
push
ja
insb
stos
pop
xchg
xchg
enter
aas
mov
shll
ja
shll
inc
es
mov
lds
mov
fimull
xor
mov
jnp
arpl
int
push
cmp
xchg
mov
fs
sbb
mov
aad
lods
xchg
inc
movsl
cli
int
xchg
hlt
or
xor
add
and
sub
xor
ljmp
cmp
das
sub
xchg
cmp
xchg
xor
add
arpl
mov
cmp
cwtl
mov
add
dec
jb
rcr
mov
dec
je
xchg
insb
and
push
mov
mov
gs
gs
and
jbe
pop
push
and
pusha
pcmpgtw
ret
adc
and
mov
ret
push
cld
xor
fbstp
scas
int
ss
int
sbbb
jae
inc
call
lds
jae
ret
xchg
xchg
movsl
xchg
call
add
dec
lock
mov
mov
or
cmpsb
push
sahf
add
imul
mov
cltd
push
les
jge
test
arpl
out
aad
loopne
xchg
jecxz
std
sub
lds
xlat
adc
pop
inc
inc
mov
shrb
setg
sub
pandn
and
jo
popl
scas
fisubl
pop
scas
faddl
lret
shlb
into
aas
push
stos
push
dec
cltd
push
cld
xor
xor
mov
iret
mov
jb
popf
mov
push
repz
fsubrs
daa
arpl
lret
mov
int3
fimuls
push
out
lods
add
inc
sbb
pusha
lock
shlb
lods
mov
outsb
fisttpll
sub
sub
sub
jo
sbb
out
jns
dec
cmp
xor
test
xchg
pop
cmp
or
mov
test
cmp
popf
mov
mov
sub
popf
fdivs
movsl
mov
adc
or
and
sub
jmp
fwait
sbb
push
cltd
adc
or
sub
lretw
xchg
aam
int3
xor
sub
inc
mov
sub
or
mov
hlt
popf
dec
pop
cmp
xchg
push
leave
xlat
mov
lea
pop
mov
xchg
addl
movsl
imul
and
lods
lea
mov
movsbw
not
mov
mov
pushf
lods
pusha
push
pushf
movb
inc
cmc
mov
not
bt
xor
call
add
push
imul
jb
gs
aam
add
push
cmc
clc
clc
mov
push
cmp
jmp
lcall
out
jae
push
mov
addr16
outsl
fimull
in
and
and
dec
jp
dec
cmpsl
popf
mov
pop
lret
or
jl
bound
push
scas
cmpl
loope
ret
jge
rcll
xor
pop
out
xlat
mov
pop
test
mov
lock
push
sbb
popf
fmuls
leave
add
frstor
cmpl
mov
xor
popa
jecxz
leave
jae
cli
nop
int
jp
test
cmpl
in
mov
inc
inc
and
mov
mov
add
arpl
outsb
jne
popa
imul
add
pop
jmp
movw
movl
pushl
mov
lea
jmp
test
stc
shl
pusha
add
setno
not
cwtl
setb
lea
pushf
lea
call
cmc
add
cmc
cmpl
push
movw
push
movb
lea
jne
bswap
pop
not
cwtl
pop
pusha
mov
lahf
movzbw
bswap
lea
pushf
movl
jmp
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
cld
stc
xor
pusha
test
pusha
mov
pushl
call
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
add
add
imul
jae
dec
gs
outsl
jb
add
fdivs
addb
mov
leave
popf
add
xchg
lds
mov
adc
ss
insl
mov
and
int
and
rcl
fcomp
outsb
jne
mov
xchg
and
gs
xchg
mov
adc
mov
inc
test
sub
mov
int
out
mov
loope
les
das
lret
ja
or
and
sub
pusha
je
cmp
nop
inc
xor
aam
aam
adc
or
aad
test
add
jb
outsb
push
outsl
inc
insb
imul
bsf
xor
mov
pusha
cmpb
pushf
push
call
repnz
sti
popf
fcomps
fisubrs
sub
jbe
insb
push
mov
leave
arpl
hlt
add
outsl
iret
out
das
sbb
das
psllq
fwait
stos
jae
das
popa
mov
mov
stc
sahf
adcb
add
push
gs
js
gs
imul
gs
pushf
shr
pushf
push
adc
call
lcall
loop
es
into
push
stos
out
sub
jle
mov
rcrb
or
and
aam
mull
or
lret
adc
imul
jne
sbb
inc
mov
mov
mul
dec
sarl
adc
push
outsb
lock
xchg
imul
xor
adc
test
fistps
int3
xor
push
and
in
jo
push
sbb
jle
xchg
dec
pop
pop
mov
pop
push
inc
test
outsb
push
insl
shrl
xor
dec
insb
out
push
fsubl
jge
pandn
out
mov
test
dec
outsl
mov
pop
xor
lods
out
nop
shll
ss
xchg
loop
or
sub
dec
add
xchg
call
into
xchg
aam
push
mov
les
pop
insl
data16
popf
or
dec
mov
or
jmp
and
mov
pop
push
add
mov
or
insl
fnsave
xor
adc
pushl
or
cmp
mov
roll
and
and
clc
inc
mov
test
in
test
adc
inc
sbb
test
push
cmp
stc
jb
in
xchg
mov
pop
add
add
add
sbb
add
push
add
pop
pop
add
add
add
incb
add
sub
add
sbb
add
add
mov
add
adc
add
or
add
or
out
mov
pop
add
pop
add
mov
add
jmp
add
pop
add
sbb
add
pop
add
repnz
add
mov
add
pop
add
and
add
incl
add
cmp
add
add
add
sub
add
cmpsl
push
add
out
add
pop
add
pop
add
add
add
or
add
or
add
rolb
add
push
add
or
add
or
scas
add
add
sbb
add
pop
add
mov
add
or
add
jmp
add
push
or
push
incb
add
pop
add
push
add
pop
add
push
add
mov
add
or
shl
add
adc
add
sub
add
and
add
cmc
pop
add
add
add
adc
push
add
push
or
clc
cmp
add
xor
add
and
add
fildl
add
pop
or
sub
pop
add
sub
add
mov
add
cmpsb
or
add
sbb
pop
add
and
push
add
in
push
add
pushf
push
add
cli
pop
add
sti
push
add
mov
push
add
or
xor
add
rolb
add
add
add
or
repnz
add
adc
add
pop
or
pop
or
add
or
push
repz
add
pushf
push
add
fldl
add
pop
add
push
add
cmpsl
push
add
push
or
cmp
push
add
or
add
popf
push
add
mov
add
or
add
adc
add
add
add
add
push
add
popf
push
add
adc
add
out
pop
add
mov
add
sub
add
add
xor
add
add
add
or
add
test
add
mov
add
sub
add
or
sbb
add
pop
add
fildl
add
out
add
cmpsl
push
add
add
add
repnz
add
lahf
push
add
aam
add
pop
add
mov
or
jl
pop
add
add
push
add
push
add
fldl
add
add
adc
add
in
push
add
pop
add
pop
add
push
or
cmp
add
fiaddl
add
or
add
add
lods
pop
or
dec
sub
add
sub
add
fldl
add
sub
add
sub
add
push
add
pop
add
push
or
add
add
inc
repz
add
jmp
add
or
jl
push
add
incb
add
mov
pop
add
add
add
and
add
pop
add
or
repz
add
add
add
or
add
or
add
and
add
sub
add
clc
push
add
pop
add
add
add
add
add
add
add
push
add
mov
add
repz
push
movl
jno
push
pusha
movl
pusha
push
pushf
pushl
lea
jmp
add
mov
call
add
pop
ret
add
push
gs
jne
jae
jb
lea
ja
shr
cmc
sub
push
xor
sub
add
sbb
mov
and
adc
jmp
add
inc
outsb
popa
bound
imul
add
gs
inc
imul
cmc
popf
fdivs
push
data16
and
pop
fs
dec
ds
add
fists
adcb
into
ss
push
mov
push
int3
stos
push
or
add
lock
inc
std
out
xchg
pushl
jp
div
fidivrs
xor
pop
sub
mov
popf
fcomps
and
cld
pop
rorb
int3
or
add
lock
out
sti
xchg
pushl
orb
lods
in
inc
adc
push
fmulp
and
and
inc
push
mov
aaa
lret
out
in
inc
or
push
sub
push
mov
jbe
xchg
mov
data16
inc
hlt
pop
outsl
daa
sub
push
jb
jp
cmpsl
jg
sub
daa
sbb
sti
and
outsl
ljmp
jbe
movsb
ret
fcmovb
sahf
jb
pop
inc
or
mov
int
iret
daa
movsl
imul
mov
adc
jns
mov
cmp
cmc
call
test
call
neg
mov
call
xchg
inc
add
popf
fdiv
mov
jae
cmp
pop
xchg
cmp
das
push
aam
into
int
mov
jecxz
jmp
mov
ficoms
xchg
adc
push
add
dec
sbb
push
mov
daa
or
rcl
into
nop
jp
jp
mov
cli
sub
std
loope
mov
insb
shrl
mov
lahf
stc
rcll
inc
repnz
fmuls
bound
stos
push
jb
push
mov
aam
into
push
xor
inc
ss
xor
fsubr
call
xor
pop
cvtpi2ps
adc
sbb
adc
jp
sub
inc
leave
pop
xchg
cld
inc
jl
dec
sbb
enter
rorb
call
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
add
gs
je
push
outsl
insb
imul
add
inc
gs
imul
outsb
addr16
add
jne
jmp
add
inc
jb
popa
je
push
imul
popa
je
outsl
outsb
inc
add
fistl
add
stc
bt
jmp
movl
call
add
dec
jae
imul
fs
call
ror
pusha
or
shl
mov
jmp
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
cmp
repz
fmuls
xchg
icebp
xor
push
vpunpckhbw
aam
clc
lcall
ljmp
pop
mov
jns
shrl
fcmovnbe
mov
mov
mov
les
mov
fisubl
add
mov
pop
mov
cltd
icebp
xchg
and
pop
xor
loopne
pop
xor
adc
sub
pop
fisubl
push
sbbl
inc
xlat
lds
sub
and
bound
sahf
push
adc
aam
or
add
adc
cmpsl
test
jae
and
mov
cmp
das
out
pop
popa
leave
adc
pusha
test
sub
arpl
mov
imul
mov
mov
divb
xorb
pop
rolb
mov
mov
popf
fadds
xlat
xlat
mov
rol
ja
pop
xor
add
aad
loopne
scas
subl
in
in
sub
repz
lods
mov
and
rclb
mov
add
scas
mov
jo
shlb
push
orb
pop
sub
dec
pop
pop
scas
in
mov
mov
dec
lret
xor
ret
subb
mov
outsl
scas
iret
xchg
xchg
push
aas
repnz
adc
xorb
fidivrl
ss
push
repnz
iret
decb
shlb
call
btr
aam
pusha
and
rcl
mov
movb
call
add
lret
jmp
add
add
add
add
add
add
add
push
add
add
add
add
in
adcb
dec
lret
and
pop
jo
sbb
les
xchg
pop
push
push
gs
pop
pop
aad
cmpsb
nop
cmpsb
xor
scas
fidivl
jo
xorl
test
dec
mov
dec
loop
cltd
and
dec
es
aad
and
mov
cmp
mov
mov
lds
lret
add
fsubr
xchg
imul
add
pop
sbb
xchg
popf
movsb
add
sub
icebp
cmp
je
dec
rolb
icebp
or
push
loope
jae
std
scas
jl
push
push
sbb
or
mov
mov
pushf
outsb
mov
dec
push
fwait
xchg
push
orl
cs
jo
fimuls
add
xor
or
test
aaa
dec
add
jbe
mov
aas
adc
loop
adc
mov
sbb
leave
out
adc
pop
icebp
push
mov
ss
out
inc
daa
ja
repnz
outsb
cld
arpl
sbb
pop
push
mov
cmpsl
ret
insb
push
sub
ficomps
or
xchg
mov
mov
movsb
imul
arpl
jmp
add
lds
adc
stos
lods
cmp
sahf
push
fcomp
xchg
repnz
and
bound
cmp
push
fwait
rolb
pop
xchg
dec
cmp
fsubrp
jb
cld
jg
sbb
xchg
adc
insl
push
shl
mov
pop
leave
lret
pop
push
jle
out
lock
xchg
adc
ret
adc
dec
das
mov
mov
imul
dec
jns
or
xor
in
getsec
pop
sahf
inc
inc
pop
into
push
mov
xor
aaa
sti
fsubp
movsl
fdiv
dec
shrb
and
sub
scas
iret
movsb
mov
mov
jno
lahf
and
inc
and
adc
je
pop
and
adc
pop
mov
ja
xchg
push
cltd
aas
sub
out
mov
cmpb
add
das
leave
push
or
in
xchg
cld
test
sbb
push
sahf
dec
mov
stos
lcall
orb
into
dec
jns
mov
enter
scas
lea
movsl
cmp
ss
pusha
andl
add
ja
fidivrs
or
js
jg
or
adc
and
movb
pop
shl
mov
sahf
jmp
adc
xchg
jne
insb
add
ss
neg
shrb
mov
push
mov
sub
xchg
jp
sbb
mov
or
ss
xchg
dec
jge
xor
xlat
dec
frstor
and
cmp
mov
das
jbe
pop
push
aam
adc
jecxz
arpl
push
xor
sub
and
cmp
clc
into
and
pop
test
push
test
lock
hlt
sti
arpl
add
add
push
lea
pop
inc
divb
icebp
lret
mov
lds
lret
call
pop
gs
mov
pushf
cmc
and
orl
rcl
ret
mov
mov
inc
push
mov
jne
sub
mov
push
insb
jge
inc
mov
adc
sub
fdivl
into
mov
daa
push
cmpsb
rep
enter
stc
test
jge
shlb
test
pop
or
add
push
pop
int3
push
adc
dec
sub
sahf
mov
sub
je
mov
sub
or
dec
sbb
outsl
sub
sub
pushf
das
push
nop
lods
shlb
cmp
movsb
mov
insl
cmpsl
sbbl
lcall
data16
das
xor
inc
mov
mov
lret
stos
shl
lahf
push
pusha
lret
and
movsb
mov
pop
sbbl
and
jbe
loope
mov
sar
mov
push
rclb
js
or
and
fisubs
out
lock
popa
jnp
faddp
mov
push
mov
imul
loopne
xorl
adcl
ss
test
call
or
push
movsl
cmpsl
add
mov
cli
fildl
mov
lock
stc
ss
lods
lods
mulb
les
icebp
iret
dec
or
in
jge
fildll
mov
shll
das
stos
cmp
loopne
pop
or
or
ds
add
into
es
cmc
rorb
mov
mov
cs
cmp
add
sbb
and
pop
inc
sbb
mov
push
push
mov
lahf
int
gs
mov
fwait
imul
mov
clc
out
jecxz
test
mov
andb
into
xchg
or
lahf
gs
testb
nop
das
sub
dec
sbb
rorb
mov
sub
int3
cmp
out
or
out
cs
pusha
mov
pop
add
mov
rclb
fisttps
outsl
adc
or
jle
mov
jbe
scas
pop
clc
xchg
push
sub
andb
and
out
imul
or
nop
sahf
push
leave
mov
push
stos
scas
pop
pop
out
dec
add
push
cmovne
sbb
mov
pop
int3
lea
test
mov
fidivrl
jbe
lock
fldlg2
bound
push
xor
imul
leave
insb
das
sbb
adc
subl
jae
mov
xor
outsl
movsl
jecxz
outsl
popf
mov
out
lcall
cmp
sbb
push
enter
mov
les
fs
lcall
cli
and
je
pusha
stos
insb
push
nop
cmp
cmpsl
pusha
das
cwtl
lret
enter
cmpsl
rclb
mov
clc
movsl
or
xor
fnstenv
or
pop
ror
inc
mov
ret
dec
sbb
test
std
or
lahf
fildll
daa
pop
shll
xor
subb
rcrl
loopne
mov
sub
and
ret
loopne
lret
jmp
adc
clc
fdivrs
mov
jmp
jmp
xchg
push
jge
pop
jge
rclb
inc
inc
data16
sub
jo
lret
je
hlt
pop
je
dec
ficomps
and
scas
insb
imul
cmovge
aad
in
inc
cmp
imul
pop
inc
inc
rclb
add
cli
aaa
repz
mov
shr
add
mov
call
inc
js
popa
out
je
mov
call
inc
jb
push
lods
enter
dec
pop
mov
filds
enter
jge
pop
mov
xabort
enter
arpl
mov
inc
sarl
ss
inc
inc
rcll
fisttpl
cmp
cmc
ret
and
mov
jbe
int
mov
dec
aad
sub
in
repnz
test
mov
mov
dec
sub
call
mov
jg
sbb
dec
xor
pop
push
andl
outsb
jge
mov
push
iret
mov
loopne
mov
frstor
lods
mov
cs
hlt
es
or
ret
aaa
shll
xor
mov
lahf
in
mov
mov
mov
dec
dec
int
cmp
testb
movsl
mov
bsr
push
jmp
add
orb
inc
icebp
xchg
rclb
jne
fisttpll
lock
cli
cmc
imul
xchg
push
jg
rorb
mov
push
fmull
jge
sub
mov
out
or
jo
sub
sub
mov
push
push
cwtl
push
cmp
mov
xor
and
adc
adc
inc
shll
push
out
xchg
pop
sub
ret
push
insl
ljmp
adc
in
jb
and
jp,pt
sbb
jo
fsubs
add
adc
call
loope
call
iret
xor
sar
and
std
jecxz
xor
jo
add
mov
iret
dec
repz
mov
test
jg
dec
xor
data16
sbbb
jns
inc
addb
aas
vpmacssdd
stos
cmp
cld
adc
mov
lret
fs
push
sub
jg
je
dec
out
or
pop
sahf
iret
cmc
jb
adc
jl
pusha
xor
add
jle
fcoml
gs
xlat
xorl
and
cmp
addr16
dec
sbb
call
sbb
adc
xchg
mov
push
push
and
rol
push
pusha
fistps
addr16
pop
fidivl
add
les
push
in
or
test
data16
jcxz
sbb
xchg
leave
pop
aam
fisubrs
bound
fadds
out
cmc
stos
xchg
fmull
mov
ret
cmp
dec
jp
or
das
cli
outsb
push
mov
repnz
sub
loopne
mov
mov
mov
iret
mov
dec
push
mov
lea
mov
cmc
push
sti
fimull
cs
pop
gs
and
sbb
insl
jb
lds
popf
dec
add
loop
out
inc
cmp
fisttps
fs
sub
ficoml
ror
fwait
xchg
dec
andb
mov
std
movsb
inc
loopne
jnp
pop
es
sbb
cld
lods
and
pusha
inc
je
test
pop
cld
mov
insl
or
or
push
jb
jle
fcomp
cs
push
cwtl
jne
xchg
fisubl
or
ja
jmp
xchg
arpl
mov
cs
mov
xchg
xorl
clc
lea
xor
and
inc
lock
pushf
dec
dec
push
and
push
lret
cmp
divl
inc
pop
pop
add
dec
mov
test
fnstcw
xchg
je
jmp
movsb
sub
mov
mov
mov
push
sarb
sub
outsl
lods
xchg
fs
bound
dec
daa
enter
push
jo
jg
push
and
lahf
mov
into
mov
test
cmp
xchg
popa
loopew
push
outsb
xchg
mov
out
stc
decb
dec
clc
push
rcl
push
xchg
xor
jp
mov
std
push
push
loopne
dec
mov
scas
xchg
cmp
repnz
stos
daa
in
pop
scas
insl
dec
call
add
lret
test
into
mov
add
jb
stos
mov
xchg
cmp
inc
mov
loopne
or
mov
mov
enter
pop
inc
pushf
and
jge
fsubs
lahf
pop
xchg
mov
add
dec
fimuls
pop
xchg
fcomps
imul
jle
rcl
mov
test
push
subl
pop
sub
lock
pop
ret
jl
pop
jns
enter
mov
mov
dec
mov
ret
add
add
mov
pop
push
lea
call
jp
push
cmc
cmp
push
mov
pushf
sbb
test
call
cmc
cmp
call
pushf
lea
jb
movsbw
mov
add
shl
stc
and
not
xor
push
mov
test
stc
or
add
lahf
pushf
movzbl
pushf
setb
pushf
pushl
setg
movsbw
lea
mov
pushf
lea
call
pusha
pushf
pushf
mov
adc
pushl
movb
pushl
lea
jmp
clc
cmpb
pushf
pushf
call
add
push
gs
jo
outsb
dec
gs
js
add
jp
add
je
add
adc
or
add
stc
setns
sub
add
shr
bts
shrd
or
mov
cmp
clc
ror
not
add
shl
adc
add
pusha
mov
cmp
shr
cmc
cmp
mov
jmp
mov
movb
lea
jmp
add
push
gs
imul
outsl
outsl
imul
add
pop
or
cmp
call
pusha
lea
jae
jmp
jmp
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
inc
and
shl
mov
movl
movw
pusha
movb
pushf
lea
jmp
lea
ret
popf
fadds
pushf
add
push
pusha
int3
adc
ljmp
mov
jo
xor
popa
leave
fwait
fs
mov
and
in
jo
out
inc
push
mov
add
mov
mov
mov
je
and
jp
push
stc
lds
pop
out
push
ds
test
or
loope
lea
inc
cmp
stc
mov
es
call
and
jae
pusha
bswap
bswap
mov
call
push
pushf
pusha
lea
jne
push
pusha
mov
mov
lea
jmp
lea
ja
movsbw
movzbw
pop
jmp
pusha
cmp
cmp
pusha
push
lea
jb
inc
mov
sar
not
bt
or
inc
stc
mov
inc
or
add
not
mov
cwtl
call
add
inc
gs
gs
inc
inc
add
je
add
rorb
jmp
push
rcrb
incb
lock
lcall
bt
sub
pushf
bt
bt
shl
jmp
push
jmp
push
lea
jae
bt
pushf
jmp
popf
cpuid
nop
pushf
call
cmp
call
movl
jmp
pushf
jmp
ljmp
sub
in
fisubrl
mov
in
mov
dec
mov
jno
dec
mov
dec
sub
icebp
int
mov
sbb
push
sbb
addb
decl
mov
bswap
cmp
setp
setl
lahf
mov
mov
jmp
jnp
loop
popf
fsubs
add
test
pop
push
aaa
test
sbb
iret
aaa
stos
mov
inc
clc
xor
das
pop
pop
or
das
mov
or
leave
cld
testb
lock
aam
sbb
or
cs
inc
cli
lret
push
call
scas
sub
push
jbe
mov
nop
hlt
dec
dec
mov
cmp
jno
call
jge
das
mov
pushf
jge
pop
jns
int
xchg
jne
sub
insl
xor
clc
and
iret
iret
test
loop
jns
inc
and
jo
jo
pushf
pushf
push
pushf
lea
jmp
mov
fcom
sub
cmc
push
fstpl
mov
pop
arpl
pushl
sbb
xor
sti
movsb
pop
sub
push
stc
notl
std
int
adcl
in
stos
pop
call
and
popf
fsubrs
test
insl
cmc
cmp
shll
sub
into
mov
or
lods
xor
dec
mov
push
scas
and
sbb
das
mov
and
mov
inc
and
sbb
add
push
jnp
cmp
scas
mov
sarl
addb
ja
push
pushl
not
cli
mov
movsb
mov
cmp
loopne
xchg
int3
enter
add
icebp
rcrl
mov
iret
and
jb
pusha
in
mov
ficoml
sub
push
mov
or
aaa
mov
loopne
shrd
and
xor
push
push
scas
ss
jp
inc
mov
dec
cmp
sbb
stc
std
leave
jae
fnsave
jno
data16
inc
and
cli
mov
ljmp
testb
add
pop
cltd
lahf
popf
xchg
cltd
sbb
clc
add
xor
fistps
jb,pn
std
test
loop
enter
in
jmp
inc
insb
repnz
daa
sub
pop
shrl
sbb
xchg
dec
xchg
cmp
pop
aas
sbb
ret
scas
fwait
outsl
inc
pop
clc
inc
jmp
and
fadds
outsb
ret
ss
lcall
das
clc
rolb
fdivp
std
add
fstpl
in
cmp
cmpl
in
cmp
es
out
fnsave
test
dec
and
sub
push
insl
push
jl
repz
call
push
rorl
xor
xchg
outsb
nop
fs
push
add
sub
sbb
gs
aad
outsl
dec
test
cmpsb
push
inc
dec
fisubs
cli
mov
sahf
lods
nop
fiadds
loopne
sbb
cld
movb
lea
jne
xor
test
mov
push
clc
bt
or
push
pushl
call
call
stc
cmc
bt
xor
call
add
inc
gs
imul
push
jo
arpl
js
add
inc
aam
lahf
rorb
mov
push
lea
call
clc
jbe
bt
push
pusha
pusha
push
mov
jmp
call
cmp
call
mov
mov
movb
movb
mov
movb
lea
jmp
lea
call
push
lea
ja
pushf
pushf
lea
jne
not
pusha
pusha
mov
mov
pushf
mov
pushf
lea
jmp
lods
ja
fstpl
add
push
mov
jo
loopne
xchg
add
push
call
and
inc
popa
cmp
pop
fwait
sti
inc
push
jecxz
mov
mov
xor
xor
mov
add
pop
pusha
dec
cmp
aam
add
inc
outsl
jo
inc
imul
sbb
test
out
push
xor
mov
add
sub
fstpl
in
inc
add
pop
add
jl
mov
jp
pop
xchg
fistl
faddl
into
xor
lcall
inc
and
pop
dec
add
sbb
sbb
pop
dec
int
pop
addr16
call
movsl
scas
sub
iret
or
mov
mov
into
out
out
into
jmp
in
dec
fcmovb
mov
ja
jge
pop
mov
andl
mov
sbb
xor
adc
fsubrl
or
scas
ljmp
pop
out
iret
fwait
arpl
pop
out
jmp
imul
mov
xlat
ficompl
sub
es
cs
cmc
mov
sbb
dec
pusha
test
ss
add
and
lcall
and
inc
sbb
mull
data16
cmp
fsubrs
hlt
shrb
add
insb
cmc
sbb
push
adc
icebp
dec
ss
fdivs
iret
sub
dec
dec
sbb
je
test
push
push
movsl
ret
xchg
out
sti
mov
jae
imull
xlat
xor
loop
popf
fdivs
mov
outsl
xchg
scas
lahf
cmova
push
aad
hlt
das
jecxz
xchg
gs
sahf
mov
mov
aad
and
out
push
aaa
mov
mov
mov
sar
xchg
stos
or
hlt
les
ljmp
enter
and
add
cli
fucomp
dec
pop
xor
xchg
insl
mov
call
mov
push
xor
rol
mov
jp
dec
scas
push
sbb
icebp
pop
rolb
push
int
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
test
sub
popf
fsubs
stc
popa
shrl
leave
mov
pop
adc
dec
ret
mov
cmp
and
dec
pop
sbb
ffreep
jnp
xor
out
jecxz
mov
lcall
pop
lea
jae
movsbw
cwtl
cwtl
xchg
cwtl
mov
mov
xchg
cltd
lahf
pop
movsbl
lahf
lea
call
add
dec
outsl
popa
fs
arpl
inc
add
jge
add
add
inc
gs
jae
outsb
arpl
jns
je
je
add
ret
stos
call
push
test
bt
rcl
push
shrd
stc
push
neg
push
bsf
stc
movsbw
push
bswap
cmc
dec
mov
xor
clc
mov
movsbw
mov
push
cmc
clc
or
pushf
pusha
lea
je
call
xor
fcomp
inc
lods
fcoml
mov
dec
int3
adc
fwait
outsl
cmpsb
jl
push
pop
and
pop
gs
into
rorb
in
mov
xchg
sbb
test
mov
jnp
mov
mov
mov
mov
test
mov
scas
imul
int3
add
hlt
movb
popf
fcom
sub
aaa
add
and
testl
jle
xchg
xlat
dec
sbb
fistpl
mov
add
pop
jns
aas
xchg
lret
push
das
push
xchg
les
ds
push
rclb
test
xor
outsl
inc
out
leave
push
loop
push
inc
mov
movsb
stos
mov
jg
jge
test
sarl
adc
orl
iret
rcrb
jns
mov
lahf
fstps
and
lods
add
fildll
popa
inc
mull
and
jl
sbb
cmp
and
xchg
cli
adc
scas
sbb
mov
cmp
jl
nop
xlat
lods
adc
repnz
jge
mov
popf
adc
lods
ja
jg
or
sbb
push
jge
mov
push
lea
sub
sub
out
lods
mov
mov
inc
lahf
movb
iret
mov
inc
dec
and
cli
out
mov
inc
sbb
aam
or
popf
mov
and
jb
test
movzbl
movzbw
cmp
sbb
shr
jmp
bt
sub
jmp
movzbw
cmc
push
imul
bts
lea
sub
mov
jmp
add
push
gs
outsl
arpl
add
fs
call
xor
add
cmp
lahf
shl
bsr
pop
das
aam
cmc
shld
pop
stc
cmp
jmp
add
pop
ja
insb
outsl
jae
add
xchg
xchg
cmpsl
call
lcall
icebp
popf
fdivrs
cmpsb
adc
push
cmp
push
lret
test
xor
mov
adc
fs
jg
in
mov
loope
negl
jnp
jmp
out
mov
sbb
or
loopne
jae
hlt
movb
fwait
jg
arpl
psubq
mov
lahf
imul
cmp
clc
fisubl
jecxz
rol
or
mov
push
and
pushl
push
add
movb
lea
jmp
bswap
mov
push
mov
mov
xchg
jmp
jo
mov
popf
fmul
dec
mov
jne
fnstsw
andl
iret
cmovbe
sbb
lods
or
dec
dec
jno
cmp
outsb
insb
cmp
cs
loope
and
pop
or
xchg
jae
addb
daa
pop
ret
insb
xchg
fnsave
add
loope
imul
inc
sbb
test
xor
lds
fdivl
add
jmp
out
fdivs
popf
fsubrs
push
dec
lcall
cmc
addr16
cmp
mov
aaa
adc
ficoms
jmp
out
fwait
sti
scas
adc
adc
adc
lods
dec
dec
and
stc
movsl
lods
cs
sar
cmp
outsl
sbb
nop
inc
adc
imul
mov
sbb
lods
incb
loope
rcrb
divb
sbb
lods
call
cli
sub
cmp
jle
ljmp
repz
out
adc
std
icebp
xlat
pop
in
addl
cmpsl
in
les
jnp
ja
popf
rorl
mov
aaa
xor
xor
mov
shll
and
xlat
mov
inc
decl
add
call
setb
rep
not
xchg
pop
mov
mov
pushf
xchg
mov
not
push
mov
jmp
str
jmp
mov
lea
sub
call
push
pushf
movl
movl
call
add
pushf
lea
jmp
mov
pushf
test
test
mov
jmp
call
xchg
jmp
mov
call
pusha
lea
call
test
cmp
call
movb
movzbl
pop
mov
mov
pushf
cwtl
lea
mov
call
mov
mov
rolb
incb
shlb
jbe
rcr
or
dec
jo
xchg
sub
std
adc
jg
add
imul
jae
addr16
add
mov
das
test
and
jns
mov
clc
shrb
add
cli
add
incb
pushw
shrb
cmp
mov
pop
divb
jae
pusha
pop
scas
adc
rcl
ret
xorl
out
aaa
aas
daa
sub
sub
fdivr
out
adc
xor
fdivp
push
or
stos
xor
pop
or
or
jo
sbb
inc
mov
mov
int3
mov
cmp
cli
add
imul
fstpl
adc
xor
sbb
addr16
gs
cmp
in
dec
test
xchg
orb
lds
clc
lret
lret
jbe
aam
scas
adc
lret
push
dec
imul
aas
or
outsl
jg
inc
xor
pushf
repnz
and
pushl
popl
movb
push
pushf
pushl
ret
pushf
call
add
inc
gs
jne
dec
outsb
jne
pushf
movl
push
movl
pusha
lea
jmp
pusha
movl
movb
mov
lea
jmp
mov
fdivrs
mov
sub
mov
cmp
pop
subb
cmp
add
xchg
mov
dec
mov
mov
movsb
mov
xor
mull
pop
call
push
cli
hlt
pushf
lea
jne
jmp
in
push
jmp
add
inc
gs
insb
addr16
je
insl
add
fs
call
pusha
lea
jb
bts
rcr
stc
cmp
movzbl
sbb
pusha
lea
pop
pushl
push
mov
push
not
jmp
bt
stc
or
jmp
rcr
bt
add
adc
mov
pusha
call
add
dec
jae
bound
addr16
jb
jae
outsb
je
add
push
gs
popa
outsb
fs
gs
outsl
jne
je
in
fmulp
rcrb
cltd
int
mov
jno
xchg
push
jno
pop
mov
sbb
add
jae,pt
test
cmpsb
lahf
lods
outsl
pop
in
ficoml
dec
loop
inc
sbb
inc
mov
mov
outsb
into
mov
dec
out
dec
mov
mov
pop
push
imul
sar
jbe
mov
xchg
scas
or
and
xchg
lea
int
leave
test
stos
xchg
add
mov
xor
iret
scas
std
or
gs
outsb
jne
push
popa
insb
jne
inc
add
xor
add
lea
pushl
popl
bswap
call
pushf
or
mov
jmp
pushf
lea
call
call
pusha
lea
jne
pushf
mov
pusha
pushf
pushf
pushf
lea
jmp
mov
lea
jbe
bts
mov
bswap
lea
rcr
add
sub
sub
btr
sbb
mov
test
rcr
xor
and
add
rcl
cmc
bt
adc
movl
shld
cmp
mov
bsr
mov
stc
jmp
pushf
test
setae
mov
not
mov
pushf
pusha
jmp
call
add
inc
gs
outsl
fs
gs
imul
add
xor
call
call
jmp
add
inc
insb
jne
push
inc
jne
data16
add
sbb
dec
movsb
aam
inc
mov
pusha
nop
sbb
fs
sub
mov
addr16
popa
sub
bound
std
bound
imul
xor
or
xor
mov
ss
xchg
ds
lods
inc
sbb
out
shll
xchg
lock
cmp
xlat
xchg
stos
imul
psubsw
inc
iret
and
jl
jl
add
les
mov
ss
pop
xchg
lahf
pop
arpl
bswap
fwait
jae
inc
adc
subl
pushf
jmp
pusha
jmp
lahf
push
shl
setae
cwtl
clc
mov
neg
test
cwtl
sub
or
not
push
btr
rol
shld
movsbw
push
rcr
test
push
shl
bt
push
add
bswap
bsf
lea
mov
call
pusha
lea
jp
pushf
lea
call
pushf
lea
jb
shr
cmp
pusha
bswap
jmp
xor
cmp
bt
sub
test
clc
jmp
pushf
pusha
lea
jmp
jmp
mov
pushf
push
jmp
movl
pusha
lea
jmp
add
inc
gs
inc
push
add
fcoms
repz
push
cmp
scas
or
out
xchg
mov
ja
cwtl
cld
push
sub
add
movsl
stc
addb
inc
pop
jmp
mov
fldt
repz
dec
aaa
dec
dec
xor
push
sbbb
mov
or
xor
enter
das
pushf
fmul
sbb
cld
or
jecxz
inc
outsl
scas
dec
clc
push
mov
popf
rcr
out
fimull
outsb
loop
pop
out
ret
sbb
sti
lods
sbb
imul
insb
xchg
push
or
mov
jmp
adc
cmp
push
inc
cmpsl
add
jo
sbb
lock
xor
out
or
mov
pop
sbb
roll
push
and
push
xlat
mov
cmp
cs
aas
rol
fstpt
add
fldl
adc
push
cmp
pop
das
test
sbbb
jg
cltd
stos
je
repnz
mov
adc
inc
push
push
aas
mov
dec
pop
sti
decl
xchg
shr
insb
cld
jb
sbb
add
jo
je
push
popa
addr16
add
add
je
imul
js
dec
outsb
addr16
inc
add
add
push
popa
imul
inc
jb
outsl
jb
lea
jb
bsr
mov
stc
dec
not
mov
pusha
shl
pusha
call
add
push
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
and
push
mov
push
pushl
ret
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
and
pop
testb
mov
cwtl
in
cmc
pusha
call
push
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
inc
gs
popa
jae
inc
jb
outsl
jb
add
dec
outsl
popa
fs
imul
add
add
push
imul
jae
bound
clc
call
pushf
movsbw
mov
pop
jmp
mov
lea
jb
bt
cmp
cmp
call
pushf
movl
pusha
mov
movl
mov
push
pushf
lea
jmp
shl
mov
clc
cmp
mov
clc
add
mov
cmc
bt
cmc
mov
cmp
stc
stc
test
mov
pushf
lea
je
clc
bt
pusha
stc
add
clc
mov
cmc
stc
cmp
pusha
call
pop
push
mov
out
xor
xlat
das
scas
sub
ss
push
or
fs
cs
pushf
sub
xchg
xchg
mov
subl
mov
movb
dec
jbe
xor
or
sbb
in
or
jle
movsl
xchg
leave
rorl
movsl
daa
nop
int3
xor
scas
orl
push
inc
adc
rol
int
iret
scas
xchg
imul
mov
mov
int
cltd
dec
aad
pop
pop
jno
and
mov
outsb
aam
insb
dec
add
fidivrl
mov
pusha
mov
data16
cmp
cmp
lds
movsl
mov
cmpsl
xchg
lret
lcall
add
xchg
cld
aam
loope
sbb
out
repz
add
dec
mov
sbb
lds
xchg
sbb
cmp
inc
outsb
inc
adc
std
mov
adc
test
ret
xor
cmpsb
lods
jbe
dec
pop
leave
inc
pop
inc
dec
dec
xchg
push
sub
test
xor
jmp
jl
iret
cwtl
out
repnz
add
add
pushf
push
movl
pushf
pushl
push
movl
push
pushf
lea
jmp
pushf
lea
jl
pusha
mov
pushl
pushl
ret
lea
mov
pushf
jmp
cmp
mov
jmp
stc
jecxz
sub
push
mov
mov
monitor
mov
in
and
adc
sub
div
push
repz
cmp
cmpl
rcr
dec
outsl
pop
dec
imul
dec
dec
outsb
bound
ret
cli
mov
sbb
sub
cmp
insl
push
add
add
push
je
inc
arpl
jo
gs
inc
jne
data16
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
fucomip
adc
rorb
dec
mov
jmp
call
call
push
and
dec
xorb
jp
push
das
in
sti
jmp
sbb
jb
imul
cli
mov
cld
stc
inc
ljmp
adc
popa
sub
iret
cltd
mov
fmul
loopne
mov
in
int3
fbld
xor
test
div
or
adc
push
inc
fildll
sub
sti
in
popf
mov
lret
mov
jg
decl
icebp
loope
mov
notl
mov
cmc
jmp
mov
cmpsl
jl
push
fldenv
mov
aam
mov
lods
push
inc
stc
pusha
stc
neg
jmp
mov
jmp
mov
mov
adc
mov
dec
adc
test
and
mov
mov
test
dec
clc
scas
push
out
shr
data16
add
mov
popf
cs
push
pop
test
popf
inc
add
fs
ret
mov
mov
bound
mov
mov
jg
mov
or
mov
je
sbb
cwtl
push
push
sub
push
mov
es
fmuls
iret
das
imul
xor
sub
mov
std
or
pop
arpl
sarb
test
jle
aad
shrl
aas
sub
or
push
scas
or
out
add
adc
stos
lds
pop
sub
ffreep
aad
std
mov
lock
sub
fcomps
xchg
xlat
cmp
ss
sahf
push
ret
or
out
mull
add
imulb
fcmovnu
push
cmpsl
inc
xor
add
xor
mov
fmull
pop
sub
adc
js
jl
adc
aam
add
loopne
scas
mov
xchg
cmp
jmp
and
add
into
test
fsubrs
inc
xchg
rcl
scas
mov
pop
mov
outsl
xchg
sbb
aad
dec
outsl
dec
sbb
mov
outsb
adc
pop
sarb
aas
loopne
sub
stc
popf
jns
mov
mov
shrl
pop
jnp
sub
outsl
int
mov
hlt
gs
jbe
inc
pop
inc
mov
xor
mov
outsb
data16
pop
dec
adc
xchg
dec
iret
jbe
pop
ds
cmp
call
movl
pusha
pushf
lea
jmp
pushl
pushl
popl
pusha
pushf
pushf
push
pushl
ret
add
inc
gs
popa
jb
outsb
je
add
inc
gs
imul
je
movw
call
add
inc
bound
inc
arpl
gs
jb
arpl
jae
je
jo
mov
pushf
call
lea
je
jmp
push
movl
jae
push
push
mov
pushf
lea
jmp
setb
movzbl
not
bswap
cwtl
lea
push
call
add
inc
jb
ja
outsb
jne
popa
jb
jmp
add
inc
gs
jb
arpl
fs
jae
add
je
add
stos
pushf
mov
lea
jmp
add
dec
fs
gs
insb
insb
dec
popa
outsb
fs
add
add
je
push
dec
outsb
outsw
add
add
fs
outsb
jne
add
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
pusha
lea
jne
add
sbb
btr
test
mov
pusha
push
bt
clc
cmp
jmp
jmp
cmc
cmp
call
call
push
call
pusha
mov
pushl
cmp
jmp
jmp
lea
je
bt
pushf
cmp
pushf
jmp
add
pushl
pushl
lea
call
shl
shlb
fildl
out
dec
jnp
scas
aas
iret
jecxz
dec
mov
cmpsl
mov
fcoms
sbb
mov
cmpsl
test
shl
bound
push
add
subl
inc
push
lods
das
fsubl
push
andl
inc
imull
daa
add
cli
into
mov
je
sbb
sub
fidivl
je
mov
xchg
pop
aas
psubq
iret
rcll
and
jl
inc
mov
push
add
cs
add
push
add
sbb
add
push
add
add
add
pop
add
flds
add
or
nop
xor
push
add
cld
pop
add
xor
push
add
xor
push
add
pop
add
xor
push
add
sbb
add
ss
add
and
mov
mov
lea
jmp
add
dec
jae
arpl
imul
pushf
fadd
inc
mov
or
mov
jb
out
lods
inc
mov
subb
jg
sbb
sahf
shrl
popa
pop
pop
popa
push
adc
cmp
bsf
bsf
mov
call
jmp
add
push
popa
imul
jo
imul
add
mov
xchg
mov
call
pop
pusha
pusha
mov
push
pushl
ret
push
movw
call
push
test
call
movsbw
lea
not
setb
not
lea
jmp
lea
setno
pop
mov
movsbw
lea
jmp
cmp
jae
call
mov
cmc
sub
clc
not
jmp
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
mov
pushf
fdivs
es
addr16
inc
sti
pop
and
push
loop
mov
enter
push
inc
lret
push
bound
or
push
mov
xchg
subl
adc
rolb
into
rorb
and
negl
dec
jo
sub
mov
lret
rorl
ret
dec
pop
pop
repz
mov
adc
imul
and
stos
add
push
mov
lret
mov
mov
icebp
adc
adc
dec
imull
mov
mov
jnp
stos
sub
or
fbld
cmp
sub
repnz
fwait
shlb
rclb
xlat
punpckhdq
int3
cmp
in
mov
out
push
loop
ljmp
inc
cwtl
cwtl
into
mov
repz
xlat
sahf
add
repz
cmp
xchg
sahf
inc
jnp
lahf
outsl
not
faddp
add
in
and
mov
aam
sub
sar
push
mov
std
ss
pop
and
xchg
push
mov
int
xchg
dec
mov
sbb
dec
rcr
mov
push
insb
test
fbld
fwait
inc
xchg
jp
and
mov
or
pop
push
mov
retw
push
and
lods
mov
and
fwait
ja
imul
inc
aad
xor
jae
sub
movsb
cmp
nop
jns
or
mov
or
dec
mov
push
bnd
inc
push
push
es
jle
pusha
dec
arpl
rcrl
rorb
sbbb
or
add
inc
aam
mov
or
ret
dec
outsl
orl
cmp
cs
int3
rolb
enter
inc
xor
add
fmul
and
fld
popf
cmp
loope
jl
mov
test
cmp
adc
fsubl
in
aam
mov
inc
mov
shrl
lcall
fs
push
jbe
inc
xor
daa
add
dec
hlt
int
rorl
dec
insl
hlt
mov
fwait
jno
adc
push
fisubs
bnd
out
pop
xchg
je
jecxz
leave
in
fmul
shl
inc
inc
aam
and
lods
or
mov
mov
ret
and
fbstp
js
call
jae
test
ds
fadds
mov
xchg
ljmp
push
dec
sub
inc
jge
jl
stos
fiadds
mov
and
or
les
insl
test
add
movsb
sub
mov
sub
aaa
sbb
ljmp
sub
in
int3
mov
mov
cmp
ljmp
enter
mov
hlt
lods
sbb
outsl
jae
push
imul
popa
je
outsl
outsb
add
incl
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
jmp
add
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
call
add
inc
gs
imul
outsl
arpl
movw
movw
lea
call
jmp
push
pushl
popl
pusha
push
pushl
pushl
ret
pusha
jmp
add
push
je
jb
push
gs
imul
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
pushl
ret
add
push
gs
popa
jae
inc
jb
outsl
jb
outsb
je
insb
insb
cs
insb
add
out
add
add
add
je
imul
arpl
popa
lods
aas
pushf
fsubr
and
cld
pop
xor
xor
out
push
mov
insl
insl
into
add
adc
inc
sub
add
and
lret
mov
addr16
inc
ljmp
sbb
inc
adc
in
int3
mov
ja
lahf
push
xchg
hlt
movb
xchg
sar
push
fldt
push
mov
mov
xlat
xor
ljmp
shrb
xchg
enter
lret
adc
mov
cmpl
or
mov
stc
or
iret
pop
sub
ret
add
pushl
lea
jmp
mov
fmuls
test
xor
lret
je
sarb
mov
and
andb
xchg
divl
sbb
jno
mov
je
icebp
xor
lock
mov
fdivrs
daa
sti
stos
sbb
jmp
cmpsl
addr16
xchg
outsb
pop
xchg
xor
sbb
and
mov
mov
xchg
adc
dec
add
fadds
inc
mov
jne
mov
mov
push
jo
das
imul
into
and
sub
in
mov
push
lret
push
or
xchg
or
mov
fmulp
and
test
cmp
test
hlt
stos
jg
xchg
mov
push
dec
hlt
mov
lret
das
stos
xchg
ja
aas
pop
ret
lahf
lahf
mov
sbb
pop
fisubl
or
pushf
fmuls
mov
jl
mov
stos
mov
imul
xchg
lock
clc
je
inc
sbb
push
pop
sub
adc
dec
fisttpll
cmp
inc
cmp
cld
out
ss
xchg
push
push
xor
mov
or
sbbl
and
cmp
idivl
xor
mov
mov
mov
icebp
add
and
jo
sarb
sbb
enter
sub
cmp
in
dec
iret
jg
sbb
and
call
pusha
test
pushf
mov
cmc
stc
call
add
rclb
int3
fcompl
xchg
and
fdivs
pop
mov
pop
add
or
jg
jbe
loopne
mov
je
dec
push
or
clc
or
xchg
into
lods
lret
jl,pt
rorl
rcll
mov
adc
in
jmp
fsubrs
sti
xor
call
std
push
dec
sbb
into
pop
cmp
cmp
sub
ret
jmp
repz
xor
mov
add
pop
arpl
mov
lret
mov
pusha
shlb
insb
in
sub
push
add
pop
jg
sub
inc
push
dec
jle
mov
xor
and
loopne
jb
es
jmp
pop
outsl
jnp
pushf
fmul
sub
les
adc
cwtl
cwtl
ja
subb
pop
sbb
mov
aad
aam
ss
mov
imul
push
push
fdivs
ja
mov
push
adc
add
pop
inc
push
xchg
outsb
pop
push
ret
xchg
pop
ss
out
stos
mov
jb
jp
adc
and
mov
inc
and
push
je
add
push
and
pusha
pushf
lea
jmp
jmp
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
jmp
jmp
movb
lea
jne
adc
cmc
bsf
btr
mov
stc
clc
stc
add
test
pusha
pushl
movzwl
shld
shl
call
pusha
push
movb
pushf
mov
pushf
lea
jmp
not
ror
movsbw
add
jns
xor
call
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
fs
std
hlt
decl
xchg
shrd
movzbw
sub
jmp
btc
aad
mov
sub
sbb
push
cmp
add
jae
add
inc
xor
add
rcr
mov
cmp
test
pusha
jmp
lea
call
jmp
add
push
outsb
push
imul
outsl
outsl
imul
jmp
cmp
call
pusha
call
lea
je
pusha
lea
jmp
cmc
pushf
sub
mov
sets
push
mov
pusha
mov
stos
pushl
mov
push
pushf
lea
jmp
add
inc
insb
outsl
jae
push
gs
imul
insb
add
xor
add
movw
jmp
pusha
movl
jmp
fs
cs
pop
loop
lods
sbb
adc
mov
xchg
out
mov
fisubs
pop
mov
or
stos
jne
ljmp
rolb
dec
sbb
mov
sub
aam
jae
jmp
bswap
cmp
xchg
and
jo
mov
in
out
lcall
mov
pop
int3
push
lret
inc
test
mov
mov
mov
shll
mov
ror
daa
les
mov
pusha
popf
dec
in
ret
add
daa
outsb
mov
sbb
dec
cmc
push
xchg
cmp
lock
jge
push
or
popa
lds
fsubl
push
popa
jno
into
fcmovb
iret
imul
jmp
add
push
jo
popa
je
push
imul
jbe
cmp
xchg
push
xchg
cmp
push
repz
data16
rcl
fcmovne
dec
mov
outsl
xlat
adc
pop
fnstsw
push
ds
sbb
cmp
sub
dec
les
dec
sub
add
repz
cmpsl
ret
cli
movsl
dec
push
mov
pop
jb
fstl
or
in
jo
popf
mov
int
sbb
sub
adc
mov
outsl
push
mov
lods
mov
cmc
mov
adc
out
rcll
inc
sub
mov
adc
mov
incb
mov
xchg
push
and
aas
and
pop
push
aaa
dec
lock
in
stc
push
cltd
add
sub
icebp
or
add
icebp
mov
dec
cmp
addr16
mov
pop
loop
iret
movsb
pusha
pushf
jo
adc
stos
pusha
push
cmp
js
dec
push
nop
sbb
xor
loope
add
fsubrs
sub
arpl
outsb
mov
arpl
sbb
mov
in
mov
xor
lahf
sub
push
ss
fcoms
jl
cmp
enter
mov
mov
cs
push
ljmp
or
and
shlb
pop
mov
sbb
sbb
aaa
sub
mov
cmc
add
pusha
pushf
pushf
lea
jmp
mov
lea
call
call
pusha
mov
lea
pusha
jmp
cmpsl
mov
into
pusha
mov
xchg
cld
adc
aam
scas
xor
repz
pop
dec
mov
loop
sub
xor
inc
push
jp
inc
stos
cmp
jge
sbb
add
movsl
xorps
mov
dec
jne
int
ljmp
cmpsb
sub
adc
outsl
test
add
mov
sti
leave
xchg
push
test
jae
sub
lock
loop
inc
movb
cs
repz
inc
cmp
jns
scas
mov
cwtl
cwtl
cli
add
js
subb
aam
pushf
and
pop
or
jle
sbb
cmpsb
std
arpl
mov
cmp
pop
mov
cli
setne
out
in
int
lahf
xchg
lock
in
cli
xor
es
push
sub
or
dec
cmp
divb
mov
cs
mov
in
hlt
test
je
pavgw
add
adc
mov
stos
sub
into
aam
cld
out
inc
mov
or
mov
pop
pop
cmp
out
ret
or
xor
inc
test
imul
or
aaa
xchg
aad
pop
xchg
icebp
shl
mov
stos
push
adc
sub
test
mov
jle
mov
push
push
adc
movsb
stos
or
ds
testl
and
mov
cmp
or
shll
mov
mov
sub
movl
xchg
cli
std
std
mov
sarb
and
cmp
mov
jecxz
mov
outsl
pop
dec
push
outsb
je
mov
and
mov
out
loope
call
popa
or
cld
or
addps
mov
aas
sub
mov
sbb
rolb
add
pushf
cli
adc
sbb
notb
cltd
or
mov
adc
pusha
or
inc
fwait
mov
data16
les
inc
cli
mov
iret
lret
push
push
inc
mov
arpl
or
mov
in
cmpsb
subb
inc
sarl
jp
enter
mov
rcrl
std
mov
lods
push
ror
dec
inc
mov
or
mov
push
dec
into
mov
iret
jb
jns
dec
popa
mov
lcall
mov
mov
push
cli
mov
outsl
xchg
push
inc
std
mov
jbe
mov
add
mov
rolb
sbb
cmp
add
or
mov
pusha
loope
test
inc
std
mov
push
mov
test
inc
add
lcall
mov
sub
pusha
xchg
or
mov
jb
pusha
icebp
or
mov
ret
nop
adc
or
cmp
lea
dec
cmc
mov
cmp
add
add
int3
mov
jl,pt
testb
mov
addb
mov
sbbb
or
cld
adc
mov
add
push
mov
test
inc
std
mov
leave
nop
mov
or
mov
cmpb
push
sbb
pop
sub
or
mov
ja
rol
add
mov
stos
stos
pusha
sub
inc
std
mov
cmp
mov
dec
cld
mov
fildl
add
adc
mov
insl
jne
mov
inc
mov
sbb
int3
call
push
inc
std
mov
lea
cmp
jmp
push
add
sbb
aaa
inc
sub
inc
or
sarl
stos
adc
sbb
fs
jb
jmp
push
pusha
lea
call
jmp
add
inc
gs
outsb
jne
outsb
outsw
add
aad
pushl
push
pop
xor
lret
sbb
inc
std
pop
cmp
pop
sub
dec
push
sbb
inc
inc
add
cltd
fnsave
div
clc
enter
inc
or
addr16
int
out
imul
jle
arpl
outsb
jl
repnz
iret
xlat
mov
pop
jnp
xchg
outsb
enter
pop
pop
inc
aas
inc
cltd
lret
push
inc
and
adc
test
add
sub
cmp
fndisi(8087
mov
aad
in
out
mov
dec
rolb
sbb
fs
add
enter
in
dec
inc
push
lods
in
iret
out
xor
push
xor
pushf
fmuls
push
push
lret
stos
xor
fwait
xchg
push
pop
mov
cmpsl
movsl
pop
jge
push
aad
mov
hlt
js
sub
je
xchg
aaa
pop
je
pop
cmc
sub
push
sbb
mov
test
pop
fs
adcl
inc
inc
sub
or
fildll
push
fildll
adc
pop
stos
outsl
in
arpl
or
jmp
test
ljmp
sbb
in
fcmovu
pop
and
jl
fistps
pop
andb
test
push
cli
cli
in
out
mov
movsb
in
sbb
sub
iret
xchg
ja
pop
xor
repz
jno
inc
mov
stc
repnz
call
add
inc
gs
jne
jb
outsb
je
push
dec
add
shl
call
push
pushf
lea
jne
dec
mov
ror
shrd
shld
sub
bts
and
clc
bswap
mov
call
lea
jbe
shrd
shrd
sub
sub
mov
btc
shld
bts
mov
add
btr
add
neg
shr
dec
sbb
mov
rol
neg
add
pushf
movsbw
lea
lea
jl
mov
call
jmp
push
pusha
push
movl
push
pushf
lea
jmp
add
push
jb
outsb
jae
popa
je
dec
gs
popa
addr16
ljmp
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
int3
push
pushf
fcomps
xchg
jmp
lds
lods
inc
dec
pop
pop
push
sbb
and
sbb
incl
dec
mov
ja
jnp
ljmp
les
pop
xchg
push
sub
adc
adc
fwait
mov
jmp
mov
fs
fwait
sub
mov
push
sbb
dec
popf
push
add
pmaxsw
cmpsb
ficomps
jecxz
xor
repnz
ret
leave
xchg
es
pop
push
push
adc
scas
mov
mov
movsl
decl
ret
lds
add
outsb
je
outsb
jne
inc
bound
inc
jbe
outsb
je
dec
sub
pushf
fsubrs
dec
mov
loope
test
mov
pop
sub
popf
push
sbb
out
div
xor
jns
ret
into
es
fldenv
sbb
or
lret
lret
icebp
stc
pop
mov
xchg
adc
cmp
fisttps
inc
outsl
scas
jae
xchg
lahf
xorl
out
xchg
negb
xchg
xchg
jmp
stos
mov
bound
fcoms
add
mov
scas
daa
call
std
adc
scas
mov
inc
fcoml
or
out
mov
cmp
and
movsb
sub
adc
dec
pop
test
das
out
jmp
lret
xor
rcrl
test
mov
dec
push
xor
cli
inc
movsl
js
lea
mov
test
mov
pop
xor
or
mov
loopne
lods
mov
arpl
aad
movzbl
pop
pushf
pusha
pushl
ret
setae
mov
jmp
pusha
call
pusha
lea
pop
mov
call
sub
push
setl
cmpsb
or
mov
xchg
imul
mov
outsb
push
sahf
cli
sub
jbe
rcll
fbstp
sub
mov
jmp
lahf
cmpl
inc
push
sub
sub
mov
addr16
inc
insb
ficomps
sub
lods
mov
movsb
fs
add
scas
imul
push
add
pusha
lea
jmp
mov
pushf
mov
push
mov
mov
lea
jmp
add
dec
inc
dec
popa
jo
je
imul
nop
incl
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
xor
je
add
fs
ja
call
movl
lahf
bswap
lea
pushf
pushf
jmp
call
add
inc
jb
addr16
jne
jb
inc
imul
add
out
or
xor
and
insb
dec
sub
cmp
or
inc
and
adc
inc
lds
test
imul
out
or
in
lods
addl
cmc
out
mov
sub
test
sbb
mov
or
mov
aad
pop
xchg
mov
lret
push
xchg
pop
out
xchg
and
clc
xchg
lods
addl
xchg
test
mov
mov
push
cld
loopne
or
leave
test
loope
mov
push
out
lret
jbe
cld
insl
std
xor
sarb
xor
xor
clc
push
aam
lods
imul
cmp
int3
lods
mov
cld
insl
filds
add
mov
xor
sbb
jb
push
xor
rcr
in
sbb
mov
mov
mov
jle
xor
inc
dec
punpckhwd
cli
push
fucom
push
sub
xor
mov
stos
mov
es
fisubrl
insb
call
outsl
or
jle
aad
lret
cmpsl
cwtl
repnz
xor
inc
adc
loope
fwait
mov
mov
mov
push
loop
scas
outsb
es
mov
cmp
dec
iret
add
popf
xchg
pushf
jmp
sub
push
pusha
setl
not
mov
lea
js
pushf
stos
pusha
pushl
lea
jmp
add
inc
jb
popa
je
push
jb
arpl
jae
add
add
insb
dec
outsb
imul
gs
je
imul
add
add
pusha
lea
jmp
push
cmc
shl
jmp
pushf
jmp
cld
push
adc
pushf
fmuls
loopne
int3
sbb
fadds
pusha
pop
repz
das
xor
sbb
popf
test
in
and
inc
cmp
sti
jne
jp
mov
jbe
imul
lods
mov
pop
push
fdivrl
mov
jno
pop
arpl
imul
sub
jmp
outsb
movsl
jg
add
lret
fwait
repz
scas
jnp
xchg
adc
sbb
xchg
fdiv
pusha
pop
jmp
push
adc
into
or
mov
cmpsb
test
int3
mov
sub
jg
pop
repz
fistpl
pop
jmp
and
outsb
pop
sub
mov
sbb
xor
movl
mov
lea
jmp
mov
mov
push
pushl
pushl
ret
adc
fsubrs
mov
push
rcrb
xor
ss
in
pop
dec
jg
pop
or
mov
xchg
popa
xlat
cmp
shlb
out
leave
inc
sbb
adc
cmc
mov
lahf
or
cmp
sub
ret
mov
bound
sbb
fsubrs
push
stos
cwtl
mov
in
pop
push
add
fcom
int3
mov
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
bt
pushl
popl
jmp
pushf
not
bswap
mov
pushf
push
push
pushl
ret
mov
pushf
mov
jmp
cmp
push
pushf
pushl
lea
jb
cmc
push
call
add
inc
gs
gs
imul
lcall
lret
mov
mov
pusha
lods
divl
dec
cmpsb
fwait
and
sub
scas
xchg
inc
iret
and
aas
adc
sub
adc
fwait
or
rolb
out
xor
and
popf
inc
mov
fldt
out
in
jae
scas
scas
loope
fcmovu
inc
and
in
mov
fs
arpl
and
rol
fwait
mov
sets
not
call
lea
call
xor
bt
or
cmc
add
shl
aad
shld
stc
pop
aas
pop
jmp
cmp
pusha
bt
cmp
pushf
sbb
test
lea
stc
pushl
stc
pushf
mov
sub
shrd
xchg
bt
rcl
lea
adc
bsf
shld
lea
mov
add
sbb
not
sbb
xor
add
call
lea
call
pusha
pushl
lea
jb
pushf
shl
movzbw
mov
mov
call
sub
sub
mov
shr
sub
call
stc
pop
ret
add
inc
gs
je
arpl
bound
arpl
int
push
pushf
fdivrs
xor
sbb
in
xchg
mov
and
sahf
ljmp
add
fidivs
insl
jae
orb
cwtl
lock
pop
xor
lea
imul
aaa
or
jnp
or
mov
cltd
arpl
cmc
xor
popf
jge
xor
sbb
test
lea
clc
mov
pop
pushf
inc
lea
xchg
and
movsbw
bt
cmp
lea
xor
clc
inc
mov
test
sbb
sbb
not
cmc
sub
pushl
add
not
rep
jmp
add
push
gs
jb
jo
add
adc
add
pushf
push
sub
clc
bsr
sub
add
movsbw
movzbl
movsbw
push
mov
pushf
push
pusha
lea
jmp
push
pusha
movl
jmp
add
mov
test
mov
jmp
ror
mov
pop
movzbw
mov
bt
jmp
aad
mov
pushf
fsubrs
dec
pop
pop
inc
addb
jae
das
mov
std
aad
out
dec
ret
pop
dec
repz
dec
stos
aam
sbb
loope
add
adc
and
cmp
int
mov
ljmp
cmp
lds
in
movsl
subl
cld
add
push
bswap
jmp
add
dec
gs
jo
insb
insb
outsl
arpl
test
cmp
push
sbb
mov
pusha
movb
lea
movb
pushf
lea
jmp
push
movl
jmp
lea
je
bt
cmp
pusha
pushf
cmp
pushf
lea
je
test
cmp
pusha
call
repz
dec
int3
inc
mov
cwtl
aam
mov
dec
pop
inc
sub
in
mov
mov
mov
in
ljmp
loopne
lock
mov
aam
fs
add
ret
push
xchg
sbb
xchg
sbb
and
test
inc
mov
ljmp
jl
out
and
xchg
leave
repnz
ret
xchg
aas
mov
mov
pop
jae
sti
pop
lret
fwait
pop
add
adc
lahf
xchg
test
mov
lds
fidivrs
xor
repnz
ss
inc
iret
lods
bound
mov
jmp
pusha
test
add
movb
call
lea
pop
mov
pusha
push
lea
jmp
pushf
call
mov
push
inc
stc
stc
not
push
neg
jmp
pusha
lea
pushf
lea
call
call
xor
mov
stc
test
cmc
cmc
add
pusha
call
movw
shl
cmp
mov
bt
test
add
call
lods
fstpt
imul
testl
sub
leave
xchg
dec
and
lret
loopne
xor
adc
call
mov
dec
adc
lcall
pop
lock
call
jmp
adc
pushf
mov
add
and
bts
neg
aam
add
lahf
lea
mov
call
lea
jae
call
push
or
add
ja
dec
mov
inc
and
mov
test
xchg
int
fwait
test
testl
inc
and
push
adc
das
outsb
pop
insl
jae
dec
mov
xchg
xchg
in
fstl
ret
pusha
fcmovb
stos
test
sahf
dec
xchg
lods
pop
pusha
ret
adc
jmp
std
lret
cmp
inc
jb
sarb
mov
pop
shll
or
add
xor
cmp
loopne
icebp
int
mov
mov
jl
jb
mov
fsubrp
or
inc
cli
push
popa
pop
imul
lcall
lds
popl
jl
pusha
leave
jecxz
ss
hlt
add
jl
fildll
test
inc
sbb
movsl
xchg
imul
popf
popa
sub
incl
jmp
popf
rdtsc
nop
push
jmp
movw
pushf
pushf
mov
pushl
pusha
lea
jmp
add
inc
gs
gs
jo
popa
je
inc
add
and
lea
jmp
add
dec
jne
je
inc
jns
gs
outsl
push
imul
movzbw
pop
pushf
mov
movw
pusha
pushl
ret
pusha
movl
lea
je
pushf
movl
pusha
pusha
lea
jmp
fwait
test
add
sahf
negb
add
into
mov
addr16
loopne
faddl
in
jb
push
fcompl
inc
adc
in
movsb
pop
cmp
rcl
fdivs
add
and
jb
jmp
push
sub
pushf
fdivs
sahf
sahf
cs
jmp
sub
sbb
push
lcall
or
lret
std
sub
das
lods
out
in
pushf
cld
and
inc
xor
iret
ja
ret
mov
fnstenv
dec
sub
sub
fsubl
jecxz
push
and
mov
cmc
jecxz
mov
cmc
ror
fnstcw
xor
dec
iret
lahf
jo
push
ljmp
sub
push
lea
jmp
push
dec
dec
push
inc
push
dec
cs
insb
add
xchg
add
scas
test
add
aad
lods
or
cmp
arpl
dec
call
into
inc
mov
sbb
mov
adc
enter
arpl
inc
inc
dec
aas
scas
sbb
pop
test
mov
cwtl
xchg
hlt
push
pop
cmp
jecxz
xchg
pushf
sub
movsb
sub
movsb
test
mov
pop
ror
cmp
mov
divl
jmp
pop
jmp
cmpsl
outsl
das
aaa
out
repz
repnz
xor
jg
sub
loopne
stos
push
and
or
out
pop
out
and
dec
fs
inc
inc
adc
int
mov
rcrb
adc
jo
scas
push
lods
test
sbb
mov
outsb
jbe
inc
repz
das
add
ljmp
xchg
lahf
xlat
mov
jno
xor
bound
mov
cmp
jbe
mov
out
cwtl
mov
xchg
leave
outsb
mov
push
mov
sub
std
loope
xor
mov
iret
mov
or
mov
cmpsb
mov
mov
pushl
popl
mov
mov
push
pushl
ret
gs
dec
add
movsb
jl
xor
aad
fnstenv
push
fdivs
push
outsl
mov
data16
xor
mov
xchg
hlt
imul
pop
and
xor
jbe
das
jle
push
push
push
inc
push
cmp
out
sub
scas
fidivl
cmc
cmpsb
add
add
xor
inc
sbb
xor
push
andb
ss
push
jne
push
aaa
adcl
lods
or
movsb
adc
pop
movsl
add
lret
pop
lock
xchg
gs
push
pop
pop
sbb
inc
hlt
fcmovb
les
jb
mov
and
pop
insb
lods
lahf
gs
clc
andl
adc
xchg
push
sub
xchg
xchg
mov
repnz
lea
int
jnp
call
xchg
dec
in
jmp
loope
mov
sti
ret
xchg
inc
sbb
add
lret
mov
test
bound
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
gs
dec
bound
arpl
shrb
mov
and
je
movsbw
not
movzbw
lea
pusha
pusha
lea
call
push
jmp
push
jmp
add
inc
gs
gs
jo
imul
add
add
decl
test
and
jmp
add
inc
gs
jns
inc
outsl
insb
outsl
jb
pushf
pushl
movw
movl
pushf
pushl
popl
pushl
movb
pushl
ret
lea
jp
je
bswap
bswap
movzbw
movsbw
lea
pusha
movzwl
movzbw
lea
movsbw
movsbw
lea
pushf
pop
mov
jmp
jmp
call
cmc
pusha
sub
call
xor
fdivs
cmp
dec
inc
mov
mov
adc
adc
push
adc
fsubs
clc
cmp
rol
hlt
jl
sbb
decl
enter
cmpsb
cwtl
lahf
mov
out
stos
int
fwait
arpl
mov
imul
cld
add
dec
or
ret
xor
ljmp
je
inc
jno
jecxz
movsl
sub
or
mov
movzbw
mov
inc
pushf
bts
cmc
mov
not
stc
bsr
add
bsr
ror
sar
shr
adc
jmp
add
dec
gs
jo
gs
insb
insb
outsl
arpl
push
mov
jmp
pushf
movl
push
pushf
lea
jmp
add
inc
jb
popa
je
inc
imul
pop
add
add
add
sbb
add
push
add
pop
pop
add
add
add
incb
add
sub
add
sbb
add
add
mov
add
adc
add
or
add
or
out
mov
pop
add
pop
add
mov
add
jmp
add
pop
add
sbb
add
pop
add
repnz
add
mov
add
pop
add
and
add
incl
add
cmp
add
add
add
sub
add
cmpsl
push
add
out
add
pop
add
pop
add
add
add
or
add
or
add
rolb
add
push
add
or
add
or
scas
add
add
sbb
add
pop
add
mov
add
or
add
jmp
add
push
or
push
incb
add
pop
add
push
add
pop
add
push
add
mov
add
or
shl
add
adc
add
sub
add
and
add
cmc
pop
add
add
add
adc
push
add
push
or
clc
cmp
add
xor
add
and
add
fildl
add
pop
or
sub
pop
add
sub
add
mov
add
cmpsb
or
add
sbb
pop
add
and
push
add
in
push
add
pushf
push
add
cli
pop
add
sti
push
add
mov
push
add
or
xor
add
rolb
add
add
add
or
repnz
add
adc
add
pop
or
pop
or
add
or
push
repz
add
pushf
push
add
fldl
add
pop
add
push
add
cmpsl
push
add
push
or
cmp
push
add
or
add
popf
push
add
mov
add
or
add
adc
add
add
add
add
push
add
popf
push
add
adc
add
out
pop
add
mov
add
sub
add
add
xor
add
add
add
or
add
test
add
mov
add
sub
add
or
sbb
add
pop
add
fildl
add
out
add
cmpsl
push
add
add
add
repnz
add
lahf
push
add
aam
add
pop
add
mov
or
jl
pop
add
add
push
add
push
add
fldl
add
add
adc
add
in
push
add
pop
add
pop
add
push
or
cmp
add
fiaddl
add
or
add
add
lods
pop
or
dec
sub
add
sub
add
fldl
add
sub
add
sub
add
push
add
pop
add
push
or
add
add
inc
repz
add
jmp
add
or
jl
push
add
incb
add
mov
pop
add
add
add
and
add
pop
add
or
repz
add
add
add
or
add
or
add
and
add
sub
add
clc
push
add
pop
add
add
add
add
add
add
add
push
add
mov
add
add
lea
call
jmp
movsbl
mov
mov
movb
pusha
pushl
ret
test
jmp
jmp
movl
mov
pushf
pushf
pushl
popl
push
pushf
pushl
pushl
ret
add
push
imul
jb
je
arpl
add
dec
pop
sbb
cs
cmp
pop
das
pop
push
jl
sbb
jb
imul
pop
sbb
pop
outsl
popa
dec
push
dec
xchg
inc
leave
mov
push
cmp
test
and
push
lock
cwtl
adc
mov
call
jl
sbb
loope
lahf
and
jb
mov
push
or
shrb
push
mov
adc
inc
xor
in
stc
mov
ljmp
xchg
icebp
adc
addr16
push
sbb
xchg
loopne
rcl
ret
inc
js
outsb
rcr
test
xchg
mov
jp
aam
fnsave
scas
or
or
imul
rol
adc
shr
in
and
das
push
inc
cltd
shlb
xor
xchg
or
push
aas
add
jns
inc
jbe
loope
mov
outsl
in
sub
push
je
xor
outsb
dec
enter
js
inc
add
pop
lock
inc
xor
mov
adc
xor
xor
aaa
or
pushf
fadds
cwtl
add
xchg
push
ret
inc
andb
pop
push
jle
or
out
clc
push
push
lods
adc
dec
jg
out
xchg
jne
mov
xchg
movsb
add
test
int
lock
xchg
push
mov
dec
lods
out
mov
in
dec
or
mov
lods
inc
mov
sbb
dec
sbb
inc
shll
push
xor
ljmp
adc
lcall
sub
cmpb
fwait
adc
lret
iret
mov
fs
roll
movsb
push
mov
dec
lods
les
js
inc
cmp
int
nop
mov
jmp
add
cmp
inc
repnz
sub
cmpsb
xchg
sub
call
imul
push
gs
je
dec
popa
outsb
fs
add
push
pushf
fdivs
imul
mov
lds
push
adc
mov
jp
adc
and
lret
jae
rclb
xchg
repnz
and
xor
fdivs
mov
aam
cmp
cmp
leave
movsl
fdivs
mov
jbe,pt
ret
or
sbb
inc
movaps
pushl
mov
stos
rcr
sbb
sarb
or
enter
mov
pop
popf
movsl
jno
push
lea
je
jmp
lea
je
inc
add
movsbw
and
btr
sub
bsr
shr
shrd
movsbw
mov
shld
btr
add
bswap
add
and
rcr
dec
bsr
mov
push
pushl
shr
bt
cmp
call
movb
add
stc
cmp
test
push
mov
cmc
test
bt
test
jmp
add
inc
jb
addr16
arpl
jo
inc
imul
outsl
jbe
push
imul
not
jmp
icebp
adc
fadds
pop
mov
jl
sahf
push
adc
scas
enter
push
pusha
fs
pop
in
mov
mov
mov
or
jg
push
inc
sub
xlat
mov
pushf
pushf
lea
jmp
bt
shl
movl
jmp
jmp
add
inc
jb
addr16
imul
bswap
not
push
lahf
jmp
add
push
gs
imul
outsb
add
adcb
shll
mov
jg
push
mov
sahf
scas
xchg
adcl
test
push
add
push
sub
push
xchg
inc
stc
mov
xor
lods
xchg
iret
mov
insl
iret
mov
pushf
fmuls
ja
inc
jg
pop
ret
das
cmp
stos
out
lahf
ja
jge
or
pop
cmc
adc
mov
addr16
sub
lods
xor
outsl
shrl
mov
lods
xchg
sbbb
imul
out
sti
push
fcmovbe
sub
fcoml
lcall
lock
pushf
jbe
rcrl
mov
je
jg
fisubrs
xor
adc
inc
nop
cwtl
stos
orl
stc
rcll
fs
jmp
pop
icebp
pushf
pushf
push
xchg
dec
mov
bt
not
lea
or
cmc
btc
pushf
mov
sub
shl
clc
adc
not
not
adc
add
not
movb
rep
push
mov
movsbw
not
mov
not
movb
mov
call
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
in
mov
adc
orb
je
cmp
ret
and
pop
push
fisubs
insl
in
mov
mov
jne
cld
test
outsl
adc
pop
pop
pop
out
mov
xor
jecxz
mov
cltd
imul
lahf
xchg
test
aaa
adc
cli
sub
in
rorl
ss
pushf
dec
pop
je
jo
sub
mov
insb
fcoms
ja
leave
ret
mov
cmp
adc
or
aaa
adc
int3
popf
pop
je
dec
cmpl
dec
pop
popa
xchg
les
mov
xchg
push
andb
dec
xor
pop
inc
scas
lahf
in
or
rorl
push
jecxz
xchg
insl
fisttps
jae
out
iret
mov
or
sbb
lods
out
dec
iret
jle
and
add
inc
jb
popa
je
push
push
add
and
lea
jb
daa
clc
btc
mov
call
lea
jne
daa
adc
xor
movzbw
rol
daa
mov
clc
add
pusha
mov
jmp
mov
lea
je
cmc
clc
cmp
je
pushf
lea
je
push
pushl
cmp
bt
cmp
call
mov
not
push
jmp
pusha
mov
test
pusha
mov
jmp
ja
push
adc
cli
shlb
sbb
sub
mov
scas
cmp
dec
jg
addr16
sti
xor
pop
jae
lods
or
xlat
pop
lds
xchg
jnp
fistl
std
fldl
mov
cmpsb
xor
jo
cld
add
lods
je
and
fdivrs
adc
mov
loop
roll
xchg
jl
pushf
fdivrs
pop
push
dec
mov
jle
mov
jo
xchg
mov
pop
sub
popa
sub
adc
cmp
outsb
mov
test
sbb
or
mov
ljmp
xchg
jge
sub
stc
mov
sbb
rolb
sub
or
cld
bound
data16
fidivrs
test
das
mov
fwait
dec
xchg
insb
fimuls
sbbl
lret
std
add
mov
jg
push
arpl
in
test
cmp
cmp
inc
jmp
sub
xchg
clc
paddb
xor
xchg
and
mov
jbe
xchg
cmp
jg
dec
popf
out
rorb
pop
scas
icebp
pop
sbb
sub
das
mov
sbbl
cltd
mov
lods
inc
sahf
sbb
jns
jne
pop
mov
dec
xchg
imull
push
xor
pop
lret
mov
jge
sbb
sub
push
dec
or
dec
mov
jno
not
jo
jb
int
rol
cmc
test
xlat
xchg
inc
cmp
adcl
pop
adc
mov
sahf
push
mov
je
loope
xchg
test
xchg
ljmp
adc
cltd
arpl
dec
lcall
addr16
sub
pop
rcll
fstpt
pop
dec
mov
int3
mov
les
push
mov
sub
adcb
xor
xchg
mov
xor
pop
ljmp
rclb
push
xor
scas
jge
cmp
daa
push
popl
and
enter
mov
pop
xchg
ja
xchg
add
jne
cmpsl
mov
xor
add
mov
push
cmp
repz
mov
movsl
jns
jl
push
mov
pop
aad
daa
push
mov
fisttpll
adc
lds
and
mov
and
in
dec
rcrb
cmp
xlat
jg,pt
xor
test
cmp
xchg
push
jmp
inc
stos
inc
cmpsl
and
test
mov
xchg
dec
cmpxchg
adc
cmp
filds
scas
icebp
lea
cmp
xorb
xchg
stos
iret
cs
sub
leave
jmp
mov
nop
sti
mov
cmpsl
scas
push
mov
test
popf
test
mov
cmp
pop
mov
ds
cmc
add
mov
shlb
cmp
flds
and
xchg
add
adc
cwtl
cltd
jg
rcll
loop
les
scas
addr16
movsb
into
sub
pop
cmpsl
and
nop
jg
repnz
dec
clc
test
cmp
mov
cmp
inc
cmovo
cmc
insb
mov
and
mov
out
push
outsl
fwait
xor
stc
vpmacssdd
push
push
scas
out
inc
sub
enter
pop
adc
in
mov
leave
adcb
sbb
pop
xor
cmp
lcall
sbb
faddl
inc
test
gs
mov
and
aas
jle
mov
jo
dec
out
push
dec
cltd
xchg
mov
jecxz
mov
pop
ret
mov
aad
push
mov
jl
xor
subb
adc
loopne
xchg
lcall
push
je
test
dec
lock
sti
incb
adc
pop
pushf
dec
cmp
mov
sti
sarl
sbb
push
jg
aas
rcr
pop
dec
nop
addr16
adc
jne
sahf
movsb
sub
inc
pop
lea
inc
push
mov
popa
sub
xchg
inc
in
fwait
inc
jmp
xor
push
or
int3
xchg
sub
lods
mov
repnz
pop
pop
inc
out
push
pop
popf
sti
push
mov
xor
mov
cmp
insb
jge
or
inc
xchg
mov
mov
lea
mov
out
lcall
push
xchg
mov
dec
out
icebp
mov
daa
rorl
mov
rorl
insl
xlat
ja
cmp
pop
or
out
ljmp
pop
inc
sahf
mov
cmp
repnz
adc
aaa
mov
sbb
nop
mov
xor
dec
mov
mov
imul
lea
es
daa
cmp
adc
pop
shrb
or
movsl
dec
sub
adc
lods
lahf
out
fsubs
jo
ret
cmp
test
lods
int3
cli
pop
sbbl
adc
mov
js
lods
xorl
adc
mov
aaa
inc
dec
add
test
adc
repnz
cmp
lret
sbb
mov
mov
dec
outsb
cld
jo
hlt
mov
mov
std
hlt
lret
cmp
pop
sub
mov
aam
in
outsl
test
pop
lds
xchg
or
mov
flds
inc
adc
inc
dec
or
cmp
sbb
test
mov
pusha
xor
dec
scas
shl
add
pop
gs
lods
aaa
mov
push
ds
aad
fscale
pavgb
pop
push
cmp
xchg
mov
sub
aaa
scas
outsl
jecxz
lret
jmp
adc
mov
dec
xchg
cmpsl
cmpsb
shrl
fs
pop
or
or
movsb
lret
inc
mov
jp
push
and
fsubrp
jp
ret
stos
xchg
das
sti
or
adc
push
inc
cmpsl
roll
es
test
and
popf
sbb
pushf
xchg
in
add
cli
mov
mov
mov
jecxz
push
rcrl
movsb
sarl
xchg
dec
mov
add
inc
mov
leave
adc
add
pusha
xlat
jle
push
xor
js
and
xchg
inc
jo
js
test
xchg
inc
icebp
arpl
daa
inc
ret
jbe
xchg
xor
scas
test
mov
sbb
and
and
pop
xor
xchg
push
aam
call
aam
xor
jp
cmp
cltd
sbb
xchg
cmp
pop
sarl
pop
pop
mov
adc
test
mov
gs
xor
push
mov
pop
xchg
out
aad
lret
outsb
fistpll
in
sub
inc
adc
push
mov
sbb
cmp
daa
js
mov
lahf
push
xor
jmp
pop
insb
jo
rorl
icebp
jbe
pop
loop
mov
pop
rol
roll
sub
out
rclb
cld
outsb
sarl
xchg
sbb
lcall
xchg
fnstcw
addr16
mov
scas
jae
rcrl
mov
xlat
popl
pop
xchg
fists
out
mov
add
mov
xchg
pop
inc
add
loop
sub
in
dec
call
fimuls
mov
inc
pop
inc
xor
enter
ret
fldcw
mov
outsb
ficomps
mov
icebp
jle
ljmp
xchg
std
xchg
pop
pop
lret
sbb
aaa
pop
in
xor
jbe
hlt
stos
cmpb
jge
cmp
out
adc
add
repnz
out
nop
fnstsw
push
sbb
lods
sbb
mov
fldenv
adc
sub
in
out
add
test
adc
call
mov
je
and
hlt
in
sbbl
cmpsb
js
or
and
stos
inc
popf
loopne
mov
aaa
lret
cmc
mov
es
mov
cmp
lahf
sbb
push
cmpsb
test
cmc
xor
nop
or
in
lret
and
sub
jle
vcomisd
lret
add
gs
cs
dec
outsl
cltd
cmp
aas
popa
sbb
fdivrl
rcr
out
lods
out
sbb
xchg
push
mov
pusha
pop
dec
neg
and
lcall
push
dec
xor
or
call
pop
aaa
insb
jo
outsb
in
xor
aam
rolb
lock
ss
add
fmuls
shll
xor
push
dec
insl
je
sbb
scas
int3
daa
cld
sbb
jne
push
sub
lcall
xchg
pop
shrl
popa
in
mov
mov
jle
and
repz
pop
insb
clc
cltd
leave
xchg
pop
daa
inc
push
xchg
cmp
ds
ret
aaa
into
dec
sbb
mov
or
inc
pop
inc
outsl
jp
pop
test
jb
adcb
aaa
call
mov
ja
ret
sbb
andl
adc
mov
xor
inc
push
in
push
loopne
xor
insl
push
mov
mov
mov
loope
in
dec
jae
arpl
inc
mov
aam
xchg
mov
or
inc
stos
nop
mov
iret
jae
iret
inc
and
mov
inc
int3
mov
dec
stos
inc
test
pusha
add
cmpsl
sbb
and
call
mov
push
sarl
hlt
pusha
shl
sbb
pop
loopne
mov
xor
cmp
push
daa
push
sarb
jge
outsb
repnz
mov
jae
add
pop
cs
test
enter
jne
je
std
sub
lods
nop
push
imul
sahf
adc
shr
test
sbb
mov
sub
and
enter
pop
xchg
xor
cmpl
loope
push
push
pop
cli
sti
lcall
pop
ss
xchg
pop
jnp
fcom
sbb
out
adc
mov
jl
sub
in
loopne,pt
dec
mov
push
adc
lock
insl
cmpsb
pop
lahf
xor
add
popa
pusha
add
cmc
jge
filds
add
pop
xor
pop
inc
clc
enter
bound
push
dec
mov
andl
push
mov
cmp
out
aas
xchg
sbb
push
pop
out
lea
pop
sbb
movsb
mov
cwtl
outsb
movsb
ds
aam
sub
dec
push
push
cmpsl
inc
iret
cmp
aaa
push
negl
jmp
imul
cmpsl
jno
jg
mov
scas
loope
dec
xor
ret
repnz
or
or
orl
mov
ds
lcall
mov
sahf
jnp
icebp
mov
aas
imul
fistpl
add
jns
in
ljmp
mov
loope
imul
fisubrs
and
adc
jp
add
pushf
lods
scas
arpl
push
stos
mov
lods
pop
and
lret
jge
add
mov
xor
fiadds
roll
xor
rclb
inc
pop
sub
lea
mov
cmp
in
or
xchg
imul
push
add
jp
insl
mov
arpl
cltd
jl
andb
dec
and
scas
sarl
sub
js
inc
ds
adc
push
ja
lods
js
mov
push
fadds
popl
sti
test
aad
sub
xchg
push
jecxz
test
mov
outsl
add
rolb
pop
leave
push
xchg
mov
fst
out
mov
add
xorb
xchg
mov
or
lret
sarl
adc
mov
orb
push
add
jmp
loope
je
iret
ret
fdivrl
sub
jmp
std
cmpsl
sub
xchg
mov
sub
pop
adc
jmp
jmp
insl
rorb
dec
gs
in
inc
lods
int
in
js
ja
push
pop
cmpsb
std
push
pop
in
add
jp
repz
outsb
int
add
hlt
cmp
pop
flds
pushf
mov
lcall
and
insl
call
xchg
sbb
dec
pop
pop
int
pop
pop
push
jmp
sbb
adc
sti
loopne
das
pop
xchg
pop
mov
mov
xchg
hlt
dec
and
jecxz
pop
sti
out
ret
xchg
sub
out
test
decl
mov
xchg
fdiv
xor
dec
ret
ror
stc
lret
fimuls
add
ljmp
mov
inc
mov
pop
cmp
insl
dec
in
xchg
aam
jb
loope
repnz
ja
lea
dec
fiadds
sbb
pop
adc
dec
cli
jmp
nop
cmpl
or
pop
adc
dec
lods
mov
fnsave
rcrl
sahf
push
xchg
jg
ds
ret
cmc
lds
push
mov
dec
add
xchg
orl
push
insl
jne
in
movsl
cs
xchg
mov
jge
xchg
aas
and
fs
xchg
call
cld
fsubrs
out
popf
int3
lock
in
jmp
sbb
fiaddl
bound
gs
cmpsb
sar
test
fsubrl
dec
xchg
cwtl
aad
cmpxchg
pop
push
xchg
into
dec
or
movsl
xor
xor
mov
mov
xor
dec
lds
cli
call
dec
fiadds
lods
mov
sub
aaa
adc
push
and
inc
push
outsl
insl
xor
add
xchg
in
int3
jp
xchg
xor
mov
out
iret
xchg
mov
add
mov
cld
ret
sbb
xchg
es
cld
xchg
jae
add
lock
neg
jmp
dec
cmp
adc
jb
leave
jmp
dec
clc
iret
js
mov
dec
aas
jns
mov
ss
arpl
sti
imul
stos
mov
jl
jb
push
lret
sahf
aas
adc
addb
jge
dec
out
mov
pop
shlb
push
cli
hlt
nop
push
xchg
or
add
cmp
xor
pop
push
scas
push
fistpl
pop
fwait
and
in
jl
arpl
cmp
stc
popf
test
dec
inc
ds
mov
xchg
scas
cmpsl
sti
xchg
xchg
es
das
inc
cmpsb
sbb
and
or
push
push
pusha
push
add
lea
dec
pmaxsw
lock
and
push
std
mov
or
mulb
leave
mov
or
pop
out
iret
rcrb
sbb
jg
push
cmc
jb
test
cli
cltd
jecxz
popa
xor
cwtl
movsb
or
hlt
sub
push
lea
rcrl
test
daa
js
push
sub
lods
inc
negl
sbb
movsl
loope
mov
hlt
mov
cli
or
push
pop
or
insl
push
ficoms
jb
cmpb
xor
subb
push
ret
xor
std
cmpb
push
jnp
ficoms
push
out
enter
repz
stos
cwtl
mov
dec
in
mov
xchg
inc
ret
jo
and
lds
or
mov
push
lock
pushf
iret
cmp
or
jno
jns
xchg
repnz
cmp
jae
popa
cmp
test
dec
or
loopne
xchg
cmpsl
xor
mov
and
mov
aam
dec
sbbl
xchg
dec
sub
add
cmpl
stos
or
aad
movsl
pop
push
pop
rcrl
icebp
lock
jl
cmp
roll
fistl
add
popa
cmp
cltd
push
repz
movsb
adc
stos
or
sub
das
out
insl
cmp
push
mov
push
iret
and
pop
push
cmc
xchg
hlt
jmp
mov
mov
pop
cmp
mov
lret
fists
sub
int
popa
sarl
ss
lea
add
mov
xchg
gs
imul
adc
stos
mov
mov
cli
xor
pop
cmp
xchg
in
outsl
sbb
test
std
scas
rcll
xlat
es
sti
push
and
movsb
in
imul
sub
lea
and
mov
es
mov
call
stc
loop
das
aas
repz
test
sbb
xchg
notl
dec
out
sbb
pop
xor
mov
cmc
jecxz
inc
stos
fdivl
add
mov
mov
ss
int3
adc
lahf
sbb
data16
bound
lds
out
scas
test
mov
into
shrb
inc
ret
imul
cmp
adc
add
mov
dec
add
jns
and
movsl
ret
or
stos
in
mov
jnp
in
leave
popa
je
loop
test
cmp
pop
std
push
aam
xor
mov
aas
lods
mov
and
mov
fisubl
push
lret
push
out
pop
gs
ja
out
cmp
xor
xchg
out
inc
ficompl
or
fs
mov
mov
inc
jmp
xorb
xchg
dec
jecxz
adc
pop
repz
cmp
dec
or
rcrl
push
push
jo
aad
lock
subb
dec
sub
inc
sub
sub
xchg
sbb
fistps
mov
mov
adc
mov
bound
push
add
mov
inc
test
aaa
dec
and
rcrl
push
invd
xlat
das
ret
sbb
aad
aam
lock
dec
jne
or
daa
mov
inc
jge
imulb
mov
pop
aas
cmp
movsl
insl
mov
test
nop
cmp
scas
adc
into
xchg
pop
jno
test
stos
pushf
inc
addr16
add
cltd
dec
fnstsw
cld
cmp
jno
aam
pop
movsl
pop
ficoms
pusha
scas
push
jg
dec
add
mov
rolb
push
imul
jge
iret
shrb
dec
insb
adc
jmp
inc
cmp
or
cmp
xchg
jecxz
enter
lock
cmc
inc
sub
mov
cwtl
cmpsb
mov
xlat
jmp
pop
inc
adc
sti
push
outsb
mov
lret
dec
pop
inc
xor
push
sbb
mov
jnp
sbb
mov
int
jns
call
popf
shlb
stc
popl
fwait
mov
push
push
xchg
hlt
imul
add
pop
push
mov
pop
nop
jb
mov
sbb
xlat
dec
lcall
mov
xor
add
dec
fpatan
ret
insb
mov
and
gs
ljmp
sub
xchg
cld
ret
test
cmp
or
sub
mov
je
stos
xchg
out
shrb
and
subb
dec
shlb
into
into
xor
mov
pop
xlat
ret
dec
scas
iret
adc
or
mov
xlat
cmpsl
jle
jecxz
cmp
push
mov
lcall
lock
cmpsl
jb
dec
scas
jae
push
ds
adc
cmc
push
adc
cmpsb
adc
scas
jae
mov
rcrl
jge
sbb
test
mov
dec
pusha
cli
test
mov
les
mov
mov
mov
mov
xchg
mov
bound
aad
out
pop
xor
aas
push
nop
out
leave
popa
in
stc
mov
inc
xchg
xchg
sahf
or
fcompp
jae
push
addr16
inc
jl
popa
imul
outsl
mov
stos
and
fstp
jle
mov
in
xchg
addr16
pop
clc
pop
mov
out
push
mov
iret
arpl
lea
jnp
mov
js
mov
cmpsb
dec
rclb
pop
iret
fcomi
hlt
xchg
push
test
jbe
mov
xlat
cmp
pop
sub
faddl
pushf
jp
jge
mov
filds
jge
int
les
lea
dec
pop
fisubl
hlt
sbb
sbb
pop
mov
add
xorl
add
cmp
leave
add
es
xchg
xchg
mov
popa
jns
cli
mov
shrb
jecxz
adc
rclb
pop
push
xchg
sbb
pushl
sub
mov
iret
xchg
mov
lahf
mov
jno
ss
mov
jge
icebp
rcll
ljmp
xor
cmpsb
rol
adc
adc
or
in
cmp
dec
or
aad
sub
xor
mov
pop
mov
push
pop
sub
mov
mov
and
mov
outsb
imul
pop
add
cmp
pop
jg
rclb
xchg
ret
push
dec
lret
repz
push
lcall
inc
cli
ret
dec
stos
test
lret
jecxz
scas
ficompl
xchg
daa
fisubs
stc
lahf
psrad
and
xor
int3
add
sub
sbb
push
pusha
les
jp
bound
xchg
nop
test
and
int
jle
and
push
mov
ret
push
cli
jg
ret
mov
xlat
push
out
int3
pop
cmpsl
mov
cmp
sbb
cmp
iret
and
xchg
inc
rolb
mov
fsubr
add
push
xor
xor
adc
jle
mov
test
push
in
fidivrl
and
ret
scas
mov
jnp
out
mov
cmp
push
mov
jmp
pop
xchg
push
sarl
push
push
ret
fs
cmp
ffree
cmpb
lahf
movsl
jb
and
aaa
xchg
mov
outsb
lock
repz
test
inc
cmpsb
add
or
adc
sub
aaa
mov
dec
dec
popa
inc
xchg
test
xor
sub
imul
test
hlt
lahf
in
xlat
mov
ja
xor
mov
addr16
and
orb
xor
into
push
xchg
mov
lds
loop
xchg
mov
adc
adcl
fcmovbe
dec
fucomi
adc
adc
insb
push
test
adc
fimuls
push
cmp
and
out
ficompl
xor
pop
dec
or
subb
dec
pop
fwait
and
lods
ds
push
fwait
mov
pop
in
js
arpl
pause
cmp
jle
je,pt
push
inc
cmp
ss
mov
push
sbb
pop
ds
mov
addb
in
sub
jns
xchg
enter
mov
das
sub
xchg
sbb
lods
clc
push
push
aam
xor
mov
shll
or
in
pop
sbbl
pop
xor
cltd
mov
mov
js
fisubs
lock
test
dec
ret
push
push
sahf
iret
jne
clc
and
add
outsl
test
push
pop
xchg
push
das
jmp
rcr
sbb
and
push
test
popa
mov
sub
in
stos
mov
dec
mov
icebp
das
shl
stos
mov
jae
fcomp
add
lfence
jb
js
add
shl
in
test
iret
scas
scas
and
fiaddl
sbb
add
xorl
movsl
xchg
popa
imul
in
mov
cld
popa
aam
ficompl
dec
mov
nop
sbb
jbe
mov
dec
jns
lock
mov
in
mov
sub
mov
adc
rcll
sub
push
sub
ljmp
out
inc
std
enter
xchg
mov
shl
ss
das
and
arpl
pop
out
sub
cmc
jb
repz
pop
std
cmp
daa
mov
lret
xor
mov
push
jb
dec
in
mov
lea
loopne
testl
mov
xchg
sbb
cmp
adc
scas
xor
cmp
loopne
adc
mov
pop
jecxz
cmp
mov
cmp
mov
lcall
aad
pop
mov
mov
in
xchg
shll
jmp
dec
dec
push
pop
mov
xor
loop
xchg
dec
pop
push
mov
push
out
mov
das
or
and
and
imul
inc
or
xchg
cmc
lret
cmp
arpl
sub
aas
push
inc
cltd
rep
xchg
jne
insl
addr16
inc
scas
hlt
notb
push
mul
popa
ljmp
ja
xchg
lock
or
adc
dec
in
mov
push
and
push
sbbl
test
mov
repnz
inc
fisubl
and
testl
loope
sbb
or
fidivrl
or
mov
xlat
js
adc
mov
in
adc
ret
int3
xor
outsl
outsl
jecxz
js
aas
mov
lret
arpl
fs
inc
insb
arpl
divl
es
xor
stc
movsl
cmp
hlt
xchg
mov
ljmp
push
shlb
stos
cmpsl
movsl
dec
fstp
pop
into
sub
lods
jns
shlb
fnsave
in
inc
inc
push
rol
adc
fdivl
aaa
jns
jmp
sbb
jnp
cmp
push
mov
inc
cwtl
cmpsb
mov
sub
inc
aam
dec
dec
cmpsb
loope
sub
mov
lret
fiadds
loope
sarb
repz
in
gs
cs
jge
pop
cmp
sub
xchg
dec
adc
sub
add
andl
pop
push
adc
mov
sahf
mov
cltd
out
test
inc
js
inc
and
cs
mov
mov
mov
pop
aad
inc
fdivl
ja
jmp
mov
cli
sbb
jecxz
xchg
jmp
mov
adc
out
or
stc
cmp
jo
pusha
dec
inc
sbb
mov
sub
cmp
or
pop
int3
mov
mov
cmp
in
xor
pop
imul
aas
jp
xchg
les
hlt
fidivrs
push
and
sbb
out
jnp
xor
sti
movsw
imul
es
out
or
and
gs
jmp
into
jl
mov
add
pop
mov
into
lret
cwtl
cld
xchg
cmp
fisubl
dec
iret
pop
ret
in
and
aas
addr16
mov
or
notl
ret
jae
lods
jp
repnz
fs
sahf
aaa
ret
popf
mov
in
into
pop
addl
loope
add
mov
aad
fdiv
add
jp
mov
xor
out
xchg
and
cli
inc
cmp
or
aas
stc
pop
lock
inc
out
lret
inc
or
clc
inc
aad
pop
test
pop
push
js
ficomps
std
push
lcall
lret
fwait
insl
cmpsl
iret
xor
sbb
data16
dec
out
jg
lcall
push
cwtl
cmp
pop
aas
in
stos
jmp
jne
std
mov
sbb
jecxz
inc
jno
or
sar
fildl
jl
movsl
pop
int3
xchg
dec
cmp
lods
lock
inc
dec
dec
int
cmp
jle
pop
adcb
pop
inc
jge
out
insb
push
mov
push
icebp
xor
addr16
lret
arpl
adc
cmp
stos
sbb
stos
imul
add
sbb
and
xchg
insb
rcll
sbb
sbbl
cmp
add
loopne
stos
adc
sbb
movsl
jb
daa
dec
dec
mov
aam
jns
into
inc
push
rcll
push
outsl
push
mov
cmpsl
jl
test
outsl
fs
out
rclb
mov
out
js
sbb
imul
pop
or
inc
sti
in
cld
insl
outsb
sub
jae
bound
or
mov
xor
outsl
sbb
fnop
es
mov
shr
jl
enter
xchg
inc
lea
jge
inc
sub
xor
mov
push
cmp
fstps
or
pop
out
and
andb
sbbl
leave
rolb
out
lods
or
popa
adc
fidivs
add
out
fucomip
andl
pusha
cmpsb
jae
xchg
jnp
cwtl
xchg
sti
xor
cld
ret
js
rol
sti
or
pushf
mov
fcmovnu
movsl
popa
and
stos
xor
cli
pop
and
je
sub
xchg
fwait
negl
push
add
mov
xor
jle
fldt
sahf
pop
xchg
mov
pop
xchg
xor
fs
dec
pop
arpl
adc
in
neg
sbb
data16
adc
iret
jae
cli
mov
inc
jo
pop
and
or
ret
push
popa
pop
sbb
frstor
in
adc
vpsubd
dec
xor
fisubrs
out
jnp
movzbl
lods
jl
mov
fcompl
andb
ds
xchg
cmp
cli
mov
lea
popf
pop
xor
sbb
shrl
fistps
adc
mov
or
mov
out
jp
imul
jle
inc
outsb
xchg
lcall
and
mov
roll
inc
push
pop
jns
pop
add
pop
jp
mov
bound
scas
repz
sub
ljmp
cmp
xchg
push
jp
pushf
sub
add
cmpsb
les
sbbl
mov
mov
decl
push
inc
inc
mov
inc
jbe
inc
lds
nop
xor
lret
loopne
inc
popa
inc
mov
loope
mov
fsts
jae
jg
mov
nop
mov
push
xor
sahf
jp
mov
jg
and
sub
lock
stos
fadds
aad
js
mov
mov
mov
movb
push
cltd
sbb
popa
sti
leave
jg
int3
sbb
lahf
mov
addb
jge
in
push
pop
cs
arpl
inc
mov
ljmp
and
subl
or
sub
mov
and
dec
dec
push
xchg
fbstp
push
notl
and
jae
inc
test
pop
and
shrl
mov
in
dec
pusha
repnz
inc
cs
push
or
sbb
jnp
and
xchg
push
movsb
rcrb
jnp
mov
inc
xchg
std
mov
leave
test
xchg
cmp
jge
mov
mov
xor
cmp
arpl
lret
fists
mov
pop
xorb
in
out
scas
and
inc
cwtl
lods
adc
cmc
orb
loop
test
movaps
mov
outsl
fdivrl
ret
mov
inc
or
into
mov
xor
clc
xchg
rcrl
mov
push
xor
fcoml
pop
daa
cmp
or
xchg
inc
cwtl
pop
out
ja
repz
pop
dec
es
lret
inc
jno
push
test
ret
add
cmp
repz
insl
push
mov
fisttpl
faddl
xchg
shrl
repz
mov
cli
scas
arpl
mov
cmpsl
scas
es
and
pop
jns
adc
dec
out
stos
mov
jo
mov
je
int3
and
pusha
mov
adc
push
mov
subl
jg
rcrb
imul
xor
loope
push
add
push
enterw
jno
and
sub
or
insb
hlt
add
sahf
mov
add
ja
loope
sti
lret
fwait
mov
sti
sarb
adc
cmp
incl
mulb
je
rorb
push
aas
pop
std
mov
mov
mov
movsb
jae
mov
popf
test
ret
fisubs
out
inc
xor
roll
mov
sbbb
popf
into
jns
insb
lock
mov
xchg
jnp
inc
int3
sbb
imul
sti
in
gs
sub
mov
cmp
popa
outsl
sbb
sbb
stc
mov
dec
sbb
sub
cs
mov
cltd
inc
or
movsw
jno
dec
fsubrs
and
andb
je
cmpsl
mov
mov
cmp
xlat
insl
ret
fnstcw
sub
xlat
mov
cmp
sbb
jp
inc
std
daa
add
popf
inc
xchg
adc
mov
bound
nop
loop
mov
clc
mov
xchg
roll
jmp
repnz
test
mov
adc
mov
mov
xor
xor
loopne
sbb
sub
filds
add
cmc
dec
pusha
push
iret
addb
cmp
push
push
movsb
popa
fnstsw
xchg
flds
pop
inc
fistpl
dec
cmp
lcall
jmp
mov
or
lods
pop
ljmp
dec
add
mov
adcl
sub
leave
adc
lea
clc
inc
jno
mov
push
lods
stos
out
jle
jmp
loop
jno,pt
or
push
pusha
rcr
sbb
xor
xchg
cmc
pop
push
fs
lods
push
adc
sbb
xchg
scas
push
and
lahf
loop
aad
jns
lea
fistps
sarb
shrl
rolb
in
sub
adc
int
dec
push
outsl
cmp
jns
mov
cmpsl
loope
out
fs
cwtl
sbb
in
and
ret
jo
faddl
or
mov
aas
dec
unpckhps
dec
shlb
dec
pop
ljmp
xchg
inc
test
push
jne
pop
mov
ror
inc
mov
cld
movsb
jb
push
push
out
out
jns
push
iret
loopne
fimull
shlb
test
cli
imul
xor
push
inc
jne
inc
mov
mov
push
fnstsw
xchg
outsl
cmp
push
insb
or
jge
dec
daa
mov
mov
jns
into
jmp
pop
xor
mov
pop
fisttpl
pushf
iret
xchg
or
jg
fisttpl
imulb
lret
aas
in
inc
in
adcb
push
clc
push
aad
fidivrl
insl
fisttps
stc
loopne
cmpsb
inc
mov
daa
push
jbe
cli
fnop
jle
out
push
push
mov
lock
inc
arpl
sbb
mov
out
adcb
aam
repnz
or
sbb
and
sbb
jb
stc
divb
xchg
dec
idiv
dec
cmp
jnp
push
push
pop
mov
or
pop
sarl
dec
xchg
cmp
insl
rclb
mov
test
pusha
sbb
add
aad
mov
js
cwtl
fsub
pop
cmp
xchg
shll
sahf
out
into
iret
xchg
lcall
lods
popf
inc
repnz
sbb
and
insl
add
out
orl
xchg
repz
fwait
loopne
mov
sbb
add
dec
lcall
hlt
dec
mov
call
ror
cmp
cltd
add
int3
sub
dec
or
xorb
dec
xchg
ficompl
dec
ret
in
xacquire
mov
shrl
out
push
push
iret
sbbb
push
lret
or
rcll
pop
into
push
inc
ljmp
adc
jmp
mov
push
int3
jmp
add
pusha
mov
mulb
das
sub
jo
pop
fwait
xlat
inc
jl
jle
sti
xchg
popa
mov
ljmp
xorl
mov
out
mov
sbb
test
mov
push
mov
sti
push
adc
das
mov
push
sbb
imulb
dec
sub
sub
sub
mov
stc
jns
in
test
inc
push
test
push
pop
cwtl
rorl
sub
iret
pushf
enter
xorb
xchg
fnsave
sub
int
shl
stos
into
jmp
and
mov
ret
push
cli
mov
push
movsb
dec
cmp
inc
mov
and
cmp
les
fcomps
call
inc
mov
jp
push
addr16
and
mov
jp
push
and
stc
dec
add
cmc
imul
adc
mov
in
repz
jmp
push
sar
scas
ret
xchg
jg
adc
mov
pop
pop
jnp
xchg
jmp
xor
xor
mov
mov
mov
add
sbb
nop
mov
push
pop
hlt
or
sarb
cmp
cmp
out
mov
inc
aam
mov
mov
sub
lcall
les
mov
or
ljmp
cs
jge
pop
push
fnstenv
insl
adc
push
pop
js
push
scas
addr16
pop
fdivl
and
sbb
lods
or
dec
or
jbe
mov
fwait
inc
mov
sub
sub
xorl
pusha
pop
leave
adc
test
jmp
pop
add
imul
das
inc
je
daa
cltd
fnsave
push
mov
out
ljmp
out
mov
gs
pushf
inc
sbb
sti
pop
imul
pavgb
and
mov
fnstcw
fnsaves
push
xchg
and
push
cmpsl
xchg
inc
xchg
inc
test
push
jns
pop
rcr
cmp
mov
dec
xor
xchg
sub
or
pop
fstpl
rorl
pusha
sbb
mov
sbb
pop
lea
mov
cmp
cwtl
pop
sub
out
clc
jg
push
hlt
or
cmpsl
mov
lods
push
lahf
mov
or
sbb
mov
mov
bound
mov
pop
sub
aas
lock
orb
xchg
enter
out
mov
adc
in
ret
mov
aas
iret
fwait
inc
adc
mov
bound
jmp
cmpsl
je
into
cmc
or
insb
mov
pop
jp
mov
jne
addr16
mov
pop
cmp
push
shlb
pop
adc
mov
sub
ret
insl
outsl
xlat
add
or
sbb
jmp
movsl
setp
cwtl
push
sbbl
jb
div
rolb
shll
insl
testb
ss
or
cli
imul
mov
pop
in
adc
mov
dec
int
lcall
mov
mov
adc
sbb
in
loop
jg
daa
jp
sub
data16
mov
addr16
lret
mov
inc
sbbl
push
iret
dec
cmp
ja
std
cmp
pushl
jmp
fidivl
fbld
shr
add
lea
xchg
lahf
mov
jmp
jns
mov
andl
dec
jno
mov
xchg
pushw
and
lahf
pop
out
out
data16
cmp
and
mov
xor
fs
push
xor
and
fwait
jbe
stos
jl
sub
cmp
xchg
shlb
test
aas
inc
fstps
nop
addr16
inc
add
test
xchg
push
lcall
test
out
test
idiv
mov
jle
es
and
mov
ss
sar
dec
fidivl
cmpsl
jno
lock
mov
loope
inc
push
lahf
and
xchg
mov
and
sub
or
aas
cmp
lea
pminsw
jo
xchg
jb
iret
mov
mov
scas
jecxz
int
call
loopne
sbbl
scas
xor
lcall
enter
xor
jle
cmp
xor
inc
mov
js
add
adc
test
inc
test
out
inc
cmpsl
jmp
out
stos
xchg
inc
mov
nop
pushf
add
in
and
jge
jnp
ret
fwait
xor
test
addl
int3
mov
loopne
or
cmovl
repz
imul
lods
push
push
mov
mov
mov
decb
xchg
xor
mov
pop
xor
dec
push
or
adc
push
inc
sar
or
out
shll
jbe
dec
jl
loop
xchg
ret
sub
scas
ja
mov
cmpsl
jnp
stos
loope
cmpsb
push
mov
inc
cmp
shl
movsb
cmp
push
pop
jno
in
inc
int
scas
ret
shlb
mov
icebp
pushf
jmp
icebp
cmpsl
jg
pushf
or
lds
xchg
sbb
pop
jmp
scas
call
fistl
dec
cmp
add
in
lds
in
rcl
jle
into
sbb
call
add
or
mov
mov
sbb
fucomip
adc
out
xchg
aam
push
daa
test
lods
sbb
inc
out
jne
sbb
fisttps
jnp
stos
insb
cmp
mov
push
fisubs
jb
cmp
sub
in
adcl
sti
scas
lahf
xchg
push
mov
xchg
idivl
sub
repnz
inc
add
push
std
imul
sti
es
shl
or
pop
ljmp
pop
lds
jnp
lds
rcr
jl
xor
dec
leave
mov
scas
ficompl
xchg
push
dec
pop
push
test
cwtl
into
sub
xchg
lods
push
les
push
std
or
mov
lahf
pop
inc
xchg
in
xchg
insl
adc
sbb
push
mov
sub
icebp
out
fs
fwait
nop
into
int
dec
bound
bound
cmp
xor
int3
inc
push
ret
pop
and
outsb
xor
jmp
push
mov
sub
sub
pop
xor
dec
mov
mov
xchg
jns
jmp
icebp
jecxz
push
xlat
into
mov
and
push
js
ds
fdivs
cmp
sahf
sbb
add
mov
subl
adc
clc
cmp
sub
rol
inc
push
jle
or
xor
cmp
fcmovnb
cs
incb
jne
or
pop
cwtl
cmc
fidivrs
inc
push
sbb
call
push
sub
ret
adc
repz
or
adc
movsl
ret
pop
push
lods
pusha
cmp
icebp
out
outsl
aam
xchg
dec
inc
push
test
roll
inc
int3
imul
xchg
or
arpl
sub
and
or
pusha
fs
xchg
jmp
fistpll
xchg
and
add
movb
mov
lock
xchg
outsl
sub
iret
push
pop
sbb
hlt
mov
subb
or
test
adc
cld
push
push
add
pop
dec
cmp
fnstsw
pop
and
xor
fsub
pop
mov
out
pusha
mov
lahf
nop
into
iret
ds
mov
cmpb
movsl
dec
ret
mov
fisttpl
xchg
cmpsl
ret
xor
and
jbe
inc
jb
adc
arpl
int
xor
or
inc
sub
int
adcb
mov
inc
xchg
push
or
cmc
lret
pushl
xor
fs
xchg
mov
inc
xor
xor
lret
sbb
cmp
sub
cmp
inc
aas
out
sub
cmp
stos
movsb
fistpl
int3
out
movsl
imul
rcr
rorl
mov
and
ret
pop
jl
xchg
ljmp
icebp
lcall
adc
inc
cwtl
in
pop
mov
and
outsb
inc
pop
out
fimuls
daa
xchg
xor
cmp
mov
cmp
in
push
call
pop
aaa
and
xor
adc
in
gs
ja
xorb
cwtl
sub
cmp
jmp
lods
loope
pusha
shlb
repnz
push
adcl
add
jne
flds
sbb
jl
js
out
loope
in
lds
ficoml
hlt
mull
xor
bnd
ja
xchg
push
xor
jg
pushf
cli
push
repnz
mov
js
loopne
jmp
xchg
add
xchg
ret
int3
and
hlt
cli
push
jae
arpl
aad
shll
jl
jo
fildll
dec
call
push
les
mov
cmp
jl
enter
dec
mov
pusha
stos
xchg
xor
mov
adc
cmpsl
xor
movsb
stc
mov
pop
adcl
sti
enter
jne
imul
imul
pop
lea
add
push
dec
jecxz
incb
scas
sbb
mov
insl
push
dec
lcall
imul
fstps
xchg
cmp
jmp
in
pusha
fists
mov
ja
outsl
dec
popf
add
mov
add
or
mov
push
cmpsl
jne
repnz
mov
jnp
sub
jns
mov
pop
shll
mov
cmp
lcall
jne
push
andb
jecxz
jno
stos
lock
divl
mov
lcall
les
aad
mov
in
fildl
int3
stos
mov
push
cmp
icebp
test
enter
aas
sarb
bnd
jne
loop
mov
push
push
xchg
mov
je
pop
icebp
dec
jbe
ja
sbb
sahf
mov
je
cwtl
cli
cld
mov
and
mov
xor
mov
inc
add
inc
int3
lcall
jl
pop
loope
ret
pop
jl
repnz
pop
jmp
rcrb
adc
dec
enter
in
cld
xchg
pop
pop
inc
push
lds
xchg
and
negb
xchg
or
stos
pminsw
jl
flds
pop
add
xchg
cmp
jo
push
inc
ja
fneni(8087
mov
inc
push
dec
cmp
sub
fwait
out
mull
cli
cwtl
jbe
jnp
outsl
lcall
add
adc
xchg
pop
es
jae
sub
mov
inc
mov
inc
mov
add
adc
pop
cmp
lods
in
xchg
fadd
mov
movsb
aas
push
imul
mov
jmp
cmc
jno
ds
aad
clc
movsl
aaa
jl
orb
mov
outsl
jns
inc
inc
xchg
jp
pop
mov
push
scas
fmuls
ss
aam
call
fs
mov
cmc
int
add
mov
jge
push
out
and
sub
daa
sarl
loop
mov
pusha
push
xlat
pushf
sti
adc
repz
stc
ja
sbbl
adc
push
mov
aas
sbb
mov
cmp
and
das
rcr
mov
or
mov
ret
subb
faddl
cmp
mov
mov
or
iret
adc
aaa
and
mov
and
ja
insl
xchg
fcomip
or
lds
pusha
test
and
lock
mov
imul
dec
rorl
test
cmp
dec
in
jp
shl
sti
aas
inc
sbb
sub
mov
xor
stos
nop
mov
outsl
loopne
xchg
cli
sub
inc
sub
cs
dec
xor
jne
pop
inc
fwait
pop
sbb
adc
repz
sub
lea
adc
inc
out
dec
mov
lds
sub
fisttps
sub
adc
lret
xchg
mov
push
mov
inc
in
cmp
adc
push
out
push
pop
pop
fs
sub
pop
inc
cmp
cmp
shll
lahf
cli
cmp
pop
sub
pop
push
xor
push
xchg
rcr
pop
sub
dec
stc
lock
jo
mov
mov
inc
pop
sarl
hlt
fnstcw
xchg
dec
ret
pop
adc
sbb
int3
jmp
jmp
dec
xor
lea
test
mov
jge
imul
mov
push
mov
cmp
inc
enter
sub
mov
orb
hlt
xor
or
test
add
xor
imul
out
pop
cmp
scas
cmpsb
push
add
gs
and
push
rcrl
je
rcll
sarb
inc
mov
add
xor
mov
pop
repz
aaa
mov
jb
fimuls
ficoms
loop
insl
sub
shlb
das
xchg
mov
ja
cmp
fcomps
sub
mov
pushf
xchg
adc
xorb
rcll
sbb
mov
adc
mov
enter
icebp
adc
testb
int
roll
loopne
rcl
cmp
and
int
cmc
mov
pop
adc
dec
es
pop
sub
in
test
cmp
das
cs
mov
cmp
pop
aam
mov
cltd
cld
out
pop
inc
xor
inc
cmc
faddp
fstpt
jo
pop
push
lock
fcompl
dec
mov
mov
adc
cmp
or
repz
aam
inc
inc
xor
outsb
iret
cli
mov
mov
fmuls
mov
inc
inc
arpl
mov
fimull
mov
sti
mov
lods
clc
mov
bound
cmc
xchg
and
and
fildll
sbb
ficomps
jle
loope,pn
faddp
stc
mov
hlt
fstpl
xor
push
loop
repz
aaa
sub
ljmp
jge
das
stc
jecxz
jnp
fwait
daa
inc
aad
movsb
loopne
arpl
testl
daa
pop
shlb
andb
and
mov
cmp
movsb
scas
rcr
jmp
and
bnd
jle
pushf
pop
arpl
mov
test
pop
push
fidivs
repnz
int3
stos
repnz
test
and
clc
fsubrl
jae
dec
and
add
fnsave
inc
add
jbe
loope
mov
xchg
push
and
jg
outsb
adc
or
adc
aad
mov
into
outsb
enter
idivb
repz
mov
sbb
pop
mov
hlt
mov
rolb
mov
add
cmp
int
lahf
cmp
in
mov
fwait
in
cmp
imul
fistl
fistpll
out
sub
les
es
call
mov
orl
xchg
cmp
ret
jp
aaa
outsb
ja
jno
dec
jge
orb
push
movsb
mov
icebp
mov
xchg
mov
lods
cmovb
shlb
push
jbe
into
stos
movsl
push
call
sbb
in
test
jp
insb
mov
pushf
adc
dec
sbb
repnz
pop
dec
cld
mov
jge
jae
pushf
ds
xchg
push
test
mov
pop
mov
add
and
sub
or
shrb
sub
mov
inc
ja
fistpll
sbb
and
mov
cmp
mov
out
call
xor
sub
outsl
xlat
test
test
pop
dec
jmp
je
adc
mov
xchg
jmp
dec
je
mov
int3
mov
xchg
ret
sbb
mov
bound
mov
lods
add
insl
pushf
imul
adc
lret
cli
mov
add
push
xor
rcrb
addb
mov
xor
dec
outsb
movsl
cmp
jmp
mov
clc
leave
push
int3
adc
mov
jl
sti
or
and
ja
popa
fcom
pop
xchg
sti
mov
call
mov
jl
mov
cmp
cmp
xchg
pop
fisubrs
jo
iret
inc
popa
sbb
les
sub
dec
pop
mov
iret
adc
hlt
sahf
jle
aaa
jo
inc
loope
xor
inc
xchg
and
movsl
mov
dec
je
bound
cmp
movsb
arpl
dec
daa
mov
jne
mov
adc
or
std
push
cmp
repz
lret
sbb
add
fisubs
add
xchg
push
int3
lcall
cmc
inc
xchg
in
sub
cs
jp
adc
adc
data16
out
js
dec
fldt
inc
sbb
pop
movsl
inc
in
jns
pop
and
dec
dec
or
dec
push
imul
cwtl
xchg
pop
push
outsb
jle
mov
push
push
mov
or
pop
xor
cmpsb
and
sub
dec
fiadds
fxam
jmp
mov
nop
mov
les
test
jmp
push
xchg
inc
push
pop
sbb
xchg
sbb
push
cmp
lods
mov
sbb
inc
dec
jl
es
dec
dec
mov
xor
out
call
out
notb
push
jp
stos
ss
sub
xor
mov
lds
outsb
push
test
xchg
mov
in
repz
sub
sbb
pop
int
inc
mov
sbb
cld
aaa
dec
push
cmp
int
mov
fs
jmp
cs
sub
and
or
add
lret
movsl
sbb
movsl
lret
pusha
xor
sbb
add
cltd
out
jg
cs
stos
xlat
arpl
mov
mov
mov
mov
cmovns
lea
xor
bound
mov
or
sbb
gs
xchg
lock
push
pop
imul
adc
out
test
add
rorl
les
clc
imul
cmpsb
orb
and
scas
outsb
aaa
mov
sub
xchg
mov
fwait
mov
inc
inc
out
xor
xchg
push
je
cld
mov
addr16
pop
and
insb
cltd
pop
adcb
aam
out
inc
push
cmc
jge
and
cmp
jne
push
stos
fs
pusha
xor
test
jle
js
ret
mov
sub
xchg
cs
jge
mov
sub
push
xchg
fsub
jmp
cmp
movsl
jecxz
add
sub
mov
repnz
movsb
add
into
inc
loop
xchg
dec
cmp
or
and
insl
or
iret
sub
in
movsb
ljmp
cmpsb
add
lahf
inc
push
adc
sbb
mov
pop
fdivrp
xchg
ret
pusha
stos
mov
jmp
imul
ljmp
adc
scas
sub
inc
insb
jb
mov
hlt
xor
dec
adc
xor
sahf
xor
ljmp
ljmp
cmp
add
icebp
mov
popa
mov
inc
ja
scas
mov
inc
ret
out
cmc
fdivr
fcoml
mov
sub
icebp
popf
lods
repnz
sbb
adc
pop
dec
adc
and
pop
scas
mov
cld
and
or
sub
adc
out
jbe
stos
cmp
call
rcll
iret
andl
test
or
sti
mov
jo
sub
shll
push
loopne
sub
clc
out
int3
push
cmp
aam
xchg
mov
test
xchg
push
out
xchg
push
lret
jno
mov
cmp
test
mov
push
or
mov
mov
or
inc
pop
aad
movsb
jae
ror
xchg
mov
cmp
push
les
inc
adc
or
stos
push
loope
add
mov
jns
insb
repz
pop
leave
cmpsb
sub
test
xor
dec
jecxz
adc
mov
push
mov
mov
and
insl
sbbb
mov
fisubl
add
or
adc
push
mov
fistl
xchg
popa
sbb
push
inc
jle
or
jb
gs
fs
leave
int
into
enter
and
or
inc
inc
mov
add
lcall
dec
mov
lea
mov
xor
pop
pop
or
mov
jg
into
add
add
popf
lea
hlt
mov
push
arpl
movsl
jo
lods
mov
inc
arpl
cli
xchg
cld
addr16
xor
push
stc
fwait
scas
mov
rorl
test
jge
mov
mov
imulb
lahf
inc
mov
stos
fnstcw
stc
shll
mov
test
mov
stos
jnp
push
aam
xchg
xor
ret
mov
xorl
fadd
mov
sbb
push
jae
mov
mov
fdivrs
add
pop
add
incb
xchg
add
and
stos
orl
xor
mov
lods
mov
int3
xchg
int
adc
lds
jecxz
movsb
int
inc
pop
leave
jbe
andb
es
or
clc
test
inc
mov
pop
rorl
insb
xor
push
sub
iret
adc
cs
or
ss
jne
lahf
push
int3
cmc
lock
jnp
test
jle
aam
sub
mov
imul
add
aad
adc
dec
test
cmp
and
dec
in
lret
mov
dec
scas
mov
das
clc
cmp
ret
scas
and
jae
fistps
pop
xchg
aas
pop
adc
cmc
in
xchg
lock
jle
push
stc
loopne
rcr
mov
das
pop
outsb
pop
xor
stc
and
pop
mov
dec
outsb
leavew
std
enter
cmc
jg
xchg
fistpll
jg
mov
mov
xor
jg
cld
dec
fwait
jecxz
push
cmpl
xor
xchg
movsl
jno
ret
mov
leave
and
adc
jp
ret
xor
test
in
stos
jnp
insb
inc
jmp
stos
sub
push
sub
orb
bound
jecxz
dec
xchg
or
pop
rcrb
and
jae
ja
jno
testl
sbb
lret
sbb
mov
mov
jae
sub
xor
dec
test
rcll
call
jmp
pop
aas
or
lret
pusha
es
and
inc
cmp
cmp
mov
mov
mov
enter
aam
int3
sbb
fwait
and
scas
stos
add
mov
cld
xor
inc
fwait
loope
push
js
div
fcoml
xor
sbb
dec
and
jo
sarb
insl
rcrl
mov
rol
fcomps
aad
repnz
stos
loope
outsb
cmp
and
jmp
add
test
jl
jg
xlat
jmp
mov
mov
imul
sub
les
push
js
sub
lsl
insb
test
int3
mov
mov
arpl
arpl
roll
pop
mov
mov
push
mov
fistps
xchg
cli
cltd
out
mov
sub
xor
mov
aas
cwtl
or
push
popf
sub
mov
xor
test
cmp
xchg
cli
and
shr
xlat
jo
lret
fstpt
loopne
pop
jge
sbb
push
mov
jae
add
aad
cmp
sub
pop
stos
rcl
cs
test
mov
sahf
test
mov
inc
pop
pop
xor
dec
sub
sbb
data16
in
pop
aam
cli
sbb
adc
pop
xchg
sub
fists
jne
lds
mov
insl
xorl
jnp
lock
cli
or
push
xchg
insb
cmp
jp
rclb
pop
adc
lret
add
aaa
sarb
in
add
pop
es
pop
dec
popa
jmp
ret
movsb
fs
into
push
pop
test
fldl
xlat
imul
dec
add
iret
jne
std
test
arpl
fwait
jnp
stc
leave
fnstcw
xor
cld
sti
push
dec
xchg
and
daa
mov
insb
lea
xchg
leave
dec
push
ja
pop
popf
data16
adc
data16
aam
es
rorl
int3
imul
lea
movsl
sbbb
cmp
pop
or
inc
pop
int3
adc
and
add
add
in
lret
aad
pop
mov
push
mov
mov
loopne
sbb
jae
mov
jae
xchg
rcll
lock
data16
fs
push
pop
inc
popf
out
xchg
pop
adc
mov
ficomps
and
push
sbb
sbb
push
mov
stc
and
or
inc
pop
ljmp
stos
ds
or
xor
insl
add
lret
mov
test
orl
sahf
pushf
repnz
jae
push
xor
or
js
lcall
inc
ljmp
and
sbb
orl
jmp
pop
xchg
out
stos
push
pop
vpsrlq
imul
pop
outsl
adc
add
gs
mov
adc
adc
lds
popa
xchg
scas
cmp
xor
lods
daa
mov
lods
clc
movsl
outsb
fwait
jmp
fsubs
aad
call
jo
ss
lock
mov
out
subb
mov
test
in
test
in
xlat
out
ljmp
idivl
dec
jo
gs
jl
mov
dec
insl
imul
jbe
mov
mov
fists
daa
xchg
inc
mov
xor
out
or
jnp
insb
sbb
ljmp
push
out
lods
lret
es
sbb
or
pop
das
cmc
mov
cmp
aas
ret
jmp
cwtl
pop
pop
xchg
sbb
jb
adc
mov
sarl
ja
int
push
outsl
fmul
and
jl
mov
jle
add
stos
jmp
sti
sahf
imul
stc
pop
lcall
and
sub
out
mov
arpl
es
xor
and
mov
js
pushf
int3
movsl
shl
and
jne
push
cmpl
xlat
je
xchg
ljmp
test
pop
icebp
mov
daa
dec
mov
dec
gs
and
jecxz
xchg
or
jb
repnz
push
addr16
push
ss
lock
fs
movsb
outsl
dec
inc
sti
in
xchg
out
movsb
pop
pop
shll
mov
mov
cmp
dec
push
sti
negl
ljmp
pushw
movsl
cld
add
fsub
or
cmp
pop
stos
pushf
loopne
test
roll
sbb
ret
sbb
xchg
test
push
add
lds
es
pop
rcl
sbbl
pop
mov
ret
xor
in
adc
test
inc
add
push
add
int
dec
out
mov
les
add
das
and
mov
mov
into
popa
das
dec
pop
lock
xchg
xchg
xchg
cli
mov
popa
stos
adc
jmp
jmp
add
ss
push
lret
and
cmpsl
jge
mov
xchg
adc
xorb
stos
test
sub
test
das
xchg
rolb
jb
inc
sbb
in
xor
scas
pop
cmc
aaa
pop
or
popa
scas
and
sub
push
push
in
jno
call
jns
fs
sahf
addr16
cmpsb
push
test
pop
in
mov
sub
movsb
cli
dec
or
sti
mov
arpl
and
pop
subl
xor
js
push
push
cs
cmp
jg
push
repnz
push
call
xor
dec
or
enter
pusha
mov
js
pop
mov
fmul
cmp
dec
inc
lret
mov
sbb
stos
jl
cmpsb
sub
in
ja
push
jecxz
mov
js
adc
lcall
cld
mov
test
shl
mov
sbb
sbb
lock
cmp
insb
ret
fimull
sbbb
xchg
push
and
adc
imul
push
pop
xor
dec
jecxz
push
mov
outsl
jmp
sub
push
lcall
ret
pop
mov
sub
cmp
hlt
adc
flds
push
ss
adc
mov
or
divl
inc
push
imul
mov
notb
mov
lods
pop
dec
popa
mov
dec
arpl
sub
lret
sbb
cld
loop
scas
dec
mov
push
inc
adc
fs
shlb
cmovp
call
movsl
mov
push
sbb
push
xor
daa
outsb
push
js
out
int
pop
jmp
xchg
push
clc
cli
xor
sahf
gs
push
or
movsb
iret
dec
das
sub
lret
lcall
mov
jle
in
push
mov
xor
cltd
or
ret
or
mov
jbe
pop
cmpsl
es
sbb
imul
lret
cs
jg
stos
xor
insb
jl
cmpsl
int3
ja
int
add
xor
jp
insb
xchg
jmp
jbe
mov
or
sbb
flds
mov
outsb
insl
mov
or
imul
inc
push
insl
call
add
ja
dec
and
mov
outsl
add
xchg
adc
mov
and
pop
push
xor
aaa
repnz
xchg
add
or
inc
loope
sti
fbstp
scas
ret
add
fisttpll
mov
adc
jl
add
je
xchg
xor
mov
popf
or
out
and
and
cmp
push
stc
mov
ficoml
fisubs
sub
shrb
cmp
dec
jnp
insl
aam
sbb
dec
push
aaa
test
sbb
dec
mov
and
pusha
dec
jmp
data16
sbbb
and
bound
out
sub
push
xchg
ljmp
xchg
test
jmp
pop
adc
mov
xor
sub
mov
mov
pop
lds
mov
cmpsb
rcrl
mov
add
add
mov
and
adc
adc
or
jecxz
mov
loop
fdivp
test
movsb
insb
or
bnd
push
and
or
adc
loope
movsl
inc
ja
dec
jne
jb
es
in
into
aam
mov
pmaddwd
or
in
daa
sti
imul
and
jae
ja
dec
or
xchg
add
pop
xchg
mov
cmp
add
ja
stc
in
push
lds
into
pop
and
data16
aad
popf
xchg
mov
leave
jb
aad
ss
adc
int3
imul
and
jmp
fcomp
mov
pop
xchg
push
testb
ror
or
and
cld
scas
iret
in
xor
clc
shll
inc
lds
pop
sub
jle
mov
mov
mov
sub
ja
lcall
icebp
add
pushf
testb
xchg
jge
loope
sbb
push
jle,pt
mov
jp
dec
cmp
mov
aaa
test
aas
push
push
or
xor
int3
in
pop
lock
test
add
imul
mov
test
and
mov
jle
fisubs
lcall
out
cmp
cmpb
int3
push
push
sti
adc
add
sbb
loope
xor
lods
sub
dec
push
jb
pop
jno
cld
mov
mov
inc
dec
and
mov
pop
jne
fs
or
mov
mov
or
sub
test
pop
clc
cltd
sbb
sarb
cltd
hlt
sarl
daa
inc
adc
mov
or
js
push
fmuls
dec
sbb
je
fninit
std
fs
aaa
xlat
ret
and
fisttpl
outsl
jae
lods
es
xor
loope
cmpsl
and
mov
xchg
lock
test
push
scas
cmp
jg
aam
pop
mov
cmpsb
mov
push
or
xor
cmp
jecxz
lods
mov
out
incl
cmpsb
out
mov
jg
mov
dec
jno
cmp
sbb
mov
pop
pushf
insl
cmpsb
mov
add
lret
popf
insb
je
mov
xor
repnz
daa
adc
fs
hlt
out
pop
sbb
outsl
sbb
ficoml
jg
xor
mov
insl
fmuls
pop
and
add
dec
pop
sub
aam
pop
xchg
xor
mov
xchg
sub
addr16
cmc
and
mov
jo
inc
push
sbb
dec
flds
mov
lcall
pop
xor
cwtl
inc
out
lds
add
jnp
lods
push
push
ss
mov
jg
inc
add
pop
sbb
in
and
inc
cmp
jg
mov
adcl
mov
jnp
pushf
and
cld
mov
dec
jge
clc
jb
jo
out
sub
sbb
mov
jae
ficompl
call
test
inc
dec
xchg
rcl
mov
and
movsl
lods
hlt
out
mov
cmc
xchg
add
sbb
sub
push
mov
lods
sbb
dec
cmp
imul
icebp
jno
test
fldl
fdiv
xlat
int3
cmp
cmp
and
push
in
fdivrl
stc
inc
adc
out
mov
mov
lea
addl
sub
mov
call
xchg
or
dec
pop
mov
insb
fadd
cmc
push
std
int
add
fldenv
jae
fs
rcll
sbb
xor
dec
add
adc
repnz
push
stc
pop
lret
pusha
xor
mov
sarl
sbb
outsb
dec
pop
nop
and
enter
addl
divps
pushf
push
ljmp
adc
enter
pop
sbb
repnz
lods
hlt
repnz
ja
xor
pop
out
sti
dec
mov
mov
push
out
mov
sbb
imul
sbb
mov
pusha
popf
shl
filds
mov
pop
vmsave
jmp
iret
xchg
mov
and
push
stc
or
cld
fs
shll
popf
jmp
stc
add
or
adc
daa
pop
push
pop
fs
mov
pop
cmpl
test
mov
push
test
scas
clc
scas
mov
add
adc
adc
pop
idiv
jl
aam
cld
inc
loop
cmc
arpl
mov
mov
mov
mov
jl
mov
insb
dec
pop
mov
jge
fildll
xchg
pop
pop
jge
push
jl
cmp
inc
dec
push
jno
cmpl
push
sbb
in
and
lods
jne
lret
mov
imul
enter
subl
repz
ret
inc
jo
mov
cli
adc
sbb
jecxz
ljmp
in
outsl
leave
les
fbstp
aaa
pushf
dec
pop
jae
fbld
dec
add
inc
and
sbb
push
cmpsl
cmp
xor
subl
outsb
mov
vshufps
js
test
or
leave
sub
cwtl
fidivs
dec
popf
cwtl
mov
divl
sbb
popf
dec
stos
mov
imul
mov
jg
cmp
shl
icebp
mov
les
dec
enter
xchg
jp
out
xor
hlt
mov
pop
cmp
in
jge
pop
inc
and
xchg
fwait
sbb
xor
jo
sbb
sub
out
xorl
hlt
sbb
into
adc
xor
decb
out
outsb
inc
dec
mov
leave
popa
mov
adc
jo
stos
aas
jnp
in
iret
pop
sbb
jecxz
mov
push
cmc
mov
push
mov
les
aaa
and
rorl
test
inc
fldl
aam
lds
push
mov
fsubs
out
pop
test
dec
movsb
add
ja
adc
xor
out
push
scas
adc
jae
inc
pop
add
push
pop
movsb
imul
inc
fdivl
loop
mov
and
mov
subl
cmp
jp
es
sbbl
pop
jno
fs
sub
shrl
xor
fimull
xchg
pushf
mov
ficoml
mov
sbb
mov
push
xchg
xchg
or
repz
xor
ret
mov
les
sub
or
mov
popa
scas
jnp
fsubrl
ret
popf
cmpb
mov
sub
das
sub
xchg
adc
jle
push
cld
or
mov
int
lcall
arpl
call
scas
jo
das
or
pop
imul
sar
mov
xor
stos
cli
cmp
cmpsl
xchg
maskmovq
testl
inc
mov
pop
jmp
push
hlt
mov
xor
jno
xchg
jbe
ljmp
and
in
loope
sbb
inc
xchg
je
push
xchg
xchg
fdivrs
arpl
adc
int3
mov
lods
jb
lods
lock
repz
inc
xor
sub
fiaddl
mov
sbbl
pop
test
addb
in
add
aaa
sbb
pop
test
sub
push
test
mov
insl
sahf
or
mov
xchg
mov
add
cltd
cli
scas
sbb
xchg
fwait
ja
imul
test
jge
std
pop
inc
cmp
loopne
inc
insb
out
jp
arpl
notl
popf
push
addr16
jle
in
jl
movsb
jae
js
test
loopne
mov
addr16
mov
les
cld
sbb
and
test
lret
out
imul
bound
sbb
pop
mov
dec
ret
inc
jae
bound
cli
mov
cmpsl
lds
mov
xchg
mov
lods
mov
out
ljmp
push
fwait
cmpsb
mov
lret
arpl
ds
sbb
mov
jp
repnz
repz
shlb
jmp
or
push
pop
les
hlt
ss
xor
aas
rcr
mov
jg
das
pop
test
sbb
fwait
mov
test
call
xchg
jbe
cmpsb
push
lods
or
lahf
cs
enter
test
hlt
add
add
adc
enter
sub
out
leave
das
pushf
mov
xchg
cli
pusha
fnstsw
mov
sbb
inc
hlt
fisubl
mov
mov
popa
test
js
or
sbb
mov
inc
fistps
pop
mov
in
add
xor
inc
aaa
pop
rcll
es
rep
jge
sbb
mov
out
fmull
lock
mov
fcmovbe
add
dec
dec
push
xchg
hlt
xchg
insl
xchg
ds
dec
mov
jae
outsb
aam
jl
sub
xchg
add
fs
sbb
in
and
and
sbb
idivb
cmp
push
push
push
pop
mov
and
cmp
jb
and
push
scas
les
test
or
jbe
stc
lods
sbb
xchg
aam
or
lea
std
shrl
clc
mov
lret
sub
std
lret
dec
lock
aaa
aaa
mull
xor
out
roll
pop
mov
test
jle
sbb
das
ret
test
add
mov
insb
dec
mov
adc
ljmp
stc
rol
ficoml
push
scas
adc
int
cmp
scas
xchg
cmp
sbb
inc
test
subb
mov
push
inc
push
ds
mov
mov
loopne
aam
outsl
fldl
fcompl
into
cmp
xor
xlat
lock
add
and
leave
stc
mov
jae
or
xchg
loopne
out
jg
cmp
sub
inc
aas
cmp
inc
adc
rorb
sahf
cmp
add
jae
xchg
ljmp
add
jl
dec
insb
cmpsl
or
push
lret
fisubrl
add
jl
inc
inc
cmp
adc
imul
xchg
pushf
std
mov
or
xor
and
shrl
stc
jg
movsb
fsubrl
mov
sub
sbb
pop
imul
lods
cmpsb
push
cmc
pusha
cmp
ffree
dec
lea
sub
xchg
xchg
xchg
aaa
inc
jl
insb
mov
fmuls
shlb
icebp
inc
and
pop
ret
and
enter
and
inc
cmpsb
mov
sub
mov
pop
xchg
add
ds
jb
das
int3
and
negl
sbb
or
xor
sti
in
mov
movsl
lods
inc
pushf
push
xchg
pop
mov
div
aam
xchg
xor
int3
fsubrl
cltd
pop
jle
fdivrl
jge
aas
les
sub
cmp
in
rolb
mov
aam
pop
movl
mov
in
push
test
mov
mov
outsl
adc
sbb
mov
cmp
insl
lret
sbb
cmp
out
aas
dec
int3
lret
orl
push
je
xor
test
in
jge
sbb
cli
mov
cmc
mov
ss
aaa
je
shl
xor
push
mov
xor
sbb
mov
mov
aaa
push
sub
outsb
stos
leave
sub
add
ja
aaa
push
aad
push
mov
push
dec
mov
pop
in
ss
mov
mov
lock
adc
mov
addr16
pop
pusha
sub
mov
daa
and
jg
xchg
or
fistpl
mov
les
inc
fsts
leave
xlat
das
mov
cmp
push
inc
lret
out
repnz
jno
cmpsl
xor
fnstsw
dec
lds
insb
adc
sti
xchg
push
sbb
addr16
jbe
je
imull
push
inc
mov
pop
adc
addr16
push
ficompl
lcall
mov
iret
dec
outsb
xor
sub
xlat
lret
cwtl
fisubs
shll
mov
mov
xor
dec
sbb
adc
out
or
sbb
pop
fisubrl
and
lods
int3
xor
movsb
sti
loope
insb
mov
push
clc
cmp
and
sub
mov
and
mov
add
addb
pop
inc
sbb
add
sbbb
ret
fstl
inc
cwtl
push
out
sub
jae
out
add
into
or
std
jmp
mov
mov
jg
pop
or
push
lds
lock
adc
stos
adcl
push
nop
arpl
aaa
mov
or
mov
xchg
fwait
pop
xor
dec
test
cmp
cwtl
into
mov
adc
stc
and
mov
jb
clc
enter
dec
jp
fsubs
loopne
loop
push
xlat
stos
lea
sarl
cltd
sub
cld
inc
pusha
imul
std
hlt
add
xchg
loope
push
ljmp
push
repz
std
ret
push
or
popf
cmc
shlb
test
pop
push
stos
out
dec
loop
pop
push
mov
cmp
xor
lds
sub
sbb
and
adc
sbb
and
testl
lods
cmpsl
in
mov
repz
mov
std
and
fisubrl
push
cli
fisubrl
popf
cs
adcw
dec
pop
pop
shlb
push
add
clc
fmul
out
jno
xor
mov
popa
add
xchg
int3
dec
jge
push
insb
jl
sub
sbbl
loop
popa
cmpb
sub
jae
cmp
push
cli
jns
imulb
cwtl
int3
xchg
mov
fwait
or
sahf
sub
xchg
fwait
sbb
movsl
lret
pop
pop
sub
xchg
dec
xchg
jb
mov
mov
lods
and
mov
sbb
aam
mov
or
xchg
and
sub
call
in
sti
pop
cs
jg
fidivrs
inc
test
pushf
aad
push
jae
out
push
cld
es
lret
mov
lret
sysret
shrb
pop
lret
mov
lea
les
push
enter
cmp
mov
in
in
xchg
mov
ss
imul
sahf
call
pop
faddl
mov
ljmp
les
bound
loope
loope
aad
sti
push
push
pop
pop
cmp
adc
out
pop
lcall
scas
push
fmuls
pop
mov
cmpsb
sbb
cmp
jno
push
out
jne
dec
hlt
jge
pop
adc
not
jbe
mov
dec
outsb
pop
xchg
pop
push
imul
xor
call
clc
pop
xchg
rorl
loop
push
and
fdivr
pop
fcmovnb
mov
pmullw
lods
std
jno
xchg
pop
shll
daa
mov
dec
jg
icebp
out
fdivp
test
mov
mulb
sar
into
cmp
clc
outsb
aas
shlb
sub
mov
xlat
adc
and
xor
dec
xchg
push
pop
cmp
outsb
mov
ret
xchg
xchg
jae
js
pop
jmp
pop
es
or
out
nop
call
int3
aaa
out
aaa
xor
in
push
out
out
pop
adc
xchg
jecxz
ja
add
cmpsb
inc
mov
aam
xor
ds
in
mov
jmp
inc
fs
or
push
sbb
out
dec
dec
xor
jmp
sbb
mov
iret
mov
push
jge
xchg
or
mov
dec
sbb
xchg
test
aad
ds
sbb
inc
inc
dec
ljmp
fwait
jno
pop
out
shrb
lcall
push
adc
mov
push
push
jl
sbb
pop
fcomps
cmp
push
lods
xor
pop
adc
sbb
scas
dec
inc
dec
lds
and
push
mov
pop
in
lret
inc
mov
pop
jl
popf
in
popf
mov
filds
hlt
mov
or
jecxz
popf
std
icebp
or
or
pop
or
add
jmp
scas
sub
mov
xor
addb
dec
inc
xor
mov
pmulhw
mov
shlb
add
jle
mov
movsl
pop
repz
das
add
mov
test
hlt
pop
xchg
push
addl
not
xlat
sub
jle
mov
add
leave
xor
lahf
dec
mov
cltd
fimull
aaa
insb
into
cmpb
push
mov
lahf
pop
subb
mov
cs
outsb
lock
ds
xchg
jnp
mov
or
pop
out
ljmp
add
pusha
aas
cwtl
mov
enter
imul
test
xchg
rorb
rolb
jp
pusha
sbb
insl
sbb
imul
mov
test
and
xchg
stos
and
add
lea
xlat
adc
xrstors
dec
aas
cli
js
mov
clc
add
enter
scas
dec
push
ds
fists
loop
adc
jnp
lds
pop
xlat
in
mov
sahf
sub
mov
and
repnz
xchg
xchg
push
gs
cmp
stos
cmp
loope
xor
xchg
jl
cli
popf
jo
loopne
cmp
loope
xor
test
icebp
bound
cmp
aaa
gs
ss
cmp
mov
jnp
jbe
mov
cmp
add
jne
insl
add
adc
ret
push
push
mov
sub
push
sbb
sahf
ffreep
pop
mov
pop
pop
dec
adc
lods
in
jnp
dec
ljmp
push
push
push
mov
inc
adc
jb
jns
movsl
dec
roll
xchg
pop
xchg
push
sbb
pop
mov
mov
test
sbbl
test
lcall
and
mov
dec
ffree
mov
add
mov
jb
popa
cmc
mov
repz
subl
pop
test
jg
add
mov
outsl
mov
gs
inc
add
cvtps2pd
push
or
mov
pop
jmp
inc
mov
push
dec
mov
stos
mov
jns
pop
and
adc
arpl
dec
or
pop
rol
shll
dec
inc
popa
add
int
std
add
or
test
test
ret
pop
lret
push
fidivrs
ja
hlt
xchg
insb
pop
scas
addr16
cmp
imul
add
jmp
jo
jb
sti
xchg
pop
sbb
push
push
or
cmp
dec
pop
mov
jecxz
daa
xchg
nop
xor
xacquire
jb
sub
and
xor
push
and
cmp
cmp
jne
dec
dec
sub
mov
ds
mov
inc
jne
sbb
pusha
fdivrl
imul
cmp
dec
movsl
int
rcrb
imul
ret
cmp
adc
push
stos
int
sub
add
mov
popf
jge
lcall
cmp
inc
xor
mov
jmp
idivb
jmp
xlat
adc
aaa
jo
cmp
lret
loop
jmp
test
in
sbb
call
enter
mov
pop
out
mov
imul
inc
ljmp
test
dec
testl
in
cmp
mov
push
fdivrs
xchg
cmp
mov
xchg
stos
sbb
mov
stos
std
push
push
lds
lret
in
jnp
pop
stc
push
xor
add
rcrl
popf
sbb
aas
not
dec
stc
mov
sub
jns
jo
repnz
mov
jmp
adc
pushf
jle
pop
cwtl
loop
sub
and
add
jmp
enter
sub
sub
dec
or
sbb
lret
sub
cltd
adc
jns
xor
push
dec
fnsave
daa
cmpb
jno
xchg
push
addr16
xor
adc
sti
dec
xchg
scas
inc
aam
outsb
mov
mov
xchg
pop
and
inc
xchg
scas
out
fwait
test
mov
push
imul
lods
in
das
clc
mov
pop
faddl
cmpsb
sub
loop
push
push
shrl
lahf
sub
nop
xchg
xchg
and
jle
dec
jno
lret
das
push
mov
stc
in
stc
sub
or
mov
add
sub
xchg
fldt
or
movsb
inc
cmp
rcr
sbb
or
cmp
popa
pusha
aad
adc
xor
fsubl
inc
imul
lds
dec
andl
mov
and
mov
int3
inc
sbb
into
mov
or
xchg
sbb
imul
std
lock
cltd
insl
inc
push
xchg
shr
and
mul
adc
add
add
jo
pop
sub
lea
outsl
inc
and
or
mov
mov
ret
push
dec
jno
test
lods
std
xor
cmpsb
lock
ja
arpl
mov
loopne
insb
push
or
xchg
test
xor
sub
and
imul
dec
jae
pop
fwait
je
les
add
cwtl
mov
ds
pop
loopne
cmpsb
sub
xor
ss
dec
cmp
fmuls
hlt
and
sub
push
pop
mov
lret
pop
xor
sub
dec
int3
xchg
cmc
inc
sub
and
xor
std
sub
cmp
or
movsl
dec
xchg
push
in
cmc
push
dec
loopne
cmc
and
das
mov
fnsave
sbb
xchg
in
mov
push
in
xor
roll
dec
or
lret
add
aas
shrl
das
sbb
xchg
jno
sti
cmp
popa
loopne
or
push
clc
and
jb
push
jae
cmp
jns
popf
mov
xor
jae
sbb
int
xor
movl
push
push
aad
jmp
mov
scas
xchg
int3
rolb
lods
add
sub
dec
imul
cmp
in
dec
enter
cmc
hlt
arpl
cmp
cmp
jg
adc
leave
push
mov
cmp
test
mov
inc
cmp
cmp
mov
mov
sti
dec
adc
push
sbb
jnp
lea
lods
dec
xchg
mov
lods
imul
in
sbb
loop
xlat
sbb
rclb
lods
sbb
and
lds
xor
jg
dec
cltd
mov
inc
inc
out
push
xor
punpckhbw
jg
mov
iret
cmp
ret
rorl
clc
mov
and
xor
ss
cmp
leave
loop
bound
dec
jnp
sti
add
sbbb
aaa
or
sbb
faddl
sbb
mov
cli
stos
mov
mov
imul
mov
cli
jmp
pop
out
cmp
repnz
inc
mov
xchg
mov
repz
pop
cmpsb
mov
aam
imul
enter
mov
mov
stos
dec
xchg
cmpsl
sbb
int
dec
mov
xchg
fimuls
dec
aam
aad
aam
pop
mov
pusha
arpl
popf
sbb
fucomip
pop
push
pushf
gs
out
xor
and
cmp
push
sbb
stc
mov
jp
in
push
jmp
icebp
mov
mov
mov
imul
jmp
pop
mov
divb
pop
stc
cmp
test
sub
rorb
js
pop
sahf
xchg
ds
sub
in
xchg
mov
xor
andb
mov
and
iret
test
push
insl
dec
and
js
ret
les
jp
rcll
mov
mov
arpl
in
test
rcrl
and
out
xchg
push
and
pop
fistpl
in
les
fidivrl
mov
negl
pop
pop
dec
sub
mov
bnd
pusha
sti
shll
andb
mov
jbe
icebp
std
xlat
andl
push
popa
sbbl
daa
mov
cs
pop
and
nop
fs
int3
lahf
cmp
cmpsb
in
lods
rolb
inc
aad
mov
xor
loopne
lcall
shlb
rorb
pop
adc
pushl
or
call
jg
mov
popf
cmc
sahf
jp
mov
cmp
push
es
cmpsb
icebp
xchg
loop
cmp
mov
ret
pop
fs
ljmp
in
cmp
pop
pop
xchg
mov
insb
mov
push
or
aam
int3
push
popf
fsubr
mov
xchg
dec
dec
pop
cmpsl
in
imul
push
push
repnz
addb
mov
and
insb
and
push
int3
pop
add
jb
mov
addr16
lock
fcomps
mov
lahf
pop
cmp
movl
dec
jge
dec
mov
push
push
int
push
into
cmp
clc
mov
rorb
ret
fwait
into
adc
fucomip
mov
cmpsb
daa
xchg
aad
mov
lods
mov
lods
jmp
shl
add
sub
or
add
jecxz
pop
mov
add
lods
cmp
adc
jmp
movsl
cmp
repnz
popa
arpl
les
fwait
add
or
sbb
pop
add
scas
mov
mov
repnz
xchg
rol
repnz
mov
fwait
loop
dec
sub
out
popa
mov
stos
dec
or
mov
into
gs
push
mov
sub
iret
lock
push
sbb
sub
ljmp
push
xchg
rorl
sahf
xchg
ja
hlt
test
divb
push
sub
adc
out
adc
mov
fstps
fnstcw
adc
scas
lock
inc
dec
inc
dec
mov
mov
add
cmpsl
and
dec
sub
push
pop
out
pop
mov
xchg
push
mov
popf
push
scas
xchg
or
or
loope
out
mov
fstl
jo
adc
subb
scas
jns
call
jbe
test
pusha
dec
jecxz
push
mov
aad
loop
xchg
orl
mov
fistpl
sub
scas
sarl
mov
mov
xor
aam
ds
stos
pop
mov
mov
xchg
test
js
pop
jmp
cmp
arpl
cmpsb
jge
ret
sbb
xchg
ret
movsb
sbb
inc
xchg
jp
mov
rolb
and
add
pop
adc
push
adc
cli
js
fidivrl
or
jnp
dec
lret
push
out
aas
test
inc
inc
les
gs
dec
xor
and
dec
adc
xchg
cmp
sahf
sbb
mov
mov
out
pusha
leave
sub
mov
lods
loopne
in
push
sub
dec
jp
dec
push
sbb
adc
sbb
and
sbb
jecxz
xor
mov
repnz
jb
shl
lods
rol
cmp
ret
pop
jmp
mov
xadd
push
xlat
mov
adc
mov
mov
push
fldt
outsl
and
sub
add
loopne
jmp
rorl
add
mov
mov
mov
gs
pop
ficoms
push
cwtl
pop
xchg
sub
pusha
lds
mov
pushl
xchg
mov
jne
rcr
fstpt
les
repz
mov
pop
in
inc
jo
sub
scas
cmp
mov
adc
les
fidivrs
test
shl
cltd
inc
stos
iret
icebp
or
xor
push
xor
inc
pop
lcall
mov
mov
pop
jne
mov
jo
cmp
push
cmp
aam
lret
fld
js
mov
aas
out
mov
pop
test
jno
movsb
repz
pop
ss
std
lods
xor
stc
imul
arpl
xchg
mov
mov
xor
sbb
loop
jbe
pop
xchg
adc
cli
sbb
sbb
pop
in
mov
sub
sbb
mov
call
mov
push
mov
bound
sbb
sbb
shlb
mov
stos
cmp
and
pop
inc
ljmp
pop
mov
add
outsl
and
imul
adc
inc
inc
test
mov
mov
scas
sbb
cmp
loope
out
in
pusha
or
out
cwtl
mov
pop
xchg
sub
in
fcomps
sub
jecxz
mov
cmp
fnstcw
mov
inc
jp
rclb
pop
in
or
xchg
data16
negl
int3
mov
dec
or
dec
or
mov
fdivrs
js
mov
out
pop
bound
add
stc
aad
push
jbe
or
int
cmp
push
lcall
out
arpl
cbtw
loopne
and
or
addr16
fimull
xchg
mov
in
out
stc
jne
cmp
sub
pop
hlt
daa
or
pop
push
inc
mov
cmp
or
ja
das
pop
loop
xchg
es
in
jecxz
rol
clc
lcall
jo
in
jae
jo
repz
les
pop
mov
insb
sbb
adc
lods
in
adc
lods
cmpsl
mov
inc
sbb
push
into
mov
sti
stc
adc
subb
push
pop
cmp
outsb
enter
mov
xor
inc
add
out
sbb
xchg
repnz
and
jg
stos
pop
test
call
pop
pop
mov
repnz
subb
addr16
addr16
nop
or
pop
sub
or
sti
xchg
adc
xor
mov
xchg
hlt
addb
inc
lcall
daa
dec
daa
pushf
dec
fwait
xchg
stos
sbb
fldenv
movsb
or
jg
sbbb
aaa
sub
bound
ds
in
pop
pop
lds
je
xchg
test
idivb
inc
add
push
fcmovu
and
dec
or
push
cs
ljmp
clc
sbb
and
in
adc
xor
in
hlt
pop
cwtl
mov
repz
in
sub
imul
mov
inc
sub
and
add
cmp
or
dec
add
mov
aad
xchg
sti
push
loopne
xor
mov
sub
adc
jle
repnz
out
fwait
stc
dec
jns
jo
sarl
mov
mov
jne
ret
fisubrs
add
pop
lods
add
cltd
pop
add
mov
clc
in
jmp
int
in
xor
stos
inc
test
and
int
sub
dec
fstpl
outsl
shll
inc
div
ljmp
mov
cld
fmulp
mov
je
lret
sarb
and
je
push
shl
addr16
outsb
repnz
cmp
mov
mov
lods
dec
adc
rcrb
cli
icebp
lcall
lods
cs
enter
das
cltd
xchg
leave
add
sbbl
mov
cmp
and
insl
aad
pop
clc
in
sbb
mov
adc
or
inc
dec
push
mov
popf
sti
xor
mov
push
push
cli
pop
xchg
cmp
movsl
jp
fstl
subb
pop
mov
xchg
test
test
fucomi
sbb
bound
xchg
out
dec
add
pop
aas
gs
ljmp
out
dec
lods
jge
push
loopne
inc
or
push
sbb
lcall
and
out
xchg
sbb
inc
das
dec
into
pop
xchg
xchg
pop
mov
jns
int3
dec
int3
fists
imul
aad
and
and
xor
lods
adc
push
push
dec
pusha
sub
outsl
pop
sbb
jmp
shr
dec
jo
sbb
test
xor
test
dec
mov
xor
pop
lods
xchg
jbe
sbb
mov
push
inc
mov
pop
loope
xor
shrb
rorb
jecxz
ds
push
call
or
enter
cltd
or
mov
pop
cmp
mov
pop
pusha
adc
in
pop
inc
pop
dec
xor
mov
hlt
mov
jbe
mov
xlat
push
add
roll
sbb
sbb
popa
mov
jne
add
shll
mov
mov
adc
jg
roll
lock
jecxz
fistps
loopne
pop
rcll
test
mov
pop
shrb
data16
xchg
xchg
clc
or
leave
arpl
mov
inc
adc
jle
ret
pop
mov
outsl
jae
inc
mov
pop
icebp
jae
adc
jmp
add
mov
fs
add
pop
lret
shrb
cmpb
xlat
movsb
xlat
mov
pushf
mov
xor
stos
aam
lods
test
sub
mov
jle
mov
pushf
jns
repz
push
dec
in
loope
lcall
popa
push
es
xchg
sbb
xchg
imull
or
xor
test
repz
test
add
xor
mov
jne
push
jecxz
mov
das
arpl
adcb
add
lahf
mov
mov
call
bound
sub
mov
adc
pushf
jp
inc
outsb
ja
cltd
sbb
adc
mov
add
xor
iret
lahf
nop
mov
mov
adc
pusha
fsubs
movsb
sub
movsl
xchg
pop
out
pop
lock
into
subl
nop
popf
cmp
enter
sbb
xor
mov
mov
pop
cmp
mov
cmp
icebp
or
lock
xor
test
iret
mov
pusha
out
and
push
mov
inc
jmp
xchg
inc
and
cmp
lea
stc
jb
test
push
push
jecxz
ss
mov
iret
dec
lods
lock
fildl
sub
and
and
add
enter
out
sub
lcall
ljmp
add
xchg
sbb
pop
shlb
xorb
xlat
cmp
cltd
test
add
out
arpl
xor
pop
pop
xor
sbb
lods
cltd
lock
inc
mov
incb
idivb
insb
pop
cli
mov
ljmp
fistpl
addr16
inc
mov
or
add
jmp
sbb
and
xchg
lahf
xor
ret
jb
pop
xor
imul
lcall
inc
insl
sbb
inc
mov
cmp
cmp
out
in
das
out
loop
push
push
and
fsubs
daa
ljmp
mov
dec
add
cmpsl
fwait
ljmp
cmpsb
jle
cltd
fsts
cmp
adc
or
fcoml
mov
ss
lahf
adc
mov
ss
sub
jae
mov
clc
mov
sbb
es
popa
xchg
outsl
ficompl
mov
lds
mov
inc
mov
sub
jnp
dec
iret
pop
adc
in
add
cmp
dec
insl
jno
push
cmp
or
shlb
lahf
mov
push
inc
cmp
dec
push
xor
lods
scas
dec
or
cmc
cmp
roll
cmp
movsb
jnp
lret
in
addr16
scas
xchg
imul
fldenv
push
lret
pop
adc
add
cmp
and
fwait
out
fisttps
mov
mov
ljmp
repz
scas
out
pop
sub
add
add
pop
stos
in
shlb
inc
or
pop
sti
pop
sar
stos
jnp
data16
loopne
ja
sbb
adc
outsl
int
xchg
insl
cli
cmpsl
push
add
popw
adcb
or
sbb
mov
filds
xchg
fsubl
mov
or
cmpsb
mov
sbb
xor
dec
or
test
adc
mov
cmc
movsl
mov
sub
fnstenv
dec
xchg
fadd
insb
sbb
cmp
mov
vmovaps
shll
dec
fldcw
scas
pop
sbb
pop
inc
loopne
in
mov
cs
pop
cmp
or
dec
pusha
std
push
cmc
insl
dec
push
rcr
mov
sti
jmp
jae,pn
pusha
mov
dec
jecxz
push
pop
insb
and
or
out
pop
stos
loop
jae
mov
leave
hlt
add
les
ja
test
test
ss
sbb
and
or
adc
and
pop
outsb
mov
int3
push
outsb
jl
ja
jg
mov
lods
xor
loopew
cld
fwait
pusha
xor
and
push
dec
adc
or
lahf
cmpsb
jmp
push
out
shrb
xor
and
inc
pop
test
pop
sub
dec
insl
push
aad
adc
enter
push
cmp
cli
loop
lock
and
cmp
outsl
imul
in
mov
fs
dec
push
js
icebp
or
pop
ja
inc
sub
call
mov
xchg
and
mov
dec
adc
insl
and
cwtl
aaa
shlb
mov
dec
jge
ljmp
out
sbb
jo
popf
add
adcb
iret
cmc
aas
mov
mov
pusha
push
aam
mov
dec
cmp
cmp
adc
or
mov
push
aaa
push
movsb
and
push
insl
daa
mov
xchg
pop
xchg
fadds
jae
xchg
in
ljmp
ds
push
popa
or
inc
inc
outsl
push
int3
lea
cld
paddq
or
mov
aad
pop
test
scas
clc
sbb
mov
ror
jns
jnp
pop
and
dec
stos
in
push
repz
js
loop
into
enter
shl
hlt
es
xor
cmp
sub
insb
andl
inc
and
xor
es
cmpsl
ss
adc
add
out
or
sahf
iret
ja
call
movups
push
mov
sub
mov
movl
daa
gs
divl
pop
out
daa
mov
mov
sub
mov
cmpsl
jp
lock
in
sub
mov
aam
xor
lcall
lods
iret
cmp
mov
xor
aaa
int3
stos
sbb
and
mov
pop
leave
int
aaa
test
add
mov
jge
cmp
sti
mulb
cmp
test
mov
hlt
je
sub
push
sbb
inc
cli
lock
sbb
jg
cmp
in
lret
ja
les
movb
or
push
loopne
xlat
and
imul
std
addr16
or
xchg
cli
stc
inc
pop
xchg
test
jg
popa
jle
cmp
push
test
ds
aas
test
add
aam
mov
jl
subl
pop
mov
mov
movsb
das
inc
xchg
negl
pusha
adc
inc
xchg
or
push
imul
hlt
cmp
pop
mov
pop
lds
loop
sti
lcall
shll
or
leave
mov
aam
mov
imul
insb
sahf
nop
shl
fidivrl
sbb
xchg
mov
inc
ljmp
or
push
int
outsb
or
lock
dec
shlb
std
notb
mov
xor
jno
inc
popa
xchg
cmpsb
mov
pop
sbb
inc
mov
test
xorb
and
fsubl
cmpsb
fwait
push
fnstenv
mov
pop
mov
pop
dec
jbe
adc
mov
ss
mov
and
test
sbb
pop
sbb
inc
push
push
out
mov
insb
adc
popa
ljmp
push
jnp
and
mov
nop
mov
sbb
sbb
int
stc
popa
lods
xchg
bound
cmp
icebp
mov
jecxz,pn
insl
pusha
ja
pop
aas
cmc
adc
cmpsl
pop
push
push
or
out
testb
mov
jmp
lods
push
stc
mov
push
fnstcw
mov
jp
pop
jle
xchg
mov
inc
and
sub
out
std
das
sbb
pop
xorb
dec
adc
enter
daa
ret
xchg
lret
push
xchg
inc
out
stc
pop
dec
or
rol
cmp
fnstenv
mov
xchg
mov
rorb
je
mov
out
inc
cltd
jmp
sub
in
dec
adc
mov
pop
push
pop
and
insb
add
push
and
int
sub
pop
aaa
mov
inc
inc
sbb
push
sahf
clc
cmp
sti
mov
jl
cmpsb
push
stos
stc
mov
je
xchg
int
enter
sub
sub
daa
sbb
fistl
cmp
repz
jns
shl
pmaxub
cmp
pop
dec
cmpb
insl
leave
inc
mov
and
subl
fwait
outsb
jl
xchg
push
dec
gs
xchg
push
jnp
xchg
in
es
lret
bound
imul
or
jae
ss
faddl
jb
push
sub
not
or
cmp
or
xchg
addl
sub
mov
sbb
add
psubsb
cltd
loope
add
xor
jmp
int3
sub
leave
test
mov
mov
pop
lret
les
mov
out
ss
imul
push
xchg
push
mov
mov
mov
xor
mov
cmpsb
mov
lods
adc
mov
cmpsb
cmpsl
push
push
xchg
push
out
pushf
ret
adc
adc
xor
jp
cmp
jge
cmpsl
dec
stos
and
xor
bound
mov
xchg
mov
mov
test
bound
or
out
xchg
orb
mov
hlt
push
out
shlb
fistl
mov
mov
fstl
cmc
push
fnstenv
cs
push
mov
push
or
mov
cmpsl
sub
mov
push
cmpsl
inc
xor
les
inc
add
mov
ljmp
or
jecxz
clc
movsl
and
addr16
ret
add
jl
scas
pushf
enter
scas
push
lret
imul
dec
jl
insl
jle
pop
mov
icebp
xor
mov
insb
bound
push
jae
stc
xor
sub
stos
rcl
sub
fdivl
push
pop
sbb
mov
int
mov
mov
xchg
xor
mov
jmp
js
sbb
popf
movsl
aad
mov
xchg
ds
pop
sub
aaa
addr16
imul
dec
or
cli
xchg
dec
mov
jae
outsb
test
add
push
mov
add
dec
aaa
leave
lods
inc
cmp
lret
pop
and
cmp
push
lret
adc
lahf
push
cwtl
mov
ds
sar
jp
js
out
test
push
ds
std
xor
and
ret
or
inc
push
cmp
xor
cmp
dec
call
sbb
mov
pop
movsb
and
repnz
test
test
mov
je
sub
sub
sti
std
imul
data16
je
scas
dec
out
jb
jns
mov
enter
jecxz
data16
jbe
mov
dec
cmpb
sbb
std
adc
xchg
test
lret
jg
into
in
sub
sub
ljmp
xor
pop
jmp
mov
out
inc
loope
xchg
test
cwtl
xor
dec
das
mov
es
push
in
jl,pn
sbb
sbb
insl
enter
mov
ficoms
adc
repz
sbb
hlt
or
push
jl
and
loop
jl
pop
not
inc
xchg
in
jo
cmp
js
bound
daa
cmp
xchg
outsl
pop
cltd
cmp
sti
fwait
sahf
sub
and
mov
out
xchg
div
addr16
pop
sahf
test
mov
dec
clc
sarl
mov
mov
stc
dec
je
lahf
sbb
inc
inc
cwtl
call
ret
loopne
stos
jmp
add
jp
inc
pop
cmp
mov
jno
fdivr
xchg
inc
and
xchg
add
inc
test
mov
mov
rcrb
mov
test
mov
addl
arpl
jbe
insl
imul
lds
bnd
mov
fcmovb
adcb
ret
ljmp
sbb
push
pop
sti
add
inc
mov
movsl
fldz
loope
std
dec
mov
xchg
sbb
sbb
mov
adc
sahf
data16
mov
mov
push
in
sub
ret
adc
flds
jmp
lahf
repnz
cmp
and
aaa
dec
sub
imul
in
or
popa
movsb
out
xchg
and
push
in
lahf
jg
mov
dec
mov
daa
enter
cmc
cwtl
pop
xor
adc
shll
inc
imul
sub
loopne
std
movl
out
ret
or
orl
cmp
insl
shll
sbb
or
les
je
es
sti
outsl
and
lods
sub
jmp
es
lret
and
aaa
and
mov
ret
idivl
jno
inc
adc
ds
mov
add
mov
or
add
into
jb
aaa
gs
inc
and
hlt
mov
test
mov
cwtl
or
cmpsb
push
and
or
jo
lret
cwtl
popf
jo
andl
repz
lret
dec
xor
test
jae
lahf
dec
dec
ss
repz
xchg
insl
jae
cmpsl
std
cld
inc
bound
mov
adc
dec
mov
int
fwait
scas
ja
call
xor
adc
roll
dec
jecxz
inc
add
mov
mov
in
add
ret
fsub
sub
cli
xor
test
enter
in
mov
cli
xchg
cmp
and
mov
clc
faddl
jns
push
push
nop
test
clc
adcb
cmp
jns
xor
and
std
outsl
sbb
cwtl
mov
fwait
xor
add
mov
stos
setp
clc
cltd
into
loopne
push
in
sbb
lahf
dec
dec
add
xchg
jnp
mov
jp
inc
xchg
or
mov
sbb
int3
ds
lods
jge
inc
test
int
jmp
cli
sbb
and
int3
xchg
pushf
or
stc
syscall
sahf
push
pop
sbb
cltd
mov
call
jp
adcb
cmp
and
xor
cs
fsubl
cmp
mov
cld
adc
xchg
sub
add
fsubs
pop
sub
insl
mov
test
aam
in
bound
nop
push
sub
cmpsb
push
jb
outsb
add
add
sbb
pop
fcomip
les
outsb
xchg
mov
lahf
push
stos
pop
das
lret
js
imul
jl
dec
popa
dec
and
mov
sbb
jne
or
sub
inc
jnp
maskmovq
imull
jl
jl,pn
cs
leave
push
push
inc
push
mov
int
negl
enter
xor
mov
inc
add
out
jg
ficompl
add
cld
pop
pop
subb
xchg
jmp
call
and
inc
aas
rorl
pop
ret
and
jge
out
addb
sub
rolb
jbe
std
ret
dec
into
scas
repnz
jb
push
jge
jle
and
inc
add
pop
cmpb
ret
icebp
fwait
daa
cld
es
mov
xchg
xchg
ficompl
inc
ja
out
bound
inc
jecxz
lahf
and
stos
jb
add
aas
mov
cli
cmp
outsb
add
je
ljmp
push
mov
push
stc
push
pusha
mov
cmp
in
test
fmul
arpl
fwait
jl
mov
fcoms
mov
bound
out
push
sahf
cmp
jb
rcll
inc
es
or
mov
mov
test
mov
sbbb
cld
pop
popf
cmp
push
notl
pop
pop
mov
call
fists
sbb
mov
mov
push
ret
scas
inc
xor
inc
sahf
lea
mov
or
out
imul
imul
cwtl
sub
xlat
sbb
je
nop
pop
mov
insl
sbb
sub
test
inc
cld
fiaddl
xlat
out
ja
mov
je
xor
pop
clc
sbb
and
mov
mov
fisttps
idivl
aam
js
fisttps
js
inc
jl
cld
inc
inc
and
cli
or
mov
outsl
in
imul
xchg
pop
mov
inc
adc
push
loope
mov
lock
out
icebp
xor
adc
icebp
ja
inc
push
fiadds
icebp
out
sub
test
mov
aas
adc
fwait
add
sbb
mov
xchg
pop
cmc
mov
mov
sbb
test
leave
notl
adc
ret
mov
add
pop
cmp
outsb
je
rcll
leave
pop
adc
sub
inc
cmp
jecxz
test
inc
fimull
jle
xor
mov
imul
adcl
jbe
movsl
sbb
stos
std
inc
inc
jmp
imul
jmp
fists
or
arpl
and
add
cs
jcxz
mov
into
push
xchg
insl
push
mov
pop
and
scas
jnp
dec
mov
adc
popa
sbb
push
push
push
aas
bound
test
lock
mov
orb
adc
sbb
ficoms
dec
adc
fisubs
add
fidivrs
lret
sub
dec
sub
cld
mov
addr16
cld
cmp
test
inc
jg
add
pop
fstl
xchg
aas
and
push
int3
pushf
fidivl
xchg
jae
mov
pcmpgtd
stc
loope
mov
and
xchg
sbb
pushf
icebp
filds
mov
push
mov
add
movsl
insb
xor
inc
jl
jp
pop
test
lret
fcompl
mov
dec
inc
rol
cmpl
jmp
fsubl
lods
pop
js
xor
xchg
add
pop
out
imul
adc
fs
stos
dec
stc
fimull
pop
mov
sahf
push
gs
push
push
mov
ret
adc
pop
mov
add
rorl
lcall
add
insl
lcall
into
or
hlt
dec
cmp
lea
mov
test
shl
addr16
jae
jns
in
pop
inc
or
stos
inc
ss
adc
push
sbb
sbb
int3
lret
es
sub
cld
mov
mov
dec
jne
jl
mov
inc
jb
fs
in
insb
cmp
xchg
lret
add
cmp
cmp
sub
adc
mov
mov
push
fidivrs
xchg
push
or
push
push
dec
jae
sarb
pop
jb
or
mov
cltd
cli
mov
mov
and
test
adc
sub
pop
xchg
cmp
lods
jbe
repz
dec
lods
in
out
fdivrl
jns
cmp
pop
loop
cltd
and
imul
cmc
sub
notl
add
add
gs
in
push
pushf
in
adc
pop
jb
popf
xor
call
add
adc
and
pop
lret
lahf
imul
out
cmc
xchg
testb
mov
pop
int3
and
aas
dec
ror
out
in
push
xlat
mov
sbb
and
xor
test
mov
mov
lds
mov
dec
mov
sub
jb
or
sub
arpl
out
cmpsl
fwait
mov
dec
jno
or
push
push
mov
ret
inc
imul
mov
icebp
movsb
cmp
ja
cmp
mov
mov
fsubrs
adc
cmpsb
or
dec
adc
setl
inc
popa
aas
cmpsl
insb
mov
pop
daa
in
push
and
loop
cmp
dec
inc
xor
mov
int
pushf
in
push
xchg
and
jae
pop
es
sub
jbe
xor
insl
sub
and
outsl
sub
inc
xchg
aam
adcb
les
pop
push
aam
pop
outsb
sbb
sbb
mov
gs
idivl
movsb
inc
mov
xchg
xor
fcmovb
inc
rolb
jp
in
push
aaa
cwtl
out
xchg
jnp
sahf
adc
iret
xor
cmp
jl
xor
and
movsb
mov
adc
mov
insb
fidivs
arpl
adc
movsl
cmp
pop
xchg
out
sar
imul
inc
dec
ss
cmpsl
icebp
insl
dec
cld
mov
clc
repnz
mov
xor
lahf
daa
adc
sbbb
movsl
call
out
mov
mov
mov
iret
mov
scas
mov
in
adc
or
je
cmp
lods
pop
jne
push
add
scas
ds
loopne
mov
rolb
call
or
push
sub
test
push
or
enter
or
das
mov
ret
cwtl
lods
hlt
aaa
adc
cmp
inc
lret
adc
shlb
arpl
int
cmpb
lea
or
dec
add
outsb
and
push
jnp
mov
sub
cli
sbb
mov
sti
dec
xor
lret
xchg
sbb
xor
sti
mov
sub
gs
fs
and
loope
fwait
mov
ficoms
mov
ss
add
pop
adc
pop
pop
mov
int3
xchg
add
add
mov
sub
push
test
pop
xchg
xlat
mov
cmc
jae
mov
mov
xor
fisubrl
push
xchg
add
inc
leave
pop
cmp
cli
js
les
test
mov
icebp
out
xor
arpl
jmp
push
mov
popf
sbb
movsb
sbb
mov
sti
icebp
cs
mov
pop
xchg
decl
loopne
fnstsw
popf
and
mov
je
leave
cmp
add
xor
mov
ds
xor
std
sarb
mov
lret
sti
mov
or
mov
pop
push
inc
stos
shrl
add
mov
sub
dec
outsl
repnz
pop
movsb
or
adc
mov
or
pop
pusha
mov
repnz
fs
inc
mov
and
xchg
mov
pop
sub
push
xor
mov
sub
ja
out
mov
ss
xchg
jo
lret
je
icebp
lret
dec
mov
int
les
jecxz
push
out
repnz
lods
and
pop
jae
jnp
cmp
inc
stos
jo
lea
cli
fiadds
test
inc
aaa
cltd
loope
add
clc
fimuls
xor
insb
mov
pop
cmp
ret
das
xchg
mov
push
mov
lods
xchg
imul
imul
jmp
mov
jne
and
subb
xor
pop
add
pop
insb
pop
adc
inc
imul
dec
cmp
and
sbb
push
adc
iret
mov
jg
inc
jns
je
ret
xchg
repz
inc
mov
jns
xchg
sbb
dec
sbb
faddl
mov
push
sbb
fwait
cmp
das
ja
mov
addr16
pushf
xor
lret
shl
xchg
fidivs
in
test
lods
stos
push
cmp
and
sbb
scas
jmp
lods
cmp
mov
or
jne
loop
inc
repnz
rorb
fsubr
dec
movsb
push
dec
or
adc
fcomps
nop
jmp
je
lods
inc
dec
rorl
dec
jnp
inc
add
testb
jbe
lods
fsubs
scas
and
mov
push
cltd
xor
mov
jae
das
pop
shrb
std
inc
cmp
jb
dec
lret
push
daa
sbbb
out
inc
xchg
xor
iret
out
stos
pushf
or
dec
arpl
roll
add
sub
jnp
pop
push
lret
cmp
sub
repz
push
adc
jo
mov
adc
pop
and
or
inc
inc
mov
call
lods
push
xor
test
pop
mov
popf
inc
pushf
das
adc
repz
cmc
jl
sub
pop
jg
mov
sub
mov
sahf
sub
scas
xchg
mov
movl
push
out
push
jl
or
cltd
sbb
mov
aam
iret
xor
shlb
mov
sub
xor
push
aad
jmp
lret
out
xchg
adc
int
dec
stc
add
push
lds
out
cli
cmp
sahf
jmp
ffree
adc
enter
out
daa
stos
ljmp
xor
adc
enter
insb
jo
jecxz
jne
mov
lret
sbb
out
loope
fisttpll
ret
bound
push
mov
insb
push
xor
push
jmp
add
data16
xor
jp
outsb
and
in
push
std
cs
popf
mov
insb
cmp
lock
jno
dec
pop
stos
adc
in
cltd
mov
nop
fisttps
pop
xchg
dec
out
clc
pop
push
or
popf
cld
cmpb
enter
jl
out
cmp
cli
sbbl
std
jb
cmp
adc
mov
push
iret
sub
jne
pop
es
jp
sbb
mov
lcall
push
sub
mov
idivb
dec
dec
sbb
lret
push
notl
jb
lea
add
fwait
xlat
mulb
fadd
fsubs
pop
inc
push
sbb
in
mov
ret
call
sbb
mov
jnp
loopne
xchg
mov
adc
lds
out
aam
mov
mov
jnp
aad
sub
push
out
cmp
sarl
das
push
inc
xchg
xchg
mov
pop
pop
xchg
testb
out
pop
xorb
je
inc
mov
xor
lds
cwtl
adc
mov
or
xor
dec
and
dec
cltd
loopne
push
jge
push
cld
pop
inc
inc
mov
arpl
cmp
cmp
inc
adc
in
and
cmc
sub
sbb
pop
add
xor
pop
or
shlb
les
dec
fmull
icebp
dec
jg
cmpsb
stos
ret
shll
aas
jns
cwtl
inc
movsl
sub
push
hlt
xor
fimull
ret
aam
push
out
jo
and
mov
les
insb
repnz
jno
dec
mov
fisttpl
gs
sarb
popa
inc
push
push
pusha
movsl
mov
scas
xchg
ret
dec
sub
cmp
or
xor
add
leave
leave
daa
pusha
mov
sub
inc
imul
mov
std
in
jp
cmp
cmpsl
and
inc
popa
push
int3
jbe
xor
imul
cs
insl
lret
sahf
mov
cmp
sbb
mov
icebp
int3
cmp
cmp
test
fstps
ret
es
add
add
or
dec
xchg
mov
adc
test
pop
mov
xor
aam
mov
loopne
and
jae
mov
int3
mov
mov
or
fcoml
scas
lret
add
inc
mov
mov
das
push
add
jno
inc
popf
jmp
dec
push
xchg
out
in
cmp
outsl
pmulhw
push
sub
jle
lods
cmpsl
xor
or
xor
mov
mov
cmp
test
idivl
and
outsl
push
cmpsl
sub
repnz
push
icebp
daa
arpl
dec
pusha
xor
out
lea
xor
test
pusha
sti
cmp
and
jecxz
or
repz
xorb
xchg
sub
popf
lcall
js
cli
repz
mov
enter
fcoms
out
dec
pop
sbb
pop
and
in
jns
movsb
ss
ret
inc
dec
sub
lods
fldenv
mov
lods
cmpsb
adc
mov
xlat
out
or
xchg
pop
jnp
inc
jo
mov
fs
sbb
push
out
and
adc
cltd
mov
sahf
leave
rorl
loop
push
or
push
js
cltd
push
hlt
push
dec
imul
mov
incl
test
sub
lods
xor
push
sub
stos
xlat
pop
sahf
aas
fistl
stc
and
xor
pop
pop
sbb
int
cmp
cmp
add
mov
inc
xor
and
idivb
insb
jmp
loope
push
push
stos
mov
cmp
pop
mov
notb
ret
mov
arpl
ss
or
rcll
xor
mov
push
fucom
sti
rcll
xor
enter
lret
test
test
mov
cmp
or
dec
mov
in
add
dec
inc
jnp
pushf
stc
mov
loope
push
pop
jno
mov
mov
jnp
and
pop
lock
add
mov
jmp
fcmovnu
incl
and
push
mov
subl
int
fidivl
adc
xchg
pop
lcall
fwait
shll
out
mov
cmp
inc
lds
mov
push
orl
aaa
iret
inc
push
push
mov
mov
push
mov
enter
push
lahf
inc
adc
inc
xchg
je
les
faddp
xor
rcll
mov
aas
jns
lret
dec
leave
adc
scas
and
pusha
es
imul
push
push
jno
stos
push
sub
add
scas
subb
pusha
push
dec
hlt
scas
mov
leave
mov
jo
jmp
imul
jp
adc
sbb
dec
dec
inc
push
rcrl
pop
xor
movsb
cmpb
repnz
out
push
es
adc
dec
aam
lds
xor
roll
enter
rorb
mov
mov
push
pop
daa
loope
or
mov
lcall
or
out
dec
ss
aam
add
jge
fwait
out
pop
xchg
xchg
and
or
filds
je
jae
bnd
add
dec
idivl
fs
pop
push
xchg
rol
mov
shl
mov
stos
xchg
xchg
add
js
out
mov
cli
or
pop
test
in
mov
cmp
rorb
les
rol
test
xorb
push
xor
xor
aam
xor
cld
pop
icebp
inc
imul
pop
inc
lea
jo
rorb
mov
repnz
sbb
popf
and
pop
loope
mov
inc
cmp
adc
dec
into
pushf
rclb
int
adc
std
test
and
sub
dec
int
jne
push
cmp
mov
mov
outsb
jecxz
xor
inc
aas
sub
mov
lea
loop
mov
xchg
sub
adc
testb
lahf
push
inc
sarl
aam
lea
adc
jns
mov
shll
mov
or
mov
jnp
jb
fidivrs
pop
mov
pop
sub
fbstp
test
xchg
or
jae
stos
push
mov
push
inc
lea
rcll
cli
dec
add
in
jne
aaa
inc
mov
cmp
push
sbb
xor
je
lcall
xchg
xor
dec
or
xchg
call
loope
stos
fwait
adc
jp
movsb
pop
mul
loopne
push
ror
test
adcb
in
xor
mov
sub
js
bound
push
cmp
push
mov
or
fmuls
jbe
jbe
dec
jo
ds
mov
ds
loope
add
int3
cld
xchg
add
pusha
outsb
imul
mov
mov
and
push
dec
cmp
jo
inc
lahf
gs
xor
sub
sbb
cmp
jg
jg
push
sarl
dec
lcall
scas
fstpt
outsb
push
sub
cmc
int3
ds
mov
arpl
imul
inc
in
imul
fidivs
nop
inc
jne
mov
xchg
lods
pop
xor
pop
in
fbld
hlt
pushf
add
jbe
clc
inc
subb
das
mov
mov
outsl
xchg
or
decl
pop
pop
fsts
inc
jmp
adc
dec
adc
iret
mov
jp
shrb
stos
xor
push
int3
mov
dec
dec
add
jns
jbe
jne
inc
sub
mov
repnz
pop
sahf
push
inc
pop
insl
lds
in
jl
adc
xor
es
mov
or
loop
mov
test
mov
popa
mov
xchg
jns
jmp
mov
dec
mov
jp
push
cmp
popa
pop
aam
cld
loop
fsubr
das
sarb
repz
loope
mov
push
shl
jl
ss
or
xchg
adc
xor
in
dec
insb
pop
cmpsb
xor
add
bnd
stc
dec
mov
pusha
jbe
insl
sbb
adc
fmull
mov
mov
mov
pop
pop
add
jb
sbb
fstpl
push
dec
hlt
add
cmpsl
mov
or
scas
in
test
daa
nop
push
arpl
push
adc
mov
mov
sbb
sbb
cli
out
add
push
and
shrl
push
add
rclb
cli
cmpsl
arpl
mov
mov
lretw
pop
mov
push
aaa
mov
loopne
sub
xchg
xchg
push
pop
or
adcb
push
test
inc
cmp
ret
xchg
icebp
jns
stos
stc
std
mov
in
xchg
mov
and
lea
xchg
cmp
fs
push
xchg
cli
ljmp
dec
ficoml
addb
popa
push
mov
mov
inc
retw
mov
mov
jns
loope
rolb
aaa
lds
repz
inc
adc
adc
mov
pop
std
mov
lea
pop
dec
es
dec
pop
sub
sub
insl
ljmp
call
xchg
or
iret
repz
sbb
popf
mov
pop
dec
scas
jo
mov
sub
int3
or
push
dec
xchg
sub
pop
cmp
xor
bound
cwtl
pop
cmp
aam
add
cmp
push
mov
aaa
sbb
ret
adc
and
pushf
pop
mov
test
mov
and
stos
cmp
push
inc
fs
xlat
ljmp
inc
xor
pop
es
mov
pop
mov
dec
mov
xchg
push
and
icebp
sbbl
pop
aas
and
lret
movsl
pop
daa
mov
mov
lds
mov
cmpsb
mov
sub
addb
and
arpl
shll
dec
push
adc
cmp
inc
out
or
es
xor
pop
inc
out
mov
jp
aaa
or
and
cmc
mov
stc
or
fildl
inc
aas
sbb
test
pop
push
adc
add
push
jg
ret
in
cmpsb
shl
dec
fs
lock
or
orb
dec
and
jecxz
fisttpll
xchg
fdivrs
pop
adc
inc
add
jg
repz
inc
mov
insl
shl
xchg
mov
mov
cmp
inc
xchg
mov
cmpsb
xchg
test
push
xor
test
pop
lock
sub
and
es
mov
add
lcall
repz
inc
mov
mov
xlat
popa
mov
push
inc
dec
imul
jmp
arpl
outsl
mov
jo
xchg
cmp
popf
lahf
js
fisttpl
test
push
xor
out
lret
adc
mov
mov
dec
jmp
push
push
push
not
xchg
adc
add
loop
js
cmpsl
mov
roll
fidivl
jb
cmp
push
fs
stos
adc
pop
addl
movsl
dec
mov
jb
pop
cmp
xchg
icebp
mov
lcall
sub
sub
popf
scas
movsl
test
xchg
in
ror
cmc
nop
std
je
imul
adc
push
jne
ds
mov
push
mov
mov
xchg
mov
jmp
mull
ret
orl
into
inc
fdivl
test
sbbl
arpl
adc
mov
or
and
je
mov
fsubs
push
push
jnp
incl
xchg
fadd
adc
leave
arpl
mov
js
je
mov
jbe
pop
ret
dec
push
scas
push
and
insl
je
dec
jl
aaa
out
inc
addr16
nop
xor
mov
roll
dec
mov
je
xchg
cmp
jnp
dec
mov
mov
jge
mov
lods
out
mov
cmp
jecxz
pop
pop
cmp
fs
test
mov
fldln2
push
mov
sub
jcxz
sub
mov
mov
popa
mov
clc
movsb
jo
outsb
xlat
mov
shll
push
xchg
out
gs
mov
dec
mov
cli
mov
xor
jle
mov
push
mov
jno
outsb
mov
dec
inc
mov
mov
call
add
outsb
jnp
or
repz
or
in
enter
add
shr
xchg
inc
xor
in
add
ja
cld
insb
test
xchg
mov
add
lods
sti
loop
test
mov
jo
mov
xor
cmp
leave
out
out
fsubrl
sahf
pusha
xor
outsl
data16
mov
mov
sbb
jmp
cmp
push
and
daa
incb
lcall
pop
xchg
dec
test
pop
ljmp
movsb
aaa
and
fcmovb
xor
cli
push
mov
loopne
or
cmp
scas
xchg
sbb
pop
cmp
mov
aam
or
xor
mov
mov
inc
addr16
or
pop
cs
fldl
add
adc
mov
mov
sub
out
pop
stos
outsl
data16
pop
lods
lahf
push
mov
mov
imul
sbb
sbbb
int
lret
sbb
sahf
jge
movsl
cmpsb
jge
imul
int
jl
out
mov
cli
adc
out
data16
xor
je
inc
dec
push
cmp
cmc
shll
pop
and
lods
test
jmp
arpl
cmpsb
sarl
movsl
shr
pop
sahf
lds
pop
ds
mov
cmpl
repnz
test
sub
or
cmp
mov
or
stos
outsl
hlt
inc
filds
mov
inc
ror
push
mov
xchg
cmc
and
lea
push
mov
icebp
cmpsl
cld
and
cmpsb
or
cmp
xor
inc
icebp
adc
cmp
lods
push
in
loop
sbb
mov
lods
test
sbb
cmc
cmp
cmp
adc
in
mov
xchg
aas
out
ret
mov
dec
fwait
mov
adc
push
inc
loop
knotb
pushf
arpl
data16
daa
scas
push
xchg
mov
sbb
xchg
mov
push
dec
js
mov
stc
movsl
xorb
mov
push
dec
mov
sarl
cmc
aam
jne
into
cmp
in
shlb
xchg
daa
mov
int
mov
sbb
xchg
adc
outsl
lds
jmp
push
icebp
xchg
fmuls
movsl
inc
sbb
mov
fwait
pop
pop
adc
je
push
mov
push
adc
sub
push
push
stos
leave
out
rcrb
sub
adc
out
jl
inc
xchg
scas
jp
pop
xchg
ret
cmpsb
fwait
les
inc
mov
xor
jb
js
sbb
scas
sbb
mov
int3
cmpsb
stos
and
mov
jnp
dec
jp
iret
cld
push
sub
add
js
cmp
cmpsb
mov
aas
inc
lahf
jecxz
fisubrl
inc
lret
or
xchg
and
sub
cmpsb
idiv
icebp
xorb
testb
push
sub
or
sub
push
ja
inc
ret
jp
add
xor
movhps
loop
inc
test
rcr
push
test
xchg
pop
test
inc
out
jno
jb
and
les
mov
repz
lret
mov
aam
xchg
xchg
into
xchg
shrl
in
divb
jnp
lahf
dec
cmp
mov
add
inc
inc
fxch
sub
cmp
int
inc
rolb
sbb
iret
testb
in
mov
std
movsb
sbb
mov
cmp
ds
clc
cltd
or
adc
and
pop
rcrl
sti
outsb
sbb
cwtl
add
insl
sbb
insb
stos
cmp
cmc
dec
sbb
mov
add
test
nop
stc
outsb
xor
push
loop
inc
or
jb
adc
int3
scas
inc
lahf
dec
stc
fcmovne
ljmp
jmp
out
and
cmc
mov
dec
cmp
pop
filds
mov
cld
pop
or
adc
aas
dec
jmp
dec
cmp
inc
lret
push
push
ret
push
jne
pop
push
xchg
or
out
fcmovb
xchg
out
imul
mov
in
imul
or
cli
ret
pusha
hlt
lret
aas
test
imul
cmp
inc
lret
lcall
or
out
std
fidivl
jo
fisttpl
aam
jnp
aad
xchg
jl
jle
int
sub
cmp
cli
sbb
mov
adc
sub
cmp
test
lds
xchg
mov
inc
out
mov
adc
inc
sti
insb
pushf
sahf
repz
rorl
shlb
ljmp
aam
mov
jnp
iret
lock
pusha
or
into
push
dec
shrl
or
mov
shlb
jnp
outsb
out
xor
lods
mov
nop
pop
and
xchg
divl
mov
imul
std
repz
or
jmp
bound
jle
jle
aaa
out
hlt
or
adc
sub
mov
ja
insb
push
orl
rorl
jmp
or
cs
cmpsb
inc
jns
fdivrs
mov
pop
es
sbbb
neg
out
xchg
sub
in
movsb
jge
cmp
sub
mov
stos
test
inc
in
pop
pop
mov
or
repz
mov
adc
sub
int
push
xchg
cld
xchg
jg
faddl
cmp
lret
adc
push
mov
or
in
pop
daa
jg
popa
push
pop
add
dec
jne
mov
push
jecxz
mov
aam
mov
test
rorb
cmp
mov
or
mov
shll
ja
or
lahf
rolb
push
int3
xchg
dec
mov
push
pop
test
adc
fisttpll
addr16
sub
xchg
xor
dec
sbb
in
std
lods
loop
sub
in
imul
cltd
fimuls
cmc
dec
mov
push
stos
or
movsl
mov
mov
cmp
popa
sub
cmp
lds
and
sbbb
cmc
nop
jmp
insb
outsl
repnz
and
adc
lret
inc
cs
in
aas
leave
orl
jns
cmp
test
enter
or
cmp
cli
xor
jmp
xchg
sbb
dec
stc
leave
int3
mov
rcr
shll
adc
inc
dec
sarl
ljmp
push
mov
mov
inc
out
cmp
dec
pushf
in
and
stos
pop
or
shr
sbb
lods
xor
dec
fpatan
mov
adc
in
out
imul
and
and
mov
jae
lahf
cmp
push
dec
lods
sub
fnstcw
inc
popa
fs
ljmp
adc
jecxz
rorl
lcall
int
sahf
push
mov
cli
loopne
outsb
jne
push
cmp
pop
int3
jecxz
pop
shl
mov
or
inc
lcall
sub
bound
adc
ficoms
mov
scas
mov
popa
add
fwait
cld
jo
push
cmpb
and
cltd
fildl
mov
sar
mov
pop
xor
and
lahf
lods
outsl
adcb
pop
adc
repz
lods
gs
push
mov
push
jnp
adc
ss
inc
jne
xchg
jecxz
dec
incb
cmp
mov
jbe
ficompl
les
ficompl
outsl
cwtl
call
int
push
lahf
daa
or
mov
mov
cmp
pop
lret
inc
adc
rcrb
or
jae
insl
lahf
mov
xchg
pushf
aas
stos
int3
lcall
inc
arpl
lahf
icebp
ret
out
jbe
mov
sti
jp
sbb
in
lds
xchg
ret
mov
inc
push
push
sbb
lahf
xor
loop
es
sbb
pop
in
pop
pop
pop
ret
int3
cmpb
out
and
lcall
icebp
fistpll
dec
arpl
adc
sub
rcr
xchg
hlt
and
stos
out
cmp
dec
aad
ljmp
out
mov
xor
add
pushl
int
inc
xchg
lods
lcall
addr16
xor
cmp
dec
loope
or
dec
pop
outsb
ror
pushf
xor
cli
cltd
push
addb
mov
pop
loop
mov
push
jge
les
mov
test
pop
ret
xchg
sbb
ljmp
mov
repnz
pop
and
pop
add
outsl
aad
lcall
mov
cltd
adc
push
ret
arpl
mov
and
enter
add
pop
bound
rclb
dec
cmp
in
cmpsb
loopne
movsb
jns
jns
pop
test
pop
movsb
jge
xchg
jle
je
in
adc
fs
mov
jb
cmp
xlat
add
rclb
fwait
cmp
ss
xor
inc
in
or
into
xchg
dec
leave
pop
xor
jp
and
fstpt
shll
mov
xchg
fildll
mov
out
push
loope
lret
aaa
cmp
pop
clc
cs
in
ljmp
sub
in
bt
mov
or
and
test
sub
loop
inc
add
je
mov
in
mov
in
scas
add
sahf
mov
adc
adc
jns
popa
jnp
sub
push
cmpsl
aaa
mov
std
mov
out
popf
lock
fisubrl
push
xor
jae
test
sti
push
fdivl
sbb
pop
mov
jge
arpl
lods
pop
adc
cmc
shll
loop
ja
mov
mov
push
sbb
fmuls
jg
xchg
push
fisubl
test
mov
mov
or
pushf
mov
cmp
ret
and
lods
add
push
jne
aaa
mov
cld
jnp
fwait
movsb
push
mov
das
push
je
testb
clc
js
ficompl
pop
int3
cmp
sub
popf
mulb
test
hlt
dec
or
out
ds
cli
inc
mov
clc
in
ss
xor
test
popf
in
xor
aaa
rorb
stos
fcmovnb
jne
xchg
add
imul
xchg
dec
jg
sbb
sbb
outsb
dec
out
lods
adc
in
pop
std
xchg
je
sbb
aam
dec
jnp
xchg
das
out
das
jle
loopne
sahf
negb
test
aas
jg
addl
js
jl,pn
xor
and
je
icebp
scas
loop
cmpsb
xor
or
shr
cltd
push
lock
cmc
clc
mov
mov
jb
xchg
xchg
jmp
leave
fnstsw
pop
ljmp
aad
call
and
call
mov
lock
scas
lock
pop
das
sub
cmp
sub
mov
fdivrs
outsb
push
jo
test
adc
icebp
push
fcoml
dec
lea
adc
add
or
das
push
out
in
stos
cmp
ss
add
sahf
pusha
fs
pop
inc
or
jb
aad
jo
cmp
xchg
pop
xchg
pop
std
push
std
ret
xorl
lock
push
aas
push
pusha
cld
pushf
inc
jecxz
out
or
in
adc
xlat
mov
movsb
lods
cwtl
cld
inc
js
mov
scas
mov
cmc
xor
aas
lret
cmp
repnz
xchg
in
push
push
lea
mov
pop
inc
or
jmp
scas
pusha
and
insl
jbe
cwtl
mov
cmpsl
pop
inc
xchg
lcall
xchg
lahf
out
subb
push
pop
insb
xlat
mov
sbb
push
xor
jbe
xchg
mov
cli
pop
push
sbb
and
jmp
sub
mov
inc
inc
mov
adc
fidivrl
addr16
fdivrs
push
cmpsb
cli
mov
xor
insl
fdivrl
cmp
jge
lock
test
jp
or
sbb
mov
push
adc
std
xor
aam
xchg
scas
call
int
shrl
mov
dec
lret
test
lock
mov
push
es
movsb
gs
in
cld
icebp
xchg
xor
push
popf
fisubs
sub
adc
out
cmpsl
mov
and
fcomp
pop
sub
ds
loope
movsb
shll
sbb
fxtract
push
js
push
mov
sarb
stos
stc
gs
arpl
sub
mov
xchg
sbb
sar
push
das
imul
xchg
dec
icebp
leave
xchg
imul
aam
ret
xlat
out
out
pop
ror
pop
mov
and
fs
les
popa
and
call
int
mov
xchg
xchg
dec
pop
and
scas
das
add
out
sub
popf
sbb
loope
loopne
xlat
jle
std
jle
loop
inc
out
vmovaps
xchg
aas
add
xchg
dec
cltd
test
andb
rcr
mov
jns
ret
fwait
popf
xor
je
ret
cmpsl
pop
in
or
imul
pop
and
stos
inc
jns
or
mov
adc
push
in
pextrw
imul
rorl
cmp
jp
add
insb
enter
div
pop
imul
pop
test
sub
loope
aaa
push
adc
add
pusha
pop
jns
or
mov
clc
sub
dec
aad
lds
push
rcll
fsts
imul
mov
push
add
cmp
mov
push
pop
insb
xchg
jbe
mov
sbb
inc
and
out
lock
pop
leave
add
rclb
sub
inc
xchg
dec
jo
popa
jle
and
sbb
test
adc
mov
addr16
jle,pn
arpl
fiadds
mov
xchg
incb
xchg
cs
adc
dec
lea
cmpb
push
rcrl
mov
dec
pop
and
out
push
mov
outsl
andb
popl
adc
ja
das
xlat
cmp
push
mov
adc
out
shrb
arpl
lcall
aas
int
mov
sahf
xchg
nop
ljmp
pusha
dec
add
mov
insb
mov
cmp
rcrb
or
dec
jl
or
shl
lock
jp
fadds
mov
daa
testl
pop
stos
ds
cld
mov
add
sahf
mov
dec
lods
or
push
sbb
ret
fcoml
fcmove
ret
pop
inc
pushf
mov
bsf
rcl
mov
call
lea
jb
pusha
mov
rcr
or
shl
not
call
jmp
push
jmp
and
stc
mov
jns
pushf
cmp
call
inc
in
fcmove
pushf
fsubrs
xchg
or
pop
pop
out
mov
enter
pop
push
lods
sahf
adc
inc
xor
dec
loop
inc
jns
mov
xor
in
mov
dec
adc
fstps
bound
sti
dec
mov
adc
in
jle
idivb
push
enter
dec
xorb
dec
sub
clc
mov
orb
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
movw
mov
call
lea
jb
clc
bt
stc
xor
jmp
call
add
push
popa
je
inc
imul
jae
add
add
fs
push
dec
jne
je
inc
jns
add
nop
rorb
inc
push
lea
jb
call
mov
jmp
add
dec
jae
imul
popa
bound
add
add
je
inc
dec
inc
push
add
cli
mov
pushf
fmuls
in
int3
and
loopne
cmpb
pop
adcb
sub
dec
sbb
add
and
test
dec
sbbl
mov
je
or
or
jns
test
dec
and
add
add
add
push
push
mov
pushf
push
dec
push
ret
out
mov
divl
dec
sahf
jp
cs
lock
adc
cltd
xchg
cmp
sbb
push
outsl
inc
jp
lods
jl
and
enter
pop
in
dec
iret
mov
xchg
sbb
test
xor
shrd
mov
movsbw
bsr
jge
bsf
mov
cmc
pushf
cmp
movb
pushl
pusha
lea
jb
das
inc
shrd
mov
xchg
pusha
or
stc
not
xadd
pusha
mov
movzbw
pop
call
pusha
pushf
pusha
mov
push
pusha
push
push
lea
jmp
jmp
or
pushf
fmuls
add
dec
and
xchg
add
pop
sub
sbb
sub
or
loope
jb
repz
lsl
pop
xlat
mov
cmpsb
and
js
jmp
inc
adc
lods
xchg
addr16
jae
aad
adc
sbbl
in
and
mov
cmpsb
xchg
adc
add
fsubs
push
inc
lods
outsb
cli
into
xor
add
mov
sahf
subb
scas
and
cs
xchg
cs
adc
lret
lcall
sbb
push
es
lock
inc
jo
outsb
fs
outsb
jne
add
mov
lea
movw
push
mov
pusha
movl
pushl
push
lea
movw
jmp
lock
stc
pushf
fsubrs
ja
lcall
sub
xor
arpl
ljmp
dec
lret
pop
jae
das
imul
push
ss
ljmp
jo
jnp
bound
les
arpl
icebp
add
loop
mov
sbb
xor
fadd
pushf
fmuls
push
inc
sub
mov
cmc
ffreep
mov
and
arpl
adc
or
lock
push
add
inc
pop
and
mov
mov
or
bound
cmp
inc
neg
lret
ret
cmpsl
imul
mov
fildll
sub
jmp
pop
push
stos
aaa
mov
mov
outsl
inc
sub
push
add
push
adc
mov
les
in
add
enter
imull
out
ja
sbb
jecxz
imul
mov
jmp
push
or
ds
pushf
fcoms
dec
fldenv
mov
add
sbb
inc
inc
jmp
sub
pusha
push
lret
add
in
arpl
inc
fisubrl
xorb
mov
pop
fdivrl
push
negb
or
nopl
mov
or
cwtl
in
inc
int3
inc
nop
and
or
mov
adc
sub
lret
je
jmp
jge
in
out
dec
aaa
pop
xor
sub
test
int
andl
inc
iret
mov
fcomi
movb
sub
pushl
mov
pusha
mov
pushf
mov
lea
je
push
push
pushf
movw
lea
jmp
mov
movsbw
lea
pushf
push
lea
call
jmp
cmp
mov
shl
neg
test
push
mov
lea
dec
push
stc
mov
shl
movb
sub
not
neg
pusha
add
call
add
inc
gs
gs
push
gs
imul
add
test
add
add
je
imul
add
push
gs
arpl
push
arpl
mov
lds
mov
cs
jb
cs
lods
iret
scas
jns
mov
js
sub
jns
mov
or
psubw
repz
scas
cmp
cld
pop
pop
mov
mov
loop
push
fst
push
cld
test
mov
int3
xchg
jmp
pop
add
insl
mov
and
stos
add
lods
mov
pop
out
sbb
iret
leave
pop
imul
scas
addr16
aas
sbb
out
aas
mov
iret
jno
fwait
mov
insb
outsl
jae
dec
popa
outsb
fs
add
ss
pushf
fmuls
sub
mov
dec
and
repz
adc
cmp
stc
lret
dec
jp
lahf
jecxz
ljmp
int3
and
insb
ds
xchg
pop
fistl
push
mov
mov
data16
mov
aaa
adc
cmp
xor
jnp
fstpt
lahf
push
push
dec
sti
imul
out
fxch
sbb
dec
mov
test
pushf
fcoms
out
push
push
scas
xchg
into
mov
cli
adc
push
sub
jl
and
xchg
pop
xchg
aaa
mov
xor
fldt
std
popa
pop
xor
mov
adc
enter
jb
jbe
adc
xchg
jle
insb
pop
out
lock
jg
fnstenv
xchg
inc
xor
test
sub
push
mov
ljmp
lock
mov
push
adc
inc
test
imul
andl
ds
sti
pop
pop
sarb
pop
xor
shl
add
push
dec
sub
pop
popa
sbb
pushf
mov
lea
jae
sbb
mov
adc
lea
mov
bsr
cmc
mov
pusha
bt
bt
stc
xor
mov
cmc
push
stc
repnz
mov
push
push
jmp
jmp
add
push
jb
je
inc
imul
ja
pusha
xor
sub
add
pushf
lea
add
shr
mov
sbb
pushf
mov
jmp
push
lea
je
pusha
pusha
movw
pushl
lea
jmp
inc
xor
mov
mov
cltd
mov
jl
test
push
inc
insb
pop
jmp
in
mov
pop
call
mov
sbb
int
xchg
jns
sar
push
xchg
scas
in
add
xchg
jnp
loopne
insb
shrl
cmp
sbb
repz
add
adcl
fldl
mov
jns
mov
mov
pop
stos
pushf
not
xor
mov
add
cli
dec
movsl
mov
add
jo
jne
pop
inc
xchg
xchg
mov
daa
repz
fldt
fst
ret
inc
and
lea
inc
jmp
add
dec
fs
gs
jb
arpl
jne
gs
fs
jae
add
bswap
pusha
push
mov
jmp
add
push
push
jmp
add
dec
outsb
jne
je
insl
inc
jb
insl
push
outsl
imul
gs
inc
dec
inc
push
jb
arpl
adc
test
je
fcomps
dec
test
cmp
xor
mov
lock
ret
push
loop
in
in
sub
mov
outsl
popa
inc
and
jbe
pop
sti
loope
push
pop
lock
adc
stos
mov
cld
sbb
ds
repnz
mov
jb
jbe
sub
push
fmul
je
test
fbld
sbb
add
arpl
add
push
lea
jb
btr
neg
btr
mov
shl
mov
pusha
shl
push
pusha
lea
jmp
mov
pushf
push
call
stc
jmp
dec
inc
das
rcrl
inc
inc
pop
cmp
pop
mov
push
push
ds
mov
cli
jbe
dec
cmpsb
ss
dec
xchg
inc
push
or
data16
mov
lea
mov
test
loopne
jecxz
ret
pop
mov
jg
clc
fcom
stos
push
adc
aam
xchg
ja
test
movsb
stos
xor
pushl
outsl
inc
gs
leave
movsl
mov
imul
xor
push
mov
testb
ficomps
scas
and
aaa
push
inc
inc
mov
mov
mov
push
fadds
dec
mov
adc
imulb
jl
push
sarb
fistps
and
in
and
xor
adc
inc
and
cmp
jecxz
aaa
cmp
xor
je
push
pop
shll
bound
cltd
adc
xchg
mov
dec
aaa
mov
fwait
jecxz
adc
mov
pop
fldcw
scas
call
push
mov
rolb
cmp
jmp
xlat
xlat
mov
shll
mov
sbb
je
cmp
in
mov
je
cmp
push
bound
pusha
fs
and
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
or
fs
jb
test
stc
bt
cmp
call
fwait
stos
insb
fistps
pop
outsl
xlat
dec
mov
inc
sbb
or
sbb
out
in
xlat
cli
xor
pop
test
mov
cmp
aad
mov
cs
repnz
fidivs
dec
jnp
mov
ret
inc
or
pop
fistps
or
mov
sbb
fsubrs
jne
xor
add
loopne
or
xor
or
loop
push
cmp
sub
popf
sub
xor
mov
sbb
int
pop
ficomps
sub
jmp
pushf
pusha
pusha
lea
jne
add
sub
push
mov
rol
call
sub
shld
shr
not
bt
cmp
shl
bts
xor
push
rcl
sub
clc
inc
jmp
add
push
outsl
jae
dec
gs
popa
addr16
add
sbb
pusha
movw
lea
jne
jmp
lea
je
jmp
add
add
add
shl
mov
pushf
mov
bt
bt
cmp
jmp
jb
jnp
pushf
fmul
and
nop
adc
pop
movsb
pop
das
xchg
cwtl
xchg
ljmp
je
pusha
movsb
ret
mov
and
test
int
cltd
icebp
shrl
ds
mov
mov
cwtl
push
adc
or
cli
lcall
or
cmp
repnz
addr16
mov
add
fidivl
mov
shrb
fidivs
es
fidivs
mov
iret
add
shll
movzbl
mov
dec
mov
movsbw
lea
movzbw
mov
jmp
add
inc
jb
popa
je
push
gs
imul
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
jmp
test
fsubrs
and
les
rorb
cwtl
cld
jl
and
mov
jno
or
inc
or
je
fcmovnb
js
mov
and
dec
dec
pop
add
xlat
fstpt
dec
push
push
aam
inc
repnz
pushaw
dec
fstpl
stc
xor
mov
mov
lods
test
popf
xchg
jne
stc
mov
dec
dec
mov
add
fidivs
xor
test
mov
jns
test
enter
loope
mov
pop
sbb
cmpsb
nop
xchg
jp
xchg
sti
push
sub
popa
repnz
stos
mov
xlat
mov
mov
mov
fisubrs
lea
jl
movsl
xchg
sbb
incl
jmp
fcmovnbe
inc
cmp
leave
xorb
mov
cmp
nop
imul
and
inc
leave
lds
pop
mov
add
lea
icebp
out
inc
pop
inc
clc
and
push
stc
sarb
fcompl
push
adcl
mov
orb
jle
insl
out
lcall
and
scas
add
jmp
mov
jno
xchg
xor
icebp
and
jne
jle
scas
jge
cmp
cmc
repz
shl
pop
xchg
inc
test
out
jle
jmp
jno,pt
mov
int3
mov
xchg
jno
mov
jnp
cmpsb
jp
mov
sti
lods
sbb
or
aam
mov
pop
iret
insb
mov
push
jbe
inc
sbb
sub
mov
es
dec
lcall
cmp
mov
xor
ret
mov
cmpb
xchg
xchg
dec
and
mov
add
inc
jb
popa
je
push
imul
inc
add
jl
decl
shl
bt
btc
mov
clc
sbb
sub
mov
bswap
mov
mov
sub
adc
test
mov
bts
rol
mov
shrd
clc
sbb
sub
movsbw
mov
ror
bts
xadd
mov
daa
sub
call
add
push
je
push
outsb
ja
outsb
add
unpckhps
add
cmp
incl
and
call
add
push
gs
jb
arpl
jae
outsl
jb
imul
imul
mov
pusha
mov
pushf
lea
jmp
push
or
pusha
lea
jne
bswap
jmp
pushl
pushf
lea
jne
sub
ror
mov
xchg
mov
pushf
neg
test
clc
xor
bsf
movb
bsf
mov
pusha
lea
mov
rol
mov
setne
ror
mov
or
bt
add
mov
clc
pushl
dec
shl
mov
and
sub
lea
lea
lea
mov
bswap
bts
mov
pushf
jmp
pusha
sub
cmp
pushl
popl
pusha
call
cmp
cmp
pushf
fdivs
in
dec
enter
cmp
jo
push
in
dec
mov
aaa
pop
ss
pop
add
out
jp
cltd
fstl
xchg
mov
adc
sub
leave
mov
call
mov
mov
rcrb
outsb
dec
gs
push
xor
mov
adc
mov
es
dec
add
and
out
lret
jnp
push
or
add
or
adc
mov
add
push
xchg
int
repnz
mov
inc
icebp
leave
fistpl
add
insl
aaa
pop
xor
mov
mov
rorl
pop
imul
pushl
adc
lea
jle
push
lea
jb
bt
cmp
push
xor
pushl
pushf
call
inc
popa
dec
fstps
outsb
ljmp
jge
jae
add
mov
mov
mov
mov
xchg
push
es
cltd
stc
repz
loop
stc
lret
aam
push
clc
jo
stos
add
mov
cmp
mov
and
jg
push
int
out
ljmp
jl
jo
push
push
adc
or
mov
lock
mov
cmp
sbb
dec
adc
ja
xchg
xchg
sarl
dec
sbb
sub
fadd
mov
insb
insb
cmp
ja
mov
cmp
push
sbb
lahf
lea
movzbw
mov
pusha
push
movw
not
call
mov
push
jmp
movzbl
not
movb
movsbw
mov
mov
pushf
mov
bswap
jmp
call
dec
cmp
cmp
or
sbb
ljmp
or
jb
ds
or
jge
xor
ja
shll
or
shlb
mov
fmull
lock
fs
sbb
in
mov
cld
sub
lea
mov
lea
lea
jmp
pusha
pushf
pushf
lea
ja
call
jmp
movl
movb
pushl
lea
jmp
call
jmp
pop
mov
pushf
fdiv
xchg
xor
pop
mov
or
mov
repz
ret
jne
push
adc
sub
push
les
mov
repnz
inc
rolb
xchg
mov
cmpsl
add
ret
push
cmp
int
out
lods
or
and
test
lods
aas
lds
out
lret
stos
imul
out
lahf
adc
sti
mov
mov
movb
jmp
pusha
mov
pushl
pushf
mov
not
pushf
seto
lods
pushf
call
btr
jmp
movb
mov
pushf
mov
mov
pushf
pushl
stos
pushf
jmp
cmp
call
ret
aam
fsubs
roll
in
add
mov
mov
sbb
cmp
cmp
push
pop
repnz
outsb
xor
sub
leave
stc
jecxz
xchg
in
jb
es
xchg
hlt
shl
mov
in
aas
dec
int
xor
cli
cs
cs
mov
pop
jmp
dec
sub
inc
pop
orl
adc
stos
ret
inc
cmp
in
cmp
cs
sbb
in
mov
ror
mov
adc
or
aam
aas
add
ja
jo
imul
add
rorl
decl
out
sldt
jmp
pusha
not
pushl
add
stc
rcr
cmc
mov
stc
test
mov
lea
je
cmp
sub
bt
clc
cmp
pushf
pushl
mov
lea
ja
call
mov
fadds
insb
and
push
push
clc
dec
mov
dec
data16
imul
cmp
inc
int
test
cwtl
mov
and
lds
cmc
fcmovbe
ret
js
or
aad
jno
inc
sub
and
push
clc
cmp
repnz
imul
and
sbb
jmp
push
mov
mov
clc
pusha
xor
xchg
dec
pop
cwtl
rolb
test
mov
pop
jns
xchg
jnp
sbb
adc
cmc
leave
out
test
call
fistpll
pop
cmc
mov
mov
and
mov
mov
or
mov
popf
sub
insl
popa
push
mov
pop
adc
loope
lahf
jo
js
pushf
ret
loop
mov
ljmp
iret
dec
cltd
cltd
mov
mov
notb
mov
dec
clc
jo
ss
scas
push
clc
pop
or
and
andl
xchg
add
inc
scas
not
movsb
mov
xchg
imul
cli
xchg
cmp
mov
push
loop
sti
push
and
inc
dec
adc
lods
je
adcb
inc
iret
stos
sub
inc
mov
test
jb
out
movsb
pop
dec
xor
fidivl
js
jns
mov
test
mov
push
in
push
inc
iret
mov
adc
inc
push
inc
push
dec
xor
cs
insb
add
fwait
aad
cli
jmp
std
sub
rcrb
cmpsl
and
sbb
or
pop
push
out
mov
dec
inc
and
movb
pop
push
cwtl
xchg
sbb
xchg
das
test
dec
cs
push
enter
sub
jns
je
adc
lcall
lahf
xchg
orl
or
imul
add
xchg
cltd
insl
push
push
test
inc
sub
inc
add
mov
xlat
sub
adc
icebp
sahf
sub
lods
jo
pop
xor
sbb
outsb
jl
dec
sbb
mov
jmp
add
nop
inc
int3
xchg
hlt
pop
fwait
ret
inc
aaa
xchg
pop
daa
sub
mov
insl
xchg
outsl
std
lds
jns
add
test
lahf
dec
sarb
fcoms
pushf
cmp
jno
orl
dec
push
cmp
xor
dec
jae
fcomps
sbb
mov
icebp
xlat
jl
jnp
mov
lock
leave
mov
dec
xor
outsb
jo
lds
xor
mov
or
add
mov
cs
xor
loopne
mov
and
in
sbbl
fbld
xor
dec
sub
xor
out
jmp
lahf
outsl
pop
aas
xor
add
inc
adc
and
add
fdivs
in
sub
std
jno
or
fstpl
jnp
adc
test
mov
mov
sub
shlb
mov
pop
lea
popa
cld
jle
pop
mov
jp
pusha
mov
xor
adc
add
add
dec
test
add
push
inc
shll
test
fcomp
jmp
gs
xor
jns
inc
add
shl
imul
lea
je
not
mov
lea
push
bswap
push
movzwl
movzbw
lea
lea
movsbw
pushf
mov
push
lea
call
push
jmp
pusha
pushf
movl
lea
jp
pushf
movl
push
lea
jmp
add
push
insb
gs
test
test
movzwl
sbb
bswap
mov
jmp
add
inc
imul
inc
gs
outsb
jne
gs
jne
je
je
insl
add
xchg
rcrl
mov
inc
xchg
sub
sbb
cmpsl
leave
movsl
ja
shll
loopne
xor
mov
and
cmp
loop
jbe
scas
je
out
push
stc
das
ljmp
pop
mov
int3
fistps
inc
inc
lret
mov
xchg
lds
repz
mov
out
and
pop
mov
mov
dec
and
fcomp
lods
scas
lahf
lahf
lds
jp
jp
popl
add
fcoms
jns
mov
in
lcall
push
stos
add
aas
addr16
xor
cmp
jb
pop
xor
sbb
fcompl
xchg
daa
jecxz
mov
or
jnp
mov
mov
mov
out
jmp
adc
jmp
add
push
gs
outsb
jne
outsb
outsw
add
add
je
je
imul
push
add
add
je
outsb
jne
je
je
add
add
insb
jae
jb
jo
outsb
add
add
popa
jo
jb
add
add
pusha
lea
jmp
add
push
imul
insb
insb
outsl
arpl
add
fsub
xchg
repz
aas
iret
sbb
ljmp
and
je
push
cmp
pop
mov
movsb
xchg
sbb
test
ud2
add
mov
rorb
sub
lods
cltd
jge
and
aad
cld
cmp
mov
and
jmp
add
inc
imul
push
pusha
lea
je
pusha
lea
jmp
scas
jns
das
xchg
fsubs
cli
jp
lcall
mov
stc
jecxz
daa
fwait
rol
repz
in
sub
pop
mov
mov
movsb
movsb
pop
filds
rcr
iretw
jnp
aas
pop
cmp
jecxz
and
les
fsubrl
or
pop
mov
xor
les
insl
hlt
mov
out
push
sub
xchg
fcomp
mov
mov
push
inc
cmp
add
cmpsl
pop
jge
jp
jg
das
scas
pushl
dec
dec
inc
unpcklps
cmp
or
and
sub
cld
ljmp
xor
jb
push
push
inc
dec
lahf
addr16
dec
imull
push
xor
hlt
jge
lret
aas
imul
mov
pop
xor
enter
pop
mov
xchg
nop
bound
mov
inc
jbe
xchg
xchg
lods
mov
pushl
out
xchg
imul
insl
es
inc
iret
clc
jle
inc
inc
add
inc
outsl
outsb
je
outsl
insb
push
gs
imul
gs
jb
arpl
jae
gs
jo
mov
lock
fdivrs
rorl
imul
orl
dec
stc
add
enter
add
xchg
rcrb
pusha
movsb
add
xor
das
and
sbb
inc
mov
lret
pop
not
std
jecxz
xchg
nop
in
lcall
mov
mov
cltd
pop
push
inc
adc
jnp
push
or
mov
sbb
push
or
inc
add
lds
cwtl
adc
test
dec
rcrb
and
shll
adc
pop
pop
or
dec
and
in
jl
test
sub
inc
iret
cmc
inc
inc
idiv
jmp
movzbl
lea
pusha
mov
pushf
lea
ja
push
call
mov
not
pop
jmp
mov
xchg
sub
push
fwait
add
das
mov
push
mov
adc
or
int3
icebp
ret
jge
mov
mov
test
and
sub
movsb
sti
dec
mov
jg
ja
icebp
loope
mov
add
push
testl
ss
or
sbb
jl
xchg
inc
dec
js
mov
and
jne
icebp
xor
popa
int3
mov
inc
nop
dec
cmp
or
mov
pop
or
out
jo
add
in
or
mov
dec
push
sbb
fadds
pop
sub
in
mov
incl
add
arpl
outsl
jne
gs
jbe
outsb
je
lea
jno
pushf
mov
pushf
lea
jmp
jmp
push
push
inc
push
xor
cs
insb
add
orb
add
jecxz
xor
inc
and
xor
je
add
mov
pushl
lea
jmp
push
mov
jmp
add
push
jb
arpl
outsl
jo
jo
outsb
jne
mov
push
mov
pushf
pushf
lea
call
pushf
push
pushf
mov
push
pushf
push
pushl
lea
jmp
setnp
mov
mov
call
add
inc
gs
jb
jns
imul
add
popa
insb
inc
insb
insb
outsl
arpl
movzbw
mov
movb
mov
mov
pusha
mov
push
push
pushl
ret
add
cmc
cmp
mov
lea
jb
bt
cmp
jmp
dec
stc
call
mov
fsubs
dec
pop
mov
cwtl
pushf
sub
and
out
lret
sysexit
sub
inc
into
ss
pop
mov
mov
paddusb
inc
movsb
sub
inc
or
mov
jmp
push
hlt
in
jmp
std
stc
pop
adc
cmpsb
mov
inc
jae
gs
push
push
aaa
mov
out
mov
jp
aas
sub
xor
xor
cmp
loopne,pn
mov
cltd
mov
sbb
sti
jae
fldlg2
sahf
push
mov
lret
gs
xchg
sbb
das
adc
xchg
jp
push
jne
es
push
loopne
push
sarb
adc
enter
out
add
in
hlt
iret
loope
pop
sub
popf
sub
sarl
gs
push
and
push
clc
pop
pop
mov
mov
lahf
or
push
scas
mov
test
mov
or
mov
inc
cmp
shlb
mov
cli
mov
inc
cs
mov
cmp
xor
stc
int
xor
mov
jmp
mov
lea
je
call
lea
jb
btr
inc
mov
sub
mov
cmc
and
not
shr
sub
mov
stc
bts
pusha
rcr
add
lea
js
bswap
setg
setb
pusha
lea
pusha
lea
call
push
push
call
call
add
dec
outsl
popa
fs
jne
jae
jb
add
test
lea
je
pusha
lea
jmp
fadd
push
sub
mov
jmp
mov
fwait
data16
jae
aas
mov
pop
pop
xchg
outsb
movsl
xchg
iret
js
dec
loope
scas
mov
ds
pop
lea
adc
push
enter
fs
push
xchg
mov
test
push
push
out
cli
in
sub
std
std
or
inc
xor
inc
jo
sti
xor
sahf
sbb
mov
sub
pop
xor
dec
jecxz
movsb
push
adc
lret
mov
mov
jne
shrl
mov
outsl
dec
mov
inc
test
mov
mov
mov
pop
pop
pmaxsw
stc
out
sbb
call
dec
into
cwtl
or
cmp
fsubrs
adc
pop
push
ror
cmpsl
imul
pop
adc
clc
pop
xor
imul
mov
or
enter
sub
cmp
test
xor
or
mov
iret
sbb
add
dec
fs
jne
jb
push
jb
arpl
jae
outsl
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
sub
mov
test
cmp
movl
mov
lea
ja
push
imul
stc
add
push
lea
jmp
jmp
movzbw
dec
cmc
mov
clc
clc
push
and
pushl
pushl
cmp
add
lea
cmc
pushf
pushf
add
pushf
push
jmp
add
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
sub
and
push
fadd
add
mov
fs
jae
bswap
movzbw
mov
lea
call
inc
cmc
neg
pushf
jmp
test
cmp
call
bt
clc
sub
pusha
test
test
push
cmp
pushf
push
push
jmp
movl
pushl
adc
lea
call
add
push
gs
imul
outsl
arpl
jae
bt
shl
pusha
add
jmp
lea
je
push
push
xchg
jmp
call
pusha
movw
mov
push
pushf
pushl
ret
dec
mov
xchg
fdiv
xor
lahf
fldt
xchg
repz
xchg
dec
xor
ret
xchg
add
adc
sub
jp
scas
push
mov
push
mov
frstor
repz
xchg
lock
outsl
mov
ljmp
push
mov
scas
cmpl
fidivrs
mov
mov
push
stos
xchg
jp
lock
xchg
movsb
xchg
outsl
aas
pop
add
mov
jg
pop
push
out
push
sbb
and
ja
stc
test
clc
jmp
call
add
dec
gs
jo
gs
jb
jns
lea
jne
stc
call
cmp
cmc
add
push
lea
pushf
lea
je
pushf
pushf
lea
call
pusha
push
pushf
movl
lea
jb
sbb
shrd
not
neg
cmp
lahf
bswap
sbb
bswap
movzbw
mov
bswap
lea
setp
mov
pusha
not
pusha
mov
push
stos
movb
jmp
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
or
ljmp
arpl
sub
sub
mov
or
mov
or
scas
es
shlb
adc
mov
ds
push
rorl
xor
je
push
ret
bound
jle
pop
decl
jae
adc
lret
dec
adc
dec
ds
pop
int3
sub
pop
dec
adc
add
aas
sbb
jmp
ret
rcrl
add
cmpsl
mov
inc
fs
push
call
and
ja
pusha
pushf
lea
jb
pusha
call
lea
je
pushf
mov
mov
lea
jmp
stc
test
cmp
or
call
add
push
insb
jae
gs
popa
insb
jne
add
test
fwait
incl
rorl
jge
or
lea
inc
pushf
xor
add
bt
jmp
jmp
fisubrs
movsl
daa
ja
cmpl
stos
jle
mov
stos
ljmp
fistps
sub
inc
mov
popa
pop
pushf
jl
fisubrs
scas
test
mov
outsb
daa
cmp
jns
outsl
inc
and
fcmovne
dec
stos
jnp
lahf
das
xor
inc
in
mov
data16
mov
adc
je
into
ficoms
mov
push
sbb
mov
iret
xor
add
inc
gs
outsb
jne
je
insl
push
arpl
add
je
jns
je
insl
inc
imul
jns
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
rcrb
add
add
and
add
lea
je
stc
add
pushf
jmp
push
jmp
jmp
call
clc
cmp
mov
pushl
cmp
call
pushf
lea
je
pusha
lea
lea
pop
movzwl
movw
pusha
lea
lea
call
pop
div
and
adc
pop
rcll
movsb
in
and
ljmp
bound
es
into
sahf
lods
xor
popa
xor
cmp
mov
pop
test
jns
inc
jp
stos
sbb
sbb
jne
mov
test
mov
shll
pop
cmp
and
xchg
ds
or
and
shll
sbb
sti
xor
or
sets
jmp
lea
jb
not
btr
adc
mov
rcl
bsr
mov
pusha
call
mov
movl
jmp
dec
stc
bt
call
fisubrl
scas
bt
xor
adc
pop
pop
sub
outsl
daa
inc
push
pop
out
scas
loopne
xor
mov
pop
pop
addr16
insl
stos
mov
xchg
addl
dec
ret
jo
popa
cltd
add
shll
dec
cmp
inc
cmp
inc
cmp
fxch
mov
sub
aas
and
mov
add
dec
and
mov
cmp
push
std
mov
loop
outsb
xchg
test
jg
cmp
subl
jg
xor
adc
in
jae
mov
lahf
or
pop
out
and
ds
pop
ljmp
or
xchg
dec
adcl
negb
stc
cli
out
xchg
jns
or
mov
mov
js
and
mov
xorb
xchg
das
inc
iret
loop
or
xor
xchg
fdivs
jo
mov
pop
out
xchg
pavgw
sbb
outsb
xchg
in
repz
cmp
mov
jl
cmp
add
xchg
cld
xchg
add
in
push
stos
cwtl
lds
loope
sbb
das
mov
movsl
popa
leave
lods
sahf
add
fnstsw
dec
stos
mov
sbb
xchg
push
push
jecxz
cli
cli
sub
or
dec
or
sbb
sub
insl
aad
add
cld
enter
mov
mov
orb
jo
outsb
ljmp
push
mov
and
pop
cmp
lret
xchg
fsubrs
out
out
pop
sahf
push
sub
adc
and
mov
mov
repz
or
jle
in
lods
jecxz
sahf
ret
push
pop
sub
stc
out
sti
mov
mov
jmp
xchg
mov
and
mov
inc
ja
adc
pop
mov
push
pop
add
loope
fists
gs
cmp
push
xor
cs
add
cmpb
dec
push
add
in
inc
iret
mov
add
inc
gs
outsl
arpl
add
add
je
jns
je
insl
dec
outsb
jne
shr
stc
sub
movzbl
movzbw
pop
push
movw
pushf
lea
jnp
pop
movzbw
pop
movzbw
movzbw
jp
pop
pushf
pushl
pushf
pushf
mov
jmp
pushf
pushf
mov
pushf
lea
jmp
pushf
imul
clc
pushf
jmp
in
inc
ds
fadds
xchg
flds
cmc
insl
stc
cmp
lcall
mov
dec
in
loop
jmp
shll
xchg
bound
rcr
dec
scas
sub
xor
sbb
daa
das
dec
sahf
xchg
aam
mov
adc
pop
pop
mov
enter
xor
cmp
lods
int
hlt
movsb
jl
subb
mov
mov
inc
cmp
insb
fidivs
fwait
pop
cs
xchg
jg
push
outsb
int
hlt
enter
cmp
imul
pop
popf
scas
dec
push
aad
dec
imul
adc
jmp
push
adcb
jmp
iret
aaa
out
dec
das
push
mov
push
or
in
xchg
cld
push
sbb
or
sub
mov
adc
scas
cmc
lock
repz
bt
test
cmpb
pushf
pushl
pushf
pushf
lea
jne
aas
adc
xor
call
mov
pushf
jmp
pushl
call
add
push
popa
imul
jne
inc
jbe
outsb
je
add
mov
pushf
pushf
movzwl
ror
btr
mov
call
cmp
lahf
lahf
movw
lea
jmp
fs
cs
dec
push
xchg
lods
sbb
rorb
push
pop
lods
pusha
popf
dec
imul
cmovge
and
mov
js
dec
sbb
mov
or
aam
out
push
cmp
sub
dec
add
xchg
and
pusha
and
lds
mov
test
add
lret
inc
lods
xorl
xor
add
and
sbbb
cmp
mov
fsubl
jae
mov
cmc
adc
sub
pop
or
adc
pop
arpl
cmpsl
jbe
sub
push
popa
jno
into
sbb
imul
add
push
jmp
stos
call
pushf
movl
jmp
aam
inc
cmp
fidivrl
stos
repnz
and
pop
mov
push
add
data16
or
pop
pop
inc
sub
push
xchg
outsb
movsl
push
aas
dec
in
test
mov
clc
cld
cs
inc
pop
cmc
rcll
xor
lcall
push
xchg
and
and
and
lods
push
pop
push
lcall
push
repnz
jl
xor
stos
pop
aas
pusha
lea
ja
pushf
imul
sub
jge
pushf
add
mov
pushl
push
movb
lea
jmp
test
bt
repnz
pusha
movb
mov
lea
jl
jne
movsbw
movb
movzbw
push
movzbl
bswap
lahf
lahf
lea
call
xchg
lea
call
movl
pusha
push
pushl
pushf
lea
jmp
add
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
aaa
or
mov
shl
lea
call
pop
ret
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
scas
loope
lcall
leave
pusha
call
imul
fsubs
ljmp
xor
cmpsl
xchg
gs
lea
sbb
add
xchg
aam
ss
aad
out
inc
mov
jbe
mov
or
mov
or
mov
mov
jge
xchg
fmul
inc
scas
out
mov
mov
and
and
xor
aad
stos
leave
rorl
loope
pop
cmp
dec
outsl
aas
pop
dec
push
xor
mov
gs
add
adc
pop
push
lods
test
popa
movsl
sbb
in
sbb
orl
xchg
sti
in
ljmp
insb
test
bound
in
test
add
cmp
cmp
push
push
lods
cmp
test
cmc
pop
ja
and
loope
iret
push
sbb
fcmovnb
inc
and
dec
in
inc
push
pusha
movl
push
push
movb
lea
jmp
cmp
pop
cmp
mov
dec
mov
insb
mov
cmp
inc
xor
xor
sbb
aad
ss
add
xor
incw
enter
mov
jns
cmp
fldenv
scas
inc
mov
pop
ds
cs
mov
sahf
clc
bound
mov
and
dec
add
ss
and
mov
leave
ficoms
repz
fnsave
sbb
mov
mov
andl
ret
dec
iret
sbbb
fwait
outsb
add
push
popa
imul
insb
gs
bound
arpl
movb
movl
mov
jmp
add
push
push
dec
outsl
je
data16
arpl
inc
add
cmp
incl
or
in
call
add
inc
gs
imul
js
inc
add
add
add
xor
push
xchg
push
cmp
add
lea
inc
sub
rol
lea
not
rol
push
bts
bswap
btr
bts
push
bt
push
add
rol
sub
shl
xor
pushf
pop
bswap
movzbw
lea
pusha
mov
jmp
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
movl
pushl
setle
lea
lea
call
sub
pushf
pushf
push
pushf
mov
jmp
add
push
jne
jb
inc
outsl
jae
gs
arpl
add
jmp
pushf
jmp
movsbw
lea
jmp
cmp
clc
or
pusha
pushl
lea
jns
push
lea
je
call
add
inc
jb
popa
je
push
outsl
jne
fs
arpl
outsb
add
cmp
call
setb
not
lea
jmp
cmp
jmp
bts
push
shr
bsf
not
mov
jmp
add
push
gs
fs
imul
xchg
fmuls
mov
jle
adc
js
fs
dec
pop
clc
push
add
mov
lret
test
pop
movsb
mov
mov
xor
push
arpl
hlt
data16
mov
shll
push
sbb
push
push
push
js
push
aad
xchg
mov
cld
or
push
hlt
pop
or
movsl
xor
cmp
xor
bound
sahf
cwtl
xchg
ss
fsubs
and
xchg
rcll
jne
sbb
fwait
xchg
mov
sbb
xor
test
sbb
aam
jle
frstor
shrb
imul
lods
jge
push
cmp
or
mov
imul
inc
enter
adc
loop
or
arpl
movsl
and
add
dec
mov
js
mov
in
fmul
mov
daa
xchg
jno
aam
cmp
lret
dec
test
mov
adc
loopne
mov
fwait
xchg
mov
mov
sbb
xchg
push
jb
out
insb
popf
add
inc
push
popa
les
addl
and
lock
lea
mov
test
mull
dec
das
pop
inc
pop
push
stos
aaa
jmp
insl
jg
and
jb
lcall
mulb
add
ficomps
cmp
xchg
pop
ds
repnz
cmpsb
mov
orb
daa
mov
gs
imul
js
inc
add
mov
pop
push
jmp
add
push
je
dec
outsl
jbe
dec
gs
outsl
jb
add
push
dec
inc
dec
xor
cs
insb
add
add
inc
gs
popa
insb
jne
add
or
aaa
xchg
fdivs
out
outsb
jb
push
mov
addb
sbb
cli
lcall
test
mov
hlt
nop
stc
aad
lods
jns
lods
test
xor
mov
cltd
imul
pop
sbb
rorb
mov
call
add
insb
jae
jb
jo
outsb
inc
add
xchg
lea
je
cmp
cmp
cmp
sub
test
test
call
pushf
movl
pushf
movw
call
pusha
pushf
call
dec
stc
bt
cmp
clc
mov
push
add
push
cmp
jmp
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
lds
adc
xor
mov
xchg
pusha
jmp
jmp
add
inc
gs
outsl
imul
jbe
push
je
imul
movl
pusha
lea
jmp
icebp
jecxz
xor
adc
aad
roll
sub
inc
jne
fwait
rcll
dec
sbb
sub
cmp
add
hlt
je
dec
push
scas
xor
sub
mov
fbstp
xor
dec
inc
adc
shl
clc
out
orb
imul
or
or
sbb
inc
mov
mov
lahf
adc
mov
fstps
test
inc
aaa
pop
jmp
and
dec
fsts
push
les
mov
cld
hlt
add
movsb
mov
push
dec
cmp
insb
push
loopne
dec
jns
xor
or
into
mov
pop
jmp
add
in
mov
push
lock
fdivr
bnd
dec
mov
out
cmp
pop
xchg
push
or
mov
sti
iret
icebp
loope
push
mov
les
call
mov
pop
pop
xor
and
repz
push
out
xchg
pop
pop
movntq
out
ret
jg
dec
xchg
push
lret
aam
enter
icebp
shll
ret
mov
xchg
pop
push
jmp
pop
mov
jmp
xchg
fsubrs
mov
jbe
cmpsb
rclb
mov
scas
insb
movsb
js
adc
push
mov
cs
push
sub
jo
mov
mov
push
xchg
mov
mov
xlat
xchg
push
xchg
fadd
lods
mov
cli
pop
pop
bound
xor
xor
and
push
inc
daa
add
loop
xor
add
out
push
pop
xor
cmovg
mov
push
push
ja
in
push
inc
dec
adc
test
jmp
shlb
cmp
xor
arpl
ret
outsb
out
jae
push
add
in
push
lret
repnz
cmp
call
jb
sub
dec
jecxz
mov
shll
jo
incb
inc
push
aad
jnp
imul
loop
push
pop
push
mov
popa
aas
cmpsl
outsl
bound
out
or
adc
pop
cmpsl
arpl
movsb
movsb
fildll
dec
mov
xchg
cwtl
cmpb
les
lock
lret
mov
test
fcomps
jp
es
mov
jmp
cli
fsubr
xor
push
pop
insl
and
ja
mov
pop
aad
hlt
mov
ficompl
and
jmp
xchg
stos
push
lret
ja
push
dec
enter
loope
in
add
loopne
scas
js
sub
nop
lock
and
test
xchg
fwait
icebp
lret
push
mov
push
mov
push
das
sbb
push
les
mov
pop
adc
fld
lea
inc
cmc
in
mov
out
test
xor
movsl
jl
xchg
cwtl
lahf
push
call
add
inc
jb
popa
je
push
popa
je
gs
inc
jb
jae
add
add
je
imul
outsb
addr16
add
je
or
xor
movl
pushf
mov
push
mov
push
pushl
ret
push
pushf
jmp
add
inc
jb
popa
je
dec
outsb
jne
jge
mov
outsb
scas
or
mov
sub
mov
insb
mov
push
leave
cmp
sub
fs
lods
inc
pop
movsl
mov
mov
sbb
push
mov
mov
mov
pop
mov
mov
mov
mov
pushf
pushf
mov
mov
call
sub
adc
pusha
bts
add
add
call
pushf
inc
pusha
push
pushl
lea
jmp
add
inc
gs
je
dec
popa
outsb
fs
gs
je
add
shrb
outsl
movsl
mov
movsb
not
mov
setns
call
jmp
pushf
add
mov
pushf
pusha
mov
lea
jmp
add
inc
gs
jb
jns
outsb
jne
add
dec
gs
popa
addr16
outsl
js
add
pushf
in
ljmp
aas
cmpsl
sbb
adcb
ljmp
xchg
push
sahf
jmp
sub
or
btr
mov
mov
bt
cmpb
jmp
pushf
xchg
call
push
dec
inc
dec
dec
xor
cs
insb
add
xchg
xchg
fmul
and
cmp
and
mov
enter
lret
imul
dec
test
jne
push
imul
dec
xchg
pop
adc
push
lock
cmp
mov
popa
fwait
and
div
sub
jnp
xchg
lds
je
xchg
mov
add
in
out
push
fcoml
adc
imul
sbb
jl
pop
loope
stc
jo
mov
stc
jae
inc
mov
fisubrl
dec
repz
fs
mov
xor
popf
mov
cmpsl
pop
ja
orb
cmpb
push
mov
cmp
and
dec
jge
pop
and
lret
lret
mov
mov
adc
mov
fcompl
xor
in
call
xor
pop
inc
mov
mov
pusha
jle
scas
cmp
mov
pop
mov
fildl
dec
pop
dec
xchg
push
mov
lcall
xchg
dec
mov
xchg
sbb
cs
clc
inc
xor
sbb
adcb
sbb
lret
xchg
test
push
mov
lods
in
jne
sub
jecxz
adcb
sub
cli
jmp
cmc
in
lock
dec
adc
lcall
int3
rolb
adc
or
aam
jmp
dec
stc
fldl2t
mov
test
das
sub
pop
sahf
lock
in
and
pop
and
fwait
mov
xchg
xchg
frstor
sub
and
jg
inc
jnp
sbb
dec
push
pop
push
into
mov
push
out
xchg
inc
jg
inc
iret
adc
add
dec
outsb
jbe
insb
imul
je
add
dec
jo
outsb
push
inc
dec
popa
outsb
popa
addr16
add
sbb
jmp
lea
ja
stc
pusha
stc
jmp
dec
dec
and
xchg
fcomps
ljmp
xchg
sbbb
mov
pop
nop
push
push
je
xor
dec
cltd
add
sbb
outsb
into
cmp
out
mov
xor
jge
imul
pop
loopne
add
dec
insl
add
adc
jnp
mov
es
fsubs
inc
aas
and
sub
popl
sbb
enter
inc
shrb
adc
mov
sbb
push
cmp
cwtl
incl
or
ljmp
fsubs
xchg
or
movsb
divl
mov
adc
aad
inc
test
dec
stos
jge
mov
jbe
ss
push
dec
and
inc
dec
mov
mov
xchg
bound
adc
mov
shll
ret
xchg
lods
xor
cmpsb
lods
cmp
das
xor
dec
lods
testb
adc
xchg
xchg
repz
jne
jnp
mov
test
sbb
dec
push
test
jge
add
out
pop
jp
loop
lods
in
or
mov
jg
xor
xchg
out
into
ja
cmc
sbb
enter
fstl
dec
js
lds
xchg
push
push
orl
movb
ret
push
dec
sbb
cs
or
inc
repnz
inc
fwait
test
sub
sub
test
lcall
push
xor
movsb
jge
lds
lds
pop
mov
xchg
bound
out
jns
inc
push
aad
fcom
or
outsl
pop
xor
pop
fistpll
or
scas
xlat
insl
mov
insb
xor
decb
adcl
push
pusha
push
pushf
lea
jmp
add
add
inc
add
mov
dec
add
add
add
push
test
ljmp
sub
add
pop
out
jmp
inc
and
lret
pusha
movl
pusha
pushf
push
movw
lea
jmp
push
outsl
jb
jns
and
jae
popa
jo
insb
imul
and
outsb
outsb
outsl
je
jb
outsb
and
fs
popa
and
jb
jne
insb
and
arpl
outsb
gs
sbb
mov
fcoms
xor
mov
adc
repz
aad
jg
sbb
push
cld
in
insb
fmuls
xchg
call
lods
inc
lods
or
xor
ja
lock
aam
xor
mov
add
std
and
icebp
fnstsw
scas
cmp
jl
push
and
or
lret
dec
ret
xor
in
dec
xor
cmp
jns
cmp
dec
xor
aad
scas
mov
lahf
cmpsl
mov
sbb
sub
mov
xlat
jbe
hlt
call
je
insb
repnz
sub
pusha
out
enter
test
mov
sti
cmp
xchg
sbb
fsub
movsb
xchg
nop
cmp
pop
dec
sub
hlt
enter
xorb
xchg
sbb
fisttps
lods
das
lds
or
inc
mov
inc
rorl
out
pop
push
test
jl
clc
aam
mov
pusha
test
int3
sub
je
pop
or
pop
outsb
jae
arpl
xchg
call
mov
pop
mov
inc
cmp
mov
lea
push
test
sub
movsb
and
int3
mov
mov
rcll
fcmovnb
cmp
sub
mov
sahf
js
in
and
push
scas
outsb
push
data16
and
add
outsl
mov
cli
stos
mov
insl
outsl
jbe
dec
outsb
jne
aaa
add
xchg
fcomps
test
test
ja
cmp
xchg
cmp
aam
cwtl
hlt
jo
add
xor
into
sbb
sbb
jmp
cmc
mov
insl
out
sbb
adc
fistl
out
xchg
push
xchg
movsb
or
sub
ret
lret
jae
push
mov
test
lret
stos
repz
out
adc
in
out
mov
or
jns
push
ret
popl
xlat
pop
aaa
sub
lahf
daa
pop
imull
xlat
xor
enter
mov
cmp
packssdw
inc
xor
push
adc
mov
insb
adc
cld
test
push
ret
out
shrb
mov
cltd
stc
jmp
inc
jl
pop
dec
sti
mov
mov
push
adc
fbld
cmpsl
pop
jns
pop
addr16
repnz
inc
cmp
mov
scas
xorl
das
inc
and
cwtl
fwait
ja
jne
pop
inc
data16
fcomps
add
js
clc
hlt
movsb
aaa
popf
cmpsl
xor
jae
jne
pop
mov
rcr
dec
dec
sbb
push
loopne
cld
fisubl
inc
lock
sub
popf
sbb
movsb
adc
imull
mov
jb
sti
lods
adc
mov
lahf
cli
sbbb
push
sub
lods
pop
iret
fwait
xchg
lret
mov
xor
xor
mov
bound
or
cltd
jbe
lcall
ljmp
scas
mov
mov
lret
mov
or
cld
mov
add
xor
cmp
jecxz
jbe
lcall
sub
fdivp
fists
jg
outsl
imul
pop
js
sub
pusha
mov
dec
adc
add
xor
xchg
call
or
mov
pop
xorb
dec
sbb
adc
pop
pop
dec
loop
es
rcr
mov
mov
std
sarl
xchg
fcom
sub
lods
repnz
adc
ret
negb
sub
push
mov
outsb
lret
iret
int
imul
push
xchg
daa
pop
adc
ret
fisttps
scas
jmp
sarb
jle
fstpl
das
xor
pop
push
jnp
loop
enter
dec
cmp
ss
inc
in
jns
cmp
fsub
test
nop
or
cmp
pusha
loop
loopne
ja
gs
add
adc
jb
loop
pop
adc
mov
loope
movsl
mov
rorl
add
xchg
cmp
inc
fs
je
insl
add
add
je
popa
jb
outsb
je
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
popa
pop
push
push
xchg
fcomps
jp
push
jp,pn
ss
fimull
cli
push
insb
pop
dec
lds
mov
pop
leave
mov
push
xchg
dec
arpl
scas
test
aas
fcmovnbe
leave
pop
dec
lea
stos
ret
pop
mov
cmpsl
popf
jecxz
pop
mov
pop
jge,pn
mov
xor
shlb
movntq
xchg
sbb
sbb
insb
inc
pop
or
fmul
test
sbb
push
cmp
dec
fcompl
movl
pusha
push
lea
jmp
call
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
dec
xor
cs
insb
add
pop
std
std
adcl
mov
mov
dec
cmp
es
jno
mov
pop
outsb
ss
inc
dec
sbb
jge
jmp
inc
pop
and
aam
pop
roll
fisubs
adc
test
adc
add
adc
inc
push
int
in
xchg
push
inc
scas
adc
mov
enter
pop
ror
jl
flds
or
jmp
rclb
fs
jb
test
test
xor
jmp
add
inc
gs
bound
arpl
add
int3
sbb
in
cmp
adc
jmp
mov
adcb
mov
stos
xchg
xor
pop
icebp
std
fabs
cltd
add
mov
int3
sub
push
clc
and
scas
xchg
pop
cmp
xor
sub
fistpll
cs
addb
jbe
cmpsb
push
sub
divb
das
lcall
int3
sub
fcmovne
in
mov
push
cltd
mov
mov
int
mov
or
sbb
or
push
ret
xchg
stos
xor
mov
icebp
cmpsb
push
push
add
sbb
shr
lock
xor
inc
and
fiadds
ret
xchg
push
and
jge
mov
adcl
lds
int
xor
test
loopne
in
dec
pop
xchg
jp
and
fmulp
mov
inc
xor
inc
iret
adc
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
jb
je
push
lea
jne
xchg
bsf
add
pushf
mov
rcl
sub
bsr
lea
pusha
pusha
sub
pushl
test
test
clc
pushl
popl
movl
push
movb
cmp
pushf
lea
ja
pusha
lea
ja
pusha
sub
bts
shld
cmc
btc
add
add
call
pushf
movl
pusha
pushf
lea
jmp
mov
push
lea
jmp
push
pushf
call
int3
popf
pushf
call
pusha
xchg
jmp
jmp
add
dec
jae
outsl
outsl
insl
gs
and
lea
jne
cwtl
movb
not
push
lea
push
call
lret
add
mov
pusha
dec
adc
jno
cmp
sub
dec
cmp
lock
les
lods
dec
mov
jnp
imul
out
sub
lcall
testl
and
cmp
xor
imul
mov
repz
or
cwtl
gs
jo
mov
cmpsl
cmp
and
pop
push
jl
dec
jnp
sub
iret
pop
mov
push
push
jbe
push
and
lret
sahf
pop
inc
inc
adc
or
aas
dec
into
add
push
popa
je
inc
imul
dec
popa
insl
gs
add
add
je
je
imul
inc
add
shl
bt
pushf
repnz
push
jmp
neg
mov
call
add
dec
outsb
jae
jb
dec
outsb
jne
add
fs
je
push
mov
not
lahf
mov
not
lea
push
push
push
movl
push
pushl
popl
pusha
push
pushf
pushf
pushl
ret
cmc
test
jmp
jae
call
xchg
or
xchg
fcoms
xchg
repnz
sub
lahf
ja
pusha
cli
shlb
mov
jge
sbb
stc
or
sub
or
and
dec
pushf
mov
sbb
mov
clc
shrb
mov
roll
xchg
fsubs
mov
lcall
loop
push
xchg
cmpsb
int
test
inc
sub
in
fnstcw
pop
mov
mov
and
fcmovnbe
js
iret
std
xlat
inc
movsb
xchg
mov
sbb
cli
and
pushf
or
cmpsb
pop
pop
and
mov
dec
add
sub
pop
jae
jg
and
repz
leave
cli
pusha
ss
mov
adc
jg
mov
test
ss
idivb
jbe
dec
pop
xchg
cmc
sbb
adc
cmc
pop
sbb
nop
mov
cmp
push
xor
rolb
outsl
jnp
push
sub
jge
adc
sbbb
lea
and
loopne
mov
pop
dec
fstpt
aas
out
mov
inc
cmpsl
aaa
jae
inc
xchg
pushl
mov
notb
adc
mov
dec
adcl
pushf
pushf
scas
mov
cmp
add
pop
stos
mov
sbb
and
stos
jne
jae
imul
in
js
or
mov
pop
out
cmp
push
cmp
pop
inc
dec
fdiv
pushf
and
push
je
test
dec
sub
call
push
inc
iret
daa
mov
ror
pushf
call
mov
not
pop
pop
lods
push
call
int3
rep
add
sbb
or
fmul
mov
lcall
movsb
cs
sub
inc
das
jnp,pt
xor
add
arpl
mov
repz
mov
jp
data16
rcl
mov
cmp
xchg
sti
add
pushf
xchg
not
mov
pushf
not
mov
mov
jmp
mov
movzbl
cmc
rcr
mov
movzbl
cmc
cmc
or
pushl
popl
shl
btc
jmp
aam
lea
bt
bt
cmp
jmp
call
push
pushf
mov
pushf
pushf
movb
push
lea
jmp
mov
ror
movsbw
bsr
pushl
call
mov
pusha
mov
pop
lea
push
mov
pop
not
pushf
popl
shld
pop
bswap
mov
xor
and
mov
jmp
pushf
jmp
mov
pusha
pushf
lea
jmp
push
pushl
popl
jmp
call
btc
sub
ror
mov
rol
mov
cmc
add
pusha
pusha
pushf
pushf
mov
pushl
push
lea
jmp
shl
movzww
stc
jmp
neg
mov
push
jmp
sub
mov
test
bt
pushf
add
pushf
jmp
movzbw
jmp
xor
mov
inc
setbe
inc
setnp
btr
cmp
adc
xor
sbb
movzbl
cmc
mov
stc
or
push
push
movb
lea
je
test
xor
pushf
jmp
movzbw
push
mov
pop
mov
call
call
shl
sar
mov
bsr
cmc
or
mov
neg
stc
push
pushl
popl
pop
shr
movl
shl
inc
sar
mov
jmp
mov
jmp
pushf
call
dec
cmp
stc
xor
clc
pusha
sub
pushf
movb
cmp
sub
mov
jmp
bt
sub
test
add
pushf
call
not
movzbl
call
cld
call
pushf
bswap
pusha
not
bt
cmp
lea
jno
xor
pusha
test
cmp
sub
push
pushf
jmp
mov
pusha
pusha
lea
jmp
pushf
mov
push
pusha
push
lea
jmp
pushf
popl
jmp
mov
lea
jno
pusha
pusha
lea
jne
btc
jmp
call
cmp
pusha
add
jmp
pushl
pushl
popl
pushl
pushf
lea
jmp
pushl
popf
pushl
lea
jmp
mov
movzbl
mov
push
call
movb
mov
mov
lea
jmp
call
mov
pushl
call
call
pushf
movw
xchg
pushf
bswap
not
mov
movsbl
movzbw
bswap
push
push
call
mov
movb
push
movw
movb
mov
pushf
lea
jne
movsbw
bts
adc
mov
pusha
movb
bt
stc
and
cmc
stc
cmp
call
pusha
push
pushf
lea
jne
bsf
or
mov
test
mov
push
clc
cmp
movl
and
mov
cmp
call
push
sub
movw
pushf
lea
jmp
movl
rcl
bt
call
shld
aam
bswap
mov
clc
pushf
sbb
clc
mov
bt
test
add
movl
pusha
mov
pushf
pushf
push
lea
jmp
bt
mov
test
pusha
not
clc
bt
pushf
bt
not
pushl
jmp
cmp
add
push
call
pusha
mov
not
movsbw
bswap
pushf
mov
mov
pop
movzbw
mov
pushf
mov
mov
lea
pop
mov
movw
movsbw
pushf
popl
rol
mov
stc
test
mov
stc
bt
movzbw
push
movzbw
rol
pushl
and
add
push
and
test
push
mov
jmp
mov
jmp
neg
not
ror
shl
bt
and
cmc
mov
pushl
bt
sub
pusha
mov
mov
push
pushl
lea
jmp
mov
sub
clc
cmp
movb
shl
push
push
mov
pushf
jmp
movsbw
sub
cmp
mov
cmc
sub
pushf
mov
jmp
cmp
bt
shl
cmp
jmp
pusha
mov
movzbw
mov
bswap
mov
pushf
popl
pushl
mov
rcl
xor
ror
pushf
mov
btc
sbb
mov
sar
bts
pushl
popl
shld
jmp
movzbl
mov
push
mov
jmp
call
call
call
xor
call
rep
bsr
rcr
mov
pop
mov
clc
pushl
popf
pushf
push
lea
jmp
mov
pushl
popl
pushf
push
pushf
lea
jmp
dec
pushf
cmc
test
xor
jmp
lea
mov
pusha
pushf
mov
jmp
jmp
shr
push
pushf
lea
jb
mov
jmp
cmp
sub
pushf
bt
stc
mov
bt
stc
sub
movw
movb
mov
lea
jmp
adc
mov
cmc
pusha
clc
sub
pusha
call
jmp
pushf
pusha
pusha
pushf
xchg
movsbl
bswap
not
call
bswap
mov
mov
pushf
not
movsbl
mov
pop
setno
movsbw
mov
lea
movw
movzbw
mov
movl
movb
pushl
movb
pushl
ret
mov
push
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
jmp
add
jmp
movw
xchg
jmp
pushf
bt
add
lea
jg
pushf
mov
pushf
push
push
pushf
lea
jmp
call
movb
jmp
add
push
pushf
clc
sub
cmp
lea
pushf
sub
pushl
call
movl
bts
not
shl
bsr
mov
clc
push
test
neg
jmp
pushf
jmp
not
bswap
dec
call
pushf
mov
push
not
lea
pusha
mov
lea
pop
push
not
mov
movsbw
mov
pushl
movsbw
mov
bswap
pushf
popl
cmp
call
call
mov
cmc
jmp
sub
bt
cmp
cmp
call
push
pushf
popl
pushf
call
jmp
sar
movzbl
cmc
xor
call
stc
sub
call
mov
movsbw
pushf
not
push
jmp
pusha
pushf
pushf
mov
push
pushf
pushf
lea
jmp
call
mov
pusha
pushf
mov
push
pushl
pushf
movw
lea
jmp
bswap
mov
pop
push
movsbw
mov
pushf
mov
pushf
popl
cmp
add
mov
pushf
mov
add
shl
not
sar
mov
adc
pushl
popl
rcl
rcr
movl
sar
inc
shrd
mov
call
xorb
jmp
jmp
mov
inc
movb
push
pushf
lea
jmp
cmc
stc
shl
mov
movw
jmp
movb
mov
jmp
pusha
mov
movb
pushl
pushf
lea
jmp
movw
call
bt
sub
mov
lea
jmp
mov
not
mov
bswap
pushf
popl
btr
bswap
sar
movsbw
mov
mov
lea
js
xor
push
pushf
mov
ror
test
shl
pushl
ror
push
bts
sar
mov
push
neg
push
clc
jmp
mov
pusha
push
mov
mov
pushl
pushf
mov
push
lea
jmp
clc
shr
pushl
or
test
clc
bt
xor
pushf
inc
pusha
decl
lea
jae
pusha
pusha
lea
jne
jp
push
pusha
pushf
mov
push
lea
jmp
shld
movzbl
movzbw
mov
setns
dec
sub
movzbw
pusha
movzbw
inc
pushf
dec
shr
xor
btc
push
movzbw
sub
sub
shld
sub
sub
clc
inc
shld
shl
mov
mov
stc
call
pushf
jmp
pushl
popl
pushf
pusha
lea
jmp
movb
pushl
popl
pushf
lea
jmp
add
add
mov
pushf
lea
jmp
aam
shrd
call
pusha
sub
pusha
pushf
movw
lea
jmp
mov
bswap
pusha
mov
pusha
call
adc
setg
lea
mov
rcl
test
mov
pushf
add
jmp
movb
mov
pushf
pushf
pushl
push
lea
jmp
movzbw
not
bswap
cmp
xor
neg
btr
call
inc
bt
xor
mov
sub
jmp
pushl
popl
pushf
lea
jmp
clc
cmc
sub
cmc
call
pushf
popl
jmp
stc
jmp
call
push
mov
movb
lea
jmp
push
mov
lea
not
bswap
push
not
movzbw
push
movsbw
push
pusha
mov
pushf
movl
lea
mov
pushf
popl
pushl
mov
jmp
lea
movb
pusha
lea
jmp
seto
btr
mov
test
call
rdtsc
bsf
bsf
mov
sar
pop
shl
shl
pop
cltd
bsf
lahf
rdtsc
pop
lahf
rcl
test
shl
pop
rol
bsr
pop
bswap
sbb
xadd
btr
popf
pusha
pushf
pushf
mov
jmp
mov
jmp
pushf
jmp
call
pusha
pushl
pushf
xchg
pusha
mov
pushl
movsbw
pushf
mov
lea
call
jmp
add
jmp
push
mov
pushf
popl
pushf
pusha
jmp
adc
movzbw
mov
cmp
and
call
call
not
movzbl
push
push
mov
pusha
lea
jle
mov
call
pushl
popl
push
movl
lea
jmp
call
push
mov
mov
jmp
pusha
jmp
pushf
pushf
mov
pusha
pushf
lea
jmp
lea
mov
lea
jmp
pushf
clc
and
movb
movl
mov
push
call
movw
mov
movw
pushf
pushf
lea
jmp
btr
mov
jmp
pushf
sub
movb
push
lea
jmp
pushf
jmp
pusha
jmp
test
mov
neg
push
call
pushf
jmp
cmp
add
pushf
lea
jmp
inc
stc
setg
mov
pusha
ror
cmc
mov
clc
stc
sub
cmc
sub
jge
clc
cmp
shl
push
call
pushf
popl
pushf
pushl
popl
pushl
movb
lea
jmp
shld
rol
inc
btr
mov
cmc
clc
mov
call
lahf
push
lahf
jmp
pushl
pusha
neg
test
pushf
sub
pushf
lea
jmp
mov
lea
call
pushf
popl
cmc
mov
shrd
mov
shrd
bsf
mov
bsr
btc
pushf
pushl
popl
test
bsr
movl
pushl
mov
cmc
neg
mov
jmp
rcl
movl
shr
btc
btc
cmp
mov
cmc
cmp
pushf
neg
cmp
pushl
test
sub
pushf
pusha
pushf
push
lea
jmp
sbb
rcl
rcl
dec
movzbl
pusha
xor
stc
add
pusha
pushf
dec
cmp
xor
jmp
not
cmp
pusha
pushf
bt
not
test
bt
sub
jmp
pushf
cmc
neg
pushl
stc
sub
push
lea
jmp
jmp
sub
pushf
pushf
push
lea
jmp
shl
notl
aas
shl
mov
pushf
call
cmp
bt
xor
pusha
push
push
xchg
pushl
movl
lea
jb
push
push
movb
pushl
ret
mov
call
jmp
shrd
shld
neg
push
call
mov
movb
pushf
popl
push
jmp
sbb
mov
stc
clc
stc
clc
add
pushf
jmp
mov
bswap
pop
pushf
xchg
lea
push
lea
bswap
movsbw
movzbw
push
bswap
push
pushf
setno
pop
pushf
stc
setne
shl
push
shr
push
mov
shld
test
push
xchg
bsf
bts
rcl
pushl
clc
push
btc
rcr
rol
adc
mov
lea
cmp
push
rol
neg
bt
sub
lea
bt
rol
pusha
rcl
ror
dec
shl
bsf
btc
lea
xor
sub
shr
shr
test
sbb
mov
cmp
rcl
pushf
xchg
mov
sar
movb
add
add
shl
sbb
xor
ror
mov
sbb
btr
not
xor
sub
lea
cmp
sbb
lea
add
neg
stc
not
rcl
push
ror
shrd
sub
call
pushf
pushl
popl
mov
mov
movl
movw
lea
jmp
pushf
jmp
xor
not
btr
neg
clc
and
cmc
rcl
dec
mov
clc
test
call
mov
pushf
push
pushf
pushl
ret
pushf
mov
mov
mov
pushf
mov
lea
jmp
call
jmp
pushl
mov
mov
mov
call
jmp
movb
pusha
pushl
popl
pushf
push
lea
jmp
call
jmp
pusha
lea
cpuid
push
sub
movb
jmp
mov
push
pushf
popl
pusha
pushf
jmp
jmp
mov
bswap
call
bt
call
call
mov
lea
jo
pushf
mov
call
movb
mov
mov
lea
jmp
movb
pushf
call
call
test
and
pushf
mov
jmp
xadd
mov
neg
test
mov
call
push
call
call
call
btr
pushl
popl
pop
movl
bsr
btc
inc
neg
mov
pusha
bt
push
neg
call
mov
pusha
clc
or
pushl
popl
push
movl
mov
mov
stc
push
neg
add
je
test
cmp
sub
pusha
lea
jmp
clc
sub
cmc
cmc
clc
shr
call
pusha
pushf
jmp
pushl
popl
mov
movw
movb
movl
lea
jmp
pusha
pushf
mov
push
pushl
push
push
lea
jmp
lea
mov
call
shl
shrd
mov
dec
stc
btr
mov
push
ror
cmp
pushf
pushl
popl
shrd
btc
adc
movl
pushf
movsbw
lea
rcl
mov
pushl
neg
jmp
mov
push
movsbl
movsbw
movzbw
mov
push
bswap
pushf
popl
pop
sar
mov
call
ror
mov
mov
add
rcr
pushl
jmp
jmp
jmp
cmc
sub
movb
lea
jmp
pusha
pushf
call
pushf
shl
bsr
mov
xchg
cmp
pushf
mov
jmp
mov
jmp
add
add
or
dec
push
push
add
mov
add
movsb
add
outsb
add
cmp
dec
xor
dec
push
imul
inc
push
add
push
add
add
mov
add
jecxz
dec
cmp
add
cmp
dec
dec
or
dec
push
testl
dec
xor
dec
ss
add
add
add
jge
dec
push
jecxz
dec
push
pop
add
add
sbb
dec
dec
mov
add
add
pop
add
jecxz
dec
cmp
add
add
mov
dec
inc
jge
dec
aas
adc
add
in
dec
aaa
aad
dec
aas
addl
dec
dec
cmp
dec
xor
dec
xor
add
add
out
dec
dec
addb
xor
dec
cmp
add
add
add
xor
dec
cmp
add
mov
dec
dec
mov
dec
xor
add
in
dec
dec
mov
dec
aas
addl
dec
dec
out
dec
xor
add
xchg
add
mov
dec
dec
pop
add
dec
add
icebp
add
enter
adc
add
push
add
jecxz
dec
xor
outsb
add
faddl
dec
inc
jge
dec
xor
dec
dec
mov
add
mov
dec
ss
add
mov
add
mov
dec
dec
or
dec
cmp
add
xor
dec
aas
addl
dec
push
outsb
add
jae
dec
xor
dec
cmp
add
pop
add
addl
dec
dec
mov
dec
dec
pop
add
enter
addb
aas
adc
add
inc
add
dec
add
dec
add
jae
dec
xor
jecxz
dec
dec
or
dec
push
xchg
add
outsb
add
mov
dec
dec
mov
add
jge
dec
xor
dec
cmp
add
sbb
dec
xor
addb
dec
icebp
add
mov
add
pop
add
icebp
add
jge
dec
dec
add
add
xchg
add
or
dec
dec
or
dec
cmp
dec
dec
icebp
add
xor
dec
push
testl
dec
dec
icebp
add
mov
dec
xor
jecxz
dec
dec
icebp
add
inc
add
jge
dec
xor
icebp
add
push
add
out
dec
ds
icebp
add
cmp
dec
push
xchg
add
testl
dec
dec
pop
add
jno
dec
xor
dec
dec
icebp
add
in
add
fiaddl
dec
ss
add
icebp
add
faddl
dec
dec
or
dec
dec
out
dec
dec
icebp
add
mov
add
out
dec
dec
icebp
add
pop
add
mov
add
icebp
add
add
dec
ds
pop
add
icebp
add
aad
dec
dec
mov
add
icebp
add
dec
add
testl
dec
dec
out
dec
cmp
add
outsb
add
mov
dec
dec
mov
dec
xor
add
push
add
add
cmp
dec
xor
add
jge
dec
dec
or
dec
xor
dec
ss
add
lahf
add
xchg
add
adc
add
jno
dec
cmp
add
rolb
dec
aas
addl
dec
dec
pop
add
testl
dec
push
imul
xor
xchg
add
js
dec
cmp
add
add
dec
das
jge
dec
xor
aad
dec
push
xchg
add
xor
dec
cmp
dec
push
pop
add
jge
dec
push
pop
add
dec
add
add
or
dec
push
push
add
testl
dec
dec
pop
add
enter
out
dec
push
dec
add
pop
add
jecxz
dec
push
jae
dec
xor
add
faddl
dec
xor
add
addl
dec
push
imul
push
outsb
stc
bt
pushf
pusha
mov
shl
shrd
rol
add
or
inc
setl
sub
lea
bts
sub
mov
call
pusha
shld
rcl
mov
rol
and
dec
add
call
aam
and
pusha
mov
shr
mov
jmp
cmp
cmp
add
call
add
jmp
call
pushl
pushf
popl
jmp
not
pushf
mov
call
pusha
add
movw
pushl
mov
movb
pushf
push
pushl
lea
jmp
sets
add
neg
pusha
xor
clc
bts
xor
neg
mov
cmc
add
mov
mov
movb
movl
inc
mov
lea
jmp
jmp
pushf
popl
pusha
pushf
pusha
pushl
popl
pushf
push
movb
mov
lea
jmp
test
mov
clc
clc
add
cmc
shld
call
ror
mov
cmc
mov
pushf
pusha
bt
cmp
sub
pushf
call
jmp
call
pusha
pushf
xchg
not
pushl
push
mov
movsbl
jmp
test
shl
push
pushf
pusha
mov
call
cmp
bsf
mov
not
jmp
push
jmp
bt
rol
and
mov
or
mov
cmc
test
jmp
mov
push
sub
push
lea
jne
jmp
xor
pusha
test
xadd
mov
shr
cmp
cmp
mov
jmp
call
jne
call
bt
sub
pusha
pushl
pushf
inc
test
push
bt
xchg
call
pushf
popl
push
pushl
call
stc
sub
push
and
pushl
pushf
lea
jne
push
pushf
popl
pusha
pusha
pushl
popl
pushf
lea
jmp
pushf
pushl
mov
push
pushf
lea
jmp
clc
mov
bt
sub
call
pushf
mov
pop
mov
bswap
lea
pushf
popl
rol
clc
cmc
mov
pushl
mov
movsbl
mov
dec
rol
btr
pop
pushl
popl
dec
bsr
bt
cmc
movl
or
bts
pop
movw
mov
cmc
cmc
stc
movw
neg
cmp
bt
movb
cmc
sub
push
pushf
lea
jmp
pushf
xchg
not
mov
pushf
mov
mov
push
bswap
mov
push
movsbw
movzbl
pushf
or
cmp
push
mov
jmp
call
pushf
clc
sub
pushl
pushf
mov
lea
jmp
push
sub
push
movb
pusha
lea
jmp
movw
pushf
pushf
popl
movl
pushf
pushl
pusha
pushl
popl
pushf
pushf
movb
mov
lea
jmp
push
pusha
lea
jne
rol
call
pushf
dec
movb
pusha
inc
bt
neg
test
pushf
cmc
pushf
xor
clc
xor
clc
mov
test
cmp
cmc
clc
sub
mov
pushf
call
pusha
pushf
mov
mov
mov
mov
pushf
lea
jmp
pushf
mov
inc
bt
xchg
stc
stc
add
jmp
pushf
pusha
mov
mov
push
pushf
lea
jmp
push
pushf
lea
ja
sar
sete
stc
rcr
mov
xchg
lea
rcr
daa
ror
cwtl
sub
pushf
ror
neg
cmc
lea
bswap
sar
and
add
sub
movzbw
pushl
call
stc
sub
push
mov
push
call
mov
pushl
push
movb
push
lea
jmp
stc
pusha
cmc
neg
cmp
bt
mov
sub
mov
push
pushf
pushf
lea
jmp
jmp
mov
mov
movsbl
jmp
pushl
popl
push
lea
jmp
mov
movzbl
call
pushl
popl
push
push
lea
jmp
pushf
call
mov
movsbw
movsbw
mov
not
pusha
call
not
pushf
push
mov
jmp
shr
shl
setno
mov
jns
push
stc
sub
movb
cmc
pusha
add
push
jmp
ror
pushf
rcr
mov
cmc
jmp
mov
clc
movl
neg
push
movb
call
push
mov
pushf
movb
pushl
pushl
lea
jmp
lea
jmp
bswap
mov
rol
shld
mov
call
cmp
cmc
cwtl
jmp
pushf
call
mov
pusha
pushl
ret
sar
mov
inc
sar
and
add
call
push
movzbw
push
pusha
mov
bswap
movsbw
movl
call
push
mov
sub
mov
pushl
add
pushf
call
pushf
pushl
mov
push
jmp
sub
movw
clc
cmc
shr
pusha
pushf
push
mov
pushl
jmp
movw
jmp
push
pushf
mov
call
pushl
popl
mov
movb
pushf
lea
jmp
pushf
movl
cmpl
jmp
lea
jne
lea
sete
xorb
not
movzbw
not
pop
push
lea
jmp
mov
mov
pusha
push
pushl
lea
jmp
pushf
mov
stc
call
jmp
pushl
popl
pusha
push
lea
jmp
mov
pusha
pushf
mov
pushl
lea
jmp
jmp
pushf
popl
call
call
pusha
movb
pushf
popl
jmp
test
jmp
movsbw
mov
dec
ror
mov
cmc
add
push
jmp
jmp
pushf
pushf
mov
movw
movl
pushf
popl
movb
push
call
movb
pushl
popl
pushf
pushf
movl
push
lea
jmp
call
mov
mov
xor
pushf
call
or
btr
xor
das
mov
inc
clc
mov
push
call
and
shld
mov
xor
neg
call
push
mov
pusha
pushl
pushl
ret
pushf
pushf
popl
shr
rcl
push
shl
push
shl
clc
not
push
cmp
pushl
rcl
push
not
pushf
shr
xor
mov
cmc
neg
stc
cmc
sub
pusha
pushf
lea
jmp
divl
pushf
call
cwtl
mov
jmp
push
call
movzbw
pushf
mov
pushl
lea
pusha
jmp
push
mov
push
movw
lea
jmp
push
movzbl
mov
jmp
pushf
popl
shl
mov
shl
inc
rol
pushf
mov
xor
shr
shl
mov
call
pusha
mov
jmp
mov
jmp
lea
jno
pusha
pushf
popl
call
test
call
call
call
xor
mov
cbtw
pushf
test
pushf
cmc
cwtl
push
push
sub
call
stc
cmp
pusha
push
lea
jne
lea
and
bswap
shld
xorb
pusha
mov
movl
push
movb
lea
jmp
pusha
xchg
call
inc
clc
push
sub
call
mov
pusha
lea
mov
mov
push
mov
push
lea
jmp
add
call
pusha
call
pushf
pushf
popl
pusha
pushl
popl
pushf
pushf
mov
movb
lea
jmp
lea
jb
mov
push
pushl
lea
jmp
xor
pushl
not
movl
call
pushf
mov
pushf
lea
jmp
pushf
push
mov
not
pushl
call
jmp
bt
mov
pusha
mov
pushf
cmp
pushf
test
add
call
cwtl
daa
or
pushf
rdtsc
cmp
sub
call
mov
bswap
shld
movzbl
sub
xor
setb
dec
rcr
jmp
pushf
mov
call
call
add
pushf
shrd
jmp
mov
jmp
pushf
popl
pushf
pusha
call
pushf
call
pushf
setb
ror
rol
mov
test
sar
shl
adc
mov
test
sub
pusha
jmp
bts
or
mov
ror
adc
jmp
jmp
movw
inc
jmp
sar
setle
test
mov
xor
pusha
stc
mov
push
jmp
jmp
mov
jmp
mov
mov
push
movb
mov
lea
jmp
add
sbb
push
xor
bsr
push
bt
shl
bts
pushl
adc
neg
push
ror
sbb
shrd
push
mov
call
pusha
movb
xchg
mov
lea
jns
movsbw
push
not
lea
lea
push
mov
jmp
sar
btc
mov
bt
jmp
cmc
xor
cmc
stc
call
mov
shld
mov
neg
shr
add
xor
call
rcr
bsr
movzbl
neg
ror
dec
xor
mov
pusha
cmc
mov
bswap
sub
jne
add
jmp
mov
pusha
push
lea
jmp
pushf
call
