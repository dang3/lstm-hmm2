and
jne
sbb
dec
out
cmp
fisubl
js
cmp
scas
xchg
pop
dec
repz
in
das
dec
or
clc
mov
mov
cmp
lret
lret
mov
loope
inc
lea
fs
xlat
mov
add
inc
fcmovne
xchg
xchg
and
inc
sti
cmp
lock
mov
mov
adc
bound
xor
push
xchg
jns
inc
out
pop
push
cmc
push
adc
xchg
cmp
mov
test
mov
in
daa
inc
mov
fcomps
add
jns
xchg
insl
jmp
in
or
lcall
cld
lock
dec
push
mov
xchg
ror
shlb
inc
scas
lcallw
ja
aas
jg
add
dec
dec
sbb
imul
in
mov
movsb
ss
decb
adc
mov
out
xor
sar
daa
or
sar
mov
shl
pusha
add
test
mov
cmc
test
mov
test
push
push
push
lea
je
pusha
lea
jmp
insb
lods
shlb
ss
mov
lahf
pop
mov
stos
pop
mov
fisubrs
sub
std
iret
rol
xchg
pop
push
jmp
jb
adcl
out
and
test
out
imul
mov
push
pop
xor
flds
lea
or
scas
aaa
mov
gs
sarl
fadds
inc
lods
in
std
sbb
add
mov
div
sar
test
push
sbb
sbb
aad
mov
adcb
mov
push
pop
xchg
mov
sbb
inc
xchg
push
insl
inc
jbe
inc
sub
pop
ss
jnp
cmp
fisubrl
xor
loop
xor
mov
lea
mov
seto
movsbw
pusha
mov
mov
setle
mov
call
mov
xlat
mov
push
mov
outsl
mov
and
mov
push
bound
mov
movsl
test
scas
mov
sub
add
pop
in
out
test
sbb
inc
cmp
out
test
jle
mov
mov
jg
cmp
or
stos
movsb
stc
xchg
cmpsl
jbe
mov
int3
popa
iret
or
mov
and
pop
xor
mov
mov
sub
sarb
push
inc
pop
aaa
ljmp
mov
add
adc
pushw
out
dec
addr16
cmp
aam
test
hlt
adc
dec
in
fsubl
sub
or
loope
int3
sbb
jae
test
loop
pop
je
sub
mov
gs
mov
xor
jle
nop
call
movl
pushf
lea
jns
push
pushf
mov
push
pushl
ret
btc
mov
bt
mov
pusha
cmp
sub
movw
repnz
jmp
lea
call
push
lea
jae
push
sub
pushl
lea
jns
pushf
pushf
lea
call
push
movb
pushf
mov
lea
jae
inc
seta
mov
push
inc
call
mov
pushf
movzbl
pop
pop
push
pusha
mov
push
pushl
ret
pusha
mov
pushf
movzbw
pop
pop
push
pushf
movb
pusha
pushl
ret
and
cmp
inc
jp
mov
ss
add
or
in
loopne
sub
cmp
hlt
xchg
xor
loop
shlb
lock
in
jb
pop
sub
shlb
and
fwait
push
fbld
ret
fistl
and
xor
xor
repz
popf
jno
iret
stos
jb
in
xor
push
roll
pop
pop
sub
or
jne
ja
or
jmp
ror
fsubs
in
jecxz
sub
dec
add
and
fcmovb
in
arpl
mov
test
pop
ret
pusha
hlt
bound
test
aad
hlt
jne
in
cmpsb
dec
xchg
ret
sahf
xchg
push
inc
sub
rcl
push
adc
es
dec
mov
pop
aas
xchg
test
xchg
xor
and
xchg
or
in
xchg
out
or
scas
mov
xchg
sub
outsb
inc
lcall
bound
in
cmp
mov
pusha
pusha
xchg
sub
jne
insl
ret
test
gs
sub
pushf
repz
sti
jmp
mov
shlb
sbb
inc
mov
dec
or
repz
cli
cmp
cs
jbe
imul
stos
push
cmp
adc
incb
mov
das
sti
or
push
stc
fdivs
dec
sti
in
enter
add
xchg
loop
xor
insl
repnz
jmp
clc
pusha
add
bt
pushl
cmp
movzwl
add
add
inc
rcr
mov
test
cmp
add
clc
cmc
cmp
cmp
mov
call
sub
jmp
push
lock
std
std
mov
mov
dec
test
ret
pop
es
rcrl
xchg
ss
aaa
fistpll
jp
in
mov
or
push
push
movl
pop
lcall
cwtl
xor
push
sub
adcb
xchg
push
movsl
xor
rcrb
test
cwtl
jl
pushf
inc
enter
dec
xor
jo
xchg
cmpsl
addl
mov
fldl2e
push
mov
or
lcall
xchg
fsubrl
ljmp
mov
xchg
outsl
and
inc
movsb
mov
loop
add
inc
lock
lea
jae
btr
sub
mov
movsbl
ror
lea
mov
cmc
mov
call
call
or
mov
les
insb
fnstsw
aaa
and
mov
mov
add
push
jbe
mov
daa
mov
mov
add
jne
inc
adc
repnz
out
mov
and
adc
imul
jne
fdivrl
out
out
mov
sbb
pop
xor
imul
jae
mov
mov
cmp
lahf
scas
sub
imul
js
jno
jns
fwait
or
jmp
inc
cmpsb
sbb
call
add
dec
outsl
arpl
inc
jb
gs
dec
int3
push
add
and
movb
lea
call
call
push
pushl
pushf
lea
call
pusha
jmp
cmp
mov
in
cmc
fsubl
dec
and
ret
sbb
scas
nop
mov
pop
repnz
cmp
mov
das
push
stc
pop
sbb
leave
lret
dec
notb
mov
inc
shll
test
sub
je
jb
jge
loope
inc
lret
mov
and
jge
push
mov
cmp
sub
lea
pushf
pushl
inc
lea
push
lea
jg
call
call
call
cmp
pusha
cmp
mov
pusha
lea
jb
cmp
cmp
push
lea
ja
neg
test
add
test
or
and
bt
mov
cmp
pusha
pushf
jmp
pop
mov
sar
movsbw
and
mov
clc
cmc
cmc
sub
pushf
jmp
pushl
jmp
rep
call
repz
jmp
lea
call
pushf
lea
jae
push
jmp
fmull
inc
mov
pop
leave
pop
mov
cmp
stos
cmc
cmpsl
jle
mov
ret
xchg
hlt
sarb
cs
or
cs
dec
push
push
cs
xor
xor
int3
xchg
push
dec
mov
sahf
out
push
push
and
adc
ljmp
xor
icebp
repnz
inc
lea
arpl
in
xlat
insl
add
mov
cmp
xchg
jbe
or
in
sbb
sahf
add
fdivl
cltd
insb
mov
xchg
mov
fdivs
xchg
jecxz
jmp
cwtl
inc
or
cmp
push
notb
jecxz
bound
inc
aas
pop
push
inc
push
fmuls
imul
sub
es
mov
lea
push
dec
xchg
lret
stc
repz
test
mul
push
bound
cld
sub
in
xchg
push
xchg
dec
mov
es
inc
pushf
push
dec
jl
pop
inc
jp
push
jp
nop
adc
lods
pop
xchg
add
mov
stos
pop
loop
loop
xor
jg
pop
call
xor
faddp
pop
fisubl
or
cmp
jnp
ret
in
add
in
inc
sbb
stos
pop
xchg
push
adc
arpl
cmc
pop
iret
stc
pop
ja
mov
adc
xchg
fsubrs
ljmp
xor
xchg
jg
aam
mov
adc
cmp
inc
orb
push
xor
or
out
cmc
fists
pop
jbe,pt
mov
and
bnd
fs
pop
gs
arpl
or
imul
sub
fsubrl
fists
jecxz
push
out
mov
add
loop
in
data16
inc
int
loopne
popa
push
test
pop
inc
hlt
int3
pusha
sti
leave
out
insl
push
outsb
xor
cmp
into
dec
sbb
stos
xor
xor
lret
adc
imul
xchg
push
inc
sbb
cltd
fildl
pop
scas
sbb
add
orb
jle
data16
pop
xchg
fadd
add
dec
imul
push
pop
mov
repnz
imul
jae
xor
aad
rcrb
clc
sub
das
adc
add
into
mov
in
lcall
push
rcrl
test
mov
sti
enter
mov
outsl
lret
arpl
outsl
into
dec
xchg
scas
pop
adc
mov
dec
out
jge
movupd
movsb
cmp
jle
jge
xlat
out
ret
sbb
and
je
lea
xchg
xor
pop
push
xor
xchg
add
add
test
mov
add
mov
mov
cmp
pushf
push
pusha
add
push
movzwl
sub
btr
mov
push
mov
cmc
pushf
add
push
call
sahf
jle
inc
sub
mov
insb
mov
xchg
xchg
sti
pop
lods
xor
xor
adc
jb
movsl
inc
inc
dec
jmp
scas
or
int3
add
std
cmp
adc
mov
imul
xor
adc
aam
das
cli
sbb
test
mov
sub
rorb
jbe
clc
push
sbbb
sub
pushf
fiadds
sub
mov
pusha
xchg
jge
push
in
xchg
lcall
mov
in
ret
lock
loope
jecxz
cli
cmp
push
rclb
inc
das
test
imul
xchg
mov
or
mov
push
scas
dec
sub
xchg
stos
mov
add
sahf
arpl
mov
scas
test
addr16
cmp
sbb
in
push
mov
inc
stos
mov
addl
xchg
pop
lcall
dec
cltd
sub
fists
mov
mov
repz
adc
dec
sub
nop
push
cli
jb
mov
jns
mov
or
ljmp
sub
adc
adc
aam
aas
mov
inc
xor
rorb
add
adc
inc
and
aaa
dec
jbe
rol
jl
dec
xor
pop
xchg
nop
pop
dec
daa
outsb
sub
daa
lcall
rcrb
fisttps
incl
pushf
push
mov
dec
push
mov
dec
xor
mov
and
xor
ffreep
pop
cld
sbb
scas
sahf
sarl
inc
das
inc
lcall
mov
jns
push
js
loopne
dec
dec
mov
mov
lcall
sbb
daa
dec
sti
repz
push
mov
mull
or
inc
lods
arpl
jae
je
sub
aad
insb
and
movl
pushf
pushf
push
pushl
ret
xor
and
adc
add
or
pop
int
push
daa
jne
push
dec
pushf
hlt
xchg
fdivrp
mov
mov
push
in
and
rcrl
cmp
in
add
pusha
fwait
cmp
enter
xor
xchg
pop
push
pop
jae
les
dec
mov
xchg
in
das
adc
xchg
xor
shl
sub
les
cli
movsb
jnp
in
sub
test
mov
jbe
mov
ljmp
mov
sub
movsb
mov
daa
push
icebp
jnp
int3
xchg
aad
jo
jo
inc
adc
mov
data16
xor
cmc
movsl
ret
decb
rol
xor
sbb
jo
jo
inc
mov
adc
add
mov
clc
inc
mov
add
xor
fistpll
or
fadd
mov
repz
adcl
dec
xchg
ljmp
xor
inc
popf
pop
enter
loop
cwtl
insl
mov
loopne
xor
jp
and
pushf
ret
pop
mov
push
mov
mov
pusha
pop
movsbw
call
or
push
call
and
mov
and
lea
jae
jmp
movl
pushf
movl
pushf
mov
mov
movl
lea
jmp
pushf
lea
je
pushf
pusha
pusha
pushl
lea
jmp
lea
je
pusha
call
in
jb
pusha
movl
push
mov
pusha
jmp
mov
jmp
lea
jne
xchg
cmp
rcr
mov
sub
rol
bts
sub
clc
xor
mov
clc
test
sub
pushf
pushl
popl
cmc
cmp
pushf
lea
ja
call
mov
push
or
pusha
pushf
pushf
jmp
pusha
mov
push
lea
jmp
mov
cmp
and
lods
dec
sti
leave
mov
pusha
ljmp
mov
popa
fwait
cmp
jns
out
iret
sarb
cmp
push
push
inc
dec
mov
add
push
inc
jae
aas
jae
jnp
mov
and
adcb
mov
or
pop
or
mov
shll
inc
scas
sbb
lea
ja
push
push
imul
pusha
jmp
push
stos
pushf
movb
lea
jmp
jmp
jmp
call
lock
cmp
xor
jecxz
std
jns
test
das
inc
lahf
fistpl
in
loope
mov
jb
jge
sub
rorb
dec
inc
mov
or
adc
mov
in
pop
test
mov
cs
mov
xor
cwtl
mov
pushf
mov
pushf
pushl
ret
pushl
mov
cmc
call
jmp
mov
dec
pushl
movb
call
cmp
mov
test
and
cmc
add
push
pusha
lea
jmp
pushf
pusha
inc
pushl
mov
pushf
lea
jmp
movb
movb
stc
shr
jmp
pushf
clc
bt
pushf
cmp
pushf
pusha
push
lea
jae
cmp
add
pusha
push
pusha
jmp
jmp
pop
sbb
inc
cltd
mov
mov
inc
cs
jns
in
push
into
cmp
nop
push
roll
push
test
fs
push
dec
jo
cmpsb
lcall
mov
push
lods
xor
mov
out
or
pusha
call
movl
movl
pushf
lea
jmp
pusha
setl
mov
pushl
mov
pushf
pushl
lea
jmp
xchg
push
std
mov
test
fisttpl
scas
fsubr
je
pop
adc
adc
push
push
jecxz
movsl
sub
iret
sarb
and
test
mov
std
adc
enter
pop
jmp
int
addl
test
shl
clc
repnz
jns
adc
cmp
cmp
bt
test
movzwl
cmp
sbb
pop
mov
mov
pusha
add
test
jmp
pop
cwtl
push
not
lea
push
movw
movl
jbe
push
pusha
mov
pushf
pushl
pushf
pushl
ret
mov
call
inc
call
inc
ror
xchg
aam
or
movzbw
shr
mov
rcr
mov
pusha
mov
mov
mov
bt
sub
pushf
pushl
rep
pop
mov
pushf
pushl
mov
lea
jmp
popf
rdtsc
nop
call
jmp
iret
jge
por
jg
dec
fistpl
test
test
xchg
aaa
jecxz
inc
push
mov
out
mov
or
scas
xchg
into
push
add
enter
jmp
les
pop
and
pop
clc
jle
mov
mov
mov
aam
out
cmpb
mov
sbb
lods
fdivs
dec
sti
cli
aam
cmp
cmp
jle
pusha
add
xor
in
inc
call
pushf
call
jmp
push
enter
lock
lock
mov
popf
cmp
cmp
popf
cmpsb
cmp
push
add
push
pop
stos
push
jne
xor
lds
and
fildl
mov
movsb
inc
xchg
in
fwait
das
xchg
push
ja
das
or
inc
popf
movl
loope
int3
sub
pop
loopne
sub
mov
xor
lods
mov
lods
bt
xor
stc
jmp
outsl
add
idivl
cmp
push
fisttpll
js
xchg
loop
outsl
cmp
and
cmp
jbe
sbb
iret
aad
fwait
push
and
repnz
scas
mov
mov
dec
cld
or
push
lods
scas
test
pop
and
mov
scas
cmp
xor
je
vpslld
xchg
cwtl
nop
repz
scas
outsb
add
pop
or
inc
xor
mov
aad
push
sub
jb
jo
stos
xchg
mov
daa
ljmp
xor
sbb
out
leave
call
pusha
cmc
sub
cmc
pushl
popl
pusha
cmp
test
cmc
cmp
jmp
pusha
mov
movl
call
cmp
or
and
shrb
adcl
jnp,pn
jb
mov
xor
mov
fwait
lods
call
insl
ljmp
and
push
cwtl
pop
xchg
add
dec
in
lods
rolb
sbb
outsb
add
pop
mov
sub
in
dec
push
mov
and
nop
cmp
push
fxch
movsb
pop
sbb
or
decb
fsubrl
push
imul
cltd
sbb
fistps
xor
or
mov
pusha
pushf
pushl
pushf
lods
call
pusha
lea
je
cmc
pusha
add
pusha
lea
jmp
or
push
shrb
xchg
aad
scas
inc
mov
xor
aam
sbb
fwait
bound
rorb
fdivs
sub
jmp
aad
mov
mov
sbb
pusha
pusha
call
xor
stc
ror
pusha
pushl
inc
jmp
add
leave
push
push
add
push
push
add
sbb
rcll
add
sbb
sub
sbb
fsts
add
sbb
xor
sbb
add
dec
adc
test
stc
stc
cmp
movw
jmp
add
inc
js
je
jb
arpl
jae
jmp
pusha
push
push
movl
call
jmp
pushl
sub
pushf
mov
call
popf
cpuid
nop
pusha
call
adc
mov
bound
data16
or
and
sub
and
push
scas
xchg
push
rcll
mov
mov
bound
push
fistl
xchg
gs
cmpsb
jno
daa
dec
or
xchg
in
sub
test
push
aaa
inc
sahf
and
cmpb
pop
subb
lret
pop
xchg
lods
adc
push
jb
dec
aam
inc
loopne
and
jmp
fsubrl
lods
dec
sti
push
pop
xlat
mov
mov
inc
mov
adc
lea
jne
shl
inc
bsf
xor
rcr
push
sets
mov
cmp
mov
add
or
mov
pushf
jmp
call
call
mov
or
mov
call
pop
mov
and
mov
inc
repnz
sbb
sbb
mov
push
int3
std
xor
mov
push
push
xchg
jmp
sbb
mov
xchg
jmp
sbb
lcall
repz
inc
adc
sub
cmp
lods
sub
xchg
cmp
jns
out
in
adc
cwtl
xchg
jne
mov
ljmp
dec
fimull
in
imul
in
cs
inc
pop
ja
stos
add
inc
movsl
sub
pop
mov
and
cs
cmpsl
fsubl
inc
sbb
mulb
out
fistps
or
xor
push
leave
imul
inc
mov
cld
push
shll
add
lea
sub
rorl
clc
ret
push
out
fbld
pop
dec
fsubrs
push
aas
std
arpl
sub
mov
sub
stos
clc
or
mov
sbb
es
lods
lea
ljmp
enter
xor
out
jae
jns
cld
imul
iret
fcoms
mov
es
sahf
and
clc
or
add
mov
test
jo
mov
jg
cmp
cwtl
bound
cmpl
pop
xchg
sbb
std
dec
add
mov
outsb
nop
imulb
mov
cwtl
mov
movb
pushf
pushf
pusha
lea
call
pusha
movw
push
adc
pusha
call
push
jmp
call
test
popf
add
sub
daa
push
sahf
aas
jb
sti
mov
push
pop
mov
sub
test
imul
test
sub
or
in
lcall
adc
mov
and
mov
loopne
out
cmp
sarb
jns
leave
inc
enter
mov
dec
cmpsb
addps
jnp
cmp
test
mov
xor
lret
cmc
ljmp
xchg
fnstcw
push
pop
mov
add
addr16
sub
pop
push
imulb
push
bound
jo
dec
jne
xchg
outsb
mov
mov
mov
stos
jo
cmp
mov
inc
mov
mov
imul
add
add
lea
ja
push
pushf
push
pushf
lea
jb
jmp
inc
pushf
pushf
pushl
movb
lea
jmp
push
push
movl
movw
pushl
pushl
popl
push
pushl
ret
mov
movl
lea
ja
mov
dec
pusha
dec
inc
jmp
xor
xchg
push
je
jecxz
cmc
neg
sbb
imul
testl
dec
shl
and
xchg
aas
mov
jecxz
add
sbb
jne
movb
flds
jl
jle
je
xor
xchg
adc
pop
push
and
cmpsl
mov
cmp
pop
mov
xorl
xlat
cmpsb
jae
ret
or
test
rorb
or
imul
jbe
push
dec
xor
sub
add
fisubs
cmpsl
test
or
mov
fs
push
repz
inc
add
bound
les
pop
das
das
and
out
dec
sub
enter
pop
stc
pop
pop
jno
jns
sbb
sub
adc
imul
xor
je
and
nop
jmp
sbb
xchg
sbb
push
xchg
lds
push
mov
stc
mov
cmc
mov
dec
and
xor
jbe
inc
cltd
sbb
jo
out
jmp
rolb
add
or
xchg
mov
mov
repz
dec
gs
jmp
xchg
inc
sbb
ja
sahf
fistpll
lahf
cmp
add
jle
mov
push
cmpsb
add
mov
dec
inc
bound
dec
sbb
xchg
mov
cmpsb
cld
leave
inc
testb
add
or
jp
add
daa
or
test
adc
sahf
loopne
sbb
lcall
mov
scas
or
notl
pop
adc
jge
pop
adcl
mov
rclb
aaa
add
rcl
sbb
mulb
daa
mov
imul
mov
push
cmp
and
mov
loopne
pop
or
adc
dec
mov
movsl
xchg
pop
push
not
xorb
mov
test
xor
addr16
sbb
lret
sub
ret
cmp
pop
or
and
mov
mov
push
sbb
lock
inc
outsb
inc
out
jnp
xchg
lods
loopne
lret
testl
add
xor
iret
outsl
pop
lahf
push
sbb
aam
cld
adc
push
or
lods
test
outsb
addl
gs
xlat
pop
add
xor
out
cltd
pop
in
das
cmp
gs
mov
sub
cvtps2pd
ds
cmp
pop
xchg
adc
dec
addr16
pop
out
icebp
push
add
dec
pop
jns
mov
sbb
mov
push
aaa
mov
jecxz
push
jnp
in
aad
jl
push
add
int3
loopne
out
mov
add
mov
jge
or
push
sbb
push
movsl
xor
pop
je
cmp
mulb
aaa
jmp
mov
push
popf
nopl
daa
or
xlat
int
test
xor
out
imul
dec
test
daa
dec
pop
aaa
in
lret
sbb
and
cmpsl
ds
fsubl
fstp
jne
xlat
sub
sbb
out
push
lret
cmp
in
push
repz
push
stc
xchg
add
xchg
popf
inc
fwait
xchg
sbb
negb
in
xchg
xchg
cmpl
xlat
xchg
pop
ret
add
xchg
enter
inc
inc
addr16
add
ficompl
pop
or
aaa
cmp
inc
xchg
and
push
xchg
nop
test
add
or
jb
mov
inc
cld
cmc
push
mov
hlt
nop
sbb
cmpsl
arpl
cli
sub
pop
xor
and
dec
xchg
jp
push
into
sub
jb
pop
jmp
add
pop
xor
dec
dec
cmp
ret
add
mov
jle
sbb
xlat
mov
mov
ja
negb
mov
outsl
xlat
pushf
gs
xchg
imul
sbb
push
scas
and
push
jbe
push
and
xchg
arpl
leave
rorb
aas
out
inc
gs
or
sbb
scas
gs
push
push
inc
xchg
push
adc
cmp
iret
stos
pop
loope
jmp
cmp
xchg
pop
testb
mov
je
out
inc
mov
testl
imulb
add
test
pop
ret
push
jbe
pop
adc
outsl
push
sbb
mov
xchg
cmpsl
jecxz
std
sub
jbe
popl
mov
insb
cmp
add
cs
add
imulb
ret
sbb
or
sub
mov
pop
sbb
push
add
push
xchg
out
rcrb
mov
imul
jne
rcr
sub
addl
mov
rolb
xchg
or
add
imul
add
or
rol
sub
inc
sar
insl
and
std
xchg
inc
shl
mov
testb
mov
and
fbld
dec
xorl
pop
mov
xchg
mov
push
push
xchg
cmc
and
sub
xchg
pop
inc
push
and
test
dec
movl
popa
xchg
stos
js
andb
daa
xchg
popf
or
dec
adc
add
xchg
xor
inc
inc
cmp
xchg
pop
adc
xchg
into
aaa
daa
mov
xchg
lock
ficoml
add
sbb
push
push
adc
mov
and
xlat
add
add
and
addr16
repz
icebp
jbe
xlat
scas
cmc
push
jno
and
cmpsl
mov
xchg
pop
sbb
inc
mov
adc
jl
cmc
mov
mov
cltd
cmp
das
push
lret
add
cmp
int
add
js
and
sbb
es
adcl
push
idivl
out
cmc
iret
in
pop
sbbl
pop
imul
leave
inc
jne
xchg
daa
mov
mov
je
aas
es
sahf
jae
jo
xor
inc
or
stc
add
ret
in
mov
xlat
nop
mov
aam
insl
clc
and
pusha
sahf
jecxz
cmp
mov
sbb
xchg
cmpsl
sub
mov
shl
inc
leave
loop
add
xor
testb
xor
or
movsl
sub
add
cmc
push
adc
in
cld
adc
sbb
mov
inc
stos
mov
out
movsl
mov
sbb
adc
arpl
sbb
lds
xchg
or
push
add
push
pop
xchg
cld
lcall
les
jbe
dec
orl
xchg
xchg
not
lods
js
dec
repz
sub
dec
pop
jmp
jg
sbb
push
cmp
add
xor
mull
sub
add
mov
adc
daa
sahf
cmp
and
testl
dec
or
sahf
add
sbb
ja
xchg
test
ljmp
pop
idiv
mov
aam
xchg
mov
lret
adc
adc
mov
mov
inc
or
sbb
sahf
inc
dec
testb
dec
mulb
sub
xor
lock
sbb
shlb
inc
xchg
xchg
loopne
test
pop
std
fs
or
inc
and
inc
push
and
aaa
sub
enter
xchg
mov
pop
sbb
aaa
pop
fists
imul
push
addr16
es
push
fbld
sbb
faddl
aaa
lahf
ret
mov
xchg
jno
imul
mov
pop
push
pop
mov
sub
xorl
push
cmpsl
testl
xor
negb
aaa
aaa
stos
aaa
pop
repnz
es
lds
push
push
adc
fwait
add
rcrb
xor
aaa
popf
scas
xchg
xchg
imul
sub
mov
dec
xchg
movsl
incb
xor
ja
pop
lds
pop
mov
xor
fdivp
pop
insb
dec
xor
out
popf
in
adc
xor
lahf
loopne
xchg
fwait
jge
fs
push
add
inc
xchg
out
pop
out
shlb
out
adc
je
push
pop
test
insb
xchg
xchg
xchg
div
data16
in
daa
ret
sub
aaa
push
rcrb
xchg
add
xchg
mov
xchg
lcall
dec
scas
adc
aaa
cltd
aam
fwait
aaa
mov
aaa
adcl
scas
andl
ja
and
xchg
aaa
add
push
mov
arpl
inc
push
repz
inc
push
movl
loopne
add
testb
das
aaa
push
out
push
push
xchg
inc
in
jne
ja
push
xchg
hlt
fildl
add
pop
jg
lds
xlat
adc
mov
push
popa
aaa
push
xchg
xchg
daa
dec
je
les
gs
jne
inc
inc
adc
xchg
xchg
and
push
pushw
mov
push
xchg
aad
pop
adc
xor
movsl
adc
push
addl
inc
daa
ficoms
mov
mov
inc
lahf
andl
add
in
xchg
mov
adc
and
mov
addr16
xlat
add
cmp
out
out
lret
pop
xchg
addb
gs
sbb
imul
xchg
push
jne
arpl
ret
or
cmp
in
cmp
arpl
lea
mov
xchg
fnstsw
and
aaa
sbb
adc
adc
cmc
daa
std
and
dec
xor
lret
add
jne
sub
sbb
faddl
in
rcrb
and
or
xor
and
mov
in
mov
sbbb
in
sbb
and
rorb
dec
and
cmc
lds
enter
inc
jbe
jmp
dec
lds
hlt
xchg
repz
fsubl
dec
pop
sbb
out
sti
xlat
rorb
add
or
mov
inc
fcomip
les
inc
pop
sub
sahf
jl
subl
cs
mov
test
data16
jbe
mov
xchg
xor
cs
and
imul
xchg
in
lcall
aaa
scas
fsubl
xor
xchg
lahf
sub
scas
sbb
aaa
in
gs
xadd
mov
mov
and
lahf
das
add
xchg
pop
mov
sbb
ja
adc
insl
xor
out
xchg
xor
push
xor
shlb
pop
push
in
sbb
pushf
es
loopne
pop
adc
add
rolb
out
out
fsub
stc
jbe
stos
gs
xchg
mov
sahf
mov
mov
or
mov
or
imul
xchg
cmp
and
jo
sub
or
cmp
imul
mov
xor
sbb
movsb
out
dec
fcoms
stos
pop
xor
xchg
jg
adc
int3
mov
cmc
in
dec
cld
jmp
jo
sub
add
adc
inc
jbe
adc
into
xchg
repz
or
adc
cmpsl
dec
sub
enter
popf
popf
pop
pop
add
mov
push
mov
das
pop
inc
xchg
jb
cmp
adc
loop
imul
add
mov
fwait
popf
fbld
aaa
push
mov
push
mov
add
shl
and
cli
shr
gs
sub
add
mov
add
rcrb
mov
cmp
inc
adcb
xchg
cmp
iret
int
xlat
lahf
add
mov
xchg
xchg
mov
addr16
push
cmp
jb
pop
dec
mov
int3
xor
add
mov
or
fdivl
or
pop
ret
fbstp
or
fistl
int
and
add
stos
scas
aad
pop
aam
sahf
setae
and
pushf
ss
cmp
repz
mov
inc
fisttpl
lahf
sub
aad
aam
fistpl
movhps
add
rcll
add
cmpsb
nop
adc
sbbl
jbe
lahf
out
cmpsl
mov
mov
jbe
and
xlat
inc
push
xlat
loopne
je
push
dec
adc
mov
stos
clc
ss
orl
gs
rcrl
lcall
push
shlb
popf
shlb
int3
stos
and
jae
sub
movsl
xchg
and
addr16
mov
loopne
and
mov
stos
daa
test
xchg
rcrb
adc
inc
xchg
cmc
nop
cltd
loope
or
xchg
xor
repz
cmpsl
sbb
adc
mov
xchg
jb
xchg
cmc
test
mov
and
aam
popf
dec
pop
fwait
add
xchg
jecxz
repz
test
loopne
mov
pop
je
loope
cmp
cmp
xchg
sarl
shl
adc
xchg
ja
pop
add
pop
sbb
out
inc
mov
cmp
clc
mov
pop
mov
xor
dec
rcr
cmp
int
inc
jecxz
and
xor
xchg
and
mov
cmc
xchg
aaa
xchg
inc
xorb
pop
or
cli
adc
aad
sbb
hlt
jno
ds
in
mov
push
imulb
pop
push
cwtl
dec
dec
cld
adc
xor
aad
aas
push
mov
sti
add
xchg
inc
and
cmp
test
xchg
or
jle
sahf
jb
and
jns
rorl
mov
push
jle
or
and
into
mov
movb
mov
in
sub
loopne
or
xchg
mov
and
push
dec
adc
mov
cmp
and
cld
adc
add
xchg
enter
pop
xchg
repnz
adc
ds
mov
addr16
int3
and
pop
test
daa
rclb
dec
pop
hlt
notb
sbb
and
pop
jne
lcall
dec
add
orb
and
push
loopne
fsubs
pop
jge
lret
and
xorl
add
push
popf
xchg
mov
pusha
in
fdivl
adc
test
movsb
icebp
clc
push
aam
aas
les
sbb
xor
mov
clc
lods
popa
addl
adc
pop
jmp
adc
incb
movlps
loopne
mov
cmpsl
ja
pop
mov
ret
popf
jae
enter
sub
lahf
add
xor
push
inc
mov
outsl
or
mov
mov
xchg
and
pop
mov
mov
dec
sbb
xor
stos
cmp
sub
notl
add
cmp
ss
scas
loopne
and
jbe
add
cmp
inc
push
jns
lods
jae
dec
sbb
inc
gs
mov
in
pop
add
push
ret
cmc
in
iret
test
ja
lods
popf
cld
xchg
or
add
adc
inc
push
fisubl
inc
dec
adc
adc
xchg
mov
outsb
cs
adc
xor
lds
fimull
scas
mov
jo
mov
mov
data16
test
sbb
xchg
outsb
or
lret
lret
mov
mov
jne
xchg
scas
inc
push
js
cmp
and
jb
pop
ret
inc
gs
push
adc
mov
jns
dec
dec
aaa
aas
pop
add
ret
and
sbb
push
int3
cmp
sub
test
add
xchg
movsl
dec
xlat
dec
scas
dec
or
out
dec
pop
inc
jnp
xor
mov
pop
mov
xor
jne
gs
in
pop
ret
arpl
ss
or
into
sub
lods
je
xorl
mov
scas
pop
inc
std
mov
cmpsl
adc
mov
sbb
and
orb
and
addb
incb
cmp
sub
enter
fdivrs
stos
loopne
xor
adc
and
lahf
pop
push
call
jmp
push
pushl
or
in
mov
push
sbb
fsubs
or
add
cmp
or
push
mov
pushf
mov
add
imul
dec
sub
dec
mov
shlb
ja
in
mov
xchg
add
pop
mov
loop
cmp
in
mov
adc
daa
mov
lret
xorl
scas
mov
in
xchg
pop
movsb
or
inc
jbe,pn
and
pop
push
arpl
mov
dec
jne
xchg
aad
repz
push
insl
mov
cmp
int
mov
add
lock
pop
adc
sbb
adc
push
and
mov
cmp
lahf
adc
inc
jecxz
mov
xchg
dec
mulb
stos
push
and
arpl
cmpb
and
mov
xchg
sub
pop
and
pop
and
int3
cmpsb
pop
daa
outsb
or
ret
sbb
sub
imul
movsl
sub
inc
rcll
xchg
inc
jmp
lret
test
bound
sbb
mov
sahf
push
mov
test
lock
pop
in
jge
enter
or
mov
jno
stos
add
sbb
pop
iret
in
imul
sbb
in
insb
dec
sahf
jbe
sub
inc
or
ret
cmpsl
aad
add
int3
xchg
out
stos
push
rclb
mov
adc
push
adc
pop
movsl
into
outsl
pop
sub
jbe
sub
cmc
or
xchg
xchg
dec
mov
push
cmp
cmp
xor
adc
pop
faddl
testb
jb
ds
insb
pushf
xorb
shrl
ds
pop
jo
les
mov
jb
mov
push
jne
addr16
shll
pushf
add
rorb
add
adc
mov
inc
mov
and
adc
mov
jp
cmp
dec
inc
cmp
pop
cmpl
stos
xchg
insl
or
int
xchg
mov
in
mov
pop
dec
pop
mov
gs
ja
xor
and
jle
pop
sbb
dec
xchg
mov
aaa
shrb
js
rcr
leave
and
jbe
sbb
push
push
sbb
shrl
dec
push
jg
aam
int3
cmp
xchg
pop
stos
insl
or
adc
movsl
jecxz
loop
xchg
lahf
jns
mull
inc
mov
xchg
add
add
cmp
stos
mov
fnstenv
cld
mov
mov
and
sub
adc
icebp
dec
dec
movsl
fnsave
sbb
lods
icebp
adc
and
add
jp
push
std
cltd
mov
popa
int
cwtl
mov
test
out
movsl
or
jns
lea
movsl
test
daa
rclb
mov
mov
ret
lods
dec
mov
ja
xlat
insb
xchg
xor
fidivrl
pop
mov
mov
mov
and
xchg
testl
add
cmp
cmp
dec
test
pop
cwtl
movaps
mov
xor
dec
or
lds
cld
outsl
xor
sbb
cs
xchg
dec
pop
notl
in
xor
and
push
mov
nop
cmpsb
aam
push
mov
repnz
jle
xlat
fisttpll
daa
xchg
sub
cmp
hlt
pop
xchg
push
mov
and
jno
jne
mov
adc
stos
pop
pushf
inc
pop
and
mov
dec
or
xchg
dec
xchg
xor
orb
jmp
int3
lahf
outsb
xlat
cs
mov
jbe
cmp
mov
add
push
xor
es
shlb
mov
ja
imul
push
pop
fistpl
xchg
divb
ffree
pop
jp
aas
xchg
jg
int
inc
cmpl
lahf
aaa
or
mov
or
int3
jbe
push
xor
push
add
sbb
and
jbe
mov
mov
inc
xchg
fldenv
xor
jns
iret
mov
mov
xchg
sahf
adc
inc
xchg
or
mov
aad
dec
dec
xchg
aaa
mov
jmp
mov
xor
psubw
iret
ret
enter
push
xchg
xor
das
inc
jno
push
jb
add
lcall
push
pop
cs
jmp
fsub
cltd
aaa
mov
pop
adc
hlt
daa
mov
xchg
pop
dec
cmp
adc
mov
hlt
mov
cwtl
sbb
ror
test
daa
aam
add
nop
pop
add
cmpsl
gs
jmpw
and
cli
imul
pop
mov
push
lret
es
data16
pusha
dec
add
mov
sbb
setbe
daa
pusha
mov
repz
pop
mov
test
push
aas
out
push
inc
pop
cmc
adc
xor
mov
and
or
mov
inc
sti
sbb
cmp
cwtl
popa
push
jp
push
hlt
sahf
imul
xor
lods
sub
jge
mov
cmp
pop
xchg
or
fildll
bound
adc
or
pop
inc
movl
scas
lds
push
mov
adc
lds
mov
dec
clc
mov
xchg
pusha
out
jmp
push
add
addr16
push
frstor
add
xor
repz
cmp
or
cmp
pop
insb
pop
in
mov
and
pusha
add
mov
out
sub
fildl
jae
test
add
cltd
cmp
xor
mov
and
push
jp
sbb
fsubrl
iret
loopne
jbe
aaa
mov
dec
cli
sub
hlt
out
adc
pop
xor
xchg
dec
movsb
cld
int
mov
movsl
add
in
add
mov
push
dec
mov
ret
xlat
add
nop
mov
xor
dec
cmp
xor
lods
fcomp
cmp
shlb
and
or
push
nop
aam
add
push
adc
cmpsl
adc
pop
push
ds
jo
aam
jmp
sub
add
xor
pop
mov
clc
es
mov
sarl
mov
push
fistl
cld
hlt
dec
sbb
and
fisttpll
jno
cmp
push
mov
hlt
xchg
int3
in
cmp
add
notl
test
xchg
bnd
inc
xor
xchg
mov
scas
and
cmp
enter
mov
mov
mov
adc
xchg
inc
outsb
lea
scas
push
pop
mov
push
jns
push
jge
dec
xor
and
xorps
fidivrl
xor
sbb
inc
add
jle
scas
adc
and
push
mov
ja
lret
push
sbb
out
xchg
jg
jno
pop
mov
push
push
es
or
xchg
jbe
fisubs
dec
sub
or
push
in
popf
cs
jne
and
xchg
inc
push
lods
push
pop
adc
push
and
gs
sub
ds
mov
mov
imull
mov
ss
test
dec
inc
adc
arpl
orb
test
sub
and
loope
inc
mov
cmp
stos
fstpl
test
pop
and
or
test
xchg
adc
int
push
scas
dec
subl
lcall
mov
cld
add
jbe
dec
out
fcoml
ss
push
inc
or
negl
out
neg
dec
dec
xchg
in
cmpsl
call
je
stc
push
out
sbb
jmp
and
xchg
pop
addr16
mov
stos
lret
pop
push
adc
popa
xchg
out
adcl
insl
inc
shl
xchg
out
sub
jnp
mov
das
inc
not
xlat
test
or
push
push
jecxz
ss
popa
outsb
divl
mov
xchg
add
pop
loopne
sub
outsb
xchg
mov
les
das
pop
xchg
adc
dec
add
cmpsb
jb
jb
rorb
mov
xchg
aam
push
xchg
cld
xor
inc
das
adc
and
daa
pop
xor
imul
or
inc
int
and
ja
xchg
jbe
std
js
aam
xchg
insb
inc
jle
sahf
ss
sarb
shll
add
int3
dec
sub
pop
mov
sbb
add
sahf
ds
mov
clc
mov
movsb
stos
push
jmp
outsb
xchg
inc
adc
jbe
pop
push
cmpsl
jge
pop
cld
jmp
adc
pop
dec
mov
scas
add
xor
adc
loop
sbb
cmpsl
push
shrb
addr16
sbb
xor
sbb
fsubs
rcr
pop
cmp
ret
mov
rorb
or
pop
in
xlat
outsl
gs
push
add
inc
jne
or
sbb
out
sbbb
lret
cmp
push
sub
cmp
lock
xor
and
sbbb
pop
mov
in
add
ss
cld
adc
mov
adc
pop
push
cwtl
in
jbe
cltd
aam
lock
sub
aam
in
out
notb
and
cmc
aas
fwait
xlat
pop
mov
add
nop
inc
mov
dec
inc
sbb
repz
mov
jbe
test
ds
faddl
ljmp
adc
jno
lds
test
popf
cmp
dec
add
idiv
mov
fdivrp
add
xchg
lock
loopne
aam
push
icebp
dec
stos
inc
xchg
gs
push
outsb
sarb
dec
xchg
loope
mov
mov
shll
jae
or
add
lcall
dec
xor
aad
dec
cmp
pop
dec
test
jge
adc
xchg
dec
or
inc
ds
cmp
pop
xlat
add
cmp
xchg
xchg
fst
test
adc
add
test
sbb
stc
test
jo
outsl
pushf
and
faddp
xchg
mov
inc
push
push
adc
xchg
dec
mov
push
jno
cmpsl
out
lcall
cs
cmpl
test
les
mov
pop
and
jno
aaa
orl
mov
sbb
mov
adc
xchg
das
jnp
and
mov
dec
es
test
dec
icebp
adcl
out
sahf
adc
rorl
dec
sahf
ss
test
movsb
and
jl
push
mov
and
mov
loop
mov
scas
adc
adc
add
or
outsl
xchg
xchg
xlat
lcall
popa
pusha
cmp
or
push
loop
adcl
cmp
int3
and
inc
in
sbbl
nop
xor
add
xchg
jbe
cmp
loope
ja
test
dec
mov
sub
sbb
cld
push
xlat
bound
test
sbb
push
lock
add
shrb
and
jno
cld
xchg
fs
add
test
jecxz
xchg
cmp
in
shl
lret
pop
dec
dec
xor
sti
adc
nop
cmp
sti
pop
xchg
sarl
adc
cs
xorl
sbb
insb
stos
pop
sub
cli
add
xorb
pop
test
push
xchg
testb
cmc
push
jbe
test
outsb
mov
mov
insb
push
pop
popa
cmp
test
xchg
int3
in
add
push
sub
pop
mov
movsl
pop
xor
sarb
movsl
add
dec
mov
push
sub
fwait
loopne
xor
dec
and
lahf
pop
js
aaa
adc
mov
or
or
in
adc
sbb
mov
pop
adc
pop
stos
inc
cmpsl
mov
dec
jle
pop
and
pop
pop
je
addr16
mov
adc
xor
je
or
cmp
jg
gs
fisubs
or
pop
cmc
xchg
dec
jg
dec
push
nop
fsubrp
int3
dec
xchg
fs
cld
mov
xor
add
inc
and
inc
jmp
inc
push
xchg
jmp
ret
push
mov
mov
movsl
xchg
cmp
sub
scas
insb
cmp
xchg
push
repz
add
scas
ret
jecxz
xchg
data16
inc
cld
inc
push
add
dec
icebp
ds
test
pop
pop
fisttps
outsl
pop
xor
mov
jb
popf
cmp
pop
pop
andl
aam
and
mov
add
stos
mov
push
pop
xor
dec
movsb
add
mov
mov
and
xchg
mov
nop
std
xchg
mov
and
mov
xchg
lahf
sub
cmp
arpl
adcl
mov
outsb
test
das
jg
cltd
sbb
mov
mov
loopne
call
adc
mov
push
stos
jno
cmc
xchg
jecxz
mov
cmp
aas
leave
push
adc
jmp
cmp
dec
push
mov
and
mov
xchg
jno
mov
push
push
xchg
xchg
jmp
fmull
insb
adc
pop
cmc
test
dec
test
or
mov
cwtl
push
imul
cmpsl
dec
js
pop
test
inc
pop
dec
inc
push
ss
in
outsb
add
lds
rcrl
imul
out
nop
cmp
xchg
insb
es
out
mov
pop
ficoms
push
cltd
in
jecxz
loope
test
inc
les
and
mov
enter
push
pop
fdivrl
xchg
and
and
out
push
aad
adc
mov
add
cmp
int3
std
or
lret
mov
mov
ret
push
sti
inc
jae
jp
cltd
cld
das
popf
push
addl
pop
pushl
std
adc
cmpsl
xor
mov
push
add
mov
pop
adc
inc
ja
rcl
data16
daa
or
mov
inc
adc
in
or
outsb
sbb
ds
lahf
sti
add
mov
adc
ja
pop
daa
add
out
sub
lahf
ss
aaa
imul
div
xchg
daa
sub
add
sarb
lds
fisttpl
popl
loope
add
cli
xchg
dec
xor
pop
mov
mov
jbe
iret
rcl
lea
and
push
pop
fcom
xchg
sub
pop
jbe
pop
sbb
inc
test
scas
ds
imul
fadds
mov
cmp
dec
inc
nop
adc
test
in
push
mov
cmpsl
stos
out
or
sub
xchg
hlt
mov
dec
jns
out
xor
gs
push
es
or
push
mov
outsb
or
mov
insl
inc
mov
dec
mov
mov
inc
dec
dec
adc
adc
pushl
add
shll
adc
rolb
push
fcmovnbe
mov
cmpsb
xor
xchg
lock
aad
mov
jmp
gs
pop
jecxz
xchg
and
mov
or
push
pop
push
mov
inc
xchg
or
out
dec
or
ljmp
mov
bnd
imul
cld
imul
dec
xchg
mov
jo,pt
push
rcll
adc
lcall
mov
les
xchg
adc
lock
cwtl
aam
sub
shlb
js
adcb
mov
clc
mov
sub
mov
and
mov
not
inc
imul
int3
xchg
dec
dec
xchg
jbe
rcl
mov
or
inc
xchg
pop
sahf
out
aas
lret
push
pop
adc
in
cmp
nop
add
das
push
inc
xor
dec
scas
inc
daa
lock
outsb
sbb
lods
iret
cmp
fwait
xor
cwtl
stos
negl
push
push
mov
xor
adc
sbb
sbb
push
push
mov
xchg
mov
insl
fisubrl
or
mov
mov
pusha
inc
xor
pop
sbb
xchg
mov
sub
push
outsl
adc
or
and
jbe
mov
mov
movsb
inc
push
adc
jo
jg
subb
sub
adc
jge
xchg
stos
adc
test
pop
xchg
out
xchg
loopne
mov
fistpll
iret
push
mov
scas
lock
pop
aam
pop
inc
daa
xchg
jg
les
lods
ljmp
sub
and
adc
jne
mov
xor
popa
lret
in
mulb
out
adc
aam
hlt
popf
out
dec
lahf
xor
int3
mov
ficomps
adc
cld
scas
xor
mov
jmp
fwait
sbb
gs
push
loopne
xlat
cmp
loope
sbb
xor
in
push
cmpsl
stos
jl
push
jbe
jl
dec
dec
rcrb
cmp
ja
xlat
iret
fadds
push
adc
aaa
lret
jle
gs
ja
ss
and
nop
xchg
xlat
lods
adc
push
stos
adc
insb
mov
push
and
jbe
pop
in
and
setbe
xchg
pop
mov
jb
popa
pop
mov
cmp
push
cmp
jb
pop
incl
inc
pop
adc
dec
or
mov
ds
idivb
inc
jbe
das
sahf
push
cmp
imul
and
xchg
dec
push
pop
icebp
inc
test
jbe
lock
cmp
les
test
add
sub
pop
mov
lea
aam
xchg
repnz
xor
mov
bnd
jne
xchg
xchg
xor
and
jo
ss
pop
or
push
ja
pop
sub
or
cmp
cmp
arpl
mov
pushf
idiv
jbe
mov
in
cmp
pop
testw
mov
flds
sub
andb
in
loopne
sbb
nop
lock
xlat
jbe
xchg
xchg
mov
jns
xchg
dec
jne
xor
inc
rolb
ss
pop
mov
andl
rolb
sub
mull
or
xchg
pop
inc
daa
cmp
mulb
xchg
ja
aam
dec
popa
call
test
lods
jns
cmpsl
lcall
xchg
fstpl
iret
cmpsl
insb
popa
add
imul
inc
iret
shl
mov
test
lret
push
aam
fstl
and
sbb
add
in
and
sbb
add
repz
dec
aam
ret
jb
stc
add
mov
push
mov
push
pop
sbb
xchg
jecxz
hlt
jbe
pop
add
and
movsl
pushf
cmp
add
aas
gs
jo
cmpsl
frstor
jb
cld
jbe
xchg
mov
hlt
pusha
mov
incb
aas
mov
aad
hlt
mov
mov
int3
dec
mov
add
in
mov
mov
push
xchg
daa
test
or
imulb
fcoml
cmp
test
stos
push
inc
jo
sbb
popa
jmp
mov
xchg
andb
test
divl
jne
imul
int
cltd
inc
test
xchg
into
jne
cs
sub
cltd
in
cmp
cltd
xchg
xor
cs
lret
rcll
mov
mov
movsb
xchg
add
adc
movsl
cmp
dec
sub
les
or
outsl
mov
mov
fbld
cmpsl
fcoml
sbb
movsl
out
pop
shr
inc
mov
or
jns
push
cld
cmc
xchg
test
add
cmp
mov
pop
sub
repnz
lds
and
cmp
add
fdiv
sub
insb
movl
add
stos
cmpsl
and
movsb
xchg
pop
sbb
push
xchg
mov
and
cmp
call
cltd
cwtl
cmp
sbb
rcl
add
xor
inc
scas
dec
jbe
lret
fmuls
add
inc
pop
icebp
mov
push
pop
popf
jmp
dec
xchg
cmpsb
adc
inc
xor
inc
jmp
pop
roll
xchg
lret
mov
std
xor
clc
xchg
shlb
repnz
or
jecxz
sub
outsb
lret
in
fwait
stc
out
dec
mov
mov
dec
mov
cltd
push
test
adc
add
push
pop
fs
xchg
dec
ljmp
cld
add
mov
movsb
pop
test
imul
imul
dec
xchg
cmp
les
mov
add
mov
aad
mov
cwtl
negb
out
ja
js
inc
les
popa
xlat
test
push
xchg
mov
outsl
popf
or
aas
or
push
inc
push
dec
ficoms
adc
negb
mov
ja
daa
sbb
pop
pop
mov
ja
sub
mov
sbb
add
inc
sbb
jnp
jmp
add
mov
mov
pop
test
out
push
divl
pop
pop
xchg
xlat
cmp
ds
add
lds
lds
xchg
sahf
adc
cmp
add
sbb
aam
and
hlt
inc
mul
repz
outsl
dec
bound
jg
pop
xchg
push
cmc
xchg
scas
je
or
or
sbb
inc
push
push
push
dec
and
xchg
inc
insl
xchg
int
adc
mov
push
imul
lock
mov
cmpsl
or
mov
adc
aas
inc
ja
sahf
push
inc
aaa
adc
inc
mov
in
push
xchg
adcl
xor
jne
movsl
imull
sub
mov
mov
xchg
push
notb
sub
pop
test
mov
and
daa
push
cmp
push
insl
xchg
iret
fs
in
push
xchg
bound
add
xchg
inc
je
inc
xor
pop
lcall
adc
and
cwtl
sub
inc
push
push
dec
in
push
push
adc
push
es
adc
mov
push
scas
jb
adc
xchg
inc
add
insl
push
addr16
movsl
cmpsl
lea
mov
pop
iret
movsl
adc
cmp
insl
andl
xchg
ja
xor
xchg
movb
test
pop
iret
testb
divb
and
inc
push
xlat
mov
xchg
hlt
leave
into
negl
mov
or
lods
and
inc
xchg
jbe
adc
add
xor
sbb
xchg
into
insl
or
jbe,pn
ja
add
jl
scas
pusha
sub
mov
jmp
pushf
jns
jg
xchg
and
mov
xchg
mov
int
rcll
rcrl
mov
xor
mov
mov
sub
jbe,pt
in
mov
ret
loop
cmp
inc
cli
pop
add
pop
lea
int3
cmp
adc
adc
lret
mov
pop
pop
aam
pop
dec
scas
hlt
jbe
out
cmc
ss
stos
and
gs
push
test
add
cmc
aam
or
outsb
jo
fldcw
mov
repz
mov
push
sbb
adc
or
in
notl
push
cmpl
sub
ficomps
mov
jecxz
int3
pop
dec
pop
xor
dec
mov
dec
adc
in
jns
in
outsb
and
aaa
jno
inc
pop
xchg
divl
cmc
sbb
pop
gs
std
sbb
push
sbb
sub
mov
roll
jp
dec
xchg
push
mov
adc
insw
mov
sarb
push
mov
lds
xchg
cmp
push
pop
lds
ror
imul
div
outsb
aam
push
pop
es
clc
add
or
lock
sub
jne
xor
xor
jno
jmp
movsl
rorb
dec
inc
xorb
jg
add
mov
in
push
xchg
sub
dec
mov
mov
hlt
lret
sbb
jmp
aas
es
xchg
mov
xor
out
jle
inc
into
test
pop
cli
popa
in
inc
dec
lock
push
xchg
adc
cmp
adc
sarl
pop
call
pusha
call
dec
or
xor
xor
insb
sbb
mov
pop
xchg
jp
call
xchg
lcall
or
testl
xchg
dec
lcall
push
loop
cmp
incl
push
cmp
ds
mov
cmpsl
xchg
in
xchg
push
daa
xchg
mov
pushf
mov
lcall
xchg
cmc
rcrl
xor
lcall
lea
sarl
rorb
inc
mov
xchg
outsb
cld
cs
cmp
imul
repz
push
pop
or
je
xchg
sbb
xchg
mov
aam
orl
xor
xchg
mov
and
cwtl
ja,pn
xor
in
mov
mov
and
pop
push
cmp
sbb
fistpll
aaa
sbb
adc
pop
dec
pop
sbbb
test
mov
jge
xchg
lahf
push
sub
and
and
xor
inc
xchg
xchg
ds
jmp
push
xchg
jl
sub
pop
inc
push
mov
idiv
sbb
jmp
popa
dec
cmp
test
cmc
sbb
jge
xchg
inc
push
outsb
lods
or
mov
lret
mov
xchg
repz
jg
addb
cltd
cmp
pushf
cmp
push
xor
lcall
jmp
shrl
mov
adc
cmpsb
push
je
xchg
jle
lea
lret
jbe
xchg
inc
ljmp
sete
sbb
add
and
pop
push
or
jo
hlt
xor
inc
data16
add
cmp
iret
dec
cmp
fcomps
jb
cmpsl
pop
mov
test
sub
jbe
sbb
push
or
cs
dec
xor
test
out
adc
rol
cmp
in
test
sub
es
jg
pop
inc
int3
insl
sub
push
leave
inc
cmpsb
es
or
push
rcl
daa
ret
stos
cmp
pop
js
adc
gs
pusha
push
dec
ffree
test
pop
fmuls
cmpb
xor
push
cmp
stos
jmp
clc
and
fisubrl
insl
icebp
test
div
xchg
data16
push
loopne
test
dec
aam
or
jmp
adc
lds
out
push
mov
xchg
or
ljmp
and
mov
stos
dec
mov
out
rcrb
mov
jecxz
jbe
xor
xchg
sarb
outsl
sub
dec
lods
xor
fcmovb
add
hlt
loopne
clc
inc
ja
cmovae
adc
jg
add
adc
jae
addr16
outsb
push
mov
sarl
lahf
xchg
je
jae
dec
jb
movsb
sbb
mov
dec
je
data16
lret
orb
divb
xchg
push
ret
cmc
outsb
pop
int
jle
or
fdivrl
das
pop
mov
imull
inc
dec
mov
push
sahf
xchg
ja
fmull
loopne
xchg
arpl
xchg
ljmp
aas
and
inc
int
mov
push
filds
cmp
mov
jecxz
pop
pop
pop
jno
pop
push
js
scas
xchg
mov
rorb
stos
jbe
int
inc
ja
xorb
daa
enter
push
dec
or
sbb
cld
and
dec
mov
and
pop
outsb
dec
push
cmp
notl
pop
and
sbb
xchg
shr
mov
out
add
add
jne
pop
jg
je
or
test
xor
adc
add
bound
pusha
sub
subl
inc
aaa
lcall
adc
inc
cltd
ljmp
outsb
xor
cmp
int
mov
idivl
stos
and
scas
daa
sub
rcrl
jmp
daa
add
cmp
hlt
inc
ss
xchg
rorl
pop
jae
fstp
test
cmpsl
aam
inc
mov
push
xchg
hlt
inc
aaa
out
iret
ret
push
cmp
adc
jle
cld
outsb
and
mov
mov
fildll
cmpsl
outsl
pop
mov
aam
and
jl
cmc
nop
mov
maskmovq
divl
fs
mov
notl
push
testb
jno
rorl
or
mov
mov
sbb
rclb
and
pop
push
pop
je
and
sahf
out
hlt
inc
jno
push
imul
jp
inc
jo
enter
in
testl
sbb
std
popf
mov
shll
sbb
ds
iret
lret
or
gs
and
outsb
insb
adc
add
in
iret
cmpsb
sub
ss
and
push
dec
dec
cmc
lret
lea
orb
lock
ud2
ret
jle
add
sbb
daa
add
and
xor
aad
adc
jnp
daa
xchg
jne
enter
pavgb
adc
scas
inc
mov
notl
pop
adc
inc
and
xchg
icebp
pop
add
adc
out
push
in
pop
add
xchg
push
add
inc
add
test
mov
hlt
cmc
sahf
add
dec
add
test
pop
out
sbb
mov
adc
sti
sbb
and
loopne
inc
lds
fisttpll
or
push
push
inc
test
mov
xor
lret
lret
clc
mov
movl
cltd
fisttpll
or
mov
pop
add
shl
iret
test
daa
in
mov
xchg
mov
pop
push
test
orb
ss
or
xchg
inc
movb
pop
inc
rcl
cwtl
xchg
inc
pop
scas
add
jmp
sbb
das
or
xchg
mov
adc
pop
in
ja
mov
inc
out
jle
or
jbe
ds
adc
jnp
shlb
cmpsl
xchg
jp
sub
sub
fwait
aam
dec
inc
stos
imul
add
cmpsl
in
andb
mov
cmpsl
aad
adc
jns
jmp
mov
loop
mov
stos
xor
int
mov
sbb
add
cmp
xchg
frstor
sbb
add
jbe
adc
in
testb
or
sub
insl
fisubrs
dec
mov
dec
mov
push
lock
mov
imul
mov
fmull
out
cmp
imul
pop
mov
test
jmp
pop
mov
dec
nop
dec
insb
cmp
insb
ja
pop
inc
pop
or
loopne
scas
push
sbb
rorl
inc
adc
stos
xor
mov
dec
or
jg
add
inc
clc
fdivrs
jecxz
and
out
iret
scas
into
xor
fsubl
pusha
popa
push
sbb
negl
xchg
ds
jl
mov
addb
jae
push
xchg
mov
xlat
cmc
sar
and
jbe
js
aam
push
push
xchg
jle
xor
outsb
cmp
stos
ffreep
lock
xlat
add
mov
xchg
scas
adc
sbb
dec
pop
or
stc
xor
mov
mov
lods
out
sbb
push
test
push
cmp
xchg
mov
xchg
adc
jecxz
out
cwtl
xlat
notb
cld
jbe
xor
cwtl
loopne
add
jbe
cmp
nop/reserved
sbb
inc
mov
jmp
mov
imul
leave
or
pop
insl
pop
mov
cmp
das
pop
sub
addl
pop
loop
xchg
cmpsb
cmpsl
sub
insb
lfs
xchg
cltd
pusha
mov
pop
xchg
add
idivl
pop
mov
dec
cltd
or
lods
mov
sub
into
adc
fucom
sbb
or
aam
cltd
ljmp
pushf
sub
add
mov
mov
stos
or
mov
in
int3
movsb
add
jnp
cmp
das
scas
bound
add
add
cli
dec
jmp
adcl
cmpsl
and
cmp
xor
ret
and
sbb
faddl
mov
mov
mov
imul
stos
lcall
xor
mov
dec
inc
mov
add
sub
push
dec
mov
xchg
add
imulb
push
jbe
out
xchg
out
xor
dec
sbb
testb
nop
inc
stos
repnz
mov
inc
fmull
mov
cmp
lea
imull
ja
inc
inc
loopne
ret
add
pop
aaa
jge
ja
loope
jge
mov
dec
adc
leave
cmp
ljmp
ret
cwtl
xor
mov
lahf
and
add
adc
mov
mov
or
mov
pop
fwait
sbb
out
sub
test
ret
outsb
pusha
stos
mov
and
jp
dec
xchg
fisubrs
mov
insl
repz
mov
mov
mov
loopne
jb
stos
mov
mov
xchg
inc
xchg
js
mov
xchg
xor
cmpsl
addr16
push
inc
mov
das
xchg
aaa
sub
sub
pop
ja
dec
es
insl
jmp
add
jp
mov
loopne
xor
xchg
mov
cwtl
sbb
cmp
sub
inc
icebp
or
cmp
out
repnz
je
std
sub
pop
inc
xor
dec
sub
add
ffree
mov
sbb
iret
pop
dec
stos
insb
lret
pop
mov
sbb
mov
fdivrp
out
aam
inc
arpl
out
jle
stos
cld
xor
mul
pop
das
cli
adc
inc
mov
inc
hlt
popa
testb
push
pop
fsubrl
cmpsl
adc
lock
test
leave
push
popa
add
dec
xchg
adc
add
out
test
xor
pushf
gs
icebp
mov
divl
add
test
jbe
test
iret
lods
xchg
pop
mov
stos
dec
scas
insb
insb
ss
pop
inc
push
lds
fs
adc
cmp
xchg
inc
push
addr16
adc
add
xlat
nop
icebp
lods
cld
add
popf
stos
shlb
dec
jno
jno
dec
ret
inc
xchg
cltd
mov
inc
lahf
negb
rclb
ss
mov
aaa
outsb
add
pop
setbe
xor
jecxz
movsb
xor
stc
mov
in
scas
sub
push
xchg
notl
and
inc
pop
sbb
push
das
lock
pop
adc
enter
test
cmp
fstpl
subl
sbb
jb
sub
xchg
mov
sbb
js
pop
jl
fcomps
add
call
notb
dec
jp
pop
hlt
out
jae
sub
add
aas
push
xchg
mov
xchg
daa
outsl
pop
loope
in
cmp
push
divl
ja
pop
mov
lret
sub
push
xor
jge
lret
cmp
fmull
sub
mov
outsb
sbb
jle
pop
mov
movsl
iret
int3
push
rcrb
rorb
mov
and
sbb
scas
cltd
ljmp
outsl
pop
jmp
clc
psraw
mov
pop
mov
pushf
pop
cmpsl
xchg
call
cs
ret
add
icebp
mov
mov
into
sbb
pushf
dec
push
mov
rcll
adc
mov
xor
jns
repnz
lods
dec
lds
xchg
call
js
ret
or
cmp
test
cmc
jp
cmc
jecxz
stos
cmp
fcoml
pop
dec
adc
aam
iret
je
lcall
sti
mov
inc
sub
test
xchg
rorb
subl
enter
and
in
mov
mov
mulps
stos
out
inc
lods
mov
jno
aaa
add
adc
rolb
into
nop
pop
sub
sub
add
adc
mov
xchg
cmp
ja
mov
sbb
addr16
test
add
pop
push
mov
inc
cld
fcoms
aaa
cwtl
pop
mov
cmc
adc
pop
mov
xlat
fcmovb
movsl
cmp
outsl
mov
adc
stos
js
sub
pop
cmc
adc
cld
or
lret
dec
lahf
mov
xor
pop
adc
int
and
dec
into
push
mov
jbe
decb
push
dec
jno
xor
pop
mov
pop
inc
mov
xchg
jle
cmpsl
mov
dec
xor
add
pop
push
out
ret
or
cmpsl
mov
loop
jne
pop
xchg
jmp
jmp
dec
mov
fwait
cmpsl
fisttpl
mov
cltd
mov
add
loop
push
fwait
int
mov
inc
fldenv
inc
addr16
dec
icebp
jp
fadds
rclb
push
mov
add
xchg
add
fisttpl
jbe
in
xchg
and
shll
out
mov
repz
imul
daa
rcrl
sub
xchg
addr16
stos
insb
in
fcmove
scas
in
pop
cmp
rcr
mov
mov
mov
push
cltd
data16
add
mov
iret
or
mov
cmp
movsb
enter
jo
sbb
dec
and
sarb
jne
ja
orl
dec
aam
add
call
mov
xchg
sbb
fldl
cmc
add
in
inc
movsb
xchg
mov
jb
pop
xchg
inc
mov
adc
xchg
jmp
push
add
mov
mov
sub
test
shll
xor
lock
xchg
outsl
sub
xchg
in
or
and
stos
pop
jb
rorb
dec
mov
jp
add
and
lock
in
sbb
jno
mov
xchg
cmpsb
adc
lock
mov
mov
in
mov
iret
mov
jge
mov
faddl
cmp
lock
push
ret
sub
popf
aas
outsl
pop
jle
adc
cld
dec
ret
sti
pop
inc
xor
jbe
add
add
dec
xchg
shlb
add
lds
mov
xor
push
lahf
inc
daa
cmp
pop
sti
pop
je
mov
cmpsb
leave
insb
pop
jb,pt
jne
int
loope
or
xchg
lret
call
or
pop
out
jbe
mov
xchg
cmc
xchg
imul
out
dec
aam
or
cmpsl
ss
mov
insl
push
fstps
bound
sub
and
sahf
std
mov
dec
adc
mov
pusha
test
cmp
cmpsl
nop
add
pusha
push
jns
push
xchg
out
or
cld
cmp
mov
addr16
mov
xchg
xchg
push
sahf
add
push
mov
enter
bound
aas
test
and
push
xchg
or
mov
ret
cmc
test
cmpsl
and
gs
dec
mov
fcoml
lods
xchg
hlt
sbb
cwtl
out
int
int3
js
xor
fisttpll
mov
and
pushf
mov
divl
stc
jbe
test
inc
push
jbe
mov
cmp
mov
sbb
ss
dec
mov
pop
movsl
and
mov
aam
paddusb
adc
dec
inc
les
mov
fcoml
jo
add
cli
push
pop
cmc
sbb
clc
aam
mov
dec
jmp
jmp
xacquire
sbb
lahf
cwtl
add
mov
shlb
adc
rcll
popf
dec
sub
push
imul
mov
sbbb
hlt
sub
pop
rol
pop
sahf
adc
ss
outsb
pop
mov
mov
dec
mov
add
jb
xor
aas
icebp
cmp
outsb
or
inc
xchg
mov
xchg
inc
mov
shlb
and
ret
mov
ds
shlb
add
das
add
push
jmp
xor
in
xor
ja
xlat
hlt
aam
push
dec
or
xor
sub
push
jg
pop
loop
shrb
xchg
scas
cmp
xchg
push
pop
xchg
pop
mov
lds
mov
mov
cmp
dec
loop
dec
xchg
jae
adc
xchg
addr16
cmp
add
or
adc
imul
pop
push
jne
xchg
popf
mov
jmp
gs
ja
cmpb
ja
inc
mov
data16
out
mov
ljmp
mov
fsubl
outsb
lahf
push
sbb
popf
xor
mov
xor
aaa
add
jo
hlt
sti
ja
xchg
inc
in
mov
mov
xchg
jnp
aam
pushf
pop
jmp
jb
ffreep
cmpsl
imul
pop
or
in
and
mov
pop
mov
push
xor
sub
sbbl
ficoms
aas
jl
es
ret
adc
or
xor
fildl
adc
and
add
mov
ja
les
mov
xchg
int3
ss
cmp
mov
dec
jo
cmp
ret
or
testl
sbb
daa
xor
xchg
andb
jbe
sbb
neg
mov
xchg
leave
add
mov
push
js
sbb
mov
sub
sub
js
mov
in
mov
xchg
inc
out
push
imul
or
push
shlb
adc
cld
or
xchg
rcl
dec
faddl
push
and
movsl
dec
pop
rorb
dec
push
pop
inc
dec
popl
sub
fisttpll
mov
cmc
lahf
mov
or
pop
inc
repz
hlt
test
sbb
and
fdivrl
cmp
pop
loopne
pop
mov
sub
jne
aad
sti
adc
ja
mov
dec
pop
lahf
jb
dec
push
or
cmp
mov
inc
in
or
inc
push
ficoms
mov
fs
mov
lahf
cmpl
mov
pushf
loope
adc
loopne
lret
aam
pop
int3
xorb
ja
inc
mov
jg
fstp
enter
mov
xchg
fldt
xchg
ret
aam
mov
cwtl
and
js
pop
pop
not
loope
mov
ror
adc
inc
jbe
pop
icebp
fdivp
cmp
sbb
repz
sbb
ja
pop
aam
add
mov
mov
sbbb
aaa
add
dec
test
popa
cld
and
adc
mov
xor
dec
cmc
xchg
or
jbe
dec
xchg
sbb
enter
xchg
mov
xlat
call
inc
adc
in
pop
sti
add
pop
sub
xor
dec
xor
mov
hlt
jmp
adc
lds
push
jg
cmp
mov
push
sahf
arpl
loopne
jne
mul
cld
ret
dec
xchg
push
es
push
jle
test
and
or
jecxz
adc
xchg
aad
jbe
pusha
xchg
cli
jge
mov
sbb
aam
fsubr
adc
pop
stos
cmp
pop
imul
fiadds
push
gs
add
bound
xchg
jns
xchg
jae
jno
fsts
mov
loopne
xor
jmp
sbbl
hlt
loopne
icebp
sti
std
mov
mul
xchg
pop
xor
adc
paddsb
cwtl
dec
gs
or
jbe
add
xchg
or
dec
mov
push
arpl
repnz
setbe
lods
mul
sar
test
add
cmp
gs
sub
pop
das
aam
stc
testl
js
add
xor
in
adc
cli
insl
ss
ret
rolb
neg
add
xor
jbe
test
outsl
mov
cmc
sub
ss
adc
or
in
into
outsl
dec
dec
icebp
xchg
xchg
test
or
jb
pushf
popa
aad
pcmpeqb
pop
xor
jle
sbb
and
scas
dec
xorl
insl
in
and
pusha
arpl
xchg
xchg
out
jmp
fwait
add
in
ss
popa
pop
xchg
mulb
xchg
mov
jl
jecxz
adc
insl
cmp
call
in
mov
outsb
push
xchg
push
add
add
scas
xor
pop
cwtl
xorl
mov
sub
xchg
inc
cltd
or
mov
xchg
mov
stos
pusha
and
sarb
in
pop
xor
cmpsb
lock
cmp
out
pop
push
mov
cmc
loopne
push
pop
pop
inc
pop
fcompl
cmp
shlb
jne
js
jns
test
adcl
loopne
xchg
rcrb
inc
addl
lahf
jbe
mov
inc
ja
push
push
jecxz
add
pop
add
xor
xchg
and
xlat
and
mov
imul
or
popf
rcrb
sbb
or
jl
mov
and
dec
pop
push
cmp
call
popl
sub
loopne
loop
test
dec
dec
imul
or
enter
pusha
sahf
dec
gs
rorb
push
inc
das
std
push
cmc
das
and
dec
mov
mov
imul
cwtl
push
test
aam
dec
adc
xchg
in
outsl
mov
add
sbb
jl
push
inc
jb
mov
xor
mov
jge
mov
lock
icebp
add
pop
add
mov
dec
xchg
ret
es
add
adcl
jbe
xlat
shll
mov
mov
and
or
lods
pop
data16
xor
mov
in
xchg
add
call
aad
testl
imul
dec
pop
xchg
jg
dec
enter
pop
shl
js
xchg
xchg
dec
push
je
gs
jne
ja
pop
outsb
adc
aam
cmp
aam
lds
pop
cli
sub
inc
add
dec
std
push
xchg
xor
aaa
jbe
push
jge
cmp
and
pop
sbb
pop
dec
cwtl
scas
xor
pop
xchg
into
lcall
push
cltd
mov
arpl
dec
xchg
or
push
flds
fiaddl
jo
sub
add
in
pop
gs
xor
mov
push
imulb
cli
imul
scas
lock
iret
xchg
lahf
inc
call
fldt
mov
cmpsl
imul
xchg
es
jmp
ja
imul
lahf
jbe
cmpsb
xlat
out
push
enter
cltd
test
lock
shlb
inc
or
cs
repnz
mov
cmc
xor
push
and
inc
aam
pop
jl
push
roll
in
jno
je
mov
mov
and
jo
es
xchg
cs
xor
bound
jmp
out
les
pop
rorb
imul
jnp
inc
fnstsw
add
andl
adc
int3
sub
or
insl
ds
sbb
xor
xor
add
rolb
repz
shl
adc
imul
dec
pop
mov
jnp
jbe
mov
xor
leave
mov
ljmp
inc
adc
push
pop
lea
lods
fildl
inc
mov
or
jbe
outsb
lds
in
jg
cmc
dec
sbb
push
and
jmp
negl
icebp
adc
in
aad
sbb
or
leave
and
jl
mov
fcomps
mov
outsb
add
pop
hlt
jmp
icebp
jnp
jbe
push
cmp
std
nop
clc
ss
mov
xchg
aad
inc
pop
testl
or
enter
add
test
push
and
test
movsl
dec
adc
mov
xor
lea
aas
add
inc
mov
jbe
clc
in
jne
in
je
loopne
mov
jne
or
push
add
test
mov
mov
pop
outsl
cmp
rclb
jbe
scas
enter
inc
xor
push
mov
call
fsub
mov
xchg
leave
xor
enter
mov
push
mov
mov
push
addb
add
outsb
imulb
addr16
scas
xchg
xchg
xor
into
subb
xchg
and
movsb
neg
test
mov
std
js
xor
dec
sbb
mov
lock
jecxz
mov
and
mov
sub
movsl
js
daa
mov
dec
pop
and
xchg
shrl
add
mov
xchg
lret
mov
out
push
and
stos
pop
imul
cmp
rolb
and
popa
fsts
push
mov
stos
fwait
shl
cmp
test
into
test
sahf
outsb
dec
add
das
fdivs
nop
mov
fidivrs
fisttpll
out
int
ja
orb
and
loopne
sub
imul
pusha
adc
and
mov
xchg
addr16
rcl
jge
test
pop
rolb
aam
sub
or
bnd
bound
push
mov
jecxz
hlt
adc
xor
mov
mov
and
cld
or
iret
add
imul
insb
push
cld
push
push
sbb
sbb
xchg
mov
data16
ja
in
nop
aas
mov
orl
mov
bound
gs
adc
sub
push
repnz
add
push
int3
add
popa
add
xor
xlat
out
out
mov
fs
jbe
mov
jmp
lret
in
xor
push
gs
out
pop
inc
mov
sbbl
lods
outsb
mov
adc
and
fmul
mov
rol
mov
add
movsl
iret
out
jbe
adc
add
push
test
adc
mov
andl
mov
ud2
add
cmp
mov
dec
mov
cli
add
inc
adc
sub
push
movsb
in
loop
pop
mov
xchg
and
loop
ret
inc
xchg
xchg
xlat
pop
daa
and
jp
in
rcr
adc
les
jno
hlt
jg
lods
mov
or
js
out
or
mov
xchg
movsl
push
jo
cltd
adc
aam
add
enter
mov
es
jno
int
data16
push
cmp
into
jo
mov
jns
ljmp
mov
mov
dec
clc
mov
lods
jbe
pop
xchg
jne
scas
inc
pop
nop
mov
dec
push
pop
mov
jle
sbb
push
cmp
mov
sbb
mov
dec
repnz
mov
push
add
jae
xchg
mov
push
ja
xchg
mov
into
bound
outsl
mov
aas
mov
pop
mov
adc
mov
jo
decl
xchg
popf
pop
dec
push
sub
iret
andb
popa
dec
daa
int3
scas
cs
test
jno
push
sti
sub
adc
add
test
hlt
outsb
cltd
mov
adc
aaa
jb
setbe
fidivrs
sbb
jbe
push
adc
add
fsubrl
mov
andl
xor
addr16
and
insl
mov
adcb
in
movsl
add
xchg
add
lods
pop
jns
add
pop
lret
cmpsb
jg
ret
inc
test
xorb
fildl
or
sub
push
lds
shll
fs
and
pop
jbe
add
inc
ret
ja
sbb
mull
and
mov
cwtl
xchg
shlb
xchg
and
mov
push
add
mov
add
loope
xor
xchg
mulb
daa
arpl
xchg
in
push
push
pop
idiv
inc
popa
cmpsl
adc
aaa
in
or
and
stc
aaa
sti
lea
add
pop
sbb
rorl
add
aaa
pop
xor
jl
add
push
push
xchg
pop
mov
add
inc
jne
ja
mov
lods
pop
sub
cmp
unpckhps
push
ja
add
push
add
addl
dec
pop
xchg
xchg
daa
push
sub
pop
negl
inc
pop
test
add
and
adc
xchg
aaa
xchg
out
sbb
inc
daa
sub
jne
push
pop
cmpsb
add
insb
mov
sub
inc
daa
mov
xchg
xchg
or
das
mov
sub
inc
mov
dec
jg
inc
lcall
xor
dec
test
xchg
push
idivb
pop
add
mov
push
mov
ss
and
pop
pop
addr16
adc
xchg
add
add
inc
and
clts
push
push
and
and
xor
pop
mov
push
test
xor
es
sysret
cmp
inc
xchg
lret
data16
div
fisttpl
jecxz
mov
je
testl
jle
add
lcall
push
mov
push
xchg
pop
mov
aaa
push
xchg
push
xchg
xor
push
adc
xchg
jbe
push
test
push
sub
pop
aaa
popw
push
mov
inc
pop
xlat
adc
dec
xchg
push
iret
aaa
test
or
xor
mov
mov
sbb
inc
incb
adc
pop
fbstp
mov
sub
mov
mov
addr16
push
bound
cmc
loope
cmc
adc
hlt
push
push
add
add
mov
test
popf
hlt
ret
mov
jge
sbb
xchg
cmc
aaa
mov
jmp
imulb
add
repnz
push
fistps
test
cmp
cmc
out
in
ja
cltd
pop
sahf
dec
dec
add
repz
paddusb
mov
cmp
fadds
or
sbb
lret
imul
and
not
jbe
add
dec
ja
add
rcrb
mov
adc
mov
mov
clc
sbb
jmp
dec
pop
pushf
mov
xchg
dec
sarb
in
dec
testb
xchg
mov
shr
fbstp
std
lahf
xchg
inc
enter
xlat
or
add
sti
int3
mov
mov
aas
cs
mov
test
movsb
xchg
jl
xchg
inc
testl
mov
or
xchg
add
jb
mov
cmpl
mov
and
dec
rclb
sub
ds
jb
mulb
cmp
and
jo
jbe
mov
imul
jbe
add
adc
mov
sbb
xchg
mov
rorb
push
dec
dec
nop
xchg
loopne
es
jmp
jecxz
shrb
fisttps
pusha
pop
cmp
movsl
lods
push
jno
mov
ret
adc
aam
cmp
mov
movsb
add
fnstenv
inc
xchg
mov
add
mov
je
push
dec
lahf
push
gs
cmp
lcall
test
push
mov
aas
pop
mov
hlt
mov
mov
movsb
mov
mov
push
test
mov
cmp
lea
dec
adc
cwtl
push
jne
mov
insl
outsb
dec
sbb
nop
jo
rcll
cli
cmp
daa
insl
or
mov
mov
stos
inc
loopne
out
add
iret
sbb
rorb
andl
pop
movsb
fwait
stos
sarl
xchg
mov
mov
xchg
std
cmp
cmp
nop
xchg
js
lahf
adc
cmp
and
ja
xor
loop
mov
cmp
test
ss
push
cmpsl
and
xchg
repnz
mov
mov
lds
jo
push
sbb
jge
pusha
xchg
hlt
testb
add
cmc
pop
subl
repnz
lahf
xor
and
jmp
add
push
lock
nop
idiv
lea
cmp
sub
sub
inc
mov
lcall
ss
test
mov
dec
fildl
cmp
out
repz
dec
cmp
mov
aaa
lods
sbb
aaa
mov
cmpb
movsl
cmpsl
jl
ds
adc
pop
in
ja
loopne
cmp
lahf
xchg
js
jmp
aas
jno
in
mov
xchg
aaa
xlat
lret
ds
pop
pushf
enter
stos
xchg
push
dec
xor
xor
dec
cmpsl
pop
mov
and
imul
jecxz
je
xchg
mov
xchg
mov
add
sbb
data16
into
adc
mov
sarl
adc
out
stc
stos
aas
popa
cmp
cld
mov
mov
add
adc
mov
add
cmpsl
jno
sub
test
inc
int3
dec
add
adc
leave
and
jbe
add
outsl
aam
add
ljmp
fidivl
dec
mov
jne
ss
or
xchg
mov
push
cs
cwtl
or
inc
es
jmp
pop
pusha
daa
loop
push
and
movntq
leave
lret
shll
adc
lock
add
cmc
dec
and
or
ss
popf
pop
shlb
lahf
jecxz
shl
enter
push
mov
mov
int
or
loope
xor
or
ja
jmp
dec
das
sub
std
mov
in
adc
sub
setbe
inc
or
test
and
jbe
pop
jae
adc
cmp
dec
and
mov
push
pop
imul
sbbl
push
pop
xchg
fisttpl
push
stc
adc
push
mov
and
repz
sbb
jbe
or
push
in
xchg
push
jecxz
arpl
rep
mov
scas
mov
mov
and
xchg
fcoms
lret
iret
xchg
mov
sbb
leave
jle
mov
xchg
mov
out
in
ss
mov
push
mov
or
hlt
inc
xchg
ss
mov
add
icebp
nop
xchg
test
dec
adc
dec
movswl
rolb
add
adc
push
ss
shlb
push
mov
adcl
xchg
xor
adc
jbe
fs
cmp
fsub
adc
movb
xchg
movsb
sbb
push
stos
or
fsubrp
shrb
hlt
ja
out
stos
hlt
orl
fstps
add
push
scas
fnstcw
mov
xor
icebp
dec
xchg
popf
fisttpll
cmp
int3
cltd
xor
mov
imul
sub
icebp
test
add
jno
sbb
xor
and
popa
es
mov
jbe
adc
push
mov
in
xchg
rcl
pushl
ds
and
movsb
fsubl
stos
adc
inc
daa
test
jg
call
enter
or
xchg
clc
stc
push
adc
push
jns
popf
nop
ja
push
lods
xchg
or
mov
js
sbbl
fsts
dec
mov
es
jle
and
push
xchg
mov
nop
xchg
test
xchg
incb
dec
iret
les
inc
mov
or
and
loop
mov
jp
scas
push
mov
adc
pop
jbe
push
mov
xchg
xlat
jmp
jno
sub
mov
idivl
mov
push
into
jge
jb
sahf
pop
or
and
or
stos
pop
aad
lea
and
cld
ret
stos
sub
and
dec
test
or
testb
sub
roll
stos
xchg
pop
test
lods
mov
int
and
xchg
or
add
jl
xor
and
dec
movsl
mov
in
or
sub
mov
mov
movsb
dec
jbe
pusha
xor
or
xchg
fidivrs
cmp
lods
imull
inc
scas
in
popa
mov
jmp
mov
xchg
loopne
xlat
stos
mov
pop
pop
int3
xchg
mov
dec
add
iret
push
out
xor
xchg
cmp
popa
sbb
hlt
xor
xchg
pop
mov
scas
rcr
cmp
ja
add
movsl
daa
add
adc
shlb
iret
aad
jmp
add
mull
cs
dec
int3
pop
jl
sti
aad
sbb
push
adc
outsb
repz
mov
gs
popa
adc
jno
rcl
add
mov
test
push
int3
clc
testl
cmc
insb
pmaxsw
xchg
sub
add
or
daa
aam
mov
pop
into
clc
push
add
inc
loopne
hlt
add
lahf
adcl
pop
or
or
push
jmp
ss
jle
mov
test
cmp
xor
lea
and
shrl
or
add
adc
cmp
loopne
and
rorb
xchg
idivl
std
cmc
ja
aam
adc
cs
int
mov
jge
xchg
mov
shll
mov
and
cltd
ss
sub
ret
xchg
lahf
xor
mov
in
loopne
adc
test
rorb
mov
dec
in
xlat
jmp
or
or
jl
movsl
sub
mov
scas
notb
jp
fdivrl
cld
stos
adc
xor
shr
inc
cmc
add
mov
push
cmp
pop
jb
add
jae
les
xchg
push
mov
xor
test
push
sub
cli
and
mov
js
inc
cmp
pop
mov
inc
mov
xchg
sti
ffree
cs
adc
sbb
scas
imul
xor
dec
mov
aaa
rol
xor
mov
cmc
mov
sbb
pop
adcb
fcompl
icebp
jbe
cwtl
adc
repnz
pusha
les
xlat
gs
push
pop
pop
add
sub
and
and
sub
push
aas
scas
push
sbb
lds
jb
xchg
mov
inc
test
xchg
mov
lcall
or
aam
je
xchg
or
and
push
mov
xchg
shll
rclb
mov
mov
mov
loopne,pn
pop
xchg
dec
int
mov
mov
cmpsl
out
or
jns
gs
dec
popa
call
or
mov
ss
mov
mov
xchg
jnp
aam
mov
pusha
pop
jecxz
aaa
mov
xchg
jl
and
push
cwtl
in
fimull
gs
cmp
adc
xchg
inc
insl
fisubl
xchg
out
xor
jle
dec
mov
add
mov
pop
movsb
sub
mov
xor
insb
mov
pop
gs
and
std
popa
inc
mov
sub
out
xchg
aaa
cmp
sub
arpl
mov
xchg
sbb
mov
das
adc
push
icebp
fmul
int
mov
out
aaa
into
mov
push
pop
lret
test
push
ljmp
pop
sub
mov
xor
icebp
mov
imul
aam
icebp
mov
sub
test
sbb
test
roll
pop
pop
dec
into
scas
hlt
xchg
cmpsb
jne
mov
lds
and
je
push
neg
mov
mulb
hlt
or
imul
push
inc
and
bound
pop
add
int
repnz
stos
test
and
addr16
shrb
cld
inc
add
lret
jge
and
sub
lods
or
sbb
dec
pop
pusha
sti
mov
xchg
cmp
cli
loopne
shll
std
inc
out
lds
dec
pop
push
enter
xor
pop
or
fidivrs
pop
push
stos
sbb
cmpsl
repz
test
inc
pushf
dec
adc
xchg
cmpsb
mov
jae
out
push
in
or
and
mov
jbe
insb
cmp
push
lahf
push
rorb
fsubrl
rcrb
xchg
fs
mov
mov
dec
dec
cmp
add
pop
notl
cmc
faddl
mov
mov
inc
shl
pop
insl
sbb
mov
movsl
mov
test
sub
cmpsl
aaa
sbb
cmp
movsb
mov
dec
iret
mov
inc
and
imul
pop
dec
fdiv
or
lods
leave
mov
mov
outsl
cwtl
xor
test
cmc
dec
lds
inc
daa
sub
cmp
mov
cmp
loope
cmp
mov
out
rcrl
cmp
enter
rclb
xchg
mov
arpl
inc
pop
jbe
rcrb
mov
cmp
xchg
mov
in
cmp
sbbl
shlb
ret
push
sbb
out
and
sub
and
rcrl
rcrl
enter
stc
push
aad
and
pop
stc
pop
stos
pop
mov
or
xlat
dec
inc
cli
xchg
jge
fdiv
and
xchg
push
inc
push
loopne
ret
outsl
pop
xor
ret
push
jmp
sbb
movsb
and
and
and
xchg
sbb
into
push
in
add
push
mov
sub
out
aad
mov
mov
pop
xlat
sbb
aas
adc
cld
dec
adcb
cltd
shl
outsb
dec
pop
jns
mov
xor
imul
loopne
push
popa
mov
sub
xchg
iret
and
lea
nop
adc
out
mov
out
pop
test
pop
mov
sbb
xor
mov
cmp
cmpsl
mov
and
jns
xchg
xlat
pop
fstps
mov
mov
add
rcl
inc
mov
icebp
xchg
adc
jbe
xchg
pop
inc
daa
mov
aaa
imul
iret
push
xor
pusha
cs
inc
mov
repz
pop
loope
push
jns
ret
das
cmp
movsl
xchg
stos
and
adc
mov
lods
lahf
mov
mov
aaa
cmp
mov
clc
add
sub
mov
inc
xchg
pop
daa
pusha
sarl
inc
mov
cmp
inc
dec
lods
add
mov
xchg
ss
bound
jecxz
sub
daa
push
inc
std
push
out
test
mov
push
push
xor
cmc
or
cmp
in
lea
cwtl
leave
dec
xchg
enter
sbb
dec
inc
jbe
fnsave
mov
push
inc
in
in
xor
hlt
xchg
jge
mov
dec
hlt
sahf
add
mov
lret
cmc
out
xchg
jo
std
dec
jns
adc
sub
ret
xchg
lds
stos
xchg
out
jbe
push
xchg
or
xchg
inc
dec
ss
xchg
es
mov
loope
pusha
dec
loopne
pop
iret
or
xchg
jbe
jae
stc
rorb
aad
ljmp
xchg
sbb
push
addl
std
pushl
orb
loopne
enter
pop
icebp
mov
pop
push
xchg
inc
push
movsl
sub
daa
or
cmp
std
ret
cmp
xchg
jmp
inc
cmp
aaa
jbe
pop
fnsave
cld
pop
test
sbb
add
xlat
xchg
jno
sahf
inc
cmp
lock
and
cmp
arpl
pop
fwait
mov
imul
in
cmpsl
scas
cltd
pop
mov
imul
dec
ret
lea
jno
decb
call
xchg
inc
cmc
sub
adc
sub
sbb
lahf
cmpsb
pop
aam
ret
xlat
jle
aam
mov
loopne
mov
jbe
push
test
inc
cmp
movsb
sbb
stc
push
sbb
cmp
stos
testl
push
pop
mov
imul
sub
and
ja
mov
xchg
cs
les
dec
popf
fcoml
es
outsl
pop
xchg
or
adc
mulb
xchg
pop
orps
ret
and
and
stc
lea
fucomip
cwtl
add
push
inc
add
xor
xor
in
and
mov
or
icebp
dec
pop
les
icebp
mov
das
mov
pop
dec
enter
push
mov
dec
pop
test
and
push
and
push
mov
push
jle
inc
mov
cmpl
push
mov
cmpsb
pop
int
enter
adc
xor
add
inc
mull
fsub
ljmp
pop
sbb
or
push
aam
push
arpl
mov
dec
movsl
aam
and
adc
jae
xor
xchg
test
mov
xchg
xor
cmp
mov
xchg
flds
mov
cmp
add
aaa
xchg
inc
and
xor
out
mov
xchg
jmp
inc
push
and
pop
and
jno
jmp
sbb
std
dec
aaa
xor
push
in
jno
jp
adc
push
in
ret
dec
aaa
mov
bound
push
xor
jmp
ret
sbbl
sub
mov
ja
sbb
mov
mov
xlat
adc
scas
sbb
and
xor
ret
jmp
filds
cli
faddl
ret
out
jmp
movsb
dec
cmp
xchg
in
stos
insl
es
setbe
loope
pop
push
ljmp
xchg
les
push
in
dec
out
ja
out
dec
frstor
cmp
adc
mov
outsb
inc
or
in
mov
mov
and
hlt
dec
xchg
pop
dec
and
inc
adc
rcll
push
fsubs
jmp
sub
jb
cmp
xchg
lahf
test
pop
ja
and
add
rcl
pop
dec
add
or
mov
add
dec
pop
orb
xchg
inc
out
push
movsl
out
mov
lcall
clc
adc
xchg
xor
xchg
push
adc
rorl
push
iret
movhps
xchg
xchg
mov
adc
mov
js
idivb
push
dec
enter
cmp
nop
sub
pop
pop
mov
push
loope
mov
pop
dec
mov
mov
xor
xorl
stos
sbb
aaa
and
das
loopne
or
test
ja
sub
stos
int
pushf
push
add
cmp
sub
lahf
lret
push
sbb
pop
xchg
pushf
cmp
jb
add
sub
out
in
mov
in
or
xor
cwtl
adc
lret
ret
pop
and
sub
aaa
mov
dec
mov
xor
adc
add
cmp
sub
push
jae
and
mov
psubusw
stos
xor
lret
dec
mov
push
sub
cmp
imul
pop
int3
mov
xchg
pop
cwtl
lds
fs
jns
notl
xorl
jle
insb
in
ss
leave
pop
cmp
aad
dec
adc
mul
or
mov
adc
pushf
add
rorl
test
push
clc
jl
mov
ss
mov
std
fldenv
cmp
stos
jns
leave
call
pop
pop
stos
shll
pusha
icebp
add
pop
cmp
ret
jbe
ss
icebp
inc
add
xchg
push
arpl
adc
push
adc
lahf
aam
ja
mov
and
pop
adc
aaa
dec
stos
ss
fisttpll
sub
mov
mov
ret
or
xchg
cld
scas
or
shrb
call
je
sub
jg
or
pop
mov
fcoml
add
shrb
mov
adc
shll
lods
jle
fsubs
cmp
vmaxpd
call
stc
xlat
notb
push
xlat
cmp
jge
cs
popa
sbb
das
jbe,pt
jg
gs
daa
in
sti
stos
ja
sbb
into
pop
aaa
icebp
pop
xor
add
push
cmp
dec
je
and
jno
scas
aas
and
xlat
add
inc
mov
mov
push
and
push
mov
pop
shll
shl
pop
call
and
inc
jle
pushf
lock
adc
push
std
jns
out
fcoms
fistpl
test
pop
imul
adc
les
mov
adc
es
lods
xchg
sbb
mov
fcoml
inc
xchg
test
dec
push
pop
movsb
lock
add
icebp
mov
and
scas
xor
ret
cmc
pop
xlat
push
and
aam
jp
xor
push
or
daa
dec
sub
pop
clc
sbb
pop
xchg
dec
movsb
adc
into
adc
mov
mov
andb
mov
fcompl
aam
dec
jne
inc
add
add
mov
nop
sub
mov
pop
push
xchg
scas
pop
inc
adc
data16
inc
cmp
insb
mov
rolb
notl
xchg
cmc
test
inc
sub
stos
cmpsl
dec
mov
not
repz
lret
rorb
adc
iret
cmpsl
bound
and
sub
ficompl
inc
iret
fdivrl
push
jg
inc
xchg
lods
movsb
jae
lds
push
or
js
dec
aad
sahf
std
ja
inc
mov
and
das
popa
lods
pop
adc
mov
movsb
loop
and
and
cmpl
pop
jg
xchg
ret
daa
outsl
jbe
daa
jle
and
ja
shll
xchg
pop
xor
shrl
adc
pop
in
jp
int
aas
sbb
push
xor
lods
pop
outsb
arpl
test
add
fstpl
cmp
inc
movsl
pushf
ret
pop
mov
sbb
movsl
lods
xor
mov
mov
loopne
jne
cmpb
adc
mov
aad
push
daa
fdivrp
test
or
mov
rorb
jmp
jle
mov
dec
xor
cmp
sub
or
and
lds
push
scas
and
mov
pop
lock
add
in
cmp
not
cmc
add
push
inc
mov
out
jns
sub
insb
mov
xor
idivb
and
mov
negb
out
lret
or
cmc
divb
jg
xchg
jp
shlb
adc
vmaskmovdqu
shl
lock
jp
in
cmp
adc
inc
cld
pop
mov
loop
xchg
lahf
cld
push
subl
out
cwtl
ss
adc
dec
mov
jp
inc
pop
lods
shrb
adcl
xchg
mov
mov
cmp
nop
test
fstpt
mov
test
ljmp
outsl
mov
jp
scas
aam
dec
sbb
movsb
pop
mul
in
aad
or
or
cmp
out
lcall
mov
xchg
push
bound
jb
sahf
sbb
shlb
dec
testl
xchg
xlat
jp
mov
jbe
sbb
dec
add
stos
lcall
mov
sbb
xor
ret
xlat
inc
movsb
sub
jl
mov
sbb
jne
inc
adc
ss
add
jmp
sbb
int3
push
cmpb
lea
fcmovnbe
push
dec
ret
stos
push
sbb
add
sbb
xlat
jecxz
mov
xchg
negl
cmp
loope
dec
daa
rcrb
or
ss
mov
xchg
adc
or
pusha
ja
cmp
rcrl
pop
pop
pop
jo
push
or
cmp
out
sti
jnp
cwtl
cld
push
lods
cmp
mov
xor
sub
xchg
jmp
pop
inc
pushf
xlat
jo
pop
and
inc
inc
mov
jp
xchg
scas
or
mov
jmp
sub
xlat
xchg
sarb
lret
cmp
cs
sub
xchg
add
out
sbb
adc
mov
sahf
cli
jmp
rorl
pop
out
cmp
sub
out
cld
add
loopne
or
cmp
add
repnz
pop
pop
fidivs
inc
xchg
push
push
jns
xchg
es
pavgb
or
adc
add
mov
cld
mov
xlat
mov
loopne
dec
pop
cmp
xchg
in
jo
cmp
les
pusha
cmp
or
pop
jle
sub
and
das
pop
jl
jb
in
and
aaa
xchg
push
outsb
sarb
push
imulb
inc
inc
pop
add
cmp
loopne
icebp
sub
rolb
xchg
addb
in
fisubrl
or
cmp
lret
push
jnp
das
jp
ret
cmp
sbb
xchg
loop
xchg
pop
mov
pop
add
mov
sub
xcrypt-cbc
cmpsl
adc
jp
xchg
adc
bound
add
gs
lret
ss
in
fistl
popa
cld
aas
push
and
mov
int3
icebp
pop
cli
loope
int
lret
pop
jmp
aas
insb
sub
clc
xor
xchg
inc
ret
push
mov
out
adc
mov
push
xor
and
mov
mov
pusha
cmpsl
fisttpll
imul
and
sub
in
mov
dec
mov
push
addr16
js
ja
mov
inc
outsb
into
adc
cmp
adc
lahf
xchg
cmp
push
pop
pop
outsl
mov
push
aaa
dec
dec
xchg
fisubl
fdivrl
enter
bound
rclb
fsubrl
cmc
ret
adc
addr16
cmpsl
std
cmp
lret
or
shrb
and
fdivl
xlat
and
jbe
mov
add
xor
jg
pop
cmp
ja
daa
jne
inc
push
cmp
shlb
jno
outsl
mov
push
push
je
dec
xchg
cmp
mov
xchg
mov
out
imul
rolb
das
dec
pop
stc
xor
xchg
mov
xlat
xor
push
mov
push
push
push
call
dec
mov
nop
ds
jno
jmp
jl
inc
push
mov
std
push
xchg
pop
leave
in
and
pop
and
cmp
inc
xchg
in
icebp
mov
cmc
cwtl
cmpsl
xchg
mov
ds
sbb
mov
bound
or
loopne
mov
and
xchg
pop
insb
mov
into
or
dec
popa
cmpsl
in
je
arpl
or
cmpsl
int3
jp
push
les
push
pop
es
stos
popf
inc
add
or
test
mov
and
inc
hlt
cmpsl
lret
xchg
outsb
cs
addr16
cmp
pop
sahf
daa
sub
gs
xchg
and
aam
inc
pop
jo
dec
ret
jg
ja
test
push
jne
jbe
arpl
dec
xorl
test
punpckhbw
jns
xlat
ljmp
loopne
cmpsl
cmpsl
push
xor
dec
and
or
cmp
push
shlb
dec
mov
cmc
pop
das
leave
adc
fs
ror
aas
cltd
or
push
pop
daa
sub
sarb
mov
sbb
js
or
fistl
jg
ret
ljmp
sub
fbld
nop
cmc
xor
cli
push
sarb
addr16
je
adc
xchg
imul
cli
cs
or
sbbb
mov
xor
and
rorb
push
mov
loop
test
and
test
dec
data16
cmc
ja
xchg
sub
int3
mov
xor
xor
xchg
push
adc
sbb
rcrl
add
dec
xchg
jg
mov
inc
pop
jbe
push
adc
push
je
ret
mov
mov
test
cmp
jne
mov
or
dec
adc
and
in
mov
aaa
enter
xor
pop
add
and
mov
xor
xchg
dec
cwtl
paddusw
cmpl
pop
xchg
and
lret
cld
cmp
lea
jnp
addr16
enter
rcrb
fdivp
inc
repnz
xor
push
push
xchg
push
test
lock
iret
int3
xchg
shll
in
popa
insl
add
inc
pop
sbb
xchg
movsb
dec
test
xchg
lahf
add
hlt
jno
dec
pop
ljmp
push
mov
xlat
push
fadds
pop
pop
mov
shl
dec
xor
fstps
jge
js
sbb
je
dec
dec
pop
repnz
cs
dec
je
stos
mov
xchg
and
stos
push
arpl
or
lcall
jecxz
fidivrl
aad
rorl
dec
inc
aad
push
xchg
cmp
insl
loope
loop
test
mov
sub
cli
shll
mov
dec
test
repnz
pop
cmp
mulb
shll
adc
je
add
mov
xchg
test
pop
mov
dec
mov
sbb
lret
clc
xlat
xor
out
imull
daa
lret
jmp
subl
std
fwait
enter
cmpsl
mov
lods
inc
dec
adc
gs
sbb
shlb
test
pop
mov
adc
movsl
xchg
pop
in
mov
ss
and
stos
fldcw
push
cli
div
and
xchg
xchg
push
cmc
mov
xor
push
and
pop
scas
gs
in
mov
daa
mov
cmp
mov
std
cs
sbb
inc
push
dec
call
cmp
add
or
add
stos
lcall
aam
aaa
jmp
test
cmp
cmp
or
sbb
xchg
shl
cli
loop
jae
jge
test
push
pop
notb
sub
sar
pop
and
dec
inc
pop
cs
cmp
xchg
scas
cmp
cmp
and
mov
rclb
xchg
mov
and
rorb
mov
mov
stos
dec
or
dec
int3
sub
pushf
ds
adc
aad
xor
pop
inc
emms
mov
fdivl
pop
je
stc
ret
daa
js
scas
stos
add
xlat
mov
xchg
add
sbb
orl
add
fwait
xor
pop
popf
jbe
das
and
out
push
call
int
xor
ss
rcrb
pop
idiv
mov
iret
lret
cmpsl
push
xchg
sbb
adc
sahf
imul
xchg
dec
inc
icebp
mov
xchg
pop
inc
lds
fwait
loope
mov
add
fildll
aam
xchg
xchg
cli
loope
sbb
pusha
rclb
daa
pop
cmp
push
pop
xchg
mov
pusha
std
xchg
addl
mov
sub
out
ja
xor
pop
add
mov
or
stos
jbe
mov
ss
dec
lahf
les
stos
push
enter
dec
inc
decb
and
xor
adc
icebp
push
mov
adc
cmc
dec
dec
nop
xor
cmp
shl
xchg
sbb
xor
and
in
cmpsl
scas
push
fstpl
and
sahf
xorb
lods
js
adc
inc
cld
rclb
xor
inc
sti
ret
out
adc
outsl
jno
mov
inc
xchg
int3
add
inc
sbb
or
pop
je
xor
adc
jns
inc
push
cmpsb
fdivs
sarl
mov
push
mov
test
popf
and
sub
rcrb
jae
mov
notl
pusha
or
lods
inc
cltd
jecxz
out
shll
in
insb
ja
cwtl
push
pop
push
cmp
in
mov
jo
jne
mov
jl
popf
daa
xchg
pusha
sub
mov
mov
nop
jne
push
adc
add
mov
adc
pop
cmpsl
jne
ror
pcmpgtb
test
inc
ss
xchg
sbb
insb
cmp
subb
loopne
or
adc
call
mov
xchg
daa
insb
jne
dec
push
sub
or
sbb
fsubl
aam
push
in
push
ret
mov
mov
out
shl
pop
scas
iret
cwtl
mov
ret
pop
test
daa
lret
cmc
sub
aaa
adcb
int3
add
jmp
shrb
xor
xchg
insb
xchg
gs
and
or
mov
inc
inc
add
dec
xchg
xor
in
ret
adc
dec
enter
into
test
add
decl
cld
shll
test
xchg
test
arpl
pop
mov
add
xchg
push
imul
xchg
lea
pushf
cmpsb
pop
push
cmc
addr16
sbb
mov
mov
mov
ss
dec
movsl
out
pop
xchg
push
xor
push
jle
mov
std
and
and
stc
add
and
mov
push
push
push
and
and
je
insb
xchg
xchg
or
fld
add
aas
sarl
jge
sub
ret
clc
adc
xchg
add
movsl
push
push
sub
mov
cmpsl
movsl
adc
xorb
inc
push
mov
add
mov
addl
repnz
sti
addb
mov
xchg
sub
lods
push
inc
ja
jno
xor
cld
inc
pop
aam
sub
ljmp
pushf
sbb
push
rcr
fdivl
mov
aaa
push
cmp
jmp
fisubrs
push
dec
dec
pop
nop
adc
sub
lods
add
xchg
cmc
insl
xor
mov
and
into
jbe,pn
and
xchg
xchg
cmc
jo
push
pusha
sub
ss
or
movsl
lea
push
push
xor
inc
ds
mov
imul
repnz
cmp
mov
rclb
add
mov
add
dec
stc
pop
mov
stc
and
mov
xchg
loopne
push
mov
jmp
xlat
ret
push
adc
xchg
mov
in
dec
mov
aam
xchg
pop
fcoml
pavgb
and
and
mov
adc
mov
sbb
outsb
das
xchg
insb
subb
dec
add
cmc
adc
loopne
lods
sub
xchg
dec
mov
push
or
push
int
jle
fwait
movsb
xchg
imul
sbb
and
mov
mov
rcrb
lahf
test
dec
inc
repnz
sbb
loopne
call
jne
xchg
and
add
pop
fs
jecxz
and
xorl
pop
mov
into
sbb
mov
inc
adc
inc
pop
aam
and
pop
mov
bound
and
mov
dec
leave
fcompl
cmp
dec
test
rorl
ds
xchg
jmp
xor
inc
xor
cli
pop
cmpsl
mov
enter
jecxz
push
aas
nop
sbb
fisubrl
test
in
lret
cld
push
pushf
push
xchg
pop
out
dec
mov
test
and
pop
jns
int3
inc
shlb
mov
daa
lea
xlat
jns
loopne
xor
mov
ficoml
dec
in
pop
jle
decl
andl
dec
aas
cmp
insl
mov
add
add
cmc
lods
lcall
inc
sub
sbb
dec
add
stos
clc
test
icebp
mov
icebp
xor
xor
psadbw
cld
stos
add
xlat
daa
fcompl
pop
xchg
or
insl
add
inc
iret
push
xchg
push
mov
dec
dec
dec
nop
das
pop
xchg
das
xor
or
stos
movsb
xorb
ljmp
rolb
xor
ret
sbb
sahf
scas
jg
push
pop
add
cli
xchg
stc
lods
cmpsl
fiadds
push
push
scas
xchg
jge
je
movsl
mov
loopne
mov
push
les
stos
insl
in
add
fsubrs
shrb
std
xor
roll
not
sub
pop
pop
push
cmp
or
bound
inc
test
xlat
scas
cmp
int3
stos
and
push
loop
add
dec
rcr
sahf
out
add
mov
xor
dec
xchg
xchg
test
mov
mov
xchg
in
add
mov
xchg
add
and
dec
lret
fisubrs
in
add
cmp
fldt
or
cmp
cld
and
jbe
cmc
mov
movl
xor
fwait
das
mull
pop
notb
sbb
in
notb
lcall
jo
mov
pop
push
faddl
sbb
pop
cmp
and
mov
xchg
mov
push
lds
leave
clc
loop
ss
cmp
mov
data16
dec
test
xchg
add
lahf
daa
mov
mov
pop
ljmp
rorb
sub
pop
out
mov
std
lds
sahf
xchg
xorb
fstpl
mov
dec
inc
ret
cld
je
fmull
incb
add
notb
push
mov
xchg
and
pop
mov
divb
add
dec
mov
or
mov
cmpsl
xchg
dec
movsb
cmpb
or
fcompl
cld
sti
rorb
fxch
xchg
sbb
je
push
jecxz
call
xor
mov
or
xchg
in
pop
in
pop
cmp
mov
ret
rcll
lret
push
push
pop
leave
mov
pop
mov
push
dec
or
inc
pop
idivb
jmp
adc
shlb
mov
mov
pop
and
adc
int3
leave
mov
pop
mov
xchg
lret
jae
sbb
add
pusha
scas
adc
sbbb
adc
testb
ret
xor
stos
icebp
je
pop
xor
in
add
inc
out
cltd
jns
rolb
push
aam
cmc
adc
cmp
movsb
aas
mov
test
xchg
scas
add
adc
test
cld
sbb
sbb
lret
add
jecxz
fsubrl
sahf
mov
add
lock
in
mov
ret
lcall
cmp
pushf
inc
xchg
and
clc
push
sub
incl
jbe
cmp
aam
mov
stos
in
mull
sbb
ja
dec
imul
inc
mov
xor
fdivl
out
mov
loope
push
negl
add
stos
ja
scas
cmpsl
aam
pop
ret
lret
test
add
stc
test
fnstenv
mov
inc
sub
gs
and
pop
in
mov
inc
arpl
popa
aad
in
dec
sub
pop
push
xchg
out
mov
dec
jp
pop
mov
add
adc
imul
push
push
mov
mov
pop
xchg
dec
xchg
sbb
lret
inc
push
adc
and
or
les
mov
pop
insl
in
pusha
in
lret
xchg
jo
sbb
incb
stc
xor
orb
jg
leave
es
push
or
js
test
pop
add
mov
out
add
inc
stos
and
pushf
mov
add
jno
in
xchg
sbb
mov
xchg
add
data16
shrb
push
push
push
dec
icebp
int3
fildl
xchg
mov
cmpsb
mov
fiaddl
shlb
jle
push
jg
lahf
sbb
outsl
cmp
test
xchg
gs
cmp
push
mov
cld
popaw
xchg
jg
ret
adc
das
and
je
xor
xchg
jae
fldenv
pop
push
sub
fmull
pop
inc
je
push
add
pop
inc
xchg
stc
xchg
adc
push
jno
inc
mov
pop
mov
and
dec
scas
imul
sbb
inc
int
repnz
stos
xchg
add
xorb
xchg
pop
lahf
int
mov
popf
in
fstps
test
bound
pop
notb
dec
xchg
cmp
dec
test
ficoml
nop
pop
cld
loopne
dec
cmpsb
iret
pop
fsts
imul
adc
sub
mov
test
and
repz
jnp
aad
popa
mov
push
mov
push
leave
sub
pop
sbbl
sbb
push
mov
aas
mov
in
push
arpl
rcll
lods
out
mov
fwait
aaa
aam
pop
adc
cmovo
and
sub
shrb
jbe
add
daa
jmp
or
xor
rorl
cli
ja
push
push
std
pusha
push
shrl
fsubrl
dec
add
sbb
xor
outsb
xchg
jns
mov
xchg
and
push
xchg
arpl
pushf
inc
pop
repz
jae
mov
stos
cmp
xchg
mov
mov
jno
loop
dec
inc
jnp
mov
clc
cmp
lods
leave
pop
imul
or
push
xchg
sbb
into
jne
loopne
test
jmp
xchg
xor
enter
pop
xchg
mov
jmp
ja
or
leave
cmovs
push
imull
mov
or
gs
adc
int3
xchg
mov
cmpsl
lock
push
adc
pop
sub
mov
xchg
push
gs
dec
cmpsl
push
mov
testb
mov
pop
xchg
in
xor
dec
inc
inc
pop
jp
adc
add
in
dec
aaa
pop
sarb
sar
push
push
adc
mov
sub
fwait
jbe
mov
cmp
inc
gs
cmp
dec
dec
enter
out
push
jns
sub
jl
adc
stos
in
adc
jg
popa
jle
pop
hlt
push
cmpsb
nop
es
jmp
mov
pop
push
push
dec
mov
push
mov
xchg
mov
ret
xchg
rcll
jg
fbstp
push
cmpsl
cmp
lods
sbb
sbb
fsts
xchg
scas
in
jg
push
jns
hlt
mov
repz
push
sbb
push
in
nop
dec
mov
pop
mov
pop
mov
pop
push
rol
cmp
or
sub
xchg
xchg
mov
add
fbstp
xchg
cmpsl
in
adc
push
pop
lidtl
xchg
ret
notb
sahf
arpl
orb
rol
and
mov
xchg
pop
dec
sub
js
fmull
pop
into
out
mov
dec
enter
cmpb
jne
faddl
xor
push
gs
fs
sub
xchg
push
mov
mov
jecxz
call
shlb
ret
fcoml
cli
mov
outsb
sub
movsl
xor
jge
mov
pop
mov
sbb
xorl
shlb
test
dec
pop
sub
push
and
lods
push
sti
jecxz
dec
xchg
ss
push
mov
pop
mov
repz
pop
mov
imul
adc
jmp
inc
push
mov
mov
push
movsb
cmp
and
push
sbb
push
iret
mov
or
cmp
pop
jle
das
pop
pop
mov
dec
xchg
lea
jge
fsubrl
mov
repz
out
xchg
xchg
jg
loop
fsubl
add
loopne
xchg
pop
movsl
sti
dec
jl
lock
pop
and
cs
stos
inc
cwtl
mulb
in
mov
out
xchg
imul
mov
or
push
fildll
ds
adc
inc
push
lds
je
dec
cmc
aaa
xchg
jb
inc
subb
clc
mov
out
sbb
es
decb
xchg
iret
in
js
xchg
xchg
inc
add
ja
mov
jne
mov
inc
push
xor
lea
cmp
xchg
stos
sub
jno
dec
ss
lods
sbb
std
lahf
cs
mov
ret
sarb
jmp
lds
fcmovbe
push
inc
in
mov
add
push
icebp
mov
xchg
shrl
shrl
dec
clc
iret
test
cmpsb
jno
popa
mov
idiv
xchg
inc
je
rolb
xchg
fisubrl
ret
lea
inc
cmp
out
pop
sub
mov
notl
mov
add
loopne
daa
xchg
in
inc
out
repnz
mov
xchg
or
data16
aaa
dec
sbb
jg,pn
push
hlt
fwait
fwait
mov
insl
int
mov
jp
jl
cmp
iret
in
dec
test
inc
add
xchg
ds
jne
cmpsl
pop
and
mov
das
es
sbb
daa
dec
arpl
mov
mov
inc
pop
jbe
sub
and
mov
repz
xor
pop
jo
push
add
lods
and
icebp
aam
mov
lock
in
pop
not
jmp
xchg
mov
sbb
je
aam
cmc
mov
clc
add
es
cmpsl
ret
nop
sub
arpl
cmpsb
jbe
xchg
or
movsb
in
ljmp
les
mov
push
push
not
jmp
sbb
shrb
sbb
out
sbb
inc
xor
and
loopne
bound
mov
jle
or
ror
xchg
pop
notb
push
sbb
add
mov
inc
ds
and
ret
out
rorb
ficompl
cmpsb
or
push
and
sub
arpl
mov
insb
lret
jne
shlb
inc
gs
test
clc
mov
cmp
mov
or
movsb
js
push
loop
fcomps
push
xlat
push
push
cmpl
int3
jo
notl
fstpl
leave
jbe
push
mov
aad
cld
das
add
lods
cwtl
push
test
jmp
jmp
lods
cmpsl
xor
nop
lock
push
push
push
test
xchg
pop
xchg
add
imul
or
pop
inc
jnp
ljmp
out
mov
xor
mov
mov
cld
push
and
xchg
xchg
adc
dec
aam
mov
loopne
add
jbe
aas
jmp
cmpsb
insl
dec
jbe
jns
pop
fs
mov
std
lods
pop
jge
pushf
repnz
sbb
sub
and
jbe
ds
jae
popa
xor
mov
jl
xorb
xchg
and
dec
xlat
fwait
push
pop
rolb
and
lret
scas
popl
and
stos
inc
sub
add
enter
and
aam
adc
pop
loope
and
subl
add
xor
int3
aam
fwait
mov
hlt
rolb
incb
and
sbb
jno
aaa
lock
cwtl
bound
adc
adc
sub
cld
xor
gs
rorb
lods
movl
scas
aam
cmp
and
cltd
loop
adc
hlt
mov
mov
aam
xor
fnstcw
rclb
jmp
inc
aaa
xchg
gs
or
lahf
ret
sub
sub
movsb
pop
sub
push
mov
xor
mov
rol
dec
cld
mov
push
xchg
pop
cmpsl
incl
icebp
inc
testb
mov
hlt
add
movl
lahf
fs
outsb
lods
stos
push
add
xor
mov
mov
idivb
push
dec
xor
negb
push
inc
or
sbb
jo
mov
loopne
in
push
mul
xchg
sub
outsl
dec
mov
xchg
jb
pop
add
jbe
sub
xor
dec
dec
call
sbb
pop
repnz
sarb
push
push
mov
aaa
xor
add
inc
addr16
cld
jno
pop
cwtl
fwait
pop
sub
adc
shll
xlat
clc
mov
fsubrs
negl
mov
push
fdivrs
test
adc
inc
hlt
cltd
push
push
stos
loopne
pop
xchg
and
dec
movsb
inc
dec
jmp
mov
aad
int3
cmp
outsl
xchg
stc
nop
adc
in
and
mov
mov
adc
cld
sub
or
cmp
pop
mov
add
push
loopne
pop
cwtl
mov
or
add
adc
in
pop
cwtl
jg
and
call
jge
push
inc
sbb
xchg
mov
adc
xchg
add
sbb
int3
pop
push
fnstcw
or
or
pop
faddl
dec
imul
xchg
jbe
das
arpl
into
rcrb
and
mov
cmp
jp
push
call
std
jecxz
out
mov
loop
mov
mov
inc
adc
jg
ja
xchg
mov
dec
in
dec
pushf
loope
pop
sbb
add
ret
jle
mov
xchg
mov
push
mov
mov
fcompl
sub
test
in
pop
xlat
shl
pop
ja
jo
xor
notb
fdivl
std
jnp
pusha
xchg
fadds
and
xor
push
push
pop
xchg
xchg
test
inc
test
insb
loope
pop
leave
stos
repz
mov
mov
and
mov
std
cmp
dec
cltd
mov
mov
rclb
das
rorb
add
inc
pop
cld
add
fstpt
and
add
mov
mov
mov
sbb
jno
mov
xchg
push
cltd
cmp
sub
mov
sub
dec
imul
ror
outsb
push
or
in
lods
mov
dec
pop
dec
cld
pop
mov
repnz
in
mov
lds
add
jge
or
cmp
xorl
cwtl
fisubrl
xchg
or
and
inc
fsubl
pop
or
ja
adc
xor
clc
jg
jne
cmpsb
lods
mov
pop
ror
sub
mov
jb
pop
daa
aam
mov
aaa
mov
inc
into
push
dec
mov
cli
loop
out
mov
cwtl
inc
inc
sub
in
mov
inc
mov
mov
in
adc
dec
cltd
aam
inc
rcrb
inc
mov
and
out
pop
pop
dec
cmpsl
shll
mov
cmp
jp
imul
call
and
stos
jne
fisttpll
adc
pop
sub
cld
adcb
daa
mov
jecxz
and
testl
dec
xorb
push
xchg
insb
sbb
scas
xlat
test
daa
adc
lock
scas
aam
lahf
shrb
mov
mov
cld
pushf
fiaddl
cmp
sub
jno
xchg
rcll
pop
xor
bound
aad
cs
out
insb
dec
call
adc
xor
dec
in
sub
negb
enter
mov
in
add
rcll
das
pop
or
lcall
scas
nop
imul
mov
push
aaa
rcrb
jne
xchg
mov
xchg
jl
mov
xchg
push
cmp
insb
iret
in
cs
mov
xchg
or
xchg
xor
lahf
mov
mov
add
pop
andl
pop
pop
andb
ret
rol
jbe
xchg
in
lock
push
adc
dec
mov
dec
xchg
out
gs
cltd
mov
jnp
fmuls
add
outsb
push
aaa
mov
js
dec
inc
cmp
mov
pop
cli
pop
sbb
and
gs
fs
pop
sub
dec
mov
push
dec
mov
jecxz
mov
ja
xchg
fisubs
push
data16
inc
push
sbb
adc
daa
shll
jbe
dec
pop
cld
sub
fstl
lods
dec
push
jo
ja
mov
or
jecxz
or
es
pop
icebp
sbb
lea
lahf
add
jbe
aam
push
repz
stos
push
pop
jmp
push
xchg
sub
and
pop
or
mov
mov
jle
or
int
addr16
push
sbb
jle
int
aas
or
movsb
mov
jno
popf
xor
shlb
xchg
mov
or
sbb
mov
pop
or
int3
sbb
dec
mov
lcall
cli
add
in
call
fisubrs
fdivrl
xchg
xchg
add
and
lods
popa
adc
mov
fdivl
lock
pop
fcompl
add
xor
loopne
dec
dec
inc
lcall
jmp
jg
inc
xor
aaa
jae
xor
inc
add
add
cltd
or
hlt
xor
enter
push
xlat
cmpsb
jns
mov
add
lcall
pop
xchg
aaa
sub
xor
in
inc
gs
mov
cmp
cmp
add
ret
icebp
cs
aaa
or
std
and
fistpll
imul
data16
pop
mov
in
jbe
inc
ficoms
mov
push
sub
mov
sub
icebp
daa
pop
xchg
inc
test
andl
mov
les
cs
jbe
decl
idiv
mov
mov
or
xchg
push
dec
adc
pusha
inc
dec
adc
into
jle
pop
add
and
pop
rclb
xor
scas
xchg
out
loopne
outsb
dec
dec
loopne
add
popf
cmp
lds
leave
les
mul
lret
dec
push
data16
shrl
xlat
loopne
rclb
jecxz
cmpsb
cmp
outsb
xchg
dec
mov
pop
xor
mov
sarb
xchg
xchg
and
add
mov
fisubrl
and
jecxz
bound
jbe
popl
rorb
cs
icebp
ds
pop
xchg
adc
into
sti
adcl
pusha
mov
cmp
jb
pop
cmp
sub
xchg
pop
mov
and
fadds
test
cmp
sub
out
mov
jbe
jne
bound
xchg
and
inc
int
mov
rolb
inc
call
aam
push
and
fisttps
jg
loop
dec
dec
jbe
stos
pop
inc
inc
addr16
or
mov
xchg
sbb
push
add
xchg
xchg
int3
and
adc
mov
xor
dec
cmpsl
xchg
jb
inc
xchg
lea
aaa
add
fdivp
loop
or
or
add
add
lahf
mov
jo
mov
pop
jle
outsl
pop
or
aad
lods
rorl
or
out
and
xchg
testl
xor
pop
dec
jbe
pusha
rcrb
inc
lods
andl
addr16
cmpsl
fstl
jns
and
xchg
adc
xor
adc
ds
cmpsb
pop
stc
pop
sbb
xchg
mov
je
push
mov
in
pushf
fnsave
mov
dec
aam
cmp
xchg
sbb
ret
sti
add
pushf
sub
push
lods
dec
add
hlt
xor
cmpsl
mov
mov
xchg
aaa
dec
stc
orb
rorl
inc
push
lea
adc
sahf
cmp
jl
enter
loopne
mov
in
test
or
mov
push
adcb
stc
xchg
mov
sbb
idivl
test
movsb
sub
stos
lods
xlat
add
arpl
rorb
cmp
xor
inc
adc
fisubl
aaa
push
xor
stc
push
arpl
into
jbe
ret
mov
inc
int
ret
daa
push
inc
dec
sbb
xchg
dec
sub
inc
jecxz
jbe
add
clc
cmp
rcr
les
loopne
aad
pop
add
sbb
jp
hlt
pop
pop
xchg
fcoms
ds
roll
sbb
jecxz
pop
std
mov
jns
dec
loope
insb
into
xchg
xchg
movsb
divl
scas
dec
nop
pop
mov
inc
in
mov
xchg
and
mov
testb
jmp
in
adc
cli
xchg
xchg
pop
xor
movsb
mov
enter
sub
mov
cmpsb
mov
jne
std
or
data16
daa
nop
pmaxub
sbb
and
push
aad
adc
and
cmc
cmp
leave
push
and
sarb
in
pop
dec
cltd
test
add
ret
addps
add
cmp
cmc
loopne
and
lods
pop
lcall
adc
xchg
pop
mov
stos
in
dec
mulb
hlt
add
xchg
lret
push
mov
push
faddl
mov
dec
jno
xchg
adc
pop
jns
pop
inc
cltd
lcall
pop
lods
fsubrl
dec
sahf
inc
int3
pop
lds
gs
sbb
xor
dec
pop
jle
and
lcall
and
iret
loope
fucomi
push
push
push
mov
notb
cltd
nop
add
mov
lret
frstor
add
mov
jne
jbe
pop
fistl
adcb
and
je
jo
jae
dec
cmc
xchg
popa
fstps
andb
xchg
test
lods
test
ss
add
jecxz
andl
imul
mov
add
mov
out
nop
in
add
xlat
xchg
lret
mov
movsl
out
lcall
rorl
lock
fst
cmp
into
add
sub
lea
cmp
les
sbb
xchg
cmpsl
jecxz
shl
xlat
clc
sub
data16
and
test
andb
popa
lcall
and
test
jae
pusha
out
outsl
fdivl
push
fwait
mov
xor
sbb
and
add
add
dec
inc
repnz
mov
add
cmp
xlat
rorb
xor
sbb
in
pusha
dec
mov
je
test
dec
sbb
scas
adc
enter
jp
pusha
jle
das
cmpsb
mov
hlt
dec
sub
shrb
pop
int3
push
jbe
add
jg
in
push
adc
xor
pop
mov
aaa
or
fiaddl
mov
xchg
mov
int3
and
aaa
fmuls
and
movsl
mov
adc
cld
adc
sbb
sbb
mov
cmc
subb
sub
dec
and
pushl
mov
ds
je
addb
cmc
pop
jbe
add
sbb
jne
notl
inc
aam
xchg
and
mov
xchg
inc
out
out
cmpb
inc
mov
inc
jo
cmc
js
pusha
push
mov
mov
cmpsb
xchg
addr16
dec
rolb
out
repz
insl
rcl
aad
sahf
and
cmc
push
mov
push
push
ss
add
and
jle
mov
add
sti
iret
jg
and
cmpsl
xchg
push
mul
jle
dec
pop
mov
sbb
lret
and
gs
mov
adc
in
jmp
cmp
hlt
pmaxsw
mov
or
mov
lahf
push
inc
cmc
sub
adc
push
pop
pop
std
jge
push
popa
add
push
out
jle
icebp
test
xchg
into
call
dec
in
out
cmp
cli
sbb
xchg
stos
fsubrs
and
pop
xor
add
adc
jnp
cld
jmp
add
adc
xchg
mov
mov
inc
sbb
push
in
push
lahf
js
push
or
stos
mov
gs
test
outsl
nop
sbb
add
jnp
pop
xchg
xchg
or
movl
inc
pop
xchg
mov
jbe
stos
xor
rolb
dec
and
adc
ret
mov
out
add
inc
sub
add
xchg
test
movsb
mov
xor
push
adc
mov
mov
mov
and
xchg
mov
mov
scas
inc
test
cmpsl
or
pop
enter
xchg
jmp
jl
and
sub
data16
pop
insb
or
lcall
lods
adc
or
add
xchg
xlat
mov
pop
pop
xchg
nop
fistpll
in
xlat
and
and
mov
xchg
cmpsl
push
mov
cwtl
mov
adc
fiadds
test
xchg
fmull
push
dec
imulb
jp
fsts
lock
push
ds
sbb
mov
pop
push
dec
int
repz
xchg
call
lret
adc
xor
mov
div
test
ja
or
pop
xchg
jg
test
ret
xor
int3
repnz
xchg
and
enter
xchg
loop
repz
cwtl
jp
insb
negb
jle
inc
add
pop
cmp
test
int
push
and
fs
dec
in
mov
xchg
jne
sahf
fidivl
cmp
push
leave
lret
test
sbb
sub
and
lea
mov
xchg
pop
sbb
into
ds
xchg
iret
xchg
sub
mov
xlat
lds
pop
fsubp
xchg
pop
mov
adc
stos
div
cld
fldenv
push
rolb
jae
add
sti
shrl
rorb
adc
iret
jp
push
sar
lret
pop
xchg
cltd
fiadds
jb
xor
outsb
in
call
mull
faddp
idiv
mov
shrl
pop
jb,pt
mov
inc
popa
cmp
or
call
std
add
push
in
cmp
pop
ja
test
das
in
push
mov
inc
jbe
push
cli
mov
and
sbb
mov
aam
aam
lock
mov
pop
add
fsubp
hlt
add
or
inc
lcall
fsubrs
xchg
mov
ret
sub
mov
and
jae
or
inc
cmp
mov
ret
in
iret
and
sub
mov
das
xchg
sbb
sti
imul
test
pop
enter
sbbl
sbb
test
sbb
cmp
leave
mov
cmp
add
mov
dec
sbbl
jne
adc
sbb
dec
sbb
lret
ja
push
lods
fimuls
mov
mov
jo
addr16
adc
push
rorl
movsl
ja
out
inc
cmp
in
sub
cli
notb
test
mov
shll
adc
out
icebp
arpl
push
push
lcall
jle
cltd
jp
xor
cmp
idivl
jbe
fcoml
aas
adc
adc
aas
push
sbb
pop
xchg
sub
movsb
xor
push
pushf
pushf
je
icebp
int3
sbb
stc
shlb
lea
sub
fcoml
mov
dec
ficompl
mov
test
dec
hlt
xchg
add
jns
inc
or
stos
or
inc
xchg
test
lea
jl
and
mov
hlt
adc
or
cmpl
and
mov
pop
and
xchg
repz
scas
push
push
movsl
jmp
int3
fcoms
xchg
mov
popa
jg
in
jnp
xor
sub
push
cmc
lret
sbb
jno
jbe
jl
xchg
xchg
in
sbb
in
in
cmp
push
fiaddl
data16
adc
xchg
fldcw
dec
cmp
adc
xchg
nop
jg
nop
jg
sbb
test
movq
outsb
push
outsl
xchg
or
mov
mov
setbe
xchg
cmp
push
cmp
and
or
ljmp
xor
and
cmp
mov
insb
dec
xchg
jmp
inc
xchg
sbb
and
xchg
and
jmp
call
sbb
sub
jbe
rolb
sbb
xchg
push
push
or
and
sbb
mov
push
xchg
ja
push
in
out
inc
shrb
add
pop
xchg
adc
hlt
xchg
inc
jmp
mov
xor
dec
adc
pop
repnz
cs
adc
dec
es
pop
push
popa
xor
sub
add
pop
frstor
lret
dec
imul
les
outsb
jno
sarb
movsb
sahf
or
subb
movb
add
mov
mov
jl
mov
mov
cmc
mov
add
and
inc
rclb
mov
aam
push
xchg
sti
flds
mov
or
sarl
and
sub
rclb
jmp
push
cld
xchg
push
and
pop
inc
js
xchg
xor
jmp
xchg
jb
and
adc
sbb
gs
xchg
pop
mov
adc
fistpll
xchg
xchg
shrd
gs
stos
sbb
dec
in
pop
add
and
popa
xchg
inc
repnz
jg
scas
and
pop
or
mov
movsl
mov
lcall
xchg
dec
in
imul
test
mov
shll
push
mov
inc
and
popl
aam
daa
ret
inc
and
mov
and
in
cmp
shl
adc
jg
dec
data16
jp
into
jb
test
mov
test
dec
mov
sbb
cmpsl
add
xchg
or
mov
call
sbb
subl
or
imul
xchg
jo
mov
stos
and
ret
add
mov
add
mov
cmp
mov
aad
sbb
lock
xchg
inc
shlb
mov
cmp
clc
xchg
arpl
mov
movsl
push
cli
std
adc
ret
push
sbb
inc
stc
adc
cmp
popf
js
lret
sub
mov
fdivl
hlt
xor
lock
sbb
pop
push
in
cmpsb
xchg
arpl
or
dec
mov
jno
jmp
sbb
sub
ja
sbb
les
push
in
mov
mov
adc
hlt
lock
out
scas
shl
cmp
rcr
pop
or
or
pop
jbe
xchg
cmp
mov
lea
arpl
dec
int
popf
data16
xor
repnz
stos
repz
jmp
mov
inc
cmp
add
fucom
inc
push
mov
cmp
cld
inc
mul
push
les
sub
inc
inc
subl
outsl
xor
scas
stos
cmp
sahf
mov
aam
imul
xchg
adc
sub
aas
sub
dec
enter
push
or
jne
hlt
or
setle
jb
and
mov
clc
sbb
stos
fs
in
pusha
push
movsb
jmp
push
outsl
adc
push
xchg
pop
push
aaa
mov
jb
xor
mov
inc
jl
mulb
pop
cs
les
pop
mov
pop
fwait
in
shll
push
insl
xchg
push
stc
fwait
inc
mov
sub
fcoml
daa
sub
syscall
cwtl
stos
sub
faddl
mov
cltd
in
in
adc
inc
xchg
inc
lock
sarl
xor
sti
test
lock
pop
fs
pop
les
adc
in
sbb
mov
stos
stos
push
adc
and
add
and
lods
push
or
and
push
and
inc
xchg
insl
pop
leave
mov
xlat
sub
hlt
mov
negb
data16
add
add
cmovge
shrl
gs
pusha
jb
lcall
insl
aaa
imul
mov
push
and
lahf
movsl
lahf
out
incl
cmp
fiadds
mov
cld
xchg
outsb
es
idiv
pop
mull
dec
mov
add
aad
aaa
and
mov
push
ret
outsb
fs
mov
iret
jecxz
not
sub
and
add
iret
setbe
notb
jmp
jbe
arpl
cmp
popa
incl
inc
movsl
hlt
xchg
jecxz
cmp
aaa
push
lods
add
repnz
lret
movsb
mulb
aad
and
xor
dec
mov
jge
incl
xchg
sub
push
popa
adc
jbe
dec
adc
nop
cli
push
xchg
xor
adc
dec
lret
jmp
pop
jmp
sar
ljmp
mov
mov
jmp
lock
jns
adc
pop
scas
pop
shlb
xchg
in
jle
xchg
xlat
enter
cli
lret
lahf
xchg
dec
aaa
push
sbb
outsb
jbe
jecxz
xchg
jbe
aaa
or
dec
aaa
push
xchg
stos
data16
dec
mov
cld
or
je
inc
cld
mov
mov
or
in
and
outsb
xchg
cmp
or
fldcw
les
lcall
push
lahf
adc
xor
pop
addr16
repz
cmp
test
cmc
fstpl
ja
test
push
sbb
mov
add
pusha
xchg
cmp
lret
jecxz
and
or
xchg
arpl
pop
adc
mov
inc
mov
push
jp
jno
pop
pop
mov
addb
cmc
xlat
mov
loop
jnp
lahf
bound
xchg
lods
cmpsl
adc
mov
sahf
mov
vpslld
loop
mov
addr16
and
jle
sahf
add
mov
sbb
mov
aaa
and
and
lret
mov
mov
lea
int
mov
jbe,pt
inc
aad
cmc
and
lea
inc
and
dec
aaa
and
repnz
and
xchg
imul
cmp
sub
aaa
outsl
push
repnz
ja
jns
int
mov
imul
and
push
mov
aas
mov
xchg
rcr
fwait
iret
fdivr
cli
call
rcrb
gs
mov
mov
add
mov
dec
pushf
and
inc
jbe
sub
push
mov
emms
les
push
dec
insl
mov
ja
adc
cmp
ss
dec
sbb
sub
xchg
or
jle
push
push
xchg
mov
out
jle
movl
mov
push
rorb
cmpsl
jle
rcl
fisubl
dec
adc
out
cmc
das
xchg
dec
mov
dec
sub
pusha
xchg
out
arpl
sub
int3
dec
mov
arpl
mov
mov
clc
out
fsubrs
in
cltd
shll
aaa
fcoml
in
xchg
stos
add
or
mov
mov
aad
and
pop
mov
push
aad
inc
jg
xor
push
cmp
and
pop
push
push
push
dec
lds
imull
jg
filds
sub
mov
scas
xchg
fwait
and
mov
xchg
pushf
dec
mov
pop
xchg
sub
mov
add
test
mov
mov
inc
lea
adc
in
sbb
test
jne
cmc
into
mov
incl
daa
mull
repnz
jbe
rolb
ja
testb
xchg
das
or
sbb
mov
cmpsl
lret
idivl
mov
cmpsb
xlat
dec
movsl
push
and
addb
and
lret
push
testb
pop
daa
notl
xchg
daa
adc
or
cmc
lret
add
jp
outsb
pop
and
jns
pushw
leave
pop
pop
add
pop
daa
daa
imull
ss
lea
pop
xchg
pop
sub
not
push
mov
push
mull
daa
mov
pop
push
cltd
xlat
xlat
push
divl
daa
push
pop
dec
divl
xor
push
adc
aam
ja
sahf
xchg
jnp
idivl
jne
divl
test
and
sti
push
daa
imul
aaa
sbb
pop
ja
mov
xchg
das
xchg
adcl
mov
inc
cmpsb
testl
jbe
jnp
push
inc
mov
cmp
xor
adc
cs
xchg
xchg
xchg
xchg
push
testl
xchg
xchg
add
hlt
es
jne
or
ljmp
fidivl
adcb
inc
xor
mov
push
push
mull
pop
decb
jne
es
mov
inc
daa
testl
and
ds
aaa
icebp
xchg
ja
divl
inc
add
inc
je
mov
xchg
mull
dec
in
mov
dec
aaa
push
add
and
addr16
push
push
push
test
notl
inc
mov
mov
xor
testl
mov
push
adc
pop
daa
ss
test
ja
add
xchg
xorl
sbb
push
xor
ja
add
les
xchg
and
dec
in
test
test
push
and
hlt
andl
dec
add
cmpsb
iret
hlt
xor
mov
pop
dec
jbe
xor
daa
arpl
adc
xchg
je
test
add
xor
add
and
push
inc
xchg
xor
push
push
mov
gs
cmc
inc
jne
cld
sub
popf
add
sub
mov
popa
out
dec
shlb
adc
pop
inc
cld
adc
jl
loopne
sbb
shrl
out
sarl
jne
sbb
dec
loope
inc
daa
sub
fidivs
cs
adc
mulb
out
mov
jbe
movsb
sub
jmp
dec
xchg
insb
insb
mov
xchg
adc
xchg
lds
inc
outsb
mov
cmp
test
adc
mov
xchg
xor
rcll
sub
dec
sbb
cmovbe
pop
mov
mov
vmwrite
push
std
cmp
add
dec
test
or
mov
jbe
stos
fwait
rorb
ja
add
enter
push
jmp
sahf
add
mov
push
cmp
jo
je
cmpsl
push
dec
mov
push
or
nop
fsubp
mov
mov
mov
subl
mov
mov
in
div
out
sbb
cmp
mov
cmp
aaa
cli
in
fsubrs
xor
and
mov
fcmovbe
incb
push
pop
and
mov
cmc
mov
push
inc
int3
inc
dec
adc
or
sbb
sarb
gs
pusha
xor
movsb
mov
loopne
jbe
xchg
jg
je
js
dec
and
dec
int3
inc
fisttpl
xchg
jl
push
inc
popa
sbb
iret
dec
cmp
adc
and
out
jg
and
adc
das
cmc
or
cli
popf
push
aas
aam
int3
sub
cmp
mov
lret
sub
cmpsl
mov
pop
out
stc
outsb
call
or
mov
imul
pop
call
xor
mov
xchg
jmp
dec
push
lods
and
cmp
fisubs
inc
es
pop
and
pop
add
adc
xchg
xlat
mov
jle
mov
inc
add
sbb
scas
cld
mov
or
mov
imul
loope
movsb
mov
xor
pop
xor
mov
push
cmp
cltd
mov
fwait
lock
or
repnz
cmp
pop
add
xor
inc
std
dec
sub
add
and
sub
into
cld
sbb
in
rorb
gs
xor
jecxz
dec
xor
outsb
leave
xchg
test
xchg
pop
out
out
sarb
xchg
dec
mov
adc
faddl
lock
pop
push
xchg
sarl
loopne
outsb
aam
jg
cmp
les
int3
dec
pop
xchg
lahf
sahf
xlat
adc
jb
push
xor
mov
push
sti
test
clc
cs
std
dec
inc
ljmp
mov
sbbl
xchg
xchg
add
test
inc
pop
sbbl
or
lock
lods
leave
loop
mov
sub
xor
test
aam
and
movsb
fbstp
pop
adc
popf
mov
push
jb
pop
in
dec
jne
adc
cmpsb
movsb
insl
mov
mov
push
or
dec
add
pop
dec
leave
sbb
ljmp
mov
testl
clc
jp
xchg
cmp
xchg
incl
push
or
jne
loopne
lea
cmpsb
pop
lea
adc
pop
adc
xlat
test
pop
xor
cmp
sbb
jae
and
add
daa
outsb
in
ja
dec
sbb
in
cmp
inc
test
push
push
jns
test
xchg
xchg
loope
adc
imul
rcr
mov
jns
xchg
push
dec
and
pop
aam
xlat
cmp
pushfw
hlt
pop
xchg
movsl
fisttps
add
es
out
mov
pop
jae
xchg
sub
cwtl
std
sahf
xchg
call
mov
insl
sarl
dec
and
pusha
mov
dec
add
pop
and
scas
aas
sbb
add
fdivrl
out
add
mov
ljmp
in
mov
sbb
mov
loopne
push
cmc
dec
in
dec
call
inc
sbb
or
fnstsw
imul
in
movb
sahf
scas
sbb
or
pop
clc
decl
ret
gs
jl
imul
nop
jle
sbb
das
inc
xchg
mov
and
pop
stos
xchg
fnstcw
add
xchg
in
mov
sub
ja
pop
or
cltd
cwtl
jl
stc
and
add
xchg
jge
aam
or
mov
imul
adc
mov
jbe
xor
xor
shrl
cwtl
sbb
dec
adc
push
pop
fsubrl
push
push
decl
sbb
adc
push
cmp
cld
xchg
out
mov
lret
cld
in
lcall
mov
bound
in
xchg
cmp
mov
sub
and
mov
pushf
aas
mov
xor
lods
xchg
push
xchg
and
xchg
cmp
mov
jne
jbe
cmp
cmpsb
cld
setbe
jno
sbb
aaa
xchg
lock
imull
pop
sub
sti
cmp
mov
jo
inc
jp
xor
in
mov
jno
inc
dec
adc
orl
and
lahf
mov
adc
out
mov
insb
scas
jg
and
mov
or
xchg
pop
loope
faddl
divb
cmp
enter
scas
aaa
repnz
sarb
cmp
pop
xchg
mov
cmp
outsl
inc
repnz
scas
or
adc
mov
or
cmp
add
jbe
push
jbe
sahf
mov
stc
outsb
dec
clc
adc
inc
add
test
mov
cmp
fstl
mov
mov
lcall
push
repnz
sub
or
imul
in
mov
movsl
xchg
sbb
loopne
adc
into
aas
xor
dec
pop
mov
push
imul
xor
push
out
imul
cli
lock
mov
add
cmp
aam
sbbb
pop
rcll
mov
push
daa
cmp
xlat
adc
dec
lods
mov
sub
inc
negl
inc
movsl
sbb
mov
loope
inc
cmc
pushf
shrl
mov
repz
aas
lea
lret
std
rorl
daa
scas
push
xlat
adc
push
xchg
inc
push
pop
xchg
loopne
dec
data16
fs
push
xor
inc
jl
outsb
movsb
std
sub
dec
xor
testl
movsb
xor
inc
int
mov
push
pop
sbb
sub
addr16
mov
adc
add
adc
inc
shlb
ret
cltd
faddl
int
test
add
mov
xchg
fdivs
pop
or
ds
mov
mov
imul
jp
xor
xor
data16
fcoms
icebp
pop
popf
cmp
int
add
add
xchg
into
roll
push
sub
mov
ss
stos
push
fwait
and
call
fs
mov
and
adc
xlat
push
sti
push
dec
add
stos
movsl
pop
aaa
adc
or
cmp
testl
ja
cmp
inc
das
inc
cmc
lret
mov
imul
mov
mov
xchg
jmp
bound
fs
xchg
leave
popa
and
test
sub
dec
fisttps
xchg
ds
jge
adc
hlt
sahf
jecxz
int
mov
rcr
mov
xchg
mov
mov
cmp
mov
adc
sbb
ja
rclb
cld
xchg
push
and
sahf
cmp
or
cmp
gs
and
dec
mov
test
xchg
and
cmp
je
subb
sub
xchg
idiv
subb
imul
inc
mov
mov
mov
dec
and
adc
divb
cld
std
and
outsb
pushf
pop
mov
sbb
outsb
jb
lods
xchg
outsb
leave
add
sub
dec
call
mov
mov
mov
adc
adc
sbb
sbbl
sbb
xchg
cmp
addl
mov
mov
push
xchg
sti
or
out
mov
pop
xchg
push
test
mull
jle
outsb
mov
test
xchg
movsl
and
inc
fisttpll
and
loope
cwtl
aaa
std
adc
xor
bound
or
jno
mov
add
sub
cmp
cmp
jle
cmp
ja
aam
fisttpl
inc
mull
bnd
sbb
jb
testl
popa
ret
test
push
les
stc
sub
popa
fstpt
cmpsl
popa
cld
addr16
leave
mov
int
push
setns
sarl
and
mov
dec
xchg
lcall
hlt
adc
xchg
dec
adc
lea
xchg
popf
call
arpl
jg
shlb
repz
icebp
ret
add
inc
mov
adc
xchg
push
in
in
int
jge
cmp
rcrb
mov
dec
and
mov
je
pop
test
mov
ss
inc
test
adc
and
push
mov
aam
mov
jae
mov
out
sti
xor
call
push
jnp
sub
mov
xchg
mov
cmp
pop
shll
sub
pop
icebp
pop
in
rcrb
popf
cli
rol
jmp
ljmp
add
mov
ret
pop
and
cmpsl
lret
and
jg
dec
or
push
out
loopne
pop
jbe
add
and
sbb
bound
mov
add
arpl
rclb
scas
cltd
imul
adc
scas
lds
dec
cmc
insb
adc
dec
xor
aas
add
mov
adc
sbb
bound
and
fnstenv
xchg
mov
push
lock
mov
icebp
mov
hlt
add
adc
mov
mov
aam
je
sbb
cli
out
dec
jecxz
imul
fidivs
xor
sub
aaa
lds
dec
shll
loopne
mov
push
pop
icebp
ja
pop
jae
pop
mov
and
and
sahf
add
enter
xchg
pusha
cmp
andl
inc
sbb
cli
dec
out
sub
jp
sbb
jb
cmpsl
scas
sbb
mov
mov
lahf
lcall
dec
push
add
call
stos
xchg
mov
out
fisubrl
idivl
xor
adc
mov
shl
int3
stc
pop
push
mov
int3
mov
dec
nop
not
xchg
xchg
inc
or
inc
cmc
mov
call
and
dec
mov
rclb
mov
push
jl
and
dec
sbb
aam
mov
rclb
cld
and
je
aaa
sub
ret
daa
adcl
push
daa
xchg
cltd
es
ffree
orb
cmpsl
cmpsl
pop
pop
sbb
jbe
jns
ret
xchg
mov
clc
pop
std
cltd
inc
in
fwait
call
dec
xchg
ret
inc
ret
mov
or
inc
movsl
and
inc
aam
mov
out
mov
pushf
das
sub
dec
jge
cwtl
mov
push
imull
enter
mov
mulb
sbb
dec
add
lret
jbe
xchg
cmpsl
jne
movsl
xor
sbb
push
pop
enter
add
in
add
je
xor
dec
pushf
and
push
cmc
push
pop
dec
mov
gs
xchg
mov
mov
or
pop
xchg
inc
ss
aam
mov
jg
and
adc
sbb
adc
divb
jmp
popa
push
mov
add
xchg
mov
mov
jnp
jecxz
mov
mov
mov
inc
jmp
ja
lahf
lret
mov
inc
adc
pop
fidivrl
loop
sub
sub
pushf
adc
cmp
xor
add
xchg
iret
sub
xlat
fsubl
xchg
test
sub
mov
daa
mov
pop
adcb
and
and
mov
lret
inc
jbe
sarb
imul
dec
jge
inc
lock
push
int3
mov
mov
sbb
mov
mov
jecxz
in
jb
and
mov
add
lds
jae
sub
cmpsl
pop
mov
pop
test
stos
int
outsl
imul
mov
fnstsw
das
setbe
xor
push
icebp
push
mov
sub
lret
sbb
out
xchg
pop
dec
inc
pop
mov
xchg
adc
xchg
rcr
in
dec
and
pop
adcb
xchg
in
xor
mov
xor
xchg
jno
int3
sbb
cmp
xchg
faddl
outsb
push
dec
ret
lahf
int
xchg
cmpsb
ret
icebp
sbb
iret
outsl
lret
shlb
loope
dec
aaa
std
inc
or
cmc
cmp
loop
ljmp
fwait
lret
push
xor
adc
mov
xchg
aam
pop
outsb
cld
pop
ss
movsb
xchg
sti
loope
push
xchg
ja
dec
inc
push
cmpsb
xor
lcall
cwtl
mov
imul
sub
mov
cmp
add
dec
test
leave
fistps
inc
or
jmp
sbb
dec
mov
or
push
cmc
aaa
adc
lret
icebp
xor
mov
inc
push
jo
jge
stos
inc
sub
rorb
repnz
dec
cmp
adc
xchg
or
inc
popa
sti
mov
imul
int
inc
xor
sbb
in
pop
or
frstor
aaa
bound
div
push
pop
or
push
dec
mov
jae
lret
add
mov
xchg
mov
mov
mov
stos
insb
dec
sub
push
sub
aaa
mov
call
cmpsl
add
sbb
rcr
pop
pop
je
call
gs
stos
push
inc
cmp
aam
pop
test
cmp
pop
xor
ret
xor
rcl
fistl
jno
lods
cmp
xchg
push
lods
and
out
mov
add
xchg
mov
fisttps
sub
ret
movsb
dec
enter
sub
jbe
or
jb
pop
and
cmovbe
inc
push
push
pop
push
cmp
stos
xchg
sahf
cs
call
mov
add
cmp
jmp
mov
pop
rorb
sbb
jb
clc
dec
jl
xchg
mov
mov
inc
cmp
addr16
and
jbe
sbbl
outsb
lahf
add
mull
out
inc
cmp
fnstsw
fldt
xchg
in
push
nop
ds
subl
adc
xor
int
outsb
sbb
push
lock
cmpsb
rorb
or
std
xchg
xchg
inc
aad
stos
rep
pop
in
adc
mov
stc
cmpsl
out
xchg
xchg
add
pop
shl
fcomps
ficoms
xchg
mov
jp
lea
pop
pop
add
out
shlb
add
dec
iret
fadd
negb
cmpb
xlat
inc
pop
inc
jne
push
es
cmp
nop
pop
xor
jo
cmc
add
lock
daa
push
pop
lods
arpl
inc
mov
jb
scas
jp
insl
cmpsb
cmp
cmp
repz
xor
pop
xchg
in
push
dec
je
xchg
stc
or
loop
ret
icebp
int3
adc
mulb
dec
jns
mov
test
mov
xchg
lea
adc
test
xchg
dec
inc
in
xchg
mov
pop
sbb
idivb
jbe
cmp
mov
adc
pop
icebp
inc
jge
mov
dec
mov
popa
jb
jmp
add
add
push
loopne
les
adc
cmp
pop
jmp
mov
sbb
mov
mov
mov
sub
adc
sti
mov
and
dec
lock
xchg
sub
push
jg
add
arpl
shll
dec
mov
dec
cld
and
xchg
push
inc
pop
fldl
adc
push
outsb
lods
fs
sub
andl
pop
lods
mul
and
mov
ds
jbe
pusha
imul
loope
xchg
mov
add
inc
sbb
movsl
int3
or
out
sbb
mov
mov
lahf
mov
outsl
xchg
or
loop
cmpsl
aas
pop
jbe
jmp
loopne
sbb
repnz
lret
je
sarb
add
hlt
insl
and
mov
sbb
lcall
add
imul
mov
xor
ret
rclb
sbb
add
mov
and
add
mov
mov
pop
xchg
add
adcb
sbbb
pop
stos
cli
dec
pop
adc
xchg
mov
rorl
mov
add
mov
out
lds
ret
mov
lahf
jmp
jmp
out
rclb
push
mov
scas
mov
and
idivb
and
push
xchg
inc
shrl
inc
lds
xchg
mov
aaa
xchg
mov
pop
iret
mov
pop
ret
jb
sbb
or
jle
cmp
add
xchg
push
xor
mov
in
lahf
jmp
xchg
popf
inc
js
scas
clc
gs
fsubrs
fsubr
cmp
pop
mov
and
scas
stos
jg
les
lds
mov
ret
push
dec
hlt
sahf
xor
daa
mov
ja
dec
sub
stos
pop
push
mov
fmul
add
sub
adc
fsts
stos
and
push
cltd
ret
nop
ss
cmp
jle
cld
shrl
aaa
test
mov
bound
outsb
fiadds
loope
and
pusha
add
add
lods
jne
mov
icebp
add
push
pop
fcoml
mov
mov
mov
inc
cmovae
mov
aaa
jns
loopne
dec
dec
pop
add
sbb
or
notb
adc
mov
pop
cmp
xor
lock
fs
addr16
and
pop
cmc
mov
aam
shlb
jnp
mov
cli
mov
mov
jmp
cmp
and
or
xor
arpl
cmpsl
cmp
inc
ja
push
xor
pop
int
call
add
addb
cltd
lods
adc
mov
and
add
inc
mov
hlt
xchg
push
dec
xlat
cmp
jecxz
es
outsl
inc
mov
mov
stos
cld
iret
sub
stos
es
xchg
add
or
push
push
dec
jmp
fistpll
aam
adc
js
lds
loope
hlt
imul
mov
outsb
aam
xlat
push
sbb
xchg
pop
ret
je
inc
jmp
aas
imulb
jmp
leave
pop
mov
mov
mov
add
pop
scas
and
cmp
and
outsl
testl
mov
shr
and
cmp
and
test
icebp
mov
aam
ficoml
cmp
inc
sbb
mov
int
push
mov
add
out
add
pop
imul
clc
mov
or
scas
pop
push
or
mov
mov
push
xchg
inc
adc
jl
or
mov
hlt
push
pcmpeqd
lock
int
je
add
jne
rcrl
jno
pop
fsubrl
dec
add
enter
pop
cmp
xchg
pop
subb
add
jbe
mov
cmp
inc
mul
jno
mov
dec
imul
xor
jp
test
cmc
popa
stc
mov
or
sbb
pusha
adc
dec
mov
and
fwait
aas
inc
imul
dec
fidivl
es
dec
mov
call
mov
jle
cmp
sub
pop
and
or
add
mov
adc
push
push
mov
cmpsl
inc
mov
and
loopne
xlat
call
push
add
pushl
cmovbe
rclw
cwtl
or
pop
jbe
mov
xchg
movsb
loop
jns
fadds
mov
es
sbb
add
cmp
push
loope
mov
sbb
xchg
in
push
push
hlt
push
add
and
into
xlat
pop
jbe
xchg
sbb
clc
int
jbe
cmpsl
mov
test
dec
jb
lods
mov
xchg
or
push
xchg
push
cltd
inc
loop
cmpsb
sub
inc
aam
pop
adc
scas
mov
push
fyl2x
cmp
ja
mov
movl
cmp
test
pop
pop
xchg
je
cmpsb
inc
mov
xor
add
xchg
mov
cld
loope
ljmp
adc
pusha
sbb
pop
ds
je
pop
mov
pop
test
pop
xchg
call
mov
mov
push
fldcw
lret
aas
dec
xchg
pop
mov
or
inc
dec
int3
jp
mov
inc
lcall
pop
cmpl
scas
jg
imul
stos
push
or
dec
mov
scas
flds
dec
cmpsl
mov
enter
outsl
pop
sub
iret
cmc
xor
push
or
adc
dec
aas
jb
mov
js
arpl
dec
ja
push
ja
push
lea
mov
mov
sub
daa
mov
dec
inc
leave
mov
mov
push
inc
push
add
test
jo
cmpsl
mov
enter
xor
jl
add
movsl
inc
pop
scas
pop
push
sub
pop
pop
mov
jecxz
mov
icebp
mov
imul
and
insb
dec
mov
cld
jbe
cmp
sub
mov
mulb
popa
fldl
sahf
ss
mov
sub
mov
lea
roll
rcrl
mov
orb
popf
cmp
xchg
add
xchg
loopne
loopne
cmp
pop
or
inc
sbb
xchg
imul
inc
les
pop
repnz
xchg
mov
xorl
pusha
testb
loop
cmpsb
pop
adcl
jl
std
xchg
decb
out
cmp
cmp
xor
pop
sti
xchg
mov
mov
icebp
hlt
outsl
roll
movzwl
out
sbb
rorb
addb
mov
lods
shlb
xchg
jbe
inc
pop
push
mov
push
stos
popa
sbbl
loope
pop
add
push
xchg
insl
sar
push
cmp
pop
mov
cmpsb
daa
sub
data16
xlat
cs
pop
dec
push
icebp
gs
pusha
in
dec
pop
dec
adc
xchg
subb
imull
hlt
xchg
add
or
dec
fsubr
pop
mov
cmc
xchg
aas
xchg
adc
int3
and
arpl
in
leave
testl
jle
cs
and
mov
xchg
xlat
dec
push
bound
movsb
mov
loop
data16
inc
xchg
xchg
mov
ds
lds
mov
jbe
sub
inc
rep
xchg
dec
push
inc
jle
xchg
add
and
fs
dec
mov
notl
xchg
bnd
fimull
cmc
rcl
loopne
fcom
es
test
int3
addl
push
cmp
dec
jg
xorl
inc
adcb
loopne
in
adc
int
jmp
push
mov
or
lret
scas
negl
iret
shll
faddl
pusha
cmc
xor
mov
or
in
mulb
clc
adc
jbe
push
add
arpl
mov
test
stos
dec
jmp
mov
and
scas
stc
xchg
mov
shrb
ret
add
mov
stos
dec
repnz
jge
sbb
lock
sub
fildl
dec
imul
dec
xchg
popa
mov
ja
mov
sub
stos
cmovl
mov
repnz
xchg
lods
xor
and
std
icebp
fimuls
lahf
je
lds
and
sub
push
mov
inc
sbb
aas
cmpsl
push
cmpsl
mov
inc
xacquire
mov
in
sub
jns
or
mov
popf
xlat
push
mov
iret
adc
pop
lahf
xchg
sti
scas
stc
ljmp
adc
inc
xor
pushl
mov
add
gs
or
push
subb
sub
notl
mov
xor
movsb
mov
imul
cmp
sbb
cmp
imul
test
daa
adc
xor
push
cmc
mov
dec
sub
xor
cltd
cmpb
xor
movsl
lret
jbe
aas
xchg
sahf
jge
pop
inc
int
or
dec
jns
push
and
ss
pop
aad
div
lock
pop
xchg
jo
jbe
inc
xchg
cmpsl
push
xlat
outsl
mov
bound
pop
out
cltd
xchg
mov
adc
add
bound
hlt
or
jno
jl
xchg
orb
loopne
push
push
aaa
cmp
pop
xchg
mov
sbb
dec
mov
and
xchg
stos
fdivp
sbb
fcoms
fldt
jmp
shll
mov
push
movsb
xchg
cmp
dec
inc
or
cmpsb
dec
fsts
mov
cwtl
add
test
arpl
pop
inc
xor
cmc
je
push
cmp
imul
nop
xor
push
pop
mov
pop
and
imul
out
jg
insb
jl
and
shlb
pop
loopne
pusha
lods
push
inc
daa
pop
dec
cld
cmc
outsb
test
in
and
pop
movsl
int3
pop
xor
cmp
mov
cld
push
fildl
jbe
das
pop
icebp
leave
imul
mov
inc
dec
flds
out
pop
hlt
in
xor
xchg
xor
enter
pop
je
sbb
cld
adc
mov
out
dec
add
push
push
push
mov
mov
pop
jle
stos
jbe
push
cs
leave
mov
push
mov
add
pop
fsubrl
invlpg
xchg
jo
mov
dec
mov
xchg
int3
adc
icebp
cmp
mov
and
aas
aaa
cmp
xor
and
mov
pop
or
je
pop
mov
cli
pop
sbb
xchg
dec
repnz
dec
add
insb
inc
jmp
int
sbb
lret
mov
scas
pop
jo
mov
xchg
jns
mov
test
stos
mov
fnstenv
inc
imul
cmpsl
jo
jmp
mov
jns
test
push
inc
rcll
xchg
notl
and
sahf
cmpsb
pop
stos
leave
mov
xchg
daa
or
xor
pop
push
out
add
mov
lret
mov
sbb
sub
lock
cmp
sahf
loopne
inc
push
pop
mov
scas
mov
mov
outsw
xor
shlb
cmp
pop
adc
lock
scas
shl
or
inc
ja
cmp
stos
push
xchg
scas
jmp
inc
shr
mov
or
adc
and
ret
mov
jl
lods
xchg
xor
pop
jnp
data16
mov
and
gs
leave
inc
mov
add
dec
shrl
clc
adc
push
stos
pop
fisubrs
xchg
scas
andl
mov
jg
push
stos
mov
lock
mov
out
dec
lds
test
sub
rorb
fcompl
cld
cmp
lret
xchg
das
gs
jl
dec
sbb
aam
dec
xchg
add
inc
cmp
imul
push
dec
mov
xchg
adc
clc
cmc
xchg
xchg
je
les
stos
xor
lahf
inc
push
mov
cwtl
jmp
adc
es
aaa
dec
mov
out
push
movsb
ss
lret
inc
mov
sbb
sub
xchg
pop
mov
mov
mov
int
jmp
addl
xchg
call
adc
popa
push
push
ja
pop
out
mov
testl
xchg
aam
test
xor
lods
ss
sbbl
mov
push
cmc
inc
insl
in
lods
mov
stos
lods
cmp
add
test
mov
cmp
xchg
in
addl
cld
mov
shll
fwait
test
pop
jbe
pop
fiaddl
sbb
or
iret
xor
cmc
xlat
xchg
out
push
mov
push
movsb
mov
dec
or
dec
or
repz
aam
jbe,pt
jecxz
lcall
or
ret
sub
adc
add
stos
mov
cmpsl
push
jns
mov
aam
mov
loopne
cmp
adc
fcompl
xor
or
shrl
pop
xor
imul
xchg
out
and
enter
mov
pop
mov
int3
fimuls
js
cmpsl
inc
add
push
dec
sti
xor
cmc
cs
aam
cs
or
xchg
jecxz
xchg
mov
loope
popa
pop
and
mov
lsl
enter
or
insl
pop
xchg
or
movzwl
ret
dec
insl
mov
jne
pop
xchg
mov
popa
add
rclb
xor
mov
mov
hlt
jns
les
ss
sbb
pop
or
inc
cmp
dec
gs
pushf
lret
push
in
pushf
imul
add
sub
inc
ret
std
mov
mov
adc
inc
pop
sbb
pop
cwtl
lahf
dec
mov
aam
adc
stc
xchg
ret
add
cmp
pop
stos
push
sahf
rcrb
nop
clc
xor
and
push
mov
jbe
cs
inc
sub
sub
xchg
loope
and
cld
cmc
gs
or
xchg
js
push
stos
push
dec
pop
adcb
mov
loopne
mov
mov
out
int
pop
push
loopne
cmc
dec
loopne
and
push
push
jo
inc
xor
cmpsl
and
push
push
ret
sbb
ljmp
mov
stos
or
sbb
push
pusha
ss
jle
jmp
js
sbb
cmp
ret
or
fs
test
stc
add
mov
or
adc
cmp
mov
jge
mov
lods
lahf
inc
cmp
or
pop
stos
inc
sbb
scas
test
xlat
dec
sbb
pop
inc
inc
pop
rclb
xchg
in
add
jo
sahf
repz
adc
and
rcrl
pop
std
cmc
and
aam
dec
fdivr
mov
pop
sub
mov
dec
cld
loopne
push
sbb
or
repz
inc
js
iret
mov
imul
mov
bound
popw
push
push
mov
cmpsb
mov
jle
xchg
mov
jae
inc
add
call
in
pop
pop
add
rclb
fwait
inc
jbe
cli
lds
lahf
mov
test
add
xchg
and
add
pop
pop
sub
inc
out
aas
sbb
ja
stos
pusha
int
rcrb
jbe
inc
lods
mov
push
fistps
stos
loop
adc
xchg
out
clc
xor
or
cltd
mov
mov
enter
notb
cs
cmp
push
adc
add
rcrb
out
cmc
popf
push
gs
push
mov
pop
mov
inc
push
cmc
mov
enter
sahf
and
cli
jp
out
subb
outsl
clc
ret
das
cmp
cwtl
fists
pop
mov
pop
fisubs
sbb
ret
adc
inc
xchg
test
inc
pop
mov
mov
int3
clc
jp
xorl
pusha
xchg
or
adc
popa
push
out
jmp
sub
insl
xchg
cmc
sbb
insb
in
mov
xor
pop
das
stos
and
gs
adc
lea
cmp
inc
pop
pop
jge
jl
push
jp
testb
pusha
int3
mov
call
inc
adc
pop
xchg
das
and
dec
mov
in
inc
xchg
xchg
push
inc
shrb
repnz
lock
pop
in
fmull
add
fucom
jmp
repz
and
xor
sub
bound
repnz
clc
and
pop
jl
cmp
xchg
mov
hlt
add
push
and
hlt
dec
pusha
imulb
cld
and
je
add
jae
ret
push
insb
insb
insl
pop
adc
rolb
push
idiv
sub
xchg
jbe
sbb
mov
mov
xchg
jbe
imul
dec
outsb
lret
dec
and
cmp
add
inc
push
aaa
rcrb
mov
test
pop
adc
shrb
mov
xor
ret
sbb
es
dec
dec
rolb
pop
cmpsl
pop
cld
lahf
push
mov
xchg
outsl
jge
rorb
ret
cmpsl
addl
jmp
lock
and
lcall
inc
mov
xchg
and
push
mov
mov
cwtl
daa
shr
adc
test
mov
cld
sub
push
iret
and
fnsave
mov
or
ds
pop
enter
imul
jecxz
stc
push
in
or
add
push
mov
mov
jmp
cld
pop
sti
add
lock
mov
inc
ljmp
push
xchg
push
filds
in
mov
mov
test
add
out
lcall
pop
xor
imul
push
scas
cmpsl
inc
sub
dec
add
mov
cmc
mov
pop
iret
pop
sub
pop
jbe
sub
or
mov
ja
outsl
mov
popa
and
ss
xlat
jge
ljmp
nop
inc
test
and
push
lea
fsubs
xor
aas
dec
jo
mov
lock
divb
inc
push
out
in
int
adc
mov
dec
sub
rolb
xor
xor
lahf
adc
or
jbe
stos
xchg
gs
jns
jge
pop
sub
pop
iret
cmpsb
ror
loopne
mov
lret
xchg
jge
xchg
jp
xchg
or
cmpb
scas
pop
push
ljmp
scas
pop
cmpb
cld
xchg
test
jmp
rclb
xchg
xor
jb
jno
les
dec
pop
jle
mov
add
jp
mov
jle
movsl
sbb
roll
je
adc
adc
lret
pop
pcmpeqd
push
xchg
mov
cmp
sbb
adc
xchg
jne
xchg
aad
sbb
sbb
mov
aas
mov
ds
popa
jno
adc
fcoms
cmp
inc
test
iret
sub
leave
inc
adc
stos
push
add
dec
arpl
xchg
mov
add
insb
and
add
xchg
pop
inc
lods
mov
mov
push
stos
std
adc
push
mov
cld
cmpb
incb
imul
imul
adc
imul
xchg
leave
rcrl
das
cmp
or
add
push
pop
push
pop
xchg
aas
inc
sbb
pop
mov
push
dec
pop
push
cli
cmpb
push
xchg
imulb
jle
in
lret
mov
cmp
lock
fistpl
mov
pop
mov
fcomps
or
add
fistps
lcall
mov
or
xchg
das
stc
rol
cli
jmp
movsb
fidivs
push
mov
pop
cmp
pop
mov
mulb
loopne
jecxz
pop
xor
loop
push
inc
adc
inc
into
jmp
mov
out
mov
mov
dec
ja
adc
sbb
loope
xor
and
add
cli
rclb
and
dec
das
out
cmc
pop
mov
cmpl
fcoml
xchg
push
xchg
outsb
cmpsl
push
cmp
push
adc
daa
adc
outsl
or
lods
repz
lock
jmp
lahf
arpl
xchg
mov
pushf
xor
xor
push
hlt
fldl
mov
aad
mov
sub
cltd
adc
and
jmp
pop
mov
aam
pop
xchg
fstl
sbb
jae
bt
std
and
xchg
xchg
icebp
enter
ja
hlt
cmpsb
bts
xchg
aaa
inc
pop
inc
mov
mov
push
dec
icebp
push
cmpsb
mov
push
test
int3
test
mov
call
xchg
ja
into
insl
dec
xchg
rcr
subb
cmp
xchg
fcomps
std
push
add
lock
xor
jb
das
adc
add
mov
adc
inc
es
clc
mov
push
inc
cmp
daa
xor
icebp
int3
dec
push
aaa
mov
pop
cmp
outsb
testl
xor
out
mov
mov
imul
push
push
mov
push
adc
adc
adc
jp
or
fdivrs
rcl
cmc
add
es
xor
lods
loope
pop
call
jbe
dec
ficoms
inc
hlt
divps
in
push
movsb
mov
loopne
in
dec
mov
dec
xorl
jb
pop
and
cld
push
bound
mov
dec
adc
subb
mov
push
iret
mov
ret
add
pusha
fcmovnbe
mov
pop
adc
daa
js
stos
lret
xor
dec
xor
out
sbb
jnp
imul
lcall
jge
and
mov
xor
out
inc
jg
jne
pop
push
shrl
int3
or
mov
test
addr16
inc
out
adc
dec
movl
cld
mov
xlat
and
lock
add
ja
in
aas
popf
xor
jp
loopne
shl
xor
paddb
les
insb
and
mov
icebp
test
jmp
dec
add
out
xor
mov
aad
jmp
and
fsubrs
icebp
and
cmp
cmp
fdivr
idivb
roll
enter
insl
push
or
and
ss
hlt
inc
xchg
in
pop
jbe
mov
ss
push
ja
out
out
or
aam
sbb
mov
cs
dec
in
add
jae
adc
subb
outsb
daa
jp
xor
gs
xchg
ds
divb
icebp
add
faddl
xlat
in
jl
push
mov
mov
jmp
mov
cs
push
cmp
dec
or
std
cmpb
mov
push
xchg
icebp
pop
add
pusha
xchg
push
push
mov
outsb
or
or
dec
cmp
push
cmc
cmp
push
xor
jno
mov
mov
out
popa
inc
iret
dec
pop
xchg
cld
icebp
mov
xchg
cmc
shl
dec
xor
stos
xor
daa
push
jecxz
leave
add
lods
pop
xor
mov
out
pop
sub
mov
pusha
stos
js
mov
dec
fs
jl
or
mov
prefetch
jbe
rorb
lea
xor
stos
add
cmc
lock
pop
cmpsb
xlat
and
data16
jbe
mov
xor
subb
dec
jbe
shrl
dec
lods
lcall
sahf
add
inc
call
or
dec
pop
push
aaa
mov
hlt
xor
cmc
in
sbb
pushf
dec
dec
pop
out
jno
or
push
dec
loopne
les
lock
int3
jne
adc
je
pusha
repnz
jp
adc
inc
leave
lea
cmp
test
rolb
sarb
inc
enter
sub
out
mov
pop
add
cmp
pfcmpgt
jmp
test
sub
xchg
rcrb
push
int3
lods
push
imul
or
jle
movsl
mov
mov
lods
imulb
sub
inc
mov
test
jae
add
pop
mov
add
ja
jl
cmp
int3
pop
dec
arpl
add
jbe
out
jl
mov
xchg
push
mov
cld
xchg
cmp
out
lcall
cmp
aad
or
jp
shl
and
xchg
cmp
rol
lea
push
aaa
mov
lcall
pop
sub
mov
std
xchg
mov
insb
pop
dec
add
xchg
shll
ret
loopne
je
mov
add
jne
aam
inc
inc
cmp
sub
out
jge
mov
fwait
cmp
push
or
ja
jbe
pop
add
inc
xchg
ret
insl
in
mov
aam
push
pop
mov
push
dec
xchg
push
mov
cmpsb
pop
dec
rcrl
orb
cwtl
or
fxch
jmp
push
inc
jl
or
and
dec
daa
cmp
negb
hlt
dec
add
adcb
sti
aam
sub
pusha
or
dec
test
rcrb
in
dec
out
push
xor
mov
lcall
xor
lea
jmp
les
mov
mov
inc
pushf
shl
data16
shlb
xchg
add
enter
loopne
or
ret
out
jge
push
dec
mov
sahf
jbe
fdivrl
xchg
es
add
fcmovnbe
pop
loopne
mov
push
jl
sub
add
mov
jle
fstps
and
sub
cmpsl
divb
cmc
xchg
adc
scas
leave
pop
imul
pop
in
adc
test
dec
ss
outsb
addr16
dec
out
and
call
mov
ret
ret
int3
out
jl
lods
sbb
or
addr16
mov
sbb
outsb
cmp
sub
inc
jge
push
and
xchg
dec
cmc
clc
and
mov
lcall
in
cld
je
adc
xchg
dec
cmp
fstps
addb
mov
das
add
adc
pop
lret
jl
jecxz
or
and
subb
jbe
stos
out
je
out
add
push
outsb
gs
std
pop
sub
scas
push
iret
pop
in
xchg
addb
testb
fnstenv
xchg
and
pop
in
das
xor
xchg
inc
dec
xchg
fsts
cmp
jle
les
jecxz
pop
aam
push
mov
dec
mov
rorl
outsb
stos
enter
jp
sub
dec
jle
lods
es
inc
outsl
mov
in
je
or
mov
jge
pop
pop
fdivrl
ss
inc
ds
adc
and
orl
xchg
addr16
mov
push
movlps
daa
testb
scas
xchg
dec
xchg
push
add
or
xor
cmpsl
stc
aaa
aam
sub
test
add
mov
fnsave
jecxz
sub
cmp
push
stos
xchg
test
cld
insl
xchg
out
pop
mov
adc
leave
xchg
jno
cmp
rorb
mov
lea
inc
aam
or
dec
aaa
sbb
add
divl
adc
mov
das
pop
test
sbb
mulb
or
loop
cmp
inc
test
rclb
das
adc
fimuls
mov
adc
int
push
mov
cld
sbb
mov
in
in
mov
rolb
dec
jmp
push
in
jno
mov
dec
or
test
and
xchg
xor
and
in
xor
rcrb
and
notl
xchg
adc
inc
cmp
adc
lea
out
or
ss
addr16
and
pop
cmpsb
lods
adc
jbe
mov
hlt
cmpsl
aaa
je
in
leave
jne
add
lds
cs
push
pop
scas
pop
xchg
mov
push
icebp
hlt
leave
cmpsl
fwait
xlat
dec
xorl
cmp
cmp
pop
pop
and
jmp
sub
inc
mov
push
pop
std
xor
repnz
jl
repz
fwait
adc
jno
push
stos
xchg
or
movsb
shrb
cmp
and
or
jae
mov
xor
jg
push
sbb
pop
nop
test
inc
jbe
dec
sete
sar
aas
cmp
add
aas
dec
xor
and
call
sub
pusha
cmc
aam
xchg
in
icebp
inc
add
sbb
cmc
lcall
fs
push
dec
mov
pop
mov
mov
adc
dec
jmp
lods
xchg
scas
mov
imul
lcall
mov
jne
or
aaa
testl
jne
cs
dec
ljmp
add
sahf
adc
ss
mov
lods
sbb
jbe
or
mov
adcb
sub
push
iret
sbb
xchg
sbb
xchg
das
mov
dec
test
or
aam
ds
inc
or
cmp
rclb
sub
pop
pop
inc
repz
cmc
push
xchg
into
adc
sub
inc
xor
sbb
hlt
cmp
pushf
nop
mov
mov
in
hlt
std
clc
pop
aam
mov
int
dec
push
inc
inc
inc
notb
and
dec
movsb
mov
xor
sbb
lcall
add
js
push
pop
push
scas
addr16
scas
pop
push
adc
ficoms
xor
add
push
stc
ret
stos
adc
fildl
ss
negb
and
cltd
add
aad
adc
inc
or
xchg
and
pop
fcoml
out
sarb
dec
cli
pop
jl
xor
ja
xchg
or
stos
aam
dec
pushf
lahf
and
mov
xlat
lods
pop
rcll
xlat
or
jle
mov
movsl
jbe
es
shrb
cltd
rclb
enter
aaa
dec
jb
dec
push
subl
inc
mov
add
pop
lret
jbe
mov
data16
jne
inc
inc
into
shlb
rcrb
xchg
and
int3
lahf
cmp
loop
shrb
pusha
push
ss
lods
repnz
jp
imulb
inc
xchg
addl
jne
cs
xor
ds
adc
or
push
jno
and
add
icebp
push
lret
adc
push
shll
adc
stos
push
and
add
popf
js
mov
clc
outsb
mov
pop
orb
jb
jbe
lret
int3
clc
jmp
cld
jbe
jl
jmp
dec
push
push
div
push
inc
imul
bound
mov
adc
sbb
or
vpmovsxbd
mov
testb
dec
xchg
aaa
icebp
iret
sahf
jbe
cmp
mov
inc
andl
push
jo
sub
dec
test
mov
pop
rclb
jo
push
cmpsl
popa
sbbb
insl
rclb
out
cld
aaa
fimull
cmp
pop
xchg
popa
pop
mov
mov
fdivs
ja,pt
jbe
xor
ret
aam
adc
in
out
xchg
aaa
push
jae
push
in
inc
dec
push
idivl
push
aaa
fldt
add
adc
jl
pop
adcl
sbb
push
cmp
ja
pop
ja
fnsave
daa
push
jge
in
jg
push
orl
pop
push
cmpsl
aaa
pop
ret
lret
dec
int3
testl
inc
jl
push
sbb
shll
sbb
and
aam
fistpl
or
mov
mov
idivl
arpl
pop
mov
aad
movsl
xlat
sub
movups
iret
xchg
es
add
cmc
ret
pop
pop
cmc
sub
adcl
bound
push
ja
hlt
lret
push
int3
push
mov
test
pop
mov
push
in
pop
fdivl
adc
xor
popf
or
inc
jbe
add
lds
shrl
hlt
inc
nop
ret
inc
xchg
notl
inc
movl
adc
mov
cmc
xchg
pop
hlt
mov
je
sbb
int3
xchg
pop
jbe
xchg
sahf
loopw
ss
test
or
divl
xchg
nop
jns
xchg
addl
scas
sbb
and
notl
rcll
xchg
lahf
xchg
and
xor
push
mull
or
and
int
and
negb
mov
testb
xchg
and
push
insl
xchg
iret
inc
and
iret
xchg
out
mov
divl
pop
arpl
and
push
and
xlat
addl
cmc
into
das
xchg
xchg
and
pop
ss
fs
mov
movsb
sub
mov
popa
cmp
movsb
cmp
push
rclb
add
sahf
and
ljmp
mov
daa
mov
fimull
xor
dec
sbb
push
stos
in
test
inc
pop
xchg
stos
cmc
gs
jb
dec
ds
repz
testl
cld
in
mov
adc
jo
push
shll
outsl
xor
pop
sub
dec
pop
rorb
leave
jg
mov
aad
sub
mov
lds
icebp
fsub
in
sti
or
cli
xor
sbb
aam
dec
cmp
or
sahf
push
rcrb
int3
fldenv
pop
xchg
push
add
cmpsl
jmp
xchg
js
lock
fwait
mov
orps
sbbl
jp
in
jecxz
or
adc
jl
dec
xchg
ficomps
jnp
mov
or
cmc
xchg
push
jo,pn
push
gs
xchg
test
sub
inc
jecxz
mov
stos
sarl
aam
mov
fisttps
es
xchg
inc
xchg
jae
cmp
jo
pop
mov
lahf
jp
xchg
das
push
ljmp
cmp
push
inc
xchg
jmp
ds
leave
and
test
mov
cwtl
negb
xor
scas
hlt
repz
call
fs
bnd
xchg
int3
fsubr
mov
and
mov
mov
cmc
lahf
push
scas
hlt
pop
xchg
cld
idivb
stos
pop
jbe
push
in
hlt
jl
fdivl
mov
cmpsl
and
int3
aam
jmp
sbb
cmp
in
cmp
and
xor
jecxz
cld
mov
jbe
lods
out
dec
cs
daa
fsts
outsb
pushf
in
dec
inc
mov
ja
lods
adc
aad
notb
push
les
ss
jl
leave
into
jmp
sub
inc
mov
pop
jle
mov
outsl
aaa
gs
xchg
cmp
gs
out
cmpsl
sbb
test
or
lods
jmp
xchg
dec
mov
xchg
shll
test
push
mov
out
mov
sub
cmp
adcl
out
pop
mov
dec
aam
shll
idivb
leave
sbb
or
int
cmp
inc
or
cli
sar
imul
mov
test
add
dec
xchg
sbbb
daa
lahf
sub
xchg
adc
flds
xor
shll
iret
cld
cmc
pop
pusha
rclb
popa
mov
inc
sarb
aas
xor
mov
addr16
add
and
xor
lahf
jp
fidivl
adc
mov
xchg
stc
jl
push
fcoml
loopnew
les
add
loop
cmp
mov
xlat
out
js
lods
outsb
add
std
int3
cmp
fstpl
pop
jmp
mov
xchg
jb
notb
dec
xor
sbb
mov
mov
lock
loope
push
jg
jecxz
pop
aam
aas
mov
mov
std
aas
out
flds
dec
add
lret
xchg
lret
loopne
fisubrs
insl
cltd
jb
mov
cld
lret
out
xchg
mov
lret
push
insb
xchg
xor
decb
int
adc
loopne
xchg
adc
loope
lea
cmp
or
add
pop
adc
stos
ret
xchg
dec
fisttps
xor
cltd
jmp
and
out
or
add
or
xor
popf
cmp
das
repnz
into
push
adc
cld
je
xchg
cmpsl
mov
push
pushf
cs
inc
arpl
mov
lds
mov
sbb
clc
push
mov
movb
fidivs
add
mov
dec
gs
sarb
lret
xchg
add
fwait
push
aam
aaa
cmp
mov
movsl
mov
rcr
lods
jbe
int
xchg
in
and
inc
pop
or
and
xchg
ret
lods
addr16
cmc
cmpsb
fimull
bnd
not
mov
test
add
push
nop
add
push
ss
jmp
push
xchg
mov
add
lods
mov
push
lock
mov
jno
stos
gs
pusha
pop
imul
test
pop
test
cmp
or
daa
mov
mov
ret
jl
cmp
andl
in
lret
adc
cmc
repnz
iret
or
lock
mov
xchg
add
adc
mov
enter
enter
stos
loop
stc
dec
xchg
test
add
and
popa
rolb
pop
inc
fnstsw
and
leave
fsub
inc
gs
jb
pop
fsub
rorb
add
imul
mov
dec
mov
add
mov
sti
fsubr
sub
shl
xchg
enter
and
add
xchg
cmpsb
mov
add
sub
repnz
shl
cltd
adc
jo
imul
lret
jno
push
mov
pusha
scas
out
cmc
scas
loope
mov
jg
aaa
jecxz
or
jg
test
cmc
enter
ljmp
cs
lods
jno
or
xchg
fnsave
dec
xchg
mov
out
int3
xchg
cld
add
or
jle
lock
adc
lret
add
mov
push
and
nop
out
mov
xchg
aas
jbe
sbb
and
mov
daa
inc
dec
cmp
mov
sub
insb
imul
mov
adc
mov
pop
adc
lcall
lods
sub
scas
in
sbb
xchg
inc
icebp
notb
mov
or
les
js
jl
sahf
push
gs
push
ljmp
xchg
pop
fwait
xchg
bound
bound
repz
jecxz
lea
sbb
and
cld
loop
or
inc
xchg
or
sbb
sbb
dec
or
aad
cmp
sub
push
and
mov
and
and
push
inc
stc
mov
cmp
xchg
inc
dec
in
push
dec
cs
lock
jle
inc
sub
es
sbb
mov
or
jbe
mov
jbe
cli
cmpsl
aam
push
es
xchg
mov
pop
adc
out
mov
mov
in
cmc
inc
pop
stos
aaa
fbstp
aaa
pop
in
mov
pop
jbe
xchg
cltd
cmc
dec
cmpsl
sbbb
or
adc
jmp
pop
cmpb
and
and
pop
push
xchg
mov
mov
cmp
sub
stos
and
mov
xchg
mov
xchg
inc
jno
add
push
push
dec
repz
movsb
int3
cmc
xchg
jnp
jecxz
rorl
cld
ret
inc
add
or
xor
xchg
repz
and
bound
xchg
pop
mov
pop
dec
and
negb
int3
mov
dec
shl
adc
mov
jo
adc
jnp
jbe
popa
test
jb
jle
jbe
rclb
mov
push
and
sahf
inc
mov
orl
xchg
cld
xor
lds
dec
je
mov
fmuls
pop
xchg
mov
lcall
mov
adc
jo
push
hlt
push
movsb
xchg
ja
outsl
dec
adcb
aam
adc
inc
aam
pop
in
jl
jmp
in
sub
cmp
inc
leave
sub
xchg
sbb
add
pushf
std
add
add
mov
jbe
inc
lods
mov
ja
int
rcrl
or
sbb
std
mov
cmc
loopne
gs
icebp
mov
pop
ret
and
push
fcompl
fidivl
repz
push
sarb
or
jo
mov
adc
mov
xchg
mov
pop
jne
lods
add
fwait
inc
in
push
enter
iret
pop
cwtl
not
xchg
add
jg
lock
dec
leave
in
lods
in
pop
aas
jle
pop
mov
lock
cmc
mov
daa
ret
inc
ss
add
adc
sub
sub
addr16
hlt
xor
aam
lcall
scas
sbb
dec
mov
inc
std
fadds
mov
sub
xlat
push
cmc
out
xchg
dec
aaa
jmp
mov
ret
arpl
ja
stos
add
mov
sub
adc
jae
jge
dec
mov
pusha
mov
andl
int3
cltd
out
mov
fildll
aaa
ja
jb
loopne
ja
cs
jecxz
aaa
testl
incb
popw
aad
push
adc
bnd
cmpsb
aaa
inc
aaa
jno
mov
movsl
inc
imul
inc
insl
orl
push
ja
add
xorl
adc
nop
mov
push
imul
hlt
pop
test
hlt
sbb
xor
aad
aam
xchg
xchg
mov
divb
dec
ja
add
scas
ret
gs
jo
xor
test
in
in
or
lea
jne
adc
and
push
out
xchg
mov
push
or
add
or
jp
rcll
mov
aaa
push
pop
int
pop
add
rol
aaa
jge
inc
mov
push
testb
andl
push
cmpsb
popa
mov
daa
xor
daa
push
pop
pop
mov
pop
mov
es
xor
pushf
jne
imul
xchg
xor
mov
push
es
add
inc
xor
inc
aaa
inc
test
notb
jnp
out
aaa
dec
push
sub
arpl
arpl
ja
xchg
pop
movsl
test
xchg
xlat
mov
jp
pop
jbe
push
xchg
aam
xchg
adcl
lahf
push
ret
and
popa
ss
adc
jne
xor
movsb
ja
ss
divb
add
jne
add
add
mov
movb
xchg
inc
push
push
dec
dec
out
add
or
repz
inc
dec
adc
and
outsb
jbe
pop
dec
pop
loope
ds
inc
xchg
pop
sub
inc
hlt
jae
rcll
lods
into
sbb
xor
cmc
int3
adc
fiadds
xchg
dec
popf
pushf
pop
adc
xor
mov
pop
outsb
xchg
or
movsb
mov
mov
aas
int3
inc
andb
add
inc
xchg
sarl
jo
xchg
cs
sbb
sub
addr16
xlat
in
test
lret
mov
mov
lahf
adcl
pop
sub
nop
mov
push
adc
adc
mov
fisttpll
inc
xchg
mov
cwtl
int
jecxz
mov
jae
mov
in
inc
insl
das
gs
jb
pop
stos
inc
outsb
adc
inc
imulb
pop
cmp
pop
and
add
lahf
mov
push
push
pop
ret
mov
pop
loopne
push
ja
jb
std
push
ret
mov
fdivs
add
mov
sbb
pop
clc
iret
ja
or
dec
jg
pushf
ucomiss
movsl
outsl
pcmpgtd
cmp
sub
or
sti
lahf
pop
adcl
jge
stc
fldl
cmp
xchg
insb
aaa
push
adc
adcb
push
pop
mull
outsl
div
cwtl
push
mov
cmovbe
sub
pop
push
pusha
xlat
div
mov
push
push
push
add
inc
push
fucom
insl
ret
outsl
in
add
dec
loopne
test
mov
pop
push
xchg
xorb
jecxz
push
ja
mov
ja
cwtd
adc
xor
pop
adcl
add
lds
sbb
test
inc
adc
lcall
push
adcl
or
xchg
imulb
inc
aaa
xchg
xchg
xchg
xor
push
xchg
xor
gs
lds
test
push
push
negb
inc
xor
push
xchg
xchg
push
push
lret
xchg
or
into
dec
and
div
push
pop
das
repnz
inc
neg
xor
jbe
inc
push
xor
out
daa
scas
jne
and
pop
test
das
daa
mov
ja
push
pop
data16
xchg
testb
xchg
gs
lds
lahf
in
imulb
dec
push
or
adc
flds
add
int
adc
arpl
aad
mov
pop
ret
jbe
hlt
sbb
add
mov
push
add
aam
xor
test
mov
in
ss
inc
ss
dec
fcoms
adc
aaa
jbe
xor
adc
addr16
add
loop
cld
add
jne
jae
subl
jb
add
inc
cld
and
pop
pop
and
and
push
add
add
or
xor
push
sbb
icebp
outsb
test
test
and
cmp
add
mov
fists
pop
fnsave
pop
cltd
cltd
test
arpl
sub
xchg
sub
xlat
out
shll
mov
cmp
add
cld
sbb
adcl
adc
hlt
ret
xor
cmpsb
cld
or
xor
add
dec
jp
popa
push
or
aas
sub
loopne
mov
test
lods
cmpsl
ljmp
mov
fdivl
int3
testb
movl
sbb
xchg
outsb
or
mov
lar
int3
mov
out
enter
xor
rorb
mov
inc
xor
xchg
lds
fidivrl
mov
les
push
xchg
add
setp
add
rcl
repnz
xchg
rorb
pop
sbb
aam
xorb
sti
xor
in
gs
pop
jne
sub
pop
in
pop
xchg
push
fwait
mov
push
push
push
mov
push
adc
decb
ja
sub
push
adc
popa
ret
mov
add
sbb
cld
out
xlat
ss
in
or
pop
ds
dec
mov
jp
add
pop
mov
das
test
sbb
dec
jnp
dec
cltd
addr16
add
mov
roll
cs
push
cmc
rcl
fcmove
add
out
int
ja
roll
fisubrs
imul
or
dec
das
es
pop
add
sub
fwait
je
and
aaa
adc
sub
lea
cld
pop
divw
cmp
jle
ja
imul
adc
jo
mov
es
mov
fistps
mov
int3
dec
lds
dec
jp
shrl
insl
xchg
cli
call
stc
add
mov
lcall
loop
mov
or
jmp
mov
jmp
dec
sub
push
push
scas
andb
inc
sbb
add
mov
dec
cmp
cmp
mov
leave
lea
push
mov
shrl
and
jmp
popa
mov
sub
movsl
inc
xchg
xlat
sbb
lock
cmc
pop
clc
mov
jg
dec
add
in
xchg
and
mov
sbb
sbb
nop
pop
adc
aam
cld
dec
and
enter
dec
jns
aad
push
shlw
scas
xchg
cmp
xchg
adc
push
mov
add
aad
ja
ja
sub
sahf
push
jecxz
loopne
xor
in
and
dec
iret
das
and
clc
sub
sub
xchg
clc
xchg
loope
jmp
xchg
fldl
outsb
mov
rcrl
stc
sbb
sbb
cmp
test
test
ja
and
add
mov
dec
inc
mov
sarl
gs
aaa
daa
inc
push
push
in
push
push
aaa
outsl
mov
cli
popa
leave
addr16
sahf
andb
aas
mov
dec
xor
aam
inc
cmp
lods
and
aam
mov
in
cmp
mov
push
hlt
xchg
repz
mov
fldenv
cltd
cld
push
push
ds
inc
cld
addr16
or
xchg
lret
cli
push
xchg
iret
cld
dec
push
adc
jmp
rcll
adc
stos
mov
fwait
dec
in
sub
dec
aam
out
xchg
daa
pop
sub
pop
in
and
push
add
aam
add
mov
sub
rorb
dec
or
stos
sbb
mov
dec
loopne
lods
sar
pop
subl
jmp
and
repnz
jmp
push
sub
shlb
and
rcl
js
lea
and
push
jmp
fdivl
add
dec
shlb
add
jae
mov
dec
cmp
and
cmp
jmp
imul
insl
sahf
rcrl
out
cmp
mov
and
adc
daa
insb
popa
jmp
pop
enter
lea
divl
jb
xchg
rclb
rcrl
ss
or
push
sahf
ret
ja
repz
std
pop
mov
in
xor
and
jl
or
mov
clc
pop
mov
insl
hlt
xchg
add
in
lods
ds
mov
dec
jmp
dec
mov
pop
inc
rclb
inc
daa
mov
inc
nop
inc
jge
dec
lods
mov
mov
mov
xlat
int3
sti
jmp
dec
aaa
addr16
xchg
ds
cs
sahf
call
adc
std
fdivr
fmull
and
mov
subl
sbb
fs
cmp
add
push
and
bound
xor
in
cmp
rcll
cmp
or
scas
dec
lock
out
pop
inc
jp
xchg
aam
fwait
shrl
push
sti
xlat
jl
movsl
cld
or
dec
into
pop
test
jb
das
shll
sub
ds
jle
fucomip
sub
push
enter
cmpsl
and
mov
or
sbb
push
pop
xchg
add
inc
xchg
sub
in
dec
out
pop
inc
dec
pop
out
lcall
adc
loopne
call
pop
and
lods
or
aaa
pop
pop
out
fsubs
fisttpl
mov
lret
mov
pop
xor
inc
xchg
stc
mov
into
pop
sarl
push
syscall
lock
or
add
lods
aaa
out
xorb
and
pushf
out
dec
data16
scas
xlat
pop
pop
mull
jecxz
lods
adc
movaps
inc
or
imul
xchg
insl
xchg
idiv
pusha
lret
inc
mov
pop
pop
pop
jg
mov
and
inc
int3
pop
xor
inc
out
cmp
rolb
sub
je
sbb
inc
mov
stc
mov
pop
add
push
and
adc
loope
stos
jbe
sahf
or
push
ret
gs
arpl
ret
out
dec
in
xchg
aas
movb
cmc
icebp
outsb
les
sub
out
cmpsl
clc
das
sti
test
and
inc
xlat
dec
dec
and
mov
pop
adc
xchg
repnz
repz
mov
ror
inc
ss
imulb
adc
or
jbe
in
xorl
jg
lock
sub
cld
jbe
jae
call
and
push
and
push
jo
sbb
mov
xor
push
je
xchg
mov
jg
in
sbb
push
jmp
push
lea
fcompl
test
add
ja
push
ja
in
pop
mov
movsb
pusha
lcall
mov
sbb
add
mov
lcall
divl
mov
stc
arpl
cwtl
ret
data16
add
xchg
and
lret
xchg
and
adc
cmc
inc
imul
add
pop
ret
enter
jg
xchg
fwait
mov
lret
cmp
stos
add
mov
ljmp
dec
sbb
jp
cld
add
mov
loope
sti
jae
rcl
mov
jp
std
mov
add
hlt
mov
xchg
add
xor
rcl
jb
mov
xor
shlb
movsl
inc
sbb
into
ret
lcall
jmp
push
fdivr
and
aaa
div
sti
popa
mov
and
mov
mov
xor
jo
nop
pop
pop
aaa
movsl
lahf
dec
pop
enter
xor
sub
dec
popa
and
xchg
push
test
pushf
cltd
ja
jg
inc
push
jp
ja
pop
loopne
xchg
mov
ret
jb
rclb
mov
mov
xchg
popf
loopne
mov
testb
dec
pusha
in
adc
aam
adc
xor
inc
mov
sti
adc
test
xchg
xchg
outsb
gs
in
and
push
push
mov
imul
out
or
loop
cmp
push
aas
loopne
sbb
xchg
dec
ds
cmp
out
push
mov
and
xor
xchg
jl
mov
pop
subb
and
scas
loope
jp
add
inc
add
mov
mov
arpl
lods
mov
adc
notl
icebp
or
push
adc
cmp
out
push
push
faddp
enter
xchg
jg
xchg
inc
and
xchg
jo
popf
call
orb
pusha
inc
icebp
jge
cmp
enter
mov
int3
mov
and
fcompl
inc
or
mov
lds
jbe
fldenv
and
roll
out
fdivrl
div
jne
sub
in
inc
jmp
mov
aad
push
ret
push
sti
in
adc
mov
rcrb
cmp
mov
into
mov
jmp
fnstenv
icebp
xor
adc
lods
clc
fstpl
int3
aad
hlt
dec
test
cmpsb
cmpsl
rcl
in
jno
sbb
mov
or
inc
fsubrl
cmpsl
shl
cmp
push
add
sub
cmp
rcll
int3
or
stc
and
pop
lods
xor
dec
sbb
sahf
fsts
dec
fdivl
sbb
or
add
xchg
push
out
lds
fcompl
jl
mov
xchg
out
pop
adcb
in
and
cmp
ds
pop
pop
pushf
xchg
loope
xor
mov
inc
js
lds
popa
push
lds
and
mull
xchg
pop
adcl
mov
cld
adc
xchg
or
arpl
js
lds
lods
test
out
mov
movsl
aas
popf
pusha
mov
mov
and
xchg
push
add
add
outsl
imul
arpl
ss
aam
mov
jb
rclb
add
ss
push
inc
icebp
pop
sahf
ljmp
mov
clc
and
add
push
mov
aaa
sbbb
pop
sbb
lcall
adc
jl
add
xor
les
add
lret
cmp
pusha
jp
and
mov
push
fst
inc
xor
cs
dec
in
xlat
js
sub
stos
mov
xchg
loopne
jns
sbb
mov
int3
push
mov
cmp
xchg
in
in
arpl
cltd
xor
adc
xchg
bound
in
sbb
mul
push
shlb
cmpsl
lret
xchg
nop
and
sbb
inc
xchg
icebp
je
cmpsl
and
pop
mov
leave
dec
mov
mov
dec
xchg
xchg
rclb
jg
outsl
stos
sbb
adcl
and
pop
and
daa
adcl
andl
pop
movb
stc
pop
and
cmp
dec
mov
dec
add
scas
add
pop
aam
and
push
xchg
mov
lret
sti
or
push
mov
sahf
inc
notb
stc
mov
mov
les
pop
jge
xchg
adc
jb
or
adc
mov
pop
push
pop
lret
sub
loopne
les
outsl
cld
sbb
xor
push
jmp
cmp
rcrb
test
add
xor
loope
mov
mov
mov
push
mov
aam
nop
dec
fwait
lea
xorb
mov
cs
and
adc
jle
mov
mov
sbb
adc
pusha
sbb
and
dec
leave
adc
iret
shll
arpl
in
in
or
push
ret
and
or
pop
and
pusha
out
and
movsl
stos
xor
mov
test
cs
xchg
shlb
pop
mov
cmp
jl
xor
adc
mov
jp,pn
jl
push
xor
fucomip
subb
mov
and
and
mov
aas
ret
adc
add
fisubl
sub
adc
mov
xor
cs
pop
out
scas
fildll
js
jp
pop
xor
add
in
loopne
or
cmp
inc
xor
xchg
add
popa
mov
notl
popf
mov
clc
cmc
xor
rorl
inc
dec
ljmp
or
mov
loopne
cmp
in
mov
push
mov
loop
sub
das
cmpsl
xchg
rcll
sbb
ds
test
mov
sbb
pop
push
hlt
fmull
or
xor
cmc
xor
in
out
sbbb
dec
lods
imulb
sti
mov
or
cwtl
sub
xchg
jle
xchg
or
fnstcw
insb
stc
gs
in
jno
sbbb
pushf
dec
rol
mov
out
push
dec
mov
lahf
jecxz
push
popf
sbb
pop
int
shll
ret
xchg
cmc
pusha
dec
movsl
ret
sbb
add
shlb
es
pusha
aas
dec
fldt
cmp
or
push
push
adc
test
iret
and
add
mov
mov
xchg
push
mov
fwait
cmpsb
sbb
lret
adc
repz
jne
xor
pop
lock
ds
jnp
mov
xchg
stos
cmp
test
pop
daa
pop
ror
xchg
pop
sub
xchg
sub
dec
cld
test
adc
pusha
push
cmp
dec
roll
mov
jo
mov
pop
inc
push
pop
jb
and
nop
add
and
jl
jb
int
xor
mov
lds
mov
in
push
ja
test
insl
mov
test
data16
xchg
divl
pop
mov
push
lods
or
in
or
aad
repz
push
out
loop
and
rolb
mov
rcll
addr16
push
inc
mov
cld
mov
and
int3
add
fadd
inc
dec
aam
movsl
ds
aas
cmpsl
lret
mov
aaa
outsb
outsl
or
jp
push
aam
rclb
xchg
jmp
rolb
notl
daa
loopne
and
loope
jo
jns
dec
lods
jp
in
mov
cmc
test
pushf
add
or
cmovb
mov
das
mov
insl
inc
xchg
mov
mov
adc
pop
iret
and
lock
or
sbb
xchg
xchg
xor
into
mov
iret
cltd
pusha
addr16
test
jge
fisubl
push
sub
inc
cmp
and
xor
sti
pop
je
aam
push
inc
mov
ret
adc
mov
daa
aaa
mov
std
orl
cmp
and
pop
xchg
loopne
or
add
jno
stos
shlb
out
inc
mov
loopne
cmc
jle
dec
xor
and
fs
cli
movsb
mov
pop
pop
mov
std
mov
add
push
scas
icebp
mov
or
xlat
jbe
stc
addl
xchg
je
repnz
push
loopne
xchg
xchg
ss
and
ljmp
in
ss
in
leave
jl
add
int3
popf
inc
pusha
test
push
mov
mov
and
stos
lea
jge
xor
subl
jle
mov
std
xor
mov
add
xchg
ja
push
jecxz
or
fdivrs
jp
dec
cmp
stos
jle
test
outsb
sbb
pop
fistps
jae
aaa
mov
jle
pop
jno
xchg
or
push
jp
xchg
cmp
adc
and
ljmp
add
cmpsl
imul
ret
imul
or
pop
mov
aaa
fldcw
and
xlat
push
cmp
test
cld
sub
ficoms
cmp
add
xchg
and
fidivs
les
lock
lahf
jae
xor
xor
pop
addl
push
jmp
and
pusha
sbb
imul
xchg
ds
and
mov
pop
mov
clc
cmpsb
dec
daa
lods
int
aaa
rorl
in
mov
jmp
xchg
mov
lods
out
in
nop
daa
lods
test
aam
loopne
popf
adc
ja
jno
test
ret
lahf
or
in
dec
jecxz
popf
mov
test
les
mov
and
insl
insb
jge,pn
out
fsubrl
int
inc
sbb
xchg
jge
rolb
inc
stos
inc
pop
push
mov
or
je
dec
mov
gs
dec
pop
aad
pop
cltd
int3
hlt
jo
ljmp
subb
mov
or
inc
testb
jbe
cmpl
repnz
xor
mov
fs
in
fdivs
test
sbb
stos
cmc
repnz
mov
lock
pop
add
ja
dec
movsb
aam
repnz
out
jmp
lret
jle
xor
inc
add
sub
lock
jmp
xchg
outsb
fadd
ds
mov
je
dec
jnp
lds
push
adc
mov
add
cmpsb
iret
dec
xorb
pop
scas
xor
std
ljmp
iret
in
dec
testl
dec
pop
push
jb
dec
imul
dec
jno
mov
lock
in
inc
mov
xchg
xor
cs
in
xchg
ret
sbb
adc
lret
mov
pop
pop
rcll
cmp
mov
mov
adc
inc
adc
mov
ffreep
add
clc
cmp
pop
in
and
xchg
lret
or
imull
or
test
mov
mov
sbb
pusha
mov
xchg
xchg
add
aam
ret
shr
outsb
jbe
add
ss
mov
and
cmc
pusha
dec
movsl
jp
mov
in
pop
dec
dec
and
pop
pop
push
mov
xor
shlb
das
mov
pop
push
outsb
jne
inc
lock
jbe
aam
cmp
lea
xor
adc
movsl
pop
movsb
lahf
cli
sbb
and
add
addr16
mov
nop
cmp
push
sti
and
or
push
stos
xlat
and
mov
mov
ja
fldt
bound
and
lods
cs
mov
push
jno
ja
adc
jp
inc
popw
stos
in
xchg
std
nop
inc
ja
loop
ret
cmc
dec
mov
sub
aaa
jmp
cmp
pop
addr16
push
rorl
aaa
mov
int
mov
jmp
cmpsb
aad
insl
sub
push
dec
and
push
ja
or
fsub
jecxz
push
jns
dec
or
fld
or
adc
shl
push
ljmp
rcl
sub
push
add
sub
and
jg
push
les
pop
sbb
loopne
and
cmp
xor
push
mov
adc
dec
or
mov
loopne
mov
jb
mov
pop
ss
leave
cltd
mov
jmp
imul
loopne
in
mov
mov
and
mov
dec
cmpsl
pop
adc
mov
mov
xor
adc
xchg
mov
popf
subl
aaa
fcoms
popa
pop
outsb
add
loope
jbe
xchg
sbb
sbb
inc
jecxz
push
test
rorl
pop
or
xor
orb
test
inc
push
xchg
mov
ret
cmpl
cld
mov
in
idivb
adc
cld
fucom
popf
push
mov
in
pop
push
jns
aam
or
add
xchg
dec
push
cmp
add
dec
ss
jno
fldt
sub
push
aaa
xchg
and
inc
imul
aam
pop
dec
outsb
or
repnz
xchg
inc
aam
orl
xchg
or
int3
push
inc
jo
pop
iret
mov
sub
fcomp
inc
mov
cmp
cmpsl
xchg
into
push
inc
and
xchg
jl
mov
out
dec
icebp
cmp
out
fs
mov
mov
push
test
mov
pusha
jg
mov
and
xor
and
or
aam
lcall
mov
ja
jns
pop
xchg
cli
aaa
xor
aaa
subl
inc
roll
pop
mov
shll
popf
add
sbb
lds
pop
dec
xorl
xlat
pop
andl
mull
add
xchg
push
cmp
mov
pop
push
add
cmc
aaa
sub
inc
pop
mov
lret
jecxz
daa
jb
addl
pop
mov
push
mov
xor
stc
or
adc
ss
adc
in
xchg
cmpsl
mov
mov
push
sbb
daa
push
test
mov
es
and
gs
mov
outsl
test
testb
movsl
div
xchg
mov
les
inc
xor
mov
adc
and
inc
je
aaa
push
in
jl
xor
push
xchg
xchg
xchg
xchg
xchg
adc
lea
aaa
pop
xor
pop
fucomip
ja
ja
les
int3
loopne
notb
hlt
cmp
add
xor
push
inc
movsl
and
push
imul
pop
mov
shr
inc
xchg
mulb
mov
push
hlt
push
in
push
push
xor
arpl
lahf
movsb
xchg
and
xchg
push
mov
inc
lahf
jbe
lds
inc
data16
sbb
pop
flds
pop
cmc
out
xchg
mov
movsl
mov
mov
shlb
pop
test
and
dec
inc
add
and
mov
xchg
cmpsb
push
out
movsb
and
daa
xor
and
inc
addr16
movb
aaa
les
aaa
insl
push
inc
ja
cmpsl
pop
mov
mov
inc
movsl
bound
test
and
addr16
push
mov
data16
or
frstor
hlt
and
sbb
shrl
leave
roll
mov
inc
cwtl
icebp
xchg
mov
je
mov
stc
cmp
jae
mov
or
mov
and
es
fildl
divb
lods
daa
inc
jns
nop
dec
xlat
leave
xor
jbe
dec
sbb
sub
ja
xchg
sbb
repnz
pop
push
test
push
mov
fldl
xchg
xor
adc
mov
adc
mov
pop
stos
xor
ja
xor
das
rcll
pop
mov
add
pop
andb
dec
xchg
pop
or
mov
xchg
push
pop
mov
sub
fsubrs
jmp
fdivrs
or
mov
inc
cmpsl
pop
inc
sbb
sbb
inc
dec
repz
fnstenv
loop
leave
sub
out
jecxz
sti
lahf
lahf
insl
ja
loop
xchg
push
xchg
mov
lods
adc
jbe
and
inc
xor
repnz
push
lret
das
notb
cmp
add
adc
ret
scas
in
mov
mov
lds
int
inc
push
push
add
cmp
clc
stos
mov
push
sbb
lret
xchg
rcrb
fisttps
mov
aam
jb
add
adc
and
mov
mov
pop
push
adc
cmc
or
and
scas
and
xchg
dec
aas
sub
stc
or
sub
pop
outsb
cmpsl
pop
mov
pop
push
dec
inc
gs
enter
inc
fsubl
add
cmc
and
int
mov
cmp
testb
ja
call
jle
push
test
dec
decl
cmpsl
int3
jge
push
ror
push
lods
ljmp
movsb
int3
into
pop
aam
xchg
push
in
and
repnz
cmpb
sub
popa
mov
fwait
daa
pop
mov
out
shlb
sarl
lock
inc
push
pushl
pop
or
in
aam
data16
repz
and
bnd
lret
cmp
mov
xchg
leave
outsb
mov
divb
xor
push
loop
adc
or
lret
or
pop
inc
add
cmp
cmpsb
push
les
mov
pop
lret
push
in
fs
or
xlat
sbb
push
xor
dec
sbb
aam
stos
inc
push
xchg
sahf
add
cmp
cmp
rcrb
iret
fisttpl
mov
notb
jl
xchg
addr16
lret
lahf
in
push
imul
sub
jl
mov
out
xor
mov
cld
cmp
out
rcl
push
mov
jmp
xor
and
stos
mov
xchg
test
pusha
and
jo
pop
pop
add
mov
jbe
xchg
in
mov
jno
addr16
mov
xlat
push
stos
aaa
shrb
mov
jb
shlb
xlat
dec
mov
ss
pushf
pushf
xchg
jbe
mov
jbe
cmc
xor
mov
call
xor
arpl
xor
mov
popf
jns
jge
dec
xchg
push
ljmp
std
jmp
loop
pop
pop
xchg
cli
adc
sbb
cmp
push
xchg
inc
or
and
das
pop
mov
icebp
sti
sbb
xor
stc
mov
push
mov
out
mov
xorb
sub
mov
dec
adc
sti
jg
and
aaa
repz
test
fcompl
jl
mov
popa
stos
push
movsb
dec
mov
in
adc
mov
ja
daa
adc
in
scas
sbb
test
ja
add
inc
inc
dec
imulb
pop
xchg
out
and
jbe
pushf
and
lret
shlb
pop
adc
mov
sbb
in
adc
dec
movsb
loop
fdivr
jmp
scas
cmp
arpl
jo
repnz
push
mov
add
or
stos
out
imul
cld
and
cs
rcll
push
push
and
daa
mov
pop
jmp
loopne
insb
pushf
movl
aam
sbb
jl
push
jb
xchg
cmp
dec
adc
daa
addr16
xor
ljmp
jp
cmp
cmc
sub
nop
mov
loop
es
hlt
mov
add
out
fcoml
jno
pop
mov
mov
mov
adc
cmovae
cltd
cmp
mov
jbe
pop
in
mov
pop
test
xchg
mov
push
jbe
adc
adc
and
inc
mov
cwtl
adc
push
pop
jbe
push
mov
jge
jmp
add
movsb
std
and
in
push
jecxz
mov
enter
pop
pop
push
mov
dec
xchg
xor
cwtl
leave
sbb
bnd
jmp
dec
aam
push
das
not
jno
cmp
mov
push
xchg
ds
push
rcr
in
pop
out
pusha
test
or
incb
incb
andb
sub
daa
repnz
addr16
ret
std
test
cmp
mov
je
xchg
mov
pop
cld
xchg
dec
dec
movsl
lahf
and
xchg
dec
xchg
movsb
and
adc
xlat
xorb
or
push
ljmp
and
cmc
jg
fimull
sbb
mov
sub
sub
sar
fdivrl
push
imul
ror
data16
addb
mov
fadd
out
orb
jge
mov
xchg
mov
mov
mov
loopne,pn
dec
addl
mov
iret
and
inc
sub
add
adc
inc
mov
stos
call
lret
loop
cmp
xchg
add
cmc
jl
dec
icebp
inc
sub
xchg
mov
inc
mov
addl
cltd
cmp
rorb
daa
or
mov
test
jmp
mov
jbe
inc
imul
cwtl
pusha
or
leave
cmpsb
dec
aaa
call
xchg
rorl
jno
shlb
test
stc
aad
sbb
test
xchg
mov
stos
mov
inc
rcr
mov
dec
dec
dec
xchg
stos
or
push
data16
jnp
or
stos
fimuls
inc
push
stc
ja
dec
xchg
xor
xchg
xchg
iret
push
notl
jmp
lahf
frstor
outsb
cmp
mov
mov
icebp
insl
or
rorb
jne
xchg
clc
sbb
lock
testb
std
rcll
daa
hlt
setbe
faddl
lods
int3
imul
ret
mov
add
fistps
jl
scas
push
aam
addl
or
sbb
and
mov
cmp
and
pop
mov
ja
xor
pop
dec
sbb
lods
push
adcl
daa
dec
xlat
sub
xchg
out
inc
mov
push
mov
and
add
adc
inc
test
pop
jno
lret
mov
aam
cmp
shr
mov
push
and
pop
flds
inc
or
cmc
push
xor
adc
dec
cwtl
cmp
xchg
aam
sub
loope
outsb
js
jo,pt
dec
iret
idivl
jl
dec
jbe
pop
dec
ja
outsb
cli
inc
ret
pop
mov
loop
xchg
nop
adc
jbe
mov
fldz
mov
ret
rclb
cmp
arpl
out
setp
jge
inc
jb
sti
mov
ret
mov
sbb
jmp
repz
push
sub
clc
push
outsb
push
dec
loopne
cmp
pop
cmp
aam
jne
fstl
push
push
cmc
pop
mov
out
testl
inc
xchg
mov
jp
in
popa
dec
test
mov
pushf
fnstenv
mov
cld
mov
mov
cld
cmp
adc
xchg
add
and
pop
jge
stc
inc
les
cmp
cmpsl
add
ret
leave
or
negl
push
in
cmp
push
pop
les
push
popf
flds
dec
mov
cmp
mov
lods
movsb
cmpl
or
add
mov
test
and
gs
add
dec
arpl
jno
stos
mov
xchg
lea
cmp
shrb
loopne
movsl
sub
dec
lods
ret
loop
jmp
push
fwait
sti
nop
data16
cmpsl
xor
int
test
or
movsbl
push
cmp
test
xor
dec
aas
push
mov
or
loopne
sub
xchg
inc
pop
iret
out
jbe
aam
je
lock
clc
adc
sbb
in
test
jecxz
add
inc
jg
jnp
jbe
or
mov
outsb
mov
push
enter
mov
sub
mov
and
xchg
mov
hlt
and
cmc
test
int3
mov
inc
push
je
dec
jno
sbb
push
scas
aaa
push
xchg
xchg
xlat
adc
int
outsb
adc
mov
cmp
push
inc
in
orb
xchg
ret
xchg
mov
push
mov
and
inc
xlat
mov
fnop
enter
add
pop
out
mov
pop
jne
xlat
popf
pop
lods
and
ret
pop
xchg
cld
std
sbb
bound
cmp
in
mov
mov
pusha
and
mov
mov
repz
pop
sub
inc
ja
cwtl
cmp
and
notl
sub
jo
ja
stos
loopne
shll
push
addr16
cwtl
outsb
in
pop
push
cltd
mov
xchg
test
test
xchg
adc
push
in
imul
out
pop
xchg
test
mov
inc
lock
scas
mov
hlt
pop
leave
insl
cmp
fwait
lock
scas
push
pop
subl
je
faddl
test
lods
push
and
add
outsl
xchg
outsb
mov
adc
stos
xchg
std
lock
not
insl
dec
jl
push
jge
fdivp
inc
ljmp
mull
es
popa
mov
dec
ss
push
xor
lock
lret
or
adc
in
mov
pop
ficoms
lods
sub
fs
cltd
sbb
ss
add
sub
push
dec
ret
repz
dec
lods
push
cs
call
mov
mov
push
in
mov
xor
sbb
pop
sbb
rorb
cmp
adc
xchg
fs
pop
sub
je
jle
or
sub
fidivrl
sar
mov
inc
mov
in
test
mov
dec
lock
lea
daa
or
dec
cmp
mov
mov
xor
inc
addl
leave
rorl
push
pop
bound
es
mov
shlb
cltd
mov
fdivl
push
mov
lods
pop
dec
hlt
gs
cld
mov
dec
pop
inc
or
lahf
mov
fidivs
mov
ljmp
jecxz
into
dec
stos
lcall
in
pushf
sub
mov
sti
pop
pop
jns
es
aam
aas
xor
pop
pop
lcall
ret
push
xorl
jbe
pop
dec
sub
jecxz
ja
outsl
ret
lret
adc
add
ret
cs
pop
dec
dec
push
aaa
aaa
xor
or
pop
add
mov
sbb
aaa
pop
sub
add
jo
sub
push
divl
pop
aad
push
or
es
sbb
pop
push
xchg
add
cmc
and
adcl
push
testb
push
adc
pop
gs
in
ja
xor
testl
sbb
xchg
ja
sub
cmc
fildl
inc
jne
sbb
xchg
andl
pop
dec
cmc
pop
ja
mov
push
cmc
fcomi
insl
jecxz
inc
or
test
sahf
fldenv
ja
aaa
ja
cmp
ja
test
push
cltd
mov
jne
pop
pop
push
notl
add
xor
cmpsl
je
and
cmpsl
bound
push
movsl
out
inc
dec
ja
cmpsl
ja
push
aaa
pop
push
ja
aaa
cmpsl
push
cwtl
xor
push
mov
push
xchg
dec
xlat
xor
not
mov
mov
xchg
aas
push
or
dec
in
aad
mov
adc
push
gs
cmpsb
cmpsl
or
je
xchg
xlat
aaa
test
push
adc
xlat
xchg
inc
xchg
pop
xlat
xchg
testl
and
xchg
and
addr16
adc
push
stos
add
xchg
movsl
aam
xchg
lds
iret
imulb
push
and
xor
mov
inc
and
add
ficoms
xchg
add
push
inc
daa
add
push
hlt
xchg
xchg
fbld
hlt
movsl
xchg
xlat
add
aaa
xchg
pop
inc
pop
inc
xchg
push
out
cmpsb
sub
dec
cmp
xchg
data16
inc
inc
movsl
insl
push
int
adc
inc
mov
add
movsb
jnp
mov
or
cmp
add
inc
sub
in
or
clc
jmp
pop
fcompl
pop
mov
mov
xchg
movsb
and
mov
imul
arpl
cltd
out
dec
addr16
mov
stos
fucom
aaa
mov
xor
dec
mov
mov
aaa
xchg
push
and
shlb
cltd
out
inc
and
lea
push
cmc
or
push
jno
or
ss
pop
lock
ffreep
push
test
xchg
cmpsb
pop
mov
mov
fnstenv
iret
xor
aas
test
cwtl
nop
jg
xchg
mov
lea
daa
inc
xlat
pop
xchg
mov
fcomp
mov
and
mov
sbb
stos
mov
incb
cmp
mov
inc
roll
lock
push
or
lea
enter
addr16
inc
jb
cmp
test
je
inc
pop
jle
cmp
pusha
test
adc
pop
dec
lds
inc
xchg
cmp
shl
loopne
mov
push
jbe
cmpsb
lds
in
in
and
adc
cmpsl
in
xchg
pop
gs
out
mov
lock
movsb
sub
or
movsb
subb
pop
or
iret
add
mov
sub
mov
xchg
push
push
xlat
imul
jl
mov
stos
fcmovb
xchg
xor
xchg
bound
jmp
in
xchg
jnp
ss
add
cmp
aam
mov
shl
pop
mov
push
inc
xchg
paddsb
lret
shlb
ret
enter
loop
xchg
ds
out
sbb
int3
mov
xchg
add
xlat
jbe
mov
or
mov
rcrl
xor
pop
lahf
jl
negl
sbb
pop
or
inc
lock
jmp
and
pop
lret
pop
jle
loop
sbb
mov
call
decl
inc
dec
adc
mov
mov
push
mov
bnd
pop
ss
mov
xlat
xchg
je
out
ds
popf
push
add
jg
xchg
push
jb
repnz
mov
push
xor
daa
and
jbe
inc
cmc
jmp
imul
mov
fdivl
idivb
loop
jbe
cwtl
xlat
add
dec
mov
stos
shlb
jle
call
add
dec
cltd
mov
daa
cli
jmp
stc
movsb
loop
inc
stos
and
jno
mov
imul
inc
cmp
xor
shlb
inc
pop
icebp
cmpw
jp
add
loopne
mov
sbb
or
mov
addr16
lcall
mov
iret
push
inc
add
adc
xchg
adc
ja
pop
cmc
aaa
mov
pop
mov
and
xchg
fsubrl
pushf
pop
mov
imul
sub
fcmovu
faddl
inc
xchg
iret
cmpsb
cltd
jle
mov
inc
inc
leave
xchg
push
mov
xchg
mov
orb
mov
dec
sub
sarb
xchg
cmp
mov
xchg
adc
pop
fildl
add
iret
pop
push
and
jmp
xchg
dec
enter
push
lods
insl
andb
push
sbb
pop
out
cmpb
jp
test
or
idiv
push
and
fdivl
stos
cmc
call
leave
and
cmc
adc
add
push
gs
into
and
jo
lahf
imul
cli
pop
add
mov
sbb
mov
jl
mulb
bts
push
push
sub
lret
hlt
mov
mov
cmp
shr
scas
push
sub
arpl
loop
add
mov
out
fucom
lret
aad
addl
fldcw
and
jae
fnstsw
pop
inc
mov
sbb
fs
test
add
cmp
adc
inc
test
sbb
and
inc
enter
adc
subl
fsubrl
out
in
outsb
enter
call
lahf
shrb
pop
std
cmp
je
xchg
mov
imul
mov
jne
jp
test
push
aam
push
push
jle
popl
jmp
std
inc
add
std
mov
test
fs
loopne
dec
andl
push
add
or
and
ja
pop
inc
sbb
out
push
icebp
dec
pusha
lock
mov
mov
mov
loop
hlt
rclb
leave
sub
mov
lret
jne
xchg
add
idivl
jle
adc
test
and
movsb
dec
xchg
cltd
cmp
or
xchg
xchg
sbb
gs
ret
adc
xchg
cmc
inc
xchg
jecxz
test
ror
cmp
push
jne
fdivl
js
lret
adc
mov
xchg
jb
push
pop
mov
cmp
loopne
mov
jg
sbb
and
movsl
sbb
and
cltd
call
test
cmp
mov
add
cmc
jmp
jbe
xlat
xor
pop
add
add
dec
scas
add
daa
inc
icebp
push
jle
call
xchg
add
add
jno
cmp
ja
and
mov
in
test
popa
xchg
pop
mov
add
mov
pop
sbb
adc
pop
mov
sub
pusha
dec
xor
aaa
xchg
add
jno
and
xchg
ss
inc
and
fs
add
xor
rcll
mov
xor
bnd
stos
dec
adc
test
lret
cld
test
cmp
adc
pop
clc
mov
daa
push
test
adc
aam
inc
movsb
xchg
jmp
push
and
pushf
out
inc
xor
mov
ret
pop
stc
lds
lods
aam
jbe
adc
bound
jo
adc
xor
xor
scas
fdivrl
lock
bound
pusha
mov
mov
pop
mov
stc
jle
test
jbe
jl
push
and
or
shr
lods
and
inc
xor
mov
and
js
cltd
sbb
xlat
and
pop
lods
mov
sbb
sti
sbb
inc
mov
add
imul
test
inc
sarl
pushf
add
jo
xchg
xchg
aam
xor
pop
stc
xor
pop
or
pushf
fdivl
or
and
or
mov
push
test
stos
orl
nop
pop
xchg
sbbb
dec
mov
aam
aam
sbb
xchg
inc
lcall
mov
mov
gs
cmpsl
xchg
fs
adc
mov
ficoms
jo
mov
jge
inc
test
inc
dec
mov
pop
lock
mov
mov
icebp
movsl
in
and
mov
adc
dec
and
scas
fptan
adc
inc
adc
bound
jp
xchg
repz
aaa
or
sbb
add
inc
mov
pusha
xchg
scas
testl
outsb
xor
lahf
xchg
mov
add
mov
jge
sbb
aam
jle
xchg
out
xchg
inc
fnsave
in
leave
and
push
pop
mov
cmp
mov
lock
cltd
pop
push
xor
mov
out
and
daa
xchg
mov
dec
pop
popf
out
fcoms
pop
ret
shll
adc
and
and
cltd
arpl
mov
repnz
ljmp
in
cmp
jo
pop
cmpsl
je
pop
adc
popa
icebp
add
out
push
lds
fsubr
dec
pushf
pop
imul
mov
sti
jb
adc
adc
pop
rorl
push
add
pop
loop
mov
adc
out
lea
pmaddwd
push
and
test
mov
je
lock
iret
mov
sbb
cmp
mov
jae
ret
sbb
test
jle
in
loopne
sbb
dec
ds
sbb
adc
loopne
adc
clc
ds
decl
or
aaa
jbe
pushf
add
push
gs
clc
sbb
xchg
xorb
dec
loopne
shll
mov
ja
xorb
xor
ss
xchg
das
popf
cmp
and
jbe
les
mov
lahf
jne
subb
push
sbbl
sub
add
les
mov
jae
js
pop
mov
xchg
pop
aaa
leave
sar
mov
das
xchg
cmc
push
mov
sbb
dec
sub
xchg
xor
inc
adc
jbe
push
mull
add
ja
pop
rcll
mov
pop
gs
or
lods
xchg
iret
mov
js
mov
repz
jmp
cmp
add
dec
pop
push
jp
cmpsl
hlt
dec
mulb
jle
and
jbe
fsubs
and
and
mov
minps
push
dec
mov
data16
cmpsl
out
cmp
lods
pop
in
pop
fisttpl
gs
cmpb
pushf
int
iret
dec
dec
jle
push
adc
sbbb
mov
jmp
lahf
pop
mov
pop
xor
sbb
mov
in
jo
out
add
mov
outsb
test
xchg
jns
adc
cmp
aad
ss
in
testl
adc
or
mov
aam
add
xchg
inc
mov
movsb
cmpl
mov
sbb
push
loope
sbb
push
and
push
mov
mov
jecxz
mul
arpl
fwait
push
jmp
add
sbb
cld
out
adc
dec
je
mov
out
shr
jp
int3
icebp
mov
jns
xchg
pop
sub
inc
mov
aaa
arpl
loop
mov
xchg
push
mov
sbb
pop
mov
hlt
cmc
xchg
adc
nop
pop
data16
in
and
adc
pop
fcomip
hlt
cld
and
inc
cmc
test
mov
lret
nop
xchg
pop
clc
imul
in
leave
mov
push
add
popf
jg
or
mov
push
leave
sub
popf
inc
pop
and
mov
xchg
dec
push
mov
push
xor
or
aaa
mov
pop
jecxz
in
mov
insl
divl
xchg
fildl
xchg
xchg
jge
push
les
cmpsb
outsb
loopne
lcall
adc
xor
mov
rorl
mov
out
cmpsb
jle
and
xlat
addr16
js
cmp
jb
xor
int3
imul
iret
fadd
pop
push
xchg
or
hlt
ret
push
aam
push
lea
hlt
idiv
or
dec
dec
leave
jg
in
xor
push
push
shlb
cmc
mov
or
mov
pop
xchg
int
pop
add
push
cmp
mov
bound
sbb
mov
cmp
das
xor
jno
pop
in
xor
jp
lods
sub
mov
inc
adc
xor
getsec
xchg
push
je
mov
aaa
faddl
sub
stos
and
in
filds
cmp
in
xchg
lea
mov
xchg
lcall
cmp
add
sub
add
out
mov
cmp
mov
int3
push
bound
or
out
cmp
mov
test
enter
stos
pop
jnp
sub
jb
inc
test
mov
std
jno
add
fidivrs
push
or
xchg
and
inc
dec
repz
xchg
icebp
and
or
ja
in
cmc
outsl
in
inc
xor
int3
push
inc
lahf
add
rolb
pop
and
mov
inc
pop
cmp
push
pop
inc
inc
xchg
stos
pop
cmp
les
and
out
or
lea
push
and
mov
mov
lea
aad
xchg
out
pop
mov
sbb
add
xchg
inc
cmp
xor
mov
aas
cld
xchg
push
push
lahf
dec
enter
dec
mov
cld
lea
xchg
add
pushf
cltd
lea
daa
and
dec
or
jl
repnz
mov
fcoml
push
or
xchg
pop
in
mov
xor
xlat
xor
xorb
sarb
cmp
jmp
stos
dec
dec
test
je
clc
adcl
dec
jo
lods
ja
sbb
push
dec
loopne
or
dec
scas
into
mov
ret
mov
cmp
push
mov
sub
loop
push
xor
out
dec
testl
cmp
cmc
pushf
jns
out
pushf
adc
je
jecxz
jl
xcrypt-ofb
cmpsl
stos
dec
xchg
lahf
add
mov
test
adc
or
jb
je
shl
mov
jg
add
stc
dec
fwait
sub
jecxz
sbb
or
dec
in
rcrl
pop
dec
ret
jmp
out
mov
mov
add
push
pop
imul
sbb
jecxz
dec
cmp
pop
rolb
loopne
hlt
inc
icebp
jo
jmp
aad
mov
call
psraw
pushf
insl
cmp
dec
outsb
push
bnd
sbb
shll
or
jo
push
outsb
mov
fidivrs
pop
mov
ss
cwtl
leave
sbb
add
xchg
iret
inc
enter
std
int3
cld
mov
loope
aas
sbb
mov
jmp
push
loopne
mov
add
dec
je
mov
enter
in
enter
xor
mov
sub
ss
and
adc
inc
and
shlb
aad
push
dec
int
ret
pop
mov
xor
das
push
hlt
nop
add
sbb
pop
adc
cmc
jb
xor
aad
icebp
cmp
in
shl
test
lods
jp
fstps
mov
push
jne
jbe
insb
push
in
loop
imul
fldenv
int3
mov
sub
lret
loope
ds
frstor
mov
rcrb
imul
sbb
aaa
mov
jmp
xchg
mov
sbb
dec
mov
mov
dec
cmpsl
shll
dec
dec
or
dec
call
fcoml
jb
cmpsl
rclb
dec
pushf
pop
test
scas
aam
add
sti
aad
adc
int3
int
xorb
xor
dec
insb
cmp
lret
in
adc
ja
xor
leave
data16
addr16
fisttpll
push
adc
mov
pop
and
xor
sub
sarb
and
loop
enter
cmp
or
add
into
arpl
xchg
fstp
xor
loope
and
or
cld
into
cmc
xchg
ficoms
mov
mov
add
movsl
sub
dec
jne
cltd
insb
cmpsb
push
xchg
fiadds
inc
pop
adc
inc
fwait
mov
icebp
push
xchg
loop
stos
shll
mov
sbb
sarb
mov
mov
pop
test
inc
dec
jmp
scas
pushf
mov
jmp
adc
push
lea
pop
mov
in
adc
sti
pop
cmp
js
jae
dec
xlat
cs
cmc
mov
jmp
je
jno
notb
mov
dec
cmp
inc
mov
dec
in
cwtl
pop
shll
imul
cmpsl
sbb
push
hlt
ss
ret
mov
pop
xor
mov
sarb
push
arpl
test
mov
mov
add
sbb
cli
in
sbb
pop
jae
mov
mov
dec
mov
xor
push
mov
jg
xchg
jnp
add
inc
push
sbb
xor
xor
ja
sub
adc
aam
push
test
gs
and
jg
pop
iret
mov
push
aaa
or
jmp
js
enter
xchg
push
sub
or
test
and
dec
in
loope
divl
mov
imulb
push
pop
or
and
push
scas
ss
sarl
cld
dec
or
out
mov
rcrl
icebp
dec
pop
rclb
mov
mov
mov
push
mov
mov
adc
in
and
mov
cmpb
aam
mov
xchg
inc
dec
outsb
loopne
xor
pop
cmp
cli
loop
adc
aam
aaa
sti
shrl
inc
or
cmpsl
lea
bound
pushf
ss
mov
push
mov
jbe
stc
rcrl
rcl
dec
bound
add
add
or
loop
stos
mov
and
or
sbb
adc
icebp
bound
and
ror
adc
cld
lods
or
repnz
add
sbb
dec
inc
rclb
stos
int3
fnstenv
rcl
cmp
push
sahf
ret
mov
mov
in
dec
or
pop
test
pop
add
out
stos
neg
push
xor
pop
cmp
gs
pop
daa
clc
fisttpl
adc
or
pop
xchg
cmp
adc
out
xor
dec
loope
mov
mov
and
mov
ud0
or
push
aam
stos
iret
idivb
jnp
adc
and
loopne
fdiv
or
stc
pop
xchg
mov
mov
ds
ja
cltd
jo
aam
leave
lods
enter
pop
xchg
shrb
mov
daa
mov
pop
cld
push
lcall
movsb
sete
rolb
outsb
out
inc
mov
dec
cs
iret
dec
cli
fidivs
daa
dec
les
cmp
xlat
adc
mov
and
cmp
shr
push
mov
xchg
pop
jne
bound
out
mov
adc
insb
kxnorb
imul
sub
repz
xor
test
sahf
xchg
or
xchg
lock
ja
pusha
ss
gs
cmp
les
das
jns
cmpsl
popf
mov
mov
inc
in
js
bswap
push
jbe
out
icebp
stos
push
movsb
push
call
cmp
push
push
mov
enter
sbb
sub
push
xchg
and
cmp
leave
mulb
into
stos
gs
add
mov
fst
lahf
mov
rcll
mov
adc
pop
cli
je
mov
lods
xchg
bound
lods
inc
mov
in
push
mov
lret
dec
mov
idivb
adc
sub
or
xchg
and
lret
test
popa
cld
ror
ja
sbb
fcoml
sbb
xchg
add
leave
cmp
pop
adc
xchg
fcoms
mov
jge
xchg
fs
mov
into
sub
mov
mov
jno
mov
sbb
add
pop
xor
xchg
and
clc
sub
mov
jbe
gs
pop
ss
nop
sub
cmc
pushf
adc
fsubl
rolb
jmp
in
test
adc
jbe
jno
fistpll
xchg
loope
xor
loop
mov
mov
pop
push
jmp
imulb
sub
fidivs
lret
outsb
and
mov
fisubs
mov
dec
rclb
in
cmp
imul
add
xor
leave
push
mov
fldenv
xchg
cwtl
imul
incb
push
sub
loope
pop
mov
stos
daa
cwtl
mov
jno
gs
jbe
inc
push
xor
out
jb
xor
push
xchg
inc
pop
inc
adc
push
push
in
gs
or
adc
xlat
ror
aas
mov
dec
or
sbb
mov
in
cmp
xchg
push
pop
subl
pop
sub
mov
mov
icebp
in
loope
fnstenv
enter
imul
push
xor
aaa
mov
jnp
add
pop
insl
cmp
jb
mov
call
xchg
dec
movsl
push
or
movsb
jne
cmpb
pop
ds
mov
pop
testb
aaa
fistps
xchg
inc
push
mov
loope
xor
xor
out
pop
and
jns
testb
mov
notl
jnp
mov
notl
daa
sub
xchg
test
push
aaa
inc
xchg
divl
out
iret
inc
pop
xchg
daa
sbb
test
xchg
fmuls
jbe
inc
push
aaa
ja
aaa
mov
gs
sahf
mov
testb
adc
scas
ss
mov
sub
aaa
gs
xchg
ja
or
pop
add
jne
inc
aaa
jbe
ret
mov
cmpsb
in
xor
xor
movsb
iret
shlb
dec
inc
pop
xchg
aaa
or
gs
fs
testl
ja
mov
inc
xchg
pop
push
xchg
scas
aaa
inc
test
xchg
adc
daa
add
sbb
xchg
xchg
pop
push
or
push
in
insl
inc
mov
mov
pop
and
dec
negb
xchg
cmc
push
in
xor
push
test
ja
push
hlt
ja
add
test
pop
xor
push
mov
xchg
test
push
mov
xchg
push
mov
push
and
sub
xchg
xchg
arpl
aaa
push
cmpsb
mull
add
add
and
gs
sub
aam
mov
inc
push
daa
adc
xchg
inc
xchg
xor
inc
dec
fs
push
push
hlt
aaa
mov
testl
jne
aad
testb
push
dec
push
das
push
hlt
inc
imull
xor
das
inc
xor
imulb
aad
in
push
and
pop
cmpsl
addr16
pop
stos
sbb
mov
push
jae
lds
popl
push
ljmp
push
xchg
and
or
xchg
cs
push
xchg
or
testb
hlt
dec
inc
je
getsec
push
out
pop
dec
mov
xor
adc
test
sbb
xor
lds
cmp
pop
sbb
leave
ss
cmp
loope
dec
mov
xor
xchg
cmp
rolb
hlt
push
jp
fld
imul
xor
int
mov
shlb
push
loopne
ja
push
inc
cmp
ds
pop
jmp
and
movsl
or
add
jo
sahf
add
jl
jle
push
loop
and
sub
add
mov
cmp
loop
ret
ja
adc
cmpl
fdivrl
and
test
sub
push
testb
js
sub
int3
and
xor
cmp
je
cmp
decb
add
jp
push
je
dec
mov
pop
gs
add
push
leave
test
and
push
jmp
lret
mov
sub
or
cmp
shlb
fmull
mov
repnz
sarl
jecxz
jbe
movsl
jbe
xchg
sbb
stc
cs
and
pop
push
dec
mov
push
mov
xor
lret
xchg
adc
shll
pop
inc
mov
mov
xchg
inc
jle
stos
jl
dec
add
pop
cltd
in
ret
insb
repnz
dec
subl
pop
sbb
xchg
pop
popa
push
ds
mul
aam
push
xor
xor
or
push
xor
xchg
nop
pop
jmp
push
inc
rclb
dec
cmp
xchg
xchg
xchg
jmp
xchg
xor
mov
repz
adc
mov
fmul
push
xchg
in
inc
or
inc
out
or
push
jl
cld
lods
jno
and
cmp
lods
mov
jo
les
and
in
mov
sbb
imul
pop
add
inc
imul
xchg
xor
ljmp
push
fsubrl
das
add
aam
mov
push
xchg
jecxz
rorb
sbb
hlt
pop
jo
je
and
xchg
cmp
cmpl
scas
int
dec
dec
mov
ret
xchg
es
add
sti
enter
xchg
movsl
movsl
adc
addr16
or
test
xchg
ret
pop
adc
imul
shlb
imul
push
imul
jbe
aaa
ret
dec
jno,pn
fldl
movsl
imul
test
stos
repnz
ja
cld
adc
xlat
mov
into
xor
sbb
and
dec
xchg
fisubl
xchg
inc
lret
daa
aas
xchg
bound
rcrb
mul
or
cmp
add
push
cmp
jo
or
jl
dec
sbb
je
aam
sub
push
push
lock
xor
jl
and
pushf
cmc
add
inc
cmp
loopne
repz
push
jge
cmpsl
push
fstps
pop
popl
outsl
and
neg
jo
sbb
dec
test
movsl
jmp
shrl
adc
inc
mov
jecxz
cld
cmc
shll
inc
inc
mov
or
cwtl
mov
insl
sbb
xor
cmpsl
cs
push
divb
stos
ret
dec
add
inc
or
and
inc
jmp
mov
inc
leave
cwtl
push
jp
pop
adc
dec
sbb
insb
jbe
xchg
test
pop
imul
pusha
mov
gs
inc
lcall
ja
jnp
cld
or
dec
fimuls
es
mov
lahf
push
adc
mov
add
lret
aam
pavgw
xchg
lea
mov
adc
mov
add
insb
enter
pop
push
test
stos
push
jbe
ja
jle
adcl
mov
xchg
popf
jl
mov
and
shlb
xchg
or
pop
dec
dec
rol
dec
gs
in
movsb
dec
pop
leave
cwtl
xor
adc
lret
mov
xlat
lret
data16
mov
jb
xor
aad
icebp
mov
lods
add
and
cmpsl
mov
out
cmp
aam
hlt
ret
push
add
int3
push
iret
test
adc
lret
sub
out
mov
mov
dec
clc
loopne
ss
mov
pop
test
in
mov
mov
jne
pop
cs
mov
jno
add
mov
pop
cmpsb
repz
ja
xchg
lea
inc
sbb
jp
jp
and
pop
ss
lock
int
imul
or
rclb
xchg
cmp
or
dec
insb
mov
xchg
push
sti
into
or
in
pop
testl
push
push
rolb
xor
mul
pop
int3
and
lcall
sahf
pop
lea
sub
pop
stos
jbe
and
mov
pop
xchg
mov
inc
pusha
jb
dec
rolb
ds
xchg
popa
testl
inc
stos
jo
jmp
mov
pop
sbb
sbb
cmp
pop
mov
int
out
inc
addr16
dec
xor
lahf
add
push
mov
and
push
inc
ror
inc
ss
or
xor
pop
lods
das
dec
and
add
scas
mov
sub
aam
cmp
test
and
daa
jae
mov
add
ret
fdivrs
out
mov
sahf
and
jbe
aad
loope
add
pop
gs
sub
or
xchg
push
cli
inc
xchg
dec
dec
std
jl
popf
xlat
popa
xchg
push
mov
cmc
icebp
jns
cwtl
sbb
push
cmp
dec
cld
mov
repz
call
sbb
int3
jge
push
push
xor
sub
mov
gs
sub
int3
push
enter
mov
xlat
and
clc
out
mov
cmp
dec
movsl
leave
and
dec
stos
popa
mov
cmp
push
xor
lds
xchg
aad
arpl
arpl
adc
push
fmul
ss
and
scas
out
imul
add
mov
sti
sbb
insl
in
xchg
sbb
jbe
push
lods
fimuls
sbb
ret
jmp
rolb
cltd
lds
in
xor
mov
inc
fisttpl
xchg
aas
shlb
ficompl
jo
jae
shlb
and
insb
inc
lds
mov
add
dec
data16
pop
jmp
push
cmp
mulb
lods
pop
movl
rcrb
mov
aas
test
mov
mov
pop
mov
dec
jle
in
mov
add
imul
xchg
add
testl
arpl
adc
jo
lret
pop
push
ds
cmp
mov
mov
negl
jno
stc
ret
nop
adc
adc
dec
fdivrl
xchg
imul
mov
pushf
cmp
push
sub
and
cmpsb
dec
sbbb
or
fisubs
fiadds
push
xchg
and
dec
and
int
cmp
xchg
aad
enter
fdivrl
sahf
test
push
int
dec
xchg
pop
and
inc
repz
adc
xchg
cmovs
ja
mov
jbe
jecxz
int3
out
mov
sar
lds
xor
mov
mov
xor
sbb
loope
das
or
jno
dec
into
pusha
es
mov
xor
or
add
aaa
int
xchg
in
xchg
or
inc
xchg
in
jo
mov
in
jp
and
inc
xchg
test
shlb
push
cs
cwtl
enter
cmp
mov
adc
int3
sbb
es
out
ds
std
and
push
daa
mov
dec
push
and
add
xor
faddl
dec
mov
inc
orb
sub
fdivl
pop
adc
stc
xchg
xchg
sub
xchg
dec
pop
test
aaa
lcall
call
or
push
loopne
clc
mov
adc
inc
test
pop
gs
in
or
stos
pop
loopne
les
fidivs
mov
xchg
mov
mov
add
push
les
cs
out
loopne
mov
adc
lock
inc
shlb
ljmp
sti
inc
adc
xchg
lahf
mov
aaa
xchg
pop
mov
cli
mov
adc
xchg
das
push
jae
push
enter
nop
cmp
mov
sub
lods
cs
jno
scas
mov
cmp
xchg
std
or
test
sub
movsb
and
jne
iret
xchg
ds
and
or
out
aam
cmp
push
jp
pop
xchg
xlat
nop
mov
mov
push
add
jbe
fimuls
add
pop
sbb
xchg
jle
jns
add
adc
hlt
gs
and
in
or
dec
sub
mov
jge
jns
dec
inc
aam
push
pop
dec
mov
jl
mov
mov
cmp
cmpsl
iret
inc
cs
and
ja
mov
dec
adc
ret
push
xchg
sbb
gs
sbb
inc
mov
lock
or
nop
dec
icebp
clc
mov
cmp
and
cld
inc
addr16
xchg
sti
pusha
outsb
lahf
and
adc
mov
in
and
cld
and
testb
inc
in
stos
add
faddl
mov
or
mov
and
pop
dec
fisubrs
movsl
ficomps
sbb
xchg
and
mov
imul
jo
adc
lock
ret
jmp
jnp
arpl
cld
push
movsl
push
mov
aaa
or
mov
add
scas
fidivs
lret
xchg
cmp
adc
xor
push
add
mov
fmulp
xchg
add
pop
pop
test
test
aas
in
cmp
or
or
fistpll
cmp
or
imul
and
sub
push
mov
lds
fstl
add
cmp
mov
fwait
dec
fisubrl
pop
jbe
rcl
aad
enter
pop
mov
and
daa
scas
in
ret
pop
mov
jb
ja
cli
mov
xor
mov
pushf
daa
pop
cmp
fdivs
ja
or
adc
xor
hlt
aas
xchg
mov
push
in
sbb
push
mov
out
push
jle
es
push
das
sbb
xchg
sarb
fistpl
daa
rorb
pop
enter
push
lret
adcl
daa
stc
cmp
pop
cwtl
jne
sahf
adc
jno
lret
loopne
into
xchg
pop
dec
idiv
mov
or
mov
aaa
int
lea
jnp
or
inc
sbb
sbb
add
push
or
roll
jmp
mov
jae
xchg
or
jl
int
sarb
xor
stc
sub
pop
test
push
mov
mov
sbb
lahf
and
mov
sbb
fdivl
xor
mov
and
data16
xor
out
enter
add
nop
stos
inc
sub
mov
loopne
pop
aam
jo
fcmovnbe
cmp
in
rclb
mov
enter
nop
mov
and
jbe
aad
shr
int
dec
mov
sub
loopne
pmulhw
lods
pop
jge
mov
xor
push
cmp
movsl
fcompl
std
xor
fwait
mov
fwait
add
pop
inc
jge
cmp
in
add
xchg
jl
jp
test
or
andl
sbb
push
adc
insl
fcomip
cmpsb
or
idiv
push
mov
imul
mov
dec
rcll
inc
lods
ret
mov
fstps
pop
or
mov
lea
adc
jmp
add
aam
sub
imul
bound
es
jl
mov
stos
inc
pop
popa
sahf
jge
inc
fnstcw
mov
lret
ja
cmpsl
lahf
insb
loopne
notb
gs
or
sbb
orl
aam
cmp
lds
sbb
mov
pop
xchg
xor
mov
adc
mov
inc
shlb
pop
daa
jmp
outsb
sub
sbb
sub
jne
sub
adcl
and
push
popa
aas
and
mov
xor
loop
jns
dec
cmc
mov
adc
cmpsb
repnz
mov
ret
pop
push
fmuls
int3
push
test
ss
sbbb
lea
mov
shll
pop
adc
scas
xor
fisttpll
mov
movsl
jg
mov
pop
mov
gs
lods
push
ret
out
adc
xchg
popa
mov
nop
hlt
jle
mov
xchg
adc
addb
mov
sbb
and
clc
packuswb
aaa
xor
mov
insl
push
push
clc
or
test
pop
add
or
div
sub
or
lods
push
fisubrl
sbb
xor
vmptrld
mov
xchg
lahf
in
es
mov
sbb
fwait
dec
xor
push
jp
vmread
imul
add
mov
hlt
push
aam
loope
aas
xchg
pop
mov
leave
adc
xchg
xor
mov
test
xchg
sbb
ud2
cmp
stos
testl
jno
xchg
mov
xor
fstpt
aaa
lret
test
in
mov
jbe
in
push
mov
jb
shll
out
or
call
testb
push
pusha
mov
add
adc
and
xor
or
mov
push
dec
pop
or
and
imul
jmp
loop
outsl
call
out
mov
scas
divb
xchg
test
lods
cwtl
nop
divl
sub
add
jge
xchg
jbe
in
xchg
inc
test
pop
leave
pop
and
pop
sahf
sub
stos
jnp
aaa
iret
jo
cmovl
imul
add
xor
xchg
sub
add
rcrl
ds
dec
xchg
jle
mov
and
or
push
rclb
inc
and
rcl
dec
decb
lcall
xchg
ljmp
sbb
or
jne
stos
rol
inc
ret
dec
mov
lock
ja
xchg
push
out
insb
test
mov
aad
loope
cld
push
roll
dec
push
cs
push
lret
sub
jg
dec
pop
ja
xchg
add
push
sbb
xchg
inc
push
aad
xorl
xorb
add
pushl
dec
andl
jne
out
add
xor
mov
mov
out
js
outsb
add
mov
xchg
jge
arpl
or
jbe
push
adc
gs
sbb
xchg
push
or
repnz
and
es
mov
div
sbb
jno
push
xlat
mov
mul
mov
adc
push
jbe
scas
scas
cmpsl
cmp
pusha
mov
dec
mov
sti
adc
or
mov
pop
dec
jle
int3
les
int3
cmp
lcall
test
adc
jmp
jno
jne
add
or
mov
pop
daa
idiv
out
xlat
sbb
stos
inc
and
adcb
adc
pop
test
dec
xchg
jnp
aam
pop
mov
dec
or
jo
mov
lods
push
adc
push
mov
push
mov
sbb
mov
rcl
cs
jg
xchg
mov
inc
jne
push
dec
cmc
cmp
std
xchg
sbb
ja
popa
ljmp
insb
push
mov
cmp
cmp
int
adc
dec
ja
lock
dec
jmp
pop
xchg
sbb
mov
cmpsl
cld
mov
js
int3
xchg
xchg
add
mov
add
iret
push
pop
repnz
and
push
push
stc
dec
lds
xchg
test
iret
or
int3
cmc
aaa
mov
ss
imul
pop
pop
lock
inc
lcall
xchg
inc
popa
je
sbb
or
add
out
add
mov
ljmp
popf
or
stos
outsb
cmp
adc
sbb
and
mov
dec
pop
cmpsl
insl
ror
outsb
lahf
jmp
call
pop
aaa
mov
mov
adc
push
nop
pop
xor
rcr
add
cmpsl
fldpi
cmc
out
ja
dec
push
fiadds
push
pop
pop
mov
pusha
inc
push
pop
push
cmp
push
insl
xchg
testb
push
outsb
cmp
inc
ds
mov
movaps
or
cmp
xchg
cmpsl
popf
js
cmp
in
add
fistpll
rolb
cmpsb
rcll
mov
xchg
add
mov
pop
nop
rclb
push
inc
cmc
dec
lock
mov
jbe
cmp
mov
dec
push
sar
mov
out
int3
pop
xchg
mov
pop
mov
out
test
test
and
push
mov
dec
cmc
std
mov
mov
push
push
push
or
dec
cli
xchg
jmp
pop
mov
dec
inc
cmp
imul
add
add
and
mov
adc
andl
push
mov
mov
ja
sarl
mov
cmp
add
stos
inc
push
leave
or
xchg
inc
pop
mov
mov
sbb
pop
pop
aad
loopne
pop
and
inc
inc
jae
cmpsl
push
and
repnz
push
push
leave
out
loopne
cmpsl
sbb
sar
cmp
notb
lret
xchg
or
adc
lret
inc
mov
push
pop
dec
les
out
sub
push
pop
and
cld
pop
std
push
gs
push
sub
ds
shr
and
dec
or
stc
adc
insl
inc
jne
push
jle
jb
xchg
stos
aas
jno
lcall
fmulp
pushl
aaa
and
orb
gs
cmp
and
push
div
dec
and
inc
add
xchg
and
aam
mov
pushf
pop
daa
loope
mov
addb
mov
enter
dec
mov
popa
gs
or
js
out
sbb
adc
push
ss
stc
xchg
fdiv
loop
sub
inc
cld
dec
jl
dec
sbb
sub
pop
mov
je
ds
ret
aam
insb
and
nop
dec
fs
or
rclb
sbb
mulb
jo
add
andb
movsl
lcall
outsb
cmp
cmp
push
fldl
dec
inc
mov
jnp
cld
or
dec
xchg
and
out
lods
in
and
icebp
pop
mov
jo
scas
xor
lods
add
pop
jl
xchg
std
lds
sub
add
dec
inc
jg
in
lods
sarb
lods
or
adc
imul
jb
mov
pop
pop
inc
jo
xchg
stos
cltd
jl
cmp
xchg
mov
pop
sub
movsb
xchg
jge
jge
jp
aam
pop
cmp
stos
stos
xchg
push
jbe
mov
xchg
ret
jmp
mov
cmp
xor
adc
cld
jbe
xchg
jle
sub
adc
xorl
fs
push
sub
add
insb
xchg
add
into
push
repz
and
ds
push
mov
mov
inc
jl
adcb
and
cmp
out
mov
sarb
sub
push
aaa
mov
or
adc
or
subl
sbb
jmp
div
rcll
movb
mov
or
adc
mov
sbb
ret
add
pop
adc
in
sub
xor
xor
or
std
xchg
add
cld
test
mov
jecxz
lods
popa
cwtl
bts
js
xchg
jmp
xor
sarl
xchg
adc
rclb
sub
inc
or
jbe
std
cmp
push
push
xor
mov
and
lock
mov
pop
pop
sub
pop
inc
je
add
push
pop
adc
sub
ljmp
rclb
xor
xchg
ds
sbb
mov
cld
and
stos
ja
pop
xchg
cmpsl
mov
mov
fwait
push
int3
sub
push
daa
push
pop
push
fdivr
iret
ret
push
dec
fadds
fsts
into
jl
jmp
jne
xchg
roll
filds
push
push
notl
outsb
fadds
sbb
xlat
add
inc
mov
pcmpgtw
pop
shlb
xlat
and
xorl
mov
mov
dec
xchg
mov
pop
cmp
or
push
rorb
xchg
mov
mov
sub
or
sbb
cmc
jo
stos
jmp
lods
xchg
loope
dec
fs
movsl
pop
mov
cmc
test
leave
xorl
leave
or
mov
stc
divb
loop
jnp
aad
xor
ret
push
mov
and
out
push
cli
rorl
mov
das
pop
in
cmp
les
sbb
scas
aas
cmp
sbb
push
fs
pop
adc
out
fdivrs
psubq
sbb
mov
inc
adc
cli
outsl
imul
into
cmp
pop
mov
add
arpl
jbe
stc
dec
out
aaa
or
imul
test
jecxz
add
in
mov
and
insb
dec
adc
pusha
jp
imul
or
ja
xchg
xor
pop
outsb
xor
aaa
test
xor
icebp
pop
sbb
leave
xor
stc
pop
or
rorb
hlt
das
pop
cltd
jle
mov
push
testb
daa
rcl
or
pop
cmp
jae
data16
insl
push
iret
or
lods
fmuls
imul
and
insb
jl
loopne
jp
add
mov
cmp
pop
add
mov
das
sbb
push
jmp
xor
jge
scas
or
ss
hlt
sub
xchg
cmp
ja
inc
add
fs
mov
xchg
fisttpl
or
inc
sbb
xor
sbb
pop
fidivs
dec
add
xlat
mov
in
std
rcll
inc
aad
hlt
insl
dec
dec
pop
or
xorps
add
xchg
popf
insl
inc
int3
sub
push
aas
hlt
scas
je
adc
mov
or
stos
mov
addb
daa
inc
dec
outsb
cmovne
xchg
sub
adc
dec
cmp
addl
sub
dec
in
pop
fxam
jmp
mov
sub
lods
stos
jae
faddl
das
xor
sub
mov
cmp
inc
pop
sbb
inc
hlt
outsl
adc
xlat
fs
jae
insb
sub
jl
das
daa
pop
xchg
movsb
lock
mov
divw
pop
mov
idivl
in
add
sarl
or
stc
push
sub
mov
pop
pop
fcompl
or
scas
pushf
aaa
add
test
aaa
push
and
sbb
jns
fiaddl
pop
mov
cmpsb
sub
inc
aam
pop
push
insb
loopne
outsb
mov
in
cmc
dec
outsb
adc
dec
add
mov
ja
fisubl
xlat
lret
ret
ja
add
lock
cmp
daa
pusha
push
stos
dec
and
shrl
sbb
xchg
add
inc
addr16
pushf
loopne
testb
push
mov
imul
test
sbb
dec
fimuls
hlt
sub
inc
into
lock
push
add
adc
out
mov
rclb
adc
pavgw
rorb
hlt
lods
movsl
adc
pop
ret
aaa
hlt
inc
mov
jno
shl
dec
pop
sub
scas
ljmp
insl
mov
aaa
cmp
int
scas
inc
jbe
ljmp
cmc
mov
add
fs
add
mov
jb
xchg
xchg
xchg
in
inc
sub
jae
xchg
and
popa
rolb
push
jg
pop
shll
add
mov
lods
push
outsl
pop
fdivrl
xchg
jg
imul
scas
xor
xchg
add
int3
fsub
sti
jns
lods
pop
and
out
pop
dec
iret
push
pusha
stos
hlt
sub
ja
shlb
mov
out
hlt
outsl
xchg
or
cmc
xchg
cmp
xchg
push
cmp
inc
in
sbb
and
bndstx
ss
add
lea
cli
and
daa
sub
add
cmpsl
dec
hlt
lods
add
daa
imul
jge
jl
iret
jbe
add
lahf
xor
out
mov
jo
ljmp
push
or
add
outsb
and
jae
outsl
push
call
mov
test
es
xor
sub
bswap
mov
pop
test
hlt
sub
dec
cld
aaa
ds
hlt
cs
dec
rcrl
insl
inc
jbe
jp
int3
stc
int
imulb
aas
stos
lds
push
mov
outsl
dec
sbb
daa
xchg
jmp
lods
pop
pop
push
sbb
mov
lock
jae
out
or
and
daa
fistpll
jmp
cltd
push
insl
outsl
dec
mov
scas
jge
push
jb
dec
sub
hlt
ret
xchg
adcb
lods
dec
outsb
push
mov
aaa
sub
mov
andb
hlt
in
int
shlb
jbe
sub
pop
or
mov
jmp
xchg
adc
xchg
pop
in
dec
jl
fimuls
lods
lods
sub
stos
pop
dec
add
sbb
mov
mov
mov
pop
dec
cmc
gs
xor
arpl
xor
sub
notb
fisttpll
imulb
xorl
pop
mov
lods
push
lea
ds
fadds
lret
bound
addl
cmp
inc
loop
sbb
and
push
andl
dec
outsb
daa
sub
scas
comiss
inc
add
hlt
xor
dec
hlt
sub
adc
mov
imul
dec
imul
dec
mov
jae
jle
jo
cs
pop
and
and
aaa
nop
adc
lahf
enter
lods
push
pop
xor
pop
pop
outsl
cmc
adc
mov
jbe
jp
mov
imul
das
mov
lret
repnz
out
pop
inc
mov
rcl
inc
daa
mov
pop
into
sub
pop
rcrl
xchg
sbb
pop
add
ds
cltd
or
lods
push
pop
xchg
fcmovnb
pop
stos
mov
and
imull
lods
add
fists
rorb
cmovnp
hlt
xchg
mov
ja
jo
outsb
aas
daa
push
aaa
pushf
xor
hlt
lods
adc
mov
outsl
ds
insw
inc
ljmp
sbb
add
dec
out
sbb
mov
ret
mov
cmpb
fwait
xchg
inc
cld
pop
sahf
xlat
ljmp
lret
loope
pop
push
por
sub
outsb
iret
aas
mov
ds
pop
faddp
sbb
mov
hlt
das
jb
imul
aas
pop
sbb
jae
dec
mov
hlt
insb
cli
push
inc
aaa
cmp
ja
lods
add
test
scas
mov
inc
or
cmp
cmp
xchg
rorb
orps
rol
or
out
add
xlat
pop
jbe
scas
or
push
add
fwait
pop
fstps
hlt
insl
inc
and
cs
sbb
xor
aas
hlt
insb
add
notl
outsb
add
and
adc
sbb
cmpsb
inc
lret
mov
sbb
rclb
hlt
roll
call
sub
sub
out
sarb
arpl
fsts
push
iret
fcmovbe
and
jbe
dec
in
int3
loop
aaa
pop
cltd
div
insl
dec
iretw
xchg
icebp
push
out
frndint
insb
aaa
pusha
mov
sti
sub
daa
ja
ficoml
dec
loop
rorb
add
inc
and
aam
into
negb
push
or
push
jg
mov
jnp
mov
dec
outsl
add
not
adc
pop
cmp
pop
aad
xchg
loopne
in
push
or
fidivrl
test
push
push
pushf
sahf
das
mov
xor
cltd
xchg
mulb
jge
jmp
daa
jp
in
push
lahf
cmp
out
je
jl
jmp
lods
push
mov
fldl
in
neg
out
jmp
std
xorb
xchg
push
fistps
xchg
sub
icebp
mov
add
nop
dec
hlt
das
mov
pop
call
out
decb
jbe
jns
sbb
sti
jnp
fcmove
neg
sub
push
mov
pusha
cmp
stos
inc
hlt
insb
loopne
sahf
insl
pop
fs
add
sbb
idivb
lcall
lret
daa
sarb
inc
mov
into
push
adc
fsts
xor
xor
sbb
clc
jno
adc
push
hlt
scas
enter
sbbl
add
es
and
inc
push
out
jmp
sub
popa
push
dec
out
in
mull
mov
imul
and
fs
cmc
push
mov
push
lods
bswap
jne
xchg
int3
adc
in
cld
outsb
rclb
pop
mov
out
fcompl
sub
sbb
mov
inc
push
in
jle
scas
clc
pop
mov
sub
mov
hlt
das
in
jp
jo
jbe
and
xor
add
enter
lods
xor
loopne,pn
daa
rcl
pop
add
enter
into
add
sub
mov
sahf
xor
or
inc
dec
inc
nop
dec
xlat
sub
xchg
jns,pt
fistps
xlat
pusha
std
cltd
push
dec
stos
testb
dec
adc
pavgb
lcall
std
pop
mov
jle
sub
pusha
xchg
jmp
mov
scas
in
cwtl
notl
jb
mov
hlt
lods
clc
xchg
sub
push
jl
mov
cmp
out
fdivl
push
sub
sub
mov
mov
dec
xchg
sbb
add
xchg
es
fistpl
dec
lock
imul
mov
dec
aaa
ret
sub
sti
cld
adc
aam
pop
movsb
cmpsb
jbe
jp
in
mov
adc
lods
fdivrl
xor
outsl
aad
test
aaa
rorb
push
lahf
ds
sub
mov
mov
daa
lock
pop
sar
pop
shrl
js
hlt
insl
in
addr16
jge
jo
dec
sbb
repnz
in
fiaddl
ljmp
fldl
pop
addr16
push
mov
je
add
dec
clc
or
sbb
cltd
push
cld
push
adc
jb
mov
in
or
xor
inc
in
sbb
mov
push
pop
sbb
jno
jns
dec
in
enter
repz
leave
xlat
jbe
dec
insl
in
pop
push
lods
cmc
cmpsb
and
or
ret
data16
lods
aam
cmpb
ljmp
cmp
add
mov
and
dec
push
in
fadd
insb
enter
mov
pop
imul
popa
movsb
mov
sti
dec
push
add
pop
xchg
sbb
pop
mov
pmulhuw
pusha
mov
ret
add
pushf
jne
mov
mulb
loop
test
push
mov
mov
dec
insb
in
daa
test
fs
lock
pop
lahf
mov
add
push
testl
cmpsb
test
loop
dec
sbb
dec
lods
call
add
inc
sub
sbb
sub
dec
add
jbe
dec
scas
loopne
shlb
into
push
es
sbb
xchg
out
and
loopne
cmp
fsubl
andl
push
dec
movsb
aam
lods
imul
jecxz
insl
mov
sbb
xchg
fadds
pop
jmp
cltd
add
ret
push
clc
imul
sub
add
mov
dec
and
xor
xchg
cmp
pop
mov
add
aam
jmp
cmc
push
and
std
cmp
fisttps
adc
jbe
dec
out
in
dec
cmc
aaa
arpl
test
lea
shrb
xor
xor
mov
inc
pop
loopne
aaa
js
or
in
clc
or
jo
cmp
inc
sub
hlt
in
cmpsb
jb
pop
pop
add
shrb
imul
add
arpl
out
sub
imul
xor
dec
hlt
in
adc
mov
cli
mov
idivl
sbb
dec
cmp
fsubl
imul
ret
insb
dec
loopne
add
and
hlt
insl
fdivr
inc
inc
mov
sub
xor
movsl
hlt
sub
fwait
xchg
and
cmp
sbb
pop
mov
jge
dec
shrb
adc
shlb
aam
pop
xchg
ja
cmp
stos
jmp
dec
add
loopne
les
sbb
or
push
cmc
and
add
cltd
notl
scas
pmulhuw
pop
xor
stc
xor
dec
insb
sub
pop
add
icebp
sub
div
inc
sbb
dec
or
pop
movsb
fs
imull
mov
pop
cwtl
ja
rorl
jg
and
mov
mov
ss
lods
adc
add
ja
div
popa
dec
data16
popa
scas
lds
add
push
jle
mov
clc
push
insl
jbe
inc
xor
pmulhuw
dec
xchg
add
xor
add
jno
shl
clc
mov
or
sub
ret
dec
in
or
sbb
insb
aam
xor
neg
outsb
adc
inc
jecxz
addl
es
ss
xor
inc
testl
fimull
loope
daa
ret
out
shr
inc
adc
sbb
in
push
mov
xor
in
mov
in
stos
xchg
dec
mov
ret
jg
data16
cld
clc
daa
xchg
adcb
sub
aas
vpshld
or
psubb
test
lods
aam
dec
aaa
arpl
xor
lret
lea
or
push
mov
fstl
mov
out
icebp
xchg
inc
adc
scas
or
mov
or
push
fstpt
pop
xor
in
hlt
cld
sub
insl
aam
mov
add
jns
jmp
pop
sbb
xchg
sahf
pop
hlt
dec
in
cld
int
inc
into
sbb
cmpb
fidivs
sub
stos
add
lods
mov
adc
mov
or
clc
push
pushf
sbb
enter
cld
es
jno
dec
dec
hlt
insl
sbb
sbb
dec
cmp
loopne
shl
pop
xor
sbb
mov
push
pusha
and
ret
jns
data16
add
lock
ljmp
adc
dec
in
cld
repz
les
or
call
sub
mov
idivb
stc
pop
push
cld
and
aaa
and
or
xor
imul
ja
mov
pop
push
ss
jl
pop
mov
loopne
and
sub
cmp
inc
fdiv
aam
mov
dec
mull
aas
jg
jae
jbe
enter
xor
mov
pop
cli
fidivl
sbb
cmp
int3
adc
in
je
add
dec
scas
cld
sbb
bound
xchg
mov
jmp
jp
mov
rcl
mov
mov
jbe
sub
jp
mov
cmp
add
testb
or
hlt
jmp
data16
dec
pop
dec
hlt
jl
imul
sub
push
cmpsl
stos
jbe
lods
jo
test
xchg
sub
sub
jnp
pop
adc
insl
ja
and
out
pop
sbb
sub
sbb
cmp
pavgb
stos
dec
and
hlt
das
in
loop
popf
outsb
lods
hlt
cs
xor
jbe
fildll
mov
stos
dec
cmc
in
loop
xor
or
xchg
aam
push
add
xlat
xchg
dec
inc
aas
out
std
mov
aam
lods
clc
pop
repnz
jb
hlt
in
in
add
je
or
test
int
or
mov
icebp
lea
fnclex
dec
mov
aad
mov
and
pop
dec
hlt
xchg
stc
movsl
push
sbbl
xor
push
repz
clc
xchg
fwait
dec
mov
roll
push
aas
fsubrs
out
xchg
xlat
pop
fdivrs
sub
jne
mov
in
mov
sbb
stc
bound
hlt
jp
or
mov
and
call
enter
lahf
mov
out
pop
cmp
lock
mov
add
scas
data16
xchg
lret
clc
int3
cmp
push
pusha
addr16
call
sbb
pop
sti
jecxz
fimuls
lods
loopne
sbb
add
test
inc
jbe
clc
and
lods
jmp
sbb
jo
or
dec
sub
dec
sbb
faddl
inc
push
cmp
pop
xchg
std
adc
jg
in
pop
insb
sbb
fisttps
sub
mov
dec
out
in
jno
cmpsb
add
add
or
outsl
cld
push
pop
mov
xlat
hlt
out
aam
in
lret
add
into
or
adc
mov
pop
rclb
jae
leave
dec
jne
movsb
lods
jg
mov
jbe
aas
iret
mov
jle
dec
das
fadd
pop
aas
or
cltd
add
dec
dec
notb
out
aaa
inc
push
mov
add
cld
cmp
inc
dec
es
leave
or
lock
sti
sahf
xchg
lock
push
std
ljmp
shrl
enter
aaa
sti
push
aas
pop
cmp
adc
icebp
or
fcoml
or
jae
xchg
int3
mov
lock
test
test
rcrb
xorb
cli
std
aaa
ss
hlt
sub
outsl
dec
inc
cmp
push
add
cmp
not
sti
pop
jnp
fdiv
dec
lods
add
icebp
inc
fidivs
jns
subl
leave
popf
cmp
in
sbb
cli
add
xchg
mov
ss
pushf
cmp
arpl
pop
ljmp
enter
jo
xchg
inc
sub
pop
push
push
loopne
iret
add
cmpsb
gs
loope
in
loopne
mov
pop
scas
xchg
cmpsb
xchg
or
scas
lds
dec
and
lods
dec
out
in
mov
sub
bound
ss
inc
std
sub
fwait
aad
ja
jne
sub
inc
imul
jp
clc
nop
xlat
sbb
outsl
notb
in
mov
hlt
cwtl
out
mov
sub
fcmovnu
in
jg
dec
hlt
mov
aas
jne
insl
sub
not
mulb
xchg
pop
mov
jg
push
sti
loop
sub
add
xor
imul
ja
rcll
add
mov
mov
and
aam
pop
mov
loope
add
int
lods
and
clc
ficomps
lock
adc
fdiv
dec
jnp
test
fucomp
shlb
mov
jo
pushf
cmpsl
pop
imul
mov
lcall
ja
lds
adc
jbe
shl
push
mov
mov
sti
and
test
add
or
fs
push
std
addr16
add
ret
xchg
int3
inc
hlt
jns
xchg
subl
xchg
jmp
push
icebp
hlt
xchg
jbe
je
dec
add
jp
xchg
cld
pop
cli
jl
pop
and
or
xor
or
addr16
testl
fbld
mov
scas
daa
sbb
push
mov
push
and
xchg
out
popf
in
jno
arpl
adc
jmp
pop
or
notb
jno
js,pt
mov
xchg
fdivrs
sti
fidivl
idiv
je
fs
ss
and
mov
stc
addr16
mull
mov
mov
mov
fwait
mov
gs
mulb
push
xchg
iret
adc
icebp
push
xchg
push
inc
adc
xlat
or
xchg
rolb
adc
movups
in
dec
sbb
lret
cmp
pop
mov
aaa
lods
sbb
je
imul
fwait
jp
les
add
jbe
mov
notb
xor
xchg
cmp
mov
imul
or
sbb
adc
pop
xchg
add
test
push
mov
mov
lcall
cltd
xor
xchg
mov
pop
jmp
cwtl
add
das
rclb
inc
xor
jns
ret
leave
mov
jl
add
mov
jl
xor
lds
dec
jl
push
mov
add
clc
jns
sub
add
ret
jb
mov
cwtl
out
popa
sahf
pop
pusha
movsl
hlt
xchg
cmp
notb
hlt
sub
das
bound
je
hlt
fildl
push
int
hlt
movsb
xchg
mov
push
and
push
icebp
inc
xor
or
and
cmp
xor
push
sbb
jecxz
lret
and
inc
jb
mov
outsl
fnstenv
hlt
cmpsb
xchg
xchg
add
hlt
sub
das
imul
enter
mov
pop
inc
hlt
scas
mov
cs
in
and
mov
out
pop
add
insl
pop
dec
cli
lods
xchg
ret
int3
lods
xchg
add
movsl
add
adc
xor
or
jp
dec
lahf
xor
rcrb
jnp
outsb
mov
pop
sbb
out
or
test
lods
and
cmpsb
imul
std
arpl
mov
call
push
hlt
pop
sub
shr
sbb
or
mov
cmpsb
test
hlt
lcall
jae
jnp
cmp
or
cmc
imul
hlt
insl
and
mov
imulb
cmpsl
push
sarl
mov
adc
and
cmc
push
test
imul
mov
cmp
xor
inc
aad
cmp
adc
jb
mov
sub
sub
mov
add
xor
ss
call
or
mov
int
je
dec
mov
xchg
cld
shl
jmp
and
sub
xchg
out
sbb
cmp
or
and
ss
jge
in
inc
pop
imul
leave
or
mov
mov
or
xor
xor
push
mov
mul
mov
pop
hlt
aas
cmp
xchg
shl
iret
rorb
mov
test
movzwl
add
fistl
hlt
jno
ficoml
add
mov
cli
add
add
jp
sbb
mov
pop
xchg
push
adc
cwtl
jne
in
xor
int3
sbb
mulb
push
shlb
sbb
hlt
movsb
cmc
xchg
xor
push
mov
or
xchg
push
hlt
jmp
push
mov
dec
jge
ds
mov
pushf
fildll
adc
pop
cmc
setge
mov
mov
cmp
outsl
and
cmp
hlt
mov
in
sub
cld
out
pusha
cmc
fs
out
fiaddl
hlt
ficompl
xor
push
aas
ja
push
loope
outsb
int3
sub
ja
or
mov
adc
push
cs
lea
lods
mov
pop
out
jb
cmp
pop
jno
fadds
je
inc
push
hlt
jbe
adc
pop
cltd
insb
and
notb
movsb
xor
pop
mov
aas
out
add
mov
outsb
das
scas
cmc
sub
hlt
push
dec
or
add
push
add
shll
jbe
inc
mov
pop
xchg
cmpsl
pop
imul
mov
mov
and
sbb
std
mov
xchg
jle
aaa
mov
add
mov
clc
sbb
xchg
shrb
popf
pushf
test
fwait
mov
xchg
ss
icebp
testl
icebp
inc
jo
cmc
subb
jge
pusha
xchg
scas
mov
lcall
in
adc
push
test
inc
sbb
scas
dec
or
daa
and
loope
cmpsl
inc
dec
mov
or
mov
fnstsw
mov
pop
and
ret
dec
jb
fidivrs
aam
dec
sbb
lcall
lock
imul
ja
or
add
pop
jle
xor
mov
xor
out
mov
mov
jne
mov
mov
xor
and
adc
test
inc
and
xchg
and
data16
jb
loop
mov
dec
mov
adc
mov
aas
enter
in
adc
les
pop
popf
shl
inc
dec
pop
stos
movsb
iret
sub
mov
xlat
ret
aam
push
add
sbb
clc
mov
xchg
mov
fnsave
xor
addr16
popa
dec
jno
cmp
lods
add
or
mov
or
imul
dec
cmp
cwtl
adc
jmp
aaa
mov
dec
add
push
fs
push
xor
mov
sub
js
add
neg
push
push
sub
jge
loopne
subb
xchg
adc
inc
add
imul
xchg
daa
sbbb
movzwl
xchg
xor
cmpsl
in
insl
and
fldt
stc
or
daa
test
rcr
sarl
ret
add
xor
das
add
xor
jo
xchg
cmp
cmp
notl
push
rolb
xor
in
inc
loope
xor
xchg
push
xchg
xlat
mov
icebp
stos
add
mov
dec
pop
add
lock
stos
jge
outsb
outsl
pop
fadds
xor
and
xlat
lock
mov
push
inc
cmp
cmp
andl
jl
shlb
dec
add
nop
popa
jl
fs
sbb
dec
fs
lds
cwtl
and
dec
cmp
stos
inc
xchg
aas
adc
jns
xchg
or
or
cmp
shrl
sbb
add
lods
xchg
cwtl
aaa
daa
and
push
mov
aaa
jmp
pop
dec
and
cmpb
adc
sub
adc
and
pop
pop
ja
testb
gs
jnp
mov
or
adc
or
je
fisttpl
dec
jne
out
jmp
cmp
sub
or
hlt
mov
push
jbe
and
clc
sahf
addr16
ja
jmp
cmp
inc
dec
inc
pop
orb
push
or
out
loopne
scas
pop
dec
iret
and
jae
pop
stc
mov
push
push
lahf
fcompl
hlt
popa
or
jbe
mov
pop
je
or
outsb
cmp
stos
push
xor
push
add
das
jns
fstpt
int3
pop
and
xchg
push
push
cmc
hlt
cmc
jge
std
cmp
lock
cmc
dec
xor
dec
pop
in
push
inc
mov
cmp
and
push
mov
and
xor
test
std
sbb
add
and
je
orl
push
xor
movsl
sbb
loopne
out
fcoml
rcll
daa
push
ds
push
and
iret
fisubs
ja
hlt
cltd
lock
jb
or
movsl
and
js
insb
arpl
je
push
and
mov
hlt
stos
movsl
sub
out
mov
daa
aaa
mov
sub
inc
inc
data16
jbe
dec
psrld
add
pop
daa
hlt
and
sub
cmp
test
lahf
cmp
sbb
mulb
inc
add
xchg
shr
cmpsb
daa
mov
insl
add
popf
mov
fdiv
push
xor
xchg
clc
add
test
fildll
lea
not
popf
cld
fisubl
cmc
test
hlt
test
lcall
add
jmp
push
cmc
lds
lock
adc
dec
testl
add
add
xor
add
testl
je
xor
mulb
stc
or
cmpsb
add
cld
shrl
add
cmc
nop
enter
cli
mov
sbb
test
add
aam
rolb
not
xor
and
push
imul
rol
xor
cmc
jl
in
and
ficoms
xchg
fcmovne
mov
xchg
out
pop
aam
and
sbb
das
mov
fdivr
mov
adc
or
add
push
sbb
insl
xchg
push
je
and
pop
xchg
inc
sub
out
adc
dec
mov
testb
adc
hlt
pushf
cld
push
ss
inc
in
or
or
mul
sti
push
xchg
insb
push
cmc
xlat
add
cs
or
add
mov
add
out
enter
ja
add
sub
dec
loope
pop
add
cmc
daa
aas
into
enter
js
aas
and
push
xor
int3
add
and
pop
out
xor
mov
hlt
xchg
cld
int
dec
stos
aam
cmpsl
xor
sub
hlt
fdivrp
mov
xor
lret
adc
test
and
push
and
je
lahf
lahf
cmp
ljmp
push
les
push
loopne
lret
push
xlat
sbb
insl
jl
arpl
enter
sbb
sahf
inc
hlt
pusha
lock
xor
and
shld
push
popf
leave
dec
in
ja
nop
adc
clc
hlt
punpckhdq
mov
add
sti
push
push
or
xchg
out
jo
stos
sub
testl
mov
inc
and
aad
and
xor
mov
cmp
orb
rcr
pop
pop
out
pop
test
dec
or
cmp
inc
mov
jbe
cmp
and
rcrb
xchg
cmpsl
sub
roll
mov
xor
xchg
push
jbe
sbb
lods
je
xchg
subb
inc
adc
xchg
add
pop
popa
loop
mov
xchg
mov
or
jno
stc
pop
std
push
test
outsl
mull
pop
gs
adc
test
or
dec
jmp
movsl
lods
jl
xlat
pop
das
xchg
dec
mov
lods
negb
jno
insb
test
sahf
scas
or
ds
jne
inc
lahf
sarl
fbld
loope
hlt
xorl
sub
outsb
dec
cltd
testl
dec
ret
jecxz
cmp
mov
sbbb
rorl
add
hlt
mov
lret
ss
fsubrs
hlt
scas
incl
je
fisttpl
hlt
add
aas
iret
nop
adc
push
jmp
ret
dec
das
lods
push
hlt
cmp
mov
loopne
pop
sub
aas
ds
or
jg
in
dec
adc
sbb
xor
and
push
add
mov
hlt
sbb
and
xor
jae
loope
orl
imulb
xlat
mov
psllw
jbe
xchg
hlt
inc
inc
jnp
fldcw
jge
xor
adc
stos
sti
xor
hlt
add
sub
mov
mov
push
jne
fs
xlat
out
fdiv
cli
adc
addb
dec
gs
inc
pop
hlt
enter
std
mov
mov
insl
pop
shlb
xchg
dec
hlt
jbe
xchg
sahf
or
cmp
in
insb
imul
xchg
lret
cmp
pop
jo
das
hlt
rol
and
imul
cmp
xor
jecxz
je
and
icebp
dec
dec
inc
loope
xor
cmp
out
inc
imul
mov
jne
xchg
sbb
pop
pop
clc
loope
imul
imul
and
enter
lods
setge
test
cmpsb
mov
adc
fbstp
jae
sub
test
mov
xchg
hlt
fsubl
mov
jmp
jg
lea
pop
cwtl
xor
mov
rcrb
dec
inc
push
aas
xor
gs
test
add
hlt
sbb
xor
shr
mov
hlt
dec
push
mov
sarl
dec
or
xchg
icebp
test
push
mov
push
insl
or
mov
divb
ss
xchg
hlt
jecxz
xchg
or
aas
shl
shl
test
insl
pop
testl
ss
lods
lea
push
xor
cmp
stos
dec
add
pop
xchg
push
and
hlt
mov
mov
jmp
daa
inc
int
lea
jne
int3
dec
add
js
hlt
call
inc
dec
push
sbb
icebp
xchg
jbe
fs
aas
hlt
test
jmp
sbb
lods
int3
hlt
or
jne
test
mov
jg
repz
loop
dec
cmp
out
lods
mov
dec
imull
add
cmc
mov
mov
mov
lock
scas
inc
cmp
xor
inc
pusha
hlt
test
sbb
pop
mov
lret
loope
hlt
mov
clc
test
jnp
jp
and
hlt
mov
sbb
adc
inc
push
push
cmp
mov
jecxz
adc
ss
mov
imul
dec
inc
in
hlt
test
jge
jmp
in
mov
hlt
jae
mov
and
sbb
sub
adc
pop
fnstcw
insb
jmp
xlat
xor
mov
push
std
cmpsl
cmp
push
imul
mov
dec
lret
fmuls
hlt
in
bound
xchg
or
push
cld
xor
inc
scas
mov
cmp
xlat
paddb
notb
loopne
xchg
hlt
jb
scas
dec
mov
jbe
adc
pop
cmp
rol
mov
lea
sub
xor
xlat
pop
pop
add
testb
test
hlt
sub
iret
xor
adc
fldt
jns
mov
xor
sub
pop
aas
mov
cmp
imul
fistl
sbb
into
push
lcall
push
xlat
adc
imul
stos
push
sub
sbb
cmpb
into
cmp
js
les
hlt
lock
ficoms
sbb
mov
sub
xor
push
and
hlt
xchg
rorb
jp
mov
pop
pop
cmc
stos
xor
imul
leave
popa
dec
mov
lock
das
sbb
dec
fldt
hlt
xchg
lods
mov
int3
mov
dec
mov
push
xchg
add
add
js
bound
sti
or
addb
subl
hlt
dec
push
movsb
jne
and
xlat
jno
mov
xor
out
hlt
push
sahf
cmp
daa
xor
hlt
push
iret
std
push
sti
imul
mov
cmc
fs
imul
sti
dec
enter
nop
lret
frstor
push
fcmovnb
sub
mov
loop
and
mov
sbb
add
xchg
je
sub
sub
hlt
xor
incb
jle
and
mov
add
inc
pop
pushf
lods
push
jbe
dec
sahf
xor
sbb
adc
stc
xor
call
movsb
hlt
mov
jg
mov
push
add
jmp
sahf
repz
negb
cs
scas
mov
sub
push
in
imul
mov
sub
mov
movsl
push
inc
hlt
into
outsl
out
test
cmc
cmp
xor
mov
lahf
adc
and
dec
in
hlt
dec
es
and
out
shl
xchg
rolb
mov
push
lods
inc
lea
xor
xchg
nop
flds
sbb
push
ja
mov
hlt
mov
jp
add
aad
mov
rcll
xor
xor
fwait
sub
and
lcall
pop
ret
pushf
loope
hlt
jecxz
ds
hlt
lods
cmc
fwait
sub
arpl
adc
cmp
je
jmp
sbb
ja
jbe
cmp
add
xor
leave
fistl
jg
cmp
hlt
push
and
stos
jae
lahf
cwtl
hlt
pop
mov
into
inc
xchg
inc
hlt
inc
push
sbb
mov
std
inc
xlat
pop
mov
jle
xchg
lret
xchg
aad
xchg
cld
sahf
es
out
pop
enter
or
sub
push
pushf
hlt
shlb
and
js
hlt
inc
mov
test
or
fnstsw
adc
shl
jl
hlt
inc
fidivrs
cwtl
pop
fisttps
jle
inc
xor
sbb
iret
sbb
hlt
out
rcrb
push
fs
inc
mov
cli
adc
hlt
mov
mov
arpl
mov
hlt
adc
pushf
add
jp
add
xchg
lahf
cltd
aam
daa
movsb
rorb
pop
pop
aam
fnsave
pusha
push
repnz
hlt
gs
rol
sbb
orb
pop
lods
inc
hlt
outsb
pop
pop
pop
push
jo
test
mov
jecxz
mov
ret
inc
xor
addr16
jg
int3
or
movsl
inc
lods
sub
pop
xor
mov
dec
ret
jg
cmc
mov
lcall
push
add
cs
hlt
pusha
jl
lret
mov
sub
in
jno
push
cmc
dec
int3
fcoml
scas
hlt
pop
je
adc
xor
sbb
mov
or
mov
stos
ja
jl
or
inc
jae
lds
lret
inc
cmp
imul
adc
cmp
ds
xor
jle
mov
decl
hlt
divb
and
sub
adc
mov
or
mov
adc
push
push
std
arpl
in
lods
fcmovne
add
jbe
sbb
fists
dec
or
je
add
aam
lahf
hlt
sar
push
push
fnstenv
mov
mov
nop
xchg
aam
mov
jecxz
jo
dec
sub
cmp
xor
call
xor
shlb
xchg
xor
cwtl
hlt
push
sbb
jne
adc
mov
cmc
fildll
mov
jle
inc
mov
jne
mov
and
ret
push
or
insb
stc
test
icebp
add
bound
pushl
or
cmp
and
out
push
cli
push
dec
in
or
xchg
ret
hlt
xchg
sbb
out
xor
jns
enter
pop
scas
jg
pop
int3
cld
jbe
xchg
aad
jae
adc
adc
and
mov
pop
sbb
das
pop
stos
aaa
cli
mov
es
out
and
mov
iret
and
cmc
push
ror
jno
int
jecxz
es
adc
mov
sbb
push
push
enter
pop
fwait
mov
adcb
jns
lods
cmpsb
inc
mov
rolb
jns
sbb
dec
adc
gs
test
mov
loop
adc
scas
test
or
inc
loope
xor
cmp
fsubrl
add
mov
jo
add
call
push
dec
push
mov
test
leave
outsb
ret
cmpl
inc
mov
mov
xor
aam
pop
lods
xor
sub
std
repnz
mov
adc
pop
mov
test
dec
dec
test
xlat
push
jle
pusha
xor
aaa
lret
mov
notl
pop
mov
sti
pop
mov
or
inc
mov
xsha256
cmpsb
push
push
scas
ss
inc
jae
add
or
dec
pop
pop
in
int
and
mov
adc
push
or
or
in
cmp
xor
push
mov
movsb
inc
pushl
jge
mov
int3
icebp
cld
sub
xchg
xlat
push
fwait
push
aaa
or
push
pop
icebp
int3
je
add
std
cmpsb
push
hlt
nop
or
cmp
ret
mov
std
dec
xor
stc
pop
mov
lods
xor
cs
in
cmp
inc
or
sub
pop
inc
xchg
mov
pusha
je
aas
push
fdiv
inc
adcb
inc
add
and
ret
ja
pop
mov
xchg
idivl
arpl
cmc
icebp
mov
leave
dec
pop
jne
mov
rdtsc
mov
push
mov
jmp
dec
mov
aam
jl
sbb
push
pushf
inc
adc
sub
out
out
jle
mov
or
out
jmp
mov
dec
add
hlt
daa
xor
jl
jp
fidivl
or
xchg
div
sbb
mov
cmp
pop
sbb
pop
icebp
pusha
ficompl
inc
push
aaa
dec
add
in
pop
push
push
in
push
mov
popa
inc
push
in
mov
jg
shl
xchg
ficomps
movaps
push
and
adc
rcrl
cmpsl
inc
adc
push
out
and
mov
je
call
jmp
movl
jae
xor
cmp
pop
rcr
push
ljmp
sbb
and
xchg
loop
lahf
rcrb
xor
es
ja
lret
daa
repz
jg
stc
lahf
gs
push
add
fidivs
sbb
icebp
adc
inc
inc
rcl
int
sub
lahf
faddl
sbb
je
xor
xor
scas
sub
cltd
inc
cmc
push
adc
out
mov
xor
pop
popa
mov
hlt
pop
clc
ret
ret
rcll
hlt
mov
loop
out
aam
imul
pop
adc
outsb
aaa
andl
fisubl
add
inc
cmp
divb
hlt
inc
fld
push
and
insl
add
arpl
loope
mov
jne
aaa
adc
stc
leave
hlt
xorl
dec
hlt
lcall
mov
leave
mov
lret
fnsave
mov
js
insl
popf
ret
pop
imul
dec
and
xor
out
sbb
icebp
pop
out
jns
mov
cwtl
mov
push
daa
xchg
mov
mov
psrlw
pop
movsb
sbb
aaa
mov
pop
xchg
in
or
lods
mov
rcrb
jno
int
or
push
hlt
dec
inc
push
outsl
pusha
jmp
jmp
push
xchg
jnp
div
jecxz
gs
loop
imul
add
push
mov
mov
shl
adc
mov
jmp
test
cmc
adc
lods
aas
sub
arpl
testb
push
xor
out
mov
jl
xchg
push
hlt
outsl
aaa
outsb
aam
movsb
shlb
adc
hlt
sub
sub
stos
xor
mov
icebp
inc
mov
dec
add
push
xchg
insl
mov
loop
scas
pop
rclb
pop
sub
lods
inc
bnd
or
icebp
push
adc
add
or
scas
mov
xchg
hlt
sub
ljmp
repz
mov
xlat
pop
idiv
rcrb
adc
outsl
cwtl
mov
xchg
imul
push
mov
je
push
insb
cmpsl
xchg
and
ja
repz
loope
xor
and
out
in
lahf
lea
push
enter
jecxz
shl
ds
aas
lcall
loopne
pop
jecxz
adc
mov
mov
icebp
hlt
sbb
sub
or
out
mov
call
pushf
shlb
pavgb
subb
and
mov
cmp
call
mov
pop
hlt
scas
ficoml
imul
inc
sbb
pop
in
hlt
mov
jl
push
imul
mov
cwtl
lods
xchg
xor
incl
dec
cmc
xor
dec
hlt
cmp
xor
icebp
sbb
inc
repz
dec
cmc
or
jmp
imul
mov
cmc
in
push
lcall
testb
cmp
jecxz
jl
into
lret
hlt
mov
lcall
outsl
mov
cli
or
add
ret
negl
int3
imul
outsl
xor
jp
xor
lock
fdivrl
jmp
push
dec
inc
xchg
sub
popa
std
les
arpl
insb
ss
sahf
mov
flds
adc
xchg
cs
sti
or
pop
lcall
out
test
pop
hlt
lahf
fsubl
pop
adc
loope
xchg
pop
in
mov
stos
cmc
mulb
sbbb
cmp
xchg
in
xchg
shll
call
test
movsb
lods
hlt
mov
xchg
xchg
xchg
sahf
testb
cmp
add
lock
into
mov
movsl
cmp
in
xor
or
pop
insb
shl
mov
out
cmpsl
sbb
hlt
mov
movq
addr16
hlt
repz
mov
hlt
fstpt
test
hlt
dec
clc
test
or
sub
cmp
ja
or
push
sbb
pop
push
hlt
mov
cmp
mov
std
mov
sbb
xchg
xchg
insl
push
dec
or
hlt
jnp
xor
xor
lods
cs
int3
and
add
test
jo
cmc
mov
pop
insb
mov
shrb
pop
xor
cli
lret
hlt
imul
lahf
jo
and
aam
or
pop
subl
ja
adc
inc
cmc
sub
sbb
sbb
out
xchg
test
aad
in
ds
push
mov
mov
pusha
test
les
scas
hlt
and
pop
rcrb
mov
mov
inc
test
insl
hlt
scas
xchg
lea
pop
inc
sbb
sbb
or
hlt
sbb
mov
sub
push
hlt
daa
in
mov
jecxz
lock
cmpsl
add
xchg
inc
mov
pop
movsb
stos
lods
push
outsb
call
sbb
xchg
mov
cmpl
mov
aas
mov
pop
sub
mov
lret
cmp
xchg
jae
jle
cmc
and
stos
pop
aam
outsb
imul
and
pop
mov
out
shl
shll
pop
psubsw
int
pop
fdivrp
inc
scas
push
data16
dec
pop
mov
mov
fcompl
add
cld
push
sub
xchg
stos
push
nop
jne
mov
sbb
jmp
xor
mov
in
push
xchg
ret
sahf
xchg
shl
popa
dec
mov
push
hlt
rorl
cmpsb
insl
test
hlt
imul
xor
xchg
add
inc
js
dec
nop
or
in
hlt
cmp
push
cmp
mov
hlt
jns
push
jnp
inc
hlt
or
in
das
jg
mov
pop
testl
push
hlt
addl
icebp
ja
dec
hlt
sbb
out
lea
dec
ss
ljmp
and
in
divb
dec
mov
xor
imul
ret
inc
mov
pop
mov
idivl
hlt
dec
clc
loopne
mov
test
cmp
mov
push
ljmp
pop
jecxz
imul
loop
mov
xorl
idivl
cmp
xchg
mulb
mov
xchg
xor
imul
repz
repz
inc
ss
sar
hlt
daa
outsb
or
lret
add
lret
add
mov
mov
hlt
dec
mov
imul
xchg
lcall
in
push
or
inc
pop
sbb
inc
fsubrl
aas
mov
xchg
push
mov
hlt
and
mov
jo
sbb
cmp
addr16
xor
push
mov
hlt
fists
jb
imul
sub
sbb
dec
or
insb
lds
cltd
or
inc
mov
lods
mov
lds
out
fnstenv
and
xchg
add
dec
sbb
or
out
dec
fxtract
push
int3
xor
jnp
cmp
fsubrs
hlt
jp
arpl
fistpll
xchg
loop
pop
jge
mov
jp
je
shl
mov
pusha
cmp
lret
push
fimuls
outsb
movsb
hlt
xchg
push
jb
dec
lods
add
mulb
add
lret
nop
aas
mov
repz
push
test
sbb
shl
dec
leave
or
jle
out
xchg
out
dec
jbe
add
das
push
adc
cmc
mov
cmp
std
adc
je
mov
mov
rcrb
adc
pop
dec
call
and
outsb
cmpsl
dec
jns
add
out
fwait
push
xor
lods
fcoms
sbb
filds
sub
jmp
adc
jae
pop
iret
pop
filds
in
mov
sbb
inc
icebp
dec
setge
rol
push
andb
adc
jp
popa
push
mov
jo
jno
push
jne
push
icebp
mov
int3
xchg
in
stos
loope
dec
xor
xor
aaa
out
cmp
outsl
mov
cmc
lock
hlt
push
sbb
xchg
movq
decb
xchg
push
cmp
mov
xchg
divb
iret
aaa
shlb
iret
loop
add
pop
xchg
sbb
adc
aam
xor
push
aad
out
add
mov
mov
mov
das
jg
in
lret
notb
xchg
add
pushf
es
mov
adc
stos
push
lods
push
inc
gs
xchg
mov
push
sub
inc
nop
xor
cmpsl
pop
cld
adc
stc
sub
add
mov
jg
lcall
inc
dec
stc
jb
mov
sub
add
jns
add
loop
cmp
adc
ret
stos
stos
jo
mov
or
gs
or
xchg
jg
lea
nop
insl
cmp
jmp
subl
jp
pop
xchg
pushf
jo
bound
jb
ds
pop
cmp
cmpb
add
push
mov
aad
imul
sbb
xchg
insb
pextrw
addr16
xor
mov
and
cmc
mov
mov
aad
jle
adc
cmp
pop
int3
call
dec
mov
mov
in
outsb
stos
add
popf
add
test
mov
jge
cmp
mov
inc
fdivrs
pusha
push
or
mov
pushf
int3
mov
divl
push
or
sbb
icebp
mov
fs
cmp
aam
and
pop
push
adc
int
dec
rclb
dec
sbb
popf
add
loop
mov
enter
cmpsl
inc
das
fxch
pop
add
jmp
out
sbb
sbb
pop
daa
pop
shrl
loope
fcmovnb
or
hlt
lret
pop
push
out
adcb
dec
mov
movb
and
inc
sbb
pop
and
movsl
sub
add
mov
adc
xchg
lcall
pop
frstor
sbb
push
call
xlat
jnp
insl
insl
inc
and
add
rorb
notb
cld
xor
incl
negb
mov
sbb
cmpsl
icebp
ja
inc
mov
test
test
sarb
and
shrl
movl
imul
xchg
cmc
jo
sub
test
outsb
in
or
cwtl
xchg
pop
jmp
imul
push
cwtl
mov
aam
inc
notl
daa
cmpsl
fwait
addr16
out
and
adc
add
andl
push
ret
std
cmpb
jns
and
sahf
and
jns
mov
xchg
mov
dec
gs
xchg
push
ja
fnstcw
aas
enter
mov
mov
cmp
push
dec
mov
jbe
lahf
lods
and
and
mov
outsb
xor
cmp
shlb
or
mov
mov
ljmp
mov
or
xchg
xorb
add
xchg
stos
pop
and
mov
xchg
jo
cli
push
mov
test
dec
dec
mov
and
test
xor
mov
hlt
in
jno
add
outsb
gs
or
imul
xor
aaa
push
daa
fucom
cmp
ss
push
lahf
ret
lock
inc
mov
xchg
imul
inc
lods
cmpsl
xchg
test
dec
cmc
mov
mov
jle
pushf
sbb
or
xor
and
xor
jmp
mov
pusha
push
sbb
mov
sub
dec
test
jg
fucomip
xchg
ja
sub
mov
xchg
push
sbbb
and
andb
das
inc
xchg
cli
jg
sub
xchg
and
test
adc
xchg
ljmp
pusha
mov
push
push
or
and
xor
je
push
dec
mov
lret
mov
adc
in
scas
cli
jbe
push
pop
add
mov
sahf
in
add
cmp
mov
cmp
pop
test
std
pushf
sti
push
inc
cmc
data16
pop
hlt
xchg
pushf
cmc
pop
adc
xchg
jb
imul
aad
popf
sbb
mov
sub
inc
push
movsb
cmpsl
aaa
cwtl
adc
repz
insb
lcall
xor
sbb
xchg
aam
hlt
ss
mov
fldl
pop
pop
push
pop
cmp
xchg
dec
push
dec
popf
pop
negb
jle
adc
and
or
jns
adc
enter
stc
stos
scas
and
push
popf
xchg
xor
dec
mov
inc
stc
xchg
ret
pop
mov
pop
andb
sahf
sub
inc
add
dec
xlat
bound
mov
leave
xchg
mov
xchg
adc
jge
or
xor
mov
ja
add
xchg
int3
dec
dec
lahf
mov
std
scas
cwtl
push
out
push
stos
or
mov
mov
fwait
sbb
aam
cmpsl
push
es
inc
sub
inc
fwait
sbb
and
es
xchg
stos
dec
push
add
out
mov
jl
cwtl
jb
fisttps
cmp
push
push
xor
daa
daa
xchg
pop
jo
fiaddl
aam
cmp
dec
pop
enter
testl
pusha
repnz
or
dec
mov
enter
cmp
loop
mov
ljmp
jb
mov
sbb
pop
aad
or
je
xor
xchg
nop
pop
lret
imul
pushf
push
test
xchg
xchg
inc
test
mov
shl
lret
cmp
jmp
dec
xorb
cmp
fsubr
dec
inc
sbb
int3
mov
push
sbb
out
dec
inc
mov
cmovge
popf
xchg
jb
out
addb
in
xchg
inc
or
sub
xchg
dec
mov
cwtl
hlt
mov
jecxz
inc
push
add
lea
sbb
cwtl
lods
es
aas
mov
clc
sub
add
ficoms
push
adc
sub
sub
leave
popa
jnp
inc
sbb
add
adc
or
or
dec
pop
test
mov
or
lahf
out
jmp
push
ss
mov
inc
rorb
xchg
ja
mov
xor
sub
add
mov
in
dec
xor
jg
adc
xchg
push
ds
pushf
test
or
jb
test
out
fs
xchg
movsl
jmp
mov
lret
out
ss
mov
jno
lret
gs
mov
add
xor
or
add
xchg
jb
es
add
nop
xor
imul
dec
ss
arpl
add
add
popa
push
and
mov
lcall
js
mov
movsb
les
push
cmpsl
es
mov
outsl
bound
out
leave
dec
xchg
cltd
scas
dec
fstpl
cmp
icebp
mov
sub
cmp
cmc
or
adc
andb
cmc
or
xor
adc
pop
or
ja
ja
push
xchg
aaa
dec
and
dec
or
aam
push
sbb
adc
pushf
mov
lret
inc
xor
mov
inc
mov
mov
xchg
mov
pop
popf
lock
or
mov
lahf
fcompl
pop
cmc
fs
arpl
popa
add
or
dec
gs
aam
add
jl
xor
scas
icebp
add
repnz
jbe
dec
aam
or
stos
je
xor
or
pop
mov
xor
cmp
jg
into
rcrb
cmp
pop
push
sub
push
cmpsb
arpl
dec
ss
orl
jbe
mov
out
std
jo
pop
mov
pop
mov
and
cli
mov
pop
inc
and
add
pusha
in
add
outsb
mov
dec
out
adc
jmp
shlb
sbb
inc
es
repz
pop
inc
add
jo
mov
dec
data16
push
in
into
int3
or
xchg
push
sub
loop
or
and
hlt
xchg
mov
push
outsl
frstor
or
jp
test
ja
or
sub
int3
rcrl
sti
aaa
mov
iret
xchg
xor
cmc
dec
jbe
add
cmpsl
stc
or
xchg
sub
dec
leave
nop
ret
sub
xor
cmp
and
jb
je
stos
pop
dec
pop
mov
add
mov
xchg
ud2
fldcw
in
inc
aam
pcmpgtw
xor
dec
jne
addr16
test
ljmp
mov
xchg
cltd
cmpsb
movsl
or
lods
bound
pop
pop
jbe
testl
shr
int3
in
in
cmpsl
push
aas
or
jp
adc
add
pushf
loopne
or
xchg
jp
pop
push
gs
mov
pop
mov
mov
lcall
push
pop
lcall
hlt
sub
xor
xchg
nop
and
popf
cmc
out
push
jge
lcall
stos
or
mulps
pop
xlat
dec
cmc
mov
sub
push
jg
insl
add
mov
jnp
fwait
data16
mov
mov
and
adc
pop
popf
lods
adcl
imul
rol
iret
or
dec
fcomps
int
pop
push
not
dec
adc
add
mov
push
cmpsl
shlb
sbb
inc
sub
mov
sbbl
xor
add
xchg
xor
pop
out
test
shl
push
repz
xchg
jo
add
mov
es
leave
mov
idivl
jae
xchg
jmp
ss
jbe
int3
in
call
add
cli
inc
imul
sbb
bound
fsubrp
mov
jb
out
loopne
jo
pop
inc
pop
stos
cwtl
lea
test
jbe
in
imul
cmpsb
mov
andl
out
and
data16
fs
scas
xchg
lea
push
xchg
sbb
push
cmpsl
popf
loop
ss
notl
cs
xor
test
jecxz
lahf
pop
lods
repnz
aad
iret
imul
pop
cltd
popa
dec
add
mov
push
cmp
push
xor
or
cmpsl
cmp
cmp
xchg
rorb
jae
or
fldl
out
icebp
inc
inc
les
inc
and
hlt
cmpsl
jno
pop
push
mov
sbb
cmpsb
inc
pop
popf
xchg
mov
fldt
movsb
mov
sub
pushf
leave
jp
pusha
stc
cmp
int3
fs
adc
dec
stos
xchg
inc
loope
jge
std
and
testb
xor
xchg
loop
push
fldcw
lret
nop
pcmpgtw
dec
push
inc
adc
xacquire
fadds
xchg
insb
xchg
jl
and
fwait
push
jmp
fnstenv
inc
xchg
js
pop
xor
call
pop
in
xor
xchg
xchg
test
xchg
jle
sbb
lods
mov
neg
adc
daa
jle
and
jne
jge
test
cld
xchg
mov
fsubs
cmpsl
leave
jmp
addl
cld
cld
jecxz
xor
int3
mov
mov
push
add
in
stos
mov
jmp
jbe
or
mov
xchg
jle
push
add
inc
dec
out
xchg
in
pop
jmp
gs
mov
loope
pop
cmp
inc
xor
adc
add
mov
push
pop
leave
add
jp
mov
mov
js
add
rorb
xchg
jle
scas
mov
shlb
fmull
xor
stc
test
inc
out
dec
sub
dec
sahf
enter
sbb
xchg
sub
xchg
sub
xchg
add
mov
sbb
fmul
and
popf
outsl
and
or
xor
xchg
xchg
adc
and
pop
insb
daa
je
xchg
cli
std
and
repz
xchg
jns
jmp
mov
xor
pop
bound
xor
sbb
js
movsl
pop
test
cmp
sbb
fucomp
test
and
cmp
add
dec
dec
popa
dec
adc
pop
adc
xor
and
pushf
xor
mov
xlat
in
arpl
jbe
mull
add
xor
jb
xchg
jb
add
add
stos
push
je
push
dec
push
xchg
mov
xchg
pop
pop
pop
or
in
mov
ja
mov
mov
lods
jno
dec
cmp
orb
loope
lret
jns
xchg
negl
add
push
orl
cli
push
xchg
jno
leave
jle
cmpsb
dec
es
stos
andb
stos
les
std
push
mov
ds
mov
or
jns
pop
stos
mov
mov
xor
sahf
pop
mov
adc
push
cmp
sub
jge
imul
inc
mov
mov
cmpsl
sub
sbb
sub
stc
and
jge
adc
sub
mov
cltd
and
daa
mov
out
outsb
pop
aas
ss
lock
push
cmpsb
cmc
lret
lcall
hlt
dec
lock
ljmp
dec
stos
test
hlt
sub
push
pop
dec
hlt
movsl
xor
out
popa
nop
inc
push
ret
add
hlt
inc
bound
loope
hlt
push
fwait
push
aam
pushf
push
imul
gs
xchg
sbb
hlt
pop
movsb
inc
jg
xchg
xchg
adc
aaa
jbe
and
imul
pop
jbe
mov
xchg
mov
andb
or
negl
out
clc
test
adc
shrl
imul
stc
or
hlt
nop
ret
push
lock
xchg
ret
fs
pop
hlt
aad
pop
hlt
call
jge
xor
movsb
sbb
clc
push
fmull
mov
jno
loop
pop
pop
pop
dec
mov
inc
and
and
xchg
out
cmp
jecxz
cmp
lret
sub
aaa
add
sub
lret
aaa
and
repnz
nop
inc
fs
push
sub
or
jp
ja
pop
mov
hlt
push
inc
push
imul
pushf
sbb
jo
popf
lds
and
cmp
rorl
ss
dec
sbb
jnp
sub
decb
int3
not
cmp
mov
pop
imul
test
mov
jmp
imul
xor
mov
idivl
mov
dec
pop
fs
daa
pop
jae
add
pushf
insb
push
sbb
pushf
cltd
push
pop
lahf
cli
mov
idivb
add
mov
notb
movsb
outsl
dec
push
adc
fs
or
dec
xor
xor
mov
cmpsl
jbe
ja
lret
lods
punpckhwd
fmuls
imull
lret
nop
inc
push
ds
mov
or
je
lahf
push
xlat
dec
or
popa
inc
cmpl
pop
negl
lea
mov
fmull
sbb
imul
dec
scas
ja
or
imul
orb
mov
add
test
pop
sub
ss
and
repnz
and
es
xchg
inc
dec
jb
mov
push
adc
add
inc
and
das
sbb
add
neg
mov
hlt
add
cmc
pop
outsb
push
popf
divl
out
addr16
add
add
or
popa
xor
push
mov
xor
ja
xorl
imulb
push
inc
mov
add
cmp
xchg
inc
bound
dec
les
hlt
push
push
insl
fsubrl
xor
sbb
fidivs
cmp
mov
sbb
iret
mov
test
push
and
and
arpl
negb
sha1msg1
xchg
mov
fs
aaa
call
and
cs
mov
and
xchg
inc
stos
lds
js
push
xchg
inc
popf
xor
jo
jg
decb
adc
mov
pop
out
xchg
ss
adc
pop
cmc
or
mov
mov
add
rolb
hlt
sub
jmp
pmuludq
push
pop
xchg
cmpsl
mov
stos
lods
push
sahf
dec
pusha
or
ja
pop
and
cmp
outsl
mov
je
shl
hlt
mov
sub
add
pop
cmpsb
pop
cmp
jo
pop
pop
push
lahf
leave
repz
jecxz
icebp
dec
repnz
daa
fldt
jle
lock
jne
popa
aad
js
pop
hlt
xchg
cltd
rcll
lds
dec
push
ljmp
add
jge
and
xor
push
sbb
dec
xor
add
ss
sbb
cmp
hlt
in
mov
aam
pop
xchg
adc
iret
jbe
push
pmuludq
pop
pop
hlt
call
in
pop
xchg
test
xor
and
lret
jb
mov
push
mov
cmp
scas
inc
jb
pop
lret
pop
stos
sbb
jnp
mov
pop
hlt
pop
cmp
sub
pop
inc
neg
pop
add
pop
xchg
addr16
mov
mov
mov
push
lcall
adc
adc
test
xor
psrlw
push
dec
hlt
ds
adc
pop
jae
test
hlt
sbbl
xor
and
sbb
mov
inc
push
scas
out
fisubrl
mov
sbb
hlt
orl
test
insl
push
lods
push
es
and
repz
lea
xchg
test
in
stc
and
lds
or
ja
fdivp
aam
test
hlt
lcall
lea
mov
aas
addb
fsubl
adc
call
xchg
add
pop
push
je
hlt
mov
adc
mov
dec
push
hlt
stos
and
push
mov
cmp
xor
mov
aad
cmp
test
xchg
dec
xor
jae
dec
sub
sub
fidivrl
or
push
sbb
lds
lahf
adc
lods
negb
xchg
rorl
add
testb
test
inc
cmp
sbb
mov
push
jae
xchg
xchg
enter
sbb
push
push
inc
add
or
hlt
int
cmp
popf
outsl
xor
mov
mov
adc
lahf
cltd
mov
loop
inc
mov
push
xchg
ja
or
pusha
add
lds
add
std
jb
inc
stos
xchg
hlt
mov
sbbl
loope
add
lds
dec
hlt
rclb
xchg
xchg
cmp
hlt
mov
es
push
pop
pop
jge
sbb
jl
or
sarl
pushf
cmp
hlt
inc
dec
aam
nop
push
mov
sub
jae
dec
lret
cmc
mov
pop
dec
int
sbb
sbb
or
cs
adc
enter
stc
bndldx
push
rsm
push
push
jns
mov
dec
leave
cld
pop
hlt
sub
dec
cld
mov
negl
add
jnp
pop
xor
push
aam
jae
ljmp
outsb
aaa
lcall
negl
adc
inc
hlt
sar
and
out
xchg
hlt
movsb
xchg
jge
mov
daa
and
mov
xchg
fucomp
ja
jecxz
int3
cmp
outsl
repz
jno
pop
arpl
sbb
fisubl
daa
ja
lret
adc
add
add
into
and
ja
sbb
add
dec
dec
jge
push
out
cmpsl
dec
jmp
fldcw
sbb
sub
loope
xchg
cs
out
movsb
arpl
xchg
and
cmc
push
out
rclb
jmp
jl
or
loopne
ja
sarl
lret
adc
xchg
xchg
jmp
adc
stos
imul
mov
pop
mov
hlt
xchg
and
or
cmc
or
int3
push
jge
es
push
push
sbb
mov
sbb
enter
lahf
pop
push
cmp
sbb
ja
adc
mov
notl
xor
ja
mov
cmovg
xchg
test
cmp
stc
aas
jp
lods
sub
xchg
xchg
ret
popf
xchg
cmc
jl
dec
cmp
sub
adc
and
insb
push
xchg
mov
mov
ret
jae
mov
mov
mulb
add
push
xchg
mov
jbe
xor
hlt
fisubl
xorl
scas
les
pop
add
lcall
pop
hlt
add
lods
mov
imul
fcomip
mov
mov
push
lahf
or
xchg
xor
cmp
add
inc
inc
mov
or
sub
aam
add
imul
inc
mov
pop
insb
mov
xor
xchg
enter
hlt
aam
xor
cmp
xchg
mov
xlat
mov
xchg
hlt
imul
popa
jmp
xor
hlt
mov
jge
stos
sbb
adc
scas
and
lods
push
xchg
pop
cmc
filds
sbb
cs
xor
jbe
dec
mov
sbb
loop
xchg
jge
adc
adcl
jmp
jle
negb
cmc
xchg
icebp
rolb
lea
or
loop
mov
hlt
imul
jg
dec
ficompl
cmpsb
xor
mov
rcrl
rorb
or
mov
iret
and
test
dec
mov
inc
hlt
sbbl
pop
hlt
and
out
or
test
hlt
mov
lea
std
movsb
mov
and
es
dec
sahf
adc
leave
add
pop
mov
xchg
hlt
dec
mov
mov
aam
call
test
mov
cli
jmp
pop
es
call
sub
dec
adc
add
dec
out
cmp
ret
xchg
mov
rclb
or
inc
mov
xor
lret
int
sbb
mov
cmc
gs
pop
dec
sti
add
ja
pmuludq
jae
add
jno
mov
pop
lcall
mov
pusha
adc
add
hlt
fcompl
xchg
inc
ss
push
push
aam
hlt
lahf
jge
movsl
cmp
in
or
gs
or
nop
fistpll
adc
lea
mov
movsb
lcall
cli
jg
add
das
jnp
ja
jbe
js
pop
out
dec
inc
movzbl
loope
je
cmpsl
pop
int3
adc
scas
xchg
jle
lock
inc
and
std
icebp
pop
and
dec
in
leave
mov
hlt
dec
ror
add
or
ljmp
dec
adc
popa
jl
xor
std
in
loopne
nop
rcl
mov
loope
movb
sub
pop
pusha
mov
push
hlt
or
js
pop
hlt
add
push
mov
hlt
dec
dec
lock
hlt
cs
push
adc
ljmp
repz
dec
shl
jge
sub
iret
test
aaa
push
or
fwait
mov
cmp
xor
call
add
adc
repnz
pushf
add
rcrb
shrb
call
push
hlt
sbb
scas
sbb
sbb
adc
sti
insl
and
fbstp
and
mov
cmp
outsl
xor
xor
test
jg
hlt
jmp
pop
jnp
pop
out
inc
std
test
hlt
xchg
test
mov
xchg
fldcw
push
loopne
inc
icebp
xchg
push
add
inc
js
fs
xchg
les
cmp
sub
push
jmp
dec
pop
sub
xor
cmpsb
hlt
push
or
notl
push
xchg
xor
mov
adcl
bound
pop
pushf
rcrb
sub
dec
testl
les
popf
push
hlt
xchg
add
or
cltd
testb
test
xchg
inc
mov
mov
clc
pop
je
int3
adc
jbe
pop
and
jns
sbb
cmp
xchg
aaa
inc
nop
jmp
xchg
cmpsb
xchg
or
pop
xchg
or
add
stos
push
aaa
pop
lcall
mov
daa
imul
int
pop
notb
xchg
ret
dec
adcl
adc
addr16
dec
add
jecxz
out
je
cs
jle
int3
xlat
daa
repz
xor
fistpl
xlat
addr16
push
add
mov
repnz
mov
test
lahf
incl
push
push
lret
imul
mov
add
sub
out
add
div
mov
or
cmc
ja
adc
cmp
add
adc
sti
addr16
xor
mov
arpl
xor
testl
sub
inc
jnp
inc
negb
test
jecxz
arpl
incl
push
imul
jle
aas
rcr
push
sub
sti
stc
sub
inc
notl
pop
or
rcrl
xchg
repz
fdivs
inc
inc
aaa
pop
mov
iretw
movb
inc
fistps
jecxz
leave
aas
out
stos
jp
mov
addr16
cld
imul
mov
xlat
into
test
out
push
jb
sbb
pop
cmp
jmp
sub
or
comiss
inc
lcall
sar
xchg
inc
ja
fmulp
popf
sar
fildll
test
jecxz
imul
addr16
mov
ret
neg
fisttpl
jg
sti
jo
loopne
call
addr16
shrl
iret
xor
xlat
out
incl
hlt
dec
fldt
adc
mov
xor
jb
testb
ja
mov
iret
inc
add
jne
push
xor
mov
push
and
hlt
iret
push
fnsetpm(287
das
rorl
test
jecxz
ret
jecxz
sbb
incl
daa
dec
leave
and
mov
hlt
add
jecxz
shr
ds
jle
pop
jne
test
sbb
sub
sub
sti
add
push
sbb
flds
xor
imul
xor
nop
dec
add
inc
test
inc
sbb
jecxz
test
jns
insb
dec
imul
jecxz
jmp
out
gs
push
xor
neg
sub
jecxz
ret
out
pop
sbb
inc
xchg
out
add
adc
sbb
das
aaa
inc
fs
cs
in
mov
and
in
cmp
into
cmp
lret
shll
ss
adcl
mov
imul
nop
aas
es
and
jbe
ljmp
testl
ret
and
inc
bound
addr16
jmp
jp
sub
enter
stc
jmp
add
lds
lret
into
xchg
inc
je
popa
mov
aaa
and
or
jmp
std
ds
jp
enter
fisttps
jle
out
sbb
ljmp
add
cmp
mov
hlt
cmp
push
dec
not
rol
push
or
bswap
bswap
push
mov
btc
and
stc
add
push
shr
mov
rcr
rcl
movsbw
mov
dec
xadd
seto
clc
mov
not
sar
clc
not
sub
pushf
lods
jmp
jmp
mov
xchg
test
cmc
mov
sbb
mov
and
stc
pop
sbb
add
push
data16
xchg
cld
sbb
sti
aad
push
pop
sub
fldt
shll
fs
add
add
pop
push
cs
pop
stos
sbb
push
dec
es
mov
inc
sbb
and
sahf
inc
popf
lret
rcrb
jl
xchg
jp
push
fadds
dec
lock
cs
outsl
insb
xor
andb
movsbw
pushf
setno
mov
lea
jl
pushf
movw
mov
pusha
movzbl
bswap
pushf
mov
pushl
pushf
pushl
ret
ja
xor
in
out
mov
pop
stos
out
outsl
sti
gs
sub
mov
gs
adc
les
dec
loope
inc
mov
push
aam
or
inc
dec
add
push
push
lea
jne
jb
inc
call
movl
movl
pushf
push
lea
jmp
lea
add
shl
rcl
rol
mov
not
mov
test
cmc
repnz
pusha
lea
jne
cwtl
jmp
pusha
pusha
stos
movw
pushf
movb
pushf
lea
jmp
mov
shl
sub
clc
mov
clc
sub
cmp
cmc
pushf
pushl
popl
cmc
cmp
jmp
mov
jmp
jno
cmp
jns
ret
pop
jns
repz
sub
fisttpll
or
dec
adc
mov
jbe
push
data16
jecxz
sbb
add
movsb
pop
je
sub
inc
js
fwait
push
add
cld
fwait
dec
fsubl
insl
pusha
xchg
cmc
push
je
sbb
lcall
dec
loopne
pushf
cmp
push
ljmp
jno
pop
pop
adc
inc
cmp
cmp
mov
loopne
shrb
lods
js
sub
test
sub
test
push
sbbl
dec
push
add
inc
mov
mov
and
xchg
push
jo
arpl
jecxz
sub
mov
lods
rorb
mov
jmp
hlt
sub
data16
fisttps
out
ret
mov
add
xor
inc
push
movsl
push
repnz
cs
cmp
pop
push
inc
dec
push
xchg
sahf
fsubs
hlt
insl
and
jno
dec
pop
pop
mov
xlat
cmp
lds
xchg
pushl
les
aas
sbb
cmc
outsb
fdivrs
sub
or
loope
push
fcmovb
jecxz
jg
fstl
sub
ljmp
outsl
lock
inc
and
dec
jnp
jnp
push
and
movb
pusha
movl
pusha
lea
jmp
not
push
ror
pushf
lea
das
sbb
inc
not
sub
cmp
stc
lea
push
aam
or
test
neg
push
rcl
bsf
push
sets
cmc
push
daa
aam
rcr
mov
jmp
lea
je
bt
cmp
pushf
lea
je
pushf
pusha
movb
lea
jmp
lea
jne
lahf
setge
bswap
bswap
movb
not
movzbw
push
call
cmc
cmc
cmp
stc
or
call
push
lea
jne
movsbw
movsbw
bswap
shl
mov
shr
bts
ror
sub
shrd
dec
mov
push
sub
clc
stc
stc
pushl
popl
clc
cmp
pusha
pusha
call
mov
seto
setnp
jg
clc
mov
jmp
jmp
sub
sub
xchg
fs
std
jnp
mov
addl
cmpl
jb
scas
lock
jns
in
repz
xor
adc
or
imul
ret
imulb
mov
and
fnstenvs
lock
int
mov
pop
test
in
jns
out
movsb
bound
mov
add
xlat
hlt
out
mov
rolb
mov
es
adc
xchg
repz
cmp
jae
mov
push
and
push
push
fld
daa
iret
out
xchg
lcall
xchg
shl
sti
pop
xchg
cmp
outsl
push
mov
sub
testb
xor
pop
xor
pop
or
cs
push
sub
in
cli
jle
and
jno
push
movsb
add
loopne
mov
mov
lret
jl
mov
add
out
inc
lds
pop
std
mov
nop
out
xchg
mov
lods
stc
mov
pop
outsb
int
in
lock
xor
mov
iret
lea
jb
push
cmc
cmc
cmc
cmp
pusha
push
call
stc
test
pushf
cmp
pusha
pusha
pushf
lea
jb
cmc
clc
pusha
cmp
lea
jb
jae
clc
and
inc
mov
jmp
push
mov
jbe
imul
bound
out
orb
cmp
xchg
sub
add
adc
dec
xor
or
xchg
mov
add
lock
mov
sbb
push
lret
sbb
lock
fistpl
hlt
lahf
fs
adc
sub
rorb
and
popa
xchg
sbb
inc
lods
testb
shr
aam
add
movl
dec
call
push
push
lea
call
push
mov
pusha
lea
jmp
jmp
not
push
mov
mov
mov
jmp
pusha
cmpb
call
push
cltd
xchg
mov
pop
or
adc
sub
sub
jmp
and
div
rolb
or
cmpsb
inc
mov
pop
rclb
hlt
pop
jg
pop
movsl
fwait
lret
mov
jg
iret
imul
mov
pushf
inc
test
repz
xor
test
aas
xchg
cmp
ja
xchg
shll
stos
lea
je
setg
movsbw
lea
pushf
movzwl
push
lea
bswap
movw
mov
movw
lea
call
pusha
pusha
push
lea
jne
push
pop
setbe
mov
pushf
lea
jmp
adc
xchg
adc
or
sub
xchg
jne
pop
gs
hlt
and
mov
dec
push
loope
mov
and
adc
and
xor
mov
dec
xchg
xchg
push
ret
adc
loope
ja
sbb
in
call
add
ss
cmpsb
testl
cwtl
sti
in
push
xlat
add
pop
out
jecxz
jp
xor
xchg
lret
shrl
jp
sar
imul
out
lods
jge
arpl
int3
clc
lret
mov
cmpsb
popf
pop
add
pusha
mov
insb
imul
aaa
adcl
pop
sbb
xchg
aas
adc
ja
and
pop
ret
xchg
in
fucom
inc
inc
iret
cmp
pusha
add
test
pop
jae
inc
xlat
xchg
mov
xchg
cs
push
jp
repnz
movsb
xor
sbb
xchg
xchg
aas
pushl
or
jmp
sbb
jbe
or
sub
lret
mov
mov
outsl
mov
cwtl
add
mov
inc
push
jne
dec
inc
or
cmp
xor
pop
not
cwtl
lahf
lea
pushf
mov
pusha
mov
jmp
and
and
and
and
cli
insb
inc
fcmovu
repnz
cld
insl
fmull
fdivs
std
in
lret
pop
adc
or
pop
xlat
xor
lahf
sti
jecxz
fldt
xor
sbb
int
std
or
push
lahf
test
jmp
ljmp
jbe
int
pop
enter
sub
and
jne
xchg
dec
test
jbe
mov
gs
adc
push
jle
fnstsw
jmp
dec
pop
pop
and
je
add
movl
pusha
movl
push
lea
jmp
inc
clc
clc
cmc
xor
call
dec
jo
or
mov
mov
xor
out
ror
lods
shl
ficomps
jae
pop
loopne
call
ss
add
mov
iret
xor
xor
rorl
xor
test
add
mov
bt
sub
adc
stc
shr
rcr
xchg
ror
bsr
mov
shrd
add
pusha
call
jmp
sete
pop
movl
push
mov
lea
sets
lea
lea
jbe
push
pushf
pushl
popl
push
mov
pushf
pushf
pushl
ret
shrd
and
shrd
mov
call
bt
cmp
repnz
call
pushf
cmp
call
test
mov
pushf
pushl
push
lea
jne
pushf
mov
mov
pushf
movb
pusha
mov
lea
jp
pushf
pushf
lea
call
pushf
jmp
pushf
lea
call
call
mov
pushl
pushl
push
movw
pushl
ret
xchg
push
movw
jmp
jae
adc
pop
xlat
addr16
imul
sbb
cmp
outsb
in
ret
xlat
repz
js
mov
push
scas
pop
aaa
inc
jle
mov
sbb
pop
int3
lods
xchg
es
dec
aas
sbb
pop
and
sub
rcl
gs
lcall
inc
xlat
in
pop
cmpsl
jae
cli
sti
xchg
repnz
jb
ss
xchg
outsl
icebp
push
repnz
stos
mov
negl
jns
fdivs
sub
repnz
lahf
dec
mov
repnz
mov
mov
shl
out
or
outsb
mov
test
jnp
cmpsl
add
jg
out
sbb
pop
mov
cmp
jl
xchg
and
xchg
lcall
lods
ficomps
es
push
fdivl
adc
push
data16
adc
loop
sub
outsl
jmp
out
scas
in
aam
rolb
test
fdivp
push
cmpsl
mov
adc
mov
pop
ret
inc
sbb
sbb
push
mov
mov
push
and
xor
repz
repnz
xchg
aam
xchg
inc
mov
pop
mov
stos
xchg
jne
lret
cwtl
xchg
aas
lds
mov
mov
xor
dec
and
lcall
movsl
call
adc
fistps
data16
int
lret
push
jmp
jns
lds
test
bound
pop
insb
push
cmp
sub
shll
mov
mov
xchg
mov
adc
stos
hlt
pop
rcll
std
mov
iret
pop
mov
adc
mov
popa
cmp
cld
xor
jbe
or
lret
repz
inc
roll
xor
inc
mov
in
pop
jne
cmp
ja,pt
xor
rcll
hlt
and
sub
outsl
and
pop
dec
sahf
imul
fisttpll
pushl
xchg
into
daa
iret
pop
xchg
out
mov
stos
xchg
pop
dec
pusha
add
push
pushf
fs
push
inc
shrb
jle
adc
push
xor
sbb
test
rorl
sub
xchg
stc
cs
lds
fnstenv
and
sbb
mov
jne
cmpsb
sbb
outsl
push
out
and
pop
push
and
movsl
dec
jecxz
pop
lahf
push
mov
cmpsl
mov
mov
insl
mov
lahf
in
mov
sub
inc
xchg
ja
dec
mov
xorl
stos
cmpb
mov
xor
outsl
sub
sub
outsb
mov
insb
bswap
movsb
imul
inc
mov
repnz
pop
mov
fwait
sub
jae
add
mov
push
pop
inc
enter
mov
lods
jnp
inc
test
ds
push
popf
xchg
lret
xorl
int3
push
mov
and
lahf
fmuls
sbb
mov
sarl
out
xchg
lods
xchg
xchg
or
fsubrs
add
ror
xor
div
fimuls
mov
das
hlt
add
cmp
js
or
stc
sbbb
inc
or
loop
into
lret
add
and
fldcw
imul
add
mov
cs
xor
cli
negb
and
enter
or
nop
popa
aas
add
out
pusha
cmp
xor
orl
jg
adc
cmp
sbb
popa
in
mov
cmp
fnsave
cmp
cmp
fistl
mov
movsb
mov
mov
jne
loop
stos
pop
fiaddl
xchg
enter
test
jecxz
loope
or
fisubl
out
xchg
cmp
mov
mov
add
mov
adc
and
insl
mov
sbb
or
mov
mov
dec
addr16
sarl
cmp
mov
xchg
push
out
add
jno
es
insl
adc
jecxz
sub
jno
mov
loop
mov
inc
and
testl
mov
cwtl
and
inc
xchg
cmp
shrl
and
stos
sub
hlt
shr
cltd
mov
lods
pushf
cmpsl
and
pop
xchg
ds
icebp
or
std
mov
outsb
out
repnz
ficoml
jecxz
dec
pop
jnp
jg
jo
sahf
mov
push
xchg
inc
test
jl
mov
ljmp
push
push
pop
fdiv
sbb
into
sub
sbb
les
jb
fs
out
in
lock
mov
sbb
mov
pop
std
mov
loop
cs
push
push
stc
sbb
cmp
mov
lds
pop
dec
pop
repnz
mov
leave
jns
clc
jle
adcl
fidivrl
push
cmp
int3
and
nop
jmp
stos
mov
xchg
lret
dec
daa
cld
pop
cltd
and
cmp
jp
adc
or
and
scas
loope
int
push
ret
push
inc
cmp
aas
pop
scas
lret
sub
je
xor
xchg
in
insl
aaa
xchg
out
fisttps
jne
cmp
and
fildll
in
or
mov
push
mov
cmpsl
jmp
lods
sbb
push
add
es
lods
jno
push
outsb
adc
jle
mov
stos
loopne
pop
adc
sbb
sbb
sub
addr16
mov
mov
lods
mov
cwtl
inc
repnz
push
pop
pop
sub
sub
inc
or
iret
call
lods
ret
jbe
cmpsb
dec
cli
jb
mov
xor
into
mov
fwait
push
cmc
insl
jle
mov
pop
lahf
imul
adc
fcoml
add
xor
jb
test
xor
mov
push
lcall
push
adc
or
bound
fmuls
sub
push
pop
fwait
jmp
dec
in
mov
push
fs
pop
dec
outsb
xchg
stc
sahf
pop
fadds
or
jbe
pop
dec
idivl
inc
pop
in
inc
inc
xadd
mov
mov
pop
jbe
push
in
mov
pusha
xchg
dec
dec
and
loope
mov
mov
push
lea
call
jmp
pusha
pusha
lea
jb
pusha
pushl
mov
pushf
pushl
ret
push
pushl
lea
call
call
pushf
lea
jb
pushf
jmp
call
and
mov
pop
dec
fldcw
or
lea
mov
loopne
dec
fs
or
lock
int
stos
repnz
repnz
jge
sbb
sbb
pop
cld
into
dec
mov
inc
jno
and
pop
daa
sti
arpl
mov
push
push
pop
fwait
xchg
shl
push
xor
nop
clc
dec
cmp
hlt
lea
inc
mov
jmp
stos
scas
loopew
outsb
loopne
shll
popa
lods
mov
fsubrl
mov
sub
xor
push
xor
pop
imul
cmpl
mov
loopew
cmpsl
mov
or
popa
scas
xchg
sbb
xchg
gs
cmp
in
icebp
cltd
jb
fsubl
mov
mov
popa
lods
faddl
xchg
mov
es
repz
popf
sarl
lods
jbe
fcomps
add
dec
push
add
add
add
add
add
add
add
inc
push
add
inc
push
add
push
add
add
add
add
inc
push
add
aad
push
lods
mov
xchg
inc
pop
or
and
xchg
lods
cwtl
fists
push
push
push
nop
lcall
sub
les
shr
inc
dec
imul
mov
xchg
or
aad
insb
shr
and
sbb
jae
inc
jge
movsb
cmp
outsl
lcall
inc
js
xlat
in
test
popa
xchg
call
mov
xchg
mov
xor
dec
push
jmp
inc
sbb
xchg
push
call
push
xchg
adc
pop
dec
mov
or
les
mov
stos
shr
push
in
sub
mov
inc
mov
jo
lods
aaa
fiaddl
pop
mov
movsl
inc
cmp
cmpsl
mov
fs
xchg
test
movsl
aas
out
int
mov
arpl
mov
jecxz
xchg
sbb
stos
pop
std
xor
out
mov
lock
adc
cli
mov
in
call
ficoml
mov
jg
sahf
ret
adc
lods
gs
pusha
test
inc
leave
adc
dec
in
andl
cmp
adc
jle
cld
ja
inc
or
mov
call
fadd
inc
push
test
jl
jns
loopne
mov
scas
dec
pop
mov
xorl
fldcw
xchg
inc
inc
lahf
jp
imul
push
dec
adc
lcall
int3
call
push
arpl
mov
cmp
in
jbe
into
push
mov
int
ja
jne
inc
xor
data16
ret
push
mov
jae
mov
jns
scas
push
fisubl
into
jno
mov
jl
aaa
mov
shlb
xchg
in
lods
xchg
bound
jmp
outsl
dec
pop
mov
insl
mov
pop
add
jns
out
rorb
out
jae
outsb
ljmp
push
rorb
jg
pop
sub
insb
sbb
in
adc
sti
cmp
sti
les
sub
inc
dec
push
cmp
ret
xchg
sub
push
sub
jne
add
fwait
dec
mov
xchg
cmp
dec
int3
xor
outsl
test
lahf
mov
fisubl
mov
nop
mov
xor
pop
loop
cmp
xchg
push
fmulp
sbb
in
adc
shll
xor
or
or
test
testl
inc
lds
lock
and
mov
dec
mov
and
call
sub
mov
in
roll
cmp
mov
insb
dec
xchg
xor
ja
fs
or
mov
cmp
sbb
out
popl
sbb
aam
push
xor
inc
push
adc
dec
shlb
mov
icebp
movsb
push
lods
mov
push
int3
mov
insb
out
shrl
dec
mov
lahf
xchg
imul
cwtl
lock
mov
xor
insb
sbb
sahf
xchg
cltd
iret
mov
adc
test
add
cli
mov
xchg
shrl
xlat
mov
mov
imul
in
pusha
gs
cltd
inc
add
mov
jno
fstpl
push
xor
push
sar
adc
pop
in
mov
insl
dec
loopne
iret
dec
dec
push
sub
ds
cwtl
xchg
sub
es
rol
pop
out
add
negl
jo
sub
push
xchg
lret
dec
call
out
out
into
push
mov
or
imulb
jnp
mov
mov
stos
es
lods
jg
scas
and
test
pop
xor
sbb
and
clc
mov
in
jmp
loop
adc
roll
outsl
movsl
xchg
nop
and
dec
pop
xchg
mov
pop
and
xchg
mov
sub
notl
xor
jb
mov
nop
test
sbb
jnp
outsb
js
and
ljmp
inc
xchg
dec
or
shr
inc
loopne
mov
test
mov
sbb
rcrb
call
jg
sub
and
test
fs
lds
mov
lcall
mov
sahf
or
call
dec
mulb
and
sbb
icebp
push
jecxz
push
inc
mov
jbe
out
ficomps
loopne
daa
lods
dec
je
xor
add
popl
stos
ja
rol
gs
dec
bound
pop
cmp
push
mov
andl
popa
mov
xchg
fcmovnu
leave
xor
lret
mov
xchg
sbb
sub
enter
pop
cmp
and
insb
sti
cs
xchg
sti
enter
mov
nop
imul
cmpl
nop
rsm
mov
insb
pop
popf
xchg
aaa
mov
aaa
dec
xor
imul
mov
sbb
lret
adc
mov
xor
sbb
loop
testb
jecxz
leave
push
stos
pop
xor
mov
les
pusha
pushl
mov
sub
es
ss
adc
or
jecxz
lret
int3
inc
push
sub
movsl
pop
xchg
mov
add
push
pop
xchg
shrb
cmp
add
inc
xchg
repz
or
in
sub
pop
xlat
inc
adcb
cmp
push
jge
jmp
jl
outsb
insl
ljmp
int3
push
lcall
hlt
dec
xor
jmp
lea
pop
mov
movsb
popf
fs
xchg
inc
loope
dec
inc
cs
push
arpl
xor
or
cmp
jb
sbb
dec
mov
xlat
inc
or
sub
mov
mov
pop
mov
in
push
push
ljmp
jno
pop
mov
or
add
xor
xchg
dec
sub
mov
xlat
ficompl
mov
and
inc
pop
inc
cmp
mov
xor
xchg
xor
sbb
les
push
mov
mov
adc
fcoml
shll
mov
stos
fisubrl
and
aam
jle
xchg
movsl
shlb
into
add
xchg
call
mov
dec
xor
jns
mov
mov
scas
cmp
fisubl
or
add
flds
movsl
addb
jne
jp
or
in
add
gs
sti
mov
fsubl
inc
jo
or
cmp
loop
ljmp
inc
push
pushf
jecxz
out
xchg
jl
mov
das
icebp
cmpsl
jnp
scas
leave
sahf
mov
sbb
adc
filds
test
lods
popf
pop
aad
cmovge
pop
push
mov
fwait
adc
jge
es
je
fsubrl
adc
sbb
std
add
push
out
or
stc
push
adc
mov
add
and
hlt
test
cltd
ja
aas
jne
mov
dec
xchg
imul
in
arpl
jecxz
fs
shl
sbb
repz
pop
popf
sbb
out
xchg
push
aaa
ja
xor
xchg
lds
sbb
movsl
xor
leave
test
lcall
jo
sbb
pusha
in
notl
jno
cwtl
adc
sbb
xor
mov
outsl
movsb
xchg
dec
into
popf
jo
mov
stos
mov
add
negb
xchg
jmp
movsb
test
cmp
pop
mov
clc
lds
inc
dec
jp
cld
jmp
fstpl
rcrb
fcompl
cmp
jo
mov
xchg
adc
and
cmc
sbb
stos
mov
or
adcb
mov
cmp
movsb
repz
and
arpl
pop
xor
fiaddl
testb
sarb
push
pusha
mov
xchg
insb
inc
scas
xor
test
mov
sub
push
xchg
xor
and
popa
mov
in
adc
jo
xchg
popa
xchg
inc
pop
cwtl
mov
test
inc
jno
cwtl
pop
adcb
and
mov
xor
inc
pop
ficompl
or
adc
lret
xchg
cmp
or
in
daa
jecxz
xchg
push
jmp
or
sarl
mov
and
mov
jns
pop
and
out
dec
push
in
jae
inc
test
mov
sbb
add
pop
addr16
jo
outsb
push
mov
xor
or
mov
dec
jg
xor
inc
mov
pop
push
or
mov
xchg
sti
or
shl
test
clc
sub
rolb
out
sbb
je
fcmovnu
cmp
bound
adc
xchg
insb
push
inc
mov
jl
sbb
sbb
sahf
jecxz
push
test
jae
xchg
pop
ret
and
push
mov
mov
push
xor
dec
push
jecxz
fnsave
push
push
loop
out
lret
xor
dec
lds
sbb
imul
aam
mov
cltd
cmp
dec
and
inc
xor
mov
sub
push
bound
sub
push
jle
cmpsb
cmp
movsb
and
stos
mov
stos
xlat
cmpsb
xchg
jno
sub
sub
pop
into
cwtl
dec
fucomip
adc
cmpsl
push
es
shlb
push
mov
aam
mov
mov
mov
mov
rorl
cld
or
adc
mov
mov
cmpb
xor
imul
bound
dec
orl
mov
in
fstpt
rcll
mov
xor
jp
pop
outsl
lds
in
push
inc
mov
les
jg
lea
mov
dec
inc
add
cmpsl
outsl
ficoml
jmp
inc
bound
xor
jnp
inc
rcrb
push
push
cmp
pop
stos
and
lcall
xchg
and
and
or
mov
ss
pop
in
pop
push
fisttpll
dec
imul
icebp
mov
cmc
mov
inc
loopne
xor
insb
mov
hlt
push
mov
dec
fiaddl
daa
sub
mov
inc
popf
mov
mov
push
sar
out
test
shrl
pop
and
push
subl
fnstenv
enter
push
in
mov
dec
cmp
adc
sub
mov
add
out
inc
stc
arpl
push
es
rclb
sbb
std
pop
mov
mov
mov
mov
xchg
jne
or
push
adc
jmp
sti
and
xchg
and
add
outsl
aas
fsubrl
and
and
xor
das
cmpb
test
mov
rolb
fisubl
adc
jne
fwait
mov
lds
xchg
shl
mov
arpl
clc
addr16
fstps
push
leave
in
jb
shlb
push
add
jmp
or
sbb
fsubr
mov
test
loop
clc
rcrb
loop
or
in
jo
mov
pusha
inc
push
sahf
inc
daa
xlat
cmp
adc
stos
ffreep
add
cld
xor
pop
scas
daa
add
fisubl
push
pop
xlat
xchg
cmp
xor
jno
or
mov
fcmovne
and
mov
sbb
mov
xor
or
movw
movb
jmp
jmp
xchg
outsb
cmp
data16
pop
dec
lcall
lods
jecxz
xor
loopne
sahf
jbe
pop
dec
leave
andl
shrb
ds
fidivs
loope
ja
and
pop
out
jo
jb
push
pusha
pushf
lea
jmp
lea
jbe
sbb
mov
xchg
test
not
shld
add
xadd
inc
adc
mov
rcr
mov
movsbw
shld
add
movzbw
shr
ror
bts
movl
rcr
mov
cmc
pushf
pushl
cmp
pushf
lea
jbe
shr
bswap
sub
bswap
mov
ror
pushf
lea
mov
movw
add
bsr
rcl
pop
add
shr
push
sbb
mov
stc
xor
add
lea
jae
bswap
mov
not
mov
call
lea
ja
jae
pop
pusha
mov
lea
setnp
mov
bswap
not
movsbw
jmp
lea
jne
ror
test
mov
test
jmp
lea
je
mov
pusha
push
mov
pusha
bswap
jmp
lea
je
stc
add
jmp
call
mov
pushf
daa
jmp
in
popf
or
push
shrb
sahf
mov
daa
pop
das
mov
xchg
aas
in
out
lock
jno
cmp
sbb
adc
push
sbb
mov
or
fadds
cmp
lds
mov
sbb
cld
xor
ss
or
in
into
gs
jecxz
aam
dec
pusha
inc
adc
test
test
call
mov
call
clc
stc
shl
pushl
call
pusha
movl
push
pushf
push
movl
pushl
movb
lea
jmp
inc
test
and
sarl
imul
fisubrl
inc
cmp
push
aaa
pop
test
fcomps
dec
movsl
jae
loope
fidivrs
cmpsb
or
out
arpl
cmc
cmp
shll
ret
pop
xchg
adc
xchg
and
jbe
and
es
push
mov
insb
dec
lahf
xchg
arpl
lods
int
sar
push
push
sbb
jnp
ret
and
aam
jns
push
pop
push
push
or
pop
test
icebp
icebp
xchg
push
sub
push
xchg
popa
push
xchg
test
cld
repnz
test
mov
out
push
xchg
inc
fnstenv
mov
mov
cmp
dec
das
pop
iret
xlat
sbb
cmp
push
jmp
push
jge
mov
xchg
sbb
scas
sub
dec
bound
mov
push
dec
xor
inc
dec
dec
add
leave
mov
lea
jmp
lods
lock
mov
sbb
jle
adc
loop
push
push
enter
mov
test
jo
jb
push
into
scas
sbb
ljmp
fstps
jg
jnp
enter
stos
js
xchg
mov
cwtl
xor
and
test
hlt
scas
loopne
adc
sub
pop
pop
pop
movsl
lcall
call
sub
out
push
jns
inc
stos
aad
in
cmp
push
aad
ss
arpl
scas
push
xorl
out
xchg
pop
fsub
loopne
movsb
cli
mov
mov
pavgb
cmp
fldl
jp
out
fnstsw
ljmp
dec
mov
xor
testb
inc
fists
and
fsubrp
mov
test
add
into
xchg
mov
sbb
push
nop
pop
xchg
dec
cmp
ljmp
jmp
ficoms
push
pusha
movb
stc
cmp
or
pusha
jmp
movsl
xor
cmp
dec
pop
aad
cmp
dec
movsl
mov
dec
movsl
inc
arpl
jo
cltd
aam
icebp
leave
mov
cmp
cmp
stos
jns
lret
sbb
daa
fisubs
iret
sub
jbe
dec
push
mov
jl,pn
mov
and
popf
xor
mov
xor
pop
add
pop
add
mov
jmp
push
jp
push
push
pusha
movl
mov
pushf
pushf
lea
jmp
call
mov
cwtl
lea
movsbl
pop
call
push
sbb
cmpsb
push
adc
fdiv
aam
repnz
mov
scas
bound
xchg
adc
aad
sub
push
hlt
cmpsb
fnstenv
das
and
mov
cwtl
pop
push
jle
add
loop
sahf
jbe
sbb
mov
or
aad
lahf
push
xor
jae
fdivr
xor
lea
jne
cwtl
movsbw
call
push
xor
jmp
call
lea
pusha
mov
call
xor
jo
and
push
mov
std
cs
or
movsl
arpl
std
pcmpgtd
sub
in
pop
push
scas
or
repz
mov
fmull
stc
daa
add
dec
sub
sub
cmpsb
xchg
insl
push
out
pusha
faddl
fidivs
aam
xor
mov
imul
push
popa
sub
add
mov
pop
fs
test
xor
pop
out
add
pop
and
fistpll
aas
addr16
cmc
inc
sbb
jecxz
pop
loope
or
inc
or
mov
out
in
push
add
sbb
out
nop
faddp
jne
mov
pop
jbe
xchg
adc
sbb
pop
mov
xor
and
inc
cmc
jmp
bswap
mov
mov
mov
mov
mov
lea
jmp
movb
pushf
call
pushl
popl
movb
pushl
ret
pushf
movl
pushf
jmp
inc
push
add
add
add
add
add
push
push
add
sbb
popf
push
adc
or
cmpsl
adc
add
add
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
outsl
fs
gs
imul
add
pop
mov
dec
jnp
push
movl
push
mov
lea
jmp
movb
jmp
jno
adc
jle
dec
ja
call
xchg
and
xchg
gs
sbb
mov
hlt
addr16
fldt
sbb
out
jbe
imul
les
and
and
insb
jbe
dec
data16
movsb
add
add
sbb
shld
setb
shl
push
bsf
mov
bswap
sbb
not
neg
sub
cmc
daa
aas
push
lahf
daa
push
lahf
call
pushw
popfw
movw
jmp
push
cmp
jmp
stc
test
bt
bt
add
jmp
xor
mov
jmp
mov
jmp
call
mov
sti
cmp
push
pushw
es
cmp
cwtl
inc
out
mov
cmp
jmp
iret
fld
jno
pop
mov
mov
hlt
inc
push
fadd
pop
and
add
stos
iret
add
inc
pop
cmp
mov
mov
movsbw
movb
pushf
cwtl
mov
jmp
not
lea
jmp
pusha
cmpb
jmp
inc
push
add
mov
sti
cltd
dec
loop
lods
sbb
add
loopne
stos
clc
inc
or
xchg
in
cmp
adc
imul
pmulhw
into
in
pop
add
cmp
fistps
mov
inc
fwait
das
shrl
pushf
push
imul
and
sbbb
movw
push
call
add
pushl
pushf
lea
jmp
cmc
bt
ror
jmp
mov
dec
cmp
jno
test
fdivrl
mov
inc
xchg
lods
lods
sbb
dec
cmpsb
cmp
push
cmp
lods
xchg
fxch
or
nop
fldl
es
cli
js
cli
lds
int
loope
mov
fucom
outsb
mov
int3
pop
sub
push
in
xchg
jmp
pushf
ret
mov
clc
bt
stc
pushf
call
in
loopne
push
mov
dec
fldt
push
fdecstp
fistpll
jle
push
add
test
cmc
iretw
negl
sub
dec
in
imul
in
aaa
pop
mov
cmp
xchg
repnz
push
inc
and
mov
and
or
or
js
cmp
mov
push
cld
loopne
test
fst
add
push
mov
aad
fwait
gs
jl
in
nop
push
lcall
fstp
sub
mov
mov
add
mov
xor
or
movl
jmp
jmp
and
shld
sub
not
bswap
xchg
movzbl
pop
jmp
pusha
pusha
mov
push
lea
jmp
cmp
clc
stc
repnz
call
movzbw
pushf
push
mov
mov
movw
lea
jmp
push
mov
jno
aad
push
pusha
mov
xor
pusha
sbb
jo
fucomp
inc
cmp
pop
rcrl
mov
inc
mov
leave
pop
adc
or
sahf
xlat
mov
mov
sub
jo
xor
addr16
sub
in
xor
mov
xor
movsb
cmp
adc
mov
mov
test
imul
ljmp
je
movzbw
shrd
add
stc
mov
push
call
pushf
mov
jmp
test
pushl
cmpb
pushf
pushf
pushf
movl
lea
jne
movsbw
and
sub
mov
jmp
jmp
pushf
movl
pusha
pusha
movl
mov
movw
push
lea
jmp
repz
jg
push
stos
or
in
mov
dec
pop
arpl
jmp
mov
adcl
fsubrs
imul
ret
in
dec
and
sbb
jge
mov
cmpsl
mov
xchg
aas
push
mov
lods
xlat
call
push
mov
bswap
pop
pusha
lea
call
push
rep
call
outsb
lcall
prefetchwt1
or
pop
enter
das
int
dec
and
cmp
shl
jl
popf
jmp
push
sbb
stos
andl
sti
dec
test
test
lods
cli
pop
lds
and
stc
int
push
push
sbb
mov
in
cmp
push
sub
xor
pop
mov
shrb
jbe
push
mov
in
je
std
push
ror
notl
stos
xor
inc
pusha
stos
mov
pushf
pusha
call
sub
cmpsl
test
adc
xlat
push
mov
push
popa
sbb
les
push
sahf
cmc
adc
in
and
sub
add
mov
sbb
jne
push
sub
adc
inc
int
mov
sbb
cmp
test
ds
mull
sbb
mov
mov
xchg
loope
adc
add
fisttpll
pop
sub
int
fs
gs
cs
mov
jl
push
sbb
call
hlt
rep
pop
xor
mov
lret
adc
add
jb
test
call
lea
jne
bswap
lea
movb
lea
push
lea
pushf
mov
lea
lea
pushf
movb
pushl
push
movl
push
mov
pushl
pushf
movb
pushl
ret
pusha
mov
movl
pusha
pushf
lea
jmp
imul
out
dec
ja
xor
out
sub
movsl
decb
fisubl
pop
lods
stc
xchg
jecxz
xor
lahf
js
pusha
cmp
pop
lret
jmp
xchg
sbb
enter
push
lock
int
pusha
inc
xlat
and
jo
jbe
out
inc
test
popa
pushl
pop
dec
xor
pop
pop
mov
fimull
inc
push
pushf
arpl
xchg
or
cmp
stc
imulb
test
mov
fst
mov
inc
or
mov
mov
adc
mov
popf
arpl
lods
jmp
inc
fldl
in
xor
xchg
lret
mov
dec
and
call
pushf
xor
call
lea
ja
bt
clc
clc
shl
sub
jo
pusha
add
add
btr
clc
mov
sbb
neg
sub
mov
jmp
pushf
movb
mov
pushf
pushl
ret
pushf
jmp
mov
lea
jne
cmp
mov
cmp
or
pushf
pusha
pushf
call
nop
mov
lods
inc
xchg
idiv
sbb
cld
lods
clc
enter
aad
gs
out
xlat
stos
and
push
lods
and
dec
sbb
mov
fisttps
rcll
lods
clc
xchg
lock
dec
pop
jp
add
rcr
scas
add
xlat
xor
stos
mov
pushf
jmp
in
mov
sti
dec
xor
or
adc
mov
mov
cmp
sti
mov
push
das
push
mov
dec
cmpsb
mov
aas
sti
cmovns
and
or
rcl
insl
xchg
push
imul
ds
push
sub
push
ret
test
or
push
in
in
dec
insb
mov
mov
xor
mov
jle
lds
xchg
pop
data16
xchg
sbb
inc
xor
test
scas
js
and
lods
xor
dec
insl
mov
into
mov
stc
sub
jmp
call
in
loopne
sarb
loop
outsl
or
push
rep
mov
xchg
out
scas
jns
sub
adc
fwait
inc
iret
cmp
leave
and
cmp
aad
clc
jmp
loope
les
subl
adc
in
enter
repz
shrb
hlt
iret
js
sahf
fcmovnu
negb
jns
outsb
push
pushf
pop
lcall
bound
cmp
jmp
inc
mov
push
mov
sahf
fsubrl
mov
std
mov
xor
add
decb
fdivl
sub
enter
out
mov
pop
or
repnz
subl
cmp
and
int3
xchg
insb
fwait
push
sbb
cli
gs
sub
jcxz
dec
outsb
add
mov
notl
mov
fnstcw
sub
ror
adc
push
mov
sbb
dec
cmpsl
daa
mov
jns
adc
setp
dec
lcall
inc
fmuls
cmp
push
mov
cli
inc
mov
repz
dec
std
mov
cld
enter
daa
mov
jo
aas
sbb
addl
or
jge
sti
mov
lahf
sbb
scas
mov
mov
sti
out
and
add
mov
jg
aam
jl
leave
cmp
test
cmc
pop
add
cmpl
out
push
xorl
jo
adc
test
sti
outsb
imul
dec
dec
call
add
ret
ret
cmp
into
mov
lret
int3
pop
scas
stos
cmpb
leave
push
insl
dec
out
std
jns
push
jge
sub
pop
xchg
cmp
movsl
cmp
lcall
data16
pusha
movl
call
sub
pushf
jmp
loopne
cmp
sti
sbbb
es
adc
dec
jge
shll
mov
xor
cmc
inc
iret
rcr
dec
mov
mov
out
mov
push
add
call
xor
cmp
dec
mov
sbb
xor
call
cltd
xor
rorb
insl
stos
sbb
push
xor
dec
push
test
or
shrl
popa
cld
push
push
cs
sub
xchg
jp
sti
mov
shlb
jp
shrl
jbe
pop
xchg
push
xor
cmp
aad
jmp
add
push
les
add
sbb
xchg
pop
mov
dec
jo
lcall
cld
test
clc
pusha
jmp
cmp
icebp
fisttps
mov
out
lret
addr16
or
test
jp
cmp
inc
sti
mov
or
push
add
hlt
test
test
icebp
outsb
sbbl
sub
scas
and
mov
mov
mov
sbb
jmp
imul
movsb
fwait
js
mov
push
lods
ror
mov
sbbl
in
and
mov
sbb
nop
push
popw
xchg
test
or
fisubrs
fucomi
scas
jl
std
mov
div
leave
popa
mov
xor
daa
cmp
cld
in
mov
les
nop
scas
mov
mov
mov
cmp
jp
or
fstl
dec
cltd
ja
add
sbbb
out
sar
mov
dec
aad
pop
mov
sahf
mov
popl
jle
fistl
lods
mov
fisttpl
cmp
sbb
mov
loop
xor
and
inc
daa
rolb
pop
inc
xchg
mov
stc
mov
cmp
gs
push
cs
fildl
pop
jp
rolb
jb
sti
pusha
dec
scas
movl
inc
sbb
and
mov
mov
sub
add
repnz
pop
out
in
rclb
pop
sub
xor
scas
negb
or
fbld
fwait
adc
loop
cmp
add
jl
mov
mov
mov
xchg
or
mov
rorb
mov
sti
jb
rclb
movsb
gs
sub
jb
jmp
leave
in
push
hlt
pop
pop
xchg
fwait
movsb
std
dec
push
mov
hlt
movsb
arpl
je
or
pop
inc
mov
and
mov
cltd
xor
jbe
insb
push
adc
sbb
mov
call
xchg
testb
clc
lods
test
mov
jp
jno
mov
jno
pushf
add
das
sbb
sbb
xchg
xor
jg
mov
push
sti
jmp
jl
movhps
cmp
lahf
mov
rcll
sub
sbb
adc
stos
mov
mov
cli
mov
cmp
movsl
xchg
sub
leave
sbb
je
push
adc
mov
inc
and
xchg
mov
pushf
push
push
pushf
pushl
ret
str
pushf
call
bswap
cwtl
lea
pushf
push
movl
pushl
call
mov
movb
lea
je
setne
movsbl
jmp
dec
dec
xchg
mov
mov
mov
es
fidivs
xorl
aad
adc
test
outsb
into
mov
nop
gs
sub
push
mov
xlat
push
push
add
sarl
enter
int
stc
sbb
push
xchg
fdivl
jo
mov
pusha
mov
sbb
mov
dec
push
or
jg
fsubrl
mov
xchg
push
mov
xchg
arpl
xchg
sub
xor
rorl
pop
lds
cmc
xchg
push
ret
test
sahf
xor
aad
mov
cs
sbb
fimuls
push
stos
inc
int3
push
jne
mov
push
bound
xchg
mov
xchg
jb
jno
push
jge
mov
mov
fldenv
scas
aaa
mov
arpl
imul
dec
in
jg
flds
jmp
xor
mov
xchg
lea
jne
neg
mov
cmc
pusha
cmp
push
call
in
movsb
cmp
das
sbb
dec
ficompl
addr16
add
aad
xor
xchg
xorl
popf
and
pusha
stos
inc
ss
lcall
xchg
mov
jb
sahf
and
adc
add
pop
jb,pn
je
mov
imul
sahf
popa
inc
mov
pop
cwtl
or
inc
outsl
sub
enter
insl
fists
xchg
sbb
je
push
mov
inc
dec
lods
test
dec
jbe
sbb
rcrb
add
sbb
decl
xchg
jmp
out
jmp
cmp
pusha
lea
jp
jae
pusha
pusha
call
jmp
pusha
sub
cmc
pushf
test
cmp
call
out
or
pop
mov
xor
aad
mov
mov
xor
cmp
sbb
int3
pop
cmc
negb
ret
inc
sbb
jno
jno
jbe
leave
pop
icebp
mov
andb
dec
lret
mov
or
push
frstor
leave
sbb
cmp
sub
mov
sbb
ljmp
int3
fldenv
mov
daa
mov
pop
jns
inc
pmulhuw
aas
je
jecxz
stos
mov
jp
sbb
xchg
stos
lds
and
pop
cmpsb
push
push
push
nop
test
ljmp
loope
shl
or
cmp
add
sub
pusha
dec
push
cmpsl
scas
test
adc
mov
pop
jmp
rorl
insl
cmp
mov
mov
sub
inc
cmp
clc
sub
iret
inc
jbe
sub
test
lods
loope
ret
cltd
jb
mov
dec
ret
cmp
or
insl
or
out
fisubs
adc
sbb
xchg
cmp
lds
iret
push
ja
outsl
lret
mov
mov
call
imul
dec
ja
mov
sub
mov
dec
ja
fs
cmpsb
push
mov
cmp
sub
hlt
pop
lods
mov
cmpsl
in
inc
movntq
push
or
fs
jg
jne
mov
faddp
mov
or
repnz
lods
pop
xor
and
cmpsl
xor
sub
fs
jne
push
or
aad
aas
xor
xor
pop
dec
loop
mov
fisubrl
pop
cld
cwtl
dec
jae
inc
or
rorb
loop
in
or
dec
dec
dec
inc
inc
sbb
push
xchg
imul
mov
fld
lock
fildll
cmc
and
rolb
cs
test
jno
or
add
mov
mov
cmp
insb
cmp
cmp
mov
stc
loopne
jmp
adc
inc
jmp
and
and
pop
pmulhuw
clc
out
stc
addr16
dec
test
gs
dec
cmp
xor
arpl
leave
ffreep
imul
mov
out
addr16
sti
cmp
loope
stc
addr16
xor
jecxz
shll
jp
test
gs
out
aam
inc
sub
mov
mov
mov
rcll
jmp
cmp
out
stc
addr16
push
test
xor
mov
adc
xchg
fs
adc
jge
xor
stos
mov
outsb
ja
jg,pn
jo
dec
cmp
fwait
jg
test
push
daa
movsb
adc
insl
cmp
jbe
cmp
xchg
pop
sbb
test
inc
cmp
sar
fstl
xor
lret
mov
inc
mov
xchg
loopne
xorb
sub
cmp
cmp
lret
sub
fs
adc
out
clc
fptan
gs
sbb
jp
mov
pusha
loopne
xor
push
dec
sub
inc
mov
loop
shlb
dec
jns
mov
inc
push
add
and
push
in
fbld
arpl
sbb
iret
movsb
lock
insb
cmpsb
addr16
add
jo
cmc
stc
scas
mov
jle
mov
aam
xchg
push
dec
fldcw
cmpsl
jmp
out
arpl
rcr
vpminuw
les
sub
mov
scas
xchg
aad
shll
sbb
rorl
adc
pop
das
es
push
js
mov
pop
xor
clc
xor
jae
movsb
push
call
pop
outsb
and
cmp
mov
movb
lea
jae
cmp
bt
cmp
push
pusha
mov
lea
jae
call
nop
cmp
mov
push
dec
jmp
add
xchg
or
cltd
inc
in
lcall
adc
cmpsl
stos
mov
ds
fstps
pop
inc
pop
mov
pop
adc
sbb
cwtl
popa
jns
dec
aad
std
roll
or
pop
inc
adc
sub
imul
inc
cli
push
rcrb
adc
sbb
daa
ret
lea
xchg
xchg
rcr
xchg
pop
pop
popf
clc
cmp
outsl
cmp
jb
lds
movl
add
add
jae
sub
imul
mov
jne
dec
jnp
fnstenv
push
lea
jne
movzbw
movb
lahf
push
push
lahf
call
mov
setge
push
mov
lods
mov
xor
lea
jge
bt
bt
ror
push
call
jb
pushaw
add
add
jb
push
pusha
or
mov
out
xchg
add
add
jb
pop
bound
add
mov
jb
outsl
addr16
inc
push
or
inc
addr16
add
jb
rorb
add
lcall
dec
add
add
dec
pop
out
jb
dec
addr16
add
nop
xchg
push
bound
add
fsubrl
lret
pushaw
add
mov
arpl
bound
add
mov
js
jb
stc
popa
add
add
sub
xchg
jb
pushaw
add
add
jb
bound
add
popf
dec
or
mov
outsl
fdivs
rorb
add
jb
and
js
sbb
jb
stc
popa
or
add
test
bound
add
cmovp
test
ret
push
add
add
in
shlb
pop
pusha
add
add
jb
xor
add
ja
dec
fnstenv
add
add
mov
dec
push
or
or
add
aad
inc
test
pop
adc
add
leave
xlat
stos
jb
cmp
add
out
pushf
jbe
jb
pushaw
add
add
jb
pop
add
add
out
decl
jb
and
or
out
in
shlb
sbb
add
xchg
js
dec
jb
dec
add
add
mov
addr16
sub
pop
addr16
add
dec
xor
mov
imul
add
jb
rorl
add
mov
into
jb
outsl
add
add
jb
dec
pusha
add
add
lret
aam
jb
sbb
add
imul
outsl
add
add
sbb
mov
pop
push
addr16
add
loop
jnp
xchg
jb
push
popl
add
addr16
sbb
add
add
nop
mov
ljmp
push
js
and
jmp
fwait
jne
pusha
push
fiaddl
repz
add
and
cltd
enter
add
shr
mov
sbb
ficompl
das
data16
scas
xchg
xchg
dec
stos
sub
call
popf
ja
xor
xchg
adc
imul
inc
test
mov
push
or
inc
leave
repz
jge
adc
rcll
jle
mov
movl
push
call
call
lea
jae
jo
pusha
pusha
pushf
lea
jne
push
pusha
stos
movw
pushf
lea
jmp
out
stc
lock
adc
push
mov
xchg
jg
sub
sti
pusha
adc
dec
xchg
ret
xchg
jnp
outsl
inc
std
push
pop
mov
outsb
mov
add
mov
push
add
xchg
mov
lods
fs
out
aaa
test
pop
test
sbb
stos
cmc
or
cmp
xorl
push
je
jae
jo
pusha
clc
inc
sub
sbbl
mov
mov
adc
pop
adc
cli
push
inc
sbb
sbb
push
mov
push
popf
mov
stc
jb
and
mov
jg
adc
call
cmc
sbb
or
pushf
mov
bt
repnz
mov
lea
jne
setnp
bswap
movzbw
movb
call
mov
not
bt
pushl
jmp
movl
push
pushl
movl
lea
jmp
push
call
out
xor
mov
mov
ffreep
mov
mov
push
add
or
dec
enter
add
dec
notb
insl
mov
push
fmuls
and
push
loope
mov
adc
push
jb
push
cmpsl
add
dec
subb
cmp
pop
dec
test
cmp
sbb
out
cmp
inc
jb
xchg
cmp
push
dec
sub
lods
xor
lret
pusha
jmp
push
add
add
jmp
cli
int3
sub
in
jmp
jmp
hlt
or
int3
sbbb
pop
or
mov
imul
cmp
clc
xor
lcall
mov
dec
mov
mov
mov
fs
dec
loop
mov
dec
jg
xchg
sub
or
adc
stc
mov
call
cmp
mov
call
mov
call
pusha
xchg
lea
jb
pusha
pushl
pusha
dec
pushl
call
call
push
inc
push
jmp
jmp
jmp
addr16
mov
nop
and
ss
nop
pop
sarb
sbbb
push
mov
mov
sti
aam
cmpb
mov
xor
nop
sbb
leave
loopne
push
into
mov
test
add
xor
push
lods
sbb
xor
leave
jo
xlat
lcall
push
out
xchg
cmpl
sub
fistpll
aad
adc
mov
pop
mov
outsb
mov
sti
xchg
std
loopne
mov
repz
insl
inc
pop
xor
sub
xor
mov
and
gs
inc
xlat
hlt
stos
add
sahf
mov
sub
pop
pop
add
xlat
inc
mov
pop
imul
pop
testb
add
rclb
and
jmp
sbb
add
sbb
cmp
push
fstpt
inc
jecxz
repnz
cli
bsr
sbb
xor
sbb
mov
scas
mov
cmc
or
gs
jne
jnp
or
aam
ljmp
sahf
repz
lret
gs
xchg
mov
popa
and
push
dec
inc
imulb
imul
int
pop
mov
mov
sbb
sbb
int
aad
inc
popf
sub
push
pop
mov
lret
gs
mov
loope
int
dec
outsl
or
ret
push
outsb
sahf
fiaddl
or
cltd
mov
xchg
dec
dec
push
or
ds
push
cmp
int3
mov
dec
jns
sbb
stos
or
add
sbbl
ret
xchg
mov
test
sub
seta
or
ficomps
xchg
loop
cld
addl
cmp
out
loop
jo
sti
jbe
add
adc
pop
in
sbb
fidivrl
popf
dec
pop
jns
inc
maxps
neg
jbe
sbbb
vphaddwd
pop
stos
dec
xor
push
pop
cld
mov
imul
inc
push
andb
shl
add
popa
adc
pop
pop
scas
sbb
mov
fwait
mov
mov
jns
or
jp
fisttpl
adc
xchg
addr16
sbb
mov
push
add
jb
xchg
mov
jns
orl
inc
fisubs
pop
pushf
xor
fbstp
push
stc
pop
inc
pop
sbb
pop
sbb
repnz
cli
inc
lock
inc
and
jae
insl
in
or
jns
pop
add
push
insl
adc
dec
push
adc
pop
inc
outsb
jbe
inc
pop
addl
cld
pop
inc
outsb
xchg
jne
lds
mov
jns
xor
dec
sbb
xor
mov
insl
dec
sub
ret
jge
xchg
int3
mov
pop
hlt
or
push
push
stos
mov
xor
arpl
decb
scas
push
pop
lea
add
push
xor
sub
imul
inc
in
pop
and
bswap
faddp
add
push
sbb
push
pop
out
pop
xchg
insl
lahf
mov
pop
mov
jb
addb
xor
mov
fld
cmpsl
xor
outsb
xchg
push
mov
fnstcw
and
pop
dec
push
push
xorl
dec
mov
gs
inc
pop
dec
mov
das
pop
mov
stc
xchg
pop
pop
dec
xchg
cmpsb
ficoms
mov
test
sahf
xchg
adc
mov
add
sbb
sbb
cs
add
mov
cmpsl
es
and
push
and
adc
dec
and
or
int
and
mov
add
push
xor
test
das
ja
cmpsl
mov
inc
outsb
mov
push
or
lret
popl
inc
inc
or
das
mov
xor
push
mov
jns
dec
inc
loop
and
or
xchg
sbb
sahf
xchg
push
stc
push
jp
ficoml
pop
inc
pop
inc
cmc
jge
add
push
pop
pop
mov
loop
fisubrs
mov
mov
xchg
dec
sbb
sahf
mov
lret
mov
pop
jns
sbb
mov
insl
and
ja
popa
not
cmpsb
andl
out
dec
jmp
int
adc
cmpsb
jbe
stos
inc
inc
outsb
cmp
cmp
iret
lret
cmp
lret
mov
mov
and
inc
int
ret
sbb
inc
fldl
mov
mov
inc
sub
pop
push
jle
out
or
pop
xor
cmpl
mov
pop
or
loop
out
mov
pop
aad
enter
stos
dec
popa
sbb
mov
ja
sbb
loop
push
adc
push
xor
inc
lea
aad
xchg
adc
xor
push
jp
pop
insl
dec
and
insl
lea
sbb
inc
xchg
jns
cmc
mov
adc
push
imul
fimuls
mov
mov
outsl
sbb
sbb
test
cmpsl
mov
ja
ret
popa
scas
mov
dec
mov
jb
ss
jne
and
sbb
cmp
sbb
repz
jb
dec
xchg
push
inc
mov
mov
mov
add
xchg
cmp
pop
and
mov
pop
outsb
pop
sbb
ja
xlat
dec
jne
pushf
jecxz
jg
mov
pushw
in
and
cmp
sbb
inc
sbb
add
sbb
sbb
dec
pop
test
jecxz
inc
xor
dec
iret
inc
inc
sbb
imul
nop
punpcklwd
or
adc
pusha
jns
sbb
imul
loop
mov
lret
inc
xor
pop
adc
imul
and
sbb
gs
fwait
jp
fiadds
xor
push
inc
jmp
nop
rorl
outsb
or
fld
sbb
inc
push
dec
inc
xchg
mov
cs
push
cmpsl
test
dec
inc
xchg
dec
fidivs
sbb
pop
xchg
sbb
mov
imul
and
stc
sbb
imul
xlat
mov
stos
jne
sbb
and
dec
imul
xchg
sbb
inc
lds
addl
adc
sbb
xchg
push
loop
or
dec
test
push
adc
inc
sbb
and
or
loop
cmpsl
popa
mov
dec
inc
sbb
push
nop
int
inc
insb
dec
mov
sbb
add
mov
shlb
pop
mov
jl
mov
mov
out
jge
dec
adc
in
push
inc
sbb
dec
aad
pop
rcll
or
in
mov
insl
adc
addb
inc
pop
cmpsl
pop
mov
mov
pop
mov
imul
add
mov
sahf
fnstenv
pop
sbb
or
sbb
xor
jl
pop
and
or
inc
mov
inc
sbb
push
sbb
xchg
outsb
sbb
fldenv
stos
add
loop
rcrl
mov
push
cmpsl
xchg
jb
sbb
pusha
mov
sbb
jns
leave
adc
push
stos
test
scas
push
push
push
ds
jo
xor
ret
xchg
iret
sbb
cmpsl
pusha
push
mov
mov
popa
add
xor
mov
pop
sbb
dec
xor
and
mov
pop
scas
jp
cmp
insl
mov
inc
jns
mov
xor
mov
mov
mov
sbb
cmc
lret
mov
cmp
sbb
insl
mov
scas
sti
pop
test
loop
adc
pop
add
fstpl
jp
mov
pop
and
sbb
cwtl
rorl
push
sbb
lret
push
outsb
cmp
sbb
inc
mov
cs
jne
ret
inc
test
mov
pop
xor
gs
fimull
les
ret
mov
cmpsb
mov
sub
mov
mov
ret
mov
mov
mov
mov
push
or
aad
in
jle
push
dec
mov
sbb
jge
lods
mov
ljmp
mov
sbb
mov
lahf
pop
or
insl
jp
cmp
int
lea
addr16
push
pop
push
mov
jo
xchg
es
shrl
jne
sbb
mov
test
cmp
adc
sbb
xchg
mov
pop
adc
popf
inc
mov
test
cs
mov
mov
cmp
sub
shrl
and
and
push
scas
pop
sbb
cmpsb
sbb
rcrl
movsl
cmp
cli
sub
loop,pt
dec
xchg
and
adc
repnz
out
das
add
in
adc
loop
jns
ficomps
rcrl
adc
sub
add
mov
fcomp
ret
jo
lahf
pop
outsl
sbb
mov
xor
fisttpll
jbe
add
outsb
and
or
arpl
mov
iret
add
out
jg
jo
mov
push
out
add
je
sub
fisttpll
das
jno
push
jno
adc
jp
lock
xor
xor
gs
jbe
aad
add
imul
hlt
lds
xor
das
inc
xchg
mov
into
mov
popa
xorb
pop
loopne
xchg
mov
mov
pop
divb
xor
popf
push
inc
icebp
push
pop
in
les
scas
push
sar
gs
adc
push
call
or
je
push
aam
sbb
mov
movsl
xchg
notl
xlat
add
adc
jae
xor
cmpl
add
dec
dec
mov
adc
mov
ss
daa
iret
nopl
insl
fistl
add
fwait
sarl
movsl
fcmovne
mull
pop
subl
add
movsl
cs
out
ja
cli
lds
loop
adc
xor
out
pop
adc
jge
adc
imul
out
cltd
adc
fwait
aad
add
pop
pop
jbe
into
rorl
sub
lods
adcl
shlb
lret
cmp
add
out
xchg
pushf
cmc
jne
fidivl
les
cmovne
movsl
into
aad
mov
pop
or
xchg
mov
jmp
movsb
and
cmp
aaa
fildl
add
stos
cmp
in
push
pop
xchg
aam
std
mov
pop
mov
negl
add
adc
in
mov
xor
pop
ss
scas
cmp
mov
scas
pop
adc
sub
push
xcrypt-ctr
cmpsl
fmull
cmp
and
xchg
dec
sahf
and
lcall
xor
push
ja
testl
mov
imul
push
mov
or
in
sub
xor
and
sbb
push
notb
or
repnz
scas
mov
inc
and
inc
stos
inc
push
push
pop
ljmp
xchg
daa
push
inc
pop
dec
xchg
sahf
or
cmp
clc
rcr
jnp
mov
cltd
arpl
mov
fbstp
cmp
popf
add
cmpsl
push
or
lret
arpl
mov
sar
enter
repz
or
xlat
ja
movsb
adc
pop
push
fisttpl
icebp
jns
and
and
push
cmp
cmp
pop
pop
cmp
and
ja
data16
jo
aaa
out
fcomi
xor
jne
jge
sub
movb
or
fbld
add
xor
addl
cmc
jo
sub
mov
std
mov
mov
inc
cmp
jb
sbbb
jae
xor
xchg
mov
sarb
xor
jne
pop
cmp
rcll
lea
ss
add
xchg
into
mov
add
push
fmulp
and
mov
aaa
sbb
add
add
sub
dec
and
fisubrl
popf
sub
jle
sbb
inc
xorl
pop
and
inc
push
test
out
sahf
fisubs
sbb
adcb
mov
ss
cmp
adc
adc
pop
insl
mov
repnz
fadd
icebp
aad
notl
adc
fidivl
lahf
int3
in
jne
pop
inc
push
cli
mov
mov
xchg
jns
movsl
jnp
adc
fists
aad
divb
and
dec
shlb
xchg
mov
insb
fdivrl
cs
aaa
mov
fnstenv
mov
jnp
sub
xchg
sbb
aam
ja
pop
cmc
fstpt
push
adc
clc
addr16
and
cmp
adc
cmc
aam
or
imul
clc
xchg
sub
shll
cmc
dec
xor
out
mov
pop
and
xor
punpcklwd
imul
rcl
and
adc
cmp
push
and
shll
inc
icebp
xchg
inc
dec
roll
push
int
inc
or
push
rorb
mov
jbe
add
jge
jmp
divl
inc
in
adc
fsts
loope
mov
and
fistpl
imul
aad
cmpsl
push
mov
cld
xchg
insb
stos
dec
push
push
dec
inc
xchg
adc
jne
xchg
loope
jno
loopne
xchg
inc
dec
jo
mov
sbb
adc
subb
cmpb
add
lcall
not
sub
scas
aaa
adc
cmp
mov
aas
mov
push
filds
push
lea
inc
outsl
jne
iret
xchg
pop
jae
dec
and
push
imul
mov
push
inc
adcl
mov
inc
movsl
cs
in
sbb
xor
adc
movsl
sub
push
movhps
rolb
rclb
push
mov
adc
mov
lahf
dec
mov
inc
jl
adcb
ljmp
xor
gs
xchg
push
adc
push
aas
inc
push
pushl
xor
add
push
xchg
movsb
pop
push
add
mov
mov
adc
idiv
add
sbb
and
pop
xchg
es
xor
loope
push
sbb
dec
sub
adc
shlb
cmpsb
jae
test
and
add
pop
push
testb
movsl
push
push
fsub
xor
mov
dec
xorb
pop
je
dec
adc
push
inc
push
testb
in
dec
xchg
xlat
jae
mov
addb
outsl
xchg
inc
dec
scas
and
loope
xchg
sti
cmpsl
popl
xchg
in
jbe
mov
add
add
xchg
aas
and
jmp
xor
and
sub
dec
push
and
or
fwait
mov
and
inc
inc
push
xchg
cs
into
arpl
xor
cmc
cmpsl
in
add
xchg
jl
adcl
fnstcw
mov
adc
add
clc
mov
daa
push
adc
push
sbb
adc
insl
mov
sbb
adc
lcall
xlat
ret
push
ja
add
movsb
push
cmp
in
mov
add
adc
and
adc
adc
daa
mov
and
mov
pop
dec
aaa
jp
xlat
sub
ret
je
xor
sahf
mov
aad
mov
or
ljmp
test
fistl
je
mov
adc
and
inc
test
ret
xchg
das
das
add
jb
and
pop
pop
xrelease
into
dec
ficomps
outsl
sub
push
cmp
in
xor
jb
daa
daa
xor
andl
fistpll
pop
add
jp
adcb
xchg
adcl
pop
cli
dec
fs
mov
dec
inc
adc
jnp
or
add
sbb
xor
aaa
repz
push
inc
enter
add
dec
and
mov
pop
jecxz
faddl
sub
insl
xchg
push
gs
push
xchg
int
mov
sbb
jle
pushf
pop
cmp
mov
jmp
inc
xchg
rorl
sbb
mov
cmpps
jle
daa
insb
hlt
add
xchg
xlat
ret
into
cmp
pop
push
das
push
xchg
push
inc
cltd
pop
xor
push
fwait
xor
aaa
inc
push
inc
push
adc
inc
lcall
aaa
repnz
negb
imul
jbe
jecxz
mov
imul
sahf
push
push
xchg
jne
cmpsb
mov
movsl
xorl
jg
xor
add
pop
stos
mull
mov
jmp
push
testb
add
testb
or
aam
or
and
adc
and
ja
divl
xchg
daa
hlt
xchg
xor
enter
inc
les
in
outsl
idivl
orb
mov
add
push
addb
adc
cmp
push
pop
pop
fdivl
in
mov
imul
in
testl
push
idivb
hlt
and
xchg
cmp
aad
cmp
mov
lret
dec
insl
or
jne
dec
xchg
incb
mov
inc
add
lock
mov
in
out
cmp
push
pusha
mov
mov
int
mov
pop
and
mov
je
daa
sbb
or
pop
mov
pop
shl
mov
adc
inc
pop
and
aaa
adc
mov
xchg
stos
sbb
dec
bound
push
int3
scas
fdivrl
xchg
adc
cmpsb
push
les
inc
testb
aaa
dec
loop
and
add
xor
inc
pop
sbbb
bound
jbe
daa
push
lods
sub
stos
aad
movsl
inc
lea
mov
adc
int
or
jne
mov
repz
mov
mov
xchg
aaa
pcmpeqw
lods
pop
loop
fcomps
xor
push
aaa
jno
loop
mov
shrl
push
das
xor
push
lods
stc
xlat
pop
enter
adc
jecxz
or
imull
sbb
push
sbb
mov
mov
repz
sub
out
lret
repnz
xchg
mov
xchg
pop
mov
jmp
cmp
test
xchg
push
in
rolb
ja
subl
xor
pop
shl
int3
push
mov
aaa
stos
add
les
pop
inc
xor
jg
ss
xchg
mov
scas
jp
jne
cmpsl
xchg
and
std
dec
push
in
rcrb
mov
mov
xchg
aad
data16
add
pop
xchg
xchg
cmp
xlat
cmp
xchg
imul
xchg
mov
into
add
mulb
popa
dec
mov
pop
lcall
nop
stos
add
dec
push
add
sti
xor
rorb
fsubs
sbb
mov
stos
jecxz
inc
sbb
ljmp
and
fistpl
ja
sti
imul
daa
add
jnp
mov
xchg
mov
add
rcr
dec
je
cmp
mov
xchg
aas
pop
cmp
lret
sti
test
xor
enter
or
das
push
push
jg
mov
lahf
adc
sarb
cmp
enter
mov
and
and
dec
add
xchg
cs
cmc
xor
ds
jnp
mov
xchg
push
push
sbb
cmp
mov
xchg
mov
push
or
aas
add
js
jb
and
clc
out
push
sarb
sbb
addr16
sub
lock
testb
inc
mov
sbb
es
xor
fcomps
scas
pop
addr16
cmp
cmp
pop
jl
incb
mov
adc
ja
pop
ret
cld
mov
mov
xor
cmpsb
lds
in
adc
dec
test
xchg
lods
in
sub
stos
and
jo
rcrb
pop
add
cld
rolb
dec
pop
add
and
in
imul
push
mov
add
testb
pop
mov
pop
pop
cmp
jb
pop
dec
pop
pop
pop
sbb
sahf
sbb
sbb
push
cmp
pop
sbb
out
arpl
inc
mov
std
dec
int
outsl
inc
add
pop
pop
fadds
and
nop
into
cli
sbb
dec
push
mov
cmp
cmp
and
aam
xorl
and
jb
jl
sbb
fwait
mov
adc
pop
sub
adc
mov
jecxz
or
cmpsl
movb
push
jbe
bound
cmp
mull
adc
sbb
enter
cld
inc
pop
cmp
xor
in
adc
cmp
push
add
loope
xchg
paddusb
xchg
shlb
inc
or
add
adc
pop
xor
aad
negl
test
dec
pop
pop
insl
jle
jmp
test
icebp
jmp
fmull
lea
pop
xchg
xchg
and
inc
inc
or
add
push
or
pop
ljmp
cmpb
jb
pop
cmp
xchg
nop
adc
push
mov
jl
mov
pop
xchg
and
lret
fcmovnu
and
sbb
lods
mov
pop
je
hlt
ss
and
dec
and
in
imull
mov
test
or
loopne
sbb
in
lods
xor
xor
sbb
mov
inc
sub
leave
dec
pop
cmpsb
push
inc
bound
aam
dec
or
ss
adc
repnz
inc
add
push
addr16
push
repz
inc
sbb
clc
cmp
daa
cmp
insl
and
cmp
jbe
into
and
test
push
in
push
adc
dec
pop
pop
bound
inc
add
xor
or
iret
repnz
scas
mov
jp
sub
fists
fisubs
or
negl
shlb
out
jle
push
adc
adc
add
aaa
xchg
lcall
xchg
or
add
pop
ficoml
ss
repnz
and
fs
add
inc
inc
lret
and
repz
cmp
mov
jae
andb
divl
push
incb
xchg
xor
add
and
xchg
push
cld
jge
cli
insl
xchg
jp
dec
rcll
cwtl
sub
or
shlb
push
fwait
xchg
out
inc
pop
pushf
out
lds
or
add
pop
shl
bound
inc
and
fsubr
xchg
bound
xor
jg
insl
out
mov
ret
xor
sbbl
pop
pushf
ss
push
cmpsl
popa
xchg
add
mov
into
pop
xlat
inc
fwait
dec
mov
rol
mov
shll
into
loopne
int3
pop
scas
jecxz
and
fmull
loope
les
insb
sbb
sti
mov
or
cld
add
cmp
pop
mov
test
sbb
xchg
into
jo
sbb
inc
sbb
xchg
subl
ss
inc
jmp
inc
sbbb
dec
popl
mov
repz
dec
mov
movb
and
push
jecxz
jae
xor
and
mov
xchg
popf
ja
js
shll
add
sbb
xor
insl
push
pop
dec
iret
or
arpl
dec
add
cmc
repnz
ja
or
and
addr16
jae
add
repz
das
sahf
and
xor
adc
sbb
mov
ficompl
or
mov
sbb
pop
adc
jne
adc
pop
push
out
fiaddl
jae
inc
jae
push
push
and
addr16
jg
inc
outsb
sbb
mov
sbb
fwait
cltd
xchg
and
sbb
gs
aaa
mov
mov
inc
sbb
xorl
sbb
lea
push
mov
or
sub
pop
cltd
out
mov
int3
repz
out
rcrl
and
not
scas
xor
sub
pop
pop
xchg
lock
vpmulhw
lret
push
je
or
mov
push
push
pop
pop
jno
adc
pop
icebp
adc
mov
aam
imul
daa
jno
adc
adc
xchg
cmc
ret
mov
push
pop
pop
adc
pushf
push
subl
les
cmp
in
test
push
push
xorl
adc
mov
sub
popf
loope
ss
pop
incb
xchg
sbb
push
subl
xchg
out
push
xor
pop
pop
xchg
out
ds
pushf
jmp
sbb
je
push
add
xchg
mov
sti
pop
fidivs
dec
or
pop
add
loopne
into
rclb
mov
inc
sub
aas
scas
xor
xlat
daa
cmp
adc
dec
cld
aas
je
adc
aas
cmc
fwait
add
and
add
dec
jbe
aad
orb
mov
movb
mov
mov
jecxz
and
xchg
or
sbb
pop
mov
aad
mov
xorl
jle
imul
ja
mov
repnz
cmp
cltd
outsl
scas
push
pop
pusha
pop
push
fucomip
pop
enter
inc
jg
lahf
pop
aaa
imul
out
mov
scas
outsl
orps
fisttpl
push
mov
and
nopl
fidivl
or
add
aam
jg
daa
lods
scas
cld
jle
adc
or
aam
lods
pop
adc
call
pop
jg
dec
test
out
mov
jmp
lret
xchg
addb
mov
mov
mov
and
repz
or
sarl
cmp
pop
xchg
leave
into
popl
cld
jbe
loopne
outsl
cmp
mov
out
ja
sbb
ds
dec
add
mov
pop
mov
pop
mov
gs
mulb
inc
repnz
pop
outsb
sbb
cmpb
add
and
mov
iret
push
in
mov
add
lds
jbe
enter
mov
sub
out
neg
xor
loopne
mov
pop
popf
sbb
fstps
stos
addl
mov
jb
pop
not
mov
mov
cmc
in
sub
out
jecxz
into
out
lret
sub
dec
xchg
push
gs
or
lock
and
mov
add
int3
add
dec
mov
sti
sub
out
and
and
nopl
stos
out
sbb
add
inc
lret
fwait
mov
cmp
push
cmc
mov
lea
fcoms
add
pop
push
xor
aaa
push
arpl
hlt
pop
or
xchg
subl
pusha
add
mov
inc
cmp
push
daa
xchg
and
fsubl
add
push
sub
pop
ds
dec
lea
movlps
cmp
es
cmpsb
dec
push
in
popa
cmp
inc
sti
inc
and
arpl
sub
ja
mov
data16
aas
lods
adc
ret
jne
test
pop
pop
dec
pop
scas
sub
testb
rcrb
and
xor
les
xchg
in
mul
adc
jmp
jmp
inc
push
lahf
or
jnp
mov
cmpsb
mov
xor
inc
call
sub
enter
xor
loop
xchg
stmxcsr
pop
xchg
aad
jne
xchg
lods
and
neg
adc
ja
sbb
shlb
mov
xlat
cmp
rcrb
inc
adc
add
add
push
xor
pop
adc
add
daa
aam
cs
add
xlat
jg
outsl
pop
xchg
push
clc
iret
jae
clc
pop
mov
pop
dec
or
mov
inc
inc
shll
lea
imul
stos
outsl
push
lcall
pop
bound
pop
insl
pop
addr16
inc
imul
xor
jno
push
test
out
jle
mov
sti
and
or
xor
mov
dec
mov
cmpb
mov
sbb
push
mov
add
add
lahf
push
lock
xchg
lcall
popa
fildll
enter
dec
jmp
mov
cmp
fbstp
mov
mov
add
pushf
fxrstor
xchg
dec
inc
leave
cmp
fiaddl
rolb
rcrl
sbbb
xchg
jne
shll
mov
cmp
dec
push
rcrb
pop
xchg
movl
jnp
dec
mov
pop
pop
fimull
hlt
dec
daa
sti
clc
pop
add
popa
fldenv
ss
outsl
dec
or
sbb
cmp
cmp
jo
popf
or
mov
loopne
cmp
inc
mov
ja
pop
cmp
pop
xor
bound
adc
and
inc
dec
movl
xlat
xchg
inc
and
bound
inc
push
gs
xchg
push
scas
push
cmc
sbb
xchg
fcmovnbe
push
stos
ds
push
xor
cs
xor
pop
pop
sbb
add
fimuls
xchg
push
pop
aaa
sahf
inc
adc
add
pop
hlt
mov
in
jp
fcomps
mov
push
sbb
sbb
mov
cli
mov
inc
movsl
xchg
or
inc
pop
test
mov
lret
lret
sbb
adc
adc
movb
mov
out
xchg
cwtl
mov
inc
loope
adc
hlt
add
lcall
repz
or
push
ja
xchg
pop
xchg
enter
pop
mov
or
cmp
sbbb
outsb
lahf
sbb
and
jecxz
push
dec
dec
xchg
lcall
test
push
inc
pop
xchg
jbe
xor
dec
add
in
push
jno
jecxz
daa
xor
dec
pop
daa
stos
cmp
xchg
add
mov
loop
inc
cmp
push
inc
das
xlat
and
stos
mov
pop
pop
xchg
fs
mov
push
lock
or
cld
sbb
ljmp
mov
data16
cmp
test
cli
add
shlb
add
adc
pop
pop
xchg
pop
xor
pop
xor
xchg
adc
and
mov
jecxz
add
pop
xchg
movsl
sbb
pop
xor
imull
fidivl
xchg
push
xchg
lcall
push
sbb
fwait
mov
repz
xchg
xchg
pop
push
mov
and
adc
lods
adc
dec
pop
dec
cwtl
pop
sbb
xchg
inc
jp
mov
lods
mov
add
aaa
fldcw
push
jg
pusha
add
pushf
inc
stc
xorl
or
sub
xchg
cmpsb
pop
dec
inc
mov
stos
sub
shll
xchg
ss
fidivs
xor
out
call
test
mov
ja
or
jbe
sub
sub
daa
cwtl
ss
sarb
pop
pop
stos
xor
adc
xchg
sbb
xchg
stc
ja
shlb
xchg
ret
mov
gs
cmpsl
inc
imul
stc
or
pop
push
daa
mov
pop
mov
decb
js
jg
loopne
add
inc
test
or
jp
outsb
aas
sub
jmp
js
pop
iret
or
mov
sahf
push
bound
add
jo
sbb
ds
call
sbb
adc
xchg
push
mov
adcb
cmpsb
and
das
xchg
sub
xor
push
jp
cmp
dec
push
and
scas
adc
pop
cmp
and
add
aad
pop
sti
pop
ss
ja
or
lds
shrb
inc
sbb
mov
ret
jo
jae
jle
aad
faddl
cmpb
enter
xchg
hlt
and
cmp
inc
adc
or
push
pop
daa
add
std
daa
lock
sbb
pop
ficomps
call
mov
push
clc
xchg
xlat
inc
push
repnz
lret
sbb
stos
xchg
pusha
iret
ret
sbb
adc
cmpsl
ss
add
mov
cmpsb
add
or
or
mov
xlat
scas
ret
or
adc
dec
lret
inc
mov
add
mov
stos
or
xor
iret
mov
adc
push
pop
mov
and
xchg
arpl
cmc
sbb
cmpsb
xor
rcll
mov
lret
int
and
pop
or
testl
pop
xchg
adc
andb
out
loope
das
stos
lea
jle
mov
jno
dec
pusha
ja
insb
jnp
sbb
mov
decl
cmp
sub
jae
xor
xchg
outsl
loopne
dec
addr16
es
outsl
dec
or
ljmp
mov
jb
sub
cmp
je
inc
in
adc
dec
push
dec
lods
xor
andl
jno
adc
and
ja
push
sub
pop
cmp
or
jp
je
add
cmc
sbb
jmp
imul
pop
sbb
adc
mov
pop
or
mov
push
add
xor
add
and
pop
daa
aam
mov
mov
push
ljmp
pop
push
push
dec
xor
sbb
stos
xchg
lret
jge
adc
mov
mov
pop
out
push
fildl
sbb
xchg
cmovae
imul
and
xchg
add
lret
cld
mov
loopne
pop
dec
inc
sub
arpl
enter
das
push
add
push
pop
xor
or
mov
xchg
or
stos
adc
orl
inc
out
lea
sbb
daa
and
push
das
xchg
lods
push
add
or
xor
lods
xchg
inc
hlt
jmp
cmpsb
rcrb
popf
push
add
push
mov
or
sub
add
pop
hlt
xlat
out
shlb
jae
add
sub
mov
cld
imul
fisttpl
iret
arpl
addl
push
pop
aaa
mov
adcl
rolb
shll
push
mov
dec
inc
inc
xor
mov
arpl
xchg
xchg
sarl
dec
stos
pop
mov
cmp
sbb
outsb
test
rorl
xor
mov
or
add
mulb
add
aaa
popf
repz
and
pop
add
dec
adc
testb
push
arpl
cld
movsl
mov
mov
jno
or
adc
test
adc
xchg
push
push
mov
iret
xorl
xchg
call
shrb
xchg
jnp
cmp
daa
sbb
mov
adc
loope
dec
fbld
jp
dec
out
adc
pop
adc
add
cmp
notl
lods
pop
adc
adc
adc
mov
sbb
jmp
fwait
les
sti
lcall
in
xchg
test
mov
add
dec
in
sub
daa
mov
mov
and
rcrl
push
imul
movsl
push
push
dec
mov
in
or
add
sub
xor
mov
test
aam
mov
dec
pusha
idivl
mov
mov
clc
add
xchg
leave
mov
push
out
pop
cmp
mov
lods
xchg
or
jecxz
mov
pop
adc
xor
cmp
mov
push
push
pop
in
xor
jbe
daa
push
sahf
ret
icebp
xchg
xor
lahf
cmp
arpl
mov
mov
scas
cmp
sub
xchg
jge
inc
pop
jnp
shrl
push
pop
jnp
inc
aas
fs
pop
stc
or
cmc
push
lret
cmp
dec
arpl
pop
pop
mov
out
lahf
sub
in
xchg
stos
mov
cld
cli
outsl
das
int
lret
fcmovnu
inc
inc
arpl
push
adc
dec
and
and
push
dec
dec
xchg
sub
xchg
cmpsl
push
xor
ret
pop
addr16
out
cmp
cmp
push
cmp
mov
add
mov
ja
shll
pop
jle
pop
out
and
test
adc
xchg
adcl
sar
orl
dec
nop
sbb
pop
pop
mov
mov
aad
xchg
in
mov
and
addr16
sub
and
les
dec
and
push
sub
sbb
inc
lahf
inc
mov
aaa
push
adc
inc
mov
adc
arpl
aaa
inc
adc
push
outsb
sbb
in
sbb
outsl
pop
pop
add
adc
jge
daa
daa
push
sbb
mov
jnp
pop
lret
out
hlt
sbb
inc
sub
dec
lods
insb
jmp
xor
aam
dec
mov
sbb
movsb
pslld
ljmp
data16
or
sbb
sub
inc
fcomp
or
loope
test
das
lret
aas
mov
loopne
popa
dec
fmull
mov
into
jecxz
push
jne
movsb
int
insl
sbb
imul
adc
mov
mov
ror
mov
stc
cmp
repz
leave
pop
push
in
scas
pop
hlt
sbb
mov
mov
ret
pop
jmp
mov
mov
dec
imul
xlat
out
ja
push
rorb
mov
or
sbb
iret
mov
es
xchg
shlb
or
xchg
inc
cmp
ret
mov
xor
imul
shrb
inc
push
inc
scas
lret
rolb
aaa
push
jae
mov
repz
bound
or
das
pop
ror
dec
stos
mov
xchg
xchg
mov
adc
push
mov
outsb
sahf
mov
mov
rcrl
mov
pop
xor
and
scas
xchg
dec
les
mov
pop
sahf
adc
xchg
jecxz
push
aaa
es
xor
xchg
shrb
pushl
mov
sub
push
or
sub
bound
push
ja
or
outsl
pop
dec
add
xchg
dec
pop
dec
sbb
ret
sub
xchg
push
addr16
fs
mov
mov
aad
jmp
cmp
cmpsl
xlat
pop
mull
jge
lods
xchg
push
sti
jecxz
mov
xchg
mov
aaa
stos
and
dec
aas
push
in
jmp
add
inc
inc
loope
adc
arpl
leave
mov
jnp
shll
daa
cmp
sbb
pop
cltd
add
enter
das
and
adc
xchg
fs
lahf
dec
xlat
add
dec
out
cmc
das
cmp
xlat
das
add
iret
jmp
shll
repnz
adc
enterw
xlat
xor
out
jl
cmpsb
std
jne
cld
out
cmp
xor
xchg
jecxz
jp
inc
pop
sarb
xor
inc
or
adc
cmpsb
inc
xor
and
xchg
cs
ljmp
sbb
pop
sti
or
dec
enter
repz
out
mov
sbb
mov
cli
out
loopne
fs
cld
push
inc
andl
cmp
mov
out
call
ret
dec
loope
inc
mov
sbb
test
xor
pop
movsb
adc
xor
daa
ss
dec
xlat
movsl
icebp
add
pop
arpl
sbb
pop
pop
cmpl
out
aad
xchg
cmp
push
push
roll
mov
dec
push
cmp
idivb
mov
add
dec
adc
xor
push
mov
jnp
cmc
sbb
dec
lds
orb
cmc
sbb
push
lret
stos
pop
gs
and
xchg
dec
in
jne
mov
dec
and
jmp
sub
fldl
xchg
push
jl
sbb
sub
rorb
inc
pop
dec
idivl
dec
outsl
sarb
lahf
sub
xchg
decl
and
xor
or
outsl
inc
lret
imul
push
inc
xchg
mov
mov
fists
lahf
adc
push
cwtl
cld
fiadds
and
std
and
ljmp
test
nop
pop
add
aaa
clc
nop
push
lock
call
push
xchg
jp
shlb
aam
movsl
outsl
ret
pop
jecxz
shlb
rorb
adc
mov
clc
aad
dec
or
or
addr16
mov
push
mov
xchg
xchg
dec
push
pusha
add
or
pop
jae
sbb
dec
xchg
xchg
pop
subl
mov
mov
xor
add
es
stos
movsl
int
push
mov
sbb
xchg
dec
imul
sti
inc
mov
xor
int3
outsl
pop
pop
xchg
xor
sub
aam
jns
ds
aas
scas
pop
pop
stos
xchg
mov
ss
pushf
push
inc
push
sbb
int
mov
in
int
aaa
adc
pop
mov
addr16
cli
xchg
pop
repz
pop
clc
movsb
xchg
je
adc
mov
add
jl
or
sbb
test
mov
and
fs
aad
xchg
push
cs
adc
es
adc
sbb
sbb
xchg
lcall
divb
pop
enter
and
scas
jmp
in
fists
xchg
nop
cld
pop
cmp
bound
sbb
rcrl
xlat
sahf
push
nop
xchg
pop
pop
push
push
adc
and
mov
lahf
add
jge
xor
adc
paddsb
push
adc
icebp
aam
pushf
xchg
test
pop
push
lock
daa
xor
leave
push
cmp
ret
lret
push
fwait
and
sahf
add
pop
jg
sbb
fstpl
xor
jg
inc
jle
jo
scas
jne
xor
push
push
xor
pop
jge
cmpsl
movsl
idiv
or
outsb
xor
scas
out
sub
gs
aas
and
mov
cld
lea
sub
setle
jne
dec
daa
or
dec
xlat
loop
xchg
pop
in
add
and
arpl
mov
xor
lock
mov
xchg
xor
mov
ss
aam
adc
mov
daa
out
xchg
xchg
fcmovnb
mov
imul
test
push
hlt
iret
mov
cmpsl
or
dec
mov
fiadds
xchg
cmc
das
lods
cld
xor
mov
pop
cmpsl
cmc
cmp
mov
inc
mov
jl
inc
inc
mov
js
inc
sub
jno
mov
cmp
je
pop
push
sbb
sbb
lret
or
sbb
lret
and
lcall
fbstp
sub
lcall
xchg
xchg
push
and
xor
xor
xchg
inc
adc
jmp
push
pop
push
cmp
pop
dec
scas
jb
xor
mov
iret
and
pop
mov
dec
addr16
ss
das
add
push
adc
clc
inc
iret
cmp
adc
push
movsl
adcb
jne
xor
or
mov
pop
pop
subl
jne
dec
pop
adc
cld
cmp
outsl
ljmp
dec
mov
jl
pop
cmpsl
add
push
ret
daa
pop
mov
pusha
add
test
mov
insb
mov
lret
sub
mov
shlb
clc
pop
cmp
cmp
aam
add
xor
push
push
and
sti
push
scas
push
and
testl
sub
pop
iret
pushf
and
inc
mov
lret
push
push
out
lea
or
inc
fwait
sahf
sbb
pop
lock
movsb
shll
pop
test
addr16
pop
adc
shll
inc
mov
push
mov
or
dec
cmp
sbb
push
stos
mov
xor
mul
out
mov
push
divb
xchg
xor
push
pop
cli
pop
test
add
in
mov
inc
inc
sub
push
insl
js
push
push
loopne
aaa
out
sarl
and
pop
mov
mov
jne
jmp
faddl
cmp
and
loop
push
cmp
push
mov
inc
add
scas
xchg
popa
fistpll
or
sub
dec
mov
jg
mov
pop
pop
ret
gs
inc
sahf
shlb
bound
cmpsl
sbb
mov
jp
xchg
mov
pop
mov
fcmovnbe
lods
shrb
mov
inc
inc
nop
mov
stc
sub
fnsave
mov
push
mov
dec
xchg
sub
es
and
add
ja
outsb
scas
dec
ljmp
shufps
pop
push
arpl
push
pop
scas
mov
shr
hlt
mov
fcoml
xchg
int3
jbe
inc
adc
or
pop
ss
lods
jmp
xor
imul
push
lret
mov
push
sub
jno
xor
stos
sbb
inc
and
pop
dec
aaa
enter
insb
in
int
pop
mov
imul
add
pop
fdivrl
mov
in
movsl
mov
icebp
sbb
dec
sbbl
pop
xor
sub
and
pop
inc
push
das
or
rcrb
sub
into
das
imul
rcrl
fistpll
imul
cmp
shld
dec
out
sahf
ds
pop
pop
in
inc
push
cmp
cld
adc
xor
cmp
xchg
dec
ljmp
sub
mov
or
pop
ret
push
mov
push
fildll
mov
xchg
xchg
jmp
fsub
mov
mov
jns
daa
jecxz
sbb
mov
enter
sub
stc
cs
mov
mov
scas
fidivrl
mov
outsb
vmptrst
cmp
mov
sbb
xor
or
rolb
cmp
loope
dec
pop
addr16
cmp
mov
xor
add
cmp
push
nop
xor
dec
out
push
insb
or
jae
scas
leave
cmc
aas
and
dec
cmpsl
loopne
jp
pop
and
add
ficoml
inc
add
inc
daa
loop
pop
lods
and
iret
xchg
mov
adc
testl
or
add
int
dec
mov
lahf
aaa
push
ja
das
rclb
jae
outsb
adc
inc
jne
popf
js
xchg
bound
jne
das
xlat
mov
enter
dec
jmp
adc
popf
push
lds
mov
pusha
loop
outsl
xlat
inc
jmp
popa
lods
add
mov
testl
pop
stc
add
jmp
cmc
push
scas
push
and
jno
sbb
ds
xchg
mov
lock
pop
jnp
cld
aas
popf
lret
mov
scas
mov
in
pop
push
fcomps
mov
mov
stos
xchg
pop
xchg
mov
outsb
movnti
repnz
outsb
dec
xchg
scas
adc
dec
daa
lea
xor
xchg
mov
xor
mov
xchg
adc
test
and
mov
mov
scas
add
jo
je
xchg
test
mov
sti
fcoms
aaa
push
sbb
and
outsl
sbb
sbb
push
aaa
mov
or
add
add
jnp
addr16
pusha
loop
mov
and
and
mov
xchg
adc
dec
push
fstpl
popa
jne
out
das
mov
fidivrl
xchg
cmpsl
in
dec
and
scas
mov
pop
mov
xlat
ret
aas
sbb
adc
wrmsr
inc
ja
test
sbb
cmpsb
mov
pop
xor
mov
fwait
push
daa
and
arpl
loop
jle
pop
xor
dec
xor
dec
xor
ja
dec
cmpsb
sub
add
inc
out
push
pop
and
xchg
shrl
or
cwtl
xchg
ret
aaa
addl
mov
popa
imul
adcl
mov
popf
push
fwait
jge
test
xor
iret
lods
push
mov
or
mov
mov
out
addb
lea
mov
jg
cmpsl
repz
insl
imul
or
ljmp
je
pop
sub
xor
add
je
xchg
adc
inc
jne
rep
gs
fldcw
test
pop
pop
stos
daa
and
aaa
inc
add
aaa
mov
cmpsl
clc
and
and
ret
inc
cmpsl
jo
mov
shrb
pop
jg
out
dec
rcrl
aaa
aam
pop
bound
sbb
xchg
and
and
arpl
popa
adc
and
xchg
mov
push
adc
movsbl
cli
movsl
sarb
in
and
push
xlat
and
daa
push
mov
push
add
cmc
mov
cmp
das
cmpsl
shlb
xchg
imull
out
mov
push
cli
adc
adc
dec
jno
ja
mov
xor
loop
sub
cmp
shll
xor
fcmovnbe
push
sbb
adc
add
adc
jbe
pop
sbb
out
and
outsl
xchg
xchg
out
cli
push
mov
pop
sti
in
cmc
pushf
iret
dec
jbe
cmp
and
arpl
pusha
rcl
mov
sbb
repz
or
les
scas
das
pop
xchg
shrb
fcoml
sbb
or
xchg
cmp
or
test
sub
sbbb
pop
push
sub
roll
jbe
adc
pop
xchg
and
mov
cmpsw
xor
out
push
insl
mov
stos
cmp
cmp
shll
fdiv
add
mov
aad
or
pop
scas
jp
dec
stos
jne
aam
mov
mov
xor
inc
mov
das
and
xchg
cs
jl
ja
xor
sbb
nop
fsubr
pushf
jne
bound
mov
xchg
shufps
xchg
push
test
lock
xchg
leave
pop
int3
in
xorl
jle
out
cmp
inc
imul
add
out
pop
adc
xor
into
adcl
mov
mov
cmp
xor
int
jae
cmp
std
es
pop
rolb
mov
adc
xchg
pop
lahf
aas
lock
cmp
aam
dec
in
mov
sub
test
jmp
stos
or
jg
out
daa
outsl
enter
leave
jne
sahf
daa
sub
pop
mov
int
sarb
cmp
notl
sbb
sbb
mov
cmpsl
cltd
lds
mov
cmpsl
popa
les
pop
jb
jne
mov
inc
fnsave
ret
loop
shlb
mov
pop
ja
and
dec
fcmovu
sahf
pop
sbb
sbb
popa
test
sub
mov
out
xor
push
dec
ds
test
mull
inc
add
mov
stos
inc
sbb
popa
jnp
out
push
in
scas
and
aaa
push
mov
sahf
test
ds
xchg
and
pop
mov
aaa
xlat
jle
faddl
incb
aaa
fisttpl
jmp
in
mov
sbb
ljmp
std
inc
fsubrl
lods
insl
push
xchg
loop
dec
adc
cmpsl
inc
dec
testl
jae
add
xchg
pop
push
push
pop
mov
je
aas
bound
xchg
sbb
fstps
shll
push
stos
sub
sbb
fs
test
in
icebp
cmp
dec
rcll
xchg
ficoms
mov
int3
xchg
and
or
ss
jae
mov
not
push
mov
iret
scas
pop
into
push
xchg
mov
or
pop
sbb
divl
cmpsb
sbb
mov
pop
push
dec
das
mov
in
into
adc
mov
loope
out
popf
xor
cmpsl
and
fiadds
xchg
xchg
mov
add
stos
int
xchg
push
pop
scas
sti
es
sbb
outsl
mov
push
popf
ja
aas
push
mov
mov
adc
jno
popl
push
add
ja
xchg
fsts
outsl
pop
push
int
push
shll
lret
pshufw
push
xchg
xchg
cmp
jae
enter
and
xor
in
pop
mov
fsubrs
aas
cmp
push
and
scas
xor
iret
out
popa
xchg
stos
pushf
testb
stos
loope
dec
sub
adc
xchg
cmpsb
mov
pop
arpl
and
inc
push
test
inc
mov
sbb
mull
inc
ds
cmp
xchg
pop
stos
outsl
fwait
shrb
cmpb
push
sti
xor
mov
call
push
xchg
out
icebp
xor
xchg
dec
je
sahf
cmp
adc
icebp
mov
aaa
and
loopne
lcall
lea
loop
lret
xchg
pop
popa
dec
scas
xor
push
add
stos
cmp
or
push
xchg
imul
cmpsl
adc
xchg
out
pop
and
inc
push
add
ret
movsb
push
pushw
repz
mov
mov
xchg
mov
outsl
mov
dec
or
test
outsb
stos
adcl
popf
int
lahf
adc
sahf
cmpsb
loop
dec
ret
std
xchg
mov
cmova
cmc
scas
pop
aas
fcmove
daa
sarb
sub
lahf
loope
jg
ja
inc
push
rolb
orps
add
or
daa
in
sbb
leave
adc
dec
repz
pop
cmp
inc
xchg
jmp
test
dec
xchg
lcall
jae
movl
ss
pop
mov
cmp
or
cvtps2pi
sti
jle
mov
rorl
xchg
or
pop
cltd
xchg
es
xor
push
adc
sbb
loop
mov
or
pop
addb
pop
and
inc
addb
rcr
push
dec
push
and
out
jecxz
mov
or
mov
stc
fwait
xchg
roll
pop
or
mov
sbbl
push
inc
xorl
adc
push
inc
rorb
mov
jne
xchg
xchg
xlat
mov
adc
dec
ds
nop
adc
xchg
cmp
gs
inc
push
jnp
loop
mov
imul
jmp
inc
stos
flds
inc
enter
dec
xor
test
xor
sti
push
outsb
outsb
jb
dec
jge
sub
mov
mov
xchg
cmovle
cs
lea
lcall
bound
cmpsl
jecxz
mov
mov
pop
aaa
inc
inc
jne
jns
xchg
sbb
xchg
icebp
imul
mov
add
pop
sub
lods
mov
sub
bnd
push
cmp
xor
add
aam
xchg
test
xor
xor
xchg
lods
scas
or
lds
outsl
mov
xor
testb
daa
xchg
gs
dec
jns
lds
mov
pusha
sbb
cmp
into
mov
xchg
iret
nop
mov
aas
mov
and
and
aaa
daa
into
movsb
test
sti
je
pop
arpl
xchg
pop
xchg
xchg
gs
das
ss
pop
push
mov
pop
ret
xor
inc
cmp
andl
push
xchg
jmp
shl
aad
shrl
pop
xchg
orl
dec
movsb
sbb
xchg
xor
xor
xchg
paddd
pop
mov
push
push
call
and
js
add
js
jecxz
xor
and
and
pop
lea
subps
shll
mov
add
sub
aam
xchg
push
pop
cs
scas
push
movsb
andl
dec
lods
movsb
je
sbb
into
push
push
mov
cs
sbb
out
iret
or
push
cmpsl
inc
pop
iret
xor
lcall
adc
je
aas
int
sti
push
xchg
pop
mov
je
mov
enter
cmp
divb
out
push
or
adc
jne
leave
jbe
xchg
and
and
or
int
mov
fs
xchg
add
dec
mov
cmp
jbe
xchg
flds
mov
stos
pop
xchg
sub
and
enter
dec
ret
bound
xor
add
inc
or
rolb
push
xchg
ss
add
mov
cmp
push
sub
mov
push
xchg
out
les
adc
add
lods
xchg
bound
fcompl
aam
pushf
add
xchg
pop
push
dec
clc
and
mov
push
xchg
cs
add
push
inc
mov
lret
sbb
ret
sbb
mov
jle
add
je
dec
stos
mov
adc
dec
sbb
fmul
sbb
lock
xchg
rclb
jmp
push
fildll
xor
es
notb
xchg
je
test
jno
inc
xor
cld
int3
in
inc
daa
push
fadd
and
jb
sbb
pop
rcrl
push
dec
insb
shrb
jl
jge
or
inc
daa
push
jmp
xchg
out
mov
mov
dec
ud2
cmp
and
xor
push
xchg
fwait
stos
shll
mov
xor
cmp
push
mov
dec
add
aad
add
add
and
push
pop
sbb
push
enter
insb
jp
dec
bound
out
testl
mov
mov
fs
sbbl
add
mov
add
data16
dec
loopne
imul
pop
ljmp
xlat
mov
sub
xchg
push
inc
mov
repnz
pushw
dec
inc
sub
shlb
jno
mov
ja
in
ss
xrelease
std
and
pop
pop
nop
xor
dec
jo
out
lods
adc
jnp
fwait
sbb
mov
dec
mov
inc
iret
ja
outsl
aaa
mov
inc
jp
mov
and
push
stos
daa
loopne
mov
xor
stos
loopne
and
push
mov
jae
mov
mov
negb
stc
imul
sbb
mov
int3
ss
addr16
pop
cli
pslld
xchg
das
cld
and
mov
fisubrl
and
les
lahf
push
popf
hlt
add
rdtsc
pop
or
scas
ffreep
ljmp
push
mov
cld
stos
pop
add
and
jne
cltd
xchg
fmulp
xchg
sub
icebp
mov
xlat
stc
xorl
fldt
sub
not
fcom
mov
clc
and
cltd
jne
mov
fwait
in
jbe
aam
rclb
das
scas
orps
fwait
push
aam
or
add
sti
mov
jmp
push
adc
mov
int3
fs
inc
movsb
cmp
pop
xlat
ss
inc
subl
fiadds
call
in
jae
xlat
adc
arpl
jmp
adc
xchg
les
xlat
xchg
pop
add
sbb
adc
lahf
push
pop
mov
xchg
into
inc
push
xlat
jg
xor
mov
fistpll
xchg
testb
dec
mov
mov
push
inc
mov
testl
push
andl
pop
aad
or
stos
sbb
jp
aaa
push
ss
lahf
pop
pop
movsl
push
sbb
mov
in
xor
pop
mov
mov
xor
sbb
mull
jmp
test
repz
dec
cmc
and
sbb
sbb
and
fsubp
adc
movsl
in
fists
inc
sbb
jecxz
lret
push
jle
iret
das
jae
dec
jp
mov
loopne
xchg
sbb
xchg
stos
dec
int3
rcll
pop
data16
orl
addr16
jecxz
cwtl
repz
daa
sbb
and
insb
or
cmp
mov
int3
adc
ficoml
fisttps
jle
xchg
mov
rol
js
ja
clc
out
sbb
adc
xchg
scas
mov
sbb
pop
and
jbe
and
mov
and
scas
aad
push
xor
fadds
in
inc
negl
inc
sbb
psubq
add
ja
xchg
dec
jae
push
sbb
inc
sti
pop
pop
out
data16
xchg
jno
je
imul
push
mov
jle
xor
ds
adc
add
inc
push
adc
mov
pop
jg
repz
sbb
add
cmp
inc
pop
sbb
int3
mov
inc
outsl
mov
bound
cmp
faddl
jmp
loope
dec
xchg
adc
movsl
jmp
and
pop
stos
leave
ds
idiv
push
or
and
arpl
pop
push
inc
pop
into
and
sbb
and
jbe
fucomi
sub
das
sub
sub
dec
lcall
sub
stc
std
or
xor
ljmp
je
xchg
mov
repz
out
pop
aaa
testb
dec
xorl
sub
mov
mov
add
jmp
in
out
mov
inc
add
mov
mov
hlt
mov
into
jae
sub
sbbb
jp
inc
adc
cwtl
mov
push
aas
je
sbb
aaa
arpl
mov
mov
fdivrs
lods
and
pop
dec
lea
push
xchg
fsubl
cmp
push
sbb
push
inc
icebp
loopne
dec
and
je
repz
fwait
rorb
lods
test
in
int
out
and
fwait
and
lcall
call
push
inc
leave
mov
mov
pop
jne
mov
jmp
or
lods
mov
stos
aad
fcmovnu
xchg
leave
xchg
cmpl
xchg
and
pop
les
push
and
clc
sbbl
xchg
xchg
ds
xchg
push
or
xchg
dec
jb
cwtd
jbe
pop
scas
push
push
mov
cmp
cmp
pop
std
jbe
into
repnz
sbb
scas
or
xor
stos
pop
aas
mov
arpl
dec
fs
scas
dec
mov
xchg
and
push
ja
pushf
and
les
adc
mov
test
fildl
jmp
or
test
mov
test
shlb
scas
jg
outsb
push
aas
shl
fsub
sbb
cs
rorl
push
push
xchg
int
cs
pop
cmp
cli
mov
scas
das
xchg
bound
fldt
xor
sbb
daa
mov
dec
loopne
xchg
lods
dec
xor
imul
out
fiadds
add
mov
js
sbb
or
enter
scas
inc
fdivs
mov
es
repnz
outsb
paddusb
aaa
testb
push
mov
je
pusha
cld
inc
xor
add
and
push
push
and
sbb
add
repnz
insb
outsb
cli
xchg
inc
pop
add
mov
loope
lock
cs
and
mov
or
pop
sbb
divb
enter
mov
sbb
cmc
leave
cmp
jecxz
push
mov
pop
lahf
xchg
out
jbe
out
push
sbb
xorl
push
lret
and
mov
push
aam
arpl
add
pop
mov
pop
jno
dec
idivl
adc
inc
idivb
mov
and
sbb
out
dec
mov
in
rolb
push
pop
syscall
cs
loopne
popa
and
sbb
in
mov
addr16
or
aaa
pop
cmp
add
inc
pop
lret
mov
pop
test
push
dec
repz
adc
sbb
adc
cmpsl
adcb
pop
pop
adc
jae
in
lahf
sub
aas
pop
xorl
std
mov
xchg
sbb
mov
fcmovnb
notb
lret
aad
dec
xor
idivl
fwait
xor
dec
and
imul
stc
jg
fcoms
adc
mov
sbb
test
sbb
repnz
pop
mov
and
pop
pop
or
mov
outsl
xchg
mov
xchg
repz
pop
cmp
repz
jne
outsb
les
or
cmpsb
mov
cli
daa
int3
test
dec
mov
pushf
xchg
addl
fnstsw
xchg
add
lret
mov
mov
filds
bound
out
psllq
cld
fmull
or
pop
xor
mov
outsb
test
push
add
std
jp
lret
sbb
sub
mov
pop
mov
cltd
lretw
mov
pop
xchg
pop
pop
mov
iret
pop
mov
enter
inc
push
inc
lret
push
sub
adc
ja
lret
prefetchw
xchg
push
adc
jns
xchg
aas
enter
or
cvtdq2ps
imul
or
stos
cmp
mov
shr
or
arpl
xlat
gs
and
cltd
sub
sti
test
in
xchg
or
div
in
or
dec
fdivrp
mov
sbb
addl
iret
fnstcw
leave
inc
sub
adc
push
or
ret
je
les
and
mov
and
xor
repz
loopne
mov
jae
frstpm(287
mov
pop
imul
jae
pop
cmp
add
sbb
arpl
and
pcmpeqw
lret
sub
rorl
in
mov
dec
cmpsb
xchg
jnp
aam
loope
xor
dec
int
push
sub
sarl
sub
add
outsb
dec
scas
loop
lods
and
lods
mov
adc
sahf
fiadds
push
jns
lahf
jnp
aas
adc
fdivl
xchg
enter
sbb
sub
cs
aaa
cmp
push
ret
jl
lahf
sbb
push
cmp
xchg
movb
inc
rorb
sbb
mov
add
xchg
mov
stc
push
shlb
imul
dec
mov
out
insl
imul
das
sahf
popf
sbb
push
add
mov
adc
clc
push
xchg
xchg
push
jmp
subl
cmp
roll
push
and
xchg
add
movsb
add
addr16
rcrl
inc
sarl
les
add
and
popa
orl
ljmp
push
int
repz
clc
out
cwtl
mul
add
or
js
nop
in
ds
daa
mov
sahf
hlt
xchg
testb
test
sub
cmc
subb
mov
das
sub
pop
xlat
jb
lock
jnp
push
mov
out
cmc
or
repnz
or
or
out
push
cmpsl
ficoms
outsb
cmp
lea
call
pop
push
loope
cmpsl
jp
inc
divl
lds
mov
fimuls
icebp
enter
jmp
rorb
int
sbb
lcall
cs
stc
mov
repnz
sti
push
cld
pop
jnp
int
adc
xlat
inc
pop
dec
sti
sub
and
or
pop
fistpl
mov
movb
leave
xor
xchg
neg
or
ss
inc
roll
mulb
or
xchg
scas
aam
push
xor
icebp
jg
insl
mov
or
mov
or
xor
xchg
and
je
pop
imul
mov
mov
inc
test
loop
in
add
jge
pop
jecxz
cwtl
sbb
pmulhw
mov
ja
les
stos
mov
sahf
cltd
pavgw
rcrb
pop
popa
push
lds
push
out
arpl
jbe
add
pop
and
filds
daa
int
jle
aad
test
mov
mov
rcrb
ds
pop
movsb
pop
sahf
dec
or
and
mov
and
faddl
dec
pop
jne
dec
mov
xchg
inc
add
mov
fistpll
mov
fcomps
push
pop
sbb
adc
sti
mov
es
add
mov
or
aaa
into
daa
sbb
dec
sub
cwtl
sbb
fistps
arpl
mov
xor
scas
xchg
outsl
mov
xchg
aam
hlt
daa
paddusb
jae
xor
and
inc
xchg
sbb
sub
cmp
rorb
mov
or
push
pop
out
clc
das
mov
jne
mov
jb
pusha
xor
add
sub
xor
in
or
pop
das
outsl
fadd
and
mov
mov
fcoms
pop
movhps
arpl
int
gs
cmc
cwtl
decl
fstpl
out
xchg
and
inc
pop
mov
inc
in
xchg
push
pop
out
jnp
dec
ja
mov
add
push
pop
mov
dec
push
and
aam
mov
movsl
iret
ljmp
shrb
fisttpl
xlat
das
movb
push
dec
jg
pop
inc
sub
ja
repnz
pop
cs
cmc
lahf
adc
mov
push
aas
cmc
daa
xor
adc
out
inc
ja
jbe
cmc
mov
je
fsubs
dec
push
and
push
stos
xor
das
cmp
inc
fwait
push
scas
jbe
xchg
in
and
push
add
subl
jno
xchg
inc
push
push
adc
add
adcb
cmpsl
cmp
stos
aas
fwait
test
into
sbb
test
add
inc
add
sub
cmpl
aaa
data16
scas
push
push
lock
test
mov
ret
fdivs
mov
jmp
inc
sahf
jecxz
add
ret
add
sbb
add
icebp
into
push
jmp
mov
lahf
mov
cmp
jb
push
mov
lahf
add
xchg
sub
push
inc
pop
pop
daa
ret
xchg
cld
hlt
notb
push
adc
fidivs
or
into
and
jnp
das
push
sbb
xchg
sbbb
pushf
inc
mov
cld
xchg
xchg
lods
in
dec
sahf
mov
subl
aam
fmull
mov
fldt
es
dec
push
mov
inc
ss
xchg
idiv
cmp
xchg
sub
out
aas
add
push
mov
sarl
in
sub
cmp
insl
clc
sub
lret
sti
cmp
sbbb
cmp
pmulhuw
aam
xchg
ljmp
adc
rorl
jmp
push
ss
pushl
gs
sahf
xor
xchg
fidivrs
movsb
das
sbb
out
mov
aas
pop
sti
jne
fidivs
daa
fldenv
cmp
cmp
pop
or
test
sbb
out
add
dec
inc
mov
mov
cmp
ss
xchg
aaa
add
cmpb
ja
dec
pushf
jecxz
jbe
adc
stc
data16
sub
cmp
cmpsb
cmp
mov
jge
notl
ss
bound
jp
or
enter
loop
cld
je
inc
movsl
jmp
xchg
rorb
jl
addr16
loopne
cli
sub
andl
mov
int3
sti
rorl
xlat
xchg
mov
pop
xrelease
xor
push
rcrb
or
movsl
movsb
dec
mov
inc
int3
mov
inc
dec
jge
push
ss
leave
mov
aam
inc
mov
and
adc
int
pop
daa
je
aaa
cmp
xor
push
mov
insl
data16
cmpb
leave
add
sub
maskmovq
testl
dec
adc
std
mov
and
inc
add
addr16
dec
jp
loopne
gs
pop
pop
std
add
lea
cs
sub
adc
testl
sub
sbb
inc
jp
cmc
mov
mov
sbb
sbb
xchg
sub
lahf
add
inc
das
inc
xor
scas
ja
pop
cmp
push
pop
data16
mov
out
xor
les
push
xchg
add
js
pusha
ret
mov
bts
dec
pop
mov
lahf
xor
push
sub
and
xchg
repnz
xchg
das
and
inc
aas
hlt
mulb
pop
jae
sub
mov
push
push
pop
ja
sti
pop
adc
mov
and
or
mov
adc
and
negl
xor
xor
outsb
sbb
clc
arpl
daa
fistpl
or
mov
xor
shrb
orps
sti
or
or
sub
sub
push
sbb
or
stc
xchg
aam
cld
inc
imull
jae
sbb
cmpsb
sti
pop
test
sub
xchg
dec
xlat
or
sub
jp
xor
inc
aad
push
jne
sti
cmp
in
xor
data16
pop
stos
ljmp
mov
xchg
and
cmp
clc
add
cmp
leave
mov
fiaddl
fmul
add
jae
loop
inc
loope
idivl
adc
push
and
pop
push
notb
inc
out
push
inc
rorb
adc
mov
jno
dec
mov
mov
mov
add
leave
sub
and
mov
cmp
sub
int
dec
jecxz
scas
test
dec
sbb
inc
into
call
xor
mov
xor
test
pop
push
xchg
push
xchg
xor
add
push
pop
adc
popf
xchg
xorb
addr16
imul
cli
jbe
fcmovbe
or
push
xchg
or
repnz
xor
mov
outsl
or
lahf
cmpsl
push
mov
mov
push
mov
or
je
shll
add
and
pop
push
sub
pop
push
sti
jae
jno
push
aam
lods
xchg
sarb
aad
mov
repnz
pop
add
into
mov
sbb
pop
es
mov
add
scas
pop
and
daa
gs
clc
mov
inc
outsb
sahf
cmp
ret
add
mov
imull
cs
into
ret
xchg
test
xor
push
pop
cmp
add
fsub
shll
add
scas
xor
sbb
dec
cld
adc
sbb
and
loopne
aam
xchg
dec
js
jmp
aas
jnp
sub
fsts
cli
add
rcrl
ret
add
mov
gs
ror
push
inc
sub
je
and
dec
insb
sub
test
dec
xchg
stos
mov
mov
or
es
add
xchg
jo
adc
js
outsb
loope
mov
fcoms
pop
lahf
inc
aad
ret
fidivs
inc
in
ret
shrb
pop
mov
xchg
xchg
cmp
jp
and
cmp
repz
pop
lods
test
mov
insl
jecxz
outsl
jo
dec
jg
lods
mov
aaa
pop
je
pop
sbb
daa
push
lea
cmp
adc
inc
add
lret
daa
mov
mov
mov
iret
add
repnz
mov
and
push
loope
ret
xlat
aad
pop
pushf
push
enter
int
sbb
adc
xor
ja
push
test
mov
mov
mov
movupd
clc
ja
pop
xchg
push
adc
or
push
aad
mov
dec
sahf
xchg
xchg
push
and
arpl
xchg
pop
cltd
bound
les
xor
lods
lret
or
inc
sbb
stos
mov
mov
ss
mov
fwait
jle
pop
iret
outsb
addr16
test
xchg
mov
fnstsw
pop
cwtl
xchg
insb
popa
push
lds
incl
fildll
mov
lahf
push
adc
icebp
ficompl
cmc
popl
xchg
addr16
mov
cltd
aaa
adc
and
leave
testb
xchg
push
call
pusha
pop
insl
push
cmc
sarl
mov
xor
std
inc
jae
imul
sub
pop
rol
xor
lcall
xor
xor
ss
pop
lds
aad
insl
push
inc
sahf
xchg
cmp
xchg
or
and
mov
push
test
mov
sbb
lret
pop
cld
lea
xor
dec
nop
or
cwtl
fstpt
rorl
and
add
xor
sbb
xor
stos
cli
and
addr16
cli
in
mov
adc
fists
cltd
pop
sbb
adc
mov
xchg
stos
dec
xor
push
dec
fsubrs
sbb
adc
mov
add
stos
mov
pop
inc
int3
dec
jnp
adc
jp
and
xchg
fdiv
scas
and
in
jmp
xchg
inc
adcb
ret
push
hlt
sbb
adc
test
fs
ret
pusha
add
add
xor
cmpsb
cmp
insl
fnstcw
sahf
add
cmp
xchg
mov
das
fwait
stc
mov
in
push
hlt
bound
insl
adc
fldt
sub
xorb
mov
ss
pop
sti
pop
cmp
xor
cmp
dec
add
and
and
push
xor
mov
packsswb
push
mov
cmpsl
xchg
adc
or
loop
pop
jle
mov
out
shll
sub
mov
fadds
cmc
xor
push
mov
test
stos
ss
fsubrs
push
pop
in
mov
aad
dec
loop
into
aaa
loopne
cmp
movsl
xchg
in
out
dec
stc
inc
jmp
out
xchg
push
in
insb
pop
ja
inc
rolb
mov
fistpll
lcall
in
adc
or
flds
xchg
and
sti
leave
ja
dec
jp
dec
and
ds
sub
xchg
dec
ds
std
add
ds
dec
xchg
into
js
in
xchg
jg
adc
jecxz
mull
gs
push
ja
sbb
inc
fwait
sub
cmpsb
test
rorb
test
add
enter
sbb
mov
fucomi
add
imul
add
xchg
cmp
add
ror
cltd
test
sbb
mov
xchg
sahf
cmpsb
mov
xor
loop
and
mov
mov
fs
ficoms
bound
adcb
lahf
or
aaa
push
std
push
lret
jnp
ss
loopne
andl
sub
roll
mov
push
inc
arpl
adc
sahf
icebp
outsl
inc
loope
and
daa
mov
inc
movb
cmp
adc
jge
lock
or
test
cmp
jno
pushf
pusha
dec
pop
sub
iret
sub
data16
jp
stos
inc
mov
inc
push
mov
movsl
std
mov
out
push
xchg
mov
inc
pop
stos
pop
icebp
dec
mov
dec
sub
test
enter
fiaddl
ja
sbb
push
mov
add
iret
out
movl
ljmp
inc
test
mov
push
jmp
stos
adc
gs
test
mov
xchg
mov
push
cmp
adc
adc
lret
rorb
inc
xchg
aas
cmp
cs
orl
mov
and
sbb
sub
cwtl
push
fists
inc
sbb
xchg
add
sbb
push
arpl
inc
jne
xchg
inc
mov
hlt
push
cmp
rol
sub
pusha
jbe
inc
xor
pushf
data16
aas
sti
or
pop
dec
push
stc
fisubs
fstpt
mov
inc
dec
push
pop
andl
insb
imul
pop
adc
xchg
jle
push
negl
jmp
into
xor
pop
cwtl
lahf
push
hlt
inc
sbb
cld
xor
or
loopne
xor
cs
sub
call
test
jle
mov
cmpsl
icebp
or
iret
cs
mov
sbb
mov
sbb
or
aaa
xor
jg
sbb
lret
iret
adc
add
ja
inc
xlat
inc
adc
mov
jnp
inc
or
add
in
arpl
paddusw
dec
sbb
mov
aam
push
adc
add
xchg
fildll
xchg
repz
push
jns
or
dec
mov
xchg
push
jbe
push
fidivrl
mov
and
and
test
inc
aam
and
test
xor
push
adc
sbb
mov
aam
push
lahf
push
ror
in
adc
fs
mov
jp
fisubs
adc
adc
xchg
test
cmpsl
pop
xor
ret
xor
out
and
adc
mov
lock
scas
mov
popf
mov
inc
inc
loopne
mov
testl
and
fs
sbb
cmpsb
je
mov
sub
jp
push
addl
out
xchg
xchg
sarl
xlat
lds
and
fs
data16
dec
add
dec
daa
and
addr16
xchg
push
cmpsb
cld
mov
push
inc
inc
and
test
inc
daa
and
test
inc
pop
pop
gs
sbb
xor
out
xor
jmp
adc
insb
or
sub
aad
lock
cmp
ljmp
cs
push
mov
je
cmpsb
push
xor
test
pop
loopw
mov
negl
cmp
push
adc
push
adc
cmp
mov
shlb
or
lea
add
mov
inc
xchg
stc
repz
or
into
shlb
push
cmp
stos
movsb
mov
shr
add
pop
fcoms
cs
adc
cwtl
xorl
imul
mov
or
ds
mov
das
aam
aas
fldl
add
and
leave
sahf
orb
mov
adc
popf
cwtl
push
push
fbld
sahf
sbb
mov
xchg
jns
test
ret
fwait
push
test
mov
mov
das
lea
movsb
push
outsb
gs
and
cmp
xchg
aad
les
xchg
out
in
cmp
rcrb
std
outsb
stos
loop
enter
push
mov
prefetch
or
lods
adc
xlat
dec
xchg
jmp
xchg
movsl
adcl
ret
stos
call
inc
xchg
push
pop
push
daa
and
sub
enter
int3
cmp
dec
sub
pop
inc
daa
stos
leave
mov
jne
sti
inc
push
aad
add
shl
aaa
lret
and
orb
sbb
pop
or
data16
jo
movsl
cmpl
pop
mov
stc
lods
fisubl
mov
adc
rorb
cli
mov
jge
push
ljmp
out
lods
test
inc
test
adc
shrb
and
scas
fdivl
and
sub
mov
shrb
jno
shrl
add
adc
aas
fidivl
push
call
push
push
xchg
jb
and
push
lret
out
sahf
xor
add
cmp
adc
addb
mov
add
ds
xor
cmc
pavgw
fidivrl
adc
jae
push
ror
cmpsb
ror
cld
mov
inc
jnp
cwtl
das
mov
ret
ret
dec
out
adcl
and
push
fisttpll
cmp
sbb
or
ret
dec
pop
ds
lea
fidivrl
and
movsl
out
lret
fwait
iret
daa
xchg
int3
cmp
mul
add
xor
sarb
xchg
and
lahf
daa
movsb
dec
cmpl
addr16
ret
xchg
in
push
aam
and
in
xor
fwait
xor
push
sub
cmp
sbb
add
and
xchg
enter
insb
fdivrp
dec
adc
sbb
daa
xchg
jne
pop
jnp
jp
and
adc
pop
adc
xor
inc
ds
lock
push
or
mov
jg
mov
mov
in
daa
lock
es
and
clc
add
xchg
daa
inc
lret
lock
daa
mov
popa
pcmpeqb
pop
jmp
int
jecxz
inc
pop
outsb
inc
test
cmpsl
aad
cmp
pop
sub
enter
daa
jae
sub
sti
mov
into
inc
xlat
xchg
movl
mov
lret
rorl
push
inc
fucom
cs
addl
sti
cmp
jae
inc
cmpsl
add
idiv
xor
fdivl
xor
jo
pop
cmp
fnsave
xchg
push
mov
stos
or
pusha
movl
xlat
add
jmp
mov
sub
pusha
inc
xor
test
xor
sub
jle
mov
mov
dec
loope
push
xor
fidivs
cmp
add
sub
push
push
add
mov
xchg
jne
push
mov
mov
mov
dec
xor
xlat
xchg
int3
mov
mov
dec
lahf
push
sub
in
adc
hlt
aaa
push
push
push
fs
or
adc
repnz
xor
or
int
ret
mov
cld
mov
sbb
adc
xchg
sbb
test
push
mov
jmp
ss
mov
lods
clc
ficoms
unpckhps
jg
xor
fsubp
lods
repz
lret
pop
push
addr16
jmp
repnz
pushf
mov
xchg
mov
pop
and
rolb
mov
inc
fldt
testl
repnz
sbb
into
or
sub
xchg
mov
mov
cmp
mov
lock
push
imul
mov
jbe,pt
push
push
mov
jg
dec
inc
cmp
jnp
lods
cmc
and
pop
and
jns
fisttps
scas
sbb
cwtl
or
mov
fistps
or
push
outsb
repnz
adc
add
xchg
jecxz
pop
out
xor
ss
pop
scas
push
and
jb
fldl
lods
adc
xlat
jle
movsb
int
imulb
lahf
xchg
add
bound
xor
xor
in
xor
inc
mov
dec
adc
in
data16
push
inc
dec
lods
popa
mov
stc
push
cmp
daa
rolb
subb
push
inc
das
xorb
sub
outsb
test
lcall
cmp
daa
add
jbe
push
into
and
cmc
jp
mov
mov
dec
faddl
mov
ljmp
cmc
or
add
mov
xchg
and
test
and
in
pusha
negl
pop
cmc
fistpl
addr16
cmp
and
xchg
daa
mov
cmp
je
fsubl
filds
movb
pop
sbb
fsubrp
sbb
cmp
push
stc
mov
fisubl
cvttps2pi
xor
or
aad
cld
push
and
fwait
add
cmpsl
arpl
outsl
mov
inc
ds
pop
aaa
bound
mov
fstl
dec
or
outsb
fisttps
xchg
decl
xchg
mov
leave
mov
add
add
xor
inc
lret
mov
clc
pop
inc
fbld
pushf
adc
jle
jl
lret
es
lret
xchg
mov
jle
mov
cltd
lds
xor
test
cmp
sub
add
imul
pop
shrb
test
cmp
lds
ret
divl
ds
loop
in
xchg
arpl
repz
pop
je
aam
jb
cli
inc
movsb
bound
fidivrs
sub
xor
lahf
sti
xchg
jbe
notl
xor
cld
add
xchg
div
movsb
idivb
xor
fists
and
pop
jle
push
xchg
cld
push
mov
xchg
stos
cmp
sbb
aad
and
cmp
mov
cmp
fmul
orl
fs
pop
shll
test
add
push
mov
pop
inc
inc
enter
fistpl
data16
and
pop
or
jl
xorl
test
mov
push
sbb
push
xchg
push
insl
das
jbe
cld
dec
in
push
xcrypt-cbc
cmpsl
xchg
pop
xor
pop
pop
inc
call
inc
call
pop
push
fwait
mov
imul
push
inc
xchg
add
stc
push
sti
xchg
mov
fiadds
pushl
inc
cltd
inc
dec
jns
adc
push
and
xchg
cltd
mov
push
add
adc
fcmovne
loope
outsl
sub
sub
mov
inc
je
sti
push
sbb
or
sarb
arpl
faddl
push
mov
add
rcll
fists
fcmovb
test
jno
popa
movsl
push
inc
outsl
daa
or
dec
mov
cmp
mov
ds
push
adc
adc
inc
rcll
sub
xchg
fstpl
xchg
cmc
sbb
icebp
repnz
sbb
add
mov
outsb
xor
pop
pop
sbb
cmc
mov
rol
jne
cmp
sub
lahf
in
rcrb
rcll
pop
push
stos
or
add
xchg
daa
xor
add
rcll
and
in
and
ja
in
jne
ss
notb
adc
cmp
out
xor
or
in
sbb
rsm
xchg
in
loope
in
iret
mov
sub
add
pop
call
pop
pop
lcall
sub
cwtl
repz
daa
movsb
cmp
mov
cmp
jg
mov
add
hlt
or
sbb
mov
dec
xchg
push
repz
call
pusha
xchg
out
or
push
jmp
add
pop
push
pop
sbb
or
pop
pop
bound
jecxz
sbb
je
loopne
outsl
xchg
push
aam
sub
xor
sbb
ss
gs
pusha
jno
push
and
out
int3
loop
jg
xor
inc
and
stos
xchg
jb
dec
js
or
enter
sub
mov
dec
cld
addr16
aaa
int3
jp
mull
loopne
dec
push
xor
jg
stos
aad
push
imul
bswap
pop
addr16
addl
lds
xor
popf
rcrl
push
xchg
repz
pop
inc
in
mov
jg
mov
dec
iret
jns
and
outsb
jno
push
xlat
or
xor
mov
rcrl
out
data16
lods
or
cld
pop
int3
sbb
fwait
out
sbb
pop
pop
add
xchg
into
sub
cmp
cmp
pop
xchg
mov
pop
inc
bound
daa
pop
inc
mov
dec
fs
sub
sub
shlb
fs
ret
xchg
xor
shlb
jbe
lret
popl
sub
dec
pop
jno
pushf
pop
inc
dec
addr16
jno
sbb
orl
inc
or
pop
insl
cmpsl
jae
inc
stos
xchg
out
xor
pop
push
in
nop
insl
adcb
add
pop
sbb
mov
test
xorb
and
cmp
cmp
pop
out
push
cmpsb
movsb
mov
or
dec
xchg
movsl
mov
sub
aam
push
ss
and
mov
cmp
inc
xor
push
into
xchg
pop
in
xchg
cmp
imul
stos
cli
in
out
xchg
addr16
cmp
xchg
jne
adc
xchg
sub
xchg
and
push
xchg
out
clc
insb
int
cmp
adc
or
xlat
jmp
fists
cmpsl
outsl
sbb
fwait
push
fwait
xor
stos
dec
sbb
jecxz
ja
jecxz
xchg
and
enter
inc
add
les
movl
inc
cmp
dec
bound
ja
dec
sbb
and
bound
orl
das
mov
or
xchg
aam
mov
inc
cmp
lcall
arpl
shll
hlt
xchg
movsb
fwait
data16
adc
or
fisttpl
call
mov
jmp
and
xor
sarb
js
stos
in
jle
mov
es
ficoml
jmp
cwtl
dec
int3
or
not
xor
insl
adc
iret
sbb
out
mov
adc
jno
repnz
or
cli
fisttps
loop
loopne
add
xor
sbbl
in
mov
and
dec
and
cmp
inc
insl
jg
lret
mov
inc
mov
iret
push
test
loop
jl
add
sti
jae
xchg
pop
mov
out
dec
adc
sbb
pavgw
push
pop
ljmp
in
jmp
ret
fiaddl
adc
lret
mov
or
imul
xchg
int3
jge
jg
xchg
je
enter
movsb
pop
pop
jg
les
insl
das
fcompl
push
test
sub
and
hlt
in
pop
xchg
popa
add
orl
stos
mov
sti
cmp
sbb
add
cwtl
push
cmp
xor
jmp
lcall
mov
jae
movsl
mov
and
daa
pop
aam
push
mov
add
pop
aam
push
adc
jb
xchg
adcl
imul
jmp
loop
ret
xor
xchg
std
fidivl
dec
pop
cmpsl
sbb
xchg
or
mov
lods
lock
pop
mov
adc
stos
mov
leave
xchg
ljmp
lret
jle
mov
icebp
cmc
js
adc
push
sub
aaa
outsl
mov
repnz
cwtl
rcrb
mov
test
pushf
xchg
pop
xchg
inc
mov
jecxz
jae
jb
jno
aaa
jp
push
xlat
dec
daa
loope
pop
mov
inc
out
and
call
outsb
fdivr
popf
icebp
nop
mov
ja
adc
lock
aam
inc
cmp
mov
pop
mov
jmp
pop
push
xor
xor
stos
enter
pop
xchg
aam
or
push
push
mov
mov
stos
push
mov
data16
into
jecxz
lea
and
inc
push
addr16
subb
adc
fs
das
push
aas
adc
cmp
test
jle
pop
xchg
imul
insb
sub
sbb
mov
sbb
pushf
sbb
or
pop
mov
pop
ds
sbb
shlb
loope
or
movb
cmc
jne
inc
add
push
fidivs
int3
push
and
jo
add
test
loope
shrl
push
pop
imul
fldt
add
imul
add
lahf
test
cmp
sti
dec
mov
nop
mov
aad
pop
push
mov
or
xor
xchg
jmp
fsubs
idivb
cmp
fmul
cmpsb
test
push
mulb
leave
lea
cmpsb
sub
pop
jns
hlt
sbb
push
xchg
arpl
clc
std
xchg
aaa
adc
mulb
cmovp
add
sub
xchg
sub
mov
sbb
sbb
add
add
adc
rclb
xchg
xchg
pop
cmp
xor
sbb
movups
faddl
imul
jle
int
xchg
mull
in
scas
addr16
in
mov
ja
push
enter
sub
addb
dec
inc
pusha
js
ss
testl
mov
inc
aaa
out
aad
cmp
sbb
flds
dec
sub
lahf
adc
aam
cmp
loopne
xchg
pushf
ljmp
leave
notb
movl
flds
push
mov
adc
jns
popa
cmpb
cmp
adc
or
daa
and
xchg
add
dec
bound
fcmovb
pop
mov
cmp
mov
sbb
and
lea
out
push
imul
scas
imulb
cs
inc
xchg
outsl
jmp
andl
inc
nop
xchg
lcall
pop
test
cmp
jno
and
xchg
gs
sub
cmp
jne
push
mov
and
jecxz
out
mov
aaa
or
icebp
ja
arpl
or
inc
or
sbb
xor
bound
sbb
sbb
jnp
cltd
mov
push
xchg
loop
cmpsl
sbb
rolb
or
mov
popa
xor
mov
imull
dec
cld
addl
ficomps
rcll
mov
mov
and
xchg
mov
inc
mov
cmp
mov
or
jmp
add
aas
sub
inc
ret
or
and
mov
push
sbb
arpl
mov
sbb
into
leave
xlat
sub
jmp
xor
cmpsb
lea
test
xchg
cmp
addr16
push
das
jecxz
push
out
xchg
pop
hlt
sub
das
mov
and
xor
js
adc
icebp
inc
lods
insl
pop
in
lret
push
fwait
push
mov
add
lahf
pop
cmp
popl
js
mov
and
sarb
inc
or
ja
mov
fsubs
inc
sbb
sbb
and
push
pop
push
jg
inc
addb
sbb
sub
pop
push
mov
les
lret
imul
or
je
jae
mov
data16
outsb
popa
js
je
lret
pop
imull
push
and
xchg
add
and
out
adc
add
adc
sbb
cmp
flds
sbb
cmpsl
out
pop
cmp
or
xchg
pop
mov
mov
and
inc
mov
mov
ja
rorb
out
jo
loope
push
sti
jl
push
inc
adc
sbb
or
shll
repz
shufps
shll
cmp
in
mov
inc
xchg
pop
das
adc
sbbb
jp
cltd
fwait
mov
xor
pop
testl
mov
xlat
outsl
shlb
mov
jns
jecxz
lea
rolb
sub
int
mov
iret
std
popa
dec
loopne
sub
data16
test
not
outsl
int
das
xchg
mov
add
iret
and
mov
imul
int3
test
aad
push
sbbl
mov
push
jno
add
daa
lods
mov
iret
loop
ret
inc
dec
ret
pop
movsl
int
mov
jmp
pop
push
push
lcall
add
lret
iret
iret
xchg
fdivl
xor
adc
xchg
inc
lods
add
mov
xchg
jo
xorl
add
xor
out
or
arpl
jnp
jb
imul
cs
and
sbb
in
pusha
imul
aas
adc
outsb
sbb
and
dec
pop
in
mov
adc
adc
mov
daa
xchg
mov
mov
mov
inc
sti
roll
push
or
in
pop
or
dec
push
mov
xchg
shll
stos
call
cmp
add
cld
je
imul
sbb
in
stos
imul
mov
mov
xor
push
je
adc
pop
jg
sbb
movsb
addr16
ljmp
add
pop
out
add
sbb
or
xchg
pop
test
mov
adc
pop
push
cwtl
stos
cs
dec
sub
inc
sub
sbb
inc
jno
out
cmpsl
dec
test
jp
push
pop
inc
mov
push
xchg
sub
scas
mov
and
ffree
or
cmc
je
out
inc
jmp
div
rorb
les
and
add
ret
mov
mov
pop
dec
sub
in
and
mov
xor
push
xor
lret
pop
sub
adc
popf
mov
push
xor
inc
lret
stos
jbe
int
add
sbbb
rcrl
scas
dec
es
dec
mov
xor
mov
test
jo
xchg
ss
sbb
push
add
or
sbb
xor
xchg
pop
xchg
xchg
pop
cs
out
push
mov
int3
cli
sub
clc
cmp
adc
mov
stos
mov
lea
sub
sahf
in
jnp
int3
leave
and
xor
inc
fmuls
shlb
dec
mov
and
aad
add
lods
xor
lods
push
enter
and
jmp
sbb
push
cmc
sbb
xadd
cmc
pcmpgtw
push
daa
jne
cmp
dec
repnz
xchg
sbb
rol
shlb
pop
inc
pop
lods
cli
xchg
add
pop
push
inc
xor
pop
dec
push
je
push
xor
stos
push
mov
sbbb
mov
sarl
dec
aam
ds
shrb
stc
pop
shll
into
or
push
sub
cmp
imull
sub
cmpsb
pop
sbb
jne
loopne
pop
mov
mov
add
movsl
das
mov
data16
dec
pusha
cmp
xor
outsl
addr16
mov
add
sbb
imul
out
mov
pop
mov
ficompl
loop
in
outsl
push
pop
ljmp
ficoms
push
mov
sbb
fisubl
add
mov
es
iret
pop
add
mov
fs
test
mov
es
adc
mov
adc
and
lock
ljmp
fidivl
mov
sbb
fs
xor
xchg
mov
push
gs
xchg
rolb
push
xchg
lock
xor
lods
mov
push
sbb
test
into
mov
xor
jno
cmp
or
and
jno
mov
add
in
xor
add
xchg
push
jecxz
stc
inc
fldl
movsb
dec
fcompl
adc
shrb
push
sub
sbb
movsl
sub
and
mov
out
dec
gs
xor
xchg
jo
push
clc
movnti
and
xlat
fimull
ss
adc
sahf
icebp
adc
loope
out
add
cmp
movq
in
and
and
xchg
aad
pop
pop
mov
test
or
xchg
clc
lcall
xchg
aaa
ja
out
fnsave
adc
add
movb
mov
push
add
pop
rol
inc
int
loop
pop
nop
mov
cmpl
jnp
and
dec
ficomps
out
and
rcr
scas
pop
dec
xlat
push
bound
mov
adc
lea
xchg
test
xchg
stos
lea
sbb
ret
mov
fidivl
into
sub
repnz
mov
aad
mov
iret
in
jecxz
jle
insb
or
fists
cli
arpl
mov
daa
ja
dec
mov
inc
lds
push
jecxz
adcl
add
or
pop
jo
outsb
arpl
fucomp
cs
mov
mov
iret
es
mov
dec
scas
push
push
cld
and
scas
add
aaa
xor
rclb
movsb
push
aam
cld
sti
and
mov
ljmp
pop
bound
jbe
pop
xchg
push
mov
out
pop
ja
cltd
sti
cmp
inc
inc
pop
xchg
outsb
xor
dec
imul
pushf
push
pop
sbb
pop
stc
sbb
insb
xchg
and
xchg
adc
xchg
adc
in
xor
movsl
mov
adc
mov
sbb
lds
movsb
in
and
outsl
xor
adc
aaa
and
inc
xchg
pop
ljmp
mov
sarb
inc
push
mov
lret
jmp
testl
xchg
push
xchg
rolb
xchg
cmpsl
cs
repnz
jmp
out
cmpsb
addb
cltd
adcl
sub
pop
xchg
jb
hlt
push
mov
divl
sub
or
out
das
out
pop
mov
dec
mov
out
xchg
sbb
dec
adc
mov
shrb
pop
fcompl
xchg
or
faddp
bound
sahf
xchg
mov
ja
imul
test
lea
fnstcw
test
das
loopne
jo
mov
das
pop
sarb
cmp
jle
addr16
jo
sub
pushf
mull
xchg
push
dec
jmp
jle
cmpsb
scas
fs
inc
leave
xchg
push
or
sub
repnz
lods
das
jle
stos
cmp
push
inc
lock
cmpl
inc
xchg
push
dec
dec
cmp
xchg
pop
push
xor
push
sub
std
jle
data16
pop
xchg
push
int
sbb
popa
inc
xor
pop
pop
xor
xchg
cmp
fdivl
or
add
push
test
in
or
and
adc
push
mov
test
cvtpi2ps
loop
jb
dec
fstpl
mov
stc
sbb
adc
inc
repnz
mov
out
push
inc
jnp
rcr
into
mov
mov
lret
cmpsl
mov
cmp
pop
pop
mov
sub
js
daa
hlt
les
add
sarb
fsts
dec
mov
aaa
fimuls
cs
jae
pop
pop
mov
inc
dec
insl
enter
dec
mov
pop
push
and
mov
mov
xor
dec
mov
pop
adc
mov
notl
ss
xor
loope
and
xor
inc
push
nop
stos
adc
cs
test
aam
addr16
mov
imul
inc
sbb
ss
mov
fimull
pop
cmpb
mov
lret
cmc
xchg
pop
cltd
clc
fsubrs
sub
push
jnp
adc
ljmp
mov
inc
xchg
es
push
icebp
mov
xor
movsb
aad
lds
mov
push
test
imul
sub
jle
adcb
pop
cmpsl
mov
les
aam
gs
arpl
adc
out
ja
mov
fsubrl
mov
adc
das
jb
mov
aad
into
bnd
mov
rcrl
mov
stc
gs
mov
xchg
xchg
popa
jmp
in
outsb
cmp
stos
inc
shll
sub
aaa
stos
mov
and
or
daa
mov
cmpsb
in
cvtps2pi
jae
inc
dec
bound
jg
mov
push
pop
pop
outsb
pop
fists
nop
mov
push
cwtl
lock
js
sbbl
cld
aaa
push
cs
and
mov
imul
arpl
sbb
pop
mov
jbe
sbb
cmp
add
outsb
or
adc
xor
test
adc
jp
insb
jle
loope
int
sub
mov
mov
jne
je
das
outsl
xchg
sub
into
cwtl
xor
cmpsl
popf
inc
daa
inc
pop
mov
or
pushf
scas
cwtl
and
imul
aad
mov
pop
les
mov
enter
scas
setns
movsb
fwait
mov
stos
add
cmc
push
mov
or
fucomi
fmul
add
push
cld
cs
pop
lods
push
roll
ret
cmp
mov
xchg
cmp
hlt
cmp
cmp
dec
mov
scas
and
nop
or
lret
into
dec
mov
adc
push
outsb
call
fbld
add
pop
lret
fsubrl
ret
pop
out
fnsave
push
subb
add
ja
xlat
adc
out
cmp
ret
push
test
mov
lret
out
fidivrl
cmpsl
lock
pop
vucomisd
maxps
test
mov
sub
mov
cmp
adc
mov
sub
adc
sub
fwait
fs
cmp
fmul
lea
das
mov
ret
sti
lcall
frstor
xlat
xor
push
push
push
inc
test
ds
ret
in
push
add
jle
and
test
mov
xchg
dec
push
ljmp
lea
pop
or
inc
adc
js
dec
stos
xchg
xor
push
incl
dec
es
mov
scas
add
repnz
mov
scas
dec
pop
pop
sbb
push
mov
enter
sbb
sub
xor
pop
adc
movhps
rcl
mov
sub
mov
arpl
mov
xor
lret
push
xchg
arpl
sahf
cmpsb
insl
sbb
rolb
or
sahf
and
xchg
dec
inc
or
xor
mov
jno
mov
sti
jne
jg
mov
sahf
mov
pop
test
pop
gs
add
jmp
pop
xchg
cmp
push
aas
xchg
shrl
mov
cmp
add
push
ret
sub
andb
pop
sbb
test
push
sbb
adc
pop
xlat
jb
ds
xchg
mov
div
repnz
add
movsb
mov
xchg
das
rolb
scas
lahf
add
pop
xchg
sbbb
dec
test
add
in
mov
sahf
iret
cli
sbb
sti
cmp
xor
loop
add
add
faddl
testb
jbe
rorb
pop
pop
shl
adcb
and
pop
shl
ja
stos
cwtl
inc
jge
out
and
cs
or
clc
jns
mov
add
sahf
outsl
mov
mov
adc
adc
xor
push
movsb
outsb
cmp
mov
icebp
imul
jmp
popf
mov
das
in
stos
xchg
lea
outsb
jo
xchg
adc
bnd
lret
dec
outsl
cltd
adc
and
enter
cmp
rcrl
xchg
ss
jno
rcrb
ds
mov
cmp
test
sub
sbb
push
popf
push
push
and
jae
mov
inc
adc
sub
mov
into
add
sub
sti
sbb
ss
mov
pop
clc
into
mov
cmp
div
test
adc
xchg
sub
fldl
or
jecxz
xchg
fwait
and
rolb
sbb
popa
ret
lcall
pop
push
out
into
jl
sahf
es
xchg
fwait
sbb
movsl
aas
lahf
xchg
mov
popa
and
imull
jae
pop
pop
insl
mov
mov
outsb
push
xchg
inc
sub
data16
lcall
xor
xor
rcrl
add
mov
mov
pop
shrb
push
add
cmc
loope
or
sbb
pop
aas
inc
sahf
sbb
test
enter
sub
lahf
inc
loopne
inc
test
repnz
mov
xchg
sbb
cld
std
dec
movq
push
psubsw
pop
cmc
pop
repz
or
add
bt
aam
jp
push
das
ret
xchg
popf
repnz
in
int
daa
xchg
int3
sbb
lret
push
mull
loopne
xchg
sbb
xlat
pop
mov
mov
adc
cld
add
push
lret
dec
adc
pop
push
lock
xor
add
cmp
push
pop
xchg
pusha
cmpl
sbb
and
iret
mov
adc
mov
mov
mov
bound
scas
movsb
mov
jp
mov
inc
clc
ljmp
adcb
sbb
pusha
sbbb
leave
in
xchg
data16
push
fs
out
ds
imul
outsb
push
int
dec
jnp
add
ret
adc
fs
and
inc
or
sbb
add
andb
jle
outsb
ljmp
fnstcw
cld
fs
int
or
fsubrl
xor
pop
hlt
xchg
shlb
loop
push
xlat
xchg
cmpb
ljmp
pop
fldcw
xorl
leave
mov
mov
add
push
stos
je
loop
add
mov
movq
test
mov
notb
push
add
setg
movq
add
mulb
and
les
sbb
add
or
data16
xor
dec
orl
xor
shrb
lcall
enter
add
mov
inc
dec
cmpb
daa
scas
clc
mov
movsl
out
fwait
jle
jmp
stos
jno
sbb
add
pop
mov
dec
mov
fimuls
pop
cld
jle
sti
subl
add
cmp
push
inc
mov
xchg
sub
or
inc
or
jp
nop
mov
in
sti
inc
xor
pop
jg
xlat
cmpsb
movb
pop
and
sti
pushf
inc
testb
je
mov
ja
xchg
test
push
add
lcall
xor
mov
pop
outsb
lea
call
fs
and
out
pop
jae
sbb
test
push
daa
fs
aaa
jge
push
pop
imulb
mov
inc
rorb
inc
mov
out
mov
xchg
stos
add
xor
push
in
pop
fidivrs
sub
je
add
out
inc
in
xor
ss
imul
sub
ja
mov
orl
xchg
push
push
cmp
mov
cs
movsb
adc
into
or
lret
and
divl
push
adc
cld
in
out
push
out
cmp
test
push
in
out
dec
xchg
mov
xor
inc
jne
testl
iret
and
inc
movsl
inc
pop
and
mov
and
jae
sbb
in
inc
sub
bound
or
test
adc
cld
iret
std
adc
xchg
les
jg
ljmp
fwait
mov
or
adc
pop
sub
add
icebp
jecxz
push
and
push
outsb
idiv
adc
rcr
sbb
dec
in
imul
add
and
sbb
mov
fs
pop
cmp
dec
ja
leave
add
cmpsl
ds
mov
or
cmp
inc
out
mov
sub
adc
sarb
and
sbb
cwtl
cmp
into
sub
addr16
pop
repz
aad
sub
xchg
lods
mov
es
xlat
and
mov
out
adc
and
cmp
lahf
mov
sub
push
or
ss
jne
test
dec
dec
addl
and
test
movsl
add
adc
sbb
mov
mov
sti
xor
or
sub
pop
push
jmp
pop
adc
add
leave
ja
push
pop
pop
xchg
mov
scas
push
or
or
cwtl
push
lahf
and
add
xchg
add
pop
inc
dec
rolb
sub
adc
scas
outsb
jle
call
jnp
loop
jp
movsl
orb
test
scas
push
sub
sarl
mov
xchg
sbb
xchg
jecxz
insl
ret
add
xor
dec
xchg
pushf
push
dec
xchg
subl
or
mov
xchg
xchg
popa
or
lret
mov
push
rep
je
inc
xlat
nop
cmp
push
addr16
push
push
test
pop
lds
movsl
gs
lea
popl
les
mov
mov
ja
and
movsb
xchg
mov
arpl
jmp
jl
mov
fwait
lret
in
js
jle
sub
inc
or
inc
mov
mov
xchg
lds
push
daa
jecxz
push
test
xchg
pop
sbb
jmp
je
stc
mov
and
mov
cmp
sub
xchg
xchg
in
xor
dec
test
gs
cmpsb
mov
cli
cmpsb
mov
lds
mov
fiadds
add
jo
cmp
and
cmc
or
xchg
andb
imul
addr16
ja
sbb
inc
mov
in
mov
lea
in
mov
je
cs
push
lock
stos
andb
lret
and
sbb
mov
std
scas
jp
shlb
push
mov
mov
arpl
mov
jae
icebp
add
scas
pushf
lret
cmp
sbb
jg
push
aaa
push
daa
leave
popa
xchg
and
cmp
xorl
ds
lods
push
inc
mov
movsb
ss
leave
das
imul
movsb
flds
adcb
pop
cld
aaa
addr16
pop
leave
pop
pop
pop
add
mov
xchg
iret
xorb
xchg
push
scas
pop
push
fimuls
outsl
jge
aaa
dec
xor
xchg
das
pop
lret
sbb
mov
clc
sbb
xchg
mov
jge
aaa
js
pop
pop
scas
xchg
push
cmp
out
sbbl
out
stc
testl
push
inc
xchg
pop
push
mov
sbb
ss
adcb
data16
out
xorl
in
jbe
cmpsb
aaa
push
or
add
mull
adc
sbb
lds
add
adc
add
pop
cld
or
arpl
int3
arpl
jo
push
jne
dec
xor
xchg
in
aam
xchg
push
xor
shr
pop
and
adc
mov
or
pop
inc
dec
subl
jne
push
lods
dec
divl
adc
data16
push
pushf
xchg
fwait
add
inc
fwait
xchg
adc
jae
addr16
cmpsb
test
mov
mov
loopne
and
mov
add
adc
in
pop
push
push
add
inc
xchg
out
inc
push
imul
cltd
push
or
test
aas
adc
cmp
cmp
inc
sarl
ret
lcall
pop
add
cmpl
or
add
mov
and
xchg
ret
fdivrl
xor
fidivrl
and
cmp
dec
or
jnp
popf
dec
dec
fdivrs
inc
inc
roll
std
in
push
sti
imul
push
sub
and
lret
imul
testl
mov
loopne
push
xchg
ss
xchg
mov
outsl
movl
movsb
push
mov
insl
add
inc
or
pusha
incl
jne
xchg
sub
movsl
cs
imul
add
daa
orb
mov
aaa
aam
out
xchg
inc
das
sbb
jmp
dec
in
outsb
add
xor
sbb
add
popl
out
or
cmpsl
ret
mov
add
add
sub
sbb
inc
adc
adc
xor
and
inc
and
xor
enter
fisubs
xchg
ds
ret
push
lds
xor
and
js
insb
push
sbb
inc
dec
jnp
xor
fists
pop
test
cmp
shlb
mull
sete
pop
inc
test
jmp
stc
add
sbb
push
sar
dec
and
push
adc
cmp
add
dec
and
ljmp
push
pop
inc
cmp
pop
add
jecxz
dec
in
das
and
xchg
adc
mov
push
in
and
add
loope
arpl
test
movsb
push
mov
and
dec
add
dec
nop
cmp
add
push
sbb
adc
sub
idiv
mov
mov
inc
xor
mov
jge
mov
mov
cmp
test
add
dec
or
cmpsl
rolb
loopne
es
jmp
imul
aas
fwait
sub
and
mov
ss
push
aas
dec
lahf
pop
or
inc
push
mov
addr16
dec
sub
pop
daa
fmull
dec
insl
dec
std
add
mov
shl
add
sub
fneni(8087
arpl
sub
ja
in
and
sti
in
push
fisubl
mov
fdivrp
daa
into
jmp
sti
jnp
fiadds
adc
jg
imul
pop
aas
pop
and
idiv
fwait
repz
jb
or
pusha
and
clc
cmp
push
xchg
lods
pop
leave
mov
repz
add
inc
into
imulb
pushf
cltd
pushf
mov
lahf
add
lea
jle
xchg
xor
mov
or
xor
sbb
xchg
xlat
and
or
fnstsw
push
in
push
xchg
mov
fs
inc
dec
mov
and
adc
dec
imul
scas
mov
lock
push
and
pop
mov
in
stos
icebp
push
dec
notb
pop
xor
or
aaa
cmp
inc
jle
lret
or
pop
dec
and
icebp
fdivrp
sahf
mov
ljmp
leave
clc
xchg
mov
dec
int
leave
pushf
cltd
mov
or
addr16
les
int3
jne
sub
adc
cmp
sub
xor
imul
js
inc
sub
or
sbb
test
rol
mov
jmp
dec
mov
out
sbb
sub
test
sbb
push
jo
jl
shll
sbb
test
pop
mov
pop
shrl
pusha
daa
or
pop
test
or
jecxz
sbb
jge
leave
cmp
dec
inc
xchg
data16
inc
dec
jecxz
psubusb
push
dec
xchg
aam
mov
aaa
adc
es
cmp
sbb
mov
mov
fisttpll
push
lcall
and
shlb
sub
adc
jb
sbb
in
or
and
je
add
and
add
pop
mov
add
or
dec
dec
pop
aaa
xlat
adc
out
mov
mov
les
jp
out
stos
mov
in
xor
mov
loopne
movsl
fnstsw
jl
inc
mov
push
sbb
cmp
pop
mov
add
and
xor
bnd
mov
add
pop
ret
xchg
dec
ljmp
daa
jmp
pop
out
or
ljmp
lcall
or
inc
fstps
xlat
push
sahf
lds
or
add
daa
push
outsb
sarb
inc
rclb
add
aas
mov
push
cmp
fsubl
push
mov
sti
jns
jle,pn
adc
movsl
dec
and
js
sub
xchg
stos
shl
pop
cmp
push
lret
inc
add
adc
jne
dec
xchg
xor
xor
mov
icebp
adc
and
pop
out
es
rep
pusha
popa
std
mul
push
iret
pop
lcall
dec
dec
cmp
ja
pop
sti
push
addr16
lahf
mov
xchg
xor
in
mov
or
outsl
xor
test
xor
and
lods
push
jno
orb
cs
push
inc
pop
imul
or
pop
or
cmp
mov
test
sbb
es
out
mov
add
or
inc
movnti
mov
cmpb
inc
pushf
cs
jecxz
jg
push
mov
aam
cmp
xchg
mov
pop
xor
xchg
imull
fwait
or
xchg
dec
mov
movsb
pop
es
xor
dec
cmpsl
adc
or
cmp
dec
stos
mov
dec
cs
add
arpl
ja
daa
xchg
sub
fnstenv
add
lret
aaa
push
addb
mov
pop
xchg
mov
pusha
dec
test
or
mov
addl
stc
or
push
push
xor
mov
add
add
and
push
mov
pop
sarb
test
and
pop
stc
out
ja
jbe
lods
inc
jbe
lods
sbb
inc
or
and
out
push
xchg
rcrl
and
mov
xchg
mov
aad
add
or
outsb
xchg
sub
xor
cltd
pop
mov
mov
mov
movsl
cmp
loopne
insl
ljmp
aam
rorl
pop
inc
pop
xor
ss
js
idivl
xchg
sub
adc
jb
lea
mov
pop
pop
mov
push
ja
addb
pop
push
adc
cwtl
stc
mov
inc
xor
xchg
adc
imul
xchg
or
push
dec
sti
cmp
das
sbb
bound
adc
add
adc
cs
push
cmp
push
mov
push
dec
push
fisubl
pop
add
popf
outsb
mov
subl
stos
outsb
xlat
je
ret
outsb
sub
shll
cmp
lahf
iret
pop
and
inc
lret
pop
rcrb
inc
xchg
push
mov
mov
in
scas
xchg
push
adc
lcall
xchg
mov
pop
xchg
shlb
out
jbe
push
or
xor
mov
add
aam
sbb
mov
xor
and
pop
das
push
cltd
push
out
scas
push
inc
xorl
add
iret
push
arpl
call
in
push
cmp
dec
popa
mov
daa
test
addl
or
jae
out
push
mov
leave
mov
aas
dec
mov
sbb
mov
mov
xchg
in
and
repz
sbb
pop
movsb
inc
and
cmp
jg
or
and
xor
movsl
ja
jecxz
test
mov
jo
mov
xchg
mov
xorl
aam
scas
in
adc
push
sub
pop
fcomps
sbb
lods
xor
xor
jg
xor
daa
das
add
sub
sub
jnp
xchg
in
push
movsb
push
popa
jae
jle
fsts
mov
adc
mov
xchg
add
or
jmp
pop
loop
fisttpl
ss
pop
jne
sub
push
inc
push
jo
shl
adc
and
mul
scas
ss
rcr
outsb
push
mov
bound
xlat
imulb
jecxz
push
out
push
divl
testb
sub
iret
out
and
pop
es
bound
xchg
cmp
test
loop
mov
mov
inc
dec
xchg
call
jae
inc
test
in
aaa
std
push
lcall
mov
fcoml
mov
mov
add
pop
push
mov
rolb
push
push
cmp
call
push
in
add
aaa
push
xchg
repnz
sub
jle
mov
aaa
lock
and
pop
insb
dec
inc
in
ss
test
jno
ret
mov
mov
adc
fst
adc
and
xor
out
mov
cmp
sub
jl
ficoml
sub
arpl
inc
stos
and
sar
cmc
in
cld
iret
loop
sbb
sbb
fld
outsl
repnz
sub
fldcw
ja
les
lahf
das
test
scas
inc
fwait
add
call
sub
pmaxsw
sbb
add
inc
push
xchg
pop
jno
loope
sbb
movaps
add
daa
add
jecxz
in
imul
insb
addr16
xchg
xchg
test
dec
xchg
mov
adc
sub
push
loop
xchg
cwtl
test
mov
push
sar
sub
pop
daa
lods
fcoml
xor
and
bnd
inc
dec
das
test
test
iret
add
mov
cmp
jae
ret
rol
jle
add
and
push
dec
mov
adc
lret
inc
cmp
xor
sub
sbb
sbb
addr16
xchg
dec
mov
xchg
aaa
push
adc
jp
cld
xchg
dec
adc
mov
xlat
cmp
mov
fmulp
sahf
pop
out
dec
fsubrp
aam
lahf
mov
push
sub
pop
push
xor
dec
int3
adc
xor
or
and
mov
das
addr16
mov
addr16
pop
mov
sbbb
or
xchg
inc
mov
dec
repnz
out
jge
movsl
inc
and
push
xchg
popf
xchg
xchg
lahf
je
mov
mov
adc
out
loopne
push
dec
inc
dec
adcb
cmc
incl
divl
stos
negb
sbb
jnp
push
fldcw
insl
into
pop
imul
scas
and
xchg
les
mov
rcrl
imul
dec
inc
in
cltd
xchg
int3
add
xchg
stos
repnz
insl
pop
add
xorl
xor
jl
mov
movsl
add
cmp
push
mov
adc
jle
pop
das
test
add
jo
loopne
stos
aad
filds
cwtl
jl
mov
outsb
leave
mov
jle
add
fstpt
xor
inc
loopne
rorb
sbb
into
pop
add
inc
xchg
imul
pop
and
in
pushf
or
idivb
add
test
lods
adc
je
add
pop
or
outsb
scas
adc
push
inc
fs
pop
outsl
inc
mov
mov
add
imul
in
enter
sub
aad
loopne
aas
ja
mov
xor
mov
inc
push
mov
in
mov
aad
gs
inc
in
cmc
adc
add
sbb
das
and
jmp
xchg
or
ficoml
mov
xor
sbb
mov
mov
test
push
hlt
int3
or
pop
jp
movsb
cltd
inc
sbb
xchg
mov
ds
in
adcl
mov
or
push
sbb
inc
test
test
and
aas
push
sub
adc
sbb
xor
fcmove
ret
dec
jb
and
shlb
cmp
sbb
mov
shlb
jecxz
fbstp
idiv
loopne
int
das
adc
xor
dec
xlat
mov
in
push
cmp
push
out
arpl
jp
add
add
testl
pop
push
inc
jle
xchg
pusha
jbe
mov
cmp
add
out
fiadds
rolb
cmpsl
test
arpl
das
stc
xor
mov
test
xchg
outsb
cmp
decl
mov
mov
mov
inc
sub
xor
divl
sbb
xchg
dec
jle
or
pop
xchg
cld
lods
jecxz
pop
pop
adc
jmp
cmp
mov
mov
sarl
inc
out
adc
fcompl
jno
push
mov
xor
daa
adc
push
repnz
xor
sbb
add
push
inc
mov
jl
and
out
mov
push
int
sbb
cmp
repnz
dec
sbb
mov
fcom
pop
sbb
fs
cs
imul
and
pop
add
sub
repz
sub
xlat
adc
or
out
jne
rcr
mov
dec
jb
xchg
movsb
push
mov
and
push
xchg
fstpt
inc
lods
cmpl
cld
test
cmp
push
dec
aam
mov
push
adc
push
xchg
mov
push
xor
popa
scas
stos
dec
sub
or
pop
sti
adc
pop
faddl
out
jae
mov
cmp
mov
or
fsubrl
ss
xchg
dec
mov
mov
xchg
inc
cld
insl
and
mov
icebp
cmp
add
test
in
inc
or
ja
daa
sub
push
cwtl
push
jecxz
movsl
loope
add
xlat
xchg
mov
xchg
sbbb
cmpb
out
mov
push
outsb
into
mov
sbb
imul
adc
aaa
sub
cmp
lds
mov
stos
shufps
dec
mov
inc
pop
push
sub
and
cmp
movsb
adc
fs
push
and
lock
sbb
fldt
xchg
mov
push
mov
adc
sbb
sbb
cmp
dec
push
pop
shlb
jle
push
mov
nop
sub
rolb
push
sbb
aaa
sbb
repnz
lahf
clc
cmc
push
cmp
mov
popf
mov
mov
and
ds
mov
mov
pop
fwait
sub
sbb
jo
repnz
iret
adc
pop
cli
testl
sbb
xchg
add
ud0
call
loop
push
mulb
cmovbe
sub
mov
push
mov
pop
mov
xchg
jle
adc
xchg
add
dec
movsl
in
fcoml
jns
cld
and
xorb
add
testl
roll
cmp
xchg
or
jb
push
dec
pop
popf
mov
out
mov
push
pop
sub
or
int3
push
push
cmp
jmp
dec
xor
add
cmpl
les
lds
adc
mov
jle
mov
inc
mov
mov
adc
inc
cmpsb
pop
push
aaa
cmp
out
sub
sti
or
sbb
les
std
inc
jbe
xor
stos
pop
mov
pop
or
sub
mov
push
sahf
ja
mov
out
push
pop
bndstx
test
mov
in
loope
or
test
rcrb
lahf
loop
inc
mov
out
inc
inc
lea
aam
retw
leave
cmp
adc
loopne
adc
das
jo
mov
mov
mov
inc
test
dec
out
imul
movsl
sbb
and
add
adc
negl
mov
outsb
mov
ja
sbb
std
cli
cmpsl
dec
popf
lods
xlat
ds
rol
jle
mov
imul
xchg
dec
mov
mov
fwait
pop
mov
jnp
jp
je
sbb
push
mov
xchg
pop
aas
insb
sti
add
out
loope
xchg
xchg
add
arpl
inc
dec
pop
cltd
sub
test
mov
dec
pop
insb
cmp
adc
lret
stos
into
test
xchg
nop
js
xor
push
pop
lahf
push
dec
pop
das
into
push
stc
push
mov
das
xor
add
fsubr
out
mov
rcr
ja
loopne
pusha
xchg
pop
lret
push
xchg
loop
xchg
clc
mov
and
imul
aaa
xorps
sbb
adc
sbb
out
push
adc
xchg
sub
imul
sub
pop
jl
xchg
jp
add
push
daa
cs
and
mov
dec
and
mov
and
test
arpl
cmp
xchg
lcall
fidivrs
outsl
rep
sbb
xor
jnp
sub
pop
ret
xor
or
dec
sub
mov
ror
and
push
push
jb
pop
cmp
xchg
jbe
rcll
adc
mov
daa
ds
jae
mov
cmp
scas
or
ret
pop
stc
out
fwait
icebp
iret
adc
pop
stc
cs
inc
inc
push
lea
xor
jg
out
inc
loopne
and
mulps
cmp
adc
xchg
mov
or
in
mov
cmpsl
mov
imul
mov
loopne
dec
cld
xchg
test
addl
outsl
dec
adc
adcb
xchg
cmp
pop
aam
dec
das
fcoms
add
mov
push
pop
or
leave
jno
sbb
das
rolb
arpl
shrl
test
mov
scas
add
xchg
outsb
adc
lds
out
sbb
push
cmp
pop
fcmovnu
and
adcl
jle
jmp
jo
push
adc
push
mov
xchg
rclb
dec
mov
fnstenv
pop
mov
push
pusha
addr16
adc
rcll
xchg
in
jl
leave
pop
cmp
xor
mov
xor
rclb
mov
pusha
add
mov
lock
adc
imul
in
cmpsl
and
add
adc
repnz
pop
fs
dec
out
xchg
add
mov
js
data16
fucomi
push
std
fldenv
dec
cltd
adc
sarb
xlat
cmp
push
mov
pop
sbb
pop
mov
lods
xor
xchg
cmpsb
mov
lea
dec
adc
and
addl
xchg
inc
shl
inc
push
loop
and
mov
mov
cwtl
cmp
daa
fidivs
and
mov
loop
jle
cmp
testl
pop
jo
leave
cmpsl
dec
add
negl
cmc
add
outsl
sub
lods
std
add
push
sbb
aad
jnp
lret
add
push
out
test
push
xor
xlat
jecxz
sub
andb
rclb
enter
push
aam
test
cmp
add
mov
and
sub
dec
push
pop
pop
add
popf
out
int
jmp
inc
sbb
cli
lds
cltd
dec
pop
mull
jge
loop
and
in
dec
dec
pop
mov
pop
xlat
add
ret
out
mov
or
inc
dec
inc
inc
aas
lret
loope
pop
xor
leave
inc
in
es
add
loopne
pop
sub
cmp
ficoml
je
loope
mov
mov
enter
mov
adc
fs
sbb
add
and
push
xchg
inc
pop
adc
cltd
xchg
cmp
loope
sahf
jbe
jp
out
inc
mov
jne
xor
insb
mov
loope
les
xlat
pop
movl
cmp
xchg
mov
pop
in
leave
or
and
pop
jmp
sbb
leave
es
outsl
pop
xchg
es
xor
mov
cmc
loopne
dec
std
cmpsl
jl
sbb
or
and
xor
jns
xchg
xchg
lret
push
fcmovne
jle
in
add
push
push
scas
aad
sub
insb
sbb
mov
inc
addr16
sti
arpl
push
aas
addr16
and
xorl
push
sub
inc
ja
fs
jp
xchg
iret
arpl
fwait
inc
inc
aaa
adc
aaa
or
rclb
mov
jb
jle
icebp
scas
sbb
loopne
ficoml
das
ja
xor
lods
or
call
pop
sbb
push
xchg
pop
mov
int3
fwait
lcall
adc
ret
sub
leave
or
cmp
fisttpl
xchg
mov
jp
push
int3
mov
mov
inc
mov
js
xchg
lahf
mov
imul
insl
jecxz
pusha
mov
sub
das
mul
pusha
add
xor
and
dec
or
sbb
mov
lahf
add
xor
daa
add
aaa
stos
pop
iret
test
xchg
add
add
enter
adc
idiv
add
mov
xor
xlat
je
jno
nopl
push
andl
pop
pop
pop
daa
sti
je
inc
adcb
and
ss
les
adc
mov
stc
test
inc
mov
cld
inc
notb
sbb
sub
push
xor
ffree
scas
dec
bound
dec
pop
imul
lcall
sub
inc
push
dec
pusha
sub
rolb
daa
out
popa
mov
outsb
xchg
add
cmp
push
icebp
jmp
mov
mov
es
cmp
sbb
int3
and
into
mov
mov
mov
inc
and
sub
or
push
fisubrl
fsubs
cmp
inc
insl
adc
loop
push
shl
mov
adc
jmp
orl
sbb
xor
mov
lds
das
add
addl
pusha
stos
cs
into
out
mov
or
or
inc
mov
inc
xchg
xchg
jae
enter
pop
jg
pop
arpl
push
les
mov
pop
call
mov
leave
adc
jno
stc
fstpt
mov
add
jo
lret
pushf
rcrb
out
or
test
add
pop
sti
xor
out
and
push
inc
inc
xchg
jbe
adc
bnd
push
fiaddl
push
jp
sbb
sub
pop
mov
test
gs
xchg
mov
imul
pop
push
in
adc
and
push
rorb
fnstcw
mov
dec
mov
add
ret
cmp
push
loop
mov
sbb
lret
movsb
mov
xchg
dec
mov
mov
ret
bound
sti
scas
jae
popa
and
mov
data16
add
js
jae
fnstenv
orl
mov
getsec
add
sbb
test
pushf
jg
pop
mov
xchg
out
movsl
push
or
xchg
cmp
mov
push
pop
sbb
in
push
mov
push
xor
ret
mov
jnp
cwtl
sub
cmp
inc
jnp
pop
cmp
mov
jb
je
loopne
cmp
xchg
cmc
shlb
mov
mov
das
xchg
adc
in
arpl
cmp
mov
push
mov
mov
fs
mov
addl
aam
pop
mov
dec
ret
xchg
daa
push
or
aaa
daa
mov
call
pop
mov
jmp
xor
std
ret
adc
and
int
push
and
daa
lds
xchg
pop
test
jne
gs
dec
inc
je
shlb
dec
mov
mov
ds
push
imul
mov
sub
daa
jae
jg
xchg
out
lcall
xor
sbb
mov
mov
or
inc
imull
xor
pushf
loopne
pop
sub
push
xchg
cs
shll
mov
aas
add
push
bound
imul
dec
out
sbb
sbb
cmp
mov
add
dec
lea
dec
loop
push
popa
inc
sbb
xchg
push
mov
mov
lret
daa
mov
push
xchg
xchg
mov
xchg
imul
cmp
adc
aaa
arpl
aad
jbe
inc
scas
pop
mov
cmp
jne
sbb
rcrl
testl
sub
inc
lret
mov
and
rol
arpl
das
xor
sbb
inc
mov
daa
jle
mov
dec
and
jnp
pop
and
rolb
xor
iret
push
rcll
cmp
push
jg
repnz
sbb
mov
daa
mov
shrb
push
gs
movsl
mov
scas
and
imul
aaa
sub
fildl
pop
mov
push
dec
pop
imul
arpl
aaa
cmpsb
mov
mov
lea
mov
loopne
xchg
out
dec
aad
loope
push
or
push
stos
add
push
push
inc
lods
enter
icebp
int
dec
ds
adc
and
lahf
add
sbbb
icebp
fmulp
hlt
inc
sub
out
cli
cld
movsb
or
xchg
and
jl
mov
outsl
xchg
out
enter
leave
imul
std
cs
fistpl
xor
loopne
inc
push
push
lret
cmp
ljmp
xorl
jnp
push
into
xor
inc
test
jg
xor
jne
lds
inc
ja
pop
fisttpl
je
push
pop
repnz
push
sbb
and
and
test
mov
cmpsb
lods
push
jge
mov
dec
test
aaa
xchg
xor
movsl
sti
inc
or
nop
lsl
xor
mov
js
add
popa
addr16
movsl
inc
push
sbb
mov
lods
movsl
jecxz
bnd
sbb
sub
imul
add
jle
pop
add
push
mov
jecxz
into
aas
cmpsl
fcoms
or
in
in
sbb
lea
and
and
xchg
cmp
shr
daa
push
pushf
out
fistpll
sbb
dec
sahf
ss
fistps
xor
testl
nop
push
aas
test
jae
xor
or
data16
add
aas
push
mov
femms
sub
cs
xchg
or
mov
aaa
das
add
cmp
mov
rolb
or
dec
mov
cmpsl
aas
fsubl
pop
adc
push
adc
ss
adc
mov
mov
adc
movsb
imul
mov
and
decb
push
adc
test
imul
shrl
pop
mov
and
ja
or
in
movl
push
mov
lds
sbb
out
punpckhwd
fidivrl
push
dec
sbb
inc
repnz
cmovno
or
cmc
jne
adc
jae
repnz
rclb
inc
inc
xchg
mov
xchg
dec
je
sbb
out
mov
mov
std
push
stos
inc
adc
jp
xchg
lret
adc
lahf
pop
test
repnz
cmp
sbb
add
insb
popa
inc
fnstcw
mov
add
jnp
cmp
stc
pop
or
xchg
jne
sub
shl
ja
mov
adc
cmp
sbb
add
mov
daa
rol
imul
mov
inc
imul
fnstenv
in
imul
mov
mov
aas
xchg
pop
das
insb
adc
pop
push
aad
inc
adc
int3
mov
sbb
or
test
and
out
push
testb
mov
push
xor
push
push
sbb
fs
sub
ja
cmp
jg
push
adc
adc
push
lret
adc
inc
push
and
xchg
stos
pop
sub
shl
push
sub
add
inc
adc
inc
imul
add
mov
inc
or
add
push
iret
pop
adc
lcall
inc
cmp
and
sub
aaa
xor
iret
inc
and
outsl
cmp
dec
push
stos
inc
mov
rolb
xchg
and
inc
mov
lds
addr16
stos
xor
pop
cmp
pushl
lcall
or
dec
mov
adc
pop
inc
and
xchg
inc
pop
pusha
adc
lret
pop
sbb
xor
dec
rolb
pop
sbb
btr
cld
outsb
pop
xor
xchg
or
push
push
sbb
inc
sub
push
int3
push
inc
xor
ja
jnp
adc
add
fsub
pop
pop
test
shrb
sbb
dec
dec
stos
pusha
add
pop
push
test
in
daa
or
sbb
div
jbe
push
adc
inc
mul
pop
add
pop
mov
sti
xchg
notl
and
mov
cmpsl
cld
xlat
and
cmp
pop
or
popa
mov
push
and
das
mov
ss
mov
xchg
jmp
imul
add
pusha
mov
pop
add
push
add
sbb
in
sbb
aaa
and
sub
push
mov
push
lds
add
jbe
mov
cld
mov
nop
out
adc
xor
scas
mov
xchg
xchg
test
push
leave
sbbb
cmp
negb
clc
sbb
dec
inc
mov
gs
in
inc
xchg
mov
into
add
mov
dec
add
mov
sbb
add
sbb
pop
mov
les
int3
xchg
fcmovnb
outsl
dec
xend
std
push
ret
cmp
pop
jp
das
data16
cld
es
cmp
sbb
cltd
xchg
mov
pop
push
jecxz
sub
lds
daa
rclb
xchg
pop
add
cmp
push
xchg
xchg
test
mov
pop
adc
and
mov
enter
mov
andl
lea
jne
cmc
inc
jae
and
or
mov
xor
xor
sbb
push
mov
daa
sbb
push
adc
xlat
test
out
das
sti
or
jae
and
frstpm(287
pop
push
xchg
pop
inc
inc
push
ja
call
push
cld
lods
xchg
adc
cmc
jecxz
cmp
ja
jmp
sub
sbb
shlb
gs
xchg
or
sbb
inc
jae
cmp
xchg
cli
out
lods
dec
ja
or
pop
cmpsb
ja
lret
adc
test
test
xchg
fcoml
mov
xchg
movsl
iret
popa
notb
inc
mov
mov
ror
mov
mov
or
into
xchg
imul
int3
sub
xchg
sub
fmull
inc
mov
aad
test
lods
movb
outsl
hlt
or
in
mov
sub
pop
cmpsl
lods
lds
popf
adc
mov
les
mov
insb
sbb
and
dec
xor
cwtl
popf
add
aam
jp
push
iret
repnz
cmpsl
sbb
jns
aaa
mov
shl
arpl
sarb
sbb
jecxz
mov
repnz
push
je
push
xor
xchg
enter
pop
cmp
inc
adc
cmp
jbe
xchg
mov
adc
shlb
push
popa
lea
rcrb
popa
aas
das
xor
adc
ljmp
xchg
inc
outsl
das
sbb
cs
gs
pop
xor
loope
fwait
xor
pop
leave
insl
aas
pop
mov
shlb
pop
cmp
sbb
dec
stos
pop
in
addr16
pop
insb
xor
mov
dec
mov
mov
xlat
maskmovq
dec
xor
push
fildl
popa
add
fsub
roll
lods
lds
or
inc
xor
xchg
aad
xor
adc
repnz
in
adc
xchg
roll
xchg
pop
rolb
arpl
js
test
inc
je
xchg
inc
addr16
jge
inc
inc
mov
iret
xchg
ss
mov
xchg
adc
add
emms
stc
mov
pop
dec
mov
insl
push
sub
das
lea
cmc
jbe
mov
cld
popf
bound
lahf
pop
push
xchg
push
and
sbb
ss
sbb
add
mov
and
cmp
push
divl
iret
sub
lcall
mov
fistpll
fildll
mov
push
pushf
outsb
xchg
ja
cmp
jb
mov
push
into
push
das
mov
xchg
adc
pop
inc
daa
add
aad
xchg
mov
pop
shlb
mov
mov
sti
adc
inc
adc
xor
xor
rcrl
pop
es
ds
jno
pop
js
or
in
cli
jbe
ss
inc
mov
pusha
push
in
pop
pop
xor
sbb
and
dec
out
push
call
push
jae
fdiv
stos
mov
sub
mov
adc
and
test
out
cmp
and
shll
mov
int
sbb
sbb
fcmove
dec
jne
pop
pop
sbb
scas
lahf
push
notb
adc
add
xchg
lds
dec
imul
fisubrs
fsubr
and
xor
push
or
notl
or
cld
sub
mov
dec
pop
inc
xor
mov
inc
xor
sub
dec
das
fcompl
aaa
jl
nop
daa
pop
idivb
sbb
fs
cmp
syscall
divl
add
gs
das
cmp
cmp
shl
sub
dec
std
test
fdivr
xor
pop
sti
out
cmp
push
jmp
inc
inc
jno
sti
movsb
lcall
inc
and
cmpsb
daa
mov
jb
pop
cmp
mov
push
aaa
pop
xchg
aaa
dec
scas
cmp
scas
lods
iret
or
xor
pop
insl
inc
xchg
sbb
popa
andl
inc
aam
pop
popl
popa
out
leave
push
or
or
std
insl
cltd
add
sti
or
cmp
testl
inc
jle
add
pusha
test
pop
pop
pop
add
mov
inc
rorb
xor
sbb
imul
mov
dec
mov
adc
pop
and
sub
xlat
in
cs
aaa
mov
add
add
add
add
lahf
das
fwait
sbb
mov
pop
stc
test
jmp
mov
mov
dec
setne
fwait
cmp
loopne
dec
shrb
pop
add
adc
push
fwait
repnz
add
xlat
sub
mov
ljmp
das
mov
je
scas
in
mov
sbb
add
xchg
in
jnp
daa
insl
pop
sbb
sbbb
xchg
adc
mov
outsb
add
cmp
call
lret
mov
mov
sahf
adc
gs
leave
or
pop
das
in
lcall
add
fidivrl
cmp
popa
daa
pop
fwait
das
arpl
addr16
inc
div
adc
inc
cmp
fwait
in
lahf
leave
pop
negl
sbb
jp
xor
lea
sub
mov
xchg
add
pop
cmp
pop
jbe
cmp
int
sub
ss
ja
add
outsb
sub
inc
lods
adc
pop
sub
pop
out
pop
xor
pop
jae
adc
cmp
dec
push
or
sbb
push
ja
or
or
or
cmp
test
sbb
mov
sub
push
sbb
mov
xor
es
or
or
sub
ds
mov
cmp
pop
inc
pop
pop
sbb
inc
push
pop
loop
ficompl
stos
inc
sub
xchg
dec
out
sbb
cmp
push
or
mov
cmp
mov
xchg
mov
insb
add
inc
cmpsb
shr
fsubl
add
xchg
shll
xchg
movsb
xchg
std
mulb
xlat
jecxz
fadd
jp
adc
sbb
in
jae
jnp
xchg
jbe
cld
push
les
outsb
inc
daa
pop
pusha
cli
insb
pop
sbb
or
aas
notl
xor
es
out
daa
lret
in
test
jge
in
fwait
ss
into
adc
and
add
inc
add
pop
sub
lock
xor
mov
add
stc
inc
cmp
and
enter
dec
sti
mov
or
ss
adc
and
and
adcb
push
mov
ss
mov
enter
jecxz
dec
push
push
sbb
cmp
pop
xor
enter
outsb
pop
aam
pop
fstpl
sarb
xchg
test
int3
pop
xor
push
pop
push
ss
add
xor
icebp
adc
xchg
pop
fcompl
addr16
mov
cwtl
test
jne
mov
xchg
adc
cmp
pop
mov
ljmp
pop
lahf
es
push
and
into
xchg
cmc
je
adc
xor
and
push
std
inc
dec
lods
ja
ds
aas
ja
mov
incl
popl
aad
sbb
dec
push
je
lods
aaa
dec
push
scas
xlat
and
dec
xchg
xchg
push
insl
inc
lds
and
inc
aas
seta
scas
pop
push
testb
dec
lds
mov
testl
xchg
xchg
inc
popl
aad
sub
insb
push
mov
daa
dec
dec
iret
pop
mov
add
dec
ja
shll
cmp
sbb
popl
cmc
push
push
xor
xor
push
ror
test
cmpsb
push
or
push
adc
add
shlb
and
inc
push
mov
xlat
xchg
pop
or
or
and
or
cmp
xchg
aas
mov
adc
sub
test
push
sbb
aaa
stc
punpcklwd
adc
adc
rcll
mov
push
mov
push
imul
sub
enter
test
jbe
jp
addr16
mov
sbb
adc
sub
sar
xchg
adc
xlat
hlt
adc
ss
mov
xor
push
cmp
mov
mov
mov
mov
mov
push
inc
xor
jne
cmpsb
cwtl
test
mov
shlb
subl
adc
mov
into
adc
mov
jg
fcmovu
ja
sbb
mov
xchg
addl
iret
daa
jae
pop
into
pop
jg
xor
cmp
loop
or
pop
imul
adc
xor
cmp
xor
or
hlt
inc
dec
pop
inc
push
pop
test
hlt
arpl
addr16
dec
ja
orl
xchg
hlt
mov
mov
iret
fcmovnb
rcr
sub
hlt
jecxz
sti
out
dec
testl
push
push
and
pop
cmp
xor
inc
ss
dec
pop
inc
hlt
push
pop
stos
push
bound
data16
mov
lcall
scas
mov
mov
ror
jbe
out
cli
push
lock
sbb
add
lret
or
lods
scas
adc
inc
xchg
insb
push
lahf
test
jmp
arpl
loop
adc
iret
nop
aad
and
xchg
xlat
shrl
pop
cmpsb
xchg
into
push
rcl
imul
dec
or
das
imul
or
dec
push
or
repnz
and
push
sbb
dec
or
rorb
mov
mov
mov
in
ficoml
cmp
out
mov
mov
fsts
sbb
ljmp
or
xchg
divl
cmpsb
aam
out
das
ss
or
outsl
xchg
loope
jg
pusha
shll
mov
sahf
stos
icebp
mov
mov
mov
xlat
cmc
mov
ja
imul
es
sbb
mov
mov
insb
mov
add
xchg
into
sti
push
ljmp
lahf
ja
test
sti
lods
out
dec
xchg
das
inc
mov
xchg
xchg
xchg
rcl
mov
shr
sbbl
push
fisubs
pushf
jne
jne
cld
cltd
movsb
mov
add
mov
cmp
xor
xor
mov
fs
mov
dec
movl
fcoms
lock
pop
jae
push
inc
iret
xor
inc
iret
aam
pusha
mov
jne
dec
push
xchg
filds
mov
add
ret
les
and
ficoms
inc
gs
and
adc
and
clc
add
inc
jmp
jne
out
movsl
push
iret
sub
les
stos
pop
xchg
int
aaa
mov
xchg
cld
fisubs
push
subl
jmp
fadd
fmull
jo
cwtl
addr16
stos
jecxz
pop
outsl
inc
idivb
jl
xor
cmpsl
xchg
sahf
cmp
push
xchg
mov
pushl
mov
xchg
movsb
xchg
or
sbbb
mov
adc
mov
dec
test
and
ret
push
ret
std
dec
jns
pop
dec
nop
outsb
and
std
adc
ret
and
add
loopne
fmuls
outsl
insb
mov
pop
pop
pop
and
cmpsw
fwait
xlat
jp
lret
lods
shlb
iret
adc
sarl
les
xchg
or
rdmsr
outsl
in
dec
sbb
pop
popf
pushf
xlat
sbb
movsb
rolb
xchg
das
jns
mov
mov
xor
popa
ss
cltd
mov
dec
adc
ss
out
ja
aam
adc
seta
leave
push
in
je
or
sub
cmp
xlat
testl
ja
stos
fisubrs
lods
mov
dec
xchg
js
xchg
movups
push
fwait
pmulhuw
inc
sbb
dec
adcl
mov
dec
idivb
lret
inc
jb
sbb
sbb
sub
or
inc
push
pop
stos
push
popa
hlt
insl
jns
jno
dec
jne
hlt
lea
xchg
mov
mov
mov
vpaddusw
aad
hlt
in
stc
in
std
leave
cmc
add
or
add
sbb
adc
hlt
sub
and
cmp
xor
hlt
dec
pop
inc
push
pop
test
js
jo
dec
je
hlt
mov
xchg
mov
mov
mov
rcr
sub
loopne
in
clc
in
cld
enter
mov
and
push
dec
shl
pop
std
mov
notb
push
add
mov
cmp
push
int
xchg
outsb
and
sbb
fs
pushl
cmc
add
in
mov
and
cmc
mov
adc
jl
mov
ljmp
cmpsb
mov
xchg
testb
into
mov
mov
push
xchg
push
out
mov
rol
fs
pop
push
inc
ja
or
loop
push
pop
mul
ja
dec
push
lahf
insb
lret
out
inc
push
push
inc
std
das
arpl
lahf
fisubl
inc
stos
loop
xor
xor
inc
shlb
xor
rcrb
add
pop
mov
xchg
xchg
ja
push
jle
nop
stos
rcr
sub
cmpsb
add
mov
add
add
xor
es
addl
dec
iret
cmp
ss
scas
inc
xorl
xchg
lret
sub
push
mov
xchg
adc
dec
fcmovne
mov
inc
sub
lea
xchg
fsubr
lods
add
lods
jae
xchg
ljmp
inc
xchg
enter
inc
movsb
repz
in
mov
imul
cli
mov
lahf
inc
outsl
enter
pop
xchg
xlat
out
pop
mov
push
add
gs
or
mov
iret
ja
xchg
pop
xchg
push
push
xlat
cmpsl
xchg
setne
jne
lock
decb
cwtl
pop
jne
push
movsbl
cmpsb
mov
xchg
lahf
mov
adc
sahf
inc
shl
push
sbb
ds
adc
mov
das
ret
add
push
add
incb
ss
cltd
addr16
push
and
sti
js
loop
pop
push
jl
jl
inc
mov
outsl
ds
fwait
inc
xor
sbb
and
push
add
dec
push
push
cli
pop
jl
sbb
adc
pop
sbb
xchg
inc
hlt
adc
add
xchg
push
dec
dec
rcrl
gs
cltd
jge
lods
mov
stos
fnstcw
insl
pushf
movsl
ja
xchg
cmp
hlt
dec
dec
inc
pop
or
ja
jecxz
mov
mov
pop
and
inc
aaa
sbb
mov
inc
sbb
sbb
ja
cmp
fisttpl
xchg
ja
mov
adc
or
addb
xchg
stos
testb
in
and
ja
fnstsw
lds
or
jb
xor
daa
push
push
xchg
shl
aas
mov
cmpsb
xchg
and
jne
dec
aam
addr16
push
push
aaa
jbe
data16
push
or
out
xlat
or
dec
adc
imul
xchg
adc
inc
aad
outsb
mov
cmpsl
int
xchg
add
jb
push
jmp
mov
and
in
sub
scas
fwait
add
out
pop
icebp
jbe
xor
jno
mov
sbb
cmc
mov
sub
or
dec
icebp
imull
repz
je
sbb
dec
add
pop
ja
pop
xchg
lea
divl
aaa
out
jae
ret
mov
xchg
push
imull
push
jae
mov
cltd
add
mov
jmp
add
cmp
out
pop
stos
mov
xchg
or
mov
divl
push
loop
add
sti
ds
stos
adc
pop
pop
sarl
mov
sbb
out
mov
stos
mov
xchg
jg
pmaddwd
inc
mov
shlb
adc
pop
mov
test
xchg
cmp
test
sbb
enter
push
int3
pusha
movq
xchg
repnz
push
test
es
pop
mov
pop
add
xlat
inc
jnp
sbb
mov
popf
xchg
jge
xchg
into
dec
mov
hlt
and
xsha1
cmpsb
mov
xor
jge
cmpsl
add
dec
xchg
cmc
cmp
pop
std
fistpll
out
dec
mov
scas
push
pop
sub
mov
xor
cmp
or
mov
in
iret
jecxz
cs
pop
outsl
cmpsb
incb
inc
mov
fimuls
dec
dec
pusha
add
fdivrl
or
into
jbe
push
mov
pop
dec
xchg
ja
add
xchg
mov
jecxz
jg
cmp
rcl
loopne
je
add
test
add
lcall
movlhps
fdivrp
xchg
fsubs
mov
sub
lcall
ror
insl
dec
push
jg
pmulhw
sbb
xchg
mov
push
xlat
jg
test
rcll
xlat
push
fldt
cmc
cmpsl
mov
sbb
ficomps
xchg
mov
dec
inc
movsb
les
mov
push
push
pop
add
jge
pop
les
sbb
cmp
cmpl
dec
addr16
leave
mov
arpl
not
add
iret
cs
dec
dec
iret
out
and
or
mov
subl
inc
sbb
push
sub
ss
mov
shlb
xchg
lods
shll
xor
loop
pop
les
dec
loop
lods
rcll
je
mov
inc
ja
push
roll
lods
and
or
cs
xchg
adc
sahf
ss
jnp
dec
sbb
int
negl
daa
js
or
xor
mov
movq
nop
cmpsl
movsl
sub
insl
pushf
rcrl
scas
test
dec
test
push
in
and
int
movsb
push
add
xor
push
cmp
push
xor
add
dec
sub
out
xlat
sahf
adc
and
mov
xor
filds
cs
leave
sub
je
sahf
mov
mov
pop
xchg
jg
xorb
xor
jmp
repz
mov
sahf
push
adc
dec
popf
and
and
mov
or
popa
out
or
rclb
and
popf
iret
out
cmp
xlat
fsubr
inc
cs
xor
inc
mov
xorl
and
mov
ja
addr16
pop
mov
or
jg
xlat
mov
add
dec
mov
and
arpl
push
inc
mov
fwait
fs
pop
xchg
and
push
mov
iret
and
imul
and
das
popa
cmp
mov
pop
or
aaa
inc
inc
inc
mov
push
mov
adc
nop
ss
dec
popa
push
pop
es
stos
popf
jbe
out
cmpsb
push
inc
mov
ja
mov
and
movsw
pop
popf
mov
test
add
inc
or
add
mov
or
jmp
pop
cmp
fwait
test
daa
jg
ja,pn
add
sub
mov
outsl
into
pop
push
add
inc
lds
xchg
test
lcall
adc
mov
xlat
imul
add
mov
ja
mov
sbb
incb
je
adc
arpl
pop
push
aaa
lret
add
xor
outsb
mov
sub
cmp
xlat
pop
sysret
pop
test
sbb
loop
adcl
dec
test
fwait
adcl
sbb
mov
addb
insb
nop
lahf
xor
popf
pop
dec
shll
fisttpll
jecxz
test
outsl
sti
nop
out
fwait
jp
adc
adc
jecxz
jle
cmc
dec
ljmp
push
jl
loopne
ret
xor
add
lret
or
test
fcmovbe
mov
adc
lret
addl
pop
xor
pop
mov
pop
movsb
imul
mov
pop
jbe
outsb
jbe
xchg
inc
and
test
das
adc
push
and
inc
xchg
mov
pop
pop
inc
add
push
push
and
outsl
xchg
filds
and
jg
and
push
xchg
mov
adcl
adc
push
xchg
inc
loop
push
push
out
push
and
dec
push
xchg
dec
mov
or
cmc
cld
pop
lsl
mov
out
xchg
sbb
addr16
push
popl
dec
pop
mov
movsb
push
je
and
adc
add
cmc
inc
in
aad
lds
xchg
popl
adc
mov
and
push
es
testl
mov
jecxz
pop
ret
mov
adc
scas
pop
sub
pop
fistl
add
mov
xchg
mov
shlb
xchg
aad
sub
pop
cmc
fwait
add
jmp
inc
xchg
daa
add
jb
iret
xchg
outsb
pushf
ja
stos
push
roll
dec
inc
jl
mov
xor
bound
sub
pop
push
pop
int3
and
dec
mov
daa
cmpsb
and
notl
sub
in
xor
mul
sbb
negb
pop
and
lret
push
jne
mull
add
adc
in
push
pop
jl
gs
push
sbb
or
les
pop
negb
pop
ss
fwait
std
arpl
pop
leave
and
movl
je,pt
mov
hlt
shll
jno
aam
hlt
jb
xchg
nop
outsl
cmp
sbb
ret
push
sbb
adc
xor
leave
jne
mov
add
or
push
popf
or
and
dec
out
cmc
mov
and
push
pop
xchg
add
in
mov
sub
mov
out
divb
jl
jno
clc
mov
sbbl
hlt
lahf
push
xchg
aaa
test
aam
lods
cwtl
dec
adc
add
inc
subb
out
push
or
xchg
and
inc
hlt
aas
popf
mov
push
repnz
daa
rolb
sbb
xor
push
push
test
pop
jecxz
rorl
aad
mov
std
sbb
xor
jge
outsb
out
enter
xorl
sub
xor
and
js
lods
push
aam
or
leave
lea
and
jns
ja
cmovle
mov
xor
pop
add
add
ret
test
aam
outsb
xchg
hlt
dec
or
stos
mov
sbb
pop
cmpsl
xchg
arpl
rolb
or
movsl
adc
jmp
frstor
icebp
sub
negb
leave
pop
call
cmp
add
mov
jp
xor
add
inc
push
pushf
and
rorb
xor
insl
mov
jl
in
inc
jecxz
adc
testb
sti
or
cmpb
jno
push
bound
inc
pop
or
dec
stc
dec
imulb
sbb
dec
adc
push
push
addr16
mov
lret
mov
movsl
hlt
addl
lcall
sub
enter
push
in
out
arpl
out
lcall
hlt
andl
xlat
or
lock
test
pop
jnp
imul
add
frstor
sub
out
imul
addr16
fwait
test
and
imul
xchg
or
mov
dec
dec
push
bound
je
xchg
and
test
mov
or
test
jl
repnz
clc
xchg
sbb
jge
adc
out
sbb
xchg
mov
testb
pop
inc
mov
inc
data16
cmp
dec
adc
jo
push
pop
mov
push
dec
xlat
cmp
rolb
repz
pop
lahf
aaa
and
xor
push
fistl
push
outsb
in
test
cmp
out
inc
js
mov
fmulp
sub
fistps
mov
mov
out
in
sbb
cmp
mov
jp
adc
aad
sbbb
xor
das
ja
out
int
fimull
fildl
mov
push
mov
pop
xchg
aad
cltd
ss
fiadds
xor
orl
pop
dec
es
faddp
cmpsb
ja
xor
int3
jne
imul
hlt
mov
mov
cmpl
pushf
out
ds
lea
mov
cmpl
or
push
icebp
add
sbb
and
aaa
and
mov
and
jmp
adc
enter
or
ret
lea
cltd
std
fldenv
inc
xchg
push
movsb
jecxz
ret
aam
in
in
in
in
jecxz
sti
in
aas
cmp
cmp
adc
jb
aas
ja
mov
or
or
cmp
jmp
iret
cltd
cli
fldcw
je
xlat
dec
test
xchg
mov
in
in
in
jecxz
jp
sti
movsl
out
aas
ja
mov
out
push
aas
pop
sti
lcall
or
or
or
test
xchg
or
or
or
or
or
adc
and
xor
inc
cmp
or
or
sbb
xchg
cmpsl
pop
ret
mov
hlt
fadds
fcoms
fcoms
aas
jmp
lret
sub
pop
cmp
int3
pop
ja
out
jecxz
out
sub
sbb
or
sbb
sbbb
iret
push
jecxz
lret
out
xchg
movsb
push
jecxz
cmpb
fildll
or
sbb
sub
mov
sbb
arpl
push
test
xchg
in
movsb
cmc
rcr
and
dec
fsubs
je
call
fsub
mov
jecxz
test
jnp
jmp
mov
rcl
sti
in
in
in
in
in
in
in
in
in
in
in
mov
out
into
xchg
int
xor
inc
out
movsb
addr16
sti
jno
jae
jge
jg
dec
sub
dec
pop
dec
dec
dec
mov
push
negl
push
movsb
inc
mov
les
mov
loopne
loopne
aam
repz
adc
inc
addr16
lret
es
jae
xor
push
test
lods
dec
push
dec
out
jge
jg
dec
leave
es
mov
xor
scas
or
gs
test
fildl
jb
mov
add
roll
popf
inc
rcll
out
sub
jae
jge
das
daa
xlat
sub
repz
xchg
sub
jecxz
push
rcll
pop
iret
mov
inc
insl
inc
out
ja
jmp
sti
data16
fadd
fcmovnu
repz
mov
bound
icebp
sbb
rorl
adc
jecxz
out
ret
out
repz
mov
loopne
inc
jecxz
ds
cwtl
cmp
pop
stos
pusha
scas
aam
jg
dec
orb
movntq
and
les
xchg
in
in
in
and
loopne
loopne
loopne
loopne
loopne
loopne
loopne
aam
repz
pop
pop
ficoms
sbb
jp
scas
loopne
loopne
loopne
loopne
loopne
aam
pushl
dec
mov
addr16
lret
and
jae
jge
jg
dec
mov
xchg
fisubrs
xchg
add
mov
imul
imul
cmp
call
push
fsubrs
xor
inc
fsubrs
fsubs
and
cmp
xor
push
loopne
loopne
loopne
loopne
loopne
loopne
ja
ret
into
outsl
xchg
fisubrs
out
cs
stos
xchg
mov
jge
in
mov
fsubl
out
push
sti
ds
repz
lret
mov
mov
ds
and
or
cmp
es
push
and
xchg
pusha
rol
out
aam
in
in
in
in
in
in
in
in
in
jecxz
jnp
adc
cs
rep
call
aas
pop
filds
arpl
scas
or
or
or
or
sbb
mov
cltd
icebp
adc
sbb
cmp
mov
push
sahf
out
jb
fsubp
adc
sub
lret
test
mov
gs
jno
jae
jge
jg
dec
xor
dec
dec
dec
xchg
dec
mov
out
jmp
push
xchg
sbb
repz
sub
ljmp
lret
call
mov
xchg
outsb
jbe
add
mov
sub
add
mov
xor
cmpsl
push
xchg
jge
jg
dec
dec
gs
mov
push
or
mov
inc
shlb
call
ds
cmp
insl
cs
jecxz
pop
sti
enter
jno
jae
jge
sbb
jmp
push
mov
mov
add
je
xchg
loop
mov
data16
add
ret
adc
enter
pop
xchg
mov
repnz
or
cltd
or
cmp
fistpl
pop
bound
mov
movsb
ror
out
xor
dec
out
out
or
in
lret
pop
lret
dec
lret
nop
lret
mov
fbld
or
dec
cmc
and
jp
cltd
inc
and
lods
and
inc
mov
stos
out
and
cmp
xchg
out
in
xor
xchg
xchg
mov
out
in
cmc
incb
mov
pop
lret
ret
jno
jae
jge
jg
push
push
lods
lret
ss
inc
lret
jge
test
xchg
lret
movsl
mov
aad
pop
mov
jno
dec
sbb
out
es
ss
ret
fdivs
fadds
fsubs
fadds
mov
ficoms
xor
es
aas
ret
cs
ds
popf
and
pop
roll
inc
sub
pop
addb
mov
add
jge
ss
addr16
repz
add
pop
jmp
push
ljmp
jp
sahf
call
sub
imul
jno
cltd
call
stc
pop
cmc
cmp
dec
int3
pushf
jmp
lret
add
fwait
xchg
mov
loopne
sbb
jne
and
cmc
cmpsb
fcmovne
mov
imul
out
xchg
dec
fs
movsb
dec
imul
repnz
nop
sbb
xlat
cmp
cltd
imul
mov
inc
nop
clc
cltd
mov
xor
out
test
jecxz
mov
jbe
and
mov
jmp
fnstenv
arpl
fiadds
ret
inc
stc
push
fisubl
xchg
jno
jae
jge
pop
outsl
ljmp
jmp
or
mov
in
iret
roll
fbstp
ljmp
sub
xor
clc
and
cs
push
adc
xchg
dec
pop
lods
test
jecxz
xchg
imul
lods
jmp
push
out
ret
inc
dec
insb
not
and
into
test
jle
sub
jmp
or
out
mov
cmpb
rorb
adc
repz
out
and
pop
dec
ja
push
xchg
cs
pop
out
hlt
addr16
xlat
iret
lret
test
xchg
or
jae
fldt
out
sbb
jecxz
push
xchg
xchg
aas
xlat
mov
cmp
push
dec
out
inc
into
test
fisubs
cmp
sub
dec
aaa
jb
std
out
repz
xor
xchg
inc
sub
lds
ret
into
cmp
push
fidivs
and
mov
or
or
cmp
inc
mov
mov
pop
outsl
cmp
xlat
pop
sti
and
mov
pop
sbb
daa
add
popf
mov
popa
ret
out
cmp
push
ljmp
je
test
inc
inc
push
xchg
push
repz
xchg
xchg
lret
cmpsb
lret
mov
movb
and
xor
add
add
pop
mov
inc
fdivr
fdivs
fsub
std
addr16
jno
jae
stos
aaa
or
jbe
xchg
push
cmpsb
loopne
loopne
loopne
loopne
loopne
aam
ror
dec
jae
iret
jecxz
lret
sbb
mov
xor
sti
into
out
repz
mov
lret
push
lahf
cwtl
cs
clc
aad
sub
dec
push
and
add
inc
rclb
aas
xlat
arpl
xor
call
movsl
lahf
push
inc
jecxz
test
addr16
out
lret
pop
fnsave
jae
stos
bound
ds
pop
dec
stos
pop
and
ljmp
or
or
or
dec
mov
lds
movb
sub
movsb
push
ljmp
cld
pop
pop
test
push
shll
mov
cmc
mov
scas
jecxz
sbb
ret
sbb
jne
shll
out
jmp
mov
sbb
xchg
dec
push
movsl
mov
mov
or
sti
sub
cli
repz
imul
test
ret
test
mov
out
sbb
adc
xor
insb
pop
xchg
dec
les
movsl
xlat
sbb
test
push
ret
pop
jbe
xchg
mov
xor
mov
je
cs
test
je
test
xchg
pop
aas
hlt
xor
dec
xchg
and
adc
adc
xchg
in
addr16
xchg
mov
ss
data16
out
jb
inc
lret
je
inc
test
ds
popf
out
jbe
testb
or
or
inc
xchg
pusha
adc
lret
adc
xchg
aas
pop
out
pop
ds
cmp
adc
arpl
xchg
aaa
ret
notb
aad
mov
std
cmp
push
mov
addr16
jge
outsb
inc
or
test
movsb
cmp
xchg
mov
inc
xchg
addr16
and
push
in
jge
dec
dec
xchg
dec
pop
out
aam
repz
movsb
push
mov
les
test
xchg
in
pop
add
dec
in
cmc
dec
add
adc
and
xor
inc
pop
push
sbb
je
test
xchg
fsubs
aam
je
mov
pop
bound
ss
cmpsl
push
pop
test
xchg
pop
cmpsl
iret
jg
mov
loopne
loopne
loopne
loopne
loopne
xchg
push
push
and
mov
cld
push
mov
into
or
ja
xor
sbb
mov
mov
loopne
dec
push
repz
iret
xchg
ja
mov
cmp
mov
inc
jns
adc
ret
sbb
push
iret
in
cmp
sub
adcl
pop
lds
cmp
add
les
xorl
xor
dec
fnstenv
mov
xchg
sub
xchg
sbb
cltd
adc
out
clc
sbb
leave
vpsllw
or
mov
push
xlat
mov
negb
stc
int3
shll
aaa
int
pop
jmp
hlt
push
push
mov
fbld
ja,pn
xchg
mov
jg
cmpsb
mov
push
testb
cs
ret
stos
pushf
mov
pop
popa
mov
sbb
das
push
jecxz
jo
pop
leave
lods
inc
jg
add
fstpt
ror
test
sahf
jl
xchg
in
and
pusha
ret
out
ret
push
jbe
mov
into
addr16
int
in
sub
mov
lcall
jae
jge
jne
mov
jae
and
out
cmp
repz
pop
jmp
faddp
cs
or
pop
xchg
imul
sub
push
sub
xchg
ja
sbb
sub
mov
ljmp
sbb
inc
mov
in
mov
mov
out
ja
outsb
mov
fbld
lea
dec
xor
push
jnp
inc
cmpsl
addr16
mov
push
in
xor
stos
ds
leave
xchg
mov
xchg
push
ret
divl
push
jecxz
dec
xchg
xchg
push
xlat
xchg
cmpsb
or
pop
outsb
jbe
push
xchg
fwait
mov
ss
loopne
sahf
and
fcmovu
or
dec
add
adc
jb
jnp
add
push
dec
sub
repz
mov
and
push
xor
jp
sahf
ja
xor
loop
ss
fisubs
or
jg
popf
jl
into
xchg
popf
in
pop
mov
pop
xor
mov
mov
sub
mov
push
and
cs
jp
pop
mulb
sahf
jb
in
aas
cmp
fwait
addr16
mov
fucomi
rcr
fistpll
mov
ret
sub
gs
xlat
popa
neg
xor
mov
adc
clc
mov
inc
pop
iret
pop
push
jecxz
gs
cli
movl
ljmp
jecxz
jg
mov
push
shl
iret
fisttps
inc
leave
pop
xchg
fnsave
roll
ror
xchg
adc
jecxz
sub
out
and
cmp
jecxz
push
dec
ret
jae
push
mov
add
add
iret
idivl
outsb
arpl
mov
andb
xchg
popa
call
xor
jle
sahf
xchg
mov
mov
bound
out
rcl
std
pop
lds
mov
pop
mov
sbb
sbb
cmp
outsl
outsl
lods
iret
iret
daa
inc
pop
insl
push
test
add
les
cmpb
dec
cwtl
xchg
pop
xor
fbstp
out
push
sbb
int3
popf
adc
and
adc
inc
pop
mov
mov
aaa
mov
ljmp
pop
lods
and
fistps
xor
dec
pusha
fcmovbe
mov
push
jle
jns
push
jg
lock
out
and
in
jge
sub
ja
inc
ss
test
mov
int
or
mov
jnp
push
subw
xchg
jo
test
cmp
mov
jecxz
ss
push
mov
movzbl
sbb
cmp
outsl
adc
xchg
sbb
jmp
mov
inc
jnp
push
ret
adc
out
dec
xchg
andl
adc
add
out
ljmp
jne
push
mov
sahf
push
jle
mov
scas
inc
nop
cmc
mov
jmp
mov
ret
xchg
mov
mov
add
pop
std
repz
xor
into
inc
adc
mov
outsl
fwait
xor
aas
mov
cmp
fwait
ret
mov
inc
mov
dec
pop
jle
cli
jle
lcall
jp
mov
xchg
iret
adc
lahf
iret
xchg
jnp
mov
adc
insl
mov
add
pushf
ljmp
inc
xchg
adcl
inc
rcrb
scas
aam
popa
sahf
addr16
in
stos
ljmp
addl
push
inc
jle
stos
xchg
xchg
push
ficoml
mov
mov
dec
outsl
xor
scas
dec
movl
xor
inc
loop
xchg
xor
jge
inc
div
push
sahf
mov
ret
adcb
xchg
test
mov
jo
xchg
inc
mov
pop
mov
xor
lea
inc
xor
xor
fcompl
mov
mov
mov
popa
jmp
sub
adc
push
xor
test
scas
test
repz
jno
push
pop
imulb
sahf
mov
inc
and
xor
mov
fnclex
imul
sti
and
mov
ret
out
iret
ja
jno
jae
insl
iret
movhps
push
mov
add
dec
pop
sub
out
ret
fcmovnb
movsl
push
outsb
ljmp
sti
and
sub
mov
in
bound
ljmp
and
iret
push
jge
jno
mov
mov
in
dec
into
add
jl
or
test
popf
mov
xor
dec
cmpsb
cmpsl
sahf
mov
xor
mov
sub
push
xor
mov
pop
cmp
mov
aas
mov
dec
pop
arpl
mov
arpl
int
test
scas
stos
loop
sbb
mov
inc
jbe
dec
mov
mov
push
mov
pushf
fimull
addr16
out
jne
ret
mov
mov
mov
out
mov
add
ret
push
mov
lods
enter
cmp
xchg
leave
push
popl
pop
test
mov
cwtl
push
xchg
in
mov
dec
jle
mul
xchg
inc
out
daa
scas
arpl
cld
dec
xor
bound
sbb
mov
cmp
in
adc
aaa
jle
pop
mov
mov
jmp
xor
sub
aas
shrl
aas
inc
fiadds
jno
ret
xor
out
dec
xlat
jae
mov
and
inc
popf
xchg
ja
cmpsb
xchg
adc
das
fwait
shll
fsts
add
out
mov
das
adc
cmpsb
cltd
test
mov
push
ja
mov
mov
iret
das
xor
and
and
xchg
push
mov
and
xchg
push
cmp
jnp
pop
or
add
mov
xlat
lret
dec
cmp
sub
jecxz
xor
and
cmp
gs
jg
mov
xor
test
dec
ret
leave
xor
add
ret
xor
xor
mov
cmp
cmp
loopne
inc
data16
dec
sbb
or
popa
push
int
xchg
shlb
pop
enter
js
es
popa
sub
jnp
test
js
cs
push
mov
xchg
jns
dec
mov
add
mov
daa
out
data16
adc
add
xlat
loopne
fidivrs
fistpl
xor
and
and
jae
lcall
pushl
dec
mov
inc
adc
xchg
push
xchg
add
lahf
ja
aaa
fidivrs
stos
out
jo
les
dec
or
sub
ja
push
mov
push
dec
add
mov
or
mov
je
rolb
es
leave
mov
jg
mov
mov
mov
out
loop
sti
ds
pop
outsb
push
mov
ds
pop
jae
jmp
stos
xchg
cmc
mov
out
cs
sarl
jo
enter
push
mov
cmp
dec
jmp
bound
ja
movsl
ficompl
inc
dec
adc
or
sub
jb
xchg
and
and
or
jmp
mov
xor
scas
out
test
xchg
in
mov
out
gs
push
push
js
and
ds
pop
mov
fdivrp
nop
das
mov
into
lret
jecxz
xchg
mov
xchg
inc
pop
push
loopne
xchg
lds
enter
loope
dec
and
mov
aaa
sub
adc
pushf
dec
cmp
or
fiadds
ret
cli
pop
sbb
mov
push
sub
shr
cwtl
mov
stos
scas
fstp
mov
repnz
fists
cmpsl
pop
out
ja
out
mov
dec
dec
xor
sbb
cmp
pop
xchg
adc
sbb
mov
pop
leave
fcmovnbe
cmpsb
inc
ret
or
jmp
int3
xchg
and
xchg
jo
xchg
aas
cmpsb
cmp
xchg
push
inc
out
cs
movsb
jno
std
jns
nop
stos
adc
sahf
popf
sub
les
inc
xchg
ret
adc
decl
xchg
cmp
sub
mov
mov
inc
mov
in
mov
fcmovbe
mov
idiv
mov
ret
jae
mov
adc
das
jae
hlt
push
jecxz
mov
loop
fwait
out
and
adc
mov
mov
fs
int
test
sahf
inc
xlat
scas
mov
or
mov
ds
lcall
into
rolb
cmpsb
xlat
cmp
jnp
and
inc
xlat
sub
outsb
dec
xor
or
sub
mov
sbb
xor
xchg
mov
xchg
push
xchg
flds
push
mov
and
mov
popa
outsl
mov
std
lahf
iret
fcomps
ret
lcall
or
add
ja
dec
pop
cmp
sub
call
lea
fmulp
lcall
in
pop
mov
and
pop
rolb
push
dec
sub
pushf
xor
inc
sahf
adc
int
iret
xor
jnp
or
test
xchg
pop
adc
mov
sbb
mov
sub
pop
mov
xlat
sub
dec
int
pop
repz
xchg
xlat
push
dec
fnstenv
and
xchg
xlat
lea
popf
xor
push
add
sub
push
rcl
pushf
ret
sub
sub
test
loope
out
stc
in
inc
mov
mov
daa
mov
scas
lods
inc
xlat
cmp
and
fwait
in
jne
gs
push
mov
shrl
jno
aaa
int3
dec
cmp
mov
sub
pop
bound
ss
lahf
lret
fnstenv
adc
iret
and
xchg
mov
rclb
clc
cmp
aas
mov
lret
lcall
das
add
xor
js
sub
xor
popa
mov
adc
jp
scas
ret
cmp
adc
and
and
ret
dec
repz
jge
fwait
sbb
push
inc
aaa
sbb
sub
cmpsl
mov
pop
xchg
mov
dec
pusha
into
jecxz
aaa
jno
xchg
out
bound
push
and
jns
mov
fcmovnb
xchg
sub
in
sti
mov
sbbl
add
push
sub
insl
or
rcrl
enter
in
push
aaa
clc
cmp
icebp
vlddqu
clc
xchg
daa
sub
dec
std
xchg
out
push
inc
jmp
es
sub
jmp
enter
jno
mov
xchg
fistpll
in
mov
add
mov
clc
int
loopne
cld
adc
out
or
loopne
aas
loope
mov
mov
push
fstpt
push
mov
shll
mov
ror
mov
or
inc
sbb
sub
inc
movsb
fbstp
push
lahf
mov
cmp
cmp
lcall
sahf
cwtl
xchg
pusha
jns
jno
xchg
test
stc
xor
xchg
mov
ficompl
int
pop
arpl
add
dec
push
xchg
push
fildl
inc
int
pushf
ret
loope
sub
adc
xlat
or
jge
and
fbld
cmp
icebp
ds
call
push
cmpsl
or
mov
cmp
shlb
dec
and
or
jge
fisubrs
mov
dec
cmp
push
and
adc
adc
aam
push
jno
xchg
xor
shlb
jecxz
sub
cwtl
bound
in
loop
das
loopne
test
fsub
lret
pusha
xlat
jnp
insl
repz
dec
mov
test
loopne
cli
xchg
je
jecxz
std
scas
pop
mov
into
fsub
stc
icebp
xlat
aad
leave
ret
fimuls
les
into
loopne
movsl
mov
insl
fidivs
push
sahf
loop
xor
iret
aaa
out
pusha
test
sahf
push
jno
push
pusha
ja
sbb
ss
mov
pop
xchg
push
popf
or
fstpl
xor
lock
sti
sub
cmp
cmp
pop
fldt
rcr
cli
scas
enter
pop
icebp
mov
mov
icebp
dec
add
into
xor
cmp
and
pop
scas
sti
jp
mov
pop
stos
cmp
shll
shlb
xchg
mov
dec
out
cmp
cmp
outsb
aaa
js
jns
add
sarb
pop
inc
jb
or
mov
loope
test
lret
mov
test
insl
xchg
jb
xor
into
rcrb
add
mov
jle
ret
cmp
sub
mov
addl
fwait
push
jmp
insl
ja
lods
jle
rorl
cmp
mov
mov
sub
jp
push
ror
push
stc
inc
pop
mov
ja
push
jne
inc
xchg
mov
imul
xlat
rcrl
ja
in
cltd
or
stos
xchg
sub
push
sbb
cmc
add
mov
addr16
mov
sub
fistl
loope
mov
xor
cmp
sub
push
rcrl
fmuls
pushf
enter
push
cwtl
out
xchg
rorl
jmp
fcmovb
sbb
dec
sub
fmull
orl
nop
xor
in
jno
push
dec
inc
fnsave
das
stos
lds
inc
scas
sub
mov
jno
rcl
popf
popf
mov
adc
daa
mov
mov
mov
dec
cltd
pop
jno
push
lock
ss
xor
lods
loopne
insb
mov
roll
aas
mov
cld
and
int
stos
iret
and
repz
lods
xchg
xlat
sarb
jecxz
int3
sub
lret
inc
jecxz
jecxz
push
into
into
ss
outsb
push
dec
cmp
fstpt
and
rclb
mov
cmp
jno
aam
out
jnp
inc
dec
pop
mov
fwait
mov
mov
nop
xor
dec
push
es
push
jno
adc
je
iret
nop
mov
sub
xchg
dec
push
in
lock
filds
jbe
jge
mov
jbe
ja
repnz
dec
ret
loopne
jns
push
push
sub
leave
bound
mov
lcall
cmp
fmull
mov
push
mov
fdivl
fistps
mov
ror
dec
in
jle
clc
push
aaa
scas
cmp
adc
mov
scas
aaa
sub
sahf
addr16
pop
mov
rclb
lea
dec
stos
stos
pop
sub
or
mov
dec
sub
xchg
rcrl
movsl
xchg
sub
lds
mov
notb
pop
scas
in
jle
pop
dec
push
fcmovb
sbb
mov
jns
mov
pop
dec
and
push
ss
lods
into
push
shl
mov
int3
dec
shrl
cltd
jp
stos
rcr
scas
or
add
aaa
pop
ds
mov
mov
cmp
pop
xchg
jle
into
sti
jge
jno
and
inc
or
sub
jb
mov
pop
pop
xor
sbb
xchg
insb
subl
icebp
mov
jno
xchg
lds
insb
jno
test
lahf
pop
icebp
and
call
sub
inc
cmp
jb
scas
add
test
cmp
mov
into
ds
xor
scas
mov
xlat
scas
sbb
mov
test
jno
cmpsl
mov
cmp
in
pushw
test
cmp
jno
push
outsb
push
mov
push
sub
sbb
mov
fistpl
adc
scas
push
lret
fisubrs
mov
xchg
pop
lret
xchg
sti
mov
jl
mov
add
sub
inc
lret
scas
mov
dec
pop
negl
or
mov
cmp
mov
sbb
pop
addr16
xchg
adc
lcall
rcrb
cmpsb
and
das
inc
stos
pop
cs
fisttpl
push
push
push
dec
mov
into
fisubl
lcall
sbb
dec
adc
push
xchg
popa
sub
or
inc
hlt
add
xor
inc
ds
cmpsb
es
push
lods
xorb
cs
ficoml
xor
bound
es
sub
into
jg
xlat
sbb
add
fldt
push
test
mov
aad
loop
add
mov
or
mov
cmpsb
mov
imul
sbb
ret
jg
shl
dec
mov
add
xchg
or
sahf
push
ret
fildll
push
scas
testb
xlat
xor
cmp
sbb
mov
hlt
push
adc
scas
mov
mov
or
addb
stos
pop
push
and
test
xor
mov
jns
pop
insb
bound
mov
sahf
adc
shr
xlat
push
add
outsb
loop
push
push
sub
ss
mov
ljmp
mov
push
stos
inc
xchg
pop
or
mov
adc
inc
mov
shrb
adc
cmp
ja
push
adc
sbb
fistps
ret
push
popa
sahf
pop
and
bound
ret
xchg
or
or
push
stos
ljmp
gs
and
out
jecxz,pt
aad
push
mov
hlt
xchg
hlt
fisubs
rclb
hlt
incl
push
cmp
mov
pushf
xchg
push
iret
mov
ret
mov
push
mov
push
outsb
fildl
testb
les
jecxz
push
cmp
sbb
mov
cmc
mov
aas
mov
mov
fildll
test
mov
outsb
hlt
xchg
push
mov
adc
xchg
rolb
dec
xchg
out
bound
push
mov
push
mov
imul
fstps
scas
dec
or
sbb
loope
imul
add
push
jbe
inc
xlat
shl
sub
or
mov
xchg
sub
jae
adc
sahf
in
adc
outsb
rcrl
inc
fcoml
xchg
pop
xchg
in
fistl
into
push
sbb
fistps
mov
mov
pop
jecxz
lods
aas
scas
push
xchg
dec
mov
iret
mov
sbb
inc
in
hlt
into
and
push
mov
xor
femms
into
iret
sbb
fisubl
sub
pop
div
mov
fidivrs
pop
stos
or
mov
ljmp
mov
inc
dec
mov
in
daa
loop
sbb
or
iret
mov
outsb
jecxz
out
inc
ret
lahf
push
add
dec
sub
mov
pop
cmc
imul
adc
shll
stos
push
inc
push
mov
push
mov
sub
xor
inc
mov
push
lret
and
lret
fbld
scas
into
cli
cs
mov
ds
imul
mov
add
xchg
xor
sbb
pop
or
cmc
std
loop
jae
xor
mov
inc
add
mov
nop
and
xlat
add
sbb
push
adc
cmp
dec
fisubrs
mov
fistpl
scas
ret
test
mov
xchg
ficoms
adc
dec
pop
ret
push
xlat
pop
jle
imul
add
outsb
xor
lcall
pusha
add
push
push
and
mov
imul
mov
ds
xor
sub
adc
lods
mov
push
call
cs
xor
push
xor
data16
add
push
pusha
sbb
rcrb
dec
cmp
pop
xor
jae
adc
pop
stos
cs
out
push
and
mov
xlat
jo
add
push
push
sub
sbb
xor
push
in
shlb
es
sbb
mov
mov
xchg
adcb
push
or
push
push
xchg
push
inc
jns
cmp
sub
push
mov
es
and
dec
cmp
xchg
cmc
leave
jecxz
mov
fucomi
xor
sbb
push
mov
andb
mov
push
test
xor
push
and
shlb
es
push
pop
imul
leave
pop
cmp
sbb
cmpsb
sti
vmovshdup
cmp
and
adc
imul
hlt
jns
fcmovb
cmp
inc
and
mov
mov
outsb
mov
fmulp
ljmp
push
and
mov
cmp
pop
ds
int3
dec
or
xchg
popf
dec
test
les
aad
push
push
lcall
sub
adc
jg
loop
iret
outsb
push
testb
inc
push
dec
loopne
ja
stos
push
sbb
gs
or
pop
xchg
xchg
ret
pop
nop
out
ret
jns
mov
push
sahf
inc
adc
enter
pop
out
or
mov
xchg
jmp
jecxz
std
push
inc
bound
loop
fimull
mov
pop
iret
fiadds
ret
gs
out
imul
push
pop
iret
fwait
mov
std
fidivl
lcall
mov
sbb
xor
mov
adcl
push
sbbb
pop
imul
push
lea
sahf
inc
fistps
ficoml
gs
into
mov
and
filds
fiadds
mov
ja
dec
data16
lret
ret
xchg
push
pop
jnp
addl
sub
imul
xlat
ret
iret
mov
inc
mov
out
mov
cmp
arpl
neg
mov
scas
cmc
gs
lcall
inc
gs
xchg
push
push
jge
push
fidivl
jecxz
roll
loop
mov
mov
insl
imul
sbb
out
sub
subl
fisubl
or
sbb
sub
outsb
imul
sahf
not
sbb
xchg
push
lods
push
into
mov
jne
xor
sbb
mov
xlat
push
sub
push
xchg
cmp
loop
enter
push
mov
andl
scas
mov
rcrl
hlt
and
mov
pop
xchg
xchg
notl
fisubrl
xlat
mov
mov
es
lcall
cmpsb
sbb
pop
mov
jecxz
mov
ds
cmpsl
cmp
bound
cmpsb
fmull
add
mov
es
in
or
inc
dec
outsl
pop
out
ror
ljmp
mov
fmuls
sbb
cmp
scas
sbb
ds
sbb
cs
and
dec
add
adc
sbb
mov
ss
mov
out
mov
add
loop
push
mov
xchg
push
pop
ja
push
dec
jecxz
or
mov
cmp
clc
cmp
lods
push
sbb
xor
bound
in
ja
loop
gs
mov
ret
inc
loop
fiadds
sub
xchg
bound
dec
cmpsl
or
testl
jbe
sub
scas
dec
adc
adc
mov
sub
mov
inc
ss
stc
mov
and
add
adc
add
sbb
jae
sub
dec
ret
sbbl
lcall
mov
mov
sbb
xor
sbbb
push
pop
xchg
and
or
xchg
and
setae
ret
testl
mov
cmpsl
fsubrp
xor
mov
mov
fimull
push
xchg
push
mov
sbb
mov
xchg
add
xchg
adc
stos
mov
int
sbbl
lods
mov
inc
in
fcmovnbe
pop
sub
mov
push
pop
mov
js,pt
cmpsb
mov
jne
scas
add
mov
ljmp
movsl
pop
pop
lahf
mov
jecxz
addr16
xchg
adc
or
mov
pop
scas
xchg
cmpsl
xchg
ror
std
gs
pop
and
ret
add
mov
adcl
hlt
mov
sub
mov
ss
cmpsl
loop
xchg
mov
push
mov
xchg
cmp
fldt
adc
imul
or
addl
and
mov
jecxz
cmp
mov
push
ja
cmpb
pop
into
faddp
adc
imul
mov
push
inc
outsb
inc
mov
jbe
xchg
pop
xor
add
pop
out
fs
mov
iret
push
jbe
add
mov
xchg
sub
add
mov
out
mov
mov
mov
dec
lret
fidivs
dec
out
mov
dec
adc
dec
ljmp
lret
insb
gs
ret
add
rol
xlat
mov
sub
jecxz
xchg
pop
jb
imul
mov
ss
inc
and
cld
jbe
push
out
out
xor
outsb
add
and
fisttps
push
mov
push
pushf
ljmp
and
dec
mov
mov
push
iret
stos
hlt
fisttpl
faddp
addb
mov
inc
xor
mov
enter
mov
push
mov
jecxz,pt
adc
test
je
mov
dec
fucomip
rorl
lret
sub
push
push
fdivr
rcrb
ds
jg
es
sub
push
inc
and
shlb
push
cmp
es
pop
stos
add
ret
mov
or
out
mov
sub
cli
sbbb
dec
ficomps
bound
sbb
adc
dec
ss
or
mov
xchg
das
shll
sbb
push
inc
push
inc
adc
sbb
add
push
sub
adc
loope
leave
dec
or
and
push
mov
xlat
mov
pop
xchg
pushl
pop
push
push
cmp
lcall
sahf
jae
int
add
ss
inc
xchg
add
scas
cmpsb
jecxz
add
push
fcomps
into
ljmp
out
sahf
jae
stc
shl
mov
push
aas
push
dec
bound
mov
mov
repz
sub
addr16
adc
dec
test
fsubl
into
sbbl
dec
gs
cmp
add
push
jecxz
popa
or
imul
shrl
iret
or
dec
inc
xor
inc
ret
dec
jo
sahf
xlat
insb
into
fnsave
push
ret
pop
jnp
aam
loopw
mov
jge
mov
xchg
ret
or
or
inc
adcl
mov
sbb
test
push
sbb
mov
loop
fisubrs
xchg
lock
sub
bound
mov
mov
push
stos
mov
outsb
add
push
pop
inc
orb
cli
push
repz
es
out
mov
stos
cmpsb
pop
pop
jp
repz
mov
imul
inc
mov
cmp
cs
mov
loop
cmc
adcl
xor
ds
adc
sbb
mov
add
test
mov
in
idivl
sbb
out
imul
push
xchg
xlat
dec
add
fists
lcall
mov
ds
into
cmpsl
push
inc
aas
mov
mov
iret
sahf
mov
xchg
mov
and
pusha
test
inc
mov
cmpsb
lcall
or
negb
sahf
add
sub
in
cmc
cmpsl
into
add
or
mov
mov
iret
xchg
imul
and
lods
roll
dec
loop
mov
mov
mov
andl
out
cs
mov
sarl
in
add
sub
and
push
or
inc
mov
push
pop
jae,pt
les
out
jne
sahf
pop
push
mov
rcl
push
test
imul
inc
les
bound
add
ljmp
outsb
into
sub
mov
pop
iret
dec
fisttpl
mov
hlt
lea
mov
or
stos
fldt
jmp
scas
ljmp
aad
ret
push
xchg
push
arpl
gs
adcb
sub
push
pop
fildl
mov
fcomip
xchg
sbb
cmpsb
ds
mov
mov
ja
mov
xor
cmp
push
stos
xor
scas
mov
or
and
lcall
pop
les
loope
mov
xchg
xchg
shl
mov
int3
sub
movsb
push
xor
es
fiaddl
cvttps2pi
jecxz
ljmp
dec
out
push
mov
fisttpl
or
dec
pop
scas
pop
popa
sbb
outsb
xor
dec
movsl
gs
fs
or
outsb
add
mov
lcall
jg
push
mov
lret
ljmp
mov
xchg
and
dec
pop
into
mov
test
rorl
fucomi
outsb
mov
mov
xchg
movl
mov
hlt
xor
mov
sbb
jg
mov
and
mov
and
dec
imul
aad
mov
mov
int
cmp
cmp
repz
fdivrs
sub
adc
andb
fisttpl
out
jecxz
adc
ret
inc
div
loop
fcoml
std
repnz
ss
mov
imul
aam
cli
xchg
xchg
or
aas
punpckhdq
mov
push
dec
push
ficomps
stos
cmp
jmp
xor
xor
and
test
dec
shlb
es
outsb
add
repz
shl
mov
aad
add
or
ja
ficoms
aad
shlb
jle
mov
cmc
lcall
outsb
jae
adc
mov
or
push
andl
xor
jno
mov
xchg
iret
imul
sahf
ret
fbstp
xor
xchg
loope
adc
inc
mov
adc
mov
and
lods
jecxz
pop
rorb
mov
adc
mov
orl
cmpsb
mov
xchg
xchg
lods
nop
or
jle
sbbb
pminub
push
mov
jbe
xchg
push
ret
adc
mov
gs
xchg
mov
mov
mov
push
sarb
xchg
loop
stos
mov
adc
lcall
mov
mov
sbb
inc
mov
iret
add
ja
bound
xlat
xchg
lods
mov
dec
or
push
fs
adc
xor
add
adc
lcall
mov
inc
test
inc
push
outsb
adc
mov
aam
imul
bound
es
dec
mov
fisubrl
cmpsb
xor
pop
inc
mov
add
xor
mov
push
idivb
or
sub
pop
cmpsb
jmp
je
or
mov
mov
scas
out
rorl
xchg
dec
push
mov
es
sbb
sub
mov
bound
jecxz
or
sub
mov
call
pop
out
popa
push
cmp
sbb
xlat
movsb
movsb
inc
loop
mov
inc
xchg
add
sub
ret
pop
or
fimuls
push
inc
add
shr
push
jne
cmpsb
gs
pop
dec
pop
scas
aam
aas
fs
pop
and
or
mov
scas
lds
mov
cmp
popa
arpl
mov
aad
lret
outsb
jecxz
cld
sti
shll
mov
pop
mov
xor
dec
push
push
jno
cltd
jnp
add
ret
stos
xchg
and
add
outsb
ljmp
mulb
dec
push
mov
lcall
das
ljmp
push
cmc
cmpsl
outsb
fidivrs
sbb
inc
mov
ret
imul
divl
in
jecxz
ljmp
adc
pop
scas
sbb
mov
sahf
jge
cld
lcall
mov
mov
mov
iret
sub
mov
adc
fisttpll
hlt
lods
push
jecxz
xlat
mov
ljmp
daa
dec
ss
ret
inc
inc
push
ss
jne
add
fistpl
ret
xchg
ljmp
xchg
and
in
subb
push
lds
movb
xchg
sub
insb
dec
mov
xlat
jecxz
dec
fistl
xchg
pop
push
es
push
add
push
xlat
daa
subl
mov
jecxz
out
add
movsl
aad
lahf
xchg
add
mov
or
es
mov
cmp
xchg
xor
jbe,pn
lds
ret
push
es
hlt
sahf
fisttps
mov
and
mov
mov
xchg
lea
push
inc
sbb
xor
lahf
xlat
ret
pop
jp
adc
sub
das
cmpsb
fdiv
xorb
ret
mov
inc
cmp
les
pop
iret
push
imul
mov
into
and
or
loopne
fidivl
sbb
addr16
iret
or
push
inc
ja
mov
fistpl
into
jecxz
jne
or
outsb
add
add
or
int3
xor
movsl
out
shl
fimuls
pop
push
and
ficoml
les
xchg
xchg
xchg
push
dec
out
sahf
movb
ds
ds
notl
xchg
dec
mov
fbld
ret
xor
cmp
xchg
add
xchg
xchg
mov
mov
xchg
mov
ss
data16
test
add
iret
loop
outsb
xchg
mov
xchg
insb
push
sub
scas
xchg
outsb
out
enter
mov
fcmovnb
mov
xor
cmpsb
cmpsb
or
jp
mov
loop
mov
inc
pop
add
mov
sub
push
mov
lea
lods
sahf
ds
lods
ret
aad
inc
pop
jmp
jb
mov
ds
xlat
push
das
xor
popf
pop
shl
push
out
outsb
imul
push
sbb
pcmpgtw
xchg
push
leave
movsb
ss
jg
dec
push
pop
cmpb
ss
ret
cmpsl
mov
jbe
push
mov
push
push
cmpl
ret
ljmp
xor
mov
xor
pop
xlat
sub
mov
into
lret
int3
sbb
fs
sub
sbb
jno
inc
ret
push
nop
push
fcompl
jecxz
pop
pop
pop
outsb
mov
cmp
ret
lcall
ret
out
lahf
sbb
jecxz
mov
add
xchg
outsb
adc
push
movb
stos
iret
sub
jae
rcrl
fisttpl
mov
into
sub
adc
jne
fidivl
lods
gs
test
push
and
or
subb
es
xor
ja
ss
xchg
xor
push
adc
adcb
jp
or
stos
jne
mov
sahf
sub
and
push
and
and
in
idivb
mov
cwtl
in
jle,pt
push
ficompl
add
push
cs
dec
cmp
subl
std
push
call
mov
push
push
xchg
repz
mov
jp
jg
cmpsl
sbb
aaa
cli
add
xchg
or
ret
ss
cs
lcall
sbb
sub
mov
adc
in
push
mov
xchg
loop
rolb
add
mov
cli
stos
lcall
jg
push
bound
ss
adc
xchg
and
add
fcmovu
sbb
into
shrb
push
aaa
loop
push
iret
ficoms
cmpsl
lcall
mov
into
not
pop
push
mov
dec
es
out
mov
cs
cmp
aad
cmpsl
and
stos
lahf
outsb
dec
pop
jae
add
lcall
pop
and
sbb
ljmp
stos
out
or
jns
imul
scas
inc
rcrl
mov
into
aam
inc
push
loop
rol
pop
adc
mov
gs
mov
push
cmp
mov
jecxz
loopne
pop
pop
mov
mov
inc
sub
cs
ja
mov
fists
mov
or
or
cmp
aas
mov
or
testb
lcall
mov
aad
enter
mov
mov
xchg
adc
jecxz
mov
cmp
push
adc
xor
mov
cmp
test
adcb
jbe
ficomps
repnz
xchg
sub
es
inc
and
mov
fldt
ja
xchg
sbb
cli
pop
mov
push
sahf
or
inc
push
cmpsb
lds
push
push
mov
lahf
test
xchg
inc
sahf
inc
ret
push
rorb
cmpsb
xor
loop
sahf
cs
pop
shl
adc
push
mov
inc
push
cmp
adc
sahf
jnp
pop
fidivs
cwtl
mov
fistps
imul
cmp
mov
popa
inc
insl
adc
jecxz
and
nop
mov
cmc
push
sahf
mov
cmpsb
mov
pop
push
ja
push
mov
mov
fsubs
adc
mov
or
or
ret
sahf
fcoml
adc
mov
push
and
adc
or
dec
mov
xor
mov
sbb
out
rorl
iret
rolb
cs
out
ret
push
in
push
inc
pop
push
dec
mov
sarb
testb
sbb
sahf
stos
addr16
pop
scas
adc
adc
lock
inc
mov
mov
aas
jne
aaa
jge
fistpl
mov
or
cmc
sahf
xchg
cmp
in
mov
js
inc
cmc
pop
ret
push
into
and
out
lock
jmp
sahf
test
and
inc
cmc
out
mov
rcll
sub
or
out
cmp
ror
push
xchg
mov
sbb
mov
inc
mov
stos
ds
add
cmp
push
subb
xchg
mov
mov
rclb
cwtl
jl
lret
sub
cs
pop
push
int
ja
cmp
ljmp
scas
adcl
fisttpll
shr
scas
dec
xor
sub
shl
arpl
pusha
stos
sbbb
loope
rcr
xchg
xlat
mov
push
out
mov
add
jecxz
fbstp
shrl
insb
xchg
negb
sub
and
cmp
cmp
iret
es
sti
stc
xchg
jae
push
dec
dec
mov
xor
fldcw
and
mov
mov
mov
sub
jnp
xor
fcompl
push
xchg
es
es
adcb
es
mov
dec
jp
add
xor
push
inc
test
and
mov
mov
imul
mov
outsb
sbb
inc
mov
inc
aas
loop
orb
out
mov
imul
mov
mov
sub
outsb
mov
adc
push
sub
out
addl
add
mov
mov
iret
xor
mov
xchg
mov
fistl
pop
ds
idiv
inc
loop
sub
ljmp
lcall
and
lahf
adc
out
inc
or
cvtps2pd
mov
idivl
push
mov
cmp
pop
rcl
sub
jo
jne
sub
sub
ret
push
lahf
aaa
xor
inc
dec
or
adc
or
dec
mov
and
pop
mov
es
and
sub
push
hlt
and
xchg
pop
xor
scas
add
mov
add
mov
push
add
mov
add
and
rorl
mov
or
fcmovnu
lcall
mov
and
xchg
in
inc
push
gs
jmp
fiadds
cmc
sbb
mov
jbe
outsb
cmp
mov
jg
sahf
inc
cmp
adc
aam
ljmp
push
adc
imul
fistl
stos
aas
lea
xchg
lcall
in
jg
push
xor
outsb
lea
or
dec
ds
add
push
hlt
call
dec
push
mov
sbb
es
out
pop
clc
insb
divl
lods
cmc
rol
mov
into
mov
ds
cmp
lea
ret
insl
imul
cmp
adc
add
push
cwtl
test
mul
push
pushf
xor
add
push
mov
aad
in
mov
or
ljmp
sub
and
xchg
mov
push
xchg
aam
xchg
xorb
dec
push
fidivs
or
pop
mov
jne
xor
inc
xchg
dec
dec
or
rolb
sbb
mov
mulb
mov
push
push
ret
bound
ds
jg
leave
rol
into
mov
ret
cwtl
xor
fbld
jbe
pop
ud0
outsb
stos
into
and
dec
add
pop
je
fidivl
inc
lcall
jmp
add
add
ret
pop
mov
pop
lahf
fsubrp
fists
gs
sbb
bound
pusha
es
into
push
xor
lret
imul
scas
fistl
push
pop
mov
or
or
pop
adc
add
inc
mov
ret
xchg
pushf
sbb
imul
sub
add
fbld
push
cs
ret
pushf
push
fcmovnb
dec
add
push
cmpsb
xor
bound
adc
add
sbb
mov
ret
scas
xchg
sbb
movb
bound
and
stos
les
enter
xor
push
mov
sbb
adc
mov
leave
fimull
mov
into
sub
cmpsb
mov
js
inc
pand
xor
dec
xor
mov
pop
pushf
cmpsb
push
xchg
shrb
adcb
mov
mov
mov
cli
loop
test
inc
aad
jnp
xor
push
cs
loop
scas
loope
mov
outsb
aam
xchg
or
mov
mov
lret
out
sbb
cmp
sahf
loop
inc
push
mov
mov
mov
push
push
and
cmp
xchg
adc
push
or
std
or
sahf
mov
adc
mov
push
adc
or
lcall
or
jg
fiadds
pop
push
or
rcrb
inc
inc
dec
sub
add
sub
xlat
ret
inc
jno
movl
stos
inc
mov
bound
jbe
aas
inc
es
and
ret
pop
jecxz
sbb
xlat
xor
or
mov
push
or
push
push
outsb
into
push
std
decb
xchg
or
jecxz
mov
mov
push
addr16
into
ss
mov
xchg
pop
sbb
jno
mov
shlb
lret
mov
cmpsb
int3
mov
sahf
aas
into
cmpsb
mov
outsb
mov
popf
movsb
ljmp
iret
push
out
sbb
sub
adc
jecxz
mov
and
xchg
sub
push
pop
xchg
out
cmp
outsb
or
sbb
mov
outsl
or
mov
outsb
fstpt
dec
and
pop
iret
lcall
adc
ljmp
scas
je
dec
sub
sahf
xor
jg
sahf
jg
mov
imul
es
add
add
xor
push
aam
andb
mov
cmp
gs
loop
sbb
mov
push
roll
cmp
xchg
inc
sbb
shll
je
mov
cmpsb
dec
jbe
sub
ret
mov
fldt
cmpb
test
mov
cmp
or
aaa
sub
clc
mov
mov
ficoml
pusha
ljmp
xchg
dec
outsb
sub
je
pop
aad
mov
bound
cmovle
ret
xchg
push
xchg
ljmp
gs
push
add
int3
xchg
dec
mov
incb
jl
jg
push
cmp
orb
sbb
push
pop
inc
mov
call
mov
cmp
andb
xlat
cs
outsb
add
movsl
add
stos
push
push
xchg
inc
aam
dec
and
pop
add
push
pusha
mov
cmc
es
sbbb
mov
push
sub
stos
push
or
mov
adc
add
add
mov
fbstp
pop
and
ds
pop
adc
jecxz
mov
xchg
aad
lcall
enter
dec
es
js
mov
aas
inc
push
les
shrl
sbbl
out
jg
sbb
stos
xor
mov
cwtl
xchg
push
nop
testb
fisubrl
lret
lcall
jge
lahf
pop
pop
rcl
es
push
es
xchg
cmpsl
xlat
cs
and
xor
divb
jno
aaa
push
push
mov
or
iret
aaa
pop
cmp
ret
pop
adc
add
mov
inc
xchg
mov
xchg
cld
pop
push
adc
or
xlat
add
aad
dec
cmpb
dec
cld
cmpsb
dec
punpckhdq
jecxz
sbb
shlb
data16
fisubs
jg
cmp
lret
es
shll
jae
cmpsb
jg
adc
fldt
jmp
push
sbb
lods
cmpsb
inc
pop
lahf
dec
pandn
mov
adcl
iret
mov
cmc
push
iret
dec
inc
fidivrl
pop
push
push
push
xor
sbb
shll
adc
add
push
sub
xor
nop
shlb
add
xchg
into
jno
mov
add
xchg
and
mov
decb
cmpsl
lcall
mov
sti
and
shrl
ja
fldt
pop
inc
shlb
ret
jecxz
adc
fistl
inc
push
push
and
jecxz
adc
or
add
mov
mov
scas
stos
out
es
adc
data16
inc
aas
bound
mov
rorb
in
pop
loop
aam
adc
inc
insb
xor
je
fcmovne
into
jecxz
mov
mov
pop
hlt
dec
mov
xchg
adc
addr16
jno
cmp
fidivrl
mov
out
mov
push
push
das
jbe
mov
je
scas
and
inc
subl
enter
sbb
dec
pop
addl
clc
lock
in
fidivrs
push
mov
movl
out
mov
ljmp
in
xchg
sbbl
dec
dec
lock
sbb
ljmp
sub
and
jmp
push
or
sahf
out
inc
mov
mov
roll
mov
fistps
in
fcomip
imul
xor
hlt
movsb
cmpsb
fstpt
xchg
fisubl
mov
sub
mov
dec
gs
scas
es
lods
test
jne
sahf
ror
mov
jecxz
push
xlat
out
mov
cmpsl
filds
mov
push
rcll
and
ss
sahf
es
imul
cmpsb
repz
xchg
out
insl
or
sub
fidivl
push
aaa
jb
ret
ret
sahf
or
shll
xor
xchg
mov
jg
not
rorb
mov
test
and
into
inc
mov
push
or
ss
in
outsl
mov
les
mov
lcall
push
sar
les
fistpll
inc
inc
mov
dec
jmp
jp
xor
push
or
xchg
pushf
cmpsl
push
lret
dec
cmp
sub
xchg
inc
jg
fimuls
cmp
cmpl
es
les
hlt
dec
mov
shrb
add
fists
mov
inc
xor
hlt
cmp
stos
jl,pn
or
pop
cmp
inc
dec
push
mov
inc
gs
mov
mov
or
imul
add
jo
pop
test
mov
cld
orb
outsb
stos
call
gs
test
cmpsb
mov
push
mov
adc
xlat
into
mov
mov
ljmp
pop
mov
add
push
xchg
pushf
into
aad
out
sub
mov
ljmp
cmp
mov
test
adc
sub
les
xchg
mov
test
mov
ret
push
sub
jbe
or
push
lods
cs
pop
scas
push
xchg
cmpsl
ss
mov
outsb
ljmp
push
xchg
push
cmp
inc
add
push
xor
ds
iret
aas
sub
sub
adc
call
sbb
and
cmp
mov
aas
push
gs
ljmp
outsb
dec
add
mov
lret
and
mov
adc
adc
mov
stos
mov
and
lds
or
and
data16
in
sbb
mov
addr16
out
ret
js
es
loop
mov
gs
push
aam
lahf
ds
sbb
inc
mov
adc
ficoms
and
sbb
push
mov
ret
outsb
sub
sahf
aam
jno
ja
add
data16
loop
xlat
jne
sahf
xor
push
es
push
push
mov
mov
shl
hlt
iret
xchg
mov
sbb
push
adc
ds
pop
ljmp
mov
imul
andl
mov
or
xchg
mov
stos
mov
add
xchg
cwtl
ret
push
adc
aas
iret
iret
and
ficoms
and
sbb
or
cwtl
mov
repz
iret
or
dec
add
fcompl
dec
dec
mov
cmp
insb
fimuls
push
ret
mov
test
fbstp
jb
xchg
repnz
in
aad
adc
dec
bound
das
sub
lods
xor
into
pop
mov
mov
fisubs
cmp
or
sar
cmc
ror
xchg
push
push
add
jg
add
mov
xor
and
stos
xor
cmpsl
scas
inc
es
ret
and
push
adc
repz
shrb
jae
jl
mov
jmp
ficompl
add
pop
loop
xchg
pop
adc
add
sbbb
dec
push
mov
push
aam
imul
sub
push
adc
mov
mov
cld
ss
cmpsb
mov
xor
inc
push
movsb
es
lds
gs
or
ljmp
inc
loop
aad
push
andb
adc
mov
inc
inc
push
sarb
mov
and
cmp
mov
jb
test
dec
aad
push
bound
cmp
sahf
sub
gs
push
inc
push
sub
rolb
sbb
xlat
mov
cmpsb
adc
push
addr16
clc
in
ret
iret
cmc
mov
mov
pop
xlat
sub
outsb
scas
ljmp
mov
sbb
mov
push
add
popf
out
inc
lods
ss
pop
shr
ret
in
es
sbb
mov
sub
xor
sub
inc
or
xchg
jb
sbbl
jg
neg
xlat
push
loop
arpl
pop
aas
fidivs
pop
jmp
push
adc
sahf
mov
std
gs
mov
adc
xor
das
push
mov
and
xlat
mov
sahf
ds
cmpsl
bound
jnp
mov
push
jno
pop
sbb
xchg
rolb
repnz
fidivs
ror
mov
xchg
es
jmp
rcl
and
inc
mov
and
into
xor
push
mov
pop
add
outsb
ret
jno
xchg
sbb
iret
inc
and
mov
ss
jno
cmp
pop
xchg
push
and
outsb
mov
aas
rol
aam
pop
mov
cmpsb
push
jecxz
loop
lcall
bound
out
and
mov
dec
fisubl
pushf
jge
cmp
js
add
sti
adc
shrl
dec
or
lahf
sub
mov
inc
dec
jb
fiaddl
mov
xor
and
xchg
lock
rcll
es
cmp
push
scas
and
add
inc
mov
jne
loop
mov
mov
xor
xchg
xorb
pushf
enter
aas
shrb
sbb
ret
popa
cmp
inc
daa
add
xchg
scas
movsl
lcall
aam
cmpsb
aad
xor
mov
in
aas
mov
push
rcrb
fbld
gs
push
push
sub
fisubrl
push
mov
push
cmp
fdivrl
adcb
and
scas
lcall
jmp
or
or
cmpsl
sub
or
mov
sub
jg
popf
or
mov
ss
int3
xlat
orb
push
jno
mov
ret
cmp
mov
xchg
cmpsb
mov
mov
jecxz
adc
mov
lods
cmp
pop
xlat
mov
cmp
xchg
push
outsl
bound
push
scas
mov
dec
pop
and
cmove
pop
ss
dec
testl
push
into
push
imul
fldt
push
jl
outsl
adc
ds
xor
in
mov
mov
stos
sub
ror
push
das
push
out
sbb
xchg
out
cwtl
and
and
sub
jecxz
mov
pop
cmp
mov
jmp
pop
jbe
cmc
jbe
push
mov
mov
jg
xorb
pop
repz
xor
in
test
xchg
jg
xchg
mov
mov
addr16
stos
bound
pop
xor
gs
cmp
push
mov
mov
in
or
adc
sub
push
cld
into
xor
add
sbb
ja
jecxz
and
jo
jmp
icebp
cmp
jl
and
cmpsb
data16
dec
push
xchg
daa
mov
xchg
cmp
scas
push
xor
daa
xchg
jl
dec
push
fldl
fcmove
cmp
cmp
outsb
mov
mov
movsl
das
push
test
loop
imul
push
hlt
dec
push
sahf
outsb
mov
test
and
mov
push
out
and
pop
lahf
sahf
movsl
pop
mov
jecxz
cmpsb
push
movsb
jg
fucomi
add
add
es
mov
add
or
jecxz
lret
jae
mov
mov
out
dec
cli
or
fisttpl
lds
cmp
jno
xor
add
pop
lods
in
rcr
cmpsb
ljmp
orl
mov
push
adc
ret
inc
xchg
pop
xchg
test
mov
and
lret
and
cmpsb
xor
push
ret
es
lcall
or
test
mov
imul
jle
sbb
fisubrs
add
pusha
mov
mov
or
cmp
sbb
adc
dec
sub
ret
xor
test
sbb
adc
cmpsb
fidivrs
pushf
cs
xor
xchg
push
imul
inc
xchg
push
gs
and
and
mov
testb
lea
stos
cmp
add
jecxz
or
cwtl
addb
mov
loop
fldenvs
scas
pop
into
add
push
mov
adcb
sbb
xlat
add
lods
or
push
inc
nop
dec
pop
rorl
loop
xlat
pop
push
ljmp
ret
sub
sbb
cwtl
loope
stos
jbe
adc
dec
mov
mov
ljmp
mov
orb
push
out
sbb
gs
jae
mov
pop
stos
setb
add
lcall
rclb
dec
mov
ljmp
add
cmpsb
fdivs
ficoms
push
xchg
fwait
xchg
imul
or
nop
dec
adcb
sbb
cld
push
out
pop
mov
dec
or
fmull
shlb
mulb
into
xlat
hlt
sub
mov
scas
lock
xchg
stos
fidivl
out
lcall
push
push
and
mov
push
pop
xorb
pop
xor
and
lahf
push
mov
ret
xchg
test
mov
fwait
pop
shlb
adc
xchg
aad
xor
mov
sub
cmp
mov
test
jecxz
push
jg
cmp
push
dec
out
cmp
ret
add
sub
push
subb
cltd
es
mov
push
gs
push
pop
in
add
jecxz
scas
aas
into
xchg
jmp
mov
mov
pop
xlat
add
aam
push
and
xor
ja
es
sub
out
insl
ret
xor
inc
push
push
scas
repnz
into
mov
mov
add
xlat
cld
jecxz
cs
fildl
mov
jecxz
lods
adc
xorb
or
push
packuswb
inc
out
cmpsl
xor
and
xchg
mov
add
xchg
mov
cmp
ljmp
mov
loopne
dec
add
mov
lods
cmp
test
push
push
xor
mov
sub
movl
xchg
push
mov
out
adc
hlt
test
xchg
mov
add
fs
dec
pushl
mov
and
into
imul
mov
xor
push
sbb
mov
scas
or
scas
ret
sub
iret
cmp
sbb
xor
loop
xlat
ljmp
xchg
imul
push
je
mov
cmpsl
push
ja
push
and
ret
cld
ds
test
mov
mov
add
mov
ljmp
ljmp
mov
loop
int3
es
mov
add
push
adc
aam
gs
iret
pop
scas
adc
lcall
cmp
mov
rorl
push
xor
push
pusha
and
and
out
loop
lea
mov
add
xor
stos
fildll
mov
sub
push
push
ja
gs
xchg
and
repnz
inc
mov
pop
xor
dec
es
push
or
adc
sub
or
es
and
rcrl
cmp
or
pop
push
dec
dec
pop
xchg
jecxz
mov
out
push
xlat
adcb
xchg
lcall
dec
cwtl
sti
add
or
push
add
ja
sub
lods
rclb
not
ss
jbe,pn
pop
jecxz
push
jnp
fcmovu
lahf
stos
xchg
pop
outsb
push
mov
sub
mov
jmp
inc
ret
cmpsl
rcr
mov
es
andb
jl
pushf
add
sub
mov
mov
push
inc
arpl
lcall
sub
fisubrs
jnp
into
imul
lock
shlb
fcmovnbe
movsb
jle
jae
loopne
xchg
lea
ljmp
cmp
gs
lcall
adc
inc
dec
add
and
mov
pop
outsb
pushw
clc
fisubs
rcrb
ret
mov
push
fcmovbe
fiadds
sub
adc
out
or
ljmp
adc
imul
sahf
add
xchg
scas
xor
ss
xchg
std
xchg
cmpsb
sub
sahf
mov
clc
jecxz
popa
push
jge
scas
out
ds
out
bound
test
dec
cs
pop
mov
scas
mov
pop
mov
add
cs
lock
iret
xor
cmpsb
syscall
shlb
push
int
stos
and
mov
out
imul
imul
ficoms
mov
push
jo
rorb
addl
mov
push
mov
sbb
bound
aas
push
cs
jmp
cmc
imul
and
shl
insb
xchg
push
dec
iret
bound
fistps
sbb
and
stos
es
sar
ds
mov
pop
outsb
mov
dec
push
mov
pop
test
mov
or
stos
fcom
scas
or
imul
fndisi(8087
xor
lods
mov
out
ret
in
push
push
sbbb
and
notb
push
bound
add
lcall
sub
popa
push
push
out
sub
adc
pop
and
jbe
inc
ds
push
and
fisubl
xchg
into
or
ss
std
sub
push
repz
cmp
push
push
leave
sbb
mov
push
xchg
jns
xlat
iret
imul
mov
lret
dec
push
es
lock
mov
pop
rcll
mov
mov
or
or
cld
stc
aas
cmpsl
push
mov
je
sub
out
mov
add
scas
mov
sub
xchg
xchg
rolb
add
mov
imul
fcmovb
iret
daa
andb
mov
sub
sub
ja
push
push
push
cwtl
xlat
xchg
neg
es
sub
lea
shlb
xor
fcmovnbe
mov
outsb
adcb
clc
ret
aam
mov
add
les
sbb
xchg
in
es
fidivrl
movb
jecxz,pt
jbe
xorb
or
ss
xchg
push
fmull
pop
pop
lcall
pop
push
inc
testb
sub
cltd
xchg
push
or
mov
rorl
mov
out
repnz
inc
testb
inc
mov
push
push
sub
pop
or
scas
pop
inc
rcrb
mov
rclb
and
jne
sbb
mov
iret
mov
int
lcall
stos
lods
test
shll
inc
fisttpll
sbb
fiadds
xchg
sbb
movb
xlat
and
xor
aad
mov
dec
jbe
adc
sti
push
cmpsb
es
es
xchg
cmc
add
andl
xchg
stos
inc
cmp
adc
sahf
push
push
aad
fcmovbe
mov
xchg
iret
or
jecxz
cld
mov
outsb
mov
xlat
rolb
loop
int3
xor
mov
in
cmp
sbb
in
fstpt
inc
out
push
mov
add
push
mov
xchg
inc
push
fdivs
add
mov
rcrl
pop
sbb
mov
or
lcall
mov
or
sub
jg
push
mov
or
into
mov
mov
and
push
jno
adc
pop
inc
mov
sbb
mov
push
nop
xchg
fsubp
sub
loop
dec
aad
std
mov
push
jge
mov
sub
xor
cwtl
adc
bound
rcrl
dec
sbbb
inc
mov
adc
push
adc
xor
loop
xchg
lret
aam
sub
data16
into
rcl
int3
xor
stos
dec
outsl
cmp
cs
and
add
gs
cs
mov
xor
adc
adc
ss
rcrl
cltd
out
jecxz
lds
jne
and
sub
mov
sub
arpl
fisubrs
in
adc
and
lahf
mov
fisubrl
mov
addb
mov
adc
fdivrs
dec
sarl
xor
lods
mov
out
mov
sbb
mov
into
push
mov
dec
addl
pop
jecxz,pn
inc
or
imul
push
sub
repnz
fldl
in
jmp
mov
xchg
push
mov
push
add
cmp
divl
and
je
mov
aad
and
scas
pop
inc
xchg
cmc
dec
ret
into
add
add
mov
sub
sti
inc
mov
cmp
and
popf
ret
mov
es
lahf
pop
add
pop
mov
sbb
mov
ds
cmpsb
es
dec
xchg
out
shll
sub
ljmp
mov
lret
mov
cmovbe
mov
cld
stc
loop
jne
ljmp
int
xchg
fidivs
scas
dec
lcall
iret
mov
jae
lock
push
rcll
push
xlat
sub
cmp
jbe
outsb
and
fisttpl
cmp
je
cmpsb
push
lods
cmpsl
add
scas
sbb
fidivrl
mov
pop
mov
push
adc
rclb
cltd
shlb
jle
dec
pop
or
jne
outsb
mov
aad
pop
xlat
faddp
xchg
iret
mov
dec
loop
inc
push
cmp
mov
push
xchg
push
aas
faddp
subb
negb
cmpsl
es
pop
lret
dec
push
push
aaa
adc
mov
ret
mov
xchg
or
les
mov
rol
add
and
inc
mov
sub
push
pop
mov
sarb
push
push
xchg
pushf
push
and
cmp
jg
xchg
mov
push
out
mov
pop
je
repnz
test
push
xchg
imul
ds
out
pop
rclb
cmp
mov
mov
mov
icebp
lahf
fildl
push
movl
xor
fcmovnb
jns
or
jbe
into
ret
xchg
ficompl
ds
leave
inc
int3
leave
or
shl
dec
fistps
loop
je
add
push
mov
inc
ss
es
adc
loope
inc
aad
xchg
push
aas
lret
cmp
jno
loop
sbb
mov
test
ret
and
and
push
outsb
sub
push
das
js
xlat
push
sub
gs
push
pop
ret
aaa
std
leave
cs
adc
ficoml
cwtl
mov
cs
jbe
jecxz
cmp
and
outsb
jle
xchg
fsub
rol
popf
mov
scas
pop
bound
add
pop
mov
mov
dec
mov
xor
rolb
outsb
ljmp
sbb
in
inc
adc
in
jmp
aam
shlb
into
inc
or
cmc
ret
sub
ds
jg
or
push
pop
push
add
adc
or
popa
dec
add
adc
inc
pop
sahf
mov
and
add
hlt
jge
sbb
in
jecxz
loopne
xlat
imulb
movhps
ret
xor
mov
xlat
scas
sub
xlat
and
push
adc
push
mov
imul
fidivs
divl
mov
xor
push
add
loop
divl
decl
push
add
pop
ficompl
rol
aad
data16
out
adc
push
jecxz
hlt
adc
into
fimuls
pop
adc
add
fimuls
add
xlat
cmp
cmc
mov
adc
pop
xchg
mov
jbe
cmp
jl
nop
mov
pop
adc
push
add
cmpsb
pop
xchg
push
dec
or
lock
mov
fiadds
push
ja
ss
inc
or
or
loop
stos
mov
xlat
push
cmp
adc
push
add
shrb
lods
inc
mov
mov
mulb
xlat
cmp
outsb
sarl
push
add
sub
xchg
xor
sbb
mov
inc
sbb
ljmp
mov
ds
repz
add
mov
jbe,pn
push
mov
cmp
sahf
add
pcmpgtw
xchg
mov
rcr
ss
jecxz
mov
push
add
into
sbb
inc
cmpl
and
fisubl
fstpt
cmpsb
test
repnz
inc
in
sbb
in
adc
push
loop
popa
notb
sub
mov
fildl
shl
sahf
mov
rorb
dec
jp
mov
shl
ja
mov
mov
inc
jl
ret
mov
jge
out
out
je,pn
and
pop
mov
dec
mov
pop
xchg
jae
jb
in
test
adc
movsl
mov
out
mov
push
add
cld
sbb
cwtl
hlt
imul
rcl
cmpsl
insl
fnstsw
pop
xlat
hlt
inc
iret
pop
xor
sahf
dec
es
loop
pop
adc
and
ror
stc
dec
pop
orb
imul
outsl
mov
sahf
add
or
and
cld
ljmp
andb
aad
pop
jg
clc
lock
fldt
and
xor
add
push
mov
or
jl
or
pop
pop
fiadds
ret
or
outsb
jbe
cmp
mov
es
pop
jmp
push
mov
stos
pop
scas
cs
mov
mov
pop
mov
fisubrl
mov
mov
bound
repz
mov
lcall
push
mov
fcmovnbe
sahf
xchg
iret
ret
push
mov
mov
adc
xchg
hlt
iret
filds
push
mov
icebp
xchg
test
ja
and
int
push
xor
or
or
inc
dec
call
aad
mov
mov
xor
or
inc
and
ret
rorb
mov
lods
push
decb
mov
xchg
int
sti
adc
and
fisttpl
ficomps
jmp
scas
push
mov
mov
mov
inc
push
mov
inc
and
stos
pop
inc
or
das
sbb
dec
mov
or
and
or
mov
cmp
out
iret
mov
pop
mov
imul
xchg
addr16
cs
mov
push
rolb
adc
int
push
data16
cmp
adc
mov
adc
ret
mull
ret
xor
xchg
xchg
into
xlat
sub
push
les
ds
sbb
mov
loop
jmp
xlat
ficoml
fistl
sbb
pop
add
ret
mov
add
add
sahf
mov
xchg
xchg
fildl
lcall
add
sahf
andl
loop
into
mov
adc
bound
jnp
xchg
or
add
in
cmp
add
mov
ret
adc
mov
out
dec
loopne
mov
sbbb
pop
inc
jno
push
imul
jg
rcrl
sbb
and
fcomi
mov
js
push
jbe
push
sahf
cld
cmpb
jecxz
addps
push
push
xchg
nop
mov
movsb
jge
mov
adc
test
out
mov
mov
push
out
out
cmpsb
push
sahf
push
lcall
push
out
nop
xlat
ds
scas
add
enter
bound
mov
in
xchg
and
cs
fstpt
sbbb
sub
mov
ret
mov
addl
mov
insb
push
xor
mov
mov
add
lcall
ficomps
push
ret
mov
lods
out
bound
addr16
sub
sub
cmpsl
jecxz
jl
push
push
jmp
iret
or
adcl
pop
into
push
or
mov
loop
aas
push
or
push
xchg
fidivrl
mov
sti
cmpsb
and
mov
sub
xchg
cmpl
sub
cmpsb
ljmp
scas
push
stc
push
cmp
dec
pop
adc
xor
imul
mov
ljmp
inc
movsl
lahf
add
ret
bound
ja
ss
subl
aas
cmp
jecxz
mov
sbb
int3
movb
pop
out
movzwl
mov
mov
add
push
fisttps
mov
push
ss
andb
sub
mov
sub
cs
pop
pop
pop
test
cmp
push
mov
push
sahf
repnz
adc
insb
lahf
sbb
and
fimull
fisttpll
jp
push
mov
add
adc
inc
add
adc
add
fdivs
add
cmp
xchg
push
ss
xchg
mov
pop
push
cltd
imul
mov
pop
or
testl
mov
xchg
add
mov
mov
xchg
lret
cmp
dec
outsb
mov
ss
orb
add
sbbl
jp
xorb
push
push
andb
lcall
pop
push
stos
lods
dec
jb
inc
inc
divl
repnz
loopne
mull
add
inc
lret
push
xlat
leave
push
rolb
jecxz
mov
ficoml
je
mov
mov
les
lcall
mov
sub
xchg
mov
mov
stc
cmpsb
fisubrl
mov
jno
ret
dec
mov
ds
dec
jmp
mull
cmpsb
push
enter
outsb
aam
loop
and
lock
adc
shl
adc
mov
sahf
scas
mov
jg
xchg
add
cmpsb
fcmovnbe
cs
xchg
mov
std
pop
mov
outsl
ret
lods
sbb
enter
pushf
push
sbb
ja
push
fidivrs
mov
sbb
nop
and
in
je
or
mov
push
ljmp
jne
mov
xchg
int3
movd
or
mov
data16
xchg
adc
dec
data16
test
mov
push
je
add
cmpsb
xlat
ljmp
mov
cmc
pop
ret
bound
cmp
pop
jecxz
movl
bound
stos
out
sub
cmp
mov
cld
mov
mov
sti
mov
lret
ss
inc
mov
xchg
lcall
testb
enter
icebp
add
imul
sub
add
push
mov
fnstsw
mov
add
stos
inc
inc
push
decl
pop
das
add
loop
jbe
shrb
cmp
sub
sub
outsb
sahf
repnz
mov
je
lcall
cmpsb
xchg
dec
mov
mov
push
xlat
adcb
lcall
loop
cmpb
mov
cmp
jne
inc
sub
ffreep
ljmp
sub
gs
sbb
adc
mov
inc
add
mov
je
mov
mov
insb
cmp
push
addb
pop
decb
clc
imul
mov
mov
xorb
cmp
cmc
add
loop
mov
pop
inc
es
or
cmc
outsb
push
mov
mov
push
test
sbb
stos
movb
xchg
dec
add
pusha
push
mov
into
sbb
jg
scas
xlat
std
aam
sub
rcr
mov
jno
iret
mov
imul
inc
dec
scas
and
sbb
outsb
or
je
cmp
or
ret
push
mov
shlb
popa
jno
jo
adc
dec
xor
mov
sub
dec
sub
inc
mov
lret
imul
iret
jecxz
xor
scas
dec
mov
sub
push
push
xchg
es
push
mov
out
and
aad
mov
lcall
ds
add
push
aas
adc
xor
sbb
add
aad
push
pop
xchg
xchg
or
cmpsb
loop
jecxz
pop
out
into
cmp
ss
cmpsl
ss
jmp
stc
hlt
addb
and
add
xchg
ficoms
and
xchg
xchg
push
into
cs
xlat
xchg
adcb
xchg
ljmp
fisttpl
lret
inc
es
sub
jg
nop
cmp
dec
xchg
stos
es
and
xchg
xlat
imul
imul
imul
adc
cmc
pop
inc
xchg
and
fcoml
mov
pop
ret
fisubl
xchg
cmc
pop
push
push
cmp
push
pop
xor
sahf
add
sahf
std
cmp
mov
push
cmp
sarb
insl
mov
jns
pop
push
lret
jbe
pop
fidivrl
add
inc
push
fistpll
mov
cmpsb
lods
test
rclb
jmp
jne
xor
mov
xlat
fdivs
inc
push
mov
add
fldcw
mov
xor
test
scas
ds
push
xchg
mov
repz
push
push
fdivrs
pop
js
roll
push
and
push
push
gs
popf
xchg
xor
ss
push
sahf
mov
cmp
and
addr16
repnz
mov
xchg
ds
in
sub
into
inc
push
jnp
jno
shlb
push
out
push
adc
popa
sahf
pop
bound
ret
pop
mov
dec
mov
into
lret
push
sub
ret
pop
mov
add
sub
daa
stc
cmpsb
aas
sub
push
cmpsl
arpl
adc
mov
pop
mov
pop
dec
mov
adc
adc
bound
inc
xchg
or
or
out
into
pop
push
mov
stos
imul
push
xchg
cmpsb
jecxz
pop
add
aam
imul
mulb
stos
push
es
out
mov
mov
stos
pop
inc
cs
ss
mov
ds
cmpb
mov
cs
sbb
rcl
gs
mov
pop
ss
iret
shr
add
adc
mov
sbb
mov
xlat
data16
out
push
mov
es
mov
mov
insb
mov
mov
or
dec
aam
push
inc
fimuls
cmp
mov
scas
js
roll
sbb
ffreep
filds
stos
in
push
ret
and
mov
dec
and
sarb
fistps
aam
jmp
adc
sbb
ljmp
out
lods
iret
out
xor
mov
sbb
xor
mov
adc
xchg
ficoms
xchg
scas
or
lea
test
adc
push
enter
int3
aam
push
xchg
inc
dec
xor
incl
enter
ret
mov
fstl
cmpsl
faddp
insl
sti
xchg
into
les
ds
hlt
inc
push
sub
xchg
cmp
cmp
scas
mov
xor
or
mov
mov
sarl
into
stos
ret
mov
insb
outsb
scas
dec
push
jmp
or
sbb
cmpsl
dec
mov
out
out
sub
cmp
cmc
xchg
cmpsb
out
ljmp
mov
int3
cmp
xlat
adc
lock
lret
jbe
je
jecxz
nop
orb
and
xchg
mulps
mov
in
fs
xchg
scas
test
or
mov
hlt
lcall
out
jbe
fcmovb
inc
gs
mov
aad
xor
test
scas
cmpsb
push
out
ficomps
jecxz
shl
lock
rolb
push
sub
and
mov
push
jo
outsb
gs
ret
shrl
mov
sahf
xor
scas
orb
fsubl
sub
ja
scas
mov
push
push
xchg
ss
mov
les
or
or
mov
adc
jmp
push
mov
push
ja
mov
lahf
adc
push
or
mov
adc
mov
mov
mov
ret
push
fisttpl
mov
xchg
lret
push
add
leave
or
inc
adc
mov
pusha
cmp
movsl
push
out
repnz
mov
hlt
dec
push
cmpsb
cmpsl
push
fidivrs
cmpsl
mov
dec
mov
mov
cmc
xchg
mov
pop
xchg
stos
adc
xlat
sahf
inc
stos
ljmp
pop
add
xchg
push
inc
scas
cmc
xor
cmpsb
mov
out
pop
jbe
cmp
out
mov
and
xor
jecxz
xlat
push
int
mov
inc
lds
pop
daa
hlt
in
push
jecxz
sahf
mov
into
les
addr16
pop
pop
dec
ficoml
inc
cmpsb
stos
push
push
mov
sub
out
fadd
shrl
jns
mov
adc
pop
adc
sub
cwtl
loop
pop
cmc
inc
out
ds
scas
inc
dec
or
add
mov
mov
push
cs
cmp
call
xlat
aad
cmpl
jle
cmp
push
shll
loopne
push
add
and
in
add
mov
shll
dec
or
in
ret
mov
mov
ds
xchg
into
pop
inc
dec
mov
push
aad
stos
push
push
add
lcall
mov
data16
xor
cmp
ds
or
es
sbb
push
add
push
call
lahf
mov
das
and
xchg
cwtl
mov
mov
movsb
cmp
push
or
dec
xor
roll
ds
lods
ret
mov
out
loop
xorb
xchg
mov
push
cmp
rorl
xor
cli
fbld
sahf
push
out
cmpsl
push
adc
out
xlat
lahf
outsb
test
xchg
pop
mov
mov
ret
xchg
mov
lcall
nop
xchg
filds
pop
lock
sbb
mov
nop
push
adc
movsl
outsb
xchg
in
sub
dec
mov
and
addr16
mov
cmpb
fbstp
sub
lret
adcl
jecxz
xchg
jae
iret
loopne
xchg
push
pop
rolb
in
xchg
bound
xchg
ret
hlt
rcl
sbb
lcall
fildl
mov
pop
ret
stos
int3
shlb
inc
or
outsb
xlat
iret
sbbb
push
push
jmp
mov
sub
hlt
or
into
rolb
mov
adc
dec
outsb
mov
ss
xor
ss
mov
sub
fcomip
shrl
xchg
test
aaa
call
xchg
lcall
mov
dec
mov
loop
test
xchg
add
add
stos
xlat
adcl
jbe
push
pop
es
push
or
add
flds
add
loop
and
sub
out
movsl
add
xlat
mov
or
xchg
sub
fadds
push
stos
ds
xlat
add
xchg
lods
xchg
cs
les
inc
ret
dec
inc
sub
and
push
add
pop
sub
testl
les
push
ss
or
add
mov
jbe
movsl
ds
mov
xchg
xchg
ja
inc
xor
pop
inc
psubsb
pop
bound
xchg
mov
add
into
mov
sbb
inc
stos
sub
aam
push
add
cmpsb
xor
mulb
rorl
xchg
es
push
in
mov
push
divl
mov
inc
loope
push
adc
loop
in
push
pop
das
push
push
subb
ss
cmp
mov
push
adc
push
xchg
lds
fisttps
imul
rorb
mov
mov
and
mov
into
xchg
sti
vpcmpeqb
mov
cmpsl
stos
cmpsb
jecxz
jecxz
pop
sub
xlat
or
inc
scas
cmp
dec
xchg
mov
push
mov
repz
xlat
mov
ret
ret
sub
dec
and
sahf
sub
dec
lahf
mov
jecxz
xorb
es
fmull
mov
les
rcrl
pop
jg
add
sub
movsb
ret
mov
cmp
sub
jne
out
push
push
xchg
jne
xor
xor
xchg
mov
adc
jne
mov
pushf
mov
idivl
ss
out
inc
iret
aad
pop
push
cs
adc
mov
testb
or
out
push
or
xor
loop
mov
shrb
xchg
push
gs
push
and
xor
cmpsb
push
and
inc
and
adc
inc
icebp
add
sub
jp
xchg
cmpl
fistl
mov
xlat
add
subb
mov
pop
lcall
push
push
lods
mov
outsb
stos
lahf
or
push
add
push
mov
jae
dec
adc
add
hlt
mov
push
clc
aam
mov
and
cmpsb
mov
add
adc
xchg
sahf
xchg
rclb
mov
out
xlat
push
aad
cld
cs
rorl
fidivrs
mov
out
in
dec
dec
pop
mov
inc
fstl
cmpsl
inc
insl
cmp
push
jb
shrl
push
sub
sbb
ljmp
mov
xor
inc
lods
icebp
cmp
and
ds
rorl
mov
outsb
mov
out
push
push
dec
inc
xchg
jg
mov
xor
add
pop
jno
mov
ss
mov
xchg
mov
es
dec
mov
lcall
test
ret
cmp
ds
and
push
sbb
and
push
mov
pop
test
pop
into
rorl
mov
mov
pop
pop
hlt
xchg
mov
xchg
xor
sarl
xor
sbbl
enter
cmc
stos
fisttps
aad
sbb
dec
sbb
fldt
pusha
sbb
ds
out
adc
or
mov
pop
loop
adc
aam
mov
outsb
stos
cmc
xchg
orb
rorl
loope
xor
push
inc
push
xor
loopne
mov
cmp
cmp
sbb
inc
sbb
nop
mov
mov
iret
mov
sahf
imul
xchg
in
cmp
das
fistpll
and
pop
fs
push
lock
out
into
push
imul
cmp
cmc
jge
sub
mov
xor
mov
mov
push
test
dec
xor
ret
push
jae
xchg
dec
xlat
aad
xchg
gs
test
mov
pop
mov
push
inc
pop
cmp
jno
ja
mov
mov
inc
mov
js
xchg
push
sub
shll
loop
xor
icebp
sbb
pop
jae
out
mov
push
pop
jg
add
bound
mov
add
add
sbb
sbb
loopne
jecxz
jl
fcmovb
xchg
mov
xchg
mov
mov
aam
es
push
add
lcall
fbstp
sub
pop
mov
sahf
or
dec
pop
jne
push
push
cmp
push
lcall
sub
mov
and
jge
push
push
jbe
sub
outsb
dec
rcl
or
sub
rolb
adc
mov
add
addb
mov
out
sub
inc
rol
ljmp
imulb
lods
mov
subb
mov
xlat
mov
sub
xlat
data16
mov
mov
divb
stos
ss
cmp
push
sub
fstl
out
push
dec
pusha
inc
in
mov
fninit
xor
push
ret
lods
add
cmpsb
aam
bound
imul
flds
push
ficoml
push
fimuls
into
mov
cmpb
push
cmpsb
roll
xchg
mov
push
rcrb
notb
cwtl
fld
je
stos
fsubrl
xchg
cli
push
lahf
add
es
mov
and
adc
fiadds
rcrb
stos
xchg
mov
xchg
mov
xchg
jecxz
lcall
jae
mov
push
cmp
inc
cmc
sbb
sbb
mov
dec
xlat
and
adc
inc
adc
or
sub
mov
sub
sahf
jecxz,pt
dec
xchg
aaa
xchg
leave
inc
push
lods
lcall
mov
ja
dec
lea
mov
rclb
imul
xor
cmpsl
lret
sahf
pop
sbb
add
sbb
ds
arpl
call
mov
es
and
mov
pop
sahf
in
cli
lcall
ret
imul
push
dec
adc
add
loop
sbbb
ss
inc
cmpsl
mov
mov
into
ret
push
mov
out
scas
call
fildl
push
cmp
das
sub
lods
mov
mov
mov
cmp
or
cli
cmc
enter
cmc
dec
rcrb
out
lcall
adc
stc
push
push
xor
dec
mov
cmpsl
ret
or
and
pop
adcb
xor
cmpsb
push
or
jno
and
cmp
int3
inc
adc
aaa
cmp
pop
ss
testb
xor
adc
pop
xor
arpl
or
or
add
sahf
or
mov
jne
rcrb
push
aad
es
imul
iret
cmp
xor
mov
or
push
pushf
out
imul
cmpsb
into
data16
mov
adc
jecxz
xchg
ljmp
push
je
xchg
inc
push
mov
xchg
mov
sub
sbb
jmp
adc
adc
into
lcall
pop
xor
jg
btrl
push
push
xor
or
test
punpckldq
mov
loopne
mov
cs
pop
sahf
push
ffreep
lds
xchg
xor
dec
outsb
scas
dec
pop
push
imul
adc
inc
aad
dec
je
or
sub
ss
andl
mov
fldt
jmp
call
shlb
push
or
push
out
fidivl
test
xchg
in
gs
mov
jne
mov
cwtl
mov
aad
shll
xchg
stos
cli
push
sbb
dec
mov
jg
and
hlt
pop
mov
ret
push
cmpsl
fildl
imul
rol
cmpsl
scas
inc
in
adc
mov
fmuls
gs
into
dec
fcmovb
shll
sahf
adc
fisttps
ss
test
sarl
xlat
push
or
adc
jmp
fcmovnu
xchg
push
xchg
add
fimuls
movsl
orb
loop
add
into
sahf
mov
enter
iret
inc
jno
test
fidivl
ret
mov
adc
sub
cmp
aam
std
sbb
ss
mov
es
ret
push
es
push
mov
adc
fidivs
pop
push
stos
xchg
sti
mov
xchg
addr16
scas
lods
mov
push
fimuls
ror
mov
sbb
sbb
mov
setp
js
and
add
pop
or
push
aaa
dec
cmp
xchg
addl
sub
mov
lods
xchg
sub
and
inc
and
jbe
fldt
enter
cmc
loop
lret
add
scas
mov
in
dec
jge
jbe
mov
pop
pop
loop
aad
cmpsl
out
inc
and
pop
shlb
inc
xlat
pushf
push
push
sbb
pop
ret
mov
cs
fisubrl
out
mov
mov
and
into
pop
pop
mov
mov
bound
pop
mov
xor
cs
fistpll
jae
push
outsb
loop
scas
xlat
mov
sbb
push
mov
aam
jns
push
jae
push
and
fisubs
enter
imul
push
mov
xlat
into
ss
in
es
fisubs
mov
out
pop
sub
rcll
pop
or
jecxz
mov
inc
cli
add
fildl
adc
mov
fmull
je
push
lahf
outsb
ljmp
adc
xlat
add
mov
in
stos
xchg
icebp
insl
lret
aaa
add
xchg
loop
add
mov
mov
ficompl
bound
cmpsl
lret
push
mov
fdivl
push
mov
mov
add
fnstsw
xor
ret
out
inc
lahf
scas
iret
mov
sarl
out
jg
in
inc
jecxz
xor
lret
sub
loop
imul
adc
out
sub
mov
ret
lcall
xlat
adc
loop
fisubl
clc
cs
loop
lcall
into
scas
leave
je
fcmovu
into
ss
xor
iret
das
sub
mov
add
mov
aad
out
orb
stc
dec
cmp
cld
lcall
aam
xor
test
cli
or
test
inc
push
pop
dec
push
xchg
mov
jo
xor
push
adc
push
test
pop
out
pop
pop
xchg
mov
lahf
mov
mov
and
cmpsb
loopne
add
add
cmp
mov
xchg
into
push
ret
push
mov
mov
test
orb
dec
out
push
adc
adc
outsb
dec
in
inc
clc
aaa
xchg
stos
je
lea
in
mov
mov
and
or
into
jb
jne
pop
push
sbb
xlat
lcall
xor
stos
ds
cmc
xor
cs
sbb
cltd
ss
jmp
mov
fst
ljmp
mov
ret
lret
xor
and
pushl
or
mov
cltd
iret
bound
jnp
mov
addb
mov
out
cli
jne,pn
out
xchg
or
fisttps
jo
pop
cmpsb
adc
xchg
leave
push
cmpl
pop
sbb
push
dec
out
xor
movsl
mov
push
mov
outsb
or
ret
xchg
mov
inc
jb
ret
scas
jbe
mov
and
popf
push
push
push
xchg
imul
mov
or
jne
sub
sarb
mov
mov
popf
test
gs
jbe
outsb
pop
data16
sub
pop
movsl
addb
xlat
fcmovnu
mov
add
ret
sti
aas
and
mov
outsb
sub
ja
push
into
mov
lock
dec
push
and
orb
mov
enter
cmpsb
hlt
jo
ret
mov
ss
gs
enter
xchg
cmpsb
cs
mov
sti
mov
dec
imul
scas
mov
fbstp
jge
into
cmpsl
sbb
mov
mov
xchg
xor
lahf
cmp
push
pop
mov
sub
fldenv
mov
push
xchg
inc
rcrb
movl
push
ljmp
cmc
outsl
add
nop
sbb
cmp
or
jne
xor
xchg
jae
xchg
sub
xchg
jbe
cmpsb
pop
ret
adc
push
iret
into
mov
push
or
test
scas
sbbb
cld
add
fisubrs
iret
and
sbb
ljmp
fcmovb
xchg
sahf
inc
ds
imul
or
in
outsl
sub
ret
push
xor
fiaddl
popl
scas
cmc
xor
loop
xor
add
jecxz
pop
iret
or
ret
jo
jb
mov
subb
or
scas
or
mov
ret
add
inc
scas
xchg
jmp
repz
lcall
inc
aam
mov
and
cmp
imul
jg
and
es
sbb
enter
iret
pop
xorb
push
xor
fimull
sbb
xchg
push
mov
push
adc
imul
adc
jecxz
mov
or
stos
mul
push
mov
mov
pop
ret
cli
hlt
mov
mov
shll
sub
pop
into
idivb
add
xchg
mov
out
mov
lock
es
push
push
mov
fistps
cmp
fisttpl
addr16
movsb
xlat
sub
push
ret
sub
adc
call
ret
add
xchg
subb
clc
call
iret
loop
inc
insb
push
rorb
std
sbb
leave
testl
jecxz
loopne
push
cmp
jbe
mov
sub
push
add
mov
mov
pop
xchg
mov
push
and
pop
sub
out
push
mov
pop
xchg
xchg
int
icebp
int3
loop
js
imul
xlat
inc
stos
sbb
adc
out
outsb
scas
inc
mov
pop
mov
add
idivb
pop
mov
ss
push
push
into
mov
and
inc
repnz
je
sahf
add
or
mov
rolb
or
cmc
iret
ficoml
ds
fnstsw
stos
cmpsb
ret
pop
rcrb
cmp
mov
out
roll
std
es
sbb
das
ss
push
pop
push
cmp
xchg
cmp
imul
cmc
cmp
les
inc
gs
jmp
fisubrs
iret
aas
dec
int3
dec
mov
mov
ljmp
into
xlat
dec
mov
into
mov
les
loope
mov
dec
xchg
xor
outsl
fisttpl
push
jecxz
out
pop
imul
bound
xchg
ret
and
shl
push
es
mov
push
or
and
push
push
mov
out
shlb
ss
push
xor
stc
push
icebp
movsb
bound
mov
lcall
sahf
dec
sub
ljmp
xchg
mov
pop
push
addb
fbstp
or
pop
mov
add
xlat
cmp
lock
fwait
lods
fisttpl
lcall
and
pop
mov
xchg
adc
es
mov
pop
push
xchg
and
mov
sbb
mov
pop
stos
into
scas
cmp
push
sub
add
sub
decl
xchg
in
pop
pop
sbb
pop
or
loope
mov
dec
xlat
ds
adc
loop
fidivrs
shll
mov
mov
or
ret
push
mov
or
fisubrl
fcmovnb
test
in
out
jmp
rolb
mov
ffreep
add
mov
mov
loop
inc
sahf
xchg
lcall
int
test
mov
push
add
or
iret
xor
int3
push
stos
pop
pop
cmp
ficoms
cmp
pop
push
setbe
add
sahf
xor
jl
cmc
cmpsb
push
adc
rcrb
inc
xchg
out
xlat
std
pop
xchg
stos
sahf
fidivrl
popf
bound
lcall
sbb
push
mov
add
push
mov
cmpsb
push
push
cmp
sub
hlt
pop
fbld
push
rolb
sahf
cs
add
inc
fimull
push
shll
fidivs
cmp
mov
sub
pop
mov
push
cmpsb
gs
push
fistps
into
mov
es
xor
in
test
lcall
sub
inc
fidivrs
movsl
jmp
push
sahf
inc
out
push
or
mov
js
iret
jnp
mov
orb
jnp
jecxz
repnz
pop
and
mov
push
ret
shrb
xchg
adc
dec
adc
bound
pop
mov
mov
imull
mov
dec
push
adc
imul
into
xlat
ss
faddl
cmpb
fisttpl
push
dec
stos
add
mov
mov
mov
idiv
out
lahf
sub
roll
mov
cmp
andps
xor
lock
cmpb
cld
cmc
cmc
push
scas
shrl
fildl
sub
adc
movsl
and
mov
dec
pop
add
mov
sub
jle
cmc
or
pop
xor
lods
pop
mov
pop
mov
or
push
fisubl
lock
xor
push
push
fisttps
cmp
aas
mov
add
divb
es
lods
push
push
and
imulb
push
sahf
mov
adc
pop
sbb
push
out
push
insb
ss
loop
lahf
roll
xor
jbe
mov
rcr
stos
push
mov
ljmp
sub
xlat
jne
stos
xor
imul
jne,pn
jecxz
bound
scas
into
xor
ret
or
fsubrl
subb
in
movsl
fimuls
xlat
mov
lds
push
outsb
mov
dec
cs
mov
pop
ret
ss
mov
push
testl
push
lock
ja
cmpsb
addr16
jge
add
ss
xor
imul
mov
xlat
cs
movsb
dec
xlat
ljmp
sahf
lcall
adcl
stos
or
sub
or
xchg
int3
andb
adc
aad
xchg
sub
bound
jg
cmp
mov
push
bound
loop
dec
push
jecxz
test
sub
test
or
mov
cltd
inc
inc
mov
mov
jne
stos
ficoml
ds
bound
sbb
xchg
add
loop
shrb
lret
cmp
stos
sub
push
ret
push
push
push
push
ljmp
stos
data16
mov
cld
addb
xchg
bound
mov
pop
adc
xchg
test
notb
bound
out
xchg
mov
pop
fisubrl
xor
pop
out
add
cs
mov
scas
mov
lahf
mov
out
movsb
out
cs
loop
jg
push
xchg
mov
adc
cmp
xor
jecxz
sarb
lods
jp
dec
faddl
inc
dec
stos
lret
or
adc
ret
push
pop
outsb
xlat
loopne
ss
add
xchg
add
loop
xchg
pop
xor
out
push
push
gs
xchg
sti
fisubrl
movsl
sub
inc
xchg
lcall
into
in
sbb
push
ljmp
push
repnz
nop
fisubrs
dec
dec
mov
std
xchg
push
imul
or
xor
cmc
aas
sub
push
insb
in
hlt
pop
push
ret
mov
xchg
xlat
mov
mov
out
imul
mov
xchg
imul
in
or
roll
lock
mov
mov
xchg
jecxz
fildll
in
dec
inc
add
lret
push
or
in
xchg
cmp
subb
xchg
or
xor
mov
ds
or
mov
mov
cmp
lcall
mov
adc
add
jp
je
lcall
mov
mov
xor
cmpsb
dec
aaa
ljmp
and
jg
mov
movsl
mov
cmpsb
hlt
xchg
inc
xchg
adc
fimull
dec
pop
push
ja
test
or
or
xchg
out
clc
pextrw
mov
mov
or
imul
gs
xlat
pop
push
loop
add
into
jecxz
fiadds
adc
leave
and
pushf
fldt
ss
shrb
pop
insb
pop
je
mov
jecxz
aad
push
pop
or
pop
push
jno
xchg
insb
xchg
xchg
sub
push
ljmp
add
sbb
add
pop
mov
jge
loop
dec
movsb
xor
sarl
push
enter
movsl
mov
ja
dec
cmpsb
mov
or
loop
push
into
cs
and
push
inc
xor
pop
stos
mov
and
outsb
add
jne
xchg
fmull
sahf
inc
ficoml
jg
mov
xlat
sbb
scas
push
into
jp
hlt
jecxz
ljmp
out
ds
mov
outsb
aam
cli
fiadds
sub
mov
decl
repnz
jg
jl
xlat
shrb
lret
mov
sbb
inc
ret
outsb
jno
inc
mull
push
mov
xlat
dec
mov
add
pop
mov
rorb
add
ficoml
adcl
test
shl
xchg
es
fiadds
in
mov
push
sub
call
jecxz
ja
cmp
ja
loop
xor
adc
or
and
cmpsb
xchg
out
xor
or
push
jl
rclb
scas
fisttpl
gs
outsb
xchg
adc
imul
mov
mov
jg
xchg
push
mov
mov
adc
jecxz
mov
rol
sbb
mov
mov
fistl
into
hlt
jmp
and
sbb
mov
or
in
fstl
jne
jecxz
clc
mov
out
jne
lcall
add
fisubl
dec
mov
mov
lock
or
ss
sbb
mov
or
adc
or
add
sub
pop
andb
pop
push
aas
jp
jmp
xchg
pop
mov
adc
movsb
out
push
push
xchg
dec
faddp
lds
into
mov
les
jo
dec
shlb
stos
mov
xchg
imul
mov
adc
sbb
mov
outsb
adcb
sahf
and
rol
pop
xor
fadd
pop
lcall
adc
mov
add
sub
and
cmp
pop
cmp
or
mov
int
fs
fistl
sbb
adc
mov
add
scas
xlat
jmp
jnp
call
insl
mov
fwait
and
or
sub
adc
xchg
add
in
cmpsl
push
repz
or
out
out
mov
ljmp
cmp
hlt
out
push
push
cs
test
xor
leave
add
fisubrl
fists
fnsave
jbe
and
mov
adc
dec
push
push
xchg
out
mov
inc
loop
dec
push
xchg
xor
lea
ljmp
rorb
js
mov
jle
jmp
mov
dec
or
lock
jo
inc
xchg
cmc
ja
cmpsb
aad
mov
mov
out
xor
and
adc
mov
outsb
shlb
jmp
es
xchg
ret
daa
push
ret
in
push
cld
cmovle
xchg
jge
out
stc
ljmp
ss
nop
mov
fimuls
stos
push
adc
push
push
cmc
test
ret
pop
inc
inc
inc
mov
mov
mov
ss
cli
test
movsl
sbb
hlt
ret
ljmp
mov
inc
push
stos
mov
adc
cmp
lods
adc
cmc
shlb
mov
sub
pop
inc
stos
scas
aam
mov
xchg
fsub
dec
xor
push
xor
hlt
adc
fcmovnbe
sub
cmp
jecxz
jecxz
movsb
ret
mov
pop
adc
std
fildll
sbb
leave
ja
stos
into
outsb
lcall
xor
pop
cmp
outsl
cmp
adc
mov
push
fs
loopne
je
xchg
loopne
push
ss
fildl
fidivl
push
or
iret
andl
ret
cmc
ja
mov
cmpsb
inc
test
fisubs
mov
ret
push
lcall
fstps
xchg
addr16
xlat
in
push
sbb
ss
jmp
push
repnz
push
test
xor
ss
insl
pop
sahf
jns,pt
dec
mov
fisubrl
add
es
movsb
jecxz
or
or
add
ret
add
sti
add
jecxz
lcall
cmp
test
jae
stos
xor
inc
mov
mul
outsb
push
and
ja
dec
or
inc
adcb
adc
sbb
and
push
add
sbb
dec
int3
ret
cmp
ret
xchg
mov
ljmp
imul
test
adc
lahf
inc
imul
cmp
icebp
sahf
int3
mov
por
bound
andb
ds
shll
scas
lret
jecxz
in
fdiv
rcl
jbe
mov
mov
insl
push
in
jg
aas
dec
es
mov
and
out
mov
ljmp
ret
sahf
lcall
xor
xchg
fisttps
and
and
push
adc
push
fidivl
push
pop
inc
jo
sbb
mov
rorl
cmovb
dec
orb
sub
pop
or
fisubrl
mov
enter
lock
sbb
mov
jmp
mov
ljmp
add
outsb
ss
incb
aas
push
and
mov
push
stos
mov
pop
stos
jmp
mov
mov
xor
dec
sub
mov
stos
add
or
add
pop
aam
cmp
imul
mov
rcrl
gs
or
sbb
add
inc
mov
xor
push
enter
adc
add
es
stc
xchg
imul
aam
jp
repz
or
push
sbb
mov
mov
sahf
adc
stos
jecxz
sub
xchg
pop
jp
je
ss
push
sub
jbe
mov
cmpsb
daa
ds
imul
mov
std
xor
jecxz
stos
xor
xchg
mov
inc
loop
and
ret
in
mov
imul
push
lock
xchg
leave
jmp
xor
testb
scas
test
rorl
adc
lcall
iret
xchg
xchg
mov
inc
stos
subb
xchg
cmp
ss
ds
cmp
in
xchg
or
jecxz
sbbl
pop
add
push
mov
pop
aam
cmpsl
xlat
mov
push
fdivrp
gs
mov
push
out
mov
loopne
fcmovnbe
mov
dec
std
pop
cmpsb
hlt
dec
cmpsb
mov
push
xchg
mov
and
iret
pop
jae
leave
mov
ret
sahf
mov
add
ds
lahf
lcall
xor
ret
push
pop
mov
mov
stos
ret
ret
inc
push
mov
out
outsb
xchg
xlat
and
stos
add
fildl
bound
jae
cmp
outsb
adc
mov
mov
mov
push
fldt
pop
scas
jl
iret
xlat
push
aam
cmpsb
scas
out
int
jno
lods
push
jne
outsb
xchg
pop
ja
shrb
ljmp
mov
cwtl
mov
sbb
mov
mov
sahf
add
sbb
lret
mov
mov
vmptrst
and
ficoml
xchg
pop
add
lret
sbb
out
jns
dec
cmpsl
adc
cs
es
es
stos
sahf
and
adc
jno
lods
sbb
mov
or
pop
adc
inc
fcmovnbe
xchg
lods
out
loop
inc
sbb
mov
cli
int3
and
xchg
out
dec
mov
or
inc
cmp
testl
mov
mov
fs
mov
sbb
push
insb
sbb
lods
jle
dec
xlat
dec
jg
or
inc
insl
rcrl
ror
jo
xchg
mov
mov
push
faddl
push
dec
push
add
sbb
and
lahf
std
gs
xor
inc
xchg
xchg
out
mov
cmp
out
mov
js
loop
or
out
push
stos
xchg
sub
dec
or
sbb
sbbl
sub
cmc
adc
sub
rcrb
wrmsr
adc
adc
push
xchg
lock
adc
inc
std
cmp
loop
ret
lds
scas
cmpl
cmc
ljmp
adc
dec
sub
add
push
adc
sub
or
push
iret
movsb
data16
xchg
push
dec
cmp
push
mov
jecxz
scas
lcall
bound
sub
bound
mov
das
push
mov
push
fsub
mov
mov
ficompl
pop
out
mov
mov
mov
add
adc
rorb
or
xlat
ja
xor
push
xor
or
mov
mov
aas
jmp
in
aas
pop
inc
and
add
cs
push
ret
xor
dec
push
shll
aad
outsb
dec
scas
in
xor
test
shlb
data16
lock
add
push
jbe
jbe
cmp
mov
mov
std
cmpsl
inc
add
and
push
cwtl
pop
or
adcl
subl
out
xchg
or
daa
mov
xchg
outsb
pusha
out
and
test
loop,pn
push
loopne
clc
cmpsb
push
jae
push
push
pop
mov
sbb
fistpll
pop
or
mov
shll
rolb
push
hlt
jecxz
cs
push
sub
lock
add
mov
mov
pop
lcall
mov
movsb
enter
stos
xor
or
mov
ss
ret
movsb
fdivs
popf
xchg
and
mov
pop
cmc
pop
scas
cmp
sbb
dec
or
add
push
ret
mov
ret
in
popf
adc
div
ret
cld
out
mov
mov
add
mov
push
notl
bound
cmpsl
fidivrl
mov
pop
iretw
mov
sub
cmp
xor
out
std
std
insl
rorl
and
or
mov
mov
jbe
inc
sub
push
lret
ss
push
mov
push
push
cmp
mov
dec
cmp
dec
daa
fstpt
scas
fdivl
cld
push
dec
fldl
push
stos
mov
xlat
ja
ss
mov
lahf
push
push
jg
mov
pusha
add
push
inc
fisubl
mov
inc
mov
aad
and
sbb
daa
push
jecxz
out
mov
push
pop
dec
ret
pop
xchg
sbb
ljmp
outsb
dec
orl
pop
and
mov
mov
sub
push
lcall
adc
xor
pop
adc
ljmp
cs
mov
stos
push
lods
faddp
pushf
push
cld
mov
ja
add
jbe
adc
jbe
lea
pop
ret
mov
sub
stos
add
imul
push
cmp
fiadds
adc
lahf
add
xchg
sbb
xchg
cmp
add
out
or
or
cmp
jo
sub
fadd
sti
rclb
dec
xchg
ret
jbe
subb
es
or
fistl
ja
mov
das
gs
cmp
iret
add
outsb
lcall
mov
fs
xchg
mov
loop
ret
mov
inc
fneni(8087
addb
out
loop
leave
imul
add
lret
das
push
mov
ds
sbb
sub
ficoml
pop
fcmovnbe
ret
cmpsb
mov
mov
ds
aad
jecxz
inc
mov
jge
cmpb
mov
cmpsb
roll
add
or
xchg
push
ss
addb
mov
imul
push
pop
add
lcall
xchg
fldt
xor
xor
minps
dec
stos
sarb
mov
nop
mov
es
mov
push
ficoml
adc
mov
ret
mov
fsubl
test
dec
repnz
shll
imul
ljmp
or
mov
fbstp
or
sub
notl
mov
mov
ret
sub
lock
hlt
aam
xor
imul
push
or
lcall
and
mov
iret
cmpsb
out
aas
pop
pop
xor
add
test
inc
push
jp
sbb
aad
ret
lcall
xchg
push
cltd
jb
add
sahf
fst
imul
aad
pop
lcall
mov
push
or
sub
imul
mov
push
orb
sub
sbb
jb
mov
sti
push
scas
movsl
xor
add
mov
dec
mov
dec
movsl
stc
inc
mov
jmp
testl
mov
cli
mov
mov
cld
cmpsb
mov
push
out
sub
xchg
mov
add
push
mov
daa
jecxz
mov
or
push
push
bound
pop
dec
xchg
mov
arpl
fcomi
mov
out
push
mov
movl
mov
adc
fstl
test
pop
mov
mov
push
cmpsl
or
iret
aam
and
aam
nop
cmpsl
sahf
dec
push
adc
adcb
push
mov
add
sahf
stos
gs
lcall
stos
jg
and
dec
cmp
ljmp
sub
or
mov
push
aam
jle
push
xchg
mov
cmp
insl
push
push
push
xchg
mov
add
mov
cmpsl
pushf
out
je
xchg
ds
push
mul
cs
mov
lret
or
push
mov
push
pop
xor
lea
inc
mov
sahf
sub
ds
jle
pop
lods
lcall
push
and
inc
jae
jno
in
pop
fstpt
dec
and
outsl
cmpsl
rorb
jge
sub
jae
mov
and
cs
pop
cmp
dec
outsb
inc
inc
dec
xchg
test
add
push
rorb
xchg
push
jmp
mov
lock
lahf
add
cs
daa
lods
das
inc
fidivs
inc
xor
adc
jecxz
sbb
inc
decl
and
cmp
jecxz
aam
pushf
lcall
push
sahf
jg
into
adc
pop
lods
or
fidivl
push
inc
sub
mov
adc
cltd
adc
xchg
mov
or
mov
sub
xor
sbb
imul
sub
xchg
subl
enter
add
in
aaa
icebp
fdivs
cmp
aas
cld
add
push
inc
cld
je
pop
mov
lahf
sbb
pop
pusha
sahf
xlat
ret
arpl
dec
pop
mov
add
cs
shl
jge
out
ljmp
mov
fistl
cmc
iret
rorb
jne
sahf
ret
inc
ss
jl
xchg
jecxz
cmp
test
adc
add
xchg
ja
xchg
shrl
xchg
xchg
dec
inc
xor
cs
mov
mov
xchg
sbb
cmpsb
cmp
ret
faddp
mov
pop
movsb
push
hlt
add
cmpsb
mov
retw
dec
dec
xchg
arpl
pop
call
js
test
push
rol
adc
and
in
ss
inc
mov
lock
shr
mov
inc
sub
or
test
fildll
or
shrl
stos
sahf
sub
dec
push
pop
push
xor
push
rolb
or
dec
or
les
push
push
mov
sub
filds
dec
dec
iret
adc
icebp
in
es
fistps
fnclex
dec
shl
push
bound
mov
dec
jbe
xchg
add
lcall
cltd
mov
call
sbb
push
dec
sub
xchg
rcrb
sub
sbb
push
fidivl
cmpsb
xlat
inc
adc
mov
in
add
ficoms
lcall
push
dec
sbb
imul
rcrb
cmpsl
jecxz
push
and
mov
ja
dec
and
pop
mov
xchg
subb
cmp
xchg
mov
mov
cmc
xchg
into
mov
jne
push
fcmovnu
ss
rcrl
xchg
adcl
push
xor
pop
ret
mov
mov
repnz
std
inc
data16
out
jp
jne
fisubl
jle
loopne
je
dec
cmp
stc
cmovne
mov
jecxz
lea
pop
adc
mov
shl
rep
test
clc
push
mov
push
fs
addl
lahf
mov
mov
mov
and
dec
mov
or
iret
mov
fimuls
lret
shrl
mov
aad
shll
outsb
inc
cmpsb
js
ret
adc
push
sbb
push
pop
movsl
pop
and
aas
jb
jno
cmpsb
mov
cmpsb
fucomp
or
add
int
int3
mov
or
hlt
adc
stos
scas
sahf
xchg
bound
enter
pop
lock
movsl
cmpsb
and
inc
idivb
sub
cltd
mov
mov
fcoms
ss
dec
ret
lds
arpl
cmp
push
iret
xchg
mov
cmpsl
add
sub
loop
cmp
sahf
in
cmp
adc
push
push
and
sub
cmc
popa
pop
xchg
das
loopne
fs
xor
mov
into
pop
push
ret
sub
stos
dec
movsl
push
pushf
les
scas
sbb
cmp
mov
js
mov
mov
cmp
jbe
push
es
in
mov
inc
enter
cmpl
mov
mov
xlat
jecxz
xchg
addl
xchg
cmp
mov
cs
push
gs
and
pop
lcall
sbb
xchg
loop
inc
mov
push
fcmovnbe
roll
xor
addl
jmp
mov
testb
xchg
gs
mov
pop
adc
sbb
fistpl
fisttpll
sub
ret
mov
arpl
outsb
iret
push
xchg
push
mov
pop
daa
fildl
push
jno
cmp
dec
inc
loop
aaa
sub
iret
sbb
cmpsb
xor
mov
bound
pop
push
aad
out
mov
outsb
push
mov
or
cmpsl
mov
outsl
or
cmp
cmpb
cwtl
mov
sbb
je
rorl
push
push
add
inc
loop
ret
xor
stos
rcrb
sbb
jns
in
or
push
lods
pop
mov
mov
xchg
jg
lahf
repz
xchg
mov
xchg
stos
fsubs
ja
and
ja
rorl
xchg
adc
adc
inc
and
ss
inc
shrb
mov
pop
in
outsb
imull
lcall
dec
mov
xor
sbb
xchg
repnz
add
cmp
dec
inc
push
and
push
sbb
das
sarl
iret
mov
dec
bound
jg
and
and
movsl
jl
fmul
adc
gs
imul
jmp
push
mov
pop
outsb
mov
ljmp
addb
push
xchg
aaa
push
mov
filds
mov
ljmp
and
lahf
and
cmp
ds
nop
gs
sbb
mov
gs
and
or
dec
std
dec
mov
subb
addl
push
mov
pop
mov
cmpsl
cs
test
and
bound
add
mov
shlb
in
idivb
xlat
push
xchg
fadd
fsubp
cli
es
sbb
outsb
push
sbb
fidivrs
or
mov
or
bound
leave
icebp
xlat
add
mov
push
repnz
cmp
push
mov
xchg
ljmp
aad
xchg
jecxz
and
mov
movsl
mov
sbb
leave
gs
or
adc
insl
loop
call
cmp
inc
add
imul
dec
outsb
adc
sbb
shll
mov
xchg
adc
dec
movsl
mov
push
add
imul
push
pop
mov
out
mov
ss
das
pop
mov
xor
es
fisubs
mov
xchg
mov
mov
xchg
iret
sub
and
shrb
fstpt
out
fidivrs
nop
add
mov
sub
jo
or
jle
out
int3
leave
pop
les
or
roll
call
orb
adcb
mov
add
es
and
fs
scas
ret
dec
ja
fcomip
jno
mov
fcmovbe
fcmovu
or
mov
adcb
jle
and
push
or
cmpl
cmpsb
jl
push
jne
dec
sbb
inc
aaa
push
fisubl
stos
stos
pop
mov
push
xlat
adc
bound
pop
outsb
in
pop
push
fmull
or
push
gs
mov
mov
je
xor
test
ret
xlat
add
sub
dec
sub
mov
jle
sub
push
sbb
mov
push
and
roll
push
mov
pop
imul
add
mov
push
xor
mov
inc
jns
and
sub
lcall
out
in
outsl
aas
and
mov
mov
je
lcall
push
mov
es
dec
hlt
push
or
sub
insb
dec
push
pop
fisubrl
xchg
cmp
outsb
and
xor
and
push
adc
sbb
add
rcll
test
dec
cmc
mov
imulb
jo
push
aad
mov
fcmove
cld
xchg
sbb
es
mov
mov
mov
push
sti
add
push
sub
jecxz
push
outsb
or
mov
out
ret
sbb
bound
pop
push
loop
push
xor
or
pop
enter
decl
cmp
inc
add
fiaddl
ret
mov
mov
mov
fildll
aam
or
into
push
sub
cltd
xchg
sub
mov
xor
leave
pop
jbe
add
or
mov
stos
filds
in
inc
jne
bound
ds
or
inc
mov
es
jp
adc
out
xlat
sbb
flds
sbb
mov
clc
and
aas
fdivp
lahf
jb
xlat
mov
push
pop
lret
rcrb
dec
lods
cld
aas
adc
or
mull
mov
dec
and
fimuls
aas
jl
mov
cs
push
pop
dec
xlat
or
add
dec
daa
sarb
insl
add
int3
stos
jne
xchg
sbb
ss
loop
cs
imul
mov
mov
pop
xor
ds
cmp
pop
data16
bswap
push
sub
xchg
mov
outsb
scas
data16
fdiv
ret
sahf
xor
bound
and
xchg
and
in
sbb
mov
out
cld
out
jg
ss
and
xor
sahf
sub
push
inc
les
xchg
push
xchg
pop
pop
and
push
movsb
rolb
inc
mov
fwait
xlat
cmp
sbb
aad
sub
je
dec
hlt
mov
mov
out
mov
decb
ret
mov
mov
fs
aas
jno
push
push
imul
push
dec
push
aam
neg
add
mov
mov
xchg
and
arpl
test
jecxz
and
or
adc
popf
jae
ds
sbb
push
push
stos
pop
mov
push
mov
add
movsb
push
pop
mov
aas
xchg
test
xor
cs
fidivl
lcall
stos
push
push
ret
mov
mov
scas
iret
sbb
ret
dec
pop
mov
xlat
lret
outsb
mov
xchg
push
outsl
ss
mov
cld
inc
jns
mov
push
mov
insl
push
imul
or
xchg
pop
mov
adc
cmp
add
imul
xor
inc
cmpl
rorb
loop
mov
xchg
lcall
hlt
loop
int3
dec
fisttps
lcall
push
popa
notl
in
ret
shr
gs
push
js
ret
add
xchg
test
nop
sahf
adc
rcl
mov
fimuls
inc
mov
add
sbb
je
fistpl
push
ja
mov
sub
cmp
ss
push
mov
xchg
jb
rorl
mov
cmc
das
loop
push
push
bound
or
and
in
pop
ret
xor
ss
xchg
je
pop
icebp
subb
hlt
sbb
push
fbld
adc
andb
push
xchg
sbb
inc
cmp
movsb
movsb
in
adc
mov
jecxz
dec
push
mov
lret
imul
fiadds
sub
punpcklbw
outsb
dec
negb
lret
xor
dec
sbbb
add
inc
pop
jecxz
rcrl
ja
mov
iret
push
addb
cmpsb
pop
mov
cmp
and
stos
sbb
popf
in
test
pop
or
fiaddl
or
push
dec
jecxz
or
pop
in
dec
push
xor
or
xchg
lcall
push
into
xchg
sub
adc
sbb
cwtl
les
mov
rcll
das
push
jo
jb
push
jl
xchg
shlb
enter
loopne
scas
mov
adc
pop
out
add
push
rclb
hlt
add
and
mov
mov
stos
lcall
inc
adc
sbb
xchg
fldenv
loop
push
shll
xlat
push
stos
lods
sub
test
sub
pushf
ljmp
ficoms
cmp
and
sub
in
push
out
int
dec
push
dec
aas
fstp
or
push
inc
push
and
lret
xlat
push
push
push
cmpsl
xchg
loopne
mov
or
ds
add
sahf
scas
into
push
adc
lea
jge
xchg
mov
vpmacsdd
push
ljmp
shr
dec
test
mov
mov
xor
dec
rcl
push
cs
cs
stos
iret
mov
mov
in
rorl
sahf
loop
push
xor
push
adc
xchg
jbe
insl
cmpsb
out
adc
data16
push
xor
iret
into
cs
xor
inc
repnz
pop
and
cmpsb
adc
lret
mov
es
cmp
fwait
cmp
loopne
mov
add
sahf
ljmp
inc
inc
emms
mov
push
jo
les
clc
test
orb
pop
cmpl
add
addb
shlb
xchg
or
ficomps
xchg
and
or
iret
shll
add
lret
cmpsb
push
dec
mov
ret
aaa
or
push
iret
push
mov
cmp
aas
aam
or
mov
cmc
xchg
out
rclb
dec
and
push
xlat
scas
push
sub
push
push
adc
cmp
int3
inc
inc
mov
inc
xchg
push
pop
push
or
gs
cmpsl
cmp
pop
pop
dec
loope
call
push
push
rolb
lea
loop
fcoms
lods
cmp
dec
jnp
pop
push
sub
mov
out
loop
sub
outsb
lcall
shll
or
into
push
add
out
fidivl
adc
mov
inc
ja
es
ss
js
iret
mov
xor
sbb
fistpl
push
stos
or
addr16
sahf
out
cmpsl
imul
xlat
ja
sub
mov
inc
repz
mov
mov
es
mov
mov
or
ss
dec
pop
sub
mov
ljmp
push
mov
pop
loop
imul
sub
jnp
or
and
jo
loopne
dec
out
xor
push
aaa
les
or
cs
std
imul
push
sbb
shr
xchg
ljmp
and
lods
xchg
and
negl
mov
or
into
dec
lcall
inc
sbb
mov
out
movsl
push
inc
xor
adcb
lret
lcall
sbb
xchg
into
daa
push
iret
ret
mov
fisubrl
jnp
fidivs
outsb
and
dec
jbe
es
push
push
jecxz
gs
jecxz
cmpsb
mov
icebp
daa
mov
cmpsb
pop
sub
es
mov
adc
loop
inc
inc
cs
es
ds
sbb
ret
sub
sahf
ja
push
es
mov
cmp
or
ds
fisubs
mov
jle
in
push
push
inc
push
jg
sbb
scas
push
mov
push
add
mov
sbb
mov
push
orb
or
sub
jp
dec
add
adc
inc
cmp
mov
mov
dec
xorb
mov
loopne
imul
mov
cmpb
mov
shll
cmp
cs
ficoml
les
ljmp
jno
xchg
int
ljmp
inc
or
mov
notl
ljmp
push
mov
cmp
and
pop
out
mov
jle
inc
xchg
movsl
fadds
ficoms
add
ret
add
xlat
scas
movsl
xchg
pop
pop
and
das
push
es
add
sub
dec
xor
hlt
xlat
test
test
xchg
adc
cmp
xor
push
pop
inc
mov
mov
fisubrs
sti
sub
incl
jne
mov
sub
fmuls
push
adc
scas
in
dec
xor
mov
adc
cs
mov
in
push
adc
mov
mov
imul
xchg
clc
sbb
mov
mov
data16
mov
cltd
mov
ja
push
and
mov
inc
jbe
fidivrs
cmpsb
inc
cld
pop
movsl
sbb
dec
mov
addr16
or
shrb
and
sbb
mov
ds
clc
mov
pop
enter
test
rcr
shll
ds
lret
cmc
stos
or
mov
inc
push
mov
push
lahf
ss
push
inc
pop
mov
or
add
mov
pop
jbe
or
mov
or
add
out
mov
add
mov
adc
mov
out
into
xor
shrb
inc
adc
or
out
push
or
cmpl
cltd
cmpsb
mov
adc
rclb
dec
mov
dec
jne
mov
sub
inc
mov
push
sbb
stos
hlt
push
sbb
mov
dec
adc
loop
xor
ja
ds
push
xor
outsb
or
mov
nop
mov
aad
xor
mov
ss
and
fidivl
inc
insl
adc
orb
inc
adc
loop
sbbb
mov
imul
scas
sub
in
adc
fistps
xor
xchg
push
pop
hlt
mov
pop
or
push
cmp
cltd
mov
fidivrs
ds
mov
ja
pop
test
mov
cmpsb
decb
jb
mov
mov
add
add
mov
in
push
lea
mov
stos
dec
and
mov
push
out
mov
ljmp
dec
ret
loop
rorb
xorl
xchg
insb
sbb
out
fildll
outsb
xor
add
push
dec
jbe
loop
push
rclb
mov
dec
inc
dec
pop
add
adc
mov
push
jge
hlt
fbld
jo
into
das
push
adc
ss
pop
mov
idivb
insl
or
cwtl
or
push
push
mov
mov
xor
push
lds
sub
dec
push
jg
decb
or
cmp
bound
sub
add
mov
jnp
push
or
aas
push
sub
xchg
stos
sbb
ds
mov
xchg
mov
mov
jecxz
ja
cmp
push
xchg
ret
cmp
addl
push
dec
ljmp
dec
adc
sbb
pushf
pop
push
push
mov
inc
push
outsl
xchg
leave
imul
bndldx
sbb
sbb
mov
mov
hlt
mov
push
xchg
fisubrl
pop
rorl
mov
lods
add
mov
aad
lds
mov
cs
subb
mov
shll
mov
push
mov
adc
outsl
sub
stos
adc
ficoms
mov
mov
cld
out
jo
or
outsb
cltd
xorl
das
pop
xchg
shll
inc
dec
inc
add
fdivl
or
ds
decl
aaa
sub
adc
subb
or
sbbl
mov
inc
xor
push
cld
sbb
sub
ds
roll
xorl
mov
stos
inc
ficoml
mov
dec
mov
push
push
push
imul
iret
inc
sarl
iret
fistps
push
ds
xchg
ret
push
ret
sub
iret
jle
loop
psubb
dec
sbb
mov
arpl
loop
push
outsl
add
in
push
sbb
cmp
jne
fsts
push
int3
mov
mov
cmpsb
xor
pop
leave
pop
outsb
hlt
xlat
mov
mov
xor
faddp
inc
pop
aam
imul
stos
in
mov
sub
cmp
cmpl
arpl
je
mov
ss
out
mov
xabort
movsb
in
or
adc
aad
add
mulb
cs
push
push
inc
lret
ret
mov
rclb
out
push
cmp
xchg
cmp
add
cltd
mov
sahf
std
jp
push
pop
mov
cmc
je
pop
cmpsl
mov
enter
lods
and
add
cwtl
in
mov
sub
ja
mov
lcall
inc
mov
cmpb
xchg
sub
or
rcl
jecxz
rorb
xorl
xchg
pop
fcmovnu
out
pushf
mov
ds
test
mov
adc
cmpsb
or
and
sbb
add
cs
cmpsb
mov
or
add
hlt
hlt
shrb
mov
data16
sub
jae
add
cmp
sub
push
bound
push
push
lcall
push
add
movsl
inc
test
fcmovnu
fistps
jmp
sbb
cs
movsb
xchg
cmp
sahf
cmp
dec
jne
and
push
outsb
xor
nop
or
test
jne
mov
out
ret
pop
lods
mov
mull
ret
in
roll
test
jecxz
test
or
jl
or
xchg
sub
leave
scas
in
push
add
movsb
xchg
bound
pop
mov
test
add
je
push
xor
ds
mov
sub
push
es
jo
jp
adc
mov
loop
add
icebp
cmp
push
addr16
inc
push
pop
xchg
cmp
pop
jecxz
push
push
movsb
bound
mov
cwtl
cmpsl
mov
rol
or
cld
test
sbb
or
ret
and
scas
jecxz
sbb
fmull
ret
movl
cmp
ljmp
es
dec
lcall
clc
cs
cmp
pushf
inc
jecxz
lahf
cltd
into
notl
xor
cmp
es
xor
loop
outsb
jecxz
fisubs
jecxz
adc
fidivs
jo
mov
mov
lret
sub
or
cwtl
ficoms
xchg
sahf
mov
sbbw
jecxz
mov
mov
scas
es
mov
mov
mov
dec
dec
mov
push
push
fs
ss
mov
mov
xchg
jmp
dec
imul
lret
std
push
mov
scas
movsb
push
repz
stc
xlat
outsb
mov
mov
cmp
dec
movsb
daa
adc
insb
adc
testl
ret
or
aas
mov
mov
fidivl
push
mov
fisttps
shl
imul
aaa
mov
pop
mov
sarb
cli
and
das
hlt
fldenv
pop
push
bound
out
test
xor
es
dec
outsb
fdivr
adc
mov
jecxz
push
xchg
ds
out
fdivs
mov
sub
lcall
int3
mov
xor
add
jg
mov
mov
rcl
sbb
jbe
xchg
fiadds
lods
mov
negl
mov
sbb
popa
lock
test
and
loopne
xchg
shrb
or
add
add
mov
dec
clc
addl
pop
or
push
mov
push
add
in
xlat
mov
inc
lea
inc
movsl
andb
rolb
sbb
in
push
push
rcll
adc
inc
mov
mov
add
shrb
jno
xchg
clc
test
movb
je
push
mov
add
stos
into
mov
imul
shl
out
lret
ss
mov
das
lcall
cmp
loope
dec
imul
scas
and
mov
jno
add
sub
sti
andl
add
xor
inc
idivb
cmpsb
sub
out
roll
jne
ret
repnz
sub
fbld
out
jg
sub
stos
pushf
jne
mov
cmpl
cwtl
xchg
xor
ret
test
cmpsb
jbe
fs
xchg
inc
push
stos
or
push
negl
sub
outsb
mov
mov
rorb
adc
xchg
pop
xchg
inc
cld
push
xor
jecxz
dec
pop
out
pushf
lahf
addb
fisttpl
dec
lods
mov
cltd
ret
inc
cld
add
adc
scas
lock
mov
xchg
mov
sbb
pop
xchg
push
dec
xchg
adc
push
aaa
pminub
mov
push
lock
push
and
stc
push
imul
jp
dec
push
mov
push
cmp
loop
fists
xor
mov
inc
push
cld
or
xchg
sbb
mov
mov
sub
prefetchwt1
loop
daa
pop
adc
or
mov
das
push
filds
ss
ret
testl
fadds
push
push
cmp
ret
push
inc
pop
cmp
mov
mov
and
dec
testb
adcb
inc
mov
loop
xor
xor
and
test
fiaddl
pop
and
mov
ret
cmp
mov
push
hlt
loop
xlat
or
mov
inc
xor
out
push
push
add
ficomps
shll
and
sub
push
add
mov
dec
xor
dec
mov
movl
mov
add
xchg
sahf
push
in
add
or
push
and
pop
sti
stos
xchg
aaa
test
xchg
pop
add
xchg
push
mov
stos
jle
mov
xor
es
ss
push
pop
leave
add
dec
iret
mov
jl
xchg
imul
scas
mov
lcall
mov
adc
xchg
cmc
rorb
inc
mov
outsl
cmpsb
into
dec
stos
and
ja
fildll
pop
dec
mulb
fistpl
mov
leave
push
loope
hlt
sbb
pop
sub
lret
cld
lea
pop
lahf
scas
addr16
cmp
mov
pop
push
jg
mov
push
ficomps
xor
es
shrl
fimull
shlb
jae
pushf
inc
out
fs
fnsave
shll
roll
adc
dec
ret
sub
cld
fisubl
in
push
mov
pop
adc
bound
sub
hlt
and
mov
inc
pop
mov
add
xor
out
push
mov
dec
fistl
jle
aam
lock
mov
das
fninit
mov
sbb
mov
enter
pop
push
adcb
ret
fistl
mov
push
pop
mov
bound
and
fsubr
and
sbb
es
pop
sub
sbb
out
xchg
pop
ret
push
mov
cmp
and
cmp
cvttps2pi
ficomps
push
lock
xlat
mov
js
and
stos
xchg
sbb
push
dec
int3
iret
xchg
push
ret
sub
mov
xchg
out
mov
lcall
sbb
sbb
xchg
push
rorl
pop
filds
int3
push
out
out
push
push
mov
cmpsl
jecxz
push
rcrb
jnp
das
mov
aaa
mov
push
add
lret
gs
cmpsb
retw
hlt
roll
mov
out
into
pop
pop
push
xchg
lret
and
jmp
sub
stos
mov
push
je
shlb
and
rclb
outsl
add
stos
mov
iret
lcall
adc
pop
cmp
rcl
std
cwtl
mov
mov
mov
icebp
mov
adc
in
and
outsb
sbb
inc
adc
sbb
icebp
inc
inc
in
push
cwtl
arpl
cwtl
cld
pop
call
imul
ds
ds
aaa
xchg
pop
push
and
fdivrs
gs
or
mov
jp
fdivp
jg
dec
pop
xchg
lret
movsl
mov
imulb
ss
mov
loope
push
xor
cwtl
push
lcall
inc
gs
bound
fidivs
mov
out
ficompl
push
pop
mov
loope
mov
push
shl
sahf
mov
and
jne
lods
pop
jl
pop
test
xlat
inc
jnp
lret
mov
int3
addl
cmp
pop
mov
cmpsl
dec
adc
sub
xchg
adcl
pushf
les
aad
fstpl
dec
ret
pop
aas
dec
fistpll
and
lahf
sub
jae
or
loop,pn
cwtl
scas
cmp
xchg
pop
fsubrl
icebp
inc
cwtl
movsl
jg
adc
push
fldt
addr16
stc
dec
xchg
cmp
pop
sbb
xchg
outsb
mov
push
mov
cmp
ret
imul
into
pop
mov
mov
stos
outsl
movsl
sub
pop
xchg
popa
mov
mov
ret
faddl
mov
cwtl
pop
aas
sub
cmp
jo
jecxz
jns
xchg
adc
out
stos
push
aam
outsb
iret
movsb
dec
inc
push
int
push
sahf
mov
fidivs
mov
mov
fstpt
lahf
adc
dec
daa
xchg
jge
aam
push
adc
in
push
adc
lcall
cmpsl
xchg
dec
out
jae
sub
xchg
xor
dec
cmp
push
gs
pop
sbb
mov
cmp
add
push
es
xchg
cmp
inc
and
mulb
push
push
xor
mov
mov
adc
add
cmp
ret
orl
xchg
mov
orl
pop
xchg
xor
imul
pushl
or
int
insl
addb
mov
cmp
cwtl
push
out
lods
mov
inc
fcomi
mov
mov
xchg
sbb
lret
ss
lock
or
cwtl
push
inc
int3
add
ret
arpl
pop
scas
xchg
jl
mov
mov
and
ss
mov
bound
push
iret
add
mov
pop
pop
data16
out
iret
adc
add
pop
push
pushf
shlb
outsl
fildll
cs
cmp
sbb
mov
inc
pop
adc
adc
mov
mov
or
xchg
cmp
push
and
out
int3
add
pop
arpl
sub
fwait
sub
or
je
push
mov
ficomps
fs
push
loop
push
int
push
cmp
stc
or
jge
and
out
shlb
pop
insl
ja
outsb
pop
mov
movsl
or
aad
rolb
xchg
mov
mov
push
es
sub
les
or
adc
popf
rcl
in
and
mov
outsb
out
ret
repnz
and
push
movsb
idivb
je
les
cmpsb
dec
inc
stc
push
shl
xchg
out
lock
in
ja
rorb
fs
es
jno
pop
mov
enter
ret
mov
aad
pop
loop
sub
push
es
ss
push
push
cmp
lret
push
sub
sub
jae
inc
xlat
fnstcw
mov
xchg
xor
sbbb
cmp
and
andl
cmc
imul
xchg
adc
xlat
add
push
adc
dec
loope
ret
andl
or
push
fidivrs
rcrb
add
rorb
mov
add
out
sub
lea
mov
es
pop
jle
mov
add
mov
mov
clc
popf
mov
shrl
cld
out
dec
xor
mov
or
sahf
in
push
add
xchg
test
push
insl
xchg
cli
in
push
and
jmp
mov
xor
fimull
ret
cs
arpl
fidivrl
std
sarb
or
mov
ret
sub
mov
lcall
fwait
cs
orl
dec
xchg
and
das
mov
cmp
mov
ja
outsl
jb
or
sti
dec
test
scas
mov
mov
inc
sarl
fisubs
dec
mov
imull
mov
rolb
dec
ja
jl
mov
divl
adc
dec
push
shr
loop
pop
add
lods
jne
jle
add
inc
mov
fst
inc
dec
ds
xchg
aaa
xor
dec
and
dec
ficomps
push
mov
test
vphadduwd
mov
dec
mov
gs
fstpt
xchg
inc
push
dec
add
push
inc
jnp
xchg
js
sub
sbb
xor
orl
test
push
sub
adc
call
inc
jno
inc
fldt
pop
push
mov
lds
push
retw
pushf
test
loop
lds
sbb
or
inc
into
orl
xor
push
lahf
daa
xchg
mov
xchg
or
jne
js
les
gs
pop
or
add
and
push
pushf
mov
pushf
mov
xchg
pushf
cs
adc
mov
push
std
push
in
lret
mov
push
hlt
mov
xchg
add
mov
pop
pop
push
ljmp
inc
jecxz
mov
roll
andl
sahf
and
mov
mov
mov
cmp
and
push
into
xlat
pop
fiaddl
stos
xchg
movsb
xchg
rolb
imul
mov
in
or
mov
scas
pop
xlat
inc
lcall
fiaddl
jecxz
out
mov
cmc
sbb
ds
push
jne
mov
pop
push
xor
push
xlat
mov
cld
jp
push
jg
ret
lcall
jg
jae
mov
and
pop
mov
stos
pop
fisttpl
xchg
sbb
mov
jg
xchg
ss
jge
iret
aam
mov
cs
pop
inc
mov
fisubl
jb
stos
xchg
rcrb
std
sbb
nop
movsb
cmpsl
pop
push
fidivl
jl
xor
jge
loop
outsb
and
imul
jbe
jge,pn
addr16
out
adc
ret
adc
and
pushf
cmpsb
jecxz
jecxz
dec
mov
ss
into
sbb
pop
ret
lock
fidivs
bound
ret
loop,pt
mov
push
mov
lret
sarl
dec
push
add
pop
xor
ret
xchg
sbb
lret
cmp
imul
gs
cmpsb
mov
gs
hlt
xor
and
sub
pop
or
imul
ljmp
jge
cmc
rcr
mov
xchg
pop
mov
sub
push
jecxz
pushf
mov
jbe
ss
pop
dec
iret
mov
push
push
mov
push
and
push
sbb
pop
sbb
dec
aam
cmc
sbb
push
lahf
mov
out
ljmp
loopne
hlt
stos
mov
mov
cmc
xchg
or
jp
sub
xchg
mov
lret
and
mov
sub
hlt
les
mov
loop
xchg
pop
xlat
fisttps
andb
lret
fisttpl
fcmovbe
fdivrp
jg
sti
jg
cmpsb
stc
and
loop
pop
and
rcrb
mov
push
mov
in
sbb
xchg
add
sub
and
cmp
loop
rorl
pop
add
inc
jbe
mov
or
scas
and
xchg
push
shll
xor
add
scas
icebp
mov
jae
xchg
xchg
addr16
dec
mov
sub
movsb
mov
push
bound
sahf
imul
xchg
jmp
bound
data16
iret
adc
pop
sbb
ret
push
fisttpll
cmp
jbe
push
mov
das
or
iret
out
push
push
dec
jo
icebp
sbb
xchg
inc
xchg
shrb
pop
lret
mov
pop
sub
pop
jecxz
loopne
jmp
in
pop
repnz
and
or
loop
pop
pop
test
xchg
pop
lock
into
push
pop
outsb
ljmp
add
pop
ret
lret
adc
ficomps
lret
xchg
inc
mov
sub
popl
fisubrs
movb
outsb
dec
sahf
adc
pop
xchg
pop
mov
xlat
bound
sbb
out
pop
push
xlat
xchg
or
and
and
es
cmp
xor
bound
rol
mov
adc
out
and
jecxz
ljmp
fnstcw
leave
add
mov
fmull
lock
out
sarl
fmuls
fistpll
pop
imul
orb
dec
sub
scas
lret
mov
sbb
mov
xor
push
mov
iret
loop,pt
filds
cs
loopne
lcall
mov
pop
mov
inc
or
ds
bound
xlat
dec
movsl
mov
data16
xor
sbb
sub
int3
sbb
xchg
push
or
ret
sub
lret
fimuls
rorl
cmc
ret
ret
adc
and
in
sub
rolb
xor
loop
mov
jae
pop
mov
testb
inc
lock
push
pop
or
adcb
xor
xor
sarb
lret
add
into
mov
sub
mov
scas
mov
fidivs
and
push
xchg
out
loop
adc
mov
mov
sbb
cs
push
lea
xor
pushf
fildll
xor
mov
mov
jl
fiadds
pusha
sbb
adc
mov
dec
push
andb
sub
cmp
and
out
testb
sbb
push
push
ss
mov
sarl
fldt
and
imul
push
add
outsb
xor
mov
and
daa
into
sahf
test
push
push
push
sub
jb
sub
cmp
pop
in
push
loop
inc
ljmp
push
xchg
fildl
push
xor
es
xchg
push
jl
dec
hlt
xlat
ret
push
dec
repnz
lock
dec
mov
je
shl
outsb
mov
sub
push
cmp
loop
xor
dec
push
xchg
pop
lret
jb
cmp
js
out
shl
ss
ljmp
adc
or
mov
sbb
mov
or
add
mov
out
ja
xchg
imul
ss
cmp
mov
cmp
add
ret
add
inc
mov
stc
sbb
ds
jle
cwtl
dec
in
inc
add
mov
pop
dec
xor
mov
push
rorl
ja
add
testb
ret
xchg
ljmp
or
rcrb
test
ret
pop
fildl
dec
push
es
or
mov
pop
push
popf
push
mov
mov
je
mov
adcl
cmpsl
xchg
jb
popf
inc
push
dec
cmc
movsl
mov
in
xchg
sub
cmp
adcl
inc
lcall
mov
push
movsb
xlat
mov
mov
mov
xor
push
shll
and
shr
pop
dec
jno
jnp
ss
xchg
lds
push
mov
mov
pushw
and
add
mov
cli
rorl
push
push
mov
movsl
mov
lret
fistpll
mov
sub
hlt
imul
push
and
sub
and
stos
push
fistpll
mov
rcr
xchg
xlat
mov
add
mov
sub
fsubr
adc
sbb
mov
shr
fisubl
cmp
insl
sub
mov
or
mov
push
sub
clc
adc
aad
xchg
ja
divps
dec
rcrb
push
in
ret
mov
jnp
mov
xor
sahf
fs
lea
outsb
add
cmp
loopne
mov
mov
dec
mov
fistpl
dec
in
pop
outsb
or
imul
aam
std
mov
cmpsb
push
subb
adc
pop
inc
scas
push
in
xchg
push
xor
in
mov
cmpsb
cld
sub
xchg
cmc
iret
outsb
push
push
pop
ja
lcall
adc
jbe
bound
mov
mov
ret
repnz
or
cmp
das
inc
cmp
cmpsb
dec
sti
fs
daa
mov
or
aad
test
or
dec
cmp
push
and
push
and
out
sub
add
ds
mov
scas
cmp
dec
cmp
rcll
xchg
or
jnp
insl
ret
add
orb
and
and
pop
push
mov
mov
dec
push
sbb
xchg
loop,pn
xor
fisubrl
lcall
jae
es
mov
mov
or
mov
cmp
sub
jmp
xchg
push
aad
outsl
ss
mov
movsl
sbb
sub
bound
push
pop
cli
in
push
push
adc
imul
psrad
push
dec
je
mov
xchg
fiadds
fisttpll
push
xor
ds
sub
push
inc
mov
dec
ljmp
lcall
push
and
sub
in
jecxz
mov
into
es
xor
stos
add
scas
cmp
sub
int
dec
push
mov
mov
dec
loop
push
sti
xlat
and
or
stos
inc
outsl
repz
mov
aas
and
lahf
xlat
sub
mov
add
ss
lret
ficoml
sbb
mov
and
fdivr
cmp
lcall
mov
and
cmp
dec
xchg
ljmp
cld
and
lcall
leave
sub
fcmove
inc
push
cmpsl
dec
fisubs
push
mov
mov
pop
xor
or
xchg
pop
fbstp
or
cs
mov
sub
mov
or
xor
lcall
into
sub
rol
ss
mov
xchg
push
shll
xor
decb
or
stc
adc
cld
lcall
out
cmp
bound
cmpsl
je
data16
sti
inc
clc
ljmp
andl
stos
je
push
outsb
dec
punpckhdq
push
mov
subb
nop
sbb
add
jecxz
lahf
push
pop
std
insl
or
or
fadd
xchg
test
xchg
test
and
cwtl
and
or
stos
push
jecxz
mov
xchg
fildl
imull
mov
mov
imul
dec
sahf
mov
bound
mov
mov
mov
jecxz
ja
cs
mov
push
call
xlat
movb
push
or
cmc
lcall
inc
int3
ljmp
dec
and
mov
push
out
add
push
addl
dec
pop
inc
stc
xor
fcmovu
cmpl
push
or
addr16
stc
add
or
sbb
into
lret
adc
out
pop
roll
push
jmp
enter
mov
das
lods
in
ds
jne
aaa
and
movsb
mov
lret
mov
add
outsb
in
jne
mov
rorl
xchg
fisttps
push
pop
pop
inc
push
cmp
fldt
mov
or
add
imul
xor
cmpb
cwtl
mov
jnp
loop
in
or
pop
ret
cmp
jecxz
push
es
mov
sub
and
or
push
sahf
je
fs
scas
or
or
iret
ljmp
mov
cmpsb
filds
add
push
mov
shll
ficoms
xchg
pop
cmpsl
push
mov
xor
sbb
es
push
out
sti
inc
xlat
movsl
faddp
push
pop
gs
jecxz
or
pop
mov
push
sub
jb
sbb
cmp
or
outsb
stos
push
fdivr
adc
fs
pop
rol
jne
sbb
inc
mov
shlb
dec
mov
enter
fimuls
adc
dec
jno
xor
out
xchg
inc
ret
ss
jne
xchg
into
push
xlat
inc
add
sarb
mov
aam
lcall
push
mov
cs
mov
sbb
xchg
add
cmpl
jl
lret
leave
es
outsb
xchg
push
hlt
or
push
jecxz
shlb
out
nop
std
fbld
out
mov
mov
sarl
call
stos
xlat
outsl
scas
xchg
std
push
ret
pusha
pop
jecxz,pt
fsubp
test
or
pop
adc
mov
mov
cld
jo
je
xchg
mov
iret
andb
cmc
dec
cs
cltd
mov
dec
dec
ds
outsb
pop
mov
sti
push
jmp
outsb
cmp
pop
int
mov
cltd
int3
sbb
pop
mov
es
dec
xlat
ljmp
and
inc
add
cmp
sub
or
xchg
pop
mov
push
out
pop
cmpsl
stos
nop
xchg
testb
cmpsb
outsb
hlt
add
mov
cmp
loopne
cmp
push
loop
mov
or
fistps
popa
rcr
mov
icebp
mov
cli
test
sahf
in
cmpsb
push
gs
ljmp
jo
ret
jecxz
pop
cmp
movsl
push
ret
mov
jb
lods
pop
mov
sbb
pop
push
xlat
das
mov
adc
fistpll
mov
xor
xor
cmc
and
ljmp
lods
fbstp
iret
and
xchg
mov
hlt
cltd
cmpsb
fistps
decb
pop
pop
adc
push
mov
icebp
aam
push
outsl
sub
pop
and
mov
jl
mov
cmc
icebp
xchg
lret
cmpsb
pushf
gs
inc
mov
jno
add
add
insb
orb
jl
ljmp
sub
mov
pop
cmp
call
jp
aad
inc
ret
into
jecxz
and
mov
icebp
outsl
push
outsb
ss
scas
rorl
lcall
dec
inc
scas
adc
test
iret
mov
bound
pop
ds
xor
mov
jg
push
mov
adc
adc
rclb
adc
enter
ss
dec
es
repz
loopne
outsb
xlat
push
and
push
jle
mov
fdivp
push
pop
and
shrl
pop
mov
imul
dec
add
in
sbb
out
ret
gs
cs
push
daa
and
sub
test
insl
loop
lods
es
stos
inc
and
aad
mov
in
add
aas
orb
adc
loop
fs
adc
ljmp
mov
aaa
push
sub
inc
sti
pop
loop
xor
fisubrl
pop
cmp
fists
rcrl
sbb
inc
cmpsb
clc
repz
inc
push
pop
loop
sub
imul
xor
push
fcmovne
mov
jl
push
negl
lds
add
cmp
cmpsl
mov
push
mov
mov
testl
fiadds
std
push
sbb
pushw
xlat
mov
mov
test
loop
aas
pop
fists
push
dec
out
clc
dec
xor
dec
push
out
and
call
cmp
fwait
bound
gs
mov
fcmovnb
push
sbb
or
sahf
pop
into
push
cs
sub
xchg
mov
lcall
scas
mov
push
lock
and
mov
pop
arpl
jno
test
cmp
mov
sbb
ljmp
inc
push
mov
dec
or
push
xlat
mov
xor
jmp
stos
rol
xor
sbb
push
cmpxchg8b
iret
push
inc
pop
aaa
push
and
mov
sub
pop
xor
data16
cli
test
stos
ljmp
mov
mov
xchg
shll
xchg
xorb
fidivs
es
stos
pop
lods
leave
daa
sbb
cs
fidivrs
test
xchg
mov
fs
jno
add
loop
adc
rcr
push
ret
subl
xchg
mov
or
ss
rol
notl
add
outsb
jne
es
movsb
ds
shrb
sbb
sub
nop
mov
pop
push
mov
fstpl
out
mov
pop
xchg
pop
loope
mov
lcall
jno
push
jle,pn
xor
subb
mov
mov
fcompl
mov
into
call
jbe
ss
mov
jae
iret
add
inc
pop
or
push
jecxz
dec
dec
cmpsb
test
and
push
iret
cmpsl
fisubrs
jbe
sub
ds
dec
ret
add
xchg
mov
es
adc
jbe
bound
xchg
push
ret
insb
jb
pop
xor
inc
stos
and
add
fiadds
or
adcb
and
loopne
test
push
and
add
cmp
out
cs
adc
scas
mov
out
ss
pusha
mov
mov
insl
cmp
mov
iret
cs
loopne
mov
mov
mov
stos
loope
and
xchg
sub
in
cs
or
add
test
mov
mov
outsb
push
push
mov
outsl
aam
fsubrl
sbb
xchg
xor
mov
fiadds
imull
ja,pn
bound
mov
push
ss
sbb
jg
sahf
xchg
lcall
push
xchg
ret
scas
cmp
push
or
sbb
adc
push
mov
push
xchg
cli
in
mov
sub
xor
xor
cs
shl
test
lock
cmp
imul
mov
data16
lret
mov
jns
mov
jne
sti
ficomps
fidivl
cs
mov
mov
loop
inc
push
cwtl
jne
sub
subb
push
pop
mov
adc
rcrl
xchg
mov
lea
nop
cmp
xor
lret
imul
jg
shll
and
std
xchg
scas
cmp
add
or
pop
cltd
into
sbb
mov
inc
mov
movsb
sub
pop
loopne
outsb
shrl
or
xorl
fsubrl
jno
fstl
gs
in
rclb
inc
add
push
xchg
cmp
jne
lock
pushf
cmpsl
xor
jne
movsl
push
pop
lds
mov
xor
sbbb
push
dec
data16
pop
jecxz
pop
jge
shrb
ret
mov
xor
xor
push
leave
neg
ss
xor
or
imul
fists
fimull
clc
and
imul
test
sbb
ss
into
rclb
mov
xchg
test
ret
dec
xor
in
push
addr16
jle
xchg
inc
out
jge
lahf
mov
mov
sub
xchg
xchg
adc
lods
cmp
mov
lcall
adc
into
xchg
inc
xor
repnz
push
sbb
push
pop
outsb
pcmpgtw
mov
and
and
icebp
repnz
push
loop
jae
cs
scas
cmp
dec
cmp
push
jge
leave
test
mov
or
dec
cmpsb
adc
aas
xchg
gs
call
cwtl
xchg
mov
pop
mov
lds
fst
xchg
xchg
dec
mov
xchg
push
cli
sub
adc
out
aam
jl
xor
shll
xor
push
lds
xchg
pusha
ljmp
faddl
gs
inc
loop
adc
shll
mov
adc
into
adc
cltd
adc
mov
add
jo
loope
rol
dec
pushf
mov
loope
cmp
xchg
and
aad
sbb
es
sub
adc
xor
pop
push
fcoml
iret
push
mov
pop
push
lahf
cmp
mov
mov
pop
pop
mov
int
mov
ret
or
aad
add
pushf
lock
out
or
xchg
pop
and
xchg
cmpsl
jb
stos
stos
push
sub
push
push
sub
fs
jp
push
dec
cmc
mov
push
jae
inc
shlb
mov
sub
fcmovb
sbb
cmp
push
sub
outsb
mov
inc
mov
shl
ja
out
enter
jl
cmp
sub
imul
outsb
imul
stos
movb
inc
fidivs
pop
dec
inc
lds
mov
push
hlt
mov
xlat
ds
or
out
cmpb
cwtl
shll
push
nop
adc
push
mov
je
into
repnz
sbb
ljmp
mov
mov
push
fmull
mov
les
inc
mov
lcall
push
scas
cmc
mov
push
or
imul
sbb
test
xchg
inc
or
and
stos
sarb
pop
sahf
int
sti
jne
loopne
push
or
fcmovnbe
cmovne
xchg
mov
pushf
xchg
push
push
xchg
cmc
or
call
popl
call
lcall
aad
push
mov
inc
stos
push
jo
movsb
dec
test
hlt
scas
ss
push
cmp
or
loope
pop
dec
stos
mov
out
jae
fidivrl
push
mov
mov
pop
cli
gs
aas
lret
pop
push
push
jne,pt
ret
fcompl
ficompl
jg
ljmp
fistl
xchg
loopne
pop
mov
or
imul
cmpsb
fisubrl
stos
mov
addb
jbe
cmp
bound
ficoml
iret
mov
or
push
es
sbb
imul
ret
xchg
add
mov
xlat
xchg
bound
mov
xchg
fmull
cli
ljmp
cmp
fs
test
lock
mov
stos
cs
mov
jae
outsb
ret
pop
out
sbbl
mov
notl
push
scas
ljmp
mov
sbb
test
xchg
bound
js
das
ss
mov
mov
std
add
ret
sbb
cmpsb
jmp
add
loop
cmp
mov
jno
xor
stos
xchg
outsb
mov
inc
pop
sub
xor
mov
jne
out
inc
jbe
adc
or
add
dec
jbe
push
mov
adcb
fiaddl
scas
ss
push
bound
scas
fildll
daa
inc
dec
jecxz
cwtl
repnz
inc
mov
pop
not
fisubrs
sbb
xor
jg
test
fcmovu
sbb
adc
mov
or
push
cmc
gs
shrb
ucomiss
sbb
dec
mov
jne
jecxz
les
pop
shlb
ljmp
push
ret
adc
test
push
xlat
es
cmpsl
loop
imul
ret
int3
mov
dec
lahf
xchg
rorl
aas
rcr
fwait
dec
mov
shr
push
mov
jne,pn
cmp
inc
push
sub
out
push
call
rclb
pop
imul
ficoms
push
leave
daa
es
scas
mov
sbb
lahf
hlt
and
movsb
mov
pop
lret
ljmp
incl
mov
or
mov
out
jg
push
mov
iret
into
push
inc
jbe
xor
jne
fistl
repnz
and
call
pop
icebp
mov
or
rolb
stos
mov
pop
mov
lret
repnz
sub
pop
xor
shrl
push
inc
repnz
das
es
push
mov
xlat
and
ret
mov
dec
jbe
ret
mov
rcr
xchg
xchg
out
sub
incl
sub
xor
dec
shl
mov
xor
cmc
mov
mov
mov
or
dec
test
sahf
in
mov
int3
adc
and
xorb
fsubrp
xchg
sub
rorb
popf
daa
aas
inc
cmp
and
maxps
cmpb
mov
and
or
pop
add
push
out
dec
cmpsb
scas
pop
es
add
dec
mov
gs
xlat
push
cmp
add
push
mov
mov
inc
mov
mov
mov
mov
rol
push
shlb
ja
mov
scas
jae
ficoms
insb
pop
in
cmc
out
sahf
mov
mov
sbb
xchg
mov
fcmovbe
push
neg
mov
adcb
ds
sub
or
ss
cmpsb
adc
ret
sub
hlt
out
shrl
xchg
sub
jae
cmp
mov
mov
or
push
fidivl
addr16
xchg
add
push
adc
mov
ss
or
fsubl
add
mov
sbb
lcall
cmpsl
rorb
xchg
lcall
cmp
sahf
and
pop
lcall
jg
adc
jbe
push
push
sbb
mov
push
cld
mov
xchg
sub
orb
mov
cs
jecxz
and
sub
jnp
shlb
cmp
lahf
paddb
xorb
aam
xlat
aad
jp
inc
data16
lcall
in
inc
mov
aad
es
repz
rorb
push
rcrb
or
push
and
add
sub
mov
xchg
xchg
xor
push
mov
sub
pop
sahf
imul
mov
mov
or
fadds
push
je
pop
out
push
out
push
cli
pop
mov
jne
xchg
inc
sub
push
dec
mov
out
jne
mov
sub
hlt
xlat
mov
iret
aad
int3
pop
clc
insb
andb
mov
push
sub
sarb
push
mov
rorl
sti
xchg
addb
push
add
adc
xor
sub
or
loop
nop
scas
add
mov
dec
jne
inc
dec
dec
mov
mov
mov
cwtl
test
push
jno
mov
jl,pt
arpl
mov
jne
ja
add
aad
xchg
gs
cmp
mov
les
add
mov
jo
jnp
push
cmp
movsb
into
lcall
ret
mov
repnz
sub
xor
ret
sbb
outsb
pushf
int3
jne
xchg
mov
pop
es
bound
push
xchg
rcrb
cs
adc
adc
mov
fisttpll
mov
aas
rorb
in
sahf
call
xor
mov
sarl
adc
ljmp
push
inc
shl
movb
and
mov
cmp
insl
ret
xchg
dec
mov
adc
mov
subl
xchg
jmp
mov
rolb
push
push
sub
aad
mov
sbb
sahf
ljmp
push
and
sub
outsb
out
icebp
xor
rcl
imul
hlt
jb
sbb
xlat
out
pop
ljmp
outsb
mov
add
jle
push
xchg
nop
cwtl
jbe
outsb
pmovmskb
es
cmpb
sbb
xchg
push
dec
out
mov
mov
in
lahf
loop
imul
mov
jecxz
into
shll
xchg
iret
push
rorb
sbb
shll
outsb
icebp
mov
out
jno
shrb
lahf
push
pop
cltd
jae
cmpsl
test
es
cmp
mov
push
mov
or
adc
pop
inc
push
pop
xor
dec
xchg
ret
push
inc
cmp
cmpsl
mov
cmpsl
les
loop
lcall
inc
mov
jmp
xchg
push
ja
xchg
cltd
dec
mov
mov
and
scas
push
mov
pusha
push
aad
mov
filds
stos
and
sti
and
rorl
xor
mov
mov
lds
inc
aaa
mov
cs
rorb
fbstp
mov
mov
sub
je
fimuls
ficomps
loopne
mov
aaa
adc
subb
add
sbb
sbb
cmpsl
xlat
cmp
sub
mov
cmp
lahf
and
push
lcall
adc
adc
jo
in
rol
shrb
mov
push
testb
iret
ret
fstpl
mov
push
sub
xor
fcmovnbe
and
lds
aaa
iret
hlt
mov
shr
into
sub
rclb
xor
sbb
sti
bts
loop
push
or
inc
dec
cmp
jl
fsubrp
mov
push
cmp
add
sti
mov
fildl
xchg
outsb
dec
and
sub
cmpsb
mov
push
pop
jg
pop
ljmp
adc
sub
dec
inc
std
mov
xchg
push
jl
aas
into
mov
aas
fiadds
push
adc
not
push
push
fdivs
xchg
gs
push
cmp
inc
mov
cwtl
int3
lea
sub
testl
fbld
dec
mov
or
shlb
push
lahf
xchg
repz
jb
jp
in
arpl
xchg
pop
sbb
adc
pop
xor
xlat
adc
inc
es
mov
loopne
ds
fs
sbb
add
mov
add
out
push
shl
addr16
ret
ds
setle
stos
mov
sbb
mov
or
push
je
rclb
xchg
test
movsl
dec
cs
sbb
mov
into
push
inc
push
mov
mov
fidivs
jle
dec
lcall
lods
xor
add
pop
lret
mov
aas
ss
push
dec
mov
push
lahf
fcmovnb
dec
sub
iret
rolb
fdivrp
xchg
xchg
push
jecxz
out
inc
and
mov
sbb
push
loop
push
ret
notb
pop
cmp
subl
push
das
scas
aad
outsb
push
pop
bound
dec
cmpsb
pop
test
cmp
or
bound
mov
jmp
push
jo
add
mov
clc
ja
xlat
sub
xor
add
jnp
push
mov
mov
loop
xor
cmpsb
mov
stos
ret
push
testl
ret
pop
ja
pop
push
hlt
arpl
push
mov
fnsave
mov
push
mov
xchg
aaa
push
pop
jae
fiaddl
push
repnz
xor
outsb
mov
mov
iret
add
cs
mov
dec
neg
mov
xor
lea
aas
sbb
add
sbb
scas
jns
adc
cld
imul
iret
outsb
or
insl
push
sub
pop
lods
mov
add
ficoml
xchg
pop
mov
mov
push
loope
mov
outsb
pop
fisubs
mov
cmp
or
sbb
iret
cmpsb
xor
mov
aas
roll
es
popl
ds
lret
jne
add
es
fldcw
test
cmpsl
add
data16
and
mov
rol
and
xchg
bound
lcall
mov
inc
sbb
pop
rorl
or
or
inc
inc
jmp
cmpsl
xlat
and
push
push
push
shrl
ds
xchg
mov
mov
jecxz
sub
sub
mov
add
pushf
mov
adc
imul
loop
std
cmc
mov
jle
iret
mov
pop
cs
mov
push
shl
lock
xchg
adcb
or
sahf
iret
pop
push
daa
mov
add
push
push
push
loop
aas
sbb
movsl
mov
inc
into
jge
jge,pn
sub
aas
ja
pop
sbb
out
push
sbb
pop
mov
imul
lcall
into
jo
cmc
cwtl
mov
pop
movsb
mov
mov
mov
pop
leave
cmpsb
mov
mov
mov
shlb
and
cli
lahf
inc
mov
xchg
stos
add
fildll
ja
es
fidivs
push
mov
sbb
or
es
cltd
mov
in
mov
xlat
add
xchg
push
pusha
pop
loope
xchg
pop
cmp
mov
sub
ds
mov
push
push
add
fildll
out
in
mov
lret
rclb
outsb
mov
into
push
subb
and
sbb
xlat
test
inc
or
add
pop
iret
xchg
sti
stos
push
fisubs
ret
mov
and
ret
xchg
mov
or
scas
push
cmp
jp
sti
pop
rorb
mov
jmp
pop
inc
fistpll
fadds
mov
cmp
pop
mov
sub
xlat
scas
rorb
dec
adc
xorb
nop
mov
addb
bound
iret
cli
call
xchg
lret
push
xor
jl
inc
ret
push
pop
cwtl
dec
sbb
dec
mov
divl
rcrl
cmpsb
push
stc
mov
int
mov
cmpsb
add
rcl
cs
out
lods
mov
ss
xchg
xchg
stos
lods
outsb
mov
xchg
adc
push
aas
push
sahf
jle
ret
inc
mov
lret
add
sbb
push
push
jne
ficoms
adc
xchg
cmp
iret
xlat
addl
sbb
mov
dec
ljmp
faddp
fimull
jl
xchg
dec
dec
stos
pop
or
mov
call
xchg
push
add
movl
fisubs
insb
mov
add
or
fidivl
xchg
add
mov
inc
lahf
mov
aas
sbb
xchg
cmp
push
push
in
lock
adc
out
mov
add
idivb
loop
jecxz
mov
cmp
mov
mov
shlb
push
add
pop
movq
mov
add
xor
mov
std
fs
or
xchg
ret
ss
xchg
outsb
and
push
dec
pop
mov
sbb
sahf
cmp
stos
or
push
push
cs
out
push
enter
sub
mov
push
xchg
or
mov
sbb
inc
aaa
cmp
popf
or
aaa
push
push
jp
push
mov
mov
bound
pop
pop
into
nop
xchg
ja
mov
arpl
daa
mov
inc
xlat
lea
cmp
jecxz
jno
push
jp,pt
xlat
sbb
stos
mov
out
pop
aas
xlat
mov
push
loop
dec
push
mov
out
pop
adc
push
mov
mov
inc
out
cmp
cmp
or
sub
fwait
bnd
fiaddl
out
dec
gs
fisubs
scas
iret
push
into
lahf
push
jae
mov
fisubl
jecxz
in
idivb
mov
mov
hlt
ja
cltd
arpl
mov
pop
iret
and
cs
pop
mov
stos
push
ljmp
fistl
xsaveopt
imul
ljmp
jecxz
mov
push
push
out
outsb
push
mov
adc
mov
divl
lcall
lods
push
mov
sbb
sbb
lcall
ss
mov
adc
fcmovnb
mov
sub
ljmp
lahf
adcb
jnp
insb
mov
dec
iret
adc
push
lcall
outsl
xor
sub
dec
pop
cmp
pop
push
aam
mov
hlt
xlat
rol
orb
and
xchg
mov
push
insb
push
sub
fldcw
gs
aad
sbb
es
push
ss
cmpsl
ds
inc
adc
iret
xor
testl
jecxz
push
cmpsb
xchg
bound
add
add
out
lret
xor
sbb
fisubs
enter
mov
sub
add
sub
add
add
mov
adc
xchg
and
ss
or
addr16
pop
mov
mov
test
xchg
xchg
push
and
mov
outsb
cmpl
out
repz
mov
in
cs
dec
xchg
fsubs
mov
mov
ret
pop
mov
pop
mov
lods
adc
xlat
dec
in
pop
or
adc
add
loop
push
call
ret
fcmovne
or
sarl
jl
imul
push
xor
push
mulb
sbb
pushf
hlt
mov
out
mov
pop
mov
sub
popf
nop
push
sub
push
enter
jl
aad
enter
add
ret
xor
sbb
xchg
pop
data16
cmp
xchg
sbb
ffreep
or
aaa
lds
add
fdivl
push
jns
fnstsw
jne
bound
xor
mov
dec
and
inc
dec
out
or
xchg
xchg
adc
push
sbb
pop
jb
cmp
subb
pushf
mov
mov
cmp
cmp
sub
pop
add
add
inc
sub
gs
dec
ljmp
out
adc
mov
cld
mov
inc
and
lcall
call
lahf
into
addr16
hlt
mov
dec
outsb
mov
cs
jl
cwtl
xchg
xor
add
lcall
es
ds
xchg
leave
pop
cmpsl
call
add
mov
mov
mov
push
lods
sub
aas
inc
ljmp
mov
mov
outsb
sub
mov
mov
idivb
stos
cwtl
xchg
cmp
loop
cmp
xor
das
inc
xor
add
xchg
inc
mov
fimuls
xchg
mov
or
mov
dec
bound
pop
push
ret
inc
lcall
inc
xchg
and
sahf
jbe
fidivrl
xor
js
ljmp
cmp
mov
adc
into
push
jmp
gs
ja
lods
subl
mov
inc
and
addr16
cmc
xchg
bound
sub
insb
mov
push
push
add
outsb
cmp
pop
mov
or
xchg
mov
xchg
and
or
push
out
push
add
ficomps
ljmp
iret
stos
cs
aad
fcmovnu
fs
pop
shl
inc
ljmp
test
sub
jno
fmull
sbb
inc
push
cmc
call
push
fistl
dec
stos
xor
jecxz
iret
je
xchg
nop
cmp
scas
push
sar
sbbb
dec
adc
bound
mov
stos
adc
sahf
push
jb
jnp
fisttps
aas
rolb
inc
xchg
cmpsb
push
dec
call
sahf
mov
pop
mov
cmp
out
scas
xor
gs
sbb
mov
stos
sti
or
imul
push
inc
mov
xorb
imul
fs
xchg
fucomi
sub
imul
push
xchg
aaa
jae
xor
dec
mov
ret
rcll
sub
adc
add
bound
inc
mov
push
ljmp
mov
add
adc
mov
xchg
pop
mov
sbb
es
iret
lcall
ss
xchg
mov
mov
mov
push
lods
push
mov
mov
mov
enter
add
vshufps
fst
or
xchg
les
bound
push
cmpsb
mov
mov
loop
xor
push
sbb
test
mov
mov
addl
ds
out
jae
into
cmp
cmc
popf
push
ret
lss
loope
push
out
sbb
xchg
sbb
xor
push
outsb
pop
and
icebp
shrl
into
mov
mov
test
jno
int
add
push
fildl
xchg
mov
notb
mov
mov
xor
xor
out
test
xchg
enter
mov
mov
cmp
or
pop
das
mov
mov
fsts
in
outsl
fwait
ljmp
gs
mov
and
sub
gs
sbb
gs
or
filds
test
iret
or
pusha
sub
mov
push
mov
fimull
aad
dec
jae
ss
pop
inc
arpl
in
mov
stc
push
xchg
mov
pop
xchg
add
cs
dec
cmp
sarl
jecxz
jb
lret
or
mov
sbb
pop
arpl
and
fisubs
lcall
mov
sahf
shll
mov
pop
push
pop
int3
inc
cld
mov
or
sbb
push
ja
bound
pop
scas
lock
test
test
lock
push
outsb
dec
push
mov
inc
andb
bound
sbb
ds
mov
into
jecxz
push
mov
pop
outsb
ss
out
outsb
cmpsb
decb
push
ret
inc
lcall
dec
shll
xor
int
cld
xor
jecxz
cmpsb
int
dec
into
iret
xlat
hlt
inc
rorb
mov
sub
bound
movl
ret
or
jbe
scas
aad
dec
push
call
sub
in
in
into
mov
aam
lahf
cld
xchg
fisubrs
lock
loop
inc
stos
std
mov
gs
lods
call
mov
or
loop
imul
scas
push
cmc
mov
iret
mov
enter
ficomps
add
mov
push
in
pop
xor
test
mov
adc
hlt
pop
sub
imul
outsb
fists
cmp
imul
sbb
ret
jo
les
cmp
shl
xchg
pop
stos
push
push
sub
orl
jae
or
in
mov
bound
jae
outsb
and
loop
sub
jbe
into
fdivr
xorl
mov
outsb
pop
or
mov
pop
hlt
inc
mov
out
cmpsb
inc
cmp
inc
test
mov
or
insl
into
loop
fs
out
jno
push
je
ret
shlb
jg
scas
push
ret
lds
sub
mov
rcrb
dec
sub
inc
fcmovnb
mov
pop
adc
xchg
sahf
pop
adc
sub
bound
xchg
imul
mov
cmp
scas
sub
mov
push
mov
mov
movl
les
daa
scas
add
insl
imul
call
out
mov
fiaddl
dec
mov
inc
loopne
movsl
mov
add
mov
mov
sahf
into
data16
insl
mov
adc
adc
or
lcall
les
int3
xchg
ret
cmp
jge
lcall
mov
lcall
pop
mov
jb
inc
test
pop
add
adc
mov
sbb
je
stos
inc
or
mov
ds
inc
ficoml
cmp
ret
psrlq
outsb
and
sub
fs
ss
movsb
mov
ret
jecxz
es
cmc
mov
addr16
sbb
gs
lahf
and
cmpsb
lods
sahf
es
xor
call
adc
lret
loop
out
push
fsubl
sub
data16
cmp
lods
lds
leave
lcall
out
cmp
orb
pop
pop
push
or
scas
hlt
outsb
fstpt
push
add
jae
sub
cmpsl
mov
pop
dec
daa
test
into
es
mov
mov
iret
dec
movsl
imul
sbb
fiaddl
imul
pop
stos
xlat
xor
push
inc
xchg
es
ret
out
cld
add
cmpb
push
lods
fists
nop
out
ds
sbb
add
subb
xchg
out
hlt
adc
push
push
push
push
pop
push
sub
loop
push
xor
in
pop
xchg
hlt
leave
ss
mov
push
or
mov
sub
inc
mov
test
xor
mov
add
push
inc
mov
mov
and
or
les
add
adc
iret
mov
push
cld
mov
mov
pop
ds
and
adc
dec
shrb
leave
hlt
lds
sahf
cmpsb
cmp
data16
aas
mov
inc
repz
dec
adc
adc
add
mov
cmp
repnz
mov
jle
fistl
loop
outsb
push
subb
push
les
mov
adc
je
mov
fldt
xchg
test
sub
ds
or
mov
push
mov
cmp
adc
shr
or
dec
stos
adc
stos
mov
ds
or
mov
mov
xchg
mov
cmp
aas
sub
in
pushl
mov
xchg
inc
mov
mull
mov
xchg
xlat
or
mov
xor
fcompl
cmpsb
ss
fwait
push
fstpt
xor
xchg
ja
hlt
sub
xlat
mov
mov
xchg
es
rolb
mov
popf
dec
stc
lret
in
mov
push
outsb
in
inc
add
xchg
arpl
mov
aas
jne
pop
js
push
daa
lcall
fisttps
cmp
ret
cmp
je
fidivs
sahf
mov
mov
test
push
mov
pop
push
aam
push
mov
dec
push
repnz
pop
push
mov
mov
pop
xor
mov
ds
enter
aaa
sub
outsl
push
jge
fsubl
mov
sub
imul
addb
subl
aam
xchg
cs
addr16
push
in
loop
add
je
ret
ds
and
fiaddl
mov
movl
in
mov
into
sub
and
out
xchg
dec
scas
cmp
xor
xor
cmpsl
add
mov
sbb
mov
add
stos
adc
imul
add
bound
sbb
outsb
push
cmp
pop
ljmp
pop
ss
pop
rolb
push
xlat
mov
pop
push
aas
adc
fistpll
ret
dec
rcr
in
lcall
es
shll
sbb
add
sub
mov
xchg
dec
pop
nop
push
or
rorb
out
sub
xchg
jb
dec
aas
adc
aad
pop
shlb
mov
subb
xchg
inc
xchg
mov
mov
sub
xchg
stos
inc
pop
mov
mov
xchg
fucomi
mov
inc
cs
inc
stc
shrl
jl
dec
xor
mov
into
or
mov
or
and
cmp
enter
dec
aaa
inc
adc
jg
icebp
cmp
xchg
add
mov
lcall
loop
cmp
imul
movq
push
mov
mov
pop
add
loop
insb
jp
jbe
ret
add
xor
sbb
das
nop
daa
xor
shll
btc
out
mov
or
inc
sub
ret
and
mov
xor
mov
outsl
lds
jb
pop
scas
xchg
sahf
dec
insb
ficoms
aaa
mov
out
adc
mov
popf
push
pop
mov
sbb
xchg
sarl
mov
and
push
mov
fcmovbe
and
push
xchg
sbb
sbb
loop
cmp
stos
lods
pop
push
icebp
ds
pop
sub
cltd
stc
add
scas
mov
xchg
jl
data16
push
sahf
stos
jno
mov
xorb
jl
neg
mov
rcll
xchg
imul
mov
es
adc
sbb
dec
jmp
push
mov
ljmp
inc
mov
xchg
xchg
jg
dec
ss
jg
shll
pop
push
out
dec
aad
mov
stos
mov
or
or
add
mov
xchg
ret
xchg
data16
out
push
sbb
out
in
lret
inc
out
mov
ds
or
or
inc
cmpsl
aaa
xchg
stos
xor
push
xchg
lock
fildll
sub
test
jecxz
pop
or
push
cmc
mov
out
fisubrl
add
mov
popf
insl
popf
add
cmp
jecxz
and
mov
mov
loop
jle
add
and
pop
jbe
into
sbbb
xchg
out
xchg
gs
scas
adc
dec
insb
leave
pop
icebp
inc
push
std
sbb
pop
dec
testb
pusha
adc
shlb
ds
push
push
fcompl
sbb
pop
or
sub
pop
out
imul
out
push
lcall
mov
fimuls
mov
mov
cmp
dec
mov
mov
faddl
ds
shlb
xchg
inc
inc
rorl
xchg
pop
aam
mov
jae
fisubl
lds
test
imul
jl
decl
inc
pop
loop
jl
xchg
test
outsl
sbb
repnz
mov
ret
bound
nop
outsb
mov
jg
mov
cmp
or
repz
lds
mov
push
cmpsb
incb
xchg
movb
dec
or
lret
cld
daa
cs
xchg
xchg
push
jmp
cmpsb
xorb
scas
and
out
xlat
or
pop
and
jno,pt
cmpsl
dec
out
and
lret
stos
xor
mov
jg
pop
pop
push
xor
ds
jecxz
imul
push
inc
mov
xchg
in
sahf
lcall
and
cmp
sub
xchg
mov
xchg
xlat
fisubrl
aam
mov
xchg
rolb
mov
je
cmpsb
ret
push
cmpsl
push
bound
js
mov
push
adc
add
lcall
into
adc
jp
loop
push
ret
jl
movsb
iret
mov
cmp
xor
jnp
fcompl
scas
jbe
sub
push
repnz
lcall
ss
or
sub
fwait
sub
int
mov
sub
cmp
loope
or
aas
ss
fwait
mov
or
add
daa
andb
loop
aad
mov
or
mov
xlat
mov
loop
push
subb
stc
negl
out
push
shlb
and
and
insl
or
mov
xchg
stos
push
xor
xor
push
stos
pop
pop
imul
es
jmp
mov
out
icebp
push
in
ljmp
loope
div
add
inc
xchg
sub
xchg
fcom
push
lret
sub
in
push
add
mov
imul
sub
js
daa
popw
or
adc
sarb
xlat
push
add
push
mov
jle
mov
or
ss
or
out
call
add
mov
sbbb
lcall
sbb
in
push
sbb
push
dec
jnp
pop
sahf
stos
adc
xchg
or
insl
int
and
inc
or
adc
test
mov
mov
dec
mov
imul
mov
stos
xchg
mov
adc
imul
mov
xor
lcall
push
push
scas
in
push
gs
dec
in
fists
mov
into
inc
cmp
xlat
push
lcall
jne
and
out
iret
fisubs
repnz
push
sbb
lea
lcall
mov
push
add
nop
dec
inc
dec
push
rol
jmp
xchg
fs
dec
mov
aaa
or
xchg
ret
test
pop
cmpsb
xchg
out
addr16
addr16
mov
and
jmp
mov
notb
mov
cmp
inc
es
mov
or
shrb
mov
sub
push
idivb
or
mov
or
divl
ss
add
jp
ljmp
mov
stos
out
add
adc
mov
into
loopne
cmc
cmc
sarb
sbb
xor
cs
adc
into
fucomi
sbb
bound
pop
mov
wbinvd
inc
lods
xchg
popf
mov
xor
xchg
xchg
ret
jg
ret
cmpb
and
inc
inc
push
and
adc
insl
std
push
iret
or
outsb
cmc
xor
ret
sahf
ror
jo
into
push
bound
in
mov
sbbb
cmp
stos
enter
sub
jecxz
fidivrs
lds
mov
cmp
enter
rcl
jle
addr16
nop
lds
aam
and
jecxz
sub
cs
jecxz
adc
into
fsubrs
cmp
sub
addr16
fidivrl
mov
mov
int
adcb
push
cwtl
xchg
xacquire
cmp
mov
cmp
mov
sub
or
pop
pop
xchg
mov
sub
ja
sub
xlat
and
xor
aas
leave
jb
mov
scas
in
mov
pop
jae
push
ret
lods
sub
xchg
scas
hlt
push
cs
or
ljmp
mov
stos
or
jbe
into
pop
data16
addb
inc
loop
mov
rorl
pop
fmuls
cmpsl
pop
mov
pop
cld
ret
ret
push
lahf
mov
lods
rcl
or
stos
or
cwtl
mov
stos
mov
adc
sub
mov
push
mov
mov
mov
dec
sbb
lahf
jle
sbb
ds
adc
out
adcb
xlat
inc
enter
inc
mov
int3
xor
xlat
push
js
push
lcall
xchg
ljmp
push
cld
dec
in
mov
int3
loop
sub
mov
pop
lcall
xchg
orb
mov
mov
mov
mov
shlb
add
and
movq
or
mov
xchg
insb
out
add
pop
fisubrl
push
sub
mov
shrb
fcmovnu
inc
bound
dec
add
mov
ds
adc
sbb
pop
cwtl
outsb
repnz
push
push
mov
push
cmp
pop
scas
fcomps
in
iret
lcall
add
mov
and
xor
push
fidivs
or
add
jbe
xor
xchg
cmpsb
sbbb
push
clc
aad
iret
pop
sti
out
mov
adc
cmpsb
fisubs
and
and
clc
fildl
jecxz
mov
lods
ret
shlb
add
mov
xchg
push
aam
lods
xchg
jecxz
mov
cmp
lods
pop
sbb
cmpsb
sbb
cli
dec
adcb
popa
mov
and
mov
imul
lret
cmc
dec
into
xchg
mov
sbb
inc
push
outsb
icebp
pop
pop
rol
je,pt
mov
lcall
scas
xchg
xor
les
enter
adc
xor
icebp
aas
cmc
mov
cmp
inc
and
jmp
push
flds
in
add
adc
push
xlat
push
aad
les
inc
sahf
push
jle
or
inc
rcrb
pop
stc
xchg
cmp
shrl
or
mov
and
loopne
dec
cli
or
setne
xor
ds
sub
lock
cmp
adc
loop
sarb
xchg
mov
push
aas
jno
mov
cwtl
push
into
inc
ficoms
outsl
mov
jecxz
and
cmp
cld
and
cmp
es
outsl
out
bound
scas
mov
push
and
push
dec
xchg
and
sbb
fsubl
adc
cmpsb
sub
mov
test
xchg
loop
test
sub
xor
lods
movsbl
add
sahf
mov
lcall
dec
cltd
xor
iret
xchg
ret
push
jecxz
sub
popa
and
bnd
mov
dec
and
add
adc
pop
outsb
ja
lcall
sahf
sbb
rcll
scas
aas
aaa
sub
inc
and
loopne
stos
xchg
rol
mov
xlat
fiaddl
xorb
xlat
ss
dec
push
pusha
and
inc
imul
out
mov
or
mov
fmul
fucomi
cmpsb
outsb
es
ss
outsb
add
cmp
sbb
mov
sahf
xor
xchg
xlat
imul
lcall
mov
ficompl
loop
push
add
ret
mov
or
push
push
sub
ds
push
push
arpl
aam
jo
cmp
popw
or
aam
pop
xchg
push
ds
lcall
bound
pop
mov
mov
jg
loopne
das
sub
stos
mov
jns
rorb
push
ja
ret
xlat
push
add
dec
cwtl
test
dec
jae,pn
gs
add
mov
sbb
mov
sbb
cmpsb
cmpsl
xchg
push
mov
ret
adc
loopne
sbb
xchg
clc
add
cmc
insl
mov
loop
cmp
xchg
jmp
lcall
sbb
inc
adc
add
xor
jbe
mov
mov
movsl
test
or
rcl
xor
in
dec
mull
fimuls
cmpsb
inc
xchg
stos
mov
add
mov
scas
ret
lock
xchg
push
repz
add
mov
rclb
xchg
mov
mov
push
and
mov
add
ret
add
xlat
movhps
adc
mov
test
xchg
push
fiaddl
adc
mov
sbb
sbb
es
lea
ljmp
sbb
rolb
xchg
pop
cmp
mov
fucomi
push
adc
mov
shrb
rclb
leave
in
mov
sub
push
jecxz
roll
into
cmp
ds
icebp
mov
sub
xor
dec
xchg
sub
mov
push
mov
sar
lcall
push
mov
xchg
xchg
inc
jns
in
mov
sub
push
ljmp
fs
sbbb
loop
rclb
xor
push
and
aad
pop
inc
mov
scas
arpl
fistpll
mov
mov
mov
icebp
call
mov
sbb
fcmovnu
rcll
ret
xchg
xchg
push
mov
xor
roll
sbb
and
jp
adc
adc
in
es
shlb
into
cs
mov
dec
mov
dec
ficoml
lods
add
push
roll
xchg
cmp
cwtl
and
outsb
out
cmp
insl
and
rol
adc
es
mov
fcompl
push
mov
sbb
dec
mov
shr
sub
test
pop
xorb
cmp
psubd
xchg
subb
sarl
dec
mov
bound
push
push
mov
add
mov
lret
xchg
loopne
call
out
fs
push
xor
mov
mov
push
push
iret
push
inc
xchg
outsb
mov
pop
scas
push
cmpsb
stos
fcomi
rorb
into
ss
cs
lahf
movsb
pop
inc
loop
xor
or
aaa
mov
mov
cmp
xor
fdivl
in
mov
out
clc
mov
inc
inc
and
mov
dec
aad
mov
pop
rcll
or
sub
sub
rorb
hlt
mov
inc
xchg
sarb
bound
mov
mov
push
aad
out
mov
xor
push
push
mov
adc
xchg
hlt
das
ret
pop
mov
adc
xlat
xchg
xorb
and
push
inc
push
mov
sbb
add
and
cmp
bound
and
push
sbb
inc
aad
dec
xor
jecxz
xchg
loopne
sub
mov
mov
push
sub
sahf
dec
xchg
push
jg
xor
mov
xor
out
cs
subb
mov
sbb
sub
sub
rol
mov
jbe
xchg
aad
inc
xchg
cmp
jne
mov
into
lcall
sbb
or
aam
daa
push
ss
push
push
dec
cwtl
fmull
std
ret
mov
and
mov
aam
push
andl
fimull
add
sbbl
pop
push
cmp
mov
sbb
lret
fadds
inc
jge,pt
jg
hlt
lcall
push
andb
shll
ret
xchg
ja
mov
leave
aam
mov
rorb
pop
pop
and
xchg
mov
aaa
or
fiadds
and
es
mov
lahf
or
ljmp
bound
iret
cmp
ret
outsb
push
dec
cli
add
into
sbb
lcall
scas
jbe
inc
js
mov
subb
call
rorb
scas
mov
fidivl
pop
cs
push
jne
out
mov
mov
pop
orl
rclb
pop
fiaddl
inc
push
dec
jmp
cmp
xor
mov
fadds
shll
sbb
fucomip
js
mov
mov
ficomps
sub
es
adc
xchg
repz
mov
insl
dec
mov
push
sub
xchg
or
xchg
ds
cmpsb
pop
dec
cmp
or
jbe
or
fdivl
jecxz
sub
in
cld
adc
stos
xchg
mov
scas
mov
testb
add
ss
fidivrl
and
std
or
sub
adc
rol
pop
sahf
add
wbinvd
sahf
mov
add
push
mov
sbb
loop
push
push
fldt
lcall
and
imul
dec
es
mov
es
push
fbld
mov
xchg
pop
outsb
gs
jns
lcall
ds
and
or
push
push
sub
dec
or
ss
sbb
add
in
inc
mov
cmp
sub
add
iret
es
aaa
lahf
out
in
xchg
into
ror
xlat
push
mov
out
bound
push
in
das
iret
inc
pop
sbb
shr
mov
out
xor
jo
mov
or
ret
inc
out
pop
cld
dec
mov
mov
inc
pop
fidivrl
adc
and
int3
push
or
loopne
add
mov
aam
push
aaa
in
or
test
mov
xorb
and
dec
inc
cmp
mov
sub
mov
ret
sub
cwtl
or
push
lods
add
ret
mov
push
xchg
jg
cli
xchg
loopne
sub
ret
out
and
scas
and
push
sbb
les
mov
fistpl
ss
lcall
pop
into
and
or
pop
or
sbb
ficoms
and
dec
dec
ljmp
add
bound
cmp
ret
gs
subb
or
rorl
lret
movsl
fcmovnbe
lcall
div
mov
test
out
das
test
das
mov
xchg
das
and
mov
sbb
sub
jae
imul
ds
call
sub
iret
fisubs
pop
and
adc
addr16
mov
mov
cmp
pop
xchg
pop
cmp
push
add
jae
push
add
mov
xchg
xlat
ss
cmpsb
mov
mov
loop
movsl
push
add
and
mov
jbe
loop
mov
mov
into
mov
bound
loope
or
lea
scas
aam
or
iret
ret
into
adc
push
cmpsb
add
je
push
xor
mov
insb
lods
adc
xor
imul
rcr
ds
enter
mov
inc
ret
sub
ret
push
sarb
lcall
test
cmp
adc
pop
pop
daa
insl
es
test
clc
push
in
jmp
xor
cli
xchg
in
es
cs
adcb
sahf
cmpsb
es
or
and
les
push
mov
jecxz
fs
ret
cmp
out
mov
hlt
cmpsb
sub
push
mov
gs
mov
ret
iret
sbb
fiaddl
xchg
mov
ja
mov
xchg
or
xlat
xor
and
push
out
or
or
loop
cmp
imul
mov
cs
push
dec
stos
add
push
pop
xchg
bound
rolb
sbb
xchg
ja,pn
mov
push
sub
xor
or
rclb
pop
outsl
hlt
mov
cmp
lcall
and
stc
adc
mov
mov
jo
mov
mov
rcrl
pop
jecxz
cmp
stos
mov
inc
cmp
or
mov
xor
mov
ds
ss
sbbl
es
addb
pop
pop
xchg
das
mov
adc
inc
and
add
ds
dec
iret
test
xor
loop
inc
lods
cs
stos
rolb
mov
movsl
and
stos
ja
lcall
movsl
push
jne
add
scas
ror
xor
add
mov
test
cld
push
lcallw
sub
sbb
and
xlat
jle
movsl
ret
cmc
mov
push
out
fistpll
sub
cld
push
xor
mov
mov
out
stos
fs
xchg
add
push
inc
imul
mov
scas
testb
jno
jmp
into
loop
inc
ds
sbb
out
ljmp
fists
scas
xchg
push
mov
data16
dec
mov
dec
or
push
ficoms
pop
fnclex
stos
xchg
mov
pop
dec
mov
aaa
lret
das
push
and
inc
lcall
mov
sar
push
mov
repz
push
bound
mov
cwtl
sbb
push
push
xchg
or
jae
jl
jg
pop
and
push
inc
inc
repz
in
aam
lods
adc
push
repnz
push
sahf
lret
pop
ret
sub
and
and
mov
mov
xor
adc
dec
inc
xor
fisubl
test
cmp
xchg
xor
sahf
cli
jecxz
inc
aaa
iret
pushf
negl
dec
pop
int3
or
jbe
fisubl
xchg
cli
std
js
jl
hlt
mov
add
mov
and
push
movsb
fistl
cmp
into
aas
or
stos
pop
inc
xchg
orl
mov
es
test
ds
lods
pop
add
mov
mov
jno
ja
inc
aad
int3
into
push
fcomip
dec
mov
xchg
fisubrs
sub
pop
pop
packssdw
cwtl
sbbl
xchg
mov
push
bound
pop
push
jne
adc
push
or
mov
pop
mov
sbb
mov
push
bound
xchg
and
mov
pop
pop
gs
fsubr
cli
push
cltd
pop
ds
test
push
pop
or
dec
ss
in
jmp
xor
mov
push
incl
push
inc
mov
ja
stos
mov
fistps
iret
mov
sbb
push
sbb
push
mov
push
lret
ret
push
ret
ss
xchg
ss
cltd
lds
dec
mov
pusha
mov
inc
mov
orb
cmpsb
adc
mov
loop
xchg
ds
dec
inc
or
adc
imul
jecxz
es
icebp
or
lds
idivl
insl
std
enter
into
mov
ja
push
dec
aas
inc
pop
cmp
mov
mov
inc
xor
push
mov
sahf
popf
cmpsb
cmp
dec
cli
xchg
pop
push
xchg
ds
push
cld
cmp
add
dec
cmp
mov
mov
cmp
dec
push
les
ss
mov
adc
bndldx
xchg
xor
cmp
add
adc
in
adc
xchg
loope
fimull
adc
sub
push
push
mov
and
push
rcrb
adc
mov
movsl
imul
filds
add
mov
cmp
push
push
sbb
add
inc
pop
cld
and
mov
fildll
adc
imul
push
mov
cmp
scas
les
into
or
pop
hlt
sbb
stos
xchg
mov
mov
jecxz
xchg
add
rorb
adc
add
jge
sahf
jno
mov
xchg
scas
inc
imul
fisttpl
cwtl
sahf
mov
int
mov
imul
push
xchg
xlat
xor
dec
fisttpl
lods
mov
ja
iret
test
xchg
push
jae
mov
fisubrs
cmp
ficomps
mov
pop
pushf
xlat
aad
lret
push
xchg
or
lods
jb
pop
iret
aad
jbe
pop
jecxz
fs
ss
sub
push
mov
push
dec
into
leave
cwtl
adc
lea
sahf
loop
dec
daa
inc
out
xlat
enter
inc
xchg
movb
jne
xor
inc
nop
icebp
in
faddl
hlt
push
push
pop
push
dec
dec
pop
xorl
sub
shlb
inc
add
mov
mov
scas
mov
movsbl
xor
mov
xchg
push
ja
inc
int
aam
mov
lods
mov
push
jecxz
sbb
or
pop
mov
lods
dec
movb
imul
xchg
sub
adc
test
scas
push
hlt
fisubrl
pop
xchg
ds
test
iret
mov
dec
fistpll
or
push
or
add
jecxz
xchg
into
mov
mov
pop
ds
clc
bound
sbb
int3
xchg
jmp
aam
inc
mov
out
push
jle
ret
lret
imul
xchg
lea
mov
mov
mov
mov
or
inc
leave
bound
ds
jg
mov
push
inc
add
push
cs
mov
inc
xchg
mov
push
or
outsb
add
scas
ret
stos
pusha
ret
sub
push
mov
iret
inc
decl
jle
xchg
adc
outsl
and
push
or
push
idivl
jle
xor
dec
mov
push
pop
jecxz
adc
es
dec
push
xchg
cltd
add
mov
divb
stos
rorb
sarb
mov
ret
sarl
ss
fidivrs
mov
xchg
push
adc
gs
mov
cmpsb
imul
sbb
je
xchg
add
inc
ja
test
fistpll
mov
xchg
xor
loop
jbe
ja
loop
shlb
hlt
and
push
mov
shl
stos
or
iret
mov
xchg
shlb
ds
adc
xchg
mov
or
cmpsl
pop
in
push
ds
inc
cmpb
cmc
lods
out
mov
mov
push
scas
jecxz
jecxz
in
in
cmpsb
inc
mov
sbb
mov
cmp
adc
ja
and
loop
push
out
inc
jecxz
lcall
inc
and
push
lods
mov
movb
mov
adc
sub
pop
je
addb
stos
or
mov
out
cmpsb
dec
into
lcall
jecxz
out
bound
ds
sub
and
in
fiaddl
jbe
add
push
imul
std
dec
lods
and
add
test
adcb
sbb
aam
adc
aad
xchg
outsb
push
sbb
enter
gs
stos
data16
xchg
dec
ss
jae
mov
es
pop
xor
xchg
push
imul
sahf
bound
xchg
outsb
adc
loopne
jmp
fisttps
gs
insl
jle
xchg
mov
inc
fdivrs
push
iret
loop
loope
or
mov
jge
push
pop
jb
inc
orb
dec
push
xor
xchg
or
mov
mov
mov
push
and
add
add
adc
inc
or
sub
mov
add
iret
dec
push
pop
loope
fstpt
enter
jl
into
fiaddl
daa
or
or
addb
mov
dec
mov
xchg
orb
push
jbe
fistl
mov
ret
xchg
aam
ljmp
dec
hlt
lcall
push
pop
lcall
into
je
mov
lret
xchg
adc
mov
ret
jl
push
int3
mov
bound
mov
outsl
gs
gs
cmp
mov
cs
in
rol
dec
bound
xor
call
ja
add
jo
adc
mov
and
sub
and
sbb
es
not
mov
lahf
inc
mov
dec
sahf
and
lea
xorb
cmp
and
pop
or
insb
mov
and
sub
or
imul
xchg
in
es
sahf
jb
je
ljmp
int3
out
movb
dec
and
popf
push
stc
mov
sub
mov
adc
adc
cmp
into
inc
and
in
mov
insl
stos
and
jecxz
xchg
outsb
fildll
xor
mov
aas
or
mov
cmpsb
inc
jg
rcrb
pop
std
xor
leave
add
push
fldt
out
push
es
push
push
sub
orb
cmp
lock
jmp
inc
inc
or
mov
push
test
dec
dec
push
pop
je
cmp
or
or
cmp
outsb
and
add
sbb
frstpm(287
xchg
and
stos
xchg
push
mov
adc
lcall
imul
add
scas
clc
mov
lods
cmp
ret
cmc
mov
icebp
imul
cli
aaa
lahf
sbb
out
or
outsb
nop
dec
adc
imul
jecxz
dec
add
adcb
sarl
dec
mov
push
or
add
loop
or
or
mov
mov
lret
sbb
in
xlat
scas
mov
cmpsb
mov
cmpsb
aam
repz
jp
mov
fucomip
pop
fidivs
mov
xchg
dec
rcll
aam
mov
dec
mov
xor
cvtpi2ps
shl
mov
dec
and
nop
daa
mov
xor
push
lahf
ret
outsb
cmp
add
mov
out
cmp
or
arpl
rorl
xor
adc
scas
jmp
add
push
jo
aam
adc
pop
shrl
mov
sahf
fiaddl
lcall
aad
xchg
out
cs
inc
mov
push
sbb
es
aam
xor
sub
mov
ret
xlat
lods
sub
inc
cmp
fistpl
jle
dec
sub
pmaddwd
cmp
sti
mov
enter
mov
push
cs
or
shrb
jmp
js
and
mov
ret
mov
mov
mov
and
mov
imul
ljmp
cltd
jae
call
push
pop
dec
jp
mov
addb
push
xor
mov
repz
xchg
dec
push
adc
fisubs
xlat
pushf
push
enter
lcall
push
ret
mov
bound
adc
mov
iret
lret
cs
push
ficoms
lcall
mov
into
aam
xchg
fidivl
or
imul
scas
mov
adc
pop
mov
bound
xlat
ret
mov
aas
ds
ret
imul
and
into
lret
xchg
cmp
adc
mov
repz
outsb
test
add
add
test
inc
fdivp
out
ja
push
dec
mov
loop
stos
imul
inc
pop
add
push
hlt
push
mov
ffreep
iret
sbbb
ret
lea
lcall
xchg
push
xchg
sub
mov
jmp
sub
or
jg
repz
adc
xor
xchg
pop
xor
stos
jbe
fnclex
dec
mov
cmpsb
cwtl
push
add
xchg
movl
fdivrl
cmp
mov
sbb
pop
push
mov
ds
adc
rclb
add
gs
mov
ficoml
inc
lret
jp
gs
or
movsb
xchg
sub
imul
inc
push
mov
pop
sbb
ret
jecxz
pop
sub
int3
mov
cmp
dec
es
int
xchg
es
xchg
mov
add
mov
adc
dec
lret
jge
xor
xorb
xlat
jno
cmp
cmp
sub
ret
cld
push
push
sub
test
cmp
loopne
xchg
xchg
loope
mov
xlat
inc
out
mov
mov
iret
pop
arpl
and
outsb
inc
lds
bound
lcall
mov
sub
cmp
mov
mov
popl
pop
fnsave
mov
pop
sbb
sahf
xor
mov
fnsave
std
fcompl
das
adc
fwait
popl
cmp
mov
movsl
pushf
lcall
add
or
pop
insb
push
push
adc
sbbl
movsl
push
aam
push
outsb
xchg
data16
pop
xchg
sub
mov
and
pop
jg
sub
fcoml
insb
gs
iret
incl
sti
xchg
jo
push
mov
mov
cmp
pusha
and
push
mov
jo
mov
fwait
xor
xchg
xchg
lcall
cs
repnz
xchg
inc
popf
in
scas
gs
push
mov
xchg
lods
pop
popf
mov
jmp
ds
push
mov
psrld
xor
bound
inc
fidivs
mov
cmc
pop
push
push
ds
jle
jno
adc
xchg
xlat
mov
inc
push
aam
gs
inc
jp
inc
push
lret
or
fidivrs
or
mov
stc
daa
stos
mov
ret
loopne
or
mov
cmpsl
sub
scas
xchg
fistl
cmp
cmp
in
or
shrl
pop
lds
add
mov
push
adc
es
mov
mov
iret
sub
es
pop
repnz
cld
cmp
fists
ljmp
mov
ds
jmp
js
inc
add
adc
add
inc
sub
cmp
mov
push
pushl
call
sahf
not
push
bound
scas
mov
cmp
dec
or
jne
mov
fidivrs
mov
ss
sbb
ret
into
add
sub
mov
ljmp
pop
xor
scas
push
push
and
xchg
loop
cmpsb
imul
xchg
sbb
ss
iret
rol
call
push
sti
mov
jle
imul
scas
sbb
xor
pop
andl
cmp
and
out
or
out
ret
xor
leave
add
sbb
add
dec
mov
inc
sahf
push
mov
jne
push
xor
ret
pop
cmp
add
mov
pop
mov
mov
ret
fiaddl
dec
add
test
aam
sbb
push
add
test
ds
aam
repnz
mov
stos
xchg
cmp
ljmp
jecxz
adc
test
adc
into
ret
cmp
adc
mov
adc
mov
xchg
xlat
and
imulb
dec
mov
lcall
outsb
lods
xchg
jecxz
rcrl
cmp
out
and
sbb
inc
push
mov
loop
sub
sub
xchg
ret
jle
inc
push
and
rcll
sbb
outsb
fstpt
mov
mov
add
pop
cmp
negb
sbb
xchg
push
pop
cmp
xchg
fs
mov
and
into
sahf
or
mov
fisttpl
mov
mov
dec
inc
push
add
out
subb
mov
inc
decb
daa
iret
or
fimull
mov
xchg
movl
into
sub
stos
loop
cld
out
es
jnp
xchg
sub
push
stos
xchg
xor
pop
jno
sub
xchg
rcrb
adcb
iret
xchg
ds
push
divb
adc
lahf
mov
sti
cld
mov
sub
adc
subb
sbb
cmp
xlat
mov
xchg
xchg
scas
cmc
sub
mov
imul
outsb
scas
push
add
sbbb
sub
sbb
ret
sub
xor
xchg
arpl
pop
ss
dec
fistpl
push
push
iret
fidivrs
cs
adc
push
das
lods
pop
push
cwtl
lcall
outsb
jmp
push
dec
sahf
iret
mov
dec
mov
daa
mov
sbb
scas
or
jno
push
mov
shrb
je
cs
pushf
mov
sbb
out
sub
cmpsb
dec
sub
xchg
ret
and
jg
mov
aas
inc
cld
adc
fiadds
push
cmp
push
jle
rol
mov
paddd
fistpl
shl
cs
lret
hlt
mov
sahf
fistpl
push
xor
test
cmpsb
xchg
or
mov
mov
jbe
out
rolb
ret
xchg
jmp
outsb
test
in
xchg
out
mov
loope
mov
adc
pop
xchg
rorb
shll
jecxz
ficoml
outsb
lcall
test
loop
jo
fwait
cli
in
jecxz
sub
inc
scas
xor
and
pop
stos
cmc
call
lcall
push
xlat
movsb
ss
sub
xor
ficompl
mov
push
adc
rol
mov
imul
iret
mov
sub
mov
push
out
jne
inc
out
out
orb
xor
xlat
pop
sub
addb
or
jle
cld
in
sbb
push
sbbl
or
add
fisubl
mov
xchg
mov
push
push
shll
pop
or
jbe
sub
bound
lcall
loope
jne
and
xor
ljmp
push
lock
outsb
mov
push
xchg
or
ds
mov
sbb
adc
inc
js
and
cmpsb
iret
or
xchg
rorl
push
jo
ss
push
or
push
push
and
enter
scas
push
out
mov
filds
mov
cmp
push
das
insb
and
movsb
idivb
mov
push
pop
mov
push
les
rcll
ficoml
ss
iret
xchg
xlat
rcrb
xor
adc
push
imul
hlt
mov
fbld
pop
mov
push
cmp
loopne
sbb
jp
xchg
xchg
xchg
dec
mov
into
mov
loop
lock
mov
dec
mov
or
stc
cmpsl
into
pop
lret
in
lods
ficompl
jl
jno
push
or
mov
pop
repnz
mov
or
sbb
cmpsl
dec
pop
pop
cmp
aaa
dec
inc
daa
loop
daa
jp
mov
pop
sbb
xchg
sub
lds
adc
stos
invd
fistpll
ljmp
jne
sub
cmpsb
mov
pop
into
mov
cmp
adc
and
push
fcmovu
and
push
push
push
icebp
add
or
push
push
dec
es
pop
fistpl
push
push
push
inc
mov
push
jp
and
imul
inc
popf
pop
xchg
das
mov
movl
or
test
inc
adcb
and
adc
mov
cmp
pop
or
or
iret
mov
subb
mov
imul
fbld
ds
lods
andb
test
dec
fstpt
xchg
fwait
roll
ds
mov
mov
pusha
add
lret
jne
fisubl
xchg
adc
outsb
stos
push
ret
mov
adc
insb
xchg
sbb
mov
push
inc
bound
jg
and
add
pop
in
mov
in
and
mov
shll
iret
inc
loop
mov
cmp
loopne
push
cmp
adc
mov
jl
pop
mov
mov
push
movl
push
imul
ss
fidivrs
inc
mov
xchg
dec
addb
push
bound
add
cld
mov
mov
push
es
push
test
ror
xchg
iret
push
mov
mov
popa
mov
inc
in
mov
xchg
rorl
ljmp
cs
push
mov
es
add
lcall
gs
in
cmp
add
bound
ret
into
ja
add
mov
jne
sbb
aam
rcr
pop
mov
push
aam
mov
mov
cmpsb
bound
mov
cmp
out
add
push
inc
adc
ljmp
mov
subb
push
test
adc
test
lods
pop
jno
jg
cld
mov
je
mov
cmp
mov
push
or
cmpl
pop
push
aad
xor
ja
mov
ss
dec
cmp
mov
popa
ret
push
ja
mov
sub
pop
xor
add
sbb
push
jne
stos
add
bound
sbb
pop
push
into
push
push
dec
inc
ret
push
mov
mov
sub
aam
xor
inc
inc
mov
or
sub
outsb
je
inc
jp
sbb
outsb
sub
aaa
es
pop
fcmovnb
cmp
push
xlat
scas
sahf
sub
bound
setl
cmpsb
addb
cs
sub
push
adc
stos
add
faddp
add
fistpll
and
pop
xchg
jae
mov
or
lods
adc
mov
fcmovbe
pop
or
add
clc
cld
idivb
int
mov
out
jmp
ret
iret
push
popf
jmp
ss
push
inc
lahf
xor
std
or
or
mov
scas
into
pop
jne
fiadds
xor
push
mov
mov
fcmovnbe
or
gs
push
sbb
jecxz
sbb
xchg
test
cmp
pop
es
sbb
pop
aas
push
push
and
xchg
inc
push
pop
xor
dec
jg
notb
inc
call
xor
jne
mov
fdivs
ret
stos
sub
mov
mov
shl
pop
jecxz
mov
adcl
into
bound
iret
mov
xor
inc
mov
fdivrs
pushf
xchg
xor
into
push
push
insl
mov
in
pand
or
or
mov
pop
jecxz
shlb
inc
mov
ss
mov
sub
mov
and
mov
inc
sub
or
es
hlt
and
mov
sahf
jle
ret
and
mov
stos
imul
arpl
loop
jge
or
cmpsb
ret
dec
mov
push
pop
std
imul
fildll
data16
mov
xchg
lret
push
or
push
mov
jae
mov
outsb
cmp
shl
scas
pop
mov
mov
dec
add
mov
xchg
sbb
mov
mov
je
sbbb
cmp
mov
lods
rolb
cmp
andb
mov
or
add
movl
add
push
emms
sbb
aas
cltd
int
in
outsb
mov
ja
stos
or
cs
push
cmp
and
mov
test
dec
xor
push
add
add
fistl
mov
shl
push
fildl
xchg
jl
pop
cmpsb
jnp
jno
pop
mov
xlat
adc
ss
jmp
test
rcrl
add
push
sbbb
out
push
shrb
repnz
push
cs
mov
fcmovne
sarl
pop
inc
repz
cmc
xchg
mov
ljmp
scas
xor
cmpsb
xor
gs
sbb
fidivs
sbb
dec
add
shlb
fisubrl
inc
jne
fistps
dec
cs
fidivrl
imul
xchg
jno
pusha
and
mov
in
mov
loope
ret
mov
out
sub
add
xlat
idivb
and
mov
and
je
dec
mov
stos
andb
int
test
lods
xchg
push
xor
xchg
cmc
adc
scas
push
lock
jae
in
dec
jecxz
addr16
or
lcall
lods
stos
pop
add
cmp
cmpsl
mov
mov
sarl
orb
jg
or
push
lcall
movsbl
or
pop
push
es
int
mov
ja
or
sub
adc
cld
mov
and
sub
sahf
es
ret
fisubs
stos
push
movsl
mov
orb
pop
test
ss
iret
add
mov
mov
mov
in
cmp
jne
and
in
add
lret
sbb
or
xor
mov
adc
pop
and
repnz
mov
and
cmpl
rorb
push
mov
addr16
push
js
pop
nop
in
hlt
push
ljmp
push
push
xchg
mov
stc
rcrb
mov
jno
sbb
loop
cli
ljmp
out
sbb
gs
mov
dec
push
dec
lods
cmp
xor
das
cmp
mov
dec
int3
ss
mov
xchg
sti
push
popf
repz
xchg
add
push
mov
mov
mov
cmp
mov
bound
pusha
add
push
ljmp
in
jp
aad
or
in
sarl
bound
vcvtps2pd
fucomp
fsubl
dec
bound
stos
cwtl
xchg
and
xor
ficompl
adc
sbb
lcall
dec
push
roll
sub
aam
add
lods
adc
cmp
push
pop
nop
sub
gs
pop
in
jp
jg
fsubrl
mov
mov
mov
scas
out
mov
and
and
movsb
push
test
or
xchg
xor
nop
fcmovnbe
movzbl
dec
fisubrl
hlt
add
push
aam
mov
push
sbb
add
movsl
and
adc
mull
dec
xlat
dec
jne
cmp
xor
bound
adc
jg
es
mov
pop
iret
xor
bound
cld
add
mov
out
je
sub
push
aas
repz
push
rol
mov
subb
mov
outsb
mov
inc
xor
ljmp
add
fimuls
xorb
ljmp
mov
xchg
cs
dec
xor
xchg
push
sbb
ret
mov
cmp
lods
je
push
daa
lcall
sbb
mov
xor
jo
outsb
pop
xchg
iret
pmovmskb
sub
dec
aas
jo
pop
mov
push
sbb
mov
test
jmp
inc
outsb
xor
xor
into
fcmovb
jno
inc
orl
mov
sbb
sub
es
sub
imul
jmp
mov
sahf
fldt
test
mov
mov
add
cwtl
cmpb
aaa
xchg
aam
shlb
rcll
or
xchg
sbb
iret
dec
mov
lcall
imul
loopne
xchg
rol
pop
push
mov
push
mov
push
push
cmc
jg
ds
inc
in
or
pop
ret
mov
xorb
mov
push
cwtl
mov
sub
stos
inc
mov
inc
pop
mov
jmp
fildll
movsl
cmpsl
lcall
jmp
int3
inc
icebp
jbe
ret
mull
out
and
mov
or
push
arpl
xchg
adc
cli
sbb
ss
xchg
or
ficoml
dec
mov
sub
movsb
jbe
xchg
push
dec
shrb
push
mov
inc
push
dec
push
pop
sbb
push
cmpsb
adc
fucomip
decl
mov
ret
xor
iret
dec
xor
adc
cli
cltd
mov
add
lcall
aad
mov
mov
sbb
test
mov
jae
cli
pop
or
ret
icebp
and
push
dec
xchg
mov
fidivl
adc
pop
movsb
lods
and
jl
bound
sbbl
scas
outsb
xchg
ret
fucomip
shlb
imul
sarl
in
sub
push
xchg
mov
push
repz
dec
imul
pop
ds
push
shlb
dec
in
xor
cs
cltd
dec
dec
and
in
fstpt
in
cs
pop
test
lock
xor
lcall
push
cli
repz
iret
push
push
mov
jne
push
jle
sub
jae
fisttps
in
add
sub
lcall
add
ret
xsaves
mov
jno
inc
sbb
jb
push
jno
push
xchg
or
jge
xlat
mov
leave
and
and
mov
sbbl
inc
dec
cwtl
pushf
or
mov
and
push
inc
mov
push
xchg
xchg
testl
jne
sub
cltd
test
mov
or
das
fs
mov
xchg
xor
push
into
dec
sub
mov
pop
jl
xor
sub
and
ret
push
push
or
ss
mov
xchg
sub
mov
xchg
sub
ss
fisubl
add
jae
scas
vcmpsd
sub
popa
ljmp
ret
mov
pop
push
movb
lcall
stos
add
add
lret
jmp
lods
add
xchg
gs
or
xchg
jge
pusha
inc
scas
dec
dec
xor
gs
and
icebp
neg
bound
pop
imul
stos
push
sahf
push
into
das
lret
bound
mov
push
mov
cmpl
fcompl
mov
pop
leave
aam
mov
bound
ret
sub
cli
popf
pop
mov
mov
loop
mov
cwtl
xorb
mov
push
jge
jo
into
and
inc
sub
jecxz
mov
pop
filds
aad
stos
and
sahf
adc
push
ret
fnsave
jg
es
dec
mov
aad
fstpt
addr16
bound
out
rcrl
inc
dec
fisubrl
in
imul
jbe
jle
push
gs
mov
mov
dec
sub
gs
addr16
jle
mov
jle
gs
mov
out
push
push
jle
dec
gs
lods
sbb
gs
out
dec
addr16
gs
lods
xor
dec
jb
jle
gs
mov
dec
stos
push
jle
gs
dec
in
push
jle
gs
dec
dec
fstpt
gs
mov
nop
scas
sbb
gs
mov
mov
xor
into
scas
leave
add
gs
stos
xchg
jle
gs
lock
shrd
repz
pop
cs
movb
lods
mov
mov
xor
imul
iret
bound
mov
adc
test
cli
cs
pop
pop
dec
mov
mov
cli
jne
mov
xor
aam
ret
push
jmp
cs
dec
loop
push
mov
pop
and
fistps
flds
jne
cmpsb
repz
nop
test
and
cmp
mov
ret
dec
loope
jb
ret
cmp
lcall
mov
outsb
fcmovnbe
lods
lret
fbstp
mov
dec
pop
push
shrb
cs
mov
in
mov
adc
xor
les
fmulp
sbb
bound
xchg
xlat
xor
gs
sbb
aad
inc
push
ljmp
jae
jecxz
shr
add
adc
push
adcb
ret
mov
ficoml
pop
into
loopne
mov
out
outsb
jecxz
sbb
scas
rol
rorb
xor
fstpt
mov
and
push
and
cld
clc
xchg
jle
jmp
bswap
mov
mov
fisubrs
xchg
out
ja
rorb
pop
fistl
fwait
cs
xchg
aam
adc
ljmp
xlat
push
pop
cli
pop
push
es
out
xchg
xchg
scas
es
lcall
loop
pushw
dec
push
push
mov
std
or
or
loop
ret
clc
add
xchg
adc
pop
mov
push
loop
into
push
xchg
ret
in
imul
adc
fdecstp
outsb
shlb
ljmp
jp
sbb
mov
es
xor
notb
ffreep
out
lcall
in
sbb
mov
sbb
bound
push
enter
das
fimull
push
dec
push
or
gs
and
jae
mov
subb
in
xchg
pop
and
adc
int3
scas
cmp
add
outsb
sub
xchg
push
pop
adc
mov
aam
xchg
and
outsb
addb
addb
mov
into
adc
cmp
or
out
push
out
jecxz
out
mov
les
cmp
fcomi
data16
inc
fbstp
cmpsb
lcall
inc
push
hlt
add
stos
push
ds
mov
inc
mov
adc
push
xchg
cs
gs
cmpsb
add
movl
adc
xchg
in
popa
jg
pop
mov
out
push
push
adc
stos
mov
dec
imul
xchg
push
mov
aaa
or
cmp
cmpsb
xchg
cmp
mov
mov
or
je
int3
out
daa
scas
stos
fisubrs
jecxz
out
dec
fwait
jl
cmpsb
push
pop
loop
lcall
daa
mov
push
dec
es
cs
inc
jg
popa
push
push
xchg
iret
jbe
sub
fiaddl
mov
inc
adc
sub
add
add
pop
imul
push
inc
jne
ds
push
push
icebp
xchg
cmp
aas
out
mov
push
fildl
inc
inc
xor
xor
fisttpl
dec
cmc
and
mov
test
mov
cmp
mov
sub
cmp
jbe
push
sub
mov
stc
rorl
bound
popf
ficomps
inc
pop
pop
push
fsts
sahf
scas
scas
lahf
dec
out
mov
push
das
push
fsub
mov
adc
shrb
into
pop
xlat
push
mov
das
jp
movsb
push
roll
xchg
or
pop
mov
sub
mov
sahf
lods
xchg
lret
mov
push
xchg
mov
rolb
mov
mov
mov
mov
scas
xor
lahf
cmpsb
roll
mov
cmp
aad
xlat
iret
add
fucomi
mov
push
ds
and
mov
and
stos
mov
cltd
add
ljmp
mov
ret
into
push
push
mov
andb
inc
mov
sub
dec
rcrb
sbb
push
dec
push
pop
add
test
fistl
xor
xchg
sarb
mov
xchg
aam
add
inc
outsb
sbb
add
sti
aaa
shr
cmp
inc
imul
cmp
rclb
push
add
mov
push
mov
dec
push
xorl
push
in
sbb
mov
pop
mov
add
dec
mov
push
jae
or
rcr
sbb
stos
sbb
add
xchg
xchg
cmc
test
cmp
mov
cmp
notb
mov
in
push
push
push
rcl
popf
sub
mov
push
repnz
cmc
stos
xlat
es
xlat
test
fisttps
push
push
add
faddl
mov
pop
movsb
xlat
scas
dec
in
fistps
add
mov
rorl
imul
stos
push
mov
pop
mov
sbb
mov
adc
or
adc
sub
aas
sbbb
iret
add
ret
cmpsb
mov
mov
aad
push
lds
addr16
pop
clc
cmpl
xchg
push
out
and
sbb
bound
jl
and
adc
mov
jecxz
fldcw
popa
sahf
inc
ret
sub
bound
pop
ljmp
mov
adc
lcall
fs
insb
add
sub
outsb
cmp
pop
mov
mov
mov
out
addl
jecxz
push
fistpl
sarb
add
iret
ja
es
pusha
out
push
cmp
dec
popl
stos
bound
sbb
dec
xchg
jbe
outsb
cmp
mov
iret
mov
jbe
xlat
cmpsl
ds
scas
or
mov
push
jg
into
sahf
popf
out
add
push
inc
and
mov
ss
inc
cmpsl
and
ret
jl
mov
jmp
outsb
xchg
inc
add
outsb
push
fmull
mov
stos
mov
out
pop
dec
add
divb
sub
mov
xcrypt-ofb
cmpsl
sub
mov
and
imul
imul
lea
repnz
stos
lds
mov
xlat
in
inc
repz
ds
push
or
dec
push
jae
stos
sub
add
pop
aad
lahf
xchg
mov
cmp
mov
and
xor
or
into
sbb
inc
ret
sbb
movb
add
pop
scas
and
stos
sub
xchg
fimuls
imul
stos
sub
mov
ret
sbb
bound
mov
adc
outsb
sub
or
call
fs
xor
rorl
stos
sahf
mov
repnz
mov
addr16
clc
pop
ret
and
fsubl
push
fucomip
lret
inc
gs
push
push
testl
cmp
mov
pusha
mov
into
iret
adc
es
lcall
xchg
ret
sub
shl
pop
cmp
mov
cmp
cmp
inc
into
out
out
ret
lret
inc
repnz
lahf
movl
mov
jecxz
fisubrs
xor
movsb
mov
mov
inc
mov
mov
push
mov
xor
push
sarb
xlat
fidivl
out
push
pusha
arpl
stos
push
stc
lcall
jbe
xchg
repnz
fmulp
test
jecxz
in
dec
stos
mov
sub
xchg
mov
lret
faddp
out
mov
xor
xchg
mov
dec
out
sub
adc
mov
adcl
push
test
repnz
cld
bound
dec
hlt
lahf
xlat
push
outsb
adc
cs
push
jecxz
dec
or
in
push
push
mov
mov
call
mov
mov
inc
das
xor
bound
aas
bound
xlat
mov
sub
loop
outsb
xchg
mov
mov
xor
into
aam
es
scas
setb
mov
mov
rep
shll
aaa
or
jbe
gs
sub
xlat
xchg
mov
dec
outsb
push
ret
or
xchg
xor
sahf
scas
divl
test
push
repz
mov
or
sahf
sahf
enter
sbb
daa
inc
mov
sbb
mov
mov
push
mov
mov
xchg
ret
inc
sub
add
mov
push
dec
cmc
aad
sub
xchg
sub
add
pop
lcall
or
xlat
jl
cmp
fbld
sub
lea
je
icebp
jle
jae
popf
into
imul
fimuls
lock
mov
addb
push
rcr
aad
xchg
ret
rorl
lcall
bound
ret
jge
out
sbb
push
stos
negl
inc
xchg
pop
add
cmp
sub
lods
ljmpw
push
lcall
fiadds
jecxz
mov
sub
push
pop
subl
sbb
scas
sbb
cmc
aas
loop
add
mov
pop
fcmovbe
mov
ret
xchg
gs
cld
inc
hlt
adc
es
sti
xor
push
push
push
pop
inc
or
mov
xchg
cmpsl
xchg
dec
and
scas
or
cpuid
cmp
roll
negl
sbb
mov
dec
enter
fcmovb
mov
push
cmp
sbb
daa
mov
dec
lock
gs
in
mov
out
mov
cmp
xchg
cmp
cmpl
outsb
ljmp
out
push
iret
cmpsb
jg
xchg
fmulp
dec
in
sbb
es
and
iret
lahf
push
xor
mov
mov
addb
push
push
ds
fnstsw
xchg
lods
cmpsl
stos
fcmovnu
sbb
mov
and
add
dec
sbb
je
jecxz
adc
or
or
cmc
bound
inc
pop
pushf
cmp
sbb
dec
mov
cwtl
dec
sub
add
mov
mov
inc
and
push
popf
and
fiaddl
push
sub
lea
mov
xor
mov
mov
int
inc
cmp
xchg
fidivl
into
sub
mov
fcompl
scas
lock
push
add
mov
inc
hlt
xchg
mov
push
outsl
ds
ret
aam
mov
push
test
in
das
mov
jecxz
or
dec
add
loop
push
subb
jge
ficoml
mov
rcrb
cli
jl
jmp
adc
mov
lcall
adc
jbe
mov
push
bound
xlat
push
sub
addl
orb
movsl
inc
lea
jmp
mov
pop
ljmp
ret
pop
pusha
mov
imul
mov
push
scas
mov
push
rcrb
aaa
loop
les
push
sahf
mov
xorb
lcall
mov
inc
fildl
adc
jg
fiadds
jg
or
sbb
jne
mov
sbb
inc
jbe
sti
ret
stos
out
inc
aam
push
dec
lcall
push
leave
mov
fcoms
xor
mov
jecxz
icebp
idivl
sub
fidivrl
fbstp
sub
adc
push
sbb
loop
jle
cmpsb
inc
pop
sub
mov
mov
push
dec
shlb
leave
dec
dec
lcall
shrl
sti
or
or
into
jne
jns
xlat
adc
and
sub
mov
es
adc
ss
ret
dec
xlat
into
mov
idiv
adc
iret
repz
decb
loop
test
mov
and
cwtl
mov
stc
dec
sbb
pusha
imul
mov
mov
ret
inc
inc
outsb
push
aad
cmp
dec
mov
fisttpll
add
lret
outsb
dec
dec
lcall
inc
lret
xchg
ss
and
push
or
pop
push
cs
xor
not
or
lcall
ds
and
add
adc
xor
loop
fcompl
mov
gs
pop
sti
imul
dec
in
jno
dec
sbb
mov
add
out
inc
ret
xor
js
mov
push
ljmp
mov
ljmp
mov
push
adc
enter
filds
add
shlb
xchg
mov
aam
aas
xchg
fistps
sub
fimuls
push
push
sbb
hlt
inc
inc
sub
aad
mov
lea
mov
xor
mov
movsb
iret
push
lds
mov
add
les
fidivrl
push
ret
iret
in
xlat
lcall
into
xor
dec
paddusw
ss
adcb
leave
mulb
lcall
imul
cmp
adc
imul
mov
push
inc
insl
outsb
pop
into
outsb
aad
push
sbb
ja
push
jle
sub
sub
inc
lods
dec
mov
fldcw
fadd
inc
mov
xchg
xchg
js
and
mov
and
push
cmpsl
cmp
int3
iret
cmpsb
test
repnz
filds
les
ret
jmp
sub
orb
add
fiadds
adc
or
and
push
push
ljmp
iret
std
pop
dec
pop
lods
imul
pop
lcall
xchg
stos
jo
loop
sahf
sub
fidivrl
and
lcall
shl
aas
push
fdivrs
mov
mov
pop
mov
and
mov
mov
sarl
or
xlat
das
not
das
into
push
test
inc
shrb
and
inc
mov
insb
fsubrl
pop
lcall
ljmp
mov
scas
mov
jae
pop
mov
sbb
or
xchg
scas
xchg
inc
push
sbb
push
mov
or
push
push
jecxz
enter
lahf
fcmovu
inc
iret
fisubrs
out
sub
add
sub
mov
sarl
std
pop
xchg
cmp
xlat
push
aaa
push
test
push
cmp
mov
aad
xchg
jbe
ror
push
cmpsl
push
or
ds
lcall
jne
push
incb
cmp
inc
stos
imul
test
mov
lods
cmc
cmp
xchg
lcall
push
fisubs
mov
cltd
add
xchg
xor
push
fisubrl
push
xlat
mov
sbb
test
pop
lret
adcl
mov
jmp
fisubs
add
loopne
ret
xchg
add
ljmp
pop
sti
mov
outsl
mov
xchg
pop
not
mov
push
or
dec
ss
xor
bnd
lahf
fisttps
and
ficompl
ds
pop
fimuls
mov
xlat
adc
sbb
mov
das
ljmp
mov
imul
sarl
mov
xchg
cmpsl
fisttpl
inc
pop
sbb
lret
insl
cld
idivl
inc
lods
ljmp
and
xor
mov
push
mov
inc
push
lock
mov
dec
mov
repz
or
mov
jecxz
add
xchg
ficomps
sbb
xor
pop
push
movsb
fists
mov
shlw
inc
push
mov
ss
add
add
or
sbb
nop
xchg
xor
clc
push
add
cs
aas
scas
inc
mov
push
push
into
ss
pop
push
ds
mov
pop
and
mov
stos
test
mov
push
mov
push
sbb
out
xchg
xor
inc
mov
jecxz
dec
xor
mov
rorb
xchg
pop
fisttpl
or
ficompl
mov
out
loop
ss
mov
mov
mov
xor
shlb
lock
xor
xchg
xor
inc
xchg
cs
ljmp
mov
jle
xor
pop
je
and
push
mov
shrl
mov
gs
push
inc
push
dec
hlt
jecxz
ret
scas
out
out
push
jle
jecxz
push
push
mov
mov
outsb
jecxz
and
mov
and
testl
push
pop
nop
in
sbb
test
or
jmp
ror
cmp
mov
rcrl
inc
sbbb
pop
jmp
scas
or
push
sbb
out
stc
mov
pushf
dec
push
mov
ret
inc
push
cwtl
negl
mov
push
add
xchg
inc
xchg
fsubrp
and
test
mov
into
icebp
and
imul
push
mov
insb
xchg
sbb
loop
inc
adc
es
mov
mov
into
iret
mov
and
xchg
fbstp
cmp
mov
ja
and
nop
bound
mov
movsl
dec
movsl
xlat
call
into
mov
ljmp
push
sbb
es
movsl
out
push
aad
cmpsl
mov
mov
adc
aas
pop
mov
mov
add
cmp
enter
jecxz
add
sbb
jno
pop
sahf
aas
adc
ljmp
outsl
cmpsb
roll
fiaddl
mov
lcall
cs
out
adc
shl
into
pop
outsb
mov
lock
add
ret
xor
out
jle
movsb
ret
rclb
xor
push
lock
ds
outsb
push
xlat
push
ret
insl
jg
out
test
push
inc
xchg
loope
iret
mov
mov
xchg
iret
dec
add
mov
dec
into
or
pop
and
enter
into
mov
jne
fildll
mov
iret
add
ret
or
mov
cmp
xchg
push
lahf
cmpsb
popa
cmpsl
jo
out
mov
jecxz
dec
or
test
xlat
lcall
jecxz
gs
dec
push
cmc
je
fmulp
ficoml
cmp
xchg
push
and
push
or
add
roll
mov
fidivl
dec
es
mov
sub
into
dec
in
and
mov
xor
fistpll
sbb
and
mov
dec
add
push
cmc
jecxz
xchg
cwtl
cmpb
jle
adc
sbb
lret
mov
mov
ljmp
out
push
aas
ss
test
cs
xor
cmc
pop
push
lcall
mov
push
cmp
bound
notb
dec
repnz
jbe
and
add
mov
pop
jg
xlat
loop
pop
xchg
xchg
mov
jp
in
cmp
clc
adc
cs
stc
not
xlat
inc
mov
push
fists
call
mov
rcr
push
push
scas
outsl
iret
xchg
mov
sbb
test
cmc
mov
icebp
xchg
repnz
sbb
sub
add
ret
cmpsl
mov
fldt
ds
push
inc
out
or
and
filds
out
ljmp
add
ja
push
sub
les
sub
faddl
es
cmpsl
push
stos
loopne
pop
sub
jno
inc
movb
data16
xchg
push
lcall
ss
lcall
dec
mov
sbbl
adc
outsb
mov
add
push
ss
adc
and
mov
movsl
dec
mov
ret
rorb
inc
stos
test
mov
pop
loopne
jo
and
mov
repz
mov
dec
cmp
dec
push
fidivl
loop
out
jne
pop
xlat
pop
lret
mov
mov
and
sub
mov
adc
dec
mov
fisttpl
push
xchg
mov
push
xor
fildl
in
dec
adc
xchg
inc
gs
cmpsl
mov
pop
jae
pop
pop
outsl
jg
sbb
or
sahf
mov
xchg
mov
lcall
pop
push
inc
pop
iret
add
pop
inc
mov
sub
fidivl
inc
fbstp
or
sub
sub
stos
push
push
xchg
pop
pop
xchg
ficomps
and
adc
add
hlt
dec
sub
sbb
mov
adc
mov
xchg
jb
rorb
mov
mov
cmc
pusha
xchg
mov
setp
inc
mov
ljmp
dec
ret
and
scas
push
or
fidivl
mov
xchg
cld
jnp
and
test
repz
out
push
adc
xor
imul
ljmp
mov
dec
mov
or
ret
dec
or
inc
test
mov
dec
mov
dec
cmp
out
in
ret
jbe
add
loop
sub
lea
cli
insb
add
or
xor
jp
and
test
out
ja
fisubs
lcall
pop
push
xchg
and
lods
ja
and
inc
pushf
inc
jl
push
push
sbb
mov
and
cmpsb
and
mov
or
push
es
mov
mov
mov
dec
addr16
inc
add
xor
fisubrl
mov
lret
movnti
xor
movsb
xchg
dec
scas
adc
sub
and
sbb
ret
lock
sub
mov
mov
sub
push
ja
or
jnp
cmp
mov
aas
loop
into
push
pop
mov
daa
pop
xor
inc
and
sub
or
mov
xor
push
add
sbbb
adc
mov
jne
aad
adc
mov
mov
push
mov
fistpl
or
xchg
jo
sub
ret
inc
fcmovnbe
mov
sub
ds
movsl
ss
mov
or
lcall
mov
xchg
aam
cld
cmpsb
or
test
jbe
push
cmpsl
rolb
cs
xchg
mov
or
into
cmpsb
fdivr
and
fsubp
xchg
xlat
mov
imul
mov
in
rcl
pop
cmpsl
mov
push
fcmovnb
or
sbb
xchg
sahf
cmp
test
fisubs
out
dec
and
add
jle
mov
xlat
iret
jbe
bound
push
mov
xchg
in
mov
sarb
jp
roll
inc
outsb
inc
add
loopne
sub
xchg
je
mov
ljmp
push
pop
push
outsl
sbb
pop
push
mov
into
jp
sbb
sbb
pop
push
adc
cmpsb
icebp
mov
mov
xchg
mov
xchg
mov
rcl
mov
pop
push
addr16
sahf
stos
adc
mov
inc
fmull
cmc
xor
push
pop
pop
jbe
add
shll
or
inc
xchg
sub
pop
loop
in
mov
ljmp
shl
push
adc
ljmp
and
bound
inc
mov
or
cmp
pop
adcb
add
push
pop
sahf
inc
mov
loop
rcl
loopne
sbb
adc
loop
sub
nop
bound
sbb
jno
add
mov
push
test
push
bound
and
pop
cmp
cmp
cmpsb
outsb
jb
hlt
popa
loop
mov
pop
mov
xor
repnz
rolb
out
in
mov
fdivr
xchg
adc
mov
and
ret
xlat
adc
inc
sub
outsb
jae
bound
xchg
ret
inc
mov
fbstp
jecxz
sbb
add
aad
pop
push
subb
inc
or
push
xorl
mov
imul
sub
clc
repnz
sti
mov
mov
sahf
jp
adc
mov
xchg
cs
out
cmp
pop
sbb
jne
xor
aam
pop
dec
xchg
jb
cmp
mov
mov
cmpl
xor
push
cmp
push
push
repz
pop
mov
lock
orb
pmulhw
add
cmp
inc
ss
push
jle
arpl
adc
ret
adc
sbb
cmpsb
dec
cmp
or
jmp
push
inc
hlt
ja
incl
sbb
lods
outsb
fs
stos
push
mov
cmp
sti
lcall
sbb
lods
push
sbb
out
jnp
lods
test
pushf
aad
test
push
sbb
sbb
push
xor
and
testb
ret
out
cmp
hlt
or
lock
inc
mov
mov
push
or
sub
xchg
sahf
pop
lods
ja
rcl
jg
out
pop
ret
aas
sbb
xchg
imul
jmp
push
mov
das
mov
lock
mov
jg
pop
pop
fildll
lds
jecxz
push
xchg
jmp
mov
mov
push
mov
mov
jbe
bound
mov
cmpsl
hlt
push
imul
add
ss
imul
mov
and
push
mov
data16
fidivrs
icebp
xorl
jbe
stos
push
push
xchg
push
cs
ja
fcmovnbe
xchg
out
fistps
into
lahf
mov
out
jl
xchg
test
pushf
inc
dec
xchg
xchg
adc
out
or
test
pop
ret
test
test
movsb
pusha
imull
and
mov
cs
fs
mov
mov
loopne
fcmovnb
jle
add
mov
jg
into
adc
es
cli
mov
push
mov
gs
xorb
xor
aam
push
dec
or
cld
int
add
mov
iret
cmc
dec
jl
nop
mov
movsl
hlt
jg
mov
mov
push
adc
and
bound
movsl
gs
push
mov
or
es
mov
ljmp
sti
mov
sti
ret
out
movb
push
iret
add
xchg
clc
dec
or
ja
daa
push
ss
xchg
gs
adc
ds
ret
jne
into
dec
testb
xor
mov
iret
sub
sbb
sub
fiaddl
ljmp
sahf
aam
inc
ss
in
dec
repnz
fcompl
push
aam
test
and
and
gs
mov
push
jecxz,pn
xchg
enter
xchg
jbe
cmpsb
fistpl
pop
mov
jmp
adc
mov
xor
xchg
iret
xor
out
dec
xlat
sahf
cmpsl
jg,pn
out
es
in
ss
xchg
mov
jnp
dec
mov
out
bound
mov
test
push
pop
out
xor
mov
imul
or
jecxz
in
mov
mov
out
push
push
rorl
mov
imul
cmp
mov
andb
ret
fmulp
cmp
jle
mov
into
into
mov
or
or
sbb
lds
mov
fisttps
faddp
scas
xchg
fsubrl
push
outsb
ss
sub
cmp
mov
sahf
cs
call
test
cmp
hlt
inc
stos
mov
es
mov
mov
fiadds
add
and
push
adc
std
imul
and
enter
cmp
xlat
or
icebp
sbb
mov
cld
xor
clc
out
mov
cs
dec
fisubrs
into
adc
in
and
pop
mov
cmp
jo
dec
scas
add
out
mov
movl
ret
sub
mov
pop
adc
mov
mov
scas
push
or
mov
mov
push
out
fiaddl
es
movsb
xchg
lahf
adc
imul
and
jmp
shl
sbb
mov
mov
shll
mov
shlb
xor
mov
adc
or
out
lret
and
imul
xor
into
bound
daa
pop
or
lcall
pop
enter
pop
push
xchg
ficoml
and
outsb
mov
mov
adc
add
ret
scas
sub
or
sub
loop
fists
mov
cs
imul
ja
rep
cmp
xor
cmp
shll
arpl
fstp
mov
jle
in
pop
loop
je
sub
in
loopne
pop
push
bound
xchg
fsubrl
sbb
push
and
pop
mov
fists
ret
or
cmpsb
outsl
fldenv
scas
iret
xlat
movsb
loop
xchg
mov
stos
xchg
add
or
or
loop
xor
and
and
pop
mov
fistps
mov
or
sbb
shlb
mov
mov
lock
cs
je
jno
or
xor
pop
and
imul
pusha
es
or
sahf
mov
rclb
in
mov
and
insb
or
and
scas
sarb
adc
adc
mov
mov
jae
roll
loop
xlat
enter
aad
shlb
fisubs
imul
dec
xlat
dec
loop
stos
out
cmp
shrb
push
ret
add
or
dec
push
aam
outsb
sbb
addr16
sahf
lcall
push
insl
add
ljmp
xchg
into
ds
call
mov
push
jo
stos
jle
lods
imul
xchg
je
cmpsb
cwtl
call
rorl
push
xchg
aaa
lock
xchg
pop
adc
mov
xchg
or
lcall
ret
pop
je
cmc
pop
mov
sbb
ret
xor
adc
add
in
into
mov
push
mov
push
mov
push
fistl
xlat
ffreep
fs
outsl
mov
push
mull
shr
inc
push
jl
lret
fnstcw
push
ja
sahf
jb
dec
xchg
mov
push
push
pop
add
xorb
aad
lahf
push
sbb
mov
mov
mov
mov
loope
fisttpl
mov
out
push
and
inc
icebp
mov
xchg
xlat
sbb
cmpsb
push
xchg
mov
ljmp
mov
jecxz
dec
pop
sarb
pusha
xor
or
mov
mov
repz
xchg
es
cld
jg
bound
xchg
jecxz
or
adc
ja
out
movsb
fidivl
outsb
pop
push
ss
mov
out
add
in
add
xchg
outsb
cmpsb
sahf
jae
cmpsl
push
pop
repz
pop
stos
dec
inc
cvtpi2ps
or
mov
test
or
out
mov
sub
sar
shrl
mov
mov
insb
pop
pop
ss
out
and
or
lcall
ss
into
fimuls
push
mov
push
ss
mov
sub
or
mov
adc
adc
sub
loop
jle
xor
or
imul
cmp
iret
and
mov
xor
testl
cltd
ret
push
xchg
push
or
adc
adc
scas
adcb
ret
aaa
or
fistl
push
pop
cmp
int
mov
mov
dec
aam
call
sub
add
xorb
cmpsl
imul
jbe
mov
fildll
adc
add
sbb
iret
mov
divb
rol
rolb
or
push
jbe
ss
sbb
sub
rorb
es
not
or
mov
cmp
imul
xor
daa
add
push
ljmp
imul
prefetch
out
out
int
add
sub
int
mov
pop
scas
stos
aas
add
std
les
and
and
push
sub
sbb
mov
sbb
xlat
int3
ss
xor
inc
out
adc
xchg
imul
mov
push
mov
push
jecxz
xor
ret
inc
xlat
ljmp
adc
out
ds
add
stos
out
xor
ds
dec
add
mul
xor
xchg
sarb
data16
mov
mov
mov
es
mov
and
jmp
scas
repz
ret
xor
je
push
mov
xchg
fisttps
lds
and
xchg
ret
out
push
movsb
pop
mov
sub
movsb
xchg
rclb
push
adc
and
fldl
cmc
mov
cmc
or
or
aad
push
cmp
fisubrs
fists
and
cmp
in
mov
cmpsb
sbb
add
adc
push
sbb
outsb
test
sahf
mov
ds
into
push
mov
cmp
popf
cs
stos
mov
dec
sub
push
fistl
sub
iret
js
aas
push
or
sahf
xchg
inc
mov
xrelease
push
out
andl
mov
pop
out
es
mov
push
out
int3
adc
xlat
sub
mov
loop
pop
sub
sbb
jecxz
outsl
dec
push
leave
das
add
mov
sub
cwtl
leave
mov
xchg
cmp
jne
nop
ret
icebp
ret
daa
push
fs
xlat
mov
pop
je
push
mov
mov
and
lcall
repnz
pushf
rcll
cmp
ret
sysexit
iret
sub
notl
imul
aas
push
bound
iret
daa
cmp
xchg
mov
gs
bound
jb
adc
lret
ret
sbb
push
shlb
xchg
cmp
jge
sub
xlat
fildl
mov
andb
sbb
push
or
imul
xchg
sbb
jno
shlb
mov
push
mov
mov
pop
push
stos
lods
hlt
movsl
or
xchg
push
xor
cli
iret
sbb
add
mov
fucomip
add
es
mov
jo
push
push
testl
sbb
mov
dec
mov
cmpsb
push
ja
xchg
ret
xor
gs
iret
xor
mov
sbb
dec
pop
mov
inc
mov
pop
or
push
fnstcw
jne
cmp
loop
sahf
dec
push
pusha
dec
ss
cltd
or
dec
cmp
mov
sbb
test
push
gs
mov
mov
push
cld
hlt
bound
xchg
dec
fidivrl
cmp
es
sbb
hlt
mov
pop
into
sub
xchg
fisubl
orb
lea
xlat
xorb
pop
ljmp
push
xchg
jecxz
int
cmp
pop
mov
adc
gs
sub
scas
ret
jecxz
es
push
xorl
mov
adc
enter
shll
and
mov
mov
pop
xchg
inc
rolb
push
add
or
into
adc
ss
dec
cmc
decl
and
add
push
lcall
fisubrl
push
call
es
ret
scas
add
imull
add
mov
adcb
or
jecxz
les
rcll
dec
jbe
xor
in
push
cli
shlb
pop
cmpb
push
lods
cmc
sbb
inc
ret
mov
movl
pop
mov
mov
xor
cwtl
mov
cmpsl
dec
sbb
xorb
fbstp
xor
loop
cmp
out
ret
lods
adc
test
sub
les
dec
inc
adc
ret
adc
fsubrs
xchg
loop
dec
ljmp
adc
mov
or
pop
ss
adc
scas
icebp
cwtl
sub
xchg
inc
jecxz
dec
inc
mov
lcall
fninit
test
and
sub
std
mov
mov
mov
out
cmpsl
mov
xchg
and
rcr
inc
inc
les
and
and
xor
ss
daa
loop
sub
sub
test
leave
aas
imul
hlt
push
sub
shll
cs
jl
push
inc
push
dec
fistl
mov
shrb
mov
sahf
add
outsb
stos
pop
xchg
dec
into
aam
push
dec
xor
push
rcl
add
or
push
int3
inc
jmp
mov
mov
stos
lret
inc
push
popf
xor
outsb
aam
scas
push
jle
or
loop
mov
in
add
sub
lods
push
sbb
cmp
mov
pop
ret
xchg
cmp
stc
mov
adc
pop
ljmp
mov
mov
cmc
mov
xchg
mov
jecxz
push
fidivs
xor
xchg
mov
cs
xor
sub
sbb
cmp
pop
leave
negl
push
aad
es
imul
add
enter
jle
add
cwtl
xchg
cmc
jae
inc
stos
mov
mov
cs
and
or
addr16
sbb
ljmp
push
cs
push
into
mov
mov
xchg
into
hlt
jae
cs
mov
xorb
dec
ficoml
leave
mov
ds
xrelease
xor
mov
loop
aas
push
xor
xor
xlat
mov
mov
adc
cwtl
mov
add
push
aas
sub
cmp
mov
push
imul
adc
push
or
mov
cmpsb
cmp
dec
or
cmpsb
test
pop
adc
mov
and
sahf
add
adc
pop
push
or
mulb
push
dec
adc
add
cmp
mov
out
inc
xchg
lret
imul
es
ds
add
mov
outsl
std
cmovns
ds
test
out
xlat
jecxz
aad
pop
mov
jae
sbb
cmp
cmpsb
dec
lcall
jae
loopne
ret
psrad
adc
dec
add
lcall
jmp
mov
hlt
xor
pop
ds
push
jecxz
xor
cmpsb
push
int3
add
pusha
sbb
out
add
stos
scas
insb
add
pop
jbe
cs
push
and
loop
sbb
and
cmp
jl
or
mov
dec
out
pop
stos
sub
mov
mov
mov
mov
inc
outsb
ret
cmp
or
cmpb
mov
fldt
sahf
push
cmpsl
dec
fisttps
xlat
add
or
cmpsb
ret
sbbl
push
stos
mov
idivb
xchg
inc
pop
mov
sbb
mov
movb
pop
outsb
ds
rcl
dec
shl
pop
pop
push
cmpsb
push
fiaddl
mov
push
or
pop
iret
aam
es
ljmp
inc
imul
aad
loopne
ljmp
cmp
repz
mov
ja
xchg
add
sahf
xor
gs
ds
or
ret
popf
outsb
and
mov
xchg
jb
xchg
mov
stc
mov
add
mov
ret
push
in
clc
dec
negb
xchg
test
cmpsl
mov
cmpsl
dec
lret
stos
lcall
gs
lret
mov
mov
cmpsl
mov
daa
lahf
stos
dec
sbb
mov
fisubrs
in
fisubrl
outsb
pop
das
cltd
xchg
xor
rclb
lahf
xchg
lret
adc
xlat
inc
mov
orb
in
mov
iret
fiadds
sbb
lock
stos
xor
sub
and
adc
mov
cmc
push
es
es
iret
dec
or
loop
mov
xchg
hlt
mov
dec
cmpsl
add
outsb
xchg
push
jl
jb
aam
ret
xorl
fnstenv
sub
push
sub
push
sub
fisubs
push
mov
inc
push
ret
sahf
movsb
and
out
xchg
or
inc
add
push
in
fists
sahf
nop
dec
addb
lret
ret
mov
cmp
std
fldt
cwtl
and
push
adc
push
out
imul
lcall
pop
jae
loopne
sarb
rol
imul
lcall
inc
loop
rorb
gs
ficoms
push
add
mov
xor
mov
icebp
and
pop
mov
outsl
mov
mov
push
push
mov
push
mov
lretw
ja
out
xor
fcomip
sbb
and
pop
shlb
shll
push
dec
mov
pop
mov
mov
sbb
sbb
xor
ret
push
sbb
inc
clc
jg
into
addr16
insl
sahf
fimull
xchg
and
push
mov
xchg
cmc
shufps
rorl
dec
jecxz
out
pop
mov
pop
mov
cmp
push
pop
int
out
rcll
shrl
ret
mov
xchg
sbb
decl
lcall
adc
repnz
sbb
dec
loop
pushf
pop
aas
inc
sbb
inc
in
inc
pusha
ret
fiadds
mov
mov
or
pop
subb
in
into
fcmovnbe
push
push
and
lret
into
sub
mov
mov
je
add
dec
ljmp
sub
sub
mov
xor
cmp
xchg
in
cmp
push
push
push
pop
push
cltd
out
out
movsl
pop
sub
mov
pushf
mov
jno
daa
cmp
sbb
push
adc
iret
arpl
mov
dec
dec
hlt
or
aad
sbb
or
outsl
ret
cmp
je
ds
out
out
dec
sub
in
xor
lret
sbb
out
sub
sbb
popf
sahf
cmpsl
xchg
push
call
xchg
out
lods
xchg
iret
jg
sub
ds
push
fs
sbb
mov
mov
stos
lods
ds
mov
xor
std
and
ret
lods
ljmp
xchg
cwtl
pop
push
dec
xor
sub
mov
xchg
sarb
sub
ret
mov
int3
push
outsl
push
cs
aaa
imul
lock
mov
adcb
xchg
ret
out
mov
divb
push
push
fiaddl
out
lret
mov
xchg
add
mov
push
xorl
xchg
pop
adc
cld
xorb
adc
jecxz
das
mov
sub
xor
adc
ljmp
fcmovnb
xchg
and
fildl
mov
xchg
xlat
cmpsl
mov
sbb
mov
out
fninit
mov
cmp
xchg
add
push
sub
es
inc
inc
shr
xor
in
jne
add
xchg
iret
or
add
loop
aam
or
inc
mov
mov
scas
adc
mov
sub
aas
dec
pop
sbb
sub
or
sub
test
decl
pop
ret
sti
add
ror
and
add
lahf
es
inc
cmpsl
or
dec
or
ds
fcmovnu
or
push
sub
ljmp
push
cmp
test
test
push
jbe
add
fildll
popa
lcall
xchg
cmp
xchg
push
and
stos
mov
gs
adc
inc
fimuls
into
pop
aad
push
push
out
cltd
inc
fnstenv
call
fidivrs
and
mov
dec
aad
mov
lcall
stos
ljmp
push
sti
xchg
sahf
les
ret
fiadds
movsl
sub
mov
jno
sub
test
dec
push
inc
cmpb
mov
fisubs
es
adc
aam
imul
subb
cs
stos
fistpl
pop
int
je
out
push
aad
jne
mov
fisttpl
push
push
gs
dec
mov
and
push
aad
xor
mov
testb
sub
imul
ret
lahf
push
ja
lahf
mov
mov
inc
xor
or
jne
pop
ljmp
inc
mov
stos
clc
rorb
mov
jbe,pn
add
mov
xlat
sbb
push
dec
inc
imul
loop
xchg
mov
les
dec
mov
pop
mov
stos
cltd
pop
enter
fdivrl
sub
xchg
adc
mov
and
ljmp
shlb
subb
add
ja
jecxz
ljmp
xor
inc
fisttps
hlt
into
sbb
cmpsb
push
es
push
jb
pop
adc
mov
pop
push
lret
pop
fisubrs
outsb
add
mov
int
movsb
pop
jg
dec
push
jg
lret
lcall
mov
sbb
or
push
lock
movl
mov
push
pop
mov
aam
outsb
aaa
aas
test
push
bound
mov
stos
dec
or
xlat
and
sub
xchg
and
or
es
aas
jp
or
mov
fdivr
lcall
pop
push
mov
aad
ds
xchg
inc
inc
pop
out
andl
std
xor
dec
ficoml
imul
and
jbe
push
xorb
cmp
and
mov
aas
mov
push
mov
lahf
dec
push
lds
fcmovbe
xlat
adc
cmp
bound
gs
movq
xlat
sbb
and
xor
inc
mov
out
push
inc
fwait
ss
push
es
into
jle
sub
es
faddp
ds
jecxz
add
fldt
insb
lcall
push
stos
sub
mov
mov
iret
outsb
test
xlat
pop
push
aaa
push
sar
mov
jnp
imul
loop
mov
scas
sub
test
push
pop
jle
mov
ljmp
fisubl
cwtl
mov
pop
dec
fbld
stos
and
xor
rcl
adc
sub
or
dec
cmc
mov
in
adc
mov
scas
les
ret
mov
lock
int3
outsl
rclb
out
xchg
add
lcall
inc
lods
push
jg
inc
or
loop
fistpl
adc
std
xor
sbb
bound
or
lcall
xlat
mov
add
sbb
daa
arpl
outsb
jge
mov
loope
pop
jns
dec
cmc
add
xchg
lods
push
int
or
enter
nop
push
or
pop
jmp
xor
ljmp
addr16
mov
pop
push
sahf
pop
sub
stc
dec
mov
mov
sbbb
out
jae
cli
faddl
xchg
sbb
adc
jbe
in
cli
add
jmp
cmp
or
in
add
imul
dec
sahf
bound
jmp
in
pop
mov
ret
cltd
xchg
push
hlt
mov
mov
xchg
outsb
aad
xchg
es
xchg
inc
xlat
mov
hlt
add
push
push
push
mov
outsb
mov
and
mov
push
jbe
mov
inc
test
cs
pop
push
fdivp
les
mov
fstpt
testl
and
sub
dec
psubq
into
sbb
stos
std
cmp
aam
jno
sbb
mov
out
add
dec
cmp
ret
cwtl
pop
loop
mov
cwtl
ror
sahf
mov
fists
in
xor
movl
out
and
pop
imul
and
adc
mov
push
and
dec
push
inc
mov
sub
cmpsb
adc
ret
imul
adcl
pop
cli
cs
mov
dec
sahf
outsb
pushf
in
cmpsl
imul
pop
pop
mov
addr16
sub
dec
int
jmp
lret
push
or
push
fwait
mov
and
jle
jmp
jle
stos
data16
dec
out
pop
ljmp
inc
lock
dec
iret
add
add
push
adc
push
in
imul
into
mov
xchg
xor
xchg
popl
ficoml
bound
cmpsb
les
sub
mov
dec
jecxz
pushw
mov
sub
xchg
divb
popa
loopne
sub
mov
cmp
ret
xor
filds
add
mov
push
sub
mov
std
mov
mov
loop
ficoml
test
dec
stos
and
mov
enter
inc
dec
ss
xchg
ret
xor
cs
sbb
inc
ficoml
pop
ret
daa
aas
cs
fistl
or
cltd
lods
lds
xchg
push
push
or
fs
xchg
dec
dec
pop
and
imul
pop
adc
loop
push
mov
aas
and
addr16
fstps
add
add
sbb
ret
loop
sub
add
std
into
push
sbb
pop
mov
out
mov
mov
mov
sbb
mov
push
cltd
shrl
mov
subl
add
or
dec
mov
jbe
fisttps
mov
pop
mov
jle
pop
mov
ret
hlt
mov
push
xchg
outsb
inc
mov
aas
rcrb
sub
add
adc
sbb
or
ret
je
push
cmp
mov
pop
cmpsb
xchg
es
in
outsl
bound
leave
mov
xchg
shl
push
push
shr
fmulp
jecxz
cmp
daa
stos
pop
andb
mov
ret
push
pushf
or
out
jae,pn
ljmp
sahf
xchg
push
push
jmp
xor
dec
ret
push
out
jne
sbb
cmp
xchg
mov
cmpsl
fidivl
fisttpl
xor
inc
out
addb
decb
rol
xchg
imulb
pop
cmpsb
repnz
xchg
push
jge
stos
icebp
add
loop
mov
sbb
jecxz
push
push
hlt
dec
push
mov
or
hlt
sarb
lcall
dec
mov
notb
ljmp
or
bound
rolb
mov
push
hlt
mov
es
cmpsb
mov
push
push
fstpt
pop
pop
sti
ds
mov
mov
cs
xor
add
sub
xlat
cmc
jg
push
ds
inc
mov
div
test
or
jl
xchg
xchg
and
scas
sbb
nop
mov
cld
and
bound
or
mov
mov
scas
push
imul
out
mov
into
cmp
xchg
jle
mov
mov
push
lcall
push
lret
pop
cmc
ss
mov
xor
out
or
aad
dec
xlat
or
cmp
cmpsb
xor
sarl
es
lcall
or
cmpsl
sti
jmp
cmp
outsb
rcl
dec
jg
add
dec
ss
dec
push
jno
addl
fbstp
rclb
movzwl
lret
jecxz
add
cld
mulb
mov
clc
mov
inc
mov
inc
nopl
daa
jp
pop
outsb
loop
nop
xlat
mov
add
adc
push
shlb
jp
adc
mov
rolb
add
hlt
scas
sahf
ret
and
sbb
loop
sub
fildll
loopne
out
cmc
push
adc
aad
iret
sub
sbb
aaa
out
mov
fs
stc
xchg
mov
mov
jnp
mov
ds
test
xchg
pop
pop
mov
sbb
sarb
mov
push
and
int3
mov
ja
ljmp
push
inc
insb
insb
mov
cmpsb
shlb
xlat
imul
cmpsb
mov
xchg
add
xchg
mov
inc
push
ret
adc
outsb
sbb
xchg
add
or
jge
repz
bswap
pop
bound
andb
xchg
movsb
and
clc
into
push
jo
imul
mov
xor
add
dec
subps
xchg
ja
cs
mov
outsb
enter
inc
out
fldenv
test
addr16
mov
scas
mov
push
pop
lcall
iret
push
xchg
pop
loop
xchg
data16
jecxz
xchg
jp
fdivrp
push
into
cltd
in
adc
into
lahf
out
sahf
sti
lahf
into
sar
pop
cld
xchg
movsl
cld
subb
xor
adc
je
sbb
pop
hlt
nop
fisubs
mov
xchg
shl
push
mov
imul
sub
scas
movsb
or
and
lock
xor
mov
push
data16
push
xlat
sbb
sahf
repz
lcall
push
lods
pop
es
fisttpl
faddl
xchg
imul
loope
push
std
cmp
mov
lret
jecxz
sbbb
negb
loop
sbb
rolb
cs
mov
mov
push
xor
ficoms
xchg
loop
gs
scas
sub
rolb
out
into
or
sub
sub
shll
into
mov
arpl
test
or
xchg
dec
dec
lds
sbb
shll
jo
or
test
or
pop
bound
stos
les
push
mov
cmc
mov
in
int
sbb
xchg
fbstp
push
aas
xchg
mov
add
out
push
mov
lret
hlt
mov
iret
xlat
xor
cmp
pop
ror
mov
sahf
in
jle
push
push
adc
ss
dec
or
ret
mov
xchg
repnz
mov
and
push
cli
sahf
inc
cs
xchg
dec
inc
stos
sahf
jnp
inc
push
nop
lock
pusha
xchg
shr
adc
push
add
push
out
mov
lcall
mov
pop
and
push
ret
mov
aad
mov
mov
push
hlt
or
mov
hlt
add
mov
mov
mov
push
jae,pt
lcall
adc
push
rcrl
add
ss
inc
inc
pushf
adc
mov
lahf
xorl
and
movsb
dec
loop,pt
ljmp
dec
add
lea
xchg
pop
je
ret
push
push
push
mov
mov
pop
cs
adc
daa
push
xlat
or
sti
jecxz
pop
or
add
pop
inc
cmp
aam
mov
fst
jle
mov
push
xchg
stos
cmpsb
sahf
xor
cmpsb
push
sub
iret
shr
jo
test
bound
cmpsb
lcall
add
or
cmp
pop
pop
in
lea
stos
lea
cmpsl
xchg
pop
jle
push
es
xchg
iret
filds
test
mov
int3
jg
es
std
sub
xlat
ljmp
sbb
inc
pop
cmp
addr16
mov
stc
in
adcb
mov
xor
cmp
mov
xchg
movsb
cmpsl
mov
movb
cmc
inc
xchg
adcb
inc
leave
mov
test
xchg
cmp
iret
subl
sbb
cs
and
sbb
sub
cmp
scas
out
scas
icebp
rcl
xchg
mov
mov
jo
pusha
cmovp
mov
dec
push
cmpsb
lods
dec
test
and
scas
and
mov
adc
jl
sbb
push
mov
test
xlat
push
jl
in
add
jae
and
out
fs
fs
mov
inc
inc
sbb
bound
je
ljmp
divb
sahf
sahf
jns
and
loope
test
nop
push
add
fisubl
daa
loop
out
iret
xor
push
addr16
cmpsb
xchg
rcll
movl
loopne
outsl
iret
popf
push
add
jo
test
jg
jecxz
cld
adc
mov
pop
push
movsl
gs
ljmp
xor
dec
das
fcmovb
cmp
cmp
inc
punpckhwd
mov
mov
das
ss
sarb
out
loop
in
xchg
fs
ret
sahf
shlb
mov
mov
addr16
bound
push
es
int3
decb
or
enter
ljmp
fimuls
xchg
mov
lahf
adc
ficoml
inc
sub
or
xor
rcll
and
gs
mov
adc
xor
xchg
es
mov
xor
push
sub
sahf
inc
lcall
push
adc
xor
ret
pop
dec
pop
xlat
and
xor
push
ja
out
cmp
shr
adc
and
lcall
sbb
push
mov
ja
and
mov
add
jns
popf
aam
fiadds
push
out
sbb
lods
pop
cmp
inc
dec
mov
fisttpll
fisubs
mov
aas
adc
movb
mov
mov
add
mov
cs
pop
push
xchg
aas
into
add
iret
mov
adcb
stos
push
ds
or
arpl
dec
push
mov
nop
adc
lock
out
scas
scas
mov
sarl
or
aam
push
mov
int
js
int3
jno
adc
and
rcl
popa
xor
clc
sarl
fcoms
mov
arpl
or
push
sbb
test
outsl
loope
fidivl
mov
fcmovnb
jecxz
es
sbb
jns
sub
adcb
or
inc
mov
sub
xor
fidivl
fcoml
incb
and
pop
and
js
mov
mov
pop
sub
xlat
xchg
inc
out
sahf
mov
pop
or
gs
jne
ficoms
xchg
out
fs
rorb
fistl
cmp
add
je
sbb
fs
cmp
fs
ss
test
hlt
push
inc
outsb
fisubrs
orb
mov
stos
xor
and
pushl
and
xorb
sub
mov
mov
pushf
or
xchg
gs
into
push
imul
ret
mov
push
loop
ljmp
xchg
int3
mov
das
rcl
arpl
out
sub
cs
push
ljmp
stos
das
mov
loopne
mov
jae
dec
sub
xchg
xchg
fs
into
mov
ret
add
jg
adc
outsb
xchg
mov
aas
test
pop
stos
jge
xchg
repnz
gs
jle
sbb
pop
xchg
push
lea
mov
pop
push
cmp
mov
lcall
push
sub
addr16
mov
xor
add
add
sub
lcall
fidivs
inc
mov
push
lret
sub
cmp
xor
hlt
ret
outsb
lcall
loope
popa
das
add
out
ffreep
push
push
sbb
cmpsl
mov
jo
xchg
pop
xor
pop
out
stos
dec
std
shll
arpl
ds
shl
pop
adc
loop
xchg
xchg
or
out
push
inc
sbb
mov
ljmp
sub
push
aam
push
jo
add
mov
cwtl
xchg
sub
mov
push
es
xchg
fidivrs
jno
sub
mov
mov
inc
and
add
mov
iret
pop
insl
xchg
xchg
push
dec
ds
xor
cmp
outsb
and
mov
mov
fninit
orb
lcall
data16
xchg
dec
stos
mov
and
sahf
adc
mov
shll
es
pop
ficoml
stos
pop
pop
mov
mov
bound
mov
and
inc
mov
mov
pop
jne
dec
cs
lds
xchg
gs
inc
enter
cmpb
dec
insb
aam
es
jbe
shll
mov
or
sbb
mov
popf
cs
mov
push
mov
sbb
mov
push
gs
sbbb
pop
rorb
fwait
roll
xor
shll
es
mov
dec
bound
mov
stos
repz
push
movsb
insl
fadd
mov
cs
or
pop
mov
in
jecxz
into
int3
cmpsl
or
loope
push
inc
cmpb
push
inc
mov
lret
ljmp
in
inc
jae
fildll
loop
or
mov
ficoml
mov
hlt
cmpsb
iret
cmp
mov
add
pushw
lcall
cmc
adc
xlat
xchg
dec
stc
jg
dec
cs
in
ret
fwait
dec
and
subl
xchg
into
sbb
fadd
mov
repnz
xlat
aad
xchg
fisubrl
mov
gs
add
pop
xor
mov
push
xchg
ds
pop
push
mov
cmp
jo
push
push
adc
bound
inc
inc
scas
mov
and
pop
popf
or
xor
cmpsl
push
pop
arpl
dec
pop
outsb
cmp
adc
outsb
dec
lret
fidivl
dec
shl
test
cltd
lods
adc
xchg
movsl
and
sbb
jecxz
sahf
sbb
ficoms
ror
xchg
or
xorb
mov
dec
jbe
push
fdivs
lahf
out
fistps
gs
and
test
sahf
shrl
push
sarb
es
add
shll
shl
stos
jge
out
rclb
or
push
mov
mov
outsb
sbb
push
mov
jo
xlat
sub
pop
inc
call
dec
mov
int
mov
ss
pop
xchg
mov
je
loop
jp
dec
aam
jmp
mov
cmp
mov
lahf
xor
and
rolb
iret
into
lock
xor
std
cli
movsb
cwtl
sub
inc
ljmp
int
js
pop
or
mov
add
xchg
sahf
gs
stos
sbb
mov
out
sbbb
insb
xor
lret
imulb
push
fcmovu
ficoms
xor
gs
loopne
aas
push
dec
adc
mov
dec
lods
jecxz
cmpsl
mov
outsl
mov
mov
int3
out
cmp
mov
or
sbb
ror
xchg
shlb
dec
cmc
cld
lcall
push
mov
adc
xchg
pop
adc
stos
xor
roll
mov
push
and
outsl
fimuls
pop
inc
mov
pusha
fidivrl
repz
notl
fistpl
pop
xchg
sti
jmp
mov
out
sub
mov
add
loop
sbb
mov
mov
in
mov
scas
es
lcall
imul
ret
lahf
push
xor
ret
into
fstpt
mov
insl
push
sar
cmp
adc
pop
scas
push
ljmp
mov
pop
in
xlat
leave
add
sahf
mov
or
out
jo
jecxz
and
lcall
push
out
movsl
jecxz
hlt
rcl
mov
cmpsb
cmp
push
lcall
cmp
xchg
push
test
fidivrl
pushf
fisttps
out
addr16
mov
shlb
movsl
xor
fcoml
xor
inc
or
gs
repnz
ffreep
and
ret
sahf
mov
mov
fsubr
loop
dec
xor
fs
fisubrs
rol
cmpsl
adc
lcall
scas
xor
or
ret
xorb
bts
repz
out
cmp
shrl
pushf
mov
cmp
adc
cmp
es
cmpsl
inc
adc
icebp
jp
xchg
pop
in
xchg
sub
rcr
push
mov
cmp
xchg
jp
insl
lret
sahf
xchg
dec
ja
rcll
cmpsb
data16
or
xor
loope
pop
push
out
cmpsl
cmp
or
mov
sbb
fisubs
add
into
adc
cmc
mov
ret
movb
into
pop
sub
add
je
ret
shll
mov
sbb
or
in
mov
out
push
ja
pop
push
inc
rclb
add
ss
loop
mov
ret
or
dec
add
outsb
push
movsl
jno
push
push
and
mov
ljmp
cmpl
xor
or
outsb
sbb
in
ret
cs
pop
fisubs
xlat
add
out
jg
iret
add
inc
sub
dec
push
setno
ds
xor
mov
xchg
mov
in
imul
push
dec
and
loop
lcall
xor
inc
jle,pt
push
sahf
cmp
ret
orl
movb
outsb
fs
hlt
negb
pop
xor
sahf
push
push
inc
xchg
ds
or
and
scas
pop
dec
out
adc
push
xor
adc
xor
fistpll
push
ret
jecxz
arpl
push
stos
or
sahf
ljmp
adc
add
or
ficoms
ljmp
decb
xchg
inc
jno
test
cs
lret
cmpsb
pop
sbb
mov
xchg
orb
test
jl
and
sub
adcb
xchg
xlat
mov
loop
and
imulb
addb
pop
das
jne
mov
mov
push
mov
ret
sub
bound
or
scas
mov
dec
mov
es
jnp
movsl
adc
cmpsb
sub
loop
mov
adcb
test
mov
lea
or
sbb
cmp
xchg
sahf
add
or
mov
aas
test
xchg
sbb
pop
push
cmpsb
mov
push
xchg
inc
daa
les
push
sub
push
mov
xchg
cltd
and
push
mov
ja
aad
lods
into
jno
jno
shr
sub
push
xchg
mov
mov
xchg
pand
sbb
inc
push
or
xor
jno
sti
push
add
push
sbb
movsb
add
fidivl
aaa
testl
push
mov
movb
ss
ficoms
sub
push
sarb
iret
dec
mov
movw
mov
in
or
add
shrb
mov
fimuls
xor
mov
pop
cmpsb
cmp
jecxz
inc
sub
imul
lea
push
imul
sub
and
test
imul
cmpsb
or
fisubrs
inc
cmpsl
ret
or
fsubl
les
push
mov
lds
and
iret
data16
push
lock
sub
sub
adc
inc
pop
andl
out
dec
scas
mov
add
inc
pop
lea
fldl
cmpsb
bound
cmp
mov
pop
fisttpl
dec
ror
ss
sbb
xchg
into
jbe
xchg
jbe
fbld
sub
divb
xchg
push
dec
ds
mov
mov
push
push
aad
xor
into
loopne
ret
xlat
inc
inc
xchg
rolb
xor
xchg
loopne
jbe
rorb
inc
mov
pop
sub
adc
push
xchg
sbb
icebp
push
cmp
adcb
ss
xchg
push
inc
add
hlt
adc
mov
aam
es
or
xchg
addb
mov
fucomi
sti
mov
outsb
sbb
mov
dec
mov
pop
fsubp
mov
out
sub
pop
fldt
lcall
sbb
cmp
cs
sbb
out
pop
mov
add
sti
cmc
lock
pop
xorb
push
icebp
aam
loope
in
sbb
push
dec
cmpsb
xchg
push
add
adc
add
and
xchg
das
pop
mov
movsb
pop
xchg
ds
sub
outsb
push
lds
push
jb
sbb
or
mov
mov
cmc
inc
push
cmpsb
xchg
in
jmp
pop
scas
test
cmpsb
iret
sarb
cs
push
ret
inc
out
daa
mov
xor
or
fldt
out
mov
inc
jb
pop
add
jo
movsl
cmp
movl
sub
jg
mov
push
adc
rcrl
push
inc
jecxz
pop
sub
pop
sbb
mov
icebp
ss
push
sub
cs
sahf
pop
movsl
idivb
into
sbb
or
movsl
xchg
mov
inc
and
sub
ds
xchg
mov
sbb
fisttpl
stos
test
into
cmp
pop
repnz
and
test
sub
and
and
or
cmp
lret
dec
orb
cmp
pop
cmp
push
push
pop
jbe
ss
adc
mov
mov
lcall
xlat
dec
or
aas
push
fcmovb
mov
in
ds
jo
mov
mov
add
jae
mov
stos
in
ret
loop
ret
sbb
push
es
push
jno
lods
pushf
fbld
add
pop
pcmpgtd
sub
add
ds
cmpsb
dec
inc
xchg
xchg
addl
add
test
push
movsb
scas
int3
es
and
xchg
mov
std
cli
ja
sub
jns
sti
cmp
inc
ret
add
ret
out
imul
outsb
repnz
mov
sub
or
mov
sti
fidivl
rorl
adc
mulb
mov
sub
loop
in
mov
test
jecxz
dec
pushw
cmp
or
adc
into
mov
bound
mov
or
repnz
and
clc
rclb
cld
into
push
pop
cmp
imul
pop
push
daa
into
es
pop
pop
adc
icebp
pop
cs
xchg
dec
imull
shlb
andb
mov
mov
or
iret
jbe
out
push
bound
add
lea
mov
push
test
scas
xchg
fiaddl
aas
xchg
fildll
jne
xor
push
jns
cmpsl
mov
push
outsl
inc
es
xchg
iret
mov
subb
jg
mov
es
pop
daa
dec
fiadds
or
lcall
sub
test
dec
mov
cmp
mov
cmp
mov
ret
repnz
mov
daa
imul
xor
iret
mov
fwait
or
pop
adc
leave
xlat
inc
into
ret
add
fimuls
fldenv
mov
dec
push
push
cmc
push
fistpl
xor
sub
aam
cltd
add
sbb
dec
mov
je
push
push
push
stc
xchg
pop
xcrypt-cbc
cmpsl
push
imul
dec
push
fcompl
scas
xor
or
xchg
inc
sub
lock
or
push
sahf
mov
mov
push
dec
mov
lcall
scas
loop
mov
cmpb
dec
mov
fiadds
jmp
es
jecxz
insb
push
sbb
es
out
fsubl
cmpsb
dec
push
dec
loop
jge
mov
fidivs
into
enter
ljmp
ret
movsl
fldt
mov
mov
push
imul
mov
enter
cli
mov
xor
fdivrs
push
pop
movsb
sbb
fiaddl
cmp
repz
fisttpll
add
dec
sub
adc
mov
mov
stos
mov
push
ja
and
scas
sarb
fs
and
push
sbb
mov
loope
mov
rorb
jecxz
dec
add
in
test
and
lock
xlat
push
in
push
push
mov
jg
push
push
pop
divb
cmp
push
mov
ficompl
or
dec
sbb
mov
push
cs
mov
jecxz
mov
lret
jmp
sahf
push
test
sarl
movsl
std
push
arpl
faddp
mov
or
inc
mov
mov
call
loop
push
mov
mov
outsb
xchg
negb
scas
push
ss
outsb
out
add
in
sbb
jmp
rep
push
mov
cmc
mov
pop
es
lcall
push
mov
out
cmpsl
mov
mov
gs
out
test
dec
or
sbbb
mov
adc
loop
ret
stos
pop
loopne
out
mov
ds
shl
aaa
pop
jmp
outsb
xchg
incl
mov
bound
faddp
mov
and
shrl
sbb
test
adc
sbb
mov
push
dec
sahf
mov
scas
push
mov
cmp
xlat
pop
fs
xchg
sti
mov
or
pop
iret
cmpl
mov
scas
gs
cmpsl
in
enter
push
cmpsb
dec
outsb
jecxz
pop
dec
mov
push
lea
pop
push
or
ds
inc
inc
push
mov
adc
cmp
outsb
mov
adc
cmpsb
mov
pop
push
sbb
roll
xor
iret
pop
into
pop
xlat
xor
mov
fisubs
mov
sub
call
fld
in
add
add
or
fdivrs
push
dec
mov
pop
jp
lret
add
push
ret
xchg
mov
sub
xchg
mov
sahf
pop
jmp
hlt
into
push
mov
dec
dec
push
ss
nop
gs
ret
jg
iret
bswap
add
dec
popf
pop
mov
out
mov
push
mov
dec
add
lock
push
cmc
push
xlat
movl
mov
xor
mov
pop
jg
jbe
or
ljmp
mov
push
push
cmp
cmpsb
adc
ss
mov
inc
das
popf
loop
adc
ja
mov
jmp
into
mov
sbb
jl
mov
cmc
inc
jo
mov
fucomip
xchg
jle
inc
mov
and
inc
sbb
push
rclb
insl
pop
mov
dec
sub
rcl
push
cmp
jno
andb
in
cmp
sbb
or
cmpsb
ret
aam
dec
dec
push
xor
inc
gs
inc
mov
pop
out
inc
into
decl
cmpsl
ret
insb
ja
sub
int3
mov
xchg
out
jno
das
cmp
cmpsb
sarl
gs
dec
dec
push
mov
out
js
gs
dec
out
insl
gs
adc
in
gs
and
into
stos
jmp
mov
test
std
push
mov
cmpl
add
es
sub
push
hlt
loope
outsb
ret
or
mov
scas
xchg
adc
add
movl
aad
cld
rcr
cmp
inc
imul
xor
or
out
jb
into
sahf
sub
xlat
outsb
mov
push
push
sbb
sbb
jle
es
xor
je
sbb
je
add
jge
ljmp
inc
mov
mov
sbb
in
fisttpl
in
mov
pop
sub
lret
push
sarb
rorl
and
sbb
cmpsb
sub
ds
lods
mov
das
iret
ret
lea
or
push
ja
mul
ljmp
inc
push
xchg
xchg
ja
lcall
push
mov
stos
loop
sbb
test
xchg
jmp
cs
pop
pop
hlt
push
mov
mov
jge
xchg
out
add
sub
fwait
add
jae
adc
pop
bound
cmc
mov
push
push
inc
cmp
outsb
inc
or
lcall
and
mov
scas
movsl
jb
mov
push
dec
jbe
ss
mov
out
add
ret
cmp
dec
pop
push
cmp
lea
rcr
jecxz
pop
and
push
fidivrs
add
xor
mov
pop
jecxz
cmp
cli
xchg
mov
lahf
jge
cmpsb
mov
mov
jnp
mov
or
xchg
mov
fildll
in
xchg
push
hlt
fidivrs
lcall
icebp
aam
xor
mov
sarb
out
loop
sbb
push
mov
fcmovnb
adc
mov
mov
mov
fstpt
push
push
mov
push
add
push
pop
fidivl
cmp
aas
push
jns
stos
fs
rcl
test
aaa
out
gs
cld
jbe
push
mov
in
mov
aam
xor
out
xor
ss
cli
push
inc
cmp
add
das
xchg
into
xor
inc
popf
pop
and
imulb
stos
ja
dec
jno
fildll
ret
jns
or
pop
jge
mov
mov
sahf
mov
in
loop
jecxz
cmp
stos
inc
pop
mov
sub
fsubrl
inc
iret
cmpsb
cmp
mov
das
inc
adc
iret
and
mov
movsb
lcall
push
repz
movl
lahf
adc
ficompl
shlb
xchg
icebp
jg
scas
and
fimuls
out
or
mov
repnz
push
jbe
lcall
loop
push
imul
push
decb
lret
mov
xchg
add
push
inc
lret
loop
lcall
ret
inc
lock
shrl
cltd
popa
rclb
mov
rcrb
jecxz
idiv
ss
push
inc
mov
cmp
icebp
or
sub
xchg
hlt
push
sbb
fistpl
stos
mov
xchg
push
mov
jecxz
iret
into
mov
outsl
sbb
add
inc
inc
imul
notl
mov
jle
push
es
js
add
fisubl
sub
mov
add
xchg
jno
pop
fstpt
push
push
add
xor
inc
pusha
adc
mov
sub
fcmovnbe
inc
es
mov
push
bound
test
rcpps
and
rorb
pop
cmc
lea
jecxz
jl
rclb
test
ffreep
push
iret
ficompl
xor
cmp
out
adc
in
add
mov
fstpt
push
mov
cmp
mov
mov
cli
xor
and
into
adc
dec
pop
cmp
scas
push
and
or
xchg
in
idivb
sarl
stc
mov
dec
bound
inc
or
out
pop
pop
and
or
or
add
mov
sub
jbe
mov
sbb
shll
stos
push
mov
cwtl
pop
movsl
add
imull
aam
lahf
es
push
add
jecxz
ret
es
push
push
imull
pop
lahf
sbb
adc
and
sub
clc
add
inc
mov
stos
pushf
dec
andb
mov
mov
lea
sbb
inc
adc
pop
cld
das
pop
cs
out
repnz
lock
cmp
push
jb
add
cld
and
imul
ljmp
test
push
ret
add
mov
out
jbe
filds
mov
xchg
clc
mov
push
imul
test
ret
mov
xlat
xchg
push
es
jne
roll
inc
mov
xchg
pop
jle
or
push
movb
inc
jle
lcall
mov
xchg
cmp
push
cmp
lods
outsb
std
and
testb
mov
mov
mov
scas
push
ljmp
or
scas
sub
add
mov
jecxz,pn
lahf
xlat
sahf
jnp
sub
out
adc
imul
push
fcoms
in
lcall
gs
fisubl
mov
outsb
add
or
addb
rorb
enter
stos
fisttpl
add
push
push
int
mov
xchg
outsb
sahf
add
sbb
and
orb
jnp
jne
mov
mov
pop
sbb
outsb
out
push
cltd
or
iret
sbb
into
and
inc
push
es
into
mov
xlat
push
xchg
sbb
ds
mov
and
lcall
pop
clc
fwait
xchg
dec
xchg
cmpsl
or
fmull
and
mov
or
jno
rorl
subl
mov
xchg
xor
clc
ret
jo
sarb
fisubl
loop
lcall
movsl
mov
scas
sub
xchg
test
cmpsb
mov
xor
xchg
sub
sbb
fistpl
jecxz
jae
in
aas
scas
loop
push
pushf
fsubr
sub
inc
dec
dec
xlat
pop
xchg
pop
scas
jg
loope
fists
out
adc
and
add
les
unpckhps
xor
int3
ss
inc
ficoms
dec
push
stos
mov
mov
pop
dec
ficompl
xchg
lock
adc
fisttpl
mov
push
sbb
push
inc
jne
inc
es
dec
xchg
imul
xchg
xor
sbb
push
xchg
shlb
loop
mov
subb
or
into
mov
sbb
pop
cmp
lret
cmovae
cmpsb
cmp
fisubrs
and
jbe
jno
das
jecxz
sti
aam
push
xor
ret
dec
cmp
lret
cmp
and
pop
push
notb
ds
push
pop
mov
xchg
iret
mov
xchg
out
clts
ficoms
adc
sbb
cmpsl
cmpsb
jmp
test
stos
out
imul
jnp
inc
es
inc
es
lahf
push
out
ss
push
sbb
stos
mov
outsb
mov
stos
cs
cmpsb
adc
xchg
mov
push
aad
or
pusha
bound
sbb
ret
lea
insb
push
push
push
movsl
and
mov
ds
mov
push
aam
fildl
add
jbe
inc
sub
enter
sub
pop
lods
push
push
mov
xchg
ret
mov
roll
je
pop
add
xor
orb
loop
ss
xchg
repnz
sti
mov
ljmp
jbe
xchg
push
test
mov
or
cmp
xlat
inc
fistps
pop
add
ret
dec
in
test
add
dec
sbb
add
roll
push
or
mov
cmp
or
or
add
ljmp
adc
mov
add
mov
pop
xor
push
mov
push
mov
loope
jecxz
xchg
xchg
cmp
add
es
or
cmp
sti
pop
inc
ret
cmpsb
iret
pop
pop
or
lret
jle
add
dec
push
push
sahf
imul
jecxz
and
inc
mov
push
cmp
jl
gs
lret
bound
imul
xchg
enter
add
fstpt
jl
int3
mov
je
mov
iret
popf
mov
fiadds
ljmp
insl
jecxz
ljmp
test
addb
inc
bound
push
stos
cmp
scas
fistpl
subl
stos
sbb
mov
stos
repz
fdivl
loop
bound
pop
fdivrs
in
jbe
dec
mov
and
cli
or
rcrb
iret
fadds
in
push
xchg
jbe
bound
fstl
scas
fsts
mov
mov
push
cld
repz
repnz
pushf
mov
inc
es
push
testb
mov
je
outsb
or
pop
mov
lea
mov
shll
dec
dec
add
jmp
fldl
into
pop
add
sub
mov
vmwrite
inc
es
xor
inc
out
mov
cmpsb
sahf
and
xor
ret
mov
mov
imul
xchg
add
test
es
cvtps2pd
xchg
iret
ds
and
cmp
mov
lcall
cmp
mov
lea
cltd
lods
fcomi
leave
ss
pop
iret
cmp
enter
out
mov
or
cmpsb
into
nop
rolb
mov
sub
fisubrl
pop
ss
pop
aas
lea
or
aas
add
cs
cmc
dec
mov
inc
hlt
lahf
push
repz
es
fs
push
push
fisubrl
ss
cmp
mov
push
xchg
sahf
and
sub
and
test
ret
cs
bound
idivl
sub
icebp
mov
push
adc
xor
and
xor
scas
insl
sti
inc
add
ss
stos
inc
push
addl
mov
loop
or
inc
push
add
lods
cmc
clc
push
mov
dec
xchg
iret
mov
push
fidivrs
pop
repnz
insb
push
iret
lods
push
xor
add
jp
shll
xchg
jecxz
push
fildll
push
fsts
jae
scas
lods
mov
subl
xchg
sub
lcall
push
and
mov
mov
mov
shll
fistps
push
xchg
or
dec
cmp
mov
movsb
loop
xor
push
es
add
pop
dec
dec
popa
aam
pop
adc
push
mov
jbe
dec
ds
outsb
cmp
aam
into
aam
cs
stos
add
ds
cmpsl
sub
or
pop
mov
inc
push
mov
fldcw
cmpb
ret
cwtl
jg
and
fstpt
gs
mov
arpl
mov
out
es
xlat
jle
fistpl
add
adc
ss
adc
pop
iret
push
fidivrs
lret
mov
movl
and
pop
add
xchg
inc
nop
ja
pop
mov
ds
rorl
test
push
mov
dec
ret
cmpsb
subb
xlat
std
fcmovbe
aad
mov
or
xchg
ja
jno
pop
sbb
inc
inc
push
cmpsb
fimuls
leave
xor
gs
xlat
pop
mov
mov
mov
pop
sti
in
and
fimuls
iret
fistl
mov
ss
sti
xchg
lret
mov
jno
and
rcrb
test
repz
push
pop
add
adc
sbb
ljmp
mov
xor
sbb
inc
mov
adc
mov
jnp
push
iret
pop
xchg
fdivrs
xchg
lret
jno
jecxz
test
xor
xlat
stos
dec
add
cmp
sahf
popf
pop
movhps
xchg
sub
subl
rorl
pop
add
add
cmp
inc
addr16
test
rcrb
push
ljmp
pop
aam
iret
mov
movl
addl
push
pushf
jbe
shll
inc
fistpl
cmc
cmp
mov
jp
dec
aas
add
cld
cmc
ja
mov
push
push
pop
hlt
out
sahf
es
aad
push
push
jge
xchg
pop
push
push
ret
ds
adc
es
sub
mov
pop
dec
sbb
sbb
add
out
push
lea
mov
mov
pop
or
mov
xchg
pop
mov
add
inc
movsb
or
into
mov
cmpb
rcll
mov
push
mov
ljmp
int3
mov
scas
push
cmp
movaps
mov
imul
ret
xlat
je
push
stos
xlat
outsb
push
jnp
scas
bound
lcall
jecxz
mov
mov
mov
sbb
inc
xchg
ret
imulb
add
push
inc
add
aad
push
aas
jne
mov
es
inc
adc
cmpsb
mov
jge
test
mov
into
xor
das
outsb
xchg
sub
iret
push
mov
scas
or
dec
cmp
stc
leave
or
bound
in
mov
or
dec
aas
iret
mov
pop
cmpl
mov
movsb
and
push
test
sbb
mov
xor
push
outsb
xlat
insl
fisubrl
std
jns
push
ljmp
cmp
inc
push
push
push
push
cltd
arpl
adc
xchg
xlat
mov
jecxz
xchg
or
adc
out
cwtl
adc
and
push
mov
or
jle
ret
es
pusha
aam
sbb
push
mov
and
cmp
repnz
pop
movb
out
adc
add
into
xchg
out
or
xchg
es
sbb
jae
mov
insl
push
mov
adc
sub
xchg
lods
dec
clc
jg
mov
cvttps2pi
mov
add
loop
cs
push
fdivs
mov
or
sbb
dec
add
mov
inc
or
xchg
ret
push
fcoml
or
dec
sbb
sub
pop
into
and
and
and
adc
add
sahf
cli
inc
testb
inc
pop
pop
aas
or
imul
fbld
mov
mov
test
mov
cs
or
pop
scas
adc
inc
cmp
pop
movb
mov
dec
hlt
repz
cmpsb
shlb
mov
pop
jmp
pop
xlat
hlt
fists
nop
xchg
mov
sub
push
mov
ret
insl
xorb
add
push
cs
fcmovb
outsl
adc
dec
aam
dec
push
cmpsb
push
or
sub
inc
cli
dec
or
imulb
cmpsb
in
sub
pop
push
push
jg
mov
loopne
push
cli
cmpsl
dec
lahf
daa
test
pop
insl
mov
fstl
aas
dec
ret
xchg
cli
add
jecxz
adc
shlb
clc
push
leave
add
push
nop
mov
fcmovne
bound
dec
sbb
mov
push
sub
and
mov
jo
push
xchg
loop
mov
xchg
ds
adc
mov
pop
push
ret
push
mov
add
std
inc
das
cmpsb
xchg
rcrl
dec
ret
mov
cmp
inc
aad
push
mov
iret
inc
mov
out
push
imul
imul
cs
ss
xor
hlt
jecxz
rclb
fisttpl
into
push
aas
mov
pop
shlb
in
cmp
lods
mov
push
aas
mov
outsb
inc
into
mov
sbb
stos
xor
push
mov
arpl
push
jmp
adc
aad
shll
fwait
test
mov
cmc
gs
cmpsb
fcmovbe
sbb
xor
out
loopne
gs
jmp
setle
divl
or
push
gs
adc
push
hlt
sbb
movb
dec
and
fcmovnb
or
sub
push
loop
mov
das
push
sub
mov
xchg
pushf
mov
daa
dec
cmp
hlt
gs
loop
xlat
aas
es
mov
fwait
and
aas
je
mov
mov
push
cmc
push
cmpsb
shrl
pop
clc
dec
sbb
pop
iret
leave
jg
adc
add
mov
cs
out
into
xchg
call
es
sbb
imul
pop
sbb
jno
xchg
sub
push
pop
addr16
pop
or
mov
mov
shrb
fistpl
push
jne
mov
cmp
scas
bound
sub
pop
push
mov
fidivl
mov
outsb
push
es
jmp
cmp
add
ficoms
inc
ds
mov
ljmp
mov
or
push
lods
out
xor
mov
sahf
add
jbe
pop
bound
dec
cmc
test
sub
insb
push
xchg
mov
or
adc
test
and
outsb
in
pop
inc
jg
cmp
add
push
cmp
mov
sti
loop
scas
fisubrs
test
mov
les
dec
outsb
fcomi
and
pop
sbb
movsb
push
scas
test
mov
and
inc
fildl
rclb
jae
shlb
test
push
xorl
fistl
dec
lods
iret
mov
push
mov
jns
xor
sbb
es
roll
test
xor
data16
mov
outsb
sbb
xchg
mov
cmpb
scas
pop
jmp
mov
hlt
mov
out
pop
ss
jecxz
in
dec
bound
and
loop
gs
out
mov
rclb
cmp
push
sbb
pop
cmpsl
push
adc
dec
mov
or
ret
test
lcall
jle
ja
mov
dec
fadd
test
mov
sahf
fimuls
xchg
sub
jge
jecxz
fcomi
ret
push
push
push
pusha
out
xchg
in
xchg
mov
jne
adc
in
and
sbb
or
aas
xlat
leave
dec
inc
inc
dec
jns
inc
dec
out
ret
sahf
pop
cmpsl
xchg
hlt
fimuls
movsb
adc
mov
cmpsb
gs
out
mov
xor
mov
or
adc
sarl
mov
ficompl
ffreep
lods
std
pop
dec
and
outsb
push
xorb
scas
pop
push
jg
inc
mov
lahf
push
jecxz
inc
add
and
jmp
sub
mov
clc
xchg
add
or
xlat
mov
dec
sti
aas
mov
sub
leave
adc
rcrl
stos
push
inc
inc
aad
pushf
sub
xlat
adc
xchg
xor
ss
filds
jmp
sbb
mov
bound
push
mov
testl
aam
loop
ret
outsb
ss
ret
mov
outsl
xchg
movsl
inc
dec
push
dec
fnstenv
fimull
sbb
jne
cs
into
and
sbb
inc
das
stos
pop
movd
inc
sahf
stos
mov
sti
gs
xchg
xchg
into
mov
ficompl
pusha
idivl
mov
and
bound
shlb
imul
or
mov
jge
fbstp
aad
test
xorb
cmp
daa
push
mov
xchg
sub
fisubs
push
aas
rcrb
pop
pop
push
jae
stos
push
cmp
pavgw
add
jns
or
fistpll
mov
iret
push
xchg
jne
into
jp,pn
push
bound
push
sbb
xchg
and
or
insl
mull
ss
jle
adc
in
dec
xchg
and
lahf
push
mov
out
fimull
stos
xchg
test
shlb
bound
pop
cmc
xchg
lcall
shrl
cmpsb
fisubs
adc
xchg
xlat
iret
orb
pop
mov
push
dec
or
or
sahf
jne
xor
cmp
out
xlat
nop
sbb
cmpsb
dec
lahf
push
in
xchg
sbb
ljmp
cmc
rolb
out
cmp
xchg
and
xchg
dec
adc
mov
out
push
xchg
push
mov
fisttpl
sahf
push
jecxz
scas
or
stos
or
and
push
pop
mov
dec
cmp
aas
ds
or
pop
push
sbb
inc
dec
cmp
add
mov
mov
shlb
pusha
cli
xor
jne
and
sub
ds
out
dec
pop
aaa
je
jle
xor
jl
sahf
call
mov
cld
loop
or
loopne
outsb
ret
push
jbe
mov
mov
sub
xor
dec
jg
xchg
mov
int
or
mov
cltd
js
gs
cltd
into
mov
lcall
sbbb
rorb
mov
rcrb
pop
jnp
mov
rcl
or
adc
ds
pop
sub
push
idivl
push
pop
mov
or
ror
pop
into
mov
shll
or
rcrb
cmc
lahf
push
loop
into
mov
xlat
ret
sbb
fidivs
jo
pop
sbb
aas
push
push
sbb
xor
inc
fisttps
loop
mov
testb
aad
sbb
rorl
pop
xchg
aaa
mov
or
movb
jg
popf
leave
ja
xchg
dec
in
xchg
insl
int3
std
pop
mov
dec
ret
push
xlat
fcmovnb
xor
mov
ljmp
mov
inc
ret
jbe
xor
shll
ret
or
mov
hlt
jl
xchg
outsb
cmp
data16
cmpsb
sub
push
and
mov
les
bound
and
ret
adc
push
mov
mov
push
ret
fstl
mov
and
sub
mov
stos
mov
test
cmc
lahf
cmc
and
jecxz
mov
and
stos
pop
sub
pop
lahf
rcr
cmpl
scas
scas
mov
dec
ret
mov
bound
sub
loop
adc
jne
mov
dec
mov
jb
mov
rcll
dec
jnp
push
gs
movsb
xchg
and
mov
das
int
ret
out
and
cmp
fidivrs
xchg
sbb
xchg
enter
pop
repz
shl
sahf
jne
lods
ret
sub
mov
iret
sub
mov
loop
dec
notb
fidivrs
push
out
gs
enter
xchg
test
sub
push
scas
pop
lods
mov
jl
dec
les
mov
sub
fisttps
andb
iret
mov
push
push
sahf
cs
cld
sub
ret
push
and
out
xchg
insl
or
iret
aam
es
push
jmp
sub
cmp
cmc
mov
data16
rcr
cs
mov
fmuls
jecxz
lcall
mov
iret
out
aad
cmp
xchg
mov
xor
out
fdivrl
cmpsl
mov
outsl
loop
jo
mov
cld
inc
ds
or
pop
and
mov
stc
cs
fisubl
mov
ret
aam
pop
ds
outsb
sbb
inc
int
mov
pop
sahf
sbb
ret
inc
push
cmp
xchg
sahf
sbb
add
lcall
gs
or
fcmovu
lret
or
lret
mov
iret
sub
jnp
jge
xor
cmc
push
cmp
aaa
sbb
cmp
sbb
rol
mov
out
jg
js
sbb
aam
ret
mov
pop
dec
inc
adc
add
fildl
xlat
sbb
xorb
mov
ja
stos
jg
out
aad
pop
cmp
sub
inc
add
inc
fmuls
pop
aaa
sub
push
es
sti
xchg
lcall
iret
xchg
adc
push
pushf
xor
ret
sub
xlat
or
fidivl
test
ds
and
or
pop
xorb
mov
lret
mov
fildl
mov
mov
mov
push
movsl
mov
dec
lods
enter
xlat
idiv
outsb
ds
es
imul
stos
mov
and
sub
mov
in
aam
inc
sub
in
lcall
and
outsb
sub
cmp
push
jle
or
push
sbb
gs
and
sub
push
into
add
dec
adcb
pushf
mov
test
inc
dec
gs
ljmp
mov
cmp
daa
add
add
push
cmp
push
fdivs
fiadds
xchg
lcall
into
ret
jl
shl
fisubrs
aaa
cmpsb
fildll
mov
xchg
jbe
mul
mov
loope,pt
mov
stos
ret
loop
push
push
shl
mov
rclb
cli
stos
in
iret
int3
push
clc
lds
gs
aad
test
pop
lds
fdivs
mov
lret
mov
cmp
mov
sbb
fcmovne
push
fisubrs
sbb
push
xlat
pop
loop
dec
idivl
out
iret
mov
xchg
pop
int
mov
jne
sahf
mov
xlat
mov
lret
add
or
inc
dec
fidivs
pop
fisttpl
mov
cmpsb
scas
sbb
mov
lcall
sub
pop
pop
xchg
or
push
stos
ljmp
mov
in
fldt
shrb
push
lcall
pop
xchg
add
fists
outsb
push
xchg
mov
adc
sarb
push
mov
push
mov
add
into
mov
cmp
aas
bound
fimull
rorl
adc
mov
sub
fdivs
lock
sub
xchg
sub
jl
stos
scas
mov
mov
jecxz
pop
cmp
or
mov
enter
push
into
scas
les
push
ret
shlb
and
aad
xlat
mov
ds
out
int
hlt
dec
adc
es
xor
sbb
xchg
mov
negb
cmpsb
rcrl
mov
push
inc
dec
or
pop
aaa
add
jae
xchg
iret
xchg
xchg
pop
mov
xor
sahf
xchg
movb
aad
gs
into
dec
dec
mov
mov
pop
ja
mov
xchg
adc
gs
push
sbb
dec
ss
into
pop
dec
mov
ret
push
sub
push
mov
jbe
ficoml
data16
xchg
mov
or
cmp
add
pop
add
pop
ret
ds
lcall
pop
enter
and
mov
and
shll
or
sub
out
sbb
bound
jmp
cmp
pop
js
jnp
gs
lahf
push
mov
fadds
ret
cmp
xor
in
cmp
mov
mov
decb
test
mov
push
mov
ret
into
lcall
pop
es
scas
mov
pop
cmpsb
imul
mov
or
or
mov
mov
out
sti
cmp
int3
dec
push
mov
sbb
jle
fucomp
jge
outsb
xor
xchg
push
fidivrs
jl
sbb
ret
sbb
les
mov
fucomi
inc
iret
ljmp
scas
ror
push
sbbb
adc
testb
add
push
and
loop
addl
push
xchg
mov
inc
mov
push
dec
or
shll
push
pop
lret
ljmp
insl
notb
aas
bound
stos
cs
mov
or
and
mov
jo
xchg
xlat
or
lods
movb
fsubrl
stos
mov
or
pop
xchg
inc
xchg
cmp
pop
sub
jle
pushf
fistps
faddl
aas
mov
cmpsl
ljmp
gs
aas
push
shl
insb
inc
insb
push
add
xlat
ret
xchg
or
fisubrl
int3
add
adc
inc
icebp
movsl
ret
sub
sahf
lds
mov
fsubrl
ljmp
push
shll
mov
int3
xor
insb
fcmovbe
sub
mov
jae
dec
data16
gs
sbb
xchg
ss
call
jecxz
and
aam
fmull
stos
xor
mov
icebp
in
xor
lahf
popl
int
or
push
and
lcall
push
pop
pop
dec
mov
xchg
ja
test
leave
testb
xor
gs
mov
jle
out
fildll
inc
rcr
mov
add
inc
shrl
push
mov
mov
in
stc
inc
push
pop
xor
pushf
gs
push
add
add
or
addr16
sub
pop
xchg
lods
sub
xlat
aam
push
rcl
iret
or
dec
cmp
xchg
dec
cs
dec
int3
gs
xchg
and
in
subl
jle
out
in
push
mov
in
scas
push
pop
mov
push
testb
push
jne
cmpsb
xchg
icebp
jp
xchg
or
loopne
ja
mov
sbb
mov
das
pop
inc
icebp
lds
xlat
and
scas
dec
inc
xor
stos
inc
push
lcall
stos
cmpsl
pop
ljmp
icebp
lds
add
fsubrl
and
ret
push
repz
and
mov
xchg
push
xor
mov
jecxz
gs
lcall
in
adc
aad
push
pop
stc
xor
push
insb
gs
stos
jle
popa
cs
inc
scas
loope
js
gs
stc
popf
gs
fmul
mov
xlat
hlt
into
enter
daa
ljmp
xchg
sahf
fbld
cwtl
fisubrs
rorl
adc
scas
cmp
sbb
js
cmpsb
xchg
mov
or
test
pop
frstor
rorl
daa
cs
add
cmp
jg
into
lret
mov
inc
shrb
insb
sub
jo
sub
fiadds
aaa
in
fistps
in
lahf
xchg
cmp
mov
sahf
iret
jmp
cltd
shll
sti
xor
push
sbb
addr16
add
push
bound
aas
ficoml
push
mov
add
movsb
insb
jg
ds
push
mov
cmp
pop
jno
movsl
ret
xchg
sahf
pop
jmp
mov
rorl
adc
ret
jecxz
movsb
loope
ds
push
into
bound
scas
es
or
cmpsb
dec
fstpt
loopne
mov
push
mov
add
mov
ljmp
stos
les
aad
xlat
xchg
mov
jecxz
xchg
sub
mov
ljmp
outsb
iret
xlat
and
cmp
mov
mov
and
je
dec
iret
xchg
or
cs
lcall
shr
sbb
clc
mov
out
jae
leave
std
cmpsb
andb
lcall
or
pop
into
es
mov
push
pop
mov
lahf
mov
fistpl
push
cmc
lcall
push
mov
insb
mov
into
mov
push
ret
lret
mov
push
mov
pop
lock
mov
ret
xchg
shll
inc
push
stos
jae
jecxz
sbb
and
mov
dec
lea
inc
jb
aaa
and
sub
into
jo
xchg
cmp
les
into
jle
add
cmp
push
scas
stos
add
pop
dec
es
ficomps
aas
jmp
into
mov
je
push
orb
shlb
sahf
xchg
repnz
mov
xor
pop
mov
jl
in
xchg
cmp
data16
sbb
cmpsb
xor
xlat
push
push
adc
lret
ret
or
xchg
lret
and
cwtl
xor
xchg
dec
xor
call
xchg
shll
push
movsb
sti
fucomip
into
push
dec
out
xor
and
xor
fistpl
add
mov
mov
test
mov
mov
push
pop
decb
push
inc
mov
cs
imul
mov
xchg
movb
daa
add
mov
sub
xlat
pop
mov
jne
mov
xor
fdivrl
mov
pop
or
push
stos
fistpl
jb
and
sahf
stos
mov
sbb
cmp
out
cmp
mov
xchg
inc
push
cli
repz
out
loop
jg
mov
sarb
pop
ja
add
stos
xchg
adc
movsl
jecxz
lret
pop
ds
lods
pop
lods
pop
fistl
in
out
xchg
into
sbb
sub
dec
shr
dec
sub
ss
jp
dec
pusha
xchg
cmpsl
jns
fisubl
scas
mov
dec
xchg
testb
ror
fstl
sub
push
or
inc
xchg
into
mov
cmp
push
sbb
mov
sub
push
mov
dec
mov
imul
xchg
stos
aas
add
hlt
cs
mov
inc
outsb
test
gs
cmc
xchg
mov
push
push
outsb
into
xchg
mov
iret
fisttps
mov
rcrb
or
lcall
nop
mov
inc
push
pop
sub
jns
ss
jecxz
lret
add
dec
arpl
mov
in
push
scas
inc
jecxz
sbb
xlat
or
ds
push
push
adc
and
ljmp
sub
aam
fistpl
stos
xor
mov
mov
es
dec
hlt
dec
push
and
sub
shrb
push
add
jmp
or
jbe
scas
mov
add
sub
mov
jl
add
cmp
aam
dec
push
inc
jae
decb
dec
pop
mov
dec
push
test
push
punpckldq
lcall
sub
out
cld
mov
pop
push
rcrl
hlt
sbb
xchg
sub
popa
fdivs
sbb
xchg
dec
push
aad
es
jnp
cmp
sub
into
dec
mov
ret
in
dec
addb
cli
add
adc
fadds
shrl
mov
ret
outsb
xchg
jecxz
xor
mov
negl
ss
mov
push
nop
repz
mov
mov
mov
das
inc
mov
cmp
jl
lss
dec
and
xchg
add
and
subb
adc
stos
ja
or
fs
and
pop
mov
test
inc
test
jge
subb
shrb
mov
lods
pop
mov
push
test
push
insb
sar
mov
pop
push
jnp
dec
lock
leave
cmp
sahf
mov
sbb
xor
movl
mov
inc
loop
pop
jbe
dec
aas
sub
cmpsb
sahf
iret
negl
mov
push
mov
mov
fisubrl
mov
push
insb
lock
loope
adc
jecxz
and
lock
xlat
dec
push
movsl
sbb
xor
push
xor
movsb
ss
mov
push
stc
fcmovne
pop
fisubrs
mov
dec
je,pt
dec
dec
push
clc
mov
mov
repz
or
ljmp
pop
ret
pop
ja
movb
xor
loop
mov
cli
rcl
int
mov
enter
mov
xchg
aam
or
xchg
push
scas
mov
inc
inc
push
jecxz
mov
adc
sbb
mov
pop
dec
aas
xchg
mov
add
test
xchg
add
repz
cmpsb
dec
in
dec
into
inc
cli
fsubrs
mov
mov
xchg
pop
ss
xor
out
fmuls
mov
cmp
adc
dec
inc
push
idivl
or
pop
test
and
xor
es
inc
cmp
aad
imul
xlat
jns
xchg
sbbb
inc
xchg
in
lret
add
add
ffreep
mov
ret
call
ja
mov
mov
mov
scas
or
xchg
push
iret
inc
xor
push
cld
scas
pushw
loopw
jge
xchg
pop
cwtl
pop
add
add
push
pop
mov
mov
mov
add
push
add
dec
inc
cwtl
dec
push
repz
loop
aad
es
xchg
fimull
mov
insb
add
push
mov
repnz
mov
es
mov
push
xor
dec
push
mov
jge
leave
push
mov
cmp
jnp
mov
aam
push
addr16
fcmovb
mov
jmp
mov
xchg
and
xor
test
scas
jg
cmpsl
pop
or
xor
mov
pop
fidivl
cli
cmc
lods
cmpsb
rolb
xor
popa
jg
cs
pop
mov
fisttpll
or
cmp
mov
das
into
sahf
and
pop
add
iret
or
xor
push
cmpsb
mov
jo
lret
iret
and
dec
es
mov
mov
popf
mov
xchg
mov
jmp
pop
fidivl
push
incb
adc
imul
hlt
les
bound
outsb
push
cs
ljmp
add
pop
or
or
adc
sub
ret
inc
aad
inc
cmp
dec
sbb
xchg
shlb
ds
icebp
push
pop
mov
mov
scas
cmpsl
mov
adc
mov
je
lcall
fcmovbe
xchg
mov
adc
push
sub
mov
shrl
push
arpl
mov
into
mov
fimull
ljmp
xchg
sbbb
mov
scas
add
divb
or
test
dec
sbb
pop
pop
inc
test
pop
into
fists
subb
add
sarb
push
stos
andb
mov
push
or
es
daa
add
bound
xchg
sbb
aam
sbbl
or
mov
ss
out
xlat
dec
add
pop
push
shlb
mov
iret
mov
sahf
insl
xchg
bound
dec
fistl
and
and
sbbl
ss
mov
mov
xor
mov
pop
movsb
fstpt
into
adc
sbb
out
psrad
pop
sub
and
ficomps
dec
mov
jnp
fbld
and
dec
repnz
push
jb
mov
add
fidivrs
lods
xchg
data16
jg
mov
sbbl
stos
test
mov
push
push
push
mov
and
mov
aam
pop
rorb
dec
ficoms
add
mov
cmc
enter
out
cvtps2pd
aas
cmp
fidivrs
pop
push
sub
repz
cmpsb
shlb
add
or
lock
test
rcrl
bound
ficompl
fldt
mov
inc
dec
out
push
lds
adc
iret
mov
mov
aad
xchg
cs
push
mov
ret
ret
out
dec
inc
cmp
sbbl
ss
jecxz
and
cmpsl
push
push
cmpsl
in
and
sti
sbb
dec
test
mov
test
out
push
mov
xlat
je
and
stc
pop
push
inc
or
and
shlb
es
jge
sbb
scas
ss
fcom
lock
push
dec
mov
mov
iret
cld
or
push
mov
scas
mov
ret
lods
mov
loop
mov
aad
andb
cmc
ljmp
push
pop
jle
movsb
ret
mov
push
cmp
mov
or
xchg
orb
dec
cmp
xchg
lds
cs
or
ret
add
aad
xchg
mov
push
outsb
push
repnz
xchg
cs
lahf
ja
mov
xlat
xchg
scas
xorl
stos
shrl
mov
adc
mov
inc
ds
es
ss
push
cli
jno
mov
mov
stos
js
xlat
dec
jmp
pop
mov
xchg
in
ret
jo
xchg
loope
pop
gs
movsb
inc
jp
xor
cmp
inc
pop
jbe
rcll
inc
ret
push
add
pop
imul
and
lcall
fistpll
es
iret
hlt
mov
xchg
imul
imul
or
lock
or
dec
test
imul
adc
push
addr16
cmp
arpl
xchg
ret
mov
testb
stos
push
aad
in
mov
stos
aam
into
mov
inc
fisubrs
and
inc
xchg
shll
test
inc
fwait
cmpsb
out
test
xor
mov
and
push
test
xchg
aas
ljmp
adc
addr16
cwtl
xlat
pop
push
jmp
xchg
ret
mov
sar
mov
xchg
sbb
pop
scas
and
fisttps
add
stc
jecxz
and
lcall
into
pop
cmp
pop
ret
pop
and
adc
xchg
sub
outsb
lcall
adc
add
push
sub
jl
idivb
es
mov
fimuls
test
dec
xchg
imul
mov
sub
sbb
adc
jecxz
push
sbb
and
or
or
filds
iret
lcall
cmp
cmpsb
in
mov
and
and
jecxz
jnp
mov
lret
sub
cmp
imul
mov
dec
pop
inc
movsb
scas
addl
push
scas
fcmovnb
cmp
test
std
inc
sbb
cmp
adc
sub
ficomps
in
outsb
fidivrs
subl
sbb
push
dec
cli
cs
scas
ret
lahf
mov
mov
xchg
xchg
xor
mul
loop
scas
adc
push
xorb
mov
into
cs
sbb
cmp
fucomip
add
inc
loop
shl
add
or
mov
jge
fiaddl
push
mov
pop
mov
mov
mov
xchg
shlb
loop
push
push
push
fistl
iret
inc
xchg
and
jnp
vmovq
scas
cmpsb
push
adc
pop
iret
add
push
sbbb
xchg
xchg
xchg
sarl
or
in
ljmp
cmpb
cltd
sbb
and
push
adcb
inc
push
mov
and
dec
xlat
outsb
push
orb
cmp
pop
outsb
xor
test
cmc
jne
sub
push
mov
movsb
mov
ljmp
jae
test
imul
xor
pusha
roll
idivb
fistps
mov
data16
dec
testl
pop
fisubrl
push
ret
mov
aam
ret
push
push
jge
mov
pop
mov
jnp
xchg
jno
sub
adc
cmpsb
inc
scas
rdmsr
and
lcall
xchg
mov
es
ss
adc
xor
pop
and
xchg
enter
iret
cmpsb
clc
push
push
add
test
xorb
cmp
jnp
jb
shlb
xor
ss
outsb
stos
push
cs
fmuls
push
cmp
push
mov
iret
push
xor
inc
ret
int3
rol
stos
in
dec
sub
pop
es
adc
xchg
mov
je
sbb
xlat
rolb
or
es
xchg
adc
cmp
iret
jecxz
bound
mov
jbe
sub
ds
arpl
adc
push
pop
fnstsw
popf
inc
and
xlat
cmp
stos
pop
adc
mov
fisttps
sub
xor
adc
dec
loop
and
es
into
stos
push
lret
and
fcmovne
mov
sub
push
and
mov
adc
or
xor
jmp
pop
sahf
imul
or
sbb
pop
mov
cmp
out
push
cs
mov
jae
sbb
fildll
mov
push
push
and
sbb
lcall
xor
or
mov
xchg
mov
cmpsb
loop
jae
scas
xorl
cmpl
add
popl
mov
pop
mov
fisttpl
xchg
add
iret
push
or
inc
aas
sti
call
push
rcrb
mov
aas
or
adc
add
movl
dec
mov
cld
into
push
cmpsb
into
out
pop
stos
mov
imul
push
xlat
imull
dec
mov
cmp
clc
xor
xchg
dec
push
inc
es
stos
hlt
fsubp
mov
scas
rcr
xor
into
dec
frstor
mov
sbb
subl
and
sbb
pop
or
mov
aad
loop
ds
call
jmp
ds
andb
adc
inc
cmp
or
cmp
imul
bound
enter
aas
fisubs
adc
fcmovbe
add
dec
bound
les
add
pop
stos
pop
adc
and
jecxz
les
dec
pop
sub
mov
or
or
xchg
bound
add
adc
cmc
sub
dec
mov
push
div
iret
mov
testb
imulb
shrb
mov
rcll
adc
mov
push
fisubrl
mov
ss
push
mov
into
mov
dec
sahf
xor
push
jge
xlat
mov
or
cld
sub
test
ffreep
movb
mov
jecxz
xor
clc
inc
ds
push
jl
ja
roll
hlt
sub
xlat
sti
xchg
das
xchg
ret
cmp
or
cmc
outsb
into
ljmp
fs
aas
push
cmpsb
sub
inc
movsb
repz
ljmp
mov
push
ja
or
out
into
mov
or
xchg
or
or
push
inc
sbb
je
mov
test
push
fimuls
jne
xlat
mov
mov
out
push
sti
cltd
sub
or
lock
cmp
les
incb
mov
ret
cs
es
and
cmp
mov
jmp
push
jbe
movl
out
xchg
out
fimuls
call
in
rorl
xchg
lods
rcl
out
mov
push
fimull
and
ret
mov
xchg
sbb
ffreep
push
sahf
sti
add
cmpb
int
es
adc
lock
out
das
dec
aas
imul
test
push
sti
out
je
push
mov
push
cs
push
fcoms
push
orb
sbb
sub
mov
fildll
loope
mov
xlat
inc
out
in
repnz
cmp
dec
sbb
movsb
ret
ja
jbe
xchg
pop
lret
or
mov
shrb
repz
mov
dec
ret
ficompl
ret
pop
sub
bound
sbb
or
xlat
lds
mov
cs
xchg
mov
loopne
push
xchg
repnz
ret
cmc
xchg
cmpsl
repnz
inc
lcall
stc
cs
lds
arpl
dec
lret
mov
mov
into
fisubrl
mov
xchg
lahf
xchg
cmpsl
mul
test
ds
pop
adc
add
pop
or
mov
cmp
cmp
nop
jecxz
jmp
imul
out
xlat
rorl
sbb
test
mov
sahf
mov
mov
cs
dec
into
pop
hlt
xor
push
push
dec
xchg
andb
dec
or
sub
add
nop
scas
jbe
mov
into
xchg
outsb
das
sbbb
dec
ret
and
es
push
sub
lret
fdivp
test
mov
xlat
mov
push
in
aas
fstp
pop
jno
and
pop
mov
sub
stos
shll
iret
pop
movsb
les
sbb
cmp
sub
notb
inc
xchg
outsb
sub
or
and
push
dec
push
inc
xchg
lcall
outsb
cmpsb
fisubrl
sbb
xchg
mov
subl
iret
ret
aaa
shlb
xchg
cmp
jg
pop
popf
ret
mov
or
jo
push
and
xchg
in
ljmp
cmpsb
mov
xlat
out
movsl
nop
and
mov
and
cmp
out
push
mov
out
sub
scas
cmpsb
hlt
add
fbstp
push
nop
aad
mov
das
leave
jne
mov
mov
mov
push
loop
jecxz
jnp
push
push
shll
xorl
iret
shrl
jp
mov
adc
push
shrl
xor
cmp
ljmp
je
cli
inc
xchg
sub
push
pop
jg
xlat
push
cs
cmp
setg
stos
xchg
shll
into
cld
push
movsb
add
jecxz
aad
fcmovbe
movsb
push
lahf
sub
hlt
jecxz
loop
mov
lret
cli
xchg
push
cmc
pop
mov
add
push
ljmp
ds
clc
scas
sbb
add
sub
cli
cmpsl
es
jns
cmpsl
push
mov
test
adc
push
movsl
lahf
ja
andl
or
adcb
cld
outsb
push
pop
cmp
sahf
add
mov
add
jecxz
jbe
iret
xchg
dec
imul
out
push
movsb
scas
mov
es
add
es
insl
xchg
into
ss
xchg
push
mov
out
popf
and
lahf
cmp
out
into
cmpl
push
and
shll
imul
int
rcrb
rcll
jmp
push
add
ret
aad
xchg
xchg
out
lock
sub
push
mov
out
pop
push
dec
loop
inc
or
hlt
outsb
ss
cmp
mov
mov
insl
or
mov
gs
out
into
mov
inc
sbb
sbbb
xchg
cmpsb
lcall
out
repnz
mov
gs
shlb
loop
jbe
push
inc
sbb
lcall
iret
into
mov
ja
push
dec
adc
pop
ret
ss
ffreep
stos
ss
jl
lahf
mov
cmp
mov
inc
xchg
lods
push
pop
push
sbb
xchg
movsl
cmpl
xchg
jg
ficomps
xchg
mov
idivl
push
push
pop
mov
fildl
jne
out
mov
add
dec
ret
inc
ret
mov
mov
pop
bound
mov
push
bound
movsl
movb
xor
mov
push
ds
cmp
sbb
ljmp
aaa
mov
cli
mov
mov
sbb
cmpsl
xor
shlb
push
lea
pop
pop
je
xchg
in
test
pop
dec
aas
xor
repnz
jp
mov
ljmp
inc
mov
mov
jbe
sbb
into
mov
sbbb
dec
call
fldl2e
ss
mov
push
add
sub
adc
mov
sbb
insb
arpl
pop
and
push
push
sub
lret
or
xchg
or
sbb
es
inc
mov
int3
sbb
ret
es
loop
mov
jecxz
daa
leave
popw
test
mov
push
ficomps
and
ret
loop
mov
ds
dec
xchg
bound
and
scas
xchg
cmp
aaa
icebp
imul
push
mov
mov
scas
repz
fists
cmc
mov
nop
jns
push
in
scas
das
and
ljmp
lahf
mov
mov
mov
ficoml
and
cmp
rol
push
out
push
mov
sbb
xchg
add
lods
dec
je
ds
push
sub
mov
add
sbb
pop
or
faddl
xchg
mov
inc
jnp
repnz
push
pop
xchg
jecxz
pop
push
imul
sub
cmp
movl
lock
push
mov
fs
ljmp
push
or
push
bound
dec
fiadds
cltd
mov
adc
sbb
push
and
push
sbb
pop
into
adc
cmpsb
enter
pop
and
push
jb
pop
and
sti
into
xlat
xor
cmpsb
push
je
dec
xchg
outsb
jmp
addb
lcall
push
fisubrl
adc
out
movb
inc
pop
jp
lcall
or
xor
es
call
lahf
jne
mov
xchg
dec
and
pop
nop
cmp
mov
jle
pop
dec
sub
div
mov
xchg
lahf
ja
push
xor
ret
rcrb
sahf
ja
es
xor
cmp
bound
pop
mov
arpl
pop
pop
pop
iret
addr16
mov
mov
pop
and
xchg
push
or
sbb
inc
push
push
and
xchg
mov
push
lahf
les
out
ret
mov
daa
sbb
sbb
push
sub
lods
aas
push
out
andb
and
xorl
popf
mov
add
addb
test
test
or
pop
jecxz
mov
mov
cmp
cmp
cs
inc
sbb
fistpll
sbb
mov
add
or
outsb
xchg
ret
inc
jno
test
lods
jg
xlat
dec
xchg
pop
dec
test
lods
dec
push
xchg
orb
lcall
dec
mov
lret
test
enter
out
mov
add
cmp
fsubl
out
sbb
inc
jno
adc
out
imul
jecxz
xchg
or
jecxz
xor
xchg
push
scas
push
mov
push
xor
push
adcb
addr16
pop
cmp
pop
push
hlt
xor
xlat
push
mov
push
out
mov
fucomi
stos
fstpt
mov
mov
mov
pop
outsb
out
mov
sbb
cmp
push
mov
stos
push
test
push
aam
ljmp
xor
cmp
vmptrst
call
add
negb
push
cs
push
ljmp
neg
lcall
xchg
push
cmp
adc
add
ljmp
sub
xchg
sub
sbb
inc
enter
pop
push
adc
and
lods
fbstp
ret
push
out
mov
pop
xchg
out
gs
xor
fcmovnbe
lods
xchg
jmp
adc
push
ja
mov
sbb
or
cmpsb
push
sahf
subb
mov
adc
xchg
out
push
mov
ret
gs
sbb
iret
ficomps
push
push
cmpsl
dec
fstpt
aas
adc
and
adc
ljmp
rcl
sub
mov
ret
sahf
xor
or
add
out
add
jo
mov
fisubl
push
into
iret
and
inc
cmp
add
arpl
add
xlat
pop
add
ret
andl
xchg
adc
jg
shrb
mov
push
jle
pop
into
outsb
xor
push
rclb
fadd
jae
roll
push
push
notb
inc
push
ret
dec
sub
rorl
mov
mov
mov
clts
fbstp
in
push
push
ds
icebp
fmuls
pop
xchg
fimuls
cmp
adc
sahf
out
into
and
mov
and
and
xchg
jbe
mov
out
sub
loopne
or
addr16
cmpsb
cwtl
ja
in
add
dec
mov
sahf
dec
jge
jb
std
push
push
addl
pop
mov
mov
sbb
sub
jne
test
mov
mov
andb
xchg
cmpsb
push
out
out
test
push
jnp
xchg
popa
push
ds
push
xor
mov
jecxz
pop
jns
bound
mov
scas
push
adc
rorl
adc
sbb
mov
in
cltd
adc
ret
fimull
inc
push
mov
sbb
mov
push
ljmp
mov
pop
pushf
aas
or
es
or
add
icebp
xchg
out
dec
fimuls
push
adcb
mov
push
loop
testl
xchg
add
lcall
mov
hlt
aas
jecxz
mov
mov
cltd
add
push
scas
push
mov
xchg
push
or
jle
xlat
ret
rolb
test
adc
dec
xchg
mov
add
mov
inc
ds
and
mov
in
lcall
lret
fistpll
adcb
adc
ljmp
aas
xchg
push
mov
jecxz
into
mov
mov
push
orb
aad
sub
mov
cmp
inc
mov
ret
in
sub
sbb
add
ds
adc
xor
dec
pusha
jb
lock
iret
xchg
outsb
cmp
cmpsl
lahf
adc
sub
imul
loop
push
inc
mov
lea
push
scas
mov
push
fistpl
add
mov
mov
ja
notl
lock
xor
out
fldcw
cmp
shll
mov
push
pop
into
xchg
bound
mov
into
mov
add
bound
mov
outsl
jb
add
mov
icebp
in
cmp
imulb
xchg
bound
or
cmpsb
insl
mov
loope
pop
sbb
mov
pop
mov
ret
ljmp
add
loop
dec
stos
outsb
mov
xchg
mov
dec
or
inc
dec
cmp
xchg
cs
mov
jae
mov
fists
lcall
xchg
push
pop
fidivs
adc
fdivrs
int
or
sub
xor
mov
ret
fidivrl
bound
repz
negb
rclb
xchg
or
mov
xchg
xchg
cltd
cwtl
cwtl
xlat
jmp
mov
sahf
int
mov
cmc
dec
test
aam
into
push
push
jle
enter
leave
loop
push
cmpsb
ljmp
mov
add
pop
ficompl
push
fidivl
push
pop
ret
cli
push
push
fcoms
in
xchg
adc
dec
ja
mov
add
sub
push
ds
hlt
push
stos
mov
sahf
fs
cmpsb
pop
mov
es
daa
ljmp
mov
data16
and
minps
push
orb
xor
sub
cmpsl
cwtl
lret
mov
push
add
nop
xchg
xchg
shrl
mov
lock
fdivrl
push
test
sub
xor
fldcw
and
das
xor
test
mov
fildl
lcall
test
xchg
fcmovu
adc
dec
push
mov
sub
ret
push
dec
imul
add
notb
pusha
mov
mov
mov
outsb
in
pop
or
lock
sarl
cmpsl
xor
into
addr16
cmpsl
mov
xchg
lods
dec
fistpl
inc
mov
jecxz
pop
fs
loop
xchg
dec
xchg
dec
test
aad
mov
dec
pop
subl
pop
pop
mov
mov
outsb
aaa
cltd
in
mov
mov
cmp
mov
push
shlb
out
aas
push
xchg
gs
stos
and
jl
jecxz
add
mov
sub
mov
gs
and
shlb
push
lahf
fstpt
iret
lods
jecxz
cmp
shrb
adc
cmp
scas
adc
es
jl
mov
pop
jae
call
xchg
add
icebp
push
rorl
ds
adcb
es
fbstp
test
loop
ja
out
mov
sahf
mov
mov
mov
cmpsl
adc
lcall
jnp
mov
mov
xchg
enter
xor
filds
push
pop
push
jae
or
mov
cmpsb
aas
xchg
scas
mov
into
clc
or
bound
inc
sbb
shlb
insl
outsb
ret
dec
in
pop
enter
mov
mov
add
adc
rolb
xlat
loop
xchg
push
mov
into
push
ds
fdivp
mov
adc
nop
mov
xchg
rcr
loop
or
and
push
loop
mov
add
ljmp
xchg
push
push
decl
mov
sbb
push
pop
fistpl
data16
push
lcall
mov
add
movsb
xchg
sub
out
mov
ror
adc
ret
push
idivb
push
ds
push
adc
sbb
xor
ds
xchg
inc
push
cmp
jle
add
cmpsb
gs
bound
jecxz
add
sahf
out
mov
xor
and
fcmovbe
popf
cmpsl
data16
stos
xlat
cwtl
jmp
movsb
mov
addr16
loop
into
push
fcmovbe
sub
adc
repz
sub
push
rcll
push
xchg
ficompl
add
addl
jp
aad
dec
push
sarl
cmpsl
fstpl
pop
fimuls
imul
enter
push
or
mov
push
inc
cmpsb
leave
mov
push
shl
ficoml
push
cmp
ret
iret
sub
jl
mov
push
mov
out
lock
xor
xlat
inc
cmpsb
sbb
sarb
out
sbb
js
ds
icebp
xor
ret
je
push
fdivs
mov
into
add
outsb
loop
dec
mov
mov
into
rclb
lcall
mov
mov
push
dec
xchg
aas
jl
push
mov
pop
push
mov
cmpsl
cmp
mov
adc
and
mov
inc
ljmp
and
std
push
movb
adc
ret
pusha
xor
fiaddl
pop
or
in
push
pop
hlt
xchg
fidivl
stos
mov
add
mov
sub
adc
ret
aad
dec
push
sub
and
mov
out
ret
mov
mov
sti
ds
xchg
daa
sbbl
hlt
fisubs
mov
adc
add
adc
dec
mov
adc
jecxz
sbb
sbb
rclb
mov
pop
sbb
push
mov
stos
mov
lret
push
ficoms
es
cmp
les
pop
push
inc
shlb
pop
or
ss
and
iret
insl
and
mov
test
jnp
je
mov
lret
les
mov
mov
pop
fcompl
enter
pop
and
std
into
push
push
cltd
xlat
lea
xchg
xchg
jecxz
loopne
push
mov
mov
fidivs
add
mov
mov
sub
roll
sbb
cmp
xchg
scas
push
pop
jg
mov
or
adc
scas
inc
or
and
dec
mov
inc
mov
jle
push
loop
les
iret
mov
subb
nop
ffreep
or
push
adc
gs
and
div
mov
push
mov
mov
jle
push
cmp
adc
xchg
sub
mov
add
stos
cs
mov
lock
mov
inc
in
ja
push
push
cld
repnz
fildl
ret
cmp
cmc
fcomps
in
adc
ret
jne
ljmp
scas
and
cmp
setb
iret
xor
sub
sub
sub
cmp
lea
out
jbe
aad
push
fdiv
push
stos
push
fdivl
sahf
in
add
or
out
push
jbe
push
cmpsl
lcall
aaa
jns
pop
shrb
xchg
mov
push
call
xchg
mov
not
loop
das
mov
xchg
adc
stos
push
or
push
ret
repnz
push
iret
mov
cmc
sahf
cmpsb
push
mov
xlat
negb
sbb
push
outsb
bound
mov
loop
and
ficompl
xchg
es
lahf
mov
inc
pop
int
cmp
ss
retw
fisubrs
aam
mov
mov
and
cmpsb
iret
test
outsb
push
cmp
or
pop
fisttpl
push
pop
jo
ficoms
stos
add
movsl
sub
mov
xchg
lcall
jecxz
fcmove
mov
ss
push
cmp
out
jp
cmp
or
fmulp
les
and
mov
and
aam
cmp
sbb
sbb
mov
push
xor
pushf
add
xor
movsb
xlat
xchg
pop
lahf
sub
test
push
and
push
rcrl
pop
mov
pop
or
imulb
and
pop
mov
iret
mov
ljmp
mov
cli
fistl
loop
sub
ds
cs
lcall
xchg
xchg
fiadds
jmp
inc
mov
mov
pop
enter
js
or
push
loop
push
mov
adc
jo
push
adc
jg
ret
dec
jecxz
subb
stc
and
adc
into
or
mov
mov
jle
orb
and
idivl
cs
mov
lret
iret
aas
into
xchg
sub
xchg
into
fimull
add
cmp
scas
or
push
cwtl
pusha
iret
mov
adcb
loop
rcll
mov
pop
cmp
nop
loopne
test
jae
in
adc
add
pop
adc
iret
xor
lods
ret
fadds
shl
imull
and
add
cmp
insl
add
test
mov
iretw
cmc
dec
bound
in
mov
shl
sub
sbb
mov
pusha
xchg
mov
xor
mov
insb
mov
jae
dec
shl
adc
inc
mov
add
sub
cmp
push
mov
and
cs
iret
mov
add
mov
into
cmp
or
cmpsl
sahf
ret
loop
sub
pop
mov
jnp
sbb
sbb
ss
das
fists
ret
orb
ret
es
sti
xor
hlt
add
movl
sti
xchg
and
ret
aad
or
les
pop
xlat
cs
fistpl
adc
xchg
mov
xlat
call
stos
cmp
dec
push
and
xchg
pop
ljmp
add
xorl
movl
sarl
fisttpl
shll
add
push
mov
jae
jg
mov
jecxz
push
cs
inc
dec
andb
push
cmp
test
cmp
sbb
sub
inc
mul
out
cs
jp
es
and
sarb
sahf
mov
sbb
pop
inc
xchg
jg
insl
xchg
sbb
mov
push
mov
es
push
into
adc
pop
shr
inc
mov
mov
imul
scas
lcall
adc
xchg
out
cmc
lret
roll
loop
fsubrp
iret
add
xchg
sahf
xchg
and
rolb
mov
ret
adcb
mov
pushl
cs
cmp
xor
es
ficompl
shlb
ss
xchg
es
test
adc
add
out
xchg
popf
and
and
sbb
inc
xlat
mov
mov
imul
adc
inc
jae
ljmp
test
sub
xchg
into
add
xchg
xchg
enter
loop
sbb
insl
loop
fistl
inc
mov
sub
or
jecxz
popa
outsb
movsb
iret
push
jecxz
push
lcall
mov
xor
pop
ret
xchg
or
rcr
fiadds
sub
push
push
push
or
movsl
xchg
mov
leave
cmp
add
loopne
es
mov
add
jl
leave
xchg
push
cltd
fisttpl
sbb
jge
mov
fdivrs
sbb
jge
fcmovnbe
push
dec
lock
frstor
outsb
xor
and
lea
mov
inc
clc
das
push
add
icebp
stos
mov
jae
and
add
subb
push
ficoms
inc
ret
scas
pop
dec
shll
gs
mov
or
and
imulb
mov
cld
dec
xor
inc
adc
imul
mov
outsl
sub
sbb
cs
movl
negb
lcall
fwait
test
push
je
mov
fwait
xchg
add
pop
fstpt
aaa
iret
in
push
inc
push
inc
lcall
jmp
ret
jge
cld
mul
cs
dec
ret
xchg
xor
rorl
xlat
repnz
push
ret
cmp
aas
cmp
arpl
fbld
sti
add
push
mov
dec
cmpsb
loop
xlat
adc
inc
pop
pop
rcll
fistpll
add
dec
push
push
push
and
pop
xchg
ss
ret
scas
jl
jecxz
fistl
or
push
and
inc
add
je
ret
ret
sub
mov
mov
fists
xor
mov
hlt
and
ja
ds
sub
cmp
aam
ret
mov
xchg
xchg
inc
sub
ret
push
jae
mov
cs
push
mov
fsub
shlb
dec
dec
jecxz
xchg
aam
add
test
sub
out
out
sbb
add
pop
cltd
icebp
popf
aas
mov
data16
sub
stc
mov
aas
fxtract
mov
lods
push
ljmp
in
gs
add
out
sbb
les
and
add
adc
mov
push
dec
push
scas
mov
ja
xlat
rcrb
fwait
xor
push
imul
ret
mov
sbb
lcall
lds
add
scas
mov
inc
pop
xchg
ret
mov
fisubs
add
or
inc
mov
fcmovu
mov
shl
xchg
int
fsubrl
stos
mov
sub
mov
cmpsl
xlat
ds
dec
or
mov
jbe
pop
outsb
mov
and
dec
scas
rol
addl
pop
push
test
shrb
cmp
or
lcall
jb
loop
mov
pop
cmp
mov
push
xchg
stos
or
dec
pop
push
mov
xor
and
cld
mov
or
xchg
mov
xor
mov
xor
outsb
jne
mov
xorb
sub
xchg
push
jecxz
inc
mov
or
mov
push
adc
lret
scas
rorb
xchg
push
cmp
pushf
adc
sub
adc
fmull
jg
push
xor
movsb
sbb
fisttps
cmp
mov
push
cmp
add
or
dec
lahf
ret
and
jecxz
daa
fisttpl
ja
mov
gs
iret
sub
mov
gs
cmp
outsb
ljmp
iret
out
into
dec
ss
push
push
repz
mull
or
mov
mov
cmp
into
add
mov
sub
repnz
xlat
sub
stc
or
je
sub
inc
ss
adc
pop
sbb
sarb
mov
lcall
sbb
push
popf
cmpsb
hlt
push
mov
out
sahf
dec
es
stos
or
jecxz
add
scas
in
sbb
inc
or
outsb
add
add
jecxz
sub
faddl
loopne
nop
imul
push
fiadds
cwtl
into
ljmp
mov
out
sarl
addb
push
iret
icebp
cs
and
movl
cmp
bound
ret
or
pop
movb
or
xchg
push
lock
fcmovbe
xorb
push
into
shr
fimuls
ds
add
jb
adc
jl
sbb
mov
outsb
push
into
in
aas
rolb
fistps
and
lods
idivb
and
lcall
jbe
push
lods
xchg
icebp
mov
mov
push
jbe
mov
push
jle
pushf
xchg
ja
push
imul
fimull
ficoms
push
jecxz
jg
push
xor
cmpsb
sbb
and
jp
mov
xor
cmpb
or
jge
and
and
shll
gs
adc
sub
cmp
mov
shrb
inc
and
in
xchg
mov
test
xlat
and
xor
out
test
xor
adc
pop
mov
insl
sbb
mov
rol
xchg
adc
outsl
mov
ss
mov
out
cmp
mov
sub
mov
ljmp
mov
ret
mov
push
and
mov
stos
push
iret
pushf
pop
lock
rcr
pop
outsl
xchg
scas
imul
ss
mov
fcmovnb
stc
gs
or
pop
test
inc
sbb
pop
mov
sahf
rcl
ja
mov
outsb
mov
call
dec
aam
rorl
ds
aas
in
mov
jg
mov
or
bound
scas
cli
js
inc
jmp
pop
cmp
pop
and
ret
mov
ljmp
loop
jb
add
xor
stos
fildl
push
jno
dec
ds
push
cmp
pop
lods
mov
mov
adc
scas
orps
push
xchg
mov
lcall
fimuls
push
sub
xor
shlb
subb
ficompl
dec
push
add
and
lcall
add
ret
aas
add
sti
or
mov
decb
push
mov
gs
les
dec
out
mov
mov
jl
lcall
pop
data16
arpl
inc
cs
sub
test
mov
dec
mov
mov
and
rolb
pop
sub
xor
pop
fbstp
inc
mov
int
rorl
ss
mov
out
out
rol
repz
aas
es
pop
jmp
xor
outsb
fsubrs
sbb
or
mov
xlat
sahf
cs
xor
dec
cmp
arpl
jg
int3
jecxz
sarb
shll
dec
push
filds
mov
ret
mov
incb
xchg
fidivl
or
roll
xchg
xchg
outsb
push
popa
cmp
into
push
imul
sarb
ret
sub
mov
sbb
lcall
cmpsb
imul
fisubrs
add
xlat
out
mov
int3
xchg
lahf
mov
xor
ljmp
xlat
shlb
jne
sbb
sub
mov
into
push
in
xchg
cltd
jle
adc
outsb
cmp
lahf
mov
and
xor
jnp
xchg
ret
or
add
sbb
stc
push
sbb
xor
mov
or
push
iret
xchg
inc
cmpsb
fdivl
lcall
faddp
sub
ss
int
push
into
sub
push
xchg
xor
das
mov
fcmovnu
rorl
mov
ret
jmp
push
mov
inc
xchg
jae
es
pop
jbe
mov
ret
iret
and
jmp
ficomps
es
decl
popf
aad
filds
or
lahf
andb
iret
mov
sub
add
mov
push
mov
push
dec
mov
sahf
push
add
scas
push
mov
jnp
sbb
xchg
cmp
mov
out
push
push
cltd
movsl
cli
je
dec
push
les
faddl
pop
mov
and
aad
sbb
imul
mov
jecxz
movsb
fistl
jg
into
xchg
scas
imul
call
or
xchg
mov
lahf
fisttpl
adcb
shll
mov
iret
mov
movb
push
incb
cmc
fs
mov
cmpsl
pop
lcall
cmp
xchg
aas
stos
lds
mov
xchg
fidivl
mov
aad
test
in
inc
stos
mov
ret
cmpsl
fildll
out
leave
jg
out
hlt
stos
inc
loop
push
mov
mov
je
xchg
aam
out
es
fstl
arpl
mov
negb
stos
cmp
sbb
cmpsb
mov
es
dec
mov
decl
shlb
aaa
inc
popa
mov
setne
lods
dec
cld
and
add
dec
or
out
mov
inc
cmpsb
mov
jecxz
ret
jg
ss
mov
mov
cmpsb
mov
stos
sub
mov
andb
mov
ret
test
push
or
mov
push
mov
and
or
or
sub
dec
notb
rclb
lcall
adc
adc
mov
stc
xchg
or
ja
out
pop
fisttpl
sbb
aad
mov
push
inc
pop
or
loop
mov
xchg
je
fsubrp
sub
mov
adcl
loop
lea
je
or
add
cmp
inc
testb
xchg
push
ds
loop
mov
jmp
out
notl
fisubs
cmpsb
inc
or
sbb
popf
ror
jne
orb
push
hlt
push
xlat
loop
es
push
hlt
lahf
scas
data16
cltd
hlt
loop
pop
mov
xchg
clc
cltd
pop
rolb
sub
dec
xchg
cmpb
jae
xchg
and
xor
jg
jnp
shrl
int
inc
test
xchg
jp
es
mov
in
cmp
dec
cmpsb
stos
add
outsl
aas
pop
add
add
imul
xlat
push
push
xor
mov
mov
rcrl
push
call
push
jnp
ret
outsb
decl
imul
stos
scas
adc
mull
call
movhps
mov
lret
cli
xchg
inc
jg
out
lahf
fistpll
in
ficompl
cmp
push
int3
test
jae
jae
cs
mov
pop
and
and
push
lods
add
andb
sbb
sbb
lahf
test
cmp
sbb
mov
or
ja
ds
add
push
shrb
cmp
jbe
pop
mov
pop
jb
mov
cs
cmc
ss
dec
mov
ja
mov
and
push
imul
js
mov
into
add
shll
push
push
mov
imulb
mov
adcb
mov
bound
push
xor
mov
test
jecxz
sub
jnp
inc
or
lcall
mov
sbb
rolb
outsb
push
movsl
add
mov
es
stos
push
shlb
xchg
sub
out
repnz
mov
lret
xchg
out
in
push
dec
xchg
mov
fisttps
aam
je
mov
pop
mov
dec
add
push
or
add
mov
fstpl
ret
mov
mov
dec
es
mov
add
mov
xchg
adc
mov
xchg
mov
xchg
push
or
jmp
je
ret
out
fdivrp
push
sahf
int
xor
xcrypt-cfb
cmpsl
es
mov
repnz
ss
inc
dec
movsb
addr16
fidivrs
xor
stos
inc
mov
add
bound
push
sub
es
push
cmpsb
mov
rorb
xchg
inc
mov
in
or
outsb
pushf
sbb
stos
cmc
dec
mov
aad
jne
mov
add
enter
or
jbe
mov
cmp
gs
xchg
repz
stos
dec
rep
test
pop
cli
clc
icebp
jge
scas
sub
fidivrl
in
inc
dec
xor
pushf
push
aad
mov
sbb
xor
push
mov
sub
cmp
mov
shrb
roll
mov
lds
test
ret
jo
pop
pop
mov
push
out
or
mov
cmpsl
inc
sbb
movd
push
fisubs
dec
mov
sahf
sub
pop
inc
sti
lret
cmp
cmpsl
enter
pop
pop
and
jne
fbld
pusha
stos
shrb
push
sub
sbb
jecxz
mov
dec
or
insb
dec
mov
add
mov
sub
adc
and
dec
mov
mov
xor
push
ss
xor
loopne
cltd
pushf
jbe
sub
xchg
and
fdivs
mov
jo
out
loop
rcrl
ljmp
mov
orb
lahf
pop
or
stos
and
add
sbb
jecxz
cmpsb
xchg
rolb
xchg
xor
add
dec
fidivl
sbbl
ret
push
push
xlat
fisubl
iret
outsb
stos
rcrl
clc
dec
mov
test
and
repnz
rcll
stos
or
xor
fnsave
mov
push
stos
inc
push
pusha
pop
out
adc
ret
mov
inc
mov
jg
mov
mov
cs
iret
xchg
push
xchg
jne
add
mov
dec
push
test
push
out
daa
cmpsb
push
add
inc
movsb
fdivrs
fistpll
inc
xchg
inc
outsb
testb
push
pop
push
or
dec
or
mov
inc
mov
bound
fisttpl
mov
fcmove
cmpps
lock
lcall
mov
pop
sub
dec
shll
xor
scas
lcall
add
inc
pop
mov
or
add
std
mov
sub
dec
cmp
xor
push
sbb
ret
rolb
push
into
adc
mov
sahf
push
xlat
sbb
out
push
or
scas
or
cmc
sbb
xchg
ds
aad
sti
adc
es
pop
mov
clc
dec
mov
xchg
and
test
and
mov
in
jae
shrl
mov
xchg
cmpsb
stos
add
or
rcrb
fisubrs
pop
lahf
adc
jmp
test
xor
fbstp
jl
movsl
pusha
xchg
sub
push
pop
cs
xor
scas
into
mov
int3
bndldx
cmp
fs
adc
iret
push
or
jbe
or
mov
cmp
dec
push
jne
mov
movsb
and
adc
mov
mov
add
in
cmp
adc
sbb
mov
fimull
ss
std
sbb
or
int3
add
outsb
scas
add
scas
or
push
fisubrl
ss
popa
add
cmp
sub
ljmp
notb
ret
ret
push
adc
imul
jp
push
cs
or
push
cmp
dec
xor
pop
ret
xlat
push
mov
lret
mov
pop
movl
sbbb
es
inc
loop
test
xchg
xchg
movhps
ss
es
dec
push
xchg
xlat
call
into
loop
insl
mov
or
mov
aam
outsl
jecxz
sub
push
or
inc
fs
adc
push
cmp
ss
push
aas
inc
into
rcl
scas
lcall
mov
cmp
and
les
push
sbb
jb
adc
test
out
mov
mov
dec
sbb
add
inc
jae
cld
cmpsb
push
and
mov
xor
je
push
mov
adcb
int3
shll
ret
mov
std
nop
push
mov
pop
cmp
cs
out
cmpsb
addb
inc
lret
lcall
sbb
add
inc
mov
add
mov
rcll
dec
outsb
pop
lcall
pop
and
ret
ficoml
mov
inc
mov
ret
cwtl
or
shl
test
ret
mov
mov
stos
sti
iret
inc
mov
popa
inc
xor
stos
rcll
in
and
pop
mull
mov
xchg
mov
cmp
sbb
ret
and
push
sub
leave
mov
push
push
rol
out
fcmove
cs
mov
xchg
hlt
cmpsl
inc
cmp
dec
jg
pushf
mov
fidivs
or
pop
xchg
add
jae
jmp
add
mov
jecxz
sahf
repnz
dec
pop
ret
mov
and
imul
sub
aad
lahf
ds
sbb
jecxz
and
stos
loop
xlat
mov
jecxz,pn
cmp
adc
mov
fcmovbe
fistps
push
jae
jmp
push
push
xor
push
push
fadd
xor
cmp
jl
rclb
pop
xchg
jne
andb
mov
push
dec
mov
push
xor
inc
jne
xlat
pop
ret
ljmp
inc
in
fidivl
popa
lahf
pop
imul
ljmp
add
xor
es
int3
push
outsb
fisubrl
lds
push
outsb
out
jne
xlat
add
adc
sbb
rcll
dec
fsubrs
dec
dec
dec
mov
mov
and
fistl
push
pushw
jg
push
adc
mull
bound
mov
or
cmp
sahf
mov
gs
in
push
xor
scas
ss
or
shll
into
into
adc
and
mov
cmc
fistpl
bound
movsb
cmp
mov
outsl
fstpl
and
jo
xorb
jl
cs
cmp
sub
sub
sahf
setl
xlat
add
ficompl
jecxz
adc
inc
xchg
out
push
mov
lcall
loop
shl
loopne
dec
mov
outsb
addr16
cmp
inc
pop
xlat
out
data16
sahf
dec
je
xchg
out
xor
sub
dec
in
cld
outsb
push
sub
sbb
jae
jle
stos
les
daa
sub
or
mov
fnstcw
jg
in
cs
dec
fs
add
fidivs
push
aad
es
xchg
fisubs
out
pop
fidivl
xlat
and
sbb
push
mov
in
mov
sub
push
inc
sub
xchg
cmp
pop
mov
dec
fimull
ds
in
dec
dec
stos
test
xchg
pop
pop
subb
mov
lahf
xlat
cmc
mov
cmpsl
push
cmp
sbb
push
adc
sub
cmpsl
mov
xor
mov
and
daa
and
aas
aam
push
das
and
inc
loop
es
jge
stos
out
dec
in
scas
xchg
cmp
mov
push
and
jle
jae
imul
inc
fimuls
dec
xchg
das
test
and
scas
shll
add
push
inc
adc
dec
out
fs
inc
iret
mov
test
test
movsb
push
stos
cmp
mov
push
jne
mov
and
mov
push
pop
push
loopw
adc
mov
xchg
mov
xor
mov
cs
mov
outsb
mov
test
pop
test
stc
pop
popf
push
push
mov
pop
jecxz
lock
mov
fistpl
dec
ret
add
add
xor
push
jecxz
pop
ljmp
jae
mov
scas
imul
xchg
mov
sarl
mov
mov
loopne
fisttpl
daa
xor
cmpsb
aas
cmpsl
and
push
addb
mov
sub
push
mov
rcr
ret
fidivrl
out
pop
mov
nop
fidivs
sub
jno
es
mov
adc
ret
leave
pop
outsl
dec
les
sub
push
pusha
mov
std
shlb
out
es
push
cmp
andl
sti
mov
sbb
cmpsb
mov
sub
lcall
or
push
scas
cmp
outsb
and
adc
scas
leave
ds
test
mov
xor
fistpll
cmpsb
lahf
stos
ss
mov
and
into
movsb
loop
adc
sahf
cmpsb
push
negb
dec
mov
push
mov
call
ljmp
mov
aaa
das
ficomps
int3
jne
mov
sub
pop
xchg
bound
out
jne
sahf
shlb
mov
cmp
ss
jae
sti
cmpsl
xchg
mov
mov
fcmovb
jbe
loop
xchg
lods
scas
mov
ficompl
nop
add
aam
jbe
ljmp
xchg
cmc
pop
rcl
movl
cmpsb
xchg
sub
push
ss
rcll
pushf
mov
loop
ficoml
inc
push
ret
test
xchg
sub
xor
add
push
jo
dec
es
hlt
divl
mov
negb
mov
lcall
xor
xor
imul
xorl
xchg
mov
pop
and
sarl
mov
idiv
faddp
push
xchg
mov
pop
xchg
jecxz
jbe
cmpsb
iret
cwtl
cmpl
dec
sahf
or
sbb
loopne
mov
or
lcall
les
add
icebp
rclb
mov
cmpsl
fidivs
and
sub
jle
rol
mov
sub
shl
xchg
mov
pop
push
jbe
stos
mov
xchg
sbb
sub
iret
loopne
xchg
addl
lock
mov
dec
out
test
lea
xchg
push
jp
fwait
mov
sbb
cmp
adc
dec
adcb
repnz
inc
pop
sti
inc
ficompl
mov
ss
jge
dec
fildl
mov
pop
cmp
jne
cmp
scas
pop
inc
fidivs
xlat
mov
adc
mov
jecxz
cmpsb
and
pop
sbb
mov
adc
and
ja
ret
or
ss
mov
ja
sub
pop
push
dec
add
dec
push
push
mov
mov
into
add
xor
sti
ss
add
sbb
push
fldt
ret
push
xchg
xlat
shll
cli
pop
fcmovbe
aas
arpl
xor
adc
iret
pop
mov
xor
lcall
pop
aam
push
push
sub
xorl
sbb
test
or
jb
loopne
pop
xchg
push
addr16
add
cmp
pop
mov
bound
sbb
mov
lcall
mov
rcrl
or
xchg
out
ret
insb
js
or
add
mov
push
mov
push
shll
pop
add
mov
stos
mov
fimull
inc
mov
dec
into
dec
lcall
xchg
push
adc
cs
dec
and
cmp
iret
or
xchg
ss
dec
into
sbb
pop
xchg
inc
sahf
iret
ucomiss
ret
loop
mov
cltd
call
insl
xor
inc
enter
inc
mov
shlb
es
rclb
scas
es
mov
negl
push
adc
mov
mov
ret
xor
stos
or
aas
xchg
rcl
stos
pop
mov
jmp
pop
cld
xlat
loope
adc
cmpsl
pop
xchg
adc
inc
adc
pop
mov
aam
pop
rol
inc
or
gs
push
add
lcall
es
aas
xchg
stos
ja
mov
push
cmp
stos
mov
cmc
inc
fsubrp
scas
inc
push
cmpb
dec
mov
bound
pusha
cmpsl
arpl
movsl
mov
cmpsl
lret
and
pop
fs
outsl
cmp
or
idivb
pop
mov
mov
loope
xor
xor
es
in
mov
mov
lcall
popa
testl
mov
jnp
sub
lods
adc
jle
enter
jb
cmp
gs
cmpsb
bound
mov
xlat
mov
test
inc
int3
cmp
es
lods
pop
shrl
aas
sbb
lcall
push
xchg
jecxz
movb
mov
mov
push
call
add
lcall
push
xchg
adc
mov
std
pop
pop
aaa
outsl
loopne
push
hlt
push
mov
in
es
jmp
fidivrs
cmpsb
push
jo
repz
mov
jo
ljmp
jo
xor
fstpl
ret
jecxz
and
dec
data16
xlat
fistps
mov
sbb
std
mov
lcall
mov
loope
mov
mov
xchg
es
mov
mov
out
sbb
adc
mov
mov
push
clc
mov
pop
mov
cmpsb
push
push
test
je
fiaddl
mov
mov
loop
lods
repnz
dec
rcr
ret
neg
xlat
xchg
lods
ret
mov
frstor
adc
ret
push
fsubrl
mov
iret
push
mov
shrl
in
adc
adc
sbb
jbe
iret
aad
pop
add
mov
cmp
mov
sub
mov
adcb
dec
mov
gs
adc
pop
ret
xchg
fistps
iret
shr
mov
outsb
fsubrl
mov
xor
rcr
call
jae
push
inc
and
sbb
xchg
push
outsb
cs
xchg
or
lock
es
outsb
lds
out
aad
xchg
fiaddl
sub
aam
pop
stos
iret
xor
add
loop
mov
data16
jae
clc
imul
sahf
bound
push
stos
sub
jbe
dec
ret
sti
js
lea
arpl
loop,pn
insb
rcl
cs
cwtl
pop
cmc
les
mov
inc
mov
je
push
ss
fisubl
ja
xor
rcl
cmp
sub
jmp
jecxz
push
and
mov
pop
add
push
xlat
sbb
outsb
lcall
lock
xchg
cmc
mov
leave
add
xchg
mov
imul
ds
in
pop
or
mov
iret
ljmp
ljmp
add
mov
add
or
shrb
aad
jae
mov
jns
roll
mov
popf
dec
ret
adc
mov
clc
notb
out
ss
ret
mov
cmp
in
cmp
dec
adc
je
or
cltd
mov
scas
sbb
sub
add
xchg
popf
mov
imul
lret
adc
push
mov
pop
lods
and
push
sub
adc
dec
dec
dec
adc
test
xchg
aad
data16
lret
ficoml
mov
pop
ljmp
out
add
out
jmp
inc
call
push
xchg
mov
cs
push
push
xchg
movsl
ss
jmp
es
adc
mov
jecxz
cmp
gs
sahf
pop
push
mov
sbb
cmc
leave
push
adcb
cwtl
in
push
ja
cmpsb
xor
xor
loop
lahf
push
push
sbb
subb
inc
je
dec
int3
sbb
into
mov
add
lret
push
imul
push
push
push
es
and
stos
xor
fbld
cltd
iret
sbb
push
xchg
ret
xchg
inc
mov
push
push
jbe
push
mov
mov
cmpsb
xlat
lret
push
addr16
sarl
ret
adc
fisubl
push
stos
mov
sub
xorb
mov
outsl
xchg
xlat
jbe
jecxz
ljmp
aaa
nop
iret
pushf
cwtl
shll
pop
inc
out
gs
and
ret
mov
dec
sbb
xchg
inc
jno
std
mov
dec
aaa
mov
cmp
scas
mov
movsb
cmp
xor
es
out
aas
and
cmp
pop
add
in
inc
push
insb
test
mov
dec
lcall
cmp
fsubr
mov
mov
cmp
cmpsl
xchg
mov
sbb
or
das
int
lret
popf
xor
cmc
add
fdivrs
subb
sbb
rolb
mov
jno
cmp
mov
push
pop
shl
add
mov
mov
hlt
ljmp
sub
stos
into
scas
inc
pop
sbbb
inc
ret
ljmp
loop
sub
scas
push
push
jge
cs
sarb
mov
lahf
aaa
cmp
mov
mov
inc
ja
out
out
rcrl
sahf
adc
cmpsb
adc
sbb
mov
hlt
xchg
push
bound
jae
inc
push
icebp
cld
aad
mov
mov
movsl
movsl
lahf
ljmp
pop
push
jecxz
adc
inc
mov
and
outsb
adc
ret
pop
shr
fmulp
rorb
ss
out
aas
cmp
or
imul
mov
or
dec
push
pushf
adc
push
cmp
sub
test
xchg
inc
mov
movsb
mov
cs
out
sub
pop
and
pop
popf
push
ljmp
into
out
xor
in
pop
aas
and
jmp
scas
push
sahf
cmc
icebp
mov
lcall
mov
xlat
in
xchg
mov
add
push
scas
addl
ds
stc
aaa
arpl
stos
pop
mov
aaa
push
push
xchg
mov
lcall
orb
rorb
rorl
or
add
add
into
mov
out
cmpsb
dec
and
sub
xchg
mov
mov
scas
test
or
and
incb
pushf
sub
fisttps
scas
ljmp
out
fdivrl
jecxz
iret
mov
aad
stos
dec
jne
scas
inc
mov
scas
add
iret
push
ficomps
mov
and
rclb
mov
push
adc
mov
add
out
or
fstpl
mov
mov
loop
data16
xchg
shrb
xorl
loop
cs
mov
xchg
sahf
push
cmp
imul
xchg
lahf
add
imul
sahf
mov
add
addr16
push
pop
fidivrs
out
mov
mov
sbb
mov
mov
mov
ljmp
gs
sbb
add
lods
cmp
pop
add
out
clc
sub
jae
sbb
add
sbb
cmpb
sti
push
sub
xchg
push
mov
mov
mov
bound
fsubs
pop
incb
xchg
push
addb
rorl
inc
mov
stos
je
sub
pop
dec
mov
loop
cs
cmpsl
int3
test
and
mov
bound
ss
stos
pop
scas
add
stos
gs
imul
mov
sbb
sbb
mov
and
mov
cmp
je
add
std
jl
add
dec
mov
add
mov
mov
fucomip
or
adc
fwait
lahf
mov
cmp
add
push
int3
es
bound
mov
pop
cmc
and
pop
sub
sub
cmp
sbb
maskmovq
idivl
mov
or
rcrb
push
ljmp
add
in
daa
ret
movsl
push
xor
inc
sub
and
mov
xchg
ficomps
jg
mov
outsb
ss
mov
push
sbb
sub
into
fbld
or
sarb
push
and
lcall
mov
xor
or
into
icebp
cmc
cmp
push
daa
mov
ds
push
stos
xchg
push
pop
dec
hlt
xlat
lcall
jno
hlt
xchg
dec
cmp
fstp
xor
xlat
ss
sub
inc
pushf
dec
add
ret
jl
xchg
push
jg
psrld
pop
stos
stc
or
mov
pushf
cmp
sbb
jecxz
in
pop
je
jbe
shll
push
inc
into
jge
mov
sahf
mov
push
or
into
jecxz
lods
add
inc
lcall
ljmp
sub
ficoml
jle
imul
sbb
cmc
adc
mov
into
push
cmp
dec
sbb
adc
mov
sahf
inc
add
jns
iret
into
cmp
cmc
xchg
inc
roll
cmp
stos
xor
mov
mov
add
sub
cmpsl
ret
outsl
scas
mov
stc
ds
xor
es
cmp
pop
push
cmpsb
add
scas
es
jg
push
mulb
sub
out
repnz
xchg
cmp
xor
sar
andl
arpl
je
adc
mov
mov
inc
push
sbb
mov
push
sbb
sbb
out
sub
sbb
call
add
mov
stos
pop
jg
sahf
in
pop
mov
or
rcll
enter
push
andb
out
fimull
push
and
decb
je
xor
loopne
ljmp
test
and
push
rorb
sub
pop
rol
sbb
mov
push
dec
xor
sub
fisubl
mov
dec
mov
mov
sbb
std
xchg
dec
mov
hlt
lea
ss
mov
adc
jae
cli
icebp
outsb
aam
ficompl
jecxz
adc
out
add
push
shlb
mov
jp
xchg
ljmp
mov
mov
iret
ljmp
push
lods
pushf
add
ret
popf
sti
jae
loope
sbb
pop
mov
repnz
xlat
sub
mov
js
inc
mov
call
jno
out
push
mov
rorl
aas
outsl
xchg
out
add
fcmovnb
in
xor
and
into
cmpsb
cmp
adc
xor
aam
imul
ds
push
or
outsb
mov
lcall
add
mov
ja
or
mov
ds
push
test
or
in
and
mov
push
mov
stos
inc
mov
lret
sub
mov
mov
mov
fimull
cmc
aam
add
and
dec
testl
sahf
adc
mov
sbb
add
mov
sub
cmp
inc
push
dec
ss
push
aad
shrb
jecxz
into
push
pop
jne
bound
into
mov
fimuls
iret
repnz
cmp
lcall
sub
mov
ret
lcall
xchg
cmp
mov
rcl
dec
mov
ss
imul
and
fistps
or
cmpsl
test
jae
add
xor
adc
or
dec
lods
inc
pop
dec
lahf
scas
cmpsb
sti
outsl
mov
sbb
pop
pop
mov
das
hlt
popf
push
gs
mov
mov
nop
xchg
push
mov
push
mov
ficomps
xor
mov
jmp
push
jb
sub
or
ret
inc
enter
aaa
push
sbb
push
rolb
ja
mov
pop
mov
into
push
mov
xchg
ss
mov
mov
mov
mov
add
aad
test
mov
xor
mov
or
mov
add
adc
sub
xchg
and
xor
mov
xchg
push
mov
jae
mov
test
and
mov
ds
out
sub
xor
and
test
mov
jle
aad
dec
movsl
mov
xchg
adc
sbb
cmpsb
sub
ds
lds
add
mov
sbb
mov
scas
cmp
int
push
fcmovbe
je
mov
stos
mov
mov
jle
mov
xor
rorl
lcall
or
fidivrs
xchg
or
pushf
insl
fsubrl
cmpsb
cmp
xorb
imul
push
adc
out
pop
push
roll
pop
ffree
sbb
mov
imul
push
aad
cmp
dec
lcall
push
xor
mov
imul
add
sub
lahf
outsb
in
ljmp
sub
fidivl
fadd
mov
pusha
lock
ret
mov
inc
loop
cmpsb
adc
out
mov
push
out
ds
mov
incb
pop
push
sub
out
in
or
sub
pop
inc
sbb
dec
push
and
mov
mov
loop
rcr
xor
sbbb
aam
adc
es
pop
push
leave
sbb
pop
mov
ficoms
cmp
lcall
mov
push
subl
inc
test
add
ljmp
popa
xchg
ret
rcrb
xchg
mov
xor
adc
bound
and
scas
dec
xlat
into
mov
cmpsb
lcall
push
jbe
push
pop
subl
les
push
sbb
inc
push
stos
out
loop
mov
push
aad
ret
xlat
idiv
push
loop
push
adc
out
or
mov
or
scas
iret
dec
imul
mov
and
xlat
mov
or
in
sub
shrl
ds
inc
push
test
insb
pop
lds
push
adc
jl
fdivp
lret
xlat
inc
mov
push
or
cmp
jg
repz
xlat
push
les
cmpsb
dec
imul
pop
push
cmp
mov
xor
xchg
mov
push
adc
lcall
in
jecxz
mov
fildl
pop
jecxz
fs
dec
push
lods
mov
filds
adcb
sar
stos
mov
mov
xchg
mov
sbb
sahf
xchg
pushf
div
ja
ret
sbb
sbb
adc
gs
outsb
cltd
lret
mov
enter
hlt
shl
xchg
mov
mov
inc
bound
mov
test
push
mov
dec
mov
jecxz
xor
cmpsb
es
ljmp
cmp
mov
add
mov
mov
mov
out
xchg
sbbl
mov
sub
xchg
mov
add
pop
lcall
mov
pop
ret
push
jae
clc
or
inc
ss
adc
sub
jno
xchg
mov
aaa
pop
cs
sbb
leave
jo
cmpb
dec
jae
pop
mov
mov
fucomi
inc
out
bound
push
pop
xlat
roll
ds
iret
push
in
push
cmpsb
adc
fcoml
jecxz
lcall
mov
dec
mov
shrb
ffreep
push
lret
push
ds
fsts
xor
cmp
ret
or
jg
jmp
mov
lret
pop
push
aas
inc
mov
push
mov
mov
imul
add
imul
test
push
jecxz
sub
ret
mov
out
lock
fistpl
testb
add
adc
cmpsb
adc
pop
or
xchg
cmp
or
popa
jo
pop
mov
ret
sbb
cmp
or
mul
xchg
into
mov
mov
into
aad
cwtl
mov
jbe
scas
xor
mov
and
sbb
sbb
sahf
clc
in
mov
pop
int3
cmp
cmp
mov
or
inc
rclb
mov
mov
and
sbb
lret
les
and
out
stos
mov
pop
xchg
lea
mov
ficoml
repz
mov
xchg
sub
mov
push
push
data16
out
fcmovnb
mov
popa
add
ss
cmp
sub
push
inc
stc
mov
mov
xlat
scas
xlat
xchg
es
bound
sub
or
adc
mov
jecxz
or
dec
push
cmpsb
add
mov
sbb
xor
push
xchg
mov
adc
push
add
mov
cmpsb
mov
ret
jg
xchg
push
cmp
inc
or
sbb
push
pop
addb
mov
jmp
cmpsb
push
ret
cmpsl
pop
aas
into
es
xchg
cmp
lret
arpl
gs
iret
mov
loop
lahf
cmp
dec
out
mov
add
mov
scas
adc
fwait
iret
loope
fidivrl
mov
mov
in
jmp
aam
leave
add
inc
lcall
add
ret
out
xor
or
data16
fisubrs
leave
adc
add
or
cwtl
push
loope
add
scas
xchg
sbb
outsl
rclb
pop
sbb
push
add
adc
dec
cli
mov
hlt
mov
setle
scas
lcall
mov
es
out
mov
aad
in
dec
mov
adc
mov
mov
xchg
mov
push
mov
jg
sub
push
jo
or
fsubl
outsb
xchg
popl
and
orb
xchg
out
sahf
mov
push
jecxz
adc
sub
jne
xorb
lret
mov
cmpsb
mov
mulb
mov
into
dec
or
push
data16
lahf
inc
fadds
outsb
mov
pop
gs
dec
bound
mov
xchg
filds
add
push
jo
aam
je
push
push
stos
sbb
push
adcb
sbb
and
pop
push
pop
loop
pop
ficompl
movl
ljmp
jmp
bound
mov
stos
xor
xchg
ficomps
clc
fimull
xchg
inc
ret
dec
mov
mov
ljmp
sbb
mov
ds
sahf
cmpsb
aam
jae
cs
sub
inc
mov
scas
outsb
mov
and
push
cmp
je
xor
pop
pop
aas
ret
push
xchg
clc
jbe
and
out
xchg
or
sbb
mov
incb
xor
add
or
push
pop
movsl
or
into
mov
xchg
sti
aas
mov
add
ss
into
add
mov
pop
cs
imul
mov
xchg
or
fdivs
mov
fildll
push
dec
cmp
xlat
or
pop
loop
mov
mov
aas
inc
or
fmuls
xchg
lahf
es
out
pop
into
aas
inc
sub
roll
movb
adc
ss
cmpsl
mov
lds
ret
bound
cmp
pop
xor
incb
adc
xor
and
add
mov
mov
repz
dec
add
movsl
mov
pop
int3
xchg
cs
stos
dec
add
push
pop
xlat
andb
xor
int3
cmc
and
or
loopne
scas
sub
push
iret
daa
inc
mov
pop
xchg
ret
out
mov
into
cmp
xchg
popa
push
nop
out
iret
and
or
imulb
sub
inc
imul
xor
jp
adc
or
jb
push
xchg
and
bound
out
add
sahf
and
push
into
lcall
mov
fistpll
sub
push
push
or
and
in
lahf
jb
push
xchg
fiadds
ss
and
xchg
push
mov
push
inc
ds
dec
jne
incb
movsl
push
or
sahf
or
mov
push
and
xlat
push
ss
push
sbb
ds
add
dec
iret
sub
aad
xchg
mov
mov
in
xchg
mov
dec
iret
cmp
push
add
xchg
rcll
cs
out
xor
shrb
insb
jb
movsl
mov
hlt
stos
ret
bound
push
xor
sbb
pop
dec
es
movsl
mov
fbld
fistl
test
mov
or
xorl
add
mov
inc
adc
or
mov
mov
mov
jbe
ss
ds
jecxz
sbbb
int3
jne
sub
dec
pop
mov
xorl
lcall
adc
cmc
jbe
nop
pop
ds
mov
pushf
mov
jle
push
pop
es
es
js
scas
pop
ror
cmp
mov
icebp
cwtl
push
stos
inc
ds
xlat
mov
ljmp
cmpsb
bound
add
dec
out
dec
out
inc
add
mov
mov
bound
mov
lcall
rcrb
std
sbb
push
hlt
push
sub
inc
out
mov
cs
jae
sahf
movl
mov
sahf
pushf
mov
jecxz
push
inc
jne
cmp
and
jmp
punpckldq
or
cmpsb
mov
or
mov
not
bound
push
jle
adc
add
outsb
sbbb
pmulhuw
sbb
orb
cs
fisubl
ret
dec
fs
punpckldq
xchg
or
add
jmp
xchg
pop
ds
and
and
adc
mov
outsb
xlat
jb
dec
outsl
mov
mov
add
add
mov
icebp
mov
sbb
push
adc
out
adc
sbb
imul
iret
lcall
daa
outsb
sbb
and
bndldx
xor
push
xorb
xor
xchg
add
mov
mov
add
lods
adc
lea
dec
std
sbb
push
out
dec
xchg
push
cmp
cmp
subl
fisubl
mov
gs
sahf
sbbb
addr16
xor
adc
dec
push
mov
push
and
sbb
and
jge
mov
ljmp
dec
push
adc
fistpl
les
imul
push
or
jecxz
mov
cmp
je
fisubrl
xor
xchg
das
add
pop
push
mov
div
add
mov
sti
repnz
es
xchg
add
ret
sub
movsb
xor
inc
fsub
inc
out
sbbl
pop
mov
and
jo
add
scas
notl
lcall
jp
rcrl
pop
xchg
jecxz
imul
and
cmp
ja
les
mov
lock
fbstp
mov
cmp
js
ret
pop
into
add
dec
pop
lret
aas
push
mov
movl
ret
xchg
les
mov
stos
push
test
sbb
dec
iret
sub
add
mov
and
pop
out
xor
loope
popf
jbe
pop
jp
dec
dec
push
xlat
fidivl
xor
push
mov
cltd
push
cmp
loopne
mov
or
testl
push
cwtl
pop
mov
jnp
rolb
scas
loopne
call
mov
xor
mov
cmp
push
fwait
dec
pop
mov
lock
sahf
mov
movl
push
jo
adc
cmpsb
clc
adc
push
rolb
fadds
faddp
mov
outsb
dec
es
push
pop
mov
out
mov
cld
pop
xchg
pop
xchg
je
roll
gs
stos
aad
push
push
shrl
jl
or
iret
mov
sti
mov
divb
mulb
mov
es
sbb
or
push
ds
cmpsl
adc
ret
mov
outsb
xchg
inc
sbb
les
mov
aam
cs
push
es
mov
cld
dec
sbb
push
ret
mov
xlat
inc
shrb
sahf
ja
inc
sbb
and
incl
or
xlat
fcomps
jle
xchg
into
jmp
es
fsub
rorb
sti
mov
dec
mov
cmpsb
dec
mov
imul
cs
or
fsts
mov
in
xlat
movsl
sahf
cli
or
adc
mov
cmp
repz
ret
mov
ljmp
push
xchg
push
inc
imul
or
mov
pop
in
mov
sbb
inc
xchg
mov
jle
push
mov
and
mov
adc
push
ljmp
fstpt
xor
xor
cmp
add
add
or
push
add
lahf
popa
xor
stos
fisttps
xorb
sahf
mov
je
mov
ret
adc
add
bound
mov
fs
sub
sub
mov
fwait
out
push
sub
hlt
lcall
fidivs
std
xor
inc
xchg
test
sahf
icebp
push
xchg
ljmp
mov
jecxz
inc
mov
mov
pop
mov
ss
es
add
scas
nop
popf
push
mov
sbb
in
int3
dec
xor
cmpsl
xchg
fisubs
out
cmp
add
dec
push
lds
and
scas
shlb
rorl
fstpt
out
pop
es
cmpsb
dec
jecxz
inc
int3
sbb
mov
pop
scas
xchg
inc
and
dec
aam
loop
stos
cmpsb
xchg
or
xchg
cmp
repnz
insl
fcmovu
sahf
mov
aas
or
mov
sub
loopne
into
jne
es
jg
ljmp
test
daa
dec
mov
scas
out
mov
sub
jl
sbb
add
mov
xchg
pop
shll
cmpsb
imulb
adc
lahf
stc
lahf
in
mov
pop
xor
or
mov
ret
xchg
push
mov
lcall
int3
test
add
xchg
lods
sbb
jno
pushf
outsb
mov
xor
and
push
ljmp
jne
ficomps
loop
cmp
cmp
sub
int
mov
pop
repnz
jno
sbb
gs
push
dec
ret
push
lods
jbe
xor
mov
push
and
xor
mov
ret
iret
lret
ss
fdivr
cmc
push
push
fsubrp
push
pop
stos
bound
fidivl
cs
xor
outsl
in
bound
ds
popf
push
mov
inc
push
aaa
and
enter
ret
mov
mov
rol
fcmovb
aam
cld
add
and
into
cmpl
cld
lods
cmp
ja
xchg
and
rcll
adc
adc
push
jne
rorb
xlat
je
cs
push
push
lock
mov
mov
imul
test
arpl
xlat
push
outsb
aas
push
ds
bound
mov
mov
sbb
push
in
mov
aam
xchg
fcoms
xchg
pop
and
adc
or
mov
iret
sahf
fcoml
scas
sahf
cmp
std
push
ljmp
mov
cmc
jecxz
insl
xor
lcall
mov
pop
sbb
inc
fimull
inc
mov
ret
jp
mov
mov
mov
jns
mov
adc
push
sub
sub
jbe
add
xor
xor
or
and
and
sahf
xchg
or
icebp
add
inc
int3
addr16
xchg
shr
ja
pop
ucomiss
mov
ljmp
ss
push
in
addr16
or
cmpsl
jg
das
push
push
popa
xchg
pop
ret
mov
xor
ljmp
into
orb
out
repnz
xor
in
pop
mov
out
ret
mov
cmp
pop
scas
push
lock
add
push
out
fildl
sbb
mov
pop
jmp
into
push
pop
mov
add
or
push
push
fists
push
mov
push
xchg
jb
pop
or
jbe
scas
sbb
fnstcw
adc
cld
and
and
int3
add
and
hlt
orb
push
out
outsl
out
jbe
ret
sub
stos
push
or
das
jp
jmp
and
iret
push
inc
scas
loopne
fisttpll
and
push
sub
pop
mov
ss
mov
cmpsl
push
and
scas
mov
gs
inc
xchg
pop
push
or
outsb
ret
sub
jae
movsl
adc
loopne
mov
fiaddl
cmp
mov
shrb
or
movl
xor
add
sub
add
mov
sbb
stos
push
pop
cmp
testb
mov
out
std
and
sub
sub
dec
cs
mov
adc
sbb
sub
aad
dec
add
mov
iret
aad
out
and
jecxz
imul
mov
mov
cwtl
inc
mul
jecxz
push
mov
add
mov
xor
sahf
or
xchg
lcall
ret
shrb
out
shrl
pop
push
scas
mov
xor
lcall
and
lahf
or
data16
mov
xchg
gs
leave
or
repnz
gs
push
mov
stos
sbb
mov
les
add
and
ret
mov
shlb
adc
push
aam
mov
push
dec
push
loope
loopne
jo
mov
scas
xor
mov
rcr
iret
pop
rorl
add
rcrb
aad
mov
push
push
not
fiadds
mov
push
push
scas
push
push
addb
pop
mov
mov
mov
es
jle
inc
cli
xlat
repnz
xor
mov
movsl
rcrb
repz
incb
int3
mov
push
gs
xchg
xlat
mov
fistpll
mov
or
in
xchg
mov
call
pop
loop
jne
es
mov
ds
dec
push
dec
jg
js
call
out
jo
outsl
mov
adc
int3
jns
lcall
stos
xchg
fdivrs
add
ja
inc
mov
jecxz
fsubrl
sbb
mov
mov
inc
cs
push
ret
and
data16
adc
fiaddl
clc
or
cmp
xor
cltd
dec
mov
mov
mov
imul
dec
into
lods
addr16
in
dec
ds
mov
mov
mov
adc
lcall
je
ljmp
pop
xchg
xlat
push
adcb
outsb
inc
mov
fisttpl
xor
add
pop
in
ret
in
test
jae
mov
fs
aam
push
stos
pop
push
ja
pushf
jecxz
sti
cmp
mov
inc
inc
lahf
pop
and
mov
popa
out
outsb
fs
scas
push
inc
fdivrl
ljmp
aaa
fisubrl
out
mov
enter
mov
add
bound
ret
push
icebp
jbe
rorl
mov
dec
movsl
xor
push
sub
aam
inc
fistl
sub
cs
lods
or
mov
pop
movsb
inc
or
adc
xchg
sub
in
aad
pushf
lcall
mov
test
fisubrl
es
popa
push
stc
cli
test
ret
sub
or
lahf
mov
dec
mov
sbb
jecxz
push
xchg
push
mov
pop
bound
cli
mov
iret
mov
add
add
add
lea
xchg
mov
fcom
sbb
cs
aad
nop
push
imul
or
bound
pop
loope
lods
pop
xor
fstpl
push
xchg
ja
movsb
loop
fcmovnb
rol
dec
mov
jg
jl
dec
sahf
pop
ja
inc
and
ret
les
loopne
push
jbe
inc
dec
iret
pop
push
jecxz
repz
bound
aaa
mov
es
xorl
mov
xor
push
into
scas
rclb
pushf
jbe
mov
mov
push
aam
ficoms
xorb
cwtl
bound
inc
andb
pop
sub
in
mov
js,pn
dec
jne
ss
scas
vmptrld
add
push
pop
add
je
fcmovbe
add
xchg
in
cmpsl
sbb
sbb
push
jmp
push
push
jbe
orl
imul
and
dec
and
inc
and
ja
jbe
jno
xchg
adc
aad
out
xchg
ss
mov
lcall
xor
mov
dec
dec
pop
inc
pop
cs
and
out
ds
bound
jg
push
dec
mov
ficomps
into
ljmp
pop
ret
push
mov
mov
into
jg
ss
mov
xchg
cli
movsb
fcmovne
outsl
xrelease
inc
dec
scas
add
ret
jecxz
push
push
mov
aam
sub
sarl
movsl
lcall
jecxz
xor
sbb
push
ljmp
mov
push
es
cwtl
rcll
imul
into
push
sub
pop
dec
pop
pop
in
pop
dec
ret
aad
and
outsb
cmp
rclb
jecxz
xchg
fsubl
fimuls
and
mov
movsl
add
inc
jle
or
orb
xchg
mov
mov
pop
push
loop
mov
mov
mov
add
in
adc
scas
adc
and
mov
setb
adc
mov
inc
lcall
push
ss
and
mov
inc
insb
xor
or
call
je
mov
in
pop
in
push
movsl
xor
out
sub
xchg
scas
das
add
clc
jecxz
push
loop
nop
jg
std
inc
int3
sbbb
mov
dec
add
nop
clc
mov
mov
xchg
cmp
mov
or
outsb
ret
es
pop
fcmove
sbb
addr16
outsl
cmpsb
add
jns
adc
je
into
loop
movsb
xor
mov
add
adc
pop
lods
pop
outsb
push
mov
push
stos
mov
shlb
dec
jp
dec
and
pop
out
out
in
add
sbb
cmpsl
mov
pop
mov
cmpsb
stos
mov
dec
cmp
xchg
pushw
jle
lds
cmpsl
outsl
imul
xor
sbb
cmp
add
mov
push
in
out
es
sub
cs
dec
or
push
xchg
sub
inc
imul
sbb
sbb
push
lods
xchg
fsubrl
ljmp
cs
jbe
inc
push
push
mov
push
loopne
sbb
aad
jmp
add
mov
shl
sub
scas
push
or
add
mov
cmp
lcall
sbbb
push
or
push
mov
enter
arpl
fistpl
pop
out
inc
jg
ret
dec
mov
inc
sbb
dec
sbb
xchg
fstpt
jne
mov
insb
sbb
out
xlat
in
ficomps
push
adc
enter
cmpsb
mov
mov
pop
pushf
lcall
push
movsb
push
dec
es
xchg
jb
push
je
jae
scas
cmpsb
sub
mov
or
ret
pop
add
xchg
outsb
cmp
add
push
pop
jne
adc
fadd
das
cmp
fcmovne
pop
fwait
add
or
cltd
sbb
mov
shll
fldt
sbb
iret
aaa
dec
mov
xlat
in
push
stos
aas
sub
mov
mov
loopne
test
mov
hlt
clc
cs
rolb
cmpsb
xchg
mov
fs
xor
push
hlt
inc
rcl
xchg
scas
mov
fstl
test
mov
or
ds
cmp
mov
inc
shl
jge
pop
ret
push
mov
fsubrl
mov
out
jmp
sub
lret
mov
pushf
orl
movsb
div
test
or
inc
push
loop
xchg
fcmovbe
jns
cmp
sbb
cmpsb
push
sahf
les
fistps
sarb
sub
pop
mov
push
adc
mov
rcll
mov
xchg
lahf
dec
jae
std
dec
mov
loop
sub
ja
ss
sbb
sub
stos
clc
ja
push
and
sub
lock
outsl
out
je
dec
push
sbb
xchg
push
push
das
pop
shll
in
divb
ss
outsb
xchg
imul
pop
xlat
push
outsl
sub
sti
and
xlat
ret
push
mov
push
dec
xchg
mov
mov
pop
add
mov
xchg
sahf
out
movsl
lret
xchg
push
lea
aas
fidivrl
adc
test
inc
dec
sub
mov
in
sbb
outsb
xor
dec
les
or
mov
push
les
xchg
mov
out
xchg
cmpsb
pop
lcall
outsb
xor
push
shrl
in
je
sbb
mov
push
repz
mov
mov
mov
es
cmpsb
push
or
cltd
xchg
and
cmp
pop
out
pop
xchg
add
add
adc
xlat
inc
mov
dec
mov
andl
and
mov
ss
in
dec
lret
popf
leave
ja
rcrb
push
orl
cwtl
push
mov
test
lahf
lcall
test
das
push
add
pop
cmpsb
adc
sbb
pop
sbb
popa
xchg
movsl
cmp
mov
fistpl
push
cmp
mov
mov
push
sahf
inc
lret
push
daa
aad
mov
push
ljmp
xchg
inc
imul
push
mov
push
div
fcmovnbe
push
adc
pop
sub
pavgb
lods
adc
push
sub
imul
inc
add
push
lcall
ds
ss
mov
aaa
pop
shrl
and
hlt
mov
cld
pop
cmpsb
xor
mov
jno
jecxz
mov
dec
or
add
in
mov
push
bound
cmp
in
cmp
ljmp
inc
addr16
rcrl
in
cmp
add
pop
gs
mov
lcall
in
mov
data16
jmp
and
in
imul
inc
mov
icebp
dec
mov
xchg
xchg
das
jbe
scas
mov
push
cmp
mov
xor
xor
rep
xchg
or
fidivl
shll
xor
mov
push
lock
daa
pop
mov
jne
sub
ja
out
aad
data16
out
add
xor
jecxz
mov
aas
scas
stos
jns
dec
xor
jecxz
outsb
test
or
imul
fistpl
pop
jbe
scas
fimuls
es
pop
shufps
ret
sub
jge
mov
cmp
repnz
test
or
xchg
or
mov
aad
xchg
xchg
push
rorb
push
test
clc
pop
xchg
movsb
iret
ret
and
es
lea
cmpb
lret
and
pop
xlat
inc
inc
or
shlb
adcl
rclb
outsl
mov
fbld
fidivrs
adc
iret
add
pop
pop
dec
push
mov
outsl
ss
jmp
jo
in
cs
lcall
pop
fimull
inc
stos
adc
ljmp
leave
mov
ret
jno
push
and
jne
sub
adc
gs
mov
mov
sbb
pop
icebp
xchg
outsb
xor
pusha
es
xchg
lea
mov
sbb
dec
mov
scas
jbe
pop
push
inc
xchg
shr
nop
call
sbb
scas
cmp
in
jecxz
xchg
iret
lods
cltd
lock
jg
fdivs
or
ret
cmpsb
and
fistpll
and
mov
xchg
xor
repnz
jae
ljmp
cmp
bound
cmp
sbb
add
dec
xor
xchg
sub
lods
ret
cmp
mul
xchg
out
mov
loop
sub
mov
push
scas
shrb
sub
push
sub
push
push
mov
sub
je
add
xchg
cmpsb
add
test
cmp
xchg
push
jno
sbb
sbb
scas
jo
pop
mov
or
icebp
ret
push
inc
sbb
xchg
push
mov
jg
jge
idivb
inc
lahf
inc
dec
add
imul
in
push
or
ljmp
jge
mov
mov
testl
cmpsb
xchg
or
sarl
and
ret
cmp
dec
xor
subb
fisttpl
or
push
sbbl
loop
out
mov
adc
stos
outsb
mov
cmpsb
icebp
or
jo
out
push
lahf
stos
adc
lods
rcrl
pop
jne
popa
data16
ficompl
or
push
ds
ret
push
cmp
xchg
and
add
xchg
push
mov
xor
xor
mov
loop
stc
lea
add
ss
into
stos
sbb
out
ljmp
mov
ret
out
ss
mov
mov
outsb
jo
popa
repnz
push
dec
mov
push
sub
bound
mov
cmp
dec
daa
call
ss
scas
dec
push
mov
test
mov
mov
gs
call
mov
seta
adc
dec
adc
mov
jmp
sahf
adc
push
push
push
sbb
xchg
mov
inc
sub
mov
cmp
push
rorb
imul
adc
daa
sahf
jne
rcrb
or
push
push
and
add
aam
or
xchg
ret
mov
lret
mov
mov
lret
adc
movsb
iret
mov
idivl
push
ja
fisubl
fidivs
test
out
add
mov
and
aad
stos
sub
xlat
adc
sbb
mov
data16
lret
mov
sub
sbbb
dec
cmp
xor
adcb
sub
in
push
rclb
es
cmp
mov
out
leave
out
jecxz
ret
lret
add
inc
mov
mov
jmp
xlat
jp
iret
test
iret
rcl
je
mov
or
es
aaa
sti
insl
mov
xchg
add
fisubrs
add
xchg
push
mov
add
shr
or
scas
pop
inc
imul
push
mov
mov
xchg
fiaddl
ret
xchg
ret
repz
adc
dec
inc
clc
adc
lret
cmp
cmp
sbb
push
je
mov
ds
test
movsl
dec
mov
shll
push
push
pop
filds
xchg
cltd
ret
mov
mov
pop
outsb
fidivrl
and
enter
mov
xchg
mov
mov
mov
subl
adc
xchg
fisubs
in
sub
pop
xor
jne
and
xor
add
sub
stos
lcall
mov
ja
push
mov
insb
mov
sbb
cmpsl
ror
ret
iret
xchg
jnp
ds
sub
pop
sub
lods
push
ss
adc
push
call
xlat
push
mov
sub
xchg
mov
xor
dec
imul
imul
fistpll
cs
out
data16
movsb
or
adc
xlat
scas
sbb
sub
into
lcall
cmp
out
mov
jle
movsb
lcall
sub
jae
push
mov
push
xor
dec
mov
mov
add
pop
mov
push
xchg
push
mov
sub
mov
outsl
mov
ss
mov
xchg
mov
aam
sub
outsb
push
movsb
mov
sbb
adc
out
fiaddl
adc
pop
mov
lahf
mov
mov
pop
loop
or
jl
push
mov
adc
dec
mov
xlat
xchg
and
enter
inc
leave
cmc
push
push
mov
xor
mov
ret
push
xchg
mov
dec
push
dec
sbb
cmpsb
push
mov
ss
je
mov
xchg
push
movsl
xor
or
dec
andb
cmc
pushf
outsb
ljmp
mov
shlb
cmp
cmc
imul
mov
push
ret
mov
cmc
pop
mov
out
xor
dec
jecxz
mov
xlat
push
mov
adc
push
ret
push
push
and
xor
xchg
pop
into
movsb
jnp
mov
xlat
add
dec
xchg
and
mov
hlt
push
cmp
pop
ds
into
pop
stos
xchg
ficompl
adcb
mov
mov
adc
mov
inc
gs
call
sbb
cmp
mov
cld
xor
pop
mov
bound
into
jbe
sub
fnsave
xchg
xchg
mov
ret
push
dec
daa
dec
outsb
iret
inc
out
into
sbb
filds
adc
push
into
mov
mov
xchg
push
es
cmpsl
aas
mov
push
adc
mov
pop
addr16
cmp
rcrl
ret
push
cmp
xchg
jecxz
pop
xor
mov
ljmp
jge
lcall
inc
mov
ljmp
dec
or
mov
lods
loop
pop
mov
add
into
adc
shr
hlt
lahf
mov
push
scas
imul
mov
sbb
arpl
loope
movb
ljmp
cmp
gs
mov
inc
push
subb
mov
push
xchg
add
jecxz
dec
inc
bound
jbe
mov
push
add
mov
sbb
into
push
push
fdiv
ficoml
push
cmpsb
dec
call
imul
mov
mov
dec
gs
mov
loop
sub
fadd
lcall
or
cmp
aad
loopne
inc
lret
mov
mov
pop
cs
cmp
mov
mov
cld
in
sub
loop
pop
pop
mov
push
loop
in
xorb
cwtl
nop
xchg
out
pop
cmp
or
push
aas
pop
xchg
xlat
stos
inc
insb
les
push
mov
jecxz,pt
repz
cmpb
jg
sub
sub
rcl
ret
ret
and
lds
add
or
adc
push
iret
mov
or
adc
ficompl
ret
fidivrs
pop
psadbw
es
ljmp
stos
into
xlat
in
sub
pop
mov
mov
jnp
gs
je
jne
push
push
jo
inc
push
imul
stc
pop
loop
fdivl
mov
mov
sub
loop
xor
into
mov
and
inc
jecxz
repnz
shll
je
imul
addb
out
jle
enter
mov
adc
dec
mov
pop
and
fldcw
out
or
fcmovbe
push
cmp
jecxz
hlt
adc
mov
into
lods
mov
or
xor
ss
cmp
mov
add
inc
cmp
repz
bound
loop
jg
stos
fidivrl
xchg
push
add
xchg
xchg
nop
pop
dec
les
xchg
mov
cld
jne
adc
fimuls
adc
mov
xchg
imul
dec
lcall
add
ret
push
mov
dec
push
orb
mov
dec
cmc
xchg
xor
mov
and
div
mov
mov
pop
ss
push
ds
out
cmp
push
movsb
cmc
push
fimuls
fistps
xchg
or
push
data16
mov
popf
lock
ja
xchg
mov
pop
ja
mov
push
ret
ror
xor
sub
aam
dec
xchg
ljmp
mov
hlt
and
sbb
rclb
mov
insb
inc
popf
imul
dec
mov
sbb
scas
add
addr16
adc
rclb
icebp
and
cmp
pop
jecxz
push
inc
jmp
mov
push
cwtl
adc
adc
ret
cmp
lcall
test
mov
ds
out
mov
es
inc
push
mov
in
add
inc
jne
test
ret
sbb
adc
insl
dec
mov
aaa
mov
popf
xchg
lahf
mov
mov
cmp
inc
mov
ret
jbe
mov
or
adc
xlat
adc
push
iret
inc
lcall
ljmp
daa
lods
mov
pop
cmovs
lahf
cli
adc
adc
stos
lret
scas
loop
mov
mov
orl
jne
cmp
sub
lret
or
imul
mov
subb
sub
idivb
push
mov
xchg
inc
xchg
push
xlat
outsb
fldt
hlt
push
mov
push
loop
jecxz
mov
inc
lcall
or
add
mov
es
scas
xor
push
iret
ja
sub
push
cmp
dec
idivl
cmpsb
data16
jg
scas
out
dec
icebp
daa
pop
es
scas
call
xor
push
es
addb
mov
mov
inc
xlat
push
cld
xchg
push
and
cmp
jbe
sahf
xchg
lret
out
fldenv
mov
repnz
ret
xchg
std
ficoms
test
push
stos
or
xchg
pop
inc
jg
xchg
jbe
fisttpl
mov
es
or
cmp
mov
ds
es
dec
mov
cmp
mov
or
mov
sub
xor
sub
xor
or
push
orl
jl
xchg
xchg
add
cmpsb
ljmp
push
inc
or
repz
pop
mov
scas
shlb
sti
mov
push
mov
fdiv
xor
cs
cmp
jns
cmp
push
xchg
in
pop
cmp
jecxz
fimull
push
mov
add
adc
inc
mov
dec
cmp
jne
xchg
cmp
aas
test
mov
mov
xor
into
in
sub
inc
xor
and
mov
mov
or
inc
ret
outsb
lcall
lahf
or
sub
adc
std
adc
or
les
or
cmpsl
fisttps
mov
fmull
add
cld
cs
inc
lahf
and
addr16
call
push
adc
adc
es
xchg
xor
ss
xchg
pop
sahf
mov
stos
ret
pop
and
inc
mov
test
fimull
lock
push
mov
mov
push
call
mov
or
sbb
adc
es
and
test
mov
push
and
push
adc
mov
sub
mov
ljmp
adc
cmp
mov
pop
dec
sbb
in
shl
negb
cltd
nop
lret
adc
and
dec
lcall
adc
arpl
add
outsb
add
pop
mov
push
pop
jg
xlat
popa
mov
insb
ret
xchg
cmpsb
xchg
insb
mov
hlt
lea
loop
bound
xchg
jmp
js
int3
sub
or
je
and
add
jecxz
frstor
dec
sbbb
add
iret
dec
xchg
es
imul
xchg
ja
push
pop
sub
fiaddl
add
sub
mov
test
enter
xchg
lcall
pop
xchg
mov
jg
dec
pop
fnstenv
enter
pop
outsb
jae,pn
sub
xor
push
ss
and
into
xchg
orb
sub
pop
out
jae
stos
outsb
outsb
push
into
es
push
add
sub
outsb
fmull
enter
nop
neg
and
mov
sub
mov
shll
sahf
sbb
ss
xor
fistl
pop
mov
mov
es
inc
push
nop
clc
test
loopne
dec
adc
sub
sbb
fsubrs
lds
add
mov
sub
push
jecxz
mov
mov
cmpsb
fbstp
das
out
jge
add
or
cmpb
pop
daa
pop
testb
cmp
push
pop
xchg
adc
ja
xor
xlat
mov
sbb
andb
xchg
pop
imul
xchg
pop
push
push
push
cltd
dec
xlat
je
and
fildl
mov
lcall
inc
fldt
ret
mov
cmp
adcb
cmp
in
std
frstpm(287
mov
mov
mov
cmc
cmpsb
iret
cmp
lcall
sbb
cmpsb
push
sahf
dec
cmc
and
dec
xchg
cmpsb
pushf
cmp
xchg
push
in
add
sbb
mov
fcmovnb
enter
ss
cld
cmpb
fiadds
sbb
sub
mov
cmp
jb
mov
xchg
mov
scas
sbb
loop
or
cmpsb
dec
mov
ds
add
imul
std
jge
es
xor
out
xchg
sbb
dec
xor
fistl
add
fsubl
and
push
out
lcall
mov
xchg
leave
or
and
ljmp
aas
popa
push
mov
cmpsb
sahf
ss
sub
pop
pushf
jle
in
xchg
scas
lock
mov
and
mov
outsb
outsb
nop
hlt
ja
or
xchg
cld
dec
dec
sub
gs
jbe
inc
loopne
subb
and
sub
lahf
push
inc
lret
cmp
adc
or
test
sub
ljmp
and
fisubrs
mov
and
add
imull
and
sub
xchg
cmp
push
add
add
xchg
out
mov
stos
mov
data16
push
bound
mov
and
scas
push
push
mov
xor
mov
push
and
add
ret
mov
ja
ss
xchg
mov
fildll
jle
sub
into
mov
or
mov
mov
push
push
inc
repnz
jg
shl
mov
xchg
scas
mov
sub
dec
jecxz
inc
lahf
pop
dec
pop
add
fiadds
pop
mov
mov
or
sub
xor
ret
mov
mov
cs
ja
mov
push
dec
mov
lods
addr16
dec
dec
das
or
test
and
imul
or
or
out
mov
dec
jae
dec
sarl
ret
ret
pop
loop
sbb
xchg
jae
xlat
cmpsl
jmp
dec
jecxz
adc
ret
mov
jns
sbb
push
ss
and
fistpl
addr16
jg
loop
stc
ljmp
and
adc
add
in
mov
mov
inc
adc
pop
push
pop
and
ret
int3
dec
out
addr16
ret
in
cmpl
jecxz
into
adc
mov
push
sbb
push
adc
inc
addr16
dec
xlat
pop
mov
ret
ficomps
adc
sbb
andb
mov
or
rorl
push
je
mov
cmp
jecxz
or
xchg
or
adc
add
mov
into
cld
fisubl
add
sub
dec
in
pop
push
lcall
jg
lcall
mov
mov
xchg
nop
out
rcl
lock
bound
mov
addl
mov
orb
fstps
cmpl
rorb
data16
test
mov
out
lds
fldt
xlat
xchg
pop
in
aas
xor
pop
cmovge
inc
push
add
mov
xor
xchg
xchg
or
test
jecxz
mov
sahf
pop
mov
imul
es
aas
or
cmp
mov
xchg
call
lds
mov
cld
ljmp
lods
add
pop
xchg
ja
mov
xorb
push
aam
mov
adc
insb
mov
sub
negl
fsubrl
xchg
inc
and
pop
loop
xor
mov
mov
push
add
pop
rcll
cs
and
push
fsubrp
jecxz
push
aas
imul
jne
das
xchg
ret
and
loopne
push
dec
mov
push
push
add
mov
sarl
cs
push
mov
mov
test
push
fneni(8087
jne
xchg
mov
mov
aam
mov
jae
push
fimuls
jecxz
or
int3
lahf
mov
adc
add
xchg
push
xchg
mov
push
aad
xchg
push
xor
mov
inc
mov
xchg
sahf
sub
stos
push
popa
cltd
xlat
ds
aad
dec
rolb
rol
lcall
cmpsb
mov
sub
pop
xchg
ss
jo
rcl
iret
cmp
inc
cmp
push
cltd
mov
sub
aam
sarb
dec
leave
mov
mov
push
jle
pop
sbbl
xchg
call
xchg
addb
test
push
std
add
add
loop
mov
xlat
xchg
and
mov
sub
add
push
xchg
into
mov
out
out
mov
iret
rorl
mov
adc
sub
or
sarb
scas
repz
shll
push
mov
lcall
or
push
hlt
ret
cmp
fisubs
mov
dec
jle
rolb
inc
and
mov
mov
shrl
mov
lcall
dec
pop
es
ss
sub
jno
mov
pop
adc
pop
stos
mov
push
push
mov
enter
jne
pushf
lea
je
mov
pop
lret
mov
pop
mov
mov
mov
andb
in
outsb
xorl
fidivrl
xlat
mov
xchg
cmp
cmp
subl
dec
and
cmpsb
lret
adc
mov
xorb
jae
xchg
mov
imul
push
jl
sti
cmpsl
ds
cmp
bound
rcl
fisttpll
shrb
jecxz
push
rcrl
jno
cmpsb
and
mov
fidivs
mov
in
cs
cmp
mov
testb
ds
cltd
aam
or
add
jmp
inc
mov
test
ss
imul
into
push
fcomp
aad
outsl
loop
mov
mov
or
push
or
mov
or
xchg
mulb
inc
push
enter
sub
ds
mov
xchg
push
push
out
jne
bound
push
in
loop
mov
out
xor
xor
mov
xchg
dec
add
mov
mov
xchg
pop
sub
cmpsb
add
test
in
rcl
pop
adc
clc
dec
xchg
pop
mov
popf
mov
dec
test
push
mov
ss
mov
xchg
mov
push
add
sub
jp
dec
int3
out
stos
je
push
aad
jne
stos
xlat
icebp
je
fiaddl
mov
push
xorl
cli
fisubrs
sti
fists
mov
add
adc
fbstp
mov
fidivs
out
shlb
and
mov
rcrb
or
adc
bound
ss
out
mov
mov
insl
xchg
add
loope
sub
ds
movsl
jbe
push
cmp
daa
pop
fidivrs
push
mov
fdivl
shr
mov
popf
and
sub
sahf
stos
push
push
inc
ss
mov
cs
pop
es
pop
pop
mov
push
sbb
rol
ja
xchg
lret
sahf
ret
loop
cs
add
aas
dec
adc
cmp
sbb
scas
bound
push
and
push
sbb
mov
sub
or
mov
imul
mov
or
adc
xchg
mov
mov
sub
and
cmp
loopne
sub
mov
mov
outsb
fildll
xchg
pop
lahf
inc
test
adc
fiadds
lods
testb
cs
push
mov
bound
jno
into
rolb
pop
mov
xlat
ret
xchg
mov
mov
outsb
and
call
ret
xchg
imul
mov
mov
lret
test
or
inc
mov
orb
add
and
jp
push
sbb
fwait
dec
je
xchg
mov
cmpsb
xchg
ss
ds
mov
or
mov
adc
push
sub
mov
enter
adc
add
pop
mov
in
cmpsl
xor
rcll
outsl
xchg
pop
in
outsb
sarb
add
add
mov
data16
ret
ret
mov
add
das
adc
push
dec
pop
leave
sub
xchg
pop
cmp
mov
xlat
rolb
cmp
push
adc
in
or
loop
rclb
mov
or
mov
fiadds
or
ret
loopne
mov
fs
xor
sub
xchg
movsb
lock
leave
cmp
xor
dec
xchg
fistpl
clc
invd
movl
sub
imul
mov
cs
push
mov
xchg
fs
inc
jecxz
ret
fimuls
mov
and
push
adc
rorb
or
movsb
sub
out
and
in
and
mov
bound
push
push
mov
jl
out
cmp
xchg
ret
pop
inc
outsb
outsb
negb
jecxz
ljmp
in
das
mov
lds
or
add
in
enter
cmp
inc
bswap
ljmp
out
push
mov
ds
mov
aas
push
cli
addl
mov
repnz
mov
lahf
mov
dec
test
lods
pop
mov
imul
ret
aam
loop
aas
stos
rclb
mov
sbb
cmp
adc
hlt
push
mov
mov
fildll
cmpb
dec
push
inc
jb
mov
adc
inc
in
imul
sbb
lods
ret
mov
ds
xor
add
pop
mov
inc
cmpsb
jbe
ret
shll
sahf
fdecstp
outsb
inc
mov
inc
xchg
jmp
add
ss
sub
jae
push
xchg
xlat
sbb
add
pop
fildl
mov
cld
dec
daa
mov
push
dec
dec
and
xchg
push
ljmp
loop
pop
stos
push
imul
iret
dec
pop
scas
add
cli
insb
adc
add
mov
add
mov
jo
andb
push
sbb
ret
in
gs
pop
aaa
jne
cmp
xchg
hlt
loop
pop
ret
push
jecxz
inc
mov
or
cmp
and
mov
xchg
dec
jno
fs
mov
out
inc
int3
pop
les
in
aam
or
lcall
sub
in
add
js
jns
ss
dec
mov
fcmovbe
mov
fbld
sub
jle
in
es
fcmovbe
mov
xor
hlt
dec
rcll
xchg
cmpsl
ret
xor
sahf
je
fbstp
xor
mov
lods
dec
mov
add
and
mov
or
mov
cs
cmp
hlt
fisttpl
lcall
jns
xchg
dec
inc
adc
es
in
push
or
mov
or
fbld
test
subb
sti
mov
mov
lods
test
leave
sbb
outsb
xlat
mov
push
negb
push
pop
out
mov
mov
ljmp
mov
jg
xchg
xchg
rcl
lds
dec
push
push
mov
pop
mov
jge
in
xchg
sti
inc
shll
cmp
mov
mov
stos
cmpsl
push
mov
fists
push
and
cmp
sbb
push
sbb
push
icebp
arpl
es
adc
dec
xor
stc
fsubr
lcallw
jg
adc
xor
mov
iret
push
test
mov
xchg
ds
push
mov
adc
lods
xchg
loopne
ret
lods
xchg
mov
adc
fistl
mov
mov
jecxz
sbb
xor
dec
add
mov
sbb
push
into
mov
rol
lock
aad
outsl
ss
cmp
add
in
xchg
cs
lock
inc
push
and
je
cmpsb
cli
sbb
sub
repz
mov
or
xchg
outsb
mov
dec
jecxz
ret
sbb
pop
push
lds
and
ja
data16
cmp
leave
push
fistpl
pushfw
inc
mov
jbe
mov
or
in
repz
addb
mov
fucomi
or
out
out
in
out
adc
pop
aas
gs
mov
dec
inc
jbe
mov
jecxz
adc
hlt
push
lcall
push
out
jae
pushf
sbb
jne
mov
ret
mov
aad
int3
sub
nop
mov
ss
push
push
and
pop
lret
push
sub
loop
push
mov
add
mov
int
push
pop
test
das
pshufw
xor
out
lock
mov
cmc
shlb
loopne
mov
std
fistl
mov
xlat
in
out
fists
cld
xchg
push
ret
inc
shrl
adc
fimuls
mov
sub
movsl
sub
adc
incb
xchg
jo
shll
outsb
int3
mov
lcall
in
inc
iret
and
xor
push
hlt
ja
outsb
cld
into
fistpll
cmc
mov
in
xor
mov
cs
hlt
push
cmp
xchg
imul
add
adc
add
push
and
cmp
inc
frstor
fisubl
xchg
sub
mov
aad
xor
daa
dec
push
and
movsl
out
scas
push
fisttpl
sbb
icebp
sub
inc
inc
loopne
xchg
adc
mov
mov
push
push
iret
pop
out
cmovl
std
inc
ret
push
mov
push
mov
es
inc
stos
pop
cwtl
enter
test
out
shll
cmc
sbb
push
mov
inc
sub
sti
push
xchg
jne,pn
mov
mov
jmp
ss
ljmp
loop
iret
jg
cld
pop
push
and
aaa
ljmp
test
mov
inc
sub
imulb
sub
cs
and
das
loop
jmp
push
stos
xlat
pop
test
out
jge
push
ficoml
mov
loop
fs
and
movsl
mov
ja
sub
es
stos
push
mov
mov
cmp
rcl
lret
das
sub
pusha
lahf
hlt
arpl
clc
add
xlat
ret
cmp
sarb
sti
fidivrs
mov
lcall
mov
xchg
xchg
loop
mov
pop
or
pop
fs
ret
dec
xor
push
insl
sbb
push
cs
and
fcoms
cmc
and
orb
rcl
or
enter
ret
dec
add
sbb
out
jg
into
jecxz
fs
push
sahf
push
dec
aam
js
xchg
mov
je
add
je
ss
xor
fdivrl
call
mov
js
mov
mov
or
dec
cmpsl
or
or
add
fidivrs
not
xchg
push
xor
mov
faddl
or
adc
movb
adc
and
mov
sbb
iret
pop
inc
mov
mov
outsb
es
dec
cmc
stc
stos
xchg
mov
shrd
and
sti
dec
and
adc
or
ss
xchg
mov
push
inc
iret
mov
bnd
or
ss
movsl
mov
jbe
jno
dec
inc
cmp
fstl
push
into
or
loop
ds
lds
xchg
call
inc
lahf
pop
inc
push
ljmp
sbb
push
fmull
fistl
fsubrs
sub
lret
ret
out
and
xor
les
inc
adc
inc
in
aas
cmpsb
es
mov
mov
mov
bound
sub
xlat
sbb
iret
in
pushf
push
fadd
aas
mov
cmp
mov
dec
inc
lcall
jbe
mov
push
sub
mov
push
adc
sahf
add
fidivs
aad
sbb
loop
stos
mov
or
leave
dec
mov
sarb
les
add
pop
ss
xchg
loopne
add
mov
outsl
mov
loopne
inc
mov
add
in
ljmp
cmp
mov
adc
mov
pop
fcmovu
aaa
cs
push
loopne
and
inc
test
fcmovnbe
sbb
popl
push
xchg
jae
popf
ss
add
sbb
mov
mov
mov
xchg
push
das
gs
enter
imul
rcr
add
lcall
pushf
jecxz
mov
ucomiss
and
mov
mov
repnz
xchg
adc
sub
pop
cmpsb
in
or
push
and
push
cmp
xor
lret
es
movsb
dec
lcall
hlt
xlat
push
mov
call
or
mov
adc
sub
jle
cmp
or
testl
ss
push
mov
mov
pop
mov
in
cs
add
je
add
in
hlt
push
cmpsb
xchg
adc
dec
mov
cli
ss
jno
push
pop
test
and
pop
sbb
shrl
dec
mov
push
add
scas
cmpsb
xlat
xchg
daa
xchg
and
rcrl
push
scas
jle
popa
sub
mov
rclb
push
xchg
cmpb
in
and
jge
pop
ss
xor
lret
push
push
jae
bound
jge
std
cmp
decb
dec
push
aas
xlat
and
mov
lock
mov
mov
int
shrb
mov
pop
xor
insl
pop
push
jle
sbb
lds
ds
cs
fiadds
push
ljmp
pop
mov
cmp
xchg
mov
es
and
idiv
mov
ds
addb
cmp
js
loop
mov
push
daa
xor
loopne
movsb
adc
pop
mov
and
add
in
xchg
shr
mov
sbb
mov
xlat
mov
ret
ret
fabs
gs
mov
outsb
ficompl
jne
test
ja
ds
pop
lret
stos
iret
pop
adc
add
lods
pop
nop
mov
lds
inc
ficompl
ljmp
in
mull
and
pop
lret
inc
mov
push
lcall
ja
es
outsb
rolb
and
adc
into
push
ds
jl
adc
mov
mov
filds
jecxz
push
jo
mov
ficoms
xchg
mov
sbb
sub
inc
xor
mov
jecxz
sti
mov
or
push
push
mov
mov
or
add
insl
xor
mov
lcall
movsl
imul
mov
dec
jno
or
push
mov
into
dec
mov
aas
sub
fildl
rcll
push
rol
cmp
jno
sbb
nop
add
es
adc
fldt
loop
sub
cmp
loop
sub
or
outsb
push
aas
inc
iret
jl
fists
rclb
add
lods
or
mov
mov
mov
inc
stos
fsts
dec
mov
fimuls
mov
sub
or
mov
fmuls
pop
mov
dec
xor
aad
mov
push
fisubl
or
adc
ja
mov
ds
sahf
cld
mov
shl
mov
xor
jmp
ficomps
ror
add
sbb
int
push
aas
push
in
dec
je
and
inc
mov
mov
xchg
fidivs
gs
fists
ret
xor
out
lcall
cmpsl
ss
jmp
sbbl
paddw
bound
xor
out
inc
fs
je
cmp
jo
mov
in
adcl
sahf
out
mov
cli
and
xor
je
xchg
mov
out
push
cs
add
adcl
xchg
and
test
xchg
in
push
sbb
notl
adc
mov
test
push
scas
or
jbe
fstpt
dec
add
rorb
add
sbb
mov
int3
bound
push
cmpsb
shll
pop
mov
push
sbb
cmp
mov
pop
into
lcall
push
adc
out
push
push
dec
push
lcall
jno
rcrb
sub
sbb
ljmp
pop
mov
movsl
cmp
sbb
sub
mov
jg
stos
lcall
rorb
test
jae
pop
inc
fisubrs
push
mov
out
dec
pop
clc
pand
inc
and
cs
sub
int3
aad
xor
push
pop
incl
cmpsl
mov
push
jmp
sub
outsl
pop
dec
test
pop
pop
lea
adc
into
xchg
xor
mov
pop
mov
lahf
ss
push
adc
aam
das
mov
mov
fists
xchg
or
les
jmp
bound
xlat
imul
and
sbb
dec
mov
cmp
xchg
push
sub
push
test
enter
mov
dec
sub
mov
adc
push
cmpsb
push
cmpsb
ror
push
jbe
loop
mov
push
ds
mov
adc
scas
aad
mov
faddl
mov
push
push
xor
push
cmp
lods
pop
mov
int
idivl
xchg
xchg
ret
jg
adc
push
ret
inc
add
xchg
push
mov
in
xchg
xlat
xor
in
dec
and
lea
mov
enter
rcrl
cmp
sahf
ss
sub
jecxz
cs
inc
stc
adcl
jno
jecxz
push
cmpsl
or
pop
loop
std
push
add
push
les
mov
add
push
imul
pop
shr
ds
sub
test
pop
lds
or
mov
ja
sahf
and
ljmp
lahf
cs
dec
jecxz
cmpsl
iret
pushf
pop
ds
jge
mov
or
xchg
fcmovnb
pop
jecxz
push
es
push
mov
or
cld
pop
out
and
outsb
adc
pop
stos
pop
int
lds
sub
and
or
addr16
stos
iret
aas
cld
pop
into
enter
shlb
out
jecxz
insb
add
ret
mov
add
cmp
enter
xchg
xlat
mov
repz
xchg
fbstp
mov
add
sbb
mov
inc
cmp
xchg
fistl
gs
sbb
pop
iret
inc
cmp
ljmp
pop
adc
xchg
loop
subb
xchg
inc
mov
pop
jmp
sub
pop
addr16
and
les
hlt
fiadds
inc
lcall
fidivl
stos
aas
fldcw
pop
add
sub
jne
ficomps
mov
sub
pushf
pop
sti
adc
iret
push
or
ljmp
sub
sbb
stos
es
aas
and
xchg
out
xchg
cmp
ljmp
stos
cmp
jge
in
or
xchg
sub
mov
sub
mov
loop
push
sub
inc
xchg
and
push
addr16
mov
add
xchg
xchg
in
dec
xchg
push
ljmp
inc
jg
push
mov
cmpsb
les
push
push
popw
jbe
add
shlb
negl
push
lods
jo
neg
ret
mov
push
sti
mov
push
push
test
inc
push
push
mov
jne
aas
mov
sub
pop
outsb
es
fidivrs
rcr
push
mov
sub
cmp
sub
in
jle
cmpsb
pop
cltd
add
xchg
cmp
dec
lock
inc
gs
leave
sub
sub
fdivp
scas
cmpsb
mov
xchg
dec
add
jecxz
ljmp
xor
loop
ret
pop
cmp
mov
xchg
ljmp
test
clc
or
jl
pop
xchg
add
add
stos
rol
mov
call
into
mov
ret
enter
out
data16
mov
iret
sbb
jecxz
inc
push
cmp
adc
and
sub
pop
nop
sarb
aas
mov
mov
ss
icebp
add
push
push
pop
mov
cld
imul
lahf
gs
pop
pop
mov
out
cmp
es
xlat
push
mov
or
xor
or
or
imul
jo
aam
fildll
ds
shll
xlat
cmpsb
sahf
mov
mov
pop
or
push
fildll
xor
pop
ret
les
push
sub
das
int
push
pop
mov
rcrl
aas
cmpsb
mov
and
mov
and
lret
sub
cmpsl
push
ds
push
push
je
daa
mull
push
aam
jno
or
ret
mov
add
shlb
les
clc
test
xor
enter
mov
pcmpgtw
lock
inc
shrb
or
add
mov
fistl
and
out
pop
xchg
iret
negb
push
ds
incl
push
shrb
cmp
sub
iret
sub
subb
jg
and
sbb
outsb
sbbl
jmp
daa
loop
adc
mov
and
pop
push
xchg
in
adc
lods
ds
nop
cld
mull
bound
mov
sub
mov
mov
mov
mov
rcrb
sub
dec
cmp
or
dec
sbb
mov
rcrb
xlat
pop
cmp
pop
mov
add
xchg
not
mov
xor
pop
cmpsb
fildl
xchg
mov
sbb
sbb
xor
sub
cmpsb
mov
decl
or
mov
imul
fistps
lcall
mov
mov
push
push
jecxz
fiadds
ss
push
fbstp
out
adc
sarb
mov
cs
add
outsb
insb
fisubs
sub
adc
push
mov
cmp
xchg
hlt
aam
mov
dec
stos
aam
call
bound
into
pop
les
mov
mov
les
push
negb
xlat
mov
fisubrl
mov
add
add
dec
ret
adc
leave
cmc
stos
xchg
ret
push
mov
pop
add
aam
cmpsl
mov
pop
mov
sahf
sbb
xor
in
mov
ficoml
mov
push
add
sbb
sub
xchg
jb
jo
jnp
push
ljmp
orb
add
ljmp
out
push
mov
outsb
out
xor
mov
pop
sub
and
add
in
stos
sbb
call
imul
sbb
cmpb
les
jecxz
add
loop
fdivrl
lea
imul
push
sbb
jecxz
adc
mov
pop
add
out
xchg
add
fldt
outsl
cld
cltd
cmpsl
fisubs
push
adc
outsb
add
test
ss
xchg
aam
sub
gs
xchg
or
and
imulb
mov
sub
ret
inc
out
mov
shlb
xchg
cmpsl
sbb
loopne
sub
push
mov
xor
test
push
stos
dec
mov
sub
xchg
push
pushw
inc
push
aad
pop
pop
fbstp
js
into
cmc
pop
xchg
es
mov
and
or
out
xlat
shlb
mov
inc
ljmp
lahf
out
loop
xchg
cmp
and
in
push
xchg
push
movsl
or
push
adc
pop
stos
sub
jg
ds
xchg
push
mov
mov
xlat
add
lcall
lock
push
movb
imul
rcll
sbb
xchg
jne
push
xchg
and
pop
or
xchg
push
push
jno
hlt
push
ljmp
push
mov
push
mov
xor
pop
sbb
sub
push
loop
or
cmp
mov
add
or
cmc
shrb
inc
es
jle
adcb
adc
rcl
jmp
mov
negl
mov
mov
ds
movsl
push
out
push
cmpsl
jnp
sahf
inc
adc
push
sub
andb
insl
xchg
jl,pt
lret
lahf
mov
xchg
inc
inc
imul
inc
lss
fs
test
and
xor
ss
cmp
popf
mov
lahf
cmp
ret
push
mov
das
lcall
insb
ss
iret
fidivs
and
pop
lods
test
scas
addr16
adc
ss
lret
ds
loop
repz
stos
add
push
clc
sti
outsb
cs
movsb
mov
push
fldl
ljmp
or
add
ret
mov
push
stc
sub
cmc
rorb
mov
cmpl
xchg
sub
or
es
shll
mov
push
rolb
cmpsb
xlat
ret
lock
addr16
loopne
into
ss
inc
add
inc
xor
xchg
pop
jno
or
xor
mov
out
aas
adcb
mov
sahf
inc
xchg
and
es
mov
ficoms
push
xchg
sbb
outsb
mov
std
inc
seta
cmp
iret
outsb
and
stos
imul
das
dec
fildll
fisubs
mov
ret
or
loop
pop
in
cwtl
mov
push
iret
xchg
sub
add
movsb
fimull
adc
loopne
push
cld
fmull
hlt
or
mov
inc
mov
pop
aas
mov
into
push
enter
bound
lods
rolb
add
fisttpl
inc
mov
stos
leave
out
push
and
sub
pop
out
push
xor
rcl
pop
iret
imul
and
push
fcmovb
scas
jo
mov
pop
ret
test
pop
cmp
cmp
fildll
bound
push
es
lret
pop
bound
daa
push
aad
xchg
push
rcr
jno
inc
addr16
mov
fdivs
in
and
mov
lds
or
cmp
inc
add
push
lock
add
pop
push
dec
mov
pop
idivb
psrlq
mov
fcmovnb
sbb
cltd
cmp
mov
insb
sti
enter
xchg
scas
in
push
mov
push
hlt
es
inc
add
mov
add
mov
mov
loope
push
pop
int
sbb
loop
imul
iret
repz
mul
push
outsb
pop
mov
jbe
or
fldt
xchg
mov
addr16
mov
es
stc
mov
xchg
push
mov
lahf
pop
mov
add
cmpsb
inc
sub
ja
movsb
fdivrs
movsb
inc
add
mov
stos
out
sahf
subb
xor
lret
shll
jne
add
push
push
and
push
bound
cmp
dec
shll
sbbl
enter
pop
mov
and
gs
adc
bound
iret
adc
hlt
iret
es
cs
mov
jne
mov
mov
adc
and
push
inc
lds
rolb
xor
mov
iret
jle
xchg
xor
ret
int3
mov
fidivrl
cmpsb
faddp
push
les
mov
inc
cmp
fcoml
xchg
je
movb
loop
mov
mov
add
sub
pop
xor
mov
test
or
je
ds
in
mov
jg
jecxz
inc
out
dec
xor
cmp
add
popa
pop
sbb
rclb
mov
adc
out
pop
ret
sti
and
mov
mov
imul
test
ficoms
xchg
sub
repnz
popa
xchg
sub
fcmovbe
je
or
push
das
lds
cli
sahf
and
dec
stos
ljmp
and
test
cmp
ds
stos
dec
ret
sbb
inc
loop
pop
fildl
mov
pop
imul
and
push
cmpsl
push
inc
mov
sbb
fildll
or
mov
bound
es
pop
loop
gs
iret
mov
cld
mov
dec
jbe
xor
adcb
les
aam
movb
out
pop
leave
xor
mov
xchg
loop
push
xchg
stos
and
repnz
xchg
xor
and
pop
sbb
mov
xchg
mov
or
adc
push
mov
gs
add
sbb
xchg
insl
adc
testb
mov
test
std
out
enter
push
add
and
sub
xchg
cmc
addb
mov
aas
bound
cmpsb
or
sub
aaa
inc
addb
mov
xchg
ficomps
push
scas
dec
cli
stos
mov
dec
sbb
or
cmpsl
addps
decb
scas
xchg
xchg
cs
movsl
push
sbb
push
xor
inc
or
cmpsb
lahf
ss
or
lcall
nop
cmc
inc
jecxz
mov
rcrl
xlat
ds
outsb
mov
pop
rorl
ret
hlt
icebp
adc
rclb
imul
nop
cmp
iret
ds
aaa
sub
xlat
ss
push
iret
push
ljmp
mov
fwait
ljmp
sbb
or
mov
je
push
xchg
push
cmp
xor
mov
es
push
push
or
cmpb
adc
dec
or
mov
leave
movsb
roll
leave
dec
adc
imulb
movb
cmpsl
push
shl
sub
push
mov
std
and
push
daa
ficoml
push
es
cld
hlt
push
ret
cmpsb
mov
xchg
hlt
xchg
lcall
ret
aaa
adcl
inc
popl
adc
dec
or
sti
xor
imul
or
xor
jno
ret
cmp
setle
mov
aad
dec
pop
xchg
push
xor
insb
push
pushw
inc
mov
and
aad
adc
and
ficompl
into
mov
or
mov
rcr
pop
inc
clc
pop
out
push
push
add
mov
and
orb
sub
or
sti
sbb
iret
sub
mov
sub
and
push
xchg
sarb
fistpll
and
repnz
xor
push
lods
jp
stc
addr16
in
loop
je
mov
add
mov
movl
imul
aam
div
cmpsb
ljmp
roll
push
add
xor
test
push
xchg
bound
leave
sbbb
rol
cmpsl
sbb
push
mov
pop
nop
bound
pop
fists
mov
popf
fcmovbe
pop
mov
fwait
mov
xchg
and
push
inc
dec
push
pop
pop
mov
jecxz
mov
testb
mov
sbb
mov
shrb
outsb
dec
push
xchg
xor
mov
fst
lahf
aam
xlat
mov
leave
sbb
inc
push
add
sbb
shl
sbb
jmp
ljmp
xchg
sahf
sub
test
lret
cmpsb
sbb
ret
mov
outsb
adc
bound
andl
fcomip
jecxz
pop
push
xchg
loope
aaa
cmc
push
mov
xor
pop
ja
add
cmpb
sub
jecxz
mov
and
adc
ljmp
dec
xchg
jg
xchg
fimull
rcll
xor
shrl
push
js
int
push
sbb
jae
and
outsb
jge
mov
or
mov
xchg
xor
push
lods
sub
icebp
cmp
mov
sub
ret
cmpsb
mov
push
sahf
inc
mov
ss
aad
dec
int
jmp
sub
jmp
mov
push
add
lret
pop
add
pop
ds
addps
mov
out
bound
mov
cmpsb
mov
mov
cltd
dec
push
in
inc
sti
outsb
sub
addr16
rclb
mov
lock
mov
out
sub
ds
mov
xor
push
inc
shrb
pop
test
add
push
and
mov
jbe
pop
sub
push
xchg
adc
es
clc
push
lcall
pop
mov
push
add
mov
repz
orb
jbe
xlat
push
adc
ret
xorb
mov
mov
outsb
dec
xchg
push
ljmp
lahf
scas
cmp
testb
faddl
test
dec
int3
neg
sub
or
push
or
sbb
imul
ds
fisttps
xor
inc
push
imul
lret
shr
or
mov
ficoml
xchg
cmpsb
lock
push
adcb
mov
call
or
dec
or
cmp
sbb
or
inc
jmp
push
repnz
divl
pusha
push
cmpsl
lret
outsb
scas
mov
es
jns
push
mov
mov
dec
mov
decb
jbe
mov
icebp
push
jbe
adc
mov
push
sti
xchg
ret
push
push
mov
into
mov
xchg
stos
xchg
pop
push
jae
mov
inc
out
ret
inc
cmp
xlat
add
mov
mov
pop
into
mov
mov
mov
inc
pop
dec
sahf
ljmp
ret
mov
into
aad
sub
stos
cmp
mov
adc
gs
std
inc
sbb
shrl
cli
cmpsb
cld
dec
dec
push
outsb
jecxz
sbb
test
push
aas
sub
loopne
push
jbe
ret
je
jecxz
gs
dec
test
sahf
push
das
xchg
iret
jl
jmp
or
and
inc
xchg
inc
sbb
pop
ss
mov
imul
call
ljmp
and
xor
push
pop
lahf
scas
cs
jg
lds
add
mov
out
inc
cmpsb
push
adc
fistpll
mov
aas
cli
aad
es
xchg
fistpl
mov
cltd
push
loop
or
aam
push
pop
cmp
jge
sbb
jg
call
mov
and
ret
mov
push
ret
outsb
push
mov
xchg
out
or
das
and
imul
xchg
negb
fidivs
or
fcmovb
mov
dec
test
xchg
jle
dec
push
sbb
push
push
outsb
outsl
gs
sbb
addr16
xchg
cmp
sbb
mov
or
sub
sbb
imul
sub
and
lahf
and
mov
sbbb
mov
imul
push
iret
mov
gs
fcmovne
xlat
inc
hlt
jo
xchg
mov
or
outsb
cmp
adc
dec
inc
filds
and
sti
ds
lock
sub
push
sahf
idivl
ficomps
push
jecxz
in
imul
inc
bnd
pop
into
mov
xor
sub
aas
lahf
andb
or
cwtl
inc
xor
xlat
jmp
mov
mov
jle
adc
idiv
ret
mov
push
inc
addb
inc
pushf
add
xchg
mov
mov
fstpl
jnp
push
adc
negb
out
mov
movsl
clc
outsl
mov
rolb
pop
mov
sbbb
mov
outsb
loopne
jecxz
adc
notl
mov
dec
pop
inc
adc
ror
in
push
inc
data16
xchg
mov
hlt
jle
iret
push
ljmp
push
faddl
divl
incl
fbld
jecxz
stos
add
rolb
cmpl
fsts
add
lahf
mov
and
enter
shlb
and
sarl
fcmovnbe
cmp
fiadds
out
lcall
rorb
push
jbe
mov
out
sahf
and
xchg
xchg
cli
enter
jl
mov
mov
mov
sub
into
iret
ds
jbe
out
and
inc
and
lcall
push
hlt
mov
fildl
inc
into
add
mov
shll
out
std
push
and
jecxz
inc
push
scas
add
dec
mov
cmc
outsb
loop
push
xchg
xchg
int3
push
mov
push
mov
ss
orl
mov
or
lcall
loop
stos
xchg
pusha
mov
mov
inc
jnp
push
out
inc
int
cmp
or
imul
mov
add
shll
ret
bound
dec
fiaddl
xchg
xor
jecxz,pt
fisubrs
add
push
mov
add
sub
push
adc
jbe
ds
xchg
stos
dec
movsl
xor
sub
int
push
mov
dec
sub
mov
mov
or
mov
filds
imul
hlt
cmc
push
lcall
add
pop
jle
xchg
rclb
lods
loop
test
mul
or
cmpb
jne
ficoml
ljmp
mov
push
movsb
lock
cs
sub
test
mov
adc
add
xor
rcl
insb
push
sbb
testl
or
call
cmc
mov
mov
mov
outsb
xor
push
into
adc
sahf
sub
jmp
stc
sbb
push
jmp
int3
push
mov
mov
sbb
shl
add
fmul
in
push
into
mov
dec
ljmp
loop
or
gs
lahf
test
dec
xchg
mov
stos
lahf
inc
cmp
add
std
add
loop
xchg
je
mov
mov
xor
push
rclb
or
push
cs
pop
pop
aaa
xchg
xchg
dec
sub
push
add
push
ljmp
jno
adc
out
mov
or
mov
sbb
mov
jle
lods
or
inc
and
scas
ret
test
mov
adc
leave
sbb
xchg
fcoml
mov
and
scas
pop
cs
adc
addb
pop
ret
inc
fistpl
fbld
ss
daa
dec
into
mov
dec
lods
aad
push
sub
mull
mov
add
andnps
es
push
mov
mov
movsb
das
cmp
sarb
add
scas
data16
xchg
dec
xchg
add
mov
ret
scas
adc
push
nop
push
mov
aad
push
fnstenv
cmp
test
lahf
ljmp
movsl
into
adc
ret
fistl
jecxz
sub
dec
xchg
mov
push
add
and
js
mov
ljmp
incl
or
iret
sbb
std
cld
mov
shlb
mov
or
fisubrl
ret
cmp
adc
inc
mov
mov
cmp
ret
outsl
add
out
adc
scas
add
js
mov
mov
push
data16
and
dec
or
divb
cmp
sub
ret
loopne
xchg
jecxz
popf
add
bound
es
ficoml
neg
mov
or
adcb
and
mov
fwait
mov
cld
dec
xchg
outsb
scas
inc
cwtl
jecxz
sar
xchg
cmpsl
loope
into
xchg
adc
and
mov
push
jbe
ds
idivl
out
stos
xor
xor
test
lock
or
ss
push
pop
push
add
inc
push
mov
iret
push
mov
aad
cmpsl
outsb
shlb
mov
xchg
sarl
mov
adc
jg
cmpsb
push
stc
movsl
pop
dec
add
jmp
iret
xchg
lret
loop
mov
ret
out
xlat
lret
sahf
mov
lds
inc
adc
shr
mov
xlat
xor
mov
add
ret
into
aas
mov
mov
imul
int
outsb
adc
ss
dec
push
dec
es
xchg
cmp
mov
hlt
and
jecxz
icebp
divb
mov
push
inc
add
jp
push
mov
mov
es
ret
pop
add
fidivs
xor
ja
mov
sub
mov
push
leave
adc
cmc
sub
xor
mov
cmpsl
jg
jo
lock
mov
sub
out
jne
ss
outsb
fists
pop
jecxz
push
or
jg
jb
and
fs
mov
std
or
xor
adc
push
push
cmp
nop
sub
rcrl
mov
addb
jp
stos
ret
add
sbb
adc
xchg
and
inc
pop
inc
fs
iret
mov
xor
inc
xor
push
jecxz
mov
or
lret
sub
icebp
mov
push
sub
aaa
mov
orb
cmp
mov
mov
ret
loop
jecxz
popf
pop
out
add
dec
ljmp
pop
dec
dec
das
nop
push
popa
xchg
and
das
xor
lcall
dec
push
mov
mov
iret
aam
jge
mov
lcall
jbe
out
cmpsb
into
std
mov
rorl
lock
push
or
mov
imul
lret
inc
mov
aam
add
add
ljmp
int
mov
cmpsb
bound
jle
mov
sarl
subl
cmpsb
push
into
xchg
cmp
repnz
jecxz
sahf
shlb
ds
mov
cmc
mov
mov
lret
adc
sahf
lcall
jo
ja
mov
adc
xchg
cmpsb
pop
es
test
mov
push
cmpsb
or
lcall
gs
or
sub
push
pusha
sbb
cs
aad
or
cmpsb
ljmp
lret
cs
cli
cld
xchg
sub
faddl
jecxz
xor
pop
push
adc
mov
jecxz
and
jmp
rorb
test
jo
icebp
and
mul
out
xlat
insl
lods
loop,pn
mov
adc
bound
and
pushf
pop
stc
test
cmc
adcb
sti
mov
addr16
xor
lods
jecxz
mov
scas
jl
pop
xchg
mov
out
xchg
imul
daa
xchg
mov
sub
outsl
dec
stos
stc
dec
mov
out
push
add
movsl
daa
mov
adc
jl
add
rol
lahf
mov
adc
or
cmp
lahf
ffreep
jbe
sub
stos
rorl
mov
xchg
sbb
add
push
ss
sbb
cmc
and
inc
pop
push
sub
imul
sbb
int
and
es
push
aad
jecxz
push
in
repnz
and
movzbl
ret
shrb
sahf
push
cmc
out
xlat
adc
mov
dec
cmc
sbb
into
push
bound
inc
ret
lea
mov
fildll
cwtl
cmp
mov
mov
jmp
push
dec
inc
pop
test
dec
movsl
inc
ss
ret
ds
xchg
fistpll
adc
adc
add
sahf
out
dec
push
or
adc
pusha
rcr
cmpsl
mov
dec
push
ret
dec
pop
in
mov
subb
cld
pop
add
jmp
mov
cs
scas
pop
mov
inc
add
cltd
lcall
call
sub
and
ljmp
dec
repnz
push
push
mov
iret
sub
xor
test
clc
outsb
ret
push
push
sub
mov
inc
insl
in
lock
mov
movb
into
xchg
ljmp
lret
push
push
scas
cmp
sahf
test
orl
mov
lcall
loop
in
sub
jp
and
cmp
inc
repz
adc
pop
shlb
pmaxub
ret
and
sub
lcall
inc
sbb
insb
jecxz
sbb
sbb
sbb
or
fs
and
lahf
mov
mov
gs
mov
mov
mov
ljmp
xchg
or
push
in
cmc
or
mov
aas
cmp
adc
and
push
imul
sbb
pop
inc
out
dec
jns
xchg
mov
jne
scas
dec
bound
dec
xlat
and
fistpll
out
ret
test
sbb
sub
ret
add
jo
dec
ret
aam
pop
push
mov
leave
fcom
std
add
sbb
ficoms
in
xchg
loop
into
es
fcom
adc
lcall
xlat
fidivrs
or
inc
jge
add
je
aas
xlat
push
ret
push
ficoml
dec
xchg
inc
add
mov
lcall
test
pop
sbb
fs
repnz
ljmp
fidivrs
mov
icebp
vmread
je,pt
mov
push
sbb
dec
shll
and
enter
mov
xchg
ret
ljmp
dec
dec
imul
cmp
pop
mov
mov
dec
xchg
cmp
xchg
adc
cmc
jecxz
iret
bound
push
lcall
fcompl
and
pop
or
xor
into
add
gs
cwtl
push
call
fidivs
imull
mov
loopne
subb
aas
pop
xchg
sbb
cs
fistl
xchg
fimuls
std
adc
pop
iret
xor
xchg
mov
pop
cmp
ret
cmp
mov
fisubs
out
pop
mov
jo
aas
mov
push
ret
iret
mov
dec
mov
push
jecxz
adc
cmpsb
sbb
or
setnp
sbb
sarb
sahf
adc
sub
or
ficompl
aad
lds
fisubs
or
pop
xchg
xlat
add
mov
into
aad
mov
jl
pop
sub
pushf
mov
iret
lcall
fisttpl
mov
add
push
push
mov
inc
fistpll
push
sbbl
mov
sbb
push
outsb
call
or
push
sub
es
cmpsl
push
adc
mov
push
leave
or
jb
add
filds
mov
mov
add
into
cmp
or
cmp
sbb
pop
jecxz
outsb
sub
cmpsb
dec
add
ret
insb
scas
push
in
sbb
outsb
inc
pop
cs
sub
pop
movhps
into
xor
sbb
or
scas
sub
ja
mov
sbb
sub
jne
mov
insl
pop
jp
add
add
mov
mov
mov
fisubs
cs
ds
sub
xchg
push
aaa
fiaddl
ffree
xorb
mov
mov
push
dec
orb
mov
sub
xchg
pop
es
and
push
gs
scas
xchg
xor
loop
lcall
mov
nop
and
movsb
mov
les
or
sub
dec
hlt
rorb
es
mov
add
sub
dec
in
sbb
mov
lcall
out
stos
movsb
or
outsb
mov
pushf
add
xor
mov
mov
imul
enter
lret
in
out
push
xlat
mov
dec
ret
inc
mov
out
out
test
scas
pop
test
mov
push
mov
shlb
jbe
cmp
aad
sub
mov
out
rorb
push
xchg
xor
and
adc
xchg
push
xor
repz
mov
lret
cmc
xor
or
fisubrl
mov
jle
mov
jnp
push
push
xor
sbb
fisttpl
movsb
dec
hlt
push
xchg
mov
pop
cld
mov
mov
ret
mov
out
mov
sub
mov
xchg
mov
es
sbb
sub
aad
xchg
xchg
jo
push
jns
dec
fucomip
int3
stc
lods
sub
rclb
stc
sub
or
push
loop
pop
xor
pusha
fcomip
inc
push
inc
ss
stos
int3
mov
mov
cmpsb
push
jo
inc
adc
add
stos
ja,pt
dec
mov
pop
sbb
mov
faddl
test
push
xor
or
pop
pop
lods
dec
mov
daa
push
shlb
cmpsb
shl
dec
ds
xor
jl
or
lods
das
mov
je
xor
ret
mov
mov
outsb
clc
daa
sbb
not
or
push
andb
enter
fs
push
xor
lret
mov
or
int3
sbb
inc
cmp
or
adc
jno
add
add
mov
icebp
dec
push
into
mov
sub
out
aas
dec
mov
sbb
sbb
push
xchg
pop
xorb
mov
mov
push
mov
mov
adc
push
pushf
xchg
xlat
inc
mov
inc
xchg
pop
imul
jae
pop
inc
xor
into
out
mov
pop
popf
inc
sub
cltd
lods
adcb
sahf
xchg
idivl
scas
fbstp
push
sbb
sahf
mov
popf
lret
xchg
dec
cli
nop
leave
dec
int3
inc
ret
idivl
mov
push
pop
jecxz
test
popl
mov
test
mov
push
jae
in
in
add
push
add
dec
push
push
push
xchg
ds
push
orl
and
shl
cmp
insl
lods
xor
push
ds
sub
mov
mov
xlat
lods
xchg
dec
dec
adcl
fildl
gs
or
gs
push
mov
push
jl
cs
and
xchg
out
sbb
add
mov
gs
rcl
add
es
call
test
aam
fcom
push
popf
lcall
pop
push
dec
dec
xor
xchg
pop
loop
mov
mov
loopne
movsl
push
popf
push
inc
mov
notb
mov
xor
les
cmp
gs
sub
out
inc
js
mov
dec
ja
popa
adc
cmpsb
outsb
pop
repz
cltd
inc
movsl
popa
jge
cmp
push
je
popa
mov
fdivrs
popf
pushf
gs
repz
add
mov
jne
jns
popf
inc
js,pn
xor
inc
add
inc
mov
out
mov
fsubrs
repnz
test
out
cmpsb
fisubs
pop
push
gs
sub
nop
sahf
inc
insl
gs
stos
or
gs
sbb
push
fsubs
xchg
std
in
into
inc
lods
pop
and
movsl
push
fcoms
and
mov
inc
into
inc
mov
test
push
mov
mov
pop
es
stc
dec
push
lock
gs
jle
push
fmull
jle
push
in
mov
jmp
push
mov
push
mov
sarl
bound
and
mov
ds
loop
mov
scas
inc
jecxz
cmpsl
push
xchg
jmp
adc
inc
mov
mov
sbb
sub
sub
and
xor
fbld
ret
mov
ficomps
cld
mov
inc
aam
mov
scas
push
and
sahf
mov
idivb
pop
sbb
stos
add
out
push
ret
and
cmpsb
cmp
ficomps
mov
scas
hlt
mov
xor
xchg
leave
inc
mov
add
loope
xor
ljmp
hlt
outsb
sbb
mov
ds
sbbb
ss
mov
dec
sub
mov
mov
dec
mov
inc
fildl
iret
lcall
pop
fiadds
cmc
out
jmp
cld
jl
and
movl
xchg
fmulp
sbb
or
testb
roll
scas
push
call
into
loopne
pop
out
inc
ret
sahf
jmp
fcmovb
rclb
xlat
out
dec
mov
lahf
fistps
push
mov
or
ljmp
mov
and
outsb
fiaddl
mov
mov
fldt
pop
mov
dec
add
outsl
orb
ficompl
fcmovnbe
jge
bound
es
add
and
mov
in
popa
outsb
mov
dec
pop
inc
sub
xchg
ret
cmpsl
and
fisubrl
gs
jle
sahf
stc
ds
fstl
iret
ss
push
imul
shll
mov
scas
loop
jecxz
out
jg
fmulp
orb
loope
in
xchg
es
inc
sub
mov
fwait
cmp
or
add
sbb
cmp
imul
pop
mov
lds
lods
ss
pop
icebp
xor
xchg
add
mov
out
push
xchg
cmpsl
andb
adc
call
adc
data16
push
or
movsl
and
lods
inc
or
xor
movsl
or
enter
push
ret
insb
jno
stos
pop
xchg
insl
fdivr
jmp
je
mov
int3
push
rorl
push
sub
popfw
imul
rsm
mov
cltd
inc
fnsave
gs
push
fldt
adc
mov
xchg
push
inc
xchg
outsb
lds
inc
push
jp
andl
ss
cmp
dec
ss
stc
test
pop
ret
dec
push
cmp
adc
push
sub
sahf
mov
imul
push
aaa
into
fsubl
outsl
bound
addr16
pop
jecxz
add
adc
jl
fiadds
pop
ret
cmpsl
dec
jecxz
fwait
pop
sub
cmpsl
dec
mov
mov
push
inc
gs
mov
ds
mov
cs
xor
sahf
out
pop
adcb
push
or
orb
ret
jecxz
stos
mov
or
cmp
adc
out
xchg
and
mov
mov
loopne
mov
jns
or
jbe
fisttpl
loop
and
lcall
or
mov
mov
or
or
cmp
mov
adc
mov
ret
lret
inc
adc
mov
dec
dec
orl
outsb
in
add
pop
lods
xchg
mov
cmpsb
adc
push
je
faddp
outsb
into
xchg
add
jg
cmpsb
xchg
outsb
fistpl
push
add
xsavec
xor
pop
jge
cli
ds
jo
jns
dec
push
push
xlat
xchg
sbb
into
mov
push
sbb
jecxz
aam
push
mov
cmpsl
mov
sahf
out
lea
fisttps
stos
movb
cmpsb
dec
push
movsl
pop
cmpsl
loop
and
or
xlat
mov
jae
ljmp
xchg
sahf
sbb
sbb
mov
fstpt
test
ss
aad
xchg
mov
outsb
packsswb
dec
cmp
iret
mov
jne
mov
push
push
xlat
bound
ljmp
jb
imul
sbb
push
push
xchg
adc
inc
and
lcall
xor
sbb
mov
addw
cmpsb
and
pop
xchg
es
repnz
ds
jmp
ret
xor
rclb
cs
xor
into
out
xor
ljmp
push
clc
inc
mov
aas
pop
test
xchg
lret
sub
mov
rcl
cmc
jae
inc
out
xor
iret
jno
cmp
mov
hlt
mov
push
rcll
jnp
mov
add
ljmp
or
roll
addr16
mov
xchg
pop
xor
fisubrl
in
sub
out
call
mov
into
es
hlt
xlat
inc
sub
and
lret
mov
dec
stos
bound
cld
mov
leave
cmc
inc
out
mov
cwtl
hlt
scas
xlat
sahf
andb
sbb
into
push
fimuls
js
sbb
rcll
sub
addr16
hlt
push
fisubs
xchg
in
sub
push
loop
jno
negl
push
mov
mov
push
daa
movsb
in
xchg
pop
fidivrl
repnz
into
fucomi
xlat
gs
mov
shrl
ret
add
xchg
pop
push
inc
push
push
sbb
sbb
ficoms
lret
jne
std
xchg
mov
push
xchg
sub
in
pop
iret
cmpsb
dec
dec
or
inc
and
add
mov
xchg
mov
shrb
out
aas
stos
mov
out
out
mov
pop
iret
cs
aas
jns
ja
pop
pop
mov
mov
push
cmp
push
mov
shl
stos
inc
sarl
mov
fidivl
repz
jle
outsl
mov
rclb
pop
mov
subb
xlat
jl
fdivrl
outsb
shll
cs
mov
mov
sub
insl
outsb
add
push
cmpsb
imul
es
push
add
out
sbb
inc
fidivrs
push
jp
pop
mov
bound
ret
jbe
aad
sbb
mov
sbb
push
xlat
iret
xchg
lcall
adc
and
shll
push
xor
mov
out
mov
gs
push
cmp
imul
sbb
ret
ds
inc
fadd
scas
mov
cltd
gs
inc
stos
and
into
inc
je
mov
int3
es
or
scas
sub
iret
cmpsl
ret
pop
adc
lcall
mov
rorl
mov
ds
xor
cltd
cmp
cli
popf
push
cmp
scas
mov
xchg
jnp
out
mov
mov
jle
or
add
cmp
fisubl
pop
out
out
mov
cs
das
xlat
fnclex
into
jne
push
mov
add
sarl
out
push
jp
in
xchg
add
cld
sti
push
push
xchg
adc
test
mov
adc
shlb
cli
add
xor
lret
or
icebp
push
mov
mov
inc
mov
pop
xlat
xchg
and
cmpsb
inc
cmp
ret
fnstcw
std
mov
lods
mov
aas
rorb
gs
mov
jns
shrb
ret
mov
cmc
and
push
mov
jle
or
pop
cmc
cld
ret
push
jecxz
sar
inc
fists
cmp
into
dec
or
rol
rorb
sbb
cwtl
and
lods
add
cmpsb
mov
outsb
ljmp
add
pop
fisttps
loopne
xchg
ret
fisubl
scas
arpl
gs
sbb
pop
mov
es
sbb
fcomip
insl
outsb
iret
mov
lahf
and
pop
aas
in
jecxz
ret
ss
mov
sub
push
mov
in
push
mov
jbe
lods
add
xchg
xor
sbb
push
gs
aas
ds
mov
outsb
pop
mov
pop
outsb
add
mov
sub
fcmovnb
es
mov
rcll
sbb
push
add
sbb
mov
and
xchg
push
lcall
push
cmc
jo
mov
mov
mov
fisubrs
sbb
imul
ret
push
subb
mov
sub
stc
loop
push
push
bound
ljmp
hlt
outsl
mov
iret
mov
pop
jmp
push
enter
mov
dec
scas
jbe
inc
or
outsb
lcall
mov
jne
push
xor
sub
cld
cmp
mov
cld
std
xlat
ret
jne
xor
es
push
loop
movl
iret
xlat
pop
aas
xor
or
adc
es
into
into
stos
jbe
outsb
inc
sub
call
out
sbb
dec
sahf
inc
xlat
cmp
es
clc
xchg
mov
cmpsb
out
sbb
sub
or
data16
test
push
leave
jae
pop
mov
neg
fcmovnb
cmpsb
ret
bound
mov
lds
push
cmp
outsb
push
fdivp
push
sahf
adc
add
loop
dec
xor
xchg
mov
ret
es
inc
sbb
push
retw
jecxz
push
push
xor
push
pop
push
fs
cmp
stos
mov
xchg
add
fcmovnu
addl
pop
mov
fcomip
nop
outsb
inc
mov
and
movsb
mov
stos
and
dec
push
xor
mov
xor
daa
sbb
fiadds
mov
in
sbb
jg
mov
es
and
fcomip
add
sub
mov
test
cmpsb
shrl
dec
ret
mov
cmp
and
mov
iret
push
or
jle
in
es
push
push
xor
shl
dec
out
mov
mov
in
out
iret
ror
ds
movsl
fldt
adc
ss
ret
rcr
es
add
ds
and
push
mov
cmpsb
rorl
mov
cmpb
push
push
xchg
cmp
jo
and
mov
xchg
mov
das
into
xor
mov
sbb
lahf
jno
mov
pop
xor
push
cmp
test
jecxz
jge
out
cmpsl
dec
mov
jl
stos
bound
jbe
outsb
cli
in
sbb
jecxz
pop
ljmp
cs
iret
aam
idiv
loop
bound
mov
jle
les
enter
test
adc
out
loop
arpl
mov
adc
add
ret
je
push
outsb
subl
and
push
push
and
push
dec
out
and
stos
mov
cmp
pop
ss
push
adc
pop
adc
xorb
mov
daa
or
xchg
pop
adc
and
scas
mov
mov
fistpll
lret
push
ret
ljmp
cld
adc
or
and
shrl
sub
dec
scas
rep
mov
cs
inc
loope
ss
push
in
pop
rolb
lcall
push
cmpsb
clc
adcl
mov
outsl
cmpsb
adc
insl
fldt
adc
hlt
inc
push
or
mov
ret
mov
fimuls
pop
lret
in
mov
fiaddl
push
cmpsb
push
addr16
push
pop
scas
bound
mov
push
popa
ds
movnti
divl
fisttps
jecxz
fcompl
mov
and
popf
mov
ret
or
xchg
xlat
xchg
fcmovnbe
inc
outsb
mov
mov
into
scas
ret
sar
lret
add
sbb
lea
outsb
rcrb
or
sbb
loop
xlat
xor
lea
sub
adcl
lret
es
ret
adc
out
inc
push
xchg
in
cmpsl
ret
mov
shll
lock
cmp
ds
into
mov
push
sar
adc
push
push
stc
add
mov
mov
inc
inc
lahf
fmuls
aas
pop
mov
mov
pushf
repnz
push
sub
mov
pop
sbb
or
pop
mov
sub
mov
hlt
cmp
push
sbb
push
sahf
jns
mov
cmpsl
or
cwtl
imul
push
push
lds
mov
lret
movb
mov
testb
mov
or
cmpsl
subb
ffreep
mov
and
push
sub
mov
jno
xchg
or
inc
add
inc
and
and
adc
cmpsb
out
loop
mov
rcr
sarb
or
lcall
ja
movsb
mov
daa
mov
popa
jg
lahf
das
mov
push
clc
push
pop
jecxz
sub
jmp
outsb
ret
add
cwtl
dec
xchg
add
mov
sub
adc
cwtl
xor
cs
fs
lods
inc
or
ret
sbb
sub
mov
les
jo
cmp
mov
ljmp
pushf
jge
cmp
dec
xchg
sahf
ds
sbb
rcr
xchg
xchg
inc
pusha
mov
mov
sub
gs
mov
push
and
xor
mov
and
mov
cmp
jle
punpckhdq
mov
ret
sbb
in
sahf
and
pop
aam
add
cmc
mov
fcmovb
int3
es
mov
in
xchg
fists
inc
ss
cmp
aas
gs
aad
in
jmp
ss
test
pop
mov
jmp
xchg
sahf
ja
out
xchg
mov
aas
xchg
stos
adc
repnz
mov
xor
or
add
mov
out
jg
pop
adc
ret
gs
mov
mov
ljmp
xchg
xor
ficoms
loopne
dec
jne
push
push
xlat
cmpsb
mov
mov
mov
dec
cmpb
adc
sub
xchg
bound
shrb
test
test
mov
adc
mov
pushf
les
dec
or
mov
mov
movsl
push
xlat
push
andb
pusha
ret
add
push
ror
loop
mov
es
push
and
and
mov
stos
ret
inc
movsb
push
jecxz
ficomps
xchg
mov
and
add
jbe
xlat
loop
mov
and
add
jl
mov
ds
cmpl
sub
xorl
loopne
or
sbb
addr16
aaa
ja
fisubrl
inc
or
aas
sub
inc
dec
sahf
lret
out
lcall
pushf
outsb
mov
stos
adc
sub
pop
es
ficomps
mov
es
lahf
xchg
xor
mov
icebp
test
std
xchg
mov
xlat
mov
sub
cmovne
sahf
mov
adcb
lret
xor
xchg
cmp
or
cmpsl
stos
or
arpl
mov
out
xchg
mov
and
mov
xor
mov
cmpsl
out
lahf
sahf
xor
sub
imul
cmc
fistpll
test
les
mov
pop
cmovb
push
and
mov
dec
mov
jge
rolb
movsb
jo
push
jnp
fidivrs
lods
jecxz
sbb
push
sub
mov
or
jmp
cmc
test
fcmovnu
adc
mov
add
push
icebp
push
rcrl
lds
xchg
ret
pop
les
mov
imul
stos
ss
mov
ror
mov
dec
jae
sub
pop
xchg
test
mov
cmp
sbb
scas
stos
jge
push
shll
pop
pop
pusha
xor
jne
xchg
ljmp
scas
mov
cltd
ror
add
outsl
mov
push
jb
adc
add
xor
push
mov
or
pop
xor
pop
cwtl
stc
dec
and
fldl
js
mov
mov
ss
cmp
and
pop
xlat
mov
sbb
or
subb
mov
bound
lods
jbe
push
inc
dec
sub
sub
mov
lcall
mov
mov
push
mov
xchg
push
mov
rorl
mov
xchg
pop
popf
xchg
mov
addr16
fpatan
ret
jecxz
mov
inc
push
popa
jecxz
dec
es
mov
mov
mov
dec
fidivs
cmp
pop
outsl
scas
incb
adc
mov
ficompl
fisubs
data16
lahf
xor
xor
xchg
cmp
push
es
cld
cs
or
jecxz
rolb
push
ret
inc
pop
xchg
fidivs
aas
jle
mov
or
cmpsb
add
xor
ds
cmp
xchg
xchg
sahf
push
rorb
mov
jbe
out
xchg
loop
inc
call
ja
ret
pop
in
jecxz
mov
lret
rep
imul
push
sub
insb
cmp
cmp
and
push
or
shlb
pop
rcrb
lock
out
pop
movsl
xlat
or
and
rcll
ss
hlt
cmp
lret
enter
test
adc
jbe
pop
out
mov
in
rclb
mov
mov
xchg
mov
out
mull
inc
inc
enter
jp
inc
mov
pop
addr16
mov
addl
fmul
sbb
ss
cwtl
push
dec
pusha
imul
inc
lcall
je
fbstp
mov
nop
sub
cs
cmc
jne
jecxz
ss
fisubl
xlat
pop
ret
bound
mov
ljmp
sub
ds
xor
inc
mov
push
push
test
push
mov
push
loop
cmpsb
cltd
stc
sub
jmp
jbe
fcmovnbe
sub
mov
cmp
and
or
sbb
mov
add
iret
nop
mov
push
and
rclb
adc
lcall
and
icebp
stos
mov
inc
mov
sbb
test
andb
ds
push
mov
xor
inc
and
loop
test
lcall
cld
mov
sub
or
lahf
pop
or
pop
in
xchg
in
push
rcl
push
add
testb
cld
cmpsb
sub
addr16
test
aam
or
or
and
je
shll
outsl
push
je
stc
mov
ret
inc
cmpsl
push
jl
push
mov
fildl
imul
and
add
push
adc
mov
fiaddl
xchg
jg
push
loop
dec
mov
and
pop
loop
push
movsb
rorb
imul
add
stos
into
cmp
punpcklbw
not
pop
lcall
stos
sbb
scas
add
mov
inc
xchg
andb
fistpl
dec
xchg
adc
sub
nop
ret
lock
xchg
je
ret
jle
mov
cmp
test
xlat
cmp
push
or
push
loop
test
cs
add
sub
push
dec
mov
ret
ret
mov
xchg
rcrb
or
mov
mov
es
push
ss
mov
xchg
sbb
or
xchg
ljmp
add
ss
nop
lcall
adc
xchg
push
ljmp
fadds
ds
ret
mov
push
aas
ss
scas
repnz
lock
sub
inc
xor
dec
pop
adc
or
push
or
push
dec
mov
rolb
icebp
inc
into
fcmovb
jge
mov
mov
sub
mov
lret
mov
aad
iret
rcrb
or
sbb
imul
push
pusha
and
add
xchg
sub
mov
mov
pop
xor
scas
push
cltd
data16
cmpsl
mov
and
or
into
mov
loop
std
pop
or
enter
cmpsb
mov
ss
push
jbe
ljmp
pop
mov
sbb
mov
or
push
pop
outsb
adc
iret
test
mov
int
enter
adc
jne
ret
jbe
cs
cs
xor
mov
pop
add
push
add
fldcw
mov
pop
dec
inc
xchg
or
push
xchg
popf
ss
icebp
pop
sub
or
mov
pop
mov
test
lods
pop
add
es
sar
adc
ret
jbe
mov
mov
fbld
or
icebp
cmp
push
sti
lahf
fistpl
lahf
dec
loop
pop
gs
or
movsl
push
test
sbb
icebp
sub
ljmp
mov
outsl
fidivrl
stos
fsubl
fstl
xchg
xor
fcoml
shll
dec
scas
ret
cmpsb
enter
orb
imull
push
es
sbb
movsl
fistl
outsl
mov
jecxz
hlt
add
xchg
sub
mov
lcall
iret
pop
push
cwtl
push
cmp
cmpsl
aad
jb
mov
mov
scas
mov
mov
mov
or
ds
in
and
pop
mov
inc
push
lea
ss
dec
ljmp
int3
mov
jecxz
ds
es
xchg
popf
mov
movsl
cmp
xchg
xrelease
hlt
xchg
fisubs
mov
mov
je
imull
cmpl
ljmp
imul
dec
sbb
mov
into
call
inc
rorb
inc
je
push
ds
and
shll
fdivl
mov
dec
or
loop
cmp
stos
sbb
mov
push
jne
or
enter
adc
adc
mov
dec
sub
mov
xor
push
mov
dec
mov
xchg
mov
fcmovnb
daa
mov
and
sub
or
mov
mov
mov
add
ss
stos
jp
add
inc
xor
mov
fmul
sahf
mov
sub
push
es
xor
inc
loop
int
test
jp
pushf
pop
mov
jno
cld
sub
mov
movsb
rcrl
xchg
mov
roll
fists
in
out
push
lcall
pop
cli
pop
push
dec
and
lods
pushf
scas
icebp
cltd
gs
xchg
push
adc
sub
scas
mov
cmpsb
mov
adcl
rcl
sub
int
scas
or
cltd
xchg
repnz
dec
jbe
and
push
mov
cmpsl
ds
ss
cmp
movsl
jecxz
loop
xchg
lods
ret
daa
idiv
mov
push
ljmp
pop
push
cs
and
sbb
rcrb
adc
jp
sub
dec
lcall
add
push
dec
repnz
mov
push
sahf
out
or
bound
push
xor
pop
add
stos
jecxz
stos
movsl
lods
and
xlat
add
sahf
and
sbb
movsb
dec
es
fcmovnb
dec
fbstp
ret
inc
dec
push
shl
sub
cmpsb
mov
mov
cmp
sbb
add
test
fisttps
push
xchg
imul
scas
push
scas
xor
add
push
push
int3
add
es
or
divb
mov
pop
aad
dec
sbb
lock
mov
adc
rcll
test
out
ret
into
sub
rcll
stos
mov
iret
mov
or
dec
std
pushf
push
mov
inc
lods
fildl
push
stos
mov
test
fcmovne
sbb
dec
mov
outsb
jecxz
cmpsb
xchg
jle
xor
sub
dec
adc
hlt
inc
mov
and
iret
ret
sub
dec
iret
scas
pop
insl
or
fisubl
and
xchg
ljmp
mov
xor
dec
add
mov
push
push
loope
mov
push
mov
ret
mov
sbb
add
pushl
shll
mov
pop
bndldx
mov
pop
mov
ret
movsb
fistps
push
sub
outsl
aas
push
push
mov
iret
mov
shrb
and
mov
lcall
ret
enter
mov
filds
daa
andl
mov
fisubrs
je
and
xchg
cmp
repz
mov
dec
jg
pop
xchg
gs
mov
pop
pop
dec
mov
ret
xor
lods
mov
dec
sbb
lock
dec
bswap
push
mov
fidivs
xchg
or
lret
inc
cmpsb
sysenter
jecxz
daa
sahf
pop
lcall
push
shl
jg
int
mov
movl
das
cltd
push
adc
jecxz
inc
iret
icebp
fbld
cmpsb
sbb
inc
sub
or
xchg
lahf
push
div
xor
jge
fildll
decb
loop
add
mov
mov
lea
jg
inc
movsl
cltd
add
into
or
pushf
xor
mov
xor
sbb
push
ret
mov
inc
cmp
subb
out
jmp
inc
or
and
sbb
mov
inc
fnclex
inc
push
adc
mov
pop
mov
mov
cmpsb
jecxz
std
pop
gs
enter
out
loop
addr16
sahf
xor
stos
pop
jae
pushf
mov
inc
adc
adcl
jns
inc
push
xor
test
clc
or
add
ret
je
jmp
mov
or
pusha
ljmp
or
xlat
mov
sub
xchg
mov
push
jecxz
xor
jmp
rcrl
push
into
cmp
out
inc
je
rorl
push
addr16
test
pop
xor
jae
mov
push
aas
lcall
cvttps2pi
shll
jo
inc
fistl
xor
fs
mov
popf
xchg
cmp
in
pop
add
xchg
ss
es
ret
push
mov
call
sbb
jo
lret
dec
dec
scas
aaa
mov
fdivl
cli
and
stos
pop
mov
xchg
loop
iret
bound
xchg
insb
into
ljmp
sbb
sbb
mov
xchg
jmp
loop
mov
dec
frstor
or
int3
xor
push
xchg
mov
and
aaa
push
add
mov
loop
dec
or
lds
fisubrs
sub
sub
mov
push
movsb
aad
pop
pop
push
lcall
andl
and
rclb
cwtl
cmp
popa
ficoms
xlat
cmp
test
aad
into
xchg
mov
pusha
sbb
mov
cmp
int3
xor
ljmp
cs
data16
jnp
shll
mov
loop
mov
fdivrl
inc
ds
int
dec
push
imul
adc
mov
push
fistpl
int
mov
ret
sbb
js
enter
cmpb
stos
repnz
sub
pop
outsb
cmpsl
or
xchg
push
xchg
cmpsb
push
sahf
in
jecxz
cli
and
xchg
push
jnp
aam
std
mov
call
mov
gs
fidivs
sub
adc
out
or
sub
enter
jle
and
inc
xchg
push
or
rorb
adc
fbld
xor
into
shll
gs
fbstp
lds
pop
xor
fisttps
mov
gs
mov
push
imul
sub
decb
inc
xchg
and
imul
mov
popa
mov
push
addr16
mov
data16
cmp
sbb
inc
xchg
imul
es
jg
sbb
cmp
fldt
lcall
das
and
or
push
push
xor
mov
or
gs
gs
mov
gs
pop
xor
pop
push
push
into
mov
aad
jmp
push
push
or
xchg
je
rolb
ljmp
repnz
xlat
xchg
outsb
inc
or
test
mov
shlb
push
sub
adc
pop
push
inc
rcrb
imul
inc
jl
and
iret
lcall
ds
orb
dec
lret
cwtl
sub
bound
xorl
pop
xor
xlat
push
push
fmul
pop
and
in
jno
xor
xchg
pop
cmp
js
pop
adc
gs
das
roll
push
inc
lods
push
or
sub
lcall
rcll
push
xlat
enter
dec
fcmovu
push
add
push
mov
sahf
je
cmpsl
stos
xchg
sti
add
push
push
mov
ljmp
in
add
mov
and
std
adcb
mov
pop
and
xchg
data16
lret
loop
xchg
xchg
cmp
fidivs
xchg
stos
imul
sahf
push
xchg
sbbb
pop
dec
cmp
cmp
push
mov
push
sub
stos
jae,pt
cmp
lock
mov
sahf
imul
bnd
xlat
xor
sbb
subb
inc
dec
add
lahf
imul
pop
push
or
sub
pop
cmpb
jno
rolb
push
shl
scas
push
ret
lahf
out
lea
cs
std
push
cmp
pop
push
lcall
mov
sbb
shlb
std
imulb
xchg
mov
pop
mov
mov
mull
fldt
ror
mov
sbb
hlt
adc
ret
aad
xor
inc
xor
out
mov
xlat
bound
repz
push
xor
ss
mov
outsb
shlb
sahf
jle
aad
pushl
sub
mov
push
fs
mov
or
push
or
adc
sub
mov
sbb
leave
mov
inc
xchg
bound
cmp
pop
cmp
cwtl
aaa
rorb
or
mov
repz
daa
xchg
loop
das
out
pop
into
mov
or
push
imul
mov
ja
pop
add
mov
ret
iret
lods
add
mov
into
mull
in
inc
ret
mov
jecxz
cmp
mov
xorl
bound
pop
andl
pop
insb
or
pop
and
push
sbb
and
mov
xchg
add
mov
dec
mov
sbb
ljmp
imul
xchg
push
adc
jp
sarl
ret
ret
hlt
mov
or
fdivrp
inc
sbb
loopne
ficomps
inc
sub
xchg
mov
mov
into
and
imul
repnz
and
add
mov
cmp
sbb
nop
test
andb
xor
xlat
and
ret
in
mov
bound
cmp
into
push
cmpb
sub
psubsb
bound
in
push
out
jae
mov
ret
mov
jbe
mov
sbb
cs
xor
outsl
mov
scas
mov
testb
loope
imul
push
andl
push
fstpt
pop
dec
pslld
testl
cmp
add
hlt
call
or
subb
insb
fs
fisubrs
push
addb
out
clc
shl
pusha
push
insl
pop
call
loopne
loopne
xchg
pop
jno
pop
inc
rol
or
pop
hlt
ret
ss
mov
daa
mov
bswap
es
fcmovbe
lcall
and
ds
outsb
ss
hlt
pop
outsb
and
fidivl
icebp
sbb
sahf
inc
adc
or
jmp
xor
mov
push
cmpsb
and
inc
fcomip
mov
jmp
into
ss
and
ljmp
negb
mov
inc
mov
adc
cmpsl
arpl
and
mov
push
gs
es
sub
insb
inc
shl
jns
es
hlt
and
rol
push
icebp
div
ljmp
pop
and
enter
mov
scas
dec
fidivl
ds
jmp
cmp
cs
adc
shrb
lret
mov
or
or
cmpsb
imul
mov
mov
inc
stos
sub
cmpsb
adc
aas
xchg
or
in
jae
fiadds
test
mov
loop
cmp
into
aas
push
dec
rorb
test
and
sub
xlat
or
mov
push
mov
dec
dec
mov
xchg
add
mov
inc
pop
add
push
orb
pop
mov
mov
mulb
mov
pop
lcall
loop
icebp
dec
or
push
and
inc
push
and
addr16
cld
push
push
shlb
hlt
ret
xlat
mov
pushf
aad
and
sub
fcmovbe
into
add
imul
lea
sub
and
ret
xor
aad
mov
mov
orb
cmc
xchg
mov
movsl
xchg
ret
xchg
jecxz
stos
es
pop
adc
bound
pop
mov
sbb
cmp
xchg
xor
adc
sbb
cli
pop
aas
mov
cmovle
or
mov
cmp
das
add
arpl
lods
mov
cmpsb
xlat
pop
ds
or
adc
stos
mov
out
je
sub
ss
shlb
loopne
pop
push
xchg
push
out
pop
ljmp
popa
stos
mov
or
push
gs
cld
mov
or
rorb
outsl
inc
jl,pn
or
pop
xchg
ret
sahf
adcb
mov
mov
shlb
into
mov
movl
imul
adc
xchg
inc
sbb
pushf
std
sbb
aas
adc
cs
cs
push
jo
mov
incb
xchg
mov
ss
pop
xchg
loopw
jo
fstpl
mov
xchg
hlt
dec
pop
cmp
test
inc
es
idivl
pop
outsb
lods
movsbl
push
mov
mov
xorb
data16
xchg
push
jecxz
movb
add
sbb
pop
cmp
jl
mov
and
mov
push
cmc
xchg
xchg
mov
jg
push
jecxz
xlat
push
add
mov
push
testl
inc
xor
mov
mov
iret
mov
ljmp
add
pop
clc
xor
mov
cmp
aas
ret
in
movb
add
loop
stc
inc
in
orl
cmp
and
cmova
mov
negb
shll
addr16
pop
or
xchg
jb
fiadds
sub
fists
ret
inc
lahf
mov
jb
pop
dec
fsubp
xchg
xchg
mov
mov
outsb
xor
push
xchg
sahf
retw
and
ret
or
cmp
insb
loopne
aaa
push
aad
repnz
jecxz
in
pmaxub
cmp
es
aad
ljmp
sarb
push
adc
sahf
or
mov
outsb
sbb
je
push
inc
or
or
dec
jb
jecxz
rcll
sbb
and
xchg
pushw
addr16
mov
fdivp
push
push
pop
scas
xchg
sbb
push
je
imul
xlat
cmp
iret
lcall
ret
dec
sbb
cmp
std
and
nop
mov
test
mov
push
pop
jg
or
push
or
and
dec
jecxz
push
fbstp
inc
mov
imul
mov
cmp
or
adcb
jmp
mov
idivb
sub
push
nop
fmull
sub
pop
or
adc
xor
push
xchg
loop
ss
adc
cmp
inc
fdivp
jge
ss
hlt
xchg
mov
jecxz
aad
in
arpl
push
mov
and
sub
daa
loop
cli
bound
in
out
dec
xchg
xchg
mov
mov
data16
mov
mov
aam
cmc
adc
ljmp
outsb
jae
fiaddl
lds
pop
loop
fbld
ds
insl
scas
pop
or
sbb
nop
outsl
sahf
movl
xor
fmulp
xchg
inc
sbb
test
ficompl
sbb
test
mov
mov
rcll
scas
dec
pop
cld
rcll
push
push
pop
sbb
testb
add
push
in
shrb
aad
dec
arpl
out
jle
and
xor
rcrl
jo
push
mov
fbstp
addr16
sahf
lcall
jae
loop,pt
and
scas
mov
cmp
cmp
dec
mov
dec
mov
mov
cmpsl
cmpb
repz
jmp
adc
xchg
lahf
pop
xchg
cmp
or
mov
xchg
stos
add
iret
xchg
xor
ds
sub
mov
ret
and
cmpb
fildl
leave
jecxz
les
sbb
out
jns
sahf
push
dec
sbbb
xchg
mov
imul
mov
scas
mov
pop
jecxz
sub
adc
xchg
movl
mov
sbb
inc
add
or
negl
mov
mov
ds
daa
or
cmp
ljmp
out
subb
inc
or
inc
xlat
pushf
add
nop
push
cmp
lcall
mov
pop
dec
adc
stc
mov
add
mov
test
pusha
pop
jae
jecxz
data16
pop
push
sti
dec
loopne
cs
mov
data16
add
adc
cs
mov
inc
push
cmc
in
ret
out
xor
movsb
mov
into
cmp
scas
inc
cmc
sbb
in
movsb
inc
addb
rolb
mov
ja
ljmp
push
ret
and
push
cs
nop
iret
shrb
xchg
push
mov
ret
xlat
adc
and
xchg
imul
sbb
mov
mov
dec
add
ds
mov
out
add
out
jbe
loop
mov
je
stos
xorb
rcrl
xchg
lret
fs
mov
ss
fldt
or
imul
mov
pop
loope
mov
or
push
fimuls
lds
lcall
inc
mov
div
dec
ss
es
ljmp
cmp
adc
mov
xor
push
mov
jbe
mov
stos
dec
dec
xor
ljmp
cs
xchg
push
push
fiadds
sub
cmc
sahf
das
and
dec
outsb
jle
pop
rcrb
add
sbb
stos
mov
mov
xor
outsb
stos
movsb
sub
mov
xchg
loope
push
sub
pop
sbb
inc
iret
push
mov
out
dec
mov
ss
xor
jns
adc
mov
cmp
mov
and
andb
mov
inc
rol
mov
ficoms
mov
pop
in
rcll
rcr
or
push
scas
js
fwait
pop
inc
aaa
incb
sub
cwtl
ljmp
mov
pop
aam
int
xor
rolb
mov
or
notl
clc
or
pop
shll
jbe
mov
jbe
movb
push
test
xor
pop
ds
xor
divb
ds
es
data16
xlat
push
push
and
jne
mov
enter
mov
sbb
mov
adc
lcall
sbb
jnp
inc
stos
push
xor
fcompl
rcr
loopne
ret
xchg
adc
xor
insl
sbbb
out
test
movsl
dec
mov
jle
push
push
pop
push
cltd
fildl
dec
cmp
lods
add
lcall
push
dec
icebp
scas
dec
xchg
das
out
push
mov
lahf
ljmp
ret
xchg
jle
in
inc
sbb
xchg
das
ret
mov
push
cmp
mov
jg
fistps
push
movsl
dec
add
inc
fwait
xchg
xlat
into
mov
lcall
or
adcb
out
push
ss
sub
ss
push
mov
adc
sub
mov
lahf
std
test
scas
rorb
jecxz
pop
fs
jp
and
and
jecxz
mov
sbb
xchg
fisubs
adc
je
mov
adc
sub
pop
stos
loope
fiadds
mov
xchg
add
sub
ja
dec
xchg
mov
inc
push
fisttps
es
and
cs
rcll
arpl
pushf
sub
stc
mov
ficoms
sub
cmpsb
ljmp
pop
aas
cld
adc
push
enter
pop
and
sbb
sub
or
jecxz
pop
pop
pop
jg
dec
ss
sub
outsl
dec
je
out
test
mov
loop
cmpsb
sbb
or
aas
es
in
and
loop
pop
dec
loop
push
test
repz
push
and
shrb
lea
pop
jb
add
push
lahf
mov
xor
inc
ficompl
std
add
cmpsb
mov
gs
data16
in
sti
mov
shl
movsb
out
aad
and
xchg
pop
inc
dec
cmp
loop
das
in
xchg
test
and
movsl
inc
hlt
mov
cmp
add
xchg
fists
adc
movsb
leave
inc
scas
sbb
xor
push
in
lea
bound
mov
pop
iret
aad
mov
pop
shrb
mov
mov
add
lret
mov
stos
dec
mov
xlat
es
adc
gs
mov
xchg
xchg
repz
jge
mov
ret
stos
nop
jecxz
cmc
insb
rcll
mov
sbb
in
push
scas
jmp
inc
cld
pop
xchg
fldt
loope
lret
decl
pop
pop
cmp
repnz
enter
aam
and
fcmovu
setns
je
int3
cs
push
in
sbb
stos
mov
xchg
addr16
mov
test
pop
pop
dec
sbb
mov
pop
movsl
inc
ret
test
push
xor
pop
mov
pop
mov
movb
mov
mov
and
sbb
aad
or
out
mov
mov
xchg
xchg
push
dec
into
pop
add
hlt
cmpsb
push
loop
push
andl
lcall
push
pop
mov
sbb
pop
xor
and
push
es
cmpsl
add
fildll
add
gs
dec
sbb
cmp
scas
ss
mov
adc
mov
mov
ss
mov
imul
jmp
jg
loope
dec
mov
loopne
xor
outsb
xor
push
es
mov
xlat
iret
xchg
mov
into
pop
es
aas
dec
rolb
jecxz
cmpb
cmovg
mov
jb
repz
aaa
pop
push
gs
xchg
into
push
loopne
jecxz
mov
mov
fimuls
cmp
push
into
rclb
inc
xor
xor
push
cmp
stos
xchg
dec
insl
add
pop
mov
push
or
rcrb
cwtl
push
loope
es
xchg
jae
cs
mov
fisubrl
mov
stos
imul
mov
push
xchg
stos
xchg
xchg
rol
es
mov
test
add
sbb
out
fiaddl
in
mov
adcl
stos
cmpsl
fidivs
sti
xchg
out
lods
or
cmpsb
ret
test
jle
subl
push
push
bound
cli
je
mov
adcb
and
mov
ret
mov
mov
loop
ret
pop
xor
cs
pop
out
cmc
sbb
repz
ret
lcall
icebp
add
ljmp
in
ret
int3
push
dec
inc
bound
dec
adc
sbb
mov
cmp
pop
push
xor
jecxz
hlt
int3
rcrb
jne
mov
es
and
inc
or
les
ret
ret
loop
les
gs
ret
aaa
inc
test
fidivl
out
jecxz
fistl
inc
pop
in
push
rorl
cmpsb
xlat
addr16
pushf
xchg
sbb
lcall
bound
jb
mov
es
bswap
ficoml
mov
sbb
mov
outsb
ret
scas
inc
into
mov
mov
adc
fcmovnbe
bound
xor
mov
ficoml
call
add
faddl
cld
sbb
mov
in
leave
lods
cmpsb
gs
mov
or
mov
subb
and
dec
mov
xchg
xchg
pop
stos
stc
or
outsb
loop
mov
add
dec
aas
or
push
mov
mov
imul
aad
push
ret
repnz
test
mov
icebp
popf
into
lret
cmpsl
xor
sbb
inc
imul
outsl
ret
cmpsb
xor
aam
sub
mov
dec
inc
cmpsb
pop
push
std
fstpt
cmp
cmp
and
mov
aas
ss
fldt
aas
mov
sub
sbb
xor
ss
sub
mov
ret
adc
not
xorb
xor
out
fimuls
pop
mov
mov
or
mov
jecxz
push
pop
pop
hlt
imul
fcoms
dec
gs
dec
fdivrs
in
cltd
sbb
push
cmpsb
ret
add
lret
sbb
push
lock
imul
iret
xchg
ret
pop
xchg
ljmp
add
in
adc
bound
and
mov
pop
ljmp
pop
xlat
or
iret
mov
imul
jne
push
aad
aad
xor
push
sahf
inc
jle
dec
ret
pop
punpckhbw
mov
or
dec
orb
mov
fidivl
fldt
pop
cmpsb
lret
les
lahf
xor
mov
fs
scas
mulb
cmp
dec
sbb
add
xchg
xlat
or
dec
push
andl
mov
mov
push
aam
fldt
in
repz
pop
xchg
mov
add
jecxz
sahf
and
adcb
push
sub
xchg
dec
pop
lds
ds
sbbb
push
daa
sahf
out
lods
shll
cwtl
call
mov
cmpsl
xlat
adc
adc
jge
mov
addr16
jg
scas
or
je
mov
ss
shll
push
mov
inc
mov
mov
fisubrs
int3
push
jecxz
adc
inc
mov
or
scas
ja
ljmp
cmp
mov
lcall
gs
outsl
xchg
or
dec
lahf
xchg
jmp
dec
add
mov
ss
xchg
rcrl
pop
fcmove
ljmp
outsb
ljmp
adcb
lret
fisubrs
nop
addl
mov
xchg
les
dec
xchg
mov
mov
pop
sbb
mov
push
bound
xor
rolb
sbb
push
xor
pop
movsl
es
xlat
lock
es
and
jne
mov
subl
add
stos
ja
adc
push
push
fmuls
and
into
mov
inc
mov
push
mov
xor
pop
movsl
xlat
cmpsl
shll
fisttpl
mov
inc
sub
loop
fsubs
pop
push
outsb
push
ds
push
sub
es
mov
ss
dec
gs
dec
mulb
mov
adc
jg
lret
dec
sbb
mov
cmpsb
mov
push
ret
hlt
and
dec
ret
xchg
aad
jae
mov
cmpsb
add
pop
into
xor
outsb
negl
bound
dec
rol
add
into
je
push
push
xor
push
iret
cmp
push
push
xchg
cltd
xor
cmp
loopne
mov
adcb
dec
adc
pop
sahf
pop
sti
fisubrl
minss
and
push
ss
nop
out
idivl
xor
std
push
jae
add
xchg
outsb
data16
shll
or
push
jbe
mov
jle
in
xor
mov
test
xchg
bound
mov
mov
shlb
mov
dec
je
inc
pop
add
into
rcl
jp
add
fildll
sub
js
lods
xlat
push
rorb
mov
ljmp
ror
pop
dec
mov
mov
out
dec
and
mov
lret
rorl
xor
xor
int3
xchg
es
push
jecxz
jo
pop
or
imul
add
inc
mov
inc
rorb
cmpsb
popf
lret
or
subb
jb
mov
aad
xchg
sbb
rorl
or
scas
ret
ja
mov
sbb
jno
mov
adcb
sbb
fisttpl
sub
mov
xchg
test
cmp
mov
inc
pop
mov
sub
out
pop
jge
aad
cmp
or
cltd
push
cmp
repz
in
sahf
adc
lahf
stos
cmp
add
push
mov
dec
sbb
xor
stc
adc
fcmovnbe
xchg
outsb
mov
dec
sbb
lods
sub
xchg
and
fiadds
fsubs
shll
mov
into
mov
inc
imul
stos
inc
fsub
das
hlt
push
mov
push
mov
jle
xchg
mov
loope
sub
mov
xlat
loop
xlat
jge
out
out
xchg
mov
mov
fidivs
adc
push
jecxz
xor
cmpsb
xlat
scas
xorl
into
das
pop
sbb
repz
imul
scas
sub
push
xchg
xlat
fbstp
bound
push
mov
cs
mov
xlat
ds
push
rcrl
aas
icebp
push
mov
ret
dec
fcomip
xchg
xchg
mov
mov
bnd
mov
xor
hlt
sub
pop
lret
or
cmp
xlat
mov
push
xlat
sbb
fcmovnu
ret
repz
dec
pop
inc
outsl
push
gs
adc
push
add
jbe,pt
push
in
sahf
add
mov
add
outsb
in
inc
aas
jbe
jp
aam
adc
lcall
push
scas
hlt
xchg
data16
xchg
testl
iret
pop
fucomi
push
ds
add
jbe
xlat
xchg
data16
lahf
adc
jecxz
mov
inc
jecxz
scas
popf
add
movsl
push
sbbl
adc
cmp
aaa
aam
push
mov
mov
test
ds
loope
cmpsl
sti
repz
add
sub
data16
rorb
mov
sub
and
and
mov
divl
mov
mov
xchg
cmpsb
je
sahf
sbb
xchg
push
jb
push
lcall
and
dec
iret
mov
lcall
mov
mov
xor
jne
mov
aam
mov
inc
dec
negl
sahf
jne
inc
lret
cli
mov
int3
pop
push
iret
outsb
mov
push
icebp
hlt
test
inc
ret
lods
lods
and
inc
sahf
shll
mov
pop
fcmovb
mov
and
add
ss
cmp
inc
mov
cmpsl
jb
mov
stos
xchg
ljmp
cmpsb
xchg
jmp
cmp
mov
out
pop
gs
sahf
pop
in
sub
add
and
push
popa
or
pop
add
ljmp
push
fdivr
or
mov
ss
xchg
add
pop
scas
mov
push
jl
popf
lods
dec
dec
test
adc
cs
adc
in
addl
and
cs
lcall
mov
stc
mov
nop
rcr
stos
int
mov
pop
inc
xchg
add
cmp
push
shll
daa
aaa
mov
inc
xor
and
sub
ljmp
mov
les
or
push
repz
lahf
xlat
dec
xchg
aas
xchg
sub
add
ret
and
inc
sarb
cwtl
sbb
sbbb
inc
mov
xor
shlb
sbb
dec
add
or
sarb
mov
popa
xchg
xorb
divl
mov
mov
pop
gs
or
inc
lretw
xlat
inc
sub
jle
in
stos
cmp
push
xchg
jmp
ljmp
adc
ret
inc
ret
cmp
bound
jmp
iret
repz
outsb
je
xor
jecxz
cmp
ficoml
fs
aad
out
repnz
push
inc
push
xor
imul
es
jno
xchg
ds
jecxz
xchg
mov
mov
rorb
cli
xchg
lcall
hlt
ss
mov
push
test
xor
push
push
stos
cwtl
mov
push
push
stos
movsb
data16
push
mov
fidivrs
add
pop
scas
imul
mov
cld
sub
push
fdivrp
lcall
mov
or
leave
xchg
paddd
push
flds
lcall
iret
or
mov
nop
push
imul
sub
push
cmp
stos
mull
mov
pop
out
out
push
sub
jae
dec
ds
cmp
mov
neg
shl
sahf
out
and
mov
xchg
ret
xchg
xchg
inc
mov
aam
push
add
ja
mov
push
xchg
in
pop
mov
cs
inc
loop
ljmp
pop
and
mov
cmp
cmpsb
insl
fdiv
es
fisubrs
repnz
cmpsl
shlb
into
lahf
outsb
mov
mov
cltd
adc
mov
jns
sbb
ficoml
push
inc
sub
xchg
shlb
and
out
mov
ret
test
add
bound
mov
or
outsb
inc
sbb
lcall
pop
push
push
mov
ss
incb
dec
push
ret
xchg
iret
or
rorl
xor
shl
cmpsb
iret
jne
push
mov
cwtl
cld
xor
or
mov
or
xor
sub
pop
push
das
clc
cmpsl
xor
in
ficoms
mov
add
outsb
sub
je
and
mulb
in
shlb
cmp
xchg
fiadds
push
or
aas
pop
ss
mov
pop
stos
pop
dec
push
inc
loope
into
mov
mov
cmp
adc
xchg
push
push
test
mov
in
sub
pop
xorl
or
inc
fisttps
or
testb
ret
mov
jecxz
jge
push
pop
xor
and
xchg
inc
dec
cmp
inc
xchg
push
imul
out
pop
lods
jl
ret
in
fldt
fcmove
push
pop
iret
xchg
push
ds
or
mov
sbb
adc
push
xor
enter
fldt
or
pop
sub
ljmp
mov
mov
movsb
aad
enter
push
push
test
ret
ffreep
lods
push
mov
mov
movl
mov
ljmp
add
loop
adc
dec
or
jbe
sub
out
hlt
pop
xchg
xchg
mov
push
sti
repz
sbb
fidivs
push
fcmovb
mov
ja
jecxz
stos
bound
push
aas
sbb
mov
imul
pop
push
pop
shl
icebp
cmp
pop
pop
ret
jae
repz
cmp
les
push
jae
call
icebp
test
mov
add
or
aam
push
xchg
ds
in
or
push
fsubl
aam
fistpl
out
mov
popf
push
in
stos
add
shll
mov
fistpll
fildl
ds
dec
mov
sub
mov
ss
push
mov
es
in
or
movsb
jns
fcmovu
jle
mov
dec
call
fwait
mov
mov
xchg
montmul
cmpsb
inc
ljmp
push
fst
sbb
stos
mov
mov
sahf
mov
dec
or
fsub
dec
mov
fdiv
mov
xchg
outsb
ljmp
iret
clc
xlat
and
xchg
push
cmpsb
push
pop
pop
push
mov
push
sbb
fucomip
mov
mov
jne
sbb
dec
xlat
test
xchg
rolb
inc
iret
inc
cld
push
push
mov
inc
add
jnp
jno
adc
or
cmc
mov
lock
lock
lret
fisubrs
fidivl
cmpb
dec
or
clts
xchg
cmpsb
mov
scas
mov
push
xchg
scas
push
loop
fcom
out
sub
dec
enter
outsb
scas
out
jne
in
mov
sbb
mov
and
mov
pop
mov
pop
fisttpl
xchg
stos
and
mov
aaa
test
mov
mov
je
mov
sub
jne
pop
fisttpl
xchg
cltd
insl
lods
push
push
nop
push
out
fisubl
mov
push
pusha
jecxz
stc
push
add
push
scas
outsb
push
adc
xlat
mov
iret
mov
push
add
dec
scas
xlat
jno
mov
dec
ret
or
shll
dec
rcr
sub
mov
xchg
mov
dec
mov
into
sub
bound
jle
jne
xchg
data16
push
jge
ret
add
mov
ljmp
adc
mov
dec
stos
test
push
mov
and
pop
or
sub
cmp
jo
cs
push
jl
pop
sahf
adc
cmpsb
rolb
mov
rcr
or
and
aam
cmpsl
xchg
scas
int
out
sub
cli
inc
mov
stos
ljmp
push
push
and
pop
sbb
ret
mov
popf
jecxz
mov
mov
mov
adc
mov
xchg
sahf
or
sbb
mov
push
inc
inc
xchg
insl
rclb
xchg
inc
sbb
inc
mov
outsb
xchg
mov
loope
into
mov
mov
sarb
mov
mov
push
rcrl
pop
pop
std
sub
pop
push
ss
arpl
and
mov
mov
add
rorb
xlat
pop
mov
cwtl
aaa
mov
sahf
stos
into
mov
sub
lret
pop
subb
jb
and
je
pop
inc
add
sbb
fisubs
movsb
sbb
sbb
jg
pop
xchg
xchg
xchg
mov
sahf
sar
lods
xor
and
fcmovbe
sbb
loope
adc
sahf
push
pop
cltd
mov
subl
push
mov
xchg
push
icebp
sub
div
and
cmpl
mov
cld
je
pop
fidivs
pop
stos
mov
jecxz
mov
and
pop
imul
xor
out
cmp
shr
lcall
cmpsb
push
ret
cmovge
dec
pusha
sbb
xchg
xchg
push
dec
push
mov
lods
ss
test
arpl
push
sub
ss
loop
cmp
mov
and
dec
lcall
fstpt
or
ss
xchg
push
les
in
sbb
pop
push
cmp
into
xchg
jecxz
out
into
pop
jmp
sar
lret
mov
xor
mov
dec
into
adc
xchg
loop
popa
cmp
push
mov
fisubs
pop
push
hlt
fildll
xlat
outsb
scas
dec
test
ss
dec
stos
cld
daa
jge
sahf
add
or
lret
inc
push
cmp
aas
pop
adc
ljmp
mov
or
or
or
popa
sub
adc
cwtl
xchg
dec
mov
pop
xor
ficomps
iret
ds
rcl
xchg
xchg
xchg
push
push
gs
push
push
hlt
out
or
inc
sbb
lcall
fcmovnbe
xchg
mov
xchg
cmpsb
ret
shl
cmp
iret
adc
mov
inc
and
xlat
ret
mov
sbb
jecxz
mov
mov
mov
and
in
jae
fistl
cmpsb
fildll
mov
add
lcall
test
mov
subb
xlat
pop
push
or
pop
xor
and
out
divb
adc
ja
push
sub
es
xor
pop
repz
jle
adc
test
inc
mov
push
pop
int3
push
aad
sbb
ret
push
push
leave
orb
push
inc
lods
push
aas
mov
lcall
inc
dec
lcall
pop
aam
lret
push
mov
add
in
push
xchg
add
es
sahf
lret
and
pop
jo
clc
and
sbb
cmp
push
push
out
push
scas
xchg
add
adc
or
lret
xchg
stos
fstpt
inc
mov
sbb
stos
or
push
mov
xchg
and
adc
ds
incl
sbb
cmc
dec
mov
pop
shlb
xor
ds
jno
dec
dec
lock
cmp
mov
mov
outsb
and
push
das
decl
daa
mov
cltd
push
push
or
or
cmp
push
pop
mov
sbb
push
sub
push
dec
jno
lret
cs
mov
xor
lods
imul
add
inc
pop
push
std
pop
mov
stos
ret
sub
jbe
ret
lcall
call
outsl
ds
mov
inc
sahf
stos
daa
jp
ds
cmpps
mov
mov
mov
setle
mov
push
mov
scas
aad
pop
xor
jne
push
push
sub
xorb
and
sub
xchg
mul
mov
inc
into
sub
cmp
pop
mov
std
add
imul
jecxz
int
sbb
add
mov
shlb
lret
adc
ret
cmpb
sub
cmc
sbb
dec
ljmp
mov
iret
mov
inc
xor
xchg
lods
gs
cmp
pop
add
jecxz
sti
jne
ficomps
into
add
adc
mov
fistps
add
xchg
jae
rorl
icebp
adc
cli
scas
loop
xor
pushf
pop
ds
imul
mov
lcall
idiv
pop
and
lahf
pop
and
movsb
loope
sub
das
test
xchg
cmp
cmpsb
aam
into
mov
ljmp
ret
ret
push
adc
mov
and
mov
xor
cli
add
sub
loop
sbb
movsl
testb
mov
mov
sub
and
movsl
mov
pop
ljmp
push
mov
jo
lahf
cmp
push
mov
adc
push
xorb
inc
lcall
cmp
ret
dec
add
inc
pop
lds
movb
fcmovbe
or
out
pmulhw
and
ud0
mov
adc
dec
fdivrl
mov
cmp
pop
xchg
fisubrs
add
mov
dec
mov
sbb
out
mov
sub
into
mov
js
dec
push
jl
fcmovne
hlt
les
cmpsb
ljmp
or
sbb
movsb
pop
pop
iret
dec
xchg
jecxz
jmp
loop
data16
cmp
addl
adc
aad
jg
push
std
in
aad
xor
mov
fcomip
leave
es
adc
xchg
mov
inc
push
gs
push
fnclex
lcall
jae
push
xchg
adc
out
or
sbb
xchg
pushf
dec
xchg
cmp
mov
cltd
jmp
push
ret
cmp
es
rcrl
lods
fsubr
xchg
popa
enter
cmp
fisubs
sbb
loop
andl
inc
outsb
pop
push
fisttpl
cltd
xor
in
push
repnz
push
movsb
or
lcall
sahf
xchg
jecxz
cmp
adcb
in
nop
lds
jecxz
and
add
dec
sub
lcall
ss
movsb
ds
repz
faddl
and
sbb
sbb
roll
lds
out
mov
cmpsl
call
inc
cmp
adc
mov
adc
imul
ficomps
ss
adc
xchg
add
pusha
fs
imul
pop
ljmp
ret
dec
mov
scas
and
shlb
sub
rcrl
je
sahf
cmpsb
jno
ja
loop
fbstp
outsb
ret
aad
test
pop
cmp
or
icebp
cmp
jne
xchg
in
push
push
popa
cwtl
out
mov
loop
out
scas
pop
pop
inc
add
ja
popf
int3
mov
cmp
ror
call
das
cmpsb
mov
pop
mov
xor
sbbb
sbb
add
mulb
mov
push
arpl
xlat
mov
sub
add
shlb
arpl
loop
or
pop
cld
bound
insl
std
je
jbe
clc
push
cld
and
stos
lret
mov
enter
sub
mov
and
cmp
or
cmpsb
sbb
ficoms
rorb
roll
outsb
push
xchg
mov
jno
push
mov
adc
lcall
lods
bound
sbb
cmp
mov
outsb
rclb
add
adc
jbe
ficompl
xchg
pop
xchg
dec
xor
out
cld
dec
roll
mov
dec
shll
push
inc
xchg
andps
outsb
imul
or
cld
jmp
adc
xlat
mov
push
push
cmp
out
push
cwtl
shl
mov
sbb
or
movsb
pop
inc
aaa
sbb
mov
dec
in
subl
mov
iret
pop
xchg
and
push
hlt
popf
and
psrad
fisttps
adc
add
push
fcompl
push
jecxz
and
or
movl
jmp
ja
xabort
addb
shlb
jae
sbb
push
xchg
adc
cmp
mov
imul
cmp
mov
ficoms
shl
mov
sbb
ljmp
mov
push
xlat
movsb
outsb
es
stos
sbb
adc
or
adc
cmc
fisubrl
mov
jge
mov
push
mov
cmpsb
orb
ret
cwtl
ja
xchg
jne
jecxz,pt
mov
aad
fdivl
mov
and
push
mov
jbe
fcmovnb
bound
sub
jb
lahf
push
mov
cwtl
repz
bound
shl
mov
or
outsb
in
jns
mov
or
bound
leave
outsb
dec
jne
jecxz
loopne
iret
pop
jne
sarb
xor
rolb
mov
pop
dec
mov
mov
jmp
push
pop
test
sbb
rcll
int3
mov
cs
imul
push
or
in
test
mov
cmpsl
mov
or
enter
lcall
mov
cmp
jl
imul
ret
sub
dec
ret
divb
cmpsb
out
xchg
fistps
imul
inc
push
aaa
push
pop
in
data16
mov
push
hlt
jg
xchg
fisttpl
aad
outsb
push
sbb
mov
je
adc
mov
mov
mov
mov
leave
ds
addb
subb
fisubs
inc
fisttpll
es
lahf
sahf
incl
push
xchg
into
mov
lods
lahf
xchg
dec
iret
addr16
push
sahf
cmp
mov
adc
dec
inc
sbb
mov
pop
xchg
mov
push
sub
xor
inc
and
testb
mov
cmp
stos
add
mov
ret
insb
mov
pop
xlat
lahf
addr16
push
xchg
xchg
add
add
mov
ret
mov
je
lcall
xlat
sub
subb
ljmp
mov
dec
ss
rcrl
jne
fiaddl
aas
mov
ret
or
lret
stos
data16
mov
push
cli
into
cmp
adc
add
iret
jmp
push
fists
xor
loop
cs
rolb
imul
add
or
add
add
mov
xchg
lea
mov
adc
sbb
popf
cmpsl
xchg
xchg
xchg
movsl
gs
pop
dec
sbb
and
fbstp
sbb
bound
xor
add
es
push
in
xchg
xchg
xlat
sub
shl
push
add
push
shlb
pop
adc
inc
push
and
addb
jb
je
xchg
adc
sub
mov
jmp
sub
scas
inc
jecxz
mov
fs
or
ret
sub
sub
mov
testb
sahf
loop
stc
xchg
push
sub
inc
repnz
pusha
inc
jno
rcll
shll
push
dec
mov
or
loop
lock
dec
ljmp
push
add
es
mov
call
mov
int
ljmp
mov
cmp
scas
es
xlat
push
pop
ss
out
mov
jecxz
loope
inc
adc
scas
ljmp
add
inc
ret
mov
mov
push
push
xchg
fs
add
hlt
jmp
add
fistpl
sbb
push
dec
cmpsb
mov
push
push
add
jbe
mov
es
fisubs
popa
xchg
and
cld
das
roll
out
ret
or
xchg
cmpsl
mov
mov
xchg
imul
gs
test
or
cmp
cmp
lcall
popf
gs
sbb
mov
sub
add
mov
and
push
cs
add
xchg
icebp
mov
es
inc
divb
scas
and
or
mov
jecxz
into
dec
dec
or
in
dec
mov
in
out
gs
sub
ds
jecxz
imul
xchg
jecxz
jecxz
das
and
and
mov
or
ja
inc
inc
pop
sub
mov
cmp
loope
and
orb
mov
mov
pushf
inc
push
xchg
cmp
scas
add
es
ret
cli
ja
push
lea
loopne
sbb
imul
sbb
xor
mov
push
scas
cmp
int
push
push
filds
pushf
inc
sbb
outsb
bound
mov
fstps
sub
or
mov
or
stc
jecxz
xor
sarb
or
pop
stos
sbb
push
pop
mov
iret
pop
cmpsb
and
add
clc
or
pop
lods
push
add
dec
fidivrl
fcompl
xchg
bound
fmull
and
stos
mov
loop
xor
xor
outsb
xor
inc
xchg
adcl
pop
ss
sub
fistpll
nop
iret
mov
cmpsl
adc
stc
leave
jno
mov
cwtl
adc
into
in
out
push
pop
ljmp
lds
push
xor
repnz
dec
adc
or
dec
andb
subb
cmp
call
sub
lcall
push
outsl
mov
inc
mov
loope
pop
outsb
push
mov
mov
repz
mov
add
jne
mov
jae
push
test
clts
sub
and
iret
int
incb
ja
mov
xchg
sbb
sub
lds
sub
aam
xor
adc
scas
sbb
sahf
aad
ljmp
inc
sub
outsb
push
adc
ja
es
into
in
add
test
ljmp
imul
cmpsb
rcrl
mov
in
stos
rorb
xchg
pop
xor
mov
mov
sbbl
movsb
inc
or
jl
push
out
xchg
sbb
pop
jnp
gs
or
or
cmp
aaa
js
cmc
fucomi
sahf
xchg
inc
jecxz
cltd
daa
and
cmp
rcrb
xchg
adc
and
imul
xlat
add
pop
jno
inc
mov
cli
or
imulb
sbb
ret
pop
push
roll
cs
lcall
mov
add
fadd
outsb
mov
pusha
rorb
pop
push
cwtl
lahf
lcall
push
clc
es
sbb
bound
scas
enter
daa
push
fidivrl
cmc
push
pop
xlat
add
shll
mov
in
or
loop
rcr
call
pop
xor
pop
sub
cmp
xchg
xor
fidivrs
xchg
push
in
push
sti
or
push
loop
shl
stos
xchg
gs
bound
ret
inc
xchg
lcall
loop
bound
cmp
fiaddl
cwtl
push
jo
sub
sbb
add
push
sub
mov
push
dec
out
sub
ss
push
push
push
mov
ficoms
mov
dec
les
lret
out
jecxz
mov
jbe
inc
scas
dec
sub
cmp
in
fisubrl
xchg
rclb
es
cmpsb
adc
add
ret
imul
add
fstpt
mov
cmp
cmp
or
dec
dec
add
inc
iret
push
ljmp
mov
rolb
ret
rolb
and
out
rorb
xchg
jg
mov
sahf
aas
jecxz
xchg
ljmp
jbe
pop
push
rorl
xor
outsb
imul
jmp
inc
inc
mov
or
sbb
mov
arpl
sub
inc
mov
subb
bound
ljmp
aas
mov
loopne
and
fildl
and
fimuls
push
lcall
lahf
mov
xchg
adcl
mov
inc
shrb
stos
sbb
pop
ss
mov
mov
fstpt
mov
push
sbb
jae
test
or
xor
sub
jecxz
or
adc
dec
mov
sub
xor
mov
and
fidivs
iret
push
iret
pop
pop
mov
mov
xor
pop
in
mov
pushf
jo
mov
push
bound
inc
xchg
outsb
jbe
cs
push
mov
jg
std
jae
adc
inc
outsb
xchg
push
ret
ficoms
sarl
xchg
mov
adc
stos
and
test
and
push
dec
into
xchg
xlat
sahf
shrl
mov
push
ds
push
jg
or
xchg
xchg
xchg
imul
dec
in
inc
mov
mov
mov
shll
daa
push
and
push
mov
cmpsb
mov
push
dec
scas
aam
out
loop
xor
xlat
and
mov
xlat
outsb
push
add
jno
sbb
mov
stos
mov
jmp
inc
sbb
sub
jl
or
aaa
cmp
push
adc
into
pop
test
roll
adc
outsl
stos
or
xor
jb
iret
jmp
sub
rorl
aaa
inc
mov
and
mov
mov
mov
cmp
adc
lahf
dec
xchg
out
and
xor
sbb
xchg
mov
andl
adc
es
sub
cmc
mov
inc
push
mov
push
andb
mov
out
dec
sub
les
test
dec
jl
lahf
sahf
incl
ret
add
sbb
push
fidivl
push
mov
pop
sub
add
iret
mov
inc
mov
call
lahf
imul
pop
and
sub
out
inc
xchg
mov
dec
push
push
add
inc
inc
cmp
xchg
xor
insl
outsb
data16
mov
fbld
mov
sub
push
aas
mov
pop
push
cmp
add
dec
cmp
das
xlat
push
iret
sbb
sbb
fstpt
iret
nop
or
mov
mov
js
rorb
push
outsb
push
test
mov
push
jecxz
dec
icebp
xchg
or
cmp
hlt
fs
fildl
cmp
pop
and
xchg
jne
mov
xlat
xchg
cs
adcl
in
push
mov
jne
cmp
mov
shll
adc
loop
filds
and
fadds
cmpsl
mov
imul
sub
mov
pop
out
decb
push
fcoms
inc
outsl
xchg
cs
or
lret
push
insl
lods
ret
shrl
hlt
ficoms
stos
lcall
fcmovne
xchg
mov
mov
jecxz
xchg
xlat
lea
jo
ljmp
pop
push
sub
xchg
inc
mov
cli
enter
mov
shlb
rorb
jecxz
ds
push
shll
cmp
fildl
sub
sbb
into
fistps
negl
adc
scas
mov
or
cmp
fisttpl
lret
xchg
adc
iret
mov
mov
cmpsb
push
lret
or
push
mov
mov
imul
scas
pop
stos
and
pop
push
rcrb
pop
gs
jecxz
or
push
repnz
pop
or
inc
negb
add
ss
aam
fistpl
sub
dec
shll
dec
lcall
frstor
mov
lea
xor
push
stos
mov
daa
adc
and
cmp
lds
sub
push
fsts
iret
dec
scas
clc
or
push
mov
xchg
push
or
push
ljmp
pop
cmc
movb
test
mov
xchg
mov
imul
inc
xchg
data16
cmp
loop
fidivs
pop
out
mov
psrld
mov
rolb
dec
add
test
xchg
mov
lahf
push
pop
fldt
orb
cld
into
xchg
lcall
jecxz
pop
pop
out
cmp
push
xchg
shrl
push
popf
scas
pop
bound
bound
nop
sbb
cmp
into
test
cmpsb
push
aad
xchg
inc
inc
scas
ljmpw
cmc
pop
push
filds
aad
ljmp
cmpsb
ret
xor
and
pop
rorb
mov
mov
push
dec
scas
push
push
jne
rclb
nop
dec
jne
cmpsb
lods
in
dec
cmp
movsl
or
sub
add
movsl
push
jp
and
ljmp
fs
daa
es
popf
iret
mov
jnp
sbb
ret
hlt
shrb
cmp
pop
push
dec
loop
shll
mov
add
xor
push
ret
pop
mov
mov
roll
xchg
mov
pop
cmpsb
loop
mov
aas
mov
pop
push
dec
lret
iret
call
mov
outsb
sub
aaa
pop
push
mov
add
aad
dec
addb
loopne
fcoml
outsl
or
xorb
aas
push
inc
out
push
push
or
dec
mov
and
sub
mov
and
movl
mov
dec
rol
lret
test
pop
rcrb
pop
ret
cmc
pop
mov
andb
cwtl
mov
or
inc
xchg
sbb
fcoml
pop
cmp
or
pop
sub
jmp
mov
push
lret
fcmovu
stos
mov
jecxz
inc
mov
lods
jp
jae
mov
add
enter
mov
xchg
add
mov
jle
pop
mov
mulb
shll
shr
push
cmp
and
aas
sbb
mov
add
bound
jge
cwtl
cmc
cmp
adc
and
outsb
xchg
divb
mov
fiaddl
lods
jmp
arpl
movsb
stos
enter
xor
push
iret
xchg
into
dec
stc
hlt
mov
mov
scas
xlat
or
popf
cs
cmpsl
fwait
ret
negl
orb
out
pushf
iret
dec
xorl
es
mov
xchg
mov
shrb
data16
pop
fidivs
push
mov
cmc
bound
push
mov
mov
cmp
mov
enter
outsb
jecxz
adc
outsb
cmp
enter
mov
subb
outsl
xchg
ret
rclb
test
push
ret
in
aam
popa
dec
jl
pop
dec
xchg
sub
cmp
jae
movsl
xchg
jno
mov
sub
xchg
xor
ret
adc
mov
xchg
xor
push
mov
and
jecxz
imul
xchg
add
mov
gs
add
outsb
mov
and
push
jne
andb
xor
dec
sub
and
stc
and
shrl
push
ret
inc
loop
dec
shrb
xchg
inc
ds
out
push
and
stos
scas
xchg
in
aas
arpl
pop
mov
cs
mov
lods
idivl
es
aam
jg
out
sub
lds
cld
insb
pop
xchg
stos
shrl
add
add
aaa
or
add
aam
and
iret
sub
adc
push
cltd
add
xorb
xchg
cmpsb
adc
adc
dec
movsl
cli
lahf
push
xor
push
ds
pop
mov
cmp
outsb
push
xchg
dec
push
jmp
bound
push
mov
in
ss
sbb
add
mov
add
mov
dec
xorb
xchg
ret
mov
adc
push
mov
adc
xchg
pop
inc
dec
adc
or
jbe
ds
and
leave
or
push
sub
pop
int
mov
rolb
mov
mov
out
and
ljmp
sbb
push
mov
cmpsl
outsb
pop
xlat
and
addr16
or
sahf
repnz
outsb
or
xchg
adcl
or
push
stos
add
push
mov
cs
mov
mov
jl
jbe
ficomps
scas
fsubl
stos
sbb
loopne
lcall
mov
scas
fisubrs
mov
push
ret
daa
dec
scas
aam
ljmp
enter
sub
mov
push
mov
push
xchg
outsb
and
xor
xchg
sub
add
mov
scas
icebp
lahf
outsb
stc
dec
pop
mov
or
mov
repz
add
cmpsb
stos
push
adc
les
ss
test
fimuls
cmpsb
pop
pop
pop
pusha
mov
sbb
cmc
repz
ret
mov
add
mov
xchg
mov
cmpsb
rcr
faddl
mov
mov
ds
jmp
shrb
and
insl
mov
out
int
mov
xor
mov
mov
orl
pop
out
lret
loopne
int
sub
ret
sbb
adc
pop
push
mov
nop
mov
orl
mov
xchg
xchg
stc
add
inc
sbb
and
push
enter
mov
sub
mov
pop
cs
fisubs
push
or
fstl
neg
xor
mov
hlt
mov
ss
mov
pop
into
pop
xchg
mov
or
sbb
roll
loop
xchg
clc
mov
sub
mov
rorl
scas
pop
xchg
cmp
inc
sbb
mov
mov
push
iret
sbb
into
push
ret
jmp
repnz
push
xor
pop
sbb
mov
popf
jg
adc
repz
ljmp
cwtl
jnp
cmc
daa
push
jecxz
pop
into
sub
mov
ds
je
push
into
xlat
rcr
xchg
mov
push
call
rcl
and
fucomi
dec
mov
sbb
mov
dec
xchg
loop
dec
mov
push
xrstor
cmp
imul
shrb
daa
pop
into
jno
mov
test
and
nop
ja
push
xchg
xchg
xchg
dec
daa
sahf
mov
push
sarb
outsb
jnp
mov
mov
fcmovnb
in
adc
ss
push
cmp
sub
movsl
imul
dec
insl
xchg
sbb
inc
xor
pop
or
es
or
repz
mov
movl
ljmp
mov
push
cld
sub
outsb
sahf
lahf
iret
pop
addr16
shrb
push
mov
mov
dec
dec
das
bound
sub
cwtl
dec
shrb
into
ljmp
pop
mov
sbb
jae
push
cmp
mov
pop
jbe
or
sahf
imull
push
mov
cmp
jo
pop
and
ds
sub
mov
sbb
and
lcall
test
cs
cmpsb
cmovle
push
sbb
xchg
adc
xor
dec
xor
sahf
push
pop
movsl
aaa
nop
call
ret
jae
pop
inc
pop
das
push
mov
and
fimuls
out
popa
bound
int
mov
iret
and
cmp
scas
push
push
mov
jb
out
push
mov
sahf
andb
sbbb
adc
mov
fcoms
incb
out
mov
inc
jns
shr
pop
test
xchg
mov
and
gs
je
sbb
sar
stos
adc
push
pop
outsl
in
faddl
mov
xlat
cwtl
mov
push
fiadds
add
stos
lods
dec
push
imul
out
divps
loop
fst
lret
out
mov
lock
xor
adc
shr
aam
mov
mov
add
fsubl
ficoml
dec
out
add
orb
push
into
mov
or
push
push
inc
mov
push
dec
mov
pop
cmp
mov
outsb
es
in
xor
mov
and
aas
jne
push
push
jne
dec
sahf
xchg
mov
jae
test
adc
or
push
insl
mov
stos
or
imul
lcall
fsubrs
lcall
cmp
fiadds
aas
in
jecxz
fistps
out
push
push
mov
push
cmpl
mov
xchg
test
shrb
adc
add
xchg
mov
cmpsb
or
mov
and
sarl
or
stos
and
loop
es
dec
out
lret
cmp
or
cmpsb
lock
test
xchg
sbbb
cmpsb
lret
rcll
or
iret
add
fisubl
ss
fcompl
mov
pop
jne
adc
adc
push
clc
call
mov
stos
mov
ds
cs
push
ficoms
adc
and
fidivl
dec
xchg
mov
or
jne
mov
or
rorb
or
in
cmpsl
xor
jle
pop
in
add
bound
cmpl
pop
ss
stos
push
ret
mov
or
xor
stos
sbb
push
icebp
inc
fildl
in
aaa
cs
sub
movl
loope
iret
push
push
inc
mov
inc
cmp
mov
test
inc
ljmp
xchg
ljmp
adc
sbb
ret
push
mov
jmp
jno
les
mov
mov
add
push
push
xchg
dec
push
mov
xor
add
pop
push
inc
xor
cmp
mov
xchg
xor
movsl
add
add
lcall
mov
sahf
es
fcmove
mov
sbb
ss
call
mov
mov
mov
lcall
mov
pop
loop
fidivrl
inc
inc
loop
cmp
inc
outsb
cwtl
into
shl
adc
pop
cmp
cltd
mov
or
pop
adc
or
insl
movsb
mov
mov
dec
sbb
mov
shr
sbb
xchg
and
pop
je
add
mov
stos
add
rcr
orl
xchg
lods
arpl
xchg
push
jno
pop
test
cmpsb
jecxz
std
imul
sub
pop
loopne
cmc
xchg
iret
ljmp
out
push
into
xchg
lcall
xchg
loop
leave
cmp
pop
mov
add
std
xchg
mov
dec
into
gs
push
or
mov
sarb
xchg
addr16
in
jecxz
inc
mov
mov
ret
sti
ss
mov
cmpsl
xlat
stos
mov
inc
mov
lgs
add
push
sub
adc
push
adc
cmp
outsb
or
xchg
cmp
clc
mov
rcr
mov
ret
sbbl
cmpsl
scas
mov
pop
pop
xchg
xlat
sub
ljmp
or
cmp
stos
enter
lods
aaa
call
mov
mov
push
mov
add
inc
add
dec
dec
orb
insb
jns
inc
mov
dec
sub
mov
fcmovu
flds
xchg
push
insl
sub
push
into
cmpsl
push
dec
xchg
imulb
xchg
mov
sub
out
inc
int
push
sbb
pop
push
bound
shll
into
in
scas
in
cmpsl
push
sti
and
xchg
push
loop
mov
aas
mov
fbld
lods
imul
loope
xlat
mov
push
mov
pop
xchg
add
ret
xchg
xchg
pop
pop
xorb
push
adcl
insb
add
xor
mov
scas
sbbb
dec
xchg
dec
sub
in
jmp
pop
jmp
sbb
mov
mov
pop
out
mov
repnz
sub
addr16
imul
outsb
push
jecxz
xchg
push
leave
dec
iret
stos
pop
pop
dec
sub
push
fimull
lcall
mov
pop
cld
addr16
inc
addr16
dec
push
test
movsl
inc
test
outsb
std
dec
mov
cmp
fisubl
es
mov
out
xor
loop
mov
xor
adc
lahf
pop
clc
jae
in
mov
adc
je
cltd
ficompl
cmp
ret
fstpt
rcrb
out
adc
jecxz
pop
cmp
test
aad
es
xor
fcmovnu
insl
sbb
cmpsb
and
and
adc
dec
leave
and
out
movsl
inc
jle
stos
push
das
mov
jb
dec
and
push
shrb
push
mov
out
sahf
mov
xchg
add
outsb
rcrb
mov
mov
les
imul
mov
iret
xchg
or
xchg
xchg
out
xor
icebp
sbb
mov
push
xchg
push
out
in
mov
shll
faddl
or
inc
adc
cmc
test
and
bound
out
ljmp
xchg
pusha
cmp
lcall
inc
push
jb
sbb
lock
push
add
inc
adc
mov
push
ret
mov
sbb
sbb
push
push
cmp
sarb
mov
mov
jb
push
sbb
cs
xchg
jno
pusha
rcl
gs
fidivs
sub
adc
lahf
mov
out
or
fisttps
bound
sub
fistpl
lods
sub
jbe
scas
push
lret
mov
bound
jge
cmp
sbb
mov
jp,pt
mov
add
xlat
cs
adc
loop
mov
add
sbb
jecxz
add
fisubrl
fbstp
movsb
divb
mov
lcall
lahf
lods
and
mov
push
ret
into
push
pop
sbb
loop
aad
fistpl
pop
repnz
adc
sub
cltd
xlat
sahf
nop
push
fmull
loope
inc
mov
fisttps
shrb
ret
cwtl
andl
jns
xchg
pop
sub
mov
mov
pop
scas
and
cmp
mov
gs
adc
mov
and
jecxz
rorb
loopne
cmp
jg
push
dec
stos
dec
inc
mov
movsb
inc
cmp
mov
xchg
daa
sub
gs
pushw
loopne
gs
enter
fstpl
outsb
loope
gs
adc
pop
gs
mov
leave
add
outsb
fcoms
gs
xor
jb
gs
jg
push
fimull
scas
fbld
fidivrs
xchg
ljmp
std
sti
xchg
in
adc
xchg
push
lcall
pop
add
jnp
lods
fistps
xchg
mov
out
xlat
out
ds
cmp
imull
fistpl
inc
xchg
es
into
in
jecxz
fistpll
lcall
ljmp
mov
mov
outsb
jecxz
scas
dec
inc
mov
je
fistpll
sahf
pushw
sbb
aas
inc
sub
cmp
scas
push
loopne
gs
add
pop
push
fs
xlat
or
sbb
xchg
inc
cld
std
mov
mov
mov
adc
iret
bound
sbb
test
pop
iret
jb
jo
into
ret
dec
test
gs
in
lods
xor
dec
xchg
data16
imul
cs
adc
aam
loop
cmp
mov
scas
mov
xor
push
out
mov
sbb
out
stos
jecxz
add
sti
sarl
clc
sbb
adc
mov
cld
cmp
jecxz
mov
and
out
imul
jns
lret
lret
xor
push
pop
mov
ja
cmp
ss
xchg
je
clc
imul
jno
push
sahf
incl
sbb
sub
repnz
xchg
jecxz
aaa
ljmp
test
or
mov
mov
int3
ljmp
xchg
mov
cli
jg
mov
cld
fldenv
shll
andb
gs
arpl
aaa
push
std
mov
inc
xchg
ljmp
les
add
inc
xor
sbbb
cmp
inc
sbb
fisubs
sbb
adc
xchg
lods
jno
push
push
cmp
xchg
dec
push
mov
jbe
push
push
pushf
mov
add
stos
dec
int
push
push
test
bound
xchg
ss
ljmp
and
mov
xor
faddp
ret
in
inc
sahf
rcr
xchg
xchg
add
es
add
aaa
and
lcall
lods
xor
popfw
adc
mov
imul
out
mov
and
inc
into
mov
ds
and
ret
xlat
arpl
mov
jg
stos
rclb
adc
and
fisttpl
in
adc
xlat
aas
inc
mov
xchg
pop
sahf
aam
xor
pop
das
mov
cmp
push
es
mov
xchg
stos
xor
cmp
sbb
ret
scas
inc
rorl
std
pop
iret
lcall
ja
repz
out
add
lcall
sbb
adc
lock
inc
inc
cmp
ret
pop
mov
fisubrs
shlb
stc
and
push
add
ljmp
inc
es
inc
jg
loop
mov
fldt
ljmp
mov
dec
add
out
inc
sbbb
mov
xor
xchg
shr
jmp
rcl
lahf
mov
out
data16
jl
mov
aas
adc
xor
iret
int
mov
rorb
add
push
push
pop
add
xchg
nop
mov
xor
sbb
in
subb
cmc
xor
push
out
push
xor
inc
pop
ja
push
push
je
iret
sub
xor
imul
adc
ds
cmp
pop
mov
notb
mov
sub
mov
jae
test
push
addb
mov
fstpt
into
mov
ret
outsb
aam
inc
push
xchg
xchg
fs
push
pop
daa
cmpsb
mov
sub
add
inc
ret
jmp
mov
loop
push
dec
adcl
das
fisttpl
pop
sbbb
sub
lock
cmp
mov
xchg
stos
aad
sti
adc
andb
enter
or
push
es
xchg
fsubrp
dec
nop
push
or
xchg
int
cld
inc
sub
sbb
jo
popf
hlt
fstps
es
jne
xchg
and
cmp
pop
jo
fidivrl
iret
lock
sub
ret
in
ret
jmp
xor
out
adc
inc
je
cs
sarb
mov
js
cli
mov
gs
cmc
dec
pop
ds
or
push
mov
mov
sub
xor
ret
dec
daa
adc
push
movsb
mov
pusha
add
dec
out
mov
inc
adc
pop
into
aam
mov
cmc
pop
mov
gs
outsb
shll
in
jecxz
mov
push
inc
ds
in
mov
outsb
ret
negb
mov
ss
mov
lahf
sub
inc
sahf
adc
push
mov
test
add
hlt
inc
scas
cmpsb
adc
lock
int3
pop
pop
lods
add
xchg
pop
loopne
adc
mov
cwtl
aam
into
outsb
xchg
rorb
adc
jp
pop
push
mov
jne
out
sahf
xor
into
fcmove
jae
or
repz
fcmovne
sbb
daa
mov
sbbb
mov
ja
push
mov
xchg
fistps
xchg
dec
imul
or
cmp
adc
xchg
jl
ss
mov
xlat
leave
mov
push
xchg
mov
cmp
mov
mov
cmpsb
xor
js
adc
out
ljmp
ret
int3
cmp
rolb
push
sub
popa
mov
cli
jne
and
or
bound
lcall
mov
into
adc
and
xchg
cmp
adc
xchg
popa
pop
jl
addr16
xchg
cmpl
pop
and
dec
lahf
jno
pop
xchg
mov
cmpsb
sarl
bound
ret
adc
push
int3
dec
cmp
pop
or
and
fisttps
movsl
or
adc
push
xchg
dec
sti
push
js
fcoml
subl
dec
jne
mov
loop,pt
out
xlat
inc
pop
cmpsb
mov
iret
ficompl
out
bound
test
ret
lcall
pop
push
xor
adc
not
adc
popf
es
iret
sbb
enter
adc
push
sub
fcmovu
repnz
stc
mov
push
push
stos
lea
sbb
fsubrs
mov
pop
xchg
cmp
lcall
fisttpl
ljmp
and
inc
cmpsl
inc
cmpsl
mov
sub
pop
push
mov
or
mov
xor
nop
mov
aaa
dec
lcall
jbe
push
ljmp
iret
ret
dec
mov
xlat
ret
loop
mov
leave
push
mov
cmp
xorps
cs
aas
mov
or
movsl
cmpsb
call
xchg
in
cmc
out
xor
mov
mov
push
mov
test
adc
repz
in
xchg
cmp
mov
ss
pusha
sub
adc
add
dec
mov
xchg
dec
pop
pop
lcall
pop
xchg
inc
push
cmp
xor
repz
and
stos
add
xchg
fcoml
pop
popa
ret
xor
and
mov
adc
mov
sbb
inc
cs
sub
mov
out
add
push
push
dec
and
sub
jb
cltd
test
ror
int
and
and
scas
inc
lea
xchg
iret
mov
xor
dec
int3
lcall
push
ret
outsb
lods
mov
xchg
mov
ds
lret
and
adc
pop
mov
mov
xor
rolb
jmp
outsl
outsb
push
negl
add
jecxz
sub
pushf
sar
adc
ret
or
in
nop
mov
addb
testl
push
pop
jecxz
inc
or
mov
push
fistpl
lahf
rorb
ret
loope
push
push
negb
cs
mov
icebp
enter
ret
testb
push
rol
or
cs
jno
mov
ss
push
mov
addr16
pop
and
push
lcall
xorb
cmp
and
cli
and
in
mov
scas
outsb
mov
push
ficoms
push
fcompl
adc
mov
loopne
iret
push
mov
sbb
lods
je
filds
push
cmpsb
ss
adc
pop
mov
xor
mov
into
rolb
in
inc
mov
fdivrs
ss
mov
hlt
jbe
ret
test
scas
add
ret
das
fistps
push
in
xchg
outsb
pop
rclb
push
push
insl
mov
call
dec
push
cmc
scas
mov
add
cmpsb
fstl
sub
lods
push
push
int3
push
xor
not
test
xchg
ficoms
xchg
cmp
xchg
repnz
iret
mov
sahf
dec
stos
ret
lret
add
dec
mov
hlt
inc
push
lcall
sbb
xchg
push
addb
pop
cmp
add
jecxz
mov
mov
xor
out
inc
inc
es
ss
stos
mov
sub
push
clc
addr16
pop
addr16
cs
fcmovne
ret
out
out
in
loopne
cmpl
fistpll
push
mov
imul
jp
lcall
rcrl
ret
add
adc
dec
xchg
or
cmp
bound
and
pop
ficompl
cld
out
jl
xchg
aas
sub
iret
push
xor
andb
mov
and
insl
pop
ss
int
pop
insl
iret
fistl
dec
pop
sahf
lret
add
adc
imul
sub
lds
sub
gs
sahf
subb
dec
mov
ss
dec
ds
out
push
or
mov
mov
xchg
in
jnp
mov
outsb
or
dec
xchg
aad
ds
lret
mov
mov
clc
cld
mov
sbb
cmp
data16
hlt
stos
dec
or
cli
iret
lds
add
loop
push
das
cmpsl
stos
xchg
pop
mov
repnz
push
mov
mov
fstpt
sub
mov
into
scas
xchg
push
mov
cmpsl
pop
xchg
test
sahf
dec
mov
adc
push
mov
jmp
xchg
xor
cmp
sbb
pop
fbld
dec
mov
loop
cltd
cmp
push
gs
pop
or
stc
jecxz
fisubrl
jb
xchg
into
cmp
hlt
mov
sahf
mov
push
popf
mov
out
mov
sbb
je
imul
in
push
xchg
lcall
dec
lods
add
dec
ljmp
scas
sahf
cmp
cmp
add
dec
jle
sub
push
js
adc
leave
testl
ds
dec
cmp
sub
cmp
in
add
inc
aam
ljmp
mov
xlat
rol
mov
adc
dec
addr16
int
push
mov
pop
ja
mov
imul
jne
mov
mov
ss
in
xlat
aam
in
frstor
in
mov
ds
jecxz
push
xor
loop
push
mov
mov
test
ljmp
dec
pop
clc
inc
out
and
jns
or
fsubr
dec
repz
xchg
pop
jmp
imul
js
jno
xchg
lahf
ret
ret
sar
sub
loopne
stos
jns
jge
mov
push
dec
and
lret
jb
outsb
xchg
in
pop
xchg
out
outsb
xchg
lret
push
xor
out
dec
jg
dec
push
adc
and
mov
dec
xchg
or
into
sub
mov
mov
xchg
cmpsb
adc
gs
xchg
mov
aam
mov
pop
into
out
ss
and
pop
lods
xor
add
mov
movsl
pop
push
rclb
shrl
and
jbe
pop
fisubrs
test
lahf
pop
mov
bound
or
lea
sahf
xchg
sahf
out
fcmove
push
xchg
jo
mov
inc
clc
hlt
aad
sahf
scas
fbstp
push
std
nop
lock
bound
incb
pop
test
loopne
fdivrl
lret
inc
inc
shlb
aad
shll
mov
add
xor
addr16
sbb
push
es
xchg
in
movsb
mov
mov
mov
loope
mov
ret
test
shlb
pop
int
and
filds
dec
je
pop
stos
pop
dec
jecxz
into
lods
lock
pop
sbb
pop
out
cwtl
adc
stos
out
rcrl
test
rcll
shlb
push
iret
lds
pop
bound
dec
xchg
out
mov
jb,pt
dec
cmp
dec
mov
push
ss
andb
mov
cmp
pop
and
or
mov
cmp
data16
testb
fdivp
addl
cmp
addb
sahf
das
loop
push
and
sub
jp
and
xor
pushw
mov
jno,pn
pop
ficoms
push
inc
xor
mov
fcomi
mov
mov
sub
pop
jno
in
inc
adc
mov
pushf
loop
ljmp
pop
pop
mov
pop
rorb
divb
fcmovne
aam
or
movsb
pop
inc
mov
cmp
xchg
push
ret
fucomi
popa
sahf
bound
es
cmc
sub
in
pushw
push
dec
into
mov
adcb
test
and
xorb
jbe
ret
fisubl
mov
mov
mov
push
loopne
test
pop
add
cli
sbb
sarl
icebp
jecxz
lods
scas
jne
xlat
loopne
mov
pop
xchg
pop
push
or
sub
add
sbb
pop
push
xchg
adc
push
sahf
ljmp
addb
das
adc
ss
sbb
dec
mov
xor
filds
xchg
add
cs
add
push
xchg
xor
xchg
add
inc
dec
add
js
out
pop
mov
pop
mov
scas
outsb
mov
iret
add
adc
pop
inc
push
pop
sbb
or
aam
mov
mov
test
mov
pop
push
push
lods
push
ljmp
es
pop
mov
lods
add
fistpl
sbb
sub
cld
fstl
mov
xchg
inc
aad
imul
pop
push
xchg
and
mov
int3
jecxz
or
call
mov
bound
push
pop
loop
hlt
jg
fisubrs
push
sbb
sub
pop
push
leave
dec
jle
jae
xchg
mov
xor
cmp
test
ret
dec
sbb
push
fidivrs
mov
jecxz
insl
or
call
dec
stos
xorb
arpl
push
ds
adc
rclb
cmp
imul
sbb
and
iret
add
push
mov
and
sub
xchg
je
adc
addl
push
scas
add
test
cmp
sbb
push
imul
pop
fisttps
ss
ret
sbb
push
ret
mov
mov
sbb
rclb
xor
dec
add
sahf
xchg
test
jecxz
data16
lret
and
mov
cld
pop
cmp
dec
xchg
ljmp
mov
push
or
and
ret
jg
inc
loop
imul
inc
mov
mov
inc
pushl
and
ret
mov
inc
lea
cmp
out
rcr
xchg
or
xorb
sbb
stos
xchg
bound
into
faddl
lods
and
and
add
sti
adc
sub
mul
fistl
inc
iret
fbld
out
mov
aas
jl
adc
sahf
pop
je
in
mov
and
cmpsb
sti
mov
jae
lcall
gs
inc
push
mov
mov
cwtl
xor
adc
nop
iret
scas
mov
ljmp
into
fisubrs
test
iret
mov
lahf
out
mov
rcrl
aas
or
jl
cmp
pusha
jb
ss
mov
adc
ds
ret
cmc
and
aam
mov
sbb
jne
push
push
cmp
jae
mov
adc
cs
jae
mov
xchg
cmpsb
xor
pusha
mov
subb
push
dec
xchg
es
xchg
out
leave
and
bound
ret
jb
and
cmp
out
push
cmp
dec
aaa
fnstcw
cmpsl
fldt
mov
add
or
xorl
and
add
in
sbb
add
or
mov
sbb
fisttpl
push
xlat
ret
aas
push
ss
cs
lds
cmpsb
jle
ss
out
bound
outsb
divb
sub
movsb
cs
mov
cmp
sbb
pop
mov
mov
lds
das
sbb
flds
adc
fidivl
push
lock
xor
dec
jne
es
fadd
inc
inc
outsb
shrl
jmp
mov
sub
xor
mov
push
push
pop
inc
hlt
ds
adcl
leave
cld
sub
cmp
mov
dec
sbb
dec
je
push
fmull
push
inc
fdivrs
add
divb
pop
into
push
or
or
stos
and
aas
pop
inc
rcrb
xorps
fistpll
addb
xlat
mov
ret
jge
shll
lods
push
inc
inc
xchg
or
mov
and
dec
cmp
ds
dec
pop
shrb
sub
sub
xchg
jb
loop
lcall
add
or
loop
dec
pop
mov
cmpsb
stos
jge
and
rorl
mov
sbb
mov
xchg
mov
push
sub
imul
ret
xor
es
rorb
or
cmpps
or
add
iret
inc
lcall
ss
push
ljmp
dec
cwtl
dec
add
jae
lahf
mov
sub
push
cmpsb
addr16
jecxz
in
xchg
movsb
push
add
mov
fbstp
aam
add
mov
sub
adcb
dec
sub
jbe
xchg
mov
movsb
jecxz
mov
and
push
pushf
add
push
xchg
xlat
sbb
mov
xchg
or
xor
mov
repnz
ret
mov
es
mov
cmp
mov
ja
fbstp
inc
inc
jg
push
test
cmp
es
mov
outsl
xchg
aaa
push
cmp
pop
mov
and
stos
cmp
inc
ljmp
pop
aad
iret
out
and
imul
into
sarl
mov
cmpsb
cmp
repnz
lea
out
in
mov
inc
or
and
pop
mov
jbe
cs
pop
push
push
add
push
cmp
xlat
push
mov
or
pop
ljmp
add
dec
mov
mov
mov
mov
mov
cmp
sub
ds
enter
lcall
mov
add
sbb
sub
lcall
push
es
add
jne
rorb
sahf
or
mov
sbb
adc
shrl
adc
lods
add
push
push
orb
subb
fisttps
adc
push
push
adc
rcr
shlb
push
jbe
insl
cmp
adc
jecxz
mov
fists
inc
push
mov
jbe
cs
ficompl
xor
ljmp
xchg
gs
scas
incl
lcall
cmp
push
out
movl
mov
jcxz
and
es
popa
jb
stos
out
ds
jg
push
mov
push
add
inc
popf
jecxz
xchg
ret
lret
push
sub
bound
sub
gs
xor
enter
ljmp
std
and
daa
mov
outsb
cld
add
pop
bound
ljmp
orb
xor
in
mov
inc
inc
adcb
mov
andl
rolb
jle
jnp
out
or
inc
xchg
pop
cmp
into
ret
inc
sbb
mov
push
lods
fisttps
lcall
sbb
adc
movsb
adc
mov
lcall
fcomps
pop
mov
iret
jo
enter
mov
add
cmc
pop
mov
out
into
cmp
pop
mov
xchg
and
jbe
sbb
ret
lret
push
pop
push
imul
test
arpl
iret
and
mov
mov
xchg
push
mov
dec
xchg
mov
fsub
push
mov
ret
in
push
stos
enter
mov
push
push
lahf
xor
fbstp
iret
mov
cmpsb
add
mov
lcall
scas
in
or
fcmovnu
movsb
int3
sti
cmp
ss
lret
div
and
xchg
fiaddl
xlat
or
andnps
push
adc
adc
sahf
imul
or
data16
test
out
dec
subb
lcall
add
fisttps
push
cmp
cs
lock
pop
cmc
test
aam
dec
bound
xor
imul
or
mov
enter
xlat
jl
decl
loope
push
popf
sub
pop
rorb
daa
push
ss
cmp
mov
outsb
push
and
push
fiaddl
rcrb
xlat
push
aam
xchg
scas
push
repz
loop
sub
cmp
ljmp
out
mov
into
icebp
mov
add
inc
rorl
movsl
into
add
dec
outsb
mov
fiadds
add
push
loop
gs
push
mov
dec
mov
push
in
sbb
fisubrs
out
into
xchg
test
fsubs
push
in
push
in
cs
data16
cmp
fbstp
inc
cmp
shll
or
adc
stc
repnz
and
gs
mov
lcall
add
iret
into
add
mov
adc
xor
cmpsl
push
lahf
sahf
fisttps
add
ja
into
mov
or
mov
mov
mov
ljmp
hlt
push
mov
mov
cs
inc
push
cmpsb
push
dec
push
movl
adc
out
test
iret
ret
inc
push
mov
xchg
fimull
ljmp
mov
sbb
pop
pop
xchg
pop
pop
xor
lcall
add
add
add
push
outsb
sub
ret
addb
dec
xor
inc
xchg
inc
push
in
sub
arpl
push
call
mov
paddsw
sbb
ss
pop
mov
gs
cmp
jbe
mov
es
xchg
sub
ficompl
mov
pop
call
out
sbb
push
push
lcall
aad
dec
lcall
scas
and
lods
sbb
fisubs
clc
fmul
mov
mov
jl
enter
push
push
ja
mov
fdiv
cld
into
adc
jecxz
mov
inc
jb
ret
shrb
rolb
aas
addb
scas
je
mov
pop
outsb
pop
ljmp
cmp
cmpsb
jnp
ds
ss
dec
out
not
ret
rcl
mov
jecxz
cmpsb
fidivs
loopne
mov
push
add
mov
sub
dec
cmpsb
lret
mov
sbb
push
shr
lcall
mov
stos
add
je
into
adc
aam
cmp
jg
mov
push
rorb
test
xchg
in
stos
loop
jae
mov
test
mov
jg
xchg
in
sub
addr16
dec
hlt
sub
cmp
push
ret
pushl
cmpsl
rcrb
sub
push
pop
mov
mov
shrb
dec
lret
adc
es
hlt
add
cmp
mov
mov
cmpsl
sub
mov
xor
dec
insb
xchg
insl
mov
ds
test
mov
repz
inc
and
ljmp
je
fcmovnbe
cmp
xchg
inc
ds
scas
push
mov
push
ja
xchg
mov
inc
jne
lcall
jne
jae
inc
adc
adc
pop
and
mov
push
xchg
mov
stc
lret
leave
xor
push
and
scas
leave
fildll
and
and
and
dec
stos
and
stc
cmp
adc
pop
inc
sti
imul
mov
xchg
or
hlt
sub
mov
xorb
cs
add
inc
mov
pop
sub
add
pop
pop
leave
jg
movsb
mov
dec
push
inc
inc
pop
ss
int3
push
sbb
aad
push
adcl
xchg
add
jne
mov
mov
jnp
dec
sbb
out
and
push
dec
imul
loop
or
dec
cmp
lret
jecxz
cs
sbb
cmp
xchg
inc
mov
push
xchg
mov
push
out
dec
jecxz
xchg
or
in
jbe
loop
test
mov
repnz
and
and
mov
ud1
sub
cs
addr16
and
adc
ror
add
adc
jae
jle
dec
ret
xor
xlat
ljmp
mov
ljmp
je
add
bound
mov
cmp
mov
ds
stos
arpl
pop
and
adc
push
add
sub
mov
loop
push
and
outsb
mov
mov
pop
cmp
iret
rorb
shlb
outsb
mov
pop
xor
ja
xor
pop
pop
mov
pop
sbbb
pop
shrb
sbb
hlt
jge
into
push
and
adc
scas
cld
inc
fmuls
ret
and
xchg
int
out
jmp
push
enter
rol
adc
outsb
or
sarl
imull
rep
aas
mov
push
dec
fidivl
push
xor
mov
loope
push
mov
sar
rcrl
push
mov
mov
outsl
or
or
dec
sub
sub
xor
push
scas
das
dec
mov
push
adc
or
or
filds
iret
lgs
mov
in
mov
cmp
mov
out
fistl
pop
xchg
push
push
ds
jae
dec
stos
pop
cs
add
jne
cmp
data16
movsl
pop
out
sbb
insl
aas
mov
bound
add
adc
rcl
outsl
stos
fbld
pop
jb
arpl
xchg
rcll
arpl
push
xor
xchg
mov
cmpsb
jle
adc
adc
push
aam
add
push
in
jbe
mov
ret
inc
stos
xchg
repz
mov
andb
sub
aam
dec
inc
outsb
cmpl
xor
repnz
push
imul
xchg
jecxz
jb
int
arpl
iret
in
push
adc
add
fbstp
ret
mov
rcr
fadd
jl
pusha
scas
fildll
jmp
mov
or
aas
push
sahf
cmp
shr
pop
jnp
sbb
mov
test
push
outsl
adc
mov
fbstp
outsb
and
mov
cmpsl
mov
and
sub
imul
ds
add
ret
lcall
scas
loop
sub
ja
call
outsb
push
and
cmpb
push
pop
es
xchg
mov
outsb
ret
or
cmpsb
cmpb
adc
push
std
xchg
movsl
pop
inc
mov
es
es
out
xchg
arpl
cmc
xor
and
loop
lods
inc
xchg
lcall
jecxz
mov
cmp
sub
pop
enter
pusha
out
pop
sahf
cmp
inc
and
outsb
data16
sub
mov
int3
push
sbb
fcmove
push
adc
sti
cmp
ret
pop
mov
cmpsb
add
mov
pop
cmpsl
or
mov
mov
scas
pop
cmc
xor
filds
es
adcb
addr16
sahf
ljmp
iret
xlat
or
sbb
mov
push
cmp
ds
in
jecxz
push
sahf
sbb
fistpll
cs
out
or
insl
push
pop
sub
sbb
mov
xchg
mov
sbb
mov
sbb
lods
lret
add
scas
or
icebp
in
jmp
jae
shll
outsb
jo
pop
sub
jae
cmpsl
fsubr
mov
jne
push
xor
fcmovb
sub
idivb
sbb
cmpsl
dec
lret
mov
mov
push
push
cmp
dec
and
jb
jg
shlb
lahf
jecxz
dec
inc
mov
push
ret
je
xchg
mov
aad
xor
scas
mov
imul
mov
push
rclb
shrb
scas
pandn
push
in
sti
rolb
ljmp
stc
mov
bound
dec
mov
fcmove
mov
mov
push
push
xchg
fwait
pop
scas
sub
cmpb
push
rorb
stos
push
ja
xchg
subb
dec
jg
sub
enter
lcall
mov
vmovq
neg
pop
push
xchg
dec
mov
cmp
pop
testb
rolb
into
push
sbb
sub
gs
ret
xchg
xchg
adc
lahf
inc
push
cs
push
and
adc
or
out
push
pop
dec
push
inc
cs
ljmp
or
sbb
sub
rolb
sbb
popf
lcall
cmp
bound
rolb
ja
mov
mov
add
or
aam
push
mov
pop
inc
out
push
outsb
adc
xchg
sub
pop
es
jecxz
test
mov
or
cli
aad
sub
xchg
aad
dec
jbe
shll
add
dec
mov
out
add
jmp
faddl
ret
xchg
xchg
shrl
dec
dec
cmpsb
notl
sub
xlat
loop
push
hlt
or
ljmp
rcr
rorb
mov
pop
pop
cltd
push
es
jle
rcr
testl
dec
dec
dec
mov
stc
mul
fistpll
xchg
and
cmpsb
mov
xor
scas
mov
repnz
fwait
mov
clc
repnz
es
rolb
lret
dec
pop
and
mov
ficoms
pop
xchg
xchg
mov
xor
xchg
cmp
cmp
add
pop
sub
mov
sbb
jmp
push
fisubrl
dec
inc
cmp
pop
xor
sarb
xor
push
movsb
fisubrs
push
rolb
cltd
cmp
mov
ljmp
push
jo
xchg
jecxz
pop
ret
cmc
test
iret
push
loop
cmpsl
ret
jae
lahf
stos
xchg
mov
clc
ret
sbb
mov
lret
or
xchg
sahf
fcmovu
jle
or
sbb
cs
and
cmp
insl
int3
xchg
sbb
mov
sbbb
push
push
xorb
ret
add
scas
shrb
dec
mov
xor
lcall
add
ja
push
xchg
gs
mov
mov
into
out
mov
add
xlat
pop
das
pop
lahf
adc
push
jmp
lret
repnz
mov
sub
daa
int
push
lahf
add
mov
andb
imul
fsubr
push
xchg
cmpsb
push
mov
inc
cmpsl
xlat
test
roll
mov
fcmovnb
pop
iret
ss
push
lcall
sbbl
xor
mov
jecxz
fsubp
pushf
cmp
ret
mov
neg
int3
mov
inc
ret
loop
ja
cmp
sub
ret
add
mov
xor
sub
inc
mov
mov
mov
fisubl
cmpsb
iret
out
fisttps
or
mov
dec
push
repz
cmpsb
pop
scas
cmp
jb
leave
mov
fcoml
stc
inc
add
push
or
push
aad
mulb
out
inc
pop
and
push
sbb
mov
push
adc
jo
int3
loop
movsb
mov
inc
aas
stc
orb
mov
or
shrl
rcl
add
ret
xchg
ds
fstpt
cmp
mov
jae
cmpsb
add
stos
xchg
add
ror
ljmp
or
mov
xor
bound
bound
adc
into
push
add
xchg
lret
xor
adc
inc
push
xchg
fisubs
test
ret
mov
movsb
testb
inc
ficoms
imul
pop
adc
pop
es
rcrl
dec
adc
mov
aas
psrlq
ljmp
sbb
dec
and
les
push
mov
lcall
aad
sub
or
jne
inc
jmp
ds
iret
and
mov
repnz
push
or
push
fbstp
lcall
rcrb
mov
dec
xlat
pushf
js
mov
idivl
pop
inc
pop
in
fiaddl
push
ljmp
movsb
adc
sbb
pop
mov
inc
sub
std
data16
pop
push
ss
lahf
cmp
ret
fists
adc
pop
in
fisubs
ljmp
es
aas
add
incl
inc
inc
imul
xchg
ret
pop
scas
mov
dec
and
and
xchg
es
mov
cmp
mov
adcb
ret
dec
mov
into
dec
push
jl
out
xchg
lcall
inc
sahf
mov
fimull
ds
push
mov
or
adc
loope
imul
lcall
mov
push
mov
outsl
adc
dec
popa
lahf
fidivs
das
lods
push
out
mov
xchg
xor
sub
ret
cmp
jecxz
ss
or
add
sub
and
push
fidivl
push
sub
dec
xor
or
mov
mov
sbbl
cmp
lahf
out
mov
aam
bound
push
outsb
and
iret
or
inc
sub
mov
and
adc
stos
inc
cmpsl
cld
imul
or
negb
sub
daa
lds
imul
pop
es
mov
pop
or
adc
imul
add
rcrl
sub
sahf
push
pop
movsb
add
loop
lret
ss
scas
ljmp
xchg
sbb
push
sbb
sub
and
outsb
es
lock
add
into
push
mov
add
or
pop
xchg
mov
mov
mov
or
xchg
sbb
mov
push
cmpsb
mov
sub
push
adc
mov
push
testl
clc
adc
mov
mov
rorl
movsl
cmp
ror
inc
ds
das
das
movb
and
adc
push
xchg
outsb
mov
dec
mov
mov
stc
and
imul
push
add
ss
sbb
into
mov
scas
ljmp
push
cwtl
sbb
iret
cli
mov
mov
sbb
adc
aam
push
mov
lea
mov
addr16
add
xchg
repz
push
les
dec
sahf
push
ficoml
sub
filds
fildl
xchg
mov
xor
pop
pop
cmc
dec
and
outsb
stos
pop
sub
rorb
xchg
cmp
filds
mov
xor
mov
push
push
xchg
ret
shrb
push
dec
in
push
loop
fsubr
jne
mov
out
adc
ds
cmp
imul
push
push
stos
or
and
ss
loop
or
rcll
aaa
push
in
or
xchg
mov
ficomps
ret
pusha
mov
shlb
push
stc
add
xchg
cmpsb
loop
xchg
mov
cmp
lret
out
dec
and
adc
push
inc
orl
mov
fsubl
xor
xor
mov
sub
dec
shll
xchg
cmp
lcall
ss
sbb
xchg
cs
mov
int
xor
ja
mov
ret
jmp
aaa
jmp
outsb
cs
xor
imul
cmp
orb
jnp
loop
pand
mov
in
out
push
cs
roll
or
sub
pop
ljmp
bnd
cmpsb
mov
mov
push
xchg
jae
outsb
out
in
xlat
ret
jl
push
mov
std
push
dec
dec
or
ficoms
in
adc
cli
inc
bound
aas
into
ret
push
cmp
adcb
sub
sbb
ret
inc
outsb
xchg
xchg
lock
mov
ret
mov
outsb
xlat
imul
mov
inc
call
xchg
jle
push
jmp
into
popa
dec
xlat
addb
mov
xlat
sub
stos
lahf
jecxz
std
out
iret
and
lahf
push
push
xchg
cmovle
jecxz
pop
jmp
aad
shl
jne
rcr
mov
fs
lods
lods
aad
test
scas
push
add
mov
push
jle
out
mov
stos
ds
in
or
push
and
adc
loopne
adc
lock
addb
je
rolb
or
adc
pop
in
push
outsb
push
and
adc
scas
mov
ret
mov
sbb
movsl
add
jbe
into
out
xlat
adc
mov
mov
jg
and
push
lcall
in
adc
popl
inc
ds
fildl
scas
xchg
and
loop
inc
fimull
mov
faddp
cmp
inc
imul
inc
mov
mov
xchg
xchg
bound
xlat
sub
aad
mov
into
inc
xlat
xchg
xchg
cmp
icebp
mov
lcall
pop
and
iret
xchg
mov
fists
imul
mov
aam
adc
mov
shll
xchg
lcall
xchg
jecxz
stos
adc
push
lahf
mov
push
mov
add
mov
psubusb
sbb
shl
rcrb
inc
add
ja
push
iret
ret
xchg
es
pop
pop
roll
pop
xor
xchg
hlt
ret
bound
scas
sbb
xor
sub
mov
mov
cmp
or
mov
ja
mov
mov
xorb
xchg
inc
mov
inc
push
xor
pop
sahf
into
es
stos
ja
ret
lea
out
fucomip
imul
mov
icebp
push
jno
xchg
inc
es
lcall
bound
mov
mov
and
or
add
lcall
add
inc
push
pop
gs
pop
notl
imul
fidivrs
ret
push
mov
out
ss
cmp
cmp
sub
hlt
pop
mov
ljmp
or
pop
rorl
pop
enter
cmp
in
xlat
std
sub
or
cmpsl
pop
imul
fidivrs
adc
mov
shll
stc
loop
sbb
add
mov
push
mov
in
mov
ret
cmc
aad
stos
pop
es
jmp
push
jl
sahf
fiaddl
cmc
push
mov
and
pop
sub
sbb
mov
dec
jl
pop
add
push
sbb
ret
stos
push
push
cld
mov
push
or
ljmp
xchg
sti
xchg
out
inc
add
idivb
push
cs
or
mov
loop
ja
mov
mov
push
push
adc
or
ficoms
inc
int3
ljmp
xor
push
lock
cmpsl
cmpsl
gs
jecxz
repnz
xlat
or
loop
push
adc
idivb
stos
into
mov
icebp
adc
mov
shl
adc
xchg
fildl
cs
mov
mov
lock
push
inc
and
scas
cs
sub
lahf
mov
cmpsl
imul
fistl
lcall
pop
mov
outsb
cmpsl
push
jmp
add
popf
dec
mov
sub
test
addr16
push
mov
mov
ss
es
push
pushf
cmc
out
ret
fimuls
lcall
mov
add
and
xchg
out
iret
loop
sub
mov
popf
add
scas
arpl
sbb
mov
push
scas
push
data16
inc
ret
mov
fiaddl
stos
push
mov
data16
and
adc
cmpsb
mov
add
fildll
imul
dec
sub
or
mov
mov
push
xor
add
sbb
jecxz
imul
in
mov
or
jecxz
mov
movsb
mov
bound
mov
mov
pop
xchg
inc
fldt
pop
dec
hlt
iret
sub
sahf
push
fcmovnu
and
enter
sub
push
push
mov
int
sub
cmc
xor
cmp
lods
ds
hlt
lods
mov
iret
ret
mov
sub
pop
aas
movl
jne
push
adcb
mov
fisubrl
imul
into
cwtl
shlb
adc
jae
add
xchg
mov
ljmp
push
sbb
out
jne
sub
jne
pop
mov
mov
out
push
notl
fbld
add
inc
or
cs
add
pop
shll
or
in
shll
orl
loope
out
into
ljmp
mov
push
sahf
fs
xchg
add
mov
into
xchg
sahf
mov
inc
xor
cmp
outsb
sbb
divb
mov
mov
ljmp
movl
std
sub
ret
mov
ret
into
push
imul
fbstp
sbb
out
jecxz
add
mov
ret
test
rcrb
mov
sbb
inc
loop
push
cwtl
xor
push
ss
mov
and
jl
cmpsl
jmp
add
or
dec
push
rorl
mov
and
and
jp
fidivl
cmpsb
push
dec
push
ljmp
and
sbb
push
ret
push
inc
mov
fistpll
fistpll
stos
adc
cmp
mov
or
push
ret
fnstsw
mov
sub
into
lods
push
push
adc
shll
lcall
notl
ja
push
mov
mov
sahf
stos
cmp
push
and
mov
test
test
mov
mov
rcrb
xchg
sub
xchg
sahf
sbb
stos
dec
push
adc
outsb
jecxz
fcmovbe
cmp
adc
fimuls
sbb
mov
or
insl
inc
test
das
push
jecxz
xchg
insl
mov
sub
dec
push
mov
push
pop
push
or
and
lret
pop
ss
inc
push
rclb
sub
push
imul
andb
mov
add
fs
in
adc
iret
bound
lsl
pop
mov
push
ds
in
xlat
orl
or
addb
pop
fildl
cs
adc
bound
cmp
mov
aas
cmpsb
shr
sahf
lea
mov
jne
mov
xor
cmp
ss
mov
push
repnz
cmc
sti
ds
sub
aam
test
fimull
pop
or
push
pop
loop
imul
fsubl
add
mov
adcb
mov
dec
inc
imul
and
sahf
xor
sbb
push
sbb
or
jp
mov
fistpl
out
ret
mov
scas
fistl
aaa
push
subl
xor
push
push
mov
ficoml
mov
xchg
dec
pushf
adc
mov
pop
lcall
cmp
cwtl
test
cmp
sub
pop
add
push
stc
adc
or
pop
scas
es
inc
pop
sahf
pop
ret
das
lcall
outsl
inc
add
mov
lcall
je
inc
xchg
xor
imul
and
mov
mov
pop
nop
scas
test
andb
ja
push
aad
add
and
dec
jbe
into
xor
aas
push
or
xchg
mov
cmc
ret
dec
mov
aad
dec
out
clc
inc
iret
jp
in
jbe
xchg
and
and
iret
adc
leave
cmc
dec
xlat
cmpsb
mov
es
jne
mov
mov
and
sbb
inc
daa
idivb
ret
movl
jnp
cmpsb
adc
enter
or
ljmp
mov
adc
mov
cwtl
sub
add
xchg
ss
lcall
xor
sbb
push
mov
mov
push
fildl
andb
fcomip
cmp
xchg
mov
fs
cs
lods
dec
cmc
rcrb
adcl
add
ljmp
arpl
pushf
or
adc
mov
push
or
int
dec
push
dec
repnz
mov
gs
movsb
jmp
xor
push
push
jae
pop
add
mov
push
mov
sbb
and
es
xchg
out
ret
scas
and
daa
mov
add
push
sub
push
rclb
insl
pop
ljmp
lret
adc
sbb
pop
or
adc
xchg
sbb
cmpsl
add
cs
repz
cwtl
fidivl
sub
sti
or
scas
or
pop
shlb
mov
push
mov
pop
adc
in
loop
shr
jbe
jecxz
rcr
xlat
mov
cs
xchg
fcmovb
adc
add
mov
stos
or
les
lcall
mov
or
mov
gs
sbb
push
es
and
mov
nop
out
cmp
push
pop
imul
lret
xchg
jecxz
bound
fiaddl
pusha
inc
adc
jmp
icebp
jl
adc
xchg
bound
xchg
mov
iret
or
fstpt
fistps
xor
ds
cli
js
sub
stos
jg
stos
movsl
into
xlat
rcrb
push
mov
mov
xchg
subb
repnz
pop
or
fiaddl
scas
cld
xchg
aad
cmpsb
loop
dec
fidivrs
ret
jg
xchg
lahf
jbe
into
fidivrl
loop
push
push
mov
scas
ret
cli
push
mov
and
xchg
and
cs
add
mov
push
push
xor
ret
stos
rcr
cmp
pop
fdivrs
subl
cmp
loop
xchg
jp
mov
mov
pop
je
dec
cs
adc
pop
mov
mov
xor
mov
cmpsb
fisubrl
in
xchg
lock
xchg
sub
lret
cltd
mov
les
pusha
adc
cmp
jp
out
enter
push
insl
clc
adc
push
mov
cmp
push
sub
add
cmp
adc
push
mov
jmp
divl
lock
push
scas
mov
lods
pop
and
inc
cld
inc
test
gs
and
out
mov
stos
rclb
lcall
push
jecxz
and
xchg
fs
sub
xlat
pop
push
scas
ror
ficoms
outsb
pop
push
enter
mov
mov
jecxz
mov
test
aad
jle
or
dec
test
mov
jecxz
out
inc
mov
cmp
aas
cmpsb
xchg
mov
cmp
push
pop
xor
ja
in
dec
addb
jbe
mov
push
fildl
out
stos
scas
fdiv
es
xchg
sub
mov
xor
inc
xor
inc
movsb
bound
repz
fistps
xor
popa
push
xor
adc
outsl
in
jbe
push
repnz
call
dec
pop
sbb
pop
push
loop
mov
sub
fidivs
mov
or
xchg
adc
test
andl
push
push
xchg
push
xor
jo
mov
sub
jo
enter
negl
jo
push
shll
cs
cmp
repnz
outsb
push
rclb
ret
gs
outsl
add
into
inc
push
in
movsl
fs
ss
outsb
dec
insl
out
or
repnz
out
pop
or
scas
mov
inc
push
ss
out
es
or
cmpsl
push
cmpsl
xor
xchg
rcrb
sub
xlat
fimull
add
in
stc
cmpsl
mov
push
mov
and
fcomip
jae
ret
or
mov
jmp
scas
neg
pop
cmpsb
loop
mov
pop
sbb
add
ljmp
fiadds
fistpl
mov
out
ds
sbb
loop
xorb
push
mov
pop
jbe
push
cmpl
das
pusha
and
cmp
push
push
push
mov
push
ret
add
mov
cmp
ss
out
test
jle
faddl
push
pop
out
push
scas
push
cld
repnz
ss
sub
jg
xlat
ss
subb
jecxz
lea
xchg
mov
data16
fldt
push
mov
test
cmpsb
cmp
push
push
push
pmovmskb
or
nop
outsb
or
lcall
xchg
iret
push
pmovmskb
xchg
push
dec
aas
enter
ljmp
sti
xor
cmp
ficoms
clc
scas
or
pop
mov
lcall
cld
add
xchg
out
sub
loop
ja
scas
cld
sbb
gs
xchg
ret
xchg
cmpsl
rcl
rolb
aas
xor
mov
pop
loop
sbb
jecxz
push
shlb
inc
nop
or
push
add
dec
xchg
out
cmpsl
adc
dec
pop
and
or
cwtl
cmp
cmp
shll
ret
data16
cld
dec
ljmp
cs
pop
aad
dec
shr
iret
pop
loop
lret
dec
fidivrl
js
mov
fs
sahf
xor
daa
and
lds
dec
mov
cld
inc
add
push
mov
outsb
add
or
ss
mov
outsl
fcmovb
arpl
adc
ljmp
pop
pop
ret
cmp
lods
pop
xchg
add
push
aad
ss
jne
xlat
loop
adc
cwtl
ss
test
and
mov
inc
add
and
add
sub
push
mov
mov
pop
orl
and
pmaxsw
cmpsb
sbb
shll
add
scas
add
stos
pop
or
cld
loop
mov
mov
or
mov
push
xchg
lahf
xchg
cmp
add
xor
add
push
mov
xchg
jecxz
push
add
pop
push
sarl
ret
cmp
cmp
mov
add
mov
pop
mov
adc
xchg
push
adc
mov
mov
push
mov
or
inc
movsb
lea
mov
push
data16
jecxz
push
into
adc
inc
in
ret
and
pop
bound
add
adc
mov
push
aad
ss
cmp
dec
outsb
sub
je
and
aam
xchg
roll
add
push
push
ret
jns
and
repz
dec
mov
and
mov
bound
mov
es
or
test
ss
sub
xchg
mov
popa
push
sbb
call
adc
inc
dec
cltd
and
sbb
inc
cli
mov
sub
leave
mov
sahf
jmp
shrl
or
adcb
inc
jp
lea
orb
cmp
hlt
mov
dec
outsb
mov
pop
jle
daa
inc
iret
pop
push
stos
pop
inc
sti
andb
sbb
add
cs
push
das
dec
mov
jne
cmp
ljmp
movb
push
loopne
mov
push
aaa
or
cmpsb
xlat
imul
add
pop
out
addr16
and
mov
filds
lahf
mov
adc
rorb
xchg
mov
add
and
shlb
push
push
loop
mov
xlat
lea
shlb
push
fs
xchg
jae
xchg
xchg
ss
stos
mov
aad
xor
imul
dec
pop
xlat
xchg
mov
into
fbstp
ficomps
push
rcll
inc
cltd
pop
gs
inc
push
bound
shl
faddl
push
dec
call
mov
or
stos
and
mov
jae
push
dec
mov
div
sub
push
and
cs
fcompl
adc
scas
fistpl
stos
mov
mov
addr16
dec
mov
addr16
or
aad
push
out
xchg
arpl
lods
jne
ret
call
mov
or
shl
es
xor
cltd
ja
sub
test
and
pop
shlb
lret
roll
and
and
fstps
out
ret
mov
addr16
stos
cmp
je
adc
loop
rclb
ja
cli
or
add
movsb
pop
jle
jle
icebp
add
xchg
shlb
int
dec
repz
lock
ficoms
and
daa
xchg
push
insl
inc
out
out
ss
adc
shll
pop
mov
push
mov
and
and
push
push
sbb
ljmp
sbb
shlb
pop
test
xchg
mov
lods
mov
mov
iret
outsb
stos
mov
push
mov
xor
test
mov
mov
daa
jbe
fstl
bound
sub
ret
adc
xchg
inc
sbb
in
aam
add
mov
out
or
into
xlat
gs
mov
cmp
ds
pop
mov
pop
push
mov
mov
push
mov
push
adc
rclb
jno
mov
bound
pop
outsb
inc
ds
inc
pop
lret
scas
xlat
cmc
and
jbe
ret
push
sahf
push
xor
scas
pop
cmp
into
stos
push
sbb
push
and
cmpsl
sahf
jae
pop
add
push
cmp
shll
jns
or
into
jle
adc
pop
inc
dec
lds
lods
push
xchg
fs
scas
xor
cmpsl
jns
fisubs
pop
sahf
pop
cmp
fcmovb
sub
pop
into
push
sbb
mov
mov
ljmp
fildl
cmp
inc
das
cmpsl
out
mov
notb
ss
iret
mov
out
push
xchg
push
clc
cmp
mov
imul
add
pop
or
outsb
lcall
ds
xchg
dec
cli
dec
cs
gs
sub
push
mov
push
ret
pminub
xchg
addr16
pop
xor
jp
cmp
pop
ds
movsl
ret
and
add
arpl
mov
push
stos
cwtl
jmp
repnz
cmpsb
and
adc
mov
cmp
out
das
sbb
sti
jmp
fdivp
pop
ljmp
loop
rcll
adc
int3
dec
cltd
loopne
scas
int3
shrb
cmp
lods
dec
and
add
imulb
rcrl
fildl
sub
scas
int
movb
es
fdiv
orl
inc
push
js
or
loopne
sahf
mov
stos
mov
jo
movsl
test
sbb
movsl
add
sbb
sbb
mov
mov
mov
inc
jge
push
sbbl
push
jl
popf
xor
push
dec
mov
int3
adc
ret
xchg
or
fs
rolb
sbb
push
adc
cmp
gs
xor
aam
or
scas
imul
jecxz
mov
mov
stos
fcompl
ja
xor
imul
loop
ficomps
arpl
push
sub
pop
js
js
push
in
fisubrs
cmp
mov
cwtl
push
ret
jae
sub
and
xchg
into
push
push
sub
dec
or
jne
bound
test
fs
lcall
lcall
dec
adc
mov
outsb
ljmp
sbbb
test
xchg
mov
mul
push
out
push
push
stos
push
fidivl
je
imul
cmp
mov
out
and
cmp
lahf
pop
test
jne
ret
int
add
and
sbb
bound
jecxz
mov
push
adc
outsl
shrl
sbb
test
test
push
aam
stos
imul
xlat
mov
jecxz
push
pop
fcmovnbe
movsl
xchg
pop
xchg
les
adc
push
ret
cmc
jns
cmp
lahf
andl
adcb
pop
gs
adc
xchg
push
push
xchg
mov
ret
cmpsb
push
cmpsl
and
in
and
push
mov
cmp
push
cmp
pop
es
sahf
cmpsl
inc
cmpsb
aad
jb
mov
into
enter
or
mov
stos
and
push
mov
mov
and
push
repnz
sahf
pop
ret
add
cltd
jae
push
push
fiaddl
cmp
mov
and
mov
addr16
mov
pop
mov
into
movsb
mov
dec
std
xchg
lahf
sub
adc
negl
xor
lcall
sub
enter
inc
fldt
shr
mov
ficoms
movl
out
bound
ret
sti
add
lods
cmp
inc
and
nop
xchg
mov
and
or
sarb
dec
movsb
aaa
cli
cmp
lcall
xchg
out
outsb
ret
cmp
ffreep
mov
arpl
xchg
push
iret
mov
orb
pushf
mov
or
lods
mov
xor
call
and
orl
stos
jecxz
mov
xor
jns
add
hlt
xor
inc
push
xchg
ret
push
into
add
xchg
or
out
adc
cmpsl
sub
mov
sahf
adc
push
push
rcr
mov
jp
xchg
aam
das
lcall
mov
out
mov
scas
cwtl
push
and
xchg
jbe
popf
outsb
fldt
mov
xor
mov
cmpsb
ficomps
or
pushf
xchg
gs
jecxz
into
add
xchg
or
dec
sbb
cmpsb
push
sahf
addr16
fisubs
and
xchg
sar
sbb
push
sahf
or
or
jb
inc
insl
daa
or
jb
mov
jg
mov
xlat
in
adc
or
shl
lods
add
or
rolb
pop
jecxz
mov
fs
mov
insb
jbe
mov
push
push
das
fisubrl
sub
cmc
imul
sub
add
jbe
sbb
in
add
loop
mov
push
inc
test
xchg
mov
sbb
out
test
loopne
lcall
jb
adc
lods
or
mov
fildll
mov
mov
aaa
mov
outsb
enter
lret
out
aas
push
xchg
ficomps
std
mov
stos
mov
jmp
dec
push
stos
ficoms
iret
push
lds
mov
cmpb
push
inc
movsb
ja
xor
push
or
ror
sahf
bound
adc
mov
leave
mov
jg
xchg
inc
adc
ret
orl
mov
push
test
stc
out
loope
shrl
mov
or
mov
fidivl
mov
pushf
and
xor
lods
in
out
repz
test
lds
mov
cltd
push
mov
rcr
cmpb
bound
fs
inc
sarb
ds
fiaddl
ja
ret
xchg
sbb
sahf
add
fiaddl
out
mov
push
js
fdivrl
cli
sub
repz
push
cmp
sahf
mov
lods
pop
in
and
push
out
and
loop
mov
xor
sub
shrb
inc
dec
sub
fisubl
in
mov
and
pop
repz
mov
cmpsb
sub
lahf
cld
scas
stos
or
sub
sarb
in
mov
dec
pop
xor
xchg
push
mov
dec
movsb
mov
lcall
loopne
xlat
adc
pop
mov
sti
jle
mov
popa
xchg
movsl
fnstsw
push
mov
cmp
js
or
inc
xor
lahf
loop
mov
sub
enter
jecxz
test
out
jne
xlat
xor
in
ss
int3
mov
int
nop
add
pusha
sub
jbe
outsb
mov
icebp
aam
push
pop
rolb
jle
aad
cmpsl
sub
jecxz
cmp
sub
call
mov
movb
mov
mov
bound
imul
stos
sti
fistpl
lods
scas
inc
fcoml
push
les
int3
decl
fcomps
sub
sbb
test
cmovbe
xchg
add
mov
sbb
xor
adc
in
repnz
jle
adc
fnstcw
pop
dec
mov
enter
cmp
hlt
scas
fiadds
push
inc
xchg
loop
sub
xchg
cld
dec
cmp
fcmovnb
cmpsl
aas
mov
xorb
int
and
dec
mov
les
gs
ss
aas
dec
rol
push
mov
cmp
or
sbb
ss
sbbb
repz
ret
aam
mov
ds
divl
push
push
push
js
es
dec
mov
mov
push
xor
mov
add
pop
dec
ljmp
push
lret
out
sbb
pop
mov
rolb
add
pop
enter
cmp
fcoml
out
push
mov
nop
and
rorl
mov
cmp
dec
iret
rcll
cs
sbb
add
inc
ficomps
cmp
cmpsb
fmul
fisubrl
xchg
lea
nop
add
es
and
out
xchg
mov
fistl
jp
je
push
orb
pop
push
out
xchg
cmp
ds
mov
xchg
xchg
gs
add
push
mov
out
pop
loop
lcallw
xchg
cmp
outsb
mov
inc
es
jmp
hlt
cmpsl
inc
rclb
fidivrl
bound
inc
sti
imul
and
xsha256
cmpsb
xchg
mov
dec
add
fidivl
ret
sar
xchg
and
iret
cmp
dec
jmp
push
push
aad
rol
mov
xchg
ss
pop
mov
lar
xchg
add
in
ljmp
mov
ret
dec
les
add
imul
jbe
pop
cmp
in
xorb
push
add
shll
inc
daa
out
adc
sahf
dec
pop
incl
and
mov
test
out
dec
hlt
sbb
sub
sahf
mov
sbb
aas
sub
ss
adc
sti
and
xlat
push
stc
adc
les
push
shrl
out
xor
mov
dec
pop
dec
addb
es
out
cmp
aas
inc
fldt
mov
cmp
push
ds
iret
push
dec
test
dec
or
mov
dec
sbbb
pop
je
xor
xchg
xlat
adc
jns
mov
cwtl
mov
and
sub
jmp
out
inc
mov
test
subb
pop
inc
xchg
sbb
sub
inc
sub
out
sbb
xlat
ljmp
movsl
xchg
ss
addl
mov
or
aam
rcll
aam
imul
idiv
and
test
add
inc
push
sbb
xor
sbb
sbb
mov
mov
ss
and
daa
inc
push
push
xchg
cmpb
je
mov
add
inc
mov
xchg
int
adc
xchg
sub
sbb
ss
mov
mov
mov
jge
pop
iret
ret
ljmp
mov
ds
cmp
fcmovnb
jg
lds
dec
daa
mov
dec
lret
mov
push
mov
into
xor
lret
push
fidivs
mov
loopne
lahf
xchg
pop
into
dec
sahf
aad
femms
es
roll
cmp
hlt
sahf
ficompl
adc
dec
sbb
sub
mov
xlat
ficoml
mov
lret
add
push
push
or
lock
into
cmpl
add
mov
gs
rcrb
iret
sub
es
addr16
or
mov
outsb
lcall
loop
sbb
inc
shrb
sub
orb
cmpsb
push
dec
dec
sbb
xor
cmp
sarb
mov
or
aam
inc
pusha
es
ss
cmpsl
ds
fcomps
dec
mov
add
je
stos
push
movsb
es
jp
int3
insb
add
or
adc
leave
mov
cld
addr16
pop
imul
jne
adc
sub
mov
or
fidivrl
add
test
ss
sub
loopne
sub
sbb
mov
xor
push
int
scas
out
jecxz
mov
mov
xchg
notl
fisttpl
mov
fidivrs
mov
loop
adc
xor
les
or
push
adc
and
outsb
jbe
lcall
dec
iret
enter
mov
mov
mov
pop
andb
je
out
mov
and
pusha
xchg
pop
mov
sahf
es
data16
pop
xchg
inc
xchg
rcl
lods
pop
xor
mov
out
lahf
cltd
push
xlat
aaa
xchg
mov
fisubrl
xchg
hlt
xchg
mov
mov
dec
xor
ret
xchg
push
ljmp
ds
dec
mov
mov
mov
iret
jno
into
icebp
lcall
orl
mov
adc
sahf
das
mov
das
push
adcb
mov
stos
sbb
pop
jle
sahf
mov
lcall
mov
rcrb
mov
nop
jecxz
es
cli
pop
out
ljmp
push
jl
mov
push
dec
xlat
cmc
ds
mov
mov
enter
inc
es
into
outsb
mov
push
sub
push
lcall
jg
dec
xchg
roll
stos
lret
mov
mov
rcrb
pop
push
inc
and
pushf
sbb
xor
jae
jecxz
imul
aad
repz
sub
shrb
and
xor
pop
setbe
dec
test
lahf
lret
test
mov
imul
jecxz
xchg
lcall
mov
ljmp
push
pop
sbb
xlat
jmp
inc
add
cmpsb
sub
mov
xchg
mov
cmpsl
scas
xchg
into
push
add
jg
cmp
das
mov
and
movd
aaa
mov
mov
xlat
push
pop
lret
int3
out
push
push
popf
pop
fildl
mov
push
xchg
ret
gs
sti
incl
jecxz
adc
adc
movsb
fbld
ficoms
testl
stos
ret
test
pop
push
xchg
lret
mov
inc
lcall
mov
xor
inc
ljmp
iret
clc
test
lcall
dec
mov
dec
sbbb
into
mov
adc
outsl
cli
cmp
cmp
mov
mov
das
cmp
dec
leave
mov
inc
inc
loop
cmp
sub
pop
add
adc
mov
scas
add
xchg
push
xchg
mov
mov
out
aam
mov
push
add
mov
xlat
or
mov
rep
enter
pop
xchg
and
shrl
push
cmp
add
mov
add
xchg
dec
cmp
in
sbb
gs
mov
lahf
jmp
orl
xchg
cmp
imul
ficoms
pop
inc
mov
lods
and
ljmp
mov
lea
bound
push
push
sbb
sub
lock
outsl
mov
pop
loope
int3
test
sti
mov
dec
adc
jmp
mov
xor
mov
xor
sahf
es
lahf
pop
fisubs
add
scas
outsb
mov
push
lods
mov
mov
push
cmp
and
aam
xor
icebp
sbb
outsb
lock
xchg
sahf
cmpsb
cmpsl
out
bound
mov
add
scas
sub
lods
push
or
stos
push
mov
cltd
mov
push
mov
xor
jbe
jg
ficoml
jecxz
fdivrp
daa
mov
xchg
mov
movb
std
pop
lahf
into
adc
dec
or
sub
sahf
in
aad
pop
xchg
or
adc
cmpsb
sbb
xchg
out
jo
mov
ss
loop
enter
ficoml
mov
cs
arpl
inc
mov
sub
movsb
sbb
or
fcomip
cmp
or
jno
lods
xchg
aad
mov
and
sahf
ljmp
mov
fiadds
fidivl
mov
ret
cmp
adc
andnps
mov
mov
push
and
ret
dec
cmp
dec
das
scas
push
xchg
outsb
add
mulb
push
mov
adc
jo
ret
icebp
dec
jl
popf
idivb
iret
mov
dec
fisubrs
arpl
lds
les
icebp
fs
and
fisttps
xchg
push
mov
sbb
mov
imul
gs
push
loopne
shll
xcrypt-ofb
cmpsl
out
jmp
test
aam
repz
xchg
enter
mov
pushf
push
dec
jno
and
iret
loop
pop
push
ss
mov
call
cmp
inc
insl
loopne
mov
cmpsb
jecxz
sub
imul
cmpb
push
inc
ficomps
cld
imul
sarb
ds
cmp
out
cli
xchg
xchg
es
push
mov
cmc
loop
push
fcomi
add
orl
cmpsl
pop
ljmp
cmp
addr16
xchg
mov
or
xchg
xchg
das
jecxz
out
jecxz
icebp
mov
dec
push
mov
fcmove
push
cmpsl
sbb
inc
dec
ret
or
in
push
xlat
push
ljmp
sub
sub
mov
std
or
pop
mov
lret
pop
xor
std
jmp
jl
xchg
xchg
mov
or
fcoml
mov
add
mov
push
dec
cmpsb
mov
aas
add
push
push
je
shll
mov
mov
or
push
xor
mov
imul
fistl
andb
mov
in
es
push
push
and
loop
imul
mov
mov
ljmp
or
sbb
mov
push
sbbb
add
mov
push
jno
fisubs
je
negl
lock
imul
fistpll
cmp
ret
or
cmpsl
shll
adc
cli
pop
mov
pop
stc
jecxz
in
xchg
push
mov
dec
sbb
cmpsl
outsb
mov
loop
and
fisubrl
push
mov
fistpl
mov
jae
mov
adc
push
adc
movsb
xchg
ficomps
add
subb
rolb
scas
aam
subb
jecxz
inc
add
mov
mov
sbb
and
gs
sti
jl
out
ret
lods
ret
dec
negl
stos
push
push
ss
sub
sbb
mov
adc
icebp
ret
jnp
mov
int
jno
inc
pop
sbb
pop
mov
aam
jne
outsb
xchg
or
jmp
fistpll
movsl
sti
inc
xor
ret
shll
push
push
add
xchg
push
mov
push
sahf
push
xlat
mov
ljmp
negl
mov
rcrb
aaa
dec
mov
xchg
mov
pushf
imul
sub
repnz
xor
lret
ret
lods
pop
cwtl
sub
xchg
sbb
xchg
dec
es
mov
inc
sbb
in
pop
fstpl
xchg
push
cmp
mov
adc
fdivp
repnz
push
imul
test
mov
mov
ss
xor
faddl
xchg
ret
mov
mov
sub
ljmp
imul
sahf
pop
fidivs
pop
gs
hlt
or
ficomps
scas
pop
clc
in
cmp
outsb
lahf
fildl
add
cmpb
push
shr
fsubrs
fidivs
ret
push
mov
aam
xor
jle
and
mov
push
aas
push
and
fsubs
aaa
xlat
imul
shlb
sahf
push
pop
xchg
or
fbstp
cmpsb
push
outsb
push
sbb
lods
stos
js
ret
into
cmpsb
and
repnz
adc
shrl
dec
add
fnstsw
lret
push
loop
outsb
stos
mov
xchg
loop
cs
test
ljmp
cwtl
dec
je
add
adc
mov
imul
ds
es
adc
push
pop
cld
or
pop
adc
in
mov
or
push
neg
adc
mov
iret
or
test
bound
or
dec
adc
int3
lahf
mov
ror
sahf
xchg
in
inc
loop
movl
push
lock
dec
cli
or
or
mov
dec
hlt
pop
sub
iret
and
test
movsl
dec
cmp
push
or
dec
pop
out
push
stos
inc
or
push
int
or
adc
lods
push
dec
mov
mov
fdivrp
pop
or
fbld
xor
mov
or
sbb
mov
pop
sub
lahf
daa
sbb
movb
or
cmp
inc
fcmovnbe
and
filds
dec
add
push
push
push
imul
jl
stos
aas
xchg
rep
xchg
cmp
mov
mov
fbstp
mov
mov
mov
or
xchg
mov
xor
cmc
mov
ret
aad
data16
xchg
fimull
fildll
adc
dec
aas
adc
fistl
movsl
dec
data16
sbb
dec
push
lahf
xchg
add
imul
mov
sub
xlat
out
lock
adc
mov
cmp
sahf
lcall
outsb
dec
mov
cli
ret
cld
mov
rcl
fiaddl
shll
in
arpl
sbb
aad
out
ficoms
into
cmpsb
mov
push
in
sub
pop
iret
rolb
ret
ficomps
iret
ret
cmp
mov
bound
into
sbb
pop
es
jae
jb
sub
push
xchg
cmp
movb
cmp
sub
add
jg
mov
ret
shl
add
push
dec
andb
imulb
jmp
push
and
xchg
shlb
mov
xchg
stos
add
mov
lahf
ss
or
pop
insb
cmp
cmp
or
xchg
scas
sbb
add
mov
and
imul
push
loop
fucomp
jecxz
adc
shll
mov
add
add
test
scas
push
rolb
mov
push
and
lock
inc
mov
adc
es
inc
loop
mov
mov
sub
scas
testl
push
rcl
shll
inc
cmp
pop
sbb
mov
cmpb
es
xlat
add
sbb
xchg
mov
iret
js
insl
sub
mov
pop
cmc
outsb
sbb
loop
mov
sub
repnz
inc
push
xor
cmp
and
inc
fsubp
mov
fs
push
sbb
sbb
sub
popa
add
jb
repnz
mov
pop
push
lahf
daa
leave
adc
jp
outsb
stos
shlb
popa
ficomps
insl
lcall
xor
into
out
bound
rorl
pop
imul
bndldx
jnp
push
cmpsb
mov
fstps
cmp
lcall
dec
pop
into
gs
mov
and
push
mov
and
roll
nop
xchg
push
out
sahf
mov
icebp
imul
mov
dec
sub
or
mov
or
mov
or
cmp
jle
pop
sub
or
sbb
icebp
dec
lods
pop
fcomi
mov
arpl
fstpt
mov
mov
add
add
sbb
cmp
mov
test
xchg
and
es
pop
pusha
xchg
int
fisubl
cld
nop
scas
or
sbb
dec
lcall
gs
inc
push
test
jne
sahf
and
pop
mov
pop
es
cld
xlat
rolb
jge
sbb
add
fiaddl
mov
jle
in
lahf
mov
hlt
mov
mov
ret
inc
ret
mov
mov
push
inc
xchg
data16
lahf
mov
jmp
filds
ret
ljmp
inc
pop
pop
into
xchg
shrb
lret
push
push
out
aas
push
cmpsb
mov
add
rcr
cli
add
adc
pop
jge
daa
xchg
push
inc
sbb
sar
ficompl
add
mov
mov
aas
xchg
jp
clc
inc
loopne
push
push
loop
idivb
fstpt
andl
mov
cwtl
lcall
ljmp
aaa
mov
sbb
scas
cs
sbb
imul
iret
push
cmp
jbe
xor
cmp
lods
ret
ds
sbb
pop
push
cmc
fwait
shrb
mov
test
adc
rcll
and
lcall
xchg
sbb
in
dec
pop
in
jmp
ficomps
sub
repz
xlat
mov
xchg
sub
mov
or
push
sub
cltd
add
fisttpl
iret
outsb
popf
mov
pop
dec
mov
xor
cmpsb
xlat
rorl
adc
movsl
cmpsb
jno
leave
ss
push
adc
pop
mov
adc
pop
push
cmc
aam
ss
aas
mov
xor
jg
pop
cmp
xor
ret
push
mov
enter
xchg
mov
cwtl
mov
mov
mov
push
es
fdivp
mov
pop
rorb
fildll
cmp
push
out
test
or
sub
shlb
xchg
push
es
cmp
out
std
jmp
popa
push
leave
add
iret
and
sub
fidivl
bound
scas
pop
movb
sub
out
into
jl
and
das
xchg
arpl
ret
xchg
fcompl
mov
inc
daa
leave
mov
add
sbb
stos
and
aam
mov
mov
xor
inc
sub
pop
in
xchg
jbe
fidivrl
mov
push
loop
mov
cmp
outsb
cwtl
xorl
jne
cmpsl
sub
sbb
stos
push
dec
pop
cmpsb
fistpll
pop
mov
sarb
std
add
mov
fisubs
mov
arpl
mov
mov
stos
addl
adc
lcall
ret
jge
je
pop
in
xchg
gs
out
aad
sti
filds
cmp
into
ss
xchg
xchg
mov
ds
cs
sbb
push
and
push
adc
cld
adc
inc
mov
cmp
mov
or
xchg
pop
xchg
or
push
subb
outsb
repz
mov
ss
sahf
mov
adc
mull
gs
orb
lahf
es
push
iret
out
push
pop
push
scas
and
out
xor
push
enter
int
andl
mov
push
xor
loop
dec
mov
lea
aas
cmp
inc
adc
mov
mov
jl
xor
pop
mov
pop
mov
pusha
xchg
mov
ss
lds
out
mov
adc
fdivr
dec
cli
cs
out
data16
push
leave
incb
cmp
fistps
mov
jp
add
xchg
xchg
ss
xlat
loop
or
subb
inc
xlat
or
out
rcl
push
push
fsts
and
push
mov
inc
mov
or
dec
mov
es
test
inc
outsb
in
cmp
outsl
mov
aas
js
mov
cmp
ret
adc
loop
out
mov
mov
push
mov
sub
pop
and
dec
cli
push
mov
push
shll
outsb
ja
jle
jecxz
mov
cmpsb
in
push
pop
lret
cs
inc
outsl
lcall
xchg
adc
mov
lea
xor
pop
pop
inc
xchg
sbb
inc
mov
xlat
lea
lahf
add
sub
ljmp
mov
inc
add
cmpsb
aad
jb
pop
shlb
push
rsqrtps
ss
faddp
push
ljmp
lods
sbb
aaa
es
ss
pop
push
xlat
mov
push
inc
ret
add
cmpsb
mov
add
lcall
cmp
mov
ss
mov
xchg
ret
add
push
push
sub
es
pop
jl
loop
jno
aaa
or
outsb
and
jo
mov
popf
push
mov
loopne
fcmove
lcall
rclb
loopne
push
sbb
fistl
mov
adc
xchg
xchg
fucomip
inc
xor
stos
mov
es
iret
xchg
push
nop
and
rcrl
scas
imul
fimull
ja
inc
and
scas
aad
cmpsl
cmpsb
out
dec
addr16
test
push
imul
mov
inc
pop
cs
jo
pop
cld
cmovnp
lcall
imul
jge
pop
mov
sub
mov
mov
cmp
mov
fisubrs
sbb
mov
jmp
into
fsubrl
rol
cld
push
out
add
xlat
stos
aam
data16
or
ds
js
pop
movl
and
xchg
cs
mov
jmp
mov
ret
ds
mov
push
je
pop
sub
push
add
rcl
ljmp
cmp
mov
mov
ljmp
cmp
add
bound
mov
lret
rorl
mov
sub
push
cmpsb
addr16
xor
movb
and
push
es
gs
pop
pop
or
scas
adc
jg
or
ret
testl
add
sahf
cmp
cs
jbe
mov
xchg
mov
xor
fisubrl
jge
adc
add
into
jg
test
push
testl
push
fldt
dec
ljmp
inc
incb
popa
xlat
mov
bound
pop
aad
out
fcoml
sbb
push
push
imulb
rcll
dec
sahf
mov
mov
out
ds
and
xor
mov
mov
xchg
inc
and
fcompl
outsb
mov
fisubl
sbb
push
mov
mov
mov
mov
mov
iret
mov
roll
aad
in
push
xchg
cmp
dec
scas
sahf
sub
push
sub
mov
es
inc
push
mov
ror
std
leave
sbb
pusha
dec
xor
push
jne
xchg
movl
pop
loope
out
push
add
dec
cmc
mov
aam
out
mov
push
out
xchg
in
fimull
push
loop
xor
mov
add
outsl
ret
inc
cmp
cmp
and
cld
outsb
push
cld
cmp
sub
shl
lret
cmp
ret
push
ds
lods
cmc
mov
xchg
mov
push
aad
arpl
mov
data16
lahf
mov
mov
add
sub
dec
mov
dec
adc
out
insb
ss
sbb
ljmp
dec
sub
push
and
mov
xor
push
stos
cmpl
adc
push
mov
lcall
mov
inc
fsubl
scas
daa
loop
and
push
push
out
call
pop
lods
push
mov
and
adc
cs
and
lock
inc
sub
shlb
scas
fists
dec
sbbb
ret
mov
mov
inc
pusha
mov
dec
sub
push
cmpsb
loope
mov
out
cmp
xchg
push
sbbb
or
sbb
fisubl
push
xchg
mov
cmc
leave
ss
mov
push
xchg
jmp
test
es
dec
movsb
xchg
jle
rcrb
add
xlat
ja
pop
lahf
rcr
mov
stos
or
mov
ret
sub
cwtl
cmp
dec
sbb
bound
and
push
fildl
push
rorl
push
fcmovnb
inc
and
pop
sub
push
gs
inc
addl
or
scas
xchg
xor
shlb
mov
into
pop
roll
xor
mull
cmp
imul
mov
sbb
push
push
stos
movsb
push
outsb
add
test
pop
into
ret
push
scas
jg
fiadds
mov
pop
jbe
xchg
mov
ret
pop
mov
pusha
idivb
fstpt
xlat
push
and
sub
out
subb
mov
sbb
inc
addr16
loop
inc
cmp
sahf
jl
shll
or
xchg
in
dec
add
pop
shl
imul
mov
fisubl
cmp
pop
sahf
dec
call
shll
mov
daa
adc
xchg
xchg
xchg
outsl
bound
ret
test
shr
rcrl
adc
xchg
xchg
adc
cmp
faddl
subl
mov
ljmp
inc
scas
cs
insb
add
adc
loopne
lods
test
hlt
stos
push
fbld
push
xorl
add
outsb
xchg
sti
cmpl
push
stos
subb
inc
or
hlt
and
ret
insb
push
je
rcr
mov
mov
cmpb
jg
test
dec
cli
push
loope
mov
cmovp
aad
jg
xlat
cmpsb
xchg
les
fucom
mov
xchg
mov
cmp
pop
push
shrl
cld
fs
adc
cmp
into
rcr
sub
loope
xchg
cwtl
sbb
ss
push
lret
cmp
bound
cld
inc
mov
sarb
rcrb
dec
sub
popf
and
xor
dec
stos
cmp
mov
mov
push
and
inc
ret
test
xchg
movsb
stc
jp
pop
sub
xchg
add
ret
jne
push
es
aaa
ret
pushf
pmaddwd
lcall
sbb
lods
dec
pushf
cld
incl
mov
push
lret
dec
cli
movsb
insl
or
adc
and
stos
cmp
pop
ret
xchg
iret
in
cmpsl
lock
outsb
inc
movsl
gs
mov
push
pop
xchg
dec
mov
daa
ljmp
xlat
jmp
fisubs
ret
pusha
roll
mov
fsubl
push
cmc
push
mov
test
dec
pop
daa
out
mov
into
loop
mov
mov
ss
lds
push
xor
std
notl
sub
fisubrs
pop
idivl
adc
mov
outsb
fdivr
clc
push
mov
pop
mov
push
xchg
idivb
ret
push
mov
fsubl
push
push
mov
jge
rolb
call
pop
sub
mov
xor
aad
bndldx
bound
es
lcall
xor
push
inc
xor
jecxz
and
ficompl
or
lods
in
outsb
push
in
lret
push
testb
sarb
outsb
push
adc
and
push
lahf
jae
lcall
inc
fidivs
or
xlat
ljmp
ret
loop
mov
subb
fisubl
int
push
push
cmp
cmpsb
xlat
stos
xor
repz
outsb
mov
outsb
int
repz
out
aam
xchg
dec
cmc
dec
xor
ficoml
and
push
fisubrs
and
into
adcb
fldz
mov
mov
insb
push
outsl
sbb
mov
push
and
jo
push
stos
outsl
es
push
movsb
or
sub
jbe
mov
mov
aaa
enter
cmp
cmp
push
mov
outsb
mov
dec
pop
repnz
outsb
mov
inc
mov
dec
imul
xchg
sub
sbb
lods
mov
dec
mov
cmc
adc
lahf
mov
pop
push
hlt
inc
mov
stos
jbe
mov
stos
or
or
mov
fistpl
mov
mov
dec
push
inc
out
adc
cmpsl
outsb
je
sahf
cmp
pop
pop
inc
xor
xchg
fdivrl
outsb
ljmp
or
or
iret
push
mov
mov
and
mov
insb
pop
add
or
jne
aas
test
jecxz
sbbb
rorb
int
mov
addl
ret
pop
fdiv
mov
xlat
enter
mov
mov
es
shl
ret
xchg
xor
daa
cmp
es
ss
push
ret
push
pop
push
and
inc
ret
fiadds
dec
aad
mov
xchg
in
cmpsl
sahf
mov
cmp
ret
es
sbb
dec
push
sbb
leave
testl
fistpll
insl
push
push
mov
or
jge
gs
or
mov
push
aad
sahf
push
push
push
hlt
and
mov
pushf
cmp
neg
or
fcmovb
hlt
mov
ss
loop
out
push
mov
and
sub
out
cmp
dec
pushf
dec
ret
xchg
mov
jbe
push
pop
mov
xchg
popf
dec
das
andb
or
adc
in
push
push
mov
sub
fists
hlt
ja
repnz
lds
stos
pop
lret
mov
sub
adc
shrb
mov
test
mov
mov
mov
cmp
loop
cmp
pop
xchg
sbb
pop
iret
pop
in
mov
test
xchg
ljmp
xlat
add
sub
lret
daa
push
fisttps
aas
in
cmp
mov
sbbb
xchg
mov
adc
lcall
sbb
aad
jno
xchg
ds
sub
cmp
outsb
neg
lcall
aas
push
scas
push
into
push
cmpsl
fidivrs
or
mov
cmp
sbb
mov
cmp
mov
push
or
mov
fidivl
cmpsb
ss
divb
mov
daa
xchg
jae
jae
xchg
hlt
mov
xchg
fisubl
imul
dec
push
and
outsl
xchg
adcl
roll
or
or
push
adc
adc
mov
cmpsl
mov
jge
add
pop
add
sbb
lds
push
repnz
subb
and
sbb
loope
ja
ss
lcall
into
ret
cmovbe
and
push
imul
mov
adc
push
jl
xchg
jecxz
mov
sbb
std
pop
or
mov
in
ds
stos
jmp
pop
out
sbb
inc
mov
push
pop
pop
xchg
fisubs
test
and
repnz
inc
cmp
dec
movsb
push
ret
loope
sbb
pushf
jp
sbb
and
mov
xlat
mov
cmpsb
mov
pop
out
pop
or
cs
or
xor
outsb
fstp
cs
sahf
cmp
mov
movsb
cmp
pop
lock
stos
imul
dec
cs
jnp
jno
in
add
sub
inc
push
xor
xchg
iret
jecxz
pop
mov
pop
push
xchg
jae
jmp
jmp
mov
pusha
ret
cmp
or
push
lret
fistl
cmp
loopne
sbb
mov
push
push
ss
lock
stc
jnp
scas
fcomp
xor
ljmp
lea
aas
leave
dec
loop
pop
or
int3
xchg
out
lock
cmc
lds
pop
or
pop
mov
leave
int3
jb
ret
aad
divb
xor
mov
out
xchg
dec
mov
push
sbbl
in
adc
and
sbb
xor
add
jbe
xchg
xchg
dec
or
mov
scas
pop
cmpl
add
sub
fisubrs
add
inc
push
inc
leave
imul
ja
fists
cmp
movsb
xor
ret
xchg
ljmp
insl
mov
push
and
lea
push
add
jl
jnp
sbb
ja
lahf
iret
xchg
out
dec
mov
adc
lcall
or
movsb
jbe
ss
mov
fisubrl
dec
push
inc
mov
mov
push
dec
repnz
hlt
jae
in
fistps
ds
jg
out
push
sub
and
fucomi
mov
jne
ds
push
adc
inc
es
jmp
xor
lea
pop
ss
cmp
xchg
loop
pushw
notl
push
push
fidivrs
inc
cmp
aas
cmc
push
mov
lcall
orb
xchg
ljmp
rcrl
outsb
in
add
pop
inc
lret
inc
adc
mov
call
adc
iret
mov
add
fbstp
fiaddl
es
shlb
or
jp
push
test
sbb
bound
aaa
mov
or
and
dec
stos
inc
push
jae
test
inc
iret
push
iret
ret
and
push
inc
or
cs
sub
rcrb
movsb
pop
data16
out
sarl
jp
adc
push
std
call
ds
mov
or
or
mov
add
ss
cwtl
std
jle
fists
push
xchg
xchg
jecxz
mov
pop
or
mov
pop
inc
pop
sbb
push
mov
and
sub
fisubrl
inc
mov
mov
daa
xor
mov
cmp
mov
test
sbb
mov
es
inc
push
sahf
cmp
pop
mov
adc
ds
ficoms
clc
ss
movsl
es
mov
xor
sbb
xor
xor
push
mov
mov
push
in
sub
cmpsb
in
sub
sub
mov
dec
push
cmp
add
jecxz
sbbl
lods
cmpsl
repz
in
dec
sbb
ljmp
addr16
test
or
cmp
push
andl
push
add
pop
mov
pop
inc
outsb
cmpb
push
scas
iret
inc
mov
addl
xlat
fistl
or
mov
daa
xor
scas
cmpsb
push
adc
push
mov
inc
or
sbb
mov
out
cmc
push
ret
scas
dec
or
cmpsb
and
inc
outsl
push
aad
sbbl
xorb
pop
je
push
sub
out
icebp
inc
xchg
rolb
rorl
inc
lcall
jbe
cs
or
fcoms
ret
xchg
sbb
mov
pop
xchg
push
pushf
iret
xor
rclb
add
mov
es
and
fistpll
fdivr
mov
xchg
mov
loop
add
jae
hlt
outsb
and
imul
ss
mov
push
jl
dec
mov
bound
sub
push
mov
sbb
sbb
push
xor
or
nop
inc
push
mov
cmpsb
mov
dec
inc
ret
dec
je
ds
aas
push
outsb
jle
mov
imul
in
or
push
push
ret
test
mov
inc
and
push
ljmp
pop
xor
mov
mov
addl
sub
ret
fildl
pop
cmpsb
leave
lahf
xchg
outsb
into
je
inc
mov
ss
add
mov
stos
push
mov
jbe
frstpm(287
cmp
shufps
and
and
sbb
insb
mov
inc
push
mov
scas
int3
push
push
sbb
popa
xchg
and
aaa
out
iret
and
inc
push
testb
out
xchg
mov
pop
loop
ljmp
aam
lret
mov
push
test
outsb
imul
cmp
pop
cmp
sahf
xor
or
cmp
lret
mov
lcall
out
roll
mov
test
lahf
cmpsb
xor
mov
jae
push
loop
je,pt
es
into
ljmp
cs
fildl
fwait
add
adc
ret
aad
loopne
add
ret
cmp
sub
mov
stos
addr16
xchg
addl
sbb
jle
dec
sub
add
push
cli
nop
sub
leave
addr16
cmp
mov
push
bound
neg
rorb
xchg
xchg
ret
mov
xchg
xor
shll
cmpb
cmp
je
es
mov
clc
mov
pop
push
jecxz
jl
xor
mov
push
and
cmp
inc
into
xor
idivb
adc
int
xchg
ret
mov
pop
repz
xchg
add
pop
or
push
inc
add
rcrb
int3
xchg
mov
xchg
push
ficoms
jge
ljmp
xchg
fcmovne
inc
cld
sbb
dec
in
loop
lcall
sbb
xor
add
push
mov
addb
jle
in
cmp
imul
jne
xor
bound
scas
push
repnz
push
lock
std
mov
shlb
mov
outsl
mov
sbb
out
push
ficoml
scas
lock
pop
push
push
mov
andb
inc
or
pop
addb
aam
inc
xor
push
pop
xchg
fldt
mov
shr
adc
aad
ficoms
into
jns
jmp
daa
cmpsb
dec
push
ret
ljmp
xchg
outsb
mov
outsb
cmp
adc
mov
and
xlat
mov
add
inc
push
cmp
mov
mov
or
pop
fisttpl
out
cs
hlt
push
lcall
fnstenv
adc
push
ret
pop
outsb
stos
xchg
cmp
shr
idivb
mov
mov
jecxz
push
xchg
push
push
cmpsb
or
dec
pop
arpl
xor
mov
push
hlt
jbe
iret
fistpll
jmp
shr
mov
enter
loope
cli
jno
mov
adc
sbb
inc
mov
mov
push
mov
stos
or
cmp
pop
bound
push
pop
notl
outsb
int3
ret
mov
mov
pop
sub
idivb
cmpsb
mov
xchg
and
incb
fldenv
fsub
and
mov
fs
sbb
push
sub
push
and
insb
dec
cmc
adc
xchg
es
xchg
or
xor
adc
mov
lock
sbb
cmpb
cmc
dec
ficompl
bound
outsb
xchg
pop
lahf
cmpsl
addr16
adc
fists
dec
sub
sbb
pop
stc
pop
sub
addr16
push
mov
mov
sbbb
cmp
mov
inc
lcall
or
push
fwait
push
mov
add
cmpsb
or
push
js
in
popa
push
sub
lahf
xchg
push
jecxz
xchg
adc
adc
es
jecxz
mov
pop
mov
xor
sub
jecxz
dec
lcall
and
mov
ret
or
inc
or
xchg
mov
into
xchg
xchg
cmpsb
mov
shlb
mov
iret
dec
add
andl
ret
loop
pop
mov
in
outsb
pop
inc
push
xlat
imul
fidivrl
cmp
scas
jecxz
mov
pop
lods
or
and
into
loopne
push
sub
fidivrs
lcall
sub
pop
sub
mov
mov
xchg
les
sub
xlat
mov
and
push
add
ret
lret
outsb
inc
ds
push
and
mov
cmpsb
xor
mov
mov
dec
mov
sahf
cmpl
pushf
push
les
push
push
push
out
push
dec
test
ret
add
cmc
cs
ljmp
and
call
cmpsl
es
jg
mov
hlt
xchg
sahf
fstpt
stos
xor
inc
gs
xor
lds
mov
mov
mov
lcall
outsl
xlat
fcompl
ss
xor
lret
and
and
cmp
push
or
inc
repnz
push
add
mov
es
shlb
add
adc
in
jge
pop
pop
push
mov
xchg
movb
sarl
push
loop
stos
aas
sahf
leave
popf
jne
mov
sub
loopne
pop
ljmp
aaa
push
cli
adcl
cmpsl
push
mov
pop
mov
adc
mov
ficoms
js
cld
push
int
popl
push
push
jnp
out
mov
inc
test
mov
enter
add
xlat
movsl
movsl
ret
dec
pop
add
pusha
ds
and
bound
neg
ret
outsb
sub
sbbl
out
inc
addr16
xchg
pop
push
mov
enter
mov
vshufps
aad
es
ficoms
sub
sbb
es
inc
xor
addr16
xlat
lcall
lret
sub
mov
scas
and
push
es
into
push
rorb
jg
jmp
or
fsubp
imul
push
push
mov
pop
jo
sub
scas
add
push
je
or
into
mov
ss
or
out
ds
inc
mov
xchg
mov
loop
test
xor
mov
pop
mov
add
imul
mov
jecxz
sahf
lock
iret
inc
int3
ljmp
mov
mov
xchg
jmp
int3
adc
loope
sahf
jecxz
addr16
cs
and
push
mov
int3
inc
dec
pusha
xchg
iret
lahf
stos
sbb
lret
dec
sub
movsb
xor
dec
pop
jns
or
inc
imul
mov
xchg
mov
adc
lahf
adc
xchg
add
out
mov
rolb
aad
push
in
fsubrl
push
push
ljmp
xchg
out
rcr
out
mov
xchg
sbb
es
fcmovb
outsb
push
jae
movb
je
inc
jno
dec
pop
push
cmpsl
dec
push
mov
jg
nop
repnz
bound
iret
xchg
inc
pushl
out
cmpsl
adc
cmp
and
inc
mov
sub
inc
mull
sub
cmp
xor
mov
pop
push
pop
push
add
lcall
pop
jne
scas
into
aad
mov
sahf
mov
mov
fildll
addb
xor
iret
cli
rcrb
enter
cwtl
adc
mov
jecxz
fsubrs
adc
mov
iret
inc
add
testb
add
xchg
bound
call
ret
gs
shll
fnstcw
fistps
push
imul
fstpl
das
mov
jno
dec
dec
push
dec
mov
mov
xor
mov
cs
icebp
push
xchg
mov
orb
and
mov
out
mov
xchg
jbe
mov
jno
or
or
rolb
xor
iret
mov
pop
pop
test
lcall
addr16
pop
rorl
cli
mov
jecxz
push
enter
xchg
andb
and
mov
cmpsb
iret
int3
or
fwait
xorb
frstor
sub
mov
xlat
sub
sub
xchg
lcall
xor
dec
mov
cmp
outsb
adc
sbbl
ret
lahf
pop
jecxz
jecxz
mov
es
sahf
pop
push
cmp
arpl
das
iret
jmp
add
add
imull
xor
mov
ss
push
je
sub
sub
repnz
adcl
xchg
sbb
push
xor
into
ds
loopne
xor
aad
cld
mov
jecxz
cli
aad
imul
ret
fbstp
xchg
mov
es
into
push
pop
push
add
mov
sub
es
xor
scas
ret
cs
stc
es
loopne
dec
loop
mov
sahf
or
push
jecxz
shl
add
xor
mov
bound
sub
bound
mov
ds
scas
xchg
aam
adc
rclb
adc
jbe
ret
scas
adc
jns
mov
orb
loop
addr16
add
push
jbe
mov
jne
ret
push
mov
in
mov
loope
mov
movsb
mov
dec
and
in
mov
ss
div
pop
and
inc
cmpsb
cmc
push
and
or
jge
movsb
xor
andb
inc
sub
push
fistl
orb
imul
les
pusha
outsb
rorl
icebp
mov
push
or
ret
lea
or
push
ficomps
shl
fs
xor
mov
sarl
and
mov
push
stos
lcall
je
ljmp
repnz
fcompl
pop
or
push
and
inc
cld
stos
aaa
mov
je
xor
adc
bound
dec
scas
sbb
push
call
adcb
imul
xchg
adc
jns
test
xor
push
sbb
cmp
xor
pop
or
mov
mov
and
push
orb
cmc
sbb
fiadds
shrb
and
or
cltd
sub
push
and
dec
or
int3
gs
iret
mov
xchg
push
inc
push
fistl
xor
ficompl
add
adc
outsb
inc
mov
add
mov
aad
cmpb
mov
mov
leave
das
adc
xchg
ss
xor
inc
ds
or
jne
add
pop
xlat
scas
cmpsb
mov
pop
push
adc
ss
mov
jg
scas
lcall
les
pop
xchg
shr
aas
adc
mov
cmp
xlat
fidivrl
cmp
lds
dec
xchg
jle
push
mov
inc
outsb
cli
jne
sub
push
cmp
aad
mov
mov
popa
xchg
xchg
mov
jle
xchg
add
ljmp
adc
cmp
push
or
or
les
jno
dec
jnp
addb
insb
sbb
fs
add
push
push
mov
mov
jae
and
stos
rolb
aaa
mov
fisubl
mov
push
sahf
es
lret
inc
sub
fcmove
mov
repz
xor
mull
ret
mov
ja
push
insb
push
rcrl
jne
dec
add
pop
stos
mov
ss
pop
and
outsb
sbb
fidivl
push
in
inc
ret
nop
rclb
ja
mov
mov
mov
lods
sub
dec
pop
dec
fwait
aas
fistps
mov
add
loop
mov
xchg
jbe
fimuls
cmp
mov
stos
inc
out
adc
aas
push
outsb
adc
mov
mov
fimull
iret
mov
push
sbb
loop
mov
add
inc
cli
and
stos
les
or
fsubp
ficoms
imul
cmp
push
dec
xor
in
ret
mov
movsb
out
push
or
cmp
add
ja
push
aad
or
divb
mov
mov
test
mov
push
sub
aam
add
or
push
push
ds
fimuls
pop
sub
stos
push
test
sahf
xchg
push
pop
outsb
xchg
icebp
mov
sbbl
addl
push
aas
inc
cmp
gs
adc
pop
pushf
push
cmp
cmc
nop
xor
add
sub
subl
insb
add
int
add
or
push
enter
setle
and
pop
ss
inc
test
push
lods
iret
dec
sbbb
imul
or
pop
loopne
mov
xchg
mov
sahf
jne
push
xchg
add
movsb
jbe
mov
notb
sub
aad
add
push
es
sbb
fidivs
out
push
mov
fcmovu
fsubrs
push
inc
outsb
mov
xchg
sbb
fbld
push
push
xlat
pop
fiadds
lret
mov
fs
mov
sbb
je
fildll
mov
xchg
push
xlat
jg
cmpsb
gs
ret
ds
cmp
imul
rol
jne
ror
and
xlat
inc
pop
xchg
sbb
adc
cmp
scas
push
or
adc
push
bound
push
ljmp
jns
lods
pop
cmp
testb
mov
mov
sbb
lea
aam
subb
ffreep
jecxz
lcall
adc
daa
mov
mov
mov
into
imul
cmp
daa
dec
jne
cwtl
ja
jecxz
ret
loopne
push
xchg
mov
out
mov
mov
cli
sbb
xor
cmc
push
mov
mov
mov
mov
inc
in
dec
push
xchg
or
aad
push
loop
loop
xor
iret
and
push
push
mov
mov
add
cli
inc
cmpsb
fisubrl
lahf
add
xchg
scas
shll
movsb
mov
lcall
ja
mov
ret
out
shrb
jae
adc
jae
pop
pop
cmp
mov
fcoml
jae
pop
dec
ss
sahf
aaa
jg
ljmp
push
mov
cld
jo
and
sahf
mov
cmp
out
pop
ret
into
jecxz
mov
scas
adc
jecxz
fildl
daa
and
ss
jno
vpsubusb
mov
cmpsb
leave
mov
fsubrl
ljmp
and
scas
mov
outsb
inc
add
ss
push
rorb
xlat
xchg
lcall
push
mov
popf
dec
push
push
aam
push
ds
push
out
push
sbb
adc
mov
cwtl
jne
push
push
in
push
addr16
fisttps
mov
int
xor
iret
push
ja
jecxz
push
mov
out
inc
jbe
mov
bound
testb
sub
mov
je
mov
outsb
les
xchg
mov
rolb
push
xor
out
mov
push
xor
push
ret
es
loop
sahf
in
jmp
imul
stos
or
inc
outsb
push
adcb
and
mov
jae
and
add
sub
push
push
xchg
pushf
push
cmp
push
imul
fcom
filds
ljmp
in
adc
pop
mov
mov
add
or
add
imul
lcall
or
mov
mov
lcall
sahf
pop
push
lahf
mov
ljmp
imul
cld
dec
hlt
mov
andb
push
ss
push
cmpsl
add
out
jne
loop
dec
outsb
fists
add
movsb
divb
push
xchg
dec
sahf
pop
into
push
inc
push
lahf
inc
dec
mov
clc
xor
enter
jecxz
ljmp
mov
out
sbb
mov
test
or
push
and
es
loope
out
ljmp
pop
jge
cmc
jg
repnz
mov
add
mov
cmpsb
mov
xchg
xchg
es
mov
push
and
mov
mov
jmp
pop
in
imull
aam
inc
push
hlt
jmp
fcmovne
int3
dec
mov
outsb
jb
pusha
pop
mov
dec
shll
mov
sahf
lcall
and
sbb
jl
inc
add
xchg
ret
sub
scas
mov
out
inc
pushf
push
sub
inc
pop
sub
xchg
mov
loop
jmp
xlat
iret
push
jp
mov
fisubs
dec
mov
test
mov
mov
push
cmp
inc
mov
and
and
push
mov
lcall
xchg
ret
fsubrp
out
in
xchg
and
jmp
iret
pop
ret
adc
or
in
xlat
xor
push
inc
mov
ss
rorl
fdivrp
push
out
cmpsl
fnstcw
or
add
bound
sbb
sahf
adc
les
xchg
iret
imul
hlt
and
mov
bound
pop
cmc
jg
out
in
or
push
stos
fmulp
aas
mov
adc
aas
scas
and
push
cmp
adc
xlat
xchg
ds
cld
scas
dec
xchg
jns
mov
add
cmc
add
ljmp
push
lret
adc
jle
clc
fstpt
cld
insb
or
out
push
mov
ret
rcrb
mov
sub
xlat
ret
lcall
xchg
cmp
sbb
adc
bound
movl
cltd
mov
mov
inc
ret
mov
sub
lods
add
out
mov
push
lret
rcl
sarl
fcmove
pop
lea
dec
cs
addb
es
or
xchg
leave
imul
aaa
lcall
mov
test
data16
push
bound
iret
dec
sbb
pop
cmp
mov
jbe
roll
inc
cmpsb
lret
mov
ret
lahf
and
push
aad
test
ds
cmc
hlt
xor
pop
xchg
xor
rcl
cmpsb
cmp
bound
loop
mov
sbb
je
sahf
xchg
out
sysret
inc
mov
imul
push
push
out
mov
jmp
jg
xor
inc
or
mov
fnstenv
ficomps
push
jl
mov
es
push
mov
xchg
sub
jne
ds
mov
push
fimull
sub
mov
idivb
push
ret
pop
push
sub
add
push
mov
cmp
cmpps
adc
push
and
jb
or
mov
cmp
pop
je
cs
sub
repz
rcr
or
xchg
sbb
ret
gs
add
ret
push
push
or
inc
ljmp
and
add
test
fs
push
push
ret
lahf
cmpsl
xchg
and
enter
xchg
fsubrs
lcall
inc
iret
lods
xchg
and
add
push
sbb
add
std
or
jae
xchg
lods
mov
enter
mov
sub
mov
mov
mov
push
mov
repnz
and
and
test
mov
lcall
push
cwtl
jbe
shll
or
push
fcmovnbe
mov
add
mov
mov
mov
lahf
xlat
sti
dec
jmp
and
xchg
jnp
fcompl
mov
pop
in
xor
stos
xchg
sub
outsl
ds
mov
incl
jecxz
push
mov
lcall
mov
push
mov
ret
mov
outsl
or
imul
pop
addb
and
jmp
mov
test
xlat
aas
test
dec
andb
xchg
rcrb
pop
xchg
push
je
mov
pop
pop
sub
shll
bound
leave
sub
add
sbb
push
ds
mov
ret
push
insl
push
cmp
sub
mov
stos
cmpsb
mov
pop
out
push
cmc
cmp
andb
shrl
mov
push
pushw
das
mov
pop
inc
sub
lret
sub
fcmovbe
dec
mov
int3
sbb
push
dec
fiaddl
sub
mov
cmpsb
cmp
ds
fcoml
dec
push
icebp
pop
xlat
es
lahf
cmc
cmp
cmp
pop
cmpsb
and
pop
rcll
add
xor
lret
pop
cli
pop
inc
or
adc
pop
outsb
and
sbb
test
cmp
cmpsb
adc
out
jecxz
push
mov
ds
fcompl
xchg
or
push
lcall
pop
mov
or
mov
mov
shl
xlat
mov
mov
adc
xchg
mov
aas
mov
data16
int
stos
idivl
pushf
pop
sub
aas
inc
ret
dec
fildl
sahf
mov
ret
ficompl
divl
outsb
ret
sub
pop
pop
sub
push
add
push
ret
test
mov
pop
in
and
dec
sbb
loopne
push
mov
out
out
jle
pop
sarl
push
mov
mov
sahf
fistpl
out
or
mov
push
push
adc
sub
into
int3
pop
cmp
add
into
jg
sub
or
hlt
pop
inc
fistpl
mov
jp
mov
push
aad
lret
outsb
xlat
sbb
rclb
cmp
or
push
cmp
add
outsb
insb
mov
add
mov
or
push
push
add
enter
dec
rcrl
ljmp
adc
mov
iret
pop
push
xchg
ss
lar
mov
inc
push
dec
push
into
mov
ficoml
xchg
shrb
mov
push
dec
xchg
ret
inc
push
imul
ret
mov
mov
iret
jl
xor
adc
in
dec
xchg
xchg
pop
outsb
mov
rol
adc
or
adc
mov
mov
inc
push
ja
push
push
fidivrl
lcall
inc
push
ss
ret
rorb
dec
insb
add
into
mov
push
push
in
cmp
ljmp
sub
fs
push
fwait
jp
push
shll
mov
lret
fmuls
jne
les
subb
mov
ret
sbbl
test
int3
cmp
ss
jbe
ffreep
push
aam
enter
int3
lret
pop
fnsave
inc
in
enter
loopne
cmp
adc
pop
push
mov
arpl
sub
push
mov
lret
push
stos
out
push
sahf
mov
inc
jbe
inc
or
push
jmp
sub
cmpsb
inc
or
mov
cld
mov
push
mov
cmpsl
cmpsl
mov
adc
mov
mov
fsubrp
xchg
push
fisubl
aad
xchg
xchg
roll
mov
lcall
xor
and
push
fs
out
dec
or
loop
in
sub
aad
push
dec
jo
mov
inc
mov
out
push
push
and
push
add
outsl
stos
dec
push
movsb
jecxz
int3
push
cmp
adc
outsb
out
jg
ret
imul
and
das
ret
lahf
jecxz
push
cmpsl
mov
iret
imul
push
or
pushl
sbb
xorb
jecxz
fistl
pop
scas
nop
mov
sbbb
push
pop
sbb
pop
adc
or
add
push
mov
mov
orb
push
testb
cli
jne
cs
xchg
mov
vpackuswb
ret
es
and
add
fiadds
shlb
cmp
mov
aam
cmpsl
xchg
aad
mov
mov
ss
xor
mov
pop
xchg
cmpsb
xlat
movsl
and
pop
cmp
imul
mov
mov
push
xor
ficomps
pop
mov
hlt
in
jecxz
scas
sahf
es
pop
cmc
mov
xchg
dec
cmp
sub
sub
jbe
mov
jne
ret
ja
cltd
dec
lods
xlat
or
push
or
add
ficoms
or
or
negb
xchg
popf
ja
ret
and
dec
iret
xchg
pop
sbb
ja
lcall
cmp
pop
mov
add
ljmp
dec
cmc
adc
lea
lcall
sbb
sbb
push
push
out
mov
pop
lcallw
cmp
in
loop
shll
jne
iret
jne
dec
adc
cmp
and
in
push
xchg
mov
aad
mov
bound
leave
or
mov
scas
mov
or
orb
jmp
decl
and
and
idiv
fidivs
and
cmpsl
jle
cmc
xchg
sbb
jecxz
roll
jle
mov
shlb
cmp
movsl
mov
xchg
jge
cmp
sub
sbb
into
jecxz
imulb
xchg
in
mov
mov
mov
cli
push
xor
push
sub
loopne
xor
pusha
fmulp
pop
pop
pop
jbe
aaa
xor
decl
sbb
cs
add
or
dec
es
mov
int3
mov
inc
pop
mov
xor
cmpsb
es
push
push
int
iret
mov
ja
lahf
mov
gs
lods
loop
ljmp
or
ss
dec
scas
cmp
fistps
subb
iret
mov
mov
add
or
xchg
jo
push
inc
pop
test
sahf
add
fiaddl
xlat
xchg
add
loopne
fistl
mov
push
push
dec
jecxz
rclb
push
xchg
xchg
push
push
cs
xchg
push
fdivr
pop
loop
adc
cmc
stos
bound
pop
mov
xchg
or
je
mov
lret
add
je
ds
adc
mov
mov
inc
pop
sbb
jo
orl
out
ret
cmpsl
or
cwtl
cmpsb
cs
sbb
sub
xchg
das
push
xor
jmp
dec
ret
push
cmpb
pop
hlt
outsb
jecxz,pn
xchg
xchg
roll
adc
call
push
adc
out
jae
mov
movsl
je
out
hlt
jmp
xchg
outsb
xchg
jp
idivb
mov
sbbb
pop
sub
pop
mov
data16
ss
push
test
outsb
fsts
inc
cmpsl
sub
fcmovb
dec
cs
lahf
outsb
fidivrs
pop
stos
mov
mov
add
xchg
xchg
xor
xor
out
mov
not
pop
inc
scas
xor
xchg
and
mov
cmp
inc
pop
cmp
inc
mov
inc
xor
mov
mov
jg
cmpsl
inc
mov
fsubs
dec
push
lret
mov
sub
inc
lahf
sub
pop
into
mov
mov
andb
ret
imul
dec
lcall
jg
out
in
jge
cmp
add
nop
mov
bound
mov
push
push
and
mov
jmp
mov
add
mov
adc
aaa
ss
jecxz
fdivl
sub
fisttps
outsb
jecxz
push
mov
call
xchg
mov
sub
xor
dec
sahf
dec
fldt
outsb
in
mov
inc
inc
xchg
push
shll
dec
lcallw
stc
iret
rorb
in
push
cwtl
hlt
in
mov
fdivrs
es
sub
jae
repnz
jb
dec
dec
shlb
mov
rclb
push
mov
jno
sbb
fisttps
hlt
stc
mov
insl
lahf
or
adc
inc
imul
push
mov
xor
ret
mov
mov
push
xor
inc
divb
cmpsb
es
loop
cmp
inc
iret
fistl
mov
pop
jo
push
jl
sub
jg
test
sbb
es
sahf
dec
cwtl
adc
sbb
popf
mov
and
fidivs
cld
cmp
lret
push
stos
ret
lcall
inc
mov
inc
pop
xchg
xchg
sub
push
mov
pop
pop
or
addr16
in
sub
jle
xchg
bound
xchg
pop
out
movsb
je
cld
test
mov
jl
xchg
dec
hlt
jecxz
into
cmpsb
xchg
repnz
jne
push
add
mov
add
pop
inc
xchg
mov
and
loop
xchg
jecxz
mov
or
mov
dec
pop
ret
mov
mov
xchg
sbb
push
jle
mov
push
mov
jge
xor
mov
cs
push
push
mov
faddp
mov
pop
adc
mov
xchg
inc
push
xor
sub
loop
es
faddl
add
sbb
sbb
gs
fimull
push
cmpsb
mov
adc
add
or
add
add
es
mov
and
cmp
arpl
into
xchg
ss
shll
ljmp
aam
or
fistps
scas
imul
add
in
aaa
pop
mov
fistpl
imul
push
dec
jne
inc
fimull
aaa
mov
mov
or
je
dec
out
xor
rorb
testl
add
add
adc
inc
mov
ret
icebp
add
sbb
push
push
imul
in
xor
out
outsb
mov
mov
mov
push
mov
fimuls
loop
cld
test
pop
sahf
and
ret
jo
aam
xchg
add
lret
fmull
sahf
or
pop
loope
push
gs
test
mov
cmc
push
iret
jbe
pmuludq
cmp
and
push
test
jecxz
cmpsb
push
into
inc
xchg
mov
and
fs
push
sub
xchg
ja
rorl
mov
sahf
scas
fistpll
ret
xorl
cmpsb
xchg
cmp
sarl
xor
mov
loop
push
fsubrs
mov
sbb
xchg
aam
stos
mov
sub
xchg
pop
push
lods
packsswb
inc
xchg
testb
fcmovnu
inc
jno
ljmp
mov
cs
pop
push
push
ljmp
xor
or
into
pusha
xchg
aad
mov
test
loope
shl
cmp
aad
in
pop
xchg
imul
jecxz
ret
jecxz
xchg
jo
test
mov
mov
mov
pop
push
push
cmp
and
jle
aas
out
cmp
push
jecxz
push
enter
cmp
ss
movsl
xor
mov
push
fimuls
xchg
dec
mov
daa
outsb
mov
movb
add
stos
lcall
sbb
push
xchg
shlb
add
or
or
xlat
sbb
faddp
inc
stos
aas
sarl
test
arpl
ss
mov
loop
xlat
ljmp
mov
pop
ret
movl
andb
lret
cmpl
xor
mov
pop
int
xchg
mov
mov
cmp
mov
dec
mov
sahf
test
fiaddl
push
cmp
sbb
mov
sub
cld
pop
add
daa
or
outsb
lcall
popa
push
push
mov
lret
mov
mov
or
xchg
dec
mov
cmp
sbb
pushf
mov
jbe
lcall
push
das
push
cmp
mov
jae
pop
shlb
inc
or
add
out
gs
dec
push
stos
pop
ficomps
scas
sbb
push
ljmp
dec
push
aad
jbe
out
push
rorb
ds
sub
xchg
mov
cmp
mov
add
lcall
cmp
rcrb
sub
cld
or
xor
cmp
es
into
xor
inc
and
push
iret
cmp
mov
push
mov
mov
dec
push
cli
cmpsl
movsl
js
je
ds
xor
push
pop
lret
push
loopne
data16
notb
push
ss
lods
jne
mov
int3
mov
arpl
add
stos
mov
loop
ret
sub
xchg
sbbb
mov
orb
mov
push
add
xlat
cs
imul
lea
adc
ret
xchg
lcall
push
ss
gs
push
divl
lock
inc
pop
stc
mov
fwait
mov
push
mov
mov
lcall
mov
in
adc
and
mov
lds
fadds
popf
cmp
pusha
xchg
adc
shll
andl
inc
jle
ss
sti
mov
test
xchg
mov
inc
mov
dec
repz
sbb
lahf
gs
out
clc
cmp
andl
sub
lret
pop
pop
cmpsb
aaa
sbb
push
mov
inc
xchg
or
xlat
push
gs
mov
ss
sbb
mov
sahf
add
mov
sub
pop
xchg
dec
test
aaa
pop
fdivr
mov
push
xor
dec
fisttpl
fidivrl
pop
xchg
ljmp
stos
or
sub
pushf
in
repnz
out
sbb
or
in
ror
push
sub
repnz
xlat
cmpsb
push
fldcw
rclb
aad
out
iret
out
adc
jg
rorl
add
out
add
rorb
repnz
mov
mov
sub
pusha
or
bound
je
rolb
cmovb
jecxz
fdivrs
xor
dec
adc
push
std
dec
mov
ja
rcrl
iret
xorb
cmpsb
push
jg
inc
mov
out
adc
ret
leave
dec
roll
mov
ret
xchg
sbb
push
andb
jne
mov
bound
call
stos
or
notl
cmpsb
mov
mov
pop
faddp
mov
divl
shl
xlat
xor
push
xor
dec
push
out
mov
sub
loop
ret
add
push
jbe
mov
dec
loope
rol
pmullw
push
dec
adc
adc
cmc
cs
dec
fbstp
cmp
lcall
sbb
mov
mov
jmp
sahf
add
push
sbb
jecxz
mov
lret
and
mov
loop
cmc
repz
inc
loopne
sbb
mov
les
and
push
mov
hlt
inc
jecxz
outsb
mov
pop
iret
cmpsb
inc
into
fcmovbe
aas
xchg
mov
movsb
es
ret
mov
sti
mov
mov
mov
cmp
ja
lea
xor
test
mov
data16
jne
es
ret
sbb
push
inc
mov
test
dec
lcall
fdivl
and
ds
xchg
mov
add
iret
mov
sahf
ss
jmp
std
cltd
xlat
xor
jne
ret
aas
push
ror
scas
jb
shlb
ss
mov
into
and
push
jecxz
loop
xchg
cmpsb
push
movsb
call
add
mov
ret
xor
adc
mov
and
dec
into
stos
pop
mov
and
imul
sysexit
mov
mov
bound
and
mov
push
mov
adc
into
mov
cmpsl
inc
jg
add
pop
sahf
push
push
faddl
fwait
ret
push
fisttps
adc
mov
jbe
mov
ja
add
shr
xchg
pop
ret
outsb
call
and
sahf
xchg
inc
in
ret
pop
mov
dec
mov
sbb
push
adc
fstl
and
outsb
in
cmp
ljmp
mov
xchg
xchg
jecxz
mov
mov
jp
aam
out
loop
stos
loopne
push
sub
pop
mov
xchg
push
jmp
shr
push
or
pop
ss
add
jno
mov
dec
iret
imul
sub
add
es
mov
push
sti
lock
out
add
inc
cs
je
xchg
in
ljmp
cmpb
cmc
xchg
xlat
mov
jmp
iret
out
and
mov
xchg
add
inc
out
subb
jno
pop
filds
xchg
mov
sub
outsb
ficomps
out
xchg
jae
push
popf
lods
call
push
push
jecxz
fisubl
test
adc
movb
sub
xchg
sbb
shl
sbb
pop
cmp
mov
ds
enter
and
in
push
sarl
lock
leave
sub
icebp
push
neg
mov
sbb
out
cmp
mov
xchg
cmc
dec
push
xchg
jb
dec
jp
push
repnz
shll
mov
iret
ret
leave
jge
bound
ds
push
into
xor
mov
push
pop
inc
iret
mov
pop
ret
adc
push
sbb
std
mov
cltd
jae
push
mov
pop
add
mov
pop
jae
sbb
inc
add
add
ljmp
mov
mov
add
cld
add
push
mov
mov
ljmp
or
sbb
fisubrs
add
ljmp
jae
mov
adc
fistps
sub
mov
add
mov
pushf
cmp
incb
mov
pop
xlat
loop
into
mov
fsubrs
aam
scas
je
mov
xlat
add
movsb
and
mov
lahf
out
mov
xchg
cmp
les
enter
shl
mov
mov
mov
rclb
xchg
adc
pop
jbe
xchg
aad
leave
sbb
gs
push
out
pop
ds
cld
orb
mov
adc
je
xchg
push
cmp
push
sahf
cmpsb
cmp
dec
push
rclb
les
into
sub
and
mov
cs
leave
idivl
mov
addr16
cmp
add
xor
push
lret
cmp
jmp
filds
push
xchg
add
adc
es
xchg
into
outsb
bound
aas
mov
cmp
inc
push
ret
mov
mov
push
stos
aas
sub
xchg
push
cmp
in
mov
sahf
mov
push
sub
aas
dec
cmpsb
mov
and
loop
notb
rolb
stos
inc
mov
cmp
push
shrl
push
ss
aaa
lahf
outsb
ret
dec
sbb
cmp
inc
or
cmp
push
lcall
loop
and
push
mov
in
idivb
push
add
aas
fldt
dec
ja
push
push
pop
es
mov
cli
data16
xchg
push
inc
or
cmp
push
xor
jmp
inc
testl
or
push
sub
out
out
mov
pusha
xchg
fstpt
mov
adcb
ret
clc
div
and
push
ss
mov
bound
mov
xchg
or
outsb
loop
cltd
xor
sbb
sbb
testl
inc
mov
cmpsl
mov
ss
lods
push
add
fildll
adc
ljmp
call
dec
push
pop
mov
rcrl
push
ljmp
mov
pop
push
outsb
gs
mov
add
push
sbb
jp
and
cwtl
lds
sarl
or
shlb
repz
inc
jmp
push
ljmp
int
ljmp
pop
xor
gs
movntq
out
sub
jl
ret
inc
out
sbb
sub
ds
loope
popl
push
sbbb
sti
pop
mov
pop
xchg
cmp
stos
leave
and
sub
mov
out
movsl
test
pop
xor
pop
add
dec
or
add
in
add
lret
mov
int
mov
push
pop
inc
fidivs
cmp
shrb
add
ss
sbbb
or
iret
or
lret
add
popf
fildll
xlat
xorl
adc
imul
cmpsb
adc
iret
inc
mov
test
cmc
cmp
jo
sti
mov
xlat
stos
mov
add
mov
dec
fisttps
dec
adc
lret
xchg
dec
mov
lods
push
and
data16
sbb
add
ret
jecxz,pt
inc
mov
sarb
cwtl
pop
lcall
xor
test
mov
lahf
jle
inc
push
out
add
adc
mov
daa
roll
lcall
orb
add
sub
jge
fldt
inc
xchg
iret
or
ds
sub
sub
or
ret
int
loop
hlt
mov
shll
lret
or
aas
mov
insl
jo
pop
imul
add
fistpll
xchg
out
out
cmp
ja
xchg
xchg
inc
xor
mov
call
gs
ds
mov
adc
sbb
jecxz
mov
or
aad
xchg
js
scas
lret
and
scas
jmp
sub
jmp
mov
mov
push
push
fildll
xlat
dec
fisttpl
in
ss
test
into
stos
out
inc
adc
lcall
in
loop
xchg
xor
mov
or
ss
pop
dec
subl
imul
shlb
out
lcall
inc
jae
xor
clc
lock
xor
outsb
sub
sbb
pop
cmpsb
adc
or
test
stos
inc
jecxz
out
or
cmp
fbstp
and
push
sub
xchg
ret
ds
test
lahf
cmpsb
push
inc
xchg
mov
out
or
mov
inc
daa
dec
push
ret
dec
sub
xchg
push
jne
push
repnz
jno
lcall
addr16
xchg
pusha
mov
xor
adc
int3
push
push
push
loop
mov
bound
pop
cs
fcmovnb
repnz
fcoml
xor
cmp
push
ss
mov
subl
jecxz
mov
lods
stos
cmpsb
and
test
pop
scas
pop
into
add
or
xchg
mov
sbb
xor
pushf
ds
mov
in
aad
push
mov
sbb
ret
int3
xor
and
push
imul
mov
add
aam
mov
fidivl
sbb
leave
lahf
andb
add
int
pop
or
adc
pop
insb
pop
cli
mov
mov
sar
pop
mov
hlt
cmp
push
and
lcall
and
popf
xchg
ret
stos
ds
dec
jne
add
sub
mov
mov
jl
dec
or
cmpsb
outsb
ds
aad
jle
aad
ss
cmpsl
mov
push
xor
mov
pop
cmp
or
jns
adc
into
xor
inc
inc
dec
sarb
jge
inc
push
aad
push
ficoms
ret
mov
in
lods
pop
rorl
mov
mov
add
rcll
xchg
mov
fimull
jo
sbb
decl
xor
mov
shlb
pop
add
pushf
lcall
mov
fmulp
sbb
jne
xchg
mov
mov
mov
cmpsl
adc
dec
aam
shlb
mov
out
test
push
push
adc
roll
ret
imul
add
movsb
or
lret
push
add
sub
xor
cmp
lcall
roll
ds
jge
mov
fdivrs
or
rorb
movsb
add
mov
icebp
cmc
and
ljmp
lcall
dec
cmpl
cltd
rclb
push
pop
add
das
add
aad
push
sub
sub
and
add
add
and
mov
xchg
test
sbb
ficoml
push
lods
mov
ss
add
call
and
add
aam
das
es
mov
dec
adc
push
push
sbb
leave
xor
xchg
mov
imul
or
jecxz
mov
xchg
inc
push
call
shll
mov
adc
lcall
mov
es
sahf
cmpsb
sub
mov
mov
sub
in
outsl
into
pop
mov
out
ja
ds
or
mov
stos
xchg
cmp
push
mov
cmpsl
dec
adcb
cmp
roll
sub
pusha
fadd
inc
push
or
ret
outsl
loope
test
scas
xchg
fistps
test
stos
dec
mov
lcall
mov
jbe
and
fisubrl
fcomps
mov
loop
sbb
jo
xor
pushf
sbb
mov
push
shll
mov
dec
pop
or
xchg
dec
lret
pop
in
or
xchg
outsl
ret
into
imull
push
or
jae
inc
cmp
cli
jno
lahf
aas
faddp
fildll
leave
dec
xchg
dec
mov
enter
mov
lcall
mov
or
and
cwtl
scas
cmc
dec
ret
fmulp
jge
xchg
jg
mov
stc
test
cmpl
sub
add
sbb
int
add
sub
ret
mov
inc
xchg
mov
push
jecxz
loop
pop
subb
xchg
sub
push
clc
addr16
testb
sbb
in
pop
push
jae
loop
push
fbstp
mov
sub
or
mov
sbb
xlat
or
sarl
jbe
pop
xchg
sbb
or
stos
stos
or
dec
mov
fisubs
sbb
les
out
aam
pop
add
incl
or
loop
and
pop
icebp
loop
loopne
xor
fidivs
mov
sub
mov
icebp
cmp
sub
sti
inc
jbe
adc
es
gs
dec
xchg
push
es
jo
adc
mov
testl
xlat
pop
sub
pop
mov
out
ffree
jecxz
pushf
ss
sbb
jno
ret
jecxz
iret
fmull
enter
cmp
ret
outsb
pop
xor
lahf
push
jecxz
cmp
cmp
clc
xchg
bound
iret
fstl
jne
mov
cmpsl
xchg
pop
and
dec
jl
cmc
hlt
inc
xchg
xlat
scas
sub
push
xchg
pop
bound
das
in
sub
add
ss
loopne
xor
insb
and
cltd
in
int3
lcall
push
pop
mov
mov
fisttps
stos
mov
shrb
subl
fdivs
cld
repz
and
cs
inc
lahf
mov
dec
push
mov
push
push
inc
andb
daa
mov
stos
call
movsl
aas
pop
xchg
mov
push
mov
xchg
push
ds
mov
mov
rorl
in
push
push
popa
mov
xlat
and
sahf
xchg
rclb
out
or
xchg
fnsave
inc
jp
clc
hlt
cmpsb
fcmovne
push
pop
xor
es
xchg
sti
cmp
cmp
jge
clc
ss
push
fidivrl
and
and
scas
or
mov
aaa
imul
and
rcll
lcall
or
or
push
mov
out
or
sub
lock
jmp
inc
adc
mov
ret
push
mov
jge
aad
fidivrs
jecxz
mov
add
push
pop
bound
stos
mov
scas
add
ret
sbb
int3
ficompl
ds
inc
sbb
xorb
push
dec
or
dec
test
xor
sbb
xlat
fdivrl
adcb
shr
sbb
lods
mov
ret
out
cmp
out
adc
xchg
or
mov
adc
fwait
push
mov
stos
mov
movsb
push
lahf
sub
mov
mov
push
mulb
xor
movsb
es
scas
imul
sarl
cs
lds
add
stos
bound
in
inc
or
cwtl
xor
fistl
mov
mov
fisubrs
std
test
ret
xor
push
push
clc
push
jbe
lcall
inc
ret
jae
xlat
leave
clc
es
mov
fistpll
mov
cmp
fists
mov
cmp
push
mov
rcrl
nop
int3
mov
dec
push
loopne
cmp
push
pop
mov
into
ss
rcll
sti
xchg
add
mov
mov
inc
insb
dec
mov
fcmovnu
xlat
and
sbb
push
call
push
mov
shrl
or
and
mov
out
jg
pop
mov
dec
cld
cmc
or
ficomps
push
jae
ds
scas
sahf
mov
sub
and
push
jae
cmpsl
pop
cmpsl
add
sahf
adc
mov
mov
pop
mov
ds
movsb
pop
add
adc
std
and
ret
scas
bound
cmpsl
xor
rclb
jne
iret
mov
loop
decl
ss
out
lcall
mov
xchg
cld
fildl
das
push
pop
mov
ret
xor
mov
inc
dec
je
adc
aas
ds
cmp
gs
lret
sarl
shll
cwtl
dec
in
pushf
xchg
push
jp
call
out
es
stos
jno
xor
jecxz
mov
mov
nop
mov
xorb
mov
cli
or
ret
jge
inc
xchg
iret
ljmp
or
xchg
pusha
test
cmpsb
aad
lahf
xchg
pop
add
lock
ret
mov
icebp
mov
mov
add
int3
sahf
jne
adc
cld
loop
push
mov
lahf
hlt
cmp
and
cmp
mov
push
orb
aam
jecxz,pt
aam
out
mov
loope
fs
aad
push
mov
lret
ficoml
cs
enter
shrb
sub
jge
pop
sahf
xor
inc
push
push
pop
xchg
or
xchg
sub
stos
mov
and
cmp
into
inc
in
sub
xlat
jecxz
ret
jp
inc
es
psrlq
sbb
sarb
mov
mov
adc
mov
push
sub
mov
icebp
push
imul
xor
pusha
filds
push
sbb
mov
push
aad
ds
rclb
jle
adc
xchg
or
das
out
inc
mov
pop
lds
add
arpl
rolb
inc
cmp
andl
ret
mov
adc
mov
outsl
ss
push
add
sub
test
shll
jbe
es
push
inc
jno
mov
jle
repz
xchg
mov
push
outsb
adc
fucomip
xchg
addb
orb
or
and
je
ss
xor
aad
into
push
dec
sbb
dec
xcrypt-ecb
cmpsl
dec
adc
scas
ret
add
pop
mov
jo
je
clc
add
imul
jns
sub
mov
adc
sbb
data16
rcrl
xchg
pop
xchg
popf
push
out
sub
or
mov
cs
stos
aad
add
pop
xor
out
inc
push
fdivs
adc
cmp
sub
fcmovnb
mov
mov
rclb
stos
push
lret
dec
jge
mov
or
jno
push
mov
aam
mov
dec
ja
ds
ljmp
jg
xor
bound
ljmp
gs
aas
xor
fidivrs
sahf
fisubs
xchg
pop
das
scas
and
adc
pop
pop
test
loope
and
mov
out
mov
decb
inc
mov
xlat
aas
inc
xor
or
ret
mov
gs
and
es
and
ljmp
push
in
cmp
daa
mov
dec
dec
push
aam
push
enter
test
mov
jecxz
or
jg
and
or
repnz
cs
les
and
lock
cmp
push
add
inc
into
adc
fistpl
mov
int
stos
sbb
mov
sbb
xchg
cmp
mov
imul
xor
scas
sub
mov
out
push
bound
sub
gs
ss
rorl
pop
xchg
lahf
setg
repz
movsb
push
mov
push
mov
aas
sub
push
fidivl
sub
cli
sbb
ds
mov
stc
stos
push
cmp
aas
mov
sbb
ret
gs
es
fcmovb
mov
neg
fwait
sub
push
test
and
mov
mov
push
xchg
and
and
pop
push
cmp
cmc
into
bound
loop
cmp
jmp
pop
ja
gs
sub
cmp
push
push
inc
mov
pop
rorb
mov
xor
xchg
sahf
cmpsl
jge
xchg
push
adc
fists
mov
mov
and
cmpsl
mov
xchg
cmpsl
jge
mov
int
push
xchg
movsb
cmpsl
and
pop
jnp
inc
xlat
xchg
roll
xchg
inc
sbb
xor
or
push
das
hlt
push
adc
push
sahf
sbb
decl
mov
sub
sbb
xchg
ret
into
jne
mov
leave
jno
pop
dec
inc
cmpsb
mov
add
mov
clc
imul
mov
outsb
hlt
sbb
inc
jecxz
add
ljmp
add
cmp
scas
sbbb
mov
pop
mov
xor
pop
adc
into
push
sahf
or
add
and
push
stos
ss
ljmp
loop
adc
mul
cmp
mov
ret
das
sbb
mov
xchg
lcall
push
or
xchg
das
clc
mov
lods
sbb
push
lret
orb
jo
pop
cs
mov
push
add
or
int
adc
pop
dec
mov
xchg
dec
push
mov
loop
and
out
cmp
and
mov
imull
rclb
imul
cmp
clc
nop
xchg
ja
out
fcompl
mov
or
out
adc
push
orb
dec
subb
hlt
push
or
and
jl
xchg
cs
cmp
inc
jbe
addr16
or
pushf
aaa
pop
sahf
or
mov
xor
xchg
xchg
dec
ficoms
clc
sub
mov
push
ljmp
out
inc
jae
pop
push
cmp
adc
scas
stc
adc
sub
pop
cmp
xchg
cmc
test
outsb
out
xor
pop
mov
sbb
rol
add
gs
pop
push
test
and
out
aam
mov
xor
cld
repz
cs
dec
outsl
mov
mov
dec
cmpsl
cmpsb
test
sbb
or
xchg
push
movsl
outsb
mov
inc
push
mov
pusha
je
sahf
cs
xlat
cmp
cmpsb
sbb
ret
negb
xchg
iret
sub
cmpb
outsl
lods
insb
mov
push
xchg
jecxz
and
out
je
cmpb
ss
xchg
jecxz
test
imul
push
push
or
cmc
jl
fcmovbe
ret
pop
lods
jo
inc
stos
xor
sbb
adcb
mov
fisttpl
sub
cmp
push
lcall
ss
mov
and
mov
adc
loop
inc
cmp
xchg
inc
or
add
inc
data16
out
xchg
clc
stos
imul
add
cmpsb
js
inc
push
adc
pop
ja
sub
mov
mov
or
cmpsl
xchg
inc
pop
lcall
add
xchg
adc
or
shl
lcall
lret
mov
iret
rcrb
sub
fisubrl
push
in
test
arpl
loop
mov
mov
ljmp
lods
stos
in
cwtl
cld
adcb
outsb
mov
sub
mov
push
or
outsb
lcall
sub
dec
daa
cmp
xor
inc
mov
add
es
lods
or
cltd
in
xchg
aad
repnz
and
repz
dec
mov
ss
ret
or
push
data16
add
mov
fimull
in
bound
mov
push
test
loop
mov
rorl
lcall
outsb
mov
cmp
mov
push
and
xlat
sahf
pop
movsb
mov
mov
mov
sbb
addl
jne
loop
mov
pushf
cmp
or
pop
pop
and
es
inc
inc
flds
call
sub
xor
lahf
push
xchg
in
bound
gs
out
push
gs
loopne
ficomps
adc
je
xchg
sub
or
mov
lea
mov
leave
ss
nop
mov
add
dec
gs
pop
shll
mov
cld
cmp
mov
cmp
punpckhbw
dec
dec
hlt
sti
mov
sbb
cs
rcl
mov
mov
out
popf
fiadds
pop
push
or
and
sbb
cli
jmp
mov
in
add
inc
mov
mov
push
mov
sbb
jecxz
and
jmp
lcall
adc
dec
and
mov
int3
mov
cwtl
or
or
mov
cmc
cs
leave
sbbl
into
pop
lods
add
stos
push
lods
or
mov
test
sahf
iret
dec
fwait
in
test
je
mov
or
dec
ret
stos
loop
insb
sbb
push
test
mov
fcmovnu
ljmp
dec
lods
xchg
or
add
test
cmpsb
pop
hlt
rcrb
mov
pop
das
add
push
cmp
in
sahf
xchg
mov
adc
mov
pusha
xlat
enter
cmp
int3
mov
mov
ds
idivb
fucom
repnz
outsb
jno
sub
xor
mov
ljmp
push
add
scas
loop
xchg
cmp
mov
and
and
adc
or
test
mov
add
xchg
and
ss
mov
mov
xchg
cwtl
xorl
xor
mov
push
xor
ja
pop
fcmovne
ss
cltd
mov
add
sub
pushf
mov
mov
std
mov
out
sahf
add
cld
or
xchg
mov
mov
cmpsb
in
push
and
lcall
push
push
adc
into
addb
mov
mov
fnstsw
rcr
dec
cmp
push
push
push
stos
mov
addb
test
inc
mov
mov
inc
pop
adc
sar
rolb
push
fwait
insb
push
inc
shll
lods
mov
lcall
add
lcall
mov
pop
cmp
adc
cmc
int
es
sub
sub
cmp
mov
out
iret
jnp
cmp
sbb
ret
xchg
shl
fistl
mov
xchg
or
push
mov
notb
or
xor
retw
cmp
jne
xchg
lods
sub
rcrb
or
adc
mov
das
fildll
push
jae
adc
orb
cmpsb
mov
sub
mov
xchg
outsb
cmc
lods
ret
sub
lret
cmp
inc
push
movb
xchg
filds
int3
stos
and
sbb
mov
cmpsl
fbstp
cmp
in
dec
push
ret
movups
push
into
cmc
fistpll
pop
sarb
jle
es
scas
add
fbstp
sub
stos
ficoms
mov
or
jbe
mov
lret
inc
inc
jne
and
bound
xbegin
sahf
aad
adc
mov
push
in
or
and
add
into
fcmovnu
pop
add
insl
mov
cmp
lock
ds
pusha
inc
lds
pop
dec
std
jecxz
lods
rcr
jecxz
fimull
or
out
xchg
and
push
mov
mov
xor
push
mov
pop
mov
inc
loop
cmp
ret
adc
cmpsb
lods
in
push
in
adc
insl
push
xchg
xchg
inc
and
mov
test
xor
testl
or
push
mov
je
fcoms
in
xchg
cmp
mov
mov
scas
shll
fildl
stos
mov
xchg
shll
mov
and
sti
iret
dec
dec
jnp
in
xchg
mov
push
inc
sub
fistps
adc
push
push
adc
xchg
adc
cmpsb
clc
imul
ds
ds
xchg
repnz
adc
xchg
aam
es
mov
sub
iret
dec
pop
add
cmp
in
mov
inc
jecxz
mov
aam
in
push
xchg
inc
outsb
xor
mov
fidivl
dec
imulb
sub
mov
push
es
jae
add
movsl
push
mov
stos
dec
scas
rorl
and
dec
inc
inc
es
xchg
repz
xchg
mov
and
icebp
adc
clc
sub
xchg
fcmovnb
sbb
fsubr
xchg
fisubrs
add
mov
cmp
cmpsb
or
lcall
push
xchg
push
mov
push
cmpsb
rcrl
pop
pop
dec
in
adc
push
xchg
sub
mov
inc
ret
push
je
dec
cs
sub
shll
stos
inc
or
gs
mov
leave
inc
and
push
std
adc
dec
sbb
enter
add
mov
push
icebp
imul
push
or
adc
mov
cmc
push
mov
bound
das
push
pop
mov
out
jb
or
out
push
jbe
mov
pop
aad
fimull
data16
addr16
cmpsl
rcl
stos
lea
andb
mov
push
pop
lcall
push
leave
and
fisubrs
dec
mov
and
cmp
sub
and
xchg
push
xchg
test
imul
ret
or
out
fisubs
leavew
pop
cmpsb
clc
arpl
scas
xchg
mov
mov
ss
ret
outsb
dec
xchg
les
xchg
data16
fninit
cld
cmc
ret
mov
iret
fisubrs
loopne
mov
in
push
xor
pop
outsb
adc
bound
mov
mov
lea
iret
xor
es
aas
xor
imulb
fistpll
push
dec
mull
push
ret
push
dec
jne
sub
shll
pop
dec
inc
mov
jnp
or
rolb
ja
or
cmp
std
sub
negb
fidivl
aad
shlb
pop
pop
adc
dec
aam
mov
das
xlat
pop
xchg
outsb
mov
inc
loop
mov
gs
pop
mov
loop
cld
jl
inc
xchg
sbb
fdivrs
cmp
and
sbb
push
lcall
and
cmp
in
mov
out
mov
iret
mov
push
dec
ret
mov
adc
das
jno
pop
dec
xor
push
jecxz,pn
repnz
fildl
xchg
xchg
mov
add
pop
divl
stos
mull
mov
pusha
fsubl
cs
mov
cmc
ficompl
rolb
adc
dec
cmpsb
dec
imul
push
cmpsl
mov
dec
push
xlat
ret
leave
or
push
or
fistpll
adc
shrb
push
mov
hlt
mov
push
mov
fists
jecxz
stos
cli
sahf
push
adc
roll
hlt
pop
mov
cld
lcall
test
push
push
xor
fmulp
cmpsb
mulb
mov
fildl
addr16
push
pop
mov
iret
ret
cs
pop
lea
adc
enter
mov
lret
mov
popf
xlat
lcall
push
fildll
scas
mov
push
add
add
dec
ret
inc
loopne
std
xchg
pavgw
pop
pop
inc
imull
jae
sarb
pop
mov
fisttpl
sbbl
xor
mov
jno
mov
jno
sub
cmp
mov
rorb
dec
rcl
push
rolb
mov
dec
stos
inc
push
sbb
xor
xchg
in
cmc
into
mov
push
imul
addps
mov
jbe
mov
xchg
mov
or
sub
xchg
push
lret
out
xor
jecxz
fisubrs
dec
mov
xor
fmull
mov
repnz
mov
pop
aad
stos
jbe
adc
fucomi
push
in
add
sub
rcll
mov
addl
or
je
inc
jecxz
fbstp
add
out
pop
ss
pop
mov
xchg
cmp
push
rcrl
imul
and
or
bound
add
lret
push
add
adc
loop
push
mov
es
mov
les
push
push
pop
out
jbe
scas
stos
add
bound
mov
sub
sahf
cmp
lcall
push
sub
loop,pt
xor
pop
mov
xor
push
ficoms
shlb
cmpsl
mov
and
iret
gs
inc
cmpsb
adc
fidivrl
scas
cmpsl
add
ds
pop
and
ret
add
flds
pop
aam
into
push
push
into
cld
loop
or
adcl
add
daa
out
outsb
sub
mov
enter
xchg
xchg
gs
add
or
mov
sbb
add
xlat
sub
sub
mov
mov
xchg
inc
fisttpll
aad
jecxz
push
xor
mov
ret
push
fildl
ss
lds
mov
mov
cmpsl
stc
xlat
pop
push
cmp
sahf
mov
mov
push
sbbb
iret
push
filds
stc
es
fnstenv
mov
test
scas
mov
cmp
or
adc
push
bound
mov
int
stos
or
cmp
sbb
es
mov
adc
push
leave
addr16
cmpsb
pop
femms
sbbb
lock
ret
imul
ds
scas
pop
std
cmp
lret
and
fnstcw
loop
mov
dec
add
xchg
les
lds
jnp
xlat
cmpsb
xchg
iret
or
ds
fiadds
sbb
inc
xor
and
mov
cs
xchg
jmp
iret
sub
push
ficomps
out
sub
mov
and
ds
dec
push
fldcw
dec
adc
scas
mov
mov
adc
test
bound
dec
ds
cmp
faddl
fisubrs
push
mov
lret
cmp
out
xor
imul
dec
xchg
aas
hlt
mov
ret
lcall
gs
mov
push
fisubrs
xlat
or
test
mov
je
cmpsb
push
jecxz
cmp
mov
dec
mov
xchg
test
pop
mov
in
dec
sbb
and
lcall
xor
push
cmpsl
into
jecxz
dec
push
cmpsb
lret
scas
loope
sub
mov
push
push
inc
cmpsb
adc
add
bound
cmpsl
add
cmpsb
aad
imul
stos
mov
mov
cmp
stos
adc
and
dec
and
sbbb
jle
cmc
mov
ljmp
dec
int3
push
add
dec
cmpsb
xlat
push
cmp
mov
dec
push
or
push
loop
loope
divb
es
mov
mov
or
inc
negl
es
push
xchg
es
inc
out
mov
jl
insl
aaa
clc
or
aad
push
mov
sahf
lods
movntps
es
mov
mov
push
push
adc
dec
inc
xchg
mov
mov
add
adc
pop
or
loop
lods
xchg
jnp
xor
aaa
ljmp
testl
xchg
mov
xor
fs
and
cwtl
imul
dec
mov
mov
sbb
mov
daa
fisubrl
mov
xor
mov
sub
nop
je
pop
cmp
inc
push
mov
push
mov
mov
pop
sahf
xchg
outsl
xchg
xor
mov
ret
push
fidivrl
icebp
mov
dec
inc
mov
lock
pop
sub
xlat
xchg
sbb
xor
push
mov
pop
ljmp
ret
or
into
push
jne
sub
xchg
cs
outsb
mov
push
cld
mov
pop
mov
and
insl
or
fisubrs
clc
aaa
xlat
mov
inc
cmpsb
shl
xchg
mov
add
add
iret
inc
dec
mov
add
or
mov
xchg
out
inc
test
std
imulb
scas
push
ret
sub
ds
mov
cmp
push
inc
loop
gs
or
inc
xor
or
add
ja
aam
push
mov
dec
jbe
xor
adc
adc
cmpsb
cmp
cmp
in
lret
mov
lea
aaa
mov
mov
fiaddl
lds
fstpl
imul
ficoml
fucomp
fbld
lret
xor
mov
mov
data16
ss
sahf
mov
stos
adc
or
sbb
dec
pop
cmp
mov
mov
shlb
xor
cmc
xchg
into
mov
ja
loop
shl
or
out
sub
mov
jmp
iret
and
push
adc
shlb
inc
xor
mov
mov
push
push
xor
sub
mov
cld
push
cs
ss
xchg
std
mov
shrl
mov
bsf
inc
ja
push
lret
xor
sahf
pop
mov
les
pop
lar
into
push
aad
jno
ljmp
xor
mov
loopne
mov
divl
bound
cmp
push
and
loop
sbb
sub
xchg
ds
mov
xchg
lods
jno
orb
jp
mov
faddl
mov
movsl
mov
into
int3
subl
es
in
stos
push
pop
lret
adc
pop
pop
imul
inc
lods
xor
adc
push
inc
imulb
mov
loop
stc
lret
or
ja
jne
ss
bound
dec
ret
push
pusha
and
sub
sbb
iret
xchg
movsl
test
ret
push
and
sub
mov
cld
push
sub
iret
ret
sub
add
jno
push
mov
aaa
sub
add
jp
push
fsts
cli
sub
dec
mov
xchg
rorb
jecxz
mov
xor
cmp
pop
mov
xchg
ficompl
filds
xchg
cmp
sub
lcall
imul
mov
cltd
add
mov
mov
inc
mov
lea
shl
ljmp
imulb
sub
jle
shl
push
dec
sahf
rcrb
add
fildl
test
and
dec
outsb
xor
mov
jecxz
movsl
mov
ucomiss
es
mov
pop
fwait
iret
xchg
inc
jl
sub
cli
adc
es
push
aam
jg
lcall
or
mov
jge
sub
cmp
hlt
xchg
bound
jno
je
mov
mov
out
sahf
cs
jmp
jecxz
push
loopne
mov
lods
and
lret
fimuls
add
mov
xor
or
push
mov
inc
push
dec
ss
ds
mov
xor
lcall
cmp
jbe
roll
fcmovu
repnz
lds
or
xchg
pop
aas
push
dec
mov
test
ds
outsl
faddl
sbb
fldenv
adc
xchg
xchg
jg
xchg
jbe
cmp
dec
pop
outsb
movsb
cmp
sub
sbb
fimuls
jne
push
mov
iret
pop
mov
mov
sti
xchg
cmc
je,pt
mov
ds
mov
push
addb
ret
sub
les
mov
dec
jecxz
out
addr16
cmpsb
sub
fisubs
iret
cltd
repz
hlt
xchg
fisubrs
mov
loop
mov
lcall
dec
or
icebp
aam
pop
shrl
cmpsl
sub
xlat
and
mov
jbe
sbb
ds
addr16
shr
out
xchg
push
lods
leave
mov
or
and
or
mov
mov
fldl
or
jo
adc
adc
ljmp
ficompl
add
or
pop
ret
subb
cwtl
xlat
icebp
or
ror
add
pop
mov
pop
fs
addr16
cmpb
push
iret
fidivl
push
ret
cmp
add
dec
mov
add
cld
dec
push
ret
test
xchg
mov
mov
idivl
mov
sbb
xchg
sub
insb
sbb
fiadds
push
mov
pop
mov
addr16
movsb
mov
push
pop
scas
jp
aas
lds
xchg
in
and
lcall
testl
and
fimull
ret
and
das
xor
xlat
fidivrs
js
lock
cmc
xor
or
mov
jmp
rcl
push
mov
sahf
call
add
inc
cmpsb
xchg
cmp
lret
fwait
mov
movsb
cmpsb
bound
mov
or
or
mov
inc
sbb
xchg
inc
mov
mov
dec
iret
ret
scas
cmpsl
push
imul
ds
fdivs
into
ret
mov
rclb
push
rcrb
mov
lret
mov
rcll
mov
lcall
into
add
ret
test
and
mov
clc
ret
pop
fsubl
mov
jne
lods
or
sub
pop
sahf
fisubrs
push
mov
add
xchg
mov
jecxz
xorl
fidivrs
pushf
mov
push
shll
or
mov
xchg
rol
push
lods
xchg
lcall
and
pop
ds
ljmp
mov
add
push
stos
inc
xchg
mov
mov
and
jo
les
testl
add
ss
or
imull
cmpsl
cs
in
in
push
scas
push
mov
fsubp
fs
ret
jae
loop
sbb
and
push
es
fistpl
mov
and
add
ds
fcmovbe
push
dec
sub
push
sub
lea
dec
hlt
pusha
mov
adc
push
push
mov
test
adc
ret
sbb
lds
popf
mov
mov
stos
mov
sbb
ss
aad
pop
out
dec
sbb
loop
or
or
adc
orl
pop
jae
ret
rcrl
iret
xchg
imul
outsb
mov
int
pushf
repnz
dec
loop
mov
andnps
pop
mov
arpl
pop
and
mov
outsb
cmc
mov
push
and
or
mov
jbe
mov
xlat
adc
pop
into
or
mov
ja
cmpsb
lahf
loop
jp
sbbb
lcall
scas
dec
scas
xchg
aas
or
subb
mov
daa
ret
push
lock
jmp
lcall
and
mov
pop
int
dec
push
mov
test
lahf
loopne
mov
shlb
ljmp
jl
pop
in
outsb
or
ret
xor
rolb
dec
fisubrl
mov
dec
cmc
pusha
push
ret
dec
dec
jae
leave
movsl
push
sbb
decl
mov
es
mov
sbb
ret
testl
mov
mov
dec
mov
shrb
adc
push
push
push
aas
sub
lods
cmpsb
cld
or
cs
fildll
push
sbb
fcmove
push
ss
les
sbb
lods
push
sbb
push
xchg
psrlq
mov
test
mov
pop
push
pop
popa
or
mov
dec
sub
mov
jecxz
cmpsb
mov
lea
cltd
fcomp
aam
or
mov
mov
jb
movl
test
cli
or
mov
push
mov
push
push
mov
adc
sahf
adc
adc
adc
cmpsb
adc
mov
in
cs
dec
imul
sarb
scas
test
ss
xchg
ret
push
bswap
push
ds
sbb
dec
nop
lcall
mov
xor
pop
dec
daa
int3
inc
mov
andl
movsl
add
je
dec
add
push
mov
mov
jne
xor
iret
or
xchg
lods
and
pop
bound
pushf
stos
cmp
xor
ret
cmp
iret
ret
sbb
lcall
mov
sahf
in
xchg
jne
loop
xor
daa
jge
gs
iret
xchg
testb
push
mov
push
cmp
je
or
out
mov
fcmovnbe
into
push
out
mov
filds
jne
jne
mov
xor
or
scas
fiaddl
adc
push
ds
test
push
pop
ret
inc
testb
dec
xorb
dec
subb
adc
scas
add
xchg
add
sub
cmp
enter
aas
roll
sub
outsb
mov
and
cs
clc
sub
jbe
cmp
mov
fcomip
xor
imul
pop
inc
es
lcall
iret
shrb
mov
mov
pop
orb
mov
and
cmp
dec
mov
push
or
fildll
sbb
mov
insl
adc
cmpl
iret
jecxz
and
jp
jno
mov
popa
cmp
inc
test
push
shrb
mov
cs
outsb
iret
pop
xor
ss
xorl
add
xchg
mov
and
xchg
push
push
aad
or
iret
xchg
push
addl
xchg
mov
imul
lds
and
xchg
sub
push
hlt
fcmovne
es
mov
stos
sbb
cmp
aam
stos
inc
jns
das
rorb
clc
sbb
les
xor
ds
mov
pop
orb
ss
mov
lods
bound
jecxz
stos
fiaddl
lock
mov
lahf
mov
mov
mov
or
add
hlt
ret
sbb
mov
movq
xlat
add
push
pop
insl
repz
cmp
and
popf
pop
imul
ficompl
add
dec
les
lahf
rorl
fcmovnbe
dec
cmc
cld
push
and
push
lods
out
mov
pop
push
push
scas
loopne
addr16
int
lcall
mov
jmp
out
into
ficoms
inc
cs
lahf
pop
inc
sbb
test
xor
push
mov
mov
fisubl
xor
sbb
fisttpl
push
fdivp
add
stos
mov
mov
hlt
insb
cmpsb
dec
pop
mov
ss
push
inc
pop
add
adc
popf
jl
into
clc
mov
dec
xchg
pop
loop
mov
and
mov
cs
mov
inc
lea
dec
shlb
cmc
add
ret
xlat
or
imul
hlt
aad
sbb
push
loop
sub
mov
cmp
or
sbb
dec
adc
iret
cwtl
stos
gs
add
sbbb
lcall
or
sub
stc
repnz
inc
jnp
lods
cmp
aaa
push
sahf
ficomps
je
pusha
sub
inc
ss
es
lahf
jecxz,pn
hlt
loop
outsb
stos
dec
lcall
push
rol
adc
push
mov
dec
pop
fbstp
clc
pop
mov
aas
inc
fldt
addb
test
pop
pop
inc
mov
inc
xor
mov
push
jmp
fisubl
push
in
mov
push
pop
mov
xchg
jecxz
insb
mov
mov
adc
adc
loop
inc
pop
sub
mov
call
fiaddl
sub
and
ljmp
xlat
dec
pop
fists
mov
jbe
adc
sahf
push
mov
sbb
add
xchg
mov
xor
outsb
leave
sbb
push
push
xchg
cs
mov
aam
mov
and
sbb
mov
rorb
aas
sub
sbb
inc
pop
rcrb
and
sub
mov
adc
add
std
into
mov
jae
and
xor
and
dec
pop
cmp
mov
lcall
and
push
sub
ret
xchg
sahf
cmpsl
sahf
mov
pop
mov
mov
leave
xchg
addb
pop
cld
add
sarl
inc
xchg
into
mov
gs
ds
iret
push
push
pop
cmp
inc
add
mov
dec
pop
andb
aas
xchg
ds
ss
mov
dec
cmpsb
scas
sub
inc
fiaddl
imul
stos
mov
mul
enter
out
aam
xchg
mov
push
movsl
adc
enter
cmc
jmp
int3
and
mov
sbb
sahf
les
lret
pop
add
fiadds
es
mov
pop
scas
cmpps
and
mov
lcall
jae
xchg
xlat
ds
into
mov
stos
mov
fisubs
jno
ret
outsb
ret
test
push
and
nop
ljmp
fxch
fistpl
lret
mov
ss
push
into
jg,pn
sahf
or
mov
inc
dec
call
sbb
hlt
ret
push
mov
into
iret
enter
je
pop
sub
pushf
or
mov
repz
inc
sub
pop
inc
iret
and
adc
sbb
loopne
ror
out
addr16
inc
and
xlat
cmp
outsb
ret
fisubs
mov
add
mov
cld
ss
ds
arpl
stos
push
push
mov
mov
sbb
adcl
push
inc
cmp
adc
testb
push
xlat
rol
inc
mov
pop
mov
das
xchg
mov
gs
cmpsb
into
aas
notb
mov
mov
cmp
test
cmc
xchg
lcall
push
addb
cmp
out
test
aam
add
mov
ds
push
xchg
cld
mov
out
andb
loop
jmp
mov
out
push
mov
jg
add
add
into
test
jle,pt
push
jo
xchg
jae
mov
mov
cltd
xor
cld
popa
add
sub
cs
mov
mov
xchg
pop
stos
jmp
leave
ss
sarl
cmp
and
mov
pavgw
mov
mov
ja
xchg
xchg
ret
dec
lret
fmuls
es
pop
jecxz
adc
bound
jmp
mov
sub
lcall
xor
pop
cmp
inc
xchg
jl
inc
ds
and
push
xor
imul
inc
mov
dec
push
push
dec
ss
sbb
fisubrs
mov
rorb
mov
fisttpl
cmc
dec
fdivl
stos
lcall
xchg
mov
in
outsb
push
add
dec
pop
in
ss
mov
outsl
push
adc
lock
sub
rclb
push
ficomps
dec
xchg
mov
rclb
fiaddl
addb
jmp
test
ret
nop
pop
ss
ds
sub
push
ret
dec
je
xchg
xchg
pop
rolb
js
insl
inc
lcall
fcomip
push
int
jbe
shlb
ljmp
push
pop
lahf
into
lahf
fistpl
fucomp
pop
rcrb
das
lcall
shlb
and
adc
andb
mov
dec
xchg
mov
xchg
cmp
adc
pop
lret
and
pop
adc
in
ss
mov
call
into
mov
jp
pop
push
adc
xlat
adc
dec
in
mov
mov
pop
jecxz
add
into
dec
pusha
inc
and
mov
jmp
adc
mov
shll
fisttps
ret
mov
scas
gs
fisttpl
dec
jne
inc
or
add
push
test
mov
out
cmpsb
cs
push
pop
xchg
bound
push
test
mov
push
ret
je
jbe
mov
neg
jmp
inc
inc
xchg
cmp
xchg
or
jg
xor
sbb
stos
es
jg
mov
pop
scas
decl
int
mov
rcrb
or
outsb
ffreep
push
xor
sbb
in
ss
or
ret
outsl
lahf
push
pop
loope
rolb
sbb
and
mov
div
scas
ds
mov
inc
int3
add
cs
adc
xchg
jecxz
mov
scas
in
add
bound
push
shr
into
lahf
mov
add
rcll
or
mov
xlat
push
dec
mov
push
xor
aam
cmpsb
mov
stos
fmulp
sbbb
ret
mov
loop
ljmp
xchg
xchg
push
cmp
int
mov
push
mov
and
rcrb
in
xchg
es
inc
out
add
in
lcall
pop
push
stos
into
imul
rclb
xlat
dec
lods
pop
in
daa
jo
push
push
ret
mov
mov
loop
inc
popf
inc
mov
outsb
cmp
out
pop
pop
push
mov
inc
in
xlat
push
outsl
nop
ja
mov
outsb
ss
rolb
ja
mov
jae
sahf
xor
or
movsb
int
mov
out
aad
xchg
ret
push
mov
mov
cmp
push
lret
cmp
sbb
and
xlat
scas
or
push
mov
ret
iret
aad
test
in
imul
fisubs
mov
std
lret
mov
lret
jge
ljmp
xlat
mov
int
or
in
adc
sbb
hlt
dec
cs
fists
sub
leave
add
es
into
movsl
mov
xchg
adc
pop
mov
xlat
out
push
stc
pop
outsb
mov
mov
mov
cmp
lahf
in
push
xchg
cs
icebp
int3
dec
push
push
dec
sbb
jge
iret
xor
fcmovnb
mov
sub
mov
mov
xchg
clc
and
sub
call
mov
in
addr16
je
ljmp
bound
pop
out
jo
xor
movsb
push
enter
addl
dec
push
outsb
aad
stos
cwtl
sahf
test
add
push
movl
push
pop
mov
fidivs
add
push
iret
xorl
jl
xchg
mov
addr16
push
dec
pop
dec
push
xchg
in
cmpb
mov
ds
shrb
sbb
js
pop
in
mov
mov
xor
adc
loop
cld
pop
iret
fcmovnb
mov
ret
mov
repnz
mov
mov
adc
lods
ret
faddp
sbb
push
dec
lock
push
or
repz
mov
xchg
mov
push
mov
das
adc
push
jle
lcall
push
stos
movsb
imul
sahf
scas
xchg
mov
sbb
scas
inc
mov
jbe
fs
sub
test
addr16
fiadds
cmp
cmc
cwtl
iret
fcmovbe
xor
sbbb
dec
inc
dec
popa
sbb
or
and
addr16
fimull
mov
orb
and
into
or
push
cmpsb
fcomi
lds
or
aad
mov
mov
push
push
test
sahf
inc
test
dec
dec
aam
and
out
sbb
fdivp
ret
dec
pop
inc
daa
in
xchg
xchg
dec
cld
and
iret
push
dec
loopne
jne
push
inc
mov
cltd
sub
sbb
test
jne
stos
adc
or
mov
push
es
push
add
ljmp
mov
ja
ss
lcall
sub
ja
sub
les
shrb
inc
pushf
xor
adc
rcr
pop
mov
fisubs
mov
mov
aas
insb
dec
dec
adc
movb
pop
lcall
mov
bound
cmc
into
ja
add
addr16
icebp
fs
je
push
es
ficoms
xor
pop
out
sub
push
jp
std
ds
filds
or
push
into
dec
and
xlat
shlb
das
loopne
inc
iret
in
sahf
scas
push
rcrl
cld
push
dec
sub
leave
xchg
ds
mov
sar
addr16
jle
mov
push
ss
push
push
pop
mov
rcr
sbb
outsb
sub
cmpsl
mov
mov
movsl
push
push
cmpsl
or
rcrl
mov
cld
sub
adc
ss
push
inc
lahf
cmp
mov
push
push
pop
jg
adc
mov
and
out
add
mov
pop
xchg
out
enter
es
xchg
mov
or
xchg
add
adcb
es
cmp
mov
movsb
outsb
arpl
push
mov
ljmp
cmp
lahf
data16
outsb
scas
and
cmpsb
mov
je
cli
sub
push
into
xor
lea
jecxz
lret
shlb
mov
push
rclb
cmp
push
outsl
mov
jecxz
adc
into
mov
sub
shll
jle
inc
sbb
pop
inc
inc
std
xchg
gs
stos
push
add
sbb
ss
mov
push
xchg
jno
adc
loopne
jecxz
mov
cmpsl
jl
lahf
icebp
pop
sub
or
adc
jbe
push
pop
clc
push
ss
jg
fisubs
fisubrl
add
sub
mov
ss
lahf
push
in
xchg
mov
add
adc
push
popf
cmpsl
push
in
cmpsl
adc
movsl
repz
sbb
mov
xor
popf
xchg
cmp
fisttps
cmp
ret
scas
cmpsb
add
repz
into
inc
push
idivb
adc
mov
outsb
mov
jbe
loop
mov
hlt
push
mov
push
mov
xchg
pop
mov
out
push
cld
sbb
into
sbb
jae
scas
xchg
add
or
add
addb
gs
cmp
lcall
sbb
ret
mov
push
mov
cmp
dec
scas
xchg
jecxz,pt
xchg
or
mov
lcall
dec
push
jecxz
push
aam
ficoms
push
adc
scas
dec
or
mov
daa
inc
inc
cmpsl
fstpt
lret
pop
pop
sub
mov
dec
inc
sbbb
pop
cmpb
and
mov
ret
out
test
nop
jbe
xchg
push
pop
sub
int3
or
out
iret
outsl
push
sub
adc
outsb
fmulp
fidivs
shlb
ret
mov
iret
cmpb
and
es
adc
mov
outsb
test
pop
daa
mov
adc
into
cmp
scas
mov
pop
repnz
push
int3
sbb
add
mulb
or
jbe
fisttpl
mov
out
xlat
dec
sub
mov
iret
add
out
imul
pop
push
bound
mov
out
es
sub
cmp
pop
scas
in
dec
ds
jbe
mov
jno
test
ret
jnp
push
movsb
dec
iret
out
jle
test
test
push
ret
imul
pop
xchg
mov
into
loop
dec
mov
inc
sub
push
mov
mov
cmpsb
rcr
xchg
sbb
mov
xchg
mov
push
mov
add
sub
xchg
xchg
ljmp
ret
sub
mov
test
mov
cmp
iret
pop
mov
xchg
into
leave
sbb
or
in
aam
fdivrp
mov
loop
push
push
mov
pop
jecxz
ret
dec
mov
and
push
mov
fistpl
jae
cs
sbb
add
sbb
dec
les
fldt
push
mov
adc
inc
stos
mov
add
test
sbb
fcoms
mov
or
mov
mov
fwait
rcr
div
xchg
cmp
dec
cmp
inc
jecxz
stos
sbb
fcomi
out
sub
gs
adc
jb
mov
cmp
xor
sub
adc
fistl
ds
cmp
jmp
xchg
mov
push
add
xorb
ss
dec
loopne
xor
push
shrb
adcl
scas
jle
lds
mov
stos
iret
es
push
pop
mov
xchg
xchg
jne
jmp
push
inc
pop
adc
inc
pop
xlat
mov
scas
out
das
mov
lret
mov
sbb
or
mov
xchg
inc
mov
pop
fistpll
push
mov
call
mov
and
fbld
aas
dec
lcall
jecxz
push
movsb
outsb
repz
ljmp
jg
ss
mov
out
aam
xor
aad
fbstp
pop
dec
sub
ja
xlat
push
inc
sub
outsb
sti
shrl
aas
jae
sub
and
xchg
mov
and
ds
push
fistpl
sahf
mov
or
xchg
orb
sub
rolb
loopne
push
push
mov
jle
ret
outsb
push
mov
std
subl
orb
xlat
push
into
ss
test
aad
dec
sahf
ret
je
cmp
jbe
sub
pop
mov
fstpt
out
into
negb
mov
mov
pop
push
cmc
daa
out
add
dec
loopne
mull
mov
les
mov
sbbl
xchg
imul
stos
orb
popa
iret
adc
test
loopne
ja
mov
ret
ss
shr
jne
push
sbb
sti
mov
stos
add
bound
push
push
xchg
sub
push
push
fdivl
jecxz
jbe
in
pop
rclb
add
mov
add
push
stos
ss
pop
xchg
mov
out
stos
hlt
inc
pop
push
sub
pop
jg
mov
jns
jne,pt
sub
dec
mov
pop
push
and
fisttps
sbb
cs
or
hlt
xchg
push
shll
in
jae
dec
adc
add
outsb
int
mov
push
out
sub
stos
cmc
outsb
adc
push
ret
mov
jae
pop
push
add
addl
inc
out
scas
and
mov
ljmp
popf
pop
out
cmp
into
or
std
and
mov
mov
sub
add
push
or
cmp
les
push
jecxz
mov
sbbb
gs
and
shlb
push
iret
mov
cmp
fiadds
dec
hlt
ret
loop
dec
mov
mov
push
mov
push
jae
lcall
stos
imul
xchg
rorl
or
sti
push
enter
add
pop
in
stos
xor
jbe
ljmp
inc
sub
push
mov
fiadds
mov
divb
mov
call
mov
and
in
aaa
sbb
push
nop
sbb
sbb
jg
ds
test
xchg
sub
pop
xchg
ljmp
hlt
xchg
loop
mov
jae
mov
into
or
mov
or
mov
scas
adc
into
mov
shll
cmp
ficoms
lcall
call
dec
int3
cmc
xor
push
adc
and
scas
rcll
push
fcomps
dec
repnz
sahf
adcb
inc
lock
cmp
add
andl
cmp
fcmovnu
sahf
sbb
push
push
xchg
stos
jmp
fs
hlt
stos
ds
mov
fbstp
jle
jbe
sub
cmpsb
xchg
or
mov
addr16
xchg
fcmove
xorl
lds
cmp
and
loop
std
mov
sbb
fidivs
xchg
mov
mov
int3
mov
mov
mov
pop
inc
inc
outsl
dec
pop
testl
jl
push
sahf
push
xlat
cmpsb
loopne
fisttpl
xor
push
add
mov
dec
sti
sub
nop
fsub
gs
sbb
loop
rcr
sub
pop
xor
push
cmp
out
sub
ficoms
mov
dec
pop
mov
xchg
jp
movsl
int
xchg
mov
push
iret
imul
pop
xchg
mov
push
xchg
ficomps
outsb
mov
lods
and
xchg
xor
xchg
push
sub
iret
mov
jb
xor
enter
sbb
test
icebp
push
inc
pop
push
cmpsb
or
imul
ror
pop
scas
push
ljmp
and
mov
imul
xchg
or
mov
bound
jp
rcl
jbe
push
outsl
ds
pop
lcall
jmp
clc
hlt
or
stos
call
cmpsb
push
push
movsb
dec
aam
or
enter
push
rcl
in
inc
add
ficoms
mov
ja
stos
push
pop
mov
xchg
es
cmp
cmp
add
mov
insb
fildl
sbb
dec
push
add
add
loope
dec
ret
out
gs
test
scas
ret
stos
mov
add
out
adc
or
test
je
fiaddl
lahf
add
das
pop
loop
rorl
sub
or
sbb
sub
sbb
mov
iret
sbb
pop
jbe
cs
js
addr16
jg
dec
xor
dec
jbe
push
mov
lods
shll
cs
push
push
push
mov
into
adcb
ljmp
push
into
movsl
push
dec
cmp
jmp
jecxz
pusha
xchg
mov
dec
shl
aam
dec
mov
mov
loop
ret
jecxz
adc
cmp
or
ret
pop
add
cs
outsb
xorb
rolb
int
scas
dec
pop
or
es
xor
lcall
push
int3
imul
mov
ss
sub
pop
xlat
pop
pop
jne
cs
insb
popa
and
push
gs
dec
pop
sub
sbb
adc
stos
movb
adc
fcmovu
push
and
add
mov
push
dec
ret
ss
pop
outsb
or
fistpll
jle
imul
mov
sahf
mov
fcmovbe
enter
scas
pop
rorl
stos
add
xchg
mov
mov
rcll
inc
push
cmpsb
cltd
mov
orl
iret
fbld
es
inc
push
dec
sbb
push
xchg
movsl
push
mov
push
ret
push
push
bound
sbb
push
jne
xor
mov
pop
mov
outsb
jne
es
leave
push
add
popa
fcmovnb
jecxz
mov
push
mov
sahf
or
pop
and
mov
dec
hlt
push
push
cmpsb
stos
xor
cwtl
repnz
jbe
sarb
pop
push
movsl
fisttps
imul
scas
or
xlat
lcall
or
ficoms
jle
xchg
add
scas
xor
insl
add
or
je
inc
dec
ret
pop
xlat
xor
iret
cmp
jnp
ds
mov
cmc
inc
ret
outsb
mov
mov
loop
mov
adc
sbb
cmpsb
scas
xchg
push
add
add
mov
out
add
ret
adc
mov
hlt
mov
pop
mov
lret
dec
out
and
xchg
pop
fldcw
push
add
xchg
cmpb
and
jecxz
lods
mov
cmp
jecxz
jmp
bound
shlb
int3
movsb
fimuls
sub
cltd
dec
xchg
cmp
into
xlat
cmp
sti
push
fcmovnu
sub
es
aad
in
inc
leave
mov
and
into
adc
push
ret
sub
es
es
mov
inc
and
xor
dec
cmp
cmpsb
and
push
add
out
loop
rorb
add
sbb
mov
cmpsl
jns
push
sahf
xchg
lcall
ds
rorb
int3
jbe
bound
sub
movsl
mov
inc
pop
xor
je
mov
cmpsl
push
cmpsb
dec
lahf
or
inc
push
ret
push
mov
push
xchg
inc
mov
cmpsl
push
pop
or
sub
push
lahf
pop
jae
movsb
jb
or
sub
insb
or
add
iret
and
pop
je
or
mov
subb
xchg
loope
inc
and
loop
inc
or
ljmp
out
out
ret
xchg
jg
fsubrp
jne
sub
xchg
mov
sub
jge
mov
jo
cmpsl
push
dec
dec
ficoms
mov
je
add
bound
ret
sbb
rclb
mov
inc
cs
jge
mul
ljmp
shll
mov
dec
push
mov
add
cmp
ds
out
gs
enter
mov
xchg
sbb
push
xchg
shl
mov
in
inc
mov
jbe
inc
out
jecxz
incb
sub
pop
mov
inc
bound
ficoms
jnp
gs
xor
add
dec
xlat
xchg
sbb
add
mov
fcmovnb
pop
iret
sahf
in
adc
sbb
jnp
and
xchg
mov
mov
mov
lahf
xchg
fcompl
xor
es
and
mov
push
in
outsl
mov
test
jno
ficoml
es
das
xchg
ret
dec
and
sarl
movsl
jne
xchg
mov
lret
push
xchg
inc
lods
jmp
sbb
adc
adc
pop
mov
mov
das
es
and
xchg
pop
push
bound
jecxz
mov
mov
add
test
or
pop
rolb
sub
outsl
and
out
sub
add
mov
jle
inc
sahf
xlat
test
inc
xchg
xorb
or
push
mov
mov
imul
push
gs
and
mov
push
inc
and
push
dec
out
adc
xlat
or
in
addr16
add
mov
sub
ret
push
rorb
or
and
int
pop
mov
jecxz
scas
pop
js
in
push
or
sbbl
inc
ret
loopne
sbb
and
es
mov
outsb
mov
gs
dec
sub
pop
insb
jge
mov
fwait
dec
xchg
xor
dec
add
mov
repz
sbb
gs
jp
xchg
movsl
and
add
sub
dec
loop
sub
sbb
ret
stos
addb
add
aaa
cwtl
adc
pushf
jecxz
cmp
jecxz
cltd
push
in
addb
or
jg
out
mov
inc
icebp
roll
in
pop
shlb
push
mov
pop
outsl
rcrl
les
clc
ficomps
movsb
mov
sbbb
jecxz
xor
xor
stos
cmpsb
test
add
push
mov
es
jecxz
jo
outsb
stos
dec
jne
mov
mov
mov
cmpsl
rorl
mov
or
in
xchg
leave
loope
push
mov
icebp
mov
inc
loope
mov
ds
sbb
iret
inc
sub
ljmp
fcompl
fcmovnbe
mov
xlat
icebp
sub
push
xchg
and
push
rcr
mov
and
cs
sahf
sub
mov
in
imul
and
mov
jg
add
ret
dec
and
shll
push
xchg
ret
test
adc
fiadds
nop
or
mov
inc
push
xchg
jecxz
push
fwait
xor
mov
and
push
cmp
sub
or
mov
shlb
ljmp
bound
cli
je
mov
sbb
stos
push
imul
xchg
mov
mov
fcompl
cmp
dec
mov
ljmp
and
out
jl
cs
or
cmp
mov
bound
lcall
inc
mov
pop
and
movsb
mov
es
adc
adc
out
ljmp
lcall
push
sbb
cs
movsb
pop
ss
lcall
add
mov
xchg
test
xchg
inc
cs
adc
xor
push
ljmp
push
mov
pop
xor
ds
add
into
mov
loop
es
mov
sub
mov
jmp
pop
pop
and
mov
jno
and
push
push
add
int
inc
xchg
imul
and
sbb
shll
in
inc
cmc
jno
inc
xor
mov
pop
sub
loop
jnp
ss
test
push
sbb
loop
xchg
push
cmp
mov
dec
subl
mov
cmp
sbbb
stos
and
je
sub
and
pop
adc
outsb
fisubrl
xor
lcall
xchg
scas
leave
adc
cmp
push
cs
ret
mov
mov
adc
cmp
pop
hlt
add
cmpsb
and
push
shl
outsl
ficompl
fistpll
enter
lods
je
fcomi
pop
mov
xor
mov
and
jae
sub
bound
jo
std
scas
inc
jbe
mov
push
test
adc
in
push
popf
xchg
pop
imul
ss
aaa
hlt
inc
xchg
sub
cwtl
push
pusha
add
lea
shll
addr16
push
out
sub
arpl
lcall
add
xchg
out
mov
push
dec
ds
mov
cmp
sarb
cld
imul
and
pusha
mov
lret
inc
bound
and
insb
or
cmp
cmc
sub
xor
mov
mov
sub
sbb
mov
cmpb
sub
mov
pop
ret
sbbb
loop
push
mov
es
jp
adc
and
sub
ret
ret
lods
push
ljmp
pop
into
push
add
adc
pop
iret
stc
pop
xor
das
into
es
mov
rcr
inc
iret
fiadds
lods
sbb
or
hlt
and
fiadds
rclb
sahf
and
jns
dec
and
add
xor
xor
ret
jle,pt
dec
pop
sub
movsl
dec
pop
pop
test
push
xor
xchg
sbb
mov
or
inc
push
push
adc
jae
sub
push
lcall
add
pop
lock
push
xchg
loop
push
addb
cmpsb
jecxz
ficoml
push
cmp
xor
dec
sbb
jbe
push
pushf
out
push
ss
into
gs
rcrb
sbb
sbb
or
cmp
cmpsb
add
mov
push
into
cmp
into
dec
add
mov
cmp
mov
xor
xrelease
mov
mov
push
dec
gs
sbb
mov
xchg
push
ja
xlat
cmpsb
or
push
push
xrelease
aam
push
jg
xchg
xchg
jl
adcb
sahf
mov
cmp
scas
push
jp
mov
aaa
push
xchg
mov
and
adc
imul
adc
add
xchg
mov
jecxz
dec
les
pop
pop
and
xchg
test
ret
dec
inc
push
es
jecxz
mov
mov
xchg
pop
sub
loop
mov
mov
push
shll
or
sub
es
mov
jb
push
mov
adc
inc
imul
jns
dec
and
fisubs
sahf
push
xchg
xor
jge
add
scas
or
mov
lahf
jb
xor
jecxz
and
inc
or
incb
fldl
dec
xor
dec
es
add
dec
pop
ret
loopne
adc
loop
dec
int
xor
clc
lods
mov
rorb
scas
lret
add
popa
push
into
adc
mov
iret
stos
push
inc
push
std
ss
leave
mov
adc
loop
add
push
arpl
shrb
xlat
repz
mov
out
pop
pop
pop
dec
enter
sub
sub
and
add
movl
mov
or
xor
pop
insl
fdivl
in
push
data16
pop
inc
mov
mov
sbb
mov
mov
cwtl
sub
jns
or
or
mov
push
jl
ja
mov
and
mov
das
xchg
jmp
mov
inc
push
loop
gs
adc
out
outsb
fdivrp
or
dec
mov
ret
xor
and
jae
push
mov
not
cmp
mov
subb
ret
sub
outsl
mov
ljmp
xor
mov
push
stos
sub
scas
es
in
cmpsl
xor
jge
sub
xchg
push
push
xchg
xchg
xlat
push
out
fidivrl
iret
cmpsb
pop
push
push
or
je
mov
sub
sbb
out
fdivr
mov
mov
xlat
add
xchg
push
cs
lret
add
sbb
sbb
mov
inc
shll
lahf
ret
stos
cmpb
or
fcmovne
or
pop
pop
xchg
movsb
lret
mov
movsl
es
outsb
icebp
mov
enter
fnstcw
int
and
jbe
cs
bound
outsb
mov
sbb
xor
inc
fisubl
mov
push
mov
movsb
negb
into
mov
sahf
jecxz
mov
adc
mov
inc
and
xor
insl
and
pop
ja
adc
mov
ret
imul
sub
mov
push
loop
and
push
lods
mov
push
into
mov
std
add
pop
imul
sarl
lahf
hlt
nop
xlat
ljmp
add
xor
shll
cmpsb
sbb
xor
xor
jge
jae
stos
rcll
adc
xor
add
fmulp
push
inc
std
or
cmc
mov
dec
lcall
outsb
fidivrs
dec
inc
lea
or
je
sahf
scas
mov
ss
mov
inc
fcmovb
mov
sbb
insl
add
lods
popa
jecxz
sarb
testl
fwait
push
mov
into
gs
dec
add
ret
jno
push
push
cs
lods
cmp
iret
out
sub
loop
dec
es
xchg
dec
push
sub
sar
in
loope
sbb
mov
out
js
dec
mov
or
and
insl
mulb
push
sub
popf
push
push
jmp
xor
daa
fiaddl
cmp
fbstp
mov
push
shlb
ror
bound
movsb
sub
cmp
cmpsb
cs
pop
scas
daa
rcl
pushf
aam
xchg
fildl
mov
inc
mov
orb
rol
sbb
fimuls
push
ret
mov
data16
jbe
xor
lahf
loop
ja
pop
out
sahf
stos
jg
and
ss
push
es
and
add
sahf
sbb
fstpt
negb
shr
mov
add
xlat
iret
rol
push
push
fisubl
movsb
lcall
ss
cs
aam
mov
ds
push
mov
cli
sbb
fisubs
xchg
fistpl
xor
or
ss
outsb
imul
scas
ret
push
mov
es
cli
xor
in
inc
mov
cmpsl
pop
imul
jae
cmp
shlb
mov
lahf
fisttpll
adc
iret
ret
fldt
mov
outsb
and
or
fmulp
pushw
adc
out
push
cmp
mov
ret
mov
adc
enter
cmpsb
orb
scas
sub
mov
bound
mov
push
out
cs
ret
push
mov
std
push
sbb
push
jp
ret
jecxz
ds
and
ljmp
pop
xor
mov
push
lock
mov
push
in
in
ljmp
xchg
pop
cmp
xchg
loop
out
mov
push
push
inc
xor
bound
mov
je
push
jecxz
xchg
add
sbb
fidivrl
and
std
cltd
lahf
stos
jge
dec
iret
pop
mov
mov
pop
pop
pop
daa
or
push
pop
imul
cmp
std
ret
jbe
sub
mov
movsb
stos
lahf
mov
ret
add
andb
jbe
dec
bound
std
pop
push
ds
iret
in
shll
mov
fsubr
or
ret
or
nop
bound
dec
add
push
dec
call
dec
mov
sub
iret
push
adc
xchg
xchg
push
cwtl
mov
xchg
in
lds
mov
cs
inc
xorl
pop
push
hlt
loop
xor
jecxz
dec
bound
push
push
and
or
or
imul
std
xchg
push
icebp
adc
push
ds
aaa
sbbb
into
push
cwtl
dec
loop
movsl
mov
push
sub
push
arpl
xchg
pop
les
stos
fildl
ljmp
mov
mov
fcoms
push
jne
and
fs
xor
xchg
into
ret
ljmp
fcmovnbe
xchg
negb
bound
push
and
mov
ret
mov
insb
mull
scas
or
inc
ss
xor
popf
sbb
lahf
shl
iret
xchg
dec
push
sbb
cmp
divl
es
and
das
shll
and
and
pop
pusha
aam
push
rcll
jbe
inc
push
xor
mov
mov
and
jns
lods
jle
add
lahf
cmp
mov
gs
out
ficoms
mov
inc
cmp
dec
fildll
ret
inc
push
ret
cmp
push
sbb
call
loop
jnp
sub
pop
cmpsb
add
sbb
cmp
mov
pop
xor
sbb
xchg
push
orl
les
test
mov
repz
test
xchg
adcl
mov
sub
add
adc
mov
inc
fmull
mov
es
loop
pop
push
cs
inc
push
add
es
loopne
andl
lods
add
push
cld
cmc
loop
ss
adc
subl
stos
shlb
mov
sbbb
add
adc
push
mov
in
cmp
jbe
fldt
add
inc
mov
rcrb
es
and
fucomp
dec
arpl
insb
or
cmp
cmp
ljmp
jecxz
or
ret
movb
add
test
lds
or
xchg
adc
adc
and
loopne
seto
mov
shrb
js
adc
sarl
sub
cmp
std
xor
add
es
xchg
into
xchg
orb
mov
lcall
fcompl
push
daa
mov
and
loop
shr
push
cmovae
push
cmp
sahf
es
dec
shrl
cmp
mov
push
jmp
outsb
in
loopne
fcoml
ret
pop
stos
push
and
cs
mov
dec
loop
lret
jbe
push
mov
vmwrite
inc
push
mov
sahf
and
aam
cmp
ds
das
push
fs
cmp
jnp
test
jnp
push
mov
fadd
in
sub
push
push
ret
mull
sbb
mov
sbb
cld
push
dec
and
ficoml
shrl
or
xchg
cmpb
inc
push
cmp
aad
mov
lods
stos
mov
or
mov
xor
loop
add
sar
je
mov
cli
ss
push
push
xor
lcall
cs
cmp
and
lret
xchg
adc
push
add
xor
out
lcall
arpl
inc
xor
ds
call
xchg
stos
ret
insb
ja
push
push
loop
xchg
mov
jo
push
mov
cmpsl
xor
testl
adc
xchg
adc
lcall
das
adc
pop
mov
lods
daa
aam
pushf
out
aad
loop
rol
cmpsl
push
ret
jle
shlb
scas
mov
push
outsb
adc
lcall
leave
popa
rcrb
xlat
mov
orb
mov
dec
inc
loop
test
outsb
cs
add
add
pop
outsb
xor
mov
dec
mov
data16
lds
repz
xchg
mov
mov
xchg
fwait
sbb
lods
out
add
dec
call
lcall
sub
mov
mov
cmpsb
xor
lahf
mov
xlat
and
mov
cli
or
mov
outsb
je
push
ret
cs
cmp
jne
fmulp
lahf
mov
or
add
gs
mov
inc
cmp
push
pop
adcb
outsb
push
mov
fbstp
lcall
cmpsb
lahf
xchg
fistps
xchg
push
mov
jecxz,pt
sbbb
subl
mov
into
and
xor
xchg
sbb
ds
imul
dec
test
pop
insl
cmpsb
push
stc
add
push
shll
push
ficoml
ret
fdivrs
add
and
cld
das
in
rcrl
daa
bound
outsb
sarb
adc
cmp
xchg
stos
push
mov
test
in
push
into
mov
test
mov
cmp
push
xchg
outsb
cli
add
loop
push
iret
xlat
mov
jmp
push
fcmovu
ret
push
stos
mov
sahf
pop
mov
xchg
push
iret
xchg
outsb
lds
and
cld
fcomi
mov
std
xchg
mov
jmp
push
ret
push
push
outsb
loopne
mov
mov
out
pop
dec
push
cmp
and
push
mov
pop
inc
fistpl
jge
loop
popa
filds
leave
out
int3
push
je
ss
xchg
aad
fimull
in
addr16
cmc
push
movsl
ficoml
push
sar
jl
push
xlat
es
push
mov
cmpsl
push
pop
scas
int
add
mov
xchg
mov
xchg
pusha
sarb
jb
jno
xchg
mov
pop
xlat
mov
push
loop
sti
push
dec
mov
mov
loop
sarl
data16
icebp
add
int
mov
arpl
jno
push
dec
pop
xlat
and
push
jle
or
push
je
fstpt
pop
pop
mov
aam
ficompl
and
rorb
mov
ljmp
and
jle
fs
mov
mov
das
aaa
push
dec
lret
ds
lods
fildl
outsb
or
fistl
ds
mov
sahf
cmp
cmc
into
or
xor
lahf
jecxz
mov
inc
cs
adc
jae
cmp
xlat
push
jg
mov
ss
xchg
out
in
je
sub
cmc
scas
add
add
cmp
loope
xlat
xchg
enter
aam
mov
jb
pop
push
mov
mov
aad
and
push
jne
xor
and
ret
mov
sbb
push
ds
fidivs
ss
mov
sub
lahf
loop
mov
or
xchg
cld
outsb
aam
mov
sub
fsubl
dec
sbb
mov
pushf
lcall
push
push
ds
xor
mov
loop
add
add
lahf
lahf
dec
mov
mov
aam
jecxz
inc
xor
xlat
xor
leave
neg
cmp
xchg
push
stos
dec
insb
stc
imul
sbb
sbb
into
push
es
es
ret
imul
xchg
mov
mov
shrb
sub
xchg
and
or
aam
xor
subb
icebp
cmp
jle
es
xchg
xchg
xlat
or
inc
adcl
adc
es
pop
aam
ss
lods
test
je
stos
mov
cmpsl
mov
fimuls
xchg
xchg
cs
aam
aas
mov
scas
cmp
xchg
ret
scas
and
sbb
inc
ja
mov
fistps
sub
mov
sbb
stc
rorb
xchg
dec
lcall
mov
push
jg
cmpsb
jle
cmp
add
push
iret
push
dec
shlb
lds
fidivs
push
loop
and
cs
sbb
shll
pop
mov
cld
adc
rorb
inc
mov
fimull
cs
movsl
cmp
imul
lret
mov
xchg
or
xlat
cmp
xor
in
adcb
xchg
mov
push
mov
mov
cs
or
xor
push
push
push
inc
xor
add
add
mov
sbb
sub
sbb
inc
cmp
fstpt
in
cmpsl
push
xchg
mov
pop
push
scas
xchg
and
push
repz
add
popf
lcall
shrb
aad
int
aas
adc
ds
mov
xor
call
push
lods
adc
movsb
idivl
sub
inc
lahf
pop
pop
cmpsl
ljmp
mov
int
push
gs
movsb
into
sbb
sarl
fisttpl
in
loop
cmp
js
aad
ja
shlb
lods
imul
jne
bound
ljmp
je
iret
xor
add
cs
cmpl
outsb
pushf
mov
xchg
push
inc
or
add
xlat
pop
mov
mov
jp
movsl
mov
dec
es
in
jl
test
dec
cmp
ljmp
lret
xor
push
leave
xchg
mov
cmpsb
sbb
mov
add
mulb
mov
scas
pop
je
mov
bound
and
push
mov
mov
outsb
loopne
ret
mov
arpl
xlat
jne
stos
sub
out
in
mov
pop
sbb
into
and
cmp
aad
fmull
push
mov
scas
loop
lcall
repz
and
iret
test
adc
add
lcall
sbb
push
sub
sub
adc
sub
loop
xorl
sbb
mov
or
cs
gs
sub
outsb
testb
xchg
decl
push
aam
lret
and
dec
mov
push
pop
icebp
push
ss
push
aad
push
adc
add
testl
push
pushf
imul
mov
lods
cmpsl
xchg
cmpsl
mov
jno
dec
ret
pop
int3
fisubs
mov
inc
add
push
jne
or
cmp
add
xor
jbe
mov
push
lods
push
mov
xor
jecxz
hlt
in
add
dec
push
cwtl
inc
vpor
rorb
xchg
ljmp
and
xchg
imul
repz
cmp
stc
out
and
mov
cmp
push
stos
mov
dec
push
and
test
es
mov
push
pop
add
xlat
add
mov
nop
adc
test
pop
enter
xchg
adcb
out
decl
mov
mov
sbb
mov
fs
and
in
cmpsb
add
ja
push
addr16
inc
fldenv
cmp
test
or
fiadds
and
jmp
ficoms
dec
push
fidivrs
sub
ret
movsl
dec
sahf
fdivrs
mov
gs
dec
push
sbb
mov
sub
cmpsb
orl
and
fcmovb
sbb
push
pop
aas
sbb
cmpsb
fsubl
cld
fistl
mov
lea
fisubl
outsb
fisubrl
or
into
mov
iret
or
sub
loopne
mov
mov
cs
fsubs
push
dec
mov
mov
pop
adc
dec
push
movsl
lods
dec
or
sti
jae
mov
divl
push
or
push
mull
sbb
mov
lds
ds
xchg
add
scas
xlat
fadds
push
mov
mov
ret
jo
add
ja
push
mov
stos
mov
into
sub
cmp
pop
xchg
ljmp
mov
movsl
subb
mov
mov
push
repz
xchg
sahf
popa
dec
lcall
mov
pop
into
xchg
call
xlat
ret
dec
dec
mov
cmpb
test
mov
jo
dec
es
xor
dec
aas
int3
add
add
sbb
into
fisttps
ds
stos
push
xor
shll
mov
leave
and
iret
lcall
and
lock
jmp
dec
pop
mov
je
rcl
xor
push
adc
std
adc
ficomps
loopne
mov
xchg
ljmp
mov
bound
ret
mov
sub
or
loop
insl
inc
mov
sub
data16
fdivl
shlb
repnz
testl
into
or
fisubl
rcrb
or
xchg
out
les
test
lahf
lcall
pop
sub
push
and
addl
mov
mov
ror
stos
or
movl
inc
shll
xor
cmpsb
pop
fs
mov
pop
or
fsubrl
adc
je
cmpsb
mov
dec
mov
add
add
mulb
ret
lea
jmp
adc
mov
mov
push
imul
adc
cmc
hlt
loop
sub
push
insl
ret
shl
mov
add
icebp
push
dec
jb
dec
cs
push
pop
lea
fcmove
jp
pop
adc
ds
loop
mov
mov
ret
loop
push
jg
cmpsb
mov
mov
adc
mov
sub
and
aam
andb
ret
xchg
sbb
sbb
inc
pop
fimuls
pop
push
mov
mov
pushf
xlat
cmp
stos
subb
and
fimuls
leave
std
test
into
in
mov
or
mov
or
pop
adc
cmp
cmp
mov
and
add
das
mov
cmpsl
shlb
test
shl
jae
es
adc
aad
xchg
shr
jge
cmp
fistpll
ljmp
mov
mov
scas
xchg
bound
jns
or
iret
pop
imul
push
orb
fmuls
sbb
or
dec
loop
ret
or
or
sbb
jecxz
movsb
fisttpll
es
mov
out
mov
pop
cmc
mov
mov
inc
cmp
jb
rcll
adc
imul
imul
imul
sbb
dec
xchg
inc
ret
xchg
fiadds
sarb
pop
inc
inc
sahf
mov
ss
push
pop
cmp
mov
ss
sub
xchg
stos
sbb
inc
mov
into
and
test
and
cmp
xchg
jmp
inc
dec
mov
cmpsb
mull
fimull
cmpsl
xchg
into
daa
std
and
cmp
sub
mov
mov
or
mov
jp
in
cld
pop
sub
lcall
int3
dec
cmp
xorb
cmc
cld
cmpsb
lods
lods
xchg
es
xchg
jne
inc
dec
stos
repnz
movsb
pop
testl
jbe
push
xchg
divb
push
and
or
repnz
testl
add
fs
test
stos
nop
ja
mov
or
inc
push
sub
mov
stos
sub
into
inc
stos
add
mov
iret
in
mov
add
cs
mov
pop
mull
pop
sub
pusha
inc
xlat
mov
mov
mov
jbe
cmpsb
inc
add
pop
cmp
or
mov
ss
shr
xor
subl
mov
add
rcll
adc
adc
fcompl
es
lcall
jb
test
daa
inc
xchg
loop
cli
push
cmpsl
ds
jge
movsl
push
mov
aas
inc
data16
mov
push
mov
xchg
push
jecxz
clc
insb
loopne
push
xchg
push
push
int
dec
and
inc
push
dec
mov
lds
push
scas
ja
cmp
lret
mov
cwtl
push
in
xchg
push
xlat
bound
popf
xlat
fcomi
sub
cmp
pop
sub
adc
out
xchg
push
pop
and
jecxz
mov
daa
cmpsb
gs
xor
pop
cli
push
ds
xchg
ss
mov
mov
dec
mov
cmp
pop
mov
idiv
lahf
pop
push
push
mov
mov
iret
outsb
mov
cmp
xchg
ss
lret
add
cmpsb
mov
and
push
ret
popf
bound
test
sahf
xor
mov
insl
cmp
sub
lret
cmp
add
cs
inc
fisubrs
lcall
es
sbb
fimuls
fldenv
aam
push
and
inc
inc
xor
pop
int3
mov
es
fiaddl
mov
and
imul
faddl
andb
out
loop
into
jno
mov
mov
add
xchg
es
out
mov
mov
stos
mov
mov
fbld
mov
decb
loop
add
aad
xchg
push
ljmp
push
xlat
sbb
outsb
jno
out
inc
js
lods
pop
stos
imul
inc
or
xor
rclb
add
pop
dec
dec
inc
add
cmp
fs
rorb
stos
test
xchg
iret
push
stos
mov
and
push
or
ja
cmp
lods
bound
jge
cmp
mov
scas
ds
sbb
pop
out
iret
adc
imul
or
cmpsb
inc
jl
xlat
gs
ret
popf
mov
push
shlb
or
and
cmc
adc
push
mov
clc
ret
dec
leave
mov
xchg
mov
fisubrl
aam
adc
pop
adc
dec
pop
outsb
mov
sub
pop
roll
fwait
dec
into
fmull
xchg
sub
enter
sbb
add
cld
push
mov
add
mov
sub
cmp
ss
jne
fists
sbb
pop
stos
lahf
insl
push
std
out
sub
fildl
adc
inc
imul
xor
scas
mov
and
pop
bound
and
pop
xchg
in
and
dec
or
cmc
jns
mov
dec
adc
lahf
daa
mul
sbb
pop
ljmp
push
aaa
push
mov
mov
jbe
mov
or
and
and
cmp
adcb
out
and
imul
jmp
je
xchg
movsb
fildll
std
cmp
dec
sbb
pop
in
push
insb
and
mov
test
sti
cmpsl
iret
xor
cmp
mov
mov
bound
ss
orps
stos
rol
dec
mov
adc
movsl
testb
mov
out
cmpb
push
xchg
and
lock
ret
das
mov
mov
add
pushl
subb
out
lret
sbb
lahf
or
out
mov
xlat
stos
push
aam
xor
mov
fildll
stos
sahf
filds
mov
cs
fmulp
inc
fcmovbe
lock
mov
adc
adc
cmpsb
adc
cmp
add
adc
mov
cmp
sbb
pop
js
sub
fisubrs
push
sub
loope
adc
into
cmpl
dec
test
loopne
pusha
inc
add
or
dec
imulb
add
mov
adc
addl
inc
sbb
test
imul
pop
mov
xchg
mov
out
mov
adcl
mov
pop
gs
stos
cli
pop
mov
xchg
mov
cs
data16
xlat
dec
adc
add
stc
push
xlat
pop
add
icebp
mov
add
mov
fwait
es
aas
bswap
into
sub
push
faddl
out
ret
repnz
add
js
jecxz
test
add
scas
adc
mov
push
push
nopl
ret
cltd
mov
pop
lcall
cmpsb
faddp
aad
inc
ds
add
insb
jecxz
cmp
push
adc
fisubl
mov
push
icebp
dec
pop
outsb
and
rcl
push
add
add
pop
or
mov
adc
or
push
mov
jbe
fbstp
push
and
hlt
sbb
push
and
ljmp
push
push
into
dec
jecxz
sbb
popa
mov
sbb
incb
xchg
lods
fistpl
shr
mov
xlat
push
shll
mov
and
mov
lcall
add
mov
bound
mov
and
mov
push
clc
or
add
xchg
test
imul
lods
add
add
outsb
rcrb
lahf
std
orb
cmc
add
add
xchg
sub
bts
cmp
adc
sar
adc
and
and
iret
daa
cmpsb
xor
ret
fidivrs
add
mov
push
cmpsb
stos
add
push
cmpsb
js
xor
jp
mov
xchg
rorl
inc
iret
push
outsb
insl
aas
mov
jbe
mov
test
sub
xchg
sbb
rcll
xchg
mov
push
add
dec
or
lret
lcall
push
push
adc
scas
push
inc
ficomps
fucom
jecxz,pn
shlb
push
iret
push
ret
call
xor
push
lock
lcall
loope
or
pop
ret
mov
push
xchg
add
fimull
mov
add
and
mov
out
mov
xor
xchg
cmp
ljmp
call
shlb
ljmp
dec
cs
inc
rcll
xchg
push
push
adc
mov
and
cmpsb
push
lea
das
mov
sbb
inc
loop
js
push
dec
ficoms
lahf
push
pop
out
fisttpl
movsl
outsb
and
jne
xor
xchg
add
fisubrs
imul
push
add
mov
or
fdivl
bound
inc
sbb
inc
mov
pop
out
fwait
pusha
mov
cmpsb
loopne
lods
push
push
xor
sbbl
cltd
clc
cmp
test
mov
in
fisttps
mov
cmpsl
mov
push
mov
inc
enter
mov
push
and
mov
inc
iret
mov
push
and
orb
ja
or
mov
mov
mov
dec
outsl
es
mov
imul
push
xlat
mov
inc
add
pop
jmp
scas
out
mov
fisttpll
push
bound
es
mov
sbb
lock
push
js
into
ljmp
pop
push
pop
roll
cld
cmp
push
jp
pop
sub
push
xchg
sbb
adc
sbb
es
or
inc
in
lret
into
and
xchg
push
sbb
dec
std
int3
call
pop
and
ret
mov
push
and
loop
pop
sub
mov
es
mov
jnp
ds
xorb
mov
outsb
ret
push
leave
hlt
imul
and
push
aad
jp
add
ret
dec
orl
dec
adc
inc
mov
mov
push
dec
add
push
test
xchg
mov
fcmovne
mov
sub
outsb
cmpsb
stos
or
fisubs
sub
cmp
imul
fidivs
es
mov
and
cmp
push
out
aad
repnz
xchg
push
push
lcall
xchg
sbb
cmpsb
xor
xor
lret
cli
sti
add
mov
ja
push
push
dec
or
ret
and
fisttpl
pop
sahf
push
xchg
loop
in
mov
dec
adc
mov
test
bound
mov
dec
into
pop
outsb
mov
lret
or
fidivrl
popf
sub
movsb
iret
adc
ss
cmpl
lahf
mov
add
mov
scas
sahf
cltd
cwtl
jmp
enter
mov
ret
jp
fistl
jg
or
ljmp
and
mov
push
cld
inc
pop
or
into
add
roll
push
mov
add
shlb
lcall
iret
push
test
mov
out
push
xchg
lcall
ficoml
cmp
add
scas
and
test
fidivrl
mov
mov
mov
outsb
cmp
fsubp
push
dec
cmp
imul
push
mov
repnz
cmpsb
mov
es
ds
cltd
push
fsts
and
imul
and
icebp
stos
or
push
jl
iret
push
pushf
arpl
into
ficomps
test
xor
aam
xor
rolb
adc
cmpsb
mov
jle
push
das
or
data16
inc
shr
push
imul
xchg
mov
pop
fbld
mov
ret
lcall
decb
add
dec
lock
xchg
bound
test
in
mov
testl
xorl
push
lods
mov
hlt
lea
dec
xchg
pop
aaa
jnp
push
int3
or
jne
xor
ret
push
out
pop
pop
lret
test
mov
ficoms
mov
push
loop
pop
pop
and
imul
js
in
outsb
jne
dec
stos
daa
cmp
or
jle
roll
insb
push
fistps
inc
lcall
sarl
adc
push
xchg
dec
btr
sub
ljmp
outsl
pop
xchg
adc
and
outsb
aam
fimuls
pop
ljmp
mov
jp
sbb
push
or
cmp
aad
or
into
jecxz
imulb
sub
scas
outsl
fs
test
mov
cmpsb
sahf
jle
sub
iret
test
add
lds
cmc
enter
insl
push
dec
movsb
imul
jnp
adc
or
jp
dec
sub
inc
sub
shll
add
xchg
mov
iret
dec
loopne
jg
or
mov
sub
mov
cmpsl
push
ret
jmp
cmp
scas
ss
lahf
fisttpl
sub
add
or
mov
scas
inc
adc
ficompl
mov
mov
cmp
or
rcl
and
fucomi
push
in
mov
pop
cmc
sbb
fcmove
fists
loop
inc
push
push
jne
outsb
sub
xchg
pslld
lods
mov
int
push
sbb
mov
ret
push
or
xchg
pop
ss
xchg
or
fists
push
lahf
sahf
and
mov
mov
loop
push
iret
cs
ficoml
cmpsb
or
pop
xchg
rclb
enter
sub
pop
test
lock
cmp
push
and
ja
mov
imul
pop
lods
cmp
mov
xchg
cmc
rcl
push
inc
lahf
push
ret
in
cmpsl
xor
iret
fcoml
mov
lcall
mov
sbb
clc
jg
rcll
nop
dec
cmp
push
mov
movl
pop
loop
pop
xchg
cs
mov
push
stos
jbe
mov
cltd
add
mov
pop
out
inc
push
fidivs
fadd
rol
daa
ds
sub
mov
idivb
mov
bound
mov
pop
inc
mov
inc
sub
mov
push
fildl
sub
icebp
add
xchg
pop
push
cs
mov
sbbb
or
sbb
mov
lret
or
jp
lea
mov
jecxz
push
adc
shlb
sarl
sub
xchg
xlat
fnsave
mov
fisubl
cmpsb
mov
xchg
and
and
xor
xlat
pop
add
dec
ret
shr
mov
adc
or
lds
ljmp
mov
es
mov
imul
jecxz
shlb
mov
iret
or
hlt
loop
ds
mov
pop
pop
push
lcall
xchg
mov
imul
or
pop
xorb
rcrb
mov
sbb
add
mov
adc
push
ret
scas
push
pop
push
cmp
cmp
bound
je
cs
roll
movsb
and
fidivrs
pop
aas
daa
mov
out
and
scas
sbb
out
lret
sub
outsb
stos
push
push
xlat
test
sbb
pop
add
and
je
sahf
push
addr16
stos
sbb
push
mov
ds
dec
out
ds
mov
shrl
dec
loop
in
inc
jle
xchg
loope
iret
enter
jl
and
push
mov
push
push
arpl
inc
dec
pop
xor
hlt
iret
sbb
jecxz
fisttps
ss
cmpsb
mov
mov
iret
xchg
hlt
mov
int
repnz
xchg
loopne
lcall
lods
mov
loop
out
xchg
mov
xor
int
jecxz
int3
pop
imul
or
or
testl
push
fisubs
loopne
or
or
stos
mov
ljmp
ss
jns
sbb
cmc
and
xchg
ret
scas
adc
ss
out
cmp
addr16
aam
inc
subl
lock
frstpm(287
dec
cmpsl
sbb
add
mov
xchg
icebp
or
cmc
cmp
add
inc
xchg
mov
mov
orb
stc
cmp
xor
outsb
imul
inc
mov
scas
push
mov
cmp
je
inc
mov
test
or
sub
or
dec
pop
add
or
fdivr
xchg
mov
into
cmpsb
and
xor
add
mov
push
into
push
jp
inc
out
mov
xchg
mov
mov
bound
sahf
adc
dec
add
mov
fildl
add
test
xchg
xchg
ja
push
xchg
dec
push
pop
cltd
rorl
inc
test
add
xchg
cs
dec
ret
iret
adc
daa
insb
loop
xchg
sti
lcall
mov
arpl
ljmp
movsb
bound
xchg
xor
mov
xchg
push
cs
push
sub
es
jno
dec
dec
cmpsb
push
mov
pop
icebp
jbe
stos
xchg
aad
cs
pop
mov
lods
xchg
jnp
mov
ljmp
jne
xchg
rcr
push
xchg
push
xchg
leave
out
ljmp
je
mov
ret
dec
dec
or
fidivrs
cmp
or
cmp
push
insl
ret
and
xchg
jecxz
and
scas
mov
movntq
mov
fsubrp
push
outsb
dec
notl
adc
or
sub
pop
xchg
inc
sub
lea
in
outsl
xchg
sub
inc
ss
divl
es
mov
je
out
rcll
mov
push
outsb
test
mov
lret
ret
mov
push
fidivl
lcall
mul
inc
sahf
iret
es
cmpb
test
stos
adcb
mov
xor
shlb
rol
lret
push
mov
push
sahf
dec
adc
or
outsb
and
mov
add
movsb
cmp
imul
call
icebp
xchg
cwtl
push
fidivrs
fs
add
pop
cmp
je
fisubrl
fcomps
sub
push
add
stos
xchg
xchg
mov
in
inc
test
in
cmpsb
rolb
push
mov
iret
push
pop
xchg
push
repnz
in
jno
push
jbe
ljmp
scas
cmp
xchg
xor
adc
sbb
cmp
cmc
push
ds
pop
lods
dec
mov
inc
into
push
cmp
movsb
pop
jns
je
loop
lock
xor
adc
cmp
inc
out
cmp
push
adc
xorb
xchg
jle
cmc
repz
jno
test
decb
push
test
dec
scas
aam
push
ss
add
iret
mov
mov
call
outsb
cmpsb
sarb
out
xor
mov
mov
cmp
pop
jno
cld
negb
add
push
mov
xchg
push
or
fsub
fstl
out
push
mov
xchg
gs
data16
mov
pop
push
ficompl
addl
and
xchg
sbb
pusha
es
push
mov
xchg
push
sub
mov
clc
sub
and
fimuls
sbb
test
cmpsb
xorps
jmp
mov
and
movq
push
arpl
out
out
push
ljmp
lock
in
ss
mov
notb
ret
ljmp
repnz
outsb
add
push
jno
pop
iret
mov
and
cmpsb
scas
xchg
mov
pop
sub
dec
stos
mov
loope
or
movl
cmpsb
sub
xlat
mov
int
ss
stos
mov
iret
mov
add
rol
push
push
jo
fisubrs
out
inc
es
pusha
add
push
jbe
or
inc
sub
out
or
je
addb
mov
add
jge
xchg
inc
outsb
nop
es
orps
dec
pop
sub
xor
jecxz
ret
aas
xlat
push
push
rclb
push
scas
test
sub
and
repnz
xorb
pop
fildl
mov
fisttpll
subb
cmc
mov
mov
mov
fcmovb
loop
mov
cs
pop
sbb
mov
push
mov
pop
enter
ja
mov
aaa
addb
cmpsb
xchg
jo
adc
dec
gs
pop
push
sub
inc
loop
add
xlat
push
fs
insb
or
mov
and
and
adc
mov
ss
and
sahf
mov
movsb
xlat
clc
mov
ret
sahf
dec
adc
in
add
iret
push
add
inc
or
and
idivl
mov
cs
jne
pop
xchg
push
sbbb
das
xor
mov
pop
add
out
fldt
insb
lret
pop
frstor
xchg
add
mov
and
outsb
mov
rolb
test
mov
inc
rorl
icebp
ss
push
aam
inc
inc
negl
mov
and
xor
push
repz
jbe
into
mov
push
adcb
or
aad
les
dec
dec
ficomps
mov
mov
push
sbb
and
push
push
out
outsb
mov
fisubrl
mov
inc
cmp
stc
stos
into
bound
iret
push
cmpsb
add
add
gs
cli
stc
mulb
out
push
xlat
xor
fidivl
cmp
sbb
add
ljmp
out
int3
push
dec
push
mov
push
or
cmc
sbb
mov
imul
sbbb
xor
pop
inc
sbb
sahf
cmp
and
pop
ficoms
push
ss
stos
mov
sub
push
mov
or
or
push
xchg
aad
outsb
std
mov
mov
in
xchg
xor
aas
rolb
pop
or
push
inc
jo
ljmp
ficomps
test
rdpmc
mov
mov
insb
inc
add
sarb
out
cwtl
or
daa
cmpsb
iret
dec
loop
out
push
movsb
repz
inc
outsb
in
dec
xorb
mov
mov
adc
jae
jne
lds
cs
ficomps
push
sar
sbb
test
push
mov
mov
jecxz
sbb
adc
push
cmpsb
adc
lret
push
das
out
cmpsl
cmp
out
push
pop
sub
or
add
ret
mov
aas
or
mov
cs
push
addr16
pop
lds
xor
dec
in
imul
cmpsl
scas
pop
fcmovb
shlb
xchg
ljmp
es
and
mov
iret
cmpb
adc
mov
leave
aad
scas
sub
dec
cmp
sbb
add
rcrl
ss
xchg
movsb
jo
movsl
pop
ret
lret
out
outsb
adc
in
fidivrl
cmp
aam
fiadds
jno
lea
and
add
ret
mov
testl
mov
pop
push
or
into
sbb
stos
add
ljmp
and
loop
notl
ljmp
push
mov
cmc
int3
cmp
xor
lcall
push
es
aas
xorb
adc
pop
lock
mov
and
mov
std
in
mov
and
fildl
or
or
and
mov
push
repnz
pop
clc
sbb
jecxz
adc
fldcw
clc
mov
test
gs
popf
mov
test
out
insb
cmc
adc
mov
das
daa
ret
lahf
lds
imul
loopne
pop
adc
fisubrl
mov
shlb
sbb
push
push
iret
add
icebp
mov
ljmp
mov
push
clc
dec
xchg
lock
sbb
inc
mov
xchg
test
fisubrl
sahf
jo
inc
xchg
push
ss
inc
cs
cld
mov
aad
or
int
fucomp
jl
inc
jmp
sahf
jle
add
ret
dec
adc
jl
jmp
mov
add
jno
xchg
push
mov
xchg
test
ds
or
cmpsb
pop
xchg
push
mov
cmp
mov
rol
ljmp
ficomps
dec
mov
das
xlat
pop
sahf
mov
jbe
scas
adc
jo
cmpsb
je
popf
pop
mul
push
sbb
mov
fiaddl
jl
subl
bound
sub
mov
mov
xchg
lcall
movntps
cmp
je
fistpll
mov
dec
imul
outsb
stos
mov
idiv
mov
bound
cmpsl
lcall
pop
loope
mov
pop
sbb
gs
push
ss
addb
sbb
xchg
cmc
sub
xor
jecxz
loop
ficoms
or
pop
adc
aaa
or
push
out
mov
push
cmpsl
cmp
cmpsl
jge
inc
sub
mov
test
and
add
cld
dec
mov
scas
pop
xchg
ret
movsl
jge
sub
xchg
jnp
stos
aas
mov
shlb
or
push
inc
outsl
push
shll
jle
jo
add
sbb
sub
pushf
and
mov
or
aaa
mov
inc
cmp
mov
push
arpl
outsb
push
sub
fcmovb
jb,pn
cltd
push
cmp
into
cmp
add
adc
ljmp
pop
and
cmp
aad
out
cmp
ss
sti
stos
cmp
mov
add
mov
jp
cmc
xchg
cmpsb
mov
jecxz
mov
push
cld
push
cmp
jb
push
shrb
jg
push
es
adc
xchg
xor
pop
mov
mov
lret
cmc
sub
add
jecxz
scas
mov
sbb
fbld
jo
xchg
stos
iret
rcrb
aas
push
inc
xchg
dec
imul
cmc
sub
mov
push
mov
push
out
int3
adc
push
sahf
push
cltd
je
ret
mov
xchg
mov
es
push
sbb
bound
movsb
sub
xchg
mov
push
push
or
fisubrl
mov
sar
xor
iret
mov
rorb
shr
iret
gs
movhps
sbb
and
add
jb
add
lods
dec
orb
sbbl
jmp
mov
cmp
push
mov
ljmp
ret
and
cwtl
xchg
xor
mov
mov
xchg
mov
mov
push
pop
push
mov
jg
add
fsubrp
sbb
clc
sub
push
xor
clc
ret
dec
jbe
mov
out
cmp
and
rolb
mov
adc
xor
mov
xchg
lret
andl
dec
jecxz
rorb
es
aad
repz
int3
and
push
idivl
movaps
cmpsb
mov
scas
insb
repnz
ret
aad
fidivrs
icebp
inc
bound
adc
in
scas
pop
dec
xchg
outsb
aam
push
ljmp
adc
lahf
push
aas
jge
movzwl
dec
sahf
and
dec
sbb
sbb
leave
imul
cmp
es
pop
push
dec
add
cmpsb
inc
lods
stc
add
mov
push
lahf
rorb
xor
stos
test
push
push
into
fisubrl
lcall
test
cmp
push
imul
or
push
je
stos
adc
mov
xchg
add
loopne
mov
inc
mov
mov
inc
dec
mov
xor
and
scas
cmpsl
jecxz
and
add
orb
push
imull
xchg
mov
scas
add
adc
mov
or
stos
aad
jae
fiaddl
pop
mov
cwtl
mov
cmpsl
sahf
xchg
add
stos
cs
mov
sub
sbb
adc
or
add
mov
mov
iret
mov
xlat
push
push
adc
mov
popf
push
sub
push
xchg
cli
or
sbb
mov
fstpl
fcoml
mov
in
xor
cli
es
iret
cs
es
adc
xor
cmpsl
stos
pop
lcall
mov
sahf
sbb
repz
push
ficoml
les
jecxz
jbe
loop
pop
xchg
adc
xor
stos
orb
inc
sbb
mov
sub
add
or
push
mov
push
cmpsl
xchg
dec
pop
mov
iret
jns
shll
pop
out
mov
jne
xchg
push
dec
out
ds
cltd
inc
ljmp
dec
xorb
or
movb
mov
dec
out
jecxz
or
cmp
jne
push
and
sub
inc
push
add
loop
ficoml
sbb
jle
out
ss
add
adcb
mov
and
outsb
mov
movsb
mov
stos
jo
mov
jnp
hlt
out
adc
enter
into
push
push
ficompl
push
inc
push
mov
mov
je
push
ficoms
scas
jle
or
dec
inc
out
push
ljmp
mov
push
jecxz
in
cs
shll
mov
add
andb
rcrb
jle
and
enter
adc
dec
stos
ret
loope
add
gs
aam
push
cmp
cmpsl
dec
or
dec
mov
mov
jo
cld
stc
mov
aam
push
or
push
nop
push
cs
rcll
dec
mov
cmp
ss
mov
cmpsl
pop
bound
dec
test
cmp
es
aas
pop
movsb
xor
sbb
mov
add
out
mov
add
mov
sub
ss
iret
jp
enter
pop
inc
and
ss
inc
fldt
cltd
lret
or
inc
adc
mov
roll
adc
sub
decb
fnstsw
dec
out
add
push
push
and
push
aad
sub
xchg
and
cmpsl
pop
xchg
cmovle
ds
xlat
stos
xchg
into
adc
testb
push
and
pop
ud0
push
mov
fsubrl
je
inc
jecxz
fidivrl
aas
aas
int3
stc
push
sbb
sub
stos
mov
pop
push
pop
xchg
dec
push
mov
out
into
and
and
cmp
xchg
out
add
push
addb
loop
mov
mov
pop
mov
js
js
adc
sub
jbe
cmp
sbb
push
mov
dec
or
pop
int3
lret
xchg
out
push
push
mov
cltd
and
jmp
and
lds
lret
into
or
and
jl
nop
xchg
and
add
and
ret
dec
add
js
ljmp
xchg
pop
outsb
aad
es
push
cmc
pop
ret
cs
sahf
outsb
add
inc
adc
dec
scas
movsb
imul
cmp
shrl
or
dec
mov
pop
or
std
testb
xchg
sub
cld
cmp
push
pushl
popa
mov
mov
out
cs
cmpsb
into
loopne
cli
pop
incb
gs
pushl
gs
or
lcall
jecxz
jecxz
into
cs
jbe
inc
mov
and
dec
iret
negb
mov
cs
fimull
gs
mov
iret
mov
rcl
mov
mov
in
or
out
rorb
add
stos
mov
repz
decb
inc
xchg
mov
dec
xchg
cmpsl
jp
nop
fidivl
out
gs
outsl
lret
stos
movsb
out
imul
jae
gs
andl
gs
inc
in
lods
xchg
gs
stos
sub
inc
fsubrl
faddl
in
pop
dec
fsubl
pop
mov
imul
and
ds
sbb
lret
sub
adc
cmp
adc
add
cs
into
ret
leave
outsb
lds
dec
rorb
dec
and
push
bsr
xor
push
inc
mov
mov
sti
xchg
push
out
xor
inc
ficoms
mov
fldcw
push
cmp
addr16
mov
dec
xor
cmpsb
mov
and
sub
mov
psrlw
stc
stos
cmp
movnti
ficoml
mov
ret
or
fstpt
cmp
aaa
xor
xor
in
or
idivl
add
push
cmp
divb
icebp
push
xchg
lret
mov
decl
xchg
push
int
inc
dec
mov
dec
mov
popf
es
es
push
scas
out
push
iret
or
pop
mov
mov
incl
push
jecxz
mov
push
inc
out
inc
mov
mov
sub
lret
pop
push
leave
dec
test
cmc
xor
mov
push
insb
xchg
test
jmp
leave
jg
cmc
pop
jecxz
push
dec
mov
jge
leave
cld
mov
push
rolb
jne
xlat
dec
mov
cmpsb
mov
push
hlt
pop
push
mov
xchg
xlat
sub
mov
inc
fidivrl
push
lret
xorb
jecxz
mov
xchg
lcall
mov
out
in
sbb
mov
subb
clc
test
and
xchg
or
add
outsb
push
inc
xchg
cmpsb
fdivrp
add
xor
mov
xchg
sub
cmovns
mov
subb
sarb
in
rolb
mov
sbb
popa
push
mov
imull
out
inc
into
in
xchg
fstpl
pop
ljmp
mov
stos
js
gs
sub
cltd
gs
mov
dec
lahf
lds
xchg
test
xor
and
jne
mov
cmp
push
mov
mov
xor
adc
and
jle
sub
faddl
test
adc
fistl
dec
and
addr16
adc
push
imul
shlb
sbb
gs
popa
out
pop
ret
mov
sub
xchg
and
scas
push
pop
jmp
stc
dec
addb
daa
lods
iret
push
shr
outsb
push
lcall
ds
std
cmp
xchg
fcompl
cmp
mov
xor
rcl
cmp
mov
xlat
push
std
imulb
cmpsb
or
inc
ret
ss
cs
mov
movl
push
leave
stos
push
lcall
cmp
and
push
stos
aas
into
push
dec
push
or
push
xorb
xor
add
push
pusha
push
rolb
or
into
ficomps
and
decb
test
cpuid
or
rcrb
test
push
mov
imulb
cmpb
fnclex
jo,pn
popa
shlb
jbe
inc
sbb
outsb
or
pop
adc
pop
mov
xor
fimuls
repnz
or
inc
sbb
jne
fisubl
and
sub
aas
cs
cmc
daa
add
gs
push
imul
cmpsb
stc
sbb
iret
es
and
es
es
push
leave
loopne
xchg
lret
sti
inc
fisttpll
adc
fidivs
sbb
ljmp
adc
cmp
inc
outsb
mov
ret
out
sahf
aad
cmpsl
push
jp
dec
jecxz
or
dec
dec
fimuls
dec
fdivrp
test
aad
notl
cmp
xchg
pop
mulb
fimull
inc
sub
xor
pop
das
test
pop
cmp
scas
outsl
xchg
sbb
cmp
subb
dec
fbld
add
mov
xchg
push
subl
call
push
ljmp
jae
or
fistps
xchg
push
fdivs
lods
push
sahf
inc
cmp
ja
xchg
inc
add
mov
fisttpl
mov
fidivl
or
mov
adc
push
iret
xchg
cmpsb
cmp
adc
and
push
push
cmp
daa
movb
out
hlt
mov
into
push
pop
xchg
sbb
cmp
sahf
test
es
iret
fidivs
adc
out
add
add
sub
mov
ret
subb
cli
ljmp
ja
mov
sub
cli
ds
iret
out
sub
xor
mov
lcall
push
push
fst
cld
data16
gs
xchg
fildl
jbe
scas
stos
ret
mov
jnp
add
js
hlt
out
sub
into
inc
lcall
cmp
lods
push
out
mov
ljmp
daa
je
sub
fucomip
xor
enter
movsb
xlat
mov
add
bound
dec
in
call
mov
loopne
push
enter
cmpsl
push
dec
ficoml
loop
dec
out
and
fbld
sbb
push
addr16
push
aad
pop
cmp
out
mov
addb
stos
xchg
inc
dec
sub
hlt
jp
ss
push
stos
inc
ret
cmp
ds
cli
push
shlb
jp
push
xchg
int3
iret
loopne
cs
push
mov
adc
and
jnp
ret
mov
inc
stc
or
lock
mov
dec
xor
aam
jae
outsb
sbb
pop
jecxz
loopne
ret
mov
xchg
and
out
push
hlt
mov
ret
in
push
xchg
xchg
stos
xor
rcrl
sbb
ret
into
add
pop
ss
mov
filds
rorl
fistpl
push
push
test
pavgw
push
test
movsb
sub
shlb
sub
push
dec
push
push
pop
xchg
jae
dec
jecxz
es
push
ret
repnz
push
pop
mov
pop
dec
shrl
pop
imul
mov
sub
aad
xchg
aas
test
imul
subb
mov
lea
push
cmpsb
fwait
jmp
mov
mov
mov
xchg
dec
pop
iret
out
mov
jl
sahf
outsb
out
push
push
gs
data16
outsb
xchg
mov
push
out
notb
pop
mov
enter
adc
mov
jg
stos
mov
fiadds
insb
ss
subb
and
dec
cwtl
jp
int3
sbb
sbb
lcall
add
es
mov
pushw
ds
xchg
sti
xor
push
mov
test
adc
or
andb
fildll
lcall
popf
lcall
sti
push
out
stos
cs
cmp
sbb
xlat
mov
rol
repnz
mov
pop
in
push
sbb
jmp
je
mov
int3
adc
cmp
mov
mov
mov
cmp
cmp
push
pop
pop
xchg
mov
clc
ja
ret
jge
xchg
repnz
adcl
jmp
pminub
stos
iret
cmp
scas
pop
in
add
add
rorb
jbe
into
push
mov
pop
sub
mov
jle
add
dec
mov
loop
pop
loop
mov
add
int
divb
sarb
sti
inc
xlat
outsb
xlat
imul
add
push
iret
mov
xchg
adc
shlb
jae
movsbl
push
sub
add
sub
mov
cmp
outsb
xchg
mov
lock
cmp
mov
inc
dec
cmpsb
dec
mov
mov
add
shl
mov
fidivl
mov
cmpsb
neg
push
ret
ficoms
and
adc
testl
push
pushw
and
pop
inc
sbbb
lcall
cmpsb
notb
sbb
cmp
push
jecxz
loopne
adc
xchg
mov
sub
test
xor
out
jecxz
fldcw
lods
rcl
mov
mov
mov
hlt
int3
push
pop
mov
jle
aam
lahf
fistps
cmp
aas
pop
dec
pusha
jg
pushf
add
pusha
sub
nop
popf
inc
inc
outsb
jno
sbb
cs
es
xchg
and
xchg
jg
push
mov
push
sbb
addr16
in
aad
mov
fistps
aas
inc
xchg
and
push
into
imul
sub
or
movsl
jg
cmpsb
idiv
lcall
cmpsl
or
dec
jecxz
mov
cmpsb
sub
lea
ss
jecxz
loop
push
inc
stos
andb
lret
mov
dec
fimull
sub
dec
lds
mov
push
cmpsb
inc
leave
pop
mov
ljmp
inc
inc
fbstp
ja
dec
outsb
fsts
sub
ja
pop
add
mov
test
and
fistl
mov
sub
mul
into
fidivs
xor
test
sub
pop
push
aam
push
outsb
mov
fistl
mov
pop
out
push
imul
test
pop
into
mov
push
and
ds
into
jo
xor
cmp
mov
push
sub
outsb
mov
arpl
cs
sub
fstl
or
cmpsb
jo
pushf
inc
out
push
sahf
out
mov
rorl
aas
shl
or
or
dec
add
enter
gs
jg
push
xchg
cmpsl
sbb
pop
push
mov
mov
cmp
adc
movsb
loop
ret
icebp
sub
mov
out
push
push
jle
test
aam
in
fmulp
ds
out
repnz
inc
ljmp
aas
add
sub
or
mov
adc
jbe
sub
inc
mov
push
push
ss
repnz
push
ret
sarl
xor
cmpsl
cli
sti
aam
xchg
inc
and
std
out
shrb
notl
or
scas
cmpsb
mov
shrl
cs
mov
stos
inc
and
jle
or
adc
cmp
jle
jno
xchg
cmc
sub
repz
ds
ss
ljmp
fcompl
pop
aad
mov
ss
movsl
cs
out
into
ja
ret
dec
mov
lea
or
mov
fwait
sbb
sahf
repnz
jecxz
xlat
add
rcr
out
sbbl
sub
mov
xlat
push
cmp
sub
xchg
ret
push
jmp
cwtl
ds
fsts
mov
repz
gs
jl
test
and
mov
cmc
xlat
iret
fildl
and
mov
addb
xchg
aas
dec
mov
cmp
cmp
ret
sub
and
push
sbb
cs
mov
clc
mov
scas
movsb
fucomp
jp
in
cmpsl
out
xor
es
scas
pushl
lods
ss
or
jnp
add
mov
subl
mov
cmpsb
push
jnp
ds
jecxz
mov
and
sahf
fbld
pop
imul
loop
js
mov
cmp
or
ret
mov
int3
xchg
mov
mov
mov
aam
dec
lret
imull
ss
cmp
pop
xor
pop
pop
bound
add
add
ret
ret
xchg
cmpsl
inc
inc
sbb
mov
mov
jecxz
mov
icebp
inc
xchg
mov
dec
ss
lahf
xlat
jle
adc
mov
sbb
outsb
mov
xchg
imul
loop
xchg
fs
push
push
jecxz
rclb
pop
xchg
push
shlb
mov
cli
inc
test
enter
cmpsl
ret
cmpsl
cmp
iret
push
xchg
es
fistl
xor
pop
bound
stc
or
push
sub
cld
aas
push
loop
mov
sahf
out
dec
mov
push
xor
incl
ret
inc
cmp
ss
sahf
out
push
push
andnps
push
adcb
xchg
ficompl
sub
mov
mov
das
je
sub
fucomip
and
and
loop
test
int
fcos
inc
inc
mov
in
jle
lret
mov
push
inc
sub
test
mov
pusha
mov
lret
adc
push
aam
jne
loop
loop
mov
sbb
je
fisubs
out
and
mov
stos
jbe
xor
scas
xlat
stos
pop
cmp
test
mov
mov
out
xchg
shll
loop
sbbb
push
and
mov
push
cmpsl
bound
filds
jne
fdivrs
outsb
in
adc
sbb
es
sub
or
addr16
in
sub
add
push
in
cmpsl
sbb
and
and
out
test
push
adc
mov
add
xor
pop
push
sti
mov
sub
sbb
rol
orb
sbb
push
mov
inc
stos
push
push
pop
cmpsl
scas
negb
mov
lcall
loop
test
fistl
xlat
add
insb
add
mov
iret
mull
adc
icebp
cs
push
inc
cwtl
mov
jno
imul
jecxz
and
roll
jno
xchg
push
pop
mov
or
mov
cmp
mov
pop
mov
out
ljmp
ret
jne
stos
sbb
test
or
lcall
pop
fnstcw
stos
adc
adc
rclb
int3
xlat
lret
fcompl
insb
ret
ljmp
xchg
out
mov
out
xor
xlat
es
cmpsl
outsb
xlat
xchg
ret
dec
dec
scas
mov
pop
cmp
sub
push
sub
and
outsb
dec
push
or
adc
movl
stc
test
dec
jae
inc
push
icebp
repnz
cs
out
out
lcall
xchg
ret
nop
add
imul
inc
push
roll
ret
rorl
push
cmc
adcl
ds
aas
mov
xchg
call
push
inc
idiv
shlb
pop
push
cmp
adc
xor
fistps
push
cmpsb
mov
push
mov
out
ror
or
mov
imul
repz
adc
sbb
push
mov
mov
bound
fnstcw
pop
or
mov
ds
adc
ret
ret
inc
mov
xchg
sub
xchg
xor
ret
aas
inc
push
movsb
mov
rcrl
xor
addr16
push
xlat
data16
insb
pop
sbbb
xor
cli
push
faddp
adc
ret
rolb
imul
xor
mov
xchg
sub
xor
mov
inc
shll
pop
xchg
movsl
loopne
rol
btc
pop
out
xor
mov
sub
add
jp
sbb
pop
xchg
or
cmc
xchg
mov
call
test
xor
or
into
sbb
sub
ja
adc
push
aad
ljmp
mov
pop
xchg
adc
push
mov
push
xorb
lods
cmpsb
mov
jne
mov
dec
pop
push
fiadds
mov
testb
cmp
sub
jne
shlb
push
inc
inc
jg
sub
vphaddbd
jg
dec
sbb
mov
mov
iret
scas
pushw
add
inc
pop
inc
imul
mov
outsb
push
or
push
data16
mov
in
imul
adc
xchg
roll
loope
cs
mov
std
dec
cmp
pop
dec
pop
ficoml
fildl
push
or
adc
mov
dec
icebp
xchg
push
imul
mov
jecxz
stc
and
sbb
xlat
mov
or
mov
loop
jns
stos
pop
hlt
mov
and
inc
lcall
dec
inc
test
xor
mov
inc
dec
cmp
mov
inc
cmp
addb
push
jecxz
adc
mov
enter
into
mov
out
ja,pn
rcl
cmpl
push
mov
scas
jbe
sub
and
or
xor
es
mov
and
xor
fnsave
aas
add
es
xchg
mov
lcall
or
scas
sbb
push
xor
fnstenv
cmpsl
mov
loop
adc
cs
cld
test
adc
sub
or
or
jb
in
pop
nop
cmp
sbb
jmp
lcall
scas
iret
push
cmp
ds
sub
mov
mov
imul
mov
das
loopne
aam
mov
xchg
mov
xchg
xor
out
push
test
icebp
sbb
outsb
sahf
out
xchg
dec
movb
mov
xchg
pop
pop
pop
cmc
aam
xchg
jl
stos
inc
add
mov
sbb
or
pop
jmp
and
sub
add
mov
scas
sbb
not
out
push
push
push
or
xchg
inc
cltd
add
mov
jne
mov
mov
mov
cmp
pusha
mov
addl
mov
fiaddl
adc
in
cmp
add
neg
sahf
addb
clc
dec
adcb
ss
rorb
pop
xchg
pop
cld
xor
aad
cmp
repnz
jg
push
ljmp
jae
scas
mov
ljmp
ds
movsb
mov
mov
mov
sbb
mov
ret
xchg
roll
hlt
cs
dec
stos
inc
pop
rolb
jnp
cmp
outsb
ret
mov
repnz
jge
push
int
ret
push
aad
xchg
mov
xlat
mov
adc
push
and
aad
mov
add
or
stos
mov
dec
data16
or
mov
int
scas
dec
std
sbb
rclb
xor
cs
pop
and
outsb
fcoml
push
adc
cmpsl
xchg
pop
ja
sbb
rcll
es
ret
fidivl
mov
fistpl
sub
mov
mov
xlat
cli
or
scas
pop
aad
sub
add
or
add
adc
lret
bound
movsb
push
jg
xchg
sub
or
sbb
cmp
mov
inc
sarb
mov
pop
jno
notl
push
ss
gs
push
add
bound
or
cwtl
push
push
jle
imul
push
ret
enter
in
or
dec
and
lahf
sub
xor
ja
adc
ret
nop
ret
shlb
pop
jecxz
stos
ds
pop
inc
mov
es
cli
arpl
xor
punpckldq
mov
cmc
sbbb
rcr
and
lcall
sbb
add
je
mov
out
loop
pop
mov
cld
or
push
mov
mov
adc
and
fildll
das
ljmp
loopne
add
aaa
adcb
add
mov
call
or
and
pop
push
out
icebp
lahf
mov
sbb
cmp
adcb
mov
aam
or
xor
stos
ss
inc
out
je
push
frstor
mov
or
mov
cmp
adc
imul
sahf
jmp
call
insb
call
out
int3
add
sub
jns
xchg
gs
pop
cmp
push
out
outsb
rcll
aam
jg
adc
or
or
push
add
pop
pop
inc
adc
cmp
sub
push
fmuls
scas
cmc
sub
push
aad
jl
or
mov
or
in
xchg
lahf
add
pop
ret
into
mov
sbb
mov
jns
bound
xor
pop
pop
sub
mov
xor
dec
and
pop
ficomps
sub
cmc
iret
iret
mov
mov
inc
push
dec
pop
push
or
into
aad
call
push
fiaddl
cmpsb
pop
cmpsb
addr16
add
jecxz
add
daa
adc
mov
out
push
xchg
xchg
cmpsl
xor
add
cld
add
pop
adc
es
lock
mov
fistpl
xchg
idivb
ja
xchg
pop
ds
and
adc
inc
fimull
inc
xor
stos
into
pop
mov
sub
pop
adc
cmpsl
sbb
icebp
mov
jp
dec
mov
repz
push
fstpt
inc
xchg
dec
ljmp
iret
cmpsb
cs
inc
sahf
lods
adc
dec
mov
test
lods
pusha
lock
xchg
gs
in
inc
adc
leave
sbb
mov
sahf
ss
pop
rol
xchg
add
mov
movsb
mov
lcall
push
pop
jno
bound
pop
js
mov
sub
in
stos
cmc
inc
push
xchg
test
sub
pop
inc
jae
mul
mov
mov
stos
addr16
fisubl
bound
xor
ljmp
shrl
les
test
nop
sbb
movsl
mov
nop
dec
out
je
stos
les
ret
mov
jno
add
es
mov
loop
sub
out
outsb
ficompl
and
pop
leave
cmpsl
lds
xlat
sub
push
sbb
dec
push
dec
cmc
xor
jb
int
push
xorb
push
jle
icebp
adc
push
add
sarl
movsb
pushf
dec
xchg
aam
lahf
dec
rol
lahf
leave
mov
fldl
mov
das
dec
push
xchg
lds
push
jae
inc
es
nop
movsb
pushf
sub
xchg
into
pop
stos
sub
push
stos
cmp
inc
add
stos
insl
xlat
bound
push
jmp
mov
fistps
and
sti
and
lret
pop
mov
imul
xor
sub
mov
inc
rcl
cmpsl
cld
mov
sbb
xchg
add
jle
jno
in
jne
loop
xor
stc
add
mov
test
ja,pn
into
push
mov
into
loop
shr
adc
shrb
ds
and
std
mov
loop
xchg
push
gs
mov
mul
inc
push
cmp
ss
mov
push
ljmp
insb
jp
ret
dec
cmc
sbb
dec
xor
mov
aam
jb
dec
pop
iret
into
mov
test
mov
stc
dec
xlat
mov
add
arpl
testb
and
jg
pop
fildl
out
push
add
scas
and
sub
jl
rcr
fistl
ret
jge
push
shll
scas
push
aad
ds
popa
lods
jg
inc
es
imul
push
stos
ss
lret
into
scas
push
stos
pop
movsl
mov
repnz
shl
bound
add
mov
cmp
sub
iret
mov
add
test
push
mov
mov
push
sbb
and
aam
cs
pop
jbe
and
divl
outsb
into
or
xchg
dec
pop
int
dec
andb
push
ds
fimuls
xlat
or
mov
adc
push
jmp
ljmp
push
cmpb
push
mov
imul
enter
aas
mov
cmp
ljmp
ret
outsb
imull
mov
outsb
cmpsl
stos
sub
mov
push
xchg
xchg
push
imul
pop
shl
adc
mov
jge
xor
xchg
imul
imul
cld
mov
aas
xor
ss
mov
jmp
mov
or
xchg
js
push
xor
outsb
lret
out
push
mov
add
inc
mov
sbbl
std
mov
push
fadd
dec
cmp
pop
sub
orb
pop
cmp
sub
mov
ret
in
xchg
sahf
pop
xchg
add
or
cmpsl
fistpll
test
outsl
jno
into
push
or
aas
sahf
xor
xchg
push
cmp
inc
sub
movsl
xor
mov
out
push
shrb
pop
ss
mov
pop
pop
es
add
sbb
adc
jmp
xchg
lret
movsl
mov
dec
xor
pop
maxps
mov
gs
mov
inc
sub
jg
cmp
iret
push
lock
mov
xlat
lahf
mov
in
lds
and
xchg
mov
les
pop
dec
scas
punpckldq
mov
call
in
mov
stos
leave
bound
mov
mov
gs
gs
xlat
loop
push
sub
push
cmc
lea
cmpsb
and
scas
enter
push
cmp
dec
repnz
mov
test
and
frstor
cmpsl
sub
push
movl
inc
push
lods
sbb
ret
int
insl
sub
inc
leave
jo
and
cmpl
iret
int3
lret
push
xor
cmp
push
scas
loop
push
and
pop
rcr
dec
pop
cmove
pop
fwait
xor
inc
into
xchg
mov
ljmp
outsb
aam
sub
push
pop
xchg
inc
test
xlat
and
imulb
loop
ss
push
mov
xchg
sbb
gs
ret
sahf
outsb
iret
ret
mov
loop
jg
fldt
fstpl
cs
cmp
aas
outsb
movsl
push
sub
jmp
inc
dec
mov
leave
pop
dec
out
mov
or
pop
jmp
aam
out
jb
fidivl
pop
stos
mov
ljmp
mov
mov
pusha
jne
mov
arpl
fstp
mov
test
sahf
subb
ret
adc
ret
xchg
xchg
sbb
inc
ret
add
pop
into
bound
dec
int3
rcrb
inc
push
mov
add
into
bnd
cmpsb
out
outsl
jae
push
pop
push
les
xor
pop
bound
outsb
fcmovbe
add
subl
pushf
shlb
fbld
lret
sar
cs
push
xchg
push
fnstcw
cmpsb
mov
jecxz
mov
sub
mov
movsb
mov
test
stos
push
xchg
lcall
rorb
ss
loope
mov
cmpsb
sarl
iret
pavgw
or
sub
inc
ds
out
subb
xor
mov
xchg
fcmovbe
mov
xchg
dec
inc
les
sahf
push
mov
push
pop
push
xchg
lcall
lea
jl
cmpsb
loop
aas
xor
ficoml
mov
jb
inc
push
gs
bound
cli
adc
pop
mov
adc
push
push
inc
jb
jg
ljmp
jecxz
push
cld
jmp
ret
jg
iret
cmp
out
push
rdmsr
into
lcall
enter
loop
adc
js
gs
imulb
fidivrl
pop
out
cmp
aaa
jae
es
push
mov
pmaddwd
ficoml
push
dec
push
test
mov
mov
in
jbe
or
push
cmp
ljmp
aad
ljmp
mov
inc
es
out
dec
adc
dec
jg
cs
addb
mov
push
and
lahf
loop
out
dec
test
rclb
movsb
jns
outsb
fbstp
stos
mov
insl
fistpl
jbe
push
or
xchg
out
push
jb
cmc
inc
loop
sahf
push
jb
dec
lcall
adc
ret
fisubrs
nop
inc
mov
andb
sti
das
pop
repz
sahf
cmp
fists
mov
addr16
repz
push
pop
push
dec
ret
mov
jp
je
add
dec
cmp
into
mov
push
and
addb
mov
stos
and
lcall
mov
fisttpl
cmc
daa
mov
aas
pop
mov
or
stc
shl
sbb
call
bound
out
mov
test
adc
fisubs
out
pop
inc
ret
gs
mov
mov
adc
jecxz
xchg
adcb
loop
shll
inc
pop
sub
xchg
pop
sbb
sbb
push
mov
in
ret
push
fbld
push
out
push
jecxz
out
push
mov
hlt
pop
mov
mov
cmp
push
scas
ljmp
sti
mov
cmpsl
push
ds
jmp
pop
inc
in
pop
leave
mov
iret
add
lods
and
pop
clc
data16
enter
add
outsb
fucomip
and
leave
orb
cmp
testb
pop
fistl
mov
into
fsubl
lods
xchg
neg
aas
xor
jp
subb
jmp
or
xchg
dec
sbb
mov
mov
lcall
jg
call
push
jmp
pop
pop
jbe
daa
dec
ret
xchg
aad
bound
xchg
xchg
aas
xchg
pusha
xchg
test
ss
ret
mov
scas
mov
outsl
imul
std
testb
mov
adc
fcmovnb
sub
fiadds
add
ds
addr16
ljmp
inc
ret
dec
scas
mov
sub
mov
push
push
xlat
lds
xchg
or
cmpsb
cmp
in
adc
mov
push
sahf
es
mov
jecxz
mov
sub
dec
ret
pop
repnz
fnstenv
pop
into
dec
jp
dec
sub
ret
pop
xor
xor
ret
jle
jg
test
lahf
lahf
iret
int3
sub
inc
and
shrb
data16
out
adc
fiadds
arpl
cmp
ja
sub
fcmovnbe
fdivp
or
ds
loop
out
jmp
shlb
mov
es
xchg
add
outsb
cmp
sahf
int3
push
mov
sub
mov
push
bound
shr
dec
fimuls
scas
or
xchg
pop
add
mov
aaa
test
ss
jae
push
jl
in
mov
pop
sbb
ss
enter
ret
xor
out
fists
push
cmp
lahf
push
hlt
ds
sub
iret
mov
cmp
push
xchg
xchg
pop
in
lods
popa
fildll
xabort
aas
rorl
mov
push
push
mov
mov
pusha
mov
test
mov
je
divl
es
push
rcrb
insl
pop
repnz
or
sbb
mov
adc
push
inc
add
sub
pop
cmc
repnz
mov
adc
ljmp
pop
ret
addr16
xchg
call
xor
sahf
push
inc
fidivs
hlt
cmpsb
fildll
push
mov
ret
int
mov
push
loop
push
pop
incb
inc
ja
aad
clc
mov
mov
mov
sub
sahf
sbb
push
xchg
aaa
sbb
out
ljmp
je
loop
ret
scas
push
pop
pop
dec
lea
test
sub
xorl
mov
and
lcall
xor
cld
jle
xchg
cbtw
lahf
dec
xor
ret
cmpsb
push
adc
mov
push
pop
aad
sbb
bound
mov
stos
mov
push
pop
mov
mov
add
pop
push
push
test
inc
cs
sbb
movb
dec
push
pop
test
add
sbb
cmpsl
enter
pop
cld
aam
pop
ret
push
dec
xchg
xchg
xchg
incb
mov
sub
stos
mov
xchg
into
sbb
shlb
add
and
mov
cmp
pop
or
out
dec
and
mov
bound
popa
or
pop
divb
xchg
push
xlat
inc
adc
es
push
loopne
ljmp
push
cmpsl
mov
mov
add
push
xchg
dec
gs
stos
mov
sub
dec
gs
into
pop
in
loopne
fcmovnb
lods
mov
jmp
adc
rcl
sbb
ljmp
push
mov
xchg
sub
xlat
mov
loop
fdivl
andl
repz
jne
pop
shr
into
push
mov
jecxz
stos
into
pop
lret
mov
jae
lahf
cmpsl
loopne
jl
popa
xchg
and
fldcw
ret
es
jl
xor
xchg
in
test
es
push
rorb
lock
insl
push
dec
imul
orb
into
lods
rorb
xlat
fistps
mov
pushf
push
mov
or
add
xor
jne
jo
sbb
jecxz
jbe
mov
add
dec
clc
bswap
fcmovb
mov
add
xchg
mov
movsl
sub
cmp
inc
imul
push
es
mov
jnp
loope
sahf
cmp
iret
or
fnstsw
push
idivl
push
xlat
jae
imul
cs
push
das
repnz
ret
push
ss
add
or
movl
insb
cwtl
push
daa
xchg
xor
iret
ss
addr16
mov
sbb
in
pop
bound
mov
ljmp
adc
sub
iret
out
xchg
shll
data16
inc
mov
or
cmp
stos
mov
xchg
or
inc
lret
inc
mov
push
push
cld
hlt
iret
or
or
stos
pop
rcrl
aam
es
in
push
sbb
aad
repz
cmp
mov
jge
rorl
mov
ret
xor
mov
iret
mov
lock
ss
push
popf
cmc
push
mov
jo
xor
xlat
or
out
scas
loop
es
push
push
or
ds
jne
mov
dec
xchg
cmpsl
sbb
add
push
mov
popf
xchg
or
adcl
xor
into
adc
adc
out
add
fiadds
push
pop
push
jbe
ret
lock
ja
sub
fstpt
pop
scas
xchg
push
jae
dec
fbld
sbbb
addr16
dec
into
mov
sbb
inc
and
std
cli
add
and
pop
mov
lcall
in
xchg
pop
adc
rcll
xchg
xchg
pop
hlt
pop
pop
fildl
fsubs
iret
xor
xor
outsb
jne
push
cmpsb
sub
xchg
ss
sbb
ret
cwtl
mov
and
shlb
mov
ficompl
loop
out
dec
ds
jg,pt
loope
leave
add
clc
and
ja
xchg
ret
inc
out
xchg
sub
andb
into
aas
rol
ret
xchg
mov
mov
push
clc
or
xchg
scas
mov
addr16
data16
ljmp
adc
adc
test
cmp
out
fiadds
push
add
push
add
add
jbe
ds
aam
int3
fisubrs
gs
mov
adc
mov
pop
test
xchg
xlat
fcmovb
push
ret
inc
jecxz
loop
mov
ljmp
stos
add
js
sbb
sbbb
xchg
pop
push
pop
loope
fsubrp
mov
xor
xor
ljmp
inc
xchg
aaa
mull
into
js
in
mov
or
push
and
sub
or
mov
outsb
xor
cltd
jecxz
cmp
cmp
add
push
add
outsb
mov
or
sahf
mov
jecxz
sti
dec
hlt
xor
es
mov
add
mov
push
jns
mov
mov
push
push
push
mov
loope
das
rcrl
pop
sub
pop
bound
loope
sub
mov
mov
and
jp
ljmp
pop
sahf
stos
cmpsb
cmp
xlat
out
mov
cltd
and
pop
fisubrl
les
lahf
jecxz
push
mov
and
bound
or
sahf
cmp
aas
dec
aas
add
xchg
enter
xor
aam
inc
push
sahf
pop
push
jmp
pop
mov
ret
ljmp
shrb
mov
fdivp
or
lds
pop
xchg
sbb
ss
xlat
push
fisttps
subb
adc
test
mov
jg
push
lret
cmpsl
sub
or
fwait
mov
sub
clc
pop
mov
lahf
xor
add
pop
push
ret
les
lea
dec
mov
jae
push
or
int
ljmp
add
outsb
movsb
mov
fbstp
into
fucomp
add
sub
cmp
jne
scas
dec
xor
popfw
or
roll
add
ljmp
mov
cs
and
xchg
and
adc
xchg
stos
mulb
mov
sub
dec
mov
push
jle
jae
pop
ffreep
rclb
push
cmpsb
movsb
rcll
dec
sbb
pop
adc
or
div
cmpsl
mov
xor
ds
sbb
sbb
adc
imul
jbe
and
aad
shr
je
subb
mov
add
mov
cs
cmp
stc
mov
bound
or
inc
push
dec
adc
push
stos
pop
cltd
bound
into
jge
mov
cli
scas
jno
rcrb
push
loop
xchg
mov
sahf
push
mov
mov
xor
movsl
fcmovu
aad
mov
outsb
push
pop
outsb
mov
sbb
cmp
test
out
rcrl
fiaddl
stos
adc
adc
jl
mov
outsb
test
pop
popa
and
fimull
xchg
arpl
pop
push
add
cmp
scas
and
sbb
ds
sti
mov
push
and
mov
mov
inc
push
or
push
mov
incl
mov
push
into
xorl
sbb
shlb
movsb
jae
addb
add
es
xchg
aad
mov
inc
or
adc
andb
xchg
push
mov
xchg
in
mov
jmp
mov
xchg
push
jecxz
xor
add
add
push
out
mov
adc
jecxz
cmpsl
fldl
cmpsb
mov
sarl
xchg
pop
or
loope
or
adc
sbb
mov
cmp
fidivl
mov
aaa
notl
mov
push
sbb
fimuls
loop
cmp
and
pop
xor
jecxz
stc
mov
jecxz
fs
ret
or
sbbl
es
adc
jne
pop
fsts
popa
add
push
mov
mov
jbe
hlt
loop
lcall
popf
sub
fidivrs
xchg
and
pop
sbb
mov
xchg
sahf
push
data16
loope
push
jecxz
cmc
lcall
es
mov
jecxz
in
repz
xchg
test
test
arpl
fistps
mov
outsb
sarl
std
pop
push
ficompl
pop
sbb
stos
test
ret
popa
adc
cmp
js
or
sbb
push
add
rorl
mov
mov
out
ss
fistl
mov
aam
roll
jle
inc
xor
mov
push
aas
cmpsb
sbb
or
test
shll
mov
xchg
pop
mov
dec
mov
dec
into
xchg
lock
cmp
jecxz
ret
stos
insl
mov
ret
dec
cld
mov
sub
xor
lock
mov
nop
testb
add
mov
ficoml
pop
gs
mov
call
addr16
repz
cmp
cmp
ss
sub
data16
lcall
push
andl
inc
and
cmp
pop
adc
mov
movsl
fistpl
adc
lock
mov
scas
mov
add
mov
sbbb
fucomip
aas
std
into
addb
sbb
inc
mov
xchg
repnz
das
cmp
dec
mov
je
cmpsl
lods
xchg
or
fisttpll
mov
cltd
sahf
pop
sbb
cmp
push
imul
js
aas
and
pop
pop
xchg
loop
movsl
xchg
push
sti
sbb
push
bound
mov
push
out
scas
mov
mov
push
xlat
mov
imul
xchg
sbb
cmpsl
lcall
push
pop
lahf
lret
inc
cmp
es
cmp
in
xchg
inc
loope
xchg
prefetch
or
sub
inc
mov
fisubrl
shrl
mov
xchg
into
mov
sbb
std
test
jge
push
jns
aam
inc
mov
lahf
and
into
imul
shlb
stc
jg
cmp
es
lret
sub
cmp
mov
xor
push
jecxz
inc
shrl
or
inc
lcall
adc
inc
div
sub
mov
push
dec
ds
stos
imul
cmp
mov
mov
outsb
data16
pop
inc
sbb
in
push
out
mov
or
loopne
push
pop
jmp
xchg
pushf
loop
mov
push
xchg
mov
or
jno
out
sti
inc
inc
orl
fidivl
cmpsl
push
cwtl
xchg
adc
inc
push
imull
cs
es
ror
adc
push
mov
cmp
imul
xchg
push
jle
and
add
xchg
rcrl
ss
fcmove
cwtl
test
cmpsl
rclb
pop
mov
dec
out
outsb
cmp
cmp
scas
cmp
mov
mov
mov
roll
dec
sub
cmp
mov
inc
sbb
outsb
jecxz
outsb
or
mov
popl
inc
mov
mov
into
cmpb
cmpsb
sahf
sbbl
outsb
sub
xchg
push
fcompl
mov
dec
dec
push
xchg
or
sbb
out
dec
cmp
push
sbb
imul
pop
ljmp
push
loop
push
leave
mov
cltd
adc
enter
and
repnz
xchg
mov
push
or
xlat
pop
xor
mov
in
das
into
add
jge,pn
mov
fists
jno
test
pop
push
jno
cmp
rcll
push
lcall
mov
mov
sahf
xor
jne
sub
mov
bound
arpl
fbld
xor
out
xor
cltd
in
int3
ret
stos
and
fisttps
outsb
mov
and
sub
sbb
pop
pop
push
ret
sub
enter
das
xor
mov
jl
mov
fidivs
cmp
mov
add
cmp
rorb
xor
pop
cltd
lret
cmp
xchg
mov
fidivrs
add
xor
xchg
ret
stos
jecxz
sbb
cmp
xor
stos
add
xchg
popf
sbb
gs
fisubs
xorl
loope
loope
xlat
fiadds
mov
icebp
xchg
mov
pop
daa
dec
mov
xlat
sub
lods
call
sbb
aad
imull
mov
call
fwait
push
sbb
ljmp
int3
mov
sbb
rol
lea
jbe
xchg
sbb
jg
nop
fcompl
xlat
push
mov
into
and
test
and
push
mov
int
push
cmc
mov
mov
inc
pop
adc
inc
movsl
adc
out
outsl
into
xor
mov
push
out
es
dec
imul
sahf
mov
jno
push
in
mov
add
lods
jbe
or
mov
xchg
push
lea
loop
add
mov
push
push
xchg
sub
xor
fucomip
dec
adc
mov
aas
cmpsb
lcall
and
sbb
fcoms
xchg
call
cmp
orb
stos
xchg
pop
loop
cmpsb
bound
adc
add
sbb
adc
push
fbstp
loope
pop
xorl
stos
rorb
lods
addr16
sub
scas
mov
sbb
pop
xlat
rcl
push
mov
je
cmpsb
cwtl
mov
lahf
and
aaa
loop
mov
test
out
dec
pop
fstpt
mov
xchg
push
imul
cmp
and
push
xor
lcall
jecxz
jmp
push
mov
push
test
dec
stc
sbb
jns
push
xlat
in
mov
dec
ljmp
gs
inc
dec
bswap
fisubrl
stos
xlat
mov
or
mov
cmp
inc
and
data16
cmpsl
out
adc
mov
test
sub
and
shl
outsb
cwtl
fiadds
fidivrl
jne
pop
xchg
stos
adc
rcrb
pop
das
or
and
gs
into
ja
gs
movsb
iret
push
stos
es
outsb
push
ss
shr
jae
mov
loopne
fptan
add
dec
xlat
xorb
mov
jecxz
loop
xchg
data16
cmpsb
outsl
pop
mov
xchg
shl
scas
push
pushf
fimuls
cmpb
jno
adc
sub
cmc
xchg
clc
mov
push
outsb
or
cmp
loopne
mov
inc
sub
shl
fsubrl
mov
xchg
mov
and
xchg
push
out
orb
test
jle
roll
scas
in
insl
cmp
fwait
mov
cli
mov
cmp
inc
mov
movsb
mov
xchg
adc
and
or
push
nop
mov
js
cmpsb
in
sahf
test
xor
mov
jecxz
rolb
arpl
inc
cmp
mov
xchg
setp
inc
mov
xor
xlat
movsb
pop
dec
pop
aaa
outsb
frstor
imul
or
scas
into
sbb
filds
mov
out
cwtl
scas
repz
add
fimuls
loopne
aad
add
jne
cs
sbb
pop
xchg
iret
jmp
in
jg
addr16
movsb
fmull
inc
mov
inc
xchg
roll
ret
dec
mov
xchg
jno
iret
pop
xchg
push
push
push
ja
xchg
and
dec
dec
sahf
dec
test
cmpl
dec
mov
dec
bswap
sub
adc
lahf
mov
mov
mov
xorb
xchg
xchg
ds
adc
popf
fldcw
dec
test
inc
fmuls
adc
inc
cmp
pop
loop
scas
sbb
and
and
cmp
fsubrl
mov
je
and
aas
cmpsb
xlat
rcll
dec
dec
adc
sub
mov
aaa
xor
push
jo
mov
xchg
cs
or
shlb
fbld
sub
mov
cmc
or
pushf
push
arpl
dec
data16
cmp
xchg
mov
ds
push
mov
fildll
sti
pop
xchg
scas
in
in
lahf
out
push
jp
repz
dec
or
fiadds
push
fisubrl
add
dec
sbb
sub
sar
lret
add
push
lret
out
mov
outsb
jge
lcall
lcall
mov
mov
addb
ffreep
lds
inc
mov
adcl
jg
inc
mov
cmp
jns
push
push
stc
xchg
aas
push
ret
xchg
xchg
inc
adc
mov
insb
movsb
fisubl
pop
out
xlat
push
lock
xor
mov
mov
test
popf
dec
and
aas
xchg
dec
sbb
lods
stos
sub
push
adc
testb
inc
clc
das
fsubrs
or
jae
push
or
mov
push
stos
pop
jecxz
mov
arpl
into
pop
push
ss
sbb
movsl
mov
scas
ret
ficomps
in
dec
xlat
dec
mov
cmp
ret
sub
push
sub
adc
xchg
push
dec
loopne
test
scas
mov
inc
mov
dec
pop
xor
gs
mov
ret
push
mov
xchg
rorb
imul
movsb
xorb
mov
add
xchg
sub
push
ret
ds
cmpsb
js
or
pop
add
fisubrl
and
pop
sbb
fiadds
ror
daa
xchg
cmp
add
mov
arpl
inc
or
mov
outsl
scas
es
push
inc
dec
imull
cmpb
shll
xor
hlt
mov
shrb
mov
gs
sub
popa
sbb
or
mov
fistps
dec
stos
mov
sahf
fidivs
scas
push
fsubrs
lret
add
or
inc
cmp
ret
in
or
cmp
xchg
sbb
mov
cmp
add
cmp
fiadds
cmp
aas
inc
loop
es
xlat
xchg
cmp
xchg
or
mov
loopne
and
fs
lcall
rcrb
dec
imul
cli
sbbl
mov
iret
lret
sarb
jae
iret
mov
push
arpl
ds
mov
or
data16
mov
mov
loop
stos
mov
push
rorl
sub
mov
lcall
lods
into
fisubrs
jge
ljmp
sahf
sub
xor
push
test
in
mov
lahf
lahf
push
pop
add
dec
js
adc
ds
sub
cvtpi2ps
add
movsl
lea
sbb
bnd
int
xor
xchg
xchg
hlt
or
sub
jno
cmc
inc
adc
mov
cmp
fisubrs
fistpl
repz
pop
ss
sbb
xchg
imul
les
sbb
out
hlt
add
mov
outsb
int
pop
push
pop
mov
pop
insb
enter
les
into
push
leave
sbb
mov
pop
sbb
add
sbb
pop
or
cld
add
push
mov
test
ss
push
add
xchg
dec
fdivrp
pusha
shrl
mov
mov
mov
mov
push
imul
mov
jnp
leave
add
je
mov
and
data16
and
dec
xchg
push
notb
ror
into
adc
cmp
mov
xchg
mov
call
shlb
push
scas
or
mov
movsb
mov
push
loop
push
test
jb
sbb
lds
inc
mov
adc
mov
mov
shrl
lret
mov
les
mov
push
push
dec
nopl
or
sahf
lock
stos
adc
rcl
xchg
ja
push
or
push
mov
ret
pushf
jecxz
loop
mov
outsb
bound
rcr
pop
adc
mov
add
pop
mov
in
push
sbb
pop
into
push
xchg
or
cmp
out
testl
cld
sbb
inc
mov
negl
mov
and
ret
or
cmc
negl
cs
pop
std
or
scas
pop
outsl
pop
pop
add
cwtl
mov
rorl
mov
repnz
push
cmp
sub
aaa
xor
lcall
test
add
mov
push
mov
add
out
mov
dec
lret
cmp
ret
es
and
push
testb
call
std
fcmovnu
es
xor
jle
into
ss
dec
push
js
pop
es
rcrb
dec
mov
sub
sbb
dec
pop
pop
rorl
or
fistl
call
into
sub
fwait
ret
ljmp
rcr
add
add
push
data16
jno
ds
aam
shlb
cmpsl
or
add
mov
sbb
adc
clc
addl
xchg
es
sub
adc
xchg
testb
loop
xchg
loop
repnz
fidivs
or
lods
inc
push
and
mov
push
add
inc
push
mov
ret
ffreep
jecxz
and
cltd
dec
insl
outsb
jo
dec
inc
bound
pop
mov
cs
xorb
sub
shrb
lret
mov
les
ds
or
and
pushf
stos
add
push
pop
pop
es
movsb
inc
push
jo
ss
and
push
push
or
cwtl
xchg
xchg
fistps
or
jecxz
push
xor
push
subb
add
jbe
xchg
dec
mov
shrl
cmp
inc
out
xchg
mov
mov
jle
sbb
add
push
loopne
fbstp
out
push
stos
nop
sarb
jg
std
xchg
cld
add
outsb
andb
push
lods
cmc
push
addr16
cltd
and
rorw
xchg
ret
or
out
andb
insb
into
xchg
adc
mov
mov
inc
ret
push
push
decl
mov
mov
cmpsb
sub
das
arpl
pop
push
or
es
dec
stos
jl
and
xchg
mov
imul
mov
ss
fidivrs
and
mov
push
xor
repnz
iret
lods
mov
pop
adc
aad
jmp
testl
into
pop
stos
sbb
inc
add
lcall
sub
and
lea
jp
pop
outsb
gs
mov
xor
gs
nop
ljmp
movsl
scas
pop
outsb
loop
push
clc
enter
fiadds
push
mov
xchg
push
add
push
lcall
xchg
ljmp
sub
add
sub
xor
gs
out
shlb
scas
loop
mov
jne
ret
and
mov
ljmp
sub
xchg
sarb
gs
sbb
add
adc
adc
jbe
sub
mov
loop
loopne
and
fdivrs
xchg
mov
jecxz
cmp
jle
daa
rcrb
sub
ret
rcl
sbbl
xchg
scas
cltd
cmpsl
lret
loop
push
pop
inc
xlat
xchg
mov
cmp
mov
pop
sub
pop
or
lds
xor
sub
icebp
dec
xchg
outsb
mov
out
fstl
pop
pop
mov
loope
mov
out
fimull
outsb
xchg
pop
ret
outsb
mov
xorb
adc
sbb
adc
es
push
and
test
in
mov
push
aam
lahf
cmp
cmp
xlat
je
push
xchg
pop
jae
mov
add
push
int3
sub
and
lcall
das
mov
cmp
mov
inc
xchg
gs
stos
add
andl
sbb
ds
mov
cmp
push
sbb
mov
ljmp
in
push
or
cmp
dec
mov
push
xor
pop
xchg
sarl
mov
jg
push
adc
xor
fidivrs
dec
ljmp
xchg
ja
or
loop
add
pop
push
imul
mov
mulb
insl
push
cmp
iret
bound
push
addb
push
jecxz
sub
loope
xlat
outsb
adc
add
pop
test
and
ljmp
stos
cmpsb
and
fiadds
push
pop
or
bound
xchg
fistps
ret
outsb
cmp
faddp
fistpl
mov
sub
into
cmc
rclb
or
sbb
faddp
pop
sbb
push
insl
std
push
dec
add
ret
cmp
mov
mov
clc
push
sub
push
cmpsb
mov
mov
ljmp
pop
js
call
ret
pop
push
lods
cmc
in
xchg
cld
lahf
push
or
dec
ds
dec
lods
push
sbb
orl
inc
ljmp
push
inc
fiadds
in
lahf
subb
xor
xchg
mov
mov
push
fists
pop
cmpsb
or
push
imul
stos
lods
jl
dec
and
and
leave
ss
inc
ret
dec
shlb
xor
lock
scas
or
out
xor
ja
mov
cmp
sti
dec
repnz
fwait
mov
dec
push
clc
hlt
mov
loop
fidivl
xchg
pop
cmp
and
cmp
aas
aad
pop
repnz
stos
dec
fcmovb
je
sub
jmp
add
mov
je
ret
push
or
xlat
leave
pop
mov
pop
and
and
mov
rcrl
repz
mov
pop
mov
bound
stos
fcmovnb
outsb
mov
iret
aam
xchg
jge
mov
xlat
and
adcb
sbb
out
ss
jge
arpl
mov
movsl
fisubrl
mov
icebp
subb
cwtl
xchg
mov
sbb
loop
push
in
xchg
mov
lods
sub
xchg
cmp
and
sbb
xchg
sub
dec
jle
xchg
sub
mov
stos
into
lcall
mov
lock
lcall
jecxz
adc
pop
cmpb
push
or
lea
xchg
sub
cs
sarb
mov
dec
fisttpl
mov
sub
cs
orb
mov
ss
jecxz
iret
xchg
shrd
mov
mov
and
push
push
cmp
xlat
mov
inc
adc
cld
pop
push
scas
mov
loope
pusha
jmp
popf
addr16
push
and
fisubrs
sub
inc
inc
arpl
pop
or
cmp
xor
in
push
xchg
xchg
test
loop
psubq
call
mov
test
sbb
mov
jbe
gs
cs
daa
cmp
add
and
fistl
inc
adc
add
ficoml
pop
and
push
push
mov
mov
jecxz
rolb
dec
lret
push
push
mov
xchg
xor
push
adc
mov
mov
lds
dec
dec
pop
dec
test
add
into
mov
andl
pop
stos
push
ljmp
je
ljmp
fdivs
call
outsb
sub
andb
sub
mov
imul
cmp
inc
pushf
pop
orb
ret
rclb
mov
movsb
cs
and
pop
inc
out
scas
cld
mov
push
mov
cs
es
stos
sbb
sbb
pop
pop
add
pop
bound
dec
cmp
test
inc
add
pop
sub
cmpsl
mov
das
and
cmp
jo
test
add
cmpsb
xchg
mov
pop
ljmp
push
xchg
ret
mov
pushf
mov
dec
insl
pushf
and
push
adc
and
sti
push
ljmp
mov
aam
in
sbb
mov
pop
outsb
out
mov
push
and
cmp
sarl
imul
out
fists
test
sbb
idiv
mov
es
test
or
loopne
xor
mov
xor
das
mov
mov
cmp
in
pop
loope,pt
dec
or
sahf
out
mov
ss
mov
into
and
es
cmpsl
out
fwait
hlt
ss
mov
cmp
stos
sub
push
movsl
mov
mov
mov
mov
xrelease
rol
cwtl
xchg
mov
fisubrs
jbe
push
cwtl
xorb
and
pop
bound
and
ret
mov
aas
lock
inc
test
pop
iret
mov
inc
mov
push
xchg
and
ss
es
aas
cmpsl
fists
sub
ss
in
cmpsl
add
mov
xchg
psubusb
mov
fimull
xchg
mov
aas
mov
mov
xchg
out
xchg
jl
mov
mov
adc
push
xlat
mov
mov
repz
shll
add
addr16
addr16
sbb
or
pushf
pop
mov
dec
out
and
add
cs
notb
inc
cmpsb
push
push
push
gs
push
mov
les
or
mov
adc
cmp
dec
mov
xlat
cmp
mov
hlt
outsb
ss
ret
cmc
adc
xlat
or
or
inc
push
push
pop
xor
lock
icebp
gs
push
mov
push
jecxz
inc
push
dec
mov
sti
inc
mov
scas
lds
pushf
scas
nop
pop
loop
pop
xchg
mov
iret
lcall
pop
rorl
pop
push
mov
xor
push
popa
pop
mov
repnz
mov
push
sbb
dec
xchg
mov
imul
mov
negl
imull
pop
push
shr
inc
sbbb
bound
mov
mov
xchg
add
mov
and
inc
mov
mov
push
arpl
mov
fidivrl
adc
adc
dec
adc
pop
cmpsb
xor
add
xlat
in
out
fistpl
ds
add
insb
jb
push
and
test
das
lea
daa
fcmovnu
xlat
outsb
mov
sahf
mov
push
bound
mov
fimull
pop
xlat
push
cmpsb
clc
jg
sahf
xor
sub
sub
mov
xlat
push
xchg
dec
or
adc
mov
repnz
in
ss
inc
dec
sub
and
mov
xchg
xlat
insb
push
rorb
arpl
dec
lret
push
mov
inc
imul
and
mov
sbb
adc
fimull
shll
push
mov
orb
ret
lret
imul
iret
or
cmc
add
out
enter
xchg
add
pop
sahf
mov
mov
sbb
mov
or
xchg
jno
pop
jae
ret
sub
lods
ljmp
lcall
pop
mov
mov
dec
push
dec
mov
dec
loop
inc
lods
inc
fildl
sub
or
jecxz
ret
push
test
pop
or
dec
int
jb
push
bound
mov
ljmp
push
add
adc
aam
jp
xor
pop
cmp
stos
test
xorb
or
loop
clc
lret
xor
add
dec
scas
sbb
sub
add
inc
add
loop
pop
xchg
push
mov
xlat
mov
and
and
jmp
jbe,pn
push
xchg
jno
cmp
and
adc
or
pop
andb
add
inc
or
outsb
repz
dec
ret
jl
xchg
stc
outsb
addb
pop
jne
mov
cmp
pop
pop
lcall
lahf
and
pop
scas
in
and
or
sub
cmp
iret
mov
and
add
mov
cmp
and
ret
push
aas
jb
pushfw
pop
jae
mov
lea
in
push
dec
and
add
outsb
lcall
cs
imul
mov
mov
lret
jae
lcall
mov
loop
mov
mov
add
mov
in
inc
xchg
mov
mov
sbb
mov
dec
add
inc
mov
or
out
push
mov
imul
es
aam
ss
ficompl
mov
xor
out
add
es
fsin
push
outsb
out
icebp
add
mov
mov
pop
leave
mov
lods
imul
sahf
je
fninit
or
mov
sub
int3
ja
lret
outsb
les
lcall
aaa
and
jmp
ss
repnz
ss
mov
es
mov
mov
mov
mov
movsl
aam
pop
pop
sub
test
sub
jecxz
sahf
bound
fldt
cmpsb
jle
xchg
mov
xchg
mov
out
inc
fldt
inc
push
pop
into
inc
dec
jecxz
fdivs
call
ljmp
mov
cmp
or
mov
push
push
cs
mov
push
into
sub
les
lods
lahf
push
in
xchg
test
jae
iret
cs
imul
stos
jbe
inc
sub
hlt
push
ret
or
inc
adcb
push
into
mov
sbb
or
add
mov
andl
shlb
jl
out
xchg
jl
mov
inc
mov
dec
inc
fnsave
mov
mov
ret
lret
sub
int3
push
xor
mov
push
pcmpeqw
out
or
roll
lods
cs
inc
push
popa
call
add
es
cmp
loop
cmc
inc
dec
mov
adc
andb
dec
cmpsb
mov
iret
pop
push
pop
addr16
xor
mov
mov
rcrl
pop
sub
mov
inc
mov
and
ret
mov
scas
pop
adc
pop
pop
std
mov
mov
pusha
fisubrs
ljmp
jno
sarl
cli
loopne
gs
es
and
mov
xor
test
daa
or
push
jg
push
pop
popf
add
cmova
xlat
in
dec
hlt
xchg
push
push
fstpt
ja
push
and
mov
lcall
jo
lods
pop
das
sbb
mov
sub
shlb
cmp
push
push
popf
adc
iret
mov
out
aaa
adc
sbbl
stos
or
into
jae
cmpsl
mov
pop
mov
add
out
xchg
sbb
adcl
xchg
rcrl
sbb
mov
mov
sbb
and
xor
ret
add
jecxz
jo
push
out
pop
or
stos
and
mov
dec
loope
repnz
out
out
in
gs
push
pushf
gs
gs
out
out
loopne
gs
inc
adc
xor
into
test
rolb
xchg
mov
adc
gs
gs
xchg
fdivrl
outsb
gs
dec
lock
insl
gs
adc
in
gs
push
pushf
gs
gs
into
xor
into
inc
adc
xor
into
test
xchg
dec
fucomi
push
gs
mov
adc
gs
mov
lret
setg
mov
adc
gs
scas
cld
lcall
push
andb
bound
adc
pop
data16
scas
xlat
iret
add
cmc
push
push
push
sahf
sbb
inc
sub
mov
jg
bound
ret
fiaddl
cmp
mov
roll
mov
mov
sub
add
inc
aas
stos
push
rcrb
in
scas
xchg
push
lock
add
roll
cmpsl
loop
int
adc
cwtl
push
repz
incb
cmpb
mov
xchg
xchg
cltd
sub
loopne
pop
push
or
repz
pop
mov
cld
inc
sti
xor
xchg
inc
imul
sub
push
outsb
and
mov
mov
lahf
xchg
lods
inc
and
mov
cli
sbb
mov
inc
sahf
fistl
sti
sub
je
pop
push
mov
jae
iret
shlb
cmc
movlhps
movl
mov
push
mov
jl
adc
xchg
inc
ja
inc
mov
dec
out
sbb
ss
sarb
dec
pop
cmc
dec
sbb
or
test
push
push
xchg
imul
adc
test
push
xchg
cmpsb
inc
gs
cmc
add
mov
leave
push
rorb
lds
push
test
test
sbb
stos
std
or
or
push
mov
sbb
fbld
popf
sarb
test
xchg
pop
cmp
xlat
or
vhsubpd
shlb
cmp
xchg
cmpsb
cli
outsb
lock
mov
sahf
shll
fwait
test
mov
gs
mov
clc
ja
cmp
push
add
pushf
push
test
push
idivb
test
inc
in
ret
mov
sub
mov
addl
mov
mov
test
mov
inc
lea
xor
mov
xchg
test
mov
pop
inc
or
jle
mov
push
pushf
cwtl
cmp
mov
jle
mov
xchg
idivb
fcomps
xchg
mov
pop
jp
test
shlb
jle
jg
or
gs
into
pop
cmp
mov
pop
scas
repz
inc
insl
stos
test
mov
insl
gs
push
mov
mov
gs
jle
ret
sub
gs
xchg
xchg
addr16
xor
cmp
cs
mov
incl
lock
dec
inc
xlat
sar
and
clc
shll
inc
adc
mov
ret
int
xor
int3
out
mov
aas
adc
add
mov
xor
shr
sub
push
sbb
pop
sbb
mov
pop
mov
mov
mulb
shl
xor
test
leave
lods
push
jp
lret
pop
test
repz
lret
push
les
les
ret
fistps
addr16
jge
cli
mov
sti
sub
cmp
sahf
mov
rcrl
ja
lods
pop
out
mov
fildl
movl
xchg
fdivs
jg
lret
int3
mov
dec
pop
fcom
lcall
imul
or
lods
push
stos
mov
sahf
imul
xchg
lret
mov
pop
mov
and
ret
xchg
mov
je
mov
push
push
in
adc
das
int
push
xchg
sub
mov
jnp
mov
push
dec
ror
mov
add
or
mov
mov
imul
mov
cmp
push
aas
andb
and
dec
push
ret
int
push
xor
xchg
mov
das
adc
pop
dec
jecxz
out
xchg
inc
xchg
jb
test
mov
ss
inc
pop
push
sub
xlat
test
jecxz
push
mov
cmp
fstpt
xor
aad
sbb
in
xchg
ss
xlat
mov
jle
mov
int
test
iret
icebp
sub
xor
test
mov
and
stos
add
mov
movsl
ret
adc
inc
mov
adc
jle
xlat
int3
jecxz
out
nop
mov
inc
add
iret
cmp
jle
sub
xlat
test
jecxz
addr16
iret
cmp
jle
int3
shrl
test
xlat
mov
ret
cmp
jle
fcmovne
test
shl
fists
mov
and
adc
mov
inc
sbb
imul
xchg
fildll
xlat
and
xchg
out
add
int
call
ret
int
mov
bound
ret
and
xchg
push
add
fstps
test
lds
cmpsl
push
loope
jge
movlps
mov
mov
pop
sbb
les
cmp
xchg
ds
jo
cli
lds
fldcw
push
fnstcw
lea
lea
lea
lea
shll
popf
pextrw
lea
iret
dec
jg
in
cs
out
es
inc
outsb
inc
push
fcmovne
push
fcomps
xlat
xor
into
adc
push
dec
cmpsl
aas
inc
shrl
adc
cmp
lahf
cld
inc
popa
in
xchg
aam
stos
les
mov
test
fs
xchg
inc
and
popa
or
xchg
in
stos
aad
frstor
int
stos
mov
nopl
xorl
lret
mov
test
mov
xchg
mov
in
adc
push
or
and
jns
cld
inc
sub
ds
pop
pop
es
cmpsb
adc
pusha
repz
mov
sub
ret
adc
pop
mov
push
mov
daa
mov
push
mov
lds
nop
insb
jg
xlat
jle
xlat
int3
xlat
test
xlat
mov
shrl
xlat
mov
icebp
dec
xchg
iret
clc
lds
cmp
out
sbb
xlat
jno
dec
xlat
cmp
pop
add
cltd
cmp
ret
in
out
mov
mov
data16
jmp
push
int3
mov
xor
test
ret
in
adc
ret
jnp
add
test
mov
xchg
iret
mov
or
sub
sub
nop
mov
fidivs
scas
int
jge
pop
outsb
sarl
mov
fildll
adc
rorl
test
mov
mov
mov
popa
dec
in
push
cmp
lea
mov
out
mov
sub
adc
test
bound
iret
popa
mov
sub
jne
push
dec
xor
xchg
cmp
and
jno
movsl
int
xor
cmp
les
and
jns
xor
insl
ficoml
jg
xchg
xchg
or
in
mov
cmp
jge
iret
into
add
iret
inc
dec
jb
lods
mov
aaa
xchg
iret
stos
test
push
ret
aad
in
xchg
ret
push
das
dec
push
mull
ja
xchg
push
faddp
inc
call
mov
pop
fbstp
pop
mov
imul
cmp
aas
int
test
pop
mov
jl
xlat
aas
std
jp
pop
dec
mov
incl
xchg
xor
lods
and
mov
adc
mov
pop
jle
sbbl
out
cmpsl
negb
inc
ljmp
xchg
push
cmpsl
xchg
sub
xchg
ja
and
add
je
out
push
bound
xlat
sub
out
mov
movsl
push
push
out
sbb
jp
sarl
or
or
dec
xchg
add
ret
in
xor
bound
in
rol
xchg
ja
and
lods
sbb
or
push
gs
stos
adc
int3
cltd
mov
aaa
jecxz
jmp
fcomip
ret
pop
xlat
dec
dec
outsb
ret
popa
cmpsb
xchg
in
filds
and
mov
addl
sbb
mov
cli
stc
aaa
pop
adc
pop
lods
pop
or
seta
xchg
xlat
and
fists
sbb
out
mov
xlat
ret
pop
lods
out
xlat
push
out
movsb
or
add
adcb
push
jb
popf
into
pop
pop
adc
xchg
xchg
popa
jbe
xlat
xor
popf
xchg
aam
mov
push
inc
pop
repnz
out
xor
bound
mov
cs
push
push
aas
xlat
sbb
jp
sub
xchg
dec
iret
mov
stc
dec
stos
and
mov
mov
xchg
sahf
sbb
inc
dec
pusha
ds
fidivrs
inc
inc
jle
mov
xchg
add
out
data16
pop
int
fistpl
das
push
ret
fbld
mov
fcmovnb
fldcw
test
xor
inc
xlat
aam
popf
dec
lods
mov
out
and
xchg
idivb
loope
xchg
idivl
popa
push
in
es
aaa
pop
imul
testl
gs
dec
xchg
nopl
scas
mov
inc
mov
xor
mov
xchg
aas
pop
push
or
add
xchg
mov
movsb
dec
scas
scas
jecxz
push
iret
dec
jo
xlat
je
and
div
add
inc
xchg
dec
out
fistpll
popl
cld
popf
inc
jg
pop
je
iret
mov
ret
push
mov
stos
ljmp
xor
xlat
mov
pop
idivl
ljmp
idivb
iret
popa
mov
push
in
fnsave
cmpsb
pcmpeqb
popa
in
fldt
into
mov
lods
xchg
iret
ss
dec
xor
lahf
mov
xchg
pusha
outsl
mov
iret
mov
dec
xor
push
pop
mov
or
in
pop
mov
fbld
ss
rcr
shlb
add
push
pop
test
imul
pushw
push
jmp
fs
mov
data16
jns
sbb
inc
lahf
bound
push
pop
pop
pop
push
ret
shll
xlat
jno
xchg
es
add
dec
xor
into
pop
mov
ds
pop
aam
ljmp
xor
cwtl
lea
xchg
scas
cmc
push
sub
pop
lea
pop
add
push
inc
divl
mov
sub
test
jne
sbb
mov
test
xchg
jno
jge,pn
ret
aaa
mov
push
push
fisttps
jl
xchg
ljmp
int
pop
into
out
cmpsb
xor
or
out
lds
stos
inc
and
xchg
xlat
in
lret
inc
sbb
xlat
pop
xlat
test
cmp
insb
bound
inc
in
push
ds
call
fiadds
jo
ficompl
cmp
loop
movsl
mov
aad
add
adc
mov
fisttps
out
mov
inc
pop
outsl
ss
mov
testl
out
mov
int
xlat
insl
movsl
add
push
hlt
or
add
in
jmp
scas
xlat
inc
jne
jecxz
setle
insb
jbe
into
dec
dec
sbb
fistl
xor
xchg
cmpsw
popf
xchg
testl
xlat
mov
hlt
pop
push
xor
cs
sbb
popa
xchg
iret
xchg
ret
mov
sbb
inc
movb
pop
jnp
stos
mov
xlat
mov
xchg
out
aam
pop
out
cld
mull
pop
xchg
xor
xchg
mov
in
fbstp
inc
mov
aas
je
out
dec
xor
imul
push
pop
cmpsl
jge
aaa
xchg
popf
movl
cmpsb
aas
clc
dec
movq
pop
mov
jl
outsl
xchg
dec
xor
das
out
pop
cmpsl
inc
push
pushf
imull
xchg
jns
stc
mov
xor
mov
xor
add
sbb
test
lahf
sub
xchg
jo
das
out
dec
stos
push
sbb
shlb
lods
push
loop
cmp
jg
cmpsb
or
hlt
dec
sahf
pop
xchg
mov
or
push
lahf
xlat
out
nop
jecxz
psllq
ffree
daa
pushf
stos
add
and
ds
dec
sub
push
out
mov
fidivl
out
inc
test
push
out
cmp
int3
sub
push
pmovmskb
fists
mov
out
inc
movnti
xlat
adc
mov
aam
dec
mov
test
inc
xchg
sbb
mov
movsb
adc
push
inc
ja
scas
push
mov
movsb
nop
xchg
insl
ret
ds
fbstp
sbb
xor
sub
jg
xlat
and
into
jle
dec
ljmp
jne
push
mov
test
sub
dec
int
rcrb
inc
inc
cmp
mov
or
mov
xchg
stos
xor
xchg
mov
mov
mov
cmpb
xlat
sbb
test
inc
insl
jns
xor
dec
push
xor
cmp
jg
add
cmp
rorb
psubusw
mov
pop
sarb
cmp
nop
mov
and
xchg
ss
inc
xlat
out
xor
sbb
mov
xlat
jle
sbb
sarl
mov
mov
cmp
push
inc
xor
xlat
mov
push
fnstcw
pop
mov
fcomip
mov
jle
mov
test
sub
mov
aaa
xchg
out
xchg
push
jle
cmpsl
fstp
popf
jle
xlat
fucom
fldl
sub
mov
mov
neg
pop
and
movb
mov
lds
mov
sbb
cmp
es
cmp
pop
insb
stos
sub
and
mov
push
test
adc
or
rclb
out
mov
mov
gs
jae
into
adc
callw
jecxz
scas
test
loopne
movsl
push
cld
or
dec
aaa
push
mov
push
dec
int
dec
xor
aas
mov
push
mov
mov
mov
sub
push
cmp
sbbl
lret
or
inc
lds
xchg
ljmp
xchg
xlat
idiv
sahf
cmp
in
pop
outsb
rcll
mov
icebp
lret
cwtl
in
pop
pop
lret
mov
xlat
int
fiaddl
dec
sub
and
stos
sbb
push
iret
pop
ja
xchg
inc
scas
je
bound
ss
mov
cwtl
in
dec
push
mov
out
mov
in
int
std
xchg
dec
js
dec
sub
cmc
xor
xchg
in
outsb
xchg
pop
cmp
jecxz
mov
cmp
dec
cmp
mov
push
insb
xchg
jne
dec
push
sub
sbb
adc
in
clc
push
out
or
aad
bound
mov
adc
or
in
fstl
inc
test
and
cmpb
int
bound
rorl
xchg
inc
sub
pushl
pop
jb
insb
mov
and
mov
bound
pop
fstl
insb
push
adc
inc
nopl
fisttps
and
out
dec
jecxz
outsl
jl
movsl
out
cmp
mov
dec
dec
mov
daa
pop
jl
mov
repz
mov
mov
xchg
mov
xlat
aaa
add
mov
hlt
mov
sub
pop
add
adc
movsb
xorl
lea
xor
push
cwtl
fs
push
roll
and
pop
pushl
jp
sub
lods
out
mov
out
xor
ja
out
sub
cmp
insl
sarl
cmp
cmp
mov
inc
testl
outsb
sahf
fadd
mov
push
fistl
sub
dec
cmp
aam
into
outsl
sar
mov
out
inc
sti
out
xor
shll
movsl
pushf
int
mov
push
int3
pop
jns,pt
inc
add
mov
dec
insl
and
out
jle
mov
cmc
xor
loop
cli
bnd
iret
xor
iret
push
out
inc
shlb
xor
cltd
sub
outsl
bound
xchg
out
push
aas
or
mov
or
lds
cmpsb
jle
es
pop
cltd
push
dec
cmp
mov
mov
out
iret
sbb
pop
aas
into
inc
fisttps
inc
xor
loopne
imul
out
ss
mov
xlat
inc
jge
std
jle
inc
cmpsl
pop
fcmovne
dec
pop
inc
mov
push
dec
or
fdivrs
pop
int3
sub
mov
les
mov
push
jno
xchg
out
ds
push
outsl
rolb
inc
data16
inc
xor
jne
jp
or
jecxz
les
xlat
pusha
in
adc
xor
nop
fildll
gs
inc
xlat
jne
inc
mov
repnz
sub
cs
out
pop
xor
jp
sahf
mov
ret
mov
sti
push
sbb
jns
xchg
ficompl
pop
mov
cmpsl
lds
outsb
xchg
sub
sbb
jno
jp
int
popa
push
xchg
sub
lods
sarl
push
pop
ret
cmpsb
shll
repnz
mov
cmp
pop
pop
mov
out
hlt
and
and
dec
cmpsb
std
cmc
insb
pop
xlat
nop
sub
cmc
push
push
push
test
jg
dec
dec
cmp
ret
mov
mov
mov
ljmp
mov
std
and
and
pusha
push
mov
das
out
inc
lea
inc
mov
mov
inc
sbb
xchg
pushf
xlat
fisttpll
cld
rorl
dec
gs
fs
call
dec
cmp
dec
call
mov
call
add
cld
sahf
lret
ds
fsub
frstor
fstpt
popf
fsubrl
inc
push
movsl
sbb
shlb
mov
notl
shll
push
into
movsl
rclb
xor
loop
jp
les
iret
inc
insl
push
out
loop
xchg
jecxz
adc
pop
sub
lds
notl
jp
jl
lahf
fildll
sarl
int3
adc
fdiv
and
movsb
out
xchg
cmpsb
rcl
cwtl
cld
xor
stos
cmp
lahf
ss
cltd
scas
test
push
xor
mov
addr16
inc
jle
add
stos
sahf
popa
sub
jl
add
lods
aas
mov
push
mov
dec
loopne
mov
cmp
fucomi
jecxz
das
incl
sahf
int
push
jp
pop
push
sbb
jne
into
sub
pop
cmpsb
push
iret
neg
or
xchg
pushf
fisubs
jecxz
movsb
adc
cmp
pop
js
cmp
and
jp
push
add
sub
pusha
jno,pt
imul
repnz
mov
mov
pop
pop
ds
mov
sbb
icebp
ja
in
pop
movsl
mov
jge
outsb
testb
xlat
xchg
mov
push
stc
jle
inc
jmp
xchg
mov
jo
stos
xchg
xchg
fadds
jno
mov
jno
jne
movl
scas
xchg
jbe
inc
data16
and
mov
loopne
jmp
add
mov
pop
repnz
hlt
scas
xor
inc
into
inc
ljmp
leave
mov
lods
jg
lahf
ret
aaa
xlat
ds
mov
jp
xlat
out
dec
dec
je
adc
xlat
xlat
sti
push
mov
add
mov
ficoms
jge
ret
jle
jns
jp
in
gs
fbld
pop
iret
cmp
adc
pop
xchg
mov
xchg
push
popf
or
push
add
ljmpw
hlt
mov
cmp
xlat
dec
cs
xor
stos
pop
and
xlat
xor
add
mov
sahf
or
xor
add
xchg
cmp
adc
movsb
jmp
outsl
mov
jmp
adc
in
add
orb
lahf
hlt
bound
test
cmpsb
pop
icebp
jecxz
jnp
dec
mov
ljmp
xor
hlt
inc
fstpt
cmp
andb
pop
test
mov
icebp
mov
aam
sbb
std
rcl
iret
xlat
fcomi
std
ja
inc
sub
ss
and
sbb
push
cli
mov
sbb
jbe
lret
mov
addb
sbb
xor
insl
repnz
pushf
jmp
adc
pusha
lea
call
push
movw
mov
lea
jb
push
mov
pushf
pushl
ret
lea
jmp
lea
je
clc
add
clc
cmc
stc
cmp
pushf
mov
lea
jb
jmp
insb
insl
pushf
rcrb
jo
sub
inc
scas
mov
popf
adc
and
nop
mov
iret
fldl
mov
mov
mov
daa
adc
dec
dec
clc
mov
fdivr
out
out
lahf
sub
push
mov
push
leave
mov
mov
xchg
dec
outsb
in
leave
lcall
hlt
mov
mov
popa
jge
jo
mov
mov
mov
or
int3
jo
and
push
push
mov
sar
dec
stos
push
and
sub
dec
outsb
stc
pushw
cmc
inc
notl
and
pop
call
xchg
sub
stos
mull
outsl
mov
jmp
addr16
add
mov
pop
inc
jne
das
jl
ret
xor
aam
add
mov
cwtl
dec
mov
lea
leave
xchg
cmp
shll
xor
xchg
movups
mov
hlt
imul
sub
mov
mov
cmp
add
and
mov
bound
fmul
pop
cmc
icebp
leave
sahf
add
std
sub
or
out
mov
dec
outsl
xlat
int3
in
sub
fsubrs
inc
cmpsl
adc
push
stos
test
into
test
imul
add
cltd
and
test
pop
jle
cmp
dec
outsb
and
cmp
mov
inc
sbb
xchg
sub
cwtl
bound
insl
hlt
ret
movsb
cmp
out
dec
inc
movsb
cmp
into
cli
dec
pushf
inc
setns
pushl
mov
pushf
pushf
pusha
lea
call
jmp
call
mov
mov
call
pop
fwait
add
call
xchg
dec
cli
push
xor
ltr
cmp
negl
xchg
mov
jecxz
imul
and
aad
pop
sbbl
pop
in
imul
ljmp
ret
shll
xchg
imul
adc
out
cwtl
jae
lods
mov
mov
movsl
and
dec
pop
lods
daa
xchg
xor
shll
pop
xor
jo
add
mov
mov
jae
add
push
lds
add
xlat
jl
nop
mov
sbb
ljmp
imul
gs
cmc
jge
mov
xchg
push
xor
cwtl
push
sub
lahf
cmp
cltd
rcr
std
dec
fstl
iret
pop
loop
movsl
imul
inc
notb
push
adc
mov
lcall
push
or
pop
cmp
xor
adc
cmp
stos
mov
jg
mov
int
add
push
subl
push
or
pop
or
mov
inc
outsb
or
movsb
cld
inc
fcomps
repnz
mov
inc
fwait
adc
jmp
xor
xor
loopne
idivw
andl
cwtl
and
test
push
insb
loopne
lods
push
dec
pop
cmpl
outsb
sub
int
test
add
and
movsl
xor
jno
xchg
dec
bt
stc
not
pushl
stc
cmp
test
shr
pushf
call
push
lock
std
std
test
cmp
add
inc
gs
into
ljmp
mov
pop
sbb
xor
mov
jge
in
dec
dec
dec
arpl
aam
push
lds
loop
sub
test
xchg
and
add
repz
xchg
push
push
scas
in
rorb
sbb
and
and
jmp
adc
dec
push
stos
pushf
lea
jb
push
mov
mov
lea
jmp
pusha
jmp
dec
mov
push
sbb
data16
dec
dec
jmp
jl
and
or
mov
test
ret
sbb
fistpll
lahf
mov
addl
cmp
loope
push
push
or
in
rolb
mov
dec
jae
pop
mov
pusha
cmp
mov
pushf
sub
call
lods
stc
clc
bt
clc
xor
movb
ror
pushl
push
call
out
das
aaa
and
inc
push
daa
jb
out
stos
ds
mov
mov
sub
or
and
add
or
test
pop
les
insb
jns
dec
xchg
lea
icebp
cmp
jle
jno
xor
xchg
outsb
mov
clc
insl
add
adc
or
mov
cmc
test
clc
dec
sub
insl
xchg
out
jg
enter
mov
movsb
add
ss
out
nop
movsl
pop
fdivs
dec
je
dec
shlb
movl
cwtl
cmp
add
clc
bt
ror
mov
cmc
neg
call
mov
jmp
roll
cld
pop
mulps
jno
or
test
cs
std
out
xor
std
pcmpgtd
ret
xchg
jp
inc
lcall
mov
jecxz
cmpsl
or
jle
gs
pusha
sub
mov
jae
in
pop
mov
xchg
or
push
icebp
sbb
sub
mov
mov
inc
jle
push
push
jmp
neg
mov
push
mov
enter
xor
cmp
push
or
add
push
cmp
out
inc
fistps
mov
bound
clc
xchg
mov
mov
jg
cmp
scas
pop
mov
pushf
and
movsb
sub
movsl
scas
into
inc
jl
fsubrs
ret
sbb
jns
dec
jne
ljmp
cmp
dec
out
xchg
fistpll
sub
lock
mov
inc
jle
iret
xlat
stos
cmp
nop
je
jns
iret
or
inc
pop
lods
jbe
jecxz
push
test
push
rcrb
or
and
jno
xor
andb
push
call
xchg
inc
adc
add
dec
ds
mov
js
push
rolb
or
into
mov
fwait
call
sub
cmp
out
lcall
xchg
push
das
pusha
pop
scas
pop
jae
int
mov
ret
and
push
mov
fildll
cmpsb
in
or
dec
mov
cmp
adc
jge
push
test
add
fcomps
pop
push
repz
mov
xor
adc
cmp
js
push
push
mov
jae
lahf
ret
dec
jbe
psubusw
jmp
imul
loopne
out
insl
sub
and
aaa
in
push
or
or
mov
mov
lea
loopne
in
adc
pushf
gs
cmp
dec
jne
lods
adc
incl
clc
test
test
stc
mov
cmp
jmp
jo
in
add
jno
es
fadd
in
sbbb
pop
xor
pop
push
jno
popa
pop
xor
xchg
pop
sub
mov
sahf
pop
and
mov
mov
js
adc
repnz
adc
test
fidivrl
ret
mov
jmp
and
ljmp
mov
sar
cmpsl
hlt
sti
cmp
mov
mov
and
fs
jae
cmp
rcl
rcr
mov
sar
call
call
pusha
test
add
pushl
pusha
lea
jne
not
pusha
pushfw
popw
add
xor
sar
mov
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
not
setne
xchg
pop
movzbw
call
lods
lock
jecxz
pop
cmpl
addr16
xor
add
fdivs
and
cmp
cvtps2pi
jb
push
into
test
adc
outsb
shll
jp
mov
jno
xchg
mov
jecxz
add
xchg
fbstp
jae
push
cmp
sub
push
inc
cmp
mov
and
mov
mov
lds
adc
lock
stos
inc
jle
sub
dec
aad
test
mov
fimuls
stc
in
icebp
negb
out
push
enter
movsl
ret
mov
icebp
xor
int
add
cmp
fistl
mov
cwtl
cltd
rcl
out
fs
xor
adc
js
mov
nop
movl
and
pop
push
jge
xchg
out
sub
pop
int
adc
repz
or
jnp
mov
pop
das
outsb
add
cs
ficoms
pop
in
mov
push
lea
pushf
lea
pushf
movb
pushf
movl
xchg
cwtl
pushl
popl
jmp
mov
inc
bt
pusha
xor
jmp
mov
pushl
movl
movb
lea
jmp
lea
ja
call
jmp
add
inc
push
inc
dec
push
pop
push
dec
dec
dec
pop
push
gs
gs
jae
add
xor
jmp
loope
mov
lock
stc
jecxz
scas
cmp
je
add
inc
dec
mov
das
dec
jae
pop
xor
enter
push
xchg
outsb
cmp
jl
jmp
or
mov
inc
pop
divb
ret
inc
aaa
arpl
jae
dec
jns
in
mov
insl
cmp
test
jnp
jmp
loopew
push
decl
cmp
xor
loope
xor
cld
mov
dec
fucom
loop
jp
mov
mov
cwtl
or
add
test
out
xchg
gs
xor
adc
fnsetpm(287
mov
je
rcrl
out
fdivs
pop
outsb
dec
cwtl
les
stos
dec
push
nop
dec
mov
scas
ret
cmp
mov
push
xlat
pop
or
sarl
and
daa
xor
icebp
out
hlt
sbb
popa
push
xlat
and
std
cmp
insl
sbb
xor
xor
mov
lea
sub
sub
mov
jmp
pop
lods
out
ss
in
lods
xor
mov
cmpsb
je
mov
cwtl
xor
add
dec
jns
jb
bt
stc
call
add
add
pusha
pushl
test
test
add
pusha
dec
call
push
lea
jae
test
cmp
pusha
pushf
push
lea
jae
jmp
inc
mov
xor
and
mov
mov
call
jge
aaa
lahf
jae
jg
nop
sub
sti
rcrb
pop
mov
xchg
lods
in
insl
jmp
loop
punpckhbw
cwtl
jmp
rcr
movl
sub
push
add
cmpsb
dec
leave
and
mov
xor
sub
or
sbb
cs
ret
andl
ljmp
cmpsb
dec
add
pop
lcall
lods
jne
xor
mov
cmp
test
xchg
inc
daa
sbb
xchg
xchg
dec
mov
push
adc
sti
aam
aam
iret
sbb
add
mov
cmp
fsub
push
loop
mov
push
aam
push
push
xchg
cmp
insl
or
push
xchg
outsl
gs
jb
jge
mov
or
addr16
in
inc
rolb
sbb
imul
and
jecxz
loopne
cltd
mov
sub
jb
inc
sbb
ret
jmp
xchg
pop
push
cmp
aaa
xor
jl
dec
sbb
sar
bt
repnz
pusha
movl
lea
jne
ror
mov
stc
sub
sub
shl
sar
mov
call
pushf
jmp
pusha
pushf
jmp
cmc
mov
bt
movsbl
test
sub
cmp
mov
lea
cmp
mov
sub
test
jmp
lea
jae
push
stc
cmp
pusha
lea
ja
pusha
setnp
inc
seto
inc
sar
sar
or
push
xchg
ror
test
aam
and
mov
or
adc
cmp
mov
pusha
mov
lea
bsf
inc
mov
call
enter
ret
imul
dec
fwait
push
adc
rolb
aad
repz
loop
xor
mov
dec
add
xorb
push
add
and
mov
xor
pop
add
mov
xor
jge
sbb
imul
push
add
jle
testl
sbb
pop
fcoml
fs
insl
out
into
fidivs
inc
jge
pop
push
pop
fs
call
and
add
in
pushf
aas
mov
lods
test
enter
jp
outsl
xlat
bound
or
push
repz
push
cmp
pushf
test
es
fcomi
push
hlt
or
in
sbb
dec
adc
pop
out
adc
cld
jae
je
out
out
or
lret
mov
fwait
lret
xor
mov
inc
sub
sub
inc
sub
sbb
outsb
in
scas
inc
xor
iret
test
add
push
testl
fidivrs
pop
lret
dec
add
cltd
cltd
insl
pop
mov
out
int3
adc
in
and
pushf
or
pop
es
jge
stos
fidivrl
cld
shr
mov
add
decb
shll
dec
or
aad
and
dec
rol
pusha
cmc
xor
dec
jge
jns
mov
adc
or
outsl
lods
inc
add
mov
sbb
ret
sbb
sbb
push
sub
pushf
flds
or
inc
jecxz
dec
jo
bswap
inc
mov
mov
xchg
pop
imul
xor
sub
loop
outsl
cmpsb
mov
test
mov
pop
push
mov
iret
sbb
shll
and
fimull
mov
ds
imul
dec
jge
mov
imul
pop
leave
call
mov
and
fs
mov
add
mov
test
ret
ja
xor
adc
lahf
aad
mov
rclb
pusha
mov
frstor
fldt
ja
pushf
xor
xchg
lret
inc
mov
push
je
mov
cli
ljmp
sti
test
adc
add
add
pushf
pushl
pushf
add
mov
and
clc
test
mov
call
lea
call
jmp
in
int3
aaa
or
scas
jns
cmp
push
aam
arpl
aaa
int3
and
adc
outsb
loope,pn
mov
leave
and
or
stos
xor
adc
pushf
aas
cld
dec
jae
xorl
dec
es
cmc
lock
shrb
jmp
loope
xchg
emms
daa
xor
mov
outsl
leave
jnp
test
jmp
pop
sbb
add
cmc
xor
stc
iretw
push
call
lea
je
test
add
jmp
call
pushf
call
adc
fld
cmp
mov
push
ja
lahf
mov
sub
loop
lret
add
cs
insl
cmp
xlat
in
loope
cmpsb
xchg
push
cmpl
cmp
fnstcw
shlb
xchg
sub
cmp
dec
xor
les
adcb
push
daa
jnp
pushf
pusha
movl
lea
jne
seta
movzbw
pushf
movb
cwtl
jmp
mov
pushl
popl
push
pushl
pushf
pushl
ret
sub
cmpsl
fiaddl
in
push
aam
cmc
icebp
pop
outsl
mov
test
sub
xor
pop
sbb
sub
insl
cmp
and
mov
ret
pop
dec
xor
popf
jp
sub
orl
outsb
jo
shr
gs
jae
movsl
cld
inc
lods
jae
fprem1
adc
in
scas
lods
xchg
into
icebp
stos
orl
pop
push
dec
sub
or
xchg
cmp
stc
xor
jb
std
movl
call
stos
sbb
xchg
dec
cmp
test
std
ds
xor
pop
mov
movsl
cmp
stos
adc
aas
outsl
dec
mov
ljmp
mov
addr16
mov
mov
insl
xor
jmp
mov
imul
fbstp
aad
mov
jmp
stos
cmpsl
jne
mov
gs
fsubs
pop
jbe
add
movsl
arpl
scas
push
mov
scas
xchg
pop
mov
push
xor
xor
mov
push
jecxz
dec
fwait
or
mov
push
push
out
pop
or
mov
movsl
cltd
or
dec
cmpl
stc
pusha
shl
push
call
call
movl
pusha
movl
pusha
push
pushf
lea
jmp
pushf
test
call
js
ret
lock
push
xchg
or
sbb
jbe
push
js
sti
les
push
test
jecxz
sbb
ror
xor
mov
add
shl
mov
dec
mov
cmp
lret
mov
mov
jge
int3
test
rcl
sbb
inc
ret
mov
frstor
subb
scas
adc
fdivl
mov
add
hlt
mov
mov
nop
push
sub
dec
addb
mov
lahf
not
movl
pushf
lea
push
pushl
call
out
lds
sub
add
push
sahf
cltd
ljmp
sti
pop
pop
scas
pop
mov
mov
push
dec
clc
push
test
imul
mov
cmc
lods
sbbb
mov
xlat
jns
mov
scas
test
jne
dec
xor
xchg
jmp
dec
dec
mov
call
push
jmp
push
int
lea
add
in
lahf
dec
pop
push
pusha
repz
aaa
pmaxub
cmp
mov
iret
fsub
sbb
adc
mov
inc
xlat
in
daa
int3
insb
inc
fldenv
cld
push
in
adcb
inc
jbe
add
jg
clc
cmc
xor
stc
pop
sahf
bound
mov
pop
dec
jl
dec
jns
lret
pop
imul
aaa
sbb
cmp
jb
fwait
pop
push
fisubs
pop
pushf
sub
adc
out
mov
mov
lods
out
rcrl
sbb
add
inc
mov
mov
and
cmp
inc
and
dec
jne
stos
call
dec
lea
lods
pop
lods
test
push
xorb
dec
cmpsl
je
and
in
sub
dec
mov
outsl
fsubp
pop
test
aad
push
dec
mov
leave
mov
add
out
xchg
arpl
or
in
and
jl
adc
xorl
mov
into
lcall
imul
jle
notb
jne
mov
xlat
cmp
xor
loope
enter
outsb
fs
das
adc
add
jp
inc
pop
fmull
movsl
hlt
fdivr
ficoms
ja
lahf
pop
lods
loope
scas
xchg
mov
xchg
or
push
sti
out
in
inc
lahf
adc
mov
mov
rcrl
add
cmp
fcoml
test
es
aas
sub
jmp
adc
fdivr
add
stos
xlat
inc
ja
sahf
ljmp
inc
mov
test
lds
ja
loope
test
icebp
inc
pop
fwait
imul
mov
loope
and
out
icebp
cmpsb
xchg
dec
enter
pop
int3
in
out
or
mov
std
leave
cmp
stos
push
lahf
mov
add
mov
test
outsl
stos
jbe
dec
mov
inc
fwait
call
xchg
outsb
fs
jne
das
sti
loop
adc
cwtl
fisubl
mov
push
outsb
mov
dec
push
jmp
dec
mov
sbb
addr16
shl
xchg
mov
cld
insb
into
push
xor
or
fisubs
fildll
stc
push
fdivl
das
xchg
jne
and
aad
dec
loopne
mov
mov
xor
faddl
lods
xchg
fucomip
stc
add
mov
adc
int3
or
xor
mov
adc
adc
push
xor
mov
lretw
popa
scas
adc
cmp
mov
dec
and
scas
push
jmp
push
das
sbb
cld
inc
sub
push
scas
mov
stos
inc
cmpsl
fildl
nop
lds
call
jge
lahf
daa
fwait
push
ret
ja
out
leave
and
xchg
and
repz
mov
sbb
mov
js
arpl
sub
rcrb
jne
sbb
mov
dec
test
add
cmpl
je
add
pushf
lea
jmp
inc
movb
adc
lea
pusha
mov
pushl
ret
jmp
call
btr
bsr
mov
cmc
clc
mov
bt
rcl
mov
jmp
movsbl
pop
push
movsbl
jmp
fcompl
js
pop
in
fcompl
loop
add
ss
pop
scas
or
rcrl
jo
xor
lods
jbe
outsb
mov
sbb
jg
std
fwait
mov
mov
inc
gs
mov
scas
scas
mov
sub
stc
mov
aam
bound
adc
in
addb
fldt
ds
pushf
mov
pop
mov
mov
cmp
adc
push
stos
fbstp
xchg
inc
push
call
scas
cmp
das
fistpll
pop
push
add
or
pusha
mov
push
xor
sbb
arpl
fdivr
repnz
scas
repz
sbb
cltd
imul
dec
jne
fcomps
repnz
popf
dec
adc
inc
push
cmpsb
dec
mov
cmp
mov
adc
cli
cmp
dec
xchg
and
mov
lea
call
test
stc
cmp
call
call
movsbw
not
clc
mov
bt
bt
stc
and
stc
cmc
cmc
add
pushf
pusha
mov
lea
jmp
xchg
push
ds
imul
in
cmp
outsl
mov
test
mov
in
push
iret
push
test
cmp
push
jecxz
xchg
inc
fwait
add
pop
loopne
cmp
xor
pop
push
outsl
bswap
lea
movb
call
push
movl
jmp
lea
je
pushf
push
pusha
mov
lea
jmp
add
clc
mov
bt
jmp
mull
ljmp
jecxz
aam
pop
fdiv
les
sahf
sbb
imul
jb
pusha
mov
adc
leave
xchg
movsl
jno
outsb
fstpt
xchg
push
ja
mov
fsubrp
imul
mov
js
xor
aas
jbe
push
add
int3
jp
inc
jmp
pop
mov
or
push
adc
mov
ja
test
aad
adc
repz
xor
in
xor
add
negl
pushf
xor
jbe
mov
insb
aas
sbb
imul
in
int3
sbb
adc
shll
outsb
sub
mov
insl
xor
sbb
outsb
aam
aam
out
in
and
jb
out
scas
cld
mov
in
jae
xlat
mov
shl
fidivs
sub
xchg
sub
jbe
pop
repnz
js
clc
lret
inc
scas
xchg
inc
jmp
xor
jbe
fsubs
imul
test
sub
push
jp
ds
xor
add
pop
adc
xchg
scas
sbb
leave
nop
cltd
arpl
fstp
repnz
push
mov
cmp
iret
fstps
cmp
js
xor
or
mov
lds
pop
lcall
push
push
insl
jb
jecxz
js
sbb
jne
mov
outsl
lret
push
xor
push
inc
xchg
pop
add
dec
lahf
inc
lcall
pushf
andl
jbe
jge
mov
call
dec
jmp
xor
inc
pop
clc
cmp
movb
movb
jmp
arpl
cmp
inc
test
jecxz
sub
call
int3
jmp
jecxz
insl
cmp
cmp
cmp
mov
xlat
popf
ficoml
decb
loopnew
mov
mov
cmp
insb
cmpsl
loope
xchg
mov
xchg
sbb
fists
xchg
sub
xchg
dec
adc
xor
sti
fs
jns
push
lds
and
jns
movsl
ret
dec
lds
hlt
imul
jbe
sbb
and
decb
or
cmpsl
out
cld
lcall
test
adc
adc
ret
push
dec
repz
fsubp
js
je
push
loope
xor
xor
sub
test
dec
or
add
cmp
fwait
mulb
jmp
insb
push
jnp
xor
js
xchg
or
or
xor
movsb
insb
out
clc
fsts
push
hlt
aas
outsl
dec
fdivl
ljmp
das
ss
fdivs
dec
mov
mov
inc
mov
inc
call
jnp
das
shrl
cltd
cld
gs
xor
dec
cwtl
mov
arpl
mov
bound
mov
add
cmc
jge
jg
cli
les
imul
or
js
xchg
insb
add
ficoms
push
jbe
shlb
dec
mov
jp
mov
shrb
movsb
fs
in
ret
xchg
cmpsl
sub
es
out
sti
push
fldlg2
xor
stos
sbbl
ja
mov
inc
push
jp
es
inc
lea
pop
aaa
mov
push
sbb
xor
or
stos
clc
mov
iret
xor
mov
insl
xchg
test
push
mov
pop
dec
cmp
inc
xor
dec
icebp
aaa
lahf
pusha
sub
add
std
and
xchg
fcoml
shll
jnp
mov
pop
mov
mov
inc
xchg
adc
xchg
fwait
push
dec
imul
mov
dec
call
jecxz
fnstcw
cmp
xchg
enter
xchg
jmp
mov
push
in
js
gs
jns
pushf
push
repnz
imul
call
not
sbb
add
clc
mov
bt
clc
test
push
call
cmc
and
js
out
or
mov
xchg
dec
leave
jnp
ficoml
dec
daa
push
xlat
jg
out
adc
xchg
int
mov
mov
jmp
aas
iret
repnz
sbb
and
xor
pusha
lret
les
cwtl
out
xchg
pop
rcrb
cltd
lcall
int3
shl
cld
jl
jne
mov
cwtl
pusha
js
add
into
jno
daa
push
notb
mov
das
dec
mov
fnsave
lea
push
or
or
bt
sub
btc
add
add
jmp
call
call
jmp
rclb
adc
cmp
xlat
mov
ljmp
sub
jno
pop
in
or
dec
fistpll
das
pop
sahf
fwait
jo
sbb
insb
out
cwtl
xchg
cmp
fldcw
ffreep
sub
roll
in
xor
xor
mov
mov
push
pop
imul
mov
xor
fiaddl
out
in
pop
clc
nop
or
xchg
inc
sbb
out
pop
push
and
hlt
jg
adc
xor
pop
cmp
cltd
inc
mov
mov
add
cmp
sbb
enter
sub
xor
std
ret
lods
or
mov
push
bound
push
cmc
insl
pushf
push
movl
jmp
pushf
jmp
pusha
movb
pushf
lea
jae
mov
btr
bswap
ror
mov
sar
bswap
mov
clc
bswap
mov
cmp
test
bt
pusha
sub
bt
repnz
movb
call
pusha
movl
mov
push
mov
lea
jmp
repz
pop
loopne
add
data16
fadd
and
sbb
ja
das
sbb
fnstenv
mov
iret
mov
push
sub
adc
adc
and
cs
sub
rol
xor
sarb
or
mov
push
jmp
aad
xor
mov
xor
rorl
push
sub
or
into
movzbw
mov
jmp
out
hlt
call
aad
xlat
cmc
test
mov
xchg
jl
adc
cli
scas
inc
push
popf
icebp
mov
mov
js
pop
mov
scas
sub
scas
xchg
dec
sahf
cmc
aad
mov
mov
jns
jmp
repnz
jno
mov
dec
faddp
pusha
cmp
cwtl
cmp
adc
pop
ljmp
mov
push
imulb
mov
ljmp
mov
ljmp
fistps
enter
repz
lahf
xor
outsl
push
fwait
cmp
out
push
and
dec
out
aaa
mov
lds
dec
and
jns
jns
push
mov
das
out
sub
add
adc
movhps
dec
xlat
mov
lds
mov
mov
or
jecxz
insl
sti
jmp
lcall
lea
psubsb
add
mov
div
cmp
leave
mov
jnp
inc
into
and
lods
mov
dec
nop
aaa
sbb
call
call
push
lea
ja
shl
shl
sub
neg
add
ror
mov
setb
mov
call
or
push
stos
xchg
xor
or
out
stos
rcrl
mov
xor
lahf
pushf
dec
push
loope
repnz
in
arpl
loopne
bnd
push
sahf
sbb
test
mov
iret
xchg
out
mov
mov
movsb
adc
dec
xor
xchg
sub
sbb
scas
fstps
ss
mov
outsl
sarl
repz
mov
push
dec
fs
xor
in
jb
or
pusha
lea
je
stc
push
cmp
call
movl
call
inc
mov
stc
call
lea
ja
jnp
push
lea
jb
cmp
cmpb
pusha
call
push
movl
push
pushf
call
call
jmp
aaa
push
ljmp
pop
mov
mov
mov
in
bound
mov
mov
pop
dec
jecxz
shrl
inc
ret
sub
jmp
rorl
stos
add
pop
or
jo
ret
add
cltd
js
inc
hlt
add
sub
jb
outsb
fidivs
cltd
mov
mov
leave
mov
or
fisubl
jl
pop
lcall
dec
andb
insb
mov
or
js
mov
inc
sbbb
bound
test
cwtl
lahf
daa
sbb
xchg
pop
xchg
xor
andl
imul
inc
adc
jecxz
scas
add
push
shl
fsubl
sub
pusha
push
leave
stos
inc
sub
lock
enter
jbe
dec
ljmp
sarl
pop
filds
mov
xchg
push
idivb
push
adc
nop
cli
jle
leave
inc
xor
test
adc
push
inc
sbb
adc
dec
mov
inc
push
movntq
out
mov
pop
mov
int
jmp
adc
loop
jbe
ljmp
jmp
mov
inc
gs
mov
sbb
xor
data16
sti
fs
inc
sbb
mov
test
addr16
cmp
lahf
push
mov
mov
test
jb
xlat
dec
and
or
cltd
in
outsl
jae
jp
push
nop
pop
and
daa
pusha
lods
mov
push
test
jae
outsl
icebp
pop
push
xor
add
shl
btc
cmp
ror
mov
clc
cmc
cmpb
pushf
jmp
push
lea
jae
pushf
call
bts
bswap
xor
bswap
push
sar
mov
stc
sub
pusha
add
neg
jmp
lods
cli
push
lahf
sub
sub
push
sbb
cs
xchg
test
sti
push
lea
fidivrs
xor
test
push
popa
sahf
pop
xor
push
sub
push
rcr
sbb
sub
fcomps
jle
clc
daa
pop
ret
pop
pop
mov
mov
out
xor
sub
neg
xor
adc
cltd
das
pop
or
add
adc
push
leave
inc
adc
jae
les
iret
xchg
repz
dec
xchg
sahf
shrl
push
test
rorb
adc
insb
leave
inc
adc
lcall
cmp
push
push
adc
fsubr
inc
test
mov
mov
in
adc
enter
adc
inc
or
stos
adc
or
xchg
jp
add
xor
rcrb
cmp
clc
test
call
and
cmp
jmp
jmp
add
xor
loope
add
jge
out
xlat
pusha
jge
int3
repnz
adc
rol
cmp
dec
nop
test
iret
xlat
ficompl
jg
dec
add
das
mov
and
daa
int
xchg
aam
or
mov
fsub
push
lea
cli
dec
in
add
cmp
dec
xchg
lods
testl
cmc
bound
sahf
cmp
sub
les
mov
fisttps
test
push
add
or
adc
mov
mov
mov
fidivrl
pop
cmpsl
pop
sbb
ja
pop
dec
xchg
xchg
icebp
add
ret
pop
ret
xor
mov
shrl
push
mov
movsl
dec
pop
ret
ret
lods
add
lods
lea
stos
xor
imul
push
lea
jae
stc
pusha
mov
and
lea
bsr
shl
mov
sub
rol
shr
cmc
mov
cmc
pushl
test
sub
cmp
clc
mov
repnz
pushf
pushf
mov
lea
jne
movsbw
btc
test
jmp
lret
insb
repnz
cli
bound
insb
inc
shrl
or
cli
repnz
insb
pop
inc
insb
or
push
leave
inc
dec
insb
and
insb
leave
sub
dec
mov
push
insb
or
cli
adc
pop
fisubl
mov
clc
add
bt
cmc
movzwl
bts
bt
stc
test
mov
pusha
push
pushl
add
pushl
cmp
mov
pushf
bt
movl
test
call
or
mov
cmp
push
ds
cmpb
negb
jne
xor
cmpsb
cmp
nop
cmpsb
add
xlat
lods
std
push
pop
test
jge
mov
int3
loopne
bound
das
clc
cmpsb
push
add
or
xor
and
push
xor
cltd
nop
test
cwtl
add
inc
jnp
ret
icebp
sbb
dec
cmpsl
jbe
mov
sub
arpl
rcrb
mov
out
jmp
mov
mov
shll
pushf
adc
daa
in
mov
fstps
rcrb
xor
jl
push
shr
mov
in
cs
cmpsl
push
loop
add
push
cmp
sbb
sbb
add
lock
addr16
mov
xchg
aaa
data16
and
mov
or
lret
sahf
push
jmp
xchg
inc
or
jae
addr16
push
clc
pop
pop
lods
outsb
or
in
pop
cmp
testl
fcmove
sbb
sbb
dec
mov
adc
repnz
lcall
or
movsl
data16
int3
int3
je
movsl
hlt
push
xor
dec
test
xchg
data16
mov
jnp
push
arpl
or
fwait
stos
clc
out
int3
add
pop
mov
jmp
pop
push
inc
cltd
dec
jl
push
xor
adc
or
mov
jns
gs
adc
mov
cmp
sub
add
mov
rclb
jno
push
and
jmp
js
jno
sbb
orl
fst
mov
mov
mov
jl
dec
push
movsl
pushf
jns
hlt
out
xchg
mov
sbb
stc
pop
jno
add
push
mov
or
je
test
gs
adc
adc
fcom
fnstcw
std
out
adc
aam
ficoms
jmp
xor
lods
loop
inc
sbb
or
inc
scas
push
push
jl,pn
pop
mov
mov
sub
es
lret
nop
mov
ljmp
test
xlat
movsl
jno
stos
rcl
std
js
repnz
mov
dec
shlb
ret
pop
xchg
js
fwait
push
or
pop
clc
and
in
mov
test
mov
xchg
pop
xor
dec
sub
cs
jg
add
aad
xor
adc
clc
neg
cmc
mov
rol
pushl
push
jmp
pushl
lea
ja
cmc
stc
imul
test
add
push
pushf
pushf
mov
lea
jmp
add
cmp
clc
push
call
test
add
stc
bt
cmp
lea
jns
lea
movzbw
movzbl
lea
pop
pushf
jmp
cmp
xchg
clc
adc
cmp
inc
push
push
inc
test
imul
jmp
xchg
loope
pop
fists
je
dec
sbb
xlat
xchg
je
cli
inc
sbbb
lods
mov
sub
aam
aad
lret
pop
add
adc
pop
jb
popf
lahf
xchg
jl
cmpsl
pop
in
dec
cltd
or
rolb
mov
xchg
test
pop
fwait
dec
stc
aad
push
mov
cmp
lret
lcall
and
or
jae
inc
cli
ljmp
and
scas
sbb
gs
xchg
push
mov
jnp
sub
out
sub
in
leave
inc
mov
rcrb
inc
xor
sahf
cmc
xchg
pop
shl
jle
xlat
cmp
lcall
and
mov
mov
das
adc
cmc
xor
decl
xchg
das
int3
lods
leave
sub
xlat
or
repz
mov
ret
leave
jae
push
aaa
xor
loopne
mov
push
cs
fcmovu
jg
xor
pop
popa
or
add
mov
into
add
adc
repnz
sub
mov
push
mov
movsb
sbb
push
xor
clc
stos
test
outsl
lret
or
ja
add
icebp
test
push
sub
ljmp
sub
and
push
push
scas
push
xor
aad
jmp
pop
push
and
push
mov
mov
sub
inc
ljmp
xor
adc
mov
and
adc
sub
cmp
fnstenv
dec
fwait
xchg
adc
cmpb
pushl
pushl
pushl
lea
jne
dec
shr
xor
daa
mov
shl
add
rcl
shr
sub
mov
cmc
cmp
cmp
test
test
pusha
pusha
lea
jp
push
lea
je
test
jmp
push
movb
call
xor
imul
sub
sub
push
mov
lods
daa
sub
cmp
ret
mov
adc
xchg
sahf
call
aaa
popf
ja
mov
jnp
shrb
and
mov
iret
pop
xor
xchg
lret
inc
and
jno
mov
mov
popa
icebp
dec
pop
lds
stos
shll
lds
pop
xor
mov
stos
cld
sbb
fnstsw
call
xchg
ljmp
js
lock
mov
xcrypt-cfb
cmpsl
cmpsb
sbb
jae
ja
or
mov
mov
adc
cli
mov
andb
dec
sti
hlt
adc
xor
jg
int3
mov
call
test
add
test
movw
pusha
call
mov
pushf
setle
call
pushf
pusha
lea
jne
or
call
test
mov
push
pushl
lea
je
test
pushf
jmp
lea
je
push
clc
pusha
sub
cmc
cmp
call
jmp
pop
jp
int
clc
cmp
jae
mov
rcrl
inc
pop
jp
fstps
mov
xorb
sbb
mov
add
inc
push
add
add
add
add
add
push
push
add
sbb
popf
push
adc
or
cmpsl
adc
add
add
movb
push
movl
call
cli
fwait
aaa
pop
enter
inc
xchg
fiaddl
xchg
out
cltd
dec
aad
inc
shll
xor
sti
roll
push
mov
mov
fwait
mov
sub
mov
jecxz
out
xor
sahf
inc
decb
xor
outsl
inc
fwait
sub
out
andb
add
sarl
push
outsb
repz
mov
jge
js
dec
adc
mov
mov
sbb
ja
and
push
icebp
mov
aam
clc
mov
xor
cmp
lea
je
pusha
mov
pushl
lea
jmp
test
cmp
call
mov
lea
bswap
setg
mov
pusha
pushf
push
mov
jmp
adc
iret
and
jb
xor
fwait
imul
stos
pop
or
jae
stos
loopne
je
insb
mov
xor
iret
fwait
mov
xchg
inc
mov
out
cmp
add
test
loope
lcall
push
or
mov
push
cmp
adc
addb
jle
outsb
mov
push
scas
or
push
in
imul
test
stos
mov
cmp
push
sbb
cmp
iret
sub
mov
inc
mov
jne
gs
push
and
xlat
cli
sti
xor
pusha
sbb
in
jmp
inc
incl
xchg
xchg
mov
jne
loop
ljmp
mov
add
push
dec
imul
push
pop
ds
sub
adc
sub
fsubl
fldl
cli
popf
mov
jae
enter
push
or
insl
shll
adc
push
jmp
sub
or
pop
int3
dec
mov
stc
mov
jnp
pop
ror
or
push
fsubrs
xchg
dec
jae
dec
jmp
push
fidivs
mov
mov
lds
outsl
lock
push
pop
hlt
mov
cwtl
mov
mov
xchg
push
mov
lods
xor
mov
pmaddwd
add
cmp
or
ja
mov
and
insl
xor
addl
test
jmp
test
repnz
pusha
call
push
setne
mov
lea
pushf
push
lea
call
call
pushf
movl
call
sub
pop
pop
xchg
mov
subb
es
pop
and
lock
xor
xor
xchg
sti
rol
arpl
mov
lods
not
sub
jp
das
cmpsb
repz
mov
push
and
push
mov
inc
insb
pop
xchg
outsl
inc
call
dec
mov
cs
push
dec
dec
lret
sub
cmc
push
or
lock
cltd
cmp
jbe
das
in
test
repnz
pushl
mov
inc
sbb
add
jnp
aaa
mov
addr16
pop
repnz
scas
mov
mov
loopne
lds
scas
xchg
pusha
dec
movsb
cmp
popf
lds
repnz
add
xor
notb
xor
insl
lret
dec
fsts
or
pop
inc
jae
daa
inc
mov
mov
bound
arpl
mov
sbb
popf
rcrl
and
mov
mov
dec
shrl
push
outsl
loopne
pop
gs
fmull
popa
inc
push
dec
push
ja
add
cltd
mov
inc
push
fisubs
jne
insb
gs
mov
jg
aas
cmc
cmpsl
xorl
clc
push
lds
sti
xchg
push
enter
imul
mov
std
lods
aas
xchg
outsb
jnp
dec
xchg
out
lods
xor
rorb
ss
aad
insl
es
mov
mov
and
add
and
pop
dec
xor
xor
ret
xor
test
adc
inc
imul
bnd
push
lock
fwait
pop
mov
dec
xor
adc
js
mov
dec
out
adc
sub
lods
inc
fwait
xchg
xchg
add
adc
add
aaa
dec
test
out
call
jmp
sti
jnp
pop
add
into
cmp
fldenv
mov
inc
pop
lahf
stc
out
push
push
lds
xor
lret
out
out
push
mov
jp
loope
sub
mov
repnz
fldenv
mov
inc
cmp
out
cmp
loope
stos
dec
mov
push
adc
mov
mov
out
mov
adc
fxch
inc
pop
xchg
cli
mov
loop
mov
dec
sub
rorl
arpl
push
xor
movsb
and
push
jns,pn
call
and
mov
pop
cld
out
in
jns
iret
xlat
mov
mov
inc
sbb
mov
mov
fs
daa
pop
lahf
js
inc
inc
clc
dec
loopne
test
xchg
aad
inc
xchg
mov
xor
sbb
jo
pushl
inc
lea
inc
xchg
or
aaa
inc
rcl
mov
and
sbb
mov
pushf
bt
pusha
pusha
xchg
sbb
dec
call
lea
jae
pushf
jmp
bswap
push
pusha
mov
pushf
mov
pusha
seto
pushf
lods
push
call
test
pusha
lea
je
test
xor
mov
or
shl
bswap
add
clc
pusha
or
inc
mov
jmp
jmp
add
dec
outsl
popa
fs
imul
add
clc
or
scas
mov
xchg
lea
mov
cmp
cmp
test
xchg
in
mov
mov
repnz
xchg
jae
inc
lcall
sub
xrelease
add
lods
jb
cld
test
movsb
std
mov
pushf
jne
pop
lret
xor
bound
mov
ret
or
sbb
dec
mov
mov
movb
mov
push
mov
pushf
mov
pushl
ret
adc
mov
cmc
pusha
pusha
call
push
pusha
pusha
movl
pushf
movl
push
movw
lea
jmp
jmp
imul
gs
xor
cs
insb
add
aam
call
inc
into
mov
xchg
inc
out
mov
sub
inc
or
lea
xchg
mov
adc
cmp
jmp
jmp
das
inc
lods
imul
jne
jg
jl
mov
or
lcall
dec
sbb
outsl
push
push
sub
fldenv
andb
or
jp
lock
pop
adc
mov
cmc
sbb
dec
std
and
push
pop
cmp
cmp
and
xor
sbb
mov
lret
mov
int
jo
out
xchg
jmp
lds
pushf
je
lock
jge
sub
dec
movsl
aas
xor
and
dec
jl
xchg
pushf
pushf
jmp
pusha
pushf
lea
jb
jmp
dec
sub
dec
mov
lds
addr16
and
adc
inc
shrl
sarl
repnz
jne
iret
xlat
test
je
cmp
mov
cmp
adc
int
aaa
les
sbb
and
xchg
movsb
sbb
addr16
cmpsw
mov
dec
movsl
mov
inc
int3
pop
scas
fisubrl
data16
in
ds
push
jbe
or
sub
clc
faddl
out
or
sahf
sbb
pop
lds
sbb
push
pushf
fmul
cltd
fs
push
xor
sub
jb
ljmp
add
adc
scas
test
jge
sbb
pop
in
xchg
out
dec
pushf
test
es
xlat
repnz
cld
fwait
lahf
dec
mov
mov
fs
popa
xor
popa
fldcw
arpl
add
mov
ljmp
cld
stos
mov
aam
pop
xchg
ljmp
push
or
fdivrl
push
pop
pushl
aaa
sub
push
pop
mov
leave
fs
xchg
jb
add
into
mov
sti
push
xor
fildll
icebp
add
jp
lcall
push
cli
subb
mov
lds
xor
or
pop
gs
loop
rcr
lods
divb
sbb
icebp
add
pusha
icebp
pop
mov
scas
push
pop
cmpsb
mov
add
xchg
mov
insl
xchg
out
adc
outsb
ret
lods
std
adc
shl
leave
aad
pop
xor
lds
test
aam
mov
sub
jb
aas
aam
shrl
dec
not
not
not
setl
jmp
pusha
mov
fnstcw
jnp
lods
int3
sbb
pop
adc
jbe
aas
sub
pop
mov
adc
push
es
outsl
gs
mov
inc
mov
xor
es
inc
cltd
ret
cmpsl
jnp
fstpl
shrb
sahf
dec
push
xchg
sub
mov
rolb
movl
dec
pop
xor
mov
jg
pop
dec
test
add
cmp
push
outsl
into
pushf
pop
es
lods
xchg
js
shlb
fldenv
xor
mov
lds
jno
in
cmp
mov
mov
push
test
add
jg
scas
stc
stos
orb
cwtl
out
imul
jge
push
mov
loop
imul
pop
mov
cmp
hlt
xchg
in
repnz
mov
rcrb
cmp
jns
sub
test
mov
xor
cmc
pop
ds
mov
jle
pop
lods
je
in
outsb
xchg
mov
inc
xor
add
xchg
jg
mov
test
into
push
ret
rolb
add
popf
iret
lea
stc
gs
std
lods
pop
out
mov
add
cmp
ja
fisubrs
or
add
imul
cmp
loope
push
iret
mov
jmp
mov
mov
push
or
dec
cmpsl
std
cmpsb
mov
mov
addb
mov
test
mov
clc
inc
xchg
out
xchg
sahf
xor
test
and
push
xchg
js
add
fistps
push
clc
call
sbb
movsl
push
idivb
and
mov
cmp
pop
jb
jne
xor
adc
or
lods
mov
jl
pop
inc
adc
je
and
lret
jns
js
cmpb
add
jbe
sbb
arpl
cmp
cmp
mov
gs
and
mov
sbb
mov
rcrb
xor
mov
jecxz
inc
sti
fdivs
dec
mov
dec
test
clc
in
inc
push
jo
dec
shrb
in
cmp
shr
inc
enter
inc
sbb
push
cmp
mov
xchg
or
mov
jp
dec
xor
mov
xor
jbe
push
mov
es
shll
fs
lock
sahf
test
cmp
sti
add
pop
adc
jl
cmp
pop
dec
xor
repnz
out
hlt
rep
xor
addb
pop
fadds
push
and
iret
sub
insb
and
mov
xor
dec
adc
pushl
jmp
call
popl
sub
inc
push
push
and
lret
mov
jl
in
inc
lods
push
pop
pop
into
mov
movsl
add
inc
dec
sub
xor
jo
jo
je
loope
cmp
adc
mov
fdivl
push
inc
movsb
scas
push
scas
mov
es
fwait
adc
push
pop
push
mov
cmpsl
rorb
in
dec
insb
ja
sub
sbb
ljmp
xchg
pop
xchg
repz
jmp
xchg
jbe
loop
xor
das
and
cmc
cmp
push
call
or
cmp
push
push
sbb
and
inc
dec
out
ds
mov
pop
stc
scas
sub
nop
iret
xlat
scas
push
mov
adc
lods
mov
push
das
mov
test
jbe
xchg
dec
imul
pop
sbb
cli
pop
push
stos
sub
aas
push
call
pushl
popl
pusha
cmp
movl
pusha
jmp
add
add
jmp
jmp
call
call
mov
pushl
push
movw
pushl
ret
jne
gs
xor
fs
insb
add
and
cwtl
lea
lea
push
jmp
call
mov
mov
inc
cmpsb
outsb
mov
outsb
add
gs
jno
jmp
push
or
int3
jle
sbb
shrl
xchg
ja
cltd
icebp
clc
xor
xor
mov
jl
ss
iret
cmpsb
pushf
xor
jp
adc
cmp
mov
fwait
cmp
filds
mov
fsubl
mov
and
es
les
das
test
into
cmp
push
push
or
mov
mov
insb
cmp
push
xchg
add
push
mov
adc
fimull
mov
mov
pop
fdivl
sub
add
imul
aaa
inc
ret
lahf
xor
int3
xlat
subl
sahf
xor
stos
jp
push
cmpsb
inc
add
enter
mov
aaa
mov
sbb
mov
lods
fadds
dec
pop
push
cwtl
call
scas
lds
fdivrs
or
or
or
mov
push
mov
mov
xlat
xor
sub
push
aad
push
stos
in
pusha
mov
shll
lret
mov
dec
push
or
mov
xchg
movsb
push
hlt
scas
or
add
icebp
repz
push
mov
fadds
mov
insb
into
xor
repz
addl
mov
shll
dec
mov
clc
push
cmp
mov
insl
add
stc
mov
dec
lods
std
cmp
mov
pop
add
bsr
adc
mov
dec
bt
mov
pushf
pushl
cmp
push
repnz
pushf
lea
jne
bswap
movb
call
not
adc
and
xor
mov
ror
pusha
mov
inc
dec
inc
rol
xor
inc
push
jmp
lea
jae
xchg
mov
xchg
jmp
add
dec
gs
popa
addr16
outsl
js
add
repnz
rcr
push
shrd
bts
test
add
mov
stc
rol
push
mov
test
push
xchg
cmp
bswap
push
xchg
push
cmp
push
inc
rcl
pushf
sub
mov
shld
not
mov
rol
inc
movb
mov
pushf
stc
test
or
pusha
lea
je
call
pusha
movl
pushl
pushl
mov
lea
jmp
movl
pushf
movl
movw
pushf
mov
movb
lea
jmp
xchg
xchg
jo
sub
pushf
xchg
xchg
repz
sbbl
cmc
shll
xchg
loopne
push
scas
dec
ret
mov
cwtl
push
and
scas
xchg
push
inc
ja
sahf
ds
imul
repz
cmp
rcll
out
aaa
inc
sbb
scas
insl
cwtl
out
lret
mov
movsl
leave
push
ret
pop
dec
sub
push
shrb
adc
rorl
arpl
cld
adc
movsl
mov
push
rcr
icebp
arpl
push
ja
dec
lods
hlt
scas
fcmovnu
or
jg
js
mov
fiadds
mov
jmp
fidivl
cli
lea
xchg
mov
imul
mov
or
pop
rcrb
data16
and
xlat
and
into
adc
cs
jne
leave
inc
mov
aad
cltd
repz
dec
outsb
mov
mov
lret
cmp
popf
jle
lea
cmpsb
or
sbb
cltd
outsb
adc
test
push
sub
hlt
ljmp
mov
clc
add
repnz
insl
rclb
pop
xchg
fdivs
dec
scas
xchg
int3
xor
lea
ja
not
push
sub
movzbw
rcr
jmp
cld
jnp
sub
or
push
and
imul
push
inc
inc
cmp
test
pop
cmc
movsl
icebp
push
push
mov
add
lret
mov
sub
sbb
popa
and
shr
out
iret
es
cwtl
or
add
dec
sbb
dec
scas
lods
mov
test
cmc
cmp
push
jmp
lea
not
movzbl
pop
push
pushl
ret
dec
into
lret
stos
cmp
pop
leave
mov
out
notl
roll
lock
insl
cmp
xor
jl
xor
sbb
subb
mov
pop
pop
lcall
jge
xor
int
pop
mov
mov
dec
xor
mov
je
add
leave
push
call
add
cli
jg
out
clc
ja
jg
scas
jbe
les
shrl
jbe
jmp
mov
mov
pop
add
jecxz
jbe
out
lea
std
xchg
xchg
in
das
sbb
and
sbb
cwtl
jae
push
lea
sub
gs
adc
pop
cmp
inc
xchg
out
leave
push
jbe
sbb
sbb
repnz
xor
xchg
jl
mov
and
icebp
stos
or
movsb
adc
movsl
xor
adc
cmp
out
cmp
hlt
pop
out
or
es
rcl
gs
mov
push
adc
jg
addr16
jb
test
sub
lret
jge
fists
cld
push
out
scas
andb
das
jbe
push
mov
mov
mov
mov
fsubrs
jns
mov
mov
add
aas
mov
push
lock
mov
outsl
loopne
movsl
pushf
test
movsl
mov
xlat
insl
mov
test
dec
iret
jge
loopne
mov
int
dec
inc
dec
add
push
shlb
outsl
ss
dec
cmp
dec
mov
xor
pop
ja
pushf
lea
je
pusha
cmp
jmp
not
bswap
movzbw
mov
pushf
pusha
lea
jmp
movl
push
pushf
lea
jmp
loop
xor
icebp
enter
sub
sarb
mov
push
fwait
ljmp
xchg
cmp
ja
mov
iret
xlat
mov
daa
fnstsw
or
jb
out
outsl
mov
imul
dec
lahf
bound
lret
negb
xchg
dec
mov
outsb
cmpsb
jmp
push
cmp
push
jmp
pusha
lea
je
pusha
bt
mov
cmp
lea
pusha
push
pushl
ret
movl
pushf
pushl
pusha
pushf
lea
jmp
pushf
movl
pushf
mov
push
lea
jmp
pushf
movl
mov
pusha
pushf
call
shl
pusha
pushf
mov
lea
je
jmp
xchg
adc
lds
and
mov
cmp
sarl
pop
mov
into
cltd
add
jge
rol
popa
mov
mov
je
nop
mov
sbb
sbb
xor
cmpsl
jle
adc
test
out
add
sti
aam
aad
lahf
xchg
nop
xchg
cmp
mov
dec
cmc
lret
fnstsw
mov
cmpb
jl
scas
or
call
gs
subb
jne
cwtl
fidivl
popa
cwtl
mov
cmpsl
sbb
mov
and
gs
ficompl
adc
mov
inc
inc
sub
jmp
stos
cmpsl
sbb
loope
cmp
add
push
dec
push
pop
popf
mov
lea
in
push
lcall
add
xchg
lcall
test
repnz
jecxz
adc
je
sbb
sub
and
xor
bound
add
or
jg
cltd
jge
mov
mov
xchg
pop
movb
cwtl
lea
call
movl
pushf
pushl
mov
lea
jmp
cwtl
mov
pusha
jmp
js
mov
daa
mov
or
fsubs
fldt
movsl
lock
lret
movsl
and
cmpsl
mul
insb
adc
and
mov
xlat
shlb
aas
pushf
push
aas
push
int3
lcall
aas
dec
add
ljmp
shrb
xor
add
adc
adc
mov
jg
std
sti
loope
out
mov
or
fs
push
adc
cmp
add
jmp
xor
rcr
push
push
shll
sub
cmp
xchg
cmp
xor
xchg
insl
sbb
cmc
je
mov
loop
lcall
aad
cld
aam
cmc
xchg
pop
sub
push
scas
mov
lahf
adc
and
add
mov
adc
pop
shrl
lock
cmpsl
test
imul
test
neg
or
fwait
ret
pop
popf
jo
xor
lahf
shrb
mov
jmp
mov
lods
dec
jnp
testl
push
or
dec
and
lods
sbb
dec
or
jg
jecxz
mov
or
nop
mov
sbb
push
inc
cmp
push
lahf
je
xor
xor
sbb
fs
jne
jle
pushf
pushf
pusha
stos
pushl
mov
mov
lea
jmp
movb
pushl
popl
pushl
pushl
pusha
movb
pushl
ret
insl
jg
xchg
dec
imul
add
sbb
stos
xchg
pop
push
out
mov
sti
rcrl
pop
ds
xlat
shll
xchg
cli
bound
dec
mov
push
adc
mov
or
push
stos
stc
mov
push
adc
cmp
sub
stc
lea
pop
andb
sub
lcall
xchg
adc
cs
cs
jb
das
push
test
in
push
inc
sbb
xor
rep
mov
jmp
movl
mov
movw
pusha
lea
jmp
sub
or
cmp
pop
repz
fsubrs
cmpsb
lods
int3
sbb
cmp
or
xchg
iret
fdivl
arpl
enter
jecxz
mov
mov
repnz
ret
loope
mov
clc
packsswb
fwait
push
stc
in
xchg
cmp
xor
sub
das
mov
mov
movb
lea
jmp
jmp
xchg
xlat
fists
xchg
cmp
push
fists
cmc
lods
fdivrs
outsl
insl
aaa
add
xor
icebp
sub
in
sub
subb
mov
xchg
cld
rep
rcl
xchg
test
mov
mov
insl
and
sbb
sub
mov
mov
imul
pushf
mov
cld
push
mov
sub
mov
repnz
fstpl
call
jno
jnp
xchg
sbb
dec
inc
adc
loopne
lahf
adc
sahf
std
daa
popf
pop
xor
push
jl
mov
pop
inc
jge
in
clc
xor
pop
scas
jnp
xor
loop
mov
dec
daa
popa
or
imul
mov
cmpb
xor
mov
xor
mov
lds
xchg
out
cltd
lds
lock
xor
mov
imul
loope
and
add
lcall
sbb
cmp
ret
test
mov
test
cmpsl
mov
mov
mov
mov
fstps
mov
push
xor
push
std
arpl
leave
imul
mov
sub
jg
jne
mov
pusha
out
mov
add
icebp
shrb
or
inc
pushf
xchg
leave
mov
inc
sahf
ljmp
lret
mov
shrl
cmp
sub
dec
mov
mov
ljmp
or
nop
push
jle
pop
and
xchg
aas
jno
inc
jae
xor
and
or
hlt
or
cmp
push
or
sub
jg
loopne
ja
loope
mov
mov
dec
mov
sub
fcoml
dec
mov
cmp
dec
sbb
and
lds
mov
or
lods
and
cwtl
movsb
and
cwtl
add
xor
lods
mov
push
not
xor
pusha
push
pushf
xchg
cbtw
add
adc
sbb
mov
lods
mov
pusha
in
shll
shlb
push
xchg
jno
sbb
popa
das
sti
je
mov
adc
jnp
or
pop
sub
stos
decl
loope
inc
shrb
fdivl
push
jl
ret
mov
add
out
dec
mov
cmp
cmc
pusha
mov
push
movl
call
movl
lea
ja
dec
setbe
inc
jmp
not
call
out
jbe
mov
fisubl
inc
test
shrl
pop
mov
pop
push
outsb
dec
lock
sbb
jo
icebp
sub
lods
inc
mov
cmp
or
lods
dec
pop
cmp
mov
mov
or
dec
push
jmp
push
add
mov
daa
test
adc
xor
insl
xor
popa
fcmovnu
cmp
in
and
add
pop
mov
jle
ljmp
and
cmp
test
xlat
mov
notl
cwtl
jne
mov
and
fsubp
and
stos
push
push
clc
push
iret
sbb
bnd
cmpsb
call
xor
add
and
dec
mov
lock
add
fs
inc
and
lahf
movl
movzbw
pushf
lea
jmp
pushf
push
call
sbb
repz
dec
add
imul
ds
pop
not
pop
rclb
test
cmp
pop
adc
add
stc
dec
pushf
add
add
test
repnz
aad
in
push
mov
xchg
lea
data16
jno
jo
cmp
or
aam
xor
xor
fisubrs
xchg
and
xor
emms
dec
movsb
cltd
add
mov
dec
mov
fsubrs
push
mov
jo
mov
xchg
inc
xor
cmc
repz
shlb
inc
mov
scas
xor
cmp
mov
add
adc
aam
push
jno
push
into
push
mov
fs
jecxz
xor
add
sbb
dec
mov
popa
mov
rcrb
not
add
mov
jmp
pushf
jmp
dec
int
out
jmp
clc
sbb
arpl
fdivp
mov
lods
mov
inc
orl
jmp
aas
iret
xlat
cmpsl
push
in
or
jns
insb
sbb
dec
test
add
int3
call
faddl
mov
movsb
sbb
divl
dec
mov
and
clc
push
lock
mov
aam
scas
lea
or
cwtl
in
insl
and
sub
inc
mov
pop
inc
mov
add
jecxz
imul
pop
jmp
xlat
add
xchg
mov
pop
dec
jle
outsb
push
iret
mov
outsl
and
das
aaa
test
fcompl
imulb
mov
fwait
aam
icebp
dec
pop
push
adc
push
add
mov
fldenv
push
jecxz
pop
lea
jne
pusha
lea
call
push
movb
push
pushf
lea
jmp
pushf
mov
pusha
not
mov
pusha
push
pushf
mov
pushl
ret
pushl
lea
jne
bsr
mov
stc
call
pop
sub
xchg
adc
mov
xlat
or
adc
fwait
cs
out
sbb
repz
out
or
pop
cmp
sub
pusha
in
dec
sub
cld
mov
int3
les
scas
testb
pushf
je
dec
fs
ss
jns
mov
xchg
jne
lods
cltd
and
xor
xor
sub
dec
or
lcall
push
dec
sub
test
mov
jno
xchg
mov
xchg
xor
mov
into
mov
jecxz
bound
xlat
ret
out
xor
cs
sbb
mov
insb
addr16
push
in
add
and
dec
mov
fildll
imul
add
mov
jno
xor
das
loope
fwait
es
mov
insl
pop
fisttps
push
push
inc
icebp
mov
mov
ret
nop
jbe
jne
mov
xchg
es
sbb
stc
push
xlat
xor
xor
mov
les
sbb
mov
dec
mov
popf
jno
pusha
push
movl
movw
movb
push
call
add
adcb
push
add
adcb
pop
add
push
add
add
add
add
sub
ljmp
fiaddl
inc
cli
leave
fisubl
cli
leave
insb
inc
push
insb
push
repnz
insb
cli
repnz
insb
pop
inc
insb
or
push
leave
inc
dec
insb
and
insb
leave
sub
dec
mov
push
insb
or
cli
adc
pop
fisubl
mov
push
pushf
movb
lea
jne
jmp
roll
iret
fisttpl
sbb
or
in
push
sbb
mov
lods
divl
push
add
imul
arpl
pop
mov
dec
in
arpl
andb
mov
cld
mov
cld
push
sbb
mov
pushf
sub
jecxz
mov
addl
mov
mov
jne
or
push
mov
sub
rcll
pop
loope
mov
mov
cmp
enter
sub
pop
jno
out
xor
jge
shlb
xor
mov
xorb
imul
scas
shr
mov
mov
cmc
jo
mov
mov
scas
cmpl
add
pop
je
hlt
sub
xchg
sub
inc
rcll
dec
mov
into
decl
inc
and
and
movl
movb
lea
jmp
pusha
movl
pushf
lea
jmp
mov
mov
arpl
xchg
push
pop
sahf
scas
mov
cld
push
xor
add
fnstenv
sbb
stc
mov
mov
mov
add
in
mov
xor
jg
mov
lock
mov
das
ja
ret
cld
lret
movsb
mov
sbb
xor
jge
xor
jbe
mov
jbe
mov
pop
ret
gs
or
cmpsb
ss
fisubl
and
lds
push
leave
out
or
inc
nop
push
in
scas
xchg
and
jbe
addl
aaa
sub
sbb
xlat
lret
cltd
xchg
arpl
bound
adcb
sbbb
mov
inc
fwait
jbe
test
in
lret
lahf
jns
mov
pop
mov
loop
inc
lea
call
pusha
push
lea
jae
clc
jmp
push
or
push
lea
je
shl
xor
sar
inc
mov
stc
aaa
mov
setle
shr
test
shld
call
mov
jecxz
adcw
mov
outsl
mov
enter
and
mov
push
adc
sbb
aad
xchg
shrb
js
inc
mov
rcrb
iret
inc
shl
loopne
rcrb
pop
enter
in
cmpsl
mov
cmpsl
icebp
jb
jbe
mov
aas
jo
repnz
es
jmp
xchg
loop
mov
sub
push
out
mov
enter
int3
sbb
cmp
aad
ror
jmp
movl
pushl
lea
jmp
cmp
dec
outsl
stos
cmp
and
out
xchg
ds
jbe
aam
push
insl
fsubrl
cmpsl
jg
push
je
cmpsb
jle
andl
or
xchg
cld
dec
dec
fidivl
sub
jge
inc
orb
adc
jl
mov
or
add
sub
pop
mov
loope
les
sbb
add
xchg
mov
aad
pusha
xor
leave
std
fdivs
test
mov
or
cmp
mov
les
aam
pop
sbb
push
mov
ja
cmp
cmp
leave
xchg
loopne
dec
repnz
sub
dec
sub
ffree
adc
aad
rorl
fwait
mov
pop
cwtl
gs
jl
js
in
or
sub
rol
stos
add
jo
push
out
mov
aaa
push
enter
jmp
add
mov
push
shll
je
std
repz
imul
mov
push
dec
dec
mov
pusha
inc
icebp
sbb
out
sti
and
jbe
sub
adc
mov
push
push
pop
daa
xchg
pop
fs
leave
lock
test
xchg
xor
push
cli
shll
gs
es
aam
pop
loope
add
in
cmpsl
adc
jge
xorb
out
das
leave
dec
sub
out
mov
add
loop
adc
push
mov
add
add
fsts
addr16
stos
xlat
test
scas
xchg
or
mov
jg
out
xor
xchg
adc
aam
cmp
or
sub
push
xor
add
xchg
push
pop
fisubrs
dec
push
sbb
xlat
fs
pop
mov
xchg
dec
mov
or
add
jecxz
add
sbb
hlt
jecxz
or
jmp
addr16
xor
dec
pop
vmovupd
iret
sub
mov
pop
or
push
inc
push
pop
cli
ss
xor
pop
mov
cmovs
out
les
out
enter
lcall
les
mov
das
xchg
sbb
outsb
adc
iret
jbe
cmp
jmp
enter
xor
push
addl
mov
mov
pop
lods
xchg
cmp
stos
mov
data16
sbb
ds
sub
adc
dec
or
nop
cmc
movsl
inc
jns
pop
hlt
jbe
cmp
in
mov
popf
into
push
fisubrs
xchg
lods
scas
fnstcw
js
aam
dec
les
movzbw
mov
cmp
stc
cmpb
pushf
pusha
lea
jb
jne
bts
sub
cmp
shld
add
jmp
add
cmc
push
popa
push
ret
lret
dec
sti
test
loopne
cmp
and
pop
sbb
xchg
xor
fidivs
adc
mov
xchg
hlt
clc
pop
add
or
push
sub
orps
aad
std
jg
or
xor
add
js
rclb
and
jae
pushf
push
lea
jne
pushf
stos
push
pushf
lea
jmp
jge
mov
push
inc
sub
or
repz
int3
xor
stos
jp
cmp
aas
dec
push
aam
pop
sub
data16
pushf
push
inc
pop
popf
popf
iret
adcl
sub
fwait
dec
repnz
lea
add
movsb
jp
push
movsl
jns
sbb
pop
xchg
xchg
jo
mov
cmpsl
inc
mov
out
aaa
pusha
mov
lret
mov
xor
ja
fnstsw
mov
cmp
jl
iret
xchg
int3
jmp
das
push
add
scas
mov
sbb
into
mov
sub
filds
loop
dec
cmpsl
popf
int3
lret
not
sahf
movsl
and
lods
hlt
mov
movsb
or
aas
sub
sbb
sbbl
jbe
mov
stc
bound
jecxz
adc
push
cmc
stos
xor
inc
jnp
mov
lret
imul
pop
mov
jg
dec
dec
mov
pushf
push
lea
jmp
movl
pushl
movl
lea
jmp
movw
call
jmp
lea
ja
pushf
pushf
lea
jb
stc
call
pusha
pusha
movb
movl
lea
jnp
pushf
push
movl
mov
push
lea
jmp
cmp
and
ficoml
add
jb
daa
sub
cmc
aas
ss
mov
xchg
or
inc
jbe
or
shlb
enter
cmp
imul
push
das
adc
push
cmc
add
cmpb
xchg
mov
add
mov
push
pop
adc
pop
ss
popa
test
and
or
jp
xchg
int
inc
sbb
push
sahf
sub
fmuls
or
lret
push
push
xor
pop
xchg
movsl
mov
repz
test
icebp
cmp
sbb
int3
hlt
and
pop
sbbb
notl
jno
sahf
enter
jle
mov
jne
inc
add
ss
popf
sbb
daa
out
ja
mov
pop
adc
das
push
out
mov
arpl
pop
lret
int
adc
imul
push
cmpsl
push
add
daa
add
pop
test
or
sahf
iret
pop
daa
mov
cli
xchg
fildl
xchg
arpl
push
push
enter
sahf
mul
and
mov
gs
jne
test
and
pop
lods
aaa
push
dec
xchg
fildll
outsw
jne
ds
test
xchg
inc
cmpl
dec
or
and
les
pusha
inc
sbb
in
ja
out
ja
aaa
add
xchg
aam
add
lds
pop
cmp
repz
mov
push
sbb
xchg
jb
popa
sub
mov
dec
adc
push
mov
fistps
jle
arpl
sti
dec
das
xor
idiv
int
aaa
das
mov
mov
xlat
push
daa
aad
hlt
shl
sbb
push
stos
cmpsb
lss
mov
add
and
imul
fldenv
movlps
pop
pop
push
roll
mov
lcall
xchg
inc
and
pop
pop
push
das
push
ss
cmpsl
orb
outsl
nop
fistps
je
adc
es
cli
and
and
inc
pop
imul
add
add
dec
addr16
push
xchg
adc
push
sbb
pop
sbb
movl
insl
aaa
jbe
or
daa
inc
or
mov
idivl
mov
aaa
out
pop
mov
ja
cwtl
push
xlat
aaa
ja
add
sub
aad
add
insl
xlat
negb
arpl
pop
in
divl
loope
inc
mov
mov
xchg
xchg
aaa
jg
adc
push
aaa
inc
aas
pinsrw
inc
das
daa
iret
and
ja
add
lret
sub
push
mov
lds
mov
int3
and
in
and
pop
aas
inc
inc
push
pop
dec
xor
enter
fwait
movsl
jp
xor
aad
pop
jae
lcall
arpl
push
push
orl
adc
jbe
ds
pop
jne
xchg
push
mov
push
mov
sub
not
xchg
and
daa
and
out
movsb
mov
popa
arpl
and
xchg
adc
bound
adc
mov
inc
dec
add
jne
sbb
and
dec
movsb
adc
xlat
cmpsl
sub
cmc
and
test
inc
dec
push
xchg
cmc
and
push
sbb
dec
and
mov
add
cmpsl
mov
or
enter
iret
ja
add
pop
xor
and
div
or
xor
pop
adc
and
les
inc
call
cmpsl
es
lahf
movsb
aaa
push
sbb
popa
ja
push
xchg
xchg
sbb
push
jne
pop
push
mov
in
dec
outsl
in
scas
mov
test
aaa
push
sbb
add
add
call
pop
inc
or
daa
inc
pop
test
pop
rclb
push
arpl
scas
in
xor
inc
out
insl
pop
scas
mov
aaa
dec
popa
mov
and
iret
push
push
push
push
xchg
xchg
test
test
data16
sub
inc
and
iret
jbe
out
sahf
xchg
push
clc
and
shll
jnp
jecxz
out
mov
sahf
mulb
inc
fiadds
movsb
lock
movsl
shlb
inc
inc
and
mov
jle
int3
inc
jae
xchg
movsl
push
pop
mov
movsb
lret
jmp
add
sbb
test
aad
push
add
aad
adc
es
fld
xchg
and
mov
in
xchg
into
lods
pop
push
sahf
adc
xchg
lahf
out
xchg
inc
ret
sub
cmp
xlat
mov
and
cmpsb
lea
inc
ret
push
das
xlat
je
lea
addb
inc
ljmp
lds
fcmovnbe
adc
in
push
jbe
fcmovnb
jbe
sbb
jbe
aas
movsb
adc
add
not
and
lds
mov
push
jbe
dec
mov
out
aam
ret
mov
mov
movsb
test
pop
dec
push
xchg
es
pop
mull
and
xor
adc
xchg
shll
ret
popl
insb
pop
aaa
jne
std
cmp
add
addb
filds
inc
xor
in
inc
int3
add
adcl
outsb
jae
fisubl
out
inc
pop
es
and
jbe
out
jne
ss
xchg
gs
push
movl
push
std
push
in
in
push
push
mov
in
popf
fwait
movsb
ret
insl
push
inc
daa
inc
dec
int3
sbb
aad
pop
push
iret
inc
jmp
and
jnp
xor
sbb
mov
xor
xchg
lret
xor
pop
cmc
adc
pusha
add
dec
jne
out
mov
aaa
inc
ja
ret
jle
data16
and
push
daa
je
scas
inc
xchg
cmc
pop
inc
push
incl
add
inc
inc
sbb
addr16
sbb
pushl
das
ljmp
bound
les
cmpsb
out
lahf
jle
adc
sub
push
std
shlb
loop
jnp
sbb
push
xor
popl
sarb
xorb
das
add
mov
ja
aaa
mov
mov
pcmpgtd
pop
in
scas
inc
xor
mov
pop
loopne
cs
push
mov
addr16
scas
out
pop
jae
push
sbb
and
inc
aaa
aaa
out
fwait
push
adc
jnp
xor
out
adc
and
aad
add
xor
lahf
pop
pop
bound
cmpsb
inc
ja
jae
fs
and
les
iret
adcl
mov
inc
adc
cltd
cmpsl
mov
xchg
iret
pop
gs
xchg
dec
daa
and
testl
push
push
adc
lret
pop
add
and
cs
sub
mov
dec
inc
test
xlat
fdivrs
aaa
xchg
dec
sub
cmpsl
daa
sbb
cmpsb
push
xlat
aam
push
adc
addr16
push
dec
imul
xchg
pop
xlat
addr16
adc
into
inc
xlat
shlb
aad
add
into
cmpsl
xlat
test
ja
fs
xchg
adc
cwtl
xorl
adcb
cmp
je
adc
dec
push
xchg
cmp
adc
into
mov
fs
push
fwait
es
pop
add
mov
push
js
adc
mov
insb
ret
push
jae
xlat
movsl
pusha
and
fwait
aad
inc
inc
adc
popf
xlat
aaa
pop
movsb
xchg
adc
inc
push
dec
rdpmc
xlat
xchg
add
and
and
and
je
push
sbb
inc
js
out
add
push
ja
or
xchg
dec
jbe
dec
pop
mov
inc
jg
test
cmc
out
lgs
and
pop
outsb
pop
data16
inc
pop
pop
fistl
pop
pop
add
sbbb
mov
in
test
fimull
lods
daa
add
sbb
test
add
sbb
add
outsb
aas
aaa
data16
fildl
add
aas
aaa
test
addr16
fs
bound
adc
ja
sbb
add
push
das
ja
push
sbb
fs
xor
xchg
push
xchg
imul
inc
arpl
or
stos
ja
sahf
add
jb
mov
adc
movsb
aaa
xchg
jne
xchg
inc
dec
fst
iret
cmpsb
add
popf
je
inc
ss
jo
xchg
sbb
add
push
aam
pop
pop
pop
daa
je
inc
daa
divb
xchg
test
and
je
xchg
outsb
outsl
movsb
andl
xchg
mulb
push
or
cwtl
and
adc
test
xor
imulb
in
inc
jns
and
aad
sahf
repz
xchg
pop
sub
xchg
inc
dec
or
pop
pop
xorw
daa
adc
les
mov
pop
ss
and
popf
jnp
sub
scas
imul
xchg
frstor
mov
shlb
addr16
pop
mov
shl
movsb
inc
jns
loope
aas
jmp
into
popa
loop
adc
std
bound
nop
jb
out
push
ret
push
mov
ficoms
mov
mov
add
add
mov
jno
cmc
cmp
add
or
ret
add
lahf
mov
es
pusha
xchg
push
inc
sbb
out
fadd
cmp
add
mov
inc
lea
mov
and
push
arpl
ja
aad
rolb
add
dec
daa
shlw
inc
xchg
mov
and
add
add
mov
push
out
dec
ret
push
cld
aaa
add
dec
flds
xchg
cs
or
addb
clc
xchg
popa
es
in
mulb
inc
push
and
and
sub
filds
dec
push
mov
iret
sahf
dec
cmpsb
jne
movsl
cltd
xlat
and
xor
lea
push
adc
inc
and
je
shlb
ja
test
pop
push
and
push
xchg
stc
aaa
cmpsb
lcall
pop
lcall
pop
and
mov
sub
pop
pop
and
xor
mov
adc
cltd
xchg
inc
es
stc
dec
or
mov
dec
xchg
mov
daa
xchg
fsubs
xchg
add
daa
sub
popa
daa
mov
addr16
shll
loope
addr16
push
negl
xchg
xchg
add
push
or
mov
fs
and
lahf
ss
inc
mov
push
dec
movb
incl
and
test
and
aaa
mov
pop
inc
andb
xchg
cmp
mov
pop
add
out
out
inc
inc
cmp
movsl
mov
cld
mov
mov
adc
push
adc
mov
ja
jne
in
les
sahf
testb
mov
jne
push
inc
mov
inc
data16
adc
in
push
mov
and
and
mov
loopne
popa
and
mov
daa
mov
jne
movsb
bound
adcl
mov
inc
inc
push
add
int3
fidivs
xor
movsb
ret
arpl
popl
mov
notb
adc
mov
jmp
pop
out
mov
data16
mov
insl
aad
add
xchg
cmc
ja
lahf
push
aam
daa
mov
aaa
movsb
mov
pop
xchg
insl
pop
inc
ficoms
xchg
jne
daa
pop
jecxz
mulb
add
jmp
daa
insl
pop
loop
push
mov
repnz
imul
insl
addl
xchg
jne
xlat
sbb
ss
test
out
imul
sbb
inc
mov
dec
push
mov
pop
mov
xchg
sbbl
es
cld
dec
addr16
mov
jecxz
pop
pop
xor
addr16
cmpsl
mov
cmp
inc
and
shll
es
adc
adc
mov
sahf
lds
arpl
movsl
and
inc
ss
ja
mov
aaa
popa
in
test
les
aaa
enter
xchg
popf
inc
push
inc
inc
cmpsl
out
out
inc
cwtl
or
xchg
push
and
arpl
inc
popa
aad
inc
inc
and
pop
popa
and
bound
inc
and
popa
in
fs
and
or
testl
mov
ja
out
inc
and
movsl
mov
movsb
movsb
cmp
xor
jo
pop
inc
xchg
xchg
push
xor
shll
loope
hlt
pop
mov
cmp
cmpsb
adc
mov
adc
and
push
sbb
in
cmp
xor
mov
ret
aam
pop
out
add
add
xlat
imull
gs
ja
ret
pop
xor
xor
les
xor
and
aas
mov
sbb
xor
test
daa
inc
and
adc
daa
inc
popa
daa
inc
andl
inc
rcll
pop
and
jbe
mov
clc
mov
shl
fstpt
or
ret
sbb
mov
and
xlat
das
gs
push
lcall
dec
pushf
aam
adc
stos
sbb
sub
adc
jge
scas
push
iret
pop
jmp
mov
push
xchg
sbb
ss
hlt
cs
lds
adc
cmovae
or
mov
xchg
daa
ss
je
sub
push
push
push
add
fcomps
das
adc
out
mov
pop
out
push
inc
je
mov
outsl
mov
lock
sub
in
pushf
dec
push
sbb
inc
or
sbb
pop
lahf
xor
jne
es
adc
iret
mov
add
mov
adc
push
in
jecxz
nop
iret
sti
pop
jno
inc
clc
mov
data16
imul
mov
inc
push
or
ror
addr16
mulb
cs
leave
xchg
shr
push
repz
adc
test
mov
mov
or
fs
add
es
or
negb
add
divl
cmp
imul
push
mov
adc
jnp
imulb
inc
dec
xchg
adc
movsl
xchg
outsl
adc
pop
push
inc
mov
imul
movsl
xchg
sbb
xchg
test
pop
je
out
push
popl
add
ret
dec
push
inc
or
xchg
data16
leave
in
mov
cmpsb
mov
sbb
pop
aaa
pop
jne
mov
xchg
and
pop
int3
adc
wbinvd
xor
inc
inc
jne
out
in
pusha
daa
dec
scas
adc
xor
xchg
aam
xchg
cmp
aad
ret
pop
xchg
daa
pop
out
ja
pop
and
xchg
aaa
push
iret
fcomi
adcl
push
and
adcl
aaa
pop
and
mov
dec
pushf
movsb
xor
out
std
adc
ret
scas
xchg
add
jbe
mov
xlat
aaa
push
jae
ss
jno
ja
adc
pop
push
jge
jne
add
sbb
jbe
seta
mov
or
aad
add
add
sbb
aad
adc
push
push
xchg
inc
aam
aaa
pop
mov
push
add
adc
inc
inc
xchg
and
pop
xchg
inc
jne
mov
cmc
xor
fs
movsb
xchg
push
daa
imul
insl
jbe
pop
push
mov
repz
pop
aaa
mov
and
and
ja
pop
je
and
inc
inc
cmpsb
adc
movsl
inc
in
cmp
and
pop
pop
je
or
adc
xchg
adc
aad
movsb
scas
ja
dec
ja
emms
xchg
out
out
div
outsl
divb
xchg
mul
sbb
adc
add
inc
add
xlat
mov
push
addl
aaa
and
mov
jae
add
lcall
iret
fcmovnb
mov
lahf
push
fs
xor
add
add
add
je
mov
push
mov
adcb
xchg
out
sbb
les
syscall
xchg
out
add
aas
aaa
imulb
ss
aas
aaa
out
adcb
aaa
aam
xorb
add
sbb
add
sbb
push
mov
jae
in
push
sbb
adc
imul
mov
mov
lahf
imul
pop
imul
xchg
imul
cmpsb
imul
add
lcall
fildll
vmwrite
hlt
out
cli
sbb
sub
inc
insl
aaa
push
xchg
xchg
jg
mov
idivb
ljmp
inc
pushl
mov
inc
mov
ret
mov
add
shll
fisubs
sbb
aam
scas
sub
and
fistpll
in
xorl
ret
test
out
and
mov
jmp
inc
cs
aam
and
mov
arpl
xlat
in
xchg
mov
push
cmp
xchg
aad
push
popa
inc
mov
ds
cmp
adc
test
adc
and
gs
pop
push
sub
and
popa
lds
jns
cmc
and
xchg
fs
mov
pop
daa
arpl
ret
xchg
pop
out
mov
aaa
pop
lds
add
mov
mov
sub
and
popa
cmpsl
and
dec
add
rcl
popa
inc
aaa
and
out
inc
ljmp
adc
inc
and
and
inc
aam
add
and
and
jne
add
pop
fsubl
outsb
aaa
ljmp
mov
pop
xchg
aaa
push
sahf
xor
lahf
inc
mov
and
fildl
cmc
or
je
xchg
push
xor
frstor
add
aaa
aaa
in
xchg
push
cmc
xchg
ret
aad
aaa
push
movsb
add
push
in
sub
xchg
sti
mov
jne
divb
pop
xlat
mov
push
push
insb
fsts
mov
fnsave
mov
push
add
mov
repz
andl
mov
sub
loope
xchg
inc
push
push
test
push
inc
inc
es
das
jae
pop
aaa
push
lahf
mov
test
sbb
push
xlat
and
mov
and
jnp
je
jbe
jecxz
sbb
je
addr16
inc
mov
out
outsb
add
xchg
mov
mov
insb
jne
mov
push
and
les
movsl
pop
fwait
hlt
inc
push
xlat
imull
add
xor
fcmovnbe
ds
ss
incl
cmp
push
xor
inc
cmp
mov
jmp
xor
push
inc
test
and
mov
push
dec
sbbb
xchg
ret
jne
sbb
and
mov
ret
addr16
in
xchg
jmp
les
in
dec
aam
dec
loopne
adc
xor
mov
rorb
xchg
shll
push
dec
sub
pop
das
xchg
stos
inc
inc
jmp
pop
ret
mov
aaa
jo
aam
aaa
adc
pop
and
pop
jnp
pop
pop
ret
push
cmc
push
les
adc
cmpsl
pop
pop
push
bound
inc
jbe
pop
sub
xchg
ss
push
lahf
fs
lret
pop
xor
push
adc
pop
mov
and
xor
fwait
push
orl
in
sbb
cmp
inc
inc
jbe
test
push
insb
pop
cmpsb
xor
movsb
ds
sub
test
inc
adc
inc
inc
andl
out
out
loopne
adc
xchg
inc
add
xchg
shll
aas
adc
xchg
xor
cmp
xchg
imul
bound
inc
jbe
adc
std
imul
arpl
lods
mov
pop
into
adc
add
mov
lods
inc
out
daa
xchg
bound
mov
xorl
or
loop
and
sub
cltd
daa
lods
and
or
insb
lods
sub
mov
daa
cmp
jg
sbb
rcll
fs
setnp
fcoml
incl
aaa
es
dec
mov
in
adc
jmp
mov
pop
movsl
cmpsb
shlb
rol
movsb
xchg
test
loopne
adc
js
push
and
pop
aam
and
testb
inc
and
data16
cmc
popa
mov
mov
ja
fbstp
push
mov
pop
jbe
push
mov
mov
adc
ds
es
lds
and
test
xchg
push
adc
inc
je
movsb
mov
sbb
push
mov
and
xchg
inc
and
dec
push
xchg
and
and
xchg
je
mov
jne
scas
and
in
add
es
xchg
and
dec
add
inc
lds
and
pop
push
push
xchg
inc
xlat
push
push
inc
jbe
cmpsb
dec
out
xor
in
adc
and
out
and
ss
inc
daa
mov
inc
mov
daa
leave
jb
incl
cmp
push
je
jo
sub
cmp
test
mov
cmc
and
je
movsb
data16
lock
daa
push
ja
cmp
push
ss
jbe
mov
divb
inc
mov
add
daa
cmpsl
mov
sbb
xchg
aaa
pop
xlat
sub
inc
data16
test
idivl
idivl
idivl
add
add
hlt
aaa
pop
push
daa
fs
movsb
not
aam
mov
and
push
inc
jne
es
test
into
pop
xchg
xor
je
inc
pop
gs
mov
ljmp
ja
aaa
aas
pop
movsb
cld
adc
cmpsl
test
incb
sbb
add
sbb
data16
push
mov
or
ds
nop
shll
xor
fs
lock
mov
push
xlat
movsb
sbb
add
xchg
daa
adc
imul
imul
fisubrl
xchg
mov
je
imul
ljmp
xor
mov
nop
hlt
xor
test
addr16
notl
fwait
adcb
in
pop
sbb
push
rclb
xchg
fwait
aaa
cmpsl
add
xchg
xchg
mov
inc
and
cmc
xor
push
xlat
out
rorb
movsb
out
jne
xchg
adc
cltd
mov
push
out
repz
inc
arpl
pop
inc
insb
jb
dec
movsb
aas
fsubs
testb
lds
cmc
inc
and
in
test
pop
inc
push
daa
or
xchg
add
gs
sbb
add
xor
shrd
adc
unpcklps
js
mov
outsl
push
push
rorb
push
mov
push
pop
jno
or
sub
pop
xchg
loopne
adc
imul
popa
ret
and
adc
xchg
aaa
xchg
push
iret
aam
fs
push
inc
adc
dec
mov
test
push
inc
inc
xchg
mov
sbb
inc
roll
mov
sbbl
int
xchg
imul
mov
test
bound
jbe
outsl
add
outsb
mul
and
xchg
imul
addr16
jbe,pn
inc
push
mov
es
jne
gs
push
aad
inc
add
adc
add
sub
in
push
in
xchg
cs
jae
out
adc
lds
and
mov
add
inc
mov
das
push
xchg
mov
cmp
pop
xchg
in
outsb
cli
add
in
and
and
mov
xchg
add
add
pop
addr16
push
add
cltd
xchg
ret
fs
jl
iret
inc
movsl
and
adc
pop
cli
pop
movsb
test
add
and
xchg
push
dec
aas
es
dec
pop
movsl
dec
hlt
repnz
adc
mov
cmpsb
push
xchg
out
push
xchg
and
dec
vpunpckhqdq
cmpsl
push
cmp
cmp
adcl
and
call
test
imul
inc
popf
pop
addl
xor
movsb
daa
push
inc
inc
or
movsl
xor
in
inc
sbb
adc
and
adc
push
xchg
and
push
insb
push
sbb
sbb
stos
push
mov
push
jmp
cwtl
mov
gs
xorl
jbe
out
push
push
movsb
jne
xlat
pusha
xchg
or
les
fs
xor
ds
jbe,pn
lds
xchg
jb
aad
ds
int
dec
adc
aam
notb
xor
cmp
push
xchg
pop
scas
xchg
test
sub
inc
push
adc
mov
loope
xchg
fs
push
notl
ss
test
es
mulb
add
test
out
mov
mov
outsl
jbe
push
mov
out
test
cmc
frstor
mov
adc
and
inc
push
popf
movsb
test
les
aaa
inc
xchg
pop
dec
cwtl
movsb
mov
sbb
pop
aaa
add
out
and
es
push
xchg
and
and
jbe
mov
fninit
test
fildl
arpl
cmc
fildl
and
arpl
and
aaa
arpl
inc
iret
inc
inc
push
lahf
ja
mov
arpl
mov
aad
fbld
out
mov
movsl
adc
push
and
sub
das
mov
into
inc
sahf
and
testl
xchg
cs
jne
inc
movl
sub
inc
test
xchg
pop
in
and
cmpsl
push
divl
and
movb
popl
push
movsb
cmp
xchg
inc
out
ss
xchg
and
push
push
inc
movsb
mov
and
xlat
popl
push
jbe
and
dec
inc
xchg
movsl
inc
adc
inc
push
mov
adc
dec
ss
lds
cmpsb
inc
adc
and
push
xchg
push
pop
pop
pop
xchg
ss
mov
and
lds
movsb
jnp
test
and
jbe
and
aad
add
je
in
pop
push
xchg
inc
arpl
push
cmpsb
and
push
mov
pop
mov
arpl
push
fs
in
pop
arpl
xchg
inc
inc
popl
push
dec
movsl
xchg
push
and
push
movsb
push
in
imull
and
push
mov
add
aad
add
push
xchg
ret
popl
push
push
xchg
mov
testb
cmc
push
and
and
aas
ret
push
out
and
xchg
xchg
push
adc
push
inc
dec
test
pop
jae
dec
cmpsl
and
and
cmpsb
xchg
pop
aad
fcomps
and
xchg
and
push
push
ja
and
stos
ja
add
ja
add
xlat
sbb
mov
push
ja
out
add
ja
push
ret
xchg
outsb
notb
and
daa
xchg
pop
movsb
lcall
xchg
pop
in
jmp
mov
fimull
insb
daa
insl
mov
daa
aaa
movb
ja
xorb
xlat
addr16
repz
inc
icebp
push
adc
addr16
add
mov
inc
jo
daa
inc
nop
daa
cmp
xor
inc
shlb
inc
lock
push
adc
xchg
xlat
and
cmp
inc
and
testb
push
push
push
stos
cmp
xchg
sbb
adc
mov
fwait
xchg
das
aam
aaa
cs
xchg
and
adc
inc
addr16
out
adc
out
leave
cmpsl
out
push
inc
jae
xchg
xchg
mov
add
lret
cmc
ljmp
jecxz
test
and
mov
in
and
push
sub
sahf
addl
xchg
add
ja
cmpsl
push
xlat
cmp
cmc
mov
mov
push
jecxz
push
dec
add
xchg
scas
int3
out
mov
mov
adc
ret
and
mov
fwait
loopne
xchg
jne
and
pop
adc
push
outsl
pop
negl
lock
adc
out
xchg
popa
mulb
and
lea
or
xlat
icebp
xchg
push
adc
push
and
mov
insl
push
mov
cmpsl
dec
incb
mov
arpl
out
and
pop
mov
mov
mov
push
aam
loopne
cmp
inc
cs
adc
idivb
and
movsl
cs
int
dec
movb
dec
popf
aam
add
push
push
inc
push
shrl
arpl
xlat
xor
addr16
mov
movsb
pop
popa
xor
mov
push
lahf
cmp
and
cmpsb
nop
in
push
mov
ret
and
xchg
and
out
xlat
inc
jbe
mov
shll
stc
test
fwait
pop
mov
pop
mov
ja
xchg
pop
mov
xor
pop
and
and
adc
in
or
fidivl
mov
aaa
es
ss
ret
push
push
les
xchg
out
cmp
div
pop
inc
ljmp
movsl
push
push
and
and
clc
ja
bound
fisubrl
jns
test
inc
cmp
and
outsb
pop
jmp
sti
inc
or
and
flds
mov
inc
loopne
push
add
inc
xchg
outsl
loope
mov
les
sbb
test
xchg
and
mov
lods
nop
inc
sbb
inc
rol
cmp
sbb
inc
aaa
xchg
loope
pushf
out
push
push
pop
int3
jmp
xchg
inc
mov
in
adc
xor
mov
cs
inc
dec
sbb
sbb
inc
test
cltd
inc
mov
cs
outsl
inc
push
stc
inc
push
jp
push
pop
ja
or
mov
push
push
ja
data16
imul
sbbl
inc
mov
xlat
adc
add
xchg
xchg
icebp
push
add
jle
push
cli
lcall
fs
stos
repz
gs
mov
push
pop
mov
mov
mov
insb
fcoms
incl
movsl
loopne
pushf
push
cmp
loope
and
and
stos
ret
aad
push
xchg
add
xchg
sbb
jbe
xchg
cs
xchg
jle
test
shlb
cltd
xor
push
loop
bound
out
xchg
xchg
lcall
xchg
inc
mov
test
in
test
scas
cmpsl
mov
dec
sarb
pop
sub
test
pushl
sti
pop
movsb
push
mov
aaa
inc
push
adc
arpl
outsl
arpl
inc
push
push
xor
shll
nop
jne
out
cmpsb
and
mov
xchg
xlat
into
das
jg
xchg
mov
push
orl
add
adc
push
or
je
inc
cwtl
mov
xchg
sbb
in
je
push
xchg
in
push
dec
lea
outsl
pop
ss
movsl
push
dec
mov
push
sbbl
adc
movsb
insl
push
pop
xchg
inc
sub
ds
js
mov
mov
xchg
dec
pop
je,pn
xchg
xchg
pop
jg
addr16
daa
add
popa
sbbl
dec
cli
xchg
push
cltd
inc
sub
cmp
gs
outsb
cmpsb
les
addr16
inc
int3
xlat
jecxz
cmp
mov
adc
jle
es
dec
add
ljmp
int
sub
add
movsl
adc
xlat
roll
adc
addr16
mov
aad
out
scas
sbb
add
push
inc
adc
push
movsl
pop
jmp
out
or
es
andl
xchg
mov
xchg
or
jne
push
loope
add
jae
out
aaa
aaa
push
push
cmpsl
negl
sub
fs
movsl
aad
jp
je
xchg
addr16
test
jecxz
hlt
test
sahf
xor
fs
add
test
imul
mov
mov
pop
jmp
ja
shl
mov
frstor
push
cmpsb
and
dec
adc
inc
push
popl
xchg
sbb
and
cmpsl
push
and
jbe
mov
add
bound
cmc
stos
movsb
xor
je
and
aad
mov
aaa
iret
inc
and
push
push
inc
xchg
and
mov
out
mov
mov
inc
aam
pop
scas
push
push
mov
and
pop
push
inc
xchg
and
push
mul
and
and
xchg
inc
lds
cmp
xlat
mov
and
and
and
cmpsb
dec
xchg
pop
push
add
and
pop
push
push
xchg
inc
testl
dec
xchg
mov
in
and
xchg
push
pop
mov
mov
push
and
xchg
popl
pop
out
xchg
inc
cmc
and
test
aam
pop
mov
xchg
push
mull
aam
fs
inc
jbe
cmpsb
xchg
push
adc
push
inc
xchg
adc
in
xor
cs
pop
mov
push
xchg
pushw
cmpsb
and
push
aad
adc
push
push
movsb
in
daa
mov
add
xchg
dec
xlat
xchg
push
xchg
and
add
push
xchg
inc
aaa
ja
dec
testl
add
and
and
xchg
inc
in
pop
iret
addr16
cmpsl
xlat
and
dec
inc
xchg
popl
jne
and
dec
xor
xchg
push
les
popl
push
dec
mov
notb
xor
push
add
and
dec
adcl
dec
mov
notl
push
inc
xchg
pop
push
mulb
xchg
push
and
inc
popl
ja
cmpsl
test
inc
push
popl
cmpsb
and
adc
pop
xchg
jbe
std
sub
lds
test
rclb
in
or
es
and
rcl
and
mov
pop
and
jmp
in
loop
popa
mov
ret
pop
shll
and
negl
jne
movzbl
pop
cmp
dec
das
aaa
ret
pop
and
hlt
adc
push
mov
aaa
inc
mov
xlat
cltd
cmp
ja
pop
in
jmp
xchg
push
mov
imul
imul
adcl
or
dec
addr16
or
jnp
aaa
adc
push
aad
aas
add
cmp
adcl
cltd
daa
adc
add
and
and
adcl
push
gs
cmc
arpl
cmp
icebp
cmp
pop
inc
shrl
pop
cs
adc
aam
pop
hlt
cwtl
push
daa
mov
hlt
or
imul
add
push
xchg
lods
imul
push
out
pusha
pop
push
test
mov
mov
add
push
mov
inc
adc
pushf
xchg
hlt
add
outsb
push
mov
push
imul
push
in
push
sti
add
and
jns
xchg
lret
insb
imul
or
test
xlat
mov
mov
mov
push
pop
popf
xlat
lock
xchg
xchg
xchg
push
jmp
or
push
aaa
inc
and
pop
lahf
adc
ljmp
fistps
iret
xlat
xor
xlat
adc
mov
aaa
inc
push
das
ret
xor
xchg
pop
inc
push
iret
xchg
fistl
popa
nopl
sub
fnsave
sbb
or
ss
xor
cmpsb
sbb
pop
addr16
sub
lea
ds
add
and
push
xchg
push
addr16
repz
nop
add
push
or
inc
add
shlb
int
push
mov
add
add
dec
inc
cmc
call
push
xchg
inc
out
enter
add
push
add
outsl
jg
push
hlt
sti
lods
and
addr16
hlt
mov
aaa
push
test
mov
mov
add
inc
mov
xor
mov
stos
push
ja
test
add
cmovbe
daa
arpl
sub
push
je
subb
ljmp
push
lcall
fbld
add
push
pop
jecxz
adc
adc
pop
loop
mov
dec
fimull
mov
mov
repz
push
bound
testl
push
arpl
arpl
jno
dec
mov
or
pop
mov
xor
cmpsb
add
ds
push
or
cmp
or
jl
xchg
iret
fistpl
imul
mov
cmc
push
mov
cwtl
hlt
scas
int
cltd
scas
testl
fcomip
cmc
or
cwtl
movsb
lahf
cltd
jae
pop
and
lds
jmp
hlt
pop
mov
push
flds
ror
shl
cmpl
divl
pop
push
pop
outsb
mov
iret
daa
cmpsl
popf
xchg
nop
test
cmpsl
pop
scas
xchg
dec
cmp
int
and
and
test
enter
adc
pop
adc
pop
push
sbbb
push
into
arpl
jbe
mov
mov
mov
ljmp
jmp
and
int
push
mov
sbb
out
subb
add
fisubs
fcmovne
jns
xchg
orb
pop
mov
push
call
push
pushf
push
inc
xchg
adc
out
loopne
fsubrl
cltd
ss
mov
imul
mov
les
inc
cmp
xchg
inc
shlb
hlt
cmpl
xor
scas
int
or
or
lahf
call
xor
ficoml
sbb
xchg
testb
pusha
cld
add
xchg
rcll
jae
jge
or
cmp
fnsave
adc
add
addr16
out
lds
xor
pop
add
push
mov
inc
mov
jecxz
push
xlat
push
push
iret
push
and
jb
pusha
xor
mov
xchg
xchg
pusha
mov
out
in
push
inc
out
jmp
jge
add
pop
scas
in
orb
jns
jmp
push
and
shl
sbb
and
gs
aaa
mov
add
ret
xchg
and
adc
pop
adc
mov
pop
aam
movsl
mov
xchg
into
cmc
out
mov
cmpsl
movsb
and
rcrl
pusha
inc
mov
imul
xchg
lods
add
popa
and
and
push
inc
dec
imull
scas
push
jne
adc
lods
mov
add
and
mov
jge
ljmp
pop
les
fcoms
pop
add
jecxz
sbb
xchg
clc
xchg
addr16
pop
push
lock
push
mov
test
test
cmp
jbe
ret
test
lds
mov
push
in
xor
test
adc
and
daa
xchg
push
push
into
divb
daa
push
lds
push
jmp
push
andl
mov
and
inc
lcall
push
rol
cmpsb
pop
or
fcmovbe
aaa
int
repnz
sbb
sub
ss
add
movsb
paddusb
imul
mov
add
cmp
pop
ss
ja
cmp
adc
mov
mov
rolb
push
aad
pop
or
rolb
mov
aad
xchg
inc
je
and
add
cmc
in
dec
adcb
fdivs
adc
pop
xchg
popl
xchg
and
fsubp
push
outsb
pop
push
mov
push
mov
sub
and
push
in
lds
push
sub
ja
xchg
add
inc
add
scas
daa
mov
ja
in
xchg
adc
es
data16
mov
cld
mov
fsubp
daa
and
lds
push
add
pop
inc
in
sti
jne
pop
ret
sub
cmpsl
mov
jb
inc
ret
adc
jl
shl
fcmovnb
cld
or
aam
test
and
das
aaa
add
adc
mov
fimuls
cmp
push
inc
pop
test
jbe
out
outsb
push
movsl
adc
daa
movsl
mov
jbe
lock
push
pop
xchg
mov
add
sub
adc
fwait
aaa
ja
mov
aas
sub
daa
jle
xchg
stos
mov
mov
popa
xchg
and
test
adc
push
repz
mov
out
or
repz
add
pushw
cltd
mulb
xor
mov
lcall
aas
mov
pop
aam
cmp
sbb
add
cli
xlat
das
sbb
mov
cli
adc
in
andb
pop
data16
orw
inc
pop
fisubl
out
mov
ret
daa
push
addr16
imul
push
repnz
lds
dec
push
pop
xchg
sbb
adc
in
and
adc
xlat
dec
mov
test
pop
mov
inc
mov
outsb
data16
jg
pop
lret
cltd
add
xchg
xchg
lret
pop
and
and
and
xorl
jp
mov
imulb
cmc
pop
push
push
push
mov
add
and
ljmp
cmp
and
imul
jbe
pop
push
cmpsb
jbe
add
in
mov
xchg
addr16
cmc
mov
mov
add
xchg
mov
sub
adc
lret
jbe
jbe
loop
jp
int
mov
adc
dec
mov
in
fnstenv
lahf
push
out
inc
push
test
js
aad
jmp
cmpsb
xchg
outsb
push
insb
jge
inc
pop
lods
fwait
inc
mov
aaa
pushw
aad
addb
cmp
daa
xor
inc
shll
push
popa
push
dec
cmpsl
aas
in
movsl
pop
mov
jnp
es
ss
rcl
add
sub
cmp
arpl
sbb
push
jp
imul
addb
out
push
sub
or
xchg
cmp
push
aaa
adc
push
and
rcrb
jge
out
loop
mov
mov
xchg
mov
ja
xchg
aad
pop
out
pop
pop
daa
push
jmp
in
adc
pop
fs
xchg
std
and
push
push
sub
inc
xchg
mov
ret
adc
add
test
pop
pop
mov
popa
xchg
pop
mov
or
loopne
push
arpl
pop
add
lock
push
mov
xchg
fildll
jnp
leave
xchg
cs
in
daa
test
pop
fs
fstpl
jle
push
ret
xor
aaa
cmpsb
xchg
mov
daa
popf
movl
ds
add
sbb
out
inc
push
repz
fxam
pop
inc
xor
sbb
gs
imul
add
add
imul
push
punpckhwd
loope
and
inc
fwait
inc
adc
xor
inc
mov
add
testl
inc
adc
cmp
xlat
push
mov
lock
les
push
fsubl
and
or
jne
xchg
out
sbb
cmp
and
push
addl
cmpsl
sub
xchg
inc
std
jle
inc
aaa
test
cmp
add
sti
pop
and
lret
lahf
sub
call
flds
push
test
add
xchg
popf
aaa
mov
scas
jbe
push
or
int
dec
in
test
inc
in
movsb
movsl
jmp
cmpsb
int
push
xchg
daa
add
mov
adc
or
add
jle
fadds
movsl
xchg
jbe
pop
inc
movsl
enter
xchg
cmp
add
adc
mov
mov
dec
pusha
outsb
push
in
outsb
xor
push
mov
pop
out
inc
add
xchg
mov
pop
adc
testb
adc
gs
lods
fwait
inc
mov
loope
add
in
xchg
lds
and
xchg
mov
add
xor
add
rclb
pop
xchg
push
cmpsb
cmp
add
push
xor
cmp
cmp
test
popf
aaa
jp
addb
add
pop
adc
and
mulb
push
xor
in
movsb
fldl
sub
push
jg
or
inc
xor
dec
cmc
das
sub
out
sbb
jle
inc
xchg
aaa
inc
and
ret
in
push
inc
add
pop
arpl
aam
rorb
xchg
movsl
mov
xchg
pop
ja
jnp
jne
bound
jmp
and
popl
testb
adc
gs
cmpsl
dec
pop
aam
xchg
icebp
and
and
push
and
cmp
and
xchg
mov
hlt
inc
inc
iret
bound
movsb
mov
inc
and
mov
addr16
lock
cmpsb
xchg
xchg
inc
aad
les
call
cmp
ds
pop
stc
and
repnz
adc
inc
pop
inc
mov
push
test
sbb
mov
pop
ja
cmp
xor
add
sub
and
outsl
dec
pop
mov
jmp
pop
push
xor
push
lea
and
push
jne
and
rol
add
dec
and
test
rclb
cmpsb
add
das
arpl
add
gs
imul
mov
pop
add
into
xchg
test
push
inc
data16
movsb
inc
imul
mov
add
cmp
push
xlat
cmp
pop
add
into
pop
jg
push
push
add
into
sti
inc
out
dec
pop
mov
mov
outsb
sub
int3
cmpsl
adc
ljmp
inc
xchg
xchg
inc
cmpsb
aaa
pop
and
adc
add
pop
and
aas
jecxz
adc
stos
mov
pop
sub
xorl
xchg
add
insl
push
fsubs
jne
mov
popa
in
xlat
dec
mov
push
push
in
jbe
in
cmp
mov
adc
cmc
push
and
into
xchg
gs
or
cmp
sbb
fisubl
mov
sbb
xchg
and
inc
and
lcall
in
aad
xor
testb
popa
xor
jo
ja
jno
or
popa
xor
mov
fwait
addr16
mov
xchg
xchg
in
lret
testb
mov
ljmp
aam
xchg
push
inc
sub
xchg
push
into
cmc
jbe
addr16
data16
jle
stos
pop
push
aad
mov
negl
push
xor
inc
cli
adc
bound
or
pusha
xor
cmpsl
xchg
test
je
icebp
nop
xor
push
repnz
bound
scas
jp
add
inc
push
inc
jmp
adc
dec
push
outsb
push
push
xlat
and
lcall
inc
push
mov
cmp
in
xor
aaa
add
int
inc
adcl
add
xor
cmpsl
hlt
punpckhwd
push
add
xchg
std
addb
fldl
sbb
inc
cmpsb
gs
inc
and
aaa
cs
push
xchg
jne
push
ficompl
in
in
cmpsl
push
cs
movsl
aad
aad
cs
aad
loopne
test
inc
std
adc
and
jmp
movsb
loopne
jmp
xchg
push
push
dec
adc
inc
inc
dec
adc
aad
mov
test
lods
xchg
add
xor
and
cltd
divb
movsb
aaa
cs
mov
sub
inc
test
mov
inc
mov
pop
ja
xchg
pop
jle
cmc
out
xchg
and
add
mov
in
and
aaa
adc
aad
fs
outsl
inc
jo
xchg
iret
xchg
je
sahf
jne
cmpsb
pop
pop
lds
packuswb
push
xchg
adc
adc
add
adc
xlat
rclb
testl
rorl
push
push
xchg
insb
lcall
les
fadd
cmp
loope
andl
jne
lds
arpl
and
xor
inc
dec
out
inc
xorl
andl
orl
jle
les
cmpsl
lds
sbb
push
addr16
imul
sbb
add
lea
std
inc
inc
imul
sub
mov
xchg
das
jo
in
aas
add
cltd
lcall
fidivrl
cmpsb
lds
xor
pop
mov
cltd
data16
mov
xchg
test
iret
xchg
jecxz
or
test
fcoml
adc
test
out
fidivl
mov
test
xchg
cmp
lcall
and
jne
cmp
xchg
lcall
out
push
push
jg
xor
push
mov
testb
and
mov
imul
ss
xchg
xchg
pop
daa
clc
cmpsl
xor
adc
add
jg
push
popf
bound
pop
iret
push
pop
test
fcom
mov
jmp
test
adc
dec
sti
xchg
push
lcall
fldenv
push
push
sbb
andb
ja
sub
lret
mov
adc
movsb
in
push
xchg
inc
inc
jno
xchg
aaa
push
mov
add
xchg
xchg
gs
and
push
jbe
mov
adc
jle
addr16
pop
jge
aam
jmp
add
inc
jbe,pn
push
xchg
adc
xchg
mov
movsl
xor
xchg
dec
dec
and
xlat
sub
movsb
sub
mov
cmp
lea
icebp
mov
push
dec
ljmp
xchg
loope
inc
cs
test
mov
leave
dec
test
or
aam
dec
xchg
add
pusha
ja
xchg
mov
cmp
pop
test
push
aad
roll
pop
push
and
movsl
addr16
inc
adc
jmp
adc
es
adc
adc
and
aam
jne
adc
xchg
adc
int
inc
in
xchg
adc
pop
inc
clc
sti
cmp
or
jp
mov
les
push
add
jno
gs
orl
sysret
iret
lret
ja
movsl
mov
push
ret
cmpsb
push
jno
mov
cmp
inc
movsl
inc
aaa
inc
mov
xor
mov
pop
add
gs
sbb
in
mov
loope
adc
arpl
nop
loopne
dec
jne
pushf
xor
add
inc
dec
call
push
ret
stos
nop
out
xlat
and
mov
lcall
mov
scas
inc
aad
and
test
popa
test
test
push
das
jmp
cmpsl
or
dec
cwtl
jmp
jno
aad
les
mov
inc
xor
xchg
lds
movsb
and
out
cwtl
out
cmc
pop
stos
iret
and
inc
inc
push
iret
inc
and
xchg
stos
lods
xchg
and
xchg
xchg
dec
mov
movsl
sbb
fists
mov
es
loop
xchg
add
out
test
push
jecxz
mov
pop
push
test
pusha
xor
movsl
and
movsl
fildl
jnp
inc
mov
jp
movsl
hlt
cltd
and
inc
jbe
inc
and
xor
inc
push
in
cmc
pop
test
fsubs
cwtl
in
fnstenv
inc
push
and
xchg
loope
jp
push
int3
cmc
sub
shlb
ja
test
and
daa
scas
xchg
mov
ss
je
push
cs
ret
fwait
push
test
xor
xorb
cmpsl
xlat
xchg
fldt
adc
pop
xor
sub
cld
and
pop
testb
divl
add
test
mov
pop
xchg
push
int
int3
adc
mov
fld
adc
sbb
adc
dec
adc
xchg
push
adc
or
fsts
xchg
xor
inc
rclb
sbb
movsl
cs
js
pop
movsb
vpmovmskb
mov
ret
dec
outsl
jg
shll
inc
outsl
mov
adc
enter
push
cs
mov
xorl
repnz
jg
push
frstor
fs
inc
bound
xchg
pop
imul
inc
das
mov
orl
push
inc
jne
xchg
cmp
lret
cmpsb
push
shl
or
xlat
sub
fwait
imul
pop
cmp
sub
aam
es
jae
xor
inc
mov
pop
mov
and
rcrb
inc
sahf
xlat
inc
pop
lahf
ss
divb
arpl
pop
xchg
add
xchg
push
push
push
push
push
mov
cmpl
loope
xlat
sahf
ss
push
xchg
and
add
in
mov
jnp
xor
xchg
in
add
ja
popf
xchg
sbb
adc
test
push
jae
jg
jne
and
pop
movb
imul
xchg
gs
jne
sbb
cmpsb
stc
ljmp
jno
mov
or
aad
test
xlat
adc
test
out
push
in
gs
sub
pop
jg
ja
inc
xchg
push
pop
mov
cmp
cmpsb
push
in
mov
cmp
jb
xlat
adc
adc
jno
xchg
stos
addr16
aad
arpl
cmpsl
icebp
push
adc
arpl
popa
in
xor
adcl
cmc
push
xchg
adc
fwait
in
sbb
icebp
xchg
and
ja
aad
ljmp
ret
push
xlat
xor
adc
mov
jg
adc
pop
xchg
bound
ret
inc
test
inc
push
je
or
xor
dec
out
push
leave
iret
mov
dec
jecxz
xor
xchg
adc
jne
cmpsl
or
mov
and
xchg
push
dec
inc
fimull
and
dec
test
adc
sti
push
or
xchg
fstps
popa
fs
mov
test
cmp
in
insb
test
ret
int
jge
ljmp
or
mov
inc
or
add
testb
xor
mov
jmp
xchg
not
mov
xchg
push
in
inc
int
popa
xchg
cs
mov
push
mull
xor
lret
add
sti
cmpsl
inc
ja
nop
mov
jnp
movsb
xchg
cmpsb
pop
xchg
rclb
out
int
stos
bound
lds
test
leave
mov
es
dec
mov
xorl
add
adc
cmpsb
int
stos
jbe
test
movsl
and
nop
les
cmp
mov
jbe
push
rcll
int
push
xchg
fs
xchg
aad
in
jle
in
mov
sarl
mov
or
loop
xchg
addr16
not
data16
cmpsl
enter
movsl
push
lds
or
adc
bound
and
inc
sti
inc
int3
inc
jge
and
or
incl
test
loop
cmp
pop
push
cmpsb
add
adc
aaa
push
pop
stos
adc
push
mov
mov
mov
sub
jmp
lea
dec
cmp
loop
ss
stos
pusha
hlt
push
add
inc
out
push
jle
pop
xchg
jne
jle
pop
addl
ret
movsl
mov
xor
sti
push
les
movb
or
adcb
sahf
xlat
ja
out
and
in
call
int
add
pop
setg
mov
and
and
cmp
mov
cmp
xchg
cs
out
leave
ret
hlt
aam
pop
icebp
and
sbb
popa
push
xchg
aaa
mov
test
inc
push
adc
push
add
outsb
adcb
and
xchg
xchg
outsl
push
mov
adcb
iret
cmp
xchg
mov
add
inc
xorb
cmpsl
push
mov
jbe
add
inc
lret
push
cmpsl
adc
pop
push
daa
add
sbbb
jnp
mov
inc
roll
push
aaa
jle
aam
test
fnsave
addr16
fs
mov
filds
push
push
jle
fisttpl
sub
adc
xor
mov
pop
das
dec
ss
and
and
lahf
mov
fwait
xchg
xchg
les
test
inc
and
xlat
mov
push
sub
sub
jbe
add
push
mov
mov
and
shlb
mov
sbb
xlat
xlat
sbb
lds
and
inc
push
push
adc
in
sbb
or
pop
je
adc
mov
jbe
push
ds
cmc
aas
xor
push
pop
xor
hlt
mov
mov
test
cmc
inc
jno
adc
dec
ja
fs
pop
and
xchg
test
mov
dec
add
popa
add
and
inc
mov
and
jbe
cmpsl
mov
add
and
jbe
pop
pop
jbe
out
mov
push
mov
ja
data16
mov
pop
cmp
or
testb
jmp
lahf
xor
xor
movsl
test
xor
int3
jge
ret
xchg
ja
add
cmp
notb
mov
adc
xchg
adc
cmp
cmc
shl
push
xchg
cs
cmpsb
divl
fs
cmc
cmp
addb
xor
fists
push
inc
es
and
cmp
mov
inc
out
push
pop
inc
add
and
addb
testl
mov
add
mov
fcomps
bound
xchg
inc
mov
and
adcl
and
lcall
es
mov
mov
arpl
sbbb
and
mov
mov
shrb
jge
aaa
mov
push
roll
sbb
mov
dec
xchg
lret
pop
mov
lret
mov
xchg
mov
xchg
cmp
xchg
xchg
loop
shrb
mov
jp
ja
lret
stos
scas
into
iret
cmp
sbb
pop
aaa
out
xchg
adc
aaa
cmpsb
and
lods
movsl
jg
sbb
cmpsb
sbb
fwait
adc
lret
rol
pop
js
aaa
scas
xor
mov
sbb
pop
lcall
sbb
ss
cmpsl
add
into
and
inc
jne
hlt
and
fisubs
fidivrl
ds
sub
jmp
stos
aas
addb
lea
jge
cwtl
sub
pop
xlat
ret
cmpsl
call
ret
inc
jne
hlt
jle
cmp
es
xchg
dec
xchg
insl
add
imul
lock
or
push
imul
lods
hlt
mov
inc
pop
loope
ds
or
daa
add
pop
addr16
ror
xchg
mov
mov
in
jne
aaa
jmp
fildl
ret
out
data16
andl
mov
ja
pop
or
stc
ja
or
dec
shlb
pusha
pop
xchg
jecxz
cmp
mov
inc
sarb
and
jbe
pop
push
and
add
push
xor
js
dec
sbb
mov
dec
or
mov
cmp
lods
sbb
mov
pop
mov
sbbl
ret
xor
out
push
shr
mov
mov
dec
subb
mov
jmp
fdivs
jg
adc
loop
addr16
ja
mov
push
jnp
adc
cmpb
aaa
xlat
xor
add
sbb
addl
fwait
cwtl
addb
es
push
sub
mov
scas
add
inc
mov
and
iret
adc
mov
xor
hlt
or
jnp
ljmp
mov
mov
pop
cmp
pop
add
mov
and
pop
loop
shrl
es
xchg
inc
cmpsb
adc
das
inc
aam
sub
xlat
push
ret
xor
aaa
mov
xor
or
arpl
orl
mov
push
fistl
push
sbb
and
cmpsl
clc
sbb
add
mov
cmpsb
jno
add
bound
ja
sbb
adc
out
pop
mov
sbb
fistpll
sahf
add
iret
xchg
lcall
add
clc
push
es
loop
dec
xor
adc
pusha
mov
iret
mov
adc
cs
outsl
enter
or
and
jl
xchg
lcall
bound
imul
jae
push
divl
inc
mov
ss
popa
dec
imul
or
das
bt
mov
or
push
divb
ffreep
push
jp
ss
mov
out
cli
pop
push
fcoms
cmc
hlt
xchg
mov
push
std
aas
loopne
pop
je
inc
jl
adc
repz
pop
xor
and
xchg
jno
cwtl
lods
rcrb
xchg
ja
daa
fidivrs
and
push
pop
push
fisubrl
addr16
mov
mov
outsl
jae
xchg
xchg
jb
xor
xor
inc
mov
sub
xchg
mov
loopne
loopne
jp
mov
je
jle
pop
pop
mov
jp
lret
je
fbstp
or
pop
add
inc
pop
pop
sub
pop
xor
out
loop
in
out
dec
xchg
dec
aas
inc
cmc
cmpl
xchg
ror
push
lfs
into
mov
fcoml
sbb
xchg
pop
and
cmpsb
mov
xchg
out
push
iret
fcmovne
not
push
xlat
mov
add
popa
xlat
repnz
gs
hlt
iret
jne
test
movsl
add
mov
xchg
adc
dec
cmp
lds
ja
fs
cltd
add
enter
sahf
inc
dec
fimull
inc
xlat
adc
jg
xlat
in
push
xchg
sbb
mov
testl
test
fcomi
add
mov
pop
and
push
jo
sbb
pop
aas
or
daa
testb
push
test
mov
sbb
xchg
add
xlat
in
aaa
sbbb
add
inc
jbe
addr16
pop
test
lods
pop
aaa
mov
mov
notb
and
testl
movsb
pushf
jne
xchg
daa
aaa
and
xchg
ret
pop
xor
ss
push
adc
mov
inc
and
fiadds
sahf
push
bts
pop
lcall
mov
inc
push
decl
aaa
mov
cli
ficomps
pop
aaa
daa
mov
ja
xchg
sbb
pop
mov
inc
cld
hlt
pop
imul
cmpsb
sbb
sub
mov
jns
mov
cmp
cmp
fdivp
iret
or
jp
ja
icebp
push
push
pop
dec
aam
in
jl
hlt
pop
dec
int
mov
or
out
xchg
lahf
scas
out
jge
add
adc
pop
daa
or
hlt
addr16
push
dec
mov
sub
or
das
mov
push
cmp
cs
daa
dec
insb
dec
cmp
pop
and
xchg
pop
mov
jmp
xchg
jmp
imul
inc
xchg
mov
pop
hlt
ret
xchg
jbe
sbb
ja
pop
adc
bound
jbe
dec
mov
and
daa
sub
repnz
cli
ret
cmpsl
xchg
loop
xor
in
dec
xchg
sbb
mov
mov
mov
lea
xchg
pop
xlat
cmpsb
pop
pop
inc
add
xchg
fiaddl
pop
mov
inc
push
adc
pop
adc
xor
mov
testl
push
and
jae
repz
daa
and
sub
pop
and
adc
add
fistpl
in
adc
loop
mov
jg
stc
shrb
iret
hlt
sbb
mov
and
into
mov
pop
pusha
xchg
mov
sub
je
notl
pop
xorl
xor
jge
int3
inc
adc
push
out
inc
int3
lds
inc
dec
inc
xchg
xor
xchg
je,pt
ss
or
cld
ja
xchg
add
data16
ficomps
ja
lahf
testb
cmp
test
inc
mov
rolb
in
cld
sbb
adc
mov
insb
push
mov
rcr
xchg
scas
into
fldt
xchg
add
pop
test
inc
or
cmc
pop
bswap
je
enter
sub
adcb
ss
mov
push
add
sbb
aaa
repnz
xchg
xor
push
lret
outsl
xchg
push
add
inc
pop
aaa
ret
rcrb
pop
xchg
push
mov
movsl
lds
aad
les
stos
testb
mov
lods
roll
mov
cmc
call
and
xchg
sub
xchg
jne
ficoml
outsl
pop
mov
dec
inc
jne
jno
push
mov
and
push
adc
inc
push
jne
xchg
into
insl
enter
lcall
xor
adcl
and
mov
xchg
xor
xchg
insb
dec
sbb
add
xchg
imul
and
cmpsb
maskmovq
notl
mov
sub
sbb
add
inc
xlat
insb
adc
fwait
push
nop
xor
movsl
jb
out
movsb
dec
push
xchg
jg
rep
adc
push
les
pop
stos
lret
push
xor
andl
pop
push
push
pop
js
mov
pop
push
push
mov
movsb
out
push
daa
jmp
push
incl
daa
adc
adc
xchg
fs
out
push
push
sbb
adc
testb
mov
out
addr16
cmc
es
inc
cmpsl
aas
fwait
inc
test
insb
out
es
inc
daa
fs
aas
aaa
addr16
adc
push
adc
ljmp
bound
aas
ss
rorl
push
xchg
gs
xchg
push
xchg
xchg
imul
xor
pop
les
fwait
inc
push
data16
pop
dec
jo
test
cmp
cmpb
test
add
inc
jbe
xchg
addr16
jl
mov
cwtl
adc
mov
popf
push
add
movb
push
push
nop
and
push
sbb
adc
ja
cmp
or
aam
int3
mov
inc
fiaddl
inc
jl
add
mov
sti
gs
ds
xchg
push
xchg
les
cmp
gs
push
push
gs
xor
sbb
aam
push
push
xchg
adc
or
mov
jecxz
dec
inc
lds
test
mov
pop
sahf
je
pop
dec
cmpsb
insl
fbstp
cmpsl
inc
jge
inc
xchg
jbe
notb
xchg
nop
jnp
mov
mov
pop
inc
je
and
inc
imul
movb
xchg
adc
je
push
lea
push
or
push
out
xchg
int3
or
cmpsb
mov
xchg
loop
mov
mov
aam
push
adc
test
das
into
mov
dec
subb
inc
add
cld
push
and
test
lahf
adc
into
ss
push
push
add
iret
adc
sub
aaa
adc
inc
inc
add
push
aaa
imul
add
mov
jne
jecxz
ds
andl
out
and
aaa
daa
and
sbb
test
iret
inc
inc
das
jnp
ds
insb
mov
dec
ljmp
xchg
sarb
and
pusha
push
psrad
pushw
loop
sub
push
lods
push
loop
stc
inc
push
sub
testb
mov
fdivrl
ds
pop
cmp
bound
xor
lock
in
add
xchg
mov
dec
cld
sbb
cmpsw
test
movsl
imull
cmpsb
outsl
popa
movsl
pop
dec
mov
outsl
jae
adc
loopne
movsl
inc
ja
in
jmp
push
cmp
inc
xor
out
jbe
out
adc
pop
aaa
stos
addr16
dec
pop
daa
pop
ja
movsl
mov
cs
fstl
hlt
outsl
xor
arpl
xor
xchg
xchg
push
in
pop
inc
arpl
ds
int3
pop
ja
add
ss
jbe
stos
add
icebp
fimuls
ja
add
or
daa
mul
push
inc
xchg
stos
xchg
cmpsb
fisubs
push
sbbb
daa
xor
js
or
adc
xlat
popf
ss
adcl
pop
bound
pop
lcall
test
jg
xchg
ja
or
fs
xchg
xor
push
mov
ja
xor
mov
dec
xchg
cmpsl
addr16
xchg
add
jbe
movsb
das
out
xchg
aam
imul
loopne
push
pop
test
or
dec
xor
dec
xchg
ds
jno
push
negl
pop
cmc
push
lods
add
jb
or
scas
jl,pt
cmp
outsl
je
ljmp
roll
push
notl
jle
push
mov
cmpsl
in
ds
aaa
dec
adc
clc
and
xchg
pop
inc
roll
xchg
xor
xchg
shrb
mov
dec
mov
pop
out
pushf
push
cmp
movl
cmp
psubd
push
dec
push
jl
xchg
mov
jne
adc
cli
push
jmp
cmp
stos
jp
lds
hlt
xlat
mov
pop
in
fiaddl
gs
xor
add
mov
xchg
imull
xor
and
cmp
and
adc
xchg
aaa
into
out
push
fiadds
dec
lret
das
out
inc
push
incb
pop
xchg
cmpsl
mov
test
out
push
cmp
mov
lods
es
fbstp
inc
xchg
arpl
hlt
push
cmpsb
lcall
pop
pop
sub
inc
or
fs
lret
ljmp
add
cvtps2pd
imul
or
push
insl
jp
or
into
aam
fstl
inc
dec
cmp
jmp
and
xchg
mov
sub
cmp
mov
cmc
in
das
inc
mov
push
hlt
mov
cmpsl
ss
scas
sub
scas
ja
mov
stc
jbe
hlt
movsb
xchg
push
test
sub
push
sub
in
cld
loop
subl
lods
mov
cltd
test
jne
das
insb
or
aas
push
or
ja
xchg
mov
loop
mov
test
mov
mov
fildl
pop
push
dec
push
ds
adc
push
orl
xchg
insb
ficoms
in
les
dec
ds
inc
pop
sub
push
cmpsb
loop
xchg
dec
ds
lcall
pop
dec
lea
mov
mov
pop
ror
loop
xchg
push
fdivp
xchg
xchg
nop
ljmp
push
out
notl
mov
addl
jecxz
cmp
mov
and
inc
pop
push
inc
cld
push
mov
jle
push
mov
out
divl
add
pop
lock
xchg
shlb
push
outsl
aas
call
fs
jae
out
mov
inc
das
xchg
dec
testl
xchg
ret
rclb
mov
lods
add
cmp
push
dec
xor
xchg
addr16
xchg
lods
test
out
pop
xchg
inc
adc
add
or
bswap
cmpsl
rcrl
imul
mov
push
lret
loop
call
dec
push
cmpsl
add
ret
mov
lahf
cmpsl
jmp
dec
pop
push
inc
outsl
push
insl
pop
xchg
movl
mov
mov
cmc
popf
jo
subb
lods
mov
scas
ja
ds
ja
aaa
mov
mov
xchg
add
mov
cmp
pop
pop
into
inc
pop
push
outsl
inc
in
test
shl
int3
insl
es
xchg
mov
pusha
aaa
mov
and
clc
loop
aad
popa
daa
loopne
cmp
pop
and
mov
xor
dec
pop
mov
push
ja
inc
sub
mov
jbe
fiadds
outsb
push
xor
push
popa
inc
mov
test
jp
pop
jmp
cmp
out
hlt
add
lods
pop
in
and
add
push
or
arpl
aaa
loop
mov
push
mov
test
push
aas
xor
insb
add
in
testb
decb
adc
shll
imul
arpl
pop
xchg
and
pop
in
mov
inc
xchg
cmc
pop
stos
mov
fnsave
xchg
test
xchg
xchg
les
pop
inc
pop
jmp
jecxz
pop
in
xchg
xchg
aas
addl
sub
ret
stos
jp
and
shll
add
outsl
and
xchg
addr16
ret
xor
iret
cmc
popa
cld
cmp
mov
push
jne
idivl
adc
dec
mov
cmp
xor
push
cmp
push
jge
add
push
in
xchg
xchg
and
pop
xlat
push
xor
daa
add
add
ja
push
addr16
add
ror
fimull
mov
call
mov
xor
sub
pop
xchg
and
and
out
xor
out
xor
adc
shrb
push
add
out
and
dec
xchg
fsubp
addl
inc
push
mov
ja
mov
sbb
jecxz
bound
sbb
enter
xchg
xchg
adc
stos
dec
test
and
jge
or
cs
nop
and
iret
xchg
inc
fs
adcl
int3
push
adc
inc
sub
ljmp
add
popf
ss
xchg
jmp
adc
pop
xor
mov
inc
mov
addr16
cmpsl
mov
xchg
mov
pop
push
xchg
out
sbb
pushl
and
adc
popl
stos
andb
in
adc
es
inc
xchg
imul
into
insl
ja
inc
add
push
loop
inc
out
mov
sbb
mov
test
outsl
add
gs
pop
into
in
inc
out
xchg
pop
adc
fmull
push
mov
adc
loopne
mov
pop
aaa
mov
fmull
je
test
bound
and
pushf
sub
sub
cmp
add
mov
jae
xchg
add
int3
mov
sbb
add
mov
xor
fidivl
push
and
and
repnz
sbb
adc
lahf
add
inc
iret
push
xor
sbb
in
inc
adc
rolb
test
fdivrs
pop
cltd
cmp
and
push
es
mov
popf
mov
adc
in
icebp
sub
out
mov
addb
sub
xor
lret
jae
dec
sahf
mov
xor
sbb
jb
in
and
add
out
push
ret
xlat
xlat
scas
and
push
xchg
mov
ss
add
scas
scas
fidivl
push
daa
push
push
es
mov
or
or
out
and
mov
fisubrl
xchg
cs
out
stos
gs
mov
aad
jle
jg
add
xor
jns
xchg
pop
jle
out
mul
hlt
mov
bound
mov
divl
ficomps
imul
out
adc
pop
xchg
js
in
jl
hlt
out
cmp
gs
sbb
data16
inc
push
aad
adc
fists
cltd
mov
xor
ret
lds
mov
lcall
add
mov
mov
cmp
pop
shl
pop
hlt
adc
rcrb
sub
stos
xchg
nop
xor
and
rcr
rol
test
or
les
fstl
push
inc
movl
outsl
popf
cld
inc
xor
addb
mov
dec
clc
mov
jbe
jbe
loopne
and
pop
int3
lea
in
hlt
fdivs
xchg
adc
xchg
std
push
pop
mov
sbb
mov
popa
jmp
aas
enter
sbb
movsb
cmpsl
sar
adc
xor
xchg
mov
push
cs
pop
decl
mov
dec
mov
in
aaa
push
bound
and
xor
adc
xchg
fidivrl
jl
xchg
lahf
aad
dec
push
pusha
mov
adc
xor
aas
loope
jmp
fs
push
push
mov
hlt
sub
cmp
les
pop
mov
dec
out
dec
jge
jnp
pop
aaa
and
data16
out
xchg
les
xchg
sbb
or
inc
aaa
aad
ds
fimuls
xor
mov
stos
fs
or
das
add
cmpsb
lea
xor
xchg
cmc
fwait
outsl
dec
daa
out
sbb
in
xchg
das
jo
push
mov
pop
in
nop
xor
xor
stos
cld
pop
push
jecxz
push
es
bound
push
ficomps
fisubl
out
adc
or
nop
cmp
stos
stos
aaa
hlt
pop
lcall
pop
jne
push
inc
push
and
ja
adc
insl
mov
adc
xchg
jbe
enter
jno
outsb
addr16
es
test
xchg
adc
jb
ljmp
repz
sub
push
mov
je
outsl
xor
cmp
jle
insb
xlat
addr16
xlat
ja
sahf
mov
push
cmpsb
pop
jle
daa
mov
std
out
xor
imul
dec
lea
psllw
dec
or
push
inc
dec
adcl
adc
fstpt
fists
loop
or
xlat
imul
scas
xchg
push
push
lds
mov
cvtdq2ps
mov
pop
insl
adc
inc
inc
dec
inc
mov
stos
sbb
ss
dec
jp
inc
test
pop
xor
fsubrs
xor
mov
mov
push
out
popf
mov
cmpsb
adc
add
bound
cmp
jns
inc
ja
jbe
mov
inc
pop
add
pop
inc
pop
push
or
inc
das
imul
shl
inc
cmp
call
ds
push
pop
mov
xchg
mov
idivb
or
dec
test
pop
dec
jg
or
setne
jns
test
pop
pop
notl
jmp
jbe
inc
adc
into
add
push
sub
add
in
and
dec
mov
aaa
aaa
or
mov
and
into
pop
fistpll
sahf
mov
add
notl
dec
outsl
inc
test
pop
inc
xchg
cld
es
pushf
push
adc
out
cli
xor
xchg
push
and
xor
mov
pop
rolb
das
out
negl
dec
sub
adc
dec
addr16
dec
ss
push
jne
add
in
pop
cmp
dec
mov
test
xchg
popa
dec
ds
aas
and
sbb
xchg
add
lret
xchg
jmp
out
adc
xchg
push
xor
daa
xchg
inc
in
push
mov
ja
xchg
pop
sbb
and
hlt
aad
jg
out
hlt
jbe
pop
push
sub
icebp
hlt
cmp
pop
push
xchg
or
je
mov
xor
hlt
and
sbb
mov
rcll
sti
pop
pop
into
movsl
mov
movsb
insl
scas
popa
push
inc
ret
sub
in
lds
jecxz
pusha
xchg
sub
ret
fdecstp
in
data16
daa
mov
mov
xchg
pop
ss
pop
orl
mov
stos
cmp
sti
xchg
clc
inc
mov
aaa
pop
xor
push
pop
ja
push
ja
adc
or
xchg
jmp
mov
push
dec
inc
repz
pop
mov
push
out
and
push
xchg
inc
sti
cmpsl
push
fwait
popl
add
cmp
hlt
aad
add
dec
and
aaa
stc
add
xlat
out
loopne
xlat
xchg
push
and
xor
mov
vsubps
fwait
add
enter
test
jb
and
add
add
cmpsl
popaw
add
in
loop
out
mov
push
and
xor
mov
jge
daa
and
cs
inc
dec
adc
ljmp
jne
and
xlat
call
jne
out
mov
push
sahf
xchg
data16
pop
sub
daa
adcl
in
inc
xchg
data16
jbe
lcall
ljmp
test
int3
aaa
popf
mov
push
dec
dec
mov
adc
gs
jnp
push
xchg
cmpsl
aad
popf
imul
pushf
jne
ss
mov
and
jecxz
xlat
ljmp
adc
dec
or
cmpl
addr16
or
push
push
jecxz,pt
push
adc
cmpsb
dec
iret
out
xor
push
jns
adcl
or
addr16
test
inc
cmp
nop
mov
aas
out
push
ja
addr16
imul
ja
cmpsb
mov
push
testl
mov
push
adc
dec
inc
ss
aaa
push
inc
push
test
xor
pop
pop
inc
add
stos
into
xchg
or
inc
dec
test
xchg
inc
mov
jg
push
fiadds
es
cmp
mov
push
addr16
mov
xchg
xchg
push
aam
sahf
outsl
xor
jg
cltd
mov
xchg
popf
addl
aad
xchg
mov
cmc
das
push
push
push
mov
stos
pop
cmp
jle
orl
aas
push
mov
cltd
push
mov
movsl
and
jne
xchg
xchg
addr16
aaa
push
push
mov
inc
aaa
faddl
sub
scas
aaa
mov
xlat
xchg
cmp
in
push
inc
ret
es
sbb
test
cmc
out
xor
cmp
loop
lsl
insb
loopne
sete
fwait
xlat
xchg
or
xor
sbb
cmpsl
mov
dec
xor
es
push
lds
pop
fldt
iret
and
imul
mov
and
iret
mov
ja
lea
adc
xchg
dec
inc
xchg
lahf
in
mov
xor
pop
lds
xor
cmpsb
iret
in
aaa
ss
xchg
cmpsb
jne
sbb
xor
sub
jp
fwait
adc
xchg
xchg
testb
movsb
in
adc
xchg
push
inc
push
sub
mov
pop
daa
ret
out
xchg
jbe
aas
lahf
scas
sub
arpl
sub
xchg
push
mov
fwait
adc
inc
and
pop
xchg
and
cmpsb
sarb
and
repz
xor
ffreep
shl
scas
mov
push
and
jb
cmp
cmpsl
pusha
mov
jp
outsb
and
ja
jmp
mov
repnz
add
adc
fwait
mov
pop
jecxz
add
xchg
mov
test
jno
testl
lea
xchg
push
lds
xchg
mov
movsl
pop
ja
pop
out
jnp
into
pop
insl
xchg
pop
insl
and
je
daa
sub
rcrl
setne
sbb
bound
dec
fwait
hlt
and
xor
inc
inc
jmp
adc
int3
mov
add
mov
xlat
xchg
xchg
ficompl
sbbl
andps
push
jns
pop
aaa
orb
pop
dec
push
pop
push
cmpsb
xchg
aaa
mov
dec
out
xchg
stc
cmpsb
pop
orb
idivb
and
pop
inc
daa
adc
inc
mov
inc
flds
jge
inc
xor
outsl
addb
inc
call
jle
xor
xchg
idiv
rolb
mov
xor
imul
xchg
cmc
cmp
mov
xlat
imulb
or
testl
dec
test
loopne
dec
inc
test
fstl
dec
mov
getsec
and
push
roll
and
or
or
iret
addr16
and
cli
mov
pop
mov
push
ss
dec
mov
jecxz
cld
gs
push
cmp
sar
movsb
pop
inc
imul
test
push
out
mov
outsl
mov
jmp
fidivl
fildll
sub
frstor
outsb
push
jno
aaa
dec
and
and
sbb
xchg
movsl
xchg
filds
scas
or
gs
sbb
hlt
adc
popw
push
mov
push
and
cld
enter
and
sbb
ja
sbb
jp
imul
loop
sahf
les
xchg
xor
adc
inc
mov
and
xor
cld
xchg
inc
push
push
mov
es
les
in
add
sub
mull
mov
pop
cmc
jo
stc
loop
scas
cld
stos
outsl
gs
les
aaa
add
mov
xor
push
jo
bound
lret
rcll
into
xchg
cmp
inc
push
cmp
xchg
sahf
dec
adc
cmpsl
push
mov
push
packuswb
mov
xchg
dec
inc
and
insl
xchg
pop
pop
mov
lcall
cmp
inc
adc
outsb
push
and
testl
sub
aad
stos
sbb
pop
data16
in
cmp
dec
add
add
lahf
xchg
mov
mov
pop
pop
sbbl
inc
into
pop
aas
jge
jno
cmc
mov
imulb
jle
mov
nop
push
cmp
xor
ja
daa
sub
jbe
mov
and
int3
pop
jge
sahf
mov
xchg
hlt
popf
xchg
fdivs
ds
into
xor
movl
sbb
add
cmpsb
push
xlat
test
cli
cwtl
xor
clc
addl
ja
ss
jno
ret
bound
ss
pop
divl
mov
mov
addr16
ja
xchg
das
jo
movsl
inc
adcb
jp
sub
imul
dec
dec
aad
inc
insl
mov
es
js
testl
jle
inc
pop
ss
pop
pop
bound
mov
pop
jle
and
push
subps
bound
xor
add
cli
adc
pop
add
lea
adc
iret
divb
or
into
hlt
adc
sub
ljmp
lock
cmp
add
inc
push
mov
push
mov
das
and
sbb
test
push
das
mov
out
inc
scas
mov
in
cmp
jp
aad
aas
ret
push
arpl
jmp
ret
inc
in
jne
push
add
inc
and
pop
popf
xchg
jp
sub
mov
sbb
ss
mov
dec
pop
aas
movsb
imul
adc
pop
pop
push
lret
inc
sub
dec
dec
inc
ljmp
ja
call
ds
ljmp
inc
inc
adc
aaa
mov
testl
loope
pop
add
add
sub
mov
popa
sbb
daa
es
pop
dec
mov
imul
or
outsb
adc
and
xlat
inc
rcr
adc
dec
stos
xchg
out
dec
stos
test
dec
stos
addw
or
xor
addl
inc
jge
inc
pop
add
jns
xchg
add
add
xchg
fwait
add
inc
insb
es
push
xchg
pop
mov
or
sbb
sbb
adc
pop
push
xchg
ret
or
bound
ret
in
test
int3
and
adc
aaa
aam
mov
mov
icebp
lret
cmpsl
sbb
jle
inc
adc
sbb
pop
mov
notl
xor
mov
inc
sbb
out
loop
dec
in
mov
mul
xchg
adc
xlat
outsb
mov
add
pop
add
mov
mov
xchg
sub
inc
ljmp
pop
mov
and
inc
mov
and
dec
scas
push
jge
movsl
mov
test
push
xchg
dec
dec
push
das
xchg
xor
xchg
jle
es
or
xchg
xchg
cmpsl
scas
mov
jle
pop
ljmp
sbb
cmc
notb
test
mov
aaa
and
scas
inc
push
xchg
xor
cli
ret
jle
inc
mov
dec
sbb
push
fisubl
mov
movsl
idivb
mov
das
mov
xor
jg
jbe
les
add
shlb
cmpsb
ljmp
xchg
jp
nop
xchg
mov
dec
lahf
inc
xchg
add
add
xchg
xor
jb
or
push
push
and
mov
push
push
imul
or
ss
jp
push
lcall
push
dec
lahf
lds
push
add
push
pop
xchg
and
fbld
push
add
pop
push
out
mov
imul
ds
daa
mov
movsl
ja
sahf
ret
xchg
mov
ja
dec
push
inc
add
fisubs
inc
push
adc
jge
movsl
xchg
pop
xorl
add
or
push
insl
daa
xor
xor
lds
add
fcmove
sbb
jne
repnz
aas
sahf
inc
cmpsl
mov
leave
inc
test
lea
data16
push
xchg
ljmp
push
xchg
ljmp
mov
xchg
sub
dec
scas
xor
stos
lret
inc
push
mov
aaa
sbb
push
xchg
rclb
ja
shlb
mov
sbb
loop
ja
mov
data16
addl
aaa
outsb
sbb
out
xchg
inc
ss
fidivrl
fwait
push
cmpsl
daa
dec
test
cmp
xchg
mov
gs
lds
inc
cmpsl
xor
stos
cmp
sbb
xor
in
push
dec
xor
sbb
push
out
lret
inc
popf
in
aas
fidivrl
mov
ljmpw
ret
or
inc
inc
inc
sbb
ljmp
lret
ljmp
or
mov
fs
insb
adc
push
xchg
inc
jbe
jg
and
fisubrs
and
cwtl
push
mov
mov
add
dec
add
pop
mov
jb
or
insb
sti
movb
push
and
jp
pop
pop
test
xorl
lods
incb
out
mov
scas
lcall
mov
mov
inc
sbb
sub
in
pop
sahf
and
mov
lods
stos
bound
mov
jns
mov
rorl
stos
ds
mov
adc
dec
add
arpl
cmpl
pusha
adc
mov
xor
outsl
fmuls
pop
aad
push
fidivrl
push
outsb
lret
loop
pop
test
push
cs
inc
je
adc
xor
jp
daa
scas
out
sahf
xor
movl
adc
mov
cmp
lahf
adc
js
mov
inc
addr16
ds
xlat
jno
gs
push
xor
add
inc
outsl
andb
and
push
aam
loop
jmp
add
out
mov
jmp
cmpb
xchg
aaa
push
mov
mov
and
leave
jg
sbb
and
inc
xchg
je
roll
cmpsb
sbb
mov
jbe
mov
sub
mov
insb
xor
aaa
jo
cmpsb
inc
inc
pop
aaa
mov
mov
daa
pop
cmpsb
mov
xchg
out
cwtl
push
inc
jno
pop
xchg
mov
dec
test
add
pop
inc
mov
mov
out
lea
daa
lcall
cmpsl
dec
cli
outsl
enter
aad
mov
mov
mov
daa
and
pop
xor
push
or
jbe,pn
push
add
aaa
xchg
xchg
pop
push
popa
inc
lock
notb
cmp
sub
mov
fildl
imul
in
jmp
das
inc
loop
cs
and
push
into
pop
es
ljmp
adc
pop
and
cmpsb
addr16
aaa
aaa
push
pusha
cmpsb
ljmp
and
sub
hlt
out
and
xchg
mov
mov
ss
jp
addr16
and
rcll
pop
in
add
mov
jbe
rol
push
xchg
inc
or
pop
ds
push
push
jmp
pusha
pop
ds
cmpsl
xchg
sbb
jae
movsb
cltd
and
out
cs
lea
lcall
dec
sub
data16
insl
insl
xor
sub
inc
out
mov
es
hlt
pop
pop
out
stos
xchg
push
inc
stos
aaa
dec
xchg
int
aaa
inc
clc
xlat
xchg
notb
pop
mov
push
mov
xlat
dec
adc
ja
imul
sub
gs
gs
inc
lcall
push
out
mov
cs
mov
push
and
lds
mov
mov
jmp
mov
stos
dec
mov
iret
sub
mov
dec
lods
mov
clc
mov
pop
dec
enter
lods
repz
and
stos
and
notb
sub
notrack
adc
clc
jle
int
ret
mov
fdivl
jle
lods
lret
addl
and
sbb
sub
dec
xchg
std
inc
push
add
add
add
push
cmp
aas
sub
hlt
pop
push
adc
pop
out
pop
add
dec
mov
out
and
cli
and
insb
iret
sub
pop
mov
movsl
pop
xchg
out
fdivl
pop
pop
mov
ja
adc
xorl
jno
aam
es
jl
push
sub
ja
movsl
push
test
fdivrl
xchg
popa
lds
mov
shlb
imul
daa
dec
outsb
and
daa
pop
fdivs
cmpsb
or
xor
daa
mov
lea
test
adc
add
dec
loope
xchg
mov
andb
outsl
cmpsl
inc
orl
xlat
rcl
pop
jle
lcall
addr16
sub
xchg
cmpsb
or
xor
jbe
leave
es
mov
lea
es
add
dec
sahf
pop
mov
pop
mov
bound
xlat
cmpsl
in
push
push
insb
out
mov
or
and
xchg
nop
ret
push
imul
jle
push
push
and
fdivp
lret
popf
cmpsl
es
push
push
shrb
and
cmp
andb
negl
divl
lcall
jno
insl
and
mov
aam
fisubrl
inc
movsb
lahf
divb
aaa
xchg
into
cltd
pushf
dec
addr16
daa
push
cmp
xchg
jmp
aad
mov
jbe,pt
mov
mov
repnz
xor
sbb
push
movl
xchg
pop
out
ja
ja
ss
outsl
pop
into
daa
lcall
aas
lods
aam
scas
out
dec
imul
dec
xor
lret
adc
jns
fwait
xchg
ja
imul
das
jp
sub
xchg
ljmp
arpl
enter
fdivs
das
movzwl
sahf
xor
ja
inc
lcall
pop
jg
movl
nop
add
outsl
and
ljmp
push
pusha
addr16
push
ss
testl
jp
cli
rol
add
rcrb
jne
add
xchg
mov
xor
out
xlat
jbe
data16
out
jecxz
or
shlb
into
add
xchg
xor
mov
jae
xchg
sbb
bound
xlat
dec
testl
ja
push
mull
ds
dec
and
bound
xchg
add
mov
mov
loopne
gs
ret
or
ficoms
cs
movsb
pop
inc
roll
or
xchg
push
bound
mov
pop
notl
xchg
movb
jp
sahf
cs
jne,pn
xchg
sub
es
mov
push
xchg
or
push
adc
mov
adc
xchg
add
sub
inc
mov
add
xor
aaa
divl
adcb
mov
push
cmpsb
xchg
iret
inc
inc
and
insl
xor
stc
pop
dec
test
mov
ficoms
iret
in
inc
cmpsl
je
stos
add
out
adc
out
dec
lds
cmp
push
push
dec
pop
xchg
dec
enter
add
mov
inc
and
pop
push
cmc
idivl
jge
jns
inc
test
sbb
addb
mov
enter
xor
movsb
mov
cltd
movsb
and
insb
add
je
cs
mov
lret
or
movsb
pop
xchg
insb
xchg
ss
inc
cbtw
pop
or
xchg
inc
xor
inc
jle
add
pop
sub
popf
inc
ss
pop
lret
aaa
mov
sub
inc
or
aaa
xchg
jo,pn
movsl
push
pushf
push
sub
cmpsb
xor
dec
dec
xchg
rcrl
addr16
test
nop
sub
test
dec
add
nop
ds
xchg
inc
push
xchg
daa
inc
lods
mov
mov
mov
shll
shrl
cwtl
and
adc
lahf
inc
fisubl
ret
outsl
xor
ss
dec
dec
push
aas
pop
fidivs
ja
xor
sub
push
inc
bound
movsb
push
or
les
stos
dec
mov
pop
pop
jmp
mov
daa
mov
mov
dec
out
dec
lods
inc
jle
pop
pop
ja
mov
xchg
mov
jbe
pop
push
xor
ja
mov
outsl
scas
pop
inc
add
pop
shl
xor
aaa
xlat
es
inc
jnp,pt
push
and
xor
ja
pop
push
push
adc
addb
jmp
es
jb,pn
dec
mov
fs
fiaddl
out
int3
inc
pop
mov
das
mov
push
cmp
dec
les
push
std
pop
push
mov
adc
and
sbb
idivl
lods
pop
pushf
inc
or
sub
cltd
addr16
jbe
or
sub
das
int
aam
adc
int
or
mov
xor
data16
scas
sbb
loop
xchg
aas
inc
repz
push
mov
adc
and
xchg
mov
mov
inc
jb
xor
push
adc
lods
jbe
push
pop
inc
roll
je
into
push
sarl
andl
push
xchg
idivl
roll
xchg
sahf
pop
sarl
outsl
pop
xlat
out
xor
aaa
adc
insl
mov
xlat
dec
cmp
pop
outsl
push
mov
sbb
test
inc
push
push
inc
ds
out
mov
aam
mov
sub
mov
jle
fistps
test
jecxz
add
pop
std
jecxz
mov
or
add
sub
adc
test
mov
dec
dec
xchg
cmp
lea
fwait
xchg
and
sahf
xor
test
outsb
scas
mov
dec
adc
xor
push
es
and
pop
mov
rcll
inc
add
adc
movsb
mov
popa
and
mov
pop
inc
or
push
outsl
push
notl
ret
scas
data16
test
popf
ja
cmp
cpuid
add
cmp
add
dec
add
fs
stos
dec
rcll
push
and
pop
add
and
dec
int
xor
aam
inc
stos
xchg
pop
xchg
in
xchg
leave
movsl
lea
jne
roll
xchg
loope
jg
fwait
stos
xchg
xchg
pop
mov
or
aaa
push
test
jecxz
pop
sub
and
das
popf
data16
adcb
mov
ljmp
push
das
push
daa
add
pop
ja
xchg
pop
and
imull
dec
jl
es
fidivrl
push
es
cmp
pop
pusha
xor
inc
lds
cmp
daa
inc
mov
mov
mov
cs
mov
insb
punpckhdq
xchg
inc
aaa
xchg
mov
pop
ja
mull
lea
addr16
frstor
testb
xor
into
or
out
push
dec
inc
pop
push
cmp
out
pop
popf
gs
mov
pop
das
xchg
ja
dec
cmpsl
test
add
sbb
xchg
push
outsl
jns
ja,pt
push
add
mull
lcall
ss
pop
inc
push
inc
test
push
int3
mov
mov
cmpsb
push
addr16
add
cmp
or
adc
pop
test
xchg
and
mov
xor
pop
and
add
psrlw
xor
mov
dec
dec
cmpl
mov
bound
test
cmp
out
aad
mov
jno
ljmp
mov
push
xchg
jbe
push
testb
aam
xchg
in
adc
imul
lret
mov
adc
and
divl
inc
cwtl
pop
cltd
pop
pop
rclb
adc
mov
bound
mov
xchg
jecxz
lds
cmpsb
push
push
fisubs
jp
les
pop
mul
cmp
jp
mov
filds
lret
in
test
out
mov
mov
test
test
push
sub
out
mov
push
mov
div
cmp
and
aad
fsubl
pop
adc
data16
movsl
cli
push
dec
cmpsl
inc
pop
bound
pushf
inc
jbe
sar
and
test
xor
mov
mov
xchg
pop
pusha
dec
dec
add
lea
cltd
out
adc
jno
and
pop
outsb
cmpsl
test
mov
cli
aaa
add
inc
mov
xchg
push
or
gs
push
test
out
pop
loopne
mov
dec
inc
gs
movsl
cmpsl
xor
add
shll
xor
dec
jno
icebp
xor
stc
dec
shll
dec
std
sbb
sbb
imul
cmpsl
xor
rorb
xor
or
mov
pop
scas
xchg
fwait
stc
fmulp
out
jmp
adc
ds
pop
mov
and
rcrb
pop
xchg
test
imul
mov
jbe
jmp
push
mov
pop
push
inc
add
sub
push
negl
or
es
push
sub
pop
push
adc
jecxz
popf
xchg
sbb
xchg
cmp
or
mul
lcall
sub
sbb
stos
dec
push
sbb
sub
sbb
and
mov
mov
lret
fs
icebp
mul
xchg
mov
push
adc
jae
sbb
dec
imul
testb
test
lcall
out
lds
xchg
sbb
inc
ret
ss
aam
in
je
sub
outsl
mov
mov
push
jmp
push
mov
pop
daa
mov
mov
subb
movsb
add
das
push
cmc
sti
mov
xlat
out
jne
ja
push
in
mov
ror
or
pop
loop
xchg
mov
outsl
divl
xchg
xlat
psllq
imul
lds
jne
pop
add
scas
xor
dec
popa
mov
daa
mov
rorb
and
dec
ret
jmp
xchg
push
das
lcall
addr16
xchg
ja
inc
jne
xor
cmc
xchg
popf
xlat
cmp
mov
aaa
push
or
lahf
xor
add
repnz
cmc
lsl
and
mov
xlat
xchg
sbb
andb
ja
adc
jae
xchg
ret
pop
jp
out
testl
mov
pop
movb
or
or
jne
dec
notl
movsl
xor
pop
mov
add
inc
int
xchg
sub
mov
and
adc
sbb
inc
das
cmpsb
and
dec
or
ret
ja
cmc
fndisi(8087
and
adc
add
mov
repz
pop
pop
xchg
ja
pop
mov
and
cmc
inc
ret
testl
jb
xchg
xchg
mov
pop
lret
btr
add
and
cmp
fisttpll
sbb
add
adc
lret
xchg
push
cmpsl
sbb
inc
ljmp
mov
popa
xchg
test
daa
push
daa
fwait
mov
ret
cmpsl
mov
mov
arpl
mov
xor
popa
je
out
orb
aas
or
in
push
push
pop
add
xchg
push
lcall
sbb
mov
lahf
test
adc
jbe
xor
aad
ss
xlat
adc
inc
lret
jge
inc
jmp
imul
imul
test
es
aaa
adc
or
scas
inc
pusha
add
mov
ja
mov
dec
mov
adc
push
xor
inc
or
scas
mov
daa
xchg
addr16
xchg
stos
shlb
iret
xor
push
add
add
outsl
push
add
xchg
mov
test
and
xor
push
xchg
mov
mov
or
cmc
and
pop
push
out
or
xchg
rclb
xchg
fwait
outsb
inc
inc
lahf
dec
xor
shll
ret
push
popa
adc
mov
or
xchg
push
cs
sysexit
pop
push
add
inc
jecxz
inc
aaa
pushl
cmp
aad
pop
push
ss
xor
sub
call
xor
daa
push
ficoms
cmp
add
jne
jmp
lcall
pop
bound
add
jle
xor
add
push
out
jg
enter
xchg
jns
faddp
ffreep
or
push
nop
fstpl
getsec
ret
mov
test
add
mov
ds
pop
aad
mov
das
into
push
stc
ss
xchg
fimull
in
div
shrl
inc
mov
mov
inc
mov
mov
lods
sub
add
cmpsl
push
movsl
mov
ja
rorl
in
lock
xor
mov
lds
cmp
xchg
push
jno
jb
out
repnz
imul
push
xchg
stos
popl
jnp
mov
mov
pop
xor
cmp
ret
pop
mov
mov
xchg
das
gs
hlt
jmp
test
insb
hlt
mov
ljmp
mov
loopne
divb
arpl
imul
or
pop
mov
add
mov
sbb
cmp
movsl
scas
clc
jecxz
add
dec
mov
mov
inc
das
aad
les
insb
aas
mov
aad
mov
das
jp
mov
cli
leave
add
js
pusha
ss
insb
adc
or
mov
xchg
test
mov
enter
mov
cmpl
add
ror
pop
imul
cmc
add
cmpsl
pop
scas
add
mov
test
aas
jo
mov
lds
or
xor
push
in
popa
ljmp
add
das
xor
inc
or
xchg
pushl
movsl
pop
popa
cmp
sahf
or
mov
xchg
stos
mov
cmp
sub
testb
lahf
ljmp
add
imul
insl
sarb
out
xor
hlt
inc
mov
add
adc
cmc
sbb
jle
lret
sbb
ret
addr16
add
out
mov
fwait
jb
call
fistl
cld
inc
jge
jmp
repnz
or
hlt
daa
pop
mov
and
add
dec
test
jo
div
pop
sbb
popf
addr16
pop
jle
lcall
mov
ss
lods
mov
je
jno
iret
icebp
add
shl
push
pop
push
clc
outsb
push
decb
adc
aam
jge
and
fucomp
hlt
inc
loopne
push
movsl
ja
jecxz
push
aad
xor
scas
adc
ja
cmp
ja
push
mov
movsl
push
or
mov
xchg
jbe
outsl
mov
cltd
idiv
sbb
jo
sub
cmp
das
out
inc
xchg
mov
and
sar
cmc
adc
loopne
xor
xchg
add
and
and
sbb
rcll
jne
out
cmovo
inc
es
dec
fcomps
ljmp
movsl
push
push
xlat
push
roll
in
mov
pop
mov
sbb
xlat
mov
jmp
cmp
sub
push
aaa
dec
daa
lcall
es
inc
pusha
add
mov
adc
sbb
cmp
xchg
sbb
testb
and
pop
dec
xchg
test
and
jnp
adc
sub
push
jnp
xor
dec
jbe
insb
add
int
inc
arpl
imul
movsb
outsl
add
mov
clc
rcrl
or
roll
xchg
imul
mov
aad
or
pop
das
sub
iret
xchg
jae
loope
repz
sti
inc
and
cld
dec
add
cmp
add
mov
addr16
das
or
mov
xor
out
inc
push
mov
mov
repnz
cmp
shlb
shll
pop
ja
add
pop
add
enter
add
addr16
sbb
xor
add
out
fmuls
pop
jae
mov
sub
enter
dec
outsb
pop
sbb
sbb
add
mov
push
daa
fwait
sbb
inc
add
lods
push
jae
cmp
jnp
addr16
xchg
insb
xchg
inc
and
add
test
vpmulhw
test
dec
jns
stc
push
pop
dec
cmp
ljmp
cmp
in
enter
daa
pop
push
sbb
xor
les
mov
pop
daa
add
das
aas
fimuls
hlt
xor
pop
in
pop
fcompl
into
xor
adc
xchg
xrstors
pop
mov
mov
les
add
push
cmp
fstl
lods
add
fldenv
iret
imul
or
inc
push
je
hlt
rolb
in
dec
lods
inc
pop
lds
aas
add
popf
mov
adc
aam
iret
mov
pop
dec
adc
pop
nop
and
jmp
and
orb
das
cld
mov
andl
add
rdpmc
lret
pop
out
sbb
mov
loop
rorl
mov
stos
sbb
and
jnp
dec
pop
sub
decl
xchg
mov
and
mov
jo
sbb
fwait
pop
dec
jp
mov
pop
cmc
sysenter
inc
push
inc
sbb
dec
and
movq
dec
inc
dec
or
add
push
repz
lds
lock
adc
fldl
push
clc
add
out
aaa
jb
add
enter
mov
inc
lret
je
sbb
iret
je
cmc
jecxz
pop
push
dec
lret
cmpsl
fildl
mov
outsl
cld
fisttps
and
xchg
nop
xor
ja
dec
pop
out
xor
imul
jae
arpl
pop
add
mulb
or
mov
mov
cld
add
dec
push
push
xor
out
xchg
xchg
pop
mov
scas
sbb
aaa
jmp
scas
ret
cwtl
cmp
cmp
shlb
bound
xchg
mov
sub
ja
sbb
sbb
cwtl
in
xchg
pop
xchg
cwtl
or
pop
test
std
mov
push
inc
adc
imul
adc
pop
jl
add
incb
dec
addl
clc
pop
push
mov
jnp
inc
pop
jmp
push
jae
outsl
or
fcompl
and
arpl
mov
xchg
push
sti
jmp
or
xchg
std
mov
sbb
addr16
imul
fwait
xlat
dec
pop
out
aas
cmc
xor
stc
in
inc
aas
test
lds
jg
cmp
xor
stc
push
fincstp
push
jbe
fwait
add
push
imul
push
dec
adc
bswap
push
pop
cmp
sub
push
out
into
lds
pop
stc
sti
push
orb
dec
sbb
dec
ret
pop
in
inc
inc
in
sbb
dec
inc
in
je
xchg
cmp
pop
xchg
ret
sub
mov
inc
adc
imul
sub
xor
dec
das
pop
mov
mov
sbb
xor
xor
and
push
test
adc
xchg
pop
loop
aaa
cmp
pop
in
mov
jle
inc
pop
das
test
xor
push
je
mov
xchg
mov
mov
hlt
movsb
adc
loope
stc
sub
aaa
rolb
add
xlat
rorb
inc
daa
cmp
sub
pop
loopne
daa
notb
imul
fimull
cmpsb
xchg
aaa
xchg
or
cltd
adc
cmpsl
mov
daa
orl
sub
dec
sbb
fdivr
sub
movhps
ds
and
adc
mov
push
repz
mov
iret
inc
xchg
xchg
mov
adc
and
adc
sub
js
jbe
inc
fisttpll
icebp
aaa
cmp
adc
mov
mov
xchg
sbb
data16
sub
xor
jle
push
add
inc
inc
outsl
scas
das
mov
icebp
pop
jge
fxch
xchg
addr16
sub
jp
scas
ds
ret
outsl
cmp
mov
xchg
inc
mov
imul
mov
pop
lods
push
mov
cmp
into
fldl
mov
cmp
lods
sub
loopne
xchg
lret
mov
jg
sbb
dec
inc
mov
mov
aam
fbld
test
leave
clc
mov
insl
popf
int3
cmp
in
mov
adc
dec
dec
jae
sbb
dec
stos
mov
jb
int
pop
pop
imulb
push
test
sbb
mov
jbe
nop
or
xor
inc
rcll
push
cld
cmp
pop
mov
sbb
cmp
pop
arpl
imul
scas
outsb
sub
push
test
cs
inc
aaa
scas
inc
adc
jbe
enter
and
dec
add
mov
inc
or
aas
mov
push
daa
pushf
jbe
sbbl
dec
inc
mov
xchg
movsl
xorb
rcrl
popf
pop
xchg
pop
punpckhbw
repnz
pop
lret
push
cs
in
loope
pop
dec
cwtl
cmp
cmp
sub
add
cmp
inc
add
jg
aas
jbe
into
enter
cmpsb
sti
xlat
mov
mov
shrl
in
mov
mov
xchg
jno
adc
adc
cltd
xor
fsts
adc
aas
fisubrs
xor
dec
out
mov
test
imul
out
iret
imul
loop
or
fcomi
xchg
out
pop
imul
and
pusha
pop
add
ret
loope
push
mov
popa
jbe
and
push
mov
daa
aaa
cs
and
adc
sbb
mov
sahf
sbb
imul
pop
fcmovb
cmp
pop
ds
fs
cmp
pushf
xor
dec
aaa
pop
inc
js
inc
loop
mov
or
dec
leave
push
adc
cmpsb
sbb
xor
jbe
dec
add
pop
and
lret
jne
pop
pushf
movsl
rorl
scas
add
test
imul
and
sbb
aaa
outsb
jne
leave
or
repz
or
dec
add
pop
hlt
pop
inc
subb
inc
iret
hlt
add
pop
fwait
push
roll
push
dec
inc
mov
fisttpl
pop
hlt
leave
arpl
lahf
jmp
xchg
mov
sub
hlt
jecxz
sbb
adc
push
cmpsl
and
pop
hlt
push
pop
stos
push
bound
lcall
scas
aad
hlt
rcr
sub
loop
sbb
adc
hlt
inc
push
pop
stos
push
popa
insl
hlt
cltd
test
lods
hlt
int
vpaddusw
aad
hlt
in
or
add
sbb
adc
and
pop
inc
push
pop
test
orb
xchg
mov
add
rcr
sub
loopne
and
outsl
xchg
xsaves
inc
inc
add
shrl
push
pop
sub
hlt
pop
dec
add
add
pop
popl
inc
push
insb
imull
dec
mov
das
inc
pop
add
and
insb
cmp
or
outsb
addr16
fstpl
pop
lods
icebp
aas
xchg
aas
lret
dec
cmc
js
or
push
arpl
adc
insb
mov
aad
hlt
pop
xchg
mov
fucomi
cmp
insb
je
mov
test
hlt
sub
add
jecxz
mov
fdiv
shrb
push
in
cmp
addr16
xchg
cmc
out
les
roll
mov
push
mov
inc
fs
jecxz
or
add
mov
mov
pop
mov
out
sbb
imul
ljmp
inc
xchg
mov
lret
mov
notb
lahf
hlt
inc
jbe
lea
mov
cs
adc
sub
cli
hlt
jmp
jle
push
pop
in
lret
rcrl
sbbl
inc
adc
and
xchg
loope
hlt
pop
dec
xchg
sbb
rcll
stos
mov
rcrb
sahf
xchg
and
aas
loope
xor
sbb
nop
cmc
pop
test
aam
mov
sbb
shll
hlt
je
jle
and
inc
lock
or
movsl
xor
bound
les
push
jae
das
and
lahf
pop
shlb
repnz
mov
cmp
pop
jbe
lea
cli
cmc
or
pop
mov
iret
mov
xor
push
xor
xchg
mov
or
xchg
jg
mov
jb
fdivrl
push
xchg
hlt
lock
sarb
lret
jl
hlt
sbb
cltd
roll
mov
imul
bound
mov
dec
or
mov
lahf
sub
or
out
bound
or
hlt
aas
fcomps
stos
pop
xor
icebp
repz
negb
fists
jae
mov
pop
adc
hlt
sbb
push
out
dec
sbb
imul
jb
xor
jle
xchg
sbb
ljmp
les
xchg
mov
int
aas
lods
popa
fsubp
cmc
adc
sbb
inc
jae
jo
negl
mov
sub
out
push
clc
stos
add
in
daa
hlt
outsl
cmp
jge
hlt
mov
int3
pusha
adc
push
xor
in
push
push
loop
popa
hlt
pop
xlat
dec
and
pop
into
lret
sbb
mov
sub
into
xor
mov
mov
ss
jno
sti
lds
aas
lods
fimuls
rcrb
cli
jno
inc
hlt
ja
xchg
mov
hlt
sbb
notl
xchg
hlt
sub
das
decb
lret
aaa
out
sbb
js
outsb
fildll
lret
jno
mov
mov
aad
loop
cmp
in
lods
imul
mov
mov
xchg
fyl2x
xor
xor
outsb
dec
sbb
cwtl
push
aam
cli
mov
sub
push
xchg
mov
and
hlt
and
cmp
hlt
gs
in
int
mov
stc
movsl
push
je
fsubs
mov
lahf
imul
imul
dec
mov
mulb
aas
push
push
mov
fs
add
addr16
andl
xchg
jp
xchg
add
aam
and
sbbl
or
sbb
mov
and
lds
cmp
out
mov
lret
movsl
mov
push
and
dec
movnti
hlt
mov
dec
movsb
loopne
imul
or
or
add
dec
pushf
jae
aas
hlt
repnz
cmp
icebp
jo
adc
mov
shrl
std
push
fstps
or
add
test
mov
data16
lcall
call
outsb
xchg
adc
mov
imul
xchg
mov
xor
add
test
add
sti
mov
stos
hlt
and
and
imul
jns
loopne
sub
sbb
pop
aam
shl
push
fbstp
data16
cmp
push
push
js
test
dec
xor
push
out
adc
and
sbb
inc
insl
mov
fwait
es
adc
pop
fsubrl
rcrb
and
cmp
stos
sbb
hlt
jmp
or
hlt
pushw
cmp
cli
cmp
xchg
cmpsb
or
mov
std
dec
imul
out
fld1
mov
xchg
es
hlt
fs
push
cmp
in
cwtl
dec
arpl
movsb
jae
mov
int
out
rolb
dec
push
imul
mov
popf
xor
add
xchg
clc
divl
lea
mov
add
arpl
insl
push
test
movsb
ret
loopne
pop
popf
or
insb
hlt
sbb
sar
je
and
out
mov
mov
movsb
or
imul
je
xchg
insl
xchg
ja
loop
or
bound
pop
test
xor
mov
add
mov
cmp
outsb
mov
hlt
mov
clc
xlat
test
dec
dec
add
push
adc
je
and
and
pusha
outsl
fldenv
jns
sub
xor
add
xor
ds
mov
mov
inc
push
repz
dec
scas
popa
cmpsl
mov
mov
dec
roll
outsl
adc
push
leave
sub
sbb
cmp
std
xor
pop
cltd
mov
aaa
test
mull
jno
repnz
sub
cmp
fmull
xchg
inc
in
lcall
sbb
hlt
insb
cmp
add
mov
ss
push
subb
hlt
adc
sub
mov
hlt
pop
and
cmp
hlt
jp
testl
dec
pusha
stc
fsub
hlt
pop
mov
dec
loop
pop
test
scas
pop
outsb
sbb
push
mov
mov
movsb
push
fisubl
push
inc
add
ret
lcall
adc
mov
hlt
xchg
jge
mov
sbb
inc
lcall
cmp
fidivrl
sub
in
imul
xor
cs
imul
mov
lret
fsub
aam
pop
sarb
add
out
movsl
movsb
pop
adc
or
mov
hlt
jb
xchg
dec
orb
loop
cltd
push
sahf
hlt
dec
mov
nop
cmp
and
xor
out
mov
repz
add
pop
aas
lret
jbe
dec
xor
fistps
jle
or
mov
addr16
or
ret
mov
inc
add
hlt
loopne
mov
in
sub
and
dec
outsb
scas
mov
hlt
roll
fld
shrb
inc
icebp
dec
push
push
mov
xchg
test
and
imul
sub
out
inc
or
mov
hlt
iret
inc
mov
or
jl
xorb
dec
mov
mov
repz
or
cs
xchg
popa
sbb
cltd
push
xor
mov
rcrl
ljmp
fs
in
rorl
adc
dec
jnp
out
fldt
jecxz
jb
xor
repz
data16
inc
bound
xchg
lea
sbb
dec
pop
testb
lret
enter
repnz
jne
xor
dec
inc
stos
stos
jae
arpl
sbb
cmc
aad
ret
lret
in
ljmp
in
add
repnz
aad
sbb
mov
mov
mov
idiv
das
jo
leave
xchg
test
cmp
movsb
icebp
loop
pop
je
negb
mov
xchg
data16
mov
lahf
aaa
js
enter
pop
sbb
ja
daa
sub
xchg
enter
xor
cmp
pushl
sbb
push
sbb
and
pop
aas
pop
je
cwtl
gs
push
xchg
push
cld
aad
adc
das
repz
aaa
cmp
int3
and
lock
lahf
sbb
adc
pop
jnp
add
push
out
xor
push
out
pop
sbb
clc
and
mov
push
adc
js
xchg
aaa
cltd
mov
add
imul
stc
and
mov
das
test
cltd
leave
mov
sbbl
ucomiss
into
sbb
pop
cmpsl
sbbl
leave
push
aaa
scas
sbb
inc
pop
jnp
add
mov
dec
sbb
cmpl
movb
push
mov
xor
fwait
in
add
cmpsl
inc
push
pop
dec
xorl
aas
fcomip
pop
mov
imul
push
adc
xor
push
aaa
sub
adc
pop
in
cld
inc
movsl
insb
jnp
xchg
aaa
xor
push
aaa
iret
das
adc
inc
and
add
xchg
scas
mov
ja
les
out
adcl
ret
jg
pop
mov
cmp
das
and
fiaddl
pop
xchg
ja
loope
sbb
mull
dec
lret
outsl
xchg
mov
sbb
adc
xchg
bound
push
xor
mov
insl
xchg
jecxz
test
push
insl
outsb
xchg
xlat
arpl
arpl
aas
xchg
jle
outsl
aaa
imulb
xlat
ret
adc
bound
addr16
addr16
addr16
xchg
pop
sbb
out
jae
bound
xor
iret
sbb
dec
pop
push
data16
fldt
nop
and
and
adc
mov
cltd
stc
test
add
push
outsl
cs
xchg
pop
movsb
xchg
xchg
push
add
pop
popl
shlb
or
jle
js
sbb
mov
or
dec
imul
int3
pop
dec
mov
dec
lods
in
hlt
push
mov
mov
repz
in
lcall
mov
jno
popf
xor
fcomip
dec
jl
or
cmp
sti
fisttpll
jle
ret
push
dec
aas
push
add
sbb
add
testl
les
insl
push
cmp
mov
or
push
cwtl
stc
fdiv
cmpsl
cmpl
es
mov
hlt
dec
fs
int3
cmpl
xchg
div
rorb
pop
mov
mov
adc
shll
in
ret
sahf
fisttpll
pop
sbb
pop
in
jo
movsl
cmp
inc
les
hlt
flds
mov
hlt
aam
adcl
xchg
outsb
fdiv
mov
popa
shl
leave
adc
and
cmpsb
mov
std
dec
aaa
bound
adc
hlt
clc
popa
push
add
outsl
imul
rorb
push
mov
mov
jp
dec
pop
mov
pop
shufps
dec
or
hlt
push
pop
inc
and
leave
rolb
hlt
loop
xchg
das
outsb
add
aam
hlt
movsb
push
cwtl
repz
js
or
mov
in
nop
hlt
xor
rol
jns
outsb
hlt
fdivl
mov
pop
mov
decl
hlt
xchg
in
out
leave
insb
punpckhwd
sub
jnp
jmp
hlt
xor
jp
imul
push
ja
push
loope
fxtract
in
aad
jp
mov
mov
xchg
push
and
jmp
andb
or
mov
fwait
mov
inc
sub
test
hlt
stos
dec
jge
xor
mov
add
out
xor
sub
xor
iret
pop
out
xchg
xchg
bound
mov
test
xor
and
sbb
add
les
divb
add
push
adc
add
jbe
lods
mov
outsb
into
cmc
pop
fcomip
adc
add
aas
jne
xor
in
cld
cwtl
pop
push
test
call
bound
aad
jnp
sub
sbb
push
pop
pop
xor
and
in
in
in
push
iret
adc
sarb
mov
mov
pop
adc
aas
or
and
out
mov
arpl
or
scas
data16
add
and
sbb
bound
and
aad
or
into
aam
fs
jmp
aam
inc
es
push
push
das
mov
cltd
pop
and
or
cmp
mov
test
sub
popa
push
push
mov
call
bound
pop
dec
jp
mov
sub
bound
push
scas
cld
int
and
hlt
or
cmp
xchg
cmp
xor
mov
jbe
stc
sub
and
f2xm1
mov
or
data16
pop
inc
out
test
xor
cmp
xchg
add
cmpsl
inc
jg
int
popl
inc
jmp
fcoms
shrd
dec
jne
aam
scas
aam
fwait
loope
inc
add
aam
push
push
lret
dec
cmp
push
fs
icebp
jp
int3
fnstcw
cmp
jl
lds
inc
jnp
cmp
aaa
int3
xor
cmp
mov
stos
daa
gs
or
loope
or
in
ja
mov
dec
xchg
aaa
pop
xchg
imul
adc
or
rolw
push
dec
dec
jg
and
or
push
sbb
adc
or
add
xchg
mov
inc
test
sub
or
mov
inc
jbe
mov
sub
dec
insb
pop
int3
xrelease
mov
hlt
push
and
sub
push
imul
cmp
jle
dec
pop
cmp
push
mov
insl
or
or
mov
adc
xor
push
dec
inc
decb
inc
aaa
rcrl
dec
ret
incb
xchg
mov
imul
fiaddl
repz
aad
int3
push
fisttpll
adc
fisttpl
rcll
dec
cmp
sbb
jmp
xchg
xlat
punpckhwd
mov
fiaddl
cli
lea
movsb
pop
daa
xchg
imul
dec
jb
jp
xchg
imul
adc
loop
push
test
adc
sar
in
fidivrs
divl
add
adc
mov
jmp
adc
ss
stos
mov
lahf
test
sub
data16
xor
dec
pop
iret
sub
aad
fstl
xchg
inc
iret
cmp
popl
xor
je
push
dec
lock
insb
jecxz
mov
ja
in
ret
and
cmp
cmp
loop
or
mov
les
or
push
rcll
out
cmp
xorl
xchg
aaa
ja
leave
movsl
mov
jmp
sbb
lds
cs
mov
cwtl
dec
xchg
sbb
push
pop
mov
mov
jg
add
xchg
add
and
call
aaa
jbe
push
jbe
imul
and
mov
mov
mov
test
daa
mov
loop
mov
jecxz
jp
xchg
stc
mov
testl
jp
je
push
aaa
negb
lret
add
xchg
iret
inc
cmp
aaa
lds
fnstenv
hlt
push
and
arpl
lock
xchg
idivb
adc
fidivs
xchg
or
sub
push
jnp
xchg
fwait
imul
mov
je
mov
pop
pop
sahf
loop
mov
ds
adc
into
or
push
push
sti
sahf
mov
jp
int
mov
jne
test
jge
sarl
xor
insb
dec
les
inc
aas
push
addl
pop
cmpsl
dec
mov
das
es
pop
dec
jle
cmpsb
stc
fwait
sbb
mov
ss
cmc
sbb
xchg
push
lret
and
cld
and
push
jae
jne
dec
ljmp
lock
inc
mov
or
fwait
add
inc
loopne
jmp
fadds
iret
lcall
in
dec
shll
inc
and
adc
xchg
stos
xchg
lds
and
sbb
aaa
mov
xor
hlt
test
xor
sbb
aam
add
push
dec
arpl
pop
addl
sbb
dec
push
shr
mov
pop
jbe
jmp
adc
popa
lret
cmp
dec
xor
lods
loop
lret
cmp
add
jecxz
lret
cmp
push
mov
inc
shll
jmp
or
shr
pop
pop
sbb
loopne
mov
pop
sbb
rcrb
or
jno
mov
lock
cmp
xlat
mov
pop
mov
dec
push
lcall
pop
out
sbb
xor
cmc
sbb
mov
dec
xorl
mov
inc
ret
cmp
pop
sbb
popf
and
leave
push
xchg
fs
mov
leave
mov
mov
pop
data16
mov
rcll
adc
es
andb
or
xorb
mov
and
jmp
and
pop
xor
push
lret
or
fsubl
mov
pop
iret
inc
push
sbb
pop
pop
mov
scas
jl
mov
pop
test
pop
jmp
repz
xchg
pop
pop
inc
insb
pop
int
inc
xchg
sub
cmp
sbb
rclb
insl
push
insl
pop
lret
outsb
pop
pushf
sbb
pop
outsb
pop
pushf
in
popf
pop
and
aas
outsb
pushf
pop
int3
push
ret
mov
int3
dec
pop
out
pop
aas
push
scas
stos
xchg
dec
pop
pop
in
movsb
ss
das
inc
lret
xor
out
push
mov
push
and
stc
pop
mov
aaa
jp
in
adc
test
adc
dec
test
jmp
and
repz
mov
pop
testl
pop
mov
cmp
push
jb
mov
inc
xor
add
add
fs
cltd
in
inc
cmc
test
xlat
inc
lahf
push
adc
lret
jmp
pop
or
sbb
aaa
or
mov
sbb
jl
add
pop
push
daa
stos
dec
xchg
push
les
aad
or
jecxz
stos
mov
push
pop
sbb
and
iret
dec
roll
xlat
ffree
xor
test
sub
ret
jecxz
xor
aaa
mov
cld
ds
mov
or
sub
outsb
push
lret
mov
jbe
test
mov
mov
aaa
pop
cld
stos
sarb
xlat
aas
or
sbb
xor
add
stc
sub
movsb
scas
mov
ret
lea
inc
push
dec
je
aam
mov
stos
rolb
test
pop
mov
mov
test
sub
es
adc
lods
scas
jno
loop
je
cmp
icebp
and
or
das
lods
scas
call
arpl
in
shrl
popf
cmp
aas
cmc
mov
lods
decl
pop
inc
stos
adc
mov
out
pop
stc
and
ja
xor
mov
mov
cmp
inc
jp
sub
ljmp
lock
sti
dec
pop
mulb
pop
dec
dec
into
rorl
jg
pop
push
mov
adc
adc
mov
pop
and
or
xchg
mov
push
push
lret
outsl
repnz
or
pop
ljmp
or
fwait
in
aaa
and
stos
addr16
daa
test
mov
sbb
aad
test
mov
adc
xchg
mov
xor
push
or
xor
aaa
test
or
inc
andl
cmp
dec
cmpsl
pop
push
xor
pop
pusha
or
mov
cld
scas
lahf
jecxz
or
mov
inc
imul
std
in
popa
stc
or
std
jbe
aaa
in
pop
sbb
fcompl
mov
inc
das
pop
or
aaa
mov
rolb
stos
mov
hlt
mov
lods
test
add
lds
hlt
stc
sub
iret
in
push
xchg
sbb
cmp
xchg
hlt
inc
lock
mov
mov
sbb
aaa
je
out
stc
out
hlt
insb
add
push
rorl
push
mov
shl
fidivl
clc
and
or
hlt
mov
pop
mov
and
push
out
aam
loop
hlt
ljmp
insb
cmpsb
ljmp
xchg
in
cmc
movsl
sarl
stc
int
in
movsb
test
cmc
dec
movsb
xchg
pop
pop
loop
adc
lret
jbe
fsubl
sbb
xchg
or
stos
imull
mov
mov
pop
pop
fsubrp
test
dec
test
addr16
hlt
mov
cmpsb
mov
and
sbb
iret
imul
ret
xor
hlt
shl
sbb
xor
sbb
mov
frstor
ja
test
mov
test
push
xor
fisttps
jbe
pusha
fwait
hlt
popa
jnp
cmp
clc
ds
sbb
jmp
mov
sbb
push
mov
adc
jge
int
adc
dec
fldenv
jl
dec
in
imulb
mov
jbe
daa
imulb
dec
and
hlt
aas
repnz
pop
in
or
fldl
pop
addr16
add
mov
cmp
mov
push
pop
xor
popa
mov
mov
jns
jne
cmpsl
mov
lock
lret
sbb
mov
clc
sbb
adc
cmc
mov
mov
adc
out
jne
inc
lret
dec
shlb
and
inc
divl
loopne
insb
sbb
lret
adc
jle
add
sub
push
or
jb
js
fstpt
cmpsb
pop
sbb
ja
cmpsl
add
inc
or
inc
xor
add
cld
mov
in
cwtl
sti
sub
sbb
outsl
dec
adc
dec
hlt
xchg
fdivl
sub
cmp
mov
pop
hlt
and
cmp
aad
xchg
popa
jae
mov
cld
out
out
sti
aam
rorb
shl
add
outsl
pushf
inc
ficompl
popf
add
cmp
fdiv
mov
outsl
mov
push
mov
pop
hlt
mov
int3
push
stos
and
call
arpl
add
jne
ret
mov
push
xchg
insb
dec
jp
cmp
inc
mov
sbb
xchg
hlt
push
mov
fs
addr16
mov
inc
xchg
nop
adc
pop
inc
mov
xchg
aam
adc
call
in
setns
ret
std
testb
or
or
and
mov
fwait
cli
cmp
sahf
insl
dec
mov
ret
mov
mov
shrl
dec
xor
mov
cli
lock
hlt
sbb
stc
push
std
sbb
hlt
aam
cmpb
mov
hlt
int
mov
mov
dec
sti
hlt
jp
pop
test
in
insl
repnz
lcall
std
hlt
and
rorl
fstpl
cmc
xor
jecxz
lret
insb
jg
sbb
mov
mov
mov
and
ss
sbb
push
sbb
lds
lret
hlt
jnp
pop
sbb
fsubrl
hlt
push
test
push
or
hlt
in
mov
push
adc
ljmp
and
push
dec
push
dec
adc
cmc
repz
mov
or
jne
sysret
and
pushf
push
push
dec
daa
orb
pop
outsb
hlt
sarb
pop
or
cs
xchg
jp
add
jnp
jp
icebp
out
mov
xchg
or
inc
xor
scas
cmp
sub
jae
cmp
out
ret
cwtl
rcrb
dec
mov
adc
out
leave
xchg
mov
inc
jl
jne
pop
mov
leave
xchg
imul
push
xchg
pop
cs
xlat
dec
xchg
adc
and
sbb
jge
mov
xor
cmp
xor
sbb
pop
ds
lea
rorl
xor
push
aaa
scas
sbb
pop
xchg
jnp
xchg
xchg
push
inc
ja
pop
lock
and
xor
jmp
jl
pop
push
inc
in
stos
cmp
fxch
movsl
dec
faddl
cmp
imull
inc
pop
pushl
mov
mov
mov
pop
pop
leave
mov
pop
jg
insb
or
stc
pop
xor
or
in
std
cld
or
test
xchg
xchg
cmp
iret
mov
out
imull
loope
adc
jne
mov
adc
pop
clc
mov
ja
jne
pop
cmp
xlat
push
bound
mov
pop
in
pusha
adc
xor
push
xchg
orl
pop
mov
cli
js
push
jbe
das
sbb
in
pop
cmc
iret
mov
lock
in
or
loop
cli
icebp
mov
add
xchg
clts
pop
mov
clc
mov
addr16
jmp
popa
je
mov
mov
leave
xabort
pop
pop
pop
pop
cmp
aad
test
cmp
sbb
imul
dec
sbb
jp
test
jmp
sbb
add
icebp
mov
test
mov
icebp
jne
jg
inc
jle
cld
ds
xchg
cmp
mov
add
in
jle
lock
sbb
sahf
mov
ljmp
or
inc
xor
push
mov
out
push
cltd
adc
fisubrs
mov
jae
push
cmp
sbb
iret
lret
mov
sub
dec
and
mov
push
jecxz
cmp
pop
mov
stc
push
iret
or
inc
cli
adc
sub
lods
scas
std
nop
lods
sbb
inc
mov
and
flds
mov
ljmp
sbb
cwtl
dec
mov
repz
or
pop
add
lock
xor
dec
lds
popa
subl
and
push
mov
jmp
arpl
in
adc
icebp
enter
aad
cld
enter
js
inc
mov
add
xor
aaa
out
cwtl
jae
adc
clc
fisubrl
iret
xchg
xchg
hlt
pop
adc
inc
add
idiv
fucomip
xor
jns
call
mov
cmpl
imul
cmc
aaa
jbe
xor
sbb
mov
xchg
cmc
jbe
lret
lds
add
or
push
push
mov
jb
dec
aaa
aam
xor
sbb
cmp
push
nop
dec
and
aas
rol
jne
mov
xchg
popf
aad
fwait
loope
jbe
xor
fistl
fsts
rorl
adc
aas
mov
outsl
out
push
in
sub
dec
out
mov
inc
cs
test
xor
dec
cmpsl
or
cwtl
ret
pushf
add
leave
xchg
mov
test
hlt
test
jns
dec
jg
sbb
pop
or
stos
sub
mov
cli
imul
adc
sub
hlt
inc
and
out
aad
pop
hlt
stos
ficoml
lds
insb
fwait
mov
daa
lret
mov
imul
pop
shl
sbb
cs
sub
fcomip
adc
lds
movsb
pop
jnp
hlt
js
test
adc
cld
hlt
xchg
andl
sub
xor
mov
pop
jg
hlt
pop
rorl
rcl
mov
aam
cs
ja
pushf
dec
cmpsb
and
out
movq
pop
sub
pop
test
inc
sbb
jns
adc
mov
and
mov
jle
imul
xchg
jg
out
cmp
inc
jle
cmp
loop
mov
fdivrl
mov
frstor
jg
hlt
pop
mov
leave
xchg
or
fmull
mov
fistpll
clc
lret
add
sbb
std
imul
imul
push
lret
add
cmc
test
xor
int
push
test
ja
dec
xor
xchg
mov
out
hlt
sub
mov
pop
xchg
lds
fidivrs
push
mov
lahf
ja
pop
negl
inc
add
lret
fs
mov
push
lea
fistpll
cmc
jnp
push
xchg
lea
sub
in
push
hlt
leave
and
xor
xchg
mov
xlat
hlt
out
lea
dec
jo
hlt
mov
or
les
jae
repz
adc
sahf
mov
icebp
jge
push
and
pushf
sbb
dec
mov
xor
hlt
cmp
fisubs
loop
repnz
pop
dec
sub
lret
shll
and
mov
push
pop
insl
ret
out
inc
pop
negl
xchg
wrmsr
cltd
data16
jbe
xchg
fiaddl
hlt
cmp
shl
dec
mov
leave
sbb
xchg
pop
sub
lret
stos
clc
xchg
dec
hlt
std
insl
mov
sti
mov
ja
shll
xor
outsb
shll
out
aas
mov
dec
xor
fistpl
adc
mov
pop
clc
adc
dec
loop
ret
inc
inc
push
or
fxtract
adc
dec
ret
addr16
pop
pop
pop
daa
mov
lea
inc
sub
sbb
dec
stc
push
dec
adcb
cwtl
loopne
prefetch
or
xlat
pop
fwait
xlat
test
push
and
dec
adc
ljmp
fdiv
fwait
and
lcall
push
jne
addb
xchg
xchg
lods
lret
sbb
inc
mov
jg
jb
add
sahf
cmp
mov
hlt
jecxz
lock
mov
jl
push
divl
mov
add
jae
dec
out
xor
test
jge
sarl
hlt
aam
cltd
lahf
inc
lock
rclb
cmpb
int
hlt
mov
nop
jbe
sbb
or
lds
hlt
orl
push
je
outsl
sar
hlt
sub
dec
aaa
icebp
sbb
and
xchg
hlt
push
into
jl
dec
mov
sub
mov
cmpsl
mov
and
sbb
fucomip
hlt
mov
sub
xchg
or
cli
sub
pop
aad
test
pop
mov
push
lds
mov
lret
pop
ljmp
mov
and
mov
mov
jle
cld
lahf
mov
lret
or
push
aam
cli
jae
out
cmc
mov
shl
hlt
outsl
mov
dec
jo
insl
sbb
mov
loop
hlt
repz
test
aam
add
dec
add
jecxz
ffreep
xchg
sub
sbb
hlt
adcb
pop
xchg
dec
sbb
or
scas
je
push
and
xchg
inc
hlt
cwtl
sub
push
aam
mov
xor
shl
xchg
shll
push
outsl
mov
js
in
int3
cld
cmp
sbb
mov
or
loope
pop
ja
mov
pop
cmp
sbb
adc
mov
test
testb
div
xor
fsubl
mov
mov
or
dec
mov
sub
pushf
hlt
cwtl
pop
stc
pop
lcall
sub
mov
test
int3
push
adc
out
mov
mov
and
jnp
xor
and
dec
lret
out
std
shll
mov
scas
lret
hlt
ljmp
stos
sbb
jp
mov
sub
mov
ljmp
pop
sbb
std
scas
cmpsl
repnz
jns
repnz
dec
clc
sbb
pop
fsubrs
mov
out
jp
mov
lds
jb
cld
scas
pushl
idivb
pop
es
fwait
imul
push
test
xor
hlt
pop
xor
cltd
mov
hlt
xchg
insb
test
lds
aam
inc
mov
stos
scas
sub
mov
jns
loope
pop
inc
jmp
mov
xor
cwtl
cmp
fcompl
out
cmp
movsb
in
jnp
dec
push
hlt
mov
insl
fcomps
pop
les
or
bnd
mov
mov
adc
xchg
stos
mov
popa
pop
pop
adc
hlt
arpl
xchg
frstor
mov
add
sbb
outsl
shrb
lods
insb
mov
mov
pop
shll
fnstenv
sbb
jo
adcl
loopne
hlt
inc
jge
dec
mov
mov
push
ja
aad
pop
pop
xchg
lret
mov
ljmp
cmp
add
mov
dec
push
xchg
ror
xor
movsl
xchg
cs
mov
push
sarb
rorl
movsb
xor
pop
out
xchg
xchg
jmp
in
in
rcl
mov
sbb
dec
mov
cld
mov
dec
shll
aaa
aaa
pop
imul
push
xorl
out
mov
cmp
dec
pop
outsb
lods
fisttps
sti
nop
icebp
hlt
pop
push
fnsave
hlt
add
push
add
adc
inc
mov
mov
dec
cld
scas
hlt
aam
add
xchg
dec
subl
or
rcll
hlt
outsb
jl
push
repnz
sti
xchg
jno
std
push
hlt
in
sbb
push
cwtl
cmp
push
push
hlt
andl
xchg
repnz
mov
pop
hlt
pop
ds
cmp
mov
mov
fdivl
adc
mov
hlt
gs
lods
jb
or
mov
scas
pop
cmpsb
out
shl
jmp
sarb
mov
div
or
insb
pushf
jge
inc
dec
ja
sub
out
hlt
test
pop
sub
xor
call
pop
fdiv
cltd
mov
lods
cld
test
dec
aaa
imul
std
dec
hlt
xor
lds
sub
imul
or
mov
stc
or
xor
cmp
into
jae
je
hlt
push
push
inc
sub
mov
lret
xchg
xchg
or
cld
dec
push
les
fstpt
popf
lods
roll
sub
jne
aad
jo
add
jp
fldenv
ret
or
shrb
cmc
stos
add
pop
hlt
mov
pop
in
pop
hlt
lods
shl
into
fcomps
pop
test
mov
push
icebp
stos
imul
mov
test
push
imull
movsb
hlt
popa
mov
repz
fmull
or
dec
push
sub
out
movsl
mov
rcr
sub
repz
hlt
popa
add
mov
jmp
ja
hlt
pushf
out
push
pop
adc
or
jb
pop
dec
jne
cmp
aam
cli
adc
mov
jge
mov
popf
cmp
hlt
xchg
mov
inc
pushf
sub
sub
test
dec
in
testb
test
lods
hlt
in
fsubrl
hlt
or
or
mov
lods
sub
fucomip
shl
adc
fistl
outsl
and
cmpsl
mov
jp
insb
push
loop
hlt
push
jo
sbb
jae
ret
mov
mov
add
es
hlt
fistps
or
out
hlt
stos
outsl
fisubrl
dec
jl
hlt
rolb
pop
fwait
movsl
dec
xchg
add
add
out
pushf
hlt
clc
and
xchg
or
pop
hlt
movsl
jmp
cmp
dec
pop
hlt
out
je
sub
mov
hlt
and
adc
hlt
pop
pop
insl
test
imul
dec
and
xor
jg
xor
loop
dec
xchg
movsl
cli
icebp
testb
adc
mov
dec
adc
xchg
js
hlt
outsl
jl
dec
stos
stc
or
icebp
shlb
mov
outsb
ss
jae
sub
imulb
lock
mov
xor
add
inc
int
push
test
hlt
dec
imul
hlt
aaa
lahf
xchg
dec
das
or
jnp
insb
add
data16
out
outsb
add
mov
hlt
jmp
sub
pop
dec
fldenv
add
xchg
ja
pop
rcll
xor
aam
mov
push
push
mov
jae
jnp
idivl
ljmp
xchg
int
movsb
divb
dec
jns
adc
mov
xchg
cs
hlt
imul
pop
dec
add
jle
mov
mov
lds
inc
mov
xchg
aad
in
pop
pushf
fisubl
mov
loopne
and
cmp
inc
insb
xchg
loope
adc
mov
stos
mov
mov
sbb
hlt
lret
mov
rcrl
jno
roll
mov
xor
js
lds
fwait
shr
inc
jne
jecxz
imul
adc
sub
push
out
test
and
xchg
call
mov
hlt
pop
mov
lds
and
push
daa
pop
mov
sbb
movsb
dec
daa
ror
clc
mov
aam
mov
mov
sbb
scas
hlt
mov
pop
or
ss
push
xor
call
outsb
cmpsb
pop
mov
sarl
insl
sub
cmp
push
test
les
dec
push
dec
paddd
mov
mov
insl
sbb
hlt
imul
ss
hlt
pushf
xchg
and
popa
pop
lock
stos
negb
scas
xchg
mov
or
adc
pop
dec
and
jo
imul
cmpl
mov
xor
or
clc
imul
aam
hlt
mov
jmp
sbb
mov
mov
imull
in
cmp
mov
mov
pushf
push
or
incl
push
dec
fimuls
mov
inc
sbb
or
aam
cmp
std
mov
fcomip
in
lea
rcrl
shll
nop
loope
push
test
pop
out
lds
insb
pop
sbb
shrb
movsb
xchg
mov
sub
insl
and
cld
adc
adc
lods
bound
in
hlt
lods
xchg
mov
sub
hlt
inc
sbb
lahf
aam
shrb
lret
mov
jp
jle
mov
es
imul
push
fnsave
pop
mov
push
pushf
mov
and
jp
add
dec
xlat
jecxz
idivb
mov
pop
sub
push
imul
out
cmp
xor
xchg
ficomps
cmp
repz
divb
jb
insb
hlt
mov
call
sub
inc
lock
aas
mov
mov
int
mov
xor
mov
lret
inc
cli
lret
and
or
aad
jmp
adc
hlt
mov
sbb
push
add
xor
ja
aaa
hlt
mov
pushaw
icebp
aas
inc
shrl
inc
and
mov
movsl
mov
and
imul
pop
cmp
testl
dec
mov
pop
mov
pop
dec
xor
mov
shrl
mov
mov
fisubs
iret
es
jbe
out
xor
inc
ds
cld
hlt
in
and
inc
cmp
dec
pop
scas
rolb
xchg
fsubl
or
imul
cmp
cmp
cmp
rolb
mov
sub
pop
xorl
hlt
pop
dec
and
cmc
test
hlt
sub
and
out
mov
testl
sbb
pop
push
lret
fdiv
filds
jp
fidivl
hlt
push
jo
iret
xchg
clc
push
js
inc
mov
or
xor
shr
movsb
sbb
mov
jns
dec
out
imul
xor
incb
cmp
inc
jb
cs
mov
int3
je
and
pusha
inc
sbb
mov
adc
test
sbb
in
daa
cld
fwait
cmp
dec
sbb
iret
divl
push
mov
xor
xchg
xchg
repnz
hlt
bound
adcl
mov
jno
hlt
int3
loopne
mov
hlt
in
in
cltd
lods
insb
aaa
inc
hlt
out
orb
mov
fsubr
ljmp
add
sbb
mov
gs
out
in
mov
jo
dec
dec
fsts
or
mov
add
stc
icebp
hlt
push
pop
addl
dec
mov
push
inc
daa
mov
pop
loop
add
scas
and
pop
cmp
out
cmp
in
sbb
jge
mov
gs
hlt
aam
je
sbb
or
imul
ljmp
fcompl
insb
mov
cmp
icebp
insl
jae
push
shll
iret
pop
daa
movsb
cmc
imul
ret
cs
outsl
jns
xor
dec
mov
out
stc
adc
dec
xchg
mov
loope
jnp
hlt
and
pushf
iret
call
xchg
repz
xor
xor
int
testb
shll
hlt
jp
fstl
mov
dec
mov
xor
test
hlt
mov
outsb
mov
sti
aas
inc
dec
std
jg
flds
xchg
xorb
sub
cmp
loop
sbb
popa
add
sub
sub
jno
mov
les
je
sahf
ss
pop
cmc
jne
imull
and
jnp
dec
mov
cmp
cmp
aad
mov
outsb
aas
jg
lds
roll
lea
aad
hlt
faddl
mov
hlt
pop
sub
mov
jo
hlt
test
sbb
roll
mov
xor
je
je
imul
xor
mov
jb
test
cmp
test
fcoms
hlt
pop
in
in
hlt
stos
pop
into
insb
scas
jl
mov
xchg
aad
fdivs
sbb
dec
mov
mov
pop
sbb
pop
and
hlt
imul
dec
mov
sarb
jp
in
hlt
repz
lods
pushf
nop
jbe
and
cmp
push
add
movsl
cmpsl
pop
andl
aad
hlt
daa
inc
and
arpl
mov
hlt
push
rcrb
rcrl
enter
test
or
int3
sbb
out
lds
adc
and
popl
hlt
icebp
rcr
lods
jg
lock
mov
mov
mov
inc
jmp
xorb
icebp
sbb
jg
shl
sub
insl
push
clc
hlt
sti
lods
divb
lret
iret
inc
imul
clc
lcall
das
jbe
ds
sarb
aas
fisubrl
popa
repz
push
inc
imul
inc
hlt
add
int
sbb
fwait
ss
repz
je
inc
sbb
scas
sbb
hlt
bound
inc
ljmp
dec
data16
imul
jmp
inc
mov
aad
mov
pop
test
pop
sbb
sub
in
xor
cmpsl
or
jb
add
pop
hlt
stc
rorb
hlt
jns
pop
lcallw
inc
jp
js
xchg
aad
hlt
dec
push
insb
sbb
into
adc
mov
cmp
push
out
mov
dec
js
cmc
aam
rorb
pop
hlt
sbb
outsl
fs
cmpsb
roll
jg
inc
mov
push
jnp
cli
call
repnz
inc
inc
loope
aad
ficoms
push
std
imul
jge
lret
push
jecxz
movsb
hlt
mov
cmp
sbb
lret
imul
movsb
or
mov
push
div
pop
mov
jp
sbb
std
leave
hlt
fnsave
push
fdivs
ret
or
sti
lahf
ljmp
xor
jne
popf
jnp
mov
leave
pop
pop
add
mov
in
int3
mov
push
mov
xchg
xchg
lret
daa
mov
stos
mov
inc
fwait
adc
cli
test
lahf
imul
sub
sti
fwait
aas
xor
test
shrb
xor
ret
fnstcw
das
xlat
cmc
dec
dec
pop
negb
mov
fimuls
xor
adc
or
dec
fwait
call
fs
inc
xlat
lahf
ret
adc
sbb
inc
mov
call
inc
stos
shlb
lds
sbb
incb
jmp
push
test
in
push
sti
sub
pop
jno
std
xchg
mov
or
mov
roll
mov
push
jne
push
cld
cmp
push
mov
or
fidivrl
cmp
mull
sbb
ja
testl
addr16
xor
or
sbb
dec
in
rcll
inc
loopne
xchg
mov
dec
out
out
dec
dec
and
std
jo
mov
add
fnsave
lods
and
mov
mov
lds
div
adc
add
and
pop
jne
xchg
lods
int
dec
fwait
or
out
push
inc
daa
xor
xchg
adc
scas
inc
bound
pandn
jecxz
aas
fwait
adc
adc
mov
mov
adc
pop
hlt
iret
lcall
sbb
mov
fidivs
fs
xor
inc
mov
or
cmp
lods
or
xchg
inc
inc
jmp
imul
dec
pop
lods
xor
mov
jb
test
adc
ja
pop
add
xchg
push
ret
xor
lock
xchg
xchg
pop
add
dec
sbb
shll
mov
dec
out
sti
dec
cmp
fiaddl
in
addl
xlat
test
sbb
ja
dec
ret
xchg
ljmp
mov
and
dec
arpl
ret
outsb
pxor
cs
std
stos
shlb
stc
adc
inc
mov
test
out
in
and
das
cld
out
pop
add
imul
pop
xchg
cwtl
dec
cwtl
or
ja
imul
mov
jmp
sub
scas
sub
mov
xlat
sbb
jmp
dec
addb
daa
stos
jmp
sub
or
pop
xor
nop
in
shll
icebp
jp
sbb
cmp
push
fwait
adc
ds
andl
out
push
jecxz
dec
or
push
movsb
repz
imul
mov
mov
inc
fwait
mov
lock
mov
addr16
inc
sbb
xorb
and
mov
xor
or
mov
pop
add
adc
jge
inc
fistpl
arpl
test
pmulhw
aam
insb
push
outsb
push
and
inc
xlat
mov
jge
lcall
pop
cmp
int3
fisttpll
ret
push
sbb
push
jne
in
sub
ss
and
ror
add
push
jbe
divl
sub
xor
cmc
mov
mov
pop
fwait
test
scas
aas
sub
pop
jl
jmp
in
sub
sti
leave
data16
insl
inc
jp
gs
test
pop
dec
pop
and
aaa
out
scas
lret
sub
xor
lock
dec
push
mov
jmp
aas
loop
cs
mov
adc
xchg
out
imul
addl
test
pop
push
cmp
mov
roll
and
loopne
sbb
push
push
xchg
ss
std
pop
pop
pop
repz
das
push
lahf
cmp
push
nop
les
adcl
pop
loop
dec
subl
xor
inc
or
sub
jg
xor
cli
test
and
mov
adc
jg
lock
xchg
pop
xor
test
sub
fldl
sub
push
push
adc
pop
movsb
cmpl
sbb
push
adc
jae
xorl
iret
aas
addr16
pop
dec
adcb
sbb
decl
pushf
sbb
fcmovb
mov
jnp
sub
or
mov
out
adc
pop
add
dec
daa
xchg
adc
xlat
movsb
out
dec
sbb
jp
add
mov
add
inc
push
pop
int3
pop
inc
xor
das
ficoms
mov
adc
inc
adc
cmc
fldl
xor
xor
cmp
pop
mov
sub
adc
aaa
inc
aam
push
inc
sbb
xchg
mov
mov
mov
xor
mov
daa
leave
cmpsl
mov
cmp
cmp
mov
mov
jno
std
shrb
cli
out
test
mov
cmpsl
cmp
or
or
mov
test
cmpsl
int3
aam
xor
fldl
adc
mov
xchg
or
pop
aas
xor
or
pop
addb
and
cltd
xor
jle
sbb
cmp
aad
in
leave
add
dec
cmc
push
out
dec
add
cmp
lcall
jmp
cmpsb
lds
jnp
sub
test
aam
stc
sbb
adc
pop
mov
rcrl
cmpsl
sub
in
or
cmp
push
addr16
das
jae
paddusw
jecxz
daa
ds
sub
test
cmpsl
stc
adcb
icebp
rcrl
xor
or
inc
ja
aaa
pop
fs
dec
or
das
adc
xchg
dec
fiaddl
mov
negb
in
sbbl
or
mov
cli
mov
call
stc
mov
mov
outsl
mov
scas
inc
push
adc
jp
or
dec
pop
mov
add
stc
mov
cmc
movq
test
push
inc
jae
xlat
xchg
adc
movsl
mov
add
adc
mov
and
daa
pop
cmpl
fwait
addr16
cltd
cmp
or
add
sub
stc
adc
stc
loope
pop
int
cmpsl
lcall
int
cltd
add
loope
sbbl
sbb
mov
sub
iret
iret
inc
jnp
mov
outsl
pop
cmc
testl
fildl
outsl
pop
movsb
fisubrs
and
outsb
stos
dec
dec
jp
fistps
arpl
jl
outsb
lock
mov
test
mov
mov
inc
fidivs
mov
enter
frstor
xor
jae
into
sub
pop
xor
gs
push
mov
push
adc
jnp,pt
outsb
inc
dec
xchg
lahf
dec
test
pop
cmp
int
or
xor
add
pop
cmp
in
mov
cmp
inc
lock
into
je
and
ljmp
icebp
push
sub
jge
or
dec
push
hlt
pop
push
sub
hlt
mov
xchg
jg
hlt
rclb
test
mov
fs
pop
aas
mov
adc
faddp
aaa
inc
movsb
sub
hlt
sbb
lret
hlt
fsts
push
lock
sbb
loope
into
out
pop
mov
mulb
adc
hlt
mov
scas
in
hlt
mov
out
lahf
hlt
cltd
roll
orb
bound
jb
pusha
or
hlt
jo
jecxz
ret
cmp
jl
jne
push
xchg
neg
div
mov
jg
aas
dec
pop
js
int
mov
stos
hlt
outsl
mov
sarl
cli
push
lea
adcl
cmp
addr16
imulb
jbe
stos
add
jae
mov
ljmp
leave
mov
sti
sbb
mov
cmp
jo
hlt
dec
andb
and
push
imul
es
mov
adc
jmp
jg
std
aas
hlt
lahf
popa
xchg
pop
adc
mov
hlt
mov
mov
ret
lea
inc
fucompp
adc
into
loop
or
adc
mov
and
jl
mov
stos
sbb
aad
hlt
push
push
dec
shrb
ret
int3
aaa
jne
mov
lcall
xchg
lea
hlt
mov
xchg
and
add
inc
mov
dec
pop
mov
jecxz
adc
add
das
xchg
lea
mov
and
push
testl
dec
fs
shll
xor
les
pushf
adc
cs
stc
bnd
repnz
pop
repz
lret
daa
pop
jle
sub
adc
mov
inc
mov
loopne
xor
sbb
xor
mov
es
mov
pop
cmp
lods
sbb
dec
jmp
xor
clc
adc
jo
inc
ss
inc
inc
addps
adcl
cld
out
or
aas
int3
aas
push
nop
dec
orl
addl
add
unpcklps
sub
pop
add
aas
xor
inc
or
sub
in
movsb
and
mov
sbb
dec
xlat
jl
cmpb
jne
not
cmc
fldl
add
push
inc
daa
jl
ret
jns
jnp
xchg
lock
mov
and
push
inc
movsb
ljmp
mov
xchg
jmp
data16
and
idivb
mov
mov
xlat
adc
push
cmp
or
es
jbe
jecxz
andb
bound
adc
add
or
mov
ficompl
dec
or
mov
pop
sbbb
cmp
fwait
aaa
mov
scas
add
inc
cmpl
xchg
dec
dec
xchg
clc
mov
rclb
pushl
sbb
push
std
push
xor
xchg
dec
sbb
gs
adc
adc
aam
add
pop
std
cmpsb
add
add
sub
lret
mov
mov
mov
push
aad
mov
daa
cmp
sbb
cmp
mov
lods
jmp
outsl
mov
sub
add
jo
sub
xchg
mov
subl
and
inc
cmc
mov
mov
adc
adc
popf
mulb
sub
sbb
sbb
fiaddl
pusha
inc
enter
addr16
jg
out
loopne
les
dec
lcallw
stos
jecxz
sbbb
adc
push
fucomi
popa
xor
movsb
xor
lcall
dec
mov
insl
jbe
ds
push
das
scas
mov
jbe
test
mov
cmpsl
ljmp
push
out
xchg
add
push
pop
es
out
sbbl
dec
inc
sbb
adc
sub
adc
inc
iret
aas
ffree
addr16
jns
ret
pop
loope
lahf
push
aam
imul
or
jge
push
sub
push
dec
pop
clc
mov
lret
in
or
jno
dec
bound
mov
je
push
fwait
in
sub
int3
mov
filds
inc
cmpsl
push
mov
adc
leave
in
leave
mov
std
mov
mov
inc
mov
and
sbb
pop
sub
cmc
test
sub
sbb
add
fstl
mov
cs
int3
add
leave
xchg
cli
pop
aas
idivl
push
sub
push
imul
cmp
pop
movsb
or
mov
push
push
stos
xlat
stos
idivl
fucomi
inc
mov
cmp
clc
lods
xchg
mov
or
sbb
sarl
mov
or
fdiv
int3
mov
jp
xchg
insb
jmp
xchg
cmp
ret
mov
add
xchg
push
fdivr
leave
clc
dec
lods
hlt
mov
push
subl
sbb
out
or
leave
mov
outsb
mov
jmp
mov
data16
hlt
lcall
inc
loop
negb
mov
xor
cmp
int
adc
ljmp
bound
out
test
cmp
hlt
adc
jg
hlt
mov
insl
or
gs
lock
and
fwait
stos
sub
call
sub
in
or
andb
jns
pop
test
xor
cmp
mov
pop
mov
mov
ret
outsl
cmpsl
dec
cmp
or
adc
imul
adc
sti
lods
push
hlt
mov
and
lcall
pop
mov
push
inc
das
sbb
movsl
stos
sti
add
xor
mov
fwait
xorb
icebp
mov
mov
cli
cmp
loope
test
popa
sub
test
je
mov
test
movb
in
aam
lcall
mov
shll
notb
cmp
dec
stos
pop
sahf
add
andb
sbb
sbb
lock
hlt
mov
movsb
cli
mov
mov
pop
lods
in
pushl
add
shll
cmp
repz
dec
add
aam
lret
hlt
insb
xlat
mov
mov
mov
out
sbb
aas
loope
xor
je
mov
test
notl
ljmp
and
nop
add
decb
push
lret
mov
sbb
push
mov
adc
dec
imul
fimull
or
lds
aaa
mov
and
adc
out
sahf
and
cld
rorl
xadd
in
out
push
jmp
hlt
insb
add
mov
hlt
pop
mov
rcr
cmp
sbb
inc
inc
sbb
or
es
mov
imul
cli
lahf
shrb
lods
inc
gs
inc
mov
aad
hlt
mov
add
lds
and
cwtl
xor
hlt
test
push
xchg
pop
ss
add
loope
sub
xchg
adc
lea
pop
sahf
pushf
pusha
cs
clc
jmp
xchg
in
hlt
aam
cmpb
mov
cmp
outsl
jle
xchg
add
hlt
mov
mov
jl
sbb
out
idiv
cmc
pop
add
xor
jle
aam
mov
jp
jl
fildll
mov
cmp
lods
lods
inc
jo
mov
movsl
cmpsl
cmp
das
leave
not
pop
sub
out
xorb
jl
bound
cmp
hlt
and
lret
sahf
or
sbb
pop
lret
mov
lea
test
mov
push
int
push
hlt
call
mov
hlt
gs
in
rcrl
fsubrl
cmp
sbb
mov
pop
mov
xchg
sub
mov
xchg
mov
in
in
mov
test
jae
es
dec
dec
sbb
adc
aam
xchg
adc
fstps
cmp
das
clc
xor
cmp
jg
xorl
out
lods
aas
clc
mov
repnz
xor
aaa
sahf
fldln2
jno
mov
sub
or
push
jge
pop
fsubr
pop
mov
imul
sti
push
ret
iret
hlt
stos
or
insb
in
cmp
lret
mov
hlt
sub
mov
hlt
mov
jl
dec
cmp
hlt
jp
jbe
ffreep
and
mov
cmovo
and
cmc
sbb
cld
xchg
inc
lds
pop
or
fcompl
outsl
ficoms
repz
ja
ss
rol
sub
mov
mov
xchg
mov
sub
in
mov
or
scas
pop
in
adc
mov
scas
xor
cld
add
xor
xchg
int
loope
sbb
adc
add
push
hlt
subb
jne
mov
xchg
push
mov
or
test
push
out
mov
sbb
push
in
pop
mov
hlt
lret
aas
lods
xor
hlt
and
xchg
sbb
pop
imull
xchg
add
push
xor
insb
hlt
jle
aam
add
mov
scas
outsl
inc
out
and
jae
and
test
arpl
pop
pop
scas
test
push
sbb
loopne
mov
jmp
mov
std
mov
sbb
lods
in
hlt
rcrb
xchg
or
adc
fnstcw
ja
aad
cltd
hlt
lds
fdiv
hlt
mov
cmp
loop
lret
push
jg
shll
push
repnz
cmp
and
jmp
lcall
hlt
xchg
xchg
mov
sbb
int3
push
imul
mov
in
hlt
mov
push
mov
push
adc
imul
icebp
xor
hlt
bound
jp
or
cwtl
cmp
clc
jmp
sarl
lock
mov
jb
xor
cltd
sar
fxtract
mov
mov
idiv
lcall
out
xchg
dec
dec
mov
xchg
sbb
int
push
hlt
das
pop
mov
sbb
jp
push
pop
movsl
out
sbb
sbb
sub
sub
mov
fwait
in
dec
hlt
sub
mov
jge
jmp
or
sub
dec
out
cmp
rcrb
in
mov
add
popf
hlt
out
std
mov
hlt
fidivl
cli
push
sahf
pop
je
aaa
xor
shl
fs
repz
or
fiadds
psubsw
jp
lcall
fnsave
dec
mov
adc
add
pop
cmp
pop
insb
sti
mulb
lea
hlt
pop
popf
pushf
loop
jmp
outsl
xchg
adc
adc
xor
and
xchg
xchg
sub
jg
lock
dec
sbb
jb
mov
test
mov
xchg
hlt
in
jmp
mov
in
push
popf
adc
pop
inc
sbb
sbb
add
cmc
in
je
cmc
std
jae
arpl
mov
push
divb
inc
lods
sub
in
lahf
inc
int
mov
insl
fdivrs
sub
jle
lcall
ja
pop
push
hlt
push
out
sbb
xchg
shll
sub
adc
aam
add
out
mov
jae
hlt
and
sbb
test
pushf
jb
or
jmp
ja
or
jp
lcall
inc
inc
mov
clc
inc
aam
test
or
test
shrb
fsubs
sbb
pop
fisttps
hlt
ficoml
adc
adc
adc
inc
lds
xchg
cltd
in
push
sbb
cmc
aad
mov
int
movsl
fisubrl
mov
or
dec
pop
out
hlt
dec
cmp
jg
jecxz
jle
adc
pop
push
mov
cmp
out
dec
pusha
jnp
mov
hlt
mov
xor
hlt
out
jmp
xchg
hlt
clc
outsl
push
insb
cmp
pop
aas
mov
dec
pop
mov
xchg
jle
dec
movsl
add
jo
test
dec
sahf
or
push
pop
jp
subl
inc
xlat
addr16
sbb
adc
pmuludq
fs
adc
jbe
and
cvtps2pi
mov
jle
pusha
or
pop
push
inc
addps
test
cmc
shlb
jecxz
dec
mov
push
ret
cwtl
fistpll
push
stos
pop
in
or
or
mov
pop
lret
inc
cwtl
dec
jb
push
imul
jbe
adc
fisttpll
int
lar
cwtl
cmp
push
pop
dec
imull
cmp
hlt
cmc
test
aam
lret
pop
fwait
nop
mov
adc
fisubrl
push
pop
pop
stos
pop
xchg
cli
les
add
loop
sub
xor
sub
lcall
pop
shrl
dec
je
lds
je
or
push
add
dec
xchg
xor
mul
push
popa
jno
pop
adc
js
aas
aas
int3
and
add
pop
dec
mov
les
xor
mov
jecxz
incb
adc
insb
imul
sbbl
mov
cmp
fwait
adc
xchg
jmp
test
adc
fsts
decb
das
fwait
fwait
mov
fwait
cmpl
sub
in
cwtl
sbb
pop
cmp
push
lahf
cmp
adc
xor
mov
leave
lds
or
mov
fadds
cmpsb
lds
and
xor
cld
test
or
pop
repz
addr16
inc
stos
adc
pop
mov
bound
cmc
pop
stc
stos
jo
ds
iret
or
popa
enter
mov
push
mov
inc
lock
pop
mov
inc
xchg
mov
pop
mov
shll
popf
ret
aaa
sbb
mov
add
std
mov
daa
lea
fwait
mov
add
imul
or
pop
mov
dec
pushf
cmpsb
push
ja
dec
cld
mov
sahf
sbb
jo
cld
jg
hlt
es
jmp
mov
stos
cmpsb
sbb
iret
and
push
popa
lahf
adc
pop
and
inc
inc
pop
out
fsubs
add
cs
out
leave
rcr
or
orl
adc
xlat
mov
dec
mov
or
jae
aas
lods
int
cmpsb
fistps
fisttpl
ret
sarb
cmpsb
cs
mov
fsts
cmpsb
daa
cmpsl
aaa
xor
ljmp
cmp
jge
sbb
cmp
pop
inc
stos
push
out
in
ss
into
data16
lret
sub
loop
cmpsl
pop
add
cli
int
shrl
shrl
daa
sti
or
mov
in
imul
inc
mov
mov
shrb
mov
es
mov
jnp
in
sub
cmp
sub
sti
ja
add
xchg
dec
mov
hlt
test
inc
inc
std
jecxz
hlt
sbb
daa
fcoml
pop
push
or
pop
mov
ss
sbb
insl
bound
hlt
jo
push
push
add
and
out
orb
add
fdivl
loop
jb
hlt
or
cmp
shr
adc
mov
clc
xchg
rcll
jge
repz
cmp
pop
sub
je
push
mov
cmp
push
dec
arpl
add
lret
cli
mov
adc
mov
cmp
jecxz
cmp
mov
scas
xchg
fisttps
js
loop
mov
inc
rol
mov
add
inc
out
mov
dec
sub
push
in
rcrb
sub
je
out
jne
sbb
ljmp
inc
jno
sub
xchg
bound
outsl
mov
scas
cltd
and
sahf
scas
aas
leave
rorl
or
jnp
xchg
mov
sbb
divb
aas
xchg
outsb
pop
hlt
popa
mov
xchg
scas
xlat
in
inc
out
jp
adc
addr16
mov
sbb
shl
inc
rol
xchg
je
hlt
test
cld
bound
jge
sbb
lret
rcl
lahf
shrl
addr16
cmp
ds
movsb
movsl
cmpsl
insl
mov
hlt
xchg
xlat
cwtl
shl
dec
mov
sahf
dec
lods
pushf
xchg
hlt
insl
loop
popf
push
cmp
iret
hlt
add
mov
out
hlt
sbbb
push
mov
std
loope
test
hlt
jb
repz
loop
cli
xlat
icebp
sahf
mul
and
pop
hlt
mov
sub
popa
hlt
jge
sahf
sbb
int
subl
lock
mov
leave
cmp
insl
addr16
ljmp
hlt
cli
fimull
sub
adc
jno
mov
and
adc
test
xchg
fildll
sub
hlt
sar
lea
pop
push
xchg
hlt
mov
push
mov
mov
std
and
pop
pop
cmp
push
pop
fcoms
fwait
rcrl
lret
test
mov
mov
std
inc
scas
sbb
mov
adc
sarl
lock
lods
cmp
xchg
mov
in
xchg
mov
xchg
fsubrl
insb
xchg
dec
imul
sbb
insl
jbe
cltd
idivl
insb
mov
icebp
hlt
xor
cs
cmp
ljmp
hlt
jmp
inc
stc
movsb
hlt
jle
fisubrs
hlt
adc
push
bound
mov
hlt
dec
xchg
ss
or
mov
jp
fidivl
hlt
popf
sub
sti
hlt
push
jns
xchg
movsl
out
test
in
data16
sub
adcb
lock
je
test
jle
rorb
out
repnz
test
pop
hlt
lds
jns
hlt
sbb
outsl
nop
push
hlt
or
pop
dec
les
add
cwtl
js
leave
popa
ret
push
rorb
adcb
sub
add
arpl
in
hlt
sbb
xchg
std
stc
lret
add
and
xor
cmpsl
hlt
push
in
sbb
adc
sbb
cmp
cmp
out
jns
jnp
xchg
hlt
or
rcl
pop
je
fimuls
popf
adc
in
hlt
pusha
jb
xchg
ret
jge
dec
hlt
pop
fyl2xp1
aad
xor
insb
add
or
mov
popf
test
sub
fdivp
mov
jmp
xor
lods
sub
in
mov
jg
mov
idivl
xchg
insb
xor
pop
pop
dec
mov
ucomiss
inc
lock
sbb
push
int
ds
mov
pop
in
xchg
hlt
push
fdivl
shl
out
in
mov
and
hlt
mov
inc
cmp
sbb
icebp
pushf
hlt
ss
hlt
xchg
fmuls
add
das
mov
sbbb
jge
shl
fcom
bound
inc
cmp
dec
hlt
cli
and
clc
cmp
mov
or
daa
inc
jbe
and
adc
cmc
inc
ror
in
imul
aam
mov
adc
or
add
xor
add
stos
mov
test
cmpsb
xor
lock
jae
cli
mov
mov
lret
mov
test
in
add
mov
scas
cmc
pop
cwtl
and
hlt
sti
push
shll
neg
sub
vucomiss
sub
add
popa
les
add
hlt
lods
sub
push
mov
into
cmp
mov
mov
outsb
mov
iret
jo
pushf
xor
dec
mov
cmp
mov
adc
outsl
mov
or
sbb
push
sbb
inc
in
pop
push
imul
stos
sbb
mov
ja
jg
mov
sub
aad
pop
sahf
leave
dec
pop
sbb
mov
jp
movsb
jmp
cmp
pop
aad
hlt
and
aas
cmp
stos
cmp
gs
jb
sbb
inc
cltd
dec
popf
mov
cmp
add
scas
mov
hlt
loope
mov
imul
cmp
xchg
jae
notb
mov
xchg
iret
jne
jp
hlt
jg
cmpsb
rorl
rorb
lock
daa
and
pop
mov
mov
xchg
mov
mov
lock
out
sub
lods
lods
inc
pop
test
xchg
xor
mov
rorl
mov
rclb
mov
lret
jle
sbb
or
popf
ja
adc
jne
in
in
int3
in
fadd
rcr
jae
dec
sbb
mov
lret
xchg
xchg
add
mov
lods
ret
push
cmp
mov
inc
into
cmpsb
xor
xor
outsb
inc
xchg
int3
add
mov
jl
mov
push
lock
jb
push
push
mov
and
cmp
iret
mov
pop
jp
jnp
dec
hlt
stos
push
in
xor
pop
test
cmp
into
push
in
popw
ja
je
mov
xchg
jg
push
and
inc
lods
inc
push
jmp
inc
out
repnz
imul
push
pop
pop
lock
or
adc
push
pop
orl
jo
test
jp
pop
push
aaa
adc
inc
mov
jne
cmc
sbb
js
fwait
push
in
flds
mov
es
fwait
mov
leave
jp
mov
sub
fwait
add
mov
dec
jecxz
mov
fwait
mov
mov
in
adc
xchg
mov
push
jecxz
mov
fdivrs
es
stc
lds
mov
push
ret
jle
push
rcr
push
sub
hlt
icebp
pop
sub
aad
stc
mov
add
ret
pop
test
insb
sbb
aaa
mov
adc
ret
test
ret
xor
xchg
insb
rcr
or
aaa
jle
cmp
sub
fldcw
add
jecxz
ret
daa
mov
xlat
jbe
jecxz
add
sub
pop
iret
inc
icebp
outsb
shrl
cltd
sub
jbe
and
mov
or
pop
dec
mov
jle
jle
dec
sahf
scas
dec
loope
adc
aam
std
inc
sarl
mov
push
mov
jle
out
sbb
adc
add
xchg
pop
xchg
inc
fstpt
push
xchg
inc
pop
sub
inc
mov
dec
cmp
pop
das
jmp
sbb
mov
push
dec
je
negb
scas
xor
int
fcomip
pop
nop
sub
cmpsb
popa
mov
xor
xchg
xor
outsl
jae
push
icebp
or
mov
cmp
sub
or
xor
dec
pop
cltd
rcrb
sbb
add
xor
push
ret
and
ss
pop
xor
ret
sbb
outsb
mov
mov
enter
mov
pop
pop
xor
pushf
pop
xchg
add
out
dec
xchg
xor
jmp
aaa
and
pop
dec
and
lret
push
xor
enter
xchg
nopl
mov
arpl
fwait
aas
or
mov
mov
xchg
outsb
jnp
and
inc
or
xor
or
sbb
int
aaa
cmp
sbb
pop
dec
dec
fndisi(8087
add
pushf
add
dec
jp
mov
js
in
int3
bound
pop
jnp
jge
lock
push
hlt
ds
decb
mov
lret
not
nop
out
movsl
or
adc
mov
mov
das
fbld
test
xchg
cmpl
sub
jmp
sbb
lods
daa
xor
inc
sub
sbb
sbb
subl
daa
jnp
out
dec
adcl
loop
in
mov
push
aaa
mov
mov
push
adc
call
arpl
js
shlb
inc
outsl
sub
inc
jg
dec
add
sub
das
fwait
arpl
pop
sbb
mov
fcomip
pop
call
inc
push
sub
arpl
in
out
out
dec
xchg
xor
and
das
jmp
dec
pop
or
loope
and
pop
test
push
inc
mov
mov
fcomip
pop
sub
pop
cmp
imul
pop
mov
or
adc
jno
cmp
dec
dec
and
lods
rclb
jae
testb
jne
xor
das
xor
fwait
push
push
js
push
jmp
out
xlat
or
imul
or
or
cmp
inc
arpl
dec
aas
fwait
pop
bound
mov
pop
daa
addr16
arpl
pop
daa
cmp
lret
xor
imul
adc
push
sub
ss
xor
int3
dec
scas
pop
roll
fildl
inc
sahf
cmp
push
scas
cmp
fldenv
xlat
sbb
imul
test
push
cmp
daa
sbb
jecxz
or
xchg
add
xlat
xchg
cs
and
gs
outsb
sbb
and
and
mov
pop
push
pusha
stc
icebp
mov
xchg
jmp
cmp
dec
mov
out
pop
dec
fstl
mov
in
add
jo
jae
andb
push
aad
lods
addb
sub
jle
stos
mulb
adc
jne
insb
imul
jb
cmp
dec
sbb
xorb
daa
sub
je
div
jge
bnd
les
out
shr
push
and
arpl
mov
jge
mov
fwait
aad
sbb
jo
xchg
push
jl
loop
roll
fwait
inc
mov
decl
jnp
sub
fwait
outsl
xor
push
or
ficoms
inc
arpl
lods
fwait
jae
xorb
pop
je
add
jg
add
push
push
xor
cmp
into
sti
imul
adc
xchg
cmp
xor
mov
pop
push
clc
daa
or
int3
inc
cmpsl
jmp
xor
inc
dec
fcmovb
adc
fimull
mov
ret
dec
push
sbb
aas
mov
dec
popa
pop
ret
fwait
or
mov
cmp
mov
inc
aaa
jbe,pn
icebp
mov
aam
ss
mov
sbb
cmpsl
mov
loop
jnp
xor
mov
adc
js
imul
inc
push
jg
xchg
pushf
dec
and
pop
cmp
cmp
or
pop
pcmpeqd
sbb
and
adc
cmp
dec
jmp
mov
adc
mov
mulb
mov
gs
cmp
inc
dec
pop
adc
push
enter
in
cmp
std
xchg
sub
pop
and
sarl
in
jo
mov
sub
pop
dec
and
jl
iret
fcomps
dec
pop
lahf
cwtl
dec
cmp
mov
mov
mov
bsr
sub
sbb
jmp
inc
adc
sbb
push
and
in
xchg
dec
mov
add
arpl
xorb
pop
mov
addr16
shlb
addl
sysret
dec
mov
sbb
inc
ja
jp
mov
mov
jp
inc
std
out
shlb
ret
jae
js
xlat
push
fs
mov
inc
dec
out
mov
sub
mov
js
or
sub
dec
out
xor
push
aaa
jmp
xchg
mov
dec
adcl
sub
pop
scas
test
push
xor
lret
andl
push
scas
int
fcomip
pop
imul
andl
fwait
adc
jge
lret
and
push
xor
sub
loop
aaa
mov
sbb
fsub
xchg
add
pop
inc
jbe
arpl
das
cli
or
or
aam
mov
sub
fstps
xchg
test
inc
shlb
clc
aaa
push
cmc
sbb
pop
fs
mov
inc
cmpb
mov
sbb
jp
pop
test
xor
sbbb
push
test
mov
fiadds
fcomip
pop
ljmp
dec
adcl
ljmp
lods
adc
es
xor
push
aaa
mov
aaa
mov
adc
dec
pop
daa
or
sub
adcl
and
leave
push
aaa
pushf
das
adc
inc
inc
jnp
add
add
fstpl
xor
pop
and
inc
roll
in
mov
or
mov
mov
fildll
fdivrs
aas
dec
pushf
cmp
adcb
cmp
xorb
xor
push
sbb
inc
sbb
cmc
inc
fstpl
addl
in
xchg
adc
aas
sbbl
pop
pop
xchg
daa
xchg
imul
leave
ret
adc
bound
outsl
xchg
bound
xor
adcl
pop
pop
xchg
jae
outsb
and
aas
xchg
push
jg
and
ret
adc
push
and
aas
mov
pop
pop
sbb
xorl
sti
addl
ret
aaa
inc
lods
ja
push
aaa
cmpsb
daa
cmp
push
bound
mov
xchg
inc
jb
lea
sub
mov
xchg
inc
stos
push
xchg
int3
xchg
pop
sbbl
jp
aas
mov
fcomip
out
jmp
xor
repz
add
and
xlat
xor
add
fadds
sti
daa
sub
aas
leave
fs
cmp
mov
push
sbb
mov
dec
out
fstps
jge
iret
pop
pop
or
sbb
jne
mov
out
and
sub
fsts
push
inc
loop
pop
jnp
mov
push
stc
movsl
imul
repnz
rcrl
and
mov
mov
pop
dec
mov
xchg
cmpsl
cmpsb
mov
xor
push
aaa
and
imul
ficoml
cwtl
and
jmp
cltd
sarb
aam
divl
push
jns
cmp
mov
cld
pop
jbe
lods
sub
ja
mov
xchg
xlat
stos
and
loopne
jnp
subl
sub
insb
es
loop
in
pop
sub
adc
fildll
lret
or
data16
jl
mov
jle
frstor
fstl
vpmulhuw
stos
xchg
clc
cmp
push
outsb
loope
mov
inc
mov
out
test
mov
mov
xchg
fdivrp
cmp
bound
jle
enter
bound
push
arpl
adc
fwait
pop
mov
xchg
add
pop
dec
add
int3
pop
push
inc
es
and
outsl
push
push
and
leave
push
aaa
push
pop
and
bound
in
sbb
push
inc
jo
xchg
inc
pop
jnp
loope
addr16
inc
test
das
fcomip
pop
mov
pop
adc
sub
lea
fcomip
add
sahf
sbb
inc
adc
sub
into
stc
and
add
add
mov
mov
fisttpll
sbb
lret
adc
cmp
roll
xchg
cmp
xchg
fisttps
push
xor
xchg
sub
xchg
loopne
xchg
inc
and
adc
test
sub
mov
jle
jecxz
adc
push
cld
pop
outsb
xchg
cmp
cmp
jns
cmpsb
clc
into
pop
cmpsl
add
popf
mov
pop
imul
xchg
xchg
xor
push
or
pusha
add
bound
xchg
mov
dec
xchg
testl
and
sub
push
cmpsl
aad
adc
sbb
cld
jp
adc
jae
das
insl
outsb
cmp
enter
mov
inc
imul
inc
add
xchg
add
mov
insb
adc
sbb
push
mov
insb
in
pop
addl
in
iret
inc
iret
push
pop
add
mov
push
inc
add
cmp
iret
ret
imul
push
in
add
inc
lods
xchg
jge
adc
inc
xchg
loopne
inc
iret
fwait
push
jbe
shrb
adc
cmp
add
adc
iret
mov
repnz
pop
loop,pt
scas
lea
lds
mov
cld
xorl
testb
pop
adc
pop
in
push
jnp
push
data16
aad
adc
pop
rdmsr
sbbl
dec
mov
pop
mov
push
mov
pop
mov
xchg
shr
push
repz
dec
pop
movsb
xchg
jns
xchg
cmp
leave
mul
cmpl
inc
cmc
test
mov
dec
cmp
movsb
arpl
lahf
sbb
lret
test
cli
cltd
lcall
pop
push
in
and
inc
push
xchg
xor
xchg
fucomip
push
add
sbb
enter
xor
add
dec
ss
ret
sarl
xchg
sbb
sub
test
inc
xchg
inc
xor
sub
or
inc
outsl
inc
inc
mov
pop
sub
adc
push
aaa
repz
repz
dec
sbb
lods
pop
aas
lods
inc
lods
outsl
lods
ja
and
mov
arpl
jo
sbb
and
pop
scas
iret
mov
inc
aaa
daa
pop
cmpsl
out
rcll
cmpsb
push
or
fwait
in
pop
mov
sub
addr16
push
pop
push
inc
test
and
aad
sub
push
xchg
outsl
add
mov
mov
lods
inc
mov
jne
lahf
cmpsl
popf
imul
cmp
lods
mov
cmpsl
mov
sbb
push
ja
push
inc
cmpsl
mov
pop
fidivs
mov
dec
lahf
in
pop
cmpsl
test
xchg
pop
push
push
shlb
fwait
stos
loop
cmc
push
inc
or
pop
inc
jg
dec
sbb
nop
jg
pop
mov
push
push
filds
outsl
fstpt
and
enter
push
xor
test
jae
pop
cmpsl
or
jbe
xor
push
jb
or
stos
loopne
xchg
lret
fs
jae
fwait
push
cmpsl
insl
aaa
jb
push
call
arpl
adc
jae
mov
lahf
stos
cli
jp
xchg
inc
aas
cmp
pop
fwait
sbb
xchg
inc
xchg
pop
push
inc
test
jae
fwait
in
int3
pop
jbe
repz
xchg
pop
iret
or
lock
inc
test
jae
aam
pushf
arpl
out
xchg
inc
sub
sbb
xchg
test
mov
enter
and
adc
lcall
imul
add
xor
xor
pop
ja
cmpb
mov
xlat
fcmovnu
out
idivb
push
inc
sbb
cmp
xlat
pop
ja
in
mov
dec
pop
das
std
cmpb
or
rolb
add
jp
into
cmc
inc
add
dec
cwtl
cltd
xchg
rolb
inc
aas
sbbl
inc
cwtl
sahf
iret
aas
sbb
dec
fwait
push
xlat
pop
imul
decl
adc
add
loopne
outsb
aaa
out
unpcklps
ret
out
mov
outsb
xor
movsb
outsb
andb
imul
lds
imul
das
cmpsb
loop
sub
cwtl
adc
pop
add
ret
xchg
cltd
and
inc
xor
les
pop
mov
mov
sub
iret
jbe
vzeroall
inc
mov
popa
mov
mov
pop
push
add
pop
dec
bound
xor
add
pop
xor
xchg
repnz
dec
push
out
or
imul
inc
push
out
pop
adc
scas
dec
mov
dec
out
inc
and
aaa
outsl
adcl
enter
adc
cltd
xchg
pop
cmpsl
jmp
jp
pop
outsb
and
lds
push
and
inc
sub
sbb
add
or
adc
cs
cmp
or
mov
adc
push
adc
seto
xlat
xorl
pop
enter
cld
jmp
lods
fisttps
pop
ds
xor
mov
in
pop
push
popf
jmp
dec
xlat
mov
ficoml
in
lds
add
xlat
cmpsl
lahf
inc
hlt
dec
pushf
aam
adc
stos
sbb
sub
adc
jge
sub
test
idivl
and
mov
xchg
mov
les
add
mov
into
mov
jb
shlb
outsl
dec
xchg
xchg
mov
cmp
inc
mov
rol
mov
es
ljmp
adc
pop
aas
aad
inc
adc
hlt
pop
xchg
mov
ret
jbe
adc
sbb
cmp
inc
inc
pop
repz
cmpsb
fimull
mov
mov
and
add
pop
adc
nop
push
shll
mov
ss
out
jecxz
addr16
out
xchg
adc
sub
jnp
lret
aaa
addr16
mov
jg
cmc
inc
xchg
xchg
xlat
out
push
daa
add
xchg
adc
mov
sub
inc
aaa
mov
lea
ret
iret
daa
adc
sub
adc
or
mov
into
pop
adc
negl
pop
pop
lcall
roll
ja
cmpsl
or
xchg
addb
add
xlat
jmp
mov
and
into
in
sarb
sbb
cs
push
adc
mov
adc
and
add
lea
idivb
movsl
fildl
setne
ljmp
cmp
sbb
sub
pop
out
pop
mov
add
repz
aam
hlt
sbb
dec
pop
jnp
scas
sahf
testl
xchg
jmp
rclb
hlt
loopne
or
cmc
hlt
cmp
mov
repnz
cmp
lret
shr
xchg
insl
hlt
or
dec
xor
mov
imul
mov
in
cmpsb
hlt
and
sbb
in
sbb
lock
lds
hlt
push
push
dec
sbb
or
cmpsb
movsb
movsl
mov
push
pop
mov
dec
mov
das
ds
jne
fiadds
and
aad
jne
in
aam
or
ja
cs
sbb
rorl
cli
test
dec
stos
hlt
push
fcompl
inc
cmpsb
pushf
inc
in
cmp
cmc
sbb
fisubrs
push
inc
hlt
or
addb
cmpsb
fwait
jnp
add
push
hlt
sbb
jle
mov
xchg
hlt
orb
fidivrl
xor
imulb
imul
dec
adc
mov
lret
hlt
inc
popa
paddb
icebp
imul
hlt
xchg
xchg
jle
aad
sub
hlt
mov
inc
pop
or
in
cld
mov
mov
jbe
loope
scas
push
sahf
cmc
inc
lcall
mov
cmp
sbb
aam
push
push
or
inc
fcom
lret
cmc
imulb
dec
or
imul
mov
push
testb
hlt
sbb
sti
and
inc
data16
adc
cmpsl
mov
dec
popa
xchg
add
mov
inc
outsb
stos
sbb
test
in
cmc
or
push
scas
mov
hlt
pop
sarb
mov
nop
xchg
jp
fisttps
movsl
mov
xor
mov
addr16
and
loopne
sarl
sbb
mov
xchg
or
rorb
xorl
mov
sahf
jge
incb
into
insb
mov
push
xchg
imul
or
aad
into
sbb
jle
pushw
sahf
insb
pop
adc
pop
hlt
in
mov
pop
dec
and
bound
xchg
mov
hlt
mov
push
test
pop
add
cmp
pop
xor
test
mov
test
int
out
jmp
xor
sub
aam
fstpl
inc
aad
insb
int3
sbb
inc
or
stos
adc
leave
jae
inc
negl
inc
rcll
xchg
pop
hlt
dec
push
mov
fistpl
jge
cmp
aam
pop
mov
push
pop
leave
dec
scas
out
imul
sbb
add
js
in
push
hlt
jl
sub
mov
scas
in
jge
inc
add
hlt
iret
push
add
xorl
xor
movsb
in
out
hlt
je
add
mov
and
pusha
scas
lahf
imul
jp
ja
add
sbb
xlat
popf
sahf
sahf
hlt
stos
or
and
sbbl
cmp
fcmovne
int
add
fcom
dec
adc
sub
mov
mov
shlb
xor
jb
fwait
add
int
stos
aas
push
or
stos
xchg
inc
inc
adc
testl
mov
jnp
lret
arpl
gs
lock
loope
clc
aam
faddl
hlt
aam
cli
mov
mov
dec
hlt
xor
pop
sub
or
mov
fwait
rcr
xchg
adc
sbb
sub
outsb
xlat
mov
pushf
ljmp
push
or
mov
jb
push
mov
and
mov
outsb
xor
ror
das
shl
les
hlt
addb
hlt
in
lods
xor
iret
adc
lret
aas
cmp
pop
hlt
out
cwtl
xor
pop
mov
hlt
mov
jp
lret
in
hlt
fidivl
sti
data16
loope
aad
dec
aad
mov
out
out
and
hlt
add
sahf
aad
sbb
or
dec
fxch
hlt
inc
jnp
add
add
hlt
xor
cmp
cld
dec
hlt
adc
jnp
sub
push
in
cli
cmp
mov
hlt
lahf
or
or
hlt
mov
jns
mov
dec
out
movntq
out
popf
insb
push
roll
shrb
pop
push
add
mov
xchg
pop
hlt
mov
mov
popf
in
dec
adc
push
ret
scas
adc
mov
adc
hlt
dec
xor
bound
out
or
jne
jno
lods
scas
hlt
jle
leave
pop
xchg
addr16
adc
pop
aad
and
cli
jmp
neg
shlb
ljmp
std
hlt
xchg
out
orb
sbb
sbb
stos
jmp
push
jo
je
pop
or
es
pop
ljmp
insl
hlt
ljmp
je
xlat
dec
and
adc
outsb
aam
cli
aas
sbb
or
sbb
pusha
jo
mov
jecxz
cmp
or
shrb
popa
hlt
xchg
and
gs
in
mov
addr16
xlat
loopne
cmp
lcall
ljmp
imul
mov
dec
cmp
lret
mov
dec
dec
outsb
jle
cmp
mov
hlt
and
sahf
fucomip
paddw
cld
xchg
xor
push
pop
mov
lret
sbb
mov
dec
and
jo
push
add
and
cli
out
call
cmp
test
je
call
test
pop
out
shll
dec
orb
pusha
mov
aas
popf
push
mov
in
decb
push
ret
jbe
or
or
mov
or
or
and
add
pushl
int
ja
test
pop
push
shl
cli
rcr
cmpsl
and
xchg
xchg
dec
cld
notl
mov
sub
repnz
leave
add
dec
in
mov
adc
cmp
dec
sbb
sti
xchg
mov
jp
mov
jecxz
pop
inc
mov
popa
aas
dec
hlt
sub
fistl
mov
mov
cmp
mov
sbb
hlt
mov
jp
roll
mov
cwtl
pop
int
sbb
adc
sbb
ficoml
jne
sub
xchg
mov
sti
dec
sbb
rorb
pop
imul
xor
mov
pop
jo
jb
ja
push
lret
aaa
iret
mov
mov
and
aas
mov
add
mov
mov
or
imul
mov
sbb
icebp
sub
jo
xlat
mov
add
dec
pop
jns
mov
jae
jl
cmp
xor
aas
mov
inc
sbb
jp
fildll
inc
cli
ret
push
add
mov
ficompl
push
in
adc
cmpl
jb
pop
xchg
mov
push
cli
ficoms
xchg
data16
inc
daa
mov
mov
or
andl
cs
mov
cmpsl
mov
jne
imul
aas
mov
dec
dec
inc
fwait
adc
cmp
mov
mov
push
or
outsb
mov
movsl
dec
sub
stos
enter
pop
pop
jo
sub
pop
mov
pop
jae
xor
xor
insb
push
bound
cli
les
mov
sub
inc
fwait
adc
js
pop
push
and
pop
xchg
cltd
outsb
and
lret
out
lds
mov
jb
inc
stos
sbb
sbb
dec
fildl
cmp
sub
fldenv
add
test
lock
mov
xchg
lcall
cmp
sub
adc
cs
sub
outsl
xchg
ss
and
ret
aaa
pop
add
call
and
jne
xor
dec
arpl
and
sbb
adc
aaa
subb
push
push
cli
inc
push
stos
daa
mov
push
or
stos
aas
xor
xchg
mov
enter
sub
test
aas
loopne
jmp
fs
sbb
dec
sbb
stos
lock
inc
mov
mov
popf
cmp
mov
scas
stos
enter
test
int3
mov
aas
sti
or
add
cmp
xor
dec
lods
jbe
cwtl
sbb
adc
mov
dec
cmp
ds
outsl
mov
push
xchg
xchg
repz
sub
roll
dec
pop
push
inc
xchg
push
out
ret
sub
enter
not
sti
add
aaa
pop
add
incl
sbb
popa
add
fwait
xchg
test
out
pop
pop
imul
or
pop
mov
leave
jle
xchg
dec
add
cmp
fbstp
sbb
add
push
jne
add
cmpl
adc
pop
cld
bound
ficoml
js
inc
fwait
and
xlat
mov
mov
pop
imul
adc
jge
mov
jge
fwait
xor
mov
std
mov
mov
sbb
mov
push
sub
fwait
and
push
inc
cmpl
insl
out
test
and
in
xchg
dec
insl
xchg
mov
dec
ret
inc
xor
das
test
stc
lods
sub
ja
xchg
xchg
xor
data16
dec
das
mov
mov
aaa
push
and
stc
inc
fldenv
jl
enter
cmp
add
movsb
iret
xchg
xchg
filds
jmp
cmp
lock
mov
sbb
mov
xlat
or
hlt
mov
test
add
imul
push
jno
nop
adc
jno
jne
lea
sbb
jge
ja
cmpsl
shl
mov
cmp
out
filds
jge
xchg
pop
sub
dec
imulb
dec
xor
sbb
popa
cwtl
xchg
xchg
adc
xchg
jne
scas
hlt
je
cmp
sbb
test
push
jne
sub
xlat
orl
adc
dec
cmpsb
ret
jnp
add
inc
and
inc
bound
add
lahf
out
mov
cld
jg
sbb
js
scas
adc
call
jnp
mul
imul
ja
sbb
dec
les
movb
pop
leave
adc
loopne
push
jae
mov
bound
xchg
repnz
jb
push
sets
inc
adc
or
push
int
cmp
out
lods
mov
jg
inc
dec
and
dec
or
popf
mov
lock
repnz
ja
inc
stc
add
and
lds
leave
outsb
dec
xchg
cmp
inc
pop
enter
jmp
aam
and
scas
scas
sub
jnp
leave
and
push
push
xchg
ror
or
cmpb
xor
sbb
iret
das
push
xchg
sub
pop
aas
push
test
aad
loop
rolb
call
or
pop
aas
xor
xchg
popf
mov
test
or
ret
gs
aaa
sub
cmpsl
xchg
pop
les
cmp
pop
pop
jbe
adcl
sbb
xchg
dec
dec
stos
adc
divl
jmp
or
movsl
push
adc
push
scas
mov
decb
bound
mov
loop
aas
sbb
out
test
adc
int3
adc
in
sub
aaa
repz
les
div
imul
pop
or
stos
mov
xor
pop
or
ja
loope
dec
or
mov
sub
in
adc
cmp
add
mov
mov
sub
add
frstor
inc
setbe
sbb
dec
daa
cld
scas
cmpsb
ds
adc
ret
lahf
fstpt
inc
mov
sub
cmp
imul
cwtl
in
lcall
cmpsb
inc
movsl
shlb
mov
pop
outsb
jae
and
adc
sub
hlt
ljmp
sub
mov
cmc
or
icebp
jg
and
notl
push
pop
jecxz
mov
add
mov
add
pop
dec
mov
adc
int3
add
mov
imul
dec
data16
outsb
or
or
cmp
pop
cli
hlt
or
leave
add
dec
jg
std
out
dec
hlt
dec
aam
sub
inc
mov
in
sub
int3
jl
pop
cmp
out
inc
jb
pop
test
aas
mov
test
loop
testl
mov
aas
push
sbb
fildl
hlt
push
mov
popf
push
mov
hlt
iret
jle
inc
cmc
sbb
cmp
aas
lea
stos
popf
sahf
hlt
add
leave
add
mov
mov
cmc
out
decl
fsubrl
sbb
mov
cmp
hlt
lds
iret
sbb
ret
ficoml
mov
ss
hlt
sbb
sbb
in
jmp
and
pop
jle
sbb
mov
jae
repnz
hlt
xor
pop
push
adc
notb
jg
hlt
fstpt
stos
xchg
add
xor
out
or
adc
test
icebp
in
leave
mov
pop
jp
hlt
js
aam
pop
lret
cmp
sbb
insb
pop
test
inc
scas
push
xor
aad
hlt
shr
into
or
std
daa
xor
iret
jl
mov
insl
push
sbb
int
lds
push
jne
lahf
xor
inc
cmp
jnp
push
fcoml
mov
arpl
hlt
adc
int
pop
mov
xor
mov
pop
jns
lea
fnstcw
loop
rcrb
insb
mov
out
mov
scas
xchg
popf
hlt
pop
mov
or
jb
out
shrb
in
orb
mov
jge
hlt
sarb
cli
mov
mov
or
jmp
jl
add
out
xor
and
das
add
sbb
shrl
sbb
sbb
ljmp
or
js
xor
jnp
mov
cmpsb
dec
jne
dec
mov
xor
cmc
inc
hlt
push
mov
dec
cmp
add
sarl
adc
outsl
pushf
cmp
cmc
push
inc
xchg
jl
mov
into
sbb
dec
testl
das
cmpsl
inc
push
rclb
push
aad
xorl
cs
aaa
push
inc
orb
pop
push
fidivl
leave
imull
fimull
pop
xchg
call
daa
or
mov
enter
fwait
dec
mov
aam
push
add
xor
mov
cwtl
fnstcw
popf
nop
dec
adcb
cmp
mov
loopne
out
loopne
or
idivb
sub
aas
jg
popf
jl
push
push
mov
push
in
mov
sbb
push
popf
xchg
hlt
xchg
stos
test
fs
or
or
scas
add
loop
out
hlt
push
jae
mov
and
in
insb
mov
outsl
cmpsl
fisubrl
fcmovb
out
cld
hlt
mov
mov
out
pop
imulb
xchg
sub
sbb
pop
adc
xor
mov
hlt
aaa
stos
sbb
dec
hlt
mov
xchg
in
out
out
hlt
insl
aas
xor
scas
stos
rcrb
repnz
in
and
jp
hlt
push
or
fdiv
test
aaa
and
or
iret
out
loope
pop
mov
sub
imulb
xorl
mov
push
mov
add
test
xorb
cmp
sub
hlt
and
mov
nop
fcomip
mov
imul
out
sti
mov
sbb
pushf
jns
hlt
lods
xor
mov
jg
cmp
mulb
std
jne
ja
ret
clc
xchg
aad
iret
hlt
dec
movsl
adc
xchg
shl
in
cltd
sub
hlt
jns
lret
movsb
mov
out
xchg
sbb
mov
fidivs
ret
or
out
and
jne
mov
hlt
push
jle
push
mov
aam
hlt
clc
ret
in
inc
in
xor
mov
das
push
adc
scas
test
sub
push
jl
data16
int
push
sbb
and
cmp
mov
test
and
mul
fwait
rolb
imul
repnz
inc
shl
out
mov
hlt
lcall
dec
imul
test
ret
int
imul
cltd
ss
jmp
aam
mov
outsl
mov
hlt
rorl
sbb
imul
jl
sti
and
inc
lock
jp
call
movsb
movsl
fcomip
or
ret
sbb
sbb
adc
negl
daa
je
sbb
mov
adc
jo
imul
mov
mov
scas
sub
adc
out
leave
add
dec
psadbw
mov
add
hlt
shlb
jmp
sti
scas
out
sbb
mov
add
lahf
add
ja
movsb
ljmp
imul
mov
dec
mov
mov
mov
jns
sbb
sti
xchg
addr16
sbb
adc
adc
int
adc
cmp
xlat
out
push
insl
or
mov
adc
and
or
lret
or
jle
fsub
aad
dec
dec
clc
push
hlt
lock
nop
xor
hlt
pop
in
in
aam
inc
mov
dec
fidivrs
sbb
dec
sbb
je
out
xor
cmp
je
lret
hlt
lock
and
movsl
aad
mov
push
push
popf
sub
and
xor
adc
shl
adc
in
mov
outsl
imul
and
mov
mov
hlt
fidivs
shr
jmp
clc
xchg
movsl
adc
cmpsl
int3
cmp
adc
push
insb
add
mov
mov
and
popf
ror
dec
pop
popf
in
hlt
sbb
subl
imul
jp
cwtl
cmp
jl
mov
mov
inc
out
mov
addr16
and
xchg
jge
and
inc
pop
ja
adc
das
xchg
lea
ja
sahf
lods
ja
pop
xchg
cmp
aam
push
sbb
ja
sub
xchg
fwait
or
clc
ficompl
sub
mov
hlt
jno
lret
out
jecxz
pop
pop
hlt
jg
fdivp
adc
xchg
inc
flds
sbb
xchg
out
loopne
add
hlt
rcrb
sbb
mov
mov
popa
or
dec
adc
sub
mov
pusha
mov
stos
cmpsl
xor
addr16
sbb
popf
push
lret
insb
js
mov
sbb
mov
aam
hlt
out
pop
popa
jg
daa
imul
push
dec
imul
hlt
push
pop
rcll
ficompl
mov
push
lahf
hlt
jmp
sub
hlt
stos
mov
mov
mov
lcall
add
push
hlt
or
adc
fs
cmp
sbb
adc
add
jno
stos
insl
cltd
jg
and
sar
test
xchg
hlt
scas
pop
pop
leave
and
add
or
inc
mov
hlt
sub
aad
xor
and
jg
cmp
cmc
lcall
sbb
add
add
incl
sub
fwait
stos
insb
lahf
hlt
mov
push
xchg
fnstsw
lea
and
jo
mov
ficoms
hlt
mov
mov
cmp
out
aam
lcall
insb
sub
jp
je
imul
lret
jg
mov
hlt
sti
lds
dec
movsb
pop
jae
xchg
in
mov
test
ret
add
test
mov
outsb
sahf
and
pushf
int
pop
stc
inc
mov
jecxz
mov
xor
in
hlt
inc
adc
cmp
jp
jno
pop
mov
or
imul
mov
mov
adc
jge
mov
daa
stos
jecxz
das
ss
add
mov
popl
bound
sbb
cmp
cmp
fidivrl
hlt
clc
jbe
sbb
lds
out
mov
sbb
rcll
jmp
sti
clc
hlt
int
call
mov
cmp
inc
hlt
call
dec
xchg
xchg
jg
int
hlt
mov
mov
pop
pop
call
jo
pushf
inc
lret
mov
fsin
aas
push
popa
into
jne
push
jo
fs
out
xor
filds
and
jnp
pushf
data16
xor
xchg
sti
shl
ljmp
out
js
inc
jo
pop
dec
mov
sbb
out
push
jl
hlt
mov
jge
dec
xchg
xchg
or
sub
sbb
icebp
push
push
pop
or
cwtl
dec
xor
hlt
mov
cli
mov
hlt
jb
pop
rcll
sub
adc
daa
insb
jns
cmp
hlt
push
xor
mov
sub
js
std
mov
jp
test
mov
push
sti
or
insb
jo
xchg
and
pop
test
stos
lods
fchs
xor
hlt
xchg
stc
jae
add
out
clc
xlat
hlt
mov
mov
ljmp
rclb
repnz
outsl
pop
adc
cmp
sti
and
fnstenv
out
leave
hlt
sbb
cmp
mov
test
mov
inc
adc
cmp
adc
pop
adc
ja
lret
or
imulb
dec
inc
insb
adc
sub
jg
cmc
jns
mov
imul
ljmp
in
fisubl
mov
out
outsl
sbb
loop
xchg
pop
hlt
adc
push
scas
xchg
arpl
push
stos
dec
push
int3
mov
adc
jmp
xchg
in
dec
or
push
dec
hlt
das
out
lods
lods
jnp
movsb
pop
hlt
add
xor
popf
ret
popa
imul
flds
loope
cmp
or
mov
pop
les
pop
out
test
jg
lret
xor
vpsubw
insl
jnp
and
mov
ror
sub
mov
in
fldl
scas
push
sbb
pop
pop
jmp
imul
lret
mov
push
shlb
mov
or
push
mov
scas
inc
or
dec
js
loop
xchg
jo
cmp
testb
sub
sbb
leave
xchg
xlat
inc
and
mov
hlt
test
in
mov
je
hlt
cmp
rorl
jp
sahf
dec
mov
jo
mov
js
iret
push
cmp
sbb
aam
jl
xor
lcall
hlt
push
dec
mov
dec
cmp
jae
testb
js
adc
cld
jp
xchg
pop
push
add
icebp
hlt
stos
jl
xor
mov
pop
inc
adc
das
xchg
in
adc
adc
fsub
fwait
xor
iret
jl
xchg
adc
adc
in
adc
cmp
xchg
inc
add
dec
ss
cmp
or
sahf
imulb
hlt
or
outsb
push
xchg
hlt
stc
pop
dec
aaa
dec
scas
jge
push
sarb
pop
leave
hlt
or
jle
imul
in
push
xor
hlt
int3
dec
js
shl
lea
add
hlt
push
add
jp
repnz
mov
hlt
mov
je
mov
push
cmc
lret
or
cld
iret
inc
leave
cmc
sarl
inc
jp
hlt
lcall
hlt
jmp
or
addr16
iret
hlt
xlat
imul
pop
dec
scas
mov
mov
imul
mov
adc
repnz
sbb
mov
mov
in
jmp
sbb
jne
push
call
out
jae
divb
pop
js
inc
mov
or
ja
in
hlt
sub
shl
adc
pop
jbe
lret
fcomp
adc
adc
push
add
mov
mov
hlt
sub
ret
jp
and
hlt
push
test
inc
std
jmp
lods
pop
aas
in
mov
lock
dec
sub
addr16
sub
mov
popl
das
adc
jae
les
sbb
hlt
and
cmp
fldcw
je
pop
dec
xor
lea
pop
jbe
jge
nop
repnz
sub
scas
rolb
fadds
hlt
sub
or
aas
or
aam
jbe
jmp
aaa
mov
scas
lods
jge
inc
pusha
icebp
add
sbb
outsl
sti
movsl
sbb
inc
pop
hlt
mov
test
sbb
ljmp
lret
hlt
rcr
gs
hlt
out
test
xchg
scas
adc
mov
xchg
cmp
hlt
inc
ljmp
mov
hlt
lods
fwait
sti
and
sti
lds
xor
hlt
fnsave
mov
mov
icebp
xchg
mov
xor
cmp
adc
xchg
mov
cld
cmp
jg
or
test
push
sub
or
leave
pusha
cmp
mov
sbb
jae
mov
fsubrl
icebp
testb
sbbl
dec
add
mov
mov
inc
jle
jl
cli
jb
xor
hlt
sbb
ret
hlt
fwait
jg
popf
out
mov
push
and
xchg
stc
sub
shl
mov
call
lret
clc
sub
and
jg
stos
out
idiv
mov
jg
add
inc
push
inc
and
adc
pop
or
jge
add
call
es
divl
rclb
sarb
fwait
outsb
test
stos
addr16
mov
imul
fcomip
mov
xor
inc
cld
imul
repz
mov
dec
data16
cmp
adc
hlt
mov
ret
ret
xor
hlt
dec
mov
rcrb
out
dec
sub
aam
inc
clc
or
xchg
hlt
out
sbb
addb
push
mov
mov
jg
fdivr
add
inc
mov
xcrypt-ecb
cmpsl
into
and
sbb
sbb
or
inc
pusha
out
insl
xor
pop
pop
dec
lret
fldcw
mov
cmc
jg
insb
rcrb
insl
mov
into
add
lret
shr
mov
jl
mov
mov
std
dec
cmp
movsl
jp
cmp
fcomip
stos
pop
push
mov
stc
hlt
insb
arpl
sbb
call
shll
inc
js
mov
hlt
rorb
add
push
arpl
adc
hlt
adc
aad
divb
sarl
daa
dec
jecxz
hlt
cmpsb
inc
jae
cmp
xchg
int3
sbb
sub
hlt
dec
pop
fnstenv
or
mov
pop
je
push
jb
dec
sbb
sbb
jmp
iret
pusha
hlt
jnp
ljmp
mov
push
hlt
mov
sbb
test
jge
stc
cmp
cld
sbb
jne
xchg
inc
pop
clc
hlt
lahf
fdivl
dec
hlt
mov
mov
inc
push
mov
inc
js
nop
cmp
pop
rcr
adc
int3
mov
in
clc
mov
mov
xor
xchg
pop
hlt
pop
mov
pop
shll
aas
or
out
in
sbb
cltd
scas
into
xor
xchg
divl
xor
int
push
or
and
xchg
outsb
icebp
add
sti
sbb
jnp
stos
jae
mov
cmp
push
jb
pop
out
not
hlt
scas
cwtl
push
ret
cmp
adc
pop
sub
lahf
add
and
imul
push
xor
jg
rclb
aas
xorl
inc
xor
jo
push
and
mov
sbb
test
loop
sub
mov
shll
fiaddl
mov
add
mov
shl
cld
cltd
loop
jl
repz
xor
and
daa
inc
jo
rcll
hlt
and
mov
dec
test
js
subb
hlt
or
rorb
inc
dec
loopne
test
adc
icebp
cmp
sbb
inc
test
clc
sbb
imul
adc
shrb
fldenv
hlt
pop
jno
inc
bound
xor
cld
cmpsb
notb
fidivs
xchg
lods
xchg
add
pop
aam
cwtl
mov
fnstsw
or
mov
in
sub
data16
add
cmp
mov
adc
mov
es
sub
fs
imul
cmc
in
jne
push
pop
add
lret
daa
in
mov
sub
or
leave
add
or
or
jp
icebp
test
hlt
fsubs
iret
push
mov
cwtl
push
jmp
lahf
imul
stos
mov
adc
push
iret
mov
pop
out
hlt
movsl
cs
stc
std
aad
push
and
mov
ja
xor
add
call
aam
sub
add
add
les
push
mov
xchg
cli
cmpl
push
nop
add
cmp
ret
jne
adc
lahf
pusha
or
mov
jp
sub
hlt
int
mov
mov
jmp
mov
adc
jge
push
mov
sub
mov
push
jb
hlt
sub
mov
xor
dec
and
das
neg
sub
or
hlt
lock
ja
dec
push
hlt
test
lcall
out
sar
aas
fwait
or
je
outsl
xchg
jbe
mov
add
pushf
sub
and
sbb
hlt
aam
jb
pop
sbb
cld
hlt
mov
inc
leave
or
pop
loope
jo
aam
shl
cmp
jge
or
cld
pop
sub
dec
aas
movsb
dec
push
and
mov
dec
cmp
mov
pop
ret
mov
xchg
adc
push
sub
push
mov
ljmp
insl
int3
lods
ljmp
mov
movsl
hlt
or
xor
je
pop
hlt
lret
ljmp
hlt
mov
or
xchg
xchg
sub
ret
xor
fdivrl
hlt
dec
or
ss
fidivrl
cmpsl
mov
xor
es
dec
mov
xor
add
jle
jp
push
pushf
push
adc
lret
cmc
push
xlat
push
mov
jo
fs
adc
or
mov
idivb
adc
mulb
inc
scas
in
xchg
cltd
mov
mov
pop
cmc
lds
imul
and
or
iret
vmovdqu
cmp
xchg
mov
enter
cmc
jbe
dec
adc
jg
sub
hlt
pop
cmp
jnp
or
lods
or
mov
jp
dec
xchg
add
sbb
xlat
repnz
mov
adc
add
mov
shrl
test
lret
mov
xor
iret
jle
lret
ret
mov
jl
hlt
xor
fimuls
hlt
sub
push
dec
pop
test
rcr
cmp
ds
mov
popf
pop
mov
xor
add
and
fsubrl
dec
jbe
test
hlt
sbb
push
js
lret
and
and
nop
out
or
into
imul
inc
mov
and
hlt
jbe
adc
jne
pop
loop
adc
cmc
out
lahf
lods
push
mulb
dec
mov
int3
sbb
out
stos
sbb
xchg
jl
pop
and
in
hlt
lahf
stc
cli
jecxz
cmpsl
inc
insb
add
fidivl
movsb
loope
hlt
add
pop
xchg
fwait
add
stos
into
outsb
sbb
cwtl
dec
aas
sbb
inc
dec
divl
lret
cmpsl
cld
outsl
sbb
hlt
clc
xchg
cltd
sub
jno
and
hlt
sub
das
inc
pop
xchg
stos
hlt
loope
leave
sbb
mov
pop
pop
pop
xor
xor
adc
cli
push
push
loop
ss
jp
mov
dec
mov
sahf
sub
ljmp
xor
ja
mov
daa
in
cmp
orb
jb
xor
mov
lcall
imul
mov
inc
sub
aas
xor
push
mov
outsb
jle
insl
and
mov
mov
push
push
mov
lods
dec
or
mov
std
push
hlt
xchg
in
inc
lds
cmp
or
dec
divb
je
push
hlt
xor
cmpsb
lret
xchg
mov
jns
lahf
dec
adc
mov
lods
outsb
push
jmp
scas
sub
cmp
jne
stos
hlt
inc
loop
ja
insl
test
hlt
popf
mov
jno
addr16
shl
or
xchg
pop
hlt
repz
sbb
clc
mov
hlt
add
push
cmp
es
hlt
in
out
sbbl
stos
movsb
aaa
cmp
lcall
aad
hlt
push
push
jb
mov
gs
imul
mov
into
hlt
test
push
pusha
out
mov
fildll
imul
inc
push
insl
ja
add
or
fstpl
pusha
call
aam
xchg
incb
dec
adc
mov
icebp
add
pop
pop
or
or
push
xor
sahf
ja
cmp
xchg
pop
lret
xchg
stc
jae
cmc
dec
hlt
or
out
jmp
ficomps
xor
mulb
xor
inc
mov
test
dec
jo
or
fxtract
xor
mov
dec
or
pop
cmpsb
mov
aad
hlt
xchg
pop
xlat
jbe
inc
scas
adc
adc
cmp
cmc
movsb
pop
fistps
bswap
xchg
mov
or
add
cmpl
push
aaa
ret
cld
out
mov
test
shll
cmp
in
cld
xchg
in
or
and
int3
or
in
pop
rcrb
add
ret
mov
aaa
cmc
dec
jae
add
cli
mov
cmp
xor
adc
xchg
shlb
out
adc
mov
push
nop
add
insl
or
repnz
mov
iret
imul
inc
mov
addr16
pop
add
dec
sti
mov
fdivrs
lahf
push
call
jbe
lcall
cmp
jmp
sub
pushf
mov
xchg
sbb
out
ss
jne
stc
xor
add
dec
sarb
and
jbe
les
dec
push
dec
or
push
dec
and
mov
jne
push
out
fmull
mov
in
adc
imul
cli
mov
or
push
cwtl
sysenter
inc
sbb
out
push
addr16
sub
hlt
mov
dec
into
adc
cld
cli
or
pushf
into
ja
push
cmpl
call
lods
hlt
lock
dec
clc
xor
add
mov
movsb
adc
dec
rolb
or
mov
push
lret
bnd
cmp
cltd
lahf
testb
adc
and
fwait
push
push
dec
pushl
push
stos
hlt
xchg
ret
mov
mov
cmc
jl
mov
icebp
imul
ja
mov
xchg
in
hlt
xor
jns
sbb
jmp
jl
push
xchg
push
divl
push
push
popf
test
xchg
loop
mov
outsl
push
mov
je
or
push
rcrb
sbb
mov
mov
popf
mov
dec
push
int
leave
sub
push
inc
mov
shll
mov
push
ss
sbb
leave
addb
je
shr
fwait
sbb
inc
lret
hlt
and
popf
lock
mov
lret
insb
dec
pusha
stc
in
fstp
cltd
addr16
or
dec
jmp
loopne
mov
gs
jo
jg
aam
jmp
insl
sub
push
out
je
mov
mov
push
hlt
cs
jb
dec
bound
movsl
or
jo
popa
jbe
push
lahf
add
mov
cmc
jae
imul
aam
cmp
imul
rorb
sbb
cwtl
aad
arpl
pop
stos
ret
lret
lods
out
hlt
inc
insl
movsl
sbb
pop
cmp
fistpll
push
jb
or
movsb
es
sti
xchg
adc
or
stc
cmp
adc
repnz
fiadds
hlt
jae
jo
int
into
mov
mov
pop
movsl
mov
movsb
push
and
cmpsb
mov
mov
push
js
xchg
shrb
and
mov
cmp
push
lahf
fst
hlt
mov
rcll
test
adc
xchg
pop
push
hlt
xor
dec
sbbb
add
mov
or
push
ds
rorb
sub
lods
jl
ss
out
hlt
jp
iret
add
adc
push
jnp
pop
mov
hlt
and
ljmp
jge
aam
je
hlt
pop
in
mov
add
mov
mov
imul
xor
cli
repnz
xor
hlt
or
sub
lods
out
and
inc
pop
notb
push
jo
inc
jmp
cs
hlt
cmp
cld
jl
das
psrld
movsb
push
sub
ds
xor
fidivl
push
popa
call
test
inc
hlt
push
int3
or
lods
aaa
pop
xchg
add
xchg
xchg
sti
or
push
imul
flds
testl
dec
jb
jae
xor
out
mov
scas
hlt
mov
mov
cmpsb
icebp
test
sbb
or
hlt
shlb
adc
mov
jae
lret
dec
or
jp
hlt
sub
std
inc
hlt
xor
sbb
jecxz
test
mov
pop
dec
imul
bound
fiadds
jg
movsb
push
aam
mov
push
rolb
add
mov
imul
cld
xor
mov
ja
pop
sbb
xchg
mov
cmpsl
dec
hlt
into
add
xor
popa
outsb
xchg
cld
pusha
or
lahf
mov
in
push
or
test
mov
sbb
sarb
lods
jg
rorl
push
lret
flds
cmc
mov
aam
adc
imul
hlt
push
or
pusha
push
mov
fmulp
fistl
hlt
mov
push
mov
in
hlt
mov
and
test
stos
aam
push
xor
sbb
popf
xor
enter
arpl
hlt
into
pop
mov
mov
fiadds
add
mov
pop
jg
sbb
aad
jg
mov
and
sub
dec
cmp
lods
inc
pushf
aas
insb
loop
shrl
hlt
pop
add
repnz
jae
cwtl
mov
mov
cmp
mov
hlt
mov
addr16
int
or
in
adc
hlt
mov
jbe
cmp
xor
cmpsb
roll
aaa
jb
hlt
sbb
out
cmc
push
rcrb
fldl
push
insl
cmp
jle
xchg
xor
cmp
push
out
insb
mov
ds
sahf
pop
hlt
mov
dec
scas
xor
daa
mov
xchg
inc
hlt
sub
xchg
orl
lcall
cwtl
push
xchg
rorb
aam
adc
and
shll
inc
in
mov
inc
jne
insl
xchg
dec
jecxz
outsb
dec
hlt
pop
cmp
cwtl
or
jmp
ret
cmp
or
and
aas
sub
add
insl
add
mov
adc
enter
jp
imul
mov
scas
loop
call
shlb
addr16
testb
jge
dec
fwait
stc
inc
cld
pop
daa
jmp
sahf
hlt
sbb
mov
push
gs
dec
sub
into
addr16
push
mov
aad
out
hlt
cld
fdivr
pop
xchg
movsl
cmp
xor
aam
les
mov
fsubrs
push
adc
mov
push
aaa
sbbb
cltd
leave
xchg
test
xchg
pop
xor
xor
pop
stc
jmp
pop
aaa
std
movmskps
cmpsl
cmp
fnstcw
inc
xor
jnp
mov
sbb
comiss
jmp
ficoml
es
or
lock
lock
push
xchg
aaa
test
notl
subps
xor
or
out
out
ret
sbb
mov
nop
cmp
mov
add
inc
jg
cmp
cmp
push
cmpsl
cmpsl
pop
mov
dec
addr16
lds
pop
add
mov
xlat
cmpsl
push
fs
je
ret
lock
pop
xlat
mov
xor
mov
push
mov
inc
rcrl
nop
add
jnp
mov
sbb
fwait
pushf
push
bswap
mov
mwait
and
sub
pushf
add
push
sbb
cmp
arpl
pop
call
fstpt
xor
jne
adc
hlt
loope
add
fldl
fcoml
lret
mov
xchg
loope
or
cmpsl
xchg
mov
dec
sub
cmp
sbb
hlt
xchg
sbb
jbe
jbe
cmc
aad
iret
cltd
andl
xchg
mov
dec
rcrl
iret
int
rclb
in
jae
pop
ljmp
or
fs
adc
or
insb
ret
ffree
ud1
dec
or
xchg
lods
insl
mov
out
sbb
mov
mov
push
into
out
mov
push
dec
daa
in
sub
lods
lds
or
xchg
pop
dec
addl
leave
flds
aas
xor
mov
fwait
lahf
cmc
xor
in
popa
adc
in
ret
adc
lret
add
or
dec
imul
push
sub
ja
cltd
mov
push
xor
imul
mov
mov
sub
insb
pushf
or
cmp
mov
dec
jns
or
je
or
aaa
insl
add
and
push
pusha
or
jmp
and
out
adcb
push
pushf
idivb
inc
and
or
scas
hlt
dec
cwtl
call
add
outsb
xchg
pusha
push
sahf
aam
hlt
cmp
leave
sbb
fistps
or
fmull
adc
mov
fisubl
fwait
cmpps
and
xor
daa
daa
inc
mov
jmp
add
xchg
out
je
dec
and
outsl
sbb
lcall
hlt
jp
out
pop
push
jno
jecxz
or
and
push
loop
loopne
call
jns
dec
push
imul
lret
mov
adc
jg
lds
je
hlt
stos
in
call
mov
hlt
rcr
dec
fcompl
frstor
jns
xchg
sbb
dec
xorl
bound
insl
aas
sub
hlt
es
movsl
jb
xor
sbb
hlt
daa
cmc
push
mov
lcall
mov
mov
sbb
jae
xor
testb
push
mov
add
dec
in
je
icebp
scas
cmp
insl
shlb
hlt
outsb
xor
pop
push
push
hlt
movsl
inc
mov
mov
out
adc
fisttps
push
clc
add
jbe
mov
push
push
push
xor
dec
jl
mul
lds
push
sbb
sbb
jecxz
xchg
iret
dec
mov
mov
loopne
push
pop
pop
dec
and
cmpsl
adc
mov
sahf
dec
divl
push
inc
jg
cwtl
and
rol
pop
mov
mov
or
xchg
sar
pop
in
daa
adc
dec
lods
out
xchg
leave
sbb
cmp
mov
call
inc
dec
sbbb
lods
in
or
or
into
testl
sahf
sbb
mov
ljmp
sbb
mov
push
xor
frstor
jne
ss
scas
aas
andb
pushf
shl
repz
lcall
nop
stos
inc
mov
paddq
pop
repnz
xor
mov
push
jg
add
cwtl
ret
cmp
aaa
ficoms
hlt
fcoml
or
arpl
out
bound
jmp
xor
shl
test
hlt
push
sub
test
fcoml
cmp
int
push
push
into
mov
or
dec
hlt
xor
lcall
or
dec
inc
cmpsb
shrl
xchg
push
inc
out
xor
dec
jmp
fnsave
lds
iret
popl
test
clc
adc
jg
dec
xchg
divb
mov
mov
jge
cwtl
or
bound
inc
outsl
fisttpll
shll
in
cmp
push
fs
int3
jp
subl
hlt
xor
pushf
mov
fcompl
cmc
cs
or
stos
inc
in
and
repnz
les
sub
arpl
push
loope
cwtl
pushf
aad
roll
clc
std
adc
out
jbe
cld
mulb
xchg
int3
ficoms
cmp
or
push
cmp
mov
mov
sbb
pop
shlb
data16
mov
outsb
cmc
mov
aas
and
bound
mov
pusha
sbb
hlt
mov
inc
sar
repnz
scas
popa
gs
or
lret
fsub
push
and
cs
in
cmp
or
or
jl
into
mov
out
imul
mov
ljmp
out
loop
jno
movsb
cmp
jge
and
std
icebp
hlt
mov
adc
jne
cmp
jmp
idivl
pushf
fnstsw
inc
or
cmp
hlt
xchg
cmp
cmp
call
dec
setae
aam
jne
xchg
lret
mov
aas
mov
and
hlt
inc
or
sbb
arpl
push
cmp
in
hlt
jb
fs
hlt
int3
shll
or
wbinvd
leave
in
adc
arpl
add
mov
aaa
outsb
mov
stc
in
pop
xor
aaa
mov
loopne
movsb
xorl
adc
mov
hlt
insl
cmp
add
inc
mov
outsl
push
push
jle
cltd
in
vpaddsb
and
mov
cmc
pop
inc
insb
pop
jae
fdivrl
pop
xchg
cmpxchg
ret
xchg
sbb
xchg
cwtl
lods
mov
mov
stc
dec
cmpsb
mov
add
mov
int
push
mov
std
sbb
xchg
ds
int
fcomip
test
add
or
jp
insb
iret
mulb
pop
push
mov
xchg
sbb
xchg
movsl
enter
ja
arpl
je
mov
out
add
pop
pop
xchg
out
jge
je
andl
mov
fs
xchg
push
lods
push
js
add
outsl
pop
xchg
movlps
int3
sub
shrb
testb
mov
in
jmp
push
aaa
mov
push
notl
mull
pop
adc
add
cltd
loop
sbb
in
mov
xor
cmc
adc
cltd
xchg
jbe
pop
shll
addr16
inc
lret
xlat
jnp
adc
adc
leave
ljmp
ds
imul
xchg
in
sbb
ljmp
nop
testl
rcll
daa
jl
test
jmp
pop
jnp
push
ja
cmp
ja
dec
add
add
insl
fwait
test
aaa
jbe
sbb
pop
push
in
ret
jae
pop
push
enter
imul
subl
add
dec
jl
sub
outsb
and
test
cmpsl
or
pop
fs
xchg
test
cmpsb
push
push
mov
xor
xchg
sahf
movsl
ret
lret
mov
ret
xchg
mov
fcomip
and
pop
or
jl
push
and
imul
inc
and
in
adc
push
je
mov
mov
xor
ds
or
rcll
aam
and
xchg
dec
das
mov
lods
fdiv
add
fmull
pop
out
in
imul
ss
stc
cmpsb
xorb
jl
xchg
jge
mov
mov
add
and
lods
fistl
dec
jne
cs
sbb
mov
push
loop
xor
pop
je
cmp
xlat
or
fs
ds
xor
sbbl
les
add
aas
mov
mov
xchg
pop
inc
int
cld
jno
jae
andb
rcll
ds
mov
xchg
rolb
pushf
rcrb
cmp
jb
mov
add
adc
inc
pop
dec
push
out
sbb
mov
daa
stos
push
sbb
das
std
loopne
out
cld
sub
or
mov
add
and
xchg
aas
ret
mov
lret
notl
mov
sbb
fwait
dec
or
push
cmp
add
inc
mov
push
imul
pushf
cmp
jmp
aam
cmc
jl
or
inc
dec
imul
ds
inc
js
leave
int
inc
test
decb
sbb
and
rclb
inc
inc
fildll
xchg
push
cmpsl
aaa
arpl
das
fwait
sti
mov
xor
adc
inc
out
incb
shll
pop
xor
notl
jecxz
test
xor
shll
out
call
add
pop
fsts
push
inc
aas
call
movsl
shll
push
jmp
in
pusha
cmp
neg
pop
pop
xchg
add
pop
gs
push
xlat
pop
mov
addr16
push
jp
outsb
data16
movsb
inc
jno
cmp
xchg
sti
imul
adc
in
shrb
pop
adc
out
mov
or
lret
sbb
pop
and
aad
cmp
sub
fcoms
mov
adc
sbb
out
sbb
rcrl
sarl
std
add
sub
aaa
rcll
xchg
mov
into
sub
xor
mov
xchg
and
aaa
inc
adc
xchg
sbb
rorl
xchg
and
int3
testb
scas
add
lahf
xchg
repnz
xchg
imul
and
sbb
inc
movsb
sbb
sbb
mov
and
mov
stc
rcrb
push
xor
pop
sub
cmp
xchg
add
and
fwait
aaa
mov
dec
adc
jne
or
xchg
imul
mov
jg
je
add
arpl
sbb
data16
xchg
sub
out
sbb
jmp
shld
pop
dec
xchg
push
jne
rolb
adc
jbe
push
dec
or
mov
dec
les
inc
dec
jne
cli
mov
dec
out
adc
fcomip
push
mov
enter
cs
pop
je
leave
ret
mov
push
dec
mov
cld
pop
add
mov
dec
cmpsl
leave
ret
push
xchg
aas
popf
sti
adc
aaa
push
aas
je
mov
lock
fwait
repnz
push
test
dec
xor
loope
sbb
ret
inc
outsl
xlat
daa
pop
sub
sub
lods
ss
fists
sbb
push
adc
cmp
lods
xor
iret
testl
jo
dec
add
js
inc
lahf
sub
js
sub
sub
int
test
add
imul
daa
rclb
sub
les
icebp
mov
xor
pop
cmc
mov
imulb
inc
fwait
and
fstpt
jne
dec
or
inc
iret
sub
mov
les
scas
lahf
sub
ja
push
lds
ds
xor
mov
lret
imul
push
dec
je
roll
adc
add
xlat
shlb
dec
nop
rorl
push
stos
fwait
imul
push
data16
into
pop
cmp
mov
pop
and
xchg
in
aam
rcrb
add
dec
adc
xchg
mov
push
aad
aaa
cmpsb
leave
mov
mov
jae
inc
shll
aad
xchg
inc
data16
std
stc
into
inc
mov
mov
or
inc
scas
jg
loope
or
jbe
cmp
data16
aaa
mov
mov
pop
fs
and
sub
orl
and
mov
and
sub
or
mov
sbb
mov
imul
and
cld
dec
inc
add
xchg
jg
mov
pop
ret
lret
and
lods
pop
jae
xchg
aas
mov
das
cmpsb
xchg
das
add
adc
ja
push
xchg
sbb
adc
nop
pop
lock
inc
dec
cmp
lods
lcall
orl
wbinvd
aad
pop
push
sbb
push
and
cld
decl
add
addr16
push
mov
sub
iret
mov
jmp
iret
add
decl
pop
xchg
lods
jmp
pop
xchg
adc
gs
enter
ret
leave
push
mov
cs
ret
dec
xchg
imul
es
sbb
xor
pop
xor
mov
call
loope
les
cmc
je
xor
cmp
inc
adc
xchg
decl
outsl
mov
cmpsb
sbb
cmp
iret
inc
adc
call
xor
push
fisubrs
pop
imul
add
pop
rcrl
out
mov
arpl
mov
sar
sbb
das
and
or
inc
arpl
mov
fsts
cwtl
data16
mov
xchg
mov
jmp
xchg
adc
orb
sub
pop
push
fwait
adc
std
mov
mov
adc
jecxz
xchg
adc
test
mov
gs
xor
pop
adc
add
movsl
shrb
clc
adc
push
sti
fwait
push
and
addl
call
iret
add
dec
cmc
lcall
push
lcall
sub
mov
mov
addl
pop
pop
mov
lret
push
sub
xchg
lret
xlat
push
out
pop
sbb
lock
jae
icebp
mov
pop
or
dec
adc
je
dec
test
adc
or
das
mov
pop
cmp
bound
jnp
imulb
xchg
or
gs
fwait
or
mov
das
outsb
jne
mov
inc
daa
call
add
fstpl
mov
or
jmp
adc
dec
je
addw
lods
mov
ss
add
hlt
ds
pop
sbb
add
sahf
scas
mull
cmpsl
jmp
adc
subb
into
hlt
mov
stos
xchg
ret
sub
mov
mov
fwait
mov
mov
xor
xchg
lea
sbb
mov
pop
fwait
xchg
mov
leave
dec
stc
sbb
mov
or
jno
fwait
mov
adc
inc
scas
jnp
lea
fwait
mov
enter
sub
push
jl
leave
stc
jno
inc
add
das
cmc
sbb
adc
add
lock
test
aaa
add
push
pop
test
sub
pop
loopne
outsb
add
inc
bound
bound
test
sub
rcrl
orps
arpl
cmc
dec
sbb
mov
in
cmp
stos
xor
push
mov
mov
dec
inc
mov
int3
incb
sbb
les
loope
scas
or
xchg
dec
mov
inc
dec
push
addr16
xchg
loopne
add
xchg
aas
xor
sbb
ret
imul
mov
mov
daa
test
mov
dec
gs
ds
frstor
xlat
test
jecxz
add
stos
call
enter
in
xor
jg
imul
int3
sbb
push
ret
xor
insl
add
xlat
inc
stos
nop
aas
mov
aas
inc
stc
mov
push
sbb
pop
mov
adc
inc
addl
push
mov
leave
notl
mov
cmp
xor
or
sub
push
das
std
in
loope
inc
aas
call
push
test
movsb
cmp
not
push
jns
dec
jecxz
xor
into
aam
fcomip
pop
mov
inc
adc
xchg
mov
mov
mov
xor
enter
inc
pop
add
mov
pop
imulb
das
pop
bound
mov
inc
mov
push
mov
idivl
int
addr16
mov
aas
xchg
pop
adcl
outsb
xchg
mov
imul
push
fsubs
cmp
mov
add
or
inc
xchg
out
adc
and
aaa
arpl
jne
adc
ret
add
pop
mov
and
jl
test
pusha
xlat
jb
hlt
sbb
sbb
adc
int3
and
mov
icebp
xchg
sbb
add
sbb
mov
xor
jnp
int3
xor
rcll
sbb
fadds
insb
ja
sbb
sbb
pop
cmpsl
and
dec
xorl
orb
or
push
test
push
out
stc
int3
es
xchg
cmp
daa
and
jno
leave
test
sub
mov
mov
cltd
addr16
mov
imul
daa
les
add
mov
jle
mov
add
mov
sbb
add
lods
comiss
shrl
cld
xlat
fcomip
pop
gs
in
adc
inc
xor
adc
lret
fnstsw
xor
inc
and
gs
inc
ja
incb
into
jns
fwait
sbb
pop
in
shlb
adc
sbb
adcl
xchg
fwait
xor
push
add
dec
fwait
push
inc
push
xchg
fsubl
xor
lock
pop
or
pop
inc
push
lahf
dec
addl
push
addr16
daa
inc
loope
ds
sub
imul
loop
pushf
or
addr16
adcl
aaa
fsubs
int3
inc
inc
pop
aas
fwait
inc
mov
popf
aas
int
lcall
dec
dec
xchg
jbe
sarb
or
pop
xor
push
sbb
inc
inc
pop
dec
adcl
and
lret
push
imul
in
add
inc
movl
xor
pop
popl
cmpsb
mov
dec
cmp
imul
adc
leave
dec
mov
pop
stos
stc
repz
xor
pop
cld
sub
cmp
push
scas
bound
call
loope
adc
aaa
loop
mov
add
lods
enter
stos
cmp
adc
cltd
jge
repnz
jecxz
dec
xchg
dec
rcrl
cltd
xlat
mov
dec
sbb
out
inc
inc
xchg
sarb
inc
dec
pop
inc
fbstp
xchg
mov
pop
cmp
mov
cmp
mov
sbb
pushl
or
sbb
adcl
push
sbb
fwait
xor
and
sub
in
jne
ret
out
mov
add
in
cmp
add
dec
out
test
es
mov
push
and
cmpsb
mov
xchg
jmp
pushf
jb
cmp
push
test
add
aaa
inc
lock
mov
add
xchg
icebp
jge
cs
lock
pop
lds
cltd
rclb
adc
test
sti
dec
fisubrl
add
in
and
mov
pop
dec
ja
dec
lds
pop
dec
outsb
adcl
xchg
jno
dec
out
daa
jbe
dec
pop
and
xchg
add
iret
xchg
dec
lods
hlt
mov
cli
pop
mov
and
xchg
adc
pushf
sbb
out
mov
push
ret
add
mov
je
dec
ds
and
out
test
mov
daa
push
push
inc
mov
xchg
fwait
insl
cmp
or
addr16
add
repnz
lock
imul
dec
xchg
fwait
or
mov
xchg
mov
addr16
push
dec
xchg
jl
ret
stos
cs
pusha
push
hlt
push
sbb
mov
jne
pusha
aas
addr16
fnsave
xor
es
fwait
add
outsl
adc
cli
jle
cmp
sbb
add
dec
jns
lds
xchg
lock
int3
shrb
sbb
cmp
das
mov
out
negb
add
inc
push
jg
mov
push
cmp
loopne
xor
psraw
pop
adc
adc
push
loope
mov
and
mov
and
bound
dec
xchg
push
mov
and
ds
adc
js
sti
addl
mov
imul
aas
stos
jmp
sbb
dec
cmp
icebp
nop
mov
dec
scas
aam
add
xor
in
jne
cmc
sbb
mov
rclb
and
lea
divb
das
sub
cltd
ret
jle
arpl
lcall
lock
imul
add
mov
dec
and
cmpsl
sbb
push
adc
fisttpll
xchg
bound
int
mov
inc
stos
add
adc
shr
add
mov
sbb
pop
hlt
addb
and
int3
add
hlt
or
pop
sub
lods
test
imul
push
imul
push
ficoms
lods
test
hlt
push
lock
add
fisttpl
jle
leave
aam
mov
mov
xor
movsb
sub
dec
or
dec
push
test
ret
mov
hlt
jecxz
in
xchg
adc
mov
push
adc
orl
or
outsb
mov
jne
call
icebp
pop
mov
lret
and
insb
push
hlt
lods
fxch
scas
pushl
outsb
hlt
jecxz
loop
fdivrs
lock
repz
sub
fbstp
push
or
mov
hlt
jp
loope
mov
insb
mov
xchg
mov
cmp
hlt
imul
call
hlt
sbb
jne
push
cld
imul
push
push
cmc
push
lret
bound
mov
jb
mov
scas
mov
mov
popa
or
pop
sbb
add
fstps
sbb
push
out
mov
lock
mov
push
cmp
sub
movl
inc
mov
xchg
sti
add
mov
cmp
push
or
dec
cmp
xor
pushf
inc
jg
repz
imul
ljmp
int
and
push
sbb
notl
into
in
clc
sbb
sti
mov
adc
push
not
insl
push
sbb
mov
xor
mov
inc
hlt
jne
push
aaa
lds
clc
mov
jae
pop
dec
std
idivb
out
dec
in
jnp
aam
in
fmull
sbb
nop
aam
xchg
aas
fyl2x
loop
cmc
addr16
lea
push
hlt
sub
xor
ret
ret
rolb
add
push
cs
int3
add
or
add
dec
or
gs
repz
pop
je
jp
fisubrs
mulb
adc
mov
xor
loope
push
hlt
and
dec
cmp
fstpl
popf
mov
dec
add
sub
push
jmp
jl
hlt
sahf
xor
daa
cmp
add
ret
or
rclb
xor
lods
or
jnp
adc
pop
xchg
dec
hlt
mov
ret
stos
push
mov
je
outsl
leave
adc
dec
sub
mov
inc
lds
xchg
xor
or
sbb
repz
dec
sub
mov
sbb
pop
ror
cmpl
dec
or
aaa
aad
pop
popa
add
cmp
xchg
inc
ret
sub
pushf
fucom
sbb
pushf
sub
leave
cmp
xor
dec
mov
add
ja
int
adc
adc
call
cmp
sub
jle
cli
sub
mov
cmp
jl
push
mov
test
orl
inc
adc
iret
sub
adc
mov
leave
push
and
jp
mov
add
mov
popf
out
cmp
pop
je
js
fsubrl
pop
sbb
das
or
add
xchg
adc
sbb
inc
xor
testl
xchg
or
fsubrs
lcall
push
lock
sub
aaa
movsb
mov
sbb
sub
mov
fnstcw
add
jg
js
sbb
mov
aas
pop
leave
pusha
mov
add
shlb
movb
adc
add
dec
jnp
cmp
imul
sbb
adc
or
mov
adc
loope
sub
pop
pop
push
rcrl
insb
xor
in
dec
jl
das
ror
test
lea
inc
dec
jne
outsb
mov
divb
orl
inc
sub
fwait
in
subb
pop
push
std
test
cmp
sub
push
sbb
add
adc
ja
or
sti
test
addr16
inc
out
cwtl
pop
adc
mov
insb
inc
cmp
cld
int
pop
pop
mov
lahf
imul
dec
add
push
adc
lcall
mov
or
outsl
jmp
adc
sbb
and
ja
jecxz
pop
outsl
pop
xchg
xchg
pop
cmpsb
in
lea
or
leave
pop
dec
add
roll
xchg
imul
mov
inc
mov
lock
mov
cmp
xor
lret
testl
adc
dec
or
aaa
loopne
sub
iret
cli
push
push
add
loop
movsl
mov
in
bound
insb
push
iret
scas
push
js
or
inc
push
fwait
mov
movl
lea
xchg
cmp
paddw
pop
ja
push
nop
sub
dec
iret
ret
inc
fs
mov
fyl2xp1
xor
jg
les
xor
les
mov
cmp
push
das
dec
jne
mov
xchg
and
leave
inc
fwait
pop
adc
fwait
into
inc
adc
ret
adc
int3
push
sub
push
icebp
inc
mov
into
push
pop
loop
pop
pop
xchg
mov
jmp
push
mov
jmp
in
dec
adc
fdivp
loope
mov
aad
aaa
xlat
mul
dec
popa
lds
mov
sti
pop
mov
shl
loope
scas
jg
mov
scas
or
mov
adc
pop
add
dec
cli
into
test
out
hlt
push
pop
inc
mov
and
lods
jmp
fcmovnb
xor
hlt
push
and
mov
push
jle
test
push
pop
xor
push
out
inc
dec
mov
jecxz
push
jnp
add
inc
mov
jnp
add
out
dec
push
xchg
add
loopne
add
and
jg
lea
arpl
out
mov
les
push
and
loopne
xor
ret
fldl
cmp
xchg
dec
aam
mov
push
mov
das
test
xor
xor
outsl
sbb
mov
sub
lods
cmpsl
mov
shlb
fldenv
jp
cmp
int
test
ret
sub
cmpsl
es
jnp
cmp
inc
adcl
es
hlt
outsl
or
lds
or
adc
arpl
cmp
loop
jmp
mov
push
std
bound
out
int
movl
cmc
out
dec
enter
das
shrl
ljmp
push
cltd
sbb
mov
xor
cltd
and
jle
bound
xchg
ret
lock
lock
fistpll
xor
mov
jl
stc
push
mov
mov
jbe
push
pop
lea
pop
jmp
aas
pop
and
inc
mov
xchg
push
icebp
cltd
stos
push
and
es
mov
push
mov
xchg
sahf
ret
mov
movsl
and
mov
xchg
mov
adc
adc
xchg
icebp
xor
pop
push
in
xchg
xchg
cmpsl
fcmovne
mov
jmp
loopne
and
into
or
mov
jnp
fldl
push
push
push
cmpsl
shl
and
divb
pop
add
dec
push
popf
into
xchg
cld
inc
push
mov
scas
into
inc
push
out
pop
sbb
push
lcall
xchg
inc
repnz
and
mov
fcmovb
dec
jg
add
jbe
adc
cmc
sbb
dec
or
call
jg
jle
inc
fsub
fwait
mov
iret
inc
push
dec
xorb
inc
jp
cmp
enter
out
imul
ret
push
imul
and
insb
das
or
or
imul
pop
icebp
test
push
call
cmp
xchg
aaa
out
xchg
pop
mov
movsl
jo
and
xor
aaa
out
test
xorb
cmp
arpl
jnp
or
add
pxor
jg
add
push
jns
push
dec
andb
xor
pop
mulb
aaa
ret
and
and
dec
movl
lea
iret
aaa
not
filds
sub
ret
pop
jecxz
inc
aam
out
sbb
dec
pop
out
pop
sbb
pop
push
xchg
test
enter
daa
sbb
inc
imul
push
xchg
scas
xchg
imul
or
mov
rcrb
enter
test
pop
sahf
sbb
or
push
pop
loop
aaa
rcrb
imul
pop
cmp
pop
mov
jg
add
out
and
enter
or
sti
cmp
mov
ja
inc
push
push
pop
fildl
cmp
jle
push
fstl
vpmulhuw
ret
lock
pushf
jecxz
jg
ret
adc
sub
xchg
iret
adc
dec
into
jp
rorl
adc
push
xchg
push
mov
pop
sub
sub
lcall
or
push
stos
jle
test
mov
add
sarb
in
pop
jae
and
ds
js
fwait
fwait
mov
mov
xor
cltd
add
mov
ret
mov
out
fcomip
pop
sub
push
mov
mov
jmp
out
push
mov
out
jnp
add
mov
leave
ss
sbb
cmp
aaa
lds
and
add
and
fcomip
add
or
sub
push
iret
mov
dec
sbb
cmp
push
js
add
lock
add
jnp
add
jp
and
mov
push
fwait
fwait
jp
iret
push
inc
push
add
arpl
sbb
add
add
push
inc
adc
pop
js
xchg
adc
adc
xor
loope
vpaddusw
aaa
inc
lcall
inc
out
jo
adc
mov
ja
inc
in
in
divl
jge
cltd
mov
fstpt
aaa
dec
xchg
push
in
push
movsb
dec
add
mov
xchg
push
push
xor
xor
adc
inc
or
adc
push
mov
adc
arpl
jecxz
or
arpl
adcl
pop
pop
xor
imul
add
ss
pop
and
mov
adc
shll
lods
mov
test
xor
mov
sub
push
aam
es
fs
cmc
dec
mov
pop
xchg
add
push
cmp
inc
pop
insl
cmp
aaa
mov
adcl
cmp
into
pop
sub
ret
addr16
popf
sub
jge
push
mov
and
xor
leave
or
or
sub
xchg
loop
aaa
jmp
into
fwait
pop
or
repz
pop
sbb
mov
adc
insb
out
pop
lret
shlb
adc
push
xorb
inc
mov
xchg
lret
lret
test
movntq
out
cmpsl
xor
push
dec
nop
push
inc
push
xchg
lret
out
mov
lret
dec
or
mov
loop
adc
push
xchg
jo
inc
pop
or
or
lret
xlat
divl
mov
dec
push
aaa
inc
shrl
sbb
repz
ds
aaa
add
out
push
or
or
sti
das
cmpl
aas
and
jno
loop
pop
jb
daa
jecxz
aaa
xchg
loopne
pop
push
push
push
xlat
adc
data16
in
adcl
addl
and
adc
int3
sub
push
add
call
push
xorl
xor
cmpsl
enter
aaa
pop
aam
inc
mov
adc
int3
inc
enter
ret
adc
push
dec
jne
mov
movb
xor
inc
dec
sbb
pop
inc
adc
xchg
push
ljmp
push
mov
fisubl
pop
test
negb
in
cmpsb
cmp
ja
pop
jnp
shll
pop
push
out
pop
mov
rolb
incb
pop
out
push
inc
dec
loop
pop
inc
mov
jae
lahf
and
rclb
xlat
cmc
inc
pop
pop
jmp
insl
inc
cmpl
cmp
ret
decb
inc
mov
subl
mov
dec
arpl
push
scas
movsb
lods
dec
or
dec
pop
mov
xchg
addr16
push
cmpl
push
scas
jbe
xchg
sub
xor
ss
mov
and
fwait
pop
mov
xchg
pop
xor
notl
push
sbb
ret
aaa
add
add
and
arpl
iret
adc
inc
dec
push
inc
lea
jae
aaa
cld
ljmp
add
sub
sbb
pop
out
xor
stos
mov
std
int
mov
scas
inc
aas
movsl
lea
push
dec
cmp
into
insl
dec
jg
mov
loop
push
xor
dec
ret
dec
hlt
pop
imul
daa
sarl
mov
push
adc
inc
ja
adc
mulb
sbb
sbb
pushf
inc
insb
sbb
xchg
dec
cld
cltd
mov
test
pop
ss
cmp
repnz
call
clc
daa
mov
or
jne
xchg
adc
mov
cmpsl
call
ret
cs
jne
jle
push
sbb
in
lds
push
sub
lock
ret
inc
inc
pop
scas
dec
pop
mov
mov
insb
inc
pop
mov
mov
xchg
push
push
dec
std
int3
xchg
or
std
sbbb
cmc
mov
into
xchg
ret
cmpsb
cltd
fadds
adc
leave
aaa
jno
stos
aaa
pcmpeqw
mov
push
xor
add
cs
movsl
rcll
daa
dec
jle
scas
sub
jp
mov
ljmp
daa
inc
imul
pop
jbe
push
pop
add
xchg
xchg
pusha
movb
sbb
stos
mov
mov
iret
mov
jb
ret
imul
fstpl
pop
rcr
sub
sbb
inc
fs
shld
jle
sbb
or
lods
sbb
les
lock
outsl
fcmove
ss
push
pop
bound
mov
mov
fstl
mov
xor
mov
imul
add
mov
inc
fdivrl
fisubrl
pop
loopne
add
shl
or
nop
fwait
push
aaa
or
filds
fmuls
daa
and
insb
push
add
lock
add
jo
mov
lret
lret
sub
jmp
jae
aaa
repnz
push
mov
addr16
push
into
push
or
andb
daa
fistl
inc
out
dec
bnd
hlt
add
pop
pop
add
jmp
inc
push
add
push
fwait
xchg
add
or
dec
hlt
pop
mov
rcrb
int
lahf
push
pop
inc
xchg
adc
fildll
xchg
int3
flds
cwtl
fcomps
jmp
test
add
inc
test
xchg
rcll
push
nop
hlt
rcrb
ficomps
sbb
pushf
fsubrl
push
ljmp
push
inc
test
xchg
inc
sbb
adc
or
iret
push
add
push
or
das
fildl
dec
daa
into
push
in
inc
rclb
rorl
xchg
adc
filds
xchg
mov
lds
and
inc
push
xor
mulb
xor
or
popa
push
sub
jg
push
adc
mov
test
stos
in
dec
ss
lret
sub
sbb
or
cltd
roll
xor
hlt
add
dec
pop
hlt
or
xchg
movsb
dec
mov
add
sbb
js
mov
or
hlt
or
pop
imul
inc
push
pop
mov
pusha
jmp
cwtl
test
hlt
loope
mov
les
push
test
pop
hlt
loop
in
mov
je
or
sahf
loope
repnz
in
sub
imul
mov
fsub
loopne
cmc
add
bnd
and
sbb
testb
pop
retw
hlt
inc
adc
in
or
sbb
hlt
lock
cld
addr16
pop
aaa
and
lret
imul
add
aas
mov
pop
jnp
cmp
aaa
rcrb
aam
dec
pop
xor
imul
mov
movsl
ret
cmp
pushf
mov
or
lret
popf
sbb
sub
movsb
fdivl
mov
mov
mov
lret
lret
movsb
into
hlt
mov
rcll
sahf
jbe
sbb
and
xor
push
add
imul
adc
hlt
leave
push
sub
mov
ljmp
cmc
hlt
sar
stos
and
gs
data16
hlt
sub
hlt
aas
mov
mov
aam
repnz
rclb
add
outsl
pop
sub
cltd
hlt
pop
inc
pop
mov
lods
test
mov
pop
xlat
fldenv
imul
scas
aam
inc
push
pop
jns
cmpsl
rcr
packuswb
lock
movsb
mov
repz
jg
xor
sbb
in
and
cmp
add
lret
lods
push
push
nop
xor
push
sarl
ljmp
aas
dec
mov
lods
lret
xchg
hlt
add
fdiv
sub
push
movsl
insb
pushf
sub
mov
sub
xor
mov
push
decl
hlt
bound
fistpl
sbb
sar
mov
in
fildll
dec
inc
cmp
rcrl
int
sub
jp
push
aas
pop
repz
cmp
fs
push
fistpl
popf
stc
ja
xor
repnz
or
in
scas
out
test
pop
in
stos
shl
mov
into
hlt
dec
sbb
inc
add
lcallw
stc
hlt
pusha
jecxz
lahf
jl
ds
fildll
sahf
add
rol
hlt
adc
cltd
mov
movsl
fcmovnu
jo
push
hlt
pop
pop
mov
hlt
aad
jecxz
sbb
ja
mov
roll
in
cli
jae
aad
jae
mov
fs
loope
test
hlt
test
push
inc
addr16
ds
hlt
mov
in
fbstp
sub
inc
cmpsb
dec
pop
mov
cmc
pop
pop
dec
lods
add
test
jmp
push
mov
shl
push
push
dec
xchg
hlt
push
fisubrs
hlt
add
push
xor
pop
xchg
adc
aad
bnd
cmp
ret
sarb
sbb
cmp
mov
in
dec
hlt
jns
ror
pop
stc
cmp
xor
jno
mov
lret
adc
lea
xor
je
std
mov
les
clc
cmp
xchg
hlt
in
loope
out
xor
icebp
and
dec
imul
inc
sbb
cmc
jge
xchg
hlt
fnsave
test
cmpsl
test
push
inc
std
or
dec
cmp
lcall
fcomip
sub
lods
mov
push
adc
jp
xchg
mov
dec
mull
dec
inc
hlt
add
pop
out
adc
lret
push
stc
pop
mov
or
mov
cld
cmp
movsb
pop
mov
icebp
scas
mov
stc
cmp
lahf
hlt
in
lock
movsl
pusha
hlt
imul
mov
lahf
outsl
xchg
lret
cmp
jg
adc
movsb
fs
sbb
jle
mov
sub
shr
jb
cmp
ds
divl
inc
mov
hlt
inc
insb
movsl
mov
hlt
jmp
mov
xchg
repnz
jno
in
push
mov
xor
push
rorl
aas
or
repnz
shlb
fstp
xor
inc
test
add
lret
mov
hlt
xor
cmc
je
and
xor
fucomip
cltd
fisubl
test
lock
hlt
or
outsl
dec
xchg
and
ret
sahf
out
push
inc
dec
cmpsl
shll
dec
hlt
pop
ja
addr16
aad
aam
mov
ret
jns
hlt
jecxz
mov
aaa
pushf
mov
lods
sub
sbb
push
jg
pop
ret
test
test
repnz
sbb
imul
cmpsl
inc
and
mov
out
jne
stc
add
std
loopne
cld
cs
fsubr
adc
fistps
mov
cli
cmovs
or
hlt
jmp
clc
pop
push
loop
mov
mov
push
or
negl
hlt
je
sub
cmp
das
lds
mov
hlt
lods
sahf
out
xchg
mull
mov
hlt
mov
fsubl
or
shrb
aas
mov
jne
mov
div
dec
push
movsl
cli
outsb
lods
xor
stc
icebp
dec
ret
lock
xchg
shl
pop
test
in
out
dec
pusha
mulb
shrl
xor
push
pop
inc
push
adc
inc
sbb
scas
inc
push
pop
stc
cmpsb
sbb
adc
inc
pop
mov
les
dec
mov
cmp
add
imul
dec
and
pushfw
and
in
hlt
xor
scas
lods
idivb
leave
addr16
mov
ficoml
cmc
sub
jle
in
adcl
cwtl
add
aam
fsubl
inc
add
lret
insl
call
mov
hlt
lock
repz
add
lock
mov
hlt
mov
push
hlt
or
sahf
xor
dec
std
fsubr
sub
and
hlt
and
es
out
cltd
hlt
js
jl
sarb
into
imul
cld
insb
sbb
push
xor
push
sbb
mov
mov
test
xor
lahf
movsl
adc
sub
xchg
push
or
je
add
sbb
mov
xor
mov
jae
jge
sbb
loopne
in
stos
test
pop
xchg
shl
mov
std
add
ds
popa
stos
pslld
test
push
icebp
repz
js
pushl
mov
sub
cmpsl
bound
pop
hlt
mov
ret
int3
mov
stc
iret
hlt
popa
sbb
aaa
lods
sub
lret
xor
adc
push
out
jno
leave
sub
arpl
inc
lock
imul
or
dec
test
dec
or
jge
mov
lods
push
shrb
dec
hlt
out
mov
mov
hlt
movsb
out
in
repz
jg
mov
push
sbb
hlt
rol
lds
aas
repnz
cmc
push
mov
sarb
hlt
xchg
mov
xor
int
and
jb
hlt
jmp
mov
jns
sbb
in
insl
jo
movsb
and
or
lds
lret
push
mov
leave
dec
xchg
jl
clc
fstpl
es
jle
push
aam
icebp
movsb
dec
in
mov
stos
jno
lock
push
arpl
test
cmc
fcoml
imul
lock
hlt
inc
stc
dec
dec
pushf
mov
pop
test
in
add
xor
sbb
fidivrl
jns
push
push
mov
cld
ljmp
movsb
and
int3
mov
xlat
rolb
fadd
fadds
fs
imul
loop
lods
pop
addr16
jmp
rcrb
sbb
push
in
ret
mov
push
sub
jle
inc
into
rolb
pop
cld
mov
push
gs
and
and
fidivs
xchg
lods
icebp
mov
inc
pushf
jp
jecxz
sbb
or
hlt
and
movsb
push
jno
cmp
fcmovu
jecxz
inc
cmp
add
insb
adc
jmp
fcomi
daa
stos
iret
add
push
je
xor
dec
rol
push
decb
jne
shlb
dec
pushf
pop
sbb
lret
xor
sub
mov
cli
test
fs
jne
sbb
adc
inc
fdivs
sahf
xchg
in
leave
and
test
mov
cmp
mov
in
jne
hlt
data16
dec
pop
addr16
mov
jge
cmp
sbb
fabs
jns
lcall
cld
mov
xor
js
or
inc
leave
inc
testb
dec
jno
in
loopne
fwait
les
fsubrp
daa
cld
sub
cltd
hlt
mov
pop
pushf
lcall
dec
shll
cli
hlt
jnp
and
xchg
or
mov
pop
bound
xchg
cld
fstl
hlt
loope
jnp
push
aam
es
jae
xchg
mov
adc
cli
dec
insb
pop
cmc
hlt
leave
push
ficoml
add
hlt
ds
data16
sahf
or
nop
hlt
sti
pop
movsl
daa
mov
ror
cli
push
lret
add
out
and
xchg
hlt
pop
fidivl
push
hlt
inc
or
dec
pushf
daa
das
fwait
in
or
lret
hlt
cld
mov
push
xor
or
hlt
jmp
cwtl
sub
hlt
sbb
sbb
cltd
lret
mov
mov
push
sahf
pop
mov
stos
into
pmaxsw
pop
jbe
pop
mov
pusha
mov
dec
inc
hlt
cmpsb
js
xchg
rcl
stc
scas
xchg
inc
push
mov
jg
sub
mov
dec
push
rcrl
movsb
mov
in
or
inc
pop
xchg
push
mov
std
hlt
xorb
mov
imul
cld
or
pop
cmp
xor
rolb
hlt
inc
xchg
add
jg
sti
out
imul
data16
dec
xor
inc
xchg
hlt
outsl
ja
jno
cmp
and
out
hlt
outsb
insb
bound
pop
jae
hlt
fucom
out
loopne
dec
xor
dec
fstps
aad
fstl
fwait
cmpsb
xor
in
incl
push
shll
hlt
adc
popf
hlt
xchg
cwtl
jle
sahf
push
xchg
out
mov
sub
adc
fs
hlt
sbb
gs
hlt
cltd
pop
mov
jp
mov
hlt
test
in
arpl
mov
push
out
hlt
lea
idivl
test
mov
fmulp
jg
sub
hlt
mov
test
fidivrl
push
sub
ret
lahf
hlt
jle
mov
sub
je
clc
push
mov
fdivrl
repz
icebp
mov
in
sub
cmp
popf
cmp
and
cwtl
pop
hlt
test
roll
jp
cmpsl
mov
mov
adc
jge
jne
push
and
jecxz
lea
hlt
mov
lret
dec
push
inc
cltd
cld
mov
mov
or
cmp
jno
mov
xchg
js
sbb
pop
sbb
add
ljmp
cmp
lahf
mov
mov
loope
aad
fisttps
repnz
hlt
jno
cwtl
decl
in
push
pushl
test
mov
mov
idiv
xchg
repz
dec
or
mov
inc
sub
dec
mov
add
lods
sbb
xorb
adc
mov
js
mov
hlt
arpl
cmpsl
scas
pushf
xor
hlt
jle
scas
ja
fidivrl
sbb
mov
sarb
iret
hlt
mov
mov
leave
xor
jecxz
repz
adc
cmc
mov
xchg
pop
sbb
jp
xor
pop
lret
fidivl
les
mov
dec
shlb
es
hlt
iret
pop
push
daa
sub
xchg
xchg
add
lret
add
inc
jno
js
xlat
mov
cmp
xchg
mulb
ja
aad
orb
inc
cmc
jmp
hlt
decb
ljmp
push
dec
pop
hlt
mov
call
cmp
insl
xor
add
sub
jg
movsl
pop
jbe
xchg
les
dec
or
in
mov
jne
jae
imul
sbb
mov
les
sbb
imul
maskmovq
divl
sub
idivl
dec
hlt
xor
fadd
push
stos
mov
jo
xchg
cmc
fnsave
in
cmpsl
add
or
les
jecxz
mov
sbb
mov
pop
xlat
xchg
adc
push
mov
hlt
mov
jo
out
in
ficomps
stos
fstpl
or
cmc
loope
pusha
fidivl
mov
repnz
shlb
sub
in
jge
inc
repnz
popf
xorps
mov
xor
xchg
lea
cmpsl
lret
hlt
cld
cli
inc
sub
out
hlt
icebp
cmp
jp
hlt
ret
cmpsl
fisubrl
insb
jle
push
cli
mov
mov
xor
stc
mov
dec
test
push
hlt
mov
js
push
pusha
xor
rorl
push
movsb
and
int
lock
in
adc
sbb
xchg
xchg
dec
xchg
add
hlt
ret
pop
outsl
cmp
popa
enter
sub
lods
ja
int3
hlt
mov
mov
in
cld
jecxz
dec
push
and
hlt
cmp
add
icebp
sub
push
fs
push
dec
or
pop
sbb
mov
nop
mov
stos
rol
nop
imulb
in
and
daa
jecxz
hlt
lods
out
sub
jo
insl
shrb
dec
xchg
fmuls
mov
mov
movsb
fisubl
inc
scas
cmp
jl
les
jl
adc
andl
add
mov
add
bnd
in
in
cmp
and
shl
mov
xor
fs
jb
mov
fbstp
ljmp
jp
out
rcrl
cmpsl
stc
fsubl
call
dec
xchg
hlt
dec
rcrl
hlt
movsl
out
jmp
js
mov
ja
inc
sbb
mov
sbb
dec
add
popa
cmp
adc
sti
and
dec
pop
nop
xor
xchg
fdivs
cmpsl
bound
rorl
in
xlat
addr16
sbb
lods
aam
xchg
mov
dec
mov
xor
les
jbe
popf
jmp
insb
push
hlt
pop
fs
jp
push
jo
inc
cmp
or
mov
cmp
adc
mulb
push
out
in
sbb
add
dec
lods
adc
jns
mov
cli
hlt
lret
push
push
lock
inc
jp
mov
hlt
fisubl
pushf
push
in
jge
popf
lods
pop
repz
pop
je
jne
fcmovb
jbe
out
dec
xchg
adc
fcoml
xor
js
push
mov
aaa
popa
hlt
fmul
andb
pop
lcall
movsl
jbe
mov
sbb
add
cmpsb
loopne
dec
and
cmp
aas
push
imul
hlt
and
lods
sbb
mov
repnz
std
xchg
cs
sbb
cltd
push
repz
lcall
mov
hlt
lret
mov
movsb
push
hlt
sbb
mov
mov
xor
inc
je
cmp
xor
mov
push
cmp
mov
pop
hlt
adc
sbb
jns
ljmp
xchg
xchg
daa
aas
mov
dec
orl
loop
outsl
mov
and
ret
jge
in
cmpsl
in
jl
dec
hlt
push
aam
sbb
mov
mov
imul
cwtl
nop
je
int
push
hlt
scas
pop
adc
push
lret
hlt
push
mov
push
jle
pop
hlt
mov
sbb
insl
fidivs
mov
mov
xchg
add
push
shl
mov
lods
or
and
clc
aad
mov
aad
hlt
movsl
lcall
hlt
jecxz
xchg
popf
lea
lcall
mov
push
mov
lods
mov
std
cltd
test
in
xor
or
xor
cld
sbb
lret
loope
jb
sbb
and
pop
sti
repnz
jne
dec
mov
cmp
inc
sbb
sbb
lods
repnz
in
xorl
jnp
pop
sub
xchg
imul
aad
movsb
push
xor
les
push
ret
or
mov
in
lret
popa
adc
ficompl
mov
add
push
adc
and
mov
loope
cmc
jge
sub
mov
aad
fistps
cmp
mov
ds
cltd
mov
jmp
pop
pop
mov
ja
mov
in
sbb
hlt
push
cmc
add
push
cld
dec
sbb
add
sar
aam
cli
or
sbbb
jecxz
mov
inc
arpl
in
pop
pusha
cmp
daa
push
outsb
mov
sbb
int
jl
mov
lea
scas
flds
div
repz
xor
cmp
in
negb
hlt
out
jle
loopne
xlat
andb
push
outsb
dec
popa
hlt
mov
pop
cmc
stos
movsb
mov
pusha
lea
gs
push
dec
call
push
stc
inc
ret
jle
insb
lods
ror
mov
inc
icebp
cli
dec
adc
jmp
xor
pop
out
pop
cmpsl
lret
push
call
in
test
jle
sbb
aam
push
pop
test
pop
or
mov
insb
mov
hlt
xchg
cld
mov
hlt
in
xchg
xor
sub
mov
xorb
sbb
or
pusha
stc
hlt
js
les
sub
xchg
hlt
sar
insl
inc
or
pop
cli
adc
adc
fstpl
cmp
arpl
inc
hlt
nop
call
mov
hlt
push
inc
repz
jnp
fdiv
ljmp
fistps
movsl
call
adc
or
hlt
jp
and
hlt
mov
sti
mov
lret
int
mov
aas
test
sarl
scas
loopne
jl
mov
jge
pop
xor
push
cwtl
movsl
inc
cmpsl
push
std
mov
jge
loope
jne
mov
inc
dec
test
repz
cs
nop
xchg
out
and
lods
test
out
fistpll
jno
addr16
push
repz
lcall
mov
outsl
dec
hlt
push
fsubrp
and
dec
movsl
push
xor
sbb
sti
les
stos
lock
jae
repnz
in
stc
jl
fidivl
hlt
push
mov
rcrl
in
and
sub
out
negb
rorb
and
sbb
iret
ret
cltd
xchg
mov
push
or
and
push
dec
cmpsl
aad
mov
pop
jle
hlt
clc
sbb
stos
enter
idiv
ds
or
out
pop
fidivrs
test
sbb
dec
notl
lock
in
repnz
xor
aam
adc
or
aas
test
divl
mov
cmpsb
sub
dec
mov
data16
neg
jmp
cmp
push
addb
inc
testb
cmp
hlt
or
mov
or
loopne
fildll
or
add
push
stos
mov
out
pushl
add
sarb
clc
jge
mov
sub
sbb
outsl
mov
jns
mov
fs
icebp
push
les
hlt
sbb
push
cmp
mov
pop
mov
xchg
sub
stos
xor
test
xor
rcrb
jg
int3
gs
adc
jl
mov
dec
mov
hlt
clc
mov
inc
in
mov
subb
mov
mov
mov
imul
or
mov
filds
hlt
mov
imul
shll
mov
hlt
in
xchg
cmc
xchg
loopne
mov
cmp
pushf
cld
dec
cmp
fisttpl
lret
call
lock
iret
ja
sub
sti
sbb
insl
jnp
dec
mov
xchg
xchg
xor
sbb
rcrb
inc
je
test
test
ret
and
inc
pop
mov
mov
gs
dec
imul
jo
jb
out
lock
hlt
xchg
ss
lods
stc
sbb
hlt
gs
fdivr
push
add
jne
xlat
aam
andps
bnd
testl
mov
dec
dec
testl
cli
pushf
push
aas
test
dec
and
leave
sbb
subb
inc
fcompl
hlt
js
popa
jo
jge
mov
aas
jp
ja
pushf
push
pop
fdiv
or
jns
cwtl
xor
imul
push
mov
jmp
mov
mov
dec
pop
imul
mov
out
movsb
cltd
fdivp
sbb
call
js
push
cmc
and
fdivp
hlt
xchg
mov
jo
sbb
dec
clc
js
cmc
cld
leave
cmp
scas
and
iret
hlt
loopne
dec
rorb
xchg
imul
cmp
mov
hlt
shlb
push
lret
insb
sbb
sbb
and
push
mov
repz
stos
aaa
push
in
lret
ljmp
mov
scas
icebp
dec
lahf
hlt
push
mov
shl
fbld
jecxz
cmp
xchg
push
sbb
fmuls
xor
jmp
or
push
ss
hlt
dec
mov
fcoms
insb
cmp
fdivp
pushl
ror
pushf
in
pop
mov
jmp
dec
je
dec
outsl
dec
dec
push
jbe
sub
je
leave
jmp
push
add
mov
jecxz
pusha
lods
mov
jg
adc
fstpt
and
xlat
pop
xchg
add
orb
sbb
mov
movsb
and
daa
aas
imul
pop
xor
and
aaa
arpl
pop
sbb
xchg
and
das
xor
dec
aas
jmp
xor
inc
sbb
daa
push
je
ret
shll
add
insl
int
test
outsb
inc
dec
adc
dec
inc
aam
mov
aaa
xchg
add
sbb
adc
xchg
cmp
push
xchg
cmovle
pop
sbb
jg
outsb
inc
aaa
outsl
pop
sbb
std
xor
and
inc
imul
pop
mov
scas
pop
cld
ljmp
sub
jle
cmp
into
add
inc
push
addr16
push
addr16
mov
mov
xchg
xchg
ja
aam
dec
ret
shll
inc
jmp
ljmp
aaa
push
xchg
imul
ja
jns
fcmovb
mov
pop
loop
and
or
pop
dec
in
push
xor
imul
pop
cli
pop
aad
loopne
in
xchg
sbb
daa
adc
scas
or
xorl
rcrb
into
fcomps
loop
enter
and
and
stos
imul
adc
or
fwait
dec
divl
xchg
xor
pop
andb
inc
aas
cltd
stc
mov
and
push
into
xor
cmp
pop
pop
test
mov
and
jnp
out
add
mov
adc
test
jmp
inc
xchg
mov
add
push
mov
mov
sbb
mov
sbb
inc
push
push
stos
push
push
imul
push
and
insl
fimull
jecxz
loopne
and
xchg
daa
push
enter
push
xchg
cwtl
push
xchg
mov
add
dec
push
adc
pop
inc
rcrl
push
rcrb
popa
jne
adc
jbe
bound
repnz
dec
xor
jecxz
or
add
xchg
mov
mov
xchg
add
add
fimull
mov
xchg
push
pop
xor
adc
roll
sbb
mov
rcr
pusha
lcall
inc
ret
mov
addr16
dec
add
mov
jbe
repz
mov
leave
jmp
jbe
dec
stos
shll
mov
mov
sbb
into
ljmp
mov
jmp
ljmp
out
out
adc
mov
and
cmpsb
js
adc
call
inc
adc
iret
push
xor
sub
movsb
aad
sahf
mov
mov
xlat
cmpsl
and
mov
mov
jmp
les
push
push
fisttps
jae
mov
and
movswl
sbb
mov
iret
nop
xor
loop
inc
sub
xchg
mov
xor
mov
cmpl
das
and
test
shlb
mov
xlat
xchg
iret
ret
mov
jecxz
repnz
jl
icebp
xchg
xchg
mov
xlat
mov
in
jmp
sbb
xchg
aas
shlb
ja
or
decb
mov
iret
sahf
jecxz
fistps
sarl
mov
ss
adc
dec
fnsave
fcmovnbe
mov
outsw
icebp
outsl
fildl
iret
outsl
fwait
bound
iret
dec
xor
mov
xchg
ja
fisttpl
fildl
mov
or
arpl
lds
aas
out
push
mov
inc
jmp
mov
les
and
mov
or
ret
push
dec
repnz
addr16
dec
lea
shrb
cmp
cmpsl
bound
adc
addr16
in
sub
incl
sti
nop
pop
mov
es
push
mov
cmp
cld
cmpsb
xor
test
out
ja
xlat
pushf
mov
or
or
test
loop
lret
aas
repz
scas
inc
repz
lods
push
lret
xchg
cmpsl
into
push
mov
popf
sbb
or
shlb
xchg
and
push
aam
mov
and
fldenv
das
lcall
mov
push
mov
inc
xchg
xor
out
xchg
nop
push
imul
mov
out
sbb
ljmp
lea
add
mov
cltd
scas
add
lret
movsl
das
sub
pushf
mov
aad
outsb
cwtl
rcll
adc
sbb
imul
add
add
add
cmpsl
and
sub
hlt
imul
adc
and
sbb
pop
pop
cmp
xor
imul
aam
outsb
nop
sar
enter
dec
repz
and
insb
dec
lock
pushl
add
fwait
push
and
push
pop
addb
add
inc
xchg
sbb
into
das
arpl
inc
hlt
shr
sbbb
rorb
push
inc
ficoml
push
sub
lcall
or
mov
hlt
xchg
pop
add
sbb
mov
test
jecxz
mov
mov
push
pushf
or
loope
stos
mov
in
pushf
in
dec
loope
stos
mov
fldcw
nopl
xor
lret
ret
je
dec
pop
xchg
mov
ret
add
fwait
inc
push
dec
orl
sbb
mov
orb
lcall
shll
hlt
fists
xchg
das
ficompl
pop
mov
push
xchg
rcrb
add
fsubs
mov
push
mov
sahf
xlat
in
xchg
mov
xchg
adc
hlt
push
xchg
aam
and
loop
and
loope
pusha
mov
outsb
scas
out
sub
sub
lods
cld
jge
hlt
scas
loopne
xor
aaa
outsl
jl
jo
and
xchg
sub
shr
lret
mov
pop
mov
sub
clc
adc
aam
hlt
inc
mov
hlt
jnp
imull
push
iret
in
enter
movsl
sbb
sahf
adc
xor
idivb
popa
das
mov
ret
hlt
out
pop
out
fucomi
nop
lcall
mov
loope
fstps
iret
xor
lock
mov
rcrl
hlt
stos
ret
sti
mov
pushf
dec
hlt
jge
loop
pop
mov
and
or
adc
push
sub
cmp
jns
repz
insl
hlt
sti
cmp
in
hlt
cli
jne
jbe
movsb
nop
stos
hlt
pop
int3
xchg
mov
mov
clc
hlt
sbb
cmp
pop
rolb
test
xor
mov
dec
mov
stc
push
js
inc
ljmp
mov
mov
xor
xchg
ret
inc
xchg
sub
pop
jmp
push
add
imul
or
cmpsl
cltd
and
adc
test
inc
xor
xor
or
rcl
test
hlt
mov
insb
cmp
cmpsl
xchg
je
dec
inc
inc
fcompl
xor
fs
scas
int3
xor
ljmp
push
inc
das
xchg
pop
sub
test
mov
mov
add
roll
loopne
arpl
dec
fistps
jle
negb
int3
xor
fsubr
cltd
xor
adc
and
mov
inc
hlt
bound
shld
inc
xor
and
hlt
xchg
call
dec
hlt
js
stos
outsb
adcb
hlt
insl
dec
rcrb
add
sub
ret
negl
lods
sbb
jnp
xchg
cmp
pusha
rcll
mov
jne
xchg
adc
sti
or
dec
push
adc
hlt
mov
mov
aas
out
mov
cli
fxtract
and
out
hlt
pusha
dec
cmp
hlt
mov
scas
inc
inc
ud0
sub
mov
fisubrl
test
hlt
stc
cli
ret
adc
and
inc
imull
call
sbb
hlt
mov
popf
cmp
mov
dec
pop
fwait
or
jae
nop
mov
push
testb
mov
imull
jecxz
iret
out
lods
idiv
ret
cwtl
and
mov
sbb
cli
scas
mov
push
jb
popf
aaa
pusha
mov
push
aad
cmp
cmp
fs
mov
adc
adc
subb
push
fwait
ljmp
and
add
dec
sbb
hlt
movsl
test
ds
inc
bswap
or
notb
mov
hlt
xchg
adc
inc
sub
push
imul
mov
jo
jg
negb
fmuls
popa
divl
shl
filds
fcmove
test
es
sub
iret
pop
test
repz
negb
xchg
add
push
ljmp
adc
ss
imul
or
in
cmp
cmp
push
xor
jae
js
hlt
stc
and
leave
imul
jo
ret
fstpl
inc
mov
in
aam
dec
mov
mov
dec
shl
pushf
jl
adc
into
shrb
cmc
dec
mov
dec
sub
mov
mov
mov
loope
dec
hlt
fidivs
scas
mov
popa
and
adc
fwait
or
xor
mov
hlt
dec
cmp
mov
lcall
pushf
iret
pop
inc
and
or
ljmp
test
jno
hlt
out
cli
and
jns
cmp
mov
sbb
push
hlt
iret
aas
mov
int3
outsb
hlt
std
lods
sbb
mov
push
mov
stc
fnstsw
cltd
rolb
sub
out
mov
hlt
int3
jg
mov
push
mov
orb
paddw
lret
call
cmc
stc
loope
cmp
mov
and
fwait
jno
push
xchg
jl
les
call
shlb
mov
sahf
adc
add
mov
out
jecxz
dec
cli
jo
or
sub
and
imul
insl
cmp
aad
hlt
xlat
movsl
sbb
xor
xor
and
insl
rorl
mov
sbb
pop
bt
hlt
and
inc
xor
dec
pop
adc
dec
mov
into
hlt
je
mov
inc
gs
js
test
aam
sbbl
jg
icebp
jae
mov
adc
pop
push
insl
vpaddusw
adc
loop
mov
out
repnz
sti
xor
xlat
imul
out
je
sub
addr16
mov
jb
test
sbb
and
push
mov
jne
mov
bound
in
mov
lods
inc
addb
int3
es
div
cmpsl
push
sbb
jp
xor
and
lret
push
inc
das
mov
dec
ret
call
mov
fwait
subl
aad
stos
cld
in
jae
pop
into
hlt
and
mov
cld
ds
out
hlt
or
lea
nop
imulb
cmp
loope
cmpsl
sub
push
lcall
scas
mov
hlt
inc
dec
imul
dec
ljmp
xor
int
popf
push
je
ss
fdiv
lret
mov
ljmp
xor
hlt
add
push
dec
roll
hlt
sbb
rorl
hlt
in
fcoml
mov
sub
idiv
scas
mov
add
inc
jp
add
pusha
cmpsb
insl
jge
in
out
add
cwtl
or
push
cmp
mov
add
divl
mov
aas
or
ds
movsb
stos
lahf
mov
inc
and
or
bound
hlt
or
or
mov
int3
jecxz
rcr
pushf
notl
xor
add
add
pop
adc
ja
xor
clc
sub
icebp
ja
xor
hlt
mov
mov
lea
mov
lret
and
ljmp
jp
popf
pop
adc
aas
xchg
js
les
stos
push
mov
hlt
push
mov
jl
hlt
scas
ret
ljmp
iret
push
shrl
xchg
sbb
mov
mov
push
repnz
hlt
sub
xor
hlt
inc
dec
js
xchg
pop
shl
arpl
pop
and
hlt
inc
pop
inc
data16
adc
out
or
mov
movsb
add
sahf
hlt
adc
cmp
xchg
hlt
mov
push
dec
pop
cmp
fdivrl
hlt
or
jmp
push
div
iret
push
pop
xchg
push
ds
jl
and
addl
imull
imul
and
mov
movsl
shll
lods
sbb
jne
pop
dec
adc
hlt
shrb
and
lods
xchg
hlt
out
sub
lcall
mov
lods
dec
arpl
int
push
ficomps
or
push
shll
sub
cli
adc
jp
mov
cmp
sbb
jnp
hlt
jns
xchg
hlt
fsubs
or
int3
sbb
cli
cmpsb
jp
push
mov
xlat
movl
gs
cmp
xchg
and
hlt
int
test
pushf
scas
arpl
sub
dec
divb
pop
mov
mov
push
xchg
jo
fadd
mov
or
push
push
ret
repz
hlt
mov
frstor
hlt
fwait
xchg
mov
hlt
pushf
mov
mov
fsubs
inc
hlt
jle
xor
push
pop
hlt
jo
dec
push
and
cmpsb
aas
ja
rcrb
mov
cmc
insl
jno
in
sbb
int
xor
pop
shl
hlt
pushf
xorl
mov
mov
push
and
hlt
xor
xchg
push
hlt
pop
shlb
cmp
ret
push
inc
psraw
sub
aas
test
jne
push
fnstcw
mulb
inc
add
adc
subb
out
hlt
push
jae
and
fwait
out
test
cmpsb
loopne
xor
hlt
jb
jns
or
pusha
sbb
ljmp
sbb
push
and
imul
adc
mov
jae
fisubrs
xchg
stos
rcr
out
sub
idivb
sub
lds
xchg
pop
cwtl
mov
and
loop
xchg
lods
sahf
add
sub
daa
inc
cmp
shlb
mov
xor
xchg
hlt
inc
xor
mov
jne
inc
and
ret
push
push
and
or
fwait
or
jns
mov
cmp
hlt
in
xchg
sarb
mov
jbe
mov
je
jle
sti
mov
stos
hlt
in
cmc
shl
dec
and
rcr
clc
sbb
jno
and
cmp
mov
jno
add
andl
in
imul
lcall
or
movsb
pop
hlt
stos
jnp
rolb
inc
dec
negb
daa
pop
pop
cmp
ror
mov
hlt
fisubl
movsl
iret
hlt
testl
add
mov
das
in
lcall
out
sbb
int3
cmp
mov
scas
stos
lods
je
out
and
mov
or
sub
and
cmp
int3
stc
movsl
into
ds
pop
or
pop
hlt
pop
xchg
sbb
inc
sbb
daa
xchg
fidivl
sbb
adc
jl
fbstp
mov
hlt
stc
sub
dec
jb
push
xor
add
push
and
repz
add
hlt
push
sbb
cs
add
mov
es
xchg
ds
jns
jl
add
pop
dec
lods
sbb
jb
bound
pop
fadds
pushf
xchg
filds
mov
sbb
add
xor
jmpw
sarb
xchg
xchg
pmuludq
mov
lods
out
sub
cmp
js
test
mov
or
popa
hlt
mov
mov
sub
imul
mov
sub
pushf
fisubl
mov
fdivrl
sbb
add
stos
nop
lods
and
jne
pop
push
in
hlt
push
sar
jecxz
bound
testb
shll
cmp
inc
decb
mov
rcrb
hlt
push
jmp
sbb
or
sbb
aas
dec
cli
dec
mov
sar
xor
dec
push
imul
outsb
stos
and
icebp
push
fcomip
lods
and
add
inc
movl
insb
inc
ja
mov
mov
icebp
xor
shlb
aad
mov
inc
pop
rcll
aas
lock
push
mov
into
ja
sub
dec
pop
dec
cmp
andb
rolb
mov
mov
sahf
hlt
dec
ljmp
out
sbb
sbb
mov
bound
pusha
in
hlt
js
loope
lahf
xorb
add
add
popa
sbb
xlat
ljmp
inc
loopne
test
rolb
sub
cld
jbe
cli
in
les
mov
sub
es
mov
mov
hlt
sub
lock
xchg
xor
dec
or
jp
sbb
data16
adc
shll
jge
and
dec
stos
aad
insl
mov
inc
push
jl
into
cmc
int
shr
lret
sti
push
xor
mov
loope
sub
fs
inc
hlt
lods
pop
cmpsl
daa
push
mov
sub
leave
call
cmp
jno
xor
push
hlt
stc
mov
shrl
push
negb
pop
hlt
jmp
inc
xchg
loope
xor
int
xchg
jg
fs
fldcw
outsb
hlt
rcrb
mov
in
divb
incb
aam
push
and
out
mov
xchg
popf
movsl
lods
hlt
fidivrs
mov
sbb
int3
outsl
loopne
adc
into
or
sarl
mov
hlt
push
xor
sbb
jmp
cmp
pop
xor
repnz
and
mov
adc
add
adc
cmp
and
hlt
je
mov
fxtract
push
jg
and
sahf
push
sbb
pop
mov
test
xlat
push
mov
xor
rolb
jns
insl
xchg
data16
xchg
jmp
lcall
mov
pop
lods
mov
loop
hlt
out
incb
jae
ljmp
jnp
mov
fcompl
dec
jo
mov
pop
push
hlt
xor
lea
hlt
dec
scas
push
mov
outsl
imul
lret
jnp
push
out
pop
fs
hlt
jg
in
in
push
lret
insb
out
inc
hlt
outsl
sub
loop
mov
ret
pop
sub
in
in
xor
cs
add
ja
xlat
or
jg
xor
icebp
xor
rcl
sub
fs
lods
hlt
and
sub
lahf
hlt
sbb
decl
mov
hlt
pusha
cmp
movsb
jo
pop
jge
inc
ss
int
xchg
scas
mov
pop
xchg
imul
scas
aaa
lods
adc
hlt
inc
and
cmp
aas
xor
insb
sub
fcompl
adc
dec
inc
hlt
inc
or
addb
fsub
sbb
shl
std
mov
ss
outsl
pop
cmc
ja
sahf
jge
push
fmul
data16
fcmovb
loope
or
push
sub
push
sub
push
shlb
cmp
das
cmpsb
mov
sub
xchg
sub
add
hlt
aam
inc
aad
mov
adc
cld
subl
fcoms
sti
hlt
leave
sub
aas
jnp
pop
pop
jbe
xchg
mov
outsb
and
movsb
push
daa
inc
les
pmuludq
mov
hlt
test
jb
std
hlt
rcrl
inc
scas
cld
push
or
nop
jnp
fbstp
hlt
popf
shlb
hlt
insb
or
mov
pop
xchg
out
mov
jmp
addr16
push
repnz
inc
lds
adc
outsb
lret
hlt
mov
repnz
or
lret
fs
in
addr16
hlt
pop
adc
sbb
or
hlt
xor
sbb
loopne
sbb
int
outsb
insb
daa
jo
and
loope
out
bound
hlt
test
inc
sub
in
xchg
in
jae
mov
mov
iret
xor
in
hlt
jae
sbb
shll
sti
mov
out
movsb
sbb
fiadds
lcall
xlat
inc
add
dec
in
cli
sbb
test
inc
pop
add
and
loop
imul
loopne
jb
hlt
enter
xor
hlt
inc
lea
jno
lret
push
jb
divb
mov
fstl
and
out
xorb
add
out
mov
mov
hlt
lcall
and
test
and
jl
push
out
push
mov
imul
lret
mov
icebp
dec
fs
xchg
lret
repnz
sbb
mov
fidivrl
push
mov
fwait
hlt
in
movb
out
aas
ss
inc
jbe
push
mov
mov
push
loopne
lods
mov
aam
cmpsb
cld
test
push
testb
scas
xchg
sbb
sbb
or
test
lret
mov
mov
orb
test
iret
fldcw
or
shlb
hlt
nop
mov
mov
test
int3
insl
ja
jecxz
sbb
xchg
jg
call
push
hlt
cmp
pop
jle
sub
in
divb
dec
xor
std
jle
lea
je
xchg
je
pop
hlt
sbb
shlb
mov
daa
mov
xorl
mov
sub
addr16
cli
dec
jae
fdivrl
jne
mov
scas
hlt
adc
ret
daa
inc
dec
int3
roll
icebp
xchg
mov
and
mov
push
hlt
push
cs
mov
hlt
js
fsin
pop
mov
lahf
jno
xor
push
xor
sbb
adc
dec
lods
xor
les
mov
loope
sub
adc
add
xbegin
mov
hlt
fildl
mov
and
inc
lea
ret
rcl
add
mov
xor
pop
add
fisubrl
movsl
dec
jne
xor
aam
cs
es
push
xchg
lret
orl
mov
in
icebp
xchg
imul
loop
jne
and
rorl
insl
hlt
outsb
add
lods
lret
cmp
cmp
clc
jmp
lret
cmp
cmp
mov
sbb
inc
mov
add
pop
inc
sti
iret
imul
adc
hlt
outsl
inc
dec
dec
mov
lods
sub
push
xchg
sbb
mov
ret
pop
xor
into
ss
dec
fs
repnz
sti
mov
movsl
stc
sahf
call
hlt
push
out
test
adc
int
adc
sbb
dec
dec
imul
sub
insl
daa
hlt
inc
rorb
int3
seta
mov
cmp
cwtl
test
add
sub
pop
ss
dec
push
inc
sbb
and
mov
dec
push
inc
and
imul
mov
hlt
mov
loopne
repz
jecxz
adc
push
in
xchg
pop
subl
or
jmp
dec
imul
fs
cmc
outsb
cmp
mov
add
hlt
or
decl
hlt
and
push
rorb
sub
mov
pop
jo
hlt
ret
insl
xchg
sub
hlt
mov
jecxz
xor
addr16
mov
sub
aas
push
jge
hlt
repz
jo
lret
sub
sbb
push
imul
sbb
jecxz
or
pushf
hlt
fildl
mov
lcall
in
movsb
mov
mov
dec
lods
pop
push
into
pop
pop
and
nop
jg
inc
lahf
or
xor
or
lret
iret
mov
fcomp
hlt
call
dec
sbb
das
pop
movsl
imul
xchg
xchg
lret
stos
jecxz
jmp
mov
ficoml
bound
xor
hlt
or
cmp
es
imul
and
dec
je
jecxz
hlt
js
insb
loope
std
shl
inc
pop
xchg
cld
cmp
sti
aas
dec
mov
movsb
out
mov
std
out
and
inc
scas
and
je
loope
daa
jae
cld
roll
sti
xchg
dec
shll
add
push
cmp
fs
add
mov
outsb
mov
lret
std
jns
jae
les
lret
mov
rorl
inc
push
popa
imul
add
jmp
rclb
sub
add
hlt
lret
das
outsb
in
daa
xor
mov
mov
lods
push
arpl
out
xchg
fcoml
push
hlt
imul
cmpsl
mov
shll
out
jmp
arpl
inc
jecxz
in
clc
scas
mov
hlt
inc
xchg
and
fwait
mov
hlt
in
or
hlt
xor
pop
loop
sahf
jl
cmpsl
not
addr16
out
ret
hlt
jle
out
sti
pop
shlb
adc
divl
shr
fbld
fwait
test
mov
cmp
mov
xlat
lret
call
xor
leave
cmp
mov
mov
fmul
hlt
mov
fnstsw
inc
lcall
arpl
xor
shrl
jge
jmp
fsts
hlt
cmp
dec
lret
sbb
pop
shl
stc
daa
lcall
add
movsb
push
pusha
ja
and
mov
mov
sbb
pop
push
push
pmullw
hlt
or
adc
push
mov
jae
sub
or
hlt
fnstenv
cmp
cmp
sub
cmp
ret
lret
test
idiv
cmp
mov
add
add
aas
mov
jae
fcoml
hlt
fwait
leave
dec
insb
stos
mov
hlt
cld
mov
sub
or
mov
jb
push
dec
pop
mov
fdivr
pop
jl
data16
adc
or
leave
neg
push
aas
cs
pop
mov
fdivrl
mov
into
jp
add
add
cmp
ja
inc
negb
call
xor
adc
jb
rorl
xchg
test
hlt
testl
hlt
rcl
sub
pop
test
inc
movsl
add
inc
xor
mov
jecxz
mov
xor
outsl
mov
ds
cwtl
mov
out
add
jp
rolb
cmc
xor
cmc
ret
hlt
clc
push
pusha
cmpl
addr16
mov
pop
hlt
sbb
push
cmpsb
ss
in
jae
lret
lock
sti
mov
cli
cmpsb
hlt
xchg
fcmovb
jo
adc
scas
hlt
xchg
stos
add
in
ret
and
imulb
xchg
sbb
xchg
daa
shl
imul
scas
inc
stos
xchg
pushf
push
imull
ret
js
cmp
sub
lods
xchg
imul
push
maskmovq
divl
mov
js
test
pushf
sbb
shlb
sub
fldt
ficompl
jp
hlt
lods
or
ss
xor
fchs
add
pushf
imul
push
sti
fistpl
mov
je
or
sub
shl
push
jbe
mov
mov
into
pop
cmpsl
mov
pop
xor
mov
aaa
cmpsb
fmull
hlt
sub
fwait
hlt
ja
push
fdivrp
fldenv
not
hlt
xor
dec
hlt
clc
mov
mov
or
jo
lea
outsl
add
mov
negl
dec
into
mov
popf
hlt
jb
inc
sbb
int
fs
cmc
hlt
jl
mov
jge
inc
add
and
mov
pop
aam
dec
js
cmp
dec
inc
ds
sbb
xor
hlt
xchg
or
lea
mov
and
fnstcw
xchg
hlt
mov
inc
xchg
ss
adc
ret
pushf
mov
jg
clc
sbb
loope
icebp
loopnew
rorl
pop
jl
repnz
inc
movsb
add
in
mov
ss
push
xchg
jb
repz
jnp
jne
int3
lret
cmp
ret
pop
mov
inc
js
hlt
mov
aas
mov
jp
sub
push
shlb
mov
adc
xchg
hlt
out
mov
dec
sbb
mov
push
bound
aaa
sub
xor
jbe
jl
cld
adc
sbb
mov
and
pop
addr16
or
test
call
mov
jbe
fdivrl
jns
inc
shrb
imul
imul
xchg
mov
leave
pop
mov
aad
out
push
lahf
mov
cltd
ljmp
adc
add
fs
cmp
popa
sbb
push
inc
popf
cmp
lods
adc
adcb
xchg
pushf
push
hlt
jmp
outsl
pop
popl
fstl
xchg
sbb
inc
mov
addr16
mov
mov
dec
hlt
stc
jl
loope
jo
mov
test
xchg
jmp
fbld
xchg
and
inc
test
jbe
hlt
xchg
or
in
jmp
push
pop
fmull
into
hlt
mov
hlt
jb
cwtl
fistpl
mov
hlt
fidivrs
pusha
clc
sbb
xchg
hlt
cmp
hlt
sub
js
in
mov
xor
notl
sbb
mov
pop
hlt
loop
cmpsb
loope
xor
lods
hlt
adc
shll
js
aaa
xchg
hlt
or
aad
loope
repnz
adc
cltd
stos
dec
hlt
rcll
pop
mov
icebp
loopne
roll
mov
pop
je
jp
jg
mov
cmp
dec
mov
or
inc
loopne
push
sub
add
lods
imul
xor
sbb
das
or
mov
cld
hlt
mov
mov
inc
imul
push
cmc
mov
xchg
xchg
lret
ljmp
or
jmp
push
out
mov
sti
pop
xchg
mov
lods
or
xchg
hlt
and
ja
lods
sub
adc
mov
icebp
or
or
xchg
mov
push
hlt
sub
cmc
clc
push
hlt
arpl
and
jne
mov
daa
sbb
divb
fs
out
cltd
lock
pop
mov
idiv
pushf
jl
xor
test
add
sub
sbb
mov
push
imull
push
adc
jmp
xor
aaa
xchg
lds
inc
hlt
adc
icebp
mov
push
push
mov
neg
mov
jo
pop
insb
repnz
cli
out
hlt
out
movsb
daa
inc
js
xchg
out
add
push
lahf
fildl
push
inc
iret
rcr
jp
and
or
pop
imulb
aad
hlt
std
orb
or
leave
pop
mov
jno
ror
push
sbb
or
add
stos
xchg
xor
hlt
add
sar
hlt
jmp
sbb
es
cmc
hlt
mov
insl
and
xchg
cwtl
and
int
hlt
xchg
ret
or
xor
inc
hlt
mov
xchg
xorl
sub
int3
cmp
rcrl
rolb
aad
fidivs
hlt
fnsave
sahf
or
imulb
in
imul
ss
jl
add
xchg
into
inc
adc
xor
mov
je
cmpsl
xor
jb
and
fwait
scas
cmc
mov
pop
repnz
push
or
and
jne
hlt
push
loopne
out
or
cmp
insl
aam
shl
fxch
xchg
sub
out
push
cmpsb
xchg
mov
add
dec
pop
cltd
fs
inc
xchg
mov
mov
lods
aaa
lcall
and
xchg
mov
hlt
pop
and
pop
loope
jge
dec
sub
jnp
jo
jecxz
lock
mov
push
loope
sub
hlt
mov
adc
or
popf
rorl
out
cmp
rdrand
cmp
xor
sbb
hlt
hlt
cmp
sar
adc
mov
loop
in
jae
int
cmc
into
mov
xchg
lret
add
jecxz
mov
fidivl
pop
stc
or
jb
cmc
in
xchg
jmp
xlat
idivl
pop
lret
mov
clc
cmc
mov
sub
repz
mov
xchg
imull
mov
and
push
insl
rcrb
lock
stc
fnsave
push
inc
jnp
add
and
std
outsb
sub
mov
hlt
arpl
lcall
add
sti
les
mov
push
testb
imul
mov
mov
jge
mov
insl
add
hlt
cwtl
sbb
or
or
cmp
lock
push
inc
push
gs
jnp
sbb
sbb
push
cmp
sahf
xchg
testb
adc
mov
add
pop
add
hlt
adc
dec
data16
lret
js
call
fcmovbe
sbb
mov
out
outsb
pop
repnz
xchg
sub
mov
std
js
xor
hlt
aad
cmpsb
jns
hlt
stc
stos
andl
dec
out
imul
or
icebp
inc
int3
imul
xchg
xchg
ja
mov
hlt
cmp
adc
xor
js
cmpsl
hlt
mov
outsl
gs
add
cmp
sub
hlt
sbb
loope
bound
fisttpll
daa
push
add
inc
lods
add
pop
inc
or
cs
mov
test
or
pop
push
hlt
add
pop
mulps
cs
dec
je
outsl
clc
hlt
rorl
pop
ljmp
jg
lret
sub
stc
jp
shl
test
cwtl
scas
or
into
xor
repnz
mov
aas
ret
insb
mov
dec
mov
and
mov
test
and
mov
dec
cltd
hlt
lods
les
or
fisubl
inc
add
push
adc
sbb
jmp
leave
int
out
lcall
js
hlt
cmpb
sub
fcoms
icebp
ret
push
repz
add
adc
test
sub
xor
arpl
jno
mov
test
hlt
mov
push
adc
outsl
sub
and
ds
jp
add
in
pop
mov
push
mov
mov
icebp
sub
stc
inc
xor
int3
xchg
adc
push
jg
arpl
sbb
push
lds
xor
lahf
inc
hlt
push
stos
sbbl
pusha
or
orl
mov
and
ss
inc
es
aad
adc
dec
data16
popf
mov
lods
fs
mov
lahf
jg
je
push
add
pop
and
or
ds
je
dec
adc
mov
inc
sbb
hlt
popf
insl
jge
cwtl
outsb
xchg
sbb
cmp
sub
in
xor
sbbb
out
hlt
xor
jno
jns
hlt
cwtl
in
fnstcw
imul
or
loopne
mov
jmp
cs
in
arpl
popf
jl
hlt
mov
push
or
push
xor
xchg
inc
or
out
pop
in
clc
add
dec
popa
mov
hlt
out
and
hlt
cmp
lock
mov
pop
mov
lcall
fldcw
into
jecxz
insl
or
sbb
sbb
xchg
dec
xor
cmpsl
lret
mov
imul
rcrl
xlat
hlt
fcomps
ficoml
pop
rcrb
hlt
xor
int3
jmp
inc
stc
mov
cmpsb
hlt
stos
inc
jo
xor
mov
jno
sub
hlt
cwtl
sub
mov
adc
testl
ds
hlt
cmp
aas
jg
int3
push
jl
push
jbe
xlat
mov
hlt
xor
or
pop
aas
and
mov
fs
hlt
sbb
in
push
sbb
add
push
xor
adc
jg
mov
hlt
in
imul
xchg
adc
aam
hlt
inc
inc
push
cmp
hlt
arpl
inc
loopne
das
insl
adc
ret
push
in
jp
dec
push
call
repnz
cmp
cli
mov
pop
sub
js
scas
mov
mov
push
cmc
ljmp
nop
lret
lret
dec
imul
jp
mov
mov
bound
adc
je
xor
or
xchg
mov
or
hlt
fcmovnu
ret
inc
popa
pop
jg
out
call
push
mov
movsl
push
hlt
mov
popa
xchg
shl
aam
hlt
dec
mov
sbb
repnz
loopne
or
lret
negb
cmpsb
jp
hlt
cmp
xchg
pop
inc
insl
out
hlt
push
test
pop
dec
add
fnstsw
pop
jae
jns
idivl
outsl
sub
scas
mov
hlt
xchg
xor
and
out
movsl
loop
xor
hlt
or
dec
fsubrs
sbb
hlt
clc
repz
xchg
mov
sub
hlt
pop
rcrl
or
sbb
jae
imul
fwait
inc
jl
inc
aam
or
repz
and
cmp
mov
sub
scas
nop
push
shl
push
imul
sub
dec
hlt
pop
cld
int3
jl
fs
imul
dec
inc
xchg
dec
push
mov
push
fists
hlt
dec
pop
ja
inc
mov
xchg
subl
sbb
jmp
inc
hlt
fildl
mov
mov
or
hlt
cmpsb
dec
mov
cltd
xlat
lcall
mov
pusha
mov
and
inc
inc
hlt
je
icebp
scas
push
push
pop
add
loope
lahf
popa
mov
int3
mov
repnz
jbe
xchg
sbb
cmp
jmp
cmovle
push
xor
push
repnz
xchg
imul
sub
lods
rcrb
iret
xor
sub
sbb
lret
and
xchg
hlt
pop
mov
dec
or
push
insl
jbe
out
cltd
add
dec
xchg
scas
iret
jge
movsb
decb
cmp
in
add
test
pusha
jae
push
and
jge
or
cmp
push
sahf
negb
ljmp
mov
test
lock
repnz
mov
jmp
mov
repz
inc
das
out
mov
test
ss
repnz
mov
adc
dec
lret
cmp
icebp
inc
mov
pusha
loope
pop
fcoml
movsl
xchg
sbb
or
and
mov
add
test
or
mov
jg
nop
cmp
pop
mov
pop
mov
bound
inc
sub
lret
fwait
pop
push
xchg
cmc
add
stc
out
and
in
dec
hlt
mov
gs
or
rcll
int3
jmp
mov
ja
lret
push
inc
hlt
stos
mov
inc
or
test
hlt
in
cld
shlb
hlt
pop
dec
pop
add
ret
xchg
leave
hlt
test
add
inc
arpl
outsl
push
aad
xchg
repnz
jecxz
jp
and
mov
xor
and
out
imul
dec
jno
or
aas
hlt
bound
lret
jmp
pop
dec
mov
movsb
subb
into
aaa
xchg
out
jmp
or
jae
not
dec
int
push
push
xor
dec
movsl
cli
dec
hlt
out
rcr
loopne
fdivrl
and
sub
imul
add
mov
clc
and
hlt
int3
lds
xor
fisttps
pop
adc
push
ss
sbb
push
outsb
mov
imul
xchg
cmc
inc
xor
hlt
mov
and
repz
xor
adc
mov
add
push
les
loopne
add
in
insb
addr16
fucomi
cmc
or
sub
xor
ret
mov
icebp
test
jae
div
cmpsb
mov
imul
and
ja
movl
je
stos
or
mov
std
dec
cmpsl
xchg
sbb
shll
inc
mov
sti
dec
cmp
mov
xor
iret
sbb
call
sub
or
mov
rclb
push
cwtl
mov
cltd
adc
out
jle
mov
fimuls
xchg
or
in
mov
rcll
js
imul
rcr
cmc
mov
mov
fs
cmpsl
std
mov
lods
push
dec
dec
push
sub
cltd
fwait
cmc
shrl
decl
popf
xchg
xor
xchg
ficompl
ret
aaa
cmp
jp
xor
sbb
hlt
ja
pop
and
sti
mov
negl
in
sub
hlt
mov
in
adc
les
ss
sarl
les
in
or
mov
rcrb
mov
jo
test
sahf
in
aam
hlt
inc
daa
sti
sbb
hlt
or
jo
push
hlt
test
inc
fcmovnbe
addr16
dec
hlt
pop
fldenv
cmp
aas
mov
sub
addl
mov
pop
inc
mov
in
pop
jne
xor
pop
hlt
sbb
sub
hlt
push
xchg
xchg
push
jns
xor
inc
stos
popl
dec
xor
mov
xchg
push
and
fs
cmpsb
imul
hlt
mov
and
mov
lods
lods
in
xor
mov
push
loopne
hlt
cmp
inc
mov
mov
adc
hlt
loope
mov
hlt
jge
mov
ret
adcl
mov
mov
jmp
inc
inc
test
stc
jg
icebp
jo
adc
lahf
lock
xor
sbb
cmp
cmp
xor
inc
lods
add
adc
mov
pusha
arpl
jl
mov
repz
xchg
cmp
push
jne
pop
sbb
clc
imul
add
outsb
xchg
adc
aam
xor
loopne
repz
hlt
push
subb
hlt
lcall
fxtract
mov
cld
imul
sub
add
add
std
sbb
out
mov
shl
clc
xchg
push
sbb
loop
cmp
test
sbb
repnz
mov
movsl
leave
out
jecxz
addr16
xor
pop
jnp
popf
clc
or
shll
movsbl
jbe
out
jnp
push
inc
lods
push
test
xchg
data16
bound
call
mov
std
xchg
sbb
stc
adc
mov
in
imul
int
xor
lds
fdivrl
cmp
xchg
and
pop
jne
cmc
hlt
or
clc
sbb
data16
es
shl
inc
and
inc
and
push
stos
or
adc
daa
dec
lahf
fistpll
push
hlt
mov
jl
mov
call
hlt
movsl
movsb
push
adc
xor
adc
mov
or
popf
push
outsb
jp
and
repnz
inc
cmc
xor
mov
in
push
stos
jbe
scas
leave
add
nop
test
dec
aas
sar
test
jno
fs
xor
cmpsb
leave
hlt
xchg
sbb
or
cmp
aaa
shlb
hlt
test
push
mov
add
xchg
hlt
mov
mov
or
lcall
insb
cs
in
hlt
lods
jno
frstor
mov
sbb
adc
stc
xchg
sub
hlt
mov
xchg
ret
pop
lea
mov
hlt
loop
ljmp
in
aam
add
hlt
in
mov
xor
addr16
leave
mov
pop
js
jecxz
hlt
repz
loope
ja
mov
mov
and
stos
test
mov
and
adc
add
daa
notl
loop
cli
sbb
cmpsl
sub
and
jbe
dec
sysexit
push
lods
hlt
dec
inc
jge
sub
nop
jo
sbb
insb
fbld
dec
pop
cwtl
rolb
jl
sbb
lret
mov
hlt
sti
in
inc
mov
inc
jg
rcll
xchg
fdivl
pop
xor
ret
pop
xlat
mov
push
adc
push
mov
hlt
je
popf
and
hlt
orb
push
hlt
fdivrl
xchg
xchg
push
mov
out
sub
jle
mov
cmp
cltd
pop
or
push
sub
fcomip
std
pop
sbb
sbb
aas
or
sub
dec
jo
sarb
jae
push
loope
inc
add
test
nop
shll
sahf
jmp
or
or
pop
push
gs
lret
xor
loop
out
push
sub
sbb
shl
cmc
adc
xchg
xchg
or
mov
std
movsb
into
cld
nop
and
sub
xchg
lahf
inc
in
inc
and
push
adc
addb
repz
sbb
loopne
or
js
data16
mov
test
roll
fwait
xchg
jge
or
push
jbe
mov
xor
add
pop
mov
xor
fsubrs
lods
mov
ret
je
jmp
jecxz
cltd
das
lea
dec
jg
cmc
std
out
fcompl
shll
hlt
mov
push
jnp
pop
js
jecxz
mov
iret
mov
test
rcr
aas
call
push
ret
push
aad
xlat
cmp
cli
add
adc
hlt
arpl
nop
mov
jg
cmpsb
xor
fdivs
jmp
push
js
loopne
lret
xchg
arpl
faddl
int3
xchg
xchg
jl
hlt
xbegin
dec
jnp
xor
fistl
int
daa
hlt
jmp
mov
push
mov
jne
imul
adc
jecxz
in
hlt
insl
inc
sahf
out
add
mov
sbb
mov
js
mov
inc
cld
xor
mov
imul
fimuls
aas
sahf
loopne
cmp
pushf
cli
pusha
fnsave
ret
cmp
ja
and
hlt
cltd
scas
jb
xlat
loopne
jmp
icebp
xchg
jne
push
hlt
xor
mov
mov
scas
pop
xchg
inc
lods
hlt
pop
sbb
pop
ret
hlt
test
rorb
push
imul
inc
data16
sti
sub
jp
pop
adc
adc
jno
jnp
or
push
aaa
xlat
dec
cmp
iret
ret
dec
sbb
add
lock
xchg
aas
xchg
add
outsl
push
sbb
mov
mov
std
rcl
xchg
cs
or
mov
pop
shlb
mov
mov
mov
mov
cld
clc
into
jbe
aad
mov
mov
movsb
pop
cs
adc
test
ret
hlt
call
clc
push
pop
hlt
adc
movsl
test
xlat
mov
push
insl
mov
adc
cwtl
sub
call
jae
dec
hlt
popf
movsl
pop
dec
fwait
outsb
push
xor
dec
inc
xor
mov
or
jp
test
add
mov
mov
mov
mov
cli
jmp
pusha
pop
je
lret
pop
mov
sbb
adcl
push
hlt
ja
rcr
xor
dec
pusha
hlt
clc
sub
in
jnp
mov
hlt
imul
sti
arpl
notb
mov
cmp
movsl
andb
and
test
hlt
add
scas
sahf
hlt
cmpl
sub
sub
cmc
icebp
or
inc
push
stos
hlt
sub
outsl
loop
hlt
lret
dec
push
xchg
sub
pop
pop
out
jecxz
jl
scas
fnstsw
hlt
mov
fisubrs
add
and
sahf
imul
rcrb
mov
out
mov
mov
aad
out
cmpsb
xor
js
cmpsl
test
xchg
jae
dec
push
hlt
cltd
orl
fmuls
xchg
jecxz
imul
cmp
or
fs
jl
sub
aam
adc
aaa
pop
adc
sub
loope
fldenv
push
dec
adc
or
inc
sbb
ss
jle
in
cmp
xchg
add
into
stos
dec
hlt
sub
ss
hlt
inc
mov
pop
imull
scas
ljmp
xchg
push
negb
push
lods
lcall
cmc
mov
in
add
hlt
aas
lret
or
imul
hlt
and
inc
adc
cmp
nop
jge
sahf
idiv
lods
xor
xor
push
cs
cmp
lods
int3
lds
sbb
mov
mov
sub
lahf
mov
pop
add
iret
aad
scas
ss
hlt
gs
hlt
nopl
add
insl
or
push
jmp
lret
lret
hlt
mov
stos
les
sbb
aad
mov
fwait
dec
xor
out
mov
cltd
aad
notl
rcrb
mov
hlt
pop
ja
xlat
insl
addr16
adc
mov
cmp
imul
cs
cmc
adc
add
imul
pusha
stc
out
mov
ljmp
mov
cwtl
sub
lock
mov
hlt
fbld
movsb
pop
loope
fs
xlat
pop
xor
popf
xor
cmc
sub
hlt
jge
mov
inc
hlt
test
pop
pop
sbb
cmp
in
sahf
imul
hlt
pushf
insl
std
int
push
in
xor
jp
andl
and
xor
pop
dec
xor
mov
movsb
loope
jbe
loop
or
bound
mov
add
xor
stos
mov
std
shll
jbe
das
je
in
imul
incb
ja
fs
repnz
sbb
int
not
mov
dec
or
hlt
scas
mov
leave
imul
xlat
xchg
mov
pop
call
sarb
test
mov
dec
sub
add
or
ret
imulb
cmp
jno
xchg
lret
repnz
and
jnp
ret
icebp
hlt
es
mov
xchg
loop
push
fxtract
ds
cltd
cmp
lock
add
xor
xor
cs
mov
shlb
mov
int
notb
mov
bnd
jl
nop
in
insb
repz
hlt
push
xchg
sub
or
push
pop
ja
xor
test
dec
insb
jno
dec
xor
popa
hlt
repnz
ljmp
les
shr
push
jmp
xor
pushf
out
xor
jbe
out
lret
sub
mov
jbe
mov
insl
roll
stos
pop
cwtl
shrb
adc
mov
adc
jmp
xor
mov
push
fildll
mov
pop
hlt
test
divl
xor
hlt
mov
push
scas
or
cmpsl
lret
repnz
jp
ds
pushf
push
xchg
inc
loope
mov
add
fs
sub
add
dec
hlt
loope
mov
jo
lcall
data16
hlt
add
mov
imul
push
dec
ret
shlb
xor
and
mov
mov
je
inc
dec
out
cmp
jle
jmp
sbb
test
fs
adc
outsl
scas
imul
push
int3
ss
jg
jecxz
out
or
repnz
xlat
sub
cmp
pop
inc
lret
hlt
popa
xchg
and
test
lret
hlt
imul
push
mov
lcall
dec
int
lea
daa
loop
hlt
cmp
out
orl
js
and
sbb
cld
adc
pusha
or
repnz
pushf
pop
hlt
icebp
push
nop
dec
aaa
hlt
and
mov
imul
lock
or
and
sbb
loopne
in
sarl
pop
int3
imulb
stos
aas
je
aam
mov
addps
cmc
gs
push
push
out
hlt
movsb
jle
or
push
out
scas
sub
insl
cmp
scas
out
sub
ret
andl
div
int
clc
in
int3
leave
sub
xchg
pop
pop
aad
hlt
sub
xchg
push
popf
addr16
push
pop
hlt
add
cmp
hlt
loop
js
sar
sub
hlt
out
mov
push
int3
hlt
lahf
inc
and
imul
sbb
cmc
and
ljmp
add
out
negb
adc
bnd
mov
out
cltd
mov
hlt
dec
sbb
fmulp
pushf
mov
add
and
repnz
or
std
and
rorb
cwtl
jle
sub
or
cmp
cld
leave
add
in
es
test
or
adc
adc
adc
sub
add
hlt
mov
fwait
decb
add
cmp
mov
ror
movsb
mov
add
pop
mov
hlt
fdiv
jecxz
int3
xor
add
repnz
inc
loop
hlt
xor
pop
or
sbb
mov
add
gs
insb
hlt
je
scas
imul
inc
outsb
jbe
xchg
add
in
lret
fdivl
sbb
add
leave
adc
lahf
mov
lock
and
push
out
xchg
pop
xor
add
jle
cwtl
or
call
divl
ds
hlt
outsb
adc
cmp
shl
xor
pop
cld
cmp
hlt
mov
push
xchg
fwait
hlt
xor
mov
cmp
adc
sbb
shrb
mov
pop
hlt
out
insl
shlb
test
aad
lds
ja
hlt
test
fcoms
sbb
jmp
adc
outsb
jge
pop
mov
jo
dec
sti
mov
sub
hlt
xor
or
lahf
mov
dec
int3
neg
out
outsb
cmpsb
push
xor
xor
sahf
add
cmp
xorb
test
ucomiss
fdivrl
mov
repnz
add
xchg
lret
movsb
lret
xchg
jno
hlt
cli
mov
icebp
cmp
loop
sbb
idiv
rorb
les
sti
in
and
mov
add
jne
pop
xchg
cmp
into
xlat
cmpsb
sbb
outsl
cmp
int
lahf
xor
add
push
mov
daa
aas
nop
inc
sbb
jbe
int
imul
cld
hlt
xor
js
xchg
sbb
mov
push
testb
or
mov
mov
lcall
mov
push
hlt
mov
popa
xchg
das
mov
jnp
lods
sbb
std
inc
mov
cmp
js
clc
pusha
pop
imul
adc
fidivl
hlt
aad
cmp
xor
mov
or
mov
push
cmp
ret
shl
jge
popa
insl
add
mov
pop
fidivrs
dec
pop
fiaddl
aam
fxtract
pop
pop
andnps
push
call
jecxz
repnz
loop
in
ds
adcb
loope
jle
sarb
hlt
sbb
out
testl
test
pop
out
pusha
icebp
ret
into
lret
add
xor
jp
int3
dec
imul
loop
stos
sbb
aad
sub
cmp
xchg
pop
add
cs
std
hlt
cmp
inc
inc
or
out
hlt
sub
sub
stos
xor
hlt
mov
sarl
add
mov
xchg
jne
cld
and
fstpl
cmp
imul
out
divl
hlt
xchg
mov
cs
pop
shlb
dec
nop
repnz
int3
jns
jge
pop
jp
pop
fnsave
inc
mov
mov
int3
hlt
shl
lret
push
repnz
push
shll
mov
imul
jmp
hlt
ljmp
hlt
repnz
std
sub
xor
popf
negb
lods
add
ret
jo
or
in
test
addr16
int
sub
pop
and
xchg
aam
adcl
scas
rorb
cwtl
imul
movsl
data16
std
inc
or
pop
or
jbe
adc
sub
add
hlt
stos
add
cmp
xchg
sbb
data16
test
test
dec
packsswb
or
dec
cwtl
ret
jae
and
int3
insb
and
mov
xchg
pop
es
stos
hlt
pop
jecxz
inc
nop
fsubrs
dec
jl
movsb
xchg
cmpsl
push
jae
test
out
xor
mov
xor
hlt
loope
jno
test
or
dec
adc
or
lcall
and
dec
fdivr
dec
cmc
xor
mov
jmp
sub
cmpsb
jb
mov
or
leave
int3
sbb
aas
add
sti
mov
xchg
and
jl
hlt
aad
adc
push
test
sbb
push
jbe
mov
add
sbb
int
hlt
xchg
push
jbe
and
xorl
mov
dec
sahf
cli
hlt
shrd
mov
cmp
or
in
iret
test
test
mov
hlt
dec
push
in
sub
mov
aam
hlt
push
sahf
pop
jmp
shlb
cmp
mov
out
cli
ret
push
cltd
lods
adc
lods
push
int
hlt
fbld
jne
mov
cmp
sub
mov
insb
xchg
dec
ja
add
jae
inc
adc
aas
cmp
mov
stos
mov
ficoml
hlt
jno
fcoml
das
inc
pop
sbb
xchg
sbb
mov
gs
pusha
stc
ljmp
js
xchg
testl
hlt
xchg
jne
add
fwait
sub
insl
cmpsb
ljmp
inc
push
dec
add
hlt
das
fnstsw
sub
int
mov
js
aam
push
addr16
repnz
add
mov
mov
pop
hlt
push
inc
cmp
lods
mov
inc
mov
jmp
sbb
and
icebp
hlt
dec
aad
jg
add
sub
or
fdecstp
cmp
data16
jmp
popa
mov
mov
les
sahf
adc
xchg
add
nop
sar
sbbl
ret
lret
add
push
push
xor
jae
mov
push
testl
push
hlt
inc
xchg
add
ss
pop
hlt
jecxz
cwtl
outsb
inc
lcall
hlt
cmp
shl
mov
ds
dec
push
hlt
loopne
sub
push
fiaddl
mov
mov
jge
pop
sub
lods
int3
mov
mov
or
cmp
cmc
add
pusha
sub
enter
sub
adc
cwtl
lret
cmc
rcrl
out
fisubl
push
dec
cmpsl
loopne
loop
add
outsl
xor
push
jg
sbb
in
scas
cmp
ret
jae
test
adcb
add
xor
mov
icebp
cmpsb
rcl
hlt
and
inc
cmp
mov
pop
pop
inc
in
mov
bound
out
sbb
test
dec
or
imul
cs
mov
shrb
sbb
pop
push
jg
mov
repz
push
mov
aad
hlt
adc
add
or
je
jle
lods
repnz
div
lcall
fs
jne
lret
imul
or
add
mov
enter
sti
test
aas
cs
je
push
push
dec
lds
rcl
shld
jae
gs
shl
cmpsb
mov
lret
mov
jne
popa
hlt
dec
loopne
scas
cmp
cmc
cwtl
hlt
sbbl
icebp
hlt
out
clc
sub
lds
jne
pop
adc
aad
ret
xchg
adc
jb
add
xor
fsubrl
sub
loope
sub
mov
jbe
lahf
negb
xor
pop
dec
jg
insb
hlt
sub
cltd
into
mov
pop
hlt
adc
jne
cmpsl
iret
aas
add
les
rcrb
xchg
xchg
mov
in
in
hlt
adc
cmpsl
ss
arpl
xchg
cltd
jg
jne
hlt
add
jecxz
test
pushf
stos
hlt
mov
push
filds
and
fldcw
movsb
xor
and
mov
inc
fbld
shll
outsb
mov
mov
lcall
cmc
adc
hlt
mov
jno
inc
cmp
cltd
xor
cld
pop
cmc
mov
pop
hlt
loope
jmp
dec
push
out
cmp
cmp
cld
xlat
fmull
mov
push
cli
mov
mov
pop
int
cld
dec
add
insl
out
sbbb
cwtl
cmp
pop
sub
mov
xor
dec
negl
decb
inc
or
pop
fs
sarl
mov
adcb
dec
xchg
jae
pop
jp
aas
mov
jge
sub
orb
into
stos
scas
packssdw
ja
ljmp
aad
jmp
xor
push
or
lods
push
add
imul
addr16
hlt
repz
aas
mov
inc
mov
sub
or
sub
scas
lds
popa
xchg
fidivs
hlt
lods
sub
pusha
cli
sbb
cmp
xchg
push
xchg
hlt
icebp
sub
sbb
add
add
inc
pop
mov
pushf
es
lret
fisttpll
roll
aam
jae
pop
test
nop
int3
hlt
insb
inc
loop
leave
dec
inc
mov
pop
hlt
cmpsb
push
rclb
scas
ret
dec
subl
imul
ja
mov
outsl
cmp
xlat
out
icebp
call
addr16
mov
and
hlt
daa
inc
pop
std
jne
add
pop
jae
fdiv
enter
jp
or
mov
cmpb
push
popf
ja
ss
inc
add
hlt
jg
pop
xor
dec
outsl
xorb
mov
roll
aas
xor
hlt
fistps
hlt
dec
repz
xorb
test
cli
movsl
bswap
aad
loope
out
ja
mov
dec
hlt
dec
pop
pop
adc
pop
hlt
jbe
and
in
cltd
mov
xor
dec
add
mov
adc
mov
cmp
mov
imul
loope
add
mov
pop
and
push
test
jmp
xchg
insb
adc
loop
push
cmp
pop
inc
mov
pop
pop
xor
adc
mov
rclb
cmp
out
test
int3
mov
xor
test
cld
mov
or
rorl
hlt
jge
call
lahf
std
leave
sahf
sbb
xor
and
mov
bnd
sub
imulb
pop
pop
add
test
mov
jl
jnp
ja
push
int3
mov
sti
xchg
or
shll
int
nop
jle
sbb
call
mov
daa
mov
hlt
xor
scas
orl
insl
add
jb
mov
ret
dec
jp
sub
mov
or
fsts
lret
cmp
xor
xchg
jne
into
mov
adc
hlt
jb
es
lret
hlt
jmp
int
sbb
sbbb
in
negb
lcall
push
test
dec
jo
push
lret
lcall
jno
lahf
loope
insl
dec
xor
xchg
scas
dec
hlt
sub
lret
shlb
jp
pop
mov
dec
hlt
add
or
hlt
xchg
popf
sbb
iret
shll
pushf
pop
hlt
mov
movsl
inc
stos
xchg
das
jae
cltd
loopne
mov
lret
push
and
shl
in
jmp
or
xor
and
in
lds
add
out
xlat
test
hlt
rolb
fwait
imul
mov
fisubs
push
push
mov
cld
jmp
mov
into
jb
in
repz
mov
and
mov
out
stos
and
subb
dec
jae
pop
xor
scas
jne
cmpsl
sbb
call
or
jle
add
cmpsb
aam
push
arpl
push
ds
shlb
movsl
std
mov
fs
pop
hlt
popl
loop
push
push
sub
sub
sbb
clc
jl
call
ficompl
hlt
and
add
in
add
jg
and
mov
ljmp
add
cwtl
lods
mov
addr16
fs
push
add
jne
out
mov
add
aad
cmp
mov
mov
clc
xor
add
test
hlt
cmpsb
je
dec
or
pop
push
hlt
add
adc
adc
hlt
cwtl
xchg
mov
movsb
cli
fisubl
rcr
jns
test
hlt
mov
jae
cmp
lcall
pop
arpl
divb
std
into
mov
cmpsb
mov
adc
leave
hlt
add
das
push
aas
movsb
sarb
hlt
push
popa
daa
jno
mov
jmp
or
sub
fisubl
cs
mov
jmp
xor
xor
push
jg
andb
push
or
sbb
in
cld
and
sbb
push
test
je
clc
or
mul
negl
fs
add
jmp
pop
imul
lea
imulb
xchg
push
sbb
dec
leave
insb
sub
adc
inc
pusha
push
hlt
adc
jp
das
je
lods
pop
xchg
hlt
movsl
xlat
lret
sbb
cwtl
inc
test
push
out
pop
or
hlt
xor
dec
mov
out
ds
iret
xor
jae
add
mov
sbb
inc
aam
mov
jns
lods
adc
jp
imul
add
inc
fs
cmc
movsb
mov
hlt
cltd
push
data16
popf
push
hlt
xor
in
or
dec
aam
cli
hlt
ja
icebp
outsl
cmc
push
insl
sbb
xor
test
mov
jle
xorl
dec
inc
cmp
fcmove
mov
jbe
leave
mov
pop
hlt
mov
out
pxor
mov
test
loopne
repnz
hlt
mov
in
cli
jmp
scas
sbb
cmpsb
imul
inc
xor
sub
or
push
mov
push
push
fmuls
xchg
cmpsb
lds
sbb
hlt
xor
push
add
int3
hlt
dec
lods
in
sbb
adc
push
shl
cmp
push
bound
cmp
imul
pop
jle
scas
dec
sbb
mov
cmpsl
daa
popa
gs
inc
rcll
in
jmp
xchg
xchg
fisttpl
decb
hlt
dec
cld
push
movsl
hlt
sub
dec
or
hlt
or
inc
xchg
jae
lock
lret
jno
ror
hlt
jg
loope
jl
mov
push
hlt
outsb
in
jbe
pushf
into
jne
jb,pn
stos
jp
and
movsl
mov
xor
jmp
das
pop
in
popa
test
dec
and
mov
hlt
repnz
out
xor
nop
cmpsl
hlt
adc
int
ss
push
mov
loopne
hlt
cli
sub
mov
mov
pusha
in
push
xchg
cmp
roll
test
rorb
mov
pop
pop
sub
mov
movsl
mov
lret
pop
hlt
add
mov
hlt
jb
aad
cmovns
inc
hlt
js
mov
adc
push
or
mov
push
jbe
test
lcall
rorl
push
add
popa
hlt
ds
and
fbld
lds
ret
or
ret
push
adc
imul
lcall
int
stc
out
pop
test
cmc
js
outsb
testb
into
push
hlt
ret
imul
or
adc
data16
hlt
sbb
xor
shrb
jl
xchg
mov
mov
loop
test
sti
xchg
aas
push
xor
jmp
imul
jae
imul
fdivs
hlt
cmp
insl
or
aas
std
pusha
fs
js
ss
sub
pop
pop
stos
mov
jge
arpl
mov
cmp
xor
lcall
cmpsb
fwait
mov
loopne
adc
xlat
shl
outsl
mov
cmp
imul
mov
aaa
mov
mov
rcrb
imul
mov
xchg
or
push
jnp
mov
dec
hlt
lret
xor
xor
std
inc
leave
loop
aam
icebp
hlt
adc
or
stos
lret
pushf
lock
dec
xchg
in
dec
mov
in
jmp
cwtl
sti
jnp
hlt
fucomip
bound
int3
stc
sbb
jb
aad
cmp
hlt
sbbb
hlt
adc
jnp
out
cltd
fsubl
push
shlb
stos
divl
or
movsb
std
mov
lock
testb
arpl
push
cmpsb
stc
imul
xor
fimuls
mov
hlt
lret
addr16
push
bound
loop
hlt
cmp
mov
pop
xchg
test
ds
outsl
jbe
ret
cmp
inc
hlt
dec
fmul
aas
sub
push
jl
cwtl
mov
shlb
mov
or
adc
aas
aas
sarb
lcall
inc
insl
negb
das
push
mov
psadbw
notl
pop
stos
aas
sub
mov
xor
insl
outsb
adc
xor
in
cmpsl
sbb
test
test
inc
cmp
stc
fldenv
cmp
roll
cmp
lcall
jb
or
sub
adc
mov
xchg
js
es
movsb
hlt
xor
inc
loopne
leave
loope
pop
pop
pop
cmp
hlt
push
outsl
pop
push
mov
hlt
adc
and
pop
push
shlb
xchg
dec
dec
mov
testb
fwait
imul
mov
xchg
inc
div
imul
cld
insl
push
hlt
clc
out
adc
pushf
movsb
jge
hlt
sub
mov
hlt
sub
js
sbb
sub
cmpsb
jo
cmc
pusha
mov
or
jnp
xchg
xor
sub
repnz
xor
dec
stos
xchg
imul
and
hlt
out
fs
aam
inc
or
lret
cmp
mov
push
mov
xor
sbb
imul
std
ret
cmp
mov
pop
adc
movsl
in
cmc
pop
jo
jno
add
mov
popf
push
cmp
push
mov
arpl
xor
inc
bound
mov
mov
sub
mov
gs
hlt
loop
add
hlt
adc
aas
fldt
aas
or
cltd
jne
out
test
push
cli
hlt
js
and
push
jae
jg
ds
jmp
in
push
sub
mov
js
push
imul
sub
inc
fs
sahf
pop
or
in
mov
ret
mov
push
movl
add
xchg
sub
outsl
add
loope
adc
data16
hlt
jb
insl
rorl
jmp
xchg
sbb
hlt
aad
cmpsb
rcl
aas
ja
inc
jbe
jle
cmp
and
imull
dec
add
mov
dec
mov
call
hlt
fwait
and
sahf
add
lea
pop
sbbb
xor
into
sbb
sbb
fmuls
cli
mov
xor
ds
hlt
leave
mov
mov
test
push
sub
dec
xlat
popf
dec
insl
push
pop
jmp
dec
lcall
cmpsb
pop
jecxz
jge
popf
jecxz
push
xor
pop
adc
jl
inc
inc
adc
jae
test
jo
in
push
push
out
sbb
jge
jge
mov
loop
hlt
ret
sub
xchg
xor
shl
pop
movsb
sub
hlt
mov
mov
adc
xor
dec
mov
mov
cmpsl
repnz
xor
inc
mov
xchg
cmc
lds
lods
and
add
and
roll
lret
and
adc
and
hlt
jb
jle
jp
mov
xchg
xchg
mov
mov
out
lcall
hlt
xor
mov
hlt
shl
cmc
lods
je
sub
or
lahf
in
mov
pop
jle
imul
dec
adc
aam
je
mov
hlt
xchg
sbb
fimull
adc
test
imul
sbb
ja
hlt
ljmp
push
xchg
sub
xor
or
pop
addr16
roll
mov
rorb
addr16
xchg
testl
jae
mov
ljmp
and
fbstp
mov
and
sbb
xchg
arpl
xchg
sbb
push
sub
ljmp
push
out
or
lret
cltd
push
loopne
icebp
insl
sbb
sbb
movsl
pop
hlt
xlat
out
in
jge
pop
hlt
and
nop
jb
iret
mov
and
imul
xor
mov
daa
inc
mov
testl
pmuludq
fs
mov
les
and
inc
mov
add
add
and
negb
ja
pop
add
lret
jmp
xchg
hlt
stos
clc
mov
imul
jnp
sbb
mov
out
scas
in
mov
inc
xchg
inc
aam
into
setne
push
and
and
imul
lock
sub
mov
add
ja
mov
pop
xchg
adc
loopne
sarb
hlt
in
aad
stos
and
mov
ret
mov
hlt
test
popf
rcll
nop
fidivrs
adc
fimull
fdiv
jb
push
add
cmp
lods
in
daa
hlt
push
ret
inc
test
in
sub
jecxz
push
repnz
pushf
jns
cmp
dec
jb
rcl
hlt
in
in
push
into
fldpi
js
testb
cli
or
cmc
adc
pop
cmp
and
mov
int3
push
arpl
out
push
clc
bswap
fstl
sahf
mov
cmc
mov
hlt
jge
prefetch
mov
or
xchg
lcall
rolb
xor
cmc
sub
jno
sbb
insb
cmp
fs
add
fdivl
testb
mov
rcl
mov
hlt
xor
cmpsl
lods
ss
xor
hlt
mov
pop
sub
cmc
in
lret
jmp
xchg
cs
xchg
ja
jl
nop
mov
enter
sub
test
cltd
mov
imull
jecxz
hlt
pop
cmp
into
add
hlt
xchg
mov
jmp
jb
push
hlt
sbb
ret
scas
ja
hlt
dec
adc
icebp
pop
push
cs
dec
fcoml
ds
hlt
iret
test
lret
aad
idiv
dec
andb
or
add
loope
push
scas
out
iret
hlt
jp
mov
jne
push
les
xchg
xlat
je
hlt
int3
imull
out
pop
mov
int3
paddsb
adc
scas
cmc
inc
sbb
cwtl
adc
sbb
mov
mov
xor
gs
pop
inc
cmp
pop
or
and
lcall
push
fsubrs
hlt
repnz
dec
sub
and
dec
cltd
test
add
jecxz
inc
jno
hlt
mov
imulb
pop
hlt
call
or
out
mov
xchg
testb
rclb
adc
xor
rol
insb
neg
outsb
icebp
lahf
sub
dec
mul
jne
cld
hlt
jbe
mov
xor
inc
hlt
push
fs
cs
xor
pop
or
hlt
sub
bound
and
hlt
leave
aam
mov
test
add
xor
addr16
testb
mov
dec
psrad
out
adc
mov
xor
xchg
sahf
mov
mov
lret
hlt
sbb
and
aad
hlt
sub
adc
imul
ficompl
cmp
js
hlt
and
rcll
hlt
daa
xchg
ret
add
repnz
hlt
mov
test
hlt
jmp
inc
mov
inc
lock
hlt
lods
call
insb
jns
mov
nop
dec
addr16
test
hlt
fbld
adc
sahf
xor
pop
sti
sar
fxtract
adcl
addb
lahf
hlt
loope
clc
popa
mov
test
jnp
aaa
movsl
or
mov
pop
rclb
or
cmp
mov
shl
push
adc
inc
adc
push
jle
dec
cwtl
nop
pop
loope
or
std
mov
xchg
dec
xor
push
iret
jae
lods
hlt
mov
xchg
andl
xchg
mov
stos
sbb
dec
push
repnz
hlt
mov
sahf
push
cwtl
int
aas
idivb
add
int3
jmp
mov
sbb
mov
ja
rcll
popf
divb
test
shlb
div
jp
dec
jb
jecxz,pn
call
hlt
jl
push
test
lret
int
jp
dec
and
fnstenv
pushf
popf
fbstp
adc
add
mov
hlt
leave
pop
in
mov
push
xchg
and
jae
ficoml
outsb
in
lcall
hlt
jl
scas
pop
aam
fsubl
fnsave
pop
xchg
loop
icebp
leave
jl
dec
cmc
pop
movsl
push
inc
stc
std
jg
cs
and
dec
mov
aas
hlt
or
shl
and
clc
ret
cmc
je
add
jbe
mov
arpl
icebp
cmp
cmp
cld
fs
jl
sarl
push
inc
or
gs
negl
pop
fmul
sbb
push
mov
mov
repnz
xor
ds
mov
clc
mov
popf
movsl
hlt
aaa
mov
dec
int3
jg
pop
shl
lock
or
jae
jp
aam
jmp
sub
rcrb
dec
cmp
mov
pusha
add
sar
jno
cmpsl
cmc
add
pop
ss
add
xchg
adc
fistps
and
adc
in
imul
sub
push
shrl
cmp
inc
pop
movsl
xor
int3
jecxz
adc
imul
shl
ja
cmpsb
std
hlt
and
shlb
int
push
xor
icebp
pop
or
dec
arpl
mov
add
insb
gs
hlt
repz
xor
hlt
and
mov
cmp
mov
xchg
mov
hlt
dec
sub
push
popa
push
push
pop
hlt
inc
jp
fs
and
xchg
incb
sbb
loopne
pusha
jle
jno
sbb
lods
clc
stos
sub
push
lcall
dec
push
and
pop
xor
adc
gs
aas
dec
not
cmp
out
mov
int
jnp
mov
mov
fcmove
cld
mov
push
test
pushf
dec
pop
scas
xchg
lods
and
fs
insl
dec
mov
pop
and
movsl
pop
sbb
cltd
hlt
in
jae
bound
push
mov
inc
cli
mov
stc
cmc
mov
xor
mov
out
hlt
jg
add
shl
hlt
mov
add
mov
cmp
xor
test
dec
daa
mov
aas
sbb
inc
shlb
dec
cmp
hlt
data16
int3
imul
cmp
jle
hlt
lret
test
or
lahf
push
push
dec
cs
mov
pop
ret
cmp
push
retw
mov
xchg
or
sti
hlt
mov
out
dec
hlt
jge
cwtl
jne
adc
ds
cmpsb
fnstcw
hlt
scas
lods
lret
xor
hlt
out
orl
dec
ja
lret
push
test
jge
aam
sub
jno
push
mull
icebp
mov
jb
inc
mov
hlt
cmp
es
into
and
loope
fwait
lods
or
or
std
pop
scas
add
xlat
mov
dec
in
cmp
mov
lods
hlt
push
jecxz
aas
out
xor
in
clc
sahf
push
sti
cmc
ficomps
and
dec
mov
call
je
cmp
lret
and
insl
adc
or
jp
cwtl
sbb
fs
jne
leave
mov
dec
inc
xchg
mov
test
shl
jp
mov
push
inc
pop
jbe
pop
test
aam
mov
mov
mov
lahf
mov
mov
sub
imul
iret
or
cltd
hlt
or
push
loopne
add
hlt
dec
and
adc
shrl
loopne
shlb
xchg
idiv
outsb
mov
mov
icebp
cltd
int
cli
stos
andl
jae
in
xchg
adc
rclb
and
xchg
hlt
mov
pop
fcmovnbe
in
add
mov
pop
inc
testb
cli
dec
adc
or
hlt
movsb
push
xchg
sahf
mov
jp
xchg
mov
add
cmp
mov
add
addr16
add
and
ljmp
sub
and
out
jmp
std
scas
hlt
dec
jns
in
pop
mov
jae
pusha
arpl
xor
sbb
jb
xor
adc
mov
mov
outsl
ja
push
ja
and
xlat
data16
add
orb
in
dec
sahf
lods
ret
fs
lret
hlt
shl
add
push
jno
jnp
sub
movsb
or
popf
ret
jg
add
fmull
mov
push
xchg
shrb
inc
pop
pop
adc
or
inc
and
cmp
aam
push
bound
hlt
inc
pop
xor
ss
test
inc
add
into
and
aam
sub
rcr
inc
hlt
pop
cmp
inc
int
pop
lods
jle
lds
dec
dec
hlt
mov
fisttpll
pop
test
hlt
inc
mov
adc
iret
rol
inc
inc
sbb
adc
or
mov
rol
inc
sub
jb
or
insb
bound
cmc
or
sbb
lret
inc
adcb
jmp
or
jp
daa
mov
jnp
hlt
mov
les
mov
leave
xchg
imulb
jo
cwtl
hlt
cs
mov
xchg
int
pop
mov
imul
mov
lret
mov
add
lock
xor
push
pop
clc
mov
mov
std
dec
out
mov
xor
loopne
add
push
mov
dec
or
xchg
xchg
hlt
fsub
insl
lock
mov
and
jge
mov
push
pminub
mov
loop
cli
sub
hlt
or
lret
mov
sbb
push
bound
aaa
psrad
hlt
movsl
shrl
hlt
mov
in
test
xor
mov
fadds
testb
jge
js
or
add
adcl
in
ret
cli
in
fwait
fwait
loope
rorl
push
daa
loopne
es
mov
out
pop
movb
mov
out
jge
sti
aas
mov
push
orl
cmp
stc
cmpsb
sub
add
roll
cmp
push
outsb
pop
hlt
adc
popa
test
cltd
sahf
jb
sarb
call
push
jno
mov
insl
jp
notl
hlt
dec
ja
shr
call
fistpll
ds
jb
fs
fidivrl
lret
pop
mov
jae
push
pushf
jns
cmpsb
hlt
stos
subl
imul
cltd
repnz
adc
cmp
push
xchg
xchg
mov
sbb
test
mov
into
out
xor
inc
lds
inc
iret
cs
lods
adc
addr16
jg
rcll
push
mov
popa
sub
shlb
add
or
stos
jge
js
xchg
cmp
lret
dec
inc
jb
xor
jg
popf
jnp
push
jno
cmp
jmp
aas
pop
cmp
xchg
pop
imul
fbstp
ja
test
or
je
add
test
adc
hlt
movl
arpl
pushf
cli
push
nop
jg
jb
in
xor
mov
testb
jl
aam
mov
fimuls
std
ja
xchg
xor
loop
into
xor
hlt
roll
sbbl
hlt
xchg
xor
hlt
mov
sub
hlt
cwtl
mov
clc
out
fs
loope
lock
sub
dec
xchg
sub
imul
repnz
idiv
pop
push
pushf
in
mov
cmp
inc
adc
nop
and
and
stos
push
rol
hlt
sub
inc
shl
dec
jo
or
cmp
push
mov
mov
adc
sub
push
fadd
fwait
mov
mov
jno
xchg
mov
roll
add
imul
ljmp
hlt
stos
mov
or
push
jp
xchg
out
or
hlt
cli
mov
es
jo
mov
mov
inc
xchg
inc
inc
ljmp
jno
loopne
cmp
aad
jae
mov
clc
or
test
dec
aaa
loopne
xchg
mov
test
xor
add
leave
outsb
cmpsb
ffreep
sbb
push
aam
mov
adc
adc
mov
adc
test
hlt
popl
sti
inc
fsubp
fwait
hlt
adc
dec
leave
cmpsl
cmp
lret
mov
mov
jge
pop
push
shlb
xchg
jmp
inc
xchg
notb
sub
push
mov
ret
pop
pop
arpl
and
loopne
les
xor
in
xchg
hlt
pop
xchg
not
cwtl
int3
mov
ljmp
xor
dec
hlt
inc
push
inc
dec
xchg
inc
movb
push
dec
out
jl
xor
notl
mov
jbe
mov
int3
jnp
dec
add
xorb
push
out
push
cmpsl
mov
hlt
imul
lock
fildll
hlt
xchg
je
lds
mov
xchg
mov
push
pop
out
jne
jne
mov
shrl
xchg
mov
movsb
mov
sub
sbb
loope
pusha
sub
hlt
add
cmp
out
dec
repz
jl
hlt
xor
jnp
loope
mov
pop
adc
outsb
dec
js
in
divl
sahf
cli
xorl
pusha
mov
and
hlt
iret
or
mov
int
mov
loop
jecxz
sub
sbb
imul
cwtl
fidivl
mov
outsl
adc
inc
out
dec
or
sub
fsubrl
mov
mov
das
loopne
hlt
fmuls
jp
hlt
cltd
mov
outsb
scas
es
andb
jae
mov
das
sbb
inc
hlt
ret
and
pop
adc
mov
mov
mov
hlt
pop
jo
mov
sbb
pushf
test
or
repnz
daa
lea
push
hlt
xor
adc
hlt
lret
pop
and
push
xchg
cmc
cmpsb
out
gs
enter
mov
inc
xor
inc
es
cmp
inc
jae
add
mov
inc
imul
jne
movsb
cli
lods
pop
mov
in
addr16
jbe
icebp
xor
mov
das
fisttpll
xor
xchg
insb
addr16
int3
or
push
hlt
xchg
fldcw
fistpl
test
sbb
mov
adc
sub
inc
xor
fnstenv
out
mov
xchg
loopne
imul
je
pop
or
push
adc
addr16
add
inc
ds
ljmp
push
aad
or
push
shlb
movsl
out
hlt
out
mov
daa
hlt
cltd
lods
dec
aas
jecxz
cli
dec
hlt
fdivl
mov
insb
jle
xor
inc
loop
sbb
or
stos
imulb
hlt
cli
mov
movsl
jp
scas
xchg
mov
rcl
and
hlt
popf
movsl
xor
and
insl
in
inc
lock
xchg
call
clc
aam
movsb
add
lret
xlat
push
pop
inc
aam
stos
sarl
jne
mov
mov
xlat
aas
pop
hlt
lods
add
shr
adc
sbb
movsb
dec
inc
sti
xor
and
ss
jo
mov
jbe
les
hlt
pop
lock
sbb
ret
mov
notb
call
loopne
push
test
hlt
fcoms
inc
filds
call
xor
je
xlat
scas
and
add
jp
mov
aas
push
and
sbb
es
lods
aad
sahf
jns
jae
add
dec
lea
nop
mov
je
stc
cld
jle
loopne
mov
push
hlt
xchg
lahf
popa
aas
or
adc
fsubs
hlt
fwait
orb
out
clc
out
hlt
sub
in
cmp
dec
lcall
inc
cld
repnz
orps
ja
into
daa
dec
sbb
mov
pop
sbb
cmp
jge
lret
test
or
aas
in
xchg
faddl
jne
push
roll
pop
xchg
hlt
int
out
int3
cmp
movsl
sbb
adc
cmc
adc
hlt
push
js
lret
cmpsl
mov
cs
nop
gs
xchg
in
jg
out
add
pop
into
dec
push
hlt
mov
std
adc
lret
clc
imul
add
add
mov
sbb
in
push
jnp
inc
hlt
ret
scas
add
dec
fadd
xchg
hlt
nop
cmp
inc
hlt
cmc
jmp
bound
hlt
jp
mov
mov
inc
push
jp
je
or
mov
jns
test
outsb
aas
repz
into
fucomp
jp
fwait
pmuludq
mov
sahf
hlt
and
fs
jl
sti
or
in
hlt
jb
jo
sbb
mov
repz
and
mov
add
hlt
ret
pop
mov
cmp
push
stos
rcl
sub
out
in
imul
cmp
adc
mov
dec
pop
mulb
inc
fsubl
negb
dec
or
xchg
add
push
rcll
inc
stos
cwtl
test
lds
hlt
adc
out
push
dec
clc
mov
xchg
sbb
xor
mov
dec
mov
insl
cmpsl
es
int
xchg
mov
sbb
pop
lock
cmc
stos
es
xor
pop
mov
aaa
pop
cltd
hlt
or
xchg
cld
jecxz
pop
xor
addr16
call
cltd
jmp
shl
lret
inc
jo
or
pop
mov
dec
divl
cmp
ss
aas
lret
pop
in
mov
js
inc
hlt
jge
fsubrl
and
dec
adc
xchg
shlb
icebp
jecxz
xor
div
ljmp
mov
fs
dec
incl
mov
pop
or
and
outsb
std
aad
rdpmc
jecxz
test
nop
cld
push
cltd
in
adc
sub
add
out
mov
mov
imul
cmp
jle
aas
imul
pop
mov
ret
pusha
mov
and
mov
jb
and
hlt
cmpsl
push
jp
loope
dec
imul
mov
ja
popf
test
mov
lods
mov
outsl
xor
inc
adc
adc
fsubrs
mov
es
inc
popf
cld
xchg
je
hlt
inc
xor
xor
push
jne
test
inc
add
inc
mov
xchg
out
pop
mov
hlt
repz
stc
mov
or
or
hlt
dec
jnp
dec
cmp
fs
pop
push
lods
fiaddl
add
ret
mov
movsb
push
push
addb
sahf
or
and
mov
or
xor
cli
insl
hlt
pop
fwait
rorb
das
leave
outsl
out
or
sti
daa
add
addr16
cmp
push
push
dec
sbb
xchg
pop
out
into
mov
mov
scas
sub
adc
and
mov
daa
adc
fistps
and
aas
xchg
sub
jge
stc
test
std
or
dec
mov
je
jle
xchg
adc
inc
xchg
addr16
xchg
in
mov
js
loope
jno
rorb
xchg
inc
test
pushf
jg
mov
fcoml
hlt
dec
and
das
push
hlt
repnz
pop
xor
mov
lods
mov
fmul
mov
jle
js
mov
inc
jae
mov
out
scas
out
repnz
clc
mov
dec
jbe
mov
mul
jle
and
arpl
jnp
icebp
sahf
push
hlt
inc
loop
xchg
loope
repz
xchg
hlt
dec
inc
rorb
mov
lahf
roll
pop
mov
hlt
cmp
lcall
sub
sarb
js
mov
rcr
imul
jo
push
pop
orb
mov
fbld
leave
hlt
mov
outsb
jns
mov
cmp
cmp
in
sub
and
ja
inc
fstp
or
aam
ss
outsb
loope
jge
lods
cwtl
hlt
xor
mov
addb
xchg
mov
negb
lahf
lds
mov
hlt
ret
push
shrl
hlt
ja
mov
hlt
mov
in
push
jno
bound
inc
icebp
sbb
je
mov
loop
inc
insl
xor
jo
ret
or
lahf
test
mov
mov
jb
hlt
ret
lcall
stos
idivb
aad
data16
xchg
xchg
in
in
nop
hlt
dec
int3
ror
sti
lret
test
and
je
dec
mov
push
jne
sub
hlt
dec
push
loopne
in
add
bnd
sub
push
dec
hlt
lret
xor
sbb
push
sbb
sahf
fisttpl
and
sbb
cmpsl
hlt
push
xor
cmp
mov
sub
fs
fwait
or
loop
das
stos
cmp
push
mov
xor
add
leave
inc
imul
out
test
hlt
mov
loop
xchg
xor
lods
sahf
push
out
mov
ss
hlt
dec
jle
lret
loopne
sarb
test
imul
mov
mov
jmp
popa
cmp
hlt
cmpsl
outsb
mov
hlt
out
and
xchg
hlt
push
aas
psubd
fsts
ret
push
jbe
xchg
pop
xorl
arpl
inc
ljmp
sub
cmpsl
test
push
hlt
in
ds
in
je
ret
mov
hlt
movsl
jle
add
dec
xchg
cmp
icebp
sbb
sbb
inc
sbb
mov
out
in
sti
dec
bound
add
rol
xor
inc
jae
scas
push
push
push
mov
roll
rcrl
sbb
shlb
xchg
add
mov
pop
mov
insb
mov
loopne
stos
jae
cmp
fucomp
hlt
dec
inc
or
lods
mov
sbb
out
dec
mov
add
mov
test
jp
js
xchg
push
in
cmp
lret
xor
push
call
push
cld
or
sar
test
pop
jmp
sbb
div
push
sub
insl
pop
scas
loopne
xchg
mulb
sarl
stos
test
mov
add
inc
das
outsl
movsb
cmpsb
scas
movsb
and
inc
shll
in
lret
cwtl
add
or
hlt
xchg
pop
jp
cmp
and
cmp
xor
jbe
in
or
js
push
jbe
adc
mov
sti
out
or
sub
cltd
imul
shl
push
jmp
sub
hlt
fists
mov
xchg
push
cmc
mov
pop
movq
lods
repz
jo
mov
lahf
and
dec
xlat
cmp
jne
add
aas
adc
add
sbb
or
fs
xor
jmp
sub
sbb
imul
jno
mov
lods
mov
xor
jo
rcr
dec
jg
jg
or
hlt
lret
scas
add
popa
sbb
pop
cmp
loopne
cmp
sub
mov
mov
jg
call
dec
mull
hlt
mov
xchg
std
hlt
mov
mov
push
int3
cmp
push
pop
stos
and
jg
out
xchg
notl
inc
scas
testl
imul
leave
mov
cmp
hlt
icebp
frstor
sub
out
adc
test
movsb
pop
hlt
mov
push
cmp
nop
mov
jb
adc
add
hlt
out
mov
mov
icebp
adc
hlt
clc
leave
xchg
cmpsb
pop
jp
push
xor
hlt
aam
addr16
push
pop
add
push
push
pop
aaa
test
testb
cmpsb
adc
sub
cs
hlt
jge
jmp
es
add
mov
xor
inc
out
rolb
scas
int3
shll
adc
pop
cmp
and
mov
hlt
repnz
jge
push
xchg
aad
scas
or
sti
push
adc
hlt
pop
pop
or
push
jle
addr16
or
jg
jecxz
sbb
xchg
dec
sub
xchg
dec
sbb
hlt
inc
cmc
inc
divl
lret
cmpsl
hlt
mov
sbb
lret
hlt
sarl
hlt
stos
inc
loopne
jae
std
cli
hlt
or
ficomps
jl
cltd
hlt
shll
mov
cmp
xor
test
mov
push
rcl
and
hlt
xor
popa
cwtl
or
call
sub
clc
fwait
jns
adc
sub
mov
hlt
pop
leave
cmp
lret
jo
xchg
mov
sub
dec
jg
xchg
dec
push
xchg
push
jae
imull
popa
hlt
xor
cld
cmpsl
in
sbb
push
shrb
sub
dec
movsb
hlt
repz
hlt
psubusw
xchg
fs
mov
xor
mov
sti
stos
hlt
cwtl
data16
push
lcall
aas
dec
pop
je
stos
mov
mov
js
fisubl
pop
rcrb
mov
mov
hlt
stos
aaa
push
js
or
add
push
mov
data16
dec
in
scas
jb
xchg
negb
sub
or
hlt
jle
lods
std
cwtl
js
or
sarl
mov
repz
hlt
insb
jp
pop
imul
sub
jp
nop
lods
scas
jae
inc
jle
mov
add
pop
push
mov
push
and
hlt
das
and
sbbl
test
jmp
mov
testl
hlt
lock
cmp
cltd
jmp
add
and
in
sti
repnz
mov
inc
mov
icebp
hlt
sub
pusha
out
addr16
in
hlt
ret
mov
hlt
andl
out
fsubl
jge
insl
scas
xchg
roll
hlt
repnz
xor
mov
aad
outsl
adc
sahf
xchg
add
and
jmp
mov
sbb
hlt
xchg
mov
test
iret
adc
loopne
adc
test
fists
mov
int3
arpl
mov
or
push
mul
cs
mov
hlt
jecxz
fsubl
xchg
int
cmpsb
test
idivl
lds
adc
sub
ret
jnp
jecxz
and
ss
inc
xchg
hlt
push
mov
scas
pop
rol
and
sub
hlt
hlt
xchg
subl
aad
mov
hlt
push
sbbb
iret
psrlq
ret
or
sub
je
and
out
jns
js
sub
jmp
and
hlt
out
enter
insl
lods
test
dec
xchg
aas
lds
inc
and
arpl
cltd
cmp
xlat
push
repnz
fstp
and
dec
jbe
pop
dec
mov
imul
lods
cmp
imul
imul
imul
cwtl
jl
scas
push
or
push
dec
jge
div
push
repz
js
cld
push
xchg
stc
xor
sbb
hlt
xlat
mov
repz
dec
cltd
mov
sub
or
imul
shll
ljmp
mov
jae
aas
jmp
mulb
repnz
cmp
loopne
pop
dec
dec
cltd
jnp
incl
push
lds
hlt
jno
add
pop
cltd
mov
mov
hlt
in
scas
push
sar
or
adc
mov
xchg
cmp
cmc
xchg
jmp
sbb
adc
into
mov
cld
sbb
jl
out
jge
aas
mov
pop
mov
gs
in
hlt
lahf
stc
nop
adc
and
pop
cwtl
mov
sbb
push
and
jae
popf
xchg
inc
inc
jmp
cmpsl
cmc
inc
fwait
in
hlt
fcmovu
push
hlt
rcr
arpl
aam
sbb
jne
fdivl
test
add
aas
daa
jg
js
test
adc
or
movsl
adc
jge
and
pop
lock
imul
addr16
hlt
aas
fdiv
sub
hlt
lods
push
or
push
mov
out
or
xchg
sbb
loop
push
and
dec
iret
jmp
hlt
fisubrs
sbb
shl
adc
mov
addr16
xor
rcll
and
and
nop
hlt
push
or
scas
jl
lahf
pop
pcmpgtb
insb
cs
test
shrb
movsl
das
rorl
movzbl
test
fnsave
sahf
mov
ljmp
xchg
mov
ss
dec
cwtl
dec
ljmp
mov
push
mov
bnd
adc
and
out
mov
mov
xlat
into
pop
sbb
loope
pop
push
in
mov
dec
xor
pushf
sub
hlt
lea
das
push
mov
hlt
loopne
cld
dec
out
mov
test
outsb
mov
call
xchg
call
test
jbe
cmp
sub
stos
hlt
dec
cmp
fbstp
jmp
mov
addl
movsb
mov
xor
fidivrs
repz
idivb
aaa
push
and
jne
push
mov
jb
xor
mov
out
sbb
sbb
push
or
hlt
movsl
add
or
jbe
jns
jo
mov
adc
aam
cwtl
imul
out
inc
sub
fdivr
inc
or
rorl
mov
out
xchg
es
hlt
xchg
ss
lods
inc
mov
das
push
leave
jp
mov
push
mov
push
mov
add
add
jbe
mov
sub
outsb
std
les
iret
pusha
cs
inc
and
xchg
add
push
sub
hlt
xor
test
sbb
mov
in
imul
cld
cmc
stos
or
pmuludq
xor
mov
leave
andb
outsl
les
rclb
clc
lret
mov
testb
in
mov
cmp
in
int
and
inc
out
pop
aaa
or
lds
decb
mov
in
test
hlt
and
jne
push
add
or
sbb
shl
or
pusha
inc
mov
imul
in
hlt
push
and
xchg
mov
and
pushl
mov
shlb
jmp
hlt
pop
out
jg
cmp
sbb
push
xchg
shlb
push
lahf
jge
lods
and
pop
hlt
pop
icebp
lock
push
dec
xlat
scas
insl
sbb
lcall
pop
hlt
dec
lods
mov
pop
arpl
fistps
push
mov
add
jns
and
mov
outsb
cltd
div
addr16
inc
cld
pop
rcrl
mov
aad
movsb
push
push
pop
hlt
leave
mov
arpl
mov
call
inc
jns
pop
into
daa
jnp
mul
or
add
jp
sub
ds
pop
add
xor
pop
jmp
pop
push
mov
ret
push
and
sti
data16
aas
jmp
fnstenv
out
roll
sbb
shl
inc
or
movsl
int3
mov
aas
repnz
call
inc
fidivl
xor
xlat
bndldx
xchg
dec
imul
sub
dec
and
mov
invd
test
nop
loopne
cmc
mov
imul
inc
sahf
in
fwait
scas
mov
loop
xor
sub
xchg
test
decb
jg
pop
adc
or
xchg
adc
xchg
sbb
and
cmpb
pop
push
daa
hlt
repz
sarl
shlb
push
jge
add
loopne
fimuls
icebp
fimull
pop
cmp
testb
push
push
hlt
add
inc
inc
push
or
hlt
adc
ffree
dec
hlt
dec
xorl
hlt
fildl
add
fst
scas
fadds
cmc
mov
jge
das
hlt
push
push
dec
rorl
scas
insl
dec
aad
lods
negl
xchg
and
iret
hlt
aaa
pop
outsl
or
push
insl
gs
fldenv
or
test
hlt
or
dec
mov
mov
out
fisubrl
scas
mov
mov
xchg
andb
js
jno
shl
hlt
arpl
imul
das
cmp
pop
or
add
scas
rolb
jo
jnp
mov
pop
dec
push
test
or
in
and
mov
mov
ljmp
je
cmp
or
jno
ror
aam
lret
dec
adc
jmp
mov
hlt
mov
xor
int
test
loope
repnz
aas
les
xchg
pop
cmc
imul
shll
and
sub
dec
scas
fnstsw
idivl
ljmp
jne
xor
sbb
divb
dec
inc
aam
mov
pusha
ljmp
insl
sub
addr16
and
loop
cmpsl
inc
hlt
xor
in
dec
aas
iret
imul
insl
xchg
push
movsb
push
push
stos
dec
cmp
xor
ss
div
gs
mov
nop
pop
pop
aam
int3
hlt
or
clc
pop
mov
xchg
pop
sub
inc
cmpsb
lods
hlt
or
mov
jne
xchg
xchg
pusha
sti
mov
sub
hlt
jecxz
out
push
shll
xor
push
dec
ds
hlt
adcb
arpl
cmpsb
aaa
mov
je
loope
cs
inc
pop
push
xorb
push
hlt
and
iret
inc
ds
test
add
clc
ret
jo
movsb
mov
sub
push
jmp
call
sub
adc
push
cld
xlat
daa
pop
les
xchg
xchg
push
hlt
cs
in
outsl
mov
mov
pop
jns
and
fadds
jecxz
or
hlt
into
and
pop
add
je
fildl
aas
stos
ficoms
ja
lret
pop
or
nop
xor
arpl
stos
sbb
es
adc
insb
outsl
mov
sbb
push
adc
sub
inc
movsb
pop
imul
push
test
mov
lods
dec
dec
stos
push
not
and
hlt
pop
test
dec
push
sbb
popf
hlt
mov
sti
lret
xor
imul
hlt
sub
in
dec
xchg
hlt
pop
les
mov
std
push
jne
mov
lea
cmp
out
lods
jle
pop
sti
aas
mov
cmp
or
test
les
call
out
into
pop
ret
movb
nop
xor
pop
rol
mov
ljmp
rep
jg
pop
sub
push
xor
push
jge
inc
test
ret
inc
pop
dec
daa
xchg
sub
rolb
mov
inc
es
push
fwait
icebp
add
jle
inc
fcoms
jmp
xchg
lret
notb
insl
cmpl
mov
repnz
fld
in
cmp
mov
movsl
hlt
jb
inc
andl
out
cmp
pop
mov
mov
mov
xor
rorl
faddp
push
mov
ja
je
icebp
ds
hlt
push
in
test
mov
push
nop
rorl
push
jnp
pop
hlt
xor
add
lods
in
hlt
bnd
pop
or
jnp
imul
int
add
arpl
imul
je
hlt
cwtl
jle
xor
sbb
mov
aad
stc
loopne
scas
push
idiv
imul
in
or
or
or
rorl
das
fwait
lahf
fnstcw
or
out
repz
hlt
shll
and
js
or
mov
je
outsl
dec
sbb
push
mov
lea
int3
or
mov
dec
pusha
jns
cwtl
into
fmull
hlt
add
arpl
xchg
hlt
cmp
loopne
shrb
push
jge
inc
stos
jo
popa
jno
pop
adc
cmp
hlt
subb
roll
jo
adc
test
imul
pop
inc
je
lcall
sub
hlt
shl
sbb
xor
sbbl
movsb
pop
pop
sbb
addl
lret
repnz
outsb
mov
popf
xchg
xor
repz
dec
hlt
xlat
inc
ret
cmp
rorl
mov
fwait
xor
mov
and
jge
dec
push
hlt
or
les
dec
pop
test
push
outsl
xchg
and
shl
cli
and
hlt
sub
repz
iret
mov
out
jbe
lea
hlt
mov
aas
mov
hlt
lret
push
ljmp
test
inc
push
mov
mov
jns
sub
mov
hlt
movsb
dec
dec
icebp
mov
jb
sarl
loope
hlt
les
jnp
mov
adc
lock
aam
hlt
insb
jne
mov
stc
pop
hlt
lea
xchg
hlt
fs
data16
cmp
hlt
call
pop
movsb
mov
hlt
out
xchg
mov
test
jp
and
jg
nop
clc
hlt
lds
dec
mov
add
hlt
iret
out
int3
mov
ss
ds
js
shr
jo
fs
jbe
pushf
dec
hlt
adc
imul
pop
jp
xor
hlt
arpl
xchg
inc
mov
mov
and
ret
and
loope
xlat
rolb
sbb
hlt
dec
or
aas
jo,pn
scas
es
pop
pop
shl
scas
xor
dec
sarl
ret
dec
dec
xchg
hlt
stos
sub
cltd
cmp
repz
mov
dec
jae
or
cmc
gs
mov
jbe
jae
sbb
jmp
xchg
ja
push
aaa
andl
imul
xor
pushl
or
and
and
and
push
push
hlt
push
pushf
xchg
sbb
fdivl
mov
or
jg
push
dec
hlt
data16
in
jecxz
jae
xor
mov
lret
imul
pushf
xor
mov
dec
lret
bound
loop
movsb
and
movsl
notb
xor
sbb
stos
or
mov
cmp
jmp
outsb
xor
hlt
mov
push
cwtl
ret
hlt
addr16
es
fwait
hlt
mov
and
into
scas
hlt
iret
pop
cs
add
dec
pop
es
pop
mov
xor
fstp
push
int
stos
mov
hlt
sbb
mov
dec
or
mov
mov
xchg
push
or
inc
cmpsl
lret
hlt
jl
and
and
and
jle
lods
test
mov
pop
jb,pt
stos
dec
mov
dec
imul
push
cmpsl
out
stc
movhps
mov
mov
loopne
or
test
mov
jge
std
test
cld
xchg
sbb
sub
push
js
and
jmp
xor
dec
mov
jl
repnz
pop
dec
adc
mov
inc
adc
or
test
jno
mov
or
dec
cwtl
in
jnp
daa
xor
mov
jae
out
inc
dec
xor
cmp
mov
and
xchg
inc
or
dec
pop
adc
pushf
aas
mov
jbe
pusha
loopne
mov
js
dec
inc
xchg
ret
es
add
xor
cmp
test
adc
inc
hlt
sub
push
rcrb
dec
xor
sahf
js
or
sbb
mov
hlt
lret
movsl
clc
push
add
dec
orb
ret
arpl
shll
mov
push
pop
test
cwtl
in
add
or
aam
arpl
pusha
hlt
mov
pop
pop
cld
jle
cltd
or
test
sub
adc
mov
sbb
dec
push
xchg
aas
shl
xor
jne
mov
sub
or
pop
and
adc
dec
mov
loope
sbb
jg
push
xchg
out
hlt
scas
stos
dec
xchg
mov
pop
hlt
gs
orb
lods
out
pop
xchg
lds
std
jo
arpl
and
rorl
imul
sub
hlt
sub
fsubr
lret
dec
clc
or
icebp
dec
add
pop
and
sub
or
imul
add
lock
sbb
inc
xor
stos
xchg
adc
test
call
or
sub
pop
cld
dec
hlt
das
jmp
imul
aam
dec
lret
imul
xchg
hlt
cwtl
pop
clc
icebp
sbb
lret
rcll
into
hlt
cmp
inc
das
cs
pusha
test
xchg
sbb
xchg
xchg
adc
and
pop
dec
das
fcomi
leave
lret
push
hlt
cmp
in
jns
hlt
push
mov
aam
mov
xor
nop
ds
pop
pop
hlt
mov
mov
mov
dec
ret
lcall
sbb
mov
pop
add
add
je
shl
pop
and
dec
hlt
mov
fmull
or
insb
dec
or
mov
jmp
cmc
repz
leave
mov
sub
jmp
or
out
mov
and
lcall
xchg
xor
xor
rorb
hlt
sar
dec
cmp
push
jo
insl
dec
popa
mov
mov
shr
pop
push
push
push
lcall
pop
in
out
and
pop
or
sbbl
ja
xchg
sbb
cmp
adc
mul
jp
push
cmpsl
pop
jae
fcoml
lods
sub
dec
cltd
in
hlt
test
cmp
pushf
hlt
cmp
fst
aas
hlt
popf
addr16
scas
outsl
mov
movd
mov
or
out
aam
cmp
hlt
dec
inc
sub
shrl
sub
imul
lret
divb
xor
cmpsl
test
fcomip
pop
dec
or
mov
insb
popa
hlt
mov
fmuls
data16
pop
pushf
pusha
fisubrs
aas
jecxz
ret
dec
inc
xchg
mov
or
xchg
mov
movsb
cmc
jle
jp
negb
testb
jo
sbb
int
push
fdiv
mov
xor
xchg
xchg
mov
lock
and
jge
ret
mov
mov
xlat
or
mov
outsl
leave
cmp
push
sub
mov
hlt
popf
jl
pop
add
sub
adc
xchg
sahf
mov
lcall
jno
int3
fiaddl
sub
sarb
mov
cmpsb
push
push
insl
hlt
out
icebp
iret
mov
aas
push
lods
lcall
dec
hlt
mov
mov
test
js
mov
add
and
in
push
imul
mov
adc
mov
into
jae
hlt
imul
dec
inc
mov
fdivp
xor
sub
repz
hlt
pop
cmp
jg
out
dec
adc
jno
movsb
aaa
inc
test
pop
dec
aas
inc
mul
dec
iret
adc
aaa
lds
imul
cmp
cli
testb
and
or
mov
jl
loope
adc
mov
addr16
sub
mov
add
shl
and
dec
outsb
ljmp
sti
in
sbb
xor
adc
int
movsl
inc
mov
into
clc
dec
outsl
hlt
mov
imul
dec
subl
dec
sahf
lods
int
pop
shrl
mov
daa
insl
jge
lcall
lods
cmpsl
loopne
dec
mov
cmp
dec
fnstenv
hlt
aad
sti
mov
xchg
mov
xor
push
mov
add
and
sub
test
xchg
aas
test
push
mov
fisubl
cmpsl
jg
hlt
xlat
mov
adc
jnp
push
cmc
in
cmp
pop
mov
testb
mov
repz
in
lods
mov
lods
pop
adc
mov
mov
hlt
jmp
cwtl
popa
insb
repnz
hlt
and
fstp
sti
pop
push
inc
or
dec
popf
jecxz
testb
sbb
inc
push
xor
jmp
icebp
add
and
in
xor
stc
xchg
hlt
ret
xlat
insb
push
cwtl
js
movsb
push
mov
lods
hlt
imul
out
cmp
jle
mov
lock
mov
push
lret
sbb
ljmp
jo
pop
cld
mov
imul
mov
or
cmp
sti
ljmp
pusha
daa
popf
push
or
pop
lahf
or
adc
outsl
out
fwait
notb
and
mulb
loopne
mov
das
or
jbe
lods
outsl
loop
hlt
jns
add
pop
cmp
mov
add
sub
les
sbb
xchg
adc
std
push
sub
jbe
lods
hlt
adc
sbb
out
out
fwait
jb
dec
pop
mov
mov
hlt
adc
test
fwait
pop
cmpsl
hlt
sbb
std
in
insl
xchg
fsubrp
addr16
cmp
adc
xchg
cmp
sbb
adc
decl
pop
jp
xchg
add
fcomi
test
movsl
mov
xlat
adc
mulb
jmp
xor
mov
sub
mov
fwait
and
testb
hlt
pop
and
in
loop
hlt
mov
fs
dec
adc
faddl
fmuls
call
cmp
or
sti
xchg
cwtl
je
mov
popa
xchg
call
inc
hlt
sub
xchg
jae
hlt
xchg
dec
push
hlt
insw
or
dec
mov
hlt
jmp
int3
aad
je
hlt
movsb
mov
jo
hlt
push
sbb
icebp
retw
jmp
cmp
sbb
hlt
inc
aam
stos
ret
es
sbb
outsb
mov
aaa
hlt
adc
orl
hlt
lahf
pop
push
or
es
nop
daa
xchg
hlt
out
decl
mov
sbb
imul
stos
hlt
add
xchg
mov
pushf
xchg
ret
push
push
insl
insb
fiadds
into
repnz
movsb
aad
fs
xor
sbbb
add
bound
xchg
imul
or
inc
push
hlt
inc
rcr
mov
hlt
scas
or
testl
sbbb
sub
dec
dec
cld
hlt
out
pushf
cs
mov
cmp
mov
xchg
cmc
sub
das
hlt
dec
mov
ss
push
jns
fadds
xor
out
shrb
pop
fbld
fisttpl
add
fsubs
pop
std
andb
push
int3
add
loopne
jbe
jno
mov
call
pop
cmp
mov
xor
add
hlt
je
push
or
mov
test
xor
mov
cld
mov
stos
push
mov
add
hlt
rcrb
jge
cmp
push
std
mov
cmp
pop
add
nop
cld
jle
pop
hlt
int
xor
mov
loope
jg
cmp
push
testb
push
xchg
cmc
hlt
inc
mov
shl
hlt
mov
mov
popf
hlt
sub
xchg
or
hlt
pop
inc
jmp
push
jb
sti
and
hlt
fwait
dec
pop
das
or
jle
lods
hlt
in
lret
mov
mov
pop
jp
xchg
add
mov
jo
imull
pop
xchg
xor
sub
testb
push
cs
hlt
inc
fistpl
or
jecxz
dec
xchg
pushf
mov
repnz
dec
jb
divb
or
hlt
dec
and
hlt
arpl
cmp
dec
jo
hlt
pusha
xor
je
push
insl
hlt
add
call
jae
mov
push
cltd
jg
sub
hlt
icebp
mov
imul
push
into
imul
arpl
fdivs
and
fcmovne
shll
push
incb
push
cmc
mov
hlt
mov
ljmp
or
mov
dec
out
insb
push
push
mov
add
in
out
lret
sti
cmc
rep
jae
cld
cmp
aad
stos
jb
sub
jmp
nop
test
hlt
xlat
and
sahf
fs
mov
add
test
hlt
adc
scas
dec
mov
pop
sub
cmpsb
into
in
bound
out
hlt
les
inc
cmp
lds
jne
ret
dec
add
in
mov
hlt
fwait
sahf
mov
mov
inc
pop
lcall
push
mov
xor
pop
inc
mov
int3
movsl
jae
add
notl
insl
xchg
stos
hlt
fnstsw
mov
fcomps
xor
icebp
mov
hlt
and
or
leave
mov
push
jno
test
add
inc
ss
int3
xor
mov
or
hlt
or
sahf
jge
outsl
xchg
lods
ljmp
repz
test
jp
sbb
addr16
or
movsl
jmp
imul
stos
jp
call
aas
les
xchg
pop
add
sbb
cmpb
fisttps
fcmovu
hlt
jp
push
sub
pop
push
lret
mov
jne
sbb
dec
scas
nop
cmp
push
hlt
jo
repz
imul
jns
adc
dec
idiv
xor
cmp
and
hlt
push
sub
lods
out
mov
fwait
mov
mov
in
hlt
sbb
movsb
dec
hlt
mov
xor
hlt
and
aam
arpl
sbb
xor
hlt
inc
push
je
mov
mov
sub
xor
mov
loop
xor
aad
adc
imul
dec
push
sahf
mov
add
cltd
mov
xor
mov
pop
dec
hlt
into
lret
ja
std
test
jmp
fcomp
mov
hlt
jno
push
imul
js
jo
mov
sbb
pop
mov
je
fmull
mov
negb
out
hlt
cmpsl
xor
add
shlb
push
hlt
inc
mov
cmc
xor
mov
cld
repz
sub
pusha
icebp
aam
daa
xor
hlt
insl
sub
xchg
and
aas
inc
cmc
or
pop
push
daa
pop
dec
ja
push
sub
hlt
lods
cmp
add
or
pushf
xchg
insb
inc
xor
xor
repnz
sub
roll
das
loope
sti
and
mov
hlt
clc
jp
cli
inc
mov
cmp
jl
dec
dec
test
jmp
push
lea
push
icebp
adc
xchg
pusha
outsl
leave
hlt
fisubs
cmp
mov
cmp
ss
add
les
repnz
hlt
test
sub
xchg
setg
mov
and
aas
aam
xchg
or
add
fwait
push
sahf
mov
in
bound
test
je
hlt
adc
fwait
sub
push
sub
cs
and
pop
push
lret
cmp
loope
and
or
movsb
or
xor
mov
das
jne
hlt
inc
inc
push
mov
decb
push
sarl
hlt
mov
loop
mov
adc
push
je
je
clc
out
data16
repz
jg
lcall
in
lret
or
add
dec
inc
hlt
sbb
aad
cld
or
cmp
mov
inc
arpl
loope
repnz
insb
jecxz
hlt
add
js
push
sbb
leave
clc
xorb
xchg
lods
inc
or
pop
hlt
push
lret
cld
push
adc
std
icebp
dec
outsb
js
sbb
push
push
cmp
mov
lret
mov
imul
iret
adc
jbe
scas
lahf
pop
cmpsl
test
add
cwtl
fdivl
jge
aas
lahf
stc
hlt
xchg
sub
xlat
jmp
les
cmp
fcmovbe
lahf
adc
dec
movsb
jecxz
sub
pop
xchg
jl
lret
push
xlat
aas
jbe
mov
dec
sbb
xor
adc
hlt
pop
sbb
adc
pop
outsl
and
divb
pandn
out
inc
cld
hlt
cltd
icebp
aad
jp
hlt
imulb
call
jb
popa
sub
inc
aas
cld
cltd
xor
or
dec
int
sbb
xchg
xlat
dec
xchg
sbb
xor
mov
mov
stos
jle
testb
iret
cli
mov
jg
jno
sub
stos
je
lcall
inc
sbb
mulb
jb
test
xor
pusha
loope
aas
into
call
or
pop
mov
xor
sbb
mov
pop
mov
loop
xchg
in
add
push
mov
hlt
or
lcall
inc
ret
std
sbb
divb
sbb
sarl
clc
mov
int
loopne
push
hlt
cmp
ljmp
dec
lods
cmp
and
jne
push
aaa
fstps
ret
ja
mov
sbb
movsb
out
add
add
lret
hlt
pop
adc
mov
dec
hlt
sahf
pushf
jbe
jae
hlt
mov
iret
fst
hlt
inc
lahf
adc
int3
add
xchg
push
hlt
xor
scas
jb
cld
mov
mov
mov
sub
hlt
test
push
nop
hlt
js
xlat
mov
sub
add
rcl
stos
lahf
mov
push
adcl
push
jg
sbb
test
int
pop
adc
hlt
fsub
outsb
jl
mov
push
ljmp
and
jno
in
int3
mov
imul
push
insl
mov
sbb
and
xor
mov
and
lcall
orl
fwait
es
fisttpll
lods
repnz
ret
push
xor
push
hlt
mov
les
jmp
xchg
aam
movsb
popa
hlt
jb
cli
cwtl
sti
push
movsl
pusha
les
repnz
mov
mov
clc
pop
ds
les
push
jmp
fs
aas
scas
pop
bound
hlt
rol
scas
dec
dec
cs
mov
push
mov
and
xor
shl
sbb
pushf
jne
nopl
je
hlt
push
mov
in
xchg
aad
cmp
and
jg
jmp
movsl
add
mov
mov
push
bound
hlt
and
dec
fs
mov
inc
ljmp
in
dec
hlt
cmpsl
gs
pop
adc
das
outsb
fsubl
hlt
mov
push
addr16
gs
cmpsl
pop
or
lahf
ja
out
add
sbb
out
mov
outsb
mov
in
hlt
loope
jbe
dec
rcr
test
adc
xor
popf
adc
clc
inc
adc
into
or
aaa
cmp
adc
jno
add
shll
jb
hlt
aad
popa
scas
test
sub
hlt
mov
push
xchg
hlt
ret
rcll
jo
mov
mov
sti
adc
inc
sub
jnp
daa
repnz
pop
int
hlt
mov
jnp
mov
fsts
mov
out
mov
adc
inc
add
not
es
decl
cmp
imul
sti
push
cmc
es
sub
sub
pop
call
je
and
push
pop
sti
hlt
xchg
scas
fs
mov
inc
and
mov
icebp
xlat
xchg
movsl
idivb
pop
jecxz
mov
dec
push
jns
hlt
push
movsb
gs
xchg
add
mov
xchg
add
mov
push
pop
imul
mov
les
shlb
hlt
outsb
in
gs
push
and
or
jl
cmc
imul
lret
xor
cs
stc
in
stos
mov
jmp
roll
push
sbb
and
push
hlt
clc
es
scas
vsqrtps
or
inc
imul
ret
test
cs
sbb
loope
fcoms
mov
jb
xchg
int
std
xlat
pop
fwait
leave
sub
roll
pop
dec
mov
jbe
je
jo
hlt
adc
lods
jp
push
repnz
pushf
adc
jb
jmp
and
push
sub
lods
fs
sbb
std
test
xor
cmc
mov
repz
pop
mov
hlt
jne
ja
je
fstpt
lahf
iret
insl
cmpsb
test
inc
les
pop
je
push
mov
dec
cld
cmp
outsl
in
push
ja
or
jmp
xchg
mov
hlt
mov
decl
jno
sbb
stos
jbe
cwtl
movsb
adc
mov
add
popf
mov
sbb
js
dec
cmc
fstpl
jl
mov
mov
dec
mov
aam
mov
cmp
and
or
hlt
xchg
fwait
loop
cmp
jno
loopne
mov
and
cmpsl
xchg
in
das
shl
jne
aas
jo
push
dec
mov
mov
test
pop
int3
leave
daa
fadd
lret
inc
ljmp
mov
insb
cmpsb
jle
mov
lcall
jmp
cmp
cs
roll
es
hlt
sub
push
and
sbb
xor
adc
stc
dec
mov
fnstsw
pusha
cmp
lahf
aad
jae
scas
imul
xchg
push
imulb
pop
sahf
inc
sub
sbb
ljmp
ret
imul
lods
lret
jbe
mov
adc
incl
mov
cwtl
xchg
nop
out
sbb
aam
inc
fs
mov
stos
add
xchg
sbb
mov
ffree
scas
hlt
in
inc
repnz
mov
popf
hlt
push
mov
cltd
stc
push
sarl
add
mov
subb
sti
sub
ds
sbb
mov
int3
mulb
cmp
cmc
mov
add
xlat
add
push
imul
testb
lret
das
out
aad
sub
cmp
jae
sbb
mov
dec
das
adc
ror
aad
inc
xchg
mov
jmp
cmp
push
mov
mov
cwtl
add
add
aam
rcrl
mov
movsb
push
insl
push
xchg
hlt
lds
jbe
ja
jecxz
popl
insl
in
jg
adc
sbb
cmp
nop
sbb
movl
and
fimull
shl
inc
bound
sub
or
notb
lret
push
hlt
push
cwtl
imul
in
ds
hlt
pop
xchg
sub
dec
and
test
xorb
nop
aad
jecxz
imulb
pop
pop
xor
ret
imul
adc
sbb
imul
hlt
xlat
in
call
daa
fnstcw
insb
dec
testb
cmp
jae
icebp
loope
adc
int
lods
inc
cmc
daa
xchg
scas
lea
loop
or
mov
fs
cmc
outsb
jg
push
mov
scas
xchg
and
cmp
push
out
hlt
cld
pop
pushf
mov
ret
pop
mov
iret
xlat
cmpsl
cmc
scas
pop
push
hlt
stc
xorl
or
adc
cmpsl
in
icebp
imul
dec
sarl
and
loopne
mov
hlt
and
xchg
fimuls
mov
lods
sbb
sbbb
scas
hlt
popa
mov
divb
cwtl
movsb
inc
xchg
int
jb
mov
xor
pop
pop
sarl
and
pop
sub
lcall
or
andl
sbb
jns
cmp
scas
out
loopne
lods
dec
push
mov
jmp
mov
cmp
lods
stos
mov
hlt
in
lods
scas
xchg
bound
push
hlt
mov
loope
fs
jo
inc
cmpsl
nop
cmp
xor
xlat
int3
pop
testb
stos
out
div
mov
mov
mov
ret
bound
push
ss
test
mov
shll
sub
lret
dec
push
shl
mov
jb
cmpsl
inc
std
mov
repz
sbb
hlt
jmp
mov
cmp
stos
adc
je
cmp
jae
idivb
pop
cs
outsl
dec
pop
lock
mov
test
cmp
sbb
adc
loop
fcomip
adc
adc
xchg
dec
mov
dec
or
and
inc
daa
addr16
and
mov
jge
loope
push
imul
adc
aaa
sti
outsl
jne
sbb
repz
inc
aaa
aad
or
cmp
mov
push
inc
dec
fldt
movsl
xchg
jne
in
cld
mov
xchg
dec
sub
ss
lods
or
xchg
sbb
aas
notl
adcb
mov
sbb
mov
out
repz
xor
stos
das
cmpsb
fmull
xchg
jo
jmp
hlt
loope
push
push
shlb
push
loope
movsb
in
clc
sub
xchg
rolb
out
xor
sbb
jo
hlt
pop
je
dec
mov
pop
xor
push
jbe
addr16
rcrb
int
push
mov
fnstenv
hlt
jmp
xor
hlt
pushf
fsts
sbb
cmp
xor
repnz
xor
adc
jg
scas
push
popf
sub
fstpl
mov
pop
inc
adc
sbb
or
mov
fstpt
mov
in
hlt
jle
push
jp
pop
mov
hlt
test
mov
decl
pop
hlt
fidivrs
leave
sbb
jecxz
adc
cmp
push
sbb
repnz
push
dec
stc
fxtract
mov
sbb
mov
mov
lcall
mov
mov
jns
in
psubsb
mov
push
stc
iret
es
aas
xor
je
push
in
pextrw
nop
into
aaa
sbb
or
inc
inc
mov
inc
aad
mov
mov
test
testb
fwait
test
in
aam
int3
ficompl
mov
ret
in
pop
stc
sbb
xchg
adc
mov
mov
hlt
orb
mov
loopne
std
dec
mov
push
dec
call
out
popa
push
mov
js
ret
jno
hlt
xor
jle,pt
jns
push
hlt
movsl
xor
push
test
pop
bndstx
rcll
lds
lods
inc
push
sbb
jecxz
push
cld
aaa
call
cmp
or
mov
dec
mov
aad
ds
jge
dec
imul
pusha
js
or
and
add
xchg
xor
loop
out
hlt
mov
sar
hlt
aas
stos
jae
cmp
hlt
rcrl
loop
imul
mov
pop
cmp
pop
add
stos
fdivrs
inc
jmp
mov
or
fs
pop
lcall
rcl
outsb
xchg
jg
jecxz
mov
mov
mov
hlt
ret
inc
mov
movsb
dec
add
or
repz
lock
dec
decl
cmp
xchg
pop
push
sbb
fistl
dec
xor
adc
je
leave
push
cmc
aas
fs
adc
mov
mov
hlt
dec
sub
insl
dec
cmpsl
sbb
dec
fists
pop
cld
dec
mov
pop
push
push
lods
call
popa
xlat
ret
les
jnp
movsl
adc
negl
flds
xor
mov
cmp
inc
adc
loope
or
mov
insl
add
rolb
dec
ja
scas
fidivl
imul
incl
jecxz
div
cld
cmp
cli
cmp
hlt
mov
sbb
icebp
imul
jne
fistpll
mov
out
cmpsl
fucomp
dec
xor
inc
pop
pop
inc
test
adc
das
jae
scas
cwtl
neg
iret
cmp
sub
hlt
mov
js
stc
mov
hlt
push
je
aad
popa
pop
aas
dec
inc
psubq
pop
push
pop
jne
and
je
push
inc
ds
adc
mov
jmp
ljmp
incl
ds
roll
mov
or
xor
dec
lock
jl
mov
pop
ljmp
sbb
add
cwtl
adc
mov
push
pop
jl
mov
fldcw
std
dec
jne
mov
mov
or
jae
testl
sbb
add
ds
jp
mov
sub
addr16
xor
mov
rcrl
out
add
mov
xor
lcall
mov
sub
jg
inc
gs
jge
jns
pop
popa
pop
mov
mov
mov
hlt
xchg
dec
ss
test
jge
jmp
pop
pop
fcomi
in
mov
jns
mov
jg
and
and
inc
testb
fdivr
dec
aam
push
xor
and
sub
mov
sbb
pop
mov
stc
idivb
mov
loope,pn
pushl
mov
insb
imull
dec
lret
mov
int3
adc
loop
hlt
imul
mov
mov
leave
push
les
xlat
push
jne
lods
out
mov
hlt
repnz
pop
mov
adcb
xchg
das
std
sbb
mov
ret
add
xchg
imul
test
test
xor
add
dec
insl
stos
xorl
lahf
jns
ja
cmp
or
negb
and
cmp
push
lds
xorb
xor
leave
int
hlt
inc
movb
scas
mov
sub
or
jp
leave
inc
cmpsb
add
mov
sbb
in
lcall
cmp
aad
mov
xor
sub
mov
jne
pop
cld
mov
xchg
dec
jbe
pushf
scas
jg
lret
test
arpl
pop
add
or
out
mov
dec
hlt
jns
adc
add
push
pop
ret
pop
xor
fidivs
insl
mov
jmp
and
jge
mov
add
adc
in
mov
cmp
andb
addr16
cmpsl
mov
or
and
xor
dec
hlt
add
in
hlt
stc
sbb
sarb
mov
call
testb
insb
inc
xchg
sbb
jg
pop
or
mov
pop
mov
gs
scas
sub
push
sbb
xor
test
dec
out
hlt
mov
sub
fldcw
push
dec
hlt
mov
insl
push
mov
add
sbb
cltd
inc
sub
push
test
popf
lret
jle
hlt
lods
out
das
xor
mov
or
aam
and
mov
and
les
jge
or
push
add
dec
hlt
push
js
cmpsl
add
in
sbb
mov
ret
and
sub
fidivrs
out
adc
xor
pop
aad
hlt
icebp
out
xor
push
out
push
data16
and
ret
xor
ret
pop
hlt
sbb
sub
sbb
adc
xchg
xor
cmc
mov
or
call
lahf
ret
jne
arpl
push
pop
fstpl
rcr
hlt
inc
mov
add
pop
pop
loope
jg
push
nop
push
fs
and
data16
fstpl
fstpt
mov
aam
inc
xlat
jmp
subb
inc
hlt
sahf
mov
adc
out
lods
negb
repz
mov
add
jl
mov
scas
aam
add
inc
hlt
movsb
je
xchg
lahf
jl
adc
push
sbb
hlt
cmp
lcall
rcr
cli
into
je
sar
mov
in
hlt
cmp
xchg
fdivrp
pop
sahf
aas
andb
cmpsl
jge
imul
sbb
xorl
add
mov
xchg
mov
mov
push
pop
xor
push
push
testb
hlt
sub
pusha
jo
lods
int3
adc
es
out
mov
push
lcall
adc
sbb
cwtl
or
sub
arpl
or
sbb
imul
in
lods
sbb
mov
cld
loopne
sbb
or
mov
insb
ret
jne
shlb
mov
rolb
inc
out
es
push
dec
or
cmc
pop
and
repnz
pusha
int3
mov
cmp
mov
mov
mov
decb
pop
stos
sbb
push
push
scas
and
push
or
adc
in
sub
inc
mov
mov
ret
xchg
lea
cwtl
je
pop
es
int3
push
mov
hlt
xchg
and
std
cltd
hlt
test
and
sub
mov
repnz
aam
jg
hlt
fidivl
mov
mov
fcmovnu
jbe
sti
lret
lods
dec
out
lcall
dec
rcrb
or
add
loopne
xchg
jecxz
xchg
insl
jge
push
adc
cwtl
push
add
js
dec
mov
push
pop
jp
lds
std
push
inc
cmp
jecxz
orb
iret
lds
or
cs
pop
push
xchg
and
xchg
das
sbb
jecxz
lret
loopne
hlt
mov
div
int3
rclb
scas
jge
fnsave
push
cmpsb
inc
jl
pop
out
iret
jnp
ljmp
jmp
pop
flds
mov
in
mov
xor
fcoml
popf
mov
sbb
adc
add
or
inc
or
mov
jle
and
pop
xchg
scas
push
dec
pop
jno
jecxz
sub
fcomip
mov
xchg
xor
inc
out
hlt
lcall
hlt
xchg
mov
mov
icebp
fstps
push
stc
lods
hlt
dec
in
mov
ret
aas
int
test
call
dec
js
inc
and
jb
sub
inc
jne
jecxz
inc
mov
add
movsl
pop
push
push
mov
inc
and
hlt
inc
push
dec
push
hlt
xchg
mov
roll
cs
and
jg
mov
add
in
aam
insb
dec
scas
cld
xchg
inc
cmp
clc
or
stc
mov
xchg
dec
sub
mul
fisttps
int3
aad
xor
mov
mov
push
dec
test
test
mov
mov
jae
mov
fs
nop
lods
idivb
les
pushf
repz
test
and
cmp
pop
faddl
mov
sub
jl
bound
hlt
repz
xchg
unpckhps
or
je
mov
shl
imul
movb
xchg
mov
das
xchg
inc
imul
mov
jp
iret
hlt
cmp
mov
ret
cmpsl
lahf
or
push
cmc
xchg
mov
nop
pop
adc
int
pusha
lock
rolb
sbb
mov
cmp
xor
ficoml
xchg
hlt
je
cli
cmpsb
test
pusha
repnz
pop
pop
add
inc
scas
lods
sub
repnz
adc
pop
hlt
mov
sub
fcomi
inc
pop
mov
inc
out
repnz
jl
fnstsw
sbb
mov
inc
outsb
and
jne
pop
hlt
pop
into
testl
sub
out
cli
and
add
inc
std
movsb
inc
popa
adc
xchg
popl
xchg
daa
hlt
adc
add
sarb
push
fs
or
cmpsb
mov
pop
test
imul
lcall
pop
hlt
mov
lret
rcrl
mov
xchg
lods
dec
data16
hlt
pusha
dec
ss
iret
mov
outsl
leave
testb
sbb
dec
pop
std
hlt
jmp
insb
out
pop
jp
dec
cmpl
mov
das
jge
sbb
or
fs
mov
jg
js
jo
out
xor
or
addr16
daa
mov
push
hlt
insb
fwait
and
mov
pop
mov
jle
das
sbb
cltd
sbb
adc
ret
lret
cmc
cmp
jl
jns
les
out
hlt
or
pop
sbb
mov
lret
jno
jne
leave
sub
xor
push
jae
je
das
sub
mov
inc
dec
stc
jo
or
pop
dec
mov
shl
jg
addl
lea
mov
pop
icebp
cmp
ret
xor
testl
outsl
notb
push
aaa
jno
fiaddl
call
lcall
jle
test
or
fsub
cli
dec
aad
jae
hlt
push
js
dec
cmp
xchg
cmp
add
push
jle
lea
ret
aam
out
xor
loop
hlt
mov
push
add
test
push
cld
push
pushf
aaa
hlt
and
shrb
lea
fdivrl
imul
mov
sub
imul
aam
fiaddl
out
pop
lret
imul
aaa
cli
fdiv
int
shll
ret
lods
adc
adc
mov
cmp
mov
fdiv
rcr
adc
movsb
pop
out
jo
push
testb
inc
hlt
mov
test
test
popa
insb
xlat
stc
or
jnp
ficomps
pop
lcall
jae
incb
jge
dec
mull
aas
push
hlt
loopne
dec
fsubr
push
lods
hlt
outsb
int3
mov
mov
inc
adc
add
push
sub
adc
aad
jae
aam
pushf
xor
sbb
push
adc
sti
mov
hlt
fidivrl
adc
pop
jo
test
aas
adc
mov
adc
xchg
lcall
jge
xor
mov
clc
imulb
nop
dec
hlt
repz
and
xor
xor
notb
shrb
shrl
pop
dec
fwait
inc
rcl
std
hlt
inc
loope
imull
je
mov
in
into
dec
sbb
movsb
dec
fwait
sbb
pop
sub
push
hlt
mov
aad
push
subl
ja
push
insb
hlt
loopne
mov
sbb
add
and
hlt
push
jg
jl
jmp
jo
aaa
sub
lret
popa
int
bound
imul
or
mov
add
jp
cmp
int3
jle
lret
mov
scas
ret
lds
cmp
in
xlat
test
shlb
cmpsl
mov
pop
dec
outsb
push
mov
aas
cs
xchg
dec
je
ret
repz
mov
cmc
pushf
fimuls
mov
inc
mov
mov
notl
xor
loope
adc
outsb
hlt
sbb
xor
sbb
jb
dec
push
mov
add
subb
lea
and
pop
ljmp
hlt
notl
sbb
rcll
sbb
xchg
mov
pop
dec
hlt
movsl
inc
sbb
lock
dec
fxtract
push
or
leave
out
sub
sub
mov
test
or
decl
jg
cmc
out
cli
lods
fmul
or
les
push
shl
pop
mov
add
or
lret
mov
adc
hlt
xor
cs
call
pop
xchg
fldenv
movsb
mov
or
loop
addr16
fnstsw
lret
and
hlt
loope
jp
stos
fldenv
xchg
js
je
or
fwait
jo
mov
ss
pop
sbb
ret
fisubrl
mov
sub
push
sbb
jp
adc
imul
cwtl
mov
add
stc
push
popl
hlt
lret
test
jmp
mov
sub
xor
test
jne
aas
incb
fwait
mov
gs
hlt
lcall
jnp
and
pusha
jns
or
cmpsl
mov
pop
incl
hlt
pop
adcl
hlt
dec
clc
mov
gs
les
icebp
dec
jne
mov
jae
popf
pushf
push
idiv
ss
dec
xchg
aas
mov
imulb
divl
xor
in
mov
rclb
sbb
add
outsb
fistpl
cmp
xchg
std
dec
out
mov
add
jmp
hlt
lcall
push
hlt
movsb
cmpsl
stos
push
rcrb
sbb
jge
jbe
mov
jae
addr16
mov
xrelease
push
mov
mov
lock
clc
inc
ficoml
sub
mov
int
pop
sub
imul
dec
sti
lock
aam
sahf
std
icebp
in
insl
xchg
je
hlt
and
lds
pop
lods
test
addl
nop
aas
mov
pop
mov
jbe
cmp
push
jp
push
lea
jecxz
stc
shlb
ficoms
hlt
xor
test
add
lret
mov
sbb
inc
mov
pop
or
pop
mov
mov
mov
cmp
repz
add
mov
inc
xor
jmp
aam
sarb
xor
sbb
adc
adc
icebp
hlt
mov
loope
js
stos
cmpsl
push
pusha
mov
dec
sar
mov
sbbb
xchg
dec
push
les
addr16
dec
js
or
rolb
hlt
mov
fistpl
ds
clc
repz
aad
mov
mov
in
repz
xchg
pop
hlt
mov
mov
xchg
dec
fs
mov
inc
hlt
fnstenv
jb
mov
sbb
cmpsb
aas
aas
mov
jmp
cmp
jae
sbb
hlt
sbb
lahf
push
mov
movsl
popf
imul
xor
hlt
pop
jnp
aad
add
test
test
xor
xchg
dec
mov
into
push
insl
sbb
or
and
inc
leave
std
sub
in
jnp
xchg
adc
xor
arpl
or
jmp
test
divb
call
pop
sbb
aaa
hlt
adc
lea
stos
lods
hlt
lahf
dec
out
mov
outsb
pop
add
xor
vcvtps2pd
in
mov
adc
sub
mov
add
fsubrl
xor
ja
and
daa
sbb
mov
jg
aad
push
lock
push
hlt
sti
test
roll
jns
in
hlt
movsb
mov
hlt
xchg
lea
dec
hlt
lret
jg
push
cld
movsb
addr16
or
cmc
sub
aas
fs
icebp
insb
mulb
lahf
hlt
inc
in
sbb
dec
and
negl
mov
xor
sbb
mov
push
hlt
mov
xor
mov
cltd
repnz
mov
jnp
push
hlt
push
adc
arpl
ret
push
xlat
dec
cmp
ds
jae
hlt
stc
clc
mov
movsb
les
hlt
mov
ljmp
jmp
mov
hlt
cmp
mov
iret
mov
ljmp
insb
pop
int
and
loopne
pop
std
hlt
cmpsl
loop
jne
repnz
jecxz,pt
repz
loopne
hlt
mov
lock
or
or
fwait
insl
mov
sub
cmpb
xchg
testb
mov
xchg
nop
xor
hlt
mov
lahf
idivb
push
outsl
mov
int3
cli
inc
shll
push
mov
pop
add
xchg
sub
jb
ret
lods
cli
inc
rolb
sahf
adc
pop
cltd
or
sbb
xchg
pusha
or
ret
icebp
mov
imul
hlt
cmpsl
xchg
filds
hlt
mov
stc
rclb
mov
insl
lea
addr16
or
cmp
cmp
cli
push
or
mov
dec
sub
in
mov
sbb
stos
stc
es
hlt
push
xchg
pop
xchg
pop
mov
jae
xor
adcl
cmc
lods
imul
xor
hlt
pushf
fsubr
mov
hlt
js
stc
stos
push
fidivl
fists
pop
iret
mov
jo
mul
js
sub
fistl
add
insl
jnp
fistps
hlt
or
rorb
test
mov
out
or
sub
adc
mov
xchg
and
mov
ljmp
inc
sbb
loope
jp
lock
and
dec
aam
les
js
lods
insl
hlt
and
inc
lcall
sarb
sbb
push
add
imul
hlt
lret
dec
pop
pop
xor
pop
hlt
test
mov
dec
andl
xor
aas
push
dec
inc
mov
cli
rorb
dec
and
addr16
xchg
jecxz
repnz
lahf
xor
lods
mov
data16
jbe
mov
icebp
and
dec
push
add
or
imul
hlt
jg
cmp
out
inc
outsb
sub
les
fisttpll
je,pt
sub
hlt
clc
cmpsl
insl
les
jmp
jae
push
repnz
lods
mov
mov
test
stos
xor
cmp
aam
leave
fwait
mov
inc
repz
pop
es
test
add
xchg
push
js
imulb
dec
in
inc
stos
jne
arpl
mov
fdivp
adc
lods
mov
hlt
movsb
out
insl
push
mov
push
leave
sbb
hlt
andl
imul
or
in
sbb
mov
aam
xor
ds
sbb
pop
test
rorb
out
and
cwtl
mov
mul
mov
stc
je
cmp
and
or
sub
jge
mov
hlt
fcoms
movsb
sarw
hlt
movsl
iret
aaa
cmpsb
xor
add
pop
jns
rcr
cmp
cmp
xchg
in
cmpsb
or
sbb
hlt
rorl
fucomip
jge
cltd
jae
aad
imul
xor
sbb
icebp
jecxz
push
adc
insb
mov
sub
cld
pop
hlt
leave
adc
add
out
outsb
hlt
nop
faddl
rcr
sti
fnstenv
inc
cmp
test
mov
jb
es
popa
inc
add
aad
add
aam
in
cli
hlt
mov
dec
ds
mov
repz
xor
jb
xlat
cmp
in
cld
repnz
cmpsb
lret
dec
xor
iret
testb
add
lret
mull
leave
push
and
mov
mov
sub
cmp
mov
icebp
jae
das
inc
or
add
xor
stos
add
jb
pop
dec
push
jl
jnp
stc
insb
hlt
stos
fxch
sti
or
mulb
add
mov
fs
or
or
and
cs
adc
jp
movsb
lret
icebp
jg
lret
hlt
mov
stc
sub
jle
or
hlt
negb
jge
pop
adc
nopl
clc
into
and
adc
mov
int3
sub
leave
fs
divl
and
aas
bound
std
mov
pop
not
imul
fcomps
mov
push
insl
pop
lea
popf
push
imul
add
in
mov
hlt
in
jo
ja
mov
mov
stos
mov
xchg
inc
outsb
mov
hlt
mov
mov
mov
data16
or
out
xchg
mov
or
pop
sbb
inc
mov
or
cltd
fwait
mov
lcall
push
jmp
pop
faddl
hlt
repnz
loope
in
cmp
fstpt
loopne
cmc
push
mov
hlt
repnz
mov
sbb
add
fwait
sbb
and
out
hlt
ja
out
or
fcom
lock
mov
xchg
sbb
scas
and
hlt
repz
mov
hlt
inc
dec
pushf
mov
out
outsb
lods
mov
daa
rclb
push
scas
xlat
adcl
insl
hlt
cmp
xchg
push
out
adc
adcb
pushf
pop
push
imul
movsb
dec
jmp
sub
adc
or
push
adc
pop
hlt
xchg
or
sbb
and
mov
sbb
adc
clc
ret
lcall
push
mov
mov
pop
fidivs
xchg
xchg
cmc
inc
pop
ret
stos
or
and
adc
mov
xchg
rclb
jmp
add
test
stos
dec
hlt
es
ficoml
hlt
push
sar
mov
lret
hlt
jp
fiadds
call
data16
mov
jno
xor
aam
sbb
stc
mov
cs
cld
or
addb
inc
mov
mov
dec
sbbb
or
hlt
in
pop
insb
rorb
mov
xchg
iret
sub
adc
hlt
ja
jno
dec
xchg
cmpsl
push
cmc
cs
mov
les
jl
popf
sti
jns
pusha
cmp
xor
fs
push
or
pop
inc
xchg
rcl
adc
decl
movsl
pusha
notl
pop
xchg
hlt
push
fsubs
mov
mov
fs
sysexit
test
mov
jo
lea
push
dec
rolb
lods
and
hlt
icebp
add
les
mov
push
dec
call
inc
test
push
mov
sub
hlt
and
push
outsb
sbb
addr16
add
sub
adc
repnz
lock
sub
hlt
xchg
cld
fidivl
push
cld
or
or
lret
in
das
xchg
shl
dec
mov
jg
mov
repz
stos
xchg
sub
sbb
push
or
sub
out
or
fs
hlt
movsb
loope
jg
outsl
and
add
sbb
popl
add
hlt
xor
clc
jp
lods
in
add
lret
out
fs
pop
mov
aam
hlt
cmp
loopne
loop
sbb
std
or
mov
hlt
cmpsb
outsl
lret
aas
jmp
pop
xchg
sub
cmp
out
and
aas
ljmp
mov
pop
xchg
int3
mov
add
clc
int
mov
and
push
xor
lret
cmc
sub
push
insb
cmp
xchg
lea
dec
int3
mov
hlt
lret
shrl
stos
cmc
dec
xchg
pop
push
gs
add
dec
mov
into
jns
hlt
mov
jbe
sbb
aas
sub
xchg
fnstsw
adc
je
hlt
cmp
scas
push
xor
mov
aam
cld
pmovmskb
mov
rcrb
hlt
cli
mov
jbe
cmp
dec
pop
testb
push
adcl
sbb
test
int
hlt
pushf
shlb
pop
jne
xlat
and
imulb
add
hlt
and
iret
sti
fidivs
test
jne
jmp
lret
sbb
push
cmc
inc
pop
js
popl
dec
push
pop
ljmp
imul
add
mov
pop
jge
hlt
movsb
xor
push
push
outsb
dec
aas
and
xor
cmp
inc
mov
add
cmpsb
sti
or
aad
loope
push
out
je
outsb
mov
add
hlt
clc
inc
xor
fst
std
sar
jno
cli
mov
hlt
xor
dec
iret
leave
hlt
movsl
cld
ja
jmp
int3
hlt
lods
stos
nop
cmp
sub
xchg
inc
mov
push
aam
add
dec
push
jno
add
or
sbb
lock
mov
fcom
fbld
cmpsb
push
fistl
cmp
or
test
ljmp
mov
imul
xchg
mov
adc
mov
je
or
daa
pop
addr16
int3
cmp
inc
imulb
push
add
jae
aad
testb
jmp
adc
into
lods
xchg
hlt
aad
outsl
xlat
inc
js
pop
push
test
lret
pop
imul
or
jo
es
lahf
ljmp
jg
in
fsubr
and
jns
arpl
loope
hlt
mov
js
mov
dec
xchg
in
pop
je
faddp
hlt
les
cli
sti
push
pop
test
sub
int3
mov
mov
loope
cmc
pop
ret
leave
cmc
popf
xor
jmp
out
ficoms
test
push
mov
xor
mov
mov
jno
call
dec
or
jmp
jae
rcl
mov
jnp
sub
jg
sahf
fdivrp
cmp
adc
push
rorw
xchg
mov
hlt
scas
mov
push
es
xor
fcomi
jbe
movb
lret
sub
pop
lcall
lods
mov
or
notl
cwtl
jg
loope
mov
test
in
hlt
xchg
fsts
in
data16
ret
and
mov
pop
prefetchwt1
or
in
outsb
stos
hlt
push
cwtl
xchg
leave
in
push
lods
cmpsl
lret
pop
cmp
pusha
push
lock
hlt
cli
sbb
push
js
cmp
fwait
jp
int3
loop
cmpsl
in
dec
pop
mov
hlt
icebp
into
stos
lcall
je
lods
push
cmp
sarl
sbb
imul
rcll
jg
scas
insb
fsubp
dec
mov
inc
in
cmp
popf
hlt
mov
push
lret
adc
push
xchg
daa
xor
push
cs
in
cmp
ss
les
rcll
pop
mov
sbb
ds
notl
xor
push
mov
mov
or
or
cmpsl
jbe
jbe
div
hlt
sub
lret
hlt
fisttpll
sub
xor
or
fmuls
ja
jp
jmp
loopne
mov
sti
lds
jne
or
xchg
sbb
jle
push
js
je
xor
pop
jbe
ss
je
pop
dec
inc
repz
push
aas
shll
lds
sbb
js
push
mov
divl
repnz
lcall
mov
xchg
inc
xchg
hlt
lods
and
mov
lcall
aam
push
fs
or
jle
mov
aad
test
popa
loop
jmp
enter
stos
int3
lret
jl
jg
xor
xchg
pop
cmp
sbb
sub
je
lods
cwtl
fwait
mov
xor
movsb
jmp
outsb
pop
in
fdiv
inc
idivb
xchg
imul
dec
nop
pop
jg
pop
je
je
jb
hlt
stc
sub
and
insb
push
push
hlt
mov
out
push
xchg
dec
popfw
pop
sbb
jge
jo
aam
cmp
cmp
ljmp
jnp
xor
iret
xchg
fcmovbe
je
xor
push
aaa
or
dec
test
jne
out
xchg
mov
adc
inc
sbb
xor
add
sub
push
pushf
incl
jo
fdivrl
mov
push
imul
cmp
push
hlt
clc
shlb
mov
leave
int
into
stc
stos
mov
gs
loop,pt
add
hlt
or
inc
adcl
fcoml
mov
movsb
fwait
push
push
call
cmpsl
in
push
mov
xchg
ret
jecxz
data16
hlt
fbstp
pop
jle
sbb
xor
sbb
adc
or
div
rorl
cmp
leave
cmp
test
push
sub
sub
inc
mov
mov
movsl
jo
icebp
adc
mov
psraw
ret
mov
jno
pop
std
sub
popaw
or
dec
rclb
adc
cmc
cmp
sbb
cli
hlt
icebp
mov
push
mov
sbb
adc
icebp
js
sub
sub
iret
shl
test
lahf
imul
hlt
push
int3
sbb
sahf
addb
call
cmc
js
jnp
hlt
int
push
dec
dec
xchg
cmp
push
xchg
mov
push
xor
imull
push
adc
mov
sub
test
jb
mov
hlt
pusha
sbb
repnz
repz
jle
rolb
ja
jge
fsincos
aad
cmp
test
jae
mov
je
hlt
xchg
pop
adc
inc
jge
hlt
and
loope
sub
loop
dec
jecxz
fs
sbb
pushf
bound
mov
cmp
cmp
sahf
stc
hlt
push
daa
fimuls
mov
sub
cli
and
or
inc
inc
arpl
xchg
add
sub
fcoml
loopne
push
hlt
loope
inc
movsl
mov
into
std
icebp
popa
jl
jns
js
testb
push
subb
adc
lea
sub
cmc
shll
sub
icebp
nop
leave
out
xchg
sub
popl
fdivrl
mov
mov
fnsave
out
stc
cmpsb
sahf
cmpb
sub
int
cli
imulb
xchg
hlt
lods
fcoms
pop
es
sahf
sbb
adc
inc
jmp
hlt
mov
xchg
test
ljmp
pop
out
xor
inc
cmpl
cli
sub
shl
mov
hlt
mov
pop
cmpsb
pop
push
cs
push
ljmp
push
fdiv
hlt
jge
xor
sub
ret
sti
cmp
mov
jmp
movsb
xchg
hlt
loope
xchg
push
sbb
push
div
and
sbb
hlt
pop
loope
push
mov
mov
ret
jb
js
xlat
mov
jne
push
mov
sub
dec
jge
pop
jae
and
pop
cmp
xor
jne
fsubl
jae
cmp
sub
js
sub
stos
pop
mov
setno
add
mov
imul
push
fs
hlt
and
out
scas
ljmp
fiaddl
mov
repnz
push
pop
mov
mov
mov
hlt
scas
pop
adc
add
imul
pop
xchg
xlat
jp
cmpb
ja
lock
test
pop
repz
hlt
mov
sub
lea
mov
cltd
sbb
cmpl
sub
cltd
xor
std
sbb
dec
or
int
sub
popf
nop
cmp
test
cld
push
cmp
sti
push
insb
std
jae
sbb
and
icebp
mov
dec
int3
hlt
cmp
cli
xor
scas
mov
adc
and
jmp
fwait
sbb
hlt
dec
ds
xor
sbb
incl
popa
mulb
cwtl
hlt
dec
xchg
mov
dec
mov
cltd
mov
jo
adc
cmp
or
es
dec
xor
cmp
dec
pop
hlt
pusha
stc
ficoml
hlt
jp
push
push
hlt
mov
sbb
cld
push
into
pop
hlt
cmp
mov
xchg
and
xorb
out
shrl
bound
in
cmpl
or
pop
mov
shl
outsb
lock
dec
sbb
pop
push
mov
leave
pop
add
xor
cmc
jns
and
cmc
mov
hlt
xor
adc
arpl
cmp
hlt
jns
sub
fs
dec
fisttps
sbb
jnp
mov
in
hlt
jle
xchg
inc
jns
xor
hlt
xchg
sahf
iret
shlb
sti
int
out
hlt
jge
fs
es
xchg
scas
fistl
dec
inc
push
lret
mov
push
fs
loope
sbb
cmc
inc
js
fisubrl
repnz
pop
mov
adc
aad
pop
ljmp
jae
cmc
cmp
jne
dec
or
inc
xchg
adc
loop
or
nop
repnz
mov
mov
sbb
aas
push
dec
push
repz
shl
jnp
mov
dec
mov
js
in
mov
jl
sub
mov
add
in
shr
int
pop
cmp
popf
test
jmp
push
lods
movsl
dec
or
push
sarb
add
loop
lcall
repz
adc
mov
sbbb
or
pop
jno
sub
sti
sbb
in
mov
ds
into
mov
jmp
pop
imulb
inc
idiv
sarl
fst
and
fstps
adc
out
mov
mov
adc
cli
iret
imul
test
ja
pop
sub
pop
dec
or
rorb
push
dec
mov
imul
xchg
pop
hlt
adc
pop
add
arpl
hlt
sbb
cs
test
jge
cmc
inc
notb
dec
test
mov
mov
push
out
outsb
fdiv
stos
fbstp
mov
faddl
jmp
jne
xor
mov
lds
xlat
lods
pop
dec
icebp
fdivr
vmlaunch
int
push
inc
dec
divl
jecxz
push
jbe
sub
div
cmp
hlt
inc
in
ret
insl
sbb
pop
add
push
arpl
mov
xlat
aad
hlt
add
scas
mov
hlt
das
dec
xor
hlt
add
sbb
hlt
cmc
fsubrl
xor
mov
push
cmpsb
out
hlt
outsl
cmpsl
push
int3
push
xor
dec
enter
not
shll
popf
setb
xchg
leave
ret
cmc
pop
pop
out
jo
sub
mov
pop
inc
repz
sbb
jae
stos
cwtl
call
mov
hlt
jmp
int
shl
inc
ret
push
ss
hlt
arpl
imul
clc
adc
hlt
cmp
pop
mov
xor
cmc
hlt
insl
roll
fdivp
dec
mov
imul
ja
xrelease
pusha
cli
adc
xor
loopne
adc
movsb
movsl
je
popa
xor
and
flds
aad
xchg
fs
pop
hlt
rcll
leave
int
fildll
jg
and
cld
jbe
mov
push
mov
orb
clc
hlt
lret
out
push
pop
imul
popf
mov
and
xchg
xchg
nop
and
imul
push
dec
or
jg
or
xor
cmp
popf
xchg
xchg
lret
outsl
add
test
test
repz
xchg
imulb
sbb
jns
add
outsl
sub
hlt
push
lcall
into
pop
adc
inc
in
push
adc
fmull
imull
jae
stos
jmp
hlt
out
shlb
div
hlt
inc
mov
push
xchg
hlt
nop
xchg
movsb
xorl
mov
cmp
hlt
out
shlb
leave
ret
or
das
test
std
in
push
dec
loope
hlt
and
xchg
pop
push
out
lret
mov
mov
loope
pop
jg
aaa
out
pusha
cwtl
sbb
hlt
scas
nop
repz
sub
mov
mov
lods
call
mov
mov
sahf
mov
imul
mov
aaa
inc
test
mov
loop
fiaddl
mov
hlt
lret
sub
ret
or
das
mov
mov
mov
into
mov
add
pop
adc
fsubrs
in
hlt
lds
mov
imul
xor
out
ja
push
jae
jp
mov
hlt
cli
inc
or
or
decl
call
mov
inc
fisttpll
data16
insb
mov
enter
fidivrl
loop
mov
iret
mov
loopne
push
call
dec
mov
mov
hlt
sti
test
sub
fmull
mov
pushf
hlt
jo
jge
jmp
call
add
jle
xchg
xor
fucomip
push
sbb
fwait
cld
dec
lret
pop
mulb
dec
jecxz
iret
loopne
repz
inc
mulb
cmpsl
out
adc
hlt
out
push
call
jg
aad
testb
jecxz
sbb
mov
xor
fnsave
sbb
pop
and
cs
mov
or
mov
push
dec
push
and
dec
sub
nop
hlt
xor
js
mov
xchg
hlt
xlat
imul
hlt
and
dec
push
pop
hlt
sub
jl
int
cmp
mov
or
hlt
jae
jle
sarl
cwtl
ja
xor
imul
dec
ds
hlt
cmp
xchg
xor
scas
adc
lods
dec
mov
out
add
je
test
mov
loopne
imul
mov
lret
add
mov
mov
jecxz
aad
lcall
out
mov
je
pushf
mov
jb
and
sub
and
adc
in
decl
sbb
xchg
mov
jecxz
cmp
pop
and
insb
dec
hlt
clc
mov
stos
pop
xor
fisubrl
imul
sbb
pop
hlt
lea
jno
imul
clc
rcl
dec
hlt
pop
mov
aad
xor
adc
divb
hlt
imul
iret
push
cli
xchg
dec
bound
mov
clc
pop
lds
jae
sub
mov
push
inc
mov
movsl
mov
in
fisttpll
adc
jmp
mov
xor
xlat
mov
jle
mov
or
cmp
hlt
stos
push
aam
int3
jmp
cmpsl
pmuludq
adc
sbb
push
hlt
test
jle
arpl
mov
movsb
xor
in
ret
or
mov
mov
mov
cmpsl
hlt
push
outsb
and
addr16
out
aam
aaa
xor
lds
xchg
sub
and
imul
jnp
xchg
hlt
or
hlt
sarl
inc
sbb
mov
or
fxtract
fcoms
push
pop
or
xchg
xor
sub
hlt
mov
fs
dec
hlt
jecxz
push
aas
insl
xchg
cltd
hlt
add
gs
cld
fwait
das
or
stos
pop
ja
leave
sbb
lret
or
idivb
xor
fdiv
push
cwtl
clc
sub
bound
jge
lahf
xchg
hlt
lea
lcall
and
push
and
shl
hlt
cwtl
xchg
mov
jp
push
xor
or
pop
repz
mov
add
sbb
test
or
fiadds
addr16
mov
pop
int
dec
mov
sti
sbb
xchg
sub
fldenv
jne
mov
into
arpl
popf
test
ja
movsl
hlt
jge
das
bound
push
daa
shl
mov
rcll
xchg
negl
cmp
jbe
xchg
mov
mov
faddl
cltd
cmp
mov
pop
xor
push
push
in
in
mov
mov
hlt
inc
pop
cmc
popl
sub
sbb
xchg
jle
std
hlt
outsl
cmpsl
icebp
inc
mov
mov
xor
out
hlt
int
sbb
fwait
push
lea
ret
push
add
xlat
in
mov
sbb
push
or
pop
ficoml
iret
cmpsb
aas
call
hlt
dec
adc
js
jp
addl
xchg
hlt
xor
lea
add
mov
call
sub
fisttps
push
pop
aas
inc
and
jge
mov
rcl
jp
sbb
mov
sbb
push
dec
hlt
pop
mov
popf
mov
divl
into
hlt
jmp
cli
out
aaa
ljmp
sbbb
mov
out
std
cmc
sbb
mov
dec
inc
nop
push
test
fucompp
in
cli
push
movsl
fstpl
sbb
and
and
cmp
mov
insl
loopne
push
hlt
inc
or
shlb
fwait
lods
hlt
sub
movsb
jo
sub
sbb
ds
adc
test
mov
lock
xchg
mov
stc
movsb
scas
hlt
ret
arpl
loop
ja
lcall
out
rolb
xchg
push
dec
xchg
lret
hlt
jo
jp
stc
dec
mov
hlt
dec
mov
mov
xor
inc
mov
hlt
nop
jle
mov
hlt
stc
push
add
lods
es
scas
hlt
ss
lds
cltd
mov
jo
hlt
mov
lods
fs
in
mov
lcall
lea
adc
scas
fsubl
jle
and
pop
and
hlt
imul
imul
cmpsb
mov
ss
je
stc
sub
inc
fs
out
add
cmpsl
push
imul
sub
icebp
insl
int
add
test
or
out
mov
and
bnd
test
xor
mov
mov
loopne
sarl
jg
sahf
mov
jmp
or
hlt
les
js
shrl
insb
scas
mov
out
cmp
data16
imul
lahf
cltd
xor
ret
hlt
movsl
stos
xor
xchg
xor
cmp
stc
std
cmp
push
jbe
xchg
dec
imul
test
dec
testl
sbb
pushf
dec
mov
hlt
in
lret
mov
mov
shll
insb
push
fstps
pop
sbb
jbe
cmc
ja
xchg
hlt
jns
xchg
xor
hlt
cmp
bound
das
cwtl
cltd
mov
hlt
ret
flds
mov
inc
incb
sub
add
not
and
hlt
sbb
loop
scas
add
inc
push
cmp
out
ja
hlt
mov
pop
leave
into
sub
mov
and
lahf
outsb
hlt
fldcw
xchg
mov
xor
or
lods
push
rclb
hlt
je
xor
push
in
xchg
sbb
sti
aaa
idivl
scas
sbb
sbb
push
cmc
loop
add
add
xchg
push
call
push
cltd
ja
mov
cmp
sti
sub
negb
fnstcw
pop
mov
add
test
sbb
hlt
jl
outsb
add
mov
add
jb
sbb
mov
adc
les
xchg
mov
xchg
leave
fs
sti
sbb
lcall
hlt
lahf
mov
orl
jae
xor
stos
roll
fidivrs
push
jo
pop
and
pop
pop
dec
int
loop
hlt
pushf
or
or
jp
aam
or
sahf
and
add
push
negl
dec
push
shrb
cmc
xchg
inc
inc
mov
push
in
add
lods
hlt
xchg
xor
mov
packsswb
hlt
das
incb
or
jecxz
and
and
lret
push
cmp
mul
adc
fldenv
stc
lahf
cmp
pop
push
hlt
shrb
dec
hlt
fs
mov
pop
mov
hlt
inc
lods
cmp
jno
test
mov
jp
push
shll
inc
inc
or
add
xchg
out
enter
pop
popl
mov
mov
or
jg
or
divl
cmpsb
lret
jo
repnz
cs
cld
mov
in
clc
std
lret
jge
lret
sub
sbb
loope
rcr
imul
sub
dec
dec
ja
int3
repz
adc
mov
cmpsl
mov
jg
pop
inc
hlt
rcr
and
dec
insb
imul
jne
repnz
mov
hlt
mov
xchg
cmp
fcoms
jno
divb
loopne
lret
std
jp
hlt
mov
inc
jne
es
adc
idivb
push
jnp
mov
jge
ljmp
mov
dec
pop
js
out
insb
push
daa
vmovd
adc
mov
xchg
inc
hlt
nop
daa
cmp
rcll
hlt
push
lahf
gs
adc
hlt
arpl
sub
push
fmull
mov
cs
sub
cmp
cmpxchg
pop
cwtl
jp
cmp
mov
filds
out
sbb
jo
or
mov
fldl
lock
jecxz
sub
xor
icebp
test
pushf
jnp
xchg
fiaddl
fsubrl
scas
shll
cmp
into
mov
adc
jb
std
pop
and
lret
mov
cmc
loopne
insl
out
and
fcoml
mov
pop
xchg
cmpb
dec
ja
pop
je
js
or
dec
jno
adc
jmp
add
cmp
adc
xchg
cmc
push
addl
pop
hlt
imul
stc
mov
iret
cmp
jp
xchg
sub
and
ret
add
mov
hlt
mov
inc
sbb
push
lods
sbb
mov
fcomip
into
pushf
lods
mov
xchg
jge
mov
xor
push
xor
pop
arpl
cmp
movsl
push
push
imulb
and
movsl
hlt
mov
icebp
push
xor
hlt
sbb
in
cmp
lock
xchg
aas
pop
mov
out
cmpsb
lods
shlb
jae
sti
jnp
mov
movsl
aas
nop
ret
gs
aam
aad
xchg
out
imul
mov
jg
sbb
and
mov
push
cli
pop
and
idivl
out
sar
pop
add
add
fs
adc
xor
adc
inc
pop
pop
mov
hlt
push
push
ljmp
shl
movsb
pop
hlt
sub
mov
hlt
inc
and
andb
xor
pop
dec
popf
hlt
add
mov
nop
mov
scas
lods
mov
in
out
ljmp
fcmovu
aas
cmp
hlt
and
push
test
hlt
nop
lahf
lock
out
out
lods
repz
mov
lea
int
and
hlt
xchg
lods
stos
loop
mov
jecxz
fs
hlt
iret
popf
mov
test
jb
pop
sbb
hlt
pusha
adc
mov
sub
lds
cmp
jp
repnz
mov
push
xor
stos
mov
jl
push
lcall
mov
or
mov
jmp
js
jmp
hlt
adc
xchg
rcl
orl
push
popf
and
leave
push
hlt
imul
mov
xor
sub
xorb
imul
add
stos
inc
test
push
inc
jnp
dec
ret
or
das
add
push
adc
xchg
daa
xor
in
sub
gs
fsubr
ljmp
outsb
and
push
dec
fwait
div
cmp
scas
insb
sub
dec
nop
loop
out
lahf
mov
movsb
adc
mov
stos
sti
xor
fs
test
jo
and
lea
sbb
fwait
jo
ss
test
hlt
lods
mov
mov
sbb
fmull
lcall
jno
aam
fnstsw
stc
sbb
pop
jns
hlt
mov
lods
loopne
hlt
mov
adc
or
or
repz
and
push
out
cltd
hlt
xor
or
loop
sub
sbb
xor
mov
mov
ret
hlt
outsl
mov
adc
jge
int3
mov
mov
hlt
adc
bound
rcll
mov
and
push
jo
aam
inc
hlt
jb
add
push
push
add
sub
negl
popf
ret
addr16
movsl
hlt
and
scas
pop
and
jb
lcall
mov
sub
bound
mov
xchg
xchg
push
xor
xchg
int3
hlt
jp
jmp
push
inc
mov
hlt
lcall
insb
hlt
in
and
icebp
jge
jecxz
inc
sub
pop
leave
insl
subl
test
addr16
sbb
push
scas
sub
adc
addr16
es
hlt
std
cmp
movsb
fs
stos
pop
jg
push
inc
sbb
out
cltd
negb
mov
notb
xor
aad
jne
and
js
loop
or
sub
add
pop
cli
divb
shlb
sbb
xchg
ret
outsb
xchg
int3
adc
div
cmp
es
xor
push
popf
js
bound
stc
fs
and
and
push
stos
ret
stos
cli
ss
negl
jae
popa
hlt
mov
mov
in
hlt
xlat
xor
mov
xchg
or
adc
in
adc
dec
divb
or
jl
sub
xchg
xchg
lods
jbe
push
sahf
hlt
insb
cmp
mov
hlt
push
loopne
mov
hlt
pop
outsl
push
xchg
xchg
cwtl
mov
andl
mov
add
loop
int3
mov
pop
sub
xchg
jno
mov
dec
hlt
push
mov
push
or
scas
std
div
xchg
cmpsb
stc
mov
loop
aam
mov
hlt
mov
adc
mov
hlt
rorl
mov
ss
lods
dec
je
or
push
testb
cwtl
in
out
js
ds
jg
cmc
sar
stos
jae
sahf
fiaddl
shlb
fsubr
jbe
imul
in
pop
jnp
xchg
cltd
scas
mov
push
mov
push
lea
imul
clc
jmp
repz
rcr
pop
shl
add
inc
pop
sub
or
adc
inc
pop
in
cmp
mov
jae
dec
push
mov
ret
inc
sub
je
push
mov
jae
mov
hlt
aad
repnz
insl
notb
xlat
xchg
adc
loope
cmp
xor
mov
js
add
or
mov
hlt
movsl
pop
movsb
pusha
mov
stc
ljmp
cmp
mov
cmp
sub
hlt
das
push
sub
es
adcb
sub
popf
fstp
fldenv
cmp
fimull
mov
js
jnp
push
hlt
les
adc
sbb
stos
clc
loope
jl
cli
aas
pusha
mov
hlt
loop
nop
mov
ret
push
and
in
pop
adc
cmp
xchg
test
mov
mov
and
lahf
or
dec
pop
loopne,pt
je
sbb
cmp
cltd
je
lock
pop
pop
mov
jmp
sub
jg
mov
and
scas
xorl
hlt
sub
cmp
sbb
test
imul
mov
hlt
and
or
into
xchg
hlt
inc
outsl
jo
out
cltd
pop
sar
and
xchg
lods
or
stos
mov
fs
dec
mov
hlt
test
add
hlt
and
add
push
jl
hlt
push
pop
push
add
jp
pushf
inc
out
in
sti
hlt
jnp
mov
lock
lea
push
rolb
inc
xchg
cmp
mov
dec
mov
std
inc
mov
shl
subl
ret
push
nop
testl
mov
ja
mov
dec
add
neg
lahf
test
repz
inc
aas
ss
jbe
stos
xchg
hlt
fcmovb
fs
push
sub
mov
dec
xchg
pop
shll
mov
aad
clc
mov
and
mov
pop
adc
ss
hlt
and
and
jne
and
inc
mov
imul
pop
hlt
sbb
cli
lahf
stos
shrl
hlt
xorb
mov
and
add
stc
adc
sahf
sbb
push
int3
inc
and
in
mov
es
out
out
hlt
outsl
xchg
inc
dec
mov
pop
hlt
push
in
adc
mov
mov
mov
mov
cmpsl
mov
xlat
dec
fs
lock
mov
push
dec
push
aam
imulb
aaa
cmc
outsl
add
dec
jp,pn
mov
adc
scas
hlt
shll
pop
push
loopne
lods
push
addb
mov
imull
ja
dec
jne
testb
data16
hlt
test
loopne
sbb
adc
jp
sub
xor
mov
add
nop
shlb
hlt
jle
xchg
sub
ss
push
sbb
mov
sbb
pop
hlt
aam
dec
push
movsb
jecxz,pn
out
mov
mov
hlt
outsb
sbb
stc
cwtl
sub
shlb
ds
lret
nop
jno
out
jb
sbb
xchg
mov
push
hlt
push
cld
mov
jge
push
push
xchg
xchg
lock
mull
push
cmpsl
into
push
or
and
jae,pn
or
sbb
add
adc
mov
inc
ret
jp
lret
pop
lods
pop
outsb
push
lahf
lea
std
pushl
pushf
push
stos
stc
clc
hlt
mov
int
daa
sub
not
pop
hlt
cs
dec
cmp
dec
dec
hlt
or
cmp
pop
hlt
add
mov
inc
mov
shl
sbb
aam
iret
fcmovne
or
decb
pop
arpl
hlt
int3
ficoms
pop
or
xchg
push
xchg
cld
push
or
mov
cmpsb
repz
stos
in
hlt
fdivrl
das
pop
xor
hlt
iret
mov
ds
roll
mov
dec
push
repz
push
cmp
mov
jg
mov
lods
add
hlt
jp
gs
jge
hlt
cmp
or
sub
jp
cmp
hlt
mov
cmp
adc
imul
call
mov
sub
jge
xlat
mov
jae
cmp
hlt
sub
in
jns
sbb
xchg
scas
into
loop
mov
cmp
fwait
xchg
shrb
sbb
sbb
inc
push
cmp
pusha
jecxz
and
lds
test
out
cmp
mov
add
cs
push
in
sbb
jg
pushf
push
fidivrl
mov
call
ljmp
lods
sbb
adc
dec
add
testb
mov
fcom
jl
mov
popf
js
mov
in
insb
jge
sbb
mov
pop
and
cmc
mov
adc
hlt
lods
sbb
rorl
int3
lret
test
rcll
push
mov
pop
sbb
or
sbb
cmp
pop
cmp
sub
pop
int
and
cmp
hlt
adc
lds
add
mov
movsl
out
cmp
sub
xchg
pushf
notl
xor
cmova
insb
pop
pop
cli
hlt
shl
xor
jns
scas
jmp
dec
adc
or
popf
cmc
mov
inc
dec
rcll
and
inc
lods
push
xchg
nop/reserved
scas
out
imulb
cmp
std
sbb
adc
ror
mov
fwait
stos
hlt
mov
fsubrs
dec
arpl
mov
sbb
adc
inc
xchg
push
aam
jmp
hlt
lods
arpl
into
hlt
jo
inc
loopne
mov
jecxz
xchg
fs
add
in
add
sub
mov
into
add
jns
and
ja
movsl
in
out
inc
out
adcl
or
inc
jge
jbe
ficomps
lcall
imul
mov
hlt
outsb
and
sub
adc
xchg
js
and
cld
xor
icebp
pusha
inc
int3
jnp
call
mov
lahf
pop
cmpsb
gs
ret
ja
mov
push
mov
xchg
outsl
hlt
nop
cld
ss
lods
loope
inc
out
xchg
fnstcw
fnstsw
jne
hlt
cmp
fdiv
or
fldenv
mov
test
add
cltd
and
adc
imul
mov
jbe
push
hlt
pushf
mov
and
insl
hlt
xchg
cmp
hlt
xchg
mov
jg
stos
dec
and
hlt
fsts
mov
pop
cmpsl
sub
push
popa
inc
hlt
sub
aas
test
push
and
jbe
sahf
sub
mov
or
mov
add
push
clc
or
mov
subl
aam
insb
je
add
or
mov
scas
sub
hlt
icebp
and
cmpsl
iret
ret
lcall
push
rol
movl
jno
or
test
scas
hlt
daa
pusha
sbb
dec
hlt
arpl
sti
fistl
mov
jecxz
inc
sub
out
hlt
jne
loope
stos
imul
les
cs
jecxz
dec
mov
insb
bound
pop
xbegin
mov
jg
jmp
ror
jbe
hlt
fisttps
sarl
mov
cmp
cmp
mov
or
int
adcb
jl
jae
in
hlt
cmp
pop
push
ret
or
cmp
nop
sbb
cmpsb
mov
lods
das
in
hlt
cmp
js
mov
mov
pushf
jge
test
outsb
hlt
out
cmpsl
loopne
and
nop
hlt
push
push
and
jecxz
cwtl
mov
les
dec
mov
pop
add
xchg
test
ds
xlat
and
jne
in
je
loopne
inc
ljmp
movsl
mov
cld
out
sbb
insl
stos
mov
fidivrl
or
scas
cmc
dec
push
mov
stc
pop
mov
loope
sub
sbb
adc
pop
jmp
mull
aam
movsb
mov
pop
hlt
insb
push
xchg
aad
xorl
dec
hlt
jne
aam
cmp
sbb
pop
mov
lds
ret
dec
or
push
jmp
stos
mov
xchg
add
fs
clc
out
inc
stos
dec
sahf
int3
xlat
xor
gs
cmc
test
hlt
mov
adc
adc
int3
sbb
mov
pop
aas
cmpb
fs
aad
hlt
push
push
mov
hlt
and
mov
pop
fs
hlt
int
fdivrs
mov
decb
push
dec
lds
inc
aad
decl
push
add
icebp
adc
das
sbb
aad
jbe
mov
shll
arpl
jbe
mov
mov
test
adc
stos
jb
hlt
movsl
mov
jge
imul
bnd
leave
and
hlt
xor
xor
jae
sahf
imul
xchg
pop
inc
ja
jne
stc
and
jnp
cmp
addl
hlt
adc
das
or
and
sub
hlt
bound
pusha
jnp
sahf
mov
or
outsl
lret
lahf
mov
movsb
xor
clc
hlt
imul
lock
xchg
hlt
js
repnz
sar
sahf
mul
out
imul
iret
adc
xchg
xchg
sub
mov
hlt
xchg
imul
xor
shl
das
outsl
fdivp
adc
insl
sti
push
aad
hlt
push
lcall
out
idivb
ljmp
lods
hlt
test
je
mov
imulb
push
icebp
call
and
inc
add
jmp
pop
fs
stc
jmp
sbb
sar
insb
mov
cmpl
jge
sbb
clc
mov
sahf
stc
std
fs
and
je
xor
dec
or
sbb
dec
xchg
pop
rolb
pop
jo
pop
push
jns
lock
loopne
mov
dec
loop
jae
leave
into
hlt
jmp
cltd
gs
sar
pop
or
pushl
imul
and
insb
mov
faddp
hlt
mov
xor
out
sub
sub
dec
jne
add
mov
sub
jle
cmp
jg
outsb
std
cmp
push
shrb
scas
jne
insl
adc
hlt
mov
push
and
inc
inc
hlt
push
dec
or
leave
sbb
call
hlt
nop
mov
aad
adc
mov
popf
in
or
rorl
add
pop
or
cmc
add
xor
out
mov
int3
cld
je
sub
repnz
cmpsl
shlb
sbb
add
jmp
repz
cli
cmc
stos
add
aad
hlt
sbb
cwtl
mov
sbb
sub
sub
sub
add
movsb
add
cmp
mov
test
lods
and
call
add
fdivrl
pushf
add
aam
pop
push
push
into
hlt
out
shrl
repnz
mov
xchg
lret
repz
pop
cmp
sbb
inc
add
scas
cmc
mov
adc
aas
jg
dec
push
in
xchg
jle
and
ret
mov
or
mov
fnstcw
pop
pop
pop
lret
popf
out
jo
mov
push
or
add
sub
jns
fldcw
dec
std
xor
hlt
push
fldt
sbb
mov
aam
mov
std
fdivrs
pop
fisubrl
hlt
iret
or
mov
outsb
int
shlb
push
addl
mov
inc
push
mov
les
jae
stos
cli
in
cmpsb
and
fxtract
jnp
rol
inc
pop
dec
xchg
hlt
std
lgs
hlt
adc
jge
add
hlt
in
mov
daa
xchg
pop
mov
lods
add
push
or
hlt
dec
into
loope
xor
cli
cmpsb
out
hlt
mov
jae
mov
mov
xor
push
imul
stos
jne
and
scas
push
outsb
lock
add
sbb
mov
adc
mov
inc
hlt
mov
jecxz
out
mov
in
add
fbstp
stc
add
sub
pushf
sti
mov
mov
shrl
test
stos
add
inc
or
push
mov
loop
xorl
jle
insb
call
add
hlt
out
dec
dec
and
leave
enter
pop
cmc
repnz
out
lret
cld
in
stos
xor
and
jae
ret
inc
pop
fildl
or
ror
hlt
scas
mov
aas
hlt
jno
push
push
inc
xor
sbb
mov
imull
leave
hlt
sub
outsl
adc
sub
hlt
mulb
lret
test
jl
mov
mov
jnp
inc
jno
hlt
dec
roll
loope
adc
rorb
hlt
mov
xor
clc
loope
xchg
cli
mov
je
jae
int3
push
pushf
jno
xchg
vmovdqa
imul
lock
aad
xor
in
cli
jecxz
hlt
std
test
sub
ljmp
pop
jo
cwtl
push
dec
jl
cmpsl
push
pop
daa
jne
mov
notl
add
hlt
lcall
loop
cmpsl
hlt
imul
sub
xor
sbb
rep
dec
scas
outsl
not
dec
rclb
inc
rclb
push
push
push
insl
hlt
push
std
mov
shl
sub
sub
hlt
mov
inc
jl
jecxz
mov
data16
loop
scas
add
nop
cs
sub
xor
fs
hlt
jecxz
cmc
lea
out
cmp
hlt
jno
dec
pop
ss
fisttps
cvtps2pi
hlt
leave
int3
hlt
clc
mov
jle
loop
hlt
dec
into
cmp
hlt
addr16
push
fcompl
arpl
repnz
shl
cmp
adc
xchg
ret
in
out
fnstenv
sbb
das
or
bound
ficomps
fs
lret
xchg
xor
inc
dec
fsubrl
add
cli
push
repz
cld
mov
jbe
mov
pop
inc
test
hlt
inc
imull
stc
xlat
dec
lret
lods
clc
or
push
jbe
fsubrl
jns
movsb
mov
stc
and
test
xor
sub
hlt
arpl
adc
add
hlt
cmp
pop
sub
ljmp
pusha
cmp
lcall
adc
je
mov
jo
adc
pop
insb
les
je
jns
test
int
fwait
inc
adc
sahf
push
sub
xchg
jge
pusha
loope
inc
hlt
sub
inc
insb
loopne
push
das
mov
nop
insl
xchg
hlt
loop
inc
push
popf
mov
jmp
inc
xchg
push
and
inc
mov
jo
cmpsb
loopne
stc
addr16
lret
mov
pop
into
in
in
jmp
sub
lock
push
mov
into
push
scas
shl
jbe
dec
nop
sbb
jo
loop
hlt
loope
jge
sub
dec
leave
pop
push
mull
cmpsb
shlb
cs
adcb
mov
xor
rcrb
pop
or
add
cli
push
lret
in
fs
js
hlt
fcompl
cmp
frstor
pop
lea
mov
xchg
inc
leave
hlt
push
adc
mov
push
lock
insb
out
mov
hlt
xchg
or
cmp
hlt
mov
xchg
pop
pop
hlt
jecxz
aaa
lods
out
xchg
movsl
lods
and
bound
mov
pop
cmc
hlt
sbb
clc
cmp
loopne
stc
fisubl
xlat
mov
add
js
leave
cmp
pusha
hlt
subb
lret
sub
hlt
xchg
int3
shlb
popa
cld
mov
hlt
xchg
inc
insb
jecxz
int
adc
xor
push
loop
fs
fisubs
std
aas
imul
imul
xchg
xor
hlt
mov
aad
fs
arpl
hlt
push
out
iret
push
into
sbb
imul
cli
pop
fnsave
sbb
cmp
test
orb
dec
dec
cmpsl
cmc
push
pusha
mov
mov
jp
mulb
fwait
xchg
pop
dec
pop
lahf
or
or
lcall
hlt
sub
jno
fstps
into
push
stc
fcmovnbe
leave
cmp
xchg
movsb
lret
in
pop
notb
xlat
iret
dec
nop
ret
hlt
push
movsl
cli
pop
mov
cmpsl
inc
shl
xchg
mov
jbe
outsl
sbb
sub
mov
ret
ljmp
iret
xchg
sbb
hlt
inc
adc
outsb
jo
mov
sbb
notb
xchg
hlt
imul
mov
jns
fdiv
scas
adc
mov
jg
jbe
pop
or
jle
cltd
or
leave
mulb
inc
sub
inc
cli
hlt
mov
jae
lret
cwtl
test
cmc
pop
cmp
hlt
nop
aas
pop
mov
mov
mov
jmp
sbb
add
das
and
in
dec
insl
hlt
lea
jbe
inc
push
scas
cmp
testl
divl
test
testb
in
and
hlt
and
jns
mov
pop
aas
push
push
or
negl
pop
and
fidivrl
repnz
aad
movsl
sub
pop
pop
push
xchg
int
shl
push
inc
movl
hlt
addb
imul
scas
in
mov
jb
push
push
jo
push
mov
mov
jno
mov
fsubr
sub
movsb
mov
adcb
nop
mov
sahf
in
cld
add
cmp
pop
repz
imul
rcr
das
es
into
test
hlt
jg
lock
jns
hlt
cltd
jbe
jl
stc
dec
mov
jmp
popf
iret
dec
outsb
insb
hlt
scas
xchg
xor
jge
repz
ss
sarl
imul
fst
and
xchg
push
testl
hlt
aas
push
inc
inc
insl
adc
rolb
outsl
xchg
dec
fists
pop
dec
lsl
dec
xor
sub
cmc
test
out
hlt
ljmp
mov
sub
pusha
cli
jns
sbb
stc
sub
int
xchg
clc
insl
stos
jge
gs
enter
mov
cmp
lret
hlt
or
je
sub
lret
dec
negb
sbb
jl
mov
push
dec
das
insb
hlt
in
adc
mov
dec
fsubrl
ds
aaa
inc
iret
sub
hlt
imul
xor
adc
ja
dec
repz
inc
sbb
mov
pop
jnp
cmp
cmp
or
push
fadd
outsl
mov
mov
ss
hlt
push
rclb
aad
inc
sbb
lock
adc
stc
hlt
add
sub
mov
ja
test
ss
sbb
notb
fcomps
hlt
sub
into
push
shl
and
push
fimuls
std
mov
push
jmp
mov
gs
add
cwtl
inc
fdivrs
int
je
test
ret
shll
les
test
idiv
pop
sbbl
adc
fistpll
stos
inc
lret
pop
loope
lea
mov
sub
push
fisttps
sub
and
popa
arpl
fidivl
cmp
pop
outsl
hlt
pop
or
mov
cmp
cmp
cmc
sub
sub
pop
divl
fwait
jne
xchg
not
iret
hlt
xlat
mov
inc
outsb
inc
les
lret
nop
aas
out
lret
sahf
aas
mov
es
cld
hlt
dec
bound
ret
inc
test
jae
scas
jae
cmp
mov
fnsave
aad
push
cli
leave
repz
inc
in
cld
hlt
xchg
xchg
dec
pop
or
mov
push
adc
out
imul
jb
sub
adc
dec
lock
lods
hlt
mov
xchg
mov
sub
mov
aad
hlt
mov
jl
movsb
js
sub
sbb
xlat
imul
mov
mov
push
dec
hlt
add
sahf
sti
or
loope
or
xchg
stc
shufps
nop
jo
je
repnz
cmp
incb
out
add
xchg
jecxz
jb
sbb
push
xchg
hlt
sub
nop
mov
jmp
mov
test
sbb
dec
rclb
mov
fnsave
mov
hlt
push
sbb
mov
jmp
cmp
adc
inc
cmp
xchg
popf
add
bswap
push
sub
and
sbb
nop
sbb
lret
cmc
daa
inc
push
out
sti
hlt
add
cli
inc
add
push
and
cmp
pushf
int
aaa
cmpsb
push
dec
hlt
jnp
stos
cmp
mov
cwtl
sbb
hlt
out
add
push
push
pop
hlt
test
mov
hlt
loop
pop
mov
aas
out
lock
push
adc
dec
xchg
hlt
lods
mov
out
daa
das
rclb
adc
sub
mov
mov
adc
and
out
dec
out
mov
aam
push
cmpsl
bound
ja
pop
dec
gs
je
repz
hlt
push
sbb
imul
lret
push
or
cs
sub
aad
in
inc
lods
hlt
scas
lret
or
test
fnstcw
mov
pop
mov
ror
inc
popf
cmc
movsl
mov
dec
aas
scas
xchg
arpl
fwait
sbb
popa
bnd
out
js
pushf
cmpsl
repz
lods
xchg
hlt
fstl
mov
push
jbe
mov
imul
push
ljmp
hlt
xchg
fmull
imul
fstpl
testb
push
lods
testl
xchg
lahf
mov
cmp
das
push
test
push
jg
repz
hlt
jae
stos
cltd
xchg
test
hlt
jp
or
int3
roll
cmp
sbb
fwait
xchg
out
mov
fs
sbb
icebp
out
sub
int
out
stos
mov
push
dec
cwtl
ficomps
sbb
mov
cmpsb
jle
fcmovb
push
scas
mov
std
hlt
popa
sbbb
je
dec
hlt
sbb
jle
mov
and
mov
je
movsl
fisubrl
hlt
fnsave
adc
jo
lahf
bound
scas
imul
das
gs
shlb
js
or
or
cmpsb
xchg
pusha
inc
aas
jb
aad
sbb
iret
lods
setae
or
fcomip
outsb
aad
test
cmp
inc
mov
int3
loop
xchg
mov
aas
in
jg
push
jno
loope
mov
sub
hlt
test
rorb
in
push
mov
rcll
ret
xor
pop
dec
jae
push
mov
cld
jne
adc
add
jg
aam
leave
int3
rolb
es
and
adc
les
pop
fdivl
xchg
jae
mov
lods
xchg
mov
mov
cmpsb
lock
push
aam
pop
sbb
in
jbe
inc
fidivs
sub
mov
addr16
or
aad
hlt
fildl
pcmpeqw
int3
jno
js
jp
lret
cmp
mov
inc
push
mov
sbb
mov
hlt
xlat
xor
repnz
inc
lret
mov
xchg
push
jne
adcl
cld
imul
test
andb
scas
scas
fdivrp
hlt
mov
and
push
fadds
cmp
adc
scas
int
add
stc
push
jp
aad
hlt
sub
push
ss
testl
xchg
leave
add
hlt
ds
adc
jbe
aas
outsl
pop
pop
in
iret
je
xchg
xor
add
jge
js
jb
aam
fisubs
lds
mov
sbb
cmpsb
mov
pop
iret
test
shll
outsb
sub
push
ficompl
or
jno
or
imul
inc
inc
xor
dec
pusha
cld
decb
std
test
jno
push
add
cmp
jnp
mov
nop
imul
xor
dec
hlt
push
jne
mov
in
sub
js
imul
and
push
sti
out
outsl
hlt
pop
int3
or
inc
mov
adc
clc
mov
cmp
push
mov
pop
mov
test
setp
push
je
rcrl
fimuls
loop
hlt
fnsave
in
aam
xor
or
cmp
scas
xchg
xor
out
jae
shl
int3
sbb
mov
sahf
frstor
jge
xor
mov
mov
loope
xchg
mov
dec
into
hlt
fbstp
add
pop
jo
push
in
xchg
mov
lods
ret
inc
or
sub
mov
loope
mov
test
mov
hlt
adc
push
mov
lahf
aaa
test
xor
adc
xlat
pop
xchg
xchg
dec
cmc
shll
or
stos
xchg
jbe
push
mov
hlt
shrl
sahf
pushf
fmul
cli
daa
dec
fcmovne
lods
les
ret
mov
push
iret
and
push
bound
xor
push
insl
push
lret
dec
enter
sub
or
push
ret
mov
cwtl
adc
push
xchg
add
jbe
in
mov
mov
lods
fdiv
jnp
scas
pushf
sub
cltd
seto
je
cmpsl
jle
lods
add
jg
cmc
dec
xor
scas
mov
pop
hlt
outsl
data16
fistpll
movsb
push
addr16
xor
hlt
test
ljmp
pusha
dec
mov
jecxz
hlt
jo
or
scas
hlt
pop
clc
out
icebp
and
ret
jae
js
imull
iret
hlt
cmp
clc
cmp
hlt
loope
les
and
ret
push
xor
divl
fimuls
cmp
mov
mull
arpl
push
lock
xchg
hlt
jmp
mov
pop
adc
fwait
hlt
adc
add
hlt
rcl
and
push
push
mov
dec
imul
or
je
dec
cltd
mov
int3
jp
push
pop
mov
mov
sub
dec
js
int
and
loop
in
xor
or
movsb
in
negb
sub
pop
dec
mov
xchg
daa
jne
jns
cli
imul
mov
aaa
push
mov
es
adcl
popf
push
add
stos
adc
jge
xchg
sbb
fstl
cmp
hlt
pop
popa
jb
sub
xchg
into
repz
notb
arpl
mov
xor
xor
fwait
mov
ss
xor
jecxz
out
hlt
lds
push
in
xor
pop
rorb
cli
or
ljmp
and
hlt
pop
shr
fldenv
dec
ljmp
jge
mov
out
lahf
ja
push
push
inc
sbb
adc
movsb
addr16
ds
popf
mov
pop
sub
sub
frstor
dec
sbb
jmp
push
pushl
hlt
popa
push
push
xchg
outsb
out
call
hlt
mov
push
or
jae
int3
mov
dec
mov
pop
mull
out
gs
hlt
inc
movsb
xor
xchg
xchg
hlt
push
sbb
into
mov
pop
lahf
hlt
fisttpll
mov
push
push
lds
dec
stos
test
xchg
call
dec
ret
cmp
push
mov
or
das
aaa
adc
push
mov
push
mov
into
cmp
hlt
loopne
lcall
clc
mov
jnp
mov
imul
adc
leave
sbb
negb
cmp
or
icebp
hlt
adc
and
mov
inc
ret
imul
pop
idiv
or
scas
pusha
push
mov
hlt
leave
dec
push
jg
or
mov
aas
cmc
cld
fwait
sbb
push
push
in
push
pop
cmp
repnz
push
mov
aad
outsb
add
dec
jp
ret
xchg
mov
adcb
push
xchg
divb
hlt
imul
hlt
xor
stos
pusha
jmp
js
sbb
pop
cltd
insl
mov
lahf
jbe
inc
mov
repz
mov
xchg
and
sbb
dec
add
or
hlt
scas
pop
subl
xor
mov
hlt
aad
pop
fdivrs
mov
adc
or
dec
hlt
repnz
push
pop
xchg
lret
loop
pop
imul
mov
mov
cld
hlt
test
add
jns
mov
out
testb
sahf
imul
push
push
push
hlt
mov
jp
jno
and
sub
adc
inc
pop
mov
jns
stos
inc
mov
inc
hlt
cmp
sbb
cli
xchg
mov
and
sub
in
fadds
jmp
popl
hlt
jbe
movsb
cmp
pop
syscall
outsl
mov
test
xchg
data16
hlt
js
dec
inc
out
push
out
cmp
shll
into
xor
scas
sbb
lret
mov
jbe
fadds
lret
sti
push
mov
out
hlt
add
inc
jl
jbe
mov
mov
mov
and
mov
pop
jo
push
add
mov
ficomps
xor
xchg
hlt
dec
sbb
jnp
loope
out
cmp
push
fnsave
jo
lods
mov
xchg
and
hlt
ret
rcrl
arpl
xor
outsb
aas
test
hlt
repz
fnstsw
dec
pop
pop
xor
adc
andb
insl
aas
inc
fs
dec
pop
push
fwait
push
jae
hlt
xor
pop
cmp
faddl
fadds
daa
mov
mov
add
or
dec
dec
adc
mov
mov
inc
test
fstpl
mov
das
and
push
mov
hlt
sub
and
movsb
loopne
or
dec
push
shll
pushl
hlt
outsl
or
xchg
jl
in
hlt
lcall
dec
hlt
ss
add
hlt
xor
jl
lock
ds
cmp
clc
adc
dec
idiv
pushf
inc
pop
push
mov
ret
lret
sbb
cmp
xchg
xchg
jne
popa
jge
dec
dec
idivl
xor
adc
inc
mov
lods
aas
push
sar
into
and
pop
inc
push
pop
hlt
sub
stos
loopne
fisubrs
push
int
hlt
mov
mov
jns
insb
cmc
cmp
icebp
sub
adc
mov
and
imul
push
dec
subb
sub
xchg
loop
test
test
xor
and
jae
cmpsl
hlt
mov
sti
push
mov
dec
xchg
hlt
jg
int3
adc
stos
std
aad
sbb
in
adc
cwtl
sbb
push
pop
ss
mov
dec
cld
inc
jo
hlt
jp
rclb
fwait
mov
insb
push
push
dec
push
aas
mov
adc
into
jae
inc
push
hlt
out
cmpsb
out
adc
ds
sahf
hlt
push
leave
notb
sub
insb
cmp
adc
lds
jno
mov
jg
xor
ret
hlt
dec
out
rorb
into
ljmp
pushf
jecxz
fsubrs
mov
mov
lret
sbb
imul
dec
sbb
add
cmp
hlt
pop
push
in
mov
hlt
sub
mov
mov
add
cmp
sbb
push
inc
hlt
ds
mov
test
jmp
jo
pop
pop
imul
mov
in
out
dec
sahf
cmpsb
hlt
dec
xor
aad
nopl
ret
cli
js
fcomp
adc
lods
sbb
jl
pop
mov
hlt
jo
mov
es
hlt
jnp
ljmp
hlt
cli
test
cmp
hlt
testb
mov
mov
outsb
jg
aas
out
lcall
mov
lock
dec
lds
hlt
dec
push
cmpb
mov
jne
jae
inc
popf
cwtl
hlt
add
test
sbb
outsb
cmp
pop
mov
push
gs
mov
or
and
pop
loopne
add
push
js
or
mov
push
jb
lds
xorl
pop
divb
out
hlt
rolb
and
hlt
mov
pop
pushf
mov
mov
cmpsl
daa
push
test
mov
loop
scas
add
adc
outsl
aam
and
jmp
mov
repnz
or
int
pop
mov
jae
aad
adc
iret
in
hlt
cmp
xor
lahf
jno
sub
hlt
aam
rcr
sub
iret
icebp
testb
jp
ret
imul
mov
lea
aas
and
scas
sub
xchg
push
aad
jb
repnz
iret
lds
rcll
sub
ja
hlt
lods
jmp
jecxz
jbe
pop
or
fisttps
adc
movsl
sbb
test
xchg
frstor
sti
and
push
adc
pop
das
negb
hlt
push
sub
aam
push
sbb
mov
fiaddl
jg
jmp
cmc
sbb
repnz
xchg
in
sbb
jns
cli
pop
notl
loop
mov
js
add
lds
cmp
mov
stc
repnz
push
adcb
jmp
adc
aam
sarb
ljmp
push
xor
hlt
jmp
sbb
aas
out
pusha
sub
ficoml
mov
dec
lea
mov
push
imul
leave
loopne
and
cwtl
hlt
xchg
orl
test
aad
pushf
jp
adcb
hlt
js
stos
cli
and
fnstcw
inc
mov
cmpsl
hlt
fidivl
ret
xor
inc
hlt
mov
and
jns
add
mov
hlt
loope
push
inc
aam
inc
dec
pop
setbe
or
ret
mov
cmc
pop
xor
lea
jmp
mov
test
ss
fcomip
sahf
lods
and
gs
neg
scas
inc
fidivl
mov
push
pop
inc
hlt
and
jmp
pop
outsl
lds
movq
daa
je
sbb
hlt
mov
rcll
sbb
fildl
and
xchg
subb
adc
outsl
in
sarb
fdivrs
std
mov
aaa
dec
sbb
and
mov
sahf
dec
sub
loope
mov
lods
test
outsb
imul
inc
lcall
jae
mov
shl
fcompl
insb
mov
call
pop
arpl
dec
push
sub
scas
rol
cmpsb
xchg
es
hlt
inc
ljmp
addr16
scas
add
pop
call
repz
test
cld
test
mov
mov
pop
xchg
push
js
cmp
pop
arpl
rcr
loop
lret
mov
icebp
push
push
mov
cmpsb
push
je
adc
mov
hlt
adc
out
jp
rorl
xchg
and
or
inc
mov
hlt
jge
lods
movsl
jne
mov
jle,pn
imulb
out
mov
cltd
jno
adcl
jl
leave
std
jo
movsl
xor
pop
mov
mov
xorl
add
cmp
ds
sbbb
in
add
out
or
push
hlt
push
mov
rclb
mulb
cmp
sbb
push
pop
testb
je
inc
lret
cmp
in
hlt
mov
test
out
hlt
sub
inc
inc
ss
dec
or
imul
rcrb
test
cmp
hlt
in
cltd
dec
aad
loopne
hlt
dec
mov
push
insb
data16
or
in
pop
push
sbb
xchg
xchg
push
mov
push
out
and
jl
jecxz
mov
icebp
fisttpll
xor
mov
adcl
pop
jg
into
inc
imulb
rolb
jmp
hlt
es
jl
jge
sbb
into
cwtl
adcl
cmp
jbe
jne
insb
push
fs
fnstsw
mov
out
jp
testb
les
dec
push
mov
imul
xor
hlt
icebp
int
ffree
jl
jecxz
lods
or
hlt
ljmp
mov
add
xor
mov
clc
adc
insb
or
add
jb
xchg
jle
hlt
jb
es
xchg
sti
hlt
testl
int3
imul
hlt
adc
fucomp
pop
sbb
sbb
add
mov
sub
sub
testb
hlt
push
outsl
out
mov
int
cmpxchg
jae
hlt
fisubl
xchg
inc
out
mov
in
sbb
in
into
imul
sub
add
sbb
lea
adc
mov
aaa
adc
hlt
jle
ror
xchg
in
hlt
sar
stos
xor
xchg
mov
and
mov
xor
mov
lods
mov
cmpsb
out
jnp
sub
fisttpl
hlt
jmp
cmpsl
jo
stc
hlt
lods
mov
adc
hlt
push
xor
adc
dec
xchg
xchg
lods
insl
out
gs
push
aam
nop
xlat
inc
mov
mov
mov
hlt
sbb
inc
mov
push
push
div
cmp
cwtl
ja
sbbl
movsl
out
sbb
call
div
jno
mov
popa
cmpsb
sub
sarl
sti
mov
xor
mov
mov
push
sub
add
movlps
mov
or
inc
jecxz
mov
es
sub
lahf
call
decl
scas
and
outsl
mov
test
std
negl
mov
push
mov
push
mov
call
sbb
loop
lea
hlt
jo
sub
aas
or
cmp
insl
add
sbb
xor
jo
mov
cmp
sbb
or
xor
hlt
test
sub
subb
hlt
fiaddl
sbb
and
cli
dec
cmpsb
sbb
ss
scas
daa
xchg
fs
xor
fnstcw
mov
inc
lds
lods
add
adcb
negl
scas
inc
loope
pop
outsl
outsb
sti
push
push
hlt
adc
hlt
mov
ljmp
sti
sbb
and
es
hlt
pop
sub
cmp
jl
sbb
inc
xor
inc
sahf
bound
out
fstl
scas
movsb
dec
or
hlt
leave
sub
sbb
mov
testb
mov
jns
daa
in
insb
shrl
push
push
leave
sbb
mov
out
jge
incl
shlb
jno
adc
add
loope
mov
clc
or
lds
fldenv
shll
sbbb
lcall
test
out
dec
lret
and
jecxz
hlt
sbb
jmp
loope
js
jns
in
pushf
repz
hlt
cltd
push
cwtl
leave
test
mov
imull
icebp
sbbl
inc
pop
push
outsl
imul
sub
ja
xchg
int3
push
hlt
stos
xchg
mov
repz
adc
adcl
jg
fs
push
cld
sti
xchg
and
mov
jno
dec
out
mov
orl
mov
imul
loope
hlt
pop
pop
xor
cmp
push
pop
fildl
testb
adc
inc
idivb
pushf
stos
cmpsl
mov
fldt
hlt
jo
and
dec
hlt
fs
lret
push
iret
inc
shl
xor
out
mov
cmpsb
xor
cmp
or
notb
imul
imul
mov
dec
or
and
xor
push
adc
sub
hlt
clc
scas
mov
dec
mov
hlt
push
sbb
loope
and
sbb
lds
and
cmp
cmp
adc
xor
notb
cmp
xor
repnz
jnp
adc
inc
lods
cmp
lret
fwait
mov
and
sub
cmp
hlt
iret
cli
scas
lods
or
hlt
cmp
mov
lret
es
hlt
pop
stos
jge
aaa
mov
cli
cmp
lods
sub
sbb
into
mov
es
mov
dec
mov
xchg
dec
in
inc
addr16
mov
sbb
hlt
shlb
cltd
inc
dec
out
in
push
loopne
mov
int
clc
cld
stos
jg
inc
ljmp
adc
pop
ret
mov
jbe
cmc
jecxz
xchg
in
push
addr16
daa
inc
pushf
pop
hlt
sbbb
fstpl
or
mov
fs
add
jp
push
jge
rcrl
push
mov
push
sub
jbe
pop
cmp
mov
xchg
fiaddl
jl
xor
adc
sbb
call
hlt
sub
ljmp
hlt
mov
fsubrs
jle
and
mov
mov
xlat
scas
xor
xchg
je
dec
lahf
pop
fstpt
addr16
daa
rol
inc
lret
cmp
mov
aad
dec
cmpsl
imul
mov
dec
in
jl
jg
insl
or
add
xchg
rcrb
mov
clc
imul
mov
cld
pop
cmp
movsl
divb
adc
es
unpcklps
ret
cs
divl
test
icebp
dec
notb
imul
mov
adc
fwait
inc
in
fstpl
add
add
movsl
movsb
jnp
lret
mov
pushf
xchg
rcl
or
loop
imul
xlat
int3
test
jns
xchg
mov
and
sbb
ret
dec
fldt
fs
hlt
mov
mov
ss
dec
hlt
adc
pop
rcrb
jnp
and
inc
rcll
hlt
movsl
add
mov
or
icebp
xchg
dec
jae
or
mov
xchg
scas
lods
out
hlt
sbb
push
sbb
cmpsl
jno
repnz
fbld
sbb
aad
or
jl
rolb
sub
sub
mov
stos
fidivs
push
hlt
mov
and
mov
data16
jmp
repnz
jmp
sti
cmpsb
cli
neg
mov
xchg
hlt
int3
jl
cs
fcompl
test
mov
inc
mov
mulb
ret
cmp
sub
mulb
mov
xchg
dec
fdivl
fistps
cmc
push
inc
hlt
in
cld
outsl
jecxz
xlat
lock
hlt
inc
insb
push
lods
out
bound
push
inc
dec
stc
push
and
add
adc
or
and
cmc
scas
dec
in
into
in
test
mov
fs
icebp
sub
aad
out
inc
inc
cmp
hlt
or
jno
sub
dec
hlt
xchg
cmp
out
mov
dec
mov
fnstsw
out
icebp
mov
inc
fcmovnbe
lcall
lds
cmc
and
xchg
repz
hlt
in
push
sub
movsb
cmp
jl
dec
push
hlt
sub
imul
mov
rorb
push
sub
mov
mov
pop
push
test
jmp
sub
mov
bound
out
test
push
xchg
jl
js
call
add
fisubl
mov
sub
push
xorb
popa
aad
mov
mov
cmc
mov
rorl
or
lret
pop
add
hlt
sub
mov
jb
and
sbb
xor
push
xchg
mov
in
sahf
xchg
fwait
hlt
push
frstor
xor
loope
shl
pop
test
cltd
mov
shl
pop
lahf
mov
hlt
loop
repnz
mov
mov
adc
pop
adc
jle
or
mov
push
je
mov
xchg
xchg
aam
push
hlt
ds
cld
jbe
inc
cli
cmp
mov
xlat
xor
js
dec
clc
jns
aas
push
push
cmc
mov
hlt
mov
out
jns
xor
insl
mov
pop
call
fimuls
jge
rcl
rcrl
testb
repnz
cmpsb
setae
jbe
fdivl
test
mov
outsl
popf
sbb
imul
flds
js
in
loopne
inc
cli
add
fistl
sarb
hlt
sarb
fistpll
repz
push
notb
jo
call
pop
testb
mov
xchg
ret
cwtl
aaa
or
inc
out
and
xchg
scas
xchg
fldl
lds
sub
cmpsl
negl
adc
push
hlt
shrb
mov
stos
push
pop
data16
adc
mov
je
fsubrp
hlt
pop
addr16
jecxz
mov
hlt
mov
cmp
cltd
lods
popf
xchg
test
hlt
dec
ljmp
test
lret
addr16
sahf
xchg
aaa
loope
xchg
mov
cmc
and
xor
inc
or
jnp
nop
stos
cmp
pop
pop
inc
test
js
or
push
int3
xor
lcall
jns
cmp
jl
add
out
lret
fcomip
insb
jnp
ficomps
popa
aaa
test
popf
fcomi
imul
les
das
loopne
hlt
test
xor
lcall
leave
mov
insl
imul
lods
popa
jbe
add
repz
xor
mov
fiaddl
divl
jecxz
or
sti
mov
and
mov
imul
cmp
add
movsl
hlt
sub
mov
pop
hlt
push
cmpsl
fdiv
push
ss
pop
push
inc
xor
hlt
fwait
mov
das
adc
xchg
lret
imulb
pop
hlt
fsubrs
icebp
pop
xchg
aad
hlt
ss
jmp
in
rcl
hlt
dec
in
or
aad
stos
addr16
fndisi(8087
and
fnsave
mov
pop
pop
test
aam
push
imul
fcmovnbe
and
fs
jmp
lahf
setge
mov
add
push
jp
cmp
hlt
mov
sbb
cltd
pop
loopne
das
stos
imul
lahf
mov
or
aad
in
hlt
lret
adc
xor
xchg
pusha
clc
hlt
mov
inc
stos
call
jge
test
xor
rclb
jg
mov
ret
inc
hlt
sub
bound
cli
mov
push
lods
dec
pop
aam
adc
shlb
icebp
adc
mov
push
sbb
mov
lock
mov
xlat
hlt
push
pop
mov
and
adc
mov
jmp
hlt
pop
fstpl
sub
les
inc
into
xchg
hlt
inc
mov
int3
loop
jns
ss
outsl
xchg
lret
in
test
dec
and
cmpb
pop
push
cmp
hlt
xchg
mov
orl
push
mov
add
js
cs
shl
out
push
xor
xor
push
lcall
outsb
hlt
sub
mov
loopne
add
cmp
leave
inc
repz
lods
dec
add
addr16
push
call
pop
hlt
outsb
sub
in
rcrb
hlt
jmp
lret
inc
or
mov
mov
sub
hlt
jmp
and
scas
sbb
lret
jp
hlt
orb
pop
xor
in
repnz
std
imulb
add
dec
jmp
ljmp
es
lret
sbb
sub
mov
lret
in
xlat
hlt
jge
aam
aad
and
sarl
sbbl
movsb
xor
lods
hlt
nop
cltd
pop
insl
fstl
cmp
dec
and
jnp
aas
jl
daa
sub
cmp
hlt
jae
mov
aad
stc
add
pushf
xchg
adcb
bound
hlt
cmp
lahf
cmpsl
mov
dec
hlt
mov
pop
loop
sbb
bndldx
xor
xchg
cwtl
notb
mov
sbb
scas
fnsave
aas
add
sahf
mov
loope
jge
adc
dec
mov
mov
pop
sub
in
jb
loopne
xchg
jmp
hlt
loope
ljmp
popf
adc
mov
sbb
ljmp
adc
xor
out
hlt
fnsave
addl
movaps
pop
cmpsb
addr16
loope
ljmp
stos
int
jmp
hlt
pop
inc
push
xchg
xor
jb
gs
stos
hlt
loopne
in
insb
in
mov
jno
mov
dec
jp
hlt
xchg
pop
stos
rol
xor
hlt
mov
out
hlt
divb
jno
pop
les
sbb
xor
adc
push
fidivs
inc
lcall
das
in
aas
lret
mov
hlt
xor
adcb
aas
pop
fs
or
jbe
clc
cmc
fldl
mov
repnz
dec
fs
sbb
and
push
cmpsl
pop
call
mov
addr16
loop
hlt
outsb
jge
mov
cs
out
hlt
lret
dec
daa
fildll
add
dec
cmpsl
and
add
test
imul
xor
icebp
hlt
rcrl
mov
negl
imul
inc
push
into
cld
nop
and
outsl
sbb
scas
aaa
mov
jp
test
es
rorl
push
sar
hlt
std
movsl
inc
jnp
dec
out
test
jmp
scas
hlt
inc
ss
iret
xchg
flds
out
and
xchg
cmpsl
or
xor
add
sbb
sbb
sub
fstpt
cmp
out
cli
hlt
push
mov
stc
inc
hlt
xchg
ds
xlat
pop
out
test
push
test
mov
hlt
jle
loope
lock
cmc
push
shl
and
test
aaa
mov
out
sbb
arpl
adcl
jae
adc
cmp
inc
aas
ljmp
fwait
mov
out
mov
aam
and
fistpl
cmp
xchg
hlt
clc
mov
xlat
xor
out
and
hlt
icebp
lock
dec
hlt
jmp
mov
lods
hlt
jmp
mov
inc
pop
cmc
cmc
lret
pop
scas
sbb
imul
stc
adc
jnp
cwtl
aad
hlt
arpl
lock
lods
std
popa
sbb
push
jne
fbld
xchg
xchg
jne
nop
push
jb
pop
inc
hlt
mov
sbb
xor
clc
sub
aas
jl
addr16
roll
test
mov
hlt
cltd
ds
es
je
cmp
in
or
fidivrs
and
negb
nop
mov
and
mulb
stos
into
hlt
push
mov
testl
repnz
mov
rcrl
push
lds
jecxz
out
push
aaa
std
hlt
outsl
adc
or
cmpsl
xchg
subl
push
or
stos
hlt
jno
fdivrs
add
hlt
int3
pop
das
cmpsl
adc
rcl
pop
cmc
cwtl
ret
movsl
xor
ret
or
sbb
rol
das
sahf
push
scas
mov
hlt
pop
inc
jl
or
mov
mov
hlt
adc
cmpsb
fsubs
mov
ljmp
ret
js
xchg
inc
pop
leave
fcomi
inc
mov
xor
popf
push
hlt
call
lds
add
roll
js
mov
shlb
jno
testl
dec
lahf
fisttpll
movsb
mov
loope
fnstenv
hlt
adc
int
sbb
hlt
mov
outsb
mov
sbb
pop
imul
decl
inc
add
hlt
mov
icebp
sbb
cmc
cmp
shl
mov
ds
and
or
into
xlat
pop
fwait
add
je
cld
clc
sub
pusha
vmovlps
jno
mov
stos
mov
hlt
pop
push
cmc
pop
daa
add
pop
hlt
dec
movl
psubq
fmulp
scas
cld
int
push
xchg
cmp
inc
repnz
pop
and
bound
stc
or
imul
ss
sbb
arpl
ja
mov
jo
mov
fs
hlt
test
xchg
pop
adc
inc
mov
shl
imul
aas
fdecstp
fpatan
popf
jl
jmp
js
pushf
jge
hlt
push
sarl
rcll
cs
and
xchg
cltd
push
ds
test
rolb
jae
insl
cltd
push
jo
adc
jecxz
xlat
sub
mov
iret
stc
or
cmpsb
ljmp
out
cmp
push
push
testb
setae
notl
pop
hlt
jo
aad
je
sub
hlt
inc
outsb
stos
sub
out
mov
insb
dec
loopne
hlt
pop
sub
fldenv
fs
add
pop
add
hlt
stc
sbb
push
mov
sbb
out
adc
jmp
mov
mulb
sub
mov
mov
mov
fsub
dec
popa
hlt
xchg
fnstsw
mov
loop
xchg
rolb
test
sub
cwtl
test
add
je
test
fcmovnbe
repnz
jecxz
or
movsl
mov
mov
pop
jnp
sub
ret
adc
sbb
aas
sbb
dec
push
xor
sbb
popa
jns
int
stos
test
mov
hlt
xor
fptan
out
test
xor
pop
movl
in
popf
hlt
xor
testl
ja
loopne
sub
sub
fiadds
or
jecxz
pusha
rcl
sarb
xchg
sub
mov
pop
jbe
les
leave
push
cmp
jnp
inc
hlt
shlb
dec
push
xor
cmp
mov
js
adc
jge
cli
mov
lcall
imul
cmc
into
out
xchg
hlt
loop
mov
cmpsl
dec
cmp
inc
hlt
and
dec
int3
imul
mov
pop
mov
mov
adc
aaa
mov
insb
movnti
outsl
and
push
mov
and
hlt
push
orl
hlt
in
repnz
adc
out
cmp
hlt
stc
pop
sbb
hlt
sub
sub
cli
scas
hlt
cmpsb
popf
pop
xor
dec
sbb
imul
or
xchg
jg
cmp
xor
push
jnp
mov
push
jge
fstps
ja
sti
add
adc
cmpsb
aam
outsl
or
mov
hlt
push
jp
mov
cwtl
push
adc
sbb
out
sbb
cwtl
hlt
pop
scas
inc
xchg
jmp
push
lret
clc
loopne
mov
push
adc
pand
cmc
jmp
js
jp
inc
movsb
lods
cmpsl
in
cmpsl
and
and
hlt
adc
in
shl
insl
xlat
sub
outsl
sbb
dec
pop
pop
divb
jg
add
inc
jns
xlat
es
xor
inc
fldenv
cmp
ds
dec
lods
bound
push
push
jb
ss
mov
sub
fmull
out
call
out
hlt
cmpsl
mov
xchg
mov
or
xor
sbb
hlt
in
jne
inc
arpl
jbe
pop
cmp
jae
call
loop
sub
movsl
js
adcb
sub
mov
mov
inc
push
jne
ret
jo
popa
sub
xchg
sti
push
insb
divb
bound
add
js
jp
jbe
sub
fldenv
pop
or
mov
cmc
jle
fiaddl
push
test
push
jne
hlt
adcl
mov
push
jno
das
inc
xor
pop
dec
inc
push
inc
add
sbb
ljmp
stos
ror
jmp
sub
lods
mov
mov
sbb
fadd
dec
hlt
add
popf
hlt
mov
cmp
hlt
jb
es
sbb
cs
xchg
pop
mov
push
in
idivb
fs
xor
aas
cld
cmpsl
cmpsb
push
sti
cmp
iret
aaa
cmc
insl
xchg
push
insl
fiadds
data16
hlt
loopne
mov
int3
in
data16
daa
hlt
insb
bound
add
xor
xor
add
xor
or
push
adc
xchg
repz
imul
mov
mov
push
popa
mov
cmp
xchg
mov
lahf
iret
sahf
stos
or
push
sbb
and
dec
hlt
cmp
dec
mov
ret
jmp
psraw
sbb
jb
mov
ret
dec
jp
push
sub
mov
sbb
fs
cwtl
mov
nop
push
je
inc
hlt
and
rcll
ret
pop
hlt
add
push
xchg
fildll
xor
mov
data16
test
or
outsb
jne
cmp
xchg
mov
aad
sub
sarl
rorl
test
rcrb
jecxz
jae
jge
hlt
sbb
cltd
hlt
and
or
push
dec
mov
hlt
cld
ror
sub
movsl
mov
and
iret
fisubl
xor
shl
sbb
add
cmc
flds
sbb
xchg
addr16
dec
xorl
mov
aam
repz
mov
and
ds
mov
jmp
add
mov
ret
repnz
out
loope
cmp
shrl
stos
xchg
cmc
bswap
push
int
insl
mov
push
test
fs
rorl
call
out
pop
adc
and
mov
outsl
xchg
hlt
jg
or
dec
xchg
hlt
sub
rcrl
cmp
sub
inc
xchg
push
lods
imul
adc
jbe
jo
inc
or
adcb
repz
add
repnz
pop
dec
outsb
mov
dec
cld
add
roll
lods
push
hlt
xor
inc
imul
ja
xchg
dec
jg
hlt
cmp
lahf
sub
xor
jb
sub
mov
mov
push
int
mov
inc
mov
jmp
je
test
mov
leave
jo
or
pop
jmp
jg
xchg
dec
adc
js
hlt
jge
mov
rcrl
add
shrb
xchg
xor
pop
hlt
xor
xchg
pop
dec
xlat
push
mov
idivb
mov
inc
hlt
push
xor
mov
insl
test
mov
hlt
movsb
or
push
mov
xor
subl
inc
pop
xor
pop
sahf
dec
and
cld
jnp
cmp
inc
pop
je
xchg
rolb
adc
or
or
int3
rol
xor
arpl
data16
mov
cmpsl
fwait
dec
hlt
and
cli
cltd
hlt
fidivl
mov
call
hlt
imul
into
dec
sbb
pop
lock
sub
das
or
dec
push
mov
mov
and
repz
jl
popa
addr16
dec
mov
int
sbb
scas
and
jae
mov
mov
lods
lods
lds
push
idiv
js
push
mov
outsl
hlt
insl
or
push
test
hlt
xrelease
nop
ret
push
insb
imul
dec
cmp
xor
jne
loope
addr16
lods
inc
or
push
ds
pop
hlt
mov
or
rcrb
jbe
lcall
add
jbe
xchg
jg
inc
daa
out
data16
sets
mov
push
notb
hlt
icebp
subl
inc
xchg
aas
or
nop
testb
mov
add
cli
jle
fstl
hlt
sub
and
dec
dec
aas
push
rclb
mov
int
sub
cmp
in
hlt
adc
outsl
push
add
ret
add
xchg
sub
ja
cld
scas
call
lock
or
hlt
jb
loope
pushf
inc
sahf
mov
jnp
mov
pop
pop
or
test
das
lahf
out
xchg
lods
rcrl
loop
add
xor
mov
pushf
jns
mov
mov
fidivs
sti
popa
mov
inc
or
ljmp
xor
push
adc
xor
push
sahf
lock
mov
adc
cmc
lahf
cwtl
adc
leave
data16
pop
popf
in
jge
pop
mov
push
rorl
hlt
loopne
loope
test
int3
pmuludq
dec
xor
imul
int
popf
pushf
pop
mov
ret
js
out
sub
mov
hlt
mov
pop
scas
xor
mov
sbbl
push
hlt
pop
pop
out
push
push
and
lret
cmc
push
leave
scas
imul
mulb
repz
stos
push
aam
imul
fwait
sub
mov
mov
hlt
movsb
cmp
xor
mov
test
cmp
cwtl
test
xchg
imul
mov
xor
pushf
fbstp
xor
sbb
cmp
mov
mov
pop
repz
and
test
imul
add
mov
jecxz
xchg
dec
xchg
inc
push
outsb
add
dec
out
repz
jl
mov
out
aam
xlat
cmpsl
sub
hlt
int
repnz
xor
stc
cli
and
mov
shl
inc
and
cltd
xchg
lods
hlt
test
fidivrl
cwtl
les
adc
hlt
and
loopne
mov
orl
mov
xchg
leave
fcmovb
hlt
mov
hlt
outsb
cld
fstpt
outsl
or
xchg
xor
jbe
and
add
scas
lds
negl
lods
test
pop
push
or
xchg
push
sbb
shll
pop
fldt
neg
sub
hlt
pop
repz
sub
js
fldcw
rcrb
mov
test
adc
inc
dec
es
fs
inc
hlt
cmp
push
inc
pop
nop
sub
clc
jecxz
jl
mov
mov
stos
cmp
aaa
xor
outsb
add
mov
popa
jnp
repz
test
or
pop
repnz
jmp
mov
mov
hlt
jno
popa
scas
add
pop
mov
push
cs
roll
in
pop
mov
xchg
je
aas
push
xor
insb
notb
hlt
mov
aad
mov
shl
jecxz
or
cmp
and
cmp
inc
mov
pop
hlt
icebp
bound
push
sahf
push
std
hlt
insb
pop
pop
dec
test
fisubs
hlt
dec
mov
xchg
mov
or
ja
sbb
addr16
add
sbb
mov
push
aam
out
leave
stos
push
inc
pusha
shl
out
dec
lock
or
ja
mov
dec
pop
int3
cli
icebp
xchg
fdecstp
mov
inc
movsb
add
fstl
lahf
dec
and
mov
loop
loopne
cltd
jge
int3
imul
fiaddl
push
fyl2x
hlt
out
mov
ficomps
mov
shll
cmp
or
sbb
mov
sbb
xlat
mulb
push
mov
fwait
mov
xor
cld
mov
mov
mov
sbb
sbb
jl
hlt
mov
js
sbb
jge
outsb
and
fs
pop
hlt
cmpsb
icebp
xchg
out
das
cmp
addr16
adc
negb
lret
dec
hlt
pop
and
jo
jno
xor
mov
hlt
sbb
out
sbb
mov
xlat
xor
inc
pop
hlt
mov
test
outsl
sti
out
inc
notb
sbb
shl
sbb
stc
or
cld
cmp
icebp
into
hlt
jecxz
fdivs
data16
out
cmp
fdivl
lods
je
ret
ds
hlt
outsb
fdivl
jg
sbb
xor
push
jecxz
xor
inc
ja
shl
loope
mov
sub
inc
sbb
movl
mov
mov
jecxz
cmpsb
das
inc
mov
lds
cmp
mov
aad
xchg
scas
dec
or
sub
xchg
push
pop
sub
mov
inc
sbb
xchg
testb
sarl
jns
mov
idivb
add
ja
xlat
arpl
hlt
cmp
push
cmpsl
cmp
ja
testb
lret
stos
mov
out
out
outsb
mov
mov
mov
shl
je
fs
xor
adc
adc
stc
hlt
cmpsb
ja
xor
cltd
loopne
int
js
loop
push
lahf
inc
add
push
les
cmp
ret
iret
push
fdiv
ja
sbb
hlt
mov
jmp
cmp
xor
jno
pushf
pop
sbb
hlt
js
push
in
or
hlt
cmp
mov
out
in
imul
and
mov
repnz
scas
xlat
test
idivb
outsl
movsl
rclb
cmp
jbe
repz
jbe
jnp
imul
cld
pop
and
pop
lods
lcall
decl
cmpsl
imul
out
shrb
loope
jnp
stos
out
lret
pusha
fiaddl
test
fdivrl
cmp
and
lods
stos
test
cwtl
subl
movsl
hlt
jns
in
fistps
push
popf
or
hlt
jl
mov
ret
and
adc
hlt
loope
aaa
lcall
aad
dec
loopne
jle
add
mov
ja
xchg
sbb
lods
adc
jbe
fldenv
push
xor
adc
dec
xor
sbb
xchg
sbb
fwait
xchg
fisubrl
sub
mov
out
cmc
jg
push
loopne
aas
inc
push
mov
dec
mov
sbb
stc
ljmp
nop
lods
dec
imul
jb
lds
mov
lock
andb
mov
push
and
fsubrs
pop
aas
push
and
jl
shrb
insb
push
fs
hlt
jg
sub
roll
aad
imul
shrb
cwtl
mov
jmp
fs
cli
out
popf
aas
mov
mov
or
xchg
and
fildll
cmp
inc
in
test
mov
jg
dec
hlt
jbe
clc
je
push
scas
imul
ret
jns
sbb
or
lods
jmp
hlt
je
dec
repnz
mov
addr16
xchg
adc
enter
adcb
lret
add
hlt
xchg
inc
sub
xor
inc
xchg
scas
ds
jns
shl
mov
sbb
rep
rcll
hlt
bound
rolb
pushf
push
adc
ljmp
or
dec
push
nop
mov
cmp
hlt
jp
scas
cmp
out
fisttpl
rorl
clc
bound
and
data16
lods
jnp
and
mov
push
fstpt
jnp
mov
mov
stc
jne
int3
sbbb
sbb
xchg
or
mov
hlt
js
icebp
stc
mov
nop
xchg
hlt
out
popa
xor
sbb
or
cs
shl
hlt
cmpsb
cmp
sbb
rcr
jl
jae
in
and
jg
nop
hlt
stc
xor
and
fstpl
pushf
hlt
test
mov
in
iret
fdivrl
push
repz
jp
es
xor
sub
enter
popl
das
hlt
bound
or
xchg
xchg
mov
jg
mov
push
es
ss
sbb
jae
or
mov
cmp
cld
hlt
sub
repnz
fbstp
mov
push
cmp
jp
push
fcmovu
dec
leave
in
sti
repz
dec
adc
inc
data16
xor
xchg
movb
test
push
push
sbb
mov
dec
jo
insb
xor
dec
mov
jp
shl
in
mov
shlb
in
test
shl
lock
pop
xor
add
rcll
das
hlt
scas
add
pop
rolb
jle
call
incb
and
das
xchg
xor
mov
push
pop
in
pop
xchg
add
xchg
push
je
lret
cmpsl
data16
mov
sarl
xchg
push
lret
int3
test
add
fs
mov
mov
adc
mov
sbb
cmp
jle
in
int
out
hlt
data16
mov
clc
hlt
cmp
scas
add
cmpsl
mov
aad
xchg
arpl
mov
fs
mov
dec
loop
pop
jnp
hlt
in
xor
mov
cmp
vcvtps2pd
xor
ds
push
cmc
mov
ret
movl
lock
dec
mov
ljmp
aad
dec
cli
cmp
xor
cmp
pop
sub
pushl
hlt
or
fdiv
mov
mov
loopne
xor
inc
mov
mov
jne
hlt
pop
mov
ss
psadbw
dec
jmp
xchg
in
jne
test
hlt
test
sub
out
dec
jecxz
lods
movsl
push
hlt
mov
outsb
aam
dec
push
ds
cmp
insl
ja
insb
jge
mov
inc
and
hlt
pop
jl
mov
call
insl
divb
cli
repz
inc
cmp
inc
xchg
mov
dec
hlt
mov
test
pusha
and
cli
jmp
pop
mov
hlt
and
or
test
scas
fxam
xor
hlt
mov
add
das
cmpsl
dec
pop
mov
data16
hlt
or
out
test
jae
aas
jnp
pop
mov
adc
dec
sbb
pusha
scas
adc
lea
push
rorl
scas
add
sbb
lahf
popf
ja
xor
sub
jns
sub
insl
idivb
hlt
push
scas
scas
pop
add
cmc
dec
addr16
aam
lret
icebp
js
mov
stos
mov
in
sub
aam
or
cmp
out
dec
inc
push
mov
je
stc
adc
add
inc
lret
mov
mov
cmp
or
pop
sub
sub
jne
xor
hlt
cmp
push
jecxz
pushf
push
lret
ret
push
add
or
mov
jl
out
dec
icebp
jb
jbe
sub
arpl
in
sbb
loop
xor
push
push
hlt
ja
inc
scas
mov
repz
sub
mov
inc
xor
aas
cmp
xchg
movsl
stos
dec
xchg
push
add
hlt
mov
scas
mov
loopne
int3
lret
hlt
jmp
jb
fbld
pushf
sti
test
sub
movsb
and
and
faddl
push
sub
into
xor
mov
xor
lods
fsts
clc
pop
stos
dec
sbb
pusha
jle
sbb
push
sub
decl
push
adc
shl
imul
dec
aas
xchg
and
imull
lods
addl
loop
movsb
in
out
jecxz
mov
int3
test
std
hlt
sub
ljmp
movsl
jae
stos
push
push
lahf
mov
outsb
hlt
rcll
jg
stc
jns
int3
call
sbb
jnp
ret
mov
mov
push
out
cs
cwtl
cmc
out
push
add
divb
into
inc
jg
pop
mov
fnstcw
testl
addb
stc
hlt
rcll
iret
hlt
mov
add
xchg
push
adc
hlt
lock
js
jge
cmp
mov
repnz
xor
and
testb
push
daa
pop
inc
mov
push
mov
adc
int
mov
lret
imul
or
es
pop
cmpsb
hlt
test
xor
push
push
or
xchg
popa
hlt
inc
clc
or
addr16
pop
sbb
xchg
int
xor
popf
xor
mov
movsb
cmpsb
aas
scas
hlt
xor
jb
dec
push
decb
push
mov
xchg
cmp
inc
out
hlt
shll
test
pop
xor
sti
sbb
lods
adc
jmp
cs
lock
int3
pop
mov
add
shll
hlt
sub
mov
hlt
pop
arpl
xchg
dec
lds
or
leave
sbb
lcall
mov
cld
imul
mov
push
mov
mov
sub
aad
sahf
lahf
jge
popa
hlt
mov
pop
cmp
outsb
mov
xor
cwtl
xor
js
repz
notb
fstl
icebp
sarl
cmc
movsb
repz
sub
mov
mov
scas
mov
push
in
mov
xor
outsl
aad
hlt
jo
pop
jl
or
mov
out
aad
test
inc
pop
push
xchg
hlt
pop
mull
jne
pop
sbb
outsl
stc
nop
jle,pt
hlt
inc
mov
popf
hlt
or
lahf
sub
out
adc
inc
xchg
cmc
ficoms
mov
inc
or
mov
out
hlt
or
push
mov
adc
stos
sbb
jae
repnz
lea
jno
es
inc
and
hlt
movsl
stos
into
mov
hlt
fwait
jmp
ss
hlt
mov
sub
test
jle
jge
pushf
jo
or
xchg
ret
push
inc
cs
fs
and
sbb
hlt
and
mov
pop
repnz
jg
xchg
int
dec
mov
repnz
in
imul
fistpll
out
cltd
mov
cmp
movsb
and
test
pop
push
ret
stos
pop
in
loopne
sbb
aad
xchg
sbb
and
jnp
aad
adc
mov
add
jne
inc
hlt
inc
dec
in
test
and
cmc
rcr
dec
cli
repnz
loope
pop
clc
aam
out
dec
adc
pop
jne
xchg
xor
pop
cmp
cld
mov
rorb
add
negb
inc
int3
xor
sbb
in
bound
div
pop
inc
add
jg
shll
and
hlt
adc
lods
add
pop
mov
xor
out
repz
idivl
cltd
loop
sbb
lret
dec
push
sarl
iret
repz
pop
mov
inc
outsl
sub
daa
imul
xchg
clc
mov
or
mov
leave
stos
add
lret
xor
sbb
shrb
in
hlt
into
mov
fs
repz
sub
mov
cmc
cld
sti
sbb
sbb
movb
in
ja
push
sbb
pushf
rcll
fdivp
fisubrl
stc
loop
mov
cmpsl
cmp
shl
mov
test
icebp
add
ret
cmp
jbe
jl
mov
inc
addr16
test
jg
ret
mov
xor
cmp
aaa
in
lods
xchg
sbb
or
test
jbe
rcrb
imul
inc
mov
inc
cwtl
jbe
addr16
lahf
cmp
dec
jb
popf
mov
push
mov
ds
iret
or
addr16
bound
cmpb
jnp
icebp
cmc
inc
jbe
inc
addl
mov
jns
mov
stos
fldcw
push
adc
fisttpll
dec
cs
test
cld
sub
dec
jns
mov
stos
sbb
pop
setl
sbb
add
hlt
call
mov
inc
or
or
and
lods
imul
cwtl
sbb
lahf
daa
xchg
out
pop
mov
hlt
stos
in
movsb
or
mov
or
xlat
or
sbb
or
cld
jb
cli
fmulp
hlt
lods
jo
aaa
mov
jnp
sub
xor
str
mov
adc
shl
jg
lds
mov
lahf
int3
fsubrs
hlt
out
mov
imul
je
mov
cmp
shl
dec
repnz
xchg
hlt
lahf
xchg
add
aad
daa
outsb
movsl
aas
sbb
hlt
xorl
mov
stc
es
add
cmpsl
fbstp
xor
hlt
movsb
scas
repnz
jge
or
mov
cmc
mov
sub
lods
int3
sbb
push
mov
hlt
les
cmpsb
stos
imul
in
push
jle
fcomps
dec
call
lret
out
mov
cwtl
jne
cmpsl
imull
lea
cld
ficoml
lods
hlt
add
sub
jmp
xchg
cltd
push
push
mov
fdivr
cs
dec
lret
hlt
loope
insb
mov
lahf
rclb
add
xor
and
scas
cmp
add
cmp
out
push
hlt
leave
mov
gs
dec
mov
and
cmp
cmpsl
fs
or
cltd
bound
stc
sbb
or
sbb
shll
or
pop
lods
sbb
mov
je
call
pop
sbb
outsl
insb
mov
hlt
insl
sbb
jno
hlt
xchg
call
lea
jg
faddl
hlt
jns
dec
in
stos
jmp
into
cmp
cmp
jmp
jmp
dec
push
and
add
cmc
aas
xorb
push
sub
imull
sbb
push
ljmp
pop
jp
mov
test
jo
in
sbb
fldenv
xor
cmc
mov
jmp
stc
add
xor
sub
xchg
mov
lret
cli
dec
sbb
xchg
jp
call
hlt
fldenv
shl
xchg
test
fwait
and
add
popa
cmp
dec
xor
imulb
repz
imul
and
mov
sarl
pop
adc
daa
ljmp
push
inc
pop
imul
sub
cli
or
clc
jp
cmpsb
mov
insl
mov
mov
out
cmpb
jno
lods
or
mov
adc
mov
xchg
inc
rorb
pop
ret
in
lods
xchg
hlt
xor
faddl
hlt
inc
ret
dec
mov
lea
xchg
xchg
clc
out
xor
subb
sbb
push
xor
mov
insl
daa
mov
push
in
xchg
subl
sarb
push
lds
sbb
xchg
pushf
hlt
out
inc
push
scas
push
fwait
adc
push
div
jg
adc
lds
hlt
test
add
out
mov
and
cmp
cmc
ret
stc
cmp
popf
or
fists
addr16
jge
xchg
idivl
aas
push
and
sbb
mov
xor
imul
inc
imul
pop
les
adc
xor
shlb
std
das
ret
xchg
adc
loopne
in
xor
inc
mov
xor
imull
dec
hlt
dec
push
cwtl
mov
fs
adc
jns
xchg
hlt
mov
push
inc
jmp
es
xor
xor
sub
or
mov
sub
out
loop
cmpsl
test
or
xchg
push
add
push
jg
and
cli
popa
mov
sub
fwait
js
es
push
idivb
je
test
dec
add
pop
pop
cmc
into
adc
mov
inc
mov
jne
out
add
call
gs
hlt
jg
pop
mov
inc
stos
outsb
pusha
sti
and
imul
outsl
push
bound
negl
sbbl
or
hlt
arpl
dec
mov
movsb
sub
out
cmc
sti
cmp
hlt
in
jle
jnp
js
jmp
adc
sub
mov
repnz
les
sbb
insb
jl
mov
sub
add
aam
hlt
cmp
mov
cld
push
hlt
push
cwtl
lock
xor
hlt
fiadds
js
push
and
jo
insb
xlat
ret
inc
mov
push
sub
lahf
cmp
mov
and
popf
mov
scas
lods
mov
inc
add
into
fldcw
jae
mov
cmc
movsl
scas
pop
lret
push
xor
js
cs
sub
adc
or
repz
out
aad
hlt
insb
stos
loop
ret
cli
faddl
and
or
adc
hlt
cmc
push
aam
add
cmpsl
push
rolb
hlt
xchg
jno
lcall
insb
mov
sub
cmc
add
xor
out
hlt
jne
fadds
hlt
push
in
mov
out
mov
cmpsl
sbb
repz
hlt
clc
es
inc
js
imul
mov
addr16
cld
sbb
and
roll
dec
stos
out
je
xor
repz
cmp
scas
movsl
inc
push
jne
sub
imul
mov
pusha
rcll
cmc
cli
out
lahf
loop
add
add
sbb
mov
xchg
hlt
lret
mov
imul
adc
mov
jns
aad
xchg
mov
jne
cmp
hlt
and
dec
imul
int
inc
inc
xor
pop
shl
mov
jecxz
lret
mov
push
nop
cmp
xchg
arpl
pop
jg
hlt
jmp
lea
je
xchg
hlt
add
ret
push
sti
pushw
imulb
negl
inc
pop
lds
push
ljmp
js
sbb
imul
push
jl
xor
xchg
xchg
hlt
aas
out
inc
xchg
shr
xlat
push
out
imulb
stos
cli
xlat
pop
mov
pop
cwtl
jl
fcmove
mov
cmp
mov
cmpsl
outsb
std
xor
jg
hlt
scas
cmc
out
sbb
in
push
fnsave
jp
ss
push
add
cwtl
imul
xor
hlt
adc
ss
cmp
popf
shll
shrl
hlt
jns
in
pop
dec
bound
lsl
push
addr16
cmc
jecxz
pop
hlt
aaa
rol
sub
pop
loopne
or
inc
xor
adc
xor
lahf
hlt
dec
lret
scas
jg
sub
hlt
jnp
jmp
std
hlt
in
subb
mov
xchg
pop
std
hlt
mov
xchg
in
les
jns
jo
dec
divb
sbb
rcr
and
mov
jb
or
add
ljmp
fstpl
pop
mov
xchg
hlt
cld
pop
inc
pushl
cmp
jmp
popf
push
jp
sub
stos
ret
mov
rorl
hlt
cmp
int
popf
ret
adc
push
xchg
push
repz
int3
hlt
sbb
inc
add
pshufw
popf
jmp
dec
hlt
sub
sar
mov
dec
mov
fisttpll
insl
or
inc
add
jp
aam
mov
mov
mov
cs
ds
or
push
arpl
leave
ja
jb
jg
fidivrs
xor
cwtl
insb
cli
hlt
pop
jns
lcall
and
js
inc
and
fisttpll
sbb
pop
rcrl
xor
pop
hlt
outsl
jecxz
bound
fs
into
call
cmc
in
sub
pop
shrl
add
jne
ret
add
jecxz
mov
and
mov
cmp
cli
out
mov
jb
cmc
cmc
jbe
sti
testb
mov
cmp
push
inc
pusha
icebp
int
test
and
xchg
pop
cltd
jp
lods
nop
cmp
lret
cmc
jne
push
out
mov
sbb
and
ret
jl
push
mov
repz
add
cli
lret
jmp
jp
int3
sbb
xorb
inc
test
push
test
xchg
push
hlt
adc
int3
inc
in
mov
add
js
pop
jp
add
scas
scas
adc
jb
imul
test
dec
sti
shll
sbb
lret
test
dec
daa
les
mov
dec
pop
cmc
cld
cmpb
lcall
iret
std
fsubl
repnz
sub
pop
sub
mov
mov
inc
xor
sbb
ljmp
js
nop
shl
faddl
mov
xchg
lock
out
enter
dec
cmp
mov
mov
leave
loope
hlt
mov
mov
push
hlt
ljmp
dec
hlt
dec
mov
xchg
aaa
or
aas
lock
imul
cmp
pop
jmp
xchg
cli
paddb
mov
push
lods
inc
jae
pushf
xor
int
imul
adc
repnz
jg
shl
stos
ret
rcrl
pop
push
mov
hlt
out
sbb
and
sbb
test
loope
ss
aad
push
std
mov
inc
add
pop
lret
hlt
pop
out
scas
repnz
vshufps
and
hlt
adc
jnp
and
outsb
hlt
pop
adc
cmp
sbb
sub
push
push
pop
inc
mov
cwtl
dec
mov
pop
and
sbb
hlt
jnp
xor
popf
lods
or
add
add
sarl
nop
cmp
jle
test
stos
mov
dec
js
int
imul
xorb
sbbb
jbe
pushf
fildl
mov
xlat
mov
and
cmpsb
mov
sub
loop
fdiv
and
sahf
ret
inc
dec
hlt
cmc
ret
cmpsb
mov
xor
mov
mov
imul
xchg
out
xchg
cmp
outsb
dec
scas
hlt
jns
sub
lahf
hlt
inc
and
cmp
aad
in
add
pop
test
test
dec
hlt
cmp
int3
mov
js
cli
leave
stos
sub
stc
ret
sub
notb
mov
sbb
push
ret
aam
or
lods
lea
mov
sub
insb
ret
adc
lret
jmp
into
das
mov
hlt
movsl
inc
popa
repz
adc
dec
pop
and
mov
in
clc
hlt
push
add
jae
pop
pop
jne,pt
sbb
jge
sub
int3
data16
clc
or
fimuls
paddb
mov
dec
lods
inc
lods
mov
cmp
inc
shlb
stc
fidivs
mov
add
pop
mov
mov
pop
mov
sub
and
jae
adc
push
mov
dec
hlt
cmp
push
shl
xor
sub
or
mov
sub
jl
popa
and
mov
mov
inc
xor
mov
orps
cmc
xor
mov
jae
jno
stc
fs
aad
pushl
mov
mov
xor
push
or
negb
xchg
jg
inc
stos
inc
andb
aad
rol
mov
hlt
clc
jp
cmp
adc
aad
inc
mov
aam
test
jae
push
outsb
add
pop
shl
in
mov
jbe
dec
jo
jp
js
xchg
sti
ljmp
sbb
fs
hlt
mov
aad
pop
pushf
into
hlt
arpl
mov
xchg
jns
add
add
add
push
arpl
cmp
test
aaa
aas
xor
xchg
je
fsts
hlt
pop
xlat
test
and
mov
xchg
aas
hlt
jbe
push
add
push
mov
neg
and
adc
hlt
popf
add
push
hlt
loop
jnp
add
dec
es
jns
insb
call
ss
pop
aas
testb
mov
xor
in
pop
lret
sbb
rcrl
or
dec
hlt
mov
cmp
mov
scas
in
cmp
lds
add
pop
push
hlt
loope
into
xor
push
hlt
sub
mov
in
in
out
sbb
adc
cmp
popf
sub
cwtl
adc
inc
hlt
xchg
inc
inc
fwait
adc
xchg
mov
loop
pop
sub
add
xor
hlt
jmp
imul
imul
test
xor
hlt
adc
psllw
in
lods
loopne
pusha
or
sub
or
in
in
add
jne
rcrb
mov
sarl
pop
pop
inc
test
hlt
jne
cltd
movsl
and
shlb
sbb
dec
clc
mov
mov
outsb
roll
rolb
push
gs
in
push
xchg
or
jo
negl
in
lods
push
jae
movsl
fsub
sbb
outsb
add
lock
ss
hlt
push
test
fwait
dec
mov
imul
mov
hlt
int3
pop
cld
pop
jno
test
fdivrs
jecxz
stos
add
mov
mov
jns
rcrb
mov
sbbl
cmp
ds
hlt
addr16
cmp
push
add
test
pop
ret
pop
in
popa
sbb
stc
test
jle
rcll
cmc
push
aam
push
cltd
ret
hlt
mov
sub
shl
push
nop
dec
and
hlt
adc
movsl
xor
sbb
lock
nop
stos
add
sub
testb
inc
push
mov
rcrb
xor
jns
push
hlt
testl
or
sahf
inc
lods
int3
aad
cltd
in
hlt
jns
inc
icebp
test
jne
sbb
add
subb
ds
fsubrs
mov
dec
push
mov
or
out
mov
rclb
dec
imul
cmp
pop
mov
test
mov
jge
dec
sti
pop
imul
hlt
cmp
sub
xchg
mov
std
adc
jl
leave
ret
stc
testb
pop
lret
sbb
xchg
xchg
sbb
mov
jle,pt
xchg
je
daa
sarb
dec
sarl
xor
fidivrl
pop
ret
mov
push
add
mov
test
or
xrelease
stos
aas
mov
fnstsw
fwait
inc
hlt
leave
ds
jecxz
shrl
lods
push
arpl
adc
sbbb
push
mov
sub
es
push
hlt
mov
aas
push
inc
jp
jne
imul
xor
aam
add
cli
mov
leave
push
jb
cmc
pop
mov
dec
jae,pt
int3
in
xchg
push
imul
sub
imull
jl
pushf
hlt
icebp
cmp
lods
mov
insl
push
jge
adcb
ret
hlt
mov
cmp
in
loop
lret
and
sbb
push
pop
mov
cmp
stos
cmovbe
mov
add
and
xchg
stc
mov
test
cmc
mov
leave
loopne
xor
mov
sbb
pusha
hlt
out
mov
sbb
cmp
push
test
jne
or
mov
pusha
out
lds
bound
mov
dec
test
mov
cmp
scas
hlt
jl
push
mov
jmp
push
add
cli
dec
jae
outsb
fdiv
jge
mov
mov
fs
lock
xlat
xchg
cmp
and
xchg
hlt
imul
jle
hlt
dec
test
rolb
mov
hlt
iret
dec
adcl
fnsave
repz
and
shll
in
sub
cmpsb
add
into
rolb
dec
dec
hlt
shl
and
pusha
daa
pop
hlt
mov
sub
pop
jl
inc
hlt
cmp
pop
sti
cmp
fwait
sub
jecxz
sbb
mov
push
hlt
and
sahf
sub
mov
xchg
pushf
outsb
hlt
mov
and
pop
mov
xchg
div
dec
or
xchg
lcall
imulb
adc
cmp
clc
hlt
fnstsw
in
imul
in
xchg
cmp
rcrl
hlt
dec
lahf
xchg
mov
sbb
xor
inc
push
sub
test
sub
stos
xor
leave
fbld
or
pop
int3
sbb
cltd
add
movsb
and
pop
mov
add
je
fxtract
aam
inc
jecxz
iret
push
jge
inc
add
dec
loop
and
dec
cli
or
add
sub
jl
inc
mov
in
jle
test
and
testl
pop
mov
push
popf
or
inc
sub
mov
mov
loopne
inc
push
adc
insl
cmp
out
or
ja
adc
sub
jle
pop
hlt
stc
sub
out
dec
adc
mov
xor
add
popf
stos
fwait
sub
imul
xchg
and
add
hlt
add
mov
pop
fs
int3
pop
repz
insb
sahf
inc
sti
cwtl
add
and
repnz
hlt
shlb
mov
xor
js
sbb
or
push
das
addl
into
sbb
sub
xor
pop
hlt
out
cmpsl
popa
jg
jl
add
mov
rcr
push
adc
std
cli
and
pop
sti
notb
cmpb
dec
mov
sbb
jecxz
push
imul
xor
add
xchg
lcall
hlt
je
sbb
inc
mov
push
xchg
ja
adc
sbb
hlt
add
jl
jp
fs
imul
ficompl
test
sub
mul
mov
subb
adcl
push
negb
dec
xchg
mov
cld
mov
jns
or
decl
mov
pop
inc
dec
leave
imul
add
je
imul
xchg
adc
fwait
mov
sar
xor
cli
clc
cmpsl
lcall
and
scas
in
fidivl
push
hlt
jg
adc
div
and
jecxz
push
testb
jnp
sub
pusha
hlt
addr16
pslld
jecxz
lea
jl
jne
pushf
popf
jbe
lock
jp
hlt
ljmp
mov
mov
es
sbb
sbb
hlt
test
jns
pop
fdivrs
mov
lods
dec
mov
or
in
or
inc
dec
or
sub
hlt
xor
pop
xor
or
adc
pushf
cmp
negl
hlt
and
clc
jo
dec
hlt
xchg
in
pop
std
sbb
stos
das
out
mov
xor
jmp
sub
les
hlt
bnd
mov
inc
dec
test
push
cmpsl
hlt
adc
or
ds
test
hlt
int3
shlb
stc
or
cmp
pop
or
je
fld
int
imul
jmp
pop
mov
test
mov
je
cmp
js
fwait
cmp
dec
mov
hlt
mov
add
push
hlt
push
inc
lock
dec
dec
cmovno
mov
jbe
je
std
pmuludq
sub
shl
mov
ret
cld
dec
xlat
mov
jnp
lahf
into
leave
icebp
cmp
xor
je
mov
sub
lds
arpl
imul
lcall
call
xor
fildl
pop
test
sbb
ret
ljmp
fbstp
test
pop
cmc
test
mov
out
fs
xlat
pusha
mov
cltd
lods
insb
mov
or
xor
push
sub
cmpsl
xor
dec
dec
loopne
hlt
stos
fsubl
insl
mov
aad
push
jne
rcll
push
add
rclb
sub
stc
xchg
or
add
mov
sbbb
stos
and
fidivl
add
sub
into
clc
aam
hlt
fistps
mov
mov
mov
inc
xchg
stos
aam
insb
hlt
or
stos
rcll
and
scas
xlat
dec
jmp
mov
lods
fxam
push
das
es
aad
jo
addr16
stos
xchg
mov
decb
or
mulb
mov
pop
push
mul
iret
lret
std
repnz
jns
scas
xchg
jmp
sub
xor
fmuls
cs
hlt
movsb
movsl
push
dec
sub
dec
and
dec
adc
mov
mov
push
xchg
xchg
or
ds
pop
jl
mov
testb
ja
hlt
add
sbb
xchg
mov
inc
ljmp
enter
or
sub
cmp
popf
sbb
ficoms
rclb
in
inc
pop
vcvtsi2ssl
pop
rol
pop
inc
hlt
fcompl
pop
xchg
into
and
stc
xor
cmp
xchg
hlt
ret
lods
xor
jne
out
hlt
cltd
lret
or
xchg
sti
cmp
mov
jg
aad
andb
js
fs
pop
hlt
xchg
mov
mov
ficoms
hlt
xchg
out
cwtl
rol
mov
hlt
jo
dec
push
hlt
mov
sti
adc
cmpsl
imul
test
sbb
pusha
hlt
imul
push
hlt
mov
mov
push
hlt
les
xchg
mov
mov
lods
imul
daa
lds
cld
cmp
ds
lods
clc
sbbl
mov
stos
in
je
dec
dec
hlt
ljmp
mov
xchg
mov
or
pop
js
repz
mov
pop
push
push
lcall
jb
sbb
mov
out
ds
jecxz
mov
inc
and
cmc
ret
push
in
scas
daa
sbb
jle
dec
push
add
sub
les
mov
fstpl
jp
nop
vunpcklpd
hlt
sbb
lret
xchg
out
ljmp
mov
inc
addr16
cmp
fisubs
jb
imul
inc
lret
cmp
jmp
shll
in
idiv
jae
sbb
pop
mov
clc
cmpsb
inc
push
and
aam
hlt
pop
sbb
in
pop
pop
and
or
and
push
stos
jge
inc
rolb
sbb
test
add
sti
jnp
test
gs
hlt
test
xchg
cmpsb
cld
ud1
jae
inc
dec
push
enter
gs
iret
hlt
fistpl
pop
xor
test
hlt
jne
loope
addb
test
xchg
fimull
repz
jmp
mov
setle
mov
sbb
cmc
nop
lods
scas
hlt
and
fisttps
xchg
mov
push
mov
add
out
ret
or
mov
add
in
push
or
pop
sbb
jo
fstpt
hlt
push
mov
insl
loop
mov
dec
jo
xor
in
hlt
int3
das
mov
jg
loopne
loope
mov
mov
mov
jp
mov
mov
mov
insl
lods
add
sbb
sbb
jg
pop
push
mov
dec
inc
in
or
mov
js
hlt
out
mov
jo
hlt
inc
loop
in
scas
pusha
lahf
hlt
repnz
cli
push
inc
pop
arpl
aas
push
or
and
or
xor
shl
and
mov
mov
nop
jle
jae
pop
sbb
dec
test
cmp
loope
shll
xor
add
out
xor
das
jne
shrl
hlt
mov
aad
sbb
sbbl
lret
add
imul
stos
mov
push
mov
xchg
pop
mov
sub
out
stc
test
xchg
mov
into
hlt
lcall
std
hlt
test
push
pusha
lcall
out
xorl
stc
stos
rclb
pop
out
pop
adc
popl
hlt
xchg
mov
cs
lcall
mov
fdivrs
aam
mov
fsts
roll
push
out
andl
aaa
xchg
out
stos
imul
je
paddd
cmp
dec
hlt
mov
mov
std
hlt
cs
mov
or
and
loop
mov
cs
insl
scas
scas
push
lea
sbb
popf
mov
out
data16
add
add
jbe
cmpsl
hlt
inc
fnstenv
loopne
lret
mov
lret
imul
cld
repnz
sub
daa
lret
cmp
mov
leave
dec
hlt
sbb
movsl
ljmp
jl
and
or
sti
hlt
fucomi
pop
stc
fistps
dec
addr16
xchg
mov
aaa
push
sbb
in
xlat
xor
xchg
hlt
cmp
mov
inc
hlt
cs
pop
sbb
std
mov
jg
cwtl
ljmp
jno
push
mov
mov
pusha
inc
jo
jne
mov
mov
jno
fcom
adc
lret
cmp
add
add
xchg
test
std
int3
mov
and
mov
jbe
dec
out
jg
cli
or
dec
sbb
cmp
push
hlt
and
orl
lret
inc
xchg
lock
cmp
xchg
neg
and
outsb
sub
scas
push
test
js
jo
hlt
sub
mov
push
lret
mov
scas
inc
lods
loopne
mov
jae
stos
fdiv
movsl
sub
sub
fdivrl
push
sti
hlt
fimull
loope
hlt
push
popa
fdiv
add
xchg
shl
ret
mov
sub
push
xchg
add
hlt
das
sub
pop
movb
aad
fs
or
fdivp
aas
cmp
jp
cmp
cmp
adc
add
adc
jo
dec
data16
test
daa
outsl
and
xor
hlt
mov
inc
xor
loope
jns
push
mov
push
hlt
cwtl
fs
fcomps
xchg
fdivl
hlt
lods
pop
xchg
sub
hlt
mov
ret
hlt
xchg
cmc
adc
or
or
jmp
pop
loopne
pusha
sbb
jb
es
cmpsb
hlt
mov
xchg
psrlq
hlt
add
push
push
cmc
push
imul
jecxz
aaa
repz
fs
fidivs
inc
mov
fstps
test
or
outsb
rolb
loop
mov
je
int
add
lcall
adc
fcmovnu
sti
push
hlt
scas
test
sbb
inc
sarl
dec
xor
leave
imul
insl
inc
cli
add
clc
out
cmp
hlt
and
hlt
sub
inc
sarl
shl
cltd
xchg
jns
mov
hlt
sub
and
popf
hlt
add
inc
stos
loop
cli
jl
fbstp
cmp
js
sbb
repnz
loop
sub
mov
je
mov
test
pop
leave
enter
std
sbb
inc
xchg
pop
cmp
mov
mov
addr16
enter
push
outsl
cmc
cmpsb
xor
incl
mov
aaa
cmp
fistps
mov
add
negl
xchg
cltd
inc
scas
and
mov
sub
negb
push
add
divb
imul
pop
cmc
insb
getsec
aas
and
enter
sub
pop
xor
inc
aam
fs
aaa
jp
mov
xor
add
inc
push
mov
xchg
ret
push
or
in
push
fwait
xchg
xor
push
out
aaa
mov
add
in
or
pop
lret
iret
mov
dec
shlb
add
push
dec
lret
cmpsl
fildl
mov
outsl
cld
fisttps
and
xchg
nop
sti
mov
mov
pop
pop
sbb
mov
jae
arpl
aaa
add
adc
cli
and
sub
repnz
in
add
scas
xlat
pop
pop
add
orb
push
adc
inc
pop
mov
adc
push
xor
daa
dec
iret
push
xlat
enter
add
jb
push
hlt
cmp
nop
enter
jnp
or
mov
pop
xor
push
xchg
test
ljmp
pop
aaa
ret
add
pop
sub
and
inc
and
pop
cmpsb
in
sar
lcall
mov
push
and
out
add
sbb
dec
pop
sub
testl
dec
int
push
sahf
out
push
jecxz
dec
das
out
cmc
sub
ret
dec
insb
or
xlat
lods
lidtl
scas
pop
dec
inc
arpl
daa
sbb
inc
push
cmpsb
ljmp
pop
mov
inc
mov
or
and
aaa
out
aaa
test
aas
mov
ljmp
pavgw
pop
ret
or
fidivs
push
dec
add
pop
dec
cwtl
cmp
cmp
inc
jno
mov
adc
aad
cmpsb
cmpsl
xor
push
imul
subb
xchg
pop
ret
mov
je
xor
add
inc
pop
imul
out
mov
mov
jge
loop
jge
jmp
mul
ss
iret
aas
sarb
shll
nop
ljmp
out
pop
pop
xor
sub
mov
add
pop
shrl
in
mov
data16
cmc
xchg
add
pop
or
imul
cmpsl
pop
daa
pop
sbb
mov
popw
into
add
and
sub
inc
cmp
sbb
cmp
fsub
notb
mov
and
add
ret
mov
mov
sbb
mov
sbb
dec
and
cld
out
push
incl
sub
iret
pop
xchg
adc
imul
mov
lahf
lret
pop
pop
jmp
out
cmp
pop
ret
mov
sbb
mov
push
pusha
push
lock
fisttpll
ljmp
dec
daa
bound
outsb
jb
sbb
and
mov
mov
int
leave
hlt
lds
mov
ja
roll
mov
dec
lds
or
or
adc
pop
cld
seta
ja
leave
outsl
daa
inc
out
sub
pop
out
mov
or
mov
pop
and
add
cmp
mov
xchg
or
aam
bound
cwtl
mov
outsl
dec
xchg
mov
sbb
fisttpll
add
cmpsb
lret
aaa
jmp
aaa
repnz
xchg
mov
sbb
jmp
outsl
ja
sbbl
orb
sub
aaa
orb
and
mov
xchg
add
sbb
pop
mov
into
pop
aaa
cmc
and
mov
cld
cmp
aam
mov
adc
xlat
or
lret
cld
out
fsubrs
ja,pt
in
xor
sub
daa
and
push
sub
test
in
adc
xlat
adc
adc
daa
xlat
cmp
movsl
out
xlat
mov
add
cmp
out
sbb
loopne
das
adc
es
outsb
addb
ds
mov
stc
imul
cmpsb
fnstenv
test
les
enter
leave
or
inc
es
dec
push
mov
test
pop
jb
inc
sub
xchg
orl
xor
xchg
mov
mov
das
xor
cmpl
movl
mov
lea
sbbb
movsb
cmpsb
fucom
cld
in
sbb
bound
arpl
lahf
xchg
jno
lcall
sbb
repz
fwait
sti
push
jo
sub
adc
out
xlat
xlat
add
jp
cmpsl
jae
push
andl
cltd
pop
sbb
daa
mov
pop
sbb
dec
xlat
outsl
outsb
adc
sbb
push
fiadds
jmp
and
pop
pop
and
and
and
dec
mull
inc
inc
aas
btc
mov
xchg
push
test
mov
pop
mov
xchg
jl
mov
pop
jl
and
popf
movsl
pop
popa
pop
inc
ret
outsl
fwait
imul
imul
insl
jl
pop
inc
pop
mov
and
push
sbb
adc
pop
cmpl
inc
xorl
inc
sbb
adc
add
addl
xchg
jmp
outsb
add
dec
addl
or
in
sub
std
jb
add
add
pop
cmpsl
add
pop
xchg
push
cmp
push
xchg
outsl
lods
loope
xchg
pop
lds
fiadds
pop
pop
cmpsl
fwait
inc
push
imul
xor
or
dec
das
aaa
aas
adc
jbe
inc
push
and
adc
push
clc
sahf
fbld
addr16
pop
sbb
inc
je
mov
pop
out
cmpsl
mov
loope
pop
das
xor
sbb
mov
aaa
mov
fs
xchg
out
dec
push
sbb
iret
add
mov
mov
dec
jbe
add
std
push
adc
mov
xor
aad
sub
jg
push
pop
popa
jmp
push
adc
mov
xbegin
pop
imul
mov
sahf
ret
out
xchg
push
pop
mov
lret
daa
push
shrl
and
cmp
addr16
inc
mov
cmp
into
ja
pop
out
sbb
roll
inc
scas
das
fwait
outsl
or
sbb
push
dec
adc
add
xchg
pop
jmp
int
push
inc
inc
jecxz
xchg
inc
adc
lcall
adc
add
aad
pop
test
test
popf
aaa
pop
push
pop
fwait
add
inc
mov
add
cmc
popa
inc
adc
inc
es
xlat
in
adc
jbe
xor
cmpsb
rcrb
mov
addr16
dec
push
test
xchg
addr16
xlat
addr16
add
addr16
add
mov
shll
pop
loopne
sbb
fwait
aaa
and
pop
lea
adc
inc
lahf
mov
jecxz
sub
btr
dec
arpl
dec
mov
les
mov
das
shll
xchg
push
movsb
lock
xor
adc
inc
push
xor
xchg
in
add
add
push
ja
or
cs
xchg
xchg
test
mov
xchg
aaa
mov
stos
fwait
cmpsb
int
push
push
clc
cmp
ss
sti
cmpsl
and
push
xchg
in
je
pop
movsb
mov
sti
adc
sub
outsl
xchg
pop
cs
daa
xlat
outsb
addr16
mov
xlat
cld
push
sahf
aaa
xchg
xchg
add
je
push
mov
lret
xor
cltd
xchg
inc
pop
enter
rcl
mov
push
out
adc
sbb
in
or
inc
mov
mov
xchg
and
lea
xchg
loopne
adc
ja
negl
dec
ret
stc
je
inc
inc
aam
notl
addl
inc
inc
mov
cmc
aaa
jae
out
addr16
lahf
mov
nop
test
testb
mov
negl
gs
jg
stos
adc
push
je
lret
aaa
rolb
cmc
add
dec
xor
loop
add
movsb
daa
lahf
cmc
jmp
inc
dec
outsb
cmc
adcb
adc
push
testl
es
push
lock
out
aam
imul
aaa
add
imul
int
jecxz
add
cmpsb
daa
stos
push
and
inc
sbb
repz
add
jnp
xchg
sbb
push
push
add
pop
fucomi
pop
xchg
inc
xchg
int
fs
outsb
mov
aaa
das
mov
or
push
xlat
outsb
jbe
pop
enter
push
inc
adc
shrb
out
adc
das
dec
sbbl
enter
adcl
cmpsb
test
lods
sub
lock
dec
test
fs
iret
movsl
push
call
ret
xor
mov
das
cmp
mov
jnp
xchg
push
fimuls
pop
leave
subl
xchg
shlb
imul
or
jnp
fimuls
pop
shll
cmp
mov
inc
xor
inc
xchg
aam
call
xor
addr16
addr16
insl
out
andb
rcr
mov
enter
mov
mov
cmp
lds
mov
add
pandn
sbb
add
pop
pop
movsl
cmpsb
clc
cmpsb
adc
xchg
cmp
adc
test
xchg
pusha
mov
lcall
mov
fcomip
mov
mov
xchg
adc
cmpsb
pop
sbb
pop
call
iret
pusha
cmpsl
btr
repnz
daa
push
dec
inc
mov
xor
faddl
pop
jnp
cmp
int3
xor
out
enter
push
add
dec
adc
ja
shlb
outsl
adc
add
subl
insl
movsb
test
cmp
test
jecxz
pop
pusha
test
js
jae
leave
mov
jnp
pop
sarl
movsl
push
inc
inc
push
xchg
in
and
enter
fsubrs
dec
sbb
and
adc
mov
pop
out
pop
xchg
imulb
xor
cmp
fwait
mov
inc
mov
aaa
lock
sub
das
in
aas
cmp
lods
xor
int
pop
push
xchg
mov
inc
outsb
cmp
mov
ja
inc
out
adc
pavgw
jmp
das
mov
outsl
and
pop
cmp
pop
scas
jg
inc
jg
insb
addr16
les
cmpsl
mov
and
movsb
inc
stos
xor
clc
pop
dec
xchg
ret
dec
or
or
mov
xlat
icebp
ja
mov
inc
lea
int
push
sub
add
jmp
cmc
cmpsl
sbb
in
ds
pop
push
xor
inc
push
cmpsl
mov
mov
pop
xchg
add
das
addr16
pop
xchg
es
cmp
cmpsl
jno
mov
or
cmpsb
aam
xchg
data16
jecxz
push
and
and
pop
test
test
and
cmovno
in
cmpsb
ret
lahf
pop
push
das
bswap
fadd
arpl
push
pusha
pop
shr
and
pushf
push
popa
imul
xchg
mov
inc
movsl
sbb
jnp
je
addr16
test
testl
push
sbb
pop
cmpsw
std
mulb
add
dec
or
cmp
dec
jecxz
xlat
mov
das
xchg
clc
fs
addr16
push
mov
pop
ja
in
jmp
add
in
mov
test
fldenv
scas
and
ja
inc
or
mov
xchg
sub
mov
scas
movsl
add
sbb
test
jecxz
rcl
cmp
fs
jne
jnp
and
adc
lret
mov
cmc
gs
mov
fwait
adc
pop
pop
xor
inc
outsl
or
lock
sbb
out
inc
xchg
fistl
mov
fsubl
and
add
push
prefetch
aaa
push
pop
andl
jnp
lret
je
push
dec
int3
inc
xlat
lds
cmp
or
push
fldt
rsqrtps
xchg
mov
pop
insb
sahf
ret
inc
xor
pop
push
cmp
mov
pop
or
mov
xor
or
pop
sbb
pop
rcrb
fnstenv
pop
mov
pop
call
lds
iret
inc
or
outsl
int3
add
adc
inc
pusha
push
xlat
cmpsl
inc
in
xlat
into
roll
jecxz
inc
lea
fisttps
das
ljmp
jae
pop
out
xchg
adc
inc
mov
aas
xor
add
xor
jmp
iret
pop
in
jg
xor
aaa
lds
test
pop
xchg
lret
pop
testl
in
dec
xchg
inc
aaa
xor
inc
jnp
pop
in
xchg
adc
das
pop
fistl
and
in
cmpsb
mov
data16
cld
push
dec
aam
daa
pop
mov
push
int3
push
arpl
daa
and
rcr
mov
enter
iret
pusha
add
pop
in
int
inc
aaa
mov
push
punpckhdq
jnp
pop
in
xchg
adc
jae
push
jnp
mov
push
push
fwait
adc
xchg
xor
or
cmp
mov
xor
cmp
and
push
xchg
mov
xchg
in
outsb
xchg
xchg
cmpsl
imul
push
xlat
or
ja
orl
in
mov
or
fwait
jp
push
dec
out
movsl
movsl
pop
add
ret
dec
ret
shl
mov
cltd
inc
jbe
outsl
jle
add
daa
and
xchg
data16
aas
out
dec
push
sbb
dec
cmpsb
fldt
call
inc
mov
das
rol
add
jmp
mov
fsubs
sub
xchg
add
sbb
aaa
mov
cmpsb
or
aaa
or
xor
jnp
adcb
lock
push
in
movl
cmp
loope
sub
add
cli
xchg
push
mov
addr16
in
adc
jae
faddl
sub
mov
lret
les
aaa
adc
pop
mov
movsl
scas
das
add
sub
cmp
dec
xchg
pop
jmp
inc
cli
in
push
and
jmp
mov
pop
cmp
pop
mov
or
jnp
pop
bound
mov
push
jmp
es
into
in
add
xchg
in
cld
out
dec
movsb
cmp
sub
adc
xor
daa
pop
pop
xchg
movsb
pop
insb
xchg
push
aaa
popf
mov
in
mov
std
scas
sarl
das
or
les
sub
out
fisubl
fsubl
aas
repz
jg
out
inc
ja
push
aam
hlt
xor
push
and
lahf
ret
pop
out
push
stc
cmpsl
mov
out
xlat
sub
ss
bound
jbe
pusha
fists
js
cmpsl
xchg
xor
mov
adc
push
xlat
push
xchg
pop
ds
push
fimuls
mov
das
adc
enter
dec
jle
adc
ret
loopne
lock
pop
and
cmpsb
adc
pop
push
mov
jnp
xlat
fisubrs
add
push
out
mov
pop
insl
sbb
and
mov
addr16
sbb
and
xchg
fadds
push
fnstcw
xor
out
iret
les
test
mov
add
cmp
mov
mov
push
cmpl
movsb
sbb
sub
out
setbe
dec
and
push
pop
inc
mov
xor
push
xchg
pop
js
repz
arpl
xchg
fadds
dec
jle
jbe
add
xchg
and
pop
cmp
scas
jae
hlt
in
mov
std
mov
lods
aaa
out
test
call
outsb
mov
mov
mov
push
inc
cmpsb
jmp
ss
stos
adc
and
lock
pop
js
dec
iret
fisubs
or
stos
out
loope
sbb
pop
adc
and
bound
insl
out
loop
sbb
es
jnp
jp
and
mov
pop
sub
add
add
pop
addr16
jmp
adc
addr16
cmp
data16
fistl
mov
xchg
popw
test
and
addr16
jbe
xchg
sbb
add
scas
jnp
jecxz
xchg
cmpsl
xor
pop
lds
cmpl
sbb
xor
mov
outsl
outsb
addr16
in
pop
das
fbld
mov
and
test
sub
negl
into
sub
testl
xor
jecxz
sbb
pop
bound
movsb
fisubs
sbb
into
cld
rclb
icebp
pop
incb
hlt
xor
dec
inc
es
pop
das
xchg
fcoml
xchg
mov
out
daa
scas
std
jo
mov
jge
push
xchg
repz
es
push
aas
fcom
xchg
enter
add
xchg
fistpl
pop
dec
out
clc
inc
and
push
je
jns
in
aad
inc
hlt
xchg
pop
xchg
jnp
add
jle
mov
rclb
cmp
clc
and
push
pop
out
outsl
or
add
arpl
xchg
xchg
xor
imul
insb
loopne
gs
aaa
inc
mov
jnp
rolb
xlat
mov
call
cmpsb
pop
push
lock
adc
ret
mov
out
adc
addr16
push
sti
and
and
push
xor
or
mov
clc
out
dec
jge
push
daa
add
jecxz
push
int3
inc
dec
addr16
inc
rcl
add
mov
pop
xorl
inc
ss
in
ficoml
aaa
pop
cmpsl
lods
xchg
and
adc
fcoms
orl
shrl
aam
je
filds
cmpsb
sbb
xchg
lfs
imul
ja
and
mov
pop
and
js
sub
push
or
nop
js
outsl
sub
inc
inc
cmp
pop
ss
enter
cld
mov
push
test
adc
je
stos
add
not
arpl
cld
lcall
das
push
dec
and
xlat
addr16
sbb
lret
and
xchg
sub
lcall
iret
dec
ss
xchg
fstl
push
neg
push
dec
and
jmp
jb
add
iret
push
fistps
and
stos
xor
adcl
rcl
fldt
jp
fistl
mov
xchg
ja
mov
mov
mov
int
and
xor
inc
sahf
out
test
inc
out
jmp
dec
push
dec
scas
xor
ljmp
mov
xchg
dec
icebp
inc
lahf
and
in
dec
dec
xor
lret
lahf
xor
pop
xchg
insb
adc
bound
add
imul
cli
xor
fisubs
icebp
inc
sub
insl
inc
xchg
sub
pop
inc
pop
cbtw
movsl
loopne
fidivs
and
push
std
xor
mov
push
fmuls
gs
cld
lock
jg
mov
xor
adc
test
jno
iret
test
data16
cli
das
adc
add
push
jmp
daa
and
mov
xchg
dec
ja
mov
jmp
jnp
push
pop
pop
jg
mov
inc
stos
leave
jbe
ss
sahf
sub
das
add
lock
in
xchg
shlb
aaa
jmp
test
imul
mov
mov
push
xor
loope
int
ja
dec
into
rorb
and
fs
repz
push
mov
cmpsb
sub
in
mov
aaa
xchg
es
out
fwait
pop
out
clc
cmpsl
push
adc
outsl
negb
pop
xchg
pop
sbb
aaa
clc
jmp
in
jb
sub
xchg
test
dec
xchg
adc
les
pop
test
lds
sub
mov
pop
ds
lds
int
int3
pop
xchg
lret
ja
push
mov
test
xchg
mov
xor
jmp
outsl
pop
mov
mov
cmp
out
sbb
and
mov
mov
cmp
jbe
sub
in
int
dec
int3
rcrb
push
inc
inc
adc
jle
aaa
shr
out
sub
jp
add
pop
dec
fwait
xchg
sub
jle
iret
add
xchg
sbb
or
jnp
sub
lods
add
adc
arpl
sti
cmp
jb
adcl
cmp
sarb
dec
cs
fidivrs
cmpsl
xchg
jae
enter
sbb
mulb
fwait
add
mov
add
gs
mov
cs
and
jnp
insb
dec
sub
inc
adcl
mov
call
int
jbe
aaa
sbbl
enter
and
jmp
rclb
push
pop
pop
inc
fistl
cmp
xchg
clc
xchg
cld
fwait
lcall
divb
or
sbb
test
mov
mov
cs
cmp
mov
pop
jp
cmp
mov
andl
mov
inc
test
das
push
xchg
in
sahf
push
rol
adcl
cld
test
sahf
insl
push
sbbl
adc
fcoml
xor
push
push
jg
cmp
clc
jmp
push
insl
mov
mul
in
jle
je
dec
outsl
mov
or
push
dec
mov
rcrl
popw
push
dec
fcomi
pop
mov
testl
mov
xchg
cs
mov
xchg
jnp
lret
push
les
jb
es
push
clc
xchg
inc
sbb
mov
or
ja
xchg
sbb
adc
xchg
mov
arpl
push
ds
jg
lret
cmp
mov
jle
movsb
addr16
xchg
or
jle
add
pop
jecxz
leave
loope
ljmp
outsb
adc
or
repz
jae
sti
cwtl
adc
jg
out
fidivl
push
outsb
xlat
mov
sbb
daa
sub
out
sub
sub
adc
pop
in
push
xchg
mov
dec
xchg
xor
clc
mov
fdivs
mov
cltd
xor
aam
in
mov
cmp
movsb
add
push
mov
aaa
fistpll
pop
push
mov
push
movl
mov
inc
or
push
outsl
adc
bound
sbb
out
mov
jl
jge
xchg
call
popa
test
cmova
push
xlat
push
and
cli
dec
iret
push
push
dec
std
adc
and
jbe
push
loopne
adc
cwtl
xchg
and
lea
xchg
jg
loopne
and
adc
inc
sbb
sti
das
cs
test
fists
cmp
push
in
mov
punpckldq
inc
dec
inc
cmpsl
pop
test
xor
scas
je
push
mov
pop
movb
es
lahf
cli
mov
push
pop
adc
sbb
xor
lret
dec
das
inc
and
pushf
daa
rol
and
sub
pop
in
mov
push
dec
mov
pop
add
mov
out
mov
push
jg
sbb
sahf
push
adc
jmp
mov
shl
cmp
test
and
push
es
popa
xchg
add
jecxz
clc
xchg
inc
cmp
lret
in
test
das
jge
adc
lds
pop
jnp
pop
popa
fildl
jmp
loopne
and
xchg
adc
xchg
stos
xor
jg
cmpsl
aam
xor
aam
xlat
test
xlat
sub
adc
out
xchg
xchg
outsl
cltd
outsb
stos
or
pop
add
xor
pop
data16
dec
lret
push
les
loop
xor
std
inc
dec
sub
pop
add
push
push
pop
test
ret
clc
sub
out
sub
in
shlb
gs
sar
sub
inc
loop
xor
cmp
test
and
jge
push
inc
sbb
imulb
inc
in
add
das
call
mov
mulb
ss
and
inc
loope
mov
popa
aas
loope
pop
pop
cltd
and
ds
and
xchg
pop
loopne
scas
sub
xchg
push
and
incb
cmp
test
and
popa
inc
cmpsb
xor
xor
popa
aaa
mov
jp
push
outsb
rol
cmpsb
cld
mov
xchg
sti
inc
mov
adc
lahf
xchg
pop
pusha
xchg
out
movsb
xchg
inc
addr16
inc
jae
push
pop
out
cmp
sbb
lcall
jl
mov
out
mov
adc
das
adc
jg
xchg
mov
mov
sbb
iret
xor
enter
test
inc
data16
xor
inc
cmp
ret
push
gs
imulb
fcmovnbe
xlat
inc
cmc
clc
lock
movsb
mulb
out
cld
add
push
jbe
imul
adc
ret
aas
or
and
out
inc
pop
add
xchg
cmp
push
push
jbe
and
ljmp
loopne
aad
stos
popa
je
mov
jnp
repz
dec
push
fdivrs
stos
inc
mov
data16
test
data16
data16
hlt
mov
cmpsl
push
daa
cmp
sbbl
adc
in
add
stos
int3
roll
test
sbb
sbb
ja
push
mov
sar
mov
adc
adc
cmpsb
into
pop
sbb
cmpsb
xchg
push
jecxz
cli
cs
pop
xchg
jb
mov
mov
xchg
mov
fwait
out
or
insb
jae
bswap
fwait
jle
les
out
incl
mov
sub
adc
adc
data16
xorb
push
xchg
stos
pop
add
fcmovnu
ss
testl
inc
jns
sbb
adc
insb
aas
xor
loopne
shlb
adc
shrb
movsl
addr16
and
sbb
xor
xchg
xor
fisubl
adc
loopne
sti
push
xor
jnp
adc
xchg
int
je
js
movl
ret
sbbl
pop
flds
pop
fisttps
push
cli
add
jg
call
cmp
mov
outsl
testb
pop
xchg
pop
lret
sbb
mov
jnp
pop
shlb
call
ret
dec
jbe
inc
xchg
cs
sub
test
push
in
test
mov
in
cmp
fsubrs
mov
cmpsl
push
aad
call
inc
dec
ss
mov
pop
aaa
stc
ret
int
cmpsl
mov
popa
popf
out
xchg
or
and
inc
test
adc
jbe
push
ja
cs
fldcw
lret
lret
shll
xchg
mov
jmp
mov
push
push
inc
in
std
ljmp
aaa
inc
sahf
ret
insb
ja
mov
xor
mov
inc
int
dec
mov
sbb
dec
pop
frstor
xchg
mov
mov
loopne
push
adc
shll
in
mov
xchg
xchg
outsl
fs
por
xchg
inc
movsb
jnp
pop
cmp
pop
cmp
xlat
aad
xor
xchg
and
xchg
pusha
push
es
addr16
push
movsl
pop
mov
out
dec
ds
insl
mov
and
ret
mov
add
fsub
test
and
sbb
pop
xchg
sbb
inc
mov
jg
outsl
jae
push
out
lods
test
xorl
lcall
xor
stos
mov
mov
pop
push
dec
adc
mov
xchg
add
or
cmpsl
and
cmpl
dec
mov
xor
add
pop
aaa
push
mov
adc
pop
jecxz
xor
cmp
repnz
int3
and
fstpl
outsl
out
xchg
cmpsb
jbe
fcoms
push
adc
pop
sbb
fs
push
add
pop
mov
in
ss
jne
fcmovu
dec
data16
jmp
in
lret
xlat
les
jns
mov
xchg
ja
inc
outsb
loope
addr16
pop
inc
aad
lods
ds
cmpsl
pop
mov
xlat
dec
mov
outsl
xlat
add
and
outsl
les
adc
cmpb
mov
ja
aaa
jg
jg
dec
ljmp
xor
ja
bnd
jp
pop
push
and
fldenv
xchg
push
stos
pop
mov
pop
adc
fidivs
cmp
xchg
push
sbb
push
jns
fs
fwait
divl
ja
mov
xchg
in
ret
cmpb
pop
jle
lcall
fwait
test
shr
iret
pop
out
es
push
sub
cmp
xchg
push
inc
es
cld
fsubl
loopne
add
or
pop
scas
inc
lea
xor
mul
mov
pop
jmp
jge
cmc
cmp
inc
jns
gs
daa
int3
mov
xor
les
fnsave
jne
loopne
inc
in
fimull
cmp
ss
or
sti
out
and
pop
lock
pop
lods
xchg
ret
sub
int3
xchg
mov
xchg
sbb
inc
test
xchg
sub
ficomps
jp
mov
cmp
push
cmp
push
sub
popl
dec
out
dec
mov
pop
jmp
cmpsb
mov
mov
addr16
pop
cmpsb
fdivl
aaa
mov
pop
push
cmp
outsb
adc
xlat
int
jecxz
das
testl
lret
inc
jmp
lahf
ret
fildll
ss
push
xchg
and
rcl
mov
add
gs
icebp
mov
pop
mov
lcall
out
jle
bound
inc
sbbl
sti
mov
xchg
int
stos
dec
lods
movsb
sub
lock
ss
inc
addr16
mov
mov
inc
mov
mov
sub
and
test
xor
inc
test
and
sahf
leave
dec
cmpsb
scas
xor
sbb
xlat
fdivrs
xchg
rol
cwtl
bound
repnz
inc
jbe
fwait
sahf
add
leave
push
jne
je
loope
jl
jne
mov
mov
inc
inc
shlb
adc
push
jb
pusha
xchg
divl
jmp
pop
xor
push
dec
push
aas
les
jo
lahf
or
es
dec
pop
das
mov
push
and
push
fildl
outsb
jp
aaa
lret
pusha
dec
aaa
iret
fstp
push
xlat
push
cmpsl
ja
adc
sbb
dec
or
stos
popa
push
mov
push
dec
push
xchg
faddl
sub
mov
jnp
jmp
adcl
adc
mov
sub
xor
gs
sub
xchg
pusha
imul
push
or
test
test
idivl
adc
mov
pop
mov
lock
addr16
das
mov
mov
fmul
jno
pop
push
movsl
decl
mov
and
push
inc
dec
adc
fs
add
arpl
jnp
push
fldcw
cli
mov
test
fs
inc
cmp
imul
ds
adc
cmp
inc
pop
lret
or
out
xchg
xor
lcall
test
inc
push
dec
call
xchg
cmp
mov
outsb
xor
mov
push
sbb
sbb
int
stos
gs
je
test
or
sarl
pop
mov
iret
cmpsb
test
dec
and
sub
mov
int
inc
out
xchg
pop
cmc
xchg
xchg
xor
loope
xlat
add
outsl
in
xchg
cmp
pop
push
dec
pop
daa
inc
rorl
lea
inc
mov
cld
fwait
pop
mov
inc
jg
cltd
cwtl
cmp
das
and
jno
add
sub
lahf
repz
dec
xor
inc
popa
in
xchg
dec
xchg
leave
out
inc
jecxz
testl
nop
mov
leave
mov
push
cmp
cmp
sbb
sbb
lods
in
aaa
shll
adcl
inc
xchg
cmp
clc
enter
aam
push
inc
and
cmpsb
push
cmp
mov
mov
pop
cmp
jbe
sub
push
fcmovu
dec
mov
pop
adc
cmp
loop
and
xchg
pop
ret
sub
pop
or
mov
add
ret
dec
rorb
ja
or
inc
mov
mov
sub
stc
andl
push
inc
or
inc
cmpsl
test
sbb
inc
jmp
jp
push
push
inc
mov
push
arpl
cmp
sbb
and
sti
fsubs
xchg
xchg
mov
jnp
outsb
pop
scas
lock
ds
or
ss
mov
xor
ret
pop
cmp
sahf
hlt
stos
dec
cmpsl
dec
iret
pop
stc
repz
pop
movl
xor
xchg
push
je
pop
jmp
xchg
add
mov
es
xor
dec
es
das
imul
sarl
cld
lcall
pop
maskmovq
notl
insl
xchg
adc
lcall
mov
jb
clc
in
dec
jmp
jecxz
xchg
movb
add
adc
push
sahf
scas
push
push
xchg
das
pop
ret
insb
jmp
ss
pop
addl
push
in
push
aaa
popf
dec
xchg
loope
int3
addr16
xchg
dec
stos
in
fsubl
test
rcl
and
loopne
mov
inc
imull
cmp
leave
and
adcb
or
xor
mov
xchg
aaa
out
sbb
mov
and
mov
or
cmpsl
aam
insb
inc
dec
pop
dec
xchg
add
ret
pop
sbbl
shlb
lods
xor
push
xchg
incb
jnp
in
adc
or
lock
adc
mov
enter
negl
xor
adc
fprem
pushf
mov
pop
or
cmp
notb
dec
out
add
mov
arpl
add
xchg
test
cmpsl
pop
in
das
push
lahf
aaa
lds
jle
cmpsb
cwtl
mov
flds
mov
inc
cmpsb
in
jne
roll
movsb
or
fdivs
ljmp
cld
xchg
push
lahf
pop
aas
scas
fs
clc
lds
pop
pop
leave
jmp
and
fstpt
mov
clc
jmp
cmp
imul
inc
cmpsb
pop
fdiv
cmp
xor
pop
movlps
sti
mov
cmp
adc
inc
xlat
rcr
adc
cmpsb
repz
movb
fs
and
in
insb
addr16
les
cmp
sti
std
push
ds
pop
es
mov
loop
fstl
push
arpl
sub
fwait
xor
jg
xchg
push
out
cmp
jle
and
pop
ret
out
dec
lcall
add
inc
out
repnz
lds
daa
mov
xchg
daa
repnz
xchg
loopne
xchg
jg
mov
popf
push
lea
testl
mov
test
inc
xchg
cmp
dec
cmpsb
jno
arpl
cmpsb
adc
test
lret
gs
jnp
push
sub
sub
xchg
mov
addr16
das
mov
movsb
push
rcll
imull
pop
idivl
aaa
sarb
xor
adc
dec
fnsave
loope
mov
cmp
sbb
pop
jne
mov
sub
gs
jle
addr16
dec
or
and
dec
iret
sbb
cld
add
fisttpl
cmc
xor
sbb
pop
imul
test
jbe
pusha
fldt
shrl
ja
xchg
inc
jmp
pop
xor
sub
xchg
jle
and
jp
aam
mov
jmp
outsl
jmp
cld
xor
out
push
add
pop
es
lret
push
pop
fisubs
pop
cwtl
aam
adc
fs
sbb
out
cmp
adc
xor
fsubrp
loop
xchg
movsl
xchg
inc
mov
dec
inc
test
mov
sbb
ds
orl
addr16
addr16
das
sbb
jg
movsl
fdivl
xor
aad
push
lea
rolb
sbb
pop
jle
cmp
push
movsl
and
test
xchg
aaa
jbe
mov
mov
leave
jmp
das
mov
inc
scas
xor
jmp
stos
adc
inc
rcrl
pop
les
adc
sub
cmp
dec
test
adc
inc
call
xchg
pop
sub
cmp
xchg
and
xchg
mov
xchg
mov
xchg
addr16
movsl
es
sub
jnp
or
pop
mov
daa
sarl
mov
inc
xchg
fistps
mov
test
jno
enter
xor
dec
sub
add
je
and
and
lret
insb
jle
jbe
inc
adc
pop
in
inc
sub
arpl
jmp
sahf
fwait
add
dec
test
and
out
xchg
mov
int
loopne
movsb
data16
push
jl
dec
pushf
xlat
mov
test
dec
fwait
dec
jg
add
adc
push
loop
daa
adc
popa
or
insl
test
iret
mov
jns
pop
sbb
xor
jno
pop
arpl
and
add
js
xchg
add
cmp
test
xchg
mov
mov
test
mov
mov
dec
push
cmp
and
jecxz
push
lcall
dec
enter
ss
fdivs
dec
mov
or
push
pop
cmp
cltd
jbe
repz
je
dec
adc
mov
mov
daa
jecxz
lret
inc
in
imull
or
adc
sub
sbb
ror
aaa
mov
repz
das
out
xchg
cmpsb
inc
sbb
outsb
mov
add
mov
data16
dec
mov
push
jmp
sub
jmp
inc
or
pop
jle
mov
inc
notb
jle
es
int
inc
cs
int
pop
in
adc
xchg
andb
pop
add
push
dec
pop
push
pop
xchg
mov
jbe
lods
xchg
icebp
aam
push
jmp
mov
jge
or
nop
inc
data16
xchg
add
pop
xor
xchg
int
jg
pop
push
mov
mov
xchg
xor
out
cmpsl
push
addb
dec
xchg
xchg
data16
mov
mov
add
lret
imul
pop
pop
xchg
add
imul
addr16
test
lea
sbb
xchg
je
or
inc
stc
add
enter
cmp
push
in
dec
sub
cld
jno
int3
adc
mov
xlat
aas
xor
push
pop
jnp
sbb
dec
imul
lods
cmovs
add
mov
mov
jecxz
cmpsb
xor
sar
in
xchg
shlb
pop
and
push
cmp
jg
lock
push
inc
inc
movsb
scas
je
frstor
imul
mov
adc
test
pop
mov
xchg
outsl
xchg
sbb
dec
hlt
out
int
jge
push
sub
fsubrs
iret
icebp
sahf
jge
pop
pop
dec
jnp
icebp
mov
aad
aaa
dec
inc
pop
in
mov
in
bound
jae
aaa
cld
mov
or
scas
dec
imul
scas
enter
movsb
cmp
xchg
lds
test
jg
xchg
dec
push
sub
dec
lds
xor
mov
jno
sbb
pop
lar
add
out
sahf
mov
aaa
ss
or
inc
in
insb
or
sbb
xlat
js
jle
lahf
cmpsb
cmp
cld
ss
cmc
call
inc
fadd
xlat
cmpsb
mov
aad
jp
adc
cld
lcall
ret
pop
inc
out
popl
pop
mov
xor
ret
push
sysexit
fistps
bound
cmpsl
fsubp
or
jp
dec
outsl
xor
lret
cmp
mov
cmp
push
add
sbb
and
xchg
imul
or
xchg
pushw
adc
inc
xchg
jnp
sahf
add
add
sbb
xor
and
rcr
in
jnp
daa
mov
movsl
subb
iret
popa
xlat
addl
icebp
and
cmpsb
mov
in
cld
fidivs
xlat
mov
ds
push
leave
and
addr16
ret
aaa
mov
shrl
addr16
and
loopne
sbb
bound
cmpsl
daa
dec
push
cmp
mov
dec
stos
sub
or
fsubr
jecxz
mov
xchg
scas
mov
aam
mov
xor
cmp
jne
jle
mov
cmp
lcall
inc
adcl
push
xchg
xor
ror
mov
xchg
jno
inc
aaa
enter
aad
and
lahf
das
xchg
mov
push
lret
outsb
and
ret
push
aaa
mov
push
das
mov
xorb
sub
push
push
addr16
aad
std
aaa
cmpsb
enter
shlb
dec
xchg
mov
aaa
xchg
mov
add
inc
add
jl
insb
lcall
fimuls
adc
cmpsl
push
test
mov
mov
mov
shlb
ja
out
in
inc
or
push
aam
ss
iret
daa
lret
addr16
inc
ficompl
iret
xchg
dec
and
and
push
add
mov
ds
xlat
lea
xchg
mov
nop
orl
in
repz
and
adc
daa
aam
cmp
outsb
in
pop
daa
add
xchg
mov
in
push
push
std
jnp
mov
mov
lea
sub
xchg
xchg
push
cwtl
xchg
cmpsb
mov
pop
mov
mov
inc
sub
daa
nop
mov
and
aam
push
cmpsb
add
push
xchg
xchg
xlat
inc
push
decb
out
push
adc
adc
cmp
and
sbb
and
mov
stos
mov
cmpsl
ftst
fsubs
inc
jecxz
xlat
packuswb
aaa
push
mov
sbb
sub
jecxz
fcmovu
mov
rcl
fsubrs
xchg
jle
mov
aad
xchg
mov
adc
adc
movsl
test
test
mov
cmpsl
or
inc
ss
add
outsl
add
dec
rolb
repz
lea
push
inc
mov
push
or
fimuls
push
and
movsl
push
adc
pop
xchg
movsb
sub
xor
lods
ficompl
xor
jbe
jns
iret
mov
mov
adc
xchg
mov
mov
cmpsb
in
lea
xchg
std
dec
popl
rorb
xor
push
adc
das
sub
push
pop
test
inc
adc
gs
rorb
cmp
nop
repz
popa
mov
jbe
adc
sbb
in
sahf
lret
sub
popl
shrl
inc
add
das
test
sbb
imul
scas
pop
repz
xchg
pop
adc
add
xchg
pushf
mov
cmp
dec
or
pop
in
adcl
sahf
jae
ja
out
mov
push
pop
movzbl
sarb
sbb
jle
and
test
daa
lds
data16
xchg
mov
dec
xor
push
imul
xchg
xchg
in
and
sub
xlat
mulb
push
std
das
jnp
cmp
cmp
aad
js
sub
ficoms
bnd
mov
das
push
popf
jnp
es
int
xor
mov
add
and
cmp
adc
push
and
xchg
jmp
test
xchg
inc
pusha
dec
push
out
mov
pushw
dec
pop
cmpsb
enter
out
out
and
rcrb
cmc
ret
add
push
xor
mov
dec
pop
cmp
fadds
fwait
xor
leave
repz
cmpsl
in
dec
sub
loop
sbb
add
sub
pop
cmp
scas
in
iret
mov
dec
xor
xchg
cs
in
inc
cmp
lods
movb
add
cmp
mov
push
bound
mov
out
fucom
xchg
push
and
push
scas
loopnew
push
into
add
pop
xor
sbb
adc
mov
adc
clc
and
call
cmpsb
or
dec
test
fisttps
dec
lret
sahf
jecxz
jl
xlat
ja
je
cmpsb
out
dec
sub
insl
cmpsb
jbe
cmpsl
xor
adc
cld
clc
cld
cmpsb
push
les
push
inc
mov
mov
or
jmp
bound
mov
push
jns
or
xchg
sbb
xorl
push
iret
lcall
cmp
mulb
xchg
cmp
pop
pop
mov
ffree
pop
pop
mov
add
pop
mov
mov
mov
ja
adc
mov
xchg
xchg
out
in
out
cmpsb
outsb
mul
push
test
jbe
ret
aaa
xlat
push
aaa
cmpsb
mov
iret
pop
push
outsb
pcmpgtw
xchg
push
pop
sbb
jbe
push
xchg
pop
mov
bound
scas
into
jbe
pop
push
outsb
pop
gs
xchg
push
pop
imul
mov
iret
sbb
jecxz
and
sbb
xchg
int3
adc
jle
xchg
sub
test
xchg
pusha
aam
sbb
jmp
add
jmp
dec
add
in
cmp
sbb
mov
inc
fisttps
cmp
out
insb
mov
push
int
arpl
and
cs
inc
mov
sub
xchg
aaa
adc
jo
mov
adc
jno
cltd
out
jnp
sbb
stos
cli
iret
iret
ss
aad
movsb
mov
les
test
xchg
mov
push
jecxz
push
xor
mov
adc
lcall
push
push
inc
pop
sbb
testl
das
leave
pop
mov
sbb
divl
pop
cmp
dec
lret
addr16
aad
fidivl
fsubrs
xchg
test
jecxz
pop
out
xchg
ret
outsl
push
out
int3
adc
push
jmp
jne
mov
sub
je
ret
out
pop
jmp
mov
push
push
push
cmp
les
in
sti
jle
jnp
ret
test
fs
filds
out
shll
inc
xchg
rcrl
adc
pop
stos
cs
fucom
dec
sbb
call
jp
lods
fldcw
clc
cmp
neg
and
daa
push
pop
mov
and
adc
cmp
add
out
sbb
decl
lock
mov
aaa
pushf
aam
out
subb
mov
outsl
dec
adc
dec
push
and
aas
stos
mov
fs
mov
xor
mov
xchg
sbb
insl
cld
fwait
cmpsb
xchg
lock
xchg
dec
bound
mov
mov
lret
int3
push
adc
and
pop
mov
dec
cltd
fstl
adc
aaa
and
cmp
jle
sar
out
cs
jecxz
notrack
mov
enter
jmp
add
dec
mov
jbe
inc
sarb
ds
iret
popf
insb
lret
push
inc
ja
call
push
mov
int
lret
push
and
das
or
and
dec
and
cld
loop
mov
insb
dec
std
stos
jge
cmp
lock
lcall
mov
inc
scas
arpl
repnz
push
xlat
xchg
cmp
push
sub
pop
dec
mov
movsl
add
adc
test
ss
icebp
int
sub
push
xlat
add
pushf
cmpsl
aaa
in
hlt
mov
leave
inc
divl
inc
jae
and
into
or
ffreep
jmp
lret
fidivl
mov
fnsave
cmpsb
mov
out
in
stos
and
pop
or
test
pop
mov
jae
in
jmp
dec
test
xchg
into
xchg
je
fnstcw
push
xchg
jg
push
pop
jle
xchg
mov
dec
sub
pop
adc
mov
insl
in
negl
addr16
movsl
pop
mov
xorb
jno
inc
test
arpl
std
xchg
aaa
adc
fldl
addr16
jge
fcoms
cmp
xchg
or
imul
xor
cmpsb
sbb
scas
or
pop
add
xchg
in
je
sahf
jmp
lret
rorb
xlat
and
daa
xchg
xlat
mov
jbe
xchg
aas
and
push
mov
test
dec
iret
jg
adc
in
push
pop
add
push
cmp
and
loop
dec
int3
pop
in
xchg
and
ret
aam
xor
mov
add
dec
scas
adc
ljmp
lock
arpl
push
pop
clc
imul
cmp
cli
sbb
jg
adc
mov
rcll
jecxz
ja
shrb
ja
call
daa
insl
rclb
push
and
dec
ja
cmp
clc
add
mov
inc
and
cmp
add
leave
iret
inc
mov
jnp
mov
ret
jnp
add
pop
mov
bound
fmull
leave
rcrl
xor
jae
addb
mov
pop
cs
ret
dec
sarl
and
int
cmp
in
mov
rcll
clc
jle
push
into
iret
lret
out
mov
xlat
sbb
jmp
sub
fistps
push
lock
inc
cmp
lcall
imull
aaa
mov
cmp
push
push
sbbb
ret
dec
push
cld
lret
adc
xchg
insb
aaa
stos
pop
cltd
mov
sahf
adc
add
ss
inc
out
pop
xchg
sub
push
sub
pop
and
pop
jge
and
out
pop
add
mov
xchg
cmpl
orl
outsl
jecxz
aam
decl
push
sti
pusha
movsb
sbbl
and
xor
mov
cli
or
inc
dec
ds
jle
fs
push
sbb
cmpsb
sbb
and
xchg
cmpsb
cmp
jo
sti
sub
inc
andl
int
jb
pop
jnp
in
jle
mov
push
daa
push
xchg
sar
dec
in
sbb
int3
inc
xchg
lcall
cli
cmp
inc
out
daa
orl
push
jp
imul
jg
mov
pusha
dec
cmpsb
and
adc
aas
or
aaa
jecxz
push
pop
mov
push
sahf
test
in
adc
cli
repz
xlat
ljmp
inc
mov
add
cmp
xchg
daa
scas
xchg
gs
mov
adc
aaa
cmp
lcall
dec
cwtl
negb
iret
cmp
pop
lods
jo
je
xchg
add
addr16
xchg
jle
out
pop
lds
cmpsl
pop
pop
and
mov
pop
js
inc
adc
and
mov
cmpsb
xchg
lds
inc
jp
pop
mov
roll
mov
sbb
jmp
movsl
repnz
dec
mov
repnz
mov
das
mov
xchg
mov
testl
push
mov
xlat
push
mov
mov
pop
mov
in
les
ret
xchg
adc
inc
mov
pop
hlt
lahf
dec
inc
and
xchg
data16
cs
and
repnz
jmp
xchg
mov
pop
mov
and
shl
inc
mov
mov
mov
jp
sub
fwait
mov
test
lret
fdivrs
and
loopne
in
lods
and
in
xchg
in
jbe
inc
aad
mov
lea
mov
push
pop
ret
mov
xchg
out
mov
cmp
and
pop
push
test
es
popl
push
ja
push
xlat
fsubs
add
cmpsl
sub
aam
and
gs
insl
gs
fiadds
cmp
or
push
jp
rolb
aas
shll
push
dec
xchg
and
out
xlat
dec
lods
shl
in
cmpsl
push
dec
je
or
int3
mov
mov
push
data16
xchg
out
rorl
ja
popf
repz
jle
cld
sub
mov
xor
sbb
cli
xor
cmp
aaa
push
pusha
aaa
scas
call
jbe
adc
jbe
xchg
dec
dec
jae
adc
stos
cmc
mov
subb
nop
decb
sub
jmp
cmp
xor
out
adc
push
stos
mov
fucomi
dec
lcall
int3
lea
adc
idivb
pop
shll
jge
and
lods
adc
stos
fidivl
out
in
shl
push
jbe
xor
notb
fmull
dec
call
jb
les
dec
test
xchg
ss
fnstsw
push
sub
scas
fwait
lret
mov
dec
dec
jnp
xorb
popa
daa
das
and
mov
shlb
cmc
ret
imul
in
or
arpl
movhps
pop
dec
add
cmp
or
xorb
ret
cs
test
testb
mov
mov
into
and
movsb
cmpsb
movsb
sahf
shl
ret
loop
mov
test
sbb
xor
fistps
xor
inc
arpl
push
cmp
scas
jl
iret
stc
ja
in
inc
inc
mov
ljmp
cmp
and
mov
push
jno
daa
or
out
out
push
push
leave
test
mov
mov
into
mov
into
sub
in
inc
divb
lds
in
adc
das
int
sub
sbb
fwait
gs
adc
push
push
lret
jge
test
sahf
movsb
ss
push
addr16
jle
aad
xchg
adc
and
push
adc
xchg
aad
loope
adc
rsqrtps
sbb
out
mov
push
cmpsb
mov
and
mul
cmp
arpl
sarb
or
lahf
data16
lock
ja
int
cmp
push
xchg
lea
aaa
inc
xchg
ret
fmul
or
fs
xlat
add
fmull
dec
addr16
dec
mov
xchg
push
push
clc
push
mov
bndstx
test
xor
mov
mov
pop
xchg
dec
std
mov
and
xor
insl
inc
into
pop
out
dec
rorb
ss
adc
test
adc
popa
cwtl
dec
mov
or
inc
fwait
add
pop
xchg
dec
jle
loop
addr16
add
cmp
or
cmpsb
sbb
sahf
test
mov
fbld
bound
pop
cmp
push
mov
repnz
dec
lock
mov
xchg
in
sahf
cmpsb
stos
mov
js
ret
lret
xchg
xchg
fsub
je
lds
cmp
xchg
in
sub
adc
repz
cmpl
xchg
and
and
jbe
or
mov
cli
stos
push
xlat
dec
cmp
repz
movsb
movsl
xor
sahf
sahf
xchg
lock
pop
pop
std
iret
inc
in
cli
insl
pop
inc
push
inc
inc
mov
loope
mov
and
push
inc
push
xchg
and
mov
rorb
xor
push
vmovss
adc
and
js
bound
pop
xchg
mov
lods
and
js
push
xchg
sahf
add
movq
pop
loop
popfw
lahf
push
outsb
ja
divl
sbb
and
lahf
ds
arpl
pop
mull
addr16
in
jecxz
push
jmp
dec
mov
push
mov
push
pushf
jecxz
mov
icebp
cmp
cmp
xor
mov
lea
ficoms
sbb
xchg
scas
divb
xlat
jno
xor
mov
push
cmp
popa
lret
repz
dec
icebp
adc
inc
lcall
popf
das
push
add
aaa
pop
imull
ret
add
add
les
mov
in
pop
outsb
push
jbe
adc
xor
sbb
pcmpeqd
cmpsb
sub
push
popf
addb
negl
sbb
dec
sbb
cld
loope
insb
sub
push
testb
push
add
lcall
and
popa
mov
xchg
aam
ds
xchg
clc
fists
rol
add
xchg
int
aaa
out
sub
in
push
inc
pop
aas
cli
add
xor
xchg
pop
push
mov
or
lods
pop
cmpsb
es
pop
adc
aaa
push
xchg
movsl
popa
inc
ret
jmp
and
xchg
inc
push
add
test
mov
cld
push
movsl
cmpsl
fstl
jle
jb
mov
cmpsb
dec
adc
push
jno
xor
repnz
daa
push
sbb
cld
addl
add
mov
nop
std
mov
adc
icebp
daa
int3
jne
cmp
xchg
push
mov
das
add
enter
inc
jne
cmp
mov
test
aas
aaa
les
ja
call
inc
add
jecxz
arpl
addr16
int
lods
das
adcl
shrl
aaa
faddl
arpl
push
mov
test
test
gs
xchg
dec
jne
jo
stos
mov
mov
mov
nop
out
dec
mov
and
and
mov
push
cmpsb
mull
test
mov
adc
or
adc
or
jb
popl
inc
push
mov
adc
fsubs
in
xor
jne
xchg
sahf
mov
rorb
insl
jg
add
cld
adc
mov
or
mov
aam
gs
lds
js
dec
sahf
mov
dec
int
ss
test
popf
cmp
loope
stos
fdivrp
bound
inc
and
pop
or
cmp
out
mov
popa
mov
scas
cltd
xor
xlat
add
in
xchg
test
fdivs
adc
mov
imul
sbb
scas
push
pop
cmpsl
aaa
add
test
dec
jmp
inc
adc
inc
test
out
xlat
ret
addr16
cmpsl
push
xchg
cmp
addr16
test
cmpl
mov
add
mov
xchg
adc
mov
xchg
sbb
loopne,pt
pop
addl
xchg
mov
in
cmp
add
pop
fs
lods
cmp
cmp
fsubp
and
mov
jge
pop
outsl
pusha
jbe
push
dec
cmp
ret
loop
xchg
rcrb
addr16
inc
shlb
jns
pushf
dec
aaa
cmp
sbb
addr16
test
outsl
in
das
dec
ljmp
and
aaa
out
mov
iret
movsl
stos
icebp
mov
ret
es
sti
mov
test
xor
pop
das
cld
or
testl
sti
inc
nop
clc
inc
push
jg
sub
and
push
jne
add
cmp
xchg
mov
pop
dec
out
subps
jmp
out
xchg
push
daa
stos
pop
gs
sub
pusha
cmpsl
jecxz
fwait
addr16
ja
push
xchg
jmp
adc
fimuls
pop
fsts
addr16
fwait
jg
push
fadd
sarb
cli
dec
clc
cmp
jnp
dec
shl
imul
lret
filds
insb
in
int3
push
ret
les
or
ss
fdivrs
and
xor
push
call
outsb
mov
mov
dec
pop
sub
cwtl
cld
xchg
xor
xchg
xlat
int
xor
adc
jle
repnz
jge
je
xor
aam
fisubs
fwait
xlat
xchg
out
xlat
cmpsb
sub
inc
aaa
cs
dec
leave
adc
int3
or
dec
movsb
inc
dec
js
das
jg
popl
daa
sahf
sbb
dec
dec
or
rcrl
lods
jnp
adc
mov
pop
ss
adc
ds
xchg
lcall
cmpsl
inc
mov
or
movsb
sub
xchg
cmp
add
cld
pop
sub
popa
outsl
aaa
mov
push
cmp
lds
mov
lret
pop
clc
movsl
jb
loop
lds
mov
xchg
cltd
or
clc
gs
push
add
dec
enter
inc
mov
in
shlb
dec
movsb
stos
loopne
sbb
and
mulb
add
dec
movlps
jnp
pop
pop
iret
inc
jne
into
inc
push
jno
jle
popf
fs
jmp
sub
inc
jne
sub
push
sarl
and
fldl
mov
out
add
xor
push
mov
pop
out
testl
int
pop
fs
icebp
add
pop
out
ret
add
or
pop
imul
dec
add
mov
dec
in
pop
dec
inc
aas
lret
sbb
sbbb
push
add
xchg
imul
xchg
push
xor
mov
inc
out
daa
scas
pmulhw
pop
push
pop
test
push
iret
xor
dec
or
fldenv
repz
pushf
xchg
mov
ret
xor
sub
mov
das
push
jecxz
adc
loop
push
stos
add
add
cmp
adc
cs
rorb
fsubr
jmp
mov
stos
mov
push
xchg
fstp
lock
mov
rorb
xor
xlat
repnz
addr16
lock
inc
sub
dec
cltd
movsl
xor
xlat
lret
not
test
add
sbb
addr16
shrb
cmp
add
movntq
sbb
mov
aaa
sub
rdtsc
dec
aaa
cmp
in
add
sbb
adc
out
scas
mov
movsl
sbb
data16
call
sub
lea
mov
pop
in
ret
jbe
add
popl
daa
in
sub
mov
aad
mov
pavgw
mov
cld
lret
pop
clc
cmp
test
dec
bnd
jp
cli
es
in
or
push
icebp
mov
decl
btr
daa
cmp
les
sub
push
sahf
cmpsl
push
fiaddl
cmp
stos
arpl
call
mov
jae
mov
mov
mov
insl
dec
jns
dec
jae
pop
popa
mov
fwait
les
jle
fwait
push
mov
popa
es
add
scas
push
daa
mov
xchg
aaa
adc
ret
jmp
jb
lahf
outsb
sbb
mov
das
adc
iret
xchg
ret
jecxz
ss
cwtl
push
xlat
ret
ja
dec
push
mov
push
add
cmp
sbb
movsl
sbb
jle
jp
sti
pusha
repz
sbb
and
loope
sub
sbb
jecxz
xchg
pop
jle
aaa
loop
fs
dec
fiaddl
push
loopne
gs
out
inc
out
xchg
arpl
movsl
push
lret
or
and
jle
jmp
push
inc
cmp
mov
movsb
daa
ja
jno
cmpsl
je,pn
and
push
outsl
dec
mov
movsb
jg
adc
add
cmp
mov
insb
sub
out
dec
push
push
and
jl
dec
xlat
pop
std
fistpll
lret
movsl
inc
xchg
std
cmpsb
add
add
dec
movsb
inc
int3
sub
shrl
xchg
and
mov
xlat
nop
adc
aas
aaa
jle
pop
sub
inc
andl
test
aam
push
sub
xor
mov
mov
les
and
shr
stc
fidivrs
in
int3
cmp
divl
xchg
sub
daa
mov
cmpsb
stc
jle
adc
lret
inc
daa
fldenv
int
adc
mov
cmp
sub
pop
xlat
pop
jle
mov
nop
stc
cmp
cmp
and
dec
out
cmp
ret
inc
in
add
daa
in
and
mov
pop
inc
cmpsl
push
cmpsl
adc
add
loop
pop
es
cmpsl
int
lret
adc
repz
dec
jmp
fildl
bound
in
xor
adc
enter
adc
scas
lret
adc
in
cmpsl
push
mov
jg
sbb
dec
or
push
out
imul
push
movsb
push
in
test
fldenv
add
push
nop
stos
addr16
int3
movsb
lret
mov
push
pusha
jl
mov
fwait
es
ds
jns
daa
pop
add
xchg
jmp
adc
test
fs
fisttpl
jge
xchg
mov
bswap
pop
arpl
arpl
lea
adc
repz
fldenv
test
das
jnp
mov
testl
movb
mov
scas
dec
and
icebp
lods
sahf
int
dec
jle
leave
cmp
call
lods
inc
dec
add
and
add
jb
xchg
stos
sub
arpl
outsb
dec
add
lret
push
xchg
lods
sti
add
xchg
inc
in
cmp
xchg
fs
fdivrs
pushf
stos
test
test
pop
inc
mov
es
mov
xor
xchg
add
adc
mov
push
inc
call
dec
lret
in
and
mov
ret
inc
cmp
cmp
jo
testb
les
xchg
stos
addr16
add
test
inc
out
jmp
xchg
push
outsb
movsl
jecxz
or
popf
mov
outsl
xchg
out
rdtsc
movsl
sub
cltd
dec
jge
fstpt
and
push
xor
inc
or
xlat
pop
iret
inc
mov
jb
lds
lahf
jle
cmpsl
cmpl
xchg
in
aad
stos
jl
cli
shl
mov
fiadds
test
inc
lock
cmp
sub
mov
sub
sub
lds
xchg
or
aaa
movl
mov
addr16
fs
jmp
cmpsb
stos
out
stos
mov
push
mov
xchg
std
ds
stos
and
rcl
jecxz
cwtl
stc
test
fiaddl
lret
test
xchg
nop
inc
daa
outsb
dec
loope
stos
roll
push
pushf
push
icebp
inc
dec
sbb
test
sub
xchg
jg
popf
pop
iret
mov
sbb
jae
sbb
adc
push
cmpsl
repnz
cld
cmp
les
add
and
fildl
ds
lods
xlat
adc
movb
sbb
fwait
or
dec
out
stos
inc
adc
daa
inc
xor
inc
aas
adc
inc
inc
add
or
xor
loopne
sub
insb
push
je
xor
rol
add
mov
test
jl
stc
adc
push
movsb
xor
mov
popa
jo
arpl
mov
adc
fistpll
cmp
push
push
mov
push
ret
mov
sbb
shll
call
and
jmp
xchg
mov
rolb
arpl
pop
xchg
imul
lret
cmp
mov
lods
inc
repnz
or
nop
adc
mov
shl
addr16
aaa
movsb
pop
lea
out
icebp
jnp
test
adc
aam
sub
ret
pop
dec
cld
insl
out
mov
add
mov
loop
mov
jl
es
divl
shrb
xor
loop
out
cli
adc
or
in
xor
pop
das
out
rol
aaa
mov
push
or
jnp
sub
add
jg
pop
addl
inc
xchg
icebp
dec
or
repz
in
pushf
mull
push
xchg
pop
dec
mov
mov
repnz
and
push
shlb
inc
push
out
leave
xchg
push
xor
push
scas
pop
pop
or
je
mov
int
mov
push
lret
enter
sti
mov
sbb
aaa
cmpsl
leave
cmp
add
iret
test
sub
push
xor
mov
rcrb
lret
push
ljmp
enter
mov
cmpsb
stos
in
mov
jle
xchg
cmpb
cli
out
xchg
fmull
lcall
mov
cmp
adc
daa
add
fists
inc
sbb
adc
ja
dec
aad
scas
rorl
jg
add
cli
inc
pop
inc
nop
xor
js,pn
xlat
add
or
mov
or
mov
mov
rolb
add
movsl
and
and
std
pushf
push
cs
cli
aad
insb
xor
add
or
lcall
out
mov
xchg
push
jno
dec
cmp
call
iret
mov
add
sbbl
xlat
js,pn
dec
sahf
lret
andb
gs
ss
mov
pusha
pop
pop
and
lea
cmp
test
cld
inc
inc
cmpsl
add
jnp
dec
add
adc
jmp
jp
or
jbe
pop
sub
test
or
push
cs
sub
mov
add
inc
int
sub
in
inc
push
mov
dec
add
push
push
dec
fldcw
xor
adc
mov
mov
cmc
sbb
xchg
add
add
sbb
mov
or
int3
xchg
loopne
dec
std
mov
xchg
mov
imul
test
pop
adc
inc
sbb
orl
push
aas
iret
xor
jmp
std
inc
dec
daa
push
adc
inc
iret
movsb
push
aaa
push
or
inc
int3
pop
arpl
adc
adc
push
xchg
fistps
arpl
das
adc
and
push
cmp
jecxz
push
mov
dec
stos
and
addr16
cmpsl
adc
cli
stos
ret
incb
mov
and
and
jmp
repnz
adcb
mov
imul
lds
stos
inc
mov
push
mov
xor
addr16
mov
add
mov
out
xchg
inc
push
rolb
in
adcl
xchg
jb
movsb
mov
int3
fidivs
mov
push
and
or
push
jno
fwait
aaa
jg
out
add
xor
push
stos
cs
or
test
xchg
testl
cwtl
outsb
push
ja
pop
xlat
push
idivl
inc
jbe
jg
push
push
xor
push
and
push
and
mov
inc
xlat
iret
mov
mov
push
lcall
ret
adc
xchg
inc
xlat
jle
sahf
inc
or
adc
push
adc
adc
movsb
mov
cmpsb
cli
fwait
shl
sar
mov
mov
push
add
enter
cmpsb
cmp
ficomps
xchg
xchg
mov
aas
and
das
pop
cmp
mov
ret
les
dec
addr16
je
cmp
jno
pop
dec
jl
pop
pusha
mov
xchg
jle
adc
mov
jbe
inc
test
cmpsb
lds
dec
mov
mov
notl
pop
adc
xchg
arpl
arpl
adc
sub
mov
movsb
daa
je
inc
fsubs
adc
xor
repnz
scas
push
aas
test
jo
fdivr
std
pop
adc
int
shrl
pushf
sti
or
arpl
ret
jae
pop
stos
call
loopne
push
pop
jnp
dec
cmp
add
fwait
inc
mov
sub
arpl
inc
es
cmpsb
clc
jge
dec
loope
and
jb
jae
pop
jae
adc
pusha
and
or
mov
xchg
or
jb
mov
fisubs
popa
pop
xor
mov
test
push
nop
sbb
dec
jmp
into
fcoml
aaa
out
cli
in
push
cld
fistl
mov
xchg
lea
pop
or
xchg
xor
mov
add
add
mov
test
adc
ror
in
adc
push
loope
sbb
adc
push
ljmp
xor
xchg
dec
bound
mov
push
xchg
push
stos
inc
cwtl
nop
cmp
inc
push
inc
lret
jb
xlat
mov
pop
and
das
xchg
pop
pop
and
jne
pop
int3
inc
inc
loop
mov
sub
out
rclb
pop
mov
adc
rclb
jbe
fisttpll
repnz
bound
int
movsl
mov
negl
out
mov
mov
dec
jns
push
divb
mov
cli
neg
xchg
cmc
or
lahf
pop
aaa
adc
mov
add
xchg
cmpsl
movb
xchg
sbb
xchg
arpl
jle
in
and
movd
js
add
stos
movsb
mov
jmp
out
inc
dec
adc
cli
sbb
int
mov
cli
inc
pop
mov
pop
xor
into
sub
push
out
xor
fisubrl
sub
imul
mov
cmc
sub
add
dec
and
roll
shlb
add
sti
xor
cld
out
stos
sbb
add
mov
pcmpgtw
bound
int3
sbb
cmp
outsb
sub
add
and
daa
or
pusha
adc
iret
pop
data16
adc
aaa
xchg
pop
add
int3
pop
or
pop
loopne
lods
into
out
dec
mov
repz
andl
mov
jae
inc
pop
cmp
pop
cmp
mov
sub
fildll
loopne
repz
pop
xchg
dec
xchg
inc
push
insb
pop
daa
dec
mov
fistps
xchg
push
in
add
idivl
adc
inc
xlat
ljmp
shrl
cmpsb
dec
cmp
movsl
or
imul
pop
adc
mov
dec
jl
push
daa
aad
sub
adc
fs
mov
pop
aam
flds
cs
sbb
push
fs
xor
test
push
or
push
push
jno
add
aam
fcomi
enter
jb
mov
xchg
jg
push
add
fstpl
xlat
mov
and
lret
pop
ljmp
dec
adcl
mov
sbb
xchg
cmpsb
scas
sbb
ficomps
and
xchg
dec
xchg
adc
unpcklps
aas
into
inc
scas
out
mov
cmp
ret
scas
jle
xchg
shlb
cmp
push
addr16
in
push
and
mov
repz
sarb
div
outsl
xchg
dec
punpcklbw
adcl
imul
insb
outsb
xchg
cwtl
adc
and
xor
adc
loop
jecxz
sbb
cmpsl
popf
sbb
inc
push
fistl
jecxz
add
xchg
popa
push
out
pop
out
adc
out
dec
inc
cs
pop
imul
lret
ja
jle
loope
fcoms
inc
dec
rcrb
movsl
xchg
outsl
inc
xchg
mov
dec
outsl
popf
pop
lcall
mov
inc
adc
adc
jmp
mov
rolb
mov
cwtl
cmpl
push
fwait
and
lea
or
jecxz
jbe
mov
mov
add
xchg
or
sub
int3
pop
and
add
stos
cld
or
mov
pop
dec
jmp
pusha
movsb
lret
sub
mov
add
dec
or
add
dec
cli
cmpsl
dec
and
add
test
mov
inc
cmp
and
add
push
adc
push
js
push
push
pop
xchg
and
ja
scas
push
cmp
xor
xchg
push
cmc
pop
daa
daa
push
push
mov
inc
mov
pop
xor
ja
pop
xchg
sbb
popf
mov
dec
xchg
mov
cmp
movsb
mov
xorl
addr16
xlat
aaa
dec
sbb
pop
mov
stos
ljmp
aas
jns
pusha
sub
or
push
lods
cmpsb
je
jne
adc
ret
push
imul
add
xchg
ja
arpl
aaa
addr16
push
sub
arpl
xchg
mov
and
mov
dec
fs
lcall
sarb
xor
pop
jne
push
mull
mov
inc
out
xchg
out
mov
push
dec
mov
ds
popf
orl
ss
pop
add
xchg
or
lods
and
es
cli
push
ret
push
cmpsb
pop
je
xchg
rolb
add
mov
ja
cmpsb
and
inc
mov
lock
xchg
dec
xchg
popf
xor
add
mov
push
pop
xlat
mov
adc
mov
xchg
jg
dec
pop
dec
jg
ja
sbb
xchg
addr16
ret
nop
xchg
scas
adc
jne
xor
es
and
jg
scas
push
aad
fcoms
ss
jle
inc
imul
lods
pop
push
lahf
fsubs
pop
das
inc
push
xchg
xlat
out
add
std
loope
xor
adcb
pop
aas
mov
sub
addl
movsl
mov
xchg
xor
push
fists
js
jno
mov
push
xchg
fld
mov
pop
insb
addr16
mov
cs
idivb
xlat
add
and
adc
and
xchg
outsl
fldenv
jecxz
push
and
push
iret
mov
rol
inc
mov
add
push
aad
loopne
data16
aad
scas
mov
or
mov
dec
int3
jne
push
jno
cmp
sub
scas
lods
outsl
xchg
daa
adc
jecxz
fwait
es
mov
leave
jae
add
adc
nop
popf
scas
rcl
xchg
mov
repnz
pop
push
push
xchg
in
fisttpl
fs
cli
xchg
aad
lahf
mov
ss
adc
add
jmp
sub
mov
das
lret
in
cltd
lea
mov
outsb
outsb
fsubs
mov
xchg
cmp
es
pop
out
mov
dec
in
push
shlb
movsb
inc
mov
andl
push
mov
pop
fimuls
int
lret
repz
dec
lret
adc
out
mov
stc
lcall
pop
stos
pop
insb
xchg
or
mov
xchg
out
jb
xchg
xor
adc
push
sahf
cmp
fiaddl
das
inc
and
js
push
xchg
aaa
cmp
dec
xlat
pop
aaa
or
mov
ret
mov
in
sbb
idiv
push
dec
ss
stc
das
xchg
mov
outsb
sub
pop
adc
daa
xlat
inc
cmp
fwait
push
out
fs
lea
mov
xchg
xchg
test
mov
inc
pushf
insb
in
inc
movsl
xor
mov
xchg
mov
test
sahf
inc
imulb
xchg
outsl
pop
out
jl
call
add
cmp
add
sub
inc
mov
xchg
push
insl
mov
lock
and
sub
inc
mov
push
out
mov
xchg
fidivrs
pushf
mov
call
push
pop
es
push
mov
push
pop
push
leave
or
fwait
sti
inc
xchg
xchg
dec
push
xor
jns
mov
in
push
fildl
orl
cld
adc
insb
sti
scas
mov
xchg
pop
xlat
mov
xor
mov
cs
add
es
inc
shll
push
mov
push
test
jg
bound
adc
es
jg
xor
bound
call
mov
and
aam
notl
inc
call
dec
jmp
pop
add
mov
mov
xchg
push
addr16
inc
jl
xchg
sub
movsl
push
decl
iret
add
aaa
pop
lds
es
push
cs
xor
and
outsb
pop
mov
notb
dec
ret
lock
xlat
pop
and
sbb
ljmp
hlt
xchg
push
enter
dec
push
mov
inc
and
icebp
outsb
add
pop
cmpsb
sub
pop
imul
pop
dec
pop
jge
dec
inc
pop
cmp
enter
daa
push
push
call
fldcw
cmpb
clc
dec
cs
sbb
push
cmpsb
fildll
and
out
jg
adc
ds
mov
enter
push
sbb
inc
out
bound
cli
arpl
mov
push
outsl
gs
cmpsl
push
jae
sbb
cmp
xor
lea
ja
cmpb
add
test
push
cmpsl
int
arpl
sub
je
push
mov
es
out
mov
inc
fcom
and
push
and
add
jp
enter
cmp
add
lock
cld
jp
cs
mov
lret
int
push
xchg
scas
adc
push
cltd
push
add
push
fdivp
push
jg
movl
pop
fmuls
aas
fsubrs
adc
mov
sub
mov
mov
sbb
adc
in
mov
sbb
cbtw
ret
pop
inc
out
repz
test
add
jne
sti
pop
inc
adc
test
jle
in
je
sub
xchg
es
or
dec
cmpsb
adc
cmpsl
sub
fmuls
dec
jnp
in
inc
testl
jae
daa
daa
ret
nop
lret
lahf
xlat
jnp
mov
inc
insl
dec
push
and
cmp
push
out
and
xor
dec
aaa
sbb
pop
xchg
jle
cld
dec
dec
daa
pusha
out
pop
mov
lret
ds
insb
and
sub
sub
push
das
ljmp
jle
lcall
mov
cmp
movsb
cld
push
jns
jle
lea
popf
sbbb
cmpsl
lret
ljmp
enter
adc
sbb
int
xchg
popa
sahf
mov
jge
adcb
jle
push
and
jecxz
sarl
stos
mov
mov
xor
sub
fistl
push
nop
push
sbb
ss
inc
jg
test
sub
cmp
scas
popa
push
sbb
xchg
mulb
mov
mov
push
shrl
outsb
push
movsl
xor
xchg
idivl
mov
pop
jae
in
dec
ja
incl
sarb
sbb
cmc
aaa
es
and
and
loop
popa
jg
mov
outsb
shlb
sbb
jae
shr
lock
sbb
lock
pop
cwtl
pop
mov
dec
das
sti
sbb
fucomp
adc
pop
jnp
insb
cmp
add
pop
xor
push
aad
icebp
mov
aam
xor
testl
xlat
ljmp
xlat
jg
pop
mov
dec
test
rorb
adc
pop
jae
roll
loope
ss
cmpsb
stos
xchg
inc
inc
or
aaa
xorl
dec
popa
sub
ret
sarb
push
mov
daa
enter
sub
push
mov
cld
pop
ljmp
sub
jg
mov
xor
jbe
enter
icebp
ror
xchg
inc
dec
adc
xchg
in
loopne
pop
sbb
cld
jo
jg
addl
pmaxub
outsb
or
add
cli
repnz
cmp
fisttpl
fs
sub
sub
clc
fcoml
pop
lret
dec
inc
repnz
dec
aaa
or
mov
scas
fcom
xor
mov
mov
push
daa
add
push
lods
jo
pushf
lret
adc
sti
jb
mov
or
mov
xchg
ja
push
add
push
pop
jmp
inc
cmc
and
dec
setns
into
gs
in
adc
push
xchg
lods
or
pop
add
xchg
push
and
lcall
xchg
mov
das
mov
xchg
es
mov
add
jmp
jnp
gs
mov
xchg
ss
jne
das
inc
xchg
loope
ret
outsl
or
push
iret
cmp
xchg
adc
pop
lret
push
mov
jmp
jbe
and
popa
dec
mov
jp
pop
pop
pop
aad
and
xor
sti
outsb
mov
push
in
xchg
jle
mov
mov
pop
xchg
adc
scas
das
cmpsb
mov
ds
test
mov
std
pop
jmp
inc
mov
cs
adc
push
addr16
stos
push
mov
ret
imul
rclb
sbb
loop
pop
push
cmp
add
adc
mov
cli
mov
out
stos
sub
loop
icebp
pop
test
mov
jg
xlat
je
sti
sub
xor
mov
xlat
bound
adc
inc
pop
mov
lods
adc
cld
out
push
mov
stos
frstor
pop
test
mov
and
cmovg
loope
sbb
daa
and
fs
push
leave
sub
add
xor
cmp
cmpsb
xchg
test
lds
pop
jnp
jg
mov
jge
mov
and
jle
stos
outsl
mov
pop
icebp
pop
cmpsl
addr16
das
push
xor
add
sbb
sbb
fcomps
addr16
lcall
inc
push
push
cmp
or
jno
lods
pop
mov
pusha
fisttps
xchg
mov
les
fimull
inc
jle
inc
pop
sub
inc
and
pop
insb
lahf
xchg
js
outsl
push
add
jb
popa
mov
pop
and
stos
daa
push
iret
js
pop
comiss
test
subl
test
push
addr16
minps
cli
fwait
adc
movsb
mov
or
rorb
mov
scas
out
movsl
jg
mov
les
push
lahf
push
mov
pop
fidivs
loope
mov
stos
add
cmpsl
stos
xchg
jmp
or
das
push
xchg
aad
movsl
out
out
push
xchg
xchg
aaa
sub
and
test
sbb
pop
lret
cltd
mov
and
addb
mov
sbb
xor
mov
scas
adc
jp
jge
xor
aad
lcall
out
int
es
push
and
arpl
lds
lahf
push
addl
mov
sbb
jg
jne
or
outsl
xchg
mov
movsbl
sub
pop
pop
pop
add
cld
cmp
int
pushl
inc
xchg
popf
es
mov
dec
in
mov
outsl
aaa
sti
jg
xor
xchg
adc
jns
mov
push
mov
das
cmpl
aaa
ret
lea
inc
ss
popf
stos
jl
xchg
sub
add
mov
push
mov
aaa
xchg
das
inc
mov
jl
sarl
dec
mov
out
data16
and
mov
movsl
lods
inc
out
lea
inc
add
push
nop
in
cmp
mov
outsl
das
out
pop
cltd
pop
xor
xor
dec
rcll
arpl
push
mov
pop
std
mov
imul
mov
pop
ret
add
xor
popa
out
cmpsb
pop
popa
mov
jbe
or
adc
cld
dec
add
xchg
mov
mov
dec
das
aaa
rcr
inc
inc
pop
add
lahf
lret
mov
ljmp
push
ja
push
out
daa
dec
xchg
nop
lret
ss
push
jns
lock
insb
jg
rolb
sarl
ja
sub
push
lock
ret
pop
rolb
xor
aaa
dec
imull
pop
fdivl
ss
pop
cmpb
lock
push
xchg
cmpsl
or
loopne
shl
xchg
pop
adc
pushw
mov
xchg
mov
mov
xlat
jno
mull
bound
mov
lock
jbe
push
mov
sub
mov
push
out
dec
push
ret
mov
xchg
lret
data16
push
jecxz
jno
lods
pop
xchg
cmp
ja
call
loopne
lea
push
and
ja
push
sahf
ret
imul
push
inc
jmp
sarb
pop
jnp
test
xchg
stos
mov
adc
cmp
daa
and
fldl
xchg
jmp
pop
out
push
int
and
push
xchg
push
fistl
out
pop
ret
orl
jmp
push
push
adc
gs
in
enter
inc
addr16
in
or
pop
cld
pop
jne
jmp
imull
cld
jge
mov
xor
ja
cmp
icebp
scas
inc
iret
aaa
dec
leave
xlat
cmc
daa
idivl
fwait
xchg
dec
jle
jg
jecxz
insb
pop
jno
outsb
xchg
popl
sub
push
scas
icebp
dec
mov
insb
out
scas
mov
jbe
ds
push
push
fistpll
bound
out
data16
mov
orb
fbstp
cmpsl
pop
ss
sub
clc
pop
pop
sub
cmp
xor
ret
xchg
enter
pop
scas
push
xchg
fs
add
dec
shll
lock
rclb
ja
fs
push
leave
scas
add
popl
inc
add
jp
cmp
pop
aaa
add
xor
insl
popa
mov
add
add
pxor
addr16
sub
pusha
xor
mov
or
cs
test
mov
lea
jb
fcomp
fistps
jnp
cmpsl
decb
test
aad
push
dec
jp
ljmp
push
aaa
es
test
ret
xchg
movsb
add
in
pop
mov
mov
sbb
mov
lock
mov
xor
out
mov
mov
aaa
mov
repz
mov
scas
pop
jns
int3
dec
jb
fists
aad
jge
outsl
lock
addr16
test
mov
pusha
push
daa
jle
leave
ret
cld
xchg
pop
mov
pop
and
jecxz
das
sti
jb
stos
cmp
ss
insl
addr16
add
mov
fisubs
add
data16
push
jmp
rcll
aas
into
add
addr16
add
cld
jl
mov
movb
add
syscall
ffreep
adc
stos
paddb
montmul
cmpsb
subl
cmpsl
loop
scas
lcall
repnz
xchg
mov
cld
aaa
xchg
fistps
mov
ds
iret
inc
movsl
stos
pop
xchg
imull
inc
cmp
in
mov
add
mov
adc
xor
iret
ret
and
popl
jg
in
cli
int3
loopne
mov
mov
add
iret
rorw
insb
sub
jmp
incl
mov
push
imul
stc
adc
xor
shr
xchg
outsb
cmp
jmp
ja
addr16
ss
mov
push
aaa
mov
adc
stc
cs
ss
xor
inc
pop
mov
push
cwtl
ja
ds
les
dec
movsb
int
aas
ret
jp
xchg
inc
xchg
push
mov
dec
sahf
xchg
jge
adc
xor
subb
mov
jp
cmc
xor
push
mov
jo
ret
out
je
ret
mov
push
pop
out
pop
jbe
jecxz
ss
popa
dec
pop
jnp
pop
xor
adc
fsubs
cmp
xorl
aaa
out
imul
test
addr16
add
stos
adc
pusha
pop
and
sub
ficomps
imul
incl
push
pop
mov
and
xchg
test
sub
inc
inc
pop
in
sbb
dec
nop
inc
push
cs
mov
adc
mov
addr16
test
cmc
sti
jne
xchg
or
cmp
mov
push
iret
xor
pop
sbb
add
jl
adc
cwtl
pop
fdivrl
mov
and
movsb
mov
scas
bswap
pusha
jb
int
adc
adc
fwait
xchg
sti
pusha
and
stos
sti
xchg
sti
jb
cmp
mull
out
mov
jmp
sbb
fwait
sbb
iret
mov
mov
push
cli
inc
stc
cmpl
mov
cmp
orb
xlat
sarb
xchg
jnp
rcrb
stos
les
bswap
repz
cld
sbb
jbe
sbbl
mov
addr16
pop
shll
mov
pop
push
or
fiadds
pop
xchg
pusha
inc
sub
pusha
addr16
mov
add
mov
cld
lcall
mov
xchg
sar
push
aad
sbb
repz
or
dec
pop
shlb
cmp
ljmp
insl
and
and
pushf
xor
and
inc
ljmp
and
in
jge
ja
jg
jp
xchg
das
in
dec
iret
mov
and
push
adc
orl
stos
cmpsl
sbb
outsb
xor
movsb
sbb
dec
jge
cmp
jb
andl
aaa
mov
jnp
setae
bnd
int
mov
bound
push
fistps
add
sbb
inc
pop
dec
pop
xchg
mov
push
das
push
or
iret
inc
scas
ljmp
mov
cmp
mov
adc
pop
mov
mov
mov
push
outsb
xlat
xchg
aaa
push
xchg
mov
cmpsb
jne
cmpsb
or
jbe
cld
cwtl
mov
mov
pop
mov
and
xor
push
jne
outsb
pop
lods
dec
push
lods
pop
aam
xchg
leave
push
push
xchg
cld
aaa
mov
and
stos
aas
outsb
into
sub
lahf
jle
pushf
ds
pop
or
and
push
icebp
or
jne
add
or
pop
push
cmp
mov
es
cs
fbld
mov
dec
jle
mov
ljmp
dec
pop
aaa
aas
and
and
pop
mov
aaa
scas
mov
incl
lahf
fdiv
dec
mov
sub
mov
rcr
lods
jo
xchg
shlb
repz
mov
pslld
jge
ret
or
bswap
lea
inc
push
jmp
xchg
jns
jle
sbb
stos
daa
shrl
mov
mov
fistps
vpmacsdql
xchg
aaa
inc
pop
jb
inc
outsb
xchg
aam
cmpsb
and
mov
in
xor
aas
sbb
aaa
mov
loop
sbb
cmp
je
sbb
or
fidivl
aam
cmpsb
rclb
sbb
je
push
sbb
lods
and
sqrtps
pusha
fcmovbe
cli
inc
fldt
repz
jns
notl
mov
xchg
popf
jbe
pusha
push
and
cmp
notl
mov
dec
mov
vmovhpd
ja
jo
pop
divb
divb
push
cmp
icebp
cmp
orb
sete
pop
xor
xchg
or
decb
fcoms
mov
and
outsl
scas
fimuls
push
sbb
jno
and
add
xor
les
mov
xchg
mov
mov
ret
jbe
addr16
push
dec
arpl
jmp
adc
idivb
es
jg
dec
cmp
mov
sbb
adc
pop
ljmp
xchg
and
pop
lret
xchg
cld
cmp
push
push
add
insl
mov
pop
int
ja
mov
mov
leave
and
add
push
shrl
aaa
lock
pop
push
test
xor
xor
loope
popa
fimuls
popa
aaa
imul
clc
add
in
xor
inc
notb
pop
inc
mov
andnps
jge
push
bswap
jmp
imul
xchg
movsb
dec
adc
pop
lods
sub
and
ja
jo
daa
push
adc
push
xchg
dec
cmp
xchg
jl
cmpsl
mov
lods
cmp
fwait
push
dec
sbb
sub
push
stos
ret
subl
addr16
push
daa
adc
pop
push
pop
pop
or
cli
mov
xor
cs
pop
rcll
adc
lods
sub
mov
imul
movsb
cmp
out
test
cmpsb
inc
or
pop
movsl
jne
sub
stos
inc
add
pop
sbb
push
lods
in
int
xchg
in
in
movsl
xchg
push
les
rcrl
lret
out
icebp
inc
pop
xchg
jnp
jle
leave
ficomps
mov
xchg
addr16
inc
mov
sub
jo
adc
sbb
push
or
test
out
xchg
jge
and
xchg
mov
cmp
fwait
in
pavgw
lods
movb
movsl
xchg
jno,pn
rcll
inc
mov
into
cmp
cmp
dec
repz
xor
into
jmp
test
cltd
test
cltd
std
mov
inc
push
add
out
add
lcall
mov
xor
enter
scas
fwait
mov
pop
xchg
jg
aam
stos
loope
shlb
imul
jae
xchg
mov
iret
fbld
jnp
push
fwait
mov
push
xorl
fwait
arpl
lock
addr16
jo
and
and
aad
psubsw
clc
popf
xchg
test
out
mov
add
arpl
in
adc
ss
mov
jl
test
pmulhuw
jo
jl
ja
mov
push
jecxz
push
pop
mov
sub
mov
lock
mov
adc
cmp
sub
xor
adc
popa
push
mov
popa
roll
inc
dec
addr16
mov
pop
push
or
cmp
cs
sbb
push
xor
gs
pop
stos
xchg
inc
push
mov
inc
inc
sub
xchg
xor
xchg
das
cmp
sub
push
inc
into
inc
jg
sbb
jle
daa
push
sbb
sub
mov
mov
mov
add
fists
adc
das
add
movsb
int
fbld
pop
sub
aaa
fwait
mov
das
jg
test
inc
adc
out
mov
negb
in
sub
adc
das
xor
pop
push
das
and
jg
jge
xchg
mov
ja
inc
fstl
sub
cmp
jle
push
ss
les
je
stos
xchg
stos
inc
loop
mov
dec
es
bound
push
mov
popa
mov
lods
jo
mov
notl
lds
adc
sub
mov
cmp
ds
sbb
ljmp
xor
out
pop
push
addr16
add
outsb
push
addr16
cs
in
cmp
mov
stos
pop
sub
ja
testl
bound
shrl
andb
jp
add
aaa
aas
lea
jnp
xchg
cmp
jb
jle
adc
jbe
mov
and
das
dec
scas
and
or
lods
or
pop
xor
push
mov
loop
jl
xchg
xchg
sbb
adc
push
mov
sub
cmp
ret
and
and
jnp
sub
or
inc
inc
movsl
nop
test
lods
and
gs
orb
jle
into
lret
or
jne
icebp
cld
data16
test
pop
orl
push
das
iret
xor
jmp
std
inc
aas
daa
push
adc
or
movsb
push
aaa
aaa
add
add
inc
sbb
arpl
das
adc
addl
xchg
push
sbb
arpl
das
adc
adcl
xchg
arpl
arpl
dec
fwait
test
iret
test
test
jmp
xlat
xchg
scas
and
xchg
push
push
fimull
adc
cmpl
aad
or
jnp
mov
pushf
iret
jmp
shrb
add
cli
mov
mov
lock
lea
movsb
negb
dec
xor
das
cmp
fsubl
outsl
sbbl
cli
ret
add
dec
in
clc
icebp
push
mov
mov
adc
mov
lea
test
jae
inc
push
outsl
sbbl
sbb
pop
push
imul
and
loopne
daa
add
bound
fwait
fs
xor
out
data16
adc
es
adc
icebp
mov
sub
aaa
rcrl
pushl
int
xchg
dec
adc
jno
in
xor
in
lahf
lcall
mov
out
push
ja
pop
js
daa
in
push
lock
sbb
popl
pop
addr16
cmp
das
loopne
into
xor
jmp
inc
jo
push
ret
push
pop
lret
xchg
mul
xchg
negb
inc
rcr
xchg
movsl
aaa
cmp
iret
test
stos
bound
out
xchg
std
nop
das
sete
dec
fisubrl
push
es
jbe
imul
mov
movsb
mov
cmp
jg
and
testb
dec
loopne
aad
imul
lret
push
lret
lldt
nop
mov
popf
mov
mov
outsb
imull
xchg
flds
pop
out
imul
push
inc
push
xchg
xlat
dec
movsl
hlt
icebp
scas
stc
add
add
pop
mov
stos
push
popf
mov
jle
push
sysexit
cmp
rcr
lock
inc
scas
mov
mov
xorb
and
xchg
test
sahf
rolb
push
xor
adc
sub
xor
pop
scas
paddusb
adc
fcompl
mov
fwait
pusha
cmpsb
jae
push
pop
push
jecxz
pop
addr16
xchg
or
mov
pop
dec
jbe
add
mov
sbb
stos
cmp
dec
addb
pusha
and
jge
ja
test
neg
sub
ror
mov
add
mov
push
push
sbb
lea
aaa
adc
cmp
aas
jae
into
jnp
cltd
push
mov
mov
pop
lds
idivl
jne
jno
mov
testl
inc
in
mov
mov
cmp
int
arpl
adc
xorl
inc
aam
sbb
push
inc
adc
xchg
ret
daa
das
jg
out
inc
incb
push
sbb
arpl
repz
sbb
adcl
rorb
packsswb
icebp
mov
outsl
xor
sahf
das
mov
inc
jecxz
repnz
call
ret
sub
jnp
aas
mov
ss
lods
in
add
mov
pop
push
adc
ss
mov
sub
push
sbb
cmpsl
mov
and
jbe
fisttpll
les
mov
cmpsb
jae
aaa
les
sbb
dec
sub
addr16
jb
es
in
icebp
jge
jno
xchg
dec
adc
cmp
in
stos
inc
nop
lea
pop
inc
sub
popl
leave
mov
loop
cmp
push
add
cmp
sbb
movl
xchg
and
loope
je
sbb
dec
push
das
ljmp
pop
cltd
adc
ja
sub
cmp
mov
jg
push
insl
icebp
pop
mov
insb
jo
mov
ss
addl
mov
inc
ficoms
addr16
pop
mov
dec
fwait
cld
daa
add
push
das
dec
pop
mov
aaa
cmp
daa
jne
mov
int
sti
ffreep
sti
adc
add
inc
pop
cld
test
dec
xchg
push
jmp
imul
or
out
test
fwait
inc
lea
dec
out
adc
test
or
in
outsb
mov
outsl
xchg
stos
xchg
call
dec
inc
pushf
xchg
call
test
push
aaa
xor
testb
dec
pop
pusha
xchg
das
stos
sarb
cmp
xlat
stos
in
mov
test
fstps
sti
dec
fnstsw
cmp
stos
xchg
scas
shlb
inc
mov
xor
xchg
adc
sti
shll
xchg
mov
ret
cmovg
pop
mov
dec
lret
cmp
sti
test
dec
adc
add
dec
mov
dec
jmp
es
or
rol
stos
mov
mov
fstpl
call
scas
cwtl
movl
pop
daa
dec
inc
sti
insl
fimull
mov
pop
push
scas
in
adc
xor
mov
pop
and
sbb
call
cmpsb
add
mov
mov
out
mov
jg
dec
les
fs
pop
dec
stos
jae
inc
mov
mov
sti
into
cmpsb
add
jnp
mov
aaa
imul
jmp
mov
outsl
add
mov
mov
push
or
bound
mov
lock
loopne
insl
ja
jne
and
add
stos
popl
aas
cmp
push
lods
xor
cmp
mov
push
out
jl
jmp
test
pop
inc
shr
xchg
call
pop
mov
push
push
sbb
ja
mov
sub
rcl
lahf
jbe
xchg
cmp
add
arpl
lds
scas
jg
mov
xchg
in
xor
or
xchg
dec
dec
sbb
cmpsb
icebp
push
adc
and
mov
mov
ds
jle
dec
pop
pop
lret
into
in
jmp
rcll
daa
xor
add
ficoml
inc
pop
sub
xor
rol
imul
add
sbb
mov
aaa
add
add
push
wbinvd
inc
add
xchg
popw
dec
pop
loopne
daa
andl
bound
imul
push
lret
push
and
in
lret
or
mov
mov
cmp
sbb
movsl
test
dec
mov
insb
xchg
rol
call
sub
push
inc
mov
cmp
lods
stos
mov
adc
aam
pop
mov
xlat
inc
xchg
ds
out
mov
aaa
mul
cmc
lock
std
cs
scas
push
push
cmc
inc
clc
mov
pop
or
out
fsts
ds
out
out
inc
pop
fisttpl
xchg
jecxz
dec
mull
notb
push
xchg
push
add
adc
xchg
jae
cltd
fbstp
shl
cld
test
push
mov
lods
push
mov
addr16
in
jne
sbb
cmp
pop
filds
in
xchg
addr16
jno
lods
inc
and
adc
adc
fisubrs
pop
push
mov
ucomiss
fcmovb
inc
inc
xchg
les
int3
or
scas
lea
bt
jnp
lahf
testl
test
mov
ret
pop
mov
mov
add
xor
movsb
dec
enter
push
mov
stos
int
test
imul
cmpsb
push
pusha
data16
pop
loop
das
repnz
xlat
sarb
clc
lock
das
in
int
dec
popa
shlb
push
aas
xchg
ja
cmp
stc
frstor
cmpsb
jecxz
inc
sub
xor
xchg
add
inc
xor
mov
lret
dec
cld
out
pop
and
cld
push
adc
and
push
push
inc
xchg
pop
xor
mov
lock
test
outsb
shrb
adc
add
leave
add
lods
cmp
adc
dec
shlb
jbe
mov
adc
add
test
out
pop
addr16
mov
xchg
jle
cltd
mov
enter
lods
cmp
fs
enter
pop
xchg
inc
add
xor
add
mov
add
scas
fldl
add
shrl
cmpsb
mov
mov
mov
ret
add
adcb
in
sbb
pop
arpl
jnp
push
mov
jmp
push
xor
mov
mov
lods
pop
or
lahf
jnp
xchg
jg
and
pop
mov
cltd
clc
pop
xor
sar
cmpsl
pop
inc
xor
sub
iret
les
xchg
and
jg
inc
xchg
xor
arpl
adc
les
push
adc
add
adc
inc
jbe
cmp
testl
das
cwtl
xchg
dec
cs
mov
cmp
call
pop
ret
jmp
sbb
syscall
paddq
daa
ja
sbb
mov
ja
cld
or
and
jbe
inc
lds
fdiv
push
and
dec
inc
adc
pop
jp
inc
adc
push
aaa
adcl
js
cmp
xchg
stos
sahf
mov
jecxz
shr
clc
dec
ss
mov
mov
pop
out
mov
push
cmpsb
lret
nop
repnz
in
push
out
xchg
out
pop
xchg
xor
arpl
mov
mov
fistps
notb
shlb
xacquire
and
xor
cld
out
and
push
lret
dec
cmp
jp
inc
outsb
aas
mov
inc
sub
add
sub
lock
lds
test
sbb
outsb
add
mov
sahf
mov
jbe
fnsave
out
and
sbb
adc
stos
lea
or
adc
mov
aad
jbe
leave
negl
xchg
push
leave
mov
lock
dec
imul
xchg
in
cmpsl
out
loopne
lock
push
mov
pop
add
clc
push
les
and
inc
test
inc
cld
add
push
stos
and
mov
sub
cmp
push
sub
cmp
push
jecxz
mov
or
int3
aaa
sbb
rolb
cld
xchg
popf
lock
aad
jl
sahf
jle
in
in
mov
mov
aaa
xor
stos
push
cmp
iret
dec
mov
dec
clc
sub
daa
sbb
xchg
xor
rclb
data16
in
mov
out
mov
pop
push
mov
push
int
jbe
xchg
in
push
aas
pop
mov
lock
ja
insl
ret
mov
push
dec
jne
out
push
enter
or
mov
jmp
inc
jmp
mov
call
pop
add
loop
out
mov
xchg
and
lahf
sahf
push
dec
stc
mov
mov
mov
mov
negb
in
mov
add
mov
outsl
enter
inc
and
pop
loopne
mov
mov
je
ja
jecxz
dec
inc
push
outsb
pop
mov
aaa
mov
cs
addr16
pop
mov
pop
mov
addr16
cmc
stos
movd
jnp
dec
nop
jo
cs
sub
and
outsl
push
add
push
cmpsb
aad
add
out
aaa
xlat
pop
inc
xchg
jge
adc
dec
xlat
cld
sub
push
cmp
cli
sbb
arpl
call
lods
inc
push
mov
lods
jae
add
pop
stos
add
push
or
mov
add
mov
arpl
lea
test
iret
push
jae
out
int3
cmpsl
arpl
das
insl
push
sub
mov
dec
insl
popf
orl
pop
push
jmp
enter
and
stos
data16
add
jbe
adc
int
xchg
pop
les
adc
pop
lock
push
orl
jo
jp
cmpsb
je
mov
mov
xor
loopne
xchg
cmp
inc
nop
mov
push
cmc
subb
mov
out
jecxz
icebp
sbb
mov
test
cmp
dec
dec
ds
fs
call
cmp
and
dec
aas
push
inc
in
fistps
outsl
js,pn
mov
adc
add
scas
sub
jg
sbb
push
pop
inc
loopne
rorl
mov
add
arpl
inc
inc
xor
adc
sub
cmpl
je
orl
adc
xchg
and
fwait
icebp
fimuls
mov
dec
inc
push
push
int3
pop
shrl
xor
ret
jae
or
pop
inc
scas
outsl
mov
mov
popa
xor
mov
pop
lods
xor
outsb
rolb
mov
sbb
inc
mov
dec
shlb
cmp
mov
pop
dec
xchg
loope
insb
lahf
xor
lahf
das
mov
sub
dec
push
and
sbb
push
inc
inc
mov
adc
and
int3
inc
lcall
mov
pop
push
add
adc
mov
leave
popf
les
add
and
lret
mov
cltd
xchg
mov
leave
xor
fiaddl
push
mov
xor
push
push
cmp
inc
sbb
lea
aad
jbe
push
adcb
inc
mov
push
loop
xor
lea
addr16
neg
xchg
or
and
insb
stc
mov
pop
adc
rorb
iret
ret
mov
pop
iret
mov
xor
add
test
dec
mov
and
imul
mov
jge
popa
lret
daa
sbb
jns
inc
pop
fistps
popf
filds
mov
daa
movsl
add
daa
aad
jg
mov
sub
inc
cmp
adcl
push
jno
dec
pop
mov
mov
mov
and
outsb
aaa
mov
fldt
sbb
push
ds
lds
mov
inc
and
jle
xor
xor
cltd
stos
push
mov
cwtl
push
sbb
adc
aaa
mov
cvttps2pi
imul
mov
jp
call
fsubs
push
jecxz
jg
push
mov
mov
dec
das
jle
sbb
adc
inc
and
push
inc
jl
push
lfs
enter
xchg
sbb
push
push
mov
adc
cmpsb
addr16
xor
popf
mov
sbb
inc
fwait
arpl
push
xchg
mov
mov
mov
jno
movb
sbbl
stos
stos
and
data16
lds
arpl
arpl
stos
icebp
inc
xor
push
adc
call
adc
aaa
lds
notb
jle
or
pop
scas
mov
cmc
in
shl
popf
push
pop
mov
fists
leave
add
scas
push
test
nop
push
scas
dec
test
fldcw
cld
xchg
mov
inc
jmp
xor
xchg
pushf
in
aaa
add
dec
jmp
addr16
ljmp
stos
sub
pop
mov
and
scas
add
std
aad
adc
ja
test
sbb
leave
inc
movsl
mov
test
cld
xchg
insl
out
popa
pop
addr16
cmpsl
sbb
lret
add
or
arpl
mov
cmc
out
and
fistl
jmp
fmul
dec
push
scas
fwait
and
scas
es
cmpsl
sti
rclb
xor
mov
ds
xchg
cmpsl
sbb
mov
cld
insb
pop
stos
mov
xor
adc
xchg
outsb
push
dec
jge
xor
push
scas
std
fwait
ret
fldenv
xchg
mov
mov
notl
pop
jo
cmpb
push
mov
sbb
das
adc
leave
jp
adc
lret
or
add
mov
and
imul
out
or
mov
shl
inc
daa
adc
movd
roll
xchg
adc
popa
test
inc
lea
pop
dec
filds
pop
xor
push
sub
mov
xchg
cmp
ljmp
or
and
fsubp
fmull
mov
outsb
insl
xor
lods
cmpsl
test
inc
bound
and
cmpsl
adc
scas
add
repnz
aaa
and
mov
xchg
mov
jo
jp
bound
mov
outsb
clc
fistpl
mov
jnp
add
scas
aaa
nop
sahf
sub
or
xchg
or
cwtl
inc
sbb
mov
mov
mov
fisttpl
pusha
add
test
fidivs
pop
cmp
hlt
hlt
gs
add
lahf
sub
fnstsw
aad
fwait
add
fidivl
xor
cmp
dec
jo
adc
add
xor
test
std
pop
sbb
add
push
mov
pusha
jae
out
pop
jno
ss
jg
xchg
pop
sbb
daa
fwait
inc
mov
inc
out
sub
in
nop
out
sbb
push
dec
sbb
push
mov
cmp
mov
enter
ja
imull
fwait
xlat
adc
mov
mov
xor
rorb
rolb
scas
and
in
stc
mov
incb
push
aam
lea
pusha
sbbb
in
sub
sti
push
pop
stos
scas
call
jbe
pop
pop
mov
xchg
xchg
rcll
je
pop
stos
xchg
sbb
mov
mov
add
cmp
add
push
icebp
pop
je
pusha
add
es
lea
ficoms
mov
jle
fistl
movsl
mov
xchg
adc
mov
int3
movl
ret
dec
out
loope
sub
push
aaa
push
jo
bound
stos
mov
scas
jg
icebp
into
xor
pushl
flds
cld
ds
mov
mov
movsb
or
jp
pop
xchg
push
jp
addr16
push
adc
repz
mov
mov
adc
aam
bsr
mov
pop
mov
and
out
push
mov
mov
adc
shrb
sarb
cmp
adc
int
repnz
repnz
pop
push
and
std
xorb
cmp
repz
push
sbb
inc
push
jg
daa
jb
jg
iret
cmp
inc
cwtl
cmpb
orb
inc
xchg
dec
lock
fisubs
cmpsl
out
in
pop
push
les
mov
clc
ss
stos
inc
daa
inc
xchg
fnsave
in
cmp
or
cmpsb
pop
daa
push
lods
dec
out
xchg
enter
sub
outsb
cld
xchg
or
aas
or
adc
mov
and
das
or
cmp
leave
mov
push
out
sub
sub
call
jo
cmovae
adc
push
mov
push
fstpl
mov
inc
xor
add
packuswb
imul
dec
psubusb
fiaddl
addr16
add
adc
lea
sub
cmc
mov
es
gs
and
mov
pop
lret
cmpsl
cmp
pop
push
push
dec
jmp
cmp
adc
mov
arpl
xchg
jbe
lea
add
sbb
lock
inc
jno
xor
popw
adc
mov
rcll
mov
jae
adc
scas
sbb
mov
mov
or
bound
outsl
push
pop
inc
mov
adc
cs
mov
jp
ljmp
push
or
inc
sbb
inc
out
ja
and
cld
pop
stos
imul
aaa
pop
mov
push
inc
mov
xor
rep
mov
jmp
add
cmp
sub
add
jle
mov
pop
ret
push
mov
or
mov
in
mov
loope
or
dec
dec
jbe
push
xor
push
cli
sub
aad
or
rorb
in
jo
aas
push
push
xor
test
xor
xchg
cmp
xchg
sahf
testl
lret
jge
xchg
rcll
mov
sarl
wbinvd
loop
mov
pop
cmovno
inc
adc
xchg
mov
cmp
xor
leave
xchg
xchg
mov
call
hlt
adc
mov
xlat
push
and
push
shll
adc
ss
jns
sahf
inc
and
stos
imul
and
aaa
sub
jae
mov
icebp
and
fidivrl
test
jnp
insb
ret
fidivl
sub
mov
cmovp
xor
imul
jns
pop
imul
mov
outsl
inc
iret
adcb
addr16
pop
leave
cmpsl
andb
sti
cmpsl
mov
add
sub
jb
jle
xchg
movsb
pop
cs
cmc
xorb
inc
rorb
rcrl
xlat
movsl
sub
lahf
sarl
ja
push
xchg
sarb
jno
jmp
push
mov
adc
xor
mov
js
mov
mov
mov
sub
mov
stos
fcomps
clc
push
pop
mov
and
popf
iret
mov
test
pop
push
xlat
cmpsl
mov
pusha
faddl
dec
xor
ss
sub
outsb
add
mov
rolb
iret
aaa
xchg
jae
negl
pop
pusha
sbb
and
pop
sub
das
mov
cmpsl
repz
inc
int3
cmpsb
das
sti
add
add
sbb
cmp
adc
jecxz
mov
dec
out
lea
enter
sbb
inc
xchg
jmp
pop
push
std
repnz
scas
xchg
mov
out
aaa
xchg
adc
mov
xchg
add
loopne
int
push
mov
adc
test
cmpsb
jecxz
inc
es
bound
push
push
lds
dec
add
cld
mov
ss
loop
pop
pop
jecxz
push
push
sbb
leave
push
and
sbb
scas
cmc
xchg
pop
inc
into
dec
les
mov
ja
aam
shr
cwtl
mov
lods
push
and
das
cmp
pop
call
ja
stos
inc
test
shlb
xchg
ljmp
mov
andl
lret
jno
xchg
push
xchg
pop
addb
cmp
or
mov
es
cld
xor
mov
icebp
loopne
shll
stos
cmp
aad
mov
idivl
cmp
popf
adc
pop
jle
ret
cmpsb
cmpsl
call
call
and
fidivrl
mov
pop
ss
loopne
mov
dec
lods
jno
rcrl
jnp
enter
dec
ret
pop
push
ds
cmp
mov
mov
push
stos
mov
xchg
mov
pop
xchg
sbb
shrl
imul
leave
adc
std
stos
xchg
ds
xor
dec
loope
xchg
fldt
push
xchg
or
cmpsl
push
lea
mov
xchg
xchg
aaa
ds
out
roll
mov
xchg
shll
pop
push
addr16
dec
xchg
jno
inc
mov
xor
sub
test
sbb
mov
cmp
dec
adc
pop
pop
fidivs
jg
jl
mov
sbb
or
push
push
lods
js
ja
cmp
ss
shll
pop
xchg
mov
icebp
jp
test
jbe
aad
sbb
scas
xlat
xchg
jb
pop
fdivs
jo
xlat
dec
addr16
dec
mov
pusha
roll
scas
mov
ficompl
inc
pop
in
mov
das
fldt
divl
cmp
int
out
das
push
add
shrl
decl
cld
xor
mov
lods
mov
in
out
dec
mov
fsubr
mov
pusha
pop
das
adc
aaa
pop
mov
and
push
push
ja
pushf
dec
fiadds
cltd
or
add
ret
aam
and
mov
std
xchg
xchg
jno
sbbl
xchg
outsb
push
mov
or
dec
cmp
ficoms
push
shrd
sbb
je
scas
fisubs
mov
hlt
test
sbb
aaa
mov
aaa
ret
add
pop
adc
jg
adc
les
mov
lock
push
sbb
clc
sbb
nop
pushf
imul
push
daa
out
and
das
roll
cmp
fadd
dec
add
loopne
or
neg
mov
das
filds
or
xor
jb
pushf
xchg
inc
iret
push
mov
mov
fiaddl
orb
stos
inc
pushw
arpl
cmpsb
mov
sub
sbb
or
push
sbb
add
shrl
addr16
mov
add
inc
inc
loopne
inc
sub
pop
push
enter
pmulhuw
es
adc
fwait
mov
and
lret
addr16
je
adc
pop
dec
pop
enter
aaa
fisubrl
test
stc
cmp
add
jmp
push
sbb
aaa
hlt
ja
ja
insb
stos
sahf
out
cmp
pop
scas
addr16
enter
gs
in
and
xchg
mov
and
jno
pop
cmp
aad
sub
scas
in
mov
arpl
dec
push
push
stc
adcl
jbe
sub
mov
leave
xchg
dec
xchg
cs
sub
xlat
dec
mov
dec
xchg
leave
cmp
insb
lahf
cmp
adc
xor
inc
scas
ror
cwtl
jle
stos
ja
xchg
pop
push
popa
orl
andb
in
add
and
test
shll
pop
adc
in
sbb
loope
lock
xlat
xchg
xor
mov
adc
fisubs
cmpl
js
dec
andb
xchg
add
xchg
cmp
mov
movups
push
xchg
cld
jno
pop
jo
pop
mov
arpl
jge
xor
mov
inc
iret
pop
daa
or
cld
inc
pop
aam
mov
xchg
mov
cmp
les
mov
inc
xchg
mov
inc
xchg
push
sbb
mov
ret
pop
outsl
sbb
loope
jno
sub
data16
push
ret
dec
sub
and
pop
dec
ret
jmp
addl
sub
mov
mov
dec
roll
cmp
add
nop
outsl
aaa
lods
in
cmp
or
enter
daa
fs
dec
rolb
aad
ja
push
movsb
inc
shll
je
pop
push
mov
rclb
hlt
insl
inc
and
push
pop
in
jo
out
mov
movsl
ret
scas
into
sub
adc
xlat
mov
push
inc
dec
cwtl
sub
lds
jmp
mov
lock
loope
cmpl
xchg
std
rcrl
and
pop
fs
fistpll
jnp
imul
movsl
sbb
clc
iret
or
cs
iret
mov
repnz
scas
xchg
rcrl
aad
test
sbb
sarl
aaa
ja
movups
mov
xchg
mov
add
subl
push
pusha
xorl
js
imul
lcall
inc
jbe
mov
push
pop
mov
pop
pop
sbb
pop
ficomps
fsubs
movsl
test
mov
sub
addr16
or
sbb
xchg
inc
into
jno
xorl
inc
in
mov
movsb
aaa
fimuls
jge
add
mov
lds
mov
aaa
mov
outsb
pop
iret
push
and
add
and
stc
mov
mov
mov
push
das
push
scas
ss
scas
mov
xchg
pop
dec
ljmp
pop
mov
in
mov
push
pop
cmpsl
adc
aaa
sbb
negl
fcoms
xchg
mov
add
sbb
lock
mov
mov
aad
scas
mov
sti
gs
repnz
push
movsb
sbbl
adc
dec
out
data16
pop
insb
jle
test
nop
sti
loope
jl
add
int
jecxz
cmp
xorl
push
inc
jecxz
push
fstpl
int
lods
jae
int
out
jbe
push
bound
and
sbb
sti
lock
inc
xchg
cld
adc
shrb
repz
test
rcll
mov
xchg
enter
lea
mov
dec
adc
mov
outsl
sub
das
cmpsl
push
adc
xchg
xor
inc
xor
ja
jle
dec
push
aad
pop
xchg
testb
jb
xor
imul
jbe
stc
inc
add
lret
mov
fadd
movsb
rorb
test
daa
jecxz
cmpsb
xchg
fimuls
loopne
mov
aad
jmp
push
adc
and
pop
push
push
jne
gs
enter
xchg
pushf
xchg
stos
enter
push
and
ret
cmp
pop
pop
insl
mov
lods
fnsave
xor
fsubrp
cmpsb
xlat
inc
in
inc
fldl2e
imul
enter
jg
adcl
imul
scas
adc
pusha
jb
daa
fists
jmp
pop
shlb
mov
stos
add
ja
int3
pop
xchg
mov
push
cmp
xor
iret
je
or
outsb
push
jo
daa
mov
or
xlat
movsb
sub
adc
xchg
lods
add
push
into
das
in
rcl
out
adc
and
es
xor
push
fs
xchg
add
xchg
das
aas
ss
and
and
and
dec
mov
movsl
push
xchg
inc
test
and
mov
inc
cmp
sbb
pusha
sbb
or
xlat
das
ja
dec
xor
inc
std
cmp
or
cs
subb
inc
ficoms
dec
sti
cmp
and
or
imul
push
popf
adc
mov
push
rclb
das
ljmp
jo
xchg
mov
rcrb
inc
inc
ja
push
cmpsb
fwait
test
mov
dec
add
sti
add
xchg
and
dec
pop
idiv
pop
add
mov
sbb
push
push
add
adc
adc
into
loop
cmp
jle
into
test
gs
pop
insb
mov
sbb
add
mov
mov
and
movsb
into
push
xchg
mov
enter
clc
jno
lds
push
cmp
mov
push
mov
nop
fisttps
clc
push
sbb
imul
aaa
pop
jbe
ret
lret
dec
aaa
aaa
push
scas
ficoms
lock
dec
xchg
or
push
test
xchg
js
clc
lahf
mov
in
ffreep
and
inc
mov
sub
sbb
iret
and
fnclex
je
std
movsl
jne
cmp
mov
cmpsl
or
rorb
addb
cmp
add
inc
mov
pop
adc
addr16
filds
data16
inc
das
repnz
pop
xchg
insl
pop
xor
mov
adc
push
scas
lret
out
adc
lods
cmp
movsl
loop
mov
test
mov
in
in
mov
add
sub
xchg
enter
ss
cmp
paddusb
xchg
xchg
loopne
pop
xchg
jno
pop
xor
inc
cmp
sbb
sub
les
fwait
stos
jbe
out
jp
and
push
stos
outsb
sbb
mov
inc
inc
and
sahf
jg
arpl
push
scas
push
pushf
iret
daa
js
mov
popf
imul
inc
push
inc
adc
out
mov
pop
lea
pop
leave
ficomps
shr
mov
loope
dec
add
jae
leave
fcomi
notl
in
and
lods
mov
dec
mov
inc
notl
std
mov
inc
and
mov
and
inc
and
push
push
mov
lods
sarb
mov
das
es
mov
pop
repz
fisubrs
jg
mov
xchg
add
stc
xchg
jno
enter
or
inc
push
ficoms
movhps
dec
add
test
mov
sbb
lock
adc
sbb
jo
jbe
xchg
imul
mov
lret
xchg
jmp
push
inc
jmp
sbb
jmp
pop
mov
leave
cmp
or
mov
and
pop
rcrl
pop
sbb
mov
push
push
jne
add
jno
inc
pushf
inc
repz
cwtl
or
roll
cmpsb
and
rcrb
add
loop
adc
pop
int3
es
dec
data16
adc
aaa
jbe
in
das
push
sub
loop
sbb
jae
xchg
pop
aad
add
clc
movsb
mov
xor
stos
sti
push
into
mov
out
popw
cmp
adc
push
rcll
popa
rclb
popf
mov
dec
jmp
lea
movsb
loopne
cs
subb
sbb
jae
xchg
and
das
adcl
in
rcpps
fdivrp
adc
push
dec
cmova
sub
pop
loope
stos
enter
setg
xchg
test
inc
imul
mov
sbb
sub
xchg
or
mov
aam
addr16
lret
lds
mov
popa
cmp
iret
add
xchg
lea
fsubp
stos
jge
pop
sbb
or
mov
scas
lock
insl
mov
adc
dec
cmpsb
jge
xchg
push
dec
add
out
sbbb
das
xor
gs
cs
adc
adc
dec
sbb
scas
push
test
fists
mov
sbb
lds
pop
sub
cli
xchg
push
cmp
cmp
std
fldcw
add
pop
dec
push
xchg
sbb
adc
pop
add
jl
movsb
adc
fs
outsl
inc
xchg
dec
invd
inc
test
inc
push
add
jg
mov
insl
sub
add
sar
mov
out
es
lret
cs
push
test
ljmp
stos
das
test
pop
ds
or
add
adc
mov
mov
mov
and
fsubr
and
sahf
loop
outsb
aaa
jno
lret
and
fsubs
pop
lods
inc
xchg
xor
fdivrs
int
push
test
out
adc
stos
xor
push
xlat
int3
pop
jae
add
jns
das
int3
imul
sbb
add
daa
pushf
aam
cmpsb
out
sub
lds
mov
jp
mov
mov
inc
and
clc
xchg
fcoml
jnp
std
push
cmp
mov
cmpsl
shrl
jmp
cwtl
jbe
jmp
ss
pop
fistpll
aaa
clc
xchg
fsubrp
jbe
cmp
pop
scas
dec
jb
push
data16
rolb
jnp
test
das
inc
jmp
push
push
pop
sbb
push
arpl
jnp
movsl
pop
add
pop
or
and
and
inc
daa
jl
jbe
scas
mov
cltd
pop
rcrb
lock
ffree
add
push
or
sbb
dec
add
mov
aas
add
pop
out
and
pop
movsb
inc
pop
sahf
bound
aas
adc
xor
sbb
inc
xchg
xchg
cwtl
out
addr16
mov
pop
bsr
test
popa
enter
adc
xlat
clc
push
out
xor
push
rcll
or
jge
outsb
sbb
xor
lret
in
xor
repz
aaa
lret
testl
adc
pushf
pop
adc
es
jg
dec
pop
pop
mov
xchg
int3
push
shlb
mov
and
push
popa
stos
push
movsb
push
es
jnp
jae
es
cs
or
mov
aaa
xchg
pop
ret
andl
dec
loop
sahf
out
push
add
dec
data16
mov
sub
aaa
add
xor
notl
sbb
lods
sub
sbb
cld
jecxz
xchg
sarl
mull
xlat
cmpsb
cmp
cltd
roll
and
mov
mov
inc
pop
cmpsl
aam
cltd
jg
xorb
ja
mov
mov
je
into
aaa
imul
out
outsl
cmpsb
jp
sub
scas
push
inc
xor
dec
or
or
and
divb
inc
cmp
icebp
inc
and
dec
outsl
push
arpl
jno
cmovp
cmp
xor
push
testb
cld
dec
div
jns
clc
push
lock
pop
clc
das
jp
inc
in
fidivl
lds
out
xchg
sbb
jg
daa
mov
adc
dec
mov
inc
test
lods
in
dec
mov
sbb
or
xchg
mov
sbb
dec
sbb
cmpsb
repz
jle
mov
out
aam
dec
mov
icebp
adc
sbb
cwtl
sarl
cld
push
xor
imul
pop
xchg
int3
lods
dec
leave
push
popa
adc
jp
cs
out
and
and
mov
mov
ja
or
je
cmova
movsl
fildl
jle
xor
ret
js
pop
das
dec
jg
sbb
stos
adc
mov
ret
negb
insl
and
test
pop
divb
rclb
mov
cli
jb
push
int
sub
inc
push
mov
gs
and
xchg
int3
pop
pop
pop
sar
je
es
sub
mov
mov
fs
repnz
gs
iret
pop
inc
in
and
pop
aad
je
pop
fs
clc
cmp
cmp
cmpsb
dec
test
test
jae
xchg
mov
sbb
stos
push
jnp
mov
mov
mov
mov
iret
outsb
push
jae
push
xchg
push
adc
aas
call
lret
xor
ljmp
movsl
mov
repnz
icebp
pop
mov
out
jp
pop
lcall
xlat
insl
movsl
sub
jb
ss
or
mov
jb
dec
pop
cmp
push
jb
jecxz
fwait
xor
dec
sub
xlat
sbb
jb
std
jnp
rolb
inc
test
jb
test
jae
loop
lds
ja
repz
pop
ret
clc
adc
out
xor
push
mov
in
pop
pop
scas
xor
push
add
add
push
cwtl
jle
incl
xchg
test
xor
jp
insl
cmp
add
outsb
pop
decl
sahf
lock
mov
xchg
or
push
or
sbb
mov
jmp
rorb
aad
imul
cmp
in
sbb
adc
cmpsl
iret
pop
sbb
out
notl
sbb
dec
lahf
inc
outsl
imull
xchg
repz
inc
daa
and
dec
cwtl
jae
sub
jne
and
pop
or
adc
addr16
shrb
in
lcall
addr16
imul
lods
jg
sbb
ficoml
popf
jge
out
das
lahf
pop
iret
inc
imul
jmp
jmp
nop
xchg
pop
movsb
dec
mov
out
mov
sbb
cs
and
and
dec
ret
adc
inc
and
in
push
dec
movsl
loope
dec
mov
test
movsb
test
into
xchg
dec
int
sub
mov
ja
mov
pop
and
dec
movsb
push
xchg
and
je
gs
cmpsl
jge
cmp
jge
lret
push
nop
outsl
cwtl
push
pop
adc
adcl
or
sbb
mov
out
es
aad
sbb
and
pop
pop
xchg
mov
inc
in
fcom
lea
lds
xchg
roll
push
aas
inc
lea
daa
adc
shlb
xor
xor
outsl
fwait
int3
shll
or
mov
cmp
inc
insl
mov
mov
mov
push
xchg
stc
jmp
dec
jbe
push
pavgw
dec
mov
cmpb
insl
pop
push
lods
cmp
incl
andl
xorps
inc
addr16
and
repz
push
jb
fs
mov
mov
pop
and
xor
test
mov
aas
sti
popl
pop
mov
jle
lcall
lret
push
scas
adc
popa
mov
xchg
daa
enter
adc
les
aad
jge
and
xchg
cli
daa
lods
js
bswap
pusha
aaa
gs
inc
mov
adc
push
jbe
leave
les
xchg
cmpsb
dec
dec
and
cmpsb
sbb
mov
sbb
xchg
int
ds
ret
pop
bound
faddp
repz
inc
and
mov
test
xchg
addr16
xor
push
lahf
ja
adc
ds
inc
pop
imul
pop
jmp
ss
in
sbbl
inc
jmp
inc
jae
lea
push
fiadds
add
jnp
cmp
inc
pop
cmp
addr16
sbb
popf
adc
ret
fiaddl
pop
inc
inc
push
int
gs
push
ja
sbb
pop
push
out
pop
jge
stos
pop
add
adcl
xorl
jmp
aaa
test
cs
xchg
mov
cmp
outsb
mull
add
pop
adcl
inc
xlat
jmp
dec
sahf
stos
fidivrs
xchg
pop
imul
scas
cvtdq2ps
jb
pushf
aaa
push
mov
loopne
sbb
dec
repz
xor
pop
fs
xchg
ret
daa
icebp
sbb
xorb
fcomps
or
in
xor
mov
xor
popa
int3
xchg
vmwrite
xchg
ja
sbb
sahf
push
mov
and
pop
push
sbb
call
adc
sbb
pop
xchg
push
rclb
push
ret
sub
inc
imul
sbb
jnp
xchg
divl
sbbl
cmp
and
imul
mov
xlat
mov
aaa
imul
lea
outsl
jno,pt
pop
dec
imul
lret
sbb
lods
push
aas
add
xor
aaa
mov
shld
fimuls
cs
add
sub
cmpsb
es
iret
mov
fnstcw
loop
push
sbb
jl
repz
icebp
add
add
pop
push
bound
mov
lock
push
dec
push
enter
mov
pop
dec
lret
dec
imul
cmp
fwait
pop
mov
pop
dec
push
aam
sub
addr16
inc
push
adc
adc
mov
arpl
jb
daa
push
push
scas
xlat
push
mov
cs
sbb
pop
in
lret
aaa
call
sbb
adc
push
add
push
test
testb
rcl
shlb
pop
popa
out
ja
ret
pop
in
es
and
shlb
jnp
stos
push
dec
movsl
mov
lret
jecxz
imul
jbe
sbb
das
adc
scas
cmp
xchg
mov
arpl
dec
fmuls
pop
xchg
leave
es
movsl
pop
leave
cld
ret
inc
enter
mov
xlat
mov
jecxz
mov
adc
sbb
xchg
xor
sub
cmp
gs
pop
das
test
cmp
insl
cmp
dec
pop
sub
bound
dec
xchg
mov
stos
sbb
aad
or
popf
cmpb
mov
xlat
lea
xchg
andl
push
out
sahf
and
insb
push
xchg
push
xchg
add
repz
aaa
ficompl
mov
sbb
aaa
mov
sbb
inc
push
add
nop
fisttps
push
mov
jg
test
mov
ja
jg
xchg
cmpsb
dec
data16
push
mov
jle
jg
dec
lods
mov
mov
mov
ds
mov
repz
je
mov
jnp
stos
xor
sbb
dec
mov
dec
lock
push
push
loope
push
add
pop
push
push
inc
push
data16
out
push
xchg
out
dec
ds
fsub
mov
data16
cmc
cmp
pop
or
add
enter
sub
call
enterw
ja
or
mov
shrl
cmp
das
add
dec
inc
fs
mov
das
in
fsub
fs
mov
xor
or
mov
adc
mov
imul
mov
cmpsl
movsb
pop
adc
syscall
sbb
sbb
test
sbb
lcall
mov
and
fsubrs
imul
push
adc
and
pusha
iret
xlat
cmpsb
dec
fiadds
lds
out
push
dec
pop
test
fwait
cmp
mov
ljmp
and
and
loopne
pop
imul
addl
imul
movsb
into
push
ret
mov
lods
xor
and
pop
and
jmp
dec
mov
pushf
mov
mov
mov
or
sub
movq
pusha
les
ss
sub
push
push
jb
les
loopne
test
mov
ds
and
stc
stos
jmp
bnd
add
addr16
ss
push
lret
jge
jnp
test
ror
mov
jg
pop
jle
xor
scas
fistl
adcl
mov
xchg
aas
push
jne
xor
xchg
jge
and
dec
rolb
inc
add
out
rolb
mov
or
cmpsb
test
add
cmp
cmp
loopne
das
fwait
xchg
mov
or
fbld
jge
shl
push
mov
icebp
scas
test
ljmp
cmc
inc
fistpll
das
mov
sti
push
aad
imul
inc
pop
jle
lods
test
mov
out
fwait
inc
cmp
xchg
addr16
and
stos
fistl
xchg
xchg
jecxz
jg
push
pop
out
pop
fildll
sbb
mov
mov
and
sbb
cmp
xchg
mov
mov
dec
jl
sub
mov
fdivrl
push
push
shrb
out
fcompl
addr16
inc
sbb
pop
inc
xor
lahf
mov
adc
out
or
popa
sahf
addr16
cwtl
iret
add
lea
out
cmpsl
mov
stos
xchg
sub
pop
fiaddl
lret
add
or
pop
push
ror
pop
lcall
gs
or
mov
inc
dec
fst
imul
or
pop
in
pop
ja
jno
mov
daa
pop
add
out
mov
sahf
xchg
std
mov
and
imul
xlat
push
idivl
stos
push
ds
js
and
jnp
jg
iret
mov
cmp
ljmp
aas
push
arpl
iret
stos
xlat
fwait
jnp
adc
mov
ljmp
shll
mov
adc
inc
das
outsl
xchg
dec
lea
push
pop
jne
mulb
in
xlat
ss
xchg
leave
sub
shlb
add
adc
cld
rcrb
clc
pop
frndint
pop
repnz
dec
jle
cltd
mov
push
fwait
push
mov
lods
cmp
es
sub
mov
call
mov
fucom
push
pop
lds
adc
adcl
jnp
push
mov
and
subb
out
in
xchg
andl
adc
lahf
ss
or
cltd
lods
jle
xchg
sbb
lret
mov
aam
add
inc
das
mov
or
stos
aam
in
jmp
dec
imull
jge
in
or
push
test
outsb
xor
ficoml
fnstsw
pop
jbe
xor
mov
adc
mov
xlat
add
xor
and
orl
dec
hlt
xor
cs
ret
mov
mov
xchg
or
pop
dec
out
mov
or
enter
mov
ja
cmpsl
pop
imul
and
iret
push
lcall
pop
lds
dec
vunpcklps
or
mov
xchg
dec
push
add
cmpsb
je
sbb
data16
in
shll
enterw
xlat
add
jl
ds
dec
sub
jo,pt
out
mov
cmpsl
aas
sbbl
dec
push
lods
jns
data16
push
dec
cmp
imull
psrld
inc
mov
xchg
jg
sub
ret
jbe
or
xchg
test
add
and
jg
shll
dec
pop
xor
mov
ret
adc
and
cmc
mov
or
cs
jp
jg
addr16
cmpb
iret
pop
out
cmc
jmp
int
test
fisubrl
mov
rcr
add
iret
fmuls
mov
adc
aaa
ss
pop
arpl
mov
dec
pop
xchg
out
lahf
mov
mov
cmp
push
push
in
pop
xchg
dec
mov
out
sarb
lods
push
pop
sub
stos
jle
push
jmp
stos
jle
ret
test
push
cmpsl
jg
xchg
mov
cmp
jge
in
pop
jmp
mov
jns
fisttps
in
adc
stos
pop
jno
push
in
inc
and
mov
xchg
jle
mov
push
xor
mov
lret
outsl
adc
jno
cltd
jp
push
call
cmp
lds
add
rolb
mov
and
inc
inc
mov
dec
push
or
mov
rorl
addr16
or
mov
lds
jp
push
dec
jge
mov
push
inc
mov
xorb
insb
pop
es
sub
jmp
out
and
jbe
adc
mov
aas
outsb
xor
jo
push
rcrb
and
pop
call
das
mov
cmpsl
int3
call
mov
xlat
scas
xchg
sub
lea
js
test
movl
jbe
inc
add
les
ret
add
mov
lods
roll
mov
movsl
pop
lret
push
push
das
scas
or
dec
in
stos
in
cmpsl
add
dec
pop
xchg
mov
movb
ss
aad
gs
stos
bound
inc
push
push
testl
xchg
xor
fidivl
ficoms
xor
mov
in
jge
sub
jle
stos
inc
mov
push
jnp
lea
push
negl
xor
ret
xchg
imul
mov
lcall
lcall
adc
mov
stc
inc
add
sub
aaa
or
push
subl
mov
stc
jns
movsb
xchg
lea
outsl
xor
xchg
mov
xchg
inc
cld
xor
popa
mov
enter
inc
sbb
shlb
mov
outsb
xchg
cmovl
cmpsl
stos
jg
or
aaa
and
jbe
imul
mull
scas
sbb
dec
adc
out
add
aas
test
lret
int3
xor
sbb
icebp
adc
add
xor
fimuls
push
xchg
add
mov
sub
nop
out
inc
push
dec
push
aas
xchg
add
xlat
cmpsl
call
or
movsb
pop
lods
outsb
ret
in
xor
and
mov
fisubl
cmp
xchg
xchg
inc
dec
pop
movsl
dec
add
pop
adc
pop
andps
int3
mov
das
mov
xchg
add
and
rolb
xor
xchg
cmpsb
repnz
mov
push
cld
push
loop
mov
mov
sub
les
xchg
idivl
pop
jle
in
mov
lret
mov
add
adc
xlat
inc
push
xchg
adc
pop
jae
or
xorl
das
adc
aaa
xchg
pop
test
lret
cwtl
adc
mov
loopne
sbb
jecxz
test
and
mov
movsl
ret
dec
addr16
mov
mov
call
sub
add
push
add
add
pusha
pop
dec
inc
cmp
push
ret
out
cld
and
movl
pusha
ja
lret
and
dec
adc
xlat
jl
dec
xor
adc
out
jg
lock
push
addr16
lds
out
adc
orl
lds
sbb
sarl
cmp
jmp
jp
leave
fsubl
ret
sti
pop
lods
pop
push
int
imul
std
int
jnp
pop
pusha
jl
xchg
pusha
xor
gs
sub
stos
scas
je
fwait
in
sbb
dec
pop
roll
je
or
sbb
cltd
jl
sti
shll
int
cmp
addr16
data16
data16
iret
mov
gs
ja
adc
pop
dec
pop
pop
lods
dec
and
lock
add
psrlw
lock
xchg
dec
add
pushf
pop
sbb
push
dec
mull
sbb
stos
ret
outsl
aaa
out
push
mov
mov
mov
mov
les
or
push
ja
adc
sub
push
rcl
xchg
jl
lcall
jne,pn
mov
test
mov
clc
outsb
test
cmp
outsb
movsb
sub
jmp
push
into
sbb
mov
dec
and
andb
fisttps
test
pop
cld
dec
fmull
or
jecxz
jmp
jnp
dec
inc
imul
mov
mov
das
cmpsl
call
mov
imull
aas
subb
scas
ja
aaa
stos
or
push
out
cld
lods
cwtl
or
sbb
mov
fwait
adc
or
and
addb
mov
cld
bound
ret
mull
sbb
xchg
les
addr16
cld
lds
test
adc
dec
jbe
cmp
push
inc
pop
inc
bound
inc
out
xor
pop
pop
orl
lea
pop
shrb
addl
jle
xchg
jae
mov
dec
cmp
dec
dec
fwait
aaa
adc
pop
jb
data16
mov
dec
cs
mov
xor
adc
jne
lahf
imull
sub
add
pusha
jbe
fistl
push
movb
stos
sahf
add
test
sti
dec
or
lods
and
mov
sti
push
or
xor
ret
add
push
pusha
addr16
add
cld
pop
test
pop
cli
cli
xchg
cmp
adc
scas
pop
imul
jae
jae
push
adc
stos
fdivs
and
xlat
adc
sbb
jge
test
cltd
ljmp
cmp
push
imull
jno
dec
ja
pusha
jne
cmpsb
mov
ja
jno
arpl
xchg
cmpsb
adc
sbb
add
js
pop
push
mov
pop
in
movb
inc
lds
and
das
mov
lock
xchg
shrl
and
into
lret
mov
push
xor
addr16
pushf
clc
xlat
iret
jmp
daa
lret
jmp
in
jns
call
cmp
fwait
jmp
fwait
sahf
add
je
push
inc
add
xchg
mov
fbstp
filds
cmpsl
es
xlat
sub
mov
popf
out
mov
jl
inc
xor
mov
insl
sti
adc
cld
xchg
imul
cmp
xchg
dec
aaa
ljmp
xchg
xchg
or
setg
adc
test
in
movsl
pop
out
push
push
sbb
mov
sub
mov
aam
insb
aaa
pop
mov
andl
mov
iret
dec
jne
adc
or
sbb
inc
sbb
mov
es
jne
adc
aas
or
mov
inc
mov
test
outsl
adc
sbb
mov
test
cmp
mov
pop
xor
adcb
addr16
mov
cs
rcl
xor
pop
fiadds
push
outsb
imul
and
fisubl
push
cld
sub
ss
es
adc
aaa
xor
mov
int3
xor
lret
push
dec
js
stc
dec
icebp
js
in
movsl
xchg
dec
push
add
and
out
or
fidivrs
mov
rcll
ljmp
jmp
lods
xchg
push
add
aaa
bound
pushf
mov
stc
push
xor
xchg
xor
cltd
je
push
test
mov
jne
sbb
push
in
dec
cld
adc
pop
out
sub
ja
aam
out
in
cmpsb
adc
test
es
mov
lea
mov
mov
push
inc
inc
or
add
mov
add
pop
nop
movsb
mov
hlt
jo
stc
cltd
lds
cli
push
xchg
notl
aam
data16
loopne
test
mov
je
push
xor
and
and
stos
sbb
cs
mov
mov
jle
xchg
aam
xchg
pusha
xchg
daa
cmpsb
xchg
test
mov
outsb
repz
jecxz
xchg
fldl
and
push
ret
xorl
fcmovu
adc
fisubrs
sbb
fwait
jnp
scas
in
jnp
imul
test
mov
es
xchg
adc
shll
push
sub
xchg
imul
ja
test
mov
sbb
lods
dec
lcall
jae
mov
mov
outsl
movb
mov
mov
and
xlat
and
xor
jle
xchg
mov
push
mov
int
pop
test
xchg
sub
ret
xlat
mov
js
push
mov
cld
lret
cmpsl
and
sbb
sbb
fs
or
push
pop
lret
xchg
push
lret
xor
adc
or
addr16
aaa
test
cmp
in
lds
or
jp
pop
and
sub
mov
fnstcw
lods
jl
mov
int
dec
lods
stos
pop
and
adc
aaa
data16
dec
decb
cli
cld
and
cld
loop
lret
aam
inc
cmp
cld
pop
adc
fcmove
or
in
leave
or
add
dec
mov
std
mov
dec
lahf
inc
sbb
enter
pop
jb
and
fnstsw
ss
add
lds
pop
sub
xchg
cs
aam
push
jmp
in
xor
in
arpl
add
sub
jmp
jl
mov
xor
mulb
add
out
xchg
push
cmp
mov
mov
jecxz
lahf
imul
rolb
xchg
loopne
scas
cmp
or
mov
cmp
pop
xchg
pop
in
fst
lea
jo
dec
pop
push
repnz
and
adc
test
cmp
xchg
jbe
pop
adc
enter
sub
test
jne
and
iret
xchg
jb
inc
and
push
or
mov
xlat
cs
fstps
fdiv
cmp
addr16
mov
jnp
cs
rorb
xchg
xchg
sbb
rcrb
lret
push
adc
mov
movb
sti
rcrb
push
addl
movl
or
cld
inc
aas
add
in
push
xchg
das
inc
add
pop
xchg
adc
xchg
xchg
jmp
and
inc
enter
jmp
mov
xchg
cmp
mov
adc
mov
inc
xor
out
push
sub
sbb
and
inc
out
mov
push
mov
mov
dec
mov
pop
xchg
fcom
ss
dec
mov
cli
push
addl
jl
mov
mov
mov
pop
and
adc
in
jnp
xor
xor
push
pushf
mov
dec
cmpl
inc
cmp
loopne
cmp
addr16
sbb
mov
or
movsl
mov
fisubrs
mov
mov
push
xchg
jge
inc
jg
push
aaa
mov
dec
jl
outsl
push
cld
or
add
icebp
pop
adc
xchg
pop
lahf
fistps
pusha
inc
xor
xorl
mov
dec
sbb
push
push
insb
pop
inc
jge
inc
cmpsb
push
pop
cli
push
cmp
mov
int
add
cld
ds
and
dec
daa
mov
enter
jmp
imul
cmp
jmp
mulb
and
pop
and
daa
movb
or
ja
fbstp
inc
lahf
push
mov
adc
out
out
sarb
aas
inc
mov
jg,pn
addr16
dec
adcb
les
mov
or
clc
das
and
outsl
imul
and
ficoml
loop
xchg
scas
push
call
inc
xchg
jnp
sub
jne
pop
xor
cmp
test
inc
pop
test
sbb
cmp
push
test
es
jno
xchg
aaa
lock
pop
rcrl
inc
xchg
dec
lods
push
jp
mov
addb
pop
out
mov
pop
lds
pop
ss
int
inc
jp
addr16
push
jb
test
fsubs
lods
out
vpunpckldq
into
sub
inc
inc
mov
mov
jp
cld
fcomi
inc
or
pop
mov
push
pop
add
and
loop
dec
roll
incl
inc
cltd
rcl
enter
stc
loop
mov
fucomi
inc
cmp
mov
mov
cs
or
enter
in
ret
in
ret
data16
xchg
in
cmpsb
xchg
in
movsl
sbb
lods
pop
shlb
stc
mov
cmp
mov
fisttps
loope
sahf
adc
add
mov
push
cs
repz
aam
pushf
push
cltd
faddl
xchg
xchg
ja
pop
cmp
and
movsb
into
push
sbb
and
adc
mov
mov
mul
frstor
movq
sbb
mov
sbbl
insl
xor
pop
std
jecxz
icebp
stos
sbb
pop
stos
mov
ja
or
jne
xchg
subb
fs
jmp
mov
inc
sub
sbbl
frstor
dec
dec
pop
cmp
stc
inc
enter
arpl
mov
test
mov
jl
call
dec
ret
enter
mov
gs
dec
les
inc
movsl
and
nop
inc
pushf
xlat
cs
popa
ficoml
adc
subl
cmpsl
xchg
je
pop
sbb
addr16
sbb
adc
adc
in
add
push
lret
cmp
out
outsb
aad
pop
sbb
pop
push
mov
movsb
mov
dec
or
sub
call
pop
lods
flds
int
int
iret
lret
xchg
and
push
mov
add
in
xchg
xchg
cld
mov
stos
xchg
mov
or
sarb
add
mov
or
mov
dec
iret
or
push
mov
lds
mov
lods
xor
add
into
push
mov
xor
jb
mov
pushf
sbb
outsl
and
or
cmp
mov
mov
jp
and
shrb
add
inc
inc
test
jg
ljmp
push
out
add
xor
es
xor
xchg
xlat
gs
xchg
scas
je
fistl
push
dec
sub
iret
lret
stos
mov
add
adc
jp
push
mov
cli
pop
xor
das
or
rclb
scas
and
push
mov
or
jg
adc
adc
mov
xor
and
loopne
filds
out
ret
push
das
and
loopne
fstl
jns
les
loopne
lock
dec
lds
mov
call
shll
push
outsb
or
jg
adc
cmp
vmulsd
mov
lds
lock
aad
add
mov
fcoms
adc
xchg
push
dec
pop
mov
mov
in
sbb
adcl
in
xlat
mov
inc
ud2
inc
add
push
cmpsb
lea
pop
pop
roll
mov
fistps
pop
and
inc
lds
cmp
call
outsl
stos
dec
sahf
jnp
push
repnz
notl
cmp
mov
rclb
imul
mov
subl
aam
or
imulb
divb
fidivs
pop
adc
es
mov
mov
insl
test
jecxz
daa
pushf
jmp
jne
dec
jmp
in
push
rdtsc
sub
xlat
sar
inc
xchg
cmp
or
cli
popa
xchg
out
mov
mov
in
lret
add
adc
jle
pusha
ja
sub
cld
mov
stc
outsb
adc
xchg
dec
test
popl
imul
adc
inc
push
loopne
cmp
jne
xor
cmpsb
push
inc
psllw
xchg
push
push
les
js
dec
xchg
pop
pop
dec
push
adc
arpl
sbb
addr16
push
xchg
sub
push
fwait
xchg
sub
mov
adc
sti
add
aam
cmpsb
mov
or
inc
xchg
lods
jg
push
adc
adc
mov
xchg
inc
pop
aad
fwait
xchg
in
push
add
unpcklps
add
xchg
aaa
out
aad
push
fwait
push
in
xlat
aam
test
ljmp
sub
out
iret
inc
xchg
adc
dec
or
ja
or
cld
ss
dec
add
mov
mov
cmc
mov
inc
xor
and
es
fwait
push
xorl
mov
cmp
shl
mov
out
sar
xchg
in
push
inc
test
lock
repnz
call
aas
xor
ret
aaa
lret
jnp
ja
pop
jbe
insb
mov
cli
ret
fdivrs
or
jnp
mov
xchg
and
xchg
cmp
cwtl
push
aaa
addr16
fs
push
add
or
mov
pop
cld
jne
roll
outsl
aad
mov
xor
push
pop
test
lods
mov
cs
cmp
xchg
mov
rcll
mov
in
in
and
push
xor
je
ja
and
sub
mov
mov
lret
aam
and
xor
pop
push
enter
dec
in
xchg
pushf
aaa
and
and
aad
xchg
xchg
adc
push
push
push
and
dec
xchg
xchg
les
cmp
adc
adc
sbb
adc
sbb
lret
adc
add
aaa
xor
adc
adc
adc
les
dec
cmp
pop
mov
mov
rclb
inc
dec
mov
add
mov
aas
xor
push
rclb
aaa
imul
inc
bound
sub
dec
adc
cmpsl
add
cmp
mov
cmp
movsb
outsb
lock
push
fdivrp
test
in
fs
push
sbb
call
xchg
test
stc
push
aas
cmpsl
stos
bound
adc
mov
xchg
mov
test
inc
or
pop
bound
sti
fs
int
bound
add
fcmovb
push
out
leave
int
sub
setae
mov
stos
jl
inc
leave
xchg
dec
cli
mov
cli
pop
ret
jbe
loop
pushf
ja
je
dec
aaa
mov
xor
pop
arpl
lds
mov
lret
sub
inc
lcall
xor
outsb
rcl
xor
dec
push
push
dec
lods
and
pop
cmc
xor
jg
sbb
xchg
mov
jb
mov
mov
add
xor
pop
add
cld
mov
leave
nop
inc
mov
xchg
test
je
out
in
mov
rorb
mov
and
xor
dec
in
aaa
and
pop
out
movsl
int3
repnz
lock
clc
push
jno
aam
inc
cmpsb
adc
scas
data16
mov
cmp
inc
popl
sbb
and
pusha
inc
push
cld
lahf
imul
push
scas
arpl
stos
sbb
add
xchg
jl
push
mov
jecxz
sbb
mov
jl
outsl
ljmp
xchg
dec
jg
push
jae
dec
addr16
cmp
lods
sub
lods
cmc
mov
dec
or
or
mulb
cmp
or
bound
jge
repnz
xchg
dec
cld
sarb
dec
xchg
inc
dec
rorb
int
iret
iret
xchg
int
push
ret
mov
mull
xor
push
push
xchg
inc
repnz
ja
cmp
sbb
in
int3
adc
sbb
dec
pop
das
and
jge
out
fidivs
mov
and
inc
fildl
inc
out
out
sti
push
adc
incl
fldt
movsb
sub
add
cld
xor
mov
mov
movsl
jmp
movsb
nop
adc
outsb
and
ret
and
mov
inc
jmp
mov
jle
jp
mov
movsl
add
pop
cs
mov
ficoms
mov
jp
dec
push
mov
sub
cmp
mov
lret
das
mov
inc
sub
imul
aaa
push
enter
rorl
push
sbb
xchg
stos
push
outsl
inc
xchg
ret
jmp
xchg
scas
mov
dec
add
push
pop
cmpsb
add
in
fstpl
imul
ret
push
and
leave
jle
and
push
or
lds
aas
mov
pop
jp
dec
stc
mov
add
leave
sahf
gs
bound
push
adc
icebp
fs
jne
sub
dec
cmp
xchg
cmp
lock
in
fstp
jle
arpl
xor
sbb
or
daa
push
loopne
jge
popa
inc
cmp
xchg
push
pop
rcll
ds
std
sub
es
ficoml
dec
push
add
aaa
jp
arpl
push
pop
mov
push
pop
punpcklbw
xchg
andl
icebp
daa
xor
bound
fucom
sub
add
sbb
and
popa
mov
push
ja
push
das
aaa
sbb
adc
sbb
outsb
rol
incb
dec
jp
ja
mov
xchg
push
outsb
dec
push
xchg
stc
call
lcall
imul
mov
inc
sub
xchg
xchg
mov
movsl
in
push
movsb
jbe
push
mov
sub
mov
pop
cmp
fstl
jg
mov
mov
lcall
rol
mov
cmp
insl
sub
roll
adc
pop
sti
push
push
mov
ficoml
mov
je
or
or
inc
xchg
out
xchg
roll
ds
stos
xor
inc
dec
mov
loopne
int
out
out
push
add
fs
push
test
xor
fidivl
test
arpl
ret
jg
adc
pop
push
inc
sbb
sti
frstor
lret
xor
mov
jmp
mov
inc
scas
add
sub
sbb
dec
lds
mov
xchg
daa
mov
xor
fildll
pop
jns
es
cmp
inc
aas
inc
fistps
jnp
jb
pusha
mov
push
inc
sub
or
mov
jp
dec
add
mov
aas
call
stc
xchg
inc
xchg
pop
in
cli
sarl
shrd
data16
push
pushf
or
aas
pop
mov
fmuls
push
push
scas
out
fldenv
addr16
test
push
imul
pop
mov
leave
push
out
xchg
pop
jle
push
sbb
push
dec
pop
cmp
loopne
inc
mov
pop
stc
incl
mov
jmp
push
aam
sbb
inc
sbb
sbb
es
and
jo
push
adc
lds
and
sub
rol
sub
cmpsb
xchg
push
pop
and
inc
push
dec
adc
push
and
push
aaa
fidivrs
movsb
push
adc
jns
das
aaa
scas
adc
xchg
insb
cmpsb
ljmp
and
xchg
sbb
mov
push
inc
cs
fwait
repnz
cs
repz
push
aad
outsl
push
xchg
mov
ds
dec
inc
stos
jno
or
addr16
stc
imul
int
xlat
testb
clc
insb
gs
test
inc
add
inc
pop
push
jecxz
pushf
iret
test
es
push
pop
addr16
xlat
xchg
xchg
add
aaa
movsb
jbe
lods
cld
movsl
cmpsl
adc
pop
adc
xchg
xor
fs
es
fdivl
push
icebp
cmpsb
loope
dec
inc
sbb
test
arpl
outsl
outsl
ror
out
sub
out
cmp
xor
pop
fadds
xor
out
or
in
mov
aaa
cmp
add
movq
fwait
push
or
addr16
notb
test
dec
jg
add
cmp
stc
movsb
icebp
leave
lea
xchg
stos
sub
and
mov
pop
movsb
or
sub
adc
dec
int3
sub
mov
mov
mov
call
out
inc
xor
aas
dec
enter
and
jmp
aam
jp
inc
scas
sbb
xor
ja
mov
call
fsts
lock
imul
mov
sub
fsub
iret
push
aad
mov
mov
dec
insb
lea
mov
mov
adc
push
mov
and
mov
pop
fbld
adc
mov
mov
dec
movsl
dec
dec
mov
jge
jp
repz
sahf
jbe
xor
dec
stos
movsl
cmpsl
inc
mov
jno
ja
push
enter
loope
jge
cmp
movsl
mov
mov
and
aad
ss
enter
mov
mov
loopne
push
sub
leave
lcall
scas
mov
dec
xchg
testb
bound
int
arpl
or
push
inc
cli
xchg
ficompl
ja
int3
iret
call
adc
add
dec
mov
xchg
or
pop
inc
push
or
push
xor
aaa
dec
xchg
or
in
lods
jnp
call
pop
xchg
shlb
pop
adc
cmc
add
pop
xchg
and
aad
jbe
out
push
incl
cmpsb
std
cltd
push
inc
pop
mov
pop
jbe
jo
mov
jbe
and
push
lret
out
fxam
iret
mov
pop
popa
scas
pop
dec
adc
and
enter
cmp
lret
cmpsl
jp
cmc
ja
dec
daa
jl
and
and
hlt
mov
mov
test
jnp
mov
and
test
sarb
dec
cmc
adc
bswap
xorl
and
addr16
ficomps
lods
lcall
fnstcw
sbb
xlat
fistpl
daa
sub
imul
pop
stos
ss
xchg
dec
jb
stos
fwait
ljmp
push
mov
std
hlt
ret
cmp
lret
cmp
sbb
pop
clc
xchg
cmp
lea
mov
or
dec
pop
gs
adc
add
add
push
sub
pop
fdivrp
cmp
inc
std
rcrb
out
clc
ja
push
jg
dec
adc
xlat
adc
ret
jmp
adc
out
push
outsl
or
jbe
push
cltd
out
loopne
or
idivb
aad
xchg
or
call
int
test
pop
jno
xchg
ds
lahf
into
pop
mov
rep
pop
fisttps
adc
es
or
xchg
sub
sub
test
aam
xchg
dec
iret
shrb
pushf
inc
mov
out
shrl
gs
shll
aaa
or
push
jno
bswap
mov
loop
test
xchg
xchg
xchg
inc
addr16
icebp
mull
xor
pop
das
and
cmp
arpl
sarl
push
jl
pop
mov
mov
xchg
aad
or
insl
push
cmp
cs
dec
pop
mov
test
push
lahf
jg
cltd
jg
aaa
jg
aas
testl
xor
out
mov
or
push
out
ret
cmc
push
inc
push
ljmp
mov
mov
outsl
sti
ljmp
inc
lock
adc
cld
jnp
mov
clc
test
das
mov
aam
push
test
sbb
xchg
adc
pop
fcmovb
xchg
inc
sbb
add
push
lea
es
lret
pop
test
jl
jp
mov
pop
push
cmp
mov
xor
xchg
dec
outsb
pop
xor
btc
out
adc
mov
adc
lods
fisttps
ror
dec
mov
push
inc
jle
mov
in
and
add
cltd
ficoml
pop
mov
aaa
aad
adc
nop
in
cmp
addr16
jnp
test
test
dec
outsb
sbb
pop
es
adc
pop
xchg
imul
in
add
cmpsb
sub
pop
xchg
lea
mov
xor
call
sub
cmpsl
test
movsl
adc
aad
mov
pop
push
jno
aad
xchg
aam
push
fcoml
aad
jge
or
enter
test
adc
enter
rol
fwait
call
pushf
push
not
add
decl
fsubrs
fnstcw
aas
inc
mov
repz
inc
rolb
xchg
inc
repnz
ljmp
jno
out
jno
cmp
cmc
das
adc
ds
out
fisubl
aas
cli
fnstenv
jle
lret
xchg
jecxz
int
rcrl
in
mov
inc
add
fisttpl
jmp
and
ret
dec
out
fiaddl
xor
jmp
mov
jl
xchg
pop
inc
in
repz
lret
mov
xchg
out
add
sbb
dec
lret
xor
fimull
xor
loopne
iret
clc
in
shlb
pop
mov
scas
and
push
into
xchg
cmp
dec
mov
adc
in
add
mov
iret
roll
mov
lret
repnz
cli
call
mov
dec
fcomp
stos
or
add
out
xlat
pop
ljmp
inc
or
pop
lods
sub
mov
pop
adc
cmp
int
stc
lea
inc
mov
mov
adc
ret
and
js
add
movsl
or
adc
data16
add
inc
and
clc
mov
cmpsb
out
faddl
stos
movsb
xchg
rcr
jbe
stos
or
lret
pop
cmc
bound
aad
pop
jno
pop
dec
mov
push
aaa
dec
in
lods
inc
or
int
and
xchg
cmpb
arpl
inc
lods
xlat
push
sub
xchg
push
lret
ss
inc
and
push
mov
jo
xor
pop
ds
mov
ljmp
cmp
sub
inc
mov
daa
jg
daa
adc
add
scas
push
dec
mov
xor
jge
push
xchg
cld
jg
adc
jecxz
iret
fcoms
push
adc
pop
mov
inc
sub
shrb
adc
push
in
xchg
sahf
mov
xchg
adc
adc
xchg
xchg
es
xchg
jb
cmp
and
sub
shll
movb
add
int3
sub
pop
addr16
cmp
mov
mov
push
xor
xor
inc
mov
shrb
cmp
rcl
and
mov
ja
movsl
jae
cmpsb
xchg
inc
lock
adc
or
mov
mov
fcmovnu
imull
pop
popl
jg
dec
lea
addr16
xchg
jb
xchg
inc
fisttpl
daa
sbb
cmpsb
inc
jg
test
call
rcll
dec
loope
dec
js
adc
mov
push
or
cmpsb
aad
inc
and
std
jno
in
pop
jb
or
pop
xchg
es
push
xcrypt-ecb
cmpsl
or
mov
clc
and
push
and
xor
inc
loope
xchg
adc
fwait
sahf
dec
in
divl
enter
fistpl
imul
pop
push
xchg
dec
and
cmp
push
adc
int
mov
pop
push
cmpsb
out
addl
pop
mov
fldt
cld
xchg
and
adc
xlat
test
add
aaa
jmp
enter
int3
cld
mov
ljmp
iret
lcall
stos
mov
aas
jne
pop
or
cmovne
or
mov
inc
push
cmc
addr16
in
cmp
add
inc
sub
outsl
push
pop
adc
iret
mov
lds
mov
cs
inc
or
lahf
fdivs
jne
xchg
pop
mov
or
aaa
push
sahf
pop
sti
mov
add
sbb
in
cmp
cmp
add
add
push
xchg
test
jmp
and
js
popa
cmpsl
and
dec
mov
and
shlb
outsb
es
mov
push
pop
es
cmp
cmpsb
int3
jb
xchg
push
lock
pop
and
dec
popa
sahf
addb
test
in
pop
jg
pop
addr16
jmp
jns
cltd
lret
adc
mov
ficompl
aas
jmp
lock
push
shl
loopne
out
pop
sub
outsb
push
sub
jmp
pop
iret
add
stc
adcl
gs
andb
mov
push
xor
add
ss
or
aad
test
xacquire
or
scas
movl
pop
dec
push
stc
or
add
cld
cmp
jecxz
fildll
push
and
cmp
outsl
cmp
ret
scas
loopne
push
push
pop
mov
xor
test
insl
ret
mov
mov
aaa
sub
and
dec
add
xchg
fcoml
dec
adc
xor
inc
jne
clc
sbbb
cmc
lods
xsha256
cmpsb
xlat
xchg
loopne
xchg
cmp
xlat
mov
aam
popa
mov
sub
push
out
xor
jmp
cmpsl
push
jg
cmc
adc
arpl
jecxz
inc
test
dec
adc
mov
mov
mov
jbe
ss
mul
push
mov
mov
aaa
sub
mov
cmp
cmc
xor
sbb
pop
xchg
mov
xor
aad
lds
js
xchg
sahf
xchg
mov
fmull
ljmp
repnz
pop
sti
xchg
fstpt
out
and
mov
daa
ficoms
aad
sub
lea
push
addl
lret
xchg
adcl
and
stos
xchg
xchg
push
pop
dec
and
inc
mov
rclb
lock
adc
cmp
mov
je
mov
loop
in
int
sbb
pop
mov
inc
xchg
dec
xchg
fwait
adc
pop
outsl
je
loope
add
ja
fwait
outsb
add
inc
popl
xor
pop
push
imul
icebp
jnp
or
pop
fildll
jg
adc
lret
fs
cmovg
bound
or
jg
adc
insb
xlat
jno
push
adc
and
jge
dec
dec
push
add
aad
jne
shl
ja
inc
jl
jp
push
mov
jno
adc
mov
cmpsb
jmp
ficoms
add
and
repnz
movl
push
sahf
testl
aaa
addb
pop
push
je
sub
mov
mov
inc
mov
shrl
inc
dec
insl
mov
add
cli
aam
and
jg
sub
das
stc
imul
dec
arpl
mov
inc
pop
xchg
outsl
mov
jmp
test
dec
inc
mov
add
sub
push
int
std
in
adc
lahf
pushf
ret
daa
das
and
cmp
negb
adc
add
jns
daa
push
adc
inc
negl
push
aaa
or
adc
adc
pushf
mov
jle
cmp
xchg
out
js
inc
out
adc
jmp
xchg
out
jge
jne
andb
inc
xor
sub
xor
xor
xor
xchg
cmp
jle
lea
xor
and
jecxz
sub
or
icebp
jge,pt
and
dec
jge
xchg
sti
add
cmc
xchg
test
adc
inc
notb
mov
jbe
mov
ss
idivl
mov
mov
push
ja
jle
sub
pop
paddq
cmovb
pop
test
dec
sub
test
js
push
mov
sbb
js
mov
dec
lret
mov
bound
add
mov
sahf
out
nop
sbb
mov
cli
fnstsw
popf
outsl
jbe,pn
push
or
push
mov
rol
dec
cltd
into
mov
fbstp
xchg
jno
ss
xor
inc
pusha
pop
gs
inc
out
in
sbb
out
and
cmc
adc
xlat
testb
je
xchg
btcl
aad
xor
addb
sbb
pop
test
mov
push
pop
pop
pop
xchg
data16
cmp
jbe
cmc
and
inc
testb
testl
fld
cs
cmp
pop
leave
cli
cmp
outsb
adc
gs
push
cmpb
mov
test
in
xchg
hlt
stc
test
std
add
mov
jno
in
fists
ds
movsl
mov
push
xlat
adc
jmp
ds
repz
inc
pop
dec
or
leave
ljmp
push
scas
lds
add
popa
pop
ds
cld
jno
pop
addr16
clc
xchg
add
sub
not
cmp
daa
pand
es
call
mov
jmp
daa
jge
pop
dec
mov
pop
pop
adc
rcr
push
fmul
mov
cli
add
bswap
in
or
shll
and
jne
dec
xchg
inc
cmp
and
adc
add
dec
dec
test
pop
or
pop
jge
out
daa
mov
mov
or
inc
inc
push
jg
scas
push
push
or
in
lahf
sub
xor
mov
scas
push
xchg
ljmp
cmp
mov
js
cmp
cmp
cld
in
xlat
or
psrad
cmpsb
cmp
cmp
mov
int
jmp
roll
imul
int
pop
xchg
out
jb
dec
mov
xchg
and
cmp
dec
sarb
mull
ja
les
scas
add
int
pop
mov
arpl
repz
cli
outsl
inc
cmp
aam
add
pop
push
jno
inc
adc
sub
cltd
push
inc
pop
adc
out
inc
adc
jge
jecxz
pop
jb
sub
xchg
jge
push
loop
popa
mov
adc
sub
imul
fwait
divl
stos
rorb
inc
fistpll
sbb
mov
pop
jg
xlat
dec
xchg
movsb
ret
clc
addr16
jg
pushf
movsl
les
sahf
ret
es
push
sub
sub
ret
xchg
add
sbb
lret
ret
inc
in
adc
mov
adc
or
adc
in
popa
ret
xchg
ljmp
cmpsb
addr16
ret
mov
es
mov
mov
or
push
push
cmpsb
add
popf
mov
cmp
ds
ja
les
sysexit
pop
stos
jl
inc
mov
xchg
data16
in
mov
bound
cmc
or
stos
push
aas
sbb
scas
inc
and
sbb
aas
inc
pop
fdivp
cld
call
dec
cltd
shlb
out
dec
addr16
and
mov
repnz
pop
xchg
mov
push
xchg
stos
mov
inc
jge
cld
add
shll
mov
lret
sbb
push
imul
lds
jmp
push
sub
add
cwtl
mov
add
icebp
sub
sub
jnp
dec
das
addr16
cmp
stos
add
rorb
pop
dec
dec
icebp
cmp
pop
xchg
inc
pop
push
into
cvtpi2ps
popf
jns
outsl
pop
sub
lret
mov
jmp
addr16
and
add
stos
xchg
push
es
stos
andnps
out
inc
jae
sub
imul
jnp
fwait
mov
cld
sub
jne
inc
cmp
daa
push
sbb
loop
pop
fwait
into
addr16
stc
inc
fists
xchg
dec
jo
call
push
sbb
adc
movsl
sarb
push
xchg
jno
pop
lret
add
test
push
mov
lock
sti
jbe
mov
cli
movsb
pop
pushaw
mov
fnsave
popf
lods
push
nop
mov
test
pop
rolb
dec
cltd
aam
adc
gs
les
dec
adc
add
pop
xchg
mov
ficomps
inc
inc
adc
outsb
fists
lret
outsl
fistps
push
inc
xor
sbb
mov
clc
mov
rorl
fnstsw
and
xchg
inc
insb
mov
adc
push
push
lock
push
jae
dec
sbb
or
or
scas
jg
jb
fisubs
and
out
lahf
dec
jle
inc
cmpsl
mov
mov
ja
push
mov
addr16
fisubs
inc
pop
in
cltd
pop
xlat
in
inc
cmp
out
xor
in
jecxz
lret
xchg
xchg
inc
xlat
mov
push
mov
cld
int3
out
test
lock
add
pop
rol
out
cld
ljmp
push
sub
push
adc
pop
pop
xor
out
cmpl
std
push
xchg
xorl
mov
test
pop
jl
mov
loopne
xchg
jle
push
out
jae
xlat
mov
xchg
push
and
dec
xchg
out
das
adc
mov
rcrb
mov
enter
aas
or
popa
xor
xor
cmp
test
cmp
pop
inc
ljmp
or
pop
movsb
jg
cmp
jp
mov
shrl
push
lock
dec
xorl
push
fsub
dec
jns
aas
and
xor
mov
pop
das
repnz
call
pop
lret
sti
mov
sahf
xchg
mov
mov
outsb
in
xchg
lds
arpl
xchg
and
lahf
push
sub
add
push
xchg
test
les
cmpsl
cmp
cmp
or
cmp
sbb
and
cmp
daa
scas
push
push
je
ljmp
dec
jmp
stos
xchg
mov
jne
dec
xor
xlat
push
mov
jbe
ss
aad
xchg
mov
ja
jg
sti
add
mov
sub
xor
pop
adc
mov
sbb
fst
lds
inc
add
jmp
ja
data16
jle
cmp
adc
outsl
fstpt
mov
or
into
fwait
pop
jmp
xchg
outsl
aad
je
push
outsl
jne
clc
mov
jbe
cmpsb
es
in
xchg
mov
push
push
add
sub
push
outsl
push
add
jnp
addr16
mov
out
nop
mov
sahf
mov
jnp
xor
jbe
movsb
pop
mov
clc
fs
push
xchg
mov
jle
pop
insb
movsl
cmpsb
fisttpl
aaa
dec
cld
loope
cmp
mov
push
into
jnp
mov
cmp
push
mov
rcrb
jg
icebp
stos
add
scas
int
and
dec
imul
subb
fistpl
leave
push
and
sahf
bswap
jne
xor
xchg
pop
iret
inc
imulb
or
imul
jno
inc
push
test
pop
xchg
lds
and
lock
inc
add
push
pop
and
cmc
mov
es
cmpsb
popf
pop
cli
sbb
mov
pop
test
inc
out
sbb
inc
xor
inc
cmc
mov
jne
and
dec
mov
jbe
ss
testl
cmp
pop
faddl
aaa
adc
and
fsubr
xchg
adc
sub
sub
jo
cli
mov
stc
in
ret
mov
insb
cmpsl
sub
loope
xor
inc
xchg
pop
sahf
mov
xchg
xchg
repnz
mov
jecxz
sub
adc
add
in
sbb
arpl
jnp
xchg
out
sbb
daa
divl
mov
sti
jle
mov
mov
mov
je
mull
js
inc
lds
and
mov
jae
scas
rcl
std
cwtl
mov
stos
pop
cmpsb
push
stc
push
cmp
mov
mov
repnz
xor
ljmp
pop
ret
rorb
in
nop
sub
stc
or
or
outsb
jnp
mov
xchg
push
and
loop
xorps
shl
stos
cli
fcmovu
or
insl
ret
shll
and
aad
sub
idiv
sub
mov
mov
imul
movsl
pop
pop
dec
je
dec
mov
js
pop
pop
out
fistl
daa
notb
sbb
mov
insb
mov
cli
dec
fmull
sbb
adc
xor
test
cwtl
push
xor
and
in
dec
mov
je
xchg
add
lods
and
pop
loop
mov
dec
addr16
addr16
jae
xor
push
mov
call
shll
out
pop
es
mov
out
xchg
or
stos
stos
jnp
enter
mov
stc
adc
in
addb
xchg
ret
cmpsb
addr16
in
notl
xchg
sub
pop
push
xchg
aas
aaa
add
and
push
shll
jns
orl
add
xchg
ss
or
mov
mov
fisttpll
dec
std
test
fwait
adc
dec
pop
xlat
popa
cmp
fidivrs
pop
mov
jmp
out
adc
in
adc
jg
cmp
cmp
or
inc
lods
push
idivb
mov
andl
adc
rcll
mov
pop
xor
je
enter
dec
add
jne
cmpl
movsb
mov
adc
add
and
mov
inc
add
add
xchg
stos
lret
pop
jmp
or
addr16
adc
flds
or
out
and
repz
stc
mov
adc
loopne
or
jecxz
into
xor
mov
pop
jo
mov
test
push
cmpl
je
adc
push
adc
lea
test
push
dec
xchg
arpl
jb
fsubrl
outsl
jnp
pop
arpl
pusha
inc
add
imul
push
pop
lock
adc
xor
mov
adc
and
sbb
cmp
test
push
enter
adc
daa
cwtl
xchg
fldl
jnp
cmp
filds
lods
xchg
sti
push
jmp
jecxz
cmp
push
dec
push
into
xchg
push
adc
daa
out
add
xlat
xor
lret
or
push
adc
xchg
sbb
cmp
push
add
les
push
or
inc
insb
cmpsl
dec
push
out
jg
test
lret
pop
pop
add
dec
add
rcrb
addl
push
neg
lcall
lcall
stos
les
lcall
ds
jae
outsl
xchg
jae
in
push
ja
push
ja
call
cmpsb
push
das
addr16
xor
gs
outsb
loopne
enter
cmpsl
jne
mov
add
push
imul
inc
into
add
test
pop
or
push
stos
sbbb
pusha
jle
ljmp
lock
ja
dec
shrb
inc
das
push
jmp
add
jp
sarl
push
gs
mov
xor
xchg
cmc
jmp
inc
cmpsb
add
jl
insb
cmpsl
test
mov
out
inc
cmpb
cmpsl
out
push
out
or
data16
push
in
cmpsl
repz
inc
leave
xor
mov
subb
gs
dec
mov
int
jne
push
xlat
mov
mov
les
xchg
fs
ss
aad
jl
mov
cltd
xchg
dec
lea
pop
rorb
adc
out
mov
ds
cmp
xchg
shlb
add
cmpsb
adcl
lahf
jbe
jle
add
cld
or
js
ja
inc
and
das
cmp
ss
mov
cli
adc
mov
das
adc
popf
lcall
arpl
xor
add
xchg
pop
xchg
add
out
cs
bt
adc
pop
mov
add
xacquire
xchg
or
push
shl
pop
fisttps
sub
das
cmp
loope
add
enter
push
bound
inc
push
cmc
hlt
out
sub
mov
sub
sbb
adc
jnp
and
lods
xchg
and
dec
popa
aaa
mov
and
dec
jl
ret
std
mov
test
fadds
and
es
and
push
dec
mov
or
push
jmp
push
out
out
es
in
aad
mov
movsl
enter
push
and
and
jp
mov
pop
leave
cltd
leave
lds
pop
lret
inc
push
mov
jmp
lahf
sub
xchg
cli
enter
ret
in
aas
mov
repz
in
push
lods
add
std
lea
mov
adc
pop
dec
adc
out
xchg
ja
sbb
scas
mov
stc
push
daa
filds
jnp
mov
subl
dec
sbb
mov
out
imul
insl
xchg
outsb
arpl
pushf
push
xor
pop
in
das
lock
add
pop
bound
or
and
leave
int3
test
leave
mov
dec
xor
mov
mov
scas
cmpsl
movsb
rdtsc
add
iret
ja
dec
lret
jnp
pop
daa
insl
dec
movb
scas
pop
mov
mov
shr
xchg
xchg
mov
js
dec
xchg
lcall
getsec
pop
pop
sti
push
xchg
mov
repnz
or
sahf
pop
xchg
inc
outsb
xor
aaa
fwait
xchg
icebp
push
cmp
mov
mov
call
add
or
and
xchg
pop
sub
loop
aaa
shl
ffree
mov
js
sahf
xchg
iret
mov
adc
push
scas
cmp
sbb
pop
jbe
ja
scas
xchg
jbe
push
dec
cwtl
stos
cs
in
pop
in
outsl
pop
push
fwait
push
inc
inc
stos
and
in
outsl
cld
ret
cmpl
xor
pop
adc
jnp
push
cltd
insb
fwait
dec
push
arpl
pop
cmp
cmp
cli
mov
jae
out
push
call
inc
aaa
lret
daa
pop
and
subb
jmp
push
add
iret
pop
xor
cmp
js
xchg
out
sbb
push
in
dec
xchg
push
inc
adc
rcrb
jo
lock
and
stc
mov
das
or
lahf
xor
outsb
outsl
xchg
push
aaa
inc
adc
test
cld
xchg
xchg
lods
ffree
xchg
faddl
data16
in
mov
cmpsb
int3
push
pop
leave
jmp
xlat
sahf
aaa
and
daa
pop
and
test
xchg
mov
les
cs
pushf
es
and
mov
pop
mov
aam
mov
paddsb
mov
call
pop
mov
scas
int3
mov
lret
jp
mov
dec
add
out
aas
je
addr16
or
sub
push
and
mov
aas
lock
pop
lods
fsubs
xlat
xchg
sbb
and
stos
xor
cld
jb
movsl
mov
ja
call
cld
imul
or
stc
test
add
inc
sbb
xchg
adc
mov
sub
clc
sub
rorb
addr16
xchg
jbe
cli
add
xchg
adc
jg
and
pushf
jecxz
outsl
int
repz
add
jl
push
xor
mov
push
pusha
data16
nop
rorb
mov
and
jle
mov
add
sub
push
test
fwait
pop
mov
das
mov
mov
les
push
in
sub
lds
inc
dec
enter
jmp
sub
sbb
xor
jg
push
push
inc
test
mov
xchg
or
out
rdpmc
ficomps
orl
leave
divb
xor
jecxz
jle
sub
test
cmpsb
das
push
jmp
sbb
das
pop
lret
mov
mov
jmp
inc
adc
jbe
pop
pop
lret
repz
or
data16
mov
jge
or
mov
lock
icebp
mov
sub
insl
inc
xchg
mov
insl
outsb
mov
xchg
imul
add
push
mov
xchg
aad
push
mov
xchg
mov
xchg
scas
pushf
push
cmp
je
daa
js
jne
or
inc
inc
sub
inc
stc
xlat
xor
cmp
stos
adc
push
push
sub
pop
div
in
call
cli
xchg
lods
sub
push
add
psubq
test
inc
jmp
jbe
adc
inc
lods
movsl
sti
mov
push
jae
fbstp
mov
out
gs
xlat
jecxz
xor
push
push
stos
pusha
jb
sbb
mov
sub
jmp
inc
stos
ret
push
mov
jge
mov
mov
addr16
pop
add
mov
das
jnp
push
or
pop
or
addr16
fmull
scas
mov
out
xchg
sbbb
arpl
pusha
std
lahf
push
inc
add
mov
mov
or
inc
dec
or
xor
jg
scas
and
subl
mov
stc
mov
inc
repz
push
jecxz
outsl
xor
cmpsl
push
adc
push
out
mov
pop
scas
call
inc
adc
adc
inc
scas
dec
cmp
fldt
dec
fucomip
inc
cltd
xlat
ficompl
mov
fdivp
push
ret
insl
mov
mov
mov
shr
push
mov
mov
push
test
movsb
jg
add
push
inc
mov
jmp
pop
or
xor
push
sarb
aaa
or
movsb
stos
inc
xchg
mov
lahf
in
into
sbb
mov
fdivs
scas
fs
popa
lods
inc
pop
repz
xchg
iret
lcall
lods
xchg
out
rorb
adc
pop
cmp
rcrb
test
inc
pop
pushf
movsb
push
stos
pusha
js
ja
fucomi
or
xchg
or
iret
mov
pop
pusha
decl
lock
mov
mov
aaa
out
pop
adc
insl
adcl
icebp
out
sti
adc
dec
imul
aaa
cli
test
ret
cmpsl
sbb
flds
pop
sti
aaa
fs
adc
mov
and
xchg
add
lods
popf
push
push
and
xchg
idivl
or
adc
cmpsl
inc
inc
add
repz
loop
xorb
lods
mov
int
pushf
add
xchg
ds
pop
and
add
xchg
cmp
or
and
push
negl
jmp
lcall
mov
es
imul
and
out
cwtl
push
xchg
and
dec
outsl
imull
ja
mull
cli
pop
add
mov
aaa
xor
mov
push
scas
inc
ret
inc
out
cmp
cmp
sub
xor
jle
mov
outsl
or
mov
xor
repz
sub
std
adc
inc
add
in
xchg
outsb
sub
dec
dec
inc
int
mov
adc
inc
add
pop
mov
rcrb
sub
rcrb
pop
lods
lcall
inc
pop
xor
unpcklps
rolb
stc
scas
xor
insb
test
cs
in
adc
xchg
test
shrb
cs
pusha
or
add
test
call
xchg
sarl
sub
push
shll
aas
lret
inc
andl
inc
sub
dec
cs
repnz
das
outsb
mov
rcrb
jbe
clc
pop
ret
push
jmp
xlat
push
andl
pop
in
push
push
cmp
and
fcomps
adc
xor
das
das
cltd
adc
cltd
mov
subb
dec
movb
mov
icebp
mov
addr16
pop
aaa
pop
and
jle
loopne
add
das
das
inc
jg
loopne
jb
aaa
mov
popa
add
pop
mov
notl
mov
sub
cmp
iret
fstpt
popa
jge
and
push
popa
jl
and
xor
imul
add
imul
mov
imul
imul
dec
shrb
adc
adc
int3
sub
adc
and
xchg
push
or
hlt
jle
loop
mov
pop
clc
popa
push
jecxz
dec
fs
loopne
enter
add
scas
pop
or
stos
les
je
stos
test
lods
jo
scas
and
mov
lcall
daa
out
cmp
sbbb
push
add
inc
int3
jae
movsl
js
push
and
xlat
push
cmpsl
adcb
lahf
add
push
mov
imul
sub
mov
negl
imul
cmpxchg
inc
test
mov
or
sbb
push
push
or
ds
imul
pop
sub
push
pop
out
mov
dec
mov
mov
ja
loop
test
inc
out
ss
pop
sbb
cmpsl
jne
sbb
pop
xchg
mov
loop
scas
add
aaa
iret
xor
or
xor
out
mov
xchg
mov
aad
or
ret
lret
xchg
ljmp
or
dec
les
jg
mov
push
mov
fwait
cmp
inc
test
add
push
das
or
pop
push
sub
mov
xlat
sbb
scas
add
adc
and
idivl
and
clc
cli
push
push
movsl
mov
or
xor
outsb
jle
fdiv
sub
filds
push
add
push
or
hlt
int
push
xor
aaa
sub
fwait
sbb
movsb
pop
jnp
cmp
popa
out
fwait
call
pop
repz
into
mov
mov
ja
imul
or
rorb
or
addl
or
daa
pop
push
inc
xchg
in
push
out
mov
leave
mov
imul
dec
sbb
pop
adc
ss
sbb
mov
js
and
jp
outsl
divl
and
pop
mov
test
sbb
leave
inc
subb
ja
movsl
adc
jp
mov
pop
mov
in
imul
adcl
xchg
psubusb
push
push
sub
bound
sysret
fisttps
inc
fwait
addr16
pop
repnz
dec
aaa
sub
popa
inc
jg
add
jg
xor
jne
xor
xor
fcmovnbe
stos
sub
fisubs
add
jnp
insl
sbb
xchg
cmp
adc
push
xchg
bound
adc
pop
int3
aas
push
xor
cmpsl
aaa
push
cmpsl
jge
mov
cmp
rorb
aaa
mov
or
or
mov
or
mov
fisubrl
pusha
shll
pop
cmpsl
aas
rcr
or
inc
lcall
clc
and
icebp
and
das
stos
into
shrl
aaa
ja
xchg
pop
subb
andb
sbb
and
push
adc
xchg
and
push
or
call
es
or
pop
dec
cmp
addr16
jbe
sbb
icebp
xchg
cmp
fildl
push
xor
inc
or
cmpl
mov
and
out
push
pop
shr
sub
inc
cmp
fstpl
adc
xor
add
push
xchg
outsb
adc
out
test
jmp
push
inc
and
adc
xchg
int3
test
das
adc
xchg
cmpsl
dec
pop
add
mov
adc
xorl
aaa
dec
imull
enter
mov
arpl
in
xchg
arpl
ljmp
clc
arpl
push
repz
jbe
mov
iret
aas
dec
inc
push
ja
add
mov
jb
lods
xchg
sub
aaa
jecxz
inc
dec
sbb
add
cmpl
ret
adc
lahf
outsl
daa
out
add
daa
test
and
mov
into
jg
arpl
adcb
push
mov
adc
pop
ja
and
loop
imul
loope
mov
imul
xlat
xchg
adc
in
mov
and
xchg
mov
sbb
cmp
cmp
jmp
push
mov
inc
xchg
ja
rcll
and
cs
add
test
lahf
sbbl
pop
inc
es
pop
out
out
sub
loopne
cltd
jbe
data16
imul
sbb
je
test
pop
jg
add
xchg
ja
xchg
ret
insl
sub
xchg
enter
mov
nop
xchg
mov
test
push
es
cmp
cs
xchg
jecxz
enter
or
mov
idivl
lret
lds
stos
add
push
out
inc
pop
jno
aam
push
adc
add
jg
mov
dec
lods
jge
push
adc
or
inc
mov
iret
in
dec
iret
sub
mov
or
pop
int3
int
dec
sti
pop
and
lea
rol
cmpsb
inc
ret
subl
cld
cmp
lahf
inc
cmp
out
clc
stos
push
cmp
push
mov
clc
das
cmp
lds
jo
or
fbld
lahf
mov
out
insb
adc
push
jge
xchg
dec
aam
pusha
pop
xor
pop
xchg
inc
sbb
adc
sbb
aaa
test
stc
fstpt
cmpsl
addb
je
mov
and
xchg
dec
jecxz
int3
jno
adc
push
push
fwait
bound
out
scas
shrb
icebp
scas
xchg
rolb
adc
imul
mov
push
mov
mov
add
mov
pop
int
mov
xor
mov
int3
sub
mov
fisubs
sbb
inc
xchg
sub
mov
test
arpl
adcl
int3
push
rol
popa
add
out
inc
cltd
mov
xchg
imul
mov
mov
mov
lcall
mov
mov
lds
sub
stos
mov
xchg
jp
enter
mov
and
sub
and
fisubrs
mov
clc
orb
mov
imul
enter
mov
pop
mov
testb
call
adc
pop
mov
arpl
cmpsb
mov
dec
cmp
sbb
shll
jne
imul
insb
inc
xor
jnp
icebp
adc
xchg
icebp
ja
xchg
filds
mov
mov
test
lods
fldl
adcl
mov
adc
cmpsb
and
mov
lahf
addr16
adc
pop
add
cmp
xchg
mov
addr16
enter
out
imul
push
jl
leave
ret
jecxz
pop
out
in
lahf
jns
sbb
loope
xchg
in
sub
xor
xchg
in
das
dec
orl
fisubs
test
mov
aam
cmp
cld
xor
or
int3
or
jo
call
pop
push
out
xchg
pop
icebp
mov
cli
inc
aaa
sub
push
mov
icebp
pop
xchg
aaa
aas
in
inc
jge
outsb
push
mov
xsaves
mov
mov
orl
add
aam
iret
popf
xor
jle
push
jmp
popa
pop
dec
cs
test
or
out
pop
movsb
sti
js
jns
jno
cmpsl
lret
dec
cwtl
xchg
xchg
xchg
adc
popa
mov
pop
dec
adc
subl
insl
fcoml
repz
test
sub
ljmp
fbld
cmpsb
aaa
lock
je
adc
repnz
ror
in
lahf
mov
inc
pop
vpsubd
in
jnp
or
addr16
mov
dec
xchg
movq
sbb
jle
ljmp
pop
divb
push
mov
mov
loop
pop
aaa
add
dec
movl
outsb
fdivrl
enter
enter
adc
movsb
lock
addr16
and
imul
ret
data16
mov
push
sbb
addr16
dec
push
dec
pop
adc
imul
adc
dec
jl
stos
pop
dec
jmp
cltd
xchg
push
addr16
pop
jnp
test
sbb
xor
repnz
jne
sbb
or
inc
mov
xor
jecxz
arpl
inc
push
jae
flds
idivl
es
pop
lds
push
pop
or
xchg
fwait
lods
mov
pop
mov
cmpsb
add
mov
add
adc
add
stos
int
outsl
arpl
sub
jo
xor
das
popa
cmp
jb
and
stos
inc
imul
lcall
nop
cld
xor
pop
lahf
ljmp
or
jb
rclb
xchg
std
ret
mov
mov
pop
movl
or
addr16
fwait
dec
ljmp
jle
push
xor
pop
lods
fisttpll
pop
loop
aas
and
sub
test
xchg
ret
shlb
fildl
jmp
in
nop
lret
jne
inc
push
dec
stc
dec
inc
cmp
popl
mov
xchg
fistpll
xchg
sahf
inc
mov
stos
out
and
add
xor
imul
add
enter
movsb
xchg
xchg
inc
add
mov
jl
mov
xor
push
ret
xchg
add
fcoml
mov
cltd
imul
divl
push
fidivrl
movsl
xchg
push
add
mov
notl
jns
xor
pop
inc
pop
leave
xchg
jmp
push
sub
pop
getsec
pop
add
aam
aaa
lds
in
movsb
loope
inc
fwait
push
in
pop
mov
xchg
mov
jl
cmp
cs
out
add
fcmovnu
inc
or
xor
pop
fisubs
xor
mov
in
xorb
pop
pop
xor
aaa
daa
adc
push
loop
mov
insl
aaa
sub
js
xor
xchg
sbb
xchg
inc
sub
js
adc
cltd
stos
fs
xchg
sub
inc
push
xchg
mov
xlat
repnz
mov
lret
add
xlat
push
movsb
rcrb
add
adc
into
jle
mov
into
test
gs
inc
fnstsw
adc
in
rcrl
pop
filds
andb
or
pop
sahf
testb
cs
mov
cmpsb
nop
mov
jge
pop
pushf
sub
jge
dec
jb
test
popa
xor
test
dec
out
inc
imul
stos
pop
lea
imul
fiadds
in
loop
fsts
aam
popf
push
sub
fidivl
cmp
or
xor
nop
in
push
out
les
and
cmp
dec
inc
dec
mov
jmp
repnz
or
jp
push
ret
clc
mov
pop
push
stc
xchg
fsub
cwtl
test
shlb
shrb
mov
lcall
xchg
iret
mov
jbe
loop
fistpll
push
xchg
jns
xchg
pop
dec
gs
ds
jb
adc
mov
inc
mov
dec
fnsave
lea
in
xchg
cmpsb
lock
and
sub
add
xchg
sbb
pop
aaa
push
lods
push
test
dec
push
mov
or
sub
adc
pop
push
or
lcall
cmpsb
adc
xchg
je
xchg
jecxz
lea
xor
test
enter
mov
imul
stc
jno
adc
cmp
insb
cmp
dec
movb
cs
das
ja
mov
movsl
xchg
mov
mov
cli
outsl
jno
jbe
inc
in
out
popa
mov
pop
jb
xchg
mov
push
clc
pop
jmp
int
ss
mov
sub
push
ret
push
cmpsb
cli
dec
push
mov
inc
inc
mov
inc
add
xorb
xorps
push
or
test
sub
bound
dec
sub
add
adc
xchg
pop
test
imul
push
pop
pop
xor
es
add
imul
pop
inc
jmp
inc
repnz
movsb
ret
mov
inc
dec
lahf
dec
mov
notl
xor
dec
icebp
pop
mov
mov
in
and
and
mov
push
pop
ja
adc
enter
out
fmul
sahf
sti
loop
mov
loop
cli
addl
outsb
push
or
shrb
cmc
movsb
mov
jp
sub
jg
addr16
inc
jno
outsl
dec
sub
adc
xor
or
popf
and
jg
outsb
rcrb
cs
arpl
mov
insl
pop
inc
call
aaa
add
shrl
sbb
aad
dec
mov
rclb
es
cmpsl
adc
ss
iret
xchg
lods
dec
fidivrs
add
lret
lcall
mov
adc
inc
enter
xlat
xchg
das
sbb
imul
rcll
xchg
jo
sti
lods
fnsave
fsubrs
sub
outsl
clc
adc
push
xchg
ds
cmp
fsubl
jge
mov
bound
stos
inc
jae
and
dec
int3
ficompl
outsb
in
lahf
into
aas
out
jmp
sarw
adc
and
daa
mov
mov
push
aad
outsl
jbe
pop
and
push
ficoms
dec
mov
sti
std
push
push
clc
dec
jne
mov
sub
fimuls
repz
flds
add
sbb
inc
cld
xchg
push
loopne
subb
insb
cmp
inc
dec
and
cmpsl
or
adc
out
sbb
or
test
mov
fists
sti
sbb
or
jo
daa
mov
jns
enter
shr
jnp
out
jb
sti
mov
xor
inc
stc
cs
das
push
push
fwait
out
aam
cmpsb
push
push
negl
add
and
call
mov
adc
xor
rclb
push
dec
cmp
xor
shll
fcmovnb
and
jno
and
mov
loop
rorl
in
or
inc
sub
es
add
xor
mov
xchg
mov
fs
inc
add
mov
ret
cmc
adcb
inc
orb
lcall
enter
push
pop
inc
xor
xchg
sahf
leave
shll
push
adc
jbe
test
out
pop
addr16
dec
jle
mov
scas
bound
jnp
pop
sbb
push
inc
push
jne
inc
movsl
or
stc
pop
pop
pop
cmp
test
add
inc
das
insl
fcom
add
iret
stos
adc
cli
cmp
inc
add
pop
cmp
push
push
xchg
xchg
dec
mov
aam
lea
dec
movsl
pop
adc
sbb
sbb
pop
iret
in
imul
jmp
cmp
xlat
xor
adc
dec
sbb
inc
push
mov
hlt
dec
stos
sbb
inc
in
push
arpl
icebp
clc
push
sub
js
adc
das
adc
lock
mov
cmp
and
mov
push
call
shrb
les
xchg
push
addr16
mov
inc
shr
mov
pop
movsl
repz
ret
mov
aas
dec
pop
ss
roll
push
pop
lahf
push
mov
mov
xchg
mov
sub
addb
sarb
xchg
rorb
or
xor
arpl
cmp
push
xchg
jge
xchg
nop
cmpl
push
push
add
xrstor
sbb
inc
sbb
mov
mov
xchg
cmp
js
pop
sub
xchg
adc
add
aam
or
ja
lcall
push
pop
or
sti
mov
mov
push
push
aaa
sub
xor
out
mov
sub
xorl
jl
lret
mov
fcmovb
mov
call
dec
xor
mov
sub
xchg
xchg
mov
or
divl
add
cld
inc
test
mov
loop
mov
test
xor
mov
mov
sub
adc
cwtl
pop
jne
out
movsb
or
sarb
or
mov
jle
xchg
movsb
xchg
fwait
and
lahf
loopne
and
data16
sahf
sub
jecxz
das
inc
mov
in
add
ret
pop
fwait
jge
push
mov
ret
jg
jae
mov
or
fstpl
xor
fwait
ja
push
adc
ds
xchg
cld
mov
push
xor
fimuls
sub
adc
insl
adc
rcrl
jl
ja
push
or
push
xchg
mov
dec
iret
sbbl
sarl
aad
dec
jp
mov
adc
iret
push
dec
or
pop
in
and
repnz
adc
call
fildll
xchg
add
jl
pop
call
testl
je
dec
pop
pop
xchg
shl
mov
test
scas
cmpsb
inc
jno
adc
pop
int
test
mov
pushf
or
nop
push
cltd
aaa
push
adc
insb
sarb
xor
adc
mov
xchg
mov
cs
dec
xor
andl
das
dec
addr16
mov
in
jnp
mov
pushf
lret
dec
jbe
xorl
out
inc
enterw
add
mov
jg
cmp
inc
imulb
mov
fwait
shrb
pusha
push
orl
pop
adc
fs
pop
lahf
aaa
jnp
mov
scas
fstpl
int
inc
daa
mov
jnp
sbb
aaa
data16
xchg
sub
outsl
inc
dec
push
out
push
sti
mov
rep
ficoml
retw
out
dec
test
pop
addr16
cld
fs
out
jne
dec
xchg
ds
mov
orl
sahf
das
dec
jne
fists
inc
xor
data16
movl
and
daa
xchg
fcompl
xchg
mov
add
jno
pop
mov
push
mov
mull
pop
js
bound
cmpsl
rolb
pusha
push
xchg
movb
test
or
out
gs
leave
clc
les
pop
movsb
ljmp
cmpl
jmp
adc
movsb
pusha
pop
pop
jne
sub
stos
out
push
or
xchg
xlat
dec
cld
ret
add
pop
adc
cmp
fistpll
or
outsl
ret
aas
aaa
daa
pop
lock
and
cmpsl
ss
mov
jmp
add
adc
repz
adc
pusha
fistps
fnsave
mov
fwait
xor
jo
sub
imulb
outsb
sbbl
btrl
btl
inc
xchg
movsb
jmp
addr16
mov
fwait
xor
sub
cvtpi2ps
aaa
fcmovne
js
push
add
or
iret
sub
cld
aaa
push
xchg
xchg
or
out
push
lret
inc
dec
lret
mov
sbb
mov
wrmsr
lock
lret
and
fistps
xchg
cmp
fldenv
aaa
daa
stos
enter
pop
pop
jle
pop
jae
std
add
test
nop
adc
in
nop
loop
sti
icebp
xor
jecxz
dec
jb
out
sbb
dec
adc
pushf
sarl
sti
aad
lds
das
sub
xor
imul
jg
sub
and
inc
icebp
jmp
pop
sub
lods
push
out
lds
mov
xor
in
pushl
mov
call
stos
cltd
lods
addr16
in
cltd
lock
push
shrb
sub
xchg
push
inc
out
addl
sub
pop
pop
insb
inc
sub
inc
xchg
int
push
mov
adc
outsb
out
outsb
sub
xchg
pushf
mov
jo
test
push
jle
jle
cs
adc
xchg
mov
push
aaa
dec
pop
popf
push
adc
cli
add
shrl
loop
cmp
imul
movsl
inc
out
sarb
sti
in
lcall
and
out
push
add
outsb
ljmp
push
inc
mov
adc
jbe
dec
imul
mov
lock
cmc
lea
lahf
cli
push
add
insl
popa
add
pusha
lret
rorl
push
add
test
mov
jne
pcmpgtw
inc
fsubrl
fldl
adc
fcoml
lcall
pop
mov
pop
roll
int
sub
daa
dec
scas
mov
add
les
mov
mov
sub
test
mov
inc
aam
mov
cmp
outsb
xchg
data16
and
pop
cmpsb
fdivrp
pop
jmp
cmp
nop
cli
ds
cmpsl
add
mov
push
repz
fucomip
lea
add
in
jge
mov
jns,pn
mov
xchg
sahf
add
movsl
xchg
in
or
movsl
ud2
mov
sbb
or
jl
adcb
push
pop
mov
ret
pop
push
daa
push
ja
daa
stos
loope
pop
pop
test
orb
xchg
xchg
mov
das
mov
fwait
ja
dec
leave
mov
ja
cmp
shlb
push
int
jnp
incb
pusha
xchg
out
add
iret
test
push
jg
xor
out
fldcw
adc
xchg
comiss
daa
xor
xor
xchg
push
daa
iret
inc
lret
aaa
aaa
adc
in
ja
xchg
imul
iret
jb
movsl
xchg
ret
fimull
or
or
sbb
pop
mov
jnp
ffreep
sbb
movsl
clc
jg
mov
cmp
es
in
loopne
push
jno
outsl
scas
aaa
pop
sbb
outsb
push
dec
adc
cmc
imul
jge,pt
pop
adc
addl
test
jmp
sbb
stos
or
lock
repnz
mov
outsl
addr16
adc
dec
xchg
insl
sahf
insb
mov
xchg
mov
fsubrp
inc
inc
daa
jne
lahf
mov
insl
dec
fmul
and
or
mov
mov
lea
mov
std
dec
mov
mov
outsl
cmp
stos
mov
push
iret
stos
repz
push
shlb
jp
fldenv
test
pop
sub
out
inc
xchg
aas
pop
or
fwait
mov
sar
cmp
xchg
pop
sbb
jmp
daa
mov
dec
cmpb
in
ror
or
es
fwait
pop
dec
cmp
inc
inc
pop
outsb
outsb
dec
xlat
push
add
pop
inc
orb
pop
imul
fists
add
aaa
inc
jg
cmp
mov
gs
je
inc
jae
test
cmpsb
xchg
cmpsb
xchg
sub
rorl
xor
addr16
aaa
idivl
je
or
pop
out
iret
gs
push
add
add
pop
jns
insl
xlat
mov
xor
mov
shll
push
out
fists
or
push
movsb
addr16
dec
outsl
repnz
mov
push
push
mov
mov
sbb
js
jns
or
repz
in
inc
cmp
ds
mov
push
cld
pop
inc
push
ss
ds
inc
inc
jmp
inc
int3
mov
icebp
jg
pop
pop
jecxz
popf
mov
lds
leave
popf
or
cmpsb
xchg
pop
bound
jmp
mov
adc
cwtl
das
scas
xchg
les
mov
inc
push
xchg
loop
sbb
lock
pop
inc
out
inc
andl
aad
push
adc
cmc
ret
enter
pop
inc
push
cmp
test
jp
out
fwait
lds
fs
jl
jg
fdivrl
sbb
fcompl
sub
mov
pushf
leave
add
xchg
jg
call
push
xchg
cmp
mov
aaa
mov
imul
pop
inc
xchg
push
add
cs
cld
popa
scas
bound
xchg
test
push
inc
ds
pop
jb
divb
cmpsb
sbb
mov
jbe
pop
xchg
and
mov
data16
lret
jl
sub
or
std
xchg
imul
cltd
mov
xchg
int3
fwait
adc
mov
mov
and
scas
rclb
test
xchg
dec
sbb
xchg
push
jns
mov
and
xor
ljmp
popl
ss
out
icebp
push
adc
inc
addr16
adc
pop
addr16
and
mov
mov
bound
dec
clc
popf
and
adc
mov
int
mov
xlat
xchg
mov
xchg
ficompl
sbb
pop
pop
adc
out
daa
add
pop
rolb
pop
sub
dec
xorb
push
jge
push
sti
into
inc
addr16
mov
mov
xor
leave
cltd
sub
pop
mov
cmpsb
test
add
aam
pop
popa
jb
inc
or
das
bound
and
sbb
jle
jnp
ret
xchg
or
adc
and
adc
push
faddp
xchg
out
sbb
push
insb
add
psraw
add
pop
cmp
fcmovb
push
mov
sbb
sub
cmp
pop
imul
xor
and
pop
js
adc
sbb
xor
adc
mov
sbb
imul
xor
inc
lods
lea
mov
dec
ret
outsb
mov
sub
fwait
pop
cmpsl
sbb
mov
aaa
adc
and
cmp
repnz
sbb
pop
sub
push
xchg
std
mov
daa
js
or
imul
insb
add
sbb
add
dec
insl
xor
inc
push
push
mov
popa
xlat
das
pop
in
xchg
stc
jo
pop
negb
ja
lcall
addr16
pop
fadd
jnp
mov
test
lds
aaa
jle
adc
mov
fisttpll
cmpsb
cmp
call
in
add
pop
and
and
lods
mov
xchg
fadds
fisubs
daa
mov
pop
aam
test
cs
leave
jmp
adc
push
mov
dec
pop
cmp
prefetch
jbe
mov
xchg
dec
inc
mov
jbe
cltd
xchg
mov
push
sub
bound
mov
repnz
push
andb
mov
mov
faddp
push
mov
push
add
xor
adc
xchg
incb
mov
add
pop
push
xchg
push
sti
in
dec
inc
add
push
lahf
push
bswap
sbb
addl
test
inc
or
inc
sub
pop
adc
push
xor
inc
dec
sarb
mov
push
arpl
pop
push
mov
arpl
xchg
roll
pop
jle
out
cmp
adc
add
and
xchg
lock
xchg
jno
test
aas
fistps
outsl
xor
bound
jl
inc
fs
ret
fcom
push
out
adc
sbb
or
cmp
xchg
sub
loopne
fisttps
addr16
test
push
adc
push
jg
push
pop
stc
or
or
lock
insb
sbb
push
mov
mov
lea
sbb
inc
jl
push
push
mov
ljmp
pop
scas
pop
and
adc
xor
out
inc
ja
mov
loopne
add
movq
adc
xchg
sub
es
in
cwtl
xchg
lea
push
cmpsl
cmp
adc
outsw
lahf
lock
imul
dec
mov
dec
sub
xchg
adc
push
pop
or
sub
xchg
push
xchg
ljmp
fwait
out
mov
and
fwait
sub
test
inc
fcoms
sbb
jecxz
push
xchg
jb
out
add
xor
xor
ss
imul
pop
dec
ljmp
mov
xchg
push
sbb
mov
cwtl
cmc
dec
and
ds
pop
aad
lods
add
shr
mov
cmp
imul
add
xor
mov
pop
cltd
cld
push
or
mov
jle
jb
std
inc
fmull
ja
adc
adc
add
iret
cmp
sub
add
dec
pop
mov
pop
fs
xor
jno
pop
adc
aaa
fwait
dec
add
daa
aad
shr
mov
push
mov
xchg
pusha
xor
push
inc
adc
mov
adc
outsl
daa
aas
mov
push
bts
push
cmp
mov
shlb
outsb
adc
cmc
cmp
sbb
push
jnp
sub
push
xor
sbb
in
hlt
mov
pop
div
mov
push
push
movsb
inc
aad
jg
sbb
mov
gs
adc
inc
mov
and
add
xor
cmpsb
mov
mov
xchg
out
inc
jno
or
jnp
out
inc
lahf
lret
das
test
dec
cmp
add
add
mov
out
xchg
out
inc
dec
int
aaa
xchg
add
mov
test
pop
out
push
jne
sub
testb
sbb
cld
sbb
xchg
in
dec
xor
out
add
push
loopne
sub
lea
std
mov
mov
inc
jno
mov
xor
mov
imul
leave
sbb
sbb
dec
sbb
or
xor
das
ds
das
out
out
xchg
ret
sbb
addl
orl
mov
push
and
xor
popf
fisttps
pop
iret
std
pop
push
adc
pop
or
sub
pop
push
iret
pop
imul
aaa
aam
push
sbb
xchg
mov
into
int
jno
cmp
fwait
xchg
xchg
iret
sbb
xor
shr
add
push
and
int
fisttps
push
loop
sbb
dec
or
aad
jle
pop
or
fisttps
insl
iret
popf
push
push
adc
testb
sahf
cmpl
mov
xor
adc
ret
xor
mov
movsl
cmpsb
jno
out
pop
cmpsl
pushf
sahf
mov
cli
jmp
loop
jnp
jge
xchg
xchg
cmp
out
adc
xchg
cmp
or
inc
pop
dec
sub
mov
lea
cld
ficoml
xchg
xchg
mov
out
mov
xor
add
cmp
cmp
xlat
pop
dec
push
rcll
dec
jmp
lahf
fsubrl
jge
mov
lahf
add
add
lods
fcmovbe
push
insb
divb
daa
les
out
adc
pusha
adcl
add
sbb
out
xor
les
pop
daa
jb
ds
rcr
push
jmp
shrb
add
out
cmp
clc
cltd
ret
gs
push
fstl
adc
inc
add
inc
lea
sbb
int
fisttps
lods
ja
sbb
sbb
add
out
inc
aad
mov
xor
jne
sub
cmp
pusha
mov
jae
imul
add
xlat
lds
pop
mov
arpl
adc
frstor
mulb
ds
jecxz
cmpsl
sbb
out
addr16
bound
xor
pop
and
leave
add
iret
mov
sbb
dec
cwtl
push
popa
add
ss
pushf
movsb
insb
pop
out
arpl
cmpsl
in
or
mov
icebp
xchg
sbb
std
cmpsb
lds
adcl
jp
subl
divl
or
jne
xlat
call
rolb
or
sub
sahf
xor
and
cmpsl
add
xorl
sbb
pop
shl
gs
sub
mov
cmpsl
addr16
pop
sbb
pop
xor
adc
inc
sub
fldt
or
sub
mov
inc
dec
sub
add
xchg
idivb
int3
cmp
les
xchg
jbe
aaa
ds
jmp
fs
cmc
xchg
and
xchg
xchg
xchg
push
mov
mov
rolb
fildl
xlat
out
inc
push
lret
ja
pop
adc
imul
ret
inc
inc
aaa
imul
in
int3
pop
pop
imul
data16
pop
aaa
leave
cmp
xchg
and
test
test
je
add
push
mov
or
mov
popf
hlt
xchg
jl
loope
mov
cmp
icebp
inc
ja
add
mov
arpl
dec
or
add
fnstsw
sub
fs
jmp
in
add
mov
mov
aaa
pop
pop
inc
imul
clc
sub
adc
dec
jae
push
inc
imul
push
mov
and
pop
jnp
push
and
push
aas
xchg
loope
xchg
fwait
or
or
roll
cmp
imulb
mov
add
lods
orl
sub
aas
jb
cmp
dec
mov
pop
inc
push
adc
sub
fistpll
inc
xor
adc
and
and
pop
cltd
mov
push
add
add
das
mov
mov
xor
or
mov
test
aas
cmp
mov
mov
dec
jg
sub
xchg
inc
lds
les
jge
mov
lret
pushf
lods
imul
into
out
aas
inc
xor
pop
pop
test
push
inc
iret
xchg
ret
sub
inc
push
pop
xchg
push
iret
xor
sbb
inc
addr16
adc
divb
sbb
jnp
sub
ja
shrb
jg
sub
loopne
dec
adc
cmpsb
inc
loopne
dec
mov
iret
fbstp
jle
pop
push
sub
add
les
int3
xor
adc
add
out
dec
adc
xor
add
cmp
pop
and
xor
adc
pop
and
jo
or
or
sub
xlat
push
das
adc
test
jae
mov
or
adc
ret
sahf
rorl
ret
jno
rcrl
sti
insl
leave
mov
mov
mov
and
test
push
fadds
jae
push
loopne
jne
and
cmp
mov
fcoms
pushf
test
iret
mov
mov
adc
jmp
xchg
das
notl
pop
out
xchg
movsl
decl
pop
lret
out
aad
xchg
jnp
inc
fs
sti
lock
lret
aas
cmp
and
mov
aas
fimuls
dec
lock
and
pop
in
mull
push
jnp
pop
cmp
dec
mov
sub
sti
mov
dec
ret
ja
lahf
inc
lahf
cmpsb
ja
sub
adc
cli
mov
ret
call
or
mov
inc
jl
test
and
sbb
mov
dec
test
pop
inc
aas
aad
adc
xchg
sub
test
jnp
push
stc
dec
in
test
push
dec
sahf
push
subb
fists
shll
pushw
cmc
jge
jg
and
adc
and
sbb
push
cmp
mov
cmp
and
sub
jb
lock
inc
enter
sub
daa
jmp
mov
pop
add
dec
cld
xor
and
imul
roll
cltd
lds
cmp
dec
int
test
push
test
cmp
les
leave
push
out
push
in
mov
daa
shrb
and
mov
mov
push
aaa
clc
mov
adc
shlb
xchg
push
push
in
adc
inc
gs
mull
and
jae
xchg
pop
ret
push
out
adc
inc
addr16
mull
mov
aaa
dec
jne
shlb
adc
cmpsb
push
in
adc
inc
gs
mull
and
jae
xchg
pop
into
push
out
adc
inc
addr16
mull
sub
aaa
jne
adc
std
push
mov
mull
and
jae
xchg
sub
inc
out
mull
and
movntps
pop
jne
cmp
sti
add
xchg
and
in
rorb
mov
gs
add
and
mov
cmpsb
push
ljmp
ss
out
rorb
inc
addr16
add
daa
aaa
add
cmp
shrb
int3
sti
add
xchg
lcall
pop
fimull
and
mov
cmpsb
push
mov
add
pop
out
rorb
cmp
daa
aaa
dec
add
cmp
shrb
bound
rorb
fisttpl
and
mov
cmpsb
push
xchg
add
pop
out
rorb
es
addr16
add
daa
aaa
ret
jne
aam
sbb
out
rcrb
push
fwait
in
push
movsl
add
pop
gs
mov
cmpsb
aaa
loop
data16
es
mov
add
pop
addr16
sahf
and
arpl
sbb
xchg
push
xchg
fwait
in
push
movsl
add
pop
gs
inc
out
add
cmpsb
aaa
adc
es
fistps
loopne
loopne
xlat
cld
mov
mov
insb
mov
icebp
sarb
and
inc
or
ret
mov
inc
or
rorb
inc
or
or
ja
or
call
and
and
loope
sub
mov
and
and
and
and
and
and
and
and
and
out
data16
push
ret
push
mov
push
dec
push
inc
push
or
es
mov
andb
es
or
add
lahf
sbbl
lret
lahf
mov
je
in
aam
fisubs
in
movsl
cs
stos
in
ljmp
in
movsb
and
pusha
in
movsl
lods
mov
or
or
or
or
or
sbb
or
and
outsb
adc
addr16
add
sub
mov
push
sub
imul
flds
shll
push
std
fnstenv
jmp
repz
push
push
mov
pop
test
mov
jmp
pop
sub
push
iret
add
in
jmp
dec
aaa
sub
and
stos
je
bound
les
or
sbb
fisttpll
or
in
call
outsb
mov
inc
fcoml
cmp
xchg
dec
jmp
mov
inc
xchg
jne
test
daa
add
or
aas
lods
jmp
lea
roll
xor
dec
xchg
dec
mov
jno
dec
inc
test
mov
pop
push
sbb
std
inc
lock
pop
lods
pop
outsl
das
cld
add
and
dec
mov
int
push
or
lea
mov
jbe
push
repnz
push
dec
fildll
xchg
sahf
push
outsb
jne
adc
ljmp
stos
out
jp
aaa
inc
jbe
mov
or
pop
out
xor
lea
mov
cmp
in
mov
jge
and
sbb
loopne
cmp
clc
arpl
ja
test
test
add
gs
jno
push
shufps
enter
jmp
adc
cmp
push
pushf
out
movsb
and
in
movsl
clc
lea
dec
lods
cwtl
cmpsl
and
daa
ret
xchg
in
add
mov
dec
loopne
adc
adc
mov
cmp
in
adc
dec
loopne
adc
adc
mov
cmp
mov
dec
loopne
adc
adc
mov
cmp
std
push
in
cmp
adc
adc
mov
cmp
std
adc
mov
loopne
test
std
adc
mov
cmp
std
adc
mov
cmp
mov
cmp
std
adc
mov
cmp
mov
dec
loopne
adc
adc
mov
cmp
pop
aas
dec
daa
aaa
pop
movsl
mov
pop
jle
jne
push
push
inc
and
lods
frstpm(287
movsb
jp
xchg
mov
fidivl
push
aaa
adc
cltd
out
xorl
xchg
sbb
pop
stos
loopne
out
movsb
mov
mov
xlat
xchg
mov
push
lds
mov
push
inc
scas
movsb
fwait
rcll
mov
and
mov
cmpsl
dec
arpl
jp
mov
out
leave
xor
daa
xchg
out
pop
dec
vmovaps
inc
push
xlat
mov
and
cmp
cwtl
and
add
test
ds
push
loopne
mov
shrb
xlat
adc
ss
shrb
mov
imul
fdivr
sub
pop
adc
push
fsubrp
not
push
decl
sar
push
out
pop
out
sub
out
xchg
rep
in
sub
out
dec
stos
mov
sarl
xrelease
iret
cmp
es
push
adc
rolb
stc
pop
outsb
adc
jl
orl
adc
xor
mov
test
or
push
inc
ds
test
cmp
movsb
lea
fnstenv
cmp
cmpsl
fwait
orl
pop
loopne
inc
sti
and
dec
push
jns
xchg
inc
test
call
xchg
je
adc
pop
and
fwait
push
repz
pusha
add
sbb
adc
pushl
out
aad
mov
pop
push
mov
addr16
xchg
and
sahf
das
testl
mov
push
jg
cmp
out
xchg
dec
clc
orl
cmp
imul
negl
push
adc
cld
and
aam
cld
fcmovne
lods
and
push
xchg
sbb
jno
loopne
add
pop
xchg
out
add
jmp
pop
in
jnp
lahf
jns
iret
cmpsb
pop
push
movsl
addr16
cmp
cmpb
inc
popl
push
lcall
jo
or
mov
and
and
push
push
and
push
and
or
dec
or
xor
jnp
cli
sub
xchg
cmp
lcall
mov
mov
push
xor
cmpl
stos
sub
pop
push
push
test
movsb
xchg
scas
mov
imul
xor
enter
xor
push
mov
cli
xchg
and
cmpsl
mov
repz
aaa
das
dec
cmp
xchg
or
lds
and
cmp
xchg
pop
repnz
fscale
les
aas
and
dec
pop
mov
push
inc
and
stos
movsl
out
cli
mov
out
push
enter
and
mov
pop
aaa
cmp
enter
push
inc
test
adc
inc
test
inc
mov
sub
ja
push
xchg
cmp
sti
add
sub
inc
xchg
inc
mov
in
les
ret
sti
test
xchg
inc
mov
adc
lds
push
test
push
inc
add
add
pop
scas
popl
aaa
push
adc
and
push
and
or
sub
in
inc
inc
test
xchg
inc
adc
lds
xchg
fwait
test
push
inc
add
pop
add
pop
out
popl
aaa
sahf
adc
push
cmpsb
fwait
xchg
push
inc
add
fdivr
and
ficompl
test
inc
push
sbb
pop
mov
inc
aaa
outsb
adc
push
dec
fwait
xchg
push
inc
add
dec
movl
add
inc
aaa
ds
lcall
cmp
adc
sub
add
adc
inc
test
inc
adc
femms
inc
xchg
xchg
push
rorl
sbb
inc
mov
movsb
sub
loopne
cwtl
jge
fwait
aaa
bound
mov
dec
lds
test
adc
fwait
add
into
pop
xchg
add
aaa
ficoml
inc
push
push
repnz
cli
fcmovnu
test
aaa
cmp
xchg
mov
test
and
xor
jae
xchg
pop
filds
xchg
adc
inc
push
jl
jp
push
sti
xchg
fsubrp
insb
inc
mov
pop
les
fcomps
aaa
jne
xchg
jecxz
add
mov
test
adc
inc
add
and
out
jg
lea
sub
lea
inc
lea
adc
or
ja
or
ja
or
ja
or
fisttpll
mov
xor
imul
bound
push
jecxz
sub
arpl
imul
call
add
push
or
es
mov
andb
es
or
add
leave
shll
andl
or
add
lret
mov
andb
es
or
add
lret
lret
xchg
std
sub
xchg
stc
aam
or
push
dec
and
in
mov
or
or
or
or
or
or
or
or
or
or
add
push
in
stos
cmp
push
loop
mov
cmpsb
sub
adc
in
cmp
out
jne
sahf
jmp
test
mov
ret
mov
add
fcmovbe
pop
cmpsb
cmpsl
mov
addr16
lahf
cmp
pop
dec
ret
testl
dec
push
or
cld
cmp
stos
push
sub
xor
or
sahf
rcr
aad
and
dec
std
inc
mov
xlat
subl
cltd
xchg
adc
push
cmp
adc
adc
iret
xor
daa
xor
movb
jne
cmp
add
mov
pop
nop
and
fdivl
cmp
jg
insb
rcrl
xchg
xchg
nop
inc
sahf
lahf
inc
mov
sub
call
pop
and
jecxz
jp
xor
sbb
loopne
pop
das
arpl
cli
jmp
push
inc
jl
cmpb
jo
add
xor
cmpsl
stos
pop
outsl
or
inc
dec
aas
xor
sahf
in
aas
and
xchg
dec
mov
xor
mov
jo
add
test
xchg
dec
xchg
call
and
lods
push
push
das
dec
xchg
mov
push
test
aaa
jnp
push
outsb
test
add
jae
push
cmp
fwait
mov
aam
and
lret
sarl
fs
mov
paddb
inc
fs
adc
mov
xor
scas
in
push
out
imul
sub
loop
sti
in
test
inc
and
pop
sbbb
adc
dec
loopne
adc
adc
mov
cmp
mov
dec
loopne
adc
adc
mov
cmp
std
push
clc
cmp
adc
adc
mov
cmp
std
adc
mov
in
mov
int3
mov
cmp
std
adc
mov
cmp
mov
cmp
std
adc
mov
cmp
mov
dec
loopne
adc
adc
mov
cmp
std
push
sub
test
loopne
adc
adc
mov
and
adc
mov
fnstcw
xchg
add
repnz
cmpsb
clc
and
mov
jne
jecxz
jnp
pop
insb
repnz
lret
ret
lods
ret
add
addr16
jmp
inc
in
mov
mov
movntps
pop
jno
sub
xor
sbb
xchg
adcb
mov
sbb
or
inc
jnp
and
pop
pop
mov
lock
pop
mov
movsl
and
idivl
out
cmpsl
addr16
aam
sbb
xor
test
mov
jl
xchg
out
mov
fcoml
insb
dec
fs
mov
out
out
mov
mov
nopl
and
xor
mov
mov
pushf
aad
filds
lods
ficoml
in
add
test
out
lcall
in
and
xor
xchg
nop
or
adc
push
fcoml
imul
inc
push
aas
stc
fwait
ss
push
push
jne
clc
sbb
mov
dec
pusha
or
popl
in
add
iret
adcb
xchg
pop
mov
inc
addr16
sbb
inc
xor
cmpsb
pop
mov
arpl
add
cmp
lock
lods
pop
fldl
jl
out
add
pop
pop
imul
mov
ss
cmpsb
idivb
adc
imul
or
ss
and
push
stos
ds
mull
rcrb
push
mov
and
addr16
adc
das
out
movsl
jae
cmp
repz
inc
dec
cmp
cmpsb
sub
incl
push
push
iret
sbb
push
pop
outsb
aaa
inc
lock
adc
dec
xor
add
mov
bound
dec
scas
aad
push
xchg
stos
dec
rolb
and
jecxz
jnp
mov
ja
sbb
and
emms
pop
xor
jle
stos
push
rolb
test
lea
push
enter
sbb
fwait
sub
out
xchg
enter
adc
jmp
xor
stos
xchg
xlat
add
sahf
push
adc
cmpsl
jge
add
fists
pop
ja
in
stos
pop
in
inc
aad
push
xchg
inc
inc
sbb
and
imul
add
mov
xchg
push
cmp
jg
jno
aam
sbb
stos
inc
lcall
inc
push
mov
mov
mov
outsl
idivl
pop
lret
ja
lahf
push
pop
daa
nop
das
js
adc
stos
add
outsl
dec
arpl
jo
pop
or
scas
jne
jne
mov
push
popf
jns
push
mov
dec
cmpsl
repz
cs
lods
jo
fcmovnb
popa
fiaddl
outsb
jo
mov
pushf
rcll
or
jae
lcall
pop
jecxz
aaa
xchg
std
mov
les
iret
pushl
jb
repz
shll
pop
xchg
mov
xchg
aaa
clc
testl
lret
cmpsl
movsl
xchg
cmp
dec
and
subl
jmp
xchg
sbb
ja
adc
popf
cmpsl
dec
in
dec
dec
daa
popf
push
pop
fsts
xchg
pop
push
and
scas
push
cmp
mov
adc
xchg
or
pop
sbb
or
mov
cmc
mov
int3
ret
std
and
test
cmp
mov
add
mov
loop
scas
movsb
hlt
cmp
stos
sahf
pop
mov
add
mov
cld
cmp
sub
push
movsb
popf
ja
movsl
pop
push
jmp
fs
mov
std
cld
xchg
cmc
loope
stos
inc
mov
or
loop
and
cmc
jo
or
js
lret
fstpt
subl
arpl
cmpsb
inc
sbb
cli
push
pop
bound
aad
inc
test
or
inc
pop
lods
rcrb
mov
and
das
mov
sub
mov
fsubs
jmp
xchg
loope
addr16
push
push
cmpsl
sub
pop
adc
jg
pop
inc
sbb
scas
out
loopne
xor
mov
jb
push
inc
adcl
ss
cld
sbb
ja
insb
and
xchg
dec
and
push
jne
xlat
scas
sarl
mov
and
inc
int
sahf
jbe
out
mov
adc
call
push
loope
mov
js
aaa
push
add
xchg
test
pop
push
sbb
sbb
lcall
sub
rorb
or
lods
inc
xchg
aam
adc
jne
mov
push
xchg
cmpsb
xchg
jae
rcr
in
sub
daa
xchg
mov
jmp
loope
push
mov
jmp
jmp
or
pop
in
loop
jmp
sub
or
cmp
push
addr16
cmp
and
push
push
push
enter
mov
outsb
sub
imul
rclb
data16
mov
loopne
dec
scas
ja
push
xchg
pop
lods
inc
mov
pop
enter
dec
loopne
pop
std
dec
notb
push
cmpsl
movsl
sbb
fwait
test
movsb
mov
ljmp
in
cmp
xor
mov
push
cmp
jge
lock
jae
add
add
out
popa
sub
add
jle
mov
popa
cltd
outsl
lret
adc
xchg
js
ja
sbb
popa
xchg
gs
xchg
les
iret
enter
pop
mov
iret
inc
push
shlb
out
shlb
dec
dec
mov
repz
test
mov
loope
add
sub
pop
pop
inc
add
iret
ja
popf
or
testb
xchg
cmpsb
es
mov
icebp
fst
xchg
gs
insb
mov
push
imul
mov
push
ucomiss
and
mov
cltd
jge
adc
cli
movsl
adc
ficoms
xchg
xchg
mov
cmp
mov
push
cmpsl
mov
into
jbe
shr
mov
and
pop
push
icebp
mov
mov
daa
aad
pop
arpl
scas
cmp
jle
sbb
inc
out
xor
scas
ja
dec
mov
mov
jle
popa
cmp
dec
ret
sub
in
pop
jge
sub
fisubrl
push
out
sbb
icebp
mov
jge
pop
cmpsb
mov
sub
mov
jnp
add
add
sub
push
insb
mov
adc
jae
push
test
stos
xchg
pop
shr
and
and
je
push
fsub
dec
idivl
sbb
ljmp
pop
fs
dec
or
mov
pop
mov
and
pusha
jo
popa
gs
adc
add
lock
cld
out
test
les
dec
add
lcall
mov
test
and
inc
add
xchg
iret
push
flds
cwtl
iret
call
out
fnstsw
jle,pn
jnp
push
xchg
test
add
out
fcoml
imul
dec
and
scas
add
sti
sbb
popf
sahf
aas
adc
dec
adc
shlb
add
or
add
es
aaa
clc
data16
mov
shll
pop
mov
int
stos
jle
xchg
xchg
std
popf
not
cwtl
inc
cmp
sahf
addr16
mov
bound
inc
mov
push
popa
addr16
push
and
ja
xchg
push
jo
cmpsb
rorl
pop
push
xchg
lods
fwait
xchg
lret
mov
xchg
das
std
adcl
jae
cmp
aaa
fdivrs
addr16
lds
xchg
add
test
scas
fwait
pop
fiadds
sbb
mov
sbb
adc
orl
out
adc
pop
cmp
push
iret
pop
out
mov
dec
adc
pop
cmp
aaa
inc
push
xor
jp
repz
stos
wbinvd
pop
jnp
outsl
test
mov
repz
insl
cld
sub
orl
sub
jno
lods
sbb
adc
xchg
repz
jae
cltd
aad
insb
jl
pusha
jg
orl
mov
push
and
pop
iret
jle
sbb
inc
mov
jmp
lcall
loop
adc
mov
xchg
sbb
jp
mov
xchg
jg
jle
sub
mov
push
les
push
xchg
mov
and
cmpsb
test
addr16
adc
lds
mov
mov
mov
pop
lret
push
adc
aaa
daa
xchg
jne
mov
inc
xchg
pop
jmp
cmp
mov
int
jae
imul
popf
sub
inc
xchg
mov
jp
int
outsl
stos
and
cmp
cmpsl
popf
pusha
fisubrs
test
xor
das
lret
insl
pop
cwtl
int
xchg
jae
dec
mov
push
jp
and
ja
jg
mov
mov
mov
fwait
inc
and
daa
cmp
push
iret
sub
loopne
or
xor
popa
loope
or
mov
dec
pop
lret
mov
addr16
xchg
pop
push
xchg
ja
ja
add
dec
lods
ja
movq
daa
dec
push
ror
adc
test
fstl
lahf
inc
repnz
xchg
jo
xchg
xor
and
push
push
leave
fisubs
bound
cmp
mov
cmc
adc
add
loopne
ficoms
ja
add
imul
sbb
test
xor
test
test
cli
sub
repz
mov
jbe
add
shll
sar
add
stos
ja
divl
insb
fstps
or
inc
cmp
jecxz
and
ljmp
in
repz
pop
pinsrw
mov
and
mov
xor
mov
mov
scas
lahf
test
push
xor
jnp
push
addl
pop
push
cli
sbb
stos
pop
pushf
cmp
ret
pusha
pop
inc
mov
jecxz
cmp
pop
shll
sti
mov
adcl
mov
into
mov
sahf
and
leave
dec
adc
cmpsb
aad
or
or
lret
lock
and
pop
jecxz
inc
pop
outsb
sti
lock
ret
adc
xchg
push
jl
lods
push
inc
mov
xlat
sbb
cmpsb
iret
jnp
xchg
sub
addr16
cmp
cmp
mov
mov
addr16
out
cmp
sbb
jmp
sbb
xlat
inc
jmp
test
inc
adc
pop
push
test
dec
push
adc
lea
je
pop
dec
pop
inc
or
outsl
sub
dec
icebp
inc
test
lahf
pop
popf
loopne
stos
xlat
pop
out
inc
inc
push
ret
incb
adc
or
lret
xchg
mov
aam
push
or
sub
scas
fdivrl
add
push
imul
push
inc
push
unpckhps
inc
test
hlt
in
lcall
aas
mov
and
cmp
pop
iret
movsb
xor
mov
push
mov
leave
xlat
or
pop
pop
pop
sub
das
inc
cmp
or
ja
mov
cmpsl
xchg
jmp
add
cmc
push
pop
fnstenv
or
and
sti
pop
inc
and
add
stos
push
out
mov
out
jnp
lods
xor
mov
push
das
and
ficoml
or
das
sub
mov
lea
popa
adc
mov
cmpl
cmp
push
pop
mov
mov
inc
inc
push
pop
adc
in
pop
xor
jnp
jmp
and
in
pushf
lea
cmp
pop
sahf
fcoml
mov
rcrb
or
cld
sbb
in
lahf
iret
jg
das
dec
stc
jge
bound
leave
mov
test
leave
adc
das
xchg
pop
sti
dec
mov
xchg
mov
lods
cmpsb
repnz
mov
aaa
fs
incb
inc
cmp
lea
mov
loopne
add
dec
in
sbb
xchg
xchg
leave
and
sbb
jp
icebp
mov
inc
and
scas
leave
ffreep
and
xor
mov
push
aaa
notb
mov
movsb
mov
mov
sub
int3
or
lds
shlb
mov
inc
push
insb
out
add
adc
test
test
rorb
incl
xor
aaa
add
movsb
inc
imul
adc
mov
cmp
lods
add
imul
ret
pop
addr16
and
cwtl
xor
neg
jmp
dec
paddw
sub
cli
fistl
mov
rcpps
cmpsb
lahf
adc
cmp
adc
scas
and
push
das
adc
push
add
loope
in
adc
int3
cld
push
aaa
xor
dec
mov
iret
sbb
adc
sbb
cmpl
mov
add
push
addr16
cwtl
jge
jecxz
adc
push
addl
push
leave
mov
ss
nop
jmp
aam
add
shlb
mov
xor
xor
push
lret
andb
sub
pop
dec
pop
popf
int
in
push
pop
push
test
push
movsl
inc
sbb
notb
aaa
imul
outsl
aam
rcr
cmova
rcrb
fisttps
inc
push
xor
fimuls
shll
pop
ficoms
xor
push
xor
sub
add
xor
add
mov
adc
mov
inc
pop
pop
int3
push
inc
int
pop
ss
mov
push
push
gs
popa
aaa
addr16
inc
adc
and
pop
pop
stc
jno
enter
jp
subl
imul
xor
adc
inc
fiadds
imul
enter
aaa
test
aaa
bound
cmpsb
dec
imul
lret
andl
imul
xchg
imul
jp
or
imul
xorl
pop
lcall
ss
cmp
mov
adc
adc
add
cmpsb
and
orl
mov
pop
push
xor
test
sub
std
add
dec
sub
mov
add
pop
mov
or
daa
loop
in
aaa
jne
inc
and
add
and
and
lahf
pop
mov
sahf
jmp
gs
bound
and
movl
inc
inc
or
lea
das
mov
comiss
add
das
mov
cltd
inc
add
fisttps
fwait
fwait
xchg
loop
das
adc
push
repz
lea
dec
cmp
mov
mov
aaa
addl
sub
mov
shll
arpl
xlat
pop
dec
loopne
jle
out
popf
add
lret
dec
cmp
hlt
cmp
fidivs
inc
xchg
jmp
lcall
xchg
sbb
fistpll
add
out
add
mov
xor
sub
daa
loope
pop
das
adc
cmpsl
inc
sub
call
and
movsl
sub
inc
loopne
dec
lcall
push
push
in
sbbl
xorl
ret
ja
leave
in
jl
bswap
pop
pop
daa
dec
adc
clc
mov
mov
mov
lods
sahf
pop
sub
push
pop
das
outsb
sbb
cmp
aaa
repz
fcomi
leave
fildll
inc
adc
xor
jmp
cmp
cmpsb
repz
and
pop
aaa
rorb
imul
adc
xchg
das
leave
cmp
ja
cmp
and
xchg
xchg
mov
jns
jp
adc
jecxz
mov
add
push
test
shlb
rolb
fbld
dec
test
ds
nop
stc
inc
mov
inc
mov
int
daa
addr16
add
lds
jmp
inc
cmc
fisttpll
xor
add
test
jno
lret
push
jno
fsubs
jp
adc
inc
inc
rorb
xchg
push
xchg
sub
insb
ss
call
xorb
lods
test
out
mov
mov
sub
mov
xor
mov
add
testl
enter
test
push
call
imul
pop
stos
pushf
fldcw
pop
lret
jmp
pop
loop
add
lods
jmp
arpl
int
inc
mov
mov
and
sahf
mov
mov
bswap
arpl
xchg
xchg
sbb
xor
pop
test
adc
dec
cs
dec
clc
mov
in
adc
jge
js
pop
cli
push
sbb
mov
jnp,pt
repz
in
orl
enter
addl
xchg
iret
pop
arpl
out
dec
aaa
xchg
stos
into
dec
out
gs
call
ds
ja
call
mov
popf
out
mull
cmpsb
sbb
cmpsl
push
add
mov
and
fsubrl
push
cmpsb
fmul
fsubrl
mov
and
mov
dec
bound
fs
test
xchg
iret
push
add
enter
mov
std
lahf
dec
xchg
and
add
aaa
jmp
lret
cmp
ja
iret
pop
inc
jns
add
mov
into
pop
adcl
bound
mov
add
movsl
xchg
ljmp
sub
push
es
mov
jg
pop
popa
push
rorb
test
mov
popa
xchg
pop
sub
dec
mov
push
aaa
mov
pop
das
mov
inc
jg
lods
sub
ret
mov
adc
cltd
jl
ja
shll
or
mov
nop
or
push
adc
jg
jmp
dec
lods
popf
loop
lods
adc
dec
fistps
ret
sahf
cmp
and
popa
push
iret
jno
lret
mov
int3
push
xchg
aad
shll
cmp
out
dec
outsl
in
gs
and
arpl
cmpb
repz
out
pop
aaa
mov
cmp
cli
aad
inc
adc
outsb
sbb
dec
push
mov
mov
mov
lea
enter
mov
push
add
pop
in
xor
push
enter
or
jae
out
ja
sub
sbb
sub
sbb
les
add
int
push
mov
js
or
mov
xchg
jle
push
pop
ljmp
inc
bound
xchg
push
movsb
arpl
cmpsl
shll
test
mov
daa
or
outsb
ljmp
sbb
daa
stos
mov
paddusw
test
insl
arpl
push
and
xor
push
push
sbb
dec
daa
push
jae
imul
cmp
rclb
leave
adcb
test
testl
sbb
cmp
jnp
inc
iret
mov
test
dec
sbb
fs
inc
daa
mov
dec
pop
cmpsl
push
fs
push
jb
cmpsb
push
gs
and
dec
cmpsb
xchg
aaa
inc
movsb
and
xor
cltd
dec
jmp
fsubrl
popl
xor
cmp
decb
cmpsl
pop
sahf
dec
xchg
lock
xchg
mov
cmpsl
aaa
cmpsb
fiaddl
pop
setle
pushf
push
mov
addr16
pop
and
out
inc
cmp
jb
outsb
cmpsl
cmp
lock
scas
mov
das
das
mov
jae
les
dec
lcall
dec
in
cli
inc
jg
ret
cmp
xchg
cmovbe
adc
push
adc
shr
lret
mov
mov
inc
pusha
sbb
sub
sti
push
xchg
stos
addr16
fwait
repz
dec
aas
pop
addr16
adc
pusha
pop
daa
iret
xorps
sahf
and
repz
mov
out
outsb
subb
xchg
idivl
cmc
cld
xor
lret
fwait
cmp
rorl
das
mov
aam
sbb
notl
lret
int
stos
rorb
pop
sub
scas
mov
mov
fsts
mov
xor
or
jo
and
mov
mov
aas
in
inc
jmp
enter
add
aam
imul
bound
adc
push
std
xor
xor
add
inc
sbb
loopne
scas
pop
pop
adc
xchg
imul
and
enter
xchg
cli
xor
jae
test
pop
iret
fwait
mov
lahf
jp
and
cmpsb
dec
mov
and
add
pop
inc
jmp
xchg
mov
scas
lea
push
test
mov
repnz
test
push
jle
or
jle
or
bound
fisubl
pop
lods
pop
xor
iret
repz
lahf
push
dec
jcxz
lcall
leave
or
xorl
aaa
cmp
push
cmpsl
lcall
rcrl
sbb
lahf
cs
dec
js
repz
lcall
lcall
outsl
sysenter
pop
add
fsub
inc
lcall
dec
in
pop
pop
push
mov
push
in
imul
cmc
push
call
notl
add
lds
gs
mov
test
fs
les
push
adc
jecxz
fwait
xchg
xor
jmp
sub
das
inc
add
push
xchg
xchg
mov
int3
inc
ror
mov
pop
ljmp
ret
mov
aaa
mov
iret
sahf
mov
push
arpl
mov
popa
nop
fadd
ja
outsl
neg
push
and
scas
xchg
mov
cmp
daa
or
sbb
movsb
out
outsl
sub
cmpsl
and
fstpt
fsts
aam
icebp
xchg
jbe
mov
cmpsb
cmpsb
gs
lock
sbb
inc
cs
addr16
lahf
cmp
inc
mov
into
cmpsb
dec
ret
xchg
and
lods
push
pop
pop
iret
dec
push
cmp
shr
add
dec
andl
popf
into
stos
aaa
pop
out
inc
stos
mull
sub
cmp
mov
mov
jae
das
shrb
lret
outsl
cmp
cmp
ja
jno
scas
xchg
daa
mov
xlat
and
adcl
jo
dec
mov
das
loop
das
and
cmp
fmuls
jg
scas
mov
jns
lods
pop
jge
pop
addr16
inc
cli
xchg
cmpsl
xor
xor
dec
mov
lods
mov
mov
cmp
popf
addr16
xchg
jg
pop
insl
lods
cwtl
inc
ja
cwtl
stos
sub
jg
pop
mov
mov
xor
adc
mov
adc
pop
and
push
xorl
and
das
out
and
fbld
and
dec
adc
sbb
pop
addl
xchg
cmp
or
mov
jg
pop
cmp
lret
arpl
cmc
sub
decb
iret
and
mov
jp
stos
pop
mul
jb
and
test
jmp
xchg
and
jle
fcmovnbe
jle
or
xchg
mov
scas
xor
ret
pop
dec
ret
mov
push
aas
into
jne
pusha
inc
push
mov
push
push
cltd
push
or
popa
nop
mov
lods
push
push
xchg
movsb
push
mov
out
test
xor
adc
lret
and
pop
psrlw
notl
sub
int
adc
das
mov
aad
mov
jo
aam
mov
and
and
mov
fst
xchg
xchg
out
sbb
popa
loopne
movsb
test
ja
lods
and
in
cld
stc
mov
or
jne
stos
addr16
push
test
stc
andl
and
iret
add
xor
xorb
aaa
sbb
mov
dec
aaa
shll
dec
sbb
addl
ret
add
cmp
setae
cmpsl
dec
data16
xchg
ss
sbb
sar
and
add
xor
jmp
jno
inc
out
std
outsb
inc
adc
fnstsw
push
into
js
insl
sbb
push
imul
jg
xchg
lock
aaa
sub
inc
and
or
rorl
sbb
movsb
gs
cld
loopne
ss
fcompl
and
cmp
daa
or
loope
gs
cli
gs
jmp
movlps
pop
aas
pop
xchg
inc
sbb
or
jle
sbb
dec
addb
xlat
dec
xchg
push
sbb
xor
inc
call
jecxz
test
pop
aas
fwait
test
inc
imul
sbb
or
ret
add
scas
xchg
or
add
inc
rcr
fs
test
push
arpl
cmpsl
das
adc
xor
mov
in
imul
xor
fwait
xor
and
mov
and
sti
int3
and
andl
outsl
pop
jnp
xchg
adc
adc
andl
cmp
sbb
jae
inc
jg
push
mov
adc
test
add
add
sbb
dec
imul
xchg
data16
jno
cmp
inc
aaa
or
pop
add
int
jb
les
push
in
fcoms
and
and
jns
mov
ja
pop
pop
ds
in
xor
scas
xchg
inc
test
push
inc
dec
push
jg
xchg
mov
xlat
pop
imull
pop
adc
loopne
dec
mov
int3
not
xchg
enter
or
pop
jnp
cmc
sbb
insl
pop
das
push
movsb
mov
repz
je
cmp
add
push
test
push
iret
xchg
xchg
daa
stos
loope
xchg
xchg
les
jno
popa
mov
pushl
mov
int3
rolb
iret
mov
decl
sarl
inc
out
add
mov
pop
dec
subl
mov
test
leave
xor
add
jg
and
das
dec
lods
cmp
jmp
loope
mov
mov
dec
mov
xlat
movntq
out
mov
adc
cmp
add
sbb
jns
mov
fs
push
stos
js
mov
dec
sbb
add
jbe
add
adc
and
adc
cmp
xor
int3
push
push
xorl
lods
sbb
aas
leave
data16
inc
xor
sbb
push
xlat
and
imul
aaa
scas
sbb
mov
cmp
push
inc
imul
push
push
sbb
cmc
push
sbb
xchg
daa
and
add
out
xchg
ds
stos
jecxz
es
scas
xchg
les
xor
enter
das
sbb
ret
leave
ss
cmp
insb
dec
fistpll
das
add
test
aas
mov
adc
lahf
popa
jb
pop
ret
push
das
dec
ja
in
xchg
dec
or
pop
arpl
das
jno
lahf
push
pop
xor
std
addl
push
mov
pop
rcrl
mov
xchg
mov
idiv
lock
push
mov
xor
push
mov
mov
push
imul
sbb
xorl
loope
or
aam
xor
scas
inc
ficomps
frstor
pop
or
xchg
aas
adc
push
out
test
cmp
xchg
mov
das
aas
les
sub
repz
and
pop
lock
popa
cli
adc
push
adc
and
inc
inc
repz
add
adc
lret
xor
rolb
stos
ja
jno
scas
and
jle
xor
ds
mov
dec
or
pop
daa
mov
ss
shrb
hlt
imul
or
dec
mov
add
dec
mov
pop
dec
jb
mov
jmp
push
mov
aam
and
jle
sub
or
xchg
dec
jns
jp
std
inc
test
push
popf
xchg
mov
cs
lods
jecxz
cs
lds
push
jno
push
adc
push
pop
cmp
adc
test
out
les
rcrb
xlat
mov
cld
aam
push
dec
fimuls
lods
in
dec
cltd
and
lret
les
adc
ret
mov
call
pop
inc
in
or
add
mov
xchg
shll
sub
mov
das
ss
xor
jg
mov
dec
sbb
aas
in
sub
jo
xchg
push
inc
je
mov
xchg
fisubs
pop
in
inc
sti
cld
aaa
stc
fs
and
mov
std
push
gs
dec
jbe
cmp
mov
dec
xor
mov
xor
cmpsl
fwait
out
mov
mov
xchg
popa
jmp
test
cld
repz
cmp
xchg
out
add
pop
lock
movsl
cmp
adc
add
notl
das
adc
adc
xchg
xor
adc
sub
cmp
cmp
insb
addr16
push
testl
daa
pop
push
sbb
and
add
push
adc
pop
call
adc
mov
cmova
pop
adc
sub
jo
leave
push
mov
pop
repnz
fnstenv
das
rolb
sub
insb
addr16
pop
pop
xor
inc
sbb
sarl
or
sbb
shlb
inc
call
xchg
mov
mov
es
out
gs
mov
dec
cmpsl
fwait
cmp
lods
ja
pop
pop
mov
ret
shrl
sub
orl
lret
addr16
mov
xchg
imulb
inc
pop
inc
rclb
fisttps
ret
xlat
push
repz
sub
sub
xchg
fidivrl
scas
inc
add
pop
cmp
addr16
adc
fisttps
aad
xor
fists
mov
or
jne
aas
cmpsb
fstl
xchg
adc
sub
aaa
pop
mov
incl
mov
insl
cmpsl
call
jnp
in
jle
ja
dec
in
lea
test
sbbl
inc
dec
das
les
dec
push
sbb
lea
pop
stos
xchg
inc
xchg
jb
cmpsb
addr16
imul
mov
sbb
add
test
jmp
cli
int3
dec
pop
mov
cld
das
push
lahf
aaa
outsl
clc
mov
lretw
mov
mov
fxam
and
inc
sbb
jne
jne
jg
imul
scas
pop
fwait
add
mov
mov
loop
gs
push
das
pop
cld
jno
addl
aaa
and
fs
xor
sarb
or
lock
das
pop
mov
dec
xchg
jmp
out
das
mov
cmp
mov
insb
cmpl
dec
lahf
jne
jae
daa
mov
in
in
ret
in
aas
sub
sbb
pop
daa
in
mov
pop
cld
mov
loope
push
fwait
push
mov
cs
jmp
daa
gs
and
jecxz
addl
inc
in
subb
adcl
dec
fs
adc
insb
rcl
or
das
rolb
adc
ret
cmp
sbb
lahf
inc
adc
enter
cmp
sbb
ds
popa
das
sub
repnz
jp
push
adc
mov
xchg
push
pop
cmp
xchg
aaa
push
cmp
scas
add
ficoms
mov
repz
sbb
push
push
sub
mov
push
flds
mov
adc
adc
mov
clc
xchg
dec
inc
xchg
pushf
pop
cmp
pop
sub
es
push
push
cmpsb
xor
sti
testb
mov
lods
push
ret
popa
inc
scas
xor
or
jne
xchg
outsl
pop
int
xor
out
mov
data16
xor
andb
push
xor
jle
ret
sbb
fwait
mov
sahf
xor
dec
cmp
cs
jb
adc
in
add
push
push
add
mov
lds
das
addl
aad
mov
incb
xor
inc
loop
clc
mov
iret
and
fstl
test
xor
inc
ja
adc
aaa
xchg
fistps
cmp
icebp
jmp
push
xchg
mov
jle
sti
push
pop
stos
lods
xor
sti
lock
push
xchg
add
aas
gs
lea
getsec
jne
js
sub
xchg
les
push
enter
push
pop
in
pop
mov
mov
iret
pop
jbe
rcll
and
push
pop
adc
pop
ret
xchg
addb
sub
dec
nop
fcoms
shll
addr16
aaa
dec
cmp
push
inc
push
push
and
shl
push
int
test
inc
pop
vpavgb
pop
cmp
enter
pop
sub
xor
xchg
ret
int3
das
fstpt
sbb
dec
pop
mov
jbe
orl
or
pop
pop
sar
cwtl
jmp
icebp
or
cmp
std
aam
std
aam
test
fcoms
add
sbb
sub
sub
pop
lret
fldcw
outsb
test
add
xchg
pop
jp
mov
add
aam
es
xor
and
sahf
je
stos
movsb
out
jecxz
adc
pop
sbb
xor
outsl
xchg
mov
addb
mov
in
add
adc
aas
into
sahf
cwtl
dec
sub
or
cmp
pop
xchg
out
stos
rcrb
and
adc
into
push
and
push
add
ret
jle
fcom
xchg
sbb
fs
test
lds
aaa
push
fidivrl
cmp
in
and
inc
movsl
cmp
stos
cmpsb
inc
test
pop
test
xchg
imul
test
inc
xor
mov
ret
and
mov
mov
xchg
les
and
inc
les
or
inc
push
dec
push
mov
mov
mov
xchg
add
push
jmp
sbb
jno
dec
or
xchg
addr16
test
mov
int3
pushf
fbstp
aaa
mov
dec
pop
insl
aad
sbb
cmp
ss
xlat
in
add
push
adc
push
pop
push
inc
adc
ja
fs
inc
dec
xchg
lret
adcl
push
out
jnp
sahf
push
pop
inc
xchg
out
mov
enterw
int
rorl
std
cmp
inc
sbb
pop
out
mov
lock
notb
mov
pop
sti
sub
and
mov
fs
in
inc
test
cmp
aad
push
cmp
sbbl
orb
fsubrl
clc
sahf
push
xadd
fnstenv
pop
mov
es
in
inc
jp,pn
lods
mov
int
lret
sti
lea
adc
fnstsw
jae
movsb
xchg
xchg
mov
lret
test
imul
dec
push
or
dec
stos
and
cld
test
push
sbb
es
outsl
addr16
adc
fnsave
pop
scas
andb
sub
clc
sbb
lea
jle
pop
pop
mov
jmp
fwait
cld
lcall
ret
loopne
and
loop
cltd
iret
inc
xchg
inc
cmp
dec
push
add
lcall
cmp
ficomps
imul
fs
inc
add
inc
scas
imul
pop
stc
in
mov
lods
mov
push
push
call
add
and
add
xchg
and
add
pop
or
adcb
rep
push
movb
or
sbb
or
lock
xchg
insl
mov
scas
push
xlat
adc
mov
outsb
or
test
dec
enter
shrl
int3
fs
inc
push
lret
mov
pop
pop
add
inc
or
subb
inc
push
testl
adc
aaa
push
dec
fwait
fwait
add
mov
sahf
push
pop
xchg
add
nop
es
pop
sub
out
adc
mov
push
mov
xchg
aaa
xchg
aaa
push
gs
pop
adc
scas
mov
mov
test
sub
sbb
or
in
xchg
leave
dec
call
stos
adc
rorl
jmp
pop
cltd
xchg
adc
mov
out
cmp
lret
cmp
adc
xchg
add
aaa
mov
sbb
aaa
xchg
cld
inc
push
mov
lds
out
leave
jl
dec
push
ljmp
add
data16
xor
xchg
and
push
scas
mov
and
cmp
and
test
ss
inc
lods
and
arpl
pop
mov
je
mov
xchg
pop
pop
jno
adc
aaa
aaa
inc
clc
mov
inc
adc
mov
cmpsl
push
mov
addr16
daa
add
subb
leave
ljmp
inc
inc
in
mull
and
dec
cmpsb
jecxz
jae
xchg
pop
mov
dec
cmpsl
pop
shlb
dec
daa
pop
rclb
push
inc
leave
gs
mov
gs
xlat
sbb
sbb
sbb
push
cmp
jl
add
arpl
addr16
inc
xchg
fs
lods
fcmovne
mov
pop
mov
test
pop
jmp
push
outsb
lods
leave
push
data16
es
ljmp
mov
dec
daa
push
ret
pop
xchg
roll
sbb
je
sub
gs
pop
lods
xor
test
ficoml
cmp
es
testb
addr16
xchg
inc
jne
in
mov
adc
std
push
cmp
scas
xchg
leave
dec
test
into
mov
orb
aad
pushw
outsb
lods
leave
cltd
leave
push
addr16
mov
in
arpl
lock
jmp
gs
dec
in
bnd
addr16
dec
in
lret
lods
dec
das
out
icebp
or
lret
sub
mov
test
jle
inc
mov
loopne
cmp
jle
int3
xchg
test
mov
mov
addl
cmp
jle
xchg
int3
out
test
ja
adcb
mov
xorl
loop
cmp
jle
int3
mov
mov
adc
mov
adc
jle
sub
sub
adc
mov
adc
jle
ror
into
test
cmpsb
in
adc
mov
adc
add
fs
xchg
inc
in
jb
xchg
rorb
or
mov
ficoml
test
mov
adc
jle
fwait
int3
ret
test
fwait
in
adc
fidivrl
adc
jle
fcmove
test
into
in
adc
iret
cmp
inc
lds
into
std
and
xorl
adc
xchg
aas
stos
dec
and
pop
xor
xor
xchg
cmp
mov
loop
push
jb
ljmp
es
fs
ljmp
clc
inc
mov
sub
cmp
inc
in
push
inc
mov
mov
jmp
mov
adc
cld
sbb
add
ret
mov
lret
lahf
loop
xor
stos
push
sub
mov
stos
inc
rcr
jb
pop
sub
bound
adc
shll
inc
jbe
je
adc
mov
push
push
add
jo
popa
test
test
mov
mov
xchg
add
jl
aas
cld
xor
test
mov
lods
adc
rolb
cmp
dec
inc
and
adc
pop
sub
cmp
xchg
inc
pushf
pop
std
pop
xchg
mov
int3
cmovnp
daa
dec
aaa
aas
mov
adcl
cld
jne
imul
and
and
iret
daa
cmpsl
repz
aaa
fdivrl
test
in
ds
xchg
std
sbb
shl
or
mov
or
xchg
cld
sbb
call
inc
in
mov
xor
mov
stos
mov
loope
iret
mov
aas
mov
sub
test
dec
arpl
loop
das
in
push
daa
inc
jb
test
cmpsb
in
adc
cmp
xor
pop
mov
lods
mov
jne
and
xor
and
ffree
arpl
data16
mov
and
or
gs
pop
xchg
or
dec
fsubs
data16
sbb
testb
add
cmp
aaa
repnz
sahf
xchg
stos
inc
inc
add
icebp
or
cltd
cmc
mov
les
ja
jle
adc
jbe
les
inc
aaa
test
das
pop
push
mov
inc
jmp
add
sub
pop
pop
xchg
xchg
inc
inc
popa
bound
decl
sub
mov
mov
jle
movsb
xor
mov
or
push
cmp
xor
xchg
sbb
and
dec
out
aas
mov
test
push
xor
mov
roll
shlb
xorb
xor
lods
rol
pop
mov
cmp
addr16
das
jnp
push
fcmovb
inc
cmpsl
ja
push
inc
xchg
or
add
mov
mov
xor
and
or
push
fwait
push
scas
xchg
mov
out
inc
sub
addb
adc
pop
out
aad
negl
sbb
add
jmp
cs
rcrb
sub
and
inc
mov
sbb
adc
and
jbe
cli
push
es
loopne
push
dec
jne
dec
imul
mov
test
addl
gs
pop
arpl
out
dec
aaa
xchg
xchg
stos
xchg
into
dec
mov
xor
call
ds
ja
call
pcmpgtd
aaa
pcmpeqd
ret
jb
pop
adc
das
outsl
adc
inc
jl
popf
mov
cmpsb
fsubl
add
iret
cmpsl
arpl
jmp
inc
push
push
fs
fwait
test
test
pushf
mov
and
xor
xchg
fs
adc
mov
and
lds
addr16
cmp
mov
dec
lret
rolb
xchg
aaa
xchg
cmpsb
cmp
pop
push
dec
adc
addr16
add
push
mov
ret
aaa
pop
cwtl
mov
pop
push
pop
dec
xchg
dec
lcall
cmp
cld
push
xchg
push
mov
pop
inc
out
mov
fisubrs
cmpsb
les
xor
lds
out
jo
mov
fcoml
xchg
mov
sbb
push
lcall
mov
out
enter
dec
stos
shl
sbb
mov
addr16
pop
adc
jb
je
mov
in
sbb
pop
sub
sbb
pop
jg
je
jbe
push
aaa
mov
mov
or
aaa
les
add
and
jg
cs
data16
cmp
fwait
xchg
sub
inc
cmpsl
ds
and
in
adc
das
mov
aaa
call
dec
ficomps
das
shlb
xchg
sub
imul
add
lock
adc
call
out
push
das
mov
cmc
mov
pop
loope
aas
test
jp
arpl
push
mov
push
mov
notl
cmp
imul
push
outsb
stos
mov
and
ds
push
or
jg
mov
dec
cs
femms
push
insb
sbb
callw
jg
mov
pop
push
mov
xlat
cmp
pop
pop
sub
mov
in
dec
test
pop
sub
jno
scas
fwait
add
and
nop
gs
clc
js
dec
inc
lock
push
ljmp
inc
lods
xchg
adc
dec
aaa
lds
fldenv
or
add
xchg
sub
insl
aaa
add
enter
mov
sbb
das
scas
xchg
int3
loope
jg
mov
jae
or
push
out
int3
ja
jg
aaa
rcrb
xor
mov
mov
mov
loop
sbb
inc
inc
inc
popa
xchg
mov
rol
iret
xchg
sub
cmp
push
mov
aam
mov
iret
cmp
xchg
das
sub
pop
inc
xchg
inc
mov
add
xor
jmp
jmp
inc
rorl
outsl
daa
in
add
jg
xor
scas
in
dec
pop
xor
jns
mov
daa
leave
and
leave
out
jg
cmp
and
xor
xchg
shrb
bound
dec
stos
adc
jg
call
in
ror
pusha
adc
pop
inc
add
inc
add
lods
cs
fnstsw
or
push
lds
and
lods
dec
dec
cmpb
fcmovne
cwtl
adc
xchg
jp
aad
push
cld
outsb
cmp
lahf
mov
and
bound
mov
xorl
dec
fisubrl
std
push
add
cmp
and
lds
into
sub
or
and
fidivs
popa
sar
movsl
call
or
popa
or
pop
out
jge
adc
roll
mov
fstpl
jnp
xor
por
ret
fisttpl
cmc
dec
inc
jnp
inc
fadds
jne
out
adc
xor
test
pop
add
cmpsl
cmp
xchg
sub
jp
enter
dec
jp
xlat
cmp
aaa
scas
loopne
and
push
jmp
ss
inc
and
jo
xchg
pop
mov
xlat
aaa
imulb
out
xchg
xchg
cwtl
pop
jp
ja
or
inc
testb
pop
push
das
ja
add
cmp
xchg
ds
jno
jmp
scas
das
ljmp
mov
clc
mov
test
or
aaa
mov
je
incl
inc
jl
or
mov
inc
mov
xor
inc
push
xchg
jbe
dec
ret
sub
pop
sbb
add
aaa
mov
cmc
fucom
jne
js
out
jbe
or
add
les
cmp
rorb
sbb
scas
push
stos
dec
pop
dec
mov
ja
scas
push
xchg
out
dec
mov
dec
not
push
cmpb
push
mov
mov
fiadds
or
test
sub
test
shll
das
dec
mov
dec
xchg
pop
xchg
adc
sub
and
pusha
adc
sub
and
rolb
push
sub
out
into
ljmp
mov
ljmp
push
push
xor
andl
imul
addr16
pop
in
pop
xchg
rolb
ljmp
mov
ljmp
sahf
pop
push
xchg
mov
jmp
mov
add
scas
pop
ss
leave
fisubrs
test
out
xor
mov
mov
dec
mov
aas
pop
fwait
sbb
enter
add
mov
xorl
sbb
push
mov
add
and
mov
xor
not
and
aaa
xlat
sub
cwtl
out
xchg
dec
nop
mov
pop
scas
test
addr16
adc
xchg
mov
cwtl
push
add
sbb
cmp
sbb
flds
pop
pop
int3
icebp
pop
fwait
pop
pop
push
mov
inc
xchg
xor
les
rcll
pop
aam
pop
push
inc
dec
ja
int
or
xchg
imul
and
enter
and
sti
sahf
add
push
loopne
jb
ljmp
incb
pop
add
add
and
hlt
jno
das
mov
arpl
dec
roll
rdmsr
xchg
push
test
xor
or
mov
insl
shrl
js
dec
push
push
insl
xor
into
int3
into
test
mov
into
adc
inc
repnz
xchg
outsb
popl
push
mov
push
fmulp
subb
jb
xorb
or
mov
jl
cs
dec
movsb
sti
add
fs
shlb
xchg
cmpsl
cmpsl
gs
shll
je
pop
pop
add
out
mov
lds
and
stc
lea
outsl
lea
inc
push
jne
out
adc
xor
inc
movsl
and
test
sarl
jg
xor
les
jb
ja
mov
lea
xor
mov
sbb
mov
cmp
cwtl
into
es
and
out
push
ud2
insl
dec
cmc
cmpsb
inc
sbb
sbb
out
sbb
or
js
js
or
movb
outsl
or
push
rorb
sub
pop
pop
add
xor
movsl
lds
jp
popf
xor
lcall
cmpsl
fimuls
aaa
mov
mov
xchg
adc
push
int3
test
shl
dec
leave
fcompl
ljmp
loopne
adc
popf
inc
rorb
ss
testb
add
inc
rcrb
faddl
mov
call
aaa
adc
push
enter
add
outsl
mov
pop
fadds
movsl
insb
aas
in
movsl
dec
gs
and
ja
push
es
xchg
cwtl
add
aad
ss
aaa
mov
fisttps
xchg
xchg
sbb
ds
mov
mov
aaa
mov
mov
or
mov
and
nop
or
scas
inc
fstl
loope
push
in
or
push
mov
mov
cltd
inc
cmp
in
dec
addr16
shll
imul
pop
out
add
xor
jle
inc
xchg
cmp
addl
adc
inc
add
jl
push
shrd
pop
mov
out
mov
testl
test
mov
out
cmp
xor
xchg
ss
testl
ljmp
xchg
add
fistps
inc
cmp
mov
enter
cld
mov
dec
and
rclb
lret
stos
in
in
push
insb
sbb
out
sbb
add
cmp
lds
xlat
inc
adc
mov
push
pusha
jo
pop
notb
mov
fiaddl
push
dec
fst
pop
adc
sar
call
cmpsl
push
in
int
ret
pop
icebp
pusha
fsts
push
std
jnp
lds
jb
leave
xchg
adc
pop
adc
push
dec
ss
dec
addr16
psubw
ds
xchg
cmp
mov
or
daa
jne
add
or
jne
call
jne
lock
adc
fbstp
mov
sub
xchg
cmpsl
sub
jnp
sub
fistps
sub
fldt
xchg
sub
push
dec
inc
addr16
fcompl
push
push
sarb
xchg
mov
and
pop
mov
gs
fcoms
xorl
push
cmp
addr16
adc
cmpb
lods
repz
jl
adc
pusha
jl
out
xchg
inc
mov
xchg
arpl
rol
icebp
mov
outsl
cmc
pop
jp
jno
jbe
or
stos
fwait
mov
ss
and
jle
pop
sbbl
das
andl
push
adc
stos
push
xrelease
int
test
cmp
clc
mov
mov
out
or
lock
and
jbe
cmp
xchg
out
dec
jnp
cltd
mov
add
mov
mov
mov
adc
imul
iret
int3
dec
xor
add
jecxz
cs
lods
outsl
stos
in
ds
push
jae
adc
add
adc
mov
adc
push
fwait
add
dec
movsb
out
xchg
insl
dec
out
adc
repnz
test
stc
and
mov
jnp
mov
outsl
dec
cmp
mov
test
push
outsb
pop
cmp
into
mov
cmp
inc
imul
es
mov
dec
rorl
out
testb
pusha
mov
push
pop
pop
mov
dec
dec
lods
jmp
xchg
jle
cmp
leave
mov
sub
cmp
add
cmp
xor
imul
add
loop
lahf
ret
out
scas
jno
mov
xchg
push
xchg
jae
imul
in
adc
pop
fwait
scas
fs
loope
mov
add
lods
fs
jbe
adc
dec
ret
fwait
leave
and
test
and
pop
pop
add
mov
xchg
jnp
mov
ja
cmp
cmp
repz
into
subl
loope,pt
cli
lods
pusha
cmpl
jle
call
arpl
mov
into
int
inc
fsubs
pop
add
mov
xchg
and
or
dec
repz
inc
test
mov
mov
sub
pop
test
lods
or
push
sub
jle
jmp
negb
add
cmp
push
lock
inc
loop
mov
outsl
cmpsl
movsb
loop
lods
xor
lea
pop
xor
das
or
pop
push
dec
and
or
xor
sbb
and
cmovb
pop
jne
dec
int3
mov
xchg
inc
add
sbb
and
iret
sahf
mov
stos
dec
jecxz
mov
adc
pop
enter
mov
push
dec
aaa
fnstcw
sub
aas
sbbl
addr16
dec
daa
mov
mov
dec
sbb
es
jg
daa
jnp
cmp
dec
aas
cli
mov
out
in
incl
and
loop
pop
lds
imul
jae
rcrl
cmp
mov
sub
sahf
adc
pushf
out
into
xchg
add
cltd
adc
cmp
test
stos
mov
sub
test
out
push
lahf
mov
sarb
inc
addr16
jnp
jne
jmp
push
xchg
test
pop
add
xchg
sub
xchg
das
daa
aas
into
test
adc
cmpl
adc
push
idivb
pop
loop
fildl
fnstcw
push
ja
add
stos
fs
loopne
mov
pushf
add
mov
xor
push
cltd
lods
push
mov
add
adc
cmp
lahf
fmul
mov
or
fadds
push
and
js
push
sbb
sbbl
and
jmp
std
out
and
push
fmull
pop
imul
aad
cmp
test
or
or
inc
sub
and
repnz
adc
xor
lods
adc
addr16
dec
aaa
jnp
xlat
in
addr16
out
and
xchg
aaa
aam
adc
cmp
adc
push
sub
jl
adc
pusha
sbb
and
mov
adc
test
stc
add
inc
pop
jne
cli
cmp
test
mov
and
jp
inc
test
ljmp
cmp
add
sub
addr16
divl
or
inc
mov
aaa
pop
es
mov
add
inc
stc
mov
mov
aaa
dec
push
dec
jnp
shl
push
jae
nop
lret
cmp
mov
xchg
jmp
xchg
fwait
mov
sbb
fisttpl
repnz
sarl
inc
dec
daa
sbb
pop
addr16
push
mov
push
inc
mov
jnp
jmp
inc
fisttpll
incl
nop
jle
cmp
bound
jo
addb
movsb
stos
push
outsl
movsl
dec
ja
out
pop
sub
divb
in
add
pop
inc
fwait
jbe
mov
enter
out
inc
xlat
adc
test
inc
daa
daa
lds
lret
mov
pusha
mov
sbb
pop
mov
aaa
cmp
xchg
add
inc
inc
aam
jns
xchg
xchg
xchg
clc
mov
inc
jl
ds
xchg
jmp
movsb
adc
inc
adc
mov
xchg
cmpsb
adc
inc
and
xlat
cmp
push
jae
mov
aam
jb
mov
adc
inc
jle
adc
xchg
sub
pop
push
inc
and
popf
inc
rorb
movsb
hlt
pop
push
inc
and
out
pushf
mulb
xchg
loopne
mul
cmp
adc
adc
rol
xor
xchg
adc
sub
call
inc
in
adc
inc
and
popf
inc
rorb
fcoml
xlat
sub
inc
xchg
ss
mov
dec
cli
hlt
jg
mov
shlb
mov
mov
adc
std
push
cmp
dec
pop
rolb
sbb
and
jns
add
cld
and
add
cmp
push
and
popf
inc
rorb
and
pop
aad
and
jae
mov
mov
inc
fwait
push
in
push
popf
xchg
and
sub
loopne
aaa
test
or
mov
test
adc
aad
mov
xchg
and
mov
mov
fnstenv
notl
lret
add
xchg
setle
jae
mov
aam
aaa
dec
jne
rolb
loopne
pop
mov
xchg
add
pop
push
cmp
fwait
sti
add
xchg
aaa
ret
adc
push
xchg
inc
xlat
jl
notl
cmp
sub
or
jne
rcll
adc
fiaddl
aad
adc
inc
push
jl
pop
adc
push
xchg
cmp
push
bswap
inc
xlat
jae
xchg
inc
mov
or
and
adc
std
push
cmp
xchg
xchg
aad
rcrb
jbe
out
enter
mov
pop
cmp
int3
js
dec
mov
int
fisttpll
into
insb
pop
dec
sub
lea
test
loope
sub
sub
loop
sub
sub
and
inc
jmp
ss
cmp
or
add
lret
and
and
and
or
add
enter
mov
andb
and
or
add
leave
and
and
and
or
add
lret
data16
sub
push
jmp
push
and
push
loop
sub
push
ljmp
push
push
jecxz
sub
push
jmp
movsl
subb
loopne
sub
mov
je
push
jmp
add
cld
xchg
scas
sbb
adc
aad
xchg
jmp
nop
in
or
or
or
adc
dec
pop
imul
push
ljmp
adc
call
shlb
mov
adcb
mov
push
dec
jmp
je
add
add
xchg
dec
out
xchg
imul
out
sub
push
mov
sub
xchg
aaa
insb
adc
pop
xor
lret
jmp
pop
pop
clc
bound
adc
mov
dec
cmp
cmpsb
inc
cs
pusha
pop
outsl
js
lahf
xor
pop
pop
cmp
and
clc
pusha
adc
and
sbb
xor
push
or
pop
ja
add
inc
bt
stc
in
stos
inc
inc
mov
or
aad
push
movsl
loop
cvtdq2ps
sbb
push
pop
test
cmp
testb
sbb
clc
mov
mov
inc
incl
movsb
jb
pop
mov
inc
sbb
aas
or
inc
lea
pop
cmp
pop
mov
xchg
ljmp
xchg
orl
and
scas
xor
cmp
mov
push
push
dec
cltd
in
into
outsl
adc
sbb
das
clc
dec
xchg
pop
sub
movsb
inc
xchg
lahf
repnz
push
aaa
mov
fildll
mov
xor
daa
push
add
cmpsb
cmpsb
shr
xchg
clc
pop
lret
inc
xchg
inc
arpl
push
frstpm(287
test
fsubl
dec
or
dec
push
vdivsd
mov
data16
sub
in
mull
sahf
dec
mov
bound
sbb
cs
movsl
fbld
fwait
cs
add
xchg
push
aam
shlb
into
lods
fimull
outsl
xlat
cltd
cmpsb
es
cmp
adc
repz
pusha
leave
cmp
push
push
test
aad
mov
pop
mov
pop
push
ja
sbb
mov
notl
add
inc
std
inc
les
mov
pmuludq
xor
pusha
popf
or
push
movnti
iret
adc
pop
ffree
ja
aad
stos
xor
enter
jg
adc
outsl
out
push
pop
lods
xchg
test
inc
or
shlb
dec
inc
lcall
mov
into
test
inc
jb
push
sbb
add
and
xlat
push
rolb
or
mov
rcrl
mov
or
shll
mov
lods
push
xchg
int
into
daa
mov
loopne
mov
pop
mov
sbb
sub
pop
test
rolb
int
lahf
das
push
repz
fcomps
fsts
mov
movsl
xor
sub
jbe
jne
or
cld
lcall
add
and
dec
cmp
ds
lcall
xorl
bound
xchg
movsl
decb
or
imul
push
jne
es
and
dec
push
inc
adc
xchg
lahf
lods
push
shlb
ss
and
xchg
out
popa
push
xchg
mov
ja
and
inc
and
addr16
jg
mov
mov
pop
push
shlb
xchg
mov
xchg
and
rcrb
and
inc
and
add
leave
push
push
push
stos
clc
inc
aam
xchg
and
push
aad
xchg
push
push
adc
push
xchg
push
xlat
inc
xchg
push
push
pop
aam
in
inc
cmp
std
adc
mov
cmp
std
push
clc
cmp
adc
adc
mov
cmp
std
adc
mov
in
mov
int3
mov
cmp
std
adc
mov
cmp
mov
cmp
std
adc
mov
cmp
in
adc
dec
loopne
adc
adc
mov
cmp
mov
dec
loopne
adc
adc
mov
cmp
std
push
fdivrl
test
loopne
adc
and
daa
mov
adc
xchg
pop
inc
cmpsb
icebp
xor
orb
rcrb
push
test
shll
lods
or
cmp
add
out
ds
ja
les
out
xchg
gs
ja
addr16
pmulhuw
fstpt
out
movsb
lods
out
out
fs
jmp
and
and
insb
cmp
xor
aad
adc
addr16
dec
pop
aaa
mov
mov
inc
pop
roll
into
and
loopne
sub
into
mov
sbb
xchg
jg
add
and
lock
pop
xchg
adcb
and
xor
xchg
ja
cmpsb
loop
leave
inc
dec
xchg
jns
cmpsb
push
out
mov
mov
mov
mov
push
inc
cmp
in
xchg
inc
mov
int
enter
xchg
cmc
xor
mov
lret
add
insb
or
outsl
pop
jecxz
cmp
int3
inc
shl
daa
das
int3
dec
shl
xor
int3
pop
shll
jnp
sbb
lea
shll
outsb
sub
lahf
xchg
daa
adc
dec
imul
jge
jmp
or
aaa
push
mov
das
pop
stos
push
inc
popa
jb
lret
ja
add
iret
mov
mov
lret
popf
jp
rcrb
add
cmpsb
and
outsb
in
inc
or
insb
sbb
dec
iret
out
pavgw
dec
loop
outsl
adc
and
pop
stc
push
addb
aaa
arpl
jnp
aam
data16
pop
inc
and
arpl
roll
jmp
pop
jns
in
lea
adc
adc
dec
repz
addr16
outsl
aaa
jle
push
test
pop
insl
mov
pop
jg
pop
mov
cmp
adc
pop
nop
and
lods
xlat
and
pop
lret
lret
sub
andb
jb
cmp
in
push
mov
pop
scas
xchg
jmp
movsl
jb
xor
sub
inc
push
pop
lds
dec
stc
pop
pop
xor
inc
mov
fcomi
sbb
aam
cs
mov
out
fwait
daa
loop
or
xor
test
incl
mov
mov
adc
sbb
sub
and
and
dec
sub
push
ds
call
outsb
or
push
les
sub
lret
adc
aaa
xlat
adc
cld
xchg
and
flds
push
adc
pop
sbb
movsb
xor
or
js
xor
stos
test
mov
bswap
add
cmp
testl
aad
fbstp
out
mov
enter
sbb
dec
pop
add
lock
mov
xlat
inc
jns
add
pop
imul
ljmp
and
sub
into
inc
lret
imul
lods
cmpl
and
ljmp
mov
ljmp
xchg
into
imul
stos
and
xchg
test
out
aas
bound
inc
xchg
xchg
xchg
inc
adc
cmp
or
inc
cs
xchg
fwait
mov
and
cmp
int
and
add
add
add
lret
adc
repnz
lret
xor
cld
and
loop
in
and
cmpsl
xor
lret
repnz
roll
aam
negb
push
shll
das
dec
sbb
add
icebp
out
mov
add
pop
scas
mov
mov
test
fwait
sbb
xor
pop
xor
int3
pop
cmp
imul
out
pusha
pop
pushw
aas
xchg
pop
push
les
test
fcoml
xchg
push
mov
mov
xchg
addr16
std
xor
dec
jecxz
cld
and
ja
and
xchg
hlt
dec
add
push
enter
cmpsl
cmp
in
inc
lock
enterw
push
imul
inc
add
add
push
sbb
or
adc
lret
jnp
add
lock
sbb
jge
push
adc
dec
xchg
lret
and
jg
lret
lea
adc
inc
aaa
les
popa
rolb
pop
int3
pop
dec
out
add
ja
push
adc
inc
push
int3
lret
repnz
test
pop
add
push
inc
aaa
sbb
arpl
add
sarb
or
pop
lret
shlb
pop
lret
insb
xor
inc
ja
pmaxsw
pop
xor
jl
xor
arpl
xor
jo
xor
arpl
xor
and
jge
sbb
inc
pop
and
xor
test
pop
mov
es
xor
and
test
fwait
pop
xlat
xor
xor
dec
popa
inc
xor
pop
xor
jns
inc
pop
fisttpll
xor
pop
jne
xor
popa
xor
popa
xor
arpl
inc
aam
push
jnp
aaa
shlb
or
shlb
pop
not
jg
cmpsb
aaa
or
movsl
cld
das
loope
pop
in
lahf
es
adc
jge
movsb
orb
mov
sub
in
push
pop
and
fiadds
aaa
add
mov
and
dec
mov
sbb
lock
jno
mov
fsubrl
addr16
and
add
pop
in
ret
idiv
inc
or
xchg
rorl
fcmovnb
xchg
xchg
mov
test
push
xchg
loop
adcl
js
xchg
add
xchg
andl
push
popf
scas
cs
js
loop
and
arpl
popf
cs
sbb
mov
pop
xchg
movsb
jecxz
or
jo
mov
xchg
rclb
scas
aaa
sbb
push
fwait
pop
ss
push
xorl
inc
push
push
lock
pop
rorl
push
push
mulb
pop
mov
push
cmp
adc
inc
sarl
fcompl
cmp
or
daa
rorl
popl
mov
out
aaa
push
lock
fwait
aas
ss
fcompl
or
pop
lds
and
jg
and
das
cmp
mov
cmc
xchg
sub
pop
testl
xchg
mov
imull
inc
xchg
int
mov
ss
xchg
das
xchg
pop
aaa
inc
push
psubb
addl
adc
pop
call
setl
addb
pop
imul
call
inc
pop
imul
pop
xchg
mov
inc
outsb
adc
fwait
xor
adc
push
pcmpeqw
cltd
mov
in
imul
pusha
jp
outsl
add
std
pop
push
jecxz
enter
and
lods
jg
faddl
xchg
xchg
pop
jb
jne
pop
popl
pop
xor
lods
pop
daa
xlat
nop
lock
or
push
lods
std
push
test
mov
pusha
imul
cmp
fmull
int
rorl
mov
leave
std
dec
xchg
scas
aas
sbb
jns
clc
mov
imul
jmp
lods
imul
mov
pop
rorl
adc
pop
dec
xchg
scas
pop
jecxz
inc
pusha
call
inc
pop
nop
popa
js
repnz
or
dec
clc
fwait
xchg
pop
andl
push
mov
pop
pop
scas
mov
sbb
adc
jne
fwait
inc
push
mov
pop
xchg
dec
pop
jecxz
pop
in
push
push
xchg
pop
pop
scas
pop
add
bound
fwait
xchg
movsb
sbb
testl
das
outsl
add
les
rorl
inc
jb
adc
pop
scas
pop
or
xchg
mov
adc
inc
dec
je
cmpsl
sbb
pop
addl
xor
jno
mov
pop
sub
fwait
cmp
in
icebp
imul
test
rorl
inc
pop
sbb
enter
das
mov
or
xor
jmp
outsb
push
mov
and
insl
dec
or
in
popf
dec
sbb
sbb
popa
adc
data16
jmp
mov
scas
xchg
cld
or
lods
push
or
mov
pop
stos
add
push
lock
daa
test
mov
push
mov
lds
notl
push
add
addr16
cmp
scas
daa
mov
movsb
xor
notl
push
xchg
daa
or
push
inc
adc
dec
loop
test
mov
jns
push
xchg
mov
mov
add
stos
push
xlat
or
add
add
adc
xchg
lods
and
sbb
lock
mov
lret
test
or
dec
mov
xlat
in
js
xlat
enter
sahf
push
fimull
pop
ret
pop
mov
xlat
je
mov
cmp
mov
imul
xchg
lock
add
ljmp
bswap
adc
jmp
rolb
mov
addr16
dec
xchg
pop
push
dec
jmp
jo
pushf
xchg
and
out
lock
sbb
add
daa
mov
mov
int
insl
fisubrs
mov
pushf
fucomi
in
and
or
cmp
insl
adc
and
aad
adc
cmp
enter
dec
data16
xchg
xlat
mov
jnp
test
xchg
scas
fwait
mov
push
lcall
sub
add
jecxz
fucomip
int3
sbb
repz
ja
adcl
lcall
loope
enter
jns
xchg
call
mov
mov
pop
xchg
inc
subb
decl
and
mov
imul
shr
cmc
push
push
adc
jle
push
mov
insb
and
mov
daa
cmp
adc
test
xor
stos
pop
adc
and
stc
aaa
dec
pop
sub
in
or
aas
getsec
imul
scas
pop
test
or
cmp
popf
call
cltd
xor
inc
jge
iret
or
adc
iret
movsb
ret
cmpl
divl
ss
push
addl
push
sub
icebp
jge
ss
jecxz
pop
cs
dec
inc
adc
add
aas
cld
lcall
dec
mov
xchg
dec
nop
lock
jnp
pop
clc
mov
pop
stos
dec
jmp
push
adc
xchg
inc
mov
pop
insb
jo
dec
fiadds
xor
or
push
mov
int
jae
cmp
out
and
lds
pop
sbb
in
push
and
arpl
cmp
mov
inc
outsl
aam
adc
adc
out
mov
push
xorl
jl
inc
jbe
ret
mov
std
adc
xor
jns
pop
sbb
data16
mov
clts
pop
fwait
sbb
or
jns
testl
rclb
in
xor
mov
xchg
xchg
xchg
jg
ja
jb
lods
clc
xor
adc
sbb
push
and
cmc
aaa
fstl
inc
arpl
sub
lock
xchg
test
lods
aaa
testl
jge
loop
xchg
inc
mov
push
fsubp
inc
scas
ss
push
pop
pop
and
dec
aaa
inc
mov
jo
lret
and
out
sub
fwait
jb
mov
lods
iret
aas
jo
stos
daa
and
inc
in
inc
xchg
and
es
in
push
add
xchg
cld
jnp
and
js
sbb
push
addr16
jne
flds
or
jmp
push
ficompl
addl
inc
negl
push
xor
jg
sbb
cmpsb
stos
cmp
nopl
push
bound
inc
bound
leave
aam
mov
call
aas
ret
mov
jp
mov
aas
pop
inc
sbb
pop
push
int3
xor
push
dec
mov
push
mov
ds
fcoml
testl
pop
ds
sbb
movsb
fwait
add
lea
xchg
xchg
mov
and
nop
sbb
cmp
subl
pop
or
arpl
dec
aaa
inc
or
dec
pushf
imul
outsl
xlat
jmp
xchg
sub
test
sbb
pop
or
jecxz
jnp
mov
imul
mov
mov
push
push
or
inc
jg
pop
out
fistl
cmp
enter
mov
and
push
mov
test
xlat
daa
adc
sub
mov
scas
pop
bound
aam
inc
lahf
push
inc
sub
sbb
pop
ficompl
xchg
lea
lret
push
in
testb
xor
test
fwait
push
cs
pop
fwait
mov
jmp
fucomp
data16
fimuls
add
das
xchg
icebp
pop
dec
decb
xor
subb
sti
rol
mov
in
out
and
push
ret
add
bound
mov
in
cmp
mov
mov
cld
cmpsb
cmpsb
jne
jne
loopne
dec
jae
xchg
inc
cmpsb
push
pop
aas
data16
cmpl
iret
aaa
popf
lcall
sbb
cmpsb
mov
sub
data16
adc
movsl
leave
mov
sub
les
jb
lea
je
jbe
add
pop
es
shll
cmp
and
std
mov
mov
pop
addr16
lcall
pop
mov
cmp
es
jle
ljmp
fwait
loop
in
or
jp
xchg
mov
add
cmp
mov
push
sub
xlat
int
add
pop
sub
pop
nop
sub
xchg
cmp
adc
adc
xchg
addr16
sbb
mov
push
es
insl
jmp
pop
int
int
shr
repz
add
stos
or
xchg
test
arpl
push
pop
xchg
js
fwait
xchg
dec
lods
orl
repz
das
adc
cmpsb
gs
mov
and
sti
or
fstpl
std
and
test
arpl
loope
out
mov
inc
scas
inc
sub
cmp
adc
mov
loope
cmp
mov
cmp
cmpsl
jno
adc
fwait
mov
mov
aam
adc
orl
repnz
call
lret
mov
xor
arpl
mov
aas
cli
adc
repnz
mov
int3
or
mov
inc
xchg
jbe
add
sbb
push
adcl
xchg
ss
pop
and
mov
jbe
dec
push
pop
pop
inc
iret
adcl
testl
push
pop
mov
fsubl
mov
test
push
jge
cmc
cmpsb
lahf
cmp
dec
loopne
inc
mov
fwait
inc
ja
fdivs
jns
add
pop
je
mov
add
mov
jne
adc
mov
mov
jmp
inc
ss
adc
mov
mov
ja
fmul
fcompl
popf
inc
orb
movsb
pop
push
and
cmc
cmp
jne
mov
add
mov
jbe
adc
mov
mov
ja
fdivs
jns
add
lds
aaa
cmp
rcrb
dec
pop
rorb
aam
sbb
and
inc
jbe
inc
mov
ss
pop
divl
inc
mov
sti
add
ljmp
pop
adc
xor
cmc
jl
push
fwait
jne
push
xor
and
int3
iret
enter
mov
aaa
test
xorb
mov
es
je
inc
aaa
jne
movsl
mov
cmc
inc
and
jae
mov
mov
xchg
mov
jbe
add
ss
mov
cs
xchg
adc
std
push
and
ljmp
ror
jnp
sub
dec
fwait
in
mov
cmpsb
sbb
add
mov
xchg
adc
imull
inc
adc
inc
ja
fmuls
fwait
pop
add
enter
sti
add
xor
cmc
sub
mov
xor
popl
mov
je
sti
add
xchg
ficoml
idivl
fnstenv
sub
shlb
rol
sbb
add
mov
adc
std
push
cmp
sti
add
xchg
iret
pop
jbe
rorb
xchg
divl
jmp
and
xor
int
mov
fmulp
fstpl
filds
nop
clc
jmp
sar
test
bound
lret
push
push
jecxz
sub
jmp
arpl
test
and
loopne
sub
mov
test
loope
sub
lods
push
out
mov
mov
aaa
loopne
les
add
addl
lret
add
dec
add
pop
dec
lret
dec
ret
dec
mov
daa
dec
jne
lock
mov
mov
mov
subb
or
or
or
or
mov
mov
mov
mov
imul
sub
and
movsb
call
aaa
mov
je
xor
cmc
ljmp
cmp
imul
aaa
mov
adcb
mov
ror
mov
iret
enter
xchg
adc
lcall
int3
mov
inc
mov
jle
mov
fisubrl
adc
repz
jle
ret
int3
fwait
test
jmp
add
jl
inc
pop
pop
loope
rorb
sbb
shll
jmp
test
icebp
cmp
add
mov
enter
lods
jg
je
imul
inc
mov
mov
xchg
push
sub
mov
lcall
jbe
sbb
mov
test
jl
mov
inc
sub
stos
enter
xor
fcompp
lret
lds
cmp
aaa
aaa
iret
pop
ret
sub
das
or
enter
xchg
leave
xchg
lock
and
jbe
sub
xchg
lret
jmp
or
pusha
cld
lea
pop
addl
pop
clc
orb
jge
adc
add
xchg
pop
sub
xor
mov
mov
pop
pop
inc
fadd
dec
inc
add
aam
add
mov
jmp
pop
dec
inc
sub
cmc
jg
sub
jnp
aas
dec
push
cmpsb
data16
jns
aaa
cmp
add
adc
cld
cwtl
ret
xor
push
mov
lods
fs
adc
xor
cmpsl
shr
pop
iret
sub
jnp
push
sbb
pop
cmp
mov
fwait
mov
mov
xchg
push
aaa
xor
inc
push
shlb
outsl
jg
pop
mov
out
in
mov
dec
jmp
push
stos
jg
lea
sub
pop
xchg
addr16
push
cs
sbb
pop
inc
push
xor
pop
testl
stos
push
iret
pop
push
and
dec
lcall
clc
rcrb
in
sahf
les
sub
lods
out
repnz
mov
cli
pop
ss
push
jmp
mov
mov
out
mov
mov
mov
sub
xchg
jb
xlat
push
addl
aad
aam
xor
pop
push
cmpsb
sub
jge
insb
out
pop
inc
sub
lcall
pop
sti
adc
outsl
test
cmp
and
pop
ss
sbb
pop
clc
xcrypt-cbc
cmpsl
rcrl
push
aas
jnp
mov
add
sub
mov
idivb
pop
and
dec
pop
mov
mov
fcompl
push
mov
xchg
inc
lods
bound
movsb
push
xchg
pop
mov
jmp
ss
or
outsl
inc
ja
mov
aaa
mov
incl
in
bound
testl
xlat
jecxz
sbb
loop
mov
dec
mov
and
fwait
xchg
fadd
daa
lock
divl
sub
xchg
fisttpl
sti
push
dec
lcall
addl
fcoml
fdivl
add
arpl
pop
fisttps
cmp
xchg
cmpsb
int3
es
mov
pusha
das
pop
outsl
iret
mov
fsubrl
sahf
xor
movsl
pop
sbb
cmp
outsl
xor
xchg
pop
jmp
and
sbb
xchg
cmp
sarb
insb
stos
xchg
lods
sar
jnp
xor
push
outsl
icebp
outsl
push
or
sbb
dec
cli
jmp
inc
pcmpeqb
push
jnp
xchg
sti
aaa
mov
mov
adc
stos
xchg
cmp
push
mov
int3
pop
insl
sub
or
pop
test
inc
mov
jmp
dec
mov
inc
mov
cmp
mov
and
pop
cmpsb
jnp
mov
mov
xchg
adc
xor
and
mov
int
adc
push
loopne
adc
mov
sbb
xor
pop
push
movsb
xchg
sub
lods
mov
stc
ffree
aam
and
aaa
mov
jo
pop
test
std
adc
mov
cmp
std
adc
mov
and
test
in
int3
mov
cmp
std
adc
mov
cmp
mov
stc
scas
out
mov
add
int3
mov
cmp
std
adc
mov
cmp
mov
cmp
std
adc
mov
cmp
mov
dec
loopne
adc
adc
mov
cmp
std
push
sub
test
loopne
adc
adc
mov
cmp
push
hlt
push
data16
xchg
rolb
push
mov
sub
sub
daa
pop
sub
fwait
cmp
add
xor
jmp
inc
or
push
aas
outsl
jnp
addl
mov
cmp
test
push
sti
out
testl
cmpsl
mov
rorl
fstpl
leave
jle
adc
pop
lods
mov
sbb
aam
lahf
imul
pop
adc
push
addr16
push
call
xchg
clc
lock
aad
xchg
push
ja
pop
lods
movsl
das
add
ja
in
jnp
inc
in
push
mov
mov
dec
test
bound
mov
mov
mov
push
xor
arpl
pop
cmp
push
lret
xchg
subl
outsl
dec
arpl
lahf
sbb
sti
jmp
adc
xchg
addr16
push
cs
add
arpl
mov
adc
out
dec
test
in
jmp
cmp
iret
sbb
mov
out
xchg
mov
ljmp
mov
test
aaa
dec
sub
daa
push
jnp
push
mov
cmp
inc
std
rol
xlat
shll
sub
pop
scas
ret
mov
or
push
dec
push
nop
mov
and
test
jne
out
push
inc
cs
stos
inc
inc
inc
out
addr16
out
movsl
pop
sti
lret
out
ret
bound
repz
dec
out
nop
aaa
inc
pushl
xchg
cmp
xchg
imul
bound
and
xchg
das
or
repnz
bound
aas
inc
cs
notb
sbb
int3
push
repz
push
mov
inc
testb
jmp
les
ret
insb
cli
xchg
cltd
mov
iret
addr16
lret
insl
push
dec
lret
stos
push
adc
movb
ds
push
les
ss
cmp
les
xor
cmp
adc
mov
aaa
push
push
sbb
xor
scas
mov
rcrl
xor
pop
sahf
aam
imul
dec
fucomip
pop
xchg
xor
negb
inc
es
push
mov
and
mov
lock
fists
or
push
or
loopne
cs
shld
xchg
das
push
fwait
ss
in
bswap
cmp
or
in
daa
pop
adc
dec
sbb
stos
dec
inc
inc
add
das
jb
and
aaa
adc
repnz
or
mov
movsl
inc
pop
mov
cmp
add
jge
stos
mov
sbb
stc
sahf
push
xchg
pushf
pop
mov
pop
xlat
and
aaa
push
push
bound
int
loopne
shrl
xchg
rcr
jge
aaa
jno
jp
add
daa
addr16
cmp
mov
daa
rdrand
cmpsb
cld
and
cmp
mov
int3
mov
xor
add
push
push
in
mov
xor
movsb
loop
dec
faddl
cmpsb
sub
imul
cmp
mov
in
pop
ret
inc
xlat
pop
aas
fwait
inc
jp
loope
adc
movl
sbb
subl
jb
and
xor
dec
adc
je
aaa
je
pop
imul
xor
xchg
or
xor
xchg
xchg
test
xchg
add
or
mov
aaa
sub
mov
rclb
or
ja
bound
cs
arpl
inc
push
in
pushf
jge
inc
out
xor
inc
adc
addl
dec
sub
mov
mov
movsb
cmp
mov
adc
and
ret
outsb
outsl
dec
pushf
xor
bound
lret
dec
dec
scas
les
cmp
jg
dec
js
jle
mov
add
adc
lret
push
fwait
jp
xlat
outsl
pop
xorl
pop
and
mov
scas
iret
fs
movsl
adc
aad
dec
dec
cmpsb
or
test
lcall
ret
add
jbe
mov
xlat
xchg
lds
nop
andb
mov
mov
mov
mov
and
xchg
mov
cmpsl
lea
addr16
fisttpl
sahf
and
or
xor
cwtl
jnp
xchg
jl
iret
popf
push
xlat
jl
into
and
je
mov
add
mov
jmp
sbb
rclb
jl
lods
add
mov
xor
push
lds
xchg
popa
mov
cmpsb
gs
les
stc
lock
fildll
mov
xchg
push
sub
inc
jge
sub
std
outsl
pop
jbe
cltd
subl
xorb
cmpsb
test
push
bsr
xchg
aam
xor
jbe
imul
scas
bt
xchg
mov
ret
jle
in
ss
inc
fstl
je
add
xchg
loope
gs
arpl
push
sahf
in
push
movsl
adc
sub
shlb
adc
pop
and
adc
out
clc
mov
clc
adc
jnp
inc
or
cmp
xchg
jle
pop
jnp
add
xchg
clc
rclb
clc
inc
mov
shlb
push
add
inc
andl
rorb
adc
lods
jae
movsb
jnp
jmp
push
jg
scas
jno
ss
mov
or
jg
jmp
mov
jae
enter
and
push
frstor
dec
cmc
jg
mov
loop
arpl
mov
arpl
inc
adc
xchg
pop
cmovbe
scas
aas
lods
pop
das
xchg
mov
push
sbb
and
aaa
xchg
cmp
inc
jo
inc
xchg
jb
mov
mov
jb
and
jg
rclb
sub
sub
mov
push
fidivs
lcall
das
jnp
shl
sub
scas
iret
iret
push
mov
mov
xlat
aaa
push
and
sub
nop
push
out
push
jg
shrb
adcl
and
outsl
xchg
push
pop
mov
divl
add
fsubl
imul
out
dec
lret
ljmp
arpl
ret
sbb
adc
test
mov
filds
in
jmp
jo
out
push
pop
test
fistpll
inc
pop
insb
pop
leave
pop
into
out
test
jns
or
gs
aaa
dec
cmp
pop
loop
das
cmp
or
cmpsb
loope
arpl
aaa
cmp
sarl
imul
or
in
dec
andl
inc
mov
xor
mov
int
jecxz
xor
out
add
pop
push
test
scas
mov
mov
cmpsl
add
fbld
push
fisttps
add
add
push
repz
xchg
loop
ficompl
std
mov
out
mov
stos
aaa
xchg
xchg
call
sti
adcb
push
es
pop
dec
and
int3
lahf
iret
push
pop
xor
pop
dec
inc
push
inc
mov
sbb
xor
aaa
push
mov
test
sub
out
mov
jmp
xor
insb
lcall
cmp
mov
inc
addl
dec
xchg
mov
xorl
push
ret
dec
xchg
push
test
lock
mov
and
stos
lea
lret
pop
imul
mov
cs
loopne
aaa
out
mov
inc
loop
dec
dec
xchg
pop
test
mov
or
lret
adc
outsl
lret
loopne
push
or
push
out
dec
aaa
sti
mov
xor
pop
imul
data16
insl
ja
jp
pop
imul
les
subl
lret
cmp
xor
fistpll
adcl
in
or
rclb
push
push
jle
adc
clc
inc
jp
jmp
out
mov
xchg
cmp
test
pop
xchg
push
mov
adc
push
out
ja
bound
jnp
addr16
das
es
fs
push
push
imull
sbb
test
mov
out
mov
sub
cwtl
xchg
daa
or
sub
cld
sub
xchg
and
outsl
dec
jne
or
xor
data16
addr16
outsl
out
xchg
icebp
outsl
adcb
inc
rorb
sbb
shrl
int
adc
dec
aam
ja
loopne
inc
sub
and
sub
mov
sub
aaa
inc
loopne
sti
repz
sub
xchg
adc
in
in
pop
or
cmp
ja
lret
adc
inc
leave
pop
pop
sbb
push
xor
or
sti
adcb
mov
jnp
sub
sbb
mov
cs
mov
jp
pop
sub
inc
lea
mov
test
data16
insl
add
pop
or
sub
lret
es
leave
mov
in
ljmp
in
aad
mov
pop
pop
cltd
xchg
pop
test
in
data16
dec
int
jecxz
iret
push
mov
jbe
rdtsc
rolb
bound
sbb
lcall
movsl
enter
and
cs
pop
or
xchg
inc
sub
es
sbb
imul
dec
in
jmp
idivl
push
int
mov
mov
xchg
xor
sti
inc
adc
fs
mov
adc
push
xor
call
and
add
xchg
inc
fwait
mov
cld
sahf
and
inc
jbe
daa
es
es
push
mov
and
rolb
lds
dec
jle
out
es
test
pop
or
in
jecxz
mov
mov
and
dec
sti
push
in
jo
push
inc
push
gs
in
mov
andb
jecxz
lahf
xor
addr16
int
aas
adc
jg
jmp
orl
fstl
push
xchg
and
cli
mov
iret
movsb
movsl
ds
dec
dec
or
jmp
or
in
std
fiaddl
cmp
xor
mov
lock
pop
lock
adc
inc
jl
cs
out
idivb
ret
aaa
cmpsb
mov
ret
test
out
andl
lds
xor
dec
cmpsb
lock
aaa
cs
rclb
shlb
xchg
and
jnp
daa
call
lock
leave
in
or
dec
mov
aas
divl
adc
add
aaa
mov
lock
or
sub
adc
adc
pop
js
gs
cmp
out
outsb
out
mov
test
add
pop
ss
push
icebp
cld
outsb
lea
jle
mov
sub
scas
cld
and
xor
shrl
jl
rol
lea
addl
rcrl
andps
mov
roll
jae
iret
sarl
lods
inc
cs
scas
rol
cs
leave
fwait
ljmp
jg
push
add
aad
and
popa
rcl
inc
add
or
jne
xchg
jae
insb
enter
dec
fsubs
add
test
push
and
loopne
push
int3
lcall
jle
test
jmp
btc
push
xor
add
push
add
cwtl
test
ljmp
inc
cmpsb
sub
and
push
mov
fistl
addl
and
jmp
push
adc
inc
adc
push
and
aaa
enter
push
and
lahf
out
xchg
mov
pop
enter
leave
pushf
xchg
ds
mov
adc
int
and
and
icebp
fs
bound
dec
pop
enter
es
movsl
in
add
in
cltd
inc
add
add
test
cmp
incb
cmp
cmpl
clc
sbb
outsb
ja
je
icebp
adc
insl
push
jle
mov
sti
lret
pop
jo
xchg
idiv
out
lods
pop
repz
pop
push
popf
xor
mov
in
xchg
inc
xlat
out
sub
cmp
mov
xlat
andl
pop
ud1
mov
out
pop
cmp
add
imul
xchg
inc
orb
pusha
fnsetpm(287
pop
mov
inc
xchg
ret
sarl
pop
jg
xchg
test
xchg
popf
aam
cmp
in
cmp
enter
mov
aad
lods
mov
inc
pop
xor
add
fucomp
xchg
cmp
icebp
scas
xor
xchg
pop
test
jnp
xchg
jbe
xchg
inc
cmp
rorl
pop
fisttps
fwait
mov
bound
push
aam
test
stos
fildl
fs
dec
cmp
xlat
cmpsb
mov
rcl
pushf
pusha
add
divl
sbb
inc
mov
xor
xor
testl
aaa
dec
jle
rcll
mov
adc
ret
push
jl
jno
jbe
test
or
adc
fs
mov
mov
into
add
pop
push
xor
adc
adc
cmp
xor
push
popa
and
jae
lahf
ja
xor
inc
cmp
addr16
and
inc
movsl
decl
push
lds
xchg
in
aaa
dec
xchg
sbb
adc
dec
in
dec
cltd
cmc
sub
xlat
je
pop
lods
clc
cld
push
push
sti
adc
mov
loopne
fildll
pusha
jne,pt
ds
int
jmp
es
sbb
or
jecxz
fisttpl
clc
insl
xchg
cld
push
clc
push
sbb
push
aad
pop
imul
xor
or
sub
mov
int3
push
mov
lahf
add
stos
lock
add
xlat
cmpsb
push
dec
repnz
xlat
or
cmp
js
das
stos
xchg
cltd
out
aaa
fistl
adc
aam
rcrl
sub
add
fistps
ror
pop
inc
insl
push
lods
sub
jne
div
outsl
add
push
xchg
std
push
mov
or
and
ror
clc
test
or
std
push
fiadds
loop
popa
gs
pop
lds
push
mov
pop
push
das
push
test
inc
fwait
cmp
in
pop
xchg
faddp
mov
sub
jp
int3
comiss
lock
mov
int
sub
sub
or
movsl
add
pop
ds
xchg
push
push
inc
and
sub
inc
sbbl
xchg
adc
push
pop
cmpsl
scas
jno
dec
mov
mov
unpcklps
movsl
imul
movsl
cltd
and
add
pop
cltd
shll
push
xor
sub
cs
dec
mov
sahf
bswap
dec
mov
pushf
xchg
pop
mov
adcl
enter
or
jmp
or
jnp
ds
mov
jmp
addr16
leave
mov
jae
aas
xchg
into
and
jg
fs
popa
mov
pcmpgtw
or
stos
daa
mov
adc
pop
push
lock
out
cs
cmp
jne
or
clc
mov
cmpsl
pop
jg
dec
ljmp
sub
test
pop
or
dec
jne
jo
cwtl
test
pop
shll
jnp
dec
xor
xor
test
popf
pop
cmp
mov
push
dec
pop
and
fisttpl
mov
sti
jmp
addr16
jmp
cmp
sahf
and
int3
jp
ret
mov
xor
inc
mov
les
ja
divl
adc
mov
mov
pop
movsl
orb
mov
lock
loopne
add
dec
cmp
aaa
out
iret
addr16
jne
mov
stc
popa
pusha
ja
pop
pop
push
repz
call
adc
mov
xchg
add
mov
std
adc
inc
rorb
sti
add
lods
and
xchg
or
xor
ss
aaa
out
cmpsb
lock
push
xor
push
lock
ljmp
xor
call
cmp
aam
imul
in
mov
and
fbstp
outsl
mov
jge
and
pop
addl
out
adc
mov
or
mov
decl
mov
dec
cmp
mov
jo
xchg
aaa
push
dec
push
cmp
or
imul
inc
ud1
repz
andl
nop
add
pop
sbb
jne
push
xlat
dec
dec
cmpsb
cwtl
inc
inc
lock
xchg
dec
ljmp
jb
cwtl
dec
das
add
lock
inc
dec
pushf
add
add
lcall
ja
jle
clc
jecxz,pt
sub
push
mov
adc
sub
inc
fistpll
xor
int
ss
and
xchg
lret
xor
add
sub
int
sarb
adc
sub
mov
and
jecxz
leave
cs
jae
cmp
mov
jnp
pop
sbb
bound
jmp
xchg
jp
mov
pop
mov
mov
mov
mov
mov
lea
pop
pop
in
cwtl
icebp
xlat
test
and
test
aaa
pop
inc
pop
jmp
jnp
xor
mov
xlat
add
out
js
sub
ffree
bound
push
pop
clc
dec
rcr
mov
xchg
jns
or
sub
in
and
pop
pop
pop
dec
dec
pop
pop
mov
fnstenv
lock
push
xchg
xor
cmp
push
jg
or
cmp
jo
mov
push
push
mov
pop
popa
and
pop
push
stc
push
jmp
adc
loopne
imul
movsb
clc
lock
repz
test
xchg
mov
in
jno
fstl
mov
push
test
nop
push
pop
pop
lock
pop
mov
sti
mov
xor
test
xchg
pop
fldl
and
clc
sahf
fists
iret
xchg
aas
fwait
int
or
xchg
jg
dec
seto
ja
xchg
aam
push
pop
es
xchg
add
fs
xchg
inc
repz
and
push
xchg
out
mov
lahf
jecxz
addr16
pop
popf
mov
add
fsubrl
addr16
dec
aaa
pop
mov
jb
jmp
xchg
je
sbb
test
and
push
in
mov
fists
add
lock
dec
into
out
cmpsb
add
aam
xchg
inc
inc
stos
es
xchg
pop
rolb
xor
dec
pop
jle
jecxz
pop
call
dec
jge
ss
jmp
outsl
mov
aas
push
mov
cmp
add
ljmp
mov
inc
add
mov
movsl
rcl
add
push
inc
pop
es
shll
xchg
aaa
iret
addr16
scas
or
pop
dec
dec
out
add
dec
iret
xor
sarl
adc
scas
std
stos
sti
dec
das
pop
js
cltd
aas
lds
imul
fidivrl
inc
dec
adc
cmp
mov
push
sbb
int
shl
xchg
mov
cld
leave
inc
add
sbb
xchg
and
das
call
mov
push
pop
adc
dec
arpl
and
sub
mov
jecxz
clc
pop
jl
cmp
and
adc
inc
testl
daa
fcompl
add
rcrl
pop
shlb
dec
test
pop
add
xchg
mov
mov
adc
mov
jae
mov
xchg
add
out
mov
jp
sahf
inc
xor
mov
mov
mov
pop
imul
mov
jmp
call
in
imul
aam
fdivrs
sbb
xchg
lret
cs
mov
jmp
pop
jno
pop
pop
popf
push
cmp
xlat
pop
and
push
ja
fwait
and
add
mov
jae
test
mov
lods
call
fcompl
repz
cmp
andb
dec
xor
leave
mov
decl
jp
ss
lret
and
push
test
pop
and
out
add
movsb
jo
add
dec
sbb
adc
rclb
and
inc
inc
adc
dec
ja
xlat
inc
cmp
dec
and
push
cmc
adc
push
aad
fdivl
jp
mov
sahf
add
fwait
and
enter
xchg
mov
jb
ds
out
mov
pop
aas
mov
jp
pop
sub
mov
ret
push
push
and
aad
dec
push
mov
mov
enter
adc
popa
das
inc
pop
idivl
xor
leave
mov
inc
dec
jg
inc
rolb
iret
cmp
mov
test
push
and
pop
pop
stc
das
inc
fwait
xor
pop
or
shlb
aaa
js
out
pop
add
sbb
pop
inc
sub
add
psrld
dec
add
dec
push
std
lds
mov
popl
xchg
mov
inc
scas
inc
xchg
add
stos
xor
das
daa
pop
iret
xor
addr16
xchg
aas
cs
mov
xchg
lea
or
stos
out
jle
cld
flds
in
cmp
jbe
je
das
pop
xor
xchg
aaa
push
gs
or
or
mov
out
out
test
das
push
test
arpl
pop
outsl
popa
lret
jle
imul
into
jae
jg
pop
dec
cmp
inc
adc
add
xchg
rcrl
setae
sahf
addr16
xor
idiv
jg
sbb
add
inc
movsb
mov
push
std
mov
push
jg
ja
pop
push
sbbl
xchg
jno
xor
add
les
jmp
push
cmp
inc
mov
dec
pop
cmp
inc
cmpsl
pop
movsb
mov
idivl
aaa
mov
mov
sbb
or
cmp
mov
adc
or
incb
adc
bound
leave
clc
xchg
cld
ljmp
adc
sub
shlb
mov
mov
fcomi
mov
adc
or
rolb
sub
cmpsb
and
cmp
fsts
imul
rcrb
out
xorl
pop
push
or
sub
inc
inc
sbbl
jmp
mov
inc
or
cltd
sub
out
or
imul
aaa
movsb
mov
jecxz
or
retw
sarl
xchg
out
out
add
cld
addr16
out
add
repz
xor
lret
jmp
inc
mov
cmpsl
lods
loope
pop
and
jp
ret
pop
or
or
dec
push
lcall
push
sbbl
mov
jle
inc
jns
xor
push
mov
push
in
add
syscall
xor
pop
sbb
stos
pop
inc
xor
in
xor
pop
xchg
xchg
xor
sub
push
sarb
das
mov
imull
push
mov
jl
jle
add
imul
scas
and
aas
push
lret
addl
xorl
mov
int
jecxz
cmp
es
pop
les
pop
comiss
sub
stos
pop
bound
addr16
mov
ss
lret
mov
jg
and
cmp
aaa
je
inc
jecxz
aas
adc
testl
add
in
adc
addr16
mov
out
pop
fimuls
jle
aas
stos
addr16
push
push
xor
xor
adc
lret
outsb
loop
jg
cmpl
das
and
sbb
add
add
cmp
jle
jle
dec
adc
loopne
enter
jo
mov
cmp
xlat
test
das
cmp
cmp
bound
xchg
rolb
and
outsb
cmp
sbb
add
out
sub
cmp
cmp
pusha
das
mov
das
js
jle
mov
scas
dec
xchg
out
mov
pop
or
and
aaa
icebp
hlt
xor
sub
stc
cmpl
popa
add
xchg
rcr
jmp
daa
fwait
inc
pop
pop
or
fwait
dec
lret
out
mov
roll
or
pop
mov
xor
dec
jle
adc
orl
icebp
adc
test
into
fidivs
xor
fs
test
xor
pop
out
addl
out
inc
cli
adc
fimuls
repnz
les
pop
xor
add
pop
ror
outsb
pop
inc
sti
xchg
incb
fimuls
out
aas
or
lret
or
aas
stc
xchg
test
or
and
rcpps
rorl
test
push
lods
and
xor
adc
xchg
sbb
inc
imul
jg
jmp
sbb
adc
and
jg
inc
aaa
cmp
movsl
cltd
fwait
pusha
jnp
sbb
jae
xlat
mov
jp
insl
mul
out
addr16
cmp
daa
int3
pop
imul
push
inc
pop
int
push
bound
cmp
out
cmpsl
popa
stos
cmp
popa
add
xlat
movsl
imul
mov
jae
add
adc
out
cmpsl
add
insl
insb
fsubrs
gs
or
lret
sti
jno
sub
mov
dec
sbb
dec
or
loopw
cmpsl
das
sbbl
add
outsl
out
xchg
or
cmpsb
mov
imul
cmp
dec
repz
dec
xchg
add
fs
incb
jecxz
lods
iret
push
xchg
test
pop
insb
dec
lret
sbb
jmp
pop
xchg
push
imul
xor
scas
lods
jo
mov
add
imul
mov
mul
mov
or
adc
cmp
or
rcrl
xchg
mov
xor
xchg
dec
mov
cs
inc
vcvttpd2dqy
cmp
mov
dec
in
sub
cltd
inc
or
add
into
mov
imul
aam
rcll
cmp
dec
imul
out
sub
ds
push
test
push
lods
sti
mov
push
arpl
je
scas
and
xchg
sub
push
jg
sub
push
push
adc
aam
push
bound
mov
out
pop
fwait
mov
in
fadd
pop
ja
adc
push
cmp
cmp
pop
adc
push
sti
xchg
mov
inc
cltd
xchg
xor
pop
sub
cltd
insb
js
lds
xchg
dec
ds
inc
pop
stos
loope
mov
add
add
cli
push
jns
or
test
fld
aaa
in
cli
xchg
cwtl
ret
xor
ret
test
andl
sub
test
dec
gs
in
roll
shrb
jbe
les
jmp
push
push
pop
cmp
jb
push
xor
add
xchg
aad
sub
adc
xchg
push
lods
push
pop
xchg
xchg
or
jmp
mov
push
stc
popl
aaa
ret
arpl
and
jp
inc
in
stos
and
icebp
aaa
add
mov
inc
sub
dec
jmp
arpl
enter
imul
mov
add
mov
ret
mov
pop
fxch
cmp
addr16
cmp
roll
add
outsl
js
es
idivl
or
or
test
sti
orl
cld
mov
mov
or
xor
into
or
mov
nop
mov
sub
pop
cmpsl
sub
sbb
into
push
mov
fdivrs
cld
imul
mov
and
cwtl
int3
pop
cld
pusha
and
das
clc
subb
or
aam
stos
nop
mov
ret
sahf
mov
adc
cmp
adc
fmull
cmp
test
or
lods
jg
pop
mov
dec
fsubp
loop
add
and
jbe
outsl
add
push
out
mov
mov
pop
dec
dec
mov
imul
xor
decl
fidivs
dec
lods
mov
or
decl
xchg
dec
inc
cmp
stos
sbbl
inc
fimuls
push
jg
ja
pop
xlat
insl
xor
je
push
ja
mov
pop
mov
orl
or
das
insb
xchg
mov
ja
inc
ljmp
or
push
pop
ja
xchg
pusha
inc
ret
out
mov
into
js
pop
rcll
sbb
ja
xchg
or
out
fwait
or
jo
mov
mov
ret
popf
xchg
lret
sbb
out
push
inc
dec
sub
stos
fimuls
cmpb
test
push
daa
pop
sub
sbb
jbe
test
pushfw
inc
out
jbe
cmp
jg
pop
lods
nop
mov
testl
push
mov
jecxz
mov
jmp
lock
int3
in
pop
fsubrs
aam
sar
sbb
fdivrl
dec
fwait
bnd
aam
out
xchg
enter
jno
sub
jne
out
push
int
ja
daa
pop
das
cmp
fadds
inc
xlat
rorl
in
fistl
clc
xchg
cli
shrb
in
mov
lock
addr16
inc
add
cld
out
subps
cli
stos
sbb
adc
fwait
jge
add
clc
adc
fwait
imul
dec
and
aaa
and
call
imul
daa
popa
pop
xor
lods
adc
push
gs
or
adc
popa
pop
inc
into
dec
jecxz
addr16
inc
js
inc
push
pop
pop
mov
xor
mov
lods
insl
in
jle
std
push
cmp
mov
push
aad
and
lret
cmp
repnz
mov
sbb
movb
pop
xor
sub
pop
dec
xlat
push
fcomps
arpl
push
cmp
or
shlb
and
pop
popl
dec
mov
add
inc
pop
and
mov
and
aaa
popl
ret
xchg
adc
jge
in
inc
push
inc
aaa
ja
cmpsl
push
dec
push
sub
and
xor
add
xchg
push
mov
xchg
and
xchg
and
mov
xlat
mov
dec
jae
aam
leave
imul
cmp
pop
daa
mov
xchg
movb
sbb
pop
hlt
sahf
and
xchg
xchg
ret
jbe
das
jg
or
or
and
rolb
aaa
cwtl
mov
xchg
add
aam
jne
in
scas
jns
jp
inc
pop
ret
imul
cmc
and
jbe
hlt
pop
xchg
fdiv
int
sbb
and
mov
push
mov
cwtl
ja
out
push
xchg
mov
jle
test
out
mov
pop
push
add
dec
test
not
stc
shr
mov
lea
je
pusha
pusha
push
adc
pushf
pushf
pushf
mov
lea
jmp
repz
imul
rclb
loop
xchg
aam
aam
sub
push
insb
loope
int3
xor
fdivrl
not
inc
ss
dec
pop
and
and
xor
test
pusha
cmp
mov
call
pusha
dec
shr
or
mov
pushf
pushf
cmpb
push
call
call
fildl
jmp
mov
loopne
mov
mov
pop
jo
mov
orl
jge
and
notl
out
std
xchg
mov
cli
push
shll
push
inc
dec
cld
inc
cs
ljmp
mov
dec
pop
fildl
and
stos
nop
pop
xchg
std
popa
inc
mov
pop
push
dec
jb
add
lock
iret
jae
fcmovne
cmp
lcall
and
pushl
jecxz
cs
xorb
adc
jl
out
imul
cmp
cwtl
and
out
jmp
xchg
and
in
mov
sti
out
divl
jecxz
and
stos
fcompl
sub
fistpll
xor
std
das
mov
and
mov
das
xchg
jo
out
xor
add
mov
mov
ret
dec
cmp
xor
outsl
pop
jmp
mov
push
and
cmp
insb
sbb
loopne
test
stc
jecxz
cmpb
lock
int3
imul
scas
sub
mov
inc
mov
sub
insl
and
aad
push
fistps
inc
sub
push
push
ror
stc
neg
pushf
call
lock
mov
insl
or
inc
jbe
jno
movsb
fnstenv
xchg
jg
dec
push
sub
and
shrl
inc
sarl
xchg
test
leave
sbb
add
sti
ret
neg
xchg
pop
sbb
test
sub
xor
sbb
bound
jl
pop
jnp
daa
leave
das
xchg
popf
shlb
stos
xor
pushf
lea
call
call
jmp
add
movb
mov
mov
pushf
push
push
lea
jmp
mov
jmp
xor
mov
ror
mov
call
pusha
mov
cmc
pushf
add
mov
push
lea
jmp
pushl
pushf
sub
test
pushl
test
add
call
sub
cmc
clc
clc
mov
shl
pusha
mov
lea
jge
mov
call
cltd
setae
movsbw
movzbl
mov
pushf
pusha
pushf
movsbl
mov
push
mov
pushf
divl
movb
call
dec
pushf
call
neg
bsf
sub
lea
bsf
xor
setle
sub
rcl
mov
mov
setno
or
pushf
mov
shl
bts
btc
movzbw
add
lea
add
mov
pushf
or
add
pushf
jmp
call
test
test
add
jmp
dec
stc
bswap
bt
cmp
sub
movb
pushf
cmc
push
sub
test
jmp
shld
shl
btr
movzbl
rol
movsbw
xor
not
dec
pusha
bt
btc
bt
ror
shl
xor
cmc
ror
add
adc
jmp
push
lea
jmp
shld
pusha
mov
pushf
jmp
cmc
pusha
pusha
sub
pushl
movb
movw
pushf
mov
pushf
mov
lea
jmp
pushf
mov
call
pushl
push
lea
jne
jle
push
cmp
xor
movw
pushl
xchg
pusha
pushf
jmp
pusha
mov
pushf
pushf
popl
pusha
jmp
rep
jmp
lea
jmp
pusha
jmp
test
inc
pushf
mov
pusha
jmp
pushf
mov
mov
push
pushf
pusha
lea
jmp
call
mov
cmc
clc
jmp
mov
movb
lea
jmp
add
add
call
xchg
push
lea
jno
push
movl
jmp
dec
mov
jmp
bsr
rdtsc
call
cld
pushf
cld
push
call
rol
movsbw
mov
clc
adc
clc
mov
stc
call
pushl
stc
add
mov
mov
push
pushf
push
mov
lea
jmp
pusha
lea
jmp
pushf
call
cmp
mov
call
add
push
pushf
pushf
pushf
lea
jmp
rep
cmc
mov
rol
rol
bt
shld
mov
cld
pushl
popf
push
pushf
mov
push
lea
jmp
call
inc
add
ja
bt
xor
bt
pusha
jmp
not
xchg
cld
mov
mov
movsbl
lea
pusha
pushf
pushf
mov
not
movzbw
pushf
mov
pushf
cld
movw
jmp
cwtl
aam
aam
lahf
mov
or
mov
clc
cmc
cmc
bt
add
push
pushf
pusha
call
clc
cmp
call
movsbw
sub
call
pusha
pushf
mov
jmp
lea
jmp
push
mov
mov
mov
call
rcl
sar
add
mov
setp
or
mov
jbe
not
cmp
push
not
bt
call
pushf
test
not
bt
clc
cmp
bt
not
call
pusha
mov
clc
jmp
movzbl
mov
pusha
sub
push
movb
mov
pushl
lea
jmp
call
mov
lea
jb
pusha
push
pushf
mov
call
pushl
popl
push
lea
jmp
pushf
pushf
lea
jmp
lea
cpuid
cmc
test
pusha
bt
sub
cmc
pusha
pushf
bt
cmpl
jmp
mov
pushf
pushf
movw
mov
lea
jmp
pushf
push
pushf
popl
call
push
mov
mov
pushl
pushf
lea
jmp
pushl
sub
jmp
cmc
xor
pushl
clc
call
call
pushf
push
pushf
popl
pushf
mov
movb
pushl
popl
mov
lea
jmp
movl
pushf
mov
pushf
push
mov
pushf
pushl
ret
clc
cmp
cmp
test
sub
call
mov
pushf
lea
jmp
pushf
pushf
mov
mov
push
mov
movw
mov
jmp
mov
mov
call
push
jmp
mov
pushl
mov
movb
lea
jmp
pushl
rol
bt
jmp
cmc
mov
rol
rcr
movzbw
mov
test
mov
bt
clc
add
jmp
stc
inc
sar
mov
or
mov
jmp
clc
pushf
test
sub
jmp
rol
bts
clc
aam
mov
inc
pusha
ror
mov
pusha
mov
cmc
add
call
bt
cmp
mov
push
cmp
bt
cmc
add
pushf
lea
jmp
cmc
sub
call
lea
jbe
clc
sub
call
and
jmp
mov
pusha
mov
mov
pushl
lea
jmp
mov
pushf
stc
inc
mov
stc
push
call
jmp
add
test
cmc
stc
bsr
xor
sub
shl
adc
pop
lea
shrd
neg
add
add
not
pop
pushl
movzbl
bt
call
pushf
pushl
popl
push
pushf
pushf
lea
jmp
call
add
movzbl
test
pushf
call
push
call
or
pushf
sub
movzww
bt
xchg
stc
xor
bt
rol
pusha
pusha
call
push
mov
pushf
mov
push
push
push
pushf
mov
mov
pusha
lea
jmp
sbb
mov
mov
mov
cmp
push
test
bt
sub
push
div
jmp
lea
jne
dec
test
movsbw
xorb
sets
push
mov
pushf
pusha
lea
jmp
btc
shld
jmp
bswap
rcl
add
mov
bt
shl
mov
test
cmp
add
pusha
mov
mov
lea
jmp
pushf
popl
pushf
call
add
stc
stc
mov
pushl
neg
jmp
btc
aad
mov
call
pushl
pushl
popl
pushf
mov
mov
lea
jmp
pushf
popl
jmp
pushf
popl
pusha
mov
movl
jmp
sub
clc
shr
push
pusha
mov
push
pushf
popl
pushf
movb
pushf
push
pushl
popl
movb
pushf
push
lea
jmp
pushf
pushf
pushf
pushl
popl
pushf
pushl
mov
lea
jmp
jmp
jmp
push
push
call
lea
jne
test
bts
mov
cmp
bt
and
jmp
pusha
cmp
call
mov
movsbw
mov
push
pushf
pushf
push
pushl
ret
jmp
call
pusha
pushl
popl
mov
lea
jmp
lahf
jmp
pusha
rol
test
call
cmp
pushl
stc
cmc
add
jmp
pushl
popl
push
pushf
movb
lea
jmp
movb
call
mov
mov
lea
jmp
pushl
popl
movb
pusha
lea
jmp
mov
mov
push
push
call
pushl
popf
movb
movw
lea
jmp
add
jg
add
pushf
movb
push
lea
jmp
pushf
pushf
mov
movb
pushf
push
movw
lea
jmp
pushf
pusha
pushl
movl
pushf
pushf
mov
pushf
mov
pushl
ret
test
mov
cmc
cmp
bt
add
pushf
movb
pushf
lea
jmp
bt
call
push
lea
jmp
movb
pushf
pushl
popl
pushf
mov
lea
jmp
push
jmp
pushl
popl
movb
movb
pushf
lea
jmp
mov
call
xchg
lea
pop
movzbw
pushf
mov
setns
xchg
movzbw
xchg
bswap
mov
call
pushf
mov
pushl
mov
pushf
pushf
pusha
lea
jmp
cmp
or
sar
mov
cmp
pusha
bt
add
cmc
neg
push
add
test
xor
test
bt
add
bt
stc
pusha
cbtw
bt
sub
clc
cwtl
clc
sub
jmp
movsbw
push
movzbw
not
mov
movzbw
pushf
push
movsbw
lea
pusha
jmp
sub
cmp
bt
test
cmc
mov
call
lea
cmp
cmp
stc
sub
jmp
lea
jne
jmp
lea
jmp
cmc
pushf
sub
cmp
and
movb
mov
call
mov
bt
sub
jmp
mov
pushl
mov
pushl
ret
pushf
popl
jmp
mov
pushf
pushf
push
pushl
lea
jmp
pusha
push
call
jmp
pusha
call
push
call
pusha
mov
mov
mov
lea
jmp
btc
mov
rol
rol
bswap
add
pusha
clc
neg
jmp
bt
and
inc
btc
mov
cmp
add
pusha
pushf
lea
jmp
lea
pusha
mov
call
cmc
call
or
btc
shl
cmc
mov
shl
cmp
shr
add
jmp
pusha
lea
jmp
pushf
add
call
bt
mov
mov
ror
mov
cmp
push
sub
clc
cmc
jmp
push
lea
jne
movsbw
mov
bt
bt
stc
cmp
and
cmc
push
pusha
cmp
movb
push
jmp
add
movb
pushf
jmp
pushf
popl
push
call
cmp
stc
sub
pushf
jmp
mov
pusha
pushl
mov
lea
jmp
movb
pushl
mov
push
pusha
movb
movb
lea
jmp
push
call
push
pushl
popl
movl
movb
push
lea
jmp
mov
pushl
pusha
movb
movb
pushf
popl
movb
pushf
pushl
popl
pushf
pushl
lea
jmp
pushf
pusha
pusha
jmp
das
mov
adc
and
pushf
adc
mov
stc
pusha
bt
not
clc
not
test
cmc
pushf
and
call
jmp
pushf
mov
mov
movb
pushf
lea
jmp
lea
jmp
add
pusha
pushl
push
lea
jmp
lahf
bsr
notl
dec
bts
mov
call
lea
ja
cmp
test
sar
mov
lea
stc
btc
adc
lea
lahf
ja
sub
neg
pusha
not
add
lea
bswap
sar
btc
rcr
and
bswap
shrd
shrd
sub
not
not
mov
call
mov
stc
pusha
test
add
call
cwtl
mov
jmp
pushf
xor
movw
inc
pushf
pushf
decl
jmp
pusha
cmp
xor
mov
sub
cmp
clc
test
mov
pusha
sub
pushf
movl
pushf
mov
push
pushl
lea
jmp
mov
pushf
lea
jle
pusha
movb
mov
pushf
pusha
jmp
pusha
pushf
popl
call
push
call
mov
movw
pushf
movb
mov
lea
jmp
call
pushf
popl
pushf
pushf
pushl
popl
push
pushf
pushf
push
lea
jmp
movsbw
inc
pusha
inc
shr
shl
bts
xor
rol
movzbl
lea
rol
dec
and
pusha
cmc
lea
pushf
mov
stc
cmc
clc
sub
push
pushf
call
lea
shl
movsbw
ror
mov
bswap
add
mov
lea
clc
xor
xor
xor
pushf
shld
mov
call
lea
mov
cmc
stc
neg
pusha
bt
test
add
mov
jmp
pusha
lea
jmp
jmp
add
pushf
pushf
movb
movb
lea
jmp
or
bt
pusha
jmp
pusha
call
shl
pusha
jmp
pushf
pushf
pushf
popl
lea
jbe
push
pusha
pushl
popl
mov
push
pushl
pushf
lea
jmp
lea
jmp
pushl
movb
pushf
popl
movw
pusha
pushl
call
clc
stc
popf
pushf
pushf
pusha
lea
jmp
mov
jmp
pushl
popl
pushl
push
lea
jmp
or
xor
jmp
pusha
lea
jmp
daa
xor
rcl
stc
mov
or
shrd
ror
cmc
mov
adc
mov
test
add
stc
bt
pushf
bt
shrd
jmp
movl
pusha
not
call
pushf
push
movw
mov
call
mov
mov
pushf
pushf
popl
jmp
pushf
inc
bts
rol
pop
xor
neg
rol
add
neg
movzbl
pushf
mov
push
jmp
not
dec
test
mov
jmp
clc
sub
push
movb
mov
pusha
push
lea
jmp
mov
movw
pushl
lea
jmp
pushl
pusha
pushf
popl
jmp
mov
pushl
mov
not
bswap
jmp
pushf
pushf
popl
jmp
lea
push
push
movw
lea
jmp
jmp
pushf
sub
jmp
call
mov
bt
mov
or
pushf
jmp
pushf
aam
mov
inc
mov
clc
pushf
stc
jmp
or
cmp
cbtw
not
mov
test
push
pusha
pushf
sub
stc
jmp
mov
mov
lea
jmp
and
cmp
mov
pushf
pusha
mov
cmc
add
movw
pushl
movb
pushf
lea
jmp
or
shld
das
neg
mov
das
bswap
pop
rcl
test
pop
aad
pushf
rcl
or
mov
aaa
dec
and
pushl
popf
setnp
bswap
not
jmp
jmp
shll
mov
in
mov
incl
push
mov
call
pop
mov
lcall
adc
decl
push
sbb
mov
pushl
push
ljmp
sbb
jmp
sub
push
push
mov
call
and
ljmp
and
decl
mov
call
mov
jmp
sbb
mov
jmp
push
mov
call
and
pushl
adc
incl
daa
mov
aas
adc
aas
adc
call
push
call
and
mov
push
push
mov
call
and
lcall
mov
fldcw
mov
call
mov
ljmp
sub
call
and
call
mov
call
sub
call
pop
mov
fisubs
mov
ljmp
sbb
lcall
mov
call
adc
mov
dec
adc
fldcw
mov
push
push
mov
fldcw
mov
call
and
decl
mov
call
mov
clc
adc
incl
sub
jmp
mov
jmp
sub
decl
mov
jmp
adc
jmp
adc
jmp
mov
lcall
adc
push
push
mov
decl
decl
adc
call
mov
call
mov
push
sbb
mov
call
and
jmp
mov
call
adc
ljmp
adc
lcall
mov
lcall
mov
dec
sub
jmp
and
push
push
mov
fisubs
mov
call
mov
call
mov
lcall
mov
decl
and
call
pop
mov
jmp
adc
jmp
sbb
mov
ljmp
sub
jmp
mov
decl
mov
cli
and
mov
dec
adc
jmp
mov
pushl
pushl
mov
call
mov
jmp
mov
decl
adc
call
pop
mov
std
adc
mov
decl
ljmp
adc
dec
adc
pushl
sub
in
mov
in
mov
push
push
mov
decl
sub
jmp
sbb
mov
call
mov
lcall
mov
fldcw
mov
call
pop
mov
decl
mov
push
sbb
mov
call
and
pushl
and
call
sub
dec
sub
in
mov
push
push
mov
lcall
mov
call
and
mov
push
sbb
mov
lcall
mov
and
push
je
sbb
inc
add
pushf
pushf
lea
jmp
or
mov
inc
sub
mov
cmp
call
lea
jmp
btr
rcr
bswap
neg
mov
sub
jmp
mov
pushf
push
movw
push
lea
jmp
sub
bt
pushf
shr
pushl
mov
pushl
mov
push
call
pushl
popl
mov
pusha
mov
pushl
lea
jmp
push
pusha
jmp
call
push
sub
jg
pushf
add
pushf
lea
jl
pushf
pusha
mov
pusha
movw
lea
jmp
pushf
mov
mov
pushf
mov
pusha
pushf
lea
jmp
jmp
sub
stc
cmp
clc
shl
push
pushf
call
pushf
pushl
mov
pushf
push
pusha
pushl
lea
jmp
pushf
popl
call
pusha
call
mov
mov
push
movb
mov
mov
lea
jmp
pushf
pushl
mov
mov
pusha
pushf
movb
pushl
ret
jmp
not
mov
cmc
lea
bsf
mov
test
jl
add
call
call
cmc
cmp
bt
sub
pushf
cmc
clc
and
jmp
jmp
shrd
rcr
mov
stc
test
bt
pusha
xchg
cmp
jmp
jmp
pushf
call
lea
call
sub
jmp
pusha
pushf
lea
jmp
mov
mov
sub
jmp
push
jmp
mov
push
pushl
lea
jmp
sub
cmp
and
pushf
jmp
sub
pusha
xor
mov
jmp
bt
clc
ja
popf
pusha
pushl
pushf
lea
jmp
cmp
cmp
xor
pusha
rol
pusha
movw
bt
sub
call
pushf
pushf
call
cmp
add
call
mov
das
test
mov
bt
push
call
push
pusha
mov
call
mov
mov
mov
pusha
jmp
rol
aas
bts
mov
cmp
shr
and
push
mov
call
jmp
pusha
cmc
cmc
pushf
add
jmp
mov
pushf
pushl
lea
jmp
test
rcl
bts
adc
mov
pushf
clc
add
pusha
pushf
lea
jmp
call
lea
jmp
jmp
lea
cwtl
mov
movw
bswap
mov
call
call
jmp
ror
rcr
jmp
push
adc
test
rcr
mov
movw
pushf
test
cmp
xor
clc
cmc
pushl
movb
ror
stc
xor
clc
add
jns
add
push
bt
clc
xor
push
cmp
cmc
sub
bt
pushl
pushf
mov
clc
cmp
cmc
sub
call
call
jmp
pushl
push
lea
je
clc
test
pusha
sub
call
sbb
movzbl
sub
aaa
lea
movsbw
sbb
test
and
neg
stc
sub
pushf
lea
mov
mov
lea
bswap
jmp
not
cmp
add
pushf
xor
clc
pushf
pushl
cwtl
bt
cmp
sub
jmp
rol
mov
clc
add
pusha
pushf
pushf
lea
jmp
cmp
sub
push
lea
jmp
lea
mov
pusha
pushf
mov
mov
push
mov
movb
lea
jmp
mov
movsbl
setge
pushf
mov
cwtl
lea
pop
cwtl
mov
cltd
cwtl
mov
call
push
pushf
jmp
jmp
bt
xor
dec
shl
mov
pushf
call
lea
jne
shl
stc
pusha
xorb
lea
bswap
pop
push
lea
jmp
sete
not
repz
popl
bsf
shrd
mov
adc
adc
pushl
popl
sbb
rcl
bsf
xor
movl
bsf
rcr
mov
xor
xor
sub
bswap
call
mov
call
jmp
pushf
movsbl
jmp
mov
lea
jne
push
pushf
popl
pusha
jmp
jmp
shl
bt
stc
bt
jmp
pusha
pushl
push
pushf
lea
jmp
bswap
aam
mov
lea
lea
pusha
cmc
jmp
pushf
pushf
jmp
cld
xchg
cld
mov
mov
jmp
lea
pushf
mov
pusha
mov
movb
lea
jmp
mov
pusha
call
pusha
mov
push
jmp
mov
movb
mov
pusha
lea
jmp
neg
mov
sbb
test
cmp
add
mov
call
pushf
clc
sub
call
test
xchg
jmp
pusha
push
pushf
call
pushf
popl
call
mov
mov
movb
movl
lea
jmp
movsbw
bswap
inc
stc
bsf
pushf
shr
xor
pushf
stc
rcr
rol
btr
sub
bts
btr
jmp
pushf
movl
pusha
push
mov
pushl
pushf
movl
lea
jmp
bts
pusha
mov
stc
cmc
push
test
add
pushl
pushf
mov
lea
jae
mov
push
pushf
push
lea
jmp
jmp
pusha
add
pushf
jmp
lahf
mov
mov
inc
xor
mov
je
add
pusha
movb
call
pusha
jmp
pushl
not
stc
add
pushl
bt
test
xor
stc
test
test
call
pushf
lea
jmp
clc
cmc
bswap
jmp
cmc
cwtl
not
mov
jmp
bswap
inc
aaa
aas
mov
call
movb
lea
jmp
xor
lahf
dec
mov
stc
jmp
push
pushl
popl
pushf
pushf
push
mov
lea
jmp
mov
jmp
stc
add
mov
jmp
pusha
mov
pushf
mov
push
lea
jmp
xadd
ror
movzbl
aas
mov
pusha
and
pusha
mov
cmc
call
pushl
popl
mov
pushl
pushf
lea
jmp
pushf
popl
pusha
jmp
mov
pushl
pushl
mov
push
lea
jmp
pushf
jmp
add
push
push
lea
jmp
jmp
jmp
xor
bsr
mov
shl
bts
bt
lahf
mov
cmc
push
movw
cmp
sub
pushf
pushf
mul
mov
mov
push
mov
jmp
pusha
dec
bt
mov
cmc
add
stc
push
xor
test
add
jmp
not
lea
movsbw
inc
movzbw
sub
setle
xor
rcl
rol
clc
inc
and
sbb
mov
cmc
bt
test
add
call
pusha
pushf
mov
call
shr
call
call
call
clc
jmp
push
movb
mov
movb
pushl
pushl
movw
lea
jmp
pushl
popl
mov
lea
jmp
cmp
xor
sbb
dec
cmp
dec
mov
bt
add
pushf
mov
pusha
pushf
lea
jmp
push
mov
lea
jg
pushf
pusha
movb
mov
push
mov
pushf
lea
jmp
cmp
cmp
call
pushf
setnp
mov
jmp
jmp
stc
shr
pushl
movw
jmp
pushf
call
call
push
mov
call
cmp
add
jno
xor
stc
sub
clc
pushf
cmc
mov
bt
cmc
cmp
sub
lea
jg
pushf
push
mov
pushf
push
pushl
lea
jmp
push
movb
jmp
jmp
pushf
pushf
pushf
push
lea
jmp
