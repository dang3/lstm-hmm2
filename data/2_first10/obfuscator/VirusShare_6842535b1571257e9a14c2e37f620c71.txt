fdivrs
rcrl
mov
out
mov
xchg
aaa
and
icebp
adc
popf
inc
fs
in
inc
dec
clc
fs
enter
loop
cwtl
or
outsb
sbbb
addr16
mov
scas
in
xchg
pop
popa
jp
pop
pop
popf
mov
push
lret
ja
nop
inc
flds
pusha
sahf
shlb
aaa
add
mov
and
std
cwtl
cli
inc
aam
fistpll
jg
jle
push
or
jb
sbbl
orb
stc
and
dec
shl
xchg
sub
sub
jne
js
add
xchg
dec
mov
cs
loopne
jno,pn
mov
jecxz
enter
cld
or
push
test
add
rol
jle
pop
jae
jae
nop
adc
dec
inc
or
and
inc
sbb
mov
push
and
xchg
outsl
scas
push
rorl
jle
xor
pop
shll
push
movsb
stos
arpl
loop
pop
imul
and
or
pusha
lea
je
movzbw
setno
not
movzbw
mov
movsbw
pushf
lea
lahf
lea
call
movl
pusha
lea
jmp
push
movl
push
push
call
mov
ficompl
int3
cltd
mov
mov
loope
jmp
inc
cmpsl
cltd
xchg
dec
sbb
cld
and
push
pop
std
iret
je
pop
fimull
je
cwtl
mov
lcall
test
push
xchg
lods
bound
xchg
dec
xchg
fs
mov
sahf
xchg
push
xor
cmp
cmp
pushf
lea
je
pusha
lea
jb
push
cmp
push
movb
push
pusha
lea
jae
shl
mov
clc
mov
jmp
pop
push
pusha
pushl
ret
sti
daa
gs
sbb
mov
sarb
ja
mov
xorl
inc
sbb
push
jecxz
sbb
fisubl
push
mov
ss
pushl
jno
mov
inc
in
dec
mov
ss
ret
jle
clc
popa
mov
test
clc
sub
clc
movb
pushf
cmp
pushl
call
pushl
popl
push
cmp
pushf
pushl
call
bsr
shr
add
test
push
not
mov
inc
cmc
bt
push
cmc
shr
push
sbb
mov
push
mov
and
setne
push
shr
shld
or
not
push
btr
bts
mov
xadd
mov
sub
and
mov
call
jmp
clc
cmc
add
pusha
mov
push
lea
jmp
pusha
lea
call
call
mov
pop
lea
mov
push
pushl
push
pushl
ret
cmpb
pusha
lea
jne
lea
clc
dec
neg
mov
cmc
cmp
jmp
push
lods
add
jo
test
neg
pusha
jmp
adc
daa
dec
sbb
dec
ret
lea
in
mov
shl
sbb
rol
pop
repz
add
mov
repnz
mov
cmp
cmpl
cmp
dec
jmp
iret
jb
jg
cmc
ret
cs
adc
pop
movsl
cmp
cld
imul
fsubs
or
loope
les
jbe
mov
int3
adc
in
push
std
inc
sub
mov
fstps
sarb
les
adc
inc
ficoms
mov
inc
data16
inc
leave
pop
sub
push
mov
lea
not
mov
mov
pop
push
pusha
pushf
push
pushl
ret
sub
stc
rol
movw
add
pushf
cmp
cwtl
movsbw
pusha
lea
cwtl
mov
jmp
test
dec
sbb
add
orl
pusha
mov
pop
push
dec
pusha
sbb
sahf
bound
adc
ficoml
cmp
fwait
cmp
clc
and
lret
mov
xor
adc
or
fiaddl
loop
cmp
test
stc
inc
or
sbb
insl
scas
sbb
mov
lret
add
xchg
jnp
push
inc
shll
jmp
xchg
push
test
push
mov
test
or
fmuls
call
pop
imul
popf
sbb
inc
push
call
mov
push
shrl
movzwl
xor
adc
inc
fiadds
fmuls
push
dec
aam
mov
mov
pop
ljmp
and
lret
xlat
dec
add
fcmovbe
sub
frstor
gs
inc
jle
pop
adc
adc
mov
nop
scas
jno
push
bound
mov
fld
pop
movsl
out
scas
jno
cmp
mov
out
fdiv
sub
dec
in
xchg
jnp
aad
mov
mov
sbb
mov
jmp
test
ror
jecxz
fstpt
inc
sbb
psrad
xchg
and
inc
inc
sbb
push
gs
mov
dec
sub
mov
mov
sbb
jge
jns
and
lds
inc
jge
xor
es
jne
lds
mov
or
out
inc
sarl
xchg
movsl
xor
cmpb
test
movsl
cmp
mov
and
addr16
xor
sub
xchg
mov
imul
ffree
add
ja
test
imul
xchg
dec
dec
hlt
or
gs
fucomp
push
lods
pop
xchg
sub
aas
push
push
pop
dec
mov
add
sbb
add
sbb
mov
popf
sub
mov
leave
inc
xor
xchg
fmull
test
lds
pop
nop
outsl
cmp
and
aaa
out
loop
xor
testb
mov
pop
xchg
push
pop
out
pusha
hlt
mov
mov
movsb
jle
inc
rcr
pop
adc
sub
inc
and
adc
mov
stos
shlb
sti
add
sub
pop
nop
js
stos
shl
daa
adc
cmp
cmpsb
fists
pop
mov
je
xlat
ds
push
sub
adc
jle
or
repz
jb
sbb
mov
push
dec
dec
jmp
insl
push
jbe
add
xchg
in
xor
dec
jmp
push
adc
gs
push
mov
xor
push
pop
cmp
popf
ja
int3
bt
call
cmpsb
call
mov
mov
sahf
inc
shr
repz
sub
fldl
xchg
sbbb
xor
jns
shlb
divb
data16
out
push
jno
je
push
int
scas
adc
and
pusha
stc
out
push
das
in
in
fidivrs
out
cmp
loope
lods
leave
sbb
xchg
loopne
call
fisubs
jle
or
and
and
dec
fadds
nop
dec
fimull
shrb
push
pop
aaa
imul
push
or
cmc
add
pushf
jmp
pusha
movzbw
setno
mov
cwtl
call
sub
inc
sbb
adcl
cmp
lea
pop
popf
lcall
jge
or
clc
stos
xor
and
push
dec
sbb
xchg
xchg
or
outsl
xchg
roll
push
fcomps
cmp
mov
and
repnz
adc
push
and
inc
fsubp
xchg
fsts
popf
xchg
dec
push
fmuls
ret
loope
fimuls
jmp
push
push
sbb
jne
mov
call
pushl
popl
pushf
push
cmp
pushf
call
pushf
pusha
jmp
pop
call
js
call
adc
cli
mov
dec
add
mov
cli
jne
sub
rcll
subl
dec
inc
mov
subl
adc
adc
std
xor
clc
arpl
sbb
es
mov
fimuls
mov
cmp
es
out
add
cwtl
sbb
mov
mov
cmp
jbe
push
lock
std
std
mov
add
push
jnp
mov
shrb
imul
push
pop
icebp
ss
inc
dec
cmp
jge
pop
in
enter
and
aam
pop
iret
add
jecxz
daa
adc
test
popf
xchg
jno
jle
add
adc
dec
jae
xchg
push
mulb
cmp
add
push
mov
mov
jmp
sbb
dec
movl
pushf
lea
jmp
add
mov
add
add
jecxz
add
add
add
pop
push
add
sbb
jecxz
adc
inc
pop
push
add
mov
add
add
inc
and
out
push
inc
and
test
adc
test
add
stc
call
lea
jl
ja
rcl
inc
rcl
sub
push
not
lea
add
shrd
rcr
pusha
cmc
mov
call
push
lea
ja
cmc
pushf
pushl
jmp
imul
mov
movsl
dec
and
xor
js
das
mov
movsb
cli
es
inc
sbb
ret
or
ret
test
ss
rorb
push
cmpsb
out
repz
mov
cmpsb
jmp
jl
stc
xor
cs
imul
add
bnd
inc
pusha
shlb
rcl
push
jae
mov
adc
int
xor
shrb
xchg
fsubp
and
and
jbe
sbb
in
clc
movb
adc
fisubrs
cld
sahf
pop
movsb
icebp
push
mov
sbb
pop
fwait
jle
ds
adc
lret
jb
clc
add
lcall
mov
dec
fildl
or
xor
push
mov
sbb
lods
xchg
pop
add
in
mov
xor
sbb
pop
xchg
jecxz
mov
mov
loopne
push
inc
call
jmp
add
add
add
add
add
add
add
add
stos
adc
add
add
add
xchg
fimull
xchg
repz
popa
pop
xor
add
cmp
cmpsb
xchg
push
and
aaa
xchg
or
mov
leave
mov
mov
xor
dec
push
inc
cmp
stos
fs
mov
jmp
iret
or
jae
loopnew
fnsave
out
in
imul
jb
mov
jne
outsl
repnz
jge
mov
or
fimull
sbb
pop
fcmove
dec
aad
in
jbe
rcrl
jnp
mov
in
push
loope
andl
push
aad
xchg
shr
pop
jno
fmuls
jecxz
dec
lds
cs
push
sub
sbb
sahf
push
push
inc
ret
les
scas
add
dec
fdivl
jecxz
xchg
iret
mov
push
pop
lea
pop
jo
stos
popa
addl
dec
pop
outsb
daa
rorb
das
ja
push
mov
out
rorb
cs
test
cld
clc
lods
mov
pop
xor
mov
jae
je
aad
or
push
cmp
and
loop
push
mov
sub
pop
pop
xchg
cltd
lret
nop
and
xchg
pop
inc
add
sti
inc
cmp
jg
aaa
adc
movsb
cmp
je
xor
les
stos
cli
mov
pop
int3
imul
mov
push
jae
xchg
jg
cmp
add
push
lret
pop
cld
sub
or
jp
out
fimuls
pushf
jle
hlt
bound
lret
or
cs
add
pop
sbb
shll
fiadds
jae
cmp
xchg
dec
push
and
sti
or
mov
dec
jl
cmp
in
popa
or
push
cmpsl
imul
jbe
data16
hlt
push
cld
mov
jl
jle
jle
icebp
adc
jnp
movsb
popf
addps
push
mov
outsb
or
push
dec
add
and
std
bts
int3
pop
adc
ljmp
cmpsb
mov
cltd
inc
shlb
sbbl
cs
lock
outsl
lds
adc
fucomp
adc
outsl
mov
mov
iret
and
jb
shl
ret
test
sub
subb
inc
mov
fucomp
popa
movsl
dec
int3
cmpsl
fisubl
cmp
loope
or
sub
sub
mov
ret
out
xchg
dec
divl
cmp
addr16
andb
inc
sti
ds
jmp
daa
pushf
ret
mov
dec
jbe,pn
jg
mov
cld
mov
or
out
jmp
adc
movsl
adcl
leave
sub
or
mov
imul
jnp
xor
popf
mov
pop
lods
sbb
sub
loopne
rcrl
inc
icebp
js
dec
pop
pop
popa
xchg
sar
lret
lods
pop
pop
adc
ss
jmp
inc
dec
and
fcomps
imul
pop
sarb
jae
cld
xchg
mov
jge
sahf
das
push
inc
ja
ret
cmpsl
dec
jns
jle
or
pop
pop
pop
in
lods
lods
mov
push
xchg
pop
movl
scas
out
jg
or
cmp
cwtl
aas
add
jbe
sub
mov
mov
sbb
andb
test
out
out
mov
sub
in
in
scas
in
inc
movsb
inc
push
imul
sbbb
xchg
dec
and
and
insl
jge
fiadds
push
xchg
icebp
mov
adc
adc
mov
aas
test
push
mov
in
push
in
outsb
inc
ja
repz
or
jmp
fs
sarb
xchg
sub
jecxz
and
ret
add
inc
xchg
dec
jle
lahf
scas
insl
xor
dec
xchg
inc
pushf
and
cmp
xchg
lds
pop
mov
leave
dec
or
mov
jg
sbb
adc
aad
popa
bound
mov
mov
push
in
nop
or
dec
add
add
xchg
daa
iret
out
fsubrs
sub
js
mov
and
jecxz
mov
xor
push
jle
shlb
sub
jo
stos
jbe
push
pop
jecxz
outsb
xchg
xor
scas
mov
push
sarb
imul
in
adc
es
or
mov
xchg
dec
int3
mov
pop
andl
dec
stos
pop
or
rcrl
cltd
repnz
add
mov
arpl
cmp
cwtl
pusha
cmpl
inc
mov
add
jns
into
xchg
cmc
cmpsl
sbb
adc
popa
int3
repz
sbb
mov
jo
aam
testl
aaa
adc
and
mov
insl
cltd
rol
loope
cli
dec
movsb
mov
loopne
or
push
push
sub
stc
lods
les
cmp
in
xchg
ficompl
jb
loop
mov
dec
out
add
repnz
shll
ljmp
in
pop
andl
movsl
push
adc
jmp
add
and
aad
inc
cli
int3
xor
arpl
dec
lea
xchg
adc
or
imul
sbb
sti
aam
xor
jmp
aam
out
jae
inc
push
sti
fsub
fdivl
add
cli
jge
mov
xchg
xchg
push
mov
je
mov
test
and
and
push
or
gs
in
in
mov
mov
std
gs
jb
test
sbb
jecxz
clc
subl
rorl
in
push
into
cli
loope
in
out
mov
and
fldcw
pop
add
or
rcr
repz
leave
mov
mov
dec
and
and
imulb
fdivs
dec
incb
dec
and
adc
mov
xchg
loope
fidivl
icebp
xor
jbe
orb
push
lods
addb
test
xor
gs
lock
or
mov
jne
enter
sti
jo
and
push
push
and
jg
aaa
imul
pop
das
rorb
inc
jecxz
and
std
mov
roll
xorl
push
aas
push
test
mov
loopne
testb
scas
xor
xor
xor
rorl
rol
mov
in
xchg
hlt
pop
jns
loope
ret
rclb
gs
dec
jno
jp
push
js
scas
mov
popa
pusha
sbb
sbb
xchg
sub
or
iret
notl
or
sti
iret
mov
mov
mov
mov
lea
lea
adcb
mov
mov
sbb
and
jb
dec
out
sub
imul
insl
imul
sbb
shl
xchg
pop
std
xor
and
arpl
inc
movsl
xor
mov
icebp
add
fwait
sbb
sbbl
in
pop
dec
movsl
mov
lret
out
rclb
jg
xor
fucom
lock
out
clc
push
or
sbb
fdiv
psrlw
xor
jnp
ss
imul
adc
stos
mov
cmpsb
jle
sub
cmp
jae
mov
lahf
push
mov
sahf
gs
xchg
call
pop
cmp
insb
cmp
jg
push
inc
pushf
arpl
and
pushl
cmp
adc
inc
stos
loopne
pop
xchg
lret
aaa
or
clc
or
stos
mov
in
ljmp
nop
mov
jp
shl
xor
daa
data16
ljmp
aad
and
mov
mov
push
fsubrl
jne
add
mov
push
mov
cmpb
xor
cltd
dec
jae
and
cmp
and
enter
xorb
into
fistpl
dec
inc
movsl
lret
ret
mov
xchg
insl
mov
xchg
movsb
xchg
jg
mov
push
xor
iret
adc
shrb
pushf
jae
pop
test
adc
insb
outsb
mov
in
cmp
xchg
mov
push
rclb
xchg
sbb
xor
or
bound
in
adc
sbb
jne
inc
mov
jno
and
pusha
mov
cltd
leave
mov
int
mov
dec
nop
andb
dec
mov
push
lcall
dec
xorb
cmp
inc
mov
jg
sub
sbb
mov
mov
mov
je
dec
mov
decl
outsl
popa
pop
sbb
sub
testb
das
and
in
lods
add
pop
in
rclb
sahf
sub
and
movsb
stos
mov
lcall
popa
push
arpl
jne
loopne
pop
fsubrs
pop
add
mov
lock
xchg
mov
xor
fidivrl
push
cwtl
andb
repz
testb
scas
sbb
mov
jo
aad
fs
lods
or
mov
pop
and
sub
sub
xor
movsb
out
dec
jb
loopne
leave
mov
jl
or
insl
test
dec
lret
push
cmp
xchg
call
fcmovnbe
push
and
push
ret
in
mov
mov
ja
inc
shlb
cmpl
mov
loop
lret
xorl
mov
dec
xchg
or
push
dec
enter
mov
imul
jl
addl
loopne
dec
pop
pop
push
idiv
mov
or
clc
sub
ds
ficoml
cwtl
mov
repnz
xchg
add
insl
mov
cwtl
jne
ffreep
mov
push
inc
jns
je
sbbb
push
adcl
adc
xor
js
shll
test
je
xor
xchg
sbb
xchg
dec
cmp
shr
loop
cmp
jae
out
cmp
add
popf
xor
not
cmc
push
pusha
or
jg
dec
hlt
sbb
lock
or
xor
push
jnp
adcb
xchg
adc
es
icebp
loope
rcrl
test
lods
sub
dec
shlb
sub
aam
sahf
xchg
mov
test
fildl
push
mov
add
enter
pop
into
pop
in
pop
daa
mov
out
insl
aaa
mov
imul
and
mov
icebp
movsb
push
mov
mov
notb
pop
mov
scas
add
push
test
js
dec
sbbb
aad
and
jge
adc
ret
push
ficoml
mov
pop
aam
sbb
mov
pop
add
mov
mov
enter
cmp
and
push
dec
cmpb
xor
push
jecxz
mov
pop
pop
sub
imull
cmp
mov
jnp
mov
aad
sub
or
clc
or
ljmp
xor
clc
add
add
stc
not
lea
jnp
ror
push
not
jmp
not
push
setbe
ror
jmp
pusha
or
pushl
movl
lea
je
clc
stc
cmp
pusha
pushl
ret
movl
jmp
adc
and
sbb
add
sub
outsb
sbb
stos
jle
sub
imull
fnsetpm(287
sti
jae
jge
sbb
sub
test
cmp
inc
mov
rcrl
scas
out
movsl
std
add
enter
cwtl
mov
pop
pop
mov
add
enter
iret
mov
decb
xchg
jae
mov
sti
aas
mov
cmp
mov
stc
jmp
jl
ret
cld
mov
jae
and
call
inc
mov
pop
add
dec
xchg
sub
gs
mov
pusha
pushl
ret
repnz
push
movb
pushf
pushf
lea
jne
mov
mov
movb
jmp
movsbw
lea
not
jmp
jmp
add
dec
outsl
arpl
inc
jb
add
pushf
je
xor
lret
mov
clc
cmp
cmc
cmpb
pushf
pusha
pushf
call
mov
pushl
pusha
movb
pushl
ret
lea
jmp
pusha
mov
call
bt
cmpb
pusha
jmp
lea
ja
movsbl
pusha
pop
mov
jmp
lea
jne
jmp
add
mov
pushl
lea
jmp
dec
not
not
inc
pusha
mov
pushf
jmp
lea
jne
push
movzbw
not
movb
jmp
push
test
pusha
push
lea
je
stc
and
ror
btr
add
mov
btr
mov
stc
test
bt
add
push
push
mov
btc
mov
clc
cmp
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
lods
clc
movl
test
jmp
bt
add
pusha
mov
mov
movb
lea
jmp
call
mov
bswap
bswap
not
jmp
setnp
movb
seta
mov
lea
cwtl
lea
push
lea
jmp
adc
fidivrl
adc
pop
popa
adc
pusha
js
mov
aas
lds
popa
pushf
mov
clc
daa
or
cmp
pop
pushf
mov
sbb
insb
cmp
test
mov
xchg
pop
push
push
cmp
popa
adcb
pushf
ror
push
jmp
inc
jo
imul
fmuls
ljmp
imul
mov
ss
outsl
mov
leave
lds
outsl
sbbb
stos
cld
call
mov
pop
mov
call
and
popl
sub
add
out
inc
lock
pusha
push
lea
jae
not
sub
mov
bswap
sbb
bts
mov
shr
btr
neg
mov
jmp
pusha
pusha
push
jmp
pushf
pusha
call
xchg
dec
mov
and
jecxz
in
ret
aas
fsubrl
stos
ljmp
and
sbb
inc
push
or
orb
mov
testb
jae
cmp
add
cmc
icebp
jmp
xor
addr16
or
xchg
jno
jne
cmp
cmp
loopne
mov
jmp
test
imul
je
arpl
outsl
cmp
out
std
psubsw
add
inc
sti
testl
stc
es
push
mov
sbb
out
inc
push
test
dec
pop
clc
imull
lret
push
pushf
lea
je
cmp
sub
bt
cmp
push
mov
lea
ja
pushf
cmc
bt
pushf
imul
push
pusha
cmp
add
mov
pushf
lea
jmp
cmp
call
call
ror
pushf
inc
bt
push
pushf
pushw
popfw
movb
jmp
lahf
movb
lea
movzbw
call
sub
jmp
ror
mov
movb
call
lea
jp
inc
pusha
pusha
mov
adc
lea
pushf
push
pushl
jl
ret
pushl
popl
pushf
pusha
pushl
ret
popf
pop
bound
sbb
mov
imul
mov
in
cmpsl
not
das
sbb
sbb
push
aad
in
pop
jno
fwait
dec
and
or
mulb
xchg
nop
leave
jno
rep
leave
xchg
int
or
cli
xor
cld
xchg
mov
lret
xchg
adc
lret
fnstsw
or
out
mov
clc
leave
rcl
dec
xchg
out
sub
test
popf
clc
scas
popf
mov
das
and
std
cmp
test
fmull
adc
stc
add
pushf
lea
call
push
lea
jae
jmp
push
lea
je
call
jmp
movb
mov
lea
jne
pusha
push
pusha
xchg
bswap
mov
pushf
cwtl
bswap
lea
mov
pushf
jmp
add
inc
js
je
jb
arpl
jae
movl
lea
ja
rcl
rcl
sub
inc
add
clc
clc
sub
mov
xor
rcl
mov
test
repnz
push
push
mov
lea
jne
lea
call
neg
bt
cmp
sub
stc
clc
rol
cmc
pushf
clc
pushf
add
clc
pushf
test
cmc
cmp
jmp
pushf
ja
cs
jg
orb
cmp
mov
push
sbb
cmp
test
sub
ficompl
xchg
popa
test
fsubrl
sbb
mov
xor
push
add
leave
movsb
cld
inc
call
imul
fistps
mov
xor
sub
inc
outsb
cs
jo
or
xor
aad
shrl
imul
leave
jecxz
test
sub
xchg
das
negb
cltd
sbb
into
mov
ds
or
adc
sbb
mov
add
sbb
push
movsb
js
sti
push
iret
stos
sarl
gs
jnp
mov
test
xor
int
loop
lds
aad
xchg
aas
lea
cmpsb
stc
clc
push
movsb
jno
add
or
seta
mov
hlt
push
imul
mov
fistpl
bt
stc
mov
stc
cmp
clc
test
pusha
pushf
lea
je
clc
push
test
add
bt
stc
pusha
cmp
pusha
lea
jb
pushf
clc
pusha
cmp
call
cmp
movsbl
mov
pusha
test
cmpb
pushl
pusha
pushf
lea
jne
jmp
push
mov
mov
movsbl
push
jmp
bt
shr
jmp
not
stc
ror
movw
stc
bt
not
jmp
lea
mov
call
push
push
pushf
lea
ja
cmp
or
adc
sar
sub
lea
rol
sbb
add
rcl
mov
and
sub
call
cld
mov
mov
das
gs
shl
js
call
nop
arpl
push
push
pop
pop
jns
inc
xchg
and
sbb
cmp
pushf
mov
out
push
mov
jo
push
maxps
ss
push
movsl
lods
outsb
mov
es
xorb
mov
xchg
or
or
xor
lds
push
xor
fwait
subb
outsl
cmp
jg
and
inc
and
mov
lea
ja
pushf
pushf
push
push
lea
jb
push
clc
cmc
cmpb
push
jmp
push
jmp
movb
push
pushf
lea
jae
push
lea
jne
pusha
jmp
imul
ficoms
pop
sahf
bound
sub
xor
jl
stos
mov
loope
push
mov
out
call
adc
loop
mov
xchg
push
inc
push
sahf
xlat
push
rcr
jecxz
out
mov
cli
test
sub
add
sahf
fs
fidivrl
scas
mov
in
test
popfw
mov
sbb
mov
dec
lcall
push
fnclex
lea
jo
pusha
mov
mov
mov
pop
pusha
pushf
movb
pusha
pushl
ret
pusha
jmp
push
lea
call
jmp
push
pusha
lea
je
pushf
clc
mov
push
cmp
call
sub
pushl
clc
rol
test
push
add
pushf
cmp
mov
pushf
movb
jmp
lea
call
pushf
mov
pushf
pushf
mov
pushf
lea
jmp
mov
add
add
jecxz
add
add
add
pop
push
add
sbb
jecxz
adc
inc
pop
push
add
mov
add
cmp
pushf
movw
call
call
pushf
push
lea
jne
cmc
bsr
pushf
mov
clc
mov
pushf
push
add
jmp
pushf
pusha
movl
lea
jl
push
movl
push
lea
jmp
or
inc
sub
add
sbb
lret
fcompl
movsl
or
and
or
inc
es
mov
mov
fidivrl
shlb
pop
pop
outsb
xor
std
cmp
aas
xchg
ja
push
mov
jo
push
mov
push
cwtl
inc
push
sub
repnz
fwait
pop
push
xchg
sbb
inc
iret
out
cmp
lret
loope
or
scas
pop
and
movsl
jno
mov
ljmp
repnz
test
dec
movsl
jno
dec
push
add
adc
inc
repz
cwtl
mov
ret
je
push
sti
lea
je
push
pushl
jmp
enter
sbb
mov
cmp
mov
sub
shlb
fsubr
mov
inc
inc
and
mov
sbb
stos
out
movsl
xchg
cmp
push
add
frstor
push
inc
push
mov
xor
fs
jb
jmp
test
sub
pop
mov
cmp
outsl
mov
or
hlt
sti
jle
sub
or
imul
call
mov
mov
sbb
xor
aaa
adc
ret
sub
loop
xchg
mov
sub
push
js
jmp
pushfw
popw
pushf
call
adc
sti
sub
int
xchg
pop
jecxz
jae
push
add
or
or
out
jns
mov
mov
cltd
add
test
inc
mov
mov
add
xchg
andl
mov
sbb
repnz
adc
repz
jno
loope
pop
cwtl
sub
inc
mov
sbb
pop
lret
shlb
movsl
aaa
addr16
push
notb
pop
adc
inc
mov
pop
enter
inc
mov
rcrb
call
push
inc
lahf
mov
enter
xor
mov
mov
cmc
jp
add
push
adc
cmp
inc
pusha
jae
mov
cld
mov
bswap
not
jmp
lea
jbe
lea
shrd
mov
pushf
btc
add
xor
cmp
btc
neg
mov
sar
cmc
shrd
bsf
add
btc
btr
movl
shrd
bswap
rcr
mov
add
call
call
jmp
call
mov
ficompl
out
test
add
mov
mov
push
hlt
jecxz
ret
enter
scas
mov
sub
test
adc
fcomp
or
push
dec
xchg
imull
adc
add
shl
fstp
add
pop
lds
xor
cmp
sbb
cmp
loope
idiv
iret
outsl
lock
cmpsb
or
rcrb
jge
fidivrs
mov
sahf
add
fisubrs
inc
cmp
cltd
and
push
adc
cli
jo
jne
fs
push
int
xchg
dec
xchg
pop
push
jbe
sub
add
scas
sbb
or
push
pop
fidivl
insb
or
jns
xchg
mov
jecxz
add
test
adc
add
lret
sub
sbb
cmpsb
xchg
xchg
js
fldt
pop
fdivl
mov
aaa
mov
test
jle
test
inc
inc
aad
repnz
cmpsb
pop
stos
fimuls
stc
jecxz
cld
jge
dec
sub
jecxz
mov
sub
mov
mov
sub
fsubs
dec
cmpb
xchg
iret
insl
inc
out
pop
xor
and
fwait
add
lock
lea
nop
aaa
inc
clc
pushf
and
ret
sahf
repz
mov
mov
and
adc
repz
stos
pop
les
add
add
imul
ret
ja
out
mov
call
call
xchg
int
and
sbb
dec
dec
adc
xchg
push
ret
stos
es
mov
sti
fs
jo
add
xchg
pusha
das
pop
xchg
dec
leave
push
popa
cmc
dec
or
sbbl
lock
or
clc
cmc
cmc
sub
call
lea
ja
pushf
pushl
jmp
mov
and
mulb
scas
cmp
inc
jb
inc
cmpsl
call
sbb
rorl
mov
repz
xorl
test
repnz
inc
cmp
and
mov
mov
jno
insl
xor
push
jns
inc
mov
rclb
sub
dec
test
lcall
nop
imul
lret
fildll
mov
out
pop
loope
decb
xor
jne
xchg
aam
repz
scas
cld
test
outsl
pop
xchg
cltd
in
loope
sub
enter
jl
sti
imul
dec
movw
ror
mov
bt
not
cmc
bt
call
clc
add
call
test
cmp
cmc
add
bt
bt
neg
pusha
clc
jmp
push
call
lea
jae
bt
lea
mov
pushf
or
mov
add
mov
movsbw
mov
clc
add
ja
push
sub
pusha
repnz
movb
lea
jbe
jne
stc
or
mov
test
clc
stc
and
sub
mov
inc
mov
bt
bt
cmc
pusha
sub
cmc
call
push
cmp
cmp
call
fidivl
and
push
sbb
cmp
pushf
lcall
fisubl
fistl
pop
test
fmull
or
push
popf
jle
inc
jbe
or
jnp
lahf
push
fmuls
pop
clc
sub
mov
pop
sbb
add
mov
mov
sbb
push
fsubs
jne
jno
jne
outsb
dec
jle
cli
xchg
sub
ret
movsb
and
daa
cmc
in
jg
movl
pushf
mov
jmp
insb
dec
std
and
sbb
push
mov
cmpsb
inc
cmc
sub
lret
xor
xchg
imul
fiaddl
les
xchg
fcmovb
testb
fidivrl
loope
test
xchg
dec
ror
pop
vpunpckldq
xor
sbb
adc
in
lea
ja
push
movb
pusha
mov
lea
jb
jmp
lea
jne
pusha
pop
jmp
cmp
repz
cmc
inc
inc
xchg
xorl
mov
push
and
and
insl
pcmpgtd
add
dec
and
jp
stos
dec
sub
mov
inc
scas
test
sub
lahf
add
xchg
inc
cli
add
jbe
mov
nop
lahf
out
mov
sbb
adc
enter
pop
data16
leave
popf
cmpsl
push
dec
xor
mov
out
insb
insl
xchg
jg
pop
pop
int3
mov
popf
sub
cwtl
adcb
sarl
mov
pop
shlb
sbb
cmc
add
add
testb
and
and
mov
cli
arpl
push
cmpb
es
sub
insb
lcall
xor
sbb
fdivs
mov
xor
and
int
lds
jl
rcrl
jae
add
jp
shrb
lahf
mov
xchg
das
dec
add
xor
lods
sub
sbb
fdivrs
or
fidivrs
sbb
dec
in
fadd
dec
cmc
inc
sbb
push
cmp
lret
lcall
mov
adc
mov
mov
fidivs
or
stos
rcll
test
xchg
jl
sti
jmp
aad
out
scas
ja
jle
adc
jmp
jo
mov
ss
push
es
jbe
ljmp
pushf
popa
out
sbbb
insb
jp
addr16
cli
sub
add
cmp
pushl
popl
pushf
pushf
pushl
ret
lea
je
sar
clc
adc
or
mov
rcl
bswap
add
bt
bt
mov
call
sub
bsf
rcl
mov
call
movsbl
mov
seto
push
lahf
mov
pop
push
mov
lea
pusha
movl
call
pusha
lea
push
mov
pushf
lea
jge
pushf
pusha
lea
ja
push
push
lea
jb
pushf
jmp
sub
lea
call
pushf
pushl
pushf
movl
pusha
call
jp
pop
sbb
popa
sub
fpatan
adc
pop
pop
mov
outsl
inc
in
adc
mov
jg
jecxz
movsl
and
pusha
jle
mov
push
mov
or
jb
sbb
jbe
jmp
mov
and
push
loopne
pushl
test
adc
in
inc
jb
dec
push
lcall
push
inc
pop
push
and
insl
mov
loope
mov
stc
inc
mov
cmp
xchg
pop
pushf
and
xchg
inc
adc
and
sbb
pusha
jmp
lahf
mov
in
and
in
push
or
fidivrs
iret
jo
jne
std
faddl
jg
dec
jbe
lds
sbb
and
pop
mov
push
int3
adc
cmpsb
jb
call
dec
sub
scas
ficoms
xor
inc
mov
cmp
insb
stos
xor
sub
lods
adc
pop
mov
jne
fcmovb
aam
add
jae
push
roll
mov
shlb
push
ficompl
xchg
cmp
mov
bound
push
add
lea
les
sbb
mov
mov
adc
rorb
push
push
dec
xor
int
sbb
inc
fstl
enter
xor
test
cwtl
call
lahf
sbb
jg
adc
into
adc
rol
or
pop
shll
sub
pop
das
pop
xchg
dec
jb
mov
sub
dec
into
ret
mov
dec
je
adc
push
in
add
out
push
fstps
andb
testl
cmc
jmp
jecxz
or
mov
daa
fs
cmp
inc
add
popa
js
test
mov
clc
or
jp
lret
pop
pop
mov
cmpsb
mov
out
nop
and
adc
cwtl
test
cmpsb
scas
sbb
adc
jp
cmp
mov
pop
mov
mov
inc
sub
fmull
jbe
fstpl
cmp
push
inc
and
push
lea
jmp
lea
je
clc
push
pusha
push
sub
mov
test
pushf
cmp
mov
pushf
jmp
push
push
pusha
lea
jb
pushf
cmp
jmp
dec
rcr
test
add
mov
push
cmp
call
movl
pushf
call
outsl
rcll
sbb
fcmovbe
and
mov
cmp
mov
cmp
in
adc
bound
sbb
push
fadd
add
push
adc
push
pop
and
pcmpeqw
negb
adc
cmp
lret
pop
push
lahf
rcr
shlb
xchg
lret
xor
push
mov
mov
int3
and
xchg
jno
dec
dec
or
nop
mov
jge
leave
mov
jne
ds
sbb
cld
jl
sbb
rcr
push
cmpsl
mov
or
cmpsb
and
push
sbb
adc
insl
push
add
out
pushf
lcall
fimull
inc
ja
pop
int3
lahf
rcll
and
mov
jne
push
pop
sti
out
dec
fdivr
push
cmp
xor
js
cltd
out
fidivrs
or
mov
add
dec
fdivrs
and
ja
fxam
clc
push
nop
mov
loope
cmc
sbb
shrl
pop
dec
mov
or
mov
lea
jne
pushf
pushl
test
sub
mov
push
pushf
lea
jmp
pushf
mov
call
lea
jne
cwtl
push
mov
movb
pushf
pusha
mov
lea
jmp
movzwl
btc
sub
pusha
stc
mov
test
stc
bt
jmp
test
sbb
and
movsb
iret
xchg
lret
xlat
ds
cmc
bound
int3
iret
push
lds
out
add
push
ficoml
or
dec
mov
stc
data16
xchg
out
popf
or
or
movsb
cmp
lea
jmp
inc
and
pushf
pushf
pushl
ret
push
pusha
pushf
pushf
movl
pushl
movw
pushf
movl
push
push
lea
jmp
mov
movl
call
dec
aad
sbb
fisubl
push
sahf
xchg
cmpl
inc
lds
rclb
lahf
inc
out
mov
push
pop
loope
fldenv
push
fadds
insl
xor
xor
and
icebp
cwtl
add
dec
sub
dec
sub
mov
fsubs
popa
xor
lock
cmp
lods
inc
inc
mov
pop
loope
jmp
and
insl
xchg
or
mov
ficompl
cmpsl
and
pop
popf
inc
es
lock
ja
push
test
ret
sub
movsl
jno
or
ljmp
adc
push
faddl
xor
and
sbb
repnz
inc
je
bswap
call
xchg
xchg
sbb
sbb
outsb
loopne
inc
popa
flds
lcall
sbb
pop
pop
in
fcompl
sbb
mov
sti
shll
push
mov
jl
and
mov
movsb
xor
mov
xor
and
jbe
test
pop
int
jecxz
pcmpgtb
daa
sub
out
sub
outsl
lcall
and
mov
movl
pusha
lea
jmp
xlat
mov
nop
call
int
and
aam
shlb
sbb
lcall
lcall
inc
jb
xchg
cli
push
mov
scas
lock
cltd
sbb
adc
dec
or
add
loopne
pop
xchg
or
imul
add
test
or
sbb
pop
subl
or
test
test
std
and
stos
sbb
faddl
adc
repnz
dec
push
adc
adc
cmpsb
clc
jmp
lds
fildll
loop
pusha
mov
push
mov
lcall
sbb
fdivrl
lds
cltd
subb
js
push
sbb
out
pop
xor
sbb
mov
push
daa
mov
pop
pop
jno
sbb
cmpl
mov
mov
sbb
jp
leave
loopne
ljmp
nop
pop
lods
je
cmpl
outsb
jne
mov
inc
js
jge
pushf
jmp
sub
pusha
cmc
bt
cmp
pusha
jmp
lea
call
pusha
pushf
pusha
call
inc
stc
cmp
pushw
popfw
pusha
push
inc
mov
pushl
adc
mov
pushl
pushl
ret
test
pusha
repnz
mov
pusha
mov
lea
jne
rcr
lea
mov
movsbw
sub
and
mov
cmp
push
push
jmp
fnstcw
push
icebp
fisubrs
cld
stos
icebp
xor
jno
insb
mov
push
roll
and
movsl
jno
jg
gs
pop
imul
xchg
shll
jmp
or
jae
out
rclb
cmc
mov
jb
cmp
in
cld
popa
aam
pop
sbb
sbb
scas
mov
pop
subb
jae
jmp
or
int3
pop
sbb
pop
pop
cmp
push
movsbl
sub
pop
xchg
push
les
ficoml
test
test
inc
in
pop
sub
xchg
test
xchg
xor
out
dec
mov
inc
arpl
pop
rolb
sub
ds
sub
cwtl
mov
mov
cmp
dec
int3
push
adc
pop
arpl
jns
inc
jp
push
fldl
push
repz
mov
jg
xor
sbb
inc
ljmp
xorps
aad
dec
push
dec
roll
xor
mov
lret
pop
push
fisttpll
cli
jnp
fdivrp
rorl
and
lahf
adc
clc
cmc
test
clc
sub
jmp
or
push
sbb
xchg
out
sahf
mov
in
cmpsl
sbb
pop
pop
jp
sbb
push
daa
adc
popa
pop
push
sbb
cs
inc
fsubrs
ret
inc
cli
insl
dec
ficompl
dec
sub
lret
repnz
sbb
hlt
inc
add
out
xchg
out
mov
cmc
sub
arpl
shrb
lret
pushf
add
sbb
jbe
pusha
xchg
xchg
mov
inc
pop
inc
aad
inc
and
push
add
fadd
mov
iret
ror
xchg
scas
mov
push
pop
dec
loop
ja
push
insb
mov
mov
mov
push
repz
ljmp
dec
jae
xchg
jmp
mov
mov
jae
xor
pop
xchg
out
test
dec
or
and
xchg
test
fisubl
cwtl
adc
xor
shll
pop
pop
movsb
xor
scas
mov
adc
fildl
mov
and
jno
pop
xor
jb
adc
fnstenv
sub
push
test
pushf
add
aaa
fnstcw
jmp
dec
push
iret
cli
in
fcomps
jg
dec
movl
movsb
xchg
pop
cmp
mov
fistpl
aas
inc
sbb
sarb
ljmp
leave
stos
xlat
insl
mov
iret
xchg
cmp
cmp
push
xlat
fists
or
stc
clc
mov
cltd
rorl
mov
sub
test
jne
push
int
icebp
sub
adc
out
xlat
push
je
add
rcrl
loop
or
stos
lods
ja
push
mov
xchg
icebp
mov
mov
loop
mov
rcrl
jp
xchg
jmp
sub
inc
in
or
sbb
nop
movsb
stc
fsts
mov
mov
fnstenv
add
pop
xor
adc
jne
in
lods
inc
jg
mov
mov
pushf
mov
add
sub
mov
adc
ficoml
sarl
push
adc
push
mov
int3
or
pop
imulb
sbb
fisubl
cmp
popf
push
sbb
popa
lret
rorb
ds
pop
sub
imul
into
pop
data16
adc
and
dec
rorb
rorb
stc
in
inc
mov
shl
sti
add
cltd
push
mov
mov
pusha
clc
cmp
push
lea
jae
shrd
btr
mov
lea
mov
push
btr
mov
sar
bsr
mov
mov
cmc
sub
stc
pusha
push
stc
repnz
push
mov
pushl
lea
jne
or
dec
mov
sub
lea
sub
shr
bt
ror
mov
test
bt
clc
pushf
sub
test
bt
stc
clc
pushl
popl
jmp
jne
gs
xor
fs
insb
add
pop
out
add
pusha
cmpsb
adc
mov
call
call
mov
mov
sbb
lcall
sub
inc
pop
hlt
adc
mov
cltd
shr
lret
adc
push
nop
mov
jnp
push
jmp
mov
test
xchg
jmp
cmp
repz
mov
push
adc
and
mov
push
cmp
addr16
pop
mov
push
ds
pop
mov
xor
loope
mov
movsl
mov
dec
incl
push
addr16
lea
jne
bts
mov
jmp
mov
sbb
push
cs
insb
ret
xchg
add
adc
clc
out
sbb
fsubrs
mov
rcl
aam
xchg
ret
and
or
or
push
into
pop
pop
subl
xchg
xchg
cs
pop
in
andl
push
mov
dec
das
cmp
or
add
aaa
movw
movw
lea
jmp
lret
adc
pop
es
pop
cltd
mov
mov
lret
mov
or
sbb
fstl
sahf
mov
xchg
jg
push
cwtl
fs
and
int3
sbb
fidivrl
xchg
inc
adc
in
push
inc
cld
push
cmp
xor
xor
push
and
insb
jl
push
push
leave
push
daa
push
adc
pop
adc
inc
out
aaa
push
cmp
pop
add
insl
push
jno
repnz
divl
jge
adc
push
push
jb
sub
inc
jmp
pop
push
jge
cmpsl
mov
sbb
mov
fisubl
mov
sbb
xchg
addb
mov
push
dec
int3
ret
pop
fwait
add
cmp
xchg
add
dec
jo
outsl
aam
add
jg
or
pushf
push
pusha
adc
jmp
notb
cmpsl
lahf
dec
fwait
dec
jg
push
fldt
mov
jo
mov
aam
add
adc
orb
push
xchg
xor
fadd
add
pop
insb
push
pusha
stc
es
jb
fxch
fisubrl
icebp
dec
fsubrp
out
ss
out
cmp
int3
or
aam
xor
andl
shll
fbld
test
shrb
nop
mov
ffree
and
ljmp
mov
dec
mov
pop
cmpsl
add
fiaddl
in
insl
jnp
cwtl
inc
push
inc
clc
cmp
jbe
pushf
inc
loop
xchg
or
mov
loop
std
or
jne
dec
scas
or
call
je
in
adc
pop
gs
mov
scas
popa
jecxz
jmp
mov
nop
sbbl
xchg
or
xor
out
sub
adc
and
fdivr
xchg
mov
arpl
insb
fcomip
dec
push
andb
in
ds
push
adc
jns
int3
sarb
inc
sarl
or
fsubp
mov
dec
lret
out
mov
adc
loop
insl
call
jbe
mov
test
sbb
sub
or
cwtl
or
push
jge
push
cmpsb
cmpb
ret
nop
mov
sbb
sub
adc
rol
dec
push
cld
test
lret
enter
inc
pop
test
add
imul
cmp
sub
or
repz
in
fisttpll
inc
mov
dec
adc
stc
filds
aad
sub
outsl
clc
add
stc
jmp
sub
adc
bts
movzbl
add
lea
cmp
sub
clc
stc
push
stc
pushl
popl
pushl
cmp
jmp
js
sbb
sbb
add
xor
scas
jno
jle
or
arpl
sbb
leave
shlb
xchg
cwtl
jmp
js
cmovb
dec
lcall
xor
jmp
mov
sbb
repz
adc
insl
mov
loop
clc
inc
jp
jg
mov
xor
push
inc
pop
data16
movsb
std
pop
adc
mov
notl
scas
lock
sub
mov
xlat
mulb
cmp
sbb
pusha
pop
xor
sbb
cmp
fnsave
dec
js
negb
daa
add
mov
in
arpl
dec
and
xor
mov
ljmp
icebp
mov
sbb
mov
mov
decb
paddsb
jnp
scas
shrb
jecxz
push
cmp
sbb
xor
push
pop
add
lds
out
testl
dec
inc
push
push
push
outsl
push
call
pop
ret
jno
mov
sbb
mov
aad
ret
outsl
pop
mov
xorl
imul
out
js
hlt
and
mov
push
jp
pop
fcomp
ret
add
fdivs
xchg
insb
jne
jo
loop
je
xchg
shrb
test
cmpsb
gs
pop
fldl
les
pop
sub
cld
mov
sar
sub
or
push
sbb
and
jne
pushf
mov
pusha
mov
jmp
pop
cmp
sbb
shl
jne
xor
aam
imul
push
sbb
adc
sub
das
xor
mov
es
push
orl
push
inc
fidivrl
push
fwait
jo
pop
out
fnstcw
xchg
xchg
dec
and
aas
jmp
mov
add
fs
pop
sbb
lods
lea
imul
cs
jnp
pop
and
shrb
int
xchg
jne
dec
push
mov
inc
mov
test
push
jg
or
push
dec
add
pop
and
jle
stos
lret
sbb
lret
lea
jmp
dec
call
pushl
lea
jne
bt
btc
mov
pushf
add
inc
sub
pushf
cmp
lea
clc
pushf
cmp
sub
jmp
or
popa
or
ficoml
mov
mov
out
out
es
xchg
inc
cltd
push
bound
add
push
adc
ficoml
push
aas
bound
ficompl
cmpb
cmp
js
pop
loope
jmp
mov
pop
inc
dec
pop
arpl
scas
pusha
movl
lea
jne
jmp
lea
call
jmp
call
push
call
add
mov
call
movb
bt
pushf
cmp
setb
lea
pushf
pushf
pop
mov
pushf
call
push
decl
dec
cmp
add
push
jge
rorb
cwtl
or
xchg
sbb
jl
mov
in
mov
or
mov
in
fiadds
cwtl
mov
mov
mov
incb
mov
fdivrs
out
aas
add
mov
das
add
dec
ljmp
mov
push
insl
pop
aaa
jbe
ja
cwtl
mov
test
mov
mov
loopne
loop
sbb
int
xchg
mov
movsb
add
testb
add
mov
jl
mov
add
dec
pop
call
xor
xchg
sbb
sbb
pop
xchg
add
inc
xor
xor
add
mov
mov
shlb
push
xor
push
cwtl
mov
jl
dec
dec
push
mov
frstor
leave
push
adcl
mov
jo
pusha
dec
add
sbb
push
add
sub
sahf
int
mov
add
fs
ja
loopne
imul
fadds
cwtl
or
mov
aam
push
loopne
lock
dec
mov
call
push
mov
mov
mov
mov
stos
or
loopne
or
or
or
xchg
sbb
jo
add
test
push
add
mov
clc
fs
push
cwtl
or
mov
pop
incl
loopne
enter
inc
and
push
cwtl
mov
sbb
sub
mov
test
clc
hlt
pop
cwtl
mov
sbb
scas
add
mov
push
dec
pusha
xchg
add
sbb
sarl
mov
sub
fnstsw
push
or
ret
and
cmp
add
fcompl
mov
sbb
fmulp
push
out
xchg
xchg
leave
cs
add
xor
pop
mov
jb
inc
and
stos
leave
rcr
mov
pusha
inc
add
jbe
je
movsb
mov
daa
inc
ja
xchg
and
stc
mov
jmp
add
dec
gs
popa
addr16
outsl
js
add
test
mov
dec
pushl
mov
btr
pusha
mov
mov
bt
jmp
jmp
call
cmp
test
call
sub
cmp
ja
mov
push
mov
aad
test
adc
mov
xchg
sub
mov
and
movsb
jno
sbb
dec
hlt
sbb
movsb
jno
pop
add
repnz
idiv
push
xchg
pop
test
aad
imul
and
sbb
out
imul
dec
adc
clc
jb
mov
sbb
fadd
mov
mov
out
enter
test
mov
arpl
xchg
test
push
stos
sarb
and
cmp
ljmp
adc
pop
aaa
inc
popf
sbbb
push
xchg
cmp
mov
in
pop
popf
repnz
mov
pop
loop
lds
mov
or
xchg
aam
add
loop
mov
dec
mulb
dec
pushf
xor
mov
jg
lea
ja
pusha
imul
mov
add
pushl
movw
lea
jmp
lea
jne
movzbl
rcr
movzbw
inc
mov
cmc
or
pusha
lea
je
setns
lea
bswap
lea
movzwl
lea
bswap
lea
movzbw
movzbw
mov
call
bt
repnz
pusha
pusha
jmp
movb
pusha
lea
jne
xor
test
adc
shl
mov
ror
cmp
sub
shld
mov
or
sbb
mov
cmc
sub
clc
call
out
jecxz
sbb
inc
stos
loop
push
mov
mov
call
loope
pop
xor
mov
mul
jmp
mov
daa
lcall
add
leave
mov
dec
insb
and
sbb
inc
sbb
movsb
test
cli
out
ret
and
sbb
int3
push
push
adc
and
testl
into
lret
mov
pop
int3
push
jp
fnstcw
sub
add
clc
arpl
fistpl
sahf
ror
das
sbb
adc
xchg
or
xchg
dec
ret
imul
add
movsb
sbb
dec
jecxz
pop
aas
incb
lods
call
fisubs
rcr
jle
jp
sbb
mov
push
fwait
int
bound
pop
pop
sbb
mov
into
push
sbb
loop
or
arpl
test
ffree
lds
popa
mov
addb
xor
stc
xchg
mov
orl
fisubrs
pop
dec
pop
mov
adc
inc
xchg
clc
loope
jl
leave
sbb
arpl
pop
xchg
jne
ret
leave
push
fisttpll
pop
in
adc
fs
daa
mov
push
jae
push
push
xchg
adc
lahf
pusha
aas
sub
fildll
bt
jmp
dec
ret
cld
mov
adc
push
ret
pop
fsts
add
ret
sahf
pop
push
add
add
or
push
sbb
aam
dec
loope
ljmp
shrl
hlt
sub
mov
lahf
push
pop
sbb
ffreep
sbbb
and
pop
jle
jae
add
cmp
push
mov
sbbb
fidivl
sbb
mov
lret
scas
xlat
adc
dec
sub
push
lahf
add
aaa
mov
mov
outsl
sbbb
lahf
jae
dec
aad
fwait
add
mov
pusha
sub
push
stos
enter
mov
push
mov
mov
xor
jle
cmp
cmp
jb
push
inc
mov
movups
iret
jne
jp
gs
sti
cmp
xor
xchg
lcall
jmp
aas
les
xchg
je
cmp
cli
pop
fadd
dec
xor
sbb
add
add
sub
xor
test
movzbw
movb
push
movsbl
mov
pop
not
movsbw
lea
pushf
pushf
push
jmp
cmc
test
neg
call
cmc
cmp
pusha
pushl
pusha
jmp
inc
inc
enter
adc
adc
stos
adc
mov
stc
lahf
mov
scas
mov
sbb
push
bound
sahf
adc
xor
fisttps
and
inc
mov
or
mov
cmp
jmp
sbb
and
fiadds
sub
loope
dec
mov
sbb
jp
or
adcl
mov
mov
andl
das
lds
movsb
pop
repnz
int
out
aas
scas
xor
clc
pop
xchg
and
push
push
shl
call
das
sbb
ficoms
inc
cmpsl
cwtl
test
out
fisubl
xchg
aaa
push
dec
movsb
cwtl
into
ja
or
aam
ret
mov
sahf
mov
pop
sbb
mov
pop
jg
push
loopne
mov
aas
mov
dec
ja
dec
pusha
push
leave
movsb
push
mov
daa
das
pushf
push
les
mov
cmp
mov
xor
fldcw
sub
in
sbb
xchg
jb
jmp
iret
insb
mov
nop
dec
ret
cmp
leave
or
int
les
aad
jne
loop
xlat
inc
loopne
loop
ss
cmp
cmpsb
dec
js
movb
mov
cmpsb
push
test
mov
fcoms
test
cmp
lcall
ljmp
pop
loopne
mov
loope
pop
pop
ficompl
lods
xorl
mov
add
mov
and
shl
push
sub
imul
dec
roll
sub
subb
mov
test
out
pop
frstor
pusha
fs
popa
dec
callw
movsl
mov
pusha
in
sub
andl
scas
pop
out
mov
call
roll
fidivrl
add
movsb
iret
add
flds
es
push
and
in
mov
fucomp
bound
add
leave
fsub
les
push
mov
jmp
pop
add
movsl
adc
pop
sub
add
test
adc
shl
xor
lods
and
xlat
mov
call
add
movsw
xchg
jmp
enter
insl
leave
daa
loopne
lods
pushf
inc
cs
add
fists
inc
shl
xor
pusha
leave
mov
test
sub
movb
gs
mov
aad
mov
imul
enter
popa
mov
test
mov
mov
scas
mov
imul
mov
in
gs
push
dec
push
cli
int
sbb
adc
cli
mov
leave
adc
mov
cmpsl
arpl
cmpsl
cmp
lahf
sbb
enter
push
test
xchg
mov
cmpsb
popf
addr16
out
roll
popa
in
test
add
movsb
pop
and
ret
and
movsl
leave
mov
mov
enter
pop
data16
and
movsb
enter
std
mov
fisubl
pop
pop
test
cmpsl
and
inc
fadds
leave
movsl
sub
jp
mov
enter
and
jle
inc
mov
pop
mov
xchg
adc
lods
push
call
fldenv
or
cmp
inc
jmp
mov
cmpsl
popa
sahf
xor
mov
cmp
pusha
dec
mov
xor
and
andl
and
add
loopne
popa
movsb
jg
call
mov
and
sub
xchg
and
and
pusha
addr16
test
imul
bound
add
shl
xor
fcmovb
jge
icebp
ret
data16
xcrypt-ctr
push
jno
movsl
or
leave
movsl
popa
mov
and
xchg
add
xchg
lahf
sub
push
cmpsb
fsub
fs
push
popf
push
shrl
test
add
aam
mov
test
ljmp
pop
or
sahf
test
daa
addb
pusha
push
popa
dec
mov
daa
cli
sbb
movsl
pop
sub
test
push
sbb
ret
jmp
es
cltd
test
leave
enter
mov
add
xchg
and
leave
out
jno
shll
cmpsb
ljmp
pop
imul
cmpsb
in
call
enter
test
inc
out
imul
mov
pop
ror
loopne
movsb
ret
mov
mov
and
mov
daa
pop
cmp
dec
and
fidivs
test
data16
sub
imul
mov
and
jmp
mov
jmp
aas
push
ret
ret
inc
dec
mov
sub
loopne
dec
push
mov
jg
add
les
test
xor
xchg
pop
sub
fsubrl
fwait
mov
and
ret
sbb
mov
daa
sbb
and
in
imul
or
pop
fldl
out
leave
and
pusha
inc
popa
cmpsb
cmp
xlat
imul
stos
daa
inc
and
xor
ja
popa
inc
popf
daa
shll
cmpsl
push
gs
cmc
or
sub
fmuls
add
inc
data16
mov
push
adc
lahf
jecxz
and
arpl
or
daa
mov
xchg
in
in
and
mov
test
cmpsl
lahf
mov
push
arpl
pop
push
test
jp
dec
cwtl
jne
loopne
outsb
adc
mov
dec
rolb
movsl
pop
cld
test
or
jne
gs
inc
adc
dec
rolb
repz
popa
test
enter
and
adc
inc
iret
sub
mov
inc
sbb
inc
mov
es
xchg
mov
pop
out
lcall
gs
and
mov
pop
gs
call
cmpsl
test
pushf
in
or
loope
sub
xor
xchg
sbb
test
int
scas
mov
ja
sbb
add
adc
inc
mov
leave
sub
jne
inc
add
cmp
push
das
xchg
inc
mov
je
sbb
mov
es
push
popa
dec
cmpsl
sub
int3
outsl
adc
punpckhwd
dec
leave
gs
pextrw
stos
movsl
test
pop
test
imul
test
jmp
lods
bound
insl
in
mov
imul
ret
movsl
lds
test
imul
fmul
mov
pop
mov
fsubrl
imul
mov
xchg
ret
lret
and
mov
pop
pop
mov
pusha
cmpsb
or
mov
dec
leave
and
sub
sub
test
ret
gs
and
mov
shlb
pop
enter
inc
and
test
mov
and
jecxz
popa
pop
mov
pusha
or
jne
in
popa
cmpsl
add
and
jns
imul
mov
cltd
fsubrs
leave
popa
dec
ljmp
leave
sbbl
fld
ret
sub
dec
imul
rcrl
and
or
add
xchg
cli
hlt
add
xor
je
cmp
inc
and
fiadds
loopne
pop
dec
mov
add
pop
sar
iret
cmpb
mov
adcl
add
roll
ret
leave
jne
inc
sub
in
out
inc
rorl
sub
loopne
fsubs
je
cli
pop
inc
les
push
mov
mov
sub
mov
add
adc
iret
cmpsb
ret
lret
dec
cmpsl
push
int3
dec
mov
leave
mov
test
loope
inc
test
mov
call
cwtl
jns
mov
mov
dec
data16
pop
jne,pt
data16
mov
add
data16
loopne
mov
mov
dec
cmp
jbe
push
mov
fstpt
ss
loopne
sar
loope
pop
inc
rol
dec
inc
ret
sbb
jmp
gs
sbb
sub
loope
cld
outsl
roll
es
mov
aam
addr16
mov
test
push
xor
lret
push
lock
pusha
mull
pusha
gs
popa
loope
add
es
and
and
lds
enter
adc
cmp
call
pusha
loopne
rcrb
fs
and
andb
cmc
and
fs
arpl
out
mov
into
add
leave
mov
pop
popa
inc
jecxz
ret
pop
and
mov
enter
sbb
roll
dec
les
pop
xchg
mov
addr16
arpl
sub
mov
pop
cli
sbb
cmp
inc
popa
out
add
orl
arpl
and
icebp
test
mov
xchg
or
sbb
and
inc
shll
rcrb
push
es
push
in
sahf
add
test
sub
add
pop
xchg
ret
test
add
sub
inc
hlt
outsb
xor
movsl
in
test
mov
test
jg
push
xor
rol
dec
cmp
lods
rorl
les
mov
inc
stc
and
dec
mov
fwait
lods
test
sbb
or
or
lods
leave
pop
mov
test
xchg
aaa
shl
mov
cmpb
fs
inc
fwait
and
mov
inc
es
cmp
jnp
jle
pusha
dec
pop
cmpsl
mov
and
sbb
addr16
sti
inc
sub
daa
ret
fwait
and
sbb
dec
bound
pop
sbbl
roll
popa
add
faddp
test
loopne
or
shl
lret
add
test
test
xchg
orl
mov
mov
sub
pop
mov
fadds
or
xchg
loopne
and
arpl
dec
aad
sbb
icebp
add
pop
in
pop
bound
mov
inc
mov
sub
ret
fldl
movsb
loop
or
leave
addr16
sbb
dec
ret
pushf
add
adc
push
imul
sbb
imul
dec
subl
bnd
daa
sub
mov
and
jmp
pop
xchg
imul
call
sub
aad
inc
decb
xor
pop
add
adc
adc
insl
mov
mov
enter
mov
pop
jne
xchg
sbb
mov
arpl
xchg
dec
fildl
pop
fwait
mov
xchg
push
mov
movsl
add
test
mov
jbe
push
sahf
icebp
filds
pop
inc
stos
les
int3
mov
movsl
imul
cmp
cmp
push
sub
shl
adcl
inc
push
fwait
inc
mov
inc
inc
add
pop
and
cmpsb
mov
mov
ret
mov
mov
jge
cmp
mov
push
popf
push
push
push
inc
sub
lret
dec
les
inc
xor
add
cmpsl
mov
mov
push
pop
mov
mov
add
les
mov
pop
addr16
dec
cli
push
andl
mov
and
test
daa
xchg
aaa
test
add
inc
mov
and
mov
mov
xor
enter
aam
and
cmp
mov
out
test
test
movsl
test
jp
call
inc
test
sub
out
cltd
out
fidivl
mov
pusha
fimull
outsb
mov
fldcw
test
imul
out
roll
or
mov
imul
jb
add
and
xchg
pop
sbb
fmul
mov
pushf
jne
xchg
pop
sbb
fcmovne
mov
fwait
jne
loopne
imul
cwtl
cmp
fwait
insb
mov
xlat
hlt
push
cltd
leave
xor
shr
rorb
pop
out
sub
cmc
jo
loope
add
popa
loopw
pop
jge
sbb
add
out
fcmovnu
sub
pop
mov
pop
fimull
inc
loopne
mov
lock
iret
loop
dec
dec
jg
jae
gs
dec
dec
fld
mov
cltd
test
loopne
imul
or
cmpsl
sbb
and
xlat
pop
aam
mov
daa
push
shlb
outsb
rorl
cltd
inc
loope
iret
mov
movsb
loop
mov
das
pop
mov
imul
mov
push
xchg
pop
or
push
push
xor
daa
and
imul
add
lds
js
inc
or
inc
cmpsl
aad
add
gs
lods
pop
cmp
icebp
movsl
jl
rol
loop
sbb
stos
jle
xor
imul
flds
sub
mov
or
out
rclb
movsb
push
fwait
test
inc
adc
iret
loope
test
imul
dec
mov
cmp
imul
iret
mov
pop
mov
in
rcrl
mov
or
call
pop
fstl
repz
roll
inc
inc
stos
xor
imul
inc
mov
enter
xchg
lds
pop
sbbb
sbb
mov
cmp
pop
inc
hlt
scas
sahf
mov
adc
push
or
clc
xchg
pop
dec
sbb
lds
mov
add
push
mov
push
lahf
ret
and
mov
mov
movsl
mov
aad
mov
add
add
mov
mov
fildll
imul
sub
mov
bound
leave
fmuls
out
popf
les
enter
pop
and
test
test
sub
enter
pop
and
inc
popf
jecxz
or
leave
mov
fsubrs
xchg
enter
pop
push
fsubs
ret
pop
and
imul
mov
and
test
and
scas
fs
cld
leave
out
leave
les
mov
mov
out
test
leave
mov
add
adc
xchg
cmp
push
push
xchg
pop
cs
leave
adc
mov
in
xchg
test
rolb
inc
cmpsb
adc
mov
jg
out
adc
enter
sub
push
pop
xchg
lods
lret
push
enter
leave
dec
dec
and
ret
inc
push
sbb
popa
in
aam
leave
fsubp
sub
cmpsb
pusha
jb
ret
sub
pop
sub
mov
push
js
xchg
stos
add
inc
cmpsl
cmpsb
in
xlat
daa
lds
inc
mov
imul
push
fstpl
cltd
inc
shll
push
sub
xchg
mov
inc
out
xchg
int
mov
and
pusha
inc
lret
in
cmp
add
leave
ret
sub
push
push
push
mov
fmul
fld
push
ret
or
lret
and
mov
ja
inc
arpl
mov
inc
xchg
xchg
imul
popl
add
call
and
testb
xchg
scas
dec
and
sar
loopne
test
dec
sahf
leave
call
or
xchg
xor
dec
enter
inc
int
sub
and
add
sbb
addr16
pop
out
call
and
add
pop
add
pop
sbb
and
or
mov
inc
ror
add
lcall
fsubs
out
xchg
push
add
jmp
popa
bound
mov
movsl
arpl
repnz
das
dec
loop
shlb
or
add
aad
mov
loopne
sti
fldcw
fldcw
sbb
xchg
fldcw
imul
adc
pop
jmp
adc
cmpsl
popa
and
arpl
cmpsb
sahf
mov
pop
in
sub
pusha
mov
ffreep
jnp
loope
rcrb
pop
pop
pop
inc
ljmp
xor
rclb
bound
test
lods
test
sti
lods
test
or
test
xchg
lods
test
adc
loopne
or
fs
or
movsb
mov
cmpsl
mov
shll
fwait
shll
imul
jmp
pop
arpl
in
lods
add
add
daa
rorb
loopne
sub
or
loopne
stos
stos
inc
cmpsl
retw
sbb
movsb
fmull
loope
cmp
test
add
iret
loope
or
pop
and
mov
sub
jae
clc
cmpsl
outsl
push
mov
push
pushf
inc
jmp
adc
pop
cld
in
lds
or
shrl
andb
movsl
test
mov
cmp
pop
dec
scas
cmpsb
and
test
dec
lods
sub
jnp
test
orb
xchg
jmp
mov
and
jmp
mov
and
aas
xor
and
loopne
push
sbb
mov
sub
cmp
and
and
mov
inc
and
ljmp
test
mov
popf
dec
jle
test
and
mov
pop
test
adc
and
fsubs
mov
xchg
adc
inc
and
mov
dec
mov
pusha
add
test
jecxz
lahf
and
lahf
lds
inc
mov
and
or
out
jmp
and
mov
scas
pop
lahf
sbb
mov
lahf
and
and
sar
pusha
inc
test
cmpb
sbb
pop
inc
mov
xchg
dec
sbb
mov
mov
inc
mov
mov
jecxz
and
test
jmp
test
movsl
dec
dec
pushf
movsl
jmp
aad
es
addr16
mov
faddl
jns
dec
enter
out
push
inc
pop
pop
xchg
mov
pop
mov
and
fmull
xchg
and
lock
leave
sbb
add
jo
or
mov
dec
in
cmp
leave
stos
int3
or
cmpsb
mov
es
mov
scas
dec
vpperm
call
cmp
mov
mov
cmpsl
add
orb
andl
popa
mov
add
dec
shlb
imul
ja
inc
xchg
ja
sub
test
mov
pop
test
call
pop
mov
cmp
fs
daa
repnz
pusha
push
lahf
mov
pop
dec
add
sbb
data16
jecxz
lcall
dec
sub
push
test
and
test
inc
and
and
push
call
imul
dec
clc
ret
in
pop
mov
mov
movsl
jecxz
jnp
cmpsb
mov
std
test
jmp
leave
jmp
leave
inc
cmp
gs
leave
sub
jecxz
push
mov
movsl
cmp
jno
pop
aam
out
in
cmpsl
jecxz
popf
test
sub
in
mov
test
test
cmp
inc
fldl
inc
fisttps
mov
loop
lret
nop
sub
or
jmp
out
test
lea
sub
fbld
xlat
mov
add
sub
cmp
gs
and
inc
mov
mov
movsl
cmp
iretw
mov
add
sub
aam
out
dec
cmp
inc
mov
mov
scas
mov
mov
ret
cmp
inc
inc
pop
mov
jns
mov
cs
inc
and
mov
mov
adcb
ds
mov
lock
loopne
and
adc
fstp
jmp
xor
daa
loop
rcrb
shll
mov
or
fs
and
out
add
inc
fwait
arpl
mov
add
adcl
bound
movsb
mov
xlat
dec
jb
and
inc
hlt
popf
mov
dec
loopne
mov
popa
js
stos
daa
mov
test
xchg
test
and
lds
add
cmpsl
jae
xorb
mov
add
es
loopne
mov
inc
movsl
lcall
xor
mov
mov
and
pop
leave
push
imul
dec
negb
movb
push
mov
in
cmpsl
in
arpl
add
mov
sbb
mov
inc
cmpsl
out
xchg
push
movl
inc
pop
jecxz
aad
leave
imul
enter
pop
out
movl
mov
push
fsubrs
test
lea
pop
and
xchg
pop
imul
mov
pop
jb
or
je
lcall
pop
mov
mov
inc
js
dec
popa
dec
fsubr
mov
popf
pop
addr16
pop
push
fadds
add
or
pop
popa
int3
imul
imul
and
outsb
add
xor
mov
inc
and
sub
stos
test
jmp
adc
rol
aad
bound
pusha
movsl
lret
mov
push
cli
test
call
pusha
popa
mov
in
loope
cmp
loope
sub
call
jb
xlat
mov
pop
daa
cmpb
or
and
jns
mov
push
cmp
and
mov
mov
mov
jb
lods
gs
ret
mov
scas
mov
add
shl
mov
cmpsl
loopne
repnz
mov
int3
mov
jne
imul
dec
mov
push
mov
cmp
add
jae
gs
mov
imul
imul
data16
mov
ret
mov
imul
mov
sbb
and
loope
or
inc
xor
add
mov
adc
sub
inc
ret
add
lcall
mov
out
inc
and
mov
jecxz
enter
fsubs
jmp
out
mov
mov
outsl
test
inc
addr16
sub
mov
and
sub
ret
sar
ret
arpl
mov
sahf
adc
shl
cmpsl
or
test
pop
xchg
popf
add
lahf
loop
jns
shl
xchg
mov
test
pop
inc
fnstenv
ret
lahf
rcr
and
jecxz
test
xlat
xchg
aam
xor
movsb
cli
enter
pop
sub
test
popa
sub
movsl
and
mov
fldcw
fsubs
sub
sbb
xor
dec
inc
mov
xor
loope
inc
xchg
pop
loope
sub
out
inc
call
loope
cmpsb
mov
ret
gs
ret
and
add
clc
dec
push
and
dec
loopne
nop
sub
pop
sub
cmp
mov
xchg
add
or
fs
shrb
test
imul
scas
mov
cltd
jb
call
mov
push
add
fists
xor
popa
andb
inc
sbb
or
push
pop
addr16
lds
rolb
push
jmp
sub
out
push
popa
inc
sbb
test
push
xchg
out
adc
icebp
in
sub
test
daa
mov
test
sub
mov
xor
jno
mov
and
mov
cmpsl
mov
movsl
mov
pop
inc
xlat
inc
stos
dec
leave
mov
pop
xchg
ret
leave
mov
stos
lods
leave
sub
shlb
inc
or
stos
mov
inc
leave
stc
shlb
ja
fwait
addr16
xchg
outsl
scas
shll
movsl
test
loopne
mov
dec
mov
test
iret
mov
aam
mov
ret
inc
std
out
or
rorl
jg
or
dec
mov
test
xchg
xchg
push
xlat
addr16
loopne
push
add
in
loope
jge
sbb
sub
mov
test
test
xlat
fdivrs
and
sbb
xchg
adc
pop
mov
pop
xchg
pop
in
out
loope
cmpsl
push
rcll
pop
adc
rcrb
mov
fnsave
popa
mov
jo
insl
add
addr16
add
add
push
out
mov
xchg
mov
or
inc
icebp
and
iret
jo
dec
jecxz
ret
push
mov
movsb
ljmp
das
sub
leave
jns
call
and
mulb
and
frstor
xor
mov
imul
testl
lds
lret
add
test
mov
mov
or
mov
jno
mov
mov
mov
js
push
loopnew
les
pusha
addr16
push
fsubp
mov
adc
jge
js
es
out
mov
inc
mov
xchg
pop
test
movsb
add
filds
out
ret
pop
and
imul
popf
daa
pop
xchg
out
inc
pop
movsb
fadds
arpl
popf
and
popa
push
sahf
mov
pop
pop
data16
and
add
and
mov
inc
out
popf
movsl
pop
inc
enter
pop
and
push
or
popa
inc
pop
mov
and
inc
enter
dec
mov
popf
out
gs
popa
mov
call
pop
xchg
cmpsb
cmpsl
inc
pop
fadds
rolb
loopne
mov
cmp
lock
ret
mov
push
enter
pop
in
inc
in
popf
jecxz
inc
fsubrs
test
dec
fsubs
push
pop
gs
pop
in
arpl
ret
test
mov
call
fadds
out
popf
les
enter
pop
bound
and
jmp
cmpsl
xchg
fadd
movl
movsb
enter
pop
inc
fsubs
sbb
cmpsl
call
movl
inc
pop
in
inc
mov
mov
pop
lea
cmp
mov
add
daa
push
shll
call
arpl
pusha
imul
test
mov
add
sub
and
cmpsl
inc
sub
inc
in
jmp
into
lahf
rcll
sub
inc
pop
push
adc
lock
or
add
or
test
jne
xchg
std
sub
jl
enter
les
mov
scas
mov
iret
inc
pop
sti
scas
mov
iret
sub
scas
mov
sarl
pop
or
and
xor
movsl
imul
add
inc
xor
shll
movsl
inc
mov
test
shlb
pop
xchg
sbb
movsl
movsl
mov
in
cmp
sarl
sbb
rclb
ret
bsf
add
mov
push
and
mov
sub
and
es
out
mov
in
push
mov
mov
call
mov
adc
inc
cmpsb
or
and
dec
dec
pop
stos
int3
enter
movsb
ret
mov
xor
arpl
in
push
pop
xchg
sbb
repnz
and
mov
and
mov
dec
push
mov
dec
enter
pop
mov
dec
dec
mov
fs
or
inc
or
and
mov
call
imul
xchg
jecxz
inc
data16
dec
xchg
mov
pop
fsub
dec
out
sti
and
mov
lds
mov
fisubrl
jle
push
add
add
addr16
hlt
add
addr16
jne
test
dec
sub
push
inc
and
sub
xchg
cltd
jno
imul
jae
sub
mov
xchg
pop
mov
test
fadd
cmpsl
push
mov
daa
push
leave
stc
scas
mov
scas
pop
loopne
ret
xchg
sub
mov
dec
imul
xor
sbb
stos
addb
mov
loope
ret
pop
mov
andb
sub
movsl
popl
or
dec
or
cld
rcll
aad
xor
and
dec
test
loopne
push
pusha
loope
xchg
or
jo
fs
test
or
rolb
nop
or
scas
dec
dec
push
xor
mov
mov
sub
adcl
lds
xchg
nop
out
mov
dec
loopne
jecxz
rorl
arpl
mov
test
adc
enter
mov
and
or
lea
cmp
test
cmp
xchg
imul
dec
arpl
xorl
fisubrl
pop
loop
movl
test
mov
out
jno
xchg
movsl
mov
addl
aam
ret
inc
mov
jmp
loop
adc
adc
dec
mov
notl
btr
mov
mov
sahf
loope
pop
xlat
xchg
xor
rolb
call
loopne
cli
ljmp
int3
aam
popf
movsb
pop
lods
sarb
pop
cmpsl
jno
imul
push
push
rcrl
sub
cmp
sbb
fbstp
push
and
mov
pusha
shll
rclb
push
xor
xchg
outsl
and
xchg
dec
daa
adc
xchg
js
test
mov
mov
addr16
int3
loope
and
and
ret
test
push
pop
cmpsl
lret
dec
push
mov
or
inc
pop
xchg
mov
mov
pop
icebp
or
fsub
addl
imul
stc
cmp
call
call
add
pop
and
mov
mov
sbb
push
loop
es
xlat
bound
dec
and
mov
jecxz
gs
and
outsl
dec
push
daa
adc
mov
ficoms
pop
loope
fcmovnu
addr16
and
xor
repz
lods
mov
rorl
daa
fwait
into
movsl
cmp
pop
cmp
fildll
mov
mov
jbe
cs
gs
push
dec
or
xchg
mov
imul
jns
fldcw
jmp
mov
and
pop
inc
pop
les
mov
jp
popa
jmp
ja
cltd
stos
push
fs
subl
jmp
addr16
and
jno
and
data16
adc
out
loopne
out
cmp
loop
jbe
cmpsb
xchg
cmpb
out
call
js
enter
fucomip
testb
inc
adc
mov
mov
inc
cmp
sub
shll
call
inc
leave
pushf
jp
leave
mov
xor
test
xchg
outsl
repnz
jle
inc
ljmp
jno
test
test
mov
xchg
and
test
fisubs
inc
sahf
enter
dec
and
mov
popf
loop
mov
sub
adc
push
cmp
push
repz
popf
cmp
mov
inc
fdivs
push
pop
mov
adc
jno
movl
cmpsl
imul
and
sbb
xor
mov
xor
dec
imul
jo
or
and
inc
push
pop
popa
notb
fdivl
loop
leave
scas
dec
int3
add
inc
rcrl
mov
out
int
loop
sbb
or
pop
aam
daa
movsb
cwtl
loop
imul
int
arpl
pop
fucom
add
jg
mov
lds
push
cltd
loope
pop
jae
iret
dec
lcall
and
daa
repz
dec
adc
fwait
sub
dec
pop
shlb
mov
fadd
xlat
nop
insb
sub
sub
sbb
loopne
mov
push
adcl
andb
or
mov
jmp
and
leave
cmp
roll
add
sub
scas
out
ret
push
cmpsl
cmpl
inc
popf
mov
sbbb
stos
add
or
mov
cmpsl
popf
mov
test
aam
aaa
in
and
push
ret
mov
xchg
call
xchg
pop
bnd
lcall
sub
testl
and
or
les
scas
cmpsl
mov
mov
loopne
add
ret
lahf
add
xrelease
or
hlt
scas
loopne
jo
int
in
test
push
mov
sub
push
das
mov
mov
or
dec
or
movb
shlb
or
lods
movsl
pop
cmpsb
rol
mov
cmpsl
add
out
mov
bound
push
mov
out
call
addl
test
cmpsl
aaa
out
cltd
or
scas
or
xchg
mov
mov
bound
movsb
cmp
leave
lea
mov
pop
es
cwtl
mov
loopne
add
out
mov
pop
es
popa
and
call
jae
test
out
pop
test
and
lahf
out
mov
test
cmpsl
mov
mov
lods
movsl
dec
xchg
mov
loopne
pop
mov
jmp
movsl
mov
fstl
pop
jo
cmp
mov
or
pop
fs
pop
add
cmp
loope
and
mov
xchg
jle
cmp
push
shl
xchg
push
cmpb
add
mov
xchg
mulb
enter
out
mov
ret
inc
popf
out
cmp
push
xor
sub
jae
push
out
rolb
push
cmp
xchg
jne
andb
in
mov
test
fstpt
cmpsb
sub
movl
fs
jecxz
cmp
inc
jle
test
mov
cmp
mov
imul
popa
gs
es
pop
or
add
popf
leave
jp
popa
les
push
dec
add
pop
xor
and
mov
or
pop
dec
movb
cmp
test
mov
lahf
mov
jae
loope
push
lock
push
mov
dec
ret
test
inc
pop
xorl
mov
mov
or
pop
sbbl
mov
sub
push
inc
dec
xor
inc
cmpsl
es
lods
push
mov
add
jne
rol
dec
sub
jne
xchg
leave
shlb
or
leave
mov
sub
test
add
les
clc
shrb
inc
test
mov
inc
inc
cltd
dec
pop
les
mov
cmovbe
or
out
add
and
xorl
test
mov
pop
add
ds
das
ss
dec
pop
lods
fmuls
imul
sub
xchg
sbb
inc
stos
inc
add
or
outsb
out
test
xorl
hlt
mov
inc
outsb
inc
movsb
push
or
push
push
inc
mov
fmul
in
enter
mov
inc
mov
jmp
es
push
std
inc
pop
popl
bound
sub
push
in
add
lods
movsl
repnz
add
andb
pop
daa
push
sub
dec
shlb
cld
inc
mov
add
cmp
lea
mov
leave
xlat
mov
mov
stc
jmp
xchg
movsl
add
and
aad
cs
mov
and
xchg
inc
mov
mov
aad
out
cmc
dec
add
inc
sub
loopne
lcall
call
and
inc
mov
add
mov
inc
outsl
dec
mov
mov
dec
out
cmp
pop
popa
mov
pop
inc
and
movsl
jmp
loopne
pop
and
pop
mov
inc
push
xchg
inc
dec
push
cmpsb
popa
xchg
push
inc
movsb
push
or
cmpsl
lcall
add
and
daa
mov
and
add
sbb
test
test
test
dec
pop
cmp
pusha
and
push
loope
lcall
pusha
xorl
mov
or
and
xchg
lods
in
mull
xchg
mov
imul
push
jns
xor
mov
xchg
sub
xlat
lcall
mov
and
test
xorl
popa
shll
sub
or
fxch
icebp
inc
mov
les
push
mull
dec
test
ret
test
pusha
lds
push
pop
push
and
and
dec
out
or
and
fcmovbe
sti
cmp
mov
mov
pop
leave
jno
xchg
mov
or
add
pop
loopne
out
push
shll
or
mov
or
add
pop
test
or
movsl
pop
jo
xchg
sbb
imul
xor
nop
lock
dec
pop
scas
enter
and
and
dec
nop
cmpsb
pop
sub
jae
test
lods
xchg
push
sub
lods
test
lods
loope
data16
xchg
and
jecxz
xchg
in
sub
xor
imul
lahf
enter
add
mov
sub
cmp
movsl
push
or
sbb
loope
fs
inc
and
or
add
es
push
or
shll
or
and
test
push
rorb
test
mov
inc
pop
inc
pop
dec
inc
mov
xchg
icebp
dec
imul
ret
addr16
cmp
scas
xchg
add
test
data16
std
and
imul
dec
out
test
mov
jbe
call
popa
cmpsb
rol
or
into
enter
mov
andl
mov
jne
roll
mov
enter
and
shlb
outsl
lods
lds
stc
loopne
and
addb
ret
push
inc
mov
sbb
or
movsb
stos
mov
leave
call
mov
mov
cli
movsl
and
mov
inc
cmpsb
push
sbb
sbb
scas
add
adc
mov
and
out
xchg
test
mov
in
movsl
call
mov
faddl
mov
movsb
stc
mov
in
popa
push
push
xchg
into
arpl
mov
cmpsl
cmpsl
and
popf
in
test
gs
jmp
and
add
xchg
add
movb
mov
mov
cmp
imul
push
cltd
jmp
fs
out
test
push
movsl
test
fldt
mov
adc
jmp
int3
jecxz
lods
pop
sbbb
inc
pop
lods
mov
pop
daa
add
lods
mov
pop
rcrl
and
add
popf
pop
inc
add
pop
pop
mov
mulb
pop
es
cmp
and
jae
xchg
cmpsb
xchg
popf
sub
mov
mov
pop
inc
data16
ret
inc
push
test
ret
test
inc
xchg
inc
out
xor
add
movsl
loopne
shlb
sbb
sbb
test
add
cmpsb
and
scas
rorb
test
push
add
dec
ret
movsl
push
mov
loopne
test
mov
gs
mov
sub
pop
add
mov
fcomps
ret
inc
stos
pop
leave
inc
add
add
repz
inc
mov
mov
leave
add
movsl
movsb
jne
xchg
jnp
push
mov
xor
dec
pop
scas
fmuls
ljmp
and
mov
out
pop
or
inc
push
sbb
adc
add
pop
aaa
ret
xchg
in
out
dec
mov
add
mov
ljmp
movsl
out
inc
test
test
enter
adc
xchg
enter
popf
in
and
test
inc
sti
pop
out
mov
adc
inc
mov
mov
push
mov
out
les
pop
subl
inc
dec
or
xchg
or
mov
aam
repz
xor
jo
and
jmp
mov
adc
xchg
hlt
fs
imul
nop
ret
add
push
jbe
in
add
fistl
adc
add
nop
movsl
test
jns
rol
dec
cmp
inc
in
push
pop
jo
mov
addr16
ffree
gs
pusha
leave
add
sub
push
pop
imul
scas
stc
rcrb
jmp
rol
jecxz
das
add
ja
inc
cmp
jae
addb
daa
mov
repz
add
and
jnp
icebp
test
jo
mov
and
sub
fadds
leave
sbb
jae
sub
arpl
mull
lea
inc
bound
add
lcall
or
adc
push
in
out
push
aam
xor
fs
les
lds
andb
popa
inc
mov
add
ret
jmp
rcr
jecxz
push
test
repz
or
dec
movsl
into
mov
test
push
test
add
mov
out
loop
loopne
aam
inc
xor
into
test
call
outsb
dec
add
sub
dec
ret
xor
jo
sub
mov
or
sub
and
or
and
xchg
ffree
pop
and
outsb
inc
imul
subl
bound
and
and
jns
stos
add
xor
test
add
pusha
inc
in
dec
gs
mov
mov
ljmp
lods
movsl
mov
inc
or
jg
rorl
sub
lods
movsl
in
pop
sbb
daa
iret
dec
ret
jmp
out
xchg
mov
mov
xchg
cltd
jno
and
mov
cltd
pop
mov
pusha
enter
inc
push
inc
stc
scas
fmuls
inc
cmc
push
loopne
rolb
adc
or
mov
dec
out
lahf
cmc
out
sub
stc
loopne
add
ret
cmp
les
cmp
in
xchg
inc
vpaddw
test
and
jg
fsubs
shlb
iret
ret
cmp
call
push
popa
stc
dec
mov
stos
movsl
call
gs
pop
leave
cmc
testb
iret
jno
cmc
fisubrs
clc
iret
xor
out
mov
les
mov
add
and
into
imul
xchg
test
pop
loopne
mov
jmp
dec
imul
pop
mov
out
cmpsl
dec
pop
lods
fmuls
imul
lds
push
subb
popf
in
gs
dec
inc
xchg
shlb
pop
dec
pop
mov
xchg
dec
xchg
ljmp
add
or
pop
mov
movsl
addr16
xlat
loope
test
dec
es
dec
dec
dec
push
jo
in
icebp
sub
lds
xchg
addb
test
test
push
inc
xchg
enter
xchg
inc
xor
js
push
add
xchg
mov
nop
pop
shlb
add
cmp
test
or
push
add
push
add
test
inc
lock
dec
ret
pop
or
xor
pop
sub
mov
loope
inc
inc
sub
in
test
mov
dec
sbb
es
mov
loopne
xlat
inc
or
cmp
inc
movsl
aaa
cmp
addr16
std
pop
pop
inc
mov
mov
jmp
add
shl
pop
push
pop
inc
mov
pop
call
or
in
mov
inc
xchg
lcall
inc
leave
pop
and
pusha
add
lret
int3
mov
xchg
and
jmp
inc
dec
mov
in
int3
imul
scas
mov
xor
bound
or
icebp
popa
dec
sbb
xor
push
push
add
jmp
arpl
mov
jbe
data16
and
pop
sbb
andl
pop
cmp
push
inc
push
arpl
std
dec
jecxz
enter
mov
mov
cmpsl
jo
sub
inc
mov
dec
add
repz
in
add
loop
and
in
pop
les
sbb
sub
and
cmpsl
dec
mov
enter
test
pop
es
and
push
test
cld
call
ret
insb
pusha
test
pop
mov
pop
inc
and
and
aaa
ret
mov
pop
stc
repz
leave
dec
fists
test
test
jbe
pusha
dec
repnz
out
and
ret
imul
dec
mov
xchg
mov
test
and
mov
shlb
rcrb
stc
sbb
mov
out
cmp
cmp
mov
cmpsb
inc
cmp
aad
nop
lahf
gs
into
xor
inc
mov
test
out
mov
jmp
mov
sub
pusha
arpl
test
call
xor
leave
cmp
aam
test
adc
mov
push
test
test
jno
or
pushf
or
sub
popa
push
xchg
movsl
inc
add
and
xchg
rolb
xchg
pop
gs
xchg
mov
int3
add
popa
pop
in
outsb
adc
sub
ret
loopne
test
push
pushf
sbb
test
xchg
stc
shl
mov
pop
ret
jmp
ret
inc
mov
pop
lds
cmpsl
mov
scas
test
and
js
cmpl
ja
cmc
test
or
dec
je
add
leave
idiv
test
movsl
out
ret
leave
and
mov
outsl
test
pop
inc
je
mov
popa
mov
sub
mov
lea
add
es
sub
and
into
or
add
ret
inc
insb
or
andl
push
jmp
pop
ret
mov
mov
fs
mov
fs
or
xor
loopne
rolb
push
inc
dec
gs
loopne
shrb
cmp
in
imul
pop
gs
sub
sti
pop
jle
test
mov
rorb
fwait
mov
or
mov
jo
pop
lahf
push
test
jmp
fsubs
iret
jmp
loopne
mov
lea
pop
mov
iret
sbb
dec
dec
scas
leave
jnp
push
arpl
rolb
sub
push
dec
xchg
fs
pop
or
jae
iret
stc
ret
dec
inc
into
jmp
icebp
popa
and
jmp
imul
mov
sub
cmp
sbb
pop
cmpsl
mov
xchg
iret
sarb
shlb
add
sub
test
test
daa
jnp
inc
gs
movsb
or
cmp
arpl
ret
loopne
movsb
scas
xor
fsub
add
ret
and
mov
jnp
mov
sub
scas
mov
int3
out
popf
mov
enter
and
adc
fmul
das
mov
lods
cmpsl
or
imul
sub
inc
in
cmp
bound
arpl
hlt
dec
sub
out
gs
call
sub
stc
push
cmpsb
cmp
inc
das
ret
lea
cs
addr16
and
xchg
dec
test
movb
lock
push
daa
mov
xchg
mov
loope
sub
xchg
and
jmp
adc
cmpsl
mov
jecxz
popw
xlat
in
dec
ja
xlat
mov
out
mov
bound
lods
dec
imul
inc
dec
movl
dec
les
lods
push
mov
and
sbb
movsb
add
movsb
leave
out
inc
addb
cmpsb
shl
std
out
add
and
mov
mov
das
popf
bound
mov
ret
or
pushf
outsl
test
enter
gs
jg
pop
mov
shlb
repnz
lds
sbb
fldenv
lahf
ja
dec
dec
fcmovu
icebp
dec
imul
nop
subb
daa
dec
fs
jecxz
push
mov
in
imul
xor
nop
dec
dec
jecxz
inc
push
mov
mov
repz
aaa
in
test
jb
inc
inc
movsl
dec
jecxz
es
dec
divl
shr
dec
in
push
dec
arpl
leave
cmp
daa
aam
dec
xlat
add
aas
jns
mov
scas
mov
movsl
test
addb
loopne
loop
test
loope
jge
xor
aaa
cltd
pop
flds
bound
sub
leave
fldcw
faddl
xchg
pop
inc
cltd
inc
add
mov
movsl
mov
mov
loope
adc
es
addr16
inc
xor
sub
test
add
cltd
add
shr
sbb
fstl
mov
or
push
test
mov
mov
fildll
inc
test
lods
test
dec
leave
lds
or
out
popa
mov
add
mov
dec
ret
mov
xchg
or
enter
rolb
and
mov
mov
cmp
inc
lods
ret
dec
cmpsl
enter
add
inc
mov
shl
in
sahf
or
shrb
iret
loopne
test
lods
in
dec
push
in
loope
inc
mov
inc
fcomp
xchg
sub
pusha
or
ret
xchg
cltd
enter
fiadds
jns
movsl
subb
stos
outsb
call
ret
hlt
call
jmp
movsl
cmpsb
enter
mov
inc
mov
rol
mov
push
cli
pop
mov
lds
push
pop
mov
mov
inc
pop
mov
hlt
nop
dec
out
es
out
ror
cltd
addr16
gs
mov
xchg
imul
sbb
pop
imul
out
in
or
daa
cmp
mov
sbb
inc
mov
or
movntq
jmp
aam
and
popa
movsl
or
imul
xchg
fs
pop
ret
rcrb
imul
push
ret
ffreep
inc
add
cmc
jecxz
leave
cs
pop
ficoms
cmpsb
push
push
inc
call
jl
loopne
push
xchg
inc
imul
lahf
mov
jb
out
mov
popa
out
mov
cltd
jbe
push
jle
mov
cmp
outsb
test
jg
in
ja
sbb
dec
rcl
adc
loopne
jbe
iret
fiadds
mov
test
fadd
xlat
ds
iret
jmp
adc
push
push
jge
imul
ds
fsubrl
dec
jmp
push
fcompl
sahf
xchg
imul
imul
push
push
faddl
iret
xchg
fimuls
arpl
jle
dec
ds
jl
lret
fiadds
das
xchg
inc
outsb
test
cs
pop
add
loope
inc
jle
push
movb
ja
cs
dec
lods
testb
jge
rcrb
mov
mov
cli
popf
and
fnstsw
fisubrs
loop
push
mov
xchg
iret
int
fldenv
dec
das
push
loope
dec
sub
cmc
mov
mov
iret
cmp
sub
add
sbb
sub
mov
dec
inc
sahf
pop
jle
imul
adc
cmpsb
imul
sbb
addr16
int3
hlt
and
mov
icebp
mov
mov
inc
jmp
loopne
sti
dec
mov
outsb
pop
and
and
sub
cmp
in
xchg
fs
mov
loopne
mov
cmp
push
pop
fstl
mov
pop
jl
sbb
out
inc
push
ja
mov
push
mov
or
xchg
movaps
inc
mov
or
and
cmpsb
xchg
es
and
fimuls
test
fidivs
push
nop
sbb
mov
xor
loop
bound
mov
loop
and
mov
cmpsl
iret
inc
icebp
das
lahf
jne
outsl
insb
dec
rorl
mov
sub
fdivrp
lds
enter
loope
fadds
mov
dec
add
movl
pushf
xchg
scas
rorl
fnstsw
cmpsl
pop
push
pop
sbb
out
and
enter
inc
push
es
hlt
out
mov
sub
cmpsl
shlb
lahf
cltd
bound
into
and
inc
cmpsl
aam
xchg
test
or
push
fsubs
outsb
mov
cmove
rorl
mulb
add
cmpsl
inc
mov
xchg
push
hlt
mov
test
inc
roll
mov
aas
sub
mov
into
xchg
inc
jle
mov
cmp
mov
movl
insb
add
call
inc
sbb
mov
sbbl
mov
mulb
test
jge
out
sub
loope
pop
fs
xchg
push
or
loopne
fld
test
jb
and
cmp
push
das
call
roll
fmull
mov
test
xor
loop
ss
scas
je
xchg
sarl
test
test
or
cmpsb
popf
leave
adc
test
jmp
cmpsl
sub
mov
push
test
test
jmp
jo
dec
push
test
daa
test
pushf
or
push
call
cmpsb
iret
call
loopne
or
dec
jl
cmp
push
in
mov
loope
jg
jns
bound
sbb
push
cmpsb
enter
into
dec
insl
adc
fldcw
or
imull
push
dec
push
push
ja
lds
fisubrl
out
movsb
mov
lods
sub
sar
sub
xor
ss
imul
jmp
cmp
repnz
loop
cmpsb
mov
int
or
push
loope
xorl
xchg
add
inc
pop
clc
imul
leave
jecxz
mov
dec
add
fsubs
mov
mov
fchs
mov
jmp
popf
cmpb
cltd
dec
test
sub
jmp
loope
jne
aad
jnp
enter
rcrl
dec
dec
sub
or
daa
loope
jmp
daa
das
adc
dec
xor
inc
dec
mov
mov
inc
mov
push
mov
xchg
xchg
sbb
pop
fisubs
mov
cmp
outsb
xor
pop
jl
or
adcl
loopne
cmp
pop
mov
out
cmp
cmp
jg
mov
mull
arpl
sbb
push
ret
les
std
fsubrs
or
outsb
adc
popf
xor
jle
addr16
cs
mov
bound
and
pop
mov
xor
mov
sub
mov
mov
dec
int3
mov
rolb
les
imul
imul
push
bound
loop
pop
lock
mov
lahf
sub
cmpsb
loopne
loope
fwait
mov
int
sbb
xchg
xor
cmc
inc
loop
or
jp
mov
or
rcr
ds
mov
or
rcll
cmpsb
mov
popa
push
ja
pop
dec
leave
push
lret
pop
pop
mov
push
outsb
xchg
jbe
roll
cmp
mulb
xchg
mov
jmp
ja
mov
mov
dec
faddl
inc
push
test
sub
mov
push
mov
ret
dec
iret
dec
into
push
cmp
test
adc
cmpsl
scas
hlt
mov
rolb
dec
dec
sti
loop
mov
jnp
mov
stos
and
inc
xor
push
out
sub
dec
es
movsb
sbb
ret
stos
and
mov
lahf
mov
add
jg
push
push
push
int3
test
push
addr16
and
mov
push
add
jecxz
mov
fs
cmp
bnd
sub
js
push
mov
lcall
or
sbb
in
mov
enter
dec
pop
ret
mov
mov
mov
out
pop
dec
mov
sub
pop
mov
fiaddl
bound
enter
fmull
in
xchg
in
fldl2e
daa
jecxz
push
imul
mov
loopne
stc
cmpsl
popa
sub
jmp
cmpsl
ret
dec
cmpsb
cmp
dec
mov
inc
test
imul
out
gs
daa
mov
dec
xchg
in
mul
mov
inc
outsb
cs
xor
rorl
sub
jb
and
inc
js
ss
mov
mov
fsub
arpl
and
dec
iret
call
cltd
popf
cs
mov
popa
arpl
lds
out
dec
outsb
arpl
in
dec
sahf
out
fsubs
dec
iret
xchg
scas
inc
arpl
cmpsb
push
das
pmullw
lahf
negb
movsb
inc
shlb
daa
sub
insl
pop
mov
jbe
and
test
inc
dec
xor
mov
arpl
pop
aam
or
sub
pop
enter
xchg
mov
xchg
scas
shlb
sub
insl
inc
andl
add
lcall
rorl
inc
nop
or
das
dec
cmpsl
fnsave
sub
out
iret
movsl
lds
dec
loopne
mov
or
xchg
mov
cli
dec
mov
dec
shlb
insl
xor
fnstenv
inc
sahf
mov
mull
mov
pop
mov
imul
gs
out
push
sub
and
push
xchg
cmpsl
movsl
dec
sbb
mov
jns
int
fs
xor
mov
movsl
ret
pop
test
fdivrs
inc
mov
clc
sbb
push
mov
pop
daa
loopne
scas
pop
push
pop
sahf
bound
arpl
leave
dec
jp
jp
cltd
in
or
inc
pop
add
xchg
test
fisubs
push
push
sub
lds
dec
iret
mov
mov
and
cmpsb
mov
pop
andl
add
jns
jecxz
fsubrs
movsl
and
xor
ret
adc
and
outsl
out
dec
xchg
sbb
inc
rolb
sbb
xor
insl
int3
add
ja
int
add
add
int3
lcall
ret
and
enter
pop
leave
mov
cmova
or
mov
lods
popa
addr16
rol
inc
rcl
call
loopne
ret
gs
mov
sahf
fidivs
cltd
dec
xchg
xchg
add
ret
test
inc
jo
neg
enter
aad
out
mov
rolb
cmpsl
xor
fcmovne
ss
cmpsl
push
ret
out
popa
test
mov
aam
push
jnp
mov
jge
xchg
arpl
jno
jns
outsb
fisubrs
mov
lds
iret
lds
sub
popa
xchg
call
fimuls
repnz
vshufps
xchg
out
push
inc
in
mov
pop
mov
or
test
iret
jno
filds
dec
into
dec
jb
ret
arpl
rol
pop
inc
aam
or
leave
and
inc
inc
ret
imul
lea
les
cltd
rcr
je
mov
jbe
gs
aad
testl
rcrb
or
fstps
or
mov
outsl
xlat
cmp
sub
outsl
cmpsl
xor
cmpsb
dec
cs
rol
in
xlat
jns
dec
shl
xorl
fstpl
in
mov
clc
sbb
fs
jae
addr16
out
cmpb
lds
std
test
cmpsl
rcl
inc
addr16
cmp
inc
lcall
in
pop
and
mov
push
pop
in
fxtract
sarl
add
xchg
add
push
mov
push
jmp
test
shrb
es
lahf
mov
inc
dec
aaa
data16
add
adc
jnp
pop
outsl
push
pop
daa
out
pop
and
cmpsb
movsl
pushf
mov
repnz
pop
jecxz
lahf
mov
inc
cmpsl
pop
test
mov
mov
dec
call
or
xchg
sub
push
cmp
fxch
daa
out
ja
es
std
lods
push
popf
test
push
mov
mov
xchg
push
loopne
sti
outsl
pop
mull
xor
cld
xchg
ffree
pop
not
fs
xchg
mov
mov
cltd
test
xor
js
jmp
stc
in
sbb
cmpsl
out
push
scas
dec
pop
cmp
movsl
cltd
push
ss
out
adc
mov
and
int
cwtl
in
or
mov
cltd
out
dec
pop
addr16
xchg
in
mov
push
push
or
call
jmp
arpl
gs
adc
sub
xchg
fists
push
mov
outsl
loopne
pushf
push
dec
dec
xlat
test
mov
outsl
cltd
sahf
test
xchg
inc
popa
cwtl
pop
adc
imul
dec
ret
adc
pop
fmul
xchg
aaa
cmpsb
aaa
movsb
pop
test
in
into
mov
mull
ja
dec
xchg
iret
inc
insl
repz
shll
scas
sbb
jae
ss
loop
dec
xor
xchg
frstor
add
aam
enter
out
or
test
movsb
enter
xorb
hlt
push
fadd
mov
and
jns
arpl
inc
xchg
fisttps
dec
sbb
adc
rcrl
jnp
imul
loope
jmp
cmpsb
movsl
arpl
xchg
cmpsl
shrb
mov
pop
xchg
test
loope
push
int3
add
lods
and
std
mov
xor
inc
test
jmp
pop
arpl
ret
das
mov
mov
push
inc
test
test
aam
pop
enter
mov
into
stos
lcall
and
jbe
xlat
mov
inc
or
xchg
pop
addr16
mov
test
loope
imul
stos
cmpsb
cmpsb
mov
mov
inc
push
xlat
aad
adc
mov
jecxz
mov
mov
and
inc
jns
in
mov
inc
or
mov
cli
sub
push
sbb
xchg
lea
add
daa
cvttps2pi
loope
xchg
cmpsb
xchg
xchg
mov
mov
flds
call
xor
mov
rclb
lea
data16
jecxz
or
sysexit
out
jmp
and
inc
mov
push
xchg
aas
sti
pop
out
inc
cmp
pop
mov
inc
ret
dec
fs
leave
ficoml
and
pop
daa
js
enter
scas
aad
fbstp
js
es
pop
cmp
mov
dec
mov
and
and
test
or
iret
ds
dec
outsb
jnp
imul
xor
add
sarb
fisubl
aam
or
test
ret
leave
fistps
push
aam
xchg
test
sbb
pop
ficoml
mov
mov
jbe
and
or
test
cltd
data16
lods
sahf
xchg
inc
dec
data16
cmpl
hlt
lahf
popf
mov
push
inc
sbb
add
mov
or
int3
test
sahf
mov
or
jae
test
mov
shl
mov
xchg
inc
push
dec
sarb
es
cmpsl
inc
jne
andb
xchg
xchg
mov
movl
loopne
mov
sbb
leave
xchg
lret
sub
dec
lret
leave
das
ficomps
adc
xor
sub
mov
ffreep
shlb
scas
ret
fwait
mov
mov
test
push
les
out
in
das
addr16
mov
xchg
xchg
fs
outsb
fwait
rorl
data16
xchg
ja
out
push
mov
cmp
xchg
pusha
cwtl
jmp
cmpl
leave
imul
loopne
js
mov
xchg
andb
mov
fwait
cltd
in
push
mov
fsub
dec
mov
sbb
push
popf
repnz
ret
sub
ss
jo
cmp
icebp
cmp
pop
sub
push
push
pop
add
or
loopne
mov
xor
ja
lret
adcl
xchg
out
test
push
daa
imul
sub
xchg
inc
ja
std
ss
lcall
loopne
ret
inc
xchg
fmul
fimuls
outsl
pop
addr16
andb
rolb
ret
mov
test
mov
pop
mov
xor
lahf
les
cmp
or
pop
loop
test
aas
mov
outsl
fisubs
aad
sub
sbb
mov
pop
loope
test
pop
push
jmp
testb
cmp
jmp
adc
movsb
dec
rcl
outsb
es
rcrb
mov
repnz
add
nop
and
inc
mov
mov
cmp
inc
mov
dec
dec
lds
and
notb
roll
inc
stc
fildll
loop
fs
fimuls
movsb
cmp
push
jle
idivb
loop
ret
dec
aaa
xchg
cmc
arpl
jmp
repz
bound
loop
sbb
pop
inc
cmpsl
adc
fstps
lods
mov
sbb
push
cs
or
adc
iret
cmpsl
pop
popa
imul
les
jl
sub
mov
sub
pop
je
rcll
dec
stos
loope
test
jns
ja
mov
pop
cmp
ljmp
movl
icebp
or
inc
les
ret
jge
push
xchg
cs
xlat
add
mov
pop
std
shll
rclb
add
mov
lcall
dec
push
adc
xchg
in
pop
cmp
cmp
dec
push
pushf
andb
fsub
jns
dec
dec
enter
loop
xorb
in
imul
push
xchg
add
repnz
loop
cmp
loop
mov
rorb
dec
pop
pop
xchg
loop
sbb
and
lahf
movsl
in
in
mul
push
stos
and
iret
aam
jne
jbe
inc
das
ljmp
lcall
inc
jecxz
imul
push
aam
xchg
repnz
mov
xor
lds
sub
xchg
mov
outsl
daa
out
xor
shlb
mov
sub
mov
out
shrl
testl
ret
jo
cwtl
adc
test
lea
ja
mov
mov
inc
movsb
push
push
jae
or
pusha
imul
inc
pop
outsl
dec
out
adc
xor
fsubrs
xlat
mov
bound
pop
xchg
and
lcall
sti
jge
or
mov
sub
cmp
or
mov
or
lahf
jecxz
mov
lds
jbe
jmp
addr16
push
push
push
mov
xchg
ret
mov
xchg
xchg
cmp
jmp
ja
and
out
mov
sub
xchg
dec
outsb
addr16
in
testl
jle
les
es
imul
pop
xlat
jmp
movsb
in
or
andl
inc
and
dec
cli
xchg
stc
iret
jg
mov
fsub
fistpl
imul
mov
mov
and
sub
inc
mov
xchg
nop
repnz
sub
mov
fsubrs
cmp
inc
inc
jmp
rolb
mov
mov
je
loop
into
xor
int
aaa
xor
and
test
ljmp
sbb
hlt
push
push
mov
mov
add
mov
enter
rcll
test
pop
pop
inc
movsl
mov
imul
iret
dec
pop
mov
mov
ds
mov
inc
push
fisubl
mov
popl
push
js
cmpsb
mov
pop
out
dec
push
fistps
or
lahf
shlb
sarb
ucomiss
subl
sbb
mov
jecxz
je
pop
inc
mov
sub
je
xor
cmp
xchg
xchg
mov
test
out
loopne
data16
pop
push
inc
mov
mov
mov
mov
ja
mov
mov
test
pop
cltd
out
dec
ror
mov
cmpsl
mov
mov
mov
cmpsl
push
push
mov
imul
inc
sahf
out
daa
movsb
or
rcll
leave
push
loope
fs
pop
ds
imul
mov
gs
mov
cli
xchg
gs
mov
dec
mov
stos
ja
mov
jmp
add
test
inc
test
inc
cltd
mov
fmulp
incb
cli
idiv
mov
push
add
cmc
int
cmpsb
jo
out
and
gs
out
mov
dec
push
inc
in
stc
aad
lds
push
or
dec
call
inc
or
std
inc
movsb
cltd
push
mov
push
inc
lret
add
xlat
daa
or
push
add
loope
sbb
insl
inc
or
jmp
sbb
in
ja
ret
mov
jmp
jle
addr16
sbb
dec
movsb
aaa
and
cs
repnz
es
sub
inc
dec
mov
pop
mov
or
mov
aaa
push
or
bound
pop
mov
sub
enter
cs
inc
dec
outsl
cltd
cwtl
sbb
call
and
and
arpl
push
in
imul
enter
in
imul
or
add
pop
aad
out
loopne
imul
lods
rolb
insl
and
mov
loopne
test
test
or
iret
loop
adcl
sub
loop
sbb
sub
outsl
std
scas
add
stc
out
loopne
incl
loop
and
pop
shlb
mov
and
xchg
adc
outsl
push
lods
dec
into
push
inc
mov
inc
mov
dec
mov
push
jb
xor
pop
push
cmp
fiaddl
or
mov
xor
das
xor
mov
push
andl
xor
cmp
mov
loop
or
movsb
and
inc
icebp
gs
sbb
cmpsl
push
cmp
sub
nop
or
lahf
movsl
mov
adc
push
cmpsl
jmp
mov
pusha
mov
add
fsubrs
lea
jo
pop
enter
pop
lock
mov
fmuls
pop
jns
inc
and
mov
in
lahf
adc
mull
mov
sub
push
popa
and
movsl
leave
aas
fcmove
push
pushf
mov
dec
into
xor
bound
test
jle
fldcw
pop
jecxz
xor
add
add
push
lret
push
mov
cmpsl
jecxz
jae
xchg
mov
ja
cld
imul
fwait
jecxz
fcmovnb
daa
xchg
mov
jbe
dec
es
call
and
movsb
inc
les
insb
pop
js
dec
je
les
cmpsl
leave
mov
shrb
arpl
neg
popf
cmp
testb
jl
test
test
std
dec
mov
iret
jge
into
ficoml
repz
mov
push
and
dec
scas
xlat
addr16
mov
scas
sub
xlat
fs
or
ja
popa
or
mov
jne
mov
sub
movsl
push
or
mov
or
mov
data16
sbb
movsl
iret
or
es
push
or
addr16
xchg
push
dec
call
out
out
jge
jns
mov
gs
xor
sub
and
add
xchg
sub
and
test
sbb
test
or
movsl
add
push
out
dec
test
inc
gs
sub
cwtl
mov
sub
sahf
xchg
pop
fildl
test
push
test
jns
mov
fldenv
sub
gs
mov
dec
imul
mov
test
aam
sbb
inc
or
mov
jne
push
decl
xchg
sub
or
pusha
insb
push
int3
pop
mov
dec
inc
fnsave
cmpsb
or
data16
test
cmp
cmp
inc
adc
xlat
mov
xchg
jle
sarb
test
sbb
and
xchg
push
sbb
punpckhbw
out
jo
and
or
iret
pop
fwait
test
and
getsec
xlat
call
mov
nop
xlat
imul
pop
imul
or
in
pop
xor
cmp
push
jmp
xlat
iret
inc
inc
add
sarb
ret
movsb
mov
and
sub
inc
inc
mov
imull
fwait
and
pusha
psubsb
cmpsb
mov
fistpll
mov
pop
mov
and
or
jno
cmp
clc
addr16
mov
shr
xor
jns
inc
and
inc
mov
sbb
sti
lds
xchg
cs
inc
push
movsl
inc
movsl
out
cmpsb
dec
out
cmp
push
mov
daa
lods
ja
scas
mov
push
push
test
les
cmpsl
popa
mov
sub
inc
inc
cltd
sub
inc
pop
jbe
into
sbb
movsb
test
test
addr16
dec
gs
and
js
ret
inc
subb
mov
jle
ret
xchg
push
lods
aaa
cmp
fadds
popf
sbbb
or
pop
push
gs
int3
adc
and
lock
and
push
inc
test
cmp
and
xchg
sarl
push
js
enter
rol
xchg
pop
sarl
imul
mull
sbb
mov
pop
push
push
inc
popa
dec
pop
into
les
movsb
clc
cmc
push
orl
pushf
bound
arpl
mov
mov
dec
dec
jne
leave
and
or
dec
in
daa
mov
cmp
push
or
or
xchg
jae
and
xchg
test
inc
out
pop
out
stos
xchg
xchg
mov
ja
in
dec
push
mov
ja
in
dec
jne
in
mov
mov
xor
outsb
sbb
mov
fiadds
mov
enter
loopne
push
sbb
mov
out
dec
cltd
xchg
test
cmp
fs
lahf
test
test
jmp
or
cmp
les
in
fld
jbe
push
fs
call
cmpsl
dec
in
out
jl
pop
mov
dec
jl
mov
dec
jmp
inc
mov
enter
dec
pop
lea
rcrl
fld
mulb
loop
outsb
or
sbbl
mov
jae
data16
enter
inc
inc
enter
and
jmp
movsl
mov
imul
cmpsl
loope
push
jb
mov
std
daa
sub
movsl
push
fidivl
aad
loope
or
aaa
fwait
or
add
sbb
les
mov
mov
mov
pop
cwtl
icebp
xchg
enter
pusha
enter
inc
pop
cmpsb
pushf
xchg
les
leave
xor
adc
pop
shrb
imul
push
imul
loop
adc
movsl
into
iret
mov
pop
stc
fildll
fs
dec
xchg
ja
les
imul
out
imul
aam
xchg
mov
push
movsl
test
push
or
or
push
pop
les
jae
dec
test
addr16
mov
movsl
push
sub
leave
movsb
adc
inc
mov
ja
push
and
add
aam
mov
and
popa
es
insl
mov
mov
test
addr16
loopne
inc
popa
mov
out
popf
call
sub
mov
popa
ret
push
leave
cwtl
add
jmp
gs
xlat
push
fdivrs
fldcw
jbe
aas
rol
out
enter
xchg
jb
sub
mov
addr16
scas
cmp
sbb
cld
out
mov
cmpb
in
les
xchg
test
out
adc
js
push
int
loopne
iret
dec
fs
pop
popa
out
pop
mov
leave
inc
jbe
mov
negb
bound
and
call
clc
pop
sbb
cwtl
jne
and
pop
mov
loope
dec
repz
push
mul
push
inc
pop
je
dec
int3
push
adc
lds
jle
dec
jnp
test
scas
and
xchg
notl
jle
out
fldcw
lods
es
sub
pop
sub
in
cli
gs
xchg
dec
mov
and
sbb
jbe
insl
pusha
pop
pop
and
test
xor
or
or
push
xor
mov
popf
movd
or
xchg
push
push
pop
fstps
int
adc
lret
pop
in
push
out
ljmp
and
mull
pop
mov
out
movsl
jne
dec
mov
add
call
out
jns
jbe
xlat
mov
movsl
lcall
cmpsb
jmp
das
movsb
mov
movlps
mov
out
out
icebp
mov
pop
mov
gs
xchg
xchg
sub
push
xor
add
mov
add
or
mov
jo
push
data16
fnstcw
cmp
aad
push
inc
fidivl
or
pushl
mov
mov
ja
pop
sbb
push
inc
popf
pop
pop
out
loop
mull
test
lds
sub
pop
or
pop
mov
pop
test
inc
dec
cmpsl
les
pop
imul
lcall
xchg
or
mov
mov
xchg
mov
gs
dec
sbbl
xchg
ja
mov
rcrl
jns
loopw
scas
push
mov
jmp
mov
in
mov
push
test
and
jg
or
mov
daa
sub
cwtl
pop
call
mov
das
stos
negb
jo
and
call
xor
xchg
mov
xor
mov
ja
mov
fbstp
push
or
in
fists
in
jbe
jl
faddl
pop
push
jns
sbbb
aad
neg
mov
enter
addr16
or
das
mov
or
pop
imul
pop
mov
and
and
sub
andb
mov
pop
add
insl
enter
xchg
mov
js
pushf
or
test
test
xchg
fcomps
pop
dec
cmp
or
ret
and
je
mov
pop
push
or
call
xchg
push
enter
and
lods
lahf
sbb
mov
inc
xlat
xchg
jns
push
inc
add
dec
nop
mov
add
fdivl
push
loopne
fsubr
mov
xchg
out
jle
test
xor
lcall
in
jmp
arpl
sub
arpl
sub
ja
ret
sub
addr16
outsl
jmp
mulb
add
cmp
cmpsb
sub
mov
add
mull
xor
ret
cmp
jmp
das
and
test
and
mov
es
push
add
xchg
fbstp
ss
or
jns
xchg
insb
roll
dec
pop
dec
mov
inc
imul
daa
xchg
xchg
jle
xorb
fldcw
ja
pop
gs
mov
shl
pop
ret
in
pop
lods
xchg
cwtl
icebp
push
inc
mov
mov
sub
lods
mulb
cltd
sbb
leave
and
mov
inc
shll
mov
jns
add
push
out
cmpsl
xor
pop
sub
enter
jmp
loopne
negl
movb
dec
push
out
pop
fisubl
sbb
rorb
call
jo
test
test
gs
sbb
loope
push
je
mov
in
gs
outsl
loopne
pop
ja
iret
pop
pop
dec
movsl
push
testl
pop
dec
pop
push
xchg
mov
pop
mov
push
push
dec
xchg
and
mov
orb
dec
pop
dec
test
mov
add
mov
or
sub
push
sar
aaa
jo
call
test
mov
and
jl
adc
dec
sbb
dec
mov
push
outsl
pop
insl
imul
movsl
cltd
push
cld
out
dec
push
xorl
mulb
dec
jae
pop
push
cmpsb
arpl
cltd
test
ds
cmp
mov
or
addr16
cltd
xchg
gs
lock
cmpsb
test
xchg
mov
scas
and
jne
fnstsw
pop
cmpsb
aaa
mov
sub
in
pop
lods
mov
out
scas
mov
mov
insl
or
fstpt
sub
fisubl
mov
stos
ret
ja
js
movsl
sbb
lahf
mov
add
inc
push
inc
xchg
test
movsl
add
flds
mov
scas
pop
dec
es
mov
cltd
addl
stc
cmpsl
loopne
aad
lea
sub
cli
ret
out
jne
push
pop
imul
js
ss
out
mov
int3
daa
or
shlb
fsubrl
data16
mov
in
icebp
ds
xchg
roll
push
cmpsl
pop
imul
sub
ss
enter
call
ds
cmpsb
gs
mov
mov
mov
or
test
stos
or
outsl
pop
lds
and
into
lds
insl
testl
mov
ret
lea
or
dec
mov
cmpsl
test
mov
lods
xchg
mov
repz
aam
out
scas
mov
cmp
fs
ja
add
movsb
adc
pop
xor
push
cltd
xchg
in
and
shl
sbb
pop
dec
mov
divb
sbbl
addr16
data16
out
in
add
xchg
mov
mov
jge
jbe
dec
loope
setge
int
inc
sbb
push
jns
movsb
loop
mov
inc
nop
in
dec
imul
fcompp
pop
xchg
inc
leave
repz
mov
ret
imul
mov
jmp
xor
or
lea
fs
int
aas
mov
inc
test
jns
jge
cmc
or
jp
dec
in
lds
imul
aam
push
leave
mov
xor
daa
leave
fldt
xor
sub
nop
push
enter
dec
mov
add
out
out
inc
xlat
sub
aam
out
shl
les
out
pop
lcall
nop
inc
call
mov
jno
pop
pop
jl
jns
out
xchg
scas
cmpsb
bound
jle
cld
out
xlat
dec
scas
in
repnz
aam
dec
enter
adc
cmp
pop
mov
mov
and
xor
jecxz
lret
test
imul
mov
dec
and
and
mov
movaps
loop
ficomps
iret
dec
and
mov
inc
jmp
jbe
push
gs
into
and
cli
clc
sti
pop
pusha
out
adcb
ret
aas
xchg
es
popf
xchg
insb
jmp
orb
testl
jl
insb
and
inc
dec
les
daa
fwait
leave
add
xchg
xchg
cmpsl
imul
shll
arpl
dec
aaa
mov
lock
inc
mov
cwtl
cmp
rolb
test
out
ja
add
out
cmc
outsl
sub
jno
pop
mov
cmp
inc
rcll
xchg
rcl
das
push
inc
out
mov
mov
push
ja
addr16
ret
int
ja
mov
inc
ffree
adc
cltd
fst
notb
aaa
xchg
in
scas
sub
mov
inc
cmpsb
enter
cltd
dec
or
imul
sbb
mov
xor
movsl
imul
xor
rolb
ret
dec
push
inc
sbb
cltd
ds
fwait
pusha
push
cmpsb
pop
sahf
mov
inc
in
inc
leave
movsl
push
mov
dec
xchg
test
imul
data16
cmpsb
dec
sub
dec
mov
arpl
xchg
add
ja
sbb
inc
adc
lds
push
in
enter
sub
jne
call
xchg
sbb
or
mov
mov
pushf
fstps
pop
cltd
inc
inc
jae
xchg
push
out
inc
sbb
sbb
pop
push
lret
mov
add
mov
pop
cmp
inc
dec
xchg
ja
cmp
xchg
and
fwait
cs
les
push
test
fstl
mov
jbe
xchg
xchg
xchg
ret
inc
je
test
mov
adc
cltd
mov
adc
mov
out
daa
enter
aad
push
mov
cmp
ds
push
aaa
jns
ss
mov
mov
cmp
mov
imul
outsl
dec
loopne
lcall
dec
int3
pop
fistps
outsb
inc
test
xchg
xchg
aaa
sbb
ja
gs
das
imul
lock
ja
mov
pushf
or
popf
out
lret
inc
or
inc
fisubs
ret
lahf
mov
fcomps
aas
data16
sub
cmpsb
jns
xchg
pop
outsl
mov
fcomp
daa
mov
cmp
fbstp
nop
lods
push
clc
xchg
xchg
cld
rorl
lods
je
add
or
push
ljmp
out
test
inc
cmpsl
popa
cwtl
mov
enter
clc
mov
mov
jbe
stc
cld
arpl
inc
add
je
add
das
mov
cmp
and
jmp
or
mov
cmp
inc
lds
xor
cmpsl
sarb
or
test
ds
adc
jl
add
mov
insb
pop
lds
aad
mov
jmp
rcrb
vshufpd
imulb
pop
adcl
call
outsb
shrb
and
loope
inc
push
sbb
das
inc
and
and
movsb
xchg
sbb
movsl
shlb
cmp
push
mov
js
jmp
sarb
adc
sbb
mov
dec
icebp
pop
xchg
sub
cmpsb
ret
and
mov
xchg
shrl
push
pushf
push
ret
sub
imul
roll
dec
mov
mov
dec
xor
popa
sub
fmuls
test
xchg
movsl
dec
icebp
out
das
pusha
in
stos
addr16
in
fsubl
sub
push
jae
inc
shll
fmull
loopne
add
jecxz
daa
outsb
xor
leave
addl
out
pop
call
loopne
sub
aad
xchg
fdivl
sbb
mov
out
out
addr16
andl
shl
jecxz
mov
sbb
xorb
mov
mov
mov
adc
data16
and
je
arpl
sub
jmp
pop
jmp
jmp
out
cmp
cmpsb
push
icebp
dec
lods
mov
lods
inc
fdivrs
sub
addr16
cltd
notb
sub
jmp
push
sub
shlb
popf
or
mov
jecxz
je
dec
jae
and
xlat
pop
fsubl
mov
pop
sub
or
jg
and
sbb
fisttpl
test
imul
mov
xor
fldenv
js
lahf
mov
leave
and
call
lret
movsl
lahf
xchg
mov
mov
push
sub
jmp
incb
mulb
push
inc
mov
int
es
inc
inc
in
rol
test
sbb
mov
addr16
test
enter
xor
pop
cmpsb
xchg
in
push
inc
addr16
xor
movsb
movsl
cmp
out
roll
int
icebp
insl
mov
mov
mov
push
into
sbb
dec
imul
movsl
jp
add
mov
mov
bound
test
sub
imul
fwait
in
pop
or
inc
dec
enter
mov
adc
ja
push
push
xchg
in
int
inc
xlat
popf
mov
cmp
xchg
jno
mov
filds
lds
movsl
stc
pop
jno
enter
mov
and
sti
and
and
in
or
xlat
movsb
mov
cmpsl
pop
orb
and
push
addr16
jns
and
mov
add
daa
dec
rol
aam
insl
loope
and
or
stc
mov
mov
sbb
movsl
jle
out
fmul
out
or
jmp
popa
add
pop
shll
shl
clc
stc
out
lods
and
stc
cmpsb
cmp
sub
roll
imul
sbb
test
jmp
mov
nop
push
pop
shll
shll
loope
or
loope
test
stos
in
in
xor
movsl
cltd
addr16
and
addr16
out
xchg
sub
out
iret
into
andl
push
cwtl
insb
fsubl
push
push
add
cmpsl
sbb
mov
xchg
mov
int3
cli
out
inc
or
sbb
inc
push
and
out
push
in
popa
and
sbb
pop
inc
neg
and
xor
mov
arpl
shl
push
xorl
push
jo
test
xchg
add
sub
push
je
pop
test
filds
push
loope
mov
jl
stc
movsb
ljmp
or
inc
imul
mov
pop
or
loope
xor
fisttpl
ja
cld
fldcw
js
test
cltd
sub
and
or
in
dec
xlat
add
out
pop
adc
mov
jo
popa
cwtl
jl
xor
add
leave
mov
test
shlb
loop
add
cli
dec
pop
icebp
out
mov
inc
xchg
insb
push
and
mov
mov
lcall
jno
fbstp
sub
adc
jge
ret
push
and
cmp
and
or
cltd
inc
push
cltd
add
adc
adc
scas
insb
outsb
mov
jmp
loope
or
cwtl
loope
push
rorl
cmpb
testl
or
mov
rcl
lcall
inc
and
pop
sarl
push
sti
in
test
jne
outsb
or
testb
out
and
inc
push
out
out
std
sbb
push
fsubl
sub
ret
roll
pop
cmp
mov
movsl
xchg
mov
loop
jnp
mov
fdivl
lret
push
lock
sbb
in
movsb
xchg
sbb
dec
int3
jb
push
jp
lret
les
jns
call
in
xchg
pushf
dec
hlt
test
loop
gs
and
adc
shrl
mov
push
cltd
jns
negb
cmp
sub
push
clc
loop
sahf
mov
mov
push
outsl
mov
nop
std
loop
in
das
fs
xchg
jne
ljmp
in
les
clc
scas
stos
arpl
dec
mov
and
stos
mov
add
stc
fwait
push
jg
jns
loop
mov
lds
pusha
andb
shll
mul
scas
out
lods
iret
int3
es
mov
pusha
pop
jmp
data16
shl
push
in
out
adcb
shll
repnz
cmc
sbb
cmp
fidivrs
xchg
adc
in
test
sbb
add
in
mov
dec
testl
push
pop
outsb
jmp
addr16
add
mov
std
xchg
fsubl
pop
lahf
cmp
cmpsl
or
rol
idivb
lods
jmp
scas
out
sbb
cmp
and
pop
ret
dec
xchg
mov
xor
cmpsl
outsb
test
insl
lock
jne
sbb
fmulp
in
mov
test
inc
sti
in
inc
fldcw
xchg
fstps
out
movsb
dec
enter
cs
cmp
in
mov
xchg
sbb
sub
out
pop
mov
mov
mov
sub
or
xchg
and
xchg
push
in
out
and
test
scas
pop
and
cmp
in
nop
out
cmp
cmp
jns
pusha
mov
adc
shll
movsl
repz
mov
std
sub
popa
loope
cmp
imul
xor
push
mov
out
test
clc
leave
loop
movsb
cmp
ficompl
dec
jbe
adc
jnp
hlt
fistl
in
popa
dec
push
sti
fsubs
add
mull
sbb
pop
bound
rorl
cld
fsubrs
addr16
mov
and
and
and
push
or
cltd
xchg
dec
repnz
js
add
adc
dec
pop
mov
push
and
sbbb
mov
push
loop
jnp
dec
xor
jae
inc
data16
xor
pop
sahf
data16
imul
or
data16
hlt
repnz
andb
and
ljmp
or
xorl
popa
orl
or
add
sub
pusha
mov
push
ljmp
mov
pop
fadd
adc
cli
rcll
mov
ljmp
rcrl
mov
cmpsb
iret
popf
mov
sarl
pop
or
test
cmpsl
and
fwait
aad
sub
sub
inc
xor
add
or
xor
jbe
daa
outsl
push
and
inc
add
mov
sub
mov
daa
or
cmp
lret
xchg
xor
insl
add
leave
jne
test
leave
and
arpl
dec
xor
test
rcll
and
mov
pop
test
les
sub
mov
arpl
lods
popa
loope
stos
arpl
mov
and
ret
in
pop
xchg
fabs
ja
imul
mov
test
inc
pop
push
fs
add
add
xor
mov
sbb
jnp
jbe
pop
shll
mov
xlat
mov
test
ja
cmp
jle
mov
jbe,pt
sti
shl
mov
fabs
out
leave
adc
imul
ljmp
aas
mov
roll
das
rcrl
popf
sbb
cmp
mov
test
clc
pop
sub
popf
imul
push
outsl
js
leave
popf
fnstenv
dec
fmul
add
xchg
dec
xchg
int
cmpsb
fldenv
cmpsb
rcl
jmp
mov
flds
popf
jno
cltd
inc
imul
jno
adc
pop
imul
pop
pop
xsha1
mov
or
sarl
insl
arpl
js
inc
xchg
loope
ljmp
out
leave
data16
lock
les
jecxz
in
ret
lea
loope
jno
mov
jno
ret
push
mov
jns
cmp
cmc
pushf
leave
stc
shrl
mov
pop
andl
out
pop
outsb
mov
insb
pusha
adc
loope
js
lds
pop
stos
inc
fs
and
sbb
inc
push
pusha
leave
cwtl
rcll
inc
pusha
pop
mov
pop
js
lds
loope
mov
fs
sub
jmp
rol
pop
repz
mov
pop
stos
and
cmpsl
rcr
imul
inc
jmp
sar
inc
xchg
rol
mov
and
mov
mov
enter
and
cltd
scas
fdivr
lds
daa
mov
adc
andl
nop
jne
or
and
fisubrl
sub
push
fnstenv
dec
fistpl
push
arpl
dec
lret
mov
imul
jnp
dec
leave
fwait
sbb
or
test
mov
insl
loop
in
xor
jmp
lds
fstps
dec
ficoml
xlat
sbb
mov
popa
or
icebp
test
push
and
imul
or
inc
stc
and
bound
loop
loope
lret
and
popf
leave
negb
lret
rcrl
jecxz
enter
or
pusha
mov
pop
fimull
jo
xchg
cltd
xchg
mov
sub
arpl
pop
out
movsl
cmp
push
mov
inc
nop
fsubrl
inc
jne
inc
insl
lock
mov
xchg
das
inc
enter
in
inc
sbb
jns
test
leave
mov
xorl
rorb
das
add
loop
andb
test
xlat
shll
popa
mov
in
in
sbb
mov
imul
dec
dec
imul
rcrl
cmp
push
or
push
hlt
mov
fstp
test
mov
mov
mov
push
mov
cmc
pushf
js
leave
jo
pop
xchg
dec
mov
pop
ret
lods
pop
mov
and
fsts
inc
xor
insb
stos
pushf
cmp
test
mov
shrl
ret
pop
push
mov
xchg
imul
mov
test
push
in
dec
and
popa
test
shrl
push
std
jl
cwtl
mov
xchg
fldenv
jl
jecxz
push
test
xchg
nop
out
mov
and
leave
es
shr
xchg
add
mov
jno
shrl
outsl
popa
cmp
sub
ds
and
xor
sub
dec
pushf
daa
insb
or
jo
inc
mov
inc
pop
cli
push
popl
fnsave
pop
pop
icebp
mov
inc
gs
out
imul
data16
sub
loop
arpl
sbbl
fcomps
fcomps
inc
xor
pusha
mov
scas
xchg
and
fbstp
push
daa
mov
mov
fyl2xp1
lcall
jne
add
je
jae
sub
enter
insb
dec
jno
jns
xchg
mov
pop
out
loopne
orb
pop
xchg
imul
enter
push
roll
jne
test
jp
xchg
jb
ja
or
push
lret
pop
insl
jae
std
cld
fs
enter
rclb
mov
push
jo
inc
andb
push
inc
inc
xor
insb
jnp
cmpsb
adc
repnz
cmpsl
pop
inc
pop
mov
fwait
addl
cld
dec
enter
jbe
mov
xchg
or
loope
sub
jmp
jbe
push
scas
fnstcw
cld
push
add
xor
js
ja
fsincos
outsl
cmp
ret
push
push
mov
jns
mov
or
cmp
es
mov
or
fmuls
pop
and
sub
mov
jnp
loope
xor
shrl
lcall
rcll
lret
cltd
mov
mov
push
xchg
mov
pop
imul
dec
out
stos
or
mov
leave
mov
and
fs
popa
lahf
test
fs
sub
jl
pop
jo
sarl
rcll
push
fxam
les
and
pop
fbld
in
leave
adc
xor
jbe
fcomip
in
popa
out
loopne
fistpll
mov
pop
dec
pop
fucom
pop
fsubrl
inc
loop
pop
enter
aad
push
cmp
loop
sbb
mov
cwtl
dec
inc
cmp
sub
loop
iret
mov
daa
xchg
jnp
aas
aaa
das
daa
pop
pop
into
loope
mov
xchg
data16
loop
cs
push
int
mov
popf
xchg
push
dec
inc
loop
xor
aam
loop
mov
xchg
push
loop
inc
cmp
sub
sbb
loop
lret
ret
mov
loop
push
dec
inc
cmp
sub
loop
adc
ror
ret
loop
mov
dec
inc
fnstcw
xor
and
adc
test
sahf
adc
and
popa
aad
jns
xchg
mov
xchg
cs
popa
in
sub
mov
ficomps
call
xlat
adc
sub
bound
pop
xor
enter
pop
push
or
adc
sbb
sbb
xchg
xor
or
lret
and
and
jmp
js
adc
je
inc
leave
or
bound
loop
mov
lods
sub
adc
jecxz
jbe
leave
cmpsl
shlb
fbld
adc
jo
dec
xor
pop
das
jge
scas
popf
loop
adc
adc
nop
mov
sbb
dec
scas
push
jle
inc
and
cmp
dec
aad
cmp
filds
sub
nop
mov
stc
jno
mov
adc
scas
adc
xor
lcall
out
fiadds
or
loop
inc
scas
daa
jbe
pop
loop
dec
aam
je
mov
mov
loopne
jno
jecxz
loop
or
mov
and
kunpckwd
push
inc
mov
rorl
cmpl
push
pop
cmp
cmpsl
sub
pushf
mov
mov
mov
sbb
push
jg
mov
in
stc
mov
and
adc
push
cmp
in
sbb
jecxz
int
lods
lahf
cmpsl
dec
cli
sbb
aad
push
int
test
jecxz
mov
pop
inc
arpl
cmp
adc
cmp
stos
mov
push
mov
mov
mov
push
in
stc
mov
shl
pop
mov
fsubp
movsb
scas
lea
arpl
rcl
arpl
xchg
mov
ret
loop
xor
jge
test
cli
loop
pop
hlt
pop
stc
pop
test
idiv
loop
sbb
cmp
jl
dec
jno
rcrb
xlat
out
pop
ficoml
dec
push
clc
mov
cmp
pop
arpl
int3
xchg
loop
mov
jns
dec
lret
sub
testl
inc
xlat
push
cmp
sti
loop
pop
insl
fsubrs
mov
call
loop
cmp
out
mov
mov
loop
cwtl
jg
negl
insb
mov
jp
scas
sub
pop
test
stos
mov
add
add
pop
mov
dec
push
sbb
add
shrb
add
sarl
arpl
adc
sbb
jne
dec
sub
loop
push
sbb
loop
scas
mov
mov
cmp
sub
addl
mov
xorb
call
jb
lret
shlb
in
mov
jns
ss
sahf
pop
int3
and
push
xchg
push
std
and
loop
test
adc
addr16
stos
xchg
loop
cltd
imulb
imul
push
or
pop
cmp
add
sahf
cmpb
and
xor
add
inc
lods
jp
pop
les
rorl
cmpsb
dec
cld
fsub
movsl
or
arpl
inc
pop
in
iret
sahf
lock
ror
xlat
and
push
mov
cmpsb
sub
hlt
dec
and
psrad
jl
mov
and
loop
scas
jne
and
add
mov
or
rorl
push
jecxz
dec
mov
xchg
jno
js
mov
lahf
addb
or
je
call
fisttps
push
dec
loopne
and
mov
roll
iret
dec
arpl
jno
mov
cltd
sub
add
adc
dec
inc
out
imul
adc
addb
daa
popf
in
loop
pusha
mov
shl
mov
lods
mov
imul
xchg
ret
push
icebp
addl
jb
loop
pop
cld
sti
fisubl
lcall
jnp
hlt
and
ror
test
add
and
leave
jecxz
pop
pop
mov
or
loop
mov
mov
adc
or
xor
xchg
sub
pop
out
add
into
adc
leave
das
popf
loop
push
loopne
push
mov
or
out
iret
pop
and
cmp
or
sahf
and
daa
and
loop
subb
add
es
xchg
xchg
mov
adc
test
rolb
stos
dec
xor
pop
mov
fidivrl
int
loop
adc
add
loop
mov
xchg
cmpsb
loop
jno
jle
hlt
jmp
jno
or
imul
push
and
mov
sub
add
out
and
and
add
xchg
mov
mov
jle
inc
cld
out
mov
ret
or
aam
or
lret
shll
and
cmpsl
les
loop
mov
adc
loop
pop
repnz
mov
insb
sub
and
jp
jns
cmp
lods
cld
in
mov
loop
aad
mov
daa
xchg
pop
loop
xor
subl
sub
insb
lock
mul
out
bound
dec
shl
pop
jb
mov
mov
loop
or
les
sub
clc
fbld
in
test
mov
loop
sbb
dec
mov
inc
rol
or
out
xorl
call
xchg
mov
insb
jbe
sbb
stos
popa
daa
pop
push
mov
mov
das
std
loop
adc
shll
iret
jecxz
xor
sub
inc
or
orl
xchg
sub
cmp
imul
mov
sub
mov
sar
ss
and
shl
icebp
mov
fcmovb
adc
jne
inc
pop
sub
or
loop
nop
insb
andl
fisubrl
jl
dec
sbb
loop
out
sub
xchg
bound
jne
pop
sbb
loop
call
jo
loop
jnp
sbb
sbb
loop
clc
mov
sbb
dec
je
or
pop
iret
fnstcw
setnp
push
and
and
inc
inc
popa
jno
pusha
into
shrb
push
fs
lret
shll
loop
andl
add
pushf
mov
jae
dec
cmc
xor
lock
dec
jno
gs
out
rcll
mov
je
out
xor
and
pop
mov
or
mov
les
loop
cmpsb
in
sub
loop
push
mov
push
loop
mov
sbb
aas
mov
mov
lahf
and
fs
and
loop
in
inc
lock
adc
in
push
dec
or
mov
in
icebp
subl
xor
testl
fimull
ja
out
fwait
jno
pop
loop
imull
inc
ret
pop
sbb
xchg
pop
sub
lcall
pop
xchg
sbbb
inc
pop
scas
mov
mov
js
ret
test
out
aas
jae
andl
inc
jno
mov
daa
mov
pop
pop
dec
jo
iret
xor
ljmp
xlat
push
nop
sahf
loop
lea
in
push
outsl
loop
adc
push
out
push
test
sbb
int3
pusha
jge
pushf
xchg
jno
sarb
scas
push
pop
daa
loop
roll
fcoms
push
pop
loop
and
adc
push
push
cwtl
jno
mov
lcall
push
cltd
and
rcrl
mov
leave
out
jmp
out
leave
xchg
lock
fidivs
fldl
dec
cs
adc
shll
out
cltd
jno
outsb
pop
mov
imul
imul
loope
or
dec
mov
call
jnp
mov
shrl
or
cli
push
mov
adc
icebp
repz
jns,pn
leave
mov
subb
ljmp
lock
loope
fidivrl
add
or
cmpsl
shll
add
jb
and
push
aas
fcmovne
cmp
jle
jne
push
test
mov
mov
dec
insl
pop
test
sar
push
mov
aaa
les
pop
insl
and
jmp
stc
jb
ret
sarl
pop
int3
xchg
push
mov
inc
jb
cli
shrl
push
pop
xor
sbb
push
jle
dec
flds
test
inc
push
lock
xchg
or
cwtl
rorl
sub
xlat
mov
and
cltd
rorb
leave
pop
or
shr
test
test
jge
xlat
or
iret
loopne
mov
push
and
cltd
sarb
arpl
mov
sub
adc
lds
mov
xor
xchg
test
mov
fiaddl
test
gs
aam
cmp
test
dec
mov
cltd
mov
push
cwtl
movsl
mov
in
cmpsl
data16
into
fldcw
add
ja
movb
push
nop
cmpl
mov
lret
pop
call
or
gs
add
lds
xor
xchg
inc
pop
inc
mov
movsl
cmp
test
leave
gs
shlb
icebp
imul
lahf
and
pop
enter
and
popf
pop
scas
jns
sbb
out
mov
movsl
adc
pop
pop
mov
or
test
add
xlat
add
sar
xor
lds
pop
xlat
or
icebp
shl
push
movl
in
mov
fnstenv
pop
int3
or
enter
fs
xchg
rcr
xor
and
loope
fmul
mov
test
call
fdivrl
fs
bound
inc
push
push
pushf
sub
andb
dec
jns
hlt
mov
fs
xchg
lret
xlat
in
or
or
pop
xchg
fwait
aam
and
loopne
sbb
push
pop
mov
sbb
iret
fwait
pop
in
jnp
test
mov
mov
out
fistpl
mov
repnz
jo
adc
call
mov
stc
push
ficoms
cmp
iret
push
insl
hlt
mov
mov
or
shl
outsb
inc
push
outsb
sub
lahf
popf
pop
fldt
shr
fiaddl
jb
gs
mov
lods
cmpsl
sarb
mov
cmpsl
frstor
fbld
or
sbbb
jno
imul
shlb
jns
inc
xlat
jns
mov
mov
movsl
andl
xchg
pop
or
cli
lahf
movsl
xchg
fldl
rcr
push
mov
adc
mov
xchg
cmpsb
inc
andb
xor
cltd
sahf
loop
fs
adc
inc
mov
and
dec
jo
sarb
jbe
pop
mov
fldcw
mov
sahf
xor
mov
pop
rcr
jmp
or
jge
in
mov
pop
jae
mov
pop
int3
adc
shlb
cmp
daa
cmp
ljmp
xor
sbb
mov
or
sarl
rcrl
aaa
shll
into
mov
sbb
xlat
mov
loop
inc
insb
xor
cmp
sti
loop
in
push
add
add
ja
out
hlt
std
mov
jg
cs
test
push
loop
sub
mov
loop
dec
pop
outsb
xor
jmp
or
insb
cmpsb
out
and
out
pop
jns
outsb
ret
mov
xor
mov
or
inc
inc
adc
xchg
or
xchg
loop
shll
and
or
mov
loopne
lahf
xchg
jle
loop
mov
jbe
loop
cli
add
pop
loop
iret
mov
outsb
add
mov
in
xor
xor
lret
dec
leave
repz
add
aam
add
or
loop
lods
fsubl
stos
sahf
rcrb
xor
pushf
xchg
adc
movsl
jo
popf
loop
inc
mov
push
loop
hlt
jmp
pop
inc
adc
inc
add
sbb
adc
outsl
and
psllw
mov
xor
loope
inc
jnp
push
jno
jmp
cmp
mov
popa
sbb
ret
xchg
loop
push
dec
mov
push
and
cmpb
add
lret
aas
arpl
add
loop
jg
pop
inc
mov
xor
xchg
cmp
loop
lea
in
loop
rolb
in
adc
add
in
cmp
jnp
ret
jo
jge
rcll
jecxz
cmp
add
loop
mov
jp
les
cmp
lods
mov
in
fiadds
jo
insl
js
clc
or
jmp
inc
push
loop
das
push
cmc
mov
shl
sub
jp
jge
xchg
cmp
push
dec
movsb
test
iret
loope
jb
jmp
sub
int3
data16
cld
adcl
mov
pop
jp
out
or
fwait
hlt
dec
enter
pop
enter
jecxz
outsl
inc
sbb
enter
fldlg2
xor
push
call
jae
cmpsb
loope
pop
mov
fsubs
push
mov
fsubrs
mov
popa
loope
or
movsl
outsb
mov
insl
mov
adc
mov
cwtl
mov
clc
scas
loope
lret
movsl
push
xchg
add
inc
cmc
cld
pop
enter
jo
pop
ficoml
sarl
and
mov
cltd
mov
sar
out
mov
jecxz
pop
push
andl
pop
push
add
mov
arpl
sub
pop
add
sbb
xchg
and
lahf
mov
xlat
test
shlb
rcrl
push
lds
rcl
popa
and
js
add
pop
into
popf
xorb
jmp
pop
cmpb
dec
push
push
loope
xchg
rcl
sbb
sbb
cmpl
shrl
push
gs
add
test
out
loopne
ret
mov
cltd
add
add
shr
xor
iret
leave
push
leave
loope
mov
jns
jge
fucomip
sbb
cmp
sub
sbb
mov
ss
pushf
out
xchg
xorl
shrl
cltd
lods
imul
sbb
lods
push
imull
enter
out
cwtl
sub
iret
shl
pop
mov
fs
lret
mov
in
mov
mov
dec
test
mov
imul
aam
movsl
rclb
aad
jmp
mov
imul
sbb
dec
in
cmp
cli
inc
adc
out
push
adc
and
fwait
push
inc
loop
push
mov
divl
nop
dec
push
popa
or
cmp
imul
and
push
mov
cltd
bound
inc
lar
lret
aaa
in
mov
xor
xchg
popf
sub
inc
adc
mov
call
daa
test
xor
add
and
inc
out
es
mov
mov
adc
push
mov
inc
bound
iret
push
aaa
inc
and
fwait
mov
outsb
pop
mov
or
cmp
fs
push
cmpsl
sub
cli
push
jmp
cmp
rol
je
gs
push
daa
add
cmp
and
mov
out
mov
mov
dec
insb
test
icebp
imul
cmp
push
and
shlb
icebp
dec
leave
leave
xor
push
or
aam
inc
adcb
jmp
shll
sub
sti
outsl
leave
cmc
in
in
cmc
mov
icebp
sti
pop
add
jo
lods
xor
int3
and
loopne
leave
test
mov
dec
in
mov
mov
in
cmpsl
dec
sub
push
sarb
xchg
imull
int3
sub
roll
pop
push
mov
jbe
ja
or
mov
sbbl
sbb
sbb
sahf
fsubrl
inc
jae
lret
imul
mov
mov
std
lds
movsb
mov
sub
mov
mov
lea
inc
mov
jmp
leave
in
stos
pop
and
pop
loopne
fcmovu
sub
jae
cltd
repz
xchg
and
mov
cli
push
arpl
fs
imul
pop
cltd
loopne
popf
repz
mov
pop
pop
cmp
test
and
popa
adc
std
add
and
push
rol
arpl
in
sbb
mulb
mov
pop
xor
aam
lds
fs
and
jnp
lret
fwait
imul
and
push
rolb
xlat
test
gs
bound
jle
test
mov
xchg
scas
shrb
lahf
dec
gs
mov
or
fwait
jp
imul
sub
mov
push
into
adcl
cmpsl
dec
shlb
add
ret
adc
push
push
cld
popf
mov
fldl
inc
les
adc
imul
out
insb
xlat
test
push
jae
sbb
fsub
mov
ja
add
adc
test
mov
mov
in
mov
xlat
pop
mov
cmp
mov
mov
mov
xlat
push
data16
xor
mov
xlat
pop
fbstp
std
mov
inc
sbb
adc
gs
in
stos
jno
mov
data16
in
mov
and
jo
cmpsl
dec
add
dec
test
pop
sub
cmp
roll
stos
mov
xor
pop
mov
mov
aam
add
jecxz
inc
pop
pop
clc
in
mov
pusha
and
popa
sub
loopne
lahf
divb
scas
pop
xchg
pop
stos
ss
mov
out
sub
cmp
jns
mov
jle
cwtl
xchg
fidivs
data16
or
push
fistl
mov
incb
dec
aaa
adc
shrb
cmp
mov
aam
pusha
iret
xchg
mov
or
push
adcl
or
dec
sbb
jns
clc
mov
push
push
and
xchg
mov
dec
push
and
add
mov
inc
fwait
test
aaa
jns
mov
adc
cs
mov
push
inc
pop
aaa
pop
loopne
fwait
add
mov
loopne
scas
test
jle
push
sbb
popf
nop
sub
cmp
and
addr16
push
popa
pop
leave
ds
push
insb
test
mov
mov
loopne
out
in
sahf
xor
mov
imul
sbb
mov
xor
inc
cmp
loop
test
sub
test
ret
add
adc
cmc
ja
popa
dec
aam
mov
jno
inc
xor
imul
jbe
add
pop
enter
pop
nop
xor
out
test
jp
loopne
push
or
cs
xchg
push
call
fldt
ljmp
fxam
pusha
mov
fmuls
inc
cmp
xor
mov
dec
imul
pusha
and
popa
pushf
fnstsw
sbb
insl
lock
pop
xor
gs
mov
fwait
jmp
sub
jno
dec
popl
faddl
sub
aam
or
push
aad
sub
imul
mov
cmp
call
adc
cmp
inc
adc
sub
and
xlat
xchg
movsl
cltd
and
jl
out
xchg
pop
cwtl
xor
aam
fmul
mov
aaa
inc
jns
xor
mov
nop
mov
enter
test
cltd
in
mov
iret
shll
jg
inc
inc
lahf
test
shr
loopne
in
mov
xchg
push
sbb
leave
pop
pop
or
fwait
movsb
mov
or
addr16
xchg
insl
imul
push
outsl
test
shlb
dec
push
or
mov
mov
add
lods
hlt
xlat
adc
call
imul
jmp
cltd
dec
imul
lcall
add
push
mov
roll
movb
xchg
enter
adc
dec
mov
test
ret
mov
mov
dec
ljmp
adcl
imul
korb
push
shlb
aam
dec
in
mov
jno
loopne
cmp
dec
stos
jno
das
pop
sbb
scas
std
out
mov
jno
push
gs
stos
and
or
jno
or
lds
add
and
pop
rcrb
sub
popa
mov
movsb
or
sub
mov
out
int3
or
movsb
ret
mov
or
xor
adc
lahf
enter
sbb
jmp
ret
cli
std
mov
sub
sahf
pop
add
fmul
mov
lods
mov
sbb
and
loop
or
pop
out
filds
dec
loop
mov
dec
loope
dec
sbb
rorb
cmpsl
push
mov
jle
pop
clc
loope
lret
adc
sub
and
or
or
add
lea
and
adc
mov
xchg
xor
sub
xchg
mov
out
stc
popa
es
insb
mov
mov
xor
adc
inc
push
out
les
cmpsl
xchg
out
lret
add
pushl
pop
sbb
pop
xor
jmp
inc
loop
iret
out
mov
jg,pn
in
mov
mov
out
xor
jmp
mov
mov
jge
cmp
jo
cmpsl
cwtl
in
sbb
sbb
pop
or
iret
js
mov
loop
es
bound
pop
imul
push
push
addr16
in
dec
sbb
pxor
or
or
mov
sub
and
jno
ret
in
test
dec
out
mul
sti
xor
xor
sub
rorb
sub
mov
loop
xlat
cmp
mov
jbe
ret
aam
or
mov
and
out
jns
int
into
je
jle
or
loop
outsb
cltd
lcall
pop
or
mov
pop
loop
sbb
fwait
inc
push
call
adc
jmp
stc
lock
fldt
sub
jnp
xor
push
nop
jg
imul
incl
out
mov
sti
pop
xchg
xchg
xor
nop
cmp
ret
loop
dec
aad
dec
lods
or
loop
repnz
push
dec
adc
mov
mov
sbb
movsl
loop
push
repz
mov
mov
mov
mov
jb
mov
dec
leave
adcl
dec
and
test
daa
rol
jb
loop
add
sbb
adc
sub
push
inc
loop
fst
in
cltd
daa
loop
sbb
mov
call
addl
je
and
fs
push
cmpsl
das
mov
imul
inc
insl
and
fists
xor
lods
in
pusha
insb
gs
movsb
adc
push
mov
adc
fsubp
mov
enter
or
add
jl
mov
bound
mov
data16
call
stos
lret
or
test
int3
dec
clc
pusha
hlt
pop
loop
rcl
sbb
jo
mov
subb
cmp
shl
push
adc
adc
subb
lods
leave
jge
mov
cli
loop
or
xor
int
and
outsb
cmpb
fs
data16
btc
xor
mov
dec
lds
mov
ret
xor
in
enter
loop
out
imul
mov
mov
andb
flds
push
out
pop
mov
inc
in
shl
adc
aaa
mov
jecxz
movsl
dec
fs
sub
cmp
cmp
loop
insb
xchg
imul
push
dec
scas
dec
mov
test
xor
push
xlat
cld
in
jb
pop
je
rcrl
ja
pop
cmp
xchg
ret
push
adc
in
jns
sub
jb
punpckhwd
and
popf
psubw
jb
nop
shrl
orl
mov
jmp
xchg
sar
in
movsl
jns
or
sarl
imul
leave
or
in
and
or
pop
mov
mov
xchg
sub
cmpsl
mov
mov
leave
and
cmp
test
cmp
or
inc
adc
sbbb
test
std
cmpsl
adc
idiv
jae
xlat
test
jns
in
loopne
pop
xlat
popa
test
sub
sbb
or
mov
daa
popa
add
out
inc
pushf
lea
add
dec
push
test
xor
repz
scas
or
sub
mov
push
loopne
fisttps
es
add
lret
or
arpl
mov
inc
out
cli
xlat
out
mov
jo
mov
xchg
test
sub
daa
shll
pop
xchg
ds
cs
push
or
mov
xor
cmp
outsb
test
out
dec
xchg
add
sub
test
shl
push
outsb
test
out
cltd
and
jns
mov
inc
imul
test
push
pushf
jnp
in
sub
sub
sbb
loopne
pop
mov
rorb
popa
imul
sar
sub
jno
test
in
mov
lcall
cld
jnp
xchg
shl
ret
loope
jmp
lods
or
add
iret
shr
icebp
cmp
dec
mov
pop
adc
clc
push
or
stc
dec
roll
xchg
addl
stos
pop
movsb
push
je
push
sbb
and
insl
or
sbb
sahf
and
out
add
add
jns
pop
jge
lods
xor
shll
xor
sti
loopne
cmpsl
sub
jp
and
pop
bnd
push
test
dec
mov
pop
ds
add
testl
pop
push
bound
push
jae
cltd
and
cmp
and
mov
sahf
fiadds
inc
pop
pop
je
sub
insl
xchg
jbe
mov
mov
fisubrl
cmpsl
leave
mov
or
sbb
out
cmpsl
sbb
inc
fbld
sbb
adc
xchg
fsts
out
and
repnz
xlat
popa
lahf
and
divb
imul
insl
call
addps
sub
not
dec
fnsave
repz
adc
mov
data16
xor
ss
lcall
lods
mov
fucom
lock
sub
imul
cmpsl
loop
jp
clc
out
imul
lret
jae
scas
mov
lea
pusha
xchg
cmp
pushf
adc
and
cmp
sbb
loop
fcmovb
push
mov
in
jns
outsl
movsl
loop
idivb
push
ret
adc
adc
push
or
lods
idiv
xchg
gs
adc
ret
jge
push
mov
mov
lret
push
mov
mov
in
mov
call
into
sti
loope
or
adc
shll
es
in
enter
mov
out
lods
xor
mov
subl
and
dec
das
dec
mov
rcl
mov
push
lods
loop
sti
lods
ret
cli
xorps
dec
ds
xchg
adc
sub
jl
dec
or
adc
jp
xorb
ret
or
ret
push
mov
faddl
jb
sbb
cs
and
loop
xor
outsl
pop
loop
xchg
jo
and
or
mov
xchg
pop
lahf
enter
loop
mov
ds
loop
cmp
jb
cld
or
idivl
std
mov
adc
mov
ret
movsb
xchg
push
jae
pop
mul
daa
push
outsb
push
xor
xor
xor
stc
mov
loop
sub
aad
dec
pop
add
loop
ret
push
cmp
loop
or
lds
adcb
dec
hlt
lods
mov
add
mov
std
test
inc
dec
add
pop
loop
cmp
xor
insl
loop
gs
mov
subl
lret
popa
mov
stc
sbb
sub
aad
cltd
ss
xor
mov
jecxz
mov
jmp
loop
inc
iret
out
adc
push
add
loope
pop
aam
xchg
mov
js
pop
xchg
in
idivl
xor
in
popf
outsb
jbe
sarb
in
fdivrp
mov
pop
lea
push
mov
inc
pop
in
sti
scas
jmp
imul
inc
insl
add
dec
inc
push
mov
fidivrl
cld
or
dec
aas
in
mov
out
sahf
sub
lahf
jne
inc
push
cmp
add
push
call
mov
cs
lock
sub
popf
add
and
scas
xor
inc
dec
ret
loop
adcl
jnp
pop
mov
push
mov
loop
jne
fwait
pop
loope
pop
call
jmp
mov
pop
mov
mov
lock
or
loop
xchg
icebp
hlt
adc
cmp
fsubrp
dec
add
in
mov
repnz
inc
loop
addl
bound
icebp
addl
cmp
mov
mov
mov
sub
xchg
dec
out
push
dec
movsl
in
icebp
mov
lahf
leave
loop
aaa
mov
cwtl
call
xor
and
mov
repnz
aad
push
mov
aad
add
stc
cli
loop
scas
popf
inc
jmp
stc
and
dec
xor
shlb
lahf
adc
lock
scas
adc
out
inc
add
out
push
jnp
lock
pop
bound
mov
jns
scas
cmp
jae
insb
push
and
jns
ds
stos
fnstsw
repz
mov
fldl
out
jno
or
in
testb
xor
adc
xor
sbb
cli
or
dec
fimull
mov
lods
mov
mov
insl
leave
inc
aad
aas
jge
shl
rcrl
mov
jecxz
sbb
sub
imul
call
lret
cmpb
lcall
pusha
loop
insb
jle
adc
nop
ret
mov
mov
mov
test
inc
mov
add
insb
add
cli
mov
jno
push
fisubs
es
aaa
test
push
inc
loop
dec
shlb
mov
inc
or
push
imul
pop
fmuls
mov
stc
das
sub
je
cmp
repnz
scas
loope
and
push
and
rolb
pop
mov
xor
ds
sbb
cmpsb
loop
push
pop
sti
adc
rcrb
add
ret
loope
je
fcmovnb
sub
stc
sarb
pop
out
dec
out
rcll
into
fisubl
xor
loop
push
cmpsb
push
dec
enter
mov
jecxz
test
test
lret
scas
mov
and
sarb
xor
addr16
loop
sti
dec
stos
pop
mov
dec
loop
jbe
les
or
xchg
xorb
out
xor
push
sbb
aaa
push
loop,pt
pop
leave
jne
pop
movsb
mov
adc
or
mov
loop
adcl
jl
jp
mov
xchg
repnz
aaa
or
loop
imul
push
loop
jle
les
movsl
repnz
mov
or
insb
pop
shll
adc
dec
loop
inc
jmp
mov
cmp
outsb
adcl
or
sub
xchg
out
repnz
enter
loop
adc
loope
scas
cwtl
mov
arpl
push
push
or
enter
rcrl
shrb
jno
add
lcall
or
loop
ret
popa
sarb
les
leave
and
out
push
loopne
loop
int3
bound
cmpsb
adc
xchg
flds
and
insl
push
ficoms
mov
daa
mov
pop
mov
loop
popf
jge
lret
imul
mov
mov
fucomi
sub
add
adc
inc
outsl
cmp
push
jnp
js
fdivrl
enter
add
mov
stos
sbb
cmpsl
and
mov
test
repnz
sub
xchg
adc
gs
mov
jb
lock
pop
inc
sahf
insb
dec
pop
loop
imul
sti
loopne
daa
xchg
insl
call
mov
fs
and
cltd
mov
sub
fs
xor
andb
scas
icebp
cmpsb
das
sbb
mov
mov
imull
push
inc
ror
adcl
pusha
sbb
pusha
in
dec
movsl
insb
maskmovq
mull
push
aad
add
mov
mov
icebp
test
mov
fsts
leave
and
fs
data16
ja
fs
das
loop
inc
out
mov
mov
mov
loop
mov
fs
popf
ffreep
jnp
ret
stos
mov
jmp
jle
xchg
mov
andb
cli
in
repnz
and
push
loopne
in
in
outsl
ds
mov
popa
es
repz
shll
push
mov
sahf
and
ljmp
std
xchg
cmpsl
adc
shlb
lret
scas
cmp
test
mov
adc
test
mov
and
dec
ja
lea
scas
lret
mov
pop
loop
insb
xor
stos
loop
cltd
xchg
pushl
bound
xor
mov
pop
jbe
mov
lock
rclb
mov
aaa
rcll
mov
sbbb
add
sub
or
imul
mov
stos
sbb
xor
cmp
jbe
mul
lods
push
xchg
repnz
in
imul
push
hlt
pop
arpl
loop
das
add
sub
jg
loop
test
insl
outsb
fidivrl
or
mov
jne
mov
add
jecxz
mov
inc
sub
jg
add
pop
sarb
repnz
cmp
xor
cmpsb
push
jns
mov
pop
call
fsubp
cs
jge
and
sti
les
dec
in
pop
rorl
aad
jno
pop
mov
pop
dec
sub
mov
push
dec
loop
aaa
adc
jns
dec
xor
sbb
loop
aas
cld
sub
pop
jp
jbe
dec
loop
lods
dec
sbbb
addl
push
loop
int3
es
sub
mov
mov
adcb
dec
cs
and
loope
loop
jb
fdivrl
das
sbb
call
mov
jne
pusha
or
insb
push
fdivrl
in
div
rcll
lcallw
sbb
mov
cmpsb
cmpb
mov
sahf
enter
adc
sbb
mov
pop
adc
pop
leave
loop
cli
xchg
add
xor
lret
jmp
loop
sub
mov
lods
ds
push
sarl
jle
jg
push
cmp
pop
add
pop
scas
jo
and
mov
bound
vmovss
rorb
lret
loop
pop
push
xor
dec
push
repz
ret
xor
rolb
shlb
in
lahf
daa
add
movsb
rol
xor
loop
lret
in
mov
loop
mov
fcompl
xchg
sbb
sub
lahf
and
js
jo
rcrb
fs
sbbl
push
cltd
push
enter
mov
test
push
cld
out
ds
insb
loope
stc
or
mov
loop
sbb
add
loop
or
push
jmp
jnp
jl
pop
loopew
repz
jmp
cs
loop
pushf
sti
enter
fstpt
jmp
and
inc
jmp
stc
inc
loop
or
jo
mov
cltd
outsl
fisubrl
jp
adc
bound
or
pop
lds
push
jmp
jmp
sbb
dec
icebp
dec
fwait
pop
test
call
call
iret
shrl
mov
je
cmp
jb
rorl
xor
sub
jecxz
push
cmpsb
clc
push
lcall
icebp
or
jge
xor
pop
enter
loopne
push
mov
out
leave
loop
loope
testl
add
jb
mov
jo
enter
xor
push
pop
sbb
jns
and
out
roll
pop
jns
mov
sub
int
aam
sbbl
mov
lods
xchg
insb
and
push
aaa
loop
jnp
or
cmp
stos
pop
loop
and
mov
and
jno
popf
into
bound
loop
rorb
jle
inc
loop
mov
rcl
pop
or
aas
leave
js
jmp
sub
sbb
out
insb
sti
and
jno
jmp
out
rcl
xor
scas
cmpb
pop
stos
fwait
outsb
leave
pop
xchg
xor
pop
inc
adc
loope
xchg
jae
ret
popf
pop
out
out
mulb
add
enter
loop
dec
mov
lods
push
adc
lods
nop
add
mov
mov
popf
daa
loop
sbb
sub
leave
jb
imul
popa
jg
shlb
adcl
in
fsubrs
and
jns
sub
jmp
loop
int
pop
mov
xlat
loop
mov
iret
clc
mov
dec
loop
mov
daa
sbb
call
outsb
aaa
mov
loop
cmpsl
imul
popa
fwait
sub
jno
shlb
sub
in
sbb
lock
cltd
out
nop
jno
mov
outsl
out
cmp
pop
and
int3
jo
ficomps
add
xchg
daa
fs
push
or
inc
gs
jge
adc
xchg
cmp
lods
add
or
xor
loop
inc
repnz
loop
mov
ret
sub
data16
push
cs
lret
push
jns
and
daa
or
out
fidivs
imull
lock
loop
push
mov
pop
xor
xor
pop
dec
push
loop
dec
mov
test
jl
push
movsl
adc
nop
loop
icebp
inc
stos
xchg
inc
add
out
and
jno
sbb
outsl
in
enter
dec
add
jmp
arpl
sti
jmp
push
loop
stos
rcr
mov
cli
lods
jecxz
ret
subl
cs
fnstenv
cmp
arpl
movd
inc
push
inc
out
out
loop
lahf
mov
mov
aad
jno
lods
ret
ror
gs
in
test
bound
mov
cmp
lea
iret
pop
cmp
dec
loop
imul
inc
pop
xchg
push
jb
loop
cmpsl
inc
fwait
sahf
dec
fsubp
add
je
pop
cmp
decb
push
loope
test
push
dec
or
orl
xchg
sub
dec
shl
aad
sahf
or
xor
ss
rcll
or
scas
test
mov
test
add
cwtl
insl
ljmp
icebp
xor
loop
add
repnz
jae
xchg
xchg
adc
fstpt
fidivrl
iret
aaa
cmp
sub
outsb
sarb
gs
test
cmpsl
fstp
pusha
push
and
in
fisubrl
xchg
mul
sbb
inc
inc
jno
cmpsl
push
fmuls
stos
ret
adc
xor
faddl
mov
dec
jg
les
movsb
or
or
subl
loop
cmp
subb
add
sub
int
jb
or
and
sahf
ds
mov
lea
xchg
adc
mov
incl
xchg
je
xor
lods
push
jb
loop
clc
sbb
stc
sub
mov
lret
loop
mov
xor
mov
rorb
pop
mov
loop
out
mov
and
mov
mov
pop
test
inc
loop
push
loopne
dec
xor
loop
sub
jb
sbb
addr16
adc
popa
int3
loop
adc
or
out
loop
add
push
mov
movsl
jle
ret
das
ss
lret
mov
pop
pop
loop
add
jo
in
out
rorl
sbb
aad
mov
inc
xor
loop
dec
or
scas
cmovnp
loop
xchg
fidivl
push
dec
sahf
out
shrb
int3
test
mov
call
jne
loop
ljmp
je
sbb
lock
cmc
xchg
cli
add
jecxz
loop
xorl
call
cli
mov
mov
js
cmp
in
push
pop
dec
mov
subb
pusha
xchg
jecxz
or
stos
pushf
jb
add
sbb
es
icebp
pop
shlb
sbb
adc
mov
pop
clc
cmp
js
dec
mov
ror
push
mov
shll
scas
xor
mov
inc
icebp
sahf
dec
push
loop
es
jb
mov
sarl
pop
push
jns
sbb
stc
bound
mov
aaa
sti
stos
and
loop
jmp
push
or
outsl
ret
mov
std
into
addb
mov
mov
test
or
push
outsl
test
xor
cmc
cltd
mov
or
in
movsb
ret
popa
jns
or
movl
cmp
cli
mov
cmp
sbb
loop
jno
lcall
iret
clc
cmp
mov
mov
js
loop
insl
adcb
pop
mov
mov
ret
jmp
xor
sub
out
sahf
jmp
xchg
dec
cmpsb
loop
es
cmp
ss
add
dec
das
aaa
push
adc
xchg
push
lcall
sahf
shlb
cwtl
clc
test
inc
and
dec
add
jmp
pushf
bound
mov
push
out
scas
gs
cli
inc
pop
sahf
adc
aad
jno
inc
ud0
repnz
xchg
mov
mov
imul
mov
loopne
lea
cmc
mov
ret
mov
jge
loop
repz
pop
loope
inc
mov
cli
mov
xor
xor
mov
or
mov
fsub
mov
xor
or
sbb
push
lahf
call
fdivrs
and
jecxz
mov
mov
jp
loop
dec
fmull
js
aad
cmp
mov
mov
in
cld
sub
loop
adc
out
shll
sti
and
bound
or
inc
loop
sub
into
lcall
jae
loop
pop
jns
dec
xchg
sbb
sarb
sbb
imul
mov
mov
fdecstp
addr16
dec
sti
push
jecxz
addr16
sub
adc
pop
movsb
es
loop
dec
pop
scas
pop
adc
loop
push
pop
xchg
addr16
lods
sbb
mov
je
pusha
and
loope
aam
ds
ret
lods
push
sbb
lret
dec
xor
loop
xchg
xor
mov
jmp
rol
adc
loop
sti
jbe
or
into
mov
popa
rdpmc
or
fidivrs
loopne
dec
mov
mov
loope
push
insb
shl
or
and
pop
fnstenv
iret
out
sbb
add
xchg
rcrb
jp
clc
loop
adc
stos
push
lahf
loop
adc
imul
movsl
loop
add
inc
cmp
dec
or
mov
push
out
jmp
iret
in
andb
insb
mov
and
lods
cmp
loop
mov
cmpb
jo
bswap
mov
in
xor
dec
loop
les
ficoms
adc
mov
mov
jge
in
enter
daa
or
bound
dec
cmp
sbb
gs
sub
cmpsb
xchg
lock
mov
pop
pop
push
imul
jno
push
int3
mov
jns
add
scas
shrb
or
iret
pop
dec
xor
cltd
arpl
pop
fisubl
xchg
dec
ds
aam
mov
and
js
xchg
jae
popa
jp
lret
push
loopne
test
sub
dec
movsl
jmp
mov
rcrl
push
pop
and
js
into
inc
jb
arpl
xchg
fidivl
leave
adc
push
enter
xor
jne
push
mov
add
and
cmp
cmpb
ret
jno
js
and
pop
pop
sar
mov
push
jo
nop
jnp
xor
imul
xor
insl
pop
ja
repnz
sub
dec
shrl
mov
mov
pop
and
cmp
push
cli
hlt
sti
adc
push
ljmp
aaa
mov
shlb
sub
dec
je
fsubr
unpcklps
and
in
mov
enter
cld
pop
mov
sub
sbb
and
sub
das
mov
cwtl
pop
popf
popa
loope
mov
rcl
rol
inc
js
dec
adc
bound
dec
loop
into
leave
mov
cmpsl
test
mov
repz
mov
inc
xor
jno
dec
xor
jae
ret
sbb
popf
shr
lods
sub
pop
mov
jbe
xlat
cwtl
movsb
loop
into
in
mov
inc
mov
cmp
push
mov
scas
push
lds
pusha
les
arpl
inc
sub
lahf
lret
inc
daa
pop
mov
std
push
mov
in
cmp
leave
lret
sub
sbb
loope
xorl
hlt
ja
movl
pop
and
and
push
push
mov
movsb
hlt
mov
movsl
or
rcrl
xor
sbb
imul
shlb
dec
dec
movsb
lret
imul
xor
pop
jmp
jle,pn
mov
xchg
push
cwtl
sub
mov
sbb
mov
fdivs
rcr
leave
addl
sarl
les
imull
cltd
push
xchg
rcll
mov
cld
dec
popa
xlat
shlb
ja
or
test
ljmp
icebp
rorl
cltd
fidivrl
outsb
mov
or
cmp
es
dec
lret
imul
mov
mov
sbb
in
movsb
add
add
mov
stos
test
inc
jecxz
lret
lds
and
sub
adc
leave
add
mov
aas
xchg
xor
rorb
mov
jge
imul
inc
push
xorb
jle
sub
jns
push
in
mov
xor
mov
fwait
and
out
loop
mov
in
gs
and
test
mov
cmp
inc
test
xlat
cmp
adc
or
movsl
mov
sahf
pop
jbe
add
cmp
cs
and
or
out
xchg
das
sub
xchg
add
inc
mulb
jl
mov
enter
inc
push
aaa
iret
cltd
mov
imul
jmp
sub
rcll
lock
cwtl
stc
cld
pop
jbe
and
cld
xchg
cs
pop
dec
fwait
and
rcrl
inc
divb
repnz
mov
fsubrl
scas
sarb
imul
mov
in
mov
cltd
jmp
test
icebp
loopne
push
lds
rorl
insl
gs
mov
scas
mov
enter
js
lods
popa
loopne
mov
loope
test
shlb
movlps
pop
mov
out
jae
mov
fs
and
fisubrs
lods
and
stc
test
jge
rcll
test
loopne
outsl
pop
lods
and
sub
jge
shrl
shll
inc
loopne
shll
stos
cmpsb
dec
adc
add
lcall
bound
cwtl
adc
loope
loopne
pop
test
mov
xor
arpl
data16
les
cvttps2pi
fs
ficoml
mov
mov
add
pop
dec
jp
sti
rcr
ja
rorl
in
xlat
sar
lret
loopne
mov
jmp
add
inc
scas
subl
loopne
pop
dec
cwtl
add
js
jno
popf
jno
mov
aam
icebp
pop
subl
data16
test
pop
xchg
mov
sub
cli
or
cwtl
sub
rcll
rcrb
mov
pop
imul
pop
hlt
push
jae
repnz
mov
and
xor
mov
mov
fldl
add
loope
jns
xor
nop
lcall
pop
jmp
jnp
mul
lret
repnz
dec
xor
and
stos
in
inc
dec
cmp
fsubr
in
push
push
roll
and
mov
lds
xchg
sbb
sub
loope
arpl
cmp
ja
xchg
ret
adc
bnd
xchg
jne
rcr
ficomps
add
xor
or
mov
ja
jmp
test
ja
xlat
cltd
mov
test
leave
cld
pop
cmp
add
arpl
test
jno
pop
cltd
ret
pop
popa
icebp
and
fs
movsb
push
jns
ret
adc
fmull
adc
inc
push
fdiv
mov
lcall
cli
mov
and
or
dec
fyl2x
xchg
aam
es
xchg
aas
aam
inc
imul
push
xor
inc
mov
cmp
jecxz
aaa
stc
punpckhwd
popa
push
out
and
test
push
cmp
cmc
loopne
push
mov
jmp
cmpsl
popa
and
jmp
cltd
flds
aaa
mov
mov
gs
fsubl
out
jae
rcl
or
or
cs
mov
pop
int3
call
push
in
mov
or
jge
sub
outsb
pop
out
jmp
pop
test
sbb
in
call
and
pop
mov
test
sbb
notl
adc
xchg
and
add
std
out
add
cmp
dec
mul
add
mov
aas
inc
aam
testb
and
jns
cmp
ja
xchg
sbb
pushf
addb
in
and
fnstcw
sbb
xor
ljmp
sti
pop
pop
lahf
pop
repnz
push
movsl
and
mov
lcall
out
mov
pop
or
loope
popf
out
cs
repnz
aam
jmp
or
add
mov
cmc
add
loop
out
daa
es
aas
sub
jno
jl
and
mov
mov
mov
jb
sbb
dec
dec
jbe
push
add
mov
pop
imul
mov
inc
xor
out
inc
inc
loop
and
popf
insb
clc
pop
mov
ret
jg
push
or
andb
lahf
mov
rcrl
and
in
popf
loop
mov
xor
xchg
sub
jl
movsb
jmp
sbb
add
pop
cmp
mov
stos
and
loop
lea
mov
in
and
cmp
sti
sbb
movsb
xor
cld
loop
inc
stc
jns
xor
fistl
loop
mov
pop
mov
es
inc
push
daa
aam
loop
loopne
notl
enter
or
and
out
das
fildl
mov
rcrl
scas
and
adc
bound
in
mov
add
insb
test
adc
sti
je
ficomps
aad
in
and
cmc
add
roll
mov
shl
jns
mov
mov
lcall
je
fdivr
loop
dec
pop
xchg
aam
popa
dec
jns
mov
xchg
leave
and
mov
mov
test
sbbb
lret
stc
and
jne
stos
dec
es
loop
out
pop
mov
pusha
push
imul
sub
loop
aam
mov
pusha
lods
jae
movsb
lahf
push
and
fs
in
aaa
repnz
test
arpl
lock
call
gs
mov
pop
pop
popa
mov
sub
mov
test
xchg
das
fwait
jl
cltd
in
test
movsl
mov
cmp
rcl
out
adc
mov
jl
xor
stos
fwait
ds
sbb
insb
pop
popa
ret
pop
jge
iret
arpl
data16
cmpl
xchg
fistl
inc
sub
ja
cmp
or
flds
mov
mov
add
loopne
das
ljmp
stos
in
fsubrl
push
mov
insb
pop
push
mov
sbb
ss
sti
dec
xor
loopne
mov
xor
push
imul
hlt
adc
fwait
mov
cmpsb
fistpll
jbe
stc
cmpsl
pop
sub
lret
orb
arpl
sub
xlat
xor
scas
push
adc
sub
popa
mov
jecxz
pusha
icebp
or
sbb
fxch
sbb
test
aam
mov
sbb
pop
jnp
jmp
rcll
enter
xchg
lea
popa
sub
jns
cmp
jne
push
and
movb
fcoms
loop
outsb
into
mov
popf
daa
mov
mov
jae
scas
mov
dec
rcrb
outsl
push
pop
jns
mov
rcl
mov
test
cmp
mov
mov
jmp
test
fadd
dec
sti
jp
mov
mov
andl
jge
test
movsb
jp
and
inc
mov
in
xor
fcoml
stc
leave
in
xchg
mov
hlt
aam
mov
out
pop
cmpl
xor
imul
mov
lds
inc
pop
mov
out
push
fstpl
push
pop
push
jns
push
shll
int
dec
adcb
imul
push
push
loope
sbb
push
ja
js
add
sub
lods
push
sub
jmp
mov
push
cmp
out
sub
ja
adc
xor
xchg
push
movsl
sub
movsl
outsb
push
test
cmp
loope
flds
sbb
imul
ljmp
or
push
out
mov
imul
fcomps
repnz
in
and
push
xchg
jmp
stc
pushf
loopne
mov
inc
inc
cmp
jns
inc
xchg
jle
shll
adc
cmpsb
adc
pop
lods
sbb
mov
and
cmc
loop
dec
hlt
in
or
xchg
xor
clc
cmp
shr
enter
sbb
aad
outsb
loope
mov
loop
pop
fs
pop
nop
js
mov
push
or
dec
into
jnp
lock
push
pop
push
in
sub
mov
sbb
inc
cmp
jb
cs
and
sub
sub
les
mov
cmp
out
jo
movsb
fstpt
je
nop
test
cli
bound
shrb
orb
jae
repnz
add
aaa
and
test
xchg
cmp
imul
xchg
aam
jns
repnz
lcall
mov
pop
insb
js
sbb
jb
mov
stos
movsl
inc
dec
lods
add
out
jbe
and
stc
lahf
into
mov
ss
ds
cltd
loope
test
insl
jecxz
loop
jmp
fiaddl
loop
cld
pushf
cmpsb
mov
mov
clc
inc
arpl
xchg
insb
mov
stos
sub
jnp
lods
sbb
mov
and
mov
imul
inc
ret
mov
and
test
lock
pop
mov
shll
pop
pushl
lret
fs
mov
lret
sub
leave
mov
mov
xchg
clc
aas
mov
xor
loop
push
jle
orb
loop
nop
and
aaa
xchg
adc
clc
in
inc
cmp
lcall
ret
insl
loop
daa
lock
bound
jl
aam
inc
mov
icebp
adc
add
add
outsb
or
jne
scas
gs
push
loope
ds
pop
cmp
fbstp
bound
jmp
mov
imulb
call
pop
out
loop
mov
or
jbe
sub
fimull
test
mov
push
insl
xchg
shrb
js
mov
adc
mov
pusha
loop
pop
aam
push
jmp
test
inc
add
loop
sbbl
xchg
xor
loope
mov
rol
and
cmova
adc
mov
loope
into
mov
mov
scas
push
loop
es
fninit
xchg
inc
add
or
adc
ret
icebp
inc
loope
int
jg
jmp
push
dec
cmp
dec
jl
sub
out
sbb
call
inc
aam
call
fdivs
sub
or
loop
mov
lea
sbb
mov
ret
lahf
push
loop
int
pop
push
icebp
push
add
out
loop
add
lock
out
decl
mov
adc
xchg
xchg
popa
loop
mov
dec
cltd
sub
sub
or
fimuls
pop
loop
jae
test
lock
rcll
stc
adc
mov
loop
push
adc
dec
lds
jno
push
or
addr16
loop
daa
out
dec
adc
mov
mov
mov
scas
xorb
inc
mov
push
mov
cli
loop
aaa
je
mov
add
xchg
test
movl
out
call
mov
aam
rcrl
movsl
and
lds
test
jae
sub
pop
sub
outsb
push
shl
mov
sbb
jl
mov
adc
je
cld
loop
cmpb
cs
mov
mov
dec
fmuls
sub
adc
stos
enter
pop
rcrb
das
shrl
adc
mov
mov
fisubrs
push
loop
inc
mov
repz
push
mov
push
out
cmp
pop
popf
aaa
sahf
popa
sbb
push
mov
pop
xchg
test
enter
iret
loop
add
repnz
inc
inc
jg
shll
dec
lods
mov
ss
pop
jmp
cmp
sub
lfs
jl
fsubl
outsb
push
jecxz
cmpsb
jb
mov
out
in
std
add
bound
fcoml
idiv
mov
stc
insb
xchg
loop
xorb
jg
bnd
ret
inc
mov
or
jns
repz
cmp
xchg
mov
aas
mov
clc
pop
mov
movsb
stos
push
orb
sti
sahf
loop
xor
ffree
cmp
pop
loop
test
je
push
sub
insb
inc
lock
loop
rol
lcall
pop
movsb
mov
lea
leave
call
sbb
jns
fistpll
mul
repnz
mov
loop
ficompl
mov
xchg
sbb
test
mov
inc
fwait
xchg
xor
shll
fiadds
xor
push
xor
and
add
lods
lret
scas
pushf
insb
mov
xor
pop
in
adc
mov
loop
fdivl
loop
and
sub
jmp
inc
sub
scas
xor
jl
fsub
scas
test
jne
jns
push
loop
dec
in
inc
mov
bound
sbb
mov
je
in
pushf
loop
xchg
mov
loope
test
inc
dec
or
ss
xchg
pop
pop
xchg
xorb
mov
xlat
sbb
sbb
jb
out
test
je
xor
aas
jp
mov
or
out
push
xchg
jecxz
loop
pmulhuw
xor
inc
lret
movsl
les
or
cmp
je
pop
idiv
jb
loop
lcall
aad
or
int3
pop
or
dec
fs
or
or
or
shlb
icebp
sub
loop
fsubl
cltd
dec
vpgatherdq
loop
xor
or
adc
in
cs
sub
and
rclb
jecxz
mov
loop
cmc
shrd
adc
push
inc
movsl
mov
shr
or
jne
dec
in
lret
xchg
rcll
rorl
loope
and
hlt
insb
loop
mov
call
push
and
jnp
pusha
ds
add
or
ret
insl
loop
lods
inc
rorb
test
or
xor
cmpsb
js
or
ret
decb
adc
cmp
pop
sbb
mov
adc
mov
xchg
jns
stc
mov
jle
outsl
sub
jmp
les
loop
adc
add
lods
loop
jnp
jp
loopne
inc
loop
daa
mov
aaa
dec
pop
shl
jle
push
fnstcw
in
stc
jecxz
loop
add
and
stos
es
rorb
xchg
out
and
mov
out
adc
mov
clc
rorb
push
jg
inc
jmp
push
shll
insl
repnz
hlt
or
es
xor
push
js
loop
lcall
loop
mov
fdivs
pushl
push
loop
imul
add
cmpsl
loop
cmp
mov
inc
mov
stos
push
or
loop
sub
jno
and
adc
jp
pop
adc
aad
inc
stos
and
mov
out
xor
and
mov
loope
popa
inc
pop
cmp
int3
add
iret
in
add
test
and
andb
cwtl
loop
jge
mov
adc
jo
icebp
push
inc
jecxz
jne
loope
int
stc
shr
mov
cmpsl
bound
push
jmp
mov
fsubp
jg
jl
loop
bswap
mov
or
scas
loop
adc
in
ds
jg,pn
xchg
loop
div
push
test
sti
sbb
lret
ss
mov
inc
dec
decb
jno
sub
dec
fidivrl
pop
or
fcmovnbe
jecxz
push
adc
test
mov
inc
movsl
out
mov
call
xchg
test
sub
ja
xchg
or
push
jb
and
or
addr16
std
test
cmp
cmp
out
cmpb
cmp
shr
xlat
sub
xchg
cmp
sub
mov
lret
fildl
xor
ficomps
rorb
shl
rclb
jb
mov
pop
loop
sub
stos
and
mov
push
call
mov
negl
pop
xchg
push
fnstenv
xorb
iret
imul
leave
das
cmp
out
mov
loope
mov
adc
dec
add
sub
clc
out
cmp
imul
cmp
sti
cli
xor
jp
pop
cmc
inc
fcmovb
adc
shll
outsl
mov
xchg
sahf
ret
and
push
fidivl
push
or
out
jp
lea
jbe
mov
jmp
shlb
mov
adc
pushf
dec
mov
jmp
insb
loopne
gs
sarb
or
idivb
movsb
sahf
jne
xlat
int3
movsl
rorb
cmp
shlb
adc
push
adc
mov
lcall
jb
jb
xor
xchg
lods
nop
movsl
cld
int3
jg
fdivl
gs
sar
cmp
push
ljmp
jge
jae
xchg
mov
add
repnz
xor
nop
pop
jns
xor
pop
imul
sbb
rclb
out
jo
pop
cli
xchg
repz
out
xchg
nop
aam
cmp
mov
movsb
pop
xor
lret
aam
mov
lods
inc
mov
pop
hlt
mov
mov
les
mov
ret
sub
popf
mov
mov
aam
into
out
ret
int
mov
dec
xchg
jmp
int3
jmp
aad
fisubrs
std
nop
sti
sub
stc
add
lds
cmp
mov
cs
mov
or
xchg
and
aaa
mov
mov
mov
addb
fimull
repnz
jae
jbe
bound
cmp
push
sti
mov
pop
lcall
js
mov
xchg
push
arpl
dec
mov
pusha
call
movsb
fisubl
js
xchg
aad
cmp
insl
mov
jae
pop
and
movsl
inc
and
push
sahf
movsl
dec
or
xlat
test
jmp
roll
std
cmpsl
and
inc
loope
test
insb
add
pavgw
jns
jno
or
cmp
and
and
jae
xor
adc
xchg
test
call
enter
mov
dec
xor
hlt
adc
loope
sub
mov
dec
xor
sub
dec
loop
ds
dec
addr16
loop
sbb
sti
loop
mov
fstl
test
push
std
push
cmp
jno
repz
lods
xor
and
arpl
outsl
loope
ret
sbb
mov
push
mov
sarb
dec
or
xor
ss
sahf
mov
inc
pop
mov
mov
and
mov
out
shll
bound
aam
das
mov
cmp
loop
jb
in
clc
xchg
enter
pop
or
push
push
jo
loop
pop
mov
and
inc
inc
or
cmp
outsl
lret
jge
loop
cmpsl
pop
mov
es
in
lret
mov
dec
cmp
fstp
inc
std
loopne
pop
shlb
push
loop
cwtl
int3
or
xchg
in
or
shr
adc
movb
push
loop
jns
pop
xor
fistps
inc
inc
psllw
std
mov
ds
loop
inc
pop
dec
cmpsb
jecxz
repnz
daa
and
out
and
pop
pop
jecxz
pop
inc
sarb
loop
in
or
mov
sub
addb
xor
push
loop
fidivs
adc
aas
xchg
push
pop
ret
loop
js
insl
jo
sbb
loop
dec
repnz
aas
mov
sbb
xor
and
push
aam
cld
pop
mov
add
fildl
jnp
leave
pushf
loop
test
sbb
int
push
rorl
lahf
loopne
inc
cli
mov
test
js
stc
mov
out
cs
jmp
testb
dec
outsb
fidivs
lahf
stos
xchg
shl
mov
sbbl
std
lea
mov
adc
les
enter
cmp
loop
mov
loop
aam
cmp
or
js
inc
loop
fs
test
popf
leave
loop
mov
dec
outsl
push
in
jb
loop
out
lds
sarb
loop
insb
lods
hlt
dec
xchg
notb
in
bound
mov
cli
mov
jae
loop
add
shl
loop
and
xchg
mov
scas
icebp
adc
mov
adc
je
loop
insb
adc
and
jge
lock
bound
pushf
push
sahf
loop
pop
cli
fmull
adc
xor
ss
mov
pop
xchg
addr16
insl
test
in
outsb
lock
insl
jle
mov
adc
int
adc
test
les
jl
push
pop
out
sub
sub
mov
push
cli
and
imull
and
fnstcw
xlat
dec
inc
loop
cmpsl
insb
rcrb
loop
sahf
mov
loop
mov
outsb
mov
lret
in
sbb
lret
shl
sahf
loop,pn
ret
lock
cmpsb
adc
loop
movsb
hlt
or
jmp
push
jnp
stos
inc
and
mov
loop
push
iret
lods
mov
test
setno
cwtl
pop
sub
in
adc
cmpsb
jno
inc
add
dec
jecxz
pop
xorb
sbb
loop
stos
movsb
pusha
cmc
repz
mov
xlat
addl
pop
imul
faddl
xor
cli
je
mov
pop
lods
sbb
sub
mov
rolb
jp
out
push
mov
and
push
jbe
xchg
xchg
stos
sub
out
push
bound
cmp
dec
shl
xor
cmp
loop
adc
mov
loop
cmc
in
dec
popa
mov
shll
loop
mov
push
shl
imul
dec
mov
bound
fidivl
sahf
cmc
pop
pop
loop
and
jl
mov
dec
loop
movsb
inc
sbb
mov
fs
stc
and
out
andl
out
cmp
add
mov
xor
jno
filds
jge
cmpsl
inc
sahf
push
shll
das
insb
mov
sub
jge
cli
push
add
push
mov
shl
stc
lcall
testb
mov
add
and
outsb
je
push
push
aas
out
lret
add
call
adc
daa
inc
sbbb
cmc
out
out
ficomps
cmp
roll
xchg
fnsave
movsl
mov
loop
fldt
pop
enter
sub
andb
mov
push
sahf
icebp
push
aam
mov
pushf
ds
loop
mov
bnd
lds
or
outsb
loopne
roll
push
repz
je
and
loop
repnz
aad
sti
loop
lret
shrl
and
fildl
add
dec
and
pop
push
out
dec
insl
jmp
je
repnz
fsubrl
jp
mov
push
lock
mov
in
jo
es
or
mov
xor
xchg
aam
and
mov
cmpb
add
mov
es
loop
mov
nop
ret
and
vmovshdup
stc
cwtl
bound
push
inc
jp
xchg
sub
mov
rcrb
mov
push
imul
imul
loop
xchg
int
cli
ror
sub
test
sub
cmp
cmp
dec
cli
and
enter
mov
orl
jb
inc
xor
adc
aad
xchg
adc
shll
leave
dec
enter
push
cmp
adc
testb
adc
fwait
inc
push
popf
jecxz
inc
retw
pop
ja
leave
cmp
loop
lcall
and
lret
sub
adc
mov
shrl
mov
jle
dec
andb
dec
inc
push
xchg
aam
roll
pop
imul
mov
mov
xchg
adc
gs
cmp
arpl
les
jb
jmp
fdivs
fsubs
loopne
testb
jae
lretw
inc
mov
lret
mov
ret
popa
stos
and
xor
pop
into
fcmovnb
dec
pop
hlt
add
cmpsl
fwait
adc
mov
jnp
mov
sub
lahf
mov
mov
lret
das
shl
stc
pop
and
pop
cmpsl
mov
push
jno
pop
and
xor
fsub
test
cld
mov
sub
pop
or
pop
sarl
cmp
adc
push
xchg
andb
fdivs
leave
shl
rcrl
dec
mov
jmp
add
fisubl
aam
cmp
mov
rol
cmpb
add
dec
shlb
push
insb
push
dec
mov
jmp
shlb
xlat
pop
movsl
cwtl
or
popa
shrb
pop
mov
lock
mov
inc
pushf
ret
hlt
lret
fistpll
jns
mov
jo
pop
in
dec
xchg
add
inc
or
out
repnz
mov
cmp
js
adc
lret
notl
inc
or
jo
lods
imul
adc
cmpsl
mov
jge
das
rolb
mov
pop
and
mov
sub
fnstcw
jecxz
pop
and
push
cld
inc
sub
jns
rol
pop
out
lods
popa
xor
pop
inc
cld
pop
pop
mov
negl
sarb
fidivs
imul
idivl
test
or
movsl
inc
aaa
test
dec
inc
test
dec
xchg
xchg
push
adc
dec
divl
sbb
push
adc
divb
cld
movsb
xor
and
and
int3
popa
test
jge
dec
cltd
subb
jl
lods
jae
sub
lods
ljmp
lret
pop
push
das
cli
pop
loopne
mov
mov
fiadds
inc
jg
fisubrs
and
outsb
lret
and
popf
cmp
sub
mov
jecxz
pop
popf
pop
iret
mov
jmp
or
sub
and
sub
dec
mov
add
ja
stos
and
daa
roll
pop
jmp
jae
gs
aam
or
xchg
add
fcoml
mov
gs
lds
fsubs
and
jl
cmp
dec
and
test
or
inc
inc
mov
ss
xlat
fsubrl
pop
clc
xor
fmul
mov
pop
data16
fucomp
ja
cltd
mov
sbb
out
mov
push
popa
in
jecxz
jne
inc
insl
fsubrs
ljmp
neg
fs
and
js
sbb
sub
mov
cld
xchg
repz
xchg
cmp
movb
xchg
bound
outsl
rolb
push
xchg
enter
mov
jge
xlat
loopne
idivb
xchg
aam
mov
sub
ljmp
not
lea
mov
mov
add
ljmp
dec
sub
xchg
sbb
aad
shlb
jnp
push
or
pop
ret
or
scas
insb
push
out
xor
pop
sub
sahf
push
dec
imul
or
fadds
ss
mov
loope
repz
mov
sub
cmp
inc
daa
cld
cwtl
test
add
ffree
jne
rol
outsb
pop
push
sar
mov
shrl
rcrl
xchg
in
fiaddl
sbb
cmp
imul
loope
push
mov
mov
scas
mov
push
add
inc
cmpsl
cwtl
pop
or
and
push
scas
inc
fcomps
and
nop
adc
xchg
insb
rcl
movsl
cmp
or
in
mov
jne
cmp
outsb
push
add
sarb
pop
shrb
adc
cmp
test
cltd
insl
lock
imulb
ret
loopne
add
fimull
sub
mov
sbb
mov
rcrb
or
mov
push
inc
in
pop
call
inc
ss
dec
pusha
movl
shl
cmc
pop
jns
arpl
leave
mov
jns
pop
cmp
mov
push
leave
fimuls
inc
push
repnz
call
xchg
push
cld
rcrb
push
outsb
insl
shlb
push
movsl
dec
imul
mov
loope
lea
sub
push
rcrb
xor
mov
out
mov
pop
test
mov
lods
lock
iret
push
mov
jmp
call
mov
gs
cwtl
ljmp
pop
hlt
push
or
lods
and
sbb
mov
ficompl
add
popa
adc
dec
or
or
sqrtps
inc
insb
in
pop
and
je
adc
rorb
shlb
mov
mov
jae
mov
jg
add
add
ss
lret
jb
leave
jns
pop
jno
into
dec
inc
sub
movsl
vpsraw
xchg
loop
cwtl
push
cmp
lcall
xor
push
imul
fidivrs
add
sub
adc
rcrl
imul
shlb
xlat
sbb
sub
loopne
jno
and
jb
sub
pop
dec
movsl
pop
outsl
outsb
mov
movsb
cwtl
push
imul
inc
loopne
orl
fsubrl
stos
inc
movsl
jns
cmp
cwtl
sub
mov
jmp
lock
cmp
cmp
test
lahf
ret
rol
or
loopne
cmpl
mov
dec
scas
leave
in
fisubrl
mov
out
mov
stos
and
je
push
sbb
outsb
add
rol
inc
mov
daa
repz
cltd
data16
xlat
sub
rclb
add
sbb
pop
mov
loopne
sub
cmpb
hlt
sbb
movsl
loope
cmp
scas
imul
dec
push
cmp
pop
dec
pop
mov
and
gs
gs
testb
mov
jle
imul
sub
test
cli
pop
sub
mulb
cmp
cmp
mov
push
sbb
ja
mov
test
mov
jmp
mov
lret
and
xor
or
sub
movsb
shrb
cmp
add
lahf
mov
or
mov
cmp
outsl
das
out
scas
push
cltd
das
test
popf
das
jbe
adc
fs
dec
push
sub
ljmp
pop
lods
and
test
lods
adc
push
sar
stos
mov
mov
aam
cmp
gs
lds
rcrl
or
rcll
orl
imul
mov
scas
pop
popf
sbb
xchg
imul
mov
iret
adc
dec
inc
xchg
mov
movsl
or
dec
test
add
cli
pop
mov
stc
pop
xchg
pop
stc
test
ret
icebp
adc
xchg
sub
fidivrs
xchg
gs
loopne
gs
pop
enter
fdivrs
inc
xchg
imul
mov
rcrb
shlb
ljmp
pop
enter
enter
mov
pop
movsl
shl
rcrb
mov
mov
loope
mov
mov
in
testb
and
mov
xor
popf
shlb
lcall
dec
jb
dec
fwait
in
bound
cmp
test
cwtl
add
mov
jmp
dec
gs
outsl
xchg
popa
leave
sub
popl
pcmpeqb
xchg
andb
jle
gs
mov
mov
pop
nop
push
shrb
xor
fmull
xlat
shlb
lret
outsb
pop
enterw
fldenv
sbb
popa
or
stos
or
stc
hlt
in
adc
cltd
jge
call
and
mov
mov
cwtl
ljmp
divb
aaa
xchg
loope
scas
fdivs
cmp
std
daa
ficompl
dec
cmp
mov
bound
imul
ret
xor
movsb
xchg
pop
fs
add
nop
mov
daa
test
test
mov
mov
aas
add
mov
shlb
sbb
outsb
test
cld
pop
cmp
sub
push
in
mov
pop
and
mov
pop
push
cmp
cmpsl
sub
rorb
lcall
cs
jo
cli
scas
mov
sbb
loopne
leave
sub
push
popa
lds
add
ret
insb
rcrl
repnz
pop
jecxz
mov
out
cmp
shlb
sub
shll
cmp
stos
cmp
test
shrb
movsb
cmp
mov
test
shrb
jmp
ficompl
aam
cli
mov
xchg
pop
sub
jno
xchg
test
insb
and
mov
test
cmpl
sub
mov
add
push
decl
and
mov
mov
pop
daa
idiv
jnp
mov
cltd
sub
mov
pop
add
jle
nop
cld
mov
inc
loope
inc
leave
vmulpd
inc
cmp
andb
mov
frstor
cld
loopne
mov
negl
cmp
repz
sbb
pop
push
jge
cld
bound
mov
mov
mov
dec
xchg
popa
jae
adc
fldt
pop
xchg
cltd
dec
mov
inc
repnz
cmpsb
pop
inc
jge
fwait
pop
sub
jmp
fldl
pop
pop
jo
fnstenv
mov
fsub
stos
jle
xor
loop
scas
fsts
mov
icebp
fbld
divb
std
test
lahf
shll
outsb
mov
jg
adc
and
sbb
mov
iret
iret
xchg
and
xor
jne
xlat
jg
mov
lea
sub
pop
aad
sub
ljmp
inc
xchg
rclb
shl
icebp
xlat
pusha
cmp
lds
lahf
push
aam
cmpsl
mov
popa
addl
call
sbb
jo
push
sub
enter
out
inc
imul
push
pop
rcll
dec
aas
sbb
jmp
insl
mov
shlb
stos
lahf
jmp
push
pop
stc
and
pop
jo
fsubrs
test
icebp
mov
adc
jb
fmuls
inc
cwtl
test
lahf
pop
and
xchg
out
aam
mov
mov
lds
sbb
popa
aaa
xor
sbb
in
jg
jg
xchg
mov
aad
sbb
aas
adc
pop
push
shr
fs
fiadds
in
mov
ljmp
push
xchg
sbb
sbb
push
adc
bound
je
or
sub
adc
jmp
shr
xchg
stc
mov
xchg
sarb
fnstcw
pop
jns
mov
pop
lahf
shr
cmp
roll
xchg
rolb
lds
imul
andl
xchg
shlb
imul
pushl
clc
pop
jo
leave
out
sarl
rcrl
aas
xor
add
aaa
mov
clc
push
mov
shlb
or
aaa
scas
shl
xchg
dec
mov
xchg
add
addl
pop
pusha
imul
rcll
add
pop
adc
rcrb
cwtl
shr
pop
xor
mov
repnz
shlb
pop
xchg
ror
jae
cltd
inc
loopne
mov
test
gs
jg
dec
jmp
cltd
mov
movl
mov
inc
iret
cmpsl
out
adc
sub
imul
inc
lretw
fwait
leave
cltd
jmp
ss
nop
jecxz
sub
or
loope
xor
lds
iret
aaa
sub
movb
push
inc
mov
popa
movsl
mov
cli
mov
imul
push
and
pop
shr
and
mov
push
xchg
loope
mov
aaa
pop
lds
fstps
or
fldpi
nop
andb
stc
or
sub
iret
loopne
jae
sub
scas
lods
test
fisubrs
das
lahf
ja
pop
jle
addl
xlat
pusha
enter
fiaddl
push
negb
jmp
or
out
xor
xlat
inc
push
jmp
mov
mov
test
push
icebp
pop
movsl
adc
or
pop
push
xchg
sarl
fnstcw
or
push
aaa
mov
push
popa
xlat
or
push
mov
je
add
gs
popf
or
loopne
push
cli
push
cmpsb
inc
rorl
mov
jno
sub
xchg
paddusw
pop
sbbl
fs
popf
xchg
dec
mov
xor
mov
ret
sbb
xchg
fdivrl
inc
sub
popf
sub
ds
or
insb
and
les
cltd
loopne
popa
fnstcw
jl
loopne
sub
leave
ljmp
xchg
cmp
repz
jo
addl
aaa
daa
mov
mov
dec
and
sub
in
dec
mov
add
inc
pop
test
push
mov
mov
mov
add
les
out
loop
sub
mov
pop
lock
mov
sub
adc
nop
pop
dec
shrb
mov
mov
jle
aam
in
insb
mov
stc
test
out
pop
mov
xchg
loop
jle
ds
outsb
xchg
scas
rcrb
mov
das
ljmp
mov
xchg
imul
lahf
clc
test
dec
fcmove
test
outsl
or
xchg
cld
into
cs
js
lock
shr
leave
pop
push
mov
or
xchg
addr16
push
sbb
pop
and
sbb
lea
and
shll
stc
jmp
out
aad
mov
mov
pop
ds
jbe
cmp
leave
sub
loopne
add
fcom
faddp
mov
mov
dec
ja
xor
imul
and
popa
test
adc
mov
outsl
jbe
sub
std
cmpsl
fcmovb
mov
lds
ret
xchg
sub
nop
pop
mov
out
inc
mov
out
inc
test
xchg
insb
adc
fiaddl
pop
icebp
movsl
cltd
mov
dec
test
fld
push
popf
outsb
movsb
aas
push
xchg
fbld
and
push
fstp
movsb
stc
shrl
pop
sbb
out
and
mov
leave
or
mov
loop
jo
adcb
add
nop
xchg
pop
push
and
shlb
push
test
call
sbb
out
mov
push
daa
loop
sbb
push
loop
hlt
bound
out
dec
leave
pop
mov
shl
jno
enter
jle
js
and
aaa
and
adc
xchg
add
iret
cli
mov
lods
loop
aas
cmp
mov
pop
ja
mov
lods
call
jl
lret
pop
daa
inc
jno
bound
fnsave
shll
sub
add
push
mov
jmp
rcpps
sub
loop
pop
in
das
stc
aam
mov
xchg
mov
add
or
ss
mov
imul
cmp
xchg
adc
stos
in
out
stos
lret
jmp
neg
loop
mov
fisubrl
adc
sarl
xchg
sbb
cs
lods
xchg
jle
push
loop
test
shl
test
lock
sbb
cld
lods
lret
in
inc
cmp
test
idivl
and
or
mov
mov
or
inc
dec
outsl
add
bnd
loop
inc
addl
cwtl
cmpsl
mov
into
shl
inc
sbb
shr
insb
sub
mov
aas
loop
movsb
mov
sub
ret
repnz
push
loop
shrl
xor
jl
daa
fimull
sbb
xchg
loop
dec
pop
mov
loop
sbb
repnz
sbb
outsl
out
sub
dec
ds
imul
xchg
ljmp
loop
mov
push
add
dec
loop
jge
jo
adc
clc
aaa
mov
push
sbb
xchg
jmp
push
or
shll
pop
fsubrs
in
fcompl
test
mov
loop
mul
or
mov
cmp
mov
popa
test
adc
mov
clc
negl
stos
fidivs
out
test
xor
in
mov
pop
mul
mov
xchg
cmpsb
jo
ret
mov
sahf
dec
fisttps
mov
popf
cmp
imul
loop
movsb
les
mov
loop
hlt
sub
and
aam
xlat
adc
or
jnp
cmp
xor
sub
dec
dec
movsb
xor
add
mov
push
push
mov
dec
jae
or
sub
cmpsl
xor
in
pop
xchg
sbb
std
mov
lock
out
inc
repz
jp
dec
cwtl
add
add
and
jecxz
pop
sub
out
jno
cmp
aad
adc
push
jecxz
ret
jl
leave
shlb
int
jmp
test
mov
sbb
btc
mov
stos
mov
cmp
in
das
insl
mov
movsl
andl
ret
cmpsb
fs
inc
insl
xchg
add
push
in
push
out
dec
and
mov
jno
dec
add
loop
mov
jns
andb
gs
fsub
rcr
sbb
jns
loop
les
dec
loop
pop
mov
in
fxch
xorb
fnstenv
bound
and
jmp
out
in
xchg
inc
push
sbb
out
loop
xor
and
outsb
inc
jmp
cmp
shl
add
rcll
imul
jae
pop
dec
xor
loop
cmpb
lahf
cs
and
pop
sub
rcll
push
movsl
pop
outsl
lea
jno
and
dec
bound
fbstp
int
out
cltd
cmp
cld
inc
sbb
loop
ja
add
xchg
jnp
jno
mov
fmull
test
clc
test
jnp
loop
fs
jo
movups
loop
xchg
adc
jge
pop
sar
mov
sub
jbe
pop
mov
adcl
movsl
jne
xor
enter
dec
imul
dec
out
inc
adc
fistps
lds
jne
sarb
mov
inc
icebp
incl
adc
xchg
sub
adc
lea
in
aad
pop
or
dec
sarl
sub
icebp
sbb
add
adc
stos
repz
pop
xor
popf
dec
aas
bound
pop
jp
mov
push
xor
shll
mov
loop
mov
pop
popf
loop
xchg
movsl
and
loop
cmp
out
jge
pop
add
je
push
rcll
inc
repnz
loop
xchg
xchg
idiv
in
xor
loop
xor
fisttps
push
mov
jno
xchg
aam
mov
arpl
jp
loop
js
scas
nop
jo
mov
out
dec
hlt
movsb
push
mov
jmp
jns
shll
dec
pop
adc
add
loope
xor
push
add
pushf
loop
mov
scas
inc
pop
std
mov
sub
jne
loop
mov
pop
and
push
jns
int
fiaddl
mov
or
loop
cmp
inc
sti
divl
lcall
push
loop
mov
popa
mov
fs
mov
sub
loop
xchg
repz
clc
push
add
cmp
pop
inc
int
ret
bound
data16
out
mov
loop
push
out
pop
mul
add
mov
mov
loop
hlt
outsb
xor
cld
repnz
dec
scas
dec
insb
ds
arpl
xchg
jnp
js
sub
lahf
loope
cmp
lds
mov
mov
push
imul
fstl
jae
xor
bound
or
fisubrl
or
jb
stos
orl
adc
fcomip
cmp
cmp
mov
dec
je
pop
xor
mov
repnz
pop
ret
cmp
push
stc
jmp
addb
pop
fs
push
sub
lahf
shlb
sarl
aaa
mov
mov
mov
iret
dec
jp
in
vpsrad
icebp
add
push
inc
lea
loop
fcoml
inc
adc
loop
and
aaa
inc
jb
loop
jns
adc
mov
lret
sbb
inc
fs
stc
fsub
lret
call
loop
push
ret
sub
mov
mov
icebp
fsubp
or
decb
jnp
test
in
pop
lods
pop
pop
push
sarb
pusha
out
scas
push
jecxz
icebp
mov
shlb
adc
cmpsb
mov
xor
test
or
push
xchg
or
ret
leave
aaa
adc
arpl
cmp
pop
cmp
lea
into
sbb
cld
cmpl
leave
or
push
jbe
push
test
insl
pushf
jbe
dec
test
out
push
sub
ret
pop
adc
mov
pop
sub
ret
div
lahf
xor
repz
jmp
dec
push
ss
int
outsb
movsl
cmp
lods
inc
push
and
dec
int
xchg
jne
mov
jne
pusha
icebp
xchg
jmp
neg
xchg
loopne
mov
push
ss
out
xchg
mov
and
mov
push
mov
movsb
mov
mov
dec
mov
dec
pop
adc
xchg
push
data16
mov
add
and
rclb
mov
out
mov
mov
mov
xchg
rorb
sarl
popa
mov
mov
mov
cwtl
movsb
subb
jno
cmp
roll
std
cs
fldcw
mov
js
add
cmp
imul
bound
stos
jno
add
jae
sub
jne
shll
mov
in
push
pop
xchg
jp
push
sub
cmp
ret
loop
test
pop
lcall
rorl
popa
mov
loopne
sar
outsl
popa
xchg
lea
leave
outsb
popa
mov
mov
xchg
jmp
pop
repnz
sbbb
leave
jnp
int
aaa
cmp
or
insb
jne
test
cli
xor
mov
gs
xor
mov
inc
in
out
pop
leave
adc
stc
insb
outsb
fdivl
out
movsb
ud2
adc
add
mov
sub
or
fwait
in
shlb
insb
fs
outsb
lret
icebp
shrb
repz
cld
enter
jl
add
dec
jle
cmpsb
adc
loop
xor
add
mov
repz
call
loop
cmpsl
mov
push
mov
les
mov
pop
sbb
insl
loop
es
lcall
jge
mov
xchg
addr16
pop
out
mov
icebp
loop
or
sbb
xchg
mov
pop
js
movsl
pop
inc
loop
pop
dec
pop
leave
enter
addr16
lret
loop
fcmovb
das
jae
sti
and
rcrl
add
jmp
bound
shll
loop
mov
mov
dec
jp
loope
out
sbb
in
xor
int3
mov
or
in
mov
sbb
add
mov
add
scas
mov
scas
jecxz
loop
mov
sbb
push
xchg
loop
inc
push
pop
xchg
test
mov
in
mov
lds
loop
sahf
pop
cli
outsl
in
sbb
xor
loop
mov
lret
push
and
sub
loop
adc
jae
loop
or
xlat
call
loop
js
lea
test
xchg
stos
and
in
jp
inc
fimull
ja
andb
pop
ss
or
loop
sti
push
stos
push
jle
loope
xorl
test
xor
shll
xchg
mov
loop
xor
mov
mov
jne
inc
xchg
cmp
push
mov
xchg
enter
mov
push
fimull
sbb
insl
sahf
push
shlb
outsl
stos
cmc
loope
lea
mov
jbe
lods
adc
jmp
repz
in
sbb
loop
pop
ffreep
lahf
push
outsb
mov
xor
loop
scas
popf
negb
and
clc
mov
clc
jecxz
loop
add
neg
pop
shl
fidivrl
sbb
jno
jl
loopne
or
clc
jecxz
jnp
jno
outsl
sub
xchg
sbb
inc
dec
pop
loop
fcoml
sti
rcrb
xchg
popa
xchg
loop
dec
aam
repz
cltd
ds
imul
jl
jnp
js
ret
cmpsb
cs
jmp
loop
clc
mov
mov
push
jno
xchg
imul
stos
outsb
aas
inc
jns
dec
faddl
out
sub
push
mov
or
stc
add
mov
cmp
xchg
es
data16
and
dec
xchg
sub
stos
insl
lret
subb
jge
mov
push
lock
jno
maxps
jne
ret
pop
aas
hlt
pop
and
inc
mov
xlat
dec
ret
scas
inc
push
xor
sbb
es
enter
nop
ss
jle
cmp
and
sub
ret
fisttpl
push
es
xor
adc
mov
loop
fimuls
add
enter
jge
dec
fcomps
loopne
push
sub
call
pop
adc
jno
loop
mov
iret
pop
loop
int
xchg
stc
fdivrs
icebp
lock
jle
inc
and
cltd
repz
mov
sti
mov
rcrb
mov
push
idivb
insb
mov
stos
test
push
rol
loop
dec
and
jg
xchg
mov
mov
pop
sub
out
mov
out
loop
sahf
rorb
iret
aam
jecxz
mov
mov
loope
lds
stc
inc
int
data16
dec
insb
icebp
cmp
push
fsubl
outsb
pushf
jecxz,pn
push
loop
std
pop
xchg
popa
mov
or
push
iret
inc
xchg
adc
mov
loope
inc
mov
scas
in
andb
cmp
loope
mov
inc
or
mov
push
mov
mov
and
out
jne
sub
jg
push
xchg
imul
mov
sbb
jno
xlat
pop
mov
int3
xor
flds
adc
lods
movsb
arpl
jge
adc
jb
ret
mov
ja
mov
js
jl
push
out
xchg
jge
loop
or
dec
mov
enter
mov
adc
pop
into
fisubrl
lret
cmp
loop
and
or
inc
loop
fs
in
loop
push
and
inc
out
cmp
push
xor
lret
mov
jecxz
lods
mov
rcr
stos
rclb
pop
adcl
in
jb
loop
adc
scas
mov
xchg
xchg
ljmp
pop
jns
cmp
adc
cwtl
push
gs
insb
cli
loop
cmp
and
fisubl
adc
loop
outsl
add
or
or
repnz
lods
sub
shl
mov
add
and
sub
push
or
insl
aam
stos
repnz
testb
test
out
shl
aaa
pop
mov
cli
shll
mov
aas
rcrl
xor
sub
mov
fisubrl
pop
int3
in
movsb
xor
dec
pop
arpl
pushf
or
jo
scas
lret
xchg
imul
jl
mov
push
rol
in
jns
cmp
iret
in
sarb
mov
loope
add
push
dec
dec
imul
fs
mov
aam
xlat
ret
decb
jmp
rcrl
sub
dec
pusha
js
ret
and
and
jae
xchg
sub
push
mov
test
push
in
jae
dec
fbld
subl
jbe
mov
and
sbb
or
mov
loope
loope
xor
and
jmp
repz
andl
inc
push
cmp
pop
push
xchg
mov
test
pop
call
push
test
loop
js
and
fisubrl
mov
adc
add
mov
out
sbb
shrl
adc
xchg
xchg
jnp
add
sub
rorl
aam
adc
hlt
in
bound
faddl
stos
fs
xchg
enter
mov
sub
mov
mov
mov
popa
push
xor
scas
daa
rolw
sarb
cmp
push
enter
outsb
out
cld
sub
xor
dec
mov
lea
dec
rcr
xchg
push
sbb
push
iret
fldt
jle
push
jbe
ds
in
leave
xlat
ret
sub
test
add
push
adc
xor
call
or
jmp
or
push
or
jno
popa
jo
xor
daa
int3
cltd
out
dec
add
mov
push
cmp
repnz
out
xchg
dec
fsubp
push
xchg
add
or
pop
jno
gs
cmp
iret
int3
cmpb
insb
gs
jo
add
out
in
shrb
popf
scas
loop
cs
add
push
lock
cmp
pusha
fstpl
imul
mov
cwtl
fwait
loop
scas
aaa
cmpsl
loop
outsl
mov
mov
push
jecxz
test
fisubs
loop
out
sub
pop
fwait
loope
fsubs
hlt
insl
cwtl
adcb
stos
daa
lds
xchg
sbb
mov
out
jne
das
xchg
loop
in
int
cmp
jno
xor
pop
lcall
rorb
and
pop
lods
addr16
in
jge
sbb
dec
pushf
and
test
mov
mov
icebp
mov
mov
fs
sbb
cmp
dec
mov
std
sarb
loopne
decl
bound
and
loop
dec
pop
push
or
es
shr
mov
mov
stc
adc
loop
jecxz
das
adc
pop
je
mov
out
cmp
loop
xchg
xor
fisubrs
or
push
loopne
out
hlt
inc
push
pop
lret
or
add
mov
lods
xchg
into
test
jg
push
movsb
pop
sar
outsb
loop
xchg
push
in
sub
dec
fmul
mov
add
lret
mov
add
jge
out
shrl
lcall
push
add
jecxz
cld
xchg
mov
popa
sbb
add
scas
jbe
fsub
test
test
push
repz
cmp
cmp
outsl
lods
notl
or
mov
push
lret
or
cmp
repz
stos
mov
cmp
pop
in
jo
mov
pop
mov
add
movsl
push
nop
or
outsb
xor
mov
test
push
cs
test
test
jo
inc
jno
fnstsw
pop
or
mov
add
push
add
lds
jle
dec
inc
lcall
shlb
outsb
arpl
jno
int
cmpl
insl
xchg
test
test
movsb
sub
cmp
shrb
mov
mov
notl
push
sub
mov
pushf
in
loope
mov
mov
adc
xlat
out
popf
es
cli
popa
cmpsl
sub
loope
cltd
xchg
jns
xlat
ja
cs
icebp
movb
sbb
popa
sbb
das
bnd
xor
in
in
jno
cmp
and
aas
sub
insl
lock
iret
cltd
jmp
mov
rorb
inc
xchg
out
jecxz
loop
and
in
jns
and
jno
or
mov
lods
hlt
sub
loop
ds
les
xchg
mov
ret
cmp
pop
and
push
fs
shll
push
arpl
or
ss
dec
xchg
js
inc
loop
jge
and
mov
xor
inc
subps
pop
fadd
add
or
cmp
inc
imul
cmc
dec
jno
outsl
xchg
pop
call
inc
mov
xor
xchg
pop
out
testl
xor
faddl
push
loop
mov
dec
mov
mov
xor
jno
pop
add
movsb
in
sub
and
lret
pop
pop
inc
loope
or
mov
repnz
ss
clc
loop
mov
mov
lods
repnz
xchg
add
xchg
or
fnstcw
ret
jg
pminub
dec
data16
idivl
in
insb
in
jl
push
jp
sbb
scas
jbe
popf
rcrl
mov
cmp
bound
outsl
in
movsl
dec
add
xchg
sub
jae
loop
inc
inc
imul
push
rcrl
jmp
sbb
cmc
mov
scas
dec
push
add
mov
std
imul
xchg
sbb
popf
fsubl
loop
dec
sbb
cld
mov
loop
jp
cli
in
mov
push
mov
loop
and
inc
jns
sub
pusha
out
pop
or
stos
scas
sub
jnp
loop
shlb
in
mov
jbe
enter
js
in
test
loop
in
pop
aad
xchg
sbbb
pop
xlat
adc
mov
dec
add
xchg
loop
pushf
push
inc
in
imul
insl
insb
movsb
adc
xchg
and
pop
in
fisubrl
xor
xchg
jp
xorb
imul
pop
xor
jecxz
push
rcr
xor
fistps
popa
test
ror
lock
test
adc
andl
popa
jl
sub
loope
aam
ror
adc
push
adc
mov
pop
adc
add
jae
xor
movsb
es
and
mov
xor
in
fstps
sarl
push
ficoms
mov
jle
inc
hlt
mov
add
or
push
adc
test
leave
leave
xorb
ret
push
movsb
jecxz
movsl
jns
sub
cmp
loope
adcl
sub
inc
xor
and
stos
subl
push
jo
sub
rcr
push
lods
loopne
xchg
cli
mov
aad
sub
stc
jecxz
loopne
inc
sarl
mov
cmp
adc
and
shrl
mov
xchg
adcb
jo
out
leave
sar
dec
push
mov
pop
dec
cwtl
jb
orl
in
imul
jo
add
movsl
lcall
shll
push
cltd
imul
cli
lret
jns
fs
jmp
jmp
xor
mov
movsl
lock
pop
adc
rol
test
mov
push
add
adc
dec
dec
mov
xchg
mov
rorb
scas
in
mov
mov
movsl
adcb
ret
cmpsl
rcrl
icebp
gs
stos
jbe
aad
lret
mov
fs
push
rcrl
test
adc
cmp
xlat
out
jno
xchg
pop
test
xchg
push
sub
insb
shll
popa
sbb
repz
outsb
arpl
cmp
repz
sahf
mov
fldcw
mov
cmp
stos
in
xlat
shr
sti
cmpsl
sarb
cli
push
movsb
dec
pop
pop
dec
or
adc
and
outsl
bnd
scas
repz
sbb
imul
stc
pop
mov
insb
mov
andb
and
mov
mov
rorl
outsb
adc
jae
add
insb
imul
loopne
xchg
es
pop
xor
in
mulb
sbb
or
notw
lahf
subb
jmp
or
xchg
xorb
cmp
in
fstl
enter
jno
mov
xchg
jecxz
xlat
ficoml
shr
or
scas
cltd
cmpsl
lds
cmpsl
enter
mov
rcrl
mov
out
and
mov
ret
movsb
es
popa
push
add
std
fsubrp
les
mov
or
dec
jo
pop
in
shl
push
fcoms
imulb
mov
jns
imul
lea
jg
in
insl
enter
sarb
dec
in
push
fwait
push
repz
push
ds
pop
add
dec
push
leave
bound
sub
push
dec
cmp
iret
rolb
cmc
loope
cmpb
dec
test
movsl
imul
ja
into
push
pop
pop
ja
xchg
pop
bound
js
mov
insb
pop
adc
leave
add
insb
test
pop
xchg
cltd
leave
pop
push
rorl
cmpl
xchg
xchg
fildl
mov
jp
mov
das
ror
mov
xchg
mov
jae
cli
dec
sbb
repnz
ljmp
lods
shrl
inc
into
sbb
fbld
xchg
into
mov
mov
stos
ret
inc
dec
fwait
push
mov
es
and
hlt
mov
xlat
push
test
mov
ljmp
mov
sub
cmp
not
je
movsb
mov
pop
ljmp
addl
imul
imul
arpl
cmp
sbb
xchg
and
sbb
jne
mov
jno
mov
aaa
sub
mov
stos
imul
bound
imul
jo
jno
in
xor
xor
sub
xlat
repz
popa
rorl
fdivl
or
in
sub
inc
dec
or
xor
xor
xchg
lret
in
jmp
fistpl
mov
sub
adc
mov
loopne
loope
imul
push
pushf
pop
push
mov
lds
mov
fwait
mov
and
lea
xor
cli
loop
xchg
into
or
outsl
bound
rorb
outsb
arpl
jp
add
faddl
out
ret
sbb
call
rorb
movsl
push
sub
pop
push
ret
fadd
jno
mov
in
insb
mov
daa
mov
lock
mov
test
arpl
gs
mov
pop
scas
jge
rcll
push
mov
ds
push
pop
out
icebp
fidivrs
jne
je
inc
jmp
sub
test
mov
leave
movb
gs
mov
push
xchg
mov
popa
pop
sbb
pop
mov
pop
inc
add
test
test
mov
lea
ret
dec
mov
pop
mov
fs
cli
fucomi
in
inc
out
cltd
mov
cwtl
cmp
and
cwtl
xor
mov
xchg
mov
sub
sub
xor
push
and
and
dec
cltd
mov
mov
addb
dec
jmp
test
add
test
fdivp
in
cmp
int
fst
xchg
outsb
arpl
test
push
out
arpl
enter
cmp
outsl
shl
vpcmpeqb
lahf
insb
push
ror
cmp
cmp
inc
mov
adc
sub
push
add
or
or
test
jmp
or
stc
jle
loope
mov
sar
out
adc
pop
jno
iret
jmp
test
mov
aaa
sbb
rcl
outsb
arpl
inc
mov
fucomip
fsubr
movsb
popf
shrb
cwtl
adc
mov
test
push
leave
push
xchg
stos
or
cli
scas
push
cmp
adc
fbld
and
and
mov
jne
sub
movsl
xchg
sbb
add
cmp
jbe
gs
rolb
pop
jnp
push
or
or
loope
cld
call
test
dec
imul
push
test
jecxz
fwait
jb
pop
in
sbb
in
inc
loope
test
pop
adc
popa
cmp
sub
stc
push
inc
cmpsl
inc
mov
sub
out
cmp
inc
cli
or
ss
adc
fadd
mov
insl
jmp
pop
mov
xor
mov
add
mov
sti
and
xor
fsubrs
xchg
or
loop
cld
jae
mov
cmp
cmc
mov
loope
js
in
xor
loop
fs
and
jnp
lret
call
mov
pop
rorl
in
dec
inc
adc
in
cmp
push
pushf
gs
or
sub
jmp
mov
fidivl
test
mov
fs
jae
mov
mov
or
mov
jne
cltd
shlb
shll
in
jmp
mov
in
popa
lods
cli
rcrl
ja
inc
jle
adc
jo
xchg
out
test
xor
or
ret
sub
fwait
mov
clc
or
mov
adc
pushf
dec
pop
mov
pop
rcrb
pop
shrb
popa
jno
mov
jmp
dec
cs
pop
testl
mov
sub
cwtl
mov
fildl
out
gs
mov
cld
bound
add
pop
cmp
daa
cmp
adc
and
aam
or
mov
xor
push
test
jne
pop
dec
mov
adc
jecxz
popa
jle
fldenv
or
mov
pop
insl
lock
and
mov
cltd
hlt
sbb
insb
xchg
call
call
lcall
shlb
cmpsl
js
jns
jg
lock
add
lods
add
scas
icebp
in
jecxz
mov
jnp
xchg
push
mov
jmp
jmp
lods
stos
mov
das
xor
inc
fnstenv
das
jg
rol
mov
pop
arpl
lock
dec
orps
js
xor
not
fildl
rorb
xlat
pop
ja
outsl
ja
xchg
xor
movsl
sbb
rclb
outsb
arpl
ret
jns
nop
pop
rorb
adc
xchg
pop
cwtl
fdivs
jns
in
cmpsb
fldcw
add
mov
das
xor
es
dec
test
inc
movsl
jns
add
call
pushf
inc
mov
fsubrs
icebp
cli
shll
test
cmp
popa
imul
roll
je
dec
aas
adc
adc
pop
push
pusha
aam
inc
cmc
push
nop
scas
scas
rorl
mov
test
mov
loope
ljmp
test
movsl
cmc
push
pushf
scas
sub
mov
lahf
pop
jo
cmp
pop
mov
adcl
mov
inc
mov
imul
shrb
gs
inc
mov
faddl
xchg
and
xchg
mov
add
test
mov
aas
rol
ret
lods
enter
int3
in
outsl
lods
adcb
ror
adc
pop
lcall
sahf
pop
orb
enter
arpl
push
cs
jge
jo
adc
jns
gs
pop
xchg
aaa
push
pop
imul
mov
fidivl
lahf
mov
jmp
jg
in
mov
outsb
inc
shrb
fwait
popl
ret
repnz
mov
cmpsl
xchg
movsl
sarb
nop
pop
xor
xor
leave
mov
lcall
mov
inc
jle
or
push
int
sarb
jle
ss
fmull
xchg
sahf
outsl
js
and
mov
sbb
sub
push
dec
jb
mov
call
ja
fmuls
loope
mov
jmp
mov
mov
bnd
popa
jmp
mov
js
gs
loope
mov
and
lcall
fmuls
pusha
stos
lock
or
or
add
idivb
repnz
dec
lds
xchg
test
out
pop
gs
xor
pop
add
jo
or
xor
imul
inc
sarb
sbb
sbb
or
pop
mov
mov
stos
test
jge
pop
xor
xlat
pop
movsl
mov
inc
loope
mov
xchg
mov
popa
xchg
sub
shrb
pop
popf
jno
dec
es
mov
popa
fisubl
addr16
incl
lds
fcmovu
and
inc
jo
imul
mov
insl
cmp
aam
movsl
jmp
daa
mov
mov
pop
shrl
aas
pop
js
or
mov
sub
dec
add
jno
sub
dec
jo
daa
das
cmp
movsl
mov
add
leave
pop
push
mov
imull
sti
popa
nop
xor
lcall
fldenv
jmp
mov
rol
mov
xlat
jbe
and
sarl
inc
cmpsl
mov
lea
add
xchg
and
xchg
mov
ret
mov
sti
add
movsl
loopne
imul
fstpl
rorl
xchg
imul
sbb
cmpsb
stc
mov
daa
jo
sub
push
cmp
adc
sub
ss
daa
iret
mov
mov
mov
cmp
mov
jns
mov
lgdtl
outsb
dec
pop
ret
adc
xchg
xchg
mov
js
clc
cmp
imul
mov
movsb
mov
gs
aam
clc
mov
mov
mov
adc
aaa
rclb
std
mov
test
cmpsl
rcll
vshufps
ret
or
pop
and
icebp
dec
data16
shrb
popf
mov
daa
ror
gs
adc
cltd
shlb
pop
xchg
out
inc
pop
scas
mov
mov
loopne
cmp
sbb
test
push
add
ja
dec
jmp
arpl
pop
fdivl
and
rorb
iret
inc
ret
fstpl
jns
stc
out
cmp
gs
mov
or
ret
ret
add
fld
shrl
loope
outsl
pop
jecxz
mov
call
xchg
mov
mov
push
cmpsl
pop
shl
or
imul
dec
ror
inc
and
adc
fisttpl
test
mov
lret
fucomi
je
push
jmp
push
lock
insl
popa
xchg
jmp
addr16
mov
stc
ja
test
cmp
hlt
mov
mov
popf
outsb
fadd
movsl
bound
xlat
ss
inc
pop
jbe
xchg
sarb
jg
ret
lods
cmpsl
test
fst
repnz
enter
dec
cmp
mov
loope
stos
lods
or
sub
cmc
in
push
ret
fldt
es
in
insl
movb
test
mov
aam
xchg
data16
dec
jbe
mov
je
or
outsb
shrb
mov
lds
cli
pusha
arpl
xor
push
and
push
inc
enter
mov
xchg
fstp
xchg
test
cltd
jge
call
test
mov
mov
sarb
xor
jge
xlat
sahf
add
test
ror
stc
sbb
fimull
mov
fstpt
inc
xor
sbb
pop
sbb
and
push
inc
or
rcr
inc
mov
test
push
scas
cltd
test
mov
loopne
push
leave
mov
imul
test
mov
add
dec
loop
jbe
inc
jae
mov
jge
iret
push
mov
mov
jmp
mov
and
jmp
outsl
mov
in
jne
jno
or
shl
mov
or
rol
cld
test
jge
addr16
ror
loope
add
nop
jle
pop
and
or
rcrb
shl
adc
mov
leave
ljmp
adc
cmp
test
filds
loop
cltd
in
out
popa
cmpsl
mov
push
imul
je
push
mov
or
ret
pop
leave
or
mov
pop
cmpsl
gs
loope
lret
mov
leave
cmp
in
sbb
daa
cmpsl
push
insl
mov
xor
sbb
das
gs
mov
pop
sahf
fldcw
push
call
inc
arpl
sbb
cmp
imul
sbb
pop
in
in
rorb
outsb
push
add
sarb
jns
fadd
push
sub
pop
pop
je
flds
push
out
add
and
push
push
cmp
pop
test
lcall
jns
or
jo
adc
popa
fldcw
xchg
pushf
adc
ljmp
dec
movsb
inc
call
sub
pop
inc
jmp
adc
jo
jns
mov
inc
ss
scas
leave
aaa
outsb
pop
cmp
xchg
fadd
pop
aas
dec
xchg
das
pop
inc
push
std
movsl
jns
inc
jns
jne
aad
jno
fcmovu
lods
js
cwtl
insl
lock
xchg
ds
es
popa
jg
cwtl
aas
sub
insl
lock
jae
daa
rolb
xchg
add
and
mov
cmp
sub
scas
jb
ljmp
in
cmpsb
es
nop
movsl
cmpsl
sbb
test
ljmp
dec
outsb
arpl
dec
fwait
mov
push
call
sarb
jo
mul
mov
cmp
inc
or
adc
frstor
or
cmp
das
shlb
and
push
pushf
xchg
and
cli
mov
andl
ffreep
mov
int3
xchg
pop
and
cmp
or
decl
loop
sub
adc
imul
int
jnp
xchg
sub
int
jo
test
call
out
pop
rclb
negl
sub
imul
jg
mov
repz
jmp
sbb
mov
fld
jecxz
mulb
jg
fimuls
mov
dec
xchg
fadd
cmpsl
outsb
popf
or
pop
sbb
xlat
fmulp
jae
pop
sbbl
sbb
rclb
mov
cmp
popa
jp
ret
cmp
mov
mov
outsl
arpl
cltd
xchg
xchg
fstl
not
ja
cmp
xchg
and
int3
mov
cltd
xor
cmp
rcll
jge
fisttps
mov
inc
add
arpl
add
roll
cli
adc
fwait
jno
dec
js
mov
mov
mov
mov
rcrb
xchg
push
xchg
rol
loopne
adc
mov
xlat
cltd
std
into
outsb
arpl
dec
cltd
pop
mov
fcoml
loopne
gs
loope
mov
shrb
sub
jno
mov
mov
mov
jmp
mov
or
leave
mov
loop
rcll
mov
mov
sub
hlt
cs
jmp
push
imul
jge
scas
mov
out
jns
ljmp
gs
cwtl
xor
sti
clc
cwtl
gs
push
loope
jle
push
cli
mov
not
mov
cli
scas
nop
in
imul
lcall
rclb
lds
mov
xchg
pop
or
rclb
arpl
pop
fwait
adc
fs
jns
lods
pop
in
cmpsl
jns
insb
addr16
inc
jecxz
sbb
xor
mov
arpl
popa
fwait
and
insl
xchg
adc
or
mov
loopne
cwtl
fmuls
cmp
test
xor
push
adc
movnti
xlat
roll
mov
iret
mov
push
pop
mov
pop
mov
lcall
push
jae
mov
push
sbb
ret
jae
add
mov
pop
push
leave
cmp
out
xchg
sar
ret
or
shll
jo
adc
jno
pop
dec
outsl
imull
andl
gs
and
movsl
jg
popf
daa
pop
jo
jae
inc
rolb
in
ja
xchg
gs
test
mov
mov
icebp
call
xlat
inc
enter
mov
sub
and
rorl
adc
jle
test
mov
fbstp
leave
xchg
dec
std
in
cli
hlt
mov
or
xchg
adc
xchg
push
adc
cs
inc
std
pop
test
push
loop
jo
mov
sub
adc
adc
dec
push
xor
jl
dec
daa
xor
imul
cmpsl
fsub
pusha
mov
push
pop
push
push
push
outsl
adc
in
lods
xchg
pop
orl
or
in
mov
xchg
or
mov
push
leave
pushl
rcll
aam
popa
jb
and
and
mov
jno
stos
ret
mov
cmp
mov
fistpll
and
or
test
mov
divb
xlat
mov
jbe
mov
jmp
shl
inc
addl
xchg
and
arpl
mulb
adc
fsubrl
xchg
sub
sbb
rorb
aad
sub
jno
shrb
xlat
mov
and
push
adc
dec
xor
ret
cltd
jecxz
sarl
dec
push
andl
imul
gs
dec
fstps
shll
shl
mov
mov
enter
adc
ffreep
enter
mov
xlat
push
ds
roll
or
iret
or
imul
js
pop
stc
pop
jl
xlat
js
movl
aam
cmp
or
leave
mov
in
imul
add
scas
push
lahf
dec
inc
repz
testl
mov
mov
cmpsl
bound
cmpb
add
cmpsl
fistps
adc
mov
sarb
gs
mov
cs
fnstenv
push
mov
mov
in
mov
jne
mov
movsl
cmpsl
cmp
jge
popa
imul
xchg
jp
push
lea
mov
xor
push
push
int
pop
cmp
adc
pop
push
lds
pop
loop
sbb
je
arpl
xchg
cmpsb
in
push
shufps
test
add
mov
inc
gs
lds
sub
sbb
repz
sub
jns
shr
push
xlat
jno
xchg
dec
fwait
add
andl
add
fcmovu
sub
cld
push
dec
lock
loope
mov
adc
push
scas
in
int3
outsb
arpl
pop
outsb
out
mov
test
test
jge
xlat
imul
adc
leave
cmp
or
arpl
fisttpll
push
jmp
or
add
clc
sbb
clc
aad
sbb
xchg
cltd
shr
inc
xlat
call
popf
pop
push
ljmp
stos
fwait
inc
xchg
xor
or
aam
push
mov
xchg
dec
flds
orb
pop
lods
or
cld
jecxz
sub
jnp
imul
or
sub
sbb
add
cli
cmc
loopne
add
andb
xor
push
cmpsl
cmp
and
cmp
dec
int3
sub
jae
mov
sahf
int
bound
mov
adc
cmc
pop
cmp
dec
fldcw
dec
mov
ret
mov
dec
xor
shl
push
jno
mov
add
ret
adc
gs
aam
cmp
out
dec
mov
bswap
fnstsw
loopne
push
adc
adc
test
out
mov
inc
in
jle
imul
shll
jne
pop
outsb
arpl
cwtl
pop
bound
dec
ret
mov
mov
add
fs
mov
xor
addb
sub
outsb
adc
add
dec
xor
stc
xchg
or
mov
sti
xchg
inc
sti
xchg
mov
data16
cs
ret
push
and
test
jns
lods
pop
test
mov
test
mov
adc
rorl
pop
push
xorb
dec
lods
sub
lahf
shrb
cmpsb
mov
push
mulb
cli
leave
cld
fimull
push
incb
pop
sub
cltd
aam
sarb
das
fs
sub
mov
cmp
test
cwtl
scas
adc
mov
adc
adc
into
sbb
or
pop
xchg
inc
bndldx
pop
xchg
lcall
mov
pop
aam
jno
sbb
push
lea
xor
loope
loopne
add
sub
push
inc
stos
or
push
inc
stos
cmp
and
mov
in
fwait
mov
and
and
repz
pop
mov
pop
enter
or
es
mov
leave
out
sbb
movsl
xor
cmp
jae
fldenv
fisubl
hlt
sub
cli
mov
jmp
mov
cld
jo
jns
sbb
lods
mov
ljmp
push
stc
imul
pop
inc
jo
ja
adc
sub
pop
inc
push
repnz
xor
mov
ret
sub
xor
sub
jmp
pop
xor
adc
adc
jmp
mov
jmp
lds
in
cmp
push
mov
movsl
add
repnz
fmuls
adc
stos
ret
stc
jle
popa
xor
push
add
cmpsb
mov
push
pop
dec
ret
adc
xchg
lea
aas
sbb
xchg
stc
cmpsl
arpl
cmpsl
cld
inc
sub
xlat
dec
movsl
es
mov
cmpsb
out
inc
scas
mov
stos
rorb
inc
fstps
add
xchg
sub
movsl
sub
or
inc
jae
mov
aaa
and
mov
dec
test
ret
adc
cwtl
adc
test
sarb
jno
loop
subl
shlb
or
shrl
mov
cmp
mov
jmp
stc
and
movl
jge
xlat
outsl
and
or
jge
call
iret
shr
sub
sub
or
movsl
lret
sbb
mov
scas
jno
mov
xor
or
xlat
mov
pop
xor
jno
xchg
pop
jae
rol
sbb
add
cmpsb
mov
test
sar
mov
xor
or
xchg
std
ljmp
push
rcl
iret
mov
add
test
test
mov
es
std
push
sbb
pop
rol
ret
in
pop
sub
call
cs
loope,pn
xchg
daa
push
pop
aas
lock
shlb
imul
pop
aam
cld
test
xchg
mov
and
sub
imul
add
std
mov
fcoms
mov
cmp
in
lahf
addr16
pop
cltd
mov
lret
mul
je
scas
and
lret
mov
imul
inc
push
int3
sbb
mov
out
sbb
popa
nop
fidivl
insb
out
pop
andb
jle
mov
pop
mov
nop
push
mov
jns
push
fildll
in
or
jo
mov
mov
cmp
sbb
shll
add
push
js
xchg
jbe
lret
js
cmp
fs
mov
fwait
pop
adc
fs
mov
mov
pop
testl
ja
xchg
xchg
mov
mov
push
fwait
jp
jmp
out
push
cmpsl
push
xor
test
or
aas
or
push
jmp
push
sbb
imul
mov
xchg
fcoms
push
jns
cltd
xchg
push
sbb
in
and
into
pop
mov
inc
leave
out
es
lods
popa
cltd
sub
mov
pusha
mov
scas
sub
loope
test
adc
das
fstps
shll
add
inc
scas
fbstp
adc
loop
jno
mov
push
fisttps
sbb
aaa
sub
xor
stc
fisubl
sahf
xor
ss
mov
xchg
les
loop
push
fstpl
shl
jns
in
and
add
insb
nop
scas
out
add
adcl
out
xchg
test
loop
cmpsl
sub
pop
hlt
loop
jb
aas
fisttpl
push
movsb
mov
out
xlat
mov
mov
xor
clc
jp
out
stos
sbb
cmp
or
adc
xchg
dec
loop
cwtl
clc
arpl
push
or
cli
test
cmpsb
call
xlat
aad
pop
fsubl
jl
loop
imul
inc
loop
and
enter
loop
mov
lods
stos
roll
stos
dec
pop
movsl
lret
adc
xor
jmp
daa
loop
xlat
out
jns
outsl
add
iret
mov
int
cwtl
sub
in
adc
jno
sub
xor
mov
or
aad
xchg
adc
jp
and
dec
arpl
fcoml
mov
mov
adc
scas
enter
out
mov
mov
jecxz
imul
rcrl
jnp
pop
loop
in
add
scas
xor
pop
mov
sahf
loop
push
sub
mov
cmp
call
push
add
ds
sahf
stc
jns
adc
les
lds
loop
adc
icebp
jl
jnp
sub
and
in
loope
imul
aaa
ss
adc
loop
or
push
adc
and
rcll
xor
pop
xchg
sub
cld
adc
and
es
cmpsl
xor
loop
add
pusha
loop
cltd
lea
pop
push
push
xor
xchg
call
mov
notb
jno
out
lods
ret
jl
icebp
outsl
sub
sti
mov
loop
dec
jecxz
bswap
adc
loop
dec
je
jle
jl
loop
sbb
andl
xor
push
inc
and
sub
loop
lret
repz
mov
loop
mov
mov
aad
aam
pusha
outsl
dec
ds
fsub
push
scas
add
mov
jmp
inc
loop
popa
mov
cmp
enter
in
sub
adc
andb
jp
aaa
loop
mov
mov
fs
mov
jne
push
jno
sub
nop
fisttpl
hlt
jne
out
and
jb
lock
cmp
imul
rorl
xchg
mov
push
test
jns
mov
in
in
xor
fisubl
aaa
test
xlat
mov
jge
pop
leave
sbb
test
cmp
mov
sub
call
fisubs
fstl
inc
add
push
cwtl
out
enter
daa
frstor
sub
or
add
incb
pop
jl
leave
xor
divl
ja
nop
or
sub
pop
xchg
cltd
cmp
dec
ds
jo
pop
push
pop
xor
sub
sub
push
shlb
outsb
dec
dec
and
jno
into
inc
pop
cmp
icebp
ret
bound
jns
js
cld
mov
jo
push
in
mov
mov
or
fwait
repz
das
push
jmp
pop
in
pop
mov
cwtl
pop
mov
sub
arpl
mov
stc
out
lds
std
pop
mov
out
xor
shrl
shll
out
rol
addl
insl
lock
outsb
lret
loopne
cmp
repnz
daa
repz
in
add
mov
cltd
push
repnz
xlat
xor
mov
and
bound
mov
mov
mov
cmp
lods
pop
repz
pop
ret
int3
lea
lcall
mov
push
sti
pop
xlat
add
les
scas
jge
mov
rol
inc
push
stos
jnp
dec
shlb
imul
push
insl
lock
push
iret
fmuls
sarb
imul
pusha
mov
dec
pop
inc
enter
xor
mov
dec
jmp
int
pusha
and
popa
ds
cmp
sbb
icebp
lock
lret
mov
mov
insl
lock
jae
mov
push
repnz
or
and
shlb
iret
pop
mov
out
shll
aam
or
test
test
test
shrl
or
test
xchg
pop
pop
mov
fs
pop
pushf
shlb
lcall
pop
imul
clc
mov
aam
iret
leave
jmp
xor
xor
loop
movsb
xchg
pop
fs
add
imul
bound
mov
mov
pop
rcll
mov
xor
jne
bound
outsb
loopne
test
mov
data16
ja
sbb
sub
idiv
add
rorb
movhps
in
add
outsb
jns
inc
mov
jle
pop
shrb
add
int
push
insl
jns
push
jg
in
ja
adc
test
mov
jmp
add
loopne
rcr
cmp
mov
xchg
push
xchg
ja
sub
test
mov
jmp
test
push
xchg
cmp
mov
or
imul
pop
sub
scas
and
pop
fnstcw
aad
gs
loope
arpl
jbe
sub
or
in
mov
movsl
loope
inc
enter
mov
rcll
daa
push
dec
inc
jle
imul
iret
shlb
sub
xlat
je
and
cltd
shl
outsb
xor
data16
xlat
call
call
jbe
xor
lock
imul
lds
cmc
dec
insl
mov
repz
popf
push
xor
pop
imul
scas
cmpsl
mov
icebp
imul
test
mov
sbbb
iret
imul
push
daa
aas
movsl
test
imul
iret
mov
mov
test
jge
loopne
mov
loopne
test
popf
mov
insb
movsl
mov
jl
shrl
xlat
rcll
test
aam
mov
popa
lods
mov
cld
repz
xchg
repnz
bound
jo
sub
push
test
movsb
outsb
mov
lods
adc
sub
or
mov
in
add
mov
mov
stos
sub
fdivr
rorl
lds
pop
js
enter
mov
leave
dec
cli
imul
fiaddl
sub
leave
or
push
and
and
js
pop
stos
and
mov
test
mov
fcmovb
jg
inc
test
sub
dec
add
sub
mov
sbb
aam
or
mov
sarb
stos
sbb
mov
enter
or
push
rclb
out
shl
fwait
mov
out
rorl
ficoml
movsb
je
loopne
out
lds
dec
jbe
jmp
shll
icebp
mov
mov
mov
subb
lods
ret
imul
inc
jno
imul
jg
pop
aas
sbb
xchg
mov
and
adc
mov
pop
jno
cmp
pop
popa
jno
popa
jg
pop
aas
cmp
mov
pop
jae
aaa
inc
aas
loopne
pop
xchg
test
rorb
aas
adcl
push
lods
ret
push
int3
jb
pop
ja
scas
dec
push
pushf
dec
pop
xchg
mov
idivb
call
leave
lods
adcl
arpl
bound
popa
mov
add
mov
xor
out
shr
mov
rorl
ror
cmp
cwtl
jne
nop
inc
push
popa
leave
sub
scas
push
test
jge
xlat
cmpsb
inc
push
pop
push
scas
cmpsl
fwait
sub
in
sub
bound
push
inc
dec
test
inc
mov
adc
and
adc
inc
adc
movsl
fdiv
xlat
fcomp
fs
negb
dec
xlat
enter
and
rorl
mov
bound
xchg
sbb
frstor
sar
push
cmc
mov
out
cmc
cmpsl
cltd
ds
cmp
loop
cltd
bound
mov
cli
mov
test
leave
cmpsl
roll
pop
imul
dec
fwait
adc
pop
popa
xchg
es
push
xor
sbb
cmc
pop
adc
or
mov
sub
test
aaa
orl
add
div
mov
jmp
test
stc
fwait
out
out
pop
dec
cmp
int
push
enter
pop
icebp
and
test
out
mov
inc
mov
mov
loope
rolb
ret
out
test
lea
inc
lahf
iret
and
jns
sbb
loope
leave
leave
xor
jge
push
ret
xchg
xchg
pusha
das
mov
sub
jle
fstps
pop
ret
push
adc
icebp
xor
inc
add
cs
push
icebp
cmp
dec
test
testl
shll
add
ljmp
std
pusha
jecxz
cmp
pop
out
inc
pusha
dec
insl
adc
push
and
imul
mov
shll
mov
add
cltd
mov
sarl
or
call
out
mov
sarb
call
in
arpl
lods
imul
movsl
das
pop
cltd
jno
mov
jmp
jmp
faddl
dec
add
imul
mov
pop
int3
inc
mov
adc
addb
ret
add
dec
arpl
adc
or
leave
addr16
xchg
cmpsl
mov
push
push
loop
cwtl
cmp
loop
push
cltd
xor
shr
loop
mov
cli
popf
fs
mov
mov
fisubrs
lds
movsl
add
sbb
fwait
push
mov
mov
pop
dec
dec
imul
loopne
cmpsb
or
inc
sahf
jle
push
pusha
mulb
jo
and
xor
out
fcomps
sbb
mov
sub
inc
cmpl
pop
sub
stos
cmpsb
rcrb
sbb
imul
out
and
es
sahf
mov
jg
rcrl
inc
xchg
sar
sbb
rcl
or
cmp
mov
xchg
test
add
scas
adc
mov
jge
sahf
ror
push
dec
out
test
mov
inc
fimull
cltd
insw
iret
dec
int3
das
sahf
jbe
cwtl
or
pusha
lcall
pusha
mov
jmp
pop
xor
loope
push
cmp
pop
fstps
out
negl
pop
xchg
aas
rol
repz
adc
addr16
and
sub
mov
dec
cmpsl
out
test
sub
jp
iret
inc
sub
jb
jns
jns
xchg
out
add
leave
fldenv
aaa
popa
movsb
and
inc
jno
stos
inc
sub
stos
ss
cli
lret
cmpl
ja
dec
test
mov
cmp
fisttps
test
mov
pop
sti
dec
mov
cmp
inc
sar
outsl
stos
aaa
push
insb
add
repnz
repz
and
iret
sub
popa
or
pop
pusha
adc
loop
ficoms
pop
fstpl
outsl
dec
bound
inc
push
fcmovnbe
push
dec
loop
aad
iret
mov
push
dec
loop
ficompl
dec
inc
cmp
loop
int
dec
inc
mov
cmp
push
aas
shl
mov
dec
ds
mov
inc
in
cmp
inc
mov
cmp
aaa
mov
mov
mov
mov
xor
scas
loop,pn
sub
stos
sub
mov
inc
mov
cltd
loopne
pop
leave
aad
pop
fcoms
pop
frstor
aad
frstpm(287
mov
dec
enter
mov
add
mov
mov
inc
rcll
mov
aas
cmp
mov
add
int
sbb
pop
jnp
arpl
add
mov
push
jg
mov
out
int
out
aam
and
jle
sub
or
sub
lock
cmp
sub
repnz
stc
jae
inc
int
shlb
shrb
cli
push
cmp
addr16
daa
adc
int
inc
mov
or
mov
insl
push
mov
int3
shr
icebp
inc
xor
scas
inc
test
mov
lret
sbb
push
je
into
jb
inc
jne
sub
outsb
sbb
add
mov
sub
inc
jecxz
loop
cmp
sbb
fsubrl
xchg
fimull
xor
mov
loop
xchg
scas
divl
loop
stc
xor
sbb
in
shrl
mov
cmpl
mov
imul
out
shl
dec
cmp
pop
pop
imul
insl
mov
mov
or
loop
push
out
lea
or
mov
add
adc
mov
imul
push
xor
push
mov
test
jae
mov
jl
imul
mov
mov
inc
adc
in
lcall
cmpb
shl
pop
and
loop
pop
mov
mov
out
mov
mov
daa
fucomi
jno
sub
test
loop
xor
dec
mov
insl
xor
loop
mov
or
xor
add
dec
loop
ret
pusha
mov
lds
bound
adc
pop
test
mov
rcrl
xor
int3
test
scas
sete
mov
lcall
sub
daa
aaa
or
fldcw
and
out
cli
cwtl
cmpb
push
loop
dec
stc
cmp
mov
loop
pop
sub
fisttpll
addr16
daa
cmp
push
icebp
cmp
stc
loop
pusha
push
cs
add
lcall
fistl
test
loop
and
xchg
stos
sar
loop
adc
or
mov
mov
sub
jg
jno
sbb
lods
jecxz
clc
in
mov
shr
lret
cld
mov
or
push
daa
arpl
adc
cli
jno
pop
in
xor
push
loop
xor
nopl
mov
pop
add
les
sub
fwait
mov
call
mov
add
cwtl
push
mov
test
cld
xorb
loop
andl
adc
into
shl
or
cmp
lods
fcos
ja
cmp
push
out
push
fnsave
mov
cmp
loop
mov
or
loop
cld
and
mov
pusha
lcall
enter
adc
add
and
add
je
mov
out
or
lret
loop
pusha
cmc
mov
imul
or
ja
adc
jbe
mov
cmp
mov
out
leave
mov
jns
in
dec
push
xchg
loope
test
ja
les
clc
add
adc
out
inc
loop
stos
icebp
dec
push
jmp
loop
cmp
lods
xchg
ret
xchg
mov
rorl
insb
adc
add
mov
stc
lods
lea
and
repz
sar
xchg
mov
jecxz
add
jmp
or
or
loop
xor
out
mov
lret
jg
xor
in
mov
pop
mov
or
sbb
sbb
xchg
cld
test
ds
jecxz
mov
in
movsb
mov
in
jae
aaa
sub
adc
loop
dec
inc
hlt
aad
push
loop
jmp
jp
pop
lret
and
mov
add
xchg
fs
jbe
clc
cmpsb
bound
push
call
popa
push
leave
push
mov
cmp
call
loop
stos
bnd
inc
mov
dec
cld
xchg
mov
inc
loop
or
pusha
push
subb
cli
rcrb
scas
movsb
ud1
test
dec
loop
out
dec
xchg
mov
sbb
cmp
jae
stc
and
into
addb
sbb
push
lret
js
or
imul
sub
adc
or
jne
lods
loop
ja
call
loop
adc
loop
push
jns
pop
je
stos
pop
cmp
shl
std
jbe
stos
and
jnp
cmpsl
pop
insb
loope
roll
fistpll
mov
incb
or
inc
sub
outsb
and
loop
lock
jg
in
inc
sbbl
loop
adc
dec
popf
sub
push
push
fistps
pop
enter
inc
lock
pusha
mov
xlat
es
icebp
mov
hlt
out
ljmp
daa
or
and
and
mov
lret
pop
jecxz
or
cmpsl
imul
fcom
or
leave
pop
inc
js
mov
and
ret
and
mov
mov
dec
mov
dec
inc
jbe
dec
loop
push
in
or
adc
or
sbb
repnz
mov
loop
cmp
lcall
fldpi
imul
loop
stos
or
or
out
call
sub
jecxz
xchg
daa
adc
cltd
inc
in
sti
data16
notb
loop
test
ret
mov
jnp
lcall
test
sbb
stos
cmp
sub
in
rorb
inc
test
add
xchg
jg
fimuls
icebp
pop
out
cli
sub
mov
insl
aam
lock
sbb
sbb
add
testb
shr
dec
rcl
movsl
dec
ret
push
xchg
pop
xlat
push
or
roll
movsl
repz
loop
dec
jbe
ss
insb
inc
stc
dec
push
mov
out
pop
jne
or
imul
jnp
lahf
and
mov
inc
mov
dec
xchg
xchg
out
in
or
sub
dec
in
push
xchg
add
loop
repnz
sub
add
inc
sbb
inc
adc
and
loop
xchg
jmp
add
pop
loope
sti
inc
push
cli
cmpb
mov
es
loop
aam
xchg
icebp
mov
loop
hlt
xor
sub
lahf
xchg
sub
popf
mov
xchg
push
int3
loop
jo
cmpsb
js,pt
jb
addl
cli
cltd
repnz
jmp
daa
jnp
adc
loop
stos
bswap
gs
iret
std
loop
pop
add
fmuls
ret
popf
mov
jg
mov
or
int
rcrl
fistpll
shll
jb
dec
push
xchg
arpl
cmc
xor
push
das
out
rclb
loop
sbb
sbb
hlt
fucomi
mov
rcrl
out
insl
mov
add
or
out
nop
add
stc
jno
jo
sbb
mov
dec
cmp
pusha
push
push
sbb
xor
out
push
rolb
push
movsl
in
add
cmpsl
sbb
loop
xor
and
inc
cli
sub
lods
arpl
dec
loop
pop
insl
into
or
mov
in
jmp
cmc
int
adcb
mov
je
mov
sbbb
add
hlt
fdiv
out
stc
push
outsb
cmpsb
call
mov
loop
pusha
inc
xchg
fdivp
or
outsl
pop
aas
in
data16
ja,pt
mov
and
lock
test
dec
mov
loop
cli
outsb
sbb
or
adc
jl
pop
push
jmp
jle
addr16
add
mov
loop
in
mov
shl
jmp
testl
push
sahf
icebp
lods
pop
cmp
aas
and
int
icebp
push
in
mov
sbb
or
out
mov
shll
inc
add
lds
repz
movsl
loop
loope
dec
lea
jb
loop
repnz
add
in
xchg
stc
addb
subb
fnstenv
jbe
pop
dec
faddp
push
lds
repnz
push
push
or
in
insl
jg
xor
cmp
sub
mov
mov
mov
outsb
add
cmp
pop
fnclex
xor
lock
stos
loop
jecxz
add
in
arpl
loopne
loop
mov
jbe
sbb
dec
pop
insl
push
fs
loop
imulb
std
loop
pop
adc
cmp
int3
pop
xchg
jns
mov
out
dec
lods
movsb
loop
xor
mov
pop
fcmovne
lods
fbld
loop
jecxz
jnp
and
cmp
push
pop
inc
push
stos
pop
loop
outsb
imulb
test
andb
in
loope
mov
mov
out
mov
xchg
js
test
lds
add
dec
push
in
shll
jmp
pop
dec
push
mov
adc
cmpl
sbb
push
loop
bound
stos
in
xor
mul
pop
adc
xor
addr16
cmc
mov
xchg
shrl
sbb
jmp
fwait
sub
out
in
sahf
xchg
inc
mov
in
sbb
popf
pop
in
pop
out
mov
jmp
aaa
dec
adc
in
inc
repz
ss
mov
cs
xchg
out
cmpsb
int3
loop
cmp
mov
adc
icebp
cmp
dec
inc
dec
jb
loop
incl
mov
jne
sub
repnz
cmp
sbb
adc
and
xchg
and
add
push
in
adc
loop
cmp
pop
dec
loope
fildll
out
imul
push
pop
xchg
adc
test
push
scas
loop
fistpl
xchg
push
popf
and
loop
dec
push
loop
jno
or
sub
cltd
rclb
imul
lock
rcrb
dec
sub
call
jno
loop
jl
xor
mov
iret
shlb
enter
rcll
std
int3
out
ds
shrb
lea
clc
jb
xchg
sub
push
dec
fsts
scas
dec
inc
adc
aam
jb
lock
sbb
icebp
pop
loop
or
mov
test
cmp
stc
xor
das
jmp
decb
jns
jmp
pop
rcrb
fwait
movsb
or
idivb
jg
dec
mov
lret
adc
loop
xorl
repnz
sbb
loop
add
dec
stos
loop
mov
mov
push
lods
mov
pop
loop
jg
mov
jmp
cltd
ficomps
iret
push
xor
pop
adc
dec
mov
xor
push
dec
sbb
in
jg
out
dec
int3
cmp
xor
loop
cli
jnp
xchg
loop
adc
inc
pop
sub
cmp
jecxz
and
idivb
inc
mov
xabort
testl
push
imul
loop
adc
rolb
rorl
into
sub
enter
loop
dec
sahf
out
outsl
mov
lcall
loop
pop
and
loop
push
cld
cmp
movl
push
call
loop
mov
insb
pop
ss
stc
add
pop
loop
pop
jb
pop
call
jl
movlps
ss
jge
and
jecxz
or
add
cld
jp
add
jl,pn
pop
and
cmp
loop
xchg
lret
popf
sahf
repnz
outsb
lret
sub
adc
rorb
jbe
lret
aad
fs
jns
cmp
sub
test
and
aam
push
loop
pop
lock
stos
push
sub
outsb
push
sbb
jp
jno
xchg
dec
std
call
loop
or
pop
xor
stc
daa
loope
scas
push
jbe
jge
add
add
mov
sbb
and
cmp
jp
daa
push
decb
std
add
clc
imul
cld
clc
sbb
loop
sti
lds
jbe
pop
inc
xor
jp
dec
stc
push
add
movsb
imul
outsl
cmp
in
pop
xchg
dec
pop
push
loop
inc
aaa
xchg
lret
pop
daa
fisubs
dec
push
xchg
movsl
and
pop
xor
dec
sbb
loop
add
xlat
loop
push
cwtl
jmp
cmpsl
jp
cmp
pop
loop
iret
js
insl
ds
cmpsb
cmpsl
shll
or
inc
add
rcll
out
push
loop
sahf
mov
shl
movups
cli
cmp
lahf
jns
add
stos
dec
shr
icebp
pop
jg
xchg
cli
loop
mov
shl
or
addr16
enter
enter
loope
in
lcall
mov
std
and
hlt
sub
out
cmp
pop
push
xchg
mov
and
fisubrl
inc
in
or
ret
insl
scas
jb
icebp
jnp
outsb
cmp
loop
xchg
out
and
xchg
pop
adc
fisubrs
in
stc
adc
sub
jmp
sub
add
nop
adc
add
mov
push
sar
repnz
cs
call
jge
xor
or
pop
cmpsb
in
fs
icebp
adc
adc
imul
mov
cmc
std
and
shrb
iret
cmp
cmpsb
movsl
out
inc
in
insl
push
loop
testl
nop
or
xor
mov
cmp
in
cmp
dec
std
mov
xor
insb
addr16
outsl
mov
or
cmp
mov
jecxz
pop
add
cmc
popf
inc
imul
adc
fldcw
xchg
sbb
sub
mov
repnz
inc
cs
mov
jne
out
insl
sbb
mov
adc
lock
loope
jp
insb
repz
jo
in
loop
ljmp
scas
mov
mov
shll
pop
insl
xchg
push
mov
cli
cmp
iret
jo
mov
fsubs
shl
loop
push
sbb
icebp
sbb
sub
xchg
inc
jmp
in
mov
adc
and
jmp
mov
sbb
jae
loope
cld
xor
add
in
aas
in
dec
loop
and
lret
lcall
loope
lds
pop
imul
mov
loop
or
loop
imul
loope
mov
repnz
push
inc
xchg
mov
repz
loop
insb
cmp
mov
loope
xor
in
fimull
loope
mov
or
cli
xor
jl
inc
add
add
adc
cmpsl
cmp
loop
scas
mov
cwtl
daa
in
loop
dec
push
inc
cmp
mov
lcall
sbb
jmp
ja
into
xchg
scas
aas
hlt
loop
or
dec
loop
test
jno
xor
into
add
fs
imul
mov
push
fisttpl
and
movsl
lret
loop
sub
xor
pop
rorb
add
mov
shll
or
loop
jno
and
rcrb
jl
fdivrp
mov
loop
lods
xor
loop
add
js
testb
rcll
cli
jmp
andl
xor
sbb
cmp
jno
xchg
movsl
mov
sti
loop
in
mov
xchg
in
fisttpl
loop
mov
adc
daa
inc
cli
jb
jno
rolb
or
mov
pop
ds
adc
add
lods
mov
dec
add
lods
sbbb
jecxz
in
dec
pusha
out
push
adc
mov
mov
stos
fs
lcall
loop
push
fiadds
mov
es
imul
push
mov
pop
rcr
stc
mov
add
cmpsl
loop
ja
jns
mov
adc
fwait
inc
dec
adcb
fs
cmp
cwtl
inc
hlt
enter
loop
out
int3
scas
mov
icebp
into
movsb
stos
loop
dec
mov
les
loop
mov
adc
cmpb
lret
dec
nop
sub
mov
out
dec
jns
cld
inc
jecxz
jne
sub
jg
pop
xchg
jbe
or
lods
hlt
stos
mov
mov
push
push
or
push
xchg
jno
mov
lret
cmp
jmp
icebp
mov
push
pop
sbb
loope
shll
add
clc
cmc
shll
mov
repz
push
and
and
mov
mov
enter
fistpl
pop
and
mov
mov
dec
mov
sahf
hlt
cmp
daa
mull
adc
shrl
cmp
sbb
jb
stos
mov
loop
fistl
inc
and
loop
dec
leave
lcall
mov
lahf
or
rcrl
mov
mov
les
in
cmpsb
loop
aam
daa
clc
mov
into
icebp
scas
mov
jbe
loop
jl
int3
sub
inc
loop
andl
cli
fcom
mov
mov
int
xor
stos
iret
fwait
mov
rcrl
das
mov
or
in
push
jp
add
outsl
daa
pop
or
out
lret
out
test
xchg
mov
std
cmp
jmp
rcll
fnstenv
xor
mov
or
xchg
out
std
subb
inc
inc
stc
mov
pop
lret
mov
jge
je
lcall
lock
fcmovnb
stc
mov
insl
negb
sbb
mov
test
pusha
and
cmp
aaa
xchg
mov
stos
movsb
loop
ja
int3
outsb
lods
into
sbb
push
mov
loop
addr16
push
daa
in
fnstcw
aaa
pop
xlat
pop
addr16
clc
repnz
icebp
adc
stos
pop
negb
lret
pusha
insl
and
iret
jg
and
add
push
jae
dec
imul
pop
out
sub
cld
jo
out
repz
pop
cwtl
dec
loope
cli
add
push
pop
mov
call
adc
loop
stos
out
push
push
testl
or
push
inc
pop
in
sbb
jae
mov
out
and
sbb
stc
andb
loop,pn
xor
push
stos
sub
loope
inc
or
pop
loop
notl
xchg
cmp
jne
or
push
icebp
call
push
jnp
xor
sbb
loop
out
aam
scas
stos
dec
cld
loop
lods
add
xor
or
mov
pop
xor
fsubs
daa
xor
push
decb
jle
adc
push
repnz
push
imul
adc
jge
push
pop
test
mov
mov
pop
xor
fidivrl
scas
cmp
imul
inc
loop
dec
xor
mov
inc
js
shll
stc
jmp
hlt
mov
and
lcall
mov
add
in
adc
dec
scas
mov
pop
push
cmp
aas
call
mov
sub
lahf
adc
sahf
jnp
jb
pop
push
add
daa
lock
lods
add
xor
loop
mov
leave
pop
pmaddwd
out
jge
scas
repnz
aam
xlat
mov
cmc
xchg
sbb
in
ja
pop
xor
mov
ret
xchg
mov
lock
dec
push
xchg
loope
lcall
std
push
or
adc
stos
adc
loop
sbb
jmp
scas
loop
inc
ss
popf
icebp
test
loop
xchg
sub
rcrb
sub
xor
jmp
inc
jne
daa
adc
cli
in
add
sbb
or
sub
jnp
stc
push
inc
mov
lret
outsb
pop
lahf
mov
push
inc
inc
xor
and
icebp
test
call
imul
popf
mov
aas
pop
pop
and
out
test
pop
bound
daa
leave
jge
dec
das
ljmp
jbe
les
sub
sbb
jb
enter
loop
cmp
mov
or
push
push
inc
mul
mov
ror
xor
mov
lcall
les
jmp
xchg
jmp
loop
adc
or
jle
mov
xor
and
pop
push
mov
in
repnz
dec
pop
loop
adc
outsl
in
cmp
mov
lea
insl
jg
jno
pushl
jmp
inc
es
lret
lds
ds
pop
or
outsl
pushf
inc
add
not
xor
sub
and
icebp
rclb
or
into
cli
inc
jl
adc
loop
inc
repz
loop
repnz
es
push
je
xchg
xchg
adc
out
shl
fisubrl
jge
test
cmpsl
lods
mov
cmp
icebp
push
or
bound
repz
push
pop
gs
lods
lods
or
loop
adc
xor
fisubrs
cmp
dec
add
mov
jmp
scas
shl
push
sahf
adc
cld
cmp
bound
sbb
add
mov
outsb
dec
or
out
ss
adc
cmp
jle
nop
out
repnz
jae
icebp
xor
stos
jbe
push
in
cs
mov
loop
sub
iret
inc
loop
adc
icebp
and
imul
adc
jmp
xor
icebp
ds
loop
sub
lods
ret
ficompl
fdivp
pop
jb
loope
cli
inc
mov
jle
loop
pop
out
push
adc
sti
js
push
loop
cli
adc
addr16
xchg
or
mov
add
scas
es
mov
sub
jp
or
pop
add
lods
loop
dec
cld
push
sahf
mov
mov
push
jnp
sbb
and
mov
cmp
fwait
loop
in
iret
repnz
xor
sub
fstps
jp
pusha
ucomiss
loop
mov
dec
xor
or
negl
out
and
lock
mov
stos
push
aaa
push
mov
sbb
pushf
xor
dec
into
int3
fs
clc
movsb
add
xchg
daa
xor
inc
out
and
loop
pop
lret
ss
movsb
jb
loop
sarb
sti
mov
stc
or
outsb
loop
in
jae
mov
add
jo,pt
lods
sub
clc
or
out
sub
cmp
sub
add
mov
ss
cmp
out
add
imul
scas
movsb
jp
enter
icebp
cmpsl
mov
mov
inc
cmp
xorb
iret
and
loop
mov
movsb
cmpsl
sub
add
sub
in
mov
fldcw
cli
sbb
or
sbb
jl
loop
cmp
call
jnp
in
push
fs
insl
dec
out
jecxz
sbb
adc
enter
loope
in
lods
jno
sbb
hlt
cmp
sbb
stc
dec
push
mov
sub
loope
xlat
lahf
jg
rcl
loope
test
jp
out
fwait
dec
test
jns
lock
out
push
leave
addl
and
ror
dec
nop
mov
xchg
cltd
andl
mov
scas
cmpsl
shll
jne
mov
cmp
pop
fcompl
mov
iret
inc
loopne
mov
data16
mov
iret
inc
enter
fsubs
and
stc
fdivrs
arpl
sbb
ror
xor
and
mov
pop
leave
cwtl
aaa
repnz
scas
and
lahf
aad
xchg
jo
xlat
dec
adc
loopne
loope
imul
lret
loopne
outsb
sub
aas
repnz
jmp
pusha
xchg
cmp
inc
mov
scas
scas
in
mov
icebp
xlat
hlt
int3
jle
lods
cmc
push
inc
cmpsb
jmp
dec
pop
sahf
into
mov
mov
loope
cmpsb
rorl
andl
std
push
push
mov
jo
mov
mov
mov
loopne
fidivrs
jne
scas
sbb
imul
hlt
into
push
data16
pop
sbbb
lahf
jle
jmp
sarl
push
lods
inc
mov
jge
fnstcw
scas
mov
xchg
dec
scas
dec
push
jns
or
arpl
inc
add
xchg
ljmp
cmpb
rcll
mov
mov
nop
cmpsl
xor
mov
mov
push
lds
jo
cmpsb
aaa
jo
aaa
adcl
popa
scas
jmp
test
fsubrl
cmpsl
outsl
adc
int3
cltd
ret
push
cmp
pop
push
sub
jo
pop
addr16
sub
lock
ficoml
loope
xor
loope
mov
sub
ja
mov
mov
fnsave
in
cmp
ljmp
xorb
sub
mov
mov
mov
mov
mov
mov
mov
mov
pop
rcl
dec
inc
test
cmc
add
shrl
ljmp
shlb
jo
jbe
js
fisubrs
xor
into
das
jle
es
scas
pusha
lods
push
cli
push
mov
jmp
add
sbb
inc
jg
gs
mov
push
push
std
dec
mov
inc
into
lods
mov
mov
mov
cltd
or
sbb
jle
xor
imul
shll
jo
movsl
rcrb
jg
jmp
pop
and
sahf
and
pop
or
mov
outsb
imul
int3
arpl
mov
dec
push
mov
or
scas
data16
fnstcw
xchg
daa
scas
push
adc
fstps
cmpb
inc
es
shlb
xor
jb
dec
cwtl
jmp
dec
or
iret
adc
stos
imul
adc
sub
pop
pusha
push
cmp
push
xchg
xor
lret
cltd
into
sub
cmp
and
test
sbb
fistps
sub
jmp
and
dec
pop
and
inc
or
or
push
xor
cmpsb
xor
int
push
inc
push
cmpsb
push
pop
lods
leave
pusha
inc
pop
cmpsb
pop
jge
pop
incb
cmpsl
jmp
iret
push
mov
or
sub
iret
insl
inc
mov
dec
sbb
cmpsl
sahf
fimull
push
clc
pushf
cwtl
dec
mov
hlt
outsb
mov
lock
sahf
inc
dec
sahf
out
sbb
xchg
mov
pusha
popa
in
dec
inc
pop
mov
aad
ds
inc
subl
mov
pop
clc
loopne
push
dec
dec
push
aas
mov
clc
inc
lds
xor
mov
and
pusha
mov
mov
adc
inc
cmp
inc
sub
or
mov
add
inc
push
add
add
xor
fcoms
or
aas
lea
adc
mov
pop
jg
mov
sub
popf
and
and
ds
inc
lahf
push
clc
jnp
adc
stos
loopne
ja
lcall
and
push
into
jp
shlb
inc
in
test
mov
dec
je
aas
jb
mov
mov
or
sbbl
xchg
data16
movsb
aam
cmp
fs
pop
dec
daa
push
sbb
loope
pop
mov
add
adc
fisubrl
pop
loopne
jbe
loope
loopne
ret
roll
shl
loope
and
shll
aam
enter
mov
loop
test
rcrl
jo
mov
or
lds
shll
pop
mov
sti
mov
mov
ljmp
bound
loop
dec
fistps
inc
mov
fmulp
push
xor
loop
sub
pop
ror
pop
loop
mov
fistpl
inc
mov
dec
cmp
pop
push
loop
movl
jo
test
sti
loop
push
rcll
push
loop
int
dec
lds
dec
lret
mov
xor
repnz
sbb
das
cmp
rclb
push
mov
out
lcall
sbb
out
lcall
push
dec
sub
mov
movsl
dec
loopne
pop
pusha
jecxz
out
push
and
pop
test
pop
inc
push
cmp
mov
iret
push
bound
fcmovbe
dec
sub
xchg
sub
loop
pop
aam
mov
cmp
int
mov
aas
mov
dec
mov
sbb
inc
mov
cmp
scas
cmp
mov
add
mov
loop
cmpsb
movsl
and
and
sahf
push
loop
sbb
lcall
xchg
push
xchg
adc
adc
cwtl
sbb
gs
sub
imul
test
fsubrl
push
out
jno
rclb
mov
sbbb
stc
and
pop
sub
jne
adc
call
ljmp
inc
xchg
repnz
adc
out
jbe
cltd
push
loop
cmp
push
stos
mov
adc
dec
rcrl
jg
psubd
mov
mov
push
lea
push
dec
xor
outsl
enter
xor
mov
mov
inc
loop
or
inc
adc
test
push
in
out
cmpb
jl
andb
hlt
jle
add
mov
ja
jnp
cmp
mov
rorb
repz
scas
xor
push
inc
jl
mov
cwtl
and
push
test
inc
mov
iret
sqrtps
loop
pop
mov
adc
subb
int3
popf
not
mov
cmpsb
jl
arpl
loope
int3
mov
and
adcb
xchg
movsb
jp
add
enter
cmc
icebp
pop
pop
dec
add
mov
dec
add
jnp
inc
add
push
or
pop
popf
dec
mov
cltd
mov
loop
pop
ret
pushf
filds
jle
cmp
stos
push
inc
inc
and
icebp
cmp
loop
lret
push
fsubp
mov
dec
sti
mov
mov
data16
loop
test
orl
sub
enter
mov
push
loop
fsubrs
outsl
loop
in
cmp
aam
hlt
mov
xor
fiaddl
mov
xor
dec
xchg
mov
adc
rorb
jl
in
mov
out
cmp
loop
jmp
pushf
cmp
cmpb
mov
aam
loop
mov
push
imul
out
mov
fcomps
push
cmp
dec
fprem
aas
sub
jle
dec
adc
mov
or
pusha
mov
flds
inc
call
sbb
mov
loop
sbb
mov
loop
pop
push
test
add
mov
mov
out
push
jne
in
jecxz
call
shll
and
repnz
lret
lods
loop
mov
sbb
rorl
bound
in
or
jns
call
mov
sbb
movsl
xor
aas
and
jae
lea
mov
dec
mov
mov
loopne
in
fidivl
scas
dec
inc
pop
mov
fcmovnb
icebp
mov
insb
adcl
ja
popa
f2xm1
outsl
pop
out
orl
mov
loope
in
rcl
mov
and
cmpsl
jecxz
sti
into
stc
cmp
dec
fstps
loop
fisttps
sub
jmp
loope
bound
xchg
lea
sub
pop
and
xor
or
scas
outsl
add
xchg
mov
sahf
cmp
push
loop
inc
insl
cmp
loop
mov
cmpsl
fsub
imul
lds
jmp
or
aad
mov
in
mov
jae
in
lds
pop
xchg
pop
roll
outsl
and
icebp
data16
and
out
pop
inc
loop
repz
mov
or
in
outsb
dec
mov
xor
imul
test
cwtl
mov
ss
mov
fwait
daa
mov
add
lods
jp
or
push
nop
cmpsl
add
xlat
mov
into
je
idivl
loop
mov
xor
clc
rol
loop
pop
xchg
ret
scas
loop
cli
push
cmpl
inc
mov
sahf
fs
call
or
loop
es
xor
dec
popf
push
pop
loop
xchg
mov
pushf
and
sbb
or
int3
cmp
add
test
les
push
jmp
std
or
jp
fisubrs
call
hlt
loope
sub
stos
inc
mov
outsb
in
sbb
jne
pushf
jle
push
std
mov
addr16
scas
xlat
repz
lcall
fisttpl
push
ds
inc
jle
mov
loop
data16
adc
in
pop
push
sti
loopne
loop
pop
ret
insl
jnp
mov
ss
leave
mulb
loop
test
mov
loop
pop
fistl
loop
repnz
jl
adc
fldenv
pop
jg
loop
xchg
shl
aaa
movsl
gs
lret
out
js
adc
jno
loop
sar
inc
add
sub
cmp
fdivl
inc
xor
add
in
jmp
mov
xor
jle
pushf
test
jp
or
das
adc
xor
mov
lods
inc
mov
push
out
cmpsb
xchg
or
es
push
call
clc
iret
xor
cld
sub
fwait
rorl
inc
bound
in
lcall
xchg
adc
xchg
inc
fcmovb
cmp
push
xchg
call
cmp
lret
mov
adc
lock
pushf
loop
iret
mov
hlt
loop
jo
rcr
xchg
mov
mov
pop
and
das
repnz
xor
inc
es
lcall
insb
loop
fmul
iret
sahf
mov
cwtl
xor
aad
jne
shl
adc
mov
or
into
loop
mov
dec
loop
push
mov
add
scas
mov
or
add
mov
dec
jecxz
addr16
out
mov
ret
rcll
iret
loop
xchg
aam
ss
pop
clc
loop
pop
lds
shl
loop
xor
icebp
lods
loop
test
mov
icebp
push
pop
repnz
cwtl
jl
fnsave
loop
xor
lds
cmp
xchg
push
loop
scas
lret
shrl
loop
xor
add
enter
call
scas
leave
dec
jns
sub
subb
insb
pop
popf
cmp
rorl
dec
cmp
imul
bound
push
and
dec
push
jg
jns
sbb
mov
jge
or
push
cld
jmp
adc
aam
mov
mov
scas
test
fucom
sbb
mov
jns
or
inc
mov
cmpsb
push
movsl
das
scas
insl
divb
adc
pop
es
jp
repz
xchg
pop
adc
inc
in
loop
cmpsl
pop
mov
fisubs
sti
cmp
add
mov
jns
stos
sbb
in
pop
hlt
sbb
sub
jge
inc
js
cld
loop
jmp
lret
shl
loop,pt
and
cmpsb
loop
dec
inc
inc
pop
lods
mov
jbe
push
out
add
mov
mov
mov
stos
outsb
in
mov
dec
xchg
mov
sbb
jno
mov
aas
call
mov
flds
xor
jno
mov
mov
test
outsb
ficoms
mov
test
pusha
push
push
and
loop
icebp
movsl
stc
pop
std
and
pop
scas
in
negb
sbb
cmpsb
sub
pop
adc
fs
int3
jmp
rclb
in
and
push
xor
clc
ss
mov
jo
fsubrs
xor
push
push
mov
sbb
cmp
loop
jle
sub
or
mov
and
dec
pushf
icebp
xchg
cld
and
or
xchg
sub
xor
sub
clc
mov
aad
add
aas
inc
jne
add
pop
push
push
sub
pop
mov
and
or
jae
out
dec
jbe
pop
and
nop
xor
jecxz
xchg
add
mov
outsl
adc
cmp
push
fsub
jbe
mov
and
xor
shlb
loop
mov
stos
push
scas
mov
dec
orb
loop
xlat
jge
subl
push
mov
into
out
loop
xchg
add
sarb
mov
in
std
and
xchg
jnp
dec
and
inc
add
mov
jl
or
int3
inc
loop
push
jle
jb
push
insl
loop
inc
test
jnp
fldl
or
mov
sbb
mov
pusha
and
sbb
xchg
cmc
jns
jle
repz
in
mov
jb
stc
dec
inc
insl
out
fs
push
mov
push
sbb
daa
add
xorl
push
loop
outsl
inc
xchg
cmc
jg
loop
jle
test
mov
sbb
dec
cmp
test
movl
and
xchg
add
das
pop
xor
sbb
sub
adc
mov
push
ss
xor
inc
mov
adc
lahf
dec
ds
leave
mov
dec
xchg
mov
and
cltd
push
mov
adc
loop
and
in
inc
test
loop
inc
fwait
or
mov
jno
or
pop
and
mov
aas
out
stc
fldl2t
pushf
add
and
mov
iret
jecxz
mul
adc
das
loop
ss
cli
pop
fwait
pop
xchg
inc
cmp
lret
out
push
test
loop
mov
pshufw
std
loop
pop
sbb
sbb
jp
movsl
mov
xchg
into
in
or
loop
pushf
cmp
push
push
xorb
das
adc
pop
fmulp
mov
pop
out
mov
jne
loope
push
idivb
push
jb
mov
mov
orl
test
call
loopne
loop
fistps
nop
test
shl
cltd
adc
bound
out
dec
loop
roll
dec
jns
mov
cwtl
das
xchg
jecxz
push
mov
cmpsl
pushf
pop
add
mov
ret
xchg
inc
mov
lea
push
or
push
ja
dec
outsl
mov
adc
or
loop
cmpsb
mov
shl
inc
shl
pushf
inc
mov
int
movsl
mov
sbb
repz
cmp
arpl
loop
cs
call
mov
loop
fistpll
stos
loop
lock
test
push
fbstp
loop
add
fucom
push
mov
cmp
mov
lods
repz
loope
jbe
aaa
jmp
lret
jmp
insl
cmp
push
mov
mov
cmp
pop
push
lock
out
xor
pop
lods
mov
je
adc
pop
mov
ret
dec
jp
xchg
or
sub
push
cmp
ja
loop
cmpb
loop
mov
inc
xchg
imul
pop
lcall
outsb
mov
sbb
jg
xor
mov
mov
mov
sbb
aas
add
loop
ds
and
pop
rclb
out
out
push
inc
jl
loop
mov
divb
mov
jae
or
mov
mov
mov
shll
jb
out
aaa
sbb
jns
push
out
xor
jb
arpl
pop
adc
gs
lahf
cmp
ret
xchg
lods
mov
pusha
mov
sub
cmp
xchg
fwait
outsl
and
loope
mov
jmp
mov
loopne
int
add
loop
bound
cmp
je
jecxz
cld
scas
popa
push
push
jmp
xor
fiaddl
mov
cmp
aas
push
js
mov
loop
dec
nop
inc
mov
pop
scas
ja
imul
orl
js
xchg
pop
aaa
repnz
or
sbb
mov
xor
lock
mov
xor
sub
out
es
sbb
arpl
adc
cmc
fwait
repnz
push
add
mov
jo
xor
arpl
jle
loop
loopne
aam
push
loop
gs
mov
icebp
outsl
jns
jns
nop
faddl
pop
push
pop
add
cmc
xor
out
das
and
adc
jge
daa
repz
pop
sbb
loop
inc
adc
jg
jo
sbb
jae,pn
add
mov
cmp
pop
loop,pn
clc
rcrb
es
cmc
xchg
lcall
or
lods
rolb
out
sahf
aam
rorl
fwait
jg
pop
movsb
sbb
mov
insl
cmpsb
stc
jecxz
add
lods
loope
or
loop
dec
pop
outsb
sahf
leave
mov
out
mov
testb
movsl
stos
loop
data16
into
push
repnz
movsb
mov
es
loop
jae
pushf
lods
inc
and
rcrl
push
sbb
aam
adc
mov
addb
fsubr
js
ret
jne
loop
sbb
sti
sahf
jg
shl
mov
xchg
repnz
arpl
test
mov
loop
in
jnp
pop
push
jne
stos
pop
inc
test
scas
mov
jecxz
nop
jmp
sbb
loop
stc
mov
and
pushf
or
out
ret
sub
js
xchg
je
loopne
fstps
mov
test
sbb
xlat
popa
into
dec
mov
outsb
loope
xchg
nop
or
in
loop
mov
scas
clc
in
or
add
adc
mov
push
xchg
arpl
test
pop
leave
inc
nop
aam
mov
loope
loop
xchg
cmpsl
orb
sub
shl
adc
or
mov
imul
cltd
add
push
inc
loop
fmull
aas
push
push
loop
jne
xchg
inc
pop
and
add
sti
adc
jnp
and
psrad
pop
sub
stc
mov
jnp
dec
cld
jge
cmp
sub
add
or
aas
cltd
test
dec
mov
clc
cld
and
pop
outsb
inc
es
mov
test
ret
inc
addr16
push
cmp
inc
push
cltd
xchg
cmpsb
mov
insb
stos
out
subl
mov
addr16
clc
jns
or
xchg
shlb
dec
inc
mov
popa
outsl
xor
push
loop
clc
dec
sbb
shlb
xchg
aas
sbbl
mov
fld
es
jg
inc
sbb
jno
stos
cmp
jecxz
sub
and
cmp
mov
fmuls
fldt
loop
sub
lds
and
pop
and
jbe
inc
loop
ss
mov
loop
loopne
popa
dec
movsb
cli
cld
adc
outsb
divb
repz
lret
out
enter
loop
sbb
pop
test
inc
sub
cmpb
inc
inc
dec
add
loop
iret
dec
pusha
inc
mov
enter
lcall
loop
dec
mov
aam
jne
xor
cmp
mov
jl
mov
dec
stos
loop
jno
cmpsl
out
pushf
shlb
mov
cmpb
or
in
inc
xchg
cmp
inc
inc
loop
pcmpgtw
out
and
loop
jmp
idiv
inc
imul
nop
out
inc
add
movd
aaa
mov
jno
loop
clc
lret
xor
inc
mov
add
push
call
sbbb
mov
add
les
inc
xor
adc
add
jo
pop
jl
les
pop
arpl
add
loop
shlb
adc
sbb
mov
fdivl
sub
jno
adc
shrl
sub
xchg
icebp
es
test
leave
push
pop
call
out
loop
arpl
mov
inc
aam
scas
std
lahf
lock
sub
pop
out
jbe
push
or
cmp
mov
dec
fisubl
loopne
jmp
mov
in
add
pop
jno
lret
ja
clc
cmp
mov
and
sbb
cmp
stc
ret
xlat
in
cld
icebp
add
shr
xchg
lock
add
sbb
jle
shl
add
inc
inc
xor
push
adc
addr16
pop
out
and
fidivs
adc
xchg
push
repnz
mov
cwtl
mov
pusha
movsl
add
and
sti
lret
out
add
stc
ficomps
loop
fstpl
scas
cwtl
insl
outsl
cmp
test
lods
mov
mov
xor
push
adc
roll
in
mov
cmp
xchg
in
fimull
insl
xor
sbb
push
out
dec
mov
in
hlt
test
shl
aaa
loop
cmp
pop
xchg
sarl
mov
loopne
nop
bnd
fisttpll
stos
out
mov
push
in
add
push
in
push
lds
in
mov
push
pop
loope
cld
mov
subl
sahf
loop
xchg
mov
cmp
inc
sbb
loop
out
dec
idivb
jbe
and
mov
push
cmpsl
gs
fidivs
cmp
xchg
arpl
cmp
xor
sbb
loop
jne
push
rol
insl
add
dec
or
xchg
hlt
rorb
loop
dec
dec
jp
lcall
inc
aam
push
pop
data16
cmp
scas
jbe
into
dec
loop
scas
push
leave
fldl
inc
or
nop
imul
mov
xchg
pop
xchg
loop
test
mov
inc
inc
pushf
js
in
jp
cld
mov
push
pop
in
test
arpl
scas
inc
lcall
lds
xchg
dec
adc
mov
lods
loop
mov
out
mov
jne
ror
in
xchg
lret
mov
loop
ret
sub
pop
adc
lods
fnstenv
jns
gs
out
clc
loop
inc
icebp
out
js
scas
sub
xchg
sub
aas
movsb
xor
outsb
cwtl
or
out
pop
inc
dec
dec
gs
subl
out
add
xchg
jp
test
stos
rcll
or
test
nop
testl
push
jl
loop
fidivl
mov
lcall
adc
imul
fldcw
jge
mov
jne
test
and
sub
loop
daa
pop
mov
out
mov
mov
loope
and
in
pop
gs
insb
and
mov
cli
loop
jns
fs
and
mov
lods
inc
call
lods
mov
in
mov
cmp
sbb
in
jae
sahf
mov
adc
ret
xchg
loop
jp
rolb
clc
outsb
das
imul
cmp
inc
xor
xor
push
aaa
sti
insl
loop
adc
mov
xor
and
out
data16
divb
dec
jns
cmpsl
cmc
lahf
mul
add
sti
push
out
inc
insb
sub
push
lret
sahf
loop
dec
out
mov
mov
push
and
divb
sub
mov
into
insl
or
or
loop
subb
jae
xchg
leave
daa
push
push
dec
lahf
out
stc
sub
imul
rcrl
add
cld
gs
les
cli
jbe
call
dec
ss
jne
cmpsl
loopne
lret
lds
jnp
loop
dec
test
lea
das
and
lods
push
sbb
je
xor
mov
pop
insl
jge
dec
loop
scas
or
jns
adc
push
jecxz
and
loop
sahf
adc
sbb
hlt
cmp
inc
cmp
push
bnd
adc
js
adc
in
orb
mov
inc
decb
hlt
push
out
fwait
pop
mov
xchg
popf
add
mov
outsb
repnz
fldt
adc
into
loope
cmp
ret
stos
jb
sbb
outsl
loop
dec
loopne
or
lods
loop
mov
scas
clc
jmp
cmp
pop
mov
mov
aaa
adc
lods
shrl
mov
pop
sub
loope
loop
cltd
pop
adc
nop
cmc
imul
pushf
sbb
enter
sub
add
loop
push
icebp
or
cltd
popw
dec
and
pop
and
bound
inc
rolb
xor
loop
jno
adc
loop
test
or
repz
mov
or
pusha
loop
mov
cmp
adc
pop
mov
cmp
shrb
test
leave
fnstcw
xchg
add
lock
lret
add
in
clc
jne
lea
insl
mov
xchg
pop
dec
push
inc
loop
cltd
adc
sub
jb
shl
push
inc
inc
into
mov
dec
mov
cli
pop
arpl
mov
cmc
out
mov
dec
cmp
jmp
mov
test
into
xchg
xor
mov
mov
jmp
andb
jmp
repz
jns
mov
mov
pop
loop
fidivrl
hlt
dec
sub
fldenv
loop
scas
test
loope
iret
add
xor
pop
dec
jno
loop
orl
jg
or
mov
call
add
fsub
sub
lds
andl
movsl
mov
push
mov
fbstp
movsb
pushf
jmp
in
push
adc
adc
bnd
sub
sbb
daa
inc
adc
aam
pop
dec
fs
repnz
repz
fwait
jae
sub
dec
push
imul
out
inc
jns
push
cmp
xor
loop
cli
and
mov
comiss
insl
add
inc
push
jl
xor
add
mov
mov
insl
mov
shr
mov
adc
dec
loop
and
test
sub
inc
test
fs
in
fistpl
mov
and
sbb
push
inc
lret
cmp
or
lds
loop
pop
xcrypt-ctr
cmpsl
pop
inc
pop
xchg
in
fs
imul
sub
fdivl
inc
inc
jno
sub
inc
or
je
mov
scas
test
xchg
scas
adc
loopne
pop
cmp
out
out
cli
repz
mov
jbe
push
xchg
cmpsb
dec
inc
sti
dec
mov
adc
pusha
mov
das
out
mov
into
mov
mov
mov
mov
fwait
lahf
pop
fs
inc
das
movsb
mov
or
xor
pusha
clc
or
xchg
cmpsb
mov
mov
fld1
jecxz
sub
testb
sub
adc
inc
mov
push
pop
add
push
xchg
out
loop
in
ja
push
add
push
loop
jno
in
lahf
aas
xchg
loopw
imul
mov
shrb
cmp
pop
loop
push
shlb
cld
jg
inc
xor
ss
push
insl
ja
jmp
and
jbe
mov
into
push
dec
mov
dec
jnp
mov
xor
xchg
pop
push
xor
mov
sbb
loop
dec
stos
push
das
fcmove
adc
out
loop
cli
and
pop
push
loop
mov
daa
jno
jmp
sti
jecxz
lcall
ficomps
test
inc
push
sub
jb
call
ljmp
mov
push
and
repz
cmc
xchg
popa
fbstp
in
loopne
loop
mov
and
out
pop
ja
pop
lret
cltd
gs
shr
loop
outsl
dec
fdivs
pop
loop
jno
push
xor
cmp
imul
or
loopew
mov
in
mov
inc
stc
loop
mov
sbb
cld
or
loop
outsb
or
xor
and
loop
and
push
adc
jbe
xor
inc
cmpsl
mov
adc
in
push
out
js
loop
mov
mov
loop
jg
mov
fldt
movl
mov
je
or
push
inc
fs
mov
pop
loop
pushf
loopne
and
cmpsl
pop
fldcw
push
jg
inc
out
repz
movsl
loop
rcl
dec
mov
xchg
mov
js
jb
test
loop
dec
or
aad
or
stos
out
jne
jp
out
xor
loop
sahf
pop
ds
mov
sub
stos
push
mov
inc
sub
bound
in
xor
push
or
add
je
scas
aas
rcrl
fnsetpm(287
add
xchg
test
dec
and
sbb
loop
mov
cli
xchg
es
cmp
inc
xchg
cmpsl
loop
and
sbb
fsub
xor
push
int
popa
lcall
inc
pushf
out
aaa
and
or
sbb
sti
jbe
jns
je
xor
test
lret
pop
and
loop
mov
in
xchg
dec
xor
push
loop
jno
add
mov
or
insl
push
loop
stc
bound
pop
lret
lds
loop
cmc
and
or
push
bound
xor
sbb
lea
loop
add
addr16
mov
mov
mov
and
mov
roll
dec
cmp
aaa
loop
rolb
loop
test
imul
sbb
in
dec
in
mov
loop
test
cmp
jnp
je
xchg
mov
inc
inc
loop
or
jecxz
jp
xchg
jne
adc
sti
test
inc
sbb
scas
and
out
sahf
xchg
mov
std
gs
stos
popa
popf
int
in
out
cltd
insl
scas
jp
repnz
bound
adc
pop
mov
out
in
arpl
enter
jns
scas
lahf
mov
sar
cmp
jl
adc
mov
mov
loop
cmpsl
jmp
or
adc
cld
imul
data16
mov
jg
sahf
mov
xchg
push
dec
inc
sub
or
loop
xchg
test
and
jecxz
ret
push
push
scas
int3
inc
add
cli
testl
push
out
mov
repz
adc
loope
sub
mov
cwtl
jmp
sarl
mov
jnp
xor
inc
sbb
rcrl
jle
aas
cmp
dec
out
mov
jmp
adc
cmp
push
sbb
push
orb
or
loop
mov
pop
loope
inc
pop
inc
cmp
insl
arpl
das
outsl
cmp
out
cwtl
lret
stos
ds
loop
mov
or
adc
daa
rcr
std
enter
lret
mov
cld
inc
push
stos
fisttpll
bound
cmpl
fmull
xchg
xchg
loop
mov
jo
fwait
loop
lret
scas
mov
out
loop
pusha
imul
push
pop
loop
movsb
mov
cwtl
loop
xor
jne
sbb
roll
xor
pop
cld
and
ss
xor
nop
mov
call
sub
mov
pushf
stos
addr16
div
xchg
loope
cmp
movsb
push
inc
mov
outsb
or
pop
mov
jge
incl
loop
rcrb
rcrb
jno
push
or
lahf
mov
mov
imul
cmpsb
sbb
jecxz
loop
dec
mov
push
dec
in
cmpsb
cs
or
xchg
jle
loope
push
xor
mov
shll
xchg
imul
dec
or
loop
test
adc
addr16
cmc
ds
xor
in
das
and
cmc
gs
daa
sbb
sub
loop
out
dec
inc
pop
mov
fidivl
loop
pop
icebp
loope
push
bound
adc
or
mov
lret
mov
loop
jae
pop
or
imul
pop
push
cwtl
add
add
push
sbb
push
dec
inc
daa
add
gs
popa
lods
and
sbbb
out
cmp
mov
bound
in
in
cmpsb
lods
mov
jg
sub
or
loop
mov
in
add
jnp
sub
add
pop
jo
test
xchg
pop
mov
mov
loop
adc
loop
xor
dec
cmp
out
loope
mov
and
pop
call
loop
sahf
nop
mov
data16
lods
arpl
adc
add
scas
adc
ret
jge
in
pop
mov
push
jle
jb
loop
jbe
or
fldl
lret
outsl
xchg
insl
loop
les
sti
loope
inc
and
out
jecxz
cmpb
int3
stos
in
sub
xchg
dec
push
mov
out
inc
pop
cmpsl
mov
cli
leave
lds
or
sub
adc
pop
loop
in
mov
sub
dec
rorl
js
fbstp
out
pop
pop
leave
cmp
mov
loop
shl
hlt
or
and
xchg
sub
push
mov
icebp
mov
es
cmp
push
mov
into
xchg
test
jmp
lock
scas
loop
add
mov
andl
sbb
loop
pop
xchg
xchg
hlt
sub
sbb
pop
jbe
lahf
loop
xor
mov
scas
pop
mov
and
ret
gs
xor
notb
lcall
mov
rcll
aaa
cmp
lds
je
xor
xchg
cmpsb
pop
jecxz
sbb
loop
insb
xchg
aam
dec
scas
lret
push
add
adc
sub
jg
out
bswap
inc
loop
cmp
adc
out
je
sub
push
jns
sbb
adc
ror
pop
jmp
inc
lahf
jecxz
dec
pushf
xchg
sbb
pop
sub
pop
xor
mov
int3
loop
inc
sti
and
fidivrl
dec
jno
dec
mov
push
cmpsl
mov
mov
sbb
push
ret
loop
test
xchg
or
les
in
fisttps
loop
adc
xchg
xlat
add
mov
cmp
adc
xchg
decb
ja
jge
and
fisubrl
ljmp
and
xor
ja
out
aas
adc
arpl
sub
addr16
mov
xor
or
fnstcw
cmp
loop
xor
stc
adc
sarl
inc
inc
cmp
dec
loop
js
loopne
inc
repnz
sbb
into
fcoml
scas
or
jo
mov
loop
xchg
mov
in
js
loop
pusha
xchg
add
lea
mov
clc
loop
decl
or
and
jp
je
aad
cmp
push
jmp
loop
mov
inc
int
loop
adc
mov
mov
fsubp
jge
mov
add
xorl
decl
into
test
xchg
es
outsl
loop
push
orb
or
pop
and
cmp
mov
xchg
into
mov
call
pop
popa
aad
mov
mov
and
sbb
push
xchg
loop
mov
jl
divb
cli
xchg
sub
in
popf
cmp
into
imul
mov
or
out
and
mov
int
lods
lret
pop
xchg
enter
loop
out
je
jle
mov
and
inc
xchg
imul
jp
mov
cmp
jmp
jg
xor
stos
lcall
loop
popa
sti
rolb
pop
insb
mov
std
pop
sub
sti
xchg
and
lret
adc
loop
cmpsb
mov
mov
inc
dec
out
ja
adc
xchg
mov
jno
sbb
loopne
add
dec
data16
inc
adcl
popf
insb
sbb
loop
rorb
jbe
repnz
loop
mov
push
iret
gs
loope
sbb
ret
es
mov
test
mov
inc
push
sbb
add
dec
daa
jne
sub
and
inc
rcrl
cltd
adc
shl
xlat
repnz
loop
jmp
stos
push
xor
xor
push
jl
dec
add
sbb
rorl
mov
loop
mov
lahf
xchg
pop
mov
jecxz
adc
loop
push
sub
push
sub
psubb
loop
mov
adcb
fnstcw
aad
es
inc
mov
loop
push
xor
add
sbb
stos
jmp
jno
cmp
xor
loop
insb
sbbl
aam
or
fsub
or
shlb
push
ret
js
mov
push
out
and
dec
or
fstpt
loop
cmp
stos
xor
out
pop
stos
xor
or
or
xchg
jns
and
negb
xchg
loop
pop
jp
mov
mov
cmp
mov
shr
test
jo
loop
shr
push
dec
xchg
call
add
push
mov
loop
cmp
xchg
dec
shrl
cmc
add
mov
sar
sub
rcrb
ja
add
loop
add
outsb
shll
xchg
loop
jne
or
mov
adc
xchg
cwtl
mov
daa
out
lods
loop
test
xor
jmp
repnz
repz
shll
and
popa
enter
negb
loop
stos
mov
push
out
xor
popa
mov
clc
xchg
dec
in
imul
loop
xor
int
cmp
or
inc
push
enter
dec
nop
loop
push
xchg
sahf
rorb
mul
xchg
add
into
sbb
je
imul
out
loop
sbb
lahf
loope
loop
jecxz
cld
xchg
scas
sti
aas
loop
mov
mov
mov
je
stos
mov
fnsave
and
mov
jne
mov
lods
cmp
push
push
stos
dec
mov
or
lock
out
incb
insl
out
fnstenv
fistps
lock
loop
lret
dec
out
sahf
or
test
xchg
loop
not
adc
loop
pop
icebp
movsb
cwtl
pop
cmc
test
subb
xchg
cmpb
mov
xor
in
ficompl
cmc
iret
leave
imul
mov
xor
xchg
and
dec
in
cwtl
xor
jno
in
lods
and
or
sub
dec
cmp
adc
fwait
icebp
mov
jg
enter
decb
cmc
addr16
lock
cld
dec
jl
sbb
push
dec
loop
aas
incl
test
gs
mov
xchg
int
outsl
out
fwait
sub
js
add
fiadds
addr16
and
loop
mov
and
adc
push
cli
jns
jge
xchg
shl
rorb
daa
or
loop
inc
or
loopne
mov
jae
arpl
add
push
cmp
mov
push
imulb
push
mov
inc
dec
cmpsl
loop
sub
inc
xor
mov
jo
pop
jp
pushf
push
push
loop
cmp
ret
cmp
loop
sub
leave
fbld
mov
xchg
inc
loop
sbb
and
movsb
sbb
and
pmaxsw
or
cld
test
inc
sahf
push
lods
inc
inc
xchg
sbbb
loop
pop
mov
inc
loop
xchg
pop
shlb
dec
out
dec
cmpsl
fwait
nop
mov
add
sbb
adc
push
movsl
mov
sbb
add
in
push
push
sbb
sub
jmp
push
loop
push
ds
xor
push
mov
cs
push
inc
dec
fists
push
and
push
inc
jle
rcll
loop
cmp
test
sub
mov
out
shll
pop
jb
faddl
cmpsb
in
mov
xchg
push
sub
orl
loop
lret
sbb
es
mov
pop
shl
sub
lock
mov
sbb
ds
outsb
ss
jns
out
push
adc
jno
in
sub
ds
loop
jg
xchg
repz
pop
mov
nop
lcall
add
push
loop
xchg
pop
inc
daa
jnp
dec
das
sub
movsl
test
loop
jmp
loopne
ljmp
imul
jmp
mov
imul
xchg
fs
cmpsb
pop
lret
je
sbb
cmp
xchg
call
loop
xor
dec
aas
or
int3
mov
add
jno
cs
and
push
cmp
or
and
lret
pop
cmp
jecxz
mov
or
fldl
push
xchg
mov
bound
xchg
jno
push
daa
lods
int3
shl
inc
cwtl
cmp
loop
clc
xlat
mov
jge
enter
outsl
fs
cmp
loop
imul
rcrb
loop
jmp
js
add
jbe
popf
push
mul
push
mov
or
cmp
mov
addr16
xlat
pop
push
jne
sbbl
loop
shrl
jl
or
loope
lcall
mov
int
mov
adc
jg
mov
mov
in
popa
loop
aad
add
sti
xchg
loop
ret
push
cmp
cmp
pop
dec
dec
pushf
scas
xor
add
stos
aas
add
fdivl
mov
jle
leave
pop
rorl
arpl
jge
loop
mov
sub
xlat
cmpsl
shlb
imul
or
icebp
mov
js
stos
pop
in
loopne
loop
jle
roll
int
adc
add
xchg
aad
in
hlt
jecxz
mov
ja
and
sarl
xchg
adc
in
and
pop
addl
nop
loop
aam
mov
loop
sbb
es
sub
loop
cmc
mov
aam
pop
aaa
loopne
mov
mov
ja
shll
ret
push
cld
sti
movsl
loop
ljmp
mov
loope
out
cmp
aaa
inc
loop
mov
mov
hlt
loop
sbb
add
stc
or
mov
xor
arpl
xor
jecxz
and
cmpsb
ret
and
mov
fisubrs
insl
xchg
pop
inc
loop
into
sbb
mov
loop
jle
repnz
lahf
enter
xchg
and
xor
loop
pop
xchg
hlt
iret
jg
adc
push
loop
or
loop
sub
imulb
dec
loop
mov
or
sub
jmp
call
mov
add
bound
loope
jbe
lea
or
jae
loop
pop
xchg
stos
jb
stc
xchg
mov
movsb
pop
out
push
dec
stos
dec
mov
loope
cmp
mulb
add
pop
lods
xchg
push
lret
testl
or
xchg
movsb
mov
or
test
mov
loop
jno
mov
loope
cltd
pop
jl
xchg
sbb
pop
subl
rorl
cmp
pop
inc
xchg
jmp
nop
lret
stos
jg
mov
sti
test
add
testb
jno
mov
stos
or
add
loop
fwait
jecxz
pushf
sbb
jnp
pop
je
into
dec
loope
lcall
in
lds
das
push
stos
es
divb
jbe
jecxz
adc
xchg
in
cmpsb
fimuls
imul
loop
imul
loop
sub
lea
daa
pushf
mov
push
mov
pop
test
cmp
jmp
out
into
test
mov
fistps
mov
loop
xchg
std
ja
or
loope
push
mov
lcall
push
dec
aam
in
and
or
add
and
push
jge
out
or
in
insb
in
or
and
add
mov
jl
test
sub
ret
icebp
subl
fistpll
mov
push
int
adc
loop
mov
loop
dec
out
push
fldenv
loop
in
pop
cmc
insl
xor
out
loop
fs
adc
cmp
xor
cmp
add
loop
repz
out
jo
loop
adc
cmp
jno
sbb
out
shlb
xor
ss
arpl
pop
sbb
dec
xchg
sub
mov
xchg
cmpb
lea
mov
pop
inc
push
loop
fisubrs
sbb
jg
loop
xor
jo
js
sbb
xor
testl
int3
imul
cmpsl
sub
cmp
hlt
xor
jno
mov
jns
rorb
inc
push
xchg
mov
xor
call
add
loope
scas
sub
inc
xor
mov
imul
push
add
mov
call
stc
rcrl
dec
push
mov
rcr
or
loop
loope
mov
loop
push
hlt
adcb
loope
xor
movsb
mov
test
mov
icebp
loope
mov
add
sbb
loop
or
leave
and
pop
aad
sarb
daa
push
cmp
jge
jecxz
push
loop
xchg
leave
mov
test
mov
xchg
mov
mov
mov
imul
jno
sbb
hlt
sbb
int
loop
fs
aas
adc
or
dec
into
mov
pop
push
dec
fwait
jns
test
sbb
add
or
call
sbbb
dec
cld
mov
loop
and
mov
cmp
xchg
dec
subl
mov
and
xor
push
mov
dec
or
loop
jg
push
cmp
push
jle
mov
mov
pushf
sub
mov
jbe
sub
shrl
aas
cmpb
loop
adc
cld
jp
xorb
add
or
shr
loop
inc
and
mov
add
inc
repnz
fnstenv
mov
mov
js
out
push
sbb
pop
and
fmull
pop
fs
inc
int3
xchg
decl
sbb
lods
mov
pop
cld
movsb
in
loop
jge
jp
jb
lret
xchg
popf
dec
inc
cmp
leave
roll
sub
sbb
aas
lods
xor
in
leave
loop
outsb
pop
pop
and
das
xor
jb
mov
iret
imul
or
call
js
loop
aad
movsl
ficompl
mov
cli
mov
scas
sarb
xlat
xchg
out
sbb
and
fmulp
inc
shr
or
hlt
or
push
loop
lods
mov
outsb
loop
adc
push
mul
jle
sbb
jp
repnz
aad
cmp
loop
pop
cmc
rolb
mov
in
pusha
cmp
imulb
or
test
inc
sub
leave
and
jb
fsub
add
lret
xchg
stos
mov
cmp
pop
mov
xor
sbb
pop
pop
loop
sub
add
loop
ud0
lret
lahf
push
movsl
shrb
mov
xchg
insb
outsb
addb
loop
stos
jp
push
push
lods
mov
add
sbb
sahf
rol
arpl
jb
in
loopne
sub
out
add
push
loop
or
xor
adc
xor
int3
pop
outsb
sub
repz
in
inc
jl
rcr
xchg
enter
out
ficomps
jnp
aas
jl
loop
lds
inc
loop
loopne
lahf
jle
jl
jno
xor
xor
out
in
push
loop
lock
xlat
movsb
sub
add
fs
xor
lea
ss
loop
out
push
mov
sbb
xchg
and
loop
sarb
and
sub
add
loop
sub
mov
and
movsb
lcall
push
sbb
loop
enter
dec
shlb
mov
push
mov
xchg
xchg
rclb
inc
shll
movsl
push
mov
mov
xor
adc
shrb
test
loop
cwtl
jno
aaa
dec
dec
mov
sub
cmp
testl
jl
sub
xchg
insl
sbb
mov
add
call
icebp
jecxz
jns
shlb
into
adc
mov
out
or
jns,pt
rorl
lods
stos
sub
ljmp
dec
aas
shll
mov
or
out
xchg
dec
loop
xchg
push
inc
lods
push
lret
shll
cmp
and
loop
xchg
inc
pop
and
xchg
addr16
out
mov
inc
daa
loop
fnstenv
adc
sbb
adc
lock
jmp
sub
pop
orb
cltd
movb
mov
test
sbbl
fcmovu
dec
insl
int3
and
jmp
in
ds
nop
jp
outsb
loop
leave
jmp
or
dec
stos
mov
jecxz
insb
sub
mov
jecxz
jns
rcll
clc
and
or
and
loop
xchg
mov
sbbl
jo
out
test
mov
mov
pop
sub
jo
fsub
inc
mov
sub
jp
loop
cmc
stos
nop
repz
pop
mov
popa
icebp
cmp
jns
jp
out
mov
mov
sub
loop
loopne
xchg
pop
jnp
push
in
loop
jbe
repz
or
xor
aam
arpl
lods
mov
ds
loop
iret
arpl
sub
push
inc
hlt
cmpsl
cmp
jns
mov
in
jecxz
es
shlb
negb
gs
add
cmp
cmp
scas
push
outsl
loop
xchg
pushf
nop
add
in
roll
repnz
stos
loop
mov
add
jl
insl
xchg
jecxz
and
sub
pop
into
jae
sub
xchg
xchg
mov
cmpsb
out
loop
sbb
es
loop
xchg
je
and
lock
movsb
or
dec
loop
xlat
int3
xchg
in
jnp
loop
xor
add
jge
jg
xchg
mov
cmp
push
mov
stos
inc
std
and
fnstsw
mov
xchg
in
loop
mov
jle,pn
lret
pop
mov
sbb
xor
shl
xor
adc
jno
arpl
loop
adc
push
repz
mov
add
mov
divb
subl
jnp
outsb
out
jl
add
pop
lods
lock
loop
inc
pushl
ja
insb
loop
mov
scas
add
lods
push
jl
loop
les
call
in
or
xchg
outsl
dec
cmp
lock
loop
sbb
stos
ja
pop
mov
rcrb
data16
dec
add
mov
dec
loop
jo
int
xor
loop
sbb
push
ss
or
into
mov
xchg
xlat
pop
arpl
xchg
fists
jl
inc
popa
mov
stos
movsb
mov
pop
scas
pop
imul
int3
mov
mov
jl
loop
movsl
mov
loop
and
imulb
push
out
jbe
xor
loop
jb
add
mov
popf
je
push
movsb
shl
stc
or
mov
in
or
adc
loop
xchg
and
lock
inc
push
stos
sbb
xor
out
insl
loop
xor
xlat
outsb
or
loope
out
push
mov
cmpsb
fidivrl
mov
loop
jae
or
fsubr
add
shll
inc
test
inc
loop
lret
push
sbb
mov
dec
sbb
adc
xor
sub
in
loop
popf
jo
nop
or
shrl
mov
cli
mov
dec
fwait
aad
das
insl
inc
mov
sbb
test
dec
cmp
xchg
arpl
jns
jl
jmp
mov
add
daa
loop
imull
imul
sbb
jne
out
xchg
push
cs
fmul
mov
in
jmp
add
push
or
in
sub
jle
mov
xchg
pushf
mov
cmpsl
mov
daa
stos
jae
jmp
sti
or
cmp
cs
cwtl
jle
stos
loop
mov
push
mov
into
mov
mov
lock
cmpsl
scas
loop
aas
add
test
dec
sbb
out
jb
enter
push
int3
bound
out
int
test
in
mov
add
add
push
loop
ja
xlat
insl
dec
jnp
hlt
in
pop
out
cs
notl
add
and
loop
out
xor
or
push
cmpsl
fldl2t
insl
sub
movsl
or
out
jmp
outsl
xor
loop
mov
shl
loop
and
lock
fcomip
lds
jb
ret
loop
add
call
fwait
out
cli
ret
inc
push
out
mov
aad
cld
add
dec
fwait
mov
lock
cmp
js
hlt
arpl
loop
jecxz
cwtl
mov
inc
push
stos
cmp
add
sub
xor
mov
loop
mov
lods
in
ret
mov
or
dec
faddl
les
jno
stos
push
xor
inc
in
xchg
cmpsl
stc
dec
stos
ja
out
mov
cmp
cld
push
mov
loop
mov
movsb
loop
jge
push
loop
mov
or
pop
xchg
jns
sub
loop
es
and
inc
mov
jmp
dec
sarb
loope
arpl
lods
mov
dec
out
pop
pop
cmc
jl
shl
push
add
in
icebp
adc
mov
sbb
loop
arpl
pushf
jno
dec
icebp
push
jmp
inc
flds
cmp
out
inc
fidivrl
loop
fsts
cmp
cmp
out
dec
lock
jp
std
sub
testb
mov
jne
out
loop
push
ss
push
xchg
add
pop
imul
stos
aaa
adc
adc
adc
and
xor
enter
jp
mov
fistpl
mov
sub
mov
loop
daa
mov
mov
fs
stc
mov
repnz
repz
int
notl
xchg
jl
cmp
outsb
loop
cmc
fisubrs
stos
inc
shll
mov
jle
in
pop
mov
mov
mov
loop
cltd
dec
pop
pop
inc
jl
rcll
xchg
add
push
testb
or
shll
add
and
sub
loop
and
mov
jg
sub
lods
sahf
cs
in
mov
imul
xchg
pusha
loop
cmc
xlat
sbb
xchg
inc
loop
scas
dec
ss
push
xor
dec
loop
dec
sarl
push
out
enter
loope
xchg
and
inc
sti
push
scas
loop
fidivrs
pop
mov
mul
pop
jae
mov
cmpsb
cmp
add
dec
lcall
call
insb
loop
les
push
or
lds
and
in
jg
rdmsr
push
rcll
ds
push
addr16
movsl
and
xor
je
mov
gs
rorb
dec
cmp
dec
mov
loop
jae
inc
inc
outsl
jg
loop
xor
jge
pop
mov
push
or
loope
je
lret
pop
icebp
addr16
dec
fwait
jnp
and
mov
pop
mov
addl
test
int3
xchg
xchg
loop,pn
inc
cmp
pop
sbb
push
or
pop
popa
xor
adc
cmp
inc
outsb
cwtl
loop
xchg
pushf
loop
ds
out
or
mov
mov
sahf
mov
cwtl
fisubs
iret
pusha
lea
adc
dec
mov
or
fdivr
fs
jns
arpl
mov
mov
cwtl
xor
xchg
or
add
push
movntq
xchg
xchg
dec
xor
call
enter
and
and
jno
cmp
jmp
in
lret
jmp
hlt
inc
imul
movsb
sub
outsl
jl
or
push
xchg
insl
loop
inc
cmp
aaa
jle
loop
das
frstor
loope
incb
subb
jnp
jmp
fldenv
inc
push
out
and
pop
ret
mov
fwait
loop
dec
in
aad
dec
xchg
das
xor
mulb
dec
mov
mov
cmp
jns
sbb
mov
push
sbbl
mov
sbb
std
cwtl
or
das
loop
jno
jmp
push
cld
loop
push
lods
movsb
clc
test
pop
jno
xor
jmp
jg
or
jp
sbb
out
cmp
jmp
sub
fcmovnb
or
jno
xchg
sahf
popf
push
out
popf
xorl
mov
loope
pop
les
mov
push
in
and
push
loop
movsb
mov
clc
mov
adc
add
jmp
loop
fsts
movsl
loop
mov
adc
or
loop
pop
les
pop
jo
jmp
adc
aam
add
aas
inc
sbb
jl
inc
and
xchg
scas
mov
push
mov
pop
loop
xchg
mov
cmc
push
loop
pusha
cmp
mov
pushf
nop
sahf
xchg
in
out
sbb
push
jae
sub
jp
push
imul
mov
ret
test
and
sub
loop
std
pop
xor
inc
dec
mov
mov
pushf
dec
and
ja
xor
or
mov
dec
or
test
inc
sbb
loop
mov
rclb
adc
loop
test
ret
cmp
dec
cltd
xor
mov
mov
data16
or
push
loop
loope
repnz
loop
adc
mov
loop
aas
inc
xchg
addr16
nop
xchg
loop
pusha
pop
mov
sarl
test
add
and
stc
adc
mov
scas
dec
in
xchg
xchg
sbb
mov
mov
into
fsubp
push
sbb
inc
and
test
scas
adc
test
mov
xor
icebp
sbb
pop
out
cwtl
cmpsb
mov
mov
rol
jns
pop
lods
xlat
in
jbe
mov
loop
pop
mov
mov
addr16
pop
inc
into
xchg
xchg
out
repnz
in
loop
testb
mov
pop
push
nop
jno
sbb
mov
loop
daa
dec
pop
xor
jbe
xorb
loop
push
sbb
xchg
push
jl
loop
shlb
imul
jecxz
loop
push
add
add
pushl
sub
jnp
nop
fldenv
xchg
lret
pop
jecxz
pop
aaa
loop
sbb
je
jmp
loop
push
sub
repz
jno
insb
lret
lret
and
adc
dec
add
sub
in
fidivrs
out
fists
loop
pop
sbb
xchg
loop
popf
cmp
mov
xchg
loop
fisubl
adc
popa
jno
rcll
int
xor
icebp
outsl
jae
or
jle
xor
loop,pt
lret
notl
and
out
add
jp
and
sbb
pop
fnsave
rorl
lods
icebp
bound
testl
out
and
xor
dec
add
inc
ret
in
call
lds
mov
fiaddl
inc
ret
xchg
xor
out
cmp
icebp
inc
cmp
in
pop
es
icebp
test
inc
jae
loop,pt
jbe
in
dec
lock
cmp
lcall
loop
push
sbb
loop
fmull
stos
dec
std
out
loop
sbb
jle,pn
int3
dec
test
inc
xchg
loop
data16
lret
dec
mov
sbb
jne
loop
loope
jg
xor
and
insb
pop
mov
mov
pushf
cwtl
jg
lods
movsl
loop
inc
push
jmp
push
stc
into
loop
sub
int3
push
insb
push
add
je
loop
sbb
loop
sub
mov
xchg
adcb
mov
loop
movsb
mov
push
notb
loop
mov
jo
loop
and
cmpsl
lcall
in
loop
cmpsb
and
sub
sub
fiaddl
loop
andl
div
pop
lahf
loop
sbb
fcmovnu
pop
cmp
sbb
add
scas
sub
and
loop
into
cmpsb
xchg
in
imulb
shl
jb
rclb
std
lahf
rcrl
int3
subl
dec
loop
sbb
mov
in
stos
les
inc
add
es
push
hlt
jl
repnz
aad
mov
repz
mov
loop
insb
add
repnz
ja
push
fcmovnu
dec
xor
sub
jbe
or
push
xchg
in
call
outsl
loop
repnz
add
mov
jns
fisubs
push
loop
fwait
xchg
dec
add
cmpxchg
mov
xchg
cmp
fdivrs
push
inc
push
das
cwtl
rcr
jo
aaa
dec
movsb
arpl
sbb
sbb
mov
xchg
inc
fst
leave
loope
shll
ret
mov
stos
gs
adc
jns
loop
test
dec
bound
xchg
push
cwtl
inc
mov
add
jmp
ss
setb
dec
repnz
int
sub
mov
xor
or
iret
inc
push
jb
mov
repnz
out
xor
addr16
icebp
push
inc
jns
in
xor
mov
sub
scas
out
inc
push
pop
in
out
inc
adc
xor
daa
and
addr16
dec
xor
sbb
push
sarl
ffreep
dec
sbb
xchg
sub
cld
clc
mov
loop
push
imul
pop
mov
hlt
in
ret
xchg
stos
add
sahf
ret
sub
mov
fimull
jmp
mov
loop
movsb
aaa
jg
aad
es
push
sbb
add
out
xlat
testl
and
lret
mov
inc
push
add
icebp
mov
mov
sub
std
mov
push
loope
lock
sbb
push
jmp
xchg
int3
sbb
push
inc
push
in
loop
dec
xor
or
dec
out
popf
hlt
adc
nop
fnstcw
or
loop
cmp
in
dec
sub
shl
cli
loop
jl
mov
das
jbe
loop
sbb
push
adc
add
call
lods
sub
loop
adc
inc
push
shrl
fimuls
mov
jne
test
xchg
mov
cmp
adc
or
rclb
loop
orl
lcall
call
loop
cmc
xchg
clc
ds
sbb
popf
jbe
jp
inc
js
pop
mov
clc
or
add
mov
leave
stc
mov
outsb
orb
loop
repz
adc
jmp
add
adcl
mov
stos
inc
mov
daa
cwtl
loop
push
cwtl
loopne
adc
mov
pop
imul
imulb
sbb
je
sub
popa
pop
cs
shlb
xor
jne
mov
mov
xchg
out
ret
lods
mov
sub
fcmove
scas
call
lahf
into
loop
aas
mov
dec
cmpsl
xor
out
faddl
loop
mov
or
std
jae
loop
adc
xchg
dec
loop
xchg
add
mov
mov
test
fcmovne
outsl
test
push
insl
loop
mov
inc
arpl
loop
jo
adc
cmp
sbb
shl
js
stos
loop
mov
pusha
pop
loop
add
clc
or
andl
lahf
test
loop
push
jnp
sub
sub
push
adc
xchg
js
fsubs
or
inc
xlat
lcall
lods
add
jbe
dec
push
lcall
stc
cli
test
aad
enter
leave
mov
loop
out
or
addl
loop
out
add
loop
leave
cwtl
in
mov
cmp
ds
jmp
xchg
cmp
sbb
std
push
loop
hlt
mov
add
xchg
push
mov
or
or
repz
push
mov
sub
add
fidivl
mov
loop
ja
sbb
cmp
xchg
loop
inc
adc
aas
add
loop
and
stc
pop
sbb
daa
scas
dec
and
jae
lcall
dec
or
or
sahf
cmp
lods
pop
mov
into
xchg
stos
push
imul
daa
fstl
xchg
mov
es
pop
je
or
orb
mov
cmp
xchg
or
mov
cmp
loop
jne
push
shll
leave
mov
aad
aaa
out
out
hlt
pop
push
out
sahf
loop
mov
and
add
negb
cmp
xor
and
inc
aas
sbb
mov
jns
mov
mov
mov
aam
cs
inc
dec
and
stos
call
mov
mov
mov
stc
and
rcl
loope
lods
in
test
loop
adc
lahf
outsb
push
ret
loope
dec
pushf
and
fwait
or
shll
mov
call
adc
add
out
lods
xor
inc
xor
dec
cmp
cmp
daa
mov
int
push
in
adc
mov
loop
mov
jecxz
rcll
ret
test
lock
outsb
sahf
lcall
lret
ret
dec
insl
push
loop
andl
dec
lock
pop
jge
cmc
add
ret
sub
int
popa
and
xor
dec
loope
or
push
data16
psubd
loop
mov
fiaddl
repz
orb
int3
daa
pop
jecxz
mov
loop
testb
add
push
out
frndint
sbb
stos
and
lcall
xor
lcall
fdivl
jmp
mov
dec
out
bound
fs
jp
loop
ja
mov
add
stc
dec
loop
dec
sbb
jle
repnz
push
mov
xchg
push
lods
jae
cmp
jge
sub
jno
sub
dec
test
cmp
xchg
sarb
lea
jnp
jl
frstor
push
loop
xchg
adc
or
movsl
repz
jbe
cmp
loop
stos
sub
cld
inc
pop
jae
into
sub
mov
sbb
or
xor
mov
in
iret
clc
pop
jp
mov
scas
dec
cmp
test
mov
pop
xchg
mov
xchg
movsb
push
jmp
mul
outsl
push
repnz
pop
add
pop
loop
xchg
loope
sbb
outsl
mov
cli
icebp
add
in
out
iret
sbb
repz
lcall
pop
add
addr16
je
loop
sub
mov
lods
and
adc
ret
adc
sub
rorl
loop
mov
push
cmpsl
stc
je
jno
sbb
out
sub
sub
loop
jp
push
add
adc
scas
mov
inc
gs
outsb
loop
daa
ret
ds
lret
cmp
cltd
dec
mov
sub
and
dec
fistl
push
push
jb
push
mov
decl
loop
or
jl
movsl
fwait
scas
lock
inc
mov
jle
aas
fs
les
std
loope
ret
cmp
dec
cmp
ja
sub
or
fiaddl
out
call
mov
ret
or
ret
push
jbe
jns
cmp
pop
out
push
pop
out
and
daa
loop
mov
xchg
insl
dec
lods
shll
loop
lret
jecxz
fwait
jg
pop
loop
xor
mov
and
in
push
push
mov
insb
fldl
shrb
push
lods
jo
cmp
pop
out
dec
and
mov
popf
push
push
adc
sbb
and
outsb
movsb
addb
jle
cmc
out
scas
mov
outsl
mov
inc
loop
sub
hlt
movb
and
rcrl
out
addb
sub
sbb
jae
lods
mov
rorb
icebp
or
mov
fwait
ds
loop
or
mov
stc
xchg
rcrl
loop
pop
int
cmp
ret
xchg
loop
sbb
gs
loop
addb
in
push
pop
add
inc
sub
lods
lret
loop
pop
icebp
mov
add
adc
push
cmp
sbb
jno
or
lcall
and
jne
mov
add
mov
adc
push
jge
mov
or
jmp
hlt
add
cli
xor
insb
and
testl
and
cli
ss
push
in
jbe
xchg
adc
inc
out
clc
fimull
push
xlat
pop
or
out
jae
push
ret
fsubrl
add
pusha
jne
lock
loop
out
xor
jns
cs
mov
loop
les
mov
inc
push
bound
mov
mov
out
loope
add
mov
pop
adc
leave
data16
addr16
andl
shr
test
or
lcall
mov
loope
xchg
stos
icebp
mov
ss
or
out
dec
test
pop
loop
xchg
pusha
inc
loope
mov
adc
shll
mov
shl
loop
cmp
mov
cmc
loop
jg
jb
sbb
sbb
dec
dec
scas
loop
stos
sbbl
lods
loop
pop
loope
popa
sbb
xchg
mov
mov
xchg
adc
out
loop
cmp
lods
or
jbe
cmp
rcrb
mov
pop
pusha
jmp
adc
mov
loop
xchg
or
and
inc
loop
sub
or
arpl
cs
or
sbb
adc
fstl
int
mov
ds
fdivs
add
mov
and
leave
loop
or
test
lods
popa
loop
lock
negb
mov
test
inc
jb
repz
jne
xchg
jno
add
out
out
pop
loop
xor
push
fnstenv
roll
cmp
inc
pop
std
fldl
loop
mov
xchg
scas
das
jbe
loop
push
and
jg
pop
iret
loope
test
xchg
jmp
xor
out
inc
lahf
xchg
add
adc
loop
movsl
test
mov
jno
xchg
int3
addr16
sbb
lret
dec
mov
lcall
jno
stc
pop
lods
bound
or
sub
outsb
dec
clc
or
mov
loop
xchg
lea
pop
dec
es
mov
jno
int3
pop
cwtl
testb
js
std
mov
bound
dec
mov
inc
inc
pop
mov
ret
xchg
movsb
xchg
jecxz
push
repz
dec
dec
sbb
movsl
jb
rorb
incl
mov
jp
push
pop
and
int
mov
and
out
div
pop
fwait
mul
sub
loop
jle
push
insb
dec
stos
pop
mov
rolb
loop
cltd
aam
xor
into
movsl
add
loop
jge
loope
and
push
loop
lret
push
dec
jo
les
fs
jnp
add
add
sbb
loop
in
js
xorl
xor
out
sub
lods
sbb
imul
clc
int
or
and
pop
mov
dec
mov
dec
loop
add
adc
fldt
cmc
jmp
push
loop
pusha
xchg
jge
add
adc
cs
les
iret
insl
mov
push
and
mov
mov
xchg
addr16
pop
inc
push
ja
xchg
js
and
mov
cld
jle
into
mov
inc
jmp
add
pushf
push
out
pop
adc
or
inc
push
into
mov
inc
ss
lcall
mov
pop
cmp
in
jecxz
xor
add
rorb
rcll
inc
mov
and
ss
cmp
pop
jl
stos
movsl
sbb
nop
test
fiaddl
aam
int
mov
out
mov
imul
cmc
js
shl
int
jg
xor
lahf
jno
jns
dec
cmp
call
pop
jns
jmp
xor
imul
sahf
bnd
test
pop
mov
loop
cmp
mov
adc
cmpsb
and
enter
and
inc
cli
scas
out
loop
dec
call
out
xchg
sub
and
lret
sahf
hlt
loop
jg
pop
xlat
movsl
and
add
addl
xor
loop
and
rcl
aas
stos
movsb
arpl
and
movsl
ficompl
leave
pop
loop
lret
add
jle
ja
leave
mov
in
loope
test
shl
mov
stos
leave
dec
imul
dec
push
xor
das
or
xchg
loope
int
jge
sbb
xchg
loop
sahf
adc
loope
pusha
inc
and
leave
fwait
mov
pop
or
jns
je
and
imul
fcmovb
loope
outsb
add
jmp
mov
loop,pt
add
and
das
lahf
dec
sarl
mov
leave
dec
xor
mov
loop
out
sub
mov
outsl
dec
jecxz
add
call
fisttps
jmp
loop
aas
pop
in
pop
les
mov
sub
lret
loop
outsb
and
and
or
xchg
loop
adc
push
xlat
push
dec
mov
or
fucom
push
ja
pop
cld
out
push
inc
dec
xor
sahf
fnstcw
ds
mov
call
or
xor
mov
add
nop
outsl
sub
out
scas
scas
dec
nop
loop
cltd
int3
sarl
sub
into
cli
jno
xor
ds
lds
lods
std
loope
push
adc
add
xor
call
inc
pop
loope
cmp
insb
aaa
test
push
mov
jae
aad
jbe
stos
dec
adcb
mov
sbb
sub
incl
enter
repz
mov
insb
ljmp
ret
aas
call
mov
push
loope
loop
mov
pushl
iret
pop
and
imul
loop
out
mov
xchg
sarl
mov
push
xor
in
outsl
ja
cmp
test
pop
aad
loop
in
cmp
clc
in
orb
insb
stos
aad
loop
data16
mov
sbb
cltd
push
xchg
movsb
cwtl
push
loop
mov
loop
and
outsl
mov
test
inc
loop
call
daa
bound
adc
mov
dec
shl
jb
test
lret
lret
int3
loop
aas
inc
or
loop
add
jne
loop
cmp
ret
fwait
sbbb
out
aas
into
or
out
stos
jo
dec
lods
loop
cwtl
pop
cs
add
int
fstl
sub
loope
hlt
rcrb
mov
loop
xchg
out
mov
sbb
dec
insl
cwtl
loop
aas
xchg
aam
pop
pop
jne
das
nop
call
call
mov
xor
lcall
lahf
fdivrs
inc
adc
dec
pop
cld
mov
lock
push
in
loop
out
insb
dec
xor
inc
add
loope
push
leave
adc
les
dec
xchg
cmp
cltd
popf
js
xchg
loop
and
shrl
push
mov
mov
sahf
stos
movsl
call
push
or
shl
or
mov
loop
cmpsb
mov
ss
into
add
aaa
aas
fwait
pop
pop
and
push
xchg
insl
adc
pop
mov
fsubrs
lock
cmp
or
ja
fwait
xor
loop
mov
enter
ds
lods
pop
outsb
out
jle
insb
movsb
jge
pop
shlb
loop
mov
inc
data16
dec
cli
loop
xchg
stos
push
cld
or
adc
or
sarl
popf
push
jmp
or
jnp
pop
test
mov
adc
loop
fdivrl
outsl
loop
cld
fcmovb
sti
lret
adc
loop
mov
or
sub
out
adc
test
ds
leave
or
and
insl
out
sti
loop
js
ljmp
loop
inc
mov
pop
loop
pushf
dec
lret
sbb
loope
hlt
nop
cmp
inc
push
jg
xor
xchg
xchg
pop
out
mov
cmc
mov
push
das
filds
ret
fdivrs
mov
lret
shl
mov
in
pusha
fstp
push
loop
daa
push
jb
mov
cmp
inc
inc
mov
or
rol
aam
add
mov
imul
loop
xchg
and
stos
and
dec
loop
fdiv
js
sub
sbb
push
loop
std
push
mov
xor
mov
cmp
movsb
ret
push
and
in
cmp
push
push
inc
mov
and
add
pop
add
into
stos
call
jp
xchg
leave
and
arpl
mov
cld
in
repz
out
test
pop
or
stc
add
xchg
test
lods
lret
mov
jp
add
fdivp
or
add
jecxz
ret
daa
fs
andl
cld
loop
shl
add
repz
mov
imul
push
add
xor
xor
iret
stos
int3
push
ds
shl
loopne
shr
or
jge
jl
mov
ja
in
outsb
lcall
in
jb
loop
imul
dec
pop
call
outsl
loop
sub
lods
add
es
xchg
ds
dec
loop
inc
in
clc
std
jno
jecxz
rcll
addr16
ret
xchg
mov
popf
xor
mov
pop
lods
std
jecxz
xor
inc
mov
test
gs
arpl
and
shll
shll
clc
loop
fwait
mov
cmp
lcall
gs
and
mov
aad
and
pop
dec
fisttps
adc
jge
stos
lret
rolb
in
loop
sahf
pop
aaa
insl
dec
test
loop
push
sub
inc
sbb
inc
add
into
jne,pt
fwait
test
fcmovne
xchg
sbb
xor
std
loope
clc
xchg
or
xor
jbe
mov
pop
daa
mov
jge
cld
add
inc
sbb
jmp
loope
push
dec
adc
jle
and
out
out
loop
stos
arpl
lods
sub
pop
test
fisubl
scas
adc
loop
xor
lret
insl
loop
add
add
pop
rclb
ss
push
mov
push
testl
dec
jns
scas
bound
jb
adc
xor
pop
in
in
push
fisttpl
nop
push
je
arpl
sub
loop
ret
mov
add
pop
push
loop
pop
sti
or
mov
and
adc
push
mul
push
out
pop
pop
les
jns
mov
data16
pop
sar
jae
push
pop
sub
test
cwtl
or
or
loop
sahf
push
rcr
push
pop
loop
cmc
sub
in
mov
adc
xchg
pop
scas
movsb
loop
xchg
out
popa
lods
and
jmp
push
icebp
jns
lock
and
js
sbb
push
mov
in
ss
outsb
loop
jle
mov
js
leave
sbb
lea
std
out
and
sbb
rclb
cmp
or
fs
xchg
in
stos
xchg
aad
xchg
and
jl
push
jge
sub
scas
xlat
or
dec
leave
xchg
imul
in
push
aad
lretw
loop
out
sub
mov
dec
lret
add
arpl
in
loop
push
pop
dec
mov
loop
cmp
lret
jle
cmp
test
adc
daa
pushf
push
pop
xchg
filds
xor
insb
and
sub
sarl
jl
shll
mov
popa
cmp
das
ret
loop
jmp
sbb
mov
es
out
repz
push
sbb
jg
mov
aam
xchg
jb
repnz
daa
cld
int3
push
ret
push
das
js
push
mov
jbe
jle
fnstenv
push
jecxz
fwait
inc
loop
sahf
push
inc
or
test
ret
jp
leave
inc
in
enter
rorb
push
movsl
add
xchg
adc
imul
cmpb
adc
jl
inc
mov
loop
lods
mov
sub
std
loop
mov
or
scas
loop
scas
dec
lcall
ja
mov
in
sbb
or
inc
loop
xchg
add
and
xchg
fxch
decl
jg
sub
jne
ret
push
sub
sbb
and
xor
xor
pop
mov
ds
clc
and
insl
dec
add
out
ds
pop
outsl
add
jns
out
cmp
stc
scas
push
sar
adc
jp
movsl
in
xor
sub
or
in
pusha
stc
adc
jno
xchg
ficoml
push
fsubp
clc
mov
dec
ret
iret
jg
or
or
je
bound
and
pop
pushf
mov
aaa
arpl
cmp
pop
push
test
dec
mov
xchg
adc
loop
and
leave
loop
inc
cwtl
push
mov
in
nop
dec
ds
out
aaa
xor
loop
bound
mov
jge
pop
dec
pop
inc
mov
imul
mov
inc
mov
not
mov
pop
mov
loop
addr16
add
aas
mov
out
pop
pop
fisubrl
popf
jns
rcll
adcl
loop
lretw
mov
mov
in
test
pop
outsl
sti
ret
xchg
pop
pushf
push
or
inc
push
enter
out
inc
and
cmp
shlb
fimuls
out
fsubr
stos
outsl
cli
sti
xor
xchg
xor
and
push
inc
hlt
icebp
push
outsb
sbbb
loop
jnp
sbb
lds
cmp
cmp
jl
push
ror
movsb
loop
dec
push
adc
icebp
dec
dec
jp
popf
mov
loop
je
movsl
push
xor
dec
insb
sti
cmp
sub
insl
and
jno
mov
sahf
loop
xlat
pop
xchg
imul
pop
cwtl
sarl
nop
mov
repz
add
or
shrl
dec
inc
add
pop
call
movsb
or
mov
stos
insl
loop
scas
and
cmp
or
jle
add
or
sbb
pop
insb
loop
xchg
mov
xchg
push
or
push
mov
imul
or
cmc
xchg
mov
mov
loopne
dec
loop
es
or
sub
add
jae
adcb
test
sbb
push
mov
pop
loop
clc
aas
insb
xlat
std
lods
add
sahf
xchg
in
andb
pop
out
jmp
xchg
loop
pushf
cmp
ja
sbb
incl
push
xor
dec
jbe
cmpsl
je
lock
push
callw
cmp
sub
fisttpll
rcrl
shlb
lahf
rorl
pushf
dec
xchg
fnsave
les
fs
push
std
jge
pop
inc
daa
lret
dec
pop
rcll
cmp
lods
inc
ret
jecxz
xchg
loop
mov
loop
pop
test
or
call
sbb
dec
cmpsb
inc
loop
lock
inc
lcall
or
jne
loope
pushf
mov
jns
lea
cmp
loop
pusha
movsb
movsl
mov
jp
xchg
xor
ret
adc
or
shl
cwtl
int3
es
fld
pop
mov
sub
and
mov
cli
cmp
push
mov
adc
inc
add
sahf
jns
dec
xchg
call
test
ss
lret
andb
mov
leave
push
jg
cmpsl
pop
fdivl
sbb
enter
subb
jp
sub
loop
lret
or
add
sbb
cli
xor
shll
push
icebp
mov
fdivl
sub
clc
dec
and
pop
es
shr
mov
fistpl
jge
sbb
outsb
sbb
mov
loop
in
sti
xchg
insl
loopne
fwait
loop
pop
inc
scas
fst
cmp
mov
mov
shrl
sub
and
cmc
push
mov
sbb
xchg
std
or
jl
loop
fcompl
inc
daa
popa
lods
jecxz
loop
pop
scas
and
cmp
leave
or
mov
in
rcpps
sbb
loop
mov
pop
dec
mov
je
imul
loop
pop
enter
js
jns
pop
pop
scas
jmp
jbe
std
sbb
mov
xchg
cmp
loop
xor
mov
scas
jbe
out
adc
pop
xchg
pop
int
loop
xchg
cmpsl
cmp
jmp
scas
shll
xlat
daa
loop
mov
xor
loop
fadd
test
inc
ss
shlb
jne
loop
mov
cmpsb
nop
loopne
loop
outsb
pop
sbb
and
mov
lods
xor
shl
cmpsl
xor
sub
mov
jle
pop
loop
dec
test
dec
loop
inc
add
jg
xor
repnz
loop
cmp
insb
pop
or
jmp
pop
pop
scas
ja
push
rolb
push
inc
out
or
mov
push
in
int3
shl
dec
jbe
and
insl
out
loop
push
adc
pop
loope
fs
fucomp
sub
mov
mov
add
cmp
cmpsb
jecxz
add
es
loop
push
aas
stos
mov
scas
aaa
cmp
addr16
mov
jmp
loop
push
cli
andb
idiv
or
sbb
adc
das
outsb
dec
int
jne
loopne
mov
repz
orl
stc
mov
or
jg
push
test
lods
sbb
jle
xchg
pop
imul
inc
loope
js
mov
test
loope
xchg
out
mov
xor
lret
cmp
jle
sbb
and
icebp
mov
sub
data16
cltd
sbb
rorl
std
mov
cmc
int3
mov
js
pop
mov
cmp
xchg
and
pushf
ljmp
inc
loop
pusha
fwait
scas
fisttps
sahf
mov
es
pop
mov
imul
pop
cld
loop
dec
sti
cmc
sahf
cmp
loope
push
mov
xchg
cmp
js
dec
xor
loop
and
loop
mov
mov
popf
flds
in
xchg
outsb
mov
loope
dec
jg
inc
fadds
mov
popa
xor
aam
add
sarl
lods
addr16
mov
or
adc
push
mov
stc
cltd
mov
loop
xchg
xchg
out
loop
adc
imull
inc
mov
mov
loop
mov
jo
mov
popa
arpl
jnp
loop
outsl
or
ss
cmp
sbb
neg
push
dec
stos
in
mov
sbb
ja
scas
fisttps
cmpb
imul
push
xor
sub
mov
push
loop
or
adc
mov
xchg
push
jns
adc
loop
xor
mov
in
mull
lret
inc
push
inc
shll
cmc
mov
dec
mov
loop
push
outsb
testb
adc
add
test
cmp
loop
adc
sub
sbb
into
mov
and
ret
shr
jecxz
loop
mov
pop
and
das
cmp
jb
or
repnz
jle
inc
jns
loop
fists
lods
mov
adcb
mov
loop
ret
fwait
mov
mov
xor
inc
inc
outsb
loopne
mov
in
mov
pop
fnstenv
mov
rorb
loope
stos
cmpsl
pop
jle
sbb
test
push
sbb
cmp
daa
fdivrs
mov
sub
xchg
jp
clc
mul
faddl
imul
rdtsc
data16
jns
and
jmp
xchg
mov
or
pop
aam
loope
iret
or
add
or
mul
sbb
in
out
xchg
loop
enter
pusha
ds
mov
call
loop
decb
mov
lods
loop
rcr
xlat
call
sbb
std
sub
or
data16
pop
mov
loop
cltd
push
mov
mov
add
and
loope
lret
sti
sub
push
cmc
or
out
sub
mov
adc
xor
addr16
cmp
leave
adc
out
rorl
rcll
xor
daa
loopne
lock
push
pop
fsub
rcll
aam
or
push
jo
and
out
add
stc
stc
clc
fucomip
dec
dec
push
out
stos
and
jo
xor
hlt
dec
out
movsl
or
dec
and
push
lds
add
push
jo
mul
mov
insl
adc
pusha
cwtl
ret
or
dec
inc
loop
mov
push
imul
push
add
pop
loop
punpckhbw
outsb
inc
stos
pop
inc
addb
jle
mov
imul
xor
setl
loop
inc
dec
lcall
mov
daa
repz
insl
shll
xchg
out
xor
adc
xor
jno
insb
movsb
ss
loop
test
dec
add
mov
xchg
loop
sub
fistps
cwtl
dec
data16
jne
jg
lret
ds
stc
sbb
imul
mov
sbb
in
dec
xor
cmp
sub
icebp
jno
mov
dec
adc
inc
lods
push
inc
testb
inc
loop
roll
cmp
lcall
gs
stos
dec
ror
in
bound
cmp
mov
loope
lods
dec
cli
out
sub
jecxz
xchg
mov
pop
imul
add
outsb
movsb
or
in
xor
loop
cld
push
imulb
push
out
mov
pop
sti
xor
aad
stc
mov
nop
roll
sbb
call
movsb
leave
jns
loop
dec
add
jnp
cwtl
loop
cmc
mov
int
ja
out
mov
or
loop
mov
cld
mov
jge
or
int
pop
in
scas
out
les
repnz
cmp
jne
nop
cltd
arpl
clc
dec
subl
mov
lahf
cltd
pop
hlt
and
sbbl
or
ret
loop
jp
in
test
stc
sub
jb
inc
and
cltd
lods
shlb
and
cmp
mov
mov
add
push
js
adc
fadds
inc
mov
xor
push
mov
mov
cmp
mov
loop
fists
xchg
loop
cmpsl
sbb
push
mov
xchg
mov
repz
popa
mov
test
loop
inc
jnp
or
out
inc
pop
loop
test
push
mov
mov
push
or
loop
aad
sahf
jp
outsl
std
loop
jmp
test
insl
add
inc
and
in
iret
cmp
pusha
jp
xor
mov
mov
fs
pop
mov
outsl
out
cmpb
mov
cltd
in
clc
sbb
mov
iret
adc
es
mov
popa
aas
out
mov
cmc
aad
mov
jne
jp
std
lret
loop
mov
mov
cmp
jecxz
ret
jg
insb
mov
imul
push
out
inc
or
ret
loopne
pop
test
notl
mov
mov
out
add
sahf
movsb
loope
testb
sbb
std
push
cmp
icebp
mov
inc
ret
in
nop
mov
stc
jbe
fidivrl
pop
push
imul
cltd
mov
loope
aaa
jg
xchg
jbe
and
call
test
notl
jmp
add
pop
clc
jb
sti
sbb
cwtl
push
dec
adc
sub
out
je
sti
daa
xchg
call
lahf
and
pushf
push
aad
adc
xlat
loop
push
jo
sbb
add
jmp
idivb
imul
dec
mov
jne
inc
jge
into
xchg
mov
pop
jmp
mov
or
jl
cmp
jno
dec
add
sti
nop
inc
mov
lock
or
pop
or
mov
and
in
stc
xchg
fwait
pushf
scas
xor
xor
mov
xchg
push
bound
and
cmc
xchg
lret
cld
or
faddp
out
sbb
repnz
mov
mov
loop
pop
mov
stos
loop
jmp
pop
or
dec
inc
jbe
ret
add
hlt
scas
sar
in
pop
pop
xor
bound
inc
adc
stos
sti
loop
fdivl
mov
lahf
push
mov
cmp
jp
jmp
pop
pcmpeqb
iret
fstpl
or
les
call
jae
inc
mov
out
push
cmp
lock
lahf
into
nop
push
dec
in
bound
jmp
jl
cmp
clc
push
and
notl
jle
push
mov
or
mul
out
lock
mov
mov
loope
mov
outsl
lahf
dec
ret
lret
jnp
mov
jge
call
sub
out
push
loop
rcl
repz
or
loop
cltd
sub
pop
mov
inc
lret
jmp
inc
sbb
loop
pushf
into
dec
sbb
push
aam
gs
mov
xchg
mov
push
or
loop
icebp
testl
sub
and
xchg
jle
mov
dec
mov
lods
addr16
cmc
in
loop
mov
pop
pushf
bound
xchg
loop
sbb
jnp
test
jns
push
mov
js
out
enter
fdivrl
shrl
out
and
inc
scas
loop
stos
push
mov
loop
add
ja
repnz
pop
es
in
sahf
pusha
loop
test
xor
lret
loop
in
ss
fimull
roll
out
in
mov
outsb
loop
push
add
icebp
pop
cmp
jo
stc
sub
cmp
mov
cwtl
scas
jecxz
inc
and
test
inc
dec
mov
lcall
dec
sahf
loop
nop
dec
xor
cltd
xchg
adc
sbb
das
add
gs
push
dec
outsl
leave
xchg
mov
rcrl
or
push
imul
mov
and
or
mov
movsl
inc
scas
lock
lcall
push
aas
loop
fcomip
imul
cmp
icebp
call
dec
lods
lcall
jecxz
xor
mov
adc
enter
adc
das
les
jl
xchg
ja
cltd
sbb
push
mov
jl
cli
dec
or
add
lret
xchg
outsl
in
stc
sub
mov
jnp
xchg
scas
shll
ret
in
or
pop
mov
mov
or
dec
adc
pop
mov
cs
dec
pop
lods
outsl
ret
add
loop
mov
adc
inc
cmp
fwait
rcr
push
push
inc
inc
mul
fdivs
loop
sbb
xor
sbb
xchg
loop
sti
test
sub
leave
mov
frstor
insb
arpl
or
loope
aaa
clc
push
jnp
jb
outsl
dec
add
mov
mov
xchg
pop
out
sub
dec
shl
frstor
std
aas
shl
xchg
in
loop
jo
cltd
sti
lods
cmp
jno
mov
dec
mov
cmpsb
out
xchg
fcmovne
loope
lcall
lods
add
jne
sub
xchg
xor
mov
pop
out
scas
jno
or
pop
call
lcall
hlt
jp
mov
sub
add
das
mov
sbb
test
inc
xchg
jmp
not
lds
bound
loop
cld
xor
rcr
idivl
loop
sbb
les
call
stos
push
jbe
lods
add
jnp
mov
sahf
jmp
ret
fbstp
aad
fld
loop
or
andb
cld
mov
rolb
cmp
out
mov
shll
inc
cmpsl
leave
imul
and
add
fsubp
repz
or
mov
lods
popf
jae
sbb
xchg
and
push
gs
imul
push
cmp
sarl
mov
nop
cmpsb
loop
popl
popf
adc
sti
jge
out
cmc
mov
pop
mov
jp
mov
adc
mov
xor
idivl
xor
aad
jge
ret
stc
shll
mov
rclb
mov
inc
in
call
mov
ret
loopne
xchg
ss
dec
mov
cmp
adc
add
popa
das
inc
sbb
push
insl
push
cmp
repz
int3
pop
pushf
dec
and
sub
int
xchg
orl
aas
pop
sub
fwait
loop
jg
mov
lret
sbb
xchg
mov
mov
popa
or
data16
repnz
lea
inc
out
loop
sti
xchg
shlb
jno
push
cmpsb
push
loopne
and
movsl
loop
jg
lcall
hlt
xlat
cmp
push
loop
add
xchg
loop
add
loope
lds
arpl
mov
cli
adc
pop
jnp
push
mov
into
je
push
jo
and
test
jnp
or
mov
into
sub
or
jge
out
xor
dec
loop
lcall
loop
dec
sub
outsl
loop
mov
nop
mov
sub
pop
push
in
add
cwtl
jns
enter
push
subb
loop
divl
xchg
hlt
lret
shrl
stos
jp
add
scas
loop
adc
jbe
sub
push
lods
mov
std
sbb
xchg
fwait
mov
xchg
jns
pop
dec
mul
sahf
pop
push
lds
test
stos
or
imul
jns
xor
jmp
mov
out
ret
mov
mov
inc
lret
loop,pn
add
add
adc
das
jb
loop
add
mov
push
inc
or
loop
push
sbb
or
dec
loop
pop
push
adc
pop
dec
push
loop
fsubl
ret
or
xor
adc
mov
loop
add
add
jl
scas
sbb
inc
mov
fwait
xchg
mov
push
test
fucom
cmpsb
jbe
loopne
xor
loope
rcl
pop
mov
int
ret
fimuls
jns
mov
mov
xchg
mov
lret
jmp
jno
add
push
push
xchg
icebp
iret
out
add
mov
pop
mov
lock
loop
xor
pop
outsb
adc
addr16
pop
or
cwtl
aaa
pop
pop
leave
mov
repnz
lahf
out
test
xchg
pop
outsb
xor
fidivs
loop
pop
flds
pop
jb
loope
sarb
and
push
or
sub
mov
test
mov
ljmp
aam
cmpsb
lods
inc
mov
pop
loop
and
ds
or
call
dec
popf
loop
cmp
icebp
adc
xchg
fsts
add
mov
aam
loope
sti
lret
xchg
sub
pop
call
ss
add
and
cmpsl
test
jge
xor
push
add
sub
add
inc
pop
ds
bound
outsl
les
icebp
cmp
push
out
push
scas
loop
out
insb
into
outsb
and
and
and
out
imul
loop
lea
pushf
loop
push
out
icebp
int3
adc
clc
out
loopne
add
movl
std
into
mov
loop
adc
insl
loope
mov
lock
sarb
mov
hlt
iret
out
lods
add
adc
sbb
loop
dec
push
push
lcall
xchg
leave
shrb
add
lods
add
cld
mov
lahf
lea
and
xchg
mov
repz
add
movsb
inc
inc
mov
push
in
cltd
repz
loop
cmp
ret
pop
xor
and
shl
scas
in
xor
pop
in
lahf
loope
lret
mov
dec
or
xor
enter
call
icebp
push
cmc
push
mov
cltd
mov
arpl
loop
jns
xchg
jb
lahf
loop
xchg
and
sbb
push
insl
scas
adc
lret
shr
loop
sub
divb
stos
dec
scas
loop
sub
cmp
loope
jecxz
insl
pop
sub
insb
outsb
mov
or
dec
addl
and
loop
cmp
push
mov
dec
adc
push
inc
sbb
cmp
fldenv
xor
loop
stos
and
xor
mov
lock
loop
mov
and
loop
jmp
addb
or
jg
insl
mov
sahf
shlb
out
mov
cmp
cltd
push
xor
arpl
add
in
mov
xor
aam
enter
push
loop
sbb
push
push
jbe
out
sti
push
jne
sbb
mov
stos
fsub
add
mov
sub
push
fs
cmpsb
loope
push
sub
mov
lea
cmp
sti
mov
jb
loopne
div
xor
insb
insl
daa
inc
mov
mov
push
in
stos
cmpsb
aas
jns
imul
inc
test
jns
mov
jmp
jnp
stos
xorb
aas
outsl
fsubs
test
imul
sub
out
out
or
aas
mov
lret
push
pop
sub
xor
aad
int3
jno
sahf
insl
jne
push
or
pushf
xchg
aaa
sbb
inc
loope
cltd
mov
movswl
fists
jbe
adc
into
and
loop
mov
stc
repnz
jp
sahf
mov
arpl
pop
hlt
adc
pop
sbb
sarb
aas
xchg
loop
or
xor
sub
push
test
adc
out
and
stos
repnz
roll
jns
scas
jnp
loop
psubd
in
ficomps
stc
sub
inc
stos
jbe
call
sbb
or
sub
call
add
rcrb
jae
add
add
inc
or
add
mov
imull
jle
icebp
jecxz
add
loop
lahf
pop
mov
loop
sbb
sub
rcrl
dec
cmp
aad
add
je
clc
mov
sbb
loop
cmp
xor
sar
clc
std
cwtl
lcall
mov
loop
mov
mov
mov
jno
mov
cmc
or
out
dec
out
cld
cli
lds
push
fmuls
aam
adc
mov
inc
cmp
loop
push
xchg
jo
mov
cmp
pushl
shll
mov
ret
sbb
or
js
cmpsb
xchg
pop
int3
loop
or
cmp
pop
sbbl
imul
outsb
scas
mov
hlt
nop
mov
stos
push
stos
arpl
or
mov
pop
call
ret
cmove
cmp
loop
dec
loope
gs
and
mov
jne
rolb
lock
pop
out
cmp
pop
mov
mov
addr16
ja
or
inc
ret
out
int
out
inc
insl
call
insb
inc
sbb
popa
jns
jns
xchg
out
fxch
outsb
push
jno
inc
push
jmp
mov
xor
std
jo
sbb
ss
filds
mov
rclb
xor
or
jge
fisubrl
cmc
in
ret
cwtl
xchg
xor
outsl
stc
inc
dec
loope
aad
inc
inc
mov
loop
ror
cmpl
ja
push
mov
add
jb
mov
rorl
ds
cmc
mov
ret
sbb
mov
dec
jmp
aad
mov
xlat
cli
cmp
daa
fisttpl
cmp
aas
insl
loop
movsl
leave
inc
repnz
loop
icebp
loopne
pop
imull
fs
inc
jno
xor
nop
or
dec
xlat
mov
lcall
cltd
out
and
xchg
jno
and
xchg
in
mov
imul
loope
scas
gs
addb
pop
ret
xchg
mov
xchg
in
jno
push
loop
pop
jb
lea
mov
inc
je
insl
rclb
ficomps
xor
iret
std
jae
loop
and
lods
shll
cmp
cltd
mov
ret
mov
mov
mov
sub
jl
pop
inc
ret
outsl
and
rorl
add
jle
clc
scas
push
mov
and
add
bound
bound
cmp
or
out
stos
out
mov
lahf
in
nop
push
pushf
stos
inc
xor
jge
loop
mov
clc
push
shrl
inc
loop
push
inc
icebp
mov
inc
movsb
dec
out
adc
mov
iret
fdivrs
jns
in
xchg
xor
dec
jmp
inc
xor
and
jg
sub
jmp
xchg
inc
mov
inc
in
icebp
loop
lods
jmp
and
lcall
cltd
adc
or
sarl
popf
fmull
and
dec
es
jge
add
clc
mov
pop
mov
popa
mov
adc
loop
sub
loope
lahf
lcall
add
fwait
sub
insb
loop
jno
xor
dec
pop
pop
jb
cmp
xchg
sti
inc
ds
xchg
xchg
imul
mov
fsub
in
mov
mov
xor
and
push
and
gs
push
ja
mov
cmpsl
ret
and
xchg
jb
jle
jecxz
sbb
loop
pop
dec
scas
pop
fidivrs
loop
popf
sbb
ja
xor
push
repnz
jl
adc
aas
push
loop
push
add
imul
push
mov
push
cs
fsts
mov
repnz
push
or
mov
and
jl
rcll
or
loop
dec
repnz
cmpsl
loop
push
fwait
jle
mov
loop
mov
clc
jae
dec
mov
sub
imul
jno
bound
loop
in
mov
mov
loop
das
lret
pop
jp
sarl
mov
jb
cmp
loope
fsubrs
ret
add
xchg
ss
shll
inc
jg
fsubs
mov
push
xchg
pop
push
sub
icebp
loop
dec
les
aas
rcrl
nop
ja
push
adc
enter
or
xchg
pushf
movsb
fwait
into
adc
loop
dec
inc
pop
das
jb
xchg
xor
and
lods
loop
aam
je
fdivrs
dec
push
xchg
neg
push
mov
mov
inc
loop,pt
sbb
roll
inc
xchg
xor
loopne
ret
inc
or
push
xor
loope
mov
pop
ret
loop
jae
xor
mov
fsubs
jno
cmpsb
push
sub
inc
add
aas
cmc
mov
and
mov
loop
pop
lcall
inc
mov
loop
xchg
cmpsl
sar
and
idivl
dec
mov
mov
xchg
adc
xchg
sub
lock
dec
mov
decb
lea
and
pop
faddl
push
in
loop
outsb
xchg
push
xchg
push
shlb
xorl
repnz
fnstcw
adc
loop
jmp
ja
loop
cmp
ret
jb
loope
dec
cmp
adcb
loop
arpl
add
xchg
jmp
dec
push
pop
outsl
push
pop
jecxz
mov
in
dec
add
dec
icebp
test
lret
jns
jle
in
fstpt
jbe
test
sbb
push
or
sbb
lods
pop
push
loop
cmc
and
adc
aas
aad
iret
or
cmp
les
adc
push
cmc
and
out
fwait
scas
xorl
mov
add
and
pop
iret
mov
bound
aam
dec
push
mov
loopne
nop
mov
loop
sbb
loop
fistpll
inc
and
enter
mov
push
repz
iret
das
cmc
mov
in
ss
cli
pop
sub
in
dec
movsl
sub
dec
push
scas
loop
ficoml
push
xchg
cld
pop
pop
loop
es
inc
mov
adc
cmpsl
in
inc
bound
iret
loope
shrl
sub
stos
mov
and
dec
cmpsl
xor
shll
loopne
in
mov
test
les
push
loop
out
jle
incb
pop
loop
cmp
arpl
cmpsw
icebp
out
inc
pop
stc
cld
xchg
loope
pop
fld
mov
cmp
rcl
arpl
in
mov
push
loop
shll
inc
push
push
dec
rol
nop
sub
mov
jae
xchg
loop
cmp
push
test
xor
jl
or
dec
sar
pop
je
fistpl
aam
orb
test
loop
lock
mov
push
flds
pushf
ret
jecxz
out
outsb
addr16
or
jp
out
icebp
push
cld
jo
pop
inc
inc
js
std
stos
sbb
pop
inc
push
adc
inc
mov
add
es
rorb
loop
aam
pop
int3
add
enter
pop
pop
repz
es
loop
stos
push
or
fsubs
addb
pop
lock
les
mov
loop
inc
inc
rcll
fbld
loop
pop
push
mov
loop
addr16
ja
or
jbe
loop
insl
ds
mov
jmp
and
loop
cmp
loopne
jo
cmpsl
stc
xchg
and
rcrb
daa
lcall
les
scas
pop
add
test
or
leave
loope
mov
cmp
out
insl
xor
sti
sub
cmp
sahf
cwtl
jnp
push
mov
pusha
out
push
mov
int3
loop
add
sarb
or
mov
xchg
add
jns
sbb
mov
insb
lods
pop
movsb
pusha
mov
popf
movsb
xchg
movsl
loopne
xor
jb
and
int3
int
dec
clc
movsb
outsl
fs
jae
dec
push
andl
leave
mov
out
mov
fisubrl
ss
jbe
pop
fcoml
insb
stc
xor
loop
pop
sbb
adc
std
add
cld
mov
lock
mov
out
and
mov
xchg
mov
lock
dec
pop
xlat
pop
push
leave
sbbb
out
cmp
adc
pop
sub
data16
shll
dec
pop
lods
adc
fdivs
pop
mov
hlt
lcall
clc
pop
shl
inc
or
shlb
lahf
dec
and
xchg
lds
jecxz
or
in
aaa
and
dec
and
loop
mov
sub
xchg
mov
adc
loop
je
sub
cltd
shrb
aas
lea
loop
repz
roll
clc
and
out
ror
push
and
cli
cmp
or
mov
andl
cmp
sub
lods
sub
cli
insb
in
cmc
div
jno
repnz
lea
lcall
mov
insl
loop
or
fldt
loop
icebp
out
in
push
loope
incb
out
movsl
repnz
stos
pop
pop
mov
xor
sub
jmp
std
mov
imul
adc
dec
cli
fidivrs
add
sbb
loop
pop
jne
add
pop
out
mov
mov
lods
bound
push
shll
sti
icebp
pop
mov
faddl
inc
jl
loop
shll
repz
loop
mov
insl
loop
xor
cmp
loop
pop
jb
or
adc
mov
scas
cmp
loop
out
dec
in
or
nop
xchg
dec
lahf
icebp
fisubrl
mov
sbb
dec
inc
cmpsw
cmpl
les
repz
loop
insl
push
and
and
loop
adcb
mov
insl
les
pop
mov
sub
jb
popa
insb
inc
scas
fcmovnu
mov
orb
mov
addr16
sub
and
gs
sbb
mov
xchg
stc
and
das
pop
cmpsb
mov
mov
outsl
and
xchg
xor
lock
pop
inc
pop
mov
addl
iret
daa
sub
dec
out
jp
lock
add
push
or
or
out
loop
dec
lahf
and
loop
mov
stos
nop
sbb
loop
cli
xor
dec
data16
lret
inc
jnp
sub
icebp
xchg
repz
aas
insl
imul
and
xor
loop
cltd
mov
mov
pop
and
loope
lods
adc
pop
jmp
or
mov
out
loop
cmp
mov
or
mov
push
jae
inc
cltd
xchg
test
lret
dec
shrl
loop
popf
fadds
push
jns
rcll
in
lock
jae
add
or
cltd
and
xor
test
and
mov
jp
push
pop
sub
into
push
sbb
sbb
pop
addl
cmpsb
mov
xchg
loop
fimull
iret
fnstsw
and
aad
pop
cmp
inc
bound
adc
outsl
imul
xchg
loop,pt
scas
data16
in
scas
dec
loop
jmp
imul
push
dec
loop
lods
sub
pop
cs
push
sbb
pushf
leave
mov
adc
jge
test
loop
cmp
in
out
dec
stos
cmpsl
inc
cmp
sti
adc
push
sbb
lahf
jbe
in
bound
sbb
daa
stos
pop
loop
das
into
push
xor
mov
scas
dec
adc
popf
in
jno
push
adc
xor
inc
dec
adc
mov
sub
stos
aad
in
paddsw
stos
push
loop
mov
loop
loope
xchg
xchg
push
out
int3
loop
sub
adc
mov
ret
test
xor
jns
or
jbe
sbb
rclb
xorl
sub
imul
stos
jne
xchg
enter
dec
fpatan
xchg
les
xchg
icebp
pushf
adc
iret
rcrl
cltd
std
jecxz
in
jae
orl
cmp
ret
cmp
loop
movsb
js
xchg
out
adc
sbb
pop
lcall
sbb
sub
cmp
push
pop
loop
mov
aad
loop
pop
shlb
aam
in
testl
in
sar
jb
or
dec
out
mov
mov
loop
or
das
mov
pusha
rcrb
xor
push
test
push
mov
in
loop
sub
cwtl
mov
push
loop
sarl
shlb
ret
loop
xor
inc
aas
enter
loop
sti
sbb
adc
jbe
fldt
enter
lahf
loop
xlat
daa
and
push
mul
mov
jns
sub
jp
shr
lahf
repnz
cmpsl
enter
in
das
push
gs
jae
sbb
cmp
add
scas
mov
jo
pop
jle
loop
jnp
sub
cwtl
mov
out
jae
stc
clc
sbb
jmp
shrl
fadds
jno
jns
mul
push
in
pop
movsl
jp
cmc
and
mov
in
mov
sub
pushf
sahf
mov
mov
orb
notb
loop
mov
lock
loope
jle
loop
inc
or
add
adc
gs
stc
int
mov
inc
jp
push
or
loop
push
lods
shr
inc
dec
loop
push
fsubrl
adcb
cs
loop
jmp
xchg
push
repz
pop
xchg
xor
dec
mov
xchg
mov
pusha
jmp
fs
pop
out
dec
push
loopne
notb
jle
test
push
int3
loop
jg
push
or
sub
loope
insb
pushf
out
mov
mov
aam
jb
cmpsl
fs
xor
push
loop
sub
neg
xor
adc
inc
jecxz
mov
shl
sbb
push
jle
in
ss
rolb
aam
fiadds
daa
xchg
and
push
mov
mov
es
and
sub
sbb
popf
or
xor
push
cmp
and
call
mov
jnp
out
cld
inc
frstor
loope
loopne
xchg
add
arpl
pusha
sub
cmpsl
lret
add
cwtl
or
push
mov
aad
jne
and
jbe
loopne
mov
insb
cmpsl
lock
ljmp
loope
cs
jp
sti
mov
lock
mov
sbb
inc
std
loop
sbb
scas
dec
dec
lret
out
sbb
imul
int3
mov
sbb
hlt
shl
call
leave
fcoms
mov
inc
pushf
jns
inc
arpl
shrb
xchg
or
add
or
cmp
loop
lods
data16
adcl
push
out
cs
adc
loope
je
std
pop
and
xor
daa
xchg
ret
sub
into
fs
loop
movsl
shll
push
lret
mov
loop
dec
shrb
mov
sub
jg
mov
rclb
mov
mov
hlt
adc
xor
pop
int3
ss
or
cmp
aad
cmpsb
out
movsl
jns
sub
shrb
out
clc
loop
dec
jg
mov
cmp
push
xor
xchg
or
mov
gs
sbbb
cmpsl
sbb
in
test
push
ds
jle
mov
lahf
js
sub
push
arpl
sti
fstl
mov
icebp
fs
adc
jne
divl
dec
hlt
adc
dec
loop
sbb
xchg
loop
xchg
xor
addr16
mov
outsl
pop
stos
leave
imulb
loop
pop
adc
fs
lods
les
data16
loop
sbbb
loop
xlat
int
stos
mov
push
js
pop
fistpl
loop
mov
mov
dec
and
pusha
xchg
mov
dec
sub
lret
mov
imul
mov
loop
lods
xchg
mov
mov
test
clc
out
rcrl
loop
pop
into
mov
jg
loop
or
data16
xchg
mov
cmpsb
pop
loop
inc
inc
cmp
loope
xchg
push
cld
addb
add
pop
fsubp
jge
sahf
pop
std
arpl
adc
lods
dec
insb
adc
cmp
cmp
rclb
loop
cwtl
aad
push
pusha
cmp
cmpsl
icebp
icebp
or
jno
xor
sbb
out
in
loop
sbb
mov
out
insb
sub
out
les
loop
je
stos
aaa
test
jge
loop
or
jg
std
es
mov
jns
xor
call
lcall
mov
xchg
xchg
lock
fiadds
inc
cmp
push
je
adc
mov
test
jo
stos
icebp
push
xor
xor
fsubp
fs
push
enter
loop
jecxz
scas
imul
sbb
ret
xchg
aad
xchg
push
cmpsl
adc
loop
hlt
bound
lcall
jl
lds
pop
jge
out
dec
cmpl
loop
hlt
nop
xor
loop
dec
repnz
push
xor
jp
sbb
cwtl
mov
js
imul
test
in
mov
jmp
cli
jl
je
adc
loop
xchg
repnz
mull
pop
lods
fwait
insl
std
data16
js
test
shr
test
add
xchg
loop
div
jbe
subb
mov
out
outsb
xchg
xor
and
jb
jb
jno
in
push
sub
mov
aaa
cmp
xchg
mov
in
pushf
inc
xchg
xchg
loop
inc
push
dec
stos
fcom
das
loop
jno
sbbb
mov
inc
insb
je
in
aad
push
pushf
loop
pop
lahf
xchg
pop
ret
loop
and
add
sbb
sbb
lret
pop
mov
stos
xchg
loope
sbb
dec
mov
jno
and
loop
pushf
addr16
pop
push
inc
push
lret
cwtl
sub
movsb
xchg
addr16
arpl
pushf
push
sbb
cmp
or
xchg
inc
xchg
cmpsl
jecxz
pop
loop
shl
int
scas
insl
dec
add
mov
std
jb
aad
rolb
push
adc
das
mov
lcall
jle
jecxz
adc
out
stos
or
out
and
das
lcall
roll
mov
loop
sub
mov
add
int
daa
lds
bound
movsl
in
jo
or
sub
mov
andl
cwtl
adc
loop
inc
push
sub
ds
mov
nop
xor
or
pusha
out
lds
sahf
lock
adc
psrad
inc
not
mov
decb
dec
into
push
push
loop
lds
fdivs
pop
sub
xchg
addb
int3
leave
inc
in
call
loop
xor
jle
dec
xor
dec
and
loop
cltd
ja
add
loop
in
pop
or
shrb
out
push
loop
pop
orl
loop
mov
xor
outsl
imul
cmc
in
sbb
loop
or
aas
xor
psrlw
pop
imul
lods
pop
push
or
ret
pavgw
cmp
mov
out
lds
aam
inc
rcr
jb
mov
cmp
loop
clc
jle
lock
pushf
insl
in
pop
rorl
loop
icebp
cwtl
mov
sti
inc
add
and
orb
mulb
add
xchg
inc
pop
xchg
sbb
jl
andb
xor
loop
shll
loop
jle
sbbl
cmc
and
iret
cmpsl
xor
add
test
cwtl
nop
dec
loop
mulb
or
mov
push
loop
adc
and
movsl
loop
mov
clc
pop
daa
es
push
cld
int3
insb
ljmp
jmp
out
xor
jmp
mov
dec
dec
outsb
lcall
dec
mov
test
or
jbe
and
aaa
or
jl
out
icebp
jp
fwait
in
into
jb
out
loop
mov
loope
cmc
mov
pop
push
out
mov
cmp
mov
repnz
loop
mov
mov
jle
xor
test
mov
jns
out
jl
jge
mov
push
gs
xchg
loop
xchg
xchg
jmp
loop
clc
imul
test
cmpsl
inc
sub
xchg
gs
ret
idiv
pop
loop
push
inc
sbb
pop
loop
xor
mov
fwait
dec
sahf
cld
jnp
loop
or
mov
inc
call
jae
nop
es
icebp
in
in
lods
loop
jl
cmpsl
aam
scas
mov
cld
or
dec
sbb
jmp
test
ror
arpl
jge
jp
dec
and
loop
ret
sbb
xor
or
xchg
test
pop
sub
mov
fs
lods
and
enter
loop
loope
shlb
mov
add
test
adc
push
pop
cmpsw
loop
mov
add
xchg
jp
push
xchg
mov
rcll
inc
xor
lea
sbb
ret
sbb
subb
push
mov
adc
cltd
in
loop
pop
scas
mov
sbb
xlat
pop
stc
push
loop
sahf
fwait
mov
push
js
movsb
in
xchg
fsub
fsubl
or
adc
fyl2xp1
add
push
mov
imul
cmp
inc
shl
and
bnd
icebp
jne
outsl
call
xchg
fsts
cmp
xor
adc
gs
int3
rorl
daa
mov
lret
in
or
loop
push
gs
mov
dec
out
out
lret
lcall
mov
pop
or
cmpsl
mov
loop
and
repnz
lock
and
shrl
ret
sbb
cwtl
sarl
fsub
js
icebp
lret
decl
cmc
push
jns
or
or
push
arpl
pop
sub
mov
mov
or
cmc
xchg
popf
inc
aaa
inc
repz
mov
and
inc
mov
shl
dec
es
dec
test
test
dec
push
aas
in
push
add
incb
inc
repnz
cld
and
pmaxub
aam
xchg
adc
in
subl
mov
repz
pop
repnz
jnp
imul
jae
push
and
int
dec
or
jge
mov
mov
adc
das
insb
add
shll
inc
add
vpsllw
mov
bound
rorl
fs
mov
in
ljmp
loop
popa
jle
jmp
sbb
jb
insb
lret
imul
dec
jle
jge
ds
scas
xor
sar
in
sahf
inc
inc
jno
adc
ja
mov
mov
mov
push
pop
dec
pusha
loope
mov
out
inc
mov
mov
nop
sti
ja
or
push
mov
jp
mov
pushf
scas
ss
pcmpeqd
nop
push
jg
xchg
jne
es
lahf
adc
enter
sub
jbe
push
je
jno
jp
sbb
test
jo
lock
jp
loop
mov
out
add
pop
pushf
dec
daa
add
cmp
mov
inc
xor
and
call
repnz
bound
loop
adc
cmc
jecxz
loop
xor
stos
lods
pop
int3
pop
loop
or
sub
pop
sub
jno
ror
loope
ds
mov
fdivrl
stc
faddp
mov
insl
fiadds
sub
cmp
pop
repz
not
scas
pop
xor
jo
add
add
push
es
rcll
clc
adc
lahf
push
out
aas
mov
pusha
sti
loopne
popf
into
jne
cwtl
cmp
loop
adc
jno
xchg
inc
mov
xchg
mov
gs
pop
pusha
xlat
clc
addl
movsb
int
push
add
rolb
ss
decl
lret
test
sbb
jle
adc
out
jns
leave
mov
inc
or
or
xor
clc
loop
insl
mov
xlat
lods
mov
and
cwtl
mov
pop
adc
push
push
loop
jo
cmp
or
loop
cmpsl
mov
dec
fxch
mov
inc
lcall
jg
and
adc
mov
pop
stc
inc
clc
add
loop
repz
or
jge
psubd
add
int
outsb
pop
scas
mov
aaa
adc
push
mov
cltd
push
pop
loop
je
jae
dec
scas
and
lret
loop
movsb
xor
bound
fistpll
cmp
pop
jbe
sti
and
add
sbb
out
push
cmp
push
xor
movsl
aam
xchg
jecxz
popa
mov
imul
out
leave
pop
sti
aam
jmp
mov
sbb
loop
insb
fidivrs
xor
pusha
cmp
mov
sti
push
loop
and
inc
add
adc
inc
xchg
hlt
loop
mov
sub
pop
xchg
gs
adc
js
stc
outsl
dec
sub
push
xlat
push
inc
loope
in
xchg
hlt
fmul
loop
pop
mov
lods
push
es
mov
ja
inc
cmp
xchg
rorl
aad
dec
loop
xor
lcall
adc
movb
loop
loope
xorb
loop
cld
sub
test
stc
pushf
or
shl
icebp
aas
inc
pop
aad
loop
and
movsb
mov
fs
enter
loope
mov
xor
and
inc
xchg
pop
add
loop
pop
adc
in
scas
jle
loop
aam
ficoms
add
in
mov
out
mov
loop
or
das
outsb
imul
mov
mov
fidivs
xchg
loop
insl
jg
lods
shll
sub
pop
xorb
mov
mov
dec
inc
out
cmpsb
push
push
hlt
fldcw
shr
xchg
aam
call
sarl
push
outsb
test
sti
loop
movsl
sub
movsb
xchg
xchg
ja
mov
fnclex
test
lret
push
add
iret
dec
hlt
loop
cmpl
pop
xchg
jecxz
jb
mov
in
jmp
loop
cwtl
add
pop
adc
inc
adc
daa
loop
fdivs
xchg
adc
inc
inc
mov
mov
enter
mov
mov
jb
inc
cmp
dec
addr16
jno
ja
or
fisubrl
out
pop
add
in
mov
test
ret
mov
imul
or
jmp
xor
roll
daa
fcmovb
repz
imul
push
mov
in
jne
loop
dec
lahf
sub
movsl
dec
aaa
loop
enter
add
out
dec
clc
mov
mov
test
stos
mov
std
test
add
cltd
pop
and
in
sti
ss
adc
mov
mov
loop
mov
dec
inc
loop
add
dec
inc
scas
mov
jno
lods
stos
jbe
outsl
daa
adcb
stc
testl
loop
push
lods
data16
mov
loop
xchg
inc
inc
dec
es
loop
xchg
sub
sub
lahf
stos
loope
aad
pop
lea
imul
or
mov
cwtl
sarl
in
dec
mov
loop
mov
jle
jo
out
pop
js
mov
dec
lret
fs
mov
dec
dec
shr
fbstp
push
jge
lret
mov
fisubrl
and
inc
add
push
jp
loop
subl
sub
out
inc
fcmovnb
or
mov
leave
int3
or
inc
loop
mov
fmulp
mov
jns
mov
dec
mov
or
cmp
and
in
sub
pop
cmc
lret
pusha
cmp
jmp
inc
in
clc
xor
jo
out
sbb
cs
mov
out
aaa
in
push
push
cltd
mov
loop
inc
popf
sbbb
jbe
push
dec
mov
lret
out
cwtl
test
inc
lcall
adc
in
out
jmp
lds
stos
inc
adc
mov
jae,pt
mov
pop
inc
arpl
andl
push
add
inc
pop
dec
daa
xor
insl
jns
sub
push
call
scas
loop
stos
inc
fwait
mov
mov
add
ja
cld
xor
shl
sub
sub
pop
cltd
xchg
sti
mov
in
pop
xor
jg
shll
outsl
mov
shrb
mov
push
dec
sub
mov
test
adc
pop
and
js
in
jle
and
sbb
mov
popa
jecxz
cmpsb
xchg
jns
hlt
push
cli
fdivrp
adcb
outsb
in
pop
adc
fwait
lock
xchg
loop
dec
mov
add
fsqrt
jl
pop
sub
loop
or
bound
xchg
loop
push
push
jno
mov
add
cld
inc
into
icebp
and
daa
jg
loop
popa
mov
lahf
cld
loope
jl
xchg
lret
and
mov
pushf
aaa
cs
mov
lret
mov
mov
sub
inc
or
in
xor
inc
inc
cmp
jb
cmp
shl
test
push
push
add
or
push
sbb
nop
sub
xchg
mov
outsb
shl
jae
mov
xchg
sub
xchg
xchg
cmpsb
pop
push
sbb
and
sub
loop
sti
stos
inc
mov
jle
jg
jl
xchg
or
std
xchg
cmp
stc
das
add
loop
push
mov
not
loop
jl
pusha
pop
nop
fildl
add
loope
mov
and
cmp
mov
pop
push
in
dec
jl
cmp
inc
add
mov
push
lods
sarl
ficoml
fmuls
mov
xchg
das
mov
icebp
mov
aaa
in
xchg
ret
xchg
sbb
xor
loop
jo
les
lea
clc
push
xor
mov
movups
cmp
mov
bound
loop
pop
mov
pop
dec
jle
loope
hlt
inc
mov
div
mov
pop
lahf
mov
in
add
in
int
insl
add
insl
ljmp
adc
mov
loop
cmp
push
loop
test
inc
cmp
in
lods
movsb
lret
outsl
pushf
enter
jns
push
sub
loope
mov
add
cltd
push
xchg
jmp
sti
into
lods
sub
out
loop
sbb
cmp
xchg
sbb
addb
xchg
into
test
dec
fstps
push
jnp
mov
out
cld
sti
loop
dec
jecxz
push
pushf
sahf
cmp
dec
addl
in
add
push
and
add
loop
pop
pop
xchg
dec
jg
iret
cmp
adc
ds
mov
out
inc
mulb
insb
out
cmpl
sar
stc
xchg
stos
fdivrl
in
jecxz,pt
xor
into
pushf
add
das
inc
mov
insl
dec
lea
mov
mov
repz
clc
idiv
sub
fs
xor
jnp
jo
scas
icebp
mov
dec
loop
jae
in
test
xor
mov
xchg
stos
icebp
cmc
xor
fisttpl
jp
sub
loop
mov
pop
je
int
loop
sti
fnstenv
movsb
cmp
push
das
scas
leave
add
jl
or
stos
jbe
bound
pop
jp
orb
incl
mov
ret
insl
data16
inc
pop
mov
shl
popa
pop
jl
pop
and
loop
inc
add
jns
in
in
call
repnz
and
and
sti
pusha
add
xor
or
test
and
sub
dec
psrad
fisubrl
rcl
mov
sbb
aad
push
jno
stos
out
in
push
pop
sbb
and
or
pop
sbb
std
loop
jnp
ja
mov
adc
and
adc
fabs
fwait
cmp
inc
push
push
inc
lcall
lret
loope
fidivrs
dec
dec
sbb
jne
sbb
ss
xor
lcall
ja
lret
pop
cmc
in
lods
loop
dec
cmp
sbb
or
test
shlb
loop
insb
mov
and
adc
push
lahf
add
loop
pop
mov
das
lds
mov
xor
sub
loop
aaa
ret
sub
dec
jbe
loop
or
lcall
mov
loop
bound
stc
or
test
sbb
loop
pop
lods
pop
rolb
ss
loop
mov
popa
cli
rcrb
shll
and
push
jg
mov
in
in
add
dec
shr
xchg
sub
loop
sub
sbb
repz
aam
inc
mov
repnz
bound
stos
loop
push
and
loop
sbb
pop
pop
shrl
scas
in
movsl
cmp
rorb
or
pop
mov
loop
sbb
shll
cmp
cmc
loope
popa
xchg
in
loop
cwtl
dec
arpl
mov
cmpsb
icebp
nop
pop
lcall
sub
xor
push
loop
jnp
sub
mov
or
in
cld
shll
pop
and
clc
cmp
nop
jo
loop
mov
icebp
jg
dec
dec
dec
pop
ret
xchg
jne
sahf
pop
jns
pop
xchg
lret
pop
xchg
insb
sub
xor
mov
ficoml
out
jecxz
and
sbb
fsts
jecxz
xlat
aaa
in
fstps
ja
inc
mov
lods
addb
scas
das
cli
pop
mov
clc
loop
ja
in
sbb
xor
mov
jp
je
add
sbb
outsl
and
icebp
loop
cmpb
cli
lods
mov
repz
jmp
jns
scas
mov
loopne
xchg
loope
sbb
fstpl
lret
lcall
leave
repz
dec
sub
push
arpl
mov
jno
movsb
lahf
loopne
add
xchg
adc
lods
loop
ud0
sbb
or
adc
gs
fiadds
in
dec
outsl
ja
sbb
mov
into
loop
sbb
sub
ss
add
jmp
psrad
push
pushf
in
add
and
mov
mov
lods
loop
fisttps
push
cli
loop
pushf
ret
movsb
or
repz
or
pop
dec
xlat
mov
pop
mov
xchg
adc
or
add
fs
fsts
dec
mov
jmp
repz
lock
sbb
std
cltd
sbbb
xor
push
out
sbb
cmpsl
lret
adc
loop
lods
xlat
adc
sbb
pop
dec
sub
in
stos
loop
mov
sub
loop
xchg
push
rcrb
pop
cld
test
push
lret
shrl
or
divl
in
gs
mov
mov
inc
push
mov
nop
and
ret
call
inc
pop
adc
xor
xlat
stc
mov
dec
cli
mov
lret
fwait
jbe
out
movsb
movsb
loop
inc
mov
xchg
arpl
push
cmp
dec
inc
loop
into
xchg
nop
sarb
fistpl
in
cwtl
loop
insl
add
bound
pop
and
jp
mov
xchg
add
repnz
jl
in
out
mov
jae
fs
mov
stc
icebp
mov
mov
and
loop
sbb
mov
loop
or
fistpll
pusha
push
fsubp
cmpsb
adcl
fprem1
in
jo
dec
out
mov
mov
dec
roll
fimull
mov
mov
push
ret
pop
arpl
pop
jmp
loop
or
sbb
or
test
fimuls
jmp
loop
adc
mov
rorl
jno
inc
push
pop
mov
je
add
lods
dec
jp
add
sub
sub
adc
call
nop
arpl
dec
push
xor
sub
inc
sub
out
bound
mov
call
cmp
cmp
sti
xchg
push
cltd
orl
inc
shll
in
inc
int3
loop
test
das
add
inc
and
or
mov
enter
popf
inc
fcomip
loop
scas
inc
or
mov
mov
add
enter
sbb
and
push
loop
ss
xchg
mov
pop
cmp
add
loop
or
addl
mov
loop
sahf
out
mov
jns
mov
pop
xchg
pusha
loop
iret
lcall
xor
xor
xchg
stos
out
xchg
push
loope
xor
pop
arpl
and
adc
aaa
xor
cmp
out
inc
loop
inc
xlat
fbld
mov
aaa
dec
sbb
insl
jmp
add
xor
pop
lret
xor
jmp
ds
and
inc
sub
jp
cli
mov
pop
mov
movsl
push
inc
cmp
or
add
mov
scas
loop
mov
test
push
pop
xchg
add
inc
and
enter
stc
mov
cmc
stos
add
sarl
inc
loop
jne
or
outsb
into
ss
outsl
out
cmp
push
bound
repz
loop
push
mov
mov
sahf
xor
sbb
mov
rcll
fsubl
cmp
xchg
xor
mov
push
push
loop
scas
subb
xor
ret
daa
arpl
inc
stos
and
rcr
loop
xchg
pop
sbb
ds
fsts
xchg
orl
jle
cmpsl
mov
mov
mov
and
lret
pop
insb
out
and
pop
icebp
insl
mov
sar
or
fiaddl
and
repnz
iret
and
jne
dec
enter
pop
xchg
es
xchg
shll
cld
cmpb
xchg
or
insl
mul
dec
subl
push
sbb
mov
sbb
pop
or
adc
jg
out
call
pop
cmp
cwtl
test
mov
fld
stc
sahf
push
in
cs
cltd
js
jle
loop
push
mov
mov
aam
lret
push
loop
push
sub
adc
in
daa
mov
hlt
loop
les
push
movsl
in
call
jmp
loop
dec
jecxz
mov
xorl
xor
adc
mov
mov
jecxz
loop
ja
int3
roll
mov
jl
or
in
push
sbb
or
cmpsb
sub
cmp
and
or
or
stos
xchg
cmp
xor
into
jl
hlt
daa
pop
mov
and
cld
ficomps
pop
inc
xchg
mov
insl
loop
andb
lahf
or
scas
test
bound
lcall
clc
dec
out
ret
loop
je
pop
in
mul
cld
push
aam
cmp
adc
fiaddl
cmc
insl
xor
cmp
sbb
icebp
insl
iret
pushf
mov
xor
jp
add
sub
test
loop
stos
lret
adc
cmc
or
push
inc
outsl
and
fwait
test
xor
or
out
xor
cmpsl
enter
mov
and
data16
dec
lcall
mov
inc
cld
xchg
dec
add
or
loop
add
mov
adc
mov
ss
stos
sub
or
popf
sarl
ljmp
xlat
pop
arpl
fwait
pop
and
test
and
ds
mov
loop
pop
stos
pop
rcl
in
in
loop
mov
sub
test
jecxz
loop
stc
jbe
lock
xor
fildl
fisubs
push
adc
cwtl
pop
repnz
inc
loop
or
ss
loop
or
adc
out
jl
nop
imul
xchg
adc
jp
dec
or
imul
push
ret
ret
xchg
loope
inc
mov
js
out
jmp
lods
sahf
fldcw
loope
daa
mov
mov
jo
xchg
cmp
add
shll
fwait
sbb
inc
call
loope
push
inc
test
sub
loop
mull
ja
sbb
sub
test
loope
movsl
jae
ficomps
cmpsw
lcall
lods
scas
jp
xchg
inc
loop
repnz
cmpsb
shll
jle
les
xchg
rsm
loop
jae
fs
cltd
cmp
aad
lret
int
xlat
jecxz
lcall
mov
mov
sub
enter
int3
iret
sti
outsl
lcall
or
clc
dec
mov
loop
jecxz
push
xchg
mov
loop
dec
dec
jl
cltd
cwtl
xchg
xor
sbb
jle
out
xchg
dec
insb
mov
xchg
leave
mov
xor
loop
repz
xor
or
mov
lahf
in
loop
push
push
call
adc
push
or
loop
ja
hlt
sbbb
mov
mov
fadds
dec
inc
sub
mov
loop
xor
lret
mov
outsl
xchg
cmp
mov
es
pop
or
loop
jl
lock
mov
loop
pushf
push
popa
xchg
and
adc
sbb
mov
sbb
call
sub
iret
ret
addr16
push
mov
adc
leave
loop
jmp
popf
loopne
mov
loope
cltd
cmc
cwtl
lret
inc
insl
mov
loop
jp
stc
and
sbb
mov
adc
cmp
out
outsb
mov
fildll
rcrb
cmp
sahf
pop
xor
mull
cltd
mov
fnsave
sbb
pop
movsb
and
jecxz
push
test
clc
repz
mov
out
nop
dec
lret
loop
outsb
pop
adc
pusha
jmp
addr16
mov
outsl
loop
xchg
add
jns
add
ja
xchg
cwtl
loop
mov
or
out
or
sti
insl
std
xchg
ds
mov
outsl
loop
je
int
pushf
mov
insl
sbb
xchg
mov
and
arpl
call
in
testb
out
mov
add
je
loop
js
into
adc
push
loop
mull
xor
or
add
insl
and
add
loop
outsl
in
push
fwait
or
sarl
aam
mov
pop
inc
and
and
jge
dec
out
cmp
adc
les
mov
dec
dec
aas
loop
lahf
jne
lods
sbb
enter
xor
add
dec
dec
mov
and
xor
sarl
mov
inc
pop
add
pop
lock
roll
mov
push
fistpll
fadds
ficoml
repnz
nop
mov
and
in
xchg
xor
push
inc
xor
pop
cmp
mov
clc
sti
mov
call
dec
shr
xor
pop
sbb
call
and
loop
lret
xor
xchg
shl
cmc
mov
lds
lret
add
cmc
cltd
jmp
call
push
in
xor
mov
xchg
pop
push
jle
cmpsw
inc
icebp
rcr
call
movsl
adc
cli
imul
jle
bound
test
mov
std
out
or
ss
sti
or
out
das
jp
es
dec
nop
pusha
inc
loope
into
push
jge
mov
out
cmp
mov
pop
stc
insb
clc
or
xchg
dec
cltd
push
stc
mov
add
negl
mov
adc
or
cmp
xchg
pop
stos
and
pop
pop
add
loop
sbb
call
bound
out
out
mov
scas
aas
mov
push
loope
dec
cli
test
mov
fsub
xchg
add
jmp
cltd
outsl
adc
sbb
xchg
mov
mov
xor
enter
aas
stc
pop
repz
lods
xchg
push
inc
sti
in
imul
jp
push
pop
pop
sarl
pop
cld
outsl
and
push
loop
mov
js
mov
punpckldq
lock
cwtl
pusha
inc
inc
sarl
adc
xor
es
leave
cmp
mov
jmp
sub
jb
pop
fidivrs
cltd
ds
loop
call
movsb
pop
inc
je
add
in
mov
outsb
jae
pop
pop
and
loop
mulb
sbb
mov
cmp
dec
out
cmp
inc
loop
ficoml
pop
aam
pop
ds
lahf
lcall
pushl
stos
or
call
faddl
loope
aas
shl
shr
pop
movsb
insb
repnz
push
test
push
mov
out
dec
loop
imul
loop,pn
xchg
je
sbb
push
jmp
ret
das
clc
mov
push
push
xchg
icebp
xor
in
lret
sub
loop
testb
and
push
jno
lock
ss
lret
loop
aas
lret
mov
insb
push
jg
cmp
mov
out
push
xor
jnp
push
pop
insl
push
in
dec
xor
repz
out
push
add
jb
les
dec
loop
jge
push
mov
lcall
sti
jae
loopne
call
mov
mov
dec
scas
push
jb
loop
fisubrs
sub
psubusw
iret
lret
adc
pop
loope
add
inc
cmp
out
push
insb
ret
mov
scas
xor
jg
or
ficoms
push
pop
rcl
add
movsb
jae
insb
adc
adc
aad
loop
orb
loop
xor
push
loop
jmp
jle
add
stc
int3
pop
cld
out
in
lcall
mov
xlat
in
cmpsl
push
mov
sahf
mov
mov
jmp
into
dec
pop
scas
adc
push
inc
xor
cmpsl
int
cmpsb
lret
loope
out
mov
pop
rcll
jmp
hlt
push
push
mov
loop
fstpt
sbb
dec
sbb
jo
insb
xchg
dec
jl
and
cmp
push
push
cmc
xchg
loop,pn
or
mov
outsl
stc
out
enter
in
dec
sbb
call
add
dec
cmp
outsl
push
push
push
dec
subl
jne
adc
mov
hlt
cld
adc
cmpsb
jecxz
or
sbb
iret
popa
jp
loop
mov
les
insl
mov
fmull
sub
mov
mov
data16
fs
mov
in
int
loope
and
in
fcoms
cli
mov
xor
repnz
fisttps
pmaxsw
es
lret
and
mov
inc
jb
sub
mov
mov
sub
pushf
loop
dec
dec
lea
inc
aas
add
mov
je
inc
mov
test
dec
jg
loope
jns
gs
push
out
cli
push
jecxz
cld
jp
sbb
or
enter
loope
cmp
jle
data16
xor
loop
cs
pop
jns
out
jmp
jmp
and
addr16
insb
popf
les
sar
ja
or
jp
and
lcall
pop
loop
add
add
dec
jb
dec
or
lahf
loop
enter
cmpsl
cltd
loop
dec
arpl
inc
nop
pop
out
xor
push
and
jns
js
push
jns
sub
ds
xchg
dec
pushf
test
add
decl
push
mov
cmp
adc
push
loopne
stos
ret
imul
mov
loop
push
jmp
push
stos
repz
mov
imul
xorb
ds
icebp
in
hlt
xchg
ror
mov
movsb
movsl
jae
loopne
jge
xor
and
lods
lret
mov
xor
in
and
jg
in
fidivs
loop
mov
xchg
sub
push
xor
pop
loop
les
aas
sti
inc
out
dec
add
jl
leave
mov
or
out
loop
xor
jg
gs
lret
mov
loop
stc
shll
inc
cli
mov
xor
mov
pushf
or
orb
aam
outsb
mov
loop
out
notb
jns
adc
out
enter
mov
add
cld
adc
addb
out
adc
aam
rolb
ds
in
test
adc
shrl
arpl
loop
outsl
jnp
outsb
add
loop
sahf
mov
call
inc
aas
mov
movsl
loop
pusha
and
ja
sbb
add
cld
or
mov
insb
push
out
push
and
bound
scas
ds
outsb
mul
mov
jae
add
pop
jne
ret
jecxz
sahf
jle
negb
movsl
cmp
push
mov
sub
ss
hlt
mov
int3
in
jl
inc
and
add
cmc
sbb
lret
cli
mov
dec
sbb
adc
inc
sbb
mov
ret
xchg
fimull
js
cmpsb
in
lahf
xor
movsl
dec
in
or
mov
push
dec
mov
dec
sbb
ret
dec
loop
push
pop
cmp
daa
jbe
add
ret
shlb
test
loop
pop
int3
mov
push
pop
ds
mov
mov
pop
outsl
push
roll
and
jle
mov
jb
clc
and
cmp
stos
rcrb
and
and
in
aam
jle
mov
xor
mov
loop
mov
push
daa
aad
mov
in
cs
add
js
dec
loop
add
sub
and
xor
mov
jge
loopne
jbe
xchg
daa
mov
ds
jne
jg
adc
data16
or
or
dec
push
cmp
pop
lcall
call
dec
mov
adc
std
loop
adc
add
loop
jno
add
push
dec
ret
mov
cmp
push
jl
loop
insl
or
imul
sub
loop
clc
das
sub
in
popa
loop
sbb
movq
jmp
and
cmp
adc
inc
pop
into
loop
push
cvtps2pd
loop
inc
add
lret
outsb
mov
mov
add
or
in
dec
xor
push
loop
ret
sahf
push
adc
loop
or
mov
inc
jl
push
pop
imul
jmp
out
or
shlb
push
push
gs
imul
jns
stos
inc
cld
enter
imul
cmp
lods
imul
fsubs
and
repnz
arpl
dec
sub
test
or
xor
loop
inc
jge
jecxz
sub
lcall
mov
loop
pop
sbb
stos
jns
mov
xchg
insb
mov
sahf
dec
shrl
das
ret
sub
cmp
mov
and
rcrb
popa
add
jp
xchg
loop
inc
enter
or
in
dec
sbb
cltd
sub
in
and
pop
lcall
mov
jle
loop
adcb
daa
mov
in
lret
and
loop
faddl
push
sub
or
outsl
into
movsl
scas
fiadds
je
mov
ret
and
fidivl
mov
loop
ds
or
addl
jno
cmp
xor
sbb
xor
leave
jecxz
xlat
sub
in
mov
mov
es
xor
addb
inc
or
push
test
xchg
jge
fnsave
clc
loop
lret
xchg
movsl
int3
jge
xchg
mov
loope
loop
cmp
pop
cmp
hlt
and
int
mov
mov
cld
jo
sarl
sti
jecxz
sahf
sub
mov
dec
in
movsl
ja
pop
neg
add
pop
loop
xor
cmp
jns
cs
inc
jecxz
jae
sub
loop
mov
aad
fdivrs
sbb
and
xchg
loope
aam
and
push
out
sub
xchg
outsl
cmp
add
or
andl
into
decl
clc
popf
inc
repnz
sbb
xchg
gs
aas
or
inc
mov
cmpsb
aam
sti
jbe
xor
mov
mov
add
enter
and
pop
xchg
addr16
sar
ret
dec
inc
cld
loop
cltd
pop
sarl
stos
stos
pop
arpl
push
xchg
repz
fs
sti
adc
das
dec
push
adc
stc
jecxz
hlt
call
mov
pop
outsl
negl
mov
mov
jecxz
pop
mov
cmovp
stc
and
loop
jle
or
cmpl
das
mov
mov
into
popf
push
enter
mov
cmc
ret
and
fwait
loop
jp
sub
jmp
loop
sub
fucomi
add
repz
xchg
xorl
into
pop
hlt
and
aaa
out
cmp
jnp
bound
icebp
loop
std
jp
and
xchg
movsb
xor
test
gs
adc
add
loop
adc
popf
jmp
jo
data16
mov
pop
lcall
loop
fwait
outsb
xchg
pop
jno
push
scas
cmpb
push
int
xor
mov
stc
xchg
movsb
xchg
xchg
add
shrb
pop
out
dec
inc
pusha
bound
lods
xor
cmp
lea
and
out
js
add
in
adc
mov
mov
ja
fimull
jmp
loop
xor
out
outsl
xchg
xor
cltd
cmp
inc
cli
int3
insb
mov
movsb
fsubp
cmp
jp
pop
loop
add
mov
insl
loop
inc
push
mov
pop
push
pop
pop
xchg
loop
mov
mov
or
out
out
rolb
icebp
mov
mov
sub
push
mov
xchg
in
ret
loop
adc
scas
jb
out
loop
mov
ret
push
push
mov
and
jge
add
mov
jle
sub
pop
cmovle
into
xor
jbe
in
and
add
jg
daa
out
test
insl
jle
cmp
mov
movsb
cmpsb
push
mov
push
xchg
mov
roll
pop
add
scas
das
loop
xchg
dec
movsl
jge
and
push
xlat
ds
jmp
and
clc
cmovbe
inc
jb
stos
pop
sbb
loop
xor
incb
adc
jp
dec
gs
pop
inc
add
iret
or
and
imul
stos
das
jnp
mov
mov
shlb
fmulp
fcmovnbe
loop
add
test
stc
jb
aad
mov
ret
and
xchg
loop
jno
pop
push
mov
test
inc
pop
push
mul
inc
repz
pop
mov
imul
xor
mov
les
inc
lods
dec
loop
and
int3
std
and
cmpsb
add
fldenv
loop
ss
rcr
sti
pop
loop
mov
cmp
xchg
test
int3
loop
cld
fistps
inc
inc
xor
loop
enter
in
stos
pop
loope
mov
andb
imul
jbe
dec
out
js
loope
in
or
ret
jns
ret
scas
jne
stos
mov
movsb
mov
mov
cmp
inc
iret
repnz
sti
ds
cmp
out
outsb
xchg
cltd
clc
cmp
in
bound
out
push
add
das
adc
push
fistps
cmp
xor
fstpl
sbbb
ja
test
mov
rcr
das
pop
icebp
aad
aam
fsub
cmp
loop
gs
push
jns
xlat
lock
cs
sub
and
divb
sbb
imul
ret
in
ret
hlt
jno
jbe
sbb
loop
xchg
out
cld
xchg
jns
in
or
popl
adc
cld
jns
push
sub
pop
leave
push
nop
fs
adc
in
jmp
loop
mov
mov
ret
loopne
in
jecxz
les
adc
dec
stos
in
daa
push
xchg
loop
sbb
in
out
dec
sub
jg
and
sub
bswap
icebp
mov
sub
mov
gs
jne
stos
fdivl
loop
mov
test
lods
loope
sub
sahf
rcrl
pop
mov
hlt
add
insb
in
push
dec
in
repz
fsub
test
adc
push
dec
mov
int
outsb
faddp
jg
push
loop
mov
sti
pusha
pop
xor
fsubr
cwtl
adc
loop
popf
sbb
adc
ss
inc
pop
xor
aas
sbb
mov
lods
push
das
clc
jecxz
xor
or
fistps
aaa
scas
sbb
xor
data16
loop
arpl
insl
sbb
bound
aaa
loop
cmpb
and
xchg
loope
sti
jne
in
cmp
loop
aaa
push
loope
xchg
outsl
loop
and
sbb
and
fsubs
jns
rcrb
cmpsl
inc
loop
or
adc
hlt
add
inc
gs
cmpsb
ds
pop
loop
fadds
loop
xchg
das
mov
add
loop
inc
mov
xor
push
and
xlat
dec
pop
in
scas
gs
loop
push
insl
das
rolb
test
cli
ret
dec
push
loop
insb
or
and
add
sarb
jmp
loope
lahf
sub
imul
rcll
lods
and
or
pushf
mov
fisttpl
pop
out
mov
inc
push
mov
xor
cmpsl
lds
aas
and
in
mulb
lods
loopw
cmp
xchg
loop
and
sbb
pop
or
xchg
leave
out
lret
outsl
cmp
xchg
inc
and
cs
loop
and
loop
testb
cmp
adc
xor
test
in
or
sbb
in
adcb
stos
nop
mov
loop
push
xor
push
dec
jecxz
pop
pop
loop
inc
out
push
adc
xor
jb
fs
or
in
pop
int
in
mov
pop
clc
nop
push
or
sbb
mov
mov
jl
and
cmp
stos
xchg
or
push
rcr
mov
add
sub
and
loop
xor
repnz
mov
imul
js
pop
fsub
std
clc
pop
jmp
xchg
jbe
xchg
mov
xlat
mov
jge
push
add
inc
dec
sbb
and
shlb
push
sbb
in
or
loop
lret
sbb
mov
loop
pop
sub
loop
mov
outsb
pop
jno
pop
cld
test
dec
loope
rcl
adc
nop
out
lret
loop
and
push
loop
sbb
cli
stos
xor
test
pushw
lret
cmpl
rorb
cmp
add
mov
push
xor
test
das
into
mov
es
xchg
stos
jo
loop
jne
jns,pn
pop
jb
push
lahf
sub
jmp
ret
mov
cmp
stc
jns
adc
sbb
xor
inc
andb
stos
pop
loop
cltd
out
js
mov
mov
cmp
lea
les
add
inc
pushf
loop
pop
out
mov
and
loop
xchg
bnd
fisubl
xlat
push
or
mov
sbb
loop
xchg
sub
lahf
xchg
out
lods
loop
xor
push
xor
jnp
mov
std
or
cmp
push
lods
loop
cmp
cltd
data16
loope
in
imul
frstor
notl
or
aam
xchg
dec
out
addr16
pop
loop
jecxz
aaa
push
inc
add
mov
pop
jge
inc
mov
cmp
ss
into
loop
cmpb
outsb
test
stc
jge
data16
loop
xchg
cmpl
mov
sub
stos
xlat
iret
sub
mov
sarl
idivl
jl
push
lock
lods
mov
ljmp
out
shl
mov
pop
mov
jp
popf
mov
bound
inc
adc
jg
mov
add
loop
inc
out
lret
mov
push
sub
mov
push
jecxz
jmp
or
fwait
sbb
cmp
sbb
out
js
mov
loope
cmc
sar
or
rorb
push
popl
sbb
xorl
inc
mov
mov
das
push
adc
mov
cmp
popa
fstp
mov
mov
sub
enter
mov
mov
imulb
push
inc
roll
sbb
mov
add
adc
es
or
out
jo
in
loop
push
or
jle
add
lods
hlt
ja
ret
loop
outsl
and
loope
cmp
adc
xor
jb
loop
inc
push
cmpsl
adc
icebp
aas
inc
mov
and
loop
dec
xchg
pop
in
and
push
loop
jecxz
ret
dec
mul
pop
cmpsl
gs
add
and
call
xchg
mov
cmp
jbe
xor
cmp
leave
cmp
xchg
out
jl
je
jnp
jb
sti
sub
mov
push
mov
sbbb
mov
popf
data16
mov
out
sbb
xchg
jno
ds
mov
clc
int
out
jbe
cmp
into
jb
jp
lret
pop
rcrl
xchg
enter
out
push
push
mov
loop
cmpsl
push
iret
xchg
fcmovb
js
adc
loopne
outsl
and
jmp
add
jno
shlb
or
push
pop
js
loop
in
cmp
add
mov
and
movsb
sub
insb
loope
ja
jl
jns
js
je
push
loop
sbb
add
jmp
popf
jo
sub
leave
gs
loop
dec
adc
ja
adcl
jecxz
loop
xor
mov
cmc
loop
test
movb
sub
push
insb
in
and
add
push
xor
pop
sub
loop
mov
loop
cmp
data16
cs
popf
ret
mov
xchg
pop
popa
and
lret
xor
dec
es
cmp
jo
loop,pn
int3
push
hlt
cld
sbb
or
cmp
cmp
out
jne
aam
xor
test
pop
add
loop
cld
mov
mul
fdivr
xor
or
and
loope
stc
mov
stc
pop
mov
push
jmp
in
pushf
xor
dec
inc
dec
xchg
loope
ds
inc
push
es
jo
lea
add
cmp
popf
push
mov
scas
adc
add
stc
aaa
dec
or
orl
sbb
out
xor
loop
rolb
xchg
enter
flds
gs
or
loop
cmc
jmp
mov
sub
adc
push
in
popf
mov
jle
movsb
sbb
test
lret
jns
loop
lahf
cltd
int
fsubr
cli
loop
dec
sbb
scas
nop
js
loop
jb,pt
aam
xchg
pop
loop
ljmp
xchg
loop
stos
in
and
movsb
xor
insb
das
in
push
cmc
mov
xor
aaa
jne
and
cmp
jns
and
jle
cmpsb
loop
jl
or
cmp
pop
mov
nop
out
int3
sarl
inc
out
rcrl
icebp
cwtl
xchg
push
mov
mov
jno
hlt
call
stos
gs
mov
sahf
rolb
cmpsl
loop
cwtl
xor
mov
lods
sbb
pop
dec
push
inc
loope
outsb
iret
int
outsb
bound
cli
loop
add
mov
add
loop
push
xor
mov
jbe
mov
loop
mov
fcoml
pop
mov
sub
lds
jmp
dec
stc
xchg
cmc
jmp
notl
insb
sub
gs
push
sbb
sub
sbb
sub
rorb
out
enter
adc
adc
add
xchg
test
sub
stos
jmp
push
mov
cmp
cmp
adc
jns
sub
mov
loope
out
ja
jg,pn
or
mov
adc
inc
xchg
and
and
outsb
stc
sbb
mov
int3
andb
lcall
aad
xor
and
and
or
shrb
mov
stos
insl
inc
pop
loop
nop
sbb
mov
test
push
xor
out
push
mov
daa
jb
jne
lret
pop
movsb
add
fdiv
or
fwait
in
insl
jle
xor
pop
loop
pop
cli
mov
loop
fcompl
lret
push
stos
jmp
add
push
mov
xchg
in
lods
or
jbe
popf
pop
loop
es
cltd
mov
out
aad
sbb
or
jg
test
adc
xor
fisubl
xchg
loope
repz
or
pop
mov
movsb
add
add
xor
xadd
dec
and
cmp
and
int3
add
mov
inc
inc
push
inc
lock
out
mov
loope
jle
adc
push
push
out
or
ja
hlt
xor
xor
dec
cmp
and
in
xchg
jg
mov
mov
je
adc
out
loope
dec
cmpsb
movsl
xlat
out
bound
aam
imul
stos
sbb
xor
lock
cmp
out
cmp
stc
and
adc
push
icebp
ja
ss
rorl
add
jl
repz
jb
adcb
iret
add
or
js
out
loopne
bnd
and
lods
jp
out
mov
loope
push
fmulp
sub
push
or
sahf
xor
gs
mov
les
fdivrp
aaa
mov
jne
adc
sub
loope
mov
test
dec
add
sar
ja
push
sub
lret
dec
pop
inc
stos
xchg
or
jne
cmp
cmpl
xchg
in
jge
loop
sbb
mov
add
pop
lods
push
out
inc
xor
jmp
and
push
mul
lahf
cmp
icebp
add
xchg
mov
dec
cwtl
dec
ret
mov
xchg
popf
pop
fcoms
cmc
adc
pop
out
mov
out
and
add
pop
dec
call
in
pop
loop
xor
divb
ret
enter
loop
xchg
xor
cld
xor
adc
pop
push
mull
mov
or
cwtl
in
loop
pop
adc
inc
or
mov
push
cmp
cwtl
loop
in
aaa
outsb
pop
inc
sub
rol
xor
loop
cltd
out
and
pusha
sub
rorl
xchg
nop
arpl
enter
loop
mov
movsb
std
jmp
push
cmp
add
fnstenv
in
pusha
out
xor
sub
sub
aas
dec
stc
pop
int
stos
out
pop
rolb
mov
into
testb
push
add
loop
lods
inc
data16
push
cwtl
loop
dec
pop
mov
loop
and
mov
mov
or
pop
loop
lea
adc
in
adc
add
jl
mov
and
loope
sbb
roll
pop
mov
sbb
imul
fcompl
icebp
jns
dec
ret
pop
loop
and
cmpsb
add
in
push
scas
cmp
sar
xor
out
jp
cmp
fsubrp
rcrb
or
in
and
sub
pusha
mov
es
outsl
cmp
int3
out
scas
mov
sub
mov
sub
daa
icebp
imul
xor
cmp
arpl
push
inc
lock
les
pop
push
jmp
in
mov
mov
fistpll
add
aas
clc
dec
mov
mov
daa
fsubs
xor
sub
aas
sbb
mov
dec
out
cmp
mov
loop
inc
jbe
sti
jnp
cmp
movsb
mov
enter
icebp
jl
mov
or
decl
jno
mov
lahf
or
push
cltd
loop
hlt
add
scas
xchg
push
sbb
mov
rol
aaa
stc
mov
lock
dec
je
adc
in
sbb
jno
shrb
loop
lret
loop
xchg
mov
fsubs
loop
xchg
xchg
stos
sbb
push
icebp
adc
into
mov
jl
out
push
and
movsl
pop
ret
sbb
dec
dec
inc
sbbb
sub
mov
mov
sbb
jle
insb
aas
push
andb
ret
into
aaa
shll
xor
insb
inc
std
dec
jbe
scas
mov
push
pusha
mov
ljmp
add
in
push
pop
insl
and
shll
fs
mov
xor
out
xchg
in
push
adc
ljmp
fdivl
jecxz
push
sti
pop
and
loop
imulb
cmp
jno
out
ret
xchg
loop
in
lea
icebp
mull
mov
insb
cmc
hlt
mov
stos
loop
sahf
addr16
adc
mov
cmp
shl
icebp
dec
add
subl
and
rcrl
xor
in
mov
mov
cmp
sti
push
and
call
sbb
test
xchg
loop
jnp
pusha
mov
mov
jae
aaa
ret
jl
std
xlat
mov
ljmp
daa
int3
scas
jno
inc
test
adc
sub
loop
jnp
or
pop
shl
lods
xor
loop
test
daa
loop
sub
repz
dec
mov
lea
add
iret
add
pop
cmp
rcll
lret
mov
test
nop
mov
ja
loop
jne
stos
icebp
and
out
push
xchg
xchg
jmp
mov
bound
sub
jo
rep
sbb
iret
stos
fwait
test
cli
loop
add
push
outsb
rclb
inc
std
and
into
push
out
mov
push
mov
loop
mov
lahf
fidivs
mov
mov
push
imul
mov
sub
jne
cli
push
dec
xor
loop
or
sub
pop
stos
dec
xchg
out
adc
dec
iret
jg
cmp
test
rorl
nop
movsl
or
cmp
out
leave
fs
jns
insl
movsl
out
sub
loop
mov
rsm
test
pop
push
xor
loop
lods
jmp
jnp
pop
out
enter
inc
sub
adc
xchg
mov
cmp
lcall
jle
add
xor
adc
or
jg
push
xchg
imull
nop
fists
icebp
loope
ds
inc
and
push
lods
or
sbb
xor
mov
inc
das
shl
stos
mov
and
sbb
xor
scas
and
arpl
jbe
sbb
mov
cmp
es
test
js
cmpsb
push
loop
and
sbb
xor
push
and
loop
inc
inc
push
or
out
jns
sub
jnp
enter
int3
or
add
iret
inc
jbe
xchg
push
inc
ror
dec
je
or
gs
add
sahf
aas
cmp
les
sbb
or
cld
rclb
add
jg
adc
incb
mov
mov
das
dec
gs
in
int
icebp
fldcw
in
gs
pushf
xor
loop
scas
sahf
lret
fidivs
xchg
pop
outsb
jl
cmc
mov
loop
aam
pop
into
xor
mull
jl
fwait
out
andl
xchg
mov
scas
lock
shll
int
mov
in
fisttpll
bound
jp
inc
imul
jne
call
push
mov
loope
cmp
xor
repz
sbb
xor
shl
push
and
pop
mov
pop
gs
test
jns
pop
xchg
pushf
mov
inc
mov
in
mov
mov
cmp
cmp
pop
outsl
loope
sarb
rorb
in
xor
push
loop
in
imul
and
sub
test
loop
adc
push
dec
mov
loop
inc
dec
in
les
pop
lret
dec
test
mov
hlt
sbb
jbe
into
or
push
out
sbb
cmpsl
shlb
aam
xchg
mov
lods
and
scas
fisttps
sar
mov
arpl
xchg
stc
outsb
pop
pop
movsl
push
and
loop
fcompl
rorb
data16
adc
mulb
or
mov
lds
loop
xchg
shrl
sub
aad
in
or
mov
pop
test
sbb
pop
cmc
cltd
mov
cmp
mov
fs
mov
xor
cli
daa
jmp
test
hlt
mov
jb
mov
jmp
and
push
push
mov
scas
xchg
data16
mov
in
pop
dec
into
push
loop
lcall
loop
dec
lods
adc
and
mov
out
lret
mov
nop
loop
insb
sbb
scas
loop
inc
insl
push
cmp
mov
je
mov
cmpb
cmp
xchg
jb
arpl
ret
loop
push
xor
mov
dec
ss
xchg
pusha
and
add
mov
leave
lods
aam
fsts
and
adc
loop
gs
cmpsb
out
scas
loop
sti
decl
jb
in
push
js
popa
adc
addl
sahf
loop
divl
or
ret
dec
xchg
xchg
lds
imul
loop
int3
idivb
sti
loop
mov
push
xchg
stc
xchg
add
sbb
jo
mov
loop
mov
loopne
aam
xchg
leave
mov
insb
leave
xchg
in
in
push
dec
popf
jb
loop
lods
mov
rorl
xchg
mov
lahf
xor
loop
or
mov
test
pop
jb
loop
in
mov
stos
and
sbb
iret
je
bound
sub
lret
in
adc
in
loopne
dec
inc
push
cmp
adc
sbb
pop
loop
sti
add
fs
jle
out
adc
loopw
into
lods
adc
loop
inc
sub
loop
dec
lret
cwtl
mov
mov
push
sarb
incl
rcll
jl
int3
mov
dec
test
jge
test
sub
jne
xchg
and
mov
ret
call
lcall
loop
adc
ds
pop
dec
loope
jp
cmp
adc
loopne
pushf
mov
mul
cmpsb
out
scas
or
jle
loop
mov
pop
mov
int3
xor
pusha
dec
lds
mov
push
or
xchg
test
scas
or
dec
cmp
popf
call
icebp
dec
loop
xchg
ss
mov
mov
cwtl
mov
clc
repz
inc
mov
out
shll
xlat
in
push
sub
jp
popf
iret
mov
add
js
sbbl
jnp
insl
stos
lret
ds
loop
jecxz
jge
and
sub
sbb
imul
sub
mov
inc
les
ret
push
loop
gs
xor
xor
loop
mov
cmc
and
int3
imul
xchg
push
call
cmovge
jmp
or
in
add
mov
jo
loop
repz
fnsave
cmpb
add
add
in
lret
mov
idiv
rorl
das
mov
lods
cmpsb
in
add
adc
ror
out
push
add
pop
mov
cs
outsb
sub
loope
insl
pop
mul
add
sub
loop
mov
and
aam
fwait
loop
and
push
loop
mov
subb
inc
loop
lar
xorl
in
fldt
in
int3
xchg
cmpsl
loope
icebp
dec
or
ds
mov
sub
loop
pop
cli
adc
add
loop
test
mov
loop
cltd
negb
aad
xchg
loope
and
dec
popf
mov
popf
inc
je
loop
aas
mov
jmp
repnz
mov
xchg
pop
or
loop
stos
repz
int3
pop
xchg
pusha
iret
vcomisd
push
add
add
aaa
jp
cs
add
xchg
xchg
sahf
loopne
mov
std
hlt
ret
in
pushf
stos
push
loop
pmullw
inc
sti
cmp
pop
mov
loope
cmpsb
push
clc
ljmp
mov
lcall
insl
stc
stos
mov
xchg
call
out
mov
sti
adc
mov
pop
loope
fdiv
mov
or
hlt
int
cmc
add
xchg
pusha
pop
mov
sbb
pop
push
roll
sbb
adcb
push
mov
push
jno
leave
dec
loop
push
cmpl
rcll
sarb
xchg
ljmpw
jp
xor
enter
rol
out
dec
mov
std
loope
jl
mov
add
sub
cli
hlt
psrad
xor
in
sub
xor
jecxz
mov
loop
shll
adc
cmc
scas
push
jp
dec
mov
icebp
jle
cmp
push
push
adc
mov
xchg
push
mov
enter
mov
inc
cmp
add
loop
and
insl
push
sub
or
ss
xor
hlt
xchg
sbb
xor
xor
loop
lea
repnz
loop
sbb
fsub
pop
mov
sti
aad
aas
mov
insb
or
xor
pop
and
cs
or
mov
out
dec
pop
xor
loop
xchg
cmp
jnp
inc
push
jbe
ret
push
xor
mov
fs
add
adc
xor
xor
jo
fidivl
pop
jmp
xor
jecxz
cs
jno
std
mov
mov
call
mov
mov
xlat
sbbl
jno
push
lods
lock
jg
and
loop
pop
jne
or
setb
jmp
loop
pusha
ret
insb
jbe
inc
fsubp
or
mov
inc
loop
sub
loop
push
mov
fs
and
rol
or
aam
mov
cmp
and
pop
jae
test
mov
xchg
fwait
xor
mov
cmp
sub
jae
cli
dec
mov
aaa
jle
or
sbb
push
loope
test
pusha
add
pop
mov
aaa
in
push
loop
mov
stos
mov
lcall
jns
fwait
or
repz
imul
push
xor
xor
add
jb
loop
add
sbb
add
mov
mov
stos
xlat
xchg
xor
cli
mov
cld
and
xor
cmp
dec
popf
dec
jg
test
jge
dec
aaa
icebp
loop
ffree
int3
inc
ja
gs
mov
cli
add
sbb
mov
mov
mov
jg
call
loop
test
inc
sbbl
loop
mov
negb
stc
xchg
daa
mov
pop
test
imul
push
js
popf
cmp
test
imulb
and
add
and
loop
mov
add
bound
jne
jns
mov
ret
sbb
pop
jl
xor
push
inc
jle
cmpsb
loop
jae
arpl
movd
mov
fstps
xchg
insl
adc
push
mov
jp
lods
in
cmc
cmpsl
loop
mov
pop
loopne
push
mov
mov
icebp
xchg
in
loop
lods
ret
or
jae
in
jp
jge
push
bound
nop
gs
rorl
loopne
xchg
jp
lret
loop
stos
mov
mov
mov
cltd
jecxz
add
shll
push
outsl
and
sub
pop
push
dec
add
and
stos
scas
adc
adc
mov
loop
jne
jl
in
adc
or
push
testb
mov
pushf
jp
das
adc
les
negl
pop
aam
call
cmp
rcr
je
xor
loopne
jmp
xchg
js
or
insb
daa
inc
xor
aaa
into
push
lret
xchg
data16
out
add
shll
xor
in
or
or
jnp
sbb
cmp
push
ficoml
imul
es
xchg
mov
loop
gs
mov
icebp
push
sub
fistpll
add
jl
pop
loop
sbb
mov
loop
cmc
mov
sahf
rorb
es
cmp
lcall
stos
orl
or
outsb
loop
jle
fcmovnb
cmp
cmp
or
clc
pop
cwtl
test
into
int3
flds
jle
dec
adc
xchg
and
loope
data16
and
push
pmaxsw
loop
into
in
xchg
push
insl
sub
loop
adc
cld
loop
and
cmp
shrl
and
test
cmp
cwtl
enter
shll
loope
jne
out
cmp
push
loop
hlt
mov
add
sub
pop
or
int3
in
pop
loope
ret
jbe
mov
xchg
in
jnp
xchg
fsts
push
and
arpl
lahf
mov
imul
fisttps
dec
push
call
dec
loop,pt
dec
mov
ja
pusha
or
mov
loop
dec
scas
xchg
das
cmp
mov
negb
jns
rorb
jg
xchg
movsl
lahf
cmp
fwait
sbb
loop
daa
sub
das
addr16
mov
in
cmpsl
xor
sbb
sbb
jp
inc
add
cmc
sub
enter
mov
cmpsb
jno
mov
push
add
mov
bound
loope
repz
lds
mov
loop
adc
mov
sarb
lret
xlat
sbb
js
int3
and
out
aaa
sbb
loop
pop
xor
jo
or
mov
and
sub
push
push
dec
push
jle
cld
jae
cs
loop
pop
ret
mov
loop
cmpsl
rclb
jns
inc
cwtl
hlt
in
enter
loop
in
or
xchg
add
es
loop
jle
loopne
popf
jo
loop
inc
imul
addr16
xchg
push
jecxz
mov
cltd
inc
out
lret
push
decb
xor
jl
mov
push
jns
xchg
mov
in
pop
push
dec
scas
fs
mov
add
cmp
jb
pop
cwtl
sahf
inc
xchg
cmp
pop
or
cmpsb
int
loope
clc
or
push
cmp
mov
fisttps
sub
movsl
ret
mov
dec
sti
mov
push
cmp
sub
bound
aas
fs
inc
push
out
dec
and
inc
je
es
in
and
dec
or
enter
pop
nop
rorl
loop
imul
add
or
loop
fstpt
hlt
rcll
mov
pop
loop
or
push
add
lea
xchg
jb
lahf
mov
loop
dec
mov
sub
addr16
aas
xchg
mov
xchg
shlb
mov
loop
mov
xor
mov
das
dec
jmp
shl
cmpsb
ret
or
inc
push
pushf
mov
leave
mov
fsubrs
sbb
push
jns
jb
push
adc
movsb
push
mov
loop
adc
mov
or
jne
xchg
xor
adc
pop
cltd
jbe
std
ret
popf
loop
sar
in
mov
psraw
jne
repz
int3
popaw
cli
fstps
pushf
shl
scas
out
xchg
scas
adc
push
insl
xchg
lcall
xchg
arpl
insb
adc
xchg
mov
clc
adc
repz
loop
lods
push
xchg
leave
add
jbe
sub
sub
mov
pop
sbb
lds
int3
xor
cmp
and
mov
mov
sub
iret
es
daa
out
push
loop
cmpsb
pop
fucom
mov
and
aaa
aas
loope
cmp
dec
add
inc
mov
loop
adc
rcrb
sti
sbb
cmp
dec
mov
jmp
jle
pop
mov
andl
loop
jge
adc
sub
insl
cmp
lret
sahf
cltd
mov
mov
jne
fstpt
in
mov
mov
mov
or
lea
and
add
and
push
movsb
test
movd
jp
addb
xchg
insb
jge
shl
mov
mov
inc
test
popa
mov
loop
mov
call
sbb
mov
jne
sti
jl
mov
mov
fisttps
or
mov
cmp
adc
daa
xchg
sbb
loop
sbb
out
push
loop
cmpsl
adc
mov
jle
jbe
call
or
cli
pop
fs
adcb
and
out
imul
loop
mov
xchg
bswap
jl
or
in
dec
xlat
dec
fstps
xchg
inc
faddp
into
iret
nop
gs
in
shr
jl
adc
in
call
loop
les
sbb
pop
push
loope
mov
jecxz,pn
jbe
insb
sub
mov
into
movsb
sub
cs
mov
jbe
xchg
xchg
fdivp
dec
dec
loop
dec
icebp
stos
push
or
jl
and
mov
pop
pop
mov
or
cs
sub
xor
repnz
ja
lock
in
loope
mov
call
loop
sub
mov
loop
inc
mov
out
mov
jl
jp
adcl
push
inc
scas
daa
outsl
sub
or
loopne
bound
mov
or
dec
imul
pop
loop
pop
push
xchg
mov
aam
inc
clc
std
out
cmp
add
into
mov
lret
movsl
aam
inc
loop
xchg
dec
pusha
out
jne
or
push
push
out
dec
push
mov
mov
fsubs
data16
loop
push
and
pop
push
push
dec
insl
loop
lret
mov
mov
fcoml
xchg
movsb
cmpsl
jne
into
mov
das
std
push
fwait
in
cmp
sahf
mov
add
sub
cltd
pop
pusha
dec
jnp
jge
pop
jp
ja
pop
loop
mov
inc
int
mov
push
stc
mov
cmp
addr16
stc
mov
gs
mov
loop
in
push
cmc
loop
mov
dec
sti
js
loop
jb
pop
sub
push
lock
loop
movsl
xlat
fcoms
jns
mov
dec
stos
arpl
fldenv
xchg
ss
jecxz
sub
add
jae
outsb
xchg
jl
leave
or
test
push
push
and
and
and
lahf
mov
mov
dec
stos
loop
lock
sbb
clc
loop
inc
sti
out
add
rolb
and
jne
sub
aad
pop
loope
xchg
add
mul
shll
stc
mov
pop
jno
cmpsb
jns
adc
mov
xchg
popa
loop
mov
iret
push
add
out
loop
jl
dec
sub
xor
lret
shlb
cld
adc
loop
mov
pop
sbb
outsb
lahf
leave
dec
scas
insl
in
out
imul
xchg
mov
pop
fdiv
test
out
mov
mov
loop
cmp
push
mov
loope
xor
outsb
push
fwait
or
mov
loop
xor
gs
dec
push
jne
add
into
inc
push
fildl
xchg
mov
inc
outsb
out
test
add
sub
enter
in
jnp
add
call
mov
or
pop
jge
inc
inc
xchg
pushf
aam
push
ret
insl
mov
mov
loop
dec
out
pop
mov
movsl
push
pop
xchg
and
stos
cwtl
sbb
sbb
loope
hlt
iret
jne
loopne
out
loop
cmp
push
shl
sub
dec
dec
xor
adc
sahf
out
and
jle
loop
mov
pop
loop
cmp
inc
and
pop
xchg
and
loop
sti
jne
sbb
dec
loop
test
xlat
loope
in
add
stc
cmp
xor
fildl
clc
cmpsl
or
test
or
add
test
out
shrl
xor
daa
leave
inc
mov
movsl
push
fs
dec
jl
scas
pop
faddl
sbb
sbb
cs
sbb
push
enter
or
jg
cld
sbb
loop
clc
cmpsb
adc
into
sahf
loop
xorl
adc
cmp
out
dec
rcll
push
mov
sbb
stc
inc
jb
loop
mov
and
loop
pop
test
dec
imul
or
fldenv
ret
xor
jae
xchg
ja
icebp
fwait
mov
inc
and
divb
push
les
aam
mov
cwtl
mov
stc
xor
push
mov
adc
cmc
cmp
push
lods
aaa
popa
sbbb
jns
xchg
and
mov
imul
fldt
mov
or
je
lods
or
fsubrl
add
xchg
adc
fstl
inc
aad
in
rcrl
cwtl
xchg
push
fdivr
test
push
call
mul
into
in
insb
push
cmpsb
clc
loop
ds
dec
inc
and
lcall
ret
loop
mov
add
in
and
push
inc
pop
mov
jne
je
inc
xchg
push
gs
clc
cmpsl
jbe
in
sbb
das
lods
mov
add
daa
mov
jns
xchg
lret
icebp
js
cmp
popf
jp
jo
mov
xor
lods
sti
out
mov
xchg
cmp
xchg
lcall
fwait
mov
sub
shrb
mov
stos
sahf
inc
jno
paddw
loop
push
iret
faddp
jge
jmp
add
lea
je
jg
shlb
stos
test
loope
xchg
xchg
cltd
loop
jae
or
and
repnz
iret
add
push
loop
or
mov
cli
sbbl
cmp
test
loop
aam
aas
lret
inc
loop
icebp
mov
loop
ja
out
rcrb
test
scas
push
push
in
dec
add
pop
sbb
nop
xchg
in
jo
test
lahf
aaa
movb
iret
mov
adc
mov
jecxz
xlat
pushf
xor
dec
inc
or
js
test
jge
stc
xchg
mov
cmpsl
add
es
dec
lods
scas
sub
test
pushf
or
insl
orb
test
adc
addr16
pop
loop
in
and
jne
jbe
jg
jae
js
xor
lret
jno
inc
pop
mov
out
insl
aas
lods
roll
or
data16
fcomi
mov
add
push
inc
das
push
mov
jns
sbb
ret
mov
loop
mov
add
inc
pop
push
lret
in
push
sub
xor
fimuls
cmp
jecxz
sti
or
stos
movsl
fs
cwtl
xlat
jl
mov
dec
add
adc
pop
dec
js
mov
sub
jbe
aam
aaa
fbstp
icebp
inc
jne
cmp
jmp
and
clc
fdivrs
mov
and
mov
lret
and
out
sub
mov
xchg
pop
and
xchg
mov
dec
fisubs
cmpb
das
jmp
and
sahf
shll
or
fadds
jge
aaa
sbb
sahf
push
mov
popf
mov
in
or
adcl
mov
and
pusha
jp
jae
xchg
sub
mov
leave
pop
call
xor
out
mov
std
loop
sbb
or
lock
sbb
mov
in
cmpb
iret
dec
and
loop
outsl
scas
cli
lret
or
dec
aad
mov
mov
or
dec
inc
pop
sarl
pop
in
mov
xchg
jg
push
mov
loop
enter
out
lods
jns
ret
sub
jmp
push
or
sbb
rcll
adc
pop
cmp
ss
mov
imul
lret
xchg
and
sbb
in
cmp
stos
xor
ss
mov
loop
adc
xchg
lods
dec
notb
mov
int
mov
add
adc
loopne
pop
xor
mov
ds
fmuls
clc
js
out
mov
hlt
add
xchg
push
fwait
loop
pop
jecxz
andl
aas
xlat
mov
push
xchg
mov
sti
int
and
ret
mov
int
pop
jmp
jns
sub
int3
add
xor
arpl
lods
pop
or
xchg
in
leave
add
sahf
bound
outsb
or
pop
ss
loop
in
gs
push
sarb
cs
jmp
aam
insl
jns
xchg
jl
jmp
arpl
xchg
pop
hlt
sarb
lret
dec
cwtl
arpl
adc
js
mov
inc
cmp
jmp
mov
in
jbe
mov
ljmp
jg
jle
and
mov
adc
pop
mov
scas
leave
aad
mov
mov
push
sbb
clc
sti
jno
out
push
loop
sub
decb
dec
rorl
leave
je
mov
loop
test
and
cld
jecxz
lds
jns
int
lret
cmp
decl
lahf
add
loop
push
xchg
mov
loop
rorl
sub
loop
sbb
dec
inc
leave
jnp
xor
cmpsl
xor
sub
in
xor
in
and
push
or
sarl
out
mov
jae
int
loop
fistpl
inc
xor
out
stos
call
xor
adc
pusha
fs
pop
jno
inc
jns
jp
dec
loop
scas
push
dec
cmp
mov
jb
and
mov
jnp
cmp
arpl
or
hlt
arpl
jge
pop
push
loope
xchg
mov
dec
push
pop
hlt
dec
loop
jle
divl
dec
loop
pop
outsl
imulb
int3
loop
pop
push
cmp
push
cmpsl
loop
cwtl
nop
add
bound
pushf
loop
add
xchg
fwait
dec
loop
mov
push
loop
hlt
fldenv
jp
loop
mov
add
and
xchg
dec
mov
dec
fxch
jp
xchg
ret
xchg
into
mov
loop
in
push
sbb
jnp
push
clc
xchg
loop
pop
mov
loop
mov
fcom
cmp
clc
das
in
lahf
or
mov
js
ja
mov
in
mov
xchg
shlb
std
xchg
sarl
xchg
dec
or
adc
cmp
inc
je
or
mov
mov
adc
mov
pop
sub
les
sub
pop
outsl
dec
cmp
and
loop
fdivr
jg
shlb
cli
xor
loope
or
mov
repnz
in
ljmp
sub
fucomi
jl
repnz
loop
pusha
popa
xor
mov
lock
out
lcall
std
test
pop
add
call
and
loop
sub
sbb
xchg
out
stos
mov
loop
sub
fwait
and
mov
punpcklwd
loop
push
inc
fisubs
les
sbb
insb
jnp
and
ds
cwtl
testl
aam
gs
cmp
or
rorb
mov
sub
mov
mov
dec
daa
jno
xchg
fs
popf
and
sbb
mov
cli
and
jnp
adc
and
jp
ret
xor
loop
jmp
sti
je
lret
loop
xlat
mov
and
ficomps
das
into
jle
ss
inc
or
push
mov
fstps
lahf
mov
pop
imul
mov
negb
cmpsl
add
loop
mov
je
in
xchg
insb
loop
sub
lret
xor
cmpsl
jb
push
fwait
les
or
add
push
xchg
loop
mov
repz
shlb
loop
cld
add
pushf
je
pop
and
in
mov
std
xlat
push
test
cmp
xchg
sahf
insb
inc
pop
data16
loop
or
testl
push
gs
inc
loop
or
pop
cmp
cmp
ds
jp
cli
cmp
adc
stc
ja
pop
loop
adc
aaa
clc
dec
jp
loop
mov
xor
ficompl
filds
imul
jge
jno
xor
in
pop
mov
addb
repnz
loope
xor
pop
into
jno
ret
inc
call
outsb
or
out
call
jno
push
cmp
loop
or
or
ret
sti
sub
mov
cmpl
pop
dec
mov
jne
outsb
stos
jg
sub
xchg
scas
sbb
xor
sbb
sub
jp
fwait
mov
jle
sti
sub
dec
adc
inc
bound
push
or
aad
cmc
sub
pop
loope
mov
xchg
iret
xchg
out
ds
sbb
loop
sub
addr16
adc
push
shrl
cmpb
inc
and
pop
lahf
fdivr
popf
popa
inc
inc
loop
sbb
inc
dec
sahf
mov
jmp
loop
sbb
testb
icebp
add
sub
push
inc
adc
out
lods
xor
es
call
fldenv
daa
pushf
pop
cmpsl
in
sub
fucomip
mov
push
popf
loop
sub
shrb
jno
in
push
and
add
sbb
out
icebp
xchg
pop
fiaddl
cmpsl
dec
inc
loop
pusha
pop
mov
pop
loop
leave
jno
lahf
lds
jbe
imul
add
rorb
loop
xor
jmp
xor
mov
aam
loope
imul
in
cmpsl
mov
aas
sar
or
imul
xor
dec
hlt
loop
xor
leave
loop
and
movsb
ds
lahf
pop
test
cltd
out
xorl
or
je
sbb
dec
xchg
add
or
sub
sub
paddsb
fisubrl
and
dec
out
sahf
lahf
xchg
mov
push
loop
cmpsb
push
cmp
bnd
nop
test
adc
xchg
push
fucom
mov
scas
add
js
cli
hlt
mov
adc
push
movsb
mov
push
fs
and
add
loop
push
pop
cmp
xchg
cmp
dec
xor
scas
push
jb
add
jle
jnp
imul
mov
sbb
nop
loop
jns
paddq
test
dec
lret
sarb
shrl
int
mov
push
xchg
lcall
std
pop
loope
push
cmp
inc
in
bound
aad
div
adcb
in
sbb
pop
push
mov
test
dec
jbe
dec
shrb
dec
jecxz,pt
sahf
stos
loop
fwait
out
sbb
xchg
lret
rcrl
insl
pop
rorb
scas
sahf
fbstp
xor
pop
aaa
loop
pop
rol
pop
sti
lret
int
inc
call
loop,pt
mov
ss
jbe
cmp
dec
cwtl
mov
je
pushf
lcall
stc
mov
adc
ds
lods
cmp
in
ret
popa
incl
es
or
jno
jns
jge
push
out
test
or
inc
jb
sub
out
mov
push
add
repnz
in
ja
adc
mov
fwait
pop
repnz
adc
cmpsl
out
inc
cmp
jno
mov
cmc
ss
cmp
or
shl
add
mov
loop
fwait
jmp
jnp
push
xlat
shrl
mov
daa
cmp
imul
loop
and
add
inc
dec
push
mov
push
xchg
loop
daa
pop
dec
loope
mov
call
xchg
shl
incl
inc
cmp
mov
mov
std
dec
loop
push
mov
cmp
loop
mov
mov
adc
repnz
js
xchg
mov
xchg
nop
mov
xchg
push
push
pop
les
stc
sbb
ficompl
or
push
decb
mov
pop
out
pop
loop
dec
cwtl
mov
loop
addr16
pop
jne
xlat
loop
jno
je
nop
jmp
out
xor
test
push
shufps
popa
nop
sbb
jns
dec
pop
adc
fcoml
cmp
loope
out
jge
xor
jecxz
and
sbb
adc
jno
push
or
outsb
out
out
add
sub
mov
or
ljmp
fldcw
lock
push
inc
adc
jns
cs
jp
in
dec
push
or
push
icebp
pop
repz
in
cltd
loop
adc
cmc
stc
sahf
ficoms
push
xor
xchg
movsl
inc
pop
sub
out
push
push
or
lret
jnp
pop
arpl
aam
jmp
sahf
les
loop
mov
and
cmp
or
movswl
outsl
mov
sbb
js
pop
sbb
inc
cmpsl
pop
mov
pop
push
fstpl
loop
mov
loop
ret
mov
dec
loop
sub
mov
add
scas
call
pushf
dec
jno
sar
xor
sub
sti
push
loop
pop
lahf
nop
xlat
or
into
adc
rcl
in
insb
imul
loop
ret
add
loop
dec
pop
dec
push
cmp
loop
pusha
pop
bound
push
incb
jb
jns
or
xor
push
mov
sub
fcmovnbe
pop
and
add
xchg
int
sub
jo
sub
mov
cmpsl
loop,pn
sbb
je
jns
clc
xor
rcrl
loope
push
mov
mov
scas
out
mov
inc
popa
pop
xchg
adc
loop
shl
pushf
enter
loop
sub
inc
pop
inc
inc
icebp
mov
out
jmp
ds
adc
cmp
loop
pop
sbb
jns
or
pushf
push
bound
inc
cmp
in
stc
add
repz
out
loop
pop
test
mov
out
fs
and
mov
xor
adc
loop
sub
cmpsb
loop
cmpsl
iret
js
add
loop
cmp
push
mov
push
jl
repz
cmp
mov
enter
sub
jb
inc
loop
mov
and
jmp
loop
sbb
jno
shrb
ss
or
cmp
daa
inc
cmp
out
mov
out
rorb
incl
mov
sbb
sbb
cmp
cmpsb
and
out
loop
xor
hlt
push
adc
data16
cmp
pop
movsl
sarb
mov
out
aas
test
fcomp
pop
stos
lea
push
loop
addl
cmpl
out
pop
stos
pop
xchg
stc
sub
loop
push
mov
adc
shrl
mov
out
xchg
daa
loop
adc
das
xchg
into
xchg
mov
push
mov
dec
lahf
lret
xor
pop
ret
imul
imul
inc
add
data16
push
jo
jbe
cld
fidivs
loopw
xor
mov
xchg
push
cltd
fnstcw
mov
fimull
mov
out
icebp
push
jge
stos
loop
cmc
and
mov
pop
rcrl
lahf
jmp
pop
data16
inc
pop
add
and
fwait
mov
cli
lock
shll
xchg
xlat
sub
cmc
loop
out
mov
pop
add
popa
loop
cwtl
lock
adc
adc
testl
inc
push
inc
mov
test
mov
cwtl
popw
lock
adc
test
rcl
loop
sbb
insb
stc
orb
mov
add
loop
add
xchg
push
pop
loop
es
int3
insb
mov
cmp
adc
xor
and
mov
xor
jno
push
sub
jnp
mov
xchg
test
cltd
and
ljmp
add
mov
cwtl
das
int3
adc
loop
maskmovq
imull
push
inc
inc
pop
dec
jne
loop
cli
iret
pop
rol
enter
loop
nop
add
insb
sub
push
sbb
loop
cmp
ss
adc
cmp
fsubl
xchg
testl
cmpsb
pop
pop
loop
sbb
jecxz
loop
int
mull
add
sbb
hlt
bound
dec
loop
xor
mov
or
sti
sarb
loop
cmpsb
cltd
add
loop
jno
dec
or
push
xchg
mov
frstor
fisttps
pop
loope
sar
insl
je
jmp
pop
and
les
mov
test
push
fisubs
rep
or
loop
jle
sub
push
call
es
push
lods
mov
jbe
in
in
pop
and
inc
ret
inc
arpl
aaa
jns
adc
mov
repnz
mov
pop
in
js
lods
and
in
sbb
out
xchg
loop
movsl
movsb
mov
push
dec
mov
enter
sbb
and
xchg
movsb
test
sahf
jae
xchg
mov
mov
cmp
mov
repz
popa
ss
xchg
in
push
mov
sbb
and
mov
sub
pop
pop
push
jge
push
inc
inc
fxam
xchg
mul
inc
repnz
std
lret
or
xor
sub
and
jp
xor
js
cwtl
mul
shrb
jge
xchg
dec
lock
cmpsb
mov
cld
fsubl
out
add
xchg
mov
inc
clc
ret
xchg
out
sbb
xchg
adc
jle
push
stos
scas
call
pusha
or
not
jne
push
mov
mov
dec
loope
adc
daa
adc
jmp
fisubrl
loop
dec
mov
fstl
sarl
xor
dec
aaa
add
pop
es
test
shlb
or
in
ss
addr16
inc
loop
push
test
aam
lahf
loope
cltd
xchg
push
pop
mov
mov
xchg
pop
xchg
dec
cmp
imul
insl
fs
nop
push
shll
arpl
div
jmp
std
test
push
push
loop
adc
es
inc
jb
sarl
add
push
daa
in
cmp
xor
jns
xchg
shr
loopne
lahf
jecxz
adc
loop
aaa
push
jno
pop
dec
jbe
add
rorb
lcall
stos
cmp
add
subb
add
mov
dec
or
mov
lret
xor
loop
xor
adc
cmpsl
arpl
shrl
jae
cwtl
cmpsb
mov
dec
testl
push
faddp
lock
loop
mov
add
loop
jb
or
jns
pop
loop
pop
sbb
mov
push
cmp
popa
ficomps
xor
sti
sub
bound
mov
lahf
out
fwait
jbe
or
add
inc
loop
test
xor
cmp
daa
loop
mov
mov
xchg
mov
or
loop
rclb
or
aad
shrb
mov
loop
pop
sub
xor
dec
mov
dec
mov
push
xchg
pop
inc
loop
jmp
pop
popf
add
mov
ds
pop
lahf
ja
mov
inc
push
loop
fsts
mov
lock
push
ljmp
aad
aas
stos
sub
or
lret
mov
es
or
lcall
loop
adc
xchg
mov
jae
loope
mov
jns
sbb
xchg
stc
aam
push
jnp
cmp
sbb
xchg
cmp
and
divl
loop
inc
xor
dec
daa
loop
stos
sbb
mov
inc
dec
out
push
loop
dec
or
fdivr
fwait
sbb
pop
lahf
jns
or
in
push
ds
mov
pop
jne
ror
pop
or
inc
cmp
sbb
insl
and
jmp
mov
inc
in
shl
push
xchg
loop
aas
cli
lods
jmp
xorb
test
pop
jle
dec
mov
rcr
clc
mov
loop
inc
cmp
out
aas
and
fs
cmc
push
inc
outsl
cmp
int3
pushw
cli
loop
and
xorl
sbb
jle
adc
jne
add
push
jecxz
rclb
pop
out
push
loop
jnp
sahf
xchg
into
mov
adc
lret
sub
imul
out
jge
in
or
cmp
adcb
daa
sahf
lcall
sarb
pop
fsubl
dec
loop
cmp
mov
fisttpll
ret
cmc
shlb
loop
xor
outsb
mov
in
call
loop
ja
imul
shl
jb
mov
addr16
loopne
or
cmp
out
push
enter
cmpsl
jmp
dec
pop
outsl
hlt
push
jns
lret
in
sbb
dec
pop
sbb
adc
aaa
loop
lahf
cmc
jne
mov
xchg
xchg
push
hlt
mov
pop
shll
mov
or
sub
jbe
push
hlt
inc
xor
xor
loope
sbb
cltd
aad
es
loop
sbb
push
out
sub
je
cs
in
and
lea
or
nop
jno
push
xor
and
push
add
cmpb
pusha
or
stos
out
lret
rcll
mov
cmpb
push
das
les
test
dec
mov
loop
mov
or
cmpsl
and
inc
jp
mov
into
icebp
js
out
rorl
arpl
or
xor
lret
shrl
jns
rolb
call
imul
mov
jne
stc
int
in
movsl
leave
popa
pop
adc
cmp
in
aad
loop
iret
xchg
sbb
and
loop
flds
in
in
xlat
stc
aaa
loop
and
dec
jbe
daa
lret
mov
in
rcl
out
inc
add
aas
mov
std
inc
fbstp
cmpb
pop
loop
xor
in
btl
loop
inc
push
fisubl
add
scas
rol
or
pop
loop
lods
mov
xchg
mov
das
sbb
sbb
rcrb
cmp
pusha
mov
daa
pop
mov
dec
popa
out
rolb
ret
jo
nop
shl
in
cwtl
dec
fsubrl
sbb
cmpsl
add
popa
arpl
mov
dec
loopw
and
cmp
repnz
add
clc
mov
push
xchg
aas
aaa
fadd
out
push
dec
push
inc
rcll
testb
xchg
xlat
js
repnz
imul
add
jns
notb
in
and
xor
sub
je
ret
test
movsb
ss
clc
setno
std
adc
stos
xchg
movsl
into
cli
out
inc
dec
mov
or
pushf
push
gs
mov
cltd
lret
cwtl
cmpsl
jl
xor
mov
loopw
sub
dec
loop
dec
sysexit
clc
or
xchg
adc
ss
orb
jle
lds
je
or
stos
sbb
shlb
or
dec
push
cmp
sub
xchg
pop
orl
adcl
test
mov
inc
out
loop
lock
cmpsl
jp
dec
hlt
sbb
loop
iret
pop
repz
loop
bound
out
test
loop,pt
mov
int3
popa
dec
sti
mov
fstl
mov
ss
inc
repz
insb
inc
out
enter
daa
push
iret
sub
std
sbb
rcll
lea
cmc
shld
jge
sti
xchg
shrb
inc
enter
mov
pop
insl
addl
inc
pop
jns
repz
loop
add
add
aaa
xor
fiadds
lahf
mov
pop
add
pop
flds
into
mov
loop
movsb
pop
inc
stos
dec
mov
loop
dec
fisttps
jecxz
loop
xor
gs
jmp
ret
data16
sbb
inc
inc
les
mov
out
xor
sahf
loope
mov
cltd
loop
push
stos
lods
insb
lret
jbe
loop
mov
cmc
inc
sbbb
fs
icebp
scas
int
add
iret
sbb
mov
xor
mov
inc
cmc
loop
jnp
cmp
inc
repz
stos
ja
jae
or
rclb
mov
dec
sub
mov
lock
and
enter
lret
adc
in
gs
loope
mov
fsts
pop
jmp
push
popf
sbb
pop
and
sub
mov
pushf
test
test
out
mov
cs
fwait
xchg
push
mov
sub
mov
adc
xchg
and
dec
inc
fstpl
sub
lock
ret
or
mov
mov
jp
adc
pushf
mov
or
aas
push
mov
repz
hlt
and
iret
mov
mov
mov
popa
mov
sub
addr16
pop
loop
cmpb
inc
sti
loop
vmwrite
ret
loop
add
mov
mov
adc
add
inc
loop
push
xchg
inc
mov
shlb
sahf
mov
adc
out
and
sub
adc
loop
fwait
sar
jo
jno
pop
orl
push
push
lcall
mov
push
aaa
mov
mov
add
xor
out
hlt
loope
pop
mov
sbbb
cli
mov
call
xor
stos
xchg
sub
or
add
out
insl
jbe
mov
inc
dec
jb
loop
lds
sub
mov
loop
lcall
enter
loop
mov
shll
ds
popf
ret
call
sti
cmp
mov
xchg
sub
loop
outsb
add
in
push
icebp
mov
xchg
jge
lods
and
mov
pusha
push
or
push
loope
xor
mov
cmpsb
dec
push
pop
loop
sti
enter
sub
loop
ljmp
cld
loop
push
sub
loop
out
popf
cmp
jl
pop
stc
imul
add
sub
rclb
or
out
inc
loop
push
cmp
or
lcall
mov
fnstsw
call
test
mov
loop
insl
inc
or
int
and
in
rorl
inc
and
movsl
dec
dec
outsl
jns
jne
aaa
in
adc
gs
push
les
loop
je
or
cli
dec
mov
nop
test
mov
rorb
push
and
xchg
inc
rcll
ja
add
xor
cli
out
loop
insl
data16
adc
push
flds
pop
inc
mov
mov
jne
xchg
cmpsl
enter
mov
out
push
pop
dec
add
add
cld
in
sbb
insl
pop
outsb
sar
ret
add
jp
pop
jb
out
mov
repnz
nop
ss
mov
sbb
and
pop
loope
cmp
inc
xchg
adcb
jmp
in
sbb
sub
aaa
jno
cmp
imul
pop
mov
xor
xor
cmp
fwait
dec
scas
dec
mov
loop
sub
in
pop
loop
ror
sub
and
xchg
out
jno
and
xor
int3
cmpsb
mov
or
inc
pushf
push
pop
or
fildl
jae
loop
or
xchg
push
xlat
cmpsb
enter
lods
mov
loop
mov
shl
scas
out
stos
ss
aas
mov
mov
push
mov
sbb
xor
or
ss
jb
cmp
aam
in
dec
jecxz
je
ret
mov
addr16
sbb
add
loop
fdivl
mov
jb
xor
mov
iret
fiadds
or
push
test
bswap
dec
mov
mov
loop
dec
jnp
loopne
arpl
mov
int3
mov
jle
push
or
outsl
push
add
or
push
mov
and
cmpsb
imul
pusha
sub
mov
xchg
loop
mov
insb
fidivrs
mov
mov
cmp
mul
dec
cwtl
inc
dec
loop
std
insl
leave
jle
inc
dec
loop
mov
lods
loope
xlat
movsb
xor
inc
dec
out
fstpl
push
mov
mov
dec
jp
cmp
mov
pop
inc
push
loope
mov
sub
jne
fnstcw
hlt
sub
jmp
lret
out
roll
xchg
call
sbb
mov
xor
pop
mov
mov
pop
into
cmp
add
iret
add
xor
jle
sbb
loop
dec
and
roll
mov
pop
inc
jecxz
mov
scas
jb
std
aaa
sarb
jae
xchg
call
mov
add
ret
lea
and
mov
xchg
loop
pushf
mov
test
dec
mov
stos
fnstsw
sti
push
cld
andl
xchg
bound
inc
insb
loop
fdivrs
jp
or
out
push
push
enter
jno
inc
jbe
fstpt
mov
repz
test
or
push
xchg
insb
jecxz
xchg
xchg
pop
cltd
jno
or
jmp
add
aad
out
mov
hlt
loope
test
cmpb
or
rorl
aad
jg
mov
jb
in
and
or
add
xchg
cmp
and
mov
cmp
jecxz
pop
loop
imul
loop
mov
jnp
sub
icebp
movsb
push
loop
gs
test
pop
jmp
outsl
lods
lret
adc
out
in
pop
into
jg,pt
xchg
fs
call
aaa
mov
pop
add
int3
out
and
sbb
cld
jmp
push
add
adc
loop
inc
bound
cmpsl
dec
loop
cmp
aam
loop
pop
mov
push
loop
sbb
mov
inc
frstor
loop
cld
xor
jg
push
leave
enter
popa
in
loopne
jb
xor
push
inc
call
mov
sbb
cmc
cmp
fstl
fdivrl
in
ljmp
or
sbb
loop
xor
jno
push
pop
add
jae
insl
bound
rcrb
fst
fcomps
inc
mov
loop
push
sbb
repz
and
adc
popf
lahf
std
pop
push
xchg
je
gs
jmp
mov
lea
jbe
loop
or
mov
leave
fiadds
je
mov
inc
xchg
enter
icebp
roll
std
or
or
in
inc
cmp
bound
dec
iret
loope
cmp
or
icebp
ret
jno
scas
xchg
jae
jmp
and
loop
sub
push
divl
jo
adc
fnstcw
inc
add
rorl
pop
push
test
loop
or
add
mov
adc
push
mov
sub
ret
mov
aam
sub
loop
mov
cmp
stc
push
dec
mov
mull
cmp
jne
in
dec
adc
cmp
sub
sbb
gs
loop
pop
mov
jecxz
loop
pop
aam
test
inc
inc
shll
mov
sbb
adc
push
lahf
movsl
loop
mov
or
lcall
inc
and
dec
push
loop
mov
lds
push
and
add
or
repnz
jbe
and
loop
scas
enter
mov
sbb
lret
loope
cmp
adc
bnd
jo
xchg
mov
adc
jp
cmpsl
xchg
pop
loop
fnstcw
lcall
stc
repnz
mov
sub
mov
psubb
loop
sbb
je
xchg
jp
dec
pop
adc
jb
subl
cmpsl
stos
repz
xchg
loope
pop
dec
push
xor
jbe
or
loop
sti
sbb
mov
rorl
inc
stc
int
mov
sti
add
jle
roll
ret
repz
lret
mov
jmp
les
insb
loop
adc
xor
out
dec
sub
mov
fs
clc
in
xchg
iret
addr16
or
es
cmp
or
dec
nop
lods
xor
inc
inc
sub
aad
xchg
loope
adc
loope
fisubs
jg
jbe
mov
loop
scas
xchg
pop
sbb
dec
sbb
pop
mov
ret
lret
in
out
dec
xchg
loop
lcall
jno
sub
sti
std
fnstsw
or
out
and
dec
loop
cmp
das
pop
dec
pop
les
push
repz
rorb
cli
add
mov
int
mov
jae
cwtl
sub
loop
in
xor
xchg
lods
call
and
mov
inc
adc
in
cmp
lret
aaa
dec
addb
cmc
int3
icebp
inc
xor
loop
pop
jl
std
call
es
push
ds
jno
or
in
add
xlat
dec
loop
inc
jg
mov
adc
clc
push
push
in
pop
repnz
push
push
lock
xlat
iret
shrl
sbb
sub
add
cmp
and
in
sub
pushl
rorb
cld
fsub
xor
pop
xor
push
xor
gs
mov
inc
mov
stc
adc
movsl
in
idivb
fsubl
stc
pop
add
loop
daa
repnz
std
xor
push
mov
xchg
dec
pushf
out
stc
aad
js
and
sub
mov
or
fs
xor
xchg
and
call
test
jno
mov
pop
les
jns
das
mov
pop
loop
sti
mov
dec
pop
lods
push
loop
jl
lock
loop
gs
jae
inc
push
fwait
mov
xchg
sbb
test
mov
jne
or
and
in
outsl
loop
clc
ret
push
jnp
loop
dec
fisubrl
fs
push
or
data16
aas
iret
xor
mov
or
and
loop
lahf
inc
mov
fldenv
and
in
pop
sub
fnsave
arpl
inc
mov
out
inc
lock
addl
loop
pop
push
xchg
xchg
or
loop
cmp
rcr
sub
mov
xor
jp
add
mov
cmpsb
iret
mov
test
xchg
mov
loop
pop
jl
mov
inc
adc
jle
jno
adc
arpl
push
or
mov
xchg
push
push
repz
jno
out
inc
scas
loop
sbb
jmp
mov
outsb
nop
push
jns
inc
out
out
and
add
mov
mov
xor
mov
mov
jno
outsb
jb,pn
loop
dec
cmpsl
seta
out
mov
jne
sub
jb
in
fcmovb
out
leave
loop
je
out
mov
rep
jg
rcr
loop
sbb
add
dec
sub
clc
das
fs
loop
jle
dec
lods
xor
loop
outsb
mov
or
xchg
jnp
enter
xchg
in
xchg
mov
jecxz
mov
pusha
inc
lock
jp
and
icebp
mov
or
dec
lcall
outsb
push
inc
repz
adc
jg
loop
enter
push
xchg
loop
out
repz
stc
mov
ja
xor
add
loope
mov
aam
lcall
push
cld
push
test
xchg
mov
jle
mov
adc
push
mov
int3
mov
fistpll
jecxz
cmpb
lock
in
dec
dec
imul
outsl
jp
and
int
xchg
mov
push
loop
or
lahf
dec
loop
pop
pop
and
push
sbb
xchg
push
loop
mov
adc
loop
sub
popa
cmp
jne
pop
loop
test
movsb
adc
shl
testl
add
xor
sbbb
into
inc
arpl
lret
mov
mov
mov
std
clc
cmp
pop
push
and
ror
repz
dec
cmp
enter
cs
jb
jmp
sub
lods
sub
cs
loop
nop
daa
cs
inc
pop
jb
add
cmpsl
lods
and
xchg
in
jbe
adc
repz
xchg
pop
xor
loop
xorl
sahf
leave
fsub
nop
popa
jl
out
pop
add
cmp
cs
sbb
cmpsl
jno
xor
cmp
loop
repnz
push
sub
loop
pop
adc
xchg
sbb
lcall
out
or
loop
fbld
mov
test
and
out
in
adc
push
daa
sub
loop
push
add
pop
cld
loop
and
push
pop
inc
xchg
sbb
ret
subb
or
out
jne
imul
ds
mov
add
cld
filds
cmp
shll
push
jecxz
mov
add
cmp
mov
ret
loop
rolb
jmp
inc
sub
lods
xchg
movsl
or
loop
sub
mov
mov
inc
xor
xorb
dec
aas
ret
shrb
dec
cmp
lea
lcall
sahf
mov
ja
push
stos
in
push
xor
fisttps
mov
cmp
lcall
popa
aas
fisubs
and
sahf
int
sbb
jmp
dec
addr16
data16
inc
jno
loop
lock
insb
gs
jl
cld
loop
int
jne
mov
jge
jp
sub
aas
test
repnz
addb
fsubrs
stos
imul
es
add
jge
sbb
pop
and
daa
ret
insb
jae
inc
jecxz
mov
inc
incb
xor
cmp
enter
ret
mov
imul
jl
dec
rol
lahf
and
loop
ja
repnz
dec
push
loop
rolb
sub
jge
mov
mov
mov
jb
xchg
adc
and
clc
push
push
or
sub
dec
push
xor
loope
cmc
cmpsb
pop
ds
inc
pop
jmp
mov
scas
mov
and
pop
loope
rcl
stos
popf
lock
cmp
aaa
loop
rcrb
mov
xlat
push
test
jecxz
inc
pop
jno
gs
les
mov
push
or
jecxz
lods
inc
push
shlb
loop
xchg
push
and
loop
ds
cmp
lock
push
mov
push
stos
xchg
or
dec
in
out
pushf
xor
pop
xchg
aaa
lret
faddl
sub
pop
or
mov
xchg
enter
mov
inc
xchg
inc
mov
xor
ds
loop
cmp
jp
add
jb
cs
jle
add
loop
push
or
scas
and
and
jmp
insl
int3
xchg
mov
mov
xchg
xor
dec
imul
mov
fadds
loope
imul
fwait
pusha
loop
pop
shrl
or
lods
stos
pop
sbb
xor
xor
ret
mov
mov
into
ret
repnz
xchg
sahf
cmp
or
fistl
add
lock
adc
dec
ss
loop
pop
sbb
mov
mov
pop
inc
xchg
cltd
sbb
iret
ret
pop
in
into
lahf
loope
inc
scas
push
in
pushf
xor
adc
out
loope
gs
inc
jge
add
dec
pop
sbb
fs
loop
mov
adc
icebp
lahf
lds
pop
arpl
and
aam
lods
push
loop
jae
test
jle
loop
aas
mov
cmp
inc
adcl
or
cltd
icebp
sarl
cli
xor
loop
dec
mov
cld
push
cmpsb
and
pop
les
loop,pt
in
add
insl
ret
pop
aaa
push
and
das
jns
push
sbb
xchg
ss
jne
jnp
jbe
pop
cmp
lret
add
inc
inc
and
popf
add
fnstenv
jl
loope
shl
jb
enter
mov
loop
js
cs
push
int
loop
popa
and
mov
das
inc
xchg
or
jno
mov
push
xchg
and
loop
lock
sbb
or
inc
lret
das
loope
cwtl
iret
push
cmc
xchg
sub
and
in
out
jmp
outsb
pop
aas
xor
pop
jbe
dec
pop
add
sahf
out
jmp
movl
adcb
jnp
ret
jecxz
rcll
sub
loope
fdivr
lods
sub
cli
int3
dec
shll
lret
sub
push
shrb
mov
jb
test
mov
xor
xor
xor
inc
mov
and
loop
jl
push
push
es
loop
jbe
enter
aaa
push
adc
push
push
fwait
in
jb
outsb
lock
dec
and
mov
loopne
ss
cmp
nop
bnd
lock
or
and
loop
dec
push
aas
subl
filds
out
loopne
xor
or
loop
in
jo
jno
mov
fisttps
mov
or
cmp
loop
pop
cs
xchg
cmp
mov
pop
lock
jno
in
loop
jo
jg
sub
loop
lods
jp
mov
rorl
out
ret
stos
loop
jo
xor
div
call
push
icebp
fstl
call
mov
fwait
mov
lret
jecxz
sbb
push
loop
mov
xchg
sub
cmc
push
and
mov
mov
dec
pop
scas
andb
xor
loop
jnp
xchg
push
lahf
adc
cs
sub
sub
push
int3
xor
and
lds
test
inc
mov
and
aad
cmp
loop
xchg
or
loop
mov
sbb
mov
ret
cwtl
mov
ror
cmpsb
mov
in
jl
sbb
xor
jns
ret
mov
loop
fcmovnb
dec
sbb
cmc
adc
bound
dec
or
sbb
mov
loop
sbb
scas
jns
push
mov
pop
and
loop
scas
jne
add
jg
loop
jge
test
lea
loopne
inc
imul
xchg
or
scas
cmpsb
sub
pop
loop
sub
cltd
movsl
loop
leave
pop
scas
add
loop
jnp
clc
jmp
int3
loop
sbb
rcll
fbld
pop
sarb
cmp
loop
sahf
xchg
mov
dec
inc
loope
push
jmp
icebp
mulb
mov
jp
into
lret
sub
enter
loop
adc
ficoms
daa
mov
mov
pushf
rorl
sub
jecxz
ret
stos
cmp
sub
bnd
ret
movsl
iret
roll
in
in
mov
repnz
inc
or
push
loop
pop
cmc
jle
xchg
push
loop
lock
mov
adc
xchg
pop
cmp
loop
pop
popa
les
cltd
popf
loope
out
jns
clc
and
loop
mov
mov
xchg
or
push
addl
in
loopw
or
pop
and
mov
and
xchg
imul
loop
cmp
stos
jp
xchg
jg
or
out
test
clc
add
xor
mov
loop
addr16
loop
pop
dec
push
mov
jne
push
push
fs
out
aam
or
cmpsl
add
xor
and
and
or
mov
push
daa
mov
fsubs
mov
or
loop
cmp
inc
sub
xchg
push
or
ficompl
add
shll
in
pop
loop
lahf
int
outsb
imul
and
icebp
loopne
sbb
cli
mov
dec
data16
mov
scas
pop
push
dec
mov
pop
neg
cwtl
or
loopne
out
in
and
mov
stos
xor
or
loop
arpl
jecxz
cmp
pop
loop
cld
cli
jb
fwait
push
push
loop
mov
lcall
lods
mov
sahf
mov
in
pop
test
xchg
push
mov
mov
in
or
jb
scas
sub
adc
and
mov
sbb
pushf
pop
xlat
arpl
cmp
sahf
and
dec
add
loop
in
mov
loop
mov
and
and
mov
mulb
sub
repz
jae
pop
jmp
xchg
adc
loop
dec
int3
ja
adc
jbe
add
lods
ss
jae
out
or
mov
test
popf
das
loop
daa
fs
loope
mov
add
adc
cs
enter
loop
and
mov
push
imul
rolb
das
cwtl
dec
mov
add
outsl
jae
loop
std
mov
pop
loop
push
dec
cltd
mov
rorl
setno
dec
jecxz
pusha
test
fimuls
scas
mov
lock
ds
cltd
mov
cwtl
push
aad
or
addr16
mov
loop
mov
jbe
loope
movsb
scas
dec
jg
out
in
or
or
inc
dec
out
push
in
mov
add
pop
xorl
add
sub
push
pop
inc
mov
or
outsb
loop
xchg
sar
cmp
loop
ja
push
call
repnz
jmp
xor
mov
loop
cmpb
push
dec
jle
add
ret
mov
adc
stos
loop
rcr
jp
scas
pop
loop
enter
lmsw
loop
mov
out
inc
js
loope
loop
js
repz
loope
ret
mov
adc
cmp
and
mov
lods
mov
adc
dec
pop
fucomp
bound
adc
jb
test
jae
inc
cli
loope
std
xor
mov
fs
leave
inc
in
mov
and
xchg
push
xor
loope
adc
ss
xchg
inc
out
loop
cmpsb
push
gs
mov
and
out
inc
dec
xor
fwait
pop
dec
jg
cmp
imul
js
mov
xorl
mov
mov
out
loop
mov
dec
add
movntps
xor
rorl
push
and
pop
ftst
mov
stos
jns
in
add
sti
mov
xor
cmp
movsl
inc
loop
fdivrl
and
sahf
and
inc
outsl
ret
or
loop
mov
fists
mov
or
sahf
fisubrl
pop
or
outsl
xchg
bound
cmp
daa
in
pop
or
loope
rolb
mov
ss
jecxz
sub
add
sub
stc
lds
ja
and
cli
adc
sbb
or
pop
aad
loop
loope
xor
lock
loop
or
xlat
mov
pop
shl
out
or
movsl
jmp
fsub
lods
hlt
jno
dec
jle
in
add
cmpsl
shlb
mov
push
loop
cmpsb
xor
sbb
or
push
or
ds
leave
mov
cwtl
out
lcall
pop
clc
push
inc
decb
and
imul
subb
and
loop
xor
dec
sub
pop
fstps
mov
stos
mov
loope
adc
enter
loope
test
jnp
sbb
in
and
arpl
dec
sbb
outsl
loop
sub
dec
pop
dec
sbb
push
loop
sbbl
loop
jmp
xor
mov
sub
stos
ss
sub
stc
roll
and
sbb
cmp
or
adc
jne,pn
inc
insl
sbb
mov
fs
inc
and
jge
aas
jne
push
arpl
pop
addb
in
gs
loop
xor
lods
loop
mov
mov
in
mov
aaa
sbb
xchg
pop
nop
jecxz
or
loop
push
into
jle
mov
clc
mov
out
mov
push
mov
enter
xor
inc
loop
stos
push
mov
push
xor
adc
pusha
sbb
fwait
aas
pushf
mov
push
out
loopne
and
push
pop
shll
in
inc
sbb
loop
or
int
pop
jne
loop
sub
push
loop
xchg
mov
lods
add
aad
xchg
jecxz
inc
stc
mov
scas
and
dec
inc
xchg
jl
je
stos
add
mov
sub
dec
gs
loop
jae
mov
jecxz
add
sbb
aad
cmpsb
or
jb
stos
jae
adc
setnp
sahf
test
push
lret
gs
mov
cmp
mov
pop
es
xchg
dec
movsb
mov
aas
loope
push
or
lods
push
sbb
loope
push
xchg
jnp
out
jo
mov
or
cmovle
cmp
aaa
scas
lahf
push
loop
mov
sub
loop
adc
sbb
jns
push
test
mov
inc
or
mov
and
jae
dec
dec
fwait
and
pop
stos
dec
sub
scas
ret
jmp
addr16
add
sub
shll
repnz
inc
cmp
push
loop
mov
cmp
into
lret
jp
sarl
xchg
jg
mov
loop
in
pop
and
sub
or
ss
mov
add
test
sub
push
test
pop
fisubs
sub
fs
dec
daa
arpl
sbb
aad
add
cmpsl
adc
jl
iret
lahf
pusha
pop
loop
add
or
movd
xchg
dec
mov
scas
sbbb
mov
or
and
aas
xor
stos
cld
int3
gs
sti
xor
sub
cmp
cmp
std
cltd
inc
arpl
dec
push
pop
orb
lret
loop
das
inc
push
lods
outsb
dec
cmp
test
cmpsl
xchg
and
sahf
loop
xchg
out
int
push
dec
inc
loop
fcmovnb
mov
addr16
loop
jle
lea
incl
xchg
cmc
xchg
out
aaa
nop
sbb
cli
jecxz
stos
sub
test
in
out
pop
push
lsl
mov
ret
test
in
xchg
cmp
loop
add
fs
add
push
mov
adc
sbb
fbstp
jge
gs
fildl
lds
inc
and
cli
mov
jmp
sbb
shll
nop
mov
sub
jns
mov
and
loop
stos
out
mov
ds
int
adc
lret
mov
mov
and
imulb
dec
or
loop
pop
out
push
lods
sub
pop
loope
sbb
xor
inc
mov
shl
fcmovnbe
xchg
inc
dec
push
sub
stos
out
psllq
mov
je
into
xor
sbb
fstps
inc
mov
pop
mov
loopne
loop
lds
ss
sbb
xchg
cmp
gs
adc
inc
pop
je
popa
out
lods
cs
arpl
les
stc
sub
and
loop
pop
testl
mov
clc
cmc
lock
jb
add
loop
xchg
lahf
or
loop
scas
or
lcall
pop
push
cld
xchg
pushf
test
bound
sbb
loop,pt
mov
lcall
loop
dec
pop
pushf
mov
jns
aaa
out
fsubrl
sub
addr16
shlb
and
add
push
cmp
xchg
mov
out
js
inc
imul
dec
mov
repnz
nop
pop
loop
idiv
jno
mov
push
sbb
mov
int
rorl
dec
jne
lods
push
xchg
adc
push
fwait
test
cwtl
pop
loope
stos
outsl
sbb
aaa
shl
mov
sbb
or
sarl
mov
mov
shll
xchg
sub
sarb
xchg
shr
or
out
sti
jo
dec
test
fsubrl
jecxz
cmp
loope
icebp
xchg
mov
dec
out
pop
jbe
sbb
notb
repnz
fs
xchg
inc
pop
and
pop
inc
add
out
bnd
loop
jne
insb
sbb
arpl
ret
loope
xor
push
in
stos
out
loop
add
push
mov
xchg
nop
bound
mov
pop
imul
mov
lahf
mov
or
out
cmpsb
jo
pop
jns
push
jb
pop
in
sbb
test
jecxz
loop
xor
aaa
or
insb
push
pop
jns
dec
call
add
push
pop
loop
sub
xor
dec
loop
adc
adc
xchg
adc
aas
jb
popa
add
xlat
mov
xor
fdiv
jnp
dec
aaa
mov
leave
push
ss
stos
mov
pop
inc
dec
loop
cmpsb
pop
inc
push
outsl
add
adc
and
aas
loop
nop
push
mov
loop
lahf
xchg
setae
stc
push
loop
dec
and
es
stos
mov
mov
fbld
fsts
shl
dec
leave
loop
cs
cltd
jno
xchg
push
shl
icebp
cmp
test
jo
pop
inc
jno
add
loop
sbb
mov
loop
push
jb
insb
xchg
lahf
fsubl
xchg
xor
mov
mov
loop
xchg
xchg
inc
mov
pop
cmp
call
add
sbb
sub
sub
push
mov
cmp
push
mov
mov
sbb
cltd
xchg
dec
push
add
loop
jb
fwait
adc
shlb
mov
mov
loop
xchg
sarb
shlb
xchg
inc
mov
loop
ss
and
loope
lret
in
sub
mov
fs
loopne
push
daa
negb
shlb
aam
ret
inc
outsl
inc
movsb
jl
fisttpll
push
negl
xor
loop
add
lahf
jecxz
sbb
jns
movsl
jge
mov
lcall
cs
jne
push
mov
mov
and
popa
pop
mov
inc
xchg
push
inc
ds
stos
negb
jb
lcall
cmp
lods
loop
decl
loop
mov
nop
pop
loope
subb
cltd
mov
pop
xchg
lret
loop
iret
jg
jge
cwtl
fwait
je
fdiv
xchg
mov
or
sti
insb
cmp
fs
xor
adc
shrl
xlat
pop
loop
push
sub
push
stos
loop
dec
mov
lret
hlt
jb
adc
mov
mov
jns
movsb
xor
xor
loop
xchg
insb
and
test
fcomps
xor
xor
push
loop
scas
jmp
add
sbb
mov
loop
sub
repnz
xchg
fwait
or
ss
xor
mov
jbe
shl
fdivl
daa
out
dec
pop
sbb
test
push
or
lock
add
and
xchg
lods
cmpsb
cld
inc
stc
add
pop
in
jg
pushf
mov
loop
das
stos
icebp
sub
pop
xor
dec
rorb
shll
outsb
jae
cld
xorb
bswap
cmpl
iret
dec
sub
psrlw
xor
loop
arpl
mov
jnp
cmp
negl
jne
das
sbbl
xor
loop
aaa
add
popa
fidivs
roll
pop
mov
and
hlt
pop
xchg
loope
out
out
or
loop
je
sbb
and
mov
lahf
push
fs
stos
sbb
adc
mov
out
pop
lcall
repz
cmpb
loop
ret
loopne
adc
jbe
adc
lret
mov
mov
xchg
lcall
xchg
rorl
in
dec
inc
out
rcr
loop
pop
repnz
ja
aad
adc
push
arpl
dec
fwait
cwtl
inc
mov
adc
insb
or
jp
dec
daa
insl
mov
loop
mov
sarl
out
sbb
or
push
das
cmp
xor
jns
add
sub
or
xor
inc
pop
leave
shrl
je
sub
and
loop
jae
daa
pop
dec
mov
jb
jnp
and
xor
mov
loop
das
mov
enter
loop
mov
loop
sbb
mov
loope
ret
sub
fists
push
inc
pusha
and
jmp
add
loop
std
rcrb
pop
dec
mov
ds
lret
sbb
pop
adcl
mov
and
test
adc
xor
shlb
cwtl
loop
pop
sbb
and
and
lahf
in
stos
mov
pop
jb
std
movsb
loop
cld
pop
mov
loop
adc
ss
push
sahf
sub
in
mov
mov
pop
inc
jmp
or
lds
ret
lea
les
movsb
xchg
adc
inc
and
push
in
sub
sbb
fldl2t
xor
stos
mov
icebp
push
push
cld
mov
fwait
add
and
push
xor
mov
push
int3
cmc
cmp
push
inc
mov
dec
mov
fmuls
or
push
icebp
rclb
adc
sbb
adc
in
cmp
jb
sub
loop
sarl
fs
sarb
jge
js
mov
add
and
pop
and
xor
adc
push
iret
loop
pop
lahf
mov
add
push
xchg
cltd
mov
push
mov
out
sbb
loop
dec
fwait
or
jl
lods
stc
jge
ret
out
xchg
push
or
sarb
loop
inc
sub
push
pop
loop
push
adc
push
xor
in
into
iret
imull
cmp
sbb
or
fwait
repnz
cld
loop
and
dec
addr16
jle
pop
clc
sbb
push
pop
shrl
in
outsl
add
adc
xor
sub
pop
iret
loop
jg
and
mov
out
out
int3
lcall
inc
mov
loop
call
in
xor
or
outsb
cmp
mov
and
inc
loop
mov
cvtps2pd
pop
je
subb
nop
mov
sub
sbb
and
pop
enter
xor
cmp
insb
add
jl
out
jle
pop
jne
mov
or
sbb
mov
lahf
gs
sub
mov
loop
jae
xor
cmp
mov
out
in
lock
push
loop
mov
loop
or
adc
in
out
add
jnp
loop
jecxz
fidivrl
out
mov
jmp
int3
push
sbb
push
or
push
push
sub
pop
adc
mov
pusha
pop
loop
jmp
repnz
loop
jl
lods
sub
daa
and
std
aaa
mov
mov
adc
and
in
add
outsl
loop
xchg
pop
mov
rcll
xchg
fwait
dec
arpl
inc
push
or
sbb
jae
out
add
call
andl
mov
push
jnp
mov
sbb
dec
sbb
adc
loop
out
lods
stos
sbb
aam
les
cmc
mov
lods
popf
mov
xchg
sub
je
adc
fsubrl
ds
or
mov
mov
out
movsl
mov
and
fsubs
sub
test
xor
loop
sbb
jb
xor
outsb
gs
cmpsl
xchg
rorl
mov
popf
andb
inc
sub
andl
jb
ror
popf
rolb
xchg
mov
addb
daa
sbb
fucom
ficoms
pushf
loop
insb
cmp
and
loop
dec
jp
mov
lods
or
std
pushf
jmp
push
add
add
rclb
sbb
jl
and
dec
rorb
sub
mov
mov
xchg
out
cwtl
dec
lret
repz
cmp
add
stc
insb
sub
enter
arpl
sarl
lods
insl
pop
cltd
gs
and
scas
sbb
push
in
jns
mov
cmpsb
fwait
lcall
mov
and
aas
push
jle
stc
loop
out
or
cli
and
or
andl
imul
mov
mov
fistpl
loop
test
sbb
ljmp
loop
dec
sub
loop
jno
pop
movsb
xchg
ja
or
jo
sbb
int
mov
jecxz
je
adc
shlb
pop
out
cmp
data16
mov
push
scas
adc
mov
outsb
push
aas
mov
out
lock
jns
cmp
aad
jo
sub
or
pop
fwait
xor
dec
mov
orl
add
subb
jne
pop
lods
push
xor
and
jle
arpl
push
loope
inc
int
pop
movsb
jno
sub
icebp
loop
or
mov
sbb
loop
mov
rcll
cmp
sbb
lea
loop
adc
mov
jns
push
xor
das
mov
imulb
stc
pop
loop
or
add
loop
push
inc
roll
lahf
loop
sub
scas
pop
pop
mov
loop
push
adc
xor
vmread
push
in
es
loop
pop
mov
aad
test
or
sbb
loop
not
inc
add
mov
or
mov
cs
incb
aad
loop
sahf
xchg
dec
jns
loop
xchg
cmpsb
cmp
jo
in
repz
add
jo
clc
sarb
pop
cmpl
loope
int3
mov
inc
pop
or
call
inc
inc
dec
mov
cmp
cld
nop
fildll
loop
jmp
scas
adc
jg
ds
in
loop
clc
cmp
add
dec
cmpb
add
push
lret
loop
cli
xorb
or
rcll
aam
mov
fstpt
loop
stos
and
push
adc
inc
leave
lret
ss
mov
jb
out
jmp
aaa
adc
loop
sub
test
bound
loope
cmp
notb
inc
mov
imul
in
sbb
add
test
jecxz
pop
jmp
loop
add
inc
iret
jg
fcmovne
notl
test
out
lret
ret
repz
loop
jne
les
loop
test
fs
in
clc
mov
in
loop
icebp
push
lret
leave
adc
xchg
adc
pushf
adc
jl
nop
in
scas
push
inc
push
dec
jns
jg
push
lods
in
out
push
pusha
dec
loop
in
out
cmpsl
inc
cli
ds
clc
xchg
loope
push
push
jle
dec
jmp
addl
mov
out
ja
adc
loop
nop
push
cld
dec
jp
icebp
sbb
out
jb
and
mov
dec
nop
inc
stc
test
aas
cmp
lods
mov
add
push
push
arpl
les
loop
sub
xor
negb
in
and
nop
orl
pop
and
mov
xor
cmpsl
adc
pop
loop
scas
xchg
sahf
pop
lahf
xor
loop
push
repz
push
stos
sub
call
xchg
pushf
loop
ret
cltd
pop
xchg
xor
loop
inc
test
scas
addr16
pop
push
mov
push
mov
aad
int3
loop
mov
loop
jno
repz
dec
add
loop
pushf
cmpsl
shlb
push
loope
jno
incl
leave
and
xor
add
sub
jecxz
add
loop
mov
sarb
pop
sbb
iret
aas
and
sbb
rcrb
mov
mov
xchg
jbe
gs
fldcw
sbb
inc
adc
push
lods
loop
stos
mov
cwtl
loop
mov
in
xchg
or
cmc
add
out
adc
or
inc
sub
fsubs
imul
loop
stos
fcmovnb
sbb
aas
loop
inc
or
loop
dec
jle
out
test
jo
shl
mov
xchg
popf
outsl
or
xor
sub
arpl
fwait
dec
ds
stos
mov
jo
and
stc
shlb
jecxz
sbb
repz
push
jmp
jg
mov
and
inc
adc
call
cmp
inc
xchg
rolb
loope
jb,pn
add
jle
cmp
movb
test
sub
nop
mov
mov
sbb
sub
dec
jns
dec
mov
jmp
sub
negl
and
ret
inc
and
or
addb
mov
movsl
movsb
or
das
push
fcoms
gs
xchg
sbb
sub
insb
inc
call
inc
aad
lods
aas
jnp
mov
test
xchg
dec
call
loop
lods
mov
xor
loop
and
movsw
push
ret
jp
enter
mov
adc
jbe
add
das
aas
push
inc
jl
loop
cmp
daa
repnz
loop
stc
test
or
push
jbe
int
dec
adc
mov
movsl
scas
js
bound
pop
push
mov
in
aas
xlat
movl
jno
ds
mov
sbb
mov
stc
stos
mov
loop
adc
pop
mov
jecxz
pop
nop
inc
xchg
inc
pop
fnsave
xchg
loop
aas
movsl
sub
mov
dec
or
cmc
es
sahf
in
pop
mov
cmpl
cmp
xchg
test
into
pop
out
push
and
cmpsl
mov
xchg
jbe
mov
jb
mov
inc
lcall
inc
aam
and
loop
sub
nop
pop
jge
enter
pop
sbb
inc
loop
or
sub
mov
mov
shll
mov
loop
cmp
mul
push
cmp
enter
lock
data16
adc
mov
loop
mov
movsb
cmpsb
fsts
in
inc
cli
loop
push
dec
jl
ret
mov
fs
xchg
pop
leave
and
lcall
pop
aad
in
les
out
fisttpll
into
or
arpl
out
imul
cltd
sahf
pop
mov
sbb
xor
jb
loop
subl
push
mov
xchg
loop
jbe
pop
lock
sub
in
je
mov
test
mov
lret
or
add
in
lcall
scas
cld
pop
or
add
xchg
in
cmp
mov
sbb
pop
inc
cmp
adc
jge
mov
pop
and
stc
aaa
repz
cmp
add
or
add
jne
dec
cmp
call
mov
mov
mov
pop
insb
fiaddl
pop
pusha
jnp
mov
fisttps
xchg
add
jns
and
shl
cmpsl
jle
inc
lock
pop
cmc
mov
loop
insl
add
loop
mov
add
lret
ret
out
and
mov
push
push
pop
lahf
mov
add
aad
daa
shrb
loop
mov
mov
sub
cld
loop
idivl
inc
mov
xor
imul
pop
lret
pusha
cmpsl
inc
xchg
push
loop
fwait
pop
in
mov
fldcw
loop
popf
cmp
inc
int
inc
clc
test
push
out
data16
rcll
icebp
outsb
xor
cmp
loop
pop
or
loop
fiaddl
mov
jno
pop
ret
dec
cmp
das
add
sbb
mov
nop
mov
mov
cltd
out
fwait
push
adc
int
pushf
sahf
ja
jecxz
daa
pop
adc
inc
out
push
adc
cltd
test
fnstsw
push
or
hlt
sbb
dec
or
bound
repnz
mov
mov
loop
gs
dec
pop
push
jne
pop
lods
adc
outsb
jns
xor
lds
jae
in
cmp
test
arpl
cmpsl
adc
jecxz
out
dec
pop
loope
jno
rolb
lret
mov
aas
loop
movsl
in
popa
call
movsb
aad
sub
jmp
sbb
cmc
mov
jmp
int
out
lock
daa
inc
jae
pop
roll
inc
insb
inc
popf
push
and
inc
sbb
xchg
jns
stc
mov
or
out
add
nop
jecxz
lock
adc
pop
adc
push
pushf
icebp
mov
xchg
in
and
insl
or
add
lret
cmc
std
mov
sub
lds
or
fnsave
mov
mov
sbb
loop
cwtl
repnz
ret
loop
jp
mov
lea
imul
imulb
mov
out
add
in
mov
rep
xchg
push
les
and
and
pop
fcomps
xchg
enter
outsl
cs
fcmovb
push
shl
loop
imul
cmp
xchg
lret
or
ljmp
push
xchg
add
xor
imul
pop
je
out
icebp
fidivl
loop
mov
rcll
mov
in
inc
push
inc
loopne
jge
mov
or
ds
loop
aaa
lret
inc
xor
in
out
xchg
test
inc
xchg
adc
dec
ret
mul
jb
loop
jmp
gs
sub
dec
mov
int
sbb
fucom
fwait
stos
nop
dec
or
pop
mov
insb
mov
push
rcll
fs
loop
adc
jp
lds
add
subb
loop
push
lcall
mov
out
aam
movsb
mov
out
pusha
clc
repnz
xchg
adc
loop
sti
subb
fsub
mov
cmp
jmp
scas
fcmovnbe
je
xchg
mov
pop
insb
stc
cmp
jmp
jp
or
loop
push
jbe
add
divl
jecxz
and
xchg
sub
pop
inc
push
incb
test
mov
and
xchg
pop
test
jns
pop
iret
jns
or
out
jge
mov
xchg
sbb
mov
jp
cmp
gs
xchg
outsl
cmc
mov
fwait
lcall
sar
idivl
pop
xchg
push
loopne
scas
movsb
mov
daa
or
outsl
inc
fldl
jns
xor
lret
cwtl
and
rorb
push
clc
icebp
cmpsl
hlt
loope
cmpsl
lret
mov
xchg
lcall
stos
and
repnz
gs
fst
xchg
jno
xor
daa
xlat
nop
es
pop
xor
xchg
mov
out
jl
outsb
sbb
adc
loopne
test
mov
pop
inc
inc
xchg
ret
sub
std
cwtl
jne
mov
movsb
fisttpll
adc
sbb
cmp
sti
dec
add
xor
mov
movsb
cmp
jb
mov
ficoml
push
inc
in
pop
loopne
loop
push
or
mov
imul
inc
jp
call
ss
pop
cmp
sub
stos
xchg
into
xchg
sbb
jo
add
mov
sbb
std
loop
mov
push
aam
mov
or
shll
or
dec
ljmp
jle
xchg
test
rolb
ret
adc
jns
add
ds
fidivl
xor
xchg
xchg
loop
cmpsl
nop
lret
dec
cld
stos
or
xor
xor
cmp
jl
sub
clc
pusha
and
es
add
loop
cwtl
arpl
add
jge
loop
fidivs
mov
sub
cmpsb
mov
lock
in
int
outsb
enter
rsm
xor
dec
sbb
loop
inc
mov
pop
loop
sbb
addl
testl
jg
mov
mov
or
popa
cmp
lret
fst
loop
mov
sub
loop
xlat
inc
leave
out
fstps
push
insl
and
pavgw
fwait
addr16
push
hlt
push
loop
std
fcoml
mov
mov
jg
dec
cmp
cmp
movsb
gs
loopne
jne
mov
popa
pop
int
push
nop
loop
popf
sti
aam
inc
movsb
enter
push
jg
ficoms
int
xchg
inc
stos
data16
cmp
bound
mov
daa
adc
loop
cmp
in
inc
addr16
inc
xchg
loop
sbb
cwtl
inc
sarb
loop
ret
mov
lahf
xor
fisttpl
push
jo
xor
test
out
pop
pop
in
rorl
imul
inc
cmp
sbb
imul
lahf
dec
mov
and
mov
and
pushl
lods
add
rcrl
cmp
inc
or
loop
ds
cltd
pusha
shlb
sbb
gs
outsb
nop
loop
add
sbb
lret
xor
lods
mov
mov
mov
xchg
insb
arpl
sub
mov
fs
aas
or
or
mov
dec
outsl
popf
cmpsb
and
inc
stos
jno
push
lahf
push
push
sbb
rorb
jne
mov
bound
loop
pop
ret
inc
xor
mov
cmpsb
in
sbb
shll
fsubrs
dec
add
and
stc
pop
dec
sahf
pop
loop
mov
sbb
jno
mov
xlat
pop
mov
mov
inc
push
inc
sbb
mov
out
push
jmp
xor
xchg
andb
sbb
add
testl
xchg
mov
pop
xchg
cltd
mov
add
inc
inc
gs
sub
movsb
iret
cltd
adc
std
mov
int3
or
loope
imul
mov
out
lahf
loop
and
dec
jnp
cs
je
jl
or
outsb
cmp
sti
adc
sub
and
jl
xchg
mov
or
shl
fwait
mov
mov
cbtw
xchg
mov
loope
push
dec
scas
jns
divl
lods
ret
and
cwtl
mov
loop
fmuls
aam
rcrl
xchg
mov
inc
insl
add
out
out
add
cmc
push
xchg
mov
pop
cmp
pop
mov
out
sarl
ret
movhps
sub
aas
pop
enter
lret
sar
into
jb
ret
xor
jle
sub
jecxz
repz
jnp
addr16
fidivs
movsb
dec
enter
loop
daa
add
shrb
mov
dec
lcall
stos
xlat
fdivrl
ljmp
shrl
fs
or
out
loope
mov
dec
pop
lahf
jecxz
shll
add
das
sbb
jg
loop
fistpl
adc
std
jge
sti
loop
ficompl
inc
cmp
add
push
out
push
add
ret
loop
int
inc
jns
push
inc
loop
jb
mov
popa
loop
lock
aam
fs
push
jp
pop
mov
mov
enter
stos
or
sahf
cmpsb
xchg
lcall
loop
test
dec
cmpsl
shr
ret
pushf
lcall
rclw
or
sbb
and
inc
jb
adcl
clc
and
mov
pop
mov
fcmovnbe
sub
jecxz
mov
or
add
pop
in
call
roll
clc
scas
insl
pop
or
mov
in
and
lret
dec
lahf
sbb
pop
pop
or
push
pop
mov
xor
repz
dec
out
loop
mov
fidivl
jl
or
hlt
loop
mov
loop
xchg
in
int
adc
jno
pcmpeqd
es
aad
mov
xchg
push
adc
sti
enter
mov
jne
loop
xor
loop
or
push
pop
loope
loope
pop
cmpsl
or
out
jnp
xor
pusha
lea
dec
sbb
mov
pop
loop
mov
push
in
loop
push
lock
stc
and
adc
lods
iret
popa
aad
loop
adc
xchg
inc
mov
sbb
dec
jbe
cwtl
nop
enter
hlt
inc
mov
xchg
imul
dec
and
mov
insl
fstpt
lret
scas
jno
js
pusha
call
cmpsl
push
mov
pop
repnz
pop
clc
sti
lock
mov
mov
punpckhbw
push
arpl
lods
adc
loop
xchg
dec
and
sub
shl
out
sarb
and
int
dec
inc
fisttpl
mov
mov
jmp
add
lret
mov
sub
arpl
push
loop
adc
lret
pop
mov
les
sub
loop
js
fnstenv
inc
shl
loop
ja
inc
imul
mov
stos
mov
decl
stc
adc
loop
shrb
lods
lret
push
xor
push
mov
mov
fwait
call
mov
popf
xor
adcb
xor
dec
inc
mov
sub
loop
and
or
adc
jnp
in
add
xchg
xor
lock
add
pusha
out
dec
pop
pushf
or
inc
ds
adc
loop
adc
push
push
mov
pushl
out
push
adc
aad
inc
sub
mov
xchg
lock
fwait
xor
loop
push
adc
jb
std
sub
test
int3
pop
ja
xchg
mov
in
daa
testb
and
fwait
imul
pop
xor
out
lock
sete
push
sbb
imul
sbb
xlat
sub
loop
movsl
mov
pop
loop
pushf
inc
cmp
xor
loop
or
bsr
xchg
loop
mov
pop
imul
sub
scas
iret
push
outsb
sbb
adc
adc
sbb
stc
xchg
les
in
mov
inc
push
push
pop
dec
jecxz
fimull
mov
hlt
loop
dec
sub
xor
jno
sahf
std
and
pusha
fs
jg
scas
mov
scas
aad
adc
jecxz
outsl
mov
mov
cmp
or
xor
imul
ljmp
mov
addr16
inc
in
sbb
and
jg
pop
outsb
pop
mov
call
shl
in
out
insb
or
imul
mov
in
inc
jmp
jno
movsb
push
fldl2e
loop
mov
dec
pop
and
dec
add
mov
aaa
xchg
push
es
mov
ret
push
incb
adc
pusha
loop
inc
xor
or
jp
sub
iret
imul
lods
addr16
and
xor
loop
mov
mov
roll
out
xchg
out
sbb
dec
inc
push
stos
mov
inc
mov
inc
lahf
lock
pushf
push
sbb
rclb
stc
sub
xchg
loop
mov
pop
popa
push
hlt
jno
jb
jnp
outsb
xor
pop
adc
aad
xchg
adc
inc
mov
out
push
ret
sub
xor
or
push
rcrl
jl
gs
gs
mov
inc
out
mov
pop
add
sub
test
out
sub
push
add
xchg
out
jle
stc
xchg
push
loop
add
pusha
inc
loop
in
sbb
fs
loop
xor
mov
mov
push
cmpsb
sbb
dec
jae
notb
in
loop
or
or
loop
dec
lahf
push
xchg
ds
loop
adc
nop
push
mov
jecxz
jne
push
loope
mov
push
jmp
fmull
ret
mov
add
cmpsb
ret
pop
vphsubbw
xchg
cmp
mov
inc
aaa
cmc
mov
sub
sub
inc
add
out
inc
adc
cltd
es
dec
push
test
add
loop
push
dec
loopne
cwtl
sahf
xchg
jno
daa
add
aaa
outsl
enter
dec
push
lods
in
fistpll
adc
out
pop
pop
or
push
fsub
lahf
cs
nop
imul
ss
lcall
push
mov
inc
pop
jb
dec
push
ss
add
je
mov
sub
jl
leave
andb
lds
add
jecxz
mov
mov
sti
ret
jb
loop
std
jg
xchg
lods
imul
mov
mov
mov
repz
loop
pop
jg
je
xchg
dec
loope
daa
cmpsb
ret
arpl
orl
xor
jg
jl
jge
pop
int3
shll
xor
movsb
stc
cltd
test
dec
ficompl
inc
jb
xchg
add
lea
rorl
inc
jp
and
jns
mov
pop
in
xchg
aaa
inc
add
addr16
sub
mov
sti
cld
loop
or
cmp
push
loop
int
cmp
ja
add
and
dec
mov
loop
and
ficompl
rorl
cmc
pop
shlb
lds
mov
roll
sub
es
idivb
loope
or
pop
into
fimuls
xor
ret
pop
shrb
sbb
out
sub
fildll
add
or
fistpl
jbe
xor
adc
icebp
xchg
push
adc
flds
push
sbb
pop
stc
in
cmpsb
push
arpl
mov
cmp
in
imul
loop
jne
dec
ss
fsubrs
mov
and
cmp
ret
jo
loop
sbb
aam
jnp
mov
or
sti
xor
mov
adc
int
movsl
rcr
push
xchg
loop
mov
addr16
pop
lret
loop
movsb
dec
inc
shlb
inc
test
ss
mov
jnp
loop
sbb
mov
mov
ffree
jmp
xor
arpl
xchg
movsl
sub
rcrl
add
sbb
outsl
adc
out
push
imul
or
loop,pt
outsb
xchg
fs
inc
loop
dec
aaa
inc
sub
addr16
in
int3
test
inc
pop
std
pop
adc
rolb
daa
or
not
pop
cmp
fstp
aad
xchg
sarb
mov
fcoml
sbb
dec
clc
add
xchg
jns
xchg
pop
fistps
jmp
cmpsl
les
lret
push
loop
lods
xlat
in
cmp
push
dec
repnz
std
insl
sub
add
or
in
xchg
pop
push
xchg
out
sbb
or
mov
loopne
pop
out
jne
jns
xorb
or
iret
loop
imull
leave
dec
pusha
xor
aam
jbe
xor
and
negl
out
and
mov
loop
jl
xchg
cmpl
jno
popf
pop
gs
roll
fidivl
pop
mov
pop
std
dec
xchg
and
in
scas
test
jno
xor
pop
or
lods
or
enter
popa
rcrb
loope
push
mov
ja
push
add
int3
loop
or
ret
fisttpll
test
leave
mov
pop
stos
enter
repnz
or
jb
jmp
inc
js
dec
stos
sbb
mov
sbb
icebp
in
mov
loop
bound
xor
adc
pop
cmc
lret
dec
mov
loop
lea
fxtract
imul
in
pusha
sti
in
and
dec
mov
in
mov
rcl
sub
and
decb
pop
adc
mov
dec
mov
loop
xor
jb
loop
fiadds
or
add
dec
or
roll
insb
mov
mov
js
inc
or
xor
adc
inc
in
ja
and
cmp
loop
inc
add
test
movsl
jmp
fisubrl
mov
roll
pusha
add
lret
lods
jbe
cmpb
test
pop
xchg
mov
inc
ljmp
push
jns
inc
push
add
cmpsb
daa
lods
mov
sarl
xor
sub
loop
cld
jae
xchg
jbe
aaa
loope
adc
movsb
fstpt
pusha
outsb
movsl
cwtl
rcrl
jne
scas
pop
in
add
push
lock
loop
stos
sbb
mov
xchg
call
jns
enter
mov
in
loop
mov
imul
sub
clc
in
sbb
jno
xor
or
mov
lret
lods
sbb
or
jge
mov
adc
in
imul
sbb
test
pop
loope
push
rorl
mov
loop
sahf
mov
push
fmull
push
stos
push
pop
push
out
js
sub
fcompl
dec
adc
xchg
icebp
jne
pop
xor
cmc
mov
outsb
es
xchg
add
cli
mov
rep
pop
adc
negl
mov
jecxz
mul
scas
push
xor
pop
fldl
push
fsubl
ret
xchg
add
or
insl
in
hlt
push
and
cmp
pop
add
sub
cmp
fstl
pop
fistl
jmp
and
loop
push
shrb
inc
cmpl
adc
adc
sbb
add
cmp
fs
dec
mov
lock
mov
aaa
imul
sarl
into
fcomps
in
rcrl
jae
loop
xor
add
pop
lods
in
mov
adc
cmc
inc
dec
loop
pop
mov
gs
or
inc
cmpsl
xchg
ret
loop
das
jnp
in
cmp
cld
and
mov
loop
addb
add
rol
insl
and
jecxz
loop
and
stos
icebp
sub
pop
call
dec
mov
mov
loop
sub
and
jo
pop
call
lret
vpaddsw
lock
loope
jle
mov
imul
loop
ja
shld
pop
sbb
popa
inc
mov
stc
rolb
inc
gs
pop
out
imul
or
mov
or
lods
xchg
add
stos
loop
push
jnp
sub
addb
lods
dec
pop
sbb
lds
lds
jmp
cmpsl
fisttps
popa
push
push
add
js
jg
push
xor
adcl
xchg
adc
lret
lahf
mov
int
mov
loop
cmp
mov
pop
or
call
add
push
loope
xchg
aas
fldl
mov
mov
stc
int
loop
dec
mov
sub
or
hlt
faddl
add
mov
clc
loop
adc
pop
rcll
jno
dec
and
mov
arpl
call
stos
int3
dec
push
push
loop
jecxz
lret
outsl
dec
jbe
loope
stc
dec
aas
mov
mov
add
btc
shll
jno
and
cld
sbb
adc
mov
ficomps
lods
fmul
daa
addr16
xor
mov
lret
loop
clc
shrl
nop
int
inc
lods
push
popa
push
in
mov
loop
adc
fld
add
repz
shll
dec
and
icebp
xor
in
jns
adc
rorb
pop
repnz
sbb
cmp
into
lret
pop
or
test
jne
add
aas
stc
mov
out
orl
sbb
ret
xchg
push
pop
je
sbb
adc
call
iret
adc
xchg
out
mov
out
cli
lods
mov
out
imul
dec
outsl
loope
jp
inc
ss
and
mov
push
inc
iret
adc
aam
add
loop
xor
cmp
xchg
insb
jne
ljmp
and
add
pop
push
imul
loop
jg
push
dec
clc
rclb
gs
into
insl
rclb
jne
lret
jns
in
inc
ffreep
loop
popf
incb
idiv
aaa
loop
or
adc
test
sub
shlb
or
stos
mov
sub
sub
sti
loop
stc
inc
jl
inc
push
jns
or
mov
mov
mov
dec
ja
ret
push
cmp
std
adc
mov
ret
dec
pop
push
sarl
push
cs
cmp
sub
outsl
jecxz
xchg
sbb
or
lea
sub
mov
fists
scas
mov
push
jmp
out
pop
sub
dec
data16
loop
cmp
xchg
mov
and
loop
data16
in
sub
adc
push
in
sar
sbb
jb
or
inc
leave
and
mov
cmp
sbb
gs
cmpsl
loop
mov
sub
jg
sbb
sbb
push
pop
cs
lods
pusha
clc
mov
cmp
or
mov
nop
mov
pop
jbe
add
ror
xchg
adc
or
arpl
aas
xchg
cmp
jge
loop
dec
pop
icebp
push
sbb
xchg
sub
nop
sub
cmp
stc
or
les
nop
add
test
lock
loop
outsl
inc
fistpl
sbbb
xor
mov
sbb
sub
sub
push
or
xchg
cmp
daa
fstpt
dec
loop
jbe
dec
pop
mov
movsb
sub
inc
sarl
das
inc
test
lahf
ja
sub
adc
add
cltd
xchg
loop
sti
fwait
or
enter
not
es
dec
in
mov
push
sahf
loop
shlb
loop
shl
xor
js
xchg
in
inc
loop
in
fildll
cmp
or
push
sbb
loop
test
mov
xchg
loop
rol
pop
mov
jle
out
rcrb
mov
test
jno
adc
repz
push
jmp
iret
push
mov
fistpl
scas
sub
or
and
sti
bound
loop
jne
ret
js
mov
loop
xor
mov
mov
add
inc
dec
inc
imulb
jns
push
inc
inc
mov
xor
push
mov
dec
or
sbb
stc
ja
mov
xchg
gs
push
out
out
push
in
loop
movsb
adc
loop
stc
xchg
and
fiaddl
inc
dec
loop
pushf
cmpl
rcll
mov
lret
jl
xor
inc
push
stos
fwait
gs
loop
mov
and
mov
loop
mov
leave
mov
iret
sub
xlat
scas
stos
xchg
jl
loop
cmpb
cmp
inc
adc
das
loop
mov
sbb
xchg
mov
mov
push
sub
lea
or
ds
or
xor
ret
sub
in
loop
clc
lods
push
jo
shlb
out
imul
or
add
xor
and
jmp
cld
int
jbe
ret
clc
or
shll
jl
inc
fwait
out
jecxz
sub
xchg
mov
testl
sub
sahf
inc
xchg
sbb
repz
jle
xor
mov
movsl
inc
and
loop
daa
out
popa
push
mov
adc
aad
mov
in
mov
or
cli
loop
pushf
lret
es
shll
cld
dec
popa
pop
out
jecxz
jae
loop
jmp
in
or
icebp
sbb
jle
clc
add
mov
push
loop
xor
inc
mov
loop
iret
leave
adc
cmp
aaa
sub
insl
sub
popa
fs
inc
xchg
adc
and
shl
ret
xchg
pop
sub
pop
push
xchg
add
dec
push
mov
loope
neg
xor
orl
sub
ja
loop
dec
aad
aam
test
lods
add
xor
loope
mov
sbbb
jecxz
xchg
loop
cmpl
and
sbb
sub
in
aad
cmp
aam
xchg
daa
enter
insl
lret
loop
dec
shll
or
loop
scas
pop
jo
push
es
sahf
pop
sti
inc
xor
arpl
loop
push
cltd
nop
or
loope
stc
std
sbb
ret
dec
mov
pop
movaps
aas
loop
std
clc
stos
sahf
jecxz
and
adc
lret
dec
out
sub
iret
fwait
stc
xchg
ja
mov
loop
and
add
addr16
shll
push
or
pushf
sbb
je
mov
push
sbb
adc
sbb
mov
inc
aaa
and
adc
daa
in
rorb
inc
inc
pop
jnp
loop
or
sbb
hlt
in
loop
mov
dec
lret
loop
push
ret
inc
inc
push
loop
sbb
pop
mov
jno
jg
pop
in
pop
or
gs
sbb
cwtl
cltd
in
pop
sub
loop
nop
ljmp
loop
add
cmpsl
mov
cwtl
out
fstl
jg
movb
sub
and
fldcw
or
or
insl
mov
and
into
push
femms
xor
loop
xor
mov
je
loopne
aaa
or
loop,pt
dec
sbb
mov
add
mov
ds
jp
pop
push
pusha
loope
leave
and
js
stos
in
and
mov
add
mov
or
imul
push
mov
imulb
movsb
mov
jne
jge
lret
loop
fs
loop
xchg
je
adc
jp,pn
jns
pop
sahf
mov
dec
inc
jbe
pop
mov
xchg
adc
xchg
cwtl
jns
aam
or
mov
mov
scas
js
xchg
fucom
fistpll
cwtl
out
fsub
mov
jmp
loop
jp
shr
mov
or
pop
sub
repnz
sbb
or
cmpsl
mov
in
loop
int
test
jb
repz
adc
dec
or
mov
pop
adc
push
jns
add
shrb
pop
loop
imul
dec
sub
cmc
movsb
push
aam
mov
mov
xchg
gs
inc
push
xor
lret
hlt
outsb
xor
mov
scas
jle
sub
cmpsl
jmp
std
inc
sahf
or
push
pusha
mov
pop
fbstp
adc
insb
inc
mov
cli
std
sub
dec
and
push
jne
in
inc
loop
insl
loopne
mov
leave
lock
push
mov
fucomi
lret
mov
inc
push
aad
xchg
pushf
dec
push
lret
adc
loop
add
loopne
dec
pusha
loop
and
cmp
rcll
enter
lahf
inc
pop
loop
xchg
cmp
mov
xchg
sti
loop
sub
jbe
jnp
xor
daa
sbb
cwtl
pop
xchg
sbb
xchg
dec
jns
das
dec
in
xor
mov
dec
sub
xor
loop
dec
aam
dec
push
scas
sbb
fadds
pop
dec
fisttpll
inc
and
cltd
adc
mov
loop
mov
arpl
xor
cltd
xchg
hlt
cmp
loop
and
add
imul
mov
into
or
push
psubsb
enter
adc
xchg
cmp
movsl
pop
push
jp
leave
sti
out
pop
or
in
mov
sub
gs
mov
or
inc
jg
pop
sbb
or
loop
lret
dec
mov
scas
inc
xor
in
mov
dec
shrb
sub
mul
sahf
mov
pop
dec
loop
enter
test
jnp
add
xor
lods
push
push
loop
xor
sbb
mov
sbbb
inc
inc
loop
loope
cmpsl
cmp
in
inc
add
add
loop
ss
lahf
into
popa
loop
cmp
adc
aad
call
sti
loope
pop
push
xor
insb
data16
loop
sub
mov
mov
mov
mov
dec
adc
xchg
out
xchg
lods
loop
inc
cmp
out
sbbl
imul
cs
lock
or
hlt
loop
subb
add
pop
pop
divl
loop
mov
xchg
ret
xchg
in
test
das
mov
loop
lds
fnstsw
push
push
repz
cmp
add
xorl
pop
cmpsl
mov
shr
xchg
push
add
sub
iret
sbb
mov
jmp
shr
loop
mov
stos
sub
loope
xlat
loope
ljmp
js
inc
dec
test
loope
jmp
jmp
popa
jmp
loope
rcr
test
dec
mov
xor
xchg
out
sub
xchg
mov
fsts
in
fldcw
sub
mov
push
iret
cltd
pop
lret
and
bound
mov
lods
fucomip
aaa
imul
xor
clc
imul
imul
ljmp
leave
add
bound
in
ret
pop
cmpsl
lock
mov
jnp
jno
repnz
enter
jb
add
ror
rcl
out
mov
shll
call
fsub
jnp
mov
cmp
loope
cwtl
leave
mov
mov
aas
rcll
cmp
lret
dec
leave
daa
fnstcw
cltd
push
icebp
jecxz
push
loope
js
pushf
in
inc
mov
loope
cmpl
shrl
test
xor
popf
or
and
pop
rcr
dec
dec
loop
jbe
jmp
cmp
add
lods
xchg
lret
into
sub
js
imul
int
sarl
loopne
dec
pop
test
leave
fstpl
mov
addr16
orl
and
pop
cltd
sbb
dec
mov
mov
lds
inc
xchg
push
sub
push
mov
xchg
insb
mov
outsb
mov
jmp
imul
dec
mov
test
test
jno
fistpl
ss
aas
fsubr
loope
leave
push
lret
insl
jae
cs
jecxz
jecxz
cltd
and
xchg
mov
xchg
mov
push
jns
jns
jns
mov
fsubrs
cli
int3
ret
push
xchg
cmc
cmpsb
push
cmc
negl
pop
loope
addr16
pop
add
jb
fldenv
mov
ret
mov
mov
imul
mov
push
shl
out
cmp
roll
adc
fstps
out
loope
push
insl
mov
pop
icebp
push
mov
test
jle
fidivs
stos
pop
leave
loope
cmpsb
mov
shl
mov
loope,pn
or
rcll
add
xor
out
movsl
jns
enter
mov
mov
inc
shl
jbe
stos
sub
cltd
lret
add
mov
scas
leave
push
js
insl
mov
in
arpl
movsl
imul
mov
les
dec
xchg
pop
mov
test
add
push
mov
ja
int
pusha
outsb
mov
shlb
scas
fdivrs
out
mov
rcll
lcall
iret
fisubs
inc
add
push
lcall
rcrl
and
mov
jmp
leave
movsb
clc
gs
push
xchg
imul
ror
xchg
cmp
fldcw
sbb
cmp
adc
jmp
xchg
in
leave
add
call
cli
jle
test
nop
and
mov
lret
icebp
jp
sbb
cmpsb
imul
lods
jo
imul
inc
imul
je
xchg
jno
mov
mov
sbb
stc
fmul
imul
stc
imul
jp,pn
cmpsb
loope
jecxz
cmp
push
mov
out
sub
data16
add
jmp
jecxz
or
jno
out
fstp
repnz
ja,pn
pop
add
xlat
out
pop
sbb
mov
and
xchg
fdivl
rcll
fsubs
addl
shll
loope
shrl
mov
dec
mov
xchg
jge
or
sub
sub
sarb
adc
cmp
xchg
sub
jg
dec
int
inc
pop
or
loope
fmul
dec
ret
mov
lcall
cmpsb
in
in
outsl
shrb
pop
cmp
xor
mov
xchg
shrl
cmp
and
pushf
int
xlat
test
stc
sbb
xchg
xor
jne
iret
loope
loopne
daa
loopne
cltd
jl
mov
stc
fisubl
mov
aad
je
sub
push
fidivrl
push
xor
xor
add
lret
add
leave
mov
or
mov
imul
adc
fsincos
jl
cmp
mov
popf
loope
jg
shll
mov
jns
fsts
mov
xchg
mov
fcmovb
pop
stc
dec
add
pop
lods
jo
cwtl
gs
aaa
ficomps
adc
enter
inc
mov
mov
cmpsl
mov
or
dec
lds
or
repz
insb
sarb
mov
mov
test
cmpsb
mov
popf
in
movsb
or
jge
mov
pop
push
ja
mov
sub
pop
cmpsb
cmp
hlt
mov
jmp
add
pop
mov
lds
fdivl
inc
pop
mov
rcrb
xchg
jg
pop
popl
imul
hlt
mov
test
loope
test
push
subb
ffreep
mov
mov
imul
mov
leave
mov
arpl
popf
mov
imul
popa
cwtl
aad
mov
mov
addb
lret
or
iret
add
or
dec
mov
pop
insb
ljmp
ss
mov
pop
mov
adc
jb
pop
add
dec
repnz
and
cltd
cmp
sub
lcall
hlt
mov
xchg
push
iret
rcll
dec
cltd
frstor
and
mov
sbbl
push
rorl
aam
mov
inc
arpl
mov
xor
inc
nop
test
leave
nop
pop
fcom
mov
sbb
rcl
imul
add
jmp
mov
pop
push
popa
mov
adc
xorb
inc
movsw
pop
pop
cli
sub
dec
push
sub
push
sbb
pop
push
sbb
dec
pop
sti
leave
mov
mov
mov
mov
mov
mov
mov
mov
inc
xchg
imul
loope
xchg
test
into
cmc
sub
out
dec
mov
mov
enter
add
cmpsl
sbb
push
jo
jae
mov
fidivrl
test
ret
mov
add
push
mov
mov
sub
shrb
mov
popa
fs
gs
jno
cltd
mov
push
pop
leave
call
enter
push
je
mov
cltd
mov
or
sub
insl
in
sub
xchg
aas
in
movsl
mov
aad
ljmp
xchg
data16
mov
push
xlat
enter
add
popa
rcll
xor
and
ret
hlt
dec
lds
loope
inc
test
and
call
mov
imul
pop
shrb
pop
xchg
out
in
inc
imul
lds
push
mov
lods
popa
rol
movsl
mov
gs
sub
xchg
lds
call
shlb
inc
pop
data16
inc
jmp
inc
pop
out
inc
mov
push
imul
or
mov
out
cwtl
call
jecxz
addb
mov
mov
mov
or
dec
nop
ret
lds
scas
and
adc
iret
es
push
call
fwait
imul
jle
xchg
adc
aas
mov
jns
movsl
sarb
movl
push
inc
or
jmp
push
mov
out
adc
xchg
sub
inc
fld
je
insl
sbb
ror
andl
jl
adc
xlat
push
arpl
sbb
add
insb
mov
popa
movsb
mov
and
push
mov
jmp
mov
leave
subl
aam
cs
cmpsb
inc
ficompl
inc
adc
cmpsl
stos
jmp
adc
xchg
xchg
sbb
shl
out
test
or
enter
sub
ret
fidivrl
rorb
mov
inc
lds
jae
fsub
addl
mov
enter
ret
dec
mov
fwait
inc
aad
test
mov
sub
pop
xchg
xlat
jmp
call
in
cltd
ds
xchg
pop
fsts
dec
lahf
ret
test
adc
fcom
shlb
xor
mov
push
ror
leave
enter
push
lock
mov
aam
test
mov
les
leave
xchg
or
xchg
dec
push
test
push
aad
andl
mov
inc
rcrb
sbb
dec
movsb
pop
mov
stc
test
xorb
xchg
es
and
sbbb
test
out
insb
add
outsb
ss
adc
fisttpl
cmpsb
mov
test
and
stos
or
push
dec
test
aam
cmp
inc
out
jno
imul
or
add
les
cmp
test
inc
gs
loopne
test
dec
addr16
mov
or
mov
pop
rcrb
rcll
jecxz
pop
push
daa
negb
mov
or
jns
cltd
jmp
xchg
loopne
push
daa
xchg
enter
pop
imul
sbb
xor
stc
test
popa
and
or
push
add
pop
test
iret
jle
imul
add
addl
add
inc
inc
jp
push
cmp
imul
push
dec
xchg
inc
cltd
adc
jp
call
daa
daa
popa
in
lea
fnop
pop
bound
xchg
or
jle
push
outsb
popa
fs
lret
shlb
ret
push
xor
mov
andl
mov
dec
popa
xchg
xchg
dec
daa
insl
pusha
mov
cltd
inc
imul
push
xlat
push
sarl
pop
inc
stos
test
adc
adc
test
xchg
xor
cwtl
pusha
int
jo
lret
mov
jl
cmpsl
fsubrl
mov
nop
out
int3
inc
dec
cli
cmp
mov
mov
xchg
or
or
inc
sub
push
inc
or
xor
clc
mov
ror
pop
jae,pt
fstps
cmp
and
mov
ljmp
lock
test
xor
in
push
xchg
pop
dec
negl
inc
and
sarl
and
xor
mov
inc
add
ljmp
jbe
aaa
sbb
or
sarl
and
clc
jecxz
dec
or
cld
mov
lods
cmp
add
stc
dec
fists
addr16
add
clc
pop
rcrb
push
clc
stos
push
jecxz
out
xchg
pop
sbbb
loope
xor
cmpsb
fnstenv
js
adc
cltd
xchg
outsl
xor
fldcw
mov
mov
inc
sub
mov
aas
sub
mov
sub
cmpsb
lock
test
cmpsb
dec
imul
arpl
add
cmpsb
loopne
lahf
xor
ror
inc
push
mov
scas
popa
cmpsl
adc
cmp
add
arpl
jns
loope
cmp
push
or
loope
stos
jo
dec
jg
leave
and
lds
int3
leave
mov
lahf
imul
arpl
les
test
shl
inc
mov
sbb
mov
mov
xchg
arpl
jmp
arpl
movsl
add
stc
and
imul
xchg
inc
fs
shrl
push
icebp
adc
hlt
inc
insb
test
pop
fs
icebp
mov
jl
mov
int
xchg
mov
icebp
or
mov
stos
pop
jmp
mov
sete
dec
sbb
data16
mov
iret
or
popa
xchg
pop
aaa
mov
sbb
imul
sbb
mov
adc
cli
pop
cmp
cmc
aam
jmp
pop
fwait
out
pop
sbb
xchg
inc
dec
dec
out
leave
or
mov
pop
jno
jecxz
imul
or
and
lds
scas
cmp
mov
js
xor
insb
jp
or
adc
cmpsb
dec
js
addr16
loop
test
mov
ffreep
lea
orb
gs
push
leave
sahf
mov
adcb
imul
testl
les
rclb
aaa
dec
rorl
mov
sub
lods
ret
popa
aam
or
test
dec
or
leave
cmpsb
nop
mov
or
push
leave
mov
lret
pop
xor
sahf
inc
popf
jae
xchg
and
leave
add
outsb
inc
aas
loop
gs
es
clc
lock
mov
ficoml
mov
add
ret
js
or
insb
inc
cmpsb
push
xor
mov
shlb
xchg
dec
inc
cmpsl
jo
pop
mov
or
xchg
push
cmpsb
mov
cld
adc
xchg
jecxz
gs
es
bound
mov
cmp
push
and
ss
sahf
mov
popf
out
addr16
jne
add
lods
cmp
rclb
les
cmpsl
jo
movsl
xchg
jl
es
mov
mov
stos
mov
incb
lcall
jg
add
push
popa
dec
fwait
clc
mov
outsl
xchg
aad
adc
cmovno
sbb
iret
test
lods
cmpsb
sub
xchg
pushf
push
fbstp
jno
in
jns
out
jp
hlt
push
call
jae
fcom
jae
dec
jo
pop
popf
add
adc
lahf
sub
cwtl
dec
sbb
vorpd
mov
jno
shl
and
repnz
xor
pop
ficoms
mov
leave
aaa
add
movsb
xchg
mov
sbb
push
sbb
dec
sub
jg
sbb
add
mov
xor
jecxz
cwtl
mov
or
inc
aaa
lcall
jg
stc
fistps
sbb
or
dec
movsb
pushf
loope
adc
xor
add
or
sub
outsl
add
popa
cmpsb
pusha
mov
cmp
and
gs
shll
cltd
aad
push
mov
push
dec
and
leave
addr16
ficoml
mov
icebp
into
cmp
pop
rorb
stos
in
cltd
mov
or
push
add
test
pop
test
push
xchg
cmp
ret
repz
and
imul
xchg
xor
jb
adc
sbb
and
fsubp
or
xlat
jp
mov
out
data16
subl
sbb
push
loope
inc
cwtl
jo
fmuls
mov
loopne
movsb
xor
stos
aas
sub
ffree
adc
dec
or
or
mov
xchg
out
mov
shld
fdiv
cli
cltd
pushf
mov
lods
and
add
aaa
ret
dec
insl
test
test
js
cltd
and
fstps
fcoms
xchg
leave
daa
dec
inc
aaa
decl
dec
out
movb
pop
nop
pop
imul
sahf
fld
jae
pop
pop
and
jae
cltd
cmp
mov
inc
sub
jmp
addr16
inc
dec
or
sbb
xchg
jecxz
insb
inc
and
mov
and
call
sub
outsb
sub
mov
adc
roll
push
popa
xlat
in
inc
sarl
orl
ret
adc
inc
xchg
mov
daa
jno
adc
jecxz
pop
push
adc
icebp
push
enter
add
inc
add
bnd
arpl
or
xor
mov
shll
andl
or
or
cmpsl
sub
push
jne
pop
cmc
into
dec
inc
and
aam
pop
ret
dec
test
sarb
cltd
leave
cmpsb
jmp
cmpsb
imul
mov
push
push
mov
rclb
stos
add
xchg
mov
leave
or
and
shl
into
mov
test
adc
inc
mov
dec
data16
lds
jae
mov
out
scas
out
inc
aad
lods
int3
cmpsb
fwait
addr16
aam
add
pop
cltd
lret
adc
xchg
daa
ljmp
mov
mov
out
lods
inc
inc
jmp
mov
aam
pop
or
cmp
jmp
imul
xor
mov
out
mov
lods
out
push
mov
mov
inc
data16
fstps
mov
fwait
test
mov
scas
xchg
sahf
test
gs
mov
rol
ss
in
movsb
mov
pushf
xchg
test
inc
cmp
imul
mov
insb
cmpsl
aad
outsl
enter
mov
imul
sub
fs
loope
mov
pusha
clc
fstps
pushf
rcrl
xchg
insb
cmp
stc
xchg
pop
pop
sarb
call
test
aas
mov
daa
sub
inc
push
mov
cmpb
jp
out
hlt
out
es
mov
inc
cmp
cmpsb
inc
das
sti
ja
pop
pushf
ss
js
jnp
or
cltd
fdivl
mov
pop
and
bound
stc
add
gs
jmpw
sub
pop
pop
scas
shrb
cmpsl
out
xchg
jnp
rcrb
leave
movsb
xchg
test
jmp
or
add
add
call
mov
add
cmp
push
imul
add
jmp
jae
mov
xchg
ss
shll
into
mov
sbb
dec
ss
aas
adc
mov
xchg
das
xor
xchg
jne
mov
xchg
adc
fcom
sbb
test
mov
inc
jmp
mov
sbb
fwait
lds
fcomi
les
xchg
cmp
dec
push
mov
rol
test
xchg
lret
xor
imul
call
jecxz
stos
shll
xchg
imul
sti
imul
cltd
push
and
sbb
cwtl
sub
pop
sub
xor
cmpsl
mov
das
aam
pusha
mov
sahf
aas
dec
sbb
push
mov
gs
out
test
movsl
cmp
es
sbb
fadds
push
or
push
pop
xor
dec
sub
repnz
mov
arpl
or
daa
cmpsb
mov
sub
mov
lahf
mov
or
out
cmp
push
dec
shrl
test
movsw
mov
sub
cmp
adc
xchg
js
adc
inc
jnp
adc
pusha
nop
je
jo
mov
dec
or
push
rorl
mov
ja
std
adc
and
jne
outsb
dec
pop
jmp
lods
mov
mov
or
xchg
movsl
pop
adc
pop
mov
lds
dec
pop
push
repz
scas
xchg
xchg
add
pop
addr16
out
pop
cmpl
xor
roll
outsb
arpl
lcall
cmpsb
mov
lds
leave
es
add
xchg
pop
xor
out
dec
ret
pop
mov
push
and
daa
push
orl
inc
sub
push
pop
shlb
into
jmp
mov
mov
fdivrs
fsubs
aam
pusha
lret
push
rorl
xlat
add
mov
sbb
in
push
roll
push
ds
daa
sahf
or
sbb
xor
stc
push
sbb
mov
mov
jae
cltd
test
xchg
leave
xchg
test
and
test
fcoml
cltd
push
loop
push
push
cld
xchg
pop
daa
xchg
pop
sbb
orb
inc
mov
jne
test
inc
loop
aam
sbb
aaa
add
xlat
ss
es
mov
pop
lock
idiv
cmp
cli
and
push
gs
push
sahf
test
pop
js
ds
cltd
and
es
mov
sbb
and
xchg
xchg
ljmp
inc
pop
sub
adc
ds
in
cmpsl
add
add
sbb
aaa
andl
mov
dec
repnz
ljmp
add
jl
pop
mov
addr16
arpl
pop
xchg
or
cmp
push
pop
jl
idiv
xchg
add
mull
mov
aam
enter
mov
in
push
adc
add
dec
dec
add
adc
xchg
fsub
pop
and
stos
stos
fadds
out
adc
xor
dec
popa
mov
cmpsb
repz
xchg
out
xchg
dec
insb
cld
fisttps
mov
cld
shr
enter
fdivrs
popa
ret
testb
mov
mov
cmp
xor
test
dec
rcll
pop
test
push
addr16
popf
or
inc
mov
sub
adc
cmpsl
ds
aas
sub
pop
inc
int3
imul
xchg
popa
test
aad
or
and
pop
inc
insl
adc
test
test
pop
jne
jae
loopne
ret
pop
push
test
adc
push
sbb
test
out
pop
shll
test
ret
movb
outsl
adc
icebp
add
mov
push
xlat
add
rcrb
pop
subb
dec
mov
gs
jmp
leave
lock
in
sbb
and
add
fmull
ret
adc
orb
adc
int
add
iret
mov
dec
popf
loope
lods
cmp
in
pop
test
cmp
jmp
add
loopne
push
movsl
es
adc
icebp
mov
dec
ror
adc
cwtl
mov
dec
inc
in
and
js
pop
ror
daa
aaa
inc
sbb
lret
jmp
or
pop
xchg
sub
pop
aam
or
sub
loopne
dec
test
xchg
mov
push
jne
mov
and
add
push
out
int3
xor
call
iret
sti
popa
sti
imull
jo
cmp
cmp
jnp
sub
mov
test
arpl
push
movsb
jnp
push
sbb
mov
jecxz
sub
sub
push
fildl
sub
sbb
out
jecxz
je
shll
fadds
das
out
shlb
inc
cmpsl
mul
pop
insb
xchg
out
inc
jns
mov
add
adc
fs
dec
repnz
pop
cmpsb
out
lds
push
mov
movsl
push
daa
ret
and
lods
push
mov
jbe
adc
cmp
cmp
mov
leave
cmpb
movb
adc
rol
xchg
sub
gs
or
scas
mov
mov
pop
out
ja
xor
mov
sub
rorb
xlat
imul
mov
cli
repnz
xchg
ja
adcb
enter
lahf
sar
pusha
push
in
inc
inc
ret
testb
imul
lret
test
mov
mov
cmp
arpl
jb
iret
gs
lock
jg
out
gs
pushf
cwtl
lock
and
insl
test
jl
pop
mov
push
popa
add
pop
mov
adc
jmp
ss
sahf
push
pop
and
addb
cld
xchg
data16
cmpsl
sbb
movsl
fmuls
iret
lds
mov
cmp
push
fcmovne
subl
aam
jecxz
adc
sub
dec
inc
sbb
cmp
in
in
dec
rcr
mov
xchg
sub
push
mov
daa
push
aad
mov
cli
rorl
adc
and
out
mov
xlat
lcall
addl
out
mov
inc
add
ds
push
rcrl
inc
jecxz
data16
in
xor
jb
movsl
mov
mov
inc
jbe
push
pop
popf
stos
ss
ret
or
xchg
or
aam
pop
sub
add
pop
adc
mov
test
push
cltd
dec
notb
daa
mov
cmp
jg
mov
add
and
gs
pop
mov
inc
leave
shlb
popa
sbb
in
mov
mov
or
lds
pop
push
fsubs
daa
pop
add
lds
and
je
cli
in
rcll
movl
addl
cmpl
inc
sub
les
mov
daa
outsl
in
fldt
xor
pop
aam
mov
les
xchg
popa
adc
inc
aas
insl
test
mov
shrb
mov
mov
movsb
test
pmulhw
and
push
mov
les
mov
inc
aad
js
incl
mov
push
push
dec
xchg
xchg
push
enter
mov
int
test
insl
inc
jo
je
sahf
dec
jp
adc
inc
lock
shlb
dec
das
mov
shll
sbb
push
jne
rorb
enter
xchg
mov
js
sub
mov
mov
iret
dec
pop
stc
addr16
pop
mov
or
mov
mov
push
mov
addr16
xchg
rorb
adc
mov
pop
pop
xchg
mov
gs
nop
and
jae
mov
sarl
repnz
inc
mov
movsl
daa
ret
shlb
push
ja
pop
fnstcw
jmp
add
and
mov
and
lcall
inc
in
js
orl
cmpsb
cli
mov
les
xchg
xorb
mov
addr16
popa
sub
lds
stc
in
pop
pop
gs
and
adc
lock
ja
leave
xchg
les
xchg
clc
sbb
mov
sahf
lods
movsl
ret
enterw
call
mov
movl
cmpsl
inc
lahf
and
xchg
inc
test
dec
push
mov
xchg
imul
pop
xor
xor
mov
rorb
xchg
jg
sahf
pop
inc
ds
or
xchg
call
rcrb
movsb
jmp
fdivs
mov
push
ret
pop
add
and
jecxz
jae
in
xchg
leave
pop
xor
push
jno
push
sub
enter
test
arpl
jne
stc
out
adc
jl
cmp
jo
cmp
mov
stc
movsb
mov
xchg
push
pushl
xchg
test
jb
fstpl
test
xchg
mov
testl
loope
inc
mov
out
ret
add
dec
pop
inc
cltd
cmp
mov
clc
shl
dec
ja
jbe
int
fsubs
stc
jl
enter
and
pop
movsb
cltd
xor
test
pop
or
cmp
lret
addl
imull
shll
jo
in
out
jmp
ja
jg
cmp
loopne
cltd
xchg
aam
repnz
pop
mov
dec
clc
dec
xchg
inc
dec
jle
add
sub
sahf
dec
negl
adcl
test
mov
xchg
pop
cmc
jle
cmp
ret
cmpsl
jecxz
dec
push
mov
roll
sahf
inc
xor
add
xor
in
push
add
fdivrl
test
inc
pop
xorb
sub
sbb
lahf
out
outsb
mov
and
fdivrs
shrl
fbld
mov
pop
dec
int3
dec
cwtl
lock
cmp
push
repnz
les
or
xchg
cmpsl
inc
mov
pop
inc
jl
inc
fimull
call
xchg
pop
xor
cmp
out
pop
notb
imul
fadd
data16
cmpsb
loopne
push
xchg
sti
imul
pop
daa
add
divps
mov
popl
dec
arpl
pop
and
call
adc
pusha
pop
dec
jmp
ss
pushfw
bound
ret
or
cld
cmp
mov
shrl
mov
test
lock
arpl
pop
mov
cmp
mov
push
ret
je
call
ss
cli
lahf
stos
test
cmp
mov
in
jo
rcl
pop
dec
iret
pusha
aaa
andb
and
mov
pop
mov
sub
call
stc
inc
or
fnsave
fldcw
xor
hlt
inc
in
mov
lcall
das
daa
fs
cmc
push
insl
or
stc
out
movl
dec
pusha
fld1
mov
icebp
cwtl
clc
daa
mov
cmp
mov
mov
jae
enter
jmp
fsubs
cwtl
mov
mov
fcomps
pop
lods
push
rcrb
mov
inc
push
cmpsb
lds
jp
imul
rorb
stc
mov
mov
cmpsl
enter
mov
xchg
stc
ret
mov
xchg
popa
repz
fdivl
push
dec
call
jbe
shll
inc
mov
xchg
sbb
ficompl
enter
fdivrs
movsl
pop
mov
out
mov
mov
inc
adc
dec
imul
testl
fisubrl
sarb
sbb
inc
dec
jecxz
or
cmpsl
es
inc
decb
sub
int3
subl
mov
repnz
jns
aad
or
scas
add
and
sbb
out
jle
mov
add
popl
adc
fs
cmp
add
test
jge
or
fnstcw
add
les
adc
mulb
flds
xchg
xor
dec
test
push
ds
and
sbbl
bound
in
pop
and
inc
sub
int
mov
imul
mov
inc
sub
push
mov
mov
pop
in
or
subb
pop
push
ret
adcb
and
mov
push
dec
xchg
sahf
sub
frstor
stos
ret
rorb
mov
dec
enter
mov
popa
fs
inc
add
pop
out
mov
push
mov
push
in
pop
shl
cmpsl
push
rol
fcmovu
or
inc
dec
mov
xchg
xor
cmp
fadds
sbb
aad
ja
push
std
sbb
ss
add
pushf
inc
enter
mov
xchg
and
mov
cmpsb
repnz
pop
jbe
dec
xor
xchg
lock
sbb
add
push
jb
lods
rcrl
dec
ss
test
bound
loopne
fmul
jns
dec
or
inc
or
jno
xchg
ret
push
loope
sbb
pop
mov
out
push
jg
inc
call
mov
std
rcrl
testl
and
dec
xchg
outsl
mov
lret
dec
sbb
sbb
fs
and
cmp
jo
test
inc
pop
inc
cmpsl
or
xchg
mov
or
and
jmp
enter
out
in
sbb
ret
push
sub
sub
sub
out
jmp
lods
push
mov
cltd
jecxz
sub
sub
and
les
imul
xchg
xchg
addr16
les
cld
xchg
push
jle
pop
rorb
inc
mov
imul
mov
mov
pop
xor
xor
pop
inc
mov
adc
cmp
sub
ja
mov
lods
shll
leave
and
fsts
iret
mov
test
mov
sbb
test
mov
xor
sbb
ret
adc
mov
mov
rorb
loope
add
mov
fiadds
mov
imul
sbb
shlb
push
jle
and
orb
loopne
iret
enter
push
ficoms
gs
jl
ret
cld
cmpsb
stc
adc
imul
sub
filds
arpl
fwait
enter
dec
xchg
push
push
push
lret
and
mov
push
sahf
mov
andb
pop
mov
repnz
dec
xor
mov
push
addr16
dec
mov
je
xchg
loopne
imul
iret
sbbw
popa
test
adc
shll
dec
xor
pop
pop
cmpsb
rcll
rol
push
sbb
sarb
fcom
test
pop
pop
pop
mov
rclb
and
push
mov
cmp
int3
fdivs
into
jno
lds
sub
sub
in
decl
sbb
push
cmp
lret
push
ret
out
jl
xchg
cmpsl
add
push
inc
subb
lretw
sub
fimuls
mov
push
fisttpl
cmp
xchg
mov
jb
rorl
adc
pop
jns
push
mov
shl
mov
xchg
cmp
jecxz
lock
mov
addr16
std
cmp
fdivrs
sub
idivl
addr16
pop
stos
add
cmp
andl
divb
mov
jmp
les
adc
aas
popf
and
into
mov
sahf
and
popa
cmp
js
and
imul
ss
pop
aaa
in
ret
mov
popf
cmp
ja
imul
pop
jo
adc
sbb
mov
imul
pop
jo
das
gs
xor
or
movsb
cmp
cmp
ja
test
ja
out
and
test
in
fldcw
iret
mov
inc
mov
subl
sub
add
pushf
dec
cmp
or
and
rolb
pop
mov
sbb
aaa
les
mov
rcll
stos
rcrl
in
xchg
rcll
sbb
insl
mov
stos
addr16
add
bound
add
xchg
pop
mov
fisubrs
rorl
sub
fnstenv
add
sub
sbb
jbe
mov
movsl
leave
scas
mov
jl
push
dec
loop
inc
or
and
sbb
mov
cwtl
int
cmc
mov
xor
rcrl
mov
sbbb
stos
test
ret
insb
jbe
rdtsc
add
add
ret
aam
mov
xor
mov
mov
sub
push
inc
dec
xlat
inc
fsubrs
cli
aam
stc
cwtl
xchg
adc
mov
fidivs
pop
or
sbb
out
in
dec
xchg
mov
jge
pop
push
dec
lods
or
enter
sbb
inc
xor
dec
and
jo
inc
sub
sbbb
mov
test
stos
inc
pop
or
enter
enter
pop
xorl
dec
push
inc
mov
push
pop
xchg
push
push
mov
cmp
pop
jb
dec
rclb
inc
hlt
mov
xor
mov
rclb
cmp
inc
adc
cwtl
xor
subb
mov
pop
data16
incl
cmp
sub
xchg
fsubl
cmc
mov
test
add
cmpsb
jmp
mov
xorb
imul
popl
fstps
lock
rcrl
call
sbb
fisttps
sub
popl
mov
inc
xorb
loopne
gs
loopne
ret
mov
inc
push
jg
mov
mov
into
sbb
je
negl
sub
fxch
push
xchg
pop
sahf
pop
jnp
mov
scas
adc
dec
xchg
inc
data16
arpl
xor
xchg
call
pop
push
xchg
iret
pop
fwait
or
stos
repnz
inc
test
rorb
jne
cmp
out
das
les
xor
and
int
cmp
loope
in
ficomps
int
add
mov
adc
fcomp
inc
push
dec
adc
jmp
pop
sbb
mov
stc
enter
dec
jo
ret
mov
loope
dec
movsl
cmp
ds
dec
xchg
pop
loope
cli
icebp
or
mov
sbb
xchg
inc
jmp
in
stos
push
xchg
sbbb
rolb
imul
daa
cli
mov
inc
mov
loope
movsb
movb
inc
sub
call
das
cmp
cltd
xchg
pop
dec
ss
or
fsubs
mov
test
data16
and
cmpsb
enter
add
lahf
and
pop
fwait
pop
push
inc
frstor
xchg
loopne
rcrl
addr16
pop
adc
inc
or
and
testl
mov
ficoml
jb
xor
push
xor
or
xor
fwait
divl
and
stos
jo
cmpsl
jmp
addl
adc
fstcw
cmp
adc
loope
test
rcl
mov
cmp
js
mov
push
ret
xor
repz
fld
hlt
andb
scas
mov
or
cmp
add
xor
sbb
and
inc
fs
repnz
aam
mov
push
cvtpi2ps
sbb
js
xchg
xor
mov
and
or
jns
loopne
push
stos
leave
sub
mov
addr16
add
xchg
cmc
pop
out
mov
dec
cmp
ja
inc
push
mov
xchg
push
mov
cltd
adc
ret
mov
loop
movsl
xchg
inc
jg
mov
jp
cmp
and
cmp
add
push
aad
cmp
call
cmpsl
xchg
int3
mov
cmp
add
stos
test
xor
cmc
cmp
shlb
push
outsl
movsl
xor
xor
mov
sbb
lds
je
scas
adc
into
ficoml
mov
jae
adcb
iret
or
test
popa
fistpl
movsb
int
subb
aad
es
iret
dec
push
outsb
jmp
dec
call
vxorps
in
cmpsl
ret
xorb
or
or
lods
add
or
mov
sbb
pop
test
daa
enter
add
sub
daa
idivl
popa
sbb
lret
rcrb
sahf
insb
cmpsl
sbb
jo
mov
adc
jno
xor
dec
cmpsl
pop
jbe
hlt
add
inc
push
or
loope
movsb
rol
popf
je
push
int
and
sub
dec
leave
xor
rcll
insl
add
adc
cld
dec
out
es
dec
cwtl
popa
xchg
call
jne
orl
add
inc
cmp
clc
inc
xchg
jo
mov
clc
push
cli
mov
pop
mov
es
std
hlt
and
push
jne
inc
outsl
popa
fstl
and
sti
ror
popa
push
fildll
outsb
cmp
ret
popf
sar
inc
inc
pop
pop
int3
and
and
sbb
scas
adc
stc
dec
xlat
inc
jmp
jne
sub
push
clc
dec
decl
dec
and
cltd
outsl
jp
or
adc
adc
mov
push
adc
clc
icebp
xor
repnz
jp
shl
xchg
pop
xchg
data16
ljmp
xlat
repnz
adc
cmp
ret
push
rolb
lcall
mov
and
arpl
sub
data16
sbb
mov
jno
out
aam
inc
cmp
fists
mov
push
xchg
shrl
scas
pop
sbb
in
test
insb
xor
cmpsw
fdivrl
dec
adc
xor
lret
sbb
out
flds
push
cmpsl
ret
pop
push
leave
sub
add
jecxz
add
pop
add
scas
cmp
mov
add
aaa
dec
cmp
insb
pop
jb
sub
movsb
ds
ret
xchg
enter
or
mov
leave
mov
addb
es
pusha
or
xchg
call
sbb
mov
mov
inc
aam
xlat
aas
xor
fs
repnz
jl
movb
fadd
lret
sbb
sub
mov
mov
daa
mov
add
out
mov
popf
or
dec
divl
jmp
sub
mov
notl
in
inc
mov
add
pop
cmp
and
iret
clc
xor
adc
xchg
std
or
mov
aad
mov
xlat
jmp
stc
or
adc
cli
add
lods
ja
roll
rcll
dec
inc
rolb
dec
push
std
cmc
and
or
xchg
test
sbb
inc
push
in
xchg
inc
and
leave
and
adc
pop
dec
in
mov
pop
and
push
mov
adc
dec
cmp
xchg
push
fwait
mov
filds
stos
xlat
mov
lods
in
jmp
add
fmul
leave
orb
outsl
cmp
imulw
push
ret
sub
adc
aam
jmp
fldenv
mov
xchg
loopne
gs
xchg
daa
out
pop
pop
add
shrl
loopne
repz
jge
sbb
popa
test
push
cmp
sub
aam
mov
orb
push
cs
push
inc
cmp
dec
daa
cmp
lock
repz
shlb
push
xor
inc
jl
lds
jo
fcomps
sub
mov
mov
inc
dec
ret
xchg
push
jo
test
js
cmp
pop
fs
popa
jmp
notb
or
dec
outsb
mov
testb
orb
call
out
mov
aas
cmpsb
popa
sub
js
sub
jo
call
xor
movb
sub
push
popw
movl
aaa
scas
sub
aaa
mov
stos
test
mov
dec
aad
push
sub
mov
xchg
loope
fwait
push
dec
cmc
shrl
inc
mov
mov
ja
adc
pop
xchg
mov
lods
mov
xchg
aaa
push
xor
call
js
sbb
js
cmpsb
inc
ljmp
pop
movsl
loope
add
cld
test
mov
test
mov
loop
lods
cmp
ja
inc
call
ret
test
push
daa
push
and
or
push
jp
sbb
mov
arpl
inc
mov
test
insl
stos
mov
xchg
fsubrs
cwtl
pop
mov
adc
repnz
and
mov
xchg
ss
jbe
enter
insb
rcrl
mov
imul
fwait
mull
pop
jne
icebp
xchg
xchg
pop
jg
dec
cltd
cwtl
idivl
cmp
jecxz
std
pop
lds
imull
mov
and
dec
mov
dec
push
or
mov
jns
sbb
cmp
leave
pop
mov
and
jg
decl
nop
cmpsl
test
and
xchg
rol
pop
dec
sbb
ret
orb
add
sbb
aam
lea
or
cmpsb
sub
sbb
mov
aam
clc
sub
and
icebp
sahf
jecxz
or
xchg
cltd
mov
pop
cmp
pop
sbb
test
and
adc
cltd
push
mov
jo
aas
aaa
mov
fs
test
adc
add
ljmp
rol
ds
imul
jo
fsub
out
arpl
std
jg
ret
enter
adc
outsl
popf
xchg
pop
test
lret
mov
jmp
out
imul
out
sub
cwtl
jne
outsl
add
cli
das
aad
xchg
ficoms
sbb
fistpll
jo
sub
and
data16
pushf
in
push
sbb
inc
or
fistps
xchg
xlat
nop
push
pop
out
jmp
leave
ja
popf
xchg
filds
insl
popa
xchg
inc
test
jge
xchg
stc
cmc
pop
pop
addb
movb
rol
sahf
test
out
lds
or
movsb
nop
mov
mov
enter
rolb
clc
mov
or
pop
or
dec
fmul
stc
pop
loop
stos
fdivrs
clts
rolb
adc
sub
add
int
jo
mov
push
and
int3
jae
mov
repnz
decb
cmp
dec
mov
xchg
add
cltd
pop
push
inc
aam
ret
lods
xchg
test
aaa
push
les
jne
xchg
and
pop
stc
shrb
inc
movl
inc
test
leave
addr16
rclb
or
dec
rorb
popa
mov
cmp
xor
sub
push
xchg
and
add
cwtl
inc
xchg
inc
cltd
sbb
inc
fisttpl
push
cmpsb
addr16
or
loope
xchg
loopne
ss
xor
maskmovq
cmpsb
mov
fsubs
mov
dec
add
and
insl
pushw
jl
movl
mov
cmp
and
mov
clc
icebp
push
and
leave
enter
out
les
mov
push
mov
imul
int
mov
xchg
iret
test
cmp
jb
subl
pop
bound
mov
pop
fnstcw
popa
inc
xor
fstpt
movsl
repnz
mov
gs
orl
test
popa
push
inc
mov
push
mov
idivw
mov
mov
dec
shl
sbb
dec
jnp
mov
sbb
pop
mov
inc
fadds
out
outsl
in
sub
dec
movsl
jmp
or
push
jmp
movsl
add
int
pop
push
inc
popa
pusha
mov
clc
add
and
shrb
sub
negb
fisubrs
cli
mov
adc
jl
movl
add
fdivs
xchg
fsub
pop
insl
hlt
mov
push
pop
add
dec
inc
cli
in
cmpsl
add
xor
or
jg
or
ret
adc
inc
in
daa
shll
test
call
mov
call
movl
enter
dec
push
test
xor
push
mov
xchg
pop
rorl
dec
jle
xchg
enter
scas
out
outsl
nop
and
movl
cs
adc
mov
gs
and
pop
push
mov
dec
sub
inc
sbb
movsb
inc
sub
dec
dec
dec
aam
pop
addr16
pop
arpl
sub
mov
jge
push
cmpsb
dec
push
mov
pop
and
sub
mov
mov
jecxz
mov
jns
loopne
imul
mov
mov
int
int3
mov
pop
ret
ja
addr16
lret
mov
scas
ss
pop
clc
or
sub
sub
pop
stos
ret
in
cmpsl
xor
test
jo
jmp
xorb
rcrl
push
cmp
imul
test
push
dec
xchg
mov
add
popf
addr16
jl
or
and
sbb
div
pop
jmp
ret
stc
leave
jbe
loopne
stc
test
ret
adc
jbe
test
xlat
outsl
dec
jns
adc
sti
adc
das
je
adc
inc
pop
cmpsb
scas
dec
xorb
cmpl
sub
sub
xchg
scas
adc
mov
pop
loopne
adc
sbb
push
cld
push
and
inc
insb
jb
loopne
mov
or
cwtl
cmc
or
insl
arpl
lea
ret
xchg
mull
ret
scas
jno
pop
pushf
jl
jle
int
jo
je
lret
enter
add
pop
je
sbb
inc
mov
push
adcl
in
mov
push
aaa
sub
jae
shl
xorl
shll
add
jecxz
sbb
dec
inc
out
es
icebp
mov
mov
push
mov
cmc
outsb
xlat
pushf
mov
or
dec
shll
adc
andl
lret
jo
push
sbb
mov
xor
out
call
pop
in
jmp
pop
adc
adc
dec
stos
icebp
mov
add
jmp
inc
cwtl
dec
fildll
or
or
std
sti
sub
cltd
test
les
addr16
imul
jae
dec
cwtl
sub
mov
xor
mov
add
mov
adc
cmp
push
stos
ret
xchg
orl
in
cld
and
pop
cmp
jmp
enter
popf
sub
sub
imul
dec
ret
and
add
nop
push
mov
in
into
xchg
clc
roll
les
jo
xor
sub
adc
xor
cld
daa
jp
decb
data16
xlat
jle
orb
pop
or
gs
sti
rcr
push
or
sti
cmp
sub
cwtl
sub
mov
mov
jne
dec
mov
dec
mov
test
pusha
call
or
sub
cmpsl
push
dec
fisttpll
push
int
sub
mov
jmp
lahf
pop
inc
sbb
mov
push
in
cmp
adc
cmp
lret
scas
in
sbb
mov
shlb
inc
ss
enter
mov
hlt
test
jmp
pop
sbbb
adc
jg
inc
fs
and
call
shrl
push
jns
loopne
pop
mov
clc
jmp
lods
ret
test
and
icebp
lock
push
adc
aas
rclb
push
fisttps
dec
ficoml
loope
clc
movsl
mov
orb
outsl
aaa
int3
test
adc
push
enter
loope
mov
xchg
movsl
test
xchg
movsl
popf
imul
shrl
mov
jno
mov
leave
inc
and
jle
adc
repnz
pop
popa
popf
movsb
xor
fstps
pop
jbe
cmp
pop
imul
mov
testl
or
ljmp
stc
hlt
fadd
icebp
pop
mov
dec
fdiv
fisttpl
push
out
cmp
negb
sbb
jne
out
cwtl
arpl
pushf
rol
into
ljmp
inc
xor
lea
push
cmp
xor
xchg
xchg
jl
and
add
imul
sbb
loopne
jnp
sti
out
out
sub
je
fdivs
xor
mov
pop
loope
neg
mov
dec
call
or
in
cmp
xchg
inc
inc
jo
stos
fs
mov
ror
or
pop
andb
outsb
add
out
stc
jg
fdivrl
test
in
push
fdivrl
push
movsl
mull
push
dec
push
ret
test
xchg
leave
movsb
xchg
inc
jge
movsl
xor
cmp
cs
sbb
cmp
rcr
jl
loopne
imul
fdivrs
in
outsl
cmp
push
imul
fcomps
leave
add
inc
sub
cld
pop
mov
loope
int3
inc
jl
mov
pop
cltd
pop
pop
cmpsl
or
enter
pop
sti
nop
mov
jo
add
jge
add
pop
stos
in
clc
add
ficoml
pop
orb
cmpl
loopne
call
mov
dec
outsb
popa
fiadds
fnop
push
pusha
xchg
jo
insb
push
fdivl
jns
stos
jo
fdivl
rolb
mov
pop
fldl
mov
movsl
push
imul
mov
jl
xchg
mov
arpl
mov
loop
add
loopne
test
repz
popl
dec
inc
imull
push
mov
cmpsl
jo
jbe
sub
mov
daa
andl
popf
in
sahf
gs
lea
enter
or
inc
fxch
rcl
xor
sub
jmp
scas
leave
cmpsl
clc
jmp
pop
imul
movsl
cmp
frstor
mov
lret
lret
or
inc
movsl
in
mov
out
add
sub
xor
sarw
in
repz
sbb
aam
in
fcomps
add
mov
fnstcw
out
and
fcom
xchg
fsubs
cltd
mov
mov
mov
enter
pop
xchg
test
sysret
pop
mov
jno
fisubs
pop
pop
mov
xchg
mov
cmp
mov
xchg
mov
push
out
or
and
sub
or
pop
add
adc
pusha
gs
popf
adc
add
cltd
and
push
mov
pop
into
outsb
sbb
mov
pop
ds
cltd
pop
andb
jns
sarb
cmpsb
or
xchg
push
shll
mov
call
test
imul
inc
cmp
addr16
inc
or
push
pop
jge
xor
test
mov
and
gs
inc
imul
loopne
pop
orb
rol
push
cmp
and
movsl
sub
cmpsl
cwtl
loopne
hlt
xlat
push
mov
test
mul
mov
es
and
adc
jnp
jo
jmp
cwtl
xor
jge
out
cmpsb
dec
mov
jl
mov
fisubrl
js
hlt
movl
and
mov
cmp
mov
inc
cmp
imul
jo
cmp
pop
addr16
xorb
jo
fldl
or
mov
dec
fld
cltd
sbb
dec
gs
xchg
mov
push
or
aas
push
push
mov
test
jbe
rcr
xor
pop
pop
mov
sbb
mov
rorb
mov
mov
sbb
xchg
pop
cmp
mov
pop
insl
loopne
inc
xchg
cmp
test
mov
xchg
pop
scas
add
mov
test
out
or
xlat
in
xor
or
inc
xchg
and
xor
or
inc
mov
push
push
iret
icebp
lock
xchg
call
in
inc
icebp
sub
mov
aad
sub
nop
xor
xchg
cmpsb
in
adc
sub
xchg
cli
test
imul
xor
mov
fmuls
mov
test
xlat
inc
pop
leave
jbe
dec
mov
cmpsb
int3
mov
aas
shl
pop
pop
or
pop
xorl
bound
push
std
xchg
push
loopne
sub
loopne
and
sub
inc
sbb
mov
into
loope
std
push
aad
cmp
mov
fidivs
jno
mov
inc
mov
rol
mov
movsb
pop
rcll
adcb
or
inc
sbb
lret
pop
xor
outsl
aaa
test
pop
std
inc
sub
stos
mov
and
shrb
pop
jb
clc
test
outsb
jb
test
sbb
pop
rolb
and
frndint
xor
xchg
xor
int3
jmp
cmpsl
inc
js
pop
dec
xchg
subb
popl
aaa
ja
ss
mov
xchg
subb
mov
jmp
mull
inc
rclb
mov
pop
popf
pop
xchg
lds
test
jae
in
outsl
push
orb
insl
test
je
xlat
mov
cs
std
cmpsl
jmp
fwait
sbb
es
mov
cmc
test
sarl
imul
mov
pop
imul
lret
xor
sub
or
dec
mov
xchg
cwtl
mov
xchg
push
cmp
mov
and
addr16
or
xchg
enter
sbb
mov
cmp
es
pop
loope
xchg
lods
xor
sbbl
stos
daa
stc
loope
cmp
mov
les
pop
xchg
mov
insl
push
repnz
adc
adc
and
cmp
sbb
addl
daa
sub
dec
add
outsb
dec
push
fcoms
pop
cmp
rcl
enter
lahf
pop
pop
mov
aaa
loopne
daa
hlt
sbb
jl
test
add
pop
pusha
jns
jmp
and
cltd
stc
dec
xor
xlat
stc
mov
pop
mov
push
jl
popl
dec
ljmp
mov
insb
cld
xchg
adc
add
or
notl
pop
lea
js
xchg
es
push
cmpsl
inc
je
mov
sbb
loope
inc
loope
sub
mov
mov
mov
in
popa
push
shrb
fwait
inc
mov
rol
in
mov
shl
ret
mov
int3
mov
and
outsl
in
popa
into
gs
xchg
push
scas
mov
outsl
inc
or
push
mov
shlb
add
pusha
inc
js
cli
fisttps
jno
push
push
mov
lahf
dec
sbbb
add
adc
add
add
xor
push
adc
addr16
pop
nop
in
movsl
jp
mov
mov
sub
jae
leave
cltd
pop
call
jge
push
int3
inc
popf
addr16
test
jbe
fistps
mov
pandn
add
imul
lds
mov
pop
xchg
enter
movsb
subb
rcr
ljmp
pop
jmp
inc
pop
sub
jnp
or
outsl
sbb
aad
bound
movsl
test
fsubrs
xchg
mov
xchg
adc
push
and
outsl
push
mov
jmp
movsl
jo
and
inc
add
les
sub
push
in
add
aas
jno
adc
xor
and
pop
ret
shrb
rcll
mov
in
mov
gs
loope
jmp
mov
mov
sbb
rcrl
imul
scas
stos
cli
stc
stc
dec
movsl
leave
das
in
pop
pushf
aam
cmp
inc
mov
dec
scas
jo
adc
inc
loope
jne
xor
outsl
loope
leave
int3
sub
data16
add
gs
cmp
add
in
into
jne
shll
mov
adc
in
loopne
pop
mov
mov
ret
les
addb
mov
lods
movsl
js
cmc
pusha
fisubl
aam
xor
mov
sub
test
leave
push
loope
cmc
dec
mov
mov
aam
outsl
sbb
test
cmpsl
outsl
dec
je
or
sub
mov
cmpsl
and
xchg
sub
mov
sub
dec
mov
and
jne
es
pop
pop
inc
sbb
and
pop
add
sbb
shl
ret
push
imul
mov
jmp
pop
test
inc
and
pop
and
dec
push
push
mov
jbe
divl
je
dec
imul
xor
dec
cs
dec
mov
cmp
test
leave
in
in
and
sub
shlb
and
xchg
mov
jnp
inc
dec
add
fsubs
and
sub
add
adc
fiadds
fcmovnu
and
data16
sbb
jp
ret
movl
inc
add
outsb
mov
fs
push
icebp
inc
sahf
jle
data16
mov
inc
imul
fs
jno
addr16
mov
jge
adc
pop
outsb
sahf
lods
stos
inc
cltd
or
hlt
push
fdivp
repz
enter
hlt
cwtl
or
xlat
sbb
inc
push
pop
cmpl
outsl
push
popa
mov
sub
dec
jns
test
ret
mull
cmpsb
sbb
rorb
jge
xchg
sbb
jo
push
addr16
xorl
gs
jbe
ss
pop
pop
xor
or
leave
cmpl
popa
jl
mov
dec
sbb
aaa
xchg
loop
lods
test
or
cmp
sub
sub
sbb
aas
sbb
add
mov
xchg
and
inc
dec
push
inc
mov
leave
inc
movsb
jns
and
int3
inc
call
mov
rolb
cltd
jbe
push
loope
inc
scas
leave
mov
xlat
push
jl
ja
ret
sub
shlb
push
mov
pop
sub
push
and
or
stc
ss
and
lret
lds
leave
adc
inc
cmp
loope
sub
into
not
imul
mov
fsubs
adc
iret
call
cmp
or
pop
push
loope
push
xorb
adc
mov
outsb
rorb
ljmp
gs
xlat
push
add
dec
push
insb
lcall
enter
push
jmp
sub
data16
nop
dec
inc
les
clc
leave
xchg
xchg
mov
fsubp
aas
cmp
popl
add
stos
mov
js
or
xchg
inc
sub
add
push
cli
sahf
test
nop
addr16
jl
cs
or
push
out
movsl
or
in
movsl
mov
push
cmp
push
ja
lret
jnp
ret
enter
dec
ss
dec
movsl
dec
imul
mov
pushf
shlb
movsl
mov
shrl
pop
ret
dec
loope
adcb
mov
xor
xor
cs
call
push
mov
nop
and
scas
push
push
pusha
or
clc
in
stos
xchg
cmpsl
fadd
sbb
rorb
out
pop
cld
arpl
push
xor
push
or
call
imul
fsubs
js
sub
out
es
inc
mov
mov
push
es
pop
sub
fdivrs
cmp
mov
jo
dec
mov
into
fs
out
addr16
sub
fcompl
out
fimull
fs
xchg
shrb
inc
cmp
ds
or
fdivrs
repnz
mov
icebp
xchg
test
xchg
jbe
xor
test
stos
sub
jns
fstpl
mov
imul
mov
outsb
or
out
shll
push
jl
aaa
js
popa
pop
ss
sub
inc
and
push
dec
jo
xchg
mov
or
in
outsl
lods
test
sarl
inc
or
xor
push
and
les
fidivs
outsb
orb
mov
cmc
jo
bnd
inc
xor
test
push
cli
adcb
test
push
scas
pop
sub
lods
mov
imul
push
pop
xchg
stos
xchg
mov
filds
loop
jno
dec
movsl
shlb
inc
xor
xchg
test
push
mov
es
js
fsubrs
sbb
mov
push
push
add
pop
test
cmpb
push
cmp
xor
sbb
pop
fstps
aas
and
popf
mov
pushf
mov
xchg
mov
cmp
push
js
and
mov
mov
loope
addr16
ret
cmp
jl
mov
fldl
mov
loopne
jnp
je
or
and
fimull
not
aam
mov
scas
inc
mov
push
in
pop
movsl
mov
addr16
push
sub
imul
addr16
pusha
div
pop
pop
xchg
jmp
pop
add
xor
stos
addr16
lock
roll
cmpxchg
add
divb
sti
les
in
daa
jp
push
dec
and
ret
mov
pop
pop
add
shrl
loopne
repz
pop
jno
mov
pop
imul
pop
lods
push
mov
xor
test
push
ds
sub
ja
test
xlat
adc
add
jne
inc
imul
adc
icebp
cmp
fwait
loopne
test
pop
movsl
icebp
ja
cwtl
push
adc
inc
iret
mov
push
push
cmpsl
popf
cmpsb
cltd
movsl
cmpsl
popa
test
enter
jecxz
mov
xchg
jl
popa
test
mov
dec
insl
fcom
mov
mov
out
mov
xor
jno
insl
xchg
jne
jnp
fdivr
push
sub
and
mov
lds
test
push
dec
sub
rcrb
fildl
push
imul
mov
aam
pop
pop
push
shrl
pop
inc
cmp
fiadds
popf
movsl
add
dec
xor
cld
in
mov
test
enter
imul
lds
and
ja
push
enter
data16
pop
inc
popf
jp
mov
stos
fcoms
lods
je
gs
shll
js
inc
mov
je
jp
sub
pop
leave
jle
sbb
iret
mov
inc
out
mov
sbb
ja
andb
and
std
or
ja
mov
jmp
test
orb
mov
aaa
clc
adc
std
jl
jne
movl
fwait
mov
mov
or
repz
pop
mov
mov
mov
mov
fbld
sbb
cmp
cmpb
sahf
or
out
ja
mov
sbb
test
push
shrb
in
leave
xlat
dec
loope
bound
xlat
nop
add
arpl
daa
lods
xlat
jo
leave
aaa
pop
icebp
divl
in
in
insb
push
dec
test
flds
mov
mov
cmp
push
mov
cmp
jae
xchg
jbe
mov
pop
jnp
test
fldl
lcall
xlat
xchg
outsl
pop
mov
push
and
out
or
call
mov
jb
out
daa
cwtl
sub
jmp
ret
inc
xor
insb
xchg
imul
aad
inc
ljmp
or
lea
pshufw
das
add
add
and
push
inc
mov
inc
test
test
push
addr16
dec
test
call
rcr
sub
sahf
es
push
push
mov
fwait
ljmp
xlat
add
inc
mov
iret
fnstsw
inc
data16
add
cli
mov
lret
jb
les
dec
je
mov
lods
push
pop
pusha
loopne
xchg
mov
add
cld
enter
std
repz
inc
mov
jmp
shl
pop
aad
and
jbe
lret
jmp
cltd
call
dec
out
movb
ret
repnz
dec
mov
data16
or
call
nop
call
lcall
xor
aaa
rol
mull
fsubrs
sbb
jo
mov
nop
lds
fsubr
jno
outsl
lcall
push
out
dec
cmp
mov
add
rcrb
ljmp
cmpb
ficoml
xchg
movsl
ret
dec
cmp
stc
xchg
cmp
mov
leave
dec
xchg
push
push
mov
push
fisubs
stc
gs
fcoml
imul
into
fldenv
mov
add
shrb
inc
inc
adc
cltd
out
push
in
push
out
pop
push
out
cmp
hlt
xor
and
lds
adc
xor
inc
aam
out
jnp
jbe
mov
mov
pop
les
push
dec
mov
pop
addr16
mov
pop
inc
mov
push
clc
xlat
jp
push
push
ja
sbb
rcrl
inc
movl
pop
mov
out
push
stc
mov
stos
push
push
stc
mov
mov
lret
daa
xchg
cmpl
inc
cmpsl
pop
int
mov
pushw
leave
push
hlt
rclb
jl
in
out
lock
xor
popa
mov
movsl
out
jno
in
inc
xchg
jns
ss
rorb
inc
xchg
jmp
das
pop
jmp
lods
stos
cltd
enter
std
sbb
jl
clc
pop
hlt
jmp
xor
cld
lds
fimuls
inc
rclb
push
ret
repz
mov
inc
dec
packuswb
xor
cmp
push
sbb
in
dec
stc
lcall
sar
not
dec
les
insl
sub
lods
push
shll
or
mov
aas
pop
add
div
pop
and
mov
add
jae
rorb
ret
cmpsl
clc
xor
push
mov
mov
enter
push
pusha
sarb
mov
scas
or
pushf
rcll
xorl
jg
xor
stc
ret
loope
xlat
leave
push
push
xor
idiv
hlt
xor
mov
addl
test
imul
test
pop
mov
movsl
test
mov
call
and
or
mov
imul
loope
int3
mov
pop
clc
test
cmp
inc
orb
imul
push
aad
jp
jo
dec
call
xchg
out
xchg
fsubrp
push
fstpt
dec
loopne
leave
xchg
mov
inc
dec
hlt
xor
cmp
xchg
ret
bound
mov
test
ret
dec
call
pop
test
xchg
cld
or
mov
xor
fsts
idivb
xor
test
lret
jecxz
or
sub
jl
pop
movsb
add
pop
test
clc
mov
scas
popw
gs
dec
jg
mov
out
loope
sbb
mov
aad
popf
mov
mov
imul
fmulp
or
sub
cmp
mov
xchg
stos
sub
cmp
xor
mov
stc
mov
and
scas
push
sub
xchg
loope
push
push
mov
stos
loopne
stc
scas
jo
aaa
or
enter
stc
aad
test
mov
pop
jo,pt
add
or
inc
das
rcrb
sbb
addr16
scas
adcb
dec
in
and
aam
xor
out
ficoml
or
inc
outsb
xchg
lahf
xor
sbb
push
mov
bound
sbb
addb
push
add
mov
xchg
aad
sub
mov
addr16
daa
sbb
in
inc
iret
fnstcw
or
mov
test
out
or
jmp
dec
test
clc
pop
mov
mov
ret
imul
adc
push
popl
or
jne
mov
add
test
sub
mov
or
lret
push
out
int3
sub
imul
aad
and
jg
pop
popf
inc
movsl
out
or
scas
gs
test
cltd
stos
mov
inc
lea
push
call
insl
movsb
imul
in
popf
lea
add
icebp
inc
inc
test
push
jo
cmp
mov
fcompl
into
mov
dec
les
outsb
out
cmp
push
and
and
jg
aaa
pop
cltd
pop
rcrl
pusha
adc
xchg
movsb
fldl
add
sbb
xor
jns
jmp
es
loope
and
jmp
pop
add
out
cmp
addr16
sub
loope
test
and
mov
inc
inc
shlb
or
dec
sub
push
sub
inc
clc
lsl
sub
and
sub
fsubs
loope
jo
inc
stc
jns
inc
mov
or
jle
jns
mov
jge
xor
sahf
push
xchg
and
inc
cmp
lcall
addr16
aaa
fcoms
enter
in
sub
js
mov
pop
add
dec
in
adc
push
adc
xor
stos
int
adc
popa
inc
mov
fmull
xor
pop
fcoms
orb
and
dec
rolb
jno
imul
push
push
sub
dec
push
call
stos
add
mov
mov
mov
mov
jl
jbe
push
mov
fs
dec
push
test
das
mov
or
inc
shlb
sbb
inc
jno
movsb
pop
rol
xchg
fsubs
cltd
scas
clc
add
dec
ljmp
repnz
not
fwait
xor
mov
push
imul
lock
ret
fwait
out
sub
mov
pop
sti
andb
rorb
pop
daa
mov
push
jge
add
fstps
sbb
call
fdivs
sub
loope
jg
scas
xor
dec
push
aas
fbld
subb
xchg
sbb
xor
out
jl
popf
movsb
test
daa
sahf
mov
daa
push
adc
dec
call
push
and
in
push
mov
cmpsl
ret
inc
popf
ds
dec
adcl
loopne
jmp
outsl
mov
leave
ret
adc
mov
xlat
enter
fwait
push
enter
gs
sbb
loopne
frstor
aad
mov
popa
add
and
lods
add
iret
jno
loopne
pop
jbe
stc
popf
iret
stc
mov
and
loopne
out
cmpb
xchg
mov
loope
or
cmpsb
imul
or
fbstp
enter
cmpsl
sub
push
clc
cwtl
pusha
test
cmp
cmp
dec
pop
out
pop
xchg
sbb
push
cld
xchg
mov
in
cmp
mov
dec
call
and
xchg
sbb
lcall
or
imul
enter
sub
out
scas
dec
xchg
sub
js
push
xor
subl
xchg
inc
xor
push
add
popa
loope
je
fsubr
fadds
mov
fsubrp
addr16
cli
cmp
xchg
pop
cmp
xchg
cmp
xor
call
dec
or
push
test
dec
aad
mov
test
mov
enter
ds
mov
in
aad
iret
cmp
pop
mov
lds
pop
inc
leave
int
shll
jbe
mov
out
sub
in
repnz
adc
out
xchg
leave
lods
and
daa
xlat
in
mov
xor
ret
movsl
jo
fsubl
test
adc
cmp
mov
ljmp
negb
outsb
sbb
rcll
fnstenv
xchg
jns
aaa
pop
rcrl
pop
shll
mov
lret
adc
leave
cmp
mov
rol
sbb
lock
lods
leave
mov
rcll
cmp
xchg
pop
cmp
sahf
add
jge
cmpsl
insb
jo
push
insb
enter
rorb
ret
icebp
dec
sub
scas
clc
es
sub
inc
mov
add
test
ficomps
imul
lods
pop
test
cmp
addb
mov
push
xchg
pop
or
inc
adc
sub
call
mov
or
mov
jno
rclb
je
ret
cmp
rcrb
fdivrs
inc
inc
sub
xchg
test
test
sbb
inc
leave
xchg
mov
dec
mov
mov
in
add
stos
gs
xchg
sbb
test
outsb
xchg
test
lret
mov
jle
or
cwtl
in
and
xor
aaa
mov
arpl
mov
mov
sub
vmovdqa
cmp
js
leave
shll
mov
jne
mov
pusha
popa
int3
push
popa
lods
inc
fwait
out
clc
test
push
jg
clc
ficoml
cmp
dec
scas
push
mov
xchg
mov
inc
cmpsl
and
fstps
push
mov
pop
stc
cltd
pop
arpl
dec
or
lds
movsb
push
test
insb
mov
in
push
cmpsl
mov
cmp
ret
test
sbb
decl
xchg
xor
mov
xchg
arpl
push
test
mov
inc
mul
imul
shr
sub
insl
dec
pusha
mov
dec
mul
or
and
mov
pop
ror
and
or
addr16
dec
dec
xor
sub
andb
push
js
xor
push
outsb
xchg
shll
addr16
pusha
int3
jne
push
mov
ret
jo
sub
cmpsl
fcoms
lret
or
mov
sub
addr16
movsb
out
cwtl
push
les
push
lea
jne
mov
lret
ljmp
fnstcw
outsb
inc
jmp
and
imul
jo
loopne
pusha
test
mov
xchg
push
or
cs
pop
test
loope
and
jo
test
stos
ret
add
push
cltd
cmp
lds
sbb
mov
cmpsb
cmp
sbb
dec
dec
subb
mov
xchg
sti
pop
neg
xchg
xor
push
stos
sub
xor
sub
push
dec
cmp
sub
sarb
in
hlt
mov
inc
int
adc
out
icebp
out
shll
push
mov
xchg
sbb
movsl
push
out
int
cmp
fisubrs
cs
mov
test
mov
jmp
cltd
nop
imul
cmpsl
shlb
xchg
dec
sub
jmp
test
je
hlt
fsubs
or
stc
testl
jmp
cld
sbb
push
mov
test
cld
mov
mov
popa
xor
test
nop
pop
add
jo
jns
jle
mov
add
mov
inc
mov
arpl
insb
sbb
mov
bnd
fstpl
jg
cli
popa
out
mov
in
add
nop
cltd
push
pusha
js
rclb
mov
xor
xor
pusha
fsts
test
xchg
push
aad
add
mov
leave
es
sbb
addr16
cli
in
into
and
adc
mov
idivb
data16
sbb
rcr
push
cmp
mov
push
sub
imul
or
fadd
jmp
mov
lahf
lods
les
out
jle
shl
pusha
gs
xlat
test
xchg
test
shll
cmc
in
or
or
cli
movsb
and
imul
test
fsubs
jns
xchg
dec
push
rclb
and
mov
movsl
enter
mov
push
xor
jg
loopne
testb
lds
adc
shrb
pop
jo
lods
cmpsb
push
mov
jge
and
imul
adc
jo
iret
cmp
inc
testl
adc
sbb
add
push
and
mov
jnp
ss
insl
cmpsb
push
add
fldl
gs
mov
rcrl
adcl
dec
push
adc
icebp
ret
mov
in
push
inc
das
xchg
loopne
and
arpl
mov
test
test
xor
aaa
push
jno
jne
mov
xchg
loopne
adc
jmp
sbbb
or
clc
in
in
enter
rol
cmp
mov
mov
add
mov
pop
sbb
repz
ret
sub
repnz
mov
pushl
loopne
fdecstp
jecxz
ficoml
cltd
mov
popa
sub
aam
adc
dec
jmp
test
and
sub
add
jo
out
jp
push
sub
push
adc
pusha
jne
add
fcomps
mov
outsl
add
addb
mov
and
cli
and
dec
dec
adc
data16
pop
and
mov
or
pop
mov
test
insb
pop
testl
aas
shrb
enter
movsb
adc
mov
push
push
sbb
cmp
test
cmp
idivl
sub
xchg
cmp
fisubs
sub
test
adc
test
jbe
mov
ss
cmc
xchg
iret
or
dec
xor
ret
sub
fadds
leave
fdivs
mov
xor
mov
mov
std
jmp
sbb
jl
gs
fld
sub
xchg
setl
add
fmulp
repnz
and
lea
pop
daa
test
gs
xchg
mov
bound
push
cmp
cmpsl
pextrw
movsb
out
xchg
pusha
and
cwtl
cli
mov
cld
roll
jmp
loope
adcb
jne
fldl2t
rorl
test
and
adc
leave
ss
rorl
sbb
sub
or
repnz
stc
fnstcw
sub
cmp
cld
mov
push
aad
stc
fsts
jnp
shll
int
lahf
loope
mov
xchg
adc
xor
jns
adc
xchg
jo
jb
xchg
mov
clc
loope
adc
mov
xor
fiaddl
rolb
in
add
rorb
adc
add
mov
imul
jmp
cs
xor
mov
gs
mov
negl
add
vpcmpgtw
inc
out
rorb
enter
add
push
jg
mov
ror
jp
cmc
test
aas
mov
xchg
es
mov
aaa
and
stos
sub
or
lods
or
mov
and
xchg
hlt
fadd
pop
and
mov
push
and
cmp
jae
pop
sub
sub
mov
jbe
cmp
sar
clc
rorb
out
and
xchg
mov
insl
and
mov
jge
xchg
cmp
pop
fcoms
stc
neg
sbb
jns
inc
dec
dec
addr16
push
mov
pop
sbb
dec
test
dec
mov
lock
cmp
test
in
shl
loope
push
mov
cmp
push
pop
push
mov
pop
aaa
adc
dec
dec
and
inc
push
push
movb
inc
les
dec
leave
mov
push
push
addr16
das
fldln2
andl
scas
or
mov
push
ds
aaa
cmp
sub
and
inc
mov
test
add
daa
sarl
das
in
add
into
test
xchg
addr16
jecxz
lret
add
jo
pop
sbb
addr16
jmp
sub
sahf
enter
out
movsb
fmuls
or
mov
mov
cmp
add
pop
pop
shll
cli
pop
mov
cmpsb
sub
lcall
aam
jge
jo
lock
pusha
sub
divl
mov
inc
dec
push
mov
mov
jge
pop
ret
daa
in
adc
ret
mov
jmp
ds
enter
pop
xchg
add
mov
outsb
movsb
mov
fcomps
mov
imul
add
xchg
pop
or
or
inc
and
mov
pop
pop
inc
outsb
addr16
js
imul
cmc
dec
rol
arpl
push
pop
leave
lea
xor
je
sub
sub
inc
flds
sub
cld
dec
sub
push
jle,pn
rorb
mov
out
add
sbb
xor
mov
mov
and
int3
and
xchg
cmp
or
dec
xchg
xor
pop
leave
push
ljmp
aad
aas
cmp
and
testb
cmp
dec
jle
pop
inc
mov
jle
cmpsb
push
mov
jmp
mov
adc
leave
idivl
loope
imul
rolb
add
mov
fxch
data16
repnz
mov
or
dec
test
rolb
xchg
jge
dec
jmp
fld
mov
test
mov
sub
arpl
addr16
jb
scas
ds
ret
sbb
outsl
inc
mov
sahf
clc
mov
fsubrl
sahf
mov
push
dec
xor
fsubrs
pop
cmpsb
cmpsl
jmp
into
mov
inc
lock
pop
adc
addb
in
in
in
fnstenv
ret
movl
aas
in
push
dec
mov
out
arpl
jmp
andb
adc
xor
mov
inc
imul
mov
pop
hlt
inc
imul
loopne
pop
imul
loopne
gs
movsb
push
mov
cmpsl
aam
and
cltd
movsl
inc
ss
loopne
gs
xor
and
movsl
and
push
cwtl
loopne
gs
iret
cmp
xor
mov
sub
inc
imul
scas
loopne
pop
lahf
mov
faddl
ja
and
iret
outsl
loopne
pop
adcl
test
cs
out
mull
leave
push
aas
mov
ds
mov
jo
ret
lods
rorb
rorl
adc
cld
movsl
je
aaa
fidivrl
mov
cwtl
xor
call
xor
adc
roll
vmovaps
jae
or
push
mov
lods
test
fmuls
gs
cltd
push
mov
iret
mov
push
cmpsl
adc
mov
jo
stos
les
ret
lock
sbb
sahf
sub
inc
xchg
sub
loopne
pop
iret
rcrb
mov
fnstcw
jge
cltd
in
loopne
pop
add
xor
std
cmpsb
xchg
mov
xchg
adc
mov
mov
test
lds
mull
push
sbb
mov
les
addb
flds
add
movb
adc
pop
fmuls
popf
cld
jbe
adc
mov
push
cmp
mov
addr16
inc
push
dec
mov
testl
xchg
lahf
jmp
ret
mov
fnstcw
repz
mov
dec
leave
test
stc
jecxz
mov
jne
mov
inc
inc
or
pusha
or
imul
movsl
data16
xchg
loope
add
out
or
iret
cmpsb
nop
call
jge
inc
pusha
fstps
sbb
ja
push
mov
mov
cli
mov
shl
loopne
mov
cmpsb
repz
mov
int
pop
push
and
push
adc
mov
daa
jns
movsl
fld
flds
mov
outsl
sub
mov
ret
cmpsb
mov
push
or
inc
les
mov
xor
push
ljmp
adcb
cli
jo
imul
in
pop
or
ss
fiadds
or
js
clc
loope
push
scas
lds
add
xlat
sub
fldcw
inc
or
insl
data16
pop
xchg
push
xchg
ss
mov
adc
lret
les
cwtl
inc
mov
and
sbbl
cmc
cmc
jmp
dec
in
dec
pop
pop
ret
fsubl
std
dec
inc
dec
call
sbb
inc
aam
mov
imul
push
push
adc
movntq
es
inc
out
inc
out
xchg
ret
cmp
lcall
and
inc
es
adc
pop
push
ret
add
jge
mov
rorb
fmuls
xchg
sahf
pop
jp
inc
loope
mov
inc
into
aam
add
inc
mov
inc
inc
cwtl
movsb
sbb
scas
nop
mulb
stc
and
pop
je,pt
xlat
mov
jns
push
mov
mov
sarl
add
lret
loope
and
or
xlat
dec
loopne
rolb
mov
push
shlb
sbb
test
cmp
or
xor
sbb
cmp
aad
addr16
fistps
xchg
sub
add
sti
sbb
test
cmpl
aam
xchg
fcomps
adc
sub
mov
inc
mov
cltd
adc
loopne
enter
repnz
sub
test
or
adc
adc
sbb
jo
dec
push
jns
sub
mov
add
add
imul
test
rcrb
test
sub
mov
test
jnp
or
mov
push
test
shr
mov
mov
fs
cmpsl
pushl
js
cmp
test
inc
and
and
dec
mov
inc
sarb
pop
xchg
into
push
sub
lds
das
inc
test
leave
sbb
enter
das
imul
cltd
fstps
sahf
cltd
divb
fcompl
je
inc
or
in
push
xlat
js
add
call
daa
cltd
jo
leave
sbb
xchg
sub
pop
xlat
loopne
jb
imul
leave
xchg
je
xchg
ror
dec
and
orb
decl
jb
sti
nop
mov
pop
xchg
cmpsl
or
sub
mov
imul
pop
iret
jo
stos
dec
jp
cwtl
shlb
lcall
lds
cbtw
outsl
subl
js
push
mov
andb
add
mov
cmpsb
sbb
stc
dec
jno
subb
xor
jl
ja
mov
aaa
add
sbb
inc
or
dec
mov
movb
sub
xor
lds
push
out
imul
xchg
hlt
stc
dec
push
insb
lods
stos
jo
fstpt
popa
test
icebp
call
lods
shl
mov
les
dec
and
je
test
andb
rorb
clc
enter
xor
test
cmp
icebp
dec
outsb
aas
pushf
push
xchg
pop
cmpsl
xchg
sub
aad
xor
sbb
negl
lods
pop
das
and
or
xor
repnz
mov
ja
sbb
jg
cmpsl
ss
sahf
sub
test
out
or
repnz
sbb
dec
sbb
and
arpl
pop
mov
fisubl
push
call
mov
cmpsb
sub
stos
mov
psubsw
test
and
dec
bnd
inc
inc
pop
xor
jo
cmp
ds
xor
or
in
jbe
adc
out
dec
and
dec
xorl
gs
sbb
ss
je
loopne
sub
push
jns
xchg
js
shll
dec
cmp
sahf
xchg
inc
loope
imul
jb
xor
cwtl
pop
jecxz
or
mov
mov
xchg
jno
leave
push
rcrl
add
push
jbe
repz
outsb
jg
xor
cli
jmp
out
movsl
shrl
mov
lret
flds
imul
inc
cltd
or
add
pop
ja
mov
sbb
fmuls
mov
add
cltd
mov
sub
push
mov
push
ja
out
test
mov
mov
test
test
test
dec
out
sarl
rolb
aam
leave
inc
ljmp
cmpsl
shl
xlat
imul
mov
pop
inc
sub
repz
xchg
idivl
leave
sub
mov
push
mul
test
movsb
lods
test
arpl
mov
ffree
mov
pop
cs
stos
jmp
pop
out
sub
enter
inc
iret
repnz
mov
das
dec
adc
lock
ret
inc
pop
ret
jge
mov
pop
mov
inc
and
mov
pop
dec
icebp
lds
out
jle
xchg
mov
out
or
sbb
fdivl
pop
notl
ret
cwtl
mov
out
lcall
mov
fld
stos
iret
push
inc
adc
andb
push
mov
loop
in
imul
stos
fwait
sub
sbb
gs
jl
test
mov
inc
out
xchg
call
stos
aaa
lea
sbb
xchg
sub
roll
mov
mov
mov
data16
pop
fs
addr16
dec
mov
addl
test
jo
cmpsb
or
adc
pushf
cmpsb
sbb
and
repnz
sub
insl
ret
push
sbb
shrb
adc
sub
xchg
out
mov
test
jp
pop
lock
jno
test
imul
push
pop
mov
je
jno
je
les
test
pop
sub
mov
xor
enter
lock
dec
sbb
or
sbb
loope
dec
pop
cltd
mov
fimull
test
mov
lock
imul
pop
jb
mov
repnz
or
mov
cmp
bound
js
fsubl
test
adc
dec
insb
cmp
aas
xchg
mov
dec
rclb
leave
js
mov
cltd
xchg
call
mov
aaa
or
lock
mov
dec
add
test
mov
lret
jge
mov
cmp
push
mov
repnz
mov
mov
stos
mov
sub
idivb
pushw
or
ja
sub
enter
mov
jo
add
jae
inc
pop
and
scas
aam
fcmove
icebp
leave
cmpsl
cmpsl
xchg
aas
or
jb
movb
sub
movb
push
test
neg
xlat
pop
dec
repz
mov
lcall
ret
adcb
addr16
ds
leave
pop
repnz
cmpb
push
dec
cmpsl
xchg
or
jo
or
idivl
dec
sbb
xchg
xchg
jmp
ret
cmp
mov
dec
arpl
cmc
lds
dec
js
test
cmpsl
lea
imul
cltd
lret
xchg
xchg
jb
xchg
aad
addr16
jp
and
pop
ret
je
xchg
push
and
jmp
mov
stos
cmp
test
jmp
movsl
fcoml
out
push
pop
aad
movb
daa
and
shrb
test
adc
enter
xchg
jmp
fwait
stos
out
pop
lds
or
jecxz
out
imul
ja
pop
outsb
push
in
int3
loop
sub
data16
dec
sub
int
push
test
sub
xchg
xor
gs
pop
pusha
pushf
sub
je
lret
pop
add
imul
xchg
sub
out
out
test
insl
ror
test
adc
or
pusha
mov
cwtl
xchg
xor
adc
sub
push
dec
pushf
pop
mov
cmpsb
pop
into
jne
add
lods
adc
sub
mov
cs
pusha
push
cmp
loope
inc
mov
or
mov
loope
cmp
jle
std
fnsave
mov
pusha
sub
popl
loopne
shll
dec
cmpsl
std
lds
andb
cmpsb
loopne
mov
push
pop
pop
mov
adc
iret
sahf
iret
repz
adc
inc
imul
mov
cmpsl
add
and
gs
mov
ja
int3
sub
scas
outsb
mov
push
daa
and
xchg
lods
push
mov
call
dec
sahf
dec
or
jno
aas
pop
sub
jbe
out
mov
cli
movsl
mov
cmp
mov
pop
cmp
push
dec
sub
push
inc
nop
or
out
stc
add
dec
in
std
bswap
pop
or
mull
push
inc
ljmp
mov
repz
add
pop
mov
popa
mov
xchg
divl
jo
repnz
and
sbb
popf
pop
call
out
mov
lcall
push
mov
fcoms
xor
mov
out
in
inc
mov
sbb
lods
imul
and
inc
mov
test
lods
sahf
push
fucomp
gs
andl
jge
and
rcrl
jle
jns
add
test
cli
outsb
movsl
test
arpl
xchg
push
pop
push
sti
pop
out
pop
dec
sbb
pop
hlt
jmp
jmp
inc
jbe
pop
sbb
pop
pop
clc
xlat
cli
fdivr
addl
pop
xchg
and
mov
cltd
popa
dec
adc
jo
or
mov
jae
popf
push
mov
popa
or
inc
jl
ret
daa
jle
push
mov
mov
popf
sub
cmc
sub
es
pop
lcall
fwait
push
cmpsb
and
sarl
sub
push
cmpsl
push
dec
shlb
dec
es
sti
not
dec
pushf
fiaddl
xlat
pop
fnstcw
and
dec
cld
adc
mov
jns
and
stos
stos
sub
dec
inc
push
mov
xchg
out
negl
movsl
or
sahf
test
mov
in
pop
imul
cmpb
paddsb
cld
mov
aaa
xor
lea
pminsw
shll
mov
push
xlat
mov
push
dec
gs
imul
in
add
divl
jo
inc
andb
lods
es
out
sbb
les
shr
jmp
leave
enter
shl
vunpckhps
je
pop
loopne
imul
add
insl
add
jp
sbb
or
out
sub
shll
xchg
mov
or
mov
shrl
lock
xor
xchg
cmpsl
aad
clc
push
lds
rcr
das
cmp
idivl
inc
hlt
popa
inc
sbb
cli
cli
enter
and
idivb
mov
pop
xorb
pop
mov
js
arpl
xor
ja
sub
xchg
jg
aaa
xchg
sub
xchg
pop
leave
test
icebp
xor
loope
in
dec
vmovaps
lock
adc
xor
mov
imul
xchg
dec
or
out
fld
call
inc
adc
cltd
and
mov
out
xlat
pusha
roll
sbb
pusha
add
dec
sub
shlb
ss
rcrl
inc
sahf
cmc
aaa
xchg
out
mov
lea
add
cmpsl
or
cmp
xchg
and
insl
jl
pop
fldenvs
cmp
lcall
pop
fisubrl
stc
add
lcall
lahf
cmpsl
negl
loopne
xchg
roll
cmp
jno
push
stos
inc
mov
cltd
xchg
dec
push
jbe
js
rolb
sbb
xor
mov
jl
aas
gs
loope
loopne
ss
xorb
jl
mov
out
mov
lods
imul
inc
notl
mov
aaa
add
lahf
test
add
xor
fsin
pop
ret
cmp
cmpsb
stc
push
iret
loope
ret
xchg
fpatan
push
loopne
pop
fcomps
mov
fs
xchg
fsqrt
stos
xchg
call
jmp
inc
fildll
sti
ret
js
outsl
inc
cltd
lock
rcll
test
cltd
rclb
jo
push
and
jmp
inc
enter
stos
out
add
fwait
ret
sar
std
and
mov
push
or
mov
lahf
outsb
pop
or
repnz
std
aad
leave
out
ss
lcall
iret
movsb
sbb
inc
cmp
sub
mov
lods
fisubrl
push
dec
sub
or
rclb
data16
outsb
pusha
or
fnop
aaa
loope
jno
sti
out
cltd
jmp
mov
cmp
or
push
rcr
add
lahf
vpunpckhwd
mov
or
mov
sti
xchg
movsb
rolb
hlt
jmp
scas
mov
hlt
jmp
push
and
or
jp
setns
dec
fsub
in
jmp
sub
enter
imul
pop
daa
dec
aam
fldl
loop
cmpsb
ljmp
aas
stos
daa
mov
push
cmpb
fdivs
imul
push
push
adc
push
shrl
mov
mov
fnstcw
popa
stos
enter
mov
or
data16
push
xor
fucomip
xor
pop
jecxz
xor
sub
addr16
sbb
sub
inc
fldenv
leave
and
mov
lock
mov
inc
rcrb
jp
push
ja
add
repnz
enter
seta
repnz
jae
add
lea
jae
mov
ljmp
mov
jae
sahf
stc
das
xchg
jg
mov
jo
pop
ret
and
inc
xor
push
aas
pop
cmp
jnp
mov
jnp
inc
sti
cmpsl
in
xchg
xchg
rolb
dec
jmp
jecxz
push
lret
jo
and
scas
jl
stc
xchg
sbb
push
pop
rol
fptan
test
leave
fstps
enter
pop
into
je
sbb
lret
inc
pop
loopne
inc
fcomps
movsb
lods
clc
pop
mov
cmovg
cmpb
jmp
fldl
rcll
sub
inc
test
xor
push
push
iret
mov
test
pop
addr16
rcr
aaa
cmp
sub
mov
xchg
rcrb
clc
loope
jnp
lea
inc
aas
outsb
lret
shll
xchg
add
ret
in
xchg
pusha
push
ja
cmpsl
xlat
mov
xchg
adc
and
aam
out
jb
xlat
pop
jmp
cmpsb
ffree
mov
ret
cltd
cwtl
mov
addr16
add
push
adc
inc
imul
xor
test
jge
and
cmp
and
sbb
cmp
addb
das
cwtl
gs
adc
jecxz
enter
lahf
fisttpll
mov
push
int
repz
ss
nop
or
call
gs
nop
xchg
insl
jge
dec
cmp
gs
mov
mov
xchg
jo
fwait
scas
sbb
or
dec
in
je
loope
in
fldenv
addr16
xchg
out
mov
mov
cltd
fnstenv
xor
arpl
or
out
pop
mov
mull
sbbb
xlat
fcos
aam
inc
cmpsb
pop
sbb
sub
test
sbb
push
aaa
xor
fwait
adcl
clc
sbb
mov
and
in
sbb
test
stos
jmp
scas
mov
jl
div
hlt
xor
ror
rep
fwait
das
sbb
or
mov
xchg
push
mov
jae
rol
xor
push
and
movsl
add
aas
in
cmp
dec
mov
fdivl
push
je
repz
mov
xor
adc
inc
clc
rcrl
push
cli
or
pusha
nop
jns
daa
imul
lret
adc
sbb
cwtl
jb
aad
dec
adc
js
loopne
inc
xor
loopne
neg
sbb
divb
cs
and
fildl
mov
test
pop
out
addb
push
inc
xor
inc
cmp
jo
push
pop
xchg
add
addl
push
shlb
sub
shl
out
mov
mov
xchg
ds
insl
ret
xchg
test
movsb
js
dec
xorb
jl
imul
pop
cli
lods
inc
mov
test
mov
push
pushf
nop
cmpb
and
repnz
push
dec
mov
stos
ja
scas
movsl
mov
fcomps
xchg
or
out
inc
sbb
mov
add
std
ret
and
ja
push
push
jmp
lock
ret
cs
add
shlb
or
mov
cmp
or
and
pop
mov
add
xor
adc
fstl
fadds
test
xchg
clc
les
insb
es
int3
push
std
leave
lds
shl
cmpsl
pusha
jae
cmp
in
inc
gs
push
ss
out
add
fwait
aad
or
mov
xchg
adc
std
out
and
sub
xchg
lcall
sti
jmp
xchg
jb
out
sbb
sar
or
dec
and
imul
shrl
pop
test
xlat
aad
test
inc
data16
test
jmp
or
mov
mov
dec
sahf
int
cmp
jmp
leave
test
out
movsb
cltd
xchg
push
cwtl
jns
mov
and
in
popf
and
inc
enter
pop
movsb
fadd
in
sub
mov
cwtd
xchg
sti
sbb
sub
loope
cmp
bswap
xchg
adc
push
xchg
cmp
ficomps
out
xor
jp
test
adc
imul
jne
pop
add
add
mov
repnz
or
cli
push
jae
leave
cltd
test
std
repz
js
shl
cmpsb
cmp
sbb
les
inc
cmpsl
jmp
mov
ds
push
stc
in
ds
aad
cmpsb
pop
push
divl
ds
clc
int3
mov
mov
sub
xchg
xchg
mov
call
enter
add
lahf
sub
jns
push
daa
pushf
fnstenv
jns
or
push
in
xchg
pop
icebp
cli
cltd
push
xchg
enter
pop
cmpsl
cltd
dec
or
mov
rcrl
push
rorb
inc
lret
cltd
mov
adc
or
mov
cltd
push
ja
ss
add
ret
or
pop
shll
sub
inc
stos
cmp
mov
mov
mov
dec
add
xchg
cmc
and
les
rcrl
push
cmp
add
out
sbb
ds
data16
pop
xchg
insb
sub
lea
cmp
outsl
sub
clc
xchg
insb
mov
and
lds
rcr
cmp
in
push
adc
cmp
add
sbb
fsubrs
test
mov
cli
aaa
xor
dec
lods
cwtl
leave
inc
nop
cmpsw
fdivrl
fcomp
dec
lea
ljmp
bound
push
loope
add
push
loope
enter
enter
shrb
loope
mov
xchg
loope
in
jnp
imul
dec
out
or
rcll
pop
sbb
jns
notb
xor
imul
sub
in
imul
ret
mov
adc
aaa
rcll
pushf
out
push
mov
sbb
jbe
xchg
cltd
test
pop
in
orb
fldcw
arpl
mov
jmp
dec
rcr
push
aaa
pop
call
xor
and
movb
push
cmpl
lock
leave
notl
sbb
push
in
sahf
inc
shll
pusha
jns
orl
inc
or
test
jne
jno
pop
jmp
lcall
push
jmp
fldenv
fidivrl
mov
pop
sub
or
insb
jo
cs
in
or
xor
ja
nop
jecxz
jne
pop
xor
enter
jge
inc
imul
pop
and
inc
icebp
pop
aad
test
test
sub
repnz
cwtl
xchg
and
jo
push
adc
xor
arpl
mov
stos
push
outsb
mov
xchg
ljmp
pop
fwait
cmp
daa
sbb
lds
cltd
xchg
mov
mov
into
inc
mov
fldl
pop
leave
sahf
fadds
ret
cmpsl
lds
movsl
inc
push
jmp
add
mov
pop
jo
dec
or
cmpsb
not
lods
dec
xlat
fadd
shl
mov
push
add
mov
add
lds
mov
inc
mov
xorb
adcb
arpl
xorl
mov
outsb
icebp
loopne
dec
fcoml
push
or
mov
mov
pop
loope
mov
aad
pop
sti
xlat
sti
pop
out
sti
mov
pop
xor
xchg
ss
jo
push
push
inc
test
jb
fsts
insl
push
cmpsb
or
add
mov
or
popa
dec
mov
in
xchg
je
repz
push
sub
xchg
mov
sahf
jecxz
aas
sbb
out
mov
shrl
jl
adc
add
cmp
test
adc
cmpsl
jg
insl
or
addr16
mov
push
push
inc
jge
jno
fildll
adc
fnstenv
cmp
out
rcrl
inc
into
es
jnp
fnstsw
in
es
cmpsl
mov
loopew
rorl
lcall
xor
push
pop
adc
repnz
enter
inc
mov
mov
nop
and
mov
addl
je
inc
or
mov
decb
inc
enter
xchg
mov
sub
cwtl
pusha
movsb
lret
cmpsl
mov
aam
inc
and
add
cwtl
cmpsl
jne
pop
mov
jbe
dec
push
mov
sbb
mov
jmp
xor
and
dec
mov
mov
test
shlb
adc
push
jmp
sar
push
sub
ret
mov
cmc
call
or
xchg
outsb
sti
sub
push
jo
insb
stos
mov
pop
xchg
cmp
dec
fcoms
jns
lcall
cld
ss
cmp
cmp
cmpsb
xchg
gs
inc
dec
les
stc
dec
add
jno
push
dec
xchg
mov
pop
dec
jmp
mulb
lds
movsl
jo
imul
icebp
push
loopne
xor
jne
sbb
faddl
xor
fsubl
scas
mov
or
es
out
pop
nop
fbld
ja
cmp
adcl
sub
or
sbbl
mov
xchg
fists
or
dec
pop
cltd
mov
fmuls
mov
xchg
pop
sub
mov
jno
gs
int3
xchg
mov
pop
cwtl
push
push
loope
dec
or
dec
ret
sub
fisubrl
fdivr
mov
and
subl
sbb
or
xchg
cmc
pusha
mov
jmp
je
pop
or
mov
sbb
fsubl
fdivs
loope
rorl
imul
cmp
mov
cltd
push
and
sub
sub
xchg
pop
jno
cmp
aaa
ret
jns
add
insb
lods
and
lds
rorl
or
pop
dec
stos
mov
inc
loope
cmc
loope
testb
adc
je
cs
ret
dec
js
out
mov
repz
mov
dec
data16
clc
or
jb
mov
es
out
fbld
lods
mov
stos
push
xchg
xchg
test
or
xchg
push
roll
mov
pop
or
cmp
cmp
incb
ds
inc
pop
xchg
inc
mul
pop
call
je
mov
test
adc
jbe
fs
negl
loopne
stc
adc
test
fnstcw
loope
xchg
adc
pop
or
test
xchg
lds
sarb
rcrl
push
pop
popa
add
jl
loopne
or
cmp
ret
test
mov
popa
xor
mov
mov
loopne
cmp
fisubrs
shlb
imul
fwait
push
into
popa
jbe
xchg
and
test
mov
push
mov
and
adc
mov
mov
push
scas
popa
mov
jno
ret
adc
inc
fnop
cmp
movsl
adc
fcomp
fisttpl
or
call
dec
xlat
mov
imull
lods
cmpsl
movl
push
dec
xlat
jle
adc
leave
lods
stc
imul
jno
outsb
test
and
jmp
push
outsb
fstpl
cmp
movsl
push
ja
or
popa
lods
es
test
pop
jne
pop
mov
push
cmp
popa
xchg
pop
or
push
xor
fldl
sahf
jge
movsl
mov
cmpsl
ret
test
vcmpps
push
scas
fsts
and
adc
push
imul
push
push
push
add
adc
icebp
ja
mov
dec
push
ret
jb
andl
test
mov
jae
add
push
mov
mov
mov
cmp
dec
xchg
test
flds
mov
xchg
dec
sbbb
shrb
repnz
cmp
call
push
dec
sbb
lock
loop
dec
add
pushl
cwtl
cltd
xor
andl
mov
stos
or
push
addl
insl
rorb
lahf
dec
xchg
or
imul
lret
cld
pop
push
pop
mov
loopw
movsl
cmp
adc
test
mov
mov
cwtl
test
lds
mov
shrl
ds
pop
cmp
lahf
push
dec
sub
into
jmp
jp
jl
push
mov
js
test
or
mov
pop
imul
jg
xor
cmp
mov
hlt
and
xchg
xchg
cmp
inc
fldenv
xchg
xor
sbb
ljmp
jg
xlat
ja
insb
jge
sarb
mov
ljmp
pop
or
out
inc
in
inc
arpl
lods
int
sahf
enter
dec
sub
pop
inc
popa
or
or
pop
clc
imul
mov
xchg
out
fwait
ss
or
cmc
inc
pop
je
imul
mov
push
je
filds
cmp
hlt
inc
psraw
pop
pop
int3
cmc
mov
shll
int3
stc
pushf
cmp
fcompl
mov
xchg
je
sahf
imul
jecxz
sub
sub
ss
cmp
dec
rclb
rol
sub
xchg
mov
insl
inc
lahf
xchg
out
dec
lds
adc
out
and
xchg
gs
xchg
rcl
xchg
lret
std
data16
push
fsts
sahf
in
out
loopne
push
sarl
call
in
and
xchg
sub
jbe
push
test
xchg
pop
mov
mov
adcl
cwtl
fsubr
std
mov
mov
push
jne
loope
jge
fdivl
popf
push
xchg
sahf
test
sbb
movsb
mov
aaa
and
shl
imul
xchg
test
or
add
xor
jo
fdivrs
pop
mov
push
jl
add
mov
xlat
mov
testl
sbb
cli
cltd
movsl
push
subb
or
mov
pop
sahf
sarl
testb
stos
imul
mov
out
dec
push
push
imull
sbb
xacquire
test
shll
sub
dec
xor
push
sbb
gs
jmp
lods
pop
cmp
or
mov
pop
out
inc
inc
shll
mov
in
fadds
fnstenv
aad
cs
inc
pop
xchg
ret
aam
aam
test
sub
mov
arpl
js
in
dec
test
add
ret
lcall
sti
xchg
inc
js
push
ja
mov
mov
adc
fcoms
aas
sahf
or
out
clc
pushw
gs
popw
fcoml
test
loopne
add
ffreep
gs
push
ss
call
lds
cmp
mov
call
shld
mov
cltd
add
stos
nop
pop
adc
jge
cmp
dec
mov
mov
dec
xchg
xchg
and
push
add
mov
test
loopne
imul
leave
in
jae
add
inc
pop
je
pushf
jbe
out
or
rorb
cmp
xchg
sub
mov
icebp
fnstcw
and
xchg
loopne
ret
pushf
mov
lods
imul
addb
imul
cld
pop
daa
jns
mov
sarl
adc
dec
daa
xchg
pop
test
or
call
outsb
movsl
sub
pop
test
loopne
add
pop
scas
loopne
movsl
test
add
mov
rcrb
xchg
cmp
mov
mov
iret
mov
into
mov
loopne
sar
test
add
xchg
cs
xor
pop
es
jmp
fisubrs
mov
icebp
pop
push
test
jmp
movsl
test
xchg
jecxz
test
rorl
test
int
mov
mov
out
dec
leave
test
ffree
ret
cmp
insl
xchg
loopne
hlt
inc
cmpsl
int
test
xlat
push
sbb
fisttpll
lds
loopne
ret
and
cld
jne
dec
insb
aam
jmp
cwtl
les
addr16
ljmp
xor
and
mov
testl
xchg
and
pop
or
push
push
add
insb
lret
cmp
mov
mov
mov
push
ljmp
jbe
repnz
movsb
add
repnz
ss
in
jb
fcmovbe
arpl
inc
aam
jno
and
pusha
stos
sarl
push
cmp
or
mov
test
push
mov
xchg
ret
loope
pop
mov
jno
inc
bnd
bound
sbb
testl
push
adc
pop
idivl
ja
lahf
jl
lret
mov
jmp
push
cmp
and
lods
sub
and
jmp
pop
push
adc
out
pcmpgtb
push
mov
loope
add
sarb
xchg
mov
ljmp
test
mov
shrb
mov
adc
mov
add
bound
mov
jg
xor
inc
daa
mov
ljmp
daa
stc
ficompl
push
mov
ss
jmp
sahf
pusha
mov
jmp
rcl
loopne
sarb
inc
adc
mov
inc
aam
imul
jno
and
sar
add
push
jp
mov
loopne
test
sub
cltd
leave
movb
arpl
lret
jge
clc
clc
and
sbb
and
sbb
jg
xor
xchg
cmpsl
or
jl
daa
pextrw
cmpsl
rorb
mov
pop
leave
pushf
pop
dec
in
rorb
sahf
jmp
and
cli
sub
xor
or
lahf
nop
mov
fists
das
add
mov
push
hlt
popa
push
jg
test
faddp
leave
jo
push
leave
xchg
mov
cmp
popf
xchg
mov
out
mov
bound
add
adc
mov
jecxz
add
fadds
sbb
lock
sub
dec
ljmp
push
icebp
imul
loopne,pt
inc
stos
xchg
fsubrs
orl
dec
mov
icebp
xor
stc
mov
mov
ljmp
aas
movsl
rcr
push
gs
popa
cmp
or
loope
add
sarb
int3
out
pop
push
stos
orl
loope
test
out
mov
arpl
mov
jns
xchg
sbbl
push
add
decb
lea
sub
ret
jnp
inc
cmp
cmp
push
mov
inc
xchg
nop
mov
rcrb
or
inc
mov
dec
jnp
movsl
pop
lock
jle
adc
leave
dec
sbb
mov
inc
lret
outsb
clc
test
mov
gs
inc
lds
aas
lahf
stos
dec
sbb
pop
es
imul
fldt
or
mov
mov
aaa
jb
push
mov
mov
or
cmpsb
testl
xlat
adcb
push
ja
xorb
stos
aaa
icebp
andb
mov
adc
and
or
jmp
pusha
inc
icebp
fs
lret
pop
or
add
mov
imul
mov
sub
data16
adc
leave
out
mov
fistpl
out
mov
add
loopne
push
scas
add
rol
cmp
insb
push
sbbb
and
fwait
xor
pop
pop
mov
out
cmp
lds
push
pop
push
pusha
shll
adc
lds
std
jmp
or
popf
stc
sub
push
fwait
sti
lods
cli
push
leave
test
insb
and
sub
pop
jno
dec
pop
test
imul
sahf
cmp
sbb
jne
leave
cmp
xlat
pop
or
das
neg
cmc
mov
mov
outsl
adc
sub
mov
and
add
lret
adc
call
or
and
pop
inc
lock
pop
cwtl
xchg
stc
adc
les
dec
test
mov
cmp
popf
inc
cmp
cltd
xor
sub
or
xchg
lahf
data16
enter
and
mov
mov
mov
mov
imul
pop
mov
filds
fnstenv
scas
xor
iret
or
dec
scas
cmpsl
cltd
mov
mov
sarl
std
push
lods
enter
jae
cmpsl
cmpl
or
aas
and
in
mov
repnz
repnz
cmpsl
fnstcw
add
cmpsl
insb
mov
cltd
pop
inc
or
stc
push
cwtl
xorb
mov
pop
loop
popa
shl
xchg
cmp
adc
adc
in
repnz
pop
mov
test
xor
scas
jbe
mov
cld
adc
pop
call
lahf
shll
popa
nop
shrl
lret
lcall
xchg
aam
popa
inc
dec
dec
daa
inc
addr16
fsubr
add
sahf
pop
push
or
mov
mov
ret
es
or
mov
sbb
rclb
loope
pusha
lret
adc
lods
jg
aas
leave
mov
decl
pop
push
in
cmpsl
mov
inc
imul
mov
xchg
pop
or
jmp
and
inc
jecxz
or
dec
call
arpl
cmpsb
mov
pop
cmp
or
aam
inc
or
xchg
or
add
das
xor
dec
outsl
movsl
fs
pop
cld
mov
sub
fcoms
stc
pusha
test
fists
push
cli
lods
call
jmp
das
sub
imul
fcompl
ret
leave
push
jbe
clc
pop
mov
jmp
jae
shrl
push
pop
sub
cmc
test
xchg
insl
pop
adc
jecxz
in
fcmovbe
cmp
cmp
mov
hlt
cmc
call
pop
leave
sub
push
xchg
xchg
xchg
mov
fimull
iret
pop
inc
dec
inc
push
dec
inc
sub
cld
stc
and
mov
adc
mov
test
cmpsl
ret
pop
hlt
test
adc
es
lds
pop
inc
inc
jl
jns,pt
sti
pop
mov
stos
imul
push
inc
repnz
inc
xchg
push
imul
push
fstpt
fisttpl
push
shrb
fstps
adc
ja
dec
call
rorl
loope
ja
inc
repnz
stos
pop
mov
or
ja
push
test
xchg
push
add
out
add
das
clc
dec
flds
mov
andl
repz
roll
cmp
jo
ss
movsb
popf
lods
push
shrb
ds
pop
mov
enter
lds
cld
mov
scas
sbbb
or
pop
sbb
aad
rolb
jle
mov
fldenv
cmpsl
scas
sub
leave
cmp
xor
sbb
xchg
xor
jae
imul
fdivrs
mov
mov
push
adc
jns
pusha
and
lods
daa
stc
stos
pop
paddw
or
mov
xchg
push
outsb
mov
sub
push
mov
leave
insl
xchg
jb
iret
leave
aam
dec
movsb
mov
scas
stc
lahf
lods
mov
cmc
xchg
xor
int3
hlt
cmpsb
or
push
test
jns
mov
push
xchg
jmp
fadds
push
push
out
popf
sub
and
fwait
mov
pop
jl
jmp
ret
xchg
inc
push
or
sub
enter
push
push
cld
add
mov
arpl
push
mov
jge
cwtl
test
jno
stos
repz
daa
in
stc
push
mov
pop
adc
pusha
loope
jecxz
inc
sub
loopne
mov
bound
mov
cmp
mov
cmpsl
fcmove
xor
inc
jo
dec
addl
adc
pushf
mov
shlb
push
jb
fimull
push
bound
repz
repnz
mov
mov
addr16
fwait
push
pop
pop
dec
or
loopne
cmp
jmp
sbb
imul
arpl
jns
in
pop
fs
icebp
in
inc
mov
sub
enter
ss
cmpsl
push
adc
pop
sub
clc
jns
mov
add
cmpsb
jb
pop
inc
xchg
adc
sbb
xchg
jns
or
inc
ficoml
lea
push
outsb
js
xchg
jns
pushf
jg
mov
xchg
flds
lcall
cs
dec
insb
lock
dec
imul
xchg
mov
sub
or
cld
or
adc
leave
test
pop
ror
push
insb
test
je
xchg
pop
fs
je
clc
sbb
loope
add
in
test
fisttpll
xchg
or
faddl
xchg
mov
jecxz
les
ret
arpl
jmp
xchg
add
repnz
sub
or
mov
jmp
mov
xchg
or
outsb
out
adc
pusha
inc
sarb
dec
out
ret
aam
jl
dec
dec
sarb
aaa
test
test
sbb
cmp
sbb
sbb
mov
scas
mov
push
repnz
fsubs
popf
push
lock
mov
xor
dec
xorb
sbb
insl
ja
cltd
pop
mov
pop
xchg
or
pop
aam
add
pop
sbbb
cmp
movsl
or
rorl
shlb
dec
push
push
and
jecxz
xchg
xlat
test
mov
or
jbe
cmp
dec
pop
aam
xor
inc
or
sahf
mov
xchg
nop
jmp
rcl
inc
rcll
and
sbb
jo
cmpl
or
stos
test
arpl
les
psubsb
adc
mov
adc
or
xchg
in
aaa
sub
xor
push
mov
data16
inc
xchg
pop
add
call
mov
add
ja
ret
sub
push
les
mov
movsb
data16
cmp
pop
stos
mov
cmp
dec
aaa
addr16
pop
loop
bnd
pop
jg
out
or
insl
push
test
push
push
sub
loopne
sub
add
inc
mov
xor
dec
mov
int3
mov
push
pop
sub
mov
pop
xor
cmpsl
mov
cli
push
popf
inc
test
fcomp
mov
daa
inc
pop
fldl
test
dec
jbe
pop
movsl
call
das
call
in
stc
jmp
es
andl
scas
jecxz
aad
mov
stc
pop
xchg
not
lahf
push
aaa
or
dec
dec
mov
pop
add
loop
sbb
jmp
cmpsl
ljmp
add
lcall
ds
mov
jecxz
fstps
dec
idivb
xchg
imul
jne
pop
xchg
add
inc
aas
repnz
add
out
sub
sahf
les
adc
pusha
test
xchg
stos
mov
repnz
inc
mov
sub
inc
sarb
nop
cmpsl
popa
xchg
repz
imul
fisttpll
cmp
ret
js
leave
mov
cltd
sbb
cli
jg
jo
loope
jbe
ret
add
push
sbb
cmp
test
idivl
pop
in
push
sub
lds
out
out
adc
add
ret
mov
lret
xchg
data16
lock
jl
sub
fdiv
add
pusha
adcb
push
and
cmpsl
mov
mov
add
lock
pop
mov
cmp
in
rcll
xorl
mov
dec
jp
xchg
repz
sub
stc
jmp
popf
in
test
pop
int
div
jno
push
mov
cmc
outsl
dec
hlt
lea
xor
and
leave
mov
sub
add
in
cmp
sub
fldl
cltd
sbb
jne
lds
repz
repnz
test
inc
je
sub
loopne
sub
ret
push
popa
enter
mov
add
cmpsb
adc
xor
sub
or
loope
pop
mov
sbb
rcrl
cmpsl
inc
lods
lret
aam
xlat
or
dec
mov
movsb
xchg
jne,pn
repz
and
iret
mov
stc
jb
stos
shlb
add
and
push
sbb
xchg
scas
and
sbb
pop
je
push
bound
and
push
mov
sbb
mov
leave
mov
test
mov
lahf
out
es
mov
test
popf
xchg
dec
sub
je
xchg
nop
jecxz
test
jo
data16
adc
mov
movl
jge
dec
mov
sbb
ret
fiadds
lret
and
mov
dec
popa
enter
mov
jns
mov
jle
aas
cltd
mov
rol
add
xchg
or
addb
xor
pop
inc
lock
cli
test
sbb
xchg
insl
enter
or
in
cmp
adc
arpl
or
or
mov
dec
xchg
sbb
mov
cmp
sub
adc
aaa
mov
push
jl
daa
inc
lds
cmp
cmp
dec
rorl
adc
cmp
sub
add
xchg
inc
mov
mov
sbb
repz
sub
xorl
test
or
xchg
je
dec
add
sti
stos
xchg
stos
inc
lods
mov
es
mov
repz
ret
cwtl
pushf
fldenv
mov
cmp
popf
jno
or
cmp
dec
test
push
faddl
daa
aam
enter
push
cmpsb
push
mov
testb
addl
push
inc
sarb
mov
dec
xor
rol
lods
iret
out
mov
push
das
ret
out
mov
cld
leave
iret
loope
inc
aad
lret
xor
repnz
dec
mov
mov
or
push
push
cmp
ror
jns
bound
pop
mov
and
dec
dec
fstps
inc
imul
insb
jp
out
sub
xchg
leave
sub
cwtl
stos
mov
xchg
push
dec
call
mov
test
or
pop
pusha
sub
mov
in
lods
shr
testb
mov
popa
xchg
push
std
pushf
orb
and
jns
pop
hlt
std
decl
inc
fmulp
loope
leave
xchg
xor
clc
xor
xchg
insb
mov
pop
fdivrs
movsl
into
inc
or
or
es
repz
add
pop
daa
pop
inc
js
mov
std
add
ret
pop
fcmovu
xchg
ret
mov
insb
pop
test
cmp
nop
fnsave
prefetcht2
daa
or
hlt
dec
je
testb
mov
xchg
or
push
ss
ret
repnz
mov
in
mov
pop
add
mov
lahf
lods
pop
pop
push
ret
mov
icebp
popl
jns
mov
pop
imul
lods
mov
jmp
stc
mov
sti
sbbl
sarl
imul
push
in
enter
into
push
enter
adc
das
sbb
sub
push
popa
push
push
sti
adc
sub
sahf
cld
lret
call
mov
pop
outsb
test
imul
dec
mov
fnstenv
or
sbb
mov
repz
cmpb
inc
iret
shll
js
jb
mov
ret
aaa
fwait
ret
mov
cli
cmp
je
vpmulhw
dec
xlat
leave
nop
shll
lods
in
in
outsl
xchg
push
jbe
data16
xchg
in
aaa
pop
insl
jecxz
jo
arpl
jns
push
push
or
jo
test
sbb
ss
or
inc
cltd
int3
sbb
jl
divl
lods
push
ficomps
int3
icebp
cli
enter
adc
push
ljmp
shll
iret
jne
aad
add
inc
jo
inc
dec
sub
out
cmp
or
out
test
push
push
inc
bound
fcoms
xchg
dec
pop
loope
add
pop
xchg
dec
icebp
cmp
in
inc
pop
mov
mov
inc
mov
mov
pushl
dec
loope
dec
stc
sbb
inc
mov
push
gs
xlat
cmc
out
sahf
cmp
gs
out
pop
inc
movsb
lods
sbb
cs
lds
pop
xchg
dec
xchg
addr16
sbb
iret
lea
cmp
jo
jns
addr16
sbb
cmp
mov
sbb
pop
cmpsb
inc
dec
add
test
xchg
fstps
push
mov
fldcw
xlat
fldlg2
rol
pop
cltd
call
stc
fsts
ret
mov
imul
outsb
rcl
shl
scas
roll
adc
xor
stc
cmpsl
shrl
xchg
dec
adc
pop
jecxz
sub
subb
in
pop
jge
xchg
stc
push
in
test
xchg
insb
mov
repnz
add
arpl
daa
xor
arpl
addr16
insb
push
mov
lret
xchg
mov
repnz
or
add
in
fiaddl
mov
lock
addr16
mov
test
sub
out
mov
mov
pushaw
jmp
movsb
mov
scas
dec
pop
movl
or
dec
or
in
mov
rol
or
outsl
xor
adc
adc
leave
sbb
ret
fisttps
sub
mov
aam
pop
ficoms
jne
adc
or
cli
test
dec
pop
outsb
dec
mov
mov
push
outsl
loopne
icebp
sbb
or
push
movsb
mov
mov
jg
test
mov
loope
js
addr16
mov
xchg
push
dec
push
fdivrp
xor
popa
xor
mov
and
mov
pop
repnz
icebp
push
push
out
jns
repnz
or
fnstenv
add
call
fisubl
sub
in
sub
test
cs
roll
pop
dec
inc
out
aam
inc
sbb
xor
popf
jg
call
in
pusha
jle
repnz
push
mov
aam
cmp
mov
cmpsl
xor
fldcw
lret
iret
dec
inc
clc
mov
cmpsb
sbb
pop
xchg
sub
push
mov
mov
xchg
repz
jae
mov
add
rcrl
les
rcrl
leave
orb
ja
jmp
push
pop
mov
and
fsubs
imul
pusha
push
fsubrs
mov
ja
xlat
adc
mov
push
clc
jnp
push
sub
xor
adc
or
sbb
adc
subl
loope
test
mov
aam
adc
outsl
xlat
in
fbld
push
cmc
in
xchg
stos
xor
scas
inc
sub
bound
push
cmp
orb
data16
push
out
dec
sahf
xor
loopne
cltd
inc
arpl
cmp
subb
fnstenv
dec
mov
test
pop
xchg
int3
inc
int3
pop
xchg
ljmp
jge
call
mov
ret
nop
sub
pop
ja
sub
insb
sahf
sub
insb
mov
dec
out
fnstenv
sub
or
ds
xlat
jl
mov
mov
dec
gs
push
mov
dec
jno
call
xlat
call
ss
xchg
mov
push
and
ja
mov
sbb
and
xlat
or
scas
inc
dec
or
and
insl
pop
aad
leave
jno
mov
in
mov
test
mov
xor
test
int3
jno
xor
movsl
test
pslld
test
mov
aaa
movsl
dec
in
sbb
fadds
addr16
jg
mov
ficoml
jmp
cmp
jg
xor
inc
fmuls
fxch
lcall
not
fildl
xor
cmp
shl
movsl
ret
mov
mov
sub
and
pop
shlb
xor
test
sub
test
cli
xchg
outsl
push
dec
mov
ret
mov
imul
mov
movsb
repz
and
movsl
and
add
enter
popa
and
daa
pop
cmpsl
repz
sub
sub
xor
add
adc
sbb
enter
movsl
adc
push
ffreep
leave
shrl
and
test
jmp
inc
or
sahf
mov
sbb
loope
cmp
shlb
mov
stos
popf
xor
jl
inc
pop
pop
clc
jne
shrb
ds
adc
mov
int3
jae
adc
jns
cld
pusha
imul
aaa
out
adc
push
inc
push
dec
dec
ljmp
jmp
or
push
fldenv
push
jne
or
and
arpl
fldl
mov
call
sarl
sub
jl
dec
roll
lock
adc
int3
cmp
ljmp
xchg
ret
call
in
jmp
test
mov
test
add
pop
gs
jecxz
jmp
fldln2
shr
dec
data16
and
pop
inc
and
daa
in
int3
push
shrb
and
sub
lds
mov
popf
and
cmpsl
cmpsb
pop
daa
fsubs
sub
inc
dec
cmpsl
inc
add
ljmp
in
xchg
popa
add
adc
andb
add
daa
or
lods
aas
jo
cmpsb
jmp
int
mov
jmp
shrl
clc
clc
sbb
fstpt
mov
fiaddl
roll
jo
xchg
test
leave
mov
sbb
mov
lods
pop
test
js
stos
ret
movsl
pop
ret
movsl
mov
pop
cs
mov
mov
push
xlat
andb
in
dec
loop
vpmaxsw
xchg
add
push
sbb
mov
or
xchg
in
mov
js
xchg
out
mov
not
push
leave
and
insl
aaa
dec
imul
stc
mov
scas
add
add
movsl
jno
je
flds
insb
dec
into
mov
nop
icebp
mov
outsl
roll
sub
pop
arpl
popf
clc
dec
or
pop
xchg
shl
or
aad
stos
inc
das
pop
sub
flds
pop
dec
jle
xor
xchg
mov
add
imull
add
xor
mov
jns
pop
ljmp
xchg
sub
mov
push
mov
jp
stos
ljmp
push
xchg
leave
lock
jno
or
sbb
fisttpll
shl
adc
sbbb
insl
mov
or
aad
inc
and
popf
mov
sbb
int3
rcrl
movsl
lock
pop
fdivl
mov
out
xchg
shll
fmull
imul
nop
sub
fnstenv
or
hlt
mov
xlat
mov
adc
es
add
shll
popf
mov
ja
sbb
cltd
cltd
popa
iret
push
add
iret
pop
in
mov
push
xchg
test
scas
int
out
cmpb
inc
lahf
mov
sbb
fwait
lea
cmp
data16
ret
pop
sub
insb
pop
fs
xor
push
movsb
xchg
shl
cmc
or
or
ja
test
dec
fsubp
pop
and
add
mov
stc
jbe
jo
mov
jo
jbe
or
jo
je
adc
bound
out
aad
xchg
arpl
sub
hlt
cltd
mov
mov
aam
int
incl
mov
call
pop
test
hlt
clc
cmpsb
daa
xor
mov
xlat
int3
mov
pop
mov
jecxz
sub
arpl
fwait
jmp
sbbb
mov
imul
repnz
inc
and
add
pushf
cmp
shlb
mov
fwait
subl
mov
stos
mov
sub
push
mov
or
xor
lds
push
jg
call
xor
out
nop
dec
and
mov
imul
rcr
pop
xlat
add
roll
jecxz
out
xchg
loop
out
outsl
inc
jge
cmp
stc
mov
aas
jge
adcb
cltd
jmp
push
aas
ret
xchg
cmp
dec
les
sbb
mov
fcoms
das
xchg
je
rcr
or
mov
ljmp
ficomps
cltd
mov
es
aad
inc
fmuls
loope
jb
xchg
movsl
test
shrl
shl
adc
es
enter
sub
dec
cmpsb
dec
lock
shl
adc
out
stc
cwtl
xchg
pop
mov
xor
inc
mov
mov
icebp
mov
sub
inc
push
aam
or
ljmp
mov
or
pusha
mov
push
adc
addr16
data16
movl
paddusb
data16
xchg
in
inc
insb
mov
mov
psubsb
ljmp
or
lock
jl
mov
adc
lock
mov
loopne
pop
pop
jbe
xchg
add
sub
imul
sub
pop
ss
fildl
xlat
xchg
jbe
mov
pop
inc
loope
jbe
cwtl
xchg
inc
mov
iret
daa
sub
mov
daa
push
mov
jp
fs
or
push
loop
fmuls
inc
sub
cld
lahf
fs
test
imul
negb
pop
leave
lahf
stc
aad
xchg
stos
loope
int3
outsl
and
ljmp
test
or
xchg
shl
fsts
push
aaa
imul
lds
dec
adc
and
test
imul
bound
repnz
jecxz
pop
mov
addr16
sti
push
jno
enter
xchg
addr16
stc
icebp
xchg
mov
bound
hlt
push
ret
and
gs
add
inc
in
jecxz
es
mov
dec
mov
test
nopl
and
roll
in
sahf
mov
mov
mov
pop
and
out
in
cwtl
lahf
cmp
pop
aas
enter
lea
cld
mov
dec
mov
dec
or
xchg
lret
popf
leave
loope
int
cmp
or
cmp
jbe
pop
cmp
inc
jb
and
xadd
xchg
iret
xlat
jle
mov
pop
cmp
inc
cwtl
xchg
test
jne
pusha
adc
out
lret
orb
xchg
sub
imul
popa
out
and
cmp
xor
add
lods
push
sbb
xchg
or
jmp
mov
mov
sbb
lods
repnz
shrb
rol
imul
mov
roll
push
ds
bnd
jo
hlt
ret
repnz
and
xchg
mov
inc
pushf
repnz
subl
jmp
add
daa
test
xchg
mov
fsubl
outsl
pop
xchg
push
sub
jae
mov
movl
add
dec
mov
jne
pop
imul
cmpsb
ds
dec
push
nop
jmp
and
inc
mov
inc
mov
mov
dec
arpl
repnz
sbb
scas
adc
xchg
xchg
sbb
outsl
xor
shlb
das
sbb
inc
inc
loopne
jg
sbb
sbb
mov
loopne
push
fadds
je
addr16
sub
inc
push
out
cmpsb
mov
repnz
inc
pop
lds
fcoml
stos
adc
pextrw
or
sub
inc
fsubr
rcll
inc
xor
mov
sti
scas
cwtl
shr
repnz
add
insb
popf
mov
xchg
or
in
mov
fistpll
jae
jo
dec
pop
cmp
rcr
fcoms
int
pop
mov
rcpps
pop
add
mov
imul
aas
scas
cmp
sbb
stc
sbb
stc
push
aad
nop
adc
cmp
pop
push
add
mov
dec
movsb
div
sbb
and
leave
test
mov
and
ds
sbb
leave
daa
movsl
gs
xchg
jbe
mov
mov
xor
enter
jb
fmuls
sbb
fdivrs
lret
adc
sbb
ret
pop
sub
xchg
xchg
pop
popa
data16
mov
cmp
jne
fstps
mov
fdivs
pop
xlat
cs
pop
aaa
cmpsl
repnz
imul
jl
jno
cmp
insl
or
pusha
leave
mov
xchg
idivb
inc
dec
adc
pop
addr16
movsl
sub
mov
dec
push
call
popa
jno
push
pop
and
cmp
ljmp
or
stc
mov
sbb
and
xor
imul
inc
sbb
pop
adc
leave
es
leave
orl
or
mov
dec
dec
jne
fsubp
leave
test
test
fnstenv
pusha
mov
subl
in
mov
subb
dec
out
sub
iret
ret
lods
stc
mov
sub
mov
fwait
cmp
cmp
fidivs
push
jl
push
repnz
addr16
xor
inc
enter
sbb
push
dec
inc
repnz
cs
ficompl
int3
insl
jmp
xlat
insb
push
into
ljmp
fs
inc
xchg
shr
lahf
xor
adc
dec
xlat
in
clc
or
mov
sub
imul
fsubr
jbe
dec
lcall
int
cmp
or
inc
add
sbb
mov
aad
xor
jno
ja
and
jmp
xor
mov
and
movsl
shll
imull
bound
pop
data16
dec
enter
pop
xchg
fsubl
and
mov
or
xchg
movhlps
repnz
test
cmpsl
pop
out
push
js
out
xor
mov
fists
jmp
movsb
and
sbb
rcl
popa
fstps
fmul
leave
xchg
addr16
add
ret
xor
mov
xor
jb
data16
fnstenv
mov
hlt
aam
jmp
xchg
or
je
lds
jge
outsb
cli
ljmp
jmp
or
int
mov
gs
push
mov
loope
mov
mov
xor
pop
mov
xor
notb
mov
xlat
sbb
popf
dec
cmp
jp
adc
dec
lahf
enter
xchg
xchg
movsl
ficoml
cmp
movsb
movb
or
inc
sub
inc
test
and
push
or
cli
loopne
push
xor
arpl
xchg
xchg
pop
jno
aam
lock
imul
or
js
stc
add
pop
imul
adc
sar
std
sub
push
and
fisttpll
jmp
sub
lcall
mov
and
xchg
cli
js
movsl
mov
cmp
mov
or
fstps
filds
test
xchg
xchg
jno
leave
pusha
or
mov
push
and
inc
insl
xchg
sbb
notl
orb
imulb
arpl
mov
pop
imul
pop
dec
ret
out
js
inc
mov
or
popa
fwait
and
inc
xchg
sub
stc
xchg
pop
mov
lahf
mov
dec
pop
lods
mov
add
mov
cmp
test
cwtl
lds
push
loopne
ss
into
lret
cmp
dec
shll
cld
outsb
and
pop
shl
enter
inc
fldenv
mov
mov
push
and
icebp
cmp
jo
movsl
jne
mov
sar
inc
std
pop
mov
cmc
test
pop
bound
push
test
xchg
lcall
xor
movsl
mov
nop
rorl
push
aas
add
fmulp
inc
xlat
add
daa
mov
sbb
inc
mov
cmpsb
outsl
ds
ja
push
dec
hlt
pop
scas
je
into
mov
rolb
cmp
push
dec
loope
ja
sub
mov
hlt
mov
cmp
mov
popf
xorb
mov
push
clc
imul
xchg
ret
fimull
mov
mov
adc
nop
and
fwait
leave
aad
or
test
or
dec
sti
push
fidivs
addb
es
jecxz
jle
test
in
pop
xchg
push
push
pusha
cmp
outsl
mov
gs
popa
mov
cmp
imul
add
mov
neg
mov
mov
xchg
ss
add
arpl
nop
push
or
mov
jecxz
push
flds
test
pusha
jns
movsl
sub
push
lock
fwait
pop
push
sbb
outsl
ret
gs
insl
in
cmc
push
mov
fsub
mov
out
fadds
cmp
mov
lahf
out
jne
call
inc
fldl2t
xchg
imul
cwtl
cli
fisubrs
jecxz
arpl
sbb
mov
std
or
andb
and
inc
and
jnp
arpl
add
push
test
or
mov
mov
ja
inc
mov
push
inc
es
xor
ja
xor
pop
xchg
inc
push
push
push
pop
jecxz
fildl
jle
pop
jmp
pop
sub
scas
pop
jno
int
repnz
inc
data16
jge
cmp
jecxz
or
es
lock
enter
adc
xor
shl
push
cmp
scas
sarl
jecxz
cmc
aad
inc
ror
lods
rol
or
pop
leave
enter
xchg
push
jmp
cmp
out
xchg
paddsw
jge
mov
pusha
fld
test
inc
adc
loope
cmp
rolb
stos
and
popf
sbb
cmp
jmp
addl
dec
inc
cld
cmp
cmp
pop
fs
mov
daa
lea
xchg
and
jmp
bound
sbb
dec
mov
or
out
add
and
addr16
call
pop
fsubs
pop
arpl
stos
xchg
outsl
lock
jge
stc
push
xor
fcompl
jg
and
enter
and
mov
cmp
xchg
dec
mov
rol
pop
and
icebp
xor
sbb
sub
adc
vcvtps2pd
xchg
mov
je
ret
or
sub
inc
add
cmc
rcrl
pop
or
add
xchg
mov
pop
imul
rolb
inc
add
mov
jmp
out
shrl
iret
rcr
rcrl
addr16
mov
xlat
mov
test
aad
inc
push
and
test
lret
clc
mov
or
in
dec
lods
pop
add
inc
arpl
or
lds
aaa
arpl
sbbb
jle
mov
in
ja
mov
cmc
stos
test
dec
aam
imul
push
loopne
pop
jecxz
fs
in
fmul
gs
scas
out
data16
out
fs
call
rcll
pop
pop
and
adc
std
stc
mov
sub
jmp
fists
or
inc
sub
aad
pop
insb
jle
and
shlb
xorb
lock
dec
jo
in
les
xchg
bound
sbb
inc
pop
aad
pop
pop
nop
inc
pop
pop
mov
inc
sti
int3
push
jmp
mov
xor
jge
mov
das
dec
add
test
mov
out
testb
in
inc
pop
inc
sbb
jecxz
mov
leave
or
jbe
pop
out
and
movsb
rorl
jmp
jge
add
fsubrs
add
shr
es
mov
cmpsl
out
data16
addr16
enter
xchg
push
xchg
sub
fcoms
arpl
cli
icebp
loope
mov
sbb
scas
pushw
rorb
cld
repz
sahf
cs
xchg
cmpsl
mov
mov
pop
cmp
arpl
push
adc
test
call
pushf
aam
inc
sbb
cltd
mov
cli
or
jo
sub
ret
adc
sarb
or
repz
cli
lahf
sub
push
and
xchg
ss
mov
pop
enter
xor
xchg
pop
fwait
or
ss
std
pop
push
cmp
stc
xchg
dec
pop
jge
flds
dec
dec
mov
int3
divb
cli
imul
mov
jns
lea
ljmp
cmp
das
jnp
sbb
xorl
loopne
pusha
dec
subb
sbb
cmp
and
loope
das
mov
ret
sub
shrb
std
fisubs
cmc
rcl
sub
mov
shlb
xlat
mov
rolb
or
pop
scas
sub
inc
push
pop
mov
mov
sti
sub
inc
mov
mov
xor
push
sbb
sbb
icebp
gs
pop
out
popa
fsubs
out
addr16
call
push
imul
bound
out
push
insl
dec
enter
xor
bound
shll
xor
inc
lds
cmpsb
mov
aaa
pushf
pause
jmp
push
repz
mov
push
pop
stc
jp
mov
popf
push
mov
inc
adc
dec
cmp
sbb
jecxz
scas
mov
cmpsl
push
xchg
adc
js
sub
lds
mov
lds
ret
sub
inc
xor
adc
xchg
or
cmp
inc
ss
jb
je
in
or
loope
test
inc
pop
cli
jecxz
test
push
jmp
in
repnz
xchg
add
xor
adc
push
add
arpl
pop
xchg
cmp
add
les
inc
push
sbb
inc
cmp
dec
fsubrl
ds
shrb
rcl
xchg
cmp
mov
shlb
ret
push
ds
push
adc
sub
cmp
icebp
lahf
push
popf
pop
daa
and
lds
test
leave
pop
imul
mov
push
add
sahf
cmpsb
popf
xchg
lcall
cmp
xchg
or
inc
shrl
mov
add
push
xchg
inc
add
cmpsl
arpl
fsubs
gs
out
enterw
pop
call
shll
mov
pop
fsubs
fwait
repnz
je
xor
out
mov
pop
fcmovbe
cltd
rcll
andb
xor
cmpsb
jb
cmp
lret
loope
leave
addb
jmp
inc
mov
mov
add
mov
fisttpll
mov
or
lcall
popf
push
and
xchg
inc
pop
dec
out
clc
jp
xlat
cmp
pop
popf
jae
push
push
sub
sub
mov
std
sti
in
ss
push
cltd
or
pop
stc
imul
or
inc
pop
enter
mov
push
pop
and
xchg
dec
pop
addr16
xor
loope
rcrl
mov
fwait
test
pushf
call
mov
dec
cli
mov
mov
inc
nop
jb
fistl
fyl2xp1
dec
sbb
mov
xor
mov
inc
lahf
enter
dec
pop
arpl
pop
fnstcw
mov
xor
out
pop
orl
cld
sarb
cmp
pop
je
add
icebp
push
pusha
xchg
xor
fcmovnb
gs
jbe
out
cmpb
jns
andl
dec
out
or
jo
scas
inc
dec
mov
test
daa
sbb
jg
lret
loope
movsl
jmp
add
add
fsubs
and
popl
aam
and
adc
mov
repz
jge
xchg
push
adc
inc
dec
in
push
sub
mov
insl
pop
dec
sbb
js
cwtl
xchg
push
rcl
xchg
jl
ds
push
mov
mov
stc
mov
in
das
dec
lcall
mov
or
ret
sub
clc
and
mov
push
stc
js
rcll
jle
cmp
je
xchg
dec
gs
jmp
cmpsl
inc
not
into
pop
inc
push
shll
or
sbb
xlat
das
pop
add
sub
cmp
ljmp
mov
lds
loopne
push
xor
test
jecxz
pop
int3
push
shr
lods
adc
pop
sub
daa
mov
cmpsb
add
mov
std
cmp
add
xchg
cmc
mov
test
push
aad
scas
add
ret
mov
mov
add
pop
daa
cwtl
mov
xchg
xor
xchg
mov
repnz
push
push
test
sbb
aaa
loopne
mov
into
movsl
or
loopne
fldenv
leave
mov
aam
xor
shrl
mov
or
sarl
sti
loopne
imul
pop
cmc
ficompl
mov
insl
xchg
test
cmp
divl
rorb
adc
xchg
push
ljmp
stc
ficoml
insl
mov
dec
adc
stc
sarb
push
jmp
jge
testl
data16
into
ds
ljmp
pusha
pop
rcr
enter
mov
push
pop
outsl
push
enter
addr16
adc
add
jl
out
repz
ficompl
sbb
movsl
data16
inc
loope
sub
pop
and
test
popfw
std
dec
cmpsl
add
rcrl
stos
push
sub
aaa
pop
jmp
adc
sub
and
jo
inc
mov
sub
lods
dec
dec
loopne
jg
shll
ljmp
ja
cltd
add
push
fwait
ret
fadds
add
aaa
mov
dec
inc
int3
test
mov
or
pop
sub
jns
sub
icebp
jmp
aaa
cmc
xchg
pop
pop
mov
cmpsl
pop
push
ja
in
and
fadds
cmp
jg
gs
adc
sbb
jg
inc
iret
addr16
push
test
test
iret
mov
mov
shrb
jmp
test
jnp
push
call
and
test
push
imul
enter
push
gs
into
loope
call
fldcw
sub
inc
jno
push
pop
dec
movq
rol
jo
aaa
mov
insl
sbb
mov
push
fcmovnu
les
xlat
mov
popf
cmp
clc
popf
jmp
ret
lahf
enter
in
add
cmp
or
call
inc
repz
mov
mov
fwait
sbb
out
fcom
stc
enter
aaa
dec
jmp
sub
mov
jmp
enter
test
mov
or
xchg
add
jecxz
aas
sub
xadd
push
cld
gs
cmp
xor
jge
and
sub
or
mov
push
mov
or
imull
dec
sbb
cmpsl
dec
imul
test
lea
cli
and
jmp
lods
dec
inc
dec
fadd
or
cmp
jle
jbe
xor
push
cmpsl
arpl
int
into
iret
fnstsw
setg
fbstp
addr16
aad
aas
test
xchg
sahf
mov
xlat
inc
in
sub
fiaddl
shrl
mov
iret
enter
dec
in
in
loope
inc
mov
mov
jecxz
stos
jle,pn
mov
leave
mov
pop
xchg
xchg
push
es
movsb
sbb
pop
dec
xchg
mov
leave
and
mov
test
add
and
clc
sbb
enter
lods
cmpb
leave
add
inc
lcall
pop
sahf
push
xchg
imul
jp
mov
aas
pop
xchg
clc
mov
cmp
ficomps
ss
inc
push
enter
sbb
xchg
xchg
push
shll
xchg
mov
jl
subb
ret
shr
push
cltd
sbb
push
inc
push
or
es
incw
in
pop
add
mov
scas
enter
call
ret
movsb
mov
loopne
movsl
mov
pop
mov
notl
inc
pushf
jmp
movsb
fbld
das
mov
adc
dec
aas
xorl
iret
mov
jmp
push
xchg
push
repnz
jg
outsb
push
push
push
mov
mov
xor
mov
pop
insb
mov
incl
xor
mov
pop
mov
das
xor
xor
cmpsl
sbbl
push
mov
test
ficoml
or
shlb
adc
inc
mov
xlat
sub
lea
mov
cmp
lret
jno
lret
arpl
addb
and
push
fincstp
lock
test
jp
adcb
stc
xchg
enter
cmpsl
mov
xchg
push
dec
stc
sbb
mov
cmp
ret
adc
inc
xchg
lds
jl
pop
mov
imul
xchg
xorb
mov
or
test
xchg
inc
xchg
cmp
aaa
daa
xor
cmc
and
shrl
movl
test
mov
mov
sbb
jl
dec
rcll
daa
or
jge
jno
inc
popa
in
sbb
jge
fldenv
lock
sahf
xchg
into
and
cmpsw
imul
rol
and
sbb
push
xchg
pop
and
mov
leave
loope
mov
add
mov
cltd
inc
add
inc
cltd
mov
nop
cmp
cwtl
push
cld
outsb
stc
aas
mov
insb
push
xchg
jg
add
inc
cmpsl
pop
pop
fisubs
jge
add
jge
and
jo
sub
sub
out
das
and
movntq
fsubs
cmpsb
jne
sub
aaa
test
cmpsl
clc
loope
fldcw
mov
std
rcl
or
inc
push
in
xchg
cltd
mov
cmp
xchg
mov
or
std
lock
cmpsb
nop
test
loope
mov
les
push
pop
dec
maxps
or
sub
add
popf
and
je
pop
cmp
jp
xchg
pop
and
jns
and
lret
push
frstor
jo
jno
addb
cmpsb
push
imul
or
mov
cmpsl
enter
mov
push
mov
ds
sar
shr
jge
les
ret
mov
push
insl
inc
mov
cmp
cld
das
movb
xor
adc
mov
pushf
adc
gs
inc
rcr
test
jns
fsubrs
iret
mov
jno
jmp
jp
mov
pop
ret
movsb
dec
mul
loopne
sub
icebp
cmp
xlat
cmpsb
or
pop
and
stc
aam
xchg
pushf
mov
mov
inc
mov
out
jp
push
loope
lgs
lea
or
notl
jnp
ja
neg
xchg
xor
lahf
xlat
pop
flds
push
in
dec
lock
int3
add
test
movsb
rcl
mov
insb
repz
in
lods
add
xchg
xchg
pop
div
push
sub
push
and
dec
xchg
add
xchg
out
mov
push
dec
xchg
out
xchg
leave
outsl
ja,pn
add
xchg
in
aaa
fs
and
jmp
add
bswap
push
inc
mov
push
sbb
ja
xchg
ret
mov
test
pop
xchg
cmp
test
mov
or
cli
xchg
pop
sub
data16
jbe
std
mov
xor
clc
fcoml
into
lods
xlat
out
fsubl
shl
ds
mov
fucomp
mov
push
jne
out
add
fwait
dec
gs
xchg
and
fidivrs
sub
lods
cwtl
leave
push
imul
imul
add
mov
add
push
push
ret
xchg
jno
dec
mov
fsubrs
fistpl
push
andb
sub
nop
leave
xchg
fsts
es
call
lds
out
call
xor
int
sub
test
dec
shll
xchg
mov
outsb
jno
std
inc
jecxz
ja
and
xor
or
leave
xchg
xchg
mov
cmpsb
jne
sub
jge
mov
stos
jecxz
js
cmp
cltd
rol
and
sbb
xchg
push
clc
ficompl
imul
rolb
push
mov
call
movsb
ret
call
cltd
icebp
push
and
jae
cmp
popf
call
sahf
rcrl
out
iret
call
or
push
nop
mov
xlat
dec
in
and
mov
push
pusha
int
inc
mov
mov
mov
xor
shlb
adc
mov
push
rcrl
pop
sbb
inc
cmp
popl
and
adc
jno
cmp
insl
loopne
int3
jo
fadd
or
into
aaa
enter
pop
mov
pop
enter
sarb
jno
in
pop
dec
mov
test
outsl
add
push
pop
ljmp
xor
scas
insb
popf
movsl
mov
inc
xor
repnz
imul
aaa
std
daa
es
adc
jb
cmp
push
aaa
jmp
les
xchg
call
call
sub
iret
mull
sti
ret
sbb
xor
pop
pop
adc
call
lds
lock
cmp
pop
addr16
mov
sub
pop
jmp
push
mov
leave
sub
call
dec
lods
cmp
jmp
adc
cmpsl
xor
popa
insb
push
jnp
inc
jle
inc
jmp
cmpb
movsl
aam
jo
push
out
sbb
jmp
sahf
lock
push
arpl
les
jp
enter
inc
xchg
aam
xor
pop
sbb
rol
pop
out
adc
push
ret
mov
and
ret
push
sbb
mov
adc
fwait
orl
pop
fmulp
clc
in
mov
in
lahf
pop
cmpsl
das
mov
inc
enter
fmuls
jo
push
cmp
pop
push
das
mov
push
hlt
mov
rcrl
iret
daa
add
xchg
pop
pop
lahf
mov
ljmp
in
push
mov
mov
push
pop
jmp
pop
es
in
sbb
pop
xchg
sub
adc
pop
sub
mov
insb
leave
mov
cli
repnz
jp
ja
sbb
out
adc
nop
push
xor
popa
mov
xchg
mov
xor
xchg
popf
inc
mov
ljmp
ret
leave
jl
pop
fcoml
xchg
lods
adc
pop
stc
movsl
mov
mov
sbb
dec
mov
sbb
aam
xlat
stos
inc
xor
movsl
mov
mov
insb
mov
push
add
inc
cmp
xchg
adc
imul
pop
retw
addr16
dec
push
leave
mov
ror
adc
out
mov
xchg
mov
push
sbb
aam
hlt
sub
int3
les
fxch
pop
push
test
mov
cmc
dec
mov
andb
inc
movsl
and
imul
dec
and
pop
mov
and
repz
test
and
mov
push
es
test
inc
mov
or
dec
mov
pop
stos
aam
mov
xchg
adc
ljmp
add
out
movsl
xchg
mov
std
dec
cmp
imul
into
jmp
add
dec
popa
andb
out
movsb
jg
rol
and
movsl
dec
add
es
out
mov
inc
daa
mov
sub
push
out
xor
jo
pushf
cmpsb
lods
dec
sub
ret
sarb
push
push
outsb
xchg
mov
out
faddl
cmp
daa
mov
mov
push
nop
lods
ds
xchg
scas
leave
dec
enter
enter
push
clc
xchg
jb
push
lea
in
nop
cmc
aad
decl
int
outsb
sbb
sahf
xor
sbb
xchg
pop
mov
push
addr16
sub
xchg
mov
dec
jbe
push
mov
jnp
stos
push
fsubrs
stos
roll
popa
xchg
and
add
arpl
sbb
jae
mov
mov
lahf
push
mov
je
mov
push
cmpsb
dec
insb
ds
test
popf
lcall
clc
mov
adc
and
cmp
pushf
xlat
or
scas
mov
add
pusha
ljmp
mov
pop
sub
cmp
xchg
pop
int
dec
insb
cmpsb
xchg
or
enter
xchg
loope
add
int
fldt
cli
cmp
cmp
data16
jb
lods
cmp
or
cwtl
pop
pop
jg
dec
mov
mov
out
cltd
jne
test
movsl
out
xlat
xchg
adcb
mov
mov
pop
sbb
mov
scas
add
stos
inc
lahf
sbb
sarb
mov
push
pop
fisttpl
adc
clc
dec
insl
test
adcb
pop
push
mov
dec
in
data16
push
push
xchg
shll
cli
mov
mov
xchg
ja
stos
ss
mov
or
pop
and
das
fchs
sub
lret
andb
xlat
loopne
inc
mov
cltd
and
stc
mov
mov
or
sbb
push
and
subb
lahf
mov
jnp
incb
in
mov
mov
and
fisubrl
repnz
push
imul
jmp
fs
mov
cmp
jns
jne
leave
imull
mov
pusha
es
hlt
stos
jge
mov
pop
mov
jo
scas
jp
xor
add
xchg
xor
jle
cmpb
or
sbb
cmp
popa
mov
rcrb
fcomp
cmp
inc
dec
stos
je
push
nop
mov
test
cli
stos
jno
xchg
sub
jge
jb
push
sub
aam
add
xor
dec
push
mov
push
fstl
adc
jl
fsubrl
inc
insb
push
jae
sar
fmul
cmp
push
in
cli
movb
cmp
mov
add
inc
mov
adcb
xor
jl
fsubr
inc
mov
pushf
gs
lods
inc
sahf
sbb
mov
mov
xchg
adc
sar
aas
push
pusha
mov
adc
or
xchg
jl
int3
and
mov
nop
or
aaa
pop
adc
adcl
popf
ret
cli
jae
ja
mov
jle
sti
mov
pop
shlb
inc
dec
imul
sti
add
sub
inc
and
aaa
xchg
ret
xchg
jb
pop
scas
dec
mov
stc
mov
pop
cmpb
stc
sbb
dec
stc
mov
xor
mov
xlat
mov
rcl
lds
push
adc
adc
in
pop
enter
sbb
pop
mov
mov
enter
add
or
mov
enter
cltd
nop
fcmovbe
scas
lret
popf
mov
or
stc
xor
inc
arpl
push
cmp
sub
leave
repnz
sub
in
pop
test
enter
repnz
push
sbb
xor
test
jmp
xchg
nop
addr16
mov
out
mov
shl
insb
cli
nop
adc
adc
mov
test
sahf
sub
lds
cld
mov
inc
in
loope
les
pop
repz
pop
inc
ds
fcmovu
xchg
ss
ret
repnz
xlat
or
test
test
fisttps
bound
insl
mov
enter
lret
in
and
mov
mov
dec
xchg
or
xlat
pusha
outsb
jns
mov
aas
leave
rorl
repnz
push
cmp
add
push
loope
xchg
xchg
je
cli
sbb
test
cmpsb
cmpsl
fldenv
dec
cld
dec
jnp
out
sbb
ffreep
in
jp
pop
test
popf
je
rcrb
xchg
test
xchg
imul
add
sbb
movsl
cltd
outsl
ljmp
leave
outsb
aaa
xor
jmp
push
enter
fimuls
add
fildll
mov
aaa
test
sbb
and
inc
fmuls
pusha
pusha
mov
data16
adc
test
mov
mov
sbb
repnz
pop
repnz
push
movsl
cmpsl
fcmovb
sar
ret
out
mov
fsubl
leave
jecxz
repnz
ret
jno
adc
xlat
push
mov
dec
lret
repnz
inc
mov
adcb
stc
jp
movl
in
movsb
adc
std
fsubs
shrl
mov
xor
mov
inc
push
cltd
jl
adc
sbb
orb
mov
int3
push
shl
scas
add
mov
pop
fyl2x
loopne
jmp
lock
add
loop
aam
push
or
addr16
cltd
mov
cltd
test
inc
ret
dec
push
sbb
fnstenv
xchg
outsl
loop
enter
dec
add
lock
mov
shl
stc
xorl
aam
dec
roll
inc
ja
std
xor
pop
in
in
insb
test
pop
sub
test
leave
jecxz
mov
dec
cmpsb
hlt
popw
mov
aas
repnz
pop
aam
mov
insb
pop
or
sbb
ljmp
mov
fsubrs
pusha
dec
out
aam
rclb
pop
test
lods
out
popf
mov
push
repz
fsubrs
cmpsl
shrb
inc
mov
ret
xchg
cmpsb
jae
popa
and
mov
push
and
adc
add
dec
ljmp
fldl
arpl
orl
or
dec
inc
sbb
add
pavgw
arpl
cwtl
enter
fsubrp
mov
shr
cmp
mov
push
aas
pop
adc
add
sub
shlb
mov
lret
pop
adc
ret
inc
sbb
dec
push
pop
sub
inc
jbe
fst
push
leave
shl
vmovmskps
dec
dec
pop
lods
mov
jns
xlat
jge
fs
std
cs
cmp
nop
xchg
mov
gs
mov
movsl
ffree
and
ja
push
pmovmskb
out
mov
adc
mov
cld
and
xor
pop
jno
hlt
pop
aaa
cmp
mov
xchg
repz
xor
fldenv
fs
mov
mov
enter
or
jmp
gs
or
sub
imul
leave
inc
jb
popf
arpl
add
leave
stc
idivl
out
out
pop
mov
idivl
mov
jecxz
or
pop
lret
stc
add
sbb
add
pushf
xchg
jbe
in
sbb
imul
jp
cli
data16
jno
inc
add
sbb
or
daa
mov
sub
aaa
lahf
push
xlat
fidivrs
and
mov
inc
sbb
inc
movsl
fstps
or
jge
mov
in
mov
or
cwtl
mov
cwtl
push
xlat
mov
js
ljmp
loope
mov
mov
mov
push
pop
push
test
push
adc
aam
sbb
push
or
xchg
adc
dec
cmc
ja
mov
stos
mov
mov
les
negl
divb
adc
push
loopne
mov
loopne
mov
les
movb
fwait
int
push
fcmovb
xor
cld
jmp
loope
jae
mov
in
testb
xchg
or
mov
sub
loop
js
cltd
inc
mov
mov
aad
aas
inc
enter
sub
pop
inc
fwait
cmp
sub
cld
outsb
orb
push
cmp
cmpsl
std
mov
xchg
cli
pop
loope
push
ret
xlat
jo
outsl
shrl
xorl
lock
dec
mov
dec
pusha
das
pushf
xlat
cmp
outsl
arpl
sub
jae
test
adc
sbb
popa
push
or
sub
dec
inc
dec
pop
jns
mov
dec
cmp
mov
scas
push
and
stc
mov
test
cld
sbb
pop
and
cmp
shl
aas
mov
sub
xor
and
cmp
pop
gs
call
xchg
or
push
test
out
fisubrl
inc
cmpsl
call
sbb
xchg
pop
inc
jno
inc
inc
add
pop
push
outsl
inc
xchg
jmp
ljmp
fldlg2
inc
sbbb
jb
xor
outsb
pop
aas
rcll
jns
lea
jge
xchg
aam
loopne
pop
sbb
add
pop
adc
xor
push
mov
imul
sub
icebp
outsb
stc
xchg
jg
pop
mov
push
cmpsl
mov
stos
adc
cltd
cmp
adc
lcall
mov
rorb
enter
and
lahf
mov
pop
lods
repnz
insl
sub
add
mov
mov
mov
in
inc
and
mov
pushf
outsl
lahf
mov
adc
push
fstl
lock
mov
out
mov
jmp
stc
dec
xchg
lock
outsb
inc
orl
stc
mov
movsw
xchg
cltd
adc
dec
push
mov
addr16
pop
pusha
lret
inc
push
subb
cmp
sub
in
pop
scas
ret
ret
cmp
xchg
push
repnz
xlat
rorl
xor
shll
jnp
dec
jo
push
stos
fsubl
push
sbb
jb
ljmp
push
adc
or
sub
lods
gs
push
das
stc
iret
daa
sahf
rcrl
jns
jmp
mov
or
test
and
clc
pop
mov
lods
cld
mov
or
cwtl
lcall
mov
sbb
ret
xor
mov
cmpsb
popa
test
std
or
lea
arpl
dec
arpl
xor
jp
cmp
hlt
dec
push
jb
pushf
shrb
rorb
pusha
shlb
jl
mov
xchg
sti
cmpsb
mov
inc
ret
mov
mov
mov
jg
sub
lods
cltd
aad
lock
out
mov
into
scas
loope
inc
mov
addb
mov
movsl
gs
dec
std
xor
push
pop
jb
push
sbb
push
inc
inc
dec
scas
loopne
pop
je
fsubl
adc
inc
xchg
test
enter
pushf
jl
dec
pop
mov
adc
dec
scas
mov
cs
push
out
je
pop
mov
mov
inc
popf
xchg
sbb
icebp
insl
mov
sbb
mov
or
add
popf
pop
mov
ret
dec
push
cli
arpl
lea
inc
repnz
pop
notl
mov
gs
jecxz
imul
sbb
les
dec
data16
inc
pop
mov
loopne
pop
or
rol
mov
mov
dec
fnstenv
fnstcw
xor
lahf
mov
pop
addb
inc
repnz
or
notl
cmp
inc
push
jne
ret
adc
or
xchg
pop
data16
xchg
aas
jo
insl
movsb
pop
je
mov
mov
xorl
cmp
shr
inc
and
inc
nop
sbb
pop
adc
ss
or
out
icebp
sahf
rolb
rcl
test
ds
jno
xlat
scas
test
bnd
push
nop
movsb
stos
mov
mov
enter
mov
addb
insb
cli
orb
loope,pn
pop
xchg
addr16
push
jo
out
inc
addb
outsb
dec
push
cs
test
div
gs
xor
mov
xor
data16
jl
and
cld
movsb
push
cmpsb
push
in
mov
add
insb
and
pop
pop
out
pushf
pop
int
add
mov
arpl
mov
and
mov
sub
push
jle
js
icebp
and
mov
leave
xchg
ja
xchg
xor
mov
movsl
dec
fucom
mov
imul
nop
repnz
orl
mov
fistl
sub
xchg
jns
daa
out
sub
popa
leave
xor
loope
pushf
adcb
pushf
imul
cld
xchg
stc
int3
dec
cmp
or
aas
pusha
je
loope
jne
out
ds
push
dec
push
sub
mov
push
push
in
cmp
fidivs
sub
or
sbb
rorl
fptan
std
sub
pop
icebp
ljmp
fsubl
pop
and
mov
or
sub
or
aam
sub
insl
or
xchg
fisttpll
jp
dec
rclb
mov
sub
lods
aas
push
or
shr
nop
shr
ds
jns
sbb
nop
or
data16
jmp
lret
enter
sbb
ss
ret
cmp
rcrb
les
pop
mov
ret
out
clc
mov
aad
cmp
pop
fmuls
and
lahf
pop
negl
mov
sti
cmpl
fdivp
xorl
pop
mov
push
vshufps
inc
mov
movsl
pop
jne
test
stos
jg
les
nop
mov
fwait
out
xor
test
stos
imul
or
add
jno
mov
mov
les
dec
hlt
jne
arpl
mov
enter
xchg
cmp
test
jbe
mov
ret
loope
inc
fsub
sbbl
cmc
mov
jl
and
cmpsb
jp
xor
repnz
int3
je
mov
clc
sbb
shlb
inc
pop
insl
push
mov
cld
fsub
loop
jle
mov
inc
pusha
jg
arpl
dec
testb
lods
imul
repz
fldt
sbb
addb
or
andb
cmpsb
or
daa
push
sub
jecxz
and
pop
inc
jp
gs
test
addl
je
add
lret
fdivrs
mov
pop
out
mov
sbb
stos
and
imul
dec
dec
mov
shll
outsl
xorb
add
push
xchg
fcmovu
xor
cmp
stos
or
daa
pop
or
inc
popa
insb
mov
or
icebp
sub
aad
stc
call
movsl
loope
dec
shl
imul
aaa
xor
push
pop
sub
inc
jmp
pop
jecxz
push
inc
outsl
inc
xchg
insl
les
aaa
sub
push
orl
xlat
push
pop
mov
jb
fld
repz
mov
adc
mul
push
enter
ret
mov
lock
dec
cwtl
add
mov
inc
pop
pop
mov
fmul
add
insb
rol
pop
inc
lock
pop
movsb
mov
negb
repz
dec
mov
jmp
lret
rclb
mov
adc
push
cltd
rcl
adc
rcrl
rclb
cmp
cmp
loopne
rcrl
dec
cltd
ss
pop
aas
mov
rcrl
jmp
lds
pop
inc
add
mov
and
or
call
or
out
sub
adc
ds
cmpsl
mov
mov
jno
or
sar
arpl
mov
pushf
sub
adc
xchg
mov
aas
mov
in
icebp
ficoms
or
shlb
mov
inc
adc
lods
rcl
cmpsl
adc
inc
cmpsl
or
sahf
negb
iret
lea
mov
rol
test
push
stos
dec
les
ret
or
mov
sti
sbb
enter
mov
dec
dec
adc
dec
dec
stc
faddl
sbbb
cltd
push
sub
std
dec
jp
cmc
xor
adc
rcrb
pop
je
dec
or
rcrl
pop
icebp
jne
imul
or
mov
jnp
push
lods
jo
sti
mov
cltd
daa
mov
jle
lock
jmp
sbb
add
ja
xchg
cmp
mov
push
scas
push
and
fsubrl
push
cli
push
fcmovu
pop
in
inc
arpl
pop
repnz
xor
iret
cmpsb
popa
add
les
and
inc
sbb
gs
stc
test
pop
imul
push
inc
incb
inc
inc
lcall
and
jmp
sahf
gs
inc
rorl
xor
out
mov
out
jne
and
mov
fidivrl
add
xchg
cli
filds
dec
dec
pop
imul
mov
xchg
push
leave
shlb
mov
dec
and
sbb
imul
imul
cmpsb
imul
xlat
mov
sar
cmp
movsl
cld
push
daa
inc
out
cmpsl
imul
push
push
jmp
popl
add
insl
rcrl
push
movb
sbb
jl
test
stos
or
loopne
pop
xchg
jecxz
add
and
lods
cli
pop
cld
push
sbb
test
cmp
fldenv
add
pusha
dec
inc
or
stc
call
pop
rcrl
fiadds
dec
faddl
sbb
mov
shr
ljmp
mov
into
fadds
outsb
inc
xchg
xchg
sub
xor
outsb
incl
inc
insb
pushf
xchg
stc
in
mov
and
inc
jmp
ret
int
test
cmp
hlt
insl
jo
sub
popf
cltd
movsl
mov
jg
cmp
mov
repnz
pusha
les
test
loopne
mov
test
xor
xor
push
test
or
mov
enter
aam
dec
or
rclb
or
push
pop
std
cmp
incl
jge
inc
add
addr16
divl
ret
iret
push
push
mov
xlat
lods
mov
iret
popaw
cmpsb
shll
mov
inc
jle
insb
mov
pop
add
pop
fsin
inc
adcl
add
shlb
cmp
push
stos
push
mov
insl
dec
sbb
xchg
pop
sub
into
ss
sti
dec
gs
inc
stc
pop
pop
dec
pusha
jp
test
inc
mov
repnz
lods
shll
dec
sub
daa
js
sub
in
xlat
mov
mov
or
add
test
and
mov
jl
test
aad
jp
pushf
lock
xchg
push
xchg
mov
in
dec
loopne
xchg
xchg
xchg
xchg
insl
ret
pop
ljmp
test
push
sub
lea
test
mov
sub
stc
add
or
leave
dec
imul
cmp
xor
xor
outsb
xor
or
cwtl
movsl
loope
add
dec
mov
imul
aas
inc
push
popl
and
lods
ja
repnz
aam
lret
stc
sbb
lahf
push
adc
cmp
and
add
leave
jl
cs
mov
gs
jmp
incb
xlat
inc
xchg
dec
pop
loopne
inc
pop
adc
mov
and
xchg
lods
out
ret
or
sbb
rol
mov
sub
dec
sahf
mov
pop
or
bound
sahf
daa
push
mov
dec
outsb
test
pmaddwd
or
pop
popa
xor
mov
rorl
adc
jmp
repnz
shrl
sub
lds
push
pop
sub
push
push
imull
dec
add
jp
mov
dec
adc
in
push
call
jp
loopne
dec
pusha
xchg
mov
repnz
nop
lods
and
sbb
jl
pop
pop
out
mov
or
fadds
filds
leave
stc
mov
enter
jmp
in
mov
rol
repnz
mov
daa
mov
test
out
xchg
cs
in
mov
sbb
dec
xor
xchg
repnz
inc
dec
rcll
jno
xor
xor
jnp
jmp
xchg
leave
dec
in
jge
ror
inc
cmpsb
cmp
fdivrs
sarl
cmpsb
lods
decb
pop
std
xor
add
xchg
std
inc
pop
push
and
mov
jp
das
int
ja
or
pop
mov
cltd
cmpsb
cmpsl
sbb
sub
leave
int
leave
push
or
jp
repnz
rcrb
rolb
add
xchg
adc
sbb
pop
inc
outsl
and
or
cli
cltd
rolb
gs
add
inc
ficoml
dec
lock
jg
stos
mov
mov
push
and
outsl
test
mov
sbb
addr16
sahf
sub
addr16
negl
pop
rcrb
mov
push
lea
pop
bswap
testl
sub
ljmp
loope
cmp
or
pop
cmp
test
inc
int
jl
or
and
push
and
jl
sahf
movsl
pop
or
call
loope
jp
hlt
cmp
loope
mov
movsl
pop
xor
push
movl
hlt
enter
stos
dec
ret
jb
scas
sbb
adc
lea
sub
icebp
mov
jmp
xchg
divl
ja
scas
into
and
scas
cmpsl
jne
test
insl
es
xchg
ja
je
aam
outsl
fptan
pop
push
mov
sbb
std
roll
push
das
mov
mov
xchg
add
add
mov
movsb
ret
mov
jl
adc
ja
sub
jne
inc
cs
adc
sub
clc
fldenv
push
cmp
testb
movsl
sub
mov
cltd
mov
push
add
ret
enter
jp
adc
push
jo
add
je
fldcw
mov
dec
add
push
or
mov
rolb
rcl
inc
fnstcw
cmp
jg
int3
cmp
xor
and
and
cmpsl
mov
mov
xchg
push
dec
cmp
out
mov
xchg
call
out
fcmovnu
imul
pop
jno
cmpsl
movsb
jbe
cltd
ja
jl
lret
pop
repnz
cmpsl
mov
xchg
shlb
cmc
outsb
pop
arpl
xlat
push
test
iret
cmpsl
rol
xchg
leave
mov
les
rcll
mov
outsb
loopne
mov
xor
xchg
push
aad
enter
and
std
mull
pop
cmp
into
jmp
mov
insl
cwtl
scas
push
xor
cmpsb
enter
push
dec
pushf
xor
int
das
xchg
mov
mov
xor
mov
mov
mov
cmp
in
or
sar
adc
fadd
in
sub
mov
jl
push
inc
iret
pop
dec
ficomps
arpl
clc
xchg
cli
stos
cmp
fwait
or
dec
int3
sahf
cltd
push
mov
outsb
imul
les
adc
cmp
scas
jl
repnz
test
mov
cmp
pop
mov
or
inc
aad
jecxz
cmp
outsb
xchg
in
push
imulb
or
dec
push
cmp
dec
data16
pop
fcomps
shlb
test
stc
cmc
push
scas
cmp
loope
dec
adc
imul
lock
or
sub
xchg
pop
xchg
mov
mov
xchg
test
xchg
cmp
jp
sahf
lock
test
mov
stc
cmpsb
mov
inc
mov
or
xor
lods
lds
je
daa
pop
cld
add
mov
lods
pop
xor
les
test
jo
mov
sahf
loope
ds
mov
push
fbstp
setp
push
inc
jo
jne
sub
pop
cmp
popa
and
mov
push
xchg
icebp
jns
enter
cmp
or
sbb
leave
aaa
inc
cmpsb
inc
psraw
sbb
add
mov
add
repnz
arpl
movsl
dec
adc
inc
push
mov
mov
cmp
outsb
es
xchg
aad
daa
jo
aad
xlat
mov
and
mov
inc
and
inc
pop
fcoms
nop
sahf
stc
daa
loope
and
push
mov
jns
mov
fisubl
xor
loope
mulb
enter
and
mov
aaa
testl
popf
rolb
mov
loope
mov
test
jo
out
pop
pop
movsl
pop
lods
xchg
jo
das
hlt
cs
pop
mov
in
push
data16
popf
jns
cmc
adc
jecxz
stos
jmp
popf
adc
aaa
ret
xor
adc
or
les
imul
enter
dec
pop
mov
mov
mov
dec
fsubrl
and
pop
gs
clc
nop
pusha
shrl
rcrb
pop
arpl
movsl
xor
inc
push
adc
dec
jne
mov
or
cld
sbb
dec
rolb
pop
insb
cmpb
adc
xchg
push
sub
cmp
or
enter
aas
xor
jae
add
loopne
loope
cmpl
jmp
mov
stc
and
in
sbb
sbb
xchg
pusha
cmp
repz
ret
xchg
or
sub
jl
pop
ja
mov
pusha
mov
aas
scas
xchg
inc
or
sahf
mov
push
imul
fs
jno
outsb
xor
subl
sbb
or
lret
add
dec
push
rcrb
repnz
mov
loope
add
imul
pop
icebp
mov
imul
lahf
test
pop
adc
repz
lock
xor
mov
cli
ret
xchg
data16
mov
xor
sbb
movsl
mov
rol
leave
iret
mov
imul
jo
subl
je
mov
xchg
into
clc
pusha
jmp
jg
sarl
jp
pop
pop
clc
push
shl
cwtl
push
add
scas
xchg
jne
pop
jae
enter
insl
jns
stc
ljmp
add
es
in
mov
mov
or
repz
dec
scas
test
cmpsl
dec
faddp
fdivrs
test
jbe
fbld
dec
stc
xchg
pop
je
push
jno
sub
xchg
add
jg
mov
lods
aaa
push
push
mov
ljmp
enter
cmp
inc
mov
adc
test
in
loope
xchg
out
outsl
leave
jne
mov
fists
mov
or
mov
xchg
ljmp
imul
insb
lahf
pop
call
das
pop
int3
sahf
xchg
adc
cmp
out
pop
repnz
mov
aas
xchg
or
add
idiv
test
mov
push
iret
mov
pop
mov
xchg
fstpl
std
xchg
adc
mov
sub
test
push
cmc
adc
lds
loopne
fdivrl
dec
mov
mov
mov
in
xchg
loopne
and
inc
push
sbb
and
jb
aad
sbb
push
popf
popa
fsqrt
sub
icebp
leave
inc
xchg
dec
aad
pop
pop
pop
inc
repnz
movsb
mov
lea
inc
repnz
and
mov
sub
rcl
movb
jns
push
popa
std
push
int
mov
arpl
int3
push
jge
imul
xchg
enter
in
mov
pop
les
xchg
gs
jmp
lret
cltd
ja
cltd
push
lds
jl
xchg
mov
out
push
xchg
les
popf
mov
mov
push
test
out
mov
jb
in
ficompl
lods
ret
dec
sub
sub
rol
push
push
test
movsl
mov
movsb
jge
cmp
dec
dec
movsl
xor
dec
jmp
ds
sbb
mov
mov
and
testl
sbb
fwait
sahf
imul
ds
jno
mov
mov
mov
iret
jnp
ret
inc
lret
pop
sbb
jnp
shll
push
add
mov
push
add
ret
std
vandnps
sub
push
sbb
sub
or
in
movsl
jne
iret
test
jo
pop
lds
pop
lods
pop
insb
push
fsubl
and
js
movsl
pop
and
lods
sbb
push
aam
fld
bound
mov
lahf
iret
fucom
pop
mov
xor
rcrb
rorb
enter
pop
mov
sbb
adc
sbb
push
shlb
jb
dec
xchg
leave
dec
cmp
adc
dec
pusha
inc
inc
push
sbb
dec
icebp
fsubs
aam
mov
imul
xlat
mov
and
loope
xchg
popf
mov
mov
enter
sub
sbb
or
xor
loopne
imul
push
fistpl
dec
aam
push
int
mov
and
add
pop
lds
mov
mov
shl
in
sub
sub
sbb
imul
pop
jns
push
ret
dec
sub
pop
sarb
or
mov
mov
out
shlb
and
iret
mov
cmp
jnp
mov
dec
addr16
and
push
mov
mov
or
adcb
sub
push
movsl
jl
cld
push
dec
popa
lret
fxtract
cmp
inc
jmp
mov
jl
gs
gs
in
ret
or
sub
test
stos
test
and
pop
mov
inc
push
in
rorb
into
mov
push
mov
cmp
in
in
xchg
dec
int
push
mov
stos
or
mov
sub
jp
xchg
cmp
and
lods
cmp
xchg
pop
cmp
mov
scas
mov
shl
pop
mov
sahf
test
and
cmp
mov
push
cmc
imul
aas
test
add
cmpsl
mov
inc
pop
mov
aaa
insb
mov
sti
in
test
loope
jecxz
and
or
out
repnz
sub
loopne
pop
pushaw
push
inc
scas
sub
push
cmpsb
sub
add
ret
test
mov
out
fs
inc
stos
dec
mov
push
dec
dec
inc
je
test
sbb
push
pop
ds
shrb
xorb
push
add
mov
sub
out
push
sub
int3
push
lea
xchg
sbb
mov
push
int3
pop
insb
pop
cwtl
sarb
pushf
popa
mov
add
cmpl
cmp
loop
add
in
xchg
dec
sub
add
dec
pop
mov
xchg
leave
out
loope
sbb
or
stc
add
mov
adc
xlat
sub
jne
mov
nop
add
jg
nop
cmc
or
aad
fsub
jmp
cli
adc
jns
cmc
and
icebp
mov
inc
add
push
popf
push
ss
enter
out
pushf
adc
jae
push
push
clc
adc
fnstsw
xchg
mov
mov
les
xchg
scas
rorl
fsubs
and
mov
nopl
xor
push
mov
aam
add
push
push
insb
jb
sub
cwtl
or
push
loopne
push
mov
imul
mov
shl
pop
xchg
repnz
mov
shll
dec
cmpsl
mov
or
stc
lahf
mov
enter
out
xor
xchg
test
mov
jo
cmpsl
in
lods
or
add
jg
inc
imul
test
sub
cmp
jle
js
fmuls
mov
sub
in
rol
jno
mov
push
cmp
push
pushf
pop
pop
pop
out
mov
sub
out
enter
push
test
pop
lds
mov
cwtl
popf
movsb
jns
or
nop
lock
sahf
mov
adc
movsb
jo
insb
mull
xchg
cmp
mov
dec
cmpsb
das
mov
out
or
es
cmp
mov
mov
or
pop
mov
cmp
xor
mov
adc
push
cmp
mov
leave
mov
dec
fld1
push
iret
lds
xchg
test
xchg
leave
int3
cmpsb
pushf
cltd
fidivrs
addr16
xlat
cmp
mov
les
int3
pop
add
shlb
push
inc
into
daa
mov
imul
mov
xchg
aam
call
pop
pop
js
pusha
daa
ljmp
data16
xchg
or
mov
xlat
loope
insl
mov
mov
out
mov
std
vmptrld
jl
test
loope
les
insl
xchg
arpl
sub
rorb
test
orl
dec
xchg
adc
rcrb
xchg
clc
cltd
shlb
jmp
test
xchg
adc
xor
sbb
cmp
or
xchg
fldenv
dec
loope
xchg
test
sbb
mov
shll
mov
out
push
mov
pop
mov
ljmp
jecxz
ror
dec
mov
or
notl
mov
lret
pushf
jmp
cmc
rcr
jmp
bound
jecxz
mov
sbb
add
push
shll
push
outsl
jl
mov
cmpsl
inc
cmpsl
jnp
out
rolb
dec
rcrl
adc
rcll
stos
mov
jbe
sub
jne
push
in
bound
fisubrl
sub
addr16
xlat
sub
movsb
sub
sub
xchg
push
repnz
cmpsl
cmpsl
test
mov
lret
cmp
xor
sahf
icebp
int
mov
ret
add
roll
leave
loope
xchg
les
in
stc
mov
out
repnz
das
push
and
xchg
pop
rcrl
icebp
scas
cltd
enter
and
dec
cmp
and
test
stos
popf
ljmp
xchg
movsb
pushf
add
aas
scas
pop
or
sbb
enter
xchg
faddl
cltd
rcll
dec
cwtl
or
shrl
fmulp
cs
mov
or
adc
xchg
mov
xorb
jnp
outsl
je
ret
sub
mov
jp
adc
bnd
xor
mov
adc
inc
push
pop
jns
test
mov
mov
sarb
pop
call
cmpsb
inc
lret
push
fcmovnbe
adc
ja
adc
and
xchg
xchg
mov
push
int
add
outsl
add
fucomip
cwtl
sbb
movsl
ja
push
imul
pop
aas
push
int
js
push
imul
sub
dec
fadds
inc
pop
addr16
pop
ljmp
lret
jp
fwait
mov
loopne
inc
imul
adc
out
mov
loope
sarb
fstps
pop
cs
out
pop
aad
xchg
shrl
push
push
xchg
roll
ror
mov
repnz
jb
scas
sbb
bound
repnz
pop
and
adc
bnd
pop
mov
xchg
sahf
inc
sub
ja
add
hlt
adc
loopne
pop
push
push
stc
dec
fiaddl
lcall
jne
lods
dec
pop
cmpsb
leave
inc
aaa
push
push
stos
inc
jns
stos
cmp
jecxz
dec
les
inc
jecxz
lds
sub
inc
ja
pusha
or
xorb
insb
shll
sbb
inc
lcall
sbb
add
cmp
pop
ret
cmpsl
mov
mov
xor
cmpsl
les
les
mov
pop
mov
add
cmpsl
hlt
mov
cli
add
adc
push
inc
pop
lahf
inc
leave
fs
sub
jno
add
sbb
push
inc
enter
jmp
stos
mov
cmp
mov
add
adc
pop
pusha
cmp
rcr
leave
jg
fsubl
adc
rcrb
popf
push
stos
mov
psraw
jmp
popl
add
daa
lods
jnp
das
popa
jbe
sub
xchg
mov
or
sub
sbb
test
out
fidivs
xchg
js
and
push
mov
sbb
scas
dec
pop
js
jae
push
cltd
aad
pop
mov
xchg
and
cs
cld
repnz
ficoms
stc
scas
cmp
xchg
pop
js
dec
outsl
dec
int
fldenv
pop
ret
jmp
fbstp
mov
int
in
mov
shrb
dec
mov
push
rep
xchg
jmp
pop
mov
jbe
mov
fwait
adc
rcll
mov
repnz
fs
bound
clc
mov
stc
jmp
icebp
sbb
mov
pop
xchg
rorb
jmp
inc
lods
fdivrl
mov
subl
mov
add
pop
push
mov
xor
rol
leave
loope
cltd
sub
and
std
ss
adc
mov
sbb
push
loopne
mov
jmp
dec
fiadds
sub
enter
test
cwtl
and
sysenter
inc
pop
cmpsl
sub
cli
pop
scas
je
jo
and
mov
cltd
xor
ljmp
sub
push
sbb
dec
mov
int3
mov
movsl
adc
sub
mov
push
dec
je
add
shrb
lret
mov
fs
cld
adc
or
mov
aad
leave
stc
sbb
or
shr
pop
stc
dec
xchg
sub
xchg
jle
pop
test
sub
xor
push
call
mov
pusha
es
sti
xchg
cli
clc
mov
fstp
or
loope
inc
and
mov
dec
xchg
fbld
xchg
and
mov
push
es
lods
mov
insb
sub
int
or
mov
jno
cmp
mov
add
cwtl
push
iret
lahf
jno
outsb
and
je
mov
pusha
aad
leave
sub
insl
add
inc
pop
sub
mov
xor
jge
pop
ljmp
arpl
inc
cwtl
call
ljmp
in
dec
dec
mov
xchg
ret
cli
xchg
repnz
les
jmp
jo
test
mov
call
xchg
mov
add
frstor
cltd
sbb
fldenv
add
pop
addl
sbb
outsl
cltd
inc
aaa
inc
fsts
sub
rol
pop
popf
inc
xor
adc
inc
iret
out
pop
cmp
inc
or
sti
or
data16
cwtl
push
dec
cmp
pop
cmpl
repz
xlat
xchg
clc
movsb
rcrb
mov
push
data16
pop
inc
jne
sarl
xor
aam
mov
sub
mov
mov
aam
dec
movsb
popa
cmp
subb
dec
repz
sub
jnp
inc
mov
jecxz
xlat
cmpsl
xchg
pusha
out
mov
jno
inc
les
cltd
jl
adc
outsl
pop
lret
ret
mov
and
pop
test
iret
xor
mov
mov
mov
pop
sub
repnz
jmp
sahf
mov
idivl
outsb
xchg
testl
push
fidivs
mov
inc
lcall
in
push
push
ret
pop
pop
pop
mov
jmp
inc
inc
frstor
vandnps
test
stos
inc
sub
xchg
push
imul
test
or
popf
push
test
xchg
arpl
pop
and
jle
or
adc
lea
inc
inc
sub
push
addr16
dec
mov
mov
shrl
std
test
cmp
xchg
lahf
adc
jge
xor
lds
xchg
call
cli
push
fadd
into
rcl
ljmp
xchg
icebp
cs
cmc
sub
aad
xchg
xchg
cltd
sub
das
mov
repnz
rol
das
test
jbe
es
fldt
into
push
ds
sub
sub
xor
add
adc
test
xchg
loopne
lret
les
gs
sub
lds
movl
or
xchg
std
ds
sti
mov
mov
adc
imul
lcall
adc
cs
inc
outsb
loope
orb
mov
sub
lahf
out
in
arpl
ret
hlt
imul
insw
pop
mov
popf
aam
pop
in
mov
push
mov
hlt
hlt
insl
test
lret
repnz
xlat
gs
je
divl
fsubrs
ret
and
sahf
cwtl
pushf
leave
inc
fistps
pop
or
inc
mov
cmp
inc
fsts
lds
enter
addr16
rolb
mov
sahf
lock
push
nop
add
mov
shrb
pop
inc
jl
cli
sub
push
test
mov
into
pop
pop
and
xchg
in
pop
int3
jg
aam
imul
sub
or
mov
or
lahf
and
test
shll
mov
mov
enter
cli
jmp
clc
rolb
arpl
lcall
nop
adc
adc
xchg
mov
lods
movb
loope
je
aas
icebp
out
cmc
mov
loope
and
pop
cs
dec
cwtl
push
push
xchg
sahf
shll
jmp
push
stos
xor
aas
ret
or
xor
fisttpl
cwtl
stos
mov
dec
mov
jne
pop
fsubs
mov
lods
stc
addl
pop
push
test
xchg
adc
xor
push
adc
sahf
lds
xor
daa
scas
inc
jmp
jne
ret
subb
jp
mov
mov
test
in
and
in
dec
cmp
movl
add
xchg
les
inc
int
out
stos
shll
dec
pop
pop
adc
aam
aas
bswap
jle
cltd
lods
sub
pop
scas
movsb
dec
adc
ret
addr16
ljmp
and
test
outsl
mov
popf
mov
rcrb
mov
add
insl
neg
adc
dec
ret
mov
fstps
aaa
pop
xchg
sbb
adc
lcall
out
repnz
divb
addb
mov
andb
sbb
lahf
push
xchg
xor
mov
idiv
stc
push
cmpsb
mov
aad
dec
sti
pop
xor
mov
arpl
xchg
cwtl
mov
call
cwtl
iret
push
stc
or
pop
add
dec
jle
pusha
jnp
jae
cmp
mov
popa
pop
loopne
cltd
pop
ret
adc
sbb
dec
scas
cli
les
sub
pop
sbb
enter
das
cwtl
lret
bound
mov
mov
fcoms
std
xlat
cli
mov
aam
xor
pop
stc
aas
cltd
nop
xlat
loopne
movsl
jmp
cwtl
pop
pop
cli
lds
inc
push
gs
cmpsl
mov
loopne
adc
pop
xor
dec
push
cmp
pop
lret
xchg
pop
jnp
sbb
rcrl
dec
fidivs
mov
jmp
sub
pop
push
cwtl
data16
into
out
jns
mov
sbb
cmpsb
pusha
fnstenv
movl
bound
pushf
adc
mov
or
push
mov
or
aaa
sahf
xchg
mov
push
or
ret
lds
sub
js
mov
in
bnd
cltd
inc
lods
loope
push
jmp
imul
mov
ljmp
fsubr
out
add
cmpsb
fmull
loope
out
push
out
test
pop
xchg
cmpsb
cmpsl
pop
out
pop
mov
pop
inc
sti
xchg
out
das
pop
test
mov
xchg
clc
dec
dec
out
xchg
mov
movsl
push
mov
repnz
push
pop
outsl
push
dec
add
popf
sbb
popa
add
ror
test
movsl
gs
ds
push
repz
xchg
lds
fldenv
or
ror
mov
movsl
gs
test
xor
sarl
push
push
test
popa
add
ror
test
movsl
gs
inc
popa
push
repz
xchg
popf
xchg
push
popa
or
ror
mov
movsl
gs
or
into
dec
imul
outsb
pop
repz
movsl
gs
mov
call
push
es
xchg
iret
popa
pop
add
enter
or
movsl
gs
inc
popa
or
fsubr
mov
lds
in
fsubs
cmp
jg
jne
cmp
add
test
jle
add
leave
fadds
adc
cmpsl
xchg
movsl
pop
push
jmp
or
mov
inc
test
mov
es
adc
aam
in
cmp
scas
push
jne
cmp
add
test
dec
test
test
pop
fadds
adc
cmpsl
xchg
movsl
pop
push
jmp
or
mov
pop
pop
mov
push
loopne
sbb
aam
in
cmp
das
push
jne
cmp
add
test
push
test
test
xchg
fadds
adc
cmpsl
xchg
movsl
pop
push
jmp
or
mov
xchg
mov
pop
loopne
and
aam
in
cmp
movl
xlat
xlat
rolb
movl
outsb
fadds
adc
cmpsl
xchg
movsl
pop
push
jmp
or
mov
pop
test
mov
mov
add
and
imul
push
jne
cmp
add
test
ja
add
leave
pop
fadds
adc
cmpsl
xchg
movsl
pop
push
jmp
or
mov
push
cld
popa
sub
jle
jbe
xchg
ja
adc
insl
out
pop
cld
inc
cmp
sub
lock
pusha
jo
loopne
icebp
xchg
popa
jno
loope
ljmp
jmp
pop
imul
aad
test
aad
mov
sbb
stos
mov
pushf
mov
sub
mov
sahf
mov
das
mov
and
mov
and
mov
jecxz
cli
fbld
lock
pusha
daa
jo
loopne
icebp
daa
popa
daa
jno
loope
ljmp
xchg
xchg
imul
insb
mov
pop
mov
out
mov
pop
jecxz
add
repnz
test
add
xchg
mov
testb
add
cmp
add
je
mov
mov
mov
mov
inc
ljmp
js
outsb
jo
or
sub
mov
in
repnz
cmpsl
repnz
inc
pop
or
xchg
test
je
andb
cld
aaa
int
sub
ficompl
in
mov
popf
mov
mov
jecxz
xor
xchg
gs
mov
and
add
stos
add
js
xor
add
mov
cmp
pop
mov
sub
jnp
mulb
aas
outsl
lahf
mov
lods
aas
sbb
cltd
aam
inc
ret
movsl
shrl
shll
ljmp
inc
cmpsb
push
dec
push
mov
inc
mov
loopne
outsb
mov
mov
mov
add
imul
dec
mov
aad
aaa
cmp
ja
pop
cmp
cmp
cmpsb
mov
pop
cmpsb
mov
push
mov
mov
xor
and
out
jo
out
mov
popa
jecxz
jnp
xor
pop
mov
repnz
leave
ljmp
and
cmpsl
mov
push
idivl
cwtl
sub
mov
ljmp
das
inc
cltd
mov
out
testl
test
popf
test
ds
sub
mov
mov
mov
ret
sbb
mov
pop
push
ret
lret
add
xor
push
ret
sbb
mov
pop
push
ret
mov
push
ret
sbb
mov
pop
push
ret
sbb
mov
ret
out
fcomps
xor
pop
push
ret
sbb
mov
sbb
fcomps
mov
pop
push
ret
sbb
mov
pop
push
popf
and
cmpsl
add
push
jo
push
ret
sbb
mov
pop
push
ret
mov
push
ret
sbb
mov
pop
push
ret
sub
pop
pusha
jns
mov
dec
ljmp
imul
popa
rolb
ret
repz
inc
pop
lds
bound
into
lds
bound
mov
jg
xor
inc
mov
rol
add
dec
fldl
push
dec
fidivrl
outsb
mov
popl
sub
inc
push
push
movsl
ret
push
jmp
les
movl
pop
pop
inc
leave
xchg
fadd
adc
cmpsl
inc
imul
jo
pusha
dec
enter
dec
test
test
scas
ret
imul
rol
add
inc
fnstsw
pop
inc
leave
push
fadd
adc
cmpsl
inc
imul
jmp
movl
enter
dec
leave
aaa
mov
push
jo
pusha
outsb
ret
rolb
mov
inc
fst
test
inc
leave
pop
fadd
adc
cmpsl
inc
imul
inc
xlat
cmpsb
rol
add
dec
fstl
pop
dec
leave
ja
and
xor
test
imul
ret
movsl
gs
loopne
popa
repz
inc
mov
popf
inc
popa
movb
enter
ja
jmp
call
enter
fstps
popf
inc
sbb
lock
ret
imul
ret
jne
pop
inc
dec
sub
testl
cmpsl
inc
imul
inc
xlat
movl
enter
dec
leave
daa
mov
push
pop
inc
and
ret
imul
ret
add
enter
mov
loopne
popa
call
es
inc
fldenv
movl
sub
dec
fnsave
mov
mov
or
mov
imul
ret
add
enter
mov
loopne
popa
testl
adc
sbb
aam
xchg
jo
test
aam
xchg
jno
jmp
push
jmp
imul
in
aad
test
aad
test
rclb
repz
sub
pushf
xlat
lods
xlat
sbb
xlat
lods
xlat
push
xlat
xlat
sahf
xlat
scas
xlat
pop
xlat
das
xlat
lahf
xlat
scas
xlat
and
xor
mov
xlat
xor
mov
sub
sbb
and
jecxz
pop
popa
fidivs
loope
ljmp
pusha
jmp
pop
pusha
imul
in
pusha
pop
pusha
insb
pusha
fsubl
pusha
pop
pusha
insl
pusha
frstor
pusha
pop
pusha
outsb
pusha
fisubs
pusha
pop
pusha
outsl
pusha
fildll
cli
sbb
push
dec
inc
xchg
dec
sub
inc
add
mov
dec
mov
lcall
xchg
fwait
xchg
stos
xchg
sbb
sub
pushf
mov
mov
xlat
fld
xchg
sbb
bound
leave
out
imul
ret
icebp
pop
dec
mov
loopne
dec
mov
test
add
push
test
pusha
leave
out
inc
ja
xchg
imul
in
sub
xchg
add
jo
enter
mov
add
mov
push
jo
test
movsb
xchg
jg
dec
inc
cmp
rcrl
add
bound
enter
lcall
in
mov
into
inc
fstl
lock
sbb
mov
shrl
jle
stc
cmp
int
and
dec
dec
xchg
fistpl
jns
ds
popf
push
aad
sub
adc
addr16
pop
cmp
pop
sbbb
ljmp
imul
ljmp
ja
movsl
jns
or
popf
ljmp
inc
rorb
outsl
lods
fidivl
xor
imul
xlat
cmpsl
shrb
clc
aad
dec
clc
cmpsb
imul
cltd
icebp
push
mov
push
inc
inc
cmc
lock
jmp
and
pop
scas
call
lea
inc
aaa
mov
ret
out
lds
xchg
movsl
xor
adc
in
enter
and
mov
out
ret
jns
sub
and
mov
nop
sbb
push
cwtl
jp
mov
sbb
push
pushw
ret
outsb
test
inc
xchg
sbb
rolb
mov
mov
adc
mov
ret
sbb
mov
pop
push
ret
sbb
js
es
ret
sbb
mov
pop
push
ret
sbb
mov
neg
sbb
mov
pop
push
ret
sbb
mov
pop
fcoms
lcall
pop
push
ret
sbb
mov
pop
push
ret
adc
shlb
push
ret
sbb
mov
pop
push
ret
sbb
js
es
ret
sbb
mov
pop
push
ret
sbb
mov
neg
sbb
mov
pop
push
sub
ljmp
std
testl
cli
mov
cmp
dec
sbb
pop
jmp
and
inc
bound
xchg
cltd
mov
pop
aad
or
mov
xchg
mov
out
jb
or
jno
inc
stos
pop
leave
lods
cmc
add
in
arpl
mov
pop
cwtl
mov
push
xchg
pop
testb
das
inc
inc
lahf
cmp
dec
ja
dec
xchg
inc
jnp
daa
jns
dec
sahf
lret
inc
movsb
sub
outsl
inc
mov
adc
add
mov
iret
dec
pop
fisttpll
lahf
fsubrp
adc
sarb
ffree
mov
cmp
lock
fld
or
cltd
adc
ljmp
push
xchg
divl
pop
jns
sbb
inc
adc
aad
out
add
fdivs
int3
push
popf
push
inc
popa
jnp
mov
adc
adc
xor
jbe
or
or
movsl
add
mov
cmp
movsl
sub
fchs
icebp
scas
enter
lods
xchg
iret
nop
pop
sub
mov
mov
and
adc
mov
cmp
sub
loopne
cmp
sbb
fsubs
lret
dec
iret
mov
mov
jecxz
es
fsubs
es
mov
loopne
mov
daa
stos
mov
mov
ret
push
popf
test
sub
out
imul
lds
and
xchg
pop
insb
es
xchg
xchg
add
cli
mov
and
out
inc
inc
jno
jp
out
aad
rcl
jp
inc
daa
cmpsl
add
rorb
sbb
outsb
sbb
push
and
xchg
cmpl
xchg
test
mov
or
rcll
rorl
mov
push
jnp
pop
decl
int3
cmpsb
xchg
clc
xor
adc
inc
fisttps
sub
dec
sbb
cmovne
xchg
fisttps
mov
popf
daa
rorl
cmp
dec
les
xor
pop
leave
rorb
pop
mov
cmp
adc
das
mov
fmuls
in
jle
shrb
in
lahf
shll
xor
mov
lret
sub
seto
insl
mov
cmp
mov
sbb
test
add
cmp
mov
cltd
test
sbb
movsb
xchg
aam
scas
or
adc
add
ret
sub
movzbl
sbb
or
mov
push
jbe
mov
adc
adc
pop
jnp
mov
or
sbbb
orb
loopne
pop
mov
jbe
out
mov
jecxz
sub
cmpsb
call
sahf
clc
in
aas
xlat
loope
cmp
adc
adc
adc
cli
cmpl
mov
jmp
iret
add
mov
inc
jg
gs
and
jne
inc
lahf
push
xor
das
inc
sbb
xchg
mov
into
xchg
sub
pop
pop
xor
push
gs
lea
gs
push
pop
les
subb
pusha
popf
mov
test
mov
iret
push
out
jb
xchg
mov
sub
mov
inc
mov
int3
pop
orb
pusha
movsw
xchg
dec
inc
loope
das
xor
xchg
cmpsl
nop
rcll
sbb
dec
push
xchg
enter
sub
movsl
pop
push
test
dec
mov
add
mov
inc
xchg
out
jg
xchg
roll
cltd
cwtl
xor
subb
sbb
xchg
stos
fsubs
int3
dec
jo
bound
mov
xchg
mov
out
fcomps
push
jecxz
dec
loop
les
ret
cmp
adc
and
jo,pn
xchg
push
push
addr16
xchg
mov
pop
sub
sbb
lods
imul
fsubrs
cs
testl
or
mov
fstp
bound
add
ret
aad
stos
mov
addr16
adc
int
jp
into
imul
leave
xor
cmp
push
cwtl
xlat
loope
add
cmp
leave
movsl
mov
ss
into
loope
mov
ss
loopne
cltd
inc
fnstcw
sub
mov
cld
pop
call
movsl
jge
jg
out
xor
fldcw
popf
movsl
cmc
cmpsb
ss
push
fisubl
mov
mov
inc
xchg
negb
popf
movsl
or
xlat
loope
sbb
add
movsl
imul
rclb
inc
imul
ret
nop
loopne
rcll
addr16
loopne
cltd
add
outsb
icebp
faddp
mov
dec
leave
addr16
and
jne
loopne
cmp
in
rclb
dec
arpl
mov
movsl
and
int
xchg
imul
popa
stc
xchg
ret
hlt
xchg
gs
scas
lock
mov
es
cmp
rclb
xor
je
call
in
leave
cmp
hlt
out
push
mov
imul
test
movsb
dec
popa
sarl
push
dec
imul
mov
test
cmpsb
inc
lds
nop
xchg
shr
cmp
mov
pop
pop
ret
xor
es
mov
push
cmpsb
addr16
addr16
scas
mov
mov
or
xchg
movsl
repz
mov
mov
out
mov
mov
xor
lret
xor
mov
mov
adc
mov
pop
pop
mov
mov
popa
out
mov
or
pop
daa
mov
add
mov
push
inc
insb
aam
imul
cmp
test
popf
or
test
sub
mov
mov
loopne
mov
test
inc
push
les
movsl
or
sbb
cmc
popa
bound
rol
mov
xlat
pop
mov
mov
xchg
mov
mov
mov
icebp
add
test
mov
cltd
push
mov
pop
rcrl
fsubrl
loopne
data16
xor
pusha
lret
fadd
sbb
addr16
xchg
lds
imul
pop
aam
hlt
mov
or
jmp
jl
sbb
add
icebp
mov
sbb
int3
imul
addr16
sbb
mov
imul
stc
pop
loop
jg
mov
inc
pop
mov
das
mov
loopne
test
popl
cmp
js
hlt
jle
fisttps
sbb
pop
xchg
xlat
pushf
inc
sbb
inc
xlat
xchg
loopne
gs
movsl
sub
clc
and
mov
sti
aas
add
out
or
lahf
lds
test
xlat
jns
add
loopne
sarb
adc
leave
loopne
fcoms
jns
pop
xor
mov
add
push
mov
mov
cli
cmc
out
xor
pop
mov
ljmp
int3
mov
hlt
orb
mov
dec
in
sahf
jns
fcmovne
cmp
test
mov
inc
test
pop
in
repnz
push
rol
jno
sti
dec
inc
xlat
cmp
sub
mov
or
std
push
iret
push
xchg
xchg
add
cld
push
lret
fstpt
insl
ret
ds
insb
mov
mov
xchg
cmp
mov
loope
sub
lods
cld
cmp
sbb
push
rolb
call
mov
or
mov
sub
mov
xchg
mov
es
or
loope
push
loope
je
inc
inc
arpl
pop
int
hlt
cs
test
mov
addr16
aad
loop
push
jge
aam
lds
shrb
jno
cmp
push
std
popa
fnstsw
lahf
or
enter
nop
dec
pop
push
and
push
push
push
sahf
test
repnz
test
lcall
mov
out
jae
dec
andb
or
inc
je
xchg
xchg
stos
mov
cmc
subb
jp
inc
data16
xchg
dec
ja
dec
jb
jo
cmp
fidivs
mov
jge
pshufw
test
push
sub
push
adc
push
sub
imul
imul
push
adc
not
arpl
int
mov
int
cmp
out
jns
stc
mov
pushf
xchg
out
int
xchg
scas
ja
in
outsb
cltd
mov
push
pop
mov
cwtl
in
pop
daa
mov
cmp
daa
and
pop
mov
dec
sub
insl
mov
jecxz
sub
mov
jb
inc
stc
sub
iret
dec
push
pop
shrb
ja
dec
leave
jle
js
jg
push
dec
ret
in
and
xor
add
mov
popa
push
xchg
test
xchg
sub
mov
stos
lds
add
inc
mov
fidivrs
sahf
push
jp
cmc
orb
ljmp
insb
ret
test
shlb
sar
les
js
dec
sbb
clc
test
das
outsl
xchg
and
imul
cmc
mov
lods
stc
add
cmp
xor
jb
das
xor
sub
jno
mov
dec
adc
pushf
add
xor
jle
mov
mov
cmp
testl
sbb
mov
out
xchg
xor
add
xchg
inc
sahf
push
ja
jmp
test
jmpw
popa
dec
jns
push
fdivrs
add
mov
int3
xchg
mov
popa
enter
bound
pop
lret
sub
cmpsb
jo
xor
in
incl
popa
sbb
sbb
jo
fs
or
adc
dec
nop
mov
outsb
mov
pop
clc
or
enter
test
arpl
pop
rol
arpl
mov
iret
cltd
mov
cltd
push
xchg
cmp
or
adc
loopne
mov
movsl
rcrl
and
xor
adc
adc
stos
push
mov
rcrl
push
add
or
push
pusha
call
stos
xlat
sub
dec
jae
fnstenv
xor
mov
leave
xlat
stos
jle
mov
pop
xlat
fldenv
rclb
loopne
gs
decl
in
cmc
lods
fidivl
and
fldenv
jecxz
leave
jge
push
and
mov
fiaddl
mov
cmpsl
ret
shlb
or
rcr
add
cmpsl
push
lods
test
or
cmp
mov
hlt
jmp
pop
test
xchg
cmc
pushf
jge
movsl
sahf
leave
inc
dec
popf
mov
jmp
inc
pop
add
ret
pop
ds
inc
cmp
jns
push
mov
mov
jmp
sbb
pop
cwtl
loopne
pop
ret
ret
xchg
orl
fistpll
sarl
rorl
sub
push
add
cmpsb
or
inc
sbb
cmpsl
or
ficoml
popa
add
push
mov
inc
mov
fimuls
push
in
std
push
jns
jg
sub
or
pop
adc
es
sar
in
xchg
cmpsl
imul
cwtl
push
in
xor
stc
mov
es
sar
fistps
loope
mov
fsts
shr
dec
mov
je
fimull
test
movsb
daa
mov
bnd
mov
pop
jno
mov
and
imul
jae
movsl
xchg
fistpll
xchg
es
inc
test
iret
sarl
or
xlat
ja
out
pop
aaa
jle
xchg
popa
or
popf
out
js
mov
cmovl
mov
xchg
add
icebp
stc
xchg
xlat
ja
dec
mov
pop
lock
stc
xlat
shl
mov
in
call
or
lcall
and
ret
add
mov
xor
test
pushf
mov
fdivrp
mov
out
pop
xchg
push
cmp
ja
rcrl
pop
stos
xchg
mov
and
mov
or
movsb
and
or
js
aad
push
mov
adc
in
mov
imul
jge
push
out
in
outsb
xchg
mov
outsb
lcall
mov
dec
mov
out
push
sub
insb
jae
mov
fsubrl
jns
leave
mov
sti
xor
xchg
popa
inc
icebp
movl
dec
out
sbb
fcompl
pop
dec
leave
jmp
and
adc
imul
fwait
adc
out
pop
cmpsb
jo
or
arpl
mov
into
leave
sub
std
adcb
mov
loope
pushf
ds
int3
pop
ret
xlat
jns
sbb
ds
arpl
pop
jmp
cmp
mov
or
cmpsl
jnp
aaa
ja
addr16
inc
jns
mov
jae
negb
imul
adc
and
pop
adc
pusha
outsb
lahf
movb
loopne
fwait
xor
mov
jno
or
push
lds
test
pushf
clc
xor
pop
imul
movsl
or
mov
pop
daa
ljmp
out
scas
out
sub
inc
cmp
icebp
test
addr16
cmpsl
outsl
sub
pop
add
cmp
lret
cmpsb
out
popa
push
cs
data16
jae
pop
xchg
icebp
adc
or
and
mov
push
xchg
push
cmp
mov
rclb
and
jmp
imul
leave
ret
iret
push
jp
call
adc
mov
mov
mov
mov
daa
cmpsb
call
adc
cmp
jns
push
sbb
or
adc
cli
fcoml
sub
lock
push
xchg
adc
push
or
fcomip
mov
imul
push
addr16
repnz
push
mov
inc
repz
xchg
js
scas
cmpsb
imul
jle
addr16
mov
cmpsb
jo
or
out
int3
popa
jmp
cmpsb
sbb
leave
arpl
cmp
fldenv
pushf
outsl
cmp
and
divb
cmp
mov
mov
adcl
mov
sbb
sub
pop
jae
sub
fld
popa
test
aas
sbb
leave
add
sub
mov
loope
imul
das
inc
pop
fstps
adc
pop
out
mov
nop
mov
xchg
test
sbb
fimull
inc
test
pushw
bound
dec
mov
lds
cwtl
aas
mov
jge
inc
jne
dec
into
or
adc
dec
mov
clc
pop
ret
push
push
mov
xchg
clc
sar
sbb
dec
or
jle
sbb
enter
mov
imul
leave
movsl
shrl
mov
shrl
mov
pop
inc
adc
and
or
fisubs
push
xchg
popa
leave
inc
xchg
popf
cmp
out
fwait
xchg
jae
xchg
aas
aam
ret
in
ljmp
cltd
mov
push
rcr
mov
mov
aad
pushf
inc
shrb
mov
lret
ror
mov
aam
mov
lahf
sub
insb
shll
jb
dec
push
cmp
mov
mov
xlat
dec
inc
int3
jge
mov
loope
data16
test
mov
pop
imul
jge
pop
adc
lods
in
cmpsl
ja
xor
insb
inc
bound
aam
inc
vmovhpd
in
popa
shl
inc
cltd
fcmovnbe
sbb
ret
imul
jnp
add
sbb
cmpsl
mov
xchg
int3
loope
jmp
dec
dec
pop
loopne
push
xchg
inc
sar
lret
xchg
cmc
das
orl
or
xlat
orl
jno
mov
jnp
ss
add
ja
adc
fnstenv
outsl
scas
cwtl
outsb
sahf
sbb
jne
jne
fdiv
icebp
inc
dec
cltd
jmp
ljmp
cmp
cs
dec
sub
int
mov
lea
inc
fdivs
push
jo
sbb
fsubl
jbe
popa
je
jg
sbb
nop
add
pop
ss
jmp
or
or
or
movsb
mov
into
push
es
call
mov
addr16
scas
inc
movl
sub
sub
jl
je
test
int
mov
and
insl
and
lret
or
pop
inc
ds
or
xchg
leave
xor
push
sub
add
push
inc
pushl
sub
lret
leave
sub
cmp
movsl
mov
mov
mov
mov
hlt
mov
or
fnstsw
xchg
ljmp
push
test
sbb
jno
cli
fbstp
sbb
cmp
out
add
inc
mov
mov
lods
into
rolb
push
pop
dec
xchg
out
stc
sub
and
ss
insb
sub
out
adc
mov
out
mov
loopew
jnp
mov
dec
lret
mov
notb
sub
aas
cmpsb
test
inc
add
stc
mov
inc
sub
sarb
sbb
iret
xor
dec
inc
mov
sbb
in
mov
and
sbb
add
imul
sti
sub
mov
cmp
mov
and
mov
dec
mov
adc
sbb
push
pop
cli
mov
xchg
dec
test
push
pop
scas
fcmovne
inc
mov
push
not
es
repz
fsubl
jmp
loopne
fmull
cmp
adc
ret
xchg
cwtl
or
pop
mov
pop
xor
flds
std
xor
sub
sbb
popa
out
xchg
loop
int3
cltd
ljmp
xlat
gs
pop
dec
fisubrs
cli
push
xor
idivb
js
addr16
or
jg
mov
ja
sub
or
gs
cmpsl
mov
mov
push
fsts
das
add
incb
fwait
lods
imul
mov
ret
jo
mov
cmp
mov
movsl
mov
scas
mov
in
scas
shr
hlt
rcll
push
or
hlt
jnp
leave
push
inc
ss
dec
dec
lds
scas
dec
adc
aaa
fidivl
pop
ss
loop
stos
bound
cmp
movsb
fmuls
outsl
mov
jge
aad
mov
popa
js
mov
xlat
mov
test
and
aas
push
fnstcw
mov
jmp
cmp
gs
gs
popa
mov
shlb
imul
cmp
xchg
xor
enter
ret
sub
add
cmp
mov
mov
aam
dec
cmpsl
xor
bound
inc
rorb
jmp
scas
jmp
das
xchg
test
scas
shrl
dec
lods
cltd
sub
jne
aad
es
mov
cltd
mov
loopne
gs
popf
sub
xor
cmp
mov
pop
or
jge
add
jno
daa
xchg
cmc
and
sub
loopne
aaa
popf
or
adc
inc
rcrb
mov
mov
and
ret
xchg
mov
pop
scas
push
scas
inc
out
jne
sbb
mov
xchg
pushf
adc
and
inc
sti
or
shrl
enter
pop
pop
mov
test
or
sbb
cmp
jl
cld
inc
xor
call
mov
pop
sub
imul
enter
hlt
aam
sahf
cmc
xchg
jno
ret
xchg
push
fbstp
stc
dec
movsb
arpl
or
sbbl
inc
cmpl
or
enter
add
pop
mov
mov
adc
aad
pop
std
jno
dec
and
jno
pop
repz
adc
lock
xor
popf
mov
lds
pop
dec
movb
pop
outsl
mov
mov
pop
fs
push
push
test
xchg
xchg
nop
in
shl
mov
cmp
loopne
mov
jne
and
push
in
sub
imul
mov
loope
pop
add
inc
xchg
pop
sub
sti
sub
repnz
test
gs
decb
frstor
mov
jg
lret
faddp
push
jbe
jmp
dec
outsl
data16
lea
daa
xchg
shll
mov
aam
pop
pop
push
xchg
pop
push
loope
mov
mov
rolb
loopne
inc
je
cmp
mulb
push
jne
repnz
xor
xor
mov
mov
jmp
fidivrl
pop
lcall
in
pop
aam
sbb
test
mov
sbb
sbb
cld
mov
add
rcl
and
lock
stos
adc
loope
enter
cli
pop
ret
pop
fisttpll
push
pop
pop
cltd
add
inc
xorb
add
clc
and
mov
loope
aam
inc
js
or
mov
push
push
pop
inc
mov
jbe
sub
sbb
adc
mov
sar
sbb
inc
fstl
cltd
imul
lds
sbb
repnz
in
inc
mov
lret
push
mov
stos
jmp
inc
or
inc
shl
cmc
pop
and
jmp
add
mulb
jne
out
roll
aaa
dec
xchg
jb
xor
add
jb
mov
cmp
movsl
frstor
rcll
mov
jmp
pop
fwait
aad
cli
xchg
push
test
fnsave
not
cltd
push
cmp
jbe
adc
push
scas
frstor
jp
fadds
inc
dec
inc
lock
fisttpll
mov
movsl
and
dec
or
sub
stos
rorb
arpl
mov
icebp
add
fmull
mov
cli
dec
and
push
addl
ljmp
mov
xlat
fdivrs
mov
ret
pop
xchg
sub
xor
inc
imul
push
inc
ret
jne
cmp
jecxz
push
xlat
xchg
lahf
fdivl
cwtl
cwtl
pop
call
pop
inc
adc
jmp
cli
mov
fnstenv
cmp
daa
lds
xchg
pcmpeqw
xchg
iret
imul
out
pusha
je
xchg
mov
jecxz
cmp
pop
leave
mov
aad
add
lods
mov
jno
or
jb
mov
sar
unpckhps
or
mov
rolb
insl
out
and
mov
mov
movl
jne
inc
test
fisubs
jl
dec
dec
cli
pushl
jbe
out
mov
mov
stos
jbe
or
or
stc
arpl
into
test
jne
lds
ss
cmp
pop
mov
pusha
insl
add
cmp
fwait
jbe
push
dec
xor
fcoml
inc
adcb
mov
xchg
adc
jge
push
ret
popf
pop
jb
inc
std
das
popf
adc
test
xor
icebp
in
rcrb
cmp
add
jne
xchg
in
mov
aam
add
loope
cld
pop
mov
mov
or
mov
sbb
pop
cmpsl
loopne
sbb
lahf
out
test
push
fnstcw
loopne
pop
cmp
leave
lret
xchg
out
jo
add
aam
leave
push
cmpsl
imul
ficoms
mov
xlat
iret
in
outsl
test
push
xor
jb
or
inc
sub
xchg
push
scas
jg
ret
push
subl
inc
push
push
xchg
outsb
out
arpl
call
adc
imulb
push
push
in
pop
stos
js
in
popf
pop
dec
adc
pusha
dec
pop
pop
inc
enter
sub
push
ja
sbb
call
cs
in
push
loope
imul
mov
movsb
imul
test
sub
das
xor
cwtl
lcall
in
add
jnp
jbe
cmpsl
xchg
fsubrs
mov
fsub
jmp
and
inc
in
lcall
add
mov
testl
cld
pop
arpl
imul
and
add
enter
or
movsl
gs
sbb
mov
scas
jo
lods
pop
jo
loopne
cs
stc
scas
lods
pop
js
loopne
xchg
test
stc
scas
fisubs
pop
mov
loopne
cs
stc
scas
inc
lods
pop
dec
add
ret
test
stc
scas
outsb
lods
pop
jle
loopne
jo
test
stc
scas
outsb
lods
add
lods
add
lods
add
lods
add
lods
mov
clc
scas
es
ret
add
imul
in
rolb
gs
movsl
pop
push
jmp
scas
es
loopne
fisubs
repz
mov
in
jne
xor
cmp
ret
hlt
jg
insl
add
push
mov
rorb
clc
add
imul
jbe
cmp
pop
ret
dec
imul
clc
or
cmpsl
or
jmp
add
push
mov
stos
sub
fnstsw
push
sarl
pop
fwait
aas
scas
add
pop
fwait
aas
scas
adc
push
cli
repnz
xchg
and
pop
adc
pop
or
jo
ficomps
mov
push
dec
icebp
imulb
xlat
jbe
inc
xor
add
mov
sbbb
xchg
mov
push
mov
jmp
loopne
push
xchg
add
push
sahf
xchg
mov
push
inc
xor
add
mov
jo
es
mov
push
xor
add
mov
outsb
push
push
xchg
mov
push
xor
add
mov
jbe
into
xchg
mov
ret
add
insb
int3
scas
test
jne
pop
test
ficoml
xchg
lea
in
xchg
cltd
push
dec
xor
dec
jo
inc
push
push
xchg
mov
push
shlb
gs
add
mov
pushw
outsb
xchg
mov
push
dec
xor
add
mov
add
rclb
rol
test
sarl
sbb
sbb
and
fnstsw
add
dec
das
cmpsb
push
mull
frstor
movsb
jno
adc
loope
call
sub
fstps
mov
mov
sbb
mov
orb
jbe
xchg
mov
repnz
dec
cmp
leave
movb
cli
imul
stc
dec
popa
cmpsl
push
loope
cmp
mov
movb
inc
imul
cld
test
xchg
adc
or
loop
mov
and
std
mov
xchg
sar
add
js
aam
mov
lret
addr16
lock
xchg
dec
cli
pushf
jae
imul
and
or
mov
lods
push
jmp
push
sbb
or
rcll
shrb
push
aad
ja
call
out
pop
loop
fldcw
leave
test
jo
mov
mov
fld1
xchg
push
data16
iret
mov
in
sbb
jno
data16
or
mov
repnz
mov
cmp
sbb
sub
jbe
data16
out
pop
inc
cmp
imulb
or
mov
adc
mov
lcall
jo
xchg
fbld
flds
leave
mov
ret
rorb
call
repz
loopne
shrl
and
mov
mov
xchg
xor
daa
push
pop
mov
push
mov
mov
test
mov
rorb
cltd
int
sub
or
pushf
xor
daa
sarl
mov
and
aad
dec
mov
js
cld
aam
sub
cmpsl
inc
or
mov
mov
gs
imul
sub
cmp
push
mov
test
popf
xchg
sub
inc
mov
mov
pop
mov
xchg
xchg
push
imul
and
inc
sub
dec
dec
adcl
in
sarl
pop
fisubrl
xchg
out
arpl
and
cmc
mov
push
and
push
subb
mov
dec
sub
stc
mov
mov
popa
dec
inc
mov
push
mov
lcall
rcrl
js
push
scas
loopne
add
cltd
ret
mov
ret
mov
sbb
ret
adc
ja
pop
sbb
scas
mov
mov
pop
sbb
movsl
mov
inc
fxch
rol
pop
dec
sbb
xor
push
loopne
imul
sub
dec
mov
mov
xchg
cmp
and
xor
add
mov
sbb
loopne
jno
jbe
jnp
sbb
fsubrs
add
rclb
leave
push
shll
and
cmpsl
or
ss
xchg
mul
and
hlt
jmp
popa
xchg
fldl2t
push
andb
loopne
test
imul
push
pop
jae
xlat
push
loopne
ret
xchg
jo
xchg
xchg
ret
adc
xchg
enter
lret
or
repz
outsb
jnp
mov
xchg
or
xchg
mov
push
int
mov
sub
scas
inc
sbb
rorl
xor
fwait
pop
jg
insl
call
sub
mov
sbb
imul
idiv
shll
jno
xchg
rcll
mov
dec
xchg
inc
jl
call
dec
mov
mov
test
imul
outsl
out
dec
ret
jns
fs
or
push
push
pop
gs
sti
dec
pop
xchg
cs
push
das
and
xor
daa
cmp
xchg
pop
leave
cmpsb
mov
inc
lods
cli
clc
outsb
add
scas
movsl
dec
fisubrs
pop
test
xchg
inc
jne
pop
cwtl
cmp
fistpl
pop
gs
ret
inc
fprem1
inc
lahf
enter
xchg
movsl
mov
loope
mov
dec
fsubl
xor
mov
iret
lock
or
dec
loope
popa
mov
push
nop
hlt
nop
enter
addr16
jns
inc
mov
insb
mov
xchg
insb
into
or
mov
in
into
arpl
mov
std
sbb
xchg
cmp
pop
jp
xor
or
ds
jb
adc
and
lds
jno
movsb
mov
lock
push
loope
push
orl
push
mov
movb
lahf
xor
xchg
jbe
inc
call
cmp
cmp
lock
stc
les
jno
ja
cmp
out
sbb
jb
dec
adc
xor
jnp
jbe
mov
add
cli
popf
pop
test
pop
xor
xchg
cld
mov
add
ds
inc
call
cmp
xchg
aam
xor
cmpsb
sahf
pop
xchg
mov
scas
sub
push
adc
mov
outsb
popa
mov
loope
fnstenv
jne
cltd
pop
dec
mov
jns
cmp
xchg
ljmp
test
mov
shrb
mov
ss
mov
mov
insb
cltd
sbb
inc
loopne
xor
stos
cli
subl
xor
push
sbb
cmc
push
fisubrl
in
jb
pop
push
imul
aad
mov
lea
decb
adc
jno
cmp
scas
jb
sub
orb
mov
popf
xchg
fimuls
js
imul
jle
out
add
aas
inc
jo
leave
test
xchg
cwtl
xlat
cltd
mov
movsl
add
fwait
mov
mov
lahf
and
fs
popa
test
mov
jmp
sahf
flds
or
orb
or
outsb
dec
xchg
sti
jbe
ja
or
popf
test
jmp
imul
enter
rorb
jmp
lahf
push
adc
popf
pusha
leave
cwtl
cltd
xchg
cs
sbbb
or
fwait
xor
cmp
pop
ret
mov
ret
sbb
test
inc
mov
pop
pop
les
pusha
mov
jg
shlb
inc
xor
dec
hlt
xor
jns
cmp
dec
jne
xchg
xchg
lret
daa
sub
ret
mov
adc
xor
lods
mov
inc
ja
mov
stos
fisubrs
jbe
dec
mov
mov
dec
movsl
inc
pop
jo
mov
push
cmpsl
frstor
pop
clc
and
dec
loopne
lea
dec
enter
dec
cmp
mov
sbb
lds
stc
in
ret
ret
mov
xchg
xor
add
rolb
outsb
lds
repnz
sbb
adc
or
pop
imul
dec
in
jge
mov
ja
ljmp
ficompl
dec
lods
test
addr16
ret
lret
shr
clc
les
xchg
mov
imul
dec
in
jge
adc
ja
ljmp
and
or
enter
and
xor
sub
jns
ret
test
jbe
lahf
sbb
je
or
sub
push
dec
push
sub
xchg
jns
xor
ror
arpl
ljmp
pop
fsubl
adc
pop
push
scas
inc
mov
jl
loopne
ret
outsl
mov
fiaddl
fsubr
inc
or
cld
lds
pop
inc
mov
sub
lret
icebp
mov
in
mov
inc
cmp
sub
cmpsl
or
xchg
pop
sbb
lret
test
lret
or
ljmp
sub
dec
cmpsl
inc
add
leave
push
jg
cmpsl
js
call
mov
loopne
iret
inc
mov
cli
shl
lcall
arpl
and
or
or
adc
nop
sbb
mov
cmc
cmp
jo
xchg
xor
jle
imul
stc
nop
mov
mov
clc
test
pop
aad
inc
in
xchg
dec
or
pop
mov
inc
jmp
cli
and
sub
xchg
fcomps
in
ds
lock
je
cmpsb
pop
lds
and
out
ret
push
jo
push
push
outsb
xchg
mov
lds
dec
jne
rorl
jo
mov
fabs
aas
push
shll
mov
ficomps
sahf
xchg
fwait
xchg
sbb
test
push
and
dec
mov
pop
pop
enter
add
jo
sbb
out
cltd
test
pop
xor
xor
add
xchg
mov
inc
inc
cltd
xchg
fldenv
and
rorl
pushf
scas
inc
in
pop
in
rolb
loopne
xor
mov
inc
popf
lds
and
pop
stc
in
mov
cltd
aas
shl
mov
push
push
jl
fdivrs
mov
xchg
jnp
mov
xchg
jns
jae
fnstenv
incl
sub
lahf
pop
mov
or
fsts
ror
sbb
cltd
pop
sarl
or
iret
cmp
call
sub
cmp
ror
jmp
inc
add
pushf
sbb
push
ds
jno
push
pop
test
aad
rorl
inc
xor
aad
inc
lods
cmpsb
loopne
cmp
iret
arpl
dec
outsl
subb
jo
or
dec
push
mov
xlat
mov
inc
add
mov
mov
mov
pop
fs
pop
mov
enter
mov
data16
mov
mov
xchg
test
gs
repz
imul
dec
jmp
xor
mov
inc
sbb
xorl
inc
mov
sbb
adc
mov
in
fists
jo
testb
lret
es
movsl
aaa
aad
subl
movsl
adc
data16
movsb
adcl
test
aam
xchg
stc
imul
repnz
fists
cli
and
xchg
dec
repnz
js
sub
xor
sub
mov
int
mov
mov
jle
xchg
sub
popa
mov
clc
scas
push
or
lods
into
cltd
push
or
in
push
loopne
test
xchg
sbb
pop
adc
imul
lea
cmp
add
ss
in
cmpsl
out
data16
addr16
enter
fcompl
inc
test
ret
leave
cmp
movsl
xchg
mov
aas
dec
jl
test
test
test
aaa
mov
hlt
movsl
sub
out
mov
fimuls
int3
shr
push
movsl
loopne
gs
rorb
inc
movsl
pop
pop
cmp
or
fldlg2
inc
mov
mov
jae
imul
mov
dec
loope
or
or
add
push
fsubs
cld
xchg
scas
hlt
jge
inc
movsl
jmp
inc
cmp
xor
in
jecxz
ret
or
cli
jp
sbb
imul
or
mov
cmpsb
in
pop
cltd
lret
cmp
and
stos
fld
cmc
cmp
lods
cmp
in
cmp
in
in
xchg
push
loopne
stos
jle
or
adc
xchg
minps
add
sbb
iret
xchg
push
fnsave
insl
or
cs
mov
adc
aam
pusha
les
sub
jo
stc
add
mov
xchg
iret
sbb
adc
or
fadds
or
xorl
scas
outsb
or
push
rolb
test
dec
pop
and
inc
adc
in
xor
in
imul
outsl
jge
jb
add
enter
imul
lret
movsl
sub
xchg
xlat
or
test
push
rcl
stc
mov
mov
lods
shrl
test
mov
jae
mov
scas
rcrl
lret
aas
jo
cmp
add
dec
push
push
mov
out
or
rcrl
jg
imul
and
xchg
push
inc
dec
xchg
and
std
imul
push
add
xchg
mov
stos
rorb
sar
fdivrs
aas
inc
mov
mov
inc
adc
shll
pushf
jmp
pop
sbb
cld
cld
mov
adc
push
sbb
scas
fisttps
out
push
repz
or
mov
xorb
aas
inc
test
cmp
cwtl
xchg
sub
das
fwait
xchg
addl
dec
push
push
out
iret
sbb
cmpsl
cmp
push
jmp
adc
inc
scas
inc
mov
sbbl
xchg
pop
aas
pop
les
push
push
iret
mov
mov
arpl
dec
mov
pop
movsb
ja
lcall
pop
jle
xchg
add
movsl
or
lds
xchg
cmp
xor
aas
or
sbb
xor
mov
pop
cmpsl
add
in
cmpsl
popf
add
inc
test
mov
cli
mov
xor
mov
jo
jmp
roll
push
ret
xor
test
push
repnz
mov
testl
shlb
lds
add
push
xlat
sbb
dec
gs
pop
aaa
bound
movsb
mov
imul
sub
testl
out
jae
pop
xor
jae
movsl
inc
sub
lds
xchg
or
movsl
xor
inc
inc
idiv
ret
gs
ffree
cmp
insl
xchg
mov
cltd
mov
scas
inc
dec
mov
xchg
loopne
mov
stc
inc
lret
adc
cltd
cmc
repz
pop
loopne
imul
lahf
mov
jecxz
pop
rorl
es
das
mov
fcom
pop
xchg
popa
gs
mov
xchg
movb
sub
loopne
shrb
orb
mov
cmc
xchg
dec
lret
ret
mov
imul
xlat
add
cld
push
popa
test
fmul
push
push
or
stc
lock
lcall
aam
mov
clc
lds
cmp
in
inc
mov
xlat
std
add
mov
testl
repnz
popf
inc
mov
dec
mov
push
push
shrb
add
cmp
xor
sbb
rclb
mov
sbb
movsl
jle
ljmp
or
inc
adc
out
push
daa
movsb
cmp
pop
ffree
shrb
cmpsb
fadd
lds
jmp
shlb
out
jns
bound
dec
add
out
or
jnp
push
jnp
adc
cwtl
lds
icebp
add
xchg
or
lahf
dec
xchg
xchg
push
mov
aam
pop
mov
enter
push
dec
xchg
movsb
add
dec
movsl
inc
mov
jne
popa
mov
mov
outsl
pushf
or
lds
push
call
aas
repz
xor
mov
pop
pop
je
sti
aam
cmp
jo
sub
and
imul
pop
xchg
add
movsb
jno
sbb
test
imul
cmp
mov
imul
or
into
imul
imul
mov
int
test
push
in
shlb
mov
sbb
cmp
call
dec
dec
jp
imul
in
popa
xchg
jb
repnz
xor
movsl
mov
xor
inc
adc
jo
es
enter
xchg
lds
jb
cmp
mov
xchg
data16
pusha
cs
xchg
rcr
js
xchg
dec
imul
lds
fcomps
cmp
xor
xor
adc
inc
out
add
scas
push
gs
lcall
push
add
popa
jle
mov
in
jns
push
aam
imul
lock
notl
out
mov
iret
leave
or
cmp
cmp
out
mov
dec
popa
popa
xor
lods
fdivl
in
sub
mov
sti
xchg
fisubrl
inc
sar
movsl
sub
xchg
jmp
pop
or
dec
xchg
add
or
out
xchg
mov
js
outsb
test
loope
dec
or
imul
cmp
mov
pop
in
dec
mov
rorb
imul
fwait
sti
fs
repnz
ja
test
clc
rclb
imul
add
xlat
imul
imul
scas
xchg
imul
mov
mov
iret
imul
test
dec
mov
imul
lods
pop
jle
imul
nop
leave
icebp
pop
shlb
push
imul
ret
imul
ret
imul
add
iret
imul
mov
mov
iret
imul
mov
push
imul
mov
ja
jp
movsl
imul
shlb
ljmp
mov
mov
mov
push
pop
test
stc
scas
add
mov
lds
stc
pushaw
fimull
push
add
mov
push
and
add
stc
imul
and
stc
dec
scas
jmp
jne
add
test
add
pop
jmp
stc
insb
xor
add
imul
push
add
sub
stc
cmpsb
mov
out
mov
pop
fimull
scas
pop
es
xchg
pusha
sub
loope
push
mov
out
xor
repnz
mov
inc
jmp
push
xor
mov
adc
xlat
push
fidivs
mov
loopne
bound
push
mov
fwait
loope
sbb
dec
je
lcall
repnz
or
mov
repnz
fldcw
sub
xchg
mov
and
cwtl
pusha
js
xor
into
out
mov
xchg
jbe
jmp
cmp
scas
testb
scas
dec
in
push
or
sub
push
inc
mov
and
repnz
xchg
and
pop
je
adc
cwtd
lods
ljmp
fldz
filds
out
sub
cmp
repnz
sbb
fmull
loope
cmp
in
pop
cwtl
jp
and
rolb
scas
mov
repz
test
sub
push
adc
cmp
jns
sbb
inc
lahf
jmp
mov
loopne
push
mov
sub
stc
mov
std
and
jnp
xchg
scas
or
popa
loope
mov
cltd
xlat
cmpsb
jmp
rcrl
dec
int
mov
dec
xor
into
pop
adc
out
cli
stos
scas
imul
ja
mov
pop
push
mov
xor
in
add
cli
daa
pop
xor
cltd
cmp
adc
test
test
pop
out
icebp
add
pop
or
cmpb
ss
mull
or
imul
aam
xlat
js
insl
mov
jb
and
imul
divl
inc
scas
xchg
pop
stc
mov
xchg
repnz
pop
ja
cmp
push
jg
fiaddl
inc
enter
mov
gs
cld
push
jnp
xchg
pop
fbstp
cmpsb
loopne
gs
sti
jmp
lods
daa
pop
mov
lret
jns
adc
addps
add
cmp
sti
popa
inc
jecxz
stc
lret
cmpsb
and
repnz
jecxz
sbb
stos
enter
sahf
shrl
inc
loope
dec
xchg
cltd
imul
push
adc
mov
mov
inc
test
dec
frstor
cld
mov
sub
sarl
cmp
mov
mov
and
arpl
test
jnp
imul
mov
insb
xor
jb
out
mov
mov
ret
push
cmpsl
mov
mov
sub
pop
data16
mov
cmpsb
jns
loopne
add
push
push
inc
test
test
add
movb
nop
mov
lcall
outsl
mov
xlat
mov
xchg
adc
addr16
push
add
sbb
fadds
or
adcl
mov
xchg
ja
fcomps
lds
xchg
adc
sahf
pop
insl
push
data16
xor
daa
ja
xchg
jns
mov
pushl
jo
sbb
xchg
test
fisubl
popa
imul
sbb
out
popa
sub
cwtl
jecxz
fldenv
int3
enter
add
notb
sub
push
jne
inc
enter
jns
enter
sti
pop
pusha
xor
and
test
pop
xor
mov
in
inc
hlt
push
adc
and
ds
adc
imul
test
std
push
cltd
jns
add
and
add
and
addr16
imul
xrelease
in
movsl
mov
inc
xchg
filds
lock
fadd
pop
cmpsl
clc
insb
jno
fdivr
pushaw
cltd
sub
add
mov
adc
push
pop
jmp
sbb
jo
mov
cmp
addr16
mov
test
test
push
fisttpl
cmp
mov
bound
and
call
jge
out
imul
es
imul
jns
loopne
ret
dec
or
pop
imul
int3
mov
call
cltd
adc
push
mov
gs
hlt
push
enter
adc
cmp
js
xor
mov
sbbb
dec
int3
jecxz
or
push
inc
xor
mov
std
lcall
pop
std
mov
pop
ret
adc
mov
inc
rcll
cmp
fldcw
andl
jmp
xchg
data16
popf
jecxz
outsl
out
mov
lods
out
jae
xchg
dec
push
ffree
icebp
in
jmp
pop
hlt
add
push
mov
arpl
pop
dec
pop
dec
add
inc
pop
stc
jmp
movb
stos
std
enter
cltd
ds
cmp
pop
call
repz
pop
inc
mov
push
fsubl
leave
pop
loope
pop
mov
dec
cltd
fcomps
cmp
dec
lcall
xchg
loope
bound
stos
push
push
int3
push
mov
into
subl
std
das
adc
inc
mov
dec
mov
cmpsl
test
iret
rolb
stc
pop
dec
or
pop
push
into
js
dec
adc
pop
xor
inc
fadds
test
lods
fwait
sbb
pop
fnstcw
mov
push
mov
cmp
mov
test
adc
mov
add
mov
lret
sbb
stc
and
pop
push
out
xchg
addr16
cltd
jae
test
sarb
movsl
leave
sahf
das
pop
outsl
imul
jmp
stc
out
js
sub
out
sahf
mov
ret
stc
dec
inc
stc
jo
sbb
mov
enter
loope
inc
mov
pop
cmp
test
mov
push
or
mov
leave
imul
pop
mov
add
sbb
es
sbb
imul
fists
xchg
mov
testb
test
dec
shlb
push
sub
outsl
in
loopne
sub
dec
mov
mov
es
add
sbb
out
adcl
jp
dec
daa
add
cs
inc
cmpsb
pop
pop
out
mov
addb
call
mov
dec
ja
loop,pt
pop
and
xor
push
xchg
add
lahf
xchg
pop
jl
inc
stos
jl
xor
and
ljmp
or
cli
sbb
mov
ss
roll
test
call
loopne
inc
pop
push
movsb
icebp
add
imul
jo
sub
fwait
ja
push
ds
pop
jl
popf
mov
pop
adc
xchg
mov
mov
sub
clc
leave
jnp
xchg
mov
insb
lea
xlat
rcrb
dec
adc
call
pusha
cmp
mov
mov
lods
adc
cmpsb
lret
or
xchg
mov
or
mov
shrl
add
pop
jmp
sub
push
cmp
lds
xchg
pop
cmp
cmp
cltd
fildl
out
jl
push
lcall
jle
mov
push
cmc
pop
cs
outsb
aas
ret
pop
fs
or
adc
inc
cs
dec
clc
fisttps
xor
push
and
pop
jo
jmp
dec
inc
insb
push
int3
sub
sbb
fiadds
clc
das
mov
cltd
mov
sub
and
or
xchg
addb
or
js
dec
fsts
dec
mov
fs
adc
inc
mov
movsb
sbb
mov
frstor
cltd
mov
xor
movsb
push
ds
mov
dec
loopne
cmp
adc
dec
mov
mov
jae
lds
std
push
sbb
addr16
daa
cmp
mov
insb
mov
ja
repnz
enter
jg
rcrl
mov
xchg
xchg
inc
ja
or
enter
sub
push
popf
es
mov
mov
mov
add
ds
loop
add
or
loop
in
iret
inc
and
push
mov
inc
test
or
pop
sbb
movsl
sub
cs
shlb
repnz
ja
jl
xchg
and
popa
shlb
fsubrs
movsl
jne
es
cmpsb
clc
and
pop
cmpsl
sbb
enter
adc
mov
cli
jnp
xor
sarl
xchg
ret
mov
repz
movsl
jne
es
cmpsb
or
jne
pop
cmpsl
and
add
enter
adc
dec
movsl
and
jnp
xor
xchg
inc
mov
push
mov
push
shlb
movsl
shlb
add
cmpsb
jne
daa
es
cmpsl
or
jne
pop
test
sub
sarb
imul
adc
cmp
xor
shlb
movsb
sub
es
movsl
or
jne
push
cmpsb
ret
daa
mov
pop
pop
cmpsl
sbb
mov
fwait
pusha
mov
jg
sarb
enter
adc
imul
and
popf
mov
and
add
movsb
sbb
xor
cmp
adc
movsl
fmull
daa
repz
shrb
add
test
jmp
push
adc
addr16
ret
and
mov
in
cmp
push
adc
out
enter
xor
in
movsb
nop
in
scas
es
fidivrl
dec
adcl
mov
push
cmpsl
cli
call
shrb
push
and
and
imul
jne
xor
dec
ror
movsb
test
movsl
push
movsl
cli
sub
cmpsb
xlat
pusha
shlb
add
cmpsl
mov
scas
sub
popf
test
and
sub
xor
push
sub
xor
fwait
pop
movsb
and
ror
mov
movsl
movsb
loopne
popa
and
test
es
cmpsb
jne
daa
es
cmpsl
jo
call
test
sub
sarb
ret
and
mov
in
cmp
push
adc
pop
test
test
movsl
in
movsb
loop
pusha
or
cmp
loope
leave
or
popf
xor
push
xor
push
xor
push
xor
aaa
inc
push
sub
mov
pop
fwait
mov
pop
pushf
mov
pop
popf
mov
pop
sahf
mov
pop
lahf
mov
clc
sub
aam
mov
and
daa
or
outsl
xchg
xchg
xchg
jo
loopne
icebp
xchg
jno
loope
ljmp
cmpsl
jmp
pop
cmpsl
imul
cmpsl
insb
cmpsl
fsubl
insl
cmpsl
frstor
cli
rcrb
sub
pushf
shrl
popf
shrl
rcrl
shrl
rcrl
shll
shll
xchg
xor
sbb
stos
es
add
dec
and
inc
and
mov
and
cmpsb
dec
daa
push
cmpsl
xor
test
sub
test
mov
scas
mov
lods
and
stos
cmpsb
stos
daa
lcall
fidivrs
aam
inc
jmp
mov
cmp
arpl
call
ds
xor
mov
shlb
push
mov
mov
addr16
mov
test
js
cmp
lods
mov
adc
das
sub
cmp
orl
popl
je
out
scas
test
mov
push
mov
xor
or
daa
dec
int
nop
sbb
jmp
pop
sub
push
xor
pop
xor
mov
or
or
sbb
addr16
cmp
popa
add
xchg
iret
out
mov
test
xchg
shl
in
ror
lret
or
call
cltd
or
je
cmpsl
dec
mov
inc
jns
icebp
mov
xlat
addr16
adc
enter
xchg
aad
shlb
xchg
inc
movsl
mov
test
rolb
mov
push
xlat
add
sahf
cmpl
test
pop
xchg
lcall
mov
jne
insl
xchg
pushf
test
daa
pop
cli
dec
push
dec
ss
mov
cmp
fiadds
or
movsb
mov
mov
mov
cmpsl
xchg
cmp
subl
in
icebp
andb
mov
stos
das
xchg
nop
mov
and
sbb
test
fstl
test
sahf
push
lds
mov
ret
adc
push
push
inc
sbb
adc
xchg
and
cmc
in
cmpl
and
movsb
sbbb
and
sbbl
loop
ret
jno
cmpsb
pop
pop
mov
test
mov
daa
xor
sub
jnp
enter
cmpsb
xchg
mov
jmp
inc
dec
xor
jno
data16
fisubrs
sbb
jb
xchg
mov
stos
add
leave
pop
cmc
pushf
mov
imul
jge
aaa
push
jl
cmpsb
push
popa
in
mov
stc
loope
subl
xchg
test
aad
fcmovne
fildl
dec
lock
in
mov
fildll
fcmovnbe
stc
psrld
push
sti
sahf
inc
sub
je
mov
add
push
dec
roll
push
lds
mov
sub
cmp
lock
jns
mov
loope
add
out
in
jecxz
into
xchg
inc
pop
cmpsl
outsl
loope
pop
push
test
push
push
xchg
mov
pop
push
push
fcompl
hlt
test
sbb
sub
jbe
imul
push
sub
fprem
fwait
cmpsb
call
mov
inc
jnp
imul
adc
inc
dec
and
xchg
mov
or
add
insb
div
out
xchg
sub
or
jne
xchg
test
mov
mov
xor
sub
inc
popf
daa
out
sbb
shrb
mov
xor
cli
frstor
pop
push
ret
sbb
mov
pop
push
ret
mov
push
ret
sbb
mov
pop
push
ret
sbb
mov
ret
out
fcomps
xor
pop
push
ret
sbb
mov
adc
fcomps
mov
pop
push
ret
sbb
mov
pop
push
popf
sbb
cmpsl
add
push
jo
push
ret
sbb
mov
pop
push
ret
lret
add
xor
push
ret
sbb
mov
pop
push
ret
mov
push
ret
sbb
mov
pop
push
ret
sbb
mov
ret
out
fcomps
cmp
arpl
call
test
sbb
sbb
fsubp
jbe
sbb
test
cmp
fstps
or
or
lock
xchg
rcrb
pop
pop
mov
repnz
mov
ss
mov
shll
testl
lcall
paddb
out
jl
fwait
jns
sbb
daa
push
adc
daa
fxch
mov
test
cltd
mov
mov
movl
in
sahf
daa
imul
fcompl
mov
lods
sub
movsl
popa
adc
jno
cmp
mov
cltd
rcll
mov
add
push
cltd
addb
daa
jmp
rolb
adc
xor
imul
xchg
pop
sbb
adc
add
jmp
cmpsb
mov
jmp
test
and
je
inc
and
insb
daa
pop
popa
push
and
mov
aam
adc
inc
not
inc
and
lods
push
inc
js
push
jmp
jns
fdivr
imul
sarb
out
gs
fs
jmp
inc
pop
mov
icebp
movsl
gs
push
imul
mov
cmc
adc
gs
fs
imul
scas
daa
cli
or
lods
fs
sbb
lods
cld
insb
cmpsb
sbb
aad
stos
test
test
loopne
mul
popf
mov
jno
test
mov
js
daa
add
mov
xchg
stos
and
movl
repz
pop
imul
sub
xlat
movsl
add
add
in
loopne
jmp
movsl
push
movsl
sub
shlb
mov
vpslld
lds
lds
push
lds
mov
shlb
add
loope
out
cmpsb
add
out
out
pop
out
add
lods
test
in
scas
daa
add
lods
popa
and
jo
cmpsb
repz
ljmp
imul
out
inc
das
aaa
movsb
pop
movsl
nop
mov
addb
or
xor
movsl
testl
inc
test
cmpsb
insb
loopne
xchg
enter
test
or
fmul
psrlq
sub
hlt
pop
xchg
outsl
popa
dec
jns
jne
leave
adc
mov
sbb
or
addsubpd
jmp
imul
popa
fcomp
cwtl
dec
xchg
mov
popf
ljmp
sub
rcrb
ds
jo
sbb
xchg
adc
jo
xchg
mov
aaa
je
mov
scas
inc
sub
orl
test
je
int
inc
pop
stos
dec
xchg
pop
dec
rcll
in
add
fmull
loope
jb
xor
mov
jns
inc
mov
mov
or
mov
iret
aam
std
pushl
aad
faddp
leave
out
enter
inc
std
push
inc
cmp
pop
aas
enter
cmp
sbb
dec
ja
and
dec
mov
adc
inc
push
bound
gs
or
adc
ret
jns
leave
dec
sbb
xchg
cmpsb
sub
and
pushf
fnstcw
add
add
push
fstps
pop
movl
pop
movsb
fcmovnb
jns
mov
test
lahf
leave
pop
pop
adc
mov
std
divl
aad
xchg
mov
sahf
popa
jmp
shr
jle
testl
shr
enter
inc
scas
mov
xlat
push
cli
stos
jge
aad
push
call
mov
test
js
xchg
sbb
inc
fmul
cli
cltd
xchg
push
push
jae
mov
dec
dec
roll
cmpsb
scas
das
icebp
cltd
pop
dec
jp
shll
sub
idiv
add
dec
xor
or
cld
repnz
cmpsl
fdivrs
in
bound
ja
pusha
xor
rcrl
cmp
xlat
adc
les
pop
ss
adc
ret
dec
pop
xchg
xchg
jbe
mov
pop
out
inc
fisttpl
rol
and
frstor
rcrl
out
aad
mov
pop
adc
xchg
pop
std
mov
inc
and
mov
pop
adc
insb
mov
mov
call
pop
inc
xchg
scas
fsubs
imul
inc
dec
lock
loopne
adc
scas
test
in
and
mov
test
or
xchg
test
sub
cmp
rcrl
push
mov
dec
pop
xchg
ds
cli
cmc
jnp
stc
stc
out
jl
movsl
test
cli
cwtl
xor
call
xor
pop
arpl
pop
cmp
aam
xchg
pop
sub
xchg
ss
mov
stc
inc
mov
sar
test
cltd
cs
nop
push
or
mov
pop
fsubrl
ficomps
mov
adc
mov
pop
or
adc
mov
xchg
leave
es
loopne
test
mov
icebp
mov
push
push
and
mov
cwtl
into
lds
adc
pop
fidivs
stc
xchg
ds
js
push
xchg
int3
lock
in
xor
mov
cwtl
sahf
push
cmp
jnp
or
pop
push
ja
pushl
inc
push
sub
imul
or
push
pop
xchg
test
inc
mov
lea
lea
pusha
jo
aas
xchg
in
js
cmp
enter
jo
ljmp
mov
mov
and
aas
loopne
gs
inc
mov
fimull
gs
cltd
push
push
and
inc
or
xor
sbbb
test
into
imul
addr16
or
rcr
sbb
sbb
pop
iret
ffreep
cs
and
aam
pop
loope
add
xchg
outsl
mov
inc
ljmp
loopne
inc
inc
xor
jns
clc
xchg
jecxz
xchg
idivl
imulb
jne
mov
clc
mov
subl
adc
js
adc
xchg
jns
xlat
data16
ja
lods
rcrl
push
idivl
mov
cltd
and
cmpsl
cmp
add
lahf
cs
mov
mov
lods
ds
daa
xchg
sub
gs
insl
loopne
or
ljmp
mov
lcall
loopne
sbb
cmp
lds
roll
pop
inc
mov
inc
loopne
nop
xor
pop
push
mov
cmpsl
popf
add
dec
imul
xchg
lcall
stos
dec
lods
out
sbb
and
out
xorb
mov
out
sar
mov
inc
and
ds
mov
add
aam
xor
popa
jnp
out
jne
bnd
inc
inc
mov
in
cli
push
add
mov
pop
idivb
test
inc
leave
xchg
sub
pusha
addr16
divl
les
sbb
lods
fldt
imul
sbb
mov
push
and
popa
dec
mov
cwtl
rclb
movsl
adc
and
push
or
xchg
sbbl
mov
xchg
mov
pop
sbb
loope
add
movb
rorb
cwtl
cmp
sub
lds
push
push
pop
pop
jo
pushf
hlt
mov
push
loopne
cmpb
addr16
rclb
adc
jge
outsl
push
cltd
sar
adc
daa
cli
divl
mov
popf
cwtl
mov
lahf
jne
aad
xchg
das
stc
pavgb
iret
int3
cmp
insl
rclb
stc
inc
xlat
inc
add
fnstsw
lock
cli
and
jns
test
idiv
or
cmp
loopne
cli
adc
lcall
inc
or
out
inc
fdivrl
popf
testl
push
jl
dec
clc
mov
mov
ffree
and
and
or
xorl
stos
imul
inc
jmp
gs
loop
mov
push
cmp
pop
shll
adc
mulb
inc
xchg
xchg
pop
and
push
dec
lds
cltd
stc
fldl
pop
rcll
xor
pushf
xor
lcall
pop
xlat
xor
cli
dec
or
xlat
cmp
addr16
cmpsb
lcall
mov
stos
insb
nop
cld
push
sbb
adcb
jl
fwait
or
ret
cmp
add
inc
call
sub
push
push
sub
stos
add
dec
adc
je
ljmp
pop
sbb
jo
pop
dec
enter
mov
push
dec
nop
adc
loope
pusha
adc
scas
sbb
adc
mov
leave
inc
subb
push
mov
sbb
imul
jl
arpl
jno
mov
ja
push
jnp
leave
test
jecxz
pop
xchg
cmp
out
ret
popf
mov
fwait
sub
push
icebp
cmpsl
dec
rorb
jne
sbb
cltd
xchg
inc
mov
mov
mov
xor
and
testl
lret
inc
rorb
in
outsl
add
sub
enter
mov
rorb
add
sbb
dec
mov
jecxz
in
pop
pop
jmp
ror
xchg
js
cmc
sbb
xchg
arpl
lods
inc
mov
xchg
add
repnz
loopne
mov
push
mov
or
call
inc
xchg
pop
add
fistps
fnstsw
cmp
mov
push
nop
pop
mov
repz
test
sub
leave
cmpsb
pop
sbb
sbb
jmp
pop
push
or
imul
inc
cli
ret
push
and
fistpll
pop
ret
xchg
and
and
int3
int
fstpl
cmp
inc
stc
mov
xchg
scas
nop
in
sar
push
inc
cmpsb
mov
dec
cmovs
movsl
inc
sbb
test
das
inc
mov
dec
pop
inc
cltd
jne
mov
pushw
and
fstpl
jns
add
es
data16
lods
xor
clc
mov
or
jge
ret
loopne
sbb
sbb
xchg
call
jg
xchg
ror
add
fbstp
adc
cmp
push
mov
stc
popf
inc
xor
mov
lds
int3
jns
mov
mov
popf
outsb
inc
call
sbb
dec
push
adc
cmpsb
aam
cltd
mov
cmpsb
scas
xchg
pop
and
shr
xor
in
xlat
ret
imul
lahf
sbb
inc
clc
aad
imul
iret
xchg
ret
fadds
pop
fsts
icebp
out
lcall
outsl
out
pop
insl
aad
ja
jge
pushf
aad
lds
dec
sub
aam
leave
pop
sbb
outsl
flds
jge
pushf
fnstenv
iret
imul
rcr
movsb
xchg
movsl
inc
mov
jecxz
lods
dec
lock
pushf
rcrl
push
lcall
mov
lcall
push
iret
aas
rol
dec
cmpsl
test
cltd
test
push
fsubs
xor
sbb
fidivrs
xchg
mov
mov
fadds
or
and
mov
push
add
ja
xchg
jmp
xor
mov
mov
inc
cmpsl
cmp
sub
cmp
or
jo
xor
mov
fistpll
jo
cmpsl
pop
rcl
xor
push
cltd
mov
ror
out
mov
and
push
nop
xor
popf
sub
cmp
fs
cltd
pushf
dec
and
dec
mov
dec
and
das
sbb
jmp
ret
icebp
movsb
jne
imul
cmp
mov
insb
aad
ret
jns
cmp
or
add
push
jecxz
ret
jns
outsl
pusha
jp
movsb
pop
cmp
gs
js
mov
jmp
mov
stos
cmpsl
jmp
repz
add
xor
stc
stc
arpl
into
jno
fstps
rcrl
xchg
daa
mov
sti
pop
cmp
add
pop
pop
jl
outsb
xor
pop
iret
cs
xor
call
stc
int3
imul
aam
in
and
repnz
imul
cmpsl
adcb
jbe
lret
pop
in
and
cltd
pop
stc
or
mov
pop
xchg
cmpsl
into
ret
dec
jno
ss
inc
testl
mov
xchg
mov
push
sub
loope
loopne
aaa
pushf
inc
jmp
pop
add
cld
bswap
mov
and
mov
mov
push
btl
cmp
pop
inc
icebp
arpl
shl
rorb
adc
cmp
js
fwait
call
mov
js
std
add
or
orb
arpl
data16
pusha
and
cmp
mov
sbb
cmc
sbb
movsl
xchg
pop
dec
push
lds
aas
out
icebp
shlb
loopne
inc
pop
sbb
inc
stc
push
sahf
inc
lahf
and
shlb
or
cwtl
fldenv
cmc
faddp
leave
mov
cmc
movb
test
out
ret
push
cmp
cmp
mov
icebp
push
andl
mov
inc
xchg
lcall
mov
aaa
movsb
sbb
add
mov
push
jmp
pop
data16
cwtl
jns
mov
mov
pop
mov
mov
cmp
lds
in
repnz
sti
addr16
out
shrb
mov
test
fcmovu
xchg
pop
inc
sub
clc
mov
in
ficomps
mov
sbb
cwtl
mov
jmp
fdivrl
pop
sbb
leave
mov
add
mov
add
addb
in
leave
stc
sbb
xrelease
cmp
xchg
and
testl
popa
dec
pop
fisubs
clc
movsb
gs
fcoms
lahf
jns
mov
int3
stos
adc
push
into
cli
sahf
xor
add
sahf
lahf
gs
fisubs
rclb
jmp
jno
fldl
mov
cmpsb
mov
jns
fmull
int3
jle
add
xor
repnz
xchg
xchg
ss
ss
mov
jo
fs
aad
out
pop
or
gs
test
mov
mov
pop
test
insb
mov
insb
mov
xchg
lods
adc
les
leave
inc
xchg
jg
inc
mov
sti
int3
stc
xlat
pop
mov
jg
enter
out
push
adc
inc
xor
fwait
adc
pop
stc
cs
lock
pushf
xchg
mov
scas
mov
test
fisttpll
mov
out
fnstsw
xor
pop
pop
test
jg
mov
pushl
fldenv
iret
shrl
pop
shl
pop
mov
lds
sbb
push
mov
cmpsl
mov
fwait
repz
xor
sbb
imul
mov
cmp
cmc
xlat
rorl
mov
push
push
inc
sub
loopne
or
or
sub
imul
loopne
stc
pusha
mov
icebp
aad
stc
jbe
movsl
pushf
push
das
and
mov
mov
popf
push
dec
push
sarb
cs
call
or
arpl
popa
adc
rcll
data16
cmpsb
adc
lods
div
iret
cmp
mov
mov
pop
xchg
and
or
sarl
sbb
jbe
xchg
mov
fiaddl
inc
mov
cli
pop
mov
lods
repnz
push
leave
icebp
push
out
pop
filds
mov
xchg
xchg
insl
in
mov
sub
mov
sbb
std
imulb
or
icebp
xchg
int3
jo
test
mov
xor
fwait
adc
jmp
push
repnz
cli
repnz
mov
inc
call
cmpsl
inc
gs
or
xchg
cmpb
xor
nop
push
imul
inc
mov
add
cltd
lea
and
ficoml
cwtl
jo
in
xchg
ret
mov
ret
sub
or
jge
das
adc
aam
add
sub
jae
cld
roll
mov
jne
push
shlb
or
inc
xlat
jns
pop
imul
or
pop
sub
insb
rcrl
loope
pop
imul
lods
push
push
jns
dec
gs
in
push
test
imul
jno
jns
lcall
testb
xor
aaa
pop
int3
dec
js
push
loope
pop
loope
and
lods
sbb
jno
imul
gs
movsl
jns
pop
jo
xor
mov
sub
add
xchg
pop
daa
inc
pushf
lcall
rcrl
push
out
mov
sbb
xlat
pop
pop
push
das
pop
shrl
cmp
pop
mov
fmul
cmp
sub
xor
inc
ret
mov
jmp
idivl
mov
call
xor
pop
mov
push
cmpsb
add
shll
repnz
movb
cs
inc
aaa
daa
cmpsl
sub
inc
sahf
incl
imul
adc
cltd
adc
sbb
flds
mov
lock
rcll
out
popa
mov
shl
jo
rcl
enter
enter
popf
xchg
stc
fdiv
scas
mov
out
enter
enter
jmp
jmp
popa
push
push
icebp
leave
dec
push
lock
jmp
jecxz
xor
loope
sub
cltd
in
cmpsl
cmp
inc
imul
cmp
addr16
add
out
cmp
jge
jg
jmp
push
dec
leave
add
push
mov
jg
push
dec
imul
scas
jg
push
dec
call
out
jg
push
jbe
add
push
fstps
leave
jae
mov
push
sbb
imul
jg
push
ret
call
mov
push
lds
scas
push
fistps
fistps
sahf
cmp
push
jg
push
adc
jg
push
aad
xlat
jg
push
aad
xlat
jg
push
aad
xlat
jg
push
imul
loopne
sbb
cmp
cltd
aad
cmp
inc
add
add
xchg
xor
sub
pop
cmp
test
push
out
mov
mov
test
push
add
jmp
leave
ss
pop
imul
cs
imul
repnz
setg
add
or
test
xor
gs
jecxz
sub
jno
fldl
outsl
add
pop
aas
out
inc
cli
andl
push
pop
enter
les
cmp
mov
cltd
and
lcall
mov
xchg
loope
fnstenv
sub
mov
scas
mov
xchg
fsts
pusha
loopne
int3
scas
dec
mov
xchg
rcl
addr16
ss
popf
cmp
xchg
or
insb
jno
cmp
push
roll
mov
scas
icebp
mov
push
inc
push
cmp
mov
in
and
mov
lea
pop
pminsw
lock
sub
popf
xor
gs
mov
aad
cli
icebp
jns
leave
jne
push
mov
mov
test
loope
popa
sar
loopne
pop
popa
mov
movsb
call
mov
cmp
idivl
lods
xchg
jae
movsb
xchg
popa
stos
xor
enter
jmp
xchg
leave
ljmp
xor
push
cltd
inc
fyl2x
jno
leave
fnsave
int3
addr16
dec
stos
xor
fcmove
loopne
jns
call
lods
sbb
sbb
lods
cmpl
inc
fnstcw
pop
mov
leave
rcrl
inc
test
pop
mov
sbb
outsb
scas
or
mov
xchg
in
and
ljmp
add
fnsave
xchg
lods
enter
mov
in
fcomp
std
jle
imul
cli
popf
xor
test
pop
pop
mov
hlt
icebp
test
pop
movsb
pushf
imul
addr16
loopne
xor
mov
in
add
iret
hlt
addb
xor
jbe
movsb
adc
fcoml
mov
xor
movsl
iret
leave
andb
sbb
mov
push
jno
fldenv
push
aam
icebp
fsts
ret
clc
add
addr16
fcomp
mov
push
jnp
addr16
cmpsl
cltd
test
push
or
inc
test
push
jno
test
push
icebp
mul
and
dec
add
push
jle
addr16
pop
enter
pop
shll
or
cltd
incb
push
xor
subb
outsb
lods
sbb
int
mov
add
mov
iret
fmul
xor
test
inc
testb
xchg
xchg
lock
gs
or
fldenv
push
loopne
cwtl
xor
mov
mov
stc
cltd
shll
mov
jg
sbb
ja
aad
add
inc
arpl
cmc
add
mov
pop
jg
jge
or
repnz
out
inc
jno
sahf
pop
repz
inc
mov
imul
loope
sub
or
loope
cmp
jge
leave
movsb
xchg
push
gs
repz
popa
inc
jmp
movsl
mov
fnstenv
pop
jb
call
pop
test
push
inc
xchg
test
cwtl
jno
pop
lahf
loopne
mov
sub
sbb
test
jbe
xlat
rclb
aas
pop
pop
js
rolb
leave
mov
sub
stos
outsb
pop
cmp
stc
xorb
jecxz
jl
clc
cld
lcallw
vprotb
fisttps
jae
sbb
mov
int3
clc
mov
test
addr16
add
sahf
cmpsl
push
mov
xor
adc
movsl
ret
push
test
cmp
cmp
call
inc
jbe
dec
mov
movsb
add
pusha
leave
cmpsl
xor
in
xor
xchg
and
call
mov
rorl
mov
jno
and
dec
pop
sti
icebp
xor
insb
rcll
les
xchg
mov
xchg
and
jae
out
fwait
rcrb
gs
adc
shrl
mov
pop
leave
stc
xlat
inc
int3
movsb
int
mov
mov
or
scas
cmp
aad
insb
iret
data16
mov
mov
es
insb
push
icebp
jp
clc
je
pop
stos
testl
lock
cmpsl
leave
dec
lahf
ret
mov
jno
lods
roll
js
outsb
arpl
xchg
loopne
sbb
call
loopne
push
movsb
inc
pop
je
push
push
add
lods
sarl
pusha
jle
arpl
popa
dec
movsl
or
mov
ret
insl
es
mov
insl
int3
cmpsb
mov
and
pop
sub
adc
mov
push
aam
test
mov
pop
out
aam
add
cmp
xchg
sbb
nop
push
xchg
mov
push
mov
ja
movsb
or
cwtl
out
jmp
out
dec
sub
and
mov
enter
dec
jp
addr16
add
call
xlat
pop
push
xchg
sahf
xor
push
dec
icebp
cmc
das
lock
pop
fwait
imul
xlat
das
push
xchg
add
inc
aam
icebp
insb
sub
pop
cmp
rorl
movb
jns
push
loopne
pop
and
sti
mov
adc
sub
or
push
jecxz
hlt
push
cltd
mov
sbb
aaa
mov
imul
mov
ljmp
or
mov
add
pop
cmp
jns
cmp
mov
cmpsb
cmp
adc
cmp
mov
fistl
out
xor
mov
mov
sahf
in
fildl
addb
dec
sbb
fisubrs
sbb
ret
in
jns
inc
sbb
mov
flds
and
lods
sub
pop
jmp
enter
popa
stc
insb
mov
cmp
xor
sub
xchg
xor
stc
add
push
in
test
shrb
idivl
cmp
sub
dec
or
sahf
mov
mov
push
jno
pop
adc
leave
iret
bnd
add
pop
lret
out
sbb
rclb
xchg
lret
dec
les
pop
dec
pop
xor
je
jnp
sub
cvtps2pd
adc
fildll
push
mov
adc
movsb
xchg
lahf
test
ficoms
push
add
repnz
int3
xchg
pop
cmp
fcomps
push
ret
arpl
aam
sub
xchg
addb
jg
out
push
add
jp
jne
pop
inc
sub
or
ja
push
push
js
xchg
ret
iret
sub
ffree
add
popf
jg
insl
das
call
data16
rorl
repnz
add
imul
pop
mov
sbb
pop
fdivrs
pop
lds
add
jl
pop
jns
bnd
gs
into
xor
sbb
mov
add
xor
out
lahf
test
shrb
mov
pushf
mov
xchg
stos
in
lds
lahf
adc
aaa
loopne
xchg
pop
ljmp
in
add
fisubs
out
adc
cmpsb
sbb
faddl
jns
loopne
ret
or
pop
xchg
dec
rorb
movb
jecxz
xchg
dec
int
cli
inc
rorl
stc
in
dec
add
out
notb
jns
add
jns
cld
cmpsl
jns
popa
cmpsb
shl
imul
aad
jns
dec
xchg
sbb
enter
test
cmc
add
test
push
mov
ljmp
mov
and
mov
or
jg
cld
push
leave
sub
xchg
cld
daa
das
adc
cld
mov
mov
mov
loope
cld
insl
lahf
fwait
add
int3
add
cld
sti
rolb
cld
sti
rolb
cld
sti
rolb
cld
sti
rolb
cld
ljmp
lds
aam
adc
scas
roll
sub
loope
mov
loopne
sub
ljmpw
cli
xor
mov
jge
mov
add
enter
pop
mov
test
jae
test
popf
or
mov
test
mov
stos
dec
popa
inc
fsubs
xchg
test
enter
jno
add
jo
lcall
imul
xor
test
shlb
mov
sbb
sub
mov
aam
loope
leave
push
out
cld
jg
adc
ds
dec
inc
inc
insb
popf
inc
mov
fidivs
inc
mov
xchg
xor
rolb
notb
movl
mov
iret
mov
dec
xor
mov
cwtl
mov
mov
outsb
inc
iret
jne
fistpll
fcomp
pop
xchg
inc
insl
sub
mov
jl
jle
popa
popf
pop
sti
sbb
shlb
mov
cli
stos
call
aaa
jg
ja
ljmp
and
sbb
mov
pop
test
fmuls
pop
cmp
nop
popf
push
das
mov
sbb
lds
test
stos
fldenv
xor
mov
pop
rol
cli
insb
cmp
dec
dec
jnp
call
pop
xchg
mov
gs
adc
push
je
push
pop
rcll
or
test
xchg
or
out
rclb
movsl
shl
mov
std
cli
inc
sbb
popa
inc
imul
add
jg
nop
mov
mov
rolb
movsb
loopne
and
cmpsb
or
xchg
mov
add
mov
jl
jnp
mov
xchg
mov
shlb
xor
mov
xchg
shlb
mov
mov
dec
testb
iret
fcos
sbb
ret
adc
sbb
loopne
pop
movsb
fcmovnb
cltd
pop
test
xchg
sti
and
push
and
mov
pop
push
mov
scas
inc
fsubrs
jb
test
adc
inc
or
stc
movsb
sub
out
mov
iret
mov
hlt
dec
or
cmpsb
aad
mov
xchg
test
add
xchg
adc
int
or
mov
imul
pop
scas
cwtl
adc
pop
jle
movl
pop
or
popa
xchg
xchg
jno
lret
or
sbbb
ljmp
dec
push
sbb
rorl
mov
push
adc
dec
or
cltd
mov
cltd
xchg
out
mov
xor
sbb
pop
dec
xchg
mov
inc
dec
icebp
lods
inc
mov
scas
inc
add
inc
test
andb
enter
push
out
nop
mov
adc
push
push
xor
sbb
or
orl
xchg
xchg
push
outsl
std
cltd
enter
jno
arpl
test
ret
icebp
jo
bound
push
cmc
leave
cmp
pop
push
jno
jmp
jns
mov
mov
pusha
cmp
or
sbb
and
jmp
lret
mov
loop
jno
jle
je
loop
mov
jno
and
mov
pop
xor
mov
stc
jbe
cmp
jmp
gs
cltd
adc
jl
jge
jge
or
mull
mov
dec
mov
cmpsl
sbb
cmp
xor
sub
sub
popa
add
aas
movb
jmp
add
adc
subl
mov
imul
jae
insb
mov
mov
jmp
jns
jge
xor
pop
cmp
cmp
dec
loop
ja
fs
ds
push
and
loopne
jns
adcl
jge
cld
es
lahf
inc
dec
adc
fisubrl
scas
xchg
leave
lods
pop
loopne
shlb
mov
xlat
shrd
shlb
jnp
les
pop
jnp
jno
jecxz
testl
jno
notl
shlb
roll
jle
dec
ficoml
fcomp
sbb
ret
mov
test
pusha
xchg
test
jge
push
sub
addr16
enter
lret
mov
push
fdivrs
testl
mov
or
movsb
dec
xchg
cmp
daa
gs
js
xchg
add
pop
fsts
push
sbb
push
mov
xchg
insb
pop
xchg
inc
insl
es
rcll
xchg
adc
aas
cmp
cltd
lods
into
iret
repnz
sbb
add
icebp
lock
adc
jmpw
outsl
add
mov
jne
dec
ficompl
ljmp
orl
les
xchg
or
and
xor
rorl
stc
mov
rcrl
inc
inc
inc
pop
add
fcoms
cmpsb
jmp
and
xchg
sbb
dec
pop
mov
loop
jo
stc
push
lahf
mov
xor
cmpsl
les
outsl
mov
add
les
frstor
mov
stc
jb
inc
pusha
fsubl
push
inc
push
pop
mov
xchg
fmuls
inc
scas
cmpsl
or
cmp
loope,pn
out
push
or
mov
ret
int
push
and
popa
adc
cltd
pop
lret
imul
popf
testl
fadds
fwait
mov
cmp
inc
cmp
xlat
insl
cmp
test
lods
enter
mov
lock
imul
pop
cmp
test
jns
and
fsubrp
xor
add
jg
arpl
sub
jbe
jmp
and
xlat
sbb
popa
adc
jb
movsl
sub
cwtl
imul
xchg
sbb
cmp
mov
lret
data16
jge
sbb
fstl
jns
lock
out
cmp
jo
out
lods
jg
xor
mov
sahf
call
mov
sbb
and
dec
mov
popf
sbb
mov
xchg
dec
cwtl
cmp
mov
mov
lahf
ja
adc
out
or
jne
jo
pop
mov
mov
or
mov
push
push
ficomps
outsb
and
xor
mov
mov
adcl
or
mov
xor
jmp
gs
mov
inc
cmp
dec
or
ja
fadds
hlt
mov
out
add
cmc
ds
dec
or
xorl
call
sbb
inc
ret
sub
pop
sub
leave
sub
movsb
xor
sbb
gs
popf
call
insb
aaa
sbb
pop
xchg
mov
add
mov
push
and
inc
mov
or
inc
sbb
std
jle
jne
xor
sbb
ja
push
clc
shll
cltd
and
enter
jl
les
cmpsl
ja
sbb
sub
ljmp
xchg
ret
sub
sub
xorl
cltd
jb
das
dec
jnp
xor
lds
pop
flds
or
int
jg
repnz
mov
gs
stos
rcll
outsl
jbe
cmp
imul
test
pop
push
xchg
sahf
push
jno
pusha
xchg
xchg
ret
pop
es
adc
jp
xor
push
insl
imul
in
push
sbb
loope
gs
xchg
out
repz
sahf
sbb
add
mov
xchg
faddl
mov
scas
push
aad
subl
loope
or
jecxz
or
fucom
loopne
fsubr
jno
cli
mov
das
and
pop
lock
test
fwait
shlb
mov
rolb
mov
xchg
in
in
loopne
scas
sub
je
or
push
mov
adc
mov
xchg
inc
loop
sbb
loop
push
arpl
ror
in
and
mov
cmp
out
stos
scas
xchg
std
das
mov
pop
mov
push
fcomip
or
sub
add
xlat
push
push
and
xor
arpl
xor
call
dec
stos
gs
shrb
subb
mov
jbe
jae
xchg
js
sub
or
jne
sbb
lahf
or
lds
jmp
movsl
or
jns
mov
jb
pop
fwait
cmp
mov
cmpsl
xchg
xchg
je
mov
or
test
call
mov
repnz
ret
enter
push
ljmp
adc
ss
dec
inc
jo
test
push
jg
cmpsl
sahf
pop
mov
fs
xchg
nop
xor
jo
add
jmp
movsl
push
jle
push
push
inc
cltd
push
cli
pop
insb
popa
xchg
fcompl
in
shll
test
push
mov
and
movsb
sub
js
jb
xchg
cmp
scas
iret
faddl
sub
sbb
cld
inc
jnp
ret
push
pop
jns
adc
mov
sub
test
cltd
xor
jle
mov
xchg
inc
lds
aad
cmp
jg
and
push
push
mov
fnstenv
stc
dec
mov
xor
movsl
or
adc
mov
popa
adc
push
sbb
repnz
xlat
mov
ficoms
inc
mov
outsl
mov
jmp
pop
aam
shll
cli
je
xchg
addr16
call
sbb
fistps
lea
test
sbb
cltd
or
mov
repz
mov
stc
xor
inc
jle
or
jmp
fbld
jns
test
mov
fadd
pop
ja
jg
mov
leave
sar
icebp
jo
leave
lret
inc
dec
fwait
incb
xchg
xchg
clc
fnstenv
les
push
lret
mov
push
scas
loopne
and
mov
cmc
hlt
xchg
jbe
loopne
aas
lock
fimull
enter
mull
jne
mov
data16
jbe
fwait
test
xchg
fs
dec
scas
cltd
sbb
pusha
xchg
or
pop
pop
xchg
xchg
adc
imul
push
xor
push
sbb
daa
stos
add
imul
cmp
hlt
mov
gs
imul
je
push
add
xchg
cmpsl
clc
call
test
scas
xchg
arpl
jmp
pop
pusha
and
mov
sbb
cmp
imul
imul
lds
out
pop
push
test
xchg
loopne
xor
hlt
popa
icebp
imul
popl
sbb
test
xlat
imul
lds
lods
fsubrl
imul
push
push
loopne
inc
inc
add
ret
or
leave
cs
jecxz
xchg
leave
insb
sub
mov
cli
sbb
cmp
subb
ljmp
pop
test
popa
cli
das
popa
repnz
pop
cmpsb
decl
pop
lcall
mov
clc
shll
and
push
xchg
mov
fwait
shrb
cmp
inc
or
jle
push
jns
xchg
out
dec
cbtw
test
out
imul
fabs
imul
mov
rcl
push
rcrb
dec
std
pop
loope
adc
dec
and
ret
xchg
enter
rorb
cmp
test
add
movsb
cmp
je
test
aaa
mov
xchg
add
mov
dec
subb
aam
mov
outsb
bound
push
mov
rol
jo
into
push
jno
lock
test
lods
sub
xchg
mov
pusha
aad
cli
jge
xchg
xchg
sub
pusha
push
or
cmp
push
popa
jno
mov
out
lds
jp
ds
fsubrl
cmp
in
dec
test
mov
adc
xor
mov
inc
mov
inc
scas
cmpsl
sbb
cmpsl
mov
sti
sub
mov
or
mov
xor
test
icebp
scas
jmp
filds
jl
add
xchg
cmp
cmc
mov
inc
jbe
outsl
cmpsb
rorl
sub
aad
cli
xor
lock
aad
out
popf
cmp
fldcw
aad
xor
add
rolb
ret
rcll
ljmp
test
out
push
pop
jns
andb
stos
test
push
fldcw
mov
cmp
sbbb
imul
ja
dec
dec
dec
inc
pop
imul
or
leave
mov
pushf
xchg
icebp
add
outsl
out
or
cmp
popfw
mov
jno
ffreep
jmp
shll
adc
fwait
sbb
and
dec
dec
sarb
cmpsb
and
mov
push
and
movsb
jl
mov
sbb
int3
cmp
imul
add
in
mov
cmpsl
mov
or
es
dec
mov
cmp
sbb
mov
dec
outsb
xchg
push
scas
ret
repnz
roll
cwtl
cwtl
xlat
lods
xchg
in
mov
and
out
insl
push
ficoml
cltd
int
xchg
add
mov
mov
loope
insl
insb
fildl
aad
call
fwait
shll
pop
or
sbb
xchg
js
pop
es
xchg
and
xor
pop
clc
xlat
pusha
mov
arpl
in
xor
inc
iret
mov
lret
cmp
cmp
cmpsb
sub
shll
popf
in
stos
subb
and
xchg
mov
xlat
clc
mov
scas
aaa
lock
or
std
xor
dec
push
mov
xchg
sbbl
or
and
fiaddl
inc
cmp
test
les
loope
cli
addb
cmpsb
lcall
xor
addb
or
lcall
cli
and
pushf
lcall
ffree
xor
subb
pop
mov
mov
rcr
sbb
shll
add
call
flds
push
dec
hlt
add
mov
mov
and
sbb
in
xchg
and
aam
ja
dec
popf
fmuls
cltd
dec
mov
insb
pop
nop
sub
fadds
repnz
lds
mov
scas
movsl
push
rcll
dec
sbb
inc
sar
fadds
pop
add
push
jnp
shrb
lods
jg
pop
and
test
shrb
inc
add
sarl
mov
jno
pop
lret
inc
shlb
mov
mov
and
lcall
in
adc
lods
loope
enter
push
flds
sbb
sbb
push
stc
loopne
mov
fwait
test
pop
lds
pop
inc
enter
es
and
test
adc
and
add
mov
mov
mull
pop
inc
push
inc
jp
jns
loope
ret
pop
call
lcall
sub
adc
mov
fs
mov
popf
pop
pop
push
enter
pop
das
fsubrs
jns
fcomps
popa
pusha
popf
pop
loopne
pop
ss
daa
enter
mov
mov
out
push
cmpsl
jnp
hlt
fbstp
pop
cmpsl
add
sub
xchg
mov
cmpsb
fcomps
mov
pop
jl
loope
cltd
pop
aas
jbe
loope
push
loop
adc
lea
stc
cmc
clc
call
jmp
shr
clc
clc
test
stc
cmp
call
add
add
sar
shld
cmp
movsbw
push
inc
mov
dec
movzbw
sub
neg
lahf
lahf
push
setle
push
xor
bts
cmc
push
rcr
btr
dec
sub
not
lea
bswap
jmp
pushl
lea
ja
setp
mov
push
push
inc
lea
pusha
inc
lea
sbb
stc
test
xchg
bt
bts
bswap
mov
sar
rol
bt
sar
mov
push
pushf
cmp
clc
mov
xor
bsr
pop
mov
clc
bt
cmp
sub
push
push
pushf
rep
pusha
not
mov
push
pushf
pushf
lea
jmp
lea
ja
not
sub
pusha
add
add
setae
rcr
bts
mov
pushf
call
and
xchg
ss
sub
nop
sbb
shll
jl
je
sub
ret
jmp
lds
aam
sbb
add
notb
loop
mov
pop
sub
shl
add
push
or
filds
out
sti
mov
incb
xchg
mov
in
xchg
outsl
xlat
xor
cmp
mov
inc
ds
fnstcw
pusha
lods
repnz
dec
fsub
mov
int3
mov
std
into
imul
and
sbb
jmp
pushl
movl
push
lea
jmp
shl
mov
stc
test
mov
pusha
sub
stc
ror
jmp
shr
mov
movw
pushl
repnz
movb
pushf
pusha
jmp
mov
pushf
lea
call
push
mov
pushf
mov
pusha
pushf
pusha
push
lea
jmp
adc
shrd
btr
mov
pusha
clc
pushf
sub
pushf
repnz
pushf
lea
jne
clc
mov
shr
jmp
jmp
imul
stos
mov
xchg
pop
rcrb
sti
clc
out
cmpsb
mov
push
pushf
add
clc
adc
adc
testb
xor
xor
loopne
jne
and
pop
cmp
movsb
xchg
mov
dec
push
sbb
xchg
in
lcall
dec
and
jns
pusha
fstps
popa
test
pop
pop
pusha
movb
pushl
ret
lea
jne
push
not
mov
pushl
movb
jmp
stc
mov
mov
jmp
bt
pusha
sub
call
jmp
fcomps
cmpsl
xor
fidivl
lret
adc
mov
xlat
leave
cwtl
jae
nop
rclb
lods
pop
imul
adc
repnz
into
cmp
ficoml
sub
into
and
sbbl
in
jae
divb
movsl
xor
inc
in
fidivrs
outsb
ret
pop
lds
lea
je
cmc
push
movw
cmp
add
stc
cmp
mov
pushf
pushf
mov
lea
jb
clc
test
cmp
push
jmp
mov
fimull
mov
out
ss
sbbl
into
cltd
xchg
or
push
jmp
mov
cltd
sub
int
jb
fs
and
test
shl
in
xor
sbbb
mov
aaa
push
shlb
or
push
cwtl
mov
sahf
stos
cmpsb
or
nop
shlb
int
mov
push
fldt
enter
pop
adc
enter
jge
jle
inc
aaa
pop
mov
xchg
filds
incl
adc
aas
loope
adc
fcmovbe
int3
push
mov
jno
leave
mov
outsl
aad
std
cld
mov
jle
ja
or
aad
repnz
bound
pop
cmp
sti
ss
fsubrs
mov
fidivrl
and
dec
sub
pusha
xor
sub
inc
inc
fcoml
lret
or
fadds
cwtl
shlb
jle
pop
pop
add
popf
or
jae
cmp
fisttpl
cmp
dec
pop
jecxz
test
ljmp
in
aam
pop
or
mov
sbb
pop
jae
es
pop
in
leave
movsb
pop
sahf
push
fcomi
bound
mov
adc
iret
sbb
dec
adc
mov
sahf
test
push
dec
pop
repz
xlat
dec
xchg
or
ss
or
xchg
push
mov
clc
add
pop
jne
sbb
jle
pop
push
and
dec
cmp
call
mov
imul
ret
jle
lds
cmpsb
jl
rcl
add
pop
or
popa
lea
fisubrl
pop
stos
jnp
pop
jp
out
dec
mov
repnz
sahf
cltd
add
mov
mov
jb
inc
test
arpl
cmp
clc
push
add
bt
bt
movzwl
add
call
lret
rcr
xor
stc
rolb
dec
lods
lods
xchg
mov
data16
rcll
lea
inc
inc
rcl
data16
cwtl
dec
fdivs
mov
in
mov
daa
pop
add
and
std
sti
jecxz
jl
je
xchg
fldl2e
mov
cmp
add
iret
pushl
mov
stos
mov
out
jns
mov
leave
jmp
lods
lock
adc
ja
movsl
out
les
add
es
into
out
inc
pop
nop
jmp
ds
jb
or
stos
sbb
in
leave
dec
jl
ja
inc
insb
ud2
mov
fsubp
xchg
add
cs
loope
divl
push
sbb
sub
imul
inc
dec
lods
cltd
fwait
enter
shlb
cmp
pop
adc
stc
inc
cmpsb
enter
aaa
push
lds
aad
andl
pop
fiadds
stc
jecxz
hlt
xchg
add
push
fsub
loopne
scas
incb
mov
jg
jno
pop
sub
inc
imul
push
dec
ljmp
lea
arpl
clc
push
nop
daa
dec
cwtl
xchg
daa
push
sub
mov
sub
and
pop
int3
lahf
adc
inc
jns
or
xchg
jnp
push
sbb
std
ja
imul
daa
jmp
ficoms
call
xor
fs
adc
ss
imul
sbbb
shl
movsb
xor
lcall
or
out
pop
inc
jo
popa
fstpt
or
pop
stos
lds
cmpsb
jb
xchg
clc
add
dec
clc
inc
stos
je
mov
mov
sbb
xor
inc
mov
dec
jae
call
push
cs
jae
lods
sti
mov
add
das
jle
sbb
ret
das
and
cwtl
movl
sbb
pop
push
scas
repz
int3
add
pop
lock
mov
ret
out
ljmp
test
jne
clc
xchg
ret
xchg
into
lcall
xchg
imul
mov
mull
and
jp
cmp
mov
nop
push
mov
outsl
icebp
scas
mov
outsl
icebp
and
pop
xchg
shlb
ja
inc
les
push
adc
lahf
das
jle
fcmovne
inc
cli
adc
pushf
lods
mov
push
inc
fstpl
enter
das
jle
dec
jnp
cs
cli
pop
dec
jecxz
mov
arpl
fs
ficoml
out
cmc
and
mov
sbb
add
xacquire
lret
jae
sbb
sub
mov
pop
out
ret
dec
sub
adc
jbe
xlat
jle,pn
add
cld
pop
sub
icebp
or
test
iret
lods
je,pt
sbb
cmp
jle
sbb
mov
je
push
adc
pop
push
inc
cmp
js
negb
roll
mov
int
jle
and
sub
std
scas
cmp
fs
call
stos
hlt
das
adc
sahf
push
es
xchg
int3
outsl
ficomps
ficoms
dec
jbe
sub
mov
pusha
push
addr16
fimull
mov
jno
xchg
cmpl
sti
mov
sub
xchg
mov
shl
mov
cmp
jns
xor
and
jne
pushf
test
sub
mov
pusha
call
jmp
push
es
mov
lds
rorb
pop
repz
xchg
out
sub
fisubl
imul
std
inc
int3
out
or
xchg
cmp
inc
push
pop
or
out
fwait
movsl
rcrb
lock
pop
lcall
and
fwait
mov
fldl
test
xorb
js
lock
imulb
pop
pop
and
add
ret
pop
ret
or
test
or
and
lret
push
inc
testl
shr
movzbl
mov
adc
jmp
jmp
shl
mov
pushf
stc
clc
and
jmp
jmp
pushf
jmp
jmp
jecxz
dec
sub
cltd
jmp
sub
out
pop
xchg
jle
sbb
push
jb
jg
xchg
rorb
mov
test
lret
loop
pop
adc
arpl
fildl
fdivrp
sbb
jne
enter
pop
stc
int3
fldt
or
and
xor
inc
push
cmpsl
jecxz
in
mov
insl
cmp
sbb
lea
cmp
adc
mov
lods
xchg
adc
mov
mov
aaa
and
loop
pusha
and
popa
into
iret
std
cmp
inc
cwtl
push
fsts
ret
dec
jle
insl
das
out
test
fsubrl
add
cmp
rorl
fucom
jo
fs
jne
pusha
mov
push
pushf
inc
pushl
inc
push
push
lea
jmp
push
ret
jle
lds
imul
insl
pop
pop
mov
fisubrl
pop
movsl
cmp
rcr
dec
adc
mov
mov
sub
jbe
loope
clc
xchg
cmp
push
in
inc
rcrb
cmp
stos
sub
mov
jne
rcll
repnz
ret
ljmp
decb
gs
call
and
inc
rcrb
push
into
popa
js
jle
out
icebp
mov
add
lea
insb
mov
scas
dec
push
jmp
mov
mov
addr16
sbb
enter
lock
stc
call
add
jecxz
lcall
add
arpl
ret
data16
mov
adc
gs
sub
sub
xchg
sbb
lea
lret
adc
and
shrb
jle
mov
andl
or
push
pushf
lret
out
mov
mov
add
dec
xchg
sbb
add
push
jmp
xlat
stc
or
enter
inc
sbb
jp
dec
push
sbb
fildll
xchg
push
cs
xlat
mov
dec
or
scas
std
sbb
cmpsl
mov
push
jmp
cli
lahf
inc
or
sub
fidivrl
push
outsl
mov
sub
dec
and
lds
cmpsb
pushf
mov
call
mov
dec
pusha
cmc
clc
shl
not
lods
push
clc
clc
neg
cmp
jmp
setl
jmp
jmp
into
ficoml
push
add
and
aas
mov
out
adc
aas
repnz
aam
scas
into
inc
mov
jle
cmpsb
mov
fidivrs
jns
inc
in
fnsave
jl
add
out
lock
pop
addl
cld
ret
and
adc
imul
jmp
repnz
jo
xorb
div
lods
push
enter
sbb
mov
or
push
out
popf
pop
lods
inc
inc
sahf
int
mov
adc
fsubrl
outsl
lds
mov
add
adc
pop
out
push
add
mov
jl
insb
jmp
cmp
in
movsl
inc
xor
mov
ret
cmc
mov
xchg
int
xorl
mov
push
movsb
rcl
addr16
popa
mov
pop
rol
bound
lea
call
pushf
pushf
lea
jmp
setbe
lea
pushf
movl
pushf
movb
pushl
popl
pusha
pushl
ret
jmp
bt
push
test
stc
test
pushf
jmp
test
call
jmp
sti
stos
mov
mov
rcll
sub
bound
fwait
les
ret
inc
push
sub
orl
push
and
andl
pusha
lret
push
into
adc
sbbl
mov
insb
notl
out
sbb
or
adc
pop
cmp
fdivrl
jo
push
push
xchg
sub
jae
mov
fisttpl
addb
cmc
orb
imul
imul
scas
rorb
and
add
bound
xor
ss
scas
pop
mov
jns
es
sbb
testl
and
jb
call
hlt
xchg
adc
sbb
push
jne
scas
mov
ret
stos
inc
pop
adc
aad
and
sbb
pop
inc
test
mov
pop
mov
xchg
stos
cmp
std
mov
cmpsl
mov
lock
fdivrl
std
lea
std
rcl
and
out
inc
sbb
fidivs
push
mov
mov
imul
xchg
aad
pop
inc
mov
add
dec
hlt
sub
mov
fs
je
call
lea
jb
jmp
lea
ja
lods
pusha
pusha
neg
push
push
clc
mov
add
clc
stc
cmc
not
push
clc
clc
pushf
ror
mov
clc
cmc
not
bt
jmp
mov
movzbw
bswap
push
mov
pushf
call
bts
lahf
mov
push
pushf
push
shl
push
call
adc
mov
lea
jae
pusha
jmp
js
aad
jle
loope
mov
sarl
fidivrs
sahf
roll
mov
loop
mov
data16
mov
and
cltd
leave
ficoml
inc
lahf
pop
stos
xchg
mov
jl
aas
ret
pop
jae
repz
xorl
xchg
adc
jo
pop
frstor
fs
jne
cwtl
movzbw
movb
bswap
call
add
mov
pusha
cmp
cmp
pushf
cmpb
pushf
movb
lea
jne
cmc
bt
ror
bt
sub
pushf
xor
mov
adc
sbb
adc
add
sub
inc
mov
cmp
push
test
pusha
jmp
repz
jl
push
push
mov
movl
pusha
pushf
lea
jmp
pushl
pushl
popl
pushf
pushf
pushl
ret
and
push
daa
jle
fidivl
sbb
inc
int3
shl
cmpsb
loop
lret
pushf
test
es
add
push
adc
push
and
xchg
inc
and
xchg
cmc
inc
sub
xchg
scas
pop
mov
sbb
push
push
dec
test
pop
add
sub
inc
mov
insb
push
mov
jg
push
mov
mov
ret
jle
aad
sbbb
in
xlat
mov
pop
ss
repnz
es
mov
ror
push
int3
ficoms
aas
shrl
orb
pop
es
dec
sahf
mov
lea
fwait
scas
sub
or
jecxz
fwait
and
repnz
in
lds
addb
frstor
jle
test
fisubrs
push
and
test
test
mov
repz
inc
jmp
movsl
mov
cltd
and
pop
adc
add
movsl
les
pop
add
cmc
sbb
pop
adc
mov
subl
cwtl
cmpsl
fistl
inc
pop
inc
rcrl
ret
sbb
leave
data16
shll
lods
mov
in
les
xchg
cmp
xchg
push
sub
inc
cwtl
lahf
add
pop
repnz
cmp
inc
mov
xor
roll
jmp
push
lea
jae
setle
not
push
mov
jmp
or
or
push
or
dec
cmpl
or
dec
mov
and
pushf
add
mov
and
in
sbb
push
ljmp
and
xor
dec
and
sub
and
jle
outsb
push
addl
les
dec
jge
ljmp
out
and
fisubl
xor
or
push
xchg
ffree
rcrb
stos
push
nop
dec
mov
or
imul
pushl
cmp
sti
lods
xor
js
and
scas
and
pop
pop
mov
cmp
jb
xchg
aaa
sub
and
scas
sub
gs
xor
mov
imul
sbb
push
cs
lea
jne
add
bt
not
bt
sub
stc
mov
shr
test
push
and
add
mov
shl
mov
pusha
push
mov
bt
test
movb
pushf
pushl
call
push
mov
lea
lea
push
mov
lea
jmp
pushf
lea
ja
clc
imul
pushf
pushf
add
pusha
push
push
lea
jmp
push
leave
aas
and
fiaddl
stos
loope
aam
sbb
ret
pushf
mov
fimull
cmp
inc
dec
push
gs
cmp
adc
cmp
out
scas
test
fildll
jmp
cmpsb
push
fcom
jge
dec
jbe
in
mov
mov
inc
jp
dec
incb
aam
mov
inc
cwtl
fsts
dec
sarl
push
fcoms
dec
jnp
xchg
out
xor
loope
fs
fldt
repz
fidivl
pop
push
aaa
js
ret
iret
arpl
jp
mov
cmpsb
or
ret
pop
or
ds
inc
mov
and
mov
sub
mov
sbb
enter
xchg
out
adc
sub
lahf
push
dec
jp
mov
ret
sub
xlat
orl
xchg
ret
fnstsw
outsl
fcomp
dec
and
imul
sub
movsb
pop
xchg
clc
out
test
add
movsl
inc
andl
push
and
call
not
imul
fbstp
mov
xchg
ret
hlt
adcb
outsl
loope
sahf
loop
shll
mov
test
arpl
mov
cli
lds
loope
into
icebp
jmp
push
add
ds
jp
xor
jecxz
and
jbe
stc
adc
sub
jo
ror
sbbb
cmpb
mov
inc
push
setp
mov
lea
pusha
pushl
call
pusha
jmp
setnp
xchg
pop
mov
pusha
jmp
sub
or
lea
cmp
push
cmc
sub
movb
pushl
popl
pushf
jmp
stos
pusha
lea
jmp
ret
cmc
xor
jle
rorb
scas
jmp
cmp
jb
mov
xchg
mov
pop
and
push
inc
pop
cmp
and
aaa
scas
test
arpl
gs
add
fcmovnb
sbb
hlt
xchg
mov
xlat
loopne
stc
add
xor
cmp
cs
je
xor
std
jmp
cmp
mov
out
cmp
inc
rorb
add
mov
cs
dec
shll
mov
push
cmp
xchg
xchg
ja
mov
add
cmp
andl
jle
int
in
xchg
sarb
sbb
push
mov
popl
and
test
shlb
mov
imul
mov
push
out
test
dec
push
adc
push
mov
repnz
jle
repz
test
aad
pop
push
add
pop
and
inc
jl
and
pop
cmpsb
push
rol
mov
movsb
xchg
test
mov
loop
and
out
ja
andl
mov
mov
jge,pt
jmp
xchg
jg
lahf
pop
in
dec
pop
lods
xchg
stos
dec
mov
xchg
sbb
cmp
aad
add
nop
push
add
push
add
nop
push
add
push
add
rclb
add
add
add
lea
jb
cmc
cmp
pushf
jmp
jmp
lea
ja
cmp
cmc
add
jmp
mov
movb
pushl
mov
pushl
ret
mov
mov
jle
push
or
cltd
mov
mov
scas
jbe
scas
mov
fistpl
aaa
test
aad
hlt
les
fimull
xchg
rcll
lcall
mov
and
jae
jmp
pusha
lea
jmp
or
call
cmpsb
ds
push
jle
dec
mov
in
iret
pop
cmp
inc
sahf
jnp
push
jle
je
sub
stos
movsb
rolb
dec
jbe
xchg
lahf
mov
jne
das
mov
push
mov
ret
lea
jns
fadd
sbb
jno
adc
inc
pop
jnp
add
and
lahf
iret
int3
push
rolb
cmp
fisttpll
sub
add
add
dec
jnp
sarl
inc
aas
and
xchg
pop
sti
pop
push
in
stc
push
mov
pusha
pop
add
in
clc
testl
daa
in
jne
iret
stos
out
test
sub
and
inc
iret
cmp
xor
jo
into
insb
push
stc
shll
gs
scas
inc
jbe
gs
xchg
add
aas
int3
sub
push
fildll
int3
adc
push
xchg
inc
iret
push
jecxz
or
xor
aaa
mov
stos
dec
xor
mov
out
clc
lock
aam
insb
xor
test
enter
xchg
push
push
outsb
out
push
add
xchg
mov
aad
xor
icebp
fwait
push
mov
nop
dec
mov
xor
cltd
stos
out
jl
sub
sbb
pop
lods
dec
add
jne
cs
xchg
test
pusha
fbstp
je
push
movsb
cmpsl
xlat
mov
or
mov
js
test
nop
mov
xor
stos
sahf
sub
or
jae
ljmp
xor
ffree
cmpsl
lahf
faddl
xchg
dec
icebp
pop
xchg
lods
out
dec
loopne
xchg
dec
les
outsb
ret
and
jns
cmpl
hlt
or
jmp
jnp
test
cmp
mov
pop
pop
and
int
fidivrs
ror
lret
fiadds
push
mov
mov
and
xlat
sub
fs
push
dec
rcll
cmpl
mov
push
sbb
sarb
xor
fadds
sub
xor
mov
adc
xor
xor
mov
repz
mov
or
sbb
ficompl
lret
pusha
fstl
push
lock
loopne
jb
jo
xchg
and
fcmove
pop
inc
stos
jno
push
inc
xchg
push
outsl
lock
aaa
sub
inc
stos
jno
xchg
jmp
out
addr16
andb
repz
inc
in
ja
icebp
mov
sub
inc
dec
mov
or
xchg
cmc
sub
bt
sub
dec
bsr
bt
add
clc
adc
mov
cmc
pusha
mov
bt
mov
pushl
pushf
repnz
push
call
jmp
setae
lods
pushf
pushf
stc
neg
pushl
pusha
cmc
add
jmp
pushf
jmp
mov
pushl
movl
xchg
pusha
mov
cwtl
movl
lea
ja
lea
call
push
pushf
pushl
lea
jb
pushf
push
pushf
pushl
ret
inc
mov
shll
jecxz
shr
mov
call
jmp
pushf
lea
jnp
push
push
pushl
movl
movw
movb
lea
jmp
mov
call
push
push
movl
push
movl
pusha
push
lea
jmp
pushf
mov
not
jmp
loopne
push
sbb
fisubl
xchg
adc
push
jg
sub
sti
out
and
jle
sbb
cmp
sub
shll
or
fsubl
mov
stc
pop
and
cmp
fstps
nop
mov
pop
shl
and
fsts
imul
pop
das
neg
testl
dec
int3
sarl
xor
xchg
lock
std
std
mov
popa
repz
ret
jnp
xchg
mov
add
cltd
adc
pop
push
xlat
jo
out
fmul
jge
leave
in
sbb
jmp
clc
aam
pop
roll
shrb
adc
test
fstpl
add
lock
sbb
in
xchg
push
mov
je
xchg
sub
and
enter
xlat
inc
pop
mov
sbb
les
sarl
inc
pop
mov
fiadds
add
push
aas
pop
sbb
or
push
lret
rcrb
and
mov
xchg
inc
jno
adc
or
mov
pop
out
outsb
cmp
je
inc
out
pop
in
jp
xor
shll
ss
cmp
cld
fs
mov
idiv
loope
dec
cmp
loop
add
xchg
fisubs
ja
insb
lds
and
aas
push
add
sub
cld
jmp
fisubrl
sub
pop
cmp
push
dec
pop
jl
jle
jmp
mov
popa
mov
nopl
sarl
ja
xorl
scas
push
push
pop
fwait
or
push
maskmovq
negl
push
ss
out
pop
sub
popf
pop
xchg
mov
lods
repnz
jno
loopne
sub
inc
rcrl
lods
int
mov
or
mov
popf
pop
sbb
xchg
ficoms
adc
mov
inc
push
jecxz
stos
orl
lret
push
mov
pushf
test
jmp
pop
mov
sbb
sbb
inc
xchg
and
es
or
dec
push
xchg
mov
out
sbb
xchg
or
js
lret
jp
repnz
fcmovbe
js
icebp
or
std
mov
push
adc
test
jl
pushl
pop
paddsb
es
push
in
mov
dec
outsb
pause
xchg
sbb
push
mov
sbbl
inc
std
jl
hlt
dec
mov
push
xor
jb
sub
inc
stc
cmpsb
mov
mov
ret
xchg
mov
loopne
adc
inc
mov
movzbl
mov
pushf
mov
not
jmp
dec
es
sbb
jmp
subb
outsb
mov
lahf
into
lret
aam
andb
insb
push
jp
fcmove
xchg
sub
mov
xor
or
bound
rclb
sub
scas
sbb
pop
inc
xchg
ljmp
cli
adc
cltd
inc
iret
into
sbb
cltd
push
mov
sub
scas
xchg
stos
ljmp
fdivs
xchg
sbb
aaa
pop
dec
sub
mov
pushf
pushf
push
adc
push
pusha
pushl
ret
mov
push
stc
bt
repnz
mov
mov
push
pushf
lea
jne
movzbw
mov
lahf
jmp
inc
inc
ret
movsb
sahf
in
xchg
jno
xlat
sbb
push
sbbl
jns
push
pop
sub
jle
and
stc
and
add
mov
dec
mov
mov
sub
mov
sti
pushl
popl
stc
movb
pushl
call
movsbw
mov
bswap
pop
push
lea
pushf
xchg
lahf
movzbw
pushf
call
inc
pop
push
popf
sub
jp
arpl
jle
loope
shll
add
pop
jle
sbb
imul
push
bound
loopne
or
dec
shrw
xchg
loopne
and
push
mov
xchg
xlat
adc
xchg
notl
mov
fsubp
lods
mov
enter
pushf
call
not
stc
bt
stc
ror
call
cmp
stc
cmpb
push
jmp
inc
mov
fucomi
push
sub
add
or
pushf
jmp
movzbw
lea
lea
mov
mov
pusha
mov
movb
mov
jmp
mov
shl
add
sbb
stc
pushf
mov
sub
jb
cmc
bt
test
call
lea
ja
rcl
stc
clc
sub
adc
stc
add
dec
mov
ror
test
rcr
mov
push
cmc
jmp
pusha
cmc
cmp
cmp
push
lea
jae
push
pushf
mov
lea
jmp
jno
repnz
dec
js
xor
leave
lret
xchg
add
cmpl
mov
and
pop
jb
mov
xchg
scas
test
pop
aaa
icebp
mov
cmp
sub
cmpsl
rorb
lret
mov
int
push
mov
mov
and
cmp
iret
std
out
mov
fldenv
les
rorl
push
pop
ret
sbb
sub
nop
dec
dec
xor
jle
jle
ljmp
fmul
xor
or
jp
cld
test
lock
test
cwtl
lahf
jno
mov
cmp
jl
xor
dec
leave
xchg
lahf
jno
inc
fbstp
sub
stos
hlt
call
jae
popf
insb
ret
pop
mov
into
mov
movsbw
not
mov
pusha
mov
jmp
mov
not
setns
seto
movzbw
lea
push
pushf
mov
call
jmp
sub
adc
fimull
sbb
out
mov
or
lods
fistpll
mov
mov
fninit
mov
jle
dec
adc
in
xlat
mov
daa
adc
lcall
cmp
inc
mov
add
std
adc
fcmovu
pusha
sub
daa
xor
cmp
pop
idivb
mov
xor
ds
cmp
arpl
jge
jmp
inc
xor
xchg
add
push
push
jmp
mov
mov
outsl
pop
sub
fwait
inc
jnp
pop
sbb
fisubl
leave
inc
dec
fsubs
xor
popf
sbb
sub
fistpll
lods
inc
inc
int
roll
sbb
xchg
fnop
or
fmuls
sarl
popa
inc
and
jb
inc
xchg
ja
das
mov
sbb
push
mov
lock
jmp
call
push
sub
sub
das
fbstp
mov
jmp
shrl
nop
aas
leave
add
fiadds
jo
dec
out
aam
jno
movsl
out
mov
adc
and
aad
loope
and
mov
lea
push
ja
and
incb
femms
fnstenv
aad
xchg
jge
gs
pusha
test
jns
data16
clc
in
xchg
gs
in
adc
scas
fisubs
decl
stc
out
add
out
xchg
cmp
shlb
mov
or
push
pop
out
pushl
inc
in
je
dec
dec
mov
gs
mov
push
out
push
cmp
mov
jbe
sub
shll
mov
and
gs
pushf
in
sbb
pop
gs
pop
mov
fst
xor
stos
and
aad
scas
push
pop
ja
xlat
fdivp
mov
pop
jl
mov
out
lret
das
insl
push
loope
jge
adc
add
out
pop
mov
xchg
inc
out
int
insl
push
inc
sti
fldcw
ljmp
push
repnz
add
orb
push
push
es
fsts
out
movsl
test
jge
cmp
test
xlat
out
push
xor
cmp
jge
ss
fidivs
pushf
fsubr
iret
inc
cltd
dec
das
out
jnp
cmp
lods
cmp
jnp
mov
xchg
js
popf
pusha
cmp
loope
mov
dec
dec
cmp
xchg
es
pushf
fisubs
push
inc
aad
jl
cmp
scas
wrmsr
push
push
shll
mov
adc
frstor
ret
pop
ffreep
mov
bound
in
mov
in
cmp
pop
add
mov
mov
xor
inc
test
add
int
jae
push
pop
cli
and
add
div
enter
cmp
scas
adc
loope
mov
cmp
cmp
out
popa
xor
mov
pop
pop
data16
inc
jl
fcompl
or
js
out
mov
repz
js
or
arpl
cmc
out
xchg
ss
enter
loop
push
jbe
jmp
das
mov
mov
fsubl
and
neg
xchg
cmp
and
cmp
lods
test
jge
xchg
mov
adc
lods
or
aam
xlat
pop
adc
popf
addr16
ss
fistpll
scas
sub
stos
in
inc
push
aad
push
leave
movb
adc
cmpsl
adc
mov
fcmovb
cmp
mov
loope
adc
pusha
mov
jnp
aad
jae
mov
or
dec
mov
mov
pusha
lahf
ja
push
mov
fdivrl
js
bnd
push
fs
movsb
pop
cmp
loopne
data16
fsubr
sahf
gs
inc
cmp
mov
test
cmpsl
pushf
cwtl
cmp
leave
movsl
roll
filds
cmp
cmp
jge
pushf
addr16
ds
fmuls
lea
cmp
movsl
aaa
jl
das
out
popf
mov
aad
fcompl
push
nop
dec
leave
das
aas
ret
push
daa
jnp
int3
jl
jnp
enter
pop
cltd
jmp
mov
js
mov
pop
out
andb
popa
inc
aad
pop
push
sahf
cltd
pop
js
pushf
jge
sti
cmp
push
pop
push
out
shrl
movsb
int
mov
mov
xlat
dec
daa
out
inc
cmp
cmc
fnstsw
das
fiadds
cmp
das
movsl
call
ss
pop
dec
cmp
nop
lahf
pop
test
nop
enter
enter
sbb
inc
adc
lahf
out
movsl
mov
adc
sbb
xchg
adc
mov
out
xchg
add
pushw
push
mov
push
jnp
lock
mov
pop
popa
pop
lea
xchg
das
sbb
mov
pop
lock
pop
lock
mov
js
faddp
daa
mov
xchg
pop
push
pusha
int
pop
xor
jge
movsbl
jle
inc
sub
leave
daa
testl
xchg
movsl
mov
jle
xchg
mov
add
cmp
loope
cmp
push
mov
and
ljmp
int
das
mov
jle
jmp
push
jmp
gs
xlat
jnp
popa
aam
ret
cmp
inc
mov
js
jge
int
pxor
pop
inc
test
gs
js
aam
notl
aad
mov
popa
loopne
movsb
cmp
or
daa
inc
push
mov
mov
les
sbb
mov
addr16
mov
fs
xchg
xor
sbb
push
rorb
incl
mov
dec
push
int
or
in
xchg
push
test
inc
sahf
in
pusha
sbb
mov
jle
lds
das
out
mov
arpl
jle
cmp
xor
jge
in
in
mov
mov
jle
pop
xlat
adc
cmp
aad
xor
bswap
push
cmpb
pop
fisttps
add
and
int
in
cmp
pop
das
popf
daa
and
mov
jnp
push
pop
popa
pop
int
cmp
lods
jl
dec
stos
les
rorb
mov
rorl
movsl
xchg
or
lods
rorb
xchg
mov
push
jle
out
pop
int
jge
cmp
lods
jge
in
jle
xchg
xor
fmuls
sbb
rorb
gs
int
jnp
daa
pop
lods
inc
xchg
mov
aad
inc
cmp
dec
pop
xchg
or
fisubs
mov
sbb
jle
push
mov
pusha
dec
test
ret
incb
mov
lods
xor
ss
loopne
dec
test
push
mov
int
das
in
int
popf
inc
pop
lods
fsubs
std
mov
int
ja
inc
cltd
loopne
push
and
mov
cwtl
int
mov
test
push
scas
popa
push
xor
movsl
pop
mov
das
pop
int
fwait
cmp
push
fstpl
xor
pop
int
insl
pop
inc
mov
push
data16
pusha
fisttps
sbb
out
stc
dec
fs
pop
cltd
mov
lahf
mov
fcoms
cmc
mov
mov
std
add
pop
adc
pop
mov
mov
add
xchg
jo
fiadds
popa
adc
rcr
lds
aad
xchg
adcb
cmp
lods
aad
mov
mov
add
xchg
inc
jle
mov
fcomps
scas
ss
cmp
mov
das
repz
pop
lret
push
jo
mov
sub
int
mov
pop
int
dec
add
mov
int
sbb
adc
push
cmp
bound
cmp
or
daa
das
les
cwtl
xlat
aas
inc
ja
sti
pop
jge
int
or
xchg
mov
mov
pushf
bound
jge
mov
xor
or
daa
outsb
int
xchg
jnp
popf
mov
outsb
int
or
adc
insb
bound
dec
subb
lock
lods
mov
sbb
out
adc
xchg
push
bound
mov
xadd
mov
jo
mov
aam
pop
addr16
int
out
jl
and
int
shlb
push
inc
dec
dec
inc
js
xchg
pop
push
int
ret
test
movsl
pushf
lcall
bound
into
fwait
pop
andl
inc
cmp
pop
cmp
addl
mov
jle
data16
js
fisubl
popa
sbb
cmpsl
roll
adc
das
and
test
cmp
js
movsl
or
clc
xchg
test
xchg
mov
int
dec
rcll
bswap
jbe
or
aam
inc
or
xlat
divb
and
sti
sarl
out
mov
test
repnz
jb
jmp
cmc
lahf
fisubrs
push
mov
mov
aam
fsubs
mov
jle
ret
das
mov
insb
mov
xor
lock
fcoms
pop
das
inc
shll
insl
popf
add
xor
popf
in
or
bound
jne
cmpsl
xor
ja
ret
push
mov
ret
mov
loope
int
mov
adc
sub
push
push
lret
es
mov
fldenv
push
add
cmp
pusha
sti
push
mov
subl
dec
pop
jle
dec
out
jp
pop
test
push
push
dec
aad
lds
not
pop
loope
push
cmp
dec
sti
roll
push
cmp
jne
adc
jecxz
cs
lret
xor
cltd
std
inc
daa
std
add
sbb
loope
in
pop
data16
leave
add
and
loope
call
mov
loop
mov
loope
cltd
inc
cmpsb
sahf
rorl
push
outsb
scas
sbb
pop
jbe
dec
inc
sbb
mov
mov
mov
out
outsb
mov
dec
enter
stos
adc
rcrb
clc
inc
addr16
stos
test
clc
das
fadds
inc
stos
enter
aad
push
testl
mov
mov
cmpsb
imul
rol
ret
into
dec
jecxz
fchs
xchg
push
loope
pop
imul
xchg
cli
fimuls
test
cltd
mov
mov
test
inc
cmpsl
adc
lock
shrb
xlat
cmp
ret
popa
add
test
push
inc
pop
jg
in
cwtl
imul
addr16
loope
add
xchg
push
sub
test
fidivrs
daa
xlat
pop
fdivs
fdivl
dec
pop
or
mov
test
lahf
jge
fisttps
sub
dec
data16
aad
addb
flds
test
xchg
outsb
dec
les
leave
jecxz
xchg
popa
ja
sbb
sar
loope
test
fsubl
ret
popf
fbstp
das
lea
and
push
js
mov
nop
stos
pop
in
int
test
push
faddl
js
jmp
mov
stos
cmpsb
rorl
jo
lea
sub
addr16
xor
jne
call
loop
jge
enter
popf
xchg
jno
into
jmp
popa
sbb
lods
out
pop
cmp
push
movsl
cmpsb
inc
sarl
fdivr
pop
inc
or
dec
and
paddd
xchg
nop
cmpsb
leave
xlat
rolb
ljmp
jmp
pop
mov
push
push
mov
and
dec
jge
inc
adc
dec
adc
addr16
scas
jb
daa
push
cmp
adc
notl
andl
test
daa
sar
out
mov
push
rcr
xor
mov
xchg
inc
sub
int
rorl
push
dec
or
mov
fisttpll
mov
jmp
sti
imul
movb
cmc
adc
imul
out
jne
jae
test
das
ds
loopne
data16
push
int
sti
add
fnstcw
mov
shrl
popa
lea
pop
mov
fcmove
in
pop
jnp
cmpsb
outsb
in
xchg
gs
leave
int3
in
aaa
lea
inc
cmp
aam
leave
addr16
ffree
cmpsb
push
lahf
out
stos
rorb
ljmp
call
rcr
lcall
mov
dec
xor
shl
negl
lret
scas
push
dec
xchg
out
test
pop
hlt
cltd
inc
sub
inc
lea
xorb
pop
fmul
call
push
out
popf
mov
scas
cmp
pop
cld
and
call
or
mov
ja
jge
push
add
and
xor
popa
mov
stos
cmp
fs
aaa
fists
arpl
cmp
je
push
and
and
cmpsl
out
lahf
adc
cmpsb
mov
and
sbb
in
lea
or
movsl
shll
mov
sub
xchg
das
in
enter
push
sub
mov
sti
cmp
mov
lahf
mov
scas
js
ss
cmp
pop
jge
sbb
pop
push
jno
pushl
xlat
mov
std
inc
pop
call
test
inc
lds
push
cmpsb
test
push
xchg
les
test
dec
sarb
adc
out
les
iret
lods
mov
mov
and
test
mov
lcall
dec
inc
xorb
or
out
and
mov
xchg
inc
jae
cmp
shlb
test
js
dec
jmp
jp
loope
dec
push
jg
cmp
cmp
fisubrs
aaa
push
fidivrs
sub
scas
aad
xchg
into
inc
ret
inc
pop
xchg
js
mov
mov
mov
imul
les
leave
leave
ret
rorb
pop
mov
xchg
movsb
dec
lods
cmp
gs
jg
in
mov
out
mov
popa
xchg
icebp
icebp
imul
push
jge
popa
dec
clc
lret
call
leave
mov
ret
inc
out
jge
icebp
sub
push
into
mov
lret
pushf
and
lcall
xor
js
gs
push
dec
in
fisubl
xor
aas
arpl
inc
enter
xchg
cwtl
cmpsb
daa
sbb
lods
or
cmp
adcb
push
lea
and
js
cmpsb
and
sbb
lea
ss
hlt
mov
mov
sub
push
movsb
pop
roll
leave
and
loope
ds
cmp
aad
xchg
pinsrw
pusha
mov
vdivss
popa
fbld
out
pop
push
push
jge
and
xor
gs
out
gs
ds
rorb
in
popa
data16
addb
out
data16
loopne
and
sub
loopne
jno
lods
inc
pop
mov
pop
enter
imul
out
imul
shlb
inc
in
adc
xchg
xchg
fwait
mov
dec
rcrb
lahf
mov
dec
and
aam
addl
mov
ret
ret
mov
xchg
sti
cmp
push
outsb
clc
mov
int
sbbl
push
xor
enter
pop
insb
jge
aad
in
pop
mov
mov
pushf
shrl
inc
xchg
mov
jmp
and
arpl
push
mov
mov
jbe
rcrl
add
or
xor
movsl
pusha
sbb
shlb
ds
in
jmp
cmp
push
testl
imul
pop
mov
cli
mov
sbb
out
mov
inc
fwait
dec
sbb
add
sbb
push
icebp
fs
hlt
loopne
out
testl
push
jnp
in
mov
mov
test
pop
das
cmpsl
push
fs
adc
daa
addr16
sub
fcoml
mov
dec
test
dec
inc
enter
movsl
mov
push
mov
push
sub
imul
enter
sbb
loopne
mov
es
jns
aaa
push
xor
pop
call
shrl
ljmp
movsb
xchg
fadds
test
mov
pop
cmpsb
pop
pop
es
rcrl
dec
mov
inc
xchg
mov
adc
loope
shrb
xor
push
xchg
data16
mov
cltd
inc
test
negb
aaa
jg
cmpsl
loopne
inc
out
pop
inc
mov
dec
and
incb
dec
loopne
cs
add
test
lea
pop
mov
adc
dec
fdivp
movsb
sahf
test
arpl
lods
int3
arpl
mov
call
mov
cmpsl
out
xchg
loope
in
cmp
push
xchg
and
mov
leave
bound
imul
test
mov
xorl
test
sbb
das
pop
push
jmp
lret
mov
es
cmp
mov
ret
idivb
push
dec
push
add
add
and
mov
mov
out
popf
enter
test
into
cmpsb
mov
sub
add
negb
arpl
ret
addr16
icebp
push
xor
add
loope
jne
cwtl
xchg
les
int3
js
and
mov
in
dec
cmp
mov
aam
or
leave
jecxz
inc
aad
or
sahf
test
cmpl
mov
lcall
or
clc
dec
dec
enter
call
mov
inc
push
pop
push
aas
push
cwtl
xor
xchg
dec
int3
mov
mov
and
arpl
jge
inc
daa
and
lds
out
mov
movsb
sub
icebp
and
cmp
nop
out
push
pop
lods
popa
mov
pusha
loope
int
add
js
fwait
mov
cmpsl
dec
loopne
addr16
jle
aas
fld
pop
dec
mov
pop
dec
leave
or
in
xlat
imul
cmc
pop
inc
cmp
pop
cltd
negb
ret
das
mov
xchg
sub
xor
push
or
and
or
or
sub
int
js,pt
out
lret
add
ss
dec
mov
out
movsl
cmpsb
cmp
js
cmp
shrb
sub
loop
sub
pop
shl
pop
inc
xor
mov
or
test
sahf
loop
jp
imul
mov
leave
iret
leave
roll
and
insb
cmpsl
jge
cmova
sarl
mov
pushf
adc
cmpsl
inc
in
mov
arpl
mov
inc
loopne
loopne
enter
shrl
lret
adc
int3
jno
lcall
jbe
inc
stc
das
push
ret
and
dec
fisttpll
pop
mov
xchg
sub
inc
mov
sti
mov
jmp
adc
sarl
popf
push
cmp
bound
cltd
lea
mov
mov
mov
adc
daa
jns
mov
dec
ljmp
cltd
jmp
insl
push
data16
mov
loopne
dec
push
mov
pop
ljmp
push
fwait
xor
ret
fldcw
xchg
inc
xor
ja
daa
lcall
les
lea
outsb
mov
cmp
rcll
popf
inc
and
incb
cli
cmp
or
hlt
pop
or
add
mov
mov
mov
aas
gs
cwtl
adc
pusha
inc
xor
sub
cmpsl
xchg
mov
jnp
test
pop
sub
mov
icebp
ds
enter
imul
aam
jno
mov
cmp
cmpsl
mov
mov
push
ret
repnz
lds
xchg
adc
push
mov
les
test
push
adc
lds
popf
sub
mov
push
stos
mov
cmpsb
push
enter
loope
lods
ficompl
inc
leave
pop
es
mov
rcll
dec
xor
int
adc
adc
inc
test
sbb
nop
xor
jg
sub
adc
addr16
test
repz
pop
fbstp
mov
sbb
loope
pop
scas
fwait
js
mov
jg,pt
mov
popf
and
es
aad
ds
es
mov
imul
and
adc
lcall
movsl
mov
xchg
popf
and
push
iret
adc
fs
int3
fcompl
cltd
repnz
lea
adc
cmp
cmpl
mulb
mov
sbb
inc
in
xor
enter
mov
dec
xchg
sbb
cli
jecxz
push
in
mov
loopne
aad
enter
pop
xor
ret
jg
add
inc
ret
and
jno
push
addr16
cmpsb
pop
jmp
or
mov
popf
or
test
sub
in
jmp
xchg
add
decl
pop
negb
mov
pop
sbb
sub
je
lahf
inc
push
mov
add
test
ret
xchg
lret
sarl
pusha
pop
fldcw
subl
fwait
xor
jg
xlat
dec
call
addr16
inc
jnp
rclb
int
cmp
mov
movsl
aas
in
lret
mov
stc
xor
in
test
and
cmc
jno
mov
icebp
mov
addr16
mov
cmp
or
pop
cmpsl
pop
lret
insl
mulb
mov
ja
cmpsl
shl
mov
pop
push
cmpsl
ret
adc
stos
pop
push
xchg
rcr
xor
fcoms
mov
jne
inc
inc
jg
cmpsb
mov
mov
cmp
pop
cmpps
adc
mov
mov
fnstcw
loope
push
idivl
jo
xor
mov
jnp
and
mov
iret
mov
insb
jmp
pop
lret
icebp
pop
leave
into
xchg
inc
fstl
cwtl
imul
imul
imul
xchg
add
dec
xchg
ljmp
dec
pop
add
push
jp
pusha
and
mov
neg
cmp
mov
in
mov
repnz
dec
push
dec
outsb
out
addps
inc
xchg
xchg
aam
mov
pop
pop
in
insl
shlb
sarl
xor
jno
cmp
mov
ds
sbb
pop
shlb
sub
push
cmp
pop
inc
frstor
imul
cmc
pusha
sub
adc
in
rcrb
or
pop
sub
mov
cmp
push
pop
out
inc
mov
push
orb
scas
mov
push
inc
sbb
inc
mov
add
adc
and
js
faddl
jb
enter
and
addr16
arpl
iret
xchg
aad
int
push
test
inc
push
adc
cwtl
and
and
pop
xlat
fisubs
mov
xor
add
or
mov
gs
inc
popa
mov
cmpsl
and
mov
rolb
mov
push
aas
imul
cmpsb
xchg
lea
imul
pop
shlb
sbb
lcall
movb
orl
test
inc
shll
mov
mov
inc
sub
mov
mov
test
sub
iret
test
add
add
leave
fsubrs
addr16
imul
das
sbb
test
add
inc
add
test
daa
mov
or
call
xchg
add
int3
cmpsb
les
sarl
test
push
loopne
adc
lahf
xor
jo
pop
pop
jge
push
addr16
mov
pop
aaa
xlat
int3
or
inc
lods
xor
out
cmp
xchg
xchg
sahf
and
jg
loope
test
mov
add
push
inc
inc
fsub
and
add
and
mov
cmp
test
cwtl
cmp
andb
sub
in
mov
or
cmp
xchg
mov
lahf
add
ret
cmp
inc
jl
mov
cmpsl
ret
fs
and
dec
jge
fwait
addr16
adcb
test
xor
mov
push
xor
or
roll
ljmp
lcall
fwait
adc
leave
jnp
outsl
loop
push
sbb
cmpsl
jp
popa
leave
jns,pn
andl
mov
bnd
mov
fcmovne
mov
mov
push
outsb
pop
mov
mov
inc
popf
mov
out
jecxz
pop
dec
popf
xor
mov
pop
insl
daa
addl
dec
and
andb
pusha
dec
neg
mov
cwtl
call
mov
xor
xchg
push
cmp
repnz
out
push
dec
stc
mov
mov
rcll
push
push
sbb
daa
mov
mov
int
jmp
sub
and
push
xchg
and
imul
and
xchg
mov
jo
fstl
int
icebp
ljmp
ret
jp
lods
fstps
push
mov
pop
jp
jp
inc
jo
out
movsl
pop
cmpsb
add
mov
fildll
pop
nop
andb
in
rcll
and
sbb
sbb
sbb
sub
mov
push
scas
mov
aaa
outsl
mov
dec
aaa
gs
mov
xchg
or
mov
scas
sbb
push
mov
ja
lds
out
ljmp
lcall
fmuls
call
sbb
jl
push
dec
arpl
int
fsubrl
cmpsb
stc
dec
push
or
incl
mov
loope
out
loope
inc
adc
and
lcall
jg
sub
enter
cmp
push
leave
jmp
mov
cmpsl
pop
push
jmp
push
dec
xchg
shlb
fsts
sbb
mov
pop
pop
out
in
jl
and
mov
js
hlt
in
mov
sbb
in
andl
inc
aaa
cmpsl
xchg
imul
jno
fsubrl
pop
sbb
rclb
loope
lcall
lret
subl
sub
int3
lcall
aam
icebp
and
repnz
pop
sub
or
lcall
fisttpll
lock
inc
push
inc
pop
cltd
jns
mov
in
dec
cltd
mov
dec
out
jmp
ds
mov
ss
mov
enter
in
mov
inc
mov
clc
add
mov
jg
adc
imul
mov
xor
xchg
ljmp
push
push
movsb
out
shll
cmpsb
and
in
mov
out
push
nop
rcl
push
mov
sbb
cmpsb
add
out
lock
mov
inc
ds
inc
shll
ss
inc
ret
jmp
pop
loopne
mov
iret
arpl
xchg
aam
leave
mov
loope
inc
sbb
stc
mov
loopne
or
pop
add
or
mov
cmpsb
out
xchg
hlt
bound
lret
sub
add
pop
fs
into
dec
adc
pop
sub
fadds
jge
fwait
lret
xchg
push
cmpsb
in
mov
stos
das
leave
dec
inc
fs
mov
mov
sub
mov
adc
push
fs
vmread
jo
movsb
int
cmpsl
cmpsl
pushf
inc
std
rcr
jge
cli
int
outsb
pop
mov
into
movsl
sbb
lods
shlb
fcompl
test
daa
mov
imul
addr16
push
lea
fnsave
loope
mov
xchg
sub
lea
mov
shll
push
inc
pop
pop
mov
pop
cmp
sub
push
cmpl
test
xor
mov
add
out
mov
or
mov
or
inc
mov
or
outsl
aam
dec
mov
clc
lea
sahf
aas
jno
cmp
test
push
cmpsb
jecxz
xchg
das
jne
dec
rclb
test
arpl
xor
or
pop
popf
mov
inc
inc
dec
inc
mov
sub
int3
inc
inc
jg
dec
popf
sbbl
inc
pop
lret
xchg
push
jmp
xchg
out
in
dec
test
imulb
ja
stos
daa
xchg
sub
jge
xchg
imul
leave
shrl
mov
or
sub
sbb
mov
out
popa
mov
mov
adc
scas
push
loop
aas
mov
je
adc
pop
add
arpl
aam
loope
xchg
pop
outsl
stc
bound
aas
fs
jno
dec
shrb
popf
sbb
not
mov
out
scas
call
jp
jae
fistps
es
mov
loopne
aad
mov
lock
and
sbb
rorb
into
dec
sarb
daa
add
out
subb
cmpsb
test
mov
lea
arpl
inc
mov
mov
and
pop
inc
pop
cmpsb
mov
mov
jmp
dec
movsl
pop
sbb
test
adc
fsubl
mov
push
push
sub
mov
or
loope
xchg
das
enter
xchg
pop
push
cmpsb
add
test
call
sbb
push
decl
mov
adc
pop
leave
fists
js
push
push
pop
dec
cwtl
movsb
xchg
pop
js
push
call
loope
call
adc
add
insl
rcl
add
lahf
fmulp
insb
leave
sub
jnp
jl
rcrb
push
fisubrl
cltd
xchg
cmpsb
sbb
mov
clc
jo
mov
int
fldenv
push
mov
xchg
pop
lret
not
test
inc
adc
aas
push
cmpsl
push
js
mov
sub
push
inc
xchg
dec
pop
aam
mov
mov
or
arpl
push
push
or
outsb
shlb
rclb
stos
out
inc
repnz
popf
xchg
mov
test
mov
inc
lds
and
push
push
dec
jecxz
outsl
in
adc
sbb
shll
cmpsl
imul
repz
mov
sbb
out
ja
das
jge
pop
mov
hlt
or
pop
loope
jmp
jge
popf
mov
ficoms
out
dec
add
push
mov
mov
lock
jmp
stc
ljmp
jnp
call
jns
vpackuswb
mov
shlb
pop
aaa
inc
and
mov
pop
ja
int
sub
adc
pop
and
int
into
mov
movsb
and
cltd
cmpsb
sbb
gs
adc
pop
pop
aad
pop
loope
cmpsl
data16
add
dec
pop
daa
mov
shll
cmp
jmp
mov
loope
fnstcw
dec
int
mov
mov
mov
movsl
sti
add
xor
sub
push
call
leave
rcll
or
xor
cmpsl
mov
add
add
or
lcall
lret
sub
ja
xor
push
xchg
add
mov
sub
stos
mov
add
jmp
fistps
inc
pop
int
xchg
mov
loope
mov
dec
mov
pop
iret
inc
dec
cs
pusha
push
inc
lods
sub
fs
pop
cwtl
push
mov
dec
xor
in
xchg
testb
aam
inc
pop
add
cwtl
mov
loopne
mov
pop
mov
pop
fs
inc
push
xchg
sahf
inc
pop
mov
xchg
push
loopew
outsl
popa
dec
rol
dec
out
fs
dec
test
mov
int
data16
mov
aad
sub
jne
fstps
adc
sbb
lods
rcr
inc
shll
movsl
cmp
pop
dec
std
aam
sbb
push
enter
shll
scas
sbb
aad
inc
xchg
push
popf
jge
push
std
gs
popa
add
movsl
cmp
icebp
xchg
gs
mov
sub
xchg
mov
jmp
iret
xor
outsl
out
pop
jecxz
fisttpll
lret
enter
add
leave
shll
adc
js
in
dec
int
fcomps
inc
out
lds
cmp
pushf
mov
cmp
pop
in
inc
scas
xchg
cltd
roll
jno
scas
shlb
imul
lock
push
dec
mov
shl
cmp
loope
push
fnsave
enter
popa
sub
adc
nop
mov
adc
nop
push
das
test
push
and
ljmp
xchg
jge
test
lcall
fildl
movsl
mov
aam
mov
push
insl
aam
iret
push
mov
xchg
fldl
aad
into
test
rolb
adc
inc
fildll
je
push
and
imul
mov
loop
or
ds
add
loope
xchg
xor
adc
pop
repnz
or
loopne
and
loopne
push
cltd
sarb
imul
loopne
imul
fdivrs
inc
popa
jge
js
and
ror
mov
cmpsb
add
xchg
dec
mov
push
inc
fdivrs
movsl
arpl
mov
jl
fsubrs
lds
pop
les
fcoms
loopne
jg
cmp
insl
mov
xchg
ret
imul
imul
test
jmp
shr
stos
push
pop
lret
repnz
jge
pop
std
jo
aaa
push
shr
mov
in
mov
sbb
icebp
sub
testl
ja
dec
ds
adc
lea
push
mov
xchg
cmp
imul
jmp
sub
cmpsl
xchg
sub
shl
aas
lea
mov
addb
xchg
inc
loopne
push
nop
fistl
inc
cmc
fcoml
into
daa
inc
push
addr16
cmpsb
mov
push
rorb
inc
inc
icebp
adc
stos
mov
mov
and
xor
lea
mov
inc
test
dec
repnz
in
lahf
xchg
dec
fsubl
add
jno
lds
sbb
ret
nop
scas
mov
and
call
jae
test
loope
lret
je
mov
scas
xor
mov
xchg
test
xlat
in
or
xor
movsl
inc
fimuls
gs
mov
lea
addb
add
jge
adc
mov
cmpsl
mov
fsubs
cld
mov
dec
lods
and
lcall
into
popa
cltd
cwtl
lea
sub
movb
push
inc
das
leave
inc
int
cmp
adc
popa
jns
scas
pushf
mov
pop
and
xor
inc
add
inc
lock
and
data16
mov
outsb
add
movsb
das
mov
repnz
cltd
push
push
inc
and
mov
pop
test
pop
popf
inc
inc
cmpsl
push
pop
mov
scas
cmp
or
or
pop
pop
cltd
cld
and
stos
xlat
inc
jmp
sub
dec
testl
mov
orb
mov
imul
incl
mov
dec
lcall
gs
and
xchg
mov
dec
mov
sbbl
sub
mov
clc
inc
pop
imul
loopne
clc
lret
mov
mov
cmp
lcall
mov
sbb
add
shrl
xchg
dec
cmp
dec
mov
leave
movsl
add
mov
cmp
mov
adc
xor
mov
mov
popa
sub
int
push
xchg
adc
mov
adc
and
pop
or
xor
jno
sbb
aad
sub
jno
xchg
lret
ds
loopne
scas
jge
dec
dec
outsl
push
sbb
les
jns
addb
sbb
test
push
daa
in
adcb
mov
mov
jns
mov
in
dec
nop
mov
mov
sahf
fimull
ret
cmp
pushf
ficoms
out
and
aaa
and
xchg
mov
call
imul
lods
es
mov
aad
mov
push
sub
mov
xlat
sahf
loopw
vorps
mov
mov
movsb
mov
adc
xchg
cmp
insb
fldenv
push
lea
add
arpl
leave
mov
xor
and
out
xchg
dec
cmp
loopne
or
push
imul
aas
cltd
mov
test
cltd
leave
ds
pop
das
es
xlat
mov
pop
mov
test
and
arpl
scas
pop
inc
aad
and
mov
sarl
and
imul
pop
adc
pop
cld
clc
push
mov
adcb
inc
push
and
mov
sbb
push
test
inc
fsubr
sub
inc
jne
add
inc
push
push
loope
mov
mov
pop
pop
leave
xchg
shll
inc
pop
mov
or
add
bound
js
pop
popa
push
and
fsubrl
jmp
xlat
shlb
in
call
pop
jae
sbb
fadd
mov
cmpsb
in
lahf
xor
es
enter
or
and
hlt
xchg
idivb
shr
xor
xor
inc
add
decb
rorl
ret
and
or
cmc
test
icebp
sub
lea
sub
pop
fistpl
mov
jae
aam
loope
lea
jmp
dec
leave
mov
hlt
mov
lea
pcmpgtw
and
in
jecxz
push
mov
pop
xchg
push
iret
cwtl
inc
loopne
enter
sbb
sub
sub
out
shll
adc
sub
ljmp
std
daa
mov
cltd
int
mov
xor
dec
clc
int
sbb
add
repnz
pop
mov
mov
xchg
cmp
push
adc
in
or
inc
es
icebp
stos
out
dec
sub
scas
out
dec
inc
mov
push
orl
push
cld
leave
push
push
mov
test
aaa
leave
lods
jns
push
dec
jecxz
lea
xlat
inc
das
fisttps
mov
and
push
loope
rcll
lret
cmpsl
fldt
adc
xlat
mov
lahf
inc
xchg
push
fwait
mov
cltd
lock
add
clc
rcrb
push
or
mov
js
out
mull
scas
mov
cmpsb
xor
leave
stos
mov
or
jno
scas
jmp
pop
xchg
aaa
lods
and
call
push
cmp
mov
clc
popf
mov
insl
sbb
jl
sti
popa
daa
movl
shl
and
ljmp
mov
lret
inc
loope
xchg
adcl
mov
out
xchg
in
mov
cli
mov
call
fwait
xor
cmpsl
ficomps
mov
lahf
lea
xchg
jg
xchg
js
test
add
and
pop
lods
cli
addr16
fbstp
xor
movsl
jno
pop
xorb
xchg
inc
push
cmpsb
pop
mov
sub
fs
sbb
mov
xchg
pop
xchg
xchg
xchg
cmc
mov
dec
lods
xchg
int
jmp
mov
and
outsl
mov
js
lret
outsl
std
imul
jmp
jecxz
xchg
inc
and
inc
jns
test
addr16
ds
mov
out
pop
out
cmpsl
sarl
or
jp
cmp
add
gs
movsl
std
leave
push
push
mov
or
jecxz
mov
sbbl
repz
pop
xlat
ret
lods
popa
cmpsl
imul
and
into
mov
test
push
cld
sub
xchg
jnp
mov
and
into
das
mov
outsl
add
jg
ljmp
mov
adc
mov
in
pop
lret
inc
lea
mov
mov
pop
adc
mov
pop
pop
cmc
mov
jnp
jo
pop
aaa
fsts
pop
xor
xor
and
mov
mov
mov
xchg
jns
nop
pusha
lock
test
loope
mov
add
loopne
mov
mov
mov
sbb
lea
mov
pop
xchg
in
jge
sub
push
cmc
lcall
insl
pop
jge
jo
fdivl
inc
push
sub
add
lahf
mov
div
aam
lcall
mov
in
cmp
icebp
mov
pop
sub
dec
cmpsb
cmp
test
fwait
dec
and
cmp
sub
mov
mov
inc
mov
lret
outsb
and
ds
and
mov
mov
cltd
xchg
repnz
pop
mov
and
test
shlb
jge
ss
cld
nop
cmpsb
in
xchg
repnz
in
cmp
fsubr
inc
insb
popa
addr16
inc
popa
bound
scas
std
test
cwtl
jae
jecxz
dec
inc
mov
test
adc
sarb
mov
mov
clc
subb
roll
daa
cltd
into
xchg
sub
push
lcall
push
popa
push
xchg
lahf
scas
jmp
mov
test
xlat
inc
push
ds
mov
popf
jge
or
pop
test
mov
pop
push
sti
mov
cltd
add
rorl
pop
lea
leave
mov
jecxz
cmp
stc
inc
xchg
loop
loope
aad
sbb
dec
xlat
mov
in
leave
xlat
shr
outsb
ds
call
imulb
loopne
jmp
lds
pusha
call
xchg
movsl
mov
out
adc
xor
jns
mov
inc
loope
push
adc
pusha
jge
dec
orl
adc
popf
popf
loope
loope
xchg
nop
daa
daa
sub
gs
lds
adc
mov
leave
mov
fcomps
mov
mov
jns
scas
push
sbb
mov
hlt
shlb
pusha
popf
leave
pop
ljmp
call
lahf
cld
or
dec
mov
xor
out
mov
ret
sbb
test
mov
mov
lret
movb
test
shrl
movsb
sub
ja
fadds
mov
xor
sbb
lds
xchg
std
out
xchg
adc
sbb
imul
lea
popa
repnz
cmp
cmp
addr16
mov
cmpb
ret
imul
cmp
fiadds
mov
pop
inc
mov
es
enter
dec
push
jle
test
add
sarb
pop
push
std
add
mov
js,pt
pop
call
punpckldq
mov
push
xchg
bound
test
dec
adc
sti
lods
popa
nop
fsubl
inc
mov
lds
in
rcrl
lock
mov
scas
pop
or
inc
mov
dec
jmp
test
inc
pop
cmp
aaa
jmp
xchg
mov
and
sub
aaa
das
ss
mov
dec
sarl
xor
or
test
ds
fdivrs
addl
int
dec
aam
xor
push
test
ret
sub
and
ret
movsb
lahf
lcall
imul
add
mov
lret
loope
lea
mov
inc
add
add
gs
shll
fsubs
xchg
popf
popf
cmp
push
out
pop
aas
fistpl
adcb
push
jno
sbb
jmp
push
data16
call
out
sbb
scas
dec
cmpsl
stos
push
outsl
lahf
mov
arpl
xor
leave
test
push
cmpl
scas
pushf
popf
mov
jge
fwait
cli
cs
dec
shlb
dec
fnstcw
popf
push
iret
pop
subl
mov
scas
int3
inc
push
aaa
add
dec
sbb
fs
lds
mov
bnd
adc
pop
loopne
mov
or
jl
lcall
xchg
idiv
pop
jo
jo,pt
adc
pop
nop
in
push
std
add
leave
mov
cmpsb
je
xor
fbld
cmp
inc
inc
imul
dec
insl
fidivrl
adc
and
or
mov
cmp
rcl
je
fbstp
and
iret
xchg
test
lcall
jmp
imul
add
sub
and
out
cmc
mov
and
cmp
dec
shll
rorl
popf
cmpsl
nop
adc
arpl
pop
nop
mov
and
movsl
push
mov
in
push
loope
push
rcrb
imul
mov
nop
pop
mov
mov
jle
pop
leave
js
sbb
in
sub
ljmp
pop
rcll
cmp
and
push
or
leave
pop
mov
and
call
lds
xchg
add
outsb
lods
lea
repnz
std
fcmovne
inc
ja
jp
jo
mov
inc
sub
int
adc
mov
mov
outsb
mov
dec
lock
pop
dec
pop
sub
setp
insb
pop
popa
clc
iret
cmpsl
iret
in
xor
push
pop
fldenv
loope
daa
pop
es
out
rclb
sahf
push
inc
popa
push
jge
push
mov
mov
test
and
pusha
test
outsl
roll
ja
xchg
fbstp
lret
sbb
cmp
push
mov
and
dec
movsl
daa
dec
lea
in
popf
int
mov
addr16
shll
insl
aad
sub
loope,pt
mov
jg
pop
sbb
jl
adc
push
mov
test
lock
test
mov
and
mov
push
jae
data16
fistps
add
test
xchg
mov
leave
outsb
adcb
sub
sub
imul
les
fcmovnbe
and
xchg
popf
push
jp
mov
int3
dec
ret
imul
ror
cmp
lods
aam
push
gs
dec
dec
dec
out
int
pop
bound
xchg
mov
push
sbb
cmp
test
rclb
vfmsub132ss
lds
pusha
lds
dec
sahf
adc
inc
sbb
scas
add
movsl
mov
scas
or
cmc
gs
jge
inc
pop
xchg
daa
mov
insl
fistpl
outsb
ret
sbb
out
fstpt
sbb
sub
pusha
aaa
stc
dec
mov
mov
adc
not
push
or
pushf
push
inc
mov
rcr
jecxz
mov
in
add
add
mov
mov
inc
push
dec
das
mov
mov
leave
mov
cwtl
mov
xrelease
fwait
mov
test
mov
mov
pop
outsb
xlat
ds
aaa
stc
add
test
xchg
fsubrs
jns
xchg
test
xlat
and
adc
push
xor
outsl
pop
mov
shrb
imulb
int
fstps
jbe
push
test
cmp
pop
mov
pop
cmc
sbb
inc
cld
popa
fmuls
test
pusha
fnsave
mov
mov
dec
test
inc
xchg
fsubrp
sub
or
jnp
push
sub
out
adc
push
js
mov
orb
leave
dec
mov
ret
cwtl
lea
mov
sub
int
sbb
add
cmpsl
push
int
data16
mov
or
jnp
nop
jmp
popa
or
popa
add
pusha
gs
fcoml
fwait
shlb
iret
jo
rolb
bound
inc
int
ret
clc
rcr
iret
xchg
leave
mov
mov
ss
xor
pcmpgtb
cli
inc
jae
jno
std
stos
mov
push
jmp
xchg
mov
cmp
aaa
test
test
cmp
movsb
adc
mov
jge
pop
rclb
ja
int
and
rolb
das
jecxz
emms
xor
inc
mov
mov
dec
pop
xchg
sub
xchg
or
call
cmp
sbb
or
add
adc
out
dec
jecxz
mov
push
cltd
pop
sahf
xchg
callw
or
clc
mov
sbb
sahf
sbb
fstpl
mov
push
inc
mov
mov
lock
lock
jo
push
push
cwtl
popa
xor
sub
cld
enter
outsl
pop
into
mov
les
roll
mov
iret
cld
fcomip
mov
test
add
xor
add
mov
or
rcll
leave
xchg
fcmovb
mov
frstor
insl
lea
mov
mov
push
adc
mov
mov
cmp
sub
add
xor
cmc
lods
inc
mov
mov
inc
stc
outsl
add
out
jp
fwait
mov
sub
mov
leave
in
sahf
cmp
mov
shl
mov
gs
xor
and
inc
arpl
nop
mov
sub
call
pop
shlb
dec
jno
lds
in
repnz
cli
les
jmp
dec
xor
not
lret
ud0
push
jne
mov
pop
push
jnp
sub
inc
popf
pop
call
lcall
sub
fwait
adc
inc
adc
xchg
dec
cmpsb
jmp
xor
fistpl
mov
movsl
int
sub
divl
aad
inc
aaa
stos
cs
pop
call
aas
add
jbe
mov
sub
and
aas
hlt
pop
popa
xor
stc
mov
movsl
and
mov
mov
out
fld
jno
jo
in
mov
fs
fstpt
mov
lds
mov
in
mov
enter
pop
into
xchg
pop
sub
rcl
cltd
add
fdivr
jne
test
sbb
pop
inc
ret
and
sbb
dec
or
and
rcr
or
js
popf
pushf
xlat
adc
cmp
out
mov
cwtl
push
inc
pop
cmpsb
sbb
mov
cmpsb
xchg
flds
mov
xchg
mov
cmpsl
lcall
push
push
cmp
inc
cwtl
mov
es
mov
mov
mov
mov
push
loopne
imul
cwtl
loopne
pusha
hlt
int
scas
sbb
fadd
sbb
push
inc
mov
fistps
fsubs
inc
icebp
in
jmp
sbb
cmpsl
push
stos
mov
pop
jecxz
fsincos
scas
popf
idivb
enter
jg
xlat
add
ljmp
mov
or
lds
daa
aaa
data16
cwtl
ror
ret
jns
loope
test
mov
xchg
and
out
push
pop
mov
jb
lcall
imul
aad
fdivrl
dec
sub
push
mov
inc
in
inc
cmp
mov
push
in
call
push
xor
mov
cld
mov
and
addr16
adc
sub
sub
mov
jo
sbb
sahf
inc
jecxz
pop
pop
popf
sub
push
sqrtps
mov
and
mov
test
out
mov
fistps
gs
cmp
scas
data16
pop
dec
push
and
imul
enter
out
dec
call
pop
pusha
dec
sub
test
call
ficoms
and
pop
pop
add
mov
in
mov
jne
mulb
lret
jg
mov
push
push
test
xchg
inc
dec
add
movsl
push
aam
and
xchg
rolb
adc
push
fldenv
out
pop
inc
int
lock
pop
lea
xchg
jne
inc
daa
push
jmp
jg
aaa
in
imul
mov
jo
cltd
movb
dec
inc
outsl
pop
ds
mov
and
pop
cmp
inc
in
adc
lahf
mov
andl
addr16
addr16
lcall
mov
aaa
fadd
fldenv
sub
mov
movsb
outsl
das
repz
test
push
enter
mov
loopne
gs
arpl
in
sahf
daa
int3
insb
push
in
add
mov
inc
inc
mov
fmul
xor
iret
test
stos
ror
mov
int
sbb
andl
dec
shrl
lahf
and
or
shlb
lock
pop
mov
pusha
xchg
mov
popa
addr16
loopne
popa
ds
int
jle
lahf
lahf
xor
cmpsb
sbb
lret
cmp
imul
cmpsl
pop
xchg
stc
imul
mov
push
lods
repnz
es
and
pop
in
ss
lahf
les
popa
jge
nop
les
incl
cmc
xchg
in
aad
idiv
inc
mov
shll
in
xchg
lret
decb
pop
cmp
insb
inc
ja
fildl
inc
or
pop
cld
jno
das
in
shlb
les
mov
out
mov
cs
repz
fidivs
andb
or
push
and
cmpsb
mov
jge
imul
inc
fwait
imul
arpl
mov
test
xchg
popf
enter
add
int3
je
bound
fxch
sbb
push
imull
adc
jns
fwait
lahf
pop
push
mov
xlat
and
ret
lret
cltd
push
aad
fcmovnbe
and
cmpsb
shl
push
dec
outsb
inc
xchg
xchg
fcompl
xlat
cmpsb
sub
loop
out
inc
stos
leave
enter
into
cmp
sub
mov
daa
std
push
inc
out
fnstcw
leave
cmp
and
sbbl
pop
mov
iret
and
gs
dec
jb
lret
and
popa
xchg
inc
cs
xor
and
fucomip
mov
and
and
cwtl
subb
add
jb
leave
and
sub
push
mov
xchg
insb
cmpl
pop
jno
mov
sub
mov
clc
andl
ds
pop
xchg
jecxz
jns
clc
and
fstpt
mov
cmpsb
es
ljmp
cmpsb
lcall
outsl
lds
pop
icebp
neg
mov
and
add
leave
addr16
lock
push
insb
ror
sbb
mov
loope
lock
xchg
mov
sbb
sahf
xor
sub
subb
ror
ljmp
mov
push
sarl
inc
fsubrs
cmp
cmpsl
enter
fs
fsubl
mov
lea
inc
jne
inc
mov
in
or
inc
pusha
loope
mov
enter
jp
pop
xchg
jnp
pusha
add
xchg
leave
scas
mov
das
aad
add
mov
int
mov
fcom
sbb
and
iret
fcmove
jmp
dec
mov
cld
pop
inc
ja
shlb
or
sub
imul
mov
sbb
addr16
xchg
pop
pusha
pop
rclb
insb
sar
pop
xchg
xchg
nopl
enter
and
fistpl
rcrb
pop
test
gs
aaa
cli
push
and
mov
jecxz
inc
mov
push
imul
inc
pop
cld
push
inc
sub
ljmp
movsl
fxtract
xchg
stc
mov
les
push
mov
push
cmpsl
clc
pushf
push
fs
push
sub
das
rcr
movsl
loope
out
jmp
or
sub
out
jmp
mov
mov
ljmpw
sub
icebp
lods
dec
jbe
sbb
leave
outsb
clc
loope
mov
jnp
push
and
xchg
and
fdivrl
loope
mul
xor
push
inc
sbb
je
mov
icebp
scas
mov
out
fsubrs
popa
in
outsb
inc
and
ret
pop
lcall
cltd
flds
xlat
pop
in
inc
ds
cmpl
cwtl
test
scas
mov
cmpsl
hlt
popf
mov
adc
arpl
xchg
mov
gs
mov
jle
push
xor
push
lcall
and
pop
shll
lcall
mov
sub
jnp
repnz
mov
lds
hlt
and
movsl
rolb
ret
fdivrl
inc
out
inc
or
mov
mov
sub
shl
incb
xchg
shll
incb
cltd
pop
xacquire
lock
xchg
inc
sbb
mov
stos
fsts
leave
jno
xchg
mov
mov
daa
inc
mov
shl
das
aaa
aad
fwait
cli
dec
cltd
cmpsl
int3
mov
popa
cmpsb
pop
mov
das
ja
add
sbb
push
xlat
jmp
jns
js
xor
or
push
jmp
xor
loop
es
xchg
fldenv
int3
in
mov
xlat
push
and
mov
sahf
adc
ss
mov
mov
stos
xor
call
sbb
mov
fadds
test
stos
xor
jecxz
addr16
inc
dec
cltd
cmp
cltd
inc
cmp
sub
or
and
int3
adc
inc
jg
sub
inc
jp
enter
mov
arpl
mov
fcoml
fcmovnbe
loopne
and
push
push
mov
call
mov
ret
sbb
pop
insb
ja
test
mov
cmp
dec
and
xor
ds
shrl
xchg
mov
ss
mov
sbb
aam
mov
xchg
int
jl
out
popf
in
les
push
adc
mov
mov
aas
scas
push
sub
xlat
call
dec
inc
sti
ret
outsb
aad
mov
aam
notb
in
insl
loopne
mov
test
mov
add
xor
subb
iret
adc
lods
push
and
adc
add
out
jb
movsb
aaa
icebp
out
lret
test
sub
addr16
stc
jns
pop
fcoml
lret
dec
and
mov
mov
int
fst
adc
mov
pop
in
pop
shll
adc
or
push
mov
or
or
xchg
lds
xchg
mov
fisubl
out
pop
ljmp
jp
loop
jecxz
and
sub
ds
pop
shl
sbb
sub
enter
pop
mulb
cmp
and
popf
icebp
add
pop
mov
je
es
ja
mov
stos
mov
lcall
imul
pop
movsl
add
loopne
leave
js
jge
aad
imul
imul
mov
xchg
test
dec
push
mov
inc
sub
movsl
je
mov
dec
jl
rolb
pop
out
or
aaa
je
aad
jno
mov
dec
das
in
ja
call
mov
repz
sub
leave
scas
mov
aaa
mov
mov
ret
imull
test
rcl
fs
out
and
enter
or
outsl
fstpt
xchg
mov
mov
and
out
sub
arpl
cmp
out
push
mov
icebp
jecxz
shrb
mov
je
dec
sahf
je
xchg
arpl
fstl
push
mov
rcrl
repnz
and
nop
sbb
rcll
leave
push
pusha
sub
sbb
shll
nop
sbbb
add
loope
lcall
test
imul
mov
mov
test
xchg
pusha
lret
out
lret
dec
or
out
pop
aad
arpl
adc
jmp
out
out
jecxz
add
jo
and
cwtl
fmull
mov
mov
adc
fld
mov
ss
mov
out
xor
loopne
repnz
out
xchg
adc
or
scas
les
xor
movsb
push
stc
push
or
addr16
jno
jge
xchg
inc
popf
outsl
sub
ljmp
subl
repnz
add
xchg
out
aas
cwtl
dec
inc
mov
pop
xor
lea
hlt
out
push
lods
push
int
push
int
in
orl
inc
mov
gs
add
mov
addr16
test
mov
mov
mov
mov
ja
push
and
fcmovnbe
inc
jno
inc
pop
jle
push
mov
xchg
rcll
jns
and
out
enter
push
dec
and
out
stos
mov
xchg
daa
enter
push
sub
push
je
pop
mov
xchg
cltd
mov
pop
out
mov
leave
mov
mov
mov
cwtl
sub
push
sbb
aas
cmp
lods
push
das
clc
mov
cmp
push
fstpt
sarb
or
inc
aad
push
addr16
ljmp
in
sahf
std
lock
fidivs
xor
fs
and
movsl
push
repnz
arpl
loopne
push
cltd
and
cwtl
mov
out
jecxz
push
xchg
pop
xor
jns
sbb
cli
jecxz
and
test
mov
shrl
call
mov
out
ljmp
nop
lret
adc
push
inc
scas
dec
cmpsl
out
mov
fildl
popf
sub
jns
sti
aaa
ja
test
aas
popf
out
push
lcall
mov
xor
test
fcomps
dec
sbb
out
call
jnp
or
stc
pop
nop
fildl
xor
mov
fsubl
or
push
mov
xchg
shl
scas
pop
inc
push
fldcw
push
popf
incl
jecxz
sub
sbb
leave
cmp
fucomi
rorb
fildl
sub
mov
icebp
add
jle
jge
mov
mov
orb
loopne
leave
popa
mov
add
cs
jns
iret
out
roll
test
fadds
out
mov
and
sarb
lds
mov
ss
jns
push
test
add
pushf
sbb
loop
mov
test
and
xor
movsb
ss
enter
cmp
les
sbb
sahf
xlat
jp
cmpsb
sub
jne
lea
pop
in
inc
xchg
jge
push
pop
andb
dec
mov
inc
xor
scas
cmpsl
jle
ss
mov
pushf
or
cmp
pushf
sbb
mov
jle
push
and
lret
mov
out
repnz
cmp
inc
outsl
adc
popa
lods
ret
fldcw
rclb
maxps
iret
pop
xor
popa
dec
lcall
movl
push
lock
cmp
nop
fwait
arpl
dec
ljmp
pop
repnz
mov
fldenv
jmp
fxch
push
add
sbb
test
outsb
fldenv
pop
xchg
mov
imul
jge
scas
inc
mov
out
and
add
pop
inc
jg
pushf
insl
xchg
push
ljmp
addr16
push
adc
and
sbb
out
lcall
push
adc
add
cld
push
dec
ret
loopne
aaa
test
xchg
jb
fstpl
mov
xchg
mov
mov
push
jecxz
mov
jl
repz
jp
filds
scas
sbb
mov
mov
movsl
leave
popa
mov
jns
add
push
repnz
mov
jb
mov
mov
mov
in
xor
lahf
add
sahf
rorl
mov
adc
sbb
and
fucomi
inc
mov
sub
lahf
ret
xchg
outsl
cs
test
gs
cmp
xor
xchg
push
mov
hlt
mov
push
ljmp
mov
iret
jecxz
jg
mov
lcall
push
vprotw
roll
xchg
popa
mov
repz
clc
pop
pcmpeqw
mov
shll
shlb
and
lea
inc
mov
mov
mov
ds
les
sub
pop
imul
dec
leave
ret
pop
push
out
fstl
add
xchg
inc
imul
or
mov
add
sub
dec
in
rcrb
cmp
pop
mov
lcall
or
dec
scas
push
inc
cmp
in
inc
inc
lds
adc
push
sbb
inc
dec
outsl
sub
sahf
addr16
xchg
adc
out
shll
out
or
mov
mov
enter
sarl
out
out
push
push
lock
add
lcall
out
cltd
xchg
loop
test
loopne
int
inc
adc
pop
or
adc
test
dec
bound
jg
push
pop
aas
ss
jl
aaa
xlat
dec
lea
dec
mov
pop
call
cmpsb
notb
inc
mov
out
lcall
jae
push
mov
sub
lret
add
xor
jp
sub
repnz
pop
mov
out
popf
sub
mov
out
dec
mov
mov
cs
test
or
inc
dec
shr
nop
xorl
shl
add
cmp
inc
icebp
push
roll
ret
inc
mov
xlat
adc
test
insl
sarl
xchg
test
jge
movsl
lret
xchg
ret
enter
dec
mov
and
add
mov
les
pop
push
mov
sub
xchg
lods
mov
and
es
flds
fisubs
jmp
cmpsl
push
in
inc
inc
ret
mov
in
pop
mov
out
daa
test
repz
jle
pop
iret
cmpsl
cld
mov
jg
fsubp
lcall
js
push
hlt
or
arpl
shlb
sub
mov
rorl
mov
pop
lods
ret
aaa
subb
dec
or
repz
sub
mov
addr16
mov
or
inc
test
or
mov
dec
xor
aas
loope
xchg
pop
sbb
rcl
mov
fcmovnu
lods
xchg
xchg
xchg
push
xor
imul
pop
cs
mov
cmp
cmp
mov
sub
cwtl
shrb
mov
pop
aas
and
jge
fnstenv
filds
imul
cmpsb
iret
mov
test
xchg
sbb
fcoml
inc
cmpsl
mov
notl
dec
inc
push
mov
incl
mov
jp
push
adc
xor
repz
fldenv
cltd
dec
inc
mov
xchg
jle
lcall
aaa
fldenv
push
mov
sbb
pop
clc
insb
xor
push
les
popf
das
push
inc
leave
bound
mov
sbb
nop
push
add
pushf
xlat
loopne
add
mov
mov
movsl
and
mov
aaa
add
sbb
and
out
or
mov
fcmovne
sub
inc
lret
icebp
cltd
stc
mov
out
and
jmp
sbb
lahf
imul
in
arpl
mov
sbb
in
xor
xchg
cmp
mov
lahf
xchg
push
mov
cmpsb
inc
shll
sub
mov
pop
cmp
mov
test
mov
sahf
imul
sub
hlt
pusha
cmp
mov
roll
mov
lahf
mov
mov
js
in
rolb
loope
jno
fucomi
cmp
jecxz
imul
cli
add
or
mov
lret
or
stos
push
dec
shll
fisttps
shll
fcmovnu
sub
ds
ret
add
jbe
sbb
clc
jp
cmp
frstor
sub
dec
dec
aaa
sbb
out
test
adc
call
std
mov
in
or
mov
add
xchg
inc
repnz
sub
popl
je
lcall
popl
lea
shrb
xchg
dec
les
push
test
call
cmpsb
jns
loope
push
out
stos
or
xor
jmp
out
xlat
mov
bound
cli
into
les
lods
cmpsb
cmpsl
ret
sbb
xchg
fidivrl
lcall
dec
movl
imul
enter
aam
pop
sub
mov
pop
mov
imul
fwait
jg
mov
ljmp
mov
adc
ss
cltd
lea
xor
fwait
xchg
push
xchg
and
xor
mov
inc
inc
sub
mov
jp
sbb
lea
fstpl
leave
rol
xchg
enter
push
sti
and
lods
push
or
cld
mov
xchg
dec
mov
daa
pop
incl
ja
and
repnz
mulb
lcall
inc
repz
or
pop
mov
jg
mov
cmp
lret
ja
cwtl
call
push
add
push
gs
fprem1
subl
lret
out
and
das
test
test
sub
bound
clc
mov
lds
in
jp
and
idivb
mov
jge
test
lret
seto
and
dec
in
imul
jge
dec
mov
test
pop
ffree
or
das
jmp
mov
ss
leave
hlt
fadd
cmp
lock
or
call
inc
xchg
mov
xlat
popa
jmp
jge
push
rorb
adc
cmp
inc
addr16
testl
and
scas
sti
cmpsb
addr16
lahf
add
arpl
mov
or
mov
icebp
repz
push
pop
pop
andl
cmpsl
sarb
movsl
cmp
loop
inc
jns
xchg
test
leave
das
mov
xchg
fildl
imul
ret
mov
mov
mov
hlt
lahf
aaa
mov
cmpl
cltd
fwait
mov
mov
mov
shll
pop
jmp
mov
ror
mov
adc
fadd
sbb
xchg
movsl
inc
clc
sub
imul
dec
insb
cld
les
in
ret
daa
sub
lea
jnp
or
faddl
dec
out
inc
add
sub
xchg
mov
push
clc
call
pop
ljmp
or
aam
mov
sub
pop
fcompl
aaa
js
lret
shl
fnstenv
mov
loope
popf
scas
cmpsb
lea
js
aaa
xor
mov
lea
lret
and
in
pop
lret
stos
fdiv
xor
add
sahf
mov
stos
rol
and
mov
orl
gs
sarb
pop
mov
filds
sbb
push
leave
add
mov
lret
lcall
out
cmp
shrb
mov
cmp
outsb
mov
or
and
ret
pop
xchg
push
lret
in
mov
bound
push
test
frstor
data16
loopne
lcall
fisubl
arpl
loop
cmpsl
pop
jge
fnsave
xchg
jns
test
push
int3
push
fcmovnbe
dec
insw
aas
push
mov
out
jb
imul
jge
push
jns
fcomps
shll
sub
cmp
insl
mov
jge
arpl
rorl
dec
cmpsb
test
xchg
clc
mov
jecxz
out
int
test
std
cs
cmp
ss
pop
mov
lahf
pop
test
lcall
sbb
aad
push
lcall
test
scas
rorl
mov
bound
out
pop
pop
mov
pusha
inc
fbstp
push
cmp
sub
dec
xchg
add
fs
and
xor
mov
dec
cmp
inc
iret
stc
sbb
ficompl
mov
lahf
sbb
sub
lods
pop
dec
test
jbe
mov
push
test
inc
mov
pop
int
das
mov
jecxz
sub
jg
out
enter
adc
stos
sub
jmp
cli
imul
inc
ret
das
loope
cmpsb
jmp
add
dec
xor
mov
sbb
js
cs
or
mov
dec
popa
and
dec
pop
mov
push
add
sub
xchg
cmpsb
pop
fmuls
add
int
stos
push
mov
mov
cmp
fcomip
data16
xchg
push
daa
rcll
insb
stc
mov
int3
imul
sub
sbb
jae
xchg
call
cltd
in
mov
leave
jo
mov
sbb
sbb
xchg
xchg
or
test
das
and
push
pop
sub
and
mov
pop
push
into
xchg
xlat
sbb
jns
add
xor
test
lcall
fldl2t
fisttpll
cmp
fsubs
pop
adcb
mov
hlt
push
fld
mov
clc
pop
mov
pop
xchg
cli
mov
jl
inc
mov
shlb
das
div
shrl
negl
cmpsb
test
adc
repnz
and
or
xor
dec
push
xor
cmp
xlat
inc
jge
clc
sarb
loopne
fs
mov
cld
rorb
popa
pop
call
fwait
int3
movsl
movsl
adc
fadds
data16
mov
jns
loopne
in
jae
and
sub
inc
add
flds
push
roll
sbb
arpl
inc
jge
addr16
pop
test
and
jnp
popa
mov
int
cwtl
test
rorb
out
addl
aam
imul
jg
xor
aaa
pop
pop
jno
dec
outsl
push
aad
inc
lea
push
lods
daa
push
adc
jg
xlat
andl
sarl
xor
mov
int
add
imul
inc
pop
rorl
insl
mov
das
adc
mov
jae
lcall
pop
shrl
sti
in
test
cmp
fistpl
xchg
mov
mov
inc
inc
dec
in
pop
mov
inc
push
in
xchg
fidivrs
popf
bound
mov
fmul
testb
mov
dec
pop
test
movsb
popa
mov
shll
xchg
sahf
jg
dec
jg
dec
cld
mov
loopne
inc
shlw
stc
xor
mov
pop
movsb
aad
xor
and
xchg
jo
loope
mov
adc
popa
mov
sub
movsb
out
js
xor
jnp
lea
in
repnz
jns
mov
jg
cmp
fstps
es
in
mov
dec
inc
insl
clc
push
outsl
pushf
imull
cmp
add
inc
cld
sbb
ljmp
push
es
loopne
ds
jmp
push
mov
jge
loope
in
sub
or
cltd
testb
adc
cmovge
mov
push
lea
ja
sbb
lds
adc
and
shr
inc
dec
idivb
aad
mov
daa
inc
rcrb
push
mov
add
cmp
adc
adc
imul
inc
mov
jl
xchg
add
fwait
out
xor
jge
movsb
rclb
sub
popa
mov
jp
test
ljmp
mov
shr
mov
cmpl
pop
inc
insl
xchg
loope
dec
push
xchg
popa
ds
cltd
and
jge
enter
loope
adc
repnz
shll
ficoml
adc
inc
testl
mov
ds
jge
jne
enter
sub
imul
out
mov
push
repz
repnz
cli
mov
enter
xchg
out
push
cmpsl
dec
push
or
aas
cmpb
add
rorl
or
frstor
adc
out
in
adc
push
xchg
or
rcll
les
fistps
dec
jno
add
pop
sbb
mov
inc
inc
jno
xchg
das
add
mov
fidivl
les
scas
mov
lea
sahf
pop
sub
pop
leave
cs
xchg
mov
xchg
fdiv
mov
inc
push
fsubrl
pop
lcall
jae
dec
sbb
enter
and
mov
cmp
push
in
retw
and
dec
dec
and
lret
xor
ss
es
cld
popf
loope
sbb
dec
push
push
fmuls
sub
stc
std
xorl
lcall
das
daa
mov
ja
add
test
orl
ret
leave
ffreep
cmp
or
enter
jns
jp
leave
gs
faddl
xchg
leave
cmpsb
test
mov
push
clc
sub
and
scas
popa
aam
mov
pusha
cmpsl
mov
and
scas
and
adc
enter
or
xchg
and
sub
sbb
mov
mov
sub
adc
test
pop
mov
adc
inc
test
mov
push
xchg
inc
dec
sbb
push
loop
loope
pushf
and
sbb
imul
pop
shll
mov
les
sbb
push
adc
cmp
sbb
aad
imul
int3
sbb
and
movb
mov
sbb
loop
dec
mov
ret
imul
int
leave
push
adc
sub
lds
and
jns
inc
test
popa
lds
daa
shlb
jecxz
mov
mov
sbb
mov
fstps
xor
fldcw
lock
add
fbstp
gs
enter
add
lret
jno
mov
fs
movsb
fsub
mov
ret
insl
mov
mov
fdivrs
fdivrs
jns
leave
das
loopne
shll
and
loopne
test
test
pop
mov
gs
mov
gs
pop
les
pop
cmp
mov
push
inc
and
gs
iret
ret
pop
out
lds
sbb
push
inc
sbb
insl
ret
out
xchg
and
mov
iret
lock
jecxz
jb
clc
push
push
push
fcompl
add
gs
fidivs
test
lods
inc
and
push
dec
loopne
adc
cmpsb
pop
dec
xorl
popf
xchg
enter
pop
cs
xchg
lea
dec
fdivrs
fdivrs
dec
add
add
add
cmpsb
and
xor
test
imul
imul
lods
int3
adc
cli
loope
push
inc
cs
pop
leave
scas
mov
and
mov
inc
push
cmpsl
gs
dec
push
fisttpl
sahf
dec
jl
call
and
lods
and
out
pop
test
cmp
xchg
xchg
cmpsb
xlat
aad
pop
xchg
aam
add
popa
dec
inc
addr16
aam
dec
out
pop
enter
popf
das
or
add
imul
push
repnz
leave
lret
inc
push
sarb
cmp
xchg
mov
lods
mov
sahf
ljmp
outsl
ljmp
cmpsb
mov
loope
popf
mov
jae
xchg
ds
and
xchg
movsl
lods
shrb
and
jne
adc
dec
cwtl
jns
sub
out
inc
jno
cmpsl
ret
pop
and
dec
cltd
aam
mov
test
addr16
inc
adc
mov
mov
pop
sub
ljmp
cli
out
das
cmp
pop
mov
fdivrl
sbb
mov
mov
and
mov
fldenv
mov
mov
push
sub
fsubrs
outsw
in
adc
and
loope
xor
jb
push
imul
int3
fwait
data16
outsl
popa
int
test
sti
iret
test
xchg
loope
pop
fs
push
push
fadd
les
mov
scas
insb
lds
sbb
pushf
daa
ret
and
cmc
shrl
mov
adc
mov
inc
mov
cmp
icebp
cmp
xadd
add
sarl
cs
fs
shll
stos
leave
loop
adc
mov
cmp
stc
mov
lahf
xchg
pop
cmpl
sub
dec
fisubs
push
and
leave
rorl
call
mov
add
sub
repnz
testb
jne
jl
movsb
cwtl
pop
sub
lds
popf
sub
mov
lret
mov
sbb
jle
mov
dec
out
fcmovu
mov
sub
popf
into
dec
fmuls
push
and
test
test
enter
call
xchg
andb
je
mov
push
lcall
pop
mov
or
pop
cmpsl
sub
xchg
xorb
test
xor
cwtl
pop
lds
cld
addb
jns
loopne
mov
pop
cmp
inc
inc
inc
pushf
cmp
pop
mov
mov
adc
psrld
sar
lret
mov
or
ja
testl
add
mov
popf
xchg
xchg
int
out
cli
adc
mov
pushf
mov
or
jecxz
testl
mov
push
lods
lret
add
mov
ljmp
mov
mov
popf
fcoms
push
enter
mov
mov
xor
pop
xchg
xchg
mov
push
xchg
hlt
loopne
ds
fstpl
add
shr
sbbl
xor
test
dec
shr
and
sbb
push
shll
jg
test
sub
loope
mov
lcall
mov
dec
andl
lcall
orb
shlb
cmpsl
arpl
jp
sub
push
xor
jg
aas
ret
inc
rolb
mov
push
mov
pop
push
cs
icebp
jge
sub
push
push
mov
xchg
inc
add
movsl
test
sbb
imul
push
mov
mov
leave
jg
xchg
jecxz
inc
push
mov
mov
lcall
stos
insb
cmp
frstor
std
jo
push
cmpsl
lcall
movb
lahf
or
or
mov
pop
fldenv
pop
in
dec
stos
ss
fiadds
out
cs
and
addr16
mov
ss
push
js
daa
out
pop
sub
movsl
aaa
lahf
nopl
jge
inc
add
sub
addr16
sub
mov
xor
sub
and
dec
mov
fmuls
jne
aam
pop
push
imul
stos
aam
decl
mov
cmp
adc
lock
mov
jo
jg
xchg
in
rorb
mov
xchg
ds
rol
mov
or
xchg
push
mov
xchg
test
xchg
into
inc
decb
out
movsl
xor
call
gs
jmp
mov
add
mov
cmpsb
out
xor
xchg
cmpsl
push
fstl
sub
loope
lret
shl
cmpb
lahf
pop
shll
mov
jge
mov
mov
sub
es
test
out
mov
mov
pop
mov
mov
inc
dec
sub
mov
orl
add
faddl
xlat
inc
mov
push
addr16
mov
mov
push
mov
xchg
inc
mov
push
push
insb
push
jbe
dec
popf
scas
xor
nopl
mov
add
push
lahf
imul
cmp
cwtl
mov
testl
dec
push
dec
loope
or
push
popf
aas
out
aaa
mov
mov
jae
js
fbstp
shl
cmp
adc
leave
xchg
int
lock
and
mov
cmp
xlat
or
xchg
cwtl
loop
dec
and
test
fldcw
loopne
pop
and
repnz
push
and
je
addb
mov
xor
dec
mov
mulps
aad
imul
pop
aas
into
enter
mov
lea
cmpsl
decl
lret
test
mov
insl
pop
nop
repnz
or
cmp
adc
repz
xchg
and
xchg
adc
sar
adc
rcll
fistpl
hlt
mov
out
loope
dec
jb
xor
inc
addr16
leave
push
les
jge
jecxz
sub
xor
mov
fs
rcrb
fistpl
mov
push
pop
mov
jp
adc
push
pop
jnp
ljmp
jmp
fcomp
adc
ds
enter
jg
repnz
gs
fwait
out
cltd
das
xchg
cmp
mov
test
xchg
mov
das
mov
adc
xchg
mov
and
sarl
dec
fs
adc
loopne
addl
jbe
fwait
cmpsb
jmp
rorl
mov
dec
pop
ljmp
pop
mov
shlb
imul
adc
addl
or
add
push
pop
movsb
jmp
repnz
push
es
out
mov
mov
push
dec
add
stos
mov
lahf
stos
testb
in
popa
sbbb
inc
dec
and
mov
xlat
in
in
adc
movsl
nop
adc
fmull
mov
inc
dec
push
es
in
popf
add
int3
sub
test
movsb
lods
adc
rcrl
xchg
xor
das
lods
aam
fcoms
stos
out
imul
cmp
pusha
int3
into
jmp
ret
neg
aad
test
popf
mov
dec
inc
popf
xchg
leave
cmp
jl
sbb
sbb
ss
jae
call
xor
adc
roll
cmp
jae
cmp
mov
push
xor
into
popf
in
jmp
or
sahf
and
cmp
int
pop
fsubr
test
in
xchg
ds
mov
pop
lds
add
enter
mov
int3
fdivrs
std
push
xlat
sub
cmp
push
iret
loop
imul
mov
scas
imul
cmp
subb
sbb
test
imul
inc
bound
addr16
jge
mov
out
lahf
mov
sbb
lahf
subl
adc
xor
sub
out
sbb
add
push
jnp
push
mov
movsl
ja
fnstcw
adc
push
loopne
scas
lret
add
mov
cmp
stc
sub
jmp
xor
adc
add
mov
pop
lahf
adc
stos
cmp
mov
jne
lea
xor
mov
mov
mov
insl
cmpsl
loope
fistpl
leave
test
daa
pop
cs
call
out
lods
int3
sub
iret
jecxz
rcrl
cmpsb
and
mov
icebp
int
xchg
dec
add
gs
or
mov
stc
loope
nop
jae
insb
jb
pop
or
ljmp
pop
push
out
icebp
inc
mov
aas
psubsb
mov
out
js
ja
dec
adcl
test
cmc
out
ljmp
fs
inc
push
enter
xlat
jnp
push
inc
lds
js
mov
insb
push
les
mov
jecxz
in
iret
xlat
dec
xlat
cwtl
and
in
sub
jno
jge
andw
stos
jbe
push
lahf
loopne
fcomi
leave
repnz
clc
imul
inc
dec
mov
loope
or
test
pushf
add
jae
pop
repnz
inc
mov
mov
ja
mov
data16
cs
ss
je
in
outsb
roll
sbb
add
pop
push
push
mov
dec
push
jge
stos
ret
adc
mov
pop
pop
or
test
fsubs
mov
xlat
jae
jno
adc
mov
ja
push
mov
fildll
add
mov
hlt
adc
pop
jbe
adc
das
xor
fadd
cmc
dec
lahf
arpl
aaa
das
cs
jno
ljmp
mov
bnd
test
repnz
outsl
sbb
adc
enter
ja
and
pop
lret
dec
loop
test
jmp
mov
pop
enter
lods
rorb
mov
das
push
sub
pusha
or
faddp
inc
mov
and
shlb
mov
rorl
fdivrl
inc
inc
mov
add
cmp
xchg
xlat
enter
lcall
imul
mov
enter
and
and
xor
sub
mov
lds
gs
pop
or
jmp
scas
dec
mov
outsl
adc
nop
shll
pop
jbe
adc
sub
pop
lea
pop
mov
lcall
mov
mov
rolb
movsl
movl
ds
push
cmp
mov
test
adc
mov
das
and
and
enter
xorl
test
mov
mov
adc
movsl
std
pop
ror
or
cmp
push
adc
lock
mov
shlb
add
gs
shll
xor
xchg
popf
cltd
aad
popa
push
xchg
lock
pop
and
fmul
jns
push
or
sbb
add
and
loope
rcl
xchg
das
in
jge
xchg
mov
das
jmp
jmp
dec
pop
mov
jo
push
jge
or
repz
xor
add
adc
inc
lock
into
fsubs
stc
and
lock
or
test
xchg
inc
mov
leave
cltd
xor
inc
ret
mov
rcrb
cs
aad
dec
popa
cld
inc
xchg
xor
or
xchg
mov
mov
punpckhwd
in
xchg
adc
xchg
negl
jnp
mov
sbb
pop
sub
push
nop
test
lahf
mov
jno
int
mov
imul
leave
jl
mov
decl
sub
sub
cltd
jnp
jp
adc
dec
push
ror
cmp
std
ds
dec
ficompl
repz
addb
jmp
test
popf
xchg
push
sub
sub
cs
stos
mov
push
lock
cmp
fisttpll
xor
imul
cmp
cmp
shrl
pop
ret
xchg
lods
and
push
add
sub
adc
mov
jnp
mov
cmc
pop
cmp
jg
push
xchg
adc
sub
sub
fbld
cli
jo
sbb
test
pushf
mov
loope
mov
clc
add
shlb
je
dec
cld
mov
adc
pop
test
aam
pop
hlt
push
pop
sub
pop
notb
and
insb
lahf
iret
xchg
dec
or
rcrl
add
cltd
mov
adc
test
lea
cltd
jge
mov
mov
cmp
lods
int
sahf
es
aad
negl
lret
inc
mov
mov
imull
pop
nop
test
shl
shll
mov
xlat
mov
out
scas
lcall
sahf
and
test
inc
pop
fisubrs
cld
xor
lea
fst
cmp
dec
xor
mov
enter
jmp
mov
pop
arpl
test
inc
cli
sbb
dec
shl
lods
cwtl
cmpsb
popf
cmp
ret
xchg
adc
dec
cmp
cmpsl
leave
mov
popa
mov
and
mov
sarb
mov
scas
rorl
out
xor
loopne
out
hlt
das
mov
jge
sub
jg
mov
shrl
arpl
hlt
test
movsl
std
scas
mov
out
fldcw
xchg
jae
call
push
mov
mov
pop
jmp
mov
mov
jae
aam
call
cmp
iret
std
fldcw
repnz
pop
mov
clc
gs
adc
call
cmpsl
ljmp
mov
cmpsl
rorl
fdivrl
inc
icebp
ljmp
fidivrs
cli
or
addr16
call
jge
inc
fbld
shrb
dec
or
mov
mov
in
mov
xchg
push
jecxz
stos
mov
xchg
lea
xchg
out
sbb
bound
and
inc
xchg
addr16
jl
cmp
push
lret
cmp
cmp
or
mov
dec
sbb
enter
test
adc
and
mov
inc
shlb
jb
sub
mov
rorb
xor
inc
pop
cmpsl
xchg
xchg
cmpl
stc
enter
loopne
loopne
lods
and
pop
cmp
pop
into
mov
addr16
cmpsl
les
lds
and
add
dec
push
cmp
pop
jo
sub
int
cld
jmp
mov
aas
mov
sub
pop
mov
cwtl
push
loope
imul
int3
push
push
cmp
iret
das
jecxz
fnstcw
mov
and
enter
jne
iret
clc
mov
es
in
push
xchg
dec
cmp
mov
rcrb
das
fldenv
daa
addr16
pushf
jmp
pop
lahf
movsl
dec
cmpb
data16
pop
sbb
sub
mov
movsl
inc
jno
add
popf
hlt
or
cmpsb
push
mov
repz
in
enter
jge
jg
pop
push
idivl
jmp
xchg
xchg
pop
jmp
mov
nop
sbb
cmpsl
lock
dec
and
out
xchg
pop
xchg
adc
mov
sub
imul
bound
and
movsl
mov
mov
fs
loope
or
shl
sbb
mov
mov
aad
sbb
lcall
fstps
pop
test
jbe
into
mov
mov
stc
pop
add
or
fcmovu
sub
cmp
pandn
call
lcall
jmp
loopne
add
mov
or
call
xlat
scas
fwait
inc
mov
test
mov
rorl
mov
mov
or
fcomp
shll
movsl
cmpsb
aas
subl
nop
fucomi
pop
pop
jno
or
repnz
jp
sbb
adc
cmp
daa
lret
sbb
inc
add
test
cmp
lret
push
out
mov
mov
rorb
bnd
push
leave
movsl
cltd
jge
lock
mov
pop
xchg
xchg
sar
nop
push
inc
cmp
call
lahf
lds
loopne
xchg
pop
enter
or
aam
dec
cmp
add
push
aaa
lock
pop
mov
call
aad
sub
ss
enter
call
int3
es
xchg
imul
inc
lahf
and
and
jnp
out
or
popa
xor
insl
or
aam
xor
bound
push
lods
jne
insl
push
cmpb
push
movsl
js
outsl
cs
cmp
cmp
ds
out
repz
lret
pop
xor
jl
loopne
clc
fdiv
scas
push
push
stos
es
inc
xlat
xchg
test
sbb
dec
loope
mov
arpl
or
jno
jns
mov
adc
mov
insl
inc
inc
faddl
repz
xor
loopne
and
and
cli
xor
movsl
pop
not
pop
cmp
call
test
dec
rcll
arpl
stos
cs
fucomi
add
and
cmp
dec
sub
loopne
dec
das
sub
jecxz
repnz
jno
fcompl
dec
dec
int
or
mov
addb
in
bound
loopne
leave
xlat
sbb
ret
adc
shl
xor
in
addr16
pop
xlat
dec
ljmp
loope
mov
mov
mov
and
push
sub
aam
js,pt
jae
mov
fsubrs
mov
pop
pop
lcall
fdivr
sarb
push
cltd
xor
popa
cs
adcb
xchg
ret
out
movl
pop
xor
ss
in
daa
xor
xorl
add
ds
mov
xchg
mov
cmp
daa
enter
std
sub
xor
xchg
and
in
pop
mov
xchg
lock
or
dec
xlat
mov
push
out
adc
inc
popa
dec
lock
leave
not
and
mov
fadds
test
fs
xchg
add
mov
test
cmp
imull
add
lret
push
adc
pop
push
fildll
popa
aad
adc
lret
cwtl
out
subl
xor
inc
push
repz
xchg
idivl
jns
int3
cli
mov
loope
or
pushf
xchg
cmc
cltd
fst
push
popa
sub
cmp
push
in
add
xchg
add
pop
pop
dec
xor
cmc
cmc
push
lcall
and
ret
sahf
xchg
jnp
es
cmpsl
ljmp
pop
shll
in
push
fstps
aas
mov
and
in
incb
inc
ds
mov
dec
leave
cmpsl
inc
add
lods
enter
jecxz
movsl
pop
jg
mov
fcoml
fsubl
xor
out
fimull
imul
call
rclb
or
add
sub
xchg
mov
loope
mov
int
movsl
push
shlb
push
xchg
mov
pop
aaa
mov
dec
cli
xor
and
jnp
mov
jns
push
add
dec
rcrl
cmp
sarb
push
push
adc
aas
leave
scas
push
cld
in
mov
ss
push
ficomps
push
shrl
or
cmpsl
mov
jo
dec
push
xlat
xor
add
xor
or
mov
cltd
shll
mov
loop,pn
inc
dec
adc
dec
imul
mov
jnp
mov
pop
mov
inc
enter
adc
cli
cwtl
arpl
xchg
push
ljmp
add
mov
inc
ds
dec
pop
popa
test
push
nop
fcomps
cmp
or
mov
mov
and
cmpsb
and
leave
dec
in
cmpsl
xor
xor
rcll
or
adc
iret
pop
ja
adc
ficomps
sarl
gs
mov
pop
jmp
cmp
jb
and
push
data16
pop
into
push
pop
call
sub
sbb
shll
xchg
add
lea
fyl2xp1
pusha
xor
adc
lods
insb
gs
mov
mov
cmpsb
and
addr16
mov
scas
add
out
es
inc
xadd
or
ret
cmpsb
imul
push
lahf
mov
mov
xchg
inc
inc
mov
iret
inc
enter
outsl
icebp
pop
jecxz
add
cltd
dec
cli
andb
fcompl
in
xchg
dec
push
mov
mov
inc
inc
mov
dec
icebp
sub
pop
cmp
repnz
movlhps
bound
mov
ja
cli
cmp
imul
cli
mov
add
movsl
pop
aad
int
out
nop
jmp
iret
jbe
arpl
fmull
repz
call
adc
mov
lods
xchg
rcll
mov
movsb
sbb
cmpl
call
pusha
popf
sti
and
ror
lahf
popa
int3
inc
mov
fnstcw
cmpsl
mov
push
test
pop
popa
sahf
popf
dec
pushw
push
lods
idivb
fcomp
mov
xchg
xlat
mov
xchg
sub
sub
push
lds
in
push
ss
andl
repnz
test
cmp
outsl
aas
test
push
sub
incl
mov
dec
imul
cmp
mov
fwait
push
mov
lock
cmpsb
mov
adc
jbe
in
adc
jnp
add
xlat
shll
repz
xorl
jecxz
pop
mov
ficoml
in
addr16
incb
sub
pop
fisttpl
mov
movsl
fwait
cltd
mov
jmp
ds
test
and
xchg
pop
call
fcomps
enter
mov
xor
idiv
popa
xchg
int
int3
test
rcll
loope
cs
lea
jmp
loop
bound
adc
mov
cltd
std
nop
cmpsl
sbb
jle
jne
mov
in
fsubrl
insl
cmp
in
test
and
outsl
cltd
xchg
not
cmpsb
in
in
pop
sbb
movsl
cmp
mov
mov
jp
ja
push
test
push
dec
nop
inc
mov
cltd
sti
adc
rcrl
outsl
testl
pusha
mov
or
arpl
stos
addb
testl
pop
fdiv
inc
in
rcll
and
mov
fs
pop
popf
jo
popa
inc
out
mov
fsubrs
ljmp
icebp
jno
xor
mov
js
repnz
xchg
shll
sbb
xor
arpl
mov
or
pop
in
mov
or
out
jno
lds
inc
mov
cmc
mov
outsl
jno
push
gs
mov
cmp
jb
popf
dec
sub
in
loopne
cs
idivb
dec
rolb
sub
inc
jo
add
pop
xor
outsl
ds
xor
cmp
mov
mov
xchg
push
test
push
mov
mov
inc
xchg
aas
dec
add
stc
in
push
lret
cmp
cli
in
mov
adcb
leave
popf
es
push
adc
sahf
leave
mov
aas
enter
shll
push
mov
xor
out
rorb
movsl
push
popa
out
idivw
fwait
mov
cmp
imul
cmp
pop
mov
insb
fildll
jo
jns
xchg
iret
mov
les
mov
jbe
ficoms
mov
lret
rcr
imul
in
pop
or
mov
stos
dec
cmpsb
bound
outsb
dec
xor
std
mul
call
addr16
sti
pop
cwtl
mov
mov
pop
cld
data16
sbb
pop
and
inc
cmp
rclb
jecxz
add
inc
add
out
mov
pop
sbb
sub
mov
add
mov
jmp
pop
nop
pop
inc
icebp
pop
pop
loope
aam
stc
jmp
dec
dec
and
outsb
mov
sahf
and
inc
sub
jns
pop
or
xchg
movsl
mov
js
mov
jae
stc
sarb
cs
dec
imul
fldcw
cmp
stos
icebp
mov
lods
arpl
test
lds
pop
adc
mov
push
dec
push
pop
test
fisubl
sahf
pop
push
imul
mov
jns
mov
std
jae
popf
repnz
push
jecxz
lods
daa
movsb
pop
dec
xchg
lret
daa
lds
arpl
imul
mov
push
test
shlb
push
adc
mov
adc
mov
xchg
mov
dec
data16
pushf
repnz
cs
and
jecxz
sbb
movsb
jb
gs
xchg
mov
mov
jb
fimull
pop
rorb
xor
or
sub
mov
sub
and
xor
mov
mov
cs
ret
jg
fldln2
mov
pusha
sbb
and
mov
out
nop
bound
mov
cmpsl
out
push
add
shl
xchg
ljmp
leave
loopne
sub
add
ds
or
mov
sbb
jae
push
imul
push
cltd
out
leave
sbb
fisttps
and
inc
cmp
out
dec
mov
std
psubd
roll
fsub
out
lcall
sub
add
xchg
add
ja
mov
mov
and
sub
pop
push
push
mov
cli
leave
in
mov
idivl
jo
pop
cmpl
push
mov
mov
out
adc
add
daa
popf
mov
add
repnz
xor
outsb
mov
lods
mov
sbb
aaa
imul
xor
adc
sbb
daa
and
lds
adc
pusha
popa
mov
fsubl
dec
adc
mov
push
scas
ja
jb
sub
lcall
jmp
sub
xchg
cmpsl
leave
cld
loopne
dec
mov
je
mov
xor
xchg
xchg
mov
jge
daa
mov
xor
arpl
movsl
mov
mov
jne
ret
jns,pt
add
arpl
in
and
rcrb
jnp
xor
out
jge
fnstsw
cwtl
fwait
mov
sahf
insb
jno
scas
and
push
mov
dec
push
pop
pop
je
jg
mov
push
sub
popa
std
pop
rclb
adc
in
stc
leave
jp
mov
out
xchg
lahf
test
pop
pop
repnz
jno
popf
jns
aaa
inc
les
cmc
inc
and
mov
cmpsl
inc
popa
xchg
lahf
rcll
push
push
xchg
mov
sahf
ljmp
cmpsb
rcrl
ja
xchg
xchg
rol
iret
fdivr
dec
mov
jmp
add
xadd
mov
xor
mov
mov
imulb
cmp
sahf
loopne
pop
push
rorl
xor
ret
lea
std
mov
xor
int
pop
outsl
pop
cmp
cmpsb
inc
out
and
fwait
test
jmp
es
popf
pop
mov
jno
push
or
fistl
jbe
adc
adc
jle
ror
lahf
xor
cmpsl
lock
xor
xor
mov
cmc
mov
es
jle
cltd
push
add
mov
and
pop
cs
fdivrl
mov
push
int3
xchg
decl
lods
enter
sbb
leave
aam
jb
dec
je
mov
iret
std
ds
adc
mov
mov
fmulp
gs
aam
aad
xor
adc
call
mov
mov
aam
push
frstor
xchg
lahf
mov
xchg
pop
fwait
adc
pop
sahf
xlat
stos
das
fidivs
push
and
push
jns
in
xchg
call
pop
cmp
push
xchg
mov
and
leave
andl
gs
jno
leave
shll
mov
enter
movsl
out
push
jle
push
cwtl
mov
xchg
xchg
rcl
jns,pt
mov
pop
js
sbb
aad
ljmp
les
jnp
mov
mov
inc
aam
aad
ds
rcrl
int
addb
pop
cmpl
cmp
fidivrs
clc
lcall
fwait
bound
cmp
dec
and
mov
mov
divb
loopne
cwtl
scas
pop
sub
inc
sbb
or
and
call
inc
dec
mov
int
repnz
stc
jge
cmpsl
fnstenv
adcl
adc
enter
ror
and
int3
test
mov
and
fwait
push
rorl
inc
enter
rorb
fldt
mov
addb
sahf
sub
push
sub
fdivrs
adc
repz
jge
push
test
call
mov
lcall
push
mov
adc
add
loopne
lcall
pop
and
sbbb
maskmovq
mov
sbb
scas
pop
mov
sub
sbb
hlt
leave
xor
mov
rol
fisubrs
movsb
je
sub
sub
mov
lcall
inc
in
sub
lds
fildl
ja
pop
fdivrs
mov
add
popf
popf
ds
sub
mov
sbb
ficoms
sub
sarb
cmp
out
xor
sub
testb
popl
mov
divl
xchg
out
adc
mov
sti
mov
mov
outsb
xchg
fnstcw
mov
fbstp
jecxz
leave
pop
sub
pop
and
addr16
pop
xlat
callw
stc
lds
out
add
lahf
adc
enter
rcr
repnz
and
bound
aad
xchg
mov
inc
sbbl
mov
mov
movsl
into
test
int3
rcr
call
out
stc
imul
or
jnp
test
jp,pt
mov
xor
cmp
mov
dec
stc
sub
stos
lds
mov
sbb
inc
mov
popa
nop
in
ss
aaa
jmp
cmp
mov
les
ja
rolb
add
xchg
in
and
cwtl
mov
test
lea
xchg
sahf
adc
sub
addb
jne
insl
bound
sbb
bound
cmp
movsb
test
inc
cld
lahf
stos
ds
push
sub
out
div
outsl
pusha
inc
mov
out
mov
fnsave
dec
jmp
add
pop
data16
std
add
outsl
pop
push
adc
das
push
notb
jge
add
fwait
ss
addr16
dec
dec
and
loop
push
inc
push
sbb
mov
cli
and
or
shlb
leave
repnz
mov
ljmp
int
pop
leave
or
cmp
xlat
cmp
pop
sbb
lahf
add
inc
bnd
pop
or
cli
lcall
inc
test
cmc
clc
and
dec
test
popa
sub
call
adc
dec
mov
mov
push
mov
pop
int
pop
sti
mov
add
mov
jo
mov
sti
outsb
les
add
aaa
icebp
sub
xchg
sbb
push
push
inc
xchg
and
popf
add
rorb
cltd
stos
rcll
jb
leave
dec
neg
je
lahf
add
call
xor
fwait
xchg
add
icebp
cmpsl
ds
sbb
add
bound
ss
test
addr16
mov
popa
out
popa
addb
push
jmp
call
inc
add
pop
enter
push
lea
fidivs
mov
jmp
test
test
xlat
lret
push
xor
or
test
cs
enter
test
or
sub
lods
fadds
ret
mov
xlat
mov
inc
adc
clc
xchg
mov
xchg
cmp
in
les
push
pop
loopne
iret
popf
movsl
mov
cmp
int
inc
mov
rclb
cmp
lods
xor
sbb
idivb
jmp
cmp
jns
stos
mov
jne
sbb
rcll
inc
mov
orb
jbe
push
inc
ret
pop
fadds
ds
xchg
jns
mov
pop
imul
stos
xchg
sahf
or
adc
daa
push
mov
movsb
pop
jmp
lcall
outsl
pop
cmc
dec
mov
cmp
sub
cli
cmp
loopne
pop
adc
pop
mov
mov
jmp
fsubrl
das
xchg
mov
les
xchg
xor
movsb
and
insl
xor
add
mov
or
add
sti
stos
mov
cmp
imul
ljmp
cmp
insl
jmp
xchg
adc
xchg
repz
inc
push
movsl
leave
mov
shrl
addr16
movsl
add
jmp
lods
movsb
xor
repz
xor
out
mov
subb
xchg
outsl
loopne
dec
out
xchg
xchg
stos
leave
sub
adc
sub
pop
in
mov
mov
ret
stos
sahf
lahf
dec
rorb
mov
test
cwtl
mov
jne
jbe
mov
jmp
pop
pop
lcall
jb
push
stos
sbb
cld
mov
adc
imul
or
and
int3
imul
stos
lds
lds
enter
dec
add
movsb
mov
sub
or
mov
adc
and
xlat
jecxz
xchg
out
cmp
sahf
push
lock
xlat
int
rorb
hlt
inc
xchg
cld
pop
cmpsl
ficomps
adc
inc
mov
ds
aas
and
dec
xchg
xor
xchg
ds
mov
scas
adc
mov
sbb
mov
mov
fwait
loopne
int
mov
pushf
xor
ljmp
and
stos
flds
rolb
popa
enter
ret
cmp
fmuls
add
aaa
xchg
fucom
rorl
nop
mov
cltd
mov
pop
lods
test
dec
rcr
sbb
mov
cmp
mov
test
or
or
mov
dec
imul
test
or
fmuls
or
push
bound
mov
sub
dec
test
daa
fisubl
pop
bound
mov
bound
mov
cmpsb
iret
or
cmc
imul
test
push
and
xor
bound
mov
cmp
test
fmul
and
loopne
imul
and
loopne
imul
pop
movsb
popa
test
and
idiv
cmpsb
cmp
mov
mov
sbb
inc
pop
gs
arpl
cmpb
mulb
iret
and
pop
pusha
movsl
dec
popa
mov
cmpsb
ret
or
xchg
fisttpll
lcall
pop
sub
jno
movswl
dec
repnz
push
scas
and
cltd
fsubrs
jno
sub
inc
scas
xlat
outsl
mov
jb
jns
cltd
sub
out
mov
jmp
mov
sarb
adc
loope
xchg
fsubrl
jecxz
fstps
shll
mov
shrb
fwait
ljmp
mov
int3
dec
pop
jb
fcmovnu
mov
fwait
sbb
sub
xor
insl
push
dec
add
lods
aam
movsl
adc
stc
inc
xchg
popf
mov
pop
cli
mov
icebp
jno
cltd
mov
inc
stc
xchg
mov
jno
jmp
cmp
jb
add
movsl
lcall
and
xchg
movsl
pop
mov
inc
movl
loope
bound
sub
sub
add
sbb
cmp
push
ficomps
jnp
rcrl
mov
pop
and
popa
test
and
add
mov
pop
jecxz
stos
inc
movsl
movsl
inc
sub
mov
enter
dec
mov
loopne
fnstcw
sub
test
mov
mov
mov
testl
pop
jge
mov
xchg
push
sbb
pop
hlt
leave
mov
jg
rcl
push
mov
mov
xchg
sub
mov
jge
dec
cmp
les
lea
cmp
in
loope
loop
fldenv
cmp
cmc
mov
pop
pop
and
or
inc
cmp
mov
add
pop
xchg
das
jg
addb
loope
and
fadds
cltd
flds
fwait
adc
je
xchg
stc
in
mul
ror
add
aas
movsl
in
shl
push
or
add
sub
adc
xlat
int
jmp
fldcw
subb
idivl
fwait
xor
cmp
nop
xchg
nop
jb
sar
jno
cmc
enter
pop
dec
ds
push
push
push
cltd
lods
mov
mov
or
rcrb
cwtl
daa
push
xlat
test
popa
cltd
jl
mul
xor
aas
jns
mov
scas
into
pop
les
or
mov
xor
in
mov
xor
cmpsl
adc
int
push
arpl
icebp
inc
pusha
xchg
jmp
add
sbbl
pusha
cs
rorl
fstl
fwait
adc
dec
inc
and
cld
and
adc
xor
shlb
pop
push
stc
outsl
movsb
test
cmpl
and
insl
vmread
ret
jno
in
rcrl
popf
arpl
popf
lea
out
pop
movsb
movsb
in
outsl
shll
add
dec
fcmovnu
decb
scas
push
out
adc
out
ss
xor
loope
push
cmp
fists
lods
rcr
daa
or
shll
and
inc
sub
push
mov
aaa
rcr
and
mov
sub
enter
cmp
inc
test
and
movb
mov
cwtl
insl
mov
pushf
cli
std
dec
mov
or
cmp
dec
idivl
and
loope
mov
shll
ja
ret
xchg
aaa
jmp
mov
fsubr
mov
and
jbe
lea
mulb
push
scas
mov
cs
dec
in
sbb
or
or
inc
aas
lods
mov
sbb
jns
xchg
nop
xlat
int
jno
mov
or
pop
add
xchg
mov
jge
call
jns
inc
push
nop
dec
jl
jo
mov
subl
negl
sub
and
mov
or
into
iret
dec
dec
adc
inc
sub
xor
push
repz
fdivrs
push
mov
shlb
shll
mov
sbb
xor
addr16
clc
dec
mov
aas
xchg
enter
mov
imul
push
test
mov
out
daa
cmp
sub
call
stos
mov
ss
lret
pop
xchg
and
insl
lcall
mov
adc
fwait
out
sub
ljmp
xor
mov
xor
cmpsl
push
imul
pop
mov
jb
adc
sbb
pop
inc
pop
sub
push
das
adc
in
add
xchg
lret
mov
lcall
push
mov
sub
test
pop
rcrb
sbb
xor
mov
js
aaa
aam
adc
shll
jl
lret
fldcw
mov
pop
leave
cs
push
aas
test
xor
mov
mov
mov
lret
iret
insl
sub
fisubrl
mov
or
mov
ja
aas
je
mov
xchg
inc
cmpsl
jae
xor
pushf
xor
inc
dec
xlat
lea
xchg
mov
inc
repnz
popf
jecxz
adc
inc
mov
adc
jmp
cmc
or
push
push
cs
addr16
jne
xchg
cs
mov
sub
jge
mov
pop
fcomps
jo
pop
lock
xchg
dec
out
push
adc
push
add
sbb
pop
stc
xor
testb
inc
push
cmp
adc
lret
mov
jns
and
repnz
sub
movsl
rep
ret
repz
std
mov
ficoml
sbb
fistps
pop
fwait
xor
sbb
insl
ljmp
nop
push
sub
insb
xchg
cld
ja
in
lea
in
jo
popa
je
call
add
test
test
insl
imul
fidivl
sbb
sbb
or
insl
push
es
xlat
insb
popl
sbb
cmp
mov
rcrl
jae
or
mov
push
aam
out
push
fstl
push
jmp
lods
ss
shrb
fisubrl
dec
rolb
sbb
dec
jb
jmp
fmul
sar
movl
fsubs
mov
jb
jmp
test
test
or
jmp
mov
sbb
shlb
lret
xor
and
jmp
popa
in
xchg
iret
pop
push
inc
jno
fsubs
popf
push
pop
dec
or
jmp
pop
andl
or
jmp
and
lds
roll
pop
out
fptan
ljmp
movl
outsb
dec
push
jb
and
test
add
add
inc
adc
mov
pop
aaa
jge
mov
or
call
push
movsl
lea
dec
aam
cltd
aas
bound
mov
dec
aaa
inc
inc
jb
jmp
adc
jo
jp
or
mov
sti
mov
rcr
ret
rcl
inc
icebp
adc
pop
inc
ljmp
push
mov
mov
lcall
fisttpll
shll
jmp
dec
jecxz
xchg
add
pop
mov
jecxz
sub
jecxz
dec
lcall
loopne
mull
mov
dec
leave
inc
xchg
lea
rcrl
sub
xchg
pop
fadd
cmp
imull
cmp
fldenv
pop
push
xchg
mov
push
mov
push
cwtl
add
cmpl
mov
ret
add
and
jne
int3
cmpsb
gs
xchg
lahf
and
dec
cwtl
nop
test
jl
dec
dec
adcb
test
sub
scas
sub
cwtl
mov
sub
shl
pop
sub
pop
lock
cmpsl
jne
dec
cmpsb
mov
loopne
in
pop
les
jnp
and
scas
mov
scas
sbb
in
push
jns
lcall
pushf
xor
jne
popf
test
pop
push
and
mov
xchg
sub
jmp
jg
test
shll
add
in
jle
scas
sar
and
add
push
test
aas
add
pop
inc
and
push
in
add
fldenv
and
aas
jg
aad
push
stc
out
fdecstp
xchg
mov
or
mov
mov
inc
addl
cmp
xchg
add
lds
shl
pushf
aaa
aam
aas
call
pop
cs
adc
repz
rol
sarb
add
mov
popf
pop
inc
inc
xchg
aam
mov
add
fstpt
and
pop
repnz
insb
lds
shl
cmp
loope
sbb
out
ret
ret
inc
push
aaa
in
jb
xchg
push
mov
mov
inc
jbe
dec
pop
bound
sbb
lret
inc
jo
inc
jae
sub
fs
dec
fldl
sub
xchg
cs
lcall
scas
sub
push
add
cli
fptan
jmp
sub
gs
cli
xchg
lahf
cltd
aas
and
mov
in
ljmp
cmp
shrb
inc
xchg
push
movb
mov
jg
sbb
push
cs
sub
add
in
fldcw
and
popa
cmp
mov
jbe
jb
test
imul
fwait
inc
test
loop
mov
dec
pop
xor
jmp
ret
inc
mov
lds
sbb
lret
divl
outsl
mov
xchg
fstl
sbb
cmp
std
sbb
loop
push
fldcw
sbb
pop
mov
push
andl
pushf
loope
adc
inc
mov
cltd
mov
stos
pop
pop
xchg
movsl
call
dec
add
jo
fidivs
mov
pop
insl
arpl
aaa
mov
aas
xor
jg
and
jecxz
inc
hlt
dec
lock
ret
mov
cli
sti
pop
lcall
inc
test
daa
dec
aaa
mov
push
mov
cmp
dec
cmp
repnz
paddsw
mov
paddusw
pop
icebp
imul
jno
sub
subb
add
subb
push
hlt
imul
xchg
ret
mov
sub
push
decb
jge
cmp
push
hlt
and
mov
pop
mov
and
out
dec
jo
inc
add
dec
fmuls
dec
mov
mov
pop
add
movsb
inc
pop
out
incb
push
ret
cmc
mov
outsb
test
inc
enter
jecxz
jbe
inc
lahf
aas
mov
inc
mov
push
arpl
fiaddl
outsl
call
cld
dec
clc
loopne
dec
rcrb
leave
rcr
adc
xchg
hlt
adc
aam
nop
inc
push
cltd
push
add
sahf
das
popa
mov
cmp
mov
and
mov
push
fistpll
iret
das
xchg
jmp
mov
out
out
pop
xchg
mull
jge
jns
xor
push
mov
loope
and
pop
inc
std
mov
cmp
lds
sub
sti
rcrl
das
pop
aad
in
sub
sub
out
sbb
pop
int3
insb
in
lock
imul
fidivl
aaa
movsb
pop
shlb
xchg
lods
add
mov
es
ret
xor
xlat
add
add
lds
push
xchg
stos
xor
popf
mov
pop
pop
inc
std
outsb
movsl
fnsave
fucomip
rol
sub
movsb
ljmp
mov
mov
popf
sbb
and
add
in
xor
fadd
jo
jb
mov
subl
jg
lds
xchg
xchg
mov
fst
mov
or
movsb
aam
jnp
push
jecxz
mov
loop
jno
mov
test
mov
jmp
ja
adc
movsb
pop
ds
les
xchg
out
adc
fnstenv
add
shlb
movsl
jns
outsb
and
mov
ds
imull
jg
mov
nop
fwait
dec
ret
adc
mov
cmp
mov
cmp
call
mov
cmp
xchg
out
cs
out
push
arpl
cmpsl
lock
adc
xchg
sub
and
push
loope,pt
fstps
shlb
jl
mov
jb
mov
sub
jecxz
cmp
fists
jp
lret
cmp
inc
ja
arpl
or
push
sbb
dec
push
mov
les
add
adc
std
pop
mov
cmpsl
dec
bound
push
inc
jb
pop
cli
adc
shrl
mov
icebp
idiv
cmc
stos
cmpb
push
mov
xor
rcl
repz
cmp
addr16
jmp
push
pop
iret
repnz
add
push
and
lcall
cltd
inc
mov
shr
aaa
loope
stos
mov
stos
imul
sub
stc
lea
sub
in
int
jo
rorl
sbb
int
dec
int
andb
rcrl
call
mov
loopne
loopne
cmpsb
push
and
hlt
jns
push
sub
sub
rol
pusha
push
inc
cmp
hlt
sub
dec
nop
repz
mov
mov
adc
push
or
push
mov
mov
sub
ror
cmpsl
push
shrl
push
test
mov
movb
sbb
ljmp
fcompl
stos
data16
int
repnz
and
jno
add
pop
mov
jl
jl
popa
in
dec
fwait
adc
pop
mov
cmp
lahf
cmp
arpl
jmp
das
pushf
in
sub
jo
and
mov
mov
jb
int
mov
pop
cmpsl
inc
pop
jne
daa
cmp
dec
mov
das
call
aam
push
add
pusha
adc
stos
fwait
mov
push
fsub
sub
mov
inc
dec
sbb
pop
jecxz
pop
xor
outsb
lcall
jmp
inc
sbb
xor
icebp
popl
je
xor
pop
push
bts
lea
xor
mov
fcomps
push
jae
cs
mov
mov
imul
mov
gs
repz
jg
imul
xchg
push
cs
lcall
dec
rclb
jno
or
push
mov
xchg
in
shll
or
sub
jb
push
xchg
ja
out
mov
enter
pushf
push
jle
lcall
es
enter
xchg
mov
enter
les
scas
sub
in
fsubs
or
cltd
mov
xchg
sbbl
xchg
mov
ljmp
movsl
push
mov
ja
sub
cmpsl
mov
or
and
ljmp
pop
out
scas
jae
mov
push
xchg
fstpt
jle
mov
jno
std
xor
mov
dec
mov
stos
loopne
push
out
xlat
loopne
mov
mov
movsb
lea
jno
test
cmp
fwait
gs
das
mov
cmp
jg
das
leave
std
es
aaa
jno
or
dec
inc
fst
pop
push
mov
rcr
or
sub
pop
and
lret
in
loopne
jle
leave
aaa
sbb
stc
jno
mov
in
jge
clc
dec
or
jl
addl
dec
mov
mov
daa
shl
sbb
rcrl
cmpsl
mov
jb
push
dec
aam
fistl
inc
lret
sbb
pop
ljmp
push
pop
inc
insb
lea
mov
xchg
mov
dec
fdiv
movsl
cmp
xorl
leave
rorb
out
dec
pop
adc
pop
mov
mov
lret
push
jb
nop
mov
cmpsl
cltd
in
xor
iret
adc
fmull
pop
enter
lahf
fistl
and
push
cmp
sbb
loop
or
icebp
jg
adc
xchg
mov
rcll
push
xor
inc
orb
aad
push
sub
shlb
sbb
subl
or
in
and
loop
ja
mov
stc
sbbb
inc
rcl
mov
and
into
int3
rcrl
test
jnp
imul
ret
push
pop
push
lock
mov
sbb
popf
rorb
dec
jge
sub
iret
leave
cs
insb
shll
cmpl
sub
mov
movsl
add
nop
iret
je
push
rcrb
cmpsl
lcall
xlat
sbb
mov
cltd
xchg
das
fdivs
pop
xorb
lret
test
jne
adc
jne
pop
jbe
jg
in
shll
push
push
lea
pop
test
lahf
mov
lea
out
jnp
push
mov
dec
xchg
push
mov
lods
push
xchg
or
arpl
cmp
dec
fs
sbb
pop
fldt
xchg
cwtl
jecxz
repz
inc
cmpsl
aam
jecxz
loopne
mov
or
sbb
pop
fwait
call
inc
jp
dec
pop
ficompl
stc
mov
xor
cltd
jno
fucomi
leave
add
orb
mov
jo
scas
repz
sbb
xor
aad
jae
loopne
mov
inc
or
sbb
add
mov
sub
lock
xlat
test
and
cmp
pop
mov
ds
testb
shrb
outsl
cli
outsb
stos
dec
fimuls
fiadds
std
cltd
fisttps
movsb
es
cmp
mov
and
add
and
lods
xchg
ficoml
xchg
dec
ret
mov
or
bound
rclw
leave
pop
push
xor
test
das
outsl
sub
xchg
test
sti
fwait
movl
pop
and
push
mov
ds
mov
mov
jle
or
pop
fwait
into
test
ljmp
out
test
loopne
arpl
lcall
fcompl
stos
fwait
ljmp
pop
sbb
pop
xchg
fimull
lea
mov
xchg
outsb
lret
inc
adc
pop
test
test
stos
ja
das
pop
es
dec
test
pop
push
and
cmp
jbe
push
mov
xor
dec
andb
sbbb
jmp
add
sarl
nop
ds
popa
sub
xchg
shll
mov
cmpsl
cmp
or
sub
fmul
stc
pop
aas
jbe
sti
xchg
movsb
aam
icebp
movsl
data16
icebp
mov
rolb
xlat
push
mov
jo
fsubrl
mov
ss
sti
push
in
data16
test
rcll
call
sbb
mov
ret
call
fdecstp
sbb
addr16
fwait
scas
mov
mulb
xchg
sbb
lcall
pop
out
inc
jl
cmp
and
bnd
clc
pusha
ds
filds
out
sub
mov
ret
mov
add
xorl
out
xlat
mov
aaa
das
mov
in
add
push
xchg
xlat
mov
pop
call
popf
rol
mov
add
push
in
test
mov
mov
enter
ds
scas
inc
jns
ret
pop
mov
mov
mov
ret
and
lea
xchg
shlb
lock
imul
cmpsl
rolb
and
add
rcll
push
mov
xchg
dec
popf
test
mov
int3
xchg
imul
mov
out
sidtl
xor
aad
arpl
xchg
ja
sub
je
cmp
jecxz
popa
push
out
clc
shrl
mov
mov
ljmp
adc
in
xchg
xchg
xchg
sub
mov
xchg
and
pop
dec
mov
mov
idivl
rcrb
gs
aas
push
ljmp
incb
mov
push
and
adc
pop
xchg
adc
pop
or
fmull
push
adc
scas
and
sub
cli
mov
mov
enter
mov
cmp
int
push
fdiv
sbb
movsl
or
mov
dec
jne
imul
imul
outsl
ds
imul
push
inc
push
out
sbb
dec
inc
cltd
jmp
pop
arpl
cltd
lods
shll
mov
and
push
mov
sub
mov
add
inc
pusha
jmp
xor
rclb
hlt
push
rclb
cmpsb
jmp
out
mov
mov
or
iret
mov
sbb
and
fdivrl
add
mov
popf
jg
aad
mov
and
push
mov
scas
mov
imul
fsubs
jmp
ds
mov
cwtl
push
inc
ret
or
jge
jecxz
ja
fxch
daa
lcall
mov
mov
mov
std
lds
ja
aaa
push
sbb
sti
push
mov
pop
fisttpll
shr
pop
mov
ror
xchg
jecxz
jge
sub
icebp
add
out
dec
imul
lcall
call
sbb
inc
mov
sbb
mov
dec
lcall
pop
rcrb
dec
fnsave
int
jecxz
mov
dec
nop
ret
int
xlat
sub
jge
cmpsb
lea
rcll
xchg
jns
lods
push
fdivrs
aas
mov
inc
nop
mov
push
loope
adc
push
stos
mov
aam
mov
push
addb
popa
mov
push
add
inc
mov
pushf
test
int
incb
xlat
nop
mov
xchg
roll
fadd
push
xor
cmp
sbb
out
inc
andb
jno
mov
andl
xchg
pop
mov
stc
clc
lahf
and
enter
das
mov
stos
les
push
sub
out
aam
pop
std
lods
or
cmp
bound
xchg
sub
jb
in
bnd
and
inc
push
lock
rol
or
mov
fildll
pop
jmp
push
cltd
lds
jp
xor
mov
pop
mov
movsb
test
filds
adc
les
popa
aad
mov
add
jecxz
add
lea
cmp
loop
leave
aam
movsl
xlat
test
pop
fidivs
dec
stc
mov
je
sarl
loop
popf
pusha
lea
push
repz
mov
lock
inc
push
cmp
pop
xor
and
pop
loope
adc
jecxz
mov
jns
test
pop
mov
add
dec
je
fcompl
popa
jge
xchg
inc
pop
lcall
mov
shll
xchg
test
popa
mov
enter
inc
push
jge
cltd
imul
xchg
mov
shlb
jo
inc
mov
insb
outsl
loopne
push
and
pop
insb
mov
xchg
jecxz
sbb
adc
xchg
xchg
stos
popa
bound
sar
int
call
inc
aas
aad
pop
leave
in
mov
shll
xor
ljmp
add
out
mov
out
vmovntdq
and
cmpsl
movsb
ret
mov
or
mov
out
in
addr16
test
std
cmp
and
lret
fwait
das
enter
test
pop
test
mov
jmp
fldl
mov
iret
loopne
mov
mov
ja
mov
loope
xchg
jmp
pop
test
jecxz
shrl
xlat
mov
fistps
xchg
jno
pushl
ja
xor
out
lcall
arpl
dec
enter
pop
sub
loope
ret
xchg
gs
mov
mov
mov
jno
mov
jae
cmpsl
je
enter
test
jno
aam
and
sbb
mov
pop
leave
sub
sbb
enter
iret
jno
jne
in
mov
imulb
into
sub
push
test
xchg
mov
xchg
lcall
dec
mov
add
out
inc
or
in
test
fisttpll
push
call
dec
cltd
repnz
cwtl
lret
movsl
mov
rol
dec
fs
shlb
fcomps
adc
push
lahf
std
mov
mov
jg
jno
xor
xlat
xchg
pop
stc
ret
cmp
scas
dec
int
dec
jbe
sarl
lcall
mov
pop
test
mov
out
jmp
fstl
lcall
cmp
sti
imul
in
test
or
mov
dec
aas
mov
push
daa
xchg
ljmp
push
dec
dec
movsb
fnstsw
gs
mov
sbb
std
es
in
in
sub
stc
push
shl
or
outsl
or
mov
repz
cltd
popf
sbb
in
jp
jo
jp
ljmp
jmp
hlt
bound
push
arpl
sbb
mov
ljmp
loopne
add
jnp
cvtdq2ps
std
movsb
mov
out
mov
inc
jge
ret
movsb
mov
scas
mov
cmc
leave
add
and
loope
fldcw
and
push
addr16
in
shr
imul
or
xchg
enter
test
imul
test
pop
shl
mov
mov
sbb
fidivrs
mov
mov
or
cmp
mov
and
test
std
ror
pop
inc
xchg
jecxz
sub
std
std
test
je
test
push
jns
dec
mov
rorl
adc
pushl
aam
popf
push
test
and
sbbb
mov
stos
jbe
xchg
fnsave
mov
dec
mov
gs
push
mov
aaa
cmp
loopne
pop
call
cli
mov
js
in
add
arpl
aad
cs
lcall
mov
sub
insl
inc
and
imul
mov
sub
sub
loopne
iret
test
dec
leave
jb
insb
push
mov
andl
mov
addr16
andb
mov
and
insb
mov
jge
rol
add
in
lea
mov
inc
insb
jmp
jge
loope
pop
data16
xlat
loopne
mov
inc
shll
mov
push
fldcw
in
js
cmp
or
or
mov
pop
lock
rcr
in
movsb
mov
incb
stos
ljmp
arpl
mov
jecxz
shll
or
pop
stc
lret
sub
mov
jg
cmp
stc
xlat
ret
or
xor
loope
inc
adc
in
sbb
jecxz
icebp
adc
and
ficompl
mov
cltd
add
sbb
xor
shll
lea
cs
test
and
mov
out
ds
lods
dec
xor
xor
adc
mov
cltd
sbb
dec
out
adc
mov
cmp
jns
test
xor
mov
push
sahf
fwait
push
xchg
outsb
mov
roll
les
stos
xor
jo
aad
adc
aas
gs
dec
ret
mov
mov
add
jae
stc
enter
xor
andb
roll
cmpsl
adcl
mov
sub
aad
push
aas
xchg
js
enter
sub
lods
xor
adc
fists
popa
jno
push
loope
enter
cmpsl
pop
mov
xchg
into
jno
scas
cltd
enter
icebp
fldenv
xlat
jecxz
imul
pop
mov
enter
pop
mov
xchg
fsubs
fs
and
repnz
arpl
aaa
mov
sbb
fildll
xchg
mov
cltd
shlb
call
arpl
cmpsl
dec
pop
inc
fdivrs
xor
popf
and
fcoms
or
or
daa
int
mov
jg
ljmp
flds
jmp
jo
mov
or
dec
xchg
inc
testb
leave
addr16
addr16
rorl
cmovg
lcall
xlat
out
in
out
mov
mov
shll
ljmp
sub
inc
cmpsl
inc
rcrb
push
pop
mov
adc
push
out
push
mov
cmp
ss
repz
cwtl
mov
xor
sbbl
xchg
lea
jg
rcr
add
add
lret
or
dec
lds
jp
addl
and
stos
jg
inc
mov
nop
push
inc
cmpsb
xchg
shr
aad
rol
repnz
mov
and
ficomps
fdivr
lds
inc
lea
or
test
scas
xchg
inc
jp
add
sbb
rorb
aad
ret
xchg
lea
mov
mov
mov
and
cmpsl
test
jmp
xchg
and
icebp
cmpsb
frstor
shlb
xor
scas
cltd
pop
repnz
jae
int
inc
test
xor
repnz
mov
lcall
test
ret
or
xor
push
cmpsl
loopne
test
leave
ljmp
pop
movsb
pusha
aam
aad
in
add
test
cld
xchg
fs
inc
jge
xchg
jg
test
jnp
mov
addr16
in
fistps
out
fucompp
push
cltd
rclb
leave
add
mov
jae
loopne
gs
fs
daa
testb
or
loop
notb
sub
ss
mov
adcb
mov
in
add
jle
rorb
xchg
push
jmp
pop
jmp
sarl
pop
xor
push
and
sarb
push
pop
scas
out
push
pop
jle
les
jb
xchg
pop
in
mov
dec
push
lcall
je
inc
push
fwait
enter
mov
sti
aam
xor
mov
scas
jmp
imul
inc
or
loopne
pop
jecxz
mov
test
fwait
mov
test
mov
or
mov
mov
mov
sti
push
sbb
xlat
arpl
lret
and
xchg
pop
xor
fadds
iret
push
and
imul
bound
inc
mov
ret
mov
js
fsts
and
cmp
xor
and
mov
jmp
ljmp
pop
xor
push
aad
mov
stc
loopne
add
cmp
sbb
sbb
adc
arpl
adc
cltd
les
xchg
add
imul
xchg
jge
and
add
jns
jg
enter
add
dec
out
das
add
or
rolb
in
add
fld1
lret
gs
inc
out
in
test
test
xor
pop
and
xchg
pop
inc
sbb
idivl
pop
daa
pop
mov
shrb
cmp
fs
stc
popa
push
sbb
decb
fs
loopne
sbb
pop
aam
jle
sahf
pop
gs
les
xchg
add
ret
jecxz
cmp
es
addr16
pop
dec
in
flds
and
out
nop
outsb
or
mov
shl
inc
int3
movsl
jbe
jmp
push
lcall
jmp
cltd
out
mov
imul
dec
inc
cwtl
sub
pop
inc
add
roll
mov
mov
popf
aam
enter
out
sub
fnsave
test
mov
push
jle
cmp
cmp
inc
cmp
dec
push
fists
adcl
mov
adc
in
lds
dec
push
fistps
push
popf
divb
ret
call
jb
push
and
sbb
fcmovnu
mov
pop
js
inc
push
adc
jge
fstps
pop
dec
and
leave
std
and
es
xor
jge
push
adc
dec
arpl
enter
fwait
sbbb
cmp
jae
repz
out
push
bound
jo
stos
ret
mov
sub
and
inc
pop
jns
rorl
mov
sbb
push
push
in
test
loop
rcrl
xchg
test
movsl
daa
shll
out
cmpsb
sub
mov
push
pop
pop
xor
dec
jns
sarl
imul
call
xchg
out
cmp
sbb
push
sub
pop
dec
xor
imul
loope
int
leave
sbb
sar
fstp
test
jmp
test
lea
xchg
aaa
hlt
in
lahf
xor
sub
jae
xchg
mov
sbbl
leave
andl
ds
fnstcw
daa
jmp
clc
inc
jne
int
and
inc
out
mov
mov
sbb
bound
sbb
pop
aad
repnz
lea
pop
icebp
adc
sbb
out
call
cmp
loope
rcrb
paddusw
push
xor
cmp
out
pop
pop
jno,pt
fdivrs
outsl
pop
cmp
or
or
dec
dec
xchg
sbb
xchg
mov
jmp
push
mov
clc
aad
hlt
mov
pushf
mov
aam
xor
sub
shr
pop
xchg
pop
sub
mov
jecxz
fmull
pop
jne,pt
test
mov
ror
pop
sar
mov
test
rcl
imul
mov
imul
jmp
bound
add
jle
mov
int
push
gs
aaa
test
rclb
popa
mov
iret
addr16
pushf
sbb
jg
xchg
ret
inc
ret
cmpsb
xchg
ret
roll
inc
insb
push
mov
movsl
ja
cmp
xor
outsl
mov
push
negl
test
cltd
es
mov
fldenv
imul
out
xchg
add
lea
shlb
inc
cwtl
jne
jmp
call
jae
scas
lds
stos
int
lret
and
jno
fwait
dec
js
jg
js
outsl
cli
test
inc
test
xor
inc
out
cmp
stc
push
pop
xchg
or
inc
jae
jae
call
arpl
sub
pop
inc
mov
incb
ds
sbb
jne
xchg
mov
insl
push
lret
call
imul
add
xor
mov
add
sub
es
xorl
loopne
xchg
out
mov
ds
adc
sub
stos
xor
push
mov
mov
lods
cmp
fsubs
leave
push
in
mov
pushf
xchg
push
cmpsb
lock
dec
adc
push
dec
push
mov
fwait
lahf
jae
out
movsb
sbb
mov
les
inc
ret
and
stc
gs
addr16
pop
sahf
imul
loope
sub
incl
ficomps
out
or
pushf
mov
fistpll
inc
jge
popa
inc
dec
and
push
adc
je
cmp
test
xchg
push
jge
lock
add
or
push
adc
sub
xchg
repz
ljmp
test
popa
xlat
inc
pop
gs
aam
mov
outsl
pop
jg
imul
int
ss
fmull
cmp
aam
ss
mov
mov
pop
xchg
imul
add
imul
inc
in
ljmp
push
inc
cmp
jne
mov
leave
int
fcomp
ljmp
fmull
aaa
pop
sub
stc
mov
mov
mov
cmpsl
fsub
loope
mov
ret
in
sbb
fbld
xchg
push
aaa
pop
xor
jmp
ret
lret
jo
out
xchg
sub
pop
orb
mov
fs
mov
dec
loope
push
movl
pop
aad
and
fsubs
imul
mov
fs
jae
shlb
popa
stc
fsubrs
call
es
pop
aam
xor
mov
enter
lock
cmpsl
mull
popf
gs
xchg
enter
pop
jecxz
jb
push
fisubl
jbe
push
mov
and
ret
cmpsl
inc
pop
rcr
push
bnd
fucomip
popf
dec
pop
enter
pop
es
movl
enter
and
xlat
mov
mov
imul
daa
test
mov
imul
fiadds
cld
inc
shrb
std
mov
and
jo
mov
mov
aas
inc
sbb
test
int3
jmp
pop
outsl
cmp
iret
xor
test
sub
xor
shl
sub
je
mov
mov
inc
push
jmp
int
xor
das
imul
insl
xchg
xor
add
pop
and
data16
rorl
mov
push
jno
shll
mov
mov
inc
sbb
loopne
enter
jns
addl
inc
fwait
pop
es
xchg
add
fsubrl
fdivrp
ds
mov
outsb
addr16
or
jb
mov
es
inc
addr16
mov
jle
cltd
pop
gs
mov
fmull
mov
xor
and
loopne
ret
pop
lods
gs
push
dec
stc
fabs
leave
sarl
xchg
mov
pop
loop
dec
inc
cmp
sub
sbb
adc
add
icebp
jmp
enter
test
cwtl
loop
mov
pop
loop
dec
inc
cmp
sub
sbb
adc
add
lock
mov
mov
cmpsl
lahf
xchg
popl
addr16
push
dec
inc
loop
aaa
das
daa
pop
pop
sysret
std
call
into
lock
scas
cmpsb
sahf
xchg
mov
xchg
outsb
pop
push
dec
rolb
jecxz
push
push
cmp
or
pop
mov
fstp
shrb
cld
imul
cwtl
xchg
xchg
mov
bnd
xor
test
andb
cmpsl
mov
jp
inc
movsl
aad
jb
pop
mov
push
inc
fldpi
enter
cmp
mov
ds
sahf
jle
jmp
mov
jle
cltd
mov
inc
xchg
sbb
jno
imul
xlat
mov
push
sub
fiadds
sahf
ss
add
sub
sub
inc
clc
clc
sbb
jb
cli
loopne
dec
test
cmpsb
lock
aaa
push
scas
mov
sub
sub
insl
dec
pop
inc
movsb
call
js
cltd
sbb
aad
outsb
enter
test
negl
mov
and
ds
negl
inc
addr16
mov
cld
jle
push
popf
xor
enter
shl
sub
andb
lods
and
sbb
iret
sbb
fcoml
test
pop
xchg
mov
ds
and
sub
jmp
jb
movsb
out
cltd
inc
int3
push
adc
scas
repz
push
outsb
sbb
das
int
lods
adc
subl
enter
add
adc
inc
filds
loop
test
jo
push
push
mov
cmpsl
inc
arpl
int3
mov
mov
jg
fwait
and
pop
and
mov
jae
cltd
fucomp
cmpsb
jmp
sub
jo
fstl
push
push
mov
inc
data16
cmp
fwait
movsb
js
imul
fimuls
jmp
push
or
lods
scas
int
aad
in
or
cs
shlb
sub
pop
sub
aam
ss
into
fnsave
xchg
dec
push
pop
test
in
out
out
aaa
jnp
xor
push
mov
sti
enter
pusha
and
and
popa
xchg
out
outsb
push
loopne
lods
push
mov
or
sbb
rcrb
jg
les
inc
cs
andb
xchg
mov
sub
loopne
sbb
and
dec
out
dec
dec
mov
pop
ds
adc
stos
pop
push
mov
jno
out
xchg
inc
or
pop
pop
push
sbb
mov
ret
dec
and
aaa
adc
movl
or
movsb
mov
pop
xor
pop
data16
arpl
movb
roll
jg
xchg
push
xor
mov
aaa
xchg
and
fsubrs
xchg
test
pushl
fldenv
add
iret
scas
mov
cs
bound
test
pop
les
jmp
jmp
jmp
mull
scas
imul
mov
loope
adc
call
int3
or
nop
cmpsb
cmp
fld
jo
push
jle
repnz
fsqrt
rcr
pop
fptan
aas
loop
fldenv
gs
loope
loope
push
xor
insl
pop
lock
popf
pop
js
jmp
loop
xchg
lea
loop
push
dec
inc
cmp
sbb
cmc
in
in
int3
les
xchg
mov
pop
push
dec
inc
cmp
sub
loop
adc
add
hlt
in
in
fcmovnbe
lret
ret
mov
fwait
xchg
mov
loop
push
dec
inc
cmp
sub
loop
adc
add
repz
loop
ror
ret
stos
mov
cmpb
pop
push
dec
inc
cmp
sub
loope
adc
add
repnz
sub
pushf
pop
out
out
out
pushf
mov
mov
rcrb
pop
jle
js
mov
imul
lret
jmp
push
inc
icebp
addr16
fbld
rol
jecxz
nop
outsb
mov
xchg
dec
push
inc
inc
int
ds
inc
mov
imul
movsl
imul
sahf
movl
mov
add
fistps
leave
daa
imul
pop
pop
push
leave
call
cmpsl
dec
icebp
adc
xchg
cmpsb
mov
cltd
test
mov
das
mov
inc
ds
jg
inc
jbe
dec
dec
ds
sub
push
jmp
push
inc
das
and
out
dec
xor
cmpsl
sub
outsl
xchg
jecxz
lahf
xor
pop
arpl
incb
pop
mov
ds
scas
or
scas
cmc
xlat
and
aas
dec
loope
push
push
pop
js
xchg
aad
popf
pop
gs
dec
dec
aas
adc
aas
test
add
enter
pop
push
int3
test
sbb
data16
ljmp
mov
je
call
ja
sub
sbb
mov
inc
inc
subl
add
in
daa
mov
sub
dec
pop
jmp
mov
sub
mov
mov
insb
push
movsb
jb
aas
data16
scas
cli
out
not
push
dec
in
xlat
inc
fnstenv
iret
xchg
jg
xchg
roll
pop
pop
in
or
fbstp
mov
add
cltd
fcoml
push
in
loope
fmul
or
ljmp
or
pop
push
cmpsl
repz
pop
enter
ja
movsl
xor
pop
jnp
shrl
and
sub
jns
mov
test
mov
sub
loop
popf
inc
xchg
ret
lahf
pop
mov
add
xchg
or
sbb
mov
ret
rcrl
jge
mov
test
jle
cmpsb
inc
inc
sub
les
sahf
js
data16
dec
popf
jecxz
popa
add
dec
pop
lds
imul
psubsw
inc
shl
popa
shlb
jmp
popa
sahf
push
pop
iret
inc
cmp
das
cld
out
cwtl
pop
pop
orl
cmp
push
and
mov
add
idivl
add
add
and
arpl
and
inc
call
scas
push
sub
xchg
jmp
mov
sub
cmp
fstp
scas
mov
movsl
push
jmp
mov
and
adc
pop
xchg
fidivrl
icebp
xchg
std
jmp
out
cmpl
mov
and
xchg
jmp
out
jl
iret
jnp
sbb
lcall
in
es
icebp
mov
inc
mov
icebp
sub
mov
daa
and
andl
test
imul
call
add
ficomps
lret
inc
int3
fucomip
mov
test
pushf
loope
mov
add
out
leave
das
sahf
push
iret
fldenv
jg
addr16
push
neg
jne
clc
in
adc
lret
mov
leave
aaa
pop
test
push
xchg
inc
loope
xor
mov
push
jg
jle
js
mov
pop
inc
jno
into
mov
lcall
dec
mov
fdivrl
repnz
pop
jbe
imulb
mov
lahf
bound
out
push
sbb
aas
jbe
stos
push
mov
dec
cmpsl
ret
xor
arpl
push
dec
inc
adc
iret
inc
sbb
ja
xchg
inc
rcrb
shl
arpl
xchg
insl
add
push
or
sub
notl
lds
je
inc
xchg
xlat
inc
leave
movsb
xchg
icebp
mulb
xchg
mov
int
subb
jo
lret
and
lods
fidivrl
xchg
roll
flds
sub
push
rcrl
push
cli
in
ret
cs
mov
xchg
out
adc
dec
cmp
fsubrs
loope
cli
mov
push
data16
push
and
enter
mull
jecxz
hlt
jg
pop
scas
fidivl
rcr
fisubs
fldenv
rcrl
rcrl
loopne
inc
sbb
mov
jmp
ffreep
xor
push
dec
xor
or
test
inc
sub
lret
push
or
xchg
in
mov
enter
xor
xchg
andb
push
add
test
mov
mov
lahf
jns
mov
fildll
mov
push
fmuls
pop
in
push
and
jp
cmp
std
pop
cwtl
jns
in
or
or
sbb
outsb
loopne
das
cmpsl
push
sub
rorl
pop
push
xor
test
sub
xchg
mov
outsl
test
arpl
push
mov
xchg
xor
sub
jae
loopne
outsb
mov
fisttps
pushfw
dec
lock
movzbl
push
mov
fistps
rcll
outsl
mov
dec
shll
dec
pop
xchg
push
icebp
pop
xor
mov
fbstp
std
mov
lret
mov
pushf
or
pop
jno
loopne
mov
cmpsl
push
sbb
int
gs
mov
idivb
jmp
out
cmpsb
js
bound
xchg
sbb
fisttps
ret
sbb
cwtl
xchg
imul
outsl
mov
scas
leave
rcr
test
inc
mov
mov
dec
xlat
stc
pusha
iret
jg
cwtl
pop
pop
fmul
add
cmp
push
mov
pop
and
xchg
enter
fcmovnbe
pop
mov
sbb
lcall
mov
or
xor
fists
jne
push
cld
movsb
gs
push
daa
loopne
fsubs
jmp
and
test
mov
stc
adc
fimull
mov
xor
in
pop
and
cmpsl
in
cmp
orl
fmul
movw
fmuls
mov
xchg
push
cmp
fldcw
xchg
popf
pop
jg
fldcw
loopne
inc
xchg
jne
iret
mov
sub
pop
out
sbb
jle
jmp
xchg
push
test
sbb
fldl
scas
int
lds
dec
cmc
imul
sub
in
sbb
push
inc
cmpsl
mov
jmp
test
jo
sbb
enter
mov
add
test
or
out
shlb
scas
ljmp
ret
stos
jno
das
mov
in
sub
push
icebp
jmp
jmp
jbe
imul
lds
xlat
jmp
mov
sbb
leave
xchg
les
aas
in
fxch
test
out
push
inc
loopne
mov
fdivrl
add
call
lods
int3
adc
repnz
sub
xor
imul
fwait
sbb
mov
sbb
cwtl
fcompl
adc
mov
in
or
and
jecxz
dec
pusha
negb
aad
mov
inc
inc
iret
int3
xor
mov
imul
and
loopne
test
in
push
sub
sub
cld
sahf
test
push
mov
popa
mov
data16
popa
pop
dec
fcomps
bound
sub
enter
pop
sbb
mov
adc
mov
stc
enter
pop
cmpsl
fsubr
or
fsubrs
ror
es
cmpsb
push
popf
daa
pop
push
enter
pop
fsubr
mov
push
lcall
rcll
loop
call
enter
pop
or
sub
pop
fsubr
and
and
and
enter
pop
in
add
and
popf
fs
test
movsb
cmpsl
les
fadds
out
es
enter
pop
xchg
call
mov
enter
mov
movl
xchg
xchg
aas
dec
out
loope
pop
leave
mov
push
sub
or
rcl
out
gs
pop
sub
imul
inc
addr16
call
scas
out
ja
cmp
mov
enter
mov
sub
dec
shlb
push
dec
dec
sbb
pop
cmpsl
cs
xor
push
popf
imul
test
and
loope
les
pop
gs
fcoms
mov
test
inc
sbb
fld1
mov
mov
test
daa
addr16
xlat
jno
enter
test
addr16
loop
in
fwait
adc
lds
jp
jae
rorl
jecxz
cmc
loop
xchg
movsb
jl
std
sahf
and
cli
sarb
mov
loop
xor
shll
insb
cmc
out
in
in
jp
fstpl
imul
cmc
in
cmp
es
in
mov
test
lcall
add
mov
mov
jge
jno
jecxz
xlat
out
jne
sbb
loop
mov
xchg
pop
iret
fdivl
push
mov
mov
xchg
and
mov
mov
xchg
push
cmp
subl
in
lret
addl
mov
ss
cmpsl
jg
xlat
loop
lods
dec
and
inc
and
clc
jp
adc
incl
mov
push
pop
ljmp
in
mov
pop
cli
lea
call
sbb
or
mov
clc
aam
out
out
xchg
xchg
fsts
ret
sarb
or
or
loope
lock
roll
sub
data16
and
pop
adc
outsl
sarl
jbe
int
jecxz
dec
mov
mov
sub
pop
and
jno
lds
lods
jb
call
xchg
xor
mov
loop
add
push
mov
xor
jae
lds
orl
jg
ret
hlt
inc
cmp
in
adc
icebp
jnp
insl
adc
adc
and
imul
enter
add
adc
fimuls
pop
fcomi
pop
dec
jno
pop
or
out
jb
jge
shl
push
mov
cmpsl
or
out
movsb
cwtl
incb
push
mov
sti
loop
clc
into
push
mov
cs
pop
fldl
and
push
into
ror
in
or
loopne
pop
sub
scas
sub
sub
add
mov
lret
shl
mov
mov
sbb
sbb
shl
pop
jb
gs
and
or
shlb
push
in
pop
sub
into
rcrb
outsl
dec
je
push
mov
insl
pop
leave
in
sar
loop
mov
movsl
pop
loop
pop
or
addr16
sub
cli
out
insb
mov
pop
repz
jae
push
mov
aaa
outsb
imul
xchg
pop
jecxz
sub
ds
leave
add
out
movsl
fldenv
cld
mov
daa
sub
add
or
inc
pop
or
ss
sbb
into
cmpsb
test
inc
cmpb
sub
xor
adc
sarl
pusha
fsubr
xchg
dec
jbe
mov
sub
aaa
mov
mov
js
arpl
subl
and
aam
xlat
ja
push
les
arpl
mov
inc
push
mov
xor
and
int3
subb
out
int3
sbb
fdiv
lret
mov
roll
jmp
in
lods
repnz
pop
mov
loop
ds
fistps
aad
jne
fiadds
jo
add
aam
cmp
dec
sub
fdivr
cmp
pushf
or
mov
pop
cld
fucomip
daa
mov
mov
data16
test
inc
mov
rep
lret
lret
dec
pusha
aam
fs
hlt
dec
and
pop
mov
popa
mov
pop
inc
es
add
and
and
sbb
adc
jns
dec
jge
mov
imul
inc
insl
dec
add
fnstcw
add
sub
and
movups
or
add
jns
sub
imul
outsl
and
jmp
push
int3
test
adc
sbb
and
and
sbb
adc
ret
mov
sub
or
jmp
add
add
add
add
add
add
add
daa
add
add
add
inc
add
add
add
and
loope
or
sub
add
dec
mov
and
ret
addl
add
out
push
cmpb
mov
sub
fisttpll
inc
or
in
xchg
xor
cmp
cmp
sbb
adc
clc
or
sub
push
xlat
xor
sti
jne
imul
or
sub
imul
shrb
dec
imul
imul
imul
imul
imul
jne
dec
imul
movsb
imul
xchg
imul
imul
and
or
xor
inc
sbb
ret
out
dec
in
mov
leave
push
pushf
adc
pop
js
ljmp
lea
imul
dec
adc
lock
jbe
arpl
mov
call
int3
fimull
pop
mov
xchg
and
dec
mov
lret
xor
jae
dec
and
pop
andnps
push
or
fldt
mov
mov
fistpll
loopne
or
sbb
push
lock
add
sbb
cmpsl
lcall
mov
test
push
sbb
and
pop
push
rolb
ss
cmp
or
push
pusha
std
int
popf
cmc
jl
mov
jp
test
push
add
push
lret
sbb
jns
call
jne
imul
iret
icebp
sub
dec
cmc
lret
jnp
sub
ja
jne
fwait
and
adc
inc
pop
stos
adc
jg
repz
lahf
and
sbb
sbb
stos
sbb
sbb
rorl
dec
inc
sbb
shrb
es
add
iret
imulb
aas
not
daa
xchg
testb
je
pop
divb
push
push
add
cmc
aad
cmc
in
xor
add
int
or
lret
fnsave
icebp
fwait
rcrb
xor
scas
lcall
add
add
add
add
cld
add
add
add
add
cli
nop
les
xor
ja
jne
imul
outsl
jmp
imul
mov
imul
lods
imul
mov
lret
add
dec
pop
int3
sahf
dec
push
lret
testb
in
ja
cli
pop
fwait
stc
pop
xlat
sbb
aad
aam
pushf
add
ret
cmpb
mov
in
fstl
mov
mov
negb
dec
std
add
cmc
mov
clc
add
add
cmc
gs
adc
in
ljmp
xor
mov
push
cmpsb
push
and
adc
or
shr
sbb
jge
mov
cmp
adc
inc
jecxz
dec
sbb
ret
jo
es
xlat
push
div
mulb
idivb
testb
sbb
adc
adc
scas
adc
cs
int
lods
add
add
gs
mov
xchg
pop
push
pop
push
int3
pop
pop
jecxz
lock
jns
clc
mov
imul
push
outsl
mov
test
fdivp
fst
xchg
movw
pusha
sbb
inc
ss
push
xchg
notb
lods
mov
scas
das
scas
jbe
dec
lods
xchg
in
xor
pop
dec
and
out
ss
es
push
sub
mov
jmp
inc
fwait
sub
arpl
faddl
out
pop
jns
push
aam
scas
inc
scas
ljmp
mov
ret
fwait
dec
dec
dec
mov
cltd
pop
ffreep
mov
cmp
push
test
dec
xchg
std
incb
insl
cmc
xchg
stc
push
in
adc
pop
in
xchg
lods
mov
mov
scas
shrb
aad
dec
stos
xor
lods
xchg
mov
imul
std
push
stos
xchg
xor
sub
or
imul
push
sub
add
clc
push
leave
inc
xorb
es
inc
es
add
add
testb
test
mov
aad
pop
push
mov
test
and
cli
out
push
jmp
fwait
sub
dec
daa
enter
mov
fldenv
out
in
test
pop
scas
cld
scas
mov
sbb
mov
or
inc
push
loope
cltd
fwait
push
pop
loopne
ss
xor
lahf
std
aam
mov
jecxz
sbb
inc
arpl
push
add
std
mov
fbstp
lock
lock
lock
lock
lock
in
sti
lock
lock
lock
clc
xchg
ja
xchg
mov
fistpll
dec
jg
div
into
pop
sahf
push
mov
imul
or
popa
push
mov
inc
jbe
ss
and
lcall
inc
scas
ss
xchg
test
or
outsl
sub
stos
outsl
arpl
imul
and
fimull
and
inc
add
sbb
or
add
enter
mov
mov
mov
ret
in
push
ret
jnp
cmp
inc
pop
xchg
add
roll
rorb
dec
add
ret
int
or
pop
dec
ret
lret
add
inc
jle
hlt
lcall
lock
pop
andb
sbb
roll
fwait
notb
pop
mov
popf
fiaddl
lock
jns
and
ja
jne
imul
jmp
test
adc
js
gs
stos
in
cmp
int
push
lret
sub
inc
shl
aam
fwait
cltd
fwait
lcall
xchg
ss
js
jne
mov
fildl
mov
inc
or
fstps
std
xchg
mov
push
and
rcr
in
lds
mov
xor
in
movsl
les
mov
push
mov
fcmovb
mov
xor
jne
imul
lahf
jle
bound
xabort
inc
xchg
cmp
and
mov
mov
push
inc
les
or
add
jge
cmpsb
pop
or
andl
adc
enter
cmpsl
jno
xlat
sub
xchg
repz
pop
dec
mov
adcb
fnsave
jmp
push
or
std
xor
or
jmp
icebp
dec
in
pop
in
and
in
in
movsb
xor
fwait
repnz
cltd
imul
int3
add
imul
or
adcb
sub
or
dec
cmpsl
rolb
hlt
les
movsb
add
dec
std
loopne
lock
lahf
stc
push
in
push
push
in
push
in
out
in
cmp
mov
jne
imul
mov
imul
jno
inc
popf
shrb
xchg
ret
ret
cmp
push
bound
sub
stc
mov
push
inc
call
and
test
adc
das
rolb
mov
out
mov
inc
bound
inc
mulb
lds
push
lahf
sub
lods
js
push
in
cmp
or
in
in
and
jecxz
jno
push
rorl
sub
and
or
add
sub
lock
cmp
sahf
push
js
gs
xchg
jns
mov
fcmovnu
push
or
and
sbbl
add
jg
pop
mov
adc
pop
jne
cwtl
lock
dec
fsubrs
or
in
dec
lret
lret
mov
dec
dec
dec
sub
pop
test
rolb
icebp
in
push
pop
lds
mov
sbb
test
daa
call
jne
pop
ja
jne
imul
sbb
mov
dec
ret
pop
test
std
es
inc
outsl
js
outsl
inc
insl
and
push
mov
jne
imul
shlb
push
lcallw
arpl
bound
add
sub
fwait
daa
pop
es
mov
and
and
sub
stc
pop
stc
and
addr16
mov
pop
and
mov
cmpsl
roll
arpl
ja
xchg
mov
and
lock
lock
stos
add
in
ret
jecxz
addl
add
add
add
add
mov
mov
mov
fld
add
ja
jno
inc
push
imul
xchg
inc
test
jne
imul
les
test
stos
and
add
adc
dec
mov
push
inc
lahf
ret
add
lds
ret
movsl
sbb
sbb
clc
sub
or
jmp
lock
push
mov
stos
inc
stos
daa
stos
pop
stos
out
mov
cmpsb
stos
xchg
je
and
data16
cli
xor
jg
push
mov
sbb
mov
mov
pop
sbb
adc
adcl
fmull
hlt
pop
rol
jmp
or
add
xorb
pop
out
ret
repz
xlat
pop
mov
inc
add
dec
cmpl
ret
cmp
in
fsubl
push
bnd
and
lods
pop
int3
test
sub
mov
inc
and
add
mov
adc
and
imul
mov
ret
ret
mov
rorl
pop
jecxz
jl
imul
movsb
stos
rorl
or
clc
push
add
cmpsb
lods
sbb
sbb
pop
mov
cmp
enter
sti
xchg
dec
cwtl
insl
xchg
inc
outsb
mov
xorb
iret
cltd
xlat
jbe
push
jb
std
ljmp
push
js
repnz
imull
fidivrs
jo
cmp
fwait
insl
push
pop
ds
iret
out
push
xchg
or
repz
sbb
int
push
dec
dec
popf
inc
and
sahf
test
not
out
add
or
fsubrl
imul
mov
inc
cs
push
fistps
pop
push
leave
pusha
or
push
xchg
fnstcw
ljmp
push
push
dec
mov
dec
addr16
stos
in
lret
inc
pop
jle
mov
inc
cmp
push
cmp
andl
mov
test
push
insb
pop
sbbl
gs
sbb
js
scas
test
lods
dec
inc
iret
mov
push
and
leave
or
outsl
jmp
sub
push
mov
mov
adc
sbb
fdivs
mov
mov
ljmp
lahf
cwtl
or
push
cwtl
xlat
push
sbb
push
xchg
jle
fcom
xchg
lcall
loopne
lds
push
addr16
ss
sbb
gs
cmp
push
sbb
jb
adc
sub
aaa
jg
mov
outsb
inc
ret
mov
dec
or
inc
lock
push
leave
cmp
lds
fwait
mov
imul
jo
rcrb
pusha
mov
into
adc
inc
dec
cmp
mov
andb
sub
mov
lret
jo
inc
imul
lret
add
inc
xchg
dec
cmc
icebp
out
scas
cli
push
fcom
and
enter
jbe
cmp
sbb
push
inc
int
mov
cmp
arpl
inc
fistpll
inc
cmpsb
mov
and
pop
cmp
adc
add
nop
iret
and
xchg
xlat
jo
fistps
int3
pop
clc
pop
xlat
call
inc
aad
fiadds
inc
call
pop
dec
adc
clc
lods
dec
xor
scas
inc
and
xor
adc
arpl
jmp
mov
fcoms
push
sub
pop
xchg
sbb
dec
inc
sbb
push
mov
dec
into
ds
push
enter
clc
pop
mov
data16
pop
dec
push
jno
icebp
test
jnp
cmp
faddl
mov
mov
dec
dec
test
scas
dec
mov
inc
imul
cmp
lret
jns
arpl
push
sbb
je
js
rcl
notl
mov
les
lahf
dec
add
pop
sarb
lds
in
sub
lahf
pop
outsb
push
push
rorl
jo
adc
scas
fs
loopne
push
aaa
aam
sti
movsl
stos
sub
mov
xchg
xor
jmp
addr16
xlat
outsb
nop
mov
cmpsl
fldenv
ficomps
cmpsl
insl
int
push
xor
xchg
push
sbb
push
jl
inc
adc
pop
scas
pop
mov
faddl
mov
clc
xchg
in
stos
pushf
xchg
sahf
imul
ret
bound
dec
in
sbb
pop
out
mov
jbe
lock
es
mov
les
filds
dec
hlt
add
addr16
jbe
sub
addb
shlb
push
dec
jae
jp
popl
rcrb
mov
aas
xchg
dec
mov
movsb
divb
push
dec
mull
idivl
cltd
cvtps2pd
loopne
cltd
cwtl
mov
jb
fsubs
jbe
cmpsb
movsl
movsl
or
push
fcoms
mov
mov
dec
mov
jae
push
loopne
jb
testb
cltd
jmp
and
sbb
sub
inc
cmc
and
mov
das
mov
mov
dec
mov
cltd
insb
mov
xchg
gs
push
push
xchg
movsb
xlat
mov
rcrl
test
ds
push
mov
inc
call
inc
fdivl
fisubl
shlb
sti
pop
mov
jmp
aaa
mov
push
pop
jge
mov
sahf
cmp
jmp
dec
gs
dec
jmp
xchg
jle
jo
adc
mov
sbb
mov
jp
inc
ret
outsb
and
les
pop
inc
dec
sub
push
call
push
sbb
dec
mov
leave
push
push
lods
hlt
testl
jo
mull
cmpb
pop
jmp
push
fldcw
sbb
in
push
xor
ret
pusha
push
dec
test
pop
scas
inc
mov
lods
pop
adc
pushfw
pusha
sbb
add
xchg
adc
fsubrs
sbb
pop
cmp
mov
push
adc
fnstsw
add
in
mov
mov
jg
adc
xchg
fwait
roll
push
cmpsl
sub
jo
adc
sub
fmuls
mov
iret
or
jns
adc
sub
xchg
and
sub
pusha
pop
and
aas
rcrb
sbb
dec
gs
das
push
cmp
imul
in
outsb
add
mov
mov
cmpl
repnz
in
pusha
push
into
nop
push
push
mov
pop
sbb
fcoms
jne
xchg
push
les
inc
dec
sub
mov
cmpsl
cmpsb
add
mov
lods
cltd
adc
testl
cmpsl
mov
mov
cmp
mov
repnz
jmp
mov
inc
mov
jmp
imul
fdivrs
fstpl
sub
mov
imul
mov
jns
test
fldl
aaa
arpl
pop
add
and
inc
or
test
mov
leave
fnstcw
xchg
enter
test
aas
inc
mov
popf
ja
dec
xlat
ret
loopne
xchg
mov
mov
push
push
decl
jmp
cmp
pop
cltd
leave
mov
js
clc
cmpsb
jl
ljmp
xor
and
test
leave
jno
orb
add
ds
and
cmpsb
stc
mov
popf
pop
roll
xchg
movsb
cmpsb
and
sbb
fdivs
xor
insl
popf
jnp
jg
lea
ds
xchg
pop
lea
cltd
pop
test
arpl
inc
jnp
xor
xchg
xor
mov
mov
ljmp
add
dec
mov
repz
rclb
mov
cmpsb
adc
pop
scas
cmp
mov
fisttps
insl
jae
stc
pop
push
iret
fadds
fisubs
dec
xchg
push
stos
nop
add
ficomps
sub
ljmp
mov
fstpl
int
inc
cltd
mov
push
int3
xor
sbb
pusha
out
xlat
push
shr
xchg
xor
xchg
test
cmp
scas
fcoms
cs
mov
enter
outsb
jle
jo
fsubl
repz
test
jmp
pop
cmpsl
or
xor
js
out
sbb
adc
rcrl
sub
jne
jg
mov
adc
into
test
aaa
mov
outsl
sbb
xor
dec
clc
pop
sbb
outsl
jmp
sub
xchg
push
mov
adc
cwtl
push
mov
test
dec
stos
adc
arpl
pop
or
ja
cmpb
lcall
xchg
cltd
jo
cmpsl
fildll
ret
mov
aam
pop
aam
cld
test
cli
inc
or
ljmp
pop
xor
imul
sub
sahf
mov
cmp
lds
add
push
outsl
jmp
fcoms
out
es
inc
sub
lret
js
xor
bswap
dec
inc
cmp
jmp
shlb
cmpsb
push
cmp
xor
mov
cltd
jmp
dec
mov
inc
scas
xchg
icebp
xchg
and
outsl
mov
pop
ret
stos
xchg
pop
sti
dec
je
mov
jae
mov
cmp
xor
mov
xchg
jo
mov
inc
js
jge
cmpb
pop
push
ja
mov
or
inc
movsb
pushf
xchg
jge
fiadds
int3
imulb
dec
jle,pt
call
add
inc
add
sub
xchg
stc
testb
or
nop
push
inc
pop
cmpsb
insb
add
push
and
insl
xor
mov
sub
icebp
dec
mov
loopne
test
xchg
das
jecxz
push
ds
pushf
mov
fstps
fsubs
sub
sahf
mov
mov
cmp
movsb
inc
pop
inc
pop
enter
scas
push
imul
dec
mov
fcomp
movsl
jg
orb
scas
push
addr16
gs
push
dec
dec
and
add
jmp
hlt
jg
dec
mov
mov
pusha
push
stos
negl
cmp
mov
jmp
xor
leave
hlt
inc
pop
stos
xor
pushf
add
ss
into
xor
pop
jmp
and
mov
ret
xchg
insl
insb
shrb
cli
adc
aad
dec
lds
movsl
cmpsb
jg
lods
mov
aad
ds
pop
mov
adc
sarl
jmp
mov
sub
cmp
fsubrl
push
in
pusha
mov
sub
lock
ljmp
push
push
lahf
fldcw
je
adc
jg
adc
ret
pop
push
xor
dec
pusha
inc
sub
dec
stc
int3
add
xor
inc
push
or
pop
or
aam
ja
jp
jbe
xlat
repz
fcoms
jmp
popa
pop
xor
inc
xlat
add
adc
inc
sub
dec
in
scas
enter
or
rorb
jle
cltd
repz
scas
sub
push
stos
pop
movsb
fdivrl
dec
or
dec
mov
mov
nop
push
sub
stc
xchg
gs
pop
mov
pop
push
xchg
mov
pop
adc
mov
jmp
pop
lcall
repz
pushf
xor
aas
lcall
sub
xchg
pusha
push
sbb
cmp
sub
rorb
add
imul
aaa
test
ljmp
imul
push
cmp
sbb
push
dec
xor
mov
cwtl
jo
fnstcw
inc
sbb
repz
push
or
jle
std
mov
sub
lds
mov
xor
iret
or
imul
cmp
in
push
std
inc
xchg
stos
mov
std
xchg
xor
out
dec
ja
sahf
std
xor
mov
pop
adc
cmp
hlt
test
inc
adc
or
jo
mov
cmpsl
das
mov
mov
push
js
cmp
xchg
pop
push
inc
inc
push
xor
pop
pop
jle
lar
jo
rcrb
sbb
mov
shlb
xchg
inc
and
mov
lret
push
aaa
dec
mov
pop
jg
or
pop
inc
mov
pushf
nop
dec
xchg
out
push
shrl
and
xchg
cmovbe
push
and
sbb
test
pop
inc
dec
and
js
mov
testb
mov
enter
addl
inc
push
enter
mov
pop
jae
inc
pop
cmp
std
or
shl
repnz
xor
pop
cmpl
dec
inc
pushf
shlb
jl
cmp
sub
adc
inc
test
dec
adc
dec
adc
pop
test
sub
leave
lods
js
lret
inc
ds
sub
insb
add
stos
push
cmp
pop
sub
add
repnz
subb
hlt
xchg
push
clc
cld
sub
mov
jge
lods
in
xor
outsb
fstps
xor
sbb
repz
dec
mov
mov
stos
arpl
imul
pop
pusha
xchg
mov
add
add
les
push
std
in
divl
daa
iret
jle
jmp
mov
sub
mov
or
inc
mov
jg
sub
ljmp
pop
lcall
fcomi
insl
lcall
xchg
and
cld
js
nop
pop
adc
pop
jnp
dec
mov
cmp
xor
pushf
and
inc
stos
in
les
add
mov
add
ja
cmp
sahf
enter
dec
or
cmp
xchg
dec
rorb
lea
sbb
cmpl
adc
stos
fstpl
and
xchg
rcrb
push
cmc
jne
dec
push
cmp
std
jg
rcrb
mov
rol
lcall
push
push
mov
mov
push
iret
bswap
rdpmc
sbb
and
mov
xor
mov
into
mov
sub
mov
inc
bound
xchg
lahf
outsl
lock
dec
daa
scas
das
shlb
call
or
fucomip
xchg
loope
mov
pop
xor
mov
gs
arpl
dec
adc
clc
jne
xor
dec
dec
fwait
dec
push
pop
mov
push
cs
je
lret
mov
dec
lods
xor
cltd
das
lahf
jl
jo
mov
rorb
jnp
test
xor
add
std
scas
and
cltd
sahf
push
inc
lahf
pop
inc
and
std
punpckhbw
inc
pop
mov
jl
mov
sub
ss
push
push
dec
std
jo
push
mov
repz
insb
push
repz
inc
popa
inc
or
outsb
shlb
xor
scas
pop
and
adc
aam
out
inc
or
shlb
pop
sbb
stc
fwait
and
das
mov
addr16
mov
jae
fwait
aam
cli
jo
test
jne
dec
inc
std
adc
and
pop
cmp
push
pop
dec
dec
rclb
mov
shlb
pusha
idivb
push
mov
dec
std
scas
mov
pop
dec
negl
xor
rorb
imul
dec
rorb
xchg
cmp
aam
push
out
pushf
test
cmp
push
sub
sub
pusha
cli
pusha
ljmp
es
cmpsl
push
sub
push
push
out
and
in
mov
inc
dec
les
dec
xor
sub
jp
mov
jmp
mov
lds
jae
test
imul
sahf
aaa
dec
mov
or
or
inc
aam
std
sbb
push
xor
xor
or
or
inc
lcall
xor
xchg
mov
notb
sub
mov
mov
out
cmc
mov
push
stos
dec
int3
into
sahf
push
fisttps
andb
sub
push
aaa
fwait
or
cmpsl
jo
cmc
sahf
pop
push
xchg
pop
push
mulps
cmp
loope
dec
shll
ret
aam
or
sub
aam
aas
stos
out
shl
cmp
movsl
jg
cmp
or
cmpsl
je
and
loopne
or
mov
xor
xchg
adc
push
xchg
aaa
sub
dec
shrb
sub
sbb
mov
std
pop
fistl
xor
xchg
push
std
dec
mov
adcb
pop
aas
inc
inc
jb
push
test
fisubl
sarl
mov
fwait
add
xchg
xchg
orb
push
sub
iret
push
dec
pop
xlat
adc
sahf
mov
push
mov
lea
mov
add
out
fnstcw
sahf
adc
ror
jbe
mov
sbb
cmpsl
cmp
push
lods
add
ss
cld
xchg
loop
xchg
decl
adc
xchg
xchg
repz
push
xchg
enter
mov
call
or
inc
aaa
xlat
shrl
cs
shll
aas
cmpsb
mov
mov
xchg
ds
xor
das
dec
xchg
int3
cmp
daa
mov
push
dec
into
cmp
stc
fsubp
xchg
push
mov
and
pop
cmpsl
jg
aaa
and
inc
ja
addl
ja
ficomps
dec
mov
pop
pop
ret
xchg
nop
inc
lods
shl
push
sub
mov
add
push
cs
es
xchg
inc
xchg
and
ja
jle
outsl
loop
mov
jmp
jns
xchg
sub
push
bound
out
push
pop
pusha
jg
aam
and
push
aas
or
cmpsb
or
mov
jb
inc
pop
rcll
cmp
ja,pn
sub
mov
shl
stc
xlat
mov
inc
data16
dec
push
jae
scas
add
xlat
iret
xchg
jg
and
loope
mov
mov
mov
xor
push
sub
in
add
ds
daa
cs
mov
fildll
into
lahf
xchg
sahf
out
pop
nop
cmpsl
das
inc
push
or
loop
dec
cmpsb
outsl
addr16
cmpsl
xor
data16
addr16
outsb
xchg
ss
loop
mov
sub
aaa
mov
pusha
movl
iret
pop
push
jo
movb
jmp
daa
inc
scas
loope
scas
pusha
xchg
pop
dec
push
ja
gs
xlat
inc
nop
dec
xchg
in
jle
cmpsl
dec
ficomps
ss
outsl
jg
inc
cmpsb
push
mov
push
xchg
push
pop
insw
pop
aaa
out
iret
jbe
push
push
mov
pop
mov
mov
mov
data16
addr16
mov
jno
jle
in
jo
sahf
aas
addb
daa
loope
jg
nop
pusha
pop
out
mov
push
push
add
iret
push
jns
push
aas
data16
out
sahf
orl
add
loopne
out
pop
sub
in
dec
cmpsl
mov
out
inc
enter
jno
outsl
dec
fstps
test
lahf
loopew
pusha
fisubs
cmp
jne
pop
jno
dec
pop
outsb
mov
das
mov
sti
enter
pushf
push
lods
shlb
jmp
add
das
movsb
je
cmpsb
out
pop
jns
dec
and
in
xchg
mov
das
mov
push
pop
jo
iret
mov
fiadds
in
push
lahf
es
loop
cmpsb
pop
jg
nop
rolb
push
enter
add
dec
cmpsl
dec
out
jo
into
cmpsl
xor
pop
pop
fisubrl
push
adc
clc
outsb
cld
dec
std
cmpsb
data16
es
jno
in
push
addr16
push
mov
ljmp
aas
push
pop
pop
mov
sub
pusha
cs
dec
mov
lahf
xchg
mov
clc
inc
pop
sbb
dec
daa
mov
mov
xchg
mov
je
inc
jns
pop
push
shll
lahf
sub
inc
stos
xchg
mov
pop
jbe
jle
sub
ds
in
xor
lahf
cmpsb
nop
xchg
lds
iret
jnp
mov
and
mov
mov
push
sahf
jg
pop
nop
cmp
jmp
stc
xchg
jle
negl
addr16
and
add
movsb
push
in
sarb
rclb
ss
xchg
mov
cwtl
push
out
dec
jno
cwtl
ss
mov
or
push
pusha
aas
sub
push
fbld
jle
aas
pop
jns
cmp
sub
jg
push
and
cmpsl
es
jo
push
addr16
push
mov
das
outsb
ja
popf
in
roll
jmp
dec
icebp
repnz
mov
jns
daa
imul
inc
lods
jnp
sub
outsb
xlat
adc
mov
into
push
push
jl
jmp
and
daa
jbe
call
sbb
iret
in
push
jnp
sub
nop
cmp
daa
cs
ss
ds
das
daa
scas
adc
xchg
es
jns
cmp
popf
jbe
loop
cmpsb
fisubs
ja
xchg
pop
fbld
es
mov
mov
push
lahf
sub
adc
test
jecxz
push
loopne
daa
imul
daa
jmp
mov
iret
imul
push
sub
xchg
push
ret
pop
inc
hlt
mov
mov
mov
out
aas
xchg
xchg
ss
sub
movsb
ds
xchg
push
xchg
sub
mov
xor
daa
push
or
or
sarl
popl
test
ja
out
pop
in
mov
es
ss
scas
outsl
push
mov
fisttpll
add
fs
sahf
inc
push
rcl
jns
push
outsl
outsb
dec
jno
aas
cmpsl
mov
mov
jecxz
ja
mov
lret
bound
scas
cmpsl
push
out
mov
push
inc
cmpsl
stos
push
push
jmp
into
inc
and
add
rcrl
inc
stc
leave
dec
push
sub
mov
mov
push
sbb
inc
add
pop
lods
fiadds
and
dec
mov
pop
pop
xor
cmp
mov
pop
sbb
repnz
es
jmp
sub
in
push
aas
aaa
push
pop
sub
fidivs
pop
mov
mov
inc
fcomip
loop
aas
mov
mov
cmpsb
scas
mov
call
push
xlat
outsl
pop
daa
iret
call
js
dec
mov
inc
mov
icebp
shl
lahf
scas
dec
mov
xchg
add
ss
cmp
shlb
fists
shll
outsl
lret
out
and
xlat
pop
dec
and
pop
ficomps
push
daa
pop
ljmp
pusha
pop
push
into
lret
inc
jbe
mov
sahf
mov
fisttps
dec
call
add
fists
sti
or
out
xlat
dec
sbb
leave
and
inc
push
sub
push
push
leave
jno
nop
mov
cmpsb
sub
scas
ret
sbb
cs
xchg
stc
xchg
icebp
inc
stos
into
mov
pop
addr16
shll
pop
mov
adc
pop
mov
mov
mov
xor
aas
mov
push
fnsave
cmpsl
repnz
in
or
sbb
cmpsl
mov
scas
nop
aaa
in
xor
pop
jbe
outsb
daa
xchg
or
stos
aas
inc
jle
add
cmpl
xchg
push
es
fs
call
cmp
sub
push
jbe
push
rcll
fmuls
out
push
xchg
mov
xchg
xchg
sbbl
sbb
clc
ja
pusha
fistpl
fidivs
fwait
xor
and
or
xchg
dec
lods
xor
in
push
pop
fcoml
mov
cmp
pop
scas
push
xchg
and
cmp
push
push
add
mov
mov
and
in
ficoms
divb
fwait
lahf
pop
lods
out
cmp
xchg
fiadds
xlat
gs
daa
jbe
adc
addr16
xchg
repz
loop
inc
lahf
push
pop
cmp
jle
dec
scas
pop
dec
loope
daa
and
outsl
adc
mov
outsb
jo
pop
lahf
insl
xor
or
test
mov
inc
mov
mov
push
test
push
fs
es
lock
xchg
pusha
pop
push
fnstenv
mov
fbld
jnp
jmp
push
jmp
in
es
push
inc
loope
pop
pop
jle
mov
push
cs
inc
xchg
fucomp
mov
mov
pop
jbe
scas
inc
addr16
aad
pop
jo
dec
and
push
lds
sbb
frstor
jle
scas
cs
cmp
xchg
pop
aaa
pop
shrl
out
xchg
iretw
cmp
jbe
inc
js
inc
xor
scas
dec
cli
sbb
sbb
push
push
pop
jecxz,pt
addr16
enter
rcrl
xchg
stos
push
ss
sarl
xor
inc
cmp
cltd
inc
dec
jae
in
fldenv
xlat
jo
xlat
xchg
mov
lahf
dec
dec
push
mov
daa
into
idivb
jmp
mov
jbe
jns
jl
data16
lea
push
insl
dec
push
dec
lcall
and
mov
aaa
nop
pop
es
xchg
loope
jg
fildll
jbe
mov
in
sbb
dec
into
nop
mov
jo
mov
add
inc
and
sub
loope
xchg
push
pop
ret
fcmovnu
inc
xchg
fimuls
nop
pop
in
pusha
mov
push
data16
imul
leave
ficoms
scas
jo
stos
dec
push
dec
push
sarl
shrl
rol
fnstcw
es
frstor
addr16
push
sub
es
inc
xchg
cmpsl
lds
xor
xor
outsl
jno
pusha
addr16
pop
ret
or
popf
clc
mov
push
fnstcw
and
and
stos
jmp
add
pop
xlat
dec
mov
rol
fs
lock
xchg
scas
inc
out
jo
daa
pop
add
mov
mov
iret
sub
fldlg2
mov
into
xor
sahf
gs
push
inc
mov
fists
and
pop
and
in
cmpsl
dec
inc
push
nop
adc
pop
cld
inc
imul
sarl
push
imul
jl
push
lods
push
outsb
dec
addr16
fsts
pop
scas
iret
dec
xlat
cs
xor
addr16
pop
daa
int
gs
xchg
js
ja
in
sbb
xor
dec
mov
jbe
xchg
imul
iret
addr16
cmp
outsb
sbb
mov
dec
jg
xchg
call
nop
sahf
sbb
lods
cmp
push
xchg
aas
mov
scas
pop
lahf
inc
xchg
fstpl
mov
jmp
jg
push
cs
scas
cmp
pop
das
es
outsl
ss
dec
fiadds
fs
pop
push
cmp
pusha
stos
mov
jle
sarl
and
daa
jecxz
mov
add
cmp
ljmp
jno
mov
push
mov
xor
mov
xchg
mov
mov
dec
mov
push
or
xchg
pop
pop
jbe
data16
outsl
and
fwait
sahf
fsubp
rcll
iret
pop
daa
xlat
push
mov
push
xchg
dec
jns
xchg
dec
loope
xchg
inc
xchg
in
fsts
pop
push
cmpsl
and
push
add
icebp
aaa
cmp
scas
xchg
lea
xchg
mov
outsl
scas
filds
sub
mov
sub
lret
clc
push
adc
lret
jne
cwtl
iret
pop
into
cli
out
shll
pop
mov
add
cmpb
cltd
ss
inc
sub
xchg
nop
mov
add
hlt
cmpsl
push
iret
cmp
inc
outsb
mov
aas
push
pop
sahf
xor
pushf
stc
mov
or
jae
xor
stos
add
sub
or
mov
jb
divb
sti
add
les
or
push
ja
call
iret
imul
push
push
and
leave
push
inc
scas
pop
outsl
mov
jle
insl
or
mov
sub
push
push
xor
sbb
in
pop
jmp
rcll
stos
enter
inc
jp
inc
pusha
outsl
int3
pop
fstpt
inc
ret
sub
add
dec
daa
pusha
jo
push
mov
ss
push
shl
mov
shrl
cmp
mov
das
jbe
xchg
push
out
cmp
mov
sub
sahf
daa
scas
pop
xchg
pop
das
xchg
pmulhuw
mov
push
cmpsl
adc
jns
inc
popf
ja
mov
fcmovnbe
push
in
add
pusha
add
cmp
scas
loop
iret
sahf
mov
aaa
and
jbe
xchg
ds
fcmovnu
imul
mov
lock
ja
ja
iret
mov
daa
mov
and
pop
test
pop
ljmp
ds
ja
shrb
push
scas
pusha
fstpl
xchg
fistl
cmpsl
cli
jle
cmpsl
arpl
add
addr16
cmp
fiadds
sbb
jge
mulb
push
xchg
and
mov
jecxz
iret
mov
sub
inc
lock
es
mov
push
fildll
mov
inc
jmp
mov
ljmp
pop
push
jbe
lods
pop
pop
sub
mov
mov
iret
push
push
outsb
inc
ja
stos
test
add
jne
mov
frstor
into
pop
and
rcrl
mov
xlat
shlb
and
cwtl
and
push
adc
mov
push
nop
dec
outsl
out
addr16
daa
push
inc
clc
ss
cmpsl
xchg
pop
in
jle
xchg
lods
test
mov
jno
push
xor
rcrl
push
in
xchg
dec
cmp
ss
push
cs
mov
xchg
cmp
sub
fsubs
cmpsb
cmpsl
iret
vpmacswd
inc
push
xor
sub
xchg
rcll
filds
fidivrl
push
xchg
cmp
push
daa
loop
xchg
cmpsl
inc
mov
nop
cmp
repz
sbb
push
fisubrl
xchg
pop
into
adc
aad
lret
dec
sub
out
daa
jo
mov
mov
cmc
xor
adcb
out
pusha
ds
faddp
jp
mov
and
scas
push
ja
shlb
push
push
shrl
push
jo
inc
dec
xor
rcl
xchg
sbb
push
push
cmp
bound
push
nop
cmpsl
pop
and
mov
xchg
mov
xor
xor
scas
ds
rorb
push
in
aaa
sub
dec
xchg
cmp
push
push
pop
js
daa
icebp
cmp
loop
cmpsb
mov
outsb
xchg
nop
jle
push
jg
sahf
push
mov
xchg
pop
lret
stos
arpl
dec
lahf
out
mov
daa
push
push
mov
xor
inc
add
out
pop
add
mov
scas
push
xor
sbb
sahf
push
jo
push
sub
push
shl
ficomps
dec
stos
movsb
cmp
out
pusha
cmpsl
inc
cld
stc
push
cmpsl
lret
mov
imul
xlat
push
icebp
xchg
mov
mov
sahf
pop
mov
jns
scas
jo
dec
xor
iret
lahf
push
jns
ret
pop
rcrw
das
fisubs
inc
cmp
cmpsl
loope
pop
xor
fisubs
inc
xor
xor
divl
shrl
daa
cmpsl
xchg
cmp
inc
and
cmpsb
in
mov
loop
outsl
cmpsb
sahf
enter
push
xor
jg
aad
mov
cmp
xor
jle
pop
fidivrs
insb
xchg
js
mov
int
and
xchg
ret
enter
test
mov
pop
bound
ret
ss
pop
rclb
pop
inc
stc
dec
mov
jnp
xor
cltd
insl
push
out
xor
ss
fcoml
push
enter
filds
inc
and
test
mov
push
cld
or
pop
ja
sahf
ret
xchg
out
dec
pop
jg
aas
hlt
xchg
xchg
xchg
into
loop
cmpsl
ss
addr16
flds
nop
mov
ds
js
dec
sarl
mov
scas
push
es
mov
mov
fs
loop
aaa
iret
mov
outsb
das
gs
jle
daa
pop
test
das
js
mov
inc
jo
add
xchg
add
mov
fildll
dec
jp
ret
in
pop
outsb
sti
cwtl
mov
inc
inc
dec
push
aad
pop
popf
mov
jle,pt
fbstp
ss
pop
pop
push
inc
mov
cmp
testl
das
mov
pop
mov
and
or
and
jg
outsb
mov
je
and
cmpsl
clc
xor
aaa
xchg
inc
add
lahf
lods
fs
mov
push
pop
xlat
mov
mov
in
xor
pop
daa
inc
ljmp
shlb
xor
hlt
mov
xchg
jbe
outsb
or
aas
shl
sahf
rorl
ficomps
out
sub
insl
popa
jo
mov
cmpsb
fs
and
daa
movb
pusha
outsl
outsb
push
and
das
cmpsl
pusha
sub
inc
xchg
add
inc
scas
shl
xchg
cmp
add
and
or
cmpsl
data16
mov
jo
sahf
lcall
pusha
int
outsb
enter
xor
mov
pop
and
cmpsb
jbe
dec
xor
xchg
push
xlat
aas
push
mov
std
cmp
pop
outsb
daa
inc
cmpl
ror
data16
pop
push
push
scas
out
and
sub
ss
ljmp
pop
xchg
addr16
push
mov
cmp
push
mov
ja
mov
jo
pop
ficoms
out
push
subl
lret
inc
and
scas
mov
outsl
xchg
mov
sahf
mov
push
add
stos
adc
jmp
or
push
xor
mov
and
daa
and
inc
ret
aas
scas
mov
add
push
addr16
xor
add
popa
inc
push
jecxz
fists
mov
cmpsb
scas
ja
cmpsl
ret
inc
cmp
rcll
fildl
cmpsb
inc
loop
inc
iret
jle
mov
gs
jo
sub
sbb
push
push
push
and
daa
sub
sub
mov
push
dec
push
rcrl
ja
and
xchg
es
pop
pop
sub
aad
ss
cmpsb
gs
jg
dec
ss
add
pusha
xlat
and
cmp
xchg
sub
lahf
push
jo
ja
inc
stos
mov
scas
clc
cmpsl
pop
and
jo
push
mov
xchg
shrl
das
stos
mov
sti
scas
xor
neg
cltd
xchg
adc
pop
std
adc
es
and
in
push
pop
shl
aaa
fstps
pusha
dec
jle
scas
fmulp
push
mov
outsl
xchg
lods
or
inc
call
mov
and
in
xchg
iret
pop
fbstp
popf
ret
pusha
lods
test
ss
push
mov
push
push
dec
fs
gs
fs
test
or
inc
mov
mov
test
sbb
mov
cmpsl
push
pop
gs
jbe
fsts
cmp
arpl
mov
iret
test
rclb
and
outsl
addr16
and
out
pop
mov
js
ja
push
ds
pop
arpl
jo
add
inc
daa
xchg
aad
mov
cwtl
pop
push
cmp
ljmp
pusha
adc
jnp
xchg
repnz
pop
sarb
dec
aaa
leavew
popa
dec
inc
mov
lcall
mov
cmpsl
pop
mov
add
pusha
pop
arpl
jmp
ja
sub
dec
jg
call
xlat
push
pop
jns
sub
es
shrl
xor
cmpsb
scas
ret
in
in
pop
in
push
or
mov
jbe
gs
in
push
push
lret
pushl
shll
sbb
and
scas
and
inc
fidivl
sub
cmp
lret
dec
fsubrl
dec
loopne
inc
movsb
sub
xor
push
push
xchg
ljmp
sbb
test
shrb
lods
mov
push
cmp
pop
fbstp
jmp
aas
xorb
sahf
dec
lods
jl
or
mov
pusha
stos
into
sbb
shlb
sbb
pop
sahf
aas
dec
xlat
jp
in
mov
rcll
cmpsl
inc
popf
mov
and
inc
into
mov
mov
test
push
xor
imul
and
outsb
inc
add
dec
scas
push
and
pop
pop
inc
outsl
daa
adc
hlt
in
xchg
nop
sbb
inc
jbe
dec
addr16
mov
ret
dec
mov
mov
mov
stc
dec
pop
insb
call
outsb
jbe
cs
lahf
sbb
pop
arpl
loope
jo
mov
pop
fmulp
inc
ja
cld
insl
adc
les
dec
inc
add
mov
cmpsl
xchg
inc
xchg
clc
push
aaa
repnz
scas
inc
jae
es
out
daa
xlat
mov
inc
testl
mov
fs
cmpsl
cmpsb
testb
imul
push
ja
mov
push
into
dec
inc
int
outsb
stos
lods
pop
pop
cs
fistpll
jecxz
push
mov
dec
jbe
jecxz
aas
das
xor
inc
aaa
or
pop
roll
addr16
cmpsl
lahf
adc
out
push
iret
mov
mov
jns
jmp
ss
cmp
jns
jo
fbstp
aad
push
out
dec
daa
adc
and
mov
retw
inc
sub
mov
fnstcw
lods
and
lods
aaa
dec
ja
jmp
jo
lea
sbb
je
mov
xlat
sub
jns
and
push
cs
test
aaa
ss
push
add
xchg
rorb
mov
push
les
mov
gs
push
test
cmp
add
pop
cs
cmpsb
nop
push
fsubs
outsb
shll
xchg
mov
mov
dec
jns
mov
xchg
pop
aaa
dec
into
es
adc
mov
ljmp
aaa
jbe,pt
repz
dec
test
mov
and
mov
pop
sub
pusha
xchg
jle
sbb
sub
jns
insb
fmul
dec
fimuls
iret
jbe
pop
rorl
pop
mov
inc
lret
push
jmp
jno
lods
push
push
jb
push
xchg
es
mov
dec
xor
imul
mov
daa
fs
xchg
add
imul
mov
pop
pop
sbb
push
ret
push
or
pop
jnp
das
test
daa
push
test
mov
or
jle
cmpsl
fidivs
iret
daa
add
mov
lods
fcmovu
xchg
xlat
or
mov
cmpsb
mov
bound
cltd
cmpsb
cs
cs
sub
ret
mov
jle
xchg
push
scas
pop
fsubr
lock
or
popf
dec
mov
push
cmpsl
repz
sahf
inc
fisubs
xor
shll
faddl
cmpsb
mov
cmpsl
ja
jmp
pop
push
cmp
mov
mov
daa
dec
push
inc
pop
sbbb
xchg
scas
jg
push
push
out
push
pusha
and
cmpsl
push
outsb
mov
nop
or
ffree
out
jg
xchg
mov
shll
adc
or
xchg
ja
mov
jg
idivb
pusha
inc
shrb
cmp
mov
xor
ds
into
in
lods
inc
dec
mov
or
inc
in
pusha
daa
push
lahf
addr16
cli
xchg
mov
mov
xor
fwait
dec
push
pop
in
jbe
scas
push
cmpsb
inc
aas
xchg
xchg
xor
and
pop
cmp
mov
pop
inc
push
movsb
outsb
mov
mov
push
call
nop
cltd
xchg
fnstsw
xlat
fisubrs
sub
mov
mov
cmp
lret
lock
es
lock
cmp
and
pop
scas
daa
mov
jo
jns
loopne
push
and
rcl
xor
mov
sbb
ss
pop
cmp
addr16
and
adc
push
sbb
sub
add
ds
mov
cmpsb
icebp
xlat
push
iretw
filds
and
sub
cmpsb
out
xlat
push
mov
cs
rol
lahf
cwtl
sub
pop
xor
outsb
mov
or
add
aas
pop
es
mov
imul
sahf
scas
pop
dec
mov
lahf
xchg
enter
add
add
and
mov
lds
fs
gs
xor
cmpsl
movb
fisubs
mov
addr16
cmovs
mov
xchg
adc
cwtl
xlat
pop
xor
pusha
data16
jb
inc
xchg
lods
push
sub
fldcw
pop
iret
aam
push
std
out
nop
daa
pop
das
sbb
push
out
outsl
xchg
push
outsb
cmp
lods
sub
ficompl
sahf
pop
shrw
xchg
nop
rorl
shll
sbb
faddl
insb
xchg
inc
mov
out
sahf
and
arpl
lods
leave
mov
ds
mov
out
inc
push
sub
scas
outsb
ficoms
leave
mov
outsl
xlat
pop
in
inc
xchg
rcll
dec
jno
mov
mov
xchg
sub
call
jns
sahf
ja
sahf
cmpsl
jne
xor
jae
inc
es
cs
cmpsb
sti
pusha
in
sub
lods
pop
pop
add
andl
ficomps
shll
jbe
sbb
aaa
pushf
imul
add
pusha
cmpsb
aaa
jg
xchg
fbld
and
pusha
xor
sti
scas
mov
xor
daa
fistpll
pop
pop
sahf
mov
cmpsl
push
dec
into
dec
add
or
js
mov
andb
rolb
mov
pop
clc
lahf
lds
fidivrs
ja
rcrl
es
fsubl
addr16
in
inc
cmp
jbe
inc
das
or
into
mov
xchg
data16
jge
clc
loopne
mov
jg
fbld
push
mov
in
push
mov
xchg
das
jns
scas
cmpsb
into
and
sub
dec
push
adc
aas
jg
test
jle
mov
aam
insl
push
loop
ja
into
fbld
push
xchg
iret
cmp
mov
icebp
aas
push
cmp
mov
push
push
divb
pop
push
fs
bnd
xchg
in
inc
cmp
jb
xchg
fildl
push
sahf
in
aas
je
jp
jae
aam
push
cmp
repz
cld
jne
lods
fistpll
pop
inc
mov
or
sbb
cli
xlat
daa
lret
call
out
ret
pop
aas
bound
xchg
adc
aad
push
xlat
scas
into
nop
ja
sbb
mov
fbld
lahf
sahf
cmpsb
fs
and
fisubs
shll
das
push
mov
gs
iret
pop
mov
outsb
push
push
in
jg
pop
cmp
aad
fisubrs
ds
xchg
shrl
nop
pop
mov
mov
shlw
mov
ja
stc
sub
dec
arpl
sbb
out
pusha
lret
cmp
xchg
out
dec
fprem
lea
das
push
test
fistps
jecxz
dec
add
iret
lods
loop
mov
fstpt
push
pop
and
cmp
leave
cmpsl
sub
mov
add
pop
daa
mov
sbb
jge
mov
pop
push
sbb
adc
push
jle
shll
jmp
pop
xchg
cmpsl
dec
fndisi(8087
pop
jbe
pop
cli
cmpsb
pusha
mov
lods
mov
and
jo
loop
fbstp
xchg
lret
scas
mov
inc
push
fsubl
pop
sahf
out
xchg
out
inc
pop
enter
jmp
iret
jg
add
cmp
test
xlat
inc
pop
mov
pop
jl
and
fwait
aas
jnp
inc
xlat
xor
dec
ljmp
xchg
ficoml
scas
out
mov
addr16
mov
mov
dec
out
and
mov
sahf
or
inc
fsts
es
or
arpl
aaa
mov
aas
jae
ds
cmp
push
jbe
xlat
push
data16
fimuls
push
pusha
xor
and
fnstenv
pop
scas
mov
mov
out
filds
aaa
imul
insb
test
insl
or
pop
lea
arpl
daa
xor
shrl
dec
cmp
data16
add
xlat
popf
lea
gs
das
leave
cmpsb
ds
xchg
stos
xor
hlt
jno
mov
push
daa
fsubl
mov
cs
jg
mov
das
daa
sbb
push
stc
dec
ss
xchg
inc
cmpsb
push
push
shrl
push
inc
xor
push
ret
add
pop
xchg
pusha
inc
std
sahf
dec
frstor
pop
xor
jns
xchg
ljmp
iret
jl
xchg
pusha
sub
inc
xchg
add
adc
cmp
jecxz
cmpsl
pop
push
hlt
neg
mov
mov
push
and
jcxz
nop
xchg
jae
movb
jbe
rcrl
jge
out
push
nop
push
gs
addr16
xchg
ja
jbe
or
scas
mull
push
mov
jecxz
daa
push
int
test
dec
movsl
ds
pop
ret
data16
test
pop
pop
xchg
mov
or
mov
aas
fisttps
sbb
inc
lahf
xchg
pop
push
stc
push
pop
into
aas
es
push
jecxz
inc
mov
jl
mov
mov
jecxz
push
cs
pcmpgtw
sub
lahf
mov
daa
lods
mov
pop
in
xchg
sti
xchg
mov
jg
xlat
and
ficomps
and
xchg
adc
and
xchg
iret
mov
fstl
fidivrl
xchg
jecxz
mov
jns
fiadds
cmp
imul
mov
push
fidivl
sub
imulb
xchg
insl
xlat
cmpsb
out
cmp
data16
adc
jecxz
scas
push
out
push
cs
enter
ja
ret
daa
push
cmpsl
jecxz
dec
and
js
mov
xor
pop
nop
fsts
pop
jbe
mov
push
push
pop
nop
icebp
add
enter
fs
test
pop
inc
cmp
push
stc
cmp
dec
xchg
lret
fisubs
loopne
jnp
dec
dec
add
inc
daa
push
jo
pop
cmpsl
fiadds
mov
pop
fstpl
test
into
das
and
aas
pop
lahf
push
leave
xlat
sbb
in
pop
mov
xor
inc
das
cmpsl
fsubr
push
fldl
xchg
mov
mov
fildll
cmp
mov
test
aaa
movsl
data16
inc
push
and
jbe
cmp
mov
fucomip
dec
imul
or
das
jns
daa
inc
lahf
inc
sub
dec
cmp
iret
xchg
das
jg
sub
mov
push
lcall
xlat
mov
xor
into
daa
cmp
in
cmc
xlat
mov
xchg
and
stos
xchg
lret
xchg
test
sub
fldcw
mov
or
fs
pusha
dec
scas
std
fldcw
shrl
imul
mov
inc
iret
sahf
mov
xchg
enter
daa
lret
or
cs
and
dec
jno
xchg
sub
pop
inc
push
mov
mov
lods
pop
push
into
out
repnz
fldcw
sbb
xor
nop
pop
jle
ss
stc
sub
jmp
xchg
dec
xchg
test
pop
push
sub
mov
mov
push
xchg
xchg
mov
jbe
fisubs
aaa
loopne
xlat
pop
xchg
shl
inc
pop
pop
inc
dec
cmpsl
sub
shrl
inc
jle
pop
mov
cs
jnp
mov
jmp
push
std
adc
pusha
ret
mov
not
shrb
repnz
sahf
mov
popf
adc
jmp
dec
inc
cmp
mov
fidivrs
pop
xlat
mov
cmpsb
and
in
in
fistpll
sahf
icebp
xchg
dec
mov
data16
xchg
sub
into
pop
pop
nop
pop
pop
jmp
outsb
inc
jo
jbe
mov
shl
aam
pusha
add
cmp
dec
and
rcr
mov
gs
movsl
or
xchg
pop
push
out
push
mulb
outsl
jle
sub
loop
jbe
outsl
push
xchg
mov
inc
pop
inc
std
lea
jns
xlat
push
push
cltd
out
inc
sub
adc
xchg
xchg
pop
shlb
inc
jo
xchg
xchg
jnp
push
aaa
loopne
cli
cmp
pusha
add
mov
dec
inc
inc
addr16
jbe
iret
mov
clc
xor
pusha
push
int
mov
cli
cmp
xchg
movsb
add
cmp
mov
loopne
or
dec
jp
sahf
movsb
gs
test
fisubrs
sarl
adc
out
into
pusha
dec
and
jg
push
loop
dec
xchg
inc
mov
es
cs
xor
mov
ret
les
inc
in
mov
in
mov
and
mov
ljmp
xchg
aas
inc
mov
subl
mov
mov
add
mov
pop
les
add
dec
fs
pop
inc
push
aas
imul
pusha
mov
and
jg
lock
jle
dec
push
es
fisubrs
xchg
xchg
xchg
repz
push
pop
sahf
jecxz
jbe
daa
outsl
movsb
cmpsl
mov
int3
adc
outsb
filds
xor
into
dec
push
sub
mov
stos
pop
sbb
add
lock
pop
and
cmc
outsl
inc
inc
mov
push
pop
pop
mov
mov
or
mov
out
test
jmp
adc
repnz
xor
inc
stc
mov
shl
cmpsl
fdivrp
test
dec
pop
push
xchg
cli
inc
stc
mov
pop
and
das
dec
out
push
fstp
pop
xchg
cmp
outsb
movsl
cmpsl
icebp
fldcw
inc
jg
push
testb
insl
pop
scas
push
xchg
rolb
imul
push
cmpsl
xchg
sahf
mov
cmpsb
pop
add
aad
mov
ljmp
sub
cmp
ret
mov
push
or
popl
das
clc
daa
push
add
mov
xchg
cmpsl
leave
mov
shrl
push
data16
push
scas
mov
push
hlt
dec
dec
in
ja
xchg
lods
push
xor
inc
push
scas
xlat
push
out
dec
push
xchg
ss
push
lret
pop
aas
pop
in
push
xor
leave
mov
inc
cs
mov
xchg
push
fistps
cmpsl
xlat
xchg
xchg
dec
leave
xchg
cmpsl
mov
add
scas
mov
and
dec
daa
movsb
mov
int
repnz
inc
fists
cmpsl
jg
push
aaa
dec
pop
ja
pop
jns
sub
jno
stos
es
mov
test
and
addr16
cmpl
jbe
imul
scas
pusha
fldt
xchg
pop
pop
fbstp
mov
ds
dec
cmp
lahf
xlat
inc
call
jbe
fwait
pop
in
fwait
jns
jnp
add
iret
mov
push
pusha
or
popf
inc
push
iret
je
dec
pop
repz
inc
xlat
and
ja
sarl
jbe
test
mov
int
add
pusha
xchg
cmpsl
lahf
stc
push
sub
shll
sub
cmp
mov
mov
loop
xchg
aaa
daa
pop
dec
mov
push
push
sub
push
mov
loop
aas
daa
scas
xchg
xchg
cmc
jo
pop
inc
out
pop
ds
pop
xor
leave
scas
mov
scas
es
leave
cmpsl
cmp
jo
lods
jnp
aaa
xchg
inc
loopne
repnz
outsl
cmpsb
je
add
push
mov
in
mov
lods
jns
pop
popf
xchg
ss
xchg
push
loopne
push
jle
lret
add
pop
ss
aad
xchg
mov
scas
out
xchg
into
xchg
fisubrs
mov
jbe
add
add
int3
lods
sub
jmp
jg
fdivp
iret
push
adc
mov
push
push
cltd
xchg
sub
jns
ja
jg
sub
vorps
mov
imul
scas
outsl
mov
ds
in
pop
sarb
loope
outsl
scas
addr16
stc
lret
fstpl
into
ss
jbe
xor
daa
push
add
jg
pop
mov
mov
pusha
lahf
cs
xchg
push
xor
mov
add
jmp
mov
cmp
cmpsb
fildl
test
repnz
outsb
sahf
aas
mov
aas
pop
ret
and
mov
arpl
jg
xor
jno
xchg
cmpsl
addr16
ja
iret
js
ss
xchg
pop
pushf
xchg
aaa
jo
fwait
pop
scas
jne
xchg
inc
aaa
push
add
in
scas
push
jp
xchg
jecxz
pop
push
cmpsl
and
daa
fisubs
dec
mov
jo
roll
ds
stos
inc
lahf
jo
pusha
faddl
out
xchg
and
push
jmp
je
and
cmpsl
pop
xchg
add
xor
cmp
lret
mov
mov
das
daa
or
add
aaa
push
dec
fs
mov
jo
sub
xchg
scas
adc
and
mov
ret
jle
scas
xchg
ret
cmpsl
mov
inc
xchg
addr16
xlat
leave
inc
push
pop
cmp
jne
shll
xchg
bound
cs
mov
mov
stos
jno
nop
jmp
jbe
cmp
inc
cmpsl
push
mov
jns
jmp
movsl
sbb
push
mov
aam
xor
pushf
hlt
add
fadd
sub
xlat
jg
pop
pop
mov
cltd
mov
enter
stc
lahf
das
scas
icebp
dec
mov
jle
mov
adc
push
je
or
and
pop
push
mov
jb
and
sbb
ss
pop
pop
inc
out
lcall
lahf
xchg
sahf
push
test
vmwrite
inc
jo
lahf
mov
jg
scas
stos
cmpsl
dec
fstpt
shlb
clc
ja
push
cmpsb
inc
pop
addr16
std
adc
in
mov
pop
js
sub
aas
jns
dec
and
push
push
daa
into
je
pop
dec
imul
testb
fiadds
es
fcomip
sub
or
cmc
loope
outsb
push
pop
or
lds
xor
adc
xchg
inc
cs
add
xor
jb
loope
cmp
fisttpl
xor
pop
mov
and
push
cmpsl
mov
pop
xchg
es
cmp
xchg
faddl
adc
xchg
fbld
aas
and
push
in
push
cmpb
out
jg
in
int
dec
cmpsb
fisubs
ffreep
mov
add
jns
scas
jbe
stos
xor
jne
dec
cmp
dec
mov
dec
mov
xor
xchg
loopne
jg
xchg
jns
iret
mov
cld
adc
cmpsl
das
push
jecxz
ds
pop
cmp
and
cmpsl
cs
dec
scas
and
mov
jae
xor
test
inc
cmpsb
xchg
into
mov
cltd
lods
jns
loopne
insl
push
outsl
pop
mov
cmp
ljmp
xchg
push
das
stc
aas
mov
cmp
fs
cmp
ficomps
xlat
aas
std
cmp
pop
mov
ds
pusha
enter
nop
inc
and
mov
xchg
fdivp
out
sub
popl
enter
xor
pop
test
mov
inc
xchg
fs
leave
mov
inc
int
addr16
mov
sub
scas
push
das
xor
addr16
repz
mov
jg
jbe
data16
mov
das
add
push
and
xor
mov
ficoms
push
and
xor
mov
mov
ficoms
in
scas
xchg
cmp
data16
fs
stc
push
fidivrs
pop
cmpsb
test
aas
jbe
jns
les
cmpsb
data16
add
pusha
or
das
pop
cmpsl
aaa
jnp
jbe
adcl
cmpsl
daa
insb
js
dec
push
and
pusha
outsl
daa
nop
mov
daa
repnz
gs
fsubrl
fucomip
iret
fucomip
xchg
and
sti
fidivs
repz
inc
xchg
xchg
pop
add
xor
bound
inc
cwtl
gs
loope
dec
mov
and
adc
cmpsl
ja
inc
inc
dec
pop
jae
mov
scas
jno
push
test
push
mov
push
cmpsl
mov
sahf
enter
xor
xor
cmpsl
sbb
fxch
mov
and
xchg
scas
ffreep
lahf
addr16
loopne
lods
xchg
call
in
scas
cmp
jge
add
ss
dec
jmp
jno
je
push
jno
mov
aaa
int
pop
jg
ffree
ss
fwait
xchg
xchg
add
cmp
xchg
mov
orb
movb
jg
dec
mov
push
pop
ds
cmpsl
loop
push
push
xchg
es
mov
xchg
into
outsb
lahf
and
push
push
mov
jo,pt
lret
inc
ss
sbb
cmpb
pop
popf
xchg
jne
je
cmc
dec
mov
sbb
loopne
out
xor
pop
outsl
ret
jg
xor
iret
addr16
ss
xchg
push
adc
outsl
aas
mov
pop
inc
shrb
popf
icebp
inc
jp
es
xchg
fists
aam
in
sahf
jle
lea
cld
and
outsl
pusha
lret
push
jle
dec
mov
dec
mov
fisubrs
jb
iret
jae
sub
sahf
push
cmp
xchg
rcrl
aaa
pop
push
shl
push
mov
leave
scas
outsl
scas
push
xchg
fldt
inc
pop
add
dec
jp
cmpsl
xchg
cs
lret
das
out
mov
dec
es
rol
inc
loope
cmpsl
scas
loopne
scas
dec
addb
pusha
pop
imul
pop
and
xor
cmpsl
push
mov
add
jle
cmp
fnstcw
scas
lret
daa
dec
ds
scas
rcr
xchg
jg
jge
lret
out
xchg
fidivs
and
enter
inc
popl
lds
fisttpl
ja
mov
dec
insb
mov
repnz
sbb
ret
stos
jb
push
outsl
pusha
xor
mov
cmpsl
inc
cmp
out
push
sub
cs
sahf
pop
pop
jle
xchg
cli
cli
push
mov
push
into
test
sbb
loope
push
dec
fiadds
fiaddl
mov
cmpsb
xor
shrb
sahf
daa
data16
mov
adc
push
and
imul
jae
sahf
sub
jbe
and
cmp
nop
out
out
mov
push
xchg
cmpsl
pusha
fnstsw
xchg
shr
imul
jp
daa
add
xchg
xchg
and
xchg
jns
cmpsb
in
outsb
mov
jle
data16
leave
cmp
lds
stc
in
and
lahf
arpl
jmp
pop
push
adc
mov
pop
and
and
push
es
lds
inc
repnz
xchg
scas
fs
push
rcrl
and
xchg
mov
scas
inc
lods
dec
push
outsl
outsb
mov
ss
push
jnp
gs
scas
cmp
outsl
cmpsb
nop
mov
pop
lcall
es
and
mov
sub
arpl
loope
mov
fbld
outsb
pop
imul
les
aas
es
pop
bound
inc
xchg
ret
xchg
pop
pop
push
mov
push
mov
mov
scas
insb
fld
and
movsl
add
pop
add
jno
push
popf
inc
push
lods
incl
inc
xlat
rorl
or
inc
mov
lret
jns
inc
das
xchg
aad
fistpll
ficompl
dec
pop
ja
jg
gs
outsl
mov
mov
jns
insb
pusha
aas
ja
sbb
das
leave
inc
jecxz
js
aaa
jge
xchg
cmpsl
mov
bnd
les
in
fnstenv
das
clc
fists
leave
push
jb
stc
jbe
mov
out
fs
push
lahf
push
xchg
jle
fbld
mov
and
add
mov
pop
into
das
push
filds
sahf
loopne
loopne
push
es
jno
jg
aas
sbb
rcrb
fs
jbe
pop
inc
pusha
loope
pop
and
cmp
sub
xor
scas
cmp
jmp
xchg
mov
cs
push
xchg
pop
xchg
bound
insl
jno
mov
insl
popl
out
xchg
jae
outsl
in
dec
mov
jmp
cmpsb
and
fnstcw
sub
mov
mov
into
sub
iret
dec
repz
clc
ljmp
mov
dec
dec
jmp
xchg
ds
data16
scas
pop
adc
cmp
jo
pop
cmp
ficoms
jp
mov
inc
pusha
mov
dec
push
xchg
pop
inc
sub
loope
mov
lahf
sub
add
pop
and
cmp
loop
xchg
iret
cmp
ss
cmc
adc
lods
and
xchg
ds
negl
loop
jo
xbegin
sub
into
jp
test
pop
out
scas
cmpsl
es
out
ret
mov
push
sahf
loop
fisubs
pop
pop
mov
or
into
ret
xchg
pusha
int
dec
and
xor
mulb
cld
mov
pop
lahf
sub
dec
inc
mov
addr16
xchg
data16
fwait
out
fisttps
pop
sub
addr16
and
test
cs
and
or
mov
xchg
sbb
add
shl
lods
push
xchg
sub
xchg
repnz
lock
cmpsl
cli
repnz
sbbl
stos
icebp
jae
sbb
mov
xor
push
xchg
lods
cmp
iret
call
sahf
and
sti
mov
jo
cltd
pop
xchg
fadd
ja
add
nop
dec
pop
addr16
push
daa
push
jns
xchg
incb
in
push
lahf
pop
xchg
out
cmpsb
xlat
push
pop
pop
mov
mov
scas
cmp
iret
outsb
ds
xchg
lahf
addr16
xchg
bound
data16
pop
aas
fs
xor
scas
lods
fimull
lods
shrl
dec
dec
ds
jno
mov
aaa
push
mov
pusha
push
sbb
mov
dec
movsb
jg
outsb
test
ja
pop
push
pop
push
flds
aas
mov
dec
cmpsb
sbb
daa
pop
pop
mov
and
into
jg
inc
loop
jo
das
pusha
sahf
or
sbb
push
sub
or
push
mov
fiadds
add
test
ja
dec
and
xchg
ss
add
xchg
aaa
hlt
add
inc
inc
push
sub
xor
pop
mov
push
nop
outsb
dec
icebp
mov
xchg
cli
div
xchg
inc
cmpsb
fnstsw
mov
push
push
jns
cmp
xchg
pop
outsl
aaa
iret
insl
xchg
xor
mov
repnz
mov
cmpsb
xor
push
das
andb
fsts
cmp
xor
cmpsb
cmpsl
ds
filds
fucom
push
aaa
outsl
dec
pop
pop
mov
lahf
push
pop
cs
jg
add
and
cmp
jo
lods
adc
cmp
jl
pop
pop
xchg
jg
sub
and
xchg
pop
fidivrs
cmp
pusha
and
or
sub
xchg
lret
dec
xlat
mov
or
addr16
roll
push
ja
into
out
fisubs
mov
jcxz
cmpsb
mov
outsl
leave
dec
into
iret
nop
push
lods
sbb
inc
out
cmp
and
sub
int3
cmpsb
stos
lahf
sub
nop
and
sahf
dec
dec
inc
xlat
js
dec
cmpsl
sbb
gs
xchg
xchg
lds
out
ja
into
fsubrl
mov
cs
leave
outsl
mov
dec
pop
pop
dec
loopne
push
and
data16
pop
cmp
inc
lcall
push
push
push
into
push
jns
xchg
cltd
adc
xchg
xor
std
fpatan
es
xor
sarl
add
push
test
inc
mov
shrl
outsl
ja,pn
fsubl
out
push
xor
es
out
push
cmpsl
sub
out
mov
xlat
xchg
inc
in
into
sahf
mov
loopne,pn
add
xchg
xchg
popl
movsb
mov
scas
lods
and
dec
sub
jl
mov
jecxz
and
mov
fstpl
cmpsb
sub
sub
pop
push
out
jg
mov
ja
push
xchg
scas
dec
mov
push
stc
xor
cmp
jns
inc
fcomip
scas
pop
push
and
dec
daa
popaw
inc
iret
test
sub
into
fiadds
cmpb
aaa
xchg
inc
stc
out
jle
ja
daa
sub
repnz
mov
mov
inc
es
inc
jo
or
outsl
das
add
sbb
xlat
mov
jo
ss
xchg
dec
cmpsl
jecxz
ja
and
hlt
data16
xchg
xchg
cmp
dec
gs
filds
call
mov
sbb
inc
cmp
sbb
lods
pop
inc
ja
mov
mov
nop
and
fcmovb
iret
lock
and
push
dec
and
es
jg
cmpsl
aas
adc
das
icebp
sbb
sarb
jmp
cmc
mov
nop
fiadds
das
addr16
lcall
xlat
scas
aaa
or
jbe
jle
xchg
arpl
rcrl
and
aam
iret
int3
or
and
xchg
xchg
in
lahf
jmp
pop
sarl
inc
sub
and
xchg
divb
cltd
adc
jno
aas
idivl
mov
pop
in
fists
cs
into
outsb
addr16
xlat
cmpsl
push
mov
jnp
addr16
inc
xchg
jg
mov
inc
jb
loope
push
jle
iret
aaa
lcall
and
push
lods
cmpsl
dec
fldcw
and
inc
shl
mov
inc
push
aas
xor
addr16
xor
add
mov
mov
mov
icebp
test
outsb
push
daa
popl
cs
ret
dec
jecxz
data16
fwait
call
in
pusha
push
fbld
sahf
mov
inc
push
ss
adc
and
mov
pusha
bound
xchg
dec
fstl
mov
in
int
sahf
das
jmp
ja
xchg
sbb
mov
push
scas
pop
pop
and
iret
gs
inc
icebp
nop
pop
mov
flds
jg
iret
repnz
xchg
inc
in
scas
into
xor
push
lods
mov
push
into
xlat
xchg
clc
push
jns
inc
xor
cmp
daa
inc
mov
in
jne
push
add
out
pop
lahf
xchg
pop
das
push
outsb
xchg
in
sbb
pop
jecxz
xchg
jno
mov
ljmp
push
lahf
leave
data16
mov
jbe
int3
ds
mov
push
aaa
outsl
push
in
pop
dec
sbb
and
dec
sub
pop
enter
mov
push
xchg
inc
scas
in
push
data16
cs
mov
out
daa
jo
scas
mov
aas
mov
mov
mov
outsl
sahf
stos
aas
ds
mov
cmpsl
inc
push
lods
push
pop
scas
icebp
mov
lds
jle
jl
mov
add
push
dec
out
ds
cmp
daa
mov
mov
pop
lea
lahf
stc
clc
test
or
push
mov
push
sub
dec
jecxz
inc
daa
xor
cmpsb
lods
movsl
mov
andl
add
push
mov
in
or
mov
push
jns
cmpsl
push
cld
mov
xchg
dec
fistl
scas
pusha
jnp
push
pusha
or
rcll
enter
lock
lock
in
inc
push
in
jno
push
pop
sbb
push
cmp
push
sbb
nop
xchg
xlat
pusha
pop
outsl
push
push
xchg
mov
and
rol
out
adc
out
std
or
ret
andb
pusha
lahf
or
sub
cmp
and
cmpsl
add
pusha
imul
mov
mov
daa
dec
lret
xchg
mov
fbld
aaa
pusha
mov
test
or
dec
mov
jp
jl
and
xchg
pop
push
fbstp
cmp
sahf
jbe
and
jg
loope,pt
scas
dec
xlat
das
cmpsb
mov
inc
movsl
xchg
xchg
xor
cmp
lds
outsl
test
mov
in
call
push
mov
stc
std
rcrl
aaa
daa
fninit
inc
cwtl
mov
ret
into
imul
stos
pop
leave
mov
xchg
mov
loop
aaa
iret
cmpsb
inc
lret
add
and
xchg
fldenv
jg
pop
rolb
in
xchg
xor
mov
lea
xchg
bound
cmp
call
lds
pop
aas
push
fucomip
gs
fisubrs
sbb
rcll
xlat
aas
pusha
adc
xor
fidivrs
inc
and
pop
push
jge
pop
addr16
and
xchg
jo
xor
rol
out
data16
fldt
iret
filds
sub
cmp
xor
push
mov
xchg
inc
and
mov
mov
xor
dec
sub
pop
imul
aad
scas
sub
rcl
lret
ss
xchg
push
out
add
outsl
xor
pop
push
dec
das
sub
rolb
mov
pop
das
iret
sbb
cmpsb
or
data16
leave
arpl
cmpsl
outsl
lret
add
pop
mov
inc
es
and
push
sub
fcmovb
js
sahf
mov
jg
pusha
iret
inc
dec
mov
add
mov
iret
ds
mov
push
nop
jbe
test
add
xchg
out
sahf
icebp
pop
cmp
push
mov
flds
shll
addr16
out
push
outsw
daa
loope
push
iret
xchg
jbe
inc
cmpsb
fildl
push
es
push
popl
xchg
jae
inc
adc
out
aaa
nop
add
ror
push
mov
xchg
fsts
outsl
push
inc
popf
cmp
mov
dec
ds
and
test
jmp
or
ja
push
or
inc
or
xchg
jecxz
lahf
or
aaa
outsb
inc
ja
js
jg
or
cmpsb
add
jle
les
clc
test
icebp
jg
iret
push
rorl
fldt
jbe
lret
mov
lret
cmp
xor
inc
mov
sub
inc
pop
aaa
jg
mov
xchg
push
inc
dec
mov
test
pop
in
bound
push
fisubrs
mov
fistpll
cli
mov
sbb
dec
mov
xlat
outsl
push
lahf
jbe
out
into
repnz
leave
das
xchg
cmpsb
xor
and
xor
sbb
popf
iret
jg
fisttpll
jbe
pop
sbb
outsl
dec
repz
cmpsl
dec
aaa
leave
ss
pusha
rcrl
pop
out
outsb
xlat
xchg
mov
mov
mov
leave
xchg
xchg
lret
push
mov
outsb
mov
test
xchg
cmp
ds
inc
cmp
xchg
into
adc
mov
ja
loope
dec
push
sub
in
lea
sahf
int
jle
jbe
xlat
bound
es
cmp
scas
mov
mov
in
ret
jmp
push
jecxz
xorl
sbb
out
pop
push
clc
cmpsl
cmp
and
mov
push
rorl
jg
inc
roll
inc
mov
stc
data16
mov
dec
xchg
daa
divb
cmpsb
jle
jbe
xchg
pop
enter
adc
fsubl
ss
lods
outsb
push
jecxz,pn
scas
push
fs
into
add
mov
push
inc
cmp
dec
lahf
inc
imulb
push
inc
outsl
pusha
cltd
rcll
in
jbe
push
cli
aad
mov
xor
outsl
mov
pop
ja
aaa
pop
je
jecxz
shrb
push
mov
pop
xchg
lods
xor
dec
jbe
and
gs
cmp
cmpsb
mov
push
fidivrs
daa
push
outsb
cmpsl
pop
or
mov
mov
xor
enter
mov
pop
repz
mov
xor
sub
cs
inc
daa
jns
rorl
iret
imul
mov
sub
cmp
test
daa
icebp
es
aaa
push
dec
loope
scas
inc
cmp
xchg
jecxz
inc
data16
call
jns
sub
pop
fs
fsubrl
data16
into
xor
or
inc
fildl
loopne
pusha
push
sub
push
push
pop
sub
pop
or
jbe
ja
sbb
jle
scas
es
sub
cmc
push
nop
cmpsl
mov
je
in
inc
push
dec
push
sbb
xlat
fcmove
lds
inc
std
pop
mov
sbb
stc
cs
mov
xor
sub
mov
sahf
dec
xchg
pop
and
imul
jg
pop
xchg
mov
movsb
mov
dec
cmc
in
fiaddl
pusha
scas
mov
push
dec
cmp
cwtl
cmp
dec
or
xchg
mov
into
stos
bound
pop
dec
sahf
and
sub
xchg
fistl
insl
pop
outsl
jns
add
movsb
mov
and
push
jns
dec
push
xchg
mov
jb
fistpl
push
jbe
dec
rcll
xlat
jge
xchg
push
xchg
jl
pop
ss
fstpt
leave
lret
lret
cmp
push
xchg
pop
std
mov
int3
cs
xor
cmp
loope
enter
pop
aad
mov
mov
xchg
outsl
leave
sarb
push
cmpb
enter
jb
push
mov
adc
xor
fcoml
xchg
jle
jl
xchg
mov
xchg
cmpsl
or
jbe
mov
jg
mov
mov
fs
scas
and
jle
daa
inc
test
sahf
dec
pusha
pop
outsl
jmp
fsubrl
scas
jns
dec
lds
das
mov
pop
outsb
and
into
gs
fmull
stos
dec
jbe
inc
fistpll
push
in
pop
pop
daa
cmp
fbstp
xchg
clc
push
daa
fisubs
loope
jle,pn
push
pusha
pop
insb
and
stc
lods
xchg
xor
lret
aas
mov
push
addr16
mov
in
mov
cmpsl
adc
add
pusha
mov
pop
dec
xlat
xor
cwtl
js
xchg
fildll
mov
ret
in
lods
movsl
add
out
jle
and
inc
pop
out
push
pop
enter
test
data16
xlat
int3
lods
mov
outsb
inc
cmpsb
data16
push
aaa
rorl
mov
dec
outsb
pop
add
loope
ss
jg
xchg
cmpsl
mov
inc
cmp
pop
je
out
push
addr16
fisubrs
fcmovnbe
push
cmp
loopne
call
ucomiss
jl
nop
cmp
data16
scas
mov
add
jmp
leave
aas
das
xchg
icebp
push
inc
inc
inc
aam
sti
into
sbb
mov
lock
sub
mov
cmp
and
jb
daa
outsb
lret
mov
jecxz
nop
jmp
jno
push
into
mov
xchg
outsb
push
repz
cmc
dec
call
data16
push
nop
fs
aas
or
xchg
scas
jo
cwtl
std
pop
pop
pop
lods
icebp
js
xlat
push
ja
sub
jo
xchg
rclb
addr16
aas
mov
lods
cli
dec
inc
mov
movsl
push
outsl
pop
nop
leave
xor
cmp
push
xchg
es
cmp
ja
mov
sbb
mov
out
xor
mov
iret
fsubr
aad
ss
dec
loopne
push
pop
cmc
sub
stc
outsl
stc
lahf
sahf
pusha
aaa
cs
and
cmp
jle
push
fincstp
cmpsl
jno
push
jb
inc
adc
enter
ret
clc
push
pop
xchg
sub
pop
inc
lea
aas
jecxz
fbld
cmpsl
xchg
scas
test
add
pop
xor
cmp
push
mov
dec
outsb
lahf
push
and
mov
ss
push
xor
pop
arpl
dec
jo
bnd
popa
mov
loopne
mov
cs
xlat
jae
mov
mov
fs
out
inc
mov
cld
ret
inc
lods
mov
jg
mov
mov
scas
xor
push
dec
shr
xor
data16
pop
pop
cmpsl
clc
pop
test
cltd
loope
push
inc
push
aaa
out
ds
aam
sub
stos
sbb
outsl
loopne
xor
mov
fidivrs
mov
or
into
jg
fs
mov
mov
data16
sub
mov
dec
into
aam
sub
pop
push
dec
ficoml
cltd
out
pop
xlat
in
inc
fcoml
mov
dec
clc
scas
sub
push
add
outsb
push
xchg
into
mov
in
pushf
jne
les
lds
lods
xchg
adc
mov
pop
mov
cmpsl
jg
adc
push
push
div
mov
pop
pop
inc
mov
fsts
scas
fisubs
std
std
aaa
lds
pop
ret
in
rcrl
jg
fimuls
pop
xchg
pop
push
xchg
ret
ss
sub
leave
sbbb
loope
scas
scas
ljmp
popa
push
lret
cmp
cmpsb
xchg
sub
and
xor
std
xchg
pop
outsb
adc
pop
xchg
lahf
fimull
das
lretw
sub
dec
pop
pop
outsl
mov
lret
inc
shl
pusha
xlat
data16
xchg
das
push
ds
ficomps
mov
push
and
xchg
into
inc
push
cwtl
inc
fs
cmp
jbe
jo
cmc
sub
dec
mov
and
nop
in
jo
adc
cmpsl
fwait
xchg
xlat
nop
mov
filds
push
lahf
cli
and
push
xlat
xor
lds
push
fcmove
jns
arpl
jg
mov
fdivs
pop
dec
call
lds
daa
dec
test
imul
xchg
iret
and
push
push
jne
mov
mov
lods
inc
enter
loop
push
lahf
nop
xchg
fbstp
ss
lahf
cmpsb
pop
sahf
xchg
test
dec
sbb
js
jle
sub
fisubrs
xchg
mov
jg
push
fsubrp
cltd
lds
dec
xchg
inc
mov
daa
jecxz
cmpsb
das
xchg
mov
aaa
scas
sbb
mov
pop
mov
cmpsb
lahf
push
xor
pusha
dec
xchg
scas
in
inc
xlat
scas
pop
and
cmp
mov
filds
hlt
jae
jbe
loop
pop
cmp
xlat
fs
adc
dec
aas
lock
aaa
dec
mov
fists
pop
cmp
jo
xchg
push
ds
dec
mov
in
jg
mov
nop
scas
mov
or
pop
and
pop
dec
cltd
fs
jnp
dec
out
scas
xchg
ja
xlat
mov
cmpsl
dec
js
icebp
xor
or
pop
fstl
xlat
lahf
inc
scas
inc
mov
pop
mov
jnp
addr16
mov
jl
xchg
aaa
dec
lahf
or
push
add
xor
adc
std
jns
addr16
push
cmpsl
mov
aaa
pop
ja
mov
fstl
lock
cs
ds
or
xor
addb
fisttps
xor
mov
jns
xor
and
ss
ds
iret
aaa
push
sahf
lds
jo
lret
popa
std
movsl
push
push
sahf
adc
jbe
pop
clc
aad
mov
in
push
dec
scas
bound
sub
sahf
stos
icebp
mov
testl
dec
fbstp
and
xchg
mov
nop
dec
out
das
xlat
xchg
push
mov
cmp
jle
das
leave
inc
es
je
test
mov
push
std
fidivs
nop
in
daa
scas
xchg
ljmp
sub
aaa
addr16
pop
pop
push
lret
ret
pop
mov
iret
push
es
pop
ss
push
flds
dec
outsb
outsl
xchg
pop
jbe
daa
in
sbb
adc
pop
leave
insl
push
push
and
daa
dec
ss
nop
ja
cmc
aaa
outsb
inc
xchg
or
cmpsl
movsb
cmpl
cmp
add
add
cmpsl
pop
mov
dec
rcl
pop
jmp
inc
sarl
in
push
adc
shlb
lret
lods
xchg
dec
imul
dec
out
push
xchg
pop
push
into
gs
addr16
rclb
stos
jge
push
mov
addr16
ss
cmp
push
aam
inc
mov
mov
mov
dec
push
and
arpl
clc
pop
outsl
ljmp
jo
xor
xor
test
inc
gs
adc
dec
ja
test
scas
loop
mov
scas
mov
inc
jns
inc
xchg
jo
cmpsl
sub
shl
insb
inc
jmp
das
pusha
jo
adc
xchg
icebp
dec
or
lods
addb
lahf
mov
fstpl
push
pop
movsb
call
push
or
enter
push
scas
push
ja
fists
insb
cmpsb
test
add
push
sub
mov
cli
loop
gs
pop
push
ja
es
and
xor
imul
jns
das
jbe
notl
add
enter
inc
roll
inc
xchg
scas
lret
push
inc
out
dec
inc
pop
add
push
jo
aaa
and
gs
mov
cltd
cmpsb
cmp
push
fbld
dec
pop
loop
cli
jmp
faddp
jns
xor
popf
cmpsb
dec
dec
nop
dec
bound
add
xlat
xor
and
xchg
fidivs
loopne
fidivs
xor
fsub
jmp
and
fistpll
inc
movb
outsl
pop
sbb
sbb
and
jmp
xor
mov
addr16
loopne
jg
mov
cmp
bound
fldenv
dec
es
jo
cmp
jp,pt
mov
sub
push
into
jg
jno
fildl
dec
sahf
pop
push
pusha
or
dec
jne
scas
scas
in
test
pop
decb
jo
loop
scas
jg
xchg
mov
cmpsl
add
test
xchg
in
scas
inc
push
ds
mov
das
scas
faddp
lret
stos
sahf
jae
loope
push
daa
inc
xchg
in
xchg
push
es
out
cmpsl
or
push
jg
daa
mov
and
mov
cmp
and
jmp
push
inc
xlat
or
dec
pop
dec
roll
stos
or
outsl
cs
push
dec
pop
inc
scas
aad
leave
shlb
aam
add
leave
mov
mov
push
and
in
push
ja
xchg
popa
pop
outsl
loope,pt
xchg
pop
push
cmp
fsubl
add
cs
push
stos
lods
fisttps
sub
dec
and
fdivl
jmp
jbe
mull
mov
daa
inc
add
fnstsw
sbb
mov
cmpsb
ja
pop
sbb
icebp
icebp
imul
jle
js
pop
in
call
cmpsb
push
dec
pop
push
mov
out
ds
and
sub
push
into
iret
arpl
shll
push
bound
cmpsl
push
push
xor
or
dec
pop
cmp
xchg
mov
sbb
push
lret
aam
mov
pop
and
out
daa
dec
sub
sbbb
mov
and
adcb
mov
data16
aam
in
inc
pop
fbstp
ljmp
cmp
in
dec
mov
fistps
arpl
and
mov
pop
les
mov
daa
in
xor
loope
cmpsb
outsb
scas
into
inc
aaa
xchg
js
mov
xor
loopne
inc
iret
dec
lcall
mov
ja
enter
icebp
cs
and
sbb
or
push
jbe
stc
push
pop
ficoms
ljmp
out
sub
addr16
out
and
testb
pop
sbb
mov
mov
pusha
loop
ds
outsb
pop
scas
mov
into
mov
ret
push
ficoms
sbb
jo
dec
pop
sbb
mov
pop
sub
aaa
and
cmpsl
aas
mov
jle
xchg
outsb
mov
outsl
pop
xlat
push
ds
push
mov
jge
pop
js
pusha
pop
sub
gs
pop
push
and
inc
das
cmpsl
mov
pop
mov
cmpsl
ror
in
iret
ja
push
sbb
push
sub
add
stc
rcr
into
xlat
mov
jge
jno
sub
daa
mov
cmpsl
leave
xchg
lahf
test
dec
pop
scas
loope
pop
jbe
bound
xchg
stos
mov
sub
outsl
ss
adc
inc
dec
leave
daa
das
ja
sub
sahf
pop
iret
pop
inc
cmpsb
xchg
test
push
inc
jbe
push
outsl
pusha
dec
pop
cmp
jle
hlt
push
mov
int3
push
cmp
pop
pop
or
outsb
outsl
dec
scas
ljmp
xchg
into
rcl
and
outsl
out
outsb
push
out
test
nop
into
cli
loopne
enter
xor
daa
daa
jmp
cmpsl
push
popa
fldcw
fistl
int
cs
outsb
pusha
loope
push
push
jbe
mov
lret
push
dec
das
xor
and
fildll
out
in
xlat
cmpsb
inc
push
fcomps
and
jo
xlat
call
pop
scas
fistps
push
cmpsl
mov
add
cmpsl
dec
cltd
mov
ficoms
addr16
lods
into
xchg
cmpsl
outsb
xchg
mov
daa
mov
xchg
cmp
cltd
push
or
out
test
icebp
sahf
aad
inc
mov
add
nop
push
push
jno,pn
movb
inc
add
ret
mov
mov
das
xchg
je
push
push
xor
faddl
sub
fidivs
fstps
out
cmpsb
data16
mov
lock
gs
sub
pop
es
int
pusha
xchg
inc
out
fwait
shlb
mov
pop
mov
lock
ds
mov
xchg
and
cs
jmp
stc
insb
dec
mov
inc
aaa
fbstp
push
scas
mov
pusha
je
lahf
and
lea
data16
in
push
and
sub
gs
es
test
or
push
mov
jle
mov
icebp
into
fisttps
addr16
push
pop
pop
and
push
daa
xchg
mov
shrb
ss
pop
dec
addr16
jg
cmp
push
outsl
lcall
push
cmpsb
xlat
add
pop
popf
arpl
inc
mov
jns
lds
mov
sahf
inc
cld
fistpll
push
cs
orb
jnp
stc
dec
cmp
stc
push
mov
enter
ficoms
lret
es
inc
into
and
jmp
fs
das
mov
addr16
aas
push
mov
add
mov
xchg
jo
fstps
push
xor
iret
test
jecxz
xchg
fldl
fsubr
gs
cmpsb
mov
jle
clc
xor
pop
test
jl
sbb
and
repnz
mov
xchg
mov
push
rcl
jb
es
xchg
push
push
adc
aaa
push
mov
xchg
xlat
scas
loop
dec
inc
xor
scas
daa
pusha
xchg
addr16
jo
leave
gs
je
jg
xchg
cld
jne
nop
push
inc
fstenv
inc
outsl
fists
push
scas
push
pop
inc
cmpsb
mov
leave
xchg
xlat
stos
gs
pop
outsb
test
call
int
jbe
addr16
mov
fldt
bound
pop
jo
into
mov
inc
les
jecxz
pop
fisubs
push
dec
ja
mov
lahf
daa
pop
xlat
pop
aaa
ret
lret
xor
insb
daa
xchg
test
xchg
jbe
pop
pop
mov
mov
adc
fdivl
jo
lods
add
sbb
sub
sbb
daa
xchg
icebp
iret
into
insb
lods
sbb
aas
or
insl
outsl
ss
dec
push
imul
in
mov
inc
cmp
cmp
jg
stc
daa
call
xchg
push
sbb
fs
jae
ja
test
std
stos
std
mov
mov
pop
pop
jbe
nop
jl
mov
imul
adc
cltd
cmp
mov
das
lahf
ss
add
pop
fistps
cli
nop
push
push
scas
xor
popf
xchg
mov
je
jne
in
xor
cmpsl
jns
ret
out
aaa
inc
jb
and
gs
aas
push
push
gs
mov
aas
add
push
sub
mov
xchg
dec
dec
outsb
xchg
push
or
in
sub
cmp
inc
mov
cltd
dec
lahf
or
movsb
aas
xchg
and
jo
push
xor
cld
lret
mov
lret
add
dec
stc
xor
pop
pop
nop
push
enter
into
ret
xor
sub
sbb
jmp
mov
push
mov
jb
in
pop
xchg
mov
pop
adc
cs
cmp
dec
jle
pusha
cmp
sub
mov
iret
xor
aaa
in
cmpsl
cmpsl
mov
add
ds
aaa
imul
cmc
mov
sub
pop
push
pop
and
shll
fmulp
out
cmp
inc
addr16
mov
dec
bound
push
push
xor
dec
inc
pop
scas
add
repnz
jmp
outsb
sub
scas
push
xchg
js
and
gs
sub
pop
xor
mov
jb
shll
mov
out
jg
cmpsb
pop
dec
movsb
xchg
cmpsl
cs
pop
push
cmpsb
cmpsl
push
sbb
nop
mov
push
and
fstps
xchg
xchg
xchg
ja
xlat
mov
das
dec
addr16
outsl
inc
sub
jg
ja
jno
jbe
pop
repnz
fidivl
inc
pop
push
inc
scas
push
dec
cli
movsb
jle
xlat
cmp
data16
cmpsl
sahf
sub
dec
pusha
fld
and
jle
das
xor
push
fstl
xchg
pop
push
test
fnstsw
iret
das
rolb
es
and
sbb
add
mov
pop
jo
in
and
inc
pop
mov
sub
mov
fcoms
je
pop
pop
sahf
xchg
roll
mov
hlt
sub
outsb
mov
and
in
pop
daa
xchg
into
je
cs
jmp
mov
cmpsl
mov
movsb
scas
pop
leave
jbe
cs
fs
mov
mov
shlb
popa
mov
ja
mov
cmpsl
stc
pop
xchg
popf
iret
mov
mov
adc
into
cmpsl
cmpsb
xchg
mov
cltd
aas
push
mov
ja
xor
sub
mulb
pop
mov
jle
push
pop
inc
pop
aas
shrb
push
xchg
stos
sbb
fistl
pop
pop
xchg
mov
mov
xor
xchg
jbe
mov
pop
outsb
je,pn
inc
cmp
in
cs
jmp
push
xchg
ds
cmpsl
inc
rcrb
mov
inc
mov
jg
push
fs
mov
ret
icebp
lahf
cmp
mov
enter
jns
aas
outsl
pusha
std
xchg
lahf
inc
jne
push
je
push
inc
mov
and
cmp
fbstp
push
mov
mov
xor
and
js
outsl
imul
das
mov
ljmp
add
mov
mov
nop
pop
aaa
cwtl
and
xchg
arpl
pop
mov
jno
js
mov
mov
pop
pop
addl
jo
mulb
aas
mov
out
nop
cmp
cmpsl
jno
das
pop
inc
cmpsl
add
mov
mov
mov
pop
sahf
push
push
into
in
jmp
iret
fldt
into
add
mov
aas
daa
arpl
outsl
push
les
jbe
fildll
sbb
jb
adc
xchg
mov
mov
cmp
cmpsb
gs
cmp
xchg
push
cmp
mov
jecxz
outsl
fs
cmpsl
scas
dec
cs
cmp
addl
ljmp
mov
stos
pop
push
jbe
pop
popw
aas
add
push
and
movl
mov
mov
add
cmc
or
jecxz
jle
and
inc
inc
xchg
ds
fs
stc
jle
dec
loop
sahf
addr16
cs
pop
jbe
mov
lods
sbb
ds
mov
outsb
xchg
dec
jmp
add
icebp
dec
pusha
inc
mov
pop
sbb
sub
repz
je
sub
insl
aas
aaa
mov
les
cmpsb
and
push
push
test
jno
push
xchg
fnstsw
mov
mov
ljmp
data16
pusha
nop
jg
or
sub
and
hlt
int
fbld
nop
je
pop
xchg
xchg
pop
mov
pop
push
mov
mov
sbb
mov
inc
outsl
cmp
dec
aas
das
inc
test
adc
mov
xchg
ja
fs
repnz
cmpsl
ss
cmpsl
add
inc
iret
fimuls
mov
jbe
or
mov
into
sub
scas
test
push
lds
ret
jo
rcll
imul
jno
cmpsb
faddl
jbe
mov
sub
jo
xchg
mov
add
cmpsl
out
push
xchg
ljmp
out
imull
inc
xor
lods
adc
cmc
cmp
adc
aaa
cmp
xlat
and
mov
dec
mov
sahf
dec
jecxz,pt
outsl
pop
sub
inc
mov
scas
gs
lret
je
sahf
push
cmpsl
or
xchg
cli
sub
push
xchg
jo
or
xchg
sbb
jbe
leave
dec
inc
dec
out
push
addr16
sub
leave
data16
mov
xchg
push
cmp
insl
add
cwtl
sub
repnz
addr16
outsl
daa
sahf
pop
xchg
jo
and
pop
aas
add
ss
ljmp
sub
aam
push
add
push
cmpsl
add
xchg
in
lahf
or
testb
push
outsl
ds
rcr
fistps
loopne
push
lds
pop
cmp
jmp
jecxz
cmpsl
mov
cmpsb
cs
push
mov
fcomip
outsl
sahf
pop
leave
jg
adc
imul
nop
mov
sub
and
jo
jno
movsb
dec
into
xchg
bound
daa
pop
mov
stos
jmp
jg
js
and
mov
fbld
call
jge
es
or
pop
mov
inc
repz
push
stc
mov
and
daa
outsb
add
sarb
jno
push
lods
pusha
mov
cmpsl
sbb
xor
aad
push
pusha
into
cmc
sub
sub
mov
and
push
ja
outsb
pop
push
push
xchg
in
jecxz
dec
push
push
addr16
xchg
pop
loope
xlat
mov
mov
jle
in
push
cs
out
pop
mov
xor
faddl
push
insl
inc
dec
xor
inc
xlat
cmpsb
jbe
fxch
pop
sti
in
pop
cmpsl
mov
iret
inc
cmp
leave
xor
xlat
mov
lahf
xchg
jo
add
sahf
or
cmp
push
movsb
fnstcw
dec
xlat
ficoms
les
fsubrp
sub
sbb
movsl
jo
jne
mov
dec
or
das
jecxz
aam
add
sahf
lods
pop
cs
xchg
mov
pushl
sub
and
push
fiadds
push
jnp
scas
xchg
aas
mov
int3
cmpsl
lods
mov
mov
jl
xor
scas
inc
push
xorb
rolb
and
jge
mov
bound
into
jne
clc
ljmp
pusha
popf
ror
pop
pop
xchg
repz
push
xlat
sbb
scas
push
xchg
in
dec
push
push
mov
or
sti
mov
push
movsb
in
cmpsl
fdivrl
jne
xchg
int
aas
push
or
jg
test
sub
pop
cmpsl
push
pop
or
mov
push
dec
lcall
lahf
xchg
out
sahf
data16
gs
mov
gs
cmp
mov
and
jne
fbstp
inc
cmp
inc
jle
inc
cs
pop
mov
daa
lcall
mov
xor
out
pop
aaa
pop
mov
cmp
sub
dec
and
cmp
fisttpll
dec
aam
aaa
outsb
fists
xor
jmp
and
icebp
pop
mov
aas
mov
cs
pop
push
iret
jbe
mov
sti
lahf
pop
aaa
dec
rclb
sub
add
shrb
popl
data16
mov
push
xor
xchg
jle
cmp
cmp
iret
mov
mov
aas
jne
push
dec
jg
mov
jae
daa
aaa
data16
push
pop
ds
loopne
dec
les
bound
mov
scas
pop
and
in
fistps
test
insl
aad
push
lret
cs
jg
enter
pop
dec
add
cmpsb
xchg
outsb
and
xchg
pop
cmpsl
ljmp
sub
pop
inc
push
sbbb
shrb
mov
adc
filds
sub
pop
mov
scas
imul
in
dec
dec
mov
lods
push
mov
lret
add
sbb
xor
pop
jecxz
mov
gs
mov
clc
and
fadds
xchg
in
nop
jg
and
push
add
xor
fbld
push
dec
pop
jno
pusha
sti
ret
jbe
in
fidivl
aad
mov
xchg
aad
lahf
push
roll
mov
xchg
enter
add
xor
leave
addb
xchg
cli
mov
pop
inc
mov
iret
xchg
int
jg
ljmp
xor
gs
jg
int
lahf
dec
xlat
lret
aaa
lret
mov
pop
cmpsl
push
xlat
mov
outsb
push
outsl
pop
iret
and
das
call
push
push
xchg
jb
pusha
sarl
pop
jmp
push
loop
sub
inc
bound
xchg
cs
xor
stc
pop
loope
mov
test
jp
cli
cli
xchg
aas
daa
nop
jecxz
pop
xchg
cmp
mov
push
aam
lods
push
jle
out
subb
lods
aaa
out
in
daa
pusha
xor
aam
loopne
mov
fisubrl
fucom
popa
jb
sarb
cmp
loope
pop
push
pusha
pop
adc
cmp
add
lds
add
in
mov
cmpsb
sbb
fiadds
out
mov
lahf
and
push
and
arpl
mov
test
mov
dec
dec
dec
mov
stc
test
js
push
test
movsb
movsb
push
int
push
push
xchg
or
mov
sub
mov
test
sarl
pop
xchg
pop
mov
orb
dec
data16
addr16
push
mov
push
bound
fwait
imul
ss
cmpb
and
outsl
aam
iret
jne
sahf
cli
les
lds
and
pop
dec
cmpsb
rcll
cmp
das
xchg
dec
test
outsb
cmp
xchg
addr16
or
dec
daa
xchg
cmp
lea
lods
and
jbe
rcrb
vpcomq
jg
add
xchg
cltd
scas
xchg
mov
icebp
push
pop
sahf
loop
iret
push
jo
ja
adc
scas
push
test
sub
push
mov
iret
and
jp
inc
int
mov
in
aaa
pop
jg
push
and
dec
mov
ds
jo
jo
cmp
mov
aas
xchg
xchg
jns
xlat
outsl
inc
dec
mov
mul
sbb
andl
or
cld
sbbb
nop
push
stos
stos
nop
bound
fstl
and
ds
xor
or
das
scas
pop
mov
cmpsb
mov
push
fsubp
and
jle
jbe
iret
jno
dec
mov
sub
pop
jmp
aad
push
jmp
test
stos
in
lahf
sub
push
outsl
push
jbe
loop
daa
cmpsb
mov
js
inc
sahf
js
icebp
pop
xor
pop
iret
clc
nop
xor
sbbb
das
push
xchg
xchg
or
xchg
mov
sbb
stos
add
imul
cmp
jno
cmpsl
sbbb
cmp
sub
push
movsl
cs
xor
adc
idiv
inc
add
mov
jne
mov
xor
and
push
dec
xchg
ficomps
mov
cmpsl
adc
mov
ds
aaa
stc
ja
pusha
loopne
nop
jo
clc
fxam
xchg
es
xchg
mov
adc
mov
into
in
jns
mov
scas
push
aad
aaa
out
pop
jg
push
daa
sbb
push
daa
das
es
dec
lahf
ss
icebp
aaa
daa
fldenv
fadd
in
mov
dec
ds
and
hlt
leave
mov
sub
fnstenv
cltd
test
shll
scas
mov
aad
mov
dec
xchg
cs
loop
pop
cmp
mov
xchg
vaddss
cmpsl
cmp
xor
jle
cwtl
in
into
loop
push
lahf
pop
xlat
cs
dec
fs
xchg
cmp
jo
dec
push
push
inc
add
sub
inc
popl
push
aas
imul
dec
or
pop
adc
mov
out
push
mov
aaa
sbbl
adc
scas
cmp
mov
mov
iret
pop
aad
pusha
rcll
xchg
dec
jo
xor
xor
call
pop
aas
mov
cs
out
push
xchg
addr16
arpl
cmp
xor
cmpsl
push
das
filds
stos
sub
push
mov
push
mov
aaa
data16
pop
nop
fldenv
xchg
out
xchg
es
into
outsl
cli
fimuls
in
xchg
inc
xchg
pop
adc
cmc
push
gs
call
sahf
xchg
outsb
outsl
push
aaa
ffreep
jecxz
mov
pop
mov
mov
and
aaa
gs
mov
xchg
push
outsb
add
dec
dec
imul
lahf
and
sbb
jg
cmpsl
cmp
fiadds
dec
mov
mov
jg
pop
jle
xchg
cmpsl
daa
lahf
shrb
xor
aas
add
xchg
mov
mov
inc
cmpsl
adc
clc
dec
push
outsl
mov
add
mov
dec
das
sub
scas
mov
push
pop
sub
pushf
das
jg
lods
adc
jle
xchg
in
and
call
bound
sbb
push
xchg
ficoms
in
inc
add
test
in
loope
jbe
outsb
mov
pop
jle
push
xchg
pusha
jo
test
es
call
sbb
xor
mov
jmp
xor
addr16
jg
lods
dec
es
xlat
xor
push
sub
scas
scas
pusha
add
dec
fisttpl
into
mov
mov
jb
and
aad
sub
lret
xor
outsl
rcrb
movb
roll
mov
xchg
sub
int
pop
cmp
test
pop
into
lods
hlt
inc
mov
in
aas
and
jg
iret
xor
mov
inc
mov
jb
push
cmp
das
dec
cmpsl
ja
stos
pop
pop
das
push
push
inc
sub
lret
xchg
cli
loope
dec
scas
dec
push
xchg
ds
es
cld
pop
loope
cs
pop
inc
pop
scas
cmpsl
aas
and
scas
sub
push
inc
das
pop
js
mov
pushf
and
push
xor
fimull
fs
xchg
sbb
mov
out
xchg
pusha
fs
add
jmp
cmpsb
mov
dec
pop
enter
dec
sbb
insl
xchg
pusha
nop
pusha
or
push
fs
outsb
fmulp
inc
leave
sbb
push
jmp
inc
mov
lcall
mov
cltd
gs
jb
or
sub
jbe
or
cmpsb
xchg
imul
xor
mov
pushf
pop
pop
icebp
das
lock
xchg
pop
pop
rcll
aaa
ja
sub
xlat
addr16
jge
push
fstpl
jbe
dec
jg
push
and
add
test
mov
pop
enter
mov
adc
rorl
cmpsl
scas
in
pop
jbe
lcall
ss
jecxz
push
jmp
push
shl
daa
lods
add
mov
jle,pn
sbb
pop
cmp
aas
pusha
push
jo
lahf
push
mov
outsb
jno
pop
pop
pushf
mov
sbb
adc
jmp
ss
cmc
cli
aaa
push
test
iret
cmp
add
push
dec
loope
lock
and
add
rorb
test
mov
push
jo
and
dec
xchg
ja
rcr
nop
cmp
adc
jae
into
pop
outsl
mov
or
rorl
lods
mov
inc
jecxz
into
jo
cs
jbe
lods
inc
push
push
imul
push
inc
stc
mov
cmpsb
test
xchg
movsb
es
das
add
mov
dec
rorl
cld
xor
mov
sub
mov
push
or
inc
sub
dec
cmp
mov
sub
xlat
push
push
jg
pop
ja
or
mov
mov
cmpsb
ds
cmp
mov
push
aas
daa
and
and
daa
es
outsl
and
cmpsl
std
adc
movsb
pop
outsl
fistpl
mov
cwtl
inc
adc
filds
iret
sahf
jo
fisttpll
xchg
cmc
xor
rcll
cmp
test
jmp
pop
jno
push
mov
xchg
fisttps
and
ret
dec
sub
rcr
lahf
addr16
ret
clc
in
mov
and
mov
dec
aas
movsl
stc
nop
jbe
mov
xchg
mov
mov
xor
xchg
push
addr16
ja
nop
daa
aas
add
pop
and
push
ss
enter
mov
xchg
push
gs
xchg
repz
sub
das
pop
hlt
scas
mov
mov
xchg
mov
int
scas
inc
pusha
pop
std
rcrb
xchg
sub
mov
into
loope
xchg
dec
push
scas
mov
mov
inc
loopne
call
xchg
ds
mov
jne
fsubrl
mov
add
test
aaa
pop
inc
daa
xchg
iret
ds
dec
lahf
and
jmp
sahf
push
and
ret
leave
mov
sub
lods
lahf
outsb
lcall
sbb
insl
aas
outsl
xlat
repz
pop
and
in
mov
mov
mov
inc
stc
xlat
cmpsb
cmpsl
orb
out
pop
and
mov
sahf
fidivrs
pop
lret
pop
push
pushf
xchg
cmp
dec
push
mov
push
loop
test
pop
loope
mov
jb
push
adc
pop
or
push
in
into
inc
mov
and
ja
mov
loop
dec
sahf
aas
data16
shll
int
cli
mov
add
dec
xlat
lret
sbb
aad
scas
sub
mov
jecxz
xchg
ret
xchg
cs
fcoml
pushf
aas
pop
jns
lds
dec
cmpsl
jns
xor
into
movl
popa
out
icebp
ss
ja
jne
orb
push
icebp
jl
xchg
out
mov
mov
iret
ficompl
movsl
cmp
aam
fsubrp
scas
dec
pop
fisubs
mov
enter
scas
inc
inc
push
arpl
pop
aaa
clc
cmp
lds
lret
popf
sub
mov
push
ficoml
jbe
xchg
cmp
xorl
sub
andb
into
add
pop
and
inc
sub
test
adc
lret
lret
rcrb
mov
pop
mov
scas
inc
jo
fadds
mov
dec
sub
push
pop
or
scas
scas
insl
xor
lahf
inc
pusha
xchg
xor
sbb
xlat
xchg
es
int
fsubp
in
loope
dec
xchg
scas
push
jecxz
cmp
outsb
xor
out
mov
fstpl
inc
dec
in
xlat
scas
sbb
mov
push
sub
and
es
arpl
scas
mov
xchg
ds
fimuls
popf
js
push
popf
sbb
xchg
mov
nop
jno
mov
xor
sti
outsb
pop
cmpsb
in
cmp
js
cmpsb
hlt
rclb
gs
std
cltd
pop
add
pusha
jbe
leave
pop
xchg
pop
jg,pt
iret
xchg
pusha
mov
pusha
adc
repnz
dec
fsts
movb
scas
push
or
out
bound
aas
addr16
mov
into
das
cmpsl
rcll
daa
in
push
pusha
aaa
dec
pop
inc
outsb
add
push
cmp
pop
push
xor
test
loop
scas
push
mov
pop
sahf
pop
scas
in
sub
dec
mov
push
in
pop
ja
mov
xchg
into
nop
call
xchg
and
andl
gs
mov
popl
das
and
pop
enter
push
mov
iret
ljmp
into
fs
push
fsts
int3
aam
jne
pop
xor
mov
out
inc
cmpl
and
push
lds
pop
push
ficompl
xchg
inc
dec
bound
scas
das
aad
ficomps
call
in
push
dec
nop
jle
add
xchg
stos
shlb
fsts
jbe
jo
sub
daa
into
add
fwait
xchg
addr16
dec
mov
dec
sub
push
sub
pusha
sub
ja
int
addr16
lahf
es
mulb
inc
addr16
adc
or
dec
xor
or
jo
push
scas
sbb
fisttpll
ljmp
push
addr16
js
dec
cli
xor
mov
lcall
call
cmpsb
sub
ds
jg
rcrl
mov
sarl
lahf
push
pusha
cmp
aas
dec
fidivrl
sub
push
pop
push
out
pop
aaa
pop
pop
enter
xchg
data16
scas
mov
addr16
xlat
lods
sub
into
mov
xlat
fnstcw
bound
inc
jo
and
cli
xchg
int
mov
sahf
cmp
xor
mov
pop
fiaddl
out
ja
inc
jle
mov
movsb
xchg
lock
add
xor
inc
and
pop
nop
mov
pop
es
fidivrs
xchg
addw
data16
and
daa
pop
out
mov
lahf
sub
sarb
fwait
add
jmp
jns
inc
aas
dec
push
cmpsl
aaa
inc
sti
int
ds
inc
jo
sbb
dec
fstps
push
ficoml
jl
xlat
adc
dec
adc
loopne
fsqrt
push
int
es
or
mov
jle
scas
nop
push
push
pop
addr16
jmp
cmpsl
test
mov
sub
mov
iretw
dec
das
xchg
clc
lahf
push
pop
je
mov
data16
fs
cmpsl
xor
and
popw
outsl
adc
pop
daa
dec
and
iret
lods
add
push
in
data16
mov
gs
inc
pop
add
stc
cmpsl
mov
dec
lret
scas
or
sub
jg
mov
ljmp
push
xchg
aam
cmpsb
pop
lods
add
aad
push
rorl
aas
shrl
push
mov
jo
mov
es
and
cs
pop
aaa
movswl
xor
scas
shrl
dec
out
push
ja
flds
lods
cmpsb
data16
jo
dec
mov
lret
hlt
arpl
and
add
push
adc
pop
pusha
add
pushf
push
pop
nop
and
in
mov
jg
out
fbstp
xor
inc
xlat
shl
roll
fiadds
pop
enter
cmpsb
jl
dec
das
ficoms
mov
es
xlat
addr16
ja
xchg
ss
inc
aas
aad
cmp
and
mov
or
and
fprem1
jo
inc
aas
insl
dec
dec
and
cmpsl
adc
scas
push
push
call
jbe
shlb
xchg
push
inc
xchg
xlat
test
ja
push
cmpsb
pop
aaa
add
xlat
pop
mov
mov
out
sahf
ja
mov
adc
xchg
gs
add
dec
mov
out
pop
mov
inc
daa
fs
or
pop
cmpsb
sub
bound
cmp
outsb
nop
push
std
push
add
pop
mov
es
jbe
mov
scas
and
dec
dec
xchg
repz
stos
jne
ja
and
cwtl
push
inc
push
pop
std
bound
pop
mov
lods
daa
mov
and
mov
push
fs
pop
daa
iret
enter
pop
sahf
pusha
mov
jp
aam
fcomi
es
iret
lock
nop
out
pop
lahf
fmull
sahf
inc
iret
dec
daa
movsb
dec
fnsave
jg
scas
lock
push
or
pop
aas
xchg
and
xchg
das
mov
test
mov
or
mov
test
mov
sbbb
xor
inc
or
dec
push
cmpsb
xchg
sbb
push
inc
iret
mov
or
push
mov
jge
test
jno,pt
inc
xchg
nop
mov
push
call
sub
icebp
fwait
insb
shll
mov
cmpsb
push
push
xlat
adc
sub
stc
test
pop
adc
mov
cmp
jne
loopne
push
xchg
outsb
push
sahf
xlat
xor
scas
pop
pusha
dec
scas
cmpsl
jmp
ret
test
mov
gs
movsb
enter
push
popf
adc
push
scas
jle
or
fs
dec
push
cmpsl
das
cmpsb
js,pn
mov
lock
outsl
cwtd
mov
lds
fmull
mov
mov
in
and
jo
pop
mov
cmp
pop
push
cmp
jnp
xchg
jle
mov
gs
xchg
inc
pusha
inc
loopne
sbb
xchg
fdivl
lea
outsl
xor
nop
or
scas
mov
lds
aas
cmp
sbb
arpl
jle
outsl
push
cmpsl
aas
pop
sbb
xchg
dec
pop
and
enter
lea
and
xchg
into
sub
cmpsl
pop
mov
orl
mov
dec
cltd
aas
sahf
pop
xchg
xor
xorb
xor
ss
sbb
dec
aaa
xchg
scas
iret
push
mov
out
lds
sbb
icebp
jle
je
sbb
cmp
jg
sub
add
ljmp
xchg
es
jns
insb
mov
xor
sub
mov
mov
pop
xlat
inc
addr16
pop
icebp
xchg
adc
fsubs
lock
ds
pop
pop
cli
shll
cmpsb
mov
ret
fldt
fld
mov
sahf
xchg
xor
xlat
int3
cmpb
mov
pop
lahf
scas
scas
jmp
fsubl
xchg
xchg
loop
mov
enter
lahf
cltd
outsl
and
bound
sbb
fnstcw
xchg
push
das
sbb
xchg
and
xlat
cmp
dec
outsl
inc
jo
inc
inc
xchg
xlat
xchg
fidivrl
test
loop
pop
xchg
pop
aas
cs
dec
clc
mov
pusha
jbe
mov
cmp
sub
cmpl
add
adc
lahf
addr16
addr16
mov
sar
in
xchg
ja
push
lcall
mov
pop
popf
das
jns
fimull
pusha
jp
pusha
add
mov
out
pop
push
scas
repnz
push
pop
sahf
and
xor
add
push
dec
jbe
dec
xchg
jo
stc
dec
pop
pop
push
fnstsw
push
push
hlt
hlt
adc
lahf
push
jno
data16
sahf
lea
outsl
cmpsl
dec
lock
ja
push
cmpsl
aas
aad
ss
jle
in
lea
pop
mov
inc
mov
dec
inc
xchg
xor
lods
repnz
out
xor
cmpsl
das
xchg
jmp
dec
sub
mov
das
outsb
mov
cltd
fcomps
loope
daa
inc
dec
sahf
imul
jo
inc
jle
and
mov
pop
add
pop
push
or
cmp
cmpsb
rcll
scas
jo
and
mov
pop
popa
xor
jecxz
dec
mov
mov
js
test
inc
scas
flds
push
dec
sub
or
adc
lcall
scas
push
aad
fstl
push
and
daa
repnz
enter
jmp
out
mov
aam
iret
fsubrl
popf
out
pusha
outsw
xor
insl
dec
xlat
lret
ss
mov
nop
cltd
xor
mov
aad
ja
inc
imul
inc
fbstp
dec
push
imul
imul
xchg
sti
fstl
dec
inc
adc
shl
loope
pop
das
pop
scas
ds
es
xor
xchg
push
outsl
push
cmpsb
aas
lds
jmp
cltd
or
pop
fisttpll
pop
into
scas
loopne
push
int
aas
add
and
mov
pusha
nop
jns
mov
faddp
pop
mov
and
xlat
in
lods
dec
pop
ret
fcmovne
ja
fiadds
xchg
xorb
andb
sub
shlb
pop
dec
test
inc
jecxz
dec
push
es
xchg
mov
push
fs
ja
and
and
mov
mov
xor
fidivrl
ja
xchg
pusha
mov
cmp
loopne
out
ss
cmpsl
mov
ds
jo
scas
adc
vsqrtps
in
lret
adc
push
scas
outsl
gs
shll
xor
mov
inc
sub
mov
movb
dec
daa
mov
pusha
adcb
cmpl
push
dec
pop
xchg
mov
xor
dec
outsl
addb
sub
call
ss
jo
jle
and
lea
jg
xchg
outsl
ja,pn
and
lahf
lcall
pusha
mov
xchg
movsl
jns
push
addr16
leave
jge
push
lds
xchg
mov
lods
mov
stos
fmuls
mov
pusha
into
insl
sub
test
int3
sti
fcmovnbe
xchg
pop
bound
xor
mov
fisubs
dec
outsl
pop
and
aaa
into
dec
sub
mov
cmpsl
shll
cmpsb
xor
aas
mov
scas
es
inc
ds
in
push
ficoms
dec
xor
es
mov
xchg
fistpll
fimull
adc
xchg
test
xchg
fimuls
jo
ret
cs
mov
mov
or
jle
mov
call
outsb
rolb
loopne
bound
push
outsb
gs
mov
xchg
cmpsl
push
cs
cmpsb
jo
into
xor
xor
push
outsb
adc
daa
pop
int3
daa
cltd
fnstenv
push
cmpsb
push
in
mov
jecxz
push
scas
mov
sbb
cmpsl
fs
addr16
xor
repz
sbb
arpl
sahf
pop
and
xor
es
sarl
and
xchg
fnsave
add
clc
jno
ss
scas
insl
push
notb
pop
aam
dec
push
in
push
shrl
jle
mov
and
mov
testl
adc
mov
mov
movsl
xlat
stos
push
ret
mov
ja
std
mov
sbb
jp
jno
aas
push
cmpsl
ja
mov
out
pop
outsb
mov
ret
pusha
ja
mov
mov
dec
movl
add
std
adc
push
ja
xorl
nop
cs
add
je
stc
lahf
mov
xor
roll
or
mov
or
pop
push
pop
dec
inc
pop
enter
push
or
push
xlat
ds
pop
mov
aad
cmpsb
mov
jo
jecxz
pusha
pop
cli
cmpsl
mov
mov
pop
dec
ss
jo
pop
sbb
push
mov
popf
and
int
push
xchg
pop
pop
xchg
inc
and
and
dec
pop
ss
daa
mov
iret
push
mov
mov
pop
daa
popa
xchg
xchg
mov
in
rorb
mov
xchg
fdivl
add
arpl
jns
fildll
push
rclb
ret
adc
cld
dec
add
lea
jns
lds
inc
repnz
dec
jle
mov
mov
pop
sbb
and
and
xchg
cmpsb
ds
jno
scas
mov
push
movl
in
jo,pt
dec
int3
in
mov
or
inc
addr16
repz
mov
ret
mov
dec
mov
dec
ja
push
inc
xchg
cmpsb
mov
xchg
mov
lea
mov
xchg
lahf
pop
pop
aas
ss
jo
add
aaa
dec
andb
jle
xor
pusha
pop
icebp
lahf
and
dec
clc
and
pop
mov
pop
pop
push
mov
cmpl
nop
ja
ds
outsb
jmp
pop
jge
xchg
xlat
mov
call
cmp
icebp
addr16
inc
sub
mov
mov
push
daa
aaa
xlat
jg
sub
fisttps
pop
fisubs
nop
mov
addr16
shl
inc
jg
push
std
lahf
aas
divb
sahf
outsb
inc
pop
iret
ja
loopne
stos
xchg
push
pop
pop
mov
filds
push
inc
push
push
pop
inc
loop
ja
scas
and
push
out
mov
test
mov
fs
mov
dec
ds
stos
push
push
xlat
ror
imul
addr16
add
in
ds
cs
out
dec
jle
rorl
outsb
out
movl
add
frstor
bound
cmpsl
into
aaa
shlb
push
xlat
and
iret
mov
lods
xchg
or
enter
mov
push
cmp
sub
popf
inc
jl
dec
sahf
xor
adc
mov
call
mov
das
lds
mov
js
cmp
mov
or
push
xor
outsl
cmp
imul
daa
pop
loope
jg
dec
pusha
sahf
test
rcll
hlt
inc
pop
xchg
pop
push
in
dec
pop
push
notl
sbb
jecxz
push
inc
dec
pushf
shll
aam
lret
dec
mov
outsl
mov
pop
ret
gs
or
fs
add
pop
xchg
dec
jbe
jecxz
jo
das
pop
sub
clc
outsb
push
subl
pop
fs
outsl
sahf
fs
fbld
jo
rcll
lret
xchg
inc
mov
dec
and
inc
notb
dec
xchg
pop
or
pop
push
ds
shlb
int
cmp
mov
lcall
xchg
xchg
jno
inc
cmp
test
outsl
push
loop
aaa
das
xchg
mov
sbb
mov
push
pop
aaa
cli
lea
out
mov
xchg
int3
in
iret
dec
dec
and
xlat
addr16
inc
popf
and
push
pushw
mov
push
cmpsb
jo
mov
arpl
ja
daa
mov
add
cmpsb
pusha
jno
fidivrl
fwait
addr16
fstl
imulb
sbb
sbb
out
stc
aas
mov
arpl
push
dec
daa
pop
mov
push
test
xchg
mov
pop
jb
test
es
cli
or
xchg
jbe
inc
jg
dec
lea
mov
xchg
cmpsb
add
jo
inc
ljmp
es
push
nop
jno
inc
aaa
je
xchg
push
mov
mov
inc
sub
push
add
into
ds
pop
mov
inc
sub
das
dec
push
xchg
pop
data16
push
xorl
lret
and
test
push
lods
shrl
scas
pop
push
out
clc
mull
mov
ss
add
xor
pop
iret
fisubl
xchg
and
ds
ds
cli
mov
clc
daa
mov
mov
clc
xlat
std
lods
xchg
mov
imul
xchg
jb
out
mov
fs
mov
cmpsl
and
or
jle
push
addr16
daa
mov
shll
fimull
cmp
xlat
lret
rcpps
inc
push
mov
inc
push
nop
pop
lret
fisubs
comiss
divb
or
jg
xchg
push
es
mov
dec
mov
dec
pop
mov
jmp
not
push
jle
cmpsb
sub
aaa
xor
gs
pop
jmp
outsb
mov
mov
mov
pop
inc
ds
shlb
xor
addr16
mov
imul
xor
jmp
mov
mov
idivb
xor
pop
pop
push
pop
cmpsl
popf
or
mov
scas
xor
pop
mov
dec
xchg
sbbl
repz
dec
ljmp
dec
lods
pusha
es
and
enter
pop
sahf
ret
and
lret
scas
dec
mov
cmpsb
iret
cmp
dec
lea
mov
and
mov
cmp
xchg
adc
xchg
lahf
xor
or
add
mov
data16
jbe
mov
rcrl
lcall
int3
mov
pop
cmpsl
xchg
aaa
fs
les
mov
inc
sahf
pop
loopne
push
xchg
sub
push
push
xchg
ja
mov
es
aas
lret
dec
fidivs
idiv
insl
and
inc
mov
insl
bound
movsb
scas
pop
into
push
adc
jle
cld
sub
pop
retw
inc
push
popl
mov
shrb
xchg
js
xchg
xor
xchg
and
shlb
mulb
enter
mov
in
add
fwait
xchg
sarl
int
push
dec
clc
daa
cmpsl
jae
pop
fbstp
mov
push
xchg
inc
bound
jp
sarb
push
test
push
add
loope
mov
jo
lods
mov
cmp
mov
orl
nop
cltd
aaa
sahf
fisubrs
pusha
icebp
xor
xchg
pop
ss
inc
jbe
dec
mov
test
std
mull
cmpsb
pop
cs
ficomps
pop
sub
push
nop
repnz
pop
pop
push
ss
addr16
out
js
push
sti
mov
outsb
negl
ljmp
rorl
adc
je
fisubrl
fidivrs
jns
mov
fxsave
xchg
fwait
mov
fisttps
xchg
pusha
push
jmp
add
mov
outsl
arpl
jp
fisubs
xor
jno
push
int3
and
nop
jl
addr16
xchg
push
sub
and
lahf
inc
imul
scas
and
sub
pop
jbe
fcompl
dec
pop
adc
daa
xor
outsl
iret
movl
jg
ret
push
daa
sub
shrb
xchg
pop
aad
sub
lea
push
lods
mov
nop
sub
mov
mov
out
mov
lahf
enter
inc
inc
enter
out
mov
push
lods
xor
cmpsb
fcmovnbe
test
jnp
addb
xchg
jp
inc
iret
push
jns
fwait
test
xchg
xor
dec
sahf
mov
jne
xchg
dec
jecxz
into
inc
jb
mov
and
jo
xchg
loop
outsl
ja
and
stos
adc
xlat
push
dec
xchg
mov
sub
daa
das
daa
xchg
jle
xlat
pop
lahf
push
jg
mov
daa
mov
es
mov
pop
jmp
mov
jbe
xchg
xchg
pusha
into
outsb
gs
cmpsl
and
fs
pop
repnz
and
xchg
pusha
push
jle
cmpsl
adc
pop
add
aas
cs
and
and
outsl
lret
mov
gs
xlat
pop
and
inc
pop
aaa
daa
push
std
stos
mov
lahf
aad
pop
mov
nop
outsl
dec
dec
ljmp
xchg
push
inc
loope
dec
pop
mov
jo
mov
xchg
es
outsl
iret
push
daa
xor
xchg
sub
data16
ds
leave
out
fcmovnu
mov
lret
outsl
leave
push
das
cmp
fistl
push
add
pop
in
pop
jbe
cmpsb
and
xor
aad
aad
mov
xacquire
xadd
jl
aam
popf
dec
fcompp
dec
loopne
iret
test
mov
ss
mov
test
into
shlb
bnd
xlat
push
mov
sarl
call
out
icebp
test
push
mov
jno
repz
es
mov
push
sub
jbe
dec
insb
ret
push
push
mov
mov
cmpsl
lahf
push
mov
ret
outsb
ja
adc
adc
mov
inc
jle
nop
xor
cmp
gs
jmp
out
iret
dec
pop
stc
sub
pop
aas
xor
mov
xlat
call
es
pop
xlat
xchg
cli
mov
dec
scas
mov
loop
aas
jo
push
push
push
repnz
stc
pusha
scas
sub
mov
sub
aas
pop
inc
mov
arpl
push
aaa
mov
loope,pt
sahf
jg
push
fst
sub
in
bound
xchg
jecxz
mov
loop
jbe
dec
push
ss
stc
mov
xchg
divb
jo
jo
shlb
std
xlat
cmpsl
lods
pop
lret
mov
xlat
and
jo
insb
add
mov
dec
cwtl
out
fbld
mov
bound
xchg
sub
add
add
sahf
and
cmpsl
inc
cmpsl
sub
push
add
mov
push
xchg
pop
ljmp
call
addr16
dec
cs
and
daa
aas
pop
iret
mov
xchg
pop
mov
pusha
pop
es
push
and
outsb
dec
shl
inc
or
loop
daa
nop
sahf
cmpsb
es
adc
js
pop
ds
and
outsb
mov
test
cmp
rorl
clc
mov
addl
cmpb
cs
pop
push
dec
into
mov
sahf
jbe
loop
push
push
push
cmp
ds
std
in
xchg
cmpsl
sbb
pusha
pop
stos
dec
add
pop
movsb
ret
mov
out
mov
daa
pop
testb
xor
and
jmp
xorb
mov
jmp
nop
lea
into
shrl
jbe
push
add
inc
ds
jo
leave
push
xor
cltd
push
ja
es
negl
movsb
add
outsb
dec
jno
lahf
dec
loope
dec
aaa
pusha
jg
call
mov
fisubrs
std
loop
inc
push
scas
iret
ja
addb
pusha
test
aad
dec
cmpsl
pop
fiadds
dec
das
xchg
cmpsb
int
pop
mov
movsl
ja
pop
icebp
mov
cltd
xlat
and
pop
daa
jb
adc
out
push
push
divb
cs
cmpsl
fimull
push
out
add
clc
lock
pop
xchg
aaa
sub
inc
inc
push
push
jmp
cmpsl
ja
leave
dec
xchg
jle
xchg
adc
loopne
fxch
das
iret
xorl
cs
jle
into
inc
push
and
insl
cmpsb
ljmp
mov
jg
jno
dec
std
mov
int
push
mov
scas
mov
cmpsb
gs
inc
lahf
jle
inc
cmpsl
cltd
daa
sti
xchg
ljmp
ds
dec
daa
inc
ljmp
push
sbb
ficoms
pop
xlat
pop
cmpsb
pusha
mov
dec
das
lahf
cmp
mov
sub
aas
fisubrs
push
pop
ja
iret
jo
es
pop
and
xchg
cmp
subl
sub
sub
pop
jle
xchg
ja
and
mov
rcrb
inc
stc
ss
dec
mov
ja
push
xchg
mov
pop
stos
lock
cmpsl
inc
or
push
pop
aas
jmp
xor
jno
xlat
pop
mov
rorl
jns
sub
xlat
mov
push
sbb
int
cmpsl
fidivs
ja
loope
mov
push
scas
fwait
mov
cmc
push
movsb
or
jmp
mov
std
loope
scas
scas
inc
pusha
gs
out
ret
jb
movsb
pop
es
inc
inc
imul
cmp
ret
into
and
inc
jno
push
push
aas
jnp
cmpsl
mov
adc
out
pop
data16
jg
and
sub
aas
arpl
inc
cltd
dec
lahf
xchg
jg
mov
xchg
fsubl
cmp
ret
iret
mov
gs
xor
inc
fldl2t
push
inc
or
loope
fnstenv
fmull
jle
xor
fsubp
mov
pop
xchg
cmpsb
aad
iret
inc
jo
int
lahf
inc
outsl
enter
leave
pop
pop
sahf
popf
mov
mov
mov
and
imul
scas
sbbb
and
cs
cmp
pop
imul
mov
mov
in
push
ds
bound
xlat
xchg
dec
sub
adc
das
ficomps
inc
inc
jbe
out
xor
pop
mov
das
shl
movsl
sub
cmp
cld
xorl
cmpsb
lds
ds
dec
aam
fstps
push
popf
dec
rcll
push
adc
ja
xorb
push
negl
and
addb
adcl
and
insl
fidivs
mov
xlat
dec
nop
fists
gs
push
das
movswl
and
test
pop
addr16
pusha
inc
pop
orb
xlat
in
jno
rcrl
into
add
sub
dec
push
mov
ret
mov
jne
sahf
pop
sub
cmpsl
cs
pop
jl
testl
jb
scas
mov
pop
xlat
aad
cli
out
outsb
adc
leave
cs
test
jbe
and
cmp
or
pop
daa
xchg
dec
adc
aad
push
cmpsl
negb
sbb
daa
imul
outsl
xchg
xchg
mov
ds
mov
add
xchg
int
and
scas
daa
mov
mov
mov
aaa
cmp
dec
movb
outsl
xchg
push
push
into
adc
aas
jmp
addr16
sahf
aam
mov
push
out
sub
cmp
sub
inc
lock
push
scas
inc
cmp
sub
rclb
inc
pop
pusha
clc
mov
dec
fs
adc
xchg
pop
fwait
jmp
xchg
and
add
xchg
cld
mov
jns
xchg
sub
dec
outsl
nop
mov
pop
xchg
xchg
xor
cmp
mov
repz
rolb
add
jmp
lret
rorl
mov
ja
xchg
mov
add
cmpsl
sub
inc
and
iret
inc
push
push
xchg
mov
lahf
pop
daa
shll
mov
jnp
or
push
and
insl
adc
clc
fisttps
push
lds
lds
mov
movsb
repnz
cmp
adcb
mov
pop
jnp
sbb
dec
mov
es
aas
xlat
fimull
shll
pop
inc
jg
outsb
pusha
jbe
inc
xchg
stos
ja
xchg
dec
mov
mov
out
pop
std
adc
inc
push
iret
scas
outsl
jo
scas
iret
test
cmpsl
cmp
call
shrl
fisubs
adc
aaa
push
jle
xchg
dec
popf
sbb
add
test
neg
push
addr16
pop
lds
dec
pusha
es
xchg
sbb
xchg
test
xchg
enter
rcrl
imul
addr16
addr16
jg
and
les
les
test
mov
pop
fnstcw
popf
addl
daa
cmpsb
pop
cmpb
xor
cs
ficoml
dec
sahf
cmp
mov
xchg
cmpsl
dec
fnstenv
add
pusha
aaa
mov
mov
sub
mov
pusha
insl
sbb
jb
fs
adc
dec
mov
pusha
js
cmpsl
lods
add
jo
addr16
bound
jb
bound
int3
push
jmp
mov
aad
push
push
xlat
pop
out
ss
call
mov
iret
add
outsl
movsb
ds
shl
inc
rcll
and
ja
or
dec
ljmp
push
pop
jle
das
fldl
in
outsl
xchg
jp
pop
push
ss
jbe
addr16
call
add
sbb
leave
fnstsw
dec
outsb
push
xor
cmpsb
rclb
fnstenv
sub
add
sbb
xchg
inc
adc
sbb
ds
mov
mov
push
gs
mov
xchg
pop
mov
sub
mov
cmpsb
sbb
pop
and
xchg
mov
pop
pop
cmp
mov
cld
arpl
in
jle
and
lahf
mov
test
lret
inc
das
loop
iret
pop
fistpll
dec
sahf
add
mov
lcall
mov
xor
das
stos
iret
scas
into
gs
xlat
sub
pop
outsl
mov
jle
mov
cmp
and
jg
mov
jbe
push
test
mov
dec
jl
scas
in
repnz
adc
cmpsb
in
outsb
or
push
mov
pop
rorl
mov
aas
mov
dec
xchg
xor
add
sbb
cmp
mov
push
aaa
outsl
jae
daa
jae
int3
data16
push
cmp
push
enter
aaa
fucompp
pushf
loope
sahf
pop
scas
xor
not
ret
repz
outsb
test
clc
push
pop
lds
push
fistps
sahf
jo
xchg
inc
adc
shl
aas
out
xchg
icebp
lahf
mov
jne
and
mov
push
scas
mov
push
pop
xchg
push
push
and
push
push
cmp
jmp
scas
adc
xlat
xor
sub
cwtl
cmp
pop
jg
mov
loopew
mov
push
and
ds
lods
mov
inc
pop
cmp
fwait
mov
add
cmc
sub
fsubrs
and
cmpsl
mov
push
nop
mov
xchg
adc
mov
xor
jg
push
sbb
jno
and
iret
pop
stc
daa
divb
loope
fisubrs
loopne
mov
jae
pop
sahf
mov
fnstsw
jg
pusha
push
cltd
xor
fistl
jo
stos
jp
rcrl
jns
xor
sub
adc
or
loope
fildll
and
push
aas
test
jae
loopne
aad
dec
outsl
xlat
scas
in
scas
push
sbbb
pop
push
mov
mov
stos
stc
push
lahf
pop
cmpsl
addr16
pop
iret
in
mov
ss
jae
pop
fxch
inc
xor
out
or
jg
int
nop
fsubl
loop
lahf
mov
leave
xchg
inc
outsl
outsb
xchg
fucomi
pop
jo
iret
jle
xor
repnz
dec
push
ficompl
mov
stc
mov
jmp
sbb
das
es
xchg
mov
push
lds
pop
mov
loopne
xchg
cltd
aaa
enter
mov
jno
pop
jmp
xchg
add
outsl
ja
pusha
clc
pop
mov
xchg
xor
mov
and
addr16
fmul
mov
lods
es
cmp
and
cmp
fsubl
xchg
and
jb
mov
push
dec
add
dec
xchg
enter
outsb
repnz
mov
mov
sahf
lods
rcr
push
mov
stc
pop
pop
inc
cmc
dec
pop
add
aaa
insl
aas
ja
in
pusha
mov
sbb
add
pop
notl
cmpsl
push
iret
gs
aas
outsb
and
fistps
xchg
dec
scas
movsb
sbb
pop
ja
xor
mov
cmp
push
outsb
cltd
nop
inc
daa
popf
cmp
sub
cmp
push
pop
loop
sub
push
pop
stos
divb
dec
dec
aaa
and
mov
nop
das
es
and
push
and
js
xor
mulb
pusha
jecxz
push
addr16
push
fs
or
adcb
pop
mov
xchg
and
fbld
add
daa
inc
lock
push
cmpsl
pop
pop
xchg
jae
fnsave
push
mov
in
sub
mov
ljmp
test
loope
fistpll
lret
fisubrl
jmp
push
push
into
lahf
inc
sub
data16
ja
nop
push
cmpsb
sub
shl
pop
sub
sub
loopne
xchg
in
lret
jbe
movsb
dec
inc
push
ss
mov
std
lret
pop
pop
ja
pop
sub
mov
into
xchg
jbe
mov
jmp
inc
lds
and
dec
ret
fstl
loop
xor
sub
push
xchg
pop
add
fistpll
sub
jo
lods
insb
daa
stos
dec
outsb
fdivs
into
dec
ss
or
cld
xlat
xchg
fcmovnbe
sub
lds
out
push
xor
into
cmpsb
fs
mov
fs
xchg
jbe
cltd
mov
subb
fs
lahf
push
and
mov
imul
les
test
push
pop
addr16
aaa
xchg
outsb
test
jle
das
call
adc
pop
test
xor
fcmovb
fisubrs
imul
outsl
push
mov
in
xchg
adc
flds
cmp
dec
mov
xchg
xchg
ret
xor
mov
ficoms
mov
es
ja
nop
rolb
jo
push
add
scas
add
decb
mov
mov
mov
add
enter
xchg
mov
or
cmpsl
dec
rorb
xlat
sbbb
in
push
jge
bound
xchg
ds
jno
repnz
mov
cmp
sahf
add
pop
dec
dec
mov
int
jo
adc
xor
in
pushaw
dec
les
jo
mov
inc
scas
push
adcb
ljmpw
into
sub
fistpll
or
inc
mov
lds
xor
xchg
fldenv
stos
push
and
test
fldenv
call
lcall
in
daa
push
aam
in
cs
gs
shrl
inc
lret
in
mov
loopne
jbe
jo
repnz
add
adc
arpl
add
daa
outsb
dec
iretw
icebp
pop
jb
sub
cltd
addr16
sahf
aaa
int3
loop
pushw
aas
lahf
mov
push
mov
dec
lock
cs
adc
or
pop
shll
xor
jmp
mov
or
mov
sub
mov
jns
std
cmpsb
int
push
gs
xchg
mov
xchg
cmp
xlat
cmp
lods
pushf
push
cmpsl
pop
mov
imul
jns
popf
cmp
pop
lahf
fs
daa
pop
cmpsb
jmp
in
push
xor
jg
mov
push
pop
xor
shrl
scas
and
pop
or
dec
in
es
push
mov
outsb
and
and
stc
pop
sahf
stc
mov
inc
and
imul
enter
xchg
push
push
sahf
rclb
int
sbb
cld
and
out
and
icebp
pop
ss
sbb
pop
aad
lret
and
lret
idivb
lcall
fadd
in
adc
add
sarl
fstp
adc
nop
lods
insb
push
dec
aam
clc
pop
test
xor
mull
ret
lahf
ds
mov
je
out
sahf
cmpsl
aas
inc
cmpsb
push
xor
inc
nop
fbld
aam
out
fildl
cs
and
vpmullw
jecxz
mov
es
push
nop
iret
jg
jmp
push
sbb
addr16
jbe
into
pop
cmpsb
inc
sbb
ss
stc
sahf
sbb
push
call
add
lods
std
push
fildll
cs
fsubl
lds
push
movl
das
outsl
push
stos
sbb
in
pop
ss
push
pop
inc
push
stc
xchg
ficomps
repnz
fdivl
pop
mov
iret
sub
lret
gs
fisttpll
pusha
ret
xchg
jbe
jg
mov
pop
outsl
daa
call
mov
xor
pop
je
movl
sbb
aad
ss
popf
mov
ja
repnz
gs
scas
and
es
xchg
push
push
cmpsl
pop
xchg
mov
add
inc
repnz
inc
mov
les
int
and
dec
testb
int
cmp
mov
sahf
pop
sbb
mov
fbstp
xlat
cli
int
mov
xchg
add
or
lods
popf
outsl
scas
fisubs
psrad
sub
cmpsl
aam
iret
xor
and
aam
nop
sahf
lahf
pop
sub
push
call
repnz
mov
cmp
mov
push
xchg
repz
cmpsl
push
testb
pop
lods
pop
outsl
cmp
xlat
cmp
and
push
inc
andb
leave
inc
mov
shll
mov
pop
movl
push
jo
js
xchg
mov
out
iret
nop
fisubs
add
push
jg
arpl
lahf
cmp
mov
repz
test
lahf
fimuls
xchg
pop
iret
jo
cmpsl
sahf
push
pop
cmp
outsl
inc
push
jae
jg
push
cmpsl
cmpsl
fbld
ss
mov
mov
out
lahf
cmpsl
fbstp
jle
out
gs
add
push
shr
jno
pop
cmp
jl
lahf
data16
fstl
mov
and
jo
popf
hlt
leave
adc
mov
mov
pop
arpl
loope
mov
xchg
mov
cli
out
scas
jg
xchg
shl
daa
dec
in
loope
sub
push
sbb
repz
fnstcw
mov
into
lea
jmp
scas
inc
movsl
mov
in
test
ds
inc
outsb
in
sbb
push
push
das
lahf
inc
aaa
jmp
push
dec
out
mov
ss
push
xor
outsb
or
in
cmpsl
sbb
loop
jbe
xor
dec
xchg
and
or
cmc
enter
mov
pop
leave
xor
push
scas
jbe
pusha
outsb
aaa
mov
ss
fs
jge
aaa
mov
dec
add
loop
pop
push
xchg
dec
pop
pop
add
inc
or
mov
xor
fdivs
es
jle
ja
ss
je
push
pusha
xchg
mov
dec
or
pop
sub
aaa
shll
mov
dec
or
fwait
ss
jle
mov
inc
push
nop
add
sub
xor
cmpsl
dec
aas
sbb
into
mov
push
movsl
inc
inc
and
imul
and
pop
dec
xor
cltd
push
and
jno
pusha
lret
jg
xchg
aad
cmpsl
fidivrs
shll
daa
push
mov
cmp
add
dec
stos
pop
and
xor
loop
gs
das
dec
xor
iret
pusha
push
push
mov
xchg
sahf
pusha
incl
xor
pop
pushf
ljmp
ss
mov
rcll
jle
or
popf
mov
dec
inc
mov
ds
pusha
cmpsl
jmp
pop
dec
mov
fisubrs
push
jbe
sbb
inc
into
inc
outsl
iret
dec
cli
lret
mov
addr16
inc
rclb
iret
or
dec
inc
push
daa
push
sbb
and
mov
xchg
and
pop
adc
cltd
rcrb
imul
push
out
mov
add
pusha
loop
push
outsl
dec
or
push
cmp
movsb
out
lock
mov
and
in
jno
xchg
jecxz
ds
inc
lahf
enter
daa
cmp
sub
push
mov
mov
xchg
mov
and
and
lret
orb
cmp
es
add
mov
aaa
scas
adc
push
dec
pop
adc
lret
imul
stos
ror
push
push
xchg
push
into
ja
pop
lods
dec
push
aaa
mov
xchg
xchg
or
mov
cmp
stos
jle
bswap
ss
idiv
mov
lock
xchg
dec
nop
icebp
xchg
dec
inc
sbb
aas
jg
lret
and
pop
add
bound
xor
es
int3
leave
mov
cltd
mov
pushf
les
enter
adc
ds
mov
orl
in
xchg
mov
jo
pop
adc
lock
push
fsub
outsl
adc
test
out
inc
push
movsl
scas
mov
rcr
mov
into
ja
mov
mov
push
and
xor
xor
or
push
pusha
push
jns
cmp
mov
push
inc
fmuls
lahf
leave
clc
mov
imul
push
scas
lret
cmpsb
leave
xor
lret
enter
cmp
addr16
or
xchg
enter
movsl
aaa
shll
cmpsb
pop
jl
and
xchg
scas
xchg
pusha
lods
xor
je
jno
daa
push
push
jo
push
xchg
ds
push
sysexit
mov
negl
stc
xor
add
mov
xor
lea
sti
mov
dec
or
aad
xchg
test
ja
das
cmpsl
and
pop
sbbb
push
aad
mov
je
sbb
imull
push
nop
push
push
mov
mov
mov
mov
adcb
push
push
add
add
push
gs
mov
lret
inc
mov
adc
lret
and
xorb
xchg
cli
fbld
cmpsl
xchg
cmpsb
xchg
mov
iret
incl
mov
sbb
sbb
bound
outsl
dec
mov
jge
xchg
out
stos
fwait
pop
jmp
scas
jp
iret
dec
cmpsb
jnp
mov
push
outsl
mov
push
jne
faddp
stos
lahf
fldt
lret
lret
cmc
xchg
outsb
jle
gs
movsb
inc
push
cli
lcall
nop
movsb
mov
xchg
cmp
addr16
into
aam
in
jbe
jmp
push
rol
lret
push
fstl
pop
pop
iret
and
xchg
test
dec
outsb
or
fcomps
outsb
aad
arpl
mov
loope
cmp
scas
divb
pop
or
pop
or
mov
push
data16
scas
scas
push
jmp
sbb
xor
mov
inc
leave
rcll
sub
jbe
cs
dec
nop
mov
add
push
scas
mov
push
std
iret
push
and
mov
xor
outsl
das
adc
daa
jecxz
xlat
dec
ss
add
outsb
xor
pop
dec
es
push
daa
jae
or
xchg
cmc
pop
popf
iret
push
mov
adc
outsb
xor
test
inc
and
ds
stc
fidivrs
daa
adc
aaa
outsb
mov
pop
inc
fisubrs
xchg
mov
mov
and
push
lahf
pop
xor
push
pusha
decb
pop
sub
sbb
xchg
and
pop
jg
pop
inc
nop
insb
xchg
aad
xchg
or
pop
and
mov
push
adc
in
push
cmp
dec
xchg
std
testb
stos
dec
push
ljmp
ss
frstor
dec
push
and
jg
xchg
addr16
daa
pop
lock
xchg
fisubrl
stc
sbb
jbe
inc
sub
or
das
fidivrl
fisttpl
add
cmp
add
inc
enter
sub
dec
xlat
movsl
dec
daa
xchg
loopne
xchg
lret
outsl
cmp
ss
or
imul
push
aas
popf
and
nop
xchg
inc
fistpll
push
xor
aam
cmp
div
inc
xchg
leave
mull
add
jle
js
in
nop
into
addr16
add
bound
push
gs
pop
cmp
je
adc
fucomp
xchg
push
hlt
ret
addr16
cmpsb
push
add
daa
lahf
xor
ret
mov
jnp
orl
les
and
dec
jne
nop
mov
hlt
mov
mov
add
pusha
xor
rep
into
ret
push
mov
xlat
cli
pop
leave
popf
pop
cmp
icebp
mov
sahf
mov
cmpsl
pop
jmp
outsl
xchg
push
sub
push
cmp
cwtl
jb
and
xor
movsl
mov
sahf
xor
bound
jp
mov
push
dec
fwait
jb
rorb
inc
es
xchg
into
push
jmp
jnp
jg
outsl
push
cmpsl
inc
mov
xchg
mov
mov
pop
push
in
ja
es
pop
dec
imul
stc
lds
ss
test
pusha
and
test
imul
inc
cmp
push
push
fcmovnbe
push
cmc
inc
pop
jg
icebp
fistps
cmp
and
dec
dec
or
mov
fsub
xor
jg
loopne
inc
push
ja
fadd
sarb
inc
mov
xchg
movsb
push
inc
std
lcall
js
addr16
lcall
les
out
xchg
mov
insl
pop
push
loopne
icebp
test
jb
bound
or
aad
pop
push
mov
inc
dec
cmpsb
add
inc
mov
neg
jl
inc
dec
push
test
mov
ret
add
mov
mov
rcrl
xchg
hlt
stos
sub
addb
lock
das
pop
push
cmpsb
fisttps
scas
mov
std
inc
and
imul
loopne
addl
push
ja
jg
jp,pt
xchg
and
mov
enter
jns
fisubrs
adcb
js
mov
add
jno
dec
in
pushw
xchg
aaa
sub
xchg
add
dec
jle
loope
and
push
mov
daa
push
in
sahf
ja
lret
ja
xlat
inc
insb
out
outsl
mov
in
jo
stos
and
push
cmpsl
jg
pop
fistpll
and
jbe
mov
stc
xchg
pop
movsb
aaa
adc
sahf
inc
mov
add
popf
mov
mov
sub
daa
pop
iret
mov
inc
stc
into
mov
inc
pop
and
or
dec
sahf
loopew
das
dec
xchg
xlat
jne
call
in
outsb
pop
xor
into
add
mov
aas
dec
xor
sti
dec
cmc
mov
inc
pop
lahf
outsl
lods
xor
fadds
xchg
cmc
outsl
or
push
mov
mov
xchg
mov
and
and
sahf
xchg
aas
es
es
iret
cmpb
push
aaa
pop
sub
fisubl
jmp
pop
mov
add
mov
push
inc
nop
or
pusha
aas
jb
pop
loopne
lock
mov
decb
dec
mov
jo
iret
div
xchg
daa
ja
gs
xchg
cmp
pop
push
out
inc
dec
fiadds
loop
daa
cmp
push
dec
dec
outsl
insl
divb
mov
insl
or
cmc
inc
in
cmp
pop
mov
scas
push
xor
outsb
or
mov
push
pop
mov
sbb
jle
cmp
add
dec
es
shll
and
in
mov
mov
mov
inc
pop
mov
push
lock
jl
repnz
pop
iret
outsl
ficoms
cmp
and
out
aad
lahf
xchg
mov
out
loop
pop
inc
ss
lcall
enter
inc
cmpb
inc
pop
ficomps
push
or
ss
stc
call
stc
inc
xchg
push
in
leave
test
into
pop
push
daa
jb
add
pop
pop
add
pusha
cmpsb
fiadds
sub
lahf
test
es
jae
push
incb
push
mov
xchg
xchg
ficomps
repnz
cmp
subl
inc
xchg
cld
bound
add
cmpsb
mov
dec
mov
es
pop
pop
xorb
cmpsl
movb
enter
mov
or
mov
pop
pop
pop
mov
into
xor
ss
or
fbstp
out
cmpsl
jbe
push
scas
add
push
xlat
xlat
pop
sti
test
xor
mov
mov
mov
lock
mov
ror
pop
sbb
push
dec
loop
jbe
data16
fwait
arpl
cmp
push
cmc
dec
aaa
les
cmp
sub
pop
scas
push
lahf
fbstp
pusha
lock
lock
xchg
mov
call
pop
cs
push
icebp
jbe
ss
inc
fidivrs
xchg
pop
pop
mov
cs
sarb
jb
ljmp
push
dec
fcmovne
sbb
in
jne
negb
mov
int
popl
pop
xchg
inc
pusha
sahf
notl
xchg
shll
frstor
push
scas
jl
daa
rcrb
dec
mov
and
in
daa
xor
shlb
jne
push
sbb
dec
pop
cmpsb
cmp
mov
adc
aad
push
dec
cli
lret
in
sub
cwtl
lock
loop
jbe
xchg
jg
dec
dec
loop
daa
sahf
push
pop
negb
push
pop
cmp
ss
in
xchg
pop
sbb
into
cmp
es
mov
cmpsb
cli
je
repz
aaa
jbe
push
xlat
push
pop
imul
loop
es
fisubs
push
add
arpl
pop
xchg
mov
xchg
xor
xchg
in
jbe
and
jno
pusha
sub
call
xlat
cmp
push
jno
inc
in
pop
aaa
es
and
pop
xlat
gs
xor
daa
dec
pop
cltd
add
jo
push
out
aaa
mov
xchg
xor
daa
xor
xchg
in
pop
dec
gs
aas
pop
sbb
mov
les
lret
lock
xor
inc
jae
mov
xchg
jb
inc
aaa
xchg
ss
dec
lahf
jo
dec
jecxz
cmpsl
push
inc
sbb
pop
mov
push
in
jne
aaa
iret
mov
mov
aam
data16
into
gs
mov
xor
inc
xchg
push
mov
repz
ss
push
sbb
inc
aaa
addr16
pop
testb
xlat
fimull
hlt
outsb
fimuls
cs
push
out
fidivs
add
jo
and
pop
mov
das
js
push
xchg
or
push
lea
cmp
lds
jg
outsl
or
das
jne
in
push
lahf
inc
mov
sub
push
es
xchg
aas
xor
mov
shll
inc
inc
pop
scas
pop
cmpsl
daa
push
inc
loope
outsb
xchg
push
fisubs
addb
aaa
scas
xchg
rcl
sbb
push
loop
pop
push
scas
iret
push
inc
aas
cli
pop
inc
xor
rcrb
jecxz
cmp
pop
mov
or
cs
and
aam
jne
cli
in
jbe
xlat
movsb
dec
out
and
call
sbb
add
inc
dec
and
aas
aad
scas
push
scas
out
xchg
fldcw
jo
xchg
mov
mov
mov
shll
xlat
push
jmp
push
lods
out
jb
ja
mov
mov
fldl
push
fistps
sub
jp
not
lret
lds
mov
cmp
push
lods
lahf
aam
fwait
cmpsl
cmp
jmp
out
aas
pusha
mov
lret
rcll
iret
les
pusha
dec
push
push
movl
dec
adc
ss
daa
mov
push
fs
fdivrl
push
mov
xor
clc
dec
scas
std
pop
in
jo
add
test
push
jge
inc
fsubl
mov
pop
into
pop
push
jne
subb
subb
test
scas
jp
arpl
inc
bound
andl
mov
cmp
test
jg
jo
imul
xor
fwait
push
loope
and
inc
ja
lahf
push
cmp
xlat
pop
daa
add
fs
int3
insb
clc
cmp
ja
pop
jae
loopne
fimuls
scas
fsubp
call
push
imul
jg
pop
das
stos
mov
and
cmp
nop
rcll
cltd
cmp
mov
mov
xchg
cmpsb
dec
sbb
es
fdivp
sahf
mov
mov
sbb
dec
xchg
lods
adc
aad
fisubs
iret
addb
stos
pop
ljmp
xchg
enter
pop
fnstenv
pusha
push
ds
movl
pop
lods
and
outsb
aam
adc
add
mov
aam
pop
addr16
add
xchg
cltd
jmp
sbb
nop
push
dec
mov
push
push
cmp
adc
fcompl
mov
call
jle
xchg
mov
cmpsl
add
adc
fidivs
jne,pn
repz
dec
mov
mov
fcomps
jo
jg
in
pop
dec
mov
scas
ja
push
test
push
jle
pusha
addr16
outsl
push
xlat
cltd
popa
jne
sahf
scas
pop
xchg
add
jo
shll
and
xor
xchg
xor
xchg
divb
adc
sahf
push
inc
sbb
jbe
push
cmpsl
push
fnstsw
pop
xchg
mov
aaa
jge
mov
jae
cmp
or
mov
push
adc
adc
mov
popw
lahf
popf
out
add
xchg
sahf
sub
push
push
scas
jmp
mov
dec
testb
dec
add
add
push
add
out
aas
xchg
fisubrs
dec
outsb
lods
sub
lods
aaa
sbb
mov
es
je
out
lret
movsl
test
jmp
pop
mulps
cmp
adc
pusha
lods
out
cmp
push
sub
jo
pusha
outsl
mov
jmp
xchg
cmpsl
sub
jno
popa
js
hlt
sarl
aad
jbe
lea
frstor
jmp
adc
scas
mov
xchg
push
xchg
scas
gs
jnp
jnp
out
das
loope
xchg
into
mov
pop
scas
push
push
in
push
test
adc
ja
popf
nop
cmpsl
aas
insl
inc
jno
das
dec
sbb
push
outsb
dec
jns
jle
hlt
and
sub
jg
xchg
lock
dec
sub
add
push
adcl
int3
jnp
add
aas
pop
inc
in
data16
outsb
cmp
push
aad
xor
scas
dec
aas
insl
aad
mov
lahf
mov
pop
push
mov
pop
pop
pop
aas
mov
icebp
ss
mov
jno
add
jae
andl
dec
cmp
or
repnz
sbb
data16
jecxz
cs
shlb
push
jg
into
add
push
xor
ds
addr16
and
and
scas
xchg
inc
jmp
pop
ret
negb
jno
pop
enter
mov
dec
push
add
and
es
xlat
inc
push
fs
add
dec
adc
scas
testl
ds
mov
mov
cs
in
fldcw
repz
or
int
mov
int
mov
adc
xor
clc
dec
addr16
sub
push
cwtl
and
rorl
lahf
shll
das
and
xchg
mov
push
mov
nop
aad
mov
mov
subb
lods
sbb
pop
add
pop
das
fwait
ds
pop
js
jne
fimuls
push
xchg
dec
jle
stos
call
inc
leave
xlat
outsl
jg
into
cmp
pop
fs
push
scas
fs
ljmp
mov
outsb
jle
scas
dec
push
loope
inc
inc
xchg
loopnew
mov
sbbl
jmp
or
or
push
dec
jo
aad
fiaddl
lock
pusha
push
aaa
pop
dec
jle
cmpsl
lods
daa
jmp
push
cltd
xchg
adc
pop
in
imul
add
add
add
inc
insb
call
cmp
xor
es
stos
fnstenv
jg
shll
fbstp
lods
outsl
and
scas
jmp
add
dec
jmp
push
addr16
push
aaa
pop
adc
outsl
lock
pop
je
mov
xchg
xchg
xor
xor
mov
inc
add
inc
xchg
imul
pop
pop
scas
cld
ret
pop
inc
mov
inc
cmp
jo
pop
ljmp
xchg
iret
int
test
scas
ss
movsl
add
test
mov
ja
ror
push
pop
push
loop
pop
xor
push
adc
test
pop
inc
dec
add
scas
lret
movsb
hlt
dec
xchg
iret
mov
pop
das
aas
dec
push
shll
mov
add
pop
pop
pusha
in
mov
daa
inc
gs
addb
mov
repz
lods
lahf
dec
dec
mov
jg
push
cmpsb
pop
pop
xchg
sbb
in
mov
fildll
jbe
sarl
cld
clc
aaa
or
mov
ljmp
call
inc
cs
pop
adc
adcb
xchg
lock
xchg
pop
movsb
scas
lods
loop
aaa
xchg
daa
and
push
push
mov
hlt
cmp
negb
jbe
scas
popa
xlat
and
jae
stos
xchg
stc
das
sub
xchg
enter
pop
cwtl
xchg
mov
or
mov
icebp
push
add
jmp
pop
xlat
adc
sti
call
push
dec
jmp
pop
ficomps
mov
out
xchg
pop
and
cmpsl
jle
dec
push
in
ja
sbb
push
nop
pop
inc
aam
adc
jne
mov
jecxz
inc
int3
push
mov
leave
dec
sahf
pop
push
jle
xchg
sub
daa
pop
xor
cmp
mov
xor
pop
sbb
push
xor
cmpsb
sub
inc
xlat
cmpsl
push
push
mov
mov
xchg
loop
cmpsb
xlat
ja
stos
push
inc
pusha
mov
cmp
jbe
dec
mov
iret
sbb
cwtl
pop
cld
nop
and
dec
push
sub
rcll
push
xchg
add
shrb
sti
pop
ss
and
aaa
test
stc
shll
call
iret
daa
repz
sub
cmp
xchg
fnsetpm(287
outsb
dec
jg
dec
cmp
push
scas
xlat
aad
addr16
int3
xchg
cmp
xchg
lods
fstpl
out
out
pop
cmpsb
mov
shlb
loop
xchg
add
imul
xchg
dec
aaa
mov
leave
and
pop
cmpsl
xchg
xor
cmpsl
dec
lahf
push
js
mov
inc
repz
mov
xchg
or
mov
push
mov
cs
fnstenv
dec
das
pop
xchg
inc
es
in
bound
jne
push
push
lds
setle
dec
pop
es
push
and
mov
loop
mov
dec
iret
mov
daa
pop
addr16
clc
das
xchg
pop
test
xchg
mov
cld
xlat
push
inc
xchg
mov
pop
data16
loope
ja
cmp
push
and
jb
popf
xchg
mov
pop
jp
dec
pop
mov
xor
into
mov
es
ljmp
xchg
pop
sub
and
notl
fs
cld
xlat
leave
fwait
push
inc
xchg
scas
addr16
push
inc
insb
add
daa
mov
or
out
xchg
pop
push
push
shll
xchg
or
mov
mov
lea
rcll
insl
add
notb
xlat
and
jl
adc
in
pop
xchg
jns
jmp
or
repnz
lods
add
push
adc
ja
jmpw
mov
popl
push
push
mov
inc
dec
xchg
into
adc
xlat
cmp
xor
xchg
inc
cmpsl
mov
lods
cmpsb
fcoml
pop
jg
cmpsl
push
push
push
call
js
or
leave
jb
push
cmpsb
jge
outsb
mov
dec
add
and
insl
call
scas
pop
ss
daa
hlt
cmpsl
lret
testb
sub
jmpw
push
mov
test
mov
push
or
xchg
push
lahf
xchg
and
aas
add
loop
sub
and
iret
data16
add
mov
pop
push
nop
xchg
or
into
ds
aas
lret
outsb
cli
xor
incl
jb
imul
outsl
std
iret
les
xchg
pop
inc
nop
push
jne
jbe
sub
lea
into
int3
movsb
inc
inc
daa
jb
cmp
mov
sub
shll
loop
inc
cmpsb
scas
mov
dec
ds
jge
pusha
addr16
mov
push
mov
pop
aaa
imul
loop
lahf
xchg
pop
xor
dec
gs
cmp
imul
adc
ja
scas
pop
inc
or
push
pop
jbe
je
pusha
pop
scas
fs
in
gs
inc
addr16
popf
mov
jae
ss
push
xchg
mov
iret
xchg
ds
ss
outsb
pop
add
enter
repz
push
jle
add
mov
cmp
cmpsl
pop
cs
adc
or
push
js
push
dec
mov
pop
pusha
sub
push
fildll
and
ja
in
xchg
xorb
ds
lahf
jbe,pn
mov
es
in
aaa
scas
outsl
jbe
std
pop
cltd
xor
add
es
aas
cmp
scas
enter
sbb
fs
ds
pop
cmp
call
push
dec
ret
outsl
aaa
jns
and
dec
xor
fs
stos
fwait
inc
push
mov
inc
addr16
pop
fbstp
into
dec
cmpsl
pop
mov
and
push
push
xchg
push
push
xchg
cmpsl
pop
mov
sub
out
add
push
push
pusha
fbstp
cmpsb
nop
xchg
fs
pop
mov
pop
jbe
aad
xor
lcall
fsubp
pop
inc
cmp
sub
ss
outsl
or
add
lahf
fisubl
rol
xlat
cmpsl
orl
mov
xchg
leave
mov
jmp
sbb
bound
and
fnstcw
arpl
pop
out
sub
jb
mov
jmp
bound
rcr
mov
xchg
stos
dec
scas
pop
mov
push
ret
lcall
inc
mov
and
xor
sub
out
inc
inc
xor
inc
pop
ds
pop
out
add
addr16
int
stc
mov
je
mov
daa
outsl
or
movsb
pop
or
xchg
lea
movl
test
mov
cmpsl
test
adc
repz
xchg
jnp
adc
addb
xchg
jo
ds
rol
aam
cli
mov
cld
mov
inc
je
jecxz
es
mov
mov
xor
orb
dec
adc
mov
gs
push
push
xor
ss
mov
push
scas
push
mov
jge
dec
icebp
ficoml
fsubl
aaa
mov
pop
pop
cmp
sub
test
gs
push
nop
out
ss
popf
stc
jle
xchg
push
inc
fisubs
scas
hlt
mov
jge
add
inc
dec
int3
push
iret
mov
cwtl
pop
push
aaa
sbb
pop
inc
cwtl
fs
and
jmp
xor
sub
shrb
xchg
pop
fbld
cmpsb
pop
jmp
mov
jg
in
test
xor
push
aam
call
es
push
pop
xor
fcoms
lret
add
push
xchg
mov
arpl
xor
mov
push
imul
jle
addr16
iret
cmp
dec
push
mov
stos
mov
pop
cmpsb
xchg
aad
xlat
int
addr16
pop
push
ds
mov
push
nop
mov
jne
cmpsb
xor
jge
add
xlat
or
mov
outsb
mov
pushf
and
xchg
mov
xchg
popl
lret
into
outsl
mov
sub
mov
pop
jge
cltd
lahf
cs
ja
adc
add
push
jbe
mov
popf
adc
mov
add
xchg
adc
push
enter
pop
jne
jecxz
pop
cmc
xchg
les
fwait
stos
test
rcrl
jns
add
sub
lret
outsb
add
sahf
add
mov
inc
sbbb
out
mov
and
enter
fs
cmpsb
aas
push
xor
cmp
sbb
psllq
ret
mov
movsl
xlat
inc
inc
mov
add
sbbl
and
add
insl
mov
js
push
jmp
ds
mov
xchg
sti
pop
sbb
ds
jmp
je
inc
xchg
mov
and
sarl
mov
outsl
jg
cmp
pop
cmpsl
jo
xor
mov
into
pop
mov
push
dec
dec
cmp
sahf
xchg
shlb
inc
pusha
outsl
push
shll
lahf
mov
lds
fsubr
scas
jge
push
dec
and
sub
dec
mov
adc
sub
inc
jno
data16
sub
push
add
daa
in
in
dec
iret
outsl
and
add
ds
dec
outsb
push
insb
fnstcw
cs
mov
pusha
mov
pop
adc
jecxz
ds
lods
jno
je
mov
es
jbe
push
adc
push
ljmp
dec
ja
lahf
lods
pop
pusha
data16
aaa
sahf
pop
mov
xchg
das
inc
dec
mov
pop
xor
pop
inc
xchg
xlat
cmp
jbe
dec
and
ja
daa
outsl
in
fists
add
jae
into
lret
mov
fnsave
jle
inc
cmpsl
shll
es
sahf
pop
jg
mov
xlat
push
data16
xor
mov
jmp
inc
jb
pop
sahf
into
mov
ficoms
xchg
in
inc
cmp
xlat
outsl
dec
lods
push
sub
aas
iret
xlat
out
mov
lahf
jo
insb
in
das
mov
and
dec
mov
and
in
dec
sbb
scas
cmp
gs
cmp
inc
pop
inc
sbb
mov
inc
mov
shl
movl
xchg
cltd
mov
pop
cmpb
jbe
jmp
jle
and
and
mov
and
loop
cmp
popl
jno
mov
les
das
shl
aaa
or
add
int
ds
push
add
aaa
cmpsl
cmp
adc
xor
dec
xor
lods
ret
mov
daa
test
xchg
aam
push
outsl
fildll
sahf
mov
pop
out
xorl
pop
gs
xchg
dec
test
outsl
fwait
movl
push
pop
inc
daa
enter
mov
lahf
repz
mov
jmp
pop
imulb
mov
inc
add
xor
add
mov
mov
sub
push
add
pop
pusha
push
push
fdivl
mov
push
mov
push
call
scas
push
xchg
sub
into
popw
int
xchg
ja
ret
movsb
pop
lea
cmp
pop
jl
hlt
ret
das
pusha
inc
int
xchg
insb
xchg
outsl
call
add
std
in
xchg
jnp
das
imul
xchg
mov
outsb
push
in
push
inc
out
shrl
push
ja
push
out
xlat
jb
mov
push
fisubl
jb
leave
xchg
addr16
xlat
pop
lds
test
mov
in
inc
push
and
pop
pop
jle
xor
cmp
xor
out
xchg
dec
mov
dec
push
iret
pop
scas
mov
pop
es
push
icebp
hlt
jno
push
in
ja
xor
xchg
xchg
dec
fisubs
lret
call
xor
sti
fld
and
movl
mov
into
xchg
or
mov
rcrb
push
mov
cmpb
inc
sub
mov
jbe
mov
pop
pusha
dec
push
sahf
push
push
pop
mov
inc
xlat
jns
push
rclb
mov
cmp
sahf
data16
das
xchg
in
es
mov
lcall
test
jnp
mov
aaa
xor
outsb
pop
ss
dec
xchg
mov
cs
inc
jae
add
scas
push
daa
mov
es
clc
enter
outsl
dec
jbe
or
ficoml
scas
push
stc
test
push
inc
out
jg
in
push
jle
lahf
xchg
jl
cmpsb
dec
add
ds
xchg
es
sbb
stos
or
pop
push
cld
push
ficompl
loope,pt
jle
dec
nop
xchg
icebp
lock
ljmp
pushw
fisttpl
xlat
inc
jbe
cmpsb
jb
cltd
xchg
sub
es
sahf
jg
bound
and
pusha
jbe
inc
imull
pop
push
loopne
out
mov
ja
xchg
int
inc
jge
out
ds
test
dec
adc
call
pop
addr16
dec
lahf
enter
jo
insl
pop
aaa
in
xor
mov
into
jbe
push
stc
aam
mov
or
ss
std
mov
push
xchg
hlt
pop
ds
or
mov
dec
mov
pop
fimuls
test
inc
jbe
inc
cmp
cltd
stos
xchg
stos
jo
sbb
inc
xchg
lds
adc
add
push
loope
scas
jg
pop
cmp
rorl
push
js
int
pushf
jle
pop
cmp
cmp
into
hlt
push
loope
inc
es
pop
daa
add
push
jmp
jecxz
xchg
add
cmpsl
adc
adc
push
mov
cmpsb
push
push
xchg
insb
add
push
push
out
jle
fisubs
test
inc
shrl
xlat
xchg
and
push
ret
xor
pop
xlat
push
fidivs
push
les
aaa
add
pusha
jle
sahf
pop
cmpsb
push
pop
outsl
in
xlat
dec
and
test
cld
and
outsb
fbld
aad
daa
popf
mov
ja
mov
enter
mov
jmp
enter
mov
jo
loopne
dec
push
jno
and
stc
xorl
mov
inc
into
cmp
aad
xchg
stc
in
sub
xor
inc
fs
and
aaa
and
sbb
xchg
out
nop
lahf
cmpsl
iret
scas
xchg
shrl
xchg
outsl
mov
adc
mov
mov
fidivrs
and
and
movd
jl
inc
clc
mov
pop
inc
jle
and
xchg
dec
ja
shll
fistpll
scas
sbb
mov
es
pop
mov
dec
fisttps
ljmp
cmpsl
push
in
pusha
push
ss
sub
data16
mov
add
fistpll
aas
push
cmpsl
push
cmp
push
in
rcrl
xlat
cmpsl
push
mulb
in
inc
mov
xlat
dec
and
nop
push
push
pop
inc
pop
and
push
dec
or
ficomps
ret
jb
inc
cmp
into
xchg
push
je,pt
scas
add
daa
jbe
dec
mov
adc
and
mov
mov
inc
rcl
fisubrs
out
push
mov
mov
pusha
aad
pop
mov
fbld
dec
push
in
dec
in
pop
mov
and
pop
inc
inc
xor
ret
std
bound
ja
and
rcr
in
jmp
mov
mov
data16
sub
add
mov
xlat
sti
fstl
lahf
mov
popf
adcb
sub
std
cmp
data16
dec
xor
loop
adc
nop
pop
pop
aam
iret
pop
mov
in
mov
out
xchg
xchg
pop
sub
cmpsl
movb
cmpsl
xchg
cld
shll
and
push
push
cwtl
jecxz
mov
push
cltd
nop
pusha
imul
push
mov
xlat
lea
sbb
data16
mov
lods
or
cmpsl
inc
pop
or
inc
cmpsl
mov
addr16
lds
jne
pusha
pop
ja
pusha
scas
stos
icebp
mov
push
dec
cmpsl
lret
mov
fcoml
pop
mov
add
jo
fidivs
cmp
daa
xlat
and
jbe
cmp
das
mov
and
and
notb
es
cld
arpl
and
outsb
cmpsl
cmpsb
xor
lcall
push
aaa
scas
fiadds
pop
pushf
popf
ficomps
mov
idivl
and
dec
gs
fldcw
pusha
xchg
ficoms
xorl
pop
das
dec
and
mov
pop
pop
add
mov
inc
nop
cmp
cmc
dec
push
cmp
mov
and
cltd
sarl
jle
popf
addr16
cld
shl
lret
sbb
out
das
es
ret
cmpsl
aaa
int3
add
sub
xchg
insl
into
xchg
sahf
out
fbld
cmpsl
push
outsl
outsb
test
cmpsl
leave
dec
daa
dec
arpl
push
mov
inc
fcoml
push
outsb
push
orb
inc
out
aaa
xlat
and
push
cmp
dec
pop
int3
pop
sahf
xchg
and
aam
fcompl
es
xchg
sbb
and
push
das
lahf
lods
popa
adc
inc
rcl
jle
out
iret
sahf
inc
fprem
xor
inc
pop
imul
stc
cmp
mov
and
pop
mov
inc
ss
les
mov
ja
test
jmp
test
sub
fisubrs
lds
cmp
lret
jbe
inc
leave
cs
fisttpll
pushl
jbe
mov
lods
push
push
push
xchg
jne
std
jb
mov
data16
into
dec
dec
bound
outsl
das
stc
mov
popf
sti
aas
add
ds
cmp
sub
outsl
iret
cmpsl
cmpsl
out
xor
cs
xor
xchg
outsl
aas
sub
insl
gs
sub
imul
push
pop
pop
cmpsl
bound
daa
or
mov
popf
mov
cmp
imul
das
dec
push
add
mov
imul
nop
xor
inc
ss
mov
enter
or
fs
dec
jle
pop
push
mov
shrl
iret
xchg
and
push
stc
jo
scas
sbb
sahf
add
mov
leave
sub
inc
hlt
push
pop
cmpsb
xlat
repz
jbe
dec
push
or
inc
xchg
xlat
mov
stos
out
push
xchg
es
fcmovbe
fmulp
stos
sub
add
mov
pop
jo
lret
xchg
and
inc
xchg
dec
mov
pop
lret
sbb
add
in
and
add
sbb
push
movd
and
mov
sub
andl
popa
xchg
dec
jp
sbb
ja
adc
es
mulb
iret
dec
fstpt
icebp
cmpsl
andb
add
or
pusha
pop
ja
fnstenv
lret
inc
adc
nop
aas
jecxz
ds
aam
sub
push
xchg
inc
iret
in
mov
push
movl
ss
mov
testl
xchg
arpl
xchg
dec
lock
jns
push
xbegin
pop
sbb
aas
mov
fstps
repnz
enter
daa
pop
and
push
pop
pop
ja
mov
nop
es
push
add
pusha
out
lahf
mov
aaa
leave
xchg
pop
data16
push
jg
push
pop
cmpsl
push
pop
push
cmpsl
pop
xchg
ret
xchg
insl
outsl
es
xchg
push
push
lcall
aad
daa
sti
call
mov
jns
jmp
gs
stc
jle
fistpll
adc
out
sub
push
fisubs
mov
lods
adc
pop
inc
xor
call
push
pop
xchg
sahf
leave
jmp
mov
sub
mov
rol
inc
xor
sub
test
pop
sub
jne
jg
push
fisubl
pop
outsb
add
mov
xchg
stos
jmp
mov
push
xchg
arpl
push
in
pop
xchg
daa
fdivl
xchg
or
repnz
adc
lock
es
aad
jbe
and
cmp
loope
dec
mov
mov
sbb
jle
pop
dec
or
inc
xchg
jge
pop
sti
rol
xor
fwait
pop
xchg
jbe
mov
inc
inc
jecxz
xchg
dec
out
push
outsb
in
fisttps
push
dec
xchg
add
and
ret
pusha
pop
pop
xchg
fwait
xor
inc
inc
lahf
bound
cmpsb
pop
sahf
mov
fistl
into
xchg
xlat
dec
pusha
in
outsb
scas
push
pop
iret
inc
or
inc
sahf
int
dec
jno
outsl
nop
xchg
jns
inc
aam
jg
mov
cmp
cmpsl
sub
add
cmpsl
xlat
and
cs
sub
fs
push
mov
outsb
push
inc
xor
scas
push
hlt
in
cmpsb
mov
pop
notl
xchg
inc
subb
cmp
cli
push
scas
push
leave
fidivrs
and
mov
xor
mov
xchg
fldt
and
cmp
add
ds
inc
inc
push
cmc
enter
xor
jns
push
xor
repnz
aas
iret
ljmp
into
jg
scas
es
pop
push
sti
xchg
in
sahf
outsl
pusha
out
xor
les
in
xchg
nop
aad
push
into
insb
dec
ds
or
cmp
mov
mov
loope
cmpsl
xchg
ss
pop
iret
xchg
lahf
test
ficoms
push
int3
sahf
pop
scas
mov
adc
xor
mov
dec
sbb
cmpsb
dec
popl
push
xor
ja
fs
push
test
frstor
or
adc
daa
nop
cmp
ds
fnsave
mov
mov
mov
sub
jg
neg
pop
aad
jo
and
in
pop
cmpsb
adc
scas
into
xchg
adc
sub
xor
in
pusha
mov
pop
rcl
xchg
xlat
lea
cld
adc
fldenv
lods
das
pop
mov
jbe
mov
dec
fdivrp
shll
push
std
ds
aaa
outsb
fildll
sub
mov
sub
mov
mov
aas
xchg
pop
insw
scas
sbb
cs
xchg
xlat
jg
repz
inc
pusha
and
lret
ret
dec
sub
push
xchg
call
inc
fnstcw
mov
xlat
or
push
push
imul
ds
gs
and
jle
dec
push
addr16
xchg
ja
daa
daa
mov
xchg
sarl
xlat
mov
idivl
add
inc
es
out
sahf
adc
out
sarl
in
ss
and
xchg
pop
sub
pop
leave
pop
sar
dec
int
push
jg
into
sub
dec
ds
pop
scas
mov
das
ss
dec
outsb
pusha
out
leave
repz
in
test
pop
das
dec
outsl
mov
xchg
stos
aaa
arpl
ds
jmp
lahf
adc
ret
pop
rcrl
call
dec
pusha
fbstp
loopne
adc
loopne
call
outsb
inc
test
iret
jo
ja
lods
mov
lods
xor
cmpb
jmp
xchg
out
mov
pop
and
cmpsl
fisttps
popl
push
add
xchg
xlat
cmp
fyl2xp1
inc
inc
lds
sub
fs
hlt
add
pop
pop
dec
fbld
enter
push
mov
out
leave
fs
mov
xchg
das
aad
push
fistpl
daa
scas
add
test
les
ljmp
es
push
jno
pop
jl
sarl
mov
imul
cmpsl
cmpxchg
sub
mov
pop
cmpsl
jbe
pop
test
scas
idiv
test
jmp
rorl
inc
sub
sarb
and
and
int
xchg
das
nop
xor
dec
jns
sahf
outsl
push
dec
test
push
mov
jb
inc
cli
adc
aaa
mov
pop
dec
jle
inc
or
inc
fildll
xor
sar
mov
dec
sbb
dec
or
sahf
xchg
int3
xchg
pop
mov
mov
outsb
pop
ja
sahf
fisubrs
subb
add
out
xor
jbe
cmpsb
xchg
mov
jmp
jb
arpl
dec
pop
mov
push
scas
outsb
jbe
cmp
xchg
push
xchg
lods
xor
mov
es
ss
sbb
stos
sbb
iret
nop
push
test
inc
mov
gs
call
xor
popa
je
aad
movsl
add
lahf
cmp
inc
enter
inc
sub
into
in
aad
inc
xor
mov
or
jg
xor
scas
push
inc
mov
lret
and
jle
pop
pop
movsl
and
fisubs
call
jg
xor
leave
lea
aaa
and
loop
inc
pop
fisubrs
lahf
outsb
pop
pusha
cmp
hlt
add
jne
pop
xchg
nop
dec
pop
addb
aaa
outsl
xchg
fldenv
push
mov
into
notb
sub
pop
mov
mov
jle
inc
ss
stos
and
nop
flds
inc
rol
fisttpl
lock
xchg
stc
pop
es
push
lahf
aad
jae
mov
ret
test
lds
ja
ret
ret
xchg
mov
test
enter
das
addr16
pop
outsl
xsha1
cmpsb
or
cli
loop
jbe
pop
iret
push
es
pop
cmpsb
mov
mov
xlat
out
pop
fmull
sbb
jo
mov
ja
push
cmpsb
dec
xchg
sub
addr16
mov
sahf
leave
adc
cs
cmp
push
jp
xchg
addr16
pop
add
cmp
rcr
pop
mov
jns
clc
cmpsb
mov
inc
push
push
outsl
jne
add
push
inc
cmc
dec
dec
repz
lods
mulb
ja
gs
cmp
and
mov
mov
sahf
cs
pop
push
outsb
xchg
inc
push
push
nop
fildl
mov
es
lahf
jns
jne
ljmp
add
ja
fbld
ds
enter
roll
xchg
jg
shrl
mov
das
jge
inc
dec
add
sub
mov
or
in
pop
xchg
testb
ds
lret
lahf
add
sbb
pop
dec
movsb
enter
pop
mov
lea
out
cld
or
jbe
sbb
dec
jns
xchg
pop
jne
push
pop
insl
xchg
cs
addr16
ds
xor
add
ds
inc
fbld
pop
sbb
mov
repnz
lahf
xor
or
push
push
js
clc
mov
add
inc
push
pop
sahf
inc
stc
push
outsl
xchg
sbb
or
gs
scas
fisttps
push
mov
jne
jg
shll
mov
sarl
mov
push
sub
aas
xchg
xor
idivl
scas
or
jg
add
mov
inc
pop
pop
pop
xchg
in
jb
sub
mov
popa
out
lahf
iret
pop
sub
jo
push
fnsave
jg
cmp
xchg
push
xlat
mov
fidivl
movsb
cmc
icebp
sbb
pop
lahf
leave
and
fisttpll
outsb
xchg
in
pop
cmp
enter
xchg
aad
xchg
mov
or
pop
cmp
addl
pop
jne
dec
pop
inc
bound
mov
lods
mov
adc
sub
xor
or
cltd
inc
lahf
sub
fstpt
cmpsb
pop
outsb
mov
clc
adc
cmpsl
daa
fistl
pop
jae
xor
xchg
mov
lahf
aad
mov
xchg
jno
cmpsl
push
xor
ss
push
scas
xchg
push
dec
pop
std
insl
pop
das
xchg
sub
inc
push
dec
add
dec
inc
call
push
push
jg
mov
xor
pop
ja
loopne
shrl
pop
cmp
clc
ds
push
and
jg
adc
push
and
pop
mov
daa
idivb
repnz
adc
add
shll
popa
fisubs
data16
mov
roll
xlat
jmp
adc
ds
push
icebp
stos
test
sahf
call
xor
xor
aad
and
xchg
jge
add
aaa
sub
xchg
lret
xchg
lcall
xlat
dec
lods
fsubrl
mov
sub
daa
pop
bound
xlat
ja
mov
mov
xchg
push
scas
cs
adc
dec
mov
mov
imul
in
bound
test
fisubs
fistpll
pusha
mov
push
movsl
cmpsb
pop
mov
clc
xchg
inc
jo
push
jb
addr16
lds
jp
roll
sahf
mov
adc
dec
jb
outsl
push
in
mov
lahf
inc
pop
into
aaa
xlat
out
ds
addr16
gs
push
push
jo
pushf
sbb
lea
andl
xlat
dec
nop
mov
sub
imul
push
inc
data16
add
insl
pop
xlat
cmpsb
inc
movsl
pusha
inc
push
scas
pop
mov
or
js
sahf
pop
push
cmp
xchg
aas
mov
adc
into
push
and
ret
rclb
addr16
push
mov
fdivp
outsl
ja
out
pop
cs
push
add
mov
or
mov
pop
mov
hlt
sbb
pop
xor
and
lret
xlat
arpl
aas
pop
leave
lahf
into
ja
cmpsl
out
addr16
scas
daa
push
mov
addr16
iret
aam
call
push
sub
xor
push
push
ret
data16
push
xchg
into
sub
ret
bound
gs
inc
mov
arpl
jbe
and
pop
push
xor
pop
ljmp
cs
jg
fs
inc
push
jbe
cmp
pop
mov
and
shrb
scas
faddl
rolb
popa
mov
add
jmp
pop
rol
mov
dec
pop
insl
inc
js
sbb
ja
sub
push
dec
insl
and
icebp
add
daa
aaa
dec
and
aas
inc
adc
and
je
shl
cmpsb
xchg
jo
jmp
and
js
repz
sahf
ljmp
shrb
lret
outsb
iret
adc
dec
and
pusha
xchg
ljmp
push
mov
addr16
xchg
repz
cmp
mov
es
xor
jmp
inc
dec
fcoms
sahf
cmpsb
push
xor
les
pop
fdivr
les
xchg
out
sub
pop
fiadds
fs
mov
push
data16
daa
push
cmp
icebp
pop
xchg
fldenv
aas
pusha
pop
into
ljmp
inc
sahf
ds
jg
push
inc
daa
rcll
jg
and
push
pop
sub
inc
xlat
es
fistps
mov
cmpsb
pusha
outsl
push
out
xchg
and
in
daa
stos
mov
nop
xor
xlat
add
add
push
js
xchg
ss
test
ss
and
xchg
push
lock
das
hlt
stos
add
push
dec
aaa
rorb
jno
mov
imul
in
mov
fs
ljmp
xchg
mov
or
cmpsl
add
cmp
sub
lret
mov
jo
outsb
xchg
fidivrl
aas
loop
xor
cmpsb
dec
push
mov
xchg
cmp
or
fnsave
xchg
ljmp
inc
and
sub
in
jbe
push
scas
xchg
stos
mov
push
cli
xor
push
mov
aad
cmp
add
sub
dec
ja
cmpl
xor
out
push
dec
clc
fsubr
jne
push
pop
leave
xchg
outsl
jg
dec
or
sahf
inc
fisttps
push
xchg
das
ds
mov
pusha
jle
cmp
outsl
fsts
sbb
lret
aas
jecxz
pusha
ds
ja
pusha
xchg
and
call
and
and
outsb
lea
mov
xchg
xor
icebp
mov
pop
outsb
test
cld
divl
mov
mov
jmp
pop
xchg
pop
mov
lods
fdivl
ds
in
xor
leave
xchg
cs
pushf
ss
and
scas
es
testb
dec
dec
fiadds
addr16
inc
test
insb
mov
mov
pop
stos
push
data16
sbb
dec
fiaddl
dec
xchg
lahf
es
gs
inc
sbb
test
in
ss
xchg
sbb
dec
mov
pop
mov
pop
mov
jno
into
dec
xchg
frstor
dec
inc
nop
stc
jg
outsl
push
movsb
pop
lret
push
ljmp
call
xchg
ja
into
mov
movsl
mulb
jne
inc
fcomps
jg
lret
popa
lret
test
loopne
xchg
mov
mov
jecxz
das
pop
es
jle
into
sahf
fldl
addr16
cmpsl
int3
enter
pusha
flds
nop
xchg
call
pop
mov
xor
add
cmpb
inc
fldenv
push
xchg
inc
in
xchg
mov
nop
pusha
inc
add
addr16
cmpsl
xchg
stos
inc
xchg
fisubs
mov
and
xlat
mov
mov
popf
testb
xchg
xchg
pusha
and
sub
es
jo
addr16
ficoms
pop
pop
jb
xchg
jo
mov
test
dec
daa
outsl
add
loop
push
scas
xchg
fildll
add
inc
mov
or
mov
mov
push
xchg
inc
and
pop
out
test
cmp
enter
cmp
or
push
push
in
das
sub
mov
test
pop
pusha
push
repnz
jns
daa
xchg
cmp
pusha
iret
push
imul
mov
daa
cmpsl
scas
stc
dec
aas
rcrl
xlat
movsb
lahf
inc
cmp
cmpsb
dec
mov
jle
xlat
jno
xchg
cs
dec
push
out
ret
push
cmpsl
fstpl
pop
rclb
jbe,pt
sub
mov
pop
into
fists
scas
inc
lods
rcr
pop
mov
inc
pop
subb
rclb
jp
push
ja
mov
nop
fidivrs
sub
scas
cmp
loop
lahf
mov
jns
pusha
rol
inc
dec
add
dec
popl
push
mov
inc
xor
dec
jne
jmp
fs
imull
xchg
push
mov
cmpsl
ficoml
sahf
scas
daa
inc
in
jbe
mov
xlat
jecxz
push
add
rol
mov
addr16
xchg
xor
ja
outsl
xor
push
fimuls
xchg
xchg
aad
mov
imul
push
das
mov
pop
das
data16
ja
sbb
aas
outsl
andb
rcl
push
xchg
movsb
mov
pop
scas
jns
pop
sbb
clc
addr16
dec
inc
nop
aad
iret
in
xchg
mov
xchg
mov
fmulp
in
jg,pn
add
dec
mov
mov
sarb
push
repz
gs
outsl
cmp
xor
mov
jb
ficomps
cmpsb
xchg
add
es
fcmove
mov
jle
mov
or
pop
xchg
add
fs
cmp
fbld
and
cmpl
mov
ja
sub
xor
outsl
xchg
pushf
scas
daa
cmp
pop
lret
pop
mov
jecxz
ss
ja
or
and
outsb
inc
dec
cmp
and
scas
sahf
jbe
jbe
sub
add
daa
jle
jo
movsb
sub
xchg
test
data16
movsb
ja
aaa
ljmp
inc
mov
sbb
inc
enter
dec
xchg
push
sbb
inc
mov
push
ficompl
inc
loopne
out
and
daa
scas
push
add
push
data16
jecxz
pusha
ja
lahf
cmp
ds
outsb
cmp
cvtps2pd
jb
inc
das
xchg
push
xor
adcl
je
out
push
addr16
cwtl
xchg
mov
ss
adc
fisttps
nop
xchg
xlat
dec
das
iret
cli
lcall
sub
pop
push
xchg
fists
pop
adc
roll
inc
leave
clc
cs
repnz
test
cmp
mov
pusha
push
inc
push
add
into
xchg
or
scas
xchg
xchg
push
jg
shrl
push
xor
insl
fs
cmpsb
pop
leave
mov
xlat
push
out
outsl
mov
mov
es
cmp
jle
mov
and
xor
xchg
jae
inc
xchg
mov
inc
cmpsb
sahf
sub
dec
adc
xor
fldcw
int
nop
aas
loope
xchg
sub
inc
or
das
bound
arpl
into
sub
iret
push
aad
cmpsb
fsubrp
dec
aad
jo
cmp
ljmp
add
xchg
mov
int3
stc
sub
lea
pop
fs
das
add
iret
lods
popf
cmp
mov
stc
xchg
mov
mov
or
test
xchg
lahf
push
scas
adc
aad
lahf
pop
fimull
pop
gs
rcll
popf
insb
cltd
mov
mov
mov
sub
data16
mulb
aad
cmc
cmpsb
movl
lahf
cld
rolb
push
jnp
inc
cmpsl
inc
xor
adc
cmp
imul
sbb
dec
add
xchg
clc
mov
xchg
pusha
jle
lahf
ds
mov
mov
fxch
sahf
call
dec
jae
das
xchg
aaa
and
mov
dec
xor
leave
int3
or
mov
push
add
xchg
fucomi
ja
repz
jo
sub
gs
in
fdivrp
pusha
repz
out
outsb
jle
pop
aaa
cmp
movb
and
popf
xchg
mov
mov
mov
nop
scas
ficoms
data16
mov
addr16
stc
pop
inc
and
mov
and
js
inc
loop
das
sahf
ds
rcll
outsl
push
ret
mov
pop
mov
cmp
lock
push
xchg
icebp
mov
mov
jg
jno
nop
mov
xchg
insl
pop
dec
stc
pop
mov
es
aaa
daa
cmpsb
cli
mov
dec
ficoms
sbb
dec
and
outsl
sahf
inc
out
mov
js
fs
loope
mov
sbb
cmp
push
mov
pop
mov
data16
push
outsl
notl
fcmovnu
and
add
push
mov
xchg
rcll
pop
adc
leave
cld
inc
daa
hlt
int
aaa
out
out
cmp
es
shll
xlat
and
iret
stc
scas
dec
outsl
xor
leave
push
scas
out
push
into
gs
pop
inc
xor
jbe
outsb
push
inc
andb
mov
jne
jne
add
cwtl
pop
sahf
loope
pop
iret
jbe
inc
pop
fbstp
mov
es
fs
icebp
scas
mov
push
jle
adc
inc
push
add
cmpsb
push
and
pop
pushf
scas
pop
movl
inc
mov
lret
sbb
aam
mov
dec
push
fs
enter
push
aaa
sbb
cltd
jo
lahf
sahf
insl
jb
pusha
pop
fs
ficomps
call
stc
jbe
xor
imul
test
or
add
test
leave
cmp
shl
inc
fisubrs
out
jno
lods
ss
xor
lock
mov
xchg
addr16
xchg
lahf
gs
enter
xor
fwait
in
std
pop
xchg
mov
sbb
or
mov
xchg
stc
mov
push
scas
orl
mov
cmp
iret
dec
mov
ss
out
inc
insb
pop
xor
fsts
mov
inc
call
lahf
fidivrl
es
xchg
and
mov
test
int3
mov
dec
xchg
push
test
mull
sub
mov
and
mov
das
dec
jecxz
xchg
cmpsl
mov
pop
arpl
dec
adc
movsl
adc
out
fbstp
sarl
into
push
and
mov
sbb
pusha
repz
sahf
fisubs
mov
mov
xor
xchg
shr
daa
jmp
outsl
push
xor
dec
and
repnz
xchg
or
lods
inc
push
sbb
imul
addr16
xor
sbb
je
mov
add
lds
mov
test
inc
add
push
adc
js
cmp
jno
nop
in
jg
dec
sub
push
ja
fisubrs
mov
sbb
insl
adc
scas
lea
push
jnp
arpl
sub
outsl
xchg
lods
in
push
push
xchg
jbe
push
es
push
mov
daa
add
scas
cmpsl
pusha
dec
pop
inc
loopne
push
call
popa
cmpsb
xor
cmpsl
out
scas
cmp
dec
dec
add
cmpsl
ret
icebp
nop
sahf
adc
cmpsl
mov
xchg
push
dec
push
fildll
or
ss
das
mov
aas
outsb
leave
idivl
xchg
sarl
in
mov
add
fbstp
sahf
popl
dec
clc
aaa
mov
je
xchg
lret
cmp
icebp
adc
dec
mov
mov
aad
pop
cmp
pop
outsl
inc
shr
ret
pop
mov
nop
outsb
dec
es
sahf
dec
insl
cmc
aaa
mov
mov
das
scas
push
mov
dec
xchg
cmpsl
lahf
pushf
data16
gs
arpl
mov
mov
mov
add
aas
add
daa
jg
dec
xchg
push
inc
xchg
xchg
aaa
fldcw
cmp
es
lahf
xor
sbb
adc
addb
and
pushf
dec
scas
into
cmpsb
and
mov
fs
fisttps
mov
cmp
repz
pop
ds
add
cmp
lret
js
aad
inc
jbe
pop
test
push
cmp
mov
xchg
inc
sbbb
je
shl
mov
outsb
mov
pushf
test
pusha
pop
gs
fmull
data16
scas
scas
pop
xchg
aad
outsb
add
dec
stos
pop
sub
dec
rcr
xchg
inc
cmp
sbb
scas
push
out
pop
inc
into
adc
cmpsl
mov
xchg
call
es
fists
push
dec
mov
cmp
filds
push
xchg
rcrl
adc
in
lret
aam
xchg
xlat
push
jg
jns
xchg
jae
rorl
push
push
int
data16
xlat
pop
mov
int3
push
inc
aad
jle
fldcw
xchg
cmpsb
mov
arpl
add
pop
sahf
sar
mov
repz
das
xor
push
mov
lahf
int3
daa
and
xchg
and
hlt
daa
pop
aad
std
fsts
in
cmp
cmp
sti
mov
popw
movsl
fistps
mov
mov
scas
or
jns
jae
sub
cs
addr16
daa
or
inc
aaa
jo
dec
and
mov
pop
or
filds
and
and
dec
cltd
es
ja
ljmp
imul
add
push
outsw
mov
and
push
and
test
sub
addr16
daa
lret
ss
scas
mov
mov
cs
icebp
outsl
mov
scas
push
mov
aad
mov
xchg
push
mov
push
jle
sub
gs
in
pushl
jbe
clc
lahf
add
add
pop
xor
xchg
cs
ja
out
pop
movb
cwtl
loop
xchg
daa
outsl
push
jbe
push
pop
orb
shl
out
push
aaa
pop
xchg
enter
in
pop
inc
push
bound
insb
icebp
addb
test
pusha
and
cmp
outsb
sbb
imul
nop
ss
inc
das
jbe
mov
inc
fisubs
sub
vpmacsdd
ret
push
mov
rcl
mov
mov
cmpsl
lea
ja
movsl
in
icebp
or
xchg
mov
dec
bound
test
gs
pop
push
sub
into
mov
and
sbb
xchg
push
iret
xchg
fprem
outsb
dec
jecxz
mov
repnz
adc
push
push
cmp
mov
push
into
icebp
adc
cs
fadds
mov
dec
dec
ret
xor
rorl
mov
imul
outsl
lahf
dec
sub
stc
jg
xchg
mov
add
jbe
ja
push
cmp
push
loope
aaa
dec
xchg
scas
push
xor
adc
das
fs
pop
enter
sub
lds
push
ja
mov
mov
pop
xchg
xlat
xlat
data16
sti
mov
xchg
dec
mov
adc
pop
add
pop
into
ja
jecxz
movb
data16
lahf
dec
jg
testb
insl
mov
xchg
jg
cmpb
daa
or
pop
dec
adc
jle
rorl
xchg
xchg
dec
mov
fiadds
inc
sbb
jp
jmp
jecxz
filds
sub
inc
xchg
mov
fsubrs
dec
ror
ja
outsb
icebp
xchg
ss
push
fisubs
sahf
mov
cs
xchg
jle,pn
cld
and
in
push
outsb
pop
cmc
rorl
dec
daa
pop
cld
leave
aaa
inc
inc
ja
pop
push
stos
lret
xchg
pop
push
imul
mov
inc
bsr
cld
jns
inc
mov
repz
mov
lahf
jbe
jno
xchg
mov
mov
dec
or
adc
dec
ror
loopw
aas
sub
and
inc
add
mov
divl
lret
cmp
mov
pop
das
loopne
stos
in
rcll
sahf
rcl
lahf
sbb
push
push
outsl
ficoml
cmp
fldenv
arpl
bound
and
xchg
loope
push
push
pop
cmp
js
xor
std
push
insb
pusha
lret
push
pop
ss
dec
sbb
out
sub
sub
repnz
xlat
xchg
sbb
cwtl
cmp
popf
aas
vxorps
dec
sarl
xor
jns
xor
out
cmpsb
inc
push
cmp
inc
xor
xchg
cmpl
push
daa
xchg
fisttps
mov
ror
mov
fisubrs
jmp
jg
lods
jns
push
cmpsl
and
xchg
repz
mov
push
scas
mov
jl
xor
push
xchg
xchg
mov
mov
ja
mov
imul
sbb
cmpsb
ds
inc
out
divb
loope
sub
scas
fsubrp
cli
lahf
sub
nop
cs
sbb
push
push
jbe
addr16
aaa
shll
xlat
outsb
push
dec
out
push
scas
xchg
xchg
ds
fisttps
out
iret
mov
aas
xchg
mov
xlat
mov
gs
into
pop
sub
jbe
add
dec
dec
iret
push
in
stos
aas
adc
in
push
sbb
jo
dec
andb
xor
ja
dec
daa
and
and
push
inc
and
sarl
and
leave
push
daa
ja
inc
add
inc
into
iret
rolb
mov
aaa
dec
stc
ret
sbb
cltd
xor
sub
xlat
jmp
sub
ret
call
pop
xchg
add
data16
fldenv
fiadds
dec
in
scas
xchg
inc
iret
pop
pusha
mov
or
or
test
ja
mov
mov
aaa
icebp
mov
pop
mov
pop
out
outsb
pusha
mov
mov
test
out
sbb
call
jmp
push
call
movl
xchg
push
imul
fs
mov
loope
addr16
outsl
mov
test
cmp
scas
lods
mov
jae
pop
cmp
mov
fldenv
and
in
pop
inc
out
mov
pop
iret
mov
mov
int
cmp
arpl
cli
xchg
mov
js
xor
mov
inc
shrl
mov
or
push
push
daa
rcl
inc
push
scas
lods
cmp
movsl
jne
icebp
xlat
in
adc
hlt
aas
mov
and
inc
inc
into
push
lock
cld
data16
lds
cmpsl
push
cmpsb
cs
loop
ja
inc
push
js
sub
adc
test
pusha
and
movsl
cmpsl
sahf
testl
rolb
adc
fs
xor
pop
cs
mov
cmp
daa
sub
ss
lahf
dec
and
aaa
inc
sahf
mov
and
sahf
pushf
mov
pop
cld
clc
and
jno
es
mov
ja
outsb
push
ss
push
js
or
adc
add
fcmovne
cmp
mov
add
out
push
xchg
das
pushf
pop
mov
push
add
mov
aas
loop
fildll
mov
fwait
pop
or
push
ja
dec
adc
rcr
mov
movb
fdivrl
addr16
ficoms
sub
jg
push
cs
not
aaa
fsubp
pop
pusha
xchg
and
fisubrs
xchg
fistps
push
pop
insw
shrl
sub
xchg
jbe
xor
mov
xor
sbb
jg
mov
in
jle
sahf
jmp
and
dec
pop
bound
leave
xchg
movl
push
daa
push
adc
mov
push
dec
gs
cmp
lahf
pusha
imul
iret
xchg
pop
jo
ret
xor
fisttps
fdivp
push
pop
jbe
pop
inc
pop
mov
push
pop
and
jp
dec
cmp
not
inc
daa
iret
pop
xchg
jbe
aad
sbb
push
shl
nop
xchg
push
pop
pop
mov
bound
pop
fsub
xchg
jmp
stos
and
sbb
pop
cmpsl
mov
jg
cmpsl
scas
push
jo
rol
dec
ret
int
loop
pusha
dec
imul
sub
popf
leave
stos
loop
cmpsb
outsl
pop
cmpsl
sahf
jg
xor
rcr
fcmovnbe
lahf
pusha
fwait
pop
rcr
or
mov
mov
popl
repnz
and
in
cmpl
pop
mov
push
mov
dec
adc
pop
mov
jg
nop
lahf
decb
arpl
sbb
sahf
mov
shl
iret
gs
push
pop
lods
pop
xor
pusha
repz
cs
inc
movsb
xchg
mov
insl
std
xor
push
into
push
filds
xchg
fmulp
inc
xchg
and
mov
mov
push
lret
imul
push
in
inc
pop
enter
jecxz
push
mov
cmpsb
out
sarb
and
dec
aaa
loopne
sub
cmpsl
xchg
mov
adc
in
dec
dec
fisubs
mov
inc
ja
pop
stc
xchg
loop
dec
nop
mov
addr16
xlat
fiadds
fildll
fadds
jmp
mov
cmp
fs
push
adc
aaa
leave
lahf
xchg
mov
ss
loopne
sti
lahf
lods
je
nop
mov
test
mov
dec
scas
jb
loope
es
pop
faddp
push
lea
push
pop
insl
push
push
fists
push
iret
dec
outsl
into
adc
out
jbe
push
xchg
out
inc
or
insb
lret
fisubrs
and
popf
outsb
fnsaves
in
dec
add
daa
icebp
push
xchg
nop
cmp
push
push
xchg
jno
cmp
fisttps
fsubrp
sub
pop
es
daa
in
clc
mov
push
cwtl
andl
inc
pop
push
inc
lret
insl
cmp
leave
mov
dec
mov
cmp
mov
xor
and
lahf
add
add
xlat
xchg
enter
shlb
ja
lds
jbe
add
jmp
inc
outsl
push
push
xor
shll
data16
adc
mov
sahf
das
pop
int
xchg
data16
fmul
aas
xchg
and
adc
dec
imul
jno
es
data16
cmpsb
scas
hlt
shll
pop
in
mov
dec
mov
or
insl
mov
add
fsubs
jbe
cmp
movsl
daa
mov
cs
and
pop
push
mov
xchg
sbb
xchg
mov
mov
sbb
xchg
cmp
pop
jle
mov
or
sub
aad
mov
aad
push
pop
xchg
xlat
sub
shrl
xlat
inc
pop
aad
es
clc
addr16
lret
enter
sbb
fldl
pop
pop
es
loop
fisttps
xchg
mov
cmp
sub
jle
or
dec
and
pop
cmp
mov
pop
scas
xor
push
gs
mov
into
mov
cmp
inc
push
cmp
jg
pop
sbb
dec
js
add
ficomps
loope
outsl
addr16
sbb
pop
in
insl
sbb
and
and
xchg
jmp
fisubrs
mov
push
push
pop
fldcw
xchg
test
jecxz
push
sahf
push
test
cmpsb
sub
mov
clc
xchg
pop
out
xor
fdivp
loopne
xchg
fcmovnb
cmp
pop
jbe
int3
push
or
cmpsb
stc
popw
push
enter
xor
pop
fbstp
lahf
xchg
xchg
popf
jo
clc
andb
stc
mov
push
inc
mov
xchg
ss
pop
push
xchg
xchg
or
push
lahf
push
roll
ljmp
out
push
scas
daa
inc
pushf
xchg
ja
adc
out
fdivp
pop
pusha
add
pusha
cld
mov
rorb
je
outsb
insl
fistl
test
into
jne
or
out
cmpsb
cli
fidivs
iret
push
cltd
into
pop
sub
in
nop
aaa
xlat
pushf
test
cltd
lahf
sub
int
cs
add
dec
add
addr16
ja
dec
data16
scas
and
gs
cmp
push
xchg
lahf
dec
pop
mov
jg
daa
push
or
jo
addr16
adc
bound
leave
xchg
xchg
mov
lds
outsl
mov
ds
jg
fucom
jle
cmpsb
sub
dec
xchg
inc
pusha
ja
movl
lret
cmp
jbe
and
ret
sub
add
push
gs
mov
inc
sbb
ficoml
xor
jno
pop
pop
dec
pop
push
rcr
xchg
xchg
jecxz
mov
mov
push
in
xchg
stc
adc
inc
and
ja
aad
push
fucomip
test
adc
aam
sub
fsts
pop
shlb
xlat
pop
jne
push
sub
xor
dec
xchg
sub
mov
or
adc
cmp
pop
push
mov
xchg
cmp
rcrl
xchg
in
pushw
pop
sub
aas
outsb
ja
xor
xor
push
int3
test
jb
gs
pop
mov
xchg
add
daa
pop
in
pop
dec
ja
lret
repnz
ret
decb
mov
jmp
and
or
rcrl
or
fwait
push
jp
fnstcw
into
mov
outsl
pop
insl
sub
pop
lea
mov
jle
int
nop
outsb
dec
push
xchg
add
jmp
lds
dec
rcrb
ds
mov
push
adc
push
xchg
jmp
cs
pusha
push
xchg
arpl
outsl
push
cmpsl
aaa
sbb
pushw
scas
jg
xchg
xchg
pop
inc
push
xchg
mov
jno
les
mov
pop
xchg
shll
inc
and
ss
outsl
fldcw
xchg
scas
iret
mov
sbb
loopne
adc
orl
jp
fimull
in
aaa
dec
cmpsb
es
jbe
dec
push
ss
iret
lds
mov
stos
mov
fcoms
call
jmp
into
push
push
push
pop
xchg
xchg
repnz
cmp
ficoml
lods
mov
cmp
das
jmp
cli
mov
mov
xchg
inc
push
inc
arpl
sahf
jle
sub
inc
sub
mov
into
jnp
sbb
es
xor
mov
and
sub
pop
test
ja
bound
or
pop
jle
xlat
jnp
jbe
push
sbb
add
stc
ds
pop
mov
lods
lret
lds
sub
jle
cwtl
out
push
es
std
into
lods
rcrb
addl
xor
push
mov
cmp
lahf
pop
data16
dec
and
es
rolb
cmc
mov
push
sti
fidivs
push
dec
inc
cs
xchg
into
push
ja
cmp
fildll
aam
divb
xchg
pop
xlat
insb
lret
jbe
fcmovnu
mov
test
daa
push
add
cmpsl
dec
lahf
cltd
mov
inc
add
push
add
xchg
mov
rcl
incb
cmpsl
mov
cmp
xchg
fisubs
test
cmc
data16
bound
push
mov
test
or
adc
les
testb
mov
and
imul
push
into
out
dec
push
outsl
insl
out
dec
sahf
pop
cmp
andb
repz
data16
fbstp
jle
lahf
movl
mov
jns
jbe
ja
push
das
cmp
loopne
frstor
xchg
sub
call
xchg
dec
loope
sahf
push
data16
out
mov
repz
fucomip
xchg
inc
and
push
push
daa
cmp
icebp
outsl
dec
test
pop
xchg
adc
dec
dec
push
fnstenv
xor
mov
mov
jo
pop
ret
xchg
icebp
lcall
mov
rcll
mov
jg
ja
js
jnp
mov
mov
jnp
je
sahf
es
jno
daa
pop
lcall
in
xlat
outsb
sbb
and
push
cmp
les
pop
push
daa
aaa
aad
fidivrs
ja
add
lods
push
push
mov
addl
jmp
sub
inc
add
inc
pop
sub
adc
mov
popa
pop
push
pop
add
mov
int
test
pop
out
lods
mov
pop
push
push
cmpsb
int3
inc
scas
and
xlat
stos
insl
pop
sbb
ds
fsubrp
mov
dec
xchg
push
cld
sub
repnz
loope
cs
push
inc
outsl
pop
loopne
push
lods
cmp
and
cld
jno
inc
mov
jg
jmp
cmc
ss
rcrl
push
jmp
pop
xor
jmp
ja
inc
jg
daa
daa
sbb
sub
push
mov
and
mov
dec
pop
inc
jg
lods
icebp
mov
movsl
pop
repnz
push
mov
ss
add
daa
inc
daa
push
cmp
mov
cmp
cmp
mov
mov
add
dec
adc
frstor
dec
lea
mov
mov
cmpsl
aam
xchg
push
rorl
lahf
xchg
fdivrl
ds
add
lret
scas
mov
insb
cmp
mov
dec
icebp
fbstp
andb
dec
pusha
cmpsl
daa
lret
cmpsl
fldl
inc
dec
repnz
pop
mov
cmp
lds
xchg
pop
and
outsb
xlat
loopne
das
outsl
sbb
dec
push
jno
sub
fidivs
pop
das
push
outsb
cmp
outsl
mov
inc
scas
pop
mov
jg
sub
cmc
out
std
xlat
je
enter
cwtl
dec
mov
jo
mov
lret
xchg
rorl
dec
pushw
mov
push
push
lahf
jle
daa
sub
gs
and
push
mov
pop
xchg
outsb
mov
push
jbe
mov
daa
cmpsb
movl
shll
xchg
cmc
addr16
add
mov
pop
pop
dec
mov
and
lock
movb
jbe
call
xor
into
out
dec
push
dec
and
in
adc
shlb
mov
mov
aad
mov
xchg
ljmp
pop
dec
cmpsl
in
jg
mov
xor
inc
mov
add
scas
das
mov
mov
jmp
loopne
push
mov
pop
cmpsb
ss
fbld
dec
push
push
fs
dec
cmp
cmpsb
xlat
jmp
and
lcall
or
and
jno
aaa
outsb
mov
ds
movl
xchg
mov
ficomps
xlat
fcmovb
cwtl
pop
cwtl
stos
push
jmp
ljmp
ja
xor
push
shll
fisttps
data16
push
fs
mov
leave
or
faddl
sub
lods
adc
test
and
pop
push
imull
mov
es
add
cmpsb
aam
lock
jns
inc
jmp
cmpsl
fnstenv
aaa
outsl
lret
inc
in
pop
mov
ja
stc
dec
mov
push
sahf
cmp
js
stos
cld
fs
xlat
xchg
cmpsb
mov
ja
lods
pop
mov
cmpsl
pop
loope
mov
fwait
xchg
pusha
sub
xor
pop
inc
pop
pop
clc
push
push
test
sbb
mov
call
and
call
jb
push
dec
cmc
stos
test
xor
mov
cmp
mov
mov
inc
ficoms
das
jno,pt
ja
aas
ss
pop
in
inc
nop
daa
fs
addr16
loop
ds
push
shll
outsb
roll
mov
iret
lret
push
jecxz
cmpsb
fbld
mov
xchg
jo
test
xchg
sahf
out
jmp
pop
lcall
adc
cs
loop
outsl
fisubrs
fs
mov
xchg
pop
ja
mov
insl
jbe
daa
push
push
mov
add
cmp
outsl
jo
cs
pop
in
push
inc
inc
aas
bound
daa
es
and
ja
push
add
xchg
test
mov
jbe
sub
mov
das
mov
test
add
daa
push
inc
and
into
or
lahf
xlat
scas
addr16
nop
pusha
push
xchg
cmp
iret
cmp
add
repnz
jecxz
faddp
cmp
push
fisubl
frstor
inc
push
xchg
push
into
data16
dec
int
fisubs
mov
add
aaa
shll
js
das
cs
pop
lahf
loope
xchg
dec
pop
mov
mov
scas
inc
hlt
pop
xchg
mov
ss
xor
out
dec
inc
fisubs
lret
jae
and
mov
pop
lret
cmpsb
adc
imul
insl
add
push
les
fnstenv
xchg
xor
fsubs
cmpsl
ss
aaa
mov
xchg
sbb
lods
push
icebp
sahf
add
movb
pop
pop
pop
pop
dec
jbe
ss
push
sbb
outsl
aaa
imull
cmc
and
leave
lcall
jne
addr16
xchg
sahf
pop
sti
call
jg
rorb
inc
cmp
push
imul
or
xchg
nop
int
filds
mov
pop
pop
insl
bound
cli
pop
sbb
adc
fnstsw
pop
push
cmp
nop
dec
shl
aaa
ljmp
dec
inc
dec
mov
dec
outsl
mov
sub
test
pop
cmp
cmpsb
cmpsl
out
push
and
rcrl
pusha
mov
bound
mul
into
lahf
iret
push
pop
cmpsb
daa
push
into
jbe
jecxz
cmp
push
jecxz
es
lock
pusha
repz
push
push
pop
xchg
sbb
scas
out
xor
xchg
subl
add
inc
inc
push
pop
addr16
stos
call
outsl
fbld
pop
pop
sti
push
mov
leave
jbe,pn
dec
xor
fwait
fs
mov
pop
push
lret
test
nop
xchg
out
jo
and
mov
add
lods
aam
jb
jg
fisubs
mov
insb
das
mov
mov
lea
arpl
push
xchg
inc
aad
xchg
lods
add
adc
xchg
incl
subb
movsb
push
push
inc
inc
loope
push
lahf
into
fistpll
or
xor
stos
mov
push
inc
popf
cmp
fstl
out
sahf
gs
push
push
lcall
stc
push
ds
push
in
fistl
push
sub
sub
xor
dec
fisttpll
sarb
out
mov
inc
outsl
test
std
and
lahf
out
pop
stos
xorl
xchg
mov
xor
fdivp
out
pop
popf
jo
mov
push
insl
xchg
iret
outsb
push
jns
ss
add
mov
stos
pop
mov
rorl
movsb
mov
aaa
mov
pop
fnstsw
cmp
cmp
daa
outsb
cld
fstps
pushw
imul
addr16
mov
lods
sti
in
mov
loop
jne
filds
aas
dec
jbe
repz
jmp
sbb
shrl
add
xchg
outsl
mov
jno
ror
pushf
sti
mov
fdivl
adc
xchg
sahf
pop
and
js
mov
push
mov
xchg
mov
xchg
dec
sub
setae
cmp
aaa
ss
and
testb
in
idivb
xor
xchg
pop
jbe
cmp
and
cmpsl
inc
push
sahf
add
lahf
outsb
add
scas
push
mov
pop
into
cmp
pop
xchg
pop
push
cmp
test
push
jae
fdivp
daa
and
mov
outsl
jg
jne
add
lds
add
cmpsl
sti
push
and
aaa
iret
es
inc
sub
mov
xchg
push
sub
cmp
dec
enter
outsb
loop
inc
xchg
into
push
mov
inc
push
int
xchg
addr16
push
push
sbb
gs
inc
push
xchg
scas
push
xchg
sub
lret
push
pop
pusha
sub
inc
pop
inc
xchg
mov
jne
mull
in
xor
jle
ljmp
xchg
mov
push
imul
dec
ds
dec
mov
or
test
dec
jns
data16
pusha
dec
cld
je
out
leave
pop
fsubrs
push
and
dec
aaa
lret
scas
jo
push
movsl
xor
add
stos
repz
xlat
scas
outsl
dec
push
pcmpeqw
faddp
mov
jp,pt
add
xchg
imul
and
sub
xlat
ljmp
cmp
mov
inc
js
or
pop
sub
lahf
rolb
lock
dec
cmpsl
push
in
rcrb
shlb
into
adc
lcall
ss
jecxz
xchg
ror
lods
jbe
push
aas
jne
or
xchg
out
mov
pop
inc
and
jg
ss
mov
sahf
add
cmpsl
pop
push
and
adc
push
push
lock
movsb
mov
xchg
push
mov
jno
outsl
pop
sub
mov
fldt
sub
lds
je
ss
mov
data16
sub
movl
loop
push
fidivs
mov
pop
outsb
jmp
mov
into
dec
push
sahf
pop
jecxz
mov
inc
inc
push
jp
lods
dec
lahf
jg
xchg
out
imul
stc
into
add
mov
aad
repz
pop
xchg
ds
das
out
push
push
out
data16
cmpsb
dec
fidivrl
jb
fsubl
jl
xor
mov
lret
gs
cmp
mov
pop
adc
shl
arpl
lock
subb
inc
aas
jle
xor
pusha
and
cmp
push
nop
out
lahf
pusha
cmp
std
mov
rcrb
mov
movsl
call
out
push
cmp
gs
std
fsts
lea
adc
dec
pop
inc
mov
cmpsl
daa
xor
xor
mov
sbb
add
ja
pop
push
mov
ret
arpl
pop
xor
icebp
push
lahf
ds
inc
inc
gs
test
pop
lods
mov
ljmp
stc
xor
xchg
mov
add
mov
divb
nop
or
xor
push
jbe
cmp
mov
lret
and
mov
sub
xor
inc
mov
nop
rcr
fbstp
xor
sahf
scas
arpl
into
mov
nop
lds
add
insl
cmp
fdivl
test
and
pop
cmpsb
add
pop
push
cmp
xchg
fsubrl
jae
aaa
test
push
aad
stc
pop
xchg
pop
clc
insb
mov
mov
push
adc
aam
adc
sti
nop
cmpsl
mov
push
dec
lahf
pop
sub
lcall
movsb
mov
cmp
inc
add
adc
mov
inc
add
lcall
dec
jg
ja
mov
data16
ds
jg
pop
mov
clc
test
ss
pusha
xchg
in
scas
pop
sub
cld
divl
std
cmp
in
mov
inc
and
mov
pop
nop
ljmp
js
jb
outsl
push
ss
push
adc
mov
or
cmp
mov
pop
and
sbb
inc
push
int
xchg
fwait
xchg
movsb
push
shlb
mov
movsl
ss
add
inc
jno
inc
cs
inc
mov
outsb
pusha
push
and
pop
jb
sub
inc
push
stos
pop
cs
xchg
xchg
fidivs
push
repnz
pop
xchg
clc
roll
ja
sub
loope
mov
lahf
negb
sub
roll
das
ja
sbb
clc
sub
nop
clc
sub
daa
xchg
in
xchg
out
insl
rolb
push
xchg
cs
lahf
dec
pop
ss
clc
rcrl
push
fisttps
sub
jle
scas
dec
enter
jo
jge
xchg
scas
mov
lahf
push
cs
int3
pop
and
push
push
xchg
es
cmpsb
mov
out
pusha
scas
push
pop
ds
clc
and
adc
imull
out
xchg
iret
mov
push
xchg
lahf
orb
push
jno
push
pusha
andl
iret
popf
lds
add
inc
mov
inc
mov
jp
in
mov
sub
jae
fildll
push
cmp
push
mov
cmp
dec
push
push
and
xchg
enter
pop
das
aas
xor
ja
and
pop
or
das
mov
in
sti
fldenv
push
lahf
cs
pop
inc
mov
lahf
mov
sub
iret
sbb
cmp
inc
jns
xchg
fwait
cmpsb
inc
add
out
aas
push
outsb
xchg
into
out
dec
outsl
push
addr16
xchg
fidivs
das
and
inc
mov
or
push
sbbl
outsb
cmpsl
outsb
push
mov
adc
cmpsl
dec
xlat
fwait
out
cmp
bound
lret
shll
lahf
pop
pop
push
jbe
push
jne
push
jle
ret
adc
clc
mov
cmpsb
scas
data16
movsb
add
mov
cmp
fwait
mov
push
mov
jmp
sub
mov
dec
aaa
jg
fnstcw
ficoms
scas
out
fildl
jmp
nop
out
adc
inc
imulb
dec
fbld
pop
outsl
loop
push
dec
push
jle
push
pop
and
mov
loope
ds
xchg
push
fisubrs
repnz
xchg
aad
cmpsb
inc
das
cmpsb
jge
pusha
aaa
std
sub
scas
xor
sub
dec
lcall
nop
jecxz
xchg
mov
iret
mov
outsb
push
xor
lahf
cmp
fidivs
es
addr16
push
jbe
inc
aas
xchg
sub
cmpsb
enter
xchg
push
jbe
std
adc
pusha
or
xchg
cmp
sub
fidivs
je
sahf
daa
add
pusha
xchg
loope
sbb
jg
mov
inc
leave
addr16
loop
aas
pop
mov
outsb
pop
xchg
les
movsl
push
sub
dec
stos
and
bnd
clc
rcll
lods
cmpsb
dec
jne
scas
daa
pop
mov
push
xchg
into
pop
fisttpll
fmulp
pop
xchg
outsl
cs
in
scas
cmp
jecxz
xchg
and
iret
ficoml
jb
shl
jo
sarl
sub
insl
stc
sahf
jo
pop
jns
dec
repnz
xlat
nop
dec
pop
mov
inc
pop
sahf
ss
fcompp
testb
into
pop
or
inc
sbb
jle
mov
iret
and
call
push
push
or
jg
pusha
sahf
outsl
out
push
pop
loopne
jmp
ss
lods
dec
dec
insl
xor
les
sub
outsb
push
sbb
push
cltd
mov
testb
imul
gs
lahf
fisubs
es
xor
into
xor
fcmovbe
inc
push
add
xchg
mov
lea
arpl
fiadds
bound
sub
clc
pop
into
sbb
xor
pop
daa
sub
sub
mov
dec
into
pop
mov
mov
scas
ds
fs
jecxz
cmp
pop
fisubrs
mov
sbb
sbbl
xchg
pop
mov
ficoms
faddp
sbb
dec
cmpsb
into
add
repnz
xchg
rclb
sub
fdivrl
sahf
and
daa
insl
enter
iret
ret
cmp
outsb
mov
cmpsb
jle
cmpsl
and
fmulp
sahf
xor
cli
out
xor
pop
jmp
pop
cs
cmpsb
cli
dec
mov
in
lahf
push
jg
mov
or
and
xchg
push
cmp
xor
dec
ret
mov
jae
dec
or
mov
mov
mov
mov
inc
jo
dec
mov
test
daa
insl
pusha
push
add
popf
sub
out
pop
xchg
daa
push
add
cmc
fnstenv
outsl
cmp
mov
mov
daa
cltd
adc
addr16
and
xchg
cmp
inc
dec
repnz
cmpsl
dec
mov
sub
mov
ret
lret
add
lods
pop
outsb
xchg
loop
ficoms
cmpsb
cmp
fisttps
and
and
mov
je
cmpsb
adc
fs
push
ja,pt
imul
push
cmpsl
lods
pop
mov
inc
dec
imul
mov
lock
jo
repz
jns
out
insl
mov
out
shll
sar
cmpsl
jle
rcrl
xor
and
push
dec
cmp
pop
pop
mov
pop
mov
mov
orb
sarb
add
fldcw
ja
shl
fbld
cs
inc
xchg
aaa
push
jle
xchg
scas
pop
mov
es
xor
cld
fistpll
cmp
cmpsl
clc
pop
xchg
addr16
cmpsl
and
and
subb
ja
daa
pop
mov
pop
cltd
jo
adc
dec
fisttpll
ret
aad
shlb
add
inc
mov
mov
shlb
test
pop
roll
pop
jle
ficoms
pusha
ds
push
cmp
dec
ja
dec
xchg
ficompl
xor
rolb
ja
loop
and
ds
pop
lahf
lock
dec
add
ljmp
push
fistpll
ret
push
iret
dec
jbe
jae
lcall
dec
jmp
inc
mov
jo
insb
dec
add
jo
add
or
mov
cmpsl
inc
mov
mov
pop
inc
push
lret
jo
jae
sbb
daa
jl
repz
cmp
jbe
sub
dec
faddl
shll
sub
das
repz
or
dec
inc
xor
adc
scas
fists
push
test
in
fcmove
jbe
pop
mov
vmulpd
repnz
mov
ss
bound
xlat
ret
cs
cmp
loope
cmpsl
data16
jo
outsl
sbb
add
lcall
inc
jo
jno
push
scas
cmp
inc
daa
and
xchg
xchg
pusha
cmpsl
mov
test
xchg
sub
loope
into
pusha
pop
daa
jbe
sbb
lret
jmp
ficomps
pop
mov
jmp
mov
shrl
in
iret
xor
cld
and
ss
push
mov
scas
push
push
adc
xchg
aaa
push
xchg
push
push
fldl
add
out
mov
outsb
sahf
rorl
push
aas
xor
inc
xor
xchg
cmp
xchg
stc
hlt
repnz
dec
jle
aas
aad
and
loopne
push
mov
inc
gs
lods
mov
pop
addr16
push
pushf
inc
push
sbb
outsb
fstpl
sahf
ljmp
dec
in
aaa
cmp
outsl
push
loope
push
pop
inc
mov
pusha
iret
out
aas
in
das
fistpll
pop
sbb
jg
daa
push
daa
daa
icebp
dec
pop
ja
sub
push
cwtl
sahf
aaa
out
sahf
xor
gs
inc
jo
xor
subl
jecxz
inc
ja
jae
imul
sub
ja
mov
xchg
ret
dec
sbb
xchg
mov
scas
ja
lds
inc
add
push
pop
dec
test
cs
xchg
mov
ds
imul
jb
xchg
movsb
push
test
repnz
outsl
push
pop
aaa
push
inc
jbe
adc
jb
mov
pop
sbb
addr16
pop
mov
xlat
xchg
aas
mov
out
xchg
push
aaa
in
ss
gs
daa
sahf
addr16
xchg
fsts
push
cmp
add
xchg
scas
pop
and
iret
lods
mov
fbstp
in
sub
xchg
pop
inc
iret
data16
pop
cs
jns
dec
repnz
cmp
mov
pusha
out
xchg
push
stos
sbb
data16
jmp
jo
push
repnz
dec
jnp
das
sub
out
cmp
aaa
aam
ja
push
scas
pop
lahf
fsubl
mov
pop
fcoml
out
pop
rclb
pop
xchg
scas
push
pop
inc
pop
dec
mov
ss
push
daa
xlat
adc
fsts
cmp
ror
outsb
out
lret
cwtl
fs
and
pushaw
ja
sahf
cmp
andb
popa
inc
xchg
xchg
push
sbb
jbe
sahf
ja
pop
xor
mov
push
mov
loop
cmpsl
push
mov
push
pusha
es
xor
das
mov
dec
and
push
lock
push
outsl
les
loop
scas
xchg
jle
xlat
aaa
hlt
lods
sahf
xlat
iret
jg
daa
adc
pop
loop
pop
dec
ds
dec
out
aad
scas
aad
mov
lret
mov
fildl
into
jle
pop
addr16
sbb
cmp
cwtl
dec
and
sub
fildl
dec
push
enter
jns
push
mov
mov
aaa
xlat
mov
repnz
push
xchg
add
out
ja
fisubs
or
xchg
fists
ss
cmp
lds
adc
mov
iret
xchg
pop
shl
jns
push
bound
pop
outsb
dec
dec
jmp
xchg
jae
mov
std
addr16
jmp
jl
sub
movb
push
fists
or
loopne
push
daa
adcb
adc
pop
shlb
mov
and
dec
cmpsb
repz
xchg
pushf
std
jl
jl
sub
lods
pop
jle
lahf
les
inc
shlb
daa
ja
iret
lods
or
cmp
xlat
ds
mov
subb
dec
cld
push
ljmp
in
es
imull
outsb
pop
xchg
test
leave
add
les
pop
iret
jns
dec
xchg
inc
in
push
subb
in
xchg
movsb
xchg
cmp
mov
jge
imul
nop
int
dec
mov
cs
sbb
pop
in
loop
data16
outsb
push
push
sub
aaa
filds
sub
jns
xchg
sahf
scas
mov
test
adc
test
mov
fs
pop
pop
sub
les
aam
cmpsb
scas
xlat
jge
enter
mov
les
add
adc
or
fstl
xchg
dec
test
xchg
das
xor
push
inc
scas
mov
jbe
cmpsb
pop
insl
inc
xchg
pop
daa
mov
xchg
stos
add
into
push
push
mov
jbe
pusha
insl
push
ds
sahf
cmpsb
out
inc
aas
xchg
dec
pop
ret
jmp
lahf
mov
xchg
test
test
dec
push
cmpsb
push
es
lock
xchg
cmpsl
test
sub
fcmovbe
mov
push
ret
js
push
jae
pop
fists
mov
addr16
scas
pop
xchg
adc
inc
in
lahf
fs
rorl
pop
pop
push
outsb
jge
pop
fistps
lret
or
rclb
sarl
aaa
les
cwtl
cmp
leave
mov
dec
or
xlat
or
xor
scas
daa
into
jbe
cmpsl
scas
mov
hlt
rorl
jle
or
mov
mov
push
ja
std
cmp
movsl
push
call
scas
and
sbb
add
add
into
arpl
push
jg
icebp
xchg
popl
jnp
lods
ss
push
cltd
inc
movsl
pop
es
test
mov
imul
push
addr16
shl
repz
daa
mov
ja
xchg
imul
mov
sahf
hlt
jle
jo
rcl
and
shlb
rcll
mov
aaa
insl
add
movaps
outsl
jg
inc
jb
sub
fadd
fnstenv
inc
pop
xchg
imul
xor
and
dec
outsb
ret
lretw
fs
pop
mov
mov
dec
cmp
ror
mov
into
pop
std
aad
cmpsl
out
xlat
inc
faddl
sbb
xchg
mov
xchg
mov
mov
add
add
stc
in
scas
inc
cs
cmpsb
xchg
sbb
lahf
fstpl
pop
ss
outsl
repnz
test
fldenv
xchg
push
dec
sub
lds
cs
cmp
cmp
cmp
test
jle
test
andb
les
in
ja
std
gs
pop
stos
mov
xchg
js
popa
add
pop
addr16
xchg
or
cmc
xchg
cmpsl
lret
push
jecxz
cs
cmp
pop
inc
mov
stos
test
jo
push
scas
or
fildll
fnstcw
fidivrs
pusha
mov
push
mov
jle
cmpsb
xchg
loop
xchg
das
enter
enter
mov
xchg
clc
push
xchg
jecxz
xlat
mov
stc
cmp
js
es
add
outsl
pop
sub
gs
aas
in
es
ret
test
fldcw
out
xchg
mov
jns
jecxz
fisubrs
das
push
push
mov
xor
xchg
pop
pop
arpl
pusha
push
dec
pop
std
loopne
loopne
sub
push
movsl
inc
jo
faddl
and
mov
pusha
das
mov
iret
sbb
int
push
xchg
mov
push
xchg
data16
mov
dec
stc
sahf
jo
daa
dec
fbld
lret
out
jbe
sbb
movsb
and
add
push
outsl
mov
test
pop
pop
jmp
push
xchg
outsl
clc
cmp
mov
push
nop
sbb
mov
fs
popf
mov
jmp
fs
push
inc
ja
pop
add
pop
clc
out
retw
lahf
inc
nop
leave
sub
stos
xchg
inc
and
lret
movsl
test
mov
ja
inc
mov
dec
jo
lods
push
xchg
test
mov
fldcw
inc
cld
es
pusha
call
iret
push
popf
jle
mov
ret
aaa
mov
xchg
lods
push
and
cmpsb
mov
jbe
lahf
sbb
popw
call
dec
daa
dec
out
pushw
cs
push
and
mov
mov
push
push
inc
mov
daa
mov
pop
aad
xchg
outsl
add
pop
sbbl
insb
mov
ret
into
dec
mov
add
jbe
testl
cmpsb
jo
add
push
push
outsl
jbe
push
bound
and
dec
into
sbb
in
ficoml
iret
lds
dec
jge
in
adcb
repz
pop
fdivl
and
pop
lods
pop
push
push
mov
and
ja
add
cs
scas
es
ja
imul
or
jbe
xor
cmp
adc
push
sub
int3
push
push
popf
adc
add
xchg
cli
dec
out
xchg
jg
into
xor
or
lahf
and
add
daa
sub
in
cmpsl
ss
iret
es
cs
add
push
cs
fsubp
jl
stos
dec
fstpt
pop
pop
mov
jno
std
leave
pop
iret
push
xor
cmpsb
rcll
inc
jns
test
mov
js
jno
and
iret
jbe,pt
pusha
dec
push
lret
push
data16
hlt
pop
fs
ja
in
es
fisttpll
jmp
and
les
test
add
push
std
push
out
cmpsb
jg
stos
push
inc
push
cmpsl
push
pop
xchg
repnz
add
dec
xlat
jg
repz
xorl
pusha
daa
insl
jp
scas
mov
nop
and
xor
cmp
xchg
test
std
enter
mov
cmpl
add
inc
clc
pop
push
aas
xchg
jb
aaa
loope
scas
inc
xchg
test
jecxz
pop
adc
inc
fidivs
lods
cli
mov
xchg
inc
das
ret
filds
lock
xchg
fstl
add
arpl
cmpsb
outsb
test
cmpsb
cmc
adc
pop
cwtl
push
push
jge
jg
stc
push
fwait
mov
call
ds
pop
xor
sub
push
cltd
out
das
cmpsl
pop
arpl
inc
aas
bound
add
fwait
xor
mulb
dec
in
and
xchg
sahf
and
pop
rcrl
pusha
mov
movsb
cmp
mov
nop
mov
inc
adc
out
xchg
fisubs
nop
jle
jne
mov
test
xchg
xchg
and
enter
adc
aaa
cmp
and
das
lahf
scas
sbb
xor
movsb
xlat
pusha
xor
stc
xchg
add
sahf
and
pop
xor
mov
in
dec
pop
xchg
js
adc
testl
divl
xor
inc
add
sbb
add
jnp
xchg
push
pushf
jns
xchg
add
dec
push
add
adc
or
inc
add
mov
sbb
dec
add
divl
jnp
pop
push
adc
negl
push
testl
cwtl
test
pop
add
mov
testl
das
mov
cwtl
cli
mov
xchg
or
outsl
inc
cmp
outsb
lret
inc
sub
pusha
mov
sbbl
pop
mov
ds
pop
fbld
fisubrs
nop
sub
mov
xchg
xchg
hlt
fsubs
dec
dec
push
lahf
jbe
fldt
push
in
aad
out
and
cli
jmp
pushaw
mov
sahf
xchg
add
mov
sbb
nop
push
push
pop
inc
aas
outsb
add
lahf
xlat
cmp
push
pop
ljmp
add
mov
mov
mov
insb
popf
pop
cli
dec
push
sbb
push
pop
pop
scas
pop
jle
loop
pusha
jo
bound
push
and
add
pop
push
xor
xchg
loope
inc
inc
and
push
pop
cld
jns
xchg
es
repnz
add
arpl
inc
in
ss
shrl
cmpsb
sub
add
lahf
inc
cmpsl
scas
daa
or
pop
jb
mov
loope
mov
daa
add
fwait
inc
inc
dec
test
dec
or
inc
push
sbb
pop
and
mov
daa
cmp
ds
xor
push
jbe
or
ds
cmp
shl
mov
pop
fsts
cmpsl
push
jo
pop
outsl
push
jmp
stc
cs
push
push
rcl
xor
scas
and
sub
xchg
sbb
leave
addb
pop
scas
or
cmpsl
scas
scas
mov
nop
les
aad
xchg
cmp
shll
push
pusha
or
add
xchg
pop
adc
es
jle
aas
push
jg
scas
fdivrl
pop
xchg
mov
inc
dec
out
xchg
ds
inc
scas
andb
mov
int
mov
xchg
jnp
out
pop
cmp
into
jo
pop
addr16
adc
push
nop
inc
inc
adc
iret
shrb
hlt
dec
jb
pop
xchg
scas
xlat
ljmp
xor
aas
outsl
es
lahf
and
flds
pop
fisubrs
cmpsb
into
hlt
dec
aas
adc
xor
mov
xchg
jae
lds
sahf
out
pop
cs
shll
xlat
and
outsb
jns
in
xchg
lahf
cmpsb
call
data16
sub
fists
sub
outsb
imul
jno
dec
add
push
and
or
xchg
pop
push
loop
ss
inc
cmp
xor
xor
cmp
daa
loop
cmpsl
das
xlat
ja
cmp
es
test
loop
pop
inc
sahf
ds
pop
es
in
aas
xchg
fbstp
dec
enter
jno
sub
jg
mov
cmpsb
add
pushaw
push
and
mov
dec
pop
mov
mov
jle
inc
mov
jno
mov
cmpsb
jae
outsb
das
ds
in
rcrl
in
mov
mov
and
icebp
shl
dec
xchg
cmp
test
cmpsl
push
insb
push
push
int3
or
xchg
pop
inc
pop
dec
stc
sub
mov
jns
fistps
pop
mov
orl
ja
pop
mov
ljmp
cmpsl
inc
mul
adc
cmpsl
cmpsl
cld
rorb
push
stc
jne
dec
push
lds
mov
inc
mov
gs
pop
data16
push
pop
hlt
pop
in
inc
fidivs
xor
outsb
dec
xchg
mov
sub
xor
xchg
scas
xor
rcll
jg
inc
icebp
push
pop
outsl
mov
push
push
dec
cmp
inc
and
xchg
mov
jno
lahf
cltd
and
dec
inc
stc
mov
shl
pop
adc
push
sub
data16
and
loop
xchg
push
cmpsb
outsl
cs
outsb
sbb
daa
xor
mov
mov
cmp
out
nop
dec
es
cmpsl
and
fbld
jle
addr16
iret
inc
aad
xchg
xchg
and
inc
leave
jbe
push
and
sub
push
push
scas
es
ss
stos
xchg
pop
in
pop
ja
fwait
jo
in
sub
fs
shlb
scas
imul
mov
mov
pusha
push
aas
cmpsl
jge
sbb
shl
push
jmp
xor
push
mov
fisttpl
js
cmpsl
jg
mov
jns
scas
ljmp
in
roll
dec
xchg
daa
push
adc
lods
and
sub
cmp
shlb
aad
xlat
fistpl
cmp
jae
scas
xchg
mov
ds
repnz
xlat
loopne
popa
into
adc
imulb
aaa
mov
xchg
cmp
fcmovb
sub
stos
jmp
mov
add
xchg
inc
cmp
loop
iret
mov
fildll
sub
out
lea
js
addb
mov
mov
movsb
outsb
out
push
daa
scas
es
pop
sub
mov
mov
outsl
cs
aam
in
das
sub
les
cmp
cmp
fisttps
xor
jb
pop
jmp
subb
push
adc
iret
fistps
ret
inc
jo
jbe
push
mov
aaa
das
daa
jle
dec
ja
pop
cmpsl
nop
ss
dec
mov
xchg
add
xchg
popf
fisubs
push
mov
pop
xchg
sahf
repnz
inc
jle
sub
inc
or
insl
dec
dec
or
mov
mov
xor
shl
push
pop
sub
lahf
sub
and
dec
xor
jmp
scas
push
mulb
dec
pop
jl
mov
mov
out
push
mov
imul
das
clc
cmpsl
sub
pop
inc
pop
data16
daa
aaa
data16
push
push
loopne
jmp
dec
out
cmp
add
popa
mov
jmp
sbb
dec
xlat
cwtl
outsl
xchg
and
fadd
das
pop
ja
inc
ds
push
cmpsb
out
pop
scas
fs
and
cmpsl
pop
insb
pop
lods
out
sub
into
outsb
xchg
cmpsl
mov
daa
stc
xlat
push
mov
pop
sbb
inc
scas
xchg
pop
lahf
pusha
jbe
js
inc
xor
mov
repz
mov
push
inc
lods
test
inc
cld
pop
pop
push
inc
fists
xor
enter
lds
int
push
dec
push
cmp
fistps
jg
and
outsl
mov
mov
into
mov
out
dec
nop
jns
inc
aam
ja
lret
dec
incb
pushaw
sub
pop
add
mov
push
repz
icebp
cmpsl
add
outsb
push
dec
mov
pop
enter
jg
pop
int
outsl
rcll
pop
pop
lods
xchg
dec
dec
inc
movl
mov
and
sub
jo
ja
ss
xchg
mov
aaa
sub
mov
sub
mov
loope
iret
pusha
pop
mov
push
mov
pop
pop
and
ds
jle
xor
add
jg
inc
pop
das
mov
cltd
mov
aaa
or
pusha
lahf
call
mov
cmpsl
cmp
inc
add
flds
dec
push
xchg
lahf
fs
sbb
push
xchg
dec
push
pop
mov
push
fimuls
pop
inc
push
stc
push
jno
ds
leave
mov
in
iret
clc
nop
xchg
js
jecxz
aas
inc
jne
sahf
ss
pop
push
sbb
pop
cmpsl
fs
std
roll
fbld
mov
lahf
mov
inc
pusha
data16
xor
jo
pop
in
mov
jmp
or
ja
jmp
jle
jg
or
ja
outsl
pop
and
or
xlat
sbb
xchg
into
xchg
mov
out
cmpsb
mov
push
xor
into
add
icebp
das
sahf
and
push
push
push
fs
gs
adc
movb
popa
mov
icebp
push
cs
and
pop
jo
ss
iret
fsubl
inc
cmp
jecxz
xlat
mov
pop
sub
loop
dec
sub
ss
ljmp
push
jno
mov
sbb
xlat
js
sub
fistpll
clc
test
xchg
inc
scas
data16
je
mov
lea
xorl
push
mov
mov
jle
ficoms
push
push
pop
mov
xchg
xlat
gs
and
pop
cwtl
fnstcw
jecxz
push
cmp
and
xchg
inc
mov
inc
outsl
pop
out
add
mov
loope,pt
pop
cmpsl
pop
pop
jmp
sub
mov
addr16
insl
ret
add
sub
outsl
push
mov
ljmp
mov
jg
int3
loope
xchg
daa
inc
ds
push
mov
fbstp
jle
stos
adc
out
in
xchg
js
mov
mov
ficoms
jbe
xchg
aaa
into
imul
cmp
rcll
sub
xchg
xchg
xchg
popf
cs
aam
popf
jecxz
cld
testl
jmp
pop
pop
push
push
cli
ds
lcall
mov
stos
jbe
jns
push
loop
es
pop
jg
push
sub
loop
scas
xor
aaa
push
rorl
cmpsl
pop
fimuls
fistpll
lret
je
push
jbe
xlat
das
call
dec
fldt
ss
outsb
enter
fcoms
test
adc
push
es
mov
and
js
jb
pop
xor
leave
fcoml
fnstenv
cmp
lret
movsb
jo
ds
push
inc
fildll
js
ja
fstpt
loope
push
ljmp
loop
scas
xchg
xchg
jg
and
lcall
mov
mov
mov
fstps
push
xchg
pop
fbstp
cmp
iret
cmp
ja
ljmp
es
or
mov
push
mov
push
xchg
xchg
dec
cmpsb
push
popf
fcoml
es
scas
pop
ss
pop
aas
pop
xchg
stos
mov
js
xor
push
out
add
roll
xchg
faddl
adc
subb
imull
pusha
fbld
ja
addr16
push
inc
xor
cmpsl
mov
dec
shrl
cmpsb
jne
inc
mov
fstl
push
jecxz
and
jno
cs
mov
pop
dec
mov
inc
xlat
lret
mov
xchg
pop
inc
adc
out
xchg
and
in
lret
push
push
jns
and
daa
mov
and
inc
loop
xor
xlat
cs
daa
inc
jg
aam
xchg
jmp
mov
lret
push
outsb
pop
jne
add
xchg
mov
mov
push
xor
rclb
mov
sti
jp
xchg
cli
insl
inc
das
scas
rcr
outsb
popf
pop
loop
nop
aaa
xlat
adc
sbb
pusha
and
jo
jle
mov
inc
xor
add
cltd
jo
dec
adc
imul
out
fcmovnb
push
pop
cmpsl
fisubrs
dec
mov
iret
push
rep
clc
lods
outsb
inc
pop
movsb
shll
enter
push
cs
mov
bound
pop
out
sub
inc
cs
xchg
in
fsubrp
xchg
in
pop
aam
jne
xor
add
pop
inc
xlat
add
jle
lods
loopne
push
mov
xchg
push
cmp
mov
adcb
or
mov
pop
jp
popf
fdivrp
bound
loopw
jle
inc
push
pop
xchg
les
xchg
outsb
es
addr16
xchg
sar
iret
out
insl
in
jo
iret
scas
sub
push
out
notb
pusha
das
sbb
xor
hlt
xchg
mov
dec
test
and
dec
and
fildll
das
cs
or
cmp
mov
xor
sub
roll
lret
mov
xchg
xlat
repnz
xchg
push
clc
in
into
loope
daa
lahf
jo
inc
xor
outsl
paddusw
push
in
or
fwait
dec
xor
lcall
mov
pop
push
sahf
pop
sbb
jns
push
jbe
mov
inc
mov
pop
add
push
cli
not
test
daa
xor
xchg
xor
mov
fs
or
in
iret
cmc
jmp
mov
aaa
mov
insl
pushf
fsubrs
pop
fbld
inc
inc
pop
aas
and
clc
sahf
mov
jl
xor
ja
mov
push
data16
lock
push
in
into
mov
mov
or
cmpsb
cmpsl
sbbl
xchg
push
mov
cmp
mov
mov
xchg
mov
cli
jg
lcall
iret
outsb
pop
add
mov
out
adc
xlat
push
int
push
xchg
es
sahf
daa
movsl
leave
jns
fbstp
or
pop
pusha
jnp
or
sub
mov
push
lretw
jg
xchg
and
sahf
sub
mov
mov
adc
ret
jbe
sti
fldt
mov
cmp
out
cmpsb
cmp
ja
and
mov
xlat
and
and
loop
pop
xor
and
xlat
aam
out
push
xchg
and
dec
push
push
daa
inc
add
xlat
jge
add
inc
leave
dec
es
inc
sbb
adc
into
and
push
gs
fisttps
fnstenv
addr16
fisubs
in
out
xchg
das
bswap
and
mov
inc
lods
xor
std
xchg
das
lods
xlat
inc
ds
jecxz
cmpsl
mov
adc
and
daa
lret
pop
out
jmp
fcoml
stos
or
lahf
inc
xchg
xchg
push
mov
xor
nop
dec
mov
cmpsb
es
or
lret
fiaddl
cmpsl
mov
les
loope
scas
ficomps
loopne
mov
jae
push
ss
cwtl
in
mov
fidivs
add
push
bndldx
pop
hlt
push
in
cmp
outsl
push
ja
stc
enter
push
add
daa
mov
xchg
mov
lods
cmpsl
cs
jns
dec
stc
fdivs
cld
loope
sahf
pop
and
push
nop
mov
test
xchg
cwtl
jo
addb
jg
inc
cltd
out
cltd
push
sub
jo
dec
pop
adc
pop
sahf
push
inc
cli
mov
xchg
xchg
cmp
push
mov
imull
cmp
and
xchg
rclb
add
jg
mov
dec
out
jno
ja
mov
xchg
mov
jo
data16
daa
aas
and
ljmp
inc
pop
add
adc
fucom
xor
divb
rclb
xor
pusha
push
and
mov
pop
and
cmp
ja
into
lret
faddp
pop
mul
int3
stos
popf
jo
in
ret
add
sbb
das
mov
and
pusha
mov
in
xor
and
push
pop
sbb
es
int3
fistps
dec
movsb
dec
jge
daa
dec
das
push
mov
fldz
sub
lret
sub
aad
scas
fidivl
fsubrl
fidivrl
mov
dec
ss
loope
lahf
mov
sbb
cmpsb
ffreep
cs
scas
mov
fidivrs
mov
adc
repnz
sbb
cmpsb
xor
cmpsl
outsl
out
push
addr16
jg
nop
ljmp
pop
mov
xchg
outsb
cltd
ret
sahf
jae
popf
sub
pop
lret
push
out
push
nop
and
inc
push
inc
mov
cld
lahf
dec
jo
inc
push
out
dec
mov
push
xlat
inc
leave
iret
sahf
lret
aam
out
lds
bnd
fiaddl
mov
cmpsb
pop
neg
push
fsubp
cli
push
arpl
jle
outsb
nop
outsl
push
push
dec
xlat
cli
pop
insb
xlat
in
sahf
out
mov
jno
mov
sub
mov
in
nop
popl
daa
ss
inc
iret
jg
xor
or
inc
pop
jecxz
cmpsl
sahf
shr
mov
dec
pop
das
ret
adc
nop
aad
aas
rcrl
shll
shlb
lds
push
jns
pop
mov
test
loope
xlat
push
addr16
dec
ja
inc
repnz
jo
mov
jle,pn
sub
ljmp
test
cmpsl
iret
cs
movb
jno
push
xorl
sahf
sahf
mov
in
cmp
cmpsb
aaa
push
pop
or
scas
sub
sahf
ja
ss
sbb
pop
rclb
shrl
call
jle
out
lahf
cli
push
fdivr
inc
sub
mov
xchg
pop
popf
xchg
scas
es
popf
mov
mov
in
xlat
idivl
xorl
push
mov
loope
xchg
jbe
int3
aas
js
mov
inc
xlat
push
loop
sahf
pusha
inc
xchg
push
or
aas
negl
cmpsb
inc
daa
insb
clc
jbe
mov
xorl
popf
dec
mov
aad
dec
cmpsl
outsl
data16
test
ret
aad
push
shll
fidivrl
cmp
mov
lret
pop
aaa
lods
aam
push
xchg
rol
aas
iret
lea
stc
pop
or
pop
mov
aas
jle
pop
add
daa
lret
sub
mov
xor
mov
xor
shll
ss
js
jg
adc
mov
dec
scas
scas
pushf
dec
or
adc
sahf
jns
fs
xor
pop
pop
mov
dec
jo
cmpsb
push
pop
outsb
das
jb
data16
inc
cmpsl
cmp
and
vprotb
leave
lahf
xchg
dec
in
pop
outsl
cli
test
sub
es
dec
xchg
push
je
ja
cmp
push
pusha
es
ficoms
xchg
inc
add
xchg
fs
lock
cmpsl
mov
outsl
mov
int3
lds
fisttpl
das
pop
es
lds
jle
cli
popl
jns
jg
fists
sbb
lahf
push
mov
cmc
add
push
lock
out
jecxz
xchg
lret
pop
aas
inc
out
aaa
pop
mov
inc
inc
cli
push
gs
mull
pop
or
daa
xchg
and
fidivrl
jbe
mov
sub
pusha
adc
outsb
icebp
xchg
mov
mov
mov
pushf
in
push
insl
cmpsb
pop
icebp
loope
mov
dec
xor
push
push
jno
aaa
lahf
pop
ljmp
in
cmp
outsb
es
loope
push
pop
pop
fsubp
imul
int
mov
mov
add
jl
and
push
outsl
dec
xor
xlat
xchg
and
add
cmp
push
dec
mov
es
cmpsb
cmp
sbb
lahf
inc
inc
iret
push
and
fwait
mov
jo
xchg
xor
or
add
fbstp
inc
loop
jg
dec
pop
js
cmp
iret
test
mov
mov
mov
ret
push
and
in
pusha
mov
shl
mov
push
mov
outsb
icebp
iret
mov
add
add
mov
cmpsl
jns
xor
xor
xchg
inc
subl
into
push
jo
data16
jbe
scas
pop
pop
in
out
xlat
cmpsl
xchg
jb
push
out
lahf
xchg
fisubs
fisttps
faddl
sub
adcb
fs
push
add
mov
or
inc
dec
sub
inc
into
mov
daa
iret
stos
fdivl
pop
mov
out
cmpsl
xchg
sbb
aam
dec
lret
pop
sub
pop
mov
movsb
dec
and
fisttps
mov
ja,pn
cmpsl
inc
push
jno
lahf
push
cmp
or
scas
push
pop
data16
popl
jmp
inc
popf
xor
mov
lcall
aas
das
sbb
aaa
xor
std
adc
pop
and
pop
inc
mov
aaa
mulb
jle
into
gs
dec
fists
mov
fdivl
stos
iret
lret
mov
loopne
pop
nop
push
js
inc
fists
mov
leave
mov
mov
nop
pop
ret
mov
sub
xlat
mov
movsb
pop
push
pop
outsb
addl
and
cmp
cmp
fstps
inc
sahf
sub
add
movsb
nop
jnp
jbe
push
loope
scas
jo
addr16
push
sbb
sbb
sub
lock
jae
das
and
fsubl
jbe
push
push
and
mov
mov
push
push
aad
adc
aas
cmpsb
outsb
out
and
sub
iret
cmpsl
xchg
adc
mov
das
mov
dec
add
xor
iret
push
inc
aad
fisubs
test
roll
cmp
pop
xchg
loope
aaa
inc
sahf
push
inc
nop
dec
sub
into
dec
in
inc
cmp
aas
inc
outsl
pop
sub
xchg
shrl
xlat
movsb
mov
mov
stos
stc
pop
vpshufhw
loop
xor
iret
push
nop
ljmp
xchg
inc
daa
jmp
pushl
cmpsl
rcr
fisubrs
in
cmpsb
data16
into
push
aas
inc
mov
push
fildll
mov
pop
pop
cli
scas
mov
movsb
pop
xor
push
dec
jecxz
inc
xorb
clc
std
pop
into
les
scas
mov
and
inc
xlat
int
cmp
es
roll
push
or
ror
pop
pop
lret
pop
outsl
dec
dec
inc
xor
adc
jo
pop
jae
sbb
pop
fsub
mov
scas
pop
scas
xchg
push
cmp
or
std
into
push
adc
and
ja
lret
sbb
stos
cli
xchg
fsubl
paddusw
pusha
ret
jmp
into
lar
xlat
movsb
lahf
mov
es
mov
repz
scas
dec
cmpsl
iret
mov
mov
lcall
popf
xchg
cli
shll
xor
outsl
push
scas
jns
jg
inc
xor
pop
enter
or
fildll
fnstcw
pop
fsubp
add
das
daa
inc
int3
lahf
data16
out
add
pusha
jo
daa
out
jg
or
iret
add
mov
dec
jns
xchg
mov
inc
xor
sub
pop
add
sub
xchg
sub
jbe
fisttps
push
pop
repz
mov
dec
outsl
cmp
inc
es
vmwrite
ficoms
xchg
dec
bound
mov
jg
inc
mov
mov
inc
fldl
pop
aas
outsb
ret
jnp
stos
mov
fidivrs
fidivrs
fidivrs
in
and
movsl
sbb
jbe
pop
jno
das
xchg
jg
jo
rorl
loope
inc
push
outsl
outsb
aad
into
shlb
push
shll
push
mov
outsl
cs
jbe
test
rcrb
jo
cmc
inc
mov
cmp
or
push
xacquire
ret
sub
cmp
dec
cmpsl
mov
fists
repnz
cltd
outsl
and
xor
sub
push
cmp
mov
jnp
outsb
jns
push
inc
and
mov
neg
mov
test
ljmp
ss
icebp
push
push
lahf
or
jle
out
imull
pop
out
pop
push
ss
outsb
inc
movsb
add
jg
push
and
inc
pop
push
pusha
push
sbb
xor
aaa
pop
xlat
mov
jecxz
nop
mov
push
sbb
jbe
cmp
xlat
sbb
add
push
push
nopl
dec
aas
mov
mov
call
fs
pop
into
rolb
push
andl
test
sub
aaa
stos
iret
nop
cmp
or
pop
mov
xor
addr16
in
ja
aaa
cmp
out
fcomip
into
inc
data16
cltd
outsl
scas
inc
test
adc
push
mov
and
stc
addr16
ds
and
fisubs
jo
dec
gs
out
mov
push
xlat
rol
lea
fidivrs
add
cmp
jbe
sub
movsb
mov
rcll
push
fbstp
fnstcw
imul
ret
rcrl
cmp
inc
inc
cmpsl
pop
lahf
xchg
mov
and
lret
loop
push
pop
mov
ja
push
lds
adc
add
enter
inc
sbb
sub
test
iret
xchg
movsl
inc
ja
mov
mov
addr16
jno
sub
inc
cs
push
add
pop
jo
rcrl
pop
bound
gs
xor
iret
dec
and
leave
xlat
ficoms
mov
jge
cltd
mov
xor
loop
sahf
push
es
ret
mov
scas
mov
add
mov
jne
cmpsl
push
xchg
dec
mov
inc
ss
cmpsl
enter
enter
imul
nop
xchg
add
sub
loopne
jmp
mov
cmpsl
cmpsl
add
mov
aaa
data16
inc
cli
out
fsubl
add
sbb
cmpsb
fildll
jne
xor
mov
jns
negl
jg
stos
mov
bound
es
mov
jle
push
and
ljmp
inc
loop
adc
inc
inc
rol
push
xchg
add
dec
repz
and
sbb
rolb
repnz
sub
xchg
push
loope
cmp
gs
mov
and
ret
int
dec
rcr
xlat
jg
cmp
popf
fwait
movsl
mov
pop
push
mov
sbb
xchg
push
inc
loop
nop
dec
xchg
ja
cmpsl
outsl
xchg
ficomps
push
jb,pn
or
xchg
jmp
xchg
aaa
pop
push
push
mov
jo
aaa
mov
or
and
jbe
lods
inc
rcrl
rorl
daa
dec
lock
outsl
aaa
xor
js
inc
mov
clc
xchg
xchg
jle
scas
loope
cs
fs
dec
push
jo
push
or
loop
lods
push
pop
jle
xlat
loope
addr16
push
loopne
lods
outsb
cs
clc
xlat
jbe
rorb
pop
sub
ss
cld
fsubl
sub
das
and
add
jmp
sbb
into
or
add
push
mov
jle
js
repz
inc
ss
push
mov
push
or
push
imul
hlt
push
pusha
xor
xor
lahf
lcall
xchg
pop
aaa
xchg
in
scas
ja
xchg
jbe
imull
sahf
pop
aas
cmp
pusha
push
pusha
idiv
lds
push
push
push
mov
in
ds
push
inc
xlat
daa
nop
fbld
pop
add
jl
pop
insb
jae
jnp
and
aas
pop
push
in
jno
sbb
push
pop
loope
outsb
cmpsb
inc
mov
inc
pop
in
repz
mov
dec
test
stc
jle
mov
lahf
push
fidivs
push
pop
fs
outsl
mov
outsb
cmpsl
outsl
jecxz
push
xchg
pop
push
pop
mov
adc
push
pop
aas
pop
fisttpl
outsl
movsl
push
and
fucomp
push
mov
addr16
mov
ja
pop
and
addr16
es
xor
jo
andb
sub
int
sbb
push
xchg
clc
xor
add
pop
adc
cmpsl
xor
cmp
lahf
cmpsw
pop
ret
enter
add
xchg
and
push
ljmp
pop
xchg
push
xor
inc
clc
lahf
mov
shlb
scas
pushf
test
gs
repz
push
xchg
icebp
sub
push
xchg
mov
push
jo
or
jle
ret
aam
or
dec
or
imul
adc
aad
jae
and
add
jo
adc
out
push
and
and
enter
jle
outsl
pop
pop
jne
push
mov
es
dec
xlat
dec
fisubs
jne
lods
inc
mov
inc
jb
push
push
and
dec
outsl
imul
lret
inc
inc
xchg
sub
cmpsl
push
addr16
es
xchg
xor
loope
das
cmpsl
push
xlat
aam
mov
jg
fs
xchg
jns,pn
lret
mov
pusha
stos
scas
iret
xchg
in
xor
xchg
add
push
push
xor
mov
ja
ss
nop
lds
pop
cmpsl
mov
addr16
out
test
ss
das
ljmp
jno
push
je
cld
lret
pop
cmpsl
mov
lcall
jbe
ds
inc
icebp
ss
pop
push
mov
push
mov
mov
mov
lret
imul
fdiv
xchg
fstl
mov
jo
dec
cs
ja
jbe
cmc
xchg
xlat
xor
fbld
dec
shll
mov
and
daa
je
sahf
enter
sarl
fidivrl
nop
mov
xor
cmpsl
push
dec
leave
xchg
mov
push
inc
push
nop
jle
push
dec
pop
jo
push
sahf
push
imul
das
daa
pop
aaa
cmp
movsb
mov
mov
pop
dec
pop
out
scas
gs
cs
and
aaa
scas
push
out
insl
je
and
aas
ja
push
xchg
cmpsl
mov
jno
pop
pop
cltd
out
add
enter
outsb
jo
mov
lds
fnstcw
dec
aas
call
xchg
rcll
mov
push
xor
sbb
jbe
adc
gs
pop
cmp
jo
xchg
pop
xchg
lods
push
jl
loopne
jmp
sbb
nop
inc
data16
adc
cmpsb
jb
xor
divw
add
cmp
inc
jecxz
cs
aaa
daa
pop
jb
cmpsl
daa
mov
xchg
lret
xlat
fwait
outsb
push
jp
add
stc
data16
pusha
aad
pop
push
das
xchg
dec
add
sbbb
cmpsb
outsb
icebp
push
das
mov
push
out
pop
push
clc
jg
addl
inc
jo
and
nop
fidivs
and
cmp
or
insb
and
jmp
mov
aas
jle
cli
hlt
xchg
pop
jecxz
std
pop
aad
mov
xchg
jg
or
and
popf
outsb
nop
sbb
bound
adc
lahf
out
adc
cmpsl
popf
xchg
fstps
push
mov
pop
out
jle
mov
add
ljmp
arpl
ss
cli
mov
cmpsb
push
sub
push
add
push
addl
pusha
ret
adc
inc
push
arpl
out
mov
cmpsl
pop
mov
or
into
inc
sub
adc
jne
ja
add
stos
dec
mov
stos
sahf
jno
lret
lahf
sti
add
idivl
fnstcw
xchg
lret
dec
into
outsl
inc
fld
cmpsb
imul
testl
into
pop
jle
inc
mov
pusha
xor
xor
pop
in
je
push
ret
push
mov
les
jg
mov
jle
add
push
jb
xchg
sub
cmpsl
loop
push
jnp
cmp
pop
sbb
es
sbb
repz
addr16
nop
es
sub
jmp
push
shlb
xlat
scas
out
aaa
pop
xlat
or
jecxz
into
xchg
mov
mov
out
into
pushf
dec
outsb
cli
mov
add
xchg
mov
push
add
or
xlat
addl
cld
jp
test
shll
mov
enter
std
jmp
aas
iretw
push
sahf
data16
push
push
dec
ds
sbb
jno
in
scas
cmpsl
inc
jbe
mov
push
add
data16
mov
and
outsl
xchg
mov
xor
or
orb
cmp
dec
dec
pop
dec
cmp
mov
ret
xchg
adc
je
pop
fnstcw
add
mov
aaa
sub
dec
outsl
push
into
push
xlat
adc
mov
jo
jb
ds
xor
negb
ss
mov
aaa
push
addr16
push
mov
jbe
outsb
into
xchg
rcll
or
inc
push
ss
xchg
mov
mov
xchg
fs
or
mov
and
outsb
push
mov
jecxz
xor
cmpsl
push
xor
imul
lods
jle
insl
in
jb
fwait
push
xchg
cmp
cltd
js
mov
pusha
fidivs
jg
call
daa
jecxz
push
and
pop
pusha
mov
scas
mov
sbbb
outsl
mov
lea
jge
add
jecxz
push
in
and
stos
add
ret
push
in
in
lods
fld
xlat
push
push
out
mov
mov
movsb
iret
enter
xchg
jbe
cld
mov
imul
fucom
popw
xlat
fdivrs
inc
cmp
mov
xchg
xchg
ja
out
addr16
rcrl
inc
jo,pt
and
mov
call
nop
addr16
nop
pop
lea
divl
out
andl
scas
sub
cmpsb
mov
dec
and
sub
xor
pop
push
push
cmp
xor
push
fisubs
aaa
xchg
sub
inc
sub
loop
or
xchg
out
ficompl
leave
iret
sub
int
xchg
push
add
mov
push
or
jbe
dec
pop
fisubrs
scas
jle
cmpsl
and
jg
pop
inc
push
popa
sub
outsl
or
fnstsw
das
push
arpl
lds
lds
add
and
cmpsb
pop
nop
push
aaa
clc
sub
xchg
outsl
data16
pop
scas
test
scas
jmp
lahf
aaa
inc
mov
cwtl
add
mov
xchg
xchg
jg
jecxz
xlat
push
push
mov
lahf
adc
movsb
pusha
push
xlat
xorb
gs
cs
push
pop
out
daa
shrl
push
xchg
hlt
mov
jbe
insl
pop
outsl
das
push
arpl
and
and
shll
scas
pop
cmp
popf
and
hlt
sahf
fisttps
adc
mov
xchg
push
in
mov
in
icebp
mov
pop
sub
mov
ja
push
in
push
cmp
addr16
push
das
mov
cmp
icebp
sub
sub
ss
or
jns
outsl
pusha
mov
inc
jle
add
push
mov
nop
xchg
pop
in
mov
push
es
pop
leave
push
xchg
xor
sbb
xchg
pop
in
inc
sub
jbe
and
mov
inc
dec
xor
xchg
iret
xchg
and
sbb
cmp
cltd
loope
jo
xchg
ss
xlat
cmpsb
aaa
shl
lods
mov
pusha
mov
push
sbb
jbe
xchg
sub
add
pop
outsb
inc
lahf
fs
or
scas
push
sub
lods
xchg
push
push
cli
jmp
inc
mov
cmpsl
ja
cmp
pusha
fldenv
vpmacsswd
pushf
iret
xchg
push
adc
pop
cwtl
fistps
xchg
jbe
jmp
mov
cmp
mov
daa
call
push
stos
out
mov
inc
add
ffree
xchg
enter
cmc
xor
jbe
push
fisttpl
fiadds
bound
aas
inc
aad
rorb
into
mov
icebp
daa
ss
test
aaa
repz
addr16
lahf
pushf
ds
out
scas
xchg
jo
jmp
inc
das
xchg
loop
outsl
aas
dec
mov
inc
xchg
push
pop
mov
fildl
cmpsl
inc
cmpb
fisttps
data16
aam
fisubrl
aas
call
xchg
sahf
movb
fisubl
xchg
jmp
and
sub
and
pop
in
es
gs
shll
push
cmp
pop
mov
dec
xchg
in
jne
je
rcrl
cs
and
in
addr16
outsl
ljmp
loope
lret
fidivs
push
rorl
dec
add
jg
push
nop
test
daa
aas
repnz
sahf
lahf
sub
mov
xchg
dec
xchg
or
iret
testl
xor
cmpsb
push
sahf
pop
jo
or
push
addr16
fs
inc
mov
mov
and
scas
xor
addr16
fidivs
cs
negb
pop
jo
xchg
inc
and
inc
ror
push
mov
sub
pop
test
iret
mov
pop
jle
inc
pop
mov
mov
fldcw
push
mov
sub
clc
rolb
loope
cmpsl
into
xchg
pop
outsl
push
inc
pop
dec
sub
stos
scas
negb
pusha
xchg
fistpll
call
and
adc
fisubrs
push
lahf
outsl
add
mov
aad
push
out
jg
add
and
inc
push
ficoms
adc
xchg
in
xchg
sahf
neg
cmp
dec
fisubl
jmp
daa
iret
cmp
gs
mov
xor
fisubs
jns
cmp
lods
loop
cmp
push
mov
sbb
pusha
xchg
mov
cs
outsl
jmp
mov
mov
outsb
dec
xchg
in
jg
icebp
cmpsb
push
mov
xchg
rcrl
aas
das
roll
into
mov
lret
movsb
mov
mov
test
and
pop
inc
mov
loop
into
sahf
cmpsl
iret
or
push
and
xchg
mov
hlt
shrb
es
mov
enter
pop
ficomps
rcrb
dec
inc
inc
shlb
push
jno
inc
popf
fisubs
pop
movsb
mov
dec
movsl
push
into
mulb
lock
push
xor
in
jns
mov
loop
jg,pn
addr16
pop
aaa
repz
cmpsl
pop
cmp
dec
push
rcll
pop
xchg
pusha
push
push
pop
das
dec
cmpsb
push
push
and
mov
ljmp
aam
xchg
loope
ds
push
cmp
shrl
lock
mov
xor
pop
and
xchg
and
dec
push
xchg
fbstp
adc
pushf
inc
xchg
pusha
inc
sub
das
lret
mov
jae
dec
add
loope
fistpll
xchg
mov
rorb
or
andb
rol
scas
jb
xchg
nop
movsb
mov
xchg
mov
mov
arpl
gs
mov
scas
nop
shll
mov
sbb
cs
cmp
out
cmp
call
jno
and
fiadds
ljmp
xchg
mov
lahf
pop
lret
adc
xchg
sbb
add
pop
das
shrb
push
out
iret
jb
stos
push
insl
scas
xor
scas
iret
sub
xchg
pop
scas
add
sahf
pop
out
outsb
scas
movsb
push
loop
sub
fisubs
cs
in
bound
ja
push
add
data16
cmpsb
popf
out
data16
push
push
fs
ja
clc
jns
jg
cmp
cmp
mov
leave
lret
lods
pop
rcrb
pop
ret
lds
cld
jns
in
pop
xchg
xchg
cmp
pop
mov
jo
aas
jne
push
daa
aad
rorb
jae
jmp
ja
ret
mov
push
push
dec
cmp
lahf
fsubs
cmpb
cwtl
shll
daa
aad
ds
pop
out
pusha
into
cmpsl
push
roll
aam
aad
xchg
jmp
ja
or
xchg
xchg
mov
fbld
push
in
scas
ja
pushf
add
ret
mov
and
and
xor
shrl
xchg
cmpsb
cmp
into
lds
mov
jb
mov
push
mov
xlat
into
out
loope
scas
fs
outsb
inc
loop
xor
pop
dec
ja
stos
xor
cmp
aas
aam
xlat
push
fists
sbb
pop
push
das
xchg
adc
jns
out
xchg
cmp
lahf
neg
push
js
shll
lahf
sti
cs
xchg
rep
imul
ds
push
mov
es
jo
or
add
pop
aad
roll
out
fimuls
push
cmpsb
mov
mov
push
pop
sub
outsl
xchg
int3
or
arpl
das
outsb
push
aam
jae
and
cmp
iret
imul
pop
ja
xchg
inc
es
cmp
dec
dec
cmpsl
xchg
mov
insl
jle
das
cmpb
pusha
scas
mov
mov
loop
push
dec
inc
and
sbb
insw
inc
jae
add
mov
mov
loope
mov
jbe
sub
add
pop
outsl
inc
pop
repz
mov
mov
jmp
xlat
cli
daa
or
mov
das
sahf
jbe
cmp
adc
push
out
and
mov
mov
mov
mov
sub
xchg
jbe
stc
test
test
and
mov
jle
ss
sbb
dec
xchg
pop
and
les
aaa
cltd
int3
mov
cwtl
cmp
mov
sub
fidivs
adc
insb
pop
adc
repz
mov
ss
fxch
mov
adc
lahf
ret
mov
pop
inc
xor
popf
stos
rcrl
or
mov
push
xchg
push
testb
pop
pop
loop
data16
jle
es
mov
ret
xor
fistl
cmpsb
daa
repz
arpl
mov
loopne
out
outsl
pop
dec
dec
add
cs
daa
xor
out
xchg
cmpsl
fidivrl
ss
stos
int3
inc
and
jo
mov
jbe
mov
fsubs
mov
fisubs
aas
add
jae
mov
out
sbb
pusha
nop
out
ss
mov
cs
cmpsl
shrl
cmp
lods
std
outsb
loopne
iret
jbe
mov
dec
add
addr16
lods
sbbl
movsl
imul
pop
jae
push
in
pop
outsl
in
add
daa
ret
xor
or
fdivrp
mov
sbb
mull
outsb
xchg
scas
jle
cltd
pop
lock
cmp
iret
sti
inc
fwait
xchg
dec
ds
inc
ja
xlat
out
jo
cmp
push
mov
rolb
cmpsl
iret
mov
adc
or
adc
out
and
push
cltd
stc
es
inc
xchg
inc
push
push
icebp
and
dec
outsb
or
pop
mov
cmp
inc
daa
push
cmp
pop
aas
push
mov
enter
clc
insb
cmpsb
inc
outsl
push
into
movsb
pop
test
mov
aad
scas
push
lret
sbb
push
jno
cmp
iret
dec
dec
add
nop
fisttpl
bound
push
sub
xlat
inc
xchg
push
push
sub
aas
sbbl
fisttpll
mov
stc
es
scas
dec
mov
xor
ficompl
loopne
nop
jecxz
dec
inc
jg
lea
adc
aad
xor
add
daa
int3
sbb
test
xor
xchg
out
push
mov
mov
xchg
xchg
cmpsl
das
shr
push
loop
push
cmpsb
inc
nop
pop
and
int
sub
sbb
iret
jne
or
jecxz
ja
or
cs
add
rolb
dec
iret
scas
push
xor
mov
mov
mov
and
cmpsb
push
xchg
mov
jecxz
and
push
and
inc
scas
iret
dec
xor
push
ja
jns
nop
pop
jb
cmp
hlt
popf
mov
pop
es
xchg
scas
pop
inc
mov
lret
push
jg
sub
cmp
xor
cs
push
mov
aas
imul
sar
dec
sahf
xor
pop
ja
mov
stos
enter
or
mov
imul
cs
push
es
movsb
ret
pop
data16
daa
or
orb
enter
mov
jg
sub
movsl
jle
dec
js
and
shll
aad
pop
mov
dec
scas
cmpsl
inc
push
pusha
fdivrs
sahf
push
fldt
mov
mov
call
sbb
outsb
pop
lea
pop
cmp
mov
xlat
xor
cmpsl
mov
xor
pop
dec
cmp
xorl
push
in
fbld
pop
shrl
dec
push
pop
and
jno
inc
je
fstl
mov
ss
aaa
shll
xor
pushf
outsl
xchg
call
es
pop
into
push
pop
dec
mov
loope
ja
push
push
inc
push
popf
ret
xchg
scas
dec
mov
aad
addr16
pop
push
insl
mov
stc
or
ja
push
cmp
jg
shlb
pop
scas
xchg
std
leave
pop
push
xlat
lods
rol
fcmovnb
mov
jmp
iret
das
cld
ficompl
mov
mov
jl
add
es
aam
ljmp
and
pop
dec
addr16
sub
or
icebp
and
push
loop
xlat
mov
scas
data16
ds
daa
daa
adc
pusha
ss
pusha
test
fs
std
das
cs
pop
fidivs
ja
push
ss
mov
jo
xchg
into
xlat
add
cmp
cmp
mov
enter
lods
xchg
popl
push
push
inc
dec
push
push
and
in
nop
pop
lahf
pop
push
icebp
cmp
cmpsl
add
iret
pop
out
lahf
ja
and
gs
addr16
ss
cs
push
fildll
cmpsl
addr16
sbb
jo
xchg
test
adc
dec
inc
jg
and
jle
insl
andb
dec
pop
in
test
loope
mov
dec
ror
mov
bound
out
fildll
jbe
ret
sub
pop
mov
fistps
or
test
clc
repz
insb
fwait
aaa
jo
das
int3
push
ljmp
and
xlat
ds
movsb
mov
lahf
shll
jae
push
pop
data16
mov
push
push
ficoms
jo
loope
sub
xchg
jmp
push
addr16
mov
outsb
jecxz
scas
inc
loop
iret
sub
and
insl
push
dec
ss
add
sbb
pop
fldt
addb
stc
loope
xor
fldenv
scas
sub
inc
cmpsb
mov
in
dec
and
sub
outsl
jle
xlat
push
nop
mov
sbb
imul
jno
addr16
icebp
outsl
ja
lahf
xchg
sti
xchg
bound
xchg
inc
lds
data16
test
xchg
arpl
dec
adc
and
dec
aas
sub
xor
ja
movsb
popa
pop
aaa
push
fcompl
inc
ds
and
dec
daa
jg
add
mov
aas
fisubs
ss
dec
push
pop
andl
sub
jbe
daa
data16
scas
outsl
mov
and
dec
cmp
mov
pop
add
stc
inc
push
sub
je
xchg
and
dec
cltd
jge
pop
inc
cmp
daa
pop
shlb
xlat
xchg
testl
pop
ss
ja
and
loope
push
pop
adc
add
cmpsl
jo
scas
mov
pop
bound
jbe
inc
pop
pop
pop
xor
sub
imul
xchg
rep
lret
outsb
pop
sahf
xchg
push
bound
sub
mov
mov
daa
mov
imull
xlat
inc
scas
jle
test
lahf
lret
aaa
push
cmp
fdivl
das
mov
in
divl
pop
cs
mov
pushf
pop
xchg
sbb
adc
test
push
xchg
inc
mov
aas
aaa
jno
push
sbb
ds
push
push
xor
jg
fwait
into
out
cmpsb
push
scas
ljmp
pop
imul
push
mov
ficoms
int
xchg
lret
lock
mov
insl
aas
insl
into
test
sub
jmp
testb
fnstenv
negb
cmp
leave
or
pop
scas
fs
push
push
xchg
aas
push
gs
add
movsb
cmp
mov
xor
cmpsl
scas
dec
jg,pt
add
lea
cmpsb
push
xchg
push
ja
or
and
subb
cli
or
insb
inc
sahf
sub
xchg
push
add
push
xchg
mov
mov
add
push
fucomp
xchg
clc
lahf
lea
or
roll
fstl
nop
add
push
mov
leave
mov
adc
dec
mov
jle
cmpsl
pop
cmp
cmp
push
and
mov
dec
sub
mov
add
fbld
scas
dec
xlat
sahf
dec
cltd
ret
mov
sbb
je
popl
xchg
mov
inc
inc
mov
leave
push
mov
pusha
dec
inc
call
mov
lahf
cmp
sub
jo
aaa
pusha
scas
sub
loopne
call
push
ret
ret
adc
pop
call
pop
pop
sub
push
xlat
fs
test
lret
jg
push
inc
scas
sub
xor
push
fs
ds
mov
loop
pop
aas
data16
inc
imulw
outsb
jp
incl
lods
jecxz
or
loopne
push
in
inc
repnz
push
xchg
ss
xchg
icebp
mov
mov
mov
mov
pop
in
mov
iret
sbb
cs
pop
push
dec
mov
lock
jno
scas
pop
shlb
xchg
popf
loope
cmp
xlat
sub
push
fxch
scas
outsl
mov
gs
pop
cli
roll
mov
mov
cmpsl
aas
adc
xchg
push
mov
aaa
mov
lahf
fsub
jo
enter
fnstcw
and
xchg
xchg
out
jb
pop
sub
push
and
pop
mov
enter
and
mov
cmpsb
out
inc
xlat
jg
sbb
mov
lahf
aaa
inc
pop
or
jecxz
cmp
pusha
incb
clc
pop
cmp
jle
dec
push
sub
xor
hlt
cmpsl
jo
hlt
push
dec
dec
push
xor
push
das
mov
mov
jecxz
ja
icebp
addr16
fwait
pop
mov
jg
xchg
das
iret
orb
fcomps
movsl
push
pop
popl
mov
aas
push
mov
aad
es
movsl
int3
xchg
inc
aaa
sarl
add
faddp
mov
out
xor
pusha
lods
data16
jle
inc
mov
mov
push
push
cmp
push
stc
or
dec
aaa
mov
aam
cmp
roll
scas
pop
movsb
scas
push
movl
mov
daa
iret
into
fs
data16
lahf
push
outsb
idivb
pop
scas
ds
pushf
pop
mov
cmpsl
int3
pop
xchg
inc
xlat
sub
leave
fsubrl
aad
cmpsl
out
dec
outsl
dec
in
shrb
xchg
push
negb
push
sahf
dec
loope
sub
lahf
aaa
jle
pusha
loop
inc
xlat
cmpsb
pop
pop
and
mov
iret
lds
adc
daa
mov
jl
inc
outsl
lahf
pusha
jecxz
daa
push
sahf
sahf
aas
inc
jge
xchg
xchg
sbb
rcr
ss
test
add
cmp
ss
and
jne
into
gs
mov
aaa
fiadds
cmpsl
mov
mov
push
xchg
add
cmpsl
xlat
pop
mov
and
push
pop
cmpsb
add
iret
ficomps
xlat
scas
movsl
jne
pop
pop
push
inc
pusha
inc
mov
pop
orl
pop
lods
adcl
adc
jbe
cmpsb
not
inc
dec
es
pop
mov
xchg
xchg
test
cmc
push
das
cld
fcomip
cmp
push
push
jb
in
out
iret
pop
and
aas
pop
outsl
lret
clc
loop
jbe
pop
cwtd
into
jo
pop
lea
pop
je
into
mov
push
aas
xchg
pop
addr16
enter
shlb
data16
xchg
xchg
jbe
mov
es
push
lea
adc
mov
int3
xchg
sbb
loope
xchg
or
in
xchg
daa
ja
into
push
push
xchg
inc
mov
adc
out
ret
fs
xchg
repz
sub
mov
push
cwtl
mov
outsl
mov
repnz
push
jle
or
leave
sub
jg
iret
dec
and
push
pop
mov
pop
jne
shlb
pop
aas
into
jge
jg
inc
mov
lock
in
xlat
sahf
push
push
pop
jge
push
aad
cmpsb
jb
and
out
sub
push
xchg
inc
xchg
gs
insb
roll
jo
nop
mov
dec
into
ja
and
pop
es
outsb
cmp
xchg
jae
pop
inc
es
stc
fcmovnu
xchg
inc
lcall
pop
std
pop
loopne
fldcw
jecxz
jbe
rclb
xor
mov
xchg
lock
pop
dec
push
repnz
sub
popl
pop
or
mov
mov
out
pop
inc
push
fs
ret
mov
cmpsl
mov
jmp
mov
loope
jbe
pop
mov
add
loop
mov
lahf
and
xchg
push
pop
cs
out
scas
and
and
addr16
xor
imul
xchg
and
gs
jp
fisttpll
test
jecxz
inc
adc
jbe
adc
pop
ja
out
xchg
cmpsb
push
aaa
push
aad
idivl
divb
mov
cmp
scas
cmp
mov
adc
js
mov
out
inc
sub
daa
enter
cmpsb
data16
mov
ror
int
jge
rcl
inc
xchg
cmc
cmpsl
add
fsts
pop
outsl
fiadds
add
fcoml
push
sti
js
lcall
scas
gs
gs
es
mov
jmp
xor
in
jp
inc
pop
dec
ljmp
dec
lahf
sub
sti
incb
or
scas
gs
sbbb
into
outsb
repz
pop
aas
enter
or
mov
sti
and
adc
movsl
ja
xor
mov
push
inc
testb
test
fisubrl
push
jg
shll
test
xor
inc
loop
xchg
sarb
daa
jo
into
lods
divb
pop
fwait
shrl
xchg
adc
outsl
call
and
js
push
cwtl
stc
movl
addr16
int3
dec
mov
daa
into
mov
inc
aas
xchg
cmp
jno
insl
xor
aaa
ljmp
sbb
mov
xchg
cmpsl
jle
lock
fmulp
and
push
mov
push
push
xchg
pop
pop
ds
sub
lahf
ja
inc
jb
adc
outsb
mov
cmp
pop
cmpsb
iret
mov
mov
push
push
jae
jbe
cmpsl
ja
xchg
cmpsl
fstpl
push
insl
das
mov
fldcw
pop
wrmsr
fdiv
jo
cmp
push
mov
mov
and
js
cmpsl
jbe
sahf
jno
cmpsb
push
icebp
inc
stos
cmp
push
inc
fwait
sti
sahf
insl
je
divl
movb
daa
ficoms
dec
pop
nop
xchg
jg
lea
stc
push
movl
ja
add
pop
iret
fldt
scas
fwait
jns
ffree
jns
test
out
hlt
jp
and
jg
xor
dec
pop
mov
push
jbe
cmp
inc
mov
and
adc
lea
addr16
pop
outsl
push
pop
fptan
jo
mov
mov
data16
cmp
dec
xchg
xor
pop
pop
das
mov
test
xlat
mov
test
pusha
add
mov
stos
into
mov
bound
into
daa
cmp
sahf
mov
fsubs
outsb
daa
pusha
jbe
inc
and
enter
pop
xlat
loop
stos
ret
ss
pusha
xchg
fisubs
dec
pop
cltd
dec
ja
push
into
mov
movsl
shll
imul
or
push
inc
pop
mov
and
jo
push
mov
mov
adcb
xchg
pop
jl
fisttps
aam
out
dec
jecxz
pusha
cmpsl
daa
mov
inc
xor
mov
xchg
scas
jno
dec
pushf
pop
xchg
mov
rcll
adc
push
dec
outsl
mov
lds
clc
pop
jae
and
mov
push
sahf
xor
div
fs
sub
jg
xchg
cs
xchg
roll
ret
es
imul
push
faddp
xor
int3
mov
xchg
jne
cmp
add
aam
and
aam
mov
xchg
enter
enter
and
jg
rcll
stc
filds
out
hlt
sub
sub
daa
mov
dec
mov
scas
mov
ds
xchg
cmpsl
shll
addr16
pop
jge
mov
std
push
mov
lds
aas
dec
add
sbb
bound
inc
leave
das
in
mov
in
js
mov
mov
add
pop
loopne
xchg
in
jg
push
lahf
movb
in
rcl
sub
mov
cs
mov
xchg
push
xchg
cld
ds
fs
mov
push
xchg
fists
push
stos
clc
outsb
push
inc
xchg
int
lahf
jne
push
inc
push
xchg
mov
loope
dec
mov
cltd
daa
jo
ret
sub
ffreep
clc
mov
lahf
test
sub
jle
add
daa
add
xchg
jbe
scas
shll
shll
pop
cmpsb
sbb
scas
add
out
lods
mov
or
es
push
mov
dec
xchg
hlt
and
add
ja
xchg
mov
inc
aas
mov
push
aaa
lock
sbb
adc
sti
dec
les
stc
jbe
ds
pop
daa
dec
daa
add
scas
xchg
iret
ljmp
in
cltd
dec
pop
xchg
xchg
dec
fldcw
in
xlat
scas
cmpsl
shlb
inc
jbe,pt
cmpsb
dec
rcrl
push
add
cmp
loopne
xchg
or
pop
ret
jg
xchg
jno
repz
aas
xchg
loop
ss
mov
mov
outsb
repnz
pop
xor
pop
jnp
inc
mov
add
pop
jle
movsb
xchg
js
mov
cld
arpl
inc
into
test
scas
daa
pop
xchg
daa
mov
push
push
pop
aaa
sub
cmpsl
jmp
pop
lods
out
inc
jno
cmpsb
xchg
push
dec
cmp
jp
jmp
xchg
push
inc
jo
fisttpll
or
ss
sub
push
iret
fwait
xchg
aaa
jne
mov
pop
push
js
adc
dec
es
jle
jns
mov
orl
ja
dec
bound
and
push
loope
ds
jbe
dec
pop
push
scas
das
sub
es
ljmpw
in
jo
and
daa
cmpsl
mov
mov
filds
in
push
xchg
xchg
es
ror
iret
inc
insl
or
jmp
push
test
daa
push
std
jb
pop
fwait
sti
push
pop
es
push
or
dec
and
outsl
daa
int
pop
rorb
call
iret
sbb
dec
push
fs
inc
and
xchg
mov
or
or
fisubs
outsb
xchg
out
scas
cmpsl
pop
push
jle
inc
lret
jb
adc
jmp
dec
imul
es
lahf
cmp
mov
daa
sahf
popf
mov
cmp
in
push
inc
sub
dec
inc
xchg
pusha
sub
push
pop
or
mov
lock
rorl
mov
cmpsb
mov
dec
sbb
in
fsts
xor
xchg
jecxz
iret
outsl
ds
push
inc
add
pop
jmp
out
jecxz
scas
mov
das
inc
iret
sub
loop
inc
pop
ss
fisubrs
jbe
jmp
bound
es
mov
push
scas
popf
or
or
or
outsb
dec
jae
xchg
mov
test
daa
ss
xchg
mov
cmp
into
out
outsb
push
pop
scas
sarl
cmpsb
push
mov
shr
inc
inc
and
ds
bound
scas
pop
push
das
cltd
mov
jmp
sahf
pop
mov
push
add
icebp
cs
lahf
mov
xor
leave
pop
sub
jbe
stc
push
shll
cmpsb
outsb
movsl
mov
xchg
jns
fnsave
jo
mov
or
testl
xlat
aam
mov
jo
cmpsl
xchg
fistl
into
sub
mov
out
dec
xlat
xor
cmp
or
inc
hlt
xor
into
popf
cmp
xor
fstpl
outsl
clc
aaa
push
ss
jecxz
pop
nop
inc
push
scas
outsl
lock
pusha
pop
into
xchg
sahf
fwait
data16
sbb
sbb
push
cmp
fsubs
iret
ja
cmpsl
sti
jmp
cmp
gs
push
hlt
cmp
and
ja
bound
cmpsl
cmp
xor
enter
jno
dec
call
pop
js
cmpsl
mov
fldt
loopne
jmp
push
sti
js
pusha
pop
andb
enter
loope
mov
inc
push
scas
jl
add
lahf
and
push
enter
std
pop
sub
or
ss
popf
fadd
xlat
mov
mov
mov
push
adc
add
ja
jg
movsb
lea
pop
sti
int
nop
and
mov
push
dec
push
into
xchg
cmp
xchg
cltd
movb
das
idivl
inc
push
insb
rcll
inc
jecxz
inc
xchg
ficomps
jo
pop
push
cmp
xchg
fwait
bound
nop
dec
jbe
mov
inc
test
notb
in
add
pusha
inc
ljmp
nop
pop
adc
inc
xchg
out
inc
sahf
jle
pop
xor
xchg
sbb
adc
inc
data16
xlat
nop
jno
push
adc
gs
daa
aaa
fs
push
scas
fildl
or
in
dec
cmp
xchg
cmp
cwtl
xlat
and
gs
bound
popa
js
mov
dec
lea
xchg
inc
pop
push
das
add
movl
es
jp
outsl
mov
fstpl
dec
bound
cmp
and
push
push
mov
sbb
scas
loop
fidivs
mov
rol
or
addr16
dec
xchg
scas
pop
cmp
leave
imul
fistpll
das
mov
cs
outsb
jecxz
xchg
dec
cmp
and
xchg
lahf
jo
ffreep
outsb
and
xlat
into
fldcw
in
push
sub
xchg
xor
pop
or
je
xchg
push
add
pop
daa
mov
push
popf
jo
push
mov
lahf
repnz
xchg
mov
dec
pop
shlb
rolb
inc
pusha
das
push
sub
rorb
outsb
and
add
pusha
shll
push
dec
arpl
push
ja
xor
mov
das
mov
sti
or
jmp
scas
test
cmp
sbb
arpl
dec
and
push
xor
xchg
rclb
jo
dec
movsl
pop
xchg
and
or
pop
push
pop
and
xchg
mov
ja
test
pop
mov
jns
cmpsb
mov
in
sarl
sti
push
out
dec
jmp
cmp
pop
shlb
addl
inc
scas
daa
aas
cmp
mov
out
pop
lcall
and
cmc
push
push
ds
mov
aas
push
pop
lret
push
test
mov
push
lahf
outsb
inc
sti
mov
xor
ss
cmp
pop
push
leave
adc
addr16
pop
jbe
pusha
ja
addr16
ficomps
mov
push
addps
xchg
lods
jns
pop
ja
cmpsb
aaa
xor
aaa
sub
mov
loope
ss
mov
jg
faddl
xchg
movsl
dec
pop
cmp
outsb
mov
push
push
or
jno
jbe
push
inc
jbe
push
test
add
pop
adcb
cwtl
fcmove
pop
enter
adc
aas
mov
xor
push
inc
and
push
cli
insl
pop
arpl
add
scas
jge
inc
ds
mov
jmp
xchg
and
mov
pushf
loop
xchg
mov
push
lds
leave
inc
mov
sub
xor
jecxz
ds
ja
in
in
inc
into
das
inc
or
outsl
lods
mov
push
mov
mov
mov
fsubp
mov
sbb
outsb
xchg
call
jp
pop
movsl
inc
pop
and
sbb
pop
fildl
jg
call
xchg
and
mov
clc
adc
cs
push
mov
out
xlat
jne
cmp
mov
mov
add
sahf
jbe
xchg
repnz
ja
fwait
test
inc
and
push
push
nop
lods
inc
push
jle
cmpsb
dec
fs
ljmp
mov
scas
jns
jmp
jge
adc
in
loope
dec
mov
lcall
pop
inc
mov
and
addr16
inc
cmpsb
daa
sbb
sub
xchg
xchg
and
pushf
sbb
aaa
jmp
cmpsb
mov
lret
and
dec
imull
cmp
or
or
push
xchg
daa
int3
addl
jle
push
addr16
mov
negl
xchg
pop
jo
dec
lods
push
rcll
aaa
lock
inc
inc
ja
movsl
push
icebp
mov
pop
or
xchg
fdivrp
rcll
jne
das
inc
add
lods
mov
push
mov
mov
pop
mov
cmpsb
push
scas
jbe
xchg
xchg
inc
aad
fiadds
pop
dec
cld
cpuid
addr16
pop
adc
cmp
adc
in
ss
ficoms
push
mov
mov
cmpsl
push
jmp
ljmp
scas
jg
sbb
xor
daa
jl
xchg
push
outsl
ds
xor
push
dec
iret
inc
andb
pop
ss
lea
xchg
in
addr16
pop
xchg
pop
int
inc
fisubl
xchg
xor
push
dec
xchg
mov
ret
jbe
das
pusha
cmp
sub
push
xchg
pop
lcall
iret
lret
outsl
jle
push
dec
and
faddp
pusha
push
aas
jmp
pop
rolb
xchg
addr16
fstl
ficomps
inc
mov
dec
rcrl
jecxz
inc
pop
daa
test
enter
orl
sub
cwtl
ds
in
add
and
outsl
lahf
pop
iret
mov
xchg
into
cmp
pusha
nop
movsb
aaa
xchg
dec
or
aas
cmp
es
dec
xlat
fnstcw
ja
lods
aad
pop
arpl
pusha
jle
jbe
jp
xor
lods
push
icebp
lods
addr16
cmpsl
push
mov
in
dec
das
xchg
andl
and
add
inc
fbstp
add
out
aaa
jg
scas
movsb
mov
and
aas
aad
xchg
xor
iret
cwtl
dec
pop
sbb
ficompl
movsl
lds
or
cmp
and
push
xlat
das
imul
scas
pusha
mov
mov
aad
xchg
fisubrs
mov
mov
imul
xor
xchg
daa
out
push
and
test
jp
jle
mov
push
cmp
xor
sub
fisubs
push
sub
push
sub
fiaddl
loopne
cltd
in
outsb
pop
nop
mov
jle
pop
es
aad
dec
call
je
push
fidivrs
xchg
adc
mov
daa
push
and
pop
fisubrs
fs
mov
fstps
das
fidivs
lea
mov
add
inc
insl
fistl
jns
pop
mov
xchg
es
aas
and
daa
cs
out
test
xorl
shr
outsb
and
xchg
push
std
idiv
in
adc
pop
xlat
pop
pop
mov
or
mov
push
dec
aaa
inc
int
nop
dec
jecxz
inc
daa
outsl
sahf
ret
or
gs
ja
cmpsl
std
js
loope
mov
aas
iret
bound
into
jbe
sbb
dec
dec
push
imul
inc
lock
nop
jg
popf
faddl
push
addr16
iret
jle,pt
aas
int
scas
cmp
add
cmp
das
pop
push
add
dec
pop
jo
adc
pop
out
jecxz
cs
mov
outsb
shrl
fsubrs
push
cmpsb
dec
outsb
sti
push
dec
xchg
xor
dec
mov
fidivrs
aam
daa
lods
or
loop
inc
lahf
mov
sub
mov
cmpsb
xchg
ds
das
in
fidivrs
inc
cmp
xor
inc
daa
and
inc
inc
pop
pusha
mov
add
cli
ja
xchg
sbb
inc
and
mov
mov
mov
lock
out
ja
push
pop
xchg
push
ret
or
aam
push
xor
mov
xchg
mov
xchg
outsl
cmp
cmp
cli
icebp
ds
addr16
fidivs
cmpsb
push
ss
inc
gs
xlat
int
enter
xor
out
inc
push
inc
mov
lahf
scas
pushf
pop
ja
cli
lea
shlb
cs
addr16
cmpsl
and
gs
daa
mov
pusha
sub
test
enter
mov
cmpsb
sbb
xchg
ds
fbld
mov
cmp
inc
xchg
xor
mov
mov
and
and
mov
addr16
xchg
push
adc
movsl
daa
push
addr16
inc
mov
rcrb
push
jno
inc
dec
stos
cmpsb
fiadds
fnsave
jmp
bound
shll
mov
fs
dec
add
push
cs
dec
push
sub
mov
iret
xor
jne
popf
mov
shll
push
es
mov
jbe
dec
mov
fisttpl
inc
inc
adc
cli
scas
fistpll
fisubs
push
dec
xchg
sbb
sbb
dec
adc
int3
cld
inc
out
scas
outsb
es
xchg
das
mov
cmp
lds
dec
xlat
cltd
leave
js
jo
out
xorb
cs
es
and
stos
or
call
push
dec
xchg
outsl
std
ret
jl
mov
popa
mov
cmpsb
add
mov
aaa
xchg
ret
pop
cmp
fidivrs
xchg
push
scas
fcmovnu
xor
sbb
stc
jg
nop
outsl
outsl
push
stos
push
push
insb
shlb
xchg
sub
repz
dec
sti
push
test
inc
inc
pop
push
jbe
pop
inc
stc
popf
dec
repnz
mov
xlat
cmpsl
mov
mov
inc
and
xor
mov
jbe
addr16
daa
sub
xchg
sub
adc
mov
test
mov
push
iret
lcall
into
test
add
mov
lea
fists
mov
mov
xlat
das
ret
xchg
test
inc
pop
pop
in
lahf
mov
push
sahf
add
sbb
mov
daa
aad
aaa
ds
push
out
sahf
mov
push
dec
pop
add
ret
test
inc
xlat
push
out
addr16
xchg
mov
scas
push
push
into
cmp
sub
insl
divl
cmp
jns
dec
pop
pushf
pusha
sahf
neg
add
ja
repnz
cmp
sti
mov
in
push
xchg
lds
iret
jbe
test
int3
sub
xlat
push
into
pusha
mov
xlat
xchg
cmpsl
idiv
enter
add
flds
pop
push
cs
lods
ja
xchg
mov
xlat
fistpl
call
mov
adcb
test
cmc
hlt
push
jmp
xchg
adc
pop
inc
es
fildl
sbb
test
fs
xchg
mov
inc
cmp
in
out
call
mov
mov
scas
inc
xchg
out
into
pop
cs
or
fists
push
sub
sbb
jae
aad
dec
out
mov
pop
shll
rcrl
loope
push
data16
iret
or
mov
fdiv
push
and
mov
fisubrs
imul
push
lea
cmp
jg
xor
ret
dec
push
call
fiadds
jbe
inc
pop
jmp
aam
aad
into
pop
out
push
movl
repz
movsl
aam
test
cmc
pushl
ds
xchg
cmpsb
dec
lds
movsb
cmp
leave
jg
jno
mov
mov
scas
test
pop
xchg
fisubrs
xchg
out
arpl
stc
daa
aas
xchg
xchg
les
push
mov
mov
addr16
aam
fistl
xor
xor
push
outsb
push
adc
push
jb
aam
ficomps
xor
int
inc
js,pt
jbe
add
mov
pop
mov
shrb
jmp
popf
jae
movsl
pushf
cmp
in
sub
pop
cld
daa
ret
icebp
outsb
daa
jns
pusha
dec
xor
pop
and
adcb
in
push
mov
and
mov
pusha
cs
lahf
sub
int3
dec
push
cmpsl
iret
test
mov
imul
js
daa
or
xor
mov
mov
xchg
pusha
xchg
push
aas
xor
jno
jg
sub
push
mov
sarb
pop
inc
sub
cli
xchg
inc
out
pop
inc
ja
and
daa
mov
je
aaa
mov
shrb
aas
cli
loop
push
mov
into
testb
xchg
push
cmp
sub
jbe
sbb
outsb
ss
out
lods
mov
mov
push
mulb
jmp
xchg
lock
xor
xchg
xlat
push
push
loope
fbld
arpl
ljmp
test
sbbb
xchg
ljmp
jg
dec
stc
push
xlat
dec
adc
dec
inc
or
loopne
mov
call
cmpsb
mov
push
push
and
pop
sahf
sub
jg
das
mov
inc
cmpsl
jmp
data16
jno
xchg
ja,pt
sbb
ss
xchg
pop
outsb
sbb
rcrb
rcrl
in
and
out
add
xor
stc
jne
push
sub
daa
scas
mov
fxch
sti
stc
push
scas
jle
aaa
dec
xchg
out
sahf
push
inc
cld
xchg
xchg
push
dec
cmp
scas
pop
iret
and
loop
pop
mov
xchg
jl
and
mov
clc
xchg
push
mov
outsb
pusha
sub
inc
inc
test
cmpsl
and
dec
outsb
inc
rorl
shll
lods
mov
xchg
dec
push
push
mov
lods
push
mov
outsb
lcall
xchg
cmpsl
stos
cmpsl
sbb
push
xchg
push
jbe
add
xchg
pop
xchg
pop
cmp
xchg
divb
xchg
into
and
out
dec
xlat
data16
mov
fs
popa
push
insb
ret
mov
outsl
cmp
push
xchg
push
push
jns
es
das
cmp
xchg
push
nop
loope
ficomps
ja
pop
sbb
imul
mov
enter
jnp
lock
les
mov
dec
ss
lcall
inc
scas
fmulp
and
nop
iret
aaa
js
push
push
xchg
aas
js
mov
sub
cmpsl
enter
xor
xor
lea
pusha
ja
mov
add
aaa
jns
pop
es
ja
and
pop
mov
inc
aaa
das
inc
scas
aam
pop
ss
push
jno
mov
daa
inc
pusha
and
das
mov
jb
call
xchg
add
xlat
shll
aaa
inc
fbld
dec
nop
add
push
dec
sub
ret
popf
loope
ss
mov
mov
fmull
fstpt
sub
or
sub
mov
loope
outsb
pop
ja
pusha
mov
aaa
popf
sub
push
scas
dec
mov
mov
addr16
inc
add
stc
rcrb
push
fistl
loop
jbe
aaa
pop
aas
daa
data16
filds
cli
and
in
sub
xchg
ja
push
insb
mov
nop
jmp
dec
and
pop
jo
mov
dec
jno
scas
outsl
iret
jo,pn
mov
pop
mov
xchg
loope
movsl
fwait
or
mov
lcall
mov
cmpsb
icebp
fwait
xchg
mov
push
nop
and
and
loopne
imul
inc
sti
sti
jbe
xor
push
cmp
xchg
aaa
and
and
aad
push
push
insl
fwait
cmp
data16
pop
dec
es
cmpl
mov
arpl
cmp
jbe
scas
push
pop
xchg
aaa
cmp
popl
std
aaa
fimuls
lahf
adc
xchg
outsl
fsubrl
into
push
jg
push
push
out
mov
pop
add
mov
not
cmp
push
dec
push
clc
push
outsb
and
mov
jmp
jo
clc
mov
lea
xchg
jae
jl
adcl
pop
std
mov
add
adc
push
add
push
fs
pop
xchg
push
das
lods
lret
addr16
dec
jbe
hlt
and
loopne
lods
ja
movl
pop
cmp
outsl
fcomip
nop
cmpsl
push
pop
adcl
outsb
mov
ljmp
push
jae
pop
and
xor
xor
xlat
scas
jg
sub
es
jmp
push
mov
push
sub
shll
mov
cs
push
mov
pop
dec
push
jg
jecxz
lret
cmp
pop
es
mov
sub
inc
inc
nop
sti
xchg
adc
insl
add
jb
mov
test
daa
pop
ja
pop
jo
sbb
push
xor
xor
dec
xchg
cmp
ja
jbe
push
aam
int3
test
dec
shll
xlat
jmp
cmpsl
daa
pop
scas
sbbb
cmpsb
jmp
jno
and
aas
jbe
jo
mov
push
adc
ret
daa
imul
call
and
addr16
cmp
push
loop
mov
pop
cmc
pop
rolb
or
pop
xchg
xor
aas
repnz
mov
aaa
pop
add
in
scas
xor
pop
mov
pop
inc
aad
jns
pop
into
add
sahf
mov
cwtl
test
mov
pop
out
addr16
xchg
pusha
les
fnsave
subl
aaa
daa
pop
aam
lret
and
lds
and
dec
cmp
scas
pop
ss
cmp
fcomi
jg
fsubp
subl
dec
and
jne
mov
nop
push
enter
mov
ljmp
movsb
int3
fcoml
cmpsl
push
xchg
push
and
rorb
xor
mov
into
push
xchg
cld
and
adc
jg
push
movsb
rol
js,pt
mov
push
cli
lret
repz
mov
and
loope
push
dec
mov
bound
cld
jne
mov
mov
push
out
mov
mov
fiadds
xlat
aaa
dec
jmp
jns
inc
and
add
mov
xlat
repnz
daa
sahf
mov
xchg
add
outsb
aaa
mov
sbb
jmp
push
push
aas
inc
fdivs
ds
cmp
fistps
mov
es
mov
addr16
pop
sahf
inc
sub
data16
fisubs
fsubrl
mov
dec
inc
pop
adc
lods
push
inc
and
fldt
clc
add
xchg
pop
jae
mov
cmp
sub
inc
cltd
inc
movsl
mov
mov
into
in
call
movl
sahf
cmpsl
fidivrs
mov
xchg
nop
dec
xor
test
add
addr16
mov
outsl
dec
rcll
out
into
push
or
data16
push
cmp
dec
aas
not
ja
insl
jnp
mov
std
daa
cmpsb
fisttps
cmpsl
inc
lock
insl
into
scas
lahf
call
mov
popa
cli
and
int3
sbb
fs
mov
ljmp
addr16
and
icebp
ljmp
cs
mov
push
push
mov
sahf
in
das
nop
jle
add
bound
and
pop
push
js
push
nop
dec
sbb
pop
fbstp
pop
pop
inc
lods
cmp
mov
jecxz
pop
inc
not
scas
movl
dec
lahf
sub
insb
inc
ret
aas
and
or
push
xchg
xlat
daa
loope
jbe
sub
sbb
push
and
xchg
pop
rolb
flds
aaa
lahf
fidivrs
out
lds
rcll
and
repz
cmpsb
fwait
push
lea
xchg
cli
jns
cmp
pop
dec
xor
adc
gs
decb
adc
or
scas
push
nop
pop
int
or
data16
or
jle
push
jg
mov
aaa
pop
push
lahf
dec
push
push
mov
dec
xchg
scas
into
xchg
cmpsl
mov
jg
movsb
adc
xchg
pop
jns
or
lcall
test
cmp
mov
dec
dec
outsl
rcrl
cs
pop
out
jo
push
xlat
push
roll
inc
inc
xchg
cmpsl
jo
push
push
push
lret
lds
sbb
call
sahf
and
mov
and
sti
dec
fists
ficomps
aad
test
and
iret
das
int
test
mov
fstpl
outsl
pop
mov
jle
das
mov
fiadds
hlt
aam
iret
xchg
sbb
cltd
xor
pop
cli
mov
cmpsl
add
mov
push
push
mov
xlat
shrb
repnz
pop
dec
push
mov
xchg
test
xchg
orb
xlat
xchg
push
out
cmp
es
addr16
or
cmpsb
or
outsl
mov
xchg
ljmpw
add
sub
mov
scas
push
xchg
in
inc
inc
xchg
inc
mov
mov
aad
mov
in
xlat
inc
mov
stos
jns
pop
imul
into
das
scas
jbe
rorb
mov
xchg
das
mov
pop
hlt
orl
pop
push
ja
adc
mov
cwtl
xlat
scas
aaa
xlat
shl
dec
jno
xchg
sub
and
sti
jle
data16
mov
and
mov
xchg
adc
fisubrs
push
lods
xchg
ja
inc
and
daa
dec
cmpsl
adc
mov
mov
es
xchg
pop
ficomps
cmpsb
into
mov
cs
mov
out
es
aam
add
stos
ljmp
popf
insl
fcmovne
ficoms
jecxz
daa
cmpsl
pop
push
push
pop
ds
mov
inc
sarl
sahf
lret
dec
mov
jmp
jmp
pusha
adc
in
push
rcll
pop
push
scas
and
in
pop
iret
xchg
test
and
iret
inc
movl
int
ja
dec
and
xchg
fnstenv
xor
movsb
push
cmpsb
mov
xor
cmp
push
pop
daa
aad
inc
aaa
dec
std
and
push
roll
arpl
cmp
dec
lahf
push
outsl
into
jbe
sub
lret
test
xchg
cs
daa
push
pop
arpl
daa
jo
iret
jg
mov
outsl
add
adc
xchg
push
push
sub
mov
xor
mov
mov
fiadds
mov
jle
scas
inc
mov
movsl
dec
jg
push
addr16
and
das
js
push
shlb
leave
push
dec
into
sub
adc
stos
push
shll
repnz
daa
lret
cmpsw
mov
push
cmpsl
pop
in
popa
xchg
push
mov
xchg
mov
cmpsl
cmpsb
add
push
xchg
fidivs
sbb
shrl
shrb
xchg
ds
insl
jmp
push
xlat
fldenv
outsb
xchg
loopne
iret
out
std
fistpl
push
daa
jnp
scas
pusha
pop
lea
xchg
mov
out
xchg
imulb
enter
clc
movsb
sbb
movl
into
dec
add
into
dec
push
dec
mov
dec
xchg
mov
les
ja
jne
xchg
sbbb
jb
movl
mov
scas
push
mov
inc
loop
nop
xchg
and
jle
xchg
mov
xchg
xchg
out
inc
scas
outsb
and
outsl
push
in
pop
jg
fs
daa
dec
aad
sub
adc
mov
cmp
xlat
push
and
ret
pop
out
inc
xchg
pop
ljmp
pusha
pop
sbb
mov
dec
dec
adc
aaa
jae
pusha
push
jecxz
dec
jg
fcmovbe
inc
pusha
pop
push
and
or
insb
xlat
es
sub
or
aas
ret
addr16
mov
jno
loop
inc
cmp
xor
xor
sahf
push
adc
push
push
xchg
sbb
push
iret
pop
dec
xchg
xor
cmp
xchg
enter
push
adc
sub
mov
movsl
popf
scas
mov
ss
ds
iret
adc
mov
fildll
fs
dec
jg
mov
daa
inc
jo
mov
enter
xchg
pop
ss
xchg
jno
nop
mov
xchg
sbb
cmp
jno
xchg
dec
jno
pop
lock
es
cmpsl
mov
in
dec
and
inc
loop
mov
push
adc
add
out
and
pop
add
jg
cmpsb
inc
ljmp
push
cmc
xacquire
jo
adc
in
daa
pop
addr16
mov
es
mov
movb
xor
lret
ds
jnp
mov
inc
mov
pop
dec
jle
sub
mov
loopne
call
xor
add
xor
and
push
pop
fistpll
dec
xchg
add
fld
cs
lcall
push
shrl
daa
ds
dec
fists
cmpsb
out
pop
push
inc
xor
mov
bound
add
daa
pop
push
xchg
test
mov
faddl
pusha
cmpsl
out
push
call
into
xchg
inc
pop
outsl
push
dec
fs
aam
addr16
xchg
test
and
cmpsl
mov
add
push
xor
popf
xor
jle
ja
daa
jo
add
les
in
jbe
and
lahf
pop
jge
cmp
add
sbb
inc
addr16
nop
push
cmpsb
fistps
lret
in
push
out
pop
aas
xchg
mov
jle
pop
ja
or
mov
push
sbbb
xlat
lea
popf
scas
cmp
into
mov
scas
pop
int3
pop
xchg
push
call
pop
xor
mov
cmp
divw
mov
fstpt
xchg
cli
in
xchg
push
adc
aam
shl
jns
mov
sahf
ds
cmpsb
pop
loop
movl
push
fistpll
leave
xlat
dec
xchg
addr16
jae
lcall
mov
inc
mov
ja
and
in
lahf
daa
sub
push
pop
add
xchg
fstpl
jbe
aad
es
scas
sub
cld
rcl
daa
mov
mov
inc
aas
inc
lahf
xchg
xchg
adc
sub
lret
scas
lcall
xor
mov
mov
lods
cltd
pop
popa
scas
lahf
ffreep
ds
xchg
in
cmpsl
data16
icebp
cmpsb
pop
dec
js
lock
pop
xchg
dec
xchg
sahf
aaa
insb
mov
scas
adc
mov
ds
in
aas
into
pop
pop
mov
cmpsl
cmp
add
push
fsubrl
sub
scas
scas
mov
mov
pop
jns
aas
lahf
push
bound
push
jbe
fdivrs
dec
pop
xlat
mov
mov
sbbb
gs
jne
xlat
xchg
and
cmp
sbb
add
aas
push
popf
push
out
push
ja
pop
push
and
ja
inc
mov
pop
jno
dec
jo
mov
cmpsl
es
fimuls
lret
lahf
ret
mov
xchg
inc
pop
jns
add
pop
xchg
sahf
out
outsl
dec
or
xchg
push
push
ja
cmp
rorl
mov
daa
mov
xchg
lret
sahf
mov
outsl
jmp
nop
fisubs
push
xor
inc
mov
es
cmp
add
inc
outsb
mull
mov
les
xchg
xchg
adc
int3
jno
sub
dec
ds
rcrb
and
fnstenv
out
iret
jo
out
js
pop
inc
sub
jge
add
arpl
mov
cmp
add
xchg
dec
jmp
push
and
aas
dec
repnz
mov
xor
dec
lret
add
outsb
aas
ret
or
mov
scas
sahf
rolb
cltd
lods
pop
mov
xor
mov
pop
jp
mov
jne
adc
pop
dec
mov
js
xor
sti
out
push
add
std
and
enter
das
push
loope
es
ds
mov
cmpsb
xor
scas
jo
xorl
dec
ret
mov
mov
ds
ret
iret
daa
scas
adc
icebp
dec
and
pop
sahf
push
push
cltd
ja
inc
clc
push
push
push
inc
xlat
loopne
adc
out
inc
ja
addr16
push
mov
xchg
mov
outsb
xchg
bswap
pop
jns
pop
repnz
lahf
data16
daa
xor
mov
inc
scas
and
daa
daa
cmc
lock
push
test
push
mov
cs
push
iret
xor
jp
dec
aas
lds
test
push
cmpsl
aam
test
je
dec
fs
imul
addr16
stos
mov
fistpll
sahf
stos
xor
in
frstor
cs
fiadds
outsl
jb
and
popfw
fimuls
mov
mov
loopne
scas
xlat
xchg
pop
and
push
jp
cwtl
mov
data16
popf
repz
outsb
mov
cmpsb
mov
ja
cmpsl
pop
dec
pop
xchg
jecxz
aas
das
sub
push
test
cltd
cmpsb
pop
and
jo
scas
nop
fwait
xchg
pop
adc
add
ds
das
data16
bound
push
mov
dec
dec
aas
fcmovnu
and
and
jns
repz
and
testb
xchg
cmc
pusha
sub
stos
inc
xchg
push
jg
mov
fs
pop
enter
fstps
dec
push
jmp
cmp
jno
pop
sub
lret
ds
adc
outsl
push
push
jns
addr16
fdiv
clc
stos
mov
call
daa
push
icebp
cs
xor
and
xchg
inc
dec
pop
sub
xchg
or
or
mov
xchg
icebp
ret
and
and
mov
ror
and
jno
cltd
mov
push
lret
sbb
mov
pop
sub
aad
pop
stos
xacquire
and
rcll
xlat
jl
test
inc
icebp
dec
inc
das
mov
push
push
add
push
push
mov
rolb
mov
cmp
mov
mov
mov
dec
jbe
push
mov
fsts
cs
xchg
push
xchg
data16
dec
jnp
pop
pop
sbb
pop
mov
fucomp
inc
inc
outsl
dec
test
cmpsl
xor
imul
icebp
mov
sub
xlat
dec
push
mov
or
sbb
jbe
push
pop
out
fisubrs
test
ss
addl
inc
rcrb
push
xor
sahf
rorl
jbe
popl
lock
cli
enter
lret
dec
jae
cmp
jns
nop
out
mov
aaa
xchg
data16
pop
and
pop
ja
clc
push
xor
cmpsb
dec
sahf
scas
xor
lahf
daa
cs
ret
xlat
jle
pusha
adc
lds
in
xlat
xchg
mov
dec
pusha
sbb
pop
movl
outsl
out
das
scas
add
add
sub
stc
pop
push
push
mov
mov
leave
adc
xor
jns
pop
sbb
cmpsb
push
and
fisubrs
call
ffreep
jle
pop
xchg
jo
push
pop
pop
daa
scas
push
lret
add
fisubrs
add
daa
enter
cwtl
adc
sub
inc
mov
mov
stos
xchg
mov
aaa
daa
pop
shll
sahf
cmp
jle
fildll
inc
cltd
xchg
test
rcll
stc
push
xorl
cmpsl
cmp
pop
inc
fs
push
ja
lods
jb
pop
push
mov
pop
icebp
and
data16
xchg
in
addr16
gs
and
aas
dec
push
push
cmpsl
push
cmp
mov
xchg
mov
push
xchg
xchg
xchg
mov
stc
mov
pop
pop
push
inc
inc
fmulp
add
into
cli
movl
xlat
cmpsl
mov
mov
push
dec
and
cmp
shlb
mov
jo
add
sarl
inc
inc
sbb
add
fnstenv
pop
sahf
xorb
fcoms
add
je
xchg
mov
mov
das
outsb
cs
inc
and
mov
out
cmpsb
cs
scas
fs
bound
xor
fidivrs
add
push
and
jns
fisubs
sahf
inc
shrl
insl
rcrb
cltd
jns
add
rclb
scas
dec
in
xchg
xchg
xor
sub
or
add
xor
stc
stc
mov
popf
jmp
cmp
push
daa
es
psubusw
jle
call
out
into
mov
jae
mov
add
out
pusha
daa
xor
enter
enter
push
mov
loop
pop
push
aaa
push
lahf
jne
cmpsl
scas
and
out
xlat
lds
std
xor
mov
dec
mov
inc
es
daa
xchg
dec
xchg
adcb
pop
xchg
movsb
pop
mov
ds
mov
lret
mov
pop
shr
insl
sub
and
xchg
push
gs
pop
push
sarl
iret
daa
repz
and
xchg
mov
inc
sbb
xor
ja
lret
add
push
ror
mov
push
ret
in
inc
lahf
fs
mov
dec
inc
stc
cmpsb
mov
fisttps
es
jnp
push
lods
xchg
ss
les
sahf
push
cmc
mov
shl
add
or
iret
aas
xor
cmpb
ret
ss
dec
lahf
mov
loope
addr16
push
fistpll
cmpsb
sbb
cmp
out
jno
pop
sahf
cmpsb
xchg
fsubl
xchg
xchg
daa
xchg
mov
and
xchg
pop
fs
sub
or
cmc
iret
rcrl
xchg
cmp
call
lahf
pop
push
scas
clc
sahf
add
fwait
mov
mov
fs
loop
cmp
addr16
add
push
pop
lcall
sub
imul
mov
aam
jne
mov
dec
xlat
mov
sub
pop
and
jle
fdiv
cmp
adc
pop
rol
fcomi
push
jmp
pop
and
dec
pop
les
jbe
aas
loope
mov
xlat
cmpsb
cs
lods
std
lcallw
push
cld
pusha
and
movb
adc
in
mov
iret
mov
outsl
cmp
pop
in
icebp
inc
inc
push
or
pusha
mov
mov
xchg
into
dec
cmpb
inc
xor
xchg
jle
std
add
jmp
lahf
jmp
pop
inc
mov
cs
addr16
mov
jne
scas
cmp
hlt
push
push
mov
daa
fidivrs
xchg
cmp
xchg
push
cmp
ljmp
lds
mov
lods
mov
cmpsl
fidivs
pop
fs
test
xchg
sarl
shlb
lea
push
in
rcll
aaa
in
mov
inc
and
mov
mov
cmp
sub
addr16
sbb
pop
lods
push
xor
dec
ds
pop
fiadds
rcrb
mov
nop
and
push
pop
iret
lret
pop
addr16
fisubs
cmc
sbb
icebp
dec
jnp
dec
push
repz
in
in
xchg
arpl
nop
aas
push
mov
cltd
sub
cmp
mov
mov
nop
icebp
in
xchg
adc
jns
into
jbe
mov
mov
mov
dec
call
and
and
xchg
nop
shrl
nop
push
xchg
jle
jge
data16
clc
shll
ret
fucompp
test
sub
mov
lahf
jns
iret
dec
push
sub
aad
scas
mov
cs
or
cmp
push
in
push
xchg
mov
cmp
push
dec
cmpsl
mov
movsb
ja
mov
notl
push
testl
mov
jp
push
dec
outsb
sbb
add
cmpsb
xor
test
pop
xchg
cmp
mov
jecxz
out
scas
mov
ss
push
mov
pop
addr16
es
mov
divb
fs
arpl
lret
jae
push
sub
mov
cmpsl
adc
lret
pop
adc
insl
and
xchg
in
inc
mov
pop
insl
lcall
mov
stos
icebp
jg
mov
outsb
jg
movsb
push
push
cmp
and
ficomps
das
aad
aaa
pop
in
pusha
xlat
cmp
mov
ja
insl
mov
inc
inc
aad
aas
iret
ds
push
xchg
out
fistpll
das
jo
fs
ds
outsb
sbb
or
shl
sub
ja
push
pop
leave
imul
repz
dec
jb
in
jne
repnz
and
sbb
out
push
js
inc
jmp
pop
xchg
xchg
stc
jl
jp
push
out
shl
shl
ja
mov
add
ljmp
mov
push
ret
je
test
hlt
leave
and
mov
mov
ja
leave
sub
adc
dec
aas
call
ds
cli
repnz
in
pop
aaa
dec
push
jbe
inc
or
inc
test
outsl
cmp
xchg
in
aas
push
sub
xchg
jo,pn
pop
xchg
mov
ss
dec
shll
jns
aas
mov
inc
jmp
xor
cmp
aad
movsl
push
inc
adc
fildll
and
push
mov
rorl
jl
outsb
mov
jmp
daa
int
push
adc
jge
push
hlt
mov
lahf
pop
push
pusha
cmp
cmpsl
sub
gs
xchg
ja
fstpl
enter
sbb
or
and
and
aas
xchg
frstor
push
outsb
inc
dec
loop
mov
pop
jle
xor
roll
xchg
cmp
lahf
mov
pop
jp
dec
xor
push
mull
cmp
sbb
fisubs
jmp
push
mov
stc
mov
pusha
xor
push
xor
jbe
aas
pop
das
mov
jp
inc
jg
xchg
mov
in
in
pop
and
inc
sbbl
cmp
xchg
cmp
ss
inc
fistps
pusha
mov
jns
aas
dec
es
ret
mov
data16
ss
or
cmp
cmp
xlat
add
xchg
nop
addr16
inc
push
xchg
pusha
push
fwait
mov
jne
mov
maxps
es
xor
iret
aaa
sbb
cld
mov
pop
xchg
pusha
cs
mov
pop
sub
mov
jge
push
in
push
mov
ss
xlat
sbb
and
and
xchg
push
xchg
mov
scas
ja
cs
incb
arpl
rolb
xchg
xchg
outsb
das
into
aaa
mov
scas
sub
mov
mov
in
inc
add
add
ja
xchg
adc
addl
pusha
lea
push
mov
inc
cmp
lods
dec
jo
es
sub
pop
into
pop
outsb
fisubl
ja
mov
add
loop
ds
pop
pop
fs
filds
add
xor
pop
scas
subb
push
sti
daa
lcall
ja
sub
nop
sti
leave
lahf
es
or
scas
inc
dec
sahf
cld
arpl
mov
cmp
icebp
xor
sbb
mov
shrl
inc
aas
mov
push
mov
pop
cmpsb
loope
xchg
push
es
rclb
add
imul
sub
add
lret
mov
adc
cmc
gs
in
dec
jae
imul
sub
int
inc
lcall
push
or
inc
pusha
xor
mov
fildll
iret
cmp
imul
sub
and
mov
pop
pop
frstor
pop
dec
jmp
mov
xlat
xchg
test
xchg
ja
icebp
inc
fstpl
mov
cli
pop
push
cld
add
jo
bound
mov
ja
popf
sbb
dec
leave
fisubrs
mov
jbe
fs
gs
push
mov
cwtl
pop
pushl
jbe
mov
pop
mov
test
push
xchg
ljmp
pop
inc
ja
mov
das
lods
sbb
pushf
mov
jge
lahf
xchg
mov
mov
lock
xchg
adc
clc
int
ret
shlb
notl
xchg
adc
mov
and
and
lret
xchg
or
and
add
scas
fwait
or
or
cmp
inc
xlat
dec
push
mov
repnz
mov
sbbb
ret
xchg
and
popa
jmp
sub
fidivl
xor
ret
add
xchg
inc
xchg
xlat
xchg
cs
dec
dec
repz
ss
movsb
into
jle
fdivl
repz
and
into
scas
imul
fs
test
add
ja
or
das
pop
cmpsb
push
test
aas
cmp
jle
cmp
pop
push
cmpsl
or
lds
add
xor
push
cmpsb
sbb
xchg
lock
and
jle
int
push
pop
and
and
icebp
call
jecxz
enter
mov
into
fucomi
mov
cmc
in
mov
repnz
filds
imul
inc
in
ss
dec
push
jo
mov
int3
jbe
push
jle
xchg
xchg
ja
into
mov
outsl
daa
pop
cs
add
enter
pop
imul
das
scas
cmp
outsl
xchg
add
push
adc
ds
dec
aas
into
inc
popl
cmp
xchg
mov
scas
shlb
scas
rcl
loope,pn
dec
push
mov
and
inc
jns
pop
xor
mov
cld
int
addr16
movsl
push
and
push
dec
sti
cli
in
xor
movsb
xchg
aad
fildll
sbbb
push
xchg
xchg
aad
cs
in
xor
out
scas
ss
cwtl
inc
imul
mov
scas
and
sub
ja
push
push
xor
push
mov
jg
gs
shll
add
xchg
inc
int3
cli
arpl
and
dec
imul
mov
xor
outsl
mov
inc
fneni(8087
xor
shlb
add
push
outsb
shrl
xlat
into
jp
jmp
xchg
jns
pop
cmpsb
mov
push
xlat
iret
mov
addr16
cmp
imul
sub
scas
or
daa
fldcw
aas
jo
out
xchg
dec
and
jo
rcrl
jg
ret
cmp
push
aaa
pusha
ja
into
xor
jno
ljmp
adc
pop
sub
sahf
add
outsl
lea
sub
mov
pop
xchg
lods
mov
rcrb
ss
je
cmp
or
pushf
add
xacquire
pop
xor
inc
pop
arpl
adc
xlat
add
adc
pusha
outsb
xchg
std
in
and
imul
imul
push
into
mov
ja
and
dec
xchg
cmpb
lcall
shl
mov
inc
jle
push
add
cmp
cmpsl
mov
and
test
xchg
xor
cmc
cmp
jnp
cmpsb
cmpsl
mov
xchg
fistpll
ror
daa
push
pusha
lret
inc
inc
ret
push
xlat
cmpsl
inc
mov
in
push
push
pop
pop
scas
dec
push
pop
mov
inc
xchg
cmp
xlat
fidivl
out
clc
inc
cmp
inc
push
or
loopne
and
jbe
ja
cmp
xor
xchg
cmpsb
sub
gs
pop
cwtl
test
mov
cmp
pop
jo
gs
bound
shlb
xchg
inc
les
sub
cltd
sub
imul
xchg
xchg
inc
dec
test
movsb
mov
stos
ja
aaa
xor
mov
cmp
xor
fmuls
mov
test
add
insb
pop
ret
jns
inc
sbb
pop
adc
xor
pop
pop
mov
dec
sub
pop
fcmovnu
dec
jg
sbb
pusha
xor
mov
mov
in
js
scas
jnp
stc
rcr
daa
scas
out
add
arpl
sub
fsubrl
out
pop
xchg
add
sub
mov
addr16
stos
adc
mov
jl
mov
add
sbb
xlat
sub
inc
jle
cld
add
jge
add
fcomp
push
subl
into
pop
call
dec
dec
push
push
les
cwtl
test
ja
fnstsw
bound
cmp
mov
and
cmp
adc
add
outsb
movsl
movl
dec
jg
mov
sbb
ja
ret
cs
popf
or
in
mov
imul
xor
scas
lret
pop
shl
push
xchg
mov
push
in
push
xchg
mov
fsubrs
mov
sub
xchg
notl
sahf
adc
rolb
adc
inc
dec
jle
inc
out
imul
in
xchg
stos
sbb
jmp
iret
add
pop
cmpl
cld
inc
jmp
xchg
out
inc
arpl
sub
push
xchg
sahf
mov
scas
mov
and
inc
or
xor
or
and
cmp
xchg
add
insl
lahf
mov
jle
mov
mov
jno
sub
mov
inc
into
pop
test
lods
push
mov
xchg
and
mov
or
test
testl
sbb
or
or
add
repnz
xchg
add
add
inc
inc
push
mov
cmp
lret
aaa
pop
outsl
dec
mov
pop
cmp
movsb
xchg
outsb
dec
loop
jbe
mov
and
pop
mov
inc
pop
push
fmuls
pop
xchg
push
out
js
lcall
xchg
adc
sub
sti
fnstenv
xchg
cmp
push
fidivrs
adc
mov
mov
jp
push
mov
jg
lds
movsb
push
inc
mov
adc
pop
or
loope
push
daa
pop
inc
xor
cmpsl
mov
loope
and
aaa
adcb
scas
ja
mov
call
lcall
and
inc
insb
lret
out
mov
sbbb
aaa
daa
push
pop
lods
fists
shll
xchg
jb
popa
sbb
ficomps
clc
clc
nop
out
das
scas
es
sarb
xchg
xchg
add
or
scas
xor
jmp
movsb
sub
orb
sub
cmpsb
sti
pop
ds
and
lahf
movsb
sub
push
scas
sub
daa
das
mov
jno
bnd
ja
inc
mov
sbb
pop
jle
fisubl
pop
enter
add
jno
jle
notl
aam
ja
aad
inc
push
lret
xlat
or
or
push
mov
xchg
in
hlt
xchg
add
ja
scas
aas
outsl
or
shll
pop
lahf
gs
outsb
or
mov
aam
dec
cmpsl
inc
in
mov
inc
jo,pn
cmpsl
rcrb
mov
push
or
imul
bound
into
ss
test
out
outsb
addr16
in
cmpsb
inc
mov
dec
scas
mov
add
and
iret
fwait
inc
test
push
aaa
and
aam
inc
pushl
or
pop
iret
push
sti
shlb
scas
pop
inc
mov
mov
neg
fistl
into
es
rcrb
pusha
scas
inc
sub
pop
xchg
push
popa
jns
into
jmp
jbe
mov
sub
cmp
inc
fcompp
das
data16
shll
sahf
subl
push
repz
enter
dec
pop
outsb
pop
out
mov
daa
enter
cmp
arpl
scas
not
mov
pusha
aad
stos
movsb
ds
addr16
push
jmp
jge
push
fsubr
iret
mov
adc
mov
daa
out
push
xchg
in
push
pop
jg
push
int
daa
push
jecxz
sub
mov
int
dec
rol
in
mov
imulb
in
int3
stos
mov
mov
ss
data16
push
inc
fimuls
mov
xlat
jo
xor
inc
sub
cmp
xchg
jbe
out
jg
push
clc
xchg
push
cmp
mov
fnstcw
mov
mov
shrw
addr16
jbe
das
mulb
pop
outsb
xchg
loope
pop
jmp
push
add
push
push
and
gs
stos
jmp
pop
cmp
add
fxch
xchg
out
popl
cmpsb
rcl
pop
iret
jbe
and
inc
fists
cmpsb
ds
add
push
cmpsb
push
mov
xor
icebp
inc
scas
out
js,pn
clc
sub
sbb
pusha
mov
outsb
lods
and
daa
out
addr16
into
sub
pop
xor
cs
and
dec
push
sahf
enter
xchg
xor
int
push
push
mov
jp
outsl
cld
clc
and
popf
push
mov
loop
dec
outsb
mov
imul
into
inc
push
mov
enter
xchg
pop
cmp
push
sarl
iret
ja
cmp
std
lret
mov
test
inc
inc
aaa
xor
or
and
pusha
push
jmp
movsl
push
test
js
jne
cmpsl
add
mov
inc
and
shrl
ja
lods
stos
sbb
mov
xchg
aaa
arpl
into
outsb
aad
into
and
push
iret
sub
addr16
ja
pop
mov
icebp
loop
mov
inc
aad
ds
inc
into
fwait
cmpsl
cmpsl
fbld
nop
outsl
sahf
and
xchg
push
cs
test
push
repz
jne
and
daa
pop
add
fbld
xlat
jmp
mov
les
cmpsl
fstps
addr16
push
sub
cwtd
dec
cmpsl
inc
aaa
xor
iret
jle
cmp
jg,pn
dec
inc
pop
fisttpl
out
fcoms
xchg
adc
push
icebp
ja
popf
pusha
add
fimuls
xchg
ret
cwtl
mov
inc
dec
fldl
scas
push
pusha
pop
mov
mov
call
mov
cmpsl
push
jbe
mov
mov
pushw
cltd
pop
pop
jb
xchg
dec
repz
fnstcw
push
insl
push
in
popf
lahf
movb
or
sub
push
add
mov
loope
pusha
dec
inc
ret
enter
jns
xchg
xchg
ds
and
aaa
mov
mov
pop
ss
das
cmp
faddl
les
push
cli
add
lea
mov
mov
add
scas
xlat
dec
pop
loop
push
clc
sub
inc
push
ss
out
in
jns
pop
fadds
cmp
pop
cmpb
loop
mov
pop
nop
divb
dec
adc
adc
sbb
mov
test
cmpsb
cli
jo
push
sahf
dec
outsl
inc
push
sub
test
push
orl
and
andb
push
ljmp
push
ja
std
push
in
daa
or
pop
sub
jno
loop
dec
scas
addr16
pop
cmpsb
dec
pusha
dec
jmp
mov
xchg
push
mov
clc
inc
sub
jge
mov
pushf
dec
pusha
scas
daa
fbld
pop
jno
cmpsb
inc
scas
lods
xchg
sahf
push
pop
into
out
pop
aas
and
push
iret
mov
jo
jnp
inc
pop
push
push
dec
jns
data16
or
daa
mov
lret
or
add
icebp
push
inc
push
dec
xchg
mov
push
loopne
jle
mov
cmp
mov
jo
les
mov
sarb
sti
aad
pop
call
ret
mov
xchg
xor
xchg
ja
and
mov
ja
sub
or
jle
mov
lds
daa
sahf
add
out
enter
loope
cmp
inc
pop
leave
loope
xor
jmp
ja
xchg
xchg
jno
push
and
jg
pop
pop
fsubp
sarb
repnz
pop
scas
sbb
push
cmc
cmpsb
mov
mov
fildll
push
inc
mov
inc
frstor
jg
jo
sub
xor
filds
push
icebp
pop
lret
add
pop
push
mov
enter
ja
outsb
outsl
sub
fcmovnbe
dec
ret
iret
cmpsl
push
sahf
inc
mov
sbb
in
and
cmpsb
ds
cmc
lahf
in
daa
jo
ss
xchg
xor
and
and
and
es
dec
mov
jle
mov
std
out
adc
jno
jg
mov
cs
pop
dec
push
push
in
xchg
cmpsl
pop
fstpl
jg
sbb
xor
xor
mov
xchg
lods
mov
ss
mov
cltd
push
mov
xor
leave
ret
lahf
pop
roll
scas
and
aas
sti
inc
lock
lahf
addr16
xchg
fbld
mov
push
shlb
addr16
addr16
movsb
pop
fistpll
lret
mov
mov
cs
ja
pop
cmpsl
xchg
pop
scas
mov
pop
xlat
jp
dec
jno
push
jno
inc
add
and
out
xchg
sbb
outsl
pop
jne
mov
ljmp
je
ds
insb
add
and
cld
cmpsl
mov
cwtl
mov
xor
pop
mov
into
ja
cs
fisttpl
jle
xchg
fs
outsb
hlt
rcrl
jecxz
cmp
xchg
daa
and
mov
outsb
sahf
les
test
jne
cmpsb
fimuls
pop
je
cmp
jnp
out
outsl
data16
jo
lret
adc
dec
dec
ret
pop
push
cmp
fisubrs
mov
sub
bound
ljmp
adc
lds
int3
aad
pop
sub
mov
mov
pop
add
outsl
mov
push
mov
pop
dec
sti
or
mov
out
cmp
scas
pop
es
inc
jg
add
fbstp
pop
push
cmpsl
lahf
rcrl
xchg
dec
jae
addr16
sahf
addr16
das
movsl
bound
jg
gs
stc
xlat
and
adcb
xchg
sar
lret
mov
or
fstps
mov
sub
hlt
push
jp
adc
cmp
jbe
insl
and
xchg
cmpsl
mov
nop
jl
loope
pop
inc
scas
and
xchg
mov
inc
enter
xchg
mov
adc
fdiv
das
ret
add
push
cmpsl
inc
sub
nop
enter
lahf
scas
jb
insl
jle
push
and
ss
push
inc
in
cs
cmpsb
dec
shll
popf
sub
cs
ret
add
adc
pop
lahf
xchg
fildll
out
pop
inc
mov
mov
dec
iret
push
lods
stc
outsb
mov
pop
push
push
cmpsl
inc
mov
jecxz
arpl
mov
addr16
insb
push
and
jg
outsl
in
jo
pop
enter
enter
lea
xchg
xchg
and
repz
mov
adc
mov
iret
cltd
push
les
push
les
into
push
cmpsl
jbe
enter
jecxz
lahf
xchg
scas
xchg
push
cmpsl
pop
jno
dec
add
mov
inc
scas
popl
xor
cli
iret
lret
or
sahf
iret
mov
in
repnz
rorb
jb
fldcw
pop
sti
xchg
jo
mov
sbb
sub
and
xor
clc
scas
outsb
and
pop
loop
sahf
pop
jle
pop
xlat
xchg
inc
addr16
insl
jp
out
jo
cltd
cmpsl
pop
aaa
pop
jmp
xchg
jb
test
sub
or
push
xlat
pop
lods
loopne
push
pop
out
jbe
mov
sub
pop
daa
jle
movb
cmpb
sbb
addr16
test
inc
mov
mov
in
fwait
iret
movsl
xchg
pop
mov
repz
sub
push
xchg
dec
cmpsl
and
ss
sub
clc
pop
dec
xor
test
xor
mov
sbb
aaa
add
add
xchg
pop
aas
das
lea
inc
dec
fld
xchg
addr16
fstpl
dec
pusha
xchg
fiaddl
stos
call
es
mov
scas
lahf
xlat
into
mov
insl
cmp
xchg
pop
loop
mov
dec
jle
cmpsb
mov
daa
inc
dec
xlat
or
adc
xchg
loopne
mov
les
stos
pop
scas
push
jle
mov
jae
or
leave
cmpsb
pusha
outsb
push
out
xchg
pop
scas
addr16
sub
inc
jbe
add
mov
bound
sub
fiadds
and
add
xchg
xor
rolb
fsubp
cmp
pusha
dec
inc
mov
shrl
push
mov
jns
aaa
push
aad
mov
pop
push
jg
pop
lret
cmpsl
mov
test
xchg
cmp
rcrb
and
clc
mov
lea
shll
xchg
mov
jo
push
int
dec
aas
mov
or
push
addl
iret
ja
xor
fwait
out
mov
jne
xor
rcrl
inc
mov
sahf
outsb
push
scas
jmp
out
pusha
lahf
data16
ss
xlat
xor
pop
test
sti
aas
push
int
mov
nop
lret
and
lahf
in
daa
outsl
xchg
cmp
ljmp
mov
addl
ja
ds
mov
xchg
and
lods
mov
cs
cltd
mov
mov
fwait
pop
aaa
dec
adcb
loope
ss
xchg
push
dec
jne
and
xor
hlt
inc
iret
gs
and
rorl
ss
bound
ss
gs
ret
sub
jo
jg
jmp
daa
push
push
xchg
pop
xchg
pop
xchg
mov
movsb
mov
push
pop
outsl
sub
call
xchg
movsl
sahf
add
fidivrl
add
mov
sar
fmulp
sbb
outsb
cmp
fisttpll
pop
push
push
loop,pt
pop
mov
jno
dec
outsb
sahf
inc
xchg
or
push
dec
movb
and
mov
mov
xchg
push
pop
aaa
nop
filds
fisubs
clc
push
push
out
daa
scas
xchg
pop
pop
mov
inc
pop
es
in
sub
xchg
xchg
mov
imul
enter
push
pop
pop
jns
outsl
cmc
cmpsb
add
scas
sub
daa
ficoms
pop
int3
iret
rolb
imul
and
daa
mov
aad
sahf
popf
pop
loope
sub
cmpsl
fisubrs
and
nopl
push
lret
test
aad
mov
in
test
inc
cmpsl
nop
cmp
loopne
orb
cmpsl
outsl
fldz
ja
add
stos
mov
es
leave
sbb
pushf
out
scas
cmp
mov
lret
jmp
inc
pop
pop
es
call
pop
cmpsl
fdivrs
dec
das
mov
pop
jmp
and
cmpsl
aas
cmc
shrl
aaa
insb
push
sub
and
int3
sub
dec
xor
test
movsl
ljmp
pop
notb
push
into
scas
sub
jo
xchg
push
adcl
pop
les
and
pusha
jmp
scas
fisubs
push
add
stos
ficoms
callw
push
jg
dec
addr16
inc
das
daa
xchg
adc
pop
xlat
push
addr16
pop
daa
inc
addl
cmp
add
in
cs
dec
xchg
shll
push
cmpsb
nop
into
pop
push
or
aaa
iret
shrl
ds
outsl
dec
push
xchg
icebp
inc
jae
pop
and
pop
jmp
adc
cmpsl
ja
and
pop
les
xlat
cmp
mov
pop
mov
das
test
inc
cs
cs
push
sub
add
xchg
rolb
sbb
push
mov
sbb
pop
inc
lock
daa
pop
clc
push
in
jle
xchg
sahf
fmuls
call
movsb
inc
enterw
shlb
outsb
push
int
xor
mov
mov
aaa
outsl
dec
mov
inc
and
stos
call
mov
sarl
jo
add
iret
xchg
cs
cmp
int
xchg
mov
lahf
cmp
ret
adc
cli
or
test
enter
or
xchg
loopne
mov
filds
fcmovnu
dec
fadd
or
push
push
icebp
pop
test
mov
jno
popf
pop
jns
stos
ja
push
ds
stc
sahf
xchg
ret
jns
data16
pusha
das
mov
dec
inc
pop
pop
xlat
pop
jl
repnz
sub
jle
mov
ss
sub
xchg
sahf
mov
ds
in
bound
cmpl
xchg
outsb
xlat
xchg
ds
gs
fists
xor
cs
mov
fsubs
fidivs
ds
outsl
sahf
lret
push
pop
and
push
push
ja
cmp
scas
bound
mov
ja
ficomps
pop
mov
xchg
outsl
scas
xchg
pop
cltd
ljmp
push
lock
mov
dec
inc
fstpt
pop
icebp
pop
in
outsl
inc
mov
mov
add
outsb
daa
xchg
push
mov
movb
jmp
or
idivb
inc
or
jno
push
insl
cmpsl
rcrb
vunpcklps
fbld
and
xchg
into
cmp
cmpsl
pop
nop
fptan
pop
data16
call
fistps
daa
out
mov
mov
mov
cwtl
pop
add
inc
mov
das
idivl
jge
mov
dec
pop
push
sahf
pop
lahf
inc
cmpsl
inc
push
fs
sub
push
sub
outsl
repnz
faddp
loope
pop
cmp
ficoms
loope
ss
rcl
test
mov
and
cmp
ja
mov
rep
jmp
push
fiadds
sub
xlat
cltd
dec
cmpsb
pop
cld
rorl
aad
jg
pop
push
scas
fimuls
xlat
xchg
add
jns
xchg
cmc
push
pop
addb
push
scas
pop
mov
push
scas
out
or
push
pushf
jbe
cltd
add
ja
xor
cmpsl
aas
inc
iret
out
outsb
xchg
xor
mov
pop
dec
in
sub
jle
push
and
out
outsl
cmpsb
into
ds
xor
lods
sarl
nop
fcoms
testb
aas
sti
pop
lock
xchg
add
adc
mov
jne
fidivl
mov
xlat
out
dec
pop
fidivs
and
outsl
stos
out
push
push
cmpsb
xchg
inc
sub
xlat
fs
dec
in
test
adc
fxch
jbe
xor
iret
mov
cmp
pop
mov
fisttpl
call
xchg
pop
cmp
stos
push
cltd
push
jns
icebp
ja
ret
js
jle
adc
mov
hlt
xlat
outsb
scas
mov
xchg
add
daa
dec
daa
addr16
ficoms
xchg
fnstenv
inc
sahf
xchg
mov
sbb
mov
inc
push
adc
ds
dec
mov
jne
mov
aas
sub
adc
and
outsl
xchg
pop
scas
ja
add
xchg
push
push
pop
into
addl
xor
sahf
push
sub
fcmovnu
movsl
popw
mov
dec
roll
ja
xchg
ljmp
loope
xchg
jle
mov
mov
and
pop
mov
inc
pop
into
dec
add
pop
daa
xchg
or
icebp
inc
dec
and
push
lock
movsb
in
push
dec
sub
mov
mov
and
ret
xlat
aaa
mov
iret
frstor
push
inc
js
aad
es
jo
xchg
addr16
pop
sarl
rol
lods
fldt
fisttps
mov
fstpl
push
pop
mov
xchg
es
push
cmp
orl
fiadds
cmpsl
mov
push
jno
lahf
cs
pop
loope
mov
ja
mov
cmp
pop
cltd
fidivl
add
inc
jle
mov
xchg
push
cmp
jne
ss
ret
cmp
sub
data16
xlat
adc
cmp
cltd
popf
aaa
insl
leave
push
popa
popa
and
inc
jmp
xor
ja
xchg
sub
jns
iret
dec
cs
out
inc
cmpsb
pop
xor
pop
ja
xchg
scas
push
pop
or
cmpsb
xchg
daa
into
fsub
fisttps
dec
xchg
mov
int
jp
imulb
js
outsl
loopne
push
scas
inc
pop
pop
dec
shrb
mov
scas
stc
sub
mov
pop
rclb
mov
lea
popa
insl
movsb
add
scas
cltd
pop
outsl
jne
xchg
xchg
data16
cmp
push
test
repnz
js
xchg
pop
inc
mov
xor
xchg
into
cmpsl
sahf
pop
and
xchg
fbstp
push
pop
cmp
push
jo
mov
and
pop
cltd
in
in
lcall
movb
bound
push
into
and
inc
aas
and
jl
pop
lds
lret
packssdw
roll
stos
sub
inc
aad
das
jecxz
pop
pop
xchg
add
scas
mov
jecxz
push
dec
mov
leave
stc
pop
sub
xchg
and
adc
mov
test
cmpsb
inc
mov
push
cltd
push
repnz
or
xchg
mulb
dec
andb
cs
loop
sbb
lock
shlb
loope
push
pusha
cmpsl
scas
das
cwtl
jecxz
dec
push
cmpsb
or
jle
fbld
cs
mov
daa
rorb
ret
mov
mov
out
mov
outsl
pop
mov
movsb
in
ja
sub
ja
daa
push
xchg
xchg
or
cmpsl
mov
cs
pop
jle
ja
fists
and
push
pop
sub
jmp
push
ss
push
cld
push
xlat
adcb
ljmp
pop
dec
xchg
add
fmull
sbbl
outsl
cltd
sbb
stc
cmp
mov
lods
lcall
in
push
sarl
into
gs
outsb
inc
aas
jno
aad
inc
mov
lahf
pop
shlw
dec
test
push
cli
sahf
iret
std
int
cs
jecxz
pop
cmpsl
push
push
push
push
pop
aad
mov
loop
addr16
cmp
sub
cld
das
jecxz
outsl
and
add
aaa
pop
int
fmulp
mov
cmp
dec
push
cs
mov
pusha
ds
xor
inc
mov
into
iret
push
lock
or
sahf
aad
cmp
jmp
fidivrs
cmp
enter
pop
das
addr16
repz
mov
mov
in
outsb
xor
enter
cmp
mov
dec
jbe
stc
ss
clc
enter
outsl
push
sahf
in
sbb
mov
cmpsl
push
push
push
dec
push
in
dec
or
mov
rcrl
filds
push
pop
das
loopne
pusha
mov
in
pop
jg
push
dec
ret
pop
gs
lea
pop
das
or
push
dec
jb
popf
scas
ja,pn
cmp
push
jl
push
fs
js
pop
sub
sub
icebp
sbb
jno
pop
clc
daa
aam
je
or
cld
add
les
push
jns
xlat
inc
xchg
bound
aam
insl
scas
fbstp
int
sahf
inc
mov
pop
cmpsl
out
iret
in
push
push
hlt
icebp
imulb
dec
scas
addr16
cmp
mov
sub
iret
xchg
and
dec
mov
xorl
bnd
scas
push
and
loopne
mov
roll
xor
nop
inc
sub
outsb
push
rcll
pusha
xchg
push
dec
jbe
addr16
enter
in
pop
test
shrb
ss
fwait
inc
adc
pop
sahf
xchg
pop
dec
outsl
ja
lds
xchg
out
lahf
xorb
ficoms
inc
xchg
xor
cld
lods
ss
outsb
cmpsl
daa
xlat
sbbb
xchg
add
cmp
and
mov
daa
cwtl
cltd
mov
out
mov
jbe
iret
rcll
nop
outsb
lret
lcall
sub
mov
inc
cmpsl
stos
push
xchg
loope
lds
inc
stos
test
xor
nop
cmc
daa
jbe
iret
into
jg
outsl
subb
sub
and
dec
xchg
xchg
fistpl
shrl
outsl
inc
xor
lcall
nop
addr16
dec
adc
scas
ss
cmpsb
and
xchg
sub
shll
std
inc
dec
loope
mov
cmpsl
es
cs
push
cmp
xor
push
jns
and
push
scas
dec
xchg
pop
int
ss
or
nop
in
xchg
cmp
sahf
jg,pn
push
cmpsl
lahf
mov
xor
out
push
push
roll
ljmp
mov
dec
lahf
xchg
jb
push
or
jg
pop
add
push
enter
xlat
jo
xor
out
jle
dec
xor
jg
inc
fidivs
inc
xor
add
xor
mov
jo
shll
int
dec
sbb
xchg
stos
and
gs
rolb
xor
mov
int3
push
fcomi
sub
jmp
pop
call
xchg
es
mov
fwait
and
outsb
ds
nop
mov
inc
xchg
jge
mov
into
or
or
js
inc
mov
dec
cmp
aaa
jb
stc
aas
scas
shlb
fwait
enter
push
xchg
scas
ss
mov
iret
int
pusha
pop
mov
ja
shll
mov
popf
pusha
data16
iret
test
bnd
xchg
fiaddl
jns
pop
push
ficomps
pop
jp
out
mov
sahf
add
cmpsb
pop
cmp
adc
inc
loopne
les
les
imul
cmp
xor
jo
xchg
pmaxsw
cld
xchg
or
lret
and
mov
mov
ror
fs
loope
outsl
pop
mov
pop
cmp
pop
std
mov
cmpsl
xchg
stc
jle
sub
push
pop
xor
push
into
push
dec
add
pop
pop
jle
out
aas
faddp
mov
push
jo
pop
pusha
inc
cmc
loope
daa
addr16
ss
shlb
lahf
or
ja
jle
std
mov
pusha
adc
inc
mov
scas
cmp
imul
xchg
and
xorl
mov
or
dec
push
push
xlat
loop
inc
sub
mov
cld
pushw
subb
push
sbb
push
ja
push
mov
mov
cmpsb
ds
jbe
cmp
mov
xlat
les
and
scas
ficoms
pop
out
jg
and
and
outsb
jo
lea
ret
and
or
xchg
aaa
xlat
dec
push
scas
cmpsb
aaa
in
dec
fsubp
xor
into
xchg
sub
daa
jne
addb
xor
adc
xchg
mov
sub
mov
xlat
mov
pop
fcoml
enter
or
nop
iret
mov
push
add
mov
xchg
cmpsb
lods
xchg
das
daa
mov
jl
iret
loope
push
xchg
fisubrs
adc
shll
push
xlat
nop
aad
inc
iret
pusha
add
pop
dec
jmp
cmpsl
mov
ja
mov
shrl
dec
adc
sub
sahf
pop
xchg
mov
mov
xchg
outsl
stos
scas
fbstp
push
fucomip
sti
mov
dec
sbb
dec
mov
popf
pop
lea
xor
lahf
fwait
daa
fisttps
sub
fisttps
jp
loopne
cmp
mov
jl,pn
cmp
pop
gs
cmpsl
mov
and
data16
xchg
inc
inc
shrl
xlat
pop
daa
jo
dec
scas
cs
jbe
push
inc
xchg
test
insb
repnz
cmp
mul
adc
dec
outsb
pop
mov
outsl
dec
mov
scas
pop
iret
jne
push
push
mov
lahf
push
mov
daa
movsl
popf
jnp
out
sahf
push
pop
pop
ss
xchg
pop
out
sbb
xchg
and
sub
jmp
popa
pop
jle
mov
cmc
hlt
pushl
in
fistpll
es
or
add
bswap
jo
xchg
sub
or
scas
xor
xchg
gs
sub
adc
js
std
loop
dec
ficomps
inc
mov
xor
sbb
add
cmp
je
out
outsb
and
or
push
xchg
jbe
cmpsl
mov
sbb
pop
mov
jg
ja
movl
pusha
dec
xlat
inc
and
dec
inc
ds
cmp
aas
scas
and
add
inc
pop
je
xor
jns
push
leave
das
dec
xchg
adc
add
imul
mov
jae
fidivrs
data16
out
pop
lcall
xchg
in
cmp
jecxz
into
and
outsb
sahf
hlt
xlat
xor
loop
and
mov
loop
fists
dec
xchg
cmpsl
xchg
mov
out
pop
mov
ds
push
rorl
fdivrs
outsb
push
inc
ja
push
mov
into
adc
out
loope
cmp
fidivrs
push
jecxz
pusha
scas
daa
and
es
cmpsb
scas
repz
and
lcall
sub
and
sub
xchg
fbld
daa
es
xchg
pusha
adc
fcmove
xlat
loopne
loopne
jp
mov
icebp
sbb
cs
or
test
jne
xchg
cmpsb
jo
mov
lods
fisubrs
lods
dec
sub
jle
and
adc
inc
out
xchg
data16
ja
into
add
add
sbb
mov
or
jbe
mov
lret
jmp
cli
faddp
movsb
aaa
mov
or
scas
rorb
movsb
in
jbe
scas
dec
popa
leave
push
mov
jbe
nop
ds
scas
dec
push
push
jmp
push
ss
jmp
dec
inc
cld
add
pop
ja
xchg
push
pop
cmp
add
and
sbb
dec
lret
or
push
mov
sti
dec
xchg
stc
dec
scas
inc
jb
enter
neg
ficoms
call
in
xor
jle
inc
push
aad
xlat
shl
inc
push
xchg
outsl
mov
dec
inc
daa
xchg
dec
outsb
cmpsl
add
nop
inc
rcr
jbe
daa
aaa
into
test
mov
daa
xor
iret
dec
mov
jecxz
movsl
sahf
imul
pop
dec
sahf
jo
leave
js
out
dec
jbe
pop
cmpsb
lods
pop
les
stos
mov
dec
mov
rol
mov
and
cmpsb
int3
lret
lods
mov
mov
push
jns
repz
mov
push
xor
and
push
cmpsl
aas
mull
pop
lahf
in
push
xchg
or
sahf
pop
or
xor
dec
mov
dec
jmp
pop
stc
hlt
push
pop
cmp
xchg
test
cmp
jmp
loop
ds
ja
aaa
ficoms
pop
dec
sbb
cmp
push
mov
ja
jecxz
xchg
cs
mov
cmpsl
dec
je
sbb
push
pop
xchg
xor
imul
push
enter
lret
jle
mov
icebp
aas
fistpll
das
and
jb
int
cli
xor
xchg
inc
jg
hlt
pop
pop
ljmp
inc
pop
xor
jb
loopne
daa
push
fcmovne
cmpsb
lock
test
jns
mov
ficoms
shrl
daa
push
mov
lods
xchg
clc
int
jbe
stos
ret
mov
mov
sbb
push
adc
push
add
js
dec
fisubrl
inc
nop
push
mov
mov
or
mov
xchg
icebp
dec
push
xor
mov
lcall
push
jbe
pop
mov
pop
mov
dec
fcompl
pop
sahf
sub
cmp
ja
mov
imul
mov
fsts
daa
jp,pt
aaa
pop
and
and
subb
mov
and
loopne
aad
jbe
pop
and
pushw
bound
icebp
test
bound
mov
mov
pop
xchg
and
mov
xchg
mov
repz
xor
sbb
and
test
mov
cmp
test
daa
fidivrs
test
xchg
bound
addr16
xor
es
jns
dec
push
lods
and
outsb
icebp
mov
mov
jne
jle
push
outsl
cmpsb
ljmp
dec
xlat
dec
cmp
push
outsl
fbstp
jle
push
xchg
xchg
and
notl
fsubrp
bound
das
cmpsl
xor
mov
jge,pt
pop
pusha
push
add
push
js
addr16
outsb
scas
scas
ret
popf
mov
or
loope
dec
and
lahf
mov
xor
daa
ja
shlb
js
aas
sub
mov
mov
mov
dec
push
inc
aad
filds
andl
stos
pop
ficoms
push
out
push
loope
mov
xchg
xchg
inc
das
pop
enter
clc
jno
into
aaa
icebp
xchg
xchg
sbbb
aaa
push
lret
pop
ja
jo
sbb
jne
into
ds
jno
jbe
push
and
xor
xor
push
mov
inc
out
iret
inc
leave
aas
ja
push
push
inc
outsb
cmp
cmp
inc
pop
outsl
ja
mov
idivl
add
aaa
jmp
inc
mov
cmp
fdivrp
addr16
mov
ds
pop
fldenv
mov
andb
pop
in
push
daa
pop
push
cmpsl
dec
sub
pop
mov
add
cs
cmpsl
inc
and
and
cmp
push
scas
loope
cmpsl
addr16
loopne
out
cmova
pop
movl
jg
ss
inc
mov
das
mov
aas
shl
mul
cmp
in
bound
cmpsl
scas
push
clc
sub
pusha
pop
xor
mov
push
cs
dec
inc
ret
scas
aas
mov
dec
and
outsl
es
inc
jg
mov
inc
xchg
sti
pop
cmp
mov
sahf
inc
and
cld
gs
mov
jecxz
daa
addr16
jmp
fisttpl
pushf
jns
push
or
daa
jle
iret
sahf
gs
push
fbstp
das
push
enter
pop
mov
repz
nop
addr16
or
cmpsl
loop
pop
jbe
pop
mov
lret
xor
lds
push
cmpl
scas
inc
mov
popf
dec
int3
hlt
aas
inc
pop
ffreep
mov
jg
xchg
add
rorl
dec
mov
sahf
dec
add
cmpsl
dec
loop
dec
jecxz
jbe
js
ret
fucomip
aad
mov
xchg
bound
shll
and
es
daa
movq
fdivrl
push
pusha
cwtd
outsb
rclb
add
fs
hlt
mov
test
loop
sahf
cmpsl
inc
nop
jle
mov
dec
push
outsb
pop
mov
data16
mov
adc
cmpsl
push
inc
mov
addr16
je
and
push
inc
sub
lock
mov
push
inc
dec
leave
dec
movl
jmp
lret
pop
adc
push
addb
adc
jecxz
outsb
ss
mov
add
mov
push
shl
push
mov
int3
sub
jbe
out
addr16
lahf
stos
cs
dec
pop
data16
bound
ss
jmp
nop
dec
aaa
adc
jne
push
jg
stc
shl
cmp
add
sahf
and
xchg
cmpsl
cmp
imul
cwtl
pop
rorl
mov
int
dec
inc
lcall
daa
push
fldl
cmpsb
movsb
dec
outsb
pop
jbe
inc
pop
das
fisubrs
xlat
mov
and
mov
mov
out
sahf
data16
faddp
mov
xlat
inc
xchg
scas
popf
mov
leave
cs
jo
or
das
loope
das
xchg
aaa
jo
cli
iret
sub
inc
adc
or
daa
repnz
loope
push
xor
cmpsl
pusha
jne
pop
or
in
mov
stos
mov
in
clc
xchg
sti
mov
out
jbe
inc
fnstcw
fiadds
inc
sub
cs
sahf
mov
outsl
xchg
stos
fisttps
push
out
pop
and
and
and
pusha
xor
pop
cmpsb
push
aas
out
cmpsl
mov
push
insl
rcr
daa
imul
pop
shrb
stos
mov
gs
xchg
push
in
data16
out
push
sub
movsb
test
mov
shrl
cld
add
flds
insw
shl
in
dec
xchg
out
outsl
sahf
jle
iret
es
pop
jecxz
fimuls
push
hlt
lahf
mov
dec
into
stc
arpl
or
xor
push
in
aas
cmpsl
xchg
addr16
jg
pusha
ss
jno
push
pop
je
loope
jbe
push
xchg
ds
cmpsl
xchg
lods
mov
ss
push
fstps
es
lahf
xlat
mov
pusha
mov
int3
xchg
and
jmp
fidivs
into
mov
mulb
add
jmp
xchg
mov
add
loopne
or
outsl
cmp
push
inc
pop
cmp
xchg
mov
dec
inc
and
xchg
data16
scas
mov
repz
inc
jb
dec
das
cmpsl
jge
mov
daa
jg
aaa
das
loop
sub
into
or
xchg
xor
mov
mov
icebp
loopne
addr16
shlb
xchg
daa
mov
push
aaa
push
xchg
nop
inc
int
mov
bound
data16
push
rolb
sub
jle
xchg
fcoms
ds
scas
xlat
xchg
jmp
mov
es
cmp
inc
sbbb
dec
ljmp
ret
jns
push
xchg
lcall
push
xchg
adc
sti
cmp
push
and
in
es
add
shll
outsb
out
data16
divl
nop
mov
lea
bound
jns
cmpsb
xor
mov
addr16
and
mov
inc
xchg
imul
lret
mov
aaa
mov
and
add
and
daa
pop
xchg
fsubrl
xchg
scas
mov
incl
pusha
adc
or
scas
dec
mov
xchg
pusha
dec
inc
gs
out
xchg
aaa
and
lds
in
aas
inc
adc
fs
pop
pop
in
pop
outsl
add
add
push
test
imul
je
jo
or
mov
negl
add
push
inc
sbb
ds
jle
fistpl
xlat
push
sub
test
jg
xchg
pop
jle
loope
dec
lahf
push
dec
push
daa
jno
rcll
pop
cmc
cmp
jno
push
mov
iret
dec
movsb
sarl
cltd
cmp
push
pop
inc
lods
pusha
xchg
jg
daa
loop
cs
xchg
daa
das
test
lahf
mov
pusha
and
imul
xchg
xlat
push
int
inc
cmp
aaa
int3
bound
data16
daa
popf
cmpsb
inc
mov
scas
xchg
test
rcrl
loopne
lcall
and
cmp
push
insl
inc
pushf
cmpsb
sti
rcr
loope
jg
jo
add
stc
dec
fs
xchg
push
inc
pop
fisubl
push
add
and
xor
out
push
xchg
pop
xchg
xchg
push
pushf
mov
jb
jmp
out
int
push
sub
cmpsb
stc
xchg
adc
jbe
sub
cmpsw
jle
xchg
pop
stos
mov
outsb
push
mov
dec
fs
and
out
xchg
dec
into
cmp
push
pusha
addr16
adc
std
xchg
and
mov
ffreep
pop
scas
mov
bound
sahf
ds
mov
xchg
out
pusha
fisubs
fwait
outsb
aaa
sbb
fs
push
pop
ss
push
jae
fiadds
add
adc
dec
dec
xchg
ds
daa
iret
jle
js
dec
pusha
pop
mov
out
xor
adc
jns
cmpsb
mov
xor
pop
data16
xor
pop
sahf
mov
ds
ret
xor
lahf
scas
inc
sbb
dec
cs
pushf
pop
cs
enter
loope
outsl
push
lahf
iret
sbb
push
xchg
push
cmpsl
pop
inc
mov
add
xor
rcl
and
sbb
and
inc
sbb
dec
lcall
dec
pusha
mov
and
lock
fs
cmp
dec
mov
lea
aas
aad
xchg
out
jb
pop
and
jne
jne
cmc
lds
fbstp
pop
sbb
adc
xchg
xlat
ret
aaa
repz
test
daa
int3
push
jo
out
mov
sahf
pop
fs
dec
jns
dec
cmc
mov
sub
push
cli
enter
std
out
sahf
pusha
push
inc
push
pop
cmp
mov
aam
movsl
js
or
or
scas
into
idiv
sub
add
mov
aas
fucom
dec
push
ficoms
xchg
daa
ss
sub
addr16
in
xchg
jo
inc
shll
popf
mov
cwtl
daa
xchg
repnz
adcl
lods
xchg
inc
jle
fsubl
leave
xor
sbb
dec
iret
push
xchg
daa
dec
aaa
pop
ljmp
inc
into
xchg
push
xor
xor
jecxz
jle
sarb
cmp
imul
pop
into
jo
enter
sbb
inc
cmc
outsb
bnd
icebp
pop
cmpsl
es
jb
gs
in
gs
xchg
into
dec
jns
out
and
cmp
inc
scas
es
adc
mov
and
leave
aaa
inc
cmpsl
cmp
out
out
scas
xchg
es
jo
xchg
repz
insl
push
aas
pop
dec
imul
loop
xchg
cmpsb
pusha
xor
push
mov
push
cmp
and
jae
fsubp
fwait
scas
jmp
xchg
mov
jle
scas
mov
inc
and
pusha
mov
scas
pop
jno
mov
movsb
mov
mov
lahf
outsb
decb
test
push
cmp
mov
mov
jo
or
int3
roll
push
lret
mov
and
push
arpl
int3
cld
mov
outsb
xlat
pop
outsl
cmp
xchg
or
out
jns
dec
loop
jbe
xor
scas
scas
push
scas
out
push
adc
sbb
es
push
lock
fwait
aaa
xchg
popf
inc
mov
inc
mov
in
xlat
xchg
jbe
fimull
into
gs
in
sarb
xlat
xchg
iret
jmp
jo
push
mov
ja
pop
inc
xchg
mov
mov
fsubp
or
cmpsb
pusha
mov
xchg
lret
ss
es
mov
lea
inc
and
sub
push
ja
pop
outsl
mov
and
pop
nop
mov
leave
icebp
xchg
cmp
loopne
testb
xor
rcrl
data16
jns
dec
dec
inc
push
js
xchg
push
es
cld
aas
pop
inc
das
aad
outsl
arpl
outsb
aaa
hlt
xorl
and
jmpw
cmpsb
outsb
fsubp
shll
xlat
gs
gs
cmpsl
pop
adc
in
jo
fsubp
pop
dec
cmpsl
xor
or
cmpsl
and
pop
rol
imul
fbld
out
scas
xchg
cmp
jl
pop
mov
scas
es
jne
fbstp
add
lea
and
inc
xor
loopne
out
out
cmpsb
cmpsl
push
arpl
jg
xorb
push
xlat
mov
pop
xchg
mov
cmp
pusha
lahf
dec
xchg
and
mov
fisubrs
dec
lcall
ljmp
jl
pop
iret
add
fsubrs
jns
pop
scas
nop
movb
mov
pop
push
push
push
inc
addr16
cmpsw
scas
inc
daa
add
jg
push
add
mov
jbe
stos
mov
lea
push
fistpll
nop
mov
outsb
cmp
adc
xchg
and
fs
push
int3
mov
fildll
mov
pop
adc
mov
cmp
hlt
mov
outsb
das
xchg
es
in
push
sti
lds
loop
pop
outsb
sahf
dec
ss
icebp
xchg
pop
sub
and
iret
xchg
inc
rcll
pop
fcmovnb
jbe
mov
and
xchg
addr16
sbb
aas
es
sub
xlat
ss
jne
nop
lret
scas
addr16
jbe
outsb
push
xchg
fcmovu
jmp
cmpsl
pop
cld
xchg
lds
push
in
mov
test
pop
fisubs
push
pop
pop
or
jno
aaa
inc
inc
lcall
dec
enter
push
dec
inc
fsubp
and
cmpsl
push
ds
ss
xlat
push
fprem1
ja
fcmovne
xchg
mov
lret
enter
dec
jle
pop
aas
push
adc
out
cs
gs
popf
pop
leave
xchg
inc
out
ja
dec
lahf
jo
push
add
mov
pop
sub
mov
jg
out
ja
cmpsl
daa
divl
mov
pop
mov
mov
clc
jle
mov
outsl
ss
inc
daa
and
stc
sahf
mov
xlat
xchg
popf
daa
insb
psllw
jg
fidivrs
sahf
je
pop
outsl
das
sarl
vpminub
inc
push
add
cs
fs
sub
test
mov
scas
mov
test
bound
sub
push
pop
cmpsb
mov
and
pusha
arpl
addr16
cmp
adc
ds
test
jp
inc
push
outsb
sbb
addr16
xchg
jno
daa
push
dec
cs
mov
addr16
mov
inc
push
aas
lahf
in
fbld
das
daa
pop
mov
cli
mov
out
ds
sbb
addr16
into
inc
push
pop
or
js
ja
mov
popl
jmp
mov
ds
movsl
dec
sbbb
pop
clc
cmpsl
push
and
jno
mov
add
aad
inc
sti
jle
aad
gs
jno
lahf
xchg
lea
push
or
inc
mov
xor
pusha
inc
dec
pop
scas
and
cmpsb
xchg
xlat
push
lods
call
lds
clc
in
pop
das
push
dec
cmpsb
es
std
push
push
ja
in
xchg
dec
out
leave
xchg
out
pop
dec
mov
scas
mov
pop
inc
cmpsl
xlat
fdivl
xlat
and
xlat
gs
mov
mov
xchg
js
dec
push
inc
pop
stos
leave
or
dec
lds
lret
mov
adc
jle
dec
push
dec
pop
xchg
mov
cmpsb
mov
jbe
sub
imulb
cld
sub
mov
inc
fcomi
push
nop
subl
cmp
dec
pop
mov
sbb
and
dec
xchg
inc
xchg
pop
enter
mov
enter
js
fsubs
rcl
jle
lahf
das
pop
outsl
out
movsb
pop
inc
clc
jecxz
cs
mov
jle
dec
cmp
outsb
call
lcall
and
push
addr16
cmp
push
aaa
lods
scas
ja
pop
jg
pop
dec
xchg
fldt
mov
shrb
mov
sbb
jg
pop
out
xchg
mov
pop
das
and
stc
test
adc
xchg
cmp
mov
fstpl
aam
sahf
neg
and
or
pop
fisttpl
nop
jg
push
shr
inc
fimull
fisttps
and
push
lods
lds
mov
xlat
shll
mov
stc
mov
jg
jp
jbe
rorl
and
mov
pop
xchg
mov
ss
fstp
sub
out
cmpsb
mov
jo
cmpl
pop
scas
sub
dec
xchg
in
iret
jg
imul
mov
ror
sub
pop
cmpsb
arpl
xchg
lahf
mov
xchg
adc
pusha
jno
js
sub
inc
or
mov
mov
pop
jle
outsl
push
jmp
cmp
pop
movsb
inc
xchg
push
into
inc
sahf
pop
out
ss
xor
or
mov
sub
inc
out
inc
cmpsl
daa
mov
movsb
cltd
js
test
cmpsb
push
ss
jmp
jle
pop
sub
and
into
sub
add
xlat
xor
pop
outsb
inc
pop
xchg
inc
sahf
mov
ss
outsb
add
clc
push
pop
mov
and
cmp
aad
add
cs
cmpsb
dec
mov
cmpsb
flds
out
jb
or
push
gs
push
jb
sahf
cli
mov
xchg
push
test
popl
dec
jo
sbb
push
jecxz
push
daa
inc
icebp
sahf
dec
xor
das
mov
das
fstl
pusha
mov
lods
pop
xchg
rcrl
stos
xor
pusha
and
adcb
stc
ss
sub
xchg
mov
mov
stos
cmpsb
nop
mov
rcll
push
pop
mov
pop
push
dec
leave
fwait
pop
mov
mov
inc
fisttpl
neg
ds
or
in
cs
sahf
pusha
iret
orb
xor
je
cmp
out
mov
add
and
dec
out
push
pop
adc
add
cmp
mov
push
loop
pop
push
inc
mov
mov
adc
push
das
xchg
lret
lock
and
cmpsl
and
push
outsb
into
aaa
ja
xchg
das
jne
sub
jo
xchg
enter
xchg
xor
jno
in
cmpsb
pop
mov
pop
pop
sahf
imul
pop
push
xchg
push
repnz
scas
lds
mov
dec
xchg
fistps
sahf
xor
pusha
stc
fsubs
cli
outsb
arpl
addl
jle
pop
in
nop
xor
cmpsb
fimuls
or
pusha
xor
jo
sub
mov
cmp
into
out
xor
pop
out
iret
jo
pop
pop
cmpsl
into
aam
in
xor
aam
push
cmp
mov
test
sbb
in
push
xchg
push
outsb
ficomps
mov
jne
scas
out
es
adc
and
outsl
inc
push
add
push
cmpsb
jecxz
ss
sub
ja
and
jnp
loopne
push
add
adc
dec
xchg
lea
pop
out
scas
cmpsb
daa
ja
sub
xlat
jp
mov
or
cmp
xchg
cs
push
es
ficoms
and
daa
sub
aaa
xchg
nop
pop
outsl
pop
cmpsl
loop
xchg
pop
mov
int3
loop
xchg
jbe
inc
repz
mov
cmp
in
mov
pop
lock
jb
jmp
fimull
shlb
adc
cmp
push
icebp
inc
sub
adc
int3
jnp
xchg
orl
ds
jle
add
push
push
xchg
lahf
sbb
scas
loopne
inc
xchg
lds
mov
imul
leave
sub
and
cmpsl
scas
pop
orl
sahf
int3
push
inc
aaa
loopne
stos
push
fistl
dec
adc
clc
push
sub
lea
cwtl
mov
xchg
mov
jno
repnz
mov
fldenv
notb
dec
pop
stc
xchg
sbb
in
dec
into
fs
pop
xchg
mov
xchg
add
sub
lret
cmp
xchg
mov
and
pop
shrb
out
call
rorl
push
jmp
arpl
or
pop
pop
push
outsb
pop
ja
ljmp
nop
adc
imul
scas
ss
xor
pop
pop
jl
jmp
popf
idivb
mov
pusha
or
outsb
xchg
push
fcmovne
cs
std
and
pop
pop
lahf
cld
cmpsl
outsb
scas
loop
shlb
push
nop
lods
rcll
and
in
scas
lahf
push
xchg
gs
push
out
jo
xor
aad
filds
xchg
push
aas
adc
dec
rcl
into
iret
cli
out
push
scas
push
fists
movl
inc
xchg
das
cmpsl
ds
dec
mov
inc
push
pop
aaa
js
or
lock
cmpsl
pop
enter
ss
jl
xlat
and
add
es
jbe
inc
repz
icebp
ret
ret
in
sub
cs
dec
push
lods
push
pusha
push
fs
xchg
jb
test
xlat
cs
mov
mov
outsb
pop
push
pop
fs
scas
dec
rcll
mov
jecxz
pop
pop
add
ss
call
push
lods
insl
fbstp
movl
cmp
ja
dec
out
orb
ss
loope
ds
jg
push
es
ja
movsb
in
and
in
pop
inc
dec
aas
cs
dec
scas
push
xchg
xchg
outsb
in
jbe
dec
test
mov
and
outsl
ficomps
es
pop
mov
add
pop
data16
in
mov
inc
dec
fists
inc
cmpsl
inc
jno
pop
outsb
push
cmp
push
jle
into
jne,pt
jl
aaa
cmpsb
add
data16
pop
add
cld
cmc
rcll
sarb
bound
pop
in
arpl
mov
and
fs
mov
aas
addr16
fstpt
das
jae
and
or
xor
inc
push
sub
ja
sahf
pop
ds
mov
or
push
outsl
pop
jb
orb
fsts
scas
scas
jo
lcall
loop
addr16
mov
mov
popa
adc
mov
ljmp
test
cmpsb
cmp
adc
mov
xchg
cmp
iret
add
and
jo
ss
insl
dec
adc
pop
xlat
nop
pop
rcl
arpl
add
sbb
push
pop
jbe
out
sahf
inc
jo
jg
and
gs
push
fcompl
pusha
int3
mov
or
push
rcrb
dec
push
fs
sti
xchg
push
and
scas
xchg
mov
ret
push
cltd
shlb
bound
popf
push
fstpl
iret
mov
inc
xchg
gs
xor
ret
nop
push
dec
xchg
outsl
fdivrl
nop
pop
xor
dec
pusha
sub
addr16
das
pop
dec
mov
or
dec
test
sbbb
cli
xchg
pop
test
out
scas
jbe
outsl
pop
or
mov
cmp
leave
push
dec
mov
push
pusha
js
jle
test
fs
aas
jo
retw
xchg
pop
dec
pop
pop
mov
fistpl
push
xor
aas
push
mov
orb
mov
pop
pop
cmpsb
pop
test
pop
xchg
out
push
dec
push
addr16
out
rorl
into
dec
outsb
iret
pop
mov
bound
loopne
push
push
fstps
cmp
cli
in
into
push
into
cmp
scas
dec
cs
addr16
inc
jg
jno
into
lcall
daa
lods
xchg
inc
aaa
bound
outsl
daa
fists
test
js
cld
sbb
mov
xchg
mov
push
outsl
mov
dec
pusha
cmp
stc
push
stc
xlat
push
mov
sbb
aas
dec
out
iret
push
push
cmpsl
shrl
outsl
dec
in
cmpsb
ja
and
adc
out
aaa
dec
pop
fmulp
shll
jb
jge
adc
cmp
mov
add
inc
mov
outsb
xchg
in
lcall
dec
rcl
cmp
xor
push
inc
mov
mov
fnstcw
cmp
hlt
jbe
repz
sbb
leave
xchg
pop
scas
ja
in
xchg
push
jle
push
fxch
cmpsb
xchg
mov
add
shll
cmpsl
aad
dec
sarl
mov
call
js
xlat
in
nop
xor
lret
je
pop
mov
sub
add
es
inc
roll
cmp
sub
dec
cmpl
in
addr16
and
loope
xchg
push
outsb
pop
cwtl
fstpl
inc
xchg
jno
daa
dec
mov
addr16
sbb
and
das
cs
outsl
testb
in
xchg
rcrl
pusha
stos
mov
mov
xchg
lods
stos
das
push
push
pop
psubb
xchg
shlb
daa
aas
jne
mov
jno
pop
sub
daa
jl
xchg
leave
dec
aas
ds
mov
mov
ror
test
cmpsl
inc
pop
addr16
xchg
xlat
mov
push
mov
push
jmp
fdivs
jo
and
sbb
stos
sub
lahf
xlat
insl
movsb
lcall
sbb
pop
aas
pusha
addr16
jns
push
ds
clc
mov
xchg
aaa
pusha
jle
xchg
jb
inc
sahf
lahf
xchg
adc
sbb
aas
iret
push
stos
popf
call
mov
scas
push
xchg
js
cmpsb
pop
mov
push
iret
cmpsl
fistpll
xacquire
push
inc
jecxz
scas
pop
mov
test
dec
fidivrl
into
push
inc
jecxz
push
pop
and
hlt
mov
xchg
dec
xchg
dec
xchg
outsb
out
ja
fiadds
pop
lock
push
scas
cmp
vpmacsdd
inc
fs
fucom
nop
loopne
mov
cmp
push
pop
dec
into
sbb
dec
lahf
outsb
leave
pop
xchg
mov
iret
fisttpll
push
jb
notl
pop
data16
mov
shll
ret
push
push
iret
pusha
bound
xchg
clc
adc
inc
js
fsubrp
mov
das
inc
cmp
stc
pusha
dec
pop
call
fistpll
movsb
aas
push
jne
mov
pusha
sbb
xor
loop
inc
cmpsl
inc
inc
push
dec
out
xchg
adc
mov
pop
outsl
icebp
stc
push
divb
mov
bound
mov
lods
aad
ds
fstpt
cmc
test
pop
and
sub
aaa
pop
push
lcall
outsl
out
xor
inc
and
mov
inc
inc
mov
iret
and
outsl
mov
push
test
lcall
fists
ja
fidivl
cmc
pop
sbb
cmp
scas
jle
das
mov
sub
and
and
scas
or
inc
repz
mov
movb
and
cmp
jg
popa
in
sub
pusha
scas
xchg
and
xor
dec
sub
xor
mov
sti
mov
xor
adc
jg
adc
cmp
dec
stos
movsl
inc
das
ret
sub
cltd
daa
pop
push
in
sub
in
mov
xchg
iret
inc
cmp
bound
xchg
jmp
pop
mov
mov
mov
push
push
cmp
mov
jle
mov
xlat
pop
xlat
stc
fildll
lcall
jg
inc
xchg
xchg
inc
jno
mov
out
mov
mov
fs
cmpsl
gs
loop
xchg
and
jno
inc
push
push
push
rorl
in
add
and
push
mov
xor
mov
repz
xor
loope
jle
pop
cs
push
fidivrs
repz
xchg
jo
lea
xor
mov
mov
cmp
xor
dec
mov
push
adc
and
push
clc
mov
cld
es
push
cs
or
addr16
xor
sbb
ss
lret
mov
jecxz
sbb
sub
stos
xchg
lahf
scas
out
fidivs
push
pop
iret
pop
add
negl
pop
das
inc
ret
ja
scas
mov
push
xchg
aad
mov
dec
ja
adc
lret
ret
mov
inc
ss
daa
and
xchg
xchg
dec
dec
jp
mov
mov
int
xchg
inc
in
daa
nop
data16
mov
and
pop
cmpsl
pop
xchg
adc
sahf
rcl
add
jmp
dec
rcrb
pop
dec
test
ja
add
pop
sub
push
fisubrs
jle
ds
add
or
inc
int
mov
sbb
data16
mov
cmp
gs
shl
cmp
addr16
jns
lcall
nop
loop
popl
xchg
xchg
sub
add
es
mov
push
jns
sahf
cmpsl
mov
aaa
mov
push
insb
or
aaa
pop
mov
xor
push
mov
mov
or
mov
div
inc
pop
nop
pop
or
outsl
sub
jle
ret
daa
sub
xchg
insb
insl
cmp
es
mov
push
xchg
aad
pop
imul
sub
bound
pop
js
ja
adc
cmp
jbe
leave
mov
ss
push
fwait
aaa
xchg
jo
dec
and
cli
jecxz,pt
mov
ss
sahf
pusha
push
clc
pop
pop
popl
or
mov
jg
and
dec
leave
scas
aas
jbe
xlat
ret
cmc
add
mov
cmpsl
mov
cmpsb
lcall
ficompl
outsb
pop
mov
mov
mov
les
xchg
lahf
push
xchg
mov
loope
cmp
mov
adc
xchg
es
std
pop
aas
mov
mov
jg
ss
lods
mov
ficompl
jo
push
es
xor
jmp
std
xchg
xchg
mov
ret
movsl
shll
in
dec
sbb
mov
mov
xlat
sbb
pop
outsb
hlt
pop
lea
xchg
aas
lea
xor
fcompl
dec
inc
outsl
scas
adc
shrl
into
push
inc
or
sti
jg
cmp
popf
sbb
mov
xchg
in
ja
les
insb
fstpt
cmp
xchg
lcall
and
pusha
movsl
push
sbbb
rcl
xchg
ds
fs
jbe
add
stos
xor
jns
scas
aad
es
ss
imul
jbe
mov
xchg
enter
arpl
pop
in
mov
or
test
lea
inc
addr16
mov
sub
lds
dec
dec
out
es
movsb
xchg
xchg
js
data16
dec
mov
cmp
and
out
scas
nop
leave
jg
cs
mov
dec
fisubs
repnz
xchg
addr16
idivb
scas
mov
loop
cmpsl
iret
push
push
dec
mov
mov
xor
jg
ret
inc
stos
ja
aas
scas
sti
leave
in
xchg
fucom
aaa
push
nop
pushw
into
sub
lahf
jge
shl
loop
lods
pop
or
pusha
gs
fdivrl
out
push
js
mov
xlat
cmp
lea
xchg
scas
fmulp
mov
jle
aaa
fsubs
xchg
loopne
nop
out
mov
dec
cld
lret
imul
jbe
shrl
sub
lahf
mov
inc
out
daa
fldl
pop
cld
cmpsl
data16
mov
roll
fs
addr16
xor
pop
or
leave
stos
mov
jmp
addb
pop
push
xor
pop
sbb
mov
cmp
es
push
xor
icebp
dec
movsb
and
push
mov
mov
push
rorl
cmpsl
xchg
mov
dec
dec
sub
lahf
es
cmc
cmp
fbld
push
loopne
xor
and
ss
sub
xchg
ficoml
mov
dec
add
push
es
xor
loope
and
fistl
push
mov
pop
inc
jmp
shll
ss
mov
jbe
jmp
orl
daa
cmpsl
sahf
div
sbb
mov
push
jg
ja
dec
addr16
divb
faddp
rcll
push
sub
aas
xchg
cmp
or
xor
sahf
lahf
pop
test
mov
loopne
xor
gs
cmpsl
jo
into
jbe
sahf
test
je
and
cmpsl
scas
dec
cs
loopne
sti
cmpsb
sub
lret
divb
mov
outsl
push
fwait
ljmp
sbb
dec
enter
aas
fnstsw
jae
dec
data16
pop
xchg
sahf
iret
inc
lods
rcll
and
sahf
dec
cs
push
inc
fs
cmp
sbb
ds
sar
in
pop
push
sub
adc
and
mov
push
mov
aad
fbld
fs
popf
pop
add
jo
aaa
push
mov
inc
bound
pop
aam
fstpt
cmpsl
mov
sub
lahf
into
and
pop
outsl
out
test
push
fimuls
push
rorb
fsts
call
stos
fiaddl
pusha
adc
mov
aas
inc
nop
gs
fistps
aas
addr16
sub
sub
xchg
xchg
inc
dec
push
sahf
outsl
daa
mov
cmpsl
xchg
aas
rcll
fildl
into
cmp
shrl
xchg
or
cmpsb
ds
das
cmp
or
repnz
mov
mov
jns
ss
push
mov
push
push
ds
dec
imul
push
cld
daa
ret
add
outsb
dec
pop
aaa
add
mov
daa
push
xchg
cmp
in
dec
ss
xchg
dec
daa
fimuls
es
pop
sub
sbb
push
mov
movsb
sbb
mov
and
sahf
mov
pop
iret
sbb
arpl
jg
xchg
adc
pop
into
push
popf
cmp
push
aad
call
mov
xchg
daa
adc
sub
xchg
mov
mov
jae
add
pop
cmpsl
nop
xchg
cmpsl
cmpsl
mov
ja
xor
dec
push
jne
daa
xlat
adc
cmpsb
inc
xchg
push
cmp
faddl
cmpsl
jns
xchg
scas
ds
jmp
sub
vpunpckhbw
pusha
pop
push
push
add
cs
aas
mov
jbe
fidivs
cmpsl
into
push
adc
cmp
mov
hlt
xor
imul
mov
xchg
ss
xchg
sti
rolb
jno
jo
sti
xor
add
sti
xchg
jg
jl
mov
cltd
mov
pop
mov
rclb
sahf
fs
push
sub
dec
js
ja
test
movsb
push
pop
hlt
xor
pop
adc
ss
and
sahf
push
xor
shr
data16
push
iret
sbb
jbe
icebp
stos
call
mov
das
cmp
xchg
cmp
sbb
cli
sbb
jecxz
dec
loope
sahf
pop
cmpsb
jg
jle
push
inc
xchg
inc
mov
ds
pusha
call
es
pop
push
push
jbe
pop
push
icebp
xor
ja
mov
xor
pop
scas
push
jbe
mov
add
mov
inc
aam
out
pop
pop
and
push
fbstp
mov
xchg
das
pusha
aad
sahf
jbe
jne
aas
fisubrs
loopne
faddp
mov
dec
add
aaa
pop
ror
cmp
pop
inc
scas
jecxz
mov
and
int3
popa
fildl
stos
cmp
push
xlat
pop
mov
mov
mov
xchg
jns
daa
inc
aad
ja
jne
out
roll
inc
fs
es
add
and
shlb
inc
loope
es
aas
int
outsb
dec
das
pop
arpl
xchg
fists
lcall
and
mov
ds
xor
outsl
xor
aas
flds
push
adc
xor
aad
mov
ljmp
xchg
mov
mov
icebp
pop
outsb
mov
add
xor
jnp
addr16
dec
pop
jp
lea
mov
inc
xor
cmpsl
fwait
pushf
lods
jmp
mov
gs
loope
daa
sub
xchg
pop
into
push
mov
mov
sahf
inc
pop
lahf
in
fisttps
dec
cmpsb
push
ja
adc
outsl
loop
sub
mov
scas
push
movb
mov
adc
mov
jmp
add
or
ret
leavew
push
mov
pop
es
out
mov
xlat
mov
dec
pop
cmpsl
dec
add
dec
push
mov
cli
jecxz
outsl
fsubp
mov
push
das
rcrb
fistpl
mov
ret
push
and
mov
jae
mov
faddl
xchg
lahf
xchg
cs
xchg
lods
icebp
pop
mov
mov
and
inc
pop
dec
lock
test
das
pop
out
pop
aaa
scas
push
pusha
or
pop
xor
lods
int
sbb
mov
stos
sub
sahf
cmpsb
inc
xchg
dec
daa
mov
mov
xchg
mov
mov
or
add
insb
aad
mov
in
xlat
fisubs
xchg
lret
jmp
gs
push
mov
push
insl
mov
ficoms
outsb
mov
push
lret
daa
aas
push
mov
mov
stos
lock
divb
inc
xchg
gs
pop
das
jg
and
pop
xor
pop
roll
xlat
mov
inc
mov
lahf
and
scas
push
lcall
xchg
add
mov
mov
inc
pop
cmp
push
pop
jno
mov
cmp
lahf
scas
iret
das
fs
sub
rcr
fs
pop
scas
and
test
cmp
sub
out
nop
scas
sahf
push
dec
cld
sub
mov
orb
pop
sbb
popf
shrb
pop
jg
rorb
jmp
cmpsb
inc
std
pop
hlt
mov
pop
mov
mov
push
in
pop
gs
ds
xchg
push
jns
jle
xlat
lods
mov
aam
mov
add
adc
sahf
adc
push
jne
das
bound
pop
lahf
dec
sbb
filds
out
inc
loop
cmpsb
outsb
das
mov
jle
sub
aad
mov
push
pop
lock
stc
sbb
in
ss
dec
mov
sub
push
fistps
pop
mov
dec
ficoms
loopne
jb
xchg
iret
push
and
cmpsl
dec
ds
fistps
jo
es
js
leave
loop
pop
push
xlat
pop
mov
dec
das
push
xchg
pop
dec
fidivs
scas
into
and
pop
movl
cmpsb
xchg
lret
les
imul
fs
js
and
xchg
push
cmp
fiadds
outsl
mov
xchg
scas
xchg
dec
aaa
xchg
outsb
addr16
fsubp
movsb
xlat
pop
cmpsb
scas
pop
gs
add
and
fs
nop
daa
jmp
scas
xchg
xor
stos
and
lahf
and
mov
cmp
movsl
and
xor
pop
scas
push
ss
rol
xor
sbb
jns
dec
sub
pop
xchg
aad
xchg
inc
data16
lahf
mov
icebp
scas
addr16
push
daa
xchg
mov
lea
out
mov
nop
daa
aas
pushf
cmpsl
xchg
lock
sub
out
outsl
shlb
fwait
sub
mov
shrl
fistps
push
push
gs
cs
dec
jns
xor
in
jo
into
mov
outsb
js
dec
push
pop
sub
out
xchg
fildl
daa
xchg
jecxz
mov
test
and
enter
inc
das
dec
dec
mov
imul
xor
into
das
nop
jno
dec
aad
xchg
aas
mov
pop
outsb
xchg
mov
pop
mov
push
sahf
and
xchg
pusha
push
xchg
sub
test
sub
pop
dec
push
outsl
ja
adc
neg
mov
imulb
data16
xchg
scas
mov
pop
push
pop
xor
cmpsl
and
sub
inc
xchg
pop
jle
cwtl
loope
cmpsb
pop
daa
ss
push
jo
mov
push
xor
cmpsl
orb
mov
adc
imul
xor
icebp
push
pushf
jecxz
aas
cmpsb
push
xlat
pop
lahf
scas
enter
pop
and
mov
mov
push
and
mov
hlt
or
mov
ficomps
nop
cli
movsb
mov
xchg
dec
pop
mov
or
dec
pop
or
inc
daa
dec
adc
push
mov
fisubs
iret
mov
fistpll
sahf
scas
cld
stos
or
cld
in
add
xlat
pop
jl
xchg
xchg
xchg
pop
dec
test
test
or
sub
add
iret
out
ret
jbe
gs
jne
push
jg
scas
adc
xor
mov
aas
enter
out
cmp
pop
xor
out
push
inc
insl
pop
xchg
aaa
push
dec
nop
mov
jns
cld
mov
mov
into
jbe
outsb
lds
xlat
das
aaa
xchg
sub
push
nop
lea
iret
push
rcr
cli
mov
push
stos
push
ljmp
hlt
repz
addr16
jle
test
jg
or
outsl
pop
mov
jle
jne
xor
pop
fstl
push
xchg
pop
pop
pop
push
push
cmp
test
scas
rcr
aaa
xor
sbb
daa
fcompp
call
gs
dec
adc
mov
test
mov
test
xor
fiadds
jbe
ds
mov
inc
cmpsb
stc
dec
outsb
cmpsl
xchg
pop
addr16
outsb
pusha
cmp
push
push
cmp
daa
mov
dec
push
mov
outsb
mov
push
cld
in
push
cmp
scas
test
cmpsb
stos
fstl
loop
into
pop
and
pusha
mov
mov
xor
gs
imul
pop
inc
mov
fucomi
pusha
repz
push
fnstcw
data16
into
cmp
xor
jo
mov
ja
iret
aas
data16
jecxz
out
inc
sahf
lods
cmpsl
mov
cmc
orb
sahf
jb
lret
aaa
outsl
xchg
daa
xchg
loope
inc
into
sub
mov
sub
ficoml
out
aaa
outsl
dec
mov
xorb
cmpsl
pop
bound
cmp
iret
sahf
inc
pop
jp
mov
mov
fists
push
pop
push
fdivrp
mov
mov
jne
hlt
daa
push
das
gs
cmpsb
adcb
push
mov
fsubrp
mov
add
xchg
in
dec
ja
push
gs
and
call
xchg
sbb
stc
cmpsb
aas
out
push
outsb
pop
cs
cmpsl
aaa
push
or
notb
mov
jg
fs
aas
and
or
lahf
xlat
and
jecxz
mov
aas
cmpsb
es
and
mov
scas
mov
outsb
addr16
cmpsl
mov
mov
push
xor
int
pop
stos
pop
arpl
mov
sti
mov
mov
jmp
cmp
iret
lods
mov
ljmp
push
pop
xchg
movl
ss
ja
inc
add
xchg
lahf
jecxz
jg
sbb
scas
add
faddp
mov
daa
sub
jo,pt
mov
das
sub
pop
pusha
clc
lret
lods
dec
pushf
into
xchg
push
scas
bound
sbb
sahf
enter
test
nop
leave
cmpsb
xchg
mov
outsl
iret
xchg
cmpsb
icebp
lcall
xchg
addr16
mov
xor
mov
push
cld
pop
and
mov
xchg
inc
ret
pop
scas
push
jle,pt
mov
ucomiss
mov
daa
jbe
addr16
clc
pop
cmp
pusha
mov
add
sbb
mov
test
cmp
sub
loope
outsl
dec
mov
int
dec
shll
and
xchg
push
sub
inc
daa
xchg
cmp
sbb
hlt
sbb
jbe
push
fiadds
pop
pop
pusha
idivb
add
jg
lahf
roll
xchg
enter
jns
jbe
test
and
mov
data16
daa
outsl
mov
pop
js
fcmovnb
and
addr16
clc
push
mov
ffree
push
outsl
inc
jle
ja
daa
fscale
xor
aad
pop
xchg
cld
fwait
inc
dec
bound
sahf
pop
outsb
jmp
add
xor
jle
push
int3
in
jp
xchg
into
push
push
call
popw
inc
or
mov
pop
test
xchg
cmp
mov
push
xchg
push
xchg
and
subl
inc
ds
and
xchg
gs
push
nop
cmp
fs
pop
outsb
push
lock
push
std
aaa
inc
loop
xor
sahf
das
jg
cmp
jns
mov
mulb
test
pushw
addr16
inc
mov
mov
notb
sub
push
mov
xor
inc
lds
cs
push
in
mov
pop
xchg
dec
mov
adc
push
dec
dec
cltd
loop
daa
push
sahf
es
ss
in
cmpl
push
aaa
pop
dec
arpl
nop
push
negl
lods
jmp
lret
stos
inc
pop
sub
decl
mov
jle
insl
pop
pusha
inc
ljmp
lret
aam
aad
nop
mov
loopne
xlat
push
jns
scas
pop
dec
shlb
enter
or
fs
in
xlat
fsubrl
outsb
gs
xchg
push
fbld
fdivl
fisubrs
jnp
mov
scas
mov
nop
xlat
dec
xlat
jmp
inc
mov
xor
xlat
andl
enter
andb
add
outsb
inc
xor
sbb
fdivr
xchg
insl
cltd
ja
sbb
xor
jg
popf
inc
sub
mov
out
test
rolb
shll
roll
inc
xlat
lds
fsubrs
scas
inc
rorl
push
fprem1
xchg
insl
push
int3
cmpsl
dec
es
mov
cli
sbbl
jo
outsb
and
sahf
cmp
popl
outsb
inc
jnp
inc
xlat
into
leave
pop
mov
push
ss
inc
mov
xor
fdivrp
mov
mov
mov
mov
xchg
daa
mov
push
daa
inc
fistpll
xor
mov
sahf
out
lahf
in
and
and
xchg
push
into
pop
out
mov
xor
out
nop
push
daa
ss
fbld
xchg
jbe
mov
mov
pop
daa
sub
lahf
in
push
dec
jg
pop
lcall
insl
add
mov
ss
push
cltd
xchg
bound
mov
aaa
mov
mov
push
out
xchg
shl
inc
iret
scas
lret
push
mov
outsl
pop
outsb
js
in
rcll
cmpsl
inc
cmp
fmulp
cld
and
dec
mov
lret
sbbb
lret
mov
jbe
jle
ss
into
and
out
cmpsb
pop
data16
fdivl
nop
mov
fistpll
ret
mov
mov
lds
addr16
ds
inc
mov
in
mov
iret
pop
data16
add
lahf
loope
push
sub
scas
scas
dec
lret
xchg
fs
dec
jg
jle
out
es
xorl
inc
cmpsl
cmpsl
iret
adc
push
push
inc
js
or
and
call
daa
mov
push
mov
ja
jno,pn
cwtl
pop
jmp
push
aas
iret
jbe
xchg
sahf
scas
lds
lret
jg
xor
cmp
xchg
mov
pop
lahf
inc
pop
and
inc
iret
mov
pop
pop
fidivs
call
inc
sahf
arpl
shrb
push
scas
stc
xchg
add
sub
inc
nop
cmp
xchg
cld
out
jle
aaa
and
gs
or
movsl
daa
cmp
stc
push
jbe
es
xchg
test
adc
and
aaa
faddp
cs
sub
ja
lods
mov
mov
mov
mov
cli
jmp
iret
and
inc
addr16
cmpsb
add
lock
push
icebp
push
ljmp
mov
scas
jle
pop
pop
ja
aas
aad
sbb
mov
pop
mov
mov
jo
pop
shll
xchg
cld
test
out
jno
jbe
ret
inc
fstp
into
fidivrs
lahf
nop
gs
fs
mov
lahf
push
add
mov
push
loope
aas
ja
push
fmulp
mov
into
stos
cmc
xor
pop
cmp
add
xchg
mov
dec
ficoms
daa
std
add
push
xchg
push
shrl
and
in
sti
mov
je
jmp
add
jo
fs
push
push
es
push
pop
daa
jg
mov
or
xchg
xor
shll
into
inc
push
jb
enter
cltd
rcrl
js
aas
ds
cmp
out
stc
push
daa
ja
dec
shlb
jmp
inc
and
jns
pusha
outsl
xchg
mov
jno
pop
lock
xlat
jns
outsb
frstor
pop
jb
cmp
or
loopne
ffreep
lods
daa
lods
inc
pop
xlat
sub
popf
cmpsl
jle
and
add
pop
scas
pusha
jo
fsubrl
data16
es
into
jle
das
test
ret
cmpsb
fs
jo
movsl
js
xchg
mov
sarl
sti
pop
test
push
xchg
pop
pop
roll
push
xlat
push
jbe
loop
jle
sahf
xchg
cmpsl
lods
push
and
lret
out
xchg
jg
pop
subb
mov
xchg
dec
stc
iret
dec
mov
adc
mov
push
xchg
push
dec
jne
out
mov
xchg
inc
cmp
sbb
bound
lahf
push
iret
sbb
inc
ja
clc
or
jbe
leave
jo
push
inc
cmp
leave
nop
lahf
push
int
dec
and
xchg
add
jo
aam
out
mov
xlat
and
pop
outsb
filds
jo
push
loop
cs
inc
cmp
sub
sbb
lea
cs
mov
or
int
addr16
push
sub
pop
fldcw
rolb
jecxz
es
enter
rcll
and
outsl
ljmp
push
shll
fiadds
jle
xor
jnp
scas
pop
pop
js
in
xor
loop
mov
pop
dec
ficoml
stc
jo
daa
sub
jno
cmp
cmpsl
mov
mov
es
sahf
pop
aaa
ffreep
lods
aad
addr16
pop
cmc
inc
mov
push
xchg
fimuls
lock
rcr
pop
data16
push
cmc
mov
pop
in
push
push
mov
dec
vmovd
xchg
mov
sbb
dec
mov
fdivs
cmp
sahf
data16
out
add
mov
and
pop
into
push
pop
icebp
loopne
push
pusha
push
addl
std
outsl
xor
pop
ss
dec
in
mov
lods
fwait
nop
aad
ds
int
xlat
sbb
fistpll
incb
and
stos
push
pop
sbb
daa
fisubs
xor
adc
adc
fstpt
add
mov
daa
es
push
jbe
add
dec
mov
into
inc
xlat
bound
es
fildl
daa
and
adc
jle
dec
sbb
nop
daa
cs
ret
pusha
dec
pop
fnstenv
push
repnz
lds
imul
fadds
dec
fisubs
pop
push
loop
mov
push
pop
jg
and
ja
scas
jle
repnz
fiadds
pop
lock
fs
pushf
cmpsb
sahf
pop
cmp
push
push
outsl
push
fs
pop
push
loope
jbe
outsb
or
xchg
mov
sbb
scas
cmp
cmp
xor
lds
or
sti
and
std
jecxz
aas
daa
sub
cmp
fidivrs
lea
int
lahf
das
jmp
aaa
enter
dec
push
nop
xor
inc
xchg
addr16
push
lds
enter
sahf
xlat
mov
pop
das
jg
enter
or
movsb
inc
pusha
push
outsb
fiaddl
scas
scas
fists
dec
iret
push
data16
mov
xchg
dec
add
ret
pop
dec
xor
dec
push
xchg
add
xlat
popl
aas
jecxz
arpl
test
sub
lds
out
lahf
mov
or
cmp
push
cmp
je
shlb
mul
orl
fucom
and
daa
dec
test
push
mov
xchg
ja
enter
clc
jns
xchg
lods
pop
addr16
push
push
or
pop
repnz
mov
aad
pop
es
dec
std
mov
pusha
cmp
aaa
sub
pop
push
xor
in
sub
loope
push
scas
dec
push
outsl
inc
lahf
dec
pop
jns
mov
push
jns
fisubrs
fwait
das
loopne
jp
out
dec
addr16
iret
mov
xchg
inc
lods
lahf
pusha
pop
xor
mov
aaa
subl
jo
push
xchg
gs
dec
scas
mov
aas
cltd
addr16
aas
pop
fistpll
test
push
gs
sarb
in
loope
dec
sub
mov
push
in
jo
and
in
xor
daa
pop
mov
jae
mov
or
cmp
pop
sbb
pop
dec
scas
lahf
sub
cmp
stos
bound
xchg
push
fs
mov
data16
sti
pop
adc
mov
jne,pn
decl
movsb
popf
xor
cmc
adc
fisttps
mov
sahf
das
addr16
es
pop
mov
xchg
xchg
cmpsl
xlat
aad
pop
addr16
add
stc
enter
dec
mov
mov
cmpsl
pop
ja
push
in
testb
and
ficomps
bound
addl
sar
ja
sub
cmp
xor
and
mov
lret
insb
inc
add
test
repnz
dec
pop
popl
stos
ja
xor
daa
ljmp
gs
or
adc
dec
test
loop
das
pop
inc
push
xchg
pop
push
pop
scas
jle
mov
imul
add
push
xchg
push
push
test
cmp
fs
outsl
mull
fdivrl
push
jbe
dec
dec
pop
inc
loopne
out
fcoml
fadds
pop
aas
fs
sub
fsubs
leave
ja
and
mov
jmp
daa
inc
push
inc
in
cs
push
test
fidivrs
xchg
into
movsb
jecxz
push
data16
mov
jo
inc
mov
leave
idivl
mov
mov
ds
jne
es
mov
lcall
pop
ja
sub
scas
push
dec
sub
add
fistpll
pop
dec
outsl
push
push
out
push
jmp
filds
cmpsl
cmp
xchg
bound
shrl
pusha
pop
inc
xchg
mov
cmp
outsl
es
loop
xor
nop
fisubrs
pop
push
data16
dec
lds
or
loope
pop
nop
ja
push
jns
scas
dec
inc
in
push
mov
inc
clc
test
mov
fstps
push
outsl
das
arpl
xchg
jno
mov
and
inc
pop
aas
negl
push
enter
xchg
mov
fidivs
push
pop
sbb
add
iret
jg
fsubs
xchg
dec
dec
lahf
pop
cmp
fstps
es
mov
fistpll
sahf
lahf
adc
lds
mov
popf
jge
mov
lods
push
in
dec
pop
sub
cmpsb
jmp
jbe
mov
cmpb
push
jo
aas
ljmp
xchg
push
iret
cmp
rcll
mov
jbe
jbe
pop
into
data16
bound
scas
adc
jecxz
lahf
sahf
adc
fxch
xor
cmpsl
fisubs
ret
cmp
mov
mov
ret
rclb
cmpsl
push
hlt
roll
inc
aas
push
jmp
mov
dec
daa
lea
scas
hlt
jne
mov
cmpsb
ds
outsb
pop
add
xchg
jecxz
dec
fimuls
inc
jg
mov
cwtl
push
cmpsl
push
xor
stc
push
mov
out
mov
pop
scas
push
pop
data16
jbe
cmpsl
shll
mov
inc
push
in
mov
addr16
fsubs
outsl
out
and
fs
xchg
mov
jp
xchg
xchg
fists
es
sahf
test
loope
jo
outsb
std
xor
incb
xchg
and
bound
mov
inc
dec
sbb
fmull
cli
mov
ja
out
mov
fnstsw
xchg
call
scas
ja
jmp
xor
and
ficomps
mov
inc
ja
jne
dec
cmpsl
outsb
popa
pop
cli
out
cmp
iret
pop
sahf
cmp
jle
dec
test
push
lds
mov
lock
insw
dec
fldt
cs
pusha
cmpsb
inc
aas
xor
rol
outsl
das
sub
xor
xchg
ds
xchg
mov
xchg
fstpl
jg
inc
sbb
mov
cs
imul
xlat
fsubrs
dec
jle
movsb
das
mov
ss
daa
xchg
cwtl
mov
pushw
pop
xor
xchg
inc
call
cmc
jne
add
test
aad
fistl
outsb
pop
fisubs
dec
mov
sbb
stos
mov
push
mov
in
jg
js
pop
jecxz
xchg
cmpsl
rclb
bound
cmp
cli
out
mov
pop
inc
dec
pop
lret
std
inc
rcll
sti
test
testb
fisttpll
ss
lcall
xchg
cmpsl
test
call
repnz
mov
scas
pop
push
fistpll
push
add
jle
and
daa
sub
repz
push
sub
enter
gs
pushaw
in
out
daa
sahf
dec
cmpsl
movb
iret
push
fbstp
scas
mov
jecxz
nop
xor
fs
enter
movsb
push
inc
movb
sub
xchg
jle
xlat
xchg
mov
shll
sahf
add
dec
xor
popa
jg
fcomi
ja
clc
dec
push
aad
mov
jno
sub
imull
push
lods
or
popl
out
jne
outsb
xchg
push
sub
pop
hlt
mov
pop
pop
cli
xchg
xor
mov
insb
flds
mov
test
sub
lea
add
lcall
scas
into
sahf
ss
hlt
cmpsl
mov
mov
aad
pop
js
mov
dec
adc
ds
mov
fisubs
jo
aas
xchg
psubsb
push
stos
scas
sbb
and
test
push
mov
jo
arpl
jg
fdivrs
inc
lds
mov
outsb
jmp
cltd
push
cli
mov
pop
scas
popf
sub
ror
fisubs
sbb
mov
jb
lcall
jnp
pusha
mov
xchg
fldl
insb
pop
add
xor
push
lods
nop
imulb
daa
xchg
nop
out
popf
mov
into
aas
pop
xlat
lahf
and
hlt
arpl
mov
hlt
mov
cs
xor
and
je
leave
es
pushw
dec
je
jb
repnz
xchg
fldt
fs
add
mov
fstpt
pop
fistps
movl
xchg
cmp
data16
outsl
push
js
ret
add
push
push
xchg
popa
push
mov
jp
push
xchg
cmpsb
dec
mov
push
scas
das
xchg
sbb
pop
mov
dec
adc
sbb
cs
sahf
mov
jbe
sbb
push
dec
in
xchg
push
das
enter
xor
out
jle
xchg
sbb
inc
add
sahf
and
vmovhps
mov
xchg
xlat
lcall
cmp
xchg
sbb
enter
mov
mov
ret
push
nop
pop
sub
pusha
cmpsb
cmp
sub
aad
into
testb
ljmp
ss
pop
mov
jbe
and
jg
into
orl
inc
sub
in
ss
pop
push
dec
jb
jns
ja
jae
xchg
xor
push
add
lahf
dec
incb
dec
std
divl
push
pusha
cmp
mov
push
jbe
insb
loope
inc
lahf
cmpsb
jle
imul
push
pop
into
cs
out
xlat
sub
xchg
dec
adc
xor
cmpsl
scas
loope
scas
aaa
das
pop
outsb
push
fldcw
addr16
inc
and
add
pop
xchg
ja
mov
flds
lcall
mov
pusha
push
push
pusha
and
repnz
mov
loopne
mov
out
mov
mov
rorl
inc
in
in
shll
jecxz
xchg
aaa
and
mov
mov
outsl
lock
and
pop
sub
daa
pop
jmp
jl
mov
or
push
xchg
and
and
mov
mov
cmp
push
xor
xor
pop
mov
cmp
sub
hlt
cmpsl
scas
movsl
fldcw
das
xor
out
aaa
sub
jg
test
mov
and
mov
faddl
ja
inc
dec
rorl
mov
fistpll
stc
popa
jp
mov
sub
loope
xor
cs
xlat
dec
out
xchg
loope
jg
push
outsl
pop
mov
cld
push
inc
sbbl
aad
lret
inc
cld
ret
fs
push
or
daa
enter
jmp
xchg
movsb
xchg
jo
leave
rclb
clc
xchg
addr16
pop
aas
add
or
es
cmp
mov
enter
daa
mov
and
cmpl
mov
pop
aam
stos
sahf
call
ja
iret
negb
lea
xchg
inc
clc
push
pop
pop
push
sahf
push
xchg
mov
loopw
dec
xchg
scas
xchg
shr
loope
dec
cmpsl
push
push
pop
scas
rcl
xor
dec
jo
sbb
cmp
push
daa
dec
js
push
or
jg
jle
rol
cmpsl
xlat
cmp
daa
jbe
xchg
mull
push
out
xchg
iret
movsb
jmp
xlat
gs
mov
lahf
loopne
inc
fidivs
filds
subl
jmp
push
cmpsl
push
sbb
out
mov
imulb
cmp
out
cltd
psubusb
sbb
int
pop
aas
pop
xchg
sbb
addr16
lahf
pop
xchg
xor
jo
jle
addr16
mov
mov
aaa
xchg
data16
add
daa
ficoml
pop
pop
push
or
std
add
test
rcl
jb,pt
sbb
mov
dec
lds
in
jle
push
push
jbe
pop
pop
das
scas
sbb
push
pop
mov
dec
out
mov
insb
addr16
xlat
sub
mov
inc
jo
cmp
jne
mov
pusha
inc
add
popl
sahf
hlt
and
scas
ds
sub
add
xchg
icebp
xchg
push
data16
fisubs
mov
sub
icebp
fbstp
pop
jb
rorl
outsl
popf
mov
ja
dec
in
jle
data16
lret
add
mov
push
and
or
rol
mov
call
sbb
dec
xlat
xchg
jb
mov
pop
jg
jo
inc
sbb
dec
arpl
xchg
mov
outsl
aad
daa
jecxz
dec
scas
pop
push
daa
push
inc
push
in
outsl
pop
mov
jne
add
in
iret
and
nop
fdivrl
popf
inc
pop
pusha
push
lahf
xchg
jmp
or
outsb
dec
mov
jo
and
daa
sbb
sbb
sti
call
daa
repnz
cmpsl
jo
inc
cmp
cmp
fsubp
sarl
into
inc
push
test
mov
call
mov
jp
daa
inc
and
enter
imul
jbe
mov
push
mull
push
sub
es
js
jo
and
push
nop
outsb
aaa
imul
dec
mov
or
cmp
mov
test
outsb
in
cli
testl
stos
pop
pop
push
sbb
mov
mov
or
cmpsb
pop
inc
icebp
stc
sbb
pop
stos
add
das
jmp
mov
sti
enter
stc
xor
or
outsb
push
jge
das
cltd
dec
je
mov
inc
jmp
fdivs
adcl
jns
mov
inc
ss
daa
pop
push
xchg
push
jle
outsl
mov
mov
fisttps
aad
inc
xchg
cmp
int3
push
mov
cmp
push
jle
mov
adc
push
xchg
or
push
ja
testl
xor
fisttps
das
or
scas
jle
jg
inc
sub
sub
fidivrs
data16
jmp
jmp
add
pusha
adc
test
aaa
ljmp
push
add
add
mov
cmp
cmpsb
inc
in
and
into
pop
aad
push
jl
inc
pop
mov
cltd
je
andb
or
xchg
aas
dec
xor
scas
stos
repz
pop
outsb
ljmp
xor
out
pop
outsl
ret
out
xchg
aas
jbe
enter
test
cmpsl
movsb
pop
inc
pop
nop
and
pop
push
movsl
sbb
sub
xchg
xchg
xchg
push
cmp
sub
sbbb
mov
cli
add
push
mov
sub
aas
shll
in
fimuls
xchg
xor
pop
pop
lahf
xchg
and
je
cmp
pop
push
fisubs
push
hlt
push
pop
rorl
push
push
mov
sbb
aaa
scas
fcomip
insl
lods
aam
mov
scas
dec
inc
dec
call
and
mov
inc
popf
mov
leave
sbb
xchg
push
arpl
xor
jle
cmpsb
jmp
jno
dec
inc
pusha
push
jb
dec
or
mov
cmp
mov
lahf
jle
xchg
pusha
inc
sbb
out
pop
icebp
pop
aaa
aas
and
add
pop
or
pop
pushf
jns
inc
cmp
fwait
xchg
out
xchg
loopne
pusha
ficoml
orl
inc
pusha
mov
xor
and
pop
jb
jle
push
aad
es
dec
inc
ficomps
jmp
dec
outsb
addr16
mov
sahf
out
push
fdivrl
or
pop
in
addr16
ds
pop
jg
push
fistps
jecxz
dec
and
gs
mov
mov
daa
mov
aas
daa
out
loopne
aad
jle
daa
fisubrs
imul
addr16
lahf
xchg
inc
mov
fucomip
push
cmpsb
mov
xchg
xchg
inc
dec
addr16
lods
shlb
pusha
cmpsl
and
scas
in
cmpsb
mov
mov
mov
pop
es
inc
aaa
xchg
mov
mov
fsts
ja
call
outsb
cmpsl
lahf
sbb
icebp
es
ss
cmpsb
push
scas
cmpsl
pop
enter
leave
pusha
aas
sahf
jbe
in
push
addr16
xchg
jo
fs
cmpsb
push
xchg
dec
fbld
push
xchg
loope
pop
push
aas
fs
and
xor
inc
js
jg
pushf
test
dec
dec
and
jg
iret
hlt
scas
leave
xor
into
lret
push
jmp
xlat
scas
cmp
js
mov
jl
mov
push
cmp
ss
push
push
test
dec
and
mov
faddl
daa
xchg
int3
enter
ss
add
nop
mov
jns
adc
pop
divl
jno
aaa
xchg
imul
mov
pop
dec
pop
rorb
fldcw
cmp
mov
es
mov
scas
push
xor
sub
nop
fidivrl
iret
repnz
addl
jg
fildll
jecxz
jbe
and
inc
test
push
cs
jbe
xchg
cltd
fstpl
push
mov
stc
hlt
pop
push
fimuls
js
lret
push
es
stos
mov
test
mov
addr16
pusha
xchg
mov
lret
jp
or
jbe
mov
xchg
aad
mov
sbb
aaa
jecxz
push
push
push
cmpb
xlat
fbstp
mov
aaa
pop
cmp
inc
stos
popf
lods
pop
das
push
notb
outsl
pop
lahf
adc
in
mov
ret
xor
mov
pop
xchg
push
push
imul
cs
aam
mov
sbb
daa
add
mov
xchg
aas
jle
addr16
xor
xlat
add
xchg
clc
xchg
and
xchg
jg
lret
mov
mov
ficoms
mov
fbstp
xor
test
js
scas
jle
mov
adcl
push
aas
sbb
rcrl
and
mov
filds
stos
loop,pt
push
xchg
cmpsl
outsl
outsb
inc
cli
push
xchg
mov
fildll
dec
cmp
add
and
test
dec
push
dec
lahf
cmp
or
pop
dec
stc
dec
pusha
push
nop
and
aam
mov
pop
iret
mov
push
in
pushw
lret
or
sub
adc
mov
into
or
cmp
sub
xchg
jo
outsb
es
test
out
cmp
daa
subb
xchg
cmpsb
incl
addr16
xchg
in
fsubp
fstps
pop
pop
js
fstpt
pop
lea
daa
aaa
in
mov
cltd
popl
push
in
cmp
lds
mov
int3
iret
cmpsl
outsb
lods
inc
sahf
out
das
push
xchg
dec
div
js
cmp
in
jp
sub
and
ja
dec
mov
push
mov
ret
xchg
cmpsb
hlt
jp
es
xchg
mov
filds
lret
outsb
adc
mov
mov
ds
mov
movsl
and
scas
call
push
nop
and
jno
pop
inc
aam
xchg
ja
mov
fmulp
outsb
inc
roll
in
addr16
pop
mov
and
ljmp
add
dec
xchg
dec
lock
and
sub
push
mov
out
ret
cli
mov
outsl
fcmovu
sahf
call
push
pop
test
inc
or
bound
data16
test
adc
dec
adc
xor
pop
aaa
jo
pop
aas
fisubl
lcall
xlat
data16
es
fs
out
add
hlt
out
xlat
push
jb
or
cmp
xchg
and
or
add
int
scas
jbe
inc
ss
pop
ja
push
shl
push
push
daa
iret
mov
data16
cltd
cmp
iret
cltd
inc
data16
inc
out
scas
xchg
rcrb
pop
dec
test
popf
xlat
pop
out
sub
ret
and
xchg
mov
sub
nop
pop
popw
mov
jmp
jbe,pt
sbb
push
mov
mov
add
test
outsl
daa
aam
stos
jns
ja
push
mov
inc
inc
push
cs
js
jle
enter
pop
inc
mov
pop
or
aam
inc
cltd
jno
pop
sahf
and
mov
and
movsb
nop
bound
and
push
outsl
enter
leave
into
fidivrs
sbb
jns
inc
das
out
pop
ss
ror
push
xchg
jo
jmp
add
outsb
xor
loop
push
cmp
pop
xchg
outsl
repnz
enter
dec
cs
mov
push
lahf
mov
leave
outsb
push
dec
fbld
ret
add
inc
outsw
out
rcr
push
jo
test
push
mov
sbb
sbbl
ja
add
clc
pop
out
sti
mov
jmp
xlat
fsubrl
push
push
fisubl
scas
bnd
dec
icebp
mov
mov
sub
int3
cmp
pop
fistps
xchg
imul
or
fldcw
push
dec
sahf
cmp
push
cmp
jb
push
cmp
mov
lock
push
cs
pop
and
fs
scas
jecxz
mov
pop
movsb
inc
mov
cs
cmpsb
xor
out
push
inc
and
xchg
xor
sbb
mov
mov
fcom
xchg
xchg
sub
cmp
out
cmpsl
into
imull
sub
jb
ja
addr16
sahf
push
mov
dec
inc
lods
push
lahf
push
xchg
call
sahf
dec
shll
movb
outsl
pop
cmpsb
xor
xchg
xchg
ds
cs
scas
cltd
or
or
adc
adc
js
pop
mov
inc
and
lods
pusha
sbb
mov
das
frstor
into
inc
jbe
pop
xchg
andb
mov
popf
jmp
mov
cld
pop
outsb
pop
mov
xchg
and
pusha
gs
push
push
and
add
mov
pushw
push
sub
jecxz
scas
sub
sahf
je
fxch
push
aas
cli
mov
mov
lret
xor
jmp
pop
ja
push
mov
push
shll
bound
sub
pop
je
in
push
pop
jns
das
or
test
test
les
inc
or
movsl
mov
hlt
jmp
push
into
mov
out
xchg
xlat
xchg
flds
cmp
pusha
cs
jg
fcmovnbe
addr16
or
decb
mov
test
and
push
push
movsb
cmpsb
cmp
jo
mov
movsb
sbbb
mov
mov
test
in
ss
mov
jae
xchg
out
leave
mov
push
in
sub
outsl
iret
pop
lret
imul
daa
loopne
cmp
pop
sbb
inc
xor
cmp
ss
mov
dec
dec
push
cmpsl
xchg
movsl
lea
sbb
jp
sti
xchg
adc
dec
jg
dec
pop
xlat
pop
das
shll
in
rorl
es
mov
js
ja
push
pop
and
std
push
in
jo,pn
cmpsb
addr16
movsl
fidivrs
pop
inc
add
mov
test
arpl
xchg
enter
sahf
lahf
div
mov
cmpsb
xchg
cmpsl
xchg
out
aaa
dec
and
mov
and
pop
add
jg
pop
xchg
int3
cli
insb
cmp
stc
add
dec
sti
add
js
mov
mov
stc
dec
lahf
xchg
lods
clc
jl
fadd
arpl
jo
ds
dec
add
cs
mov
pop
daa
sub
test
filds
iret
pushf
fisttps
push
gs
lret
mov
xchg
pop
cltd
scas
cmpsl
out
mov
lahf
xor
xchg
ds
jl
fidivs
xchg
xchg
sahf
xlat
inc
shll
aas
sub
cmp
mov
cmpsl
xchg
or
ret
xchg
dec
es
mov
lahf
xchg
sti
and
sub
jo
outsl
jle
push
xchg
pop
loope
pop
inc
iret
scas
adc
fldt
stc
xchg
xchg
nop
push
lahf
das
inc
mov
js
pop
mov
cmp
cmp
shll
out
outsb
scas
and
std
call
mov
xchg
inc
adc
call
or
pusha
lea
out
addl
xchg
push
outsl
inc
dec
in
mov
fcmovnbe
daa
loopne
cmpsb
cs
fs
jno
cmpsl
pop
lahf
repnz
sbb
lea
scas
add
inc
mov
sbb
dec
mov
cmp
ja
scas
pusha
daa
mov
mov
or
cs
mov
and
loope
sbb
dec
push
sub
gs
scas
xor
mov
pusha
push
addr16
cmp
lods
inc
jbe
push
daa
lea
sti
insl
sbb
push
xor
dec
pop
lret
jb
mov
xchg
pop
jns
sub
mov
scas
push
dec
mov
orl
xor
addl
pop
mov
and
add
shll
sahf
dec
or
dec
push
rcll
xor
adc
lcall
jbe
xchg
outsl
xlat
aas
ds
xchg
jae
lods
cmpsb
in
fistl
pusha
jo
inc
fidivrl
mov
xchg
inc
jno
mov
stos
pop
push
das
movl
cmpsb
pusha
mov
int
jo
dec
mov
pop
pushf
push
xor
and
into
aad
push
fwait
sbbb
add
mov
jo
xorl
xor
ret
aaa
push
mov
dec
in
lahf
and
pop
das
add
mov
sub
es
mov
jle
pop
push
clc
out
jnp
outsb
std
inc
xchg
nop
fcmovbe
xlat
push
pop
jg
xor
sub
cmp
ja
loop
inc
xchg
jle
sbb
sbb
dec
pop
out
dec
call
movb
dec
add
sub
pcmpeqw
inc
pop
pop
es
jecxz
daa
push
jno
xchg
and
adc
mov
xchg
cmp
loopne
fistpll
cmp
jb
add
filds
pop
ja
pop
cwtl
dec
inc
lods
icebp
nop
xchg
adc
mov
lahf
addr16
out
push
shlb
repnz
mov
mov
dec
inc
test
and
in
jecxz
inc
sahf
jns
daa
dec
ja
xor
or
test
jno
push
cmp
cmpsb
int3
pusha
lcall
dec
pop
dec
mov
ljmp
jne
sahf
jmp
cmp
jmp
dec
cmpsl
inc
mov
call
loopne
in
inc
push
xchg
adc
adc
mov
push
mov
mov
out
cs
stos
jl
das
sub
xchg
jbe
fldt
xchg
jmp
dec
adc
icebp
aas
iret
jo
mov
icebp
pusha
pop
mov
aaa
xchg
xor
inc
mov
cs
xchg
xchg
stos
fcmovnbe
dec
mov
xor
stos
add
push
sub
push
movsb
or
jbe
jl
test
gs
and
imul
mov
outsb
lods
aaa
push
or
xchg
inc
push
mov
subb
outsl
rcll
mov
out
xchg
daa
mov
jg
mov
mov
sub
pop
push
xchg
das
out
mov
imull
cmp
xlat
data16
cmpsl
jg
out
sahf
dec
hlt
pop
pop
test
mov
aas
outsb
lods
xor
pop
lcall
out
dec
jo
lret
inc
jmp
mov
jo
cmp
pusha
pop
aas
xorb
xor
iret
mov
ja
addr16
dec
ret
stos
mov
mov
push
inc
ror
pop
pusha
push
lods
shrl
daa
outsb
jno
dec
pop
icebp
push
mov
lahf
cs
xlat
cmpsl
data16
dec
xchg
nop
pop
mov
pop
pop
pop
andl
icebp
xchg
outsb
ja
cmpsl
push
dec
shll
xchg
mov
addr16
enter
xchg
xchg
cmpsb
xlat
test
jno
xchg
das
pop
stos
push
ficomps
outsl
in
ja
es
ss
in
iret
pop
cmp
popl
push
in
cmpsl
pop
data16
cmp
xchg
jne
test
pusha
pop
and
call
mov
pop
loop
aas
xlat
lahf
ja
and
push
iret
aaa
push
adcb
nop
pop
push
sub
mov
cmpsb
popf
dec
mov
loop
xlat
jae
cmp
push
leave
das
mov
or
jmp
je
cmp
movsl
les
addr16
dec
add
mov
and
int3
and
es
das
mov
xor
cmpsl
pop
jge
sahf
push
rcll
shrl
dec
xor
test
adcb
mov
pop
pop
sbb
iret
ret
xlat
arpl
fnstsw
cs
push
retw
mov
fsts
xchg
xlat
xchg
mov
pop
xchg
aaa
scas
ljmp
jle
or
ds
lea
fnstenv
inc
into
shll
pusha
xchg
xchg
outsl
movsl
adc
jle
jg
push
gs
pop
cmc
movsl
clc
lret
jo
inc
push
jle
xchg
movsl
out
insl
cltd
nop
mov
xchg
push
mov
ret
mov
mov
loop
jo
jle
es
cmpsl
xchg
mov
xchg
inc
iret
xlat
and
sbb
inc
loope
scas
scas
and
pop
mov
pop
leavew
clc
inc
cmp
ficoms
ss
pop
push
fs
shll
and
push
pop
pop
cwtl
pop
xchg
loopne
out
jle
mov
jne
sub
je
mov
xlat
dec
in
daa
outsb
cmpsl
xchg
clc
inc
mov
jle
aaa
lcall
pop
cmp
outsb
inc
push
nop
jg,pn
pusha
clc
lret
cmpsb
ss
popl
dec
and
sbb
pop
out
mov
cmp
jbe
fcmovne
xchg
aaa
xchg
mov
int
pop
insl
call
sub
xchg
jg
push
sahf
aaa
cmp
daa
push
loope
pop
ja
in
fcmove
mov
outsl
push
stos
push
testb
aaa
cmpsb
sub
dec
adc
cmpsl
sahf
xlat
mov
mov
loope
jle
fimuls
mov
jbe
mov
daa
pop
xlat
and
lea
inc
xor
xlat
fildll
push
adc
cmpsb
sti
mov
shrl
sarl
fisubrs
jbe
in
cmp
cmp
je
stos
sbb
xchg
scas
jle
ficomps
push
sub
push
cs
sahf
xchg
outsl
inc
push
adc
add
in
aas
sti
scas
pop
aam
cmpsl
lods
fs
push
push
iret
dec
add
push
loop
data16
jb
fs
pop
sahf
dec
push
and
sub
rcrb
jg
push
scas
pusha
rcll
fisubs
aad
into
addr16
pop
add
mov
aaa
ficomps
scas
push
cmpsb
imull
mov
les
sub
mov
xchg
addr16
cmp
subb
mov
aaa
dec
sub
outsl
loop
outsb
inc
sub
je
mov
nop
shll
adc
jg
addr16
xchg
fists
inc
jae
add
into
pop
xchg
leave
stc
addr16
dec
cmc
mov
and
push
inc
shl
test
cmp
mov
mov
inc
jbe
bound
xchg
lds
dec
es
push
into
iret
and
xchg
ja
push
ficompl
data16
aaa
sbb
fisubrl
imul
push
into
push
in
jg
inc
nop
fs
sbb
lahf
das
cmc
outsb
cs
mov
pop
cmpsl
ja
or
mov
mov
in
addr16
and
loop
dec
fidivrs
pop
iret
jl
int
das
lcall
mov
fisubrl
cs
cmp
aas
pusha
inc
pop
arpl
sub
loope
cmpsb
scas
lods
add
mov
test
fbld
push
cmpsb
xchg
scas
daa
pop
dec
adc
dec
imulb
push
or
iret
ljmp
dec
mov
popf
stc
and
daa
pop
mov
inc
fs
cmp
fisubs
clc
ja
jp
add
jae
into
dec
inc
mov
nop
es
fcmovnu
xor
fcoml
mov
push
pop
dec
aas
inc
push
fwait
add
pop
in
rclb
cmp
shrl
outsb
xchg
jle
nop
cmpsb
mov
lcall
ret
lea
pop
pusha
out
nop
mov
push
iret
xlat
mov
push
sub
icebp
inc
cmpsl
pop
inc
into
add
jbe
sbb
bnd
xchg
aaa
out
test
ret
inc
and
push
mov
or
nop
ja
mov
das
lock
push
sub
inc
dec
fs
aas
pop
cltd
adcb
daa
and
push
or
data16
ret
mov
outsl
scas
lods
daa
xor
mov
je
push
and
fisubrs
out
aaa
jo
dec
mov
std
jno
loop
inc
lahf
scas
mov
loop
jle
xlat
push
out
out
xchg
cmpsl
dec
and
dec
jo
inc
inc
std
shrl
jmp
push
xchg
jg
aas
pop
jmp
fsubrp
add
mov
mov
pop
outsb
dec
stc
scas
xchg
sbb
cld
mov
mov
adc
pop
xlat
xchg
ficompl
out
push
and
push
repnz
mov
inc
out
mov
out
aas
arpl
dec
mov
cmp
jo
pusha
mov
sub
das
insl
add
stc
mov
push
push
jo
scas
xchg
pop
popl
test
or
iret
or
mov
sahf
and
andl
shll
nop
add
cmp
call
insb
pusha
mov
into
mov
test
xchg
fiadds
stos
add
outsl
and
push
xchg
cmp
bound
mov
adc
dec
out
pusha
xchg
std
daa
or
or
xlat
adc
jne
sbb
dec
pop
push
cmpsl
push
enter
inc
outsb
dec
aam
xchg
xchg
insl
sub
in
mov
mov
dec
pusha
jns
ja
scas
mov
mov
pshufw
mov
pop
push
add
and
jnp
xchg
fs
push
outsb
mov
jbe
sub
inc
pusha
pop
into
and
enter
push
cs
in
les
mov
aad
xchg
loopne
aad
call
cmp
add
pop
pop
lds
xchg
xchg
or
stos
arpl
pop
push
mov
inc
mov
push
and
push
mov
mov
pusha
dec
ficomps
nop
dec
sarb
jg
icebp
repnz
lock
je
mov
data16
and
mov
je
mov
cmpsl
outsl
and
xchg
pop
iret
aas
mov
test
inc
icebp
ret
hlt
dec
push
jo
cmpsl
lahf
xchg
pop
das
push
jle
insb
stos
mov
pop
scas
jg
cmp
jne
sbb
cmpsl
aaa
in
lret
pop
adc
in
dec
pop
int3
mov
mov
inc
lahf
add
cmpsl
sahf
add
sub
fists
fistps
lcall
stc
xor
sbb
add
adc
xchg
cmpsb
adc
push
pop
pop
ja
mov
or
xchg
pop
insl
xor
or
neg
stos
aas
and
xor
jecxz
inc
xlat
in
fidivrs
jo
mov
pop
push
mov
aaa
fistpl
xchg
shrb
data16
jmp
addr16
fcoml
rcl
nop
ret
lret
xor
pushf
lahf
mov
ffree
push
xchg
push
dec
xor
jg
sub
xor
cmpsb
pushf
sub
push
pop
stc
es
dec
cmp
sub
push
push
pop
xchg
add
sarl
sahf
popl
fistpl
sbb
mov
push
and
push
in
sub
xchg
filds
adc
pop
pop
xor
into
ljmp
lahf
aaa
cmp
cs
xor
pop
pop
out
mov
shlb
filds
mov
mov
xchg
inc
and
lahf
test
iret
sbb
cmp
nop
fists
cmp
xchg
pop
fldcw
fiaddl
mov
adc
sub
daa
and
xchg
in
inc
cltd
push
cmc
cwtl
fcomip
aad
daa
data16
out
xlat
lahf
and
out
pop
gs
shll
dec
iret
mov
inc
enter
mov
ss
pop
cmpsb
xor
aas
and
lods
lahf
mov
push
fisttps
into
jno
xchg
pop
pop
scas
inc
push
xchg
pusha
sahf
add
fs
outsb
push
xchg
fisubs
aas
jbe
aas
test
jle
mov
jo
pop
in
pop
xchg
daa
das
into
jl
jecxz
xchg
insb
xchg
ret
leave
in
scas
cmpsl
mov
in
inc
push
mov
cmpsb
mov
test
fistpll
es
inc
ljmp
repnz
xorb
int3
mov
dec
pushf
pop
jb,pn
mov
jae
push
jae
jmp
sarb
xchg
iret
sub
insl
outsl
cs
outsb
leave
fdivs
lock
cmp
mov
hlt
cmc
cli
xchg
mov
and
cmpsb
loopne
scas
dec
push
arpl
and
mov
lahf
cmp
push
into
imul
leave
fbld
jle
cmpsb
in
jno
cmc
cmpsb
shr
xorl
data16
sbb
sub
xchg
out
aaa
mov
notl
add
rclb
in
aas
test
fidivs
sahf
shrb
mov
add
aaa
js
repnz
pop
cs
xor
inc
sbb
fs
lahf
and
xor
es
pop
mov
call
add
daa
cmpsl
scas
jecxz
pop
and
dec
mov
nop
cmp
sub
out
lds
or
js
sahf
cmp
inc
xor
mov
xchg
cmp
lds
jg
pop
fbld
cmp
or
bound
pop
rolb
nop
xlat
notb
mov
out
cmpsl
xlat
push
sahf
cmpsb
bound
mov
mov
sarl
jp
pusha
fucomp
sbb
scas
mov
dec
cmpsb
icebp
mul
xor
push
jbe
push
bound
push
xlat
daa
pop
incb
add
push
cmpsb
push
and
jns
nop
scas
push
xchg
lcall
push
and
mov
fildll
fistps
ds
rcrb
cs
pusha
push
xchg
xchg
push
jmp
pop
fisubrs
sub
push
push
cltd
outsl
inc
inc
xor
and
sub
pop
das
xor
push
outsb
ss
add
icebp
inc
mov
loope
aaa
push
frstor
mov
and
mov
or
outsb
gs
repz
aaa
mov
and
decb
subb
dec
mov
jecxz
adc
mov
push
addr16
mov
jmp
and
pusha
push
pop
pop
push
or
dec
pop
pop
mov
movsb
mov
and
rcrl
push
mov
sub
rorb
sub
jle
pusha
ss
arpl
iret
and
xchg
ficomps
pop
fld
daa
jecxz
jle
xchg
xor
outsb
addr16
cmpsl
aad
mov
dec
mov
call
clc
add
push
repnz
mov
iret
flds
pushw
in
adc
and
scas
and
stc
pop
into
or
jle
sahf
mov
mov
leave
cli
jbe
mov
pop
and
les
loopne
inc
sbb
mov
nop
dec
push
in
jne
push
mov
icebp
sbb
fcompl
mov
push
add
lds
into
jbe
cmp
or
xchg
push
cltd
sub
sub
mov
or
dec
adc
sbbl
fisttps
jle
gs
push
in
es
dec
sub
xlat
push
and
shlb
pop
mov
insb
add
lret
push
cmp
test
push
je
jae
pushf
fbld
shlb
gs
and
scas
sub
test
dec
mov
fisubs
dec
dec
inc
cmp
aad
fisubl
mov
shlb
hlt
xlat
call
fistpll
cmpsl
dec
push
jns
out
jbe
mov
pop
mov
fistps
mov
loope
jg
inc
lahf
nop
sahf
out
xlat
daa
sbb
push
xchg
arpl
sbb
and
xlat
outsb
call
cmp
xor
mov
sbb
pop
subw
jbe
xor
lods
jo
jno
xor
and
addr16
icebp
add
shll
into
test
add
outsb
les
stos
repnz
cmpsb
scas
inc
mov
ja
cmpsl
inc
jnp
push
pop
adc
in
jbe
push
lahf
pop
enter
daa
mov
and
and
icebp
xchg
filds
into
inc
push
xchg
dec
xor
xor
cmp
pop
mov
pop
jne
push
cmp
scas
stos
int3
outsb
sub
mov
je
in
sahf
bound
inc
jbe
ljmp
and
lods
push
xchg
fdivl
bound
test
cmpsb
stos
xor
aaa
mov
ds
or
ja
pop
cmpsl
hlt
lds
aad
data16
push
fiadds
sahf
sub
xor
hlt
mov
scas
filds
daa
cmpsb
push
jo
push
or
adc
mov
scas
pop
inc
jo
sbb
pop
jbe
push
lahf
inc
mov
push
xchg
cmp
cwtl
add
cmpsl
fs
push
mov
jno
mov
pop
outsl
xor
pop
ja
add
not
idivb
fistps
out
jo
sahf
jbe
and
js
fs
inc
into
out
daa
jo
xchg
icebp
test
dec
sub
std
aas
inc
sahf
xchg
sbb
xor
je
outsb
fldcw
ljmp
aam
fsubp
outsl
js
gs
inc
aaa
out
mov
mov
addr16
xor
mov
xchg
mov
push
repz
popl
pop
fsubl
xchg
push
movsl
fnstcw
test
jns
jo
imul
jno
mov
push
adc
leave
mov
fsubrl
ss
push
mov
inc
movsl
loope
xor
xlat
fisubl
call
pop
mov
ljmp
daa
mov
out
mov
xchg
dec
pop
mov
push
leave
ljmp
xchg
and
cmpsl
inc
dec
ss
in
popf
fbstp
divb
jmp
xchg
addr16
mov
cmpsb
es
daa
ja
int3
and
aad
cmpsl
call
scas
sub
mov
inc
fs
ret
ljmpw
lods
outsl
and
and
and
sbb
cmp
lcall
outsl
pusha
nop
fistps
mov
inc
mov
jb
shlb
push
es
js
enter
aas
push
in
pop
ja
add
push
andb
ss
dec
bound
push
ret
dec
sahf
fiaddl
inc
jo
mov
fists
lret
xor
es
push
insb
add
mov
add
push
sub
mov
aam
jo
fnstcw
out
xchg
xchg
mov
inc
push
push
push
das
jecxz
scas
outsb
and
in
das
sub
jecxz
dec
fisubrs
loope
jo
push
loopne
test
push
ss
adc
daa
in
xchg
jp
popa
fbld
gs
data16
mov
pusha
or
mov
pop
mov
rorl
pop
pop
aas
addr16
sahf
or
adc
adc
pop
std
add
xor
das
test
adc
xchg
push
cwtl
mov
mov
das
dec
jle
xor
push
ror
scas
addr16
dec
sbb
sahf
mov
xor
mov
mov
inc
addr16
or
leave
dec
jbe
rcll
push
xlat
mov
inc
dec
jmp
pusha
push
cs
xor
fistpll
and
pop
mov
lea
sbb
rcll
mov
pop
cmpsl
lret
test
inc
cmp
sbb
dec
ficoms
outsl
gs
jno
xor
lods
mov
cmp
jge
je
pop
push
ljmp
mov
push
addr16
enter
sbb
addr16
shll
jle
sbb
out
nop
xchg
xchg
outsl
cmpsl
sahf
jo
lods
push
pop
cmp
mov
push
shr
ss
call
cmp
xchg
stos
outsl
addr16
mov
cmp
push
std
push
cmp
cmp
iret
sub
pop
cmp
mov
xor
popf
enter
inc
stos
fsubrl
ss
pusha
movsb
mov
bound
mov
gs
out
mov
repz
mov
repnz
jp
aam
push
repnz
in
fnsave
pcmpeqd
jecxz
mov
xor
loope
aaa
ja
inc
jo
outsl
xchg
into
xor
imul
sub
sub
fdivp
loopne
mov
push
cmpsl
xchg
xchg
nop
xor
mov
jg
test
outsb
lret
sbb
jb
sbb
fs
push
push
fbld
inc
jb
push
test
pusha
pop
pop
xchg
jbe
into
ja
fisttpll
cltd
mov
cmpsb
cmp
in
cmpsl
mov
push
sub
fisubrs
das
jle
lea
adc
push
int3
xchg
cmpsb
sti
mov
fsts
dec
adc
ss
push
pusha
pop
sbb
jl
add
sahf
ja
xor
cmpsb
cmp
pop
in
jae
jge
scas
push
rclb
or
imul
sub
jg
sub
dec
lods
pushfw
iret
dec
or
in
jbe
and
in
and
js
imul
sbb
xor
adcb
mov
stos
lahf
scas
data16
mov
pusha
repz
das
jo
fildl
pop
outsl
jmp
out
and
scas
daa
sub
cltd
jbe
xchg
or
push
pop
xchg
add
ljmp
ficoms
scas
and
push
xlat
nop
jecxz
inc
and
fidivrs
mov
fsubl
lret
insb
jae
iret
xchg
cmpsl
jle
mov
enter
xchg
cmp
lods
sbb
push
dec
adc
push
and
dec
jns
ds
or
mov
xchg
enter
xlat
popw
jle
cmp
ljmp
pop
cmpsl
dec
incl
sahf
push
insl
xorb
int
pusha
inc
add
mov
ja
bound
mull
ds
aaa
sahf
pop
rorb
fstpl
dec
out
pop
jns
inc
addr16
out
pop
pop
outsb
daa
xchg
push
mov
ret
shlb
fidivs
dec
xlat
sub
ds
push
dec
inc
push
loope
ja
and
repnz
mov
jmp
sbb
xlat
scas
shlb
pop
stc
push
dec
pop
dec
das
aas
lods
test
out
dec
xchg
nop
push
adc
test
scas
cli
push
adc
fldcw
or
les
sti
fiadds
jae
lretw
scas
lcall
sub
in
push
cmpsb
loop
nop
aaa
pusha
daa
and
push
fsubrp
int
iret
mov
lea
movsb
push
std
movsl
add
outsb
pop
push
push
pop
push
leave
inc
mov
adc
pusha
inc
dec
jno
into
pop
fdivrs
es
xchg
sub
add
stos
in
rorl
icebp
outsb
jg
ds
xor
testl
sbb
push
stc
loop
inc
movsb
cwtl
cmp
mov
cmpsb
and
xchg
cmp
hlt
jg
lock
dec
xchg
dec
pop
xchg
push
outsb
push
jecxz
sbb
hlt
js
sbb
aaa
pop
in
cmpsl
xchg
xchg
ja
nop
pusha
mov
aam
pop
push
outsl
inc
into
enter
icebp
xchg
or
mov
cmp
scas
gs
in
bound
cmp
les
fisubrs
nop
call
dec
adc
jb
jno
cmp
mov
pop
sub
daa
out
push
xlat
aaa
push
push
mov
or
lahf
jbe
inc
nop
lret
cmpsb
movsb
cmp
addr16
pop
xlat
pop
sub
jle
aaa
jbe
pop
push
push
cmc
fists
mov
mov
gs
mov
das
mov
jo
xor
cmp
insl
out
dec
imul
aas
cld
and
xchg
xchg
adc
out
jg
or
xor
dec
cmp
rcr
push
mov
add
sub
fbld
daa
sbb
sahf
stc
xchg
mov
cmpsb
jb
sub
aas
rcl
mov
daa
cmp
call
mov
in
arpl
add
jl
lret
and
push
jbe
pusha
mov
mov
adcl
mov
inc
lea
sbb
jmp
daa
lahf
arpl
jecxz
xchg
iret
lahf
xor
add
inc
aas
retw
outsl
pop
aam
nop
jmp
jo
fs
and
mov
inc
lods
jle
mull
or
push
dec
pop
pop
mov
jbe
mov
out
lcall
add
add
push
rolb
xchg
sbb
notb
mov
lret
jns
pushw
mov
aas
outsb
iret
and
outsb
xchg
push
pop
jne
aas
into
pusha
ss
push
mov
push
add
mov
pop
in
push
out
pop
push
daa
mov
das
and
push
or
mov
daa
popf
inc
aaa
out
xchg
inc
xlat
xchg
ljmp
jo
jnp
cmp
nop
js
ffree
push
aad
into
call
xchg
fcompl
dec
jge
aam
push
cli
rcrl
xchg
cmc
fdivrs
in
xchg
fidivrs
push
daa
inc
nop
clc
and
cmp
mov
inc
fistpl
inc
pop
xchg
pop
mov
rcll
mov
addr16
mov
sbb
test
sbb
fisubs
inc
neg
sbb
sti
push
inc
in
pop
push
data16
daa
lods
mov
xchg
pop
pop
popf
arpl
cmp
pop
pop
repnz
xchg
jbe
mov
in
outsb
fists
int
lret
ja
ss
dec
loop
daa
pop
cmpsb
xchg
ja
lods
mov
aaa
mov
push
sbb
mov
dec
inc
inc
xor
orb
ret
cmpsb
cs
sub
and
gs
jle
mov
cmp
cmpsl
push
aad
and
outsl
iret
sar
pop
movsb
popa
pop
sbb
mov
data16
cmp
push
fsts
xchg
movb
pop
pop
ss
mov
add
xor
ljmp
push
inc
fs
gs
in
in
jle
fistps
pop
out
daa
mov
dec
gs
outsb
mov
pop
shrl
mov
aaa
mov
lods
lahf
push
mov
push
xlat
lahf
push
adc
sub
jg
mov
jns
pop
sub
out
sub
xchg
das
mov
mov
cmpsl
sub
or
rorl
add
test
jmp
aaa
das
cmpsl
jle
addb
cmp
cltd
cs
sbb
dec
adc
or
mov
pop
aaa
fists
or
adc
repz
es
into
xchg
and
jle
outsb
and
push
xchg
xor
aaa
add
daa
pop
bound
aas
fsubs
xchg
ds
lahf
gs
lock
pop
fnsave
pop
push
stc
add
xchg
out
aas
mov
push
in
and
dec
pop
pop
xor
mov
cmp
push
jg
xor
stos
and
jl
or
ss
fdivl
push
mov
shll
aad
into
xlat
repz
ss
call
xchg
addr16
outsl
sub
mov
call
pusha
pop
sahf
cmp
dec
inc
mov
test
je
int
push
pop
xchg
in
das
mov
cmpsl
gs
fs
outsl
int3
adc
icebp
lahf
scas
rcll
inc
aad
pop
iret
xchg
addr16
outsb
repnz
pop
pop
jl
pusha
imul
test
enter
dec
out
std
das
push
pop
in
mov
xchg
push
add
daa
inc
enter
fsubrs
xor
test
scas
ss
int
xlat
xor
push
cmp
pop
push
out
cli
cmpsb
pusha
es
and
jnp
subl
inc
mov
jns
add
jns
xchg
mov
inc
or
jbe
and
or
xchg
xlat
ljmp
adc
fimuls
data16
into
addr16
pop
out
lcall
xchg
xor
lea
ss
and
es
cmpsl
push
lahf
das
xchg
outsl
and
push
push
cmp
push
addr16
rcrb
filds
ret
test
sahf
lahf
add
xchg
sbb
pop
mov
push
scas
fbld
add
or
jne
scas
sub
and
xor
imul
xlat
push
sub
lods
xchg
pop
cmp
jno
pop
mov
xchg
vpacksswb
mov
outsl
lock
xchg
pop
mov
inc
xlat
ds
fstl
mov
mov
inc
outsb
mov
push
sbb
mov
mov
mov
daa
incb
inc
pop
push
movsb
mov
xchg
shll
add
stos
adc
xchg
dec
arpl
lock
mov
into
push
pop
bound
jo
cmpsb
iret
cmp
outsl
mov
cmp
inc
mov
divl
jbe
fidivl
mov
scas
addr16
pop
scas
mov
outsb
icebp
js
sub
dec
xchg
xchg
int
pop
inc
xchg
pop
jecxz
push
mov
daa
xchg
bound
mov
pop
std
add
mov
hlt
push
mov
sarb
push
push
xchg
xchg
movsb
mov
scas
out
cwtl
imull
sbb
sbb
insb
dec
out
cmpsl
scas
fildll
add
popf
mov
scas
call
push
jg
iret
addr16
lock
add
mov
cltd
dec
mov
xchg
daa
notb
push
xlat
jns
andl
cli
jbe
adc
cmp
mov
pop
pop
push
loop
pop
lahf
jbe
xor
pusha
aaa
loopne
loopne
xor
dec
imull
lret
mov
inc
mov
dec
les
fisubl
aaa
fimull
dec
test
insl
xchg
jo
rcll
sub
repnz
mov
loop
ja
ss
cmp
xchg
xchg
mov
or
call
sub
out
fidivrs
mov
lock
aas
mov
test
adc
into
out
scas
addr16
nop
subb
fcomp
jmp
pop
pusha
pop
lods
fimuls
mov
rcrl
dec
int
push
sub
xchg
sahf
jmp
out
lods
das
pop
dec
addr16
outsl
loope
xor
adc
inc
icebp
pop
dec
int
mov
ja
xchg
adc
and
push
dec
lock
outsb
or
into
aam
push
cmc
dec
hlt
jmp
cmp
add
push
stos
pop
lahf
loope
ja
inc
iret
xor
push
dec
jbe
pop
mov
fstpt
xor
out
and
sti
sbb
and
test
jo
iret
bound
mov
inc
gs
mov
mov
nop
push
jno
jbe
pop
cmp
aas
lcall
mov
jle
stos
push
adc
clc
cmp
mov
xchg
bound
insb
fsubrl
loopne
push
std
jbe
lods
xlat
nop
xchg
daa
outsb
push
jecxz
inc
push
push
mov
mov
loope
aas
ss
inc
pusha
fscale
outsb
iret
or
jmp
push
xor
adcl
mov
xlat
std
push
pop
xchg
loop
scas
pop
scas
xor
dec
pop
repz
ret
cmp
data16
xchg
jg
ja
inc
das
addr16
test
mov
xlat
mov
iret
mov
outsb
aas
push
xor
scas
dec
dec
pop
ja
mov
jge
aaa
push
jg
fdivrl
outsb
mov
cmp
inc
outsl
ret
scas
mov
and
cmp
repnz
add
pop
dec
ret
mov
ss
leave
ds
fucomip
mov
jb
sub
fdivrs
scas
push
adc
jecxz
addl
jle
mov
pusha
jbe
shlb
outsl
insb
add
pop
clc
data16
inc
push
into
jae
divb
daa
mov
in
mov
loopne
sahf
adc
hlt
pop
pop
push
gs
adc
add
jecxz
sbb
ss
inc
add
fdivrl
out
outsb
aaa
enter
xor
insl
jge
js
fiadds
push
daa
ss
add
loopne
adc
cmpsb
ficomps
ret
cmp
mov
rcll
dec
call
xchg
and
outsl
xor
mov
jno
ja
pop
push
jbe
pop
js
es
fldl
xchg
pop
pop
inc
loope
aas
xchg
aad
push
jmp
addr16
pop
mov
in
jle
scas
mov
pop
adc
divb
push
into
fsub
daa
mov
xlat
and
mov
dec
mov
int
mov
test
push
and
and
addr16
inc
popf
xchg
dec
ja
push
fs
push
das
into
out
cmpsb
pop
and
sarb
out
stos
pop
ret
pop
pop
aad
xchg
ss
push
dec
push
push
aaa
or
push
outsb
pop
addr16
and
scas
sub
push
inc
ds
dec
clc
fsubrl
jl
xlat
mov
cs
sbb
les
mov
daa
rcrl
fiadds
es
add
jno
aaa
lcall
add
mov
pop
cltd
outsb
pop
pop
nop
jae
clc
imul
dec
mov
daa
aaa
mov
pop
jg
lods
out
or
fwait
sarl
and
data16
inc
cmpsl
xchg
cltd
scas
push
sub
sti
test
push
mov
add
mov
and
lock
out
push
push
push
ja
sahf
xchg
movsl
mov
cwtl
and
sbbb
and
mov
xlat
mov
xchg
leave
sarb
int
xchg
or
rcrb
stc
push
sarl
xlat
pusha
pop
frstor
cmpsl
jo
adc
sub
adc
lahf
into
mov
lods
mov
ljmp
out
pop
fcomps
jb
mov
es
cwtl
and
xchg
sbb
out
dec
and
cmp
or
and
inc
aas
inc
mov
outsb
cmpsb
lret
inc
mov
and
pop
mov
stos
push
push
leave
cmp
lahf
es
inc
xor
push
sub
lcall
mov
dec
scas
fiadds
push
inc
mov
aas
mov
pop
mov
ja
or
mov
sahf
mov
out
xchg
imul
jge
movsl
cmp
push
push
test
daa
cmpsl
lahf
xchg
inc
xchg
sub
xor
sub
pop
jns
dec
push
ljmp
push
and
adc
imul
adc
fistl
pop
xchg
cmpsb
sub
cld
add
dec
cmpsb
cmp
daa
insb
jne
int3
push
jnp
testb
push
ja
rclb
xchg
nop
cs
mov
outsb
xchg
cmpsb
push
aas
pop
add
repnz
outsl
aaa
pop
inc
mov
js
cmpsl
add
mov
aaa
ja
pop
nop
mov
xchg
mov
inc
jbe
clc
pop
jg
lods
shll
bound
push
cmpsl
aaa
or
sub
fucom
ss
stos
push
fadds
pop
lret
xor
das
jns
das
icebp
into
lods
addr16
dec
fstpt
cs
lock
ss
iret
mov
jns
xchg
mov
mov
cmp
insl
clc
mov
or
das
xchg
jns
inc
xchg
mov
mov
pusha
add
jne
pop
mov
dec
cmc
jbe
adc
dec
xor
cmpsb
sub
aad
jbe
stos
pusha
in
sub
addr16
inc
aas
dec
push
push
mov
pop
mov
pop
repnz
or
test
or
cmpsb
push
jle
jmp
add
test
push
pop
pusha
xchg
inc
stc
outsb
mov
sub
fwait
lcall
xor
mov
ds
mov
inc
call
xchg
and
push
pop
mov
adc
es
xor
dec
scas
pop
mov
mov
test
in
jns
aas
ljmp
jo
dec
pop
xchg
mov
fiadds
inc
xor
add
cs
jbe
add
mul
xchg
int3
ret
xchg
lret
jne
ja
daa
push
cli
jnp
pop
add
je
sub
ss
xchg
push
ja
movsb
out
loope
and
inc
pop
adc
add
into
push
mov
xchg
mov
loop
and
movb
scas
adc
cmpsb
mov
je
sub
push
stos
movsl
ret
das
ds
pushf
fiadds
out
pop
adc
push
xchg
xor
ljmp
add
jg
xlat
pop
mov
pop
ret
icebp
popf
mov
scas
xor
jbe
test
jns
push
sahf
daa
lret
addr16
inc
out
cld
lds
sbb
pop
daa
cmpsl
cmp
leave
or
cmp
lods
into
popf
loope
mov
dec
mov
jbe
sti
xorb
iret
xchg
sub
je
stc
push
inc
sub
outsl
push
cmp
jbe
sti
jo
jmp
inc
out
sub
xchg
cmpsb
into
icebp
add
aas
cmp
jg
cmp
pop
jb
inc
pop
mov
xchg
movb
cltd
push
push
cmp
lret
fbld
aaa
xlat
lahf
out
jo
daa
iret
fs
shrb
jb
out
out
cmp
xor
xchg
cmp
ljmp
mov
pushf
dec
xchg
cmpsl
and
in
dec
sub
pusha
push
leave
push
ja
pop
inc
jecxz,pt
jbe
outsb
cld
or
shll
leave
mov
lret
mov
flds
push
cli
into
repnz
into
push
fbld
xor
jmp
mov
popf
arpl
out
xchg
xlat
ja
clc
enter
mov
nop
loop
pusha
push
cs
and
xor
jle
xchg
fisubrs
idiv
stc
lahf
push
iret
ds
fdivl
loopne
fisttps
add
adc
inc
mov
adc
xchg
pop
ds
out
ja
es
outsb
pop
scas
pop
bound
lcall
outsb
out
cmp
ds
push
jmp
mov
shlb
call
icebp
rcll
sub
iret
fnstcw
sub
cs
push
or
lahf
call
daa
in
int3
cld
and
xor
push
cmp
ss
xchg
clc
push
mov
rcll
cmp
xchg
push
cmp
into
xchg
data16
outsb
pushf
push
not
ss
popa
test
scas
adc
and
fs
cmp
jbe
add
push
incl
ss
xor
pop
pop
adc
mov
daa
insb
rcll
jbe
dec
xchg
push
sub
shr
test
xlat
push
xor
movl
lods
movb
add
iret
sub
dec
pop
cmpsl
pushl
pop
fcmovnbe
xchg
mov
fsubrp
in
cmpsb
pop
popw
cmpsl
mov
cmpsl
adc
mov
pop
push
jb
sarl
int
jg
adc
pop
dec
cmpsl
jle
daa
fnsave
iret
aam
das
test
sar
sti
call
scas
pop
sarl
xchg
repnz
lret
scas
ss
cs
call
out
xchg
pop
push
inc
gs
enter
or
mov
cwtl
fistps
das
lret
fildll
lods
push
pusha
je
sahf
int
fidivs
inc
outsl
and
or
push
xor
aam
lods
int
je
inc
sub
xor
movsl
es
ret
cs
enter
cmp
mov
repnz
mov
or
pop
push
mov
aas
xor
les
enter
add
and
es
enter
mov
fwait
pusha
out
dec
sahf
pop
cmp
es
sbb
xchg
pop
cmp
bound
daa
adc
data16
outsb
call
sub
push
sahf
mov
les
fs
mov
inc
cmpsl
and
leave
aaa
cmp
int
fimuls
addr16
in
cmpsb
xchg
inc
nop
push
mov
outsl
mov
sahf
aad
push
sub
out
jbe
sub
mov
pusha
mov
lea
mov
dec
adc
mov
mov
stc
and
popl
andb
adc
outsl
pop
and
js
daa
sahf
ficompl
xchg
inc
fs
loope
into
cs
cmpsb
outsb
pop
repz
mov
lds
out
inc
mov
mov
enter
fsts
lahf
fbstp
and
and
dec
daa
scas
mov
lods
mov
push
cmpsl
mov
pop
push
aas
es
es
dec
jnp
leave
iret
mov
jle
test
jg
push
mov
xor
xchg
ja
shrl
cmp
testl
cmp
xlat
mov
add
sahf
cs
outsb
in
push
ja
test
adc
pop
mov
add
cmp
xchg
adc
lock
push
inc
clc
pop
lods
jmp
and
fnstcw
ja
xor
mov
in
jg
addr16
mov
mov
jns
aas
nop
fists
pop
fs
dec
daa
pop
inc
pop
mov
jcxz
pop
ss
cwtl
nop
popf
inc
xor
int3
mov
pop
add
out
push
lahf
out
push
push
add
xchg
imulb
pop
in
or
pop
xchg
icebp
ss
andb
xor
xchg
scas
outsl
sahf
pop
lds
aad
aaa
divl
loope
pusha
jo
or
xor
in
mov
mov
jp
and
xchg
pop
cmp
or
lods
jle
mov
pop
xchg
xchg
pop
adc
cli
test
mov
xor
mov
aaa
xchg
push
dec
sarl
jl
mov
fidivrl
mov
divb
mov
adc
es
mov
iret
stc
rcll
outsb
xchg
ds
inc
fldcw
pop
pop
lahf
lahf
das
lods
iret
mov
cltd
pop
cmp
ss
xor
sub
aad
cmpsb
out
push
xchg
aaa
add
jbe
inc
jmp
cs
filds
xchg
sbb
scas
jnp
xor
loop
outsb
scas
pop
nop
std
addr16
push
jns
dec
push
daa
ljmp
xchg
pop
inc
fsubrp
fistps
je
pop
inc
das
in
sbb
lahf
test
add
pop
sub
dec
aaa
push
scas
sub
inc
ds
popf
popf
hlt
popf
or
fistl
cmpsb
fs
xor
dec
cmp
add
aaa
pop
mov
mov
push
ds
and
scas
and
dec
std
insl
add
inc
lahf
int
mov
jns
outsl
in
xchg
testl
repz
repnz
inc
cmpsl
pop
pushf
xchg
in
lea
out
addr16
xlat
flds
xchg
push
pusha
iret
or
and
pop
mov
cltd
xlat
scas
adc
ljmp
daa
data16
loop
push
pop
lds
in
xchg
adc
incl
cmp
sbb
daa
push
push
mov
push
or
add
out
aas
inc
pop
aaa
jbe
dec
loopne
out
outsl
cltd
push
scas
jle
mov
inc
fidivrs
xchg
or
daa
test
outsb
mov
outsb
nop
mov
loopne
dec
jmp
orb
rclb
es
push
sub
lcall
aaa
cmp
stos
in
fists
scas
hlt
xlat
mov
scas
mov
cmp
clc
pop
sbb
lret
cmpsb
gs
cld
fnstenv
inc
int3
fiadds
pop
ja
mov
mov
mov
fldcw
dec
jo
movsl
stos
cmp
push
aas
dec
inc
xor
cmp
sub
cmp
divl
pusha
push
push
loop
cmpsb
xchg
inc
mov
xor
std
rcll
pop
lea
xor
jecxz
inc
fidivs
push
inc
sahf
out
push
ds
out
outsb
sub
ljmp
pop
mov
icebp
xchg
insl
cmpsb
pop
jb
sub
adc
fiadds
add
push
and
scas
and
jg
xchg
jl
out
fsubs
pop
lea
pop
aad
ds
mov
or
pop
iret
push
dec
pop
pop
scas
adc
aas
lods
mov
add
jo
and
sub
jne
cmp
rcrl
jecxz,pt
rorl
aas
cltd
inc
test
adc
push
mov
js
ja
and
scas
rcl
outsb
je
adcl
repz
ja
dec
inc
adc
pusha
iret
icebp
push
inc
push
mov
push
popa
jo
fiadds
lahf
dec
pop
daa
mov
pop
orb
cmpsl
cmp
push
fcmovbe
pop
mov
jo
into
cmp
xchg
push
fildl
outsb
imul
je
fld
xlat
es
frstor
fidivrs
sti
mov
inc
ffreep
push
xor
adcl
push
sub
cmp
enter
push
cmpsb
jg
lcall
test
daa
shl
mov
pop
ja
dec
add
int
cmpsb
adc
imul
pop
pop
adc
or
cmpsl
fists
shl
inc
outsl
jbe
pop
mov
cli
xchg
add
imul
and
ss
mov
icebp
push
das
push
outsl
in
mov
push
fsubp
scas
not
pop
xchg
cmpsb
fsubs
and
ss
jg
inc
insl
xorl
addr16
fcoms
pusha
lret
sarb
pop
mov
push
pop
jle
leave
inc
pop
pop
pop
xchg
loop
mov
es
sahf
mov
ficompl
dec
ficompl
fisubl
imul
xlat
cmpsl
pop
cmpsl
scas
mov
out
pop
dec
sahf
cmp
scas
inc
xchg
testb
fildll
pop
rorl
cld
jecxz
daa
cmpsb
cmpsl
fimuls
jg
jo
xchg
push
fimuls
xor
sub
data16
in
addb
in
out
mov
inc
pop
gs
xor
data16
mov
dec
test
push
mov
pusha
xchg
gs
sahf
stc
loop
into
ss
pop
cs
cli
pop
sbb
imul
ret
pop
inc
fadd
dec
mov
cmp
jg
mov
cmp
cld
rcrl
jg
divb
std
pop
push
es
loopne
movsl
jge
fnstenv
xor
and
icebp
aaa
cmpsb
scas
in
jnp
push
addr16
xchg
adc
inc
mov
test
mov
cmpsl
and
mov
ss
jecxz
push
inc
dec
aaa
adc
divb
data16
cmp
leave
sbb
fsubrp
out
ss
insl
xchg
inc
mov
dec
adc
es
xchg
cmpsl
jo
xor
fdivrs
nop
shll
pop
cmp
aam
rcrb
and
add
or
cmp
sub
loope
jo
inc
es
fisubs
dec
cmpsl
pop
push
into
mov
xchg
lahf
jb
and
call
test
mov
xlat
aaa
mov
pcmpeqd
pop
dec
scas
push
mov
fidivs
mov
cmp
jo
jg
mov
cmp
add
shrb
ss
pusha
test
add
mov
push
cmpsl
cmp
inc
test
and
outsb
int
ret
int
add
popf
data16
ds
cld
in
mov
out
movsb
xor
repnz
xor
mov
ss
jbe
in
int
into
pop
inc
stos
pop
aam
xor
sahf
fmulp
mov
mov
in
inc
add
scas
cmp
xor
mov
push
call
mov
or
add
pop
add
fldl
lahf
pop
mov
fisttpll
fnstsw
test
insl
mov
daa
aaa
aas
mov
in
outsb
mov
push
addr16
jg
inc
aaa
jmp
jne
subl
loopne
mov
mov
cltd
movsl
shll
mov
pop
xchg
stc
and
mov
xchg
nop
xchg
inc
and
push
repz
cmp
and
xchg
pop
cmpsl
mov
and
add
lahf
xchg
lock
jbe
mov
lcall
xchg
std
and
ss
loop
jo
xor
pop
inc
mov
mov
mov
fs
out
inc
push
out
push
cs
mov
outsb
sub
pop
lds
xchg
push
ffreep
cltd
ficoml
push
ja
nop
inc
xlat
xchg
xor
xchg
pop
ficoms
xlat
xchg
jo
cmp
daa
adc
adc
xchg
movsb
or
ds
andb
cmp
or
sbb
ja
pop
inc
dec
fidivrl
imulb
pop
ds
xor
pop
ficoml
push
xchg
out
dec
push
xor
mov
imul
xchg
dec
or
push
das
aas
ret
fisubrs
das
add
sub
mov
fisubs
js
mov
mov
xchg
ficoml
pop
mov
mov
fdivrl
out
inc
jg
jle
pusha
xor
xor
icebp
push
out
xor
outsl
push
aas
outsl
and
mov
mov
mov
into
subb
lods
sahf
or
add
aaa
nop
fucomp
nop
addr16
xchg
das
data16
xor
dec
dec
mov
mov
jle
mov
aas
push
mov
loopne
mov
mov
shr
lea
ljmp
mov
and
xlat
sbb
mov
jno
mov
mov
das
sarl
imulb
call
out
roll
add
adc
xlat
mov
data16
stc
ja
inc
xchg
enter
add
jb
mov
xor
pop
cs
inc
jne
xlat
push
sub
lock
push
cmp
lret
xchg
insb
les
stc
push
js
push
inc
leave
push
mov
in
and
pop
je
fs
and
sub
push
jmp
aam
xchg
in
jns
push
push
mov
ja
mov
xchg
xchg
hlt
dec
int
cs
daa
push
xchg
push
pop
daa
pop
and
in
inc
cmc
cmc
xor
jns
lahf
sbb
xchg
iret
jecxz
and
pop
mov
cltd
rcrb
mov
rcll
xchg
inc
or
es
rolb
mov
std
es
shll
xchg
mov
pop
mov
push
sbb
sbb
and
loop
fiadds
loope
inc
mov
lahf
leave
push
pop
xchg
xor
mov
fsts
sub
and
xchg
test
aaa
mov
sub
push
outsl
dec
and
xor
ss
cmc
vpmaxub
push
stos
dec
lea
test
das
fsts
xor
fbld
pop
xor
dec
pop
cmpsl
and
mov
repnz
mov
xchg
pusha
out
sub
dec
aas
pop
pop
imul
dec
inc
jo
sbb
ljmp
inc
pop
sarl
cmpsl
pop
sbb
lahf
or
cmpsb
into
xchg
push
outsb
and
outsl
xchg
mov
iret
fbstp
mov
testb
mov
fwait
pop
fmulp
mov
ret
jno
xchg
dec
mov
pop
cmpsl
pop
mov
cli
daa
add
pop
sub
sti
iret
mov
mov
fnstsw
cs
dec
es
es
mov
ja
cli
gs
enter
mov
cmpsl
mov
addr16
iret
xlat
and
adc
push
inc
incb
sahf
fs
pop
gs
and
push
dec
jns
fiadds
pop
addl
mov
mov
idivl
mov
out
pop
aas
sub
pop
ficompl
loopne
mov
cmpsb
push
xor
mov
or
mov
sbb
push
sbb
out
ds
xor
into
mov
mov
dec
sbb
call
push
push
mov
aaa
pop
mov
outsb
cmp
adc
inc
pop
arpl
mov
loop
pop
daa
scas
inc
xchg
and
outsl
inc
inc
xor
call
test
sub
test
mov
das
lds
pop
push
loopne
push
lret
dec
mov
ret
cs
push
fwait
nop
pop
enter
aad
ja
jecxz
pop
lahf
push
inc
jns
sub
mov
daa
xchg
sahf
cmp
out
jo
sbb
rorb
fdivrl
sahf
sub
cmpsl
scas
xchg
into
xlat
push
pop
ja
out
push
lahf
in
inc
inc
popf
push
into
jne
xchg
ja
pop
loop
push
push
ficoms
push
loope
cmpsl
outsb
jo
mov
pop
inc
gs
and
dec
or
hlt
movl
cmp
xchg
filds
lock
jle
in
push
mov
cmpsb
mov
enter
inc
outsb
xchg
push
dec
fimuls
xchg
mov
shl
shl
into
jne
insb
ss
es
sbb
pop
leave
adc
cmpsl
inc
adc
push
repz
scas
pop
outsl
lcall
push
js
mov
faddp
mov
in
inc
in
pusha
pop
pop
push
pop
fldcw
addr16
fidivrs
call
xlat
jb
push
ja
inc
ss
fnsave
lock
nop
push
stc
cmp
shll
xlat
mov
call
mov
addr16
pop
lret
push
push
aas
js
push
lret
rclb
jmp
dec
xlat
cmp
lods
lods
inc
pop
cs
scas
aam
in
into
cmpsl
nop
pop
ds
stos
dec
notl
push
lods
ret
lds
xchg
fimuls
loop
inc
dec
mov
scas
mov
push
mov
enter
push
cmp
rcrl
xchg
pop
sub
ret
test
jg
inc
sub
aas
lret
call
shlb
mov
xchg
aad
cmpsl
call
stos
cmpsb
aaa
insl
or
jle
jo
and
loopne
es
daa
push
mov
mov
or
pop
cmpsb
aas
lods
aam
xchg
fists
data16
mov
and
cli
mov
dec
dec
in
add
and
scas
ds
add
cmpsl
in
push
push
outsl
pop
add
xor
in
jle
sub
das
mov
aas
lds
adc
inc
ficomps
mov
cmovle
add
insl
pop
daa
xchg
add
dec
mov
mov
adc
scas
movb
aaa
and
push
fs
sub
out
nop
push
mov
cmp
jae
xchg
and
jg
inc
negl
lahf
lods
std
addr16
xor
scas
rcll
test
cmpsl
jb
pop
push
mov
xchg
mov
and
mov
xchg
mov
jo
cmpsb
and
xchg
pop
and
cmpsl
cs
aaa
jo
vunpcklps
push
fldenv
in
xchg
in
mov
rclw
stc
movl
pop
inc
fnsave
xlat
xor
xchg
pop
cs
ja
enter
scas
out
loope
outsb
xor
mov
jle
and
and
mov
loopne
repnz
call
sahf
jne
dec
hlt
sbb
sbb
and
mov
in
lahf
xlat
or
scas
and
or
inc
xchg
jno
pop
iret
addr16
repnz
aas
mov
out
xchg
outsl
pop
dec
das
nop
push
cmp
pop
or
xlat
mov
dec
test
mov
xchg
sbb
inc
jbe
loope
jo
inc
inc
cbtw
fldl
loop
push
nop
cmp
mov
dec
subl
jl
fucomi
cmpsb
push
shll
imul
and
pop
cmpsl
xchg
mov
call
fidivl
jbe
and
insl
mov
jbe
xchg
mov
push
rclb
inc
lret
pop
clc
test
mov
jecxz
popf
cmp
imull
push
call
sub
sub
faddp
fwait
stc
mov
xchg
cli
addr16
lds
mov
ret
fildl
inc
js
nop
adc
pop
aas
mov
in
daa
and
mov
ds
inc
push
lahf
inc
nop
rclb
cmp
daa
mov
jo
stc
or
into
or
dec
pop
fists
mov
pop
cmpsb
out
inc
ret
push
push
sub
ja
mov
dec
inc
cwtl
test
push
pop
inc
mov
pushw
sub
fs
jo
xlat
pop
ljmp
mov
nop
inc
xor
jo
nop
cs
push
daa
pop
mov
dec
push
daa
push
xchg
enter
push
ficoms
add
and
mov
out
push
cmp
mov
pop
fildll
inc
push
shlb
sub
jmp
jo
mov
ss
iret
in
cmpsb
xchg
and
xor
cli
sub
cs
in
sbb
fbld
pop
cmp
add
sub
inc
pop
cmp
stc
ret
aas
lahf
mov
test
xor
hlt
inc
outsl
dec
jge
movsb
rorl
imul
mov
loopne
js
icebp
fiaddl
xadd
fistl
iret
outsb
pushl
push
sar
lahf
jns
dec
inc
add
pop
ja
inc
xchg
scas
gs
mov
inc
jg
daa
and
out
rorb
shrb
jns
inc
cld
js
test
mov
sub
jne
fisubrs
fs
lahf
push
pusha
push
xlat
and
lds
scas
mov
and
pop
pop
icebp
cltd
mov
mov
cltd
add
add
into
jbe
pop
sahf
jo
in
daa
jp
data16
pop
and
add
xchg
inc
push
sbb
cmp
cli
fists
xchg
mov
daa
mov
and
jbe
sub
in
fldl
xchg
jne
mov
loop
xchg
xlat
not
mov
bound
outsb
inc
loopne
adc
insl
xchg
ds
fmulp
mov
pop
jmp
je
leave
or
or
and
and
xor
scas
dec
mov
ret
lods
frstor
xchg
sti
ds
daa
ja
aas
mov
xor
mov
fbstp
into
fiaddl
add
dec
aad
inc
pushw
xor
and
roll
xchg
daa
and
outsl
pushf
movsl
push
scas
xor
lock
pusha
push
repnz
icebp
push
xor
xor
adc
into
and
cmpsb
dec
and
jns
sub
xchg
ljmp
mov
in
sbbl
adc
xchg
xchg
push
jle
lods
mov
sahf
pop
jmp
mov
or
xchg
in
cmpsb
xchg
outsb
divl
sti
push
jg
aam
and
or
or
repz
cmpsb
nop
cmpsl
daa
adc
push
and
push
pop
aaa
mov
xchg
push
sbb
das
or
inc
push
outsl
test
jbe
ljmp
ds
mov
sbb
jle
aad
mov
adc
out
xor
push
ror
lds
aad
fidivrs
addr16
xor
testl
lods
test
rcll
push
cmp
pop
daa
add
and
and
adc
jo
lahf
daa
adc
push
pusha
xor
mov
imul
push
lods
in
es
dec
push
mov
fiadds
in
inc
pop
jae,pn
ja
inc
out
cmp
scas
push
nop
jbe
cmpsl
ss
stos
mov
dec
push
inc
dec
sub
xchg
inc
addr16
pop
in
ja
test
nop
in
jnp
mov
rcll
lds
push
push
cmp
dec
lret
int3
sbb
push
mov
pop
mov
pop
mov
mov
xor
dec
fildll
sub
lahf
es
js
jo
adc
lds
into
das
lea
int3
imull
cs
fadd
loopne
xorl
dec
outsl
mov
incb
xchg
xor
push
jg
xchg
fisttpll
pop
pop
jmp
stos
or
negb
adc
mov
xchg
sub
testl
scas
loopne
jae
mov
xchg
jne
enter
xor
push
lret
xchg
xchg
mov
jbe
out
outsb
push
sub
mov
setle
testb
mov
adc
cwtl
sarl
cmp
fnstenv
outsl
pop
cmp
mov
mov
shrl
jg
xchg
adc
xlat
mov
iret
xor
movsb
push
stc
inc
jbe
sub
sub
pop
pop
xor
add
pop
mov
push
mov
sub
int
iret
lock
mov
scas
in
and
fildl
dec
inc
aaa
cmp
pop
xchg
sub
jns
pop
mov
rcrl
cmp
aas
mov
cmp
dec
push
pop
or
push
ds
lret
xchg
push
ja
cmp
cmp
nop
pusha
les
lret
mov
aas
push
pop
mov
lret
icebp
pop
xchg
inc
and
cmp
jle
in
dec
cmp
ret
aad
leave
ss
adc
inc
or
mov
loop
ds
sub
mov
push
inc
pop
cmc
lods
jns
cmpsl
pusha
aas
dec
rcll
lds
insb
xlat
dec
call
inc
push
push
iret
xchg
fsubrs
add
incb
fisubrs
repz
jp
cld
daa
das
ja
push
sahf
cmp
addr16
outsl
out
inc
mov
pop
cmpsl
data16
pusha
scas
movb
pop
mov
pop
das
fimuls
push
into
push
nop
mov
pop
dec
pop
es
and
and
pop
std
out
into
push
jns
jg
cmp
cmp
iret
int3
dec
outsl
dec
arpl
push
fistpll
push
mov
in
pop
ss
fmul
mov
adc
fisubrs
jp
inc
arpl
mov
pop
xchg
push
push
and
aam
push
pop
hlt
inc
shrl
pop
dec
adcl
imul
xchg
or
fs
inc
mov
dec
jle
sti
cmp
mov
pop
mov
pop
fs
icebp
jo
xlat
and
mov
cmp
pop
cld
fnop
pop
aaa
iret
call
scas
push
mov
out
xor
push
dec
iret
and
inc
jle
shr
add
test
ja
mov
cli
aas
loopne
push
fs
xor
fnstenv
push
push
ficompl
and
nop
mov
push
mov
aas
jo
xlat
lods
jbe
pop
cmp
cmpsl
fdivrl
js
ds
enter
pop
stos
mov
dec
scas
out
mov
mov
mov
inc
mov
mov
cmpsl
in
jno
aaa
ja
hlt
pushl
inc
push
iret
push
pusha
ja
push
xchg
pop
outsl
pop
jbe
inc
fidivs
xchg
cmp
call
mov
loope
pusha
adc
int
push
pop
inc
inc
fldenv
xchg
ljmp
fldenv
mov
rolb
xchg
xor
jmp
lret
jl
fisubl
lahf
xchg
sub
les
mov
dec
getsec
ret
dec
xor
push
mov
xchg
loop
push
mov
dec
es
or
push
jecxz
mov
ja
daa
dec
cmpsl
push
fdivp
pop
push
sub
pop
cmpsb
aaa
xchg
lahf
mov
lret
push
xchg
es
leave
push
addr16
rorl
into
sub
mov
mov
nop
int
scas
ss
fildll
xlat
xchg
xlat
pop
loop
xchg
popl
dec
pop
add
push
xchg
iret
out
add
fadds
into
shlb
in
scas
dec
push
das
subb
pop
mov
pop
aam
fistpll
ret
gs
int
mov
jns
dec
mov
and
ljmp
daa
sub
icebp
pusha
inc
jo
or
push
xor
xchg
aaa
xor
pop
lock
data16
jg,pt
push
xchg
and
cs
push
push
fprem1
xor
ds
mov
daa
mov
mov
fwait
scas
movsl
inc
jl
fldcw
das
gs
pop
mov
push
mov
sbb
lahf
nop
fs
add
xchg
mov
xor
ss
jbe
out
test
inc
push
mov
arpl
push
cmp
scas
addr16
pop
lods
inc
jmp
push
push
jl
xchg
jbe
insb
loope
cs
push
nop
lods
or
xchg
popf
loope
insl
and
mov
aam
cmp
das
push
cmp
or
sub
movsl
xchg
sarb
or
bound
imul
push
push
cmp
pop
xlat
pop
addr16
push
sti
mov
das
ja
notb
addr16
iret
push
data16
mov
ljmp
repnz
gs
and
insl
jae
aaa
dec
xchg
icebp
jl
mov
add
push
ja
jle
inc
repz
and
cltd
nop
scas
cmp
lcall
sti
and
sbb
pop
or
ficoms
xlat
ficomps
fiadds
ljmp
jg
inc
lock
push
insl
adcl
xchg
je
mov
cs
inc
mov
fdivr
mov
test
sar
push
lcall
daa
push
testb
push
jns
nop
lcall
pusha
push
dec
aas
mov
sub
jle
cmp
pop
dec
and
cmpsb
adcb
mov
sub
cmp
pop
xlat
dec
mov
pop
add
leave
pop
add
push
pop
push
pushf
pop
pop
cmc
inc
xor
int3
addr16
fidivrs
jae
xchg
cmp
aaa
ds
iret
dec
mov
add
push
mov
pop
mov
call
add
enter
mov
sbbb
sub
pop
notb
les
pushf
aaa
sbb
adc
fildll
push
scas
aad
test
int3
cmpsl
fsubrl
cmp
lahf
inc
xlat
cmp
fwait
adc
daa
pop
inc
ja
ds
mov
xchg
aas
mov
subb
sub
cmpsl
cmp
fcoml
cmp
outsl
xchg
push
ss
xor
nop
xor
repz
enter
test
sahf
cmc
js
aam
add
fbld
mov
sbb
dec
inc
and
cmp
mov
adc
dec
add
pop
jg
shlb
mov
aam
xchg
sbb
pop
mov
out
es
jge
inc
jge
les
push
xor
pop
or
sbb
je
mov
xor
fwait
cmp
cmc
fwait
popl
jecxz
sbb
idivl
mov
add
outsl
push
in
or
mov
xchg
or
jg
ret
popl
xor
fwait
cld
aad
jbe
add
xchg
fmuls
add
xchg
les
ss
fistps
cs
jle
aam
mov
adc
movsl
jle
lcall
or
mov
hlt
adc
pop
xchg
dec
lahf
add
dec
mov
mov
push
pop
fs
les
das
pushf
je
sbb
jl
dec
xchg
cli
mov
xor
in
testl
test
xchg
dec
pushf
les
mov
or
cs
mov
sbbb
add
sub
jp
ja
push
orb
inc
and
aas
movsb
lods
ss
mov
lcall
dec
iret
push
xor
adc
mov
lahf
jmp
in
out
cmp
pop
pusha
es
ss
es
pop
dec
or
jbe
pop
loop
inc
xchg
daa
lahf
push
mov
sub
jae
aaa
iret
xchg
inc
sbb
pusha
sbbl
nop
xor
push
push
fs
xchg
loop
pop
sub
mov
addr16
ss
pop
pushf
nop
fcompl
dec
jg
scas
jle
push
adc
pop
dec
jo
ja
fidivs
mov
inc
jbe
jb
cmpsl
push
xor
stc
addr16
jle
push
popa
push
pop
into
scas
or
jae
xor
ss
and
pop
in
mov
repnz
jmp
cmpsl
jmp
ss
les
aas
push
testl
mov
sbb
cmp
inc
pop
xor
fnstsw
dec
pusha
mov
sahf
sub
xchg
mov
xchg
dec
adc
dec
clc
sub
sti
rcll
fiadds
inc
inc
pop
dec
inc
pop
xchg
push
xor
cmp
ret
into
sbb
push
pop
dec
dec
dec
push
push
and
ficomps
xchg
filds
push
outsb
push
push
dec
pop
notb
mov
add
mov
mov
ja
xor
push
pop
addr16
lods
xchg
push
loopne
ds
inc
sahf
inc
inc
arpl
jl,pt
mov
push
push
and
or
outsl
sbb
adc
inc
xchg
jle
rorb
ret
outsl
mov
jmp
lods
push
gs
aad
push
jl
inc
jl
inc
mov
xchg
addr16
dec
cld
jg
enter
cmp
or
and
leave
mov
lea
mov
insl
test
mov
inc
ja
loope
cmc
adc
mov
je
inc
pop
push
cmc
adc
pop
das
xor
insb
adc
jecxz
jbe
cmp
inc
push
aam
daa
sub
cld
mov
sub
pop
movsb
inc
xor
add
push
sub
jl
gs
or
pop
inc
dec
xchg
inc
mov
sbb
add
xchg
xchg
jne
outsb
outsl
xor
andb
outsl
push
pop
aaa
icebp
cmpsl
pop
inc
mov
and
ss
adc
nop
lods
mov
leave
push
dec
sub
xor
mov
lcall
or
aas
cwtl
mov
ss
sbb
mov
cltd
shrb
xlat
add
mov
inc
negb
aas
inc
add
loop
xchg
ja
mov
and
es
aaa
fisubs
ss
pusha
cmpsl
insl
add
push
pop
xchg
das
and
sub
es
mulb
int
push
pusha
sbb
stos
or
mov
and
push
add
mov
xchg
push
sahf
negb
inc
dec
call
push
xchg
add
mov
dec
push
mov
adc
das
pop
adc
inc
mov
jge
push
loopne
iret
lret
mov
xchg
push
stos
lret
xchg
mov
mov
add
pusha
pop
push
movsb
ret
push
stc
es
fistl
push
dec
pop
aas
fbld
addr16
arpl
cmc
decb
ja
sti
call
xlat
sub
push
nop
inc
push
xchg
jae
and
popf
mov
mov
aam
cmp
inc
lea
and
movsb
popf
das
xchg
mov
sub
add
scas
push
add
mov
jno
ss
fstpt
jmp
addr16
and
test
faddl
jbe
fldenv
mov
jae
pop
bound
fs
scas
jg
sub
pop
data16
mov
dec
lahf
in
aad
mov
cmp
and
pop
inc
scas
inc
popf
sub
lods
or
dec
shrl
jbe
inc
mov
enter
sbbb
xchg
lahf
xchg
jno
ja
add
arpl
enter
clc
push
push
sarb
scas
mov
outsb
mov
pop
push
sbb
inc
fisubs
ds
add
pop
push
jo
jb
xchg
inc
pop
std
addr16
jle
loop
jbe
inc
cmpsl
adc
in
lds
int
scas
call
cmp
inc
dec
mov
push
test
bound
flds
xor
out
inc
push
clc
mov
push
xchg
loop
inc
cs
mov
push
das
pop
fptan
sahf
jo
mov
in
push
into
dec
cmpsl
daa
lret
sub
lahf
push
xor
fs
xchg
xchg
cmp
push
ss
stos
cmpsl
lahf
mov
xor
test
dec
scas
inc
movsb
and
or
daa
ss
dec
push
cmpsl
dec
xchg
enter
ficoms
add
pop
std
xor
dec
cmp
or
and
aas
cmpsl
mov
dec
repz
test
movsb
push
inc
pop
push
scas
sub
push
pusha
movb
scas
iret
pop
mov
mov
jbe
jmp
mov
xchg
in
hlt
pop
dec
repnz
test
adc
pop
xchg
jno
inc
lahf
xlat
pop
push
push
jle
ds
dec
sbb
push
push
jle
leave
pop
xchg
xor
mov
jmp
scas
mov
ja
xor
add
loop
inc
inc
jbe
or
push
inc
mov
add
nop
neg
sbb
aas
daa
aaa
jo
inc
fidivl
iret
sub
call
inc
subb
test
loop
outsl
pop
outsb
mov
addr16
pop
es
lea
push
scas
cmpsb
daa
xchg
sub
lret
stc
sahf
adc
fidivs
pop
inc
add
mov
cmp
scas
jl
leave
xor
fcompl
pop
in
out
and
roll
xlat
iret
nop
daa
ds
mov
sub
into
ja
sbb
mov
out
mov
arpl
sahf
scas
xlat
into
rcrb
mov
decl
lock
inc
jns
lock
xchg
int
mov
iret
fistpll
enter
add
xchg
mov
add
mov
jecxz
sahf
pop
xchg
data16
ds
jno
xchg
mov
xchg
xchg
mov
and
pop
outsb
movsb
dec
mov
dec
xlat
jns
cs
outsl
push
dec
stos
sbb
ja
jp
test
outsb
inc
cmp
push
mov
cmpsl
xchg
dec
xchg
es
push
mov
divl
cmpsb
fldt
and
subb
mov
xchg
sub
in
daa
jbe
sahf
popf
and
xor
lahf
mov
scas
dec
movq
pop
fcomip
repnz
aas
test
inc
xor
pop
ror
dec
xor
pop
pop
cmpsb
dec
push
fistps
push
fwait
arpl
jne
imul
and
daa
daa
fisttpl
outsb
mov
sub
inc
es
outsl
mov
dec
stc
jo
push
xchg
jle
jns
outsb
cmc
jg
movl
sub
push
pop
dec
stos
mov
in
pop
xchg
sarl
dec
in
pusha
aas
and
ds
dec
cmp
jne
es
push
push
outsl
stos
pop
pusha
negb
lret
sub
aam
nop
lret
push
data16
pop
xchg
fldt
push
xlat
lahf
stos
cs
fstpt
cmp
dec
mov
push
insb
push
xchg
and
add
stos
mov
xchg
iret
fcmovb
cmpsl
xchg
mov
pop
sahf
sub
mov
mov
dec
jns
and
jo
pusha
es
fs
add
and
cs
xchg
filds
mov
fmulp
sub
add
ds
jbe
popa
inc
pop
dec
nop
cmp
scas
xchg
leave
pop
fbld
in
iret
jl
cs
push
inc
xchg
iret
outsb
pop
jo
xlat
daa
lds
loope
inc
out
data16
dec
mov
mov
xchg
cmp
addr16
mov
push
xchg
jb
jne
arpl
ss
mov
add
pusha
cmp
sahf
sbb
mov
fisubrl
xor
scas
jg
nop
mov
test
mov
sbb
pop
ret
lea
cmpsl
ljmp
xchg
out
inc
pop
jno
pop
into
jle
in
xlat
jg
nop
data16
add
repnz
cld
outsb
add
hlt
dec
push
sub
dec
jg
xchg
daa
push
ja
fmull
add
sub
jg
outsl
xchg
call
scas
int3
mov
cmpsb
inc
push
push
das
out
pop
pop
xlat
stos
test
sbb
loope
addr16
mov
sub
dec
xchg
mov
mov
iret
push
xor
scas
aad
mov
inc
pop
cmp
add
call
xchg
xchg
pop
add
add
jbe
mov
add
dec
pop
cmpsl
ss
push
mov
cmpsb
outsb
jns
xchg
aaa
adc
sub
jg
xlat
daa
pop
pop
outsl
xchg
and
arpl
mov
xchg
add
pop
pop
fists
push
ss
iret
xor
inc
dec
jle
cmp
mov
xlat
mov
sub
push
into
cmp
es
xlat
jg
mov
gs
inc
pusha
pop
gs
xchg
cmp
inc
inc
lds
stc
xchg
xchg
mov
ret
push
jle
outsb
iret
ret
pop
xchg
push
enter
pusha
je
cmpl
outsb
pop
mov
inc
not
add
xchg
push
and
insb
inc
add
lahf
jb
daa
daa
testb
ds
ja
mov
push
sub
cltd
js
loope
das
pop
cmpsb
sub
sbb
xchg
mov
pusha
fcompl
mov
inc
pop
lds
fidivrs
sub
test
mov
dec
into
mov
dec
data16
test
sub
push
cltd
push
jg
sahf
lods
icebp
ss
iret
icebp
fs
aaa
arpl
aas
scas
and
dec
mull
and
xchg
mov
stc
repz
das
pop
fcmove
loopne
fsubp
mov
lret
daa
xlat
and
sub
pop
and
or
inc
pop
mov
pop
dec
test
loopne
ljmp
add
mov
and
pop
sarl
ja
cmp
jo
xchg
scas
xchg
pop
fcoml
popf
popf
out
xlat
and
cmp
mov
mov
movsl
leave
addr16
mov
aam
sbb
iret
fisubs
mov
sub
add
mov
cmpsl
enter
test
xor
lahf
addr16
bound
mov
cmc
sbb
inc
pop
pushf
scas
add
xor
das
repnz
sbb
outsl
jmp
mov
xchg
int
xchg
add
push
sbb
fimuls
mov
outsl
cmp
inc
push
into
mov
xchg
loopne
cmp
push
dec
fsts
add
jg
pop
xchg
outsl
xlat
nop
arpl
loop
sub
ficoms
jo
addr16
enter
jp
dec
ficomps
lret
xchg
es
xchg
pop
test
sub
push
push
fldenv
xchg
iret
inc
call
fidivrs
push
push
and
xor
je
push
outsl
test
cmpsl
mov
scas
mov
jno
mov
inc
pop
pop
bound
ja
xchg
pop
jbe
hlt
out
jno
cmpsb
mov
popf
push
popf
aam
xchg
pop
ds
jno
mov
negb
les
jge
jl
in
sub
movsl
fwait
pop
das
mov
lock
push
inc
xlat
mov
shll
inc
lahf
cli
or
mov
pop
clc
ja
push
pop
mov
add
xlat
dec
or
cmp
data16
es
popa
mov
test
mov
lods
fsubl
and
aas
xor
ror
rol
stos
pop
dec
iret
scas
insl
lahf
leave
lcall
and
cmp
lret
aas
mov
sahf
mov
jo
mov
lret
ss
inc
lahf
insb
add
out
cmp
inc
leave
lea
inc
out
dec
dec
cmp
jno
mov
xchg
scas
fistl
js
and
xor
nop
xchg
xor
std
nop
mov
xchg
loope
pop
lahf
inc
xorl
lcall
inc
ss
ds
scas
pusha
cli
xchg
inc
call
push
mov
outsb
adc
sbb
jo
sub
aas
or
aaa
and
xchg
ja
icebp
jbe
bound
out
pop
pusha
fistpll
je
lret
scas
es
imulb
xor
cmc
lahf
cmp
sarl
lret
xchg
out
add
cmpsl
cs
xor
pusha
inc
add
jo
shll
mov
mov
xchg
pop
push
mov
rcll
jle
cmp
sbb
jbe
mov
push
add
orl
inc
jle
mov
mov
iret
mull
scas
iret
nop
sub
call
lret
add
and
add
inc
inc
outsl
jo
std
dec
pusha
push
xchg
push
cmp
mov
aas
mov
jne
add
mov
stos
pop
cs
daa
ret
sahf
adc
cmpsb
mov
cmp
rclb
mov
xchg
std
popf
dec
nop
adc
insb
push
jg
rcr
inc
data16
stc
cmp
mov
and
scas
fidivrs
enter
add
mov
sbb
push
in
and
mov
addr16
lcall
mov
mov
pop
xor
mov
adc
les
sub
daa
addr16
xor
into
inc
and
call
bound
roll
ficomps
xorb
ds
push
icebp
xchg
mov
dec
cmp
in
jo
das
pop
jbe
inc
xorb
cmpsb
bound
lahf
jp
xchg
xchg
cmpsl
out
sub
and
fiadds
xlat
lods
fpatan
cmpl
xchg
inc
ja
push
loopne
fisubrl
inc
xchg
fsub
cmpsl
repnz
pop
dec
sbb
aad
xlat
xchg
pusha
or
es
dec
sub
inc
outsl
dec
jns
sub
dec
push
mov
and
sbb
mov
lcall
push
addr16
add
clc
dec
sbb
xchg
ss
mov
leave
pop
xchg
mov
data16
divb
mov
add
les
hlt
enter
loope
cmpsb
sub
pusha
xor
flds
mov
loope
into
mov
xchg
ljmp
movq
mov
das
outsl
mov
jle
scas
sti
xor
push
enter
mov
and
xchg
pop
js
sahf
outsl
cmp
nop
cltd
jns
movsl
mov
sbb
jno
aaa
cs
ja
adc
ds
mov
inc
jg
mov
nop
jns
pop
pop
es
pop
xchg
scas
bound
add
mov
das
outsl
jecxz
aaa
pop
pop
push
js
sti
inc
daa
cmp
adc
jecxz
dec
push
xlat
push
aad
data16
jle
pop
fsts
mov
fisttpl
mov
cmpsl
cmp
or
lds
scas
mov
xchg
daa
sahf
pusha
das
addr16
out
jbe
lahf
pop
addr16
add
cs
in
cmp
nop
or
mov
in
lret
mov
pop
fdivrl
das
dec
cmc
xchg
inc
addr16
push
sbb
movq
mov
bound
lock
outsl
lods
fists
push
fstl
sbb
scas
inc
call
mov
jg
stos
call
es
mov
sti
iret
cmp
test
or
orl
or
push
outsb
repnz
mov
dec
sub
mov
push
stos
dec
out
imul
sub
ficoms
frstpm(287
outsb
push
pop
xchg
jmp
hlt
and
sub
cs
clc
ret
mov
dec
dec
sahf
scas
test
repnz
fs
enter
stc
inc
out
sub
pop
mov
jle
or
add
cmp
sub
pop
mov
adc
xlat
pop
ss
cmpb
sbb
cwtl
fisubl
push
ss
jecxz
push
push
std
das
arpl
mov
aad
outsl
scas
lcall
jle
xor
addr16
scas
mov
aaa
int
dec
test
jle
ja
and
mull
jno
xchg
pop
addl
mov
shlb
mov
in
ja
out
push
cmpsb
push
mov
pop
push
jmp
aaa
add
scas
mov
push
inc
xlat
xor
xchg
cmpxchg
adc
aad
cmpsb
bound
gs
daa
movsl
leave
ds
mov
pop
pusha
fistps
leave
test
lds
pop
and
inc
addr16
mov
jb
int
pop
jne
ljmp
mov
aaa
push
js
xchg
and
movsb
sub
push
cmpsl
js
sahf
fimull
ljmp
aaa
daa
rcr
pushf
pop
rolb
call
test
pop
ljmp
outsb
call
js
jns
mov
pop
cli
mov
in
lret
push
shrl
jmp
lods
adc
dec
into
in
fisttpll
pop
cmp
mov
cs
xchg
push
in
and
xchg
orb
dec
pop
fisttps
pop
loope
scas
inc
ds
xchg
or
pop
sub
xorl
daa
or
mov
rcl
push
cmp
insl
lods
pop
xchg
out
push
fcoml
mov
stc
das
mov
push
cmp
adc
mov
bound
aas
mov
mov
adc
lds
daa
pop
mov
adc
iret
pop
xor
lahf
shll
cmp
jp
leave
cmpsl
xlat
js
fucomip
sarb
pop
dec
lahf
sti
popf
push
leave
sub
adc
ja
and
bound
es
cmpsl
outsl
bound
xchg
daa
pop
mov
adc
xchg
adc
mov
and
sub
scas
out
ret
xchg
outsb
xor
scas
push
mov
nop
or
xlat
enter
xor
mov
xchg
ja
push
jmp
sub
test
push
pop
xlat
jecxz
inc
push
sbb
jecxz
or
fstpl
mov
repz
daa
jne
outsl
push
ret
subl
pop
pop
daa
mov
into
jbe
sub
pop
dec
push
scas
in
xchg
stc
pusha
daa
push
scas
push
fidivrs
xor
outsl
lahf
mov
daa
cmpb
pop
test
mov
data16
ss
stos
fstpl
das
push
jne
inc
scas
push
fstps
mov
mov
dec
into
mov
jae
xlat
lods
das
iret
jp
ljmp
mov
push
inc
mov
movsl
scas
xchg
test
pop
pop
push
into
jb
in
mov
jbe
arpl
dec
mov
sbb
jecxz
pop
ja
dec
divl
bound
xchg
sbb
inc
sub
mov
ljmp
sub
and
and
sub
out
pusha
cmp
outsl
and
inc
aaa
inc
xchg
xchg
addr16
ja
icebp
cmp
jb
cmp
pop
mov
cmp
push
and
outsl
cli
scas
xchg
fildll
into
scas
pop
imul
mov
push
adc
loopne
jo
gs
push
scas
xchg
ja
es
fdivrl
adc
cmpsl
jns
addr16
xchg
inc
es
add
rorl
push
fiadds
push
dec
daa
gs
leave
mov
xchg
shll
fsubp
push
push
stc
jg
mov
inc
cmc
int
xchg
ds
dec
data16
out
ja
pushf
push
data16
and
pop
ds
fs
es
imul
mov
xlat
sbb
xchg
fldl
mov
jecxz
outsb
cs
mov
shlb
inc
dec
sbbb
xchg
sub
pop
ja
and
mov
push
je
pop
mov
inc
dec
outsl
ss
jbe
scas
nop
scas
pusha
jbe
aas
out
scas
mov
push
es
add
popf
fidivs
aad
daa
push
aad
ds
into
stos
bound
xchg
cmp
xchg
push
jle
ret
jb
cmp
ljmp
divl
pusha
out
xchg
inc
xchg
pop
adcb
adc
pop
jle
leave
fstpl
divl
shll
and
jno
or
cmpsb
mov
xchg
cld
leave
xor
aad
dec
gs
or
inc
data16
outsl
xchg
leave
vxorps
xchg
xchg
shll
into
nop
cmpsl
xor
jp
cmp
xchg
cld
lea
and
mov
push
scas
xor
add
mov
ss
hlt
loop,pn
jle
sahf
pop
push
ficomps
dec
das
xor
xchg
xchg
adc
gs
xor
pop
addr16
xchg
pop
jle
xchg
into
in
ficoml
pop
call
and
inc
lock
sbb
and
xor
movsl
lahf
into
das
in
fistps
lret
enter
je
and
call
push
sahf
fiadds
shr
mov
push
aas
inc
je
jns
lds
std
mov
add
popa
and
nop
loop
inc
inc
push
scas
pop
mov
push
sahf
int3
mov
push
ja
xor
test
jp
test
es
jg
jg
pop
mov
jb
daa
call
jecxz
ja
adc
out
jbe
scas
push
aam
das
xchg
push
iret
sub
push
stos
call
cmp
pop
jecxz
ja
xchg
negb
enter
sahf
xor
pusha
and
icebp
rcrl
push
mov
jnp
int
cmpsb
mov
scas
cmpsl
in
outsl
into
jo
dec
cmpsl
ljmp
mov
pop
mov
xor
into
pushf
dec
sub
aam
and
icebp
sahf
xlat
mov
mov
dec
jp
push
push
pop
mov
adc
xor
add
dec
outsb
inc
inc
aam
aas
in
fcmovnb
into
push
in
mov
fistpll
inc
jg
jns
xorb
je
je
dec
push
mov
add
xlat
cmpsl
xchg
mov
push
pop
push
dec
ret
mov
pop
psubd
ss
or
xchg
dec
loopne
pop
dec
rcll
mov
push
cmp
into
in
xor
dec
cmpsl
push
lahf
pop
ja
xchg
mov
cld
int3
add
je
xlat
xchg
mov
cli
cwtl
mov
nop
sti
popf
push
sbb
test
pushf
sbb
push
mov
fdivrs
cmp
sub
dec
xchg
push
sub
icebp
int3
mov
xchg
das
jmp
sbb
xchg
daa
outsb
mov
push
xor
mov
addr16
xor
dec
push
dec
enter
mov
or
cmpsl
aas
scas
in
push
mov
in
and
lret
sub
pop
or
mov
fstl
push
jo
or
mov
push
jp
daa
mov
mov
test
add
daa
xlat
outsl
cmpsl
into
mov
nop
bound
es
and
or
xchg
mov
ljmp
sub
xchg
daa
jo
push
pop
push
cmp
adc
pusha
pop
in
daa
inc
push
cs
pop
xchg
add
lods
pushf
ja
pop
inc
lret
ret
inc
ret
xorb
cmp
les
inc
cmp
xchg
mov
xchg
jg
xor
gs
fimull
cwtl
pop
stos
mov
mov
push
fisttpll
xchg
es
jg
data16
aaa
and
icebp
iret
mov
pop
jbe
jns,pn
mov
push
cmpsb
lds
xor
push
pop
fs
xchg
inc
inc
xrelease
pop
clc
and
js
push
ljmp
scas
in
hlt
mov
scas
arpl
inc
xchg
push
ret
cs
das
push
xor
push
out
mov
mov
pop
pop
and
xchg
push
divl
ljmp
mov
data16
ficomps
sbbl
enter
xchg
aaa
adc
dec
mov
popa
xor
mov
ss
dec
add
push
bound
ret
aam
lds
sbb
fs
cmpsl
dec
pop
mov
jbe
sub
dec
ds
jecxz
cmpsl
pop
jecxz
xchg
mov
pusha
and
jbe
add
xchg
pop
cmpb
pushf
stos
mov
xchg
jne
inc
stos
xchg
jns
mov
mov
int3
and
lods
push
lahf
or
xchg
dec
sti
lret
add
ljmp
jmp
cmp
mov
add
and
mov
add
scas
cmpsb
xchg
outsb
aas
movsl
stos
mov
stc
daa
pop
cmpsb
push
stc
pop
push
data16
cltd
dec
cmpsb
add
leave
dec
dec
out
jle
pusha
gs
xor
out
iret
mov
pop
cli
adc
fstps
nop
push
jle
ss
lds
xor
xchg
arpl
fwait
mov
fsubrs
call
cs
mov
int3
dec
filds
int3
cmpsl
mov
inc
pop
cld
cmp
rcll
jns
xor
cmp
inc
dec
mov
in
cmc
push
cmp
imulb
in
fbstp
dec
pushf
dec
pop
mov
les
aam
stc
bound
int3
ret
xchg
jle
cltd
scas
bound
sahf
pop
aaa
push
in
es
data16
inc
jne
push
add
push
lods
dec
cmp
mov
arpl
inc
mov
repz
adc
ret
inc
pop
xchg
push
push
inc
inc
movsl
pop
aad
mov
insl
dec
sarb
sahf
sub
lods
das
xchg
pop
hlt
dec
add
ljmp
decl
daa
mov
add
das
dec
add
jbe
pop
movsl
cmpl
loopne
jns
cmovae
mov
pop
mov
mov
rorl
into
xchg
outsb
aam
cmpsl
jbe
sub
cltd
jo
aas
ss
subl
inc
inc
nop
jecxz
push
mov
dec
addr16
out
mov
or
ret
jg
outsl
popf
mov
add
scas
scas
jbe
into
xchg
ja
sub
xchg
xchg
inc
addr16
leave
inc
push
mov
inc
jg
add
icebp
data16
dec
fucomi
mov
addr16
xchg
pushaw
scas
jl
aas
stos
cmp
mov
int
sti
out
push
js
push
cwtl
imul
fwait
xor
xor
loope
push
jbe
pop
into
xor
pop
cmpsl
adc
cs
xor
xlat
test
adc
push
jle
test
mov
insl
xor
push
push
jg
cmp
imul
fwait
mov
xor
mov
cmp
iret
fs
push
push
pop
aad
inc
inc
xorl
dec
fidivs
stos
xor
cmpsb
les
shll
mov
and
push
aaa
into
icebp
lahf
orb
fcompl
sahf
ja
pop
lahf
jnp
and
pop
lret
sbb
push
in
xor
mov
lret
pop
stos
sbb
pop
aaa
sahf
divb
fs
ss
scas
pop
fwait
sub
pop
mov
mov
jbe
pop
outsl
inc
fcomps
push
pop
dec
xor
jg
daa
mov
lods
mov
scas
movsb
push
aaa
and
push
inc
aam
pusha
int
iret
sbb
iret
dec
or
ljmp
das
jb
xchg
fwait
lahf
cs
es
dec
xor
mov
mov
inc
jns
mov
adc
aad
mov
add
and
jle
stos
cmp
dec
pop
jle
add
pop
ss
ljmp
mov
jne
push
dec
xor
add
ljmp
hlt
pop
mov
xlat
dec
movsl
ss
add
mov
jge
push
inc
in
add
mov
push
xor
lcall
add
nop
ss
push
scas
add
jbe
scas
cmpsl
mov
push
xor
push
imul
xor
mov
mov
inc
mov
jp
mov
sahf
cmp
xchg
and
or
add
ss
jne
addr16
aaa
lret
add
loopne
es
mov
ja
ds
and
out
jne
sub
stc
push
cs
rclb
dec
fstps
add
sub
xchg
jbe
sbb
adc
dec
dec
add
dec
add
dec
dec
add
sbb
add
push
push
push
sarb
js
dec
xchg
stos
repnz
into
cmpsl
outsl
cmp
push
jecxz
ds
fwait
scas
scas
dec
lahf
inc
dec
inc
mov
pop
inc
sarl
ret
pop
jg
ljmp
mov
cmp
pop
repz
lahf
add
into
adc
idivb
xorb
out
pop
or
out
into
pop
lret
mov
ja
jg
mov
or
daa
scas
jmp
loopne
pop
negl
std
ljmp
or
push
mov
cltd
inc
leave
movl
daa
loopne
dec
out
inc
addr16
mov
shll
ljmp
mov
ss
outsb
nop
push
jecxz
mov
imul
pop
push
daa
xlat
xchg
push
scas
das
push
push
cmpsl
setbe
fistpll
pop
lahf
mov
inc
hlt
fisubs
pop
cs
loopne
mov
add
mov
enter
test
cltd
ss
daa
sbb
mov
mov
xlat
cmpsb
fmulp
rcl
mov
insl
dec
and
sub
lock
xchg
das
inc
ja
nop
outsl
cli
cmc
in
ss
mov
sbb
dec
in
sub
inc
shll
fisubrs
push
inc
push
ret
ret
mov
pusha
or
dec
daa
aad
iret
fldenv
push
leave
fdivrp
xchg
out
ss
and
xchg
pop
ror
mov
push
and
mov
pushf
repnz
dec
cmp
lret
loope
jle
push
data16
clc
pop
mov
mov
pusha
cmp
es
mov
das
leave
inc
dec
into
ds
push
cwtl
or
dec
sahf
loop
aaa
push
cmpsl
cmpsb
pusha
and
andl
bound
data16
sahf
test
add
sub
arpl
xlat
nop
enter
pop
ds
sub
clc
data16
sahf
out
lret
sub
pop
push
scas
in
add
pusha
jb
popl
outsl
inc
and
xchg
push
jecxz
push
sahf
fs
lret
or
flds
pop
xchg
inc
aas
or
lea
lret
xlat
rcll
outsl
xor
cmpsl
mov
mov
cltd
or
push
jle
sarl
lods
mov
call
gs
xor
jmp
nop
iret
adc
std
pusha
pop
xchg
fisttpl
mov
pop
inc
pop
push
call
pop
jg
outsb
aas
pop
filds
es
jae
push
fsub
cmp
in
pop
xchg
cmp
loopne
mov
xchg
cmpsb
leave
adc
popa
ja
and
lahf
mov
jne
lret
cmpsl
iret
pusha
lahf
push
cmpsw
jb
inc
push
xchg
inc
ret
aas
fs
mov
scas
ds
jl
jbe
mov
addr16
mov
mov
jecxz
mov
lahf
mov
scas
es
pop
mov
outsl
ficomps
push
inc
ja
setp
out
xchg
mov
inc
xor
fstpl
mov
push
dec
push
fwait
mov
sahf
cmp
fwait
xlat
ffree
mov
xchg
clc
rorl
xor
fimull
push
pusha
adc
aas
push
daa
pop
pop
add
cmp
ja
cs
fldcw
mov
xchg
stos
add
scas
add
into
add
nop
xor
fldenv
xchg
mov
push
xchg
jbe
jle
mov
call
xchg
fs
push
xor
loopne
popf
add
jmp
incb
call
dec
lods
daa
jne
xor
ja
cmpsb
lahf
cmpsl
pusha
xchg
loop
outsl
daa
jbe
aad
mov
adc
aaa
ss
faddp
jp
or
or
daa
adc
pop
push
sbb
sbb
cmpsb
dec
std
jo
pop
inc
pusha
aad
jle
repz
loop
xor
addr16
cmp
add
stc
aaa
jle
mov
fsts
pop
dec
ds
call
lahf
mov
outsb
fs
ja
push
pop
addr16
dec
pop
lahf
push
dec
push
cld
ror
mov
mov
test
add
mov
arpl
push
cmpsl
xchg
mov
out
aaa
xlat
push
xchg
mov
push
addr16
mov
mov
mov
sahf
jbe
jns
inc
outsb
push
push
mov
dec
xchg
pusha
pop
test
outsb
mov
daa
add
xor
pop
cmp
or
loop
das
xchg
sahf
ds
and
scas
sub
mov
mov
xchg
addr16
loope
xlat
push
arpl
ja
mov
ss
cld
mov
pusha
cmp
nop
sub
outsl
ja
lods
lds
cwtl
cmp
scas
mov
dec
inc
das
xchg
addb
push
shrb
test
mov
mov
xchg
pop
sahf
nop
inc
pop
sbb
push
sbb
lea
push
jns
in
push
jno,pt
dec
rcrl
jbe
stc
fwait
sub
andb
push
sbb
jo
add
jb
lret
pop
data16
push
xlat
ret
push
jle
inc
dec
ffree
push
daa
add
jno
dec
nop
outsl
scas
push
das
jo
stos
out
xchg
data16
aaa
into
xchg
add
cwtl
rcrb
xchg
cld
push
imul
and
pop
xlat
mov
std
or
cmp
xor
loop
mov
push
scas
sub
xor
pop
dec
cmp
out
mov
xchg
insl
pop
or
and
fildll
test
ds
jg
jbe
push
dec
and
jo
dec
sar
sub
push
xchg
in
outsb
mov
add
push
mov
pusha
mov
in
xlat
pop
leave
bound
and
push
iret
xchg
push
dec
jns
mov
push
fildll
shrb
adc
xor
cmp
outsl
sahf
push
and
fstl
data16
dec
xor
addr16
out
sahf
sbb
cmp
into
cmp
fwait
nop
sbb
sbb
pusha
shll
add
outsw
enter
loope
pop
scas
dec
loopne
pop
xchg
repz
leave
cmpsb
pop
aad
mov
cmpsl
aaa
xchg
ds
push
jo
and
sub
xlat
mov
cmp
ds
mov
es
sar
and
pusha
pop
jns
addr16
hlt
xchg
xlat
sti
insl
push
push
jle
pop
mov
push
movsb
or
cmpsb
sti
and
test
pop
cmpsb
loop
dec
nop
push
gs
xor
call
xchg
cmp
xchg
fnstenv
push
cmpsl
data16
fsubrp
cli
popw
sahf
xchg
jno
xchg
mov
inc
ret
and
push
aaa
test
pop
mov
leave
enter
mov
and
fstps
loope
push
insb
and
push
and
mov
sahf
dec
push
cmpsl
call
es
lea
jge
outsb
ret
outsl
aaa
or
cmp
xchg
jns
movb
inc
fidivrs
jo
repnz
add
pop
or
adc
xlat
notb
aaa
into
js
add
inc
pop
and
xor
jmp
ss
xor
in
sub
cmp
push
pusha
pop
mov
xor
bound
nop
mov
or
stos
mov
pusha
mov
dec
pusha
add
mov
adc
jno
inc
sbb
and
cld
sub
scas
fs
push
add
xor
cmp
xchg
sub
scas
push
aam
sub
lea
repz
iret
push
jecxz
cmpsl
es
dec
outsl
addr16
push
call
aas
sub
rcll
lahf
lret
mov
in
scas
xlat
or
pop
je
mov
daa
cmp
pop
push
daa
jecxz
mov
nop
push
jae
aam
into
rol
mov
pop
ja
push
mov
mov
push
popf
cmp
hlt
mov
pop
ret
scas
xor
mov
xchg
aas
mov
pop
fcmovnu
filds
lahf
mov
stc
inc
push
and
and
add
jp
mov
mov
fldl
outsl
lahf
fidivrs
fidivs
jbe
scas
cmpsl
cs
sahf
cs
mov
xor
sub
xchg
dec
jo
andb
sub
push
cmpsl
addr16
push
cmc
cs
pop
inc
ss
scas
addr16
loop
nop
mov
and
add
and
mov
adc
mov
cmp
and
pop
int3
xor
sbb
or
push
addr16
mov
mov
xor
push
pop
js
sbb
and
jg
and
aam
add
ljmp
ja
ds
lret
dec
mov
sub
es
xorb
ss
enter
lret
and
dec
mov
mov
jbe
sahf
mov
pop
xor
pop
movsl
out
fcoml
rcl
aaa
iret
dec
out
mov
mov
ds
jb
sub
cmpsb
push
mull
mov
inc
jg
sbb
cmpsl
sub
push
cmp
push
pop
or
into
xlat
out
xor
push
mov
jns
push
fsubl
pop
cmpsb
push
jmp
fnstenv
pop
cmp
imul
pop
ja
pop
mov
xor
outsb
inc
add
add
dec
mov
mov
jno
mov
mov
pop
das
ds
ja
xor
xchg
rcll
inc
pop
xlat
js
neg
mov
loopne
cli
sahf
xlat
in
and
icebp
inc
push
or
fidivs
lods
xor
jno
pop
scas
cwtl
je
xor
rorl
xor
shrl
dec
ret
mov
bound
fildll
call
push
fs
xchg
ficoms
cs
jo
add
cmpsb
scas
je
cmpsl
fildll
push
fidivs
jge
outsl
iret
pop
sub
pop
ja
cmpsl
jne
jle
push
imulb
std
lahf
pushf
daa
pop
aaa
push
dec
pop
mov
xor
cmp
loope
daa
xchg
push
cs
mov
inc
lds
mov
pop
fists
clc
pop
sbb
xchg
mov
inc
cmp
push
movsb
aaa
cmc
mov
pop
jbe
jg
lcall
in
pusha
push
gs
push
sub
aas
push
xchg
inc
in
iret
push
add
les
jnp
xchg
ds
je
lods
nop
cmpsl
jmp
mov
sub
dec
scas
adcb
fs
loop
xchg
inc
outsb
pop
data16
mov
mov
pop
pop
pop
shrb
push
lahf
mov
repnz
lea
sub
or
iret
xchg
fisttpl
ja
nop
aaa
mov
cld
push
fbld
and
jl
jecxz
das
fdivrp
mov
addr16
mov
adc
lock
xchg
les
loop
push
pop
pusha
outsl
mov
outsb
ds
cmp
aaa
sbb
jo
nop
outsl
xlat
scas
outsl
ss
or
sbb
push
into
ja
fsubs
aaa
fwait
pop
mov
sub
pop
addr16
dec
xchg
add
lea
jno
xor
shl
jbe
inc
scas
push
gs
xchg
sahf
daa
mov
xlat
das
push
out
gs
xchg
and
cmp
xchg
mov
mov
lahf
cmpsb
inc
js
repz
pop
divl
xor
shlb
sub
lds
xchg
lret
jecxz
mov
or
aaa
jnp
pop
sub
sahf
push
inc
icebp
mov
sbb
cmp
iret
fcomps
pop
scas
js
hlt
pusha
iret
push
push
jo
xchg
inc
or
addr16
cmpb
in
pushf
enter
xchg
inc
jo
fwait
mov
fiaddl
shrl
ds
jo
sarl
adc
pop
mov
pushf
mov
or
sarb
inc
imul
mov
leave
dec
and
xchg
push
and
push
fstpt
mov
fidivl
cltd
inc
xor
aad
or
mov
arpl
pop
jbe
out
data16
adc
push
and
dec
add
inc
ret
jg
inc
dec
ja
jge
out
enter
mov
sub
and
push
xlat
rolb
aad
and
inc
js
sahf
xor
shll
int3
sub
and
mov
daa
fiadds
cmp
sbb
pusha
cmpsb
mov
imul
sahf
sbb
or
iret
imull
scas
lahf
aaa
stos
cmp
push
int3
push
fucomip
mov
test
xchg
into
outsl
push
cmp
mov
and
sbb
push
jmp
adc
testl
cltd
pusha
nop
jbe
xor
xchg
xlat
mov
stc
sbb
dec
movsb
cmp
pusha
cmp
int
sub
add
es
into
mov
aas
lcall
fcmovnu
fisubl
and
jb
ds
xchg
xchg
push
fadds
addr16
xlat
jbe
mov
or
xor
insb
subb
hlt
xor
xchg
pop
pop
sub
add
aas
getsec
test
repnz
dec
test
sarb
movsl
fcmovnbe
cmpsb
pop
lds
dec
movsl
sahf
in
cmpsb
das
sahf
iret
push
jecxz
jbe
cmp
shll
lds
sbb
ss
xchg
mov
fnsave
xor
mov
xchg
pop
scas
inc
cmp
mov
scas
add
enter
mov
mov
mov
cmpsb
and
xchg
fs
sarb
and
dec
pop
cmp
dec
cmpsl
ljmp
pop
data16
mov
out
push
fdivs
ja
mov
push
leave
stc
mov
popw
cs
cmpsl
sbb
jecxz
push
xor
dec
mov
mov
mov
xchg
xchg
inc
imul
testb
push
and
icebp
push
scas
xlat
sub
aad
add
cwtl
fimuls
lret
jnp
addr16
cmp
mov
dec
mov
fbld
xchg
nop
sub
outsl
mov
add
adc
and
sbb
xchg
dec
push
inc
clc
mov
cltd
add
shrb
xchg
rcrl
popf
mov
loop
jle
mov
ret
inc
cmpsb
cmp
mov
cwtl
mov
arpl
scas
pop
adc
add
inc
aaa
pop
and
jp
leave
cmp
test
xor
inc
rolb
daa
lock
loop
push
aaa
sub
add
fisubrs
add
inc
popa
pusha
das
mov
adc
xorb
lret
ret
rclb
clc
mov
pop
repnz
mov
mov
clc
outsb
out
stc
push
dec
dec
xor
sub
push
ljmp
cs
push
inc
fxch
push
jecxz
pop
push
xchg
out
mov
cmp
cs
sahf
push
jg
jne
iret
or
into
pop
push
in
lahf
les
dec
dec
inc
pop
int
jp
xor
xchg
daa
dec
jg
test
movl
out
shlb
dec
iret
sarl
jno
push
push
cmp
mov
fisubs
loop
cmpsl
inc
pop
es
ret
adc
inc
jae
cmc
mov
add
leave
push
jnp
push
movl
fnstcw
pop
cmp
lds
iret
ljmp
jle
cmpsl
scas
sub
fcoml
jbe
or
push
mov
es
mov
mov
je
stc
and
out
sahf
ss
mov
pop
movsb
daa
xchg
bound
jo
bound
xchg
jns
frstor
pop
fimuls
dec
mov
add
shrb
mov
xlat
movsb
push
and
mov
bound
jg
jae
pop
and
push
cmp
stc
fs
rorl
ds
jg
xchg
mov
aaa
cmpsl
leave
das
in
out
adc
and
xchg
ds
inc
lret
pop
xchg
mov
push
data16
xchg
daa
aaa
add
lcall
stos
push
or
jb
mov
and
scas
lods
pop
pusha
mov
push
in
lcall
push
lretw
and
dec
leave
adc
loopne
inc
and
mov
addr16
pop
push
xchg
aad
dec
call
xor
nop
fcompl
adc
xchg
push
xlat
aas
pop
push
push
jecxz
addr16
xchg
jno
xchg
fidivrs
pusha
subl
enter
pop
pop
int
dec
hlt
push
add
jg
xchg
repnz
push
push
in
xor
add
pop
iret
mov
jg
out
fisttps
negb
rol
ficoml
pusha
push
mov
dec
pop
xlat
push
mov
pusha
iret
cs
ja
jle
xor
and
ds
pop
in
jbe
or
mov
dec
pop
outsl
push
inc
into
push
push
test
pop
sarl
xchg
pcmpeqd
xor
pop
cmp
imul
inc
dec
push
push
aad
and
aaa
add
cmp
dec
xchg
or
mov
rcll
cmpsl
into
xchg
dec
outsb
ljmp
rcr
pop
lahf
inc
xor
dec
cmpsl
jle
mov
pop
add
loop
pop
pusha
xchg
inc
push
fs
lret
ja
push
ds
lahf
gs
cmp
out
stos
arpl
sbbb
xchg
xor
xor
outsb
aam
jg
in
xchg
xchg
gs
jmp
xor
pop
inc
std
xchg
fidivs
test
aaa
cmpsb
push
fs
enter
aaa
das
or
dec
mov
pop
push
out
ficomps
in
jns
scas
cmp
push
lods
jmp
and
cmpsl
pusha
xchg
mov
or
mov
lock
iret
cs
xorl
fiadds
jnp
and
aam
cli
fnsave
lahf
or
icebp
pop
xchg
scas
loope
push
ja
outsb
mov
jne
stos
das
push
fisubs
mov
addr16
pop
mov
jle
sub
lret
ja
call
jbe
mov
push
hlt
mov
addr16
gs
mov
fnstenv
jo
shll
ss
inc
loop
push
and
mov
cmp
lods
jle
mov
daa
push
xor
dec
cmp
push
add
inc
or
es
adc
int
xlat
xchg
fisttpl
lock
aas
cli
mov
fisubrs
pop
or
sub
dec
mov
mov
rol
adc
jl
xlat
mov
fwait
cmpsb
adc
inc
mov
xchg
cmp
lods
pop
push
sub
repz
fbstp
mov
and
and
gs
clc
pop
aaa
daa
mov
idivl
push
pusha
dec
fldcw
sti
push
icebp
fdivp
jae,pt
inc
dec
jmp
push
xor
xchg
and
nop
enter
mov
add
xor
cmp
roll
filds
mov
mov
sub
ljmp
in
fs
fldcw
nop
pop
xchg
into
cmpsl
and
add
add
es
cmpsb
outsb
or
rcll
and
aas
mov
pusha
xor
test
xor
in
ja
xchg
fidivrs
outsl
inc
mov
inc
ljmp
push
xchg
scas
xchg
fisttps
mov
nop
fisubrs
pusha
or
inc
xchg
push
add
xchg
aad
mov
pop
jle
addr16
data16
xchg
cmp
fsubp
int
pop
pop
push
mov
xor
and
mov
push
aaa
fisubrs
xchg
jmp
cmpsl
jns
cmpsb
mov
iret
into
sub
pop
add
cmp
icebp
sbb
mov
xchg
adc
loope
mov
mov
adc
shll
scas
lahf
mov
inc
imul
xlat
ja
fisubs
ss
mov
pusha
daa
jp
dec
mov
mov
add
push
dec
iret
xorl
mov
pop
sahf
das
addr16
cmp
xlat
sar
xchg
jg
aaa
test
cli
jo
addb
xchg
popf
xor
dec
pop
jne
xchg
jbe
push
pop
add
sub
fcomi
das
jmp
xlat
dec
push
mov
xchg
push
nop
mov
sahf
pop
jbe
push
lods
aas
adc
dec
pop
cmp
push
daa
xchg
mov
xor
ds
push
and
or
aaa
pop
cmp
ja
xlat
daa
xchg
xchg
xchg
jl
addr16
icebp
add
or
out
sahf
pop
fists
mov
or
pop
mov
in
jbe
fs
pusha
loop
aaa
outsb
push
pop
aas
push
mov
nop
cmp
push
addr16
add
jg
pop
call
sahf
and
pop
inc
dec
lds
leave
test
push
jecxz
scas
xchg
xchg
pop
cmpsl
aas
addr16
gs
jae,pt
sbb
pushf
loope
xor
mov
je
mov
adc
fnstenv
pop
pop
fstpl
sbb
mov
ss
xchg
cmpsl
add
fistpll
cmpsb
ja
pop
iret
xor
pop
out
outsl
outsb
pop
iret
pop
cs
jg
addr16
out
notl
add
inc
mulb
pop
stos
jp
ret
mov
adc
sbb
add
cmpsl
jne
sub
loope
negb
add
enter
inc
fistpl
das
sbb
and
pop
outsl
or
sub
rol
push
inc
jno
scas
and
push
pop
pop
ja
push
leave
out
push
add
loope,pn
push
lahf
pop
fists
out
cs
inc
outsb
outsl
add
test
fs
sbb
xchg
and
xorl
jbe
jo
pop
cmp
in
and
outsl
push
ficoms
addr16
enter
inc
push
pop
outsl
sub
pop
es
lea
mov
pop
and
pop
cmp
sub
es
pop
push
xchg
mov
cwtl
adc
xor
push
xchg
pop
leave
push
shr
push
sbb
cmc
pop
and
aaa
ss
insl
insb
mov
scas
xor
les
sub
mov
mov
lds
mov
iret
mov
jg
or
jb
jno
push
and
mov
xchg
fisubs
les
mov
pop
fidivl
subl
mov
xchg
xchg
repnz
outsb
data16
sbb
pop
xor
cltd
loop
jle
aas
outsb
idivl
mov
add
xchg
clc
sahf
daa
push
xchg
push
sub
cwtl
sub
xor
sbb
jmp
bound
xchg
ror
mov
lds
jb
inc
cmpsl
dec
xchg
cwtl
fsubrl
inc
xlat
rcl
fisubs
push
cltd
xor
cmc
or
aaa
lods
push
ja
mov
xchg
cs
call
sub
jecxz
jg
pop
xlat
aas
jo
xchg
aad
es
out
xchg
dec
mov
inc
scas
cmp
cmp
pop
jns
daa
aaa
es
iret
sub
call
sahf
adc
scas
jmp
gs
cs
xor
dec
lock
pop
mov
jbe
jb
daa
sub
aam
ss
mov
add
jmp
inc
sbb
add
daa
ffree
cmpsl
push
sbb
ja
popf
mov
mov
sub
lods
mov
ret
mov
jns
repnz
and
outsb
xchg
into
ja
dec
mov
enter
rolb
shr
movl
push
push
scas
xchg
ja
lret
add
dec
out
sub
mov
and
pop
dec
scas
push
mov
sbb
adc
ja
mov
mov
inc
mov
sbbl
jae
imul
mov
and
sbb
mov
adc
les
lock
sub
inc
cs
outsl
inc
nop
xchg
pop
dec
jmp
jno,pt
dec
xor
mov
lahf
cmpsl
outsb
loopne
fstps
call
lods
aad
out
popf
pop
ror
xchg
inc
add
mov
xchg
cmpsb
mov
sarl
add
add
push
pop
mov
loop
cmpsl
into
sub
push
xor
mov
dec
jg
in
nop
and
cmovo
cmp
dec
push
call
inc
pop
out
das
and
es
pop
pop
bound
aas
aaa
inc
pusha
xchg
xchg
popf
jp
push
mov
popa
mov
sbb
push
inc
push
imul
scas
movsb
adc
pop
push
insl
mov
insb
shrl
scas
jb
out
icebp
add
cmc
daa
xor
jne
ds
or
inc
xor
cs
fstp
lahf
dec
sbb
sbb
int3
mov
xor
insl
push
sahf
nop
nop
push
leave
rcr
daa
dec
xchg
outsb
inc
rcr
repz
icebp
push
ret
ds
push
mov
jg
push
sub
into
cmpsl
pop
add
cmpsb
mov
jbe
lods
inc
stc
mov
dec
nop
fisubs
pop
aaa
pop
cmpsb
daa
inc
popf
mov
jg
iret
pop
inc
jge
mov
push
cs
nop
dec
inc
pop
jo
ds
lcall
out
fs
add
test
test
dec
lds
push
enter
loop
mov
ja
add
mov
cmp
dec
xchg
dec
ds
pop
sbb
fmulp
xor
nop
outsl
add
nop
cltd
xchg
mov
lret
mov
leave
pop
call
sahf
rorl
xor
inc
dec
pop
lock
push
jmp
in
das
lahf
cmpsl
mov
xor
mov
dec
xchg
mov
pop
enter
mov
mov
jg
cltd
addr16
and
xchg
dec
dec
mov
or
cmp
inc
daa
gs
push
jg
mov
xchg
xchg
addr16
pop
and
enter
push
jle
cmpsb
into
fistpll
test
loop
es
daa
inc
mov
cmpsl
les
cmc
sub
das
lret
dec
movsl
daa
aas
sub
inc
cmpsl
lcall
lds
xchg
das
lods
cmp
cmp
gs
xor
repnz
lret
ja
fdivs
mov
ljmp
stc
mov
ret
ss
pop
into
pusha
jns
mov
ja
mov
xchg
fbstp
das
call
ss
xlat
push
push
cmp
rcll
aad
xor
xchg
mov
mov
ss
and
or
rcrb
xor
je
add
and
jno
fisubs
jmp
cmpsb
adc
fs
cs
push
daa
scas
push
jle
outsl
pop
cmp
out
jne
mov
lahf
xchg
scas
mov
mov
ds
and
repnz
push
mov
add
cmc
jle
int3
mov
mov
shll
dec
mov
stos
pop
jmp
ret
addr16
mov
or
ss
add
push
sahf
mov
aas
fistpl
push
les
push
push
je
cmp
data16
outsl
stc
sub
pop
rcrl
jg
in
cmp
dec
inc
pop
fldcw
daa
xlat
push
xchg
loope
scas
push
inc
addr16
pop
sub
daa
pusha
enter
outsl
aad
ja
jne
aad
iret
aas
data16
push
and
sahf
gs
pusha
lret
inc
jmp
shrl
gs
lds
xchg
insb
push
add
push
or
ds
ss
dec
jl
loope
xchg
pop
sub
jecxz
es
cmp
iret
hlt
add
rorl
in
outsl
into
sbb
aaa
addr16
das
leave
pop
aas
dec
sbb
push
lcall
mov
shll
sub
pop
and
or
inc
xor
fdivrl
vphaddwq
aad
ja
mov
rcll
outsl
pop
es
pusha
lret
data16
and
add
sarb
gs
cmp
inc
enter
xchg
sahf
ja
add
inc
cmpsb
xlat
lods
lea
outsl
fimull
aaa
xchg
repz
pop
mov
dec
push
mov
pop
cmpsb
es
inc
mov
ds
shrl
cli
lret
in
mov
jg
xor
ljmp
aad
cmpsl
outsb
fidivs
fldt
clc
outsl
jbe
testl
js
inc
mov
pop
sub
pusha
xchg
xlat
data16
pop
dec
leave
cs
iret
fisttpl
scas
pop
mov
hlt
mov
push
sbb
push
es
rcrl
out
fidivrs
loop
lahf
cmpsb
push
add
or
mov
pop
in
jmp
pop
mov
xlat
jns
fbstp
push
pop
push
mov
mov
dec
das
ds
dec
aas
aaa
inc
push
cld
xchg
xchg
xchg
lahf
cltd
sub
push
pusha
add
add
sub
push
pop
outsl
addr16
add
stos
xchg
dec
arpl
test
mov
ficoml
push
shrl
and
sahf
and
cmpsl
enter
test
ja
add
jno
dec
aas
xor
mov
sbb
mov
add
fildl
inc
jmp
cmp
mov
pop
push
enter
daa
ja
or
fildll
push
pushf
dec
sub
dec
xchg
add
outsl
inc
orb
push
icebp
stos
scas
inc
pop
data16
jbe
jle
mov
daa
jne
dec
flds
dec
imul
mov
push
xlat
data16
sarl
out
outsl
xchg
push
cmc
pop
xor
pop
push
sahf
cmpsb
pop
scas
xor
pop
or
lahf
adc
aas
xchg
mov
scas
and
push
cmp
xchg
mov
mov
push
iret
inc
push
sub
dec
mov
pop
inc
repnz
shrb
adc
std
jo
xchg
in
mov
cli
loopne
push
cmp
xor
fimuls
stos
in
jno
dec
fld
cmpsb
xchg
cwtl
nop
sbb
scas
cmpsl
mov
dec
sub
cs
cmp
jnp
push
ljmp
jge
fld
test
cmp
lret
dec
mov
outsb
jo
daa
push
jbe
sbb
aaa
push
push
xchg
imul
fildll
jecxz
outsb
push
cs
aaa
push
push
or
xchg
aas
daa
mov
jbe
add
das
es
fcompl
and
stos
loop
inc
inc
xchg
pop
xlat
sarl
push
addr16
pop
jbe
mov
xchg
pop
xchg
sub
push
insb
daa
test
pusha
lock
jmp
cmp
xchg
mov
jle
mov
jmp
and
add
and
mull
in
mov
cmc
enter
fbstp
xchg
pusha
push
fsubrl
jg
shll
ret
jle
lahf
jno
outsl
dec
xor
jae
sti
and
dec
mov
imul
pop
outsb
mov
mov
int3
addr16
cmp
mov
xchg
dec
add
or
xchg
jmp
sub
arpl
pusha
mov
enter
and
push
jo
pop
mov
mov
add
nop
pop
pop
fidivs
fistps
adc
shlb
inc
nop
mov
shlb
out
lcall
cmp
dec
jbe
pop
outsl
and
cmp
dec
dec
hlt
sub
adc
addr16
and
lahf
nop
loope
push
pop
outsb
dec
jp
ret
nop
fldcw
dec
jbe
cmpsl
scas
out
lret
ss
push
push
push
fidivs
sub
test
inc
mov
push
push
jg
ret
repnz
add
sahf
ss
xorb
iret
dec
stc
stc
shlb
enter
xchg
xchg
jg
lahf
mov
inc
iret
imul
in
mov
cmpsl
dec
int3
js
dec
xor
fdivl
lods
mulb
inc
nop
push
inc
push
mov
inc
cld
xor
sub
mov
adc
push
mov
pusha
pop
jo
repnz
dec
ss
push
and
nop
add
pop
mov
cmpsl
dec
lods
sti
lahf
clc
or
mov
pop
inc
push
into
outsb
in
dec
cmpsl
xchg
pop
sbbb
sbb
icebp
scas
xchg
xchg
addr16
test
push
cs
or
fimull
fwait
pop
into
sarl
loope
mov
shll
addr16
daa
inc
aad
into
mov
inc
shlb
aaa
cmpsl
jae
push
xchg
xchg
jns
pop
push
push
push
mov
ds
inc
pusha
cmpsl
arpl
jbe
mov
mov
sbb
jg
fistps
xlat
loop
sub
xchg
push
xor
addr16
pop
sub
mov
gs
ficoms
add
loop
aaa
mov
xor
pop
sahf
push
rol
pop
outsl
dec
aad
iret
rolb
xchg
cli
mov
jbe
push
into
gs
jg
jge
and
mov
pop
ja
inc
sub
add
push
daa
aas
add
loop
xchg
pop
pop
inc
je
int
js
cmp
ds
call
push
dec
dec
cmpsb
xchg
loop
xchg
inc
fstps
inc
mov
push
sub
mov
data16
xchg
das
addr16
mov
adc
add
outsl
nop
inc
sahf
daa
xchg
inc
adc
das
push
test
lea
xchg
sub
nop
push
lahf
adc
jmp
cmpsb
les
jo
ficoml
jno
mov
call
adcl
out
jle
sahf
cs
xor
mov
fs
daa
pop
xor
or
notl
xor
jp
pushf
lret
clc
cmpsl
mov
mov
pop
daa
xchg
scas
fidivs
das
push
dec
jo
cmp
jns
aaa
es
ljmp
pop
push
sahf
ds
sub
into
sub
stos
jl
and
lock
jo
ret
testl
inc
jbe
pusha
xchg
sbb
mov
aaa
cmpsl
mov
fcmovne
lods
es
inc
call
xchg
mov
sarl
test
xchg
push
js
jo
jo
adc
rcr
int
das
imul
xchg
daa
pop
cmpsb
mov
fnstsw
clc
loopne
loopne
cwtl
fcoml
xchg
xor
out
outsb
mov
pop
jle
dec
ds
pop
pop
ja
pop
mov
int
cmpsl
push
push
cli
lods
ja
icebp
scas
xchg
popf
pop
inc
jbe
cmc
mov
mov
enter
int3
daa
cmpsl
insl
xchg
rcrl
push
push
push
and
std
in
dec
xchg
and
arpl
fildll
pop
xor
push
aas
hlt
cmp
das
pop
pop
add
ss
pop
aaa
into
xchg
cmp
and
dec
fptan
xchg
sbb
out
inc
cs
ffreep
mov
mov
lods
divb
rorl
fstps
out
pop
pop
xlat
dec
sahf
in
daa
push
jo
mov
mov
fnstenv
mov
jl
cltd
pop
fiadds
cwtl
and
push
jg
in
aas
cmpsl
xor
gs
sahf
cmpsb
jno
cmp
xor
fadds
lahf
dec
data16
outsb
pop
sub
push
xor
xchg
jo
push
daa
pop
leave
mov
ret
pop
lods
and
jns
and
push
or
pop
in
inc
push
xchg
cmp
pop
in
fimull
int
push
es
xchg
cmp
xchg
pop
outsb
mov
pop
jg
mov
xchg
inc
pusha
and
adc
pop
ss
sub
push
loope
mov
cmp
add
pop
pop
pop
nop
cld
movsl
fs
push
xchg
push
jg
iret
mov
mov
ja
lods
inc
out
gs
cmc
adc
jle
mov
repnz
inc
lahf
pusha
mov
sbb
cs
cltd
xor
mov
notl
xchg
pop
mov
lret
das
mov
push
popf
popf
rorl
in
push
lds
cmpsl
cs
push
iret
pop
push
test
leave
cmpsb
addr16
mov
lahf
aad
xchg
outsb
in
jo
cmp
xchg
push
aas
jle
sti
ss
fs
fisubs
fidivrs
jecxz
xchg
inc
into
or
cmpsl
mov
mov
pop
into
push
xchg
lods
movsb
fwait
clc
dec
dec
inc
xlat
inc
fcmovne
dec
es
loopne
flds
popf
shlb
clc
adc
clc
fcomps
cmpsb
fistl
cmp
push
xor
pop
scas
xchg
xor
movsb
movsl
push
jb
sbb
cmp
iret
inc
jbe
push
js
into
or
cs
pusha
out
inc
sahf
fistpll
pop
jle
jns
scas
xchg
repz
push
push
loop
popl
pop
push
daa
cmp
outsl
mov
add
xchg
nop
subb
dec
mov
push
mov
inc
lea
pop
pop
loopne
mov
mov
dec
inc
daa
hlt
adc
out
insb
adc
xchg
addr16
pop
mov
adc
sub
add
into
leave
cmpsb
mov
daa
mov
jns
pusha
sbb
stos
iret
jbe
rep
mov
cmpsb
xchg
mov
sub
pop
pop
scas
sahf
pop
andl
ficoms
in
add
and
test
xchg
xchg
xor
sbb
mov
popf
shll
std
loope
push
dec
xchg
lahf
push
push
outsb
icebp
jno
mov
lret
add
xlat
adc
into
in
inc
xchg
mov
inc
xchg
dec
fidivrs
xor
mov
out
es
push
fildll
pop
xchg
ror
aad
dec
out
js
aad
xchg
lds
ds
or
xor
mov
cmpsl
inc
pop
pop
inc
nop
in
pusha
stc
push
scas
mov
inc
flds
cmpsl
push
xchg
push
lods
push
jae
scas
into
mov
addr16
sarl
fildl
add
mov
push
mov
dec
push
adc
daa
cmpsb
xchg
mov
call
inc
dec
dec
jecxz
mov
std
aas
jmp
addr16
pusha
and
xor
dec
xchg
testl
dec
leave
imul
mov
sbb
push
xchg
cwtl
leave
dec
aaa
pop
jmp
mov
stos
mov
xchg
mov
enter
clc
scas
add
aas
pop
cmp
ja
outsb
stc
inc
dec
outsb
lds
test
cltd
cmpsl
and
sub
xor
lret
add
loopne
ret
fs
scas
sbb
fmulp
and
sarl
dec
repnz
mov
add
mov
push
addl
lahf
or
inc
das
lock
adc
in
addr16
sub
scas
jbe
xchg
sti
ds
fwait
xchg
bnd
mov
mov
ds
inc
fstl
scas
nop
inc
test
js
add
push
cmpsb
rcll
pop
xchg
pop
sub
sbb
shll
push
mov
outsl
call
ds
fstl
out
dec
xor
cmpsb
icebp
jg
lret
mov
pop
pop
loope
dec
outsb
jbe
shl
jecxz
inc
jmp
inc
shlb
and
cmpsl
call
nop
push
and
sbb
dec
pop
repnz
movsl
lret
dec
push
inc
xor
push
cmp
pop
push
scas
mov
sbb
cmc
cmpb
imul
push
add
fcoml
mov
push
jbe
dec
jo
mov
mov
outsb
dec
xchg
fstps
sub
push
iret
mov
or
cmpsl
xor
cmpsl
and
pmullw
push
dec
loopne
out
das
and
cmp
clc
sahf
or
loopne
jmp
fmulp
jg
lahf
clc
add
lret
mov
push
shrl
popl
arpl
cmpsl
inc
mov
mov
xchg
add
push
inc
es
ss
dec
mov
lahf
sahf
pop
sbb
iret
add
data16
dec
cmp
cmpsl
sub
lret
addr16
pop
mov
dec
jo,pn
jle
push
fdivp
jb
sbb
and
lret
mov
mov
es
xor
push
mov
insb
hlt
out
push
dec
pop
daa
sahf
cs
mov
into
mov
mov
mov
push
jle
es
pop
clc
adc
shll
pop
icebp
in
and
push
pop
aaa
in
jb,pt
push
mov
xchg
ds
hlt
push
lret
jo
mov
cmpsl
xor
jne
ja
je
loope
iret
inc
inc
aas
out
jo
leave
xchg
xor
outsl
and
add
xor
jns
push
xchg
cmpsl
ljmp
mov
mov
leave
repz
or
add
out
dec
out
pusha
out
pop
fimuls
xchg
mov
cs
fidivrl
inc
stos
push
cmp
cmpsl
int
aaa
add
pop
adc
xchg
enter
outsb
cmp
and
pop
mov
rcll
dec
jecxz
mov
mov
and
push
data16
ja
fcmove
push
ja
lahf
inc
addr16
add
clc
les
cmpsb
push
jle
xchg
mov
or
mov
lahf
push
call
lret
cmc
mov
dec
pop
jb
xor
xlat
es
inc
lahf
pop
out
dec
hlt
lock
push
enterw
fnstsw
sahf
inc
dec
push
jbe
daa
cmpsl
cmc
test
mov
enter
fnstsw
mov
outsl
bound
jecxz
into
jo
xchg
addr16
sub
cs
aad
scas
out
scas
xchg
push
push
dec
bound
inc
dec
pop
in
dec
fistpll
pop
pop
iret
popf
es
jle
out
pop
xchg
lock
pop
mull
and
cs
push
fbld
jg
gs
pop
push
mov
xchg
fnstenv
mov
fisttps
aas
out
lds
mov
imulb
loopne
scas
xchg
adc
mov
jmp
xchg
dec
test
aam
out
lahf
dec
sahf
push
mov
mov
inc
push
scas
test
mov
test
sub
bound
lret
xchg
roll
sbb
adc
dec
aas
daa
into
cmp
daa
fists
ds
pop
and
pop
mov
fildl
cmp
pop
out
dec
call
jbe
icebp
cmpsb
mov
stc
mov
lods
mov
repz
fistl
add
xor
out
fiadds
lahf
jns
mov
into
or
fs
into
aas
sub
inc
cmp
inc
std
dec
inc
movsl
mov
sbb
or
daa
in
lcall
push
mov
and
pop
scas
jg
jecxz
ss
aas
add
xchg
jo
jns
fisubs
stos
ds
push
mov
ljmp
ds
nop
movl
xchg
xchg
push
sub
jb
push
nop
jg
inc
sbb
pop
mov
jbe
scas
and
dec
fcomi
pop
pusha
pushf
jmp
mov
and
loop
fidivrs
es
daa
xchg
push
push
pop
iret
loope
push
xchg
ss
add
movl
dec
ss
mov
dec
repnz
cmp
push
cmpsl
pusha
sarl
mov
lcall
sbb
pop
movsl
es
clc
repz
push
jne
dec
jecxz
into
sahf
sub
pop
pop
shll
pop
jle,pt
addr16
cmp
xchg
popf
lds
xchg
jl
fisttpll
lock
andl
pop
out
push
xor
std
xchg
cmp
xchg
insl
jecxz
xchg
and
push
pop
push
outsl
pop
add
icebp
dec
adc
inc
add
mov
mov
pushf
mov
dec
mov
cltd
popf
pop
add
mov
add
ja
inc
dec
sub
scas
mov
sbb
cmpsl
out
xchg
lahf
lods
cmp
outsb
pop
pusha
push
sahf
das
add
fsubrp
outsl
fbstp
mov
xchg
fisttpll
mov
es
rcrb
ljmp
mov
pop
dec
push
rcr
jg
data16
fcompl
push
shll
pop
shrl
sahf
xor
ss
arpl
outsl
pop
sub
out
aad
jbe
fimuls
xlat
jnp
je,pt
ljmp
fpatan
xchg
fbld
xor
lds
rorl
xchg
fst
iret
mov
push
dec
js
fildll
xlat
out
rol
pop
mov
dec
cli
popf
mov
add
andl
xchg
jp
mov
cmp
inc
js
inc
inc
test
and
dec
xchg
pop
or
ja
dec
es
mov
iret
push
mov
jmp
or
aas
push
scas
xchg
cmpsb
cmp
cmpsl
jnp
sbb
sar
ficoms
fimuls
pop
hlt
mov
sbb
imul
mov
dec
es
daa
xchg
sahf
stc
std
rcrl
test
out
mov
mov
add
orl
mov
insb
iret
aam
loopne
outsb
daa
push
imul
cmpsl
xor
aaa
fwait
xor
in
sar
aaa
and
lods
rclb
cmpsl
mov
dec
pop
xor
inc
enter
movsl
sub
push
popf
ret
and
mov
and
fs
rolb
pop
xor
pop
and
stos
xchg
push
adc
pop
outsl
xor
scas
cs
adc
scas
lods
sbb
aad
inc
iret
js
data16
add
das
xlat
repz
cwtl
js
xchg
fdivrl
das
pop
cmp
pop
into
repz
sbb
add
jno
lea
data16
or
test
and
int3
mov
cmp
ds
cmpsb
mov
xor
mov
std
mov
into
cmpsb
push
jno
aad
xor
dec
xchg
pop
inc
ds
daa
inc
inc
lds
dec
mov
xchg
push
clc
cmp
push
cmc
loope
fisubrs
cmp
dec
pop
pop
dec
sbb
push
jl
daa
lret
pop
test
sub
js
or
add
sarl
repz
repnz
ljmp
dec
mov
inc
pop
push
in
dec
sub
and
inc
jg
jo
scas
dec
lret
add
ds
cmpsl
dec
arpl
cmp
add
in
pusha
mov
jb
stc
nop
cmpsb
adc
adc
lock
jecxz
cmpsl
push
ja
das
mov
das
fistps
inc
mov
jp
pop
push
fstps
aaa
dec
mov
fcmovne
daa
sti
pop
loopne
jbe
sbb
cmpsl
fisubs
bound
xor
adc
mov
data16
cmpsb
ja
inc
add
jmp
lahf
lock
push
and
jl
out
pop
xchg
out
xor
outsl
add
ds
leave
cmpsb
xchg
mov
jno
pusha
mov
dec
lahf
loope
ja
mov
jno
jns
ss
loop
int
or
icebp
clc
in
frstor
pop
daa
scas
push
push
ss
leave
lahf
jo
mov
mov
and
cmp
loopne
dec
leave
cmp
stc
cmp
and
scas
xchg
icebp
test
daa
inc
outsl
jg
mov
pop
lods
push
or
sub
and
mov
js
dec
aad
ds
outsb
sti
daa
and
mov
sbb
fs
cltd
mov
and
xchg
jns
dec
xor
lods
push
fisubrs
push
aad
lahf
ss
and
ja
inc
mov
and
and
pop
ds
iret
mov
inc
push
cmp
addr16
jbe
mov
dec
outsb
dec
push
push
ja
xlat
lret
pop
jl
int
jbe
ret
jb
xchg
jg
lcall
and
aaa
push
mov
scas
push
data16
dec
jg
sbb
iret
bound
xlat
ss
jns
es
cmpsl
cmp
cmp
leave
bound
adc
shll
push
imul
pop
or
jbe
daa
daa
sahf
sbb
ss
out
add
outsb
roll
lods
adc
das
arpl
pop
jle
add
cmpsb
add
xor
jne
push
fbld
mov
mov
dec
or
mov
nop
cmpsl
push
push
mov
testl
sbb
mov
push
mov
xchg
inc
outsl
push
ror
enter
aas
pop
lods
rorb
ret
xchg
push
add
push
icebp
inc
ja
pop
inc
cmp
mov
lahf
pop
inc
aas
adc
stc
icebp
xchg
and
or
push
je
lret
sub
loope
sub
adc
push
std
call
xlat
loop
ss
pusha
das
push
lret
mov
sub
repz
imul
xor
push
leave
sub
inc
jne
ss
cmp
das
aad
imull
xchg
add
mov
xchg
pop
xchg
xlat
cmc
iret
shrl
orb
jle
jbe
shlb
fisubs
and
push
arpl
cmp
fwait
and
out
jle
inc
aas
dec
fs
fimuls
push
xor
xlat
scas
inc
jno
ficoms
sbb
push
repz
adc
pop
pusha
ret
sub
mov
dec
data16
lock
xor
ret
pop
jo
mov
or
mov
jne
les
or
enter
cmp
xlat
push
aas
cmpsl
fistpl
inc
jne
sbb
pop
pop
sarb
inc
jns
cmp
sub
scas
push
jns
jle
aaa
xlat
jae
fisttpl
push
mov
pop
and
sub
pop
mov
jg,pt
iret
arpl
mov
mov
push
push
outsl
pushf
xchg
scas
add
in
mov
addr16
inc
aas
push
push
ljmp
push
mov
nop
sahf
cmpsl
addr16
push
leave
jne
scas
int
dec
dec
ds
add
cs
enter
sub
lea
test
fs
xor
in
inc
jle
ljmp
push
sub
fildl
sahf
aaa
xchg
jle
lods
push
outsb
lock
xchg
mov
xor
push
imulb
cld
dec
cmpsl
inc
sbb
in
out
pop
xlat
adc
xchg
stos
mov
daa
das
into
dec
push
inc
and
enter
ja
jbe
push
xchg
mov
add
and
sub
jnp
scas
iret
xor
in
dec
rcr
push
ljmp
pop
add
mov
shll
pusha
and
mov
xchg
push
pop
ds
nop
mov
psrlw
push
cmp
call
xlat
fiadds
xchg
dec
jbe
scas
es
ficoml
lea
push
aad
ja
inc
lock
sub
shlb
jg
fiaddl
jno
aas
dec
dec
xor
sub
shll
mov
iret
cmp
fwait
daa
decb
push
outsl
cmp
mov
push
dec
addr16
and
push
ja
fdivp
jmp
mov
rclb
xor
mov
adc
jmp
xor
mov
cmp
lahf
gs
and
inc
xchg
sub
push
jbe
sub
dec
cmpsl
pop
dec
push
cwtl
or
xor
cbtw
mulb
scas
mov
scas
push
in
fisubrl
jo
or
cmpsb
data16
or
add
es
xor
fiadds
ss
xchg
xor
jo
sahf
out
enter
push
ss
fdivrs
fucomip
ficomps
les
shlb
inc
scas
mov
gs
fisubrs
repnz
push
mov
xchg
sub
test
push
inc
xchg
push
cmpsl
sarb
sbb
mov
xchg
push
pop
push
pop
aas
popf
mov
jecxz
cs
xor
xchg
pop
pop
or
outsl
dec
in
mov
fisubs
ss
scas
lahf
add
xchg
out
jle
jo
aam
sbb
aad
scas
insb
pushf
das
jge
push
rclb
xlat
pop
xchg
cmpsl
aas
in
ds
push
mov
xchg
add
push
faddp
cmpsl
sbb
out
mov
in
and
fsubl
mov
mov
sti
adc
int3
mov
pop
cmpsb
cmc
jbe
iret
adc
es
cmp
and
push
scas
cmp
adc
xor
sub
cmpsb
ss
scas
jg
iret
or
daa
pop
int
dec
nop
push
and
or
jle
aaa
xchg
mov
in
jns
mov
cmpsl
out
lock
clc
aas
inc
fs
pop
cs
cmp
mov
mov
dec
and
in
sub
sub
mov
add
fisubl
aad
xchg
dec
sbb
aas
outsl
mov
into
pop
data16
pusha
xor
rolb
cmc
mov
xor
adc
ds
lock
cmp
push
jg
pusha
in
dec
fiadds
add
push
dec
movsb
mov
iret
cmp
cmpsl
leave
fsubl
mov
mov
mov
sub
outsl
and
es
movntq
xchg
jo
inc
ja
pop
fildll
loopne
hlt
mov
mov
lds
mov
cmp
add
push
ds
daa
lock
addr16
and
loope
mov
outsb
data16
fdivp
xchg
lret
inc
movsl
pusha
jg
subl
movsb
out
xor
lcall
push
and
pop
and
sbb
iretw
or
cmp
sbb
or
shlb
sub
mov
pop
mov
pusha
call
fld
cmpsl
repnz
or
pop
icebp
loopne
shlb
xchg
dec
data16
ss
orb
addr16
xchg
push
xor
xchg
mov
ss
cs
iret
addps
or
xchg
es
and
xchg
popl
fs
jecxz
mov
sbb
pop
xchg
jp
or
dec
js
jl
dec
ficoms
xchg
pushf
cmp
les
aas
pusha
adc
mov
cmp
cmpsb
xor
jo
mov
test
outsb
xchg
jbe,pn
push
pop
jg
jnp
pusha
movsl
repz
pop
insb
imul
ja
mov
cmc
xlat
les
ret
mov
mov
scas
xchg
mov
add
outsb
pop
nop
jp
and
in
fiadds
ja
adcl
hlt
xor
inc
das
mov
push
push
ds
ja
sbb
lahf
leave
das
xchg
and
and
push
inc
lods
leave
jle
xchg
rcll
xlat
xchg
call
and
pop
push
es
and
mov
inc
repnz
cmpsb
das
inc
xchg
subl
add
pop
inc
jle
and
mov
cmp
into
das
xchg
mov
int3
fildll
jnp
daa
pop
xchg
push
test
mov
loop
push
scas
jbe
push
aaa
push
js
pop
push
xchg
ds
mulb
test
and
pop
out
aas
mov
add
adc
mov
lds
dec
push
outsb
mov
jbe
lock
fdivrp
and
enter
jns
popl
xor
shlb
fbstp
out
ja
add
mov
sub
xchg
cmpsl
cs
dec
push
pusha
mov
lds
mov
das
mov
mov
aaa
jo
push
sarl
mov
and
dec
or
imul
decb
mov
insl
iret
cmpsb
fsubl
ds
mov
das
lds
and
iret
rclb
repz
pop
ss
rep
push
scas
xchg
xor
das
lret
leave
sbb
push
jg
js
jmp
lods
jns
imul
fidivs
mov
mov
inc
push
cwtl
and
pop
mov
dec
cltd
mov
dec
inc
insb
mov
scas
outsb
idivb
pop
lahf
or
xchg
mov
ret
push
int
jle
mov
or
dec
jns
push
jbe
mov
ja
das
xlat
mov
stos
pusha
pop
mov
in
inc
outsl
xchg
leave
sbb
int
filds
cltd
in
jg
pusha
fs
loope
mov
push
rcr
adc
out
ss
push
xchg
xor
data16
push
imulb
das
hlt
inc
xchg
pop
test
out
jle
push
push
xor
xor
sahf
mov
fsubr
loopne
clc
pop
inc
test
and
pushl
and
push
pushf
pusha
lret
idivb
or
daa
js
push
mov
mov
fisubs
outsb
push
int3
mov
pop
push
pop
pop
test
lds
push
cmp
xchg
xlat
ljmp
mov
ficomps
ja
add
ret
xchg
addr16
add
mov
xor
out
jg
je
and
jo
addr16
shl
loope
push
aaa
fiadds
adc
mov
or
inc
aas
pop
push
arpl
outsl
or
xor
es
push
pop
xor
faddp
xchg
xor
inc
shll
add
mov
pop
shll
push
cmpsl
pop
mov
lods
ds
mov
jg
leave
iret
ja
mov
data16
dec
lret
add
jle
cmpsl
xchg
pop
lret
in
daa
and
push
push
xor
inc
mov
cmpsb
loope
ja
push
jecxz
cmpsl
push
sub
mov
enter
sub
cmp
lahf
clc
push
adc
icebp
lret
add
mov
es
enter
pop
or
add
xchg
pop
sub
mov
xlat
sahf
ds
std
push
push
ret
mov
inc
mov
ror
out
mov
ds
xor
adc
sub
pusha
add
rcll
iret
inc
lret
popa
mov
jno,pn
mov
mov
cmpsb
jbe
adc
and
push
in
mov
jo
lret
pop
xchg
daa
inc
add
jle
sarl
pop
xlat
pop
aaa
cli
scas
enter
mov
jbe
push
popf
mov
jne
adc
pop
mov
pop
aaa
or
ds
js
push
out
push
cltd
in
es
cltd
pop
cmpsl
xor
icebp
ds
push
scas
insb
push
fldenv
dec
sarb
lret
pushf
push
insl
sahf
add
lea
xchg
scas
aaa
out
aad
push
and
testl
outsl
lret
sti
sub
andl
adc
adc
es
push
pop
jg
mov
push
in
fld
data16
pop
xchg
and
cmpsl
iret
lahf
push
out
cmpsb
fisubs
gs
jnp
arpl
mov
pusha
add
inc
push
cltd
inc
jl
mov
push
fistps
push
jne
std
je
cwtl
cmp
xchg
push
cmpsl
jo
mov
pop
and
fidivl
shll
xchg
mov
push
push
outsb
sub
or
ret
fiadds
xchg
lahf
dec
add
jecxz
ja
fs
mov
fildll
xor
daa
xor
mov
jno
dec
sub
push
ss
and
leave
adcl
jbe
dec
adc
inc
push
fnstenv
mov
push
xchg
lock
fs
cli
inc
fisttps
cs
out
pop
ficomps
add
lods
outsb
call
data16
aam
xor
dec
mov
in
push
pop
loope
pop
push
pop
dec
fisubrs
call
rcll
inc
out
jno
dec
inc
xlat
inc
mov
inc
jne
push
fnsaves
pop
xlat
pop
xchg
push
gs
test
mov
in
daa
cmpsl
in
push
mov
mov
jl
inc
cmp
add
push
sar
outsl
jecxz
sahf
and
aad
xchg
into
lret
pop
into
cltd
addr16
out
push
xchg
jle
outsb
mov
and
push
outsb
jns
shlb
ja
dec
push
aam
aas
xlat
andb
fdivrl
data16
jb
cmpb
ret
jae
mov
cwtl
out
adc
ret
mov
test
mov
ja
lds
lahf
inc
arpl
outsl
xchg
test
outsb
xchg
icebp
push
pop
out
outsb
inc
jo
addl
addl
sahf
xchg
inc
daa
inc
rcll
test
xchg
push
imul
cmp
bound
mov
or
jp
sub
xchg
sbb
xchg
cltd
scas
das
mov
fsubs
outsb
adc
push
movsb
jb
loope
jns
push
fs
shrb
pop
push
xchg
push
imul
xchg
incl
adc
mov
ret
test
pop
bound
and
mov
addr16
das
cmp
addr16
outsl
sub
es
outsb
das
iret
cmpsl
idiv
dec
push
pop
adc
xchg
mov
arpl
gs
and
push
pop
daa
aas
dec
jle
inc
jae
pushf
push
push
pop
sub
xchg
lock
inc
pop
scas
iret
outsb
in
into
daa
cmpsb
scas
and
xor
nop
xor
jb
shr
fildll
addr16
cmp
lea
xlat
mov
stc
sbb
jg
pop
dec
stos
pushf
fbld
xor
inc
gs
cmp
xchg
sub
cmp
aam
fildl
repnz
push
clc
shrl
mov
adc
rorb
mov
outsl
jecxz
es
xchg
sahf
dec
and
xchg
outsb
loop
fidivs
iret
dec
pusha
jbe
data16
cs
push
scas
push
in
xchg
dec
mov
pop
push
mov
mov
add
int3
nop
pop
mov
or
mov
into
jp
add
das
outsl
mov
lcall
jle
cmp
outsl
pushf
cmp
pop
cmp
lret
dec
dec
rolb
ret
sbb
aad
into
das
fiadds
cmp
loopne
push
faddl
xchg
movsb
xchg
and
fs
dec
std
add
or
movl
aaa
sbb
in
pop
scas
shrb
cmp
sbb
mov
mov
loopne
jno
dec
pushf
mov
push
dec
fistl
xchg
xor
xor
push
add
xchg
cmp
movsb
or
adc
and
js
mov
fldcw
pop
pop
jecxz
xlat
fs
mov
das
lcall
test
cmp
xor
fs
gs
out
mov
gs
and
das
dec
cmpsl
mov
insl
inc
loope
xor
or
inc
dec
mov
and
out
inc
push
dec
mov
mov
cmpsl
mov
pushl
push
dec
das
ljmp
int
xchg
push
or
mov
mov
push
inc
ret
pop
push
icebp
lods
xor
popa
adc
push
cs
cmpb
ss
leave
cmpsb
xchg
shr
mov
cs
daa
push
fmuls
push
inc
in
xchg
out
cwtl
movsb
jb
stc
bound
push
mov
pop
push
scas
jp
push
mov
hlt
jns
inc
daa
insb
jle
add
add
mov
sahf
shrb
jns
das
push
nop
jb
cmp
mov
mov
sub
pop
xor
jae
pop
into
daa
cmpsb
mov
jle
xor
fsubl
out
adc
adc
jnp
or
add
icebp
xchg
fimuls
into
icebp
mov
xchg
frstor
dec
mov
mov
add
mov
xor
mov
nop
dec
fimull
call
and
pop
das
push
xor
dec
pop
lahf
into
sarl
shll
sarl
cmp
out
mov
pop
daa
xor
test
es
hlt
push
add
xchg
cmpsb
mov
push
push
mov
gs
pop
mov
add
jbe
iret
mov
gs
int3
dec
cmp
dec
push
mov
outsb
lahf
cmp
push
movsl
add
cmp
and
cmp
ret
and
xchg
and
ja
cmp
add
daa
xchg
xchg
roll
lahf
mov
push
test
pop
sub
call
mov
sub
daa
push
push
mov
pop
push
test
std
pop
pop
dec
dec
xchg
ds
sbb
popa
int
jo
sub
xchg
mov
sub
pop
cmpsb
insl
mov
inc
mov
jb
addr16
cld
fimuls
aas
scas
mov
js
sbb
aaa
pop
xor
inc
jno
inc
rcll
in
data16
dec
gs
inc
pop
fs
and
xchg
lods
sbb
sbb
mov
ss
mov
lahf
xchg
iret
cli
ret
out
stos
dec
insb
xor
fbld
dec
inc
mov
ss
addr16
imul
cwtl
push
icebp
pop
iret
iret
dec
jg
scas
rol
lea
lea
nop
mov
jae
pushl
or
pop
movb
std
outsb
sbb
dec
add
jle
mov
incl
pop
pop
sbb
addr16
jbe
xor
addl
jg
std
jecxz
mov
mov
pop
xchg
xchg
ficoml
out
xchg
and
es
pop
inc
xchg
cmc
dec
pop
outsl
shrl
std
stos
ja
bound
inc
sub
jle
leave
mov
lret
mov
rcll
jecxz
scas
dec
dec
das
pop
daa
fs
push
iret
es
sub
into
xchg
mov
xchg
mov
pusha
push
scas
imul
push
push
into
and
add
or
mov
sub
cmp
add
scas
sbb
inc
adc
in
fstpt
xor
loopne
jmp
mov
and
aaa
xchg
sub
imul
and
jns
in
pop
push
and
dec
push
ds
fstpt
mov
fildll
inc
push
xchg
idivb
jle
jns
scas
pop
sbb
add
dec
add
sbb
add
dec
aaa
add
adc
pop
dec
cmpsl
add
xor
pop
decl
in
stc
inc
stos
xor
adc
mov
add
nop
jle
mov
mov
in
mov
mov
cmpsb
daa
into
xchg
aaa
push
es
lds
daa
xchg
cmp
movsb
bound
sub
jo
sub
daa
jg
push
mov
movb
ret
push
add
and
stc
cs
push
es
loop
xor
ja
jbe
jecxz
push
outsb
inc
pop
and
das
iret
insb
mov
pop
and
jb
pop
movl
xor
notb
daa
sbb
sbb
inc
aas
add
sub
das
es
iret
pop
xor
hlt
andb
dec
shll
pop
fcmovu
fidivs
nop
pop
dec
xor
pop
sti
xchg
push
pusha
es
xor
lcall
pop
mov
dec
and
mov
dec
pop
xchg
popa
mov
push
in
ds
pop
lahf
addr16
jg
aas
sbb
iret
fldenv
push
das
and
loope
adc
jae
rorl
add
repnz
xchg
and
push
scas
mov
cmpsl
sub
inc
xor
les
xlat
dec
outsb
inc
outsb
jmp
aas
shl
or
enter
ffree
mov
loope
xchg
inc
cmpsl
push
imul
int
imull
int
mov
bound
cmp
bound
test
mov
fimuls
stc
into
jle
repnz
xchg
sarl
jg
ficomps
outsb
cli
add
hlt
js
push
outsl
test
scas
ror
fsubr
imul
fildll
jge
fimuls
push
es
xor
jle
xchg
fsubl
cmc
sub
mov
out
sub
in
das
and
push
out
daa
mov
pop
shlb
mov
adc
outsl
das
push
push
cmpsb
cmpsl
inc
les
pop
daa
nop
mov
mov
fwait
jecxz
dec
jbe
jecxz
adc
push
ss
pop
fimuls
cmpsb
pop
mov
cmp
enter
sub
imul
fistps
adcl
xchg
jae
xor
shl
push
movsb
rcrb
mov
dec
ja
lahf
pop
scas
pusha
sub
add
xchg
mov
das
cmpsb
dec
enter
and
mov
and
es
cmp
sub
bound
xor
xlat
es
pop
sahf
stc
xor
xor
xlat
mov
pusha
lret
mov
and
cwtl
dec
inc
icebp
lahf
hlt
cmp
jns
ds
jmp
aas
dec
ja
lret
xchg
data16
add
lret
insl
mov
int3
pop
cli
xor
dec
sub
nop
pop
pop
mov
ds
ss
pop
pop
pop
adc
or
ss
fldl
jle
bound
stc
lahf
push
lret
mov
cmp
fcoms
loop
outsb
mov
jbe
xchg
push
loope
push
inc
fmulp
xor
loope
push
xlat
mov
into
lahf
inc
cmp
sahf
das
lock
or
addb
push
sub
cmpsb
repnz
aas
jnp
xchg
pop
push
mov
fcmovnb
push
daa
stos
jno
inc
mov
sub
mov
movsb
rolb
cltd
pop
iret
xchg
mov
add
xchg
push
pop
inc
fisubl
push
cmpsl
jg
pop
xor
jecxz
pop
xor
gs
sub
aad
nop
mov
cmc
hlt
aaa
xchg
sub
fs
cmpsl
cltd
data16
mov
jg
sub
jecxz
push
add
sub
fiadds
in
ss
ja
jo
pop
lahf
pop
and
cmpsb
add
leave
mov
lds
call
add
clc
sahf
dec
add
xlat
push
fsubl
test
push
push
adc
fidivl
iret
cs
xchg
push
das
and
adc
scas
pop
out
cmpsb
ljmp
jle
cld
xlat
xchg
out
enter
mov
ss
out
mov
popf
push
and
inc
cs
addr16
es
popf
mov
dec
dec
pop
xchg
cmp
aaa
sti
pop
dec
je
scas
cmpsl
mov
pushf
sub
pusha
adc
andb
push
mov
int3
pop
jecxz
xchg
aaa
inc
ds
sahf
andb
or
xchg
in
dec
ja
outsl
xchg
frstor
jb
ret
push
jbe
add
test
adc
ret
ds
mov
jmp
mov
xchg
into
fmulp
dec
sbb
cmpsl
in
sbb
inc
mov
and
outsb
arpl
add
adc
sub
aas
inc
ja
out
adc
pop
pusha
out
push
jbe
pop
aaa
addr16
jbe
xchg
adc
sub
inc
mov
jo
mov
ja
jp
sub
xor
loope
mov
clc
dec
xchg
xchg
add
dec
xchg
fldt
dec
sbb
mov
and
push
pop
mov
adc
or
in
cmpsl
jle
in
push
mov
jl
inc
cmp
dec
pop
add
outsl
mov
pop
in
xor
push
ljmp
adc
push
and
push
inc
mov
push
cmp
inc
jecxz
mov
sbb
ss
and
repz
addr16
in
js
fstps
daa
cmpsb
jle
out
mov
dec
fs
inc
xchg
sub
dec
sbb
scas
mov
daa
pop
lahf
aam
lea
je
and
pop
fistps
negb
nop
push
pop
xlat
into
inc
lds
es
movsl
mov
mov
mov
push
mov
leave
cmpsb
sbb
pusha
cmpsb
fdivrl
scas
into
ja
mov
std
lods
cmp
js
and
and
fisubs
addr16
push
mov
jno
outsl
lock
push
lret
in
mov
adc
fstp
xor
lahf
cmpsl
in
in
push
push
sub
xchg
dec
mov
sub
sub
negb
pop
flds
pop
jbe
call
jge
add
js
xor
xchg
sub
pop
inc
iret
pop
fildll
ljmp
cmc
mov
daa
cs
dec
ss
jno
sub
or
fistpll
cmp
aam
inc
iret
and
sti
jb
icebp
popw
dec
movsb
xchg
push
into
pop
aad
xor
push
push
fwait
scas
in
pop
and
inc
mov
outsb
mov
fdivrl
cmpsl
outsb
push
aad
scas
sbb
jle
jnp
mov
add
sub
xlat
out
inc
scas
dec
scas
dec
xor
shlb
outsb
pop
mov
pop
aaa
pop
push
inc
fs
xlat
cmpb
rcr
sub
into
xchg
jmp
cmpb
stos
dec
pop
push
push
jmp
add
in
jg
jle
jo
daa
nop
es
jmp
pop
add
leave
scas
movsb
test
outsb
xchg
sbb
xor
mov
stos
push
inc
push
fs
into
mov
inc
aaa
movsb
inc
push
add
jg
xchg
cmpsb
sub
in
mov
enter
mov
sbb
mov
aaa
movsl
push
and
and
pop
mov
lahf
scas
dec
xchg
xchg
cltd
xor
scas
aaa
xlat
pop
lahf
xor
push
sbb
enter
pop
push
fcoml
dec
lahf
mov
xchg
inc
aam
dec
in
inc
mov
mov
jg
pop
pop
push
into
mov
pop
xchg
fs
nop
cmp
jb
cmp
mov
mov
push
ja
add
pop
dec
cmp
faddl
test
pop
aas
inc
call
adc
xchg
push
xchg
and
mov
and
pusha
outsl
push
adc
js
fisttpl
nop
mov
inc
call
scas
and
xor
pop
nop
outsb
rol
lods
pop
xlat
push
aaa
lret
aad
xchg
rcrl
enter
mov
push
mov
stc
add
mov
je
cld
ljmp
jg
cmp
ror
xchg
fs
std
test
add
test
nop
pusha
xchg
xchg
push
aaa
popf
sbb
out
push
push
jg
hlt
push
fiaddl
mov
fistpll
xchg
cwtl
pop
push
xchg
jg
push
into
ficoms
bound
pop
sbb
fcmovne
sahf
mov
jecxz
ja
loope
xchg
outsb
mov
cli
jge
pushw
fldl
xchg
jecxz
xlat
ljmp
addr16
data16
out
pop
push
sub
ds
xlat
pusha
cltd
cmp
push
mov
loop
dec
pop
inc
dec
mov
push
scas
xor
adc
pushf
stos
test
in
dec
jmp
loope
mov
xor
sub
xchg
mov
push
sub
dec
sub
aad
sub
daa
es
or
mov
push
pop
xchg
stc
lock
push
pop
inc
jo
loop
cmpsl
into
jle
push
sahf
xchg
out
xlat
fiadds
cmpsl
xor
and
es
or
inc
dec
xchg
cld
addr16
mov
dec
jbe
xor
ds
or
pusha
or
loopne
jnp
mov
dec
cmp
scas
lds
pop
sbb
cld
push
loop
addl
sahf
cmpsl
pusha
fldt
cmp
movsl
cmc
scas
outsl
push
push
cmpsb
fsubrp
in
inc
pop
xchg
add
sub
dec
mov
cmp
pop
test
xor
jecxz
dec
push
pop
cmpsl
gs
dec
cs
add
lahf
mov
jg
pop
adc
push
aaa
adc
scas
gs
dec
mov
fildll
sbb
mov
inc
mov
pop
inc
fildl
mov
cmpsl
xchg
iret
jg
inc
add
ja
xor
push
ja
push
shl
aas
outsl
fs
dec
ja
data16
sub
mov
mov
pop
sbb
pop
outsl
sbb
icebp
test
sbb
lock
mov
or
repnz
mov
fists
mov
dec
pop
outsb
ss
push
outsl
mov
dec
addr16
ret
xor
inc
stos
jle
and
cltd
mov
fsubs
fsin
dec
mov
insb
rolb
aas
push
lea
aad
divb
iret
and
xchg
mov
lcall
cmpsl
sahf
fst
ss
mov
enter
xchg
mov
jo
test
mov
aaa
cmp
push
iret
int3
jne
sub
in
dec
outsl
jp
fistpll
or
shll
ss
xchg
call
fsubs
notb
mov
test
js
enter
dec
outsb
jo
add
jecxz
lods
mov
dec
adc
mov
into
sub
rcrb
ret
fists
or
xchg
addr16
lahf
and
notl
xchg
add
test
call
mov
xchg
dec
mov
sub
dec
leave
adc
sahf
aad
jle
inc
and
das
int3
stos
mov
aas
inc
iret
mov
es
inc
jbe
mov
sbb
push
or
push
stc
mov
out
out
leave
jmp
pop
mov
movsb
in
mov
jbe
ja
mov
sub
cmpsl
adc
pop
ja
and
daa
arpl
es
cmpsl
outsb
fwait
push
adc
and
xor
ret
xchg
stos
loopne
leave
or
insl
lahf
push
or
aas
pusha
lds
pop
add
dec
mov
mov
lahf
or
dec
cmpsb
mov
adc
sbb
das
or
inc
in
daa
ja
jbe
mov
addr16
cmpsl
scas
jmp
pop
cmpsb
add
push
push
add
mov
mov
cmp
pop
stc
repnz
cmpsl
shll
mov
test
xor
cs
push
ljmp
pop
enter
dec
dec
add
ror
mov
mull
cmp
push
sbb
aaa
popf
pop
dec
xchg
fdivrp
fstp
push
jo
jl
test
daa
ds
inc
lods
mov
aaa
ss
les
cmpsl
inc
mov
pop
xchg
daa
mov
push
aam
mov
mov
call
sti
adc
pop
or
and
mov
cmp
hlt
mov
push
xor
add
mov
jg
leave
sub
shlb
cmovns
inc
pop
pop
out
xchg
inc
lahf
jbe
mov
ffreep
jle
sbb
lods
cmp
xchg
sbbb
ss
pusha
imul
mov
adc
jg,pt
push
xchg
dec
fwait
cmp
fucomp
jecxz
dec
sub
push
xchg
cli
loopne
daa
cmp
inc
dec
or
fisubs
pop
das
push
pop
dec
sub
ret
cmp
pop
inc
arpl
inc
dec
pop
gs
pop
xchg
or
pop
mov
push
pop
ja
adc
adc
pushf
sbb
fisttpl
addr16
fiadds
jle
cmpsb
xor
fwait
dec
outsl
fwait
outsb
bnd
pop
outsl
out
dec
scas
pop
push
push
mov
data16
les
es
mov
mov
push
into
cmpsl
adc
cmp
or
pop
xlat
jbe
call
out
ss
std
and
outsb
push
mov
loop
inc
mov
aas
push
cs
dec
std
loop
inc
mov
xchg
push
mov
test
fbstp
inc
dec
dec
push
push
mov
pop
jle
dec
ds
jg
ljmp
cmp
xchg
xor
jecxz
mov
pusha
notb
sbb
sbb
xor
inc
gs
add
daa
icebp
push
cmp
fisubrl
cmp
mov
adc
mov
mov
mov
push
inc
sbb
sub
leave
ds
fucom
ds
push
int
inc
js
pusha
sbb
cld
and
xchg
in
sub
data16
ret
leave
mov
push
cs
shll
aas
cmpsb
mov
scas
push
mov
popa
cmpb
daa
mov
loopne
and
gs
mov
cmp
cmpsb
ret
out
push
fisttpll
mov
stc
mov
icebp
fcomip
or
das
nop
dec
push
shll
pop
dec
or
mov
cmpsb
outsb
dec
inc
inc
cmp
mov
adc
jno
pop
mov
lcall
les
outsb
pop
scas
aaa
mov
xchg
daa
scas
cs
xchg
dec
data16
push
repnz
int
and
jp
gs
or
xor
shll
icebp
jbe
mov
and
mov
daa
aaa
mov
push
ss
dec
pop
stos
push
bound
mov
push
and
inc
shl
imulb
nop
jle
and
cmp
sub
stc
scas
ss
aas
iret
push
mov
xchg
cmp
pop
mull
aas
mov
jae
xor
pusha
in
iret
inc
and
aam
insl
pop
stos
dec
dec
stc
lods
push
das
dec
xlat
fidivrs
inc
pop
lahf
and
ja
xchg
testb
fsubrl
nop
into
shll
jo
mov
lahf
cmpsl
jle
lahf
mov
mov
jecxz
mov
fwait
xchg
ret
pop
sub
or
rorl
cmpsb
pop
and
dec
in
fidivrs
dec
aaa
cmp
cs
leave
xlat
pop
inc
mov
mov
ljmp
jg
stos
nop
imul
mov
adc
mov
fisttps
fistl
mov
les
and
pop
push
inc
js
push
push
aaa
repnz
fucomip
mov
jns
ja
xchg
scas
dec
shrl
enter
stc
outsl
inc
push
or
fildll
pop
clc
in
lahf
mov
pop
outsl
pop
mov
dec
mov
pop
out
jne
out
push
push
ds
enter
push
rcll
cmpsb
das
mov
and
push
xor
cmp
inc
pop
xchg
mov
fnstsw
mov
sbb
daa
js
pop
cmp
pop
push
leave
outsb
sahf
pusha
mov
mov
add
add
nop
jecxz
out
in
xchg
jo
add
into
in
and
cmpsl
inc
sahf
add
mov
cmp
lret
mov
bound
ficoms
loope
ss
xor
pusha
pop
fs
mov
dec
es
push
lret
push
jo
jns
ljmp
mov
roll
test
xor
icebp
icebp
jbe
outsb
pusha
scas
push
jnp
lock
and
cmp
mov
in
ss
movsl
test
pop
sahf
xchg
inc
add
outsb
loope
xchg
sbb
ficoml
xchg
xchg
in
mov
xor
mov
and
call
jno
cmpsl
jae
push
imul
fistps
nop
push
xchg
fsubl
ds
jge
andl
jg
iret
addr16
bound
fimuls
rcll
shl
xlat
xchg
daa
rclb
subl
jns
push
addr16
inc
jle
pop
cmpsl
push
xchg
test
mov
cs
rcll
bound
sub
adcb
xchg
aaa
jb
mov
rolw
cltd
int
cmp
or
dec
pop
push
shll
and
sub
cli
adc
gs
pop
addr16
sub
pop
pop
inc
sub
xchg
pop
xor
jnp
adc
jp
fs
andb
nop
das
jbe
push
fdivrl
in
repnz
pop
mov
popf
push
shll
mov
push
xor
inc
dec
xchg
fnstsw
mov
lahf
cmp
dec
jno
inc
jno
das
mov
inc
jns
inc
pop
cmp
fldcw
pop
cmp
jp
outsb
fsubp
push
ja
sub
pop
lea
jne
push
cmp
mov
mov
sahf
mov
push
push
ja
in
mov
push
sub
data16
jle
cmp
add
jns
iret
into
xor
lret
xchg
ret
push
jno
in
inc
xlat
push
mov
outsb
rcrl
pop
xchg
cmp
lret
iret
and
sub
test
xchg
cmpsl
mov
scas
pop
into
loope
xchg
push
xlat
and
addr16
int
xor
scas
mov
mov
fstps
daa
outsl
das
iret
mov
into
loopne
mov
scas
and
outsl
pop
imul
popf
jno
call
loope
fiadds
ffreep
mov
or
es
andb
sbb
fnsave
fstl
xlat
fisubrs
push
fidivl
mov
and
fistps
shll
jbe
jp
mov
push
push
lock
dec
jle
fiaddl
pusha
jbe
cmpsl
stos
adc
inc
leavew
es
pop
xlat
jmp
mulb
incl
stc
sub
les
xchg
xor
pusha
nop
jo
sbb
mov
jbe
xchg
stc
jle
jp
fwait
subl
loopne
pusha
cs
scas
dec
and
es
or
jo
inc
ja
mov
aad
mov
daa
aam
push
add
pop
outsl
xchg
mov
subl
push
fs
lds
addr16
in
sub
fs
aad
call
mov
filds
jbe
roll
out
pop
movl
push
outsl
xchg
adc
lret
cmc
cmp
mov
adc
add
iret
fisubs
cmpl
into
out
push
es
push
push
in
pop
imul
test
pop
add
lcall
mov
sub
stos
push
xchg
and
fcmovbe
cmpsb
xchg
fwait
pop
inc
fidivs
cmc
or
popf
pop
cmp
outsb
dec
push
sar
mov
xlat
pop
jle
outsb
pop
cmpsb
nop
and
jg
dec
and
jbe
xor
sub
mov
out
xchg
pop
dec
dec
int3
jnp
scas
iret
out
gs
sub
add
into
xlat
pop
jne
cwtl
inc
fld
push
dec
in
scas
sahf
cmpsl
ja
mov
or
dec
xchg
mov
mov
das
sbb
ja
adc
xchg
xlat
push
pop
mov
subb
aaa
pop
enter
iret
or
jb
ljmp
rcll
out
jle
pop
repnz
dec
pop
xorl
add
inc
repnz
rcr
aad
pop
mov
filds
fbld
fisubs
call
faddl
in
cmpsb
and
cmp
out
inc
and
fcoml
cmpsl
push
aad
scas
call
popl
push
pop
dec
cs
iret
cmpsl
push
jno
nop
fbld
mov
pusha
mov
out
into
and
xchg
dec
jo
sbb
jns
pop
sti
adc
lahf
and
jmp
inc
sbb
aaa
nop
inc
outsl
dec
jg
pusha
fnstenv
push
mov
scas
iret
stos
dec
fisubrs
push
sahf
cmpsb
xchg
mov
mov
pusha
pop
out
mov
mov
jo
cltd
cs
xor
and
lahf
pop
xor
fs
cmp
leave
push
mov
xlat
js
or
and
das
ljmp
scas
jno
jg
jo
xchg
out
pop
xchg
xchg
into
adc
xlat
stc
ds
adc
mov
adcb
jae
addr16
and
sub
jp
out
fwait
push
push
fildll
outsl
jge
fldenv
mov
push
outsl
mov
mov
pop
add
xchg
rorl
dec
push
push
fisubrs
iret
into
jo
pop
xchg
inc
fists
fnstcw
ja
inc
jbe
idiv
jmp
push
and
cmpsb
shrl
sub
adc
jnp
icebp
adc
repz
dec
cmc
aaa
pop
sbb
mov
xor
ds
cld
mov
addr16
xchg
jo
pop
aas
fldenv
lahf
xchg
xlat
dec
fistps
push
sub
scas
inc
add
es
nop
dec
jg,pn
cmp
scas
push
and
inc
jecxz
or
adc
mov
push
addr16
cld
lcall
repnz
inc
inc
insl
test
fists
insb
mov
dec
xchg
push
inc
push
addr16
stos
mov
mov
imul
push
lret
sub
cs
push
push
pop
sub
fwait
daa
add
and
ds
xchg
mov
sarl
dec
mov
sub
incb
push
lahf
pop
add
push
outsb
scas
data16
aam
cs
fabs
clc
inc
pop
push
ret
pop
sahf
jp
fisttps
and
mov
xchg
ffree
xchg
das
jmp
pop
mov
rcr
in
pop
js
imul
xor
scas
inc
les
mov
scas
outsb
iret
xchg
leave
pop
daa
xchg
lahf
dec
dec
fimuls
mov
adc
shl
out
jg
pusha
inc
xlat
sahf
mov
sub
outsb
ret
mov
movsb
xor
xchg
int3
push
mov
and
fldl
lcall
pop
xor
pop
loopne
fiadds
in
push
gs
ds
daa
pop
mov
push
popf
mov
and
daa
stos
fisubrs
xchg
sahf
int
xor
sbb
xor
dec
pop
out
nop
loop
lahf
filds
sub
aaa
dec
mov
or
addr16
out
push
lret
and
into
sub
and
pop
into
das
pop
adc
adc
ficomps
xchg
inc
mov
ss
dec
or
out
sahf
cmpsl
aaa
sub
ljmp
adc
call
gs
fs
shll
jbe
push
dec
pusha
cmp
fstpt
fmulp
push
jecxz
outsb
and
scas
mov
lea
xchg
cs
ja
xor
call
outsb
and
imulb
push
sbb
bound
add
out
popf
dec
data16
leave
xlat
inc
adc
into
xor
pusha
pop
fs
sub
inc
xor
fcoms
sub
mov
leave
stos
mov
inc
xchg
xlat
sub
jg
stc
das
push
cmpsl
add
push
gs
xor
outsb
icebp
adc
cmpsb
add
cmpsl
or
push
dec
loop
push
scas
xlat
pusha
clc
data16
and
hlt
push
aaa
cmp
mov
jo
push
xchg
pop
pop
fs
ds
pop
pop
lock
sub
jbe
pop
or
push
inc
mov
jo
add
es
adc
movsl
ss
and
adc
ja
call
cmpsl
mov
xchg
aaa
push
inc
mov
xchg
xor
mov
ja
scas
addr16
xlat
sahf
pop
xchg
jge
and
sbb
fs
sub
and
and
in
into
fisubs
dec
jg
in
add
or
xchg
jecxz,pn
cmpsb
push
jg
xchg
outsb
dec
and
lahf
pop
adc
jbe
lock
mov
xchg
mov
jno
lea
mov
test
adc
pop
test
jg
js
pop
adc
enter
add
loop
mov
xchg
jno
jg
xchg
scas
add
pop
pop
mov
sbbb
cs
push
movsl
push
cmp
stc
imul
pop
xlat
dec
pop
test
scas
int3
mov
and
cmpsl
fsubl
push
jp
xor
pop
ss
in
mov
adc
jo
push
es
out
fidivl
dec
push
mov
sarl
inc
cltd
dec
push
ja
hlt
pop
addr16
jbe
mov
mov
pop
push
and
notb
jecxz
dec
inc
test
outsb
mov
sub
inc
push
and
mov
outsl
shr
popf
push
jl
inc
adc
jl
aaa
xor
nop
and
cmp
in
popf
sarb
cmp
dec
mov
push
push
xchg
shlb
mov
es
dec
mov
scas
pop
pusha
xorl
cs
sub
into
lea
inc
fiadds
pop
fisttps
jae
jle
ja
das
and
dec
mov
pop
or
cmpsl
mov
mov
pop
mov
mov
pop
cmp
ds
pop
jbe
cmp
aaa
gs
fistps
xor
cmp
pop
push
push
fmulp
js
cmp
loop
mov
pop
scas
push
sahf
mov
dec
dec
insb
add
add
pop
aaa
rcrl
in
ja
mov
dec
xlat
ljmp
mov
lret
pop
jno
leave
push
aaa
lods
inc
je
mov
inc
daa
and
add
jns
xlat
dec
pop
aas
out
dec
jge
jg
mov
xchg
inc
cmp
mov
push
mov
mov
in
xchg
pusha
xor
out
scas
push
mov
daa
es
cltd
push
inc
mov
pusha
push
cmp
or
cmp
lds
fldenv
iret
data16
dec
pop
push
das
add
nop
sub
je
call
xchg
ds
sub
xchg
add
in
das
mov
in
into
mov
push
test
adc
pop
ja
roll
popf
mov
push
inc
dec
cmp
mov
mov
mov
outsl
cmpsb
js
adc
xchg
dec
mov
enter
add
xor
dec
cmpsl
adc
sbb
jns
inc
das
mov
pop
push
fiadds
aad
xor
and
push
inc
pop
fmull
add
ja
andb
mov
mov
inc
and
and
add
adc
cmp
cmp
arpl
mov
ss
pop
repz
xchg
cmp
lods
call
jle
enter
pop
dec
dec
addr16
mov
xchg
leave
adc
mov
je
outsl
mov
les
sbb
in
scas
cmp
jmp
push
mov
test
push
outsl
mov
push
xor
mov
ds
ja
lds
in
jg
into
sub
int
lahf
xchg
push
push
dec
in
sbb
add
xor
aas
test
jne
push
fimull
cmpsb
xchg
cmpsl
leave
xchg
inc
enter
lock
sahf
pop
pop
lock
xchg
lea
inc
cmpsl
hlt
test
push
pop
mov
stc
cmp
xchg
sbb
test
xchg
jg
push
lahf
xchg
push
movsb
xchg
dec
cmpsb
into
sbb
jle
nop
push
and
jo
mov
xchg
iret
cmp
mov
ljmp
mov
negb
pop
pop
es
data16
push
cmpsl
lret
stc
push
adc
push
dec
mov
fists
mov
cmp
xor
nop
adcb
in
shll
int
push
and
jle
fidivrs
mov
testl
sub
adcb
mov
sahf
divb
dec
xlat
lds
jle
add
dec
and
pop
cmp
xchg
jbe
lcall
aas
cmp
adc
lret
scas
xchg
push
test
sub
cmp
sahf
push
lods
mov
xchg
push
cwtl
aad
mov
pop
cld
add
mov
inc
add
inc
mov
test
push
pop
sti
sahf
aaa
xor
add
mov
lods
bound
dec
pop
cs
scas
out
ds
jmp
mov
sahf
aam
and
outsb
and
xchg
sbb
ja
out
mov
pop
mov
inc
bound
jecxz
mov
cmpsb
push
and
adc
mov
mov
fwait
sahf
adc
test
movsl
pop
aas
outsb
lahf
pop
xchg
adc
sahf
stc
jg
xchg
fnstcw
sub
cmp
scas
iret
into
ja
ss
add
pop
pop
icebp
sahf
pop
mov
mov
addr16
std
bound
xlat
enter
xchg
cs
outsl
push
mov
ficoml
xchg
daa
jmp
es
js
or
mov
into
ffreep
mov
data16
jmp
out
dec
aas
mov
jno
xchg
jb
ficompl
sarl
cs
add
cmpsb
mov
cltd
xchg
mov
cmp
cmpsl
mov
aad
aaa
out
and
and
xchg
das
scas
add
sub
lea
shl
sub
dec
pop
pop
push
mov
xlat
into
ss
dec
dec
jae
pop
jb
xlat
dec
add
aaa
jo
and
loope
outsl
xchg
xor
xor
mov
stc
outsl
inc
cmp
sub
nop
out
jbe
cs
push
and
sub
xchg
aaa
mov
cs
jle
in
sbb
jmp
jo
or
lds
data16
aam
jecxz
pusha
dec
cmpsb
xor
inc
cltd
push
push
xchg
inc
outsl
xor
mov
push
dec
cmpsl
loop
fiadds
filds
outsb
test
rcrb
inc
aaa
dec
int3
and
sarl
ss
pop
push
pop
jle
or
out
cmp
lahf
xchg
jg
xchg
cmpsl
pop
rcl
jmp
or
das
xchg
pop
test
icebp
push
dec
leave
inc
mov
hlt
push
es
into
jne
add
cmpsb
loope
dec
xchg
jbe
ret
mov
inc
cs
shrl
xchg
mov
inc
xchg
xlat
aaa
arpl
cmp
jb
cli
jge
adc
cltd
cmp
xorb
adc
ds
int3
jne
dec
outsb
fdivrl
push
push
jo
or
jbe
push
sti
fcmovb
and
pusha
in
or
mov
sahf
mov
sub
enter
mov
out
fisttps
pop
mov
mov
jmp
add
out
pop
jno
mov
movsb
imul
mov
xchg
or
pusha
scas
adc
sub
mov
xchg
ret
ret
mov
bound
push
pop
es
scas
es
xor
fsubp
call
gs
js
fistpll
jmp
subl
scas
push
jb
adc
xchg
push
push
jle
fistps
sub
leave
mov
mov
dec
mov
lock
in
je
cwtl
leave
iret
cs
mov
data16
mov
mov
pop
inc
imulb
jle
xor
cmpsl
mov
mov
jne
mov
ret
es
inc
loope
push
dec
dec
pop
es
stc
into
pop
movsb
repnz
xchg
cmp
in
pusha
gs
cmp
nop
mov
and
ss
mov
xchg
test
inc
push
ja
call
dec
xchg
jmp
cs
push
pusha
loope
cmp
and
gs
ds
push
cmpsb
outsb
and
cmp
or
pop
or
cs
xchg
push
icebp
mov
inc
push
xchg
lret
inc
in
mov
xor
cld
or
fcompl
cmp
nop
and
out
push
push
mov
lahf
jecxz
xchg
and
cmp
inc
mov
jg
jecxz
push
xorb
inc
jp
inc
jns
mov
and
out
outsl
push
negb
inc
inc
and
adc
scas
pop
ja
push
stc
jp
mov
xor
mov
jo
cmpb
frstor
push
inc
sbb
aad
pop
cmpsb
pop
outsb
sub
jo
push
jg
push
nop
scas
arpl
mov
jecxz
pusha
push
cmpsl
fbld
push
mov
mov
inc
xlat
lret
rol
cmpsl
out
stc
test
iret
and
xor
outsb
fldcw
pop
inc
and
inc
aas
divb
push
clc
dec
sub
stc
jp
js
jmp
mov
push
xchg
inc
cmp
jg
ja
nop
stos
adc
jns
inc
ja
mov
aaa
pushf
ds
iret
xchg
jb
leave
cmpsb
push
lahf
int
cs
inc
sbb
ret
lret
pop
cli
jo
imul
in
jbe
in
inc
mov
ja
sbb
pop
jmp
mov
mov
xlat
outsl
dec
stos
lret
fistps
jo
out
into
gs
cmp
xchg
pop
ds
cmpsl
mov
push
cmc
ret
icebp
sub
inc
call
addr16
dec
dec
adc
cmpsl
scas
ds
pop
pop
sahf
fldl
jg
fmuls
xchg
pop
xor
mov
hlt
pop
add
mov
xchg
adc
shll
enter
scas
pop
scas
jle
push
jns
nop
clc
enter
jg
pop
mov
mov
mov
cwtl
jle
jmp
sbb
test
add
dec
jb
sbb
and
and
xor
inc
repz
es
xchg
mov
pop
cli
rcrl
fisttpl
ja
scas
inc
mov
iret
mov
stos
icebp
nop
sbb
mov
das
xor
into
movsb
xor
mov
mov
mov
sbb
jecxz
dec
in
sbb
cltd
xchg
mov
nop
std
dec
das
movsb
jnp
cmpsl
dec
xor
rcrb
mov
shlb
xchg
addr16
outsl
cmpsl
loope
cs
lahf
push
and
xchg
push
pop
jg
outsl
pop
sahf
movsb
add
fmul
scas
push
sub
sahf
aas
std
iret
xchg
sub
mov
xchg
pop
and
lea
outsl
loop
ja
mov
in
mov
inc
mov
lods
push
cmp
out
push
cs
iret
int3
mov
lods
jecxz
jmp
dec
xchg
aad
mov
add
dec
jno
fistpll
xor
cmp
xchg
mov
ret
jns
xor
pop
adc
mov
out
jecxz
addr16
xchg
scas
push
addl
iret
call
xchg
dec
pop
xchg
pop
lds
daa
data16
fistpl
or
daa
mov
dec
push
jo
and
jb
xor
mov
xchg
xchg
sub
shl
je
sub
mov
pop
call
ds
outsb
ret
push
mov
push
loopw
cs
pop
ja
cltd
cltd
inc
ret
mov
mov
fistps
in
inc
pop
jbe
mov
cmpsb
in
scas
mov
jg
or
pop
nop
lods
mov
repz
push
addr16
mov
push
inc
cmp
cmpsl
aad
lret
fcmovu
mov
push
lods
enter
jns
iret
insb
ffreep
pop
mov
mov
addr16
lahf
mov
xchg
fdivp
mov
icebp
icebp
mov
dec
cmpsb
into
ficoms
pop
cmp
insb
mov
mov
jle
xor
jbe
outsb
adc
cmp
in
fwait
ja
es
leave
xchg
cmpsb
sti
ds
out
mov
xchg
pop
ja
jg,pt
push
pop
jecxz
ds
pusha
xor
or
mov
mov
mov
pop
mov
mov
jno
push
loope
xor
sbb
push
push
jno
xchg
push
imul
mov
fidivl
jg
pusha
sbb
pop
add
jbe
inc
scas
orl
cmpsb
xchg
out
aas
es
dec
adc
or
lahf
mov
pop
sub
pop
fidivs
aas
popf
jnp
arpl
test
push
lahf
push
cmp
mov
xlat
into
cli
mov
addr16
lret
leave
mov
dec
push
inc
sbb
pop
outsl
jmp
aas
mov
mov
imul
addr16
add
sarb
scas
popl
adc
push
push
fsts
and
adc
das
add
or
aas
xchg
jb
ds
xor
arpl
push
scas
jo
sub
leave
scas
pop
addb
les
jle
jle
cmpsl
mov
adc
pusha
repz
push
push
es
insl
sub
jmp
push
inc
pop
lea
pusha
aas
nop
das
out
inc
fisubs
mov
xchg
dec
pop
push
xchg
test
cli
adc
pusha
pushw
pop
sub
pop
stos
fidivs
ja
testl
sbb
adc
push
das
sahf
cmpsl
ds
sub
inc
test
sbb
mov
mov
push
aaa
mov
out
mov
inc
push
dec
in
ds
cmpsl
aam
add
push
xor
fsubrl
rcrl
neg
push
iret
lcall
ja
adc
rcl
mov
sbb
mov
fiaddl
fdivrl
cmp
jecxz
ds
leave
outsl
scas
ss
lds
pop
cmpsl
test
ja
nop
and
adc
push
test
js
ja
cltd
out
push
sbb
jle
std
push
pop
outsb
dec
stc
data16
aaa
jg
into
add
lds
fistpll
inc
ja
out
push
leave
xchg
cmpsb
lahf
addr16
fistpl
xlat
bound
dec
nop
add
mov
fistps
push
enter
cmp
pop
and
jo
push
pop
sub
rcrb
out
dec
iret
dec
inc
cmp
enter
cmp
jo
and
xor
sbb
fidivrs
outsb
das
mov
push
inc
cmpsl
mov
dec
sub
filds
dec
cmpsl
int
es
cli
pop
mov
xchg
pop
adc
pusha
cmpsb
xchg
jle
xchg
leave
aaa
inc
fdivp
shl
aaa
arpl
dec
loop
fbstp
xchg
xchg
iret
dec
adc
outsl
daa
push
and
outsl
nop
daa
int3
std
addr16
enter
jmp
rorb
fisubs
pop
xchg
jle
pop
sahf
popf
lcall
pop
xor
mov
add
sub
aam
insl
sub
les
out
mov
mov
mov
into
imul
xor
nop
popf
in
lds
mov
mov
inc
pusha
sub
mov
dec
add
lods
pushl
ss
pop
sub
cmpsl
mov
cmp
push
addr16
mov
data16
pop
or
sub
dec
nop
xor
dec
ds
mov
add
push
push
enter
mov
ljmp
mulb
hlt
cs
enter
mov
and
rcrl
inc
xchg
push
jp
inc
ficomps
outsb
jmp
dec
aas
nop
aam
iret
sahf
add
jo
scas
pop
push
push
in
das
aaa
xchg
repnz
push
and
mov
addr16
inc
adc
mov
jle
xor
mov
mov
into
outsb
cmpsl
out
repz
mov
iret
or
xlat
scas
repnz
lock
js
outsl
or
scas
and
imul
or
lds
mov
xchg
aas
imul
jns
nop
push
add
jmp
aaa
scas
xor
jns
fdivp
mov
cmpsb
popf
imul
in
xchg
push
jno
pop
cmp
add
jbe
pop
mov
push
fildll
js
cmpsb
xchg
mov
push
cld
fsubrl
push
mov
roll
mov
xchg
push
jno
xchg
lea
loop
aas
daa
inc
lahf
sub
jecxz
jle
mov
scas
push
ss
movsl
xchg
jle
pop
mov
es
fbld
cs
cwtl
xor
nop
repz
xor
xlat
fs
js
mov
xchg
negl
in
pop
js
jo
xor
loopne
addr16
add
sub
lahf
mov
push
pop
push
loopne
scas
enter
dec
enter
pusha
pop
jg
cwtl
and
mov
mov
push
mov
xchg
sub
outsl
xchg
push
dec
fildll
xlat
fs
push
enter
lahf
je
add
outsb
mov
fistps
cmp
mov
mov
jbe,pn
and
dec
outsl
xor
sbb
js
ret
jno
daa
jge
mov
cmp
inc
das
iret
adc
jnp
jne
rol
push
push
pop
iret
jo
in
jno
jg
add
and
fs
orb
ja
aad
inc
iret
mov
loop
outsl
dec
mov
sahf
push
mov
jmp
pop
and
lahf
mov
xchg
pop
ljmp
mov
mov
mov
divb
pusha
in
jle
std
rorl
je
adc
loop
jbe
fistps
es
mov
cs
fmuls
dec
lds
mov
mov
mov
jae
dec
daa
faddp
ja
dec
dec
pop
push
mov
push
lret
cld
movsl
arpl
ret
mov
pop
scas
push
shl
js
dec
shr
pop
push
in
cs
repnz
aaa
jo
inc
xlat
push
dec
jle
push
mov
cmp
ret
fistps
and
pop
jecxz
mov
outsl
ret
sbb
xchg
pop
pop
xchg
stos
in
push
daa
mov
dec
addr16
push
push
scas
add
outsl
xchg
jo
xchg
mov
rol
filds
enter
mov
mov
shrb
sahf
xchg
iret
shlb
roll
shl
data16
scas
sbb
sarl
lds
rorl
test
mov
push
mov
add
inc
add
ret
xchg
push
ds
jecxz
push
fs
push
inc
scas
test
jg
in
pop
cmpsl
testl
cmpsb
lahf
xor
jb
lods
sarl
mov
inc
ficoms
jmp
pop
jno
sahf
push
ljmp
ja
gs
mov
xchg
push
mov
mov
popf
test
mov
jo
mov
adc
xchg
cmp
das
mov
sub
sbb
outsl
jg
pusha
xor
lods
add
push
xchg
subl
xchg
daa
and
inc
jge
cmpsl
mov
andl
scas
and
sub
mov
xchg
pop
daa
popf
call
cmp
pop
ret
mov
xor
jle
dec
ds
pop
shlb
jno
hlt
mov
das
push
aas
sarl
and
pop
dec
xchg
inc
xlat
adc
in
inc
outsl
jmp
push
es
scas
mov
jp
jns
std
adc
lcall
in
daa
lcall
cmp
jnp
push
xchg
xchg
lcall
ds
push
xchg
pop
mov
jae
shl
rorl
rcr
lahf
add
push
add
mov
inc
and
and
jbe
outsb
scas
xchg
and
and
xchg
loopne
lahf
jno,pt
fiadds
flds
push
pop
jle
mov
movsl
push
xchg
movsl
jg
push
pop
fsts
inc
fistpll
inc
scas
mov
sahf
aas
ss
data16
in
outsb
gs
loope
sub
and
es
scas
xor
xlat
in
ja
xor
xchg
xor
outsl
push
outsl
shll
testb
xor
ret
jb
leave
xlat
and
mov
jmp
lods
sub
scas
gs
sbbl
push
mov
mov
mov
mov
adc
fisttpl
push
outsb
loop
into
mov
pop
cmpsl
or
or
sub
sbb
push
cmpb
inc
pop
pop
scas
les
dec
mov
data16
push
mov
xlat
mov
int
outsl
dec
into
ret
int
xor
mov
hlt
ja
sub
push
rorb
dec
ret
mov
cld
xchg
mull
xchg
push
pop
dec
mov
pusha
cltd
clc
push
rcrb
lds
jno
outsb
mov
or
scas
add
jecxz
inc
sarb
or
fisttps
pop
aaa
mov
or
ss
lahf
ds
out
push
jnp
cmpsb
ret
daa
jns
ficomps
mov
push
jle
and
push
sbb
dec
pop
pandn
out
cmpsb
faddl
xor
push
nop
mov
mov
in
sub
es
data16
xchg
andb
lret
or
inc
mov
jae
pop
xor
dec
frstor
pop
xchg
ficoms
bound
xchg
xlat
shrb
scas
xlat
push
js
mov
je
add
dec
xchg
lret
lds
aas
cmpsb
addr16
pop
inc
ror
gs
into
add
stc
fisubl
or
movsb
push
aaa
xchg
icebp
in
push
inc
fsubp
and
scas
iret
xchg
lods
repz
and
addr16
pop
cmp
out
ss
xchg
out
and
aas
push
pop
fcoms
pop
and
js
es
add
data16
aas
mov
dec
aaa
loope
pop
inc
jg
in
daa
lcall
push
cs
lahf
fldl
loopne
cwtl
fimull
push
mov
jbe
mov
mov
call
into
cmp
fists
push
or
dec
lock
push
cs
aaa
shrl
in
xor
ja
add
gs
pop
cmpsb
daa
xor
adc
enter
mov
fs
cmp
mov
mov
cmp
out
and
ds
mov
xchg
leave
mov
int3
xlat
jle
sub
mov
inc
sub
push
and
scas
pop
enter
fadd
imul
sbb
fst
xchg
jo
cmp
add
xchg
pusha
daa
aaa
ja
data16
xchg
push
into
and
lods
pop
jg
dec
loopne
data16
sbb
scas
shlb
rcll
sarl
push
jbe
cld
push
xor
ja
fimuls
or
jmp
stc
subl
mov
jge
xchg
shlb
push
xchg
sbb
xchg
icebp
sahf
decb
xor
dec
outsl
mov
dec
fists
xchg
push
push
ss
fsubp
mov
fs
dec
cmpsb
inc
mov
nop
outsl
addl
pop
aas
sahf
andb
xchg
pusha
push
daa
jbe
mov
leave
xor
daa
xchg
cmpsl
lds
pop
scas
and
nop
add
sub
pop
mov
mov
fs
mov
adc
out
inc
push
mov
dec
imul
ds
gs
clc
push
xchg
ja
mov
loope
nop
cmpsl
pop
jp
data16
jg
scas
ds
mov
xchg
add
cmpsb
cli
jbe
aad
aas
mov
xchg
int3
dec
xchg
inc
mov
lods
rorb
leave
push
cmpsb
ljmp
rcr
mov
stos
push
outsb
gs
rcll
daa
xor
push
xchg
or
lods
ja
fbld
jp
and
xlat
cli
and
cwtl
lcall
test
mov
add
or
sub
das
sub
enter
jg
aas
and
nop
add
add
xor
inc
pop
es
ficoms
leave
stos
das
stos
test
xchg
loop
push
jle
and
data16
inc
push
pop
xor
and
idivl
ret
jo
and
rolb
out
jne
into
testl
cmpsb
mov
inc
scas
out
mov
adc
fcmovu
xchg
mov
sub
push
push
xchg
dec
loop
dec
mov
jg
cmp
mov
pop
jnp
dec
sbbb
add
xor
daa
cmp
push
mov
out
out
scas
mov
imul
push
push
in
cs
ss
outsl
mov
into
jg
subl
sub
add
cmpsl
loopne
xlat
cmp
jp
jns
int3
sti
stos
mov
xchg
pop
push
cmpsl
mov
ljmp
ss
fldenv
inc
test
xchg
mov
stos
test
mov
inc
pop
jne
add
mov
pop
scas
pusha
adc
add
addr16
pop
pop
jmp
push
insl
xor
xchg
adcb
outsl
jb
sbb
fwait
loop
jle
pop
cmpsl
addr16
xchg
add
mov
jle
gs
adc
xchg
ds
cs
and
dec
outsb
jecxz
push
or
nop
popf
mov
xchg
lahf
ds
add
imulb
jno
sahf
jo
cmpb
es
xchg
dec
push
push
call
scas
pop
nop
std
shll
jbe
sarl
pusha
movsl
adc
push
iret
push
push
rcrl
sbb
jo
jg
cmp
out
daa
loopne
xchg
cltd
sbb
lock
mov
add
mov
cs
dec
daa
pusha
loope
outsb
xor
sub
inc
sahf
mov
addr16
push
and
daa
repnz
ljmp
aas
stc
jle
addr16
inc
or
scas
push
mov
push
push
scas
sbb
jle
ret
and
daa
cmpsl
fldcw
sub
sub
iret
sti
into
test
dec
inc
dec
jo
out
and
sub
cmpsl
out
jns
out
lea
es
pop
inc
mov
adc
inc
add
xchg
ror
dec
sahf
push
outsl
lods
push
cmp
into
mov
lock
int
mov
push
and
rclb
pusha
cmpsb
pop
ja
rorb
dec
push
adc
push
mov
cmp
mov
sub
and
daa
orw
dec
mov
dec
out
mov
add
dec
popf
fisubs
xchg
outsl
cs
xchg
hlt
inc
jmp
inc
pop
sub
pop
scas
es
lahf
outsb
xchg
ret
iret
aaa
and
icebp
ds
pop
xor
dec
mov
xchg
fisttpll
ja
and
add
jg
mov
nop
xchg
push
in
inc
repnz
ret
data16
mov
lods
fiadds
ret
mov
nop
and
ret
mov
lahf
mov
sbb
and
imul
movsb
dec
clc
scas
mov
es
pop
xor
cmp
cs
mov
and
in
sub
lret
jmp
xor
jle
cmpsb
loop
outsb
outsl
inc
ffreep
testb
dec
mov
xlat
sbb
push
xor
jb
out
fld
jo
jecxz
pop
push
or
cmp
inc
fsts
mov
lret
push
cmp
fnstsw
cwtl
fists
daa
sub
push
mov
stc
je
dec
dec
pop
jno
xchg
fcmove
aas
scas
int
mov
mov
out
jg
mov
lahf
xlat
sbb
stc
scas
and
pop
push
cmpsb
sahf
fstl
cmpsl
inc
nop
xchg
loop
ds
dec
jo
dec
das
cmpsb
test
fsts
push
push
pop
push
call
pop
mov
outsb
jne
nop
les
outsl
push
addr16
adc
jbe
pop
xor
pop
push
mov
cli
cmpsl
push
mov
sahf
pop
add
pop
pop
mov
add
xor
fwait
lds
cwtl
aad
sub
out
inc
cmpsl
and
xlat
jae
icebp
es
xor
push
es
lahf
fisubrs
add
pop
and
enter
dec
inc
push
push
insb
dec
popf
out
aaa
dec
and
stos
fists
pop
cmp
jl
xchg
insl
lock
cmpsl
xor
mov
inc
push
fistpll
push
stos
sub
push
dec
cmp
movsl
mov
mov
dec
push
int3
mov
adc
inc
push
stc
ja
cmp
js
lods
popf
mov
sub
mov
dec
insl
inc
fcmovb
mov
je
scas
xchg
stos
sub
dec
loop
xchg
nop
jo
xor
test
inc
cmpsl
das
xor
dec
outsl
js
adc
and
cltd
push
mov
xchg
daa
addr16
inc
fucomip
xlat
sbb
mov
aas
imul
xchg
mov
push
scas
inc
mov
lds
push
or
jle
lds
data16
pop
add
xor
outsb
mov
iret
xchg
xor
cmp
aas
daa
and
sub
mov
adc
repnz
pop
or
xchg
movl
mov
movsb
addr16
das
bound
and
leave
sub
xor
idivb
fs
add
daa
inc
int3
xor
lahf
es
cmp
xor
into
sub
jae
push
stos
sahf
dec
insb
rclb
aad
daa
call
jg
push
xor
scas
out
rclb
and
jbe
aas
or
dec
dec
rcl
mov
push
xchg
push
dec
push
das
mov
pop
mov
pop
push
jbe
jno
push
or
imul
mov
push
cmpsb
sbb
dec
leave
and
or
stos
mov
jb
nop
pop
bound
pop
call
xor
jmp
mov
popf
xor
cmp
fimuls
pop
xchg
addr16
xor
fisttps
xchg
clc
or
inc
das
jae
jecxz
mov
pop
movsl
mov
loopne
movsb
jmp
xlat
fisttps
xor
cld
loope
cmpsb
data16
cmp
push
scas
push
fadds
pop
inc
cli
fsts
lcall
fisttps
push
daa
or
cmpsl
inc
sarl
aaa
mov
or
fdivl
mov
lret
xchg
scas
mov
xchg
mov
cmpsb
cmp
pop
push
sahf
mov
push
push
enter
loope
xchg
pop
pop
das
data16
jp
jge
sub
pop
pop
outsb
inc
les
mov
cs
pusha
shrl
pop
iret
mov
mov
add
cmpsb
fnstsw
ljmp
cmpsb
jo
gs
gs
pop
push
aaa
push
push
out
push
mov
pop
xlat
fs
and
sbb
sub
std
fisttps
pop
xchg
cmp
pop
ja
dec
cmp
adc
xchg
sub
mov
aam
push
sub
xchg
push
ficomps
fs
cmp
cmpsl
iret
jmp
daa
lahf
loopne
outsl
repz
mov
dec
cmp
sahf
mov
aaa
or
fstps
xchg
rcll
pop
push
inc
leave
xchg
stos
scas
pop
ficomps
add
addl
xor
test
enter
mov
jne
icebp
ret
pop
sub
out
push
mov
dec
jle
data16
enter
lock
push
pop
nop
xchg
roll
push
xor
out
addr16
cmpsl
cmpsb
and
mov
push
outsb
push
or
adc
jg
outsl
mov
mov
jnp
ja
and
mov
es
push
stc
aas
jb
add
dec
and
pop
push
or
outsb
std
out
inc
pop
fimuls
ja
pop
test
push
push
addr16
fistpll
aaa
jae
stos
into
movsl
js
das
lret
xlat
xchg
or
ds
cltd
iret
fwait
adc
scas
mov
push
aam
aas
out
mov
sbb
cwtl
push
ds
ss
push
mov
lds
xchg
inc
iret
push
enter
sub
inc
xchg
push
inc
inc
or
cmp
xchg
xor
loopne
inc
pop
mov
repnz
mov
ss
les
jp
sti
lods
test
xchg
shrl
leave
test
lahf
iret
dec
mov
add
inc
mov
mov
cmp
popa
cmc
sbb
stos
jmp
push
mov
dec
push
data16
push
pusha
enter
pop
cmp
es
jno
outsl
fidivl
cs
fimull
and
repnz
loopne
movsb
add
insb
and
outsl
ljmp
aad
mov
jb
jmp
lret
pop
jmp
xchg
scas
std
lods
jno
imul
push
repnz
add
scas
mov
jo
dec
or
or
aas
adc
xchg
push
popf
ljmp
addr16
inc
daa
add
cs
popf
xchg
jle
ret
push
aas
cmpsl
xor
dec
aad
xor
pop
jl
dec
mov
xorl
lret
into
das
mov
pop
shl
inc
pop
scas
xchg
sbb
fmulp
jmp
sub
daa
mov
sub
inc
jbe
scas
jecxz
mov
repnz
aad
push
lahf
mov
dec
jo
lea
pop
inc
mov
pusha
push
fstp
insb
jo
push
push
lahf
mov
iret
pop
pop
jg
push
cmpsb
cli
pusha
sbb
mov
pop
int
dec
ret
mov
mov
nop
xchg
sub
and
test
jmp
mov
repnz
pop
and
fmull
fisubrs
jno
scas
pop
mov
stc
icebp
and
mov
into
xchg
mov
adc
or
and
xchg
mov
push
leave
xchg
mov
inc
xchg
ljmp
cld
pop
aad
xlat
dec
fisttpl
lahf
cltd
xlat
lcall
mov
dec
mov
pop
les
jo
cli
stos
pop
sbb
aaa
dec
fstl
cwtl
outsb
xor
mov
and
push
xor
push
addb
xor
mov
cmp
push
into
stos
sahf
and
ljmp
mov
sbb
mov
jno
ss
mov
or
pop
iret
pop
icebp
scas
adc
daa
dec
xchg
push
pop
mov
addb
xor
enter
and
push
xchg
aas
jo
xchg
movsl
inc
add
rorb
pop
pop
sub
insb
frstor
mov
and
and
jb
fidivs
outsl
das
aaa
cmpsb
mov
cmpb
lret
mov
aaa
stos
jns
dec
jns
loopne,pt
jo
and
mov
push
mov
or
jg
inc
cmpsb
pop
addr16
push
ret
push
addr16
mov
outsb
push
mov
mov
inc
outsb
add
int
jle
mov
stos
mov
cs
ds
mov
cmp
sub
add
adc
lret
mov
out
mov
push
xchg
dec
or
subb
ja
pop
cmp
xchg
mov
pop
fs
and
add
mov
imul
cmpsb
jno
in
lret
inc
xchg
mov
std
pop
ss
lahf
insl
js
cmpsb
scas
mov
dec
pop
push
lds
push
jbe
fst
jo
repnz
adc
mov
mov
icebp
outsb
fildll
add
mov
add
lds
ret
jns
sbb
xlat
cmpl
dec
and
mov
sahf
jl
addr16
mov
out
jbe
and
sub
xlat
cltd
dec
sub
jge
mov
popa
ja
jnp
ret
cs
cltd
scas
scas
aas
pop
sbb
xchg
aaa
outsl
dec
sahf
out
iret
movhps
loope
push
mov
xchg
xlat
clc
pop
sub
fs
int
mov
es
sub
mov
sub
mov
and
jae
in
cmp
out
scas
mov
ror
data16
xchg
ret
out
iret
sbb
idivb
mov
dec
pusha
sahf
mov
pop
das
nop
ds
dec
movsb
lods
and
xlat
das
movsb
jmp
daa
inc
xor
lahf
ficoms
jmp
add
mov
push
ds
mov
test
loopne
mov
xlat
pop
mov
cmpsl
in
jle
stc
push
mov
ds
push
pusha
loopne
pushf
nop
int3
stos
xlat
xor
pop
pop
es
nop
stos
pop
aaa
jle
dec
mov
add
push
push
leave
adc
xchg
add
or
add
jo
mov
and
jo
int3
cmpsl
push
pop
ss
seto
jns
dec
dec
xchg
ds
ja
dec
fucomp
xlat
pusha
push
iret
addr16
arpl
dec
leave
es
sahf
dec
mov
outsl
scas
inc
or
stc
sub
sub
jne
sub
jmp
subb
xor
push
inc
popf
dec
push
lea
fsubs
jg
add
xchg
clc
scas
pop
dec
testb
mov
mov
pop
push
push
add
roll
repnz
sub
adc
dec
xor
ds
adc
fs
mov
nop
lds
jle
into
scas
shl
data16
mov
mov
adc
movsb
data16
sbb
mov
sub
insl
mov
ja
es
pop
jo
cs
xchg
and
dec
push
in
sub
xor
xchg
pushf
push
pop
push
scas
mov
daa
sbb
xlat
out
pop
fs
and
jle
bound
pusha
and
mov
mulb
xor
cmp
stos
adc
push
fstps
inc
fisubl
jbe
arpl
pop
movsb
mov
add
push
dec
jecxz
xchg
inc
xor
repnz
push
clc
xlat
dec
xor
icebp
xchg
dec
iret
xchg
daa
int
mov
dec
mov
lret
pop
daa
sbb
mov
xchg
lds
fmull
dec
inc
in
mov
pop
or
add
sbb
ss
outsb
sahf
xchg
push
xor
sahf
cmpsb
repnz
xchg
cs
inc
mov
sahf
xchg
dec
jle
out
pusha
push
jmp
pop
lret
aas
cwtl
es
push
ds
cmpsl
outsb
xchg
lea
rcll
add
cmp
and
fildl
xlat
pop
lods
xlat
and
gs
test
scas
and
cmpsl
or
xchg
in
push
es
mov
mov
fimuls
pop
dec
push
scas
cwtl
out
xchg
outsl
and
iret
push
into
cmp
loope,pt
das
inc
jg
fwait
aaa
ljmp
imul
xchg
bound
jo
movd
out
xlat
push
pop
cmp
into
xchg
mov
sbb
das
iret
xchg
pop
in
lahf
data16
pop
ss
repz
jae
xchg
push
dec
sub
xchg
lahf
jbe
loopne
negb
enter
movsb
fs
rcrb
sub
push
jecxz
cmpsl
fisubrs
dec
aas
push
cmpsb
xchg
push
ja
nop
cmpsb
push
mov
mov
push
dec
push
xchg
pop
into
int
nop
das
mov
push
pop
xchg
inc
cmpsl
dec
xchg
pop
push
pop
adc
scas
popf
mov
iret
test
ficoms
cmc
mov
add
ds
xchg
inc
add
jne
insb
push
dec
pop
mov
cmp
and
ds
push
addr16
aaa
outsb
lds
push
cmc
pop
cmpsl
rcll
pop
stos
adc
shr
sub
fs
data16
inc
push
roll
mov
lods
dec
sbb
lret
dec
aad
fdivrp
sahf
aas
ffreep
fists
inc
jmp
mov
clc
es
pop
mov
les
push
loop
cs
mov
cmpsl
iret
add
dec
addr16
and
jbe
loop
inc
sub
or
outsb
into
fmul
fldl
daa
inc
xor
jnp
ret
cmpsb
jo
into
in
mov
pop
xchg
jns
push
scas
lahf
mov
mov
lea
pop
cmp
les
pop
inc
jno
mov
xlat
rcrl
fmulp
cmpsl
mov
enter
mov
fisttpll
out
add
cmpb
jb
and
xchg
lods
mov
push
inc
jbe
lret
sub
xchg
add
mov
aas
aaa
inc
cmpsb
int
es
xor
leave
push
iret
push
sub
jle
test
addr16
push
mov
xor
push
dec
cmp
and
push
pop
ss
out
lahf
mov
ret
mov
inc
inc
iret
and
outsb
xchg
in
mov
push
or
fbstp
fidivs
inc
push
lock
mov
and
lods
cmp
pop
mov
sub
fs
stc
mov
outsb
push
dec
mov
mov
inc
ficomps
lods
fidivs
mov
push
clc
in
jo
lahf
insb
les
lods
cmc
push
sbb
mov
es
rcll
xlat
ja
dec
push
pop
stc
ds
mov
push
mov
in
out
cmp
xchg
push
arpl
fsubl
xchg
mov
test
push
push
mov
js
xlat
xchg
loopne
push
jne
std
push
loop
mov
into
pusha
jle
xor
add
mov
xchg
out
jo
in
sub
dec
and
fucomp
mov
fisubs
and
out
jecxz
push
fdivl
cmp
out
pop
sahf
pop
inc
push
pusha
add
xlat
or
xchg
adc
aas
or
imul
cmpsl
sub
adc
clc
push
mov
iret
jae
in
mov
daa
daa
mov
shll
scas
pop
xchg
lret
je
das
xchg
xlat
jmp
lea
gs
jle
outsl
cmpsb
pop
cmp
cmpsl
and
push
mov
dec
cmp
loope
xchg
dec
jecxz
das
daa
ja
xchg
subps
fucomi
push
insl
fnstcw
aaa
inc
repnz
jecxz
outsb
sub
inc
mov
nop
ficoms
inc
dec
stc
pop
fists
ret
sbb
jle
cs
aam
adcl
jo
imul
aas
addr16
push
mov
mov
mov
inc
call
ror
or
xchg
outsb
xlat
push
pop
mov
xor
imul
mov
gs
fs
test
lret
adc
pop
out
dec
into
repnz
rcrl
aaa
push
inc
pop
ljmp
xor
filds
ficompl
push
data16
jbe
loop
mov
pop
dec
push
cmpsb
clc
inc
test
es
xchg
dec
gs
pop
iret
inc
sahf
lahf
or
mov
mov
mov
cwtl
fdivrp
mov
xor
and
jg
out
std
addr16
into
push
push
and
xlat
scas
outsb
ds
inc
jbe
ja
icebp
xor
pop
pop
std
daa
push
cld
into
cwtl
xchg
mov
push
fildll
mov
fldenv
mov
sahf
push
pop
mov
cltd
daa
fisubrl
lds
subl
cmpsb
add
mull
insb
lds
out
push
into
pop
fmull
fs
inc
mov
jns
ds
jbe
cmc
xchg
mov
and
xchg
push
leave
push
scas
fidivrs
xlat
repz
je
inc
jo
aas
push
sub
ja
dec
js
inc
fisubs
sti
ljmp
jno
push
pop
cmpsl
xor
and
ret
push
push
stc
aas
push
cmpsb
pop
fcmovnu
das
out
pop
outsb
jo
rcl
xchg
cmp
cmp
dec
popf
mov
mov
test
dec
lahf
jg
xchg
add
and
mov
or
add
jnp,pn
xor
jle
adc
lret
jg
aaa
fldenv
push
icebp
xchg
jns
out
icebp
dec
out
nop
cmp
test
sub
pop
mov
jmp
out
inc
leave
lahf
das
scas
and
cmp
mov
aas
daa
sub
xchg
sub
ds
mov
sub
xchg
mov
xchg
mov
pop
xchg
out
cltd
mov
test
pop
scas
shrl
es
sub
xor
cmpsl
cmpsl
mov
push
ficomps
pusha
fistl
cmpsb
pusha
add
push
and
cmp
mov
and
call
pop
das
pop
jmp
les
cmpsl
mov
nop
js
into
mov
movl
cmp
je
cs
or
fcmovne
sub
push
fs
fidivs
push
mov
gs
aaa
mov
into
fsubr
pop
lea
inc
pop
data16
out
imul
in
mov
popa
inc
fstpl
push
add
test
mov
mov
inc
nop
outsb
sahf
mov
xchg
fstpl
and
push
and
xor
xchg
push
pop
add
test
cs
and
jge
in
out
jbe
dec
and
mov
mov
mov
add
mov
add
mov
inc
dec
addr16
pop
lds
mov
mov
mov
sbb
leave
dec
inc
jle
xchg
mov
pop
xlat
pop
dec
ret
scas
aam
out
mov
lcall
daa
int
fisubrs
hlt
sbb
push
ret
mov
mov
out
jg
mov
repnz
ja
sub
dec
cmpsb
gs
das
mov
out
inc
xchg
pop
jo
inc
scas
in
sahf
mov
push
xlat
jae
popf
dec
and
fdivs
dec
int
int
pop
cli
in
mov
mov
pop
jecxz
pop
data16
xor
and
sarl
int3
jbe
shll
sahf
pop
popf
jnp
out
dec
stc
outsl
dec
aas
stos
and
ss
mov
and
inc
ffreep
dec
hlt
dec
mov
in
outsl
jo
aas
pop
push
xor
mov
rorl
scas
xchg
js
pusha
push
push
inc
sti
lret
mov
pop
lods
in
addr16
push
mov
xchg
dec
cmpsl
push
xchg
xlat
and
inc
jle
sub
rcr
insl
mov
cmp
xchg
pop
scas
insl
in
std
js
test
daa
scas
mov
push
push
xchg
fnsave
nop
push
loopne
jmp
add
dec
jle
jmp
cmpsb
mov
fldenv
pop
daa
mov
lea
mov
xchg
and
out
cltd
sbb
loope
push
iret
pop
out
push
repz
and
inc
pop
jg
add
jo
push
int
cmp
nop
ja
aas
or
dec
and
push
sub
insl
pop
daa
jg
mov
mov
ret
and
clc
mov
inc
push
std
daa
lahf
cmp
dec
xlat
addr16
push
push
into
add
pusha
data16
and
gs
lods
cwtl
cmpsl
jo
gs
sti
xchg
mul
jmp
add
ss
xchg
repnz
mov
ja
int
xor
jecxz
push
push
cmpsb
mov
leave
push
dec
in
iret
xlat
push
cld
lds
into
sub
or
mov
sub
jmp
or
out
jg
mov
mov
xor
and
out
pop
aas
bound
out
mov
lahf
pop
push
pusha
jno
dec
add
scas
inc
sub
pop
ja
xchg
push
sub
xchg
and
ret
gs
je
mov
xchg
out
fisubs
arpl
push
es
mov
repz
pop
test
ja
stc
iret
inc
xor
movb
sahf
and
push
xchg
push
dec
jns
inc
sahf
into
aad
daa
mov
adc
ds
mov
movsb
dec
mov
data16
ds
mov
mov
jbe
das
es
lods
ljmp
loopne
ficomps
ds
add
pusha
xlat
daa
sbbl
mov
ficoms
inc
pop
jo
jo
xchg
jno
ljmp
das
aad
push
into
rcl
sahf
movsb
ja
enter
mov
scas
stos
gs
movb
lods
adc
roll
in
jle
mov
iret
ss
mov
sub
pushf
rol
fldcw
fidivrs
mov
add
jg
aaa
mov
mov
shr
leave
or
pop
add
enter
sub
scas
push
add
jmp
or
jbe
xor
add
rorb
jecxz
iret
bound
xchg
push
mov
ss
loope
sub
and
iret
ds
xchg
and
sbb
lds
cmp
xlat
push
mov
movsl
add
push
pusha
xchg
pusha
push
call
fsubl
addr16
adc
lea
mov
cmp
adc
sub
std
xchg
inc
leave
iret
xor
outsb
and
insl
adc
call
pop
jg
pop
hlt
je
xchg
push
or
push
inc
sub
movsl
mov
sbb
das
in
mov
fs
jg
ds
imul
jmp
aad
mov
mov
loopne
sahf
cmpsl
xor
inc
fs
out
inc
outsl
daa
sahf
lock
cli
lret
lret
jb
push
xchg
fldenv
push
adc
xor
test
xchg
pop
es
pop
lods
stos
addr16
rcrl
jo
xchg
out
mov
rcr
les
insb
in
popf
addr16
jle
pop
and
push
and
mov
scas
mov
rcrb
aaa
ss
dec
add
ss
aaa
or
pop
mov
pop
mov
iret
ficoml
bound
aam
out
pusha
aas
adc
inc
or
xorl
ljmp
dec
mov
pop
je
mul
cmp
icebp
mov
stos
arpl
aaa
outsl
jno
cmp
sub
shll
or
xchg
das
or
pop
push
cmp
mov
jno
ljmp
xchg
in
fistpll
mov
mov
out
lahf
stos
es
or
das
jbe
push
inc
stos
mov
xor
xchg
icebp
andl
jecxz
fistpll
in
push
jle
lods
call
ja
xchg
aaa
repnz
pusha
ljmp
ja
push
daa
call
rcll
xchg
add
pop
pop
mov
aad
cmpsl
vxorps
pop
push
mov
sub
js
fbld
add
inc
daa
cli
out
int3
fsubr
push
shll
inc
cmp
loop
xor
pop
lahf
aam
cs
add
xchg
push
inc
daa
jno
pop
cmp
loop
das
pop
outsl
xlat
push
test
outsb
into
lahf
add
js
push
pop
mov
mov
repnz
jno
cmp
jg
daa
jbe
inc
insb
rorw
jbe
mov
leave
outsb
xor
jbe,pn
mov
int
pop
inc
movl
push
sub
xchg
jmp
test
xchg
cmpsl
daa
cmp
scas
into
data16
jns
out
ja
dec
add
ffree
cmpsl
es
jle
fs
and
mov
pop
sub
imul
fidivrs
xor
push
dec
gs
xchg
ss
xchg
pusha
and
pop
sub
sub
rcll
movsb
pop
ja,pt
test
pop
xchg
xchg
mov
out
jle
cs
xchg
or
or
addr16
mov
andl
push
js
das
loop
aam
pop
addr16
repnz
fcompl
cmp
dec
lds
popl
and
lret
adc
and
push
cmp
ss
push
xchg
xchg
daa
add
xor
cmpsb
sahf
leave
push
pop
frstor
ss
push
pop
aaa
call
pop
inc
push
iret
inc
daa
adc
xchg
add
push
xchg
xchg
jg
add
ds
inc
fists
mov
adc
notl
stc
es
test
rcrb
ds
sahf
add
mov
mov
fiadds
inc
mov
popf
fisubrl
loope
daa
cmpsb
ds
repnz
nop
in
mov
sahf
mov
push
popf
push
adc
jmp
pusha
pop
xchg
mov
add
data16
shrl
jg
dec
lret
push
mov
cmpsl
push
clc
xor
and
mov
push
xor
iret
jbe
cs
mov
ret
in
push
aaa
xchg
or
ficoms
test
scas
cmp
cli
ja
xchg
pop
jbe
cwtl
xor
xor
daa
push
into
sbbb
pusha
es
call
mov
or
xlat
aaa
iret
cs
bound
xchg
xchg
pop
lds
jo
pop
or
xor
pushf
in
mov
mov
shl
pop
lret
add
push
lods
je
mov
push
ja
dec
jns
stos
push
sbb
jne
push
test
mov
data16
shrl
and
int
lods
sub
popf
mov
ds
pop
adc
lret
data16
xor
mov
sub
ss
jne
push
adc
in
jg
push
push
pop
in
out
outsb
nop
mov
xor
inc
fcmovnu
iret
sahf
push
es
daa
adc
aas
xchg
dec
aaa
xor
mov
cmp
push
push
add
pop
inc
aas
jbe
push
pop
inc
out
push
mov
and
jns
cld
mov
push
jbe
fwait
xlat
aad
cs
ficomps
nop
roll
mov
imul
jno
das
jo
imul
testl
in
int
outsl
cld
push
xchg
push
push
loop
dec
nop
into
pop
ja
pop
dec
push
ja
loopne
sub
nop
lds
inc
xchg
aam
imul
dec
push
bound
data16
lahf
mov
sbb
pop
and
dec
ss
aam
outsl
push
into
lahf
push
mov
roll
xor
in
mov
push
pop
push
jno
mov
mov
repnz
enter
cmc
ror
iret
fildll
dec
ret
sub
negl
scas
mov
ja,pt
cs
js
push
call
loopne
sarl
pop
pop
into
pop
add
mov
push
or
inc
mov
scas
mov
movsl
cmpsl
popa
push
dec
push
movsb
cmp
out
incb
and
xchg
jo
in
pop
push
inc
ss
ret
mov
mov
sub
pop
repnz
sbb
aas
lret
jns
jne
xlat
scas
lds
jmp
or
fdivrl
or
out
int
into
adc
in
inc
scas
cmpsl
mov
push
cs
imul
xchg
pop
and
add
cmp
xor
pop
cmp
dec
xchg
and
pop
rol
es
mov
iret
dec
cmp
sarb
xor
int3
mov
pop
jbe
cmp
movb
ret
enter
mov
push
add
mov
ss
jns
push
cli
add
icebp
sub
mov
mov
pop
aad
roll
int3
fstpt
jo
mov
mov
test
jno
xchg
xchg
cmp
or
js
xchg
in
addr16
and
jle
dec
mov
je
in
xchg
jns
and
das
dec
lea
cmpsl
cs
bound
cmpsl
nop
arpl
xchg
ss
pop
outsl
dec
outsb
sub
pop
cmp
movsb
gs
pop
scas
xlat
push
sub
popf
shrb
sbb
xor
movsl
cmpsl
jecxz
ds
and
push
hlt
lods
cmp
inc
mov
loope
aaa
pop
lahf
cmpsb
pop
fcompp
sub
sahf
faddl
cwtl
dec
cwtl
dec
fldenv
inc
outsl
scas
fistl
push
repz
popf
fwait
cltd
cmpsb
and
jmp
and
xor
addb
in
jbe
gs
xchg
fidivrs
iret
jg
fwait
mov
adc
shll
jg
sarl
and
int3
leave
adc
cs
icebp
xlat
sahf
loope
scas
aas
push
inc
js
arpl
fs
pop
lret
testb
mov
xor
cmc
jns
cmpsl
sub
cmp
dec
and
je
mov
pop
hlt
fbld
inc
pusha
data16
and
mull
cwtl
sub
push
rcrl
iret
cmpsb
ja
pop
cmp
cmc
and
dec
aaa
add
enter
push
and
adc
loope
push
addr16
mov
loope
ja
xchg
nop
push
adc
and
imul
push
jae
fbstp
pop
add
dec
enter
outsb
jecxz
push
sahf
sub
das
pop
cmp
jbe
pop
add
add
rcll
fwait
add
xlat
pop
cmpsl
jb
mov
pop
push
fisubrs
xchg
lahf
pop
sbb
mov
jnp
push
jle
push
push
jg
push
and
fs
mov
mov
outsb
pop
pop
xrelease
push
daa
cmp
data16
rcrb
mov
push
jbe
lahf
daa
inc
mov
push
xchg
addr16
sbb
pop
adc
xchg
add
dec
mov
cmp
mov
maxps
test
sbb
mov
push
mov
mov
lods
inc
sub
push
ds
and
pusha
mov
aaa
subl
push
test
pop
pop
adc
mov
mov
pop
insl
cmp
jns
scas
mov
sbb
gs
mov
mov
jle
jbe
dec
xchg
and
push
and
xor
or
cmp
and
jmp
and
jbe
and
pop
xchg
test
das
dec
sbb
daa
out
push
in
aas
ljmp
jo
aam
pop
pop
ficomps
sahf
out
dec
pop
push
xlat
outsl
iret
into
mov
push
fldl
pop
aaa
mov
popf
mov
scas
pop
mov
outsb
es
out
pop
xchg
fidivs
subw
scas
pop
fnstcw
dec
fbld
xor
dec
cmpsl
scas
add
ficomps
aaa
and
pop
in
xchg
loopw
sub
cmpsl
pop
pusha
loope
pusha
xchg
push
fcomip
into
xor
pop
push
adc
iret
scas
bound
leave
cmpsb
es
xchg
lods
daa
xlat
xchg
lret
xchg
in
aaa
repz
push
std
ret
imul
sti
mov
insl
push
shll
dec
sbb
dec
push
into
addr16
xchg
and
ds
pop
sbb
daa
iret
jle
cmp
ss
rol
xor
jle
ret
test
scas
pop
gs
std
sarl
pop
into
sbb
cmpsl
mov
mov
mov
scas
dec
imul
pop
lahf
cs
and
mov
ret
mov
mov
lods
dec
xlat
pop
mov
inc
push
xchg
pop
sti
hlt
push
repnz
movb
push
aad
ds
lods
xchg
jnp
push
mov
push
fdivp
call
outsl
divb
or
jle
xchg
in
add
sub
lret
push
sbb
sub
fs
pop
pop
repnz
push
fistpll
sub
and
ja
or
cmp
and
ja
dec
mov
mov
lret
lods
inc
ret
jns
icebp
pusha
ja
or
adc
xor
es
movsb
sub
xchg
ds
sahf
mov
xor
jne
data16
push
inc
add
fbstp
pop
sub
leave
iret
das
inc
outsl
data16
push
movl
dec
inc
lds
lahf
mov
mov
mov
mov
stc
pusha
addr16
iret
pushf
pop
fstpl
inc
inc
call
std
loope
mov
sahf
jmp
mov
mov
pop
andl
pusha
ffree
dec
pop
xor
sub
bound
stos
movsb
ss
dec
xchg
mov
inc
fistpll
xchg
push
das
imul
fldpi
scas
into
ds
popf
xor
inc
neg
sbb
pop
outsl
aaa
and
or
mov
scas
hlt
out
filds
pop
mov
scas
je
call
pusha
addl
cmpsb
addr16
ss
fs
enter
sbb
iret
pop
lcall
faddl
inc
and
push
ds
jle
pop
mov
pop
aas
pop
inc
fbld
add
and
push
xchg
mov
fidivrl
xor
ja
xchg
pop
scas
pop
jle
inc
push
hlt
in
int
pop
std
pop
adc
push
arpl
mov
jp
dec
ret
std
xlat
and
lods
test
daa
fistl
in
mov
push
and
push
xchg
jb
and
divb
jno
xlat
cmpsl
push
jg
lahf
mov
fcomip
mov
pusha
inc
jne
test
xchg
push
lahf
add
repnz
daa
repnz
scas
mov
push
pop
mov
xchg
into
mov
push
mov
adc
jbe
scas
test
inc
push
test
pop
xlat
mov
aad
movsl
cmpsl
fsubrp
and
push
pop
jbe
jo
xor
icebp
pop
push
arpl
addr16
mov
pop
sarl
aas
push
sahf
pop
lods
dec
push
cs
iret
data16
fisubs
pop
cmp
mov
scas
jg
cmpsl
das
loopne
bound
push
in
dec
pop
pop
add
mov
jg
inc
xor
lahf
and
mov
push
pop
stos
pusha
inc
shlb
xor
cli
fcomps
jo
es
inc
mov
call
pusha
sub
nop
dec
xchg
gs
mov
rcll
icebp
pusha
jl
insb
iret
inc
sbb
pop
xchg
jns
mov
mov
sbb
jp
push
mov
xchg
jmp
jb
rclb
ja
aas
fidivl
inc
aas
outsl
push
lret
das
inc
add
cld
dec
xchg
test
cmpsb
in
addr16
cmpsl
nop
dec
xchg
mov
ljmpw
std
sub
imul
andb
add
icebp
fnstsw
dec
mov
das
jno
outsb
pop
xor
mov
js
ror
aas
es
mov
push
popl
push
push
movsb
xchg
xlat
inc
inc
jge
lret
inc
pop
test
stos
jecxz
xlat
cmpsl
add
push
outsl
jns
cmpsb
jg
in
xchg
enter
fsts
es
fstpt
call
mov
push
sahf
scas
pop
addr16
daa
sub
stos
popa
xor
push
push
push
in
pop
nop
xchg
cwtl
stc
inc
les
jb
pusha
adc
out
cmpsb
jle
pop
push
cmp
push
jg
jne
aad
es
ficoms
inc
pop
or
cs
outsb
inc
lods
mov
inc
or
es
je
lea
repz
inc
arpl
js
popa
hlt
shll
mov
add
out
cmp
push
mov
mov
jbe
test
cmp
xchg
outsb
pusha
xchg
mov
cmp
aaa
insl
inc
add
je
or
outsb
mov
push
mov
call
jg
adc
sbb
nop
and
aad
lret
es
mov
xor
loopne
ljmp
scas
repnz
test
pop
sti
dec
xchg
xchg
pusha
adc
jle
daa
ss
mov
lahf
sbb
xor
loop
cmpsl
cmp
lods
in
fildl
adc
cmc
ficoms
inc
das
ficoml
pusha
pop
aad
rcl
loop
mov
ss
sub
daa
jecxz
ds
dec
inc
jo
fidivrl
xchg
mov
sti
stc
xchg
ret
cmpsl
pop
scas
out
push
cmpsl
sbb
outsb
and
out
fdivr
out
addr16
stc
dec
sub
xor
mov
pop
xlat
cmpsb
jb
mov
push
push
pusha
leave
cmpsl
inc
inc
stos
adc
add
ror
cs
push
inc
cmp
lret
addr16
test
jns
xlat
lock
and
call
stc
cmc
repnz
push
mov
cmp
xchg
loope
dec
addr16
mov
xlat
cltd
gs
das
jne
dec
mov
out
push
ss
pop
in
pop
ret
mul
pop
mov
dec
cs
xor
divl
in
cmp
mov
in
into
popa
sub
repnz
pop
es
xchg
icebp
mov
clc
fisttpll
xlat
lock
push
adcb
pop
xchg
es
das
lea
enter
mov
clc
mov
pop
inc
ja
add
xchg
pop
and
daa
aaa
enter
push
mov
add
lods
daa
xlat
loope
lahf
pop
into
push
sbb
lret
out
fs
sahf
xchg
jle
nop
daa
in
dec
outsb
ret
int
mov
lods
pop
in
xor
push
into
xchg
sahf
mov
aas
data16
addr16
inc
mov
arpl
hlt
call
es
scas
iret
scas
xlat
xor
ja
pop
nop
add
lea
pop
inc
xor
or
iret
dec
push
jbe
adc
outsb
cmpsl
xor
cmc
gs
cmp
stos
jb
pop
inc
xor
ror
sahf
and
das
cs
and
fxch
daa
nop
pop
cmpsl
xchg
test
and
jg
roll
pop
gs
ss
fldenv
ds
inc
outsb
dec
into
das
mov
cld
jno
push
ja
xchg
ja
add
pop
movl
and
jne,pt
sub
xchg
pop
mov
and
cmp
fimuls
pop
ss
daa
and
jbe
sub
in
pusha
push
gs
fisubrl
lret
xor
movsb
inc
aas
sahf
and
pop
xchg
add
arpl
pop
add
push
and
arpl
gs
rorl
ss
inc
popf
outsl
push
fisubs
loopne
or
add
adc
jb
dec
pop
mov
and
xchg
dec
scas
mov
daa
aas
adc
ficoms
mov
loope
divb
xchg
rcrb
imul
push
das
jno
pushf
fsts
pop
push
push
aaa
push
and
inc
clc
jbe
inc
jae
in
lods
gs
popf
call
cmp
or
daa
sub
jmp
imul
pop
in
pop
jle
addr16
xlat
loop
nop
pop
xchg
sub
sub
sub
mov
ss
push
dec
fdivl
std
lds
ja
in
add
daa
inc
or
ja
pop
jecxz
mov
test
dec
inc
arpl
push
xor
pop
scas
xchg
pop
mov
mov
imul
xchg
mov
mov
mov
jo
jg
cmp
daa
subl
outsb
and
xor
push
fmulp
mov
jno
fstpl
fsub
mov
das
pusha
cmp
loop
pop
push
mov
sub
faddp
cmp
jle
xchg
push
pusha
mov
hlt
mov
mov
into
add
push
inc
addr16
daa
push
scas
inc
lahf
push
add
rclb
ss
das
out
and
outsb
xorb
cmpsb
dec
fs
movq
mov
pop
mov
xchg
lret
arpl
in
call
mov
cmp
mov
or
push
add
mov
in
daa
and
dec
mov
sub
pop
loop
pop
mov
fistpll
xchg
mov
shll
call
dec
pusha
loop
jg
inc
inc
addr16
daa
push
push
mov
xchg
data16
push
fisttpll
adc
mov
sbb
test
fneni(8087
mov
stos
out
cmpsl
cmp
mov
xchg
jno
into
push
dec
mov
xlat
data16
xor
cmp
loop
add
iret
daa
cmpsl
inc
pop
pusha
das
push
out
mov
add
lods
mov
lods
ffree
mov
fisubl
jl
nop
js
pop
in
int
pop
cs
mov
xlat
push
pop
mov
aaa
pop
xor
fs
and
iret
cmpsb
scas
or
rorl
sub
pop
lods
xor
cmp
inc
lahf
jns
lea
fidivs
fidivrs
jle
mov
rorl
pop
pop
pop
fsubp
loopne
adc
xor
and
std
fidivrl
outsb
js
lahf
mov
out
into
inc
dec
lock
scas
add
es
mov
daa
mov
jbe
lea
insl
adc
xchg
loopne
push
iret
dec
mov
pushf
xchg
pop
sahf
mov
rcrl
outsl
outsb
push
daa
aad
iret
fbstp
jb
mov
dec
xor
and
cmpsl
xchg
bnd
add
mov
incb
cmpsb
add
loop
sub
lcall
and
daa
fwait
xor
test
cmpsl
pop
push
mov
data16
pop
fcmovnb
outsl
fwait
cmpsl
mov
fisttpl
xchg
pop
es
fistpll
iret
and
stos
pop
xor
decb
lock
sbb
es
dec
mov
xlat
mov
dec
flds
pusha
jo
xor
ss
xor
jle
lahf
lret
inc
mov
movsb
and
xor
dec
jno
fbstp
push
inc
inc
movb
aas
das
clc
sahf
scas
mov
leave
push
push
iret
lods
pop
inc
xchg
mov
xchg
mov
mov
inc
and
clc
iret
xor
and
mov
mov
xor
dec
scas
mov
ja
jo
inc
daa
fisttps
test
outsl
cmpsb
push
cmpsb
shll
or
dec
pop
xor
xchg
inc
mov
scas
pop
push
imul
mov
fs
aaa
cli
sub
and
std
std
adc
mov
inc
scas
negb
xorl
and
fisubrs
aaa
jbe
add
cmpsb
add
outsb
xchg
insb
loopne
sbb
pusha
mov
clc
outsl
imul
out
shll
push
mov
daa
lret
es
addr16
or
mov
addr16
enter
xchg
iret
inc
test
mov
in
push
mov
push
cwtl
jle
rolb
cli
xchg
xchg
inc
pop
outsb
cmc
cltd
cmp
mov
mov
dec
in
push
decl
pusha
and
out
push
jg
fs
or
cmpsb
jmp
ret
xor
push
lret
mov
jnp
mov
mov
jbe
push
pop
gs
inc
mov
xchg
lcall
movb
jmp
mov
dec
jbe
call
fdiv
cmpsl
push
add
out
ss
lods
pop
movl
cs
jmp
mov
fsubs
mov
push
fnstenv
scas
push
nop
loopne
pusha
adc
xlat
mov
push
outsb
mov
mov
daa
std
frstor
addr16
and
sbb
dec
xchg
push
stos
xchg
pusha
mov
dec
jp
xlat
push
dec
dec
daa
xchg
lock
loop
das
add
cmp
jecxz
xlat
sub
jle
scas
push
lods
sahf
mov
leave
ja
daa
mov
mov
arpl
jb
lock
in
aaa
addr16
cmp
pop
xchg
fsts
mov
call
ss
pop
inc
aas
sub
stos
xchg
lcall
pop
fwait
push
mov
push
repnz
fucomip
fstpt
inc
sarl
ret
and
or
stos
negb
lret
pop
mov
arpl
pusha
pop
cmp
ja
cmp
outsl
outsl
cmpsl
cmovbe
sub
add
cmpsb
iret
dec
pop
nop
mov
xchg
imul
in
call
dec
sbb
pop
das
inc
cmpsl
add
ret
pop
and
test
call
pop
aad
out
iret
xchg
and
sub
and
mov
xor
xchg
sbb
out
mov
pusha
test
repz
jl
fcom
sub
inc
xchg
push
addr16
mov
hlt
mull
lea
leave
xor
mov
shrl
push
iret
mov
andl
dec
cs
pop
jle
pushw
dec
std
insb
push
push
xchg
push
das
jns
insb
xchg
xor
mov
push
inc
daa
mov
dec
push
mov
xchg
add
ja
ss
popf
nop
into
test
xchg
jg
push
mov
jge
andb
jo
mov
jle
and
add
mov
clc
adcb
xlat
jne
sub
push
and
loopne
xlat
flds
mov
mov
xor
clc
or
dec
les
enter
pop
aas
fsubl
mov
jbe
add
or
test
pop
fidivs
test
xchg
pop
popa
dec
push
insb
inc
das
dec
sub
pop
jno
outsb
push
mov
xchg
mov
movsl
mov
jmp
scas
or
inc
jno
cmp
jle
mov
fcmovu
sbb
and
xchg
icebp
outsl
ja
xorl
sbb
and
fmul
aas
jmp
in
ja
jp
fistl
ret
cmp
daa
cs
push
and
inc
push
inc
push
insb
frstor
xor
jo
push
jno
pop
dec
rcrl
movsb
mov
jo
mov
es
gs
and
fbld
sahf
je
sarl
cmpsl
cmp
xchg
andb
hlt
shl
imul
pop
lahf
mov
scas
dec
and
out
add
xchg
ja
daa
xlat
repz
and
addr16
push
xchg
xor
aas
data16
iret
int
xlat
jge
insl
push
mov
xchg
pop
pop
dec
jmp
stc
ja
jns
pop
notl
leave
lods
aaa
nop
int
daa
sti
adc
test
and
mov
inc
adc
rcrl
xchg
fistpl
mov
xor
mov
shlb
pusha
inc
push
xchg
xor
nop
sub
pop
add
push
xchg
xchg
mov
aam
jecxz
pop
data16
hlt
rcr
push
mov
push
jnp
out
push
add
and
cmp
pop
jbe
xor
sahf
xchg
cs
cmp
jle
push
aas
mov
sbb
push
pop
mov
out
push
sbb
mov
loop
push
lahf
scas
push
xchg
add
push
inc
and
out
cmpsl
outsb
data16
ss
mov
test
mov
xlat
pop
dec
jne
outsl
int
mov
bound
aad
mov
mov
nop
or
into
xchg
dec
push
inc
rclb
test
rcll
mov
sahf
xor
cmp
mov
fs
push
scas
pop
inc
add
pop
push
rol
mov
pusha
mov
ss
and
sbb
xchg
pop
stos
movsb
xlat
cmpsl
pusha
mov
fbld
icebp
xor
outsb
mov
hlt
jbe
sub
je
jp
sbb
leave
call
sahf
lahf
dec
divl
xchg
pusha
ja
push
mov
lcall
popa
cmp
and
ds
pop
ja
mov
shlb
mov
xchg
fidivs
xchg
aaa
xlat
jecxz
xchg
clc
dec
or
dec
aas
and
repz
pusha
shll
ss
bound
fidivrs
pop
push
jge
xchg
sbb
jae
mov
pusha
mov
aad
idivb
pop
push
xor
ja
pop
fistps
aaa
out
cmpsb
sahf
push
jmp
out
jle
cmpsb
jg
fiaddl
mov
shll
sbb
mov
inc
dec
int
jg
cmp
scas
cmpsl
mov
jo
inc
das
add
and
in
cmp
jg
pop
xlat
xchg
mov
jge
mov
ficoms
jle
hlt
orb
mov
sub
mov
mov
or
dec
cmpsl
xchg
cli
add
daa
cmpsl
je
fisubs
inc
pop
and
lahf
into
inc
jno
mov
xchg
faddp
push
and
inc
imul
test
adc
das
and
ds
and
ss
xchg
mov
mov
enter
test
dec
jle
pop
mov
lea
mov
inc
data16
sub
fucomip
shll
stos
cmp
outsl
sahf
int
cmpsb
inc
pushf
nop
lahf
or
insl
ds
push
xlat
push
xchg
es
into
dec
jle
lahf
and
fstpt
cmp
es
xchg
xchg
xchg
and
push
in
inc
and
aas
cmpsb
cmp
pop
push
and
dec
outsb
cmpsb
repnz
jo
dec
cmp
out
pop
cmp
lods
bnd
iret
inc
sbb
or
sub
lock
lds
mov
pop
jle
fs
and
das
outsl
ja
jg
pop
shll
dec
scas
xchg
aaa
call
pusha
lcall
loope
push
aaa
xor
out
xchg
add
neg
jmp
pop
dec
add
ja
movsb
add
and
cmp
in
in
mov
mov
push
xchg
or
iret
andb
sub
xchg
dec
cli
mov
mov
fimuls
xor
dec
aaa
pop
xor
enter
mov
aas
mov
xchg
stc
iret
push
cmp
cmp
mov
pop
and
outsb
push
fidivs
fcmove
js
hlt
dec
dec
into
mov
add
nop
pop
outsl
push
xlat
rol
rolb
fildl
sub
out
inc
or
sbb
push
lahf
inc
and
xlat
xchg
and
mov
data16
mov
and
push
into
jle
mov
mov
insl
or
aad
pop
aaa
mov
data16
push
es
xchg
es
push
stos
loopne
or
push
and
outsb
mov
repz
ss
push
inc
aas
sub
jne
outsl
outsl
ficoms
xor
jns
lods
push
push
sbb
xlat
sub
mov
outsb
mov
into
xchg
xlat
out
sub
aaa
sub
addb
push
pop
jbe
cltd
cs
jb
addr16
aaa
fwait
leave
aas
fisttps
pop
sub
pop
es
fisubs
fwait
jo
fiadds
push
jbe
xchg
add
jo
xor
xchg
ja
out
cmpsb
mov
inc
lahf
daa
daa
cmpsl
sbb
out
xor
pop
int
fistpll
pop
mov
shrb
push
pop
stos
jmp
xchg
inc
mov
loope
mov
inc
cmpsl
das
sbb
jg
inc
sahf
sbbl
mov
into
imul
inc
push
movsl
sbb
xor
arpl
jge
out
xchg
and
pusha
mov
lock
push
dec
daa
aad
cmpsl
pop
shlb
xlat
inc
fiadds
nop
dec
sti
xchg
iret
pop
daa
adc
int
cmpsb
dec
aaa
stos
pop
xchg
pop
jno
mov
inc
loopne
fistl
inc
push
and
jns
in
mov
jno
pop
sub
fsub
leave
sbb
scas
add
fildll
push
fdivrl
ja
loopne
mov
jle
push
jo
clc
mov
sub
or
repnz
add
xlat
adc
push
iret
sahf
pop
inc
push
inc
pop
sub
imul
push
leave
fcomp
popf
sub
dec
fists
sbb
jne
out
mov
loopne
adc
dec
pusha
pop
xor
addr16
lahf
loopne
adc
push
and
push
pop
or
insl
leave
aas
mov
int
ljmp
scas
inc
div
adc
xchg
mov
enter
test
and
and
into
in
daa
orl
push
cltd
xchg
lahf
xor
push
xlat
cmp
jne
dec
stc
cmc
mov
insl
mov
push
lods
pop
outsb
outsl
lret
mov
test
leave
sti
cmp
cwtl
vpaddusw
aas
jecxz
outsl
push
dec
dec
push
subb
aad
loop
ds
ja
pop
nop
in
jmp
mov
hlt
xor
scas
push
push
cmpsb
jo
test
mov
xchg
repz
and
mov
cltd
pop
pop
push
scas
pop
xor
out
jo
js
pop
int
enter
push
mov
and
or
xchg
pop
and
mov
inc
push
sbb
pop
lock
mov
inc
cmpb
leave
or
mov
dec
mov
jl
aas
aad
inc
inc
mov
pop
pusha
adcb
sahf
stos
mov
fsubp
or
cmp
and
xchg
mov
scas
inc
pop
inc
nop
xchg
mov
lahf
pop
dec
int
xchg
dec
inc
pop
aas
add
sub
pop
inc
std
call
push
aas
mov
enter
mov
fstpl
pop
clc
in
push
mov
xchg
add
fstps
dec
inc
call
sahf
fimuls
addr16
cmpl
pushw
push
daa
dec
loope
into
push
dec
inc
in
xchg
push
and
js
push
pop
mov
out
lds
fldenv
inc
inc
fiadds
inc
jp
push
pop
lret
mov
lret
dec
xchg
cmpsb
pushf
aaa
bound
ja
xchg
out
mov
xchg
xchg
inc
fbld
aas
push
jp
std
inc
test
pop
int
push
out
add
hlt
mov
mov
pop
xor
ficompl
in
in
and
fs
pop
jnp
daa
sbb
dec
out
cld
and
out
scas
fidivs
lahf
inc
outsb
jae
push
rol
out
push
adc
movsb
fucomi
inc
mov
leave
gs
out
pop
mov
xorb
xor
push
ret
or
aaa
pop
pop
mov
push
outsb
xchg
in
daa
pop
ljmp
push
pop
aam
popf
ret
out
ja
es
push
outsl
daa
mov
fisubs
cmp
inc
xor
mov
loop
xchg
xchg
sub
into
pop
xchg
mov
xor
mov
inc
pusha
mov
and
xchg
aaa
pop
inc
mov
mov
cs
cltd
pop
lods
aam
inc
jle
sub
xor
outsl
xchg
gs
sub
addr16
xchg
pop
cs
iret
mov
loopne
loop
pop
lretw
add
daa
arpl
push
ja
outsl
sbb
jge
and
repnz
xor
push
and
mov
outsb
pusha
cmp
ficoms
test
enter
xchg
and
jo
es
call
push
cmp
pop
fsubs
out
imul
sbb
push
push
icebp
jle
mov
fisubs
cmpsl
repz
out
inc
jg
xor
mov
pop
push
gs
xor
outsb
stc
cli
pop
ja
xchg
mov
ds
mov
mov
pop
into
pop
lds
and
push
loope
mov
jle
insl
pusha
push
lock
inc
cmpsl
out
fs
mov
pop
adc
fs
adc
xor
mov
push
outsb
sahf
mov
scas
cmpb
xlat
data16
lahf
pop
add
jbe
push
stos
inc
addr16
xchg
out
dec
aaa
fiadds
test
lock
mov
fiadds
mov
pop
stc
xchg
daa
push
mov
test
dec
es
inc
lods
call
cld
bound
and
sahf
pusha
aam
outsl
aas
in
ss
outsb
icebp
inc
and
push
xchg
fisubs
inc
nop
scas
lds
push
or
adc
aas
jecxz
scas
xor
add
imul
mov
dec
lods
popa
repnz
push
xchg
jecxz
jg
shrl
or
iret
mov
fwait
push
cmpsb
scas
stos
ljmp
mov
mov
mov
pop
ss
xor
punpckhdq
movsl
cmpsl
lret
cmp
shll
or
jno
jo
out
lahf
gs
cmp
cmp
jmp
mov
int
ficomps
push
xorb
mov
jae
ds
adc
pop
lahf
outsb
fidivrs
jg
jle,pn
js
pop
and
jno
js
dec
daa
push
add
enter
clc
out
push
aas
addr16
pop
es
mov
mov
clc
fstl
inc
rcl
xchg
lds
out
xlat
sub
or
aam
pop
mov
ss
cltd
fisubrs
pop
test
pop
jg
fstps
pop
ja
sub
inc
call
mov
xchg
xchg
jb
adc
mov
mov
push
into
xlat
jo
daa
popf
inc
cs
movsl
xchg
in
dec
mov
jl
mov
icebp
mov
nop
iret
fstpt
pop
push
in
cs
xchg
pop
mov
ds
fimuls
popf
ss
pop
sbb
notl
pop
cli
scas
push
xor
inc
mov
sahf
xlat
shll
inc
scas
push
std
pop
pop
adc
fsubp
jb
push
lcall
fldt
jecxz
aas
and
fs
lahf
ficomps
cli
leave
outsl
das
addr16
repnz
dec
mov
mov
loope
cs
mov
repz
lock
xor
into
dec
mov
lcall
sahf
js
xchg
dec
inc
mov
jbe
loope
aaa
das
inc
addr16
data16
fidivl
popf
mov
dec
and
aaa
and
mov
mov
dec
push
adc
orl
sahf
pop
add
sti
imul
mov
icebp
addr16
dec
loope
cmpsl
push
inc
jle
mov
notb
das
pop
push
mov
mov
scas
xchg
dec
jno
jo
cmpsb
xlat
ds
cmpsl
iret
aas
jmp
popf
push
ficomps
inc
push
mov
stc
outsl
xchg
cmp
cmpsl
mov
aas
xchg
mov
and
gs
xchg
cs
pop
cmpsb
test
addb
mov
jno
jbe
cld
jle
fildll
and
outsl
push
out
push
sahf
xchg
mov
add
and
mov
mov
mov
outsb
cmp
push
push
jecxz
and
je
aaa
mov
cmpsl
ja
mov
fnstcw
cs
das
xlat
les
flds
cld
jo
xchg
loopne
mov
xlat
jns
lea
add
pop
add
lods
pusha
dec
mov
jae
in
arpl
dec
xchg
inc
ja
adc
jo
jle
sbb
push
cmpsl
ret
shlb
ljmp
mov
mov
fcmove
xlat
inc
out
xchg
scas
mov
aaa
es
lods
mov
xchg
imul
insb
int
push
xlat
fistps
out
outsb
jo
sub
xchg
xor
popf
loope
jbe
xchg
sahf
dec
iret
add
sub
sbb
dec
cmp
ljmp
pop
xor
roll
cmp
shll
ss
cmpb
arpl
and
in
lret
mul
sahf
cmp
dec
push
jo
dec
or
mov
popf
pusha
ja
lea
mov
pop
inc
pop
in
ds
lahf
cmpsl
sub
mov
lods
jae
xchg
xlat
outsl
xchg
dec
lahf
sbb
jmp
cmp
popf
jns
pop
xchg
leave
add
fidivs
fistps
and
gs
jmp
out
pusha
and
mov
xor
mov
fs
fiaddl
push
sub
mov
mov
mov
mov
in
lret
and
pop
xchg
daa
flds
add
sbb
push
mov
mov
int3
ljmp
std
in
outsb
pop
cld
sub
je
cmpsb
je
xchg
push
xchg
nop
ja
cmp
icebp
cmpsl
cmpsb
outsl
jns
dec
and
inc
daa
push
push
push
aaa
gs
ljmp
mov
iret
scas
aas
push
push
outsb
pop
orl
nop
dec
adcb
add
test
daa
into
dec
dec
iret
or
jmp
mull
pop
or
out
ffreep
into
pop
push
dec
inc
add
xor
xchg
inc
es
mov
xor
jecxz
fbstp
pop
addr16
mov
stc
or
push
mov
stos
repnz
dec
or
jbe
in
ss
push
sbb
push
and
out
mov
push
pop
inc
mov
bound
js
into
inc
cmp
xchg
je
push
test
xor
sub
sub
and
pop
pop
fnstsw
outsb
in
scas
stc
sub
movsl
push
mov
xlat
dec
cmp
fsubrp
cmc
mov
pop
cmpsl
iret
jno
scas
push
outsb
in
aas
daa
add
cmpsl
or
cld
subl
mov
call
jmp
outsb
xor
inc
out
jbe
into
outsl
adc
mov
xlat
scas
jae
ss
mov
jecxz
aaa
data16
pop
inc
mov
mov
inc
out
jns
jg
push
push
xlat
pusha
xchg
push
cmpsb
mov
mov
arpl
cmp
repnz
in
inc
pop
cmpsl
fidivrs
sub
pop
js
rdtsc
push
add
popf
pop
push
loope
xor
enter
icebp
das
mov
xchg
dec
daa
mov
mov
ds
xor
sbb
daa
push
mov
shlw
push
sarb
fistpll
outsl
fidivs
xchg
pop
lds
mov
push
clc
mov
push
jo
sahf
jg
ja
into
pop
pop
call
pop
aas
mov
shrl
outsl
in
lods
xor
clc
and
jle
ficomps
cld
and
inc
push
push
scas
icebp
pop
cmp
lds
out
mov
jbe
mov
push
aas
inc
inc
mov
mov
pusha
scas
or
aaa
and
clc
cwtl
cmp
jg
es
int
data16
les
mov
lret
xor
test
insl
push
push
xchg
mov
adc
cmc
mov
stc
incb
mov
and
xchg
cmpsb
enter
mov
popf
es
xchg
leave
rorl
xchg
call
in
and
pop
scas
fsub
lods
push
pop
push
push
mov
pop
xchg
pushl
cmp
push
push
ja
sahf
loope
cmp
into
out
jg
pop
leave
inc
lahf
xchg
lret
and
repz
pop
fiadds
pop
mov
jbe
xor
mov
jp
out
aaa
xor
mov
mov
sub
daa
xcrypt-cfb
cmpsl
fs
ss
ret
adc
cmp
mov
inc
pushf
cmpl
lahf
pop
cmpsl
push
and
ss
or
subl
dec
and
pusha
movsl
mov
add
pop
shlb
lds
pop
out
add
adc
jns
ss
pop
into
push
in
enter
mov
xor
push
mov
cmpsl
lds
nop
adcb
in
cmp
adc
xlat
das
ss
mov
lahf
popf
xlat
lea
leave
shll
mov
pusha
repnz
icebp
movsb
or
sahf
in
xchg
scas
das
push
daa
test
cmpsl
and
mov
push
or
push
xlat
es
outsl
lret
pusha
addr16
jo
fcoml
pop
insb
jp
mov
mov
out
mov
in
adc
mov
fsubrl
lods
in
lret
and
pop
pop
and
popf
xchg
loope
inc
push
scas
ficomps
push
ja
and
jns
pop
dec
push
cmp
push
xchg
cmpsl
ficompl
adc
movb
lods
mov
ret
clc
in
into
ja
ficoml
adc
mov
aas
xchg
inc
pop
cmpsb
pop
mov
pop
pop
int
sub
mov
cwtl
es
out
cmp
rcrb
fnstsw
addr16
pusha
mov
aas
and
xor
scas
pop
in
jge
dec
mov
sub
jne
pop
into
movl
jo
mov
out
cmp
sub
fxch
pop
sahf
pop
inc
mov
push
or
fnstsw
lods
add
cld
jg
inc
outsl
jno
dec
dec
jecxz
mov
dec
inc
xrelease
mov
mov
xor
out
in
ja
dec
or
frstor
dec
es
xor
xchg
data16
stc
cs
pop
enter
sub
nop
std
inc
cmc
loope
xlat
xchg
jo
pusha
out
xchg
popf
fstps
daa
movsl
pop
xchg
cmpsl
mov
xchg
dec
jle
jecxz
xchg
fisubs
jg,pn
lahf
mov
inc
cmp
pop
and
adc
out
xchg
xchg
sahf
add
mov
jg
aas
and
fdiv
push
and
mov
leave
test
ret
mov
mov
lahf
addb
and
pop
push
cmpsl
mov
pop
ljmp
clc
lret
inc
pop
xchg
popf
fistpl
int3
lds
test
sub
push
movsb
xchg
fs
ljmp
fistl
push
nop
jecxz
jbe
jo
js
sahf
jb
and
fdivr
pushaw
lahf
mov
popf
jae
out
push
push
divl
out
inc
outsl
fwait
scas
xchg
pop
push
es
es
lods
loope
jbe
xlat
es
mov
outsb
shll
adc
popa
lahf
sub
mov
jbe
jo
mov
out
mov
mov
ja
jbe
cmp
adc
xchg
sbb
out
outsb
and
js
xchg
pop
mov
jno
mov
mov
mov
aam
add
mov
hlt
mov
jns
push
push
out
fiaddl
ds
mov
lcall
cmp
pop
or
into
shll
fnstsw
push
fildll
mov
pusha
aas
ja
xchg
and
and
adc
xchg
cs
or
jle
sub
mov
dec
push
ds
sub
ja
dec
fs
cs
cltd
jo
xor
sub
mov
out
cli
out
cs
addr16
dec
cmp
nop
aaa
push
inc
and
iret
arpl
jg
xlat
inc
xchg
xor
jns
push
in
popf
cmp
dec
ja
cmpsl
lock
lahf
xor
cs
daa
cld
cmp
xchg
inc
mov
aaa
jo
xchg
aas
pop
jge
out
popf
outsl
xor
leave
inc
outsl
ds
mov
xor
cmpsb
xchg
fistps
jp
and
xlat
orb
xchg
outsl
jb
pop
push
jo
into
xlat
cmpsl
shll
loop
sahf
pusha
cmp
addb
inc
loop
es
mov
jns
jbe
aaa
adc
pop
mov
nop
inc
retw
aaa
sub
add
xchg
pusha
push
push
dec
dec
mov
std
pop
pusha
cs
es
xor
cmp
xor
pop
pop
dec
ret
loopne
add
subl
jmp
or
jle
sbb
mul
dec
xchg
inc
ja
mov
push
mov
lret
pop
dec
push
outsl
out
jle
aas
mov
lcall
popl
fbld
mov
addb
jg
cmp
mov
rcll
dec
push
lods
add
lret
shlb
daa
and
lock
sub
cmp
daa
dec
or
mov
icebp
pop
adc
pop
sub
dec
es
mov
lret
rcll
jl
subb
test
mov
dec
scas
sarl
dec
jle
pop
dec
daa
mov
inc
mulb
inc
scas
out
push
push
dec
mov
into
push
in
data16
daa
pop
cmpsb
pop
mov
pusha
push
push
mov
shlb
cmp
jnp
mov
mov
xchg
cmp
sbb
movsb
lret
mov
mov
leave
jae
dec
fs
jmp
into
cmp
mov
out
dec
cmpsl
data16
fidivrs
pop
cmp
frstor
pop
push
push
add
mov
outsb
xchg
adc
out
daa
rorb
stos
and
inc
jmp
dec
in
mov
nop
fisubrl
and
sarl
push
add
pop
pop
jge
mov
les
addr16
add
jo
push
faddl
out
lret
jp
es
rcl
cmp
pop
adc
xchg
mov
gs
sub
dec
mov
loope
sub
nop
pop
push
mov
add
aas
das
or
daa
mov
fistps
jp
imul
dec
das
out
iret
xor
data16
repnz
adc
push
loopne
pop
lret
jp
pop
sahf
pop
test
cmpsl
dec
test
pop
and
pop
ds
push
cmp
jbe
xchg
in
nop
popl
pop
cs
jg
fwait
or
add
push
jno
lahf
xor
and
daa
push
sti
in
mov
jl
cmpsl
mov
es
push
sbb
push
and
cmp
dec
loope
mov
loope
pop
xchg
push
mov
outsb
popf
and
mov
sub
mov
push
imul
pop
ljmp
and
leave
xchg
mov
pop
fidivrs
xchg
xlat
mov
dec
mov
mov
mov
fldt
outsb
xlat
fisubrs
inc
add
or
out
sbb
in
xchg
xor
imul
into
pop
cltd
test
push
les
add
xchg
scas
dec
jbe
mov
cwtl
mov
fistps
inc
and
scas
sahf
jg
lods
pusha
push
jb
push
pop
or
mov
daa
rclb
outsl
mov
outsb
pop
sahf
xor
cmp
jg
lcall
push
data16
and
mov
sahf
xchg
hlt
enter
pop
addr16
sub
fnsave
into
jg,pn
stos
mov
jle,pt
in
pop
push
arpl
ret
int3
icebp
xchg
sub
adc
rcrl
fnsetpm(287
ss
fsubrp
push
jno
cmpsl
mov
cmp
jbe
mov
push
lahf
push
pop
cmpsb
cmp
ficoms
ficomps
jmp
xor
aas
outsl
xchg
pop
jle
subb
daa
mov
cwtl
ret
out
in
das
cmp
pusha
aam
rcll
xor
into
push
sbb
in
lret
inc
mov
push
dec
jo
inc
aaa
pop
into
jbe
rclb
outsl
add
push
roll
fmulp
xlat
dec
in
es
in
push
mov
out
roll
dec
daa
adc
test
pop
mov
mov
aas
in
pop
daa
sahf
in
aad
cmp
je
push
pop
pop
xchg
add
js
outsb
dec
mov
xchg
arpl
outsl
popf
mov
ss
fwait
pop
scas
mov
inc
in
addr16
nop
and
insw
cs
push
orb
test
enter
xchg
sub
mov
adc
cltd
pop
xlat
add
sahf
xor
fs
pop
jecxz
inc
hlt
pop
stos
xlat
push
cmp
daa
xchg
mov
out
aad
sbb
ljmp
jge
clc
outsb
jle
ret
mov
adc
out
push
xchg
inc
clc
xor
fs
sarl
arpl
mov
push
andl
push
xchg
pop
sahf
xchg
loope
jmp
movsb
adc
add
jecxz
scas
les
out
addr16
xchg
jae
cmp
xchg
ficoms
push
mov
jg
push
cmpsb
sti
cmp
clc
pop
dec
xor
mov
scas
dec
sub
sub
cmpsl
push
and
mov
sub
push
and
mov
popf
shlb
clc
leave
push
fidivrs
sbb
cmpsb
cmp
aaa
add
enter
lahf
outsl
dec
outsb
cmpsb
into
adc
out
iret
pop
ret
fucom
dec
ja
cmp
mov
fildll
rolb
leave
pop
dec
int
data16
or
jo
lcall
push
pop
and
mov
repz
push
lret
dec
sub
push
cltd
xlat
jg
mov
pusha
xlat
fdivrp
mov
loop
xchg
and
mov
inc
fimuls
mov
fistpll
mov
outsb
jle
jns
add
jecxz
push
loop
daa
cmpsb
pop
inc
mov
mov
fidivs
xor
push
inc
dec
push
pop
iret
jmpw
dec
addr16
lahf
inc
daa
xor
dec
mov
mov
dec
pop
push
xchg
ja
scas
mov
pop
mov
adc
inc
ds
das
push
jo
mov
inc
cmp
addr16
sub
cmc
gs
rcrl
and
inc
xchg
gs
sahf
addl
lahf
je
clc
sbb
les
ss
pop
dec
popl
jg
jbe
mov
rolb
pop
mov
inc
dec
mov
out
sahf
sbb
cs
movb
mov
leave
push
push
pop
fimuls
es
lods
push
aaa
imul
push
into
pop
nop
ljmp
add
cmc
lds
jbe
inc
inc
enter
push
push
movsb
mov
stos
daa
clc
xor
cmpsl
lahf
adc
mov
and
repnz
cli
jo
movsl
orl
xor
pop
xor
imul
push
add
adc
and
and
clc
rorb
bound
jge
push
mov
push
sub
add
jle
inc
pop
enter
cmp
pop
into
sti
push
xchg
or
ds
fbld
lret
cmpsb
out
mov
cwtl
daa
xchg
movb
sub
out
pop
test
push
out
jbe
fldenv
ds
pusha
cmpsl
rolb
int
jo
xchg
push
sub
or
mov
dec
fs
or
xchg
rcrl
pop
mov
inc
xchg
insl
sub
pop
cmpsl
jbe
daa
and
cmpsb
pusha
mov
stos
aaa
movsl
dec
movl
cmp
in
lea
int
and
pop
push
mov
std
push
sti
cmp
mov
stc
and
inc
xor
rcr
dec
xchg
mov
lret
lret
or
inc
adc
jl
add
das
mov
cmpsl
das
pusha
into
add
fwait
jp,pn
lcall
mov
outsb
aas
cld
mov
mov
or
add
xchg
divl
shr
add
push
cmp
and
repnz
jno
push
idivb
push
xchg
xchg
in
mov
push
outsb
fstpl
dec
pop
mov
in
xor
int
push
mov
cmp
jp,pt
push
aaa
pop
sub
data16
data16
imul
push
out
and
enter
addr16
sub
dec
xchg
nop
bound
xchg
ret
clc
ss
test
gs
cmpsb
pop
cmpsl
jge
cs
xchg
stos
xchg
mov
mov
iret
pop
push
lret
or
add
daa
xchg
mov
pop
shll
loopne
ret
nop
xchg
ja
addr16
notb
fcoml
icebp
cmp
adc
hlt
mov
cltd
jb
add
cmp
ds
lods
dec
adc
popf
push
fistps
push
push
aaa
aas
lods
or
das
rcll
pop
in
inc
dec
jno
insb
pop
divb
hlt
mov
outsb
jecxz
push
push
gs
popf
mov
aad
ss
cmp
fcoml
or
outsb
loope
fbld
dec
mov
add
ret
jno
push
cmpsl
cmp
xor
shrb
nop
xchg
rol
cmp
pop
push
aaa
and
add
xlat
push
test
xor
dec
mov
leave
pop
popf
adc
loop
mov
in
outsl
mov
das
mov
sbb
movl
vmovdqa
stos
aaa
xchg
dec
mov
xor
loop
sub
fimuls
cmp
iret
xchg
push
pop
shlb
mov
add
scas
loope
lahf
xlat
push
pop
ds
data16
std
mov
cmp
cmpl
fdivrl
and
lds
lret
shlb
shll
inc
mov
ljmp
pop
push
daa
mov
xor
add
xchg
scas
cmpsb
and
das
sahf
loope
push
outsl
xor
ja
cmp
cmpsb
push
and
mov
movsb
add
dec
pop
std
dec
scas
out
in
pushw
push
xor
fdivs
shll
shr
insl
out
sbb
push
and
js
popf
stc
mov
push
jne
add
and
add
leave
cmpsb
inc
lods
ljmp
pusha
and
mov
sbb
cmpsl
sti
scas
les
mov
jo
cmc
outsb
or
inc
jmp
xchg
xchg
lahf
push
imull
ret
jo
and
pop
lea
addr16
test
ss
pop
inc
xchg
enter
xlat
jmp
push
mov
je
aam
aad
inc
dec
jmp
xchg
push
das
into
das
movsl
rorb
iret
daa
cmp
fistps
push
rorl
sub
pop
and
jns
repz
mov
xchg
and
addr16
inc
mov
push
push
scas
lret
addr16
in
push
dec
pusha
ja
lds
xchg
scas
imul
fmull
sub
addr16
jg
nop
daa
movsb
int3
dec
push
stc
rcrb
cmpsl
aaa
inc
fwait
lea
notl
push
das
insb
mov
xchg
aaa
jg
adc
cmp
int
xor
mov
outsb
es
lds
xor
mov
ja
into
scas
cld
lret
daa
ficompl
sbb
adc
mov
jle
lea
cltd
mov
mov
adc
out
into
dec
mov
scas
fwait
add
mov
ja
insl
push
mov
insl
pop
out
push
fstp
jmp
ja
sbb
push
pop
daa
das
dec
test
xchg
icebp
xchg
iret
xchg
scas
aas
push
xchg
fisubrs
xlat
and
out
push
ds
jmp
cmpsl
xor
push
fwait
or
mov
nop
js
add
into
es
rol
out
jne
and
jne
xor
insl
lret
fdivp
gs
mulb
fidivrs
xchg
mov
pop
lahf
mov
daa
pop
lea
push
pushf
xchg
sub
jo
scas
mov
and
ja
and
shlb
stos
mov
aas
dec
lock
cs
sub
test
mov
jg
addr16
xchg
in
nop
pop
jno
jle
mov
ljmp
add
xchg
out
push
jo
jle
lods
add
pusha
xor
ja
into
fistl
stos
ficompl
loope
fnstsw
lds
xchg
ret
xchg
lods
stc
jo
dec
sbb
push
pop
repnz
into
inc
inc
xchg
stc
cmpsb
jae
addr16
aas
sti
fucomip
push
cli
xchg
pop
aaa
or
inc
rolb
mov
pop
ret
push
pop
adc
cmp
mov
mov
dec
mov
pop
leave
sbb
arpl
jg
ret
pop
mull
addr16
push
pop
jb
pop
fs
pop
mov
add
add
in
faddl
add
xor
cmp
imul
xchg
inc
xchg
and
enter
xor
and
daa
add
jbe
and
mov
push
pop
iret
push
jb
dec
jle
mov
aam
add
jbe
scas
stc
cs
mov
imul
movl
dec
jbe
popf
jne
leave
cmpsb
scas
fwait
or
push
push
das
shll
xor
pusha
sbb
fisubs
sbb
shl
add
ds
cs
push
pop
mov
xor
movsb
xor
push
and
sbb
mov
lret
inc
icebp
outsl
ret
xchg
lds
lods
sub
xchg
fdivr
fisttpl
jle
jp
sub
sbb
mov
mov
lea
out
fidivrs
push
fstps
sti
xlat
and
cmc
dec
jns
ds
ror
pop
hlt
pop
ja
leave
jmp
fidivrs
mov
cmpsl
stc
ds
jle
or
mov
in
pop
pop
loope
outsb
inc
pusha
data16
mov
xlat
pop
outsl
daa
fisubl
lock
or
xchg
das
imul
aas
xlat
xchg
cmp
ss
shrb
std
jo
push
sub
pop
ja
jg
push
stos
pop
and
call
xor
xor
push
sbb
out
jbe
aam
into
jmp
movb
and
and
outsl
mov
ss
cmp
jns
push
jne
lock
sub
stc
fidivrs
xor
push
nop
add
fistps
int
fiadds
arpl
pop
js
out
adc
mov
pop
es
cmp
inc
pop
sbb
lret
dec
push
mov
fdivrp
jo
jg
cmpsl
and
and
pop
mov
jbe
fmulp
pop
xchg
dec
and
enter
ja
bound
xchg
pop
mov
jns
data16
mov
mov
add
hlt
jmp
or
nop
mov
out
xchg
mov
xor
roll
mov
push
into
ds
push
pop
add
dec
xor
test
xchg
inc
mov
pop
fildll
push
mov
stc
xchg
mov
hlt
int3
sub
jae
inc
pusha
jns
ds
xchg
in
pop
xor
xchg
sub
inc
push
lahf
shrl
outsl
rolb
xor
dec
pusha
pop
inc
xchg
arpl
fwait
lea
das
test
mov
data16
fldenv
inc
pop
rclb
pop
lds
mov
xchg
pop
xchg
and
jg
mov
fs
and
stc
jne
xor
mov
daa
xor
rcrb
scas
mov
cmp
inc
xchg
mov
mov
push
xchg
lretw
pop
inc
adc
call
out
int
outsl
popf
jle
pop
push
mov
pusha
aaa
outsb
pop
jbe
rorb
scas
add
lahf
jge
add
xchg
scas
fisubs
mov
iret
stos
fs
dec
cmpsb
mov
bound
sbb
sub
xchg
int
fs
mov
ds
aas
roll
mov
ret
std
mov
icebp
pop
pop
mov
ja
ret
push
lds
adc
adc
ljmp
pop
xchg
mov
pop
test
jb
mov
data16
cmpsb
in
sub
mov
pop
push
xchg
popf
scas
nop
es
sbb
ficoml
add
std
loop
cmp
das
dec
gs
rcl
or
jbe
cmp
sbb
xchg
clc
mov
cmpsl
daa
and
dec
add
movsb
out
das
inc
inc
xchg
add
xor
pop
push
sbb
mov
test
push
jne
push
fldenv
ja
pop
ljmp
int
add
daa
inc
cli
inc
mov
in
dec
xchg
and
cmpsl
fsubr
dec
sahf
xor
daa
pop
iret
jns
aas
stos
data16
mov
cmpsb
call
push
mov
decb
inc
addr16
pop
pusha
in
cmc
fstpl
ja
cs
cmp
es
jg
mov
sahf
ret
arpl
push
je
scas
push
cmpsl
mov
hlt
js
mov
mov
jo
dec
jmp
mov
cmp
xchg
fdivl
and
xor
pop
ret
push
fst
scas
push
daa
push
fisttpl
dec
nop
mov
shr
dec
frstor
das
dec
repnz
daa
lcall
pusha
mov
mov
sub
test
dec
ss
arpl
data16
daa
inc
pop
xchg
fwait
out
add
mov
and
int
xlat
ds
outsb
push
fbld
pop
into
inc
data16
push
addr16
and
ds
jo
hlt
leave
sub
push
push
and
pop
cs
add
popf
mov
daa
push
mov
cmp
inc
gs
push
mov
pop
and
lret
dec
leave
jb
adc
jbe
mov
imul
mov
into
dec
out
mov
iret
inc
iret
add
push
cmpsl
push
dec
ja
repnz
mov
mov
mov
cmpsb
mov
outsl
daa
mov
lea
push
daa
cmpsl
inc
outsb
mov
cs
gs
pop
pop
xchg
fists
lahf
in
call
inc
xchg
or
mov
in
lock
mov
cmp
xor
out
xchg
mov
mov
mov
push
loop
cs
mov
imul
daa
push
xchg
in
and
jns
pusha
dec
es
fstl
jbe
mov
ret
scas
int
scas
insb
mov
sahf
lahf
insl
out
lahf
fwait
push
cmpsb
shll
mov
js
push
fstps
inc
in
inc
xor
addr16
imulb
pop
pusha
in
shrl
pop
inc
rorl
gs
or
xor
pusha
push
pop
lahf
inc
mov
es
out
out
xchg
fists
push
scas
mov
daa
dec
xchg
jg
test
inc
jno
ja
cmp
mov
inc
call
xor
sarl
outsl
dec
daa
xchg
xchg
sbb
sbb
mov
enter
push
or
push
ffreep
outsl
push
pusha
or
cld
inc
lahf
inc
and
daa
iret
cmpsb
ficomps
push
test
mov
aad
jg
int
pop
das
lret
mov
inc
jp
push
inc
test
jbe
std
jbe
mov
addr16
mov
lds
je
cmp
pop
pop
ds
pop
cmp
inc
rcrb
cmpsl
push
mov
jb
cmc
xchg
xlat
inc
lret
push
scas
dec
cmpsb
sti
imul
pop
add
ret
cs
iret
out
inc
fwait
hlt
lret
push
add
testb
cs
cmp
mov
xlat
scas
or
push
scas
sbb
stc
dec
aaa
jg
dec
add
sub
testb
rcrl
pop
sbb
iret
sub
push
lahf
push
sbb
add
iret
leave
adc
lahf
dec
hlt
cmp
xorb
dec
addr16
inc
sub
popf
loopne
xchg
outsb
jbe
aaa
fists
leave
xorl
scas
in
insl
lcall
mov
push
data16
lcall
js
mov
cmp
in
leave
inc
ss
mov
movsb
xchg
lahf
ds
loope,pt
addr16
cmp
sarl
or
vaddss
mov
arpl
push
mov
sub
sub
jg
fwait
pop
repz
out
fmul
sahf
xchg
jns
pop
nop
repnz
sub
in
fsincos
jns
mov
das
nop
sub
mov
fisttpll
sub
jmp
icebp
xchg
aam
pop
xchg
mov
stos
aas
inc
pop
push
ret
es
pop
pop
inc
int
loope
mov
inc
jl
pop
xor
push
fidivrs
xor
je
das
insw
mov
push
ret
mov
pop
mov
xor
sub
and
dec
fsubrp
mov
loope
push
cs
push
cs
mov
cmp
xor
cs
outsl
cmpsl
pusha
push
mov
xchg
loop
cmpsl
inc
xchg
and
outsl
xor
adc
mov
and
xchg
sahf
repnz
cmp
fdivl
jmp
jg
gs
iret
sub
ficoms
add
xchg
ja
push
mov
sub
ret
lret
lret
mov
and
xor
and
scas
aam
iret
cwtl
out
add
cmpl
mov
xor
lods
aam
call
adc
daa
xchg
cmp
sub
pop
add
xor
aas
jns
es
push
inc
mov
pop
arpl
adc
and
gs
mov
mov
ds
scas
cmpsb
imul
xchg
push
fsubrl
nop
jmp
pop
mov
dec
cmp
gs
divl
into
mov
xchg
mov
or
push
jge
pop
cs
cwtl
lret
cmp
xor
dec
outsl
jbe
add
das
inc
and
push
aad
xchg
xchg
mov
xchg
cmp
fstp
push
push
jbe,pn
push
lret
mov
ja
mov
fisubrl
rcrl
mov
dec
bound
sub
jmp
pusha
push
xor
addr16
and
into
fdivl
adc
sbb
mov
mov
arpl
shl
and
outsb
push
pop
xlat
cmp
dec
xor
aaa
jne
ds
shlb
addr16
imul
fcompl
xor
mov
mov
ret
jmp
mov
adc
push
loope
ds
inc
imul
add
shll
daa
mov
mov
fs
add
fs
mov
push
jg
push
dec
cs
cmp
cmp
and
pop
and
dec
jecxz
xchg
mov
pop
inc
mov
pop
sbb
mov
pop
movsl
xchg
dec
jo
aaa
adc
data16
mov
outsb
sahf
dec
mov
pop
aas
lahf
pop
or
xlat
sbb
enter
cmpsb
pop
stc
cs
pop
outsb
xor
bound
jle
mov
and
mov
and
mull
mov
xchg
call
dec
roll
jg
pusha
push
cmp
jno
pop
or
push
arpl
mov
fdivs
pop
and
daa
in
push
movsl
xchg
aaa
inc
push
hlt
or
pusha
bound
cmpsl
pop
mov
iret
dec
icebp
jl
push
sarl
pop
xchg
ljmp
pop
mov
cmp
loopne
mov
in
push
xchg
fcmovbe
inc
push
hlt
in
mov
jle
mov
or
and
mov
ds
cmp
imul
ret
mov
fiadds
daa
mov
pop
pop
mov
dec
cmp
fldt
adc
push
inc
aas
lds
pop
xorl
jge
inc
lahf
or
xchg
xchg
lret
add
cmc
push
pop
dec
unpckhps
inc
ds
mov
lea
aas
pop
push
dec
data16
xchg
into
fiadds
push
loopne
lret
test
cmpsb
or
cmpsl
cmp
bound
xchg
or
stos
daa
movsb
sub
popf
sahf
cs
xchg
dec
ret
inc
fstpl
lahf
loopne
loopne
jmp
leave
enter
jo
jae
dec
mov
add
inc
fistps
stos
jbe
adc
aad
hlt
push
and
cltd
xchg
jbe
test
sahf
in
shll
xlat
scas
mov
sbbb
das
inc
daa
xchg
push
fs
lods
jbe
out
xor
gs
shll
out
pop
mov
sbb
enter
data16
push
into
iret
pop
pop
pop
ds
push
dec
xchg
xchg
out
cmpsl
jbe
js
sub
add
sbb
add
mov
push
jmp
mov
and
das
mov
inc
mov
push
mov
mov
lahf
ja
pop
mov
dec
pop
insl
mov
sbb
ret
rcrl
xchg
cmpsb
cmp
ret
das
in
push
jecxz
aas
pop
into
or
push
jb
push
jp
pusha
lahf
mov
cs
push
sub
loope
aaa
push
data16
sti
push
jg
mov
sbb
inc
sub
jmp
shll
cmpsb
push
out
mov
add
sbb
call
aad
mov
inc
repnz
std
es
cs
out
push
add
enter
stc
ljmp
fistl
inc
data16
jno
popf
scas
lret
test
in
pusha
ss
cmc
or
add
sbb
fdivl
push
jns
sti
ret
addr16
jle
adc
in
sahf
fcmovnu
xor
pop
pop
iret
nop
xchg
add
add
and
xchg
aaa
ficoms
fnstsw
mov
daa
or
inc
out
outsb
xchg
iret
xchg
xchg
mov
add
push
mov
cmp
nop
int
dec
pop
xchg
insl
adc
cmpsb
repnz
popf
ljmp
jbe
mov
dec
movsb
int
rol
das
das
shll
out
rorb
add
popf
push
and
lds
outsl
mov
push
jb
cmpsb
push
xchg
cmp
leave
cld
push
inc
sbb
mov
pusha
cmp
cld
mov
inc
out
rcll
jle
cmpsb
add
xchg
addr16
std
call
fistpll
sub
outsl
or
xor
and
addr16
add
adc
fdivrp
dec
pusha
and
aam
xor
ljmp
push
mov
pusha
pop
aaa
jg
mov
dec
daa
out
mov
mov
pop
xor
in
nop
sub
fidivrs
addr16
lahf
and
repz
dec
sub
dec
pop
cs
adc
rcl
and
nop
cli
cmpsb
and
sbb
inc
adc
push
dec
into
lods
cli
mov
xor
js
dec
movsb
clc
mov
cmp
jo
ds
loopne
pop
cmc
loopne
loop
jle
mov
add
lahf
lahf
out
xchg
cmpsb
pop
mov
fs
sub
add
mov
sub
aas
mov
jns
jecxz
sub
xlat
jbe
xchg
or
enter
iret
ja
js
jg
rcrl
inc
rclb
add
mov
sbb
push
add
divb
aas
cmpsl
push
outsl
lahf
movsb
xor
cmp
push
jo
punpckhbw
loop
pop
push
push
dec
movb
xchg
loopne
sub
adc
movsl
mov
or
scas
mov
ja
lahf
movsb
cmpb
in
add
mov
push
aas
addr16
lods
xchg
iret
inc
mov
sahf
cmpsb
ja
mov
cmpsb
jno
aas
jbe
mov
cmpsb
push
inc
jno
jo
and
mov
inc
mov
in
pushaw
and
jns
adc
flds
cmp
and
sub
test
imul
aaa
pop
sahf
and
out
das
push
xchg
xchg
ret
pop
fxch
pop
push
iret
lret
push
push
dec
into
pop
gs
ja
inc
xor
mov
fsubp
fidivrs
cmp
push
out
es
ret
dec
dec
movsb
iret
lret
inc
jo
xor
fisubs
aaa
sbb
and
push
dec
xchg
cs
shll
outsb
dec
mov
sub
cmpb
cs
daa
out
dec
jbe
out
pop
arpl
xchg
xchg
mov
aaa
mov
xchg
imul
loope
das
pop
inc
pusha
adc
pop
rcr
lret
push
daa
push
mov
push
imul
add
dec
pop
fiadds
iret
cmpsl
daa
or
out
into
scas
bnd
dec
xlat
dec
pop
addr16
inc
jle
pop
cmp
push
into
dec
jo
cmpsl
lods
sub
scas
cmp
xchg
mov
aad
push
jbe
daa
cbtw
cmp
mov
xlat
sbb
data16
push
addr16
in
inc
cmpsl
dec
adc
xchg
loop
faddp
sahf
outsl
aaa
push
push
dec
adc
in
dec
sub
outsl
shll
dec
fisubs
stos
pop
inc
call
xchg
imul
mov
shll
xor
pop
repnz
cs
xlat
add
pop
inc
jns
mov
mov
pop
into
xor
mov
aaa
mov
mov
mov
dec
xor
shrl
mov
pop
adc
rcr
ja
lahf
orb
fisubs
scas
hlt
orl
cltd
xchg
pop
daa
ljmp
ja
inc
in
pop
outsb
push
push
dec
clc
fldenv
push
into
fiadds
and
dec
cmp
bnd
leave
cltd
aas
dec
fs
pusha
shrl
jecxz
pop
pop
push
jecxz
dec
mov
cmpsb
jns
daa
pop
sub
and
orb
fs
into
mov
lret
mov
and
in
push
jbe
lods
sbb
sahf
jg
xchg
adc
data16
into
push
dec
sub
jbe
shl
pop
ds
cmp
pop
scas
popl
dec
xchg
movsb
sbb
push
mov
dec
scas
pop
cli
aaa
pop
xor
outsb
cs
je
ret
jle
fcmovne
daa
mov
push
mov
push
sahf
push
dec
gs
repnz
add
filds
mov
mov
in
mov
mov
push
lret
pop
ja
mov
outsb
xchg
add
push
and
cmpsl
push
into
push
outsl
rclb
ljmp
xor
jg
dec
aas
daa
dec
push
outsl
push
pop
cmpsb
sub
inc
arpl
inc
add
ficoms
sub
and
and
aas
flds
iret
cmp
insb
stc
cmpl
or
bound
push
fldt
fdivrp
ja
cmp
int3
and
insb
std
add
cmpsl
and
ja
pop
test
lcall
aas
jle
aad
lret
ja
push
inc
nop
inc
in
clc
out
push
inc
cmpb
filds
push
scas
jb
frstor
push
mov
sbb
pusha
inc
mov
shll
mov
cmpsl
xchg
cs
sub
and
xchg
gs
xchg
pusha
and
add
aaa
add
dec
mov
ss
pop
rcll
xor
xchg
mov
jg
jo
push
rcrb
in
lahf
data16
out
jecxz
xchg
and
push
xlat
icebp
lret
dec
and
sahf
fucom
xchg
pop
mov
ret
xor
sahf
pop
adc
or
cli
mov
xor
or
outsl
loopne
jp
fidivrs
jmp
add
jb
leave
test
and
mov
outsl
xchg
int3
sub
xchg
or
inc
mov
std
fwait
mov
cmp
cs
xchg
mov
andl
ror
pop
gs
pop
ds
inc
ja
push
cmc
lock
outsl
and
inc
xlat
iret
inc
and
nop
dec
arpl
pop
jmp
and
stc
mov
outsl
pop
gs
jbe
xor
faddl
ss
cmp
ss
dec
xchg
lahf
cmp
les
push
dec
xor
sbb
fwait
sahf
fwait
xchg
push
push
notb
dec
jbe
cmpsb
xor
jns
jg
outsl
cs
je
adcb
pusha
aad
xchg
scas
das
addr16
xchg
cmpsl
add
xor
xlat
and
mov
addr16
cs
and
jno
push
ret
dec
mov
push
outsl
lcall
xchg
and
inc
push
push
mulb
mov
and
addr16
push
shll
push
int
aaa
push
jo
int
nop
xlat
adc
dec
data16
js
mov
mov
out
jbe,pn
push
and
fs
sbb
sub
addr16
inc
aad
out
enter
fnstsw
add
pop
iret
xor
daa
sahf
out
stos
xchg
xlat
push
mov
cmp
scas
sti
dec
out
xor
xchg
rcll
ja
jle
or
and
mov
cmp
iret
jbe
cs
aas
pusha
add
dec
inc
imul
shrb
push
cmpsl
les
fwait
rcll
loope
outsb
aas
movb
dec
mov
push
inc
xchg
xchg
inc
lds
xchg
pusha
push
ss
cld
lea
mov
es
jmp
out
js
sub
pop
xchg
test
aas
popf
ds
stos
push
hlt
jno
push
xchg
jge
mov
lret
enter
cmc
or
cmp
aaa
dec
sahf
das
jae
lahf
push
mov
rorb
arpl
xchg
cmp
flds
jo
push
call
pop
fst
cmpsb
inc
iret
fidivrl
sub
jg
ja
lcall
loop
mov
iret
ja
jo
lea
pop
jbe
fcompl
lret
pop
mov
push
in
jle
in
std
mov
push
inc
xchg
jbe
xchg
stos
inc
or
in
inc
pop
loop
outsl
ss
inc
and
pop
mov
push
aas
sbb
imull
xchg
into
loop
jg
xchg
fidivs
add
pop
inc
int3
jne
lock
add
mov
mov
fistps
aaa
andl
adc
das
addr16
ds
icebp
outsl
add
push
nop
mov
fucomp
and
push
push
sahf
pop
fstenv
cmpsb
into
jecxz
push
mov
cmp
aad
pop
push
and
iret
scas
mov
fisubrl
sti
aas
push
xchg
jle
insb
sbb
mov
movsl
lret
cmp
push
test
aas
sahf
mov
jo
sub
jne
sbb
loopnew
fisttps
call
daa
inc
mov
xchg
add
test
aas
aam
aas
ficoms
push
mov
jbe
ficompl
jmp
loop
jno
lahf
pusha
inc
repz
jno
daa
fbld
sub
cmpsb
inc
or
dec
outsl
add
mov
xor
push
push
gs
fcmovnbe
aaa
enter
push
cmpsb
pop
ds
and
xchg
or
clc
jns
mov
scas
push
jo
inc
add
iret
roll
or
xor
das
dec
jae
mov
push
inc
gs
mov
sub
pusha
lds
lods
dec
incl
ds
loopne
dec
adc
push
and
sahf
aaa
scas
push
in
xchg
repnz
xchg
pop
jmp
mov
mov
out
mov
ret
push
rcrl
outsl
sub
daa
test
sahf
mov
insl
mov
jb
push
scas
mov
xchg
dec
sub
pop
xchg
mov
push
sbb
dec
mov
ret
fidivs
sbb
fsubs
cmp
pop
xchg
adcb
push
fimuls
addr16
mov
and
ret
lods
push
adc
aad
ja
jmp
repz
cmp
xchg
sti
inc
das
subl
int
fcmovb
xchg
push
jecxz
xor
into
sub
call
jbe
rclb
inc
jle
shrl
push
enter
aad
pusha
pop
pop
sahf
outsb
les
xchg
enter
mov
or
lods
mov
jbe,pt
push
or
scas
loope
jo
push
inc
mov
ss
cmp
push
clc
and
jo
mov
cmpsb
popa
cmp
cmpb
fbld
test
scas
pusha
outsl
mov
dec
xchg
fidivl
fs
cmp
xchg
xor
cltd
outsb
dec
xor
add
les
cmc
nop
push
jb
iret
push
scas
cmp
xchg
das
add
mov
pop
jbe
popf
popf
add
mov
pop
into
cmp
in
pop
xor
push
mov
inc
fs
xchg
fdivrp
push
add
add
es
test
enter
xchg
xor
in
and
pop
pusha
imul
push
data16
dec
outsb
aad
push
jecxz
aaa
pop
and
call
mov
aad
xlat
into
bound
and
jle
jne
les
xor
lahf
mov
mov
orb
dec
js
add
loopne
dec
in
push
addr16
push
mov
add
out
dec
mov
pop
inc
dec
xbegin
jg
mov
pop
mov
mov
push
mov
sbb
es
ret
mov
xchg
jge
imul
cs
cmp
xchg
push
outsl
in
sub
fistps
push
add
fs
arpl
mov
xchg
lock
mov
stos
cmp
loop
jo
ss
push
int
xchg
ficoml
cmp
sahf
outsl
cmp
jb
pusha
mov
inc
xchg
dec
xlat
jno
out
jle
pop
jbe
iret
pop
xor
lods
das
aaa
ljmp
pop
inc
outsl
add
lds
add
sahf
jo
mov
sub
lcall
popf
jmp
into
push
and
mov
insb
jno
sahf
stos
scas
cs
jno
insl
stos
nop
mov
xchg
ss
in
fdivl
jg
dec
mov
xchg
fnsave
das
xchg
shl
lods
xor
pop
pop
rclb
xor
jecxz
jbe
pop
mov
xchg
das
push
inc
adc
cli
xlat
les
and
mov
scas
jl
enter
push
xchg
out
aad
jo
xlat
fst
js
loop
push
and
jbe
outsb
mov
push
scas
jg
inc
add
mov
sahf
outsl
jbe
fidivrl
jbe
or
xchg
and
cmp
inc
es
mov
test
mov
sub
cmpsl
pop
std
test
dec
push
aaa
xchg
pop
scas
push
dec
iret
dec
jl
aas
ffree
xlat
scas
push
jp
arpl
xchg
push
cmp
xchg
mov
int
pusha
push
popf
test
adc
or
or
outsl
aaa
stos
dec
out
scas
fisubs
ds
loope
cmpsb
lahf
mov
addr16
data16
mov
cmp
xchg
data16
gs
xchg
jmp
addr16
int3
insb
inc
mov
mov
push
lcall
dec
or
lds
push
or
repz
jle
mov
into
pop
xchg
or
popf
push
into
les
mov
add
push
faddp
sti
leave
das
pop
pop
je
add
mov
into
pop
mov
xor
pop
ss
pop
jp
inc
xor
jecxz
xlat
sub
lahf
faddl
pop
mov
and
out
add
pop
dec
fidivrs
jnp
clc
pop
loopne
rclb
cmpsl
pop
inc
lahf
xchg
insb
stos
test
cmpsl
ds
fisttpll
aas
into
data16
jns
nop
jle
aaa
xchg
or
es
push
sahf
xchg
ja
pop
jbe
insb
xchg
das
insl
dec
jmp
data16
jo
adc
xchg
xor
mov
outsb
aas
ds
push
cmpsl
bound
inc
cmpsl
push
insl
loopne
xchg
sarl
out
pusha
int3
and
add
in
cmpsb
xchg
sub
das
insb
int
mov
sahf
dec
and
cltd
dec
cmp
mov
xchg
sub
push
add
pop
in
pop
push
mov
aas
inc
xchg
enter
mov
cmp
push
das
lahf
aas
insb
mov
jb
mov
outsl
mov
sub
ss
add
pop
aas
pusha
fnstcw
cmp
ljmp
fidivs
nop
fiadds
ret
xor
addr16
cmpsb
leave
pop
into
jg
push
lret
mov
or
out
rcl
pop
in
lahf
cmpsl
pop
or
or
inc
mov
jecxz
push
push
jno
nop
mov
mov
push
push
ss
lds
icebp
fsts
in
aas
sahf
cli
jmp
cmp
inc
leave
dec
push
hlt
and
xchg
ds
jno
inc
insb
es
scas
lahf
mov
push
iret
enter
jo
popa
gs
or
dec
dec
mov
test
xor
push
ljmp
mov
ret
xchg
jns
jbe
push
jb
adc
cmpsb
pop
test
jg
loope
dec
repnz
mov
xchg
loope
fldenv
data16
pop
call
xchg
fnstsw
movsl
cmp
push
enter
cmpsl
add
mov
or
data16
cmp
push
pop
es
fs
ss
jnp
fistps
dec
out
adc
add
cmpsb
mov
xlat
inc
xor
cmp
push
mov
xlat
cmpsl
mov
jbe
xor
pop
mov
es
and
ja
movsb
fcomip
mov
and
xchg
clc
js
mov
adc
push
pop
out
dec
lds
jne
into
aaa
push
je
pop
inc
inc
and
insb
and
ja
scas
std
mov
outsw
dec
push
push
out
cs
fs
cmpsl
xchg
add
stos
loop
cmpsl
pop
outsb
cs
push
cwtl
pop
insl
mov
xor
inc
xchg
rolb
mov
stc
cmp
cld
mov
scas
loop
push
inc
iret
mov
xor
ss
ret
mov
arpl
pop
xchg
and
pop
dec
into
jb
lret
xor
and
shlb
mov
or
cmp
inc
xlat
movsb
sub
outsb
scas
cmpsl
pop
pusha
aas
jecxz
push
xchg
orb
pop
das
inc
outsl
and
es
mov
popf
xchg
cmpsl
hlt
xchg
mov
pop
jo
pop
jle
fstl
jbe
nop
mov
stos
in
cmp
cmp
enter
jo
in
xor
pop
mov
cltd
stos
mov
outsb
xchg
push
dec
jno
push
stos
fisubs
xor
out
mov
scas
push
leave
and
dec
aad
addr16
pop
or
aam
shll
push
fiadds
loope
mov
xchg
sbb
lret
mov
nop
ja
stos
int3
icebp
mov
or
add
dec
mov
cmp
es
adc
insl
popw
xor
xchg
pop
shlb
push
push
ss
pop
in
cmp
cmpsl
leavew
xchg
mov
pusha
daa
daa
adc
pop
js
pop
push
rolb
movb
enter
mov
pusha
push
sbb
jl
adc
ss
xchg
mov
ret
in
jb
and
sub
int
pop
jg
xchg
dec
mov
cmp
cmp
add
inc
and
cmp
popa
stos
roll
repnz
bound
outsl
dec
std
into
hlt
xchg
daa
out
inc
pop
mov
and
in
xchg
dec
mov
outsb
mov
cltd
sub
mov
push
xlat
jp
add
push
inc
repnz
xchg
iret
addr16
popf
push
mov
int
into
gs
push
mov
xchg
cmp
adc
push
jbe
push
adc
pop
jo
scas
das
push
pusha
jb
sub
add
std
push
dec
notb
orl
mov
ret
mov
outsl
cmpsb
jbe
lea
rcr
dec
call
ja
call
sbb
xchg
outsl
jae
into
es
dec
xlat
xchg
enter
mov
mov
mov
ficoms
sub
shll
outsl
bound
rolb
cmp
rcll
ds
aas
jo
loop
aaa
iret
inc
lahf
xlat
push
jle
push
mov
cmpsl
mov
push
mov
repnz
add
int
and
addr16
mov
push
xchg
pop
xchg
inc
jo
push
ret
daa
or
or
dec
bound
pop
pop
and
mov
push
push
jle
out
ret
stos
mov
into
enter
rorl
xor
loop
xchg
jbe
pop
gs
mov
push
push
pop
stc
fisubs
hlt
cmpsb
fldenv
scas
dec
aaa
pop
call
mov
push
inc
push
pushf
sub
aaa
fmull
jp
mov
lahf
push
leave
jecxz
aad
fildll
insb
imull
mov
lock
pop
pop
push
in
cmpsb
dec
push
cmp
and
inc
xchg
mov
push
ret
pop
xlat
shll
pop
push
mov
outsb
mov
cmpsl
lods
ds
dec
faddp
outsl
rorl
jle
movb
aad
xchg
push
ret
mov
out
shlb
xor
inc
inc
and
cs
nop
xchg
or
jecxz
sub
xlat
or
mov
push
aaa
and
sub
clc
push
scas
cmpsl
adc
fbstp
sub
xchg
inc
and
fildll
xor
adc
arpl
pop
and
push
fnstenvs
jle
cmp
mov
aas
inc
mov
mov
ja
pushf
popf
lahf
insl
addr16
fbstp
aas
pop
mov
sub
push
addr16
fidivrl
push
pop
cmpsl
jbe
pusha
nop
xlat
xchg
jo
inc
out
cmpsl
cmpsl
aaa
push
dec
out
xchg
das
fistps
pop
dec
push
jle
xchg
xchg
mov
push
pop
xchg
ror
addr16
xchg
xchg
cmp
jg
loope
es
dec
dec
push
nop
mov
inc
daa
jne
mov
push
adc
add
mov
mov
mov
jns
sahf
scas
ja
ljmp
jns,pn
pop
cmp
and
push
cmp
int3
insl
xor
aas
or
rcll
out
and
dec
and
shlb
xchg
aad
mov
mov
pop
pop
add
pop
inc
sub
daa
add
sahf
fcmovnbe
dec
outsb
lahf
push
aaa
sbbl
xor
and
and
jnp
sub
daa
push
push
lods
push
shrb
sbb
imul
mov
imul
jb
inc
pop
scas
nop
outsl
add
daa
fmulp
or
xlat
cmp
or
pusha
dec
jecxz
dec
fs
xchg
mov
filds
out
pop
scas
out
pop
cmpsl
sahf
push
cmpsl
adc
push
sub
xchg
sbb
rorl
push
insb
push
mov
in
xchg
xlat
fmulp
pop
cli
mov
sub
fidivrl
inc
cwtl
cmp
xchg
sti
xchg
out
insb
push
aaa
jo
jb
sbb
aad
push
push
or
loope
mov
add
inc
add
xchg
fbstp
imul
fiadds
rol
es
xorl
push
data16
xchg
ja
mov
lock
sub
ss
xor
jo
loop
jle
lahf
xchg
aaa
push
sub
daa
outsl
inc
pop
movsl
pop
mov
xchg
das
or
fisubs
and
pop
lods
ret
mov
negb
out
ss
jl
lock
sbb
mulb
mov
pusha
mov
jo
je
mov
jle
push
and
jns
inc
pusha
into
das
rcl
daa
lahf
daa
add
inc
inc
sarl
ss
sub
cmp
inc
pop
pusha
sahf
sahf
jecxz
xchg
cmc
mov
enter
bound
cmpsb
xor
pop
adc
mov
add
into
xchg
dec
xchg
inc
ds
arpl
mov
es
xlat
xchg
jno
xchg
sbb
xor
insb
leave
mov
pop
xchg
mov
pop
xchg
mov
mov
jns
xchg
mov
daa
das
repnz
jbe
xchg
mov
lea
sub
pop
rorl
push
popf
dec
aaa
or
in
aas
lahf
scas
cmpsl
mov
push
push
mov
mov
cmp
xchg
daa
xchg
in
outsb
cmp
inc
cmp
ljmp
xchg
push
pop
sahf
outsl
jae
inc
call
test
pusha
inc
push
lcall
adc
and
inc
push
xor
xchg
push
lret
js
leave
scas
xchg
mov
inc
xchg
enter
shll
jg
pop
aaa
mov
jno
push
sbb
jnp
imul
pop
xlat
inc
push
push
insb
push
adcl
lahf
pop
outsb
lret
push
push
retw
roll
nop
push
cmpsl
call
iret
shlb
sub
jmp
xchg
sub
nop
jmp
inc
lcall
enter
subl
and
dec
jbe
iret
test
cld
bound
es
nop
mov
scas
pop
dec
xor
sub
lahf
adc
cmpsl
nop
fisubrs
data16
shrl
push
sub
pop
jle,pn
mov
push
pop
sahf
test
repnz
inc
push
clc
test
cmpsb
jno
mull
pop
adc
xlat
dec
pop
pop
or
mov
dec
jae
inc
xchg
cli
mov
ss
xchg
fstps
in
bound
lds
inc
adc
xor
lret
leave
pop
pop
or
pop
leave
hlt
out
scas
outsl
enter
sbb
xchg
mov
arpl
mov
testb
jg
or
addr16
cs
mov
pop
out
fdivrs
ds
mov
push
xchg
ror
add
lock
aam
imull
data16
pop
and
jmp
mov
push
xchg
pop
aas
dec
movsl
cmp
pop
das
lock
dec
fs
pop
jb
pop
jns
xor
addr16
ja
gs
cmp
das
outsl
inc
mov
pop
aaa
mov
mov
scas
dec
lcall
fisubl
out
in
push
outsb
sub
je
and
outsl
inc
push
fisubrs
add
clc
add
popf
dec
mov
test
pop
sti
jg
inc
sbbl
mov
sbb
arpl
gs
out
cs
xor
mov
loop
lahf
inc
addr16
mov
into
ficomps
inc
pusha
push
fnstenv
inc
jmp
sub
data16
cmpsb
mov
push
push
cmpsl
and
std
data16
push
scas
ja
and
xchg
push
nop
or
outsl
sbb
jg
rcrb
cmpsl
mov
loop
xlat
iret
push
xor
xchg
nop
xchg
xchg
imul
cmpsb
xchg
orps
addr16
add
jmp
int3
test
xchg
ret
pushw
out
xchg
add
das
cmp
rorl
xlat
lds
or
jg
mov
out
push
out
and
cmpsb
aas
sti
jmp
mov
add
and
pusha
cmp
pop
rolb
xchg
and
daa
inc
xchg
repnz
sub
rcrl
push
ficomps
mov
cmp
jmp
daa
mov
dec
cmp
pop
lcall
xlat
and
sahf
sbb
jne
pop
mov
test
scas
int
push
dec
cmp
cmp
cmpsb
addr16
nop
test
int3
shrl
into
mov
mov
pop
es
push
data16
jbe
outsb
fs
aam
pop
jg
fdivrs
and
xchg
out
outsb
xchg
mov
xlat
in
mov
int
push
fildll
clc
push
mov
fdiv
push
es
and
ss
fsts
pop
out
leave
rcrb
dec
repz
mov
and
cmpsl
rcr
push
rorl
jb
push
or
push
mov
movsb
pop
into
popl
push
std
push
jecxz
push
gs
push
aaa
sbb
and
sbb
inc
dec
mov
mov
cli
out
xor
jle
adc
pushf
in
lahf
xchg
inc
jg
xchg
roll
push
addr16
ja
push
jle
es
push
aaa
scas
mov
es
out
inc
dec
ss
xlat
inc
cmp
jns
push
sahf
pop
imul
sub
xor
xchg
gs
sub
mov
inc
xchg
cmp
dec
mov
mov
mov
vpmacsdd
push
dec
pop
addb
icebp
xor
lret
push
outsl
in
outsb
and
es
scas
pop
cmp
nop
daa
push
push
into
adc
xor
sub
pop
das
loop
outsb
mov
outsl
rolb
or
sbb
xchg
add
mov
daa
push
ja
ss
xchg
clc
scas
dec
imull
push
loope
scas
ds
outsl
mov
jmp
xchg
cld
and
xor
inc
mov
push
sub
aad
cmpsl
out
dec
iret
sbb
pop
or
inc
scas
push
test
aas
xchg
in
jg
mov
aam
pop
and
fs
fs
aaa
dec
cmpsb
sti
leave
shr
sub
push
mov
mov
sub
loope
outsl
xlat
aaa
pusha
fisubrs
adc
sub
aad
scas
lock
inc
mov
pop
fidivs
scas
outsb
loope
pop
dec
jmp
pop
pop
xor
jno
icebp
jo
pop
lds
mov
repnz
daa
pusha
call
addr16
xchg
call
cmpsl
iret
stos
xchg
aaa
push
sub
iret
pop
ss
jge
outsl
fisubs
nop
js
and
or
cmpb
aaa
xchg
paddd
pushf
sahf
mov
outsl
mov
mov
loop
cmp
mov
xchg
pusha
mov
test
mov
rorl
cli
xchg
in
lahf
outsl
xchg
push
mov
outsb
dec
xchg
lods
xor
and
es
jb
stos
xchg
adc
push
cmpsb
lods
clc
lock
pop
cmc
enter
pop
mov
outsl
sti
adc
jbe
stc
in
jmp
int
mov
inc
data16
and
mov
lea
dec
jg
pop
inc
gs
pusha
dec
mov
mov
pop
cmp
insl
jp
out
fmul
jbe
fldt
out
inc
cmp
xlat
mov
jmp
rclb
inc
dec
cbtw
pusha
les
fsubl
xchg
pusha
leave
xor
jle
aad
das
out
xor
jo
je
lret
fcomi
mov
faddl
das
pop
pop
adc
jo
movl
outsl
xchg
nop
push
lds
cmp
aaa
repz
mov
ja
scas
mov
mov
out
fldl
xlat
das
inc
cmpsb
push
popf
xchg
popf
mov
inc
pop
xor
pop
jo
or
jne
lret
fildll
mov
gs
addr16
adc
aas
xchg
nop
mov
in
sbb
pusha
pop
ret
dec
push
aaa
int
push
ja
jno
scas
nop
xchg
jo
addr16
push
mov
push
dec
ds
dec
xchg
imul
inc
aam
pop
push
loop
jle
mov
mov
in
pop
dec
lret
addr16
fnsave
into
xchg
es
fs
ret
inc
addr16
and
dec
push
push
int
push
ja
hlt
aad
scas
inc
fistpll
ds
xchg
aaa
add
mov
xor
rcrl
outsb
daa
insb
popf
ljmp
pop
jb
cmp
cmpsb
mov
sarl
push
push
pop
mov
and
push
aaa
outsb
push
and
lahf
mov
in
daa
xlat
lahf
xchg
sub
imul
mov
fsubp
sub
sub
mov
xor
add
fidivrs
dec
xchg
ficoms
lods
into
in
pusha
xchg
dec
jns
lea
inc
mov
cli
lret
in
push
into
cmpsl
xchg
adc
mov
jge
or
pop
jne
push
loop
cmpsl
nop
aaa
inc
fisubrs
sbb
inc
cmp
mov
lahf
scas
push
and
bound
shl
pusha
arpl
ja
fdivl
mov
leave
icebp
dec
xchg
das
dec
xchg
push
xlat
pop
jae
push
push
add
mov
clc
shlb
out
xchg
nop
mov
aaa
lahf
xchg
xchg
shll
sub
pusha
call
push
loop
fbstp
mov
cmpsl
jbe
enter
outsb
mov
mov
and
xchg
xchg
jno
xchg
mov
xchg
je
inc
xlat
daa
rcrl
cmpsb
inc
mov
mov
sub
xchg
mov
loope
movsb
flds
xor
iret
xor
movsb
xor
cmp
in
fists
loope,pn
xlat
and
pop
mov
sti
test
and
repnz
icebp
aas
sahf
mov
das
dec
fisttpl
xor
sub
insb
push
testb
xchg
test
into
stos
xchg
fnstenv
movsl
ficoms
lods
mov
movsl
aas
mov
xchg
adc
pop
push
mov
push
xchg
mov
push
xchg
sub
sub
pop
cmpsb
pop
lock
inc
sub
xchg
jmp
into
stos
lcall
sbbl
inc
or
clc
jp
xchg
sti
adc
mov
fistpll
mov
adc
jo
mul
and
lock
outsl
test
aas
daa
xchg
mov
pop
int
es
cmp
fistps
xchg
xor
pusha
mov
pushf
xchg
mov
in
fsubs
lds
je
cmc
jg
into
xchg
leave
lahf
push
pop
cmpsb
out
fists
mov
or
outsl
iret
push
nop
es
push
sub
push
push
cmp
sbb
in
in
push
gs
das
movsb
jno
cs
fistpll
sub
add
pop
jg
pop
out
and
loopw
fisubrs
xlat
push
movw
xchg
mov
outsb
jbe
nop
ficoms
mov
inc
pop
xchg
xor
bound
retw
mov
out
nop
and
add
pop
cmp
adcl
dec
inc
xchg
mov
sub
sahf
sub
imul
jno
sahf
jns
ficomps
xchg
testl
cmpsl
roll
cs
mov
push
and
mov
fidivrs
push
mov
push
std
cmpsl
jp
sbb
or
sahf
cmp
push
outsl
dec
lcall
dec
dec
pop
pop
cmp
fbld
sub
addr16
loopne
and
arpl
xor
insl
cmpsb
cmpsl
daa
and
outsl
lret
stos
jge
push
xlat
outsl
pop
push
in
sahf
jmp
inc
lods
out
and
lahf
cli
mov
push
push
xchg
push
jnp
push
push
lea
repnz
pop
or
and
iret
add
adc
dec
lcall
jo
es
jno
xchg
loop
pusha
pop
es
pop
andl
cli
iret
inc
jbe
daa
pusha
mov
mov
xor
outsl
stos
xchg
fbstp
push
push
push
loop
inc
iret
and
cmp
fyl2xp1
addr16
mov
ljmp
add
mov
mov
mov
push
mov
mov
mov
pop
in
mov
push
cmpsl
inc
xchg
sbb
dec
xlat
cwtl
sbb
or
cmp
lods
mov
sbb
test
jg
gs
xchg
fimuls
mov
xor
jg
cmpsl
and
jp
and
enter
dec
ds
push
push
inc
es
ss
ss
jo
outsb
out
loop
xchg
sahf
pop
mov
es
mov
add
repz
push
or
push
stos
push
mov
bound
xchg
push
fs
aam
rcll
mov
push
pop
arpl
inc
in
scas
ds
sub
popa
lahf
mov
pop
ljmp
iret
ss
push
pop
xor
jb
sub
int
push
movsl
jle
jg
pop
lret
or
fidivrs
aas
xchg
orl
imul
pop
or
enter
dec
xchg
xchg
ja
cmp
imul
jecxz
sbb
inc
clc
pop
movsb
xchg
xchg
and
push
jno
outsb
pop
mov
pusha
cli
pop
dec
stos
adc
call
ds
push
cmp
push
js
dec
mov
lods
pusha
xchg
fcmovu
cs
data16
xor
aaa
cmp
pop
cs
arpl
iret
shlb
dec
andl
es
mov
mov
aaa
jle
cmpsb
and
adc
dec
mov
push
in
pop
xor
js
xchg
lods
push
dec
pop
jns
es
nop
jo
les
scas
lods
push
call
icebp
aaa
cmp
push
xchg
mov
inc
sahf
mov
iret
daa
inc
fbld
cs
mulb
cmp
pop
in
sar
push
daa
scas
cmpsb
xchg
ds
jo
push
jl
sub
pop
pop
rol
pop
int3
inc
mov
fnstcw
mov
jb
xchg
ds
repnz
mov
repz
dec
arpl
push
push
ja
data16
divb
jg
mov
mov
mov
fdivl
subb
xchg
lahf
inc
scas
mov
mov
mov
icebp
xchg
aaa
push
in
mov
repnz
pop
nop
lods
sub
mov
cmpsb
push
out
dec
ja
inc
pop
xlat
pop
aas
dec
pop
pop
add
scas
gs
push
aaa
fiadds
push
jp
mov
jle
push
xchg
dec
fsubrl
sbb
cli
sub
inc
call
fcmovnbe
push
and
jne,pt
cmp
test
xlat
in
call
data16
int
loopne
push
xor
loope
sbb
cli
xchg
mov
fstps
push
lahf
jbe
scas
inc
ret
add
aas
into
inc
push
cmpsb
cmpsl
daa
sub
push
shrl
ja
push
jno
mov
sbb
pop
pusha
sub
shrd
scas
ljmp
pop
push
aaa
jecxz
pop
push
xchg
daa
cmpsl
push
xchg
stc
nop
mov
out
jns
ds
out
stos
fiadds
pop
int
mov
pop
push
xchg
mov
addr16
pop
ljmp
xchg
dec
daa
mov
cmp
or
and
dec
pop
addr16
cmc
leave
es
xlat
lret
or
ss
ljmp
sub
dec
ss
pop
jle
daa
into
jmp
ja
xor
and
das
daa
outsb
xchg
in
sub
loopne
loopne
movl
mov
mov
into
dec
das
repnz
daa
sub
pop
jle
xor
cltd
cmpsl
push
xchg
out
rclb
int
mov
fisubrl
lret
mov
ret
in
into
inc
movsw
ret
adc
mov
push
sbb
mov
bound
pop
daa
mov
ss
or
arpl
and
mov
lds
ret
fs
and
add
push
sub
cmpsb
add
sbb
mov
rolb
mov
mov
and
addr16
cmp
lret
addl
inc
daa
xor
jl
jp
jmp
enter
lock
pop
jo
push
mov
mov
jle
cs
push
fs
xor
lahf
gs
jo
inc
aaa
enter
mov
dec
ja
addr16
push
enter
dec
add
inc
push
xchg
inc
fs
push
and
leave
rcll
xchg
ficomps
xlat
mov
push
inc
pop
in
xor
push
jle
into
xchg
sti
in
inc
es
pop
mov
push
xor
shrb
sbb
mov
cmp
iret
cmp
ss
in
push
loopne
dec
ss
faddp
xchg
mov
imull
pop
and
mov
cmp
xorb
xchg
mov
jle
out
jecxz
cmpsb
enter
adc
mov
or
adc
out
dec
push
cmp
and
pop
ds
dec
sahf
gs
js
mov
mov
mov
adc
cmp
cltd
fmul
mov
push
mov
data16
xchg
and
push
inc
mov
mov
jle
lock
add
add
lds
push
push
mov
push
setg
rcrl
sub
data16
leave
and
stos
into
push
jmp
inc
xchg
popf
add
jne
jne
ljmp
mov
inc
cmp
mov
repnz
add
pop
in
dec
roll
push
scas
sahf
aas
cmpsl
sub
scas
fists
mov
add
daa
dec
rcrb
cmpsl
sub
lcall
lock
ds
jo
call
cmp
pop
pop
sbb
dec
mov
test
and
push
rcll
das
xchg
stc
pop
sahf
sub
jle
xchg
clc
push
es
xchg
push
std
gs
cmp
subl
out
xor
outsl
cmpsl
pop
cmp
sbb
cmp
int
jo
lds
pop
call
ja
mov
inc
jne
inc
push
filds
mov
leave
cmpsb
inc
and
jbe
xchg
adc
push
cmpsl
pop
repz
in
cmpsb
inc
adc
jbe
pop
sbb
xchg
pop
mov
push
sub
shrb
and
push
daa
arpl
push
xchg
fnstenv
iret
pop
pusha
and
push
mov
call
push
cmpsb
movsb
dec
aas
popl
push
mov
shlb
das
mov
push
xchg
dec
add
inc
sbb
xlat
adc
mov
push
das
push
mov
sahf
pop
pop
cmp
inc
sub
cmp
mov
scas
sub
jb
les
sbb
inc
push
pop
popl
scas
sbb
aaa
cmpsl
bound
sbb
pop
addr16
sahf
dec
jmp
mov
push
cmp
outsl
test
push
punpckldq
push
and
enter
sarl
lretw
or
add
inc
cs
addr16
dec
lahf
popf
and
cwtl
roll
pop
js
pop
and
les
add
mov
lret
aad
cmpsb
and
hlt
lock
mov
xchg
cmc
dec
scas
movsl
lds
icebp
mov
sub
mov
outsl
pusha
add
mov
jns
iret
sahf
jbe
cmp
loop
xchg
inc
cmp
gs
sub
call
xchg
sbb
jb
mov
test
dec
sub
scas
cmp
pop
sahf
xchg
addr16
data16
iret
mov
xchg
cmpsb
cld
push
pop
daa
mov
shl
cmc
jbe
jg
out
mov
push
pusha
dec
mov
push
cs
mov
divb
jo
xlat
mov
daa
mov
jl
jo
add
adc
jnp
jecxz
scas
cmpsb
xchg
addr16
push
sti
pop
arpl
subb
loopne
fbld
xlat
pop
es
sub
fucomi
cmpsl
dec
loopne
fwait
jo
cmp
mov
or
xlat
pop
loopne
fisubs
dec
or
dec
cmpsl
out
dec
icebp
mov
js
mov
add
fimuls
ja
ds
fsubl
or
mov
cmpsl
cmp
xchg
fs
jg
inc
mov
xlat
push
dec
repnz
pop
push
dec
je
xchg
mov
mov
push
mov
pop
mov
inc
roll
aas
push
cli
rcrl
add
test
outsb
add
je
mov
jo
daa
jbe
xchg
pusha
clc
cltd
mov
scas
into
xlat
jns
push
cmp
das
xorb
test
repnz
mov
jns
mov
and
das
xchg
pop
nop
ljmp
and
push
test
ss
xchg
and
lret
ds
push
es
pop
pop
pop
sbb
cs
not
mov
dec
xlat
jbe
push
pop
js
imul
mov
inc
pop
add
shrl
jp
jo
cmpsl
daa
xor
mov
les
pop
push
and
mov
push
add
aaa
inc
mov
cmpsb
test
repnz
inc
pop
and
push
cmpsl
pop
lcall
xchg
and
ret
in
das
mov
out
xor
aas
pop
and
fisubrl
fistps
imulb
test
jbe
movsl
scas
sbb
jmp
into
or
jbe
and
test
ficoms
xchg
pop
das
mov
dec
clc
inc
mov
xor
lret
dec
bound
pop
mov
push
icebp
mov
addb
inc
mov
enter
fldenv
xchg
push
jmp
or
add
stos
jecxz
movl
cmc
xor
add
daa
inc
daa
packuswb
ja
nop
pop
ss
cmp
shll
daa
push
push
popf
sub
data16
repnz
jecxz
pop
adc
mov
pop
mov
nop
repnz
test
pop
pushf
cltd
dec
mov
fdivp
lret
jle
cmpsl
addr16
add
sub
mov
dec
movl
and
jp
sahf
clc
inc
scas
test
outsl
dec
flds
mov
mov
xor
shr
add
pop
mov
das
jo
xchg
pop
xchg
int
sahf
mov
mov
push
mov
fistl
fbstp
adc
or
test
ret
xchg
dec
jle
jno
in
sub
cmpsl
dec
xchg
mov
push
pop
fs
daa
stos
lock
pop
bound
scas
pusha
inc
iret
push
dec
cmp
in
pop
sahf
pushf
loope
das
pop
xchg
lahf
pop
fiadds
push
xor
scas
xchg
push
aam
das
lock
pop
xchg
ds
insb
jecxz
pop
cmpsl
sbb
and
in
lahf
stos
sub
dec
inc
mov
mov
push
push
push
xlat
cmp
hlt
cmpsb
add
loope
inc
iret
into
jle
lret
cld
addr16
pop
push
jo
aas
mov
loop
scas
and
dec
mov
outsb
mov
jge
push
pusha
sar
pop
dec
movsl
xlat
pop
push
jb
fwait
mov
or
addr16
insl
dec
das
add
jo
xor
clc
insb
lcall
dec
mov
jo
mov
mov
daa
pop
adc
sarl
test
mov
iret
fsubr
iret
cs
insb
jbe
jo
add
inc
gs
clc
cmp
vpmacswd
or
add
out
and
ja
cmp
mov
rcrl
sub
mov
test
inc
cmp
xchg
daa
mov
add
cmpsb
cmp
daa
repnz
push
iret
dec
add
shrl
fisttps
xlat
ficomps
repz
mov
into
leave
ficompl
jl
iret
out
pusha
shlb
sub
dec
popl
xchg
cmpsb
ja
andl
jle
into
call
push
push
cmpsl
and
and
adc
and
inc
xchg
pop
shll
mov
push
stc
scas
out
test
dec
xor
pop
push
inc
fidivs
aaa
push
lahf
and
inc
lahf
or
idivb
dec
xor
push
rcrl
daa
sub
popw
ss
add
push
ds
xchg
and
sbb
icebp
pop
fidivs
push
stc
dec
lahf
mov
mov
xchg
enter
and
pop
enter
mov
mov
push
es
xlat
movsl
xchg
pusha
push
popl
je
lods
scas
dec
dec
fcmovu
sahf
scas
insl
push
iret
push
out
pusha
outsl
fimuls
dec
push
aam
fists
mov
sub
or
mov
ret
add
push
inc
mov
into
sub
pop
rolb
jb
inc
mov
push
es
xor
out
into
xchg
adc
cwtl
adc
pop
ja
out
nop
stos
cwtl
xchg
add
rcl
pop
stos
mov
icebp
pop
push
cmpsl
mull
xor
ret
pusha
mov
bound
into
clc
ss
cmpsl
notb
gs
fistps
bound
bound
cmpsl
xchg
inc
pop
roll
jl
sbb
nop
jb
cmpsb
inc
push
cmpsb
sahf
add
adc
cmp
pop
and
je
cs
out
jmp
xor
nop
cmp
cmp
xchg
gs
mov
jbe
xchg
sub
int
xchg
jno
xor
cmp
or
push
add
mov
in
pop
data16
icebp
mov
mov
insb
ja
push
add
xchg
das
iret
cli
loope
outsw
push
addr16
and
ljmp
scas
mov
ret
mov
pop
das
outsb
das
jle
push
mov
dec
lret
and
dec
cmpsb
lock
or
inc
jno
jbe
xor
cmp
call
xchg
xchg
popa
and
mov
push
in
xor
fs
pop
add
and
ficoml
push
cmp
pop
in
xor
sub
dec
pop
dec
xchg
pop
insb
daa
mov
mov
outsb
and
add
fisttps
fiadds
dec
dec
addr16
xchg
and
fsubl
pop
iret
mov
idivl
mov
sub
leave
jle
cmpsb
and
cmpsl
pop
leave
mov
movsb
pop
dec
sub
outsl
xchg
or
cltd
sarb
lock
hlt
shrb
iret
cmp
data16
nop
out
enter
sub
pop
outsb
mov
test
dec
cmp
mov
movsl
outsl
imul
sahf
les
mov
sbb
xchg
push
into
push
mulb
pop
mov
pop
dec
add
scas
shll
stc
call
push
mov
and
push
and
cmpsb
mov
ja
sti
add
jmp
sub
sbb
xchg
adc
inc
ficoms
mov
dec
imul
movsl
mov
push
mov
gs
mov
ret
xchg
enter
movsb
andb
ds
sbb
aas
push
iret
pop
pop
xlat
xor
loopne
cmpsb
pop
mov
scas
inc
push
addr16
les
and
pop
mov
fdivrl
cmpsb
pop
scas
pop
out
out
xor
cmp
jbe
jae
push
std
push
out
jle
cmp
jg
mov
cmp
pop
dec
jmp
call
inc
mov
cli
loopne
mov
enter
inc
mov
push
cmp
pop
fldt
stos
sbb
scas
sbb
xorb
shrl
lahf
ds
scas
in
mov
pushf
in
hlt
aam
mov
sub
aam
das
pop
xchg
sub
ja
cmpsl
dec
and
addr16
xor
and
jne
jle
inc
in
and
inc
out
add
ds
cmp
scas
rcrb
ret
cmpsl
xlat
sub
addr16
push
mov
pop
inc
aaa
xchg
cs
dec
stc
pop
data16
xchg
insl
or
xor
push
push
orl
int
ds
adc
pop
cmp
shlb
add
push
mov
push
fbld
push
addr16
xor
das
in
mov
push
cmpsl
pop
into
popw
add
aaa
mov
mov
push
xchg
arpl
das
inc
push
xchg
inc
lahf
loop
cmp
xchg
xor
mov
sbb
jb
push
outsl
loope
lahf
pop
outsb
bound
roll
xchg
jns
daa
fimull
mov
mov
outsl
dec
mov
sti
inc
xlat
and
pusha
dec
xor
fiadds
pop
je
stos
sub
insl
ss
inc
pop
loop
mov
sahf
cltd
lahf
inc
push
mov
mov
push
into
pop
pusha
adc
das
das
mov
cmpsl
push
cmp
in
pop
push
push
adc
ljmp
push
push
xchg
jg
gs
sarb
out
scas
xchg
sbb
xor
and
mov
pop
pop
stc
out
scas
outsb
push
es
xor
insl
mov
xchg
push
lahf
call
add
imul
lret
dec
iret
cmp
push
xor
xor
data16
and
ds
mov
cmpsb
loop
movb
fistpll
add
push
imul
stos
cs
sahf
sub
lock
dec
push
lcall
mov
clc
mov
add
xchg
ficomps
push
push
in
aaa
aas
cmpsl
mov
inc
aas
cltd
inc
dec
cmp
pop
decb
fidivrl
push
ljmp
xor
jb
faddl
fmull
mov
pop
aas
daa
cmpsl
cmpsb
das
lods
sahf
xor
insb
add
dec
xor
sub
cmp
lea
negl
out
cs
xchg
jle
fucomp
outsl
mov
nop
daa
scas
and
or
push
push
push
inc
pop
dec
push
loopne
lods
inc
inc
sub
jo
fsts
inc
lahf
shr
xor
adc
push
iret
loop
addr16
dec
nop
pusha
gs
sub
pop
daa
imulb
inc
aas
out
jo
xor
leave
call
scas
repz
mov
sub
addr16
push
gs
sbb
ss
loope
sahf
mov
jmp
pop
pop
mov
pop
shrl
xor
gs
xchg
and
icebp
push
xor
jmp
fistps
ss
lahf
push
iret
inc
fs
movzwl
sub
data16
pop
mov
iret
dec
dec
shlb
movsb
ss
add
pusha
jnp
dec
scas
stc
xchg
push
into
sbb
jmp
gs
cld
addr16
jb
jne
pop
push
ret
and
iret
cld
cmpsl
dec
push
movl
ds
loop
and
aaa
xchg
and
cs
mov
mov
mov
xchg
mov
add
pop
fisttps
xchg
es
sbb
mov
mov
push
or
lods
es
fimuls
loop
iret
das
stos
sbb
and
aad
mov
enter
sub
fisubrl
jmp
fs
ja
dec
xchg
push
add
ss
outsb
pusha
lret
pop
daa
fistpll
sub
sbb
icebp
pop
cmp
mov
and
push
mov
loope
aas
outsb
addr16
jecxz
es
mov
push
pop
cmp
xor
inc
or
lods
dec
xor
lret
sub
iret
dec
adc
adcl
stc
popf
push
jg
push
out
mov
iret
xchg
inc
subb
nop
movsb
xchg
mov
mov
cltd
scas
xchg
and
test
pop
fisubrl
pop
and
test
or
add
cmpsl
push
rorb
jo
ret
outsb
jne,pt
shll
pop
mov
push
pop
push
cs
loope
xchg
xchg
rcrb
and
inc
fcoml
icebp
test
arpl
push
pop
dec
test
cmpsl
push
mov
cmpsb
pop
nop
cmp
cltd
pop
addr16
cs
xchg
sub
bound
aas
add
into
pop
add
lret
int3
subl
loope
das
inc
pop
mov
dec
cmp
mov
dec
lods
andl
pop
es
pop
adc
and
pop
fisubrs
cmp
cltd
lods
xlat
divl
mov
ss
mov
jg
ds
ljmp
rcl
das
fcmovne
cmpsb
push
xchg
jge
cmpsb
out
fs
cmpsl
xchg
inc
fs
fdivl
faddp
iret
pop
and
pop
cmp
lea
add
lods
cmp
std
jmp
cli
pop
jecxz
cmpsl
mov
pop
mov
inc
add
cmpsl
in
cmpsl
sahf
push
mov
xchg
dec
loope
aaa
jbe
dec
xor
in
xchg
mov
xchg
inc
daa
jo
push
inc
xchg
lahf
mov
add
aas
xchg
lret
out
jbe,pt
push
iret
cmp
mov
inc
xchg
roll
sub
and
and
aaa
outsl
adc
mov
js
fs
xchg
jnp
adc
fidivs
jecxz
pop
pop
pop
dec
into
dec
sub
adc
ja
adc
jl
shrb
jnp
mov
pop
pop
jg
pop
jb
push
jb
cmp
das
mov
leave
xlat
cmp
mov
mov
popa
mov
pusha
push
es
lock
or
loop
ds
mov
pop
push
mov
push
push
popf
cmpsl
xchg
xchg
cld
sahf
jno
aaa
dec
mov
aas
fbld
outsl
inc
sub
scas
fimuls
addr16
xchg
dec
jp
mov
lods
arpl
push
pop
jle
repnz
mov
gs
lahf
push
xorb
filds
and
pop
mov
es
push
sub
adc
push
cmp
sbb
aaa
xchg
inc
in
cmp
jne
mov
in
in
pusha
cs
pop
xchg
pop
push
insb
movsb
dec
dec
subl
loopne
pop
xchg
lahf
out
loope
push
push
data16
mov
and
add
mov
clc
int
pusha
jo,pt
inc
mov
pop
pop
push
xor
mov
mov
arpl
xchg
pop
push
sahf
clc
jecxz
inc
nop
dec
es
pop
mov
pusha
cmpsl
data16
ds
pop
mov
aaa
rcll
cmp
xor
mov
xchg
adc
dec
aaa
loope
mov
lahf
push
xor
push
outsl
fidivrs
and
jl
ficoms
cmc
xlat
sbb
pop
popf
jmp
imul
bound
push
or
stc
aas
ss
in
xor
addr16
enter
clc
mov
mov
jbe
mov
mov
out
pop
shll
ja
xchg
pop
orb
scas
and
xchg
cmc
in
out
scas
iret
dec
in
repz
cs
add
mov
jo
adc
mov
inc
pop
xchg
push
ja
adc
add
cmp
fisubrl
add
mov
adc
push
jmp
xlat
out
pop
sbb
addr16
xor
nop
pop
mov
shlb
inc
adc
repz
aad
jmp
xlat
push
int
sub
jl
ret
mov
sar
daa
lds
dec
shll
int
push
inc
mov
mov
data16
adc
outsb
test
adc
outsb
xor
mov
je
scas
cmpsl
add
xchg
ja
aas
xchg
filds
adc
nop
mov
adc
sub
ss
and
cltd
mov
jg
popl
inc
out
lods
pop
mov
mov
fisttpll
pop
mov
andb
cltd
xchg
lahf
mov
lds
aaa
mov
xchg
outsb
jle
sahf
jg
jns
or
sti
cmp
outsl
adc
push
sub
sbb
dec
ret
and
cmp
mov
mov
ret
inc
mov
rorl
push
dec
xchg
lods
push
loopne
cmpsl
lahf
cmpsb
scas
inc
add
xchg
mov
nop
dec
lahf
and
dec
mov
mov
test
gs
add
lahf
jl
xchg
scas
pop
fildll
int
inc
jno
arpl
enter
xchg
scas
push
and
xchg
fadds
add
in
jge
loopne
cmpsb
lahf
inc
pop
fisttps
xchg
mov
sahf
jnp
lahf
pop
cmp
push
cmpsl
aaa
pop
subb
aaa
adc
sahf
jl
rclb
gs
mov
lahf
pop
fistps
mov
iret
mov
sahf
cmpsb
test
jl
mov
adc
lahf
or
stc
sahf
pop
xchg
stc
das
fiadds
push
fists
hlt
imul
in
xchg
std
arpl
push
dec
int3
and
push
rolb
sbb
push
stc
push
jl
inc
cld
pop
movl
mov
es
outsb
pop
pusha
cmp
sbb
inc
rorl
ss
clc
subb
roll
inc
data16
jge
das
xchg
xchg
sarb
pop
inc
daa
nop
jecxz
xchg
xchg
dec
pop
das
jmp
mov
in
rcrb
push
dec
mov
outsb
outsl
dec
add
mov
je
xlat
dec
adc
outsb
std
aaa
inc
sbb
fs
ja
pusha
lcall
sub
out
xor
lea
xlat
pop
xor
push
inc
nop
pop
stos
xchg
xchg
into
test
andl
push
mov
xor
jl
add
mov
push
arpl
jg
pop
pop
ds
fwait
icebp
outsb
ja
jle
pop
add
aas
cmpsb
pusha
sub
call
fisubs
push
aad
xchg
jo
inc
scas
jg
and
dec
mov
push
push
lahf
sbb
xchg
pop
xor
es
imul
jmp
scas
jle
mov
pop
sbb
jecxz
dec
add
aas
mov
ffreep
inc
ds
pop
jo
mov
sub
cmp
pusha
inc
pop
jo
mov
scas
and
dec
or
inc
test
repz
inc
xchg
or
pop
inc
push
pop
ret
mov
mov
mov
dec
push
dec
fwait
ja
sbbb
or
pop
loop
push
scas
dec
cmp
repnz
dec
xchg
loope
daa
xchg
das
push
in
inc
xchg
pusha
xorb
mov
cmp
inc
ret
pop
push
mov
addr16
mov
mov
clc
mov
loop
xchg
aas
scas
test
data16
xlat
cmpsl
es
xor
jg
lods
ja
fldl
push
push
jbe
inc
fldcw
cmp
lods
inc
scas
addr16
dec
aaa
lahf
add
std
pop
lahf
inc
cmpsl
cmp
test
cmp
push
xor
lods
ja
xchg
in
add
push
call
cmpb
movsb
adc
std
cs
xlat
xor
mov
out
xor
xchg
adc
lock
icebp
daa
iret
add
es
xchg
repnz
fcompl
nop
pop
mov
inc
lcall
mov
fidivrl
nop
gs
aas
jecxz
jb,pn
into
pop
in
lahf
fs
scas
loop
mov
xlat
jg
into
es
jb
inc
cmpsb
xchg
in
mov
or
xchg
gs
xor
dec
mov
loop
xchg
dec
cmpsb
lret
scas
clc
scas
stos
cmp
add
dec
push
mov
xchg
cmp
lds
xchg
jecxz
push
loop
es
push
pop
gs
cmpsl
push
call
in
inc
mov
cs
std
fs
pop
add
xchg
hlt
xchg
inc
out
dec
jbe
cmpsl
sbb
aas
ret
mov
pusha
push
mov
movsb
cmp
inc
imul
pop
scas
lret
fcmovnb
sahf
jbe
lcall
ss
inc
xlat
push
xchg
shll
pop
into
aaa
inc
add
xlat
pop
ja
or
and
mov
sub
xor
iret
sti
push
es
mov
scas
testl
mov
mov
adc
jle
add
xor
sbb
mov
or
outsb
jo
aas
xor
ficoms
push
xor
mov
mov
inc
fidivs
rcrl
jb
sbb
mov
pusha
pop
cmp
pusha
xchg
cmp
mov
push
cmp
cmpsb
mov
mov
pop
mov
pop
fucomi
je
sub
dec
into
pop
pop
les
pop
rcll
aad
aas
lea
mov
das
mov
adc
insl
or
faddl
scas
sbbb
js
nop
shll
divl
aaa
xchg
and
xor
cmp
xor
in
mov
je
addr16
dec
push
outsl
loop
daa
mov
jg,pn
cmpsl
into
pop
adc
sub
jg
sub
cli
push
xlat
mov
frstor
xchg
dec
mov
xchg
xchg
inc
jg
push
inc
iret
ja
fcmovb
mov
cmp
dec
int3
adc
jmp
ds
push
das
imul
xor
xchg
xchg
lods
cmp
jp
jmp
xchg
xchg
mov
ds
pop
push
cmpsl
push
out
ret
inc
jb
xlat
aaa
fwait
mov
nop
push
gs
movb
js
aam
push
cmpsl
push
add
mov
jmp
outsl
das
pop
sub
test
lahf
and
stc
hlt
int3
mov
repz
xchg
sahf
mov
inc
rcll
xlat
adcb
js
dec
enter
cmp
pop
das
mov
inc
data16
ss
inc
outsb
lea
in
leave
aaa
mov
mov
sahf
pusha
push
pop
daa
xchg
and
inc
outsb
addr16
xchg
inc
add
mov
iret
jle
js
mov
cmpsb
and
into
xchg
ja
sbb
jns
aas
jo
mov
mov
or
ss
jns
scas
jge
arpl
cmc
mov
inc
jbe
rcll
outsb
fdivrs
and
je
xlat
mov
sub
xor
jns
sbb
arpl
icebp
xchg
es
push
dec
pop
xchg
push
push
push
outsl
jg
sbb
jo
out
int
jle
insb
mov
pop
push
out
ja
pop
mov
nop
sbb
push
inc
hlt
addr16
in
outsb
dec
test
lds
and
cmp
cmpsb
cmpb
pop
ljmp
push
popf
mov
aaa
jbe
jne
jo
cmp
jbe
gs
mov
leave
adc
cli
fs
aas
pop
pop
aaa
dec
data16
cmpsl
push
iret
mov
scas
in
clc
xchg
sahf
mov
xchg
dec
xchg
mov
or
sub
mov
mov
inc
cltd
mov
mov
dec
push
xchg
push
push
pop
ss
jno
and
pop
out
hlt
lahf
pusha
jg
lds
nop
cmpsw
outsb
jmp
fs
fidivs
sbb
xchg
dec
scas
lret
pop
mov
pop
nop
aaa
adc
rcll
jecxz
add
jnp
dec
test
dec
cmc
push
es
test
sub
inc
push
mov
jmp
xchg
cmpsl
xlat
roll
jecxz
jbe
popf
cmp
mov
xor
sahf
daa
jg
mov
inc
into
cmpsb
daa
xchg
aas
out
mov
gs
scas
int
push
enter
cltd
jle
movsb
dec
xor
xchg
lock
cmp
das
ficoms
push
in
jno
daa
dec
push
mov
test
push
ljmp
iret
fwait
and
xchg
xchg
sub
fisttps
pop
push
inc
clc
inc
dec
cmp
mov
and
add
bound
mov
xchg
push
pop
push
add
shll
push
jg
adc
jbe
bound
dec
inc
and
pop
pusha
mov
mov
mov
test
xor
xchg
jbe
scas
xlat
jne
push
je
mov
hlt
lds
mov
lods
adc
data16
leave
inc
mov
scas
pop
mov
xor
out
push
leave
gs
jg
mov
gs
inc
data16
mov
cs
gs
cmp
inc
add
and
lock
aas
pop
in
cmp
inc
sub
popl
pushf
xlat
adcl
inc
scas
mov
aam
iret
rcl
xor
or
subb
jbe
cmpb
pusha
call
xchg
sbb
call
and
push
add
and
in
call
daa
jo
andb
repnz
push
cs
es
addr16
xchg
mov
mov
repnz
iret
xchg
or
or
in
bound
ficoms
lahf
mov
sahf
xchg
cs
sub
push
mov
dec
fidivs
leave
popw
in
jo
cmpsl
ds
mull
clc
inc
lock
cmpsl
xorb
cmpsb
pop
push
cltd
flds
cmp
cmp
fwait
mov
out
mov
pusha
iret
dec
ss
pop
out
mov
adc
mov
and
pop
sub
out
gs
pop
pop
mov
push
enter
push
mov
stc
dec
lahf
ds
and
into
es
pop
das
xchg
mov
inc
push
mov
sbb
dec
out
aaa
inc
push
es
sub
sub
inc
stos
mov
dec
mov
ss
and
xchg
push
and
aad
push
mov
stos
mov
lret
cmp
daa
or
lock
sarl
cmpsb
sahf
fistpll
dec
scas
fisubl
and
xchg
pusha
mov
mov
ss
arpl
add
pop
ja
xchg
mov
add
jne
inc
mov
arpl
mov
bound
mov
inc
pop
pop
mov
push
outsl
mov
lock
xlat
mov
mov
iret
jne
rcrb
pushf
addr16
pop
xor
fiadds
xor
push
icebp
pop
push
inc
mov
pop
ja
push
push
xchg
pop
add
ret
mov
iret
das
add
xchg
cmpsl
mov
push
pop
outsl
test
xor
lahf
fldcw
and
dec
jg
push
xchg
lahf
fidivrs
add
add
scas
mov
pop
jg
xchg
mov
bound
cmp
idivb
pop
out
push
and
iret
dec
divl
xchg
daa
lea
hlt
int3
mov
pop
cmp
dec
dec
cmp
jno
cmpsl
dec
mov
scas
pop
ds
out
xor
mov
aas
ret
subb
nop
mov
ficompl
fiaddl
pop
daa
jle
cmp
ja
pop
add
es
test
cs
dec
push
mov
das
aaa
ficoms
pop
loopne
jmp
mulb
mov
push
push
cs
pop
adcl
and
scas
dec
lret
mov
push
inc
xchg
fs
das
inc
enter
push
aas
loop
push
jg
and
icebp
pop
outsb
push
xchg
mov
inc
pusha
cmpsl
lahf
mov
add
add
lods
xchg
daa
inc
leave
out
mov
mov
imul
lret
push
sahf
test
mov
push
xlat
dec
and
enter
xchg
mov
dec
das
push
std
jns
sub
dec
aas
ljmp
in
lahf
dec
add
jg
out
push
pop
test
scas
mov
push
ds
xchg
cmpsb
orb
fwait
cs
pusha
sahf
xor
mov
adc
sbb
xchg
jno
pop
pop
push
push
dec
push
addr16
mov
inc
cmp
mov
sub
std
aaa
out
xlat
mov
pop
cmpsb
lea
rol
jle
jg
push
mov
jmp
cmp
mov
dec
sbb
lods
and
mov
aas
jg
jo
bound
dec
xchg
mul
fbld
mov
jp
xchg
insl
ror
filds
xchg
shrl
in
cmp
pop
push
pop
scas
add
and
rcrb
adc
xor
int
mov
jg
iret
push
test
insb
mov
aad
inc
pop
inc
push
ss
push
add
xchg
lahf
inc
pop
jmp
fildll
aam
das
bound
xorb
cli
aam
data16
push
test
jle
mov
xchg
cmpsb
dec
aas
xchg
jne
sbb
sahf
pop
sub
xchg
xchg
sbb
loopne
sub
in
scas
addr16
sbb
pusha
pop
and
ds
js
daa
sahf
icebp
inc
pop
jb
dec
push
mov
xor
add
shl
into
push
scas
cmp
mov
mov
xchg
xorl
out
and
adc
das
pop
jae
out
inc
scas
daa
jbe
shll
xchg
inc
pusha
inc
and
fists
pop
ret
inc
or
outsl
cmp
push
xchg
sbb
fnstcw
cmp
cwtl
fidivrl
iret
mov
daa
and
xchg
das
rcl
push
hlt
arpl
fildll
fnstenv
fcmovbe
outsb
pop
fbld
push
push
mov
scas
aad
iret
and
mov
loop
cmpsb
push
jg
mov
aas
fldenv
inc
xlat
xchg
jecxz
sahf
mov
push
add
pop
jns
pop
mov
mov
sbb
mov
pop
adc
jae
daa
loope
pop
jle
das
aas
dec
pop
sub
mov
lods
pop
push
fldz
push
mov
cli
aas
jbe
ja
dec
flds
jb
rcll
lahf
iret
and
cltd
daa
add
adc
fistl
pop
daa
jb
sahf
lds
add
sub
jg
mov
out
call
inc
aaa
xchg
ret
cli
mov
repnz
xchg
pop
cs
outsl
faddl
inc
sub
mov
pop
inc
aas
lea
sarl
scas
hlt
mov
jno
dec
xorl
mov
jo
jmp
push
fimuls
sbb
scas
inc
jg
fcompl
dec
pop
out
lahf
xchg
jns
push
fwait
mov
out
cmc
aas
movsb
mov
mov
movsl
jnp
or
aaa
inc
into
ret
mov
push
and
jg
ja
clc
cmpsb
loope
pop
es
and
pusha
adc
mov
push
test
inc
sti
jb
fs
mov
call
scas
dec
jns
pop
mov
fmulp
lods
sbb
cltd
mov
aaa
push
xchg
mov
das
mov
and
push
cmpsb
ds
mov
pusha
mull
loope
xchg
sahf
ss
dec
cmc
xlat
pop
mov
ror
push
shll
sahf
scas
xchg
sbb
xchg
inc
in
xlat
bound
push
inc
push
ja
pop
es
xchg
das
lds
mov
fwait
iret
and
pop
jg
jb
jl
dec
in
data16
pop
cmp
inc
jnp
jo
push
cmp
fs
ror
jb
cmp
insl
sti
xchg
push
fistl
pop
stos
ret
and
into
xor
ds
addr16
jb
jg
aaa
out
xchg
or
mov
daa
scas
mov
leave
cmpsb
mov
mov
pop
jecxz
scas
sub
js
mov
clc
ljmp
pop
imul
mov
add
inc
jae
cmpsl
leave
fisubs
lcall
pop
push
mov
mov
addl
cmpsl
ja,pt
data16
lret
push
xor
push
adc
pop
pop
ss
add
mov
sub
jmp
mov
push
popa
leave
adc
inc
stos
arpl
mov
dec
inc
call
pop
xchg
daa
dec
xchg
fbld
add
inc
int
pop
scas
gs
cmp
cltd
aas
aaa
mov
mov
mov
cmp
loop
xchg
iret
outsl
inc
scas
pusha
dec
or
push
lds
cmpsl
pop
sub
push
add
mov
aas
dec
cmp
das
xchg
mov
jo
jl
mov
pop
cmpsb
pop
inc
pop
push
add
hlt
test
xlat
mov
cmp
das
xlat
pop
sbb
cmpl
push
cmp
vpshaq
mov
push
lret
cmc
ds
mov
cmp
in
es
lret
jecxz
addr16
enter
or
and
dec
push
in
adc
std
shl
test
imul
repz
sub
pop
xchg
mov
sbb
cs
sarb
bound
mov
dec
pop
nop
insb
mov
movsb
sbb
jns
pop
std
scas
mov
sahf
bswap
cmp
sub
movl
mov
fiadds
push
pop
ja
pop
iret
aas
xor
fistps
push
pushf
negb
push
stos
xor
jo
pop
aaa
sub
shll
jecxz
push
nop
cmp
leave
sahf
pop
cmp
scas
and
and
pop
out
stc
jb
push
xchg
mov
lds
stos
add
int
jle
mov
jmp
ja
addr16
or
imul
xchg
cmp
cs
xor
in
pop
xchg
outsl
frstor
aas
arpl
dec
xchg
mov
xchg
jbe
inc
sub
stc
fbld
inc
xchg
push
adc
sbb
clc
in
lds
sahf
pop
push
push
add
outsb
sbb
sub
dec
ljmp
pop
inc
lcall
inc
dec
daa
inc
push
and
xchg
inc
cmpsl
in
jg
mov
push
shrl
add
addr16
out
fbstp
into
mov
inc
shlb
outsl
daa
movsb
repnz
and
call
iret
fnstenvs
jae
push
inc
cmpsl
ja
gs
fiadds
jle
es
push
fstl
xchg
lahf
xchg
mov
outsb
das
pushf
xchg
pop
mov
inc
arpl
sub
fs
es
call
mov
xor
pop
adc
xchg
xlat
cmp
cmp
and
lock
ss
lock
xchg
daa
bound
mov
jle
sub
mov
and
fisubrs
xchg
sahf
pop
and
testl
sti
add
jno
jo
fsubl
mov
jbe
xchg
fbstp
and
mov
mov
inc
das
mov
jle
ss
mov
xchg
lods
stc
xchg
data16
into
xchg
cwtl
mov
out
rcl
push
ficomps
cmpsl
pop
jmp
push
int
into
lahf
dec
jle
xor
push
iret
js
es
or
outsb
sub
mov
fucomip
into
outsb
push
sahf
push
xchg
or
mull
mov
addb
adc
pop
es
pop
cmpsl
out
pop
jge
inc
fiadds
test
ss
push
mov
rol
mov
xor
inc
addr16
bound
fisubl
pop
push
loop
inc
data16
xchg
scas
and
push
or
test
and
mov
cmp
out
jno
sub
jbe
push
adc
ror
jae
fisubl
mov
rorl
dec
xlat
cmpsl
pop
jg
daa
fisttps
shll
jle
iret
xchg
xor
iret
repnz
jae
push
cmc
cld
adc
mov
xchg
mov
inc
add
enter
mov
es
and
addr16
sub
ffreep
data16
mov
push
pop
jns
das
inc
and
ja
rol
lods
jmp
add
scas
xchg
mov
jne
in
rol
bound
outsb
notb
xor
pop
sub
cmp
or
push
pusha
nop
addl
fcompl
es
shll
push
inc
ja
outsl
adc
fidivs
or
ds
xor
xchg
mov
pop
fwait
jns
in
inc
pop
cs
fs
push
pop
jg
fists
xchg
pop
loopne
int
dec
in
jmp
mov
movsl
dec
cmpsb
aas
dec
aad
daa
sub
test
dec
sahf
pop
xor
lea
test
icebp
xchg
adc
in
mov
xchg
mov
inc
fdivp
jg
and
rclb
xchg
push
xchg
sahf
push
cwtl
clc
ja
pop
data16
inc
flds
daa
mov
ja
pop
cmpsl
fistpl
push
pusha
xchg
inc
std
xchg
scas
loop
fidivs
imull
in
das
cs
push
adc
cmp
sbb
mov
into
sub
mov
jno
jecxz
push
push
es
add
and
lahf
scas
pop
xor
stos
xchg
fnclex
into
mov
shll
sahf
cmp
insb
add
push
push
loopne
xor
mov
pop
xlat
jno
xchg
inc
add
mov
cs
popl
sub
outsb
daa
and
cmpsl
xchg
and
cld
and
sbb
and
and
call
jle
mov
dec
mov
sahf
dec
jae
mov
mov
mov
std
mov
leave
push
xchg
inc
es
add
push
push
jg
out
sahf
decb
push
xlat
xchg
daa
jbe
rcr
andl
cmp
mov
es
xlat
rolb
xor
iret
xchg
jbe
mov
mov
addr16
lea
or
inc
or
pop
mov
and
mov
pop
icebp
ret
dec
ja
pop
xchg
sahf
repnz
mov
daa
leave
fistpll
sub
push
inc
pusha
mov
scas
ljmp
cmp
dec
push
scas
rcr
and
inc
push
mov
outsb
imul
jg
lcall
sub
scas
adc
fbstp
xchg
jmp
ds
xor
mov
ss
xor
aam
mov
dec
out
daa
pop
pop
fwait
ss
ss
ret
rcll
xor
xchg
pop
cmpsl
ljmp
inc
xlat
jb
add
int
jbe
mov
pop
fcoml
or
fsubrl
fwait
ja
mov
dec
pusha
mov
xlat
dec
jns
ja
xor
lahf
repnz
mov
fs
aas
aaa
dec
mov
shrl
xchg
dec
adc
jno
je
push
dec
adc
dec
pop
xchg
cltd
scas
jmp
data16
sbb
mov
fidivs
outsb
xor
pushf
and
icebp
insw
data16
rcr
mov
xchg
icebp
outsl
jg
add
sahf
mov
sti
scas
dec
aad
int3
push
dec
daa
call
aaa
iret
lods
cmp
loop
lahf
ja
sahf
daa
adc
xlat
cwtl
sub
inc
cwtl
and
pop
xchg
mov
xorl
das
xlat
push
cs
jae,pt
push
cmpsb
scas
jg
out
pop
dec
push
das
jbe
gs
inc
xchg
dec
add
mov
into
adc
int
fcmovu
jbe
xor
jo
insb
sub
in
push
outsb
mov
fidivs
mov
ja
mov
pusha
xchg
inc
ds
shl
or
xchg
out
jns
fbstp
fildll
iret
push
push
cmp
pusha
ja
jae
das
stos
mov
nop
mov
inc
aaa
jle
in
mov
mov
into
movsb
add
jne
lahf
es
mov
push
aaa
jo
jecxz
inc
ds
es
jg
aaa
hlt
shll
iret
sbb
jb
sub
dec
sahf
les
mov
push
add
pop
add
jle
xor
insl
cmpsb
cmp
mov
rcrb
xchg
repnz
add
dec
xor
ds
cld
call
xchg
outsb
lahf
fstl
dec
add
mov
popf
mov
inc
jmp
aad
mov
test
cs
loopne
adc
data16
push
das
jno
dec
pop
mov
pop
cmp
cmp
es
inc
xlat
enter
push
jle
xor
clc
xor
nop
pop
fsub
aaa
xchg
jmp
mov
push
filds
pop
jbe
dec
aam
iret
xlat
jne
mov
push
sarl
lds
sbb
and
in
push
xor
xchg
cmpsl
adc
in
jg
pop
push
cld
and
pushl
cmp
mov
dec
pop
psadbw
lret
push
ja
push
int
push
jbe
cmp
pop
sahf
push
divb
add
rcl
ss
mov
pop
and
fisubs
ror
xlat
inc
xor
pop
pop
leave
daa
nop
es
ljmp
mov
lea
dec
popf
mov
ss
xor
xor
hlt
les
iret
fstpl
push
adc
pop
aad
cmpsl
pop
jecxz
fists
popa
ret
ror
aaa
mov
pop
mov
lcall
jbe
fwait
pushf
mov
add
jp
push
movsb
mov
add
add
xchg
mov
test
scas
cmc
ss
call
jo
je
sarl
data16
jle
cwtl
enter
xor
ja
pop
dec
lods
outsl
or
push
pop
xlat
into
rcrb
iret
scas
imul
push
test
pusha
rorl
push
and
xorb
xchg
iret
push
adcb
in
xchg
negb
add
mov
into
pop
sahf
outsb
fists
nop
ss
fs
lods
negl
int
addr16
pop
xchg
dec
pusha
enter
je
ss
hlt
ds
cmp
mov
dec
mov
aas
leave
sahf
xchg
iret
pop
in
fbld
sub
lods
cmpsb
sub
out
adc
push
lahf
xchg
les
mov
push
jp
fwait
mov
inc
out
jo
cli
popl
fimuls
mov
or
sahf
repnz
fwait
divb
popf
inc
das
roll
mov
repnz
xor
adc
fwait
xorl
pop
outsb
stos
fisubs
xchg
flds
and
xchg
cmpsb
xchg
mov
cmp
sub
call
ja
mov
std
mov
xlat
xchg
outsl
into
mov
iret
push
cli
call
dec
dec
add
movsb
sub
aas
mov
mov
jg
xor
xlat
xor
push
sbb
jmp
data16
subb
mov
mov
add
sbb
nop
das
aas
inc
fisubs
jbe
cli
cli
ds
xchg
mov
jae
jno
das
sbb
fxch
dec
addr16
pop
inc
pop
mov
jnp
divb
xchg
ret
inc
pusha
gs
lcall
dec
inc
cmpsl
mov
xor
or
into
lahf
push
pop
fdivrp
sub
popa
cmpsb
dec
push
push
cmp
dec
cmc
add
cmpsl
mov
jns
pop
cmpb
jo
push
es
and
cmpsb
stos
sbb
dec
aas
push
aas
out
popf
pop
inc
aas
pop
nop
sbb
in
addr16
xchg
mov
loopne
push
cmpsl
xchg
fxch
mov
outsb
out
cli
out
mov
push
leave
rol
pop
les
sub
xor
jae
dec
es
push
jle
mov
aaa
cmp
inc
push
dec
gs
popl
aaa
push
daa
ja
cmpsl
sub
nop
bound
push
std
jp
push
jp
sub
sahf
inc
ss
dec
call
and
outsl
data16
pop
pop
sahf
pop
mov
mov
sbb
fstl
sahf
cmp
xlat
pusha
mov
addr16
gs
inc
mov
xor
xchg
lret
and
lock
lds
inc
ss
in
pop
outsb
into
pop
and
xlat
int
ss
mov
and
pop
adcl
xchg
dec
mov
test
pop
mov
pop
xor
std
lret
lods
push
fldl
lahf
lea
xchg
or
sub
int
lahf
jp
div
clc
push
jg
stc
push
and
shlb
lret
shll
das
cmpsl
sub
icebp
popw
std
iret
sbb
lock
push
into
inc
inc
aad
mov
pop
movsl
loope
xchg
fistps
push
push
pop
inc
loope
outsb
mov
sub
imul
les
das
shlb
sbb
insl
lret
jmp
pop
xlat
cmc
fisttps
ja
mov
test
pop
mov
jecxz
push
xchg
cli
sub
scas
mov
pop
shrl
dec
mov
in
cs
js
xchg
sub
cwtl
repnz
in
jle
mov
fisttpl
xor
insl
mov
xchg
imul
cs
outsl
pusha
jns
pop
fisubrs
fidivrl
rclb
xor
mov
iret
sbb
iret
call
xchg
repnz
jo
jbe
fistpll
cs
adc
es
dec
in
cmp
das
mov
sub
push
fimuls
fs
mov
sahf
jg
dec
mov
js
rcrw
xchg
push
enter
lahf
aaa
push
push
outsl
pop
xchg
in
push
pushf
inc
scas
jb
jmp
cmpsb
jmp
xor
mov
iret
cs
scas
push
es
subb
imul
shll
out
data16
push
mov
xchg
mov
fidivrs
xor
mov
xchg
cmc
inc
push
or
outsl
cmpb
lahf
hlt
xchg
pop
xchg
jmp
fcomps
jp
xor
push
pop
inc
ret
jbe
push
adc
mov
mov
jecxz
outsb
and
cmpsl
addr16
fldenv
outsl
das
ds
out
rorb
push
test
pop
jg
push
mov
cmp
push
cli
es
cltd
push
push
clc
data16
xchg
jmp
notb
out
mov
iret
idivb
sarb
and
and
lods
cmp
das
mov
cmp
pop
dec
xchg
mov
ds
inc
outsb
sahf
add
pop
cmp
xchg
cmp
pusha
mov
sub
jo
iret
in
dec
or
ja
mov
xlat
jl,pn
fiadds
push
loopne
mov
into
fisttpl
sbb
pop
push
jno
mov
pop
fwait
icebp
out
xlat
pop
pushw
lock
mov
imul
xchg
inc
int
es
and
loopne
push
iret
lock
or
mov
push
cmpsb
jle
scas
xchg
fldl
inc
fimuls
ja
das
push
mov
push
xchg
and
pop
dec
push
sub
hlt
mov
fisttps
data16
fcomi
jbe
push
push
jmp
jns
pop
push
xor
xor
push
pusha
daa
fbld
or
outsl
xor
aaa
scas
xchg
mov
jecxz
aas
xlat
fnstenv
int3
xlat
mov
xchg
dec
inc
xchg
pusha
and
clc
inc
ja
loope
adc
xchg
lea
popf
sarb
jno
cld
jmp
pop
lahf
test
jg
xchg
sub
push
dec
xor
dec
insl
lds
and
aaa
xchg
mov
mov
fisttps
out
cmp
fsubrs
mov
lods
loop
iret
scas
ja
outsb
int3
int
sahf
scas
pop
lahf
imul
cmpsl
daa
push
pop
and
iret
rcrl
das
iret
fwait
testb
mov
inc
xchg
sbb
data16
sbb
sub
mov
andl
into
notb
fnsave
lret
jb
xor
mov
dec
sahf
xchg
lock
fbld
pop
dec
xor
mov
sbb
pop
movsb
fists
ds
daa
mov
js
fstl
fisttpll
xchg
test
xchg
roll
repnz
nop
test
cs
test
fldenv
pop
mov
ds
cwtl
mov
xlat
testb
or
nop
mov
jo
cmpsb
inc
outsb
fisubrs
stos
jae
mov
pop
adc
jne
jg
outsl
xor
inc
mov
aas
mov
into
cs
daa
xlat
sarl
cmpsl
inc
ss
xor
xchg
and
ds
daa
pop
cmp
out
ja
lahf
scas
and
dec
inc
mov
push
into
or
sbb
aad
mov
fdivs
cmp
lds
shlb
lea
bound
es
jo
push
nop
stos
repz
lea
inc
jns
push
scas
and
ja
xchg
stos
into
dec
aas
inc
cmp
inc
scas
adc
aad
lahf
push
xchg
mov
cmp
cmpsb
xlat
mov
ds
mov
aam
outsw
arpl
cltd
jbe
jo
mov
sub
push
or
mov
aad
xor
test
lahf
out
cmp
and
aas
ss
sarl
jbe
and
ret
dec
jo
xchg
outsl
pop
xor
dec
pop
in
xchg
inc
roll
xchg
sbb
pop
out
xchg
loopne
stos
addr16
sbb
es
cmpsl
push
mov
loopne
pusha
int3
or
aad
cmpsl
push
xlat
inc
jl
mov
daa
push
cmp
nop
cmpsl
pusha
out
daa
loopne
xchg
pop
pop
push
pop
daa
sbbb
js
push
and
mov
and
fs
mov
xchg
ret
mov
rcll
in
jo
aas
orb
jne
divb
push
xchg
iret
iret
sti
lahf
cli
and
daa
or
repnz
shll
aas
cmp
mov
enter
les
cmp
mov
movsb
int
cs
cld
aad
cmpsl
ds
pop
adc
push
lahf
pop
jnp
aas
lret
enter
mov
hlt
push
stos
add
daa
cmpsl
dec
cmpl
push
lahf
jbe
hlt
mov
push
mov
das
dec
jo
xchg
xlat
ja
fisubrl
add
pop
pusha
scas
cmp
loop
xor
push
mov
and
movzwl
bound
pusha
dec
push
loopne
mov
push
rcr
xchg
xchg
aad
push
pop
ja
adc
es
fildll
scas
jl
stos
dec
in
nop
je
andb
or
lahf
pop
xchg
jno,pn
int3
scas
xchg
mov
push
aas
pop
out
ss
addr16
and
sub
mov
int
ja
mulb
decb
cmpsb
mov
into
push
jle
jecxz
nop
enter
jno
pop
jno
arpl
adc
scas
repnz
daa
push
aad
and
sbbl
in
mov
mov
jo
xchg
mov
scas
bound
pop
pop
jns
cs
push
xor
shlb
xchg
adc
dec
xchg
mov
mov
and
xchg
addr16
fdivl
adc
gs
mov
cmp
mov
add
mov
int3
lret
xchg
or
aaa
hlt
shll
pop
scas
stos
pop
push
and
or
outsb
ja
bound
scas
aam
iret
into
jecxz
lahf
cmpb
inc
push
outsl
rcll
pop
xchg
cmp
add
cmp
faddl
jecxz
and
out
into
fs
inc
jg
dec
pop
daa
ret
mov
push
cmpsl
ror
cmpsb
aaa
outsl
push
push
dec
mov
cltd
add
mov
shll
dec
jbe
pop
cmp
data16
nop
das
sub
les
pop
lea
push
daa
push
dec
pop
xchg
lods
xlat
lock
xor
out
das
ja
scas
int3
cmp
scas
pop
mov
jle
dec
xchg
cmpsb
mov
cld
das
outsl
fisubrl
fidivs
and
ret
pop
and
ss
ret
cli
dec
and
jg
pop
jle
cmpsl
inc
mov
into
ret
stos
sub
push
pop
inc
scas
and
data16
xchg
clc
pop
data16
push
into
pop
xchg
mov
push
mov
fisubrs
cmpsb
dec
icebp
cli
push
repnz
and
inc
add
jl
call
push
jbe
dec
fsubl
or
mov
js
xchg
push
xchg
loop
iretw
ds
aaa
imul
ds
jg
pop
xchg
leave
aaa
out
test
push
mov
pop
daa
push
in
leave
push
lahf
and
iret
or
sbb
das
mov
mov
outsb
push
testl
sub
fadds
mov
push
inc
repz
jmp
flds
dec
xor
scas
shll
xchg
jbe
test
rcrb
aaa
cmpsb
mov
pop
and
jmp
dec
scas
leave
cmp
and
xchg
pextrw
mov
mov
jbe
pop
xlat
adc
outsl
leave
push
and
out
mov
push
iret
in
xchg
sbb
iret
dec
ret
cmp
dec
pop
les
xchg
fbstp
fistpll
in
outsl
mov
adc
xor
idivb
adc
mov
xadd
cs
ja
aas
pushf
pop
xchg
ret
ja
mov
add
shll
insl
pop
icebp
sbb
daa
aas
lea
sub
insb
aaa
mov
pusha
mov
lea
xchg
pop
addr16
mov
fstpl
push
pushw
inc
movsl
dec
pop
jle
dec
aaa
outsb
mov
shlb
inc
ja
push
inc
pop
and
andl
movl
rcr
dec
push
pop
cmp
inc
push
jg
xlat
in
inc
pop
jo,pn
sub
test
nop
dec
inc
mov
xchg
sahf
into
mov
cmpsl
iret
sbb
xor
outsl
add
jg
dec
addr16
sarl
cmp
mov
inc
mov
jl
push
and
pop
xchg
pop
dec
aas
mov
mov
lret
xchg
mov
les
test
mov
or
popf
pop
push
in
and
pop
xor
aas
jg
dec
cmpsb
in
xlat
inc
mov
add
push
pop
xchg
rcrb
sub
jl
into
xor
int3
push
stc
pop
inc
mov
aaa
and
stos
pushf
push
into
jmp
jo
ss
out
mov
push
dec
push
or
xchg
out
ja
push
sub
int3
fisttpl
jmp
dec
stos
idivl
sahf
inc
ss
xlat
pop
ds
pop
inc
dec
mov
push
xchg
fcmovnb
jle
loopne
js
add
iret
dec
mov
daa
pop
jle
cwtl
out
pushw
aaa
pop
push
pop
add
sub
ficomps
addb
mov
sub
cmp
xchg
flds
sbb
iretw
push
mov
inc
lock
fimuls
stos
setge
test
and
test
or
adcl
mov
inc
xlat
xchg
test
dec
add
inc
das
mov
sub
loope
cs
pusha
inc
push
push
xchg
cmp
pop
fsubl
inc
xchg
mov
outsb
push
xchg
sahf
inc
leave
and
lods
and
out
push
and
es
xchg
pop
jle
pop
jno
xchg
ss
xor
pusha
push
pop
pop
xor
cs
dec
lods
mov
jbe
xor
imul
fsubp
fstps
xor
in
ror
push
fucomip
xchg
mov
scas
movsb
aaa
aas
jae
scas
pop
outsl
es
xchg
push
inc
pop
movl
pop
aaa
jns
jl
sbb
test
pusha
out
out
mov
sbb
inc
sub
push
lret
movsb
es
xchg
aaa
fucomp
ds
push
jecxz
mov
or
into
cmpsl
mov
fisttps
push
or
ja
sahf
imul
clc
test
ja
inc
testl
ljmp
pop
daa
push
mov
and
pop
push
dec
jnp
mul
pop
iret
ja
cmp
cmpsl
xchg
cmp
mov
shl
mov
nop
cmpsl
cs
xor
adc
mov
rcrl
into
jb
jp
xchg
ficoml
addr16
out
enter
into
xchg
push
and
pusha
outsl
push
jno
push
push
leave
mov
rcll
sarl
call
mov
and
lahf
sbb
sub
mov
xchg
popf
mov
adc
into
mov
in
ja
pop
daa
and
xchg
push
push
vpmacssdd
pop
loopne
mov
cli
jno
push
add
mov
int
jo
jbe
fnstsw
push
dec
fdivrs
push
mov
mov
jecxz
dec
mov
push
stc
or
xlat
jg
pop
lods
mov
pop
push
mov
fs
inc
jle
flds
scas
call
es
push
xchg
mov
sbb
mulb
mov
mov
mov
push
scas
inc
mov
push
push
scas
pop
das
xchg
mov
addr16
pop
xchg
inc
mov
cmpsb
iret
push
xchg
vpaddusw
shlb
push
ret
scas
ret
arpl
dec
popl
pop
push
movsb
jmp
daa
xor
push
cmpsl
cmp
xchg
mov
xchg
push
push
pop
xchg
jge
rcrl
mov
push
imul
sahf
aaa
jp
pushf
and
scas
shlb
shrb
pop
dec
sbbb
jg
cs
dec
nop
mov
lds
and
daa
sub
mov
into
push
cmpsl
cs
ja
daa
in
pop
xchg
push
dec
cld
out
das
scas
sub
xchg
daa
xor
adc
push
mov
imul
test
ds
and
lds
push
scas
mov
outsb
popf
insb
data16
inc
pop
gs
ss
mov
iret
xchg
jne
pop
push
jbe
cs
xlat
adc
scas
jg
loope
dec
xchg
push
daa
jbe
in
out
ss
cmpsl
pop
in
call
pusha
sarl
cmpsb
pop
cs
aam
add
sbb
ds
pop
addr16
push
call
jo
das
jecxz
push
inc
and
imull
and
adc
jo
inc
outsb
in
repnz
lock
jle
cmpsl
dec
out
into
out
sub
jmp
push
inc
mov
xchg
ss
sub
iret
gs
nop
ficomps
push
cmp
inc
push
scas
and
js
pop
xchg
rol
push
mov
push
outsl
push
pop
xchg
into
cli
leave
mov
sarl
mov
stos
pop
jns
cld
mov
ss
add
std
xchg
cmp
das
daa
xlat
sbb
jecxz
pop
pusha
dec
xchg
pop
pop
ror
dec
lret
xchg
rep
sub
sub
add
shlb
repz
aam
sub
and
adc
aam
inc
pop
cmpsw
iret
pop
cmpsl
mov
daa
adc
xlat
cmp
xchg
scas
push
or
icebp
push
fidivrs
push
int
sahf
push
pop
inc
mov
jbe
push
inc
in
test
je
mov
and
roll
mov
aam
lds
jg
aas
loop
push
mov
push
xchg
pusha
dec
scas
xchg
dec
std
daa
incb
divl
xchg
xor
pop
sahf
sub
adc
and
cmpsl
addr16
mov
mov
nop
lahf
clc
int
mov
gs
stos
adc
xchg
mov
int
push
gs
inc
scas
addb
mov
push
leave
std
jbe
out
fistpll
mov
dec
ja
jecxz
cmpsl
outsl
aas
cmp
or
lahf
loope
pop
push
daa
outsb
xorl
jmp
js
cmp
movsl
mov
push
das
inc
push
xchg
mov
jle
lret
add
xchg
ret
add
lretw
or
ss
aas
les
or
ss
mov
xor
xchg
fldcw
push
mov
mov
loope
stc
es
fbld
pop
repnz
xor
lea
scas
ss
jg
dec
cli
loop
addr16
and
pop
out
jbe
enter
xor
fistpl
std
popf
call
fmull
fdivrp
push
sahf
mov
sbb
imul
inc
gs
push
pusha
xchg
cmpsl
sub
mov
scas
mov
scas
sub
sub
jbe
outsl
aaa
leave
ret
push
ds
stos
dec
dec
mov
ss
push
inc
xchg
dec
dec
cmp
jbe
mov
test
out
jge
mov
in
cmpsl
push
cmc
movsl
enter
mov
cmp
ficomps
scas
jl
pushf
pusha
jns
pop
in
cmpsl
and
xor
cs
mov
nop
pop
scas
mov
scas
fidivrl
outsl
in
add
push
enter
pop
mov
fistpl
cwtl
push
sahf
sub
or
push
stos
sahf
cs
gs
xchg
nop
inc
and
sub
jbe
pusha
out
mov
sub
ljmp
sahf
iret
cmp
imul
xchg
mov
mov
in
daa
cs
push
cmpsl
filds
sub
add
sub
jno
cmpsl
test
nop
sbb
sub
outsl
sbb
cmp
mov
lds
and
pop
subb
push
push
mov
add
jb
sti
pop
outsl
ja
faddp
scas
adc
mov
xchg
xchg
aas
in
aaa
cmpsb
and
push
xor
pop
push
jbe
sbb
lods
push
push
xchg
adc
mov
jo
sub
frstor
push
iret
iretw
popf
pop
insb
call
outsb
es
inc
xlat
cld
addr16
fists
pop
inc
call
mov
and
gs
dec
daa
add
shrl
scas
adc
outsl
daa
fidivrs
and
inc
stos
je
push
ss
nop
mov
mov
and
pop
inc
lahf
and
sub
aas
daa
push
pop
rorb
mov
in
jmp
insb
mov
push
push
sahf
mov
stos
rcrl
xchg
cmp
mov
dec
mov
lock
or
lahf
push
mov
jg
dec
xlat
mov
es
xchg
enter
inc
scas
sub
sub
push
push
push
daa
pop
scas
iret
sahf
imul
jp
int
push
or
jg
iret
push
inc
roll
xchg
pop
push
push
ss
and
sub
ffreep
mov
push
xlat
rcll
sub
hlt
push
push
aas
push
adc
jge
ja
inc
xchg
jns
pop
adc
rorl
xlat
pop
sti
lret
scas
cmp
ss
subl
adc
jnp
nop
int
jo
push
lret
inc
push
mov
lahf
mov
push
daa
addb
pop
pop
add
inc
addb
icebp
inc
jo
cpuid
xor
inc
jo
or
ja
into
mov
pop
adc
jle
pop
pop
scas
push
xor
mov
jg
xchg
xchg
cmp
xchg
mov
cmpsl
leave
xchg
mov
sbb
idivb
jle
add
xchg
push
and
xchg
dec
scas
cmp
std
lds
fs
nop
cmp
adc
call
dec
pop
cmp
cs
cmpsb
scas
sar
shlb
xchg
test
mov
jecxz
xchg
pop
fimuls
ret
mov
in
and
xchg
xchg
stos
push
mov
jg
cld
inc
push
addr16
test
sti
cmp
dec
pop
inc
ljmp
aad
jo
adc
frstor
jae
and
fcom
push
flds
loope
aaa
cmpsl
ficomps
call
adc
leave
cmp
in
es
fildl
scas
sbb
scas
in
stc
out
jbe
fnstsw
push
pop
call
inc
mov
xlat
shlb
in
xor
mov
fcmovbe
pop
iret
aam
stos
xchg
inc
into
mov
out
rcll
fistpll
fldt
scas
outsb
lds
rcl
loop
popf
test
aaa
xlat
roll
xorl
and
mov
xor
pop
mov
cmpsl
cld
jnp
jl
les
outsb
add
adc
mov
data16
cltd
mov
inc
cmp
mov
inc
push
sbb
lods
lods
push
out
mov
pop
lds
cld
nop
aad
das
pop
scas
mov
mov
sub
cli
sarb
shr
es
mov
push
fdivl
into
fldenv
jg
into
enter
cs
dec
inc
cmpsb
aas
cmpsl
pop
xchg
fs
jbe
inc
std
bound
imul
push
push
xor
repz
inc
mov
mov
xchg
loope
inc
sub
mov
aaa
push
outsb
mov
aam
fcomip
fists
daa
jbe
and
ja
sub
mov
xchg
movsb
mov
insb
jns
es
test
movsb
daa
js
outsl
iret
roll
out
loop
addr16
dec
lock
pusha
pop
sahf
jle
call
mov
lock
xchg
fisubs
pusha
sti
add
aaa
call
push
jge
mov
lock
nop
test
adc
fldenv
daa
scas
fnstenv
aaa
pusha
jecxz
cmp
push
stos
testl
add
push
mov
ret
lahf
mov
daa
pop
and
dec
pop
and
into
leave
sbb
mov
mov
pop
pop
add
ljmp
jg
mov
ja
jne
in
mov
cmp
arpl
cmpsl
outsl
lods
xor
imul
push
je
jno
daa
and
cmc
xchg
pop
sub
ret
vmulss
leave
outsl
pusha
test
clc
xor
enter
jmp
mov
sbb
outsb
mov
and
inc
sbb
inc
lahf
neg
xor
es
jle
mov
inc
xchg
xor
mov
push
outsb
sub
add
fisubrl
add
lea
mov
jno
lea
and
pop
cmpsl
xor
dec
xchg
call
inc
push
xchg
shlb
mov
sarl
sub
add
dec
fimuls
add
push
jne
fldenv
adc
pop
dec
inc
mov
std
bound
pop
in
xchg
and
pand
dec
repnz
dec
in
mov
cs
stc
aaa
mov
inc
mov
lock
xchg
xlat
cmp
sub
push
in
aas
ja
pop
and
sahf
pusha
sub
repnz
fldcw
orb
xlat
cmpsb
das
pop
ds
mov
pop
shlb
mov
sub
in
push
jo
pop
aaa
jbe
and
movl
xor
aas
fnstenv
cs
push
aas
rorb
xchg
nop
pop
cmpsb
sahf
push
in
iret
inc
pop
out
push
subb
daa
rorb
jno
xchg
popf
pop
leave
dec
dec
lods
enter
mulb
dec
mov
fs
ds
enter
add
aaa
xchg
jecxz
push
lahf
pop
mov
inc
push
inc
aam
rol
sub
shll
nop
loopne
es
xchg
je
fwait
lods
xchg
bound
iret
rcrl
xchg
dec
lahf
xor
movb
jg
data16
enter
sahf
push
xchg
xchg
dec
daa
aaa
scas
jne
pop
sub
leave
stc
das
lds
add
ss
out
and
push
out
jle
push
jne
stc
push
fs
cmpsl
ds
pcmpgtb
mov
enter
xchg
outsb
push
cmpsb
lock
scas
push
mov
and
icebp
jp
xchg
pop
and
add
cmpsb
xchg
aad
scas
inc
call
xchg
sub
xchg
xchg
adc
lds
and
ss
cmp
cld
pop
pop
nop
cmp
mov
cmpsb
mov
fiadds
xchg
aaa
jmp
mov
data16
pop
and
scas
add
fs
jmp
repz
fldcw
push
mov
test
pop
iret
adc
mov
in
mov
das
xchg
and
xchg
or
subl
fidivrs
mov
xor
das
xor
scas
mov
into
xchg
mov
popa
mov
pop
xlat
mov
push
xchg
pushf
test
imul
mov
cmpsl
fsubrs
das
mov
aaa
ffreep
mov
daa
sub
enterw
xchg
xor
pusha
aam
inc
push
jo
adc
ret
out
pop
lahf
xor
adcb
aas
fldl
ficoms
fiadds
xchg
xchg
pop
xchg
fisttps
mov
in
xor
das
and
add
dec
inc
xchg
add
mov
loope
das
xchg
push
jbe
call
loopne
push
mov
pop
xlat
cmp
aas
addr16
rclb
jb
inc
xor
pop
push
sub
mov
cld
xchg
mov
sub
and
sti
push
insb
or
cmp
xor
das
addr16
out
fbld
ds
xchg
cmp
xchg
negl
mov
and
mov
mov
adc
lret
in
dec
dec
daa
roll
and
push
push
scas
cmp
cmp
jnp
into
das
fidivs
inc
iret
push
mov
rcrb
dec
fbld
mov
outsl
sbb
nop
call
mov
and
cmp
je
ret
pop
or
xchg
out
xlat
aaa
push
fs
fs
or
test
int3
inc
or
cwtl
push
add
cmp
outsl
outsb
fisubs
das
inc
fcompl
data16
mov
xchg
mov
in
xlat
lahf
cmpsb
sub
and
cmpsl
fistps
dec
cmpsl
iret
dec
fdivp
and
addr16
les
stos
fidivrs
xlat
sahf
xchg
in
mov
ja
dec
das
sti
inc
sahf
lods
xor
sbb
push
cmp
movl
insb
xlat
jecxz
ss
push
xchg
negl
jno
sub
sbb
aas
ss
lcall
inc
adc
jbe
cs
arpl
xchg
xchg
cwtl
fistl
ds
ja
lahf
cmpsl
ljmp
push
das
pusha
sbb
jbe
ss
pop
and
daa
in
push
outsl
push
xchg
jb
shrl
shl
pusha
add
sti
dec
repnz
test
push
inc
and
xlat
outsl
mov
mov
daa
lods
push
sahf
lds
aaa
fiadds
inc
addr16
dec
pop
adc
add
inc
dec
cmpb
outsb
aaa
push
mov
push
pop
fistpl
bound
adc
dec
addr16
daa
pop
maxps
pusha
loopne
xor
ss
mov
sub
lock
and
mov
fists
loop
pop
pusha
pop
outsb
pop
cmp
mov
cmpsl
outsl
not
dec
sbb
pop
xor
jns
into
sti
pop
push
loope
cmpsb
xchg
inc
inc
daa
scas
xchg
push
or
sub
cmp
inc
in
lahf
inc
mov
cmp
nop
jne
bnd
das
enter
jl
xchg
mov
aaa
fprem
mov
mov
sub
mov
movd
es
or
cmp
push
cs
in
nop
pusha
inc
xchg
xor
mov
sub
push
lahf
cmpsl
test
es
ja
ficomps
outsl
push
xor
inc
outsb
sarl
dec
ss
or
mov
sub
out
xchg
scas
xchg
int
xlat
sahf
and
dec
push
jno
aaa
push
out
inc
pusha
enter
cmpsl
data16
sbbl
add
ljmp
sbb
mov
loope
lahf
outsl
pop
sahf
cmp
inc
es
scas
fdivp
cs
pop
and
xchg
in
pusha
xchg
stos
cmc
shrl
mov
pop
mov
rcrl
subb
pop
jae
inc
rcll
jle
cmp
cmp
out
pop
cmp
pop
shrb
dec
or
jl
sub
sbb
inc
sahf
data16
rolb
add
jb
add
imul
add
iret
outsl
aaa
into
into
pop
sub
cltd
sbb
and
push
push
out
inc
cmp
jge
pop
out
je
xor
mov
add
icebp
jle
xlat
nop
sub
pop
pushf
cmp
pop
arpl
and
mov
notb
pop
push
cmp
aad
ja
std
fstpl
mov
push
addl
pop
cmpsb
add
push
cmpsb
mov
insl
mov
sub
cmpsb
add
das
sbbb
negb
push
dec
add
pushf
faddl
jnp
xchg
negb
xchg
cmpsb
add
inc
inc
add
lcall
dec
push
add
mov
dec
bound
adc
out
addr16
lods
push
iret
pop
out
bound
cmp
or
aaa
xchg
fisttps
pusha
in
pop
inc
jmp
dec
jo
iret
addr16
push
cmp
pop
out
fwait
cld
fnstenv
jge
test
inc
jle
js
sbb
gs
adc
mov
xchg
cwtl
in
inc
cmpsl
jbe
sbb
and
xlat
jne
push
jbe
or
gs
xchg
pop
push
xchg
dec
popf
lret
insb
push
fnstcw
inc
or
aaa
adc
pusha
fmulp
daa
fistps
mov
outsb
push
pop
lcall
dec
in
jg
arpl
fistpll
jno
xchg
gs
mov
daa
mov
enter
clc
jmp
movsb
daa
push
mov
lea
in
sahf
daa
mov
fadds
xchg
push
stos
aaa
scas
das
or
shrl
in
jns
push
aaa
iret
clc
inc
out
cmpsl
and
pop
cmpsl
pop
push
pop
jbe
in
jb
jns
and
outsl
lock
mov
icebp
sub
dec
adc
shlw
push
outsl
xchg
xlat
adc
ss
into
iret
xchg
std
in
stc
ja
aaa
and
outsb
cmp
push
dec
in
es
daa
ds
in
sub
xlat
xchg
or
scas
and
iret
push
leave
cmpsb
sub
push
fisttpll
dec
jbe
aad
scas
cmpsl
out
xchg
ss
mov
mov
xchg
push
cs
jle
push
adc
repnz
cmpsl
ficoms
jg
or
dec
push
mov
loopne
test
jno
daa
inc
rolb
push
mov
nop
pop
mov
mov
addr16
mov
es
fisubrs
inc
ja
jne
rep
jns
push
pop
loopne
in
ja
jbe
mov
sbb
xor
push
pop
push
adc
mov
outsl
icebp
nop
pop
scas
pop
das
or
or
jbe
add
add
das
shr
inc
add
imul
mov
mov
data16
mov
stos
mov
das
jle
jg
mov
lahf
idivl
fsubrs
fcmovnu
scas
xor
ret
cmpsb
jmp
mov
push
lahf
dec
pop
or
mov
rorb
das
ds
clc
iret
jg
scas
sbb
out
mov
cmpsb
xor
mov
fdivl
mov
lods
enter
or
ficomps
je
xchg
pop
mov
sbb
scas
xchg
mov
ja
hlt
xchg
add
xor
xchg
push
jle
mov
xchg
pop
xchg
sub
hlt
out
xor
cmpsl
mov
nop
xor
mov
jo
sub
in
es
daa
into
cmpsl
and
popf
outsl
scas
pop
das
jns
mov
pop
pop
pop
cmp
add
jge
lds
outsb
mov
cmpsl
pop
fdivrp
mov
mov
cld
call
mov
pop
fisubl
mov
dec
cmpsb
push
sahf
outsl
ja
iret
cld
stos
or
sahf
mov
dec
pop
and
xchg
fimuls
pop
jae
out
ds
out
inc
iret
xor
outsl
cmp
std
mov
leave
or
adc
out
mov
mov
into
test
dec
lahf
mov
cli
jns
xchg
mov
mov
jg
xlat
and
lahf
cmpsl
xchg
ja
xchg
jecxz
dec
lahf
fs
outsb
xchg
xchg
cmpb
sbb
out
fidivrl
shr
jg
mov
mov
pop
mov
aad
outsb
inc
pop
nop
test
mov
stos
mov
pop
jno
inc
in
push
ss
sbbl
xor
dec
call
xlat
aaa
out
dec
outsb
jle
pop
inc
cs
xchg
xor
xchg
and
sbb
data16
sahf
out
xchg
xchg
std
loope
jle
mov
stos
fwait
pusha
out
mov
lahf
mov
add
rcrl
lret
mov
pop
out
cmpsw
mov
xchg
das
jg
inc
int
lahf
cmpsb
inc
fucom
pop
add
js
aas
sbb
jle
mov
outsl
jb
inc
dec
popf
xor
ror
mov
fidivrs
pop
movsb
xchg
stc
mov
pop
mov
in
mov
jbe
push
loop
ds
dec
cmpsb
iret
aaa
in
pusha
pop
icebp
into
inc
mov
jbe
bound
xchg
pop
ss
int3
movsl
inc
mov
ret
xchg
frstor
cs
outsb
jns
pop
rorl
xchg
call
sahf
xor
jg
xor
ficoms
pop
push
ja
inc
pop
push
cs
test
gs
mov
in
fmul
outsb
mov
scas
sub
pop
xchg
ret
sahf
add
fisubs
jle
out
xchg
das
pop
mov
cmp
filds
xor
cs
ficoms
into
jp
mov
hlt
pusha
test
sbb
scas
aad
aaa
jbe
jecxz
xor
scas
jg
inc
ljmp
stc
mov
dec
pop
daa
in
adc
mov
rorb
sbb
and
lock
pop
dec
movsb
pop
push
in
push
sub
push
inc
mov
inc
cmp
es
les
dec
mov
dec
push
pop
push
mov
jecxz
cmpsb
inc
jmp
or
xsavec
cmp
popl
es
ja
dec
push
aas
cmp
lahf
andb
daa
movsb
push
pop
sbb
inc
and
flds
sti
popf
aam
cmp
adc
leave
inc
or
addl
push
dec
and
and
add
dec
and
push
pusha
insw
and
push
daa
loop
ja
aaa
adc
gs
dec
inc
cmp
jg
push
frstor
inc
nop
inc
in
es
cmp
mov
ja
fnstenv
push
dec
addr16
xlat
and
xlat
les
inc
repnz
subb
pop
jg
xor
pop
mov
xlat
scas
pusha
push
cmpsb
add
icebp
and
xchg
scas
mov
and
in
aas
aaa
fs
leave
push
inc
pop
xchg
arpl
addr16
mov
xchg
jbe
dec
inc
and
enter
sahf
mov
dec
push
mov
cwtl
bound
sub
xchg
mov
mov
mov
movaps
cmpsb
push
push
pop
push
jb
imulb
dec
repz
scas
push
sub
and
ss
xchg
push
pop
jecxz
push
outsb
add
push
inc
out
pushl
sub
xchg
ljmp
nop
insb
dec
jl
stc
iret
das
jl
ss
mov
adc
push
lret
push
iret
jo
out
pusha
iret
sub
leave
inc
es
xchg
scas
incl
xchg
inc
fs
pop
ja
test
jg
push
xor
in
outsl
dec
fisubs
sub
into
push
cmpsb
xchg
mov
mov
sbb
sub
ss
push
jne
fisubrs
data16
inc
pop
cli
scas
cli
outsb
clc
leave
add
daa
int
fisubrs
cmp
add
and
cld
bound
xchg
mov
aaa
dec
mov
push
pop
mov
pop
fdivrl
add
pop
data16
das
pop
fists
fistps
push
daa
outsb
fnstsw
jbe
and
pushf
mov
add
xor
jns
fcmovne
dec
nop
pop
add
ss
mov
jl
ss
dec
cmp
pop
sub
sub
lahf
fucomp
mov
sbb
aaa
xchg
ds
jbe
cmpsl
xor
pushf
inc
out
ficomps
cs
mov
mov
cmpsb
data16
push
push
push
jbe
aaa
dec
fildll
fcomi
outsl
ds
pop
xchg
push
das
dec
jg
ja
call
and
je
push
mov
xchg
out
fbld
mov
rcrl
fcompl
shll
in
iret
mov
jg
xlat
and
sbb
pop
push
data16
or
data16
ja
shl
dec
xchg
fcmovnbe
fbstp
test
xchg
inc
mov
loop
scas
push
ss
mov
clc
mov
lds
scas
inc
or
push
sbb
mov
sbb
push
mov
std
arpl
es
mov
fwait
push
outsb
or
inc
stc
int
jle
stos
mov
test
outsb
out
or
and
js
jo
mov
dec
dec
icebp
lahf
insl
mov
mov
cs
cmc
aad
aaa
pop
inc
xchg
test
test
out
es
push
lretw
bound
xchg
pop
pop
and
jp
xchg
into
xchg
add
divl
ds
outsl
push
pop
sub
ja
sahf
sarl
pop
pop
or
lcall
outsb
dec
add
mov
inc
rcrb
push
cmp
mov
xlat
cmc
in
ficoms
addl
lea
ficoms
or
pop
test
fld
or
push
cmp
dec
xchg
pop
xchg
ret
and
addr16
xor
and
sub
rclw
xchg
sahf
xchg
cmpsb
xorb
adc
mov
out
xchg
push
cmpsl
daa
xor
ss
ja
jnp
jg
push
inc
sti
mov
add
ds
popl
out
daa
cs
cmpsl
pop
js
sarl
push
sub
xor
aad
addr16
fiadds
or
sub
sahf
mov
add
xchg
addr16
pop
sarl
mov
mov
add
xlat
cmpsb
mov
cmp
fsubs
scas
ret
fldl
loopne
push
leave
push
or
xlat
mull
and
adc
pop
ja
add
in
push
cmp
lahf
das
repnz
xlat
mov
addb
mov
dec
sub
lods
mov
sahf
int
into
outsb
push
mov
jg
mov
call
test
pop
cmpsb
dec
inc
stc
dec
jg
mov
adc
cmpsl
lahf
pop
popf
in
hlt
push
ds
movsb
jg
jle
shll
xchg
xchg
cs
mov
pop
das
pop
dec
test
dec
outsl
mov
aam
negl
std
aas
cmpsb
in
jo
push
ja
xlat
mov
ficomps
fidivs
xor
xor
movl
jmp
jg
xchg
leave
aam
inc
rorl
popa
push
mov
iret
movsb
xlat
fiadds
and
sub
lods
jg
push
push
loopne
loope
push
sahf
dec
dec
into
and
dec
es
lods
dec
cmpsb
pusha
daa
lods
lahf
dec
xor
lret
mov
mov
add
inc
repz
daa
fldcw
sahf
das
rol
out
in
pop
push
fdivl
sarl
dec
xchg
stos
cmpsb
lods
enter
in
jo
data16
xchg
and
fbld
repz
pop
nop
xchg
or
fimuls
jp
cwtl
xorb
add
push
gs
insl
cmpsl
xchg
clc
addr16
addr16
aad
lret
fcmovnu
outsw
loopne
out
mov
jg
xchg
xor
push
fs
cmpsl
mov
xchg
xchg
scas
or
lods
push
insl
mov
pop
jecxz
inc
push
mov
leave
jns
ds
dec
xchg
or
adc
pop
out
es
call
fimuls
bound
jg
mov
push
pop
rcr
push
push
fistps
es
pop
push
test
inc
iret
add
inc
stc
aaa
and
push
fsubr
inc
shrl
push
mov
cmp
rcrl
pop
jbe
cs
mov
daa
xchg
cmc
xorb
dec
imul
push
adc
imul
pop
xor
ret
test
fmuls
pop
cmpsl
cmpsb
xchg
mov
dec
gs
mov
push
pop
cs
xchg
jle
xchg
xchg
mov
jns
push
ss
dec
mov
pop
push
clc
fsubrl
out
int
pop
repz
sti
mov
mov
cmpsl
and
fcmovb
cmpsl
mov
or
sahf
push
jle
xchg
lahf
das
jne
mov
mov
pop
pop
lcall
testl
inc
xor
fwait
out
sahf
inc
loope
out
pop
xchg
mov
inc
in
push
inc
push
jbe
int
xchg
jecxz
xchg
fsubl
adc
jg
xchg
sub
dec
xchg
and
push
pusha
es
cmpsb
movsb
inc
gs
lahf
mov
dec
jne
cmpsl
lahf
mov
jmp
sub
xchg
mov
mov
daa
mov
in
dec
nop
in
xchg
add
jle
es
mov
aad
pop
xchg
js
jmp
dec
outsl
iret
or
popf
xor
cmp
es
aad
xlat
add
mov
push
fs
xchg
leave
pushf
das
and
or
dec
mov
ret
fbld
cmpsl
adc
push
cwtl
sarl
pop
fsubrp
scas
daa
iret
ss
fs
inc
das
stos
inc
pop
mov
xchg
out
mov
aam
into
pop
iret
push
and
sahf
push
cmp
ljmp
ds
roll
addb
pop
pusha
mov
xlat
popa
lret
cmp
into
test
pop
jbe
sbb
into
test
sbb
mov
ret
cmc
int
pop
xor
xor
xor
jo
jno
mov
xlat
pop
ss
sbb
lds
scas
adc
jg
ss
in
sub
cmp
ja
xchg
faddl
in
cmp
dec
ja
mov
aam
dec
ds
push
sub
stos
xchg
mov
pusha
scas
jbe
xchg
ret
pop
cmpsb
sbb
push
gs
orb
mov
sub
mov
dec
push
popf
xor
push
mov
mov
pop
push
mov
mov
push
lret
add
dec
les
testb
orb
cmc
or
inc
icebp
add
jno
xchg
pop
push
push
das
mov
test
inc
movsl
stos
pop
add
cmp
pop
dec
xlat
cmp
pop
inc
xchg
inc
rcr
in
cmpsb
aas
jmp
xorl
stc
stos
pop
pop
jns
dec
insl
push
cmc
test
sbbb
inc
or
daa
inc
out
pop
out
xchg
leave
xlat
xchg
addr16
arpl
cmp
pop
es
push
cmp
lods
movsb
dec
push
xchg
jg
hlt
add
nop
ds
aaa
mov
and
inc
pop
xchg
dec
es
dec
nop
inc
push
or
dec
insl
jmp
jo
ss
jo
clc
pusha
pop
pop
dec
pop
mov
add
and
iret
xor
mov
pop
stos
aas
into
xchg
sub
inc
jg
or
adc
fidivs
adc
add
push
sub
pop
mov
mov
pop
dec
aas
jg
in
inc
mov
xchg
ret
jmp
inc
cmp
pop
xor
test
push
cmp
nop
imul
iret
jle
cs
mov
imul
inc
xor
shl
in
popw
stos
shrb
data16
xchg
flds
inc
push
iret
out
cs
dec
mov
out
daa
and
scas
add
sub
dec
mov
rclb
lods
xchg
xchg
in
nop
fists
iret
es
leave
ss
lods
lcall
into
push
repnz
mov
sarb
nop
mov
ss
stc
xor
mov
insl
outsb
pop
push
stc
mov
es
iret
repz
cli
inc
pop
xchg
pop
loope
pop
pop
push
pop
mov
jo
shlb
xlat
addr16
and
xchg
add
mov
mov
pop
ret
nop
sbb
dec
xchg
mov
xchg
dec
cli
push
pop
leave
add
ret
and
daa
shll
mov
cld
movsb
cmp
xor
or
mov
sub
insl
sbb
push
sbb
loop
cmpsl
scas
mov
dec
into
dec
push
icebp
pop
ret
jge
push
fs
cmp
out
jne
and
icebp
jle
pop
xchg
inc
fsubp
lds
inc
jbe
js
daa
ljmp
ret
push
xchg
jmp
xchg
pop
xlat
sahf
jle
inc
daa
xchg
out
cs
jae
insl
lock
xchg
push
push
xor
aam
xchg
jns,pn
daa
xchg
xchg
movsb
test
stos
adc
nop
push
loope
mov
ja
insb
les
xor
outsb
and
push
mov
push
lds
xchg
pusha
repnz
inc
rcr
es
pop
shr
jno
incl
dec
mov
adc
xlat
mov
into
mov
mov
pop
mov
es
sub
dec
xor
daa
jge
pushfw
lods
mov
pop
pop
push
xlat
nop
rol
movsl
cli
xchg
pop
xchg
cltd
sbb
cmpsb
nop
dec
sub
push
push
cmpsl
ret
int
pop
mov
dec
cmpsb
push
inc
pop
xchg
shlb
cmpsb
leave
xor
in
outsb
xrelease
pop
loope
mov
cwtl
iret
outsl
mov
clc
xchg
mov
sbbl
push
mov
jp
rcrl
and
scas
sahf
cmpsl
outsl
in
cmpsb
pop
int3
lds
aaa
xlat
fldcw
in
fldenv
pop
shl
rorb
jo
and
sbb
loopne
out
mov
scas
mov
ja
ret
gs
aam
int
push
xor
xchg
bnd
jmp
dec
mov
pop
outsb
mov
jns
push
fidivrl
dec
inc
addr16
xor
es
pop
ja
inc
stc
pop
aas
scas
outsb
arpl
pop
sahf
add
xchg
jl
scas
daa
push
lcall
subb
push
pop
and
or
sbb
lds
push
addr16
pop
loop
mov
das
inc
dec
pop
ds
fiadds
adc
cmpsb
push
xchg
pop
popw
pop
add
jo
sahf
in
fs
addr16
add
xchg
and
shrb
nop
aaa
loope
das
mov
loopne
andl
adc
jne
mov
jb
cs
and
sub
xchg
push
cmp
ja
ss
mov
adc
cmp
mov
sub
movb
xchg
int
cmp
inc
cmpsb
loopne
jno
xchg
pusha
dec
mov
daa
fs
push
into
outsb
lret
test
pop
push
mov
mov
cmpsb
data16
push
jno
idiv
inc
push
xchg
aaa
and
xor
push
sbb
mov
cmpsb
xchg
sbb
xor
pop
mov
out
in
roll
das
pop
push
loopne
jb
test
jbe
push
shll
xor
mov
dec
std
scas
call
xchg
das
cmpsl
ret
xchg
pop
dec
lahf
aad
outsb
sti
lret
testl
push
lods
ljmp
scas
icebp
lahf
icebp
mov
ss
jb
daa
pop
jmp
cli
jp
pop
jns
mov
mov
or
ja
mov
std
daa
aaa
inc
jle
xchg
sub
fstps
push
in
fimuls
cs
cmp
xchg
mov
lahf
loope
xor
jae
aam
inc
adcb
push
push
leave
jbe
dec
lds
pushf
out
inc
outsb
ficomps
xor
cmp
cltd
scas
out
rol
pop
lods
sbb
and
imul
fidivrs
xchg
pop
jo
stos
push
pop
popf
aad
nop
push
filds
dec
cmpsl
push
cld
mov
push
xlat
mov
shrb
iret
cmp
push
and
ds
lcall
outsl
jecxz
aas
xor
xor
lar
imul
sahf
loop
and
push
mov
scas
mov
pop
stos
sti
cltd
mov
push
fnsave
cs
jmp
dec
test
test
outsb
mov
push
ret
pop
cmp
and
stc
mov
jno
daa
fildll
aaa
dec
pop
mov
xchg
imulb
dec
dec
in
inc
xchg
in
xor
jae
sub
push
xchg
mov
inc
adc
addr16
aas
push
aaa
pop
sarl
push
cld
sub
jb
arpl
or
fnsave
aaa
xchg
xchg
jo
jge
push
mov
jmp
ss
fsts
cs
in
pop
jle
jo
cmc
xchg
push
imul
dec
sub
es
and
stos
xor
jmp
xchg
or
jg
push
ret
loopne
movsl
addr16
leave
or
movsb
rorb
cmpsb
bnd
stos
leave
movsl
mov
adc
out
sahf
and
mov
sahf
mov
scas
push
dec
ffreep
orb
mov
dec
stos
jmp
lahf
pop
mov
xchg
leave
in
dec
outsb
outsl
fistpll
gs
gs
lds
aaa
mov
sti
xor
push
aaa
mov
neg
ja
cld
mov
test
inc
add
mov
je
cmpsl
jbe
inc
ficoms
mov
jle
push
xchg
mov
xor
sbb
adc
cmpsb
add
cmpb
in
iret
std
into
jbe
xchg
xchg
shll
cmpl
ds
movsb
filds
jp
xorb
das
in
into
iret
lahf
cs
dec
mov
std
sub
pop
mov
or
fimuls
fisubrl
stos
adc
in
daa
cmpsb
xor
push
push
pop
add
out
data16
mov
or
xchg
dec
cmpsl
gs
pop
mov
xor
push
sbb
xor
test
mov
das
inc
aas
jp
int
jl
std
in
fcmovnu
inc
mov
xchg
out
inc
xor
pop
dec
mov
lahf
idivl
rorl
test
fbld
push
xlat
push
in
fistps
push
fdivrs
into
cwtl
and
shrl
lds
inc
jbe
adc
inc
mov
in
xor
ret
data16
mov
lahf
xchg
cltd
push
aas
mov
add
pop
xchg
mov
mov
add
push
das
jne
dec
je
dec
filds
pop
xlat
lods
dec
shlb
pop
cmp
jmp
jmp
jmp
cmpsl
std
out
inc
enter
mov
push
jg
xor
and
repnz
xchg
fistps
testl
ds
inc
jg
or
std
mov
scas
sahf
les
jmp
cmc
push
push
mov
jge
push
lods
aas
ja
mov
inc
hlt
fs
lret
pop
inc
daa
add
out
inc
scas
nop
daa
fisubs
mov
cmpsl
scas
jne
add
setb
in
push
push
dec
and
into
push
mov
sub
xchg
outsb
jle
or
inc
sub
inc
lds
sub
fisubrs
mov
addr16
into
dec
push
leave
or
fildl
popf
xchg
pop
repz
ss
movsb
xchg
sbb
test
cmc
lods
and
xchg
push
dec
inc
xchg
ja
pop
jbe
test
mov
addr16
out
lahf
jns
xchg
scas
ja
leave
test
and
addr16
jo
daa
cmp
fnsave
ss
xor
pop
addr16
sub
outsl
sub
sar
jecxz
dec
pop
and
out
and
pusha
aaa
out
mov
pop
pop
push
xchg
xchg
sbb
mov
push
ficomps
ss
xchg
sub
outsl
aas
xchg
push
xor
int3
enter
jmp
mov
nop
lret
sbb
dec
mov
sub
mov
cmp
jns
nop
jae
scas
daa
addr16
pop
dec
pop
aad
dec
pop
call
daa
jge
pop
mov
xor
out
inc
lahf
push
cmpsb
aas
mov
pop
aaa
cmp
mov
cmc
movsl
jg
hlt
mov
cmp
mov
nop
push
repnz
jnp
mov
fs
addr16
mov
or
pop
ja
jp
insl
mov
aaa
mov
xchg
lock
cmpsl
pushf
icebp
xchg
fbld
outsb
cmpsb
xchg
inc
js
into
pop
push
fdivrl
jg
aaa
pop
hlt
jbe
xchg
iret
scas
cmp
push
mov
xchg
pop
mov
into
ficoms
aaa
push
mov
lods
xor
push
lcall
repz
cmpsb
mov
enter
pop
leave
loope
aad
aaa
lds
jbe
dec
scas
inc
ret
pop
scas
ss
mov
int3
jns
jg
repz
test
cld
call
popl
lods
loop
outsl
test
mov
cmp
or
cmpsl
pop
xchg
inc
test
cltd
push
dec
repnz
outsl
es
loope
adc
xchg
mov
mov
pop
jg
cmp
cmp
sahf
cmp
fwait
test
mov
xor
stc
dec
mov
pop
sub
fs
xchg
adc
inc
and
pop
push
add
pop
xchg
lea
mov
adc
das
in
pop
data16
imulb
das
je
inc
lcall
sub
pop
xlat
xor
in
mov
xchg
push
pusha
xlat
or
mov
inc
jle
les
fwait
mov
sub
cmpsl
dec
enter
cli
xchg
inc
in
nop
fldcw
mov
mov
pop
ja
push
insl
adc
dec
pop
cmp
in
sti
xchg
pop
and
pop
push
out
scas
push
push
gs
into
outsl
dec
xchg
sub
xchg
push
xor
aaa
ds
out
test
mov
mov
test
mov
scas
cmpsl
daa
outsw
daa
mov
push
lahf
dec
mov
mov
and
cs
jbe
and
cmp
int
scas
mov
lahf
pusha
pusha
mov
pop
pop
push
arpl
push
dec
stc
dec
push
xchg
xor
rcll
add
pop
test
mov
add
jbe
mov
sub
leave
jmp
outsb
mov
lods
or
inc
ja
lahf
or
push
dec
fs
mov
scas
das
push
mov
mov
pop
outsb
mov
ficomps
in
mov
xchg
and
xor
in
ret
nop
in
mov
xchg
iret
pusha
mov
test
lret
rorb
pop
inc
outsl
loope
dec
push
pop
addr16
push
ds
inc
and
push
filds
push
jecxz
xchg
sbb
jle
xchg
aaa
aas
inc
movsb
bnd
mov
stc
ss
dec
and
loope
loopne
dec
imul
xchg
pop
mov
ja
jo
xchg
outsb
flds
aaa
jle
xchg
mov
xchg
xor
clc
dec
sbbb
nop
or
xor
pop
inc
pop
xchg
scas
outsb
ds
push
push
xchg
push
addr16
sbb
mov
xchg
shll
fldenv
xchg
mov
mov
xchg
ja
push
fisubrs
jecxz
xor
dec
es
mov
sahf
push
ss
cmpsl
cmp
mov
cltd
scas
and
movsb
aam
call
pusha
jns
jg
dec
rcrb
out
data16
push
pop
scas
les
push
shll
jns
mov
shrl
pusha
in
dec
ds
xchg
push
xchg
and
mov
pusha
stc
xchg
pop
xchg
fnstcw
into
es
adcb
push
out
xchg
hlt
push
cmp
jg
ja
push
iret
imul
daa
mov
pop
xor
ftst
pop
dec
cmpsl
daa
dec
in
daa
jo
rcrb
add
out
inc
outsl
test
pop
addr16
stos
and
cmc
push
mov
xchg
ss
aad
out
outsl
scas
test
das
int3
stos
add
mov
push
pop
fiadds
icebp
stc
adc
push
repz
mov
push
les
aas
add
inc
das
nop
data16
adc
xlat
insl
sub
out
push
sti
daa
call
in
push
nop
mov
pop
call
clc
iret
mov
ja
lods
jae
inc
mov
mov
adc
fidivs
push
insb
inc
aaa
add
pop
pusha
pop
shr
cvtps2pd
pusha
loope
mov
pop
dec
push
jle
xlat
lahf
mov
push
call
xchg
clc
pop
das
lahf
jecxz
iret
into
lahf
scas
ss
aas
jle
push
shll
mov
jns
push
outsl
aaa
bound
push
iret
ljmp
xchg
mov
sub
test
jmp
ljmp
bound
push
enter
pusha
add
pop
jbe
int3
mov
rcrl
fisubl
xchg
push
jg
addr16
leave
inc
sub
in
adc
xor
out
xlat
cmp
pusha
and
notb
scas
lock
loop
jg
nop
aaa
xchg
data16
cmpsl
xchg
scas
xor
adc
mov
ja
mov
mov
push
pop
pop
filds
outsl
jne
xor
pop
push
ljmp
cmp
in
ret
in
out
xlat
dec
push
test
outsl
push
inc
jle
push
xor
push
jns
lods
bswap
ficoms
das
jmp
inc
shll
cmpsb
jmp
cs
xchg
pop
jle
or
stos
insl
out
jno
xor
ret
ret
scas
outsl
mov
aaa
mov
push
es
mov
addr16
popf
mov
enter
sarb
jle
cmpsb
mov
sbb
lahf
sub
rcrl
inc
iret
jo
xchg
add
ja
mov
daa
dec
hlt
inc
out
xchg
nop
nop
jns
aaa
mov
pop
xlat
ss
xchg
ja
pusha
or
xor
das
xchg
pop
pop
mov
insb
jns
aas
out
outsb
data16
add
sub
sub
push
xchg
push
cmp
adc
adc
pop
das
stos
data16
inc
mov
shlb
fldenv
scas
nop
pop
jne
jbe
jo
out
repz
push
pusha
push
aad
mov
cwtl
dec
jle
outsl
add
push
out
fmuls
es
sub
pop
insl
push
xor
ss
and
es
outsb
les
mov
aad
dec
lret
sahf
call
or
mov
rep
cmp
mov
es
pusha
jmp
push
ds
jno
ja
push
das
es
xchg
mov
cmp
ret
lahf
nop
into
dec
pop
and
push
push
pop
mov
sub
movsl
es
daa
pushf
mov
inc
push
daa
pop
test
adc
push
inc
scas
in
outsl
xchg
outsl
ffreep
push
xor
xor
imul
popl
pop
test
inc
rep
add
jle
aaa
iret
cmpsl
addr16
ljmp
cld
and
push
cmp
push
add
aas
cs
pop
nop
loop
inc
daa
push
mov
dec
mov
xchg
sbb
or
data16
daa
aas
push
sbb
sahf
pop
aam
sub
mov
xchg
ds
pop
push
daa
mov
inc
shll
push
sahf
jg
in
mov
add
xor
jmp
in
scas
jbe
adc
scas
ret
hlt
stc
pop
mov
cmp
dec
cmpsb
stos
gs
mov
cmp
enter
loop
cmp
pusha
push
push
bound
push
mov
jbe
jmp
or
jo
push
iret
das
cmpsb
xlat
into
mov
test
lret
insl
push
loope
xchg
jecxz
push
pop
pusha
xchg
aas
cmp
pop
aam
ret
fstl
loopne,pn
cmpl
add
es
pop
push
mov
jp
jbe
idiv
rolb
mov
and
inc
add
cmpsl
dec
and
rcrl
outsl
sahf
xchg
mov
jp
aas
push
outsb
dec
push
xlat
and
out
xchg
inc
inc
iret
fs
inc
repz
pop
daa
leave
ret
mov
mov
mov
out
ds
and
test
movsb
neg
xor
push
aaa
outsb
xor
das
fs
enter
xchg
ds
mov
scas
fists
fdivp
inc
lahf
nop
aas
mov
mov
xchg
in
andl
sbb
scas
xchg
out
sub
sahf
xchg
daa
sbb
scas
ds
xchg
fidivs
dec
repnz
aad
out
mov
cmpsl
addr16
fistpl
movb
movsb
das
jb
int3
mov
xor
push
add
add
not
push
inc
xchg
js
sahf
add
mov
imul
xchg
xlat
nop
lds
ret
cs
sub
xchg
jg
or
lahf
mov
add
adc
mov
pop
cmp
push
push
push
xlat
push
gs
and
push
push
lock
mov
add
icebp
dec
repz
dec
pop
add
cmpsl
jge
mov
ret
sub
shrl
xchg
imul
xchg
mov
addr16
xor
xlat
ret
push
xchg
ds
push
push
mov
jle
insl
dec
lahf
jmp
and
leave
nop
sub
fnstsw
push
or
pop
inc
dec
pusha
xlat
fbld
xchg
jecxz
push
iret
and
or
scas
adc
push
mov
outsb
addr16
xchg
push
mov
mov
cmc
popf
pop
ja
lret
xor
push
mov
jbe
mov
iret
daa
sub
jge
push
xchg
ficomps
es
xor
pusha
addr16
xchg
mov
into
dec
loope
pop
xchg
adc
sub
or
sbb
xor
inc
or
into
ss
pop
stc
jp
enter
cs
fstpt
sub
roll
mov
mov
jbe
ret
pop
lret
push
pop
dec
fs
outsl
sub
daa
das
nop
jns
test
movb
mov
lock
js
adc
test
xlat
repnz
negb
push
insl
and
push
cmp
fwait
and
cmpsl
lret
ja
dec
add
mov
ss
pop
xor
pop
cmc
pop
fldcw
add
pusha
gs
cmpsl
add
or
cli
fwait
hlt
addr16
mov
aas
data16
xchg
gs
add
push
push
xchg
push
jbe
dec
cmp
xlat
in
mov
pop
push
enter
inc
orl
scas
scas
sbb
mov
jecxz
sti
jno
loopne
xchg
jg
sub
ds
push
mov
push
aad
fldt
fld
daa
outsl
int
pop
push
dec
cli
fimull
lahf
xor
push
ja
xchg
es
pop
mov
cmp
or
lret
outsl
pop
pop
addr16
fists
sahf
hlt
pop
push
lds
jns
addl
cltd
into
mov
ja
das
or
mov
enter
repnz
stos
jge
loopne
or
dec
push
inc
fistps
dec
cmpl
gs
scas
and
or
xchg
mov
mov
addr16
fstpl
mov
inc
lahf
aad
outsl
iret
lret
jle
and
dec
rorb
adc
and
ja
pop
sbb
in
fistpll
outsl
or
mov
push
xor
nop
push
sub
and
inc
pop
push
movsb
sahf
xchg
shl
jle
cmp
rcll
or
pop
add
ja
mov
cmp
pop
pop
push
ss
fildll
pop
sti
fistpll
cs
ja
and
push
ss
jle
iret
stos
mov
mov
outsb
nop
xchg
cmpsl
dec
xor
mov
pop
or
inc
and
push
jle
adc
dec
enter
pop
mov
scas
sub
popa
or
iret
mov
sub
aaa
pop
fcmovnb
mov
mov
ss
jle
jg
ret
rcll
jg
scas
xor
xor
imul
fmul
push
or
adc
jo
mov
shl
aas
popf
jb
lds
stos
imul
push
inc
inc
mov
push
scas
pop
gs
inc
dec
gs
and
xchg
in
inc
and
pop
bound
stos
pop
and
push
mov
and
xor
cmc
data16
div
dec
lds
es
insb
mov
dec
adc
add
xor
jns
push
cmp
jbe
lret
lahf
cli
andps
or
xchg
mov
sub
mov
cmp
divb
dec
cs
outsb
inc
enter
and
and
fisubs
insl
sbb
jns
ret
push
and
dec
mov
cmpsl
mov
push
jo
sbb
arpl
jecxz
and
xorb
imul
cmp
fsubs
cmp
xlat
fisubrs
xchg
out
data16
aas
scas
outsb
lock
int3
stc
iret
add
scas
fnop
jo
sub
or
mov
push
addr16
cmpsl
pusha
inc
xchg
mov
jg
fiadds
cmp
push
les
inc
scas
fisttps
mov
jns
cmp
sti
push
dec
xor
lds
andb
cmp
add
filds
mov
and
cmp
sub
inc
jo
xchg
ss
fwait
add
mov
das
out
sahf
xlat
push
lahf
or
push
xchg
push
outsb
rcll
negl
jle
cmp
mov
icebp
daa
xchg
pop
test
inc
pop
push
icebp
shll
pop
cs
xor
out
mov
shl
sub
gs
ja
mov
aas
dec
mov
lods
mov
out
lahf
addr16
cmp
jecxz
fisubrs
stos
mov
shr
push
and
lods
pop
xchg
and
lahf
pop
insl
imul
push
sarl
pop
adc
pushf
in
data16
xchg
std
aad
mov
out
inc
mov
pop
je
lds
mov
bnd
jle
dec
ss
and
leave
pop
push
int
mov
pusha
or
pop
iret
pusha
dec
dec
xchg
sub
xchg
mov
add
ds
xor
cmp
inc
mov
cmp
and
push
into
cwtl
adc
loope
mov
jle
lea
shrl
jmp
ja
adc
and
das
fs
negb
dec
outsl
dec
push
cmpsl
jbe
lahf
and
push
jecxz
pop
dec
mov
fsubl
jb
dec
mov
ds
ds
addb
out
into
jbe
mov
jmp
js
inc
lods
and
pushw
mov
fisttpll
icebp
cmp
fcmovb
cli
data16
adc
jg
xlat
add
in
mov
gs
aaa
pop
fimuls
loope
push
inc
mov
mov
loop
xchg
scas
imul
aas
fdivrl
sbb
inc
jno
mov
addr16
xchg
jbe
jg
pop
xchg
ss
sti
jns
dec
imul
mov
stos
out
xor
into
push
sbb
inc
sub
push
gs
or
jg
data16
pop
and
or
mov
aaa
mov
push
add
jno
push
repnz
iret
clc
sarl
xchg
mov
dec
test
ja
lret
sbb
es
push
pushf
jne
dec
cmp
push
negb
xchg
es
mov
pop
ss
cmpsb
lahf
xchg
int
ja
mov
out
ja
es
scas
add
es
mov
and
in
inc
in
in
xchg
dec
xchg
mov
cmpsl
into
adc
xchg
test
out
or
daa
and
cmp
sahf
dec
fnsave
pop
cmp
add
hlt
push
daa
dec
cmp
cmp
mov
sub
das
iret
pop
push
sbb
xor
jne
scas
xchg
into
or
shll
shr
push
cmpsl
fldt
cmpsb
inc
jle
dec
inc
outsl
mov
push
mov
cmp
mov
xchg
cwtl
outsb
jo
aaa
inc
cmpsl
jns
fimuls
lret
inc
or
arpl
adcl
aaa
jle
in
sahf
pop
xor
pop
push
push
cmpsb
cli
fdivrp
lahf
lea
fsubrp
jmp
das
adc
repnz
xchg
inc
loopne
fdivrp
rolb
enter
mov
xor
fildll
pop
lea
jb
mov
repz
clc
add
add
stos
mov
test
iret
jne,pt
dec
mov
addr16
xchg
pop
into
adc
inc
push
xlat
nop
je
jno
lahf
rorl
rcl
dec
fdivp
repnz
sarl
pop
movsl
mov
sub
cli
add
xchg
fs
xor
xchg
ja
fimuls
push
cmp
jns
push
faddp
push
push
in
pushf
mov
and
mov
clc
out
inc
jle
jecxz
mov
enter
pop
pop
xor
pop
aaa
insb
int3
mov
mov
in
cs
pusha
cmp
inc
jns
nop
cmpsl
xlat
iret
lret
xor
cmpsb
push
sahf
test
scas
cs
dec
lods
mov
xlat
push
xchg
mulb
mov
aas
sub
lods
cmpsb
dec
cmp
cmp
adc
mov
outsl
icebp
loopne
aas
xchg
sub
out
or
inc
jae
xchg
and
or
cmc
xor
jl
push
daa
decb
push
jmp
or
mov
jno
push
mov
leave
shrl
hlt
sub
insb
dec
mov
nop
aas
or
nop
daa
xchg
imul
rcl
push
lods
jecxz
cmpsb
mov
pop
jb
stc
push
jae
xchg
lock
mov
jg
xlat
and
pop
inc
xchg
jno
sahf
inc
into
mov
xor
call
sub
bound
das
mov
jle
hlt
sahf
ss
push
xchg
xchg
pop
sub
pop
iret
out
cmpsl
push
jle
outsl
xor
and
cmpsl
aaa
lods
mov
stc
dec
mov
daa
movb
outsl
call
adc
loopne
push
dec
mov
lret
lret
inc
scas
sahf
call
xchg
shlb
stos
xchg
pop
or
push
mov
xchg
mov
aaa
insl
lods
add
push
mov
dec
xchg
mov
aaa
dec
fnstsw
dec
pop
lret
add
jle
push
pop
mov
daa
xlat
xchg
lcall
jg
xchg
fists
data16
scas
and
xor
nop
gs
jbe
and
jle
jmp
xchg
pop
bound
stos
jns
xchg
outsb
xchg
dec
pop
cs
daa
xor
nop
inc
ds
jmp
mov
cmp
ja
mov
shrl
dec
scas
lret
xchg
das
aaa
cmp
in
bound
nop
aas
mov
mov
sahf
sub
xor
daa
aad
cmpsb
out
sub
pop
xor
ds
rcll
aas
add
cltd
inc
push
xchg
cmpsl
xchg
cmc
testb
cmp
mov
push
addr16
mov
xlat
into
scas
mov
jb
arpl
arpl
in
dec
xor
outsb
cmpsl
pop
xor
inc
cmp
outsl
out
cmpsl
sbb
pop
ret
int3
adc
pop
imulb
test
dec
daa
cmp
cmpsl
pop
outsb
add
xlat
shrl
pop
mov
leave
dec
pusha
xor
ljmp
sbb
inc
js
mov
jg
lea
cmpsl
std
inc
sahf
xchg
lods
data16
mov
xchg
lock
cmpsl
mov
addr16
ss
fiadds
jg
enter
and
pop
mov
imul
jg
sub
mov
in
add
scas
ss
cmp
pop
loopne
scas
outsl
sbb
sbb
sub
fistpl
cld
test
enter
push
inc
mov
push
xchg
stos
pusha
jnp
push
iret
imul
pop
fs
xchg
shlb
xor
scas
sub
push
in
cmp
pop
aam
aas
pop
and
es
stc
daa
mov
data16
lcall
das
fldenv
mov
lea
cltd
pusha
push
adc
aas
and
inc
mov
jne
int3
and
sbb
push
fs
and
xchg
push
mov
mov
jle
std
jb
add
data16
xchg
out
outsl
push
cmc
dec
jae
cmpsl
aam
push
push
dec
jle
and
gs
icebp
ss
cmp
xlat
data16
cmpsl
jns
into
filds
xchg
popf
push
nop
iret
mov
pop
fs
mov
cwtl
fsubrp
orl
cmpsl
leave
push
push
shrl
ret
jge
lods
lret
outsl
mov
sbb
push
xchg
imul
in
cs
test
rcrl
out
ret
mov
inc
iret
cmp
jecxz
xchg
js
lret
jg
mov
stos
loope
push
jo
sub
icebp
inc
push
sbb
aaa
push
repz
js
mov
mov
jmp
addr16
rolb
push
add
arpl
mov
lods
cmp
push
push
data16
sub
jmp
or
das
mov
mov
sub
jle
push
dec
scas
cs
inc
dec
add
push
fstps
dec
xor
das
sub
test
outsl
sahf
add
mov
fs
pop
push
mulb
sahf
nop
out
popf
pop
pop
bound
push
mov
adc
mov
mov
push
pop
lret
inc
xchg
ja
idivl
xchg
pop
rcl
das
mov
push
cltd
jno
lahf
pop
scas
es
add
cmpsb
push
jmp
inc
xchg
sbbb
xchg
cltd
andb
adc
icebp
outsb
inc
sbb
movsb
pop
sub
jle
leave
sahf
mov
daa
jp
and
pop
iret
std
cltd
xchg
push
loope
es
ss
lahf
arpl
pusha
ficoms
push
push
or
ret
in
or
cmpsl
pop
jno
es
jle
jno
xor
sub
inc
push
xlat
inc
xchg
push
inc
loop
xchg
inc
and
push
je
xchg
outsb
mov
push
fsubrp
pusha
push
sub
imul
outsl
pop
loopne
pop
into
cmp
mov
cmp
pop
inc
push
nop
adc
xor
jp
adc
fdivp
add
das
and
adc
aas
mov
mov
mov
and
jle
push
into
fs
and
fiadds
ja
jp
add
pop
jne
fildll
mov
jmp
addr16
push
cmpb
aaa
imul
add
pop
and
inc
cmp
xchg
push
iret
leave
cmp
jbe
shll
lret
jnp
xchg
xchg
ss
push
mov
and
fistps
xchg
cwtl
int
jbe
daa
xchg
pop
mov
add
xorb
addr16
jle
inc
outsl
cmp
scas
inc
lcall
out
fmulp
scas
nop
std
xor
shrb
scas
lahf
and
push
mov
sub
mov
fmull
push
jl
out
fstps
xchg
mov
pop
mov
pop
jbe
cmp
pop
fidivrs
icebp
scas
daa
mov
mov
shrb
divb
mov
jno
push
jns
inc
outsb
out
loopne
pop
aaa
push
pusha
xchg
mov
mov
repz
xchg
popf
add
ja
jecxz
lahf
push
jns
sub
pop
je
out
pop
mov
orl
pop
cmpsb
xchg
sbb
aaa
pop
popf
lcall
xor
outsb
and
and
adc
outsl
pop
sahf
mov
and
outsb
and
daa
xchg
mov
xchg
out
cmpsb
sahf
iret
and
and
pusha
outsl
cmp
inc
and
dec
dec
test
adc
inc
mov
add
daa
add
mov
outsl
addb
sbb
ss
daa
dec
pop
mov
pop
mov
cs
hlt
lock
std
stos
cld
repz
out
jae
push
mov
jns
outsl
pop
cmc
ror
dec
mov
fstpt
pusha
imul
cmp
pop
faddp
movsb
aaa
jbe
mov
into
adc
outsl
scas
lret
fdivrl
adc
adc
outsb
push
jae
or
pop
ds
or
jns
pop
mov
pop
rcrl
nop
pop
dec
jo
adc
dec
or
sub
cli
shrl
jg
jbe
xchg
mov
les
dec
push
jns
push
rcr
pop
dec
es
das
sub
shrl
pop
mov
dec
xchg
rorl
jns
aaa
and
inc
and
push
push
stos
inc
cs
outsb
nop
daa
scas
xchg
test
xchg
pusha
ss
add
sub
data16
cmpsl
pop
outsl
jg
mov
outsb
sub
movsl
push
iret
add
sbb
ret
sahf
add
outsb
ret
outsl
adc
dec
addl
pusha
mov
sub
ret
lock
lds
add
and
sbb
jo
pop
addr16
jmp
pop
pop
dec
ja
xchg
cmpsl
aad
test
mov
fldt
xchg
lock
xchg
push
mov
fidivs
cs
out
fs
dec
xlat
add
jmp
and
inc
outsl
mov
xchg
jne
daa
dec
mov
call
cmp
les
inc
jnp
push
loop
push
ds
dec
lcall
add
inc
outsl
sahf
and
mov
aaa
out
das
outsb
inc
mov
ss
dec
sub
lds
pop
jne
lcall
jno
and
mov
nop
jp
xchg
or
pop
rol
lea
pusha
dec
lds
pop
mov
inc
push
in
sub
outsl
cs
xlat
sbb
mov
clc
dec
mov
mov
daa
cmc
aam
mov
inc
pusha
aas
into
push
push
fmul
ret
mov
bound
jbe,pt
aaa
push
outsb
daa
sti
and
jbe
pop
inc
in
gs
mov
movb
enter
pop
sahf
or
outsb
mov
mov
xlat
inc
outsl
dec
xor
sub
pop
jle
into
pop
jmp
mov
xor
inc
clc
xchg
pop
mov
or
iret
xor
xorl
aaa
fstpt
into
pop
or
ja,pn
sub
mov
xchg
xor
lret
ret
es
js
stc
pop
iret
das
push
cs
imull
iret
jge
aaa
subl
outsl
cmpsb
movsb
loop
mov
xchg
std
xchg
in
mov
and
jne
incb
and
aad
cmpsl
mov
inc
cmp
cmp
cmp
lahf
loope
ss
inc
das
jle
lahf
jo
outsb
dec
pop
ds
fisttps
xor
inc
scas
pop
push
add
flds
cmp
or
adc
mov
in
lret
pop
jl
dec
iret
sub
aas
push
jbe
adc
iret
mov
fnstenv
and
es
jns
jle
xor
adc
sbb
nop
fadd
jo
mov
mov
popa
sbb
scas
in
dec
add
adc
in
mov
xor
xor
pop
xchg
scas
push
movsb
cmpsl
out
cmpsb
ds
push
rcl
nop
sahf
xchg
xor
pop
jbe
into
push
nop
pop
push
inc
icebp
clc
movsb
inc
ljmp
aaa
push
loopne
cwtl
rcr
mov
pop
jb
xorb
xlat
push
imul
pop
dec
dec
iret
fcompl
add
xchg
mov
sahf
loopne,pt
addb
cmpsb
xchg
jbe
lahf
int3
incl
nop
dec
data16
cmpsl
pop
fnstenv
cli
das
mov
cmpsb
jmp
xchg
push
cmpsl
mov
bound
aas
pop
data16
and
fcoms
es
ficoms
ss
inc
dec
leave
mov
fbstp
rcr
mov
lahf
pop
add
es
iret
lahf
leave
push
cmpsl
outsl
roll
incl
push
enter
rorl
repnz
inc
push
lret
jne
xor
pop
sub
lahf
xchg
rcrl
outsl
pop
in
dec
xchg
dec
xor
dec
sbb
lret
cmp
daa
jmp
mov
or
xchg
scas
xlat
cs
js
pop
les
outsl
mov
mov
fldl
push
lock
fsubrl
clc
cs
inc
jg
das
test
mov
out
push
push
dec
hlt
push
dec
xchg
jg
mul
push
addr16
in
and
divb
xchg
mov
pop
jo
sub
shll
aas
push
cmp
push
push
daa
and
fldenv
inc
call
fnstsw
ss
loope
cmpsl
filds
loopne
lcall
ja
and
jle,pt
pop
push
mov
xchg
fisubrs
shl
lret
push
ret
or
inc
push
mov
mov
out
daa
inc
push
and
fdivr
outsb
lret
add
rcrl
iret
dec
xchg
pop
xlat
mov
fnsave
xor
mov
pop
loop
cmp
and
es
jmp
pop
sti
mov
inc
pop
nop
mov
mov
xor
xchg
nop
cmp
outsb
fisubs
cs
ds
push
ss
lock
mulps
ja
aad
inc
call
shr
fidivs
daa
push
adcl
cmpsl
sti
sbb
hlt
popf
mov
lret
cmp
fucomip
and
aas
jg
and
fisubrs
push
fs
daa
push
mov
sahf
push
stc
adc
scas
pop
popl
push
cmpsb
sahf
jbe
in
sub
divl
dec
daa
sbb
cmpsl
das
mov
dec
hlt
mov
inc
dec
pop
fimuls
mov
dec
xchg
in
or
inc
insb
xor
rcrl
push
fiadds
fists
scas
mov
mov
scas
sahf
fadds
inc
out
cmpsl
clc
xlat
outsb
cltd
pushaw
xchg
cltd
and
aaa
aas
aad
push
dec
xchg
push
das
repz
pop
mov
mov
loope
jo
addr16
ss
add
std
lahf
dec
outsb
out
xlat
gs
cmp
data16
mov
ss
stos
out
cs
dec
sub
or
push
cmpsl
xor
xchg
xor
ud1
add
mov
rcrb
add
push
shll
test
xchg
or
mov
push
adc
popf
pop
loop
cmpsb
aas
fistps
mov
dec
fyl2xp1
outsl
mov
dec
test
cs
xchg
jg
or
and
or
sbb
mov
jne
rclb
or
iret
jbe
outsb
lds
scas
fisttpl
and
dec
int
xchg
repnz
pop
pop
fiadds
cs
loop
push
es
inc
sbb
and
xchg
jle
cwtl
mov
lea
idivl
mov
aaa
out
xchg
pusha
pop
sub
fdivrl
aaa
rcr
mov
pusha
cwtl
es
mov
lock
mov
movsb
mov
outsb
es
lret
inc
cmp
cmp
inc
test
and
iret
pop
into
dec
xor
bound
mov
icebp
outsb
lods
es
data16
fcomps
and
pop
jo
fisubs
aam
test
scas
dec
out
iret
xor
sbb
les
adc
ja
and
pusha
xchg
xchg
cmpsb
inc
scas
daa
mov
pop
insb
fcmovb
fucomip
adc
push
xchg
popf
aam
and
cmp
movsb
mov
jae
outsb
test
mov
ds
ffree
ficoms
scas
fcompl
xchg
sbb
inc
roll
ja
jl
mov
mov
ret
nop
in
scas
cltd
push
lock
mov
stos
ds
out
pop
push
add
inc
mov
adc
jle
push
js
stc
cmpsl
mov
jne
in
pop
push
scas
testl
mov
jbe
ret
ret
ds
cmp
jmp
fisubs
mov
daa
loopne
pop
xchg
and
cmp
sbb
dec
sub
mov
les
stos
clc
scas
push
les
xchg
dec
ficoms
pop
add
mov
popw
jae
ss
push
aaa
cmpsb
inc
sub
mov
push
in
cmpsl
outsl
daa
pop
int
ss
aaa
fidivrs
sub
adc
mov
shrl
das
mov
rorb
sub
jle
xchg
push
sahf
es
or
stos
pushf
arpl
push
pusha
dec
cmpsl
xchg
in
pop
aas
gs
push
ja
mov
xlat
mov
dec
dec
push
mov
pop
scas
nop
loop
scas
mov
fcompl
mov
xlat
cmpsb
nop
inc
pusha
iret
lea
jbe
mov
mov
xchg
mov
aaa
stos
mov
push
in
lahf
push
lahf
inc
cli
in
addr16
inc
pop
lods
aad
ds
fidivrs
cli
aas
xchg
aad
ja
jno
arpl
jmp
inc
push
pop
inc
jae
adc
ljmp
pop
push
or
jo
push
nop
dec
fs
out
out
aaa
push
fwait
add
and
push
incb
jecxz
xor
lret
lods
cld
or
cs
dec
mov
mov
insl
out
jne
in
dec
push
into
test
cld
rorb
call
lahf
inc
sahf
je
adc
jecxz
popw
cmpsl
das
push
pusha
pop
push
pop
and
faddl
mov
popf
sub
into
fidivrs
outsb
mov
addr16
push
and
fiadds
test
fs
cld
fidivl
mov
lret
inc
jb
aaa
push
and
push
das
adc
add
shlb
xor
repz
mov
ror
pop
pop
dec
shll
pusha
push
not
movsb
sub
scas
inc
jno
mov
push
into
push
popf
pop
into
in
fldcw
xchg
xor
das
jecxz
and
fimuls
in
outsl
push
aam
aad
jle
in
cs
das
pop
mov
pusha
inc
jb
cld
iret
pop
push
push
xlat
jl
sub
daa
fdivp
mov
jl
sarl
lahf
pop
cmpsb
fsts
aad
lret
mov
mov
aas
and
pop
sub
shl
pop
mov
add
push
xchg
sahf
pop
out
pushf
sbb
sbb
or
adc
xor
inc
and
dec
outsl
leave
jae
jg
xchg
stc
and
add
aas
cmpsb
mov
fsts
das
pop
inc
fcmovb
pop
stos
pop
pop
jle
xorb
or
bound
dec
add
mov
mov
xchg
pop
shll
xor
push
daa
xchg
ds
out
movsw
cmpsl
cmc
sbb
cmp
popa
mov
fidivrs
push
les
fildl
jle
loopne
xlat
dec
das
xlat
scas
into
pusha
ret
rcrl
cmp
dec
jmp
addr16
pop
cs
adc
jns
xchg
pop
cmp
mov
xchg
mov
mov
fdivp
jmp
pop
add
rolb
cs
jno
dec
dec
dec
clc
sbb
push
in
sub
ret
in
imulb
aas
ret
mov
mov
jno
pop
pop
pop
push
loopne
pop
fnstenv
inc
ja
mov
ss
es
popf
outsb
dec
mov
inc
sti
iret
ret
scas
pop
xchg
pop
in
scas
into
inc
pop
inc
notb
pop
outsb
cmpsb
jbe
sub
mov
int
test
inc
adc
mov
inc
adc
scas
add
dec
mov
jmp
add
xchg
jle
daa
dec
pop
push
imul
xlat
xchg
pop
xchg
dec
mov
or
cmp
into
les
iret
out
pop
out
bound
fs
xor
sbb
das
ds
add
mov
jg
push
cltd
data16
sahf
xlat
adc
xchg
mov
sbb
push
inc
insl
push
sahf
add
mov
je
adc
lods
addr16
push
xchg
loop
pop
mov
data16
xchg
pop
daa
das
xor
clc
jle
mov
enter
xchg
int
pop
scas
lret
mov
scas
lret
cmpsl
lret
loopne
adc
fstl
jbe
out
push
pop
jns
dec
dec
ret
pop
sahf
xchg
pop
xchg
leave
inc
jle
and
push
nop
mov
insb
lods
xchg
std
pop
and
daa
jns
cmp
push
pop
mov
ss
ss
mov
mov
inc
mov
nop
es
lahf
mov
dec
or
xor
dec
jo
ficoms
mov
idivl
test
rclb
repz
push
xchg
mov
inc
das
lret
cs
push
inc
jle
jno
ds
ret
xor
pushf
sub
iret
cmp
lods
cmpsb
fidivl
push
lahf
sub
stos
xchg
lock
inc
xchg
and
add
rolb
popl
aad
pusha
xchg
xor
sarb
jae
push
outsb
jae
sub
mov
xor
insl
ljmp
in
into
sub
iret
inc
ja
imul
inc
daa
cmpsl
aaa
jnp
mov
mov
fs
scas
xlat
and
pop
stos
ljmp
cmpsb
and
inc
jle
xchg
inc
shll
push
in
xchg
mov
dec
mov
pop
pop
into
jae
pop
cs
aas
aaa
inc
shll
sbb
jns
xchg
dec
and
push
in
push
shlb
shl
push
mov
cmp
dec
outsb
es
arpl
call
sub
leave
daa
ds
inc
fmulp
mov
cmp
sahf
ljmp
pushw
sbbl
and
faddl
fimull
mov
push
mov
aaa
and
sub
pop
push
int3
stc
outsb
inc
ja
mov
lds
inc
pop
and
lahf
dec
sub
sahf
sub
mov
sub
js
cs
push
mov
add
pop
gs
and
decb
js
outsl
xchg
dec
sub
xchg
stc
mov
jg
push
sub
xchg
xchg
in
aaa
mov
cmpsl
sub
enter
push
cmp
or
lahf
shll
cld
addr16
push
xor
mov
aas
jo
push
xchg
and
mov
ds
cli
lods
leave
aas
and
push
nop
xchg
in
lock
lcall
inc
mov
lahf
outsl
jbe
and
and
daa
push
mov
push
test
inc
jg
into
cmpsl
jp
lcall
aam
jne
addr16
leave
aaa
and
sarl
es
xchg
ljmp
ss
test
mov
jg
xchg
sbb
xorl
leave
add
mov
pusha
data16
add
sbb
jbe
dec
mov
mov
testl
enter
push
ret
fidivrs
aad
lahf
fisttpl
and
xor
outsl
addb
push
in
aas
scas
jno
mov
mov
aad
daa
fildl
jl
psubusw
shld
ss
loop
mov
xchg
and
push
iret
or
push
clc
jg
or
sbb
pop
cwtl
rol
xchg
push
jl
popa
jg
ret
lahf
push
shrl
sub
popf
popf
xchg
out
cmpsl
pop
std
daa
jne
fisubrs
popf
mov
fiadds
cs
or
aad
adc
mov
inc
inc
jae
in
pusha
repz
or
ficompl
push
cmpsl
cmpsl
nop
insb
mov
dec
into
and
pop
in
daa
mov
xchg
adc
xor
fistps
mov
jnp
jge
or
lds
sub
sahf
mov
dec
xchg
jbe
out
mov
pusha
scas
idivb
scas
pop
mov
add
jb
inc
js
aam
add
jg
in
popf
push
loope
pop
into
push
sbb
orb
sahf
lahf
repz
inc
fs
lock
into
repnz
cmpsl
ret
das
push
cmpsl
mov
xchg
les
and
pop
add
movsb
sarb
bswap
movl
mov
cmp
rcll
cmp
mov
inc
inc
dec
mov
inc
es
jg
xchg
ss
into
int3
sub
or
hlt
push
lds
xlat
xchg
dec
mulb
pop
or
cld
fnstsw
dec
push
les
lahf
xchg
fstps
popa
push
and
int3
jo
xor
push
jmp
inc
cmp
into
pop
cmp
andl
sub
sub
hlt
outsb
mov
cmc
mov
or
push
xor
into
xchg
inc
cltd
stc
push
and
push
xchg
xchg
pop
enter
mov
fnstsw
push
xor
leave
push
pop
out
and
dec
data16
xchg
stos
iret
fstps
inc
fists
outsl
mov
push
es
adcb
cmpsl
scas
mov
push
push
dec
xchg
mov
jmp
xchg
stos
mov
scas
push
mov
das
out
inc
xor
outsl
mov
es
es
daa
push
pushf
pop
mov
mov
xor
ret
inc
nop
fldt
xchg
loopne
ljmp
xor
sbb
test
jo
pop
js
cmp
pop
dec
xor
mov
pop
pusha
inc
in
jbe
ss
and
lock
push
cmp
cmp
aad
cmpsb
cmp
xchg
xchg
jbe
push
leave
pop
inc
aas
sbb
insl
out
cmpsl
xchg
xchg
jbe
pop
aad
push
xor
popa
push
jo
push
xchg
dec
and
les
ss
mov
or
pop
iret
push
cmp
das
aaa
mov
nop
sub
dec
pop
mov
les
sbbb
dec
mov
jo
sahf
add
or
sub
cmp
jmp
dec
inc
mov
sti
rolb
inc
add
xchg
outsl
iret
movsb
jnp
or
mov
mov
dec
xlat
mov
dec
push
sub
loop
mov
mov
adc
push
scas
aas
mov
popf
mov
dec
mov
leave
cltd
iret
mov
jl
arpl
fs
sub
mov
mov
sbbl
insb
cmpsl
mov
sub
dec
stos
push
das
insl
jnp
add
cmp
loope
inc
push
mov
loopne
push
mull
aad
add
das
popf
daa
push
mov
outsb
ja
lahf
sbb
pusha
fbstp
fists
movl
sub
dec
push
sbb
adc
arpl
mov
lods
push
push
lock
dec
add
sbb
jnp
notl
js
xchg
add
dec
cmpsl
add
adc
test
push
add
push
add
cmpb
xor
ret
or
push
cmp
cli
xchg
push
adc
push
add
push
jb
push
mov
lods
push
push
lock
inc
add
sbb
add
jnp
notl
js
sahf
add
push
cmpsl
add
adc
test
pop
add
pop
testl
inc
rolb
test
add
ss
inc
push
scas
aas
fisubs
xchg
pop
inc
add
rcll
in
cmpsl
scas
outsl
mov
scas
scas
inc
sub
sahf
add
push
pop
fsubrp
xchg
jle
dec
loop
ja
scas
cmpsl
push
cmp
add
jno
ficoms
mov
mov
pop
jns
push
jecxz
data16
ds
adc
mov
fcomip
adc
inc
inc
imul
out
lret
clc
cmpsb
jne
pusha
push
neg
fimuls
inc
jp
test
int3
sub
out
leave
mov
pop
lds
push
cmp
repnz
adc
and
outsl
cmpsl
pop
mov
out
lcall
xchg
pop
lahf
std
push
mov
push
iret
bound
jbe
dec
cli
popf
push
arpl
outsb
push
and
jecxz
xor
xchg
test
add
daa
jmp
cmpsl
dec
dec
mov
sub
and
xor
repz
jmp
or
mov
addr16
jbe,pt
adc
mov
sarb
xlat
lock
ret
enter
jnp
mov
ljmp
push
inc
enter
pop
add
movsl
in
xlat
jl
in
cmp
outsl
inc
aaa
push
mov
test
int
fildll
pop
into
outsl
hlt
jb
mov
fcoml
xlat
cmp
or
sub
adc
test
js
fisttps
inc
pop
cmc
lahf
mov
cmpsb
xor
jno
fldenv
pop
cli
out
and
mov
in
rol
les
and
add
ret
mov
adc
lds
add
les
out
nop
inc
inc
sub
jns
pop
add
pop
add
push
pop
inc
inc
mov
inc
cmpl
fists
lcall
add
cltd
ds
nop
ret
negl
adc
lcall
lcall
leave
inc
insl
jo
ret
imull
mov
lret
arpl
test
jno
out
nop
inc
enter
cmp
cwtl
enter
les
inc
dec
dec
shld
add
xchg
pop
notl
ret
mov
mov
fadds
mov
push
jle
cmp
adc
xlat
out
imul
mov
xlat
pop
cmp
imull
dec
add
or
jge
adc
loope
popl
xchg
push
fisubl
jp
cli
addr16
sub
lahf
xor
cmp
dec
clc
inc
fisubs
jle
pop
mov
lods
das
push
xchg
xlat
jns
mov
daa
loope
mov
push
ds
ficompl
jbe
scas
ss
sub
es
iret
ja
pusha
mov
cld
add
cmp
pop
ds
jg
jae
dec
pop
xor
adc
xor
stc
mov
cld
daa
inc
sub
xor
or
push
into
andb
or
xor
pushf
adc
xchg
into
cmpsb
fdiv
dec
hlt
jne
fdivrs
int
subb
shr
or
push
jmp
outsb
add
dec
pop
push
cmc
push
addr16
stc
sahf
out
clc
outsb
push
jle
push
xor
clc
int3
push
sarl
stos
ss
popa
xchg
mov
pushf
lret
cmpsl
push
aam
lods
call
cmpsb
inc
lock
dec
mov
sbbl
data16
fsub
pop
js
insw
imul
add
pop
inc
cltd
push
cmp
xor
fcoms
adc
sbbl
pop
out
lcall
mov
pcmpgtd
jbe
cmpsl
scas
outsb
rorl
mov
jmp
jae
jns
mov
push
pop
xlat
pusha
push
pop
inc
gs
test
movb
cmp
xor
and
inc
sbb
mov
int3
ret
loopne
push
inc
xchg
addr16
cmp
xlat
xor
xor
jo
mov
xchg
add
push
push
xchg
arpl
dec
imul
mov
and
push
push
gs
cld
xchg
xor
add
mov
xor
sub
inc
push
ret
loopne
push
inc
jo
inc
push
cmp
sub
mov
dec
loopne
push
pop
xchg
mov
sub
sub
sub
push
mov
push
inc
xor
push
xor
sub
push
mov
push
dec
xor
add
mov
inc
popf
and
dec
iret
mov
inc
lods
dec
es
inc
jo
cmp
sub
pusha
push
or
pusha
push
call
pop
dec
cltd
fwait
dec
mov
mov
aam
inc
aam
inc
aam
xor
mov
mov
and
test
mov
jns
movsl
sub
iret
and
inc
push
adc
scas
cmpsb
ja
in
sti
fmull
inc
jo
mov
lods
lahf
scas
xchg
dec
dec
jbe
aam
inc
aam
inc
aam
inc
aam
inc
aam
inc
aam
inc
aam
inc
aam
cmp
mov
inc
aam
push
pop
in
stc
aam
inc
xchg
pop
pusha
sbb
xchg
pop
pop
cmpsl
pop
push
push
sub
sub
sbb
cmp
inc
pop
cltd
push
mov
mov
push
mov
push
mov
mov
push
mov
mov
push
mov
mov
push
mov
enter
loopne
scas
data16
out
into
out
ja
push
shrb
mov
xor
cmp
xlat
pusha
add
ret
mov
pusha
stos
push
dec
jg
shrl
mov
or
enter
dec
xchg
rcrl
xchg
push
pusha
mov
xor
jb
pusha
aas
movsb
mov
cmpsl
leave
inc
xchg
and
mov
push
sub
sub
or
cwtl
mov
sub
push
mov
mov
sub
mov
sub
mov
xor
mov
add
push
pop
push
std
leave
lods
inc
aam
lods
stos
bound
xlat
push
push
gs
add
mov
pusha
push
pusha
adc
pusha
push
les
orb
pop
je
iret
cwtl
aad
dec
test
xor
pusha
push
lds
lds
pop
cmc
fdivs
pop
inc
lea
cmp
gs
add
mov
mov
rcrb
rol
pop
jl
pushf
shrb
sbb
mov
aam
mov
push
jbe,pn
cld
adc
sahf
inc
mov
mov
fwait
pop
xor
pop
out
pop
sbb
in
cmpsl
out
gs
add
lods
movb
fwait
inc
std
data16
mov
jne
xchg
or
cli
sbb
push
les
movsl
xchg
ds
stc
dec
mov
push
adc
pusha
xchg
ljmp
mov
ret
sbbb
decl
dec
aam
mov
pusha
and
adc
pusha
cmp
fwait
jmp
inc
dec
stos
jns
dec
xor
testl
outsb
leave
jbe
xchg
adc
out
clc
jns
pusha
xor
pushf
push
jb
push
hlt
psubb
test
cmp
inc
mov
xchg
popf
push
data16
mov
test
jecxz
cs
mov
shl
sbb
push
mov
enter
push
subl
shlb
inc
test
jmp
sbb
or
inc
pop
jae
sub
xor
inc
push
pop
push
push
dec
push
sbb
fisttpll
out
pop
ja
insl
movl
lds
das
add
jge
pop
lret
mov
adc
inc
mov
dec
fwait
mov
fstps
outsl
pop
scas
cmp
mov
add
mov
cmp
pop
das
push
dec
sub
pop
pusha
sbb
adc
enter
inc
add
xor
cmc
fadd
cmp
fcomps
inc
loopne
sub
or
dec
mov
jno
lds
mov
mov
cmp
int
jbe
mov
fs
fsubrs
pusha
cmp
mov
shlb
cmpsl
fisubrs
mov
dec
leave
fsubrl
pop
push
inc
ret
test
sub
xchg
and
je
pop
inc
enter
jbe
les
sbbb
pop
cmp
js
cmc
movsb
addr16
hlt
aas
cmpsl
jns
rcrl
mov
enter
pop
dec
or
das
fwait
xchg
mov
dec
pop
lea
filds
mov
call
jbe
leave
push
ds
mov
fdivp
aaa
rcr
imul
and
mov
aas
pusha
cmp
dec
dec
sub
mov
or
inc
pushf
add
mov
xchg
je
dec
xchg
lahf
jge
out
aaa
sbb
mov
cmpsl
adc
xchg
inc
add
imul
mov
out
aad
dec
jbe
xchg
movsb
fnstenv
rcrl
popa
mov
jg
gs
mov
jl
movsb
jns
inc
imul
les
hlt
loope
and
shlb
xchg
cwtl
and
cmpsl
pop
pop
sti
mov
jecxz
popf
insb
mov
out
cmpsl
dec
pop
rclb
jbe
aas
push
sub
pop
movsb
ret
mov
dec
stc
outsl
dec
jecxz
dec
pop
jbe
iret
inc
enter
push
nop
pop
leave
sub
sub
sub
dec
xchg
ja
out
cmp
out
or
dec
sbb
dec
daa
add
xor
dec
gs
jecxz
sbb
push
mov
sub
xchg
mov
xorl
sahf
jnp
repz
pop
fs
jnp
icebp
call
jbe
mov
mov
fs
mov
pop
data16
add
cwtl
mov
mov
dec
aaa
and
lahf
add
push
or
mov
cmp
cmpsl
pop
cmpsl
xchg
inc
in
sub
mov
mov
lods
push
ja
mov
and
pop
gs
xchg
add
js
dec
xchg
and
ret
and
pop
cmpsb
xchg
in
xchg
dec
pop
ret
aam
sub
call
sbb
xor
cmp
in
iret
lret
nop
pop
cmpsl
jle
pop
mov
cmc
enter
lahf
jne
xor
xlat
cmp
lods
es
mov
mov
and
or
arpl
xchg
negb
inc
cmp
xchg
add
out
cmp
ja
push
cld
inc
and
les
subb
daa
enter
adc
ja
stos
test
fwait
add
inc
or
add
jne
mov
test
and
lds
lahf
and
leave
and
outsl
or
mov
xchg
pop
pop
mov
bound
and
or
dec
sub
test
xor
loop
jne
leave
push
pop
pop
adc
in
dec
sub
pop
and
fnstenv
mov
pop
push
push
push
mov
dec
add
pushf
sbbb
xchg
ja
pop
mov
push
mov
mov
stos
ja
dec
adc
shlb
xchg
cs
mov
sbb
pusha
mov
mov
pop
inc
sub
xor
sbbl
or
test
and
dec
push
bnd
gs
xchg
aam
jg
jecxz
xor
cmp
lea
inc
add
jecxz
sbb
sbb
dec
mov
xchg
dec
imul
jns
push
fstps
jo
push
dec
mov
push
mov
sbb
inc
sub
or
jg
xor
jp
arpl
or
inc
ja
out
sub
mov
xchg
sub
push
sti
and
sub
ds
mov
xchg
push
push
mov
stc
jnp
aad
pop
popa
push
loop
mov
cmpsb
sbbb
test
mov
mov
sti
flds
ss
mov
cwtl
cmp
ja
push
xchg
xlat
or
jb
xor
or
out
xorb
je
push
and
shlb
fcom
mov
pusha
test
aam
or
movsb
and
jb
add
jge
dec
imul
mov
nop
aad
enter
and
jmp
jo
mov
pop
ss
cmp
int
jge
mov
xchg
inc
dec
shlb
sub
xchg
pop
scas
ret
or
out
in
sub
add
fcompl
mov
push
push
pop
mov
lds
fldl
outsb
mov
les
push
pop
jle
mov
lahf
pop
in
mov
inc
jbe
or
jle
fidivs
in
mov
pop
xor
adc
push
sub
lea
stc
xchg
lds
fldenv
jge
ja
aad
xorb
sbb
dec
pop
jle,pn
xor
sbb
inc
movsl
mov
clc
fwait
mov
dec
addr16
inc
sub
jge
push
xor
dec
iret
cwtl
jle
pop
pop
jb
lds
sub
ja
stos
jb
imul
je
xor
push
and
pop
and
lcall
jb
test
jb
adc
int
ja
mull
lods
imull
lea
or
sbb
cmp
imul
cmp
and
mov
sub
and
sbb
ss
add
pop
cwtl
and
push
sbb
cmpsl
mov
push
mov
lea
sub
xor
lahf
stc
int3
in
cmp
push
push
sbb
outsl
aas
dec
cmp
push
pushf
pop
stos
hlt
dec
mov
add
push
mov
xchg
fwait
and
mov
aas
bnd
pop
imul
or
pop
jns
shr
inc
cmp
push
aad
cmp
cmc
loopne
lcall
and
dec
inc
inc
inc
lret
cmp
lret
out
add
mov
xchg
push
add
aaa
pop
inc
mov
mov
cld
out
mov
test
jb
mov
sub
enter
aam
xor
mov
adc
lahf
mov
xor
lds
mov
subb
adc
xor
cmp
adc
and
or
aas
push
outsb
cmp
call
adc
xor
mov
stos
adc
mov
stos
and
and
pop
pop
and
jne
sbb
mov
data16
stos
adc
inc
jle
cmpsb
in
push
sub
movsl
pop
imul
sbb
jge
xor
pusha
pop
test
cmp
mov
hlt
mov
repz
xlat
add
xor
push
push
dec
pop
les
in
sbb
fidivrs
push
push
dec
pop
xchg
pop
cmpsb
inc
xchg
mull
clc
xor
cmc
cmp
add
adc
popf
fs
jns
sbbb
xor
jp
js
in
mov
iret
pop
fxch
mov
xchg
xor
mov
test
and
test
sbb
jle
or
mov
dec
xchg
jp
inc
xor
mov
repz
add
pop
push
mov
andb
add
loop
sub
insb
sbb
dec
xor
mov
dec
sahf
sbb
mov
pop
inc
rcl
jge
add
lret
pusha
stos
or
lcall
into
push
jge
maxps
xchg
or
arpl
gs
fdiv
and
cs
cltd
mov
daa
xchg
adc
clc
addr16
cmc
xchg
pop
pop
mov
bound
dec
call
outsl
pop
mov
inc
lcall
cmpsl
sub
notb
jns
xchg
out
xchg
inc
jle
dec
dec
push
sbb
je
pusha
adcl
sbb
int
loop
inc
jmp
inc
je
pop
bound
or
jle
push
adc
js
dec
push
in
or
lcall
inc
pop
andl
inc
ds
clc
out
out
clc
arpl
int3
sub
sbb
ret
jae
inc
test
aas
jns
adc
xchg
inc
test
or
ss
jle
aas
xor
enter
or
dec
jb
repz
pop
lret
inc
adcb
jns
dec
cmp
pop
gs
jecxz
sbb
lods
jbe
divl
insl
std
daa
cmpsb
sbb
out
jo
jge
pop
cmpsb
sub
jecxz
div
notl
inc
mov
push
pop
xor
cwtl
add
sub
push
dec
testl
cmp
jle
inc
pop
out
fidivl
fldenv
std
mov
xlat
sbb
xor
fisttpll
outsb
adc
sbb
lea
paddusw
andb
inc
ja
sbb
xchg
mov
sbb
push
push
idivl
sbb
push
mov
inc
jp
movsb
sub
xchg
pop
or
dec
gs
imul
adc
mov
sbb
and
xor
cmp
or
hlt
xchg
or
sub
shll
out
js
mov
repz
inc
jge
and
nop
stos
ret
jne
pop
test
mov
idivb
mov
in
aaa
sub
daa
es
ret
inc
daa
psubw
icebp
out
mov
pop
jge
andb
mov
jo
hlt
subl
or
mov
sbb
inc
shlb
cltd
sbb
sbbb
inc
push
cwtl
bound
mov
xor
sub
and
push
repnz
aad
divb
enter
pop
cmp
loopne
lcall
out
stos
ret
xor
ret
jne
int
mov
pop
sbb
mov
pop
push
mov
pop
xor
sahf
popa
cmpsl
push
xchg
mov
mov
aas
call
out
cmp
call
and
sarl
popf
cmovp
pop
pop
adc
pop
enter
inc
movsl
insb
ja
adc
test
pop
dec
xor
jecxz
scas
call
out
or
and
cmp
inc
jne
dec
sarl
mov
sub
ds
or
leave
mov
leave
cmp
int3
cwtl
les
hlt
test
and
cmp
push
mov
xchg
fimuls
xchg
cwtl
repz
ret
insb
xchg
jns
jl
in
je
jo
pop
sbb
pcmpeqw
orb
cltd
clc
dec
je
push
cmpsl
and
in
aaa
aas
mov
in
push
xchg
xor
inc
pop
call
mov
fwait
and
cmpb
fdiv
rdtsc
mov
vandps
rcl
loope
dec
sub
imul
std
aad
shll
lahf
adc
es
mov
jbe
push
icebp
rorl
push
mov
ss
int
dec
cld
fxch
dec
movsl
lcall
mov
pop
out
or
and
xchg
inc
mov
mov
or
insl
dec
shl
std
push
xchg
in
dec
inc
repz
aaa
in
cmpsb
out
popa
pop
push
lahf
mov
cmp
ja
mov
sbb
mov
loope
data16
incb
cwtl
jge
popa
push
pop
scas
dec
ret
xchg
and
ret
mov
pop
jl
imul
fcom
xor
sbb
sub
iret
out
pop
jecxz
mov
adc
add
cmp
xchg
sbb
rorb
push
addr16
jmp
fisttpll
add
xchg
sarb
test
or
mov
jae
xlat
loope
add
int
scas
sub
mov
ja
push
xchg
add
jg
xor
sub
jbe
aas
cmpsl
cmpsb
mov
insl
jg
lahf
fistps
mov
addl
lahf
sbb
mov
push
lods
sub
loope
adc
lds
insl
cmpsl
fisubrs
mov
xor
inc
adc
push
jle
scas
stos
call
loope
xchg
and
add
cltd
out
pop
daa
jns
jns
dec
ret
in
or
ret
mov
mov
iret
mov
nop
sarb
shll
jmp
pop
pop
stos
sub
sub
jnp
and
add
fimull
pop
pop
adc
push
ja
sarl
xchg
push
xchg
mov
jnp
leave
push
push
inc
scas
pop
sbb
jo
lcall
or
or
sbb
popf
insl
jo
dec
sub
and
cmp
push
lret
popf
add
or
inc
cmp
cld
int
out
mov
inc
dec
or
add
imul
repz
mov
icebp
std
ja
repnz
cmp
inc
sbb
jne
fstpl
mov
sub
mov
in
inc
fcompl
popa
push
stos
mov
mov
aad
dec
shlb
sbb
hlt
push
xchg
mov
ret
cwtl
jmp
add
aas
js
std
mov
pop
in
adc
ja
sub
xor
pusha
adc
pop
popf
xchg
sub
adc
jnp
daa
add
or
pop
mov
jae
ljmp
out
aam
jns
nop
ficoml
loopne
imul
sbb
adc
push
popa
cmp
dec
in
sbb
push
test
pushf
xchg
pusha
or
repnz
inc
xchg
dec
push
aaa
loop
je
into
fiaddl
sbb
lmsw
mov
jns
daa
shlb
movsb
mov
decl
popf
das
push
jl
and
pop
jmp
xlat
push
bt
or
jae
je
pusha
pusha
jmp
push
mov
sbbl
push
dec
jecxz
pop
scas
in
shrl
cmp
cmp
xor
movb
xor
pop
in
aas
out
jg
or
faddl
mov
int3
ss
jge
dec
paddw
sarl
fsts
push
mov
dec
inc
negb
aas
popa
pop
fnstenv
push
movlps
mov
pop
adc
scas
dec
add
cld
push
mov
gs
jecxz
test
andl
scas
push
shl
test
and
mov
testl
jb
cmp
std
cld
mov
js
int3
ror
sbb
outsb
fsubrl
cmp
jb
lahf
xor
andl
fadds
or
fchs
jbe
adc
mov
clc
pop
bound
sbb
and
fidivrl
xchg
xor
mov
dec
out
outsl
adc
cmpb
pop
fwait
adc
rolb
and
xchg
rorb
pop
repz
jno
mov
mov
cmpsb
add
sub
add
test
push
sbb
or
jmp
pushf
lea
jne
bt
pushf
sub
push
pusha
pushl
lea
jmp
jmp
jb
pop
and
fisubl
cmpsb
das
sbb
das
jnp
adc
fs
adc
sub
jg
and
inc
dec
push
mov
movsb
cmp
or
jle
ss
push
mov
sub
mov
shlb
push
scas
aas
sarl
pop
outsb
ret
xlat
push
dec
jmp
pop
ljmp
pop
xchg
mov
loope
adc
popa
push
hlt
add
push
cmp
jl
daa
daa
aas
sbb
or
pushf
jno
mov
and
and
fisubrl
pushf
jno
fwait
mov
mov
js
stos
inc
movsb
xor
sub
jle
and
add
lock
mov
gs
lcall
js
aas
and
inc
test
jns
sahf
add
nop
cmp
pop
ljmp
sbb
lret
xchg
sub
mov
gs
jmp
and
xchg
sbb
sub
gs
popf
mov
outsl
clc
icebp
push
test
and
test
mov
insb
jl
push
arpl
push
push
inc
aaa
and
repz
jmp
sbb
lret
in
inc
cli
mov
mov
jae
test
rol
shlb
loope
ret
pop
add
in
rolb
push
xchg
xchg
pop
add
mov
imul
fimuls
jae
mov
repnz
fwait
sub
jmp
xorl
push
movsl
cmc
adc
les
fmuls
xchg
sar
fnsave
dec
dec
mov
gs
inc
sbb
push
insb
sbb
adc
cmp
add
sbb
xchg
lahf
test
out
daa
ret
xor
adc
or
lret
dec
and
mov
js
fstp
out
mull
jo
sbb
and
jae
xor
in
xor
or
and
mov
sbb
loop
mov
not
pushl
mov
lea
push
pushf
jmp
pusha
movl
pusha
mov
movl
pushf
movl
lea
jmp
in
jmp
orl
gs
icebp
ss
add
inc
xor
out
or
test
adc
cwtl
pop
lret
dec
fidivl
dec
jle
lea
mov
add
pop
sbb
pop
sbb
jge
jl
add
ss
sar
mov
stc
pusha
stc
bt
and
cmp
jmp
lock
aad
jns
loope
cmp
enter
xchg
xchg
jno
out
jge
lds
jns
mov
hlt
mov
stos
es
pop
sbb
adc
iret
cmp
or
insb
xchg
mov
xor
je
repz
xchg
xor
inc
cmp
mulb
jns
mov
adcl
loope
das
test
shlb
jns
sub
xchg
bound
scas
push
cmc
and
fdivs
daa
and
mov
lea
and
aaa
mov
xchg
push
inc
mov
int3
and
mov
fnsave
cld
push
pop
pop
pop
sbb
jno
addr16
or
xchg
xor
mov
sbb
mov
inc
push
sahf
add
add
fcmovnb
imul
inc
fwait
dec
fld1
aam
pop
sbb
pop
pop
out
lahf
xor
in
pop
stos
mov
rorb
adc
xor
or
pop
inc
ja
movsb
xchg
imul
or
or
dec
jecxz
pusha
or
lret
stos
repz
inc
insb
das
xor
hlt
popf
sahf
testl
popa
push
push
out
add
sub
imul
nop
mov
xchg
jne
icebp
xchg
int3
cli
scas
daa
fwait
in
cld
xchg
xchg
test
out
mov
ror
insl
ret
movsb
pop
cmp
mulb
test
xor
inc
jmp
cmp
pop
jns
add
ret
fs
adc
inc
and
stc
in
push
test
stc
push
sub
loop
aad
inc
andl
hlt
sub
lahf
mov
outsb
inc
lods
push
cltd
mov
cmp
insl
aaa
lcall
xchg
dec
sub
fidivrl
add
aas
orb
sub
sub
cs
lock
mov
rorb
sbb
mov
idiv
mov
fcmovne
mov
cmp
adc
dec
cs
js
fwait
clc
push
pushf
test
aas
xchg
ret
fistpll
mov
aas
and
lret
jbe
imul
pop
mov
aas
mov
jbe
sub
jge
sub
adc
out
xchg
mov
iret
dec
ljmp
idiv
call
jnp
mov
mov
push
test
jnp
jle
push
loopne
add
dec
push
cs
fiaddl
cmp
loopne
add
aad
cmp
int
lea
add
popf
push
shrl
inc
jmp
cmc
push
cmp
pushf
pusha
lea
jbe
bswap
sub
xchg
sar
sar
sub
mov
sar
bsr
add
mov
bsr
add
mov
shr
sub
jl
mov
or
btc
and
add
mov
mov
mov
pusha
call
sbb
push
dec
push
ljmp
in
adc
into
pusha
sbb
mov
pop
push
test
test
fcoml
jge
aaa
xor
and
mov
dec
fcmovu
mov
sub
sbb
add
push
xchg
mov
mov
repz
mov
inc
and
or
add
lahf
lea
push
pushf
movl
pushf
jmp
pusha
mov
or
movw
call
not
call
jo
neg
call
pushf
pusha
movw
lea
jne
add
clc
pusha
movsbl
mov
pushl
call
cmpb
jmp
pusha
push
call
inc
jg
sbb
push
cmp
mov
mov
mov
sbb
fidivrl
lahf
mov
and
jae
test
jl
cmp
sbb
shrb
inc
pop
inc
mov
xor
cmc
call
or
fldenv
pop
iret
mov
adc
mov
es
pop
mov
adc
jne
shr
lock
xchg
pop
mov
scas
sti
mov
sub
cltd
cmp
xchg
iret
push
in
bound
mov
cmp
mov
push
es
jbe
sbb
leave
ficompl
xchg
push
dec
sbb
insb
enter
or
les
mov
lea
test
or
ljmp
sbb
lahf
les
shlb
mov
movzbw
mov
pushf
pushf
pusha
push
lea
jmp
pop
dec
je
jns
inc
cmp
data16
mov
clc
popf
rorl
mov
xor
fcmovbe
movzwl
jmp
xchg
cwtl
ficoms
cltd
push
out
mov
popa
jl
hlt
sbb
hlt
dec
jnp
stc
es
scas
cmpsb
js
call
rorb
dec
sbb
sub
adc
adc
ss
sar
mov
xlat
push
push
popf
shrl
adc
push
adcb
cli
and
mov
repz
ss
pop
dec
rcrb
fs
aad
mov
mov
mov
jb
cmc
pop
push
inc
pop
sahf
leave
pop
inc
xlat
mov
scas
pop
sub
mov
jge
mov
cmc
imul
pop
scas
popf
xchg
mov
dec
pop
sub
mov
dec
or
hlt
rcrb
addr16
jno
pushf
lea
jnp
push
mov
pushf
mov
mov
lea
jmp
popf
jge
sbb
and
mov
loopne
stos
xchg
je
das
xor
mov
fisttpl
adc
fisubl
cmp
cmpsl
fucomp
les
mov
mov
stos
cli
xchg
ret
fs
jmp
gs
aam
push
test
cmp
pop
icebp
insl
prefetch
or
hlt
rol
dec
jb
dec
insl
mov
sbb
jno
int
cmp
push
dec
dec
xchg
sbb
pop
cmp
jo
mov
stos
hlt
loop
fsubrs
lock
outsb
ss
xchg
cld
mov
mov
jge
movl
lea
call
pusha
pushf
call
sub
or
lea
add
xor
sbb
shl
test
mov
push
pushf
xor
movb
mov
stc
repnz
pushf
call
cmp
sbb
push
inc
das
or
jle
popa
add
dec
mov
mov
sbb
pop
mov
sti
cli
inc
sub
stos
dec
jo
pop
xchg
jmp
arpl
mov
lods
ficoml
xor
cmpsb
outsl
negl
add
sub
jo
scas
jp
imull
add
mov
aad
mov
jns
sub
adc
cmp
jmp
lcall
jns
mov
in
sbb
mov
sub
jbe
inc
mov
mov
or
lods
mov
daa
pop
fldenv
inc
in
inc
fdivs
dec
sub
sub
xor
imul
popf
fidivrs
mov
sub
fsubs
in
mov
fnstsw
rolb
push
adc
icebp
adcl
cli
jmp
repz
jns
popf
and
stos
mov
popf
data16
adc
outsb
jns
je
pop
cmpsl
mov
jns
shl
es
cmpsl
adc
add
cmp
add
fidivrl
pushf
xor
pushf
jno
adc
lret
outsb
test
into
cmpsb
sub
mov
sbb
xlat
cld
lret
lea
je
cwtl
rcr
sub
lea
shl
mov
shl
rol
mov
adc
cmp
bsf
add
shr
call
lea
jne
pusha
inc
call
pushf
movb
stos
pusha
pushl
pushf
lea
jmp
add
add
add
xor
mov
cmc
bt
pusha
add
movb
clc
mov
clc
test
pushl
lea
je
pushf
test
bt
cmc
add
cmc
cmp
call
lea
jl
jne
shr
movsbw
pusha
mov
test
pushf
call
lea
jne
call
push
lea
je
test
cmp
cmp
add
cmc
cmp
call
jnp
xor
jns
xchg
rorl
in
or
sub
gs
adc
lea
sbb
sub
sbb
ret
in
imul
pushf
outsl
pushf
mov
and
push
mov
inc
pop
cmp
inc
popa
push
js
clc
test
das
out
mov
filds
rcrb
inc
js
clc
cmp
jnp
out
and
leave
push
xor
mov
push
mov
jge
dec
push
es
inc
cld
push
push
movb
pushl
mov
mov
movl
lahf
lea
pushf
push
jmp
mov
bt
cmc
movzwl
lea
btc
test
adc
btc
mov
clc
cmp
jmp
push
lea
jae
btc
bswap
bts
xchg
mov
not
add
ror
mov
bswap
mov
pusha
pushl
sub
cmc
pusha
repnz
movb
jmp
jmp
movl
pusha
lea
jmp
movl
pushf
pushf
push
lea
jmp
dec
ds
jns
outsb
fsub
sarl
ret
or
sub
and
add
lcall
dec
or
jbe
shl
sub
frstor
leave
and
shrl
lahf
mov
shlb
adc
movl
pop
and
add
lods
nop
out
ret
mov
lret
add
mov
rcl
shr
stc
mov
test
clc
cmpb
call
lret
std
sub
jns
fadds
test
pop
rcl
movups
mov
fldt
xor
mov
sub
inc
fs
cmp
test
add
int
xchg
sti
adcb
daa
stc
enter
mov
sti
cltd
cli
xor
dec
aam
or
in
movd
pop
mov
jp
fldcw
stc
insl
inc
inc
sbb
dec
add
jg
popf
inc
decl
andb
sbbb
cmpsl
cli
push
shr
xchg
stc
movsb
rcrl
dec
adc
fimuls
mov
sti
lcall
icebp
fcmovbe
das
dec
in
int
mov
sti
adc
dec
mov
sub
cmpsb
jmp
dec
push
adc
lahf
add
mov
jns
inc
imul
mov
sbb
jno
add
scas
and
addr16
cltd
mov
das
mov
ret
arpl
aas
push
inc
mov
xlat
jecxz
mov
in
lahf
out
xor
je
sbb
fdivrl
das
xchg
jo
mov
je
pop
ficomps
add
sbb
xchg
shlb
mov
jae
pushf
jecxz
nop
mov
inc
push
rcll
insb
jecxz
fisubs
cltd
adc
out
pop
sbb
and
out
sbb
push
fisubs
sub
mov
mov
addr16
mov
dec
pushf
xlat
add
or
jne
clc
aad
jg
mov
mov
dec
std
hlt
push
mov
xor
in
rcll
xor
ljmp
sub
out
and
jns
jnp
cmp
jbe
mov
je
xchg
push
cmp
test
dec
fildll
lahf
inc
jle
test
jae
addr16
xchg
ret
lods
add
bound
cmp
push
xor
scas
push
jmp
and
mov
imul
sbb
adc
scas
dec
cmp
xchg
aad
inc
cmp
scas
mov
pop
sub
out
aas
test
add
add
cmp
adc
cltd
dec
cwtl
push
popf
pushf
out
push
pop
lock
push
fprem1
mov
xor
std
testl
pop
stos
shll
jecxz
pop
stos
add
mov
xchg
fildl
rolb
lds
sub
pop
push
jb
mov
rcrl
pusha
and
cmpsl
mov
pop
cltd
inc
cmpsl
mov
push
daa
lahf
cmp
or
push
cmpsb
xor
scas
mov
cmp
test
dec
imul
jl
jmp
out
cmp
jg
or
popf
test
adc
clc
sub
adc
pop
loope
xor
jae
sbbl
xor
out
push
jae
mov
dec
imul
or
xor
and
push
mov
inc
ds
jns
hlt
lret
sahf
ss
cmp
mov
mov
lods
in
push
jle
hlt
sub
xlat
mov
ret
repnz
fidivrs
outsb
mov
jae
into
mov
xor
or
stos
cmp
popf
or
cmp
in
mov
outsb
lahf
pushf
lret
adc
mov
or
ja
pop
xlat
or
mov
jb
adc
xor
lods
fisubl
sbb
xlat
js
dec
mov
nop
push
and
mov
inc
inc
add
mov
sbb
fldenv
lret
int
mov
xchg
addb
enter
mov
rcrl
fimuls
mov
leave
push
fiadds
gs
scas
xor
mov
dec
shrb
enter
cwtl
andl
xor
int3
lcall
imul
pop
enter
ror
xchg
das
rolb
lea
imul
dec
ljmp
cmp
test
ja
lret
mov
lock
test
std
or
hlt
das
in
es
push
call
jg
repnz
das
xchg
xor
mov
xlat
pop
andb
movsb
daa
xor
cld
movsb
roll
sub
test
xor
aas
mov
inc
ret
loopne
lods
or
roll
mov
ss
cmp
jbe
loop
test
add
imul
ret
push
mov
add
test
jecxz
fsubrl
dec
hlt
dec
push
mov
adc
and
push
fiadds
addl
inc
jb
sbb
xor
cmp
jae
add
sbb
lods
mov
mov
pop
iret
lret
xchg
sti
mov
scas
mov
shr
imul
sbb
data16
movsb
sbb
testb
mov
call
in
out
rdtsc
mov
clc
sbbb
arpl
dec
addr16
les
pop
fs
mov
inc
decl
test
stos
jne
aaa
add
outsb
push
and
mov
push
test
xor
out
and
out
sbb
js
iret
sahf
dec
sub
pop
ss
and
or
scas
xor
pop
push
push
icebp
pop
in
mov
data16
sub
mov
cmpsb
mov
xchg
cmp
mov
add
or
js
popf
xchg
or
cwtl
mov
int3
mov
mov
or
pusha
icebp
xchg
lods
and
jmp
ret
shrl
int
push
iret
test
pop
in
pop
bound
loopne
dec
push
es
dec
dec
rol
xchg
imul
mov
popa
int3
stc
ljmp
int3
jmp
je
in
sbb
or
nop
pop
mov
outsl
inc
loopne
fsts
sbb
pop
sbb
add
inc
jae
mov
cmpsl
ret
negl
sbb
ljmpw
mov
rorl
adc
sub
out
stos
push
add
sbb
out
push
pushf
and
pop
jno
pop
into
vmwrite
mov
xchg
inc
add
jae
inc
sub
mov
add
nop
push
orl
jns
cmpsl
pop
shrl
xchg
js
and
jecxz
fdivrl
pop
scas
imul
aas
push
test
sbb
pop
dec
rcrb
lret
jp
sub
sub
outsb
js
add
clc
aad
xor
lea
inc
and
loop
inc
bound
popa
mov
jns
cs
push
mov
test
mov
cmpsl
stos
mov
sahf
vmwrite
or
xor
ja
out
je
mov
popf
jb
movsl
add
push
fiaddl
lock
sbbb
ja
out
les
mov
addr16
cltd
xlat
enter
jbe
fstpl
mov
movsl
out
jne
pop
ret
iret
xchg
ficompl
dec
out
pop
shr
testb
stos
xlat
pop
pop
test
mov
adc
into
push
movsl
out
faddl
xchg
push
jns
pop
test
dec
inc
add
jg
cmc
or
nop
shr
popl
add
inc
and
add
in
idiv
bt
cmp
jmp
call
push
jmp
inc
int3
jp
jns
mov
iret
inc
das
out
lcall
jg
xorb
sub
inc
xchg
ss
mov
nop
lcall
sahf
not
xchg
dec
aam
lcall
rep
ficomps
sbb
pop
rcll
ret
dec
pushf
mov
push
movl
push
movl
pushf
pusha
pusha
lea
jmp
pusha
lea
je
jmp
cmc
rcl
sub
mov
lea
call
movsl
dec
mov
loopne
mov
mov
pop
adc
gs
push
lods
xor
mov
dec
add
jns
jp
seto
and
lock
ficoml
fimull
shrb
pop
in
leave
flds
fsubs
jg
clc
or
xchg
pop
mov
aaa
aas
cwtl
clc
daa
gs
jne
and
push
cld
enter
xchg
inc
mov
push
jl
addl
push
enter
push
dec
sti
inc
loop
enter
mov
inc
ret
push
jns
fiadds
out
lret
loope
das
sahf
scas
repnz
into
mov
and
inc
xor
int
fmuls
out
fsubs
push
scas
or
inc
aas
fimull
popf
notl
test
ret
icebp
push
jns
adc
enter
addb
sub
pop
dec
je
in
addr16
xor
aad
gs
mov
into
push
mov
hlt
mov
in
pushl
jne
pushl
adc
lods
pop
cltd
jns
push
cmp
jecxz
inc
cli
mov
lds
jns
sbb
inc
enter
push
popa
or
cmp
pop
cmp
fisubrl
ret
dec
adc
fsub
mov
and
shlb
adc
mov
mov
stos
test
cmp
xor
cmp
add
lcall
mov
popa
jmp
pop
movb
adc
sbbb
jle
ret
push
out
aad
jae
out
icebp
adc
mov
add
adc
inc
fmuls
xchg
outsb
jno
mov
add
decb
adc
pushf
xor
mov
setnp
pushl
popl
setnp
jmp
push
ror
pushf
inc
pushf
pushf
lea
call
cmp
test
call
str
call
mov
cwtl
pusha
call
test
pushf
bt
or
pushf
pusha
push
lea
je
pushf
mov
mov
lahf
mov
lea
push
jmp
mov
or
movb
lea
je
cmp
stc
cmp
clc
or
pushf
call
call
cmc
push
push
add
jmp
pushl
popl
pusha
push
pushf
pushl
ret
jecxz
inc
or
ficoml
push
testb
mov
popa
flds
mov
in
jb
dec
outsl
cmpsb
fcmovb
pop
xorb
fnstenv
mov
mov
push
push
mov
cs
mov
and
cltd
loopne
call
movl
inc
and
mov
fs
idiv
pusha
pusha
push
movl
pushl
pushf
movl
push
pushf
pushf
movw
lea
jmp
rol
test
bt
pushf
cmc
add
call
mov
mov
jmp
jmp
mov
inc
mov
stos
outsb
fldl
jg
leave
xchg
test
lods
pop
xor
xchg
fisubs
or
mov
negl
and
js
pop
addb
clc
fwait
jno
push
das
mov
add
sahf
ja
mov
jecxz
xor
push
popa
xor
pusha
pushf
lea
jne
jmp
test
bt
jmp
call
nop
aad
or
xor
lds
inc
in
roll
test
cmpsb
mov
xchg
jns
mov
pop
divl
scas
arpl
out
pop
mov
aaa
jbe
pushf
add
mov
cmp
into
xlat
lock
cmp
ret
push
dec
dec
push
dec
movsl
mov
in
addl
adc
add
mov
lods
xchg
movsb
pop
add
stos
std
cli
xchg
push
loope
pop
pop
push
dec
mov
add
inc
aaa
mov
pushl
rcrl
pop
or
fstl
push
cli
inc
mov
cmpsb
in
jns
push
addl
push
out
movsl
arpl
repnz
pushf
and
jns
pushf
cmp
xor
movsl
jno
mov
in
out
pop
sbb
mov
jno
leave
push
mov
into
sbb
mov
pop
ret
mov
mov
es
add
movl
pushf
pusha
pushf
lea
jmp
pop
call
jmp
shrd
pusha
mov
bt
lea
bt
sar
shl
aas
sub
rcl
aas
push
lea
rol
or
push
cmp
push
shr
and
push
shrd
mov
pusha
cmp
bt
test
push
mov
call
movsbl
movl
seta
lea
push
call
movl
pusha
lea
jmp
cmpxchg
or
ret
sti
scas
xlat
add
mov
mov
mov
jno
push
xchg
cmp
sahf
sbb
xchg
lcall
jns
aas
inc
xchg
cmp
and
xor
arpl
xor
and
ret
pop
or
sbb
jmp
repz
iret
repz
jmp
inc
and
mov
out
jl
mov
decl
pushl
ret
pushl
popl
movzbw
mov
bswap
jmp
call
lea
je
call
sub
or
mov
mov
push
jne
add
xchg
xchg
and
repz
fcmovu
mov
gs
sub
pop
jg
adc
stc
daa
jb
js
mov
cs
lods
insb
rolb
loope
fwait
or
ret
or
mov
jne
mov
xchg
sub
pop
push
pushf
adc
xchg
mov
mov
and
pop
jns
xchg
xchg
stc
and
out
fwait
es
outsl
dec
cwtl
xor
inc
xchg
sti
sub
jge
mov
xchg
and
mov
push
in
ja
fadds
test
je
push
aam
inc
pop
stos
bound
and
sub
sub
jl
adc
push
ja
fcoms
xlat
mov
fistpl
shl
push
jo
aaa
lcall
sbb
in
imul
bsf
movzbw
call
loopne
cmp
pusha
test
notb
mov
pop
sub
orl
insb
cmpsl
jnp
pop
jns
loopne
popf
inc
cwtl
xlat
subb
jl
or
lcall
jno
mov
pop
xchg
dec
xchg
mov
lahf
pop
add
fsts
lods
dec
fdivs
mov
lea
outsb
pop
push
and
jo
clc
adc
xchg
pop
jne
lods
dec
fcomps
inc
jno
or
cvtdq2ps
das
fucom
jl
lret
pop
mov
sub
inc
dec
add
jae
clc
jmp
pop
rclb
jns
pusha
push
scas
ds
lods
mov
pop
leave
pusha
and
lret
push
inc
lret
sub
push
jns
push
lret
sbb
in
sahf
sub
pop
and
into
xchg
les
rol
jb
dec
dec
push
mov
dec
test
and
cmp
or
adc
stc
hlt
inc
imul
lods
cmc
outsb
push
scas
fwait
iret
pushf
cmpsl
clc
stc
ss
popa
ja
sub
dec
call
inc
fnstcw
adc
fnstenv
jns
pop
mov
icebp
mov
inc
xor
xchg
add
mov
in
xchg
call
xor
and
movsl
jno
fcos
add
gs
sbb
xor
stos
push
mov
into
gs
mov
sahf
rorl
xor
ret
gs
sbb
jns
mov
and
adc
mull
jle
fadds
jns
dec
nop
push
adc
mov
pushf
mov
jbe
dec
ljmp
jp
in
stos
and
pop
lea
rcrl
and
push
adc
cmp
dec
push
rcll
or
xchg
xchg
dec
mov
mov
adc
sub
bound
shll
js
mov
lea
cmp
sub
jle
movsb
mov
and
pusha
cmpsb
xchg
movsb
xchg
mov
das
das
mov
dec
aad
inc
stos
shl
repnz
mov
es
xor
pop
and
out
lret
stos
popa
mov
dec
xor
cs
pushf
popf
fnstenv
sbb
inc
fidivrs
hlt
and
jge
dec
mov
sar
mov
adc
push
lea
jmp
cmp
dec
adc
jns
gs
in
jmp
xchg
lret
jl
cltd
movsl
das
inc
adc
scas
mov
mov
pop
cmp
mov
pushf
jle
data16
pushf
test
dec
cmc
and
xchg
aam
or
xchg
or
mov
sub
aaa
mov
push
inc
inc
inc
loope
je
mov
inc
mov
loopne
lds
mov
xlat
push
imulb
lret
sti
mov
xchg
loope
jae
lods
lret
flds
in
sahf
scas
aaa
lret
adc
pop
xchg
dec
lock
hlt
clc
mov
jg
dec
sub
les
cmpsl
jmp
mov
dec
inc
lock
roll
lahf
xor
cmp
out
push
mov
fcomip
clc
mov
imul
mov
stos
in
inc
adc
cld
or
lds
xor
jle
push
clc
xor
pusha
lea
jmp
pushl
popl
clc
cmp
call
movw
stc
test
xor
pusha
mov
pushf
movb
lea
jmp
shl
xor
jns
rorl
icebp
nop
dec
push
cmp
in
xor
fiaddl
enter
mov
xchg
lahf
fcomi
inc
jl
sbb
daa
pushw
enter
xchg
sub
into
aaa
mov
out
mov
mov
lret
add
pop
adc
jecxz
mov
jle
aaa
jns
sub
jns
sbbl
std
aad
push
push
rolb
inc
sub
jg
sub
add
mov
fstpl
dec
sarb
mov
jns
xor
cmp
and
std
loope
xor
jbe
hlt
mov
cmp
mov
cmpsb
movsb
out
mov
loopne
pop
xchg
pusha
pusha
movl
pushf
call
lea
ja
and
adc
call
inc
jmp
lea
xchg
movzwl
not
lea
pusha
call
pusha
jmp
stc
jmp
cmp
outsl
add
stos
jnp
imul
inc
decl
fucomip
faddl
jns
mov
out
xor
jge
jo
xchg
rorl
xchg
sub
fcmovb
cmp
pop
scas
in
ret
ror
pop
cwtl
enter
mov
not
insb
repz
jns
or
out
popa
lret
cmp
rcll
in
dec
pushf
subl
push
jb
movsb
inc
push
lret
in
xchg
inc
pop
ds
push
cmp
in
dec
pushf
fld
mov
lods
cli
sub
jnp
push
out
pushf
sub
icebp
sbb
xchg
ret
ficoml
mov
dec
leave
push
ret
aam
mov
jmp
xor
test
dec
push
sbb
mov
add
mov
sbb
js
cmc
in
jno
jo
or
pop
out
add
mov
ret
mov
and
test
mov
lea
jmp
call
movl
pushf
movb
movl
pushf
push
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pusha
call
dec
jnp
add
sbb
ja
push
xchg
xchg
fmull
push
psrld
pushf
scas
or
ficoml
ja
fwait
jno
or
jne
jmp
pop
icebp
js
rorb
mov
insl
mov
in
pop
cli
dec
sbb
add
mov
add
jo
call
fs
push
lea
call
pusha
adc
call
cmp
mov
test
add
test
add
jne
pushf
pushl
test
call
jmp
call
sub
jno
js
pop
insb
aaa
ss
fisubrs
addr16
pop
pop
ret
inc
jle
flds
inc
js
and
icebp
inc
and
aas
aaa
push
pop
and
mov
inc
ret
push
cli
push
mov
es
jp
lcall
mov
adc
push
cmp
add
sbb
ret
push
and
test
test
add
fidivl
add
dec
stos
sbb
adc
sbb
cltd
mov
fidivl
and
sub
add
mov
jns
pushf
js
fimuls
or
jecxz
cmp
sbb
inc
adc
sbb
cmpsb
call
nop
dec
adc
dec
fisttps
push
fldcw
dec
and
clc
inc
dec
push
sub
jmp
dec
cli
pusha
jl
pushf
lock
fidivs
andl
cmp
enter
ficoml
lock
inc
adc
pop
pusha
mov
arpl
js
bound
pop
pop
xchg
mov
add
sub
inc
xchg
leave
push
js
js
enter
into
push
fnstenv
dec
shrb
xchg
mov
arpl
fisubl
mov
xchg
lock
fsubrl
jecxz
jg
lret
stos
xchg
clc
pusha
jl
fadds
sti
out
shrl
sbb
sbbb
dec
xchg
sub
adc
or
scas
rcrl
mov
outsb
imul
movsl
adc
mov
mov
xor
js
pop
outsb
aaa
pop
fildll
sahf
ja
add
sub
xchg
test
cmpsl
in
js
icebp
dec
push
mov
xchg
mov
call
js
mov
int
adc
pop
mov
sub
add
ja
jno
cmp
mov
xchg
or
stc
fs
or
fiadds
sbb
cmpsl
ret
fst
inc
and
enter
stos
mov
pop
jle
mov
or
xlat
and
or
pushf
xlat
ss
jns
stos
mov
pusha
mull
enter
stos
mov
test
sub
cmc
mov
mov
mov
jmp
add
pushl
ret
pushf
pushf
pushl
movl
jmp
lea
je
cmp
clc
call
btr
jmp
pushfw
or
js
lods
push
cmp
icebp
mov
out
sahf
inc
arpl
push
fsubl
in
imul
jmp
jno
cltd
cmp
xchg
jns
or
sbb
mov
push
dec
xlat
out
clc
pop
mov
pop
sbb
popf
mov
push
orb
lcall
hlt
pushf
pusha
mov
lea
jmp
pop
jmp
sub
pop
cld
js
jg
sub
sbb
xor
adc
aam
mov
xchg
sub
xor
xchg
test
fcmovnu
andl
xchg
xor
repz
mov
cmpsl
enter
ljmp
sub
push
rcrl
ja
mov
sub
ja
lret
shr
push
xchg
lods
stos
ja
ja
and
stc
cmp
push
xor
push
hlt
lods
popf
add
in
std
jmp
cmpl
dec
lock
xor
xor
pushf
movb
pushl
ret
sar
btc
mov
push
cmc
mov
stc
shl
jmp
call
testl
icebp
or
cli
ja
and
sbb
dec
pop
lea
cmp
imul
call
fucom
aam
xlat
mov
iret
push
ret
js
rclb
das
int3
lods
xor
insl
mov
add
xor
es
hlt
jns
add
push
aaa
popa
jae
add
js
lea
iret
xchg
mov
daa
aaa
cmpl
ds
add
cld
js
ja
adc
iret
dec
xchg
movsl
fwait
xchg
shl
cmp
pushf
mov
out
dec
test
push
mov
rorl
pop
sub
push
movsb
adc
push
pop
and
and
ss
inc
adc
fimuls
xchg
jb
imul
fbld
or
outsl
jnp
repz
in
jmp
xor
xchg
mov
and
xor
lcall
add
dec
cs
ret
fcmovne
xor
xchg
mov
xchg
imul
sahf
xor
cmp
jge
add
sub
adc
aam
add
pushf
lea
jne
pusha
call
movl
push
movl
pusha
pushf
pushf
lea
jmp
jmp
and
ficoml
test
ss
hlt
roll
xor
ja
push
daa
cmp
cli
js
aam
sahf
sti
mov
stc
rolb
push
mov
hlt
jbe
xchg
lods
fdivrl
popa
repz
imul
xlat
jae
arpl
sahf
addl
int
sub
mov
add
in
aas
aas
pop
mov
test
cmpb
pushf
pusha
push
pushl
lea
jne
xor
mov
jmp
mov
pushf
mov
pushf
pushl
ret
pushf
pushf
lea
ja
call
movb
jmp
mov
jmp
stc
mov
push
clc
pushf
stc
cmpb
mov
lea
jne
movzbl
rcr
daa
xor
stc
btr
pushf
call
pushf
cmp
jmp
lea
jne
push
jmp
cmp
stc
js
test
outsb
add
or
and
js
push
lret
cltd
lahf
push
jnp
xchg
vphsubbw
lods
incl
xchg
or
lahf
add
fisubrl
in
ljmp
mov
cmp
mov
in
neg
dec
push
mov
aaa
subb
jge
xchg
dec
stos
cmpsl
int3
xor
nop
lret
add
jne
mov
push
pushf
mov
movl
jmp
mov
push
pushf
movzbl
pushf
mov
pusha
mov
pushf
pushf
pushl
ret
call
pushl
popl
pushf
pusha
movb
cmp
cmp
pushf
movb
lea
ja
shr
rcl
sub
inc
add
and
rcr
stc
mov
rcl
or
mov
test
push
repnz
jmp
and
fidivl
test
shrl
inc
xor
popa
ret
into
in
aam
out
jnp
call
fimull
sbb
movsl
jno
prefetchwt1
sbb
testb
jno
repz
int3
cmpl
push
jb
dec
ss
and
mov
movl
pushf
lea
jmp
lea
call
stc
cmp
clc
pusha
sub
pushf
lea
jne
pushf
call
clc
test
test
pushf
cmp
mov
lea
jae
call
push
out
sbb
xchg
js
loopne
test
xchg
inc
inc
mov
mov
push
xor
jge
cmpsl
dec
cmpsb
loop
sbb
dec
xchg
test
sbb
cmpsl
jp
ficompl
lcall
lods
loop,pn
mov
cwtl
pushf
mov
addr16
mov
leave
stc
call
mov
dec
clc
js
mov
dec
mov
jne
jg
and
adcb
les
mov
adc
and
sbb
shll
adc
ja
sub
orl
mov
fsubrl
dec
jmp
sbb
fucompp
xchg
aaa
daa
pop
aam
out
mov
loop
out
pop
push
push
adc
xorps
fistpl
test
push
test
testb
ficompl
adc
xchg
jle
adc
xchg
dec
xchg
xor
push
pop
idivb
xchg
loopne
rcrb
inc
sub
scas
cmp
imul
fiaddl
pop
cmp
inc
pop
stos
mov
out
cmpsb
aas
jno
cmc
js
cs
push
push
cmp
stc
sbb
std
aaa
js
mov
cmpb
mov
cs
jmp
gs
test
ss
xchg
icebp
nop
and
jge
movsb
pop
dec
pop
popa
xchg
fcoml
leave
inc
fsts
and
popa
sbb
dec
jmp
adc
fcmovnb
add
inc
pop
xor
cmpsl
adc
outsb
imul
dec
push
cmpsb
sub
out
pushf
filds
fwait
mov
int3
lods
jne,pt
push
mov
sbb
sarl
xchg
jmp
pushf
lea
jae
cmc
jmp
pushl
lea
je
inc
adc
rcr
add
lea
shl
rcr
btr
sub
rcl
shr
bts
inc
mov
bt
pushf
movsbw
dec
add
and
add
add
shl
mov
pushf
jmp
jmp
xchg
lahf
idivb
push
push
sbb
movsb
rolb
outsb
imul
sbb
idivb
insl
negb
pusha
iret
divb
cmpsl
call
mov
pusha
dec
pop
dec
mov
inc
fidivrs
cwtl
js
fldt
mov
adc
leave
mov
fnstenv
adc
dec
fadds
jmp
loope
xor
pop
or
pop
mov
jno
in
dec
mov
fldcw
dec
fmul
mov
pop
push
into
jle
push
sahf
int3
popf
cmp
sub
out
sbb
push
add
jnp
xchg
aas
and
imul
cwtl
bound
mov
loop
and
sub
adc
sub
sbb
xlat
sbb
adc
int
loopne
mov
jge
aad
ficomps
ret
jle
mov
xor
add
mov
mov
mov
movb
push
lea
jmp
movsb
imul
mov
pop
jne
lret
xor
ljmp
clc
lds
cmpsl
cmp
out
sbb
outsb
pushf
popf
in
daa
mov
ret
adc
push
mov
out
jne
mov
mov
or
std
xchg
fldenv
pop
dec
fdivs
mov
cwtl
push
call
hlt
les
adc
notb
mov
dec
fsub
stc
pushf
lds
movsb
mov
adc
int3
jb
pop
sbb
push
sub
add
das
jmp
imul
sbb
xlat
push
lea
jmp
imul
test
test
call
btr
mov
not
cmp
push
add
pushl
movzbw
call
pushf
jmp
lea
je
push
mov
pushf
pushf
adc
mov
push
pusha
pushf
lea
jmp
pusha
pusha
jmp
dec
push
fmuls
aaa
pop
cli
inc
pop
jle
shrb
mov
dec
in
js
pop
les
rorl
movb
test
jbe
popa
mov
xor
fsubs
inc
rcl
or
imul
jmp
push
and
test
or
fwait
hlt
mov
nop
xchg
sbb
dec
hlt
sbb
in
out
jbe
xor
or
dec
aam
sub
inc
adc
rcrb
xor
sbb
xchg
push
pop
repz
lahf
dec
mov
mov
push
cmp
cmc
test
jo
adc
loop
mov
stos
cmp
sub
sbb
or
sub
test
add
push
cmp
push
mov
sub
arpl
cmpsl
push
pop
pop
in
stc
inc
mov
and
cmc
dec
js
icebp
lea
inc
hlt
arpl
cmpl
sbb
or
push
inc
pop
lcall
mov
jae
xchg
out
xor
leave
stc
mov
sbb
mov
push
cmp
xlat
push
fsubp
mov
shll
sub
mov
std
ret
xchg
adc
inc
mov
sub
int3
sub
mov
pop
push
cmp
add
and
inc
int3
cmc
jo
popf
push
clc
orl
xchg
out
clc
push
adc
popf
add
mov
shll
test
lods
jmp
jp
clc
sub
mov
cwtl
hlt
and
mov
lret
add
idiv
scas
cmc
xchg
adc
mov
outsb
add
stos
xchg
xchg
mov
jbe
mov
inc
jns
sahf
cmp
divb
out
scas
xor
xchg
sbb
sbb
fcmove
fcmovb
incb
fs
lahf
cmp
jge,pn
add
cli
add
or
in
movsb
add
outsl
iret
dec
and
mov
js
push
into
push
enter
lret
inc
lods
adcb
mov
loop
lods
jbe
lock
mov
repnz
data16
lahf
cmp
xchg
jmp
jl
cmpl
ljmp
ljmp
fsubl
cmp
cmp
xchg
setnp
fildl
and
add
cmp
mov
xor
lcall
adc
and
lcall
sbb
xchg
call
lea
je
push
mov
sub
bt
stc
call
cmp
call
jmp
jns
andb
shlb
shlb
dec
push
ret
aaa
dec
aaa
ret
push
ret
cmc
pusha
cmp
jmp
or
lock
fimull
jmp
popa
and
fadds
int
pop
xchg
lahf
mov
scas
enter
sbb
adc
fwait
jno
push
jl
push
mov
adc
dec
or
fwait
jno
sbb
pop
push
pop
addl
rclb
out
in
call
ret
int3
in
fsubrs
xor
and
ret
sub
dec
mov
test
aaa
mov
aaa
inc
inc
dec
adcb
lcall
test
push
dec
daa
ret
ret
mov
daa
mov
ret
mov
rcrb
ret
push
jo
cmpb
inc
lcall
and
mov
pusha
pushf
pushl
ret
movl
movb
push
mov
pushf
push
mov
pushl
ret
jp
mov
orl
mov
push
add
fwait
cmp
insl
stos
adc
cs
fstpt
cmp
cmp
das
xchg
or
and
jno
and
pop
int
or
xor
rolb
pop
xchg
jmp
or
sbb
pop
xorl
sub
int3
xlat
mov
inc
fwait
and
pop
sahf
adc
mov
scas
push
shlb
xchg
pop
imul
inc
rolb
pushf
movl
pushf
pushf
pusha
lea
jmp
lea
je
jmp
call
pushf
push
mov
pusha
lea
call
push
jmp
cmp
pushf
movb
mov
lea
jnp
jne
pusha
jmp
not
movzwl
push
pop
movzbl
movzbl
lea
pusha
movzbl
not
mov
pushf
lea
call
jmp
pushf
lea
ja
push
pusha
lea
jb
cmp
call
call
push
not
clc
jmp
stc
xor
pushf
jmp
clc
mov
stc
call
mulb
inc
loop
pop
xchg
push
adc
push
outsb
cltd
xorl
js
sbb
jno,pn
call
mov
xchg
fisubl
and
mov
add
scas
inc
pop
mov
jnp
push
mov
xlat
pop
mov
repnz
xchg
xor
pop
jo
lahf
int3
lcall
call
mov
mov
push
nop
sbb
mov
adc
inc
push
aad
insb
add
dec
mov
int3
pushf
incb
mov
outsb
fistps
js
sbb
mov
scas
inc
mov
sub
and
aam
dec
int3
aas
dec
push
outsb
aaa
push
popf
fcmovnb
loope
insb
lock
loop
sbb
js
pop
or
mov
inc
stos
and
push
adc
or
cwtl
push
mov
add
shr
test
dec
in
movsl
pop
mov
and
sti
in
cmp
leave
jmp
mov
movsbl
pop
bswap
pushf
lea
jmp
mov
mov
movl
pushf
movw
lea
jmp
mov
fisubrl
pop
cmpl
mov
std
mov
fidivrl
inc
in
and
cmp
jbe
add
pop
and
mov
sbb
adc
repz
pop
test
faddl
stc
mov
xchg
mov
mov
add
out
stc
outsb
pop
cwtl
and
or
adcl
jae
sbb
pushf
mov
xchg
mov
push
sub
lcall
mov
ja
jo
adc
jno
or
outsb
notl
fmul
sbb
dec
aaa
popf
mov
addr16
popf
adc
lock
call
pushf
cmp
cmp
or
pushf
mov
pushf
pushf
lea
jne
not
bsr
lea
btc
mov
cmc
bt
or
call
mov
fiaddl
arpl
mov
mov
gs
adc
inc
daa
mov
andb
icebp
cwtl
stc
out
cmp
out
mov
adc
out
outsb
cld
es
mov
leave
cwtl
jp
ljmp
iret
pop
mov
inc
ficoms
jns
sub
push
and
cmp
or
cmpsb
sub
addr16
lea
ja
bt
clc
imul
stc
add
pushf
lea
jmp
pushf
movl
lea
jnp
pusha
mov
push
pushf
pushl
ret
leave
jg
js
pop
movsl
pop
idiv
sub
test
fisubs
cmp
sbb
addr16
jbe
loop
pop
aam
ficoml
mov
jnp
fstpl
sbb
inc
clc
sahf
cld
sbb
ss
push
lret
fs
je
pusha
push
stc
cmp
mov
pushf
pushl
lea
jle
je
pusha
push
push
pushf
lea
jmp
jmp
pusha
pushf
lea
je
push
pusha
pushf
pushf
lea
jmp
bswap
lea
push
mov
push
jmp
pushf
movb
lea
je
push
adc
movw
movb
push
pusha
lea
jmp
ror
pushl
jmp
movl
lea
je
jmp
cmp
jmp
mov
movb
stc
jmp
add
mov
call
out
mov
mov
hlt
pop
popf
pop
enter
dec
add
or
dec
outsb
push
imul
ljmp
imul
push
mov
push
mov
dec
jno
jae
sub
mov
jecxz
push
adc
js
out
lods
inc
and
in
out
push
xchg
or
add
fiadds
int
xlat
sub
sbb
scas
idivl
sub
in
scas
insl
bound
lret
addr16
xor
stos
lea
int3
setp
sbb
movsl
iret
mov
out
mov
int3
arpl
lret
fmuls
cmpsb
dec
mov
jp
shrl
xchg
lret
lcall
xchg
cltd
xchg
outsl
leave
test
sub
hlt
mov
cltd
add
stc
xor
xor
dec
cltd
int
fldenv
mov
mov
add
and
pop
xchg
in
dec
inc
xchg
pop
dec
fwait
add
adc
xor
mov
push
test
and
shll
pusha
repnz
and
add
lock
xlat
pop
add
repnz
outsb
rclb
pushf
mov
mov
sbb
lea
enter
or
sub
xchg
cmovbe
and
adc
lret
popf
lret
lcall
add
adc
clc
addr16
mov
inc
xchg
insl
push
imul
xor
stos
clc
pop
or
jg
lcall
push
xor
leave
fistpll
repz
jmp
insl
sub
push
addr16
lahf
or
fcmovbe
pop
mov
test
mov
pop
iret
loop
cmp
repnz
in
lahf
scas
lds
mov
in
sub
mov
dec
inc
pusha
mov
negl
adc
jnp
jmp
mov
pop
mov
jmp
and
adc
sub
adc
popf
xchg
mov
rcpps
dec
mov
mov
mov
dec
fwait
data16
mov
cmpsl
xchg
int
stos
or
sbb
shll
adc
je
mov
leave
stos
jns
lcall
jo
push
mov
jle
enter
lea
push
xor
icebp
fcomi
xor
pop
pop
sub
push
aam
movsl
cwtl
adc
or
insl
push
gs
test
jne
dec
xchg
adc
jg
loope
imul
jno
jge
loope
add
jmp
dec
out
sbb
arpl
and
rorb
sbb
pop
and
inc
cmpsb
inc
std
jl
cmpsl
movsl
int3
cmpsl
sub
mov
sbb
enter
mov
or
mov
xlat
mov
dec
sub
ds
std
leave
and
mov
push
mov
int
jnp
pushf
push
xorl
xchg
fbld
rorl
sub
out
shll
inc
inc
je
jl
js
mov
cwtl
pop
je
lods
pop
mov
or
aas
lock
lock
bound
mov
loopne
addb
ret
push
popf
and
sub
jge
fstps
gs
mov
in
call
js
pushf
lcall
in
movsl
ror
lahf
mov
pusha
fmull
xor
dec
test
in
sbb
mov
fistps
repnz
sub
shlb
xor
std
xor
fnstcw
int
test
sbb
or
sub
mov
lahf
popa
dec
mov
pop
mov
or
dec
loop
add
push
test
mov
inc
mov
and
pop
roll
xchg
sbb
push
mov
dec
push
out
jo
push
inc
in
repnz
cmp
dec
ja
loop
shrb
jns
mov
push
js
jg
int
dec
pop
pop
mov
lcall
dec
dec
lahf
sub
adc
xchg
cwtl
mov
mov
mov
and
enter
test
jb
push
mov
inc
pop
aad
jbe
fs
jns
in
js
sbb
aad
adc
gs
lcall
cmpsb
jle
outsb
daa
in
push
lcall
mov
add
add
movsl
iret
js
or
out
and
pop
jno
imul
int3
xchg
or
inc
popf
xchg
adc
enter
xchg
test
push
or
andl
movsl
lds
hlt
repnz
mov
jg
lcall
xchg
mov
aas
idivl
hlt
and
stos
ja
add
out
mov
push
mov
test
insb
int
add
call
pop
cltd
mov
ds
or
mov
test
xchg
dec
pop
bound
or
cmpsb
stos
pushl
adc
xchg
sbb
sbbb
xchg
repnz
mov
jnp
insb
out
xchg
inc
popa
call
mov
push
imul
pop
test
sbb
push
out
cmpsb
loope
pop
mov
out
in
imul
in
xchg
call
rcr
xor
cmpsb
sbb
roll
movsb
and
xchg
cmp
mov
out
les
nop
int3
orb
and
cmc
and
adc
mov
cwtl
insl
dec
leave
call
push
add
sub
icebp
jbe
outsb
jg
sti
in
xchg
adc
addr16
mov
gs
mov
popf
shlb
repz
sbbb
popa
jmp
add
mov
mov
jmp
xchg
rorb
andl
mov
push
repnz
push
cmpsl
in
pop
loope
and
repz
pop
xchg
in
jmp
sbb
jns
out
paddusw
lods
jge
xchg
adc
ret
shr
cmpsb
insl
mov
mov
lcall
mov
jno
shll
dec
lds
adc
in
xchg
mov
mov
xlat
cmpsb
push
dec
aam
loopne
sbb
cmp
imul
push
mov
jns
mov
mov
dec
mov
mov
jp
iret
dec
sarl
or
stos
cmp
imul
es
loope
xor
std
dec
loope
aam
fisubs
gs
ds
lcall
pop
les
add
out
cmp
mov
sub
sar
loopne
mov
loope
in
sub
cmpsb
nop
ljmp
leave
movb
sbb
out
inc
jl
sub
enter
lds
adc
fs
add
mov
mov
int3
xchg
cmpsl
sub
js
mov
gs
xlat
test
adc
or
mov
test
inc
stos
xchg
aaa
imul
pop
sbbb
or
imul
sub
sub
mov
and
mov
xchg
jmp
shlb
sub
ror
and
imul
inc
mov
inc
jl
es
test
push
jecxz
xchg
inc
stc
sub
mov
ret
mov
sub
test
dec
loope
test
les
inc
pop
bound
inc
xchg
xchg
es
cltd
enter
cmpsl
pop
add
xchg
dec
mov
lahf
test
dec
add
movsl
pop
fs
add
cli
mov
jnp
pop
in
imul
inc
test
mov
popa
or
sub
mov
xchg
test
jmp
test
test
call
jmp
bound
bound
enter
aam
pop
cmpsl
test
enter
mov
xlat
ret
pop
and
push
or
nop
int
pusha
in
negb
call
icebp
adc
imul
int
ljmp
jmp
cmpsb
sbb
mov
movsl
out
xchg
cltd
call
and
pop
and
addr16
mov
shrl
add
shlb
loop
mov
dec
stc
push
dec
and
ljmp
xchg
icebp
addr16
test
mov
xchg
adcl
push
and
inc
mov
cwtl
call
pop
xchg
jmp
fisubs
jno
cmp
xchg
sarl
jno
stos
mov
mov
add
pop
and
shlb
mov
rcl
jno
std
cmp
sub
mov
cli
mov
int
inc
movsb
insl
sbb
xor
mov
fnstsw
mov
out
movsl
jmp
outsl
ljmp
sub
mov
inc
add
ja
xchg
std
imul
add
shlb
je
xchg
dec
shrl
fcomp
pop
sbb
iret
test
mov
jl
inc
inc
dec
mov
lcall
popa
xor
imul
or
loope
sbb
lcall
ret
pop
ss
mov
inc
xor
lds
sbb
lds
loopne
loopne
es
mov
jns
inc
mov
jmp
push
imul
sub
jecxz
cmp
enter
popa
movsb
out
sbb
enter
cmpsb
jb
das
out
insl
jmp
ja
mov
sub
mov
rcrl
push
inc
insl
repnz
rcrl
mov
out
rorl
loope
push
out
cmc
movsl
xor
mov
cmp
mov
test
mov
cmp
cmpsl
loope
pop
mov
push
shll
arpl
sbb
out
mov
shl
add
xor
cmp
stos
cltd
out
cmp
addr16
xchg
pop
fdivrs
test
loop
rorb
cmpsb
mov
hlt
jb
scas
xchg
jno
sbb
or
pushl
fs
sub
adc
imul
add
out
xchg
jl
xor
add
std
pop
cmp
xchg
sbb
mov
fistl
sub
movsl
addr16
inc
adc
push
mov
imul
orb
and
shl
lsl
inc
cmp
stc
jmp
imul
shrl
mov
test
mov
jmp
cld
test
lret
inc
fucomip
daa
xchg
iret
sbb
jb
out
lret
dec
cmp
add
fadd
adc
xor
inc
aam
push
push
fstps
fs
jnp
pop
sub
mov
push
scas
or
jb
xchg
test
mov
add
cmc
xor
loopne
rorl
je
data16
fiadds
jns
mov
imul
inc
mov
movzwl
fsub
inc
in
mov
inc
and
in
scas
data16
pop
xchg
imul
repnz
sub
mov
mov
arpl
gs
fbld
mov
xchg
xlat
imul
imul
pop
addr16
pop
movsb
test
test
out
cmp
pop
or
mov
loopne
and
mov
sbb
imul
sbb
imul
test
fsubr
push
movsl
pop
call
imul
call
push
jmp
imul
jmp
cmpsl
mov
xchg
test
push
cmp
aad
adc
cmpsl
test
loopne
cwtl
cmpsb
xchg
test
mov
mov
inc
arpl
enter
cmpsb
lahf
gs
push
out
test
movsl
xchg
sub
es
pop
or
in
out
xchg
leave
mov
bound
add
bound
pop
sahf
cmpsl
inc
aaa
sbb
enter
add
gs
push
addr16
sbb
mov
test
mov
out
pop
outsl
andl
xchg
in
lahf
test
pop
mov
cmp
daa
pop
jle
dec
lcall
sub
out
jbe
mov
jecxz
out
add
ret
fimull
mulb
xor
mov
mov
repz
shl
xchg
mov
ret
test
ss
mov
test
jo
outsb
pop
fistpl
scas
xor
lahf
lret
push
add
and
ret
mov
dec
daa
xchg
pop
and
jno
xchg
gs
xor
mov
lds
rcrb
ret
lret
and
xlat
xor
loop
aam
inc
xchg
repnz
pop
jmp
out
mov
adc
call
bound
sbb
lods
jne
into
loop
fnsetpm(287
fwait
shll
pop
out
push
jp
and
int3
dec
jnp
mov
call
mov
mov
cmp
jecxz
insb
sub
test
mov
es
aam
insb
cmp
push
xchg
loope
pop
inc
add
pop
and
loop
jge
out
dec
lea
enter
sub
mov
mov
mov
pop
pusha
inc
out
or
sti
aad
add
dec
jp
add
call
xchg
inc
int
decb
pop
and
adc
mov
cmc
stc
cmpsb
or
out
les
inc
dec
pop
add
out
cmpsb
insl
adc
cmpsl
mov
lods
std
out
rcl
pop
lret
adc
mov
movsl
sbb
movsl
inc
js
push
jl
mov
adc
leave
test
pop
pop
lcall
or
cmpsl
mov
jg
jne
xchg
pop
push
fsts
aas
inc
lret
mov
mov
ret
cmp
xor
jmp
jmp
shlb
int
loope
cmp
gs
sbb
aad
in
outsb
bound
mov
mov
cld
in
cmpsb
stc
and
ret
sbb
fistl
inc
mov
and
dec
sahf
roll
insl
test
jge
bound
out
mov
shll
mov
jb
lcall
loopne
pop
in
xchg
mov
push
push
frstor
aas
pop
mov
pop
pop
jne
jnp
rolb
sub
pushf
es
mov
out
syscall
cmpsl
sub
inc
enter
popf
addr16
popa
leave
shll
out
push
push
shll
mov
mov
mov
mov
mov
les
cmp
mov
push
lret
loopne
mov
jae
int3
push
add
lods
mov
xchg
mov
and
xchg
push
push
or
and
pop
hlt
adc
in
push
repz
add
xor
xrelease
dec
push
clc
mov
add
cmpsb
add
jo
fists
sti
dec
repnz
rcrb
or
pop
xchg
test
in
popa
out
cli
add
add
inc
cmp
movsl
inc
mov
or
mov
pop
les
cmp
shlb
jmp
and
in
mov
pop
mov
and
sbb
mov
mov
clc
push
int
aad
pop
incb
cli
ficoms
mov
jae
push
push
lret
mov
adc
repz
mov
cmc
dec
popa
bound
jl
sti
inc
mov
jbe
cltd
xor
add
lahf
push
mov
lret
pushf
inc
cmp
cli
xchg
stc
and
mov
mov
rcrl
lahf
cltd
push
syscall
repnz
mov
sti
movsb
jne
mov
push
loope
sbb
mov
cmp
rcll
pop
sub
lcall
movsl
stos
mov
rcr
adc
lret
or
jae
aaa
clc
adcl
push
jecxz
loopne
or
sbb
jo
outsl
cmp
lods
pop
call
inc
lcall
or
sbb
roll
ja
xchg
out
xchg
loop
shlb
es
rorb
jecxz
dec
das
scas
xor
ja
mov
aad
cmp
nop
rcrl
clc
call
mov
out
and
negl
inc
cmp
push
lock
push
ret
mov
mov
push
xchg
and
xchg
fcomi
test
lret
ds
out
xchg
adc
jmp
dec
leave
mov
push
lea
repnz
or
pop
lock
call
aam
push
aaa
push
jb
jns
loope
adc
push
fildll
mov
xor
imul
xchg
fldenv
sub
int
ret
ret
pusha
xchg
lods
loope
xchg
xchg
imul
test
jmp
push
xchg
les
gs
test
mov
dec
pop
sbb
push
gs
ret
jecxz
push
insb
xchg
test
inc
sti
push
test
test
in
dec
mov
popa
stos
test
test
and
nop
fidivs
jmp
lds
ja
xchg
hlt
call
push
sub
mov
sbbl
mov
movsl
mov
aad
pop
mov
les
and
movsl
dec
push
and
inc
jg
mov
ret
movsb
lds
mov
flds
ljmp
call
imul
pop
in
imul
and
insl
dec
sub
imul
or
mov
jmp
pcmpgtw
es
imul
and
mov
inc
leave
imul
addr16
and
test
add
arpl
test
icebp
fadd
movsl
mov
pop
movsb
cltd
add
daa
and
mov
jmp
addl
call
test
movsl
cmpsb
dec
test
dec
mov
mov
test
jecxz
and
mov
and
pushf
sub
in
test
test
addr16
mov
ret
push
daa
loop
add
mov
aaa
jmp
loopne
mov
test
test
aam
pop
jmp
das
pusha
pop
in
pop
fstl
lret
mov
out
in
pushl
cmp
jecxz
jnp
mov
mov
loop
cmpsl
popa
cs
mov
repnz
adc
rolb
mov
popf
dec
cmp
and
mov
rol
loope
cli
or
out
daa
sbb
mov
xchg
sub
negb
adc
addr16
xor
jge
mov
nop
scas
or
mov
xchg
mov
inc
mov
arpl
jne
pop
inc
pop
movsl
dec
arpl
lcall
out
repnz
ja
fldl
mov
xchg
or
pop
mov
mov
xchg
sbb
cli
lods
push
fbstp
or
popf
stos
lcall
sub
aad
fsts
xchg
int3
stos
xor
arpl
mov
and
rorl
clc
add
dec
aas
pop
sar
out
jns
sbb
pushf
outsl
add
sbb
nop
out
movsl
dec
std
js
shll
into
popf
jmp
or
mov
mov
out
loope
xor
bound
and
test
pop
sarl
dec
push
sbb
aas
inc
adc
sahf
int3
xlat
mov
xlat
fcmovnb
loope
in
jecxz
iret
inc
sbb
sbb
cld
lcall
jecxz
mov
mov
cmp
mov
or
jae
jbe
push
xor
dec
jnp
pop
add
dec
xchg
and
push
inc
stos
mov
and
or
mov
pop
pop
stc
adc
pop
insl
scas
mov
xchg
cmpsb
mov
fnsave
pop
pop
sti
imul
out
mov
test
jno
loop
sub
mov
mov
adc
mov
cmp
dec
mov
add
shrl
jnp
push
mov
cmpsl
loope
mov
fdivrs
jb
cmpsl
xor
fnstsw
mov
out
lcall
mov
sub
push
cmp
mov
cmpl
mov
xchg
jo
push
les
cmp
fidivrs
fstps
push
push
push
and
loope
cmpsb
pop
ds
push
xor
je
and
and
inc
jnp
xchg
enter
popf
cli
aas
imul
loop
adc
fimull
lcall
out
aad
jmp
jo
xor
mov
jge
cmpsb
lds
dec
xchg
dec
repnz
inc
aaa
or
and
fcmovu
nop
jge
and
inc
out
sbb
out
scas
push
adc
fsubp
mov
lret
lret
cmp
inc
sub
and
fldcw
and
fldcw
or
sbb
test
ret
xor
lret
sahf
ss
add
ja
loope
add
push
shll
aad
roll
lds
mov
mov
xchg
mov
lret
repnz
push
sbb
cmp
xor
lcall
cmp
push
push
cmp
ljmp
test
adc
xchg
rcrb
mov
fiadds
mov
adc
add
add
imul
or
fnstcw
mov
jne
jmp
andl
cld
jmp
adc
aad
and
popf
jne
fwait
add
add
leave
nop
test
sub
lcall
imul
repnz
xchg
or
mov
sbb
andb
push
jmp
add
divl
lret
daa
add
or
fisubs
ljmp
lock
mov
add
lcall
fstpt
mov
sub
and
lret
out
mov
xchg
or
cmp
and
lea
sti
dec
lcall
push
mov
mov
vcmppd
push
stc
cmpsl
or
jge
xor
pop
mov
lcall
dec
pusha
call
leave
stos
pop
add
push
popf
lods
push
mov
ret
rcrl
movsb
lret
sub
lds
dec
cmp
sub
or
mov
xchg
jge
xchg
jo
mov
loopne
pop
mov
sbb
test
cmp
lock
jecxz
test
shll
flds
cwtl
stc
xchg
insb
lods
pop
shrb
sbb
lock
mov
in
fcmove
pop
xchg
or
dec
mov
loopne
addr16
das
or
aad
das
mov
xor
ja
adc
or
xor
or
add
fwait
rorl
insl
and
enter
clc
inc
sub
fwait
xor
jae
xor
dec
push
fldcw
cmp
push
mov
js
cmp
fucomip
mov
js
adc
mov
jecxz
sub
mov
xorl
daa
mov
daa
popf
cmp
dec
inc
mov
pop
push
rclb
popa
jno
mov
sub
pop
fsub
js
mov
mov
and
pop
jns
fistl
mov
int
adc
call
gs
push
aas
push
addr16
movsl
jne
adc
inc
jl
xchg
pop
test
sub
xor
mov
inc
hlt
je
mov
lret
aad
jb
mov
out
test
scas
mov
out
xor
mov
inc
lcall
adc
mov
in
inc
jne
jg
pusha
mov
out
mov
dec
insl
mov
int3
mov
pop
push
add
leave
in
or
sub
aad
pop
sbb
add
or
and
rclb
mov
sbb
insl
lahf
rol
push
fcmovnu
mov
movsb
mov
rcrl
xchg
dec
and
leave
xlat
lock
and
pop
loop
mov
dec
sub
pushf
loopne
mov
or
or
sbb
xchg
out
xor
sahf
xchg
sbb
sub
leave
sbb
scas
icebp
out
ret
add
mov
inc
rol
jmp
imul
inc
icebp
je
inc
jp
stos
cwtl
adc
test
adc
hlt
fiaddl
dec
jns
cs
enter
adc
ret
out
mov
fsqrt
jecxz
popf
adc
stos
xchg
xor
pop
mov
xchg
daa
out
push
loope
arpl
add
pusha
xor
insl
xor
mov
cwtl
rorl
enter
xlat
pop
lcall
daa
xor
pop
pop
es
js
sti
loop
std
jno
shll
or
cli
dec
daa
inc
sti
dec
aad
pop
rcr
mull
lahf
dec
jns
and
mov
and
cmpsl
lcall
adc
lods
cmpsb
cmp
push
popf
mov
fcmovnu
inc
arpl
push
inc
imull
mov
dec
test
ffreep
ss
mov
movsl
fldcw
cwtl
mov
or
pushf
ss
jne
mov
adc
lea
fisubs
sbb
inc
stos
out
lret
mov
cwtl
dec
push
int
sub
jmp
cmpsb
std
push
pop
cwtl
xor
pop
fldenv
ret
jmp
jns
aas
out
cwtl
jge
inc
repz
mov
cmpsl
mov
inc
pop
lods
mov
sub
add
aad
arpl
jmp
fsub
mov
or
loop
push
mov
mov
dec
xlat
push
xchg
xlat
fs
imul
les
loop
pop
xchg
sub
shlb
push
outsb
test
or
lahf
mov
hlt
ret
jne
mov
shl
stc
mov
ds
loop
dec
add
lods
inc
mov
pop
ja
cmp
or
dec
fbld
mov
cmc
pop
mov
xchg
test
lcall
sarb
inc
inc
mov
sbb
mov
cmp
sbb
inc
lods
push
xchg
lcall
icebp
scas
into
push
mov
push
icebp
bound
xor
in
cld
imul
sub
inc
popf
loop,pt
andl
push
pop
dec
cmp
mov
mov
pusha
mov
dec
test
imul
jae
jno
cli
adc
lret
add
addr16
mov
mov
imul
push
cmp
insl
and
fistps
or
xor
loope
dec
jg
int
jb
mov
adc
sub
enter
scas
mov
pusha
lahf
mov
inc
test
ja
pop
movsl
sarb
xchg
mov
aad
std
xchg
jl
mov
test
sub
cmpsb
loope
and
sub
lcall
mov
mov
xor
xchg
ja
dec
out
mov
ljmp
adc
sub
int3
fnstcw
out
mov
cmpsb
or
mov
pop
dec
push
icebp
rorb
sarl
mov
add
frstor
adc
or
add
sbb
fwait
sub
mov
sbb
fsts
mov
xor
leave
mov
cmc
mov
mov
in
in
and
dec
test
test
aas
loope
call
movsl
cs
mov
out
icebp
stos
pop
push
mov
add
ret
inc
loope
jbe
mov
mov
cmpsb
pushf
ss
hlt
popf
inc
in
mov
je
aad
xor
jnp
mov
movsl
mov
test
dec
cmpsl
jmp
adc
lcall
xchg
mov
fs
mov
push
outsl
mov
idiv
inc
cmp
push
loopne
cmp
shll
mov
cmpsb
or
clc
xchg
cs
ret
push
or
and
lds
mov
in
bound
and
testl
xchg
mov
inc
sub
xor
mov
or
sub
mov
dec
shlb
jmp
mov
ret
push
shrl
ret
sbb
xchg
xlat
out
andb
aad
bnd
sbb
out
jecxz
xor
je
fisubs
sbb
adc
pop
jecxz
jecxz
xor
mov
mov
jb
enter
jecxz
push
pusha
shll
sbb
pushf
insl
fnstenv
lret
insl
lcall
or
iret
das
leave
pop
sbb
add
xchg
out
mov
fsubl
aaa
add
adc
repnz
add
cmpsb
cmp
std
aas
imul
lahf
mov
in
lcall
mov
popa
jbe
andb
decl
xchg
leave
push
in
arpl
mov
fstl
cwtl
enter
leavew
jbe
mov
xchg
sbb
cmp
jb
imul
stos
dec
push
and
dec
or
add
data16
mov
sbb
mov
stos
add
cmpsb
sbb
loope
and
push
or
push
dec
mov
xor
leave
mov
je
adc
jmp
loopne
scas
dec
test
mov
mov
jae
mov
orb
sti
mov
xchg
xchg
fildll
data16
rorb
cltd
adc
pop
call
lods
mov
jl
ret
fsubrl
xchg
add
add
int3
mov
dec
and
xor
xor
ja
cwtl
cmp
xchg
xor
int3
shll
sub
add
mov
mov
dec
mov
pusha
pop
jae
aaa
mov
testl
cmp
aas
loope
sub
add
cmp
lds
ficoms
push
scas
pop
lret
mov
lock
movsb
sub
negl
arpl
push
inc
cmp
dec
add
dec
add
cld
xchg
mov
jp
fsubs
add
daa
shll
cld
sub
ret
cmpsb
in
cli
mov
and
add
jb
mull
addr16
lcall
cli
xchg
pop
popf
sub
loope
pop
ljmp
cmpsb
jae
out
pop
push
xor
call
mov
cvtps2pd
loopne
popf
mov
fwait
popf
xchg
repnz
sbb
je
sti
xor
xchg
loop
cmpsb
dec
notl
jno
mov
sti
push
scas
mov
xchg
or
mov
cwtl
out
jmp
xchg
fldl
addr16
lea
sub
add
cmp
jo
xor
sub
call
sti
mov
out
mov
add
mov
rcll
mov
movsb
sbb
fucomp
xchg
xor
fisubrs
out
test
popf
loopne
mov
aaa
stos
xchg
inc
push
push
dec
push
int
lcall
mov
xor
sahf
sbb
repnz
push
mov
pusha
adc
shll
sub
mov
sahf
jl
andl
out
mov
mov
jae
cli
enter
push
and
pusha
xchg
ljmp
push
add
cmp
sbb
data16
mov
jl
cmp
jnp
test
sbb
xor
inc
pop
jmp
xchg
jo
arpl
mov
lahf
out
add
int
addb
bound
push
arpl
add
pop
and
inc
xor
mov
mov
fcompl
mov
popa
popf
cmp
inc
pop
lea
loop
test
push
in
xor
fnsave
mov
pop
int
mov
mov
lods
push
inc
xchg
sbb
jmp
ja
in
mov
insl
cwtl
fnstcw
adc
jb
pop
loope
dec
mov
repz
add
push
push
fnstcw
gs
xchg
pop
jecxz
popf
adc
cmp
mov
outsl
jl
mov
jmp
add
jg
in
jne
jne
or
push
mov
fists
in
leave
inc
inc
fnstsw
mov
mov
fcompl
sub
mov
mov
mov
mov
cmp
lcall
fnstsw
cwtl
movsl
aad
xchg
aad
lret
insb
or
xor
pop
hlt
outsb
inc
inc
pop
pop
push
sbb
out
cmpsb
pop
sti
push
lcall
out
or
aaa
fistpll
js
sbb
aas
cltd
push
ds
aaa
cmp
imul
movsl
es
cmpsl
mov
xchg
sub
lret
mov
and
sti
std
cwtl
in
xchg
sub
add
test
divl
jns
dec
fldl
dec
dec
sub
pop
shlb
xor
inc
mov
xchg
sub
inc
sarw
repz
rcrl
xor
pop
scas
mov
fsubrp
cs
ret
into
push
jp
pop
das
inc
mov
adc
je
xchg
and
or
xor
sub
push
add
pushaw
in
mov
inc
sub
or
fcmovnb
lcall
xchg
mov
mov
int3
xchg
dec
jge
jbe
adc
stc
mov
call
mov
sub
jo,pn
repnz
out
fwait
sbb
in
sub
cli
pop
out
adc
sbb
xchg
out
popf
jmp
adc
in
ljmp
sub
jp
mov
call
push
mov
add
out
andl
fwait
out
add
ret
cmpsb
inc
jbe
fwait
pusha
pop
aad
stc
push
inc
outsl
call
add
pop
pop
popf
jns
pop
lea
pop
push
ficoms
bound
xor
xor
outsl
popf
push
cmpsl
dec
mov
mov
pop
gs
mov
mov
enter
movsl
and
xor
fcmovu
cmpsl
in
sahf
mov
xchg
enter
xchg
imul
mov
orl
pop
jl
cmpsl
push
mov
cmpsb
clc
stos
hlt
sbbl
xor
cmp
jp
repz
mov
test
pop
add
cmpsl
xor
jge
jmp
call
pop
mov
ret
adc
add
aas
lea
pop
mov
xchg
mov
and
push
fdivs
mov
lret
call
in
leave
mov
mov
outsl
cmp
orb
std
mov
in
lds
nop
pop
mov
fistps
in
mov
lahf
xor
mov
in
lods
cmp
push
shr
aas
jl
mov
ss
jmp
mov
sarb
mov
pop
cmp
jg
pushf
imul
ja
jmp
lock
mov
push
inc
add
loope
shll
nop
mov
sti
sbb
stos
add
faddl
mov
out
xchg
jmp
or
mov
mov
cmpsb
sub
test
roll
fs
cmp
lods
jnp
mov
stos
or
imulb
push
push
out
mov
lahf
dec
addb
jne
mov
pop
jg
stos
inc
lds
notl
jne
lcall
idivl
xchg
mov
add
mov
jb
push
xchg
push
and
iret
leave
lcall
rclb
stc
mov
mov
subb
adc
sbb
sub
inc
mov
mov
pop
shll
mov
insb
shlb
add
and
add
xlat
mov
mov
leave
adc
pop
or
fisttps
outsl
aaa
mov
push
and
shll
cmpsb
sbb
dec
cmp
mov
sbb
sbb
shl
stc
orb
lods
jmp
icebp
xchg
xor
jae
aad
cltd
or
push
jge
leave
out
or
outsl
call
mov
ret
mov
cmp
sub
sbb
pushl
cwtl
adc
out
aaa
jecxz
sub
and
xor
test
sub
std
or
test
test
imul
loope
push
inc
daa
push
jmp
add
clc
sub
and
pop
shr
pop
test
repnz
xlat
push
jp
test
sub
mov
into
into
push
and
mov
pop
movsl
stos
movsl
sub
mov
or
test
and
lahf
and
jmp
sub
push
enter
call
test
popa
scas
gs
addr16
push
loopne
imul
and
jecxz
inc
mov
mov
xchg
imul
sbb
daa
shll
mov
fcmovnu
adc
xchg
pop
fwait
movsl
call
addr16
inc
and
fdivrp
daa
cmp
and
adc
arpl
test
in
xchg
arpl
inc
xchg
cmpsl
test
lds
mov
inc
data16
movsl
cmpsb
or
inc
push
lahf
and
xlat
add
mov
lret
aam
push
sub
test
jae
xchg
pop
or
aad
test
mov
test
test
jmp
test
les
aad
test
enter
test
aam
test
loopne
xchg
cmpsb
cmpsl
test
mov
jp
mov
dec
clc
call
xlat
fildll
push
rolb
addr16
and
out
adcl
mov
push
or
popf
out
imul
inc
push
xchg
inc
filds
enter
or
and
call
test
fildll
mov
inc
ror
add
jecxz
enter
fsubrs
xchg
les
addr16
mov
or
orl
or
adc
cmpsb
ja
aam
cmp
xor
jo
stos
jns
push
sbb
lret
test
cs
loop
fbld
jp
cmc
shl
fstpl
dec
xor
jecxz
leave
jno
xchg
leave
je
imul
popf
lcall
popf
xacquire
pop
dec
xor
outsb
in
outsl
mov
std
fldt
data16
out
test
fimull
sub
adc
mov
pop
aad
mov
jg
inc
xchg
testl
mov
cltd
add
xchg
jno
push
mov
xor
push
mov
xor
xchg
out
fiadds
mov
popa
fisubs
xlat
movsl
outsb
xor
int3
inc
imul
stc
arpl
add
xor
pop
jecxz
and
xor
das
add
ret
xchg
enter
or
and
xchg
pop
std
cmpb
decl
imul
or
imul
cmpl
insl
loopne
dec
sti
push
add
loope
mov
add
out
add
idivl
in
sub
mov
sub
fwait
mov
push
or
add
fstl
and
mov
in
mov
pop
aam
lea
shr
aam
mov
ret
je
icebp
loop
fnsave
push
add
ja
cwtl
mov
lcall
andb
pop
xchg
enter
leave
shl
dec
in
stos
nop
push
inc
xor
lea
jnp
dec
stc
push
leave
pop
repnz
clc
sub
push
push
sub
outsb
test
mov
dec
pop
stc
dec
dec
movsl
out
or
stos
add
fldenv
lcall
sub
inc
jle
loop
daa
hlt
scas
inc
mov
mov
int
fstps
hlt
dec
fxch
std
push
push
cmpsl
outsb
lcall
mov
and
or
loope
jb
fsubr
push
ds
ficoms
adc
cmpsb
inc
jl
push
add
push
adc
dec
pop
movsl
bnd
push
lcall
in
cmp
xchg
call
shrl
push
lret
sbb
sub
sbb
rol
mov
cld
enter
shufps
rcl
push
sarb
test
push
xchg
or
pop
rol
pop
ret
xor
call
lods
jmp
and
movsl
imul
das
vphsubdq
mul
incl
pop
rorb
fdivr
mov
outsl
or
and
mov
push
cmpl
call
jecxz
mov
je
or
loope
mov
jae
cmp
add
sbb
leave
lahf
out
std
pop
pop
out
mov
call
xlat
add
ret
cmp
das
bound
add
and
sbb
push
or
repnz
xchg
jl
adc
xor
leave
lock
std
cld
jl
mov
add
and
shrl
stos
pop
gs
sub
jno
outsl
adc
sub
es
out
dec
cmp
dec
in
cli
xor
mov
push
and
sbb
aam
out
in
push
arpl
lret
or
lock
adc
adc
andb
fistpll
push
fisubrs
mov
movsl
add
in
jo
push
pusha
test
out
shll
mov
inc
test
adc
inc
call
sbb
and
lods
sbb
xor
roll
xchg
inc
mov
xlat
inc
enter
push
sbb
imul
aad
lods
rol
and
xor
jmp
rcrl
gs
pop
gs
cltd
sbb
popa
and
xor
cwtl
addl
inc
xchg
jecxz
mov
fisttpll
push
ja
ja
sub
pop
jb
pop
xchg
sbb
or
or
aad
sbb
cli
stc
xchg
rcrl
mov
pop
clc
leave
test
or
jecxz
adc
leave
jge
mov
in
and
nop
xchg
cmp
in
pop
xchg
aad
out
add
add
rol
lcall
js
movsl
xor
es
push
mov
loop
mov
mov
and
fs
pop
pop
fwait
ljmp
fcomi
mov
shll
lcall
sbb
adc
sbb
dec
push
aaa
test
bound
sub
mov
mov
ficompl
inc
sbb
subl
or
cmp
cwtl
ret
data16
dec
jo
dec
xchg
sbb
out
lret
outsb
cwtl
mov
cmp
fs
sti
jo
leave
xlat
arpl
pop
inc
jl
popf
and
sbb
xchg
cld
mov
leave
pop
mov
mov
inc
or
push
and
sbb
jo
cmp
movsb
pop
dec
jge
cmc
aas
push
in
js
std
push
push
dec
lcall
jecxz
in
push
jns
adc
sahf
fidivrs
pop
test
mov
test
jmp
fucom
in
push
cmp
adc
fnstcw
add
pop
add
jmp
fs
out
jge
movsl
jb
xorl
and
fbstp
adc
mov
and
pop
pop
mov
push
test
sbb
push
lret
sub
out
pop
pop
mov
dec
lods
push
inc
cmpsl
dec
and
adc
cmp
jnp
in
push
mulb
popf
jmp
mov
shll
jp
push
mov
xchg
dec
cmpsb
mov
repnz
pop
cli
leave
lock
add
popa
fdivs
fistps
sub
out
sbb
mov
popf
dec
fxch
cli
iret
xchg
aam
mov
leave
jmp
les
sub
cld
push
jp
js
sub
push
mov
lods
cmp
mov
gs
jno
mov
or
les
push
cmpsb
in
xchg
fwait
dec
iret
and
xor
mov
inc
xor
movl
mov
int
inc
pop
scas
and
pop
outsb
loop
stos
mov
add
and
add
xchg
lret
in
out
int
inc
lods
cs
xor
jge
sbb
shll
popf
daa
jmp
pop
ret
xor
xor
cmp
mov
in
push
aas
ja
push
in
push
mov
shl
jmp
js
and
jb
aas
inc
xor
jne
gs
jge
mov
nop
inc
sahf
lcall
jno
dec
insl
inc
stos
jbe
or
mov
sti
pop
fwait
enter
mov
mov
cltd
insb
push
sub
pop
in
xchg
xor
lea
daa
jnp
aaa
mov
or
mov
cltd
xchg
in
aad
mov
dec
xor
xchg
fcmovnu
fstps
ds
xor
out
dec
push
test
repnz
cmpsl
xor
test
mov
push
jmp
jge
mov
jnp
fxch
shll
je
or
leave
cmpsb
lds
push
mov
gs
mov
mov
xchg
and
enter
aas
aam
xchg
push
mov
xchg
mov
imul
mov
mov
mov
pop
addr16
les
test
call
sub
mov
inc
lock
cld
fbstp
xor
inc
and
fisubl
cmpsl
mov
mov
popf
pop
addb
xor
mov
out
iret
mov
out
test
call
hlt
cld
adc
sbb
mov
xchg
aad
outsb
inc
add
popf
ret
add
and
pop
or
imul
cltd
mov
sbb
push
insb
lcall
fsubrp
sbb
mov
dec
sub
mov
lahf
and
std
ss
lods
lret
xchg
addr16
inc
jle
movsl
xor
aaa
push
mov
shl
pop
lods
test
popa
xor
sub
idivl
add
stos
data16
roll
call
sbb
sbb
sbb
or
call
jp
leave
xchg
out
out
in
mov
lret
push
xchg
sbb
call
js
mov
mov
stos
lret
pop
mov
lcall
jge
xchg
imul
das
imul
pop
and
jns
pop
cmp
pop
pop
add
adc
push
inc
in
sbb
jle
fstpt
test
pop
rorb
dec
cmc
fsubp
call
mov
into
mov
stos
add
jb
hlt
lahf
mov
jmp
cmpsb
loope
lock
in
mov
loope
inc
rcrb
adc
arpl
hlt
cmpsb
cmp
xor
dec
popf
xchg
push
pop
sbb
dec
add
mov
fldenv
mov
or
sbb
cmp
mov
and
adc
mov
cld
dec
inc
sub
pop
pusha
repnz
adc
mov
out
sub
clc
shll
and
sbb
into
push
mov
lcall
repz
xor
mov
test
shrl
sbb
mov
lret
mov
das
mov
imul
in
dec
sub
push
addr16
or
loope
jl
pop
jle
jnp
jns
mov
sbb
int
cmp
push
and
jecxz
xlat
imull
movsb
notl
adc
jae
popa
xor
mov
hlt
dec
jne
hlt
adc
push
xchg
stc
adc
xchg
rorl
pop
int
fs
cmp
add
mov
loop
add
repnz
pop
aad
incl
sbbb
lahf
adc
or
popf
and
push
jae
sub
cmp
adc
cmp
frstor
cmp
add
or
adc
xchg
mov
adc
into
or
xchg
mov
dec
pop
js
repz
mov
sbbb
dec
dec
cmp
sub
mov
xchg
mov
dec
fs
lcall
loope
sbb
sub
lds
push
pop
add
popf
movsl
les
adc
inc
pop
pop
loope
or
and
pop
lcall
add
mov
jmp
cmc
mov
and
lcall
iret
and
getsec
dec
cwtl
mov
cmpsb
push
popfw
cs
test
mov
xchg
clc
xor
lea
fldenv
sub
aad
ret
fnstenv
call
loopne
mov
in
stos
push
xchg
pop
fcomi
cmp
and
push
movsl
xor
sub
sub
negb
scas
mov
and
sub
cmpsl
outsl
inc
sbb
jb
call
cmp
jb
gs
pop
popf
push
popa
mov
test
enter
ret
dec
idivb
fcmovnb
xchg
inc
push
lret
lock
pop
call
out
addr16
sbb
lahf
lds
or
call
or
dec
in
adc
and
push
inc
dec
sbb
popf
das
xor
push
lret
faddl
jecxz
mov
lock
pop
arpl
in
lds
push
pushf
sbb
out
std
in
cs
in
pop
dec
test
pop
cmp
inc
add
js
push
ja
pop
lcall
hlt
popa
mov
enter
adc
cmpsb
aam
dec
test
and
popf
xchg
inc
mov
cwtl
shlb
push
notb
rcr
cmp
cmp
out
ret
sbb
rclb
hlt
add
sbb
test
mov
lahf
lods
jno
loop,pn
stos
test
sbb
out
cmpsb
add
insl
jb
mov
mov
clc
sub
rorl
lcall
and
cmpsl
iret
fxch
rcr
in
push
outsl
testb
nop
lods
inc
add
push
dec
dec
test
push
fidivrl
add
insb
sub
mov
mov
es
lds
pushl
arpl
fiaddl
adcb
addr16
fiadds
fcmovu
mov
inc
mov
sbb
push
mov
aam
add
jno
sub
push
push
inc
test
mov
xchg
lds
test
cmp
sbb
cltd
sub
add
mov
jg
cmc
imul
bnd
push
cmp
ret
bound
dec
fstps
arpl
fcompl
xor
inc
jmp
imul
je
orl
adc
imul
cmp
add
sbb
mov
xor
dec
lahf
jno
packssdw
in
mov
out
and
ret
jae
and
loopne
ljmp
xchg
xchg
lods
movnti
orb
mov
frstor
cmpsl
cmp
jge
stc
adc
xor
sub
rol
sub
sbb
pop
into
enter
bsr
jle
leave
and
ja
lea
int
inc
xchg
mov
sbb
sub
pop
pop
pop
ret
push
rorl
ljmp
out
std
jmp
mov
mov
cmp
retw
pop
lea
lcall
mov
xchg
mov
xchg
out
fldl2t
test
dec
push
xchg
loope
testl
mov
repnz
loopne
cmpsb
lcall
test
sub
lcall
call
jg
pop
out
rolb
cld
and
out
ds
xchg
dec
inc
rolb
jno
pop
mov
popf
cmp
ret
mov
dec
push
mov
addr16
jns
jno
in
loopne
jmp
out
popa
xorl
cli
mov
lcall
cwtl
cmpb
inc
dec
mov
lahf
push
inc
mov
sbb
sub
jl
or
test
lods
lret
mov
call
fcmovu
out
push
lods
andb
mov
sbb
js
pop
je
jge
je
scas
leave
mov
cmpl
push
add
out
gs
sbb
out
sub
mov
lret
data16
in
fstl
test
test
out
pop
sub
xchg
mov
int3
lret
out
sub
xchg
jns
inc
out
or
sbb
pop
mov
test
push
sbbb
arpl
mov
push
fsubl
mov
jo,pt
mov
fisttps
push
ret
mov
pusha
je
xchg
add
movsl
jl
movsb
or
fsts
mov
mov
int3
push
xchg
out
ljmp
out
jl
addr16
or
dec
hlt
jo
int3
lcall
inc
in
cmpsl
xor
or
sub
loop
cmp
cmp
xchg
pop
aad
sub
or
dec
das
adc
inc
pop
iret
mov
jo
mov
jno
in
push
cwtl
stc
xchg
aaa
cli
and
imul
lcall
lea
lcall
add
clc
mov
mov
mov
movsb
push
xchg
adc
mov
xor
xchg
inc
xchg
std
mov
enter
cmp
test
fs
and
popf
pop
push
adc
lret
inc
pop
jg
js
adc
sub
jmp
loope
fdivr
pop
pop
addr16
js
sub
xchg
push
in
sub
daa
jo
mov
and
std
push
mov
jl
outsl
movsl
rep
push
lds
pop
cld
sub
sbb
mov
mov
popf
pop
sbb
cmp
xchg
fidivl
push
xchg
pandn
cmpsl
push
xchg
mov
mov
mov
xchg
rcrl
clc
inc
xchg
adc
mov
jge
pop
sub
and
dec
jmp
cmpsl
cmpsb
mov
push
sub
cltd
hlt
cmp
in
std
or
pop
imul
add
addr16
push
cmp
mov
xchg
xor
mov
lcall
xchg
leave
xor
mov
movsl
inc
insl
pushfw
fsubrl
int3
fists
xlat
jge
mov
fisubs
xor
sbb
and
cmp
mov
cmp
mov
and
mov
ljmp
jge
cmp
lahf
sbb
das
pushf
mov
dec
movsl
shlb
in
cmpsl
lcall
pop
pushf
or
out
dec
fsubrs
pop
sub
xchg
or
arpl
pop
mov
add
out
mov
pop
pop
add
add
adc
idiv
xchg
jae
fiaddl
xchg
fbstp
divl
push
mov
loope
dec
repz
cmp
pop
popf
ret
aad
out
cmp
adc
aas
sbbb
movsl
sbb
sub
mov
mov
loopne
mov
xchg
push
xchg
mov
push
lcall
outsl
std
mov
test
inc
cwtl
dec
shll
into
jbe
pop
inc
dec
fucomp
jl
ret
mov
mov
dec
fcmovb
mov
xor
and
cmpsb
push
mov
mov
rcrl
jo
and
pop
outsb
lahf
lahf
mov
add
stc
lcall
mov
push
sti
and
outsl
imul
pop
sbb
cmp
cmpsb
or
stos
cs
inc
fildl
ret
call
push
clc
dec
push
lds
mov
xchg
mov
call
cmp
loope
lcall
mov
sbb
mov
pop
mov
dec
and
in
mov
xchg
inc
int3
ret
je
and
cld
xchg
or
push
sub
cld
mov
and
mov
jg
lcall
add
inc
repnz
imulb
shl
mov
push
jmp
mov
popf
lret
dec
dec
fildll
mov
or
scas
pop
andl
int3
jno
movsl
and
or
mov
movsl
mov
dec
push
es
push
lcall
fnstcw
cld
iret
out
int
aad
jmp
adc
popf
dec
add
out
push
push
adc
stos
cmp
insb
mov
pop
pop
mov
cmpsb
mov
jb
cmp
mov
mov
sbb
sub
lcall
push
xor
cmp
pop
ficompl
mov
rcl
sahf
sbb
mov
cmpsb
jecxz
das
jmp
in
push
dec
les
lcall
mov
jmp
shrb
jbe
in
xsavec
cmpsb
xorl
mov
inc
sbb
xchg
xor
inc
and
stc
and
mov
fisttps
fcoml
push
xchg
xor
pushf
mov
cmpsb
in
repz
sbb
lcall
popf
push
fidivrl
int
lcall
loope
cmc
les
out
bound
or
dec
push
shll
loop
cmpb
lcall
outsb
orb
stos
mov
cmpsl
dec
test
cmp
dec
inc
xlat
mov
ja
dec
nop
mov
das
push
xor
sahf
add
out
and
lcall
cmp
cmp
xchg
fstl
sub
inc
and
xchg
test
dec
jno
sbb
adc
dec
aad
mov
pusha
lahf
shrl
dec
xor
push
jo
sbb
loope
bound
cmp
das
adc
dec
mov
push
xor
imul
outsl
xchg
pop
orl
mov
jno
jecxz
mov
shlb
std
push
fucomi
sbb
jo
outsl
stos
push
cmp
vpackuswb
add
push
mov
dec
pop
imul
lahf
add
add
mov
xorb
jne
pop
fisttps
push
mov
mov
sbb
adc
lcall
add
cmc
orb
add
xor
pop
or
pop
daa
cmp
out
lahf
push
xchg
sbb
push
lods
xchg
mov
andl
mov
rcrl
add
cmp
lds
lods
cltd
xchg
mov
arpl
lret
mov
int
push
cmp
jge
inc
int3
aad
idivl
push
cmp
dec
dec
cmp
lods
cld
jbe
add
dec
add
mov
repnz
scas
lock
dec
in
cmp
jp
and
cmp
dec
ljmp
mov
clc
pop
and
test
cwtl
aam
or
mov
and
adcb
and
jg
jnp
push
fistl
add
push
add
fdivrl
pop
inc
pusha
or
mov
sub
mov
push
add
cmp
das
lock
adc
xor
push
movsl
cmp
xchg
sbb
out
xchg
call
fxch
and
sub
outsl
addb
jbe
cmp
out
ja
xor
mov
fistpl
sub
mov
shlb
sbb
insb
test
push
adc
icebp
cmp
adc
mov
jno
jle
divb
push
jecxz
rep
loopne
lcall
pusha
idiv
shlb
fimull
je
ret
js
inc
mov
inc
cmp
lret
in
add
mov
rol
dec
xor
and
std
pop
push
je
enter
into
dec
fistps
stos
sbb
bound
cli
repnz
push
inc
adc
lcall
pop
mov
fldenv
fisttps
adc
dec
xchg
cmp
jb
inc
shl
jmp
mov
nop
in
jle
push
inc
incb
mul
adc
xor
aad
out
imul
rol
cmp
jo
xchg
adc
frstor
shlb
push
xchg
xor
add
insb
outsl
cmpsb
lds
pop
lahf
add
sub
fldcw
cmpsb
in
jb
loope
mov
in
mov
das
incb
fsts
stc
out
or
xchg
xor
mov
ds
out
aas
push
or
push
repz
push
and
and
pop
jmp
bnd
rcrl
js
in
popf
add
mov
test
push
imul
cmp
inc
aaa
hlt
pusha
adc
imul
daa
in
push
dec
in
pop
shr
test
mov
hlt
repnz
pushf
out
dec
outsl
mov
mov
dec
loope
ret
addl
test
lret
inc
loope
add
push
xchg
loope
or
mov
sbb
das
pushf
arpl
mov
ja
dec
or
lods
mov
and
inc
enter
in
lds
mov
leave
mov
in
out
cmpsb
push
popa
sarb
leave
std
inc
jg
movsl
aad
or
mov
scas
clc
cltd
inc
xor
mov
lea
mov
lds
xchg
lea
rcr
stos
xchg
repz
mov
cmp
pop
xchg
or
push
mov
mov
addr16
sbb
xchg
mov
jge
cwtl
mov
scas
adc
cmpsl
push
push
sub
aaa
dec
or
mov
cmp
ret
pop
push
cmp
js
xchg
cmp
xchg
push
aas
lcall
out
cmpsb
lret
or
lds
pop
loop
pop
push
leave
xchg
push
mov
leave
cwtl
mov
shlb
daa
pop
mov
in
test
xchg
cli
mov
add
fsts
mov
popf
mov
jae
lea
stos
loopne
push
lods
out
mov
mov
rolb
lahf
xor
adc
out
mov
or
and
jmp
jo
out
xor
lcall
cmp
sbb
loope
xlat
xor
jb
js
bound
sub
cmp
jae
out
pop
hlt
shll
in
adc
stos
or
push
mov
pop
and
fstl
cmpsl
outsb
lcall
scas
fldl
jns
lcall
xchg
daa
jo
icebp
add
ret
call
jge
mov
jg
or
in
or
sub
int
mov
lcall
sub
push
sub
push
jmp
mov
mov
aad
icebp
out
cmpsb
inc
and
add
mov
jmp
in
shll
loop
jnp
sarl
mov
pushf
arpl
iret
out
cmc
xor
outsb
mov
in
hlt
cmpsb
add
test
movsl
inc
mov
sbb
pushf
dec
or
paddq
in
test
cmp
fwait
adc
fiadds
or
lcall
mov
push
jp
sub
jbe
int
test
jns
test
shlb
sbb
pop
stos
enter
push
loope
scas
sub
or
pop
je
jg
lds
mov
test
push
sub
in
jg
insl
or
stos
fcomi
or
call
jae
das
sbb
sbb
push
mov
mov
mov
pushf
sbb
das
lret
xor
pusha
cwtl
add
mov
lea
stos
and
jnp
mov
adc
dec
test
mov
fsubr
fwait
mov
das
sbbl
enter
adc
add
aam
shrb
push
jno
xorb
sbb
cmpsl
imul
pop
ror
in
xchg
out
popa
lea
cmpsb
into
repz
pop
push
mov
shrb
mov
xlat
pop
pusha
jno
or
push
je
das
sti
sarb
add
sti
pop
sbb
pusha
lret
into
rcl
jo
shl
cmpsb
and
mull
jb
mov
insb
mov
fistps
rolb
xlat
dec
push
shll
loop
test
addb
push
lcall
sub
push
add
inc
stc
mov
mov
flds
sbb
lds
aam
clc
movsl
lahf
pop
xchg
rolb
dec
lcall
push
mov
jo
arpl
push
xchg
pop
add
mov
push
pop
and
mov
cmc
mov
es
aad
xor
pusha
in
outsl
sbb
std
cmp
push
js
xor
cmp
lret
cmpsb
popf
ret
ljmp
mov
sub
inc
xorb
repnz
mov
iret
pop
scas
sub
sub
mov
or
daa
mov
pop
pusha
fisttpl
cmp
ret
and
in
fimull
mov
leave
clc
out
jno
jge
mov
xchg
sub
movsb
arpl
sbb
cmpsl
inc
push
test
and
xchg
fdivrs
das
testb
repz
xlat
mov
cmp
xor
insb
xchg
js
sbb
cmp
pop
ret
js
les
mov
adc
clc
leave
fstpl
fcoms
xor
xchg
lds
mov
dec
mov
inc
fcmovnb
cmp
sub
jge
hlt
inc
sub
xor
fidivrs
add
pop
add
flds
add
dec
cmp
mov
sbb
add
cld
mov
dec
inc
xor
or
popf
and
sub
roll
in
push
fwait
mov
xchg
pop
mov
test
xlat
fsubr
outsb
dec
push
xor
dec
lahf
mov
test
lahf
sub
lea
xchg
ss
push
lcall
sub
sbb
fst
lods
push
int
cmp
jo
push
jecxz
sub
lods
mov
mov
rorb
dec
push
fdivrs
push
out
test
arpl
mov
stos
je
sub
arpl
mov
sbb
rcll
pop
mov
inc
xchg
out
sub
jo
jne
jae
mov
mov
leave
push
mov
sbb
adc
push
aas
push
push
loop
in
test
ja
cmp
add
int3
cmp
sti
mov
lret
fwait
pop
icebp
cmpsb
mov
mov
ljmp
sub
pushf
xchg
stc
push
negl
mov
in
aaa
andl
fstps
mov
fwait
shrl
cltd
add
push
pushf
and
pop
push
fidivl
outsb
cmp
cmp
aaa
lds
pop
shrl
xchg
dec
negl
fisubs
jmp
mov
push
inc
fisubl
pop
adc
in
gs
dec
jae
jne
sub
dec
inc
mul
adc
movsb
xchg
push
xchg
push
bound
out
addb
inc
fstl
inc
popf
push
inc
test
outsb
sbb
jbe
icebp
cs
mov
and
xchg
xchg
in
ret
mov
outsb
inc
pop
and
out
outsb
stos
mov
xchg
mov
mov
shll
fcoms
in
cmpsb
lods
inc
mov
imul
in
lret
jecxz
push
sub
aas
daa
push
leave
pusha
sarl
or
cmp
ret
pusha
out
adc
mov
fldl
mov
mov
push
movsl
fdivrl
or
push
repz
fsubs
fnstsw
fidivrl
testb
fldenv
push
sub
mov
aad
sub
shlb
lahf
enter
add
out
out
and
jmp
lds
lret
jg
lahf
rolb
movsl
sub
and
jp
popf
mov
mov
sub
adc
mov
sbb
clc
dec
fsubl
pop
mov
cmc
pop
mov
int
pusha
loop
jecxz
sbb
stos
out
out
xor
sub
lahf
xor
shlb
cld
ret
fildll
sbbb
inc
mov
ret
pop
mov
insl
push
inc
push
mov
aam
push
dec
add
mov
push
imul
dec
and
gs
jno
inc
std
leave
das
mov
add
mov
sub
lahf
nop
aaa
out
jnp
and
std
pop
pop
inc
xchg
jae
pop
and
mov
mov
lock
pop
gs
or
mov
push
mov
pop
mov
je
add
add
lahf
movb
lcall
mov
and
fwait
or
pop
mull
loop
push
lret
xchg
mov
andb
fs
gs
rolb
push
mov
mov
mov
xchg
mov
sarl
and
aaa
pop
ret
or
sub
dec
mov
jae
ret
inc
pop
movsl
jmp
inc
mov
or
std
out
cmpsb
fyl2xp1
rorl
sbb
lock
push
sub
cs
push
aad
mov
mov
in
les
mov
loop
add
insl
pop
cmp
jge
cmpsl
popa
out
dec
mov
xlat
test
imul
je
push
outsl
in
shll
sti
ja
pop
add
xor
adc
push
enter
push
fldenv
and
jnp
or
pop
push
lahf
les
dec
aad
popf
in
lds
sbb
mov
mov
jmp
push
push
pop
dec
out
mov
mov
and
aad
push
add
xchg
mov
movsb
mov
sbb
mov
std
sarl
shld
pop
adc
fbld
xchg
pop
jecxz
xchg
xor
popf
sbb
xor
fldenv
les
lret
sbb
flds
adc
xchg
out
in
fstps
adc
and
sub
mov
dec
aaa
cmp
in
loopne
add
inc
mov
je
push
test
ret
add
and
fsts
push
in
jae
xchg
rcrl
rclb
test
mov
cmc
or
js
loope
test
inc
shrl
loop
and
out
popa
jno
fwait
sbb
pop
jp
cmpl
cmp
out
xchg
mov
fcmovnu
adc
mulb
cmp
push
adc
pop
shll
lods
add
test
mov
jno
pop
in
pop
mov
aas
js
imul
in
push
dec
mov
mov
aam
rep
jbe
xchg
movsl
outsb
test
pusha
lcall
popl
pop
mov
adc
dec
mov
cmp
xor
aad
sbb
jmp
dec
push
pop
jl
inc
fidivl
inc
cmp
cmp
dec
or
fwait
out
push
imul
adc
push
lahf
mov
ljmp
jecxz
lds
sub
rcrb
enter
add
mov
lret
lods
fwait
inc
and
icebp
fildl
lret
pop
rol
enter
xorb
push
mov
jbe
test
xor
mov
rclb
pop
and
mov
dec
adc
inc
add
loope
sub
sahf
mov
sbb
pop
jnp
sub
push
sarb
pop
addb
sbb
ror
sbb
mov
sbb
out
pop
pop
imul
inc
jmp
sbb
mov
test
sub
jp
push
imul
xchg
in
enter
leave
push
xchg
push
or
pop
ret
pop
and
outsl
sbb
out
or
mov
cmp
sub
jo
jns
fldcw
out
and
sub
xchg
aam
lret
rcll
ret
cwtl
mov
cmpsl
fs
or
jecxz
cmpsb
mov
clc
test
cltd
cmpsl
roll
mov
pop
push
icebp
mov
enter
cmpsb
int3
jo
ds
and
rcrl
sti
dec
sbb
out
cmp
test
outsb
push
popl
xorl
shll
ja
repz
push
adc
dec
inc
fcoml
popl
out
dec
cmp
and
pop
push
mov
mov
and
and
gs
mov
mov
mov
cmp
frstor
ss
mov
cmpsb
in
push
pop
gs
cmp
cmpsb
cli
out
cmp
les
ret
push
jno
notl
jmp
push
mov
mov
mov
jmp
push
adc
lret
mov
fnsave
ja
xchg
lcall
incb
rcl
mov
repnz
imul
add
int
cs
mov
sti
rorl
cli
movsb
push
push
jo
shll
mov
cmp
jns
sti
xor
ret
int3
in
jl
dec
adc
imul
add
ja
call
or
pop
lret
cmc
lret
dec
or
and
das
popa
add
mov
inc
mov
adc
push
push
inc
std
pop
rcr
pop
sub
test
lods
adc
xchg
jl
xor
fidivrs
pop
gs
or
adc
fidivrl
inc
mov
lret
lcall
xchg
cmp
test
fnsave
aaa
sub
add
jb
jmp
rolb
add
pop
inc
jae
jo
add
mov
fstpt
and
mov
pop
inc
cld
push
daa
xor
test
mov
jg
dec
mov
sbb
add
pop
int3
cld
lods
fnstsw
and
fcmovb
insb
jnp
xchg
add
sti
dec
cld
clc
sbbl
cmpsb
mov
rolb
ret
cmp
mov
xor
mov
outsb
and
icebp
cmp
add
rorl
test
ja
sub
pusha
and
shll
lock
test
cmp
sub
cmp
pushf
cwtl
sti
mov
hlt
sarb
lds
fstpl
sub
cmpsb
sbb
mov
dec
cmpsb
bound
push
and
jecxz
fstl
dec
mov
mov
mov
out
divb
pop
in
xchg
rcrl
push
sbb
mov
add
jns
push
or
sbb
adc
sti
pop
lea
bound
mov
xchg
les
sbb
loope
gs
loope
cmpsb
or
sti
cmp
mov
push
inc
jmp
push
inc
pushf
xchg
and
mov
aam
movsb
popf
xchg
cmp
or
lods
sub
jno
and
outsl
out
dec
inc
aad
test
jl
popf
icebp
cmp
out
push
dec
pop
sub
in
fisubs
and
and
push
cmc
loope
fwait
mov
cld
xchg
bound
ss
ja
sub
cmpsb
adc
shlb
push
cs
inc
rcrb
inc
int3
sti
rcr
pushf
imul
dec
pushf
gs
lret
mov
rol
mov
movsl
ret
push
push
mov
into
xchg
xchg
sub
shrl
or
lds
inc
push
pusha
mov
lock
repz
iret
fdivrl
shl
mov
jp
ljmp
ret
push
sahf
ja
mov
movl
shrl
push
xor
bound
imul
lods
push
call
pusha
lock
fwait
popa
dec
pop
fstps
call
jae
mov
cmp
aad
fwait
jae
int
push
icebp
dec
jae
xchg
and
shrl
lcall
lds
ret
xchg
mov
add
jecxz
lods
repnz
dec
add
cmpsl
lcall
addr16
mov
lock
or
fildl
sub
sbb
leave
ljmp
sbb
xchg
out
arpl
and
sub
out
xor
js
lds
jecxz
inc
dec
and
xlat
insl
push
jno
mov
cld
sub
cmpsb
mov
lds
aas
or
pop
jns
mov
iret
fneni(8087
clc
fs
cmp
mov
bound
push
into
lahf
xor
cmp
pop
mov
stos
inc
movsb
mov
mov
cmp
xor
fdivrs
outsl
cmpb
cwtl
mov
fistps
mov
dec
fisubs
les
add
ret
adc
lds
call
clc
pop
dec
ret
inc
negl
dec
xor
and
push
inc
out
stc
inc
jle
dec
mov
rcll
jmp
mov
pop
lods
ffree
xchg
repnz
fcompl
mov
push
jge
dec
aas
popa
cmpsl
lret
push
imul
adc
leave
enter
xchg
das
push
and
dec
fsubrs
lahf
pop
int3
nop
loop
pop
cmpsb
ds
mov
lea
inc
mov
and
mov
mov
enter
adc
mov
pop
movsb
jmp
cmpsb
push
push
dec
sbb
and
dec
inc
mov
pop
cmp
xchg
mov
xchg
cltd
xchg
push
or
mov
in
shrb
xchg
lret
xorb
popf
mov
add
cmp
fldt
or
rolb
mov
add
mov
sub
add
test
xor
sbb
fstpt
dec
sbb
sarb
nop
dec
call
int3
enter
and
inc
movsb
sub
loop
shll
cmp
les
add
and
cmp
addb
add
shrb
or
mov
jmp
adcb
jne
mov
jb
or
cmp
fldenv
addr16
push
xor
or
mov
xchg
push
cmp
in
mov
or
fldcw
lods
popf
and
cmpsb
shlb
les
xchg
ret
aam
xchg
push
daa
mov
out
dec
push
and
pop
xor
das
ror
sti
dec
sub
or
pop
lods
jg
mov
pavgw
pushf
push
cmp
repnz
mov
rolb
mov
insl
clc
test
sub
or
dec
pop
cmove
xlat
adc
sub
fidivrs
jmp
xchg
aas
mov
dec
inc
xor
lock
mov
in
xor
and
jg
movsb
aam
push
cwtl
lods
sbb
fs
aas
inc
mov
cmpsb
jo
jnp
push
cmpsl
nop
sub
push
xor
mov
adc
enter
stos
mov
jne
sub
out
pop
int
inc
leave
repz
sub
test
mov
pop
and
andb
fsubl
bound
test
pop
inc
push
shlb
sub
fsubrl
push
pop
inc
mov
lea
repnz
lds
add
pop
mov
jmp
jmp
popf
rcrb
jmp
cmp
mov
inc
jl
leave
inc
fwait
mov
daa
daa
jns
enter
push
push
dec
and
pusha
imul
cmpsl
mov
ror
xor
push
jae
and
sarb
push
mov
mov
mov
pop
or
pop
ret
sub
repnz
clc
mov
push
xchg
and
je
movsl
leave
sub
bound
cli
push
adc
pusha
jo
and
mov
and
shlb
cli
xlat
jno
push
add
lds
mov
pop
test
lock
cmp
repz
mov
leave
pop
repnz
push
or
sarb
fsts
mov
xchg
cmp
lcall
mov
lret
shlb
shrl
cmp
popa
xchg
pop
mov
add
rcll
mov
sbb
enter
out
mov
adcl
mov
push
fisubrl
les
sub
jne
cmpsb
sub
pop
lock
add
inc
jnp
sub
jae
jge
jno
pop
add
dec
es
mov
lock
dec
mov
in
mov
add
mov
jl
xor
push
fcomps
xchg
les
call
sbb
adc
call
jl
rcll
test
incl
mov
call
ficoml
addr16
mov
pushf
pop
fnstenv
leave
pop
push
xchg
loope
xchg
loop
into
jmp
repz
and
sbb
xor
test
iret
sub
mov
leave
test
imul
inc
or
dec
inc
jmp
jmp
lret
loopne
xchg
push
repnz
test
mov
imul
inc
ret
cmpsb
and
addl
dec
cmpsl
pop
addr16
ja
fbstp
dec
fsubl
xor
fs
push
mov
in
add
cmpsb
in
cltd
or
enter
xchg
std
pop
jns
inc
imul
leave
pusha
mov
add
inc
cltd
add
xchg
or
pop
cltd
add
mov
cltd
inc
leave
cmpsw
ret
jmp
and
call
nop
ljmp
test
cmpsl
movsl
fs
iret
leave
cmp
and
mov
and
fs
and
inc
add
dec
xor
lret
leave
add
iret
inc
dec
mov
test
dec
xchg
fsubl
and
ret
mov
aam
test
addr16
and
mov
inc
mov
lds
imul
pop
dec
xchg
add
adc
inc
gs
mov
xchg
nop
test
and
bound
fadd
inc
addr16
dec
test
leave
mov
popa
cli
dec
adc
xor
fcmovb
mov
and
enter
movsl
or
jle
and
xchg
mov
lock
test
cli
dec
mov
jmp
and
cwtl
les
or
dec
inc
push
push
cli
add
push
in
out
sub
and
add
xchg
rolb
jo
mov
cltd
and
add
mov
dec
or
shl
adc
jmp
xor
push
mov
push
xor
mov
dec
in
cltd
sub
fs
jmp
add
popf
jnp
iret
inc
fildll
clc
sbb
add
xchg
cmp
fsub
lcall
aaa
out
cwtl
cmpsb
cs
cmp
mov
movsl
push
test
xchg
mov
sbb
ret
and
ljmp
fildl
adc
mov
lea
inc
les
in
int
out
shll
or
xor
jae
js
gs
push
les
cld
adcb
add
cmp
xchg
aas
sub
in
inc
bswap
pushf
imul
adc
std
repnz
mov
and
push
aas
cmp
add
repz
fs
int
data16
js
dec
cmpsb
icebp
outsl
sbb
repnz
test
pop
fimull
cmpsb
loope
sbb
popf
fmul
lock
mov
adc
sbb
xor
jo
repnz
sub
dec
jae
xor
pusha
mov
jecxz
popf
test
mov
dec
push
jne
repz
and
hlt
aad
jbe
jg
jo
xor
sub
or
adc
dec
jle
popa
pop
mov
mov
xchg
mov
pop
sub
ja
mov
push
adc
pop
or
adc
and
adcl
rol
outsb
sti
outsb
leave
mov
shlb
pop
shlb
mov
enter
pusha
bound
mov
insb
out
idivl
mov
dec
ds
xchg
jmp
imul
add
jmp
jge
aad
mov
lods
fwait
mov
orl
int3
mov
inc
add
or
jb
aam
rorb
xchg
mov
lods
pop
test
aad
jge
mov
mov
stos
cli
insl
cld
mov
lcall
jae
gs
fs
sbb
mov
sub
out
fidivrs
cmp
les
pop
out
jmp
mov
push
cmp
loope
push
push
hlt
fisttps
adc
adc
ret
dec
out
ds
mov
lahf
push
mov
out
inc
cmpsb
adc
fstl
daa
js
out
sub
adc
pop
push
pop
cmp
pop
inc
add
mov
movsl
insb
add
sbb
loope
add
add
xor
nop
lret
in
rcrb
test
lret
std
fadds
imul
pusha
lods
daa
or
adc
lcall
push
mov
fstps
out
sub
add
ret
popf
mov
cld
out
jbe
adc
xchg
or
xchg
xor
push
inc
sbb
jl
jmp
mov
mov
scas
inc
cmp
sbb
push
lods
negl
add
pop
pop
out
dec
jnp
lcall
adc
jmp
push
sub
xchg
hlt
nop
incl
pop
in
rcll
mov
ja
data16
pusha
cmpb
xor
scas
std
pop
in
push
ret
dec
idiv
popf
das
mov
adc
out
add
cmpsb
sub
gs
out
xchg
inc
repnz
adc
enter
xchg
mov
lcall
mov
leave
cli
add
stc
xlat
sbbb
cwtl
dec
imul
jl
jns
sub
repnz
mov
cmp
sbb
push
nop
rorb
mov
jb
cwtl
in
or
pop
fcmovb
and
push
out
es
xor
mov
jb
push
pop
push
xchg
cmpl
mov
jp
into
sbb
pop
dec
stos
daa
fisubrs
fadds
shll
out
arpl
out
or
lods
aaa
hlt
lahf
sub
pop
testl
inc
sti
sbb
add
xchg
adc
lcall
add
sub
out
or
add
nop
mov
dec
or
cld
lea
sbb
and
mov
jmp
bound
out
mov
pop
mov
clc
and
pop
and
xor
inc
lahf
and
xor
push
call
lea
test
xor
xchg
pop
je
cmp
xor
mov
push
mov
subl
jo
sarl
xchg
sbb
fwait
jb
adcl
and
push
push
inc
fcoml
mov
lahf
hlt
xchg
lahf
dec
aas
pop
in
lahf
mov
pop
sbbl
je
xchg
fwait
push
int3
int3
dec
xchg
daa
adc
fnstenv
xor
sbb
cmpsb
mov
pushl
mov
ret
mov
daa
dec
popa
lcall
shll
jo
sub
out
std
xchg
pop
shl
push
xchg
or
xchg
shll
pusha
js
push
movb
popf
mov
repnz
jp
dec
and
add
xchg
out
adc
fdiv
pop
cmp
lret
leave
jmp
adcl
pop
mov
jle
and
push
pop
pop
pop
push
js
jp
out
mov
and
cmp
mov
sub
push
data16
popa
jg
dec
hlt
test
aam
cmp
out
aad
cs
bound
je
dec
xchg
scas
jb
jmp
sahf
or
insl
push
hlt
adc
rol
rcl
lods
jns
test
and
xlat
push
cmp
inc
xlat
add
je
in
inc
jns
and
loope
pushf
cmp
ds
push
mov
fldenv
add
sub
call
divb
fmuls
push
and
mov
add
mov
std
sbb
push
xchg
popf
jg
mov
push
ficompl
fldl
lock
ljmp
std
dec
mov
es
mov
push
xchg
in
leave
push
shlb
jecxz
jl
ret
lock
dec
push
xor
iret
hlt
mov
inc
in
pop
out
mov
ss
fstl
scas
adc
mov
sub
addr16
gs
lcall
dec
push
fwait
inc
sar
lcall
xlat
sub
imul
adc
xor
out
js
mov
mov
sub
shrl
imul
mov
inc
sbb
cld
mov
mov
orl
fsts
pop
sub
sbb
push
inc
cltd
pop
adc
and
pop
xlat
dec
push
loop
mov
rcll
icebp
cmc
mov
out
jmp
mov
xchg
fwait
and
add
mov
pop
dec
pop
fiadds
cmp
out
sbb
sbb
cmp
jg
hlt
inc
xchg
adc
addr16
pusha
cltd
adc
push
imul
mov
jo
ljmp
sbb
jnp
dec
mov
jmp
out
jge
mov
mov
mov
push
sahf
xor
dec
mov
cmp
mov
sub
test
mov
add
mov
iret
lods
add
int
lcall
cmp
cmp
and
xchg
adc
in
jne
and
push
mov
bound
lcall
outsb
xor
push
testl
xor
in
sti
pop
lods
add
sub
test
push
dec
xchg
push
test
std
inc
cmp
push
arpl
fs
leave
mov
pop
pop
dec
add
fcmovnu
fidivrl
pmaddwd
add
stos
stos
shll
xchg
movsl
push
add
mov
popa
in
lods
les
test
and
pop
add
aad
sbb
shl
inc
push
or
cmpsb
pop
imul
test
pop
lcall
cld
in
fcomip
pop
shl
sarb
leave
sahf
cmp
sbbl
jbe
mov
sub
mov
sub
shl
ret
mov
jb
aas
dec
push
jmp
jb
in
insb
jbe
pop
orl
inc
cmpsl
std
fistl
stc
in
push
stos
jo
test
push
xchg
pop
xchg
and
movsl
call
mov
sbb
outsl
cmp
mov
cmp
push
lods
leave
mov
add
gs
out
clc
xor
test
roll
movsb
dec
shll
cmp
mov
and
and
cmp
mov
ret
jecxz
cmpsb
clc
pop
inc
xor
jecxz
mov
pop
sbb
lds
jb
das
xchg
inc
cmp
cli
inc
mov
or
or
addr16
sub
sbb
xor
jbe
push
in
add
cmpsl
sbbl
ret
ja
out
fnstcw
sub
sbbb
leave
mov
cli
cwtl
xchg
icebp
mov
enter
mov
or
popf
push
mov
sub
inc
cld
mov
aaa
sbb
mov
pop
es
adc
cmc
dec
lock
mov
mov
aaa
sub
sbb
fimuls
mov
or
push
mov
cs
jmp
or
testl
jge
cmp
adc
pushf
out
push
lds
push
ds
les
mov
pop
adc
mov
out
xor
test
inc
mov
cmpsb
mov
popf
jg
mov
mov
cmp
pop
lret
movl
add
out
out
cltd
mov
inc
mov
scas
dec
imul
dec
jp
xor
inc
jns
and
and
test
or
push
add
mov
sub
cmp
shr
call
dec
xor
call
sti
mov
mov
jge
in
adcb
mov
push
mov
adc
mov
adcb
data16
and
adc
mov
fstps
adc
addb
stos
test
aaa
lret
pop
aas
adc
push
lret
add
aam
mov
out
sbb
in
in
sub
dec
js
lret
daa
fildl
bound
and
bound
pushf
je
mov
xchg
fldenv
push
js
jmp
mov
dec
xchg
rcrl
out
test
fldenv
mov
jbe
xchg
mov
push
pop
sub
jns
and
and
flds
mov
mov
mov
push
mov
xor
rcll
xor
push
dec
mov
add
mov
lahf
dec
leave
pop
mov
add
inc
mov
and
mov
rep
and
call
push
dec
mov
or
mov
jne
and
int
or
shlb
dec
fimull
mov
sub
cli
pop
cmpsb
mov
into
pop
into
xor
sbb
loope
andl
cltd
jnp
jb
push
mov
or
movsl
adc
lahf
jnp
jmp
pop
in
or
fistpl
imull
out
dec
stos
jns
popf
sub
pop
mov
pop
fwait
call
jecxz
sbb
sub
cmc
rolb
or
add
shld
mov
outsl
push
pushf
adc
imul
imul
imul
int3
sub
popf
xchg
dec
out
xchg
cmp
jae
or
cmp
dec
popf
xor
push
push
mov
adc
adc
in
fldt
mov
inc
out
shll
dec
mov
rcrb
addr16
jno
std
pushf
xor
mov
push
sbb
mov
ljmp
lock
jle
mov
sub
mov
loope
shl
jno
lock
imul
push
andl
xchg
sub
es
loopne
lcall
sti
sar
test
mov
mov
push
ret
lcall
push
sar
fimull
and
aas
arpl
pusha
sbb
mov
pop
test
addr16
fnstsw
push
mov
cmp
ds
clc
mov
imul
cmp
jp
fldl
jp
xchg
pop
clc
fnstcw
inc
mov
leave
mov
jo
iret
add
addr16
inc
jl
or
leave
punpckhbw
es
fdivl
dec
pop
test
mov
xor
mov
ret
aam
mov
fldenv
movsb
pop
cmp
xor
ss
xchg
add
push
ljmp
cmp
mov
inc
adc
add
mov
pop
inc
lods
mov
sahf
in
nop
sahf
mov
mov
sbb
lcall
loope
sbb
in
and
jle
or
or
push
fwait
pusha
iret
xchg
add
xchg
mov
lods
rolb
addr16
jae
add
push
out
mov
cmpsb
inc
stos
scas
sbb
cmc
mov
lcall
push
hlt
sub
cltd
cmpsl
inc
test
mov
mov
xor
mov
ret
jmp
mov
icebp
adc
sub
mov
fstps
lcall
out
out
cmpsb
arpl
in
arpl
mov
mov
ds
xor
leave
mov
pop
lods
xor
ja
test
lret
loope
cmpsl
lret
pusha
aaa
add
enter
dec
hlt
ja
add
mov
mov
or
in
push
pop
fnstcw
nop
aas
jmp
std
lahf
and
mov
add
ficoml
sbb
mov
jno
ret
scas
mov
cmpsb
pop
push
insb
fdivr
rorb
sarl
pop
fidivs
pop
push
jno
push
push
mov
sub
leave
mov
loope
mov
testl
jno
push
stos
repnz
mov
mov
subb
xlat
cwtl
aaa
sahf
shlb
scas
mov
push
mov
lea
movaps
ljmp
gs
pop
mov
xchg
pusha
in
push
xchg
pop
popa
adc
insl
jge
cmp
iret
mov
and
enter
or
js
cmpb
aas
xor
mov
cmp
testl
xor
push
fstpt
mov
int3
xchg
lds
add
adc
sti
flds
push
ss
sub
out
push
sub
xchg
pop
pop
mov
leave
movsb
mov
vpaddusw
inc
loope
movb
add
cmpsb
dec
push
push
push
push
sub
adc
add
movsb
jg
mov
dec
cmp
insb
push
adc
mov
das
jp
ds
movsl
sbb
ja
fcos
xor
mov
sub
xor
scas
mov
fwait
cmp
inc
loop
lods
mov
push
lahf
mov
add
mov
out
jecxz
dec
shll
pop
and
cmpl
pop
pop
sub
ja
or
adc
and
inc
cmp
mov
mov
icebp
aas
sub
and
hlt
mov
js
inc
or
scas
lcall
sbbb
mov
jae
sub
xor
and
mov
fs
ljmp
jo
negb
popf
jnp
sbb
mov
leave
out
dec
fisttps
and
push
js
fdivrp
cmp
sub
dec
loopne
mov
loope
in
jp
pop
stc
push
repz
jno
xor
mov
dec
jb
cmpsl
mov
cmp
push
jnp
mov
loop
hlt
mov
and
cmp
push
jmp
xchg
mov
aad
or
cmpsl
mov
or
push
rolb
pushf
fst
lcall
mov
mov
mov
inc
aaa
out
inc
mov
push
ss
gs
fwait
cmpsl
lcall
push
sub
or
aad
jbe
fidivl
pop
dec
aad
rolb
in
dec
lret
filds
mov
xchg
ja
inc
mov
cli
pop
sti
pop
add
sbb
cli
hlt
arpl
add
pop
incl
mov
imul
loopne
mov
pop
icebp
jo
sub
mov
repnz
fistpl
arpl
test
xchg
fstps
sub
dec
shlb
ret
int
pop
pushf
call
imul
in
out
inc
add
test
int3
ljmp
mov
scas
test
and
inc
jmp
cmp
xor
push
xor
aam
imul
lret
ds
in
jecxz
test
pop
adc
lret
test
lds
test
in
jmp
xchg
scas
sbb
mov
andb
lcall
push
aaa
stos
and
mov
xchg
insb
fst
pushf
fisttps
popf
movsb
mov
aad
jmp
in
xorb
sub
dec
sbb
xchg
mov
in
mov
push
fwait
dec
mov
pop
out
cmpl
repnz
sub
out
sub
loope
pop
mov
mov
daa
mov
pop
adc
lea
orl
movsl
js
xchg
movsl
jnp
jbe
add
out
popf
cmp
in
std
lock
ja
pop
sub
pop
es
pop
out
sub
inc
sarb
push
cmp
gs
jp
pop
add
stc
sbb
mov
cmp
or
jl
fstp
xor
sub
cmp
xchg
add
daa
adc
js
popl
pop
stos
fcoms
xchg
or
jae
mov
fdivr
fstpt
add
cmc
dec
test
inc
xchg
add
sub
mov
repnz
adc
jbe
movsl
in
test
jo
jp
pusha
sti
scas
mov
dec
jge
jecxz
ja
and
lret
dec
cmpsb
test
repnz
fsub
and
jge
fcom
push
and
or
mov
lock
mov
ret
cmpsb
hlt
mov
out
and
mov
push
aaa
or
icebp
jb
stos
mov
inc
or
sub
mov
icebp
stos
sbb
mov
call
jecxz
sbb
mov
call
jae
fwait
loopne
ret
daa
lcall
jns
sbb
rorb
inc
sbbl
xor
dec
push
cmp
lock
adc
insl
xchg
push
in
dec
mov
jmp
dec
shrl
push
sub
cwtl
lret
sbb
add
mov
push
aas
in
out
mov
dec
dec
jp
mov
mov
movsb
or
das
sbb
ret
mov
mov
iret
jo
je
add
push
test
aaa
and
shrl
stc
cmp
pop
pcmpgtw
sbb
cli
shl
hlt
mov
and
imul
cmp
or
xchg
lcall
into
sub
xchg
pushf
aaa
int
into
xor
pop
pop
in
pop
xchg
mov
pop
jae
and
cwtl
int3
xchg
push
cmpsl
xchg
dec
dec
dec
cld
and
loop
fnsave
mov
pop
nop
ja
mov
inc
std
mull
or
lahf
and
sbb
mov
mov
and
shl
mov
mov
xchg
shl
jnp
mov
add
mov
loopne
jmp
xor
stos
enter
je
out
mov
in
jmp
stos
mov
fdivrs
mov
sti
rorl
pop
stos
jne
mov
jno
ret
lea
lcall
cmpsb
push
lods
and
pop
or
test
xchg
into
mov
and
addb
mov
in
fs
push
andb
stos
loop
sbb
aad
test
gs
movsb
mov
out
jmp
xchg
stos
aad
xchg
pop
xchg
sub
out
xor
inc
outsb
lds
js
mov
cmp
pop
lahf
jmp
int3
dec
lcall
add
in
dec
int3
cwtl
inc
mov
lds
out
sahf
add
cwtl
int3
mov
and
setnp
dec
push
aad
mov
xor
rorl
jb
movsl
xchg
stc
xchg
je
xor
lods
jle
adc
popf
lods
idiv
sahf
adc
mov
int3
stos
push
dec
call
mov
push
loope
sub
sti
imul
fistpll
mov
idiv
add
dec
shl
or
push
inc
lcall
mov
lock
cli
dec
shrl
mov
hlt
jl
shl
daa
pushf
pop
lcall
jl
add
pop
cmpsl
inc
xchg
iret
std
mov
or
popf
lds
out
sub
push
inc
imul
mov
lea
add
lods
sbb
loop
xor
sbb
icebp
addb
cmp
and
dec
xor
ret
mov
test
add
mov
shll
xchg
mov
into
cmpsb
push
std
scas
xchg
mov
pop
push
xchg
jg
mov
xchg
push
and
sahf
aaa
fidivrl
lcall
push
jmp
add
sarb
shr
lret
cs
popa
pusha
sub
ds
dec
dec
ds
inc
test
or
les
mov
cmp
cmpsl
pop
and
pop
movsb
or
movsb
mov
sub
xchg
cld
mov
cs
in
adc
int
rcr
iret
add
test
push
inc
inc
lret
mov
jge
sub
mov
in
adc
out
push
iret
push
mov
pop
xlat
ja
in
out
push
inc
cs
icebp
in
mov
jae
sub
jge
xor
mov
mov
lahf
xor
pop
inc
and
mov
pop
aam
mov
pop
jge
sub
add
daa
xchg
loop
sti
in
rorl
and
je
decl
inc
lret
push
sub
out
xor
in
insb
sub
out
test
test
mov
xchg
movsl
add
loop
nop
cmpsb
shr
cmp
pop
out
iret
dec
lcall
cmpsb
jns
push
repnz
cwtl
out
insl
popa
cmp
dec
cmp
mov
scas
mov
inc
out
sub
xlat
or
dec
mov
loopne
int3
mov
fldt
dec
sbb
pop
sub
lcall
mov
fs
xchg
sbb
pop
mov
xor
outsb
enter
add
mov
xor
daa
dec
jmp
xchg
push
repnz
inc
or
xchg
jmp
imul
push
rol
adc
inc
dec
or
loope
xchg
lcall
cmpb
jmp
aad
lcall
mov
dec
out
jl
insl
mov
mov
cli
add
cmp
and
mov
or
mov
jo
ret
inc
test
out
add
mov
mull
mov
loopne
in
pop
loope
mov
icebp
and
lret
subl
inc
inc
leave
std
push
adc
cmp
xor
je
sub
adc
pop
jae
pop
sbb
shlb
lods
imul
call
dec
jne,pn
xor
out
sub
pop
inc
xor
cmp
push
adc
movb
dec
imul
andl
lods
sbb
pusha
test
xor
jo
cltd
fcmovnbe
popf
cwtl
xor
cmpsb
fdivr
movsl
repz
sub
test
sbb
dec
sbb
inc
sarb
mov
pop
adc
push
iret
addr16
sbbl
mov
ret
loope
test
int
gs
xor
mov
out
test
xor
pop
loopne
sbb
sub
fs
mov
ret
dec
jno
pop
ficoml
mov
pushf
les
int3
jae
mov
repz
push
jns
into
mov
pop
lock
xchg
mov
faddp
rorl
and
stos
cmp
pop
popf
jp
fists
or
fnstcw
inc
cmpsb
pushf
insb
or
loop
lds
in
gs
xchg
xchg
popf
sub
push
insl
xor
clc
fldenv
out
push
fbld
jnp
inc
es
or
sbb
and
jae
loope
lods
mov
sub
sub
int3
lcall
movsl
repnz
or
lret
cmpsb
les
out
cmp
addr16
xchg
xchg
jmp
mov
je
mov
add
adc
or
jne
cli
mov
jae
and
and
xchg
enter
int3
je
sbb
xchg
popf
lret
and
mov
mov
add
mov
mov
repz
repnz
mov
sahf
xchg
aas
lcall
movsl
pop
sahf
mov
daa
loop
xchg
adc
mov
fisttps
fmull
stos
jo
mov
pop
push
inc
and
in
push
imull
mov
shll
cld
imul
lcall
mov
xchg
lcall
push
inc
cmp
mov
push
inc
xchg
lods
fnstenv
inc
cwtl
ret
jo
and
enter
rcr
mov
sti
pop
insl
imull
jmp
mov
mov
mov
test
ljmp
out
cmp
movsl
ljmp
sbb
loopne
int
adc
arpl
cmp
fs
add
lock
inc
mov
push
outsb
in
out
in
jecxz
cmp
lcall
jno
ljmp
cli
daa
and
xor
jmp
into
adc
inc
fimuls
out
push
add
imul
hlt
mov
rcr
scas
loope
test
add
inc
ljmp
das
cli
movsl
aad
mov
js
pushf
in
dec
hlt
test
pop
pop
mov
mov
lods
inc
and
test
push
aad
aam
adc
fistps
dec
mov
lds
xchg
or
or
ja
inc
jns
lcall
jle
push
cmpsb
mov
cmp
or
push
fldcw
push
and
mov
jmp
js
or
sub
stos
xor
xor
push
push
cmp
sub
les
fwait
adc
int
inc
test
test
jmp
and
push
cmp
jmp
lods
pop
push
mov
xchg
or
mov
les
mov
cmp
xor
mov
xor
movsl
test
add
xor
mov
ja
and
fcmovne
jp
pop
or
cmp
dec
int
xor
and
lods
adc
push
repnz
jmp
xlat
push
xor
push
mov
notl
mov
mov
popf
std
mov
movl
fiadds
jne
push
fnstenv
mov
idivl
ret
mov
pop
popf
insl
mov
jmp
dec
aad
dec
sub
in
mov
f2xm1
mov
push
mov
sbb
and
sub
int
mov
add
inc
mov
inc
stos
dec
sbb
repnz
std
sub
aas
ret
gs
lea
push
fisubl
dec
and
addr16
fmuls
lock
pop
out
sub
les
sbb
cmp
push
and
xor
and
popf
cmpsl
and
in
mov
std
xchg
xchg
test
pop
loope
lcall
dec
mov
out
add
mov
mov
lock
mov
adc
sbb
xchg
cmp
mov
shll
xchg
mov
add
adc
bnd
sub
gs
lock
lret
jnp
mov
add
jo
jl
cltd
js
jno
scas
inc
mov
ss
jecxz
repnz
jge
dec
push
jmp
and
xor
sbb
cmp
inc
add
les
in
sbb
dec
jbe
sbbb
mov
shll
out
sbbl
xchg
mov
aas
cmpsl
push
inc
and
xchg
xlat
xor
sbb
sub
xchg
add
repnz
call
outsl
cmp
jl
cld
add
and
dec
adc
nop
mov
jl
xor
data16
adc
adc
mov
test
push
out
cmp
rcrb
popf
lret
push
mov
popa
pop
popf
mov
sub
add
lahf
in
mov
loopw
test
mov
mov
gs
jp
cld
mov
inc
je
call
mov
mov
jo
pop
push
movsl
js
movsl
dec
mov
ljmp
mov
outsl
lea
inc
mov
add
and
rep
pop
mov
pop
mov
and
cs
xchg
sub
std
test
sti
push
inc
inc
loop
jge
das
into
rclb
fwait
ljmp
push
mov
std
fidivrl
sbb
sti
std
movnti
out
xor
mov
hlt
pop
call
dec
mov
call
jns
daa
in
popf
ficomps
cltd
addb
mov
push
roll
sbb
lcall
in
ret
leave
stc
hlt
in
rolb
in
pushf
mov
sub
les
addr16
clc
mov
jmp
xor
xor
ljmp
movsb
jle
dec
adc
push
push
push
mov
or
bound
mov
cmc
cs
pusha
xchg
pop
lock
out
aaa
ret
mov
mov
ljmp
cmp
in
mov
rorl
stc
adc
mov
aas
out
in
loop
sub
mov
sbb
mov
pop
test
test
ficompl
dec
hlt
mov
cmc
pop
das
cmp
mov
addr16
adc
and
sbb
mov
inc
mov
repnz
test
fidivrl
adc
dec
les
cld
push
jmp
sub
or
pop
mov
mov
out
xor
jno
lods
inc
jecxz
in
rol
popf
shl
and
ss
dec
jno
clc
aam
cmovb
stos
jo
ret
gs
pusha
push
jmp
jp
cmpl
xchg
leave
scas
imul
test
add
lcall
dec
xorb
rclb
pop
repz
push
mov
mov
sar
or
aam
popa
inc
test
mov
or
push
push
fimuls
mov
movsl
sar
push
inc
and
inc
ljmp
iret
and
subl
sbb
inc
push
xchg
push
out
sub
mov
adc
in
pop
cmp
scas
lock
pop
xor
xchg
aad
xchg
dec
imull
or
shr
or
stos
sti
xchg
dec
stos
mov
addr16
pop
push
int
subb
dec
test
inc
loop
cmpsb
sbb
add
xor
insl
lcall
and
dec
sarl
pop
notl
mov
ds
mov
push
loop
sub
add
mov
push
xchg
mov
mov
pop
movsb
out
jo
shlb
cli
xlat
std
inc
testb
or
fcmovne
out
pop
push
jg
inc
xchg
mov
enter
sahf
cmp
es
call
andb
add
xchg
loope
mov
popf
iret
xchg
shrb
lods
cmp
and
sbb
outsl
imul
xchg
movsb
ss
inc
int
mov
out
cltd
cmp
mov
ja
addr16
push
mov
adc
cmp
xchg
aas
pop
xchg
mov
and
mov
movsb
lcall
push
cmp
fsubl
xor
int3
mov
adc
mov
push
pop
dec
sbb
cwtl
fwait
xchg
lock
cmp
push
movsb
mov
xor
push
decl
cmp
cmp
fdivrs
shll
jae
fistpll
mov
mov
sbb
push
negl
gs
and
mov
mov
mov
das
push
movsl
bound
dec
mov
inc
ds
sbbb
sbb
xchg
aad
push
and
lcall
das
and
out
cmpsb
jo
aad
mov
call
xchg
jp
lods
lcall
xchg
jo
in
loop
mov
sub
xor
inc
or
js
insl
inc
mov
out
in
fwait
adc
add
sub
jnp
sbb
xchg
popf
cltd
insl
repnz
stos
inc
inc
and
mov
pop
pmuludq
jne
cld
mov
sbb
adc
mov
xor
add
roll
adc
div
int3
out
je
addr16
ret
mov
mov
aaa
jmp
mov
jl
adc
xor
sub
call
sahf
sarb
dec
inc
mov
push
daa
push
stc
in
retw
popf
ret
inc
ret
rcrb
dec
cld
xor
xor
lds
and
ja
stc
push
mov
movsb
jl
lcall
out
cmpsb
inc
sbb
jo
mov
xchg
jle
inc
add
popa
push
mov
dec
in
sbb
xor
lds
push
loope
push
cmp
das
sbbl
mov
movsl
ret
xchg
sahf
push
decb
pop
pop
adc
push
sub
dec
push
out
addr16
stc
mov
fwait
lods
or
cmp
pop
jp
adc
jp
arpl
inc
pushf
cmp
sbb
fstpt
lods
fisubl
jns
jge
fdivrs
xor
fwait
lds
cmp
out
lcall
fs
pop
mov
out
dec
push
push
mov
pop
jo
pushf
gs
inc
jae
cmp
rcrb
xchg
ret
cmpsb
push
mov
test
and
iret
orb
dec
mov
rclb
loopne
mov
jmp
cmc
aas
cmpsb
mov
add
jmp
cmpsl
mov
cmpsl
add
push
sub
and
cwtl
in
jb
mov
loop
std
gs
inc
out
test
mov
dec
je
pop
sbb
movsb
mov
xchg
mov
sbb
repz
or
mov
cmpsl
pop
inc
jg
push
adc
and
inc
std
enter
mov
cmp
push
das
jmp
sbb
sub
jecxz
sub
movsl
cmp
pop
je
imul
out
sub
cmp
lret
mov
fiaddl
cmp
cmp
shl
test
adc
out
lods
pop
mov
mov
cmp
inc
les
jns
lcall
addr16
lcall
jle
test
ret
ret
sub
shlb
mov
push
aaa
mov
mov
jmp
mov
leave
cld
pop
jl
sbb
in
push
or
aam
popf
xor
and
ljmp
inc
stos
inc
or
repnz
mov
je
out
outsb
clc
push
pop
pushf
and
adc
into
xchg
fidivrl
rol
loope
and
sbb
loope
jne
popa
jae
gs
jg
adc
pop
mov
cmp
pop
adc
add
push
mov
outsl
hlt
pop
push
test
push
cmpsb
int
inc
jns
and
mov
mov
call
bound
xchg
add
pop
mov
sub
mov
mov
cmpsl
cmpsl
out
pop
mov
dec
scas
shrb
mov
lret
dec
mov
repnz
imul
out
xor
pop
mov
aad
jbe
ljmp
and
or
cmp
test
pop
sbb
xchg
inc
gs
mov
ret
push
rcll
xchg
ret
xor
in
sbb
jg
pop
push
add
daa
mov
jno
test
sbb
sbb
add
xchg
movsl
cmc
call
push
adc
fldenv
es
cmp
push
movsb
in
mov
bound
xchg
and
jo
mov
sbbl
cli
lods
xor
aaa
add
das
xchg
sti
fwait
cmp
xchg
out
and
shrb
jnp
cmpsl
cmp
push
movsb
fwait
mov
lcall
xor
pop
ss
in
adc
and
and
aas
fcmovnb
out
add
inc
pop
hlt
daa
xchg
xchg
aas
jbe
int
inc
fstpt
ret
jmp
loope
fstpl
pop
inc
leave
int
inc
jb
push
fwait
push
cli
in
in
mov
jge
ret
cmp
or
fnstsw
mov
sub
sarl
ljmp
loop
std
fistpl
loop
subb
xor
fdiv
mov
push
or
xorl
cltd
in
jmp
lcall
into
mov
pop
jle
adc
xchg
lds
aaa
sub
popa
bound
mov
mov
movl
rcrl
and
mov
jl
mov
sbb
fstpt
sarl
pop
ja,pt
sub
cmpsb
fstp
mov
mov
sub
xor
cmp
je
jmp
repnz
pop
and
jb
mov
subl
xor
jns
sti
stc
mov
add
adc
pop
mov
shlb
imul
sbb
aam
mov
fs
fisttps
inc
mov
xchg
addr16
sbb
mov
push
xchg
ret
add
mov
xchg
xor
lds
mov
jno
shl
cmc
push
mov
push
mov
fisttpll
ja
cld
popf
mov
out
jle
add
int3
jmp
xchg
gs
mov
mov
nop
xor
negl
xchg
test
and
sub
test
les
xlat
add
repnz
aaa
cmp
ja
nop
cld
pop
push
sub
ja
add
test
push
cmpsb
shlb
dec
shrb
ret
and
cmp
movsl
out
or
lcall
mov
lcall
mov
add
lret
or
nop
dec
pushf
fwait
jo
inc
dec
jecxz
daa
jo
inc
and
fwait
xor
lahf
fldenv
aaa
add
hlt
pop
ret
adc
pusha
push
ds
mov
enter
xchg
stos
pop
xor
jo
dec
shll
ja
adc
ret
adc
xor
lock
xchg
in
sbb
adc
repnz
dec
sahf
cli
cltd
mov
out
out
push
adc
sub
push
add
sub
mov
and
movsl
sbb
in
sub
add
sahf
lret
scas
lods
mov
jns
popa
aam
ss
jno
mov
mov
mov
mov
mov
repnz
add
rorb
stos
xchg
mov
into
icebp
mov
inc
mov
sti
mov
bnd
xor
out
repnz
sbb
outsl
cmp
test
mov
jns
sbb
outsl
js
xor
out
jmp
dec
dec
daa
lock
jl
ss
sub
out
scas
lds
push
ret
and
mov
daa
lock
xor
dec
pop
cmp
dec
dec
dec
sti
xor
pop
repz
mov
mov
out
fcoml
adc
jp
xchg
sti
daa
jnp
mov
leave
loope
and
adc
sbb
xor
push
iret
xchg
push
movsl
xor
sub
add
stos
cld
xchg
shl
cmpsb
pop
jo
mov
push
jne
dec
mov
push
jno
xor
aaa
sub
movsb
in
movsl
adc
loop
xor
cmp
out
cmp
add
sbbl
dec
dec
mov
push
into
fsubrl
push
negl
arpl
out
imul
push
in
mov
cmpsl
dec
dec
pop
pop
adc
mov
xor
mov
jg
les
scas
mov
ret
pop
jmp
mov
cltd
movsl
pusha
loop
mov
mov
xchg
out
leave
push
cmpsb
sub
add
pop
enter
call
xor
lcall
rclb
and
hlt
in
pop
leave
out
jp
sub
aad
push
gs
sub
pusha
mov
dec
movsb
push
fmull
adc
hlt
scas
mov
shrb
mov
xchg
mov
test
jmp
leave
movsl
sub
shl
rclb
inc
pop
dec
or
xchg
jle
mov
lcall
mov
sub
roll
stos
push
lcall
cmp
sbb
mov
add
cltd
fidivl
ror
adc
ret
leave
fwait
out
lret
pop
mov
sub
ret
jno
out
sbb
push
sbb
js
dec
mov
jb
push
inc
out
pop
jo
ljmp
pop
lds
and
sub
lods
in
stos
cmpsb
das
and
sbb
scas
aad
xchg
addr16
repz
sub
dec
int
jnp
loope
cmpsb
gs
dec
inc
js
mov
xlat
mov
or
notb
and
dec
test
gs
push
cmp
and
shrl
into
scas
sub
sbb
cwtl
iret
mov
mov
inc
cmp
mov
ret
lds
push
mov
pop
sub
xor
cli
dec
paddq
or
sbb
frstor
adc
call
adc
add
xor
cwtl
sbb
xchg
shl
popf
hlt
xor
les
scas
cmpsb
push
aam
gs
out
negb
push
popa
and
mov
movsl
and
mov
cmp
mov
xchg
xor
jo
movsl
into
mov
sbb
push
sbbb
pop
xchg
xchg
mov
fwait
sbb
popf
insl
push
and
arpl
and
jns
into
sarl
jo
pushf
xchg
aad
mov
or
cmp
push
fildl
aas
inc
dec
movsb
fcompl
rcl
xchg
mov
iret
shll
add
xor
loope
mov
int
xor
scas
fdivs
dec
cmp
fdivr
test
aad
pop
jg
js
in
push
in
mov
dec
insb
xor
hlt
mov
jg
addb
adc
add
lods
dec
out
andl
xchg
decb
test
daa
sub
lcall
test
loop
test
in
push
int
adc
xor
mov
lahf
jp
xor
rorb
sbb
mul
popf
daa
mov
loop
cmpsb
scas
shll
adc
pusha
jnp
bound
insb
repnz
xor
jno
imul
call
cli
push
je
inc
sub
filds
adc
shll
test
aad
xor
jge
loope
and
sbb
shll
dec
addb
push
movsl
xchg
cmpsl
imulb
leave
std
xor
or
mov
sub
out
in
cmpsb
lcall
adc
xchg
push
loope
jl
dec
or
ss
sub
mov
sbb
roll
scas
mov
rolb
xchg
inc
pop
cli
xchg
mul
out
decl
dec
subl
xor
inc
sub
call
enter
pop
lds
sbb
mov
push
in
mov
push
clc
mov
pop
int
jbe
cld
leave
in
inc
cli
sti
pop
jl
inc
cltd
out
mov
mov
mov
push
push
mov
lds
sub
xchg
push
cmp
orl
xor
sbb
insb
enter
xchg
jge
inc
scas
and
dec
movsb
scas
pop
add
frstor
ficompl
adc
das
and
imul
ds
dec
mov
mov
sbb
mov
sub
push
jbe
lea
dec
mov
sub
ja
inc
or
out
push
cmc
popa
pop
adc
sub
mov
mov
xor
call
movsb
ficoml
xor
lods
into
in
add
xchg
rcll
das
in
jecxz
mov
adc
dec
stos
push
daa
mov
fimull
jl
mov
repnz
inc
push
sbb
fiadds
addr16
cmpsb
into
jecxz
fdivp
loop
sbb
adc
dec
mov
pop
jge
ja,pt
cmp
lods
fbld
xor
sbb
inc
lcall
aam
jb
scas
push
loope
sub
leave
clc
pop
sbb
push
lods
jb
mov
mov
lcall
dec
jmp
movsl
mov
shlb
int
loope,pn
adc
jo
xchg
or
pop
shrb
push
jg
push
mov
push
xchg
inc
test
fs
rorb
popa
mov
mov
sbb
or
mov
cmp
jnp
std
rol
sti
dec
ds
or
pushf
pop
xor
jge
aam
push
push
lret
repnz
push
sub
mov
inc
xor
cmpsl
push
int
add
mov
inc
xchg
addr16
testl
or
push
lcall
leave
loope
pop
add
lcall
xchg
negl
lret
jmp
aaa
add
icebp
or
aad
pop
mov
add
xor
mov
push
loope
push
mov
cmpsb
sbb
adc
pop
mov
bound
push
loop
fisttpll
xor
popa
cli
loop
pop
mov
cmp
cmc
shll
sbbl
inc
scas
repnz
ds
xor
in
in
sti
cmpsl
je
ret
leave
sub
mov
insl
pop
jl
add
push
mov
jb
or
lock
sub
movsb
in
mov
jg
cwtl
lea
dec
ds
push
ja
mov
cli
mov
hlt
enter
pushf
inc
aas
imul
aas
mov
leave
xlat
sub
sub
and
sarl
repz
test
out
out
sbbb
in
pcmpeqb
add
test
inc
inc
pop
call
mov
and
adc
mov
das
xchg
xor
cmpsb
rcrl
lcall
loopne
mov
cmp
push
add
mov
call
cmpsb
jno
int
adc
sbb
push
mov
jo
loope
std
popf
and
ret
and
fbld
jae
je
in
test
sub
cmpsl
cli
ret
add
sub
mov
out
das
rcrb
cmp
xchg
pop
ret
jne
and
lret
and
hlt
daa
out
aas
fisubrs
rcrb
mov
mov
mov
mov
fimull
fisttpl
push
add
xchg
out
push
les
sub
repz
jno
ljmp
lcall
xchg
lock
and
rcll
bnd
movsl
add
ja
arpl
xor
adc
sub
repnz
mov
sbb
fstl
adc
mov
lahf
popf
jo
mov
lahf
push
pop
cmpsb
or
xchg
bound
xor
pop
mov
lds
mov
pop
sub
out
andl
and
mov
fcmovnbe
leave
fs
addb
ja
and
mov
push
je
add
push
fs
stos
and
negl
ret
add
lds
mov
cmp
incb
adc
jo
sub
data16
cmp
lcall
out
cmp
lock
pop
cmc
icebp
subb
pusha
inc
dec
out
push
sub
js,pt
mov
sub
insb
out
enter
aam
aas
fldt
jge
push
cltd
and
cmp
sbb
aam
test
test
add
aad
movsb
aas
jle
fsubs
add
dec
mov
pop
cmpsl
nop
sbb
call
jne
xchg
sbb
movsl
fnstcw
movsb
cwtl
pop
pop
mov
xor
out
adc
jno
inc
pop
cwtl
mov
pop
pop
jl
js
dec
jp
mov
fwait
sub
sbb
shrl
sub
movsb
add
lods
aaa
popf
mov
sarb
mov
add
gs
out
in
int3
out
adc
in
pop
out
inc
sub
inc
lds
inc
push
lret
or
jl
push
pop
dec
sub
pop
sbb
cltd
addr16
xchg
xor
lea
inc
aad
cmpsb
cmp
ljmp
call
xorl
push
je
in
jmp
push
sub
stos
xchg
stos
insb
pop
sti
jne
adcb
gs
pop
xchg
xchg
dec
lahf
in
push
xchg
aam
das
addr16
lret
out
jno
mov
ja
dec
jg
popf
rcll
sbb
cmp
inc
cmp
mov
mov
mov
sbb
cmpsb
add
push
push
sbb
cld
mov
inc
pop
addr16
enter
mov
jmp
lcall
cmp
aas
loope
and
jno
outsl
in
sub
ret
call
aaa
mov
add
mull
and
cmpsb
popa
adc
inc
ja
jp
jae
lock
sub
push
jge
imull
les
jge
mov
adc
gs
inc
or
xor
notl
ret
mov
in
and
sbb
lods
adcl
out
mov
and
loopne
sbb
xchg
pushf
xlat
pop
arpl
cltd
and
das
mov
jg
mov
mov
ds
sarl
lret
popa
rorl
ss
add
fnstsw
add
xchg
dec
hlt
call
add
pusha
outsb
mov
inc
xchg
lds
add
in
aaa
cmpsb
repnz
sbb
dec
mov
pop
inc
movsl
ss
pushf
mov
add
cli
out
mov
push
push
inc
mov
daa
shl
or
mov
in
sbb
cmc
jae
lds
sbb
and
test
xchg
push
inc
sub
sub
sbb
or
adc
and
repnz
repz
adc
mov
sub
cmpsl
cmp
and
push
jecxz
popl
mov
pop
sub
popf
mov
das
call
cmp
xor
cwtl
mov
test
enter
lret
and
xchg
inc
jno
jnp
mov
cmp
je
test
and
rcrl
mov
test
sbb
lcall
add
sbb
jmp
add
inc
ja
cld
push
out
lret
ffreep
in
pop
leave
push
int3
bound
add
repz
add
pop
fwait
cld
les
inc
inc
mov
or
cmpsb
scas
arpl
pop
out
vsubss
xchg
ficoml
ja
push
test
xchg
out
xchg
push
mov
sbb
push
mov
cmp
sub
or
mov
xchg
xor
mov
add
cmpsb
repnz
mov
and
lds
dec
lahf
cmc
pop
dec
mov
repnz
call
pop
pushf
call
std
push
cmp
ret
cltd
cmpsb
outsl
nop
cmp
icebp
xor
sbb
and
hlt
pop
pop
mov
or
adc
push
mov
call
jl
andl
jge
mov
in
pop
das
iret
xchg
xadd
fstpt
add
enter
add
ljmp
repnz
add
jnp
cli
imul
sbb
sbb
shll
pop
cld
repnz
pop
jle
and
xor
leave
test
int3
dec
push
sbb
fildl
lcall
stos
loope
loope
out
cmp
mov
jmp
out
mov
cmc
into
xlat
bound
mov
mov
inc
xchg
xor
cltd
test
xor
fwait
cld
fisubrs
jl
cmpsb
es
mov
lds
mov
push
fs
mov
dec
das
pop
lods
adc
imul
mov
xchg
jle
mov
cltd
or
pop
adcb
pop
inc
xchg
xchg
and
xchg
add
push
aam
hlt
ficomps
int3
loop
sub
lds
cmp
adc
cmp
xor
aaa
inc
push
xchg
jnp
sub
sub
cmp
dec
ljmp
adc
aam
popf
adc
add
rcl
xor
psubsw
xor
movsl
jge
xchg
push
jb
repnz
arpl
fcmovnb
xchg
cmp
fadds
iret
push
mov
inc
jmp
das
and
shlb
sub
xor
jnp
xlat
jo
jae
and
cmpsb
fsincos
mov
lcall
lahf
insb
jb,pn
shl
imul
loope
in
jbe
xor
push
mov
push
xchg
cli
lock
dec
xchg
pop
in
scas
lods
jne
aas
fisttps
dec
jnp
std
lods
cmp
pop
addb
cwtl
push
pop
jge
jecxz
push
outsb
movsb
pop
and
jne
test
inc
lcall
leave
cmpsb
mov
jns
mov
mov
pop
mov
nop
dec
add
shll
cmpsl
cmpsl
dec
shll
pop
cmp
and
mov
mov
push
fistps
das
pushf
push
or
cwtl
xor
xchg
int
jecxz
ds
cmp
cwtd
xor
dec
add
scas
cmp
cmp
ds
sub
push
push
hlt
mov
and
repnz
dec
mov
test
xor
pop
xchg
enter
sbb
push
or
xchg
xchg
or
cmpl
ds
dec
mov
fldenv
mov
fadds
push
mov
push
shrb
insb
jns
xchg
cwtl
icebp
xchg
add
dec
mov
cmpsb
idivl
cld
add
fucomi
push
fnsave
mov
jo
cmpl
xchg
mov
xor
fwait
pop
cmpb
sbb
flds
mov
cmc
xchg
and
push
or
outsb
or
fisubrl
imul
cmpb
cmpxchg
mov
inc
outsl
add
out
jns
push
jmp
jae
jo
inc
gs
popa
stos
lds
sub
in
mov
int3
pop
push
test
sbb
test
jb
jl
mov
jl
fstpl
jno
arpl
jb
and
pushf
jmp
jnp
sahf
push
rol
aam
adc
testl
pop
repz
jmp
scas
xchg
dec
or
add
mov
out
fmuls
push
push
xchg
shll
or
inc
jmp
shrl
adc
pop
rcll
cmp
fisubl
push
daa
aad
pop
ss
pop
in
out
loope
movsl
leave
aam
mov
out
iret
sarl
sbb
pop
inc
cmp
pop
push
dec
shll
les
stos
mov
das
flds
pop
mov
xlat
stos
js
sbb
sbb
aaa
jmp
roll
ds
dec
leave
dec
mov
xor
inc
hlt
fistps
pop
cmp
pop
out
mov
cmpsl
imul
es
and
bound
and
xchg
adcb
pop
leave
mov
xchg
mov
xchg
aaa
loopne
sub
cmp
push
push
movsb
rclb
cmc
shrb
imul
jl
loope
mov
jle
push
mov
mov
sbb
adc
lahf
mov
rol
or
mov
push
push
cwtl
mov
pop
test
fsubrl
fiaddl
pop
mov
jno
pop
dec
jo
push
sub
jae
mov
dec
inc
shlb
mov
shrb
pushf
std
daa
rcr
push
sbb
sub
cmp
out
xchg
mov
dec
call
testl
mov
iret
xlat
mov
lods
repnz
into
scas
clc
add
gs
in
out
movsb
inc
rorl
xchg
insb
bound
push
cmp
fcomp
roll
inc
cmp
xchg
add
ficoms
daa
dec
mov
into
cwtl
fsubrl
add
push
cmp
lcall
sub
test
push
xor
out
jle
xorl
mov
cwtl
jge
sbb
cmpsb
roll
fnstcw
xchg
lds
out
loopne
ja
fbld
jo
out
sub
pop
adc
or
lahf
sbb
mov
shll
scas
addr16
jp
dec
add
in
jb
int3
inc
pop
rcll
mov
rcrl
xchg
out
fstpt
out
mov
push
xorb
pop
lods
adcb
sti
pusha
sbb
rcrl
je
mov
mov
cld
popa
test
or
fwait
sti
data16
dec
xchg
repnz
rcrb
pop
movsb
push
push
mov
adcb
mov
lahf
loope
mov
dec
adc
mov
js
xchg
push
out
out
pop
push
or
movsl
pop
xchg
test
fsubr
dec
addb
cmp
daa
add
push
arpl
in
mov
pop
popa
stos
std
imul
jle
cmp
pop
mov
push
jb
xor
lcall
out
aad
shlb
loope
mov
je
pop
fidivs
sar
mov
cmove
sub
rcrb
pop
std
ret
or
stc
and
adc
mov
not
dec
out
push
cmp
mov
or
add
lcall
xchg
mov
pop
jae
cmpsb
pop
subb
fldcw
fadds
hlt
and
stos
lea
daa
rcrb
lret
sarl
xchg
ds
xchg
pusha
loope
add
aad
movsl
stc
sub
dec
cltd
sbb
sbb
in
imul
cmpl
idivb
cli
cli
push
ja
lods
jno
mov
fcomi
mov
add
sbb
movsb
inc
aas
dec
aaa
push
out
cmpsl
xchg
xchg
jnp
mov
add
add
cli
jl
mov
xor
aaa
add
inc
sti
cmp
push
in
jmp
add
push
mov
movsl
or
pop
sahf
and
jmp
shll
data16
mov
lds
mov
outsb
popa
fstpt
aad
test
out
call
push
rcrl
cmp
add
rcr
and
push
lcall
rcr
repnz
ror
addr16
pop
mov
imul
mov
push
mov
ljmp
test
or
push
xor
out
add
sub
repnz
mov
in
lret
negb
dec
sub
mov
jmp
push
repz
mov
leave
pop
and
mov
les
or
pop
and
rcrb
out
stc
loop
mov
cmp
enter
adc
mov
jne
rcr
pop
repz
bnd
pop
mov
lods
mov
repz
andb
rcrl
dec
cmpsb
adc
mov
call
or
lds
in
mov
push
and
cmp
repnz
or
movl
xchg
in
mov
insb
fst
sub
xor
dec
jo
mov
mov
sub
jno
fcmovnu
jl
repnz
push
insb
lcall
out
scas
aam
inc
sbbb
dec
jl
lds
sbb
outsb
jnp
mov
mov
call
stos
xor
sub
es
cmpb
and
jmp
jl
mov
and
mov
test
bnd
jmp
aad
subb
fs
js
leave
pop
push
mov
and
arpl
enter
addb
mov
xlat
and
jmp
addr16
jmp
add
xchg
fsub
or
jae
movsl
test
das
rcrl
imul
in
out
sub
and
inc
inc
ljmp
arpl
inc
mov
test
nop
xchg
vpacksswb
out
movsb
out
mov
ficoml
imul
jmp
aaa
and
ffreep
mov
add
mov
imul
xchg
addr16
je
pop
enter
xchg
push
shlb
inc
in
sub
pop
pop
mov
test
fscale
mov
jecxz
call
movsb
call
in
sbbl
loope
push
dec
jbe
pop
movsb
pop
es
cmpsb
jmp
inc
test
cmpsw
cmp
test
and
mov
sub
mov
enter
ffreep
mov
or
mov
daa
and
mov
addr16
mov
mov
popf
sub
fs
and
push
cmpsl
or
xchg
loop
inc
daa
xchg
xlat
cmpsb
aas
fs
lahf
add
pop
roll
pop
pop
sub
aaa
mov
dec
lahf
out
add
cmpsb
leave
imul
test
loop
and
and
aam
imul
bound
xor
movsl
inc
in
push
fiadds
adc
and
or
add
in
or
pop
or
cli
push
push
dec
in
mov
and
es
call
jnp
outsl
das
xor
xor
loopne
ret
cltd
push
pop
in
roll
inc
pop
imul
mov
repz
leave
negl
mov
lea
mov
mov
jmp
mov
mov
mov
lret
push
out
mov
or
inc
jb
addr16
mov
jno
push
push
loop
add
mov
xor
rcrl
popf
dec
xor
xchg
fcmove
xchg
lds
ja
inc
pop
fwait
repnz
repnz
jecxz
dec
jnp
jge
add
test
arpl
jo
add
repnz
ja
push
add
insb
pop
fldt
mov
ret
jb
outsb
mov
fisttpl
cmp
mov
jnp
aaa
in
incb
lcall
sbb
lds
shl
push
mov
jo
push
pop
fld
sub
jecxz
lcall
xor
and
cltd
or
jmp
xchg
lret
dec
imul
and
cmp
and
pop
test
out
cltd
mov
cmpsb
cld
das
jae
add
dec
mov
push
repnz
fnstsw
js
cltd
xchg
lods
push
push
push
adc
ret
jge
out
add
repnz
lcall
fs
bound
cvtps2pi
pop
jae
cmp
xor
das
rolb
sti
sbb
in
pop
and
sar
sbb
les
fadds
inc
andl
xor
cmp
std
outsl
mov
jmp
xchg
lcall
mov
out
test
ljmp
adcb
gs
ret
mov
movsl
pop
jle
popf
mov
jb
loop
test
mov
fdivs
int3
inc
mov
loope
mov
pop
clc
cld
stos
clc
out
jmp
or
adc
jno
mov
repnz
hlt
mull
mov
inc
clc
movsb
cmp
jge
push
imul
mov
imul
mov
jb
inc
mov
ret
pop
xor
out
lock
inc
loope
dec
cmpsb
leave
push
adc
pop
aam
mov
lcall
push
loope
sti
aas
and
adc
lds
movsb
add
inc
ret
imul
add
call
movsl
shll
sbb
lds
std
shll
cmp
add
or
add
mov
popl
xor
daa
fcomps
adc
fnstcw
mov
pop
inc
mov
xor
and
das
jp
mov
jo
aam
cmp
or
notl
call
mov
daa
pop
lods
push
pop
push
in
pop
mov
wrmsr
out
in
cmp
stc
pop
outsl
dec
incb
jo
cs
shrb
add
lahf
xlat
sbb
xchg
addr16
sbb
inc
or
jo
xor
leave
cwtl
adc
and
jbe
mov
xor
sbb
jp
push
jnp
mov
stc
lods
cmc
sub
xor
mov
clc
cld
pop
sub
repnz
pop
test
add
in
loopne
hlt
in
push
loopne
xor
pop
int3
xor
and
inc
sub
mov
jo
mov
mov
cmp
jge
loope
out
dec
popf
cli
in
xchg
jo
lcall
push
cmp
out
test
jno
loop
push
xchg
scas
mov
adc
mov
pop
inc
cmp
cmpsb
jne
rclb
mov
mov
mov
jp
movsl
or
xchg
xor
mov
cmpsb
aam
push
sbb
pushf
addr16
mov
loopne
xchg
mov
mov
xor
imul
mov
push
popf
cmp
int3
and
inc
push
hlt
daa
sbb
scas
imull
mov
ficompl
add
lahf
arpl
dec
dec
and
movsl
jae
mov
push
push
in
int
push
mov
jg
add
pop
test
rcrl
xchg
and
imul
shlb
dec
sbb
out
test
adcl
je
movsb
push
daa
cmp
aaa
insb
jno
mov
dec
dec
cmp
or
lcall
leave
xlat
jo
push
mov
stos
mov
mov
mov
pop
fwait
add
out
jg
mov
jecxz
pusha
and
cmp
lds
pop
fdivl
xlat
sahf
sub
lcall
lret
inc
cmpsb
in
sar
xchg
mov
int
js
clc
xor
test
div
cli
stc
push
xchg
loop
jns
fidivl
movsl
in
add
out
jl
in
xchg
xchg
nop
rcll
pop
mov
jp
add
inc
js
jge
subl
dec
and
mov
pop
and
ljmp
push
test
mov
cmp
ja
cmc
and
inc
je
push
xor
pop
mov
andl
out
push
lret
cmp
pop
pop
ret
dec
out
test
out
scas
or
inc
and
cmp
mov
imul
sbb
xchg
sub
mov
lds
repnz
sbb
add
cvtps2pd
xchg
call
int
lret
push
jmp
dec
dec
xlat
cltd
cmpsl
jno
dec
cmp
lcall
xchg
or
mov
dec
or
test
cmp
mov
aad
insb
jmp
js
sahf
fwait
into
pop
test
insl
add
je
xlat
inc
lods
mov
in
jns
sub
jge
or
lds
enter
inc
imul
xor
mov
fsubrl
add
cli
mov
or
mov
aad
mov
mov
mov
add
pop
aaa
lods
lcall
es
in
xchg
mov
jbe
mov
xchg
xchg
inc
mov
mov
xor
sbb
jo
iret
dec
arpl
lods
add
cli
stc
xor
and
subl
cmpsb
mov
jg
lcall
outsb
xor
shll
icebp
or
adc
and
leave
cmpsb
flds
arpl
mov
xchg
mov
adcb
repnz
incl
outsl
cmp
pop
add
imul
ret
int3
dec
push
fcomps
mov
pop
cmova
jmp
rcr
pop
and
imul
fiaddl
mov
dec
enter
cmp
dec
imul
fsts
cmpsb
or
lock
shl
imul
add
or
add
inc
dec
stc
sub
sbb
add
rorb
sub
das
ds
mov
pushf
out
out
aas
lcall
add
lret
dec
call
sbb
push
cmp
xchg
ljmp
push
add
xchg
jns
dec
arpl
pop
scas
push
js
insb
out
cld
fcoml
icebp
sar
jno
mov
sub
mov
jmp
push
adc
sub
ret
xchg
in
lds
shrl
add
idivl
call
jno
arpl
mov
cmp
cmp
imull
push
mov
and
sbb
popf
out
rorb
leave
sbb
ret
adc
add
jns
cmc
mov
outsb
sub
cmp
leave
call
negb
lds
fisubrs
push
ds
aaa
out
mov
pop
dec
popf
mov
add
popf
sbb
ss
mov
out
cld
enter
sub
scas
jno
rclb
and
push
xchg
mov
mov
and
in
pop
dec
test
sbb
cmp
push
cmpsb
cmpsl
mov
scas
lret
push
adcb
add
rcrl
lcall
lds
push
inc
pop
insb
inc
cmp
mov
xchg
inc
cmpsb
das
leave
sbb
jmp
jb
adc
jns
add
mov
shll
xorl
cmp
aad
out
bound
cmpsb
xor
in
dec
mov
je
in
pop
mov
movsl
jbe
or
pop
stos
mov
push
andb
xor
lahf
fisubl
cli
fwait
rclb
mov
jns
mov
dec
and
inc
test
lcall
das
push
aas
mov
sbb
sarb
inc
sarl
lds
sahf
ja
je
in
mov
mov
xor
jmp
xor
jbe
inc
jnp
in
push
das
add
mov
push
psubsw
insb
rcr
jecxz
out
dec
xchg
pop
and
mov
cmp
mov
loope
add
dec
push
lret
mov
das
out
add
mov
lds
mov
pop
repz
and
shlb
mov
jle
bound
cmp
cmc
mov
cmpsb
mov
adc
and
out
mov
sti
repz
sbb
arpl
cmpsl
mov
clc
push
push
mov
negb
xor
xchg
push
cmpsl
icebp
ds
adc
jnp
pop
arpl
shrl
cpuid
nop
adc
sub
mov
in
jge
cmpb
inc
sub
insl
nop
jmp
jmp
pop
pop
pop
adc
pop
inc
cld
adc
mov
or
leave
sbb
cmp
fidivs
cs
mov
cltd
and
popf
dec
cmpsb
fdivrp
mov
call
leave
mov
lds
nop
sub
clc
push
mov
fstl
mov
shlb
push
push
ja
sarl
arpl
andl
xchg
jp
loope
jnp
lret
lods
pop
lcall
loopne
lods
fidivs
cs
push
cmp
shll
rcrl
jge
jbe
into
mov
pop
das
loop
cmpsb
in
scas
int
add
xchg
andb
and
sbb
sub
fstpt
sub
xor
sbb
sbb
or
cmp
test
xlat
pop
out
shll
inc
adc
mov
jnp
push
sbb
pop
fldenv
adc
xchg
mov
push
aaa
add
jmp
aad
mov
jcxz
cmp
shl
aaa
pop
fwait
sub
in
movsl
idivl
xchg
lea
cmp
fdivs
mov
nop
mov
and
sub
adc
andb
mov
adc
or
lods
fwait
xchg
fisubrl
xchg
mov
mov
jecxz
subl
jp
mov
pop
orb
cmp
ds
xor
shll
hlt
icebp
lret
dec
fldcw
add
ja
sti
dec
add
lret
jnp
mov
movsl
aas
sub
xor
nop
mov
cmp
movsl
pop
adc
nop
ficoms
ss
cmpl
adc
rorb
ret
lret
xor
cmp
add
sub
sub
pop
test
pop
mov
ret
xor
dec
sub
xchg
or
out
mov
sahf
in
icebp
loopne
orl
jmp
mov
xchg
out
arpl
sub
insb
cmp
jbe
sub
popf
stos
pop
dec
and
sbb
adc
mov
pop
iret
hlt
cmp
xchg
cld
scas
not
xchg
aad
inc
cmpsb
jns
pop
jge
cmp
jp
insb
pop
xchg
flds
dec
xor
mov
bound
arpl
dec
test
dec
fcoms
xor
stos
rclb
add
mov
and
or
out
sbb
nop
div
pop
fistpl
cmp
gs
mov
shlb
dec
aaa
imul
and
mov
push
fstl
fs
into
sbb
jecxz
in
movsl
and
sbb
cmp
sub
xchg
out
inc
adc
adc
and
imul
repnz
lds
and
lock
push
push
pop
sub
mov
jne
cmc
leave
aad
in
stos
dec
int
xlat
dec
dec
and
adcl
jp
adc
jne
mov
pop
sbb
mov
ret
daa
cmp
mov
fiaddl
pop
stos
jp
fidivs
push
rclb
and
or
fildll
add
sahf
adc
ret
insb
inc
mov
iret
aaa
mov
stos
inc
cltd
inc
mov
dec
xchg
ret
clc
loopne
cmpsb
add
pop
sub
lret
jl
arpl
push
push
shlb
mov
pop
mov
sub
lods
mov
or
mov
rolb
jp
push
pop
xlat
mov
add
pop
pop
mov
cmp
fwait
add
popa
push
cmpsl
jne
ljmp
jae
mov
dec
in
cmp
pusha
mov
into
in
jo
xchg
repnz
xchg
aaa
das
xor
xchg
sarl
jecxz
pushf
stc
cltd
xchg
cmp
inc
xor
sbb
aad
loopne
aam
imul
movsl
test
xor
ja
push
divl
and
pop
inc
xor
pushf
std
gs
mov
int3
push
insl
push
jp
jo
fbld
xor
nop
in
lret
imul
sbb
dec
fwait
adc
out
out
movsl
jl
dec
mov
int
test
rolb
fstps
xor
ja
xchg
push
aas
cmp
mov
bound
cmpsb
dec
add
fisttpll
cwtl
push
lea
aas
shlb
bound
pushf
out
sbb
outsb
mov
sbb
in
shl
rorl
push
xchg
rolb
push
lds
int
mov
mov
lcall
fnsave
or
ret
movsb
jns
cmp
lret
or
daa
mov
daa
jae
ja
dec
mov
xchg
mov
xchg
sbbb
mov
popf
or
scas
mov
mov
inc
xchg
addr16
test
aad
xlat
gs
out
jns
and
sub
cmp
je
out
out
cmpsb
xchg
and
adc
sub
icebp
pop
clc
in
inc
add
mov
mov
movsl
cmp
adc
shrl
ret
cwtl
in
cmpsb
scas
mov
addr16
rorl
and
mov
les
test
ret
mov
push
lea
fldl
and
xchg
pop
mov
cli
ja
fsubl
std
addb
mov
mov
dec
pusha
inc
and
inc
jmp
push
imul
push
aam
adc
out
ret
pop
xchg
mov
shll
test
loope
pop
out
lcall
add
mov
pop
and
cmp
mov
push
cmp
std
mov
fwait
bnd
cmpsb
cmpsl
cmpsb
mov
fucomi
xlat
or
icebp
jp
cmp
and
out
mov
xchg
rclb
pop
in
rorl
cwtl
shr
std
inc
lods
push
iret
sub
push
mov
pop
push
cmp
cwtl
add
inc
and
xchg
ljmp
aaa
jp
adc
cmp
pushf
and
ja
insl
imul
pop
insb
adc
test
andl
sbb
dec
dec
mov
jg
hlt
pop
push
mul
pop
sub
cmp
cltd
xchg
aas
mov
mov
pop
sbb
in
cld
add
shrb
outsb
push
push
adc
test
ja
popf
inc
clc
les
adc
push
or
or
pop
mov
cwtl
mov
cmp
lcall
xchg
mov
std
sub
mov
push
lret
dec
outsl
inc
lea
cmp
and
arpl
xchg
andb
mov
dec
out
and
js
cmp
push
addr16
lret
mov
push
das
sarb
inc
jae
xchg
xchg
mov
test
das
pop
mov
xor
adc
sub
fidivs
push
jo
adc
push
mov
sbb
cmp
outsl
out
pop
cmp
dec
pop
jle
repnz
sub
add
shll
insl
mov
aad
xchg
mov
je
std
add
mov
insl
lahf
or
lods
in
cmp
loop
pusha
mov
mov
xchg
ficompl
xchg
loope
lret
jge
mov
xchg
mov
mov
mov
sbb
push
cmp
int3
xchg
out
das
leave
mov
lret
mov
inc
inc
dec
testl
adc
pop
lahf
jecxz
add
out
scas
test
popf
idiv
pop
pop
dec
push
xor
movsb
cmpsb
pop
xchg
add
mov
pusha
adc
cltd
jae
repz
mov
and
xor
sub
ret
aas
out
lcall
jl
adc
outsl
aaa
fmuls
int3
scas
add
idivl
mov
or
ds
sahf
daa
test
stos
mov
mov
jmp
loopne
ret
in
aaa
xchg
out
in
adc
mov
ds
in
aad
stos
fists
test
adc
xchg
mov
adc
mov
out
lock
cmp
dec
jecxz
cmpsl
movsb
jb
aaa
sub
popf
dec
mov
xor
addb
gs
enter
jge
ret
push
data16
fs
push
test
and
roll
mov
lret
xchg
fnstcw
adc
sub
pop
orb
enter
stc
sub
mov
in
lcall
adc
cmpsb
in
xor
pusha
jb
mov
mov
cld
dec
sub
and
add
imul
js
jno
mov
les
jne
add
cmp
fcomps
ljmp
add
cmpsl
fwait
cmp
mov
lods
cmp
popf
in
lcall
testl
pop
rcrb
or
aam
sub
popf
or
mov
dec
xor
xlat
adc
movsb
out
sub
fucom
adc
loop
pop
shll
fimuls
and
cmc
insb
sub
inc
xor
popf
out
popf
sub
jge
in
push
mov
cmpl
cmpsb
sub
cmc
mov
cmp
mov
cmp
int
out
dec
jo
dec
pop
sbb
pushf
iret
sub
push
xor
fisttpl
mov
pop
mov
push
xor
call
sbb
pop
push
cmp
jne
xchg
ljmp
dec
xor
mov
adc
fldenv
mov
sbb
mov
in
cmp
lret
sub
stos
jnp
out
int
jecxz
jnp
mov
pop
push
xor
adc
mov
loope
push
and
out
xor
jns
mov
fdivr
push
inc
aas
pop
fld1
pop
mov
pushf
mov
push
sbb
cmpb
xor
idivb
lret
xchg
incl
mov
arpl
and
add
cmp
xlat
nop
mov
push
imul
into
pop
sub
sbb
outsl
push
testl
testl
lahf
shlb
pop
pop
insl
jb
movaps
gs
test
pop
in
mov
inc
sahf
or
sbbb
lds
add
dec
int3
mov
ret
and
add
repnz
mov
sub
hlt
scas
rorl
movsb
pop
sub
cmpsl
adc
mov
mov
cmp
test
sub
lret
out
mov
outsb
sub
dec
sbb
fisttpll
lcall
in
bound
jns
fwait
dec
push
loope
inc
enter
and
inc
jmp
sub
dec
repz
add
dec
mov
jle
ss
jg
dec
mov
fdivrp
int3
cmp
insl
popa
rorl
lret
in
rolb
adc
cmp
xlat
push
jge
mov
bound
test
out
pop
arpl
jae
adc
push
pop
push
mov
inc
fistpll
outsl
xchg
xchg
push
mov
sub
shr
repnz
adc
jle
mov
push
xor
aam
sbb
lcall
imul
sti
jecxz
mov
pop
negb
dec
daa
and
xor
xor
mov
mov
jno
pop
add
insb
out
pop
and
stc
movsl
xor
hlt
lahf
and
sub
mov
fdivr
cmp
pop
addb
mov
cmp
mov
push
mov
xor
mov
outsl
or
out
pop
inc
push
fdivrp
scas
inc
lcall
call
mov
mov
lea
xchg
jmp
mov
and
in
negl
subb
subl
and
lcall
cmpb
or
cmpsb
shl
mov
xor
push
fdivl
and
arpl
mov
int3
das
xor
pop
ds
xor
and
jns
sbb
nop
push
push
cmpsl
sbb
fnstsw
hlt
mov
add
ja
sub
pop
loop
leave
out
andb
arpl
mov
sbb
out
sti
lcall
jecxz
mov
bound
shrb
xchg
cmpsl
aas
cmp
or
mov
add
dec
int
or
lahf
pop
or
adc
in
jmp
fcos
jl
mov
lods
movsb
sbb
xchg
mov
ret
mov
stos
mov
pop
call
dec
xchg
mov
imul
adc
push
xchg
sbb
dec
mov
push
cs
mov
in
sub
outsl
insl
sbb
dec
shll
out
data16
cmpsl
jmp
flds
rcl
cli
jmp
jecxz
loopne
lcall
std
or
push
sbb
dec
mov
popa
cmp
xor
mov
jmp
sub
stc
dec
mov
sub
les
xor
je
jnp
add
add
shl
mov
rcrb
aaa
and
jp
xor
add
fcomi
mov
dec
dec
scas
sub
sbb
add
mov
scas
inc
cs
mov
xlat
sbb
fs
adc
inc
dec
mov
addr16
shll
les
mov
pop
cmp
bound
xchg
movsl
aad
jno
jmp
and
mov
leave
cmp
jg
xchg
lcall
sub
movsb
mov
cmp
mov
pop
mov
inc
js
mov
fwait
cli
pop
pop
aam
adc
jae
lcall
dec
adc
jmp
testb
das
mov
dec
dec
fldt
stc
and
jp
cmp
inc
push
ljmp
movb
stos
or
xlat
dec
cmp
int3
xchg
dec
cmpb
mov
jne
cmp
jge
xchg
subb
pop
shlb
xchg
test
dec
int
and
push
imul
mov
xor
lcall
mov
sqrtps
test
rolb
shlb
adc
pop
pop
les
out
sub
add
ficoml
push
aad
inc
adc
pop
push
lds
sbbb
andb
das
aam
cs
sbb
imull
mov
mov
shll
xor
inc
mov
cmpsb
bound
or
push
mov
dec
mov
pop
cmpsb
loop
roll
out
sbb
add
lcall
jge
inc
movl
loop
sbb
lods
test
xor
dec
data16
es
aaa
xchg
inc
xor
sub
mov
push
jge
loop
push
push
cmpsl
into
out
rorl
mov
nop
mov
add
stos
fldcw
in
xchg
lds
xchg
xor
aad
jb
shl
loopne
pop
out
adc
loopne
adc
jne
mov
notl
fldenv
pop
mov
xor
not
rorl
push
push
push
xchg
addb
andl
push
repz
lods
mov
and
cmp
lret
jmp
mov
clc
jl
push
sbbl
adc
mov
fcomi
lret
aas
dec
xor
jns
mov
add
jp
enter
mov
outsl
call
jnp
imulb
in
insb
and
inc
insl
xlat
xchg
xor
or
ja
mov
frstor
test
negl
mov
fnstcw
sub
push
mov
lcall
xor
out
bound
loopne
scas
addr16
mov
lret
mov
mov
mov
int
in
ja
dec
cmpsl
jecxz
imul
inc
cmp
movsl
jl
cmp
pop
dec
mov
movsb
xchg
bound
lds
mov
xorl
cmp
imul
jmp
adc
loopne
lcall
loopne
sarl
mov
pop
push
mov
jl
pop
mov
push
sbb
repz
imul
dec
mov
sbb
rcrb
xor
xchg
int3
addr16
xor
xchg
inc
scas
in
or
push
dec
pusha
push
inc
out
hlt
add
dec
xor
fwait
and
sub
shl
pop
mov
imul
addr16
add
repnz
bound
and
outsb
push
das
dec
and
lret
out
push
pushf
mov
or
adc
xchg
cli
xchg
jo
les
idivl
jae
sbbb
fcom
data16
xchg
nop
mov
push
xchg
loopne
faddl
jo
lret
xchg
jns
out
mov
mov
and
out
aad
push
inc
lahf
les
inc
popa
push
cmp
cltd
test
faddl
iret
and
mov
popf
mov
cli
int
mov
jp
in
call
ret
lods
out
mov
imulb
mov
out
mov
das
sbb
mov
and
cmp
add
fsubrl
arpl
sbb
mov
stos
movsl
mov
pop
adc
mov
mov
pop
movsb
hlt
and
xor
cld
sbb
mov
adc
aas
add
lcall
cmove
lahf
bound
rcll
xor
loope
lds
sub
mov
lcall
sub
loop
in
xor
add
shll
movsl
arpl
sub
flds
adc
xchg
movb
xchg
pop
xchg
adc
push
xchg
dec
popf
ss
js
mov
aad
or
jns
in
rcr
or
mov
rcll
xlat
gs
in
fxch
ljmp
xor
shll
mov
leave
sbb
adc
test
cmpsb
fistpll
mov
mov
pusha
dec
jl
mov
dec
xor
in
inc
pop
mov
in
addb
lcall
mov
lods
or
fucomi
lcall
out
cmp
lods
imul
xchg
cltd
mov
add
jbe
adc
mov
test
mov
mov
or
aaa
inc
pop
scas
xchg
sbb
pop
mov
out
cmp
jnp
mov
xor
mov
roll
adc
cmp
mov
push
sub
mull
mov
in
and
std
mov
dec
and
ret
aad
lods
mov
lcall
xchg
test
popf
jns
mov
mov
inc
aam
aaa
jb
shrb
mov
int
bound
push
shl
mov
je
shll
sub
popl
insl
ficomps
andl
shl
and
cmp
xchg
sub
or
cmpsb
jmp
mov
out
jmp
xchg
mov
jns
hlt
add
xor
mov
adc
pop
das
aad
jnp
pop
stos
mov
or
enter
fisubs
fadds
xchg
and
cmp
mov
in
pushf
mov
notl
adc
orb
adc
ss
mov
lcall
ror
sarb
add
and
mov
mov
push
stc
cmpsl
rcll
out
add
or
cmp
lcall
push
mov
pop
adc
or
or
nop
pusha
fsubs
ds
rclb
pop
inc
out
mov
pop
cli
push
pop
push
mov
mov
out
sub
mov
pop
out
xchg
or
ret
mov
sub
andb
dec
mov
dec
mov
push
std
cltd
mov
jecxz
sub
psrlq
cli
cwtl
fwait
lds
rclb
daa
out
mov
pop
mov
push
in
arpl
test
iret
fcoml
movsb
shll
repz
lret
pop
fdivr
jns
sbb
dec
in
popf
out
ret
xor
js
setbe
mov
ja
or
jnp
daa
leave
push
in
arpl
mov
xchg
lea
adc
mov
mov
sub
fldl
xor
jno
fistps
out
xor
scas
add
pop
loope
lds
les
popf
mov
out
dec
adc
xor
lret
les
gs
jp
and
add
cmp
stos
push
pop
in
xor
call
push
jmp
sbb
nop
adc
sbb
imul
ror
jns
mov
push
je
cmpsb
ss
imul
jnp
jle
push
adc
mov
out
add
add
jnp
xchg
pop
push
mov
repnz
push
loope
add
mov
xor
movsb
shr
cmp
xchg
xchg
call
mov
push
aaa
xchg
sub
and
lcall
pop
inc
and
xor
loopne
sarl
pushf
inc
cwtl
adc
dec
in
xchg
and
mov
cmpl
push
in
mov
cld
or
add
aam
rcrb
sbb
dec
sbb
mov
scas
push
addr16
mov
sub
pop
in
inc
dec
lock
mov
pop
flds
xchg
sub
daa
pop
pop
enter
dec
cli
dec
push
mov
aad
sub
lock
pop
rcr
daa
outsb
fucomi
arpl
or
mov
mov
fwait
inc
popf
rcr
push
fcmovbe
scas
arpl
mov
out
xor
subl
rcrl
cmpsb
and
mov
mov
icebp
lods
pop
jge
ja
movsb
sbb
pop
mov
mov
sbb
daa
out
push
dec
and
insb
lock
popa
jle
imul
xchg
sub
pop
cld
in
shll
nop
sub
arpl
inc
imul
ret
fwait
push
lret
add
sbb
ret
mov
add
inc
icebp
dec
push
sbb
mov
mov
call
aaa
xchg
jae
sub
in
jl
sub
loop
dec
jmp
stc
dec
std
mov
xchg
push
in
imul
mov
sub
loopne
rcll
xor
pop
stos
ss
mov
or
mov
push
stc
sbbl
imul
lea
push
sbb
xchg
cmpsb
fs
xchg
fisubl
add
mov
jle
adcb
cmpsb
mov
push
movsl
mov
outsl
imul
mov
jo
mov
inc
jle
test
repz
pop
sahf
xor
xor
call
loopne
push
pop
out
loope
mov
and
arpl
xchg
daa
xor
or
push
leave
sub
enter
xchg
or
hlt
push
ss
dec
or
rcr
sbb
push
push
xor
mov
inc
daa
sub
test
cmp
lock
cmp
loop
mov
int3
outsl
cmp
pop
mov
and
jae
pop
rcrl
ljmp
jae
and
inc
or
jnp
xchg
push
fbld
lcall
cwtl
sbb
adc
out
mov
shl
adc
inc
pop
jb
call
xor
push
arpl
pop
enter
aad
lcall
xlat
mov
mov
mov
push
negb
or
fisubl
negb
add
lcall
arpl
xor
add
jnp
jle
ss
xchg
mov
mov
jne
jbe
divl
insb
test
int
mov
mov
cld
subb
mov
xchg
fwait
out
sub
imul
jp
in
sub
ja
out
hlt
xchg
or
add
dec
std
loop
inc
adc
cltd
jge
jns
mov
aaa
das
lret
or
rorb
sahf
push
pop
cmp
leave
inc
lcall
movsb
ficompl
pop
dec
dec
or
jg
xchg
mov
cltd
lcall
xor
pop
mov
jno
sub
add
out
mov
sbb
test
pop
mov
push
push
mov
ja
outsl
rcl
sti
push
daa
aam
frstor
mov
jnp
ret
pop
mov
add
xor
bound
test
pop
pop
xor
cmp
jae
cmp
ret
test
mov
lret
fsubs
jb
xor
sbb
mov
xchg
dec
imull
adc
xor
in
push
or
fnstsw
mov
inc
aas
into
push
push
xchg
sahf
cmp
call
loopne
jp
mov
idivl
in
fstpt
mov
lods
imul
xchg
mov
out
stos
dec
push
xor
psubsw
cmp
add
test
mov
shlb
sub
mov
add
jg
sub
dec
adc
cmp
test
mov
shl
push
movsb
xchg
loope
test
aaa
lcall
fnsave
fadds
outsb
mov
xchg
push
out
test
xchg
cmp
addr16
mov
xor
lock
lock
adc
jg
lcall
sahf
and
jb
vpxor
popa
mov
xchg
cltd
or
mov
sbb
leave
fnstsw
xor
aad
cli
xchg
or
sti
fcmovnb
xor
jae
aad
pushl
add
jb
add
push
pop
out
push
rep
lcall
int
popf
jg
mov
xchg
arpl
lcall
loop
leave
test
sub
int
loope
and
and
rolb
rcl
dec
movsl
sub
dec
lcall
mov
inc
xlat
xor
dec
pop
mov
mov
enter
add
cmp
or
sub
mov
gs
jmp
sbbb
push
out
dec
and
cmp
push
stos
movsl
and
lahf
pop
leave
out
cmpsb
jne
push
xlat
cmp
lcall
negl
ljmp
ret
jb
arpl
bswap
push
stos
mov
mov
push
fistpll
call
iret
fsubl
loop
jns
lcall
cmp
inc
bound
loope
dec
xor
adc
mov
and
sarl
jnp
je
sub
cmp
out
sbb
insb
inc
mov
pusha
call
inc
add
loope
jo
shl
out
jge
mov
mov
sub
loopne
lcall
xlat
mov
add
jge
scas
stos
cwtl
cmpsl
jmp
pop
push
aaa
xchg
and
loop
jge
mov
mov
int3
lcall
and
imul
pushf
lcall
aad
fisubrl
mov
cli
ret
or
hlt
aas
add
test
dec
insb
test
idivl
push
stc
stos
push
mov
push
push
lea
sti
ret
xor
imul
cltd
pop
jmp
negb
or
push
dec
sbb
pop
dec
cmp
xor
jecxz
mov
mov
mov
ljmp
mov
nop
test
aam
push
cmpsb
mov
ss
jge
adc
mov
stos
nop
adcl
cld
inc
arpl
mov
imul
in
xor
fsub
arpl
and
lods
xlat
or
mov
pop
sbb
adc
hlt
cmp
adc
xchg
or
push
xchg
cmpsb
std
out
cmpsb
stos
loope
push
mov
jecxz
lret
mov
loop
push
add
sub
fmull
cmp
sbb
mov
pop
jle
popa
in
jecxz
cmp
sub
mov
xchg
dec
jmp
enter
cmpsb
lcall
xchg
jno
fldt
idiv
outsl
negl
fwait
cmpsb
rol
push
das
xorb
gs
jg
in
enter
rolb
clc
aad
xchg
lods
and
xor
sbb
ja
in
les
mov
sarb
fildll
loope
fwait
push
negb
int
sbb
mov
loopne
aaa
xchg
add
mov
js
pop
fs
cwtl
cwtl
aam
sub
inc
push
mov
outsl
rcl
loope
cmpsb
xor
rcrb
xchg
fsubrs
rorl
lcall
pop
fwait
loope
mov
mov
xor
out
gs
lcall
push
leave
jno
push
addl
xor
out
mov
loopne
mov
int
int
test
popl
or
jno
pop
add
subl
lret
daa
dec
xchg
neg
shlb
es
push
aad
ret
mov
push
test
xchg
call
and
sahf
pusha
jno
and
repnz
dec
in
cli
jno
mov
aaa
mov
hlt
sub
repnz
std
mov
xchg
fwait
bound
sti
xchg
xor
cmp
ljmp
cld
insb
adc
aaa
add
jmp
mov
rorl
jecxz
and
addr16
loope
cmp
sbb
sti
xchg
cmp
mov
call
and
loopne
mov
rorl
mov
aas
pop
clc
in
aad
pop
loop
cmpsb
mov
mov
jbe
fld
mov
pop
mov
and
das
xor
lea
push
pop
mov
bound
or
imul
jno
jge
arpl
mov
xor
cmpsb
inc
pushf
nop
push
jo
adc
cmpsb
rol
pusha
movb
jecxz
or
adc
and
xchg
ret
sub
pop
in
cmpsb
add
shlb
shlb
sub
sbb
and
in
popa
cmpsb
dec
sarb
imul
inc
xor
leave
insb
jae
repz
mov
and
sbb
pop
add
xlat
mov
sbb
jge
mov
inc
xchg
scas
in
out
sub
adc
repnz
pop
push
pop
out
push
das
push
imul
arpl
fstpl
cmp
repz
mov
in
mov
or
fld
pop
out
ja
or
adc
repnz
pop
xor
mov
push
cmp
push
fisttps
or
shrl
add
xchg
sbb
sub
lods
pop
cmp
into
cmc
xchg
pushf
clc
sbb
add
push
mov
popf
addr16
fiaddl
arpl
test
notb
mov
aas
repz
in
stc
pop
push
cmc
sub
shl
cmp
xchg
mov
gs
insb
sbb
or
in
inc
xor
repz
sti
pop
scas
cs
cmp
rol
cld
stos
xchg
xchg
lcall
lcall
pop
sbb
jnp
inc
hlt
mov
pop
hlt
mov
mov
pop
or
arpl
fnsave
js
imul
or
jno
repnz
loop
jge
sub
add
test
cltd
sub
jae
cmp
test
arpl
aad
or
cmpsb
mov
icebp
mov
push
push
adc
out
mov
push
add
xor
jb
leave
sub
push
ret
and
or
inc
fildll
sbb
shlb
pop
mov
ss
adc
jmp
mov
imull
fsts
fsubrl
sbb
out
jl
outsl
and
fmull
jae
lahf
push
fcmovnb
sub
cwtl
ss
fnstcw
idivl
xchg
xchg
loope
into
adc
scas
fsubs
std
repnz
fistpl
popf
xchg
dec
movsb
xchg
mov
enter
mov
call
call
lcall
mov
rcr
aad
adc
mov
jno
mov
mov
push
fldenv
scas
pop
push
pop
push
mov
jmp
xchg
dec
int3
inc
push
mov
xor
adc
fwait
rorl
out
push
pop
aas
shrb
add
sbb
out
xchg
arpl
sahf
or
xchg
sub
loopne
and
nop
add
ret
pop
jns
test
js
push
jmp
in
fwait
dec
cmp
loopne
hlt
bound
push
adc
mov
and
pop
arpl
xchg
cmp
cmpsl
les
or
imul
data16
mov
jnp
xlat
dec
pop
out
push
imul
cmp
push
out
push
or
in
andl
jno
jmp
sub
gs
push
ret
jo
mov
mov
repz
enter
mov
pushf
cmp
popfw
cltd
ret
mov
or
or
aaa
mov
xlat
xchg
pop
or
faddl
repnz
sti
dec
lcall
mov
bound
movsl
jne
or
mov
movsb
mov
mov
cmpsb
shll
fdivrl
push
add
gs
mov
scas
sbb
lods
pop
jmp
mov
mov
inc
cmp
xor
cwtl
mov
call
jp,pn
out
dec
pusha
mov
jmp
mov
aas
ja
shl
xor
dec
les
pop
mov
sub
adc
push
lcall
mov
mov
sbbb
loope
sub
mov
xor
pushf
ret
mov
sbb
push
adc
fnstsw
bnd
mov
data16
fnsave
sbb
cmc
shrb
lods
in
cmp
mov
sub
aad
mov
mov
inc
or
aad
sub
inc
add
lret
pop
imulb
lcall
mov
cmp
bound
mov
adc
sub
mov
jmp
mov
or
mov
stos
mov
cmpsb
dec
adc
sbb
lea
aad
js
aas
sub
push
xchg
dec
xchg
sub
add
and
ss
lcall
mov
popf
cltd
js
rcrb
inc
pop
testl
mov
outsl
add
ds
cmc
insb
mov
out
mov
je
xor
iret
enter
daa
mov
xor
cs
lcall
test
lds
out
mov
xor
inc
push
lcall
iret
mov
or
lock
cmp
pop
idivb
sbb
xor
aas
out
loopnew
dec
pop
push
cmp
test
mov
aam
pop
add
call
pop
adc
addr16
mov
movsl
shrl
addb
fbld
test
test
mov
and
lds
dec
mov
mov
js
in
jno
mov
mov
test
les
xchg
push
inc
lcall
sbb
mov
and
mov
sbb
push
out
sub
xchg
push
lcall
lret
mov
in
in
sahf
sbb
pop
sahf
mov
jb
std
cmc
jbe
xchg
sub
pop
testb
cmp
aam
ljmp
mov
xor
popf
and
inc
jno
cwtl
fnstcw
lcall
mov
mov
mov
mov
cwtl
mov
adc
jge
roll
imul
lret
idivl
scas
mov
clc
sub
std
lods
fisubs
iret
and
lcall
fisubs
push
pop
push
fsubs
movl
inc
add
setb
jnp
push
pop
pop
mov
jbe
neg
fldt
pushf
cli
insl
inc
bound
in
js
repnz
lods
ljmp
jo
adc
lds
push
jns
push
inc
sub
mov
push
stos
insl
cmp
nop
adc
jmp
mov
aas
dec
and
sub
mov
or
and
movsl
dec
mov
lods
lret
imul
rcl
dec
out
mov
mov
dec
test
and
xchg
inc
es
pop
mov
mov
mov
mov
xchg
push
cmpsb
adc
push
mov
inc
aam
pusha
pop
mov
stos
divl
sbb
test
and
pusha
jmp
fisubrl
adc
into
ja
stos
frstor
xchg
sbb
imul
mov
orb
sub
pop
mov
jle
movsb
sarl
lret
ret
dec
loope
mov
cmpsb
out
sbb
mov
icebp
and
aad
dec
fcompp
push
add
shl
out
gs
xor
int3
shlb
fninit
adc
lcall
insb
subb
aaa
sub
aam
lret
add
pop
xor
adc
repnz
push
cwtl
or
jb
repnz
cli
push
mov
cmp
shrl
shl
sub
arpl
mov
jo
mov
out
scas
call
sbb
lcall
int
cmpsb
xchg
das
push
sbb
mov
repnz
fiaddl
fstps
ret
mov
lret
int
fidivrl
std
and
xchg
cmp
mov
push
xor
into
cld
adcl
inc
ret
jns
sub
jns
pop
repz
or
loop
jno
xor
push
push
add
aaa
jge
inc
sub
fnsave
loop
dec
pop
and
mov
loop
sti
jge
cli
sbb
in
addr16
in
data16
lret
pop
xor
ja
aas
or
xor
pop
or
test
mov
mov
sti
sub
sbb
sbb
out
stos
jo
imul
in
bound
mov
aas
and
mov
or
shll
pop
lods
roll
sarb
sub
out
jp
cmpsl
mov
xor
int
sti
lock
xorb
xlat
test
mov
cmc
sub
leave
std
mov
movsl
out
call
fwait
and
fistpl
das
ret
cmp
mov
adc
sarb
cmp
pop
xchg
mov
add
push
sub
xchg
nop
frndint
mov
mov
sbb
xchg
rcrl
pop
mov
ret
repnz
sub
into
xchg
inc
inc
cmpl
js
pop
pop
push
and
push
lcall
shll
inc
mov
and
cmpsb
movsl
adc
scas
clc
out
mov
or
cmpsb
lahf
es
inc
xchg
mov
lret
cmp
sub
xor
mov
lods
xchg
xchg
and
rolb
repz
aad
pop
xor
or
hlt
arpl
out
mov
sub
mov
stos
daa
popf
imul
fdivs
dec
sub
out
movsb
pop
mov
int3
addl
cmp
mov
aad
movsl
movsb
inc
out
pop
mov
push
inc
push
sub
jmp
bound
fsubrs
cld
pop
into
xor
in
mov
inc
insl
lods
loopne
mov
imul
add
je
cmp
xchg
mov
dec
punpckhdq
cmp
jge
add
mov
push
cmpsb
fs
jg
add
xchg
pop
jae
add
cwtl
mov
pop
lret
cmp
and
in
cmpsb
fldcw
push
cmp
or
sti
mov
cmp
cli
arpl
lods
lcall
mov
ret
inc
jecxz
add
mov
mov
push
shrb
xchg
mov
ja
cmovnp
mov
pop
mov
jge
jae
aam
ljmp
add
dec
scas
das
pop
mov
std
mov
cmp
test
add
mov
and
push
dec
cmpsb
imul
dec
xchg
int3
jb
xor
push
lcall
dec
xchg
jo
lods
push
cld
dec
inc
push
or
hlt
inc
lret
xor
stos
cmpl
repz
lcall
movsl
dec
or
inc
ret
sbb
sbb
fcom
lcall
inc
fsts
mov
push
rcrb
leave
xchg
and
mov
add
jae
push
hlt
nopl
rcll
cmp
ds
push
jmp
inc
sub
add
xchg
sti
push
ds
call
jg
mov
xchg
repz
mov
lock
loopne
add
aam
mov
mov
dec
sbb
lret
xor
scas
push
mov
lcall
cmpsb
mov
out
sbb
arpl
lds
dec
mov
cwtl
fidivs
repnz
inc
sub
mov
mov
adc
fbld
call
js
fs
cwtl
outsl
rclb
or
xor
mov
add
and
jp
aas
add
mov
xchg
and
xor
test
stos
or
mov
xor
loopne
mov
bound
out
in
popf
in
or
jae
cmpsl
and
pop
je
movb
outsb
clc
out
insb
shlb
cmpsb
or
sbb
popa
cmp
add
aaa
pop
testb
push
fwait
or
add
jge
jle
mov
pop
add
or
sahf
cmp
loopne
or
test
ja
fcoms
enter
stc
leave
mov
and
inc
rep
cmp
test
cmpl
repz
push
jecxz
xchg
or
lret
lret
in
aam
inc
sbb
bound
or
pop
lcall
inc
mov
int3
jns
xor
nop
cwtl
sbb
lret
filds
test
cltd
jno
ret
mov
fistl
push
loopne
pushf
in
mov
insb
loop
pop
or
add
loopne
mov
mov
hlt
lahf
cmp
imul
or
ljmp
call
push
or
or
mov
push
adc
in
cli
popf
shrb
xchg
mov
pop
pop
fists
adc
inc
das
dec
push
cmp
push
movsl
xor
push
movsl
push
repz
jo
or
cli
sti
inc
outsb
addb
popf
cltd
add
add
inc
scas
stos
adc
mov
xchg
ss
mov
push
jb
and
add
pop
fldenv
fwait
out
mov
ret
test
adc
inc
inc
lods
or
rcrb
xchg
fsubl
test
cmp
pop
dec
in
bound
jae
xchg
inc
nop
or
stc
jne
repnz
les
mov
and
dec
les
or
cmp
daa
pop
std
repnz
repz
xchg
in
xlat
add
scas
ds
dec
int
mov
aam
shll
push
sbbl
popf
or
push
push
inc
inc
pop
mov
mov
xor
leave
push
repnz
stos
fstpl
lcall
dec
shll
out
sub
add
mov
inc
hlt
enter
or
subl
jmp
test
sub
pop
in
xchg
test
and
push
inc
out
cmpsl
jnp
in
or
addr16
inc
mov
mov
jecxz
in
jb
sub
sar
add
out
in
dec
aaa
jno
divl
mov
dec
pop
jecxz
lea
daa
dec
sub
mov
pop
repz
or
xor
repnz
in
or
mov
or
cltd
mov
lcall
push
xor
or
pop
decb
sbbb
push
or
or
and
mov
mov
xchg
and
lcall
loop
pop
fwait
popf
xorb
daa
and
movzbl
cmp
mov
loop
mov
cli
out
mov
xorl
push
fnsave
pop
lods
pop
fbstp
bound
add
inc
into
mov
jne
mov
mov
inc
test
push
repnz
ljmp
arpl
and
loopne
jns
or
sub
mov
mov
xchg
pop
mov
xchg
add
fsubrl
push
leave
aam
jmp
and
loope
inc
lcall
arpl
movsb
aam
bound
lods
mov
mov
jae
fadd
stos
mov
xlat
arpl
frstor
outsb
aam
pop
mov
push
jl
mov
leave
xchg
mov
mov
ret
pop
jb
cmp
and
test
inc
es
xlat
and
cs
das
pop
out
push
mov
xchg
dec
xchg
mov
cmpsb
or
pop
mov
into
int3
imul
jae
cmp
addb
xlat
ss
pop
jnp
cmp
outsb
out
jb
xor
aam
jl
jo
cs
js
fnstenv
out
ret
xlat
cmp
pop
pop
pop
sub
out
cmc
addr16
mov
adc
jmp
push
ds
fiadds
frstor
dec
dec
shl
out
aas
mov
jns
in
scas
jecxz
lret
lahf
in
xor
addr16
jg
inc
fimull
imulb
xor
jnp
fnsave
push
arpl
add
ja
paddq
test
push
sub
cmpl
jnp
nop
sbb
or
jnp
cltd
sti
push
outsb
sub
mov
cmp
or
cmovl
test
lock
fstpl
shl
cli
cwtl
pop
add
jecxz
std
and
fcompl
mov
loop
jge
mov
inc
xchg
jl
xchg
movsl
xchg
daa
push
lods
lds
push
loop
dec
shll
dec
mov
jmp
fwait
push
mov
or
or
lret
stos
inc
mov
xor
mov
mov
fnsetpm(287
and
add
push
ja
or
movsb
icebp
push
leave
fidivrl
ds
sbb
xchg
mov
ret
or
jb
cmp
mov
cmp
shll
xchg
ret
outsb
adc
jecxz
in
fiadds
xor
and
cltd
addr16
lock
rolb
das
arpl
push
movsb
cmp
jae
mov
addr16
pop
stos
aam
mov
and
dec
sbb
ja
mov
call
xchg
mov
sub
in
xor
dec
scas
adc
stos
rol
mov
out
in
mov
sub
jmp
dec
cmp
jg
ficompl
push
stc
xchg
pop
loop
push
cwtl
fs
mov
push
cmpsl
aad
lcall
mov
or
subb
fldenv
push
xchg
jmp
js
add
rcrl
rorl
cld
sub
ret
xor
and
lret
imul
push
roll
bnd
sbb
gs
les
xchg
call
jnp
add
dec
inc
enter
ljmp
mov
mov
imul
adc
xorl
mov
mov
pushf
jo
sub
and
stos
aas
aas
lods
or
xchg
orl
xor
loopne
lea
mov
fcoml
push
lods
inc
add
fs
ret
cmpsb
push
cmp
out
jb
sub
xchg
and
xchg
inc
nop
pop
rolb
and
pop
and
in
frstor
sbb
sbbl
inc
inc
xor
mov
fildll
push
outsl
ljmp
and
cmpsl
lds
and
inc
in
dec
out
shlb
mov
pusha
ficoms
call
inc
sti
mov
cmp
jno
mov
inc
imul
in
pmaxsw
and
push
dec
ret
imul
pop
out
and
mov
mov
push
test
test
dec
outsl
jnp
pop
out
jg
test
mov
test
jp
rcr
out
out
sahf
les
sub
or
cwtl
leave
inc
dec
pusha
push
test
fwait
out
insl
out
outsl
mov
sbb
mov
mov
dec
test
cwtl
test
daa
pop
stos
dec
loope
lcall
es
xchg
lcall
test
sbb
push
test
pop
and
dec
mov
lcall
mov
out
pop
pusha
dec
arpl
sub
jp
cmp
fiaddl
lahf
xchg
xchg
call
inc
mov
gs
movsl
mov
imul
pusha
mov
stc
lahf
movsl
test
and
sub
imul
add
dec
pop
call
pcmpgtb
inc
or
inc
jecxz
inc
in
aam
pop
test
shl
inc
in
out
in
adc
scas
push
fld
push
xchg
aad
xchg
cmpsb
call
xchg
fs
inc
inc
dec
jmp
mov
cltd
or
xchg
sub
or
mov
cmpsb
faddp
jle
pop
inc
pop
out
jg
jg
int3
addr16
sub
gs
mov
pop
pop
add
mov
leave
movsb
mov
cmpsb
pop
leave
lahf
mov
pop
enter
mov
inc
sahf
test
les
nop
arpl
addb
test
adc
and
ficomps
inc
cmp
fbld
and
leave
arpl
imul
push
add
dec
imul
sub
dec
and
imul
orb
jmp
addr16
xchg
call
fsubrs
daa
in
mov
lods
out
aas
mov
mov
push
shll
fwait
xor
imul
leave
mov
and
in
pop
gs
pop
loope
push
jl
and
sub
sbb
jle
jmp
je
mov
add
mov
jg
or
inc
in
adc
enter
hlt
addr16
mov
jns
dec
notl
std
aas
inc
gs
sub
std
mov
mov
cmpsb
and
push
mov
or
and
push
jae
fidivl
push
add
stc
int3
out
and
pop
and
ss
mov
and
dec
push
inc
xchg
pop
bound
aad
adc
or
movsb
pop
sub
jno
cmp
mov
stos
xorb
jl
fwait
pop
add
in
add
fstps
cmp
movsl
pop
adc
aas
pusha
scas
fcoml
sub
fwait
es
push
popa
pop
test
and
dec
int
mov
xlat
jae
in
imul
pop
test
jmp
mov
or
mov
loopne
jmp
imul
push
cmp
sub
push
xchg
mov
pop
adc
pop
mov
pop
and
or
xor
cmpsb
fbstp
jecxz
shlb
in
mov
outsl
pop
and
movsb
imull
mov
dec
xor
lret
shll
cld
cmpsb
fwait
and
ret
pop
xlat
in
sbb
sbb
push
jmp
lret
dec
fstl
sbb
negl
jno
xor
divl
repz
call
jge
das
cmpsb
sarb
out
pop
jle
lcall
imul
push
and
arpl
xor
pop
sub
icebp
cmpsl
imul
adc
mov
out
jmp
push
outsb
aaa
sbb
push
icebp
fsubrl
test
mov
repnz
into
pop
ljmp
call
push
in
in
mov
mov
adc
repnz
mov
xchg
into
scas
mov
mov
dec
test
mov
loopne
daa
sbb
mov
jmp
fsub
mov
add
push
bound
cmp
mov
dec
fisttpll
jecxz
inc
pop
cmp
arpl
pushf
ret
inc
test
dec
push
mov
inc
nop
leave
jno
das
cmp
jmp
xchg
ljmp
dec
jbe
scas
inc
xchg
cmp
fs
mov
pushf
insl
out
or
out
inc
mov
push
cmp
std
out
lds
xchg
xor
push
andl
in
push
rorb
cmpsb
pop
and
sbb
inc
enter
cmp
mov
dec
pop
call
lea
test
cltd
repz
and
mov
popa
ret
addr16
icebp
rorb
mov
mov
cs
jae
repz
fbld
les
add
test
in
push
sbb
ficompl
arpl
ret
and
mov
pop
popa
cmp
leave
pop
fildll
mov
sbb
arpl
pop
cwtl
xchg
jns
int3
mov
pop
fwait
lcall
loope
pusha
lock
pop
lret
clc
loopne
nop
cmp
in
ds
sbb
or
fbstp
in
dec
xchg
xchg
gs
mov
add
mov
in
mov
pop
pop
outsb
mov
lds
adcl
and
loop
xchg
les
sbb
adc
idivb
xchg
arpl
insb
mov
aad
lcall
jb
popa
sbb
and
mov
movnti
ret
inc
das
lcall
lds
sub
inc
pop
lcall
cmp
xchg
lods
xchg
mov
xchg
jno
dec
sbb
shrb
mov
sbb
sub
arpl
andb
lods
fisubl
xor
push
mov
jbe
xchg
test
and
addl
fstpl
cwtl
mov
or
sti
mov
daa
cmp
mov
ja
cmp
rcl
cmpsl
pop
jl
add
mov
lcall
push
clc
or
sub
push
mov
jbe
shl
fdivrl
jno
mov
mov
add
mov
lea
out
pop
lea
sub
fidivl
lret
das
jbe
sbb
xor
xor
push
mov
shlb
mov
sub
dec
xor
cmp
xchg
adc
repnz
dec
inc
dec
fcmovne
xchg
repnz
xlat
loopne
push
loope
mov
in
or
outsl
ret
and
pop
ret
cmp
pop
mov
movsb
mov
fisubs
cmp
mov
popf
addl
sbb
mov
mov
lret
in
push
jp
lahf
int3
leave
nop
lret
pop
stos
sar
push
adc
ljmp
add
dec
cmpsb
jns
mov
jno
fs
outsb
jo
int3
cmpsb
sbb
mov
sarb
negb
bound
dec
hlt
mov
and
mov
mov
loope
movsb
test
sbb
fimuls
mov
enter
mov
push
data16
push
mov
add
adc
lcall
sub
paddw
imul
rcll
mov
adc
out
adc
out
aaa
cld
movb
xchg
loop
repz
mov
adc
pusha
cmp
pop
pop
out
jo
push
xor
popf
jb
sbb
arpl
test
or
fisubrs
push
hlt
sub
cmp
fistps
adc
sbbb
mov
xor
xor
daa
adc
les
adc
and
jae
leave
pop
das
mul
adcl
sarb
or
sub
rcrl
shrb
cltd
inc
std
aam
pop
mov
fidivrs
cwtl
rcr
stc
push
inc
popf
xor
mov
outsb
dec
or
or
inc
fildll
xor
js
mov
add
fbld
cmp
mov
jg
mov
xchg
cmp
xchg
xchg
pop
out
mov
lock
inc
js
cltd
cmpb
inc
sbb
in
imul
adc
or
add
aas
xor
xchg
bswap
cmc
leave
sbb
or
dec
call
add
cmc
pop
and
cli
push
stc
xor
sti
xchg
out
add
jae
incl
bnd
repz
andb
add
shrd
inc
stos
and
jo
cmpsb
lret
popa
cli
cmp
frstor
sbb
fisttpll
mov
shll
push
mov
xchg
imul
cmp
mov
pop
sahf
xor
mov
push
jg
sub
js
jno
rcll
jo
xor
cmp
adc
jnp
inc
mov
test
mov
mov
xchg
std
fsts
add
xchg
fsubrl
loope
orb
xor
lret
push
jnp
int3
and
pop
and
stos
jo
es
and
lahf
sti
popf
and
jl
js
mov
xchg
push
cmpsl
lcall
jl
xor
inc
test
ljmp
fwait
cmpsb
icebp
xchg
add
mov
mov
cmpsl
mov
cwtl
dec
repnz
cwtl
mov
fwait
shl
sbb
repnz
enter
mov
cld
in
push
sbb
cmp
push
or
fisttpll
mov
mov
bound
repnz
je
add
addr16
push
jns
push
mov
enter
push
iret
pop
fcomi
rcll
add
pop
test
in
xor
arpl
jno
in
ret
xor
xor
sbb
daa
ljmp
shlb
jo
aaa
push
xchg
rolb
mov
mov
sbbl
inc
pop
icebp
js
movsl
xchg
inc
push
pop
cmp
adc
mov
lds
test
frstor
cmpsb
jecxz
add
cmp
cmpsl
sbb
sbb
mov
outsb
or
leave
mov
xchg
inc
rorl
xorl
xchg
pop
and
movl
lods
xchg
mov
repz
es
push
out
stc
movsb
dec
sbb
aam
push
call
mov
pop
inc
mov
push
dec
and
xor
push
dec
shlb
cmp
push
lds
fnsave
jb
gs
push
lods
push
imul
les
mov
mov
jne
testl
popa
xchg
lods
out
jae
jo
sbb
or
shlb
int3
ret
movsl
arpl
fabs
cmpsb
inc
sahf
popf
pop
mov
jmp
out
jp
add
js
push
ret
push
mov
test
sub
in
lods
push
xorb
mov
mov
pop
push
sub
add
mov
fcmovnbe
cmpsb
jne
ja
add
popf
sub
shrl
mov
das
pusha
gs
out
and
push
ljmp
loopne
sbb
mov
fldl
loopne
movsb
and
hlt
or
and
adc
sahf
sbb
popa
cwtl
mov
pop
mov
and
and
test
std
ja
mov
mov
and
cmpb
lret
and
fldenv
loop
pusha
enter
sarb
loopne
call
vcvtsi2ssl
outsl
cmpsb
out
adc
add
dec
jno
sbb
fs
cmp
pusha
jns
pop
sub
or
dec
jge
stc
loopne
mov
sub
xchg
pop
mov
mov
fistps
add
or
cmpsb
cltd
aad
out
fwait
pop
dec
pop
imul
loop
imul
adc
mov
mov
mov
cmp
jmp
inc
mov
loopne
ror
pop
sbb
and
and
pop
out
push
dec
in
cld
repz
mov
mov
insl
out
xorb
mov
cmpsl
mov
loop
aas
add
sbb
movsb
adc
sbb
imul
ror
rorl
sar
ret
sub
jl
repnz
lea
mov
call
xchg
fs
leave
hlt
pop
movsl
push
jb
add
adc
and
das
mov
mov
aas
test
dec
sub
sbb
lods
mov
addr16
int3
mov
aad
imul
std
dec
das
out
push
and
inc
jg
data16
add
xchg
push
sub
psllw
xchg
jl
addr16
add
fiaddl
mov
inc
movsb
lock
jnp
cmc
push
and
mov
cmp
leave
push
jp
mov
decb
jmp
in
mov
xchg
cmpsb
push
fadd
orb
pop
cwtl
pop
ror
mov
cmp
xchg
fldl
mov
inc
cmpsl
jo
sub
xchg
pop
lock
cmp
imul
mov
pop
sarb
in
je
out
lods
sub
pop
aam
mov
aaa
sbb
cmpsl
or
push
xor
sbb
imul
into
shll
push
push
in
pop
xor
jb
inc
push
mov
and
inc
cmp
cmp
mov
jo
std
pop
in
jmp
sub
ljmp
mov
repnz
lds
xlat
scas
mov
cwtl
xchg
pop
add
adc
fiaddl
das
daa
lods
in
fisttpll
dec
mov
addr16
mov
mov
xchg
xor
inc
add
repz
stos
mov
pop
movsb
fisubrs
out
insb
inc
or
pop
or
in
or
jl
mov
mov
sub
pop
fwait
cmp
out
dec
in
push
call
jae
pusha
cmp
push
sub
xor
dec
xchg
test
in
xchg
or
cmpsb
mov
jnp
cmc
pop
mov
and
inc
out
sbb
mov
fcompl
jecxz
das
popf
or
imul
and
sub
addr16
mov
mov
mov
nop
out
mov
mov
xor
sahf
xchg
sbb
inc
ds
ss
push
push
data16
jae
ss
cld
sbb
push
adc
inc
dec
push
lods
lahf
aaa
dec
mov
cmp
add
dec
xor
push
fsubs
push
lret
imul
mov
lods
movaps
std
shl
pop
mov
ret
sbb
jo
nop
subb
sbb
scas
mov
xchg
sti
xorb
cmpsb
and
and
jecxz
aad
std
mov
push
loop
xor
int3
sbb
and
mov
movaps
pop
jge
or
xchg
xchg
push
lock
hlt
inc
arpl
orl
fcmovb
orb
cltd
or
cmp
roll
mov
jmp
lea
xor
test
cmp
scas
rol
inc
dec
cmc
mov
not
daa
cli
and
insb
sub
pop
mov
pop
dec
in
out
ftst
inc
sar
fdivrl
sarb
inc
adc
add
sarl
pop
or
push
xchg
adc
mov
stc
leave
jb
imul
sub
push
cmp
lds
push
pop
out
pop
mov
popf
in
jno
stc
cli
mov
jns
addl
adc
call
cmp
in
inc
push
mov
sti
xor
imul
cmp
and
push
nop
lcall
popf
mov
sahf
xor
fs
and
pop
shlb
pop
xchg
xchg
and
in
push
mov
cmpsb
dec
hlt
mov
sub
addr16
mov
cli
and
rorl
mov
add
xlat
push
sub
repnz
mov
std
insb
std
lea
pop
xchg
add
aad
add
pushf
enter
dec
mov
in
repnz
sbb
add
or
or
insl
sti
sbb
daa
xchg
push
lcall
arpl
inc
pop
movsb
mov
pop
push
adc
popa
popf
mov
mov
repnz
jns
inc
mov
sbb
arpl
in
dec
push
mov
adc
dec
call
cs
mov
cld
mov
pop
lods
jb
ljmp
jns
adc
in
add
ja
in
xor
out
dec
and
mov
or
xchg
ficoms
fidivl
add
pop
jecxz
add
in
push
divb
call
popa
gs
insl
mov
xlat
mov
ficomps
add
cmp
adc
fstpt
push
push
push
xchg
cld
mov
out
sub
ss
mov
sub
sub
jns
xchg
ja
jae
jb
and
imul
and
rcrl
dec
sbb
cmp
mov
jp
lock
ret
daa
lret
lcall
pushf
push
test
jmp
neg
jp
cmp
aam
fnsave
mov
xrelease
das
push
cld
in
testb
aad
or
pop
loope
mov
or
jecxz
jge
mov
inc
aaa
fwait
scas
sub
inc
shlb
add
adc
or
inc
dec
aad
lahf
ds
fistl
ds
bnd
xchg
stc
xor
lea
aam
lods
cmp
push
fstp
lcall
out
setne
mov
cld
scas
lea
insb
cmp
cmc
leave
mov
or
test
lret
test
out
add
out
das
je
sub
and
jno
mov
dec
dec
hlt
pop
push
xchg
fmuls
ret
fwait
xchg
and
in
ficomps
pushf
or
fcoml
rcrb
subl
mov
ficomps
lcall
xor
xchg
pop
aam
out
and
push
cmp
out
add
cld
push
ljmp
xchg
jo
jmp
jp
aad
stos
and
add
repnz
cmp
and
or
pop
lcall
fisubs
push
jns
pop
pop
jl
sbb
popf
ret
xchg
rolb
cmp
pop
das
out
mov
adc
in
das
pop
iret
mov
aad
leave
xor
or
add
fdivr
xor
mov
inc
sub
and
cmpsl
sub
mov
icebp
xorps
add
xor
lea
and
adc
xchg
pop
ret
xchg
jnp
out
xor
xlat
insb
adc
les
xlat
shlb
jns
int3
stos
addl
pushf
cltd
push
adc
jmp
dec
fsts
lahf
mov
cli
xchg
mov
mov
sub
ds
outsb
cmp
sub
bnd
leave
lock
aad
mov
mov
jo
mov
inc
loop
movsl
mov
add
mov
and
out
movsb
lret
adc
xchg
roll
and
inc
sbb
inc
mov
fisubs
cmpsb
in
arpl
push
jg
or
fistpll
mov
xchg
mov
enter
add
aaa
lea
or
sub
xchg
mov
mov
cmpl
scas
and
fmul
rcl
sahf
imul
sbb
mov
pop
xchg
lods
lret
les
mov
jae
adc
ljmp
push
jg
pop
leave
pushf
aas
pop
mov
in
lock
dec
imul
or
cli
pop
outsl
push
loop
cmpsb
pop
inc
push
stc
bound
cld
pop
sub
sbb
cmpsl
inc
pushf
push
sbb
mov
subl
outsb
fildl
push
sahf
lret
lret
insb
loopne
push
movsl
or
and
and
fwait
insl
leave
ja
sub
imul
add
cli
mov
mov
clc
sahf
push
and
push
clc
loope
cmpsb
add
add
fwait
pop
movl
push
xchg
lcall
addr16
fnsetpm(287
out
sub
cmp
mov
pop
lods
and
loope
add
sub
in
mov
xor
xor
sub
daa
lcall
out
dec
int
std
sbb
pop
add
pusha
push
sbb
push
jo
push
and
xchg
mov
jns
popf
or
pop
cmp
jb
imul
neg
fmull
lcall
imul
ja
dec
data16
jmp
enter
ja
dec
jmp
popf
push
addr16
jge
inc
jmp
adc
dec
pop
in
inc
sbb
xor
mov
xor
test
xchg
ja
mov
ljmp
out
pop
in
push
test
and
xchg
jecxz,pn
mov
lds
mov
inc
rorb
int
adc
stos
adc
in
movsb
jnp
inc
in
out
mov
adc
daa
pushf
push
mov
push
in
adc
xchg
jno
xchg
add
push
mov
aad
loopne
aas
add
call
sub
inc
cmpsb
push
xor
fnsave
cmp
pop
jne
out
adc
push
out
or
adc
movsl
xlat
inc
mov
pop
jo
arpl
xor
inc
xorb
xchg
sbb
xor
push
negl
lods
dec
push
fidivl
dec
pop
lcall
mov
int
int
lods
mov
popf
mov
loop
and
or
test
mov
out
mov
cmpsb
mov
jmp
push
lahf
cli
gs
sbb
loop
xor
jle
sahf
fldenv
add
mov
mov
movsb
pop
ja
mov
repnz
mov
xor
out
pop
shlb
jle
jl
hlt
or
mov
ret
loope
stos
fucomi
popa
adcl
insb
push
mov
loope
cmpsb
mov
xor
imul
sbb
data16
in
repnz
lahf
pop
daa
rcl
sub
pop
jmp
push
cli
and
push
out
js
lcall
fnstcw
es
pop
mov
sbb
cmpsb
loope
shlb
jb
test
mov
inc
push
insl
and
adc
mov
lcall
xor
into
lret
mov
lcall
repz
out
mov
cs
xchg
mov
shld
push
mul
cmpsb
lret
xor
mov
int3
orl
movsb
lds
mov
out
mov
fildll
sbb
aas
add
clc
push
call
push
dec
out
or
bound
or
mov
pop
cmpsb
mov
jp
mov
push
cmp
cmp
in
inc
mov
xor
inc
fcom
mov
fdivl
lcall
pushf
cmp
outsb
movsb
sarl
mov
test
in
mov
movsl
inc
mov
cmp
xchg
mov
cltd
jge
cmp
lret
es
and
xor
rorb
pop
xorb
rclb
int
std
es
mov
test
hlt
mov
test
inc
scas
aad
lock
mov
inc
pusha
jge
sub
adc
jbe
call
and
in
repnz
sahf
aad
inc
pop
cmp
inc
out
inc
mov
imul
in
call
push
sub
out
imul
icebp
sti
in
fs
loopne
nop
mov
test
pop
mov
call
les
jecxz
les
out
aaa
stos
les
jmp
fs
lds
or
push
out
pop
mov
jmp
shll
jp
sub
dec
push
push
inc
sbb
and
mov
adc
movsb
jmp
mov
rcrl
jmp
fwait
push
fs
out
mov
imul
outsl
hlt
push
lret
xchg
addr16
mov
and
mov
push
out
call
int3
lods
out
retw
test
stc
sbb
or
out
cmpsl
sbb
sub
dec
scas
push
adc
mov
push
inc
rcll
arpl
sub
and
mov
add
push
in
addr16
cmpsb
addr16
jns
imul
cmpsb
dec
and
das
jnp
and
call
inc
inc
es
hlt
lcall
jmp
jmp
dec
jmp
imul
sbb
movsl
test
arpl
aaa
shl
xor
test
loopne
mov
cmpsb
lds
pop
jbe
jb
out
jmp
sbbb
mov
out
mov
mov
jb
inc
jmp
mov
jmp
in
lds
lds
test
enter
enter
xchg
movsb
test
mov
mov
pop
jmp
loopne
pop
addr16
cmpsl
dec
pusha
dec
add
mov
ffree
sub
andw
fldenv
shrb
mov
sub
imul
fnstenv
xchg
mov
jmp
push
pop
mov
daa
dec
sub
mov
cmpsb
aaa
mov
jne
rcr
pop
repnz
push
negb
shlb
cmova
push
push
xchg
sarl
adc
stos
or
cmpl
leave
mov
mov
xor
out
jg
jecxz
cmp
hlt
in
mov
pop
aad
lcall
mov
cmp
lcall
adc
test
dec
movsl
test
pop
jno
mov
xchg
mov
pop
popf
imul
aas
push
jae
frndint
adc
sub
repz
hlt
call
cmpsb
xor
test
sbbl
jle
fisttpl
mov
repnz
insl
xchg
and
dec
push
and
in
lds
out
cmpsb
out
pop
out
lods
lret
cmp
clc
inc
call
enter
imul
lea
jb
mov
out
dec
lcall
test
xchg
mov
test
jecxz
mov
add
xor
stc
push
xor
sbb
mov
imul
ja
or
jae
or
out
addr16
xor
jne
cmp
dec
add
jb
mov
mov
out
data16
gs
es
arpl
sub
in
rcll
into
loope
dec
or
add
fcompl
faddl
sbb
cli
jb
mov
gs
insb
clc
cli
lret
iret
sub
lea
jge
jl
insb
repnz
pop
imul
add
adc
mov
xchg
xor
in
hlt
and
in
mov
sti
dec
pop
push
in
mov
movzwl
fsubl
std
cs
inc
js
xor
pop
fists
or
shrb
leave
call
imul
outsl
fmuls
dec
hlt
shlb
push
jg
sbb
xchg
push
dec
das
fldenv
cmpsb
xor
movlps
pop
xlat
push
enter
stos
subl
mov
aaa
jno
out
aaa
ffree
mov
int3
jns
fsubrs
rdmsr
sub
movsl
ret
popf
lret
and
mov
fistpll
jo
push
cld
xchg
jns
inc
std
mov
push
in
mov
imul
nop
in
dec
add
push
cmpl
jp
test
adc
sub
jge
imul
push
out
push
cmc
stos
mov
test
mov
filds
movsl
lods
dec
ficomps
lret
mov
xlat
movsb
lcall
jge
mov
xchg
sbb
mov
out
rcrl
repnz
inc
and
pop
and
mov
jle
cltd
cmp
dec
dec
ret
movsb
pop
insb
push
mov
test
movsl
leave
fildl
loope
lcall
pop
cmp
mov
mov
jns
push
ljmp
add
push
pushf
inc
dec
adc
adc
cmpsb
loope
daa
push
push
jno
mov
or
sub
imul
dec
fidivl
mov
jns
cmpsb
inc
add
adc
aaa
andb
movsl
push
or
movsb
cmp
add
loop
mov
sub
dec
lcall
test
dec
sbb
xor
jb
popf
mov
test
cmpsb
mov
mov
out
xorb
mov
stos
add
sar
xlat
hlt
and
jge
sub
in
add
pop
add
je
shlb
push
cmc
adc
push
add
jo
pop
sub
cmp
lcall
mov
adc
out
fwait
pop
dec
inc
testl
xchg
cli
xchg
popf
mov
lds
push
iret
mov
inc
test
lods
jge
ljmp
xchg
psubq
add
xchg
aad
cwtl
mov
fnstcw
push
dec
in
mov
push
bound
push
mov
or
cmpsb
sub
ret
jmp
fistps
xorb
jo
mov
adc
sbbb
sub
pusha
ret
lds
xor
inc
std
in
lcall
arpl
pop
add
popf
and
cmpsl
ja
xor
das
ds
into
lea
sub
xchg
ret
or
pop
arpl
dec
push
cmpsb
mov
das
xchg
das
rolb
mov
or
cmp
lods
sub
push
jge
cmp
aas
mov
fs
add
xchg
lock
inc
sarb
rolb
lahf
adc
cmp
push
ljmp
mov
dec
scas
leave
ror
movsb
fwait
daa
dec
js
mov
push
push
pop
fwait
addr16
ljmp
mov
in
mov
lock
jo
movsl
push
or
fstl
lds
cmp
mov
ffree
out
popf
arpl
xchg
mov
sbb
xlat
sub
cld
fs
adc
push
add
rcl
xchg
cmpsb
pushf
sub
je
sbb
test
lahf
push
data16
fstpl
mov
xchg
mov
gs
movntq
lods
inc
xchg
popf
insl
rol
ret
fistpll
push
hlt
mov
aaa
lret
mov
add
jg
cmpsl
cmp
cmp
mov
ret
outsl
add
xor
lds
in
cmp
lret
and
inc
sarl
push
cmc
jmp
mov
enter
popa
pop
mov
jo
into
push
mov
ljmp
outsl
mov
push
cmpsb
pop
ret
int
mov
jl
movsl
mov
cmpsl
inc
jne
pop
xor
push
xor
outsb
leave
subl
pop
pusha
xchg
movsb
aas
adc
mov
mov
lods
xchg
and
mov
insb
cmpsl
out
mov
insl
jmp
dec
shlb
popa
out
add
mov
rolb
push
gs
xchg
pop
rorb
pop
xlat
sub
inc
adc
mov
icebp
aas
inc
cld
mov
test
jle
call
mov
subb
pop
mov
test
loopne
lret
popa
mov
or
jmp
jmp
push
or
dec
cld
test
aaa
or
into
iret
fnstcw
popa
test
inc
xor
xor
cs
loope
shlb
xchg
imul
outsl
test
and
test
pusha
or
imul
outsb
addb
test
sbb
cmpsb
cmpsl
lds
xchg
cmpl
mov
push
test
jecxz
iret
sub
stos
test
push
mov
icebp
frstor
shll
pop
inc
inc
adc
lahf
xchg
shll
and
loopne
cltd
mov
test
xchg
dec
loopne
jmp
test
dec
test
out
imul
mov
push
and
and
adc
jno
cwtl
enter
in
mov
xchg
aaa
push
and
fs
and
sub
stos
push
loop
mov
jns
lcall
jmp
test
imul
and
push
lahf
jmp
imul
out
es
xlat
and
test
test
jmp
ret
pop
loop
mov
mov
mov
xchg
inc
pop
imul
jmp
mov
imul
mov
jmp
xchg
mov
lds
and
arpl
xlat
jmp
imul
mov
imul
push
xlat
leave
push
call
gs
push
stos
daa
imul
jg
add
xchg
inc
addr16
xchg
add
out
inc
pop
addr16
sub
mov
sarl
push
jo
lcall
mov
mov
push
bound
mov
xor
and
push
sub
imul
cltd
sbb
lods
inc
cmp
pop
fxtract
and
shl
push
push
jnp
fnsave
xor
mov
dec
sbb
sti
jne
mov
ror
and
add
mov
in
rcrb
inc
lcall
ret
cmp
mov
xor
adcl
jmp
inc
movsb
and
pop
in
loop
pop
cmpsb
cmc
xorl
jle
lods
sbb
movl
loope
lcall
test
mulb
testb
mov
insb
shlb
testb
xor
inc
xchg
fldcw
dec
cmp
cld
es
push
lret
cmp
pushf
mov
cmpsl
or
mov
aam
pop
flds
es
mov
sub
lcall
push
repnz
mov
xor
add
mov
aaa
xor
insb
addb
adc
cmp
jp
mov
aad
push
fisubl
pushf
stc
cmpsb
mov
xor
mov
mov
and
jecxz
pop
cmpsb
popa
push
pop
scas
inc
cmp
sarl
xor
hlt
push
adc
call
fst
arpl
mov
outsb
sbb
mul
inc
adc
mov
jmp
out
push
jns
popf
and
inc
inc
jecxz
mov
and
jmp
push
mov
push
cmpsb
aam
sub
push
xor
or
arpl
lds
int3
andb
xchg
pop
sub
bound
aas
popa
leave
movsl
cld
dec
fldt
enter
sbb
fisttpll
inc
data16
jnp
jge
xchg
sbb
xchg
jb
dec
dec
push
jp
jnp
or
push
sarb
inc
jns
stos
xchg
xor
mov
pop
mov
sbb
in
pop
add
jo
outsl
mov
mov
daa
dec
cmp
cmpsb
inc
out
ficoml
in
decb
cmp
mov
ficompl
mov
inc
pop
insb
mov
out
add
lcall
push
add
add
ret
xchg
gs
fisttpll
xchg
mov
lds
jno
cmp
cmp
and
or
or
dec
jbe
cmp
jp
sub
fdivrp
leave
int
and
arpl
mov
lds
addr16
sub
add
mov
push
jg
cmp
cmp
push
cli
lea
call
sahf
mov
xchg
or
pop
mov
test
and
mov
mov
mov
sbb
lret
out
jecxz
sub
in
and
push
shr
xor
rorb
or
xor
and
lds
fisttpll
nop
gs
push
lcall
loop
xchg
aad
imul
cld
cmpb
cmpsl
mov
jbe
sbb
xchg
xchg
mov
xchg
in
push
jne
xchg
dec
cli
xchg
add
sub
fstpl
xor
js
xchg
jae
and
adc
out
ljmp
cltd
ja
mov
and
lret
pop
add
je
cli
ds
add
inc
leave
pop
lcall
shll
xchg
mov
clc
jns
int
lods
and
dec
sahf
dec
iret
int
shrb
fucomp
lods
dec
leave
repnz
sub
mov
shll
loop
sub
cmpsb
movb
jno
lcall
pushf
push
dec
lcall
add
hlt
adc
mov
or
cmpsb
sbb
push
out
mov
ret
and
mov
out
fildll
je
das
cli
andb
mov
fbld
sub
or
loop
in
sbb
mov
mov
jge
addr16
jge
lock
sti
flds
xor
push
xor
es
imul
xor
push
add
adc
or
fists
cmpsb
out
mov
mov
mov
xlat
mov
mov
out
sbb
fldenv
mov
adc
aaa
pop
pop
int
into
arpl
cmp
cwtl
dec
or
mov
in
pop
das
mov
addr16
push
and
sbb
call
push
js
lods
imul
inc
xchg
cmpsb
xor
lock
rorl
ret
dec
mov
adc
adc
aad
inc
mov
pushf
dec
aad
mov
pop
jmp
jp
dec
pop
into
enter
je
jb
dec
leave
int
out
push
or
jl
push
pop
sbb
aaa
add
cwtl
or
sbb
jl
pop
pop
lods
inc
mulb
test
flds
cmpsb
cmp
pop
jae
jnp
adc
int
and
or
adc
out
add
decb
fs
push
mov
ds
cmp
jns
mov
cs
movsl
mov
shll
push
into
mov
cltd
in
pusha
pop
movsl
jo
sub
ja
sbb
sub
push
inc
dec
mov
hlt
jno
repnz
cmp
stc
fistpl
fisubrl
sti
push
js
rcll
leave
mov
or
js
dec
or
lret
movsl
incl
mov
mov
out
dec
addr16
push
inc
jmp
sub
cmpsb
mov
push
aaa
bound
ja
xorl
sub
push
mov
aas
inc
lcall
dec
push
sub
mov
das
jo
mov
mov
imul
mov
imul
std
std
cmpsb
xor
call
test
popa
dec
in
out
fscale
cmovns
leave
add
hlt
mov
or
dec
adc
inc
lcall
mov
lods
adc
cmp
inc
pop
int
xor
push
test
inc
and
xchg
mov
sub
leave
add
jne
mov
xor
fwait
rcll
ljmp
xchg
xchg
mov
pop
push
std
push
leave
xor
sbb
cmpsb
pop
aas
outsl
in
lahf
imul
sub
cmp
call
dec
or
lret
mov
scas
jo
sub
mov
dec
lods
cmc
out
add
dec
jae
mov
lea
ljmp
aad
mov
je
jmp
and
dec
setg
dec
mov
push
mov
lcall
icebp
pushf
cwtl
arpl
dec
mov
fistl
shlb
ret
jb
xchg
imul
mov
cld
sbb
cmp
out
aad
push
mov
push
or
std
dec
fisubrs
popa
and
xor
mov
push
pop
pop
les
push
cmp
imul
gs
pop
fldt
mov
mov
lahf
movsl
pop
in
testl
sub
pop
mov
fnsave
gs
inc
lods
pusha
sub
fwait
popf
test
mov
stc
out
mov
inc
mov
jl
daa
pop
pop
sbbb
fwait
shll
mov
cmp
sub
lcall
cmp
push
cmp
frstor
push
in
das
cmpsb
mov
mov
or
and
ss
or
add
and
fldt
push
xorl
sahf
cli
jmp
lds
mov
ljmp
loope
xorb
and
popf
push
dec
jg
dec
insl
test
cmpsb
sbb
sahf
xor
inc
out
cs
sub
mov
dec
xchg
movsb
addr16
dec
sub
int3
into
dec
adc
imul
mov
lds
dec
std
and
ret
js
mov
xlat
xor
cmpsb
pop
cmp
je
jo
cli
cmpsb
aas
add
adcb
cmp
sub
mov
lods
cltd
addr16
cmp
jmp
aam
test
cmp
ds
xchg
outsb
push
enter
and
outsl
gs
cwtl
mov
sbb
sarl
xchg
jbe
lds
insb
movsl
and
push
mov
sbb
fadds
add
jge
adc
xlat
fmul
inc
push
dec
push
aad
or
add
jmp
call
mov
and
subl
mov
leave
addb
int
pop
push
cmpsl
fcomps
pop
add
or
xor
dec
xlat
add
mov
jge
iret
adc
inc
xor
cmc
xor
inc
clc
in
outsl
mov
lds
cli
into
dec
jns
push
xlat
pop
rorb
int3
imul
cli
push
mov
push
push
mov
aas
aas
lods
inc
pop
sbb
fistpll
sub
xchg
push
out
mov
jge
or
or
in
push
sbb
call
out
fldcw
inc
sub
mov
pop
cmpsb
sahf
xchg
xchg
negl
stos
popa
cmpsb
lods
cwtl
mov
aad
lcall
leave
mov
es
jmp
rorb
cmp
pop
sbb
add
push
shl
dec
cmpl
loop
in
inc
adc
cmp
mov
mov
inc
rorb
push
addr16
loope
dec
clc
pop
mov
push
sar
das
push
or
jae
cs
or
insb
xchg
addb
call
jb
in
repz
lea
dec
cmp
cli
dec
jae
mov
jno
cmp
sub
repz
dec
jp
adc
aas
stos
popa
push
sub
pop
mov
mov
inc
movsl
add
mov
mov
shrb
or
test
jecxz
mov
sub
jo
xchg
out
outsl
cld
cmpsb
cmp
fwait
in
ret
mov
xchg
pop
fistps
out
jmp
xchg
push
inc
pop
mov
xor
enter
sub
xchg
cmp
xchg
dec
and
addb
fcmovu
pop
in
push
cmp
enter
jl
xor
jb
mov
xor
and
push
loop
sub
and
hlt
dec
rorb
repz
clc
imull
jmp
jmp
dec
pop
or
jo
xchg
mov
or
out
mov
mov
xor
fisubs
mov
cmpsb
cmp
xor
or
loopne
pop
loop
sub
and
ret
mov
cmpsl
cmp
mov
adc
sti
in
xchg
mov
lret
out
imul
stos
jb
cmp
cmpsb
mov
push
adc
inc
and
repnz
mulps
adc
sbb
sub
sahf
cmp
fwait
pop
sbb
mul
dec
and
stos
cmpsb
sbb
fsubrl
rol
push
daa
push
jecxz
sub
aas
push
and
sarb
pusha
sbb
dec
mov
mov
adc
push
xor
mov
sbb
jmp
hlt
in
out
cwtl
inc
pop
and
pop
pop
pop
out
cwtl
loop
shll
mov
fimull
int3
aaa
lcall
aas
popf
xchg
mov
test
mov
mov
shll
fcmovnb
add
and
sub
adc
mov
sub
sub
arpl
or
shrl
sbb
pop
mul
in
lret
lcall
fucomip
outsb
mov
dec
jmp
adc
add
stos
push
push
outsb
test
pusha
in
push
mov
ret
lock
ret
popa
add
lds
dec
push
stos
stos
push
xchg
mov
and
lods
fstps
cmp
adc
mov
testb
pop
fwait
in
xchg
or
pop
adc
ljmp
jge
call
pop
mov
imul
cltd
cmpsb
jle
mov
jne
fsts
nop
xchg
push
pop
out
mov
aam
pop
es
or
cmp
inc
gs
mov
out
lea
repnz
xor
mov
lcall
cmp
xchg
iret
daa
sub
jns
push
dec
loopne
and
movsb
mov
dec
bnd
sti
stos
enter
lret
imul
pop
insb
lret
aad
pop
sub
cmp
out
adc
in
cli
push
jbe
xchg
mov
notl
cmp
dec
xor
subb
mov
jmp
pop
outsl
leave
je
dec
int3
clc
cwtl
jmp
sub
inc
out
and
jmp
mov
dec
push
jg
dec
ljmp
loop
jae
stos
push
adc
mov
mov
rcl
clc
push
sarl
imull
dec
xor
xchg
jb
ffreep
lods
inc
in
inc
mov
xorb
cmp
xor
mov
loop
mov
js
mov
jo
movsl
mov
out
pop
push
xor
mov
mov
jo
mov
and
pop
jge
dec
enter
mov
clc
sbb
loopne
cmp
mov
rorb
pop
loopne
lods
inc
out
jl
push
lds
mov
mov
or
sub
add
lds
loopne
pop
mov
inc
imul
rorb
or
leave
arpl
fldl
pop
adc
sar
enter
mov
arpl
mov
dec
in
cmpl
push
lock
mov
jbe
sahf
das
loope
popa
jae
xchg
jo
in
hlt
ficoms
test
dec
cwtl
out
fistl
icebp
in
mov
test
lods
jecxz
incl
mov
sbbl
add
pop
inc
xchg
aas
lcall
push
out
mov
cmpps
sbb
arpl
mov
sahf
sti
push
movsb
xchg
ljmp
sbb
mov
push
sub
cmpsb
sub
and
dec
lock
mov
xchg
inc
outsl
lock
push
clc
in
lcall
dec
mov
shrb
jmp
in
shrb
jno
ja
arpl
jb
add
inc
inc
add
movsl
and
mov
xlat
pop
mov
mov
out
sbb
xor
shll
sub
inc
xchg
sahf
mov
leave
mov
fidivl
adc
enter
xchg
xor
out
adc
jl
pop
pop
mov
clc
mov
mov
pop
mov
aas
xlat
shrl
fcom
or
out
mov
sub
or
and
dec
push
mov
pop
push
jnp
jne
cmp
repnz
mov
arpl
pop
in
sub
jmp
pop
shrb
fdivr
or
sbb
jmp
pop
xchg
fst
fimuls
sbb
cld
adcl
mov
movsl
js
add
test
fdivr
mov
pop
adc
hlt
mov
call
or
mov
sub
outsl
push
mov
sub
add
test
shr
mov
stc
imul
dec
and
mov
dec
cmc
inc
fcomps
jmp
mov
iret
cwtl
mov
sbb
lcall
push
dec
xchg
or
addr16
adc
jb
ret
xchg
sti
mov
pop
xchg
lret
ficompl
addr16
sti
sbb
ret
out
rol
fxch
in
fwait
sbb
jb
out
and
jecxz
jno
jg
out
push
adc
cmpsb
sbb
mov
popa
push
lcall
sub
xchg
sbb
jae
xor
movsl
cmpsb
jmp
mov
push
lcall
addb
arpl
jmp
fs
push
push
xchg
lds
lcall
gs
andb
cmp
mov
pusha
mov
cmp
pop
shll
mov
stos
mov
out
ret
lea
push
cmc
psrlw
bound
sarb
adc
aam
push
imul
leave
jecxz
dec
jbe
dec
xchg
in
movsl
dec
mov
sbb
or
fmull
lret
shl
mov
xchg
ja
xlat
das
cmpsb
movl
repnz
in
jl
mov
push
xlat
inc
fidivrl
inc
mov
test
mov
mov
sti
mov
imul
lahf
or
popf
out
cmp
sub
loope
clc
mov
jns
std
ds
call
shr
mov
jno
mov
push
outsl
out
xor
popa
repz
cmpsl
sbb
mov
enter
hlt
cmp
add
adc
cmp
gs
add
cmp
mov
test
mov
inc
cmp
xor
and
test
cmp
out
mov
loopne
jns
and
adc
cmp
jmp
shlb
fsub
sbb
mov
cmp
sti
pop
lahf
jmp
push
mov
es
mov
test
lcall
lock
or
mov
into
das
fwait
adc
shll
fistpl
jl
jecxz
sub
push
imul
push
mov
sbb
mov
mov
jge
in
pop
cmp
sbb
mov
hlt
or
xchg
dec
xor
mov
ja
sub
cmp
cs
pushf
dec
je
cwtl
test
push
pop
mov
mov
mov
lcall
stos
push
das
sarl
mov
mov
frstor
jmp
into
mulb
inc
in
fidivrs
adc
imul
and
mov
cmp
lods
pop
mov
imul
shr
addl
pop
fsts
insl
jno
insb
data16
mov
in
push
xchg
jno
out
sbb
scas
ret
sub
push
arpl
cmp
into
push
cmp
int
inc
das
imul
sbb
or
dec
sbb
ja
scas
xor
sbb
fsts
inc
cmp
pop
repz
fs
jecxz
mull
test
ja
mov
sti
adcl
clc
movsb
push
jg
xchg
mov
nop
movsl
xor
lret
shlb
mov
std
mov
mov
jae
mov
jmp
push
enter
out
aaa
xor
jne
sahf
jge
jl
mov
xchg
aad
inc
inc
cmp
jno
aaa
mov
dec
mov
inc
mov
or
std
xlat
mov
push
fists
inc
xchg
cmpsb
bound
mov
lds
jne
sub
mov
sahf
shll
push
or
hlt
sbb
push
data16
nop
jae
sub
les
shll
mov
cltd
insb
testl
add
mov
dec
fldenv
das
incl
jl
or
adc
jo
pop
push
sub
pushf
lcall
pop
xchg
jge
dec
add
loop
jg
and
and
repnz
movsb
dec
jb
xor
and
mov
mov
int
mulb
mov
add
sbb
imul
lahf
xchg
jo
adc
rorl
lock
mov
leave
lahf
mov
enter
mov
or
pushf
xchg
mov
je
fnstenv
int
ret
sub
fidivs
dec
xor
mov
sbb
outsl
movsl
or
jmp
dec
adc
fstpt
aam
ja
push
loop
dec
shlb
and
mov
fistl
imul
mov
mov
testl
add
fldenv
imull
outsl
jae
xlat
inc
mov
add
push
aam
push
je
fldenv
xor
cmp
mov
sbb
add
mov
jge
lods
and
and
imul
jge
out
popf
insb
inc
clc
idivl
pop
and
mov
les
jmp
xor
mov
xor
out
mov
xor
outsl
adc
movsl
cmpl
cld
jnp
jmp
popf
clc
and
int
dec
push
es
cwtl
cli
mov
call
cld
pop
mov
jae
loop
push
imul
add
ret
cmp
sub
sub
mov
jbe
fisttpl
jbe
xchg
adc
mov
cli
lret
mov
mov
ret
mov
out
jae
or
repnz
fcmovb
inc
add
xchg
push
loop
test
loop
adc
inc
test
inc
arpl
adc
outsb
rclb
add
mov
aad
adc
sub
mov
mov
lcall
push
add
mov
int
dec
mov
pop
test
sbb
std
not
adc
sub
mov
cmpsb
or
mov
sub
cmpsb
xchg
dec
lods
lahf
inc
sbb
pop
xorl
hlt
mov
jae
ja
daa
and
push
cs
cmpsl
lea
push
add
aad
sub
mov
xor
mov
pop
mov
ret
adc
pop
jmp
push
inc
mov
adc
jge
jl
lret
shr
pop
or
jl
jge
pop
int3
dec
add
xchg
test
mov
inc
stos
in
in
sub
xchg
lcall
into
cwtl
dec
pop
data16
add
movsl
lods
rcrl
data16
inc
cmpsb
push
xlat
enter
outsb
pushf
sbb
popf
imul
and
out
sub
aas
mov
call
imul
lcall
push
bound
xor
rcll
xchg
pop
inc
cmc
leave
push
ret
pop
add
mov
std
jmp
lea
sub
jb
pop
pop
js
mov
pop
sarb
hlt
dec
les
cmp
fnstsw
sbb
add
xchg
sub
daa
fsts
jecxz
filds
pop
adc
cmp
xor
cmpsb
cwtl
push
inc
push
inc
mov
movsl
int3
pop
cmp
push
mov
dec
shll
cld
loopne
jge
lret
gs
test
cmp
xchg
jno
jae
mov
or
cmp
in
adc
pop
subb
pop
mov
xchg
pop
mov
jno
repnz
mov
imul
gs
std
ja
cmp
lahf
sbb
mov
repnz
xor
adc
cmp
aad
fistpl
mov
in
sti
popf
lds
je
les
out
in
int3
and
in
mov
sub
je
pushf
or
xchg
into
lcall
pop
or
inc
xchg
jne
sub
scas
fstpl
sti
adc
mov
xor
push
push
sub
push
les
ret
or
xchg
push
xlat
out
pushf
pop
aad
lcall
addl
xchg
shlb
jmp
inc
mov
mov
jle
in
in
out
cltd
les
out
repnz
ret
mov
push
mov
call
and
insb
cmp
fdivrp
sbb
iret
outsl
imul
sarb
test
pop
in
fdivrl
lds
pop
stos
adc
and
mov
xor
push
aas
push
enter
out
cmpsb
leave
mov
outsl
lock
xchg
pop
mov
rclb
mov
xchg
dec
mov
push
inc
ror
inc
pop
xor
cmp
mov
and
fistl
repz
movsl
out
cmp
mov
or
push
push
loope
jmp
mov
das
fcmovne
int
jns
negl
mov
arpl
das
nop
fsubrl
es
stos
push
test
fisttpl
jl
aad
test
shl
jno
mov
add
mov
in
xchg
inc
add
lock
add
push
add
icebp
ffreep
sarl
add
xchg
mov
outsb
mov
movsl
daa
fidivl
js
mov
rcr
jb
sub
xchg
fwait
cltd
push
adc
inc
pop
adc
jp
rcr
stos
cmpsl
lods
dec
fnstsw
jno
jle
mov
aad
jb
in
mov
out
mov
nop
out
rcrb
loopne
adc
sub
aas
or
jae
inc
lds
sub
adc
and
fistpll
repnz
shrl
jnp
call
adc
fldenv
adc
movsl
xchg
adc
or
xor
lahf
push
push
mov
add
int3
imul
mov
mov
cmp
lcall
jno
fldl
jb
pop
xchg
lds
pop
mov
nop
test
fcomip
aam
and
or
addr16
or
int3
testb
push
push
out
lea
add
insl
or
mov
pop
ficoms
jmp
fistl
movsl
insb
jge
adc
mov
jl
add
loope
fidivl
push
add
sbb
scas
or
mov
pop
jb
dec
sbb
cmp
sbb
sub
push
push
nop
dec
test
cmp
cmpsl
jae
push
loopne
subl
cltd
mov
inc
in
sbb
mov
shll
mov
lcall
cwtl
and
sbb
pushf
inc
mov
shl
xlat
cwtl
lret
jns
adc
adc
pusha
sbb
adc
xchg
jne
push
fisubs
out
sbb
out
inc
repz
jne
cmc
std
lcall
sbb
enter
sbb
mov
dec
xor
fcmovbe
sbb
pop
in
daa
out
shlb
addr16
or
sbb
jae
ret
out
sti
subb
push
or
jb
pop
mov
pop
outsb
xor
mov
in
je
movsl
push
jmp
jg
lahf
sub
imul
jne
dec
xchg
iret
adc
and
mov
ja
and
repnz
loope
add
jb
inc
ljmp
mov
mov
lret
rorb
sub
cli
hlt
mov
sbb
out
xchg
mov
and
cli
imul
rcrl
add
jge
imul
push
pop
fdivl
adc
pop
mov
in
xchg
aad
pop
insl
adc
lods
lahf
data16
mov
mov
ds
jge
stc
dec
add
test
in
mov
cs
das
and
lret
and
push
fcoms
push
pop
test
loopne
test
sub
les
rol
sbb
ret
xlat
lahf
push
xchg
sub
shrl
imul
mov
test
adc
push
scas
loope
mov
imul
mov
cli
lods
xchg
leave
xchg
or
out
add
sahf
test
into
sub
scas
push
dec
test
imull
jmp
out
in
adc
addr16
popa
mov
imul
mov
dec
inc
xchg
test
imul
jge,pt
xchg
or
fsubl
mov
or
jmp
test
inc
loopne
jg
and
les
pop
jo
inc
inc
mov
imul
test
test
gs
lea
adc
xchg
adc
ret
mov
movsl
test
push
add
xchg
adc
in
push
lds
xchg
jmp
fildll
loop
jecxz
hlt
lahf
jmp
imul
data16
pop
push
movsb
movl
aaa
jmp
in
imul
call
imul
out
jmp
xlat
lds
movsl
mov
add
pop
es
loopne
fwait
imul
dec
cltd
les
pop
inc
mov
mov
test
mov
inc
mov
add
inc
movsb
cmc
imul
and
lds
dec
sub
mov
test
aam
push
jmp
in
push
imul
push
popa
imul
in
call
add
jecxz
hlt
aad
sub
or
jnp
leave
stos
xor
sub
mov
inc
dec
popa
outsl
fdiv
push
sub
fldenv
jecxz
leave
aas
sub
pop
aad
mov
insb
dec
stos
into
repnz
mov
out
ja
xor
in
in
add
add
mov
fildll
mov
push
mov
fildll
adc
in
mov
ror
shl
and
shlb
jb
andb
pop
loope
sub
movsl
loopne
leave
clc
insb
xchg
jno
cmp
and
outsl
mov
xchg
fldl
adc
in
sbb
fwait
sub
mov
cmc
push
ljmp
pop
mov
ftst
mov
mov
decb
repnz
bound
loop
in
sub
sub
dec
xchg
dec
jae
dec
pop
lret
popa
movsb
daa
mov
cmpl
fwait
push
cmpsb
arpl
sbbl
ret
cmp
movsl
lock
xor
lcall
pushf
dec
lahf
sti
push
push
mov
imul
movsl
push
mov
jp
imull
aaa
ljmp
cltd
popf
mov
inc
arpl
sbb
add
bnd
and
leave
pop
sub
mov
cmpsb
repz
cmpsb
fcompl
xor
aam
adc
fdivrl
bnd
sbb
pop
stos
sub
mov
loop
sub
fstl
inc
flds
adc
or
sarb
arpl
clc
mov
stos
dec
mov
fldenv
add
push
dec
sub
bound
fwait
jg
mov
or
fwait
and
mov
dec
out
mov
cmpsb
xchg
cmpsl
add
imul
sub
ret
nop
sbb
push
mov
decl
cmc
lea
jnp
or
mov
ss
pop
loope
inc
mov
adc
add
out
pop
jge
sbb
test
pop
xchg
xchg
mov
test
xor
push
stos
mov
rorb
dec
leave
jae
jnp
xor
mov
or
mov
sub
mov
sbb
add
lods
dec
jle
pusha
pop
mov
pop
testl
push
rclb
std
inc
mov
jmp
dec
aad
call
fnsave
jno
cmp
and
out
movsb
ja
sbb
ret
or
pop
hlt
push
hlt
ja
lahf
mov
sbb
andl
cmp
loop
jge
mov
sub
pop
jb,pn
xchg
push
leave
cmp
add
arpl
mov
inc
sub
jecxz
mov
lcall
jmp
mov
jo
outsb
outsl
and
mov
jecxz
loope
xchg
scas
add
push
sbb
ficomps
out
push
sub
jbe
mov
in
adcb
dec
pop
cwtl
or
hlt
pop
stos
add
rol
mov
movsl
mov
mov
xchg
mov
pop
clc
xor
out
push
addr16
dec
shl
and
outsl
adc
xor
and
insl
les
add
in
repnz
xor
cmpsb
sub
mov
sub
stc
jo
ja
pop
mov
popf
out
ret
mov
push
in
inc
mov
push
dec
not
cmp
cld
xor
cltd
xor
mov
int3
adc
and
xchg
in
roll
popf
lret
incl
mov
inc
push
out
lods
xchg
fildll
movsb
push
sti
dec
pop
and
xchg
lret
in
fsts
shlb
movsb
cmp
xchg
push
xor
jnp
out
push
fbld
nop
push
xlat
jno
inc
fsub
aam
pop
iret
aaa
das
pop
jecxz
dec
sbb
inc
jb
aam
and
fwait
xchg
xlat
ljmp
dec
adc
xchg
dec
iret
leave
into
out
cltd
ljmp
out
xchg
inc
loopne
cltd
mov
pop
out
adc
mov
or
jae
inc
sti
fnstcw
mov
test
lcall
jno
inc
aaa
adc
in
xchg
and
sub
lcall
aas
ds
sub
jb
dec
sbb
popf
push
jns
mov
mov
adc
xchg
loop
xor
daa
and
adc
jmp
add
lcall
xchg
lcall
cmp
in
inc
adc
xor
jge
mull
movsl
jecxz
mov
pop
daa
inc
add
lods
rorl
mov
push
mov
add
add
mov
mov
pusha
mov
push
hlt
jmp
subl
popf
fcompl
sbb
popf
dec
add
mov
out
pop
dec
cld
or
call
subl
cltd
cltd
xchg
enter
jge
mov
mov
mov
mov
xchg
test
fxch
or
ss
in
lcall
insb
sbb
popf
fbld
fldcw
stos
cmpl
in
fidivrs
cmp
sarb
fisttpl
iret
sbb
lahf
stc
mov
int3
loop
imul
les
loope
aad
push
add
sahf
sbb
and
push
call
mov
push
inc
repnz
in
movsb
iret
mov
cmp
scas
enter
testb
hlt
push
lret
add
lea
and
cmpsl
gs
mov
lcall
cmp
xor
cli
in
adc
jmp
push
loope
and
mov
enter
in
jo
jae
mov
or
ret
mov
js
or
adc
sub
int
or
jecxz
cmp
push
and
in
mov
imul
mov
fdivrs
test
out
rcll
xchg
or
mov
outsl
mov
out
sbb
testl
ljmp
cmpsl
popf
pop
leave
jb
test
xchg
mov
movsb
aaa
lods
mov
cltd
push
or
mov
adc
xchg
mov
std
jb
lcall
ja
int3
push
jmp
mov
or
dec
mov
inc
mov
out
cli
xchg
pop
lcall
dec
cltd
movsb
movsl
pop
inc
std
cmovbe
dec
lods
push
sub
shrl
mov
jmp
and
daa
out
pop
loopne
push
pop
jecxz
and
push
test
cmpsl
shll
lock
fstl
or
mov
xor
fldl
out
in
test
movsl
pop
leave
cmpsb
xor
arpl
int
popa
loop
push
push
out
dec
loope
dec
or
out
add
jb
scas
imul
dec
shl
pop
xor
mov
sub
rcll
and
jnp
daa
sub
pop
lret
icebp
das
lret
clc
pop
sub
int
push
dec
xchg
test
lods
jmp
or
push
inc
pop
rorb
mov
push
fimuls
into
jns
sarb
push
mov
insb
inc
pop
lret
repnz
inc
sub
lcall
leave
jae
popf
movsl
negb
add
ret
dec
and
mov
mov
imul
pushaw
in
leave
sarl
add
pop
pop
xchg
push
push
cmpsl
mov
pop
pop
inc
xor
movsb
lret
fwait
inc
lods
mov
mov
jg
popf
ds
mov
adc
pop
jne
mov
mov
ret
adc
adcl
and
push
xchg
cmp
ror
in
add
mov
loope
shll
or
mov
out
loopne
mov
sub
adc
xor
mov
aad
fmuls
or
ret
in
and
push
xor
loop
fstpt
scas
fcom
push
ja
je
inc
in
fdivl
ss
and
push
leave
dec
inc
test
mov
in
fimull
test
popf
or
xchg
xchg
xchg
std
call
xchg
jl
stos
lcall
sbb
test
gs
sbb
cmpsl
sbb
and
bound
mov
loope
xchg
sub
imul
mov
out
jo
fwait
int3
dec
cmp
cmpsb
int
lahf
pushw
adc
jmp
pusha
faddp
xchg
jmp
push
mov
repz
xchg
popf
pop
outsl
push
sub
jmp
push
stos
outsb
cmpsl
lods
loope
popa
test
ja
int3
and
aam
push
xchg
mov
push
int
adc
lret
repnz
mov
sbb
and
xor
mov
dec
pop
in
popf
aam
dec
xor
lds
mov
dec
insl
mov
fwait
lods
sbb
sub
add
out
and
push
jmp
cmp
rcrl
daa
ret
inc
push
fwait
xchg
and
int3
mov
pusha
sbb
gs
dec
movsb
xor
pushf
mov
into
aam
gs
mov
xor
dec
in
push
lds
push
test
fimuls
and
stos
call
sarb
loope
lds
pop
test
out
in
les
fsubrs
xchg
or
xorb
pusha
rcrl
fwait
jae
je
sub
imul
pushf
add
cs
gs
cmpsl
add
andl
insl
pusha
fmul
shrb
xor
xchg
push
arpl
fwait
scas
pop
frstor
mov
fs
pusha
loope
outsl
sub
frstor
xor
inc
pusha
scas
xchg
mov
xor
push
xchg
pop
frstor
jecxz
xchg
push
and
mov
mov
out
pop
test
jae
ret
lods
pop
mov
dec
inc
lock
sbb
lcall
pop
fstp
xchg
lds
xor
push
cmpsl
push
push
pusha
icebp
int3
push
jb
fnsave
xchg
lahf
test
inc
popw
outsb
and
fisubl
test
out
mov
insl
int
call
dec
push
movsl
sbb
push
pop
fs
dec
and
pushf
pminsw
int
pusha
pushf
jecxz
jge
enter
in
leave
lods
sarb
std
sbb
arpl
imul
js
popa
mov
lahf
cs
mov
xchg
mov
and
add
lods
cmpsb
lcall
mov
sub
pop
js
call
xor
cmp
sbbb
lea
fistl
test
and
fcmovu
frstor
lea
cmpsl
inc
pop
lds
cwtl
movsb
xchg
arpl
pop
nop
sub
mov
sbb
xor
cmp
push
dec
fimull
sbb
jl
fisubs
or
xchg
jne
pushf
std
mov
mov
push
sub
push
fisttpll
sbb
and
and
mov
jae
shll
mov
mov
fxch
adc
xchg
add
cmpsl
ss
addr16
inc
inc
jmp
push
int
xchg
cmp
jle
cmpsb
xchg
rclb
icebp
cmpsb
movsb
xor
xor
mov
cmpsb
andb
stos
xor
mov
dec
popa
clc
daa
fsubs
adc
movsl
jge
push
inc
dec
out
enter
fstps
stc
lods
loop
add
das
pushf
popf
xchg
adc
cmp
fmull
mov
ret
int
stos
leave
add
jge
and
aad
js
daa
cmp
pusha
dec
mov
sbb
mov
repz
cmpsb
repnz
aad
pop
cmpb
fistps
mov
jge
movsl
xchg
xlat
jno
sti
mov
xchg
mov
lcall
adc
add
gs
xor
out
in
inc
pop
hlt
rcll
push
xor
jb
jle
add
add
ret
cs
jmp
pop
cmp
daa
mov
ret
leave
in
lcall
xchg
adc
in
sub
fimull
and
dec
xchg
inc
cli
dec
xchg
punpckhbw
mov
in
jmp
movsl
leave
imul
and
pop
lahf
es
mov
jmp
loop
stos
lcall
push
cmp
mov
xchg
loop
std
orb
leave
cmp
push
enter
loop
repz
mov
outsb
or
ja
or
enter
lods
mov
aas
cmp
add
sbb
subl
push
cmpsl
cmp
arpl
rcrl
andb
lcall
out
lret
fdiv
xchg
xchg
and
out
pop
cmp
int
call
bound
jge
push
pushf
push
push
fbstp
frstor
xor
inc
rolb
pop
cmp
xor
push
or
negb
mov
test
cltd
bound
and
cmp
adc
dec
sub
inc
pop
bound
mov
pop
inc
mov
cmp
das
add
cmpsb
in
enter
leave
mov
mov
push
mov
sbb
mov
xor
cwtl
mov
xor
xor
sbb
leave
lcall
push
mov
push
push
hlt
dec
xchg
test
lcall
cmp
pop
mov
test
sbb
cmp
ss
lcall
ret
insl
sbbl
mov
jge
jle
ja
mov
shlb
cmpb
lret
jnp
mov
or
pop
ret
sbb
and
addl
fs
mov
js
sbb
push
mov
jae
mov
hlt
int
mov
push
data16
xlat
dec
cwtl
xchg
out
or
loope
push
jb
imul
mov
movsbl
inc
ss
sbb
push
xchg
cmpsb
sub
dec
dec
jo
das
push
gs
pop
out
ret
adc
out
iret
insb
mov
pop
je
movsb
aas
fistpl
mov
dec
push
shll
adc
mov
or
lock
add
and
mov
mov
push
jge
imul
rol
fnstcw
push
repnz
aas
push
mov
dec
jl
mov
out
loope
sahf
lcall
and
pushf
push
push
jmp
push
ret
pop
xor
aam
fidivrs
xor
mov
fsts
cwtl
push
lcall
pusha
push
xlat
sbb
inc
repnz
sbb
test
xchg
mov
cmpsb
insl
cmp
cwtl
popl
cmpsb
xchg
dec
push
pushl
sbb
sbb
shlb
sbb
shll
sarl
mov
addr16
jne
sti
mov
xor
xchg
xchg
out
xchg
or
popf
sub
mov
test
mov
cmp
pop
loop
jge
push
ficompl
push
cmpsb
int3
sub
roll
fldenv
gs
lods
xchg
imul
scas
dec
cmp
out
cmpsb
imul
xchg
dec
shll
add
push
mov
pop
call
ja
mov
dec
inc
sub
lcall
inc
xchg
ljmp
ds
xchg
addr16
jbe
push
addr16
or
mov
and
pop
call
call
or
jae
jge
cli
stos
jl
lcall
dec
xchg
or
shlb
mov
add
pop
xchg
mov
cmp
js
addr16
lock
popa
ljmp
fistps
ret
shl
and
ja
lahf
hlt
inc
scas
aad
ljmp
jmp
or
call
jns
mov
push
cmpsl
jne
js
frstor
mov
adc
movsb
stc
rcll
mov
add
rol
outsl
push
lcall
call
cmp
dec
pop
fists
aad
lcall
adc
into
lods
fld
and
mov
jmp
pusha
or
lock
lahf
sub
lcall
xchg
fs
push
shrl
or
montmul
cmpsb
inc
mov
sub
loop
jmp
adc
mov
cltd
in
stc
jecxz
inc
stos
mov
jle
ret
cmpsb
pop
pop
nop
idivb
push
mov
hlt
or
lds
cmp
fidivrs
mov
nop
adc
bound
popa
rcrl
pop
cmp
cmp
push
test
mov
addr16
leave
shll
push
xor
and
pop
xlat
mov
mov
ds
movsl
add
mov
pusha
and
push
insb
shrl
mov
cwtl
cwtl
movsl
cwtl
fstl
push
enter
jae
test
cmpsl
sub
out
lcall
cmpsl
arpl
cltd
inc
popf
mov
add
stc
cmpsl
cli
imul
pop
hlt
adc
call
mov
mov
arpl
add
repz
push
and
out
lcall
push
inc
dec
aaa
mov
push
cmp
popa
mov
in
mov
das
jbe
shr
in
test
out
rclb
xor
inc
mov
fstl
adc
ja
movsl
push
bsr
or
imul
mov
mov
aaa
lds
loope
push
inc
fimull
fists
sbb
pop
push
mov
je
push
jle
repz
sbb
lret
jp
fsubr
pop
inc
jl
or
ss
sub
push
and
mov
std
in
jmp
mov
xor
test
outsb
sbb
fstps
das
ja
push
iret
xor
ljmp
fimuls
push
cltd
dec
lahf
add
cmp
dec
out
ret
xchg
adc
and
das
je
in
stos
shrb
mov
mov
rorl
aas
out
add
add
add
addb
xchg
cmp
sarb
cs
in
jl
and
rcrl
std
mov
mov
imul
or
cmpsl
xchg
jp
lcall
pop
xor
sbb
xor
add
sbb
arpl
out
das
mov
cmpsb
mov
sahf
icebp
sbb
push
je
xchg
ret
fst
insb
jecxz
push
xchg
sbb
pop
rcrl
mov
xchg
xchg
outsl
sahf
out
xchg
stos
mov
mov
ret
lods
icebp
mov
test
repz
ror
mov
lahf
and
sbb
jmp
daa
mov
mov
jmp
ficoml
sub
push
outsl
daa
frstpm(287
hlt
lret
out
and
lret
test
cmp
imul
mov
popf
outsl
sarb
or
aad
add
sub
int
mov
aad
add
mov
add
dec
mov
inc
mov
out
lret
cld
or
sbb
repz
jmp
mov
mov
pop
movsl
cmp
mov
mov
lcall
adc
mov
pop
ja
insl
test
add
sub
and
push
lods
push
jbe
ds
mov
push
lahf
and
xor
ja
in
aaa
mov
push
mull
xor
in
mov
add
rorb
daa
xchg
dec
fs
pop
andl
lock
mov
mov
cmp
clc
out
dec
insb
mov
pop
insb
loopne
mov
sub
cmpl
jecxz
xor
cmpsb
outsl
push
cmp
enter
je
imul
mov
sbbb
mov
or
aam
push
pop
sub
cwtl
pop
cmpsl
mov
xchg
cld
pop
popa
xchg
out
lcall
outsl
gs
arpl
mulb
xchg
insb
ret
orb
dec
push
jbe
push
xlat
movsb
and
outsl
sub
inc
aas
inc
sbb
xchg
push
call
mov
mov
sahf
xchg
ljmp
out
lds
fldenv
and
mov
stos
aam
divl
pop
xchg
mov
lcall
mov
test
int
dec
loope
imul
sbb
inc
jecxz
xchg
xor
daa
adc
inc
lea
sbbl
cmc
dec
jle
mov
xchg
add
sbbb
add
xchg
mov
inc
sub
dec
push
adc
sbb
enter
mov
sbbl
jb
test
xchg
repz
in
fwait
sbbb
clc
je
popf
out
adc
jmp
inc
pop
pop
inc
jns
enter
lcall
in
add
pop
scas
in
mov
mov
adc
lea
xchg
xor
outsb
mov
rolb
sar
sbb
mov
or
scas
mov
xchg
loop
rcr
leave
mov
dec
xchg
loop
sti
arpl
jecxz
clc
mov
pop
push
xor
mov
mov
dec
je
mov
add
cwtl
xor
loop
cmp
sub
jo
cmp
sbb
cmpsl
mov
stos
jmp
xor
insl
adc
add
cmp
lods
cld
xor
lcall
pop
movsl
sbb
pop
daa
adc
leave
sbb
inc
xchg
fcomps
das
xor
movb
ficompl
cmp
repz
jmp
sub
push
and
adc
lcall
push
test
and
outsl
xchg
ja
push
faddp
dec
icebp
jl
mov
call
in
bound
and
gs
or
add
daa
add
ss
loope
or
adc
ret
lods
gs
loope
sbb
cs
fstpl
xchg
nop
add
addr16
mov
subb
sub
pop
das
mov
cmpsb
stos
data16
addr16
sbb
adcl
iret
xchg
mov
loope
daa
into
int
dec
incb
xchg
adc
inc
push
lahf
ds
bnd
test
push
lret
inc
insl
add
lods
sti
dec
mov
loopne
addr16
out
push
lcall
push
ja
dec
pop
movsl
dec
xor
loope
fstpl
jp
testl
jbe
mov
shll
pop
and
outsb
jmp
lock
lcall
mov
mov
out
mov
cmpb
sub
dec
lcall
fimuls
cmp
mov
leave
xchg
sbb
jl
insb
mov
es
gs
inc
loope
jg
inc
adc
in
dec
fcmovnb
std
ret
lea
push
jp
push
daa
mov
enter
je
movsb
push
push
cmp
leave
div
cmc
rcrb
ret
xorl
outsl
xor
popl
jbe
mov
xchg
inc
mull
fimull
mov
pop
xchg
xchg
dec
cwtl
push
mov
jb
fs
sub
rcl
mov
sub
test
push
int3
ja
cmp
pop
aaa
jno
in
and
pusha
lahf
ret
xor
popf
ja
inc
imul
push
ficomps
fs
out
mov
mov
ds
push
inc
cmp
bnd
popf
add
sub
pushf
loopnew
test
lcall
inc
cld
lret
cmp
aas
lcall
xchg
out
pop
add
out
mov
mov
popa
ret
dec
shlb
sarl
cmp
lcall
sahf
jecxz
popf
or
adc
leave
leave
hlt
iret
inc
cmpsl
mov
ss
adc
mov
pop
scas
dec
int3
xchg
mov
sbb
pop
ja
in
jecxz
inc
loop
push
push
xchg
pop
or
insl
mov
push
sub
pushf
fmull
ljmp
xchg
gs
enter
mov
pop
adc
cmp
push
popf
mov
push
mov
into
and
inc
loopne
aad
pop
stc
outsb
jecxz
insl
imul
mov
inc
cmpsb
fsubs
mov
adc
lods
fdivrs
push
or
jno
out
test
ficoms
inc
lds
mov
rcl
cltd
push
aas
and
aas
movsl
push
or
aam
add
inc
loope
out
cmpsl
loope
in
daa
out
aas
xchg
int
jo
xor
inc
dec
insb
into
test
pop
in
stos
movsb
xchg
aad
xchg
pop
mov
stc
test
test
pop
call
addr16
or
mov
outsl
push
pop
push
mov
lret
ficomps
addr16
cli
jmp
pop
loop
dec
sarl
loop
ret
mov
jmp
loop
sbb
cmp
xchg
xchg
sub
jle
data16
jg
xor
aaa
inc
out
push
jno
sbb
repz
mov
vaddpd
gs
loope
loope
shll
ret
int
jno
stc
xor
arpl
ss
fnstcw
push
and
jbe
loop
push
jle
inc
pop
shll
jp
adc
call
add
push
cmp
dec
sahf
mov
xchg
cltd
inc
testl
inc
sub
shrl
jp
push
icebp
out
les
mov
sar
ss
cmp
ret
int
in
push
push
or
flds
xchg
call
loop
rcrl
jmp
mov
insb
fsubr
mov
xor
in
inc
out
pop
jnp
loop
lcall
mov
adc
mov
mov
rolb
icebp
mov
lds
loop
std
pop
pop
jae
shl
loopne
inc
mov
sbb
imul
lea
or
add
jg
out
sbb
loop
dec
iret
mov
mov
ror
add
mov
lock
es
inc
enter
jmp
dec
mov
xor
xor
loop
pop
pop
repnz
push
sub
jbe
mov
xor
mov
mov
xchg
push
add
mov
out
out
fbstp
mov
mov
pop
jmp
stos
out
jecxz
ljmp
and
and
fldcw
pop
cmp
loop
pushf
push
add
pop
shll
ret
mov
stc
push
call
aam
add
and
ret
cmpsl
lret
pop
xlat
call
add
or
inc
hlt
out
adc
stos
loop
fsts
cmpsb
mov
mov
adc
cli
ss
out
push
loop
jae
sbb
ret
loop
jle
fbstp
or
rorl
mov
dec
lret
daa
fwait
jno
fcmovnu
pop
jecxz
cld
jl
mov
iret
inc
mov
inc
push
loop
adc
arpl
shrl
test
or
adc
inc
mov
push
data16
in
out
sbbb
gs
loop
scas
cmp
mov
push
xchg
xor
int
pop
mov
sbb
stos
cmpsl
push
loop
sub
xchg
aas
jl
das
mov
lock
cmc
sbb
rorb
loop
outsb
aad
adc
loop
cmpsb
or
pop
loope
pop
lods
mov
jg
and
loop
outsl
int3
stos
inc
movsl
jb
out
xlat
add
out
adc
insl
icebp
pop
cmc
shl
sarl
adc
jecxz
loop
sub
mov
loop
fs
sbb
xor
aaa
jno
jmp
mov
cmpsl
mov
dec
loop
push
cmpsb
addb
fsubl
mov
mov
bnd
pop
jmp
pop
jne
loop
insb
test
loop
sbb
mov
pop
aas
imul
test
and
inc
mov
ficompl
in
rol
js
xchg
sub
mov
aas
js
popf
mov
flds
stc
dec
xchg
mov
pop
inc
call
xlat
push
cmp
pop
mov
pop
loopne
fucom
jnp
mov
mov
push
enter
pop
inc
sti
pop
loope
cmp
and
pop
ja
mov
into
movsl
xor
loop
mov
test
lods
addr16
cmpsl
call
jne
push
xchg
sub
rclb
lds
and
loop
pop
loop
rcl
ss
pushf
push
loop
mov
sbb
sahf
mov
aad
pop
loop
adc
rolb
leave
or
mov
in
sbb
gs
xchg
jecxz
ja
mov
push
adc
testl
daa
clc
or
pop
adc
test
icebp
mov
push
sub
mov
dec
inc
loop
scas
cmp
xor
into
loop
jmp
lds
sbb
popf
xchg
mul
test
jp
movsb
push
ret
fimull
jmp
iret
xchg
repnz
mov
loop
out
push
test
nop
loop
dec
stos
or
mulb
mov
loope
into
lods
push
add
xor
jns
jmp
sahf
rol
sub
lods
xchg
dec
add
fsts
dec
shl
push
and
fcomps
push
jns
rclb
loop
sub
lcall
out
psraw
aad
cmp
adc
add
call
jmp
std
into
loopne
cmp
out
dec
adc
mov
out
and
enter
cwtl
jo
fld1
ret
lcall
imul
and
sti
loop
std
sbb
arpl
decl
sbb
xchg
stos
push
inc
sub
or
pushf
inc
inc
loop
mov
pop
loop
cmp
fbld
push
jmp
repz
loope
pop
sbb
hlt
xor
insl
xchg
je
mov
jl
mov
pop
movsl
mov
and
in
rorb
inc
fsubrs
adc
adc
push
call
mov
loop
and
pop
xchg
stos
repnz
sub
nop
imul
sbb
jb
dec
jmp
pop
push
leave
in
and
mov
sub
out
in
mov
lds
jmp
pop
push
xor
sbb
inc
rcr
and
jnp
loop
cmp
in
and
popf
loop
mov
push
push
xchg
jae
mov
sti
sub
in
jnp
loope
das
pop
stc
dec
xor
and
or
push
inc
imul
fsts
stos
mov
loope
cwtl
sahf
dec
and
insb
xor
mov
pop
test
and
ss
mov
jbe
fwait
sub
mov
in
mov
push
dec
mov
mov
repz
sbb
repnz
arpl
dec
psrad
dec
mov
sbb
out
dec
ret
dec
jmp
pushw
aad
bound
jbe
and
xlat
ficompl
dec
inc
movsl
clc
test
test
sub
stos
ljmp
call
jge
out
mov
into
or
inc
fwait
sub
in
mov
xchg
cli
mov
outsb
popf
loope
nop
lcall
movsb
rol
loop
mov
inc
lret
pop
cs
dec
or
aaa
cmpsb
shl
mov
sarl
cwtl
in
inc
data16
push
push
shll
sbb
loop
rorb
xchg
scas
loope
stc
xor
fsubs
push
fcomps
loop
sub
inc
add
mov
mov
in
jmp
addl
movsl
push
pop
jmp
stos
stc
inc
stos
out
adc
mov
dec
call
or
aaa
filds
stos
call
popf
movsl
pop
loop
sti
sbb
xchg
push
lret
jge
imul
cmpsb
shll
xor
in
call
add
stos
xchg
cltd
loop
and
or
shlb
pop
insl
imul
and
imul
mov
and
jmp
ret
fildl
push
loop
dec
or
test
leave
aaa
sub
in
das
jmp
rcrb
out
mov
mov
loop
je
dec
out
popl
roll
jae
out
sti
adcb
enter
in
pusha
bound
and
cld
loop
inc
and
loope
enter
idivl
out
xor
mov
sahf
cwtl
cli
pop
pop
jb
shll
test
ss
dec
mov
adc
pop
xchg
imul
out
mov
stc
stos
dec
xchg
push
mov
ret
and
aad
cmpsb
mov
out
orl
cmp
daa
dec
sbb
les
and
push
mov
mov
push
gs
xchg
pop
sub
stc
push
popa
data16
orl
subl
jns
and
ror
jb
cwtl
ret
mov
std
es
or
cmp
movsb
xor
mov
push
cli
cmpsl
loope
jns,pn
mov
iret
pop
xlat
xor
addr16
fs
sub
int
sub
and
lret
sbb
xchg
loopne
out
in
loopne
adc
sub
ja
aad
out
pop
mov
jmp
mov
xor
les
loope
aad
or
cmpsl
int
daa
cmc
popf
call
es
jnp
in
add
push
mov
icebp
out
xor
adcl
inc
in
cmpsl
xchg
out
shlb
xchg
subl
pop
dec
test
jmp
add
not
dec
sbb
xor
inc
add
fsts
mov
nop
repnz
loope
mov
or
stc
sub
inc
mov
sbb
test
push
mov
sbb
xchg
fnclex
scas
loopne
call
push
xchg
paddq
inc
sub
xlat
sub
xor
loop
jp
dec
sarl
out
add
movsb
loop
or
test
imul
inc
mov
cs
iret
in
rolb
pop
jae
xchg
cmp
pop
cld
mov
lock
rep
frstor
inc
out
xchg
dec
jmp
cmpsb
lret
leave
xchg
xchg
loope,pn
out
in
fs
fxch
jecxz
shrb
push
dec
mov
dec
in
call
or
outsb
out
shlb
push
js
shll
and
fst
loop
xchg
and
cld
test
insb
sbb
lods
push
je
js
cwtl
jns
inc
fucomi
mov
push
or
xchg
movsb
add
xchg
sti
ffree
subb
test
test
in
loop
push
jae
int
es
jb,pt
jmp
and
loope
fistpl
mov
add
es
mov
xor
popa
rorb
jno
ficomps
push
fdiv
pop
dec
gs
or
data16
popa
sub
mov
inc
dec
mov
loop
pop
setle
loop
cmp
enter
ja
test
pop
or
or
push
sbb
mov
sub
and
ror
repz
fisubs
lcall
jne
aaa
loop
movsl
ror
mov
sub
mov
adc
or
xor
aad
in
lods
dec
loop
sbb
xor
loop
fisttpll
inc
icebp
push
fnstenv
test
loop
xchg
add
mov
in
out
xor
popf
loope
jb
fnstenv
mov
in
nop
mov
imul
loop
lods
shrb
fildll
inc
fnclex
cs
fidivl
adc
jno
clc
push
scas
fnsetpm(287
pop
ret
inc
or
push
std
jmp
and
scas
js
in
dec
mov
adc
inc
inc
and
mov
arpl
dec
jns
push
fstpt
add
lock
aad
leave
enter
repz
ret
sub
cmp
sub
inc
pop
mov
inc
bound
inc
cmpb
or
ljmp
vaddsubpd
dec
adc
cmp
sub
jns
sbb
das
shll
add
dec
jp
fldcw
fsubl
push
push
adc
iret
test
out
pop
pop
ret
push
aam
daa
adc
fldcw
fmul
loope
pop
mov
mov
xor
lret
sbb
or
jge
lahf
call
pop
inc
push
mov
mov
jns
xor
aad
inc
gs
add
jns
clc
lret
pop
pop
sub
sbb
call
popa
and
rcll
lods
xor
gs
and
add
out
mov
cmp
adc
pop
or
inc
adc
stos
cmp
or
or
clc
inc
std
dec
clc
and
sti
add
mov
jns
inc
outsb
ja
cmc
ja
xlat
lahf
mov
scas
iret
test
hlt
inc
push
out
xchg
push
imul
pop
xchg
mov
mov
inc
jmp
jb
pop
cmp
xchg
and
gs
test
xchg
icebp
push
or
fwait
xchg
pop
and
cmpsb
xor
or
lock
and
gs
or
andl
or
add
mov
sub
mov
push
jns
cmp
sub
ret
and
adc
push
aad
jne
jmp
out
push
ret
dec
dec
inc
ror
outsl
sub
gs
jns
leave
add
xchg
add
popa
arpl
enter
imul
ss
in
cmp
ret
sbb
jns
add
int
clc
jp
and
mov
push
cmp
cmp
or
fucomp
sbb
lock
or
mov
dec
inc
lret
daa
ret
and
daa
xor
ds
push
iret
or
pop
pushf
gs
jns
xorb
test
gs
xchg
mov
call
xchg
ficoms
or
or
push
aas
lods
jle
push
jmp
fstl
push
or
add
xor
rorb
cmp
imul
ret
push
add
inc
clc
mov
addr16
test
ret
dec
or
std
xchg
pop
xchg
fs
test
clc
int
lock
jmp
and
jns
pusha
sti
iret
rcrb
dec
aam
out
xchg
dec
adc
sbb
xchg
cmp
pop
add
iret
and
in
and
inc
loop
adc
ret
inc
push
inc
jmp
fisubl
pusha
sbb
pop
mov
xchg
pop
jl
cmp
enter
fdivr
not
push
cmp
push
shl
setp
push
not
mov
shl
ror
jmp
cmpsl
les
ja
je
popf
adc
inc
fcomip
sbbb
mov
or
pop
fisubl
cmp
push
add
dec
sub
call
popf
lcall
pop
mov
inc
pop
cmpsb
and
push
dec
dec
icebp
mov
jbe
int3
popf
jmp
xchg
pop
nop
ja
jnp
nop
xchg
dec
je
mov
xor
ljmp
aam
in
ja
xchg
jg
cs
test
dec
pop
push
in
nop
ret
jo
dec
or
fsub
jecxz
pop
lret
push
cmp
jb
sbb
cmp
outsl
mov
sbb
fidivl
push
inc
add
xchg
addl
adc
add
lcall
in
cmc
xchg
push
test
popf
adc
xchg
push
stos
pusha
imulb
lods
rcrl
in
mov
cmp
sub
std
cmc
adc
inc
ror
inc
jmp
jle
aas
sbb
lret
ficompl
push
adc
pop
cmp
mov
std
pop
js
and
jno
stos
mov
and
mov
mov
jbe
fistpl
jmp
xchg
je
bound
shlb
pop
fs
sub
test
push
jae
sub
fisubs
jnp
jbe
mov
sahf
fisttpl
pop
into
inc
cmpsl
lea
sub
mov
xchg
pop
pop
xchg
sub
test
fiaddl
pop
mov
mov
cwtl
push
int
cltd
push
inc
push
lods
inc
popa
inc
aaa
jo
imul
mov
xchg
pushf
call
mov
movl
call
lcall
negb
add
ret
stc
int3
xchg
call
into
push
and
jb
and
jl
int
xchg
imul
mov
dec
jne
movsb
add
mov
cmp
add
dec
outsl
popa
fs
imul
add
sub
call
pusha
lea
ja
dec
sbb
add
sar
stc
mov
bt
stc
clc
test
cmp
pushf
lea
jb
pusha
push
cmp
call
add
inc
gs
outsl
fs
gs
imul
add
fs
js
push
mov
jmp
inc
push
jmp
push
stc
xor
lea
test
call
call
lahf
lea
push
call
imul
gs
xor
cs
insb
add
mov
jecxz
sldt
clc
stc
pushl
add
movb
pusha
movb
lea
jmp
pusha
push
movl
push
pushl
pushf
lea
jmp
mov
lea
ja
pushf
not
setb
sub
adc
lea
add
rcl
lea
rcl
cmp
mov
not
shr
mov
jmp
pushl
popl
pushf
cmp
movb
jmp
clc
stc
call
pusha
pusha
movl
push
mov
pushf
movl
mov
lea
jmp
pop
dec
rorb
mov
lahf
fadd
mov
lods
add
sub
xlat
mov
sbb
icebp
dec
pop
cltd
jno
fstps
repz
in
cmp
adc
push
pop
cltd
jno
int
mov
pusha
std
pop
jne
add
push
mov
retw
out
test
pop
jecxz
ret
ficoml
push
fisubl
flds
loopne
pop
out
sub
lcall
movsl
push
ss
xchg
popa
xor
test
push
fsubrs
adc
fisubs
mov
add
push
cmpsl
fadd
in
sbb
in
pusha
sbb
frstor
repz
sti
movsl
ja
inc
out
lret
add
out
mov
xlat
cli
stc
movsl
lret
or
outsb
xchg
jne
sbb
ds
inc
inc
clc
add
cmpsl
addr16
movsb
mov
imull
jmp
mov
testb
pop
es
sub
test
dec
mov
subb
ja
xor
xchg
iret
pop
sbb
in
mov
jle
jmp
hlt
insb
lock
mov
pop
jecxz
mov
jmp
and
fcmove
push
imul
test
dec
outsb
xchg
or
add
mov
cmp
dec
xchg
add
jbe
push
mov
ljmp
es
xchg
dec
test
clc
dec
jbe
ret
sub
push
faddl
in
scas
mov
aas
sbb
sub
adc
sbb
jno
push
es
subb
inc
mov
mov
pushl
pushl
call
jp
jle
ja
mov
aad
pop
sbb
push
adc
mov
stos
mov
lcall
jmp
mov
pusha
pusha
out
popa
xor
and
add
vandnps
pop
cmp
add
insl
inc
inc
sbb
stc
js
test
mov
stos
and
aam
sub
xchg
lahf
mov
lea
inc
int
add
mov
gs
repz
inc
enter
cmpsl
jae
ret
or
lods
dec
mov
loop
ja
hlt
lret
jmp
jecxz
push
inc
cmpsl
mov
jmp
pop
xor
sbb
ja
jecxz
xchg
imul
clc
fisttps
clc
inc
or
xchg
mov
jb
push
mov
es
pop
int
sbb
adc
mov
std
mov
inc
daa
or
xchg
dec
and
inc
cmp
jg
stos
jl
pop
cmp
inc
xchg
or
mov
sub
inc
mov
mov
lock
ss
xchg
or
push
pop
jne
je
repnz
inc
inc
psrlw
call
pop
or
imul
xchg
je
addr16
mov
fwait
ret
loop
les
out
adc
scas
insl
sub
jge
sub
mov
adcb
ret
ret
pop
addr16
push
dec
daa
ret
ret
mov
daa
mov
ret
mov
rcrb
ret
push
jo
cmpb
inc
lcall
jne
neg
mov
stc
pushf
test
add
test
pusha
movzwl
btc
pushf
pop
mov
test
push
cmp
stc
add
test
mov
pushf
test
pushl
lea
je
pushf
stc
add
jmp
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
lea
lods
scas
je
ret
cmp
rcl
push
ret
clc
sub
scas
movsb
xchg
and
jmp
into
mov
lcall
fidivrl
iret
mov
mov
inc
je
jo
shrl
push
xchg
repz
ret
add
lea
rorb
push
movl
pushf
mov
pushf
mov
pushf
pushf
pushl
ret
popf
cpuid
nop
push
pusha
pushf
movl
call
add
call
test
repnz
jmp
mov
call
pusha
push
jmp
mov
mov
repz
xlat
scas
std
and
int
nop
jb
lahf
lods
push
jecxz
add
jb
sub
mov
mov
dec
push
and
test
inc
aam
mov
nop
ficoms
movsb
dec
out
jae
cs
stc
or
scas
push
inc
push
lds
shr
imul
arpl
mov
test
inc
and
inc
fcoms
movw
pushl
popl
pushf
pushf
movb
pushf
pushl
ret
inc
out
mov
jns
ret
mov
std
test
ret
jl
and
or
xchg
out
dec
test
push
into
and
aaa
jmp
test
popa
jnp
mov
jb
xor
test
mulb
add
fbld
pop
scas
test
and
ficompl
push
xlat
sbb
scas
adc
mov
xor
inc
lock
fsin
or
sub
fstpt
xor
jmp
adcb
jge
ss
xchg
je
pop
mov
arpl
ljmp
stos
and
mov
sub
rcrb
jmp
and
dec
lock
add
fwait
pop
mov
adc
xchg
popf
pop
lret
dec
mov
dec
inc
fcmovu
add
jecxz
jle
pop
lret
loopne
movsb
cmp
ror
add
andb
or
movl
movb
jmp
mov
sar
setnp
sub
lea
pushf
pushl
pusha
lods
shl
cmc
mov
shl
neg
or
inc
add
rol
sets
call
btc
mov
push
cmpb
jmp
lea
jae
btc
mov
cmp
shl
add
mov
jmp
push
rcrb
ja
bound
fwait
jp
xchg
sbb
lds
rcrl
sahf
and
sub
repnz
je
or
push
xor
lret
add
ja
out
sbb
inc
mov
inc
jp
push
cmp
fists
lret
test
inc
popf
adc
test
dec
mov
loop
inc
sub
mov
ja
push
and
je
imul
sub
and
mov
test
rcrl
cmp
cmp
outsb
shl
cltd
test
div
fsubrp
ja
jmp
pusha
out
mov
in
arpl
stos
xchg
out
jmp
fisubs
lea
gs
sbb
insb
xor
repnz
shrb
lea
sbb
bound
and
dec
cmp
arpl
sbb
pop
int3
inc
mov
sub
cmp
mov
call
repz
lea
xchg
idiv
test
inc
stos
out
or
inc
or
inc
iret
shll
pop
adc
and
cmc
mov
jmp
mov
or
mov
add
addr16
or
mov
cwtl
inc
mov
mov
insl
cmpsb
inc
and
jle
push
adc
sti
imul
cmp
insb
jns
add
mov
xchg
push
cmp
enter
push
adc
bt
sbb
push
shld
mov
jmp
cmp
pushf
stc
sub
push
repnz
call
lea
mov
call
jnp
push
xchg
mov
dec
jae
mov
fbstp
dec
mov
cli
bndldx
and
mov
fidivl
or
sbbb
sbb
push
cltd
fisubl
push
daa
xchg
jp
lods
and
int
stc
or
xchg
mov
popl
decl
clc
push
sub
cmp
lea
bt
cmp
pushl
sub
call
cli
adc
sbb
cmp
jo
out
mov
cld
imul
and
mov
mov
rcrl
inc
fsubrs
pop
pop
adc
mov
ret
push
mov
int3
int
leave
mov
lods
xor
stc
push
dec
and
ret
or
fcoml
aas
xchg
or
dec
test
outsl
push
sub
mov
ret
insl
mov
and
pop
imul
and
push
inc
mov
inc
pushl
pushf
lea
jmp
jmp
bt
cmpb
mov
lea
jne
shld
btc
movsbl
sub
shl
btr
mov
not
add
rol
add
cmp
mov
test
pusha
cmp
stc
test
pusha
pushf
pushl
call
mov
pushl
popl
lea
movzbl
lahf
lahf
mov
cwtl
cwtl
movl
lahf
lea
movb
mov
movw
pushl
movl
jmp
not
pushf
inc
mov
push
call
mov
movl
jmp
push
pushf
pusha
lea
jae
test
sub
je
pushf
pusha
lea
call
pusha
pushf
pushl
lea
jbe
jae
dec
mov
call
movl
pusha
movw
push
mov
pushf
push
pushl
ret
lea
ja
shl
shl
cmp
sub
inc
pusha
setle
cmc
sub
add
shl
add
mov
add
mov
bt
repnz
pushf
pusha
lea
jne
movsbw
mov
cwtl
movb
pusha
movzbw
lea
mov
setae
pusha
pushl
lea
lea
pusha
movb
jmp
push
add
lods
adc
aaa
pop
mov
leave
in
lock
cmpsb
push
or
adc
lock
ds
dec
sub
outsl
negl
orb
jae
ficompl
or
inc
ret
punpckhwd
daa
and
imul
mov
fstpl
inc
inc
add
int
jnp
pop
sub
ret
das
pop
inc
in
in
jne
cmp
pushf
xchg
mov
push
jge
nop
pusha
jmp
arpl
movl
push
call
pushf
inc
call
jmp
mov
xorb
lahf
adc
pop
inc
xchg
icebp
pop
mov
xor
jns
dec
jecxz
mov
lcall
mov
repz
out
or
xlat
dec
outsl
shl
lahf
rorb
push
push
stc
inc
lahf
jp
cld
push
push
imul
mov
fdivr
xchg
insb
in
clc
popf
test
insl
adc
xchg
xor
or
lods
lea
mov
add
sbb
outsb
pop
adc
insb
xor
test
aad
mov
sbb
jo
leave
and
lea
call
nop
clc
add
sub
lret
add
test
mov
xor
dec
xchg
push
jae
sbb
and
adc
mov
pop
sarl
data16
mov
dec
aas
or
cmp
mov
aad
mov
xchg
inc
shrl
xchg
lods
addr16
push
loopne
icebp
push
inc
pusha
jle
int3
sub
out
mov
hlt
push
insl
or
pop
adcb
test
lret
int3
xchg
mov
lcall
push
xchg
inc
or
jae
in
jo
inc
xor
push
inc
pushf
sbb
shll
xorb
call
loopne
push
push
pop
in
mov
pop
add
xchg
jp
or
dec
xchg
aam
faddl
test
ja
clc
add
ret
cltd
gs
imul
loopne
ja
push
push
das
aaa
inc
mov
inc
inc
push
cmp
push
xchg
push
andb
and
pop
mov
sub
mov
call
jg
call
cli
and
push
outsb
xchg
scas
pop
cmp
inc
lods
ja
movsb
push
lods
sahf
aaa
call
test
adc
dec
inc
adc
cli
test
push
test
mov
aaa
loope
and
pop
pop
mov
popf
pop
lods
lret
sahf
popf
add
sbb
popf
jo,pt
mov
push
in
push
sub
or
and
shll
push
lret
jae
sbb
loop
es
popa
xchg
std
xchg
push
add
sbb
push
fnstenv
aaa
fsub
add
rcrl
mov
add
ja
mov
or
sbb
cld
lods
jne
out
ja
std
and
vmovaps
inc
adc
push
popa
fld
adc
mov
cmpl
das
jp
xchg
pop
js
mov
inc
dec
js
fs
add
fildl
lods
sbb
and
fdivl
add
pop
enter
jg
fs
and
das
mov
mov
jbe
call
aaa
stos
mov
test
movsb
pcmpeqb
sahf
inc
enter
ja
setno
adc
push
repz
insl
cwtl
jl
stos
jne
mov
mov
dec
fs
dec
sbb
mov
sahf
sti
mov
or
and
pop
and
pop
lahf
mov
lock
orb
in
testl
movsl
mov
ret
pop
cmp
sbb
xchg
pop
mov
dec
ficoms
push
adc
cvtps2pd
arpl
stos
mov
jmp
pushf
push
stos
pusha
pushf
pushf
pushf
lea
jmp
movl
pushf
jmp
adc
btr
xor
movsbw
pop
movzbw
pop
xchg
movzbw
movsbw
pop
push
jmp
bt
stc
cmp
push
sub
jmp
movb
add
mov
test
test
neg
cmc
cmc
stc
bt
add
jmp
xchg
jle
iret
jmp
adc
inc
push
xchg
lcall
ja
mov
imull
je
add
mov
insb
pop
mov
fnstcw
pop
inc
push
leave
les
sbb
pushf
cmc
lret
mov
lea
cmp
jecxz
stos
ljmp
jo
sub
xchg
flds
and
out
dec
fcomps
push
push
call
cltd
nop
jmp
and
xor
cmp
mov
add
lcall
pop
cmc
call
xlat
jge
pop
inc
aad
shl
psrlw
adcl
call
das
mov
dec
mov
les
andl
jno
push
mov
dec
jg
shl
movsl
sub
jl
scas
and
push
lret
mov
mov
mov
scas
push
push
or
data16
and
bound
mov
cmpsl
or
inc
cltd
add
je
enter
add
adc
mov
cmpb
dec
jge
jl
fidivrl
les
jmp
inc
fidivrl
insl
mov
inc
mov
jl
ficompl
negb
ret
cmp
xchg
pop
daa
fmulp
pop
pop
inc
mov
shll
jnp
jecxz
leave
pop
fwait
jmp
sbb
cmp
jno
jp
out
pop
out
adc
mov
xchg
xchg
jmp
add
sbb
lds
pop
or
rcr
lea
movsb
and
cmpl
je
shll
cmp
jecxz
xchg
testb
adc
shr
out
mov
ss
cltd
lods
mov
das
inc
pushf
mov
movl
movl
pusha
movl
mov
push
pushl
lea
jmp
test
call
pop
jne
jl
fidivrl
sbbb
icebp
adc
adc
stc
js
in
and
xor
cmpsb
mov
in
loope
popf
sbb
push
sub
mov
inc
sbb
mov
dec
imul
fdivs
lret
lods
jo
fdivrp
add
cmp
ja
sbb
arpl
es
stos
add
out
push
rolb
int
sub
xchg
sbb
cmp
lcall
ret
adc
xor
lcall
push
aaa
arpl
insb
ljmp
or
out
push
repz
mov
ja
loopne
cmp
cmp
and
imul
lods
inc
ficoms
idivb
xchg
jne
fcmovnu
mov
push
push
cmp
in
mov
mov
into
add
fldenv
loope
push
aaa
dec
mov
cmp
pop
iret
movl
mov
rcl
cld
inc
pop
hlt
inc
mov
enter
mov
in
xor
aam
dec
fs
xor
nop
mov
push
inc
bt
cmp
shr
jmp
movb
pusha
jmp
inc
pusha
pushl
push
mov
lea
jmp
pushf
lea
je
call
push
lea
jne
lea
seta
movsbl
movb
pushf
cwtl
pop
push
movsbw
cwtl
movzbw
lea
pushf
movl
pusha
call
push
scas
fnstsw
and
hlt
sbb
test
dec
xchg
lcall
ja
mov
aad
sbb
insb
ret
sbb
mov
mov
hlt
cmp
xor
fstps
icebp
pop
aaa
scas
movsl
mov
ss
mov
xchg
fidivrl
xor
jae
pushf
adc
xchg
imul
jbe
adc
notl
sub
mov
adc
bound
jmp
xchg
jp
jns
fcmove
mov
sbb
sbb
rcrl
dec
notl
outsb
jp
std
mov
test
add
test
fmull
lahf
adc
push
mov
mov
add
shlb
push
or
sub
jb
push
mov
mov
push
int3
stos
jae
xchg
stos
add
mov
cmp
jnp
punpckhwd
push
idivb
mov
lds
pop
stc
call
pop
sub
test
adc
lcall
cmc
js
jb
jns
cmp
gs
std
jge
pop
inc
pop
pop
shl
pop
in
or
xor
sbb
cmpsl
push
push
jmp
decb
xor
aad
push
mov
and
xchg
sbb
cmpxchg
out
icebp
pop
jns
or
ljmp
jp
clc
mov
daa
js
jle
jae
mov
sub
xchg
scas
cmp
dec
aad
and
movsl
xor
mov
jle
or
popf
lea
xchg
ret
cmp
cld
pop
jle
mov
dec
push
out
call
cmp
aaa
out
dec
push
push
dec
out
sub
lret
add
jecxz
mov
push
mov
fbstp
loope
mov
xor
out
sbb
arpl
mov
aaa
repz
pop
sbb
stos
hlt
repz
imul
test
push
call
cmc
mov
js
mov
fists
popa
push
mov
jg
xchg
mov
sub
sbb
daa
cmp
add
in
cmp
pop
dec
fisubrl
add
test
jmp
dec
jl
pop
push
sub
lahf
stos
adc
dec
js
adc
fs
jae
bt
push
test
cmp
pusha
pushf
call
add
call
mov
push
mov
lea
movl
jmp
jmp
mov
mov
pushl
pusha
call
mov
pushl
mov
inc
rcr
bsf
call
movw
push
sub
mov
movw
pusha
call
pushf
call
cmp
clc
pusha
add
pushl
pushf
push
lea
jmp
not
mov
bswap
and
bswap
mov
cmp
pusha
test
not
bt
mov
call
shr
jo
rol
shl
mov
shr
mov
push
mov
pushl
add
clc
pusha
stc
push
shrd
movb
jmp
test
or
das
ror
mov
rol
mov
stc
add
call
not
xor
bswap
rol
call
push
pushf
mov
pusha
jmp
add
mov
pusha
push
push
add
push
mov
push
lea
jmp
jmp
mov
push
pushf
pushf
popl
call
xchg
pop
pop
movsbw
xchg
call
sub
test
call
clc
pushf
neg
cmp
jmp
add
call
inc
mov
inc
push
mov
lea
lea
inc
lea
mov
pop
pushl
popl
inc
movsbw
lea
movl
pop
jmp
mov
pushf
repz
popl
movzbw
mov
pushl
call
pop
lea
and
xor
not
clc
btr
rol
push
mov
lea
mov
mov
lea
jmp
inc
stc
pusha
mov
pushf
clc
pushl
pushl
add
mov
push
lea
jmp
call
clc
cmc
shl
jmp
pusha
shl
mov
push
clc
sub
bt
cmc
test
stc
shr
mov
lea
jg
pusha
push
mov
pushl
pushf
popl
pusha
push
pushl
popl
push
movw
mov
mov
lea
jmp
sete
bsf
mov
and
ror
rcr
add
setno
jmp
mov
pushl
movb
lea
jg
pusha
mov
mov
pusha
pushf
push
lea
jmp
shl
inc
mov
stc
pushf
push
clc
add
pusha
mov
pushf
lea
jmp
movb
pusha
pushf
mov
pusha
mov
call
cmp
rol
mov
pushf
call
movzbw
aam
lea
mov
shr
bts
rol
and
test
sub
call
xchg
bswap
movsbw
pushf
pop
xchg
push
jmp
pusha
dec
pop
mov
pop
xchg
inc
mov
bswap
bswap
xchg
mov
pop
pushl
popl
bswap
jmp
pusha
jmp
mov
pushl
movb
mov
pushf
lea
jmp
lea
jbe
cld
pushf
push
pusha
jmp
movl
add
call
mov
lea
mov
mov
bswap
pushl
popl
push
push
movl
xchg
mov
pushl
not
inc
xor
shr
neg
xor
bts
rcr
clc
pushf
rol
pushl
call
cmc
pushf
cmp
not
mov
btc
movsbw
add
btr
mov
call
stc
not
mov
call
mov
add
clc
cmp
cmc
xor
bt
cmc
bt
ror
cmp
xor
mov
lea
bt
mov
cmc
jmp
mov
movb
lea
jmp
pushf
dec
pushf
call
pushl
xchg
movzbw
call
push
add
pusha
push
pushf
popl
pushf
pushl
pushf
jmp
not
mov
pushf
pushf
mov
pushf
pusha
pushf
lea
jmp
call
jmp
call
pop
mov
movzbl
dec
inc
pushl
popl
inc
movl
dec
dec
bswap
mov
pop
movzbw
inc
inc
movzbl
clc
xor
movzbw
pop
rol
call
jmp
mov
pushl
test
test
sub
push
pushl
call
shld
pusha
pushf
mov
pushf
pushf
popl
pushf
pushl
popl
push
pushf
lea
jmp
shr
adc
bswap
jmp
mov
pusha
push
lea
repz
popl
not
mov
movsbw
mov
movsbl
push
lea
pop
mov
pushf
not
mov
dec
pushl
popl
bswap
lea
not
movl
call
and
ror
or
mov
jmp
lea
jne
or
rcr
bsr
mov
push
call
movl
call
pusha
inc
dec
mov
cmp
xor
pushf
inc
push
cmc
ror
jmp
jmp
mov
pushf
pusha
cmp
sub
clc
add
mov
call
rcl
neg
call
clc
xor
movzbw
not
mov
push
movsbw
sbb
adc
add
clc
or
sub
add
sete
pushf
btr
shl
mov
test
cmc
shl
cmp
shr
bt
stc
jmp
pusha
jmp
btc
bt
mov
test
jns
setae
clc
xor
lea
pushf
inc
lea
ror
ror
neg
pushf
neg
rol
xor
shrd
clc
lea
btc
xor
test
add
movzbl
movl
mov
stc
jmp
pushl
push
mov
push
lea
jmp
pusha
jmp
mov
pushf
jmp
cmp
call
call
mov
inc
movb
pushf
lea
jmp
lea
jmp
jmp
cmc
neg
jmp
rol
shl
mov
test
call
lea
pushf
mov
lea
jmp
lea
mov
bt
shr
rcl
mov
push
test
cmp
mov
add
pusha
pushf
pushl
mov
mov
pushf
movw
lea
jmp
lea
jne
pusha
pusha
mov
pushf
lea
jmp
mov
pop
xchg
xchg
mov
lea
bswap
pusha
xchg
repz
popl
not
mov
call
movb
jmp
mov
push
jmp
xchg
cmc
mov
stc
pushf
push
sub
lea
jge
jne
pushf
xor
pushl
jmp
movb
mov
mov
push
push
mov
push
pushl
ret
test
sub
push
mov
push
push
lea
jmp
pop
pop
xchg
mov
movsbw
pop
mov
not
push
xchg
bswap
repz
popl
dec
lea
js
inc
push
lea
not
pushf
movzbw
mov
movzbl
not
movzbw
dec
push
lea
xchg
push
pushl
popl
mov
pushf
movl
bswap
mov
movzbw
movsbl
lea
push
inc
shl
ror
pushf
dec
xor
movsbw
movzbw
rol
lea
pop
movl
movzbw
lea
movb
pusha
pusha
lea
jmp
jmp
add
stc
pushl
add
test
cmp
bt
test
sub
mov
mov
pushf
mov
lea
jmp
call
pushf
xor
bt
cmp
sub
pushf
call
pusha
mov
movzbl
jmp
mov
push
pusha
lea
jmp
neg
inc
rcr
xor
mov
cmp
add
push
lea
jmp
mov
pop
pop
call
add
jmp
mov
mov
pop
call
mov
pop
movzbw
pushl
popl
inc
movl
inc
pushf
inc
lea
mov
call
call
test
inc
bts
xor
neg
pushf
not
pushl
not
pushf
pusha
movl
dec
call
bswap
mov
pusha
mov
pushf
pushf
pushl
ret
pushf
mov
push
call
pushl
popl
pusha
push
pushl
lea
jmp
rcr
jmp
add
add
inc
pushf
jmp
mov
pushf
lahf
mov
lea
mov
push
push
mov
push
lea
cpuid
jmp
cwtl
mov
pushf
lea
ja
mov
call
call
push
pushf
mov
pusha
lea
jmp
sub
call
mov
not
mov
push
pushf
repz
popl
pop
lea
movzbw
mov
movzbw
mov
pop
mov
bswap
movzbl
pushl
popl
pusha
movl
dec
lea
mov
movzbw
inc
jmp
push
pushf
jmp
ror
rol
pusha
pushl
pushf
pop
lea
push
movb
mov
push
lea
jmp
not
mov
push
call
clc
add
mov
stc
jmp
repz
popl
pushl
mov
bswap
movsbw
setg
mov
dec
push
movzbw
bswap
mov
mov
movsbw
pushl
lea
pushf
jmp
movsbw
mov
jmp
mov
lea
mov
lea
jmp
push
mov
pushf
lea
jmp
jmp
mov
mov
jmp
push
jmp
cmp
push
pushl
popl
bt
cmp
clc
add
jmp
push
pusha
pusha
call
call
bt
call
pushf
call
shld
not
mov
test
cmp
pushf
add
pusha
push
lea
jmp
cmc
xchg
pushf
movw
mov
test
cmp
sub
jmp
jmp
test
clc
sub
cmp
shr
jmp
jmp
bswap
xchg
not
mov
lea
call
rol
bswap
movsbw
pushl
lea
mov
pushf
push
push
lea
jmp
push
setp
bswap
mov
rcr
cmp
xor
adc
inc
dec
add
clc
xor
ror
ror
rol
ror
cmp
bsr
xor
add
shr
mov
push
stc
bt
add
cmp
add
movb
movw
mov
pushf
lea
jmp
setbe
jmp
mov
test
lea
clc
mov
cmp
pusha
bt
call
pushf
mov
mov
lea
jmp
inc
bts
bt
bts
cmc
xor
rcr
btr
rol
pushf
lea
pushf
movw
lea
jmp
jmp
pushf
sub
test
pushl
sub
push
call
movb
add
mov
mov
movw
lea
jmp
shl
bswap
movzbw
notl
aad
bswap
sub
bswap
mov
clc
bt
push
sub
stc
cmc
and
pusha
pushl
movb
pushf
popl
movb
jmp
pushl
popl
mov
pushf
movl
lea
jmp
mov
lea
mov
mov
lea
mov
pushf
not
mov
pop
xchg
lea
mov
mov
pusha
repz
popl
movsbl
jmp
mov
bt
call
mov
mov
pushl
mov
pushl
ret
jmp
push
push
movb
mov
jmp
mov
jmp
sub
call
add
jmp
jmp
movb
push
xchg
jmp
call
pushl
pushf
pushl
popl
movb
pushf
pushl
pushl
lea
jmp
call
jmp
push
jmp
pushl
popl
pusha
mov
lea
jmp
call
not
pushl
call
bt
cmc
mov
pusha
not
mov
call
lea
jne
jmp
pushf
popl
jmp
push
call
pusha
xchg
movw
pushl
movb
movl
pushf
call
stc
sub
pushf
mov
call
pushf
popl
pushf
jmp
pusha
mov
inc
pushf
mov
cmc
add
jmp
mov
pusha
pushl
call
mov
test
shl
pushf
pushf
pushf
mov
mov
call
pushf
mov
call
pushf
test
not
cmc
mov
test
movb
sub
clc
test
jmp
shl
mov
clc
rcl
sub
mov
push
add
pushf
mov
pushf
pusha
lea
jmp
lea
lea
call
not
not
mov
bswap
push
mov
jmp
dec
rcl
call
call
jmp
rep
shl
movzbw
btc
mov
add
xor
not
cmc
mov
test
pushf
pushl
popf
push
lea
jmp
repz
popl
inc
movsbw
inc
mov
pusha
mov
not
movzbw
mov
pop
mov
call
pusha
pop
call
pusha
pushf
xchg
not
bswap
movsbw
mov
jmp
stc
and
test
cmp
pushf
mov
mov
lea
jne
pushf
cmp
xorb
pusha
mov
mov
pushf
lea
jmp
inc
movl
xchg
mov
mov
not
bswap
dec
inc
shl
xor
movsbl
lea
jmp
cld
call
bswap
btr
rol
bswap
lea
pushl
pushf
lea
jmp
mov
movb
mov
movb
mov
movl
lea
jmp
mov
movw
jmp
movb
pusha
lea
jne
jmp
clc
cmc
not
bt
stc
cmc
sub
stc
clc
bt
test
not
test
cmp
sub
test
call
cmp
sub
call
mov
push
mov
push
lea
jmp
movzbw
jmp
mov
movzbw
call
mov
not
mov
bswap
repz
popl
movzbw
inc
pushf
mov
mov
pop
pushl
mov
pusha
mov
movsbw
inc
lea
jmp
pushf
mov
bt
clc
add
pusha
lea
jmp
inc
jmp
jmp
cmp
pusha
add
pushf
call
call
sub
clc
clc
cwtl
clc
jmp
push
jmp
xchg
push
repz
popl
jmp
mov
pushl
pushf
popl
movl
pushl
popl
pusha
push
push
movl
lea
jmp
pusha
movzbl
call
daa
stc
aad
rcl
mov
bts
mov
call
xchg
call
call
jmp
mov
jmp
xchg
pushf
movzbl
lea
mov
std
pushf
call
pushf
popl
jmp
pushl
pushf
rep
sub
rcr
mov
sub
not
not
mov
cmp
pushl
popf
pushf
pushl
lea
jmp
pushf
pushf
pushf
popl
push
call
cwtl
stc
clc
pushf
movb
sub
pushf
call
mov
mov
lea
jmp
movsbw
inc
shld
bsf
xor
rol
call
mov
call
pusha
pushf
popl
mov
pushf
mov
pushl
popl
movb
pushf
pushf
mov
lea
jmp
mov
cmpl
pushl
pusha
mov
pushl
pushf
jmp
call
pushf
pushl
mov
pushf
call
lea
je
pushf
call
xchg
bswap
mov
call
bt
jmp
bsr
aam
dec
call
call
lea
lea
jp
dec
cmc
mov
movsbw
push
and
shl
bt
pusha
mov
cmp
bt
sub
pushf
call
pushf
mov
mov
pushf
pushf
mov
lea
jmp
push
mov
movw
pushf
pusha
pushf
lea
jmp
mov
push
pushf
popl
pushl
push
pushl
popl
mov
movw
movb
movb
lea
jmp
pushf
pushf
xor
call
mov
mov
lea
jge
mov
call
call
call
pushf
popl
jmp
bswap
mov
mov
pushf
dec
inc
mov
movsbw
pushf
dec
not
pushl
popl
call
movsb
add
dec
loope
das
dec
jnp
das
dec
jb
das
dec
movsb
add
dec
jb
das
dec
jnp
das
dec
add
cs
cmp
cs
xchg
repz
jnp
das
dec
jae
das
dec
sti
ljmp
dec
pop
add
dec
jnp
das
dec
loope
das
dec
xchg
push
das
dec
push
imulb
dec
jnp
das
dec
inc
in
cs
outsl
std
cs
jge
das
dec
jnp
das
dec
push
std
cs
cs
scas
out
cs
jnp
das
dec
adc
cs
fcomi
cs
out
das
dec
jnp
das
dec
mov
ljmp
dec
std
cmc
cs
jnp
das
dec
js
cs
js
cs
daa
repz
jnp
das
dec
icebp
cs
push
add
dec
testl
das
dec
in
or
dec
data16
dec
mov
das
dec
jnp
das
dec
sub
call
cs
jnp
das
dec
inc
in
cs
loope
das
dec
movsb
add
dec
jnp
das
dec
int
das
dec
push
imulb
dec
icebp
cs
jnp
das
dec
std
in
dec
cs
push
jmp
dec
jnp
das
dec
outsb
or
dec
outsb
or
dec
icebp
cs
scas
out
cs
imul
cs
test
dec
push
add
dec
sti
ljmp
dec
std
in
dec
adc
cs
gs
cs
ljmp
dec
jb
das
dec
std
cmc
cs
fcomi
cs
mov
cs
jb
das
dec
ljmp
dec
mov
cs
mov
cs
gs
das
dec
push
add
dec
std
in
dec
inc
in
cs
std
in
dec
daa
repz
push
stc
cs
jno
cs
gs
cs
cmp
cs
outsl
std
cs
jno
cs
adc
cs
cmp
cs
data16
dec
movsl
jmp
das
dec
push
std
cs
push
std
cs
std
in
dec
cmp
cs
std
in
dec
push
add
dec
mov
cs
cli
jecxz
dec
data16
dec
sahf
out
dec
gs
cs
call
das
dec
inc
out
dec
call
cs
mov
das
dec
test
dec
js
cs
cmp
cs
out
ljmp
fcomi
cs
in
or
dec
outsb
or
dec
incb
das
dec
mov
in
cs
out
ljmp
icebp
cs
ret
in
cs
add
cs
jb
das
dec
cmp
cs
ret
in
cs
out
das
dec
mov
jmp
cs
outsl
std
cs
loope
das
dec
mov
das
dec
ret
in
cs
add
cs
push
jmp
dec
icebp
cs
ret
in
cs
sti
ljmp
dec
gs
cs
ret
in
cs
ljmp
dec
std
cmc
cs
ret
in
cs
push
add
dec
cmp
cs
gs
cs
ret
in
cs
js
das
dec
cmc
repz
mov
cs
ret
in
cs
data16
cs
scas
out
cs
ljmp
dec
push
stc
cs
icebp
cs
pop
add
dec
ret
in
cs
cmp
cs
lds
das
dec
xchg
push
das
dec
ret
in
cs
push
std
cs
cmp
cs
sub
in
cs
test
dec
and
repz
ret
in
cs
lds
das
dec
cmp
cs
sub
in
cs
jge
das
dec
mov
ljmp
xchg
repz
mov
das
dec
sti
ljmp
dec
inc
in
cs
cmp
cs
std
in
dec
and
std
cs
mov
lock
testl
cs
mov
clc
cs
loope
das
dec
out
das
dec
ljmp
dec
cli
jecxz
dec
xchg
push
das
dec
icebp
cs
inc
out
dec
data16
dec
mov
add
dec
cmp
cs
mov
or
dec
inc
out
dec
gs
cs
incb
das
dec
out
ljmp
xchg
push
das
dec
push
add
dec
call
cs
jge
das
dec
loope
das
dec
data16
cs
mov
out
dec
imul
cs
in
or
dec
mov
cs
cs
imul
cs
push
imulb
dec
out
das
dec
sahf
out
dec
loope
das
dec
add
cs
and
repz
incb
das
dec
cmp
cs
mov
cs
jno
cs
outsb
or
dec
cmp
cs
imul
cs
mov
call
cmc
mov
pusha
cmc
jmp
jmp
das
mov
call
sub
mov
bt
mov
jmp
jmp
cbtw
movw
jmp
pop
mov
mov
pushf
movzbw
call
stc
add
clc
push
bt
mov
shrd
pusha
jmp
lea
shld
mov
call
call
movw
mov
movzbw
inc
rcl
ror
xor
movzbw
movsbw
rol
pop
not
lea
pushl
push
pushl
lea
jmp
call
mov
push
pushf
lea
jmp
mov
stc
pushf
sub
jmp
xchg
call
cmc
call
lea
jp
bswap
pop
pushf
movb
pushl
ret
lea
jne
clc
xor
pushf
xchg
pusha
pusha
movl
movl
mov
pushl
mov
pushl
ret
pusha
mov
push
pusha
movb
mov
lea
jmp
pushf
push
mov
push
pushf
popl
jmp
pop
repz
popl
bswap
lea
mov
call
mov
pusha
pushl
movb
lea
jmp
push
pushl
lea
pusha
pushl
pushf
jmp
pushf
mov
mov
mov
pushf
pusha
pusha
push
mov
mov
bswap
push
xchg
xchg
movzbw
mov
call
test
xchg
mov
sbb
inc
rcl
clc
mov
cmc
stc
push
push
sub
call
push
pushf
pushf
mov
pushf
jmp
mov
call
lea
xchg
pusha
mov
mov
movsbw
movsbw
jmp
pushf
pushl
popl
pushl
lea
jmp
or
aad
pop
not
add
pop
cltd
popf
lea
mov
pop
movzbl
xchg
mov
pop
pushf
mov
pop
movzbw
pushf
pop
mov
not
jmp
pusha
movzbl
mov
pushf
lea
pushf
call
pusha
jmp
setbe
pusha
shl
call
movsbw
pusha
ror
bts
mov
shl
shld
pop
not
and
pop
lahf
aas
bt
pop
jmp
pushl
popl
push
mov
mov
lea
jmp
mov
pushf
movw
pushf
lea
jmp
call
call
jmp
mov
push
movw
pop
xchg
xchg
jmp
mov
pushl
pushl
mov
pushf
lea
jmp
mov
push
mov
pushf
popl
mov
mov
pushl
pushl
popl
pushf
movw
movb
push
lea
jmp
pushl
popf
pushl
pushl
lea
jmp
mov
pushf
mov
test
bt
stc
movl
or
pushf
lea
je
pushf
clc
sub
jmp
add
mov
jmp
xchg
push
movl
jmp
call
call
movsbw
mov
movzbw
lea
push
mov
movzbw
lea
lea
movzbw
mov
bswap
pushl
popl
inc
lea
movl
pushl
inc
mov
push
movsbw
inc
or
jmp
mov
pushl
mov
call
shl
ror
mov
clc
mov
mov
not
neg
inc
mov
cmp
bt
add
push
cmc
call
btc
mov
test
mov
cmc
bt
add
call
mov
push
mov
push
lea
jmp
sub
test
call
mov
not
lea
pushf
lea
inc
inc
rol
clc
xor
movzbw
bswap
stc
rol
bswap
movsbl
lea
push
push
pushf
lea
jmp
not
xchg
movsbw
mov
jmp
pushf
sete
mov
pusha
pushl
jmp
jmp
pushf
movl
mov
pusha
call
pusha
call
jmp
call
lea
mov
movw
movb
pushf
lea
jmp
jmp
pusha
mov
call
call
pushf
rol
clc
push
bt
xor
jmp
not
call
pushf
add
stc
bt
sub
push
movb
pusha
inc
cmc
not
call
lea
setle
bswap
xor
bts
bsr
movzbl
jmp
jmp
mov
inc
pushf
push
pushf
pushf
lea
jmp
mov
mov
pusha
push
mov
pushf
mov
lea
jmp
pusha
jmp
cmp
jmp
and
clc
neg
push
not
call
pusha
push
call
pop
mov
xchg
lea
call
jp
mov
bsr
and
xor
sar
add
bswap
cmp
call
pushf
mov
push
movw
pushf
push
lea
jmp
pushf
popl
movw
pushl
pushl
popl
pushf
lea
jmp
clc
mov
jmp
pusha
pusha
pushl
mov
movb
pushf
jmp
bswap
repz
popl
pop
pushf
not
jmp
cmp
cmc
cmp
add
pushf
push
mov
pushf
lea
jmp
push
bt
add
pushf
mov
pushf
mov
lea
jmp
pushf
pushf
lea
push
mov
pushl
lea
jmp
clc
clc
call
call
mov
mov
xchg
repz
popl
pop
pop
mov
xchg
pushf
mov
pushf
inc
movzbl
mov
mov
pop
movsbl
pushl
popl
pusha
not
movl
xchg
mov
mov
push
lea
dec
inc
lea
cmp
adc
xor
rol
pushl
push
cmc
rol
bswap
lea
push
pushf
lea
jmp
pusha
mov
pushf
movw
movl
lea
jmp
add
pusha
pushl
push
lea
jmp
pushl
popl
lea
inc
xchg
movl
movsbw
not
movzbl
jmp
rdtsc
mov
not
movw
push
mov
push
pushf
pushf
mov
divl
pushf
mov
call
or
stc
pusha
bt
xor
pusha
call
dec
inc
shl
bswap
xor
pushl
rol
pusha
movzbw
not
call
jmp
xor
cmp
cmp
call
mov
pushf
mov
push
call
pushf
movl
pushf
setb
not
mov
mov
movzbw
pop
inc
shl
inc
rol
inc
xor
pushf
pop
stc
rol
sub
inc
ror
lea
sub
bswap
neg
push
rcl
sub
sub
bt
sub
pusha
lea
lea
bsr
bts
mov
sub
movsbw
rcl
shr
add
adc
neg
mov
shl
xor
btc
bswap
clc
rcr
rol
inc
inc
mov
dec
bts
pushf
ror
pop
neg
xor
inc
setae
movzbl
mov
bswap
not
dec
mov
jmp
lea
xor
cwtl
rdtsc
call
mov
push
pushf
mov
pushl
lea
jmp
xchg
movzbw
call
push
jmp
mov
pushf
pushf
call
mov
movsbl
not
pushf
pushf
lea
mov
pushf
mov
pop
not
jmp
pusha
pusha
push
mov
jmp
xor
bts
ror
btc
clc
ror
shl
xor
pusha
mov
cmp
test
cmp
mov
add
call
jmp
call
push
pushf
mov
movb
call
push
shl
xor
stc
movsbw
rol
jmp
btc
movzbl
bt
movzbw
xor
call
pushf
jmp
pushf
not
mov
bswap
movzbl
pop
movsbw
inc
rol
xor
stc
rcl
rol
movl
lea
pusha
lea
jmp
lahf
aaa
mov
bsf
add
movsbw
mov
cmc
not
call
xor
movw
pushf
pushf
inc
push
push
inc
movb
cmc
cmc
ror
push
bt
mov
mov
neg
cmc
mov
pushf
call
pusha
not
pop
movl
inc
mov
movsbw
inc
bsf
adc
xor
bts
bts
push
bt
rol
call
xchg
call
dec
dec
pusha
push
and
adc
mov
cmp
test
pushf
sub
call
push
stc
xor
pushf
jmp
test
mov
pusha
jmp
pushf
mov
mov
movzbw
mov
movsbw
repz
popl
dec
mov
xchg
dec
lea
mov
lea
call
cmc
movw
add
pusha
pushf
pushf
mov
lea
jmp
mov
pushf
pushl
mov
pushf
lea
jmp
dec
movl
movzbw
mov
call
call
pushf
mov
xchg
pop
not
call
movl
lea
mov
movsbw
pushl
mov
bswap
lea
repz
popl
movsbw
bswap
movzbw
mov
inc
mov
pusha
mov
dec
pushf
inc
mov
pushl
popl
jmp
mov
pushf
mov
lea
jmp
sar
mov
jmp
xor
call
xchg
not
movsbw
mov
not
call
shr
push
mov
mov
jmp
push
call
lea
stc
cmp
movb
lea
ja
aas
mov
sete
movzbw
shl
lea
pushf
sbb
sub
mov
jmp
not
cmc
clc
test
stc
and
mov
call
push
jmp
ror
xor
push
inc
movzbw
bswap
bswap
ror
jmp
pusha
mov
call
pushf
movsbw
jmp
stc
not
mov
rcl
stc
sbb
mov
test
push
cmc
sub
push
movb
call
xchg
xchg
call
pushl
popl
push
lea
jmp
mov
movw
mov
pushl
ret
bswap
pushl
popl
pop
movl
movsbl
dec
mov
call
movw
pushl
popl
movb
lea
jmp
push
sub
jmp
jmp
mov
pusha
push
movb
xchg
call
movw
mov
movw
mov
lea
jmp
lea
movzbl
jmp
mov
stc
add
pushf
pushf
mov
lea
jmp
rcl
mov
stc
jmp
pushf
push
pusha
inc
stc
test
jmp
sub
movb
pusha
call
shrd
shl
jmp
push
call
xor
sbb
mov
pushf
add
pushf
call
lea
pushf
movw
lea
jmp
sub
call
movzbw
xchg
movsbl
movzbw
push
call
pusha
pushf
call
movb
decl
call
and
pushf
pusha
pushf
jmp
test
sub
pusha
mov
pusha
movb
push
lea
jmp
mov
cmc
add
pusha
mov
lea
jmp
pushl
popl
pushl
pushf
push
pushl
lea
jmp
push
mov
lea
jmp
movw
or
push
pusha
call
aam
push
mov
shr
clc
stc
mov
cmp
pushf
sub
test
shl
mov
pushl
pushl
jmp
push
pushf
mov
push
pushf
jmp
pushl
mov
add
jmp
add
call
shl
mov
clc
call
rcr
not
movzbl
call
xor
bsr
mov
mov
jmp
stc
clc
sub
mov
jmp
push
mov
mov
bswap
push
setb
push
setne
mov
xchg
setns
push
movzbw
push
call
pusha
pushl
mov
pushl
pushf
pushf
lea
jmp
inc
mov
pop
mov
pushf
pushl
popl
mov
movsbw
pushf
movl
movl
push
pop
movzbl
mov
mov
lea
push
inc
xor
rcr
xor
xor
xor
call
add
jmp
call
mov
jmp
cmc
bswap
mov
sub
add
push
setg
pusha
setno
mov
movb
push
mov
pushf
mov
lea
jmp
pushf
lea
jne
movsbw
mov
pusha
pushf
mov
pushf
and
mov
pushf
cmp
push
pushf
movb
lea
jne
and
lea
btr
bsr
xorb
lea
pop
push
lea
jmp
pushf
mov
call
mov
pushf
popl
pushf
pushl
popl
push
movb
movb
lea
jmp
mov
mov
call
